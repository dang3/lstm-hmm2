inc
pop
add
add
insl
sub
roll
add
lret
movsl
adc
pop
popa
out
sub
stos
incl
xor
add
pop
mov
adc
movsl
pop
lods
insl
pop
cld
pusha
out
mov
add
shlb
add
hlt
cli
xor
mov
or
push
add
mov
mov
aaa
cltd
fstps
jno
jae
inc
xchg
push
push
xor
xor
push
hlt
pop
insb
push
and
mov
pop
jmp
nop
jne
cmp
pop
mov
mov
gs
pop
jo
cltd
imul
popa
out
and
pop
out
lahf
out
mov
loope
out
outsl
jae
movsl
mov
xor
fsubl
inc
rcll
popa
push
mov
jmp
outsl
jae
adc
mov
out
xchg
imul
dec
push
mov
mov
cmpsl
out
and
jae
cs
mov
pop
pusha
out
mov
cld
repz
lock
and
jmp
adc
pop
sbb
push
xchg
pop
jo
mov
sub
pop
or
jae
pop
lods
fldenv
sbb
dec
jne
jbe
pop
jo
aad
imul
aad
mov
popa
addr16
into
pop
ret
lods
out
out
adc
hlt
ds
fstps
push
cs
cli
pop
adc
je
pop
stos
sbb
mov
sbbb
pop
or
lahf
stos
pop
sub
mov
negb
pop
pop
test
std
xchg
sub
pop
or
jge
sub
outsl
jmp
mov
or
sbb
bound
mov
jge
mov
insl
mov
pop
push
jno
je
scas
mov
jae
jne
jb
aaa
icebp
mov
mov
jne
jbe
mov
lret
test
mov
jae
jne
push
test
mov
sbb
sbb
push
jmp
jb
mov
sbb
mov
out
adc
jo
stos
fiaddl
imul
sbb
sbb
out
mov
sub
insl
stos
or
movsb
subb
jns
dec
jae
pop
aam
xchg
pop
data16
lock
and
subb
mov
into
sarb
ljmp
jno
arpl
cmpsb
fisubs
pusha
jl
pop
push
fistps
xor
sbb
loope
jb
outsb
mov
cld
fwait
mov
pop
cs
mov
mov
fisttpl
popa
out
repz
out
in
loope
push
push
loopne
popa
out
xchg
sahf
sub
push
push
xchg
out
mov
dec
mov
push
mov
and
jl
shlb
jns
popa
out
mov
pop
cs
and
pusha
and
mov
outsb
lods
mov
xchg
in
push
jmp
dec
cmp
das
cwtl
lods
js
mov
push
mov
pop
repz
adc
cmp
in
cmp
pop
mov
mov
outsb
inc
jae
data16
jo
mov
cmc
dec
mov
nop
pop
popa
fistpl
push
sbb
cmpsl
inc
popa
mov
sbb
mov
inc
jge
xchg
push
popa
ret
sbb
pop
adc
jb
pop
sbb
mov
mov
out
std
loopne
fdivs
mov
or
fisubl
cmc
outsl
jmp
mov
jno
sahf
dec
scas
mov
and
pop
inc
loope
xchg
loope
push
cwtl
push
popa
pop
xor
dec
scas
mov
jae
and
fmull
mov
jns
scas
mov
ljmp
inc
jno
pop
sbb
lods
repz
arpl
jmp
pop
popa
jae
or
push
in
je
pop
lods
fistpll
imul
mov
and
faddl
pop
popa
jae
data16
loope
mov
out
mov
lock
pop
inc
out
negb
icebp
lods
jmp
xor
lods
cld
aad
xchg
cld
xlat
cmpsl
xchg
out
pop
movsb
and
aaa
scas
outsl
in
adc
cmp
add
imulb
adc
mov
jae
push
xor
scas
mov
pop
jmp
xor
fcompl
hlt
dec
aam
mov
mov
out
mov
out
fstps
push
push
aas
cltd
sub
je
aad
nop
out
repnz
dec
jmp
push
loope
outsl
cld
lcall
push
les
cld
jmp
bound
aad
and
pop
andl
popa
out
mov
bound
cmc
pop
pop
fstps
jae
repz
jmp
jecxz
mov
sub
int
pop
jo
mov
jae
dec
sbb
pop
fstps
addr16
arpl
pop
nop
lock
jmp
and
outsl
push
and
push
lret
jb
pop
lret
mov
and
dec
push
movntq
negb
adc
lret
xor
mov
adc
lahf
mov
sbb
mov
sub
jmp
mov
jmp
data16
mov
fbstp
pop
sarl
pop
lds
cmc
data16
mov
ss
jmp
mov
fimuls
jno
xchg
jae
lcall
mulb
bound
lret
popa
out
mov
push
push
jae
push
mov
cmc
gs
out
test
xchg
faddl
mov
in
add
and
loope
pusha
out
mov
dec
popa
push
negb
test
mov
pop
popa
out
mov
pop
aaa
out
clc
mov
sub
fldenv
les
ss
enter
call
sub
lahf
pop
in
sahf
push
ljmp
repnz
lcall
loope
aam
cmp
shr
fdivr
sti
xchg
int
fs
xor
ficompl
cmp
push
jmp
sbb
out
cli
cmp
sahf
push
push
or
sbb
push
or
movsl
inc
cmpsl
loop
or
and
push
push
rcrb
push
sbb
xor
pop
jg
dec
je
scas
inc
es
dec
xchg
cmpsl
lods
insl
bound
inc
in
sub
add
shll
jecxz
sbb
fcompl
hlt
movsl
clc
jne
loopne
inc
dec
test
pusha
repz
push
dec
dec
cmpsl
dec
dec
cmp
push
jne
ficomps
pop
push
in
cmpsb
out
pop
jl
jge
testb
jb
ss
cmpsb
xor
insl
inc
pcmpeqw
cltd
stos
push
and
add
jne
cltd
push
xchg
cwtl
inc
add
cs
imul
dec
shl
enter
movsb
mov
jecxz
outsl
mov
pop
inc
das
fistl
fcomi
mov
cld
ljmp
jns
xchg
add
lret
add
adc
push
push
pop
cs
xchg
into
outsl
cmc
inc
inc
dec
fs
mov
mov
imul
push
push
jmp
shrl
shll
fimull
push
movsl
pop
ja
mov
jmp
mov
out
sbb
adc
jo
jmp
inc
inc
into
pop
dec
leave
les
mov
notb
daa
cmp
imul
pop
and
jns
xor
mov
enter
pop
cmp
in
dec
sub
shll
cmp
out
cmp
loop
xchg
scas
notl
dec
imul
fwait
pushf
lahf
out
mov
rorb
add
mov
xor
pop
add
mov
inc
lods
dec
xlat
mov
lods
gs
pop
mov
out
pop
shlb
lahf
fnop
nop
push
or
clc
data16
fnstenv
jecxz
popa
inc
mov
scas
rcr
xor
cmp
mov
iret
lods
int3
jae
lret
and
dec
inc
add
xor
aam
mov
pop
dec
por
inc
pop
call
cs
dec
repz
mov
cld
lcall
pushf
dec
or
mov
add
cmpsb
out
rcrb
scas
rclb
sbb
test
cmp
push
pop
rcrl
subl
movsl
popa
lds
scas
lahf
or
lret
out
and
cmpsl
inc
imul
mov
popf
jmp
xor
sub
pusha
push
pusha
sub
cmp
sbb
sbb
out
fwait
outsb
adc
mov
xchg
cmp
mov
pop
dec
ljmp
pop
and
rorb
notl
gs
inc
inc
pop
aam
sbb
inc
jle
mov
out
push
js
daa
pop
andb
pushf
push
jle
add
out
push
pop
mov
mov
fisttps
pop
lcall
or
dec
icebp
ja
loop
ret
pop
pop
add
push
adc
xchg
lahf
sti
mov
dec
mov
xor
jmp
mov
orb
std
push
lcall
jb
jo
addr16
stos
and
dec
es
iret
and
daa
and
pop
mov
imul
hlt
xor
inc
xor
xorb
dec
pop
int
enter
das
repz
fdivrl
inc
or
movsb
xchg
add
jmp
adc
mov
cmp
adc
sub
mov
sahf
lea
inc
popa
adc
out
bound
rol
rcrl
push
jge
mov
add
xor
jae
gs
mov
mov
data16
push
ss
pop
mov
lahf
roll
bound
popa
rcrl
xchg
pop
sub
out
mov
imul
mov
movsb
out
mov
outsl
push
popf
mov
sub
adcl
push
repnz
rolb
daa
pop
gs
and
mov
sbb
nopl
push
int3
inc
xor
push
pop
sbb
cs
xor
xlat
les
xor
pop
xchg
pop
jb
mov
les
mov
pop
insb
in
jg
adc
ds
pusha
aas
and
or
pop
out
inc
leave
pop
dec
inc
imul
and
cs
mov
lret
adc
into
les
push
cltd
sbb
cmp
fidivs
and
mov
in
pop
fstpl
test
cmp
and
dec
pop
fldt
jo
leave
ss
sbb
dec
dec
or
cmp
inc
push
iret
cmp
js
lds
testl
pop
jne
mov
mov
sub
push
andb
aaa
test
xor
and
sarb
rcrb
sub
pop
testb
and
add
sub
mov
movsb
aad
dec
fiadds
sub
mov
jp
jp
pop
inc
mov
hlt
incb
mov
ja
inc
mov
invd
jns
xor
dec
lods
dec
popa
nop
add
pop
jo
jg
mov
mov
xchg
and
xchg
movsb
add
dec
out
int3
mov
cld
nop
mov
popf
jmp
shll
pop
cmp
in
in
les
adc
sub
pop
mov
and
dec
and
popa
inc
jge
lahf
movsb
cmp
clc
mov
dec
pushl
repz
sub
pop
push
ljmp
clc
xor
popa
inc
leave
push
les
adc
out
add
push
cld
mov
sbb
sbb
daa
fldcw
rolb
aaa
es
push
mov
dec
clc
inc
test
test
in
push
cs
mov
dec
pop
jl
shlb
jge
js
stc
ss
insb
and
ljmp
pop
ds
add
sub
xchg
sbb
push
pop
in
pop
fmul
in
lret
fdivrl
popa
inc
xchg
and
dec
out
fs
jne
or
outsl
rep
pusha
sbbl
clc
out
lods
xor
sbb
iret
test
aas
out
mov
mov
xor
lods
xor
js
pop
popa
push
ret
xlat
xchg
xlat
xchg
pop
mov
mov
dec
popa
dec
add
push
xlat
mov
sbb
stos
popf
lods
idivl
mov
push
mov
pop
xchg
out
mov
mov
pop
dec
mov
aas
jae
enter
dec
stc
or
mov
pusha
xor
shll
add
push
push
xchg
push
pop
push
test
dec
data16
fbld
lods
jno
fwait
nop
loopne
dec
and
mov
and
imul
jmp
mov
pop
jge
out
mov
out
xor
ds
or
dec
fsubl
fsts
mov
pop
push
adc
mov
or
scas
xchg
pop
xor
pop
nop
dec
mov
push
push
add
lcall
xchg
cmp
loop
mov
gs
gs
jb
fisubrl
fistps
mov
out
jg
pop
sub
sub
pop
xor
jb
or
xor
add
push
xor
mov
mov
sub
int3
repnz
jo
adc
inc
mov
je
lahf
in
hlt
stos
iret
int
fwait
fs
fistl
mov
xchg
mov
cmp
and
pop
and
inc
dec
js
roll
inc
pop
and
imul
mov
mov
outsl
popa
add
sahf
movsl
jae
repnz
icebp
insb
add
push
outsb
mov
mov
nop
pop
not
push
dec
aaa
pop
mov
mov
and
int3
pop
pop
push
mov
dec
fwait
les
inc
and
jge
add
pop
lret
gs
outsl
out
xchg
loop
sarl
ficomps
shr
dec
into
lods
and
into
cli
out
cmp
shll
cmp
testb
sub
sub
pop
popl
jb
pop
pop
xchg
hlt
xlat
das
pop
mov
lods
sub
icebp
add
sub
jne
push
rcl
jne
push
push
mulb
jecxz
mov
mov
xchg
mov
sahf
cmc
pushw
mov
push
test
cwtl
lret
or
out
add
and
fidivrs
out
push
push
and
and
rcrb
push
inc
add
cs
ret
ss
daa
inc
std
leave
testl
out
adc
or
addb
xchg
push
loope
fildl
test
addr16
rcrl
or
gs
nop/reserved
nop
nop
ss
mov
clc
xlat
outsl
add
jbe
arpl
lret
sub
jg
loope
pop
pop
pop
cmp
insb
shrl
jle
pop
adc
inc
imul
loop
loope
mov
add
ficomps
sub
pusha
fcompl
jecxz
sti
pop
aad
out
adc
mov
sarl
int3
leave
sub
dec
mov
ret
jmp
insl
loopne
add
push
test
push
das
xor
lds
jle
pop
pop
pop
xor
jle
or
call
fucomi
push
sub
std
cmp
inc
cltd
imul
xor
xor
pop
fidivl
or
inc
xchg
outsb
sub
out
ja
or
mov
aam
xlat
loop
out
sub
jge
dec
dec
loop
clc
and
inc
adc
push
dec
cmpsb
xchg
stos
push
pop
mov
adc
sbb
mov
jns
xor
jo
xchg
cld
jbe
sub
jae
mov
push
pop
jle
outsb
fwait
fwait
sahf
ja
jo
push
mov
imull
fnsave
aam
out
fbstp
dec
insb
mov
cmp
pop
je
loope
movsb
test
shll
xchg
fs
sbb
jecxz
cmp
inc
xchg
inc
cmpb
mov
xchg
out
xchg
pushf
aaa
jbe
xchg
mov
js
push
pushf
loope
pop
inc
or
and
xor
scas
pusha
out
pop
shll
cmp
out
mov
orl
mov
push
jg
add
or
mov
push
popa
arpl
pop
int
cld
push
mov
pop
loop
xchg
dec
lea
sbb
add
movsl
xlat
xchg
je
bound
and
xchg
sbb
int
out
mov
cmp
dec
mov
les
sub
xchg
cmp
xchg
addr16
pop
in
mov
lock
and
in
shl
arpl
mov
in
cmp
xor
mov
and
or
or
leave
pushl
icebp
jl
aaa
repz
out
add
sbb
adc
push
mov
bound
aaa
aad
je
push
mov
push
out
sbb
mov
test
lods
sub
mov
pop
mov
mov
push
or
loopne
dec
xor
mov
add
push
jnp
and
push
push
push
inc
jbe
dec
bound
aad
outsl
aad
sbb
mov
insb
pop
cmp
mov
jp
adc
pushf
sub
xchg
or
pop
out
cmpsl
fnsave
aad
cs
shlb
inc
sub
ret
lods
lcall
or
mov
push
lock
lcall
inc
popa
outsb
in
sbb
jmp
dec
fs
mov
pop
imul
addr16
adc
test
cltd
sbb
dec
pusha
inc
lret
fwait
jmp
add
xchg
pop
push
mov
push
arpl
call
aaa
out
push
loopew
and
cmp
in
jbe
mov
out
pushf
daa
dec
pop
xchg
xor
mov
mov
adc
fs
pop
enter
ret
cmc
sbb
mov
mov
ja
inc
pop
sub
lcall
push
jge
ret
aas
sub
repz
cmpsl
push
add
out
dec
ret
shl
popa
mov
ficomps
adc
std
mov
mov
jbe
pop
mov
xor
sub
test
or
out
adc
arpl
aam
mov
sahf
jp
loop
int
fsts
sub
fcoms
popa
mov
aad
ds
std
clc
jmp
add
lret
les
popa
dec
pop
cli
or
xchg
icebp
jmp
rcr
jns
pop
into
or
cwtl
rcrb
sahf
and
mov
jne
pop
add
pusha
mov
imul
sahf
push
cmp
insl
popf
jne
mov
rol
cmp
pop
pushf
std
pop
out
mov
mov
fisubrs
pop
movsl
arpl
inc
iret
pusha
mov
push
cld
sub
and
lcall
insl
mov
fdivs
push
adc
test
jae
shr
test
fistps
out
mov
mov
test
outsl
aam
stos
test
push
pop
add
dec
lcall
mov
lods
xchg
pop
inc
sbb
lahf
sbb
data16
pop
ffreep
sub
xchg
shl
sbb
sbb
mov
push
xor
adc
mov
add
inc
push
outsb
ljmp
pop
xor
popa
jl
push
jg
add
push
imul
call
out
pop
mov
leave
shr
pop
cmpsl
btl
out
pushf
incl
movsb
sbb
lock
aaa
movsb
ja
pop
icebp
pop
dec
and
ss
dec
sub
push
sbb
icebp
out
push
lret
pop
mov
inc
xor
sbb
adc
fimuls
repz
icebp
xrelease
test
pop
sub
push
pushf
mov
mov
xchg
lahf
push
mov
xchg
loope
pop
jl
lret
pop
add
fisubs
rcl
and
lcall
movb
xor
add
xchg
pop
mov
mov
push
lcall
mov
xor
sbb
in
lret
adc
lds
xlat
mov
pop
fstpt
sub
add
popa
xlat
fstpl
adc
add
xor
mov
cmp
imul
jp
inc
dec
jnp
push
jmp
lock
fisubrl
test
adc
inc
in
mov
test
jne
cmp
pavgw
xchg
ret
cmpsl
cmc
mov
popf
dec
mov
daa
je
inc
int3
jbe
mov
mov
lds
out
test
sub
mov
pop
pop
cmp
fs
fs
out
xor
loopne
pop
mov
mov
mov
inc
daa
cmp
pusha
mov
dec
inc
xorl
cmp
cmp
dec
mov
into
sub
ljmp
pusha
or
lods
push
pop
lcall
pop
jecxz
mov
mov
popa
mov
jle
cmp
sub
mov
aaa
gs
pop
test
mov
pop
or
popa
and
out
push
pusha
jl
push
fucomp
inc
jge,pt
lds
jmp
sahf
mov
test
mov
cmp
rcrl
pop
shl
cmp
inc
push
test
bound
lea
xor
pop
imul
mov
pop
daa
test
jl
add
xchg
sbb
dec
or
out
in
sbb
sbb
fidivs
push
dec
dec
and
cmp
pop
dec
and
stos
xchg
das
movsb
and
mov
lret
dec
mov
cmp
adc
negb
ds
mov
addr16
xchg
lea
imul
std
outsl
out
add
stos
jl
push
xchg
mov
daa
pop
fldcw
mov
subb
mov
icebp
push
xchg
cs
mov
xor
daa
jmp
mov
pop
data16
stos
call
fsts
lahf
xchg
arpl
cmpsl
jo
jnp
and
xor
jmp
cltd
pop
out
adc
inc
jo
popa
sub
iret
pusha
pop
movsb
add
adc
in
movsl
lret
xchg
fsubl
loope
cmpsl
dec
pop
leave
pop
push
sbb
subb
mov
jge
rcl
pop
xor
cmp
outsl
pusha
fwait
cmc
dec
addr16
and
gs
push
fists
cmp
cld
das
mov
ret
pop
shll
bound
aad
jmp
sbbb
fldcw
mov
testl
push
les
addr16
rol
rcrb
sub
cmp
adc
mov
pcmpeqb
pop
stos
je
xchg
mov
lret
jp
add
gs
jp
push
push
or
shll
in
xchg
int
call
pop
cmpsl
jb
out
dec
inc
pop
mov
mov
mull
dec
jl
sti
idivl
inc
sub
test
dec
inc
mov
mov
daa
insl
mov
xchg
pop
outsb
test
aam
sub
add
dec
pop
outsl
call
jecxz
loope
and
push
inc
in
push
imul
mov
mov
lods
mov
adc
cs
cmp
pop
push
ret
movsl
sub
mov
insl
stos
loop
pop
mov
jp
orb
sbbb
push
push
sbb
dec
leave
mov
in
inc
push
cmp
test
jmp
push
xchg
imul
xlat
xor
pusha
xor
xlat
adc
out
mov
fwait
sub
pusha
es
lahf
push
sub
mov
addl
pusha
fbstp
ds
xchg
xchg
mov
pushf
inc
xchg
jecxz
test
fxch
clc
add
xchg
sbb
xchg
mov
add
xor
sbbl
cs
xchg
jns
cmc
lahf
pop
test
jmp
stos
outsl
cmp
ja
movsb
sub
into
jge
mov
jmp
xor
jmp
pusha
pusha
not
ja
xchg
movd
daa
push
idivl
scas
arpl
mov
mov
xchg
add
pop
jge
lock
stos
mov
or
cmp
popa
and
cmpsb
mov
orb
jmp
sub
pusha
pop
loop
iret
xchg
mov
jmp
test
scas
mov
sbb
cmp
push
sbb
loopne
mov
sbb
pop
xor
mulb
and
mov
nop
jb
pop
sbb
mov
xchg
add
sbb
mov
mov
fmull
mov
jae
sub
add
mov
pop
dec
pop
xchg
jb
push
inc
movsl
lock
call
fcmove
sbb
sarb
test
shrl
fistpll
cli
sub
sbb
insl
out
mov
cmp
xchg
and
fidivrs
stos
and
pop
icebp
sub
pop
pop
insl
mov
popa
jmp
sarb
cmp
mov
fmuls
adcl
cmp
dec
jecxz
or
out
dec
dec
lret
mov
sbb
push
push
pop
inc
subl
sbb
jecxz
std
xchg
popf
xchg
xchg
andl
inc
sbb
inc
xchg
xor
sbb
push
out
jmp
daa
add
das
inc
out
rcll
pop
shll
jp
sahf
bound
cltd
loop
test
je
cld
fidivs
add
aas
aaa
mov
xchg
add
fisubl
adc
sbb
adc
mov
data16
outsl
jmp
fs
cltd
in
sbb
dec
scas
cmp
mov
mov
mov
sub
mov
data16
aas
imul
mov
pop
add
sbb
loope
dec
sub
jecxz
and
mov
push
adc
pop
pop
push
push
cmp
add
or
pusha
sbb
aaa
or
sbb
in
stos
test
out
jg
lahf
mov
adc
xchg
pop
xor
idivl
loope
mov
sbb
lock
inc
add
addr16
rcll
insb
mov
jb
call
sbb
mov
pop
outsb
mov
jg
xchg
xor
pop
mov
shlb
aam
sahf
outsl
xor
jmp
mov
xchg
pop
pushf
pop
mov
xchg
mov
mov
fiadds
sub
jmp
pop
out
push
shrl
sbbl
int3
divl
mov
jl
popa
jmp
fidivrs
subb
sub
lock
adc
call
ret
mov
dec
xor
jmp
sub
push
out
mov
sub
add
mov
xor
mov
jle
inc
enter
mov
loope
dec
aad
insb
into
pusha
sbb
xchg
scas
out
xlat
jnp
xor
adc
mov
stc
push
divl
pop
pop
stos
loope
sub
fidivs
add
jge
jmp
dec
pop
push
movsl
cltd
mov
loope
jb
and
mov
out
dec
lea
xchg
mov
sub
outsb
movsl
xor
pause
loope
out
inc
jmp
and
sub
jbe
push
pop
adc
ror
xor
pop
jp
mov
pop
xchg
dec
idivb
in
mov
or
xor
push
mov
jp
or
pop
lea
in
pop
mov
out
subb
mov
mov
sbb
cmp
gs
fidivl
rcrl
adc
dec
imul
jne
adc
in
push
outsb
jne
cmp
lock
pusha
cmp
add
sub
add
mov
or
lcall
addr16
dec
jmp
repnz
sbb
loopne
scas
pop
sbb
lods
lock
addl
leave
sub
popa
pcmpeqd
adc
je
mov
push
rorb
icebp
inc
popa
aam
mov
add
inc
lret
mov
outsl
sbb
jb
inc
ljmp
push
and
lods
cwtl
xlat
outsb
pop
push
test
jge
cmpsb
rcll
inc
fstps
out
or
out
push
mov
out
jae
inc
mov
pop
loope
loopne
mov
das
xlat
sub
stc
fwait
sub
cmp
mov
push
jecxz
dec
push
xor
adc
scas
push
xchg
addb
ljmp
sbb
cmpsb
lods
mov
jge
loop
xlat
inc
pop
mov
sbb
and
das
push
mov
jmp
xchg
dec
add
xchg
rorb
fildl
les
jle
hlt
and
push
pop
dec
int3
out
push
cmp
or
xlat
pusha
lock
cmp
dec
loope
pusha
xor
addl
push
leave
cmp
xchg
out
insl
gs
fmull
xor
push
leave
iret
inc
les
pop
lahf
sbb
cld
pusha
mov
dec
lret
push
fucomp
inc
cmpsl
cwtl
jge
inc
fcoms
jecxz
jo
sub
out
inc
cmp
mov
push
dec
mov
arpl
ds
fisttps
sub
add
mov
inc
mov
data16
adc
aad
mov
push
or
push
pop
jb
mov
jg
or
pop
cmp
sub
xorb
and
sarl
out
mov
xchg
ret
mov
out
sbb
pop
push
xlat
sub
jae
outsb
push
data16
sub
push
aaa
pop
jge
cmpsl
dec
add
sti
pop
cmp
jb
mov
imul
ficoms
orb
sbbb
int3
mov
loope
inc
sub
into
out
pushf
ret
push
cs
aaa
push
push
fucomip
inc
or
inc
cwtl
cmp
pop
mov
adc
xor
mov
sub
push
mov
mov
push
dec
fcmove
or
sbb
mov
mov
push
loope
lcall
xor
cmp
inc
test
lock
lock
popa
adc
fbstp
cmpb
inc
movsb
sub
ss
adc
cmc
hlt
fwait
repz
addb
leave
js
out
and
add
lret
xor
add
jmp
fs
pop
sub
pusha
adcl
mov
add
and
and
gs
data16
dec
shl
xchg
daa
ja
fdivrl
inc
or
pusha
pop
lock
push
js
inc
mov
mov
jmp
and
xchg
cmc
repnz
fisubl
test
test
loop
stc
add
pop
out
jecxz
shll
cmp
jnp
adc
jno
and
and
mov
jo
into
mov
ljmp
cmp
insb
xchg
stos
arpl
int3
stos
notb
clc
popa
pop
dec
jno
mov
nop
in
pop
enter
xchg
fcmovu
pushf
add
xor
cltd
mov
shl
mov
imul
out
shll
and
lods
stos
mov
cmpsl
out
cmpsl
popa
daa
cmp
ljmp
sbb
push
es
test
into
and
mov
stos
jg
out
fst
pop
mov
pop
lds
pusha
repnz
xchg
mov
lcall
pop
xchg
in
orb
das
repnz
into
mov
push
xlat
outsl
ret
jecxz
movsl
or
popa
loopne
divl
sbb
shr
and
push
loope
lret
enter
mov
and
jmp
addl
mov
mov
data16
mov
push
push
lock
cmc
das
lcall
mov
mov
pop
adc
adc
adc
sub
push
sbb
mov
sbb
and
ficoms
adc
arpl
lods
stos
cmp
or
push
push
bound
aas
dec
sub
mov
dec
jmp
cmp
loopne
aam
add
icebp
in
movl
xchg
cmp
cmp
lret
sbb
or
nop
mull
ljmp
push
dec
push
or
dec
es
xchg
mov
pop
push
pushf
pop
jne
or
dec
frstor
dec
aas
cltd
lods
lahf
popa
lret
pop
in
push
xchg
dec
xor
push
or
stc
lods
mov
addr16
out
js
sbb
incl
push
and
xchg
and
mov
int
jmp
scas
push
jbe
xchg
inc
xor
rcl
push
nop
in
cmp
outsl
mov
cmp
inc
outsb
dec
test
sti
add
loope
jmp
lea
push
aaa
lds
mov
jbe
ret
outsb
out
rcl
mov
add
and
cmp
xor
imul
out
pop
cmp
mov
inc
dec
xor
lods
jmp
push
int
mov
pusha
add
jb
jmp
dec
notl
mov
and
popf
push
mov
lret
sub
shl
mov
fisubrs
pop
pop
xchg
sbb
or
fdivrp
push
hlt
andl
jae
push
mov
lds
rcrb
lea
sub
cli
pushf
or
push
xor
testb
jmp
shll
fldt
mov
sti
in
lods
out
addl
sbb
rcr
lock
test
std
lea
xor
xor
sar
mov
loope
xor
insb
in
shlb
adc
adc
mov
pop
sahf
out
pushf
dec
inc
xor
pusha
jb
mov
sbb
pop
xor
rcr
and
or
mov
out
dec
fisubs
xchg
mov
and
or
testl
jmp
jb
fyl2xp1
cmp
mov
and
repnz
popa
fs
int3
daa
enter
out
add
and
sbb
xchg
sub
sahf
mov
repz
push
stc
and
mov
push
popa
xor
mov
out
pop
adc
mov
or
mov
mov
das
mov
and
pusha
sub
pop
out
repz
lea
adc
and
mov
push
out
in
insl
pop
outsl
loope
stc
test
add
rcr
in
mov
subb
jae
mov
cmp
daa
faddl
lock
and
dec
mov
mov
add
adc
or
inc
dec
and
mov
mov
fs
inc
call
das
loop
dec
mov
outsl
push
ret
inc
sbb
pusha
insb
push
mov
jne
jmp
bound
loopne
mov
fsubrl
inc
arpl
repz
sub
xchg
repz
aad
add
mov
jns
jp
inc
inc
or
ret
sbbb
mov
push
roll
js,pn
dec
lock
popa
jp
sbb
ljmp
insb
sbb
out
xchg
push
bound
mov
xchg
inc
pop
add
xor
cmp
outsb
rcrb
inc
test
xchg
dec
out
fwait
mov
pop
jmp
xorl
out
mov
fwait
mov
mov
pop
andb
sbb
xor
pusha
jge
lock
cmp
push
fcoms
inc
and
mov
iret
sti
fstpl
lock
lahf
mov
mov
arpl
sahf
mov
mov
mov
pop
cmp
jbe
mov
fstps
and
adc
popa
iret
jg
je
mov
iret
add
jbe
xor
sbb
jns
dec
lds
outsb
jg
jg
mov
jl
inc
push
pop
repz
pop
pop
fstl
lea
movsb
pop
test
or
mov
mov
jb
test
xor
test
add
sub
shll
xchg
cmp
jnp
test
lahf
out
and
ret
sub
sub
mov
cld
mov
ds
sarb
rcrb
push
and
ja
and
pusha
xchg
insl
adc
sub
arpl
or
loope
decb
pusha
out
and
out
add
add
jg
es
cmp
push
jb
cmp
into
loopne
adc
mov
cmp
pop
data16
and
dec
mov
and
xchg
pop
negb
pushf
arpl
adc
fistps
imul
ret
mov
ret
mov
lds
ljmp
jg
imul
dec
lcall
or
or
xchg
cmp
sbb
inc
add
cmpsb
jnp
out
lahf
stc
test
movsl
lret
pusha
in
out
adc
or
adc
adc
xor
insl
pop
push
cmc
in
sti
mov
xor
cld
or
out
pop
mov
lods
fimull
rorb
jae
push
cmp
mov
loopne
gs
jne
rorb
out
inc
div
fcom
test
call
jno
test
xchg
jbe
popf
es
scas
mov
int3
das
cmp
insl
out
cmp
lahf
add
sbb
popa
push
mov
loopne
pop
div
pop
nop
sub
and
adc
ss
frstor
test
xor
jbe
cmp
jnp
mov
push
xorl
cmpsb
mov
rol
test
pusha
mov
data16
idivb
into
scas
faddl
jle
mov
out
and
mov
cltd
stos
lds
mov
in
pop
push
adc
pcmpgtb
xchg
jo
add
cmpsb
prefetch
xor
rcll
clc
pusha
mov
pop
mov
int3
sarb
mov
data16
pusha
lods
stos
fdivrl
dec
adc
imul
cmp
ljmp
cwtl
xchg
pop
push
fbstp
jmp
pop
xor
jnp
mov
adc
lods
gs
cs
fs
in
aam
xchg
mov
rcll
popa
inc
jno
jnp
cli
mov
imul
add
rorl
loope
stc
push
push
adcl
mov
addr16
xor
out
rclb
ljmp
pop
dec
inc
pop
or
movsl
or
or
inc
mov
xor
add
jmp
daa
cmp
fwait
outsb
pop
in
mov
sub
je
pop
rol
loope
rcll
mov
push
movsl
in
xchg
out
cmp
jb
orl
lods
and
sub
ret
xchg
and
push
outsb
dec
pop
or
mov
pop
cmp
in
cmp
sbb
ss
out
lcall
js
xor
and
jo
mov
jno
outsb
mov
ljmp
arpl
clc
add
push
shlb
ja
sbb
test
in
add
cltd
scas
xchg
out
sub
stos
repnz
imul
cltd
pop
ja
pop
mov
cwtl
scas
mov
out
aad
out
mov
lret
out
push
fs
loop
adc
pop
push
dec
pop
faddl
mov
fisttps
mov
sahf
popf
outsb
pusha
xchg
mov
jo
cmp
xchg
or
pop
stc
mov
mov
push
dec
push
popa
lret
cs
dec
repz
hlt
add
loope
push
pop
pop
ss
adc
pop
sbb
lcall
or
xchg
adc
int
jl
pusha
jno
insb
cmp
mov
push
out
jecxz
lea
mov
mov
cmp
out
or
mov
sbb
cwtl
fdiv
ljmp
aas
test
gs
inc
arpl
stos
shll
push
cmpsl
test
mov
mov
cltd
jecxz
test
pop
lods
push
adc
sbb
push
dec
fldenv
test
enter
sub
mov
lcall
push
rorl
pop
mov
outsb
popl
pusha
in
pop
cmp
inc
movsl
mov
les
insb
das
push
push
xor
nop
cmpsb
jo
push
jle
mov
pop
sbb
fisubl
popa
lcall
iret
jecxz
jle
out
dec
pop
outsl
clc
sub
sahf
mov
scas
xor
sbb
pusha
xor
data16
pop
popa
mov
fisubs
lret
push
push
push
imul
insl
and
mov
out
sub
rcll
clc
fs
std
pop
outsb
pop
pop
popa
pop
insb
test
cmc
andb
jo
out
mov
push
jae
pop
add
dec
int
push
and
push
test
icebp
repnz
in
bound
pushf
inc
xor
in
or
pop
inc
mov
ja
orl
outsb
popf
lods
dec
daa
test
add
loopne
out
push
ss
rcl
clc
cs
dec
xchg
inc
inc
sub
mov
pop
lahf
scas
loopne
push
hlt
mov
push
inc
fcomip
iret
scas
jle
add
mov
ret
dec
sub
mov
and
mul
mov
push
jmp
and
fidivs
xchg
test
aas
shr
sub
popa
ret
ss
mov
out
ret
xchg
scas
sbb
push
cwtl
xor
loopne
xor
inc
sahf
xchg
pushf
sti
sub
inc
arpl
imul
loop
inc
fidivl
ss
and
or
pop
jo
stc
out
pop
xor
add
icebp
mov
mov
test
sub
arpl
mov
push
mov
mov
mov
xchg
fisubs
mov
mov
push
add
inc
and
pop
fldt
inc
push
aad
xchg
cld
or
jmp
dec
jo
pop
mov
and
in
sub
add
in
out
sub
rcll
pop
aaa
or
shlb
dec
cmp
dec
add
cld
or
jno
out
in
iret
icebp
jmp
in
pop
fwait
mov
xchg
out
out
ret
shll
daa
sub
jno
add
js
js
insb
ret
pop
ljmp
sbb
popf
das
add
into
mov
cwtl
pop
shll
pop
repz
gs
dec
sarb
xor
push
dec
mov
xor
mov
xchg
pusha
jno
mov
pusha
inc
out
push
lea
inc
std
roll
loop
outsb
lcall
movsb
lret
mov
pop
js
mov
push
das
lea
and
push
fndisi(8087
arpl
jo
out
stc
jmp
mov
loopne
jle
jmp
pop
mov
int3
movsb
enter
adc
pop
mov
and
sub
pop
imul
xchg
jne
push
adc
out
test
dec
mov
daa
lock
popl
cmc
or
dec
xor
push
lea
dec
sahf
out
scas
hlt
aas
and
pushf
sbb
pop
shrl
lods
mov
loopne
push
pop
ja
dec
ret
mov
mov
jnp
cld
cltd
arpl
in
cmpsb
and
or
sub
test
mov
pop
dec
aas
divb
add
xchg
pop
fadds
bound
jp
sti
sbb
rorb
push
adc
xor
stc
enter
leave
cmpsl
mov
mov
popa
stos
std
xchg
pop
bound
ja
out
or
sbb
je
pop
dec
int3
js
arpl
pusha
jns
pop
outsl
arpl
adc
cmp
adc
cmp
pop
aam
leave
stos
jno
jecxz
popf
scas
mov
mov
mov
mov
fdivrl
in
inc
sbb
out
rcrb
negl
mov
jno
xchg
dec
pop
roll
addb
mov
sub
or
jecxz
dec
in
pop
cmpsb
xor
test
shll
jo
stc
inc
mov
cmp
mov
xchg
arpl
sub
out
xlat
popf
mov
cmp
aas
mov
pop
ds
inc
aam
push
mov
dec
inc
jmp
cltd
inc
inc
mov
inc
out
mov
adc
jo
add
adc
push
inc
popa
or
jo
xor
call
icebp
sub
xchg
in
and
push
fcmovb
cmc
enter
ss
push
out
push
enter
ds
stc
sub
adc
popf
pop
push
xchg
mov
je
sbb
mov
xor
test
dec
cmc
mov
mov
bound
call
inc
lcall
jmp
cmc
xchg
test
jo
mov
pop
sbb
loopne
in
pop
xlat
dec
jns
out
mov
xchg
test
stos
aad
push
dec
addl
out
mov
pop
in
insl
je
add
mov
pop
cli
and
daa
mov
cmpsb
adc
mov
jle
cmp
jno
test
cmp
movsb
xchg
repz
lcall
pop
or
fbld
ss
dec
dec
popa
add
inc
std
and
pop
aas
test
mov
outsb
aas
xchg
jp
sub
mov
loope
outsb
pop
sub
adc
cmp
repnz
shl
push
and
xchg
xor
pop
insl
pushf
shlb
add
fadd
mov
mov
mov
sbb
jg
shl
ss
cli
pusha
jb
adc
cmp
pop
fsubr
adc
xchg
hlt
mov
movl
mov
mov
imul
fwait
push
lods
push
lds
push
jge
xlat
cmp
push
mov
sub
movsl
sub
sub
xchg
or
daa
inc
movsl
push
testb
pop
scas
ja
movsb
inc
cmpb
stc
sub
bound
push
pop
inc
arpl
fs
mov
pop
stc
imulb
xor
divl
in
dec
inc
out
das
adc
pushw
lahf
mov
mov
push
leave
stos
test
pop
rclb
adc
mull
loop
mov
outsl
mov
mov
fbld
dec
rcr
lock
call
inc
testb
js
mov
mov
imul
push
outsb
lock
push
jbe
or
xor
aad
sub
sub
fisttps
pop
mov
inc
loope
and
push
pop
fsubs
test
fiadds
jne
repnz
gs
push
ds
out
mov
in
mov
sbb
ss
mov
jnp
mov
mov
jne
pop
dec
mov
es
mov
pop
stc
jo
mov
cmpsb
and
gs
jp
mov
pusha
rcrl
pop
shrl
push
loope
pop
pop
mov
jge
pop
pushf
pop
push
xorb
pop
xor
cli
push
pushf
push
mov
dec
push
outsb
and
add
sub
jecxz
cwtl
inc
mov
mov
aam
cmpsl
xchg
pop
dec
cs
popf
dec
inc
loopne
adc
test
fiadds
mov
mov
or
and
scas
loopne
call
add
adc
mov
dec
mov
insb
stc
aaa
imul
mov
nop
insl
mov
push
pop
stos
cmpsb
pop
lcall
xchg
popa
scas
xchg
ret
mov
and
mov
pop
movb
gs
shl
cltd
lret
sbb
lret
mov
push
les
jbe
jle
ret
in
fnstenv
xchg
sbb
stc
inc
dec
cmp
insl
int
cltd
ja
ror
pop
and
mov
sbb
aas
add
sub
pop
mov
jbe
add
ja
and
dec
and
sbb
outsb
mov
pusha
sarb
repz
or
pusha
sti
and
pop
sub
and
rcrb
dec
pop
lret
or
cltd
out
aad
pusha
mov
dec
pop
inc
imul
out
mov
xor
inc
sbb
or
jb
pop
sbb
mov
movsb
scas
mov
bnd
sbbb
dec
push
adc
inc
shll
push
and
in
in
fs
test
jbe
mov
or
or
cmpsb
pop
push
dec
leave
and
push
fsubrs
fcmovnu
orl
push
fsubrp
jp
pop
jnp
push
pop
inc
adc
sub
mov
js
pop
xor
popa
xor
push
icebp
mov
rorb
cltd
repnz
aaa
and
mov
aad
inc
mov
adcb
pop
mov
ss
inc
dec
pop
sbb
mov
mov
add
inc
call
pop
cmp
dec
sbb
in
add
sub
mov
test
pop
mov
outsl
aam
out
mov
clc
dec
ficoml
sahf
stc
mov
out
bound
cli
fisubrs
mov
jg
pop
lods
or
xchg
jl
sub
and
fistps
in
pop
push
insb
or
mov
push
mov
cmp
xor
js
or
je
hlt
sbb
or
lock
aas
std
jns
pop
mov
dec
flds
pop
fnstenv
daa
mull
sbb
push
int
adc
jno
mov
mov
jo
mov
xor
push
mov
arpl
inc
jmp
es
mov
pop
sti
push
cld
mov
pop
push
mov
adc
xlat
xor
in
xor
scas
shlb
mov
dec
dec
dec
aam
sub
push
lods
addr16
cmp
jne
push
pop
dec
sbb
imull
jns
or
test
jmp
push
add
and
outsb
add
out
dec
fidivrs
push
and
stos
jmp
dec
adc
add
out
and
out
add
sbb
push
andl
push
pop
dec
inc
arpl
jns
dec
popa
int3
into
cs
loop
jecxz
out
mov
sub
imull
nop
pusha
xor
sarb
dec
mov
scas
shll
mov
and
push
in
push
outsl
inc
leave
pop
xchg
xchg
aaa
mov
lcallw
mov
push
jne
int
fldenv
lds
or
pop
lahf
subb
popa
jle
stc
aam
sub
sbb
lock
mov
sti
sbb
push
mov
jmp
out
xor
jl
pusha
inc
mov
mov
push
sub
pushf
push
dec
adc
es
je
dec
pop
popa
lret
xchg
pop
lea
insl
cltd
pop
push
scas
lock
outsb
mov
sub
out
repz
mov
cmpsb
adc
mov
dec
sbb
lahf
js
mov
xchg
and
aad
rolb
or
lock
or
lcall
imul
xchg
mov
and
scas
loopne
sbb
out
aas
cld
dec
jge
dec
mov
or
pop
add
jecxz
jp
sbb
subl
cmp
lods
cli
mov
pop
pop
dec
push
push
popa
in
ret
addr16
scas
pop
out
out
push
jl
and
lds
mov
and
adc
xchg
ds
sub
or
adc
dec
dec
and
xchg
cmc
addl
shlb
jl
scas
pusha
or
mov
push
addr16
xor
mov
jo
pop
scas
xor
xchg
pop
pop
xchg
repnz
push
jge
scas
sub
mov
shl
lds
lret
pusha
xorb
inc
movsl
lahf
repz
lods
and
mov
mov
mov
pop
pop
shld
xchg
pop
mov
rcll
jnp
cld
out
xchg
xor
imul
test
jmp
arpl
or
rol
mov
mov
cmp
adc
out
cmc
xor
mov
inc
add
mov
mov
or
xor
push
jb
jns
push
and
int
inc
mov
mov
std
lret
mov
xor
and
rclb
iret
dec
pop
xor
cmp
jecxz
xchg
mov
cmpl
sti
or
jl
fst
pop
cwtl
fwait
pop
inc
pop
and
popa
pushf
dec
pop
xor
jnp
int3
out
or
xchg
sub
adc
sbb
pop
repz
pop
adc
push
add
push
push
inc
popa
push
push
inc
aam
imul
movsb
pusha
xchg
mov
in
pop
imul
rorb
pushf
cltd
imul
mov
incb
outsb
push
pop
insb
movsb
mov
mov
lcall
out
sbb
jae
int
inc
xchg
sub
jbe
popa
test
mov
push
dec
and
les
pop
xor
ja
or
je
push
fwait
pop
in
fisubs
adc
jbe
sub
push
out
lcall
test
sbb
fildll
jmp
mov
pop
sub
dec
repz
push
or
sub
sahf
fcoml
popa
jns
dec
pop
sbb
icebp
or
lret
add
sbb
push
insl
xchg
jns
mov
decb
sahf
xor
bnd
into
dec
jbe
xchg
and
ss
in
outsb
fdivs
push
pop
out
add
add
pop
fisttpll
sub
bound
les
repnz
mov
cmp
movsb
mov
add
daa
lds
in
push
inc
inc
dec
mov
pop
mov
fwait
pop
nop
bnd
lcall
andb
fistpll
out
int
inc
adc
nop
push
and
push
out
xchg
xor
out
rol
xchg
movsl
adc
jecxz
icebp
push
or
or
cli
mov
pop
pop
js
dec
mov
adc
add
jbe
shll
mov
mov
addr16
insb
mov
xchg
xor
xchg
mov
fists
jl
shr
jb
lret
adcb
adc
rcrl
popa
loope
lods
insb
lea
mov
popa
mov
mov
pop
insl
lods
sub
ss
cs
and
sbb
jb
pop
repnz
nop
outsl
pop
push
sahf
mov
xor
cmp
pop
stos
out
pusha
rol
push
xchg
xor
mov
cmpsb
scas
or
lahf
jle
mov
mov
mov
pop
mov
and
add
xchg
push
pop
jge
pop
daa
aam
mov
pusha
shrb
mov
ds
pop
outsb
ljmp
es
mov
aam
push
add
insl
ja
pop
pop
jb
add
cmpsl
push
sbb
sbb
push
out
jle
cmp
pop
push
xlat
pop
mov
pop
xchg
bound
dec
lods
pop
push
push
enter
mov
and
or
pop
inc
jl
out
pop
aad
addr16
and
jecxz
xchg
pusha
aam
xlat
lret
inc
popa
or
add
fidivrl
adc
inc
shrb
mov
sub
cmpsl
scas
roll
outsb
out
mov
in
hlt
scas
inc
xor
into
movsb
in
out
mov
out
pop
jns
fists
sahf
mov
xor
xchg
push
test
cmpsb
fldl
ret
sbb
dec
jnp
pop
pop
cmp
aas
ret
das
stos
or
imul
rclb
call
sub
shlb
mov
jbe
xchg
ja
push
xchg
ljmp
add
mov
das
push
in
incb
push
xchg
and
out
push
push
inc
cmpsb
push
push
das
repz
pop
scas
sbb
push
in
fdivr
out
rcrl
js
aam
xchg
je
pop
adc
fidivrs
bound
add
fistl
xor
movsb
and
pop
dec
jnp
pop
mov
cmpsl
or
adc
push
sub
mov
popf
push
ret
hlt
xchg
sahf
mov
pop
daa
mov
lods
dec
aad
push
mov
iret
pop
jbe
push
and
sbb
and
pop
push
in
jle
into
inc
cmp
fldenv
sarb
mov
push
pop
js
and
movsb
das
push
sbb
dec
gs
cwtl
jo
pop
push
sti
rorl
push
repnz
inc
loop
xchg
pop
jb
sbb
mov
imul
mov
cmp
leave
mov
inc
aam
maxps
pop
lods
je
xchg
and
xchg
cmp
pop
jne
add
mov
pop
test
push
pop
cmp
mov
mov
out
adc
movsl
mov
lea
inc
sarl
mov
mov
out
lcall
bound
or
daa
dec
call
pop
mov
insl
cmpsb
out
out
lock
cs
mov
std
xor
out
dec
cmp
sub
test
roll
mov
mov
scas
mov
mov
outsb
jecxz
mov
inc
pushl
mov
sahf
pusha
scas
addr16
pop
xchg
cmpsl
cld
xlat
fwait
mov
add
push
xchg
fsubrs
sub
or
push
dec
xchg
mov
shll
shlb
ja
out
mov
mov
mov
push
ja
add
sbb
push
popa
xchg
inc
mov
test
inc
xchg
mov
stos
mov
rcll
mov
lret
ljmp
xchg
test
lds
cmp
add
xchg
gs
lock
test
cmp
stos
outsb
repz
lea
jmp
leave
shlb
shll
pop
cli
dec
sub
pop
cmp
dec
push
adc
enter
ja
and
lods
popf
adc
lcall
or
sahf
fmul
cmp
and
lock
fidivrs
in
mov
popa
mov
fmull
pop
bound
mov
outsb
or
cmp
rcr
mov
pusha
nop
stos
and
and
pop
int3
fcmove
cmp
pusha
dec
jg
mov
out
popf
in
sbb
sahf
mov
nop
insb
loope
int
jg
mov
pop
pop
leave
rcrl
dec
mov
mov
mov
pusha
idivb
and
out
mov
lahf
test
mov
divb
js
fisubs
out
and
sbb
adc
push
lock
daa
cmp
sub
in
sahf
arpl
int3
mov
or
push
clc
xchg
inc
pop
jns
cld
mov
pop
sti
push
ds
insl
jno
ds
mov
sahf
lahf
sub
subl
jp
cmp
push
dec
aas
mov
cmp
ja
mov
push
out
pop
xchg
jb
addr16
jg
xchg
jmp
mov
sahf
fstpl
push
mov
sub
pop
sti
sub
or
xlat
nop
mov
mov
mov
or
loop
cs
cli
xchg
out
adc
roll
inc
pop
stos
xchg
mov
imul
mov
pop
sbb
and
mov
inc
cwtl
mov
pop
push
jmp
push
jnp
inc
mov
rol
negl
sub
adc
cmp
cld
mov
daa
push
cmpsl
and
sti
push
ret
je
adc
push
lock
mov
and
dec
cmp
cmp
pusha
scas
lret
lock
pop
fbld
mov
ds
cmp
test
push
lods
pushf
andl
adc
xlat
pop
dec
cmp
adc
ficoms
mov
xchg
jb
popaw
xor
scas
mov
push
ja
sub
mov
jno
sbb
or
jg
fs
add
fisubs
out
lret
sub
xor
fsubrs
push
negl
or
lcall
stos
dec
add
pushl
jp
sbb
gs
js
sub
sbb
or
sub
outsl
cmp
sti
jo
out
sbb
add
cmp
mov
std
or
or
cmc
sbbl
repnz
push
test
jnp
mov
cltd
dec
push
pop
adc
outsl
fdivrp
adc
xorl
pop
inc
ja
push
xlat
repnz
out
rorl
leave
ja
inc
dec
out
les
out
mov
cmpsl
ja
daa
in
mov
xlat
jae
loope
in
test
jge
js
cli
push
out
pusha
xchg
add
xor
jmp
fcompl
add
add
and
mov
pop
jb
cmpsb
fldenv
sub
das
outsl
mov
or
subl
inc
bound
push
dec
cwtl
lcall
sub
mov
xor
lret
pusha
mov
dec
sub
fisttps
fimull
mov
or
jbe
fnsave
inc
hlt
shlb
pop
dec
fiadds
xlat
or
push
mov
dec
addb
dec
pop
lahf
dec
mov
cs
pusha
and
test
mov
cld
into
sbb
xor
shlw
call
mov
pusha
pop
or
mov
mov
mov
popa
loop
xorl
arpl
xchg
push
dec
shlb
sub
pop
push
nop
gs
fistpll
inc
addr16
inc
ret
cmp
lcall
je
sbb
sbb
cltd
and
pop
pop
dec
out
jno
sub
jns
rorl
mov
pop
cli
mov
pop
jmp
dec
int3
imul
mov
std
inc
pop
mov
mov
add
addl
adc
mul
ficompl
fdivl
jae
inc
pop
jmp
push
add
pushf
imul
outsb
adc
xchg
xchg
and
pop
fsubrl
mov
int
mov
jne
jp
loopne
pop
daa
popa
inc
mov
dec
ja
out
in
jecxz
cmpsl
jns
mov
popa
dec
iret
or
xchg
addr16
inc
add
mov
clc
or
out
pop
adc
iret
xlat
out
push
test
ljmp
jne
pusha
in
fwait
cmp
in
add
out
sub
xchg
repz
adc
aad
mov
pop
test
fstps
out
xchg
jne
add
sub
aas
test
enter
in
mov
or
inc
xchg
push
popa
sbb
leave
loope
xlat
sbbl
cmp
sti
nop
xchg
shlb
scas
push
sub
aam
ret
dec
mov
mov
nop
adc
out
test
adc
mov
jge
aad
mov
lock
fnsave
ror
xchg
xor
leave
xor
xchg
inc
data16
mov
fstpl
jmp
fnstenv
mov
int3
adc
jns
adc
fistl
sti
cmp
fmull
inc
jbe
inc
pop
pop
mov
adc
adc
out
in
outsb
ss
sbb
sbbl
aaa
mov
cltd
inc
js
imul
ja
dec
call
lods
pop
push
outsb
or
cmp
orl
adc
fimull
pop
fwait
lock
enter
xchg
enter
jg
add
xchg
pop
adc
test
loope
cwtl
mov
sahf
sub
ret
sti
lret
dec
push
push
cmp
test
pop
fsubrs
mov
insb
in
out
sbb
into
sub
mov
loop
ss
out
dec
aad
ljmp
ficompl
xchg
jg
out
pop
popf
dec
sahf
mov
sub
inc
repnz
push
out
sbb
int
loope
test
mov
sti
xchg
xor
pop
push
mov
jge
add
mov
clc
rcll
pop
lahf
daa
ds
mov
bound
outsb
jb
leave
sbbb
xor
repnz
and
mov
out
xchg
sbbb
sahf
push
fistps
je
ret
mov
inc
cli
inc
xchg
push
mov
in
jne
rcll
mov
adc
jae
sarl
outsb
outsl
push
jge
stos
inc
mov
mov
sbb
cltd
stos
mov
pop
insb
fidivl
int
adc
pop
test
in
adc
push
sub
jnp
pop
loop
cmp
loop
pop
push
inc
jle
push
mov
lcall
inc
into
mov
sub
push
insb
and
sti
loopne
es
adcb
addr16
lcall
add
pop
enter
push
mov
dec
and
and
fstpl
sti
leave
mul
jo
andl
cli
jge
out
and
push
mov
and
pop
je
add
mov
xor
pop
icebp
dec
xor
push
insb
push
cmc
addr16
push
and
dec
hlt
and
dec
popa
jp
stos
ja
pop
sub
test
jg
adc
dec
mov
pop
imul
xchg
into
mov
lahf
lcall
call
ret
int3
mov
dec
mov
enter
pop
sub
mov
sbb
and
pop
sub
fwait
mov
sub
cmp
sub
pop
movsl
pop
rolb
in
jge
rcr
jp
pop
mov
sub
mov
and
out
push
adc
cmpsb
out
sub
or
push
add
mov
jo
subl
ror
push
pusha
mov
fimull
out
cmc
adc
mov
mov
add
dec
cli
pop
push
dec
push
repnz
out
sarb
pusha
clc
pop
push
clc
cmp
sbb
push
cld
stc
iret
pop
push
rorl
mov
lret
cmp
push
jmp
repz
shrl
iret
mov
mov
ja
test
pop
icebp
daa
jo
in
imul
xorps
cmc
mov
pop
mov
sbb
push
repnz
jecxz
cmp
repnz
and
push
ret
fimull
ret
in
push
add
adc
testb
and
pop
movsl
cmp
dec
lods
mov
sub
loope
cmp
rcl
daa
fstpl
popa
add
fstl
test
out
xor
jne
or
mulb
xorb
sbb
push
xacquire
out
adc
jecxz
or
push
xchg
mov
xchg
xchg
int3
dec
and
mov
push
bnd
mov
mov
or
in
push
mov
mov
pushf
scas
jno
rorb
test
dec
mov
aaa
xor
int3
push
adc
sbb
addl
inc
jb
cmc
loopne
mov
fdivrs
add
pop
cmp
pop
mov
cmp
out
out
sbb
inc
jnp
dec
mov
xchg
xchg
pop
dec
sbb
mov
push
cmc
mov
adc
dec
adc
push
mov
jecxz
std
hlt
in
xor
shll
fldz
mov
insl
in
popa
xor
inc
sbb
inc
pop
xor
sub
fwait
jns
mov
call
iret
mov
jmp
jnp
outsb
xchg
enter
adc
mov
jns
jnp
push
pop
popa
jo
push
stos
loope
adc
cmp
dec
stos
cwtl
rolb
dec
jmp
and
icebp
rorb
xor
idivl
pushf
dec
xorl
in
scas
push
out
or
pop
lret
cmp
das
jns
repnz
adc
js
mov
cli
mov
scas
pop
aaa
push
mov
arpl
je
popa
jp
cs
imull
mov
jns
and
or
fsubrl
popf
xor
sbb
loop
sub
gs
leave
xchg
scas
scas
fidivs
fidivrs
lods
mov
pop
xor
out
add
mov
and
cmpsb
mov
bound
push
pop
inc
xor
lret
imul
loope
out
sub
scas
repnz
dec
mov
popa
or
outsl
push
fldz
popf
xchg
cli
daa
jnp
mov
sub
repnz
adc
sub
inc
adc
mov
pop
je
out
mov
xchg
cmpl
push
pop
shll
js
xchg
dec
fdivrp
jnp
subb
nop
dec
ret
nop
call
fs
loope
nop
repnz
inc
popa
ret
xor
add
out
xchg
idivb
pushf
jne
cmp
and
xchg
sbb
xchg
pop
enter
cmp
xor
pop
jp
out
sti
jno
or
sahf
out
cld
fdivr
mov
repz
out
lea
call
or
hlt
int
xchg
pop
cli
movsb
daa
test
mov
pop
push
sbbl
out
xchg
or
sub
sub
gs
sbb
out
stos
enter
jecxz
mov
pop
mov
add
leave
push
pop
call
stos
jnp
clc
and
int
mov
in
arpl
and
addr16
icebp
cmpsl
add
push
push
pop
fbld
outsb
sub
call
imul
es
push
xchg
fidivrl
into
mov
add
inc
mov
inc
mov
pushf
pop
and
sarl
cltd
cwtl
js
shl
lahf
sarl
mov
outsl
sbb
in
adc
sbb
jmp
or
add
test
lret
and
stc
out
das
shll
lds
inc
loope
push
pop
cwtl
ret
ficompl
sub
loope
xchg
jg
xor
dec
js
stc
dec
xchg
movsl
daa
rorb
mov
jl
repz
push
leave
cwtl
and
sbb
lock
outsb
mov
jp
adc
cmp
outsl
cmpsl
clc
daa
ljmp
sub
daa
dec
popf
out
fbstp
mov
cmp
outsl
fsubrl
inc
mov
mov
data16
out
xchg
push
jg
add
cmpsb
mov
out
pop
ljmp
cli
mov
jne
mov
test
inc
popa
bound
roll
mov
mov
inc
popa
out
dec
aas
or
fwait
or
outsb
dec
out
mov
mov
js
in
pop
mov
pop
push
pop
cmpsb
xchg
xchg
mov
xchg
pusha
mov
daa
fcomps
push
xchg
out
adc
inc
out
out
andl
inc
shlb
das
out
add
sti
inc
lods
shl
mov
mov
sbb
add
or
pop
mov
jb
rcl
sub
fstpt
and
push
adc
add
or
lock
les
decl
sahf
pop
ret
mov
pusha
mov
pop
pop
sti
xchg
ja
in
int3
out
and
bound
adc
ss
pop
popa
stos
fisttps
xlat
mov
sub
shrb
push
xlat
ds
push
mov
sbb
pop
inc
sbb
aaa
and
pop
shll
xchg
test
les
scas
pusha
shrl
sbb
mov
insl
pop
mov
movsb
add
les
sub
pop
dec
pusha
or
cmp
push
mov
aas
popa
ss
jg
les
mov
ss
icebp
aad
or
adc
pusha
cmp
mov
pop
fcoms
cmp
or
call
ja
jae
dec
pop
jo
jg
jae
inc
mull
jno
ja
aas
lahf
je
aaa
aaa
rcrl
mov
sbb
mov
pushf
cmp
or
and
mov
fmuls
add
and
mov
mov
jns
std
inc
mov
sbb
mov
ja
xor
jns
mov
add
inc
or
push
adc
pop
rcr
sub
pusha
insl
gs
dec
orb
out
xor
dec
lea
scas
xchg
pop
push
mov
push
jg
add
sub
or
outsb
jg
jbe
xor
les
pop
push
popa
stos
test
stos
xor
push
jg
sub
pop
and
loop
lret
inc
jne
mov
fwait
adc
adc
cmp
mov
pop
push
enter
dec
sub
pop
add
jmp
in
xchg
bts
imul
cmp
test
xor
pop
in
sbb
adc
push
mov
lea
cld
aam
bound
lcall
xchg
insl
pop
xor
and
sar
loope
xor
cmp
popa
or
pop
push
cmp
sbb
jns
pusha
pop
sti
or
sub
lds
mov
outsl
daa
jg
pop
sbb
push
mov
add
fidivs
mov
or
xchg
and
adc
xor
shr
testb
pop
jmp
je
lahf
push
sar
mov
pushf
sub
lret
in
xchg
popf
or
or
mov
adc
jp
mov
or
call
shrb
je
aas
jecxz
pop
add
adc
mov
mov
mov
pusha
fsts
push
sub
mov
sbb
inc
dec
xor
mov
push
dec
add
lock
cli
popa
or
stos
je
push
mov
lods
cs
pop
insb
inc
sbb
js
push
inc
nop
out
jl,pn
lcall
outsl
mov
pushf
or
call
sub
jl
jle
jnp
out
add
mov
add
addr16
adc
fnstsw
push
push
outsb
negl
loop
mov
pop
push
pop
out
movsb
popf
push
cmp
insb
xchg
bound
pop
push
fstps
out
dec
sbb
ja
imul
data16
cwtl
dec
cmp
call
dec
mov
push
out
popa
sub
ss
push
pop
mov
sbb
out
cli
lahf
cli
lret
pop
fcomps
fwait
add
fsubl
pop
push
cmp
push
dec
cmp
mov
or
fmuls
jp
jno
xor
les
lea
and
ss
out
push
subl
fisttpl
aad
stos
cmc
fdivrp
mov
pop
hlt
dec
fidivs
and
add
lret
sti
dec
pop
orl
and
xchg
mov
outsb
pushf
xchg
jo
sbb
in
sahf
pop
xchg
push
fisttps
sbbl
sbb
in
push
cmp
int3
arpl
js
fcoms
inc
cmp
mov
mov
rcrl
add
fscale
mov
push
movsb
ret
push
xor
imull
cmpsb
aam
scas
mov
mov
roll
mov
fldl
pusha
mov
and
out
test
lcall
rcrb
mov
shlb
xchg
dec
mov
enter
add
and
dec
cmp
daa
outsl
or
pusha
movsb
das
xchg
cld
cmpl
adc
insb
lcall
ret
and
jnp
pusha
fwait
js
mov
bound
stos
out
cmp
out
js
pusha
jns
jmp
mov
fbld
nop
cmp
shrb
test
movsl
enter
pop
incb
lock
push
es
rorl
push
cwtl
jecxz
pop
xchg
mov
popa
and
mov
fs
push
repnz
fisubrs
lahf
sbb
out
out
fists
push
sbbl
dec
orb
xchg
jg
lods
push
adc
jae
mov
or
pop
mov
add
js
add
icebp
inc
fstp
mov
fstps
mov
push
out
add
pop
mov
add
into
incl
ja
cmpsl
fsubl
adc
xor
fs
pusha
jnp
int3
cmpsb
cmp
pop
sti
xor
fcoml
inc
jns
adc
clc
push
inc
invd
outsb
push
jl
xor
mov
push
orl
fists
mov
push
das
xorb
test
lods
jbe
bound
jbe
pop
xchg
xor
dec
or
add
pop
jg
fidivs
popa
and
cltd
out
popf
out
cwtl
je
cltd
cmp
and
aaa
sub
shlb
push
in
insl
mov
hlt
xor
out
in
sub
popa
push
push
movsl
cmpsb
call
push
push
mov
add
sub
out
dec
sbb
fiadds
insb
loop
push
and
jae
mov
pop
push
out
in
fucomi
add
push
mov
sub
div
sub
push
mov
dec
popa
mov
daa
lret
xor
insb
int3
jg
sbb
rcll
mov
es
sub
pop
in
push
push
pusha
dec
ja
int
out
gs
or
mov
lods
jmp
mov
mov
int3
insb
pop
cmpsl
aas
test
loope
mov
sbb
jae
pop
push
push
test
sbb
nop
mov
faddl
rcrb
clc
and
out
vcvtss2sd
xchg
dec
push
out
xor
mov
test
cmc
add
out
adc
add
mov
fldenv
mov
mov
adc
stc
mov
sub
mov
pop
aam
iret
jmp
pusha
jbe
std
movsl
in
je
or
add
mov
dec
lock
inc
out
test
stc
xor
sub
mov
and
cmpsb
lret
cli
inc
or
mov
xor
sub
repz
fbld
iret
inc
popf
insl
movsb
shll
mov
aad
movsl
adc
jo
pop
aaa
xchg
cld
and
mov
fimull
jne
pop
mov
lret
pusha
push
dec
xchg
and
adc
popa
aam
lods
push
cmp
cmp
leave
aaa
imul
dec
popa
iret
add
divl
loope,pt
sub
cli
lock
dec
mov
lret
push
pop
popa
sbb
xor
imull
adc
mov
ret
insb
add
into
fsubrs
mov
pusha
test
stc
test
rorb
mov
cwtl
pop
js
mov
scas
sbb
jmp
xchg
pop
outsb
mov
mov
add
xor
mov
fsubs
jbe
or
out
and
mov
mov
pushf
fdivrp
pop
pop
sub
loope
cmp
les
push
mov
cmpsb
std
pop
pop
push
xchg
andl
mov
cmpsl
push
sub
sbbb
aaa
pop
and
cmp
push
jae
cmpsb
scas
sub
lcall
out
xchg
dec
add
fs
je
dec
mov
and
push
and
dec
icebp
fisttps
xchg
inc
cmp
jmp
or
mov
cmp
sti
or
add
fldcw
fwait
ds
push
popa
or
in
and
push
jae
nop
mov
cmp
subl
sub
das
inc
popa
fs
lods
repz
and
jae
imulb
mov
xchg
iret
dec
jp
mov
push
pop
xor
iret
out
lods
xchg
imul
or
out
fwait
fs
idiv
xor
mov
bound
fsub
out
in
inc
mov
sub
addr16
cmpl
dec
jns
cmp
lods
ficoms
es
outsl
cmp
inc
xchg
push
adc
fidivs
xchg
xor
popa
into
jne
dec
sahf
fwait
mov
jl
sub
andb
hlt
mov
pop
add
jnp
subb
mov
divb
or
lret
fistps
xchg
ficoml
std
ret
mov
push
fistpl
pop
cmpsl
loopne
lahf
inc
mov
sub
andb
xor
fwait
cmp
pusha
and
pop
pop
dec
fdivp
pusha
mov
pop
loopne
inc
in
jge
xchg
sbb
xchg
pop
js
mov
xlat
popa
xchg
xor
cmpsl
push
jl
cld
pusha
fimuls
daa
fucomp
jge
mov
dec
ret
lock
sub
push
lahf
test
sub
xlat
jno
pushf
pop
lret
dec
sub
inc
mov
andl
movsl
out
pop
aam
push
dec
mov
push
test
call
je
movsl
pop
movsb
mov
mov
xor
mov
fwait
pop
cmpl
sub
pslld
movsb
xor
aam
sbb
cmp
shlb
shlb
pop
out
es
xchg
lea
movb
aad
movsb
and
lds
popa
pusha
lock
loop
pusha
cmpsl
enter
ds
ja
mov
dec
jmp
repz
jmp
pop
cmpsb
dec
fdiv
loopne
insl
cmpb
addr16
outsl
iret
jg
test
pop
into
stos
std
pusha
push
pop
addl
mov
lea
ja,pn
scas
dec
cmp
ss
push
inc
adc
rcr
or
pop
mov
xchg
cmpsb
cmp
or
pusha
test
adc
push
lds
out
shlb
dec
xchg
mov
xorb
inc
lret
int3
push
inc
pusha
jns
and
jecxz
pop
pop
lods
pop
ja
clc
js
xchg
mov
repnz
negl
xchg
or
dec
add
sub
inc
or
ljmp
mov
in
pusha
pop
fldenv
jmp
mov
fyl2xp1
mov
lret
dec
jo
arpl
ljmp
enter
mov
mov
insb
adc
add
das
scas
in
fidivrs
js
movsb
dec
and
cli
adcl
mov
loop
daa
je
popa
lock
in
adc
out
popf
sbbb
loope
push
sbb
cmp
sbb
cmpsb
mov
stos
jbe
outsl
push
xchg
dec
std
ficomps
cwtl
push
imul
pop
pop
clc
ss
dec
fucomp
push
shll
orb
idivb
in
cmp
mov
mov
xlat
call
xchg
in
mov
movsl
inc
xor
mov
mov
add
out
out
outsb
cmpb
jae
push
mov
clc
out
jne
pop
mov
icebp
sti
pusha
je
push
ss
pop
cmc
sbb
std
into
mov
mov
es
into
xchg
xor
and
enterw
hlt
out
in
pop
dec
jnp
rcrb
xor
popa
insl
cmp
les
mov
aaa
cmp
pop
push
mov
test
mov
popf
pop
cmpsl
push
mov
loope
std
add
xor
into
fcmovu
aad
sahf
pop
pop
push
add
bound
negl
in
or
rol
loopne
pop
in
cmpsb
mov
punpcklwd
scas
pop
std
add
or
pop
ret
aas
into
dec
jno
out
xor
sub
jle
and
clc
or
cmp
add
jno
lock
std
fildll
arpl
lods
cwtl
sahf
pusha
mov
mov
test
imul
cmp
imul
dec
cmp
xchg
out
insb
mov
jmp
cmp
data16
enter
out
mov
in
mov
outsb
in
inc
mov
fisubrs
shll
imul
out
dec
mov
arpl
pop
andb
cmp
js
clc
in
dec
cs
pop
mov
inc
rol
dec
pop
cmp
test
nop
push
out
pusha
shll
or
les
out
mov
rcrl
mov
notl
bound
popa
cmovae
xchg
and
ret
out
movsb
fistps
sub
and
xchg
lahf
test
mov
cmpsl
idivl
mov
addr16
incl
xlat
movsb
mov
or
add
jecxz
ja
xchg
je
and
stos
sbb
mov
pop
test
fcomps
rcr
mov
loopne
xor
inc
pop
jge
jb
xorb
aaa
jnp
insl
std
dec
jno
pop
sbbb
and
in
fimuls
xchg
mov
cmp
pop
xrelease
mov
repnz
pop
jp
dec
loopne
jecxz
flds
insb
xor
inc
add
cmpsl
cs
pop
clc
sub
dec
sub
mov
lods
je
or
mov
hlt
pop
xor
push
adc
jge
jo
fcomps
mov
mov
push
xchg
adc
cmp
lds
and
inc
pop
dec
cli
pop
rorb
mov
mov
sbb
xor
cmp
mov
sahf
arpl
mov
repnz
push
xchg
lods
mov
andl
popa
sbb
cmpsb
fbld
cli
add
push
inc
cld
pusha
jecxz
out
fidivrl
movsb
or
xchg
sub
rorb
push
adc
mov
jns
into
rcrb
in
pop
stos
adcb
loope
mov
data16
pop
stos
out
add
xor
das
insl
jns
stos
pop
add
xorl
rorb
std
mov
mov
fbstp
sarl
sbb
mov
dec
sub
jnp
xchg
adc
popa
mov
adc
outsl
xor
out
in
pop
mov
shll
inc
addl
inc
fidivl
cmp
loope
add
rcr
inc
call
int
mov
and
add
mov
jo
push
cmp
mov
call
and
inc
push
pop
jmp
adc
addl
inc
xchg
pusha
mov
or
popa
sub
data16
out
pusha
cs
xor
insb
mov
into
lock
pop
cmc
addr16
cmc
mov
test
pop
mov
js
rorb
mov
ficompl
out
pop
jae
dec
rol
repz
jno
pusha
xbegin
push
imul
xchg
dec
or
mov
lock
mov
push
mov
xchg
outsl
out
mov
mov
inc
sub
movsl
inc
aaa
cmp
aam
fidivs
inc
sub
out
or
dec
xchg
mov
mov
shlb
je
test
xor
stc
punpcklwd
lds
add
xchg
jnp
iret
and
out
and
shll
pop
jae
xchg
dec
jns
loop
cltd
stos
ret
pop
shrb
pop
sbb
call
int
pop
xchg
gs
sbb
adc
inc
adc
popa
roll
jge
in
cmp
dec
inc
cltd
cwtl
leave
out
das
lea
mov
adc
lcall
pop
inc
add
in
pop
push
pop
push
outsl
cmp
sbb
cmp
outsb
dec
aam
data16
out
xchg
hlt
addr16
mov
mov
shll
sbb
dec
mov
push
fcmovne
movsl
or
cmc
lock
imul
and
mov
push
adcb
xor
inc
js
lock
and
gs
lea
out
cmp
and
adc
push
ljmp
pop
dec
in
add
xchg
nop
jl
and
test
sbb
sbb
iret
out
movsb
sbb
sub
cmpsb
repnz
mov
bswap
sti
xchg
hlt
scas
and
xchg
xchg
scas
pusha
enter
test
adc
xchg
pusha
push
mov
mov
out
lcall
mov
popa
or
xor
pop
aas
xor
inc
xchg
pop
mov
cmc
popa
sahf
fmuls
mov
jge
mov
xchg
mov
mov
int
sarb
ljmp
mov
and
das
mov
sahf
movsb
andl
dec
add
mov
cmpsb
stc
rorb
lahf
test
cmpsl
aaa
aaa
mov
out
adc
pusha
mov
das
hlt
mov
call
pop
das
or
inc
push
cld
mov
jo
out
add
ror
stos
movsb
mov
add
mov
pop
pop
fwait
xor
outsb
pop
nop
gs
mov
fdivrl
ret
mov
sub
pop
inc
shrb
mov
pushl
aaa
aaa
push
loope
pushf
test
sbb
out
in
and
mov
icebp
pop
arpl
push
fidivrs
ljmp
test
jb
pop
test
jle
rol
fidivs
bnd
fbstp
es
shrl
repnz
push
sub
add
leave
mov
mov
mov
sbb
pop
push
lock
mov
and
cmc
mov
int3
fwait
cs
jnp
add
push
gs
and
decb
xchg
push
rcrl
or
dec
mov
adc
outsb
sti
and
out
lea
in
roll
mov
pop
ss
ficompl
push
lods
inc
adc
cld
out
popf
cmp
arpl
roll
pop
aaa
adc
push
inc
andb
adc
push
int
mov
fcmovbe
push
sti
pop
dec
lret
mov
push
loop
dec
popa
add
adcl
ljmp
inc
fwait
lea
sbb
mov
fidivrl
mov
mov
loop
mov
pop
push
fidivrs
xchg
shll
les
stc
dec
stos
loop
out
aad
loope
testl
mov
imul
pop
in
in
std
fwait
aam
pop
fldcw
jge
test
mov
push
into
mov
mov
jl
push
out
mov
mov
mov
push
dec
aam
rol
cmp
roll
andl
fs
fimuls
sbb
clc
das
in
in
sbb
cmp
mov
lods
roll
stos
fldcw
arpl
inc
add
add
xchg
and
aaa
pop
stc
mov
ret
lds
out
lods
movsb
lods
in
jmp
bound
push
loope
pop
dec
sbb
dec
push
xor
insl
pusha
mov
and
aad
out
lret
or
cmpsb
loope
std
jo
push
loop
imul
mov
cmc
mov
mov
mov
and
icebp
dec
fsubp
fnstenv
xor
in
pop
jne
mov
jmp
outsb
jg
jno
jbe
mov
scas
or
add
jp
arpl
mov
jge
jle
je
js
insb
dec
push
pop
xchg
jle
into
lods
sahf
mov
fisttpl
xchg
xor
pop
mov
out
test
or
sub
mov
mov
xor
and
pusha
jae
inc
ret
mov
xlat
cmp
das
in
shrb
in
ds
pusha
pop
ret
dec
testl
test
pop
scas
jno
cld
and
mov
jb
sub
out
mov
ljmp
andps
mov
inc
inc
mov
xor
or
mov
out
cmp
jecxz
dec
sub
mov
dec
fcmovne
dec
mov
xchg
add
fwait
mov
push
adc
aaa
xchg
mov
in
pusha
push
pop
xor
mov
inc
stc
out
roll
insb
xchg
or
push
dec
divl
jge,pt
cli
and
pop
popa
xor
jmp
loope
xor
cmp
inc
sbb
mov
lahf
mov
add
fsubl
lods
adc
push
mov
sub
jg
clc
inc
lcall
fidivl
push
inc
lret
sti
lods
mov
dec
jae
lcall
or
fwait
jae
sbb
add
xor
out
sbb
je
icebp
fs
ljmp
pop
lock
lds
clc
pusha
icebp
cmp
fsubr
sahf
loopne
arpl
mov
mov
mov
and
mov
rcrb
xchg
push
pop
lcall
jo
in
dec
ljmp
push
mov
or
out
pop
dec
or
push
pop
sbb
fwait
jg
out
push
popa
xor
inc
pop
push
hlt
pop
test
lret
xor
jo
pop
out
or
dec
fstl
js
scas
hlt
jp
lock
mov
xchg
inc
sbb
mov
push
xchg
sbb
mov
repnz
pushf
enter
pop
bound
mov
fnsave
push
mov
mov
add
notl
pop
pop
xchg
dec
aaa
movsl
inc
jmp
pop
pop
jo
and
push
push
inc
push
jb
jne
dec
mov
negl
pop
mov
mov
pop
fs
adcb
push
jge,pn
pop
mov
lods
lret
ja
sahf
lahf
push
stos
cmpsb
out
shll
xor
mov
xchg
stc
pop
test
cld
out
adc
inc
adc
mov
sub
dec
pop
mov
scas
jp
in
adc
pusha
cmp
cwtl
iret
mov
enter
adc
notl
lahf
stos
cmovl
ljmp
arpl
and
inc
and
cli
pop
out
pop
xor
mov
mov
mov
test
cmp
mov
cmpsb
pop
aas
int3
pop
lods
dec
pop
inc
mov
xor
xlat
sub
jns
mov
mov
xor
jnp
push
lahf
mov
lea
popf
jo
out
jne
mov
movsb
mov
or
xchg
pop
add
cmc
stos
std
mov
lods
push
jbe
dec
cs
out
out
pop
cmp
xchg
test
mov
cmpsb
dec
call
mov
xchg
pusha
hlt
mov
xor
jge
dec
lock
popa
push
mov
out
jp
iret
xor
out
out
je
or
mov
jmp
sub
das
mov
pusha
mov
lock
mov
adc
in
jns
ds
jle
test
scas
hlt
out
fs
out
loop
cmp
bound
add
or
insl
lods
in
fsubr
pop
popa
cmp
and
jecxz
arpl
das
sub
cwtl
nop
mov
jbe
hlt
push
hlt
xor
inc
sbb
lcall
out
mov
loope
xor
aaa
push
xchg
loope
enter
sti
xorl
lret
mov
outsb
pusha
pop
adc
iret
or
gs
cmpsb
pop
sbb
pop
dec
jecxz
sbb
sub
imul
pop
push
mov
shlb
mov
cmp
mov
pushf
adc
ffreep
and
or
mov
jno
push
ljmp
mov
fdivr
pop
lret
push
int
adc
and
pop
shl
inc
orb
push
cmp
out
mov
jp
lahf
das
out
jns
imul
ficoms
adc
insl
lods
xchg
pusha
dec
sub
loope
push
loope
xor
pop
pop
stc
fisttpl
js
sub
mov
loope
mov
mov
cmp
inc
sbb
roll
sub
mov
je
fistps
mov
cld
mov
push
in
and
sbb
xchg
xor
mov
aad
and
mov
mov
xor
add
enter
cmpsb
jp
addr16
sbb
mov
leave
xor
xchg
jbe
out
aaa
cltd
movsl
push
testl
add
xchg
ror
pop
lock
fs
cmpsb
je
fildl
or
mov
push
mov
test
inc
or
and
fnstcw
out
loop
test
adc
in
jnp
dec
rorb
in
push
mov
mov
xor
inc
movsl
sbb
dec
pop
test
aam
lea
jl
mov
push
mov
mov
jmp
xchg
sahf
jl
out
add
push
xlat
incb
push
mov
cli
inc
xor
push
and
xchg
mov
sbb
mov
and
push
loope
scas
pop
push
out
dec
popa
andl
push
mov
jp
iret
cs
jno
push
mov
out
mov
aaa
sub
out
into
out
mov
mov
push
jbe
jp
push
push
adc
mov
cmp
bound
mov
in
pop
dec
push
out
xorl
test
pop
cld
sub
lret
outsb
mulb
leave
fisubl
mov
test
push
mov
andb
push
cmp
lods
das
or
popa
test
and
xchg
push
lret
mov
sti
arpl
mov
mov
jne
jns
mov
push
outsl
and
mov
arpl
lea
jp
out
mov
sbb
pusha
xchg
cld
adc
jbe
lcall
mov
lahf
xor
out
pop
lods
test
mov
sub
shll
popa
fucomi
hlt
repnz
xor
pop
or
pop
mov
push
cmp
fs
push
lcall
or
in
loopne
mov
mov
loope
out
pop
insl
jnp
repnz
or
xchg
adc
xchg
dec
push
mov
fcomps
pop
negb
ret
pop
dec
mov
jns
sbb
mov
dec
push
jbe
dec
sahf
dec
adc
enter
outsl
daa
mov
fidivrs
mov
loop
js
mov
sbb
pushf
pop
and
scas
pusha
sbb
pop
sub
lahf
int3
pusha
je
add
lret
fucomp
test
jecxz
aam
hlt
scas
sbb
inc
rorl
imul
repnz
out
inc
fnsave
sahf
mov
aam
and
mov
rcrl
jne
js
popa
faddp
jne
pop
cmp
pusha
cld
fiadds
out
mov
je
add
xor
imul
loope
dec
adc
ds
addr16
insb
out
inc
mov
cmp
and
cwtl
popa
orb
sub
sub
in
lcall
test
xchg
lea
lods
inc
cld
out
xchg
sbb
popf
push
cwtl
add
jb
sbb
cmovbe
sbb
or
shlb
jp
pop
mov
xchg
push
repnz
repz
mov
aas
cmp
stos
pop
shrl
jg
iret
xchg
pop
test
popf
mov
sahf
popa
cmp
adc
sbb
or
ds
and
lahf
dec
faddl
xlat
xchg
pop
into
add
mov
push
gs
mov
mov
mov
mov
lahf
cmp
pop
je
pusha
push
jae
call
and
xor
mov
testb
scas
rclb
lds
mov
pop
lods
out
jl
mov
mov
mov
addb
push
in
xchg
insb
data16
mov
cld
out
dec
int3
rorl
aam
fcoml
add
aam
pop
push
out
imul
sbb
xor
imul
pop
bound
mov
push
repz
negl
popf
int
cwtl
js
jl
rsqrtps
in
mov
inc
jmp
fistpll
lret
mov
jns
pusha
adc
aad
scas
out
or
arpl
shlb
int3
mov
and
call
xor
mov
out
cmp
int3
arpl
stos
ficomps
xor
fwait
test
lock
pop
adc
pop
push
outsb
loope
lcall
pop
sub
xor
mov
mov
imul
push
call
mov
mov
idivl
and
pop
xchg
xlat
add
and
fdivs
test
pop
out
outsb
sub
push
data16
adc
mov
mov
test
cmpsl
test
mov
out
jnp
mov
fildl
xchg
dec
push
xor
sbb
dec
mov
or
in
inc
std
add
sahf
pop
push
jle
mov
xor
shrb
cmp
mov
mov
pop
ss
mov
test
in
mov
adc
lods
mov
mov
repnz
out
inc
push
adc
push
mov
and
push
popa
loop
fs
pop
xor
and
les
sbb
mov
lret
call
leave
jnp
jmp
mov
pop
pop
pop
cs
mov
ljmp
repz
dec
jmp
cmp
cs
lock
out
pusha
fmuls
dec
sbb
mov
xor
dec
pop
in
shlb
fisttpll
out
arpl
dec
sub
mov
fsts
xchg
mov
ds
imul
js
pop
jbe
repz
arpl
sub
cs
pusha
xchg
data16
add
jl
pop
pop
add
mov
cltd
divb
push
xchg
and
out
movsb
mov
pop
xor
adc
and
scas
push
in
shl
adc
loope
jb
mov
gs
mov
mov
data16
sbbb
or
popf
or
out
or
jecxz
inc
pop
cmp
lea
mov
sub
mov
jp
mov
test
hlt
jp
jae
in
ret
pop
add
mov
lcall
mov
pop
xlat
push
jp
mov
push
xor
add
das
mov
insb
aad
bound
fstpt
pop
cmpsb
lcall
ja
push
inc
xor
aaa
inc
push
inc
mov
ljmp
lret
mov
jno
mov
push
fisubl
sbb
lahf
push
dec
leave
lcall
loope
lea
or
stos
sub
xor
pop
outsl
mov
jnp
inc
enter
xlat
mov
in
cmp
xchg
cmp
pop
inc
add
sbb
xor
pop
jg
in
mulb
push
and
xchg
je
xor
call
ja
enter
add
sti
fists
cmpsb
fbld
add
cmp
xor
jae
mov
dec
inc
pop
idiv
mov
push
mov
or
mull
cltd
cli
xchg
dec
lret
ljmp
cmp
mov
cs
clc
das
dec
shll
adc
fidivrs
mov
dec
punpckhwd
pop
insb
xor
mov
cmp
mov
data16
loopne
scas
pusha
xlat
jae
iret
int
fistps
out
iret
push
out
add
pop
fwait
call
frstor
mov
dec
gs
adc
clc
mov
imull
out
cld
adc
in
lods
das
jmp
or
push
out
test
pop
cmp
mov
mov
repz
arpl
xchg
cmc
inc
popa
test
insl
int
and
pop
pop
ds
lods
jl
cmp
jns
mov
or
out
cwtl
mov
xchg
leave
mov
repnz
lea
pop
scas
pop
inc
cmpsb
ficoml
jne
icebp
xchg
push
dec
stc
mov
mov
mov
loopne
adc
dec
pop
hlt
dec
push
lahf
sbb
pop
cmp
sbb
pusha
loop
repz
je
aam
pop
int
out
cmp
pop
xor
popa
rorb
sub
dec
out
sub
aaa
ja
fwait
int
mov
push
inc
aad
pop
xor
push
jns,pt
cli
out
mov
xchg
mov
inc
test
inc
pop
or
sub
adc
gs
pop
punpckldq
push
mov
scas
sbb
mov
mov
sahf
lahf
imul
xor
cmp
out
cmp
addb
inc
shrl
mov
pop
pop
cltd
and
pop
negb
sbb
jo
push
jmp
cmp
ss
add
sub
out
jg
and
fldt
dec
loopne
lods
gs
mov
imul
add
xchg
xorl
stc
aas
ret
sbb
push
mov
insl
xchg
or
cli
mov
xchg
out
push
pop
stos
push
pop
add
mov
add
mov
out
sub
dec
popa
sub
xor
cltd
out
jb
decl
mov
int
cli
pop
jae
mov
jo
xor
add
and
popa
shrl
cld
out
aaa
popa
mov
add
xchg
out
mov
dec
iret
push
jae
imul
sarl
and
out
cmpsl
popf
inc
les
aaa
shr
fbld
cmp
lret
out
mov
test
fstl
cmpsl
mov
cwtl
fwait
into
mov
xchg
add
data16
mov
push
pushf
pop
jne
push
sbb
mov
addr16
xchg
pop
imul
ret
push
stos
mov
jp
in
xchg
cld
out
jb
mov
pusha
inc
jb
lcall
jl
xor
cs
or
xlat
pusha
lock
mov
jne
out
and
pop
pop
jge
arpl
sbb
and
cmp
shrb
cmp
xor
mov
jbe
fwait
icebp
jno
and
pop
add
call
push
push
cmp
fsubrl
xchg
adc
jmp
movsb
mov
orl
cmpsb
add
stc
and
and
fcmovb
lahf
popa
decl
and
jns
adc
mov
bnd
mov
fsubrs
movsl
adc
inc
pop
enter
addb
push
pop
xor
je
mov
jo
adc
xchg
pop
loop
jbe
ds
out
add
pop
jg
jp
mov
adc
outsl
jne
repnz
adc
fstpl
out
pop
test
cmp
pop
sti
pusha
adc
test
sbb
pusha
sub
pop
jnp
out
je
and
loop
out
mov
push
test
or
out
mov
adc
or
sbb
mov
fsub
pop
push
subl
pusha
clc
mov
xor
hlt
ret
ret
ss
stc
mov
or
push
mov
xchg
mov
sub
js
sub
pop
test
pop
sub
dec
int3
cmpsl
std
loopne
in
and
loope
jmp
dec
mov
aad
xchg
push
mov
xchg
adc
and
mov
outsb
scas
mov
jo
lahf
mov
ret
sub
mov
mov
mov
xchg
pop
movsb
mov
in
pop
std
push
test
push
fucomip
add
or
cld
data16
and
loopne
xor
stc
int
popa
iret
xor
xchg
fsubs
es
movsb
dec
clc
sti
out
je
cwtl
mov
aaa
cmp
ficoms
test
roll
pop
shlb
mov
xchg
cmp
lea
xor
es
pop
and
pushf
adc
mov
xchg
xchg
cmp
iret
or
jg
sbb
nop
jbe
pop
pop
mov
fidivrs
pop
add
xlat
shl
pusha
mov
jne
jecxz
push
shlb
mov
je
mov
cltd
pop
push
mov
gs
or
fadds
adc
push
imul
jno
cmc
push
jecxz
jmp
mov
loopne
cli
jb
mov
lret
xor
flds
push
mov
pop
lock
popa
mov
sahf
rcll
jae
jno
jnp
cmpsl
mov
mov
xchg
loopne
fwait
aam
sub
movl
and
cltd
out
inc
push
int
aad
pop
dec
mov
popa
lods
cmp
pop
cs
dec
loop
pop
push
xchg
imul
push
or
mov
outsl
pop
jmp
into
pop
scas
ja
mov
xchg
das
std
jns
out
push
inc
adc
call
mov
shll
push
mov
repz
pop
and
xor
inc
in
aam
mov
loop
mov
sbb
xchg
dec
aaa
loope
repnz
fiadds
enter
mov
xchg
sbb
arpl
cltd
divl
pusha
hlt
jg
xor
xchg
sbb
add
push
mov
ret
jae
loop
mov
out
xor
out
sub
adc
test
mov
jl
xchg
in
pushf
loop
mov
pop
aaa
push
adc
movsl
xor
mov
out
adc
sbb
push
adc
leave
mov
mov
out
mov
fcompl
sbb
loopne
inc
lea
push
cwtl
xchg
in
inc
enter
xchg
je
das
test
xor
push
pop
push
stos
pop
pop
mov
dec
mov
dec
bound
aam
mov
pop
cmp
loop
ds
scas
scas
add
xor
js
jo
loopne
and
arpl
pop
or
fstpl
pop
pop
ljmp
popf
xchg
cs
cmpsl
repnz
mov
sub
imul
lods
xor
and
out
cmp
rolb
lods
shrb
mov
adcb
fidivs
inc
mov
ret
lods
cmp
adc
cmp
jmp
fcoms
push
pop
movsl
sbb
out
rcrb
dec
out
cmp
jmp
dec
push
xor
cmc
pop
jns
pop
stc
or
out
and
and
call
ljmp
push
popa
sti
jno
out
jg
sti
jmp
bound
aaa
add
cmpxchg
mov
jecxz
scas
xor
shlb
test
sahf
jg
adc
mov
mov
test
sbbl
addr16
fisubs
mov
fcompl
jns
xor
xor
jg
sbb
pop
je
mov
adc
movsb
sub
pusha
push
pop
in
clc
daa
aaa
mov
out
push
xor
mov
loope
lahf
mov
xchg
scas
aas
push
xadd
lret
mov
adc
or
pop
popf
mov
fwait
cld
pop
fs
xchg
push
in
mov
sub
add
xchg
into
pop
fcomip
cld
mov
cmp
mov
add
fsubs
shrl
push
dec
push
cs
and
push
jae
fldt
mov
mov
mov
mov
fadds
pop
shll
frstor
call
adc
or
mov
pop
push
jno
es
cmp
repz
out
loop
jecxz
mov
pop
add
add
pop
and
adc
es
lret
xlat
js
lock
inc
ficomps
mov
cli
or
mov
cld
bound
ret
testl
popa
pusha
and
in
enter
icebp
int3
pop
shlw
movsl
ret
dec
insb
mov
xchg
jno
xchg
jbe
mov
push
mov
dec
into
in
and
adc
inc
mov
testb
aaa
add
xchg
jne
sbb
cld
pop
mov
sub
fwait
push
lret
pusha
inc
jmp
dec
mov
xlat
cli
mov
pop
mov
xchg
loopne
outsb
shrb
mov
in
xchg
pop
add
shrl
popa
or
adc
cmpsb
mov
adc
mov
jno
jns
mov
jl
ret
data16
adc
mov
mov
call
xchg
outsb
aaa
testl
sub
sub
cwtl
mov
cmp
inc
imul
cmp
je
inc
push
xor
out
testb
inc
cmp
clc
scas
and
lret
and
das
mov
push
fsubs
int3
sub
pop
xchg
mov
cmp
push
lcall
pop
enter
dec
lock
gs
jns
xorb
mov
out
push
lods
fldt
out
dec
jmp
jno
sahf
call
rorl
out
test
xchg
sbb
inc
dec
aam
and
mov
push
lds
sbb
pusha
sub
movsb
es
add
or
outsl
sbb
or
cmpsb
jnp,pt
adc
jmp
out
shll
rorl
inc
xchg
pop
push
dec
push
es
mov
repz
pop
mov
adc
daa
jmp
das
loop
dec
pop
xor
fidivl
push
int3
repz
cmp
flds
and
enter
push
insl
test
fimull
pop
dec
jbe
popa
sub
cmp
out
push
ss
ljmp
dec
mov
inc
pushaw
stc
fisubrs
lods
rcrl
pop
hlt
jae
xrelease
filds
mov
push
lock
sub
dec
pusha
push
in
jb
xchg
loope
das
lea
push
out
lock
inc
std
cwtl
inc
int
nop
mov
sub
push
push
cmp
pand
into
outsl
lock
rorl
inc
sbb
jae
stc
hlt
mov
scas
add
insb
negl
jnp
gs
imul
dec
fldl
jle
add
xor
inc
pop
sub
lret
fildll
fsts
mov
in
inc
mov
sahf
pusha
and
aaa
pop
add
hlt
inc
xchg
mov
mov
cmp
mov
jne
int3
mov
jo
inc
pop
pop
mov
mov
sbb
js
lcall
icebp
movsb
cltd
rcll
dec
mov
mov
out
lret
dec
fidivs
arpl
push
sub
push
mov
jge
sub
pop
sub
aad
pusha
cld
xchg
xchg
shl
inc
lret
mov
sub
cwtl
enter
out
mov
jae
out
test
es
sbb
hlt
cmp
cmp
pusha
cmp
dec
clc
adc
cwtl
pop
rorl
adc
jecxz
cs
and
popf
out
sar
loope
cmp
jmp
icebp
pusha
jbe
xor
shlb
push
mov
scas
call
pop
pop
and
jbe
push
lods
jg
outsb
sbb
out
cmp
lds
mov
pushf
loop
sbb
mov
xchg
dec
dec
out
and
push
jmp
pop
iret
mov
in
loop
lahf
pop
add
ret
inc
cmp
aas
and
mov
lret
add
ljmp
jl
mov
loope
jmp
out
jo
cmc
loope
repnz
jnp
mov
xchg
out
adc
or
and
mov
test
pusha
xor
pusha
inc
mov
sahf
pop
inc
xor
stos
mov
mov
jp
add
imul
scas
pop
lds
inc
into
bound
in
cmp
push
popa
xacquire
mov
pop
nop
mov
push
popa
dec
dec
mov
push
push
sti
pop
je
xlat
test
push
pusha
jnp
sbb
ret
fnstsw
negb
dec
ja
xchg
pusha
add
cli
push
aas
orb
fs
movsb
adc
lahf
or
xchg
enter
dec
aad
out
push
popf
inc
lret
and
mov
mov
or
out
loope
sahf
jns
test
inc
cmpsb
add
sbb
out
xchg
push
push
movb
cmp
xchg
cs
hlt
adc
in
test
cmpsb
mov
daa
test
xor
cmp
sbb
pop
cmp
add
pop
in
cltd
xchg
test
jmp
cmpsb
lret
scas
jo
negl
mov
repnz
lea
popa
push
pop
sti
push
aam
lods
outsb
jle
aam
mov
out
xchg
sahf
push
sub
scas
pop
mov
imul
inc
sub
ficoml
xor
dec
adc
cli
stc
outsb
pushl
mov
ret
repnz
pop
xchg
inc
or
daa
cmp
lret
cld
mov
jl
loope
test
clc
daa
adc
pop
cmpl
push
mov
pop
daa
call
test
adc
inc
es
outsl
mov
adc
orb
mov
sbb
push
mov
scas
mov
jle
nop
dec
or
jns
push
dec
in
xchg
pop
push
fwait
sbb
addr16
push
imul
adc
stos
stos
jb
add
call
push
sub
aas
fsubrl
cwtl
dec
lds
outsb
das
cmp
push
test
cld
test
add
addl
stos
outsl
push
push
push
das
fdivs
sub
and
test
bound
dec
jp
sahf
push
jmp
push
test
mov
sbb
jo
xor
sub
pop
sub
mov
pushl
inc
pushf
xor
fwait
ja
jne
movzbl
pop
and
std
or
xor
mov
xchg
jae
mov
movsl
icebp
in
sbbb
fadds
xchg
cmp
sahf
lret
repnz
out
adc
dec
jns
xor
push
mov
test
dec
jle
inc
fadds
xchg
clc
pop
and
pusha
dec
fbld
jnp
insb
fiadds
shll
add
mov
ljmp
mov
out
add
dec
adc
mov
testb
ror
fmuls
lahf
lahf
inc
inc
cmc
push
push
inc
subb
or
pcmpeqw
test
inc
out
jb
push
add
mov
or
inc
in
aas
mov
add
cmp
mov
movsl
sub
jno
cmp
sbb
push
in
pop
inc
repz
jmp
pop
and
push
xor
pop
pop
dec
mov
dec
sub
mov
aam
jp
loope
mov
sahf
outsl
pop
fdivl
ljmp
lock
mov
mov
leave
push
clc
jle
sti
data16
out
push
shlb
xchg
scas
mov
sub
and
lods
cmpsb
add
jnp
mov
cmpsb
xchg
out
imul
outsb
in
mov
fisttpll
mov
add
pop
add
xchg
fistpl
rcrb
stos
mov
mov
sub
es
out
xchg
jbe
dec
frstpm(287
lock
fsub
or
icebp
add
lret
pop
mov
cmp
cmpsl
data16
ror
and
shl
ljmp
sub
mulb
shlb
mov
pop
fwait
lret
add
push
mov
pop
add
sbb
aaa
jl
and
stc
jmp
sbb
pop
jnp
xor
sub
mov
adc
pusha
cwtl
xchg
cmpsb
xor
sbb
xor
and
push
std
pop
add
mov
xor
mov
pop
or
out
lds
popf
xchg
cld
mov
insb
fimull
arpl
xor
cmp
sbb
or
inc
cmp
lods
xor
scas
push
movsb
inc
rcl
call
pop
or
mov
push
pushf
std
pushf
inc
inc
pop
cmp
mov
mov
inc
cltd
hlt
mov
cmp
jmp
dec
push
mov
aaa
or
jae
dec
outsb
sub
mov
mov
mov
fildl
or
cli
leavew
or
imul
cmp
dec
sub
leave
cli
pop
out
vunpckhps
ficomps
mov
lods
and
test
sbb
into
outsb
xchg
xchg
inc
mov
push
bound
pop
add
out
xor
dec
rorl
jb
mov
out
xchg
and
loopne
mov
nop
sbb
jp
mov
out
test
mov
sub
lret
sahf
sub
dec
push
pop
sti
inc
mov
out
mov
out
pop
mov
xchg
jmp
subb
or
pusha
fstpt
add
iret
and
jo
mov
arpl
mov
iret
pop
out
fmuls
out
adcb
imul
mov
in
mov
popf
cmp
fidivs
pop
fs
pop
or
dec
aad
fcmovnb
cmc
add
out
scas
lcall
cmpsb
out
cmp
pop
inc
push
pusha
mov
sbb
or
test
subl
cmp
mov
sub
jmp
mov
stos
ret
pop
adc
push
mov
insl
jnp
dec
in
mov
loopne
sub
daa
pop
out
jbe
jne
or
test
cmpsl
mov
sahf
loop
mov
sbb
aaa
sub
out
imul
gs
data16
xchg
loope
imul
push
pop
je
cli
pop
cld
daa
movsb
cli
adc
push
ret
loopne
lahf
scas
sbbl
popa
jp
push
ret
sub
lds
hlt
popa
mov
aam
clc
dec
xor
movsl
and
dec
or
xchg
jmp
push
jno
lret
stc
js
loop
sbbb
adc
pop
clc
cmp
pusha
adc
sti
xorl
push
out
stc
in
cmp
xchg
adc
and
pop
jbe
popf
mov
sub
jecxz
imul
out
push
lret
mov
arpl
lds
or
jne
stos
in
nop
dec
stc
in
cs
mov
inc
das
icebp
jnp
in
jg
sub
push
sub
mov
push
push
or
rcrb
cwtl
and
xor
popa
test
out
mov
push
lcall
ss
repnz
mov
cmp
in
add
and
xor
icebp
test
push
mulb
jmp
mov
pop
cmp
mov
data16
mov
imul
xchg
sbb
test
lahf
fadds
xor
cltd
add
in
movsb
dec
adc
mov
pop
lods
out
push
and
mov
lods
ret
pop
out
xlat
pop
push
repnz
sti
cltd
std
mov
enter
pop
and
fsubrl
idivl
pop
sbb
ret
xchg
sbb
or
push
divb
mov
movsl
mov
add
mov
in
outsb
nop
jp
mov
gs
loopne
ds
loop
push
add
mov
in
loope
je
popa
mov
push
das
add
mov
lods
pop
pop
mov
ljmp
dec
xor
fs
jb
hlt
bound
dec
mov
outsl
and
xchg
push
push
jge
mov
aaa
add
pop
lds
pop
scas
cli
adc
jmp
pop
dec
xor
mov
shr
div
aam
cmp
and
inc
aas
sbbl
addr16
sub
lcall
out
xchg
ret
mov
addr16
sbb
dec
out
inc
mov
outsb
push
jecxz
and
mov
out
jge
push
inc
test
je
sub
and
jne
xor
arpl
jmp
mov
outsb
loop
add
aad
loop
pop
pop
mov
popa
mov
push
mov
in
setg
and
imul
imul
or
mov
push
in
mov
mov
lock
aas
outsb
inc
inc
mov
xchg
pusha
cltd
or
int
and
imul
xor
jge
cmp
mov
fbld
lahf
test
cmp
mov
cmpsl
mov
rcl
xor
dec
in
pop
int
shll
mov
and
mov
leave
subb
fsubl
mov
mov
cmc
push
lock
mov
jg
xlat
add
mov
sbb
pop
push
xchg
mov
jg
daa
stc
and
and
pop
and
push
testl
ds
mov
scas
in
xchg
pop
and
xor
xchg
adc
lahf
push
sbb
or
inc
cmp
dec
out
out
aaa
test
outsl
shll
lds
lock
jg
inc
jno
cmc
bound
push
imul
rorb
orl
add
and
inc
cwtl
pop
fists
insl
dec
sub
test
jle
mov
mov
ja
cmpsl
lret
imul
out
xor
mov
push
in
mov
push
inc
inc
popa
mov
int3
outsb
pushl
push
in
pop
adc
xor
insl
xor
mov
shr
and
jae
movsb
add
jmp
cli
in
xchg
out
jle
jae
enter
mov
or
push
out
push
cs
pop
scas
mov
and
fidivrs
xchg
sub
dec
bswap
inc
test
jmp
xor
adc
out
sub
aaa
pop
lahf
pop
dec
arpl
mov
movsl
pop
jae
in
sti
inc
in
push
fsts
rclb
xor
cld
std
out
pop
hlt
inc
jg
pop
pop
outsl
idivb
fwait
jno
mov
mov
test
jl
out
scas
clc
cltd
xchg
dec
arpl
fcoml
or
push
in
mulb
jge
xchg
sbb
jb
insb
ss
mov
insb
push
popa
pop
pop
xor
out
popa
jnp
fcmovne
push
inc
jne
pusha
xchg
orb
insl
and
fsubl
mov
js
popf
mov
xor
ret
pop
dec
outsb
fimuls
mov
repz
add
xchg
mov
fistps
xor
xor
push
in
push
xchg
cmp
mov
mov
cltd
sbb
pop
push
mov
decl
xchg
mov
jge
jp
pop
stc
fisttps
pop
push
outsl
pop
mov
cmp
mov
xchg
adc
jae
rclb
dec
test
dec
call
push
inc
inc
pushw
into
test
xor
pop
test
in
adc
test
xor
inc
repnz
out
outsb
mov
mov
mov
and
xchg
sub
idivl
loop
pusha
jns
xor
popf
fidivrs
out
aaa
std
or
stc
scas
lea
ds
std
push
inc
pop
jb
jnp
fsubs
inc
shlb
pop
outsb
sub
loopne
lock
pushf
lret
inc
pop
cwtl
imul
subb
inc
inc
and
cmpsb
mov
outsb
jle
add
out
or
mov
xchg
or
pop
sarb
or
lcall
xchg
daa
pop
sub
loop
mov
xchg
dec
imul
push
cmp
sub
sbb
mul
adc
dec
xlat
sbb
xor
adc
pop
inc
and
sbb
aam
inc
jmp
or
mov
xor
scas
popf
fs
or
imul
push
push
or
pushl
aas
dec
mov
es
pop
jmp
sbb
push
xlat
out
mov
mov
outsb
mov
jecxz
out
xor
dec
mov
mov
cltd
ja
inc
mov
mov
pop
mov
pop
into
sahf
lcall
loop
lds
out
sbb
dec
ret
shll
out
mov
ja
out
jb
jle
adc
mov
and
pop
lea
jl
mov
inc
out
mov
cld
std
push
gs
sbb
sti
dec
dec
mov
adc
andb
fdivs
sub
jl
sbb
in
andl
jbe
inc
add
movsb
inc
sarl
mov
jecxz
sbb
test
add
push
inc
push
sbb
sub
dec
popa
popa
xlat
inc
jnp
clc
int
in
jp
in
int
jl
push
or
popa
pop
aam
xchg
andb
mov
out
push
push
pop
inc
imul
movsb
jo
lock
fimuls
das
push
in
jmp
out
rorb
fs
pop
pushf
rcll
movsl
pop
jmp
mov
lahf
and
popl
ja
aaa
je
and
pusha
lods
icebp
lcall
or
in
xchg
iret
cltd
or
pop
pusha
mov
and
jne
jle
in
xchg
and
jl
int3
rcrb
or
cmpsb
xchg
jnp
out
add
lret
pop
mov
fwait
sub
pop
jnp
jns
rclb
popf
mov
cmc
mov
dec
mov
test
arpl
pop
loope
mov
pusha
stc
adc
adc
fsubs
jno
push
je
fisubrl
sbb
xchg
xchg
xchg
jg
out
lahf
dec
outsb
shlb
call
je
push
pop
and
out
out
dec
pop
dec
push
and
lret
or
cwtl
cmp
lret
shr
std
ret
pusha
pop
pop
sub
xlat
inc
and
popf
sbb
pop
out
cs
cmpl
cmc
fldpi
and
test
daa
icebp
xchg
sub
out
xor
or
loop
pop
out
mov
ret
rorl
insl
inc
shl
mull
push
repz
mov
sbb
int3
fisubs
xchg
ds
sub
inc
in
pop
mov
mov
sub
iret
pop
jb
push
inc
add
cli
jp
push
cltd
mov
addr16
adc
cmpsb
jne
or
cwtl
decb
cmp
or
mov
dec
sbb
xchg
pop
leave
andb
mov
adc
icebp
and
pop
mov
les
mov
xchg
push
imul
pop
mov
jo
cli
pop
and
dec
bound
cmp
and
mov
out
or
pop
sub
ffree
enter
fisubrs
es
popa
push
push
int
fsubrl
shlb
pop
jno
jle
arpl
dec
shl
sbb
xchg
stos
pusha
push
pop
dec
stos
push
push
mov
xor
incb
mov
mov
popa
jo
cmpsl
push
scas
pop
or
xorb
xchg
add
sub
jo
or
and
xchg
jno
dec
pop
sub
hlt
scas
mov
mov
mov
push
aam
jae
inc
in
inc
cs
or
iret
pop
pop
loop
dec
lahf
stos
pop
ja
outsl
imul
add
xor
out
inc
in
in
xchg
dec
sub
adc
push
call
loope
push
in
push
fidivrs
sahf
push
push
call
pop
int3
out
imul
lock
ret
pop
or
mov
loope
xlat
add
mov
sbb
sub
mov
jg
in
call
adc
xchg
stos
inc
popa
pop
sbb
jne
cs
add
and
pusha
data16
movsb
call
outsl
xchg
sbb
cmpsb
cli
push
fwait
push
addr16
cmc
fsubs
lods
xchg
pop
inc
pop
dec
mov
sbb
jns
mov
mov
xchg
mov
sub
fdivrp
mov
mov
push
pop
pop
mov
shrl
adcb
scas
movsb
xor
out
jnp
pusha
jp
mov
in
dec
push
sub
popw
lea
cmpsl
pop
lcall
xor
test
fisubl
jl
lcall
xor
cmpsl
aaa
adc
loop
inc
sarl
jne
into
out
jl
xor
mov
cltd
xchg
adc
fucomip
cmp
call
xchg
scas
in
repnz
dec
and
mov
sahf
imul
pop
in
sbb
sub
xchg
and
pop
inc
sahf
test
push
push
fbstp
js
bound
and
push
xlat
fiadds
stc
repnz
outsl
xor
mov
pop
out
loopne
xchg
add
sbbb
sbb
jnp
xor
xor
ret
xchg
pusha
push
cwtl
cli
inc
fdivp
scas
in
out
out
mov
and
test
xor
loopne
arpl
sbb
jp
cmp
popa
add
sbb
pop
or
cs
lock
fldl
ds
add
sub
mov
adc
rolb
out
add
add
lret
adc
pusha
shlb
rclb
in
cmpsb
lcall
mov
jmp
dec
pop
int3
hlt
ss
loope
pusha
andl
inc
mov
insl
testl
ret
mov
sar
loope
pop
mov
jg
daa
popa
adc
daa
ret
popa
pop
repz
icebp
mov
or
bound
shr
jns
in
mov
pop
mov
jle
cmpsb
int3
enter
jb
xchg
ds
outsl
mov
call
push
adc
cmp
pop
popa
es
jge
inc
adc
pop
movsb
out
out
out
push
adc
stos
jne
adcl
pop
arpl
xchg
or
test
sub
mov
shlb
xor
mov
pop
adc
jno
ror
mov
mov
mov
loope
aam
pusha
pop
mov
insl
pusha
iret
sbbl
hlt
cld
popf
cld
xchg
imul
jae
mov
ljmp
inc
fidivrs
push
popa
fst
push
jno
push
addr16
lds
mov
mov
je
jb
out
shlb
fucomip
pop
lcall
mov
dec
cltd
mov
mov
cmp
fwait
mov
push
push
cmp
ret
jl
sahf
lods
sahf
inc
lret
add
sbb
pushf
push
mov
dec
jno
adc
ja
ficoml
jle
pop
mov
mov
jno
cmp
adc
fisubrs
add
or
xor
inc
xchg
lock
cltd
hlt
xchg
mov
pop
aam
repz
es
push
mov
mov
or
lds
repnz
sbb
fcomp
sti
xchg
movsb
xchg
jb
movsl
pop
xchg
pop
inc
sahf
sub
dec
mov
dec
cmc
je
out
push
in
mov
pop
ljmp
push
mov
repnz
pop
sbb
jb
fs
ret
divb
push
jge
popa
aam
and
in
dec
je
inc
pop
inc
pushf
push
mov
andb
js
mov
inc
mov
nop
mov
or
jnp
sub
jo
xor
adc
inc
leave
pop
clc
cmp
addr16
pop
mov
cmp
pop
inc
in
outsb
adc
sbb
mov
sbb
cltd
jp
daa
adc
pop
jl
in
xchg
cwtl
stos
test
inc
int3
fdiv
pusha
inc
xchg
out
faddl
int3
out
inc
sub
add
mov
or
out
jbe
filds
test
mov
inc
dec
out
mov
mov
pop
aam
out
or
mov
jo
rorl
pop
inc
mov
jecxz
jae
lret
into
cltd
fs
adc
daa
ljmp
adc
fldt
jle
cmp
ret
pop
mov
out
je
and
lock
test
adc
out
mov
cs
jnp
adc
scas
xor
out
push
inc
sbb
dec
mov
test
lahf
ret
in
mov
xlat
in
push
imul
sub
cmp
repnz
push
sub
ret
iret
push
cmc
arpl
int3
pop
sbb
rcll
out
push
pop
enter
out
sbb
pusha
nop
es
out
pop
cltd
lret
pop
mov
movsl
lcall
cmp
outsb
pop
bound
inc
xchg
mov
sub
aam
cmp
iret
aaa
add
adc
pusha
stc
add
or
and
sbb
mov
int
pusha
cmp
or
out
imul
or
mov
fiaddl
cmpsl
pop
inc
lahf
int3
mov
cmp
fs
cmc
pusha
stos
xor
sahf
mov
add
outsb
sbb
cld
mov
add
imul
aaa
mov
push
push
mov
mov
adc
out
enter
mov
stos
mov
or
adc
loop
shll
pop
dec
fs
push
push
and
gs
shll
and
pusha
jge
dec
lahf
mov
mul
outsl
push
mov
in
dec
sbb
jbe
pusha
mov
mov
or
inc
ljmp
pushf
or
rclb
pop
cmp
scas
leave
adc
in
pop
push
inc
jg
xor
cmpsb
repnz
cmpb
std
fadds
roll
cmp
push
ljmp
dec
pop
cmp
hlt
divl
ret
push
xor
sbb
hlt
fdivrl
jmp
shr
pop
imul
icebp
fidivrs
out
add
inc
mov
mov
arpl
decb
xor
add
call
pop
cmpsb
xchg
in
add
inc
outsb
fldenv
pusha
inc
fidivl
xchg
lock
shrl
sbb
push
sbb
jne
xor
mov
mov
je
pop
xor
out
push
pop
mov
and
mov
aam
xchg
cwtl
lahf
add
mov
mov
sbb
out
stos
ret
mov
out
pop
or
mov
mov
das
rcrl
and
pop
xor
mov
clc
cmc
or
loope
cmp
cmp
cmp
je
jo
and
call
inc
mov
sahf
pop
jbe
scas
add
test
out
xorl
or
xchg
xchg
xor
aaa
push
lea
scas
bound
pop
xchg
fmull
cmpxchg
jbe
ret
pusha
aaa
inc
push
leave
daa
fcoml
in
mov
sti
aad
adc
pop
sbb
in
pop
push
dec
dec
scas
pusha
adc
aad
arpl
lods
pusha
mov
insb
pusha
hlt
mov
out
out
movsb
push
fwait
or
and
sahf
lds
adc
pop
rcrl
mov
popa
int
jl
fstpt
iret
lds
pop
jle,pt
push
fiadds
lahf
pusha
sub
in
jno
push
pusha
mov
nop
xchg
cli
fidivs
xchg
out
xchg
dec
xchg
push
xor
xor
fs
pusha
mov
cmpsb
mov
adc
in
dec
fcoms
loope
int
test
mov
add
add
int3
inc
jns
insl
cmpsl
mov
sbb
xor
out
stos
pmulhuw
mov
sbb
shlb
xchg
jns
push
roll
pop
mov
jmp
loopne
into
and
adc
fcomp
out
jl
mov
jae
mov
jo
add
into
push
out
cli
and
inc
xchg
sub
cmpsb
fmuls
lds
or
cld
ds
jge
out
mov
adcb
out
in
or
mov
mov
dec
pusha
out
dec
je
push
in
shll
adc
test
or
mov
cwtl
and
pop
icebp
lcall
pop
lds
sbb
inc
outsl
lret
mov
in
mov
subb
cmp
mov
push
fldenv
dec
mov
push
jl
ret
lds
adc
lahf
add
xor
cwtl
nop
movsl
dec
adc
movsb
js
lods
inc
shl
jo
lds
lahf
jo
sbb
adc
sbb
xor
shll
xor
pusha
push
xor
lock
cmc
add
out
xchg
enter
in
xchg
rcrb
in
cmp
out
fwait
sub
pop
daa
cmpsl
out
mov
imul
loope
or
cltd
mov
fwait
dec
mov
mov
enter
fistpl
jnp
rclb
push
xor
hlt
fmull
imul
xlat
cmovb
xor
pusha
cs
or
cli
out
mov
pop
roll
imul
lods
data16
and
xor
pusha
pop
xchg
xlat
rclb
in
lea
push
cs
mov
inc
flds
pop
push
cltd
pop
dec
or
out
aad
fwait
ror
popa
push
jle
cmc
cwtl
out
fcmovb
aam
pop
mov
adc
push
cmp
xlat
pop
mov
push
sbb
adc
and
or
mov
pusha
scas
data16
jne
loop
out
dec
fmul
cmp
dec
push
bound
lahf
lods
push
pusha
adc
push
mov
out
inc
mov
jae
mov
stos
push
scas
or
into
inc
mov
iret
xchg
popa
xor
add
add
ja
pusha
test
mov
xor
adc
mov
cmp
mov
fidivrs
out
xchg
jg
cld
cld
loopw
jmp
sub
mov
or
stos
push
pop
inc
inc
hlt
fsubs
scas
cwtl
stc
pop
and
insb
dec
scas
enter
pop
shlb
aam
pop
add
js
sub
push
aaa
and
pop
sbb
ret
fsubrl
mov
arpl
pusha
in
sbbb
sub
sbb
fsubr
mov
push
jnp
pop
lret
cmp
movsb
andb
repnz
sub
lret
shll
call
mov
into
je
pusha
lret
or
jle
jecxz
sub
pop
orb
nop
jle
jle
pop
fldt
mov
add
pop
test
ret
xchg
push
packsswb
push
out
rol
lret
xchg
pusha
and
cltd
jmp
aad
and
mov
inc
add
and
scas
dec
dec
fcmove
in
int
xor
rolb
dec
nop
imul
jp
out
push
xchg
pop
cmp
dec
add
dec
mov
jle
mov
cmp
xchg
sub
jns
js
lea
mov
sub
stos
ljmp
ss
jno
pushf
ret
jmp
ret
mov
and
fsubrs
cmpsl
xor
mov
out
jb
icebp
and
sahf
loope
test
adc
out
mov
mulb
lods
pop
testl
or
das
inc
repz
inc
and
pusha
inc
daa
dec
movsl
or
add
sbb
popf
repnz
adc
scas
fs
jg
lret
inc
lcall
mov
xor
pushf
push
outsb
mov
push
adc
pushf
pop
mov
and
icebp
adc
cli
inc
in
int3
push
ds
sbbl
mov
sti
sbb
cmpsl
push
shr
iret
ljmp
dec
sar
sbb
clc
mov
pop
mov
ja
popa
lea
dec
lock
mov
mov
push
in
xor
lea
f2xm1
ljmp
sub
mov
mov
leave
xlat
lds
repz
mov
add
push
mov
lea
sbb
std
fsubs
outsl
xchg
mov
fadd
lea
mov
pusha
or
lret
cmpsl
in
pop
or
dec
data16
xor
pop
aam
fdivrs
outsl
jl
mov
mov
dec
jbe
push
out
cmp
bound
mov
outsl
adc
sarl
js
negb
repz
stos
aam
mov
pop
jae
bound
xchg
push
jmp
pop
enter
jb
pusha
out
or
inc
cmp
or
nop
mov
nop
out
test
aad
es
and
mov
inc
inc
fnstcw
xchg
fldt
add
jno
or
mov
movsl
add
sbb
scas
sub
jb
and
jmp
cli
call
inc
add
push
scas
mov
xchg
ficomps
xchg
lcall
int3
es
out
pop
adc
out
sti
sub
in
js
shll
fistl
pop
lods
leave
nop
test
popa
loope
mov
pushf
jge
dec
inc
lcall
mov
outsb
sub
and
sahf
cmp
and
fadds
shl
cmpsl
fidivrl
xchg
das
and
fildl
xchg
data16
sbb
mov
cmp
cmpsb
add
outsl
jmp
je
fdivrl
loop
mov
popa
rcll
psubd
pop
push
mov
push
shlb
sub
sub
xor
dec
pop
mov
fimull
rep
pop
or
cmc
cmp
pop
xlat
sub
roll
lock
sahf
int
cmpsb
out
pop
jle
xchg
popf
stos
mov
jecxz
outsl
in
fmull
mov
jb
daa
scas
push
cli
in
fmul
lock
lods
sbb
add
inc
sbb
insl
add
or
jne
fisubrl
push
ret
xchg
test
leave
jg
mov
insb
xchg
out
xor
mov
aam
fcomip
mov
lock
aad
jmp
xlat
sub
xchg
fisubs
mov
mov
in
jg
push
arpl
rcll
add
and
roll
cmp
mov
out
in
jp
pop
xor
sbb
mulb
pop
jl
nop
pop
jne
fidivrl
pop
gs
adc
mov
inc
rcll
mov
pop
jge
call
mov
mov
out
fsubs
mov
inc
popa
dec
ficoml
sub
sub
xor
jle
xchg
pop
mov
sbb
lea
jns
adc
sahf
pop
mov
mov
popf
inc
mov
mov
testb
test
jnp
sub
mov
stos
dec
daa
outsb
cmc
aas
xor
dec
sarb
xchg
pop
mov
push
out
adc
sub
push
pop
jns
mov
pop
mov
andb
inc
inc
out
mov
popa
mov
out
hlt
scas
adc
aaa
sbb
stc
add
mov
fists
out
or
push
add
mov
pop
push
mov
mov
pusha
fiaddl
lea
cmp
sub
add
fstps
hlt
sub
and
inc
sahf
shll
shl
cmp
pop
mov
jp
mov
xchg
nop
pop
pop
in
rorb
mov
or
jp
pop
mov
pop
iret
das
andl
lahf
adc
nop
and
add
jnp
push
out
out
push
sti
scas
xor
jbe
arpl
fwait
dec
idiv
pop
inc
and
shlb
sub
rorl
aas
inc
or
imul
ja
sub
jb
pop
ss
sbb
popa
xor
ss
mov
loope
sar
repnz
dec
xor
inc
popa
push
ret
loop
cmp
sahf
or
adc
xor
mov
jle
pusha
aaa
push
imul
push
push
sbb
push
test
mov
into
dec
out
xor
mov
jecxz
push
shll
lock
cmc
pop
test
dec
mov
mov
lret
xor
xor
and
xlat
jb
pusha
cld
inc
lea
cmpsb
inc
popa
int3
sbb
mov
mov
mov
push
cs
mov
inc
xchg
dec
xor
fmul
or
cmp
stc
xor
adc
mov
dec
not
and
add
int3
sbb
mov
jle
xor
adc
inc
ret
jne,pn
add
pop
cmc
xchg
in
mov
out
aad
adc
push
cmpsl
andb
pop
pop
pushf
or
jbe
jne
in
push
test
in
cmp
fs
dec
clc
aad
stos
cld
add
adc
mov
addb
stos
mov
das
xchg
xchg
mov
js
lea
pop
xchg
inc
das
push
pop
xchg
sub
arpl
inc
ja
addr16
popa
jns
cltd
cs
mov
or
out
in
mov
clc
int
repz
pop
pop
popa
push
inc
insb
mov
and
mov
sub
dec
dec
xchg
lret
fsubrs
or
cmp
pop
aam
sbb
mov
pop
xchg
pop
addb
mov
lea
add
rcr
pop
mov
test
push
in
call
or
add
mov
and
or
fsubl
test
repz
ret
cmpsl
into
inc
mulb
pop
loopne
fmulp
jg
fnstenv
cmp
inc
idiv
repz
push
add
out
jae
bound
jp
mov
inc
cvtdq2ps
fisttpl
shrl
jp
push
ss
lahf
outsl
sbb
in
fdivrs
iret
scas
push
inc
jae
mov
shll
pop
je
gs
lods
and
outsl
gs
mov
lock
arpl
mov
jmp
adc
shl
pop
inc
inc
lea
xor
test
out
shl
push
adc
aas
out
mov
in
jbe
ds
out
pop
in
xchg
fstps
sbb
cmc
push
dec
jb
popa
jne
scas
js
sbb
jmp
test
mov
push
outsb
fsts
shll
and
push
mov
fidivs
add
inc
sbb
lahf
add
xchg
int3
jo
xor
hlt
punpcklwd
push
jnp
jo
test
icebp
xlat
mov
push
rolb
dec
mov
nop
xor
xor
adc
out
mov
xchg
popf
inc
mov
repnz
jmp
pop
jns
jae
pop
push
sub
es
cmpsl
loope
cltd
or
mov
sbb
pop
scas
push
lods
and
lods
jle
mov
mov
xor
sti
push
mov
sbb
mov
pop
inc
popf
dec
cmp
inc
dec
and
out
sbb
jne
and
jle
sahf
and
in
rcrl
sarb
pop
push
add
mov
sub
pop
xchg
outsl
jae
lret
jns
cmpsl
adc
jns
jl
test
cmp
mov
cli
push
mov
mov
sub
mov
xchg
jge
push
or
cmc
das
loope
mov
add
cmp
mov
insl
sub
mov
sbb
jl
pop
lret
pop
xchg
adc
pop
fistpl
out
into
lahf
popa
lcall
in
test
and
adc
loopne
jns
jp
cmpsl
stc
jle
clc
inc
adcb
sub
lret
enter
and
cmp
mov
rclb
fistpl
insb
adc
outsl
xchg
pop
inc
in
ja
jo
sub
das
fdivl
shrb
fs
xor
xlat
pusha
mov
mov
mov
mov
cs
sub
or
mov
pop
push
leave
pop
mov
jne
leave
out
out
mov
in
adcl
loop
sbb
add
fidivrs
mov
std
out
mov
subl
xchg
movsl
mov
dec
jno
add
popa
push
scas
out
jno
out
test
adc
pop
les
mov
call
jno
fs
fbld
pop
rclb
mov
adc
pop
or
fwait
in
mov
scas
icebp
in
cwtl
adc
and
lea
and
adc
clc
pusha
sbb
sub
addr16
fucomip
pop
xchg
cmp
fs
mov
outsl
push
lret
push
movsb
cld
pop
jge
out
cmp
jge
xlat
cld
pusha
movsl
pop
pop
loope
adc
imul
ret
out
ss
hlt
sub
add
push
mov
sub
out
mov
imul
loop
inc
push
mov
pop
ds
jge
ljmp
mov
add
mov
pop
jbe
mov
icebp
xchg
mov
shr
int3
ret
in
xor
or
xchg
cmp
dec
cmp
sti
out
pop
mov
sbb
das
pop
mov
xor
cmp
jle
lea
testl
mov
xchg
test
and
sbb
int
movsl
arpl
imull
je
and
pop
les
aaa
sub
push
mov
inc
jg
decb
push
inc
mov
out
es
xor
js
push
sub
loope
adc
lret
dec
pop
lock
pop
fs
and
fwait
mov
ds
ficomps
push
xchg
stos
fimull
ljmp
arpl
addr16
pop
hlt
pop
xorl
sbb
shll
pop
jb
cmpsl
lods
in
dec
xchg
pop
sub
pop
popa
adcl
jo
out
add
lahf
push
pop
mov
aad
scas
loop
je
imul
neg
pop
pop
out
je
pop
sbb
hlt
sub
test
jns
test
mov
out
mov
hlt
add
mov
mov
popa
out
dec
shrb
xor
repz
mov
lea
pop
mov
and
pusha
add
sbbl
fldz
mov
mov
pusha
or
aad
dec
loopne
icebp
out
testl
loopne
mov
mov
mov
pop
xor
and
adc
stos
fwait
and
mov
inc
je
addb
movsb
jae
insl
xor
jmp
xchg
push
into
sbb
mov
mov
inc
stos
or
pop
fistpl
xor
pop
xchg
or
jbe
fidivrs
sub
out
inc
ds
movl
std
cmc
pusha
sbb
push
rcll
inc
fidivrs
pop
xchg
stos
sarb
xchg
push
xchg
mov
xchg
mov
fisttpl
pusha
cmp
and
cmp
pop
inc
mov
in
xchg
addr16
sub
dec
pop
push
pop
loop
and
sub
sbb
imul
nop
xchg
jmp
xchg
xchg
outsb
mov
icebp
imul
jmp
mov
popa
push
add
push
mov
imul
outsb
mov
cmpsb
push
negl
out
sub
add
movsb
inc
imul
hlt
out
jl
sub
decl
fldenv
into
clc
jge
dec
pushf
and
pusha
xchg
jg
push
pop
sub
data16
daa
inc
inc
sub
pop
cmpsl
pop
fwait
lret
sahf
sbb
mov
mov
or
out
ds
es
out
adc
pusha
pop
rorb
adc
outsb
adc
out
lret
inc
sbb
pushf
cs
pop
out
mov
or
mov
dec
cs
roll
mov
adc
xor
sbb
shl
movsb
lods
push
adc
mov
dec
mov
xchg
pop
cld
bound
push
jg
jmp
test
jmp
movsb
ret
outsb
outsb
test
sbbl
imul
cmpsl
pop
or
jae
mov
out
or
pop
mov
jecxz
sbb
popf
cwtl
pop
inc
xchg
and
mov
cli
pop
jb
ljmp
and
xchg
fs
test
or
cltd
fbld
out
cmp
in
or
adc
dec
adc
roll
pop
mov
pop
push
pushf
pushf
stc
inc
int
cltd
dec
pop
pop
aas
sarb
mov
mov
mov
push
or
ret
fwait
out
jp
out
out
lea
shlb
data16
cwtl
mov
push
in
and
rol
shlb
inc
xchg
and
pop
fwait
add
out
nop
pop
fs
fs
pop
test
loop
mov
push
fadds
mov
shrb
jae
cs
and
mov
in
jo
pop
lea
mov
dec
sub
jge
xor
nop
mov
adc
jmp
out
jae
icebp
mov
push
outsb
dec
repz
in
xor
lock
cmp
inc
lds
out
xlat
xchg
fdivrl
sahf
dec
pop
lea
popa
inc
jb
pusha
or
mov
out
pop
fidivs
sub
into
mov
sub
aas
add
fcom
dec
xor
in
icebp
fildl
mov
xchg
adc
inc
outsb
jmp
in
push
popa
dec
inc
lcall
rolb
pop
mov
imul
mov
lahf
sbb
ret
mov
sti
enter
jge
jmp
jmp
pop
ljmp
mov
and
fisttpll
pop
sti
push
inc
ja
sahf
int
xor
mov
cmp
les
add
push
test
jge
inc
out
sbb
scas
pushl
icebp
mov
inc
es
leave
xor
sub
pop
jb
dec
mov
stos
insb
fdiv
pop
dec
mov
inc
popf
sahf
or
cmpsl
sbb
arpl
nop
adc
jo
dec
loop
shl
push
pop
xlat
jp
inc
leave
int3
mov
pusha
repz
ficoml
sbb
lock
rclb
out
mov
lret
stos
jle
pop
and
adc
scas
into
jnp
adc
dec
gs
faddl
cmpb
sti
mov
jne
inc
mov
scas
xchg
frstor
cli
push
int3
cmc
sahf
popf
mov
fstpt
lods
push
pop
mov
dec
inc
sbb
ja
rorl
sbb
add
push
dec
sar
or
les
push
fisttpll
fucomi
pop
icebp
ret
icebp
xchg
aam
push
jmp
int3
pop
shll
out
sbb
pop
popf
push
test
orl
mulb
mov
sub
aaa
push
fdivp
pop
or
sbb
sbb
and
jecxz
outsl
adc
xchg
cmpsb
mov
ds
jbe
sbb
sub
add
mov
xchg
mov
and
inc
cmpl
pop
xor
jg
pop
add
rcl
insb
leave
xor
pop
das
mov
jne
fbstp
push
mov
out
lahf
and
push
jns
inc
mov
in
mov
pop
ret
ficompl
push
push
fldenv
aas
push
lret
idivb
push
push
xchg
sbb
add
mov
push
mov
stos
imul
inc
mov
fbld
jge
nop
pusha
scas
lahf
cmp
stos
xchg
inc
out
sbb
adc
adc
leave
pop
sbb
dec
out
adc
in
push
in
pop
loop
jge
imul
lcall
lcall
pop
fimull
xor
dec
lock
jo
sarb
push
mov
lds
jae,pt
lods
pusha
lcall
push
inc
cltd
mov
inc
xorb
push
add
jp
jb
xor
sahf
xchg
sub
bound
mulb
roll
clc
adc
dec
inc
mov
xor
cltd
filds
out
iret
je
and
pop
or
sbb
stc
mov
inc
popa
mov
fs
out
cli
cmp
jnp
inc
lock
adc
pop
outsl
pop
popa
sahf
sub
adc
xor
mov
or
sbb
inc
fs
pop
out
add
and
or
repnz
mov
ds
inc
or
mov
iret
jns
inc
pop
mov
dec
fsub
pusha
lods
sub
dec
pop
dec
mov
out
sub
sbb
in
sub
fs
pop
sbb
push
xchg
loopne
push
adc
sbb
pop
fldl
gs
out
jp
pop
call
mov
pop
scas
and
aaa
add
pusha
fucomp
sbb
push
je
out
fsub
pop
mov
mov
dec
sbb
movsl
pop
mov
pusha
scas
cmpsb
or
mov
lea
popa
cmp
xchg
push
mov
ss
loopne
xorl
sti
pusha
leave
jmp
insl
imul
leave
xchg
pop
mov
xor
dec
scas
push
mov
jmp
orb
dec
pop
fs
test
leave
mov
inc
mov
and
mov
lret
int
push
adc
cmp
and
sub
pop
sbb
icebp
inc
sahf
push
xchg
clc
inc
mov
lcall
dec
clc
push
out
xchg
pusha
mov
inc
mov
out
je
or
inc
pop
popa
or
jb
jg
push
dec
scas
push
xor
or
fwait
push
filds
gs
mov
cmp
pop
lcall
mov
ja
mov
mov
dec
out
stc
cmp
repnz
jle
xchg
dec
and
imul
in
test
aas
in
push
xor
cli
mov
cmpsb
mov
negb
stc
lock
sar
popa
and
push
aas
pop
dec
inc
lds
cs
dec
add
jb
and
dec
and
mov
inc
cmp
xchg
fiaddl
popa
fs
cmpsb
add
push
mov
cli
enter
sbb
xchg
sbb
pop
popa
cltd
repz
scas
out
xor
es
add
cmc
lcall
cmp
fnstenv
jl
and
xorb
cmp
out
dec
mull
xlat
int3
xchg
jmp
ss
dec
mov
pop
and
push
das
fsubs
loop
gs
dec
mov
add
jns
mov
mov
ret
lcall
stos
out
push
pop
in
cmp
and
ds
mov
jmp
mov
inc
mov
xchg
pop
jne
call
rcrb
jnp
jg
les
out
outsb
inc
pop
andb
mov
push
aam
call
outsb
mov
rcrb
mov
and
mov
ja
aas
cmpsb
sahf
out
cs
xor
sahf
sub
jbe
mov
mov
jo
ja
push
out
add
inc
pop
ret
push
fs
cli
push
sti
aas
popa
or
int
pop
icebp
mov
cwtl
repz
sub
mov
loope
fdivp
fidivl
test
add
dec
popa
loopne
push
cmp
cmpsb
mov
fidivrl
pop
xchg
bound
fs
orb
pop
jg
adc
mov
mov
into
cmpsl
cltd
fmul
sbb
mov
dec
and
xor
add
lret
jge
dec
mov
std
outsl
add
adc
repnz
pop
pop
inc
dec
fstps
repnz
pop
cli
rcr
test
and
lret
cli
jle
add
inc
popa
js
sbb
pop
ret
shlb
shlb
fs
outsl
rolb
jae
cmpsb
xor
sub
adc
jecxz
or
inc
dec
ja
inc
dec
loop
loopne
repz
or
std
jle
ljmp
test
loop
in
testl
cmp
mov
inc
sub
pop
sub
dec
push
popa
ret
jmp
and
cmp
lods
aad
out
dec
stos
inc
dec
sbb
sbbb
adc
adc
xor
jbe
popa
icebp
insb
pop
in
loope
add
and
sbb
out
cmp
jp
cmpsb
jb
into
or
fidivl
adc
out
pop
mov
mov
and
andb
fs
test
dec
lahf
pop
mov
ja
imul
dec
push
sbb
pop
sahf
jge
cld
xchg
or
popf
dec
imulb
lahf
mov
jns
sbb
insb
scas
jle
cmp
in
dec
in
lods
push
fucomip
arpl
cmp
imul
lea
xchg
lods
aas
and
aas
out
xchg
mov
in
enter
push
out
mov
mov
movsb
out
negb
icebp
dec
jnp
push
out
leave
sbb
inc
das
cmp
mov
add
xchg
sti
out
inc
imul
cmpsb
bound
out
lahf
scas
je
dec
xchg
lret
shll
push
and
mov
cwtl
push
sahf
push
fistps
and
inc
jne
add
mov
add
adc
or
mov
mov
mov
test
jecxz
and
mov
xchg
push
es
pop
mov
shlb
enter
add
std
cmp
mov
mov
fwait
lods
fst
xor
mov
mov
sub
int3
out
in
xlat
sbb
adc
rcrl
and
cmp
es
out
leave
jp
fwait
das
and
ret
xor
push
jl
sbbb
stc
mov
sub
mov
adc
jno
and
daa
mov
insb
pop
mov
inc
and
fisttpl
adc
adc
sbb
mov
mov
pusha
xchg
ret
dec
ja
inc
out
and
xlat
aad
pop
or
adc
mov
sbb
in
sub
es
jle
lcall
sub
mov
aas
or
cltd
rorb
xorl
hlt
pop
nop
pop
pop
dec
lods
fbstp
stos
stos
push
or
xchg
dec
fprem
cwtl
in
out
aad
data16
xchg
ret
dec
mov
push
xchg
xchg
xor
pop
test
or
pop
clc
int
ror
sarb
mov
sub
cmp
xor
mov
test
add
adc
pop
mov
cmp
pusha
mov
push
fwait
sbb
pop
icebp
and
stos
call
aad
xchg
lea
mov
or
and
es
out
jp
jmp
cs
pusha
lds
js
add
loope
in
push
pop
inc
addr16
jle
or
insl
ljmp
pop
scas
and
jbe
push
clc
lods
call
mov
loopne
jns
mov
neg
cmp
push
mov
sbb
mov
insb
mov
mov
test
dec
cmp
mov
insl
add
sub
scas
push
inc
imul
ja
adc
mov
jmp
idivl
cld
pushf
ss
out
adc
data16
cmp
push
shrb
mov
pop
sarl
pop
mov
or
bound
pop
xchg
cltd
addb
cmc
cmpsb
xchg
ds
or
je
mov
push
adc
pushf
and
xlat
data16
loope
popa
pop
inc
jg
leave
scas
cli
imul
mov
mov
int
mulb
insl
ss
sub
cmpsb
subb
jnp
out
add
repnz
jp
popa
add
outsl
pusha
push
or
pop
sbb
popl
mov
in
das
pop
pop
and
fsubp
mov
inc
out
in
ud1
cs
mov
xorl
pop
stos
arpl
mov
add
xor
adc
lahf
add
inc
sbb
fildl
dec
xchg
or
xchg
out
dec
jecxz
cmpsl
movsl
jmp
subb
inc
pop
into
push
ja
sarl
daa
insb
mov
idivl
lcall
pop
enter
leave
add
jl
jge
das
insl
pusha
xchg
stc
repnz
lret
and
in
mov
clc
xchg
pop
sub
mov
insl
lock
je
fnstsw
mov
sarl
mov
jne
lods
mov
and
push
dec
push
stos
dec
shr
mov
dec
xlat
mov
les
fidivrl
addl
in
and
adcl
hlt
jne
in
xor
xchg
out
ds
in
sbb
das
or
push
inc
adc
xchg
add
mov
push
pushl
outsl
xor
addr16
lahf
fldenv
fildll
rcrl
jecxz
and
cs
es
lcall
mov
outsl
or
dec
pop
pop
add
jae
dec
out
add
xchg
lret
nop
mov
lock
dec
add
pop
hlt
inc
xchg
fwait
div
mov
cmp
sbb
fcoml
subb
mov
adc
iret
dec
mov
int
xor
popf
jns
cmp
pop
fidivl
pop
pop
jp
mov
stos
fisubl
xorl
out
test
rolb
movsb
cmp
lock
add
inc
outsb
pop
je
sarb
arpl
cmc
push
lock
pop
sbb
cmp
subb
ds
xchg
dec
pop
push
test
out
push
cmp
sti
call
push
fcoml
pop
dec
lahf
push
ja
out
fwait
jp
mov
push
jecxz
pop
jp
fstps
pop
test
loop
out
xor
cmp
rorb
mov
dec
xor
push
xchg
sbb
adc
push
mov
ss
lahf
aad
aam
out
in
call
xchg
pusha
cmp
jnp
sbb
adc
inc
and
out
dec
movsb
xchg
into
popl
sti
jo
in
out
je
inc
adc
adc
in
cmpsb
aad
mov
pusha
loope
hlt
mov
mov
sbb
lods
mov
and
xor
lods
inc
or
lret
rcrb
insb
dec
out
push
and
jmp
mov
cmpsb
mov
and
test
jo
dec
pop
mov
test
adc
cmpb
imul
mov
mov
mov
and
cwtl
or
outsb
lahf
mov
and
jns
cmpsb
mov
aaa
mov
cmp
ret
ret
cmp
test
jb
or
and
xchg
popa
sbb
int3
xchg
cmp
jle
out
jb
jmp
outsb
push
xor
ret
repz
cmp
add
ss
xchg
mov
jne
mov
movsl
sub
out
and
pusha
add
ds
dec
adc
pusha
jmp
inc
xchg
pop
outsl
and
cvttps2pi
and
xchg
les
mov
adc
jmp
adc
dec
in
popa
pop
inc
sub
pop
add
lret
xor
mov
test
sub
out
clc
inc
inc
or
sahf
dec
in
decb
sub
or
mov
adc
sub
outsl
inc
fdivrs
out
sbb
xor
insb
or
mov
or
xchg
cmp
out
sub
or
enter
cli
mov
orb
dec
mov
mov
out
inc
in
negl
adc
xchg
js
into
and
sbb
sbb
sbb
add
or
mov
in
test
or
mov
test
idiv
inc
and
and
inc
jecxz
insb
pusha
mov
jae
cli
pop
rcrb
inc
popa
or
and
nop
lret
incl
push
adc
add
mov
jnp
dec
xor
movsb
fwait
xchg
leave
mov
jge
jno
cmp
dec
pop
fstps
xchg
lods
mov
cs
mov
xlat
pop
filds
inc
out
sub
stc
or
gs
fwait
addr16
int3
dec
mov
xor
out
cmpsl
mov
mov
je
sub
pop
idivl
mov
sub
push
pop
sti
addr16
pop
sbb
popa
adc
repnz
ja
shl
inc
push
out
or
sbb
pop
into
cli
lock
in
jbe
push
xor
fsubs
fdivrp
pop
shrb
sti
jb
push
sub
mov
enter
adc
movsb
cmpsb
sub
dec
popa
xor
fstpl
jo
out
es
pushf
ss
add
fisubrs
movsl
mov
in
lock
loope
dec
fcmove
popa
and
adc
in
in
add
push
xor
pop
push
sub
jmp
mov
inc
es
popa
dec
cmp
mov
out
xchg
and
mov
decl
iret
pop
add
push
pop
inc
aaa
cmp
pop
stos
xchg
push
clc
cmp
ficoms
xor
lds
dec
push
sub
aam
pop
mov
pop
pop
movsl
push
adc
loope
pop
add
cli
mov
sbb
subb
jb
popa
jg
xchg
adc
push
or
popf
in
ss
daa
aad
loope
jne
adc
mov
lods
imul
sbb
jmp
jne
sub
lods
int
jecxz
pop
out
push
cmpsb
mov
mov
lea
cmp
clc
mov
pop
adcb
xor
and
dec
mov
popf
jns
out
pop
mov
push
ljmp
mov
pushf
jp
pop
pop
add
sbb
in
push
pop
mov
les
out
sub
movsl
jmp
out
pop
jmp
xor
test
stc
stc
lret
lods
adc
out
sub
pop
pop
and
mov
into
mov
xor
mov
inc
mov
cltd
pop
cmpsl
jle
mov
inc
push
inc
dec
mov
mov
mov
pop
jmp
jge
stos
push
sbb
in
inc
jg
xchg
mov
mov
pop
ficoms
mov
pusha
les
ret
pop
mov
shlb
mov
fildl
aas
and
adc
andl
scas
repnz
xor
sbbl
push
stos
inc
sub
repnz
faddp
ds
and
push
outsb
add
es
jl
inc
ret
pop
inc
movsl
movb
sbb
hlt
lock
xor
inc
insl
rcr
popf
imul
mov
das
xor
outsb
fxch
pop
sbb
sbbl
fwait
dec
addb
add
mov
mov
pusha
inc
xchg
cltd
enter
pop
and
or
inc
popa
mov
pop
pushf
sub
xchg
cs
pop
mov
in
and
sbb
mov
inc
repnz
inc
sbb
sub
pop
les
shlb
cltd
pop
jnp
loopne
aad
xor
mov
or
lahf
insl
stos
lcall
dec
repz
ficomps
inc
inc
scas
and
xchg
add
pop
cwtl
ss
xorb
cwtl
jne
imul
pusha
rorl
loop
out
in
test
iret
lods
cltd
test
rorl
xorb
outsb
dec
cltd
lret
mov
fistpll
sub
jmp
sub
stos
pop
jle
scas
cmc
pop
mov
sbb
sbb
pusha
jl
fldz
push
mov
mov
xor
cmp
mov
inc
inc
sub
sbb
stc
movsb
dec
arpl
and
pusha
pop
lods
xchg
mov
adc
sarl
pop
push
or
repz
in
fisubrs
mov
inc
stos
mov
inc
bound
cmp
mov
fcmovbe
ljmp
jo
mov
sub
std
mov
outsl
mov
aaa
rclb
xchg
or
lahf
xchg
repz
and
out
mov
call
xor
fs
xlat
pop
cmp
mov
push
popa
clc
xchg
je
sub
sub
push
jl
mov
inc
jp
xor
std
lock
inc
adc
adc
sub
xor
insl
or
lahf
fldl
inc
xchg
pop
ljmp
mov
pop
ss
pop
dec
adc
cmp
push
inc
test
insb
dec
xchg
iret
je
out
lret
add
in
adc
addr16
loopne
push
or
xchg
mov
mov
mov
popa
sub
sub
call
or
mov
sub
cmp
mov
dec
dec
mov
sub
gs
jns
push
jbe
mov
hlt
pop
outsb
jmp
inc
xchg
addl
mov
dec
jg
pop
insl
jno
filds
cmpsb
pusha
dec
or
inc
pushw
insb
cmp
or
pop
jbe
push
or
mov
push
insb
repz
nop
sbb
fimuls
xchg
fcmovb
dec
jno
fisttpl
fwait
ret
in
dec
push
aam
pusha
in
add
jne
adc
scas
jne
xchg
movsl
cwtl
mov
push
movsb
and
imul
mov
pusha
pushf
xor
jo
xchg
dec
aad
sarl
sbb
cmp
xchg
icebp
aaa
aaa
out
adc
or
iret
hlt
cld
jbe
popa
dec
outsb
sbb
inc
out
cmp
and
out
adc
lock
inc
mov
dec
sbb
out
push
lods
subl
mov
xchg
push
pop
outsb
push
hlt
mov
cltd
data16
cltd
clc
nop
sahf
sti
add
out
and
into
scas
sub
lds
leave
push
mov
sub
cltd
xchg
xchg
fisttpl
pusha
push
sarl
nop
jg
lret
cmpsb
pop
loopne
out
scas
cmp
fists
pop
pushf
add
dec
les
fs
scas
mov
lods
jl
mov
adc
out
out
or
bound
movsl
and
scas
adc
adc
cmp
add
push
add
subb
pop
add
pop
sub
pop
pop
aaa
xlat
pop
ret
sbb
xor
xlat
pop
push
pop
loope
sbbb
push
adc
and
icebp
pop
addr16
fs
repz
movb
sti
pop
popf
mov
pop
inc
push
idivb
pop
or
out
loop
out
and
mov
push
lds
shrb
les
out
test
test
push
mov
sahf
addr16
mov
add
ret
pop
jo
xchg
xchg
pop
shlb
adc
or
mov
mov
cmp
mov
addb
dec
stc
ss
jns
loop
mov
xor
notl
xlat
pusha
movsb
or
and
jne
or
pusha
mov
fwait
sbb
in
pop
push
ljmp
punpcklwd
or
pop
sbb
jo
dec
in
mov
int
out
movsl
xchg
pop
data16
repz
rclb
loop
mov
cmc
pusha
jae
test
out
push
fldl
outsb
sub
mov
outsl
enter
xlat
out
mov
and
push
stos
xor
cmp
scas
mov
ss
inc
pop
inc
mov
lret
jmp
ret
sub
sbb
xchg
popw
fnstcw
rcl
jle
sahf
aad
fsubl
cwtl
mov
sbb
dec
jno
mov
and
mov
xor
aam
fiadds
pop
clc
and
pusha
xor
mov
dec
pop
pushf
jbe
add
test
sbb
fs
cmp
lret
fnstsw
pop
pop
sub
or
es
jns
es
outsb
mov
adc
cmp
mov
jnp
leave
popa
sub
fbstp
push
pop
and
push
xor
and
mov
clc
mov
call
hlt
sbbl
ficomps
adc
or
inc
xchg
adc
adc
sbb
mov
push
bound
filds
cs
sub
jbe
cmp
inc
sti
ret
in
or
insb
les
ficompl
js
out
or
cmp
imul
sub
pop
and
cmp
and
data16
xchg
push
xor
movsl
adc
lds
inc
lret
iret
or
lea
mov
sbb
cld
inc
pop
bound
mov
mov
imul
mov
gs
insl
rolb
and
mov
fadds
std
pop
ret
mov
sub
ss
mov
popf
clc
fs
adc
ficomps
daa
or
fimuls
sbb
andb
dec
mov
dec
lods
jmp
repz
mulb
mov
popf
jb
jle
fs
cld
adc
jns
inc
push
outsb
rorl
lds
icebp
frstor
pop
mov
mov
sbb
pop
push
xchg
add
mov
es
pop
lods
xchg
pop
ja
sbb
and
cltd
inc
xchg
mov
stos
pusha
gs
cld
cli
jmp
xchg
dec
jno
mov
cmp
out
out
xchg
sub
pop
loop
into
add
jno
cli
xchg
mov
adc
scas
adc
push
scas
add
inc
mov
in
xchg
pop
imul
adc
addr16
mov
dec
jecxz
pop
or
cs
data16
cmp
pusha
std
outsl
pop
cmpsl
ficomps
out
pop
mov
push
xor
jmp
pop
push
jg
jge
test
lahf
adc
xor
dec
test
and
mov
sub
cmp
pop
cmc
pop
cmc
add
adc
lods
aam
dec
rolb
stos
inc
in
add
jae
lret
cli
in
fnstenv
dec
and
mov
lea
ds
adc
into
push
sub
xor
adc
aad
jbe
mov
out
outsl
sub
pop
js
or
sahf
pushf
jmp
imul
cmpsl
jo
cmpsb
and
pusha
add
cld
icebp
adc
popf
xchg
fisubrs
aas
out
cltd
pusha
pop
add
pop
pop
mov
sbb
mov
out
sub
or
mov
es
fmull
sub
movsb
out
sub
repz
mov
pushf
mov
out
jp
sub
xchg
inc
push
jl
push
gs
mov
int3
in
test
stos
repnz
ret
lods
pop
jle
nop
or
dec
ret
pop
xlat
cs
jmp
mov
xchg
add
lods
dec
jbe
sub
out
push
inc
xchg
call
fs
cld
adc
push
stos
lods
xchg
out
xchg
add
lahf
and
dec
fst
lcall
iret
push
roll
or
cmp
popl
mov
push
xlat
push
pop
mov
lcall
shll
mov
dec
or
pop
in
movb
push
dec
sti
int
jae
xor
pop
mov
xor
ljmp
popf
or
cli
mov
jbe
cmpsb
sbb
sahf
lea
cli
pusha
jecxz
or
test
push
frstor
notl
mov
scas
bound
shlb
fistps
jbe
into
adc
int3
pop
int3
xor
lea
mov
mov
jnp,pn
inc
sub
testb
out
fcmovne
enter
push
adc
add
jg
in
rclb
mov
mov
leave
pop
mov
xor
aas
popa
cmp
sbb
nop
test
stos
mov
divl
push
jle
pop
cmpsb
fisttps
jmp
hlt
lret
cmpsb
mov
and
cwtl
test
or
rcrl
ss
xor
ret
pop
push
je
jno
out
dec
inc
pop
ljmp
mov
pop
cmp
or
mov
aam
out
push
jle
popf
stos
int
test
insb
roll
out
nop
sti
test
push
out
jns
pusha
jne
ljmp
decl
lret
dec
sub
jle
add
lret
jle
icebp
adc
outsl
mov
push
or
push
out
popa
into
sub
jecxz
negl
and
mov
enter
fistl
pusha
sub
cmpsl
lcall
or
jo
popa
pop
imul
mov
cvtps2pi
mov
sbb
pop
inc
sub
in
hlt
pop
mov
and
pop
adc
add
mov
jl
lcall
mov
es
negl
out
stos
shrb
sbb
mov
lds
lret
stos
pop
repz
xor
ret
and
nop
hlt
add
mov
movb
loopne
push
push
fildl
sub
fcompl
lods
pop
out
insb
popf
xlat
jle
xchg
pushf
in
mov
lret
mov
addr16
pusha
fisttps
rclb
inc
jmp
repz
jge
sub
inc
jne
mov
je
arpl
stos
push
in
cli
sub
arpl
push
lcall
pop
mov
addr16
pop
lods
or
pushf
push
pop
xor
or
mov
sbb
aas
mov
leave
xchg
cmpsb
add
lcall
jle
imul
xchg
adc
out
mov
mov
mov
mov
jle
inc
add
ds
sub
and
cmc
inc
jmp
pop
lahf
repz
push
inc
mov
int
sti
jmp
inc
mov
lcall
addr16
mov
mov
mov
adc
cs
daa
out
lahf
jns
inc
or
inc
mov
popf
xor
enter
adc
pusha
cmp
xchg
loop
xor
xor
sbb
mov
inc
pop
hlt
add
sbb
mov
push
dec
mov
mov
sub
hlt
out
icebp
in
cld
cs
and
data16
mov
fsubrl
neg
negl
hlt
fmulp
push
xchg
pop
mov
xchg
enter
std
rcr
push
dec
inc
out
andl
andw
dec
and
mov
jno
dec
clc
pop
push
jno
push
sbb
pop
push
mov
and
adc
std
and
jle
mov
mov
sbb
outsl
push
out
out
cli
les
mov
out
fwait
jb
fsubrl
popa
sub
adc
cld
dec
fimull
xchg
pusha
inc
arpl
out
vdivsd
add
mov
jge
addr16
pop
dec
sbb
mov
sahf
sahf
and
mov
pusha
sub
push
and
popf
add
lock
jp
push
popa
in
or
loop
jmp
or
sub
in
inc
daa
or
out
jns
pop
sbb
adcl
loop
call
test
outsl
loopne
xor
mov
or
pop
mov
and
cmpsl
outsb
push
imul
popf
sub
xchg
pusha
mov
and
xor
dec
into
out
mov
mov
aad
mov
push
push
shl
test
mov
inc
pop
fcompl
inc
popa
sti
call
mov
push
inc
popa
sahf
out
fdivrs
inc
outsb
inc
stos
call
mov
dec
shrl
insl
push
pop
cmp
lods
pusha
clc
jg
xchg
push
pop
pop
mov
and
lods
lcall
cmp
outsl
scas
dec
out
cli
faddl
imul
out
pop
xor
out
xchg
mov
stos
addr16
scas
xlat
and
add
or
sub
adc
lcall
out
mov
inc
push
cmpsb
mov
pop
mov
clc
inc
subl
xchg
pop
dec
out
and
xchg
push
mov
out
pop
mov
mov
xor
je
enter
jge
mov
in
jg
mov
ret
fstps
hlt
jge
mov
mov
lret
sub
insl
add
mov
ja
mov
xlat
repnz
std
sub
adc
or
test
xchg
mov
jns
mov
clc
mov
cwtl
shll
and
arpl
lret
out
stos
es
mov
lea
fs
loope,pt
fistl
cmp
cltd
push
enter
gs
je
cmc
jp
negl
test
loopne
fisubl
data16
pop
cmp
mov
stos
mov
loope
arpl
inc
mov
xchg
leave
sti
pop
int
mov
aas
mov
rorb
outsl
out
out
xchg
arpl
push
or
inc
lods
popl
fucom
in
loope
mov
ss
js
in
sti
xor
push
pop
inc
pop
add
decb
test
out
jae
add
shll
stc
jne
pop
xlat
xchg
pop
outsb
pop
cmpsb
bswap
sbb
es
out
push
add
iret
stc
decb
or
stc
les
pop
out
sub
das
inc
dec
inc
cmp
adc
cmp
fsubr
inc
and
or
mov
jge
movsl
test
xlat
ss
scas
mov
jmp
xor
jmp
fld
sbb
jbe
leave
pop
enter
cmc
shlb
adc
mov
mov
push
cmp
cld
fs
aam
loope
out
mov
xor
mov
mov
dec
imul
pusha
push
jl
shrb
pop
in
pop
lds
pop
fiaddl
scas
and
adc
cltd
mov
or
jne
adc
mov
xor
mov
daa
add
out
sahf
dec
fildll
insl
fisubs
leave
test
out
adc
add
xor
inc
loope
jbe
inc
pop
add
xchg
enter
sub
test
xor
mov
mov
es
popf
loopne
testl
lods
in
leave
pusha
lcall
mov
aam
cmpsb
sub
lret
sbb
mov
mov
mov
sub
jp
mov
and
popa
mov
adc
adc
lahf
shl
pop
jb
popa
jmp
push
into
mov
and
mov
mov
mov
inc
out
xor
jnp
dec
and
mov
scas
outsb
mov
ret
sbb
shlb
lret
js
xorl
adc
push
insb
lods
mov
adc
cmp
ss
stos
xor
outsb
push
pop
in
sbb
lahf
jae
push
add
ss
mov
in
dec
inc
inc
inc
mov
and
cmpsl
xchg
repz
jno
leave
insb
shr
pop
dec
ja
test
xchg
movsl
outsb
idivl
pop
pop
test
or
popa
cmp
out
gs
xchg
pop
jmp
add
test
jmp
and
shll
jo
fs
mov
mov
stos
rcll
outsb
inc
pushf
lea
jae
or
sbb
or
data16
or
out
xchg
out
ds
mov
lahf
mov
and
dec
inc
stos
ficoms
xchg
loop
xor
popf
data16
mov
loope
xchg
mov
insb
jo,pt
dec
mov
mov
add
inc
adc
xor
or
lea
mov
pop
xor
dec
testb
and
xor
sub
jmp
fs
adc
shll
shlb
sbb
leave
xor
xchg
mov
leave
xchg
sbbb
hlt
rcrb
push
jmp
cmpb
pop
mov
jo
pop
ss
mov
sbb
into
sub
xchg
ja
popa
stos
fcmove
mov
adc
ja
leave
add
cmp
and
mov
out
add
mov
jae
pop
add
inc
sbbl
cmp
mov
dec
cmp
mov
call
mov
or
aam
fidivl
dec
push
mov
sti
dec
out
notl
or
int
pop
mov
fwait
mov
mov
dec
mov
and
daa
mov
sub
jne
mov
pop
rorl
push
in
jmp
popf
pop
pop
lds
and
dec
and
mov
es
mov
jge
fwait
jmp
sbb
sarb
dec
jne
push
jno
xchg
jl
pusha
pop
pop
lcall
sbbl
push
test
in
out
out
iret
pop
or
mov
xchg
push
pop
mov
jns
hlt
outsl
into
mov
pop
xor
fbstp
icebp
outsb
mov
imull
pop
mov
or
or
sbb
call
mov
and
dec
dec
pop
push
mov
sbb
dec
pop
xor
enter
nop
xor
mov
icebp
ds
mov
xchg
jg
dec
jne
out
test
mov
stos
leave
rolb
cld
pop
loope
cvttps2pi
lret
pusha
or
ja
pop
out
jns
fdivr
push
dec
fmuls
push
adcw
xchg
push
rcrb
fstp
loop
aad
out
push
sub
test
stos
aaa
sub
outsb
sbb
in
sub
data16
test
mov
insb
pushf
fs
dec
je
lcall
push
pop
mov
icebp
ret
pop
movups
dec
test
out
inc
mov
cli
in
mov
in
fwait
dec
pop
fnsave
mov
and
mov
rcll
pop
scas
jle
subb
and
lahf
inc
pop
ret
aad
repnz
out
out
lcall
or
mov
movb
sub
out
mov
push
in
movsb
mov
pop
shrl
push
mov
shrl
aas
divb
mov
aam
fs
js
fwait
ljmp
mov
xchg
push
xchg
inc
addr16
xrelease
push
pusha
pop
fdivl
aaa
in
fildll
loopne
clc
stc
xlat
mov
and
test
and
push
js
stc
adc
ja
xchg
lea
daa
popa
mov
mov
ss
sub
fnstcw
dec
sahf
dec
or
pop
fs
mov
inc
and
and
push
add
or
popa
and
dec
sbb
xor
and
mov
sub
fcmovb
pusha
jns
call
cld
out
mov
ds
mov
daa
insl
mov
popf
push
adc
lcall
inc
loopnew
cmpsb
call
mov
arpl
test
movsb
cld
fwait
mov
xchg
mov
sbb
and
and
int
bound
and
and
jecxz
gs
cltd
cs
pop
xor
das
repz
sbb
cli
loopne
je
jno
lret
jp
sbb
shrb
stc
out
andb
mov
jle
or
xchg
adc
xchg
xor
cs
bnd
out
lret
dec
insb
daa
pusha
add
mov
inc
or
sti
outsl
inc
rorb
shr
outsl
sub
movsb
adc
adc
sub
jns
es
hlt
call
push
out
jo
mov
jp
movsl
push
leave
imul
cmp
add
out
incb
ljmp
mov
gs
mov
push
adc
cmp
xchg
out
dec
ljmp
mov
dec
sti
subb
lret
push
lret
xchg
xchg
push
pusha
cli
pop
nop
pop
pop
arpl
xchg
cmp
std
inc
jne
fcmove
and
xor
movsb
aad
mov
clc
jecxz
pop
pop
enter
push
xlat
pusha
ret
push
xchg
cmovae
test
mov
jl
dec
pusha
pop
ljmp
lret
add
sbb
es
adc
lret
pusha
mov
shrb
push
daa
das
mov
sahf
leave
xlat
aam
push
popa
jle
ficomps
or
cmp
mov
ret
repz
jns
xorl
insl
or
bound
mov
xchg
jecxz
in
pop
jle
ds
arpl
mov
and
ds
pop
push
pop
dec
enter
and
fsubl
xor
pop
pop
mov
outsl
jbe
data16
popa
aam
nop
mov
lret
add
xchg
fsubrl
add
das
andl
cmc
adc
sti
iret
or
loop
enter
adc
pop
int3
subb
pop
fsubrl
je
aad
push
fisubs
insb
lods
and
int
sbb
mov
xchg
fs
movsl
sub
hlt
xchg
pusha
popa
xor
pop
in
or
aam
adc
mov
scas
inc
outsl
jmp
decb
mov
movsl
loop
xchg
ja
inc
imul
inc
sbb
push
out
push
in
fcompl
adc
mov
jnp
jl
pop
sbb
push
push
ja
xor
dec
mov
pop
pusha
pop
sbb
mov
out
mov
mov
mov
roll
pop
add
int
sub
push
shll
lods
sti
inc
adc
test
rol
pop
out
jo
pop
inc
push
fcoml
nop
adc
test
mov
inc
push
xchg
stc
lock
dec
xor
and
inc
xchg
ret
dec
lcall
test
inc
jnp
fst
sub
and
mov
popa
mov
sbb
out
ret
movsl
xchg
mov
or
scas
addr16
out
and
jmp
arpl
pusha
cmpsb
icebp
cmp
scas
mov
cmp
mov
insl
jae
mov
aam
fs
insl
push
cmp
xor
pop
adc
std
push
iret
pop
js
out
popf
lods
ds
scas
mov
sbb
jge
leave
ror
xchg
pusha
push
lock
decl
adc
mov
out
push
or
or
loopne
scas
stc
mov
int3
sub
jnp
or
das
in
add
mov
movsl
je
mull
insl
inc
fstps
push
xchg
lds
pusha
and
pop
inc
cmp
mov
imul
pop
nop
movsl
loopne
jmp
fwait
lahf
rolb
mov
popa
pop
movsl
sbb
in
pop
mov
dec
in
mov
adc
push
cmpsb
ds
int
lea
sahf
lods
rcrl
cmp
push
stos
fcmovne
dec
fidivrs
xor
pop
and
movsb
mov
mov
pusha
aaa
flds
inc
out
jne
test
inc
mov
push
flds
pop
dec
test
std
mov
mov
mov
dec
in
ffreep
mov
subb
aaa
mov
andl
pop
sbb
pop
and
popf
iret
xor
cwtl
addr16
ljmp
mov
in
loope
or
cld
cwtl
pop
mov
rcrb
out
pop
cltd
ja
and
push
adc
jbe
mov
je
pop
sbb
pop
inc
popa
ret
and
out
aas
cmp
in
adc
mov
inc
push
mov
vdivps
scas
bnd
stc
adc
pusha
xlat
xor
pop
mov
test
out
rorl
flds
adc
mov
pop
xchg
es
mov
cld
divb
and
out
cs
ljmp
ss
in
lret
lods
mov
or
push
stc
or
pop
and
popa
loopne
and
pushf
sub
dec
dec
repnz
push
lds
pop
and
xchg
push
inc
cmp
enter
gs
insl
jnp
cmp
addr16
and
lcall
and
fldcw
into
das
popa
and
push
das
out
fimuls
lods
aaa
test
or
mov
mov
jno
data16
cs
fisubs
cmp
orl
call
sub
shr
hlt
clc
and
movsl
mov
cmp
fsub
jmp
cld
mov
jns
mov
insb
add
mov
sahf
aam
ljmp
cmp
mov
fxam
cmp
aad
mov
xor
js
cli
mov
and
sbb
dec
pop
repz
cmovge
adc
jbe
in
pop
and
push
mov
pusha
in
xchg
jne
mov
jmp
pop
gs
lods
sub
mov
out
in
pop
mov
loopne
call
add
ds
sti
or
stos
push
repz
sarb
mov
pop
repz
aaa
pop
mov
add
push
hlt
mov
cmpsl
mov
out
mov
mov
mov
je
nop
push
pop
rcl
cmp
fsubl
push
movsb
jle
repz
pop
fsub
ljmp
adc
imul
xchg
jo
push
jl
aad
pop
xchg
cmc
xor
xchg
adcl
lock
xor
jmp
leave
lahf
push
pusha
xchg
js
jmp
jo
sub
dec
push
mov
nop
push
pop
xchg
sahf
push
pop
sbb
mov
arpl
in
jne
xor
mov
mov
es
mov
sbb
push
mov
pop
aaa
and
xchg
mov
pop
push
hlt
pusha
pop
mov
pop
rorb
pop
scas
inc
popa
movzbl
in
mov
xchg
sub
aad
ljmp
idiv
add
test
inc
cmpsb
addb
add
mov
stos
dec
out
or
lock
ja
sub
and
sarl
out
sbb
ret
adc
bnd
testl
push
or
call
in
enter
pusha
push
sub
mov
mov
push
sub
iret
mov
add
ficoms
lea
mov
inc
pop
push
dec
test
imul
test
jb
lret
pusha
std
cmp
gs
cmp
fwait
ja
js
xor
lret
mov
and
out
mov
in
lahf
mov
xor
sbb
cmp
jmp
outsb
scas
adc
popa
cmp
aas
loope
out
sub
popf
mov
xchg
mov
cmpl
pop
dec
imul
cwtl
pusha
js
pop
jno
and
add
jb
xor
mov
or
mov
dec
mov
sbb
xor
popa
mov
es
insb
pusha
shl
mov
leave
dec
dec
jo
xlat
adc
jecxz
enter
and
mov
pop
sbb
pop
dec
popa
push
hlt
mov
adc
int3
or
lret
ret
mov
inc
pop
andl
shlb
sbb
xor
pop
xchg
adc
mov
xor
jne
sbb
sahf
test
jle
call
in
gs
jb,pt
mov
movsb
xor
ljmp
test
repnz
or
pop
into
sbb
jmp
pop
mov
insl
inc
xor
sub
mov
xchg
add
sub
shll
stos
pop
and
cwtl
cld
push
sub
repnz
ljmp
mov
outsb
repnz
out
nop
popa
imul
popa
add
aaa
ss
mov
addr16
popf
lea
sti
mov
pushf
out
out
cwtl
pushl
shlb
stos
jno
stc
jns
movsl
push
repz
lods
inc
cld
xlat
jno
and
push
ret
mov
fsubrp
pop
lret
ds
cld
pusha
clc
es
es
mov
or
daa
loope
leave
sub
mov
pop
repnz
imul
jne,pt
mov
pusha
push
sbb
es
push
pusha
or
test
imul
jae
and
mov
pop
and
popa
pushf
pop
test
adc
push
fnsave
cltd
or
cmp
cmc
cmpsl
mov
push
push
incl
test
sbb
sbb
inc
cmp
scas
daa
push
out
jbe
fsubr
mov
dec
les
in
sub
pop
or
pop
popa
arpl
je
xor
xchg
in
cmp
xor
es
inc
in
mov
mov
sub
cmpsb
pop
mov
jge
xchg
test
out
dec
test
into
mov
xor
imul
hlt
add
nop
aas
jle
mov
ss
inc
enter
out
dec
mov
or
icebp
cmc
dec
iret
sbb
or
aam
and
outsb
pusha
xchg
mov
fwait
and
out
adc
int3
xchg
adc
mov
rcrb
call
out
mov
sbb
cwtl
out
add
inc
sbb
ljmp
adc
cmc
mov
imul
sub
clc
fstpt
out
add
leave
movd
aaa
adc
jg
arpl
xor
cwtl
pop
aad
addl
cmp
xchg
push
insb
mov
out
fcomp
fiaddl
std
mov
out
out
rcrw
shrl
pop
xor
adc
mov
popa
push
aad
out
or
stos
aam
and
mov
cld
mov
mov
sbb
pop
scas
and
ds
push
out
int
aas
and
jg
shlb
or
or
stc
pusha
ds
jo
xor
movsl
jmp
data16
shr
pop
adcl
pop
xchg
push
loope
mov
xchg
fisubl
and
out
xchg
rcrb
xor
mov
cld
scas
outsl
out
mov
inc
jbe
mov
mov
dec
mov
xchg
pop
xchg
mov
mov
jle
mov
sbb
loop
cmp
pop
jbe
stos
push
inc
mov
pusha
sub
ret
or
push
push
leave
xchg
adc
les
movsb
add
dec
shlb
adc
lock
repnz
fdivrp
sti
xor
cmp
push
js
loope
and
lods
xchg
and
loop
arpl
mov
jg
dec
divb
stc
fstl
fsubs
sub
sub
aam
cmp
jbe
adcb
es
pop
insb
out
sti
inc
and
pop
pop
ja
imul
sahf
lcall
pop
or
jne
pusha
in
pop
sbb
lock
sbb
fwait
sub
int
out
sbb
leave
iret
xchg
out
push
mov
out
test
jno
xchg
pop
repz
and
xor
imul
adc
sbb
inc
and
lret
jl
outsl
pop
xor
in
popa
mov
addr16
loope
pop
mov
pop
push
mov
dec
pop
inc
loopne
mov
out
subb
mov
leave
insl
movsb
adc
mov
cltd
cs
mov
xor
mov
cwtl
scas
sub
cmp
pushf
pop
popa
adc
dec
insl
pop
jb
in
or
or
js
pop
dec
sti
ret
mov
les
outsb
aad
xor
inc
mov
in
push
or
sbb
movsb
pop
or
pop
and
ret
fldl
xorl
pop
stc
fmul
cmp
movsb
xor
xor
mov
out
sub
popa
add
pop
xor
ret
and
or
cwtl
sub
cmpsb
push
jbe
jmp
inc
ret
xor
pusha
xor
xor
and
data16
aad
popa
std
cmpsb
call
in
aaa
movsl
push
dec
mov
mov
rclb
xor
ret
movsb
rolb
jbe
into
xchg
pushf
pslld
mov
adc
xchg
dec
frstor
adc
jge
dec
lcall
mov
cmp
sbb
adc
cs
push
lahf
xchg
or
pusha
cmp
mov
cmp
mov
mov
loop
or
lahf
push
int
xchg
ret
add
push
out
addl
movsb
enter
stos
faddl
jl
pop
lcall
xchg
gs
addr16
pop
mov
or
inc
cmp
std
mov
sub
icebp
mov
push
cmc
add
and
xor
loope
add
out
cs
shrl
sub
lcall
push
daa
and
xchg
les
and
and
and
mov
fdivs
adc
inc
or
insb
test
mov
and
in
dec
pop
mov
inc
pop
and
loopne
mov
out
movsb
psubq
jb
dec
add
mov
adc
outsl
pusha
cs
mov
out
fwait
std
lock
in
mov
xor
xor
pop
imull
push
cmpxchg
inc
jo
repz
dec
cmp
flds
pop
xor
jp
in
test
mov
push
fs
pop
sahf
xor
pop
push
and
jns
adc
cmp
push
inc
addr16
lcall
dec
ret
or
and
sarb
int3
rdtsc
imul
jb
divl
push
scas
mov
clc
push
add
fs
or
lods
cld
cs
sahf
test
bound
inc
outsb
xlat
adc
jmp
sub
out
mov
stos
mov
ret
pusha
shll
jg
test
adc
ja
mov
mull
dec
pop
clc
push
out
dec
jne
imul
push
jle
popa
nopl
add
mov
dec
into
sub
adc
mov
mov
pop
outsb
lea
pop
xchg
fidivs
call
sbb
out
xsaveopt
shlb
and
mov
icebp
popa
mov
mov
mov
rclb
jno
xchg
push
jle
push
mov
lods
push
and
pop
inc
xlat
cli
loope
jmp
mov
push
sub
or
push
leave
xor
dec
mov
mov
dec
adc
in
in
inc
jb
mov
int3
pusha
pop
pop
mov
sahf
cmp
inc
sbb
mov
cmp
or
pushf
pop
pop
ret
mov
lods
in
pop
pop
or
mov
ss
cmp
inc
sahf
inc
popl
pop
loop
fcoml
pusha
sar
lea
add
sarl
aam
test
adc
jmp
mov
int
xlat
addr16
xchg
out
lea
aaa
xor
jnp
test
inc
aaa
popa
jg
das
mov
movb
lods
aad
pop
loop
cs
cli
out
mov
ja
xchg
orl
push
xor
dec
hlt
sub
jno
mov
pop
push
imul
sub
movsb
adc
push
lods
dec
pop
outsb
test
out
xchg
test
inc
out
push
pop
cmp
pusha
xchg
out
lock
mov
or
mov
jnp
push
and
cmp
or
adc
mov
dec
cmp
and
sub
pusha
jae
or
dec
add
fs
mov
pushf
mov
sub
xor
movsl
dec
or
sbb
mov
sub
ret
sbb
jg
cmp
inc
fmull
in
sbb
fimuls
sbb
test
into
testl
into
cli
out
cld
add
push
cmp
mov
mov
inc
mov
das
movsb
jnp
cmp
lods
fldcw
incb
cmc
cmpsb
push
rolb
and
data16
or
pop
inc
xor
adc
pop
mov
imull
in
pop
adc
and
pusha
jnp
sahf
mov
out
pop
pushf
mov
mov
cmpsl
cmpsl
loopne
nop
cltd
aam
aaa
xor
out
es
clc
sbb
pop
sub
lods
or
movsb
xor
out
mov
sahf
imul
fstpt
in
mov
aam
add
dec
and
pusha
inc
testb
out
jmp
jmp
outsl
mov
arpl
out
test
in
scas
int
mov
and
out
dec
pop
movsl
jae
pop
mov
sub
lret
cmp
jge
xchg
popf
and
out
loop
adc
push
cmpsl
xchg
lahf
pop
xor
dec
adc
pause
sub
mov
add
lcall
push
or
mov
js
into
lods
push
repz
jbe
push
mov
in
sub
clc
nop
in
repz
into
shl
lods
mov
loope
out
cs
out
or
inc
pop
mov
mov
or
sub
fidivrs
pop
xlat
es
push
in
nop
iret
jns
jne
dec
out
movsb
xchg
jmp
or
push
mov
cmc
ja
cmp
les
or
dec
aaa
jbe
pusha
stos
push
int
ds
les
sbb
icebp
cld
mov
fidivs
sbb
pop
pop
fmull
andl
mov
shl
dec
jns
adc
push
inc
in
pushf
inc
popa
sti
int3
push
repz
roll
ja
call
cltd
test
movsl
jno
jecxz
hlt
jle
add
and
and
lock
lock
mov
ret
mov
pop
mov
add
lret
addb
bound
pusha
mov
out
popf
jo
leave
jmp
out
push
negb
jmp
mov
int
lahf
add
fneni(8087
push
adc
scas
push
lea
mov
cmp
xchg
cltd
insb
mov
inc
popf
mov
mov
push
push
or
repz
adc
mov
out
icebp
js
push
out
roll
aad
or
cmpsb
mov
mov
cmp
sub
mov
mov
push
pushf
jnp
and
xchg
mov
shlb
push
or
cli
call
add
inc
jns
push
test
inc
inc
sub
lcall
pop
xlat
insb
push
add
cmc
ret
pusha
adc
add
test
dec
pop
pop
test
leave
icebp
xor
jg
or
adc
or
dec
cwtl
dec
stc
pusha
aad
loope
pop
pop
pop
inc
pop
inc
fimuls
decb
sbb
lea
inc
in
pop
adc
scas
mov
mov
sub
lahf
pushf
push
mov
jle
cltd
es
out
imul
fisubs
shlb
in
mov
dec
dec
pushf
popa
mov
xchg
lahf
pusha
xchg
out
in
scas
push
jge
movsl
std
into
ja
mov
jo
pop
push
sahf
inc
pop
das
popa
mov
leave
data16
sbb
sub
and
mov
enter
adc
out
push
mov
shlb
mov
pop
daa
mov
push
pop
jp
mov
int
and
push
popa
cmp
shrb
add
cmp
inc
pop
scas
mov
add
inc
imul
popa
popa
push
mul
fmuls
and
push
inc
xchg
jle
adc
out
ss
adc
movsb
stc
mov
sti
sti
loopne
pop
or
adc
arpl
rclb
and
testl
mov
add
pushw
idivl
ret
lods
inc
mov
fidivs
and
mov
cmp
ret
mov
xor
or
mull
add
add
push
mov
mov
add
inc
jo
daa
or
push
rolb
mov
ja
jg
pop
jl
sbb
mov
or
lock
outsb
xchg
inc
mov
adc
scas
and
ret
add
cmp
mov
dec
test
inc
loope
inc
or
pop
adc
leave
mov
sbb
xchg
adc
and
mov
sahf
iret
mov
mov
fists
fstpl
shlb
jmp
fidivrs
mov
xchg
test
push
ret
mov
mov
scas
add
stos
in
jl
or
mov
mov
push
push
scas
out
mov
mov
jmp
push
dec
fs
and
cmp
enter
jbe
dec
dec
cmpsb
sbb
xchg
xchg
loopne
xchg
push
in
adc
test
add
popf
ljmp
ds
sbb
add
repz
xchg
cmp
jg
sub
sbb
push
popa
cmc
mov
sbb
lock
jo
out
push
dec
mov
or
xchg
push
add
icebp
out
or
xchg
sub
outsl
nop
das
pop
xchg
loopne
int
push
pusha
pop
push
pop
mul
fidivs
lock
xor
add
cld
pusha
mov
icebp
inc
clc
out
cli
int3
mov
test
cs
dec
inc
or
std
movsb
stos
adc
frstor
cs
ds
or
inc
push
daa
mov
mov
loopne
out
nop
lock
rclb
jb
data16
jns
subb
dec
inc
adcl
hlt
loopne
mov
repz
fisttpl
inc
enter
pop
loopne
shrl
testl
cmpsb
mov
mov
and
loopne
arpl
clc
shrb
cs
adc
sbb
gs
pop
das
mov
mov
clc
push
shl
outsb
cld
test
arpl
mov
mov
aas
jmp
scas
pop
popf
mov
ds
push
fsts
jmp
cmp
jge
pop
pusha
movsb
dec
popa
mov
xchg
ret
das
les
mull
dec
iret
xchg
jmp
sbb
cmp
cmpsl
cltd
pop
pop
inc
data16
lock
in
out
jae
lahf
in
lea
mov
sub
adc
pop
lock
rcll
xor
jmp
dec
inc
je
popa
cs
hlt
loope
mov
roll
fcmovb
xchg
pusha
jl
cmp
dec
inc
sahf
imul
sbb
loop
in
stc
xacquire
addr16
sbb
das
mov
sbb
pusha
xchg
pusha
nop
and
and
and
jb
sbb
add
pusha
mov
mov
test
fmull
out
dec
pop
jle
mov
inc
fwait
loopne
pop
pop
insl
jg
mov
fsubs
test
or
cltd
out
mov
ds
rolb
jmp
pusha
divl
in
sub
mov
inc
cmpsl
lret
jp
add
xor
scas
imul
test
push
popf
xchg
mov
mov
mov
insl
push
push
xor
push
cltd
jle
shlb
fstps
out
scas
cli
dec
jecxz
cmp
test
jg
and
bound
and
pop
jecxz
lahf
sub
adc
stc
push
mov
push
gs
out
jp
mov
pop
sub
pop
fbld
icebp
in
pusha
das
outsb
mov
movsl
push
jp
in
adc
icebp
xor
mov
mov
pusha
lret
lret
addr16
out
divl
stos
imul
dec
fcompl
aad
sbb
test
cmp
out
test
pop
scas
lcall
mov
stos
daa
popa
cmp
popf
dec
push
aas
sub
idivl
push
inc
dec
js
sub
mov
cmpsl
sbb
dec
mov
ficomps
aaa
mov
fnstsw
fcompl
pop
cld
int3
pop
cmp
xor
sahf
jge
cmpsb
push
push
out
fisubrl
jge
pop
addr16
nop
mov
cmpsl
jno
gs
in
mov
movsl
or
mov
mov
out
push
add
in
hlt
and
loopne
xchg
pop
fs
fdivs
add
dec
or
popf
mov
popa
mov
out
or
push
add
lods
push
shlb
mov
xchg
mov
xchg
mov
outsl
push
icebp
xchg
ss
out
fmull
push
lret
iret
iret
mov
or
cmp
pop
scas
cmp
adc
mov
sbb
xchg
hlt
mov
pop
rcrb
imul
aam
and
js
xor
mov
add
inc
insl
out
and
in
jns
fsubl
mov
push
push
lods
repnz
leave
inc
es
dec
adcb
ds
outsb
inc
push
jge
out
fwait
bound
and
or
xchg
dec
pushf
cmp
adc
add
push
mov
lahf
xor
jb
mov
jns
imul
sbb
mov
aad
xor
es
pop
mov
and
inc
jne
nop
cmpl
iret
xchg
push
and
movsb
inc
mov
dec
lods
shl
or
mov
jecxz
sbbl
leave
xchg
arpl
imul
push
inc
out
stc
dec
movsl
cmp
insl
lods
cmp
jno
inc
jbe
inc
clc
mov
pusha
testb
fstpt
mov
out
pop
add
jecxz
gs
and
and
xchg
push
cld
jmp
xchg
or
es
out
push
sbb
mov
mov
in
sbb
sbb
data16
jl
nop
ja
out
data16
dec
or
rcl
mov
pop
sbb
inc
in
push
cwtl
cld
pusha
das
sub
subb
adc
xchg
or
popf
jl
shll
mov
cli
sub
les
sbb
data16
adc
ja
rcrl
pop
xchg
scas
aad
pusha
ljmp
xchg
arpl
jno
iret
jmp
lahf
jbe
cld
pusha
mov
mov
mov
mov
or
dec
mov
bound
ds
mov
adc
addl
pop
out
incb
jne
js
insb
add
out
ret
and
cs
jg
push
fiaddl
es
pop
das
dec
xchg
enter
dec
popa
cs
mov
enter
decl
addl
int
std
cmp
mov
insl
dec
xchg
pusha
and
pop
xor
gs
xor
xchg
aaa
sub
mov
imul
stos
pop
scas
xchg
test
sbb
ds
es
sub
pop
xchg
std
or
add
dec
pop
jo
mov
pusha
popa
pop
push
sbb
or
and
leave
or
sbb
mov
pop
lcall
enter
sbb
add
xchg
jmp
movsb
xor
add
xor
cmc
pusha
sti
mov
bound
mov
out
repz
lret
add
outsb
popl
mov
pop
lds
pop
adcb
xchg
pop
inc
push
mov
cli
pushf
outsl
pop
dec
jp
fs
mov
push
out
add
sub
xor
popf
shrl
pop
fldcw
or
mov
fnsave
popl
mov
int
in
icebp
inc
sub
mov
scas
xchg
push
cwtl
mov
dec
in
stos
pop
add
popa
inc
jne
dec
popa
aad
test
jmp
test
mov
dec
sbb
in
cmp
out
push
dec
leave
int3
mov
imul
pusha
pop
sub
dec
fs
jp
push
mov
jge
cmpsl
ficoms
shl
mov
sbb
das
scas
pop
leave
xor
jo
sti
lock
cmpb
fistpll
dec
scas
fs
out
cmp
add
push
test
pop
into
out
ja
fidivl
sub
pop
cmpsl
mov
mov
out
ss
jp
jbe
mov
rcrb
lret
shll
xchg
inc
jno
roll
or
sub
cmp
bound
into
xchg
xchg
inc
cmp
mov
sbb
repz
cmpsb
or
stos
xchg
nop
pop
outsb
xor
loopne
jbe
int
jmp
push
adc
lret
out
jl
lea
lret
call
out
pop
aam
xor
push
jl
jmp
stos
pop
sbb
les
or
lods
loopne
mov
insb
aad
push
dec
imul
pop
mov
pop
mov
inc
push
and
xchg
mov
jae
cltd
jbe
pop
fwait
and
fwait
pop
adc
inc
sub
inc
movsl
mov
xchg
adc
test
lcall
pop
pop
add
or
jae
ljmp
push
in
ret
push
test
pusha
cs
lcall
add
out
sbb
mov
and
es
dec
and
popf
pusha
push
imul
xchg
test
push
mov
adc
ds
xchg
ja
inc
add
pop
mov
mov
mov
sub
and
pop
mov
dec
mov
stos
mov
fiadds
xchg
sub
dec
lret
adc
clc
push
stos
cmp
ja
dec
sub
lock
je
and
cmp
jae
adc
push
pop
push
lahf
cwtl
mov
adc
clc
mov
jb
std
pusha
dec
xchg
ja
fdivrl
test
repz
test
mov
pusha
je
or
pop
mov
jmp
int3
or
fistl
insl
leave
sub
outsl
push
mov
mov
xor
or
inc
cltd
leave
fcomps
cwtl
jle
imul
insb
cmp
sbb
jno
pop
sub
mov
or
push
xchg
xor
mov
inc
add
add
test
xor
jnp
lock
mov
mov
scas
lret
dec
bound
mov
std
adcb
cwtl
lret
dec
fstp
dec
pop
mov
test
out
add
cmp
lods
stos
mov
test
add
mov
xchg
push
mov
fwait
movsl
idiv
jno
pop
es
mov
jle
jno
adcb
pop
lret
in
mov
aaa
inc
xor
cmp
push
pop
test
lahf
xchg
dec
popa
hlt
pusha
iret
cmp
popa
call
movaps
orb
clc
sbb
cmc
xchg
loopne
addb
loopne
pop
outsb
jl
imul
lahf
inc
sar
adc
pop
xor
add
pusha
mov
jl
cli
out
cmc
xchg
mov
lret
cmp
in
adc
push
push
mov
pop
sub
inc
stc
pop
cmp
imul
jp
cmpb
jmp
cs
push
adc
int
jbe
xchg
out
cli
push
push
jp
mov
sbb
data16
stc
mov
lret
jo
jb
xchg
xchg
shlb
jnp
inc
or
jo
mov
add
dec
pop
jns
aas
call
jb
sti
mov
js
fs
mov
and
mov
shrb
popf
jo
leave
mov
inc
add
push
aas
xor
pusha
das
je
inc
pushf
imull
out
in
mov
cmp
movsl
ljmp
adc
les
popa
pop
ljmp
sub
sbb
clc
imul
insb
inc
dec
mov
add
ds
pop
test
outsl
bound
lret
adc
mov
out
sahf
adc
mov
mov
mov
cmp
nop
stos
fcoms
arpl
pusha
test
pop
jbe
sbb
sarl
pusha
sbb
fcmove
pusha
rcrl
and
mov
test
dec
inc
or
sub
nop
push
pop
add
xchg
cmp
sbb
mov
inc
mov
push
add
cwtl
test
fcoml
jbe
fldcw
sub
inc
xchg
aas
sub
fldpi
jne
mov
insl
jb
and
add
pcmpgtb
inc
daa
cmp
push
bound
pop
mov
andl
push
mov
loop
loopne
in
pushf
ja
and
data16
adc
push
lcall
mov
rcrl
pop
cld
push
daa
out
int
in
mov
xchg
mov
mov
out
push
inc
push
inc
xchg
xlat
lret
or
icebp
ja
movsl
ja
jl
das
jmp
les
test
test
test
add
pop
sub
push
cs
adc
fists
sahf
sbb
inc
sbb
mov
fs
pusha
fmuls
jge
roll
out
addr16
loop
push
mov
inc
lds
je
insb
out
cmp
jae
imul
fldz
inc
dec
push
iret
pop
nop
dec
sahf
sti
push
outsl
sbb
cmpsl
mov
xor
mov
and
cmp
fldcw
dec
push
out
subb
cld
dec
jbe
jp
rorb
inc
mov
insb
hlt
pusha
int
and
mov
into
addr16
jecxz
dec
loop
and
lea
fidivrs
xchg
jge
std
sub
mov
mov
mov
shr
fidivs
xchg
icebp
lods
jg
out
js
cwtl
mov
scas
cmp
pop
leave
xor
inc
add
mov
adc
out
rcll
sbb
mov
and
jp
and
ss
dec
das
gs
movsl
fldenv
in
mov
in
test
push
mov
mov
jb
mov
mov
cmpsl
into
fs
repnz
dec
add
lds
mull
push
pusha
in
push
repz
out
ja
jp
int3
aas
out
rorl
mov
ljmp
pop
lods
sub
outsl
xor
lods
pushf
push
cmp
and
sbb
out
adc
sbb
or
add
and
into
out
gs
ljmp
mov
add
mov
jne
cmp
out
dec
add
xor
adc
and
mov
dec
mov
jo
push
mov
push
int3
push
dec
cld
pusha
lds
js
xor
dec
out
xlat
push
mov
and
pop
fidivrl
ds
sbb
adc
and
fwait
and
dec
out
pop
outsb
sub
adc
jbe
inc
dec
mov
std
pop
mov
xchg
mov
mov
fsubs
xor
rcrl
fsts
cltd
or
xchg
cmpsb
mov
mov
push
popf
fildll
xor
add
pusha
iret
xchg
xchg
test
cmp
push
fmulp
inc
mov
mov
cs
mov
out
push
adc
xlat
mov
jecxz
outsb
test
cmp
mov
and
cmp
sub
sahf
mov
das
ss
aas
aaa
mov
xor
mov
xor
jns
add
sub
or
cld
xchg
inc
outsb
xchg
scas
jp
add
mov
pusha
cs
mov
ljmp
ja
fists
mov
pusha
lret
jmp
nop
and
mov
mov
int
pusha
fdiv
es
sub
xor
out
aad
loope
pop
jp
xchg
dec
nop
mov
xchg
mov
sbb
sbbb
scas
inc
movsl
incb
sub
aad
cld
dec
pop
mov
xlat
push
inc
dec
or
int3
mov
xor
jecxz
jge
aaa
dec
push
sub
mov
sbb
mul
pop
adc
and
mov
mov
out
int
xor
or
mulb
dec
mov
jle
addb
jp
and
ret
sub
roll
fsubp
subb
sub
adc
lahf
or
std
cli
xchg
ss
mov
pusha
cmp
mov
or
jnp
daa
cmpsb
and
std
lods
and
push
sub
imul
lds
push
adc
add
sti
mov
iret
mov
cmp
push
push
push
ret
pusha
and
adcl
ret
fst
pop
std
int3
mov
iret
pusha
mov
mov
scas
test
call
push
movsb
push
stos
cmp
mov
or
movsb
loopne
addr16
push
mov
and
std
add
sahf
xor
arpl
scas
cmpsl
sub
mov
mov
nop
movups
mov
fsubrl
pop
jb
lret
stos
and
cld
xor
dec
int3
iret
adc
cmpsb
xor
sub
cltd
push
pop
jbe
mov
dec
fnstenv
pusha
outsb
icebp
inc
enter
ret
nop
push
subb
call
insb
sbb
sti
cli
push
out
out
nop
cli
jg
inc
add
push
movsb
and
ret
xchg
pop
dec
loop
cmp
push
adc
fwait
adc
sahf
cli
pop
add
dec
add
call
pushf
leave
mov
xchg
pusha
or
out
add
movsl
mov
in
or
leave
divl
repnz
jl
push
push
je
mov
lcall
jmp
ds
mov
test
jns,pt
cmp
cmp
pop
dec
inc
out
mov
mov
lcall
add
pop
popa
push
sbb
cmp
jmp
clc
lret
sub
jae
xor
data16
out
mov
cli
hlt
and
test
fldcw
jg
inc
xor
lret
inc
xchg
add
xchg
mov
mov
les
jns
inc
ret
mov
inc
repz
loopne
xchg
add
inc
mov
arpl
mov
mov
sbb
dec
jnp
imulb
scas
daa
dec
pusha
inc
cld
incl
add
loop
fxam
out
jmp
fiadds
out
or
addl
mov
cmp
mov
xor
xlat
out
mov
stos
sub
or
jne
mov
inc
jb
mov
scas
test
pop
pop
imul
xchg
pusha
jp
cwtl
push
dec
pop
mov
xchg
pop
es
push
pushf
pusha
and
sbb
dec
push
clc
and
loop
mov
xchg
sbb
ret
sbb
insb
and
dec
xor
add
dec
cmp
ficomps
sub
mov
in
pop
add
fbld
sbbb
sar
iret
ret
add
mov
sub
sub
mov
cmp
dec
filds
inc
mov
insl
push
mulb
out
negb
push
mov
push
aad
jecxz
mov
cwtl
pusha
adc
add
add
xor
inc
mov
add
pop
cld
in
aaa
xor
aad
shr
jae
lea
scas
push
pop
cmpsl
mov
mov
loope
mov
dec
in
cli
pop
movsb
cmp
xchg
push
nop
or
dec
cmc
movsl
cmp
xor
mov
pop
mov
dec
popa
lret
add
pop
test
sbb
out
les
push
inc
addr16
or
ret
pop
xor
cmpsl
push
loopne
popw
gs
loope
insl
outsl
mov
xchg
push
fisubrs
pop
sti
push
mov
mov
mov
jns
std
mov
cmpl
jae
or
fcomps
shll
mov
je
cs
pop
cmp
into
insl
cmp
dec
mov
push
jmp
add
mov
stc
ret
fcompl
pop
jo
push
push
mov
pusha
aas
loop
dec
imul
test
mov
dec
data16
pop
popa
mov
adc
mov
mov
mov
mov
test
inc
xor
cmc
push
sahf
int3
ret
cmp
les
mov
in
repz
mov
popa
sbb
arpl
out
iret
int
fs
push
popf
mov
loopne
xchg
mov
fsub
shll
mov
shrb
jmp
popf
push
add
and
pop
clc
inc
pop
shrb
int3
fs
jo
in
cmp
sbb
movsl
xlat
mov
sub
xor
cmp
sahf
sarl
adc
push
aas
push
cmp
and
inc
sub
orb
xchg
push
leave
cs
lods
out
stos
sub
jge
jae
scas
mov
cmpsl
push
imul
jbe
in
pop
xchg
js
movsb
sub
dec
push
xchg
pop
sbb
jnp
test
shrb
dec
in
jae
sahf
shll
or
or
les
clc
sub
mov
faddl
stos
mov
sub
dec
adc
push
adc
das
mov
sbb
jmp
cs
xchg
lret
mov
adc
sahf
dec
or
pop
fcompl
mov
pusha
ret
out
pop
fisttps
aam
mov
mov
lds
and
int3
sub
mov
mul
imul
rolb
jnp
pop
mov
or
inc
repnz
popf
out
push
lret
mov
mov
push
push
push
or
decb
cmp
stos
lea
or
inc
popa
jl,pt
add
pusha
cs
fld1
jae
mov
rcl
inc
leave
ret
jmp
jmp
nop
pushw
sub
scas
push
out
inc
int
cmc
jno
sub
imul
push
popa
daa
inc
xchg
insb
xchg
insb
pop
fcomps
adc
xchg
and
adc
icebp
call
pusha
ficoml
dec
sbb
testl
cmp
add
cmp
inc
daa
fwait
xor
push
push
dec
xchg
pop
shll
inc
xlat
mov
and
scas
dec
pop
and
pop
stc
sub
scas
jle
add
mov
xchg
pop
mov
pushf
sbb
pusha
xor
xchg
es
and
xchg
dec
jg
pop
lret
adc
rolb
pop
jns
sbb
ds
mov
mov
mov
mov
popa
cmp
jl
aaa
pusha
pop
testb
jecxz
pushf
mov
pop
decl
addb
cltd
aad
test
xchg
imul
insl
testl
push
fstps
or
mov
mov
test
test
mov
jae
nop
mov
mov
and
in
movb
sub
shlb
mov
xchg
and
push
scas
popf
insl
push
and
in
or
lret
xchg
ret
xchg
lret
adc
sub
pusha
pop
fdivr
in
imul
inc
imul
lcall
pop
mov
lds
pusha
daa
rorb
fs
xchg
push
jg
fdivs
scas
mov
movsl
mov
pop
push
cld
jp
call
shll
jbe
mov
jns
subb
imul
pusha
mov
jns
pop
out
cmpb
cwtl
mov
imul
lods
sahf
loop
test
loopne
pop
push
add
fdivp
or
mov
test
imul
xor
pop
cmp
mov
sub
lret
xchg
fcompl
pop
pop
mov
adc
mov
fdivs
das
push
lock
jecxz
and
data16
js
mov
sbb
or
sbb
std
inc
insb
xor
dec
jae
mov
inc
ret
xor
or
jl
mov
xlat
jmp
into
inc
cwtl
inc
cltd
rclb
inc
lock
add
add
int3
loopne
xchg
mov
out
pop
or
xchg
rorb
mov
popa
dec
stos
xchg
cmp
imul
cli
std
cmpsb
inc
push
pop
xchg
fsubrl
mov
push
out
xor
pop
jmp
lock
out
push
lock
bound
cmp
fdivp
mov
outsb
pusha
add
fcmovne
lods
xchg
clc
mov
xchg
das
xchg
pop
out
jno
test
aaa
sbb
sub
pop
call
ja
inc
popa
cmp
xchg
mov
sub
int3
mov
fs
mov
mov
in
jl
pusha
fninit
mov
out
fbstp
out
int3
push
outsl
cmp
adc
or
decb
stos
adc
add
add
aad
dec
fs
fidivrs
push
fs
pop
cmp
push
push
cmc
into
xchg
dec
and
mov
push
cli
inc
pop
pop
mov
push
loope
push
xchg
dec
les
loopne
clc
sub
shll
outsb
cs
pop
insb
xor
dec
sub
push
int3
fsubr
xor
mov
in
inc
in
mov
jno
rcrl
pop
xchg
sbb
jb
add
jge
mov
es
dec
shll
aas
nop
push
push
and
dec
out
sarb
mov
adc
arpl
shrb
push
or
cs
or
jmp
add
pushf
mov
pusha
sub
dec
in
rcrb
out
jg
adc
negb
test
dec
insl
push
xor
movsl
or
pop
xor
push
mov
push
inc
fiadds
pop
pop
pushf
mov
mov
clc
fistl
addl
xor
and
xor
popa
and
fldenv
into
movsb
jbe
dec
pop
jg
push
aad
loopne
xchg
mov
mov
cs
pop
lret
pusha
mov
push
repz
test
rorb
in
jg
dec
mov
dec
pop
aad
pop
js
ret
inc
fstps
mov
mov
adc
sub
scas
cmp
pusha
mov
push
lahf
and
jbe
xchg
je
ja
jae
pop
outsb
lcall
adc
sub
mulb
test
dec
jo
xor
mov
femms
es
in
arpl
scas
dec
jno
stc
jns
or
mov
pop
inc
push
inc
mov
mov
inc
out
inc
mov
mov
pop
out
and
inc
daa
inc
adc
in
pop
push
pushf
lcall
add
pusha
or
test
adc
sub
out
sub
movsb
into
mov
pop
jmp
mov
ds
sbb
xor
jbe
into
jnp
jbe
cwtl
pusha
pop
test
jno
out
xor
xor
test
xchg
gs
jne
xlat
add
cmp
pop
fsubl
xor
ja
shrb
ficomps
subb
in
out
lea
fbld
aas
sub
aaa
and
movsl
push
in
adc
std
aam
shll
iret
mov
popa
ret
call
out
xchg
insb
push
loope
es
and
and
orb
push
popa
and
shrl
notl
cmp
sub
xor
bound
mov
faddp
out
scas
sub
cmc
jb
adc
and
sbb
jnp
test
xchg
pop
xchg
xchg
rolb
pop
mov
dec
mov
shll
cs
bnd
jge
cmc
test
mov
lret
test
cwtl
pushf
lock
out
xor
pop
xchg
in
in
inc
dec
pop
lea
and
jb
out
or
mov
lahf
mov
mov
mov
push
cwtl
xor
sahf
push
dec
mov
clc
icebp
iret
or
rol
mov
mov
xchg
pop
pop
xchg
or
pusha
jge
pop
mov
inc
std
xchg
nop
movsb
jns
sbb
xor
les
insb
pop
pushf
cmpsl
jge
lods
lahf
pusha
mov
iret
cmp
pop
enter
test
in
mov
sti
fsubs
pop
pop
cmp
lahf
movsl
jnp
int
mov
mov
mov
mov
dec
xchg
pusha
pop
jmp
or
inc
popa
dec
dec
out
pop
dec
pop
mov
cltd
notl
dec
mov
add
xchg
pop
sub
jbe
inc
popa
add
dec
andb
rolb
cmp
mov
inc
and
lock
jecxz
lods
mov
incb
cli
lods
das
cmp
pop
adc
sbb
pop
negl
stos
pop
sub
mov
push
mov
leave
pop
push
inc
jp
xchg
mov
test
stos
rcrb
movl
mov
pop
sbb
sbb
pop
shlb
data16
ficoms
cmp
pop
das
ljmp
sub
into
mov
mov
fcmovnbe
into
das
mov
jmp
movsb
mov
inc
cltd
shr
call
adc
leave
daa
fisubrs
cs
outsl
out
ficoml
mov
les
sbb
xchg
add
sbb
out
cmc
inc
and
mov
xchg
int
pop
popa
pop
fs
andl
jl
popf
cld
ss
rorl
ss
mov
pop
cmp
and
dec
stos
shll
gs
adc
fildll
cmpsb
fstps
push
out
jmp
mov
out
pop
pop
sti
mov
adc
addr16
xchg
push
sbb
movb
pop
pop
pop
mov
mov
push
mov
dec
ror
mov
movsl
cltd
xchg
cli
xchg
mov
and
out
bound
mov
inc
mov
fcoml
fdivs
add
mov
sub
cmp
movsl
xchg
sbbb
jp
mov
inc
rclb
icebp
jb
pop
or
mov
mov
pop
je
lock
clc
pop
aas
jecxz
inc
fsubs
cmp
sti
pop
scas
outsb
out
mov
mov
fldenv
mov
je
xchg
pop
shrl
fwait
xchg
shrb
pop
mov
push
daa
cmpsl
inc
sub
jecxz
cli
mov
pop
fs
out
movsb
push
push
lcall
add
adc
rolb
lods
cmp
ja
stc
xchg
jecxz
enter
mov
xchg
xchg
pushf
pusha
adc
cmp
pop
pop
pop
inc
repnz
out
and
dec
out
add
and
push
fwait
or
out
dec
cmpsb
mov
fisubrs
cld
jecxz
push
fst
jne
orl
xor
mov
popf
adc
cli
mov
sti
mov
icebp
dec
xor
dec
aaa
cwtl
cltd
test
arpl
add
jnp
mov
push
mov
outsl
pusha
aaa
rcrl
pop
daa
int3
sbb
test
inc
cli
mov
push
dec
daa
rorl
pop
pop
mov
ds
dec
or
lods
fadds
rcrl
sbb
loopne
pop
push
adc
jge
xor
shlb
push
subl
mov
jmp
out
lret
in
arpl
jbe
pop
xor
sahf
xchg
mov
aam
push
pop
lods
repz
lock
jae
rcll
add
jno
call
cmp
rcl
dec
in
outsl
std
dec
pusha
add
cmpsb
or
cwtl
push
out
cmp
xor
cmpsb
je
mov
sbb
mov
xorl
shl
pop
shl
push
sbb
jmp
xlat
inc
fisubl
pushf
in
sti
or
jb
nop
push
cmpsw
jg
or
inc
inc
shlb
cmpsb
and
jne
jmp
dec
notl
test
icebp
xor
xchg
daa
popa
inc
xor
out
or
sbb
mov
mov
fldl
imull
out
pushf
inc
scas
cs
movb
lea
pop
mov
outsb
adcb
cs
dec
loop
push
popa
inc
rcrb
adc
in
or
out
pop
mov
std
cmpsl
repnz
pop
fwait
cmc
sbb
mov
shlb
add
cwtl
jle
stos
inc
and
test
jne
pusha
lahf
xor
fistps
or
pop
je
lret
loope
out
std
push
ret
pop
push
je
xchg
jg
pusha
xor
aas
dec
xor
sbb
sub
cltd
inc
cmc
xchg
xor
xchg
lret
pop
lock
sbb
loopne
cmp
jnp
pop
add
in
test
pusha
dec
mov
cmpsl
pusha
and
arpl
cmp
jo,pn
jnp
mov
hlt
fs
ret
add
add
out
push
sub
mov
addr16
movsb
sarb
sbb
jmp
jecxz
push
loop
iret
popf
popf
pusha
pop
cmp
out
cmp
daa
mov
insb
loope
or
imul
xchg
pop
mov
leave
sbb
xor
cwtl
or
out
pop
cmp
mov
xchg
adc
imul
out
jp
mov
fisubs
out
adc
test
out
adc
in
test
jo
mov
std
push
shll
or
rcll
lea
xor
jecxz
xchg
mov
call
cmp
ja
fisubrs
int3
or
push
inc
lret
xchg
test
lock
sub
loopne
outsl
cmp
gs
jae
je
pop
push
xor
icebp
popa
xchg
pop
and
jne
cltd
andb
std
inc
and
aad
gs
jbe
adc
jecxz
aam
mov
cmpsl
loopne
mov
add
lahf
out
leave
or
xor
sub
out
aas
and
repnz
sbb
aam
mov
add
loop
imul
sbb
pop
sets
popa
rcll
testl
mov
pusha
sbb
jg
fwait
testl
sub
inc
shrb
sub
into
out
lods
pop
mov
jmp
jmp
mov
jae
sti
scas
faddl
pop
ljmp
test
and
arpl
fimuls
clc
repz
mov
repnz
repnz
pop
ss
add
and
jecxz
pop
test
cmp
aaa
mov
sbb
rolb
adc
cmpsb
leave
fidivrs
movsl
shl
mov
mov
inc
pop
cltd
cmp
adc
adc
mov
lret
pusha
sub
divl
and
adc
xchg
jb
rcrl
cmpsb
pusha
es
leave
jmp
mov
add
clc
or
inc
sub
inc
pop
cs
adc
out
repnz
push
cmp
enter
out
adcb
jne
mov
imull
mov
lret
addb
push
and
das
mov
xor
push
pop
sub
cmp
mov
nop
or
cmpsb
sbbb
aas
mov
sti
jb
pusha
mov
or
push
xchg
shr
xor
and
insl
sub
fwait
outsb
mov
repnz
loopne
cmp
xor
jmp
add
test
xchg
and
add
mov
cmpsl
mov
jbe
pop
popa
jnp
sub
popa
push
mov
dec
hlt
aam
adc
mov
pop
adc
sar
mov
clc
pop
push
or
repz
xorb
pop
clc
push
bound
sarl
sub
mov
mov
dec
pop
jle
pop
pusha
push
push
inc
xchg
xchg
je
std
and
and
and
out
adc
dec
cli
call
mov
inc
sbb
push
cmpsb
pusha
outsb
adc
mov
xor
pop
cmp
pop
scas
out
cmp
minps
das
sahf
xchg
ljmp
and
fs
or
sbb
out
movl
sub
popf
and
outsl
add
mov
mov
adcl
mov
mov
push
push
ret
cmpsb
sbb
fst
scas
xchg
sub
or
mov
and
xchg
cmp
iret
dec
inc
insb
fs
cs
dec
popa
mov
mov
xor
sahf
dec
push
inc
shlb
cmpl
pusha
aas
ljmp
out
sub
loop
fucomp
inc
push
clc
adc
sbb
cmp
add
pop
mov
out
pop
outsb
loopne
xor
sub
push
in
mov
jbe
sbb
and
pop
inc
push
and
icebp
enter
jle
xchg
cmp
into
push
jno
data16
call
or
nop
shl
inc
mov
pop
jmp
xchg
push
scas
jg
mov
push
mov
and
push
test
xor
add
std
cmc
shll
rcll
pusha
clc
cmpsl
repz
ljmp
es
rorl
sahf
cltd
test
aad
dec
lods
out
mov
inc
and
insl
and
arpl
xchg
mov
cmp
ss
add
jl
je
dec
gs
cmpsl
in
shlb
and
pop
aam
loop
push
mov
mov
aaa
push
push
push
mov
in
f2xm1
out
pop
sahf
push
mov
stc
dec
nop
repz
movsb
mov
imul
mov
xchg
test
mov
stos
xchg
lods
mov
lcall
cmpsl
mov
insl
shrl
xchg
mov
fdivs
out
sub
add
fnstsw
fidivrs
xchg
sbb
mov
in
mov
pop
cs
movsl
and
push
mov
or
in
ficomps
pusha
into
cmp
ficomps
scas
add
in
int3
jecxz
add
es
jmp
sub
sbb
and
ds
sbb
loopne
out
adc
outsb
mov
enter
clc
mov
or
leave
sub
mov
mov
std
sti
ja
arpl
cld
pusha
mov
movsb
insl
and
insb
push
mov
pop
popa
lcall
pop
push
jae
adc
xor
sbb
scas
push
xchg
popa
xor
or
imul
mov
out
jmp
sti
pop
add
sub
xchg
lcall
pop
addb
cmpsl
loope
movsl
popf
sub
xchg
out
jge
out
stos
call
cmpsb
xchg
mov
pop
lods
sub
pop
and
in
stc
sub
insb
xchg
mov
popa
into
push
in
xchg
push
sbb
add
jno
outsl
in
xchg
ss
imul
scas
movsl
xchg
je
test
clc
mov
mov
icebp
fisubl
in
mov
mov
test
in
out
insb
test
mov
lcall
and
jb
push
push
jmp
popa
add
shl
out
mov
pushl
pop
mov
fdivrs
bound
mov
cli
out
mov
xchg
imull
add
in
mov
mov
mov
pop
push
popa
cmp
inc
nop
jo
pusha
call
cwtl
xchg
dec
out
int
and
inc
stos
xor
xchg
jl
jbe
scas
and
in
add
xchg
lahf
pop
sub
inc
lock
pop
push
mov
shrb
or
mov
inc
pop
sar
movsl
lds
or
mov
ret
mov
test
push
stos
cmp
mov
xlat
adc
out
out
andl
repz
mov
mov
sbb
shrl
push
out
mov
push
pop
sub
push
pop
sbb
xchg
mov
mov
and
clc
cld
or
in
mov
pusha
and
inc
ficompl
jae
push
les
lcall
sub
and
inc
push
sub
mov
roll
popa
call
cmp
std
popa
icebp
mov
cmc
jg
mov
outsl
out
dec
mov
push
xchg
aaa
mov
mov
es
or
mov
jo
mov
inc
popa
shr
dec
pushf
jae
aaa
mov
pop
call
sub
lods
inc
scas
mov
aam
sub
xor
data16
cmp
mov
in
push
je
clc
les
ficompl
loopne
push
and
out
movsl
pop
mov
push
imul
sbb
add
push
outsb
loop
pop
dec
rcrl
xor
pop
pushf
pop
mov
dec
out
addr16
jl
adc
push
cmpsl
ret
es
sub
pop
sbb
negl
and
cmp
clc
movsl
mov
cld
add
je
sbb
xchg
pop
pop
jle
pusha
jp
in
aas
shll
inc
jmp
insb
cmpsl
pop
fidivrl
adc
loopne
push
mov
loope
sbb
pop
stos
notb
ds
push
push
popa
pop
test
mov
xchg
lea
or
leave
add
mov
fistps
push
sti
outsl
cs
sub
add
mov
inc
testb
xor
xchg
push
popa
mov
xchg
gs
decl
dec
or
pop
setp
add
xlat
inc
out
pop
pop
nop
and
jae
scas
mov
bound
in
pop
js
fsubl
cmc
enter
jg
cltd
inc
and
lea
cmpsb
xchg
sub
test
xor
repz
mov
mov
es
or
pop
jle
mov
andb
mov
out
scas
or
outsl
push
daa
lret
or
mov
jl
loopne
adc
xor
xor
repnz
xchg
jne
ja
dec
sbb
pop
lods
test
dec
jns
push
mov
jecxz
dec
jp
arpl
mov
xchg
sbb
into
pop
push
mov
mov
sbb
stos
pusha
int
jl
pusha
outsb
xor
pop
xlat
data16
mov
push
fisubs
lret
cli
jg
enter
or
push
out
sub
in
adc
neg
out
mov
mov
icebp
mov
push
lea
push
out
outsl
and
cltd
popa
cmc
jge
dec
movsl
pusha
test
dec
lahf
mov
mov
add
inc
data16
popa
lds
mov
nop
push
or
inc
jle
outsb
sub
pusha
mov
jbe
fisttps
ss
adc
out
adcb
fcompl
fs
push
push
sahf
cmp
ljmp
outsb
pop
cli
and
xchg
cmpsl
or
inc
imul
mov
fwait
lea
loop
and
dec
cmp
and
in
or
cmp
mov
cmp
fs
jp
inc
xlat
lcall
popa
int3
mov
lea
push
add
mov
fnstcw
shll
int3
mov
sbb
cltd
pop
out
addr16
jge
mov
sub
xorl
jne
adc
lds
push
and
roll
out
jmp
dec
nop
add
jecxz,pt
lret
jmp
cmc
addr16
jo
popa
push
lret
stos
inc
iret
sub
jle
sbb
pusha
into
jb
mov
outsb
add
fs
mov
and
mov
lahf
add
xchg
push
js
sbb
in
fmulp
mov
pushf
xor
cmp
sahf
dec
mov
pop
into
dec
cmc
pusha
adc
das
dec
jmp
sbb
mov
mov
push
mov
fwait
mov
lods
dec
sub
cmp
fistpl
dec
or
push
stos
shlb
add
cmp
lret
xlat
pop
dec
dec
ret
jecxz
repnz
loop
mov
ret
into
pop
push
jnp
inc
outsl
ljmp
je
or
outsb
push
out
push
pop
inc
scas
mov
push
jns
sbb
mov
push
insb
lock
outsl
jne
stos
inc
dec
mov
repz
out
add
cmp
sbb
xlat
ficoml
mov
push
xchg
out
dec
pop
clc
rorb
aaa
push
and
loopne,pt
push
test
insl
ret
inc
mov
mov
scas
adc
add
mov
mov
add
add
fbld
xchg
mov
popf
mov
aad
popa
dec
data16
sbb
jmp
ds
push
pop
mov
push
or
out
outsb
fdivrl
lea
mov
pop
mov
rorl
loopne
fmuls
bound
mov
stos
ret
mov
sbb
mov
xchg
dec
mov
cmpsl
fstps
xorl
test
pop
test
jmp
pusha
mov
add
and
mov
xrelease
inc
pop
sub
ja
dec
mov
jl
outsl
xchg
add
pop
loop
movsl
out
dec
push
sub
jo
mov
sub
sbbl
inc
mov
das
xchg
in
mov
cld
lock
jns
ljmp
jns
xor
lret
das
dec
inc
inc
cmpsb
adcl
mov
test
out
clc
inc
movsl
enter
cmpsl
sahf
xchg
movsb
sub
in
adc
int3
pop
mov
pop
popa
into
mov
mov
cmp
pop
gs
testl
inc
inc
mov
jp
sub
jns
sub
xor
stc
dec
pop
outsl
xor
mov
pusha
es
int3
mov
cltd
test
dec
dec
out
pop
js
jo
and
pop
mov
xor
cld
adc
or
sbb
jne
repz
push
imul
fisubl
dec
dec
clc
mov
mov
sahf
mov
mov
imul
push
pop
xor
in
in
shll
cltd
adc
jl
out
lret
mov
adc
pop
mov
out
xor
jmp
mov
pop
and
push
and
pop
jle,pn
mov
clc
fisubs
mov
jg
inc
adc
mov
dec
mov
leave
xchg
push
fisubs
sti
adc
adc
lea
lcall
inc
les
rolb
mov
sbb
sub
xor
or
jmp
jne
xchg
mov
and
add
adc
shlb
decl
xchg
adc
xchg
mov
repnz
mov
ds
cmc
dec
lds
lret
jae
mov
push
dec
sahf
adc
sbb
push
mov
inc
and
cmp
push
loopne
cmpsl
mov
test
add
rorl
out
cmp
scas
sbb
sub
sub
add
cmp
insb
mov
or
mov
test
and
call
sub
sub
aad
mov
fldt
negb
add
add
inc
popf
or
sub
xor
insl
int
pushl
add
sub
xor
and
sbb
lret
mov
aad
jns
pop
and
mov
inc
popa
adc
ss
cmpsb
gs
mov
jo
pop
rorb
lahf
testb
and
inc
pop
test
mov
adc
imul
test
jle
and
ror
add
scas
outsb
cmp
cwtl
adc
pop
loopne
jbe
movsl
xchg
jno
sbb
jle
loop
int
lods
leave
mov
xlat
jne
gs
xor
push
stos
xor
jae
pop
push
sub
or
or
push
or
in
sbb
inc
outsl
adc
sbb
push
dec
adc
adc
pop
jmp
xchg
bound
pop
jno
xchg
ja
and
pop
push
lahf
add
inc
xor
push
addr16
pop
cs
push
gs
add
in
xchg
mov
pop
insb
pop
sub
cwtl
jle
xchg
pushf
rsqrtps
mov
pop
cs
sti
dec
mov
pushf
das
push
mov
cmp
jno
cmpb
jmp
jmp
pop
mov
pop
dec
outsl
out
pushf
stos
adc
pop
mov
mov
imul
add
pop
sahf
push
sub
adc
jne
cmp
mov
dec
jle
addr16
mov
lds
sar
das
in
test
bt
pop
adc
pop
lcall
inc
pop
mov
icebp
mov
inc
lret
cmpsl
push
stos
dec
outsb
loopne
scas
sub
inc
cmpsb
mov
pusha
hlt
xchg
sbb
fldenv
and
sti
dec
push
push
iret
pop
cmp
inc
std
rcrb
outsb
pop
and
sbb
dec
into
mov
or
and
push
icebp
loope
in
nop
fdivs
mov
fstpl
inc
xchg
lock
mov
dec
jmp
mov
pop
mov
pop
sarb
xor
pop
mov
cld
jg
test
je
les
xchg
popf
sbb
pop
pop
xor
testb
jae
mov
pop
mov
and
int
dec
loop
scas
into
out
aaa
pop
push
aaa
or
cwtl
mov
mov
jo
test
cmp
mov
jbe
add
mov
xor
aam
sbb
cmc
pusha
cwtl
sbb
inc
or
push
out
in
aad
mov
stc
or
jle
pop
hlt
inc
jb
or
jmp
stc
mov
subb
inc
call
call
out
and
shll
or
add
push
sub
push
jno
cld
out
inc
cli
pop
add
and
mov
je
loop
pop
movsb
pop
and
shlb
dec
and
mov
mov
outsl
sub
daa
push
out
into
jg
arpl
sbb
mov
dec
adc
cmpl
addr16
mov
icebp
mov
push
addr16
mov
add
inc
fcoms
cmpb
sub
call
scas
inc
sub
xor
dec
pusha
loope
shr
std
jbe
add
lea
test
cmp
ret
out
xchg
jnp
mov
cltd
ljmp
iret
pushf
pop
mov
mov
out
push
adc
adc
lods
popa
lea
test
out
mov
push
mov
repnz
push
jne
xor
movsl
not
jmp
dec
jns
nop
fwait
mov
xor
out
push
jo
push
int
pop
pop
movsl
sub
movsb
sub
dec
or
inc
inc
testb
xchg
dec
xor
cmpsb
pop
popa
mov
push
clc
xor
mov
xchg
push
nop
inc
cld
ret
cmpsb
addr16
std
scas
adc
movsb
andl
xchg
mov
cmpsl
ljmp
sub
movsb
xor
push
loope
cmp
sub
out
out
in
lahf
addr16
sub
out
mov
mov
movsb
mov
in
lds
and
shlb
stos
movsb
mov
rorl
pusha
pop
cmpsl
jl
or
push
jl
popf
call
out
int
cmpb
xchg
push
movsb
out
pop
leave
fs
inc
cmc
add
addr16
mov
pop
ss
aam
dec
mov
or
mov
popl
out
jp
mov
pop
dec
into
fcmove
insl
fisubs
push
mov
sub
and
adc
sbb
sub
shrb
push
testb
xor
sahf
in
mov
xchg
mov
jbe
out
xor
sbb
mov
sbb
jns
repz
in
xchg
xchg
inc
std
ja
leave
jmp
mov
fsubs
aas
add
xchg
je
pop
jno
push
out
aad
nop
add
fldt
movsb
test
mov
scas
lds
dec
shl
repnz
rcrb
xchg
inc
fmulp
imul
adc
pop
pop
jge
out
xor
sbb
pop
dec
test
sbb
imul
das
jo
scas
dec
icebp
inc
mov
sub
lret
lahf
stos
mov
imul
and
jmp
cmp
pop
sbb
inc
mov
pop
sub
lret
xor
inc
mov
push
push
lahf
loopne
push
pop
cs
out
test
test
sub
and
rorb
repz
sub
and
or
notb
rcrl
leave
pop
lods
or
mov
mov
cmp
pusha
pop
inc
xchg
arpl
add
loope
push
imull
cmpsb
mov
and
inc
inc
rcrb
dec
mov
add
jb
and
jne
lret
ja
push
aad
adc
push
sub
ret
pushf
pushf
cld
stos
gs
aam
xor
xchg
push
pop
out
mov
fdivr
mov
stc
jecxz
movsb
inc
adc
in
jne
mov
mov
push
fstl
out
sbb
jecxz,pn
mov
dec
adc
push
in
push
out
mov
inc
mov
ror
ret
icebp
hlt
add
out
imul
mov
popa
push
push
das
pop
cmp
push
pop
orb
adc
lods
fisttpl
pop
cmp
aas
mov
mov
test
jecxz
aam
xlat
loopne
scas
pop
loopne
mov
jne
cmp
insl
sti
dec
push
xchg
das
cld
call
cmpsb
push
inc
sbb
xor
enter
inc
push
outsb
mov
lea
push
popa
fbld
rcr
push
mov
sbb
ficomps
cmp
push
daa
jle
mov
insb
pop
adc
push
andl
jmp
cmp
cltd
pop
out
inc
nop
lahf
pop
in
ljmp
jne
inc
mov
dec
out
outsb
xor
das
shr
mov
sub
int3
inc
push
imul
rorl
loopne
aaa
dec
mov
aas
pop
jnp
xorl
pusha
adc
popf
pusha
popf
add
lret
js
lret
pop
lea
jne
inc
imul
pusha
movsb
out
roll
jge
aad
pop
pop
inc
fwait
push
jge
je
or
jmp
jo
pusha
dec
inc
jg
lds
xchg
xchg
icebp
pop
xor
inc
inc
pop
xchg
mov
adc
push
shl
push
sbb
dec
loop
andb
js
out
sbb
imul
lar
repz
jb
jno,pt
fildl
mov
mov
jmp
mov
jge
mov
push
push
lock
pop
dec
stc
out
push
jns
jl
add
test
pusha
jle
xchg
enter
add
mov
xorl
and
xor
loope
sti
cmc
pop
mov
and
adc
cmp
ljmp
clc
push
sub
int3
popa
test
cmp
push
sbb
pop
mov
or
lods
push
mov
dec
dec
pop
movsl
cmp
jg
les
fimuls
rorl
ja
sahf
ret
adc
js
jne
jle
xor
pop
test
jle
cmp
sub
addr16
sub
jae
outsl
jmp
add
ret
cmp
lock
xor
adc
dec
jmp
mov
out
xor
sub
or
jle
or
leave
mov
jg
pop
inc
test
daa
jno
and
jl
sbb
bound
pop
add
loopne
dec
mov
faddl
sbb
nop
pop
jmp
push
data16
cmpl
dec
nop
jno
xorl
cmpsb
mov
enter
push
in
mov
mov
pop
outsb
mov
push
popa
xor
add
stos
movsb
xor
out
cmp
dec
shr
push
sbb
aaa
dec
clc
or
test
dec
add
pop
pop
inc
push
mov
icebp
dec
pop
hlt
pop
jle
stc
mov
scas
cmp
loopne
pop
int
ret
stc
xor
test
cmp
inc
in
dec
inc
aas
fidivs
ret
mov
adc
repz
or
lds
rcr
sbb
push
sbb
mov
and
insb
cmp
out
in
sahf
jp
hlt
dec
mov
jecxz
int3
ja
xor
mov
xor
mov
push
mull
mov
mul
add
adc
and
out
and
stc
out
sbb
enter
and
loope
or
pop
mov
jle
clc
clc
shll
popa
enter
push
mov
xchg
mov
in
jno
hlt
pop
test
xchg
pop
fnstsw
aad
and
lods
outsl
jno
mov
ret
out
mov
xchg
mov
mov
out
pop
push
fisttps
out
sub
call
insb
cwtl
sbbl
lret
faddl
inc
push
mov
test
sub
sbb
adc
dec
mov
sahf
adc
add
je
ficomps
out
xor
psadbw
mov
mov
es
xlat
int3
xor
push
int
repz
pusha
mov
in
pop
out
add
fstl
repnz
mov
jno
shr
loop
test
test
movsb
sub
inc
sub
out
push
ljmp
mov
imul
mov
es
clc
hlt
adc
cmp
out
xchg
shr
popa
test
mov
stos
mov
fistl
pop
push
lods
mov
mov
popa
cmp
cmp
loopne
fildl
inc
movsb
outsb
fwait
and
mov
addb
pop
jbe
lods
ds
std
xchg
mov
xchg
sub
pop
test
cld
xchg
lret
push
pop
dec
mov
shlb
out
jae
jp
outsl
frstor
out
mov
out
ds
mov
sub
je
mov
sub
jmp
data16
pusha
decb
cs
test
fsts
jo
and
std
or
pop
cltd
jecxz
dec
ljmp
cld
ret
pop
fbld
xchg
dec
in
aaa
sub
and
arpl
add
jne
pop
or
pop
pop
pop
sub
cltd
loopne
popf
jge
xor
jmp
out
push
mov
add
into
adc
out
repz
add
jl
movsb
fidivs
fadds
xchg
je
movsb
inc
push
pop
mov
xor
imul
dec
mov
pop
fmul
leave
inc
popa
das
mov
dec
ljmp
mov
jns
mov
das
mov
jbe
imul
fimull
dec
mov
frstor
imul
inc
inc
jg
mov
pusha
sbb
ss
cmpsl
dec
fidivrl
jge
in
lds
ja
mov
and
sti
test
shll
pop
jmp
inc
sbb
dec
out
fisubrl
insb
hlt
mov
sbb
dec
insb
pop
out
pusha
in
sbb
push
mov
adc
sub
pop
call
sub
addr16
popa
int3
stos
and
sub
sbb
cli
and
icebp
and
or
pop
sub
ret
popa
pop
divl
hlt
or
add
sub
mov
mov
fdivrl
or
je
sbb
sbbb
xor
in
adc
lahf
cmp
mov
inc
lds
into
push
jmp
ds
ds
mov
aaa
add
add
pop
fistl
jecxz
sbb
test
push
sahf
mov
fsubrp
test
pop
pop
mov
push
pop
adc
fcompl
popf
mov
in
out
mov
ret
in
inc
loope
cld
mov
ja
cmp
fsubl
aad
in
out
ret
push
sub
pop
xor
hlt
pop
outsl
adc
test
lock
aam
mov
jle
xchg
mov
stos
shl
mov
xor
jno
adcl
or
sub
or
dec
iret
push
dec
and
pop
bound
jb
call
mov
add
lcall
outsb
jns
int3
and
daa
out
xor
movsl
mov
mov
out
mov
repnz
inc
mov
lret
pop
and
jnp
push
pushf
jmp
or
pop
mov
adc
adc
arpl
add
adc
ret
cli
jae
lahf
cmp
gs
push
pusha
xor
inc
mov
mov
inc
int
sti
pop
sub
sbb
pusha
test
call
adc
push
sub
add
mov
lcall
iret
xchg
mov
and
in
in
out
mov
aaa
mov
mov
add
sbb
pop
xchg
test
mov
jmp
add
inc
jp
push
cld
addr16
shrb
jb
and
pop
hlt
jle
add
fstpt
ljmp
adc
hlt
mov
pop
mov
push
lea
mov
pop
fcompl
icebp
cmpsl
rclb
int
inc
pop
fwait
mov
scas
cmpsb
pop
add
cmp
cwtl
out
mov
sbb
clc
aad
loope
mov
sbb
xchg
insl
sbb
sub
fstpl
xchg
mov
mov
jbe
loopne
in
stc
out
inc
cmpsb
popa
pop
out
fildll
sahf
cltd
pop
jge
jecxz
dec
xchg
outsl
adc
mov
xchg
leave
push
jno
add
pusha
lods
sti
sub
pop
sub
pop
push
sbb
xor
sbb
lds
jo
filds
and
int
das
rorl
out
fisttpl
icebp
addl
into
jge
stos
pop
aad
add
push
out
insl
pop
xchg
pop
fbld
fs
xchg
add
sti
add
addr16
or
pop
imul
xor
jle
lret
mov
sub
jns
popf
data16
movsb
mov
mov
test
std
aaa
pop
mov
icebp
pusha
stc
fnsave
pop
out
xchg
mov
frstor
dec
cmp
xor
jl
call
mov
add
ss
cmpsb
fucomi
imulb
or
ss
loope
pop
int3
push
xchg
dec
jbe
and
jo
or
inc
or
mov
ja
ds
push
sti
push
xchg
inc
out
cmp
jnp
mov
xor
ds
lret
outsl
sub
xchg
mov
movsl
cmp
inc
pusha
rorl
repnz
mov
cmpsb
inc
push
lods
scas
mov
dec
roll
ja
inc
cmp
scas
dec
jne
pop
adc
mov
jne
jmp
pop
testb
repnz
fld
movsb
mov
push
out
adc
add
or
mov
xchg
push
movsb
aas
sti
dec
pop
or
mov
test
popa
pop
rcr
and
in
pop
xchg
pop
int3
xchg
xor
loope
rclb
cli
pop
in
rorb
addr16
in
jbe
and
and
jg
or
push
dec
push
mov
xchg
xlat
testb
call
push
jl
sbb
dec
inc
pop
mov
aas
fs
add
jle
stos
add
dec
out
jne
jnp
dec
lods
fs
mov
in
aad
pop
xchg
mov
dec
pop
pop
ja
pusha
add
push
call
pusha
test
mov
cmp
or
repnz
push
mov
stc
pusha
mov
or
add
sbb
ds
mov
lds
mov
adc
xchg
or
inc
rcr
or
xchg
rcr
jge
movl
xchg
popa
jae
jno
xchg
or
pop
or
insb
iret
out
dec
call
push
lahf
jnp
push
mov
mov
xchg
mov
mov
pop
test
or
xchg
ljmp
xor
int
and
cmpsl
cvtdq2ps
mov
fdivrs
fbstp
hlt
in
add
xchg
sbb
iret
push
pop
mov
dec
xchg
out
pop
fsin
cld
xchg
mov
push
fiaddl
cmpsb
mov
add
mov
push
test
xor
ljmp
nop
push
jbe
xchg
call
inc
icebp
pop
fwait
test
pop
outsb
das
pusha
mov
cmp
inc
out
and
cld
push
aas
pop
repz
pop
lock
nop
rol
push
iret
andb
add
fistl
mov
insl
jae
push
mov
ficoms
dec
sub
cmp
daa
mov
movsl
mov
mov
je
xor
push
pop
or
cmpsl
leave
ret
fistps
jecxz
xlat
or
fistps
cmpsl
mov
popf
push
jl
mov
pusha
popa
xlat
add
fnsave
aam
mov
push
dec
std
sub
mov
adc
out
xor
jb
mov
std
repz
xchg
lahf
cld
mov
test
lods
nop
popa
les
pop
out
lds
outsb
jnp
and
gs
sahf
push
or
mov
in
cmc
cvtdq2ps
dec
into
pusha
insb
and
mov
mov
in
push
mov
mull
jg
pop
adc
cld
and
or
adc
imul
pop
push
or
stc
or
shlb
jmp
jno
out
lahf
mov
and
cmpsl
les
movsb
jmp
mov
mov
fstl
dec
mov
arpl
pop
inc
cmc
leave
pop
push
imul
pusha
bound
add
out
inc
adc
jnp
xchg
cmpb
mov
repnz
test
shlb
or
loopne
adc
jmp
jae
ret
jge
loopne
or
dec
sbb
pusha
jnp
inc
sbb
adc
into
jo
popl
sub
cmpsb
lret
lret
pop
outsb
adc
cmp
xor
mov
mov
imul
pop
jb
add
sub
outsb
push
rcrb
add
or
dec
int3
pusha
enter
shlb
sbb
call
push
xchg
sub
pusha
inc
iret
mov
pop
mov
pop
filds
push
call
loope
lcall
and
lahf
mov
inc
icebp
out
inc
mov
mov
dec
sbb
cmp
adc
lock
inc
enter
shl
pusha
sti
dec
dec
enter
out
out
mov
and
mov
in
bound
mov
cmc
adcb
cmp
int3
inc
jle
mov
cs
arpl
fistpl
mov
test
cld
jno
mov
xorb
mov
adc
stc
into
roll
or
daa
cmpsb
in
ljmp
fimull
enter
xor
pop
adc
push
int3
popa
shlb
mov
mov
out
add
xchg
out
and
add
cmp
sbb
xor
lret
leave
lahf
rcrb
out
push
mov
rorl
mov
aad
repnz
popa
repz
in
jmp
xchg
stc
push
fs
push
arpl
add
cmp
lcall
mov
andl
mov
lret
dec
movsl
sbbb
xchg
lea
into
jecxz
pop
or
dec
mov
out
andb
loop
add
aad
mov
dec
imul
out
loopne
out
sbb
ss
push
shrb
jnp
adc
mov
enter
pop
lret
jmp
push
inc
popa
cltd
sub
rclb
shlb
out
addr16
pusha
orl
nop
mov
add
xchg
or
dec
jl
mov
loope
jl
out
mov
testb
sti
std
mov
int3
imul
cmp
in
xlat
and
sbb
adc
pop
mov
shrb
cld
pop
int
dec
mov
test
mov
xor
push
enter
daa
adc
in
out
aam
fst
jns
add
lea
mov
popl
outsl
xchg
mov
test
mov
scas
add
popa
out
int
cmc
pop
add
jp,pn
dec
int
or
lods
es
sub
sub
push
movsb
outsb
xchg
mov
push
out
arpl
pop
jne
mov
test
out
mov
pop
mov
mov
outsl
cld
out
loop
jno
enter
mov
mov
cmp
pop
push
jno
push
xor
pop
xlat
stc
adc
aaa
pop
in
sbb
xor
and
insb
cmpsl
cmp
jmp
jno
fcoms
mov
pop
out
add
outsb
inc
rcrl
xor
bound
mov
sti
push
insb
mov
aas
gs
lods
push
int
mov
pusha
add
xchg
repz
dec
nop
mov
idivb
addr16
out
and
mov
fisttps
mov
or
dec
out
fsubrl
dec
insl
mov
lock
rclb
jecxz
jne
mov
mov
mov
scas
mov
cmp
mov
sub
mov
ficompl
cltd
gs
shrl
push
popa
cld
dec
les
sub
out
out
cmpsb
inc
sbb
dec
mov
cltd
add
xor
xor
xchg
jmp
push
dec
mov
jle
xor
inc
mov
addr16
fcomp
mov
loopne
out
or
lock
sahf
js
mov
mov
or
fadd
sub
std
pop
in
lock
pop
mov
bound
stc
mov
sbb
ljmp
shr
pop
out
or
je
fcmovb
pop
xor
mov
adc
sub
push
xchg
out
lahf
mov
push
test
jae
scas
clc
xchg
call
or
call
sbb
sbb
addr16
pop
fwait
mov
and
sub
push
stos
sub
fidivrs
add
int
lods
inc
and
jnp
xor
popf
xor
jge
jnp
cmp
jb
data16
cmc
dec
adc
es
mov
sub
jnp
jmp
in
imul
in
jmp
cwtl
pop
mov
int3
adc
rolb
mov
add
mov
gs
mov
bound
fidivrl
pusha
iret
xor
lods
out
bound
sbb
mov
mov
cmp
push
lret
out
mov
imul
pop
inc
add
inc
pop
and
dec
mov
push
adc
pop
in
xor
adc
push
arpl
add
xor
xor
xor
pop
and
mov
insb
loopne
mov
or
test
pop
push
xchg
aam
sahf
int
stos
cmp
pop
insl
lret
or
and
mov
scas
inc
lock
xchg
shl
xchg
popf
or
andl
pushf
decl
cmp
push
repnz
mov
sbb
aaa
popa
xchg
push
out
lock
outsl
jle
sahf
sub
mov
lahf
sbb
push
mov
into
and
out
pop
push
enter
push
pop
sbb
sarb
inc
push
into
cltd
out
and
pusha
or
movl
xlat
call
mov
dec
shrl
js
cmpsb
loope
mov
pusha
ficompl
dec
mov
pop
push
scas
mov
stos
inc
jbe
or
das
scas
xor
dec
out
outsb
shll
mov
sub
imul
in
into
ljmp
iret
pusha
dec
das
test
inc
pop
fdivp
pop
add
out
pusha
mov
roll
jbe
into
jmp
ljmp
rcll
inc
cs
sarb
pop
out
add
inc
insb
pusha
pop
out
push
mov
shr
ror
adc
loop
mov
xchg
pop
daa
sbb
xchg
dec
sbb
push
lock
jle
cltd
mov
fwait
pusha
andl
mov
in
js
out
stos
shrb
in
push
mov
xor
pop
sbb
ljmp
inc
mov
data16
pop
mov
fbld
pop
popa
and
scas
mov
out
mov
je
cmp
add
mov
loope
adc
iret
push
fwait
add
mov
int
arpl
sub
dec
xchg
out
jg
test
mov
sbb
pop
outsl
mov
push
rorl
pusha
inc
fcoms
inc
mov
pusha
shl
stos
cwtl
pusha
mov
push
mov
out
fdivs
cmp
das
dec
lret
sub
jbe
iret
fisttpll
push
mov
es
gs
in
adc
movsl
nop
ret
enter
pusha
fnsave
dec
testl
jns
mov
inc
in
xchg
sub
pop
lock
adc
cmpsl
pusha
pusha
bound
stos
insl
pop
loope
sti
pop
dec
or
inc
sbb
mov
pop
pop
adc
loope
icebp
cli
in
jno
or
movsb
outsb
mov
add
adc
loope
pusha
lock
or
ljmp
pusha
iret
out
pop
lods
test
insl
pusha
das
mov
cmp
push
popa
aas
push
jp
insl
les
cmpsb
out
jle
aas
scas
pop
les
mov
push
jg
les
call
ficoms
jecxz
inc
jmp
cld
jbe
sbb
mov
jnp
test
or
mov
ret
push
jne
cld
addr16
xlat
jo
dec
mov
xchg
out
inc
fwait
and
lods
jb
fiadds
dec
fdivrl
in
adcl
cmpsb
pop
sahf
cmpb
loope
mov
pop
xchg
pop
jg
lea
pop
clc
xchg
test
add
out
xchg
cmpb
inc
mov
out
cmp
sbb
lock
dec
mov
and
cmpsl
dec
inc
add
and
popa
and
dec
jb
cmp
fucomi
fprem1
fwait
lahf
add
push
push
cmp
mov
and
push
dec
pop
fsubl
cmp
add
adc
sub
lods
mov
and
jns
daa
jg
and
push
andb
stos
mov
mov
pop
or
adc
mull
cmp
jecxz
mov
add
popf
mov
xchg
cmp
in
mull
jle
and
pusha
mov
push
xchg
cmp
pop
fcmovnb
adc
outsb
imul
add
out
fistpl
sub
mov
and
sahf
ficompl
pop
sbb
adc
aam
add
lds
ss
js
sub
mov
popf
jbe
pop
cld
loop
popf
mov
push
popa
iret
sti
ja
pop
movsl
pop
or
outsl
pushl
jb
mov
dec
xchg
dec
inc
mov
stos
push
mov
mov
cwtl
push
fldt
pusha
fldcw
add
xchg
push
out
imul
into
ss
add
xchg
sbb
pop
sbb
mov
lea
jno
das
push
fwait
xor
push
out
pop
add
mov
mov
xor
mov
inc
outsb
cmc
imull
and
adc
sub
jae
pop
cmpb
loop,pn
pop
repnz
cmpsl
sub
fidivs
jmp
cmp
xchg
adc
fdivs
and
pop
lock
mov
mov
loopne
pushf
dec
push
jmp
adc
add
movsl
loope
push
popa
ljmp
push
mov
js
clc
pop
jmp
pop
divb
dec
loope
loopne
movsl
pusha
adc
xor
mov
out
into
stos
pop
cmp
out
pushf
movsb
inc
pop
sti
pop
push
ucomiss
jecxz
out
adc
and
mov
jbe
pop
iret
mov
mov
adc
jo
xchg
adc
push
popa
test
call
xchg
push
fs
out
mulb
leave
cmpsb
and
lahf
inc
push
lahf
adc
leave
jp
repz
mov
repz
js
mov
mov
xor
mov
leave
repnz
lods
cmpb
hlt
and
jle
test
push
push
mov
sbb
pusha
xchg
and
out
mov
hlt
js
aad
inc
mov
dec
sbb
popf
and
fidivrs
push
cmp
mov
and
mov
ss
pusha
jno
imul
and
inc
xchg
lret
mov
cmp
scas
and
sbb
jb
scas
mov
push
inc
mov
pop
les
add
leave
adc
out
inc
dec
and
pop
jecxz
mov
sbb
bound
arpl
lods
loope
mov
push
mov
mov
jecxz
test
or
sbb
mov
push
addr16
in
pop
imul
pop
cmp
shrb
jnp
cmp
cmp
idiv
pop
insb
push
push
call
mov
adc
lahf
pop
add
and
jb
rorb
mov
in
sbb
adc
stc
cmp
pop
pushf
mov
movsb
dec
rorb
popa
cmp
mov
call
cltd
hlt
lret
and
cmp
ds
sahf
pop
ret
pusha
jmp
cmpsl
jg
or
or
stc
sub
out
mov
mov
jp,pt
sbb
mov
test
popa
rolb
or
loop
jg
out
add
jnp
mov
fs
add
cmp
data16
push
mov
das
dec
js
mov
pop
movsl
aam
xchg
cmp
out
inc
push
test
add
cmp
mov
loope
push
cltd
pop
or
pop
cmpsl
andb
add
shl
sbb
cli
test
cmp
das
add
and
inc
jb
pusha
jno
ja
xchg
xor
scas
pop
push
cld
or
imul
jbe
jns
xor
and
ret
out
mov
xchg
mov
mov
ja
xlat
mov
dec
mov
jae
pusha
xchg
dec
ret
xchg
dec
pop
inc
mov
add
js
stos
pusha
xchg
cmp
pop
leave
in
push
cld
sbb
mov
mov
je
out
or
ret
loope
js
stc
fcom
sub
xchg
out
pop
and
pop
neg
pusha
xchg
mov
sbb
rorb
fsubs
into
mov
and
push
mov
lods
jnp
pop
inc
add
scas
pop
mov
pop
mov
inc
int
pusha
cmpb
xor
pop
pop
jl,pn
test
repnz
inc
jb
push
and
in
xchg
sarl
xor
cld
adc
movsb
mov
add
out
in
mov
push
mov
mov
rolb
cmp
xchg
scas
jl
sbb
xchg
xchg
fmulp
addr16
xor
lods
pop
in
jbe
jle
mov
pop
dec
lahf
mull
jne
pop
xor
shll
or
pop
mov
clc
sub
or
mov
out
sub
in
loopne
pop
test
popa
push
add
out
lret
adc
jae
ljmp
std
fisttps
pop
movb
aam
fldl
jns
scas
jge
mov
pop
jg
cmpsb
sub
dec
lcall
mov
inc
cld
stos
sahf
decl
pop
ret
pusha
xorb
pop
sbb
dec
cltd
das
mov
cwtl
imul
stos
pop
nop
xchg
jnp
call
shll
popf
orb
insb
dec
cs
dec
idivb
cmc
push
mov
sbb
and
push
cmpsl
cmp
lahf
in
cmc
fcomps
mov
sbb
subb
add
adc
leave
jns
out
adc
inc
mov
call
mov
pusha
ror
xchg
icebp
mov
mov
sub
cli
fistl
rcll
roll
pop
aad
and
ljmp
pop
pop
sub
add
push
pop
pop
mov
int
cmc
imul
sbb
insl
ja
jae
mov
adc
out
and
stos
mov
pop
lahf
xchg
cmp
loopne
mov
xor
loopne
adc
mov
and
sbb
flds
jmp
outsb
sbb
push
shr
test
cmc
sti
in
push
mov
jle
or
decl
test
leave
dec
popa
mov
pop
pop
movsl
out
cltd
lea
rcl
jns
xor
sub
jo
arpl
out
inc
jmp
sbbb
adc
add
push
mov
push
aad
pop
xchg
push
pop
sti
sbbb
mov
pop
and
push
stos
test
xadd
jnp
and
mov
and
rcll
and
loope
pop
addl
mov
js
mov
push
lock
pusha
les
insl
hlt
push
je
and
out
or
ret
adc
xlat
pop
mov
ss
sub
pop
aas
or
push
hlt
mov
mov
xchg
pop
out
out
dec
xchg
dec
push
dec
int
andl
pop
xchg
int3
call
mov
jle
push
dec
fisubrl
movb
nop
push
popa
or
mov
jno
mov
insl
hlt
cmpsb
out
mov
dec
adc
test
out
repnz
xor
push
cs
or
addl
jno
add
mov
mov
out
jmp
inc
mov
mov
xor
mov
mov
fwait
rclb
push
daa
enter
fisubs
inc
lock
rcrl
mov
lods
outsl
test
movsb
test
imul
push
in
fcoms
aas
sbb
sbb
mov
in
dec
jmp
out
jle
pop
cmpsb
pop
mov
xchg
push
ficoms
jl
pop
stc
movsb
movsl
jle
in
cmp
pusha
aam
out
ds
fs
and
jb
mov
push
mov
mov
js
inc
cmp
jo
mov
ficomps
out
push
xor
addr16
or
push
mov
aas
jmp
mov
aam
rcr
mov
pusha
xchg
mov
push
xchg
rorl
dec
cmp
movsb
pop
sub
scas
push
sbb
pusha
mov
push
cmpsl
push
pusha
and
fwait
testb
push
inc
out
cwtl
xor
imul
into
cmpsb
cs
incb
insb
js
or
inc
les
mov
aam
mov
out
dec
push
scas
mov
punpcklwd
cmp
out
loopne
mov
xor
push
cmp
fisttpl
jno
aaa
lds
mov
insb
cmp
in
out
add
sub
ret
inc
popa
cli
fs
jl
cld
shrd
addr16
add
lret
addb
inc
pop
inc
loope
cld
fdivrl
adcl
aaa
stos
out
mov
aas
sahf
ret
fisubl
mov
lods
mov
ljmp
pusha
daa
pop
cmpsl
lret
jmp
sbbb
insl
rcll
pop
sbb
push
dec
std
inc
and
lcall
sti
sub
and
arpl
adc
test
dec
jno
jg
pop
into
out
cmp
lods
dec
fldt
pop
test
adc
data16
sahf
frstor
or
aas
out
pusha
popa
lret
loopne
dec
insl
insb
out
lock
fmull
arpl
inc
mov
repnz
stc
lcall
xor
xchg
mov
push
jne
jne
je
test
out
push
push
insl
out
mov
fucomi
sub
pop
pop
out
cmp
jecxz
sbb
fsubrl
bound
xchg
sub
lods
mov
jp
or
divb
test
addr16
mov
repnz
mov
dec
pop
outsl
pop
aaa
imul
add
mov
lcall
or
test
out
mov
fsubp
xchg
pop
enter
mov
addr16
dec
out
mov
mov
jmp
in
int3
pop
sub
dec
daa
clc
push
mov
pusha
out
clc
mov
pop
mulb
and
sbbb
nop
popa
push
mov
in
loope
out
arpl
xchg
fisttps
mov
jge
aad
dec
mov
sbb
fwait
js
negl
push
sub
or
lahf
inc
xor
sar
dec
jno
cltd
rolb
push
inc
cmpsl
mov
cmc
add
int3
popa
jmp
mov
xchg
out
repnz
pop
loop
inc
add
xor
fstpl
test
gs
xlat
cwtl
push
pop
repz
dec
icebp
loopne
nop
sbb
outsb
mov
mov
lock
clc
sbb
cmp
and
sub
jecxz
push
mov
cmpsl
in
mov
adc
out
popa
cld
stos
inc
outsl
pusha
sbb
and
jno
out
sbb
cmc
cmp
mov
rcll
mov
add
test
mov
pop
ret
jbe
push
cmp
push
clc
xor
adc
sub
pop
or
or
pop
out
outsb
xchg
les
mov
sub
mov
aaa
push
mov
jne
push
lods
pusha
rol
call
out
ss
int
mul
scas
cmpsb
in
inc
push
fidivrl
mov
adc
xor
repnz
or
jo
inc
popa
and
adc
jmp
std
insl
repz
test
mov
jmp
ret
add
addr16
jp
cmpsb
mov
jecxz
push
insb
mov
push
mov
jl
out
lcall
pushf
movsb
xor
pop
fcompl
cmp
dec
enter
lahf
pop
and
cmp
test
clc
pop
adc
mov
out
ljmp
je
popf
ljmp
js
out
dec
add
inc
dec
push
jbe
mov
push
and
cmpsb
insl
test
mov
pop
push
jb
movsb
mov
filds
push
pop
adc
push
fdivl
test
and
inc
add
inc
in
push
adc
push
or
sti
cmp
or
push
iret
pusha
jns
stos
push
dec
dec
jbe
inc
inc
jge
ds
lods
and
dec
xchg
outsl
das
mov
cld
lea
fildl
in
mov
adc
push
mov
mov
add
sahf
jns
lods
in
mov
mov
mov
js
xor
push
push
mov
pop
pop
mov
mov
inc
cmp
push
mov
pop
mov
into
lock
mov
xchg
sub
xchg
fstpl
sbb
adc
popf
inc
cltd
or
ret
mov
dec
mov
inc
mov
sub
mov
push
ss
enter
sbb
mov
stos
pop
in
repnz
mov
mov
push
nop
aad
push
stos
out
lds
mov
fldt
insb
iret
mov
aaa
push
lcall
dec
cmp
test
dec
xor
sbb
adc
mov
jb
inc
mov
pminub
fisttps
push
cmpsb
sbb
in
frstor
push
adc
test
mov
mov
into
sub
fdivs
xchg
std
jl
hlt
rcrl
das
outsb
push
mov
pop
stos
jmp
lahf
rolb
lods
outsl
pop
je
lahf
in
pop
adc
inc
jle
addr16
inc
jne
test
out
add
mov
mov
call
or
sahf
jb
out
xchg
ret
mov
stc
mov
jne
mov
sbb
popf
mov
or
lret
mov
add
mov
les
jle
pop
cmp
mov
and
pop
and
add
out
mov
test
push
out
pushl
cmpl
scas
scas
pop
out
cs
das
aam
icebp
mov
push
sub
jb
cmpsl
sub
gs
inc
xor
popa
or
ret
or
mov
repz
xchg
push
jns
xor
mov
loop
or
jnp
fdivp
xor
push
je
movb
pop
mov
mov
add
outsb
dec
stos
push
js
xor
inc
ret
les
mov
addr16
mov
cmp
cmp
mov
daa
xorl
sbbl
mov
xchg
aad
es
pop
xchg
mov
pusha
jmp
inc
lods
shr
pop
or
jle
pop
sub
fimull
jg
pop
push
rcrb
mov
mov
imul
sub
pop
and
mov
xor
xchg
ret
es
push
jg
in
pusha
clc
mov
add
pusha
pop
lret
adc
andb
loopne
push
xor
mov
gs
cmpb
test
mov
and
jp
fisubrs
je
pop
jmp
xor
gs
and
loop
in
adc
sub
sub
rcll
pusha
jne
je
stos
cltd
adc
sbb
fstps
add
out
mov
inc
bound
stos
pop
cltd
dec
sbb
pop
lahf
popa
xchg
loopne
pop
lahf
mov
pop
inc
jb
dec
ljmp
pop
xor
shl
dec
test
and
fs
mov
pop
shrb
ljmp
adc
jo
mov
shl
mov
sbb
xchg
cmp
xlat
adc
pop
shlb
mov
test
adc
xchg
pop
int3
imul
cmp
and
daa
cmpsb
imul
inc
mov
js
pop
cmp
lock
xlat
fidivs
add
cmpsl
arpl
jle
test
cld
vpminsw
mov
push
pop
mulb
jecxz
dec
mov
cmp
jle
add
fstpl
sbb
out
mov
jbe
mov
int3
sbb
add
out
jmp
test
cs
stc
jne
mov
push
fnsave
sbb
insb
in
add
push
mov
inc
dec
gs
xlat
mov
cmp
pusha
pop
or
fucomp
push
loop
mov
push
outsb
push
pop
jp
pop
xchg
loope
inc
testb
pop
inc
lea
fwait
xor
push
mov
std
bound
pop
xchg
cltd
cmpl
pop
mov
jge
out
loope
pusha
popf
mov
rcll
cmp
pop
pop
push
dec
cmpsb
imul
fisubl
inc
or
into
imul
adc
fmulp
cmp
mov
clc
ss
sti
sbb
fcomps
push
in
fwait
or
scas
lret
inc
dec
mov
or
xchg
in
and
or
jnp
pusha
sbb
sbb
shl
inc
xchg
stos
sub
dec
fs
pop
and
push
lds
fisttps
mov
mov
push
xor
andl
mov
stos
out
sbb
pusha
mov
sub
jge
mov
test
cli
incl
fistpll
jmp
test
loop
data16
xchg
stc
scas
jae
mov
loope
inc
paddusb
add
into
xchg
and
pop
sbb
dec
xchg
mov
pop
lcall
xor
jp
push
loope
ret
and
fldt
aaa
pop
pop
jle
cs
clc
dec
and
movsb
pop
leave
mov
jne
cmp
mov
stc
enter
daa
mov
cmp
cmp
mov
pop
out
je
out
ret
jl
cmp
rorl
jecxz
jo
and
enter
iret
adc
daa
pop
shlb
xor
mov
sbb
and
lock
dec
daa
out
add
and
push
mov
insb
ret
cltd
xor
sbb
js
les
jmp
mov
dec
and
nop
pop
in
jmp
out
pop
xchg
lret
jae
mov
jl
xchg
xor
pop
mov
daa
lods
in
loopne
push
inc
dec
loop
rcl
out
cmp
cli
inc
arpl
mov
sub
push
in
push
popa
xor
stc
cs
mov
and
adc
adc
pop
loope
pusha
and
mov
jnp
push
jp,pn
lret
mov
out
and
inc
arpl
pop
ja
test
adc
call
lcall
push
adc
icebp
cmp
inc
jo
shl
inc
loopne
adc
cs
aad
mov
repz
in
mov
mov
adc
cmp
xor
lock
and
loop
and
fsubl
repz
pop
out
pop
push
and
lea
cltd
fistpll
roll
cmc
dec
pop
out
cmp
xchg
pop
cli
jno
jo
pop
popa
mov
or
out
sbb
sub
mov
adc
jp
xchg
mov
pusha
xchg
or
push
and
sub
sub
mov
dec
mov
adc
and
cmp
mov
fistpl
cmp
test
movsl
mov
mov
adc
cwtl
lcall
or
mov
loop
jp
jo
out
push
dec
aaa
popa
pop
push
dec
mov
popa
movhps
out
xchg
or
pushf
push
adc
sbb
in
push
andb
int3
in
push
loop
pop
mov
mov
adc
arpl
test
jl
cmp
fldcw
xchg
insb
pop
adc
out
jnp
pop
leave
pop
pop
les
movsl
cs
aad
orb
sti
pushf
push
inc
dec
and
loopne
popf
div
pop
mov
fimuls
into
or
out
mov
mov
rcr
push
mov
dec
shll
out
ljmp
mov
pop
into
test
jmp
out
into
out
pushf
jne
ret
outsb
jge
and
mov
loope
icebp
out
repz
scas
push
or
cltd
in
mov
cmp
pusha
push
aaa
arpl
adc
sahf
pusha
sti
jnp
push
mov
mov
test
xchg
or
movsl
subb
or
ret
pop
pushf
push
cmp
lret
out
add
jmp
ljmp
rcl
sbb
in
jg
pop
push
scas
loopne
sbb
jecxz
into
mov
pop
push
jo
pop
mov
ljmp
pop
add
fldenv
xor
into
cmp
nop
imul
stos
outsb
pusha
and
outsl
int
adc
into
out
sahf
dec
mov
pop
mov
sbb
mov
pop
and
or
push
and
and
movsb
lock
mov
or
bnd
cmc
xor
jp
scas
popf
mov
sti
stos
movsb
sub
btc
sub
idiv
rol
mov
and
sbb
es
loop
mov
cmpsl
cmp
pop
imul
xor
jmp
in
test
int3
ffree
sahf
into
dec
arpl
pop
cli
icebp
xchg
push
popa
mov
jbe
jae
add
mov
mov
xchg
jl
adc
and
shll
mov
mov
ficoml
inc
outsb
and
stos
aaa
jns
pusha
stos
lcall
mov
out
fwait
cmp
loopne
or
out
xor
push
iret
mov
inc
mov
aaa
pop
mov
jle
and
nop
lahf
lahf
pop
pop
sub
pop
mov
movsb
in
movsb
loopne
fistl
push
sub
sbb
jmp
hlt
dec
es
imul
pop
stos
or
loop
sahf
jle
lcall
jmp
lahf
pop
scas
cmpsl
sub
flds
in
xchg
jo
pop
ret
add
cmpsl
jecxz
xchg
push
xor
std
jnp
xchg
cmc
shl
sbb
stos
jne
test
and
pop
icebp
jns
mov
ret
adc
pop
fwait
cmp
xchg
jle
pop
imul
xchg
cli
popf
mov
fucomp
es
inc
jns
pop
pop
movl
sahf
lods
test
xor
pushf
mov
cmpsb
push
jns
mov
mov
out
sbb
rclb
clc
aas
mov
mov
ss
add
stc
xchg
test
dec
push
cld
popf
pop
pop
adc
xchg
call
sub
lds
and
pop
adc
jo
dec
ret
lahf
icebp
pusha
ja
or
dec
push
push
insb
movsl
mov
frstor
loopne
ret
pusha
mov
xor
out
aaa
repnz
fdivr
mov
aaa
iret
outsb
push
roll
decl
xor
out
out
pop
jmp
lds
ss
in
push
push
push
in
lea
mov
push
cmp
je
in
cmp
pop
xchg
sahf
inc
xor
xchg
pushf
or
insl
sbbl
out
jae
aaa
xor
mov
mov
pop
and
imul
clc
fsubrl
pusha
int
arpl
dec
mov
daa
popa
push
xchg
and
repz
sub
lcall
mov
cmp
push
mov
repz
add
mov
or
mul
pop
mov
out
pusha
xchg
fucom
or
jecxz
mov
pop
sbb
ret
push
add
mov
jo
and
fstl
enter
cli
cmp
loope
xlat
lods
rdmsr
dec
cs
pop
popa
jle
or
out
es
in
dec
out
push
sbb
push
aas
nop
rcrb
dec
mov
dec
ss
scas
movsb
cld
xchg
pop
ss
loopne
ds
or
jl
icebp
leave
sub
popa
inc
out
ret
jb
imul
pop
roll
test
cld
outsl
enter
cmc
in
inc
add
pop
mov
popa
enter
ret
pop
out
dec
jb
in
outsl
ljmp
jge
imul
das
mov
xor
in
xor
sbb
mov
shl
cmp
fs
fwait
pop
cmp
in
xor
pop
lret
hlt
xchg
push
mov
test
mov
pop
and
sub
gs
pop
sbb
sarl
in
loop
das
add
pop
mov
ret
jle
mov
out
or
packuswb
jge
mov
test
or
mov
pop
ljmp
mov
xchg
jmp
inc
sub
push
out
loope
dec
lss
mov
in
sub
or
push
popa
call
xchg
shll
stos
mov
xor
fidivrl
jge
pop
push
das
adc
cs
imul
pop
and
mov
and
mov
mov
sbb
jb
cmp
pusha
push
das
cli
or
orl
jge
xchg
popa
push
push
sbb
adc
andb
jle
mov
addl
into
int3
fxch
jl
mov
ja
sbb
sbb
add
in
rcr
xorl
pop
mov
in
push
pop
pop
ljmp
popf
pop
push
pop
loop
and
mov
mov
in
dec
or
pop
cld
jmp
popa
add
rep
xchg
out
frstor
addr16
xchg
std
fimuls
ficompl
scas
sbb
xchg
cwtl
repnz
adc
imul
test
push
ja
repnz
and
adcl
jl
popa
adc
fsubr
ret
pop
xchg
inc
lock
and
in
pop
nop
lcall
cmc
test
jo
mov
mov
sti
push
fcomps
dec
sub
sbb
add
mov
adc
hlt
dec
mov
popf
test
mov
stc
pop
stc
mov
mov
popa
add
mov
test
push
fdivs
inc
movsl
xor
adc
push
addr16
xchg
cwtl
push
dec
or
sbb
cs
inc
cmc
ds
out
and
add
loop
lds
mov
lret
pop
hlt
pop
in
xchg
jl
push
xor
fchs
out
sahf
mul
push
out
iret
jp
push
xchg
inc
xchg
lods
mov
inc
stos
pop
lahf
pop
mov
fdivrs
pop
js
adc
je
xchg
movsb
in
jbe
out
addl
jle
rcll
and
orb
enter
push
sub
int3
int3
pop
movsb
xlat
cmc
sahf
inc
jae
push
outsl
pusha
mov
in
in
cli
insb
lods
and
ds
lock
adc
nop
xchg
fs
out
xchg
out
cmp
lods
inc
xchg
loopne
mov
add
in
clc
outsb
cmc
xchg
cld
jmp
jbe
lea
in
pop
sub
insb
push
xchg
or
out
pop
inc
dec
lds
sub
lods
pop
xor
push
add
in
into
mov
adc
andb
or
mov
xchg
mov
cmp
pusha
pushl
jnp
mov
out
ljmp
xor
and
xlat
es
dec
mov
sub
mov
push
stos
push
cmp
and
out
loopne
jbe
pop
mov
adc
jecxz
cmpsl
dec
popl
jge
mov
ja
jo
mov
icebp
xchg
int
popa
cmpsb
push
loope
out
xchg
test
pop
repz
cmp
push
shll
bound
icebp
jbe
pop
outsl
mov
xchg
push
mov
add
nop
jns
add
push
adc
pop
sub
adc
popa
dec
cmp
into
push
loope
out
cmpsl
xor
cmpsb
dec
mov
sub
push
mov
pop
imul
mov
pop
dec
ficompl
add
mov
in
push
shrb
pop
pop
jo
int
mov
fs
jns
out
lahf
cmp
js
jae
jg
xor
roll
cmp
cmpsb
insl
lret
push
out
pusha
push
xchg
inc
adc
pop
cld
out
out
ss
sbb
scas
jne
shlb
sub
xchg
das
cmc
push
dec
lret
sub
mov
ficomps
push
cmpsl
xchg
shll
sub
xchg
or
mov
dec
pop
popaw
mov
mov
mov
mov
inc
cmpsl
fsubl
lret
mov
lcall
pop
adc
movsl
lods
rorb
and
ficomps
movsb
fiadds
sar
fcomps
mov
or
jb
pusha
fmuls
mov
pop
subb
test
add
sti
or
outsb
js
scas
clc
pusha
xchg
dec
mov
out
adc
mov
negb
jg
mov
pop
insl
mov
mov
popa
test
jb
rcrl
out
sahf
pushf
mov
jecxz
and
out
mov
xchg
fcomps
push
insl
cmp
test
jl
jae
jbe
ret
inc
jle
icebp
or
enter
arpl
ficoms
popa
loop
ret
mov
in
adc
mov
jmp
bound
ficoms
fdivrl
push
push
out
pop
aam
jecxz
and
mov
jle
cmp
adc
addr16
cmp
push
popa
mov
xchg
insl
jp
fwait
lahf
lock
popa
popa
lahf
rorl
dec
dec
xor
or
and
adcl
adcl
jo
loop
ret
mov
add
jnp
pop
push
pop
pop
jge
lock
cs
aaa
out
adc
add
es
push
xchg
push
sbb
aad
jbe
out
dec
xor
dec
sbb
mov
sbb
dec
xor
pop
jmp
roll
dec
pop
movsb
fsubs
insl
pusha
mov
pushf
dec
dec
and
out
add
fidivl
mov
sti
shl
out
and
lds
das
inc
iret
pop
sub
cmpl
sub
imul
sbb
and
inc
mov
into
pop
inc
xor
in
sbb
jge
popaw
inc
jo
rorb
mov
cmc
aaa
movsb
stos
repz
xor
sbb
pop
dec
pop
add
mov
cmp
outsb
pop
sbb
sub
pop
lds
xor
sub
jge
popa
cmc
jno
mov
adc
int3
or
out
test
xchg
cmp
dec
loopne
xchg
fsubl
out
add
xor
js
pop
and
data16
sbb
add
sbb
sbb
inc
sbbl
add
pop
cmp
mov
xchg
jnp
inc
dec
out
pop
inc
out
scas
stos
adc
movsb
mov
push
int
aas
lods
lahf
mov
iret
call
cmpsl
loopne
xchg
mov
imulb
or
out
sub
xchg
shrl
cs
cmc
mov
push
add
xchg
testb
pop
mov
imul
push
lcall
mov
pushf
test
mov
inc
jbe
fs
je
jae
std
jno
sbb
and
test
or
icebp
into
sub
push
outsb
pop
sbb
in
out
inc
dec
repz
mov
sbb
gs
ret
adc
mov
jl
repnz
mov
test
push
movsl
dec
das
jmp
sti
dec
cltd
cmp
pusha
adcb
mov
test
test
lret
pop
dec
popa
jnp
lahf
mov
jmp
xor
xchg
mov
xchg
dec
mov
or
mov
push
jle
call
push
mov
jb
add
pop
pop
mov
dec
jecxz
pop
cmp
aad
and
pop
cmp
int
adc
dec
adc
popa
jle
imul
push
adc
out
sbb
test
inc
int
rcrl
mov
inc
into
arpl
arpl
ffreep
jns
int
pop
imul
mov
xor
inc
lock
or
loope
push
inc
jg
pusha
js
mov
jmp
loope
xor
loope
sub
jne
call
fldenv
and
sbb
les
insl
jmp
mov
mov
loopne
fcmovu
rcrl
dec
jne
imul
call
std
and
lods
mov
movsl
outsb
iret
gs
loopne
cmp
insb
add
pusha
inc
mov
mov
arpl
jge
sbb
cwtl
cmp
stc
sbb
adc
data16
xchg
jae
out
ja
mov
div
sahf
dec
pop
mov
adc
mov
pusha
mov
sbb
ret
arpl
imul
sbb
ljmp
fists
pop
in
mov
sub
loop
cltd
jecxz
test
xor
mov
jbe
in
xor
scas
cmp
and
mov
sub
mov
fwait
ss
mov
lcall
xor
xchg
jno
push
or
add
add
inc
inc
popa
mov
cmpl
xorb
into
sub
mov
sbb
enter
jns
mov
lock
pusha
mov
pusha
lods
testb
push
push
and
mov
pop
adc
mov
lock
dec
notl
scas
or
out
sub
inc
ljmp
enter
test
and
test
out
pop
es
cmp
ja
insb
or
xchg
leave
sub
pop
sub
add
repz
xor
mov
scas
lgs
lahf
fwait
pusha
test
add
jno
xchg
mulb
push
dec
inc
int
inc
jo
xchg
loopne
in
mov
push
dec
lds
push
jmp
sub
call
stc
sahf
xchg
pop
cmc
leave
shl
jnp
sbb
out
sub
push
push
jo
dec
add
out
mov
push
xchg
je
movsb
jmp
sub
or
ret
lock
push
arpl
out
sahf
test
sub
into
pusha
stc
and
jecxz
pop
and
mov
mov
stc
addr16
int3
imul
out
mov
into
jo
lock
sub
sub
loop
imul
insb
outsl
mov
pop
pop
pop
mov
mov
call
mov
stos
mov
xchg
push
dec
jg
popf
sub
xchg
pop
loop
out
pop
int
xchg
add
pusha
ljmp
adcl
mov
mov
mov
sahf
je
pop
pop
sysexit
push
mov
xor
insb
fstpt
mov
dec
push
popa
mov
popa
ljmp
cmp
pop
lea
xor
sbb
shlb
fstpl
or
mov
pop
jecxz
test
mov
ret
add
mov
lret
scas
xor
lea
push
xchg
cmc
pusha
ss
add
cmp
push
xchg
pusha
js
mov
sub
pop
xor
ja
outsb
std
repnz
fwait
mov
mov
inc
xor
mov
cmp
fstps
dec
sbb
imul
jo
mov
jmp
pusha
mov
xor
xchg
scas
sub
insb
lcall
and
cwtl
pop
sub
mov
xor
divb
xor
mov
adcl
mov
das
and
adc
test
cmpsb
outsl
stos
mov
call
or
insl
test
push
lea
mov
lods
push
out
or
subb
pop
sbb
out
adc
mov
ret
imul
fsubp
mov
mov
pop
sub
pop
inc
imul
loopne
insl
scas
mov
dec
out
scas
fsts
aad
pushf
iret
subl
lods
jne
and
out
mov
ficomps
mov
or
add
inc
dec
mov
cmp
pushf
and
sub
int3
jle
pop
xchg
xchg
xor
cmp
mov
dec
push
pop
inc
jo
out
mov
xor
mov
dec
popf
in
call
test
pusha
dec
pop
cli
xor
mov
pusha
push
cmp
arpl
dec
fildl
mov
jl
mov
xchg
push
cmp
or
out
ljmp
clc
sub
fs
mov
sub
jecxz
pop
xchg
dec
das
call
push
adc
sbbb
sub
pop
int
cmp
and
and
and
push
push
add
movaps
mov
xor
mov
dec
jecxz
dec
pop
sbb
mov
xchg
int
lods
out
and
inc
shll
pop
dec
les
adc
lods
xchg
js
mov
mov
add
adc
divps
xor
mov
push
repz
mov
pop
dec
dec
andl
jp
cmp
out
sub
aad
sub
push
dec
aas
call
or
xor
and
push
xor
jno
loop
sub
flds
push
lcall
xchg
fdivp
add
fldcw
push
icebp
imul
xorb
pop
or
or
inc
pop
jo
sbbb
fdivs
xchg
test
push
addr16
xchg
xor
cli
pop
popf
push
cmp
cli
add
int3
mov
fs
cmpsb
jl
out
aaa
bound
nop
out
sub
ds
mov
clc
push
out
int
inc
push
loopne
push
push
mov
lcall
sbb
lods
add
outsl
pusha
sub
xchg
jo
mov
pop
jbe
sub
movsb
in
mov
ret
dec
in
dec
out
adc
xchg
xor
cmpl
out
mov
out
cwtl
popf
pop
sbb
dec
lock
push
test
mov
pop
mov
mov
stc
test
loop
ficomps
loopne
jg
pop
popa
out
mov
arpl
mov
orl
xor
sub
pop
add
lcall
je
mov
mov
loop
movsb
dec
pop
popa
xchg
xchg
das
cmpsb
mulb
popa
lock
and
out
movsl
mov
pop
cld
or
cpuid
mov
or
and
jmp
adcl
mov
mov
mov
loop
leave
pop
in
lods
sahf
add
loope
clc
imul
add
in
aam
adc
out
push
sub
outsl
popa
or
jl
pop
inc
mov
mov
inc
out
adc
gs
mov
scas
mov
pop
sub
lock
lods
dec
lea
loope
sub
aam
js
pop
leave
pop
cltd
sbb
sti
nop
pusha
dec
xor
cli
out
imul
pop
test
test
push
add
push
cmpl
out
out
sbb
mull
mov
mov
jns
mov
xchg
hlt
dec
dec
ss
dec
mov
insl
cmp
into
xchg
mov
xchg
sub
lret
xchg
mov
adc
icebp
pusha
ja
out
hlt
loopne
add
fsubl
out
sub
lods
out
cli
mov
fstpt
xor
mov
outsl
js
mov
and
cmp
hlt
xor
dec
pop
stc
pop
jge
out
outsl
pusha
adc
jbe
es
mov
add
adcb
test
cwtl
and
rcr
add
sbb
punpcklwd
adc
stos
call
xchg
nop
pusha
movsb
je
mov
out
pop
push
and
lahf
pop
push
push
cltd
xor
adc
jae
js
xchg
shl
mov
out
and
xchg
iret
jmp
sbb
out
cld
push
dec
scas
push
lock
rorl
es
rolb
and
pusha
lock
or
jl
out
nop
insl
inc
xor
cltd
mov
les
xchg
xor
out
sbb
je
popa
jg
xchg
jle
fisubl
loopne
bound
popa
mov
xchg
out
out
xor
mov
test
lods
jmp
loope
shrl
cmpsl
jo
cmp
mov
popf
bound
inc
dec
mov
aad
jmp
subb
hlt
testl
adc
mov
jecxz
jl
pop
sub
jmp
sbb
sub
lea
sub
and
and
mov
push
mov
out
adc
and
pop
mov
shlb
mov
out
loop
and
adc
pop
or
jmp
cs
pop
xchg
mov
or
push
pop
shlb
push
cmpb
xor
shr
pop
insb
lcall
pop
nop
cmc
cmp
dec
gs
imul
sahf
pusha
outsl
stc
fcoms
in
dec
out
jp
push
aas
imul
aad
cmpsl
push
jl
mov
sbb
int3
in
out
inc
gs
jl
stc
sbb
sarb
dec
leave
scas
or
pop
mov
cli
xchg
cwtl
push
add
sbbl
int
gs
cld
push
fisttpl
and
lcall
push
imul
jl
adc
cmovp
push
popf
push
in
pop
mov
dec
cmc
mov
loopne
insb
in
stc
cmpsl
repz
and
pusha
daa
dec
icebp
inc
dec
push
pop
out
add
lea
mov
xchg
sbb
test
add
cmpsb
imul
sbb
stc
je
mov
push
adc
push
cmpsb
xor
xchg
and
outsl
mov
aad
push
insb
out
pusha
mov
jne
add
xor
dec
test
inc
scas
jp
and
mov
mov
adc
add
cld
cmpsl
out
icebp
sub
scas
leave
sbb
xchg
clc
sub
jecxz
xor
mov
lds
js
cmp
mov
xor
lahf
fadds
rclb
mov
js
adc
movsb
call
js
mov
into
std
loope
mov
add
mov
mov
fiaddl
mov
sbb
pop
out
add
inc
loope
dec
pop
sub
mov
jne
mov
fisubl
xchg
dec
or
dec
mov
outsb
out
std
mov
jmp
or
mov
cltd
jp
mov
lods
in
push
dec
dec
sub
ret
mov
sti
cmp
mov
pop
into
js
cltd
dec
add
mov
mov
insb
dec
stc
cmp
mov
xchg
bound
mov
hlt
lds
pushf
pop
loop
add
push
in
loop
lods
cli
lds
cmp
push
fistpl
fs
insb
xor
cmp
adc
inc
xchg
xchg
mov
mov
or
out
loopne
cmp
andb
mov
add
movsl
xor
push
popa
sub
add
scas
outsb
out
movsl
out
jo
sbb
or
cmp
dec
mov
xor
ret
mov
jne
not
pop
test
test
stos
mov
fsubs
js
out
mov
outsb
clc
jl
pusha
xchg
or
sub
out
cmpsl
mov
sbb
std
movsb
jb
xor
pop
subb
cltd
shlb
movsl
push
dec
jl
mov
mov
rcll
fmull
adc
pop
mov
cmp
negl
push
mov
daa
xchg
lret
mulb
push
mov
xchg
add
pop
xor
add
shrb
pop
scas
testl
xchg
add
dec
sub
xor
je
pop
das
sub
movsb
dec
push
jg
pusha
jp
daa
mov
or
sub
insl
ds
inc
mov
mov
pop
sub
pusha
or
xchg
es
jmp
push
push
into
xchg
pop
scas
and
sahf
movsb
sub
mov
dec
dec
mov
push
aas
pusha
pushf
and
bound
test
shll
cmp
outsb
push
xchg
add
push
les
shr
insl
sbb
cmpsb
in
sub
xchg
outsb
lods
xchg
mov
fisubs
xchg
lret
mov
jmp
call
lahf
fsubr
dec
popf
pusha
cmp
ss
add
out
pop
push
jno
shrl
test
subb
jmp
add
xchg
mov
and
outsl
ret
xor
out
pop
sbb
mov
xor
inc
jae
mov
loope
jmp
ja
xchg
mov
dec
aad
data16
jnp
inc
pop
test
in
clc
pusha
push
clc
lods
stos
rcl
push
out
aad
inc
das
sahf
push
mov
je
push
das
imul
mov
or
add
mov
shll
andb
pusha
and
mov
subl
repnz
mov
scas
sub
iret
std
movsb
push
jno
in
aaa
popa
sub
xchg
andb
pop
xchg
xchg
push
loop
out
jmp
dec
shlb
lods
xchg
adc
pop
loope
andl
pop
ret
inc
jnp
lea
pop
xchg
mov
loope
jb
pop
fidivrl
inc
push
sub
movsl
aam
pop
inc
data16
mov
mov
cmpsb
or
cmp
std
cmp
jecxz
pop
cmc
iret
adcb
xchg
pop
leave
xor
and
cs
test
jo
jmp
imul
xlat
mov
test
leave
mov
sar
sbb
lret
out
sbb
das
outsl
scas
sub
pop
stc
leave
cmp
punpcklwd
mov
iret
fmull
xlat
jne
in
loopne
push
shll
frstor
stos
inc
out
xor
cmpsl
sbb
fwait
aaa
je
add
lcall
cld
movsb
loope
push
mov
call
ljmp
cld
push
mov
pop
sarb
xor
adc
add
das
mov
mov
shrl
mov
stc
or
popl
push
dec
rorb
and
outsb
sub
cmpsb
mov
xor
aaa
movsl
xor
pop
ja
test
jp
adc
lret
jmp
xchg
dec
cltd
cwtl
add
adc
adc
xchg
pusha
jae
gs
out
jg
xchg
std
out
mov
mov
mov
dec
push
mov
jmp
push
add
adc
test
sub
and
lea
iret
mov
lods
mov
adc
inc
data16
dec
push
jecxz
popa
xchg
test
movsl
jbe
mov
lea
xor
cwtl
inc
ljmp
sbb
mov
push
pop
mov
out
lea
rcll
mov
out
repz
bound
popa
bound
xor
add
add
cs
addl
cltd
pop
sarl
cmc
das
dec
jge
and
xchg
ja
fbld
dec
lds
cmp
inc
mov
fiaddl
push
lds
push
push
repnz
loopne
cmpl
stc
fs
cmc
lret
add
nop
jb
popa
repz
and
cmpsb
push
cmp
xchg
mov
or
xor
mov
popf
aas
cmp
jmp
adc
mov
mov
movsb
or
test
jae
out
push
in
leave
ret
mov
sub
adc
das
out
mov
aaa
pop
or
in
dec
sbb
inc
out
mov
inc
jnp
mov
and
sbb
pop
dec
adc
pop
popa
stos
cmp
mov
out
dec
or
push
stos
inc
nop
movsl
mov
cmp
xor
pop
add
push
xchg
xorl
adc
inc
pushf
sub
pop
cmp
ficoms
pop
sub
cmp
lahf
pop
js
insl
dec
jb
or
inc
arpl
sbb
jnp
push
movsb
in
je
out
divl
or
jge
push
inc
mov
inc
lds
pop
jmp
lock
out
pushf
mov
inc
xchg
lcall
mov
push
adc
mov
pop
xchg
pusha
out
mov
shll
loop
mov
mov
loopne
or
ficoms
popa
or
inc
ja
fldenv
insb
in
stos
rol
mov
mov
cmp
push
stos
mov
xchg
aam
sub
push
aas
inc
mov
sbb
xchg
or
mov
adc
cld
xorb
lods
jb
outsb
mov
dec
fistps
gs
add
fsubl
lods
aad
push
shll
bound
mov
fstp
xorl
fnstenv
dec
mov
aad
push
je
out
iret
cld
xchg
and
movsb
fsts
movsl
dec
dec
mov
push
push
sbb
mov
sarl
sahf
lock
jb
pop
jae
sbb
loopne
cmc
mov
ror
cwtl
pop
jp
dec
dec
mov
push
ret
xor
sbb
mov
push
mov
enter
mov
inc
in
pop
imul
mov
inc
popa
cmp
addb
pop
movsb
arpl
sbb
clc
pop
cmp
int
sub
jl
push
ja
dec
out
and
inc
std
sub
mov
lods
pop
ja
xchg
pop
ss
out
lahf
popa
mov
sub
and
shll
xchg
jl
pop
jne
movsl
test
xchg
dec
in
xor
cmp
test
out
and
lcall
pop
push
shl
fimull
inc
cmp
pusha
popa
and
mov
icebp
mov
imul
jle
push
and
std
inc
mov
mov
aam
pusha
mov
call
movsb
fs
ja
lods
jg
or
mov
pusha
sbb
fldenv
xchg
leave
iret
iret
cmc
test
cmc
mov
jb
pop
out
lods
xchg
into
inc
rcl
sbb
jle
dec
sahf
cmp
outsb
std
out
lods
subb
fs
lock
xchg
pop
bound
ljmp
pop
adc
int
xor
or
repz
stos
int
push
in
pop
enter
xor
ret
mov
xor
xchg
enter
jl
mov
sub
sti
out
imul
jns
push
push
cmc
xor
out
popa
stc
pop
punpckhdq
sbb
lods
push
mov
xor
inc
out
rol
fsubrp
pop
pop
popa
xchg
add
and
repz
ret
orb
mov
mov
mov
cmp
mov
or
and
xor
mov
cmc
shrb
popa
add
int
and
xchg
mov
or
jne
pop
test
out
push
push
fimull
mov
cmpsb
xchg
pop
sub
mov
out
lock
mov
popfw
jg
jbe
adc
cmp
std
das
bnd
stos
mov
out
shlb
mov
dec
outsb
out
fisubs
aam
add
add
inc
enter
mov
pop
out
mov
inc
addr16
fildll
mov
xchg
xor
hlt
pop
arpl
test
ja
inc
inc
in
add
scas
pop
push
pop
shlb
daa
cltd
pusha
ficomps
lods
sbb
fisubrl
inc
rolb
pop
jl
fwait
add
jns
inc
in
aaa
xorl
lock
pop
cltd
ljmp
test
xor
cmpsl
iret
int3
mov
int
rcrl
shll
cmp
mov
xchg
push
pop
nop
popf
in
out
jno
out
movsl
xchg
repnz
dec
addl
dec
jg
pop
ljmp
jmp
mov
dec
xchg
xlat
int3
adc
cs
enter
push
jnp
xchg
mov
push
mov
xchg
mov
loope
rcrb
sub
lret
xchg
lcall
stc
push
decl
pusha
mov
out
es
lock
jecxz
xor
push
add
inc
int3
cmpsl
shrl
cmc
xor
cmc
push
int3
pop
pop
int3
repz
xchg
and
test
test
push
adc
cmp
lods
lods
and
mov
cli
jne
into
pop
push
lods
adc
jae
stos
pusha
adc
mov
test
jnp
sbb
pop
test
pusha
inc
pop
cmp
pop
out
lret
daa
push
jl
movb
jmp
or
pusha
ret
fwait
ja
pop
adc
mov
sub
push
ficoms
sbb
mov
sbb
rcrl
in
lock
aaa
cld
loope
sub
arpl
and
sti
cmp
adc
rcrb
mov
repz
xor
sbb
mov
mov
xor
pushf
shll
je
les
xor
sbb
ljmp
xchg
lret
in
enter
test
aam
pop
inc
stos
ret
scas
mov
mov
subl
push
stos
jg
jno
cmpsl
mov
dec
pop
sub
mov
adc
sbb
lods
adc
xor
out
pop
lods
jnp
xchg
je
inc
cli
data16
les
adc
jge
adc
sub
push
xchg
mov
rolb
jae
jb
sub
or
mov
mov
insl
pop
clc
mov
push
out
icebp
push
out
sub
xchg
xchg
jle
mov
pop
jo
push
bnd
or
push
loopne
cltd
mov
jae
jp
loopne
loope
rcr
mov
shrb
mov
outsb
pop
pop
cmp
xchg
sti
pop
mov
add
imul
out
mov
les
mov
ds
mov
xchg
les
jg
sbb
xor
sbbl
mov
sbb
test
std
outsb
inc
shlb
sub
test
sbb
mov
mov
add
jno
aaa
adc
jl
lods
inc
xor
add
in
incl
xor
pop
sub
mov
push
add
cltd
inc
wbinvd
cmc
andb
hlt
sub
cmp
add
inc
jno
imul
jecxz
outsl
enter
daa
popa
sub
jle
out
inc
and
pop
jns
sbb
lret
out
aam
xchg
push
arpl
xor
clc
and
xchg
repnz
mov
in
and
popa
jae
mov
loop
xchg
out
jecxz
int
testb
add
push
push
push
lret
scas
cs
or
jb
in
ja
lret
and
sti
leave
mov
and
cld
sbb
pop
loopne
push
cmc
pop
xor
popa
loop
es
int3
jge
add
cmp
ds
in
test
ret
inc
nop
sti
xchg
mov
and
pop
das
jb
mov
dec
into
xor
jp
dec
adc
loop
push
mov
pop
outsl
jae
inc
push
int
mov
sbb
push
in
in
mov
mov
xor
pop
sarl
cmp
push
pop
push
xor
test
mov
inc
push
addr16
pop
popa
sbb
xor
adc
inc
push
pop
cmp
xchg
cmc
adc
cmp
jne
dec
xchg
or
stos
mov
mov
lods
clc
arpl
fdivrs
ret
add
mov
icebp
out
testl
add
sub
in
jecxz
pop
jge
in
cmc
inc
loope
popa
dec
or
dec
movsl
out
fsts
add
je
sbb
adc
or
dec
out
das
outsl
xchg
sbb
loope
test
das
push
jae
outsl
xchg
jo
loope
fucomi
jmp
mov
pop
mov
lea
push
clc
lods
mov
mov
fldenv
daa
jbe
sti
cltd
arpl
fisubrs
push
in
ljmp
and
xchg
pusha
adc
notb
sbb
or
lea
xchg
and
std
out
dec
test
aad
lds
mov
loopne
sbb
pop
insb
or
es
inc
scas
fisubs
adc
out
mov
andb
idiv
jg
lea
jns
adc
ficoml
loop
int3
adc
pop
push
div
push
jle
test
dec
xor
pop
mov
cmp
cmp
hlt
push
add
lods
arpl
push
jbe
push
jae
repz
mov
test
sbb
fistpl
enter
mov
mov
mov
xchg
xor
in
ja
stc
mov
lcall
in
bound
popa
xchg
sbb
jge
shl
dec
out
test
aad
daa
lock
or
popa
pop
ret
enter
rorb
mov
xchg
fiadds
mov
mov
orb
ljmp
mov
mov
addl
mov
out
daa
dec
jl
mov
ss
pop
lds
mov
pusha
movsl
ds
and
out
cmc
push
sbb
or
stc
mov
leave
xchg
popf
pop
lcall
pop
rorb
std
mov
mov
int
push
pop
xchg
jl
pop
sub
mov
cmp
xchg
sub
mov
sub
shlb
data16
je
push
andl
push
add
xchg
sbb
adc
pop
jge
aad
sbb
jno
push
pop
inc
daa
pop
scas
sbb
iret
xchg
pop
pop
scas
fsubl
loop
sbb
ss
ficomps
dec
pop
push
push
or
pop
out
adc
pop
lahf
out
push
outsb
js
cmp
dec
inc
inc
mov
out
dec
popa
popf
xchg
ficomps
and
jmp
mov
mov
lods
outsb
pusha
xor
pop
mov
aas
shlb
lret
mov
in
sbb
fldcw
imul
mov
jle
jge
dec
sub
mov
arpl
mov
mov
cmp
xchg
clc
ficomps
xor
sub
pusha
xorl
jmp
in
inc
xchg
cmp
adc
dec
test
in
xor
xor
push
mov
sbb
pop
mov
xchg
notb
sarl
jns
sub
aas
aam
out
mov
jecxz
sbb
or
cmpl
sub
mov
and
and
xchg
jno
xor
fisubrl
and
xchg
outsb
xor
mov
jge
pop
inc
ds
fidivrl
movsl
dec
aaa
jge
add
aaa
lcall
mov
inc
mov
sub
out
icebp
fistpll
xor
movsb
jne
mov
dec
out
push
push
mov
ss
mov
xor
pusha
mov
ret
inc
lcall
jbe
dec
mov
sub
xchg
mov
jp
mov
into
xchg
clc
mov
sarl
test
popa
pushf
lret
and
imul
insl
outsb
loop
mov
sbb
sbb
mov
mov
test
js
adc
sahf
inc
inc
push
sub
aad
mov
jns
mov
scas
ja
and
addl
dec
inc
mov
jo
sbb
jge
pusha
fwait
lods
out
mov
sbb
inc
popf
std
rcl
imull
iret
mov
xchg
gs
xor
and
pusha
insb
or
push
movsb
jmp
rcrl
add
movsl
lock
pusha
fcmovnbe
sub
in
jp
pop
jle
mov
fcomp
pusha
fildl
mov
sti
mov
pop
sbb
aam
dec
push
pop
rol
js
sbb
stos
inc
pop
dec
pop
jne
lea
pusha
jg
popa
clc
mov
jae
out
icebp
and
nop
mov
sub
outsl
push
cmp
pusha
mov
es
pop
filds
push
outsb
mov
subl
adc
ret
pop
pop
dec
inc
add
js
aad
pusha
adc
sub
pop
outsl
sahf
and
cmp
xchg
inc
lahf
mov
movsl
arpl
pop
mov
pop
lock
sub
mov
aad
mov
fwait
adcb
push
or
ficomps
cli
mov
mov
add
imul
mov
subb
or
mov
out
sbb
jnp
icebp
dec
out
mov
daa
inc
sub
jns
dec
mov
mov
cmpsb
push
mov
pop
enter
xchg
ret
outsl
mov
pop
mov
jle
and
mov
mov
mov
dec
movsb
and
mov
inc
mov
mov
popa
decb
or
fwait
pop
add
cmpsb
imul
and
fistps
ret
mov
popf
mov
or
in
mov
xor
inc
sbb
mov
add
insl
test
insl
rcll
shrb
adc
ljmp
inc
jo
comiss
loope
aaa
cmp
and
push
mov
lea
push
and
mov
ds
ror
mov
pop
jge
aad
xchg
pop
mov
cmc
jmp
mov
jmp
push
mov
sbb
adc
pop
mov
gs
out
insb
out
push
sarl
pop
jb
ljmp
sub
sahf
loope
lahf
jmp
sub
cmpsb
cwtl
loopne
stos
js
pop
sub
lods
mov
sub
pushl
inc
scas
imul
inc
jg
pop
push
mov
pop
xor
popf
mov
inc
shll
dec
sub
je
pop
xor
in
jl
loop
mov
xchg
pop
int
pusha
jmp
movsl
inc
int3
add
das
cmpsb
and
outsb
xor
add
mov
arpl
mull
mov
cmp
cmp
mov
sub
push
inc
outsl
mov
or
pop
or
or
pminsw
das
call
and
mov
outsb
sbb
cld
inc
mov
jo
in
inc
mov
mov
push
test
pop
pushf
push
xchg
into
cltd
push
xchg
lds
lock
leave
jecxz
jl
adc
cmp
mov
pop
mov
sbb
hlt
sbb
out
push
jmp
mov
ljmp
out
dec
addr16
sbb
push
mov
arpl
sub
mov
xlat
outsb
loop
mov
mov
xor
jl
xchg
sbbl
xchg
test
test
mov
jnp
insl
mov
int3
mov
mov
stc
pusha
mov
pop
jns
push
shrb
jmp
test
sbb
sub
test
aaa
jmp
dec
loope
mov
das
pop
inc
push
les
addb
mov
sub
xor
pop
dec
push
in
mov
sbb
jnp
pop
mov
shlb
insl
pusha
fsts
inc
mov
out
jne
mov
cmpsl
pop
mov
mov
or
pop
xchg
jo
adc
out
scas
les
clc
lods
lock
in
lret
and
in
dec
int3
imul
push
sbb
fisubs
xor
pusha
mov
ja
pop
push
repnz
pop
popa
xor
jge
pop
add
add
repnz
in
dec
mov
pop
cmp
jl
mov
mov
test
pusha
out
dec
movsb
jecxz
movsb
mov
fsub
push
cli
jne
cmp
loopne
jns
mov
mov
xor
rorl
pop
sbb
das
xor
xchg
sbb
mov
out
ficompl
inc
pop
mov
dec
test
pusha
popa
xchg
push
scas
push
rcrb
add
push
xchg
es
cltd
or
clc
aaa
xchg
mov
insb
sbb
sbb
pusha
xchg
xor
inc
sub
mov
out
fcomi
fdivl
add
add
dec
jnp
add
sbb
add
inc
add
add
add
dec
imul
mov
inc
add
sub
add
lock
add
add
movsb
leave
inc
add
or
add
in
sub
mov
mov
push
sub
push
mov
sub
mov
sub
sub
or
add
push
or
add
add
or
or
add
mov
xor
cmp
je
mov
add
mov
add
add
and
or
sub
cmp
je
add
mov
sub
test
jne
sub
mov
mov
add
add
mov
sub
cmp
jne
sub
mov
sub
mov
sub
sub
sub
and
xor
sub
or
and
test
jne
or
call
sub
mov
cmp
jne
cmp
je
or
mov
and
add
mov
mov
sub
sub
add
cmp
je
mov
mov
and
sub
and
cmp
je
mov
and
sub
sub
cmp
jne
mov
sub
add
mov
sub
and
xor
sub
mov
mov
mov
mov
sub
mov
or
mov
mov
mov
sub
add
sub
and
sub
and
add
add
sub
sub
or
add
and
or
add
and
mov
mov
cmp
jne
mov
mov
add
sub
cmp
je
add
sub
sub
sub
sub
or
add
mov
cmp
jne
cmp
jne
mov
sub
mov
sub
add
sub
add
cmp
je
sub
cmp
jne
or
mov
sub
add
mov
add
mov
add
or
or
mov
mov
sub
xor
mov
mov
sub
add
cmp
je
mov
mov
add
mov
sub
cmp
jne
sub
cmp
je
add
sub
cmp
jne
add
mov
mov
sub
and
test
jne
mov
sub
sub
or
mov
add
lea
push
call
mov
cmp
je
or
lea
push
call
mov
add
cmp
je
add
sub
mov
cmp
je
mov
mov
cmp
je
sub
mov
mov
mov
cmp
jne
add
mov
sub
and
and
sub
cmp
je
or
mov
cmp
jne
cmp
jne
sub
mov
sub
sub
mov
cmp
jne
sub
add
add
mov
mov
mov
cmp
je
add
mov
mov
add
test
je
add
cmp
jne
mov
sub
and
and
mov
test
je
mov
mov
xor
cmp
jne
sub
cmp
jne
sub
mov
mov
sub
add
cmp
jne
mov
mov
add
sub
test
je
and
sub
add
and
mov
add
sub
sub
cmp
je
sub
mov
and
mov
cmp
je
add
cmp
je
mov
or
add
add
mov
cmp
jne
cmp
jne
mov
add
mov
and
and
cmp
jne
cmp
jne
or
sub
sub
sub
mov
cmp
je
cmp
jne
sub
add
mov
sub
mov
and
test
je
mov
sub
add
sub
mov
add
add
sub
and
and
cmp
je
sub
add
sub
test
jne
mov
mov
sub
cmp
je
sub
mov
add
add
sub
mov
and
mov
mov
sub
mov
mov
sub
or
add
add
add
sub
cmp
je
mov
add
cmp
je
or
mov
add
mov
add
add
test
je
mov
add
and
add
mov
xor
sub
sub
and
mov
mov
cmp
jne
add
sub
mov
cmp
jne
cmp
je
add
or
mov
cmp
jne
mov
cmp
je
mov
mov
sub
xor
add
sub
cmp
jne
sub
sub
sub
sub
sub
sub
mov
cmp
je
sub
or
mov
mov
mov
add
cmp
jne
mov
sub
mov
sub
add
cmp
je
cmp
je
sub
cmp
jne
mov
add
mov
mov
sub
sub
sub
cmp
je
add
mov
mov
or
sub
add
sub
or
add
add
mov
mov
mov
cmp
je
sub
sub
or
mov
sub
sub
and
mov
sub
sub
or
or
add
sub
lea
add
cmp
jne
mov
add
add
mov
mov
sub
add
sub
and
or
push
mov
sub
and
test
jne
mov
mov
cmp
jne
add
mov
mov
mov
add
sub
mov
sub
add
push
add
mov
and
mov
sub
sub
cmp
je
add
call
mov
mov
test
je
and
mov
add
mov
add
sub
sub
and
add
cmp
jne
mov
mov
sub
add
mov
cmp
je
mov
and
mov
add
sub
and
add
add
shr
add
test
je
add
cmp
jne
cmp
je
cmp
jne
cmp
jne
sub
add
cmp
jne
mov
mov
or
add
mov
add
sub
mov
or
mov
sub
mov
call
cmp
je
mov
mov
add
add
and
sub
test
jne
add
sub
add
mov
mov
add
add
sub
test
je
mov
mov
sub
sub
cmp
jne
sub
or
cmp
je
add
sub
mov
mov
and
add
cmp
je
mov
sub
mov
and
sub
add
sub
add
mov
mov
mov
sub
and
sub
mov
sub
pushl
push
pushl
call
mov
mov
cmp
jne
mov
mov
cmp
jne
cmp
je
mov
sub
mov
cmp
je
add
mov
mov
or
cmp
jne
sub
add
cmp
je
test
jne
add
mov
mov
add
mov
test
je
mov
add
mov
add
cmp
jne
add
mov
add
cmp
je
cmp
jne
add
mov
mov
sub
and
cmp
je
mov
mov
cmp
je
add
add
sub
cmp
jne
mov
mov
sub
add
test
je
mov
mov
cmp
jne
mov
cmp
jne
cmp
je
and
sub
mov
mov
sub
add
cmp
je
and
addl
sub
and
cmp
je
sub
cmp
jne
mov
add
mov
sub
sub
add
cmp
je
mov
mov
xor
add
add
sub
and
mov
mov
test
je
and
cmp
je
sub
call
add
mov
sub
add
add
mov
or
add
mov
sub
sub
and
sub
mov
mov
add
cmp
je
mov
mov
add
sub
and
test
jne
or
mov
test
je
mov
mov
sub
xor
cmp
je
cmp
jne
mov
add
add
sub
sub
mov
add
add
add
sub
call
mov
cmp
jne
cmp
je
mov
xor
mov
cmp
je
cmp
jne
test
jne
or
add
add
add
pop
mov
mov
cmp
je
and
add
cmp
jne
mov
or
add
pop
mov
and
mov
cmp
je
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
add
cmp
je
test
je
mov
cmp
je
cmp
jne
mov
add
cmp
jne
add
xor
mov
mov
sub
add
add
mov
add
add
cmp
jne
sub
sub
add
mov
pop
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
sub
push
mov
sub
sub
mov
add
sub
sub
push
mov
mov
cmp
je
mov
mov
test
je
mov
or
test
jne
sub
mov
or
mov
cmp
jne
sub
sub
xor
cmp
jne
mov
mov
sub
cmp
je
mov
mov
or
sub
test
je
sub
add
cmp
jne
mov
sub
mov
sub
cmp
jne
sub
or
push
sub
mov
movl
add
call
or
sub
mov
mov
mov
sub
cmp
jne
mov
mov
cmp
jne
mov
and
sub
add
or
add
cmp
jne
mov
cmp
je
add
add
cmp
je
sub
mov
add
mov
mov
cmp
je
sub
add
sub
sub
mov
add
test
jne
sub
mov
mov
sub
and
add
add
sub
test
jne
add
call
sub
mov
mov
sub
add
and
sub
add
add
cmp
je
and
xor
cmp
je
sub
sub
sub
add
mov
or
add
mov
add
and
and
cmp
je
add
cmp
je
sub
call
mov
mov
cmp
je
mov
add
add
mov
cmp
je
mov
add
cmp
je
sub
mov
mov
sub
cmp
jne
add
cmp
jne
mov
mov
sub
cmp
jne
or
mov
add
and
add
or
cmp
je
cmp
je
mov
test
je
mov
mov
or
cmp
jne
add
mov
add
cmp
je
add
cmp
jne
mov
cmp
jne
sub
add
sub
addl
mov
cmp
jne
mov
cmp
je
add
test
jne
cmp
je
mov
add
add
push
call
add
mov
test
je
sub
cmp
je
add
mov
cmp
jne
mov
cmp
je
sub
mov
add
cmp
je
sub
mov
mov
sub
add
sub
cmp
je
mov
mov
add
test
jne
mov
cmp
je
and
add
cmp
je
sub
mov
cmp
je
add
mov
mov
and
sub
sub
sub
and
add
or
je
test
je
sub
sub
mov
mov
add
cmp
jne
sub
and
mov
sub
mov
sub
cmp
je
test
jne
sub
sub
mov
sub
addl
cmp
jne
mov
sub
cmp
jne
or
lea
and
cmp
je
cmp
je
add
sub
cmp
je
and
mov
mov
sub
cmp
jne
mov
sub
cmp
jne
test
je
cmp
jne
mov
cmp
je
mov
mov
or
add
or
or
sub
and
add
inc
add
cmp
je
and
mov
mov
mov
sub
sub
and
sub
test
je
mov
sub
and
mov
add
mov
sub
cmp
jne
mov
mov
sub
cmp
jne
cmp
jne
mov
cmp
je
mov
mov
sub
sub
or
sub
add
sub
and
mov
mov
sub
sub
xor
sub
add
sub
mov
mov
sub
sub
sub
and
sub
cmp
je
and
or
and
and
mov
cmp
jne
add
mov
add
sub
mov
cmp
jne
mov
sub
add
mov
add
sub
cmp
je
sub
mov
sub
mov
sub
cmp
jne
mov
mov
sub
sub
mov
or
add
sub
sub
add
sub
add
mov
and
mov
mov
add
mov
mov
mov
mov
add
pop
cmp
je
mov
or
pop
add
mov
add
sub
add
add
cmp
je
mov
or
add
mov
cmp
je
cmp
jne
and
sub
cmp
jne
sub
mov
mov
add
add
cmp
je
mov
cmp
jne
mov
and
mov
cmp
jne
cmp
jne
add
sub
and
cmp
je
cmp
jne
sub
mov
add
test
je
and
mov
test
je
cmp
je
mov
sub
mov
cmp
je
xor
add
mov
or
sub
mov
test
jne
mov
add
cmp
je
sub
cmp
jne
sub
add
mov
sub
mov
and
sub
and
cmp
jne
cmp
je
add
pop
mov
cmp
jne
add
mov
mov
add
or
add
add
test
jne
sub
mov
and
and
cmp
jne
mov
add
cmp
jne
cmp
jne
sub
mov
mov
or
and
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
sub
add
add
mov
push
or
push
mov
sub
sub
sub
push
mov
mov
sub
add
cmp
jne
mov
sub
mov
add
or
sub
mov
add
mov
sub
cmp
je
sub
rdtsc
mov
mov
add
sub
mov
add
mov
add
cmp
je
mov
mov
add
add
add
cmp
je
and
mov
cmp
jne
cmp
je
mov
add
and
mov
mov
xor
sub
cmp
jne
cmp
jne
sub
test
je
mov
sub
mov
sub
add
sub
and
and
or
sub
cmp
jne
cmp
jne
mov
test
je
test
je
mov
and
sub
mov
mov
mov
cmp
je
sub
add
cmp
je
test
jne
mov
sub
test
jne
mov
sub
mov
sub
cmp
je
mov
mov
sub
sub
sub
sub
cmp
je
cmp
je
sub
add
cmp
jne
cmp
jne
mov
mov
test
je
or
mov
cmp
je
cmp
je
mov
sub
sub
and
add
sub
mov
cmp
je
add
rdtsc
mov
xor
mov
add
cmp
jne
mov
sub
mov
sub
add
test
jne
mov
or
mov
add
add
cmp
jne
mov
add
mov
add
add
add
add
cmp
je
cmp
je
mov
add
add
mov
or
add
cmp
jne
mov
and
or
mov
add
xor
sub
sub
sub
test
je
cmp
je
or
test
jne
sub
test
jne
test
je
mov
test
jne
mov
mov
cmp
jne
mov
mov
sub
sub
cmp
je
mov
mov
cmp
je
sub
add
mov
cmp
je
mov
mov
sub
cmp
je
sub
cmp
jne
mov
test
jne
cmp
je
cmp
jne
mov
cmp
jne
cmp
jne
sub
sub
test
je
mov
mov
sub
cmp
jne
sub
add
cmp
jne
mov
test
jne
test
je
mov
cmp
jne
add
add
add
mov
mov
add
or
cmp
jne
add
mov
mov
add
cmp
jne
mov
mov
cmp
je
add
mov
and
sub
mov
cmp
jne
cmp
jne
add
mov
cmp
je
cmp
je
mov
add
mov
sub
test
je
cmp
je
cmp
je
sub
mov
add
add
mov
add
test
je
mov
sub
mov
sub
add
cmp
je
xor
mov
mov
add
sub
add
add
sub
add
pop
cmp
je
mov
cmp
je
mov
mov
test
jne
sub
mov
sub
sub
mov
sub
xor
cmp
je
cmp
je
add
mov
sub
add
add
mov
add
cmp
je
add
mov
sub
and
cmp
jne
mov
test
je
add
or
and
add
mov
sub
add
sub
or
mov
cmp
je
mov
sub
test
jne
mov
mov
mov
sub
xor
cmp
jne
sub
sub
test
jne
mov
cmp
jne
cmp
jne
mov
mov
sub
test
jne
mov
cmp
je
cmp
je
add
and
sub
sub
cmp
je
mov
add
cmp
jne
mov
and
mov
cmp
je
or
sub
cmp
je
cmp
je
or
and
mov
sub
cmp
je
add
mov
mov
add
cmp
jne
mov
add
cmp
je
mov
sub
cmp
jne
add
add
add
mov
cmp
jne
and
cmp
je
mov
add
add
sub
add
cmp
jne
test
jne
add
mov
mov
cmp
jne
cmp
jne
sub
or
mov
mov
cmp
jne
mov
add
add
sub
cmp
je
add
mov
sub
mov
and
test
jne
cmp
je
mov
cmp
jne
sub
and
pop
mov
mov
add
sub
or
and
add
pop
sub
mov
cmp
jne
sub
add
mov
sub
cmp
jne
add
mov
and
mov
sub
and
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
and
add
sub
mov
sub
add
xor
push
add
mov
sub
mov
add
sub
and
sub
and
add
push
and
add
add
mov
mov
add
test
je
mov
mov
sub
add
sub
add
or
sub
sub
cmp
jne
mov
mov
and
add
or
push
mov
xor
or
mov
mov
sub
sub
xor
mov
sub
cmp
je
and
cmp
je
mov
mov
cmp
jne
cmp
jne
mov
sub
cmp
je
mov
mov
add
add
cmp
jne
mov
mov
sub
and
cmp
je
sub
mov
test
je
mov
add
add
add
cmp
je
mov
mov
cmp
je
sub
sub
cmp
jne
test
je
sub
test
je
cmp
jne
mov
and
mov
add
sub
sub
decl
or
sub
add
add
mov
mov
cmp
je
cmp
je
sub
add
mov
or
sub
mov
cmp
jne
sub
xor
cmp
je
test
je
add
add
xorl
add
add
mov
sub
mov
xor
mov
add
add
jmp
mov
mov
mov
mov
add
cmp
je
mov
mov
add
add
add
cmp
je
mov
mov
sub
add
add
add
add
pop
sub
pop
sub
mov
add
mov
sub
cmp
jne
sub
and
mov
mov
test
jne
cmp
jne
test
je
add
cmp
je
cmp
je
mov
sub
mov
sub
cmp
jne
add
mov
or
mov
add
sub
sub
cmp
je
sub
mov
sub
sub
cmp
jne
sub
mov
sub
add
cmp
je
mov
sub
test
jne
mov
and
sub
or
mov
mov
add
add
cmp
je
add
pop
cmp
jne
mov
and
sub
and
mov
add
sub
cmp
je
mov
sub
cmp
jne
mov
cmp
je
add
sub
add
sub
mov
add
sub
sub
and
sub
cmp
jne
mov
test
je
mov
sub
mov
or
add
sub
cmp
jne
xor
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
sub
add
push
mov
sub
or
mov
add
mov
cmp
je
mov
push
add
push
or
mov
add
add
mov
mov
add
sub
mov
mov
sub
add
add
sub
and
add
push
mov
sub
mov
add
mov
sub
mov
and
add
cmp
je
sub
add
mov
mov
sub
cmp
jne
cmp
jne
cmp
jne
sub
mov
or
mov
add
sub
push
mov
cmp
jne
sub
and
mov
mov
and
cmp
je
add
and
mov
cmp
jne
mov
sub
mov
cmp
jne
and
cmp
je
test
je
add
and
mov
mov
sub
sub
cmp
jne
or
sub
sub
test
je
mov
sub
sub
cmp
jne
mov
and
mov
sub
add
cmp
je
sub
sub
push
mov
mov
sub
cmp
jne
cmp
je
add
mov
mov
sub
and
sub
cmp
jne
add
and
sub
mov
mov
sub
add
or
add
or
add
mov
push
cmp
je
and
mov
sub
or
sub
mov
sub
add
xor
mov
and
mov
mov
add
add
and
sub
sub
mov
test
je
sub
mov
add
mov
sub
add
or
add
sub
add
cmp
je
test
je
mov
mov
add
and
add
sub
and
call
add
or
and
mov
mov
add
mov
add
add
sub
mov
sub
mov
or
or
mov
sub
mov
add
mov
or
mov
sub
add
sub
add
sub
test
jne
mov
mov
cmp
je
cmp
je
cmp
je
sub
mov
mov
cmp
je
add
and
add
cmp
jne
add
and
mov
mov
sub
sub
cmp
jne
mov
cmp
jne
sub
cmp
jne
sub
mov
cmp
jne
mov
mov
cmp
jne
sub
add
test
je
and
add
cmp
je
mov
sub
add
cmp
je
mov
mov
sub
and
mov
add
cmp
jne
sub
mov
mov
sub
add
cmp
jne
cmp
je
and
sub
sub
mov
sub
mov
cmp
jne
cmp
jne
sub
mov
mov
add
add
mov
mov
and
and
sub
mov
mov
sub
xor
and
mov
sub
mov
mov
add
test
je
add
add
or
sub
add
mov
mov
add
or
or
je
sub
repnz
mov
test
jne
or
add
sub
cmp
je
mov
mov
sub
sub
sub
cmp
jne
add
mov
mov
add
cmp
je
sub
addl
mov
jmp
add
mov
add
sub
add
mov
or
sub
and
add
add
sub
cmp
jne
cmp
je
mov
mov
sub
add
and
sub
and
test
jne
mov
add
sub
sub
cmp
jne
mov
mov
cmp
je
mov
sub
mov
and
cmp
jne
mov
mov
sub
add
add
cmp
jne
cmp
je
sub
sub
cmp
jne
test
jne
mov
or
sub
mov
or
cmp
je
add
mov
sub
sub
xor
pop
mov
cmp
jne
cmp
je
sub
sub
pop
add
pop
add
add
mov
sub
sub
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
mov
push
mov
mov
add
add
sub
sub
push
add
push
sub
cmp
je
mov
mov
add
add
sub
or
and
add
cmp
jne
xor
mov
mov
sub
sub
and
and
and
add
add
mov
xor
mov
mov
cmp
je
mov
mov
cmp
je
mov
or
sub
mov
and
cmp
jne
mov
sub
mov
cmp
je
and
sub
sub
cmp
je
mov
cmp
je
mov
mov
cmp
jne
sub
sub
mov
mov
add
and
add
cmp
jne
and
sub
add
pop
mov
add
cmp
je
add
cmp
jne
add
pop
sub
cmp
je
cmp
jne
add
cmp
jne
mov
pop
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
add
add
push
add
and
add
sub
sub
push
sub
sub
mov
mov
add
or
sub
and
or
mov
cmp
je
add
mov
mov
sub
add
mov
add
sub
cmp
je
mov
mov
add
add
or
add
pop
mov
mov
sub
sub
add
and
sub
cmp
jne
mov
mov
cmp
jne
mov
mov
sub
sub
add
sub
and
pop
cmp
je
add
pop
or
add
mov
and
sub
mov
add
cmp
jne
sub
sub
mov
mov
or
sub
sub
test
je
mov
add
mov
add
or
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
add
test
je
add
push
cmp
je
mov
add
push
sub
cmp
jne
mov
mov
mov
add
mov
add
and
test
je
add
cmp
je
sub
add
sub
mov
mov
add
test
je
and
add
mov
or
cmp
jne
cmp
je
cmp
jne
mov
cmp
je
add
sub
sub
pop
cmp
jne
mov
add
mov
sub
add
sub
add
pop
mov
xor
pop
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
xor
push
and
mov
add
cmp
jne
sub
mov
mov
mov
sub
cmp
je
sub
add
add
sub
and
sub
add
pop
mov
mov
add
cmp
jne
add
cmp
je
test
jne
and
or
cmp
jne
cmp
je
sub
mov
mov
add
cmp
je
mov
and
mov
or
add
add
add
cmp
je
cmp
jne
sub
cmp
je
mov
mov
or
cmp
je
add
mov
sub
sub
cmp
jne
cmp
je
mov
mov
add
cmp
jne
add
mov
mov
cmp
je
sub
mov
cmp
je
mov
sub
mov
add
mov
sub
add
cmp
je
and
sub
mov
mov
sub
cmp
je
mov
mov
add
or
add
and
cmp
je
cmp
je
mov
add
or
mov
add
cmp
je
mov
sub
cmp
jne
test
jne
mov
or
mov
cmp
jne
cmp
jne
add
and
sub
mov
or
mov
or
add
sub
sub
sub
add
add
pop
mov
cmp
je
add
mov
sub
test
jne
mov
cmp
je
sub
mov
sub
mov
add
add
test
jne
cmp
jne
mov
mov
add
mov
sub
add
pop
cmp
jne
cmp
jne
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
and
mov
push
mov
add
add
push
add
mov
push
mov
mov
sub
and
add
mov
add
mov
cmp
jne
or
mov
sub
sub
mov
cmp
je
and
cmp
jne
add
mov
mov
add
add
and
sub
add
add
add
cmp
jne
mov
or
mov
sub
mov
and
cmp
je
cmp
jne
mov
mov
add
add
add
or
xor
mov
sub
add
mov
sub
add
add
and
and
sub
mov
mov
and
and
cmp
jne
mov
cmp
je
test
je
sub
mov
mov
add
add
add
and
cmp
je
xor
cmp
je
cmp
jne
or
mov
xor
mov
cmp
je
and
cmp
je
cmp
je
mov
cmp
je
mov
mov
add
cmp
jne
mov
sub
mov
cmp
je
mov
add
sub
sub
mov
add
sub
or
sub
cmp
je
mov
mov
or
pop
mov
mov
cmp
je
and
sub
add
mov
mov
pop
add
xor
mov
mov
add
and
add
add
add
sub
mov
add
sub
sub
sub
and
and
sub
pop
add
cmp
jne
mov
add
sub
and
mov
sub
cmp
jne
and
sub
test
je
mov
cmp
je
mov
mov
add
add
test
je
sub
add
mov
mov
mov
add
cmp
jne
add
cmp
je
sub
mov
cmp
je
mov
and
sub
add
cmp
jne
and
test
jne
mov
cmp
jne
add
mov
add
sub
cmp
jne
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
or
or
sub
and
push
mov
add
mov
xor
or
add
add
sub
sub
mov
push
add
push
mov
mov
and
sub
sub
add
cmp
je
cmp
je
mov
and
mov
mov
cmp
jne
mov
mov
sub
mov
sub
add
add
or
mov
add
cmp
jne
xor
mov
mov
sub
mov
add
add
and
mov
add
sub
cmp
je
test
je
mov
add
cmp
jne
test
jne
cmp
je
mov
mov
add
add
sub
cmp
je
add
mov
mov
add
cmp
jne
or
add
cmp
jne
add
add
mov
mov
or
sub
cmp
jne
xor
mov
sub
sub
mov
sub
or
or
cmp
jne
mov
mov
test
jne
add
add
xor
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
mov
add
add
sub
add
sub
cmp
je
mov
add
sub
xor
mov
cmp
jne
mov
sub
sub
sub
mov
cmp
je
add
sub
and
sub
pop
mov
mov
mov
cmp
je
mov
mov
and
add
add
add
add
cmp
je
cmp
je
sub
cmp
jne
add
pop
mov
mov
sub
add
pop
mov
and
sub
and
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
and
and
mov
sub
add
push
add
and
mov
add
mov
sub
push
mov
mov
add
test
jne
mov
add
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
sub
cmp
jne
mov
sub
add
mov
test
jne
sub
add
add
mov
mov
sub
sub
cmp
je
mov
mov
and
cmp
jne
sub
cmp
jne
cmp
je
add
or
mov
xor
mov
add
or
cmp
jne
mov
sub
sub
push
mov
mov
add
sub
and
sub
sub
sub
cmp
je
mov
cmp
je
cmp
je
mov
mov
add
cmp
jne
mov
cmp
je
cmp
jne
mov
sub
mov
cmp
jne
cmp
je
or
and
xor
add
xor
mov
or
cmp
jne
add
add
mov
mov
and
cmp
je
xor
cmp
jne
mov
or
test
je
or
and
cmp
jne
mov
and
mov
add
add
cmp
jne
sub
add
cmp
je
sub
add
mov
mov
cmp
jne
cmp
jne
sub
and
add
mov
add
sub
sub
cmp
je
cmp
je
add
mov
or
add
mov
cmp
je
test
jne
xor
mov
sub
mov
sub
cmp
jne
mov
sub
mov
mov
mov
sub
cmp
jne
sub
cmp
jne
and
or
add
sub
add
mov
mov
mov
or
add
or
sub
add
cmp
jne
mov
cmp
jne
sub
mov
add
xor
pop
mov
mov
add
or
add
sub
add
pop
add
pop
mov
cmp
jne
add
sub
mov
cmp
jne
mov
cmp
je
add
and
or
add
mov
sub
add
sub
sub
or
cmp
jne
add
mov
cmp
jne
cmp
je
test
jne
mov
or
cmp
je
mov
cmp
jne
cmp
je
and
or
mov
sub
or
add
add
and
cmp
jne
cmp
je
mov
cmp
je
or
test
je
cmp
jne
sub
mov
cmp
jne
sub
mov
cmp
jne
cmp
jne
add
mov
sub
mov
mov
add
and
sub
xor
add
cmp
je
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
add
cmp
je
add
push
test
je
add
push
sub
add
cmp
je
mov
mov
cmp
je
cmp
jne
or
mov
mov
mov
mov
or
cmp
je
sub
add
add
mov
add
mov
cmp
jne
or
mov
add
mov
and
and
cmp
je
add
sub
cmp
jne
add
add
mov
add
mov
add
sub
or
add
cmp
je
mov
add
or
mov
cmp
je
sub
mov
cmp
je
mov
cmp
je
sub
add
mov
mov
test
jne
mov
cmp
jne
cmp
je
add
and
add
mov
sub
cmp
jne
cmp
jne
mov
or
add
and
mov
add
add
add
add
sub
pop
mov
test
jne
sub
cmp
je
mov
mov
cmp
je
add
cmp
je
mov
mov
sub
cmp
jne
and
and
test
jne
cmp
je
cmp
je
sub
or
sub
mov
test
jne
or
and
mov
and
mov
sub
sub
and
and
cmp
jne
mov
mov
mov
xor
add
cmp
je
mov
mov
add
and
and
pop
add
mov
sub
sub
pop
add
add
sub
test
je
sub
mov
sub
add
cmp
je
mov
cmp
je
add
sub
sub
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
sub
mov
sub
push
mov
sub
sub
mov
add
sub
push
and
mov
mov
add
and
add
push
mov
cmp
je
cmp
jne
mov
sub
mov
sub
sub
mov
and
test
je
sub
sub
sub
cmp
je
cmp
jne
mov
mov
or
cmp
jne
add
mov
and
mov
sub
add
cmp
jne
cmp
jne
and
mov
or
cmp
jne
cmp
jne
mov
mov
add
cmp
je
add
or
sub
mov
mov
sub
cmp
je
and
sub
add
mov
mov
add
add
test
je
mov
mov
sub
and
test
je
mov
cmp
je
test
je
or
cmp
je
xor
mov
mov
and
add
sub
or
sub
add
or
sub
and
cmp
je
cmp
jne
mov
sub
mov
add
add
and
add
or
add
sub
mov
cmp
je
test
je
and
mov
add
pop
mov
mov
add
add
mov
pop
add
pop
cmp
jne
sub
mov
mov
cmp
jne
cmp
je
mov
cmp
jne
add
cmp
je
mov
xor
mov
add
cmp
je
mov
sub
sub
or
add
add
leave
ret
pop
jge
sbb
negl
out
mov
popa
push
mov
pop
sbb
pop
inc
push
inc
cmp
mov
dec
and
cmp
cmp
and
lret
pop
pop
sbb
mov
popa
adc
cmp
loop
sbb
sub
dec
and
int3
jmp
fldenv
data16
inc
mov
push
adc
push
cli
jno
mov
pop
mov
xor
out
andb
out
ljmp
loopne
and
push
in
mov
mov
or
mov
xchg
adc
sbb
jnp
scas
scas
imul
mov
pop
add
fmuls
xor
cld
ss
ret
or
fists
aam
mov
xor
xchg
inc
xchg
mov
push
sub
or
subb
repz
xchg
adc
adc
mov
xor
shrb
add
xor
push
inc
sub
scas
lret
or
or
jmp
push
repz
dec
push
hlt
jae
cmpsl
inc
dec
popa
loop
mov
sub
sahf
push
pop
outsl
mov
andb
lods
push
icebp
idivb
out
ja
inc
push
and
cmpsl
int3
xlat
insl
in
test
js
pop
jge
fwait
popa
out
out
adc
adc
mov
sub
jmp
aam
sarl
push
test
sbb
out
in
adc
inc
loope
jle
ds
mov
mov
rcll
popf
sbb
andl
xor
movups
std
push
mov
push
cmpsl
and
push
dec
aaa
mov
mov
shr
inc
notb
dec
adc
dec
push
popl
pusha
inc
stc
sub
les
cmc
icebp
push
add
mov
icebp
sub
lods
inc
pop
and
xchg
sub
mov
shlb
mov
sub
arpl
push
js
xor
xchg
pop
dec
int
sbb
clc
mov
cmp
dec
je
enter
cmp
test
leave
mov
mov
in
xchg
out
lret
push
movsl
rcll
xor
mov
sarl
mov
add
rclb
sub
pop
add
ds
out
and
inc
movsl
jne
mov
je
fs
sbb
out
repz
test
lea
mov
lods
xchg
or
pop
addb
es
and
scas
out
outsb
lods
jle
cmp
cmp
dec
adc
test
and
cli
mov
lret
bound
xor
jb
cmc
mov
std
push
or
iret
das
mov
stc
outsb
sub
pop
xor
fdivr
dec
push
sub
and
cmp
les
jp
and
loop
push
das
movsb
and
mov
daa
dec
mov
std
mov
lock
shlb
sbb
lods
or
xchg
cwtl
fcmovu
pop
xor
cmpsb
cmpsl
mov
shll
rorl
shll
pusha
fwait
adc
lods
adc
mov
mov
pop
in
cmpsb
mov
xorl
in
xchg
mov
pop
mov
mov
ja
test
and
aaa
daa
pop
and
iret
push
fcoms
pop
mov
mov
adc
test
enter
sbbl
pop
mov
lea
popa
stos
mov
cli
sahf
sbb
lahf
push
mov
fnstcw
inc
cli
insb
cwtl
dec
pop
int3
or
data16
pop
jns
into
outsb
jg
add
pop
pop
mov
mov
call
nop
scas
dec
fdivrp
sbbl
jge
xchg
push
and
push
xchg
in
xchg
xlat
add
pop
and
or
inc
out
gs
call
mov
mov
adc
mov
js
pop
mov
fistpll
jg
cltd
add
lock
popf
pusha
cmp
xchg
aad
arpl
fadd
fdivrs
sub
inc
sub
mov
pop
test
dec
xchg
mov
lret
mov
cmp
call
and
adc
mov
xor
sub
ffreep
jbe
out
xchg
mov
mov
push
add
mov
mov
add
fsubp
test
jae
rolb
cmp
sub
add
out
jne
pusha
lock
ret
push
push
cltd
xor
es
arpl
std
outsb
inc
lret
xor
mov
dec
mov
roll
pop
inc
cld
cwtl
cli
push
dec
lods
sub
jmp
out
mov
cmp
arpl
pusha
aas
jne
sub
outsb
jge
push
xchg
pop
jb
mov
sub
dec
loope
push
sbb
sbb
inc
mov
dec
mov
aas
fstpl
pusha
sub
test
shlb
in
pusha
enter
xchg
andl
ja
loope
aas
xchg
lds
aam
xor
in
sbb
and
aas
popf
push
arpl
mov
jp
out
test
pop
xlat
int3
add
mov
pusha
dec
sub
xchg
jg
retw
pusha
movb
roll
mov
sub
mov
mov
test
mov
int
lret
dec
pop
in
dec
mov
jb,pt
popa
xor
icebp
rorl
lret
inc
loop
xor
pusha
cli
cmpsb
pop
test
outsb
dec
in
adc
frstor
out
fs
ss
push
mov
jae
adc
cltd
scas
stos
xor
mov
dec
push
sbb
jmp
dec
mov
pop
stos
in
push
in
addl
lahf
or
pop
mov
xchg
dec
dec
icebp
mov
fwait
outsl
gs
or
ljmp
arpl
pusha
pop
test
shll
xchg
out
lock
mov
or
mov
out
pop
dec
mov
lods
iret
cltd
clc
add
imul
scas
cwtl
inc
movsb
aaa
pop
xchg
pop
mov
das
sar
popa
popa
xchg
loop
lods
in
loopne
leave
out
aam
jle
aas
mov
jp
xor
and
std
ret
ret
sub
repz
cmp
mov
jg
sbb
xor
ds
adc
test
fmul
jp
add
xchg
jbe
mov
xchg
cld
xchg
cmp
sub
in
movsb
mov
and
or
out
mov
dec
imul
fldenv
lods
xchg
in
or
xchg
std
test
pop
bound
xchg
sbb
cmp
or
xor
dec
pop
or
sbb
cmpl
mov
sbb
into
mov
movsb
pusha
and
lock
cmp
jl
loop
mov
cmp
inc
push
adc
push
pusha
out
loope
iret
aas
cmp
push
sarl
daa
cmp
daa
out
pop
xor
lret
mov
mov
andb
and
cmpsb
in
pop
add
xorl
pushf
ljmp
daa
int3
repnz
ficompl
outsb
add
xchg
push
lahf
inc
mov
mov
ret
sub
dec
sbbb
sbb
pusha
adc
lcall
jle
iret
mov
fnstcw
fadds
mov
or
bound
out
jno
push
ljmp
fnsave
ret
stos
add
pop
add
adc
lret
notb
movsl
pop
dec
lods
sub
pusha
mov
test
psubb
mov
gs
xor
andl
xorps
lret
cmc
lods
jmp
cltd
mov
xchg
push
mov
and
sub
dec
repz
dec
mov
and
out
pusha
ret
mov
movsb
in
ficoms
xchg
addr16
xchg
fcmovnb
xchg
sti
clc
add
mov
ljmp
clc
lods
out
inc
ja
test
les
sahf
rclb
js
std
or
jbe
stos
jne
mov
clc
orl
lods
mov
ljmp
xor
mov
dec
or
ds
sub
jmp
jge
scas
cmp
sbb
loopne
sti
mov
cld
adc
pop
cltd
pusha
xchg
xor
dec
out
adc
out
mov
out
enter
lcall
mov
dec
fistpll
cmp
dec
ds
push
outsl
lock
scas
and
and
pop
cmpsl
inc
or
pop
cmp
in
mov
lret
out
push
lret
and
iret
aaa
pop
insb
mov
stos
mov
jmp
decb
jae
lods
je
lock
loope
and
xchg
pushw
mov
popa
fnstcw
inc
out
je
ss
mov
ds
dec
pop
mov
mov
cmc
jge
mov
xor
bound
enter
fldl
loopne
or
inc
popa
pop
loope
sbb
pop
enter
daa
cmp
mov
mov
mov
cmp
popa
out
jle
pushf
sbb
pusha
pop
push
sub
pop
fs
pop
inc
test
pop
dec
dec
and
in
cmpsl
jle
pop
movsb
or
cmpsb
out
icebp
sub
lock
shrb
push
popa
cmp
or
add
mov
testl
mov
mov
xchg
or
xchg
aam
inc
inc
out
pusha
push
push
out
or
mov
popf
insb
in
in
pop
lret
das
push
loope
lods
divl
mov
xor
in
aas
in
inc
mov
xchg
mov
push
adc
pop
jbe
popa
dec
xor
mov
cs
imul
mov
cmp
arpl
ss
dec
jb,pn
mov
xor
mov
jno
push
pop
int
mov
mov
push
repnz
jae
out
sub
test
hlt
mov
push
dec
stos
adc
mov
xchg
xor
stos
pop
push
outsb
jnp
jmp
fidivl
xchg
out
push
cmpsl
mov
test
dec
out
xchg
push
ret
out
xor
jle
mov
push
jle
mov
imul
shll
shl
in
and
iret
add
aad
jmp
enter
pop
dec
pop
into
push
jae
nop
repnz
pop
dec
out
lock
out
movsl
dec
cmp
movsb
sbb
push
or
pop
pop
loop
loope
sub
and
xchg
outsb
nop
cli
lret
lcall
mov
adc
push
stos
pop
loop
sub
cmp
push
push
add
and
cli
repz
jle
jl
ljmp
fimuls
scas
mov
add
sub
sbb
xchg
xor
jae
and
test
jnp
pop
mov
pusha
loope
adc
dec
imul
cs
ss
sbb
js
jns
fidivrs
and
inc
add
mov
xchg
sbb
out
mov
bound
mov
xlat
mov
sbb
cltd
es
mov
inc
es
adc
sahf
icebp
mov
push
adc
ds
sub
mov
repnz
outsb
idivl
jne
ss
mov
cmp
faddl
mov
lahf
sub
jb
out
hlt
fs
rcrl
icebp
or
mov
mov
gs
inc
stc
mov
mov
stos
sub
test
leave
fmuls
jmp
adc
rolb
mov
fcomps
lods
pusha
or
adc
mov
fs
sub
xor
cli
rolb
repz
addb
push
outsb
lock
mov
push
xor
pop
push
jno
sbb
or
in
inc
das
dec
sbb
jg
stos
cmc
adc
and
mov
jp
mov
mov
insl
mov
aad
out
inc
pop
lcall
cmp
mov
imul
and
lahf
jmp
mov
xchg
sti
xchg
xor
or
push
out
mov
ds
xchg
cs
lock
stos
pop
jae
or
mov
push
or
sbb
xchg
fidivl
sbb
pop
lea
pop
in
inc
cs
loope
jnp
sbbl
sub
mov
mov
std
in
or
cld
arpl
or
imul
mov
mov
jl
lcall
popf
cmp
xchg
inc
cmp
test
push
xchg
out
faddp
xchg
outsl
ja
xor
mov
idivb
loop
push
mov
cmp
lds
fisubs
jle
pop
out
cmpl
in
in
jo
pop
test
pop
xorl
imul
push
nop
imul
jbe
div
pop
xchg
jne
shrb
stc
out
pop
and
mov
scas
xor
xchg
inc
in
mov
test
sbb
outsb
jne
xor
out
cld
nop
popl
test
cmp
mov
push
mov
scas
jmp
push
push
sti
pop
dec
outsb
test
outsl
sub
test
mov
push
adc
sub
push
cs
pop
jnp
hlt
mov
insl
rorl
enter
pop
stos
imull
add
pop
inc
imull
arpl
mov
pop
out
or
hlt
arpl
ret
mov
sbb
sbbb
cmc
mov
cmp
invd
inc
lods
jmp
or
or
xchg
into
outsb
mov
inc
scas
iret
cld
add
call
int
fisttpll
movsb
out
jmp
data16
sub
and
sti
adc
pop
pop
test
sub
mov
aaa
data16
mov
fisttpll
sub
daa
xchg
and
pop
add
or
xchg
sub
xchg
xchg
sub
pop
or
lea
sub
mov
lock
into
push
or
lods
pop
mov
insb
adc
outsb
andl
mov
mov
mov
mov
lods
fisubrl
push
add
js,pn
ret
pop
cli
int3
xchg
xchg
xor
mov
jmp
ficompl
jno
ds
ds
pop
sbb
and
jbe
cmp
or
pop
pop
fstpt
movsb
mov
sbb
pop
loop
push
adc
push
imul
mov
testb
shll
ret
xchg
in
push
push
xchg
hlt
mov
mov
stos
in
cmp
xor
cmp
dec
call
sbb
iret
test
xchg
out
push
pop
dec
xor
fstpt
cmp
decl
fsts
mov
dec
iret
cmp
fiaddl
jae
sub
inc
xor
stos
dec
idivl
add
mov
out
sub
hlt
mov
xor
sahf
cmp
xor
test
or
xchg
mov
pop
loope
aas
fbld
cld
pusha
jbe
ss
test
nop
ficompl
add
jle
add
insb
pop
push
push
mov
shrd
inc
pop
fnsave
sub
das
mov
jmp
loopne
add
or
xor
dec
repz
insl
dec
xor
cmp
popa
sahf
inc
sub
out
or
mov
lock
xlat
je
pop
jp
dec
ret
pop
or
div
xor
pusha
cmp
mov
cwtl
jmp
repnz
xchg
pusha
rorb
mov
xor
cwtl
out
mov
mov
sahf
sub
jle
jecxz
ds
out
xor
aam
mov
mov
pop
pop
push
xchg
in
ss
or
mov
sbb
xor
int3
outsb
out
shr
movsb
pop
push
shlb
mov
pop
sbb
movl
mov
dec
cmpsl
fstpt
inc
mov
int3
in
xchg
cmp
ret
das
out
test
push
pusha
jns
outsl
cmp
dec
add
dec
das
pop
addb
cli
push
movsb
adc
sbb
test
xor
leave
daa
mov
test
lods
jbe
pop
std
dec
mov
mov
ss
pop
adc
mov
lock
stos
cld
outsl
xchg
inc
jo
in
leave
pusha
lods
les
sbbb
jmp
sub
pusha
ret
loopne
out
fs
mov
add
add
xchg
mov
fistpl
dec
adc
pop
pop
cmp
pop
cmp
fisubrl
dec
movsl
jle
jb
lahf
adc
in
rclb
xchg
shll
cmp
js
xchg
mov
ss
jne
pop
clc
push
movsb
jns
andl
ja
ja
lahf
or
cmp
pop
outsl
fmuls
add
adc
es
xor
jne
push
cmp
inc
cli
pop
es
add
popa
outsb
jno
jne
inc
jmp
and
in
insl
and
pusha
xchg
cs
pop
fucomip
pop
insb
shr
add
faddl
push
hlt
addr16
mov
rolb
jecxz
imul
sbb
mov
mov
add
data16
push
xchg
xor
push
out
mov
mov
loopne
ljmp
pusha
fildl
andl
lret
add
fs
mov
insl
push
ds
aad
mov
and
into
pop
nop
jmp
jecxz
adc
jecxz
popa
mov
das
mov
ja
or
and
mov
mov
sti
xlat
cltd
out
sub
ror
cld
sub
inc
mov
jns
loopne
ds
pop
gs
shlb
mov
call
mulb
test
gs
inc
cltd
mov
cmp
outsb
push
popf
cmc
jns
pusha
ficoms
mov
insb
roll
mov
and
add
lahf
pusha
and
mov
and
loope
xlat
sub
inc
push
mov
push
xor
pop
inc
xchg
adc
in
cmp
pusha
pop
push
iret
fs
sbb
out
push
push
sub
jns
test
repz
and
out
xor
adc
cmp
xchg
imul
mov
nop
jmp
pop
pop
ja
dec
add
out
cmp
xlat
mov
pop
jno
iret
jg
jne
pop
adc
icebp
mulb
xchg
push
mov
stc
lret
scas
jg
in
push
xor
add
or
inc
jg
repnz
jl
decl
ljmp
ljmp
jg
cmp
pusha
sub
mov
xor
idivb
or
dec
popa
hlt
imul
out
adc
mov
xor
xchg
inc
xorb
xchg
cmp
loope
popf
add
inc
lods
add
lret
imul
xchg
stos
or
outsb
add
nop
sub
inc
cmpsb
out
shlb
stos
int3
into
xchg
mov
push
lock
mov
daa
ss
mov
je
pop
aas
aam
lock
daa
cmp
out
ja
cmp
or
cmp
add
loop
pop
xchg
adc
mov
ja
daa
jecxz
inc
cld
nop
shl
mov
mov
xchg
std
sahf
or
ret
jb
mov
sar
filds
call
sub
sub
and
xchg
pop
aas
cmp
xchg
or
push
mov
jbe
dec
jp
and
je
and
mov
clc
movsl
loope
pop
sahf
and
or
mov
xor
or
push
es
cmpl
les
xor
inc
fcomps
add
mov
cs
scas
movsb
dec
xchg
out
pusha
push
je
add
adc
out
notl
jnp
pop
enter
pop
dec
lock
rcll
xchg
hlt
mov
dec
mov
in
pop
or
dec
call
pusha
pop
mov
jg
out
push
add
lea
ljmp
xor
push
and
fs
call
imul
mov
std
add
popf
gs
cld
mov
inc
mov
lock
sub
scas
sbb
mov
dec
js
jge
mov
stos
call
popa
jb
dec
mov
out
sub
arpl
mov
xchg
ljmp
cmc
xchg
mov
rcll
out
movsl
and
cmpsb
dec
popa
sbb
popa
fs
mov
lea
sub
jecxz
xor
xor
movsb
jnp
dec
cltd
mov
sahf
imul
out
mov
popf
mov
loope
adcl
jg
inc
stos
aaa
movsb
out
adc
jle
xor
je
dec
in
push
dec
jl
out
lret
pop
push
cltd
pop
xor
out
dec
cmpsb
sahf
or
pop
pop
pop
lods
leave
daa
addr16
push
add
dec
scas
inc
xchg
mov
lock
aad
dec
scas
popf
cld
out
xor
mov
mov
inc
mov
ret
adc
pop
pop
mov
adc
popa
popf
inc
jecxz
xchg
cmp
icebp
into
aas
add
jb
sub
ret
cmpsl
lods
pop
cli
jno
out
outsb
sbb
std
inc
ret
mov
ljmp
inc
filds
pusha
sub
lods
adc
pushf
mov
imulb
inc
push
ret
pusha
pop
out
pop
insb
lea
shr
movsb
xor
imul
pop
xor
dec
ljmp
rcr
mov
cltd
xchg
inc
mov
mov
test
test
lcall
scas
sub
xchg
in
stos
pop
mov
jnp
in
enter
fistpll
jecxz
sbb
push
out
pop
dec
mov
fstpl
push
mov
and
gs
sahf
sub
insl
sub
das
into
sti
sub
xchg
xchg
out
push
xchg
add
subl
stc
jo
adc
mov
inc
mov
aad
xlat
adc
test
pop
ret
shll
cmpsb
rcrl
pop
les
aas
popa
add
lret
jg
out
mov
cwtl
cmp
xchg
ds
adc
lcall
out
pusha
xchg
in
cmp
aam
lock
ja
in
cltd
mov
pusha
lahf
cli
cmp
shr
sub
fs
outsb
sbb
pop
mov
aad
jne
pop
mov
xchg
fs
pop
or
sahf
lahf
faddl
inc
daa
fimuls
jnp
jecxz
push
mov
inc
out
outsb
and
lsl
popa
pop
mov
fucomi
and
xchg
sbbl
cmp
bound
lahf
frstor
mov
fistps
inc
es
push
push
xchg
gs
fmuls
in
f2xm1
mov
fnstsw
loope
and
pop
jecxz
sbb
xor
xchg
mov
and
imul
inc
mov
pop
sbbl
push
popa
adc
sbb
filds
jne
mov
mov
inc
les
cmpsl
imul
cwtl
clc
sub
xchg
test
sahf
int3
ds
xchg
into
cld
xor
mov
mov
cmp
mov
icebp
mov
pusha
fimuls
mov
movsb
faddl
push
cltd
xor
dec
out
jbe
test
arpl
imul
nop
pop
jno
ret
jl
mov
sbb
stc
imul
dec
add
js
imul
pop
cli
pop
mov
nop
cmpsb
xchg
repnz
mov
cld
push
mov
mov
xor
movsb
pusha
adc
cmp
out
fisubl
cmp
nop
popf
mov
icebp
imul
js
popaw
jg
loopne
inc
andl
fwait
subb
or
ret
cmp
jecxz
pushf
add
lcall
inc
rcrl
loop
mov
xchg
in
push
xor
mov
pop
adc
divb
mov
mov
pusha
aaa
in
sub
mov
test
pushf
popa
xchg
or
fistpll
xor
jns
pusha
call
subb
mov
fidivs
pop
jl
int3
pop
out
idivb
outsb
inc
add
inc
sub
xchg
add
pusha
adc
jmp
adc
gs
push
movsl
or
pop
mov
insl
icebp
es
test
popa
loopne
and
in
mov
lcall
push
pop
jno
add
loope
addr16
stos
adc
xchg
icebp
scas
sub
jg
or
push
ljmp
inc
mov
add
cs
insl
aam
arpl
hlt
in
or
cmp
shrl
push
xchg
iret
out
mov
clc
movsl
out
mov
cmp
outsl
dec
int
repnz
or
pop
fwait
xchg
shrb
cld
and
ds
mov
sub
inc
repz
xor
mov
mov
add
mov
add
mov
cmpb
and
outsb
cwtl
notb
sub
sti
jno
pop
js
pop
iret
lret
fidivl
out
push
cs
mov
cmp
and
sbb
fdivs
jne
pop
out
bound
icebp
and
sbb
cmpsb
mov
mov
fst
imul
mov
cs
clc
jle
sbb
mov
inc
xchg
pusha
enter
push
add
lock
add
lcall
add
push
flds
sbb
cltd
fiadds
stos
gs
mov
hlt
out
cmp
sbb
mov
notb
fcompl
jbe
sti
adcb
mov
jno
jne
aad
mov
cli
loopne
mov
add
mov
push
inc
ret
in
out
fidivs
icebp
hlt
gs
fsubrl
mov
and
mov
popa
pop
push
test
xor
jae
out
jo,pn
xchg
out
call
gs
arpl
cmpsb
out
xchg
leave
subl
add
jmp
ja
out
mov
call
in
inc
idivl
daa
leave
sar
xchg
mov
pop
cmp
add
pop
jo
fmull
sub
or
pop
xchg
cmp
imul
xlat
inc
jp
push
cli
xor
mov
stc
imul
js
out
pop
cmp
test
add
push
adc
push
icebp
out
pop
sub
jns
pop
mov
mov
dec
mov
cld
pop
repnz
mov
adc
jns
shr
inc
arpl
xorl
insl
sahf
xor
cmp
movsb
into
scas
jl
in
pusha
mov
sti
push
cmp
ja
sbb
out
pop
loopne
in
adc
nop
adc
ds
adc
es
push
pop
lods
mov
repnz
out
aam
es
mov
sbb
inc
mov
adc
std
dec
sub
jle
push
push
loope
xchg
aaa
xchg
movsl
movsb
push
sub
jle
xor
nop
push
xchg
mov
out
jae
adc
push
dec
daa
push
popa
js
inc
inc
inc
cs
mov
cmp
mov
cli
data16
xchg
xchg
imul
push
dec
mov
js
faddl
lcall
lea
and
es
loopne
pop
les
nop
push
movsl
add
js
mov
cwtl
pop
jmp
mov
xchg
xor
mov
lods
fcmovnu
divb
inc
fimull
movsb
push
daa
mov
pusha
jge
test
hlt
enter
mov
andl
hlt
inc
inc
notl
sub
std
mov
out
mov
jb
in
mov
pop
das
pop
cmp
pop
mov
fildl
pop
jne
sbb
mov
adc
in
call
pop
aas
pushf
jne
imul
in
jecxz
test
pop
in
pop
dec
popf
inc
jbe
out
sbb
inc
dec
add
das
fs
imul
jecxz
jo
idivl
xchg
pop
inc
dec
xchg
out
rcll
mov
mov
xchg
jp,pt
movsb
scas
in
sbb
push
popa
jg
movsl
push
ret
mov
scas
or
push
addr16
push
dec
inc
shrb
and
aad
adc
mov
xlat
insb
sub
mov
int3
ret
popa
pushf
inc
push
fstpl
lcall
lock
pusha
pop
daa
dec
lods
xor
cli
dec
xlat
shrb
out
es
icebp
add
cmpsl
test
fcomps
ljmp
mov
movsb
jne
loopne
cmpsb
mov
popa
ret
es
repnz
cld
out
pop
das
int
popa
pop
pop
xor
rclb
add
inc
mov
xor
sbb
mov
jns
cwtl
mov
dec
cmpsl
outsb
sub
scas
mov
leave
mov
pop
xchg
std
pop
and
or
adc
push
mov
push
rclb
arpl
jp
mov
jbe
mov
mov
jecxz
popf
testb
iret
pop
mov
mov
add
insb
out
icebp
push
sti
andb
sahf
pop
mov
mov
cwtl
pop
pushf
pop
loopne
pop
add
addr16
movsl
pushf
pop
mov
add
std
push
jmp
sub
dec
cltd
inc
cwtl
aaa
out
rcr
pop
or
cmp
push
mov
pop
rcr
aaa
adc
push
pushf
fisttps
shll
dec
jl
push
jp,pn
xchg
leave
xorb
jg
or
fidivl
jo
pop
sti
lds
pop
dec
sahf
imul
and
inc
sub
out
in
inc
add
fstpt
jge,pt
test
lret
mov
mov
or
jno
pop
dec
pop
cmp
pushf
sub
imul
adc
mov
xchg
addr16
fxch
pop
lcall
lcall
mov
outsb
es
aaa
lcall
pusha
movsl
stos
cmp
push
fs
out
sahf
enter
sub
insl
push
push
pop
popa
jns
out
push
fcom
ret
push
mov
mov
test
push
xchg
loope
fisubrs
cmp
pusha
adc
fincstp
cwtl
in
loop
dec
push
adc
push
mov
mov
fwait
mov
int3
xlat
jbe
arpl
daa
jle
push
mov
jne
int
xorl
sub
scas
add
sbb
lds
cmpsl
cmpsb
call
lahf
icebp
pop
into
cld
dec
icebp
fnstcw
pop
jmp
ds
aaa
jecxz
fnstcw
inc
push
loop
xchg
dec
adc
scas
mov
mov
stos
mov
sub
imul
test
mov
xor
pop
stc
out
incb
mov
subb
mov
pop
popf
gs
push
xorb
push
loope
aas
into
pusha
daa
fidivrs
in
scas
pop
cmpsb
ja
loop
in
inc
loope
in
nop
scas
push
mov
jp
aam
subl
and
mov
aad
xchg
add
inc
inc
inc
jns
sub
jbe
mov
and
shl
or
subb
out
rcll
hlt
push
and
fwait
into
out
movsl
cld
loopne
pusha
arpl
pop
gs
fs
push
ds
inc
mov
loopne
xorl
cmp
stc
push
loopne
pop
inc
mov
pusha
fisttpll
fwait
aam
fldcw
adc
lods
call
jmp
inc
clc
xchg
cmp
mov
lods
mov
fwait
stc
xor
push
jnp
jp
out
xchg
jg
aas
mov
lods
les
pop
movl
mov
mov
shlb
jmp
push
jmp
push
pop
ror
mov
bnd
ja
imul
push
mov
daa
in
fdivrs
pop
stos
scas
pop
inc
leave
lret
jne
push
push
xor
outsb
sub
lock
ljmp
mov
push
pop
mov
lock
and
shlb
mov
stos
cmp
lock
iret
ret
sbb
adc
adc
add
popf
sub
in
sbb
mov
int
xor
push
insl
sub
mov
inc
jns
test
jno
fmull
in
pop
or
aaa
sub
mov
rclb
mov
out
std
cmp
aaa
jae
imul
push
jmp
and
mov
leave
enter
pushl
push
scas
push
pop
push
ldmxcsr
sbb
out
mov
lcall
mov
and
into
mov
ret
addl
jg
pop
pushf
dec
add
pusha
je
imul
loopne
inc
out
fwait
dec
scas
cmp
inc
sub
pop
decl
pop
pop
or
addr16
and
and
out
inc
mov
and
jmp
pop
mov
leave
divl
push
cmpsb
aad
sar
mov
popa
sub
pop
out
roll
ja
and
shlb
or
loopne
mov
or
mov
xor
pop
insb
jns
loopne
mov
in
add
inc
jl
daa
sub
or
std
lret
mov
mov
xchg
jmp
outsl
daa
jb
sub
inc
sar
lea
xchg
out
mov
fistl
or
int
pushf
enter
pop
cwtl
push
hlt
jmp
imul
pop
mov
ret
cmp
lods
cs
xor
pop
push
pop
adc
imul
pop
and
pop
loop
pusha
or
mov
pop
adc
pop
out
xor
aad
sbb
dec
mov
or
nop
mov
sbb
in
mov
mov
imul
iret
adc
out
je
mov
fisubrl
adc
ljmp
gs
xor
sahf
jmp
add
cld
addl
jno
out
mov
daa
add
outsb
fsubl
jg
push
fistps
mov
or
lds
leave
cs
and
ss
stos
nop
inc
push
negb
cwtl
push
push
out
cs
test
mov
or
pop
stos
xchg
push
out
dec
or
fidivrs
loopne
ljmp
pusha
cmp
xchg
mov
jl
call
outsb
pop
popf
jl
inc
test
dec
add
inc
inc
xchg
pop
or
jle
movsl
push
dec
popa
pop
xchg
mov
cmc
mov
xor
iret
jp
and
mov
or
repnz
pop
addr16
fstpl
jns
push
out
push
aaa
push
xchg
sahf
cmpsb
js
add
jecxz
or
dec
int3
sub
xchg
lds
pop
pop
mov
mov
add
test
jg
dec
fwait
pusha
lds
jl
out
mov
cmp
mov
xor
cmpl
mov
loop
shlb
out
or
jb
mov
sub
push
pop
mov
arpl
pusha
mov
dec
or
jo
dec
push
add
jo
addb
addr16
pusha
jl
scas
sbb
popa
repz
dec
mov
out
out
lret
adc
mov
or
mov
ret
pop
addb
sbb
mov
mov
out
scas
or
loope
mulb
mov
jge
stc
push
and
and
xor
std
mov
xchg
fisttps
sub
pop
ret
inc
mul
cmpsl
or
loop
dec
call
mov
sub
pop
in
inc
stos
scas
outsl
cmp
push
popa
jle
mov
cmp
mov
imul
cld
cmp
xchg
call
inc
loope
outsb
xor
sbb
shrb
cmp
pop
mov
aam
pop
pop
popa
adc
aas
pop
dec
popf
out
mov
test
lock
test
mov
push
mov
sarb
cmc
inc
test
xchg
fs
pop
lods
stos
fisttpll
pusha
and
fimuls
lret
icebp
inc
hlt
and
inc
imul
xchg
adc
arpl
insb
in
sahf
jp
popa
or
nop
or
hlt
push
fiaddl
stos
out
jl
gs
mov
mov
add
mov
xchg
mov
mov
adc
cli
scas
adc
push
gs
roll
mov
and
fcmovnu
pop
push
es
xchg
pop
outsb
aas
sbb
mov
pusha
out
movsl
pop
fs
mov
push
arpl
sti
sti
xchg
shl
mov
pop
xchg
push
mov
dec
xor
rolb
jbe
push
adc
jle
xchg
mov
adc
aaa
xchg
cmpsb
mov
cltd
adc
cs
les
dec
or
rclb
mov
sahf
mov
sbb
test
scas
push
xor
mov
mov
mov
mov
pop
aam
popa
cmp
xchg
movsb
mov
and
jle
pop
sbb
movsb
jb
iret
andb
lods
xor
mov
cmpsl
mov
pusha
js
push
inc
jnp
lret
mov
in
out
call
frstor
mov
push
push
lea
and
lret
cmc
inc
mov
and
mov
sarl
popa
mov
cmp
cmpsb
repz
loopne
repnz
movsb
pop
mov
pusha
out
pop
cmp
inc
dec
test
pop
push
pushf
movsb
pmulhuw
mov
pop
adc
jb
scas
out
sub
push
movsb
and
or
testl
mov
out
push
outsb
jo
dec
and
dec
sbb
add
or
std
daa
jp
loopne
cmc
inc
rcrb
add
cmpsl
pop
xchg
mov
mov
shrb
add
imul
addr16
fsubs
iret
mov
out
shl
jb
sub
dec
popa
popa
aaa
sarb
test
mov
aas
out
mov
xchg
xor
out
adc
insb
mov
xchg
loope
xchg
lods
in
fldcw
pop
push
mov
xchg
push
ret
dec
mov
or
lock
cmp
sbb
dec
out
pusha
add
jg
jmp
push
iret
or
flds
fs
lahf
dec
jno
sbb
lea
fnsave
bnd
or
pop
sbb
xor
aad
mov
test
cmovnp
dec
mov
out
dec
adc
cmp
mov
outsb
pop
pop
xchg
test
push
out
inc
mov
das
mov
add
out
rol
sub
roll
sbb
or
xchg
jae
rcrb
arpl
leave
mull
test
xchg
pusha
add
jb
repnz
lahf
int3
mov
test
ds
jmp
cli
test
sbb
mov
inc
sti
and
jns
loopne
mov
adcl
or
into
divl
or
and
mov
es
negl
jae
popf
push
movsb
adc
in
xor
add
cmp
push
push
pusha
push
shr
adc
pop
push
outsl
mov
in
mov
mov
push
in
iret
pop
sbbb
bound
mov
jl
jno
out
mov
lcall
insl
and
jmp
mov
in
jmp
jg
sub
inc
push
sahf
jl
mov
aam
aaa
sbb
sbb
arpl
and
ret
adc
adc
jae
lcall
outsb
jno
pop
scas
xor
cwtl
test
test
popa
ds
aas
pop
ret
out
jo
test
jl
or
mov
stos
stc
iret
pop
imul
mul
pop
mov
mov
add
xchg
pop
dec
mov
cmp
jbe
popa
sbb
cmc
push
stos
fsubr
out
mov
lods
push
mov
or
ret
push
dec
nop
sbb
ret
pop
jmp
stos
out
lds
clc
dec
pop
jmp
pusha
daa
ds
mov
mov
insl
sbb
mov
ss
outsl
cmp
add
xchg
add
xchg
psraw
hlt
out
mov
pop
mov
cmpsb
inc
sub
jmp
pop
rcll
sbb
xlat
inc
scas
cmpsl
xor
pop
jge
xor
fwait
dec
push
mov
xlat
out
clc
cmp
addb
cmc
cld
mov
jp
and
pop
in
push
push
mull
mov
push
popa
mov
jecxz
jno
mov
lods
aas
pop
cmp
mov
mov
imul
dec
adc
cmpsb
mov
xchg
xchg
or
ljmp
lock
jbe
add
pushf
pusha
shll
jecxz
sbb
cmpsl
sbb
test
inc
xchg
fnsave
fwait
data16
sub
dec
stc
nop
jp
fsubr
pop
test
sahf
push
adc
js
xchg
bound
aad
lock
lods
adc
mov
popa
mov
xchg
sub
or
in
pop
ds
mov
mov
mov
mov
dec
jb
repz
add
sub
jne
mov
out
pop
and
rcll
ss
repz
fsubl
or
mov
cmp
out
pop
xor
mov
push
ss
push
mov
xchg
add
or
pop
pop
push
jno
jne
push
jae
mov
cmp
xchg
xchg
scas
jp
inc
mov
pop
stc
pop
test
xlat
cli
insl
and
loop
das
mov
outsl
repnz
hlt
pop
call
or
push
add
xor
out
inc
das
lahf
xor
push
and
fbstp
mov
add
xor
push
cmp
xor
out
movl
daa
roll
imul
pop
jnp
popf
shufps
add
sbb
sub
out
ss
xor
loop
data16
pop
mov
into
jae
mov
adc
jg
inc
cltd
out
hlt
out
std
and
out
int3
push
shlb
add
mov
mov
cs
imul
mov
pushf
dec
daa
sahf
sti
daa
xchg
int
inc
push
jle
cld
dec
lods
xchg
and
mov
sub
jb
fcmovne
mov
jmp
jg
push
dec
pop
mov
and
sub
iret
movsl
int3
fidivrs
lcall
loop
clc
inc
add
ja
and
mov
jns
xor
cmpsl
sbb
jae
and
pop
orb
and
fcomi
pushf
ds
sbb
jecxz
loopne
and
jmp
fists
pusha
pop
xor
arpl
out
xchg
movsb
cwtl
rcrl
les
rcr
xchg
xchg
pusha
iret
push
inc
fisttpll
add
lret
jae
addr16
mov
pop
fldl
jg
cmp
mov
bound
aam
fiaddl
int3
jge
add
xor
enter
jo
aaa
stc
mov
into
mov
mov
imulb
sub
imul
int
push
fwait
cmp
loop
sahf
mov
out
push
ljmp
mov
out
or
nop
dec
xchg
push
add
stos
cld
test
loope
cmp
js
xchg
inc
ja
ss
loopne
pop
cmp
fldt
int
or
xchg
mov
in
es
shl
sbb
xchg
dec
push
pop
shl
push
xor
inc
jns
loop
jmp
ss
jl
jae
push
xchg
fisttpll
pop
arpl
pop
pop
add
xchg
movsb
pushf
or
aam
bound
xchg
push
sbb
xchg
cmp
sbbl
push
sbb
add
inc
inc
mov
mov
aaa
jmp
pop
lret
add
lcall
xchg
idivb
out
dec
xchg
test
inc
mov
xor
sub
lret
out
mov
adc
xor
fs
mov
mov
pop
inc
test
jle
cs
adc
loop
cld
pop
clc
out
dec
stos
pushf
loop
mov
jno
arpl
mov
bswap
dec
jg
rol
mov
dec
mov
cs
or
mov
leave
insl
push
xor
sbb
pop
or
insl
jo
cmp
cmpsl
dec
enter
faddp
push
and
pop
sub
sub
ljmp
dec
jae
sub
or
dec
out
cli
test
or
xchg
je
rol
mov
jle
lahf
pop
xchg
dec
cmpsb
push
and
movsl
iret
icebp
cwtl
pop
dec
nop
inc
sbb
or
insb
pusha
into
and
jno
imul
lock
les
mov
call
mov
movsb
loope
test
jo
jbe
imul
adc
test
pop
mov
repz
sarb
jge
push
popf
into
sub
cmp
fldl
xchg
lea
sbb
mov
xchg
movsb
adc
mov
inc
pop
bound
cmpsb
inc
sbb
and
xor
test
jbe
hlt
lea
js
jae
xor
xchg
fs
test
pusha
pop
iret
dec
adc
clc
mov
nop
lock
xchg
ror
cltd
push
cmp
icebp
ror
cwtl
adcl
adc
nop
stos
mov
inc
popa
or
push
lea
jno
out
add
ss
imul
or
int3
push
jae
imul
mov
lods
ss
test
jno
push
addr16
movsl
iret
loopne
add
arpl
xchg
fisttps
xor
pop
pushf
fidivrs
call
jbe
jbe
imul
jp
dec
ss
incb
loop
pop
ss
gs
xchg
pop
mov
jmp
ret
fdivp
cwtl
arpl
fcom
inc
stos
lret
cwtl
loope
out
jno
shlb
mov
mov
shl
xor
out
roll
mov
filds
lea
and
mov
fs
mov
xchg
push
pop
adc
push
addl
fcom
cltd
sbbb
int3
and
scas
xchg
test
dec
push
pop
in
pop
clc
fsubrp
inc
mov
mov
mov
movsb
mov
mov
sub
pushf
sbb
cmpsl
and
jmp
outsb
xor
in
enter
lea
push
decb
imul
sub
cmc
push
cmpsb
mov
loop
pushf
jp
stc
pop
mov
into
jno
int3
push
xchg
push
int
dec
pop
jmp
mov
jmp
push
test
pop
push
xor
fisubs
add
mov
ds
shll
popa
test
mov
mov
push
jb
sub
scas
pop
xor
jecxz
fsubl
cmpsb
pop
shll
lahf
dec
negb
pop
mov
xchg
cld
mov
pusha
mov
add
in
pop
push
adc
sbb
imul
pop
test
outsb
dec
mov
jbe
dec
cmp
pop
test
or
pusha
xchg
addr16
mov
insl
cld
pavgb
fisubl
mov
test
pop
out
and
in
test
mov
pop
add
add
mov
xchg
movsb
mov
jbe
cs
imul
bound
ret
stos
pop
push
dec
push
in
movsb
or
fsubr
imul
stos
pusha
gs
mov
in
xchg
jg
adc
aam
sar
pop
lds
lods
mov
out
lcall
xor
push
cmp
out
xchg
test
cmc
mov
or
push
sti
mov
push
or
pop
mov
mov
jbe
clc
mov
and
mov
jmp
push
pop
inc
jns
lock
pusha
cmp
in
jno
hlt
enter
loope
cltd
xor
stos
adc
xchg
xchg
rcrl
add
shrl
dec
jmp
daa
inc
jno
xor
xabort
cwtl
and
sub
push
lea
ret
lock
dec
lret
mov
imul
out
or
lret
adc
stc
pop
pop
pop
jmp
cmp
mov
xchg
scas
dec
aam
sahf
adc
out
sub
cli
xchg
jge
cltd
scas
mov
popl
sbbb
adc
and
inc
mov
inc
or
orb
mov
inc
popa
stc
add
cmp
fiadds
repnz
push
push
pop
fisttpll
imul
push
xchg
pusha
and
outsl
arpl
popl
fisttpl
into
mov
or
mov
repnz
xor
outsb
mov
or
mov
inc
sbb
push
call
daa
mov
xchg
adc
arpl
out
test
loope
push
arpl
lods
pop
stos
stos
in
test
outsb
pop
adc
movsl
jo
xchg
or
push
mov
inc
cmp
scas
into
out
lds
lahf
sub
dec
xlat
dec
pop
or
lods
loopne
sub
cs
pusha
xchg
ret
mov
xor
xchg
pop
negl
and
sti
rcrl
fwait
pusha
das
stos
cmp
cwtl
push
sub
mov
into
lret
pop
jmp
clc
pop
imull
push
inc
into
mov
cs
andl
push
mov
push
xor
out
inc
lock
lds
sub
imul
fs
popa
xor
cmp
je
loopne
fdiv
sbb
mov
into
dec
popa
push
cmp
pop
and
xchg
fsubrs
or
je
mov
mov
or
roll
fisubs
jmp
xorb
arpl
icebp
or
mov
push
lea
pusha
ret
ret
stos
or
dec
popf
mov
pusha
inc
and
xchg
sbbb
cltd
jnp
sbb
lahf
sub
lods
les
pop
inc
icebp
dec
stos
fmuls
icebp
outsl
pusha
jae
fstpl
jge
divl
aas
rcll
test
fnstcw
sbb
push
or
xlat
loop
icebp
push
popa
mov
adc
out
leave
dec
mov
pop
ljmp
mov
xchg
inc
pop
xchg
xchg
mov
out
arpl
pop
lret
lods
sbb
jns
xchg
xchg
jmp
mov
push
lods
push
out
sbb
inc
dec
sub
in
pop
negl
cmc
mov
pop
fstp
lods
mov
sbb
das
mov
out
xchg
dec
mov
popa
shlb
fnsave
ds
xor
jle
pop
out
xor
sti
dec
xchg
sahf
pusha
xor
pop
aad
sub
and
call
xchg
lods
lcall
jecxz
ret
or
cmp
shlb
mov
movsl
add
aad
div
into
sbb
pusha
mov
pop
out
ja
cwtl
loope
pop
sti
sbb
leave
mov
push
lea
mov
shlb
inc
adc
adc
dec
fsub
rcrl
movsb
ss
sarb
outsb
outsb
in
cmp
push
pushl
and
addr16
out
xchg
clc
or
lods
mov
int3
cli
add
pushf
mov
inc
in
jno
mov
mov
fs
lock
into
aaa
sbb
ds
push
xchg
mov
pop
adc
scas
mov
popa
and
inc
mov
out
in
dec
xchg
jmp
xor
sub
mov
out
mov
pop
loopne
arpl
xor
mov
das
jp
xchg
pop
add
ljmp
pop
aad
inc
inc
flds
add
mov
mov
into
adc
mov
pop
lret
cmp
pop
loope
inc
dec
cmpsl
and
mov
ror
in
cmpsl
in
jns
je
mov
adc
lahf
out
lea
mov
mov
add
pusha
adc
jns
daa
and
fidivrl
decl
dec
aas
mov
and
mov
in
pop
jecxz
cld
imul
mov
in
imul
inc
pusha
pop
scas
jne
rorb
dec
xor
sub
repz
mov
pop
and
je
outsl
jle
aas
ss
sbb
adc
movsl
mov
xchg
lcall
leave
je
add
and
xchg
lret
push
pop
sahf
adc
pop
sub
mov
or
sbb
dec
jo
mov
mov
sub
inc
ja
pop
lods
xchg
pop
lahf
xor
jno
and
mov
and
mov
add
jb
jmp
sbb
sbb
sbb
pop
sub
aas
scas
repnz
cmp
sbb
mov
shrl
pop
mov
daa
push
mov
lcall
mov
pusha
lcall
mov
jecxz,pt
xchg
mov
xchg
jno
push
cmp
negl
gs
fwait
push
aaa
dec
popa
jbe
clc
stc
fbld
push
cs
inc
xlat
pop
call
outsl
loop
scas
out
jge
xchg
stc
dec
push
mov
adc
pop
mov
and
pop
loope
cld
out
dec
mov
in
nop
adc
sub
imul
repz
ret
dec
jne
cmpl
out
adc
mov
cmp
or
xor
imul
cmp
lcall
hlt
lods
sahf
int3
je
sub
pop
mov
insb
pop
mov
stc
mov
fdivrs
add
fisttpll
inc
data16
out
aaa
out
daa
mov
pop
xchg
add
fsubrs
jle
jmp
and
and
cmc
mov
cmpsl
scas
mov
push
lods
es
les
adc
popa
leave
enter
cmp
add
pop
ljmp
sub
pop
mov
push
fidivl
sbb
leave
in
scas
cmp
sub
sbb
cmpsl
mov
xlat
cli
dec
jmp
add
lcall
pop
and
mov
in
pop
mov
sub
pop
pop
js
cmpsb
js
fcoml
jbe
movsb
lret
fldcw
add
fbld
popa
mov
popa
aaa
inc
out
aam
je
jle
lds
push
adc
lods
fldln2
das
arpl
inc
pop
pop
mov
mov
pop
and
jecxz
xor
sbb
push
cli
cmc
mov
or
je
adc
mov
mov
mov
pop
js
mov
mov
mov
lods
cmp
imul
fistl
jmp
pusha
loopne
fisubrs
cwtl
mov
cmp
push
and
arpl
jecxz
mov
aas
stos
out
icebp
int
sub
fstpt
cs
inc
mov
mov
in
out
sarb
fstl
negb
dec
pop
push
gs
shll
sbb
cmc
orl
loope
cmp
in
jl
mov
add
lods
xchg
sub
fs
pop
sub
adc
pop
mov
xchg
lea
mov
mov
or
int
push
lods
test
ret
xchg
cmp
adc
out
mov
add
mov
mov
jne
pop
dec
je
popa
sbbl
popf
sbb
mov
es
pusha
adc
xor
insb
fisubs
and
es
mov
out
sub
mov
or
jge
xchg
mov
and
mov
lret
push
pop
es
push
dec
in
mov
mov
pop
pop
in
pop
xchg
insl
fbld
cli
jnp
jb
mov
push
loop
outsb
sub
push
cmc
rcrl
mov
xor
aas
fidivrs
fwait
loope
add
ja
out
push
addr16
add
fwait
dec
popa
sti
in
cld
pop
dec
sbb
lahf
dec
jo
pop
jne
sbb
pop
aam
push
lea
push
jbe
mov
fistl
sub
add
pop
jb
es
pop
imul
out
scas
cmc
cld
push
add
xchg
or
mov
imul
cmp
jp
stos
mov
in
sub
imul
cmp
test
mov
cmpsb
pop
pop
jg
data16
nop
mov
mov
aaa
push
jae
pop
xor
jge
pusha
sub
loope
pop
pop
jae
out
pop
ljmp
cwtl
vmread
movsb
xor
pop
scas
pushf
cmpsb
push
test
cmp
cwtl
jp
mov
push
jmp
sub
bound
pop
lods
insl
jle
adc
fcoml
dec
lods
daa
dec
das
stos
pusha
daa
dec
cwtl
push
mov
into
cmp
add
in
inc
mov
ja
dec
sahf
pusha
pop
mov
adc
aaa
mov
jnp
clc
lcall
arpl
or
mov
insl
mov
out
fs
call
inc
mov
mov
les
jmp
std
push
popa
push
je
add
sar
out
sub
aam
xchg
dec
je
aad
dec
mov
and
inc
inc
sbb
outsb
cmpsb
ret
mov
sbb
dec
cli
jbe
sbb
and
out
ret
fs
gs
sub
and
stc
lock
lahf
adc
inc
insb
xorb
mov
dec
icebp
cmp
scas
insl
test
jl
cmc
shrd
cld
push
std
push
dec
popa
popa
cmp
call
add
fisubrl
idivl
add
jb
imul
mov
shl
push
mov
out
scas
pop
cmp
fwait
int3
xchg
and
in
adc
stc
je
adc
mov
icebp
cmp
xor
lods
jo
fstl
inc
fisttpll
cmc
ret
out
adc
dec
jle
jl
sub
inc
dec
and
cmp
jmp
mov
and
cmpsl
pusha
minps
or
jb
pusha
stos
push
sbb
mov
in
dec
mov
mov
leave
das
popa
bound
jp
out
pusha
je
jle
clc
cmp
shlb
ja
xchg
push
cmp
push
fidivs
jo
xor
dec
xchg
mov
pushf
mov
dec
xor
dec
sub
pusha
dec
cmp
inc
push
lret
pushf
adc
shlb
adc
adc
mov
inc
mov
out
cld
jp
js
adc
pusha
les
push
mov
lahf
and
mov
decl
repz
sahf
int
jmp
insb
jmp
adcl
jae
push
xlat
int3
outsb
test
enter
js
pslld
inc
pop
lret
shlb
sbb
push
cld
fs
cmp
loopne
xchg
xchg
inc
cltd
mov
adc
scas
in
test
outsl
dec
dec
xchg
fldl
sbb
sub
popf
fcoml
adc
jno
in
sbb
inc
push
fs
or
mov
and
pop
pop
adc
mov
test
repnz
push
int
stos
push
jbe
mov
pop
aaa
int
mov
adc
xor
fistpl
clc
adc
pop
popa
sbb
or
into
out
jmp
adc
xor
jle
pusha
les
dec
cmp
fwait
mov
add
daa
mov
or
outsl
aaa
or
pop
push
xchg
ja
ficompl
enter
mov
test
cmpsb
pop
in
xor
push
ljmp
add
sbb
cmp
xchg
jl
mov
fcoml
cwtl
loopne
dec
nop
push
cmp
shl
adc
popa
adc
xchg
mov
pusha
push
add
fsub
jnp
imul
adc
xorb
pop
aas
fiaddl
repnz
adc
ja
push
out
and
lcall
push
adc
add
int3
xchg
or
mov
call
mov
sbb
mov
xchg
test
sub
movsb
arpl
jno
lcall
or
pop
out
pop
push
xchg
loope
iret
push
sbb
sbb
ret
mov
cltd
cmp
fisttpll
add
int
push
inc
mov
call
add
mov
cmp
aad
rol
lcall
mov
rorb
push
icebp
pusha
lock
in
and
in
dec
mov
jmp
mov
inc
dec
imul
push
xchg
mov
lods
jae
cs
shrb
pop
fisubl
xchg
jecxz
mov
arpl
imul
xchg
mulb
pop
or
push
testb
mov
push
pop
cs
inc
ss
loope
or
shl
inc
out
les
std
scas
pop
rorb
mov
mov
call
ud0
ret
js
push
out
aam
mov
idivb
stos
pop
out
mov
lock
dec
int3
fstl
push
fcomp
addr16
pop
fbstp
jp
rorb
sub
mov
cli
adc
pop
mov
mov
sahf
pop
ds
cmp
jnp
dec
test
out
cmpsb
add
xchg
clc
mov
inc
dec
imul
fdivs
pop
aaa
or
outsb
je
mov
jbe
movb
fwait
popa
adc
test
inc
les
sub
inc
bound
xchg
cmp
aad
add
cli
into
cltd
xchg
sub
cwtl
cld
das
inc
mov
add
dec
jge
imul
cld
orb
fldenv
mov
out
xorb
loopne
lea
mov
inc
ret
xorl
lret
test
xor
imul
cmc
sbb
push
ficomps
pop
xchg
pop
cld
jae
push
test
ficomps
jb
cmpsl
int3
pusha
js
lock
daa
ret
test
icebp
pop
andl
xchg
xor
pop
jg
mov
and
inc
cmpsl
iret
push
mov
jb
out
inc
loopne
and
cld
pop
adc
push
movsb
lret
mov
ljmp
call
push
loopne
rorl
mov
and
sbb
imul
in
test
adc
inc
cmp
xchg
in
pop
mov
mov
popa
neg
call
cmpsl
out
cs
adcl
out
in
xlat
cmp
sti
push
into
xor
bound
push
jge
aaa
popa
mov
repz
lea
dec
jns
cltd
in
and
shlb
jl
outsb
dec
notl
fidivs
xchg
ds
ja
and
xor
leave
mov
repnz
mov
sub
push
cmp
adc
dec
arpl
mov
pop
f2xm1
inc
cltd
pop
jecxz
sub
jo
dec
fists
push
jno
mov
hlt
in
dec
dec
pop
shll
mov
or
addr16
out
jo
rcll
cltd
xchg
cwtl
mov
pop
adc
pop
out
push
pusha
scas
ds
divb
push
jmp
pop
fisttpll
cs
inc
ret
into
pop
jbe
adc
in
mov
add
insl
outsb
adc
mov
dec
mov
fsub
addr16
push
xchg
jns
sub
jecxz
mov
pop
mov
xor
mov
imul
fwait
sub
int3
test
sbb
insl
js
push
lea
scas
inc
mov
test
adc
dec
nop
mov
adc
pusha
pop
jp
jmp
dec
pop
mov
test
icebp
scas
jmp
mov
pop
cmp
pop
pop
loop
ret
dec
popa
xchg
adc
lods
out
sub
mov
and
loop
mov
inc
fsub
cltd
jecxz
pop
ficoms
loop
sub
loop
push
jmp
ds
mov
bound
inc
out
cmp
out
sub
repnz
lcall
into
push
stos
mov
pop
insl
cmp
test
mov
sbb
int3
cli
sub
lahf
add
add
xchg
mov
fldln2
inc
ret
cld
jo
pop
mov
pop
push
push
or
addr16
cmpsl
out
jno
ret
push
xchg
jne
sbb
mov
lret
mov
outsl
popf
test
pop
cmpl
adc
sbb
push
das
cmp
push
or
jb
in
mov
sahf
add
jae
pop
cs
dec
lret
cld
addr16
jle
push
das
dec
movsbl
mov
cmp
xor
repz
pushf
xchg
shll
push
or
pop
lahf
inc
inc
mov
pusha
jmp
sub
cwtl
adc
cmp
call
jbe
cmp
xchg
pushl
inc
dec
cmp
sub
out
dec
addl
mov
dec
testl
or
cmp
cli
cs
pushf
cmp
or
xchg
mov
push
popa
mov
hlt
out
xchg
lcall
ret
andl
push
int
stos
loopne
test
add
add
movsb
mov
fcoml
xchg
out
and
sahf
mov
push
pusha
fistl
jmp
test
xchg
lret
pop
lahf
nop
lods
push
les
cld
or
jno
mov
loop
ds
lcall
xchg
add
mov
repz
aad
iret
pusha
stos
mov
sub
adc
jl
push
mov
push
or
out
pop
aas
imul
or
cmp
mov
mov
hlt
pusha
in
sbb
shl
cmp
sbb
mov
mov
cmovle
and
xlat
mov
mov
loopne
imul
add
pop
loop
inc
test
loope
cmp
popa
test
test
xchg
lret
ljmp
or
sub
cld
lret
xor
pop
and
sbb
popa
and
into
xor
xchg
push
mov
fidivl
mov
das
into
rcll
push
aad
jp
pusha
sub
sub
cmp
lahf
sub
push
mov
cld
push
xor
stc
lea
cli
mov
dec
pop
mov
orl
dec
and
push
test
mov
push
das
ds
movsb
sub
add
loope
xchg
mov
and
or
pushf
pop
stc
scas
mov
mov
jne
lret
loopne
add
pusha
jmp
jmp
les
xchg
pop
rolb
inc
out
test
cli
xor
jl
ficomps
outsb
mov
insb
mov
movsb
stc
pop
shl
push
mov
mov
cmp
mov
daa
dec
cld
mov
jmp
mov
or
loop
ret
xchg
stos
mov
aaa
addr16
jle
jae
arpl
push
dec
fsubrl
fidivrs
sub
fiaddl
mov
mov
dec
pop
xchg
je
pop
mov
sar
mov
jae
jle
popa
push
bound
fwait
adc
inc
repz
add
mov
jno
dec
push
pop
leave
push
and
jno
ja
and
rolb
fcmovnbe
mov
and
ret
cmp
xchg
ljmp
and
sbb
and
inc
lock
popa
jae
xlat
shlb
sti
lret
and
xchg
call
jnp
sarl
cli
jmp
xlat
stos
jp
aad
adc
pusha
repnz
ss
fcomi
je
jno
xor
fstp
xor
jnp
ds
sub
and
mov
jbe
jp
mov
add
sub
pop
mov
xor
pushf
insl
lods
lods
pusha
fisubs
and
movsl
iret
addr16
mov
sub
leave
imul
in
out
jmp
mov
fisttps
xchg
cmc
adc
xor
xchg
aaa
mov
sub
stos
pop
xchg
into
xchg
lock
in
lods
pop
sti
enter
mov
icebp
add
std
pop
testl
xor
flds
push
adcb
std
sub
in
movb
loopne
pushf
pop
mov
add
adc
daa
xchg
add
xchg
test
jl
jge,pt
jo
jns
andb
push
movb
cmp
xor
cmp
cmc
pop
mov
data16
arpl
popa
pop
mov
sbb
in
fs
test
jbe
cltd
push
pop
andl
int
out
add
out
loop
push
sahf
daa
in
out
push
add
inc
inc
sbb
stos
pop
push
mov
fwait
daa
pop
mov
or
jg
sahf
ds
out
out
out
cld
stos
jns
loop
into
jecxz
lea
ret
mov
aad
jp
icebp
push
cmc
jo
lea
or
dec
notl
push
icebp
jle
pop
and
cmp
sahf
int3
push
aam
fmulp
inc
mov
pop
jb
cmc
mov
sbb
mov
add
xlat
pusha
loope
in
lcall
push
scas
mov
stc
mov
mov
arpl
inc
repnz
gs
scas
jg
dec
ja
pop
in
pop
mov
stos
outsl
cmc
inc
jbe
jl
and
ss
mov
mov
arpl
mov
lret
push
mov
popa
mov
fldpi
inc
lock
sub
loopne
push
aas
xor
vmulss
xchg
rclb
imul
cld
adc
pop
push
jg
push
insb
mov
out
sub
add
pop
ja
hlt
nop
das
and
push
sbb
inc
dec
sub
ffree
mov
push
sbb
hlt
lret
mov
dec
out
pop
xchg
push
nop
out
xchg
lods
or
cmpsl
jo
mov
arpl
pusha
dec
ljmp
xchg
sbb
repnz
jnp
in
and
dec
pop
fldcw
mov
jb
stos
mov
inc
xor
sbb
and
sbb
in
adc
inc
mov
xchg
shlb
jg
jle
pop
adc
aad
mov
pop
rcr
mov
mov
sbb
mov
dec
jg
or
pop
or
inc
push
and
cs
jl
in
pop
repnz
sbb
push
jae
and
mov
mov
out
add
dec
mov
mov
add
or
popa
pop
jno
push
hlt
lock
out
lea
add
nop
in
mov
pop
mov
dec
pop
outsb
sahf
arpl
ret
jnp
int3
mov
fiadds
jb
pop
dec
outsb
addr16
ret
mov
xchg
or
lret
add
inc
push
ss
pop
mov
shrb
scas
inc
pop
mov
std
stos
xor
aam
mov
sub
test
repz
or
pop
ror
leave
dec
addl
pop
pop
int
push
and
pop
pusha
in
into
test
sbb
pusha
mov
arpl
fisubs
pop
movsl
cld
or
cmp
xchg
xchg
mov
mov
out
popf
xchg
push
jne
mov
push
into
push
out
add
sbb
and
sub
ja
pop
in
aad
adc
divl
pop
mov
cmp
les
into
mov
add
out
jbe
xorb
jp
clc
pop
icebp
mov
sbb
push
mov
fnstsw
sub
pop
ljmp
mov
sbb
add
mov
ja
jl
cmpsl
test
and
push
out
xchg
enter
cmc
ss
mov
fnstenv
inc
push
and
adc
jle
movsl
js
mov
jb
mov
pop
loop
pop
cmp
lods
out
adc
ss
rcll
mov
pop
jmp
and
push
ja
test
sahf
divb
stos
pusha
lcall
dec
jmp
fsubrs
cmpsb
je
pop
and
pop
adc
inc
mov
add
popa
mov
insb
daa
lods
out
decb
pop
adc
test
sub
nop
push
add
pmulhuw
xchg
rorl
sbb
lret
shlb
pop
adc
xchg
inc
mov
test
pop
push
popf
pop
and
or
sbb
xchg
and
xchg
ds
insl
push
imul
cmpsl
outsl
mov
fcoml
ss
popa
inc
lcall
out
test
xor
mov
jg
fwait
scas
xchg
mov
in
mov
addl
sar
enter
mov
adc
rcr
jne
loope
fidivrs
ret
sbb
pop
incl
add
inc
jo
cmp
test
mov
movsl
insb
push
add
pop
cs
cmc
push
loop
dec
dec
adc
push
cmp
sub
push
shr
std
xchg
sbb
add
leave
push
push
es
sub
out
cli
scas
adc
inc
bswap
mov
cmp
lds
scas
pop
pop
into
cmp
jmp
mov
and
add
xor
test
out
pop
aad
jb
fmulp
cltd
loopne
outsb
in
mov
pop
out
cmpb
pop
cmpsl
mov
dec
sub
mov
fcoms
std
xor
sarl
ljmp
movsb
jbe
in
cltd
xchg
and
add
shll
add
je
clc
rcrl
push
sub
test
es
cmp
out
or
insl
mov
faddl
int
cltd
js
cmc
pop
out
mov
pop
inc
loope
cmp
aas
pushf
mov
ljmp
lret
adc
mov
shll
cmp
aad
pop
iret
addb
movsl
cli
in
ffreep
xchg
jb
jb
int
mov
mov
out
jecxz
in
jecxz
les
mov
and
push
pop
mov
pop
sub
pop
xchg
aam
adc
xchg
out
add
vmovhps
fbld
je
pop
cmc
sbb
loop
pushl
mov
cmp
pop
adc
sub
ss
fdivrl
add
mov
xchg
mov
mov
mov
cmp
sbb
xchg
jbe
mov
jno
inc
and
lods
lds
sbb
push
pop
or
pusha
gs
out
or
clc
pusha
pop
pop
lods
je
das
movsl
aad
push
xchg
jecxz
stos
dec
loope
mov
pop
divb
das
ds
scas
pop
pop
repnz
adcl
mull
sbb
inc
jp
and
sarb
sbbb
dec
pop
inc
hlt
loopne
jp
push
jns
repz
and
sarb
ret
es
dec
inc
rorl
testb
lret
jo
insb
repnz
jg
loopne
and
lea
aaa
out
movsl
out
sbb
add
mov
nop
mov
or
xchg
inc
aad
pop
in
push
popa
out
dec
mov
cmp
adc
or
fisubrs
sub
pop
aaa
repz
dec
out
and
xor
fsubs
mov
pop
xor
mov
jl
ja
push
inc
clc
ret
push
mov
pop
std
jns
cmp
and
sbbl
shrb
dec
je
add
mov
mov
xchg
addb
xor
repnz
mov
ds
lcall
outsb
lahf
out
imul
cmp
mov
push
pop
and
cmp
cmp
lret
push
loop
mov
cmpsl
shl
pop
lea
mov
shll
pop
xor
sahf
inc
adc
xchg
mov
sbbl
sub
pushf
sub
test
stc
pop
jo
add
or
xchg
cs
dec
push
push
pusha
mov
jb
inc
and
outsb
stos
out
outsb
iret
lcall
sub
jb
xor
pop
lcall
sbb
cmp
inc
jo
fidivrs
jge
addr16
bound
dec
xor
jl
pop
push
adcb
push
std
pusha
add
and
test
sub
xlat
lcall
pop
jecxz
pop
pop
push
xlat
push
repnz
popa
sub
es
in
out
rol
loopne
lret
mov
mov
mov
lahf
fbld
mov
loopne
enter
fisubrl
pop
mov
xor
jp
imul
subl
js
sub
test
pop
jecxz
add
and
ds
inc
xchg
lods
dec
mov
jp
cwtl
adc
loop
sbb
sub
in
xchg
jns
and
push
mov
enter
cmp
lods
cmp
ret
or
cmc
pop
cmc
out
iret
adc
push
jb
clc
andb
push
lahf
inc
cmp
scas
out
push
sbb
add
inc
jnp
xchg
je
in
sbb
xor
xor
sbb
sub
inc
out
ficomps
ja
mov
in
mov
insb
pop
test
frstor
lcall
out
xor
loop
bound
jmp
ss
pusha
lea
mov
dec
fldenv
pop
loopne
mov
cmp
jne
dec
jp
mov
mov
sub
aaa
lahf
fldenv
in
mov
lcall
lock
mov
or
les
fwait
int
pop
sarb
test
out
lock
cmc
jmp
mov
adc
or
ljmp
push
inc
xor
mov
addr16
pushf
cld
pop
ss
xchg
fldcw
mov
cmovae
sbb
inc
mov
insl
sub
push
jg
pop
add
outsl
arpl
and
and
sbbl
repz
ljmp
out
or
add
sub
jb
push
or
pop
lahf
jbe
dec
std
sub
inc
pop
sbbb
sti
stos
out
in
out
pop
xor
aad
push
mov
push
popa
push
pushf
dec
xchg
daa
mov
imul
faddl
mov
aas
into
pusha
fldt
es
fstpl
pop
addr16
xlat
sahf
dec
cwtl
jnp
mov
inc
pop
aas
out
es
scas
mov
mov
test
out
aad
add
push
and
sti
sub
xchg
popa
out
mov
sti
jg
insl
dec
stos
stos
out
pushf
js
xor
leave
mov
ficompl
add
push
fs
fmull
dec
rcll
adc
mov
pop
jns
pop
add
mov
popa
mov
outsl
mov
xor
jmp
push
popa
or
ret
cmpsl
add
jg
mov
pusha
popa
stos
jb
movsl
push
aad
jecxz
cmp
aaa
repnz
mov
dec
les
inc
jo
shl
out
pop
adc
mov
in
clc
push
and
or
repz
rcll
lock
lods
rcrl
mov
pusha
into
sarb
cmp
pop
fcom
dec
adc
das
and
lods
push
pop
int
clc
dec
test
mov
popa
in
das
mov
mov
fiaddl
mov
jbe
iret
out
ds
cmp
popa
xor
sbb
xchg
dec
addr16
addl
adc
in
test
rcrl
push
int
gs
popa
rolb
scas
jns
ja
shlb
sub
push
fdivs
lods
pop
jnp
fstp
sbb
mov
lock
lret
or
movsb
jmp
xor
ljmp
inc
and
dec
out
jno
enter
mov
std
pop
push
sub
jp
out
sti
push
sar
aam
mov
nop
cmp
ds
mov
cld
daa
fs
mov
iret
clc
lock
in
dec
data16
in
mov
iret
jae
outsb
jmp
fldt
ds
test
cmp
sub
mov
inc
vpunpckhdq
pusha
xchg
inc
popa
lret
das
leave
mov
nop
pop
inc
inc
fistl
mov
inc
push
adc
popa
adc
mov
mov
sub
aam
into
or
add
hlt
rcll
ret
push
loopne
inc
scas
and
xchg
xchg
sbb
in
pop
lret
sbb
add
dec
cmp
mov
sub
imul
pusha
pop
add
xchg
pop
and
xlat
out
push
cmp
movsb
outsb
mov
mov
subb
fisubrs
data16
rcrl
inc
sub
sahf
pop
aas
push
jge
out
bound
in
lret
movsb
sub
xchg
iret
cmp
push
inc
pop
lahf
faddl
inc
hlt
out
xchg
daa
push
jle
lcallw
xchg
inc
jb
add
mov
popa
bnd
gs
mov
scas
sbb
add
fsubs
xchg
jno
xchg
xchg
lods
adcl
icebp
enter
inc
sub
push
inc
mov
mov
lcall
popa
cmc
dec
mov
pop
add
sti
sahf
out
jg
adc
add
xor
mov
sub
push
into
pop
and
je
pusha
fdivrl
mov
out
mov
adc
mov
xchg
push
cmp
pop
mov
add
loop
or
gs
cltd
mov
push
out
fists
int
and
jmp
push
popa
stos
mov
faddl
ljmp
jb
hlt
pop
pop
pop
fildll
out
popa
sahf
repnz
xchg
fimull
repnz
xor
mov
jmp
insl
sahf
test
cmp
xchg
test
mov
pop
mov
in
cmp
lahf
inc
pop
mov
and
jbe,pn
sub
lahf
lret
pop
jle
jae
adcl
pop
sbb
icebp
shrb
pop
inc
inc
cmp
push
repnz
xchg
jbe
pop
xor
push
jo
cli
std
push
imulb
enter
fstps
push
jle
mov
pop
push
xor
mov
ret
in
ds
cmp
jmp
xchg
repz
jl
and
xchg
stos
nop
xchg
jnp
sahf
icebp
dec
sbb
push
inc
movsb
and
and
scas
pusha
mov
inc
jo
imull
mov
out
out
arpl
mov
aad
jmp
popa
jns
mov
cmp
and
fldt
cmp
out
fdivs
pop
mov
ficompl
sti
insl
sarb
xchg
ss
stos
add
into
mov
out
dec
cmp
idivl
dec
shrl
adcl
jl
nop
push
xchg
aas
cmp
dec
out
ret
xchg
lock
int
inc
push
cmp
jmp
mov
sahf
outsb
add
out
popa
push
mov
sub
and
popa
jge
mov
out
lea
orl
mov
jns
xchg
pop
das
jg
jmp
mov
mov
lahf
popf
stos
xchg
stos
cmp
jbe
sub
cld
outsb
add
mov
insl
fisubs
fsubs
orl
mov
cmp
and
mov
mov
loope
mov
adc
popa
mov
or
sarb
or
jb
imul
push
inc
popa
or
movl
hlt
mov
pop
sub
xlat
inc
stos
sub
dec
and
js
cmpsl
pop
icebp
pusha
decl
scas
ljmp
bound
cmpb
std
inc
or
sub
mov
lcall
or
ret
filds
pop
std
jo
lods
pop
pop
dec
popa
js
xchg
ljmp
sti
pop
xchg
data16
bound
pop
lds
xor
add
adc
sti
lcall
out
loop
int
sbb
inc
mov
pop
jl
xchg
aas
jg
pop
addb
jne
shrb
add
daa
cmp
aad
lahf
push
jmp
clc
cli
jne
in
lcall
inc
push
jecxz
pop
mov
adc
out
scas
sub
in
adc
jo
dec
and
outsb
je
out
in
mulb
popf
rcr
cld
and
es
inc
adc
cmpsl
rcll
in
insb
push
mov
xchg
cs
mov
jecxz
dec
jp
hlt
xchg
arpl
cli
pop
push
arpl
movsl
push
out
cmpl
lcall
in
dec
and
and
xchg
ret
mov
push
scas
scas
mov
sbb
push
rolb
decl
andb
xchg
popa
mov
scas
mov
sti
fcompl
or
stos
rcrb
mov
and
outsb
cmp
jns
lods
ret
fadds
adc
push
jne
pop
out
fwait
dec
mov
sbb
mov
jns
call
adc
push
mov
in
inc
jne
xchg
pushf
fists
jmp
lahf
pusha
xchg
aad
addr16
rclb
pop
arpl
orb
mov
push
dec
push
push
enter
shrl
rorl
mov
mov
jb
push
jbe
nop
add
inc
lock
pusha
ss
mov
jmp
adc
jg
out
frstor
out
inc
cltd
adc
push
cli
adc
movsb
outsb
or
or
xchg
in
jecxz
stos
out
mov
call
xchg
imul
push
xchg
cmp
mov
push
and
repz
jno
mov
jmp
loopne
xchg
aad
repnz
pop
xchg
and
mov
cltd
pusha
call
rcrb
shll
xorl
mov
mov
lret
cmp
sbb
lds
pusha
ficoml
jle
mov
and
adc
cmpsb
movsl
lods
sub
sub
pop
xchg
test
pop
xchg
sahf
and
and
pop
stos
or
dec
scas
lods
push
mov
out
sub
xor
mov
ja
and
cmpl
inc
fiaddl
mov
mov
mov
pop
ljmp
aam
adc
cmp
nop
gs
inc
and
or
out
add
jmp
mov
mov
sbb
and
enter
adc
dec
mov
sbb
lcall
push
test
test
sbb
jp
int3
jl
out
mov
pop
mov
inc
sahf
or
daa
or
ds
ret
cmc
pusha
adc
shlb
cmc
mov
lret
add
xchg
pop
repz
cmp
mov
dec
in
and
fistpll
mov
idivl
pop
mov
lods
loopne
push
inc
sub
popa
jno
mov
out
fisubl
mov
pop
popf
stc
out
jns
and
out
pop
sbbl
in
mov
inc
cmp
movsb
push
and
pop
pushf
mov
clc
and
leave
mov
std
sub
pop
movsb
shrb
nop
xchg
imul
jae
mov
mov
frstor
mov
sbb
add
divb
mov
xchg
jo
push
push
aam
add
mov
mov
jo
mov
mov
out
out
popa
cli
fistps
mov
decl
loopne
jno
push
jg
pop
in
inc
push
stc
xchg
pusha
nop
inc
xchg
sbb
enter
inc
movsl
push
inc
jge
add
stos
in
outsb
lock
pop
push
xlat
into
je
jmp
out
dec
xchg
dec
mov
pop
or
cs
mov
popa
cmp
xchg
repnz
int
pushf
out
insb
mov
incl
mov
loopne
pop
sub
mov
insb
es
add
out
fmulp
dec
shlb
add
hlt
test
and
push
stc
adc
push
insl
punpcklbw
adc
adc
pop
cmpsl
imul
mov
pop
sbb
sub
fidivrl
shlb
loope
fcomip
mov
lret
xchg
std
or
dec
mov
cmp
push
loop
mov
mov
mov
fisubl
adc
inc
stos
mov
lahf
lods
repz
orb
add
jl
lret
out
xchg
and
in
pop
stos
test
aaa
rcll
pushf
add
lock
mov
mov
inc
ficompl
cmp
push
lea
cmp
push
add
pop
or
jb
xor
shlb
mov
je
xlat
js
jle
push
nop
in
lcall
inc
jno
cmc
stc
mov
pop
jmp
jno
fldcw
mov
insb
sbb
into
gs
mov
push
jge
mov
popa
mov
dec
mov
out
push
in
inc
mov
adc
cmp
aad
sub
lahf
aad
mov
cmpsb
popf
pusha
jo
dec
xchg
adc
movsl
push
jae
inc
aaa
aas
or
lods
mov
pushf
loop
rcrl
and
inc
pop
lock
sbb
incb
stos
push
punpckldq
jmp
pop
mov
lret
push
pop
xchg
cmp
jp
popa
out
aam
loopne
shlb
jnp
pusha
lock
shrb
cmc
pusha
or
movsb
mov
xchg
daa
outsl
or
and
lock
and
dec
gs
pop
sbb
insb
push
ficoms
xchg
test
cld
mov
lds
pop
push
jbe
outsb
pop
xlat
arpl
aam
push
xor
jno
mov
popa
xor
cli
cmpsb
out
push
jns
cmp
mov
mov
sub
push
pusha
add
out
and
not
or
pop
negb
rorb
mov
pusha
xorb
rcrb
xchg
test
and
pusha
aad
icebp
jae
cmp
mov
jge
xor
cmp
dec
out
ret
inc
mov
fldl
xchg
inc
pop
mov
pusha
scas
add
and
adc
cld
lea
xchg
das
ret
cld
adc
aad
jmp
mov
orl
inc
lock
push
dec
lcall
mov
push
repnz
in
fsubrl
scas
outsl
and
popa
cmp
addr16
cmc
cmpsb
lods
mov
lahf
adc
outsb
arpl
out
inc
repnz
pop
aas
gs
push
sub
xchg
cwtl
pusha
ficompl
xor
movsl
jne
out
xchg
cld
inc
mov
imulb
mov
push
mov
pop
and
popl
loope
fs
add
negl
jle
out
in
jae
and
dec
cmpl
mov
push
fwait
and
ret
iret
xchg
repnz
and
mov
mov
popf
xchg
imul
aas
pop
scas
xchg
and
popa
lods
jp
dec
lret
ret
pushf
sti
sbb
divb
sbb
sbb
les
sahf
push
lret
ret
fistps
xorb
xchg
pop
stos
jb
mov
pop
add
cltd
scas
mov
cmp
inc
push
dec
mov
out
imul
movntq
stos
mov
sbb
mov
out
clc
pusha
loop
pop
cwtl
lret
pop
sbb
jmp
out
insb
mov
fwait
add
dec
or
bound
add
repnz
dec
xchg
cmpsl
pusha
rcr
ja
push
or
out
mov
sbb
or
pop
push
or
pop
xor
pop
leave
xchg
push
dec
or
imul
xchg
push
sbb
data16
pop
sub
jp
popa
push
aaa
pop
jl
xor
out
add
popa
cmp
xor
out
dec
xor
fdivr
fidivl
mov
mov
dec
or
jno
lds
dec
jl
push
mov
push
mov
lea
and
js
add
out
cmp
inc
out
clc
je
inc
pop
inc
push
mov
jbe
mov
cmp
je
in
fsubs
bound
out
mulb
inc
jae
les
insl
scas
out
pop
cmp
or
bound
sarl
mov
xchg
pop
pop
lds
mov
imul
pop
ret
js
outsl
icebp
fisubl
scas
jmp
mov
ja
cmp
pop
lods
inc
xor
pusha
ds
inc
inc
push
mov
out
cld
jno
jl
adc
adc
mov
mov
clc
and
pusha
cmp
xchg
bound
loop
lret
jo
in
stc
fsubrs
pop
mov
sub
es
data16
mov
pop
shr
dec
jg
adc
rcr
mov
imul
pop
test
lds
enter
out
push
lock
mov
ds
pusha
mull
es
inc
xor
ds
pop
push
fs
sub
xchg
mov
sbbb
fwait
iret
mov
loop
sub
sbb
sub
xchg
add
je
pop
cmp
out
push
xchg
jo
push
aad
mov
ret
mov
ljmp
pop
andb
fcoms
int3
mov
les
popf
dec
jge
divb
imul
sti
cld
mov
sub
jns
aad
pop
rcrl
lcall
aam
mov
out
cmp
out
lahf
fcmovnbe
jecxz
jle
gs
xchg
out
outsb
pop
inc
rorb
inc
dec
inc
cmp
aaa
push
sub
leave
sti
mov
and
lods
sti
mov
fmull
ss
out
imul
movsb
andb
sahf
insl
or
scas
mov
ds
cmp
lret
sub
or
jo
mov
popa
or
adc
out
lret
imul
dec
dec
lods
ret
out
cmp
pop
adc
jbe
stc
cltd
mov
push
pop
adc
out
sub
mov
push
mov
mov
in
aad
jmp
lock
or
inc
and
adc
xor
pop
pop
test
fldl
aam
arpl
mov
mov
and
or
push
loope
lds
fldz
movsl
popa
adc
xchg
push
pop
mov
jl
or
or
std
xor
lea
fimuls
dec
add
xor
xchg
mov
stc
out
insb
insb
sub
movsl
push
push
jecxz
sbb
push
inc
fbld
mov
outsl
out
add
loope
test
popa
cmp
mov
mov
pop
jl
gs
mov
add
or
into
adc
mov
cmp
push
repnz
pop
inc
sub
pusha
xlat
nop
lods
loop
popa
jae
jl
movsb
js
pusha
inc
iret
ret
push
mov
outsl
movsb
pop
mov
xchg
mov
and
pushf
stos
mov
pop
jne
into
xchg
test
stos
enter
sbb
out
sub
stos
and
mov
and
pop
stc
add
ljmp
mov
mov
mov
test
jge
sub
js
xor
and
insl
jo
add
js
pop
insb
aam
adc
test
repnz
in
jmp
faddl
dec
jg
test
and
popa
lahf
inc
lods
cmp
pop
add
out
xor
ret
loopne
lock
mov
pop
test
loopne
cmpsb
mov
pop
movsl
dec
sub
clc
enter
pushf
pop
or
and
sub
mov
mov
fsub
cwtl
sub
mov
pusha
push
lock
push
fsubr
xchg
out
cltd
xor
or
aaa
ss
int
out
dec
add
pop
push
jmp
lds
out
add
in
mov
add
mov
dec
dec
mov
pop
divb
and
popa
jb
lcall
repnz
into
adc
adc
mov
jno
lea
test
mov
pusha
push
rorl
mov
pop
and
call
mov
fidivrs
mov
sbb
lcall
mov
mov
pop
cmp
movsl
inc
mov
fwait
push
mov
popa
pop
es
xor
divl
jecxz
lods
pshuflw
pusha
js
mov
mov
lods
pusha
insb
loop
gs
ljmp
cmp
icebp
out
mov
jbe
out
pop
out
inc
pusha
ss
mov
in
decb
adc
sbbl
out
jae
sbb
inc
cltd
inc
lcall
push
inc
fstpt
pop
xchg
rclb
icebp
mov
pusha
lds
les
sbb
and
add
push
cs
sub
push
dec
arpl
adc
cmc
sub
jnp
sub
push
jl
out
or
in
cmpsb
sub
out
ficoms
out
mov
pop
jmp
ljmp
popf
and
pusha
loop
push
mov
mov
pop
adc
std
out
or
fucomip
in
pop
push
enter
mov
fcmovnbe
cltd
imul
sbb
loope
mov
inc
mov
dec
inc
lahf
xorb
inc
imul
mov
pop
jp
cmc
mov
decb
fisubrl
cmp
push
aaa
cmp
arpl
aad
shr
cmp
xchg
cmpsb
inc
mov
fisubs
mov
shlb
pop
cmc
jle
mov
popa
sahf
push
jge
mov
aam
push
cmp
and
aad
fstpt
pop
adc
movsb
mov
aad
aam
lret
jmp
mov
mov
cld
shrl
inc
iret
inc
mov
mov
add
push
push
sbbl
subb
into
frndint
inc
cmp
jp
push
pop
clc
scas
pop
push
and
lock
sahf
mull
add
adc
jg
aas
jle
mov
sahf
aas
xlat
push
pop
jmp
add
xor
jmp
and
jge
ljmp
lret
lret
addb
int3
sub
inc
stos
mov
push
cs
adc
addr16
mov
dec
cltd
into
loop
pop
sub
mov
loopne
inc
fistps
dec
popa
mov
js
xchg
push
xchg
cmp
mov
ds
aaa
pop
mov
cmpsb
push
adc
dec
sbb
xchg
mov
das
mov
mov
pushf
push
jle
xorb
mov
xor
xor
std
inc
adc
mov
ds
sub
sbb
and
repz
lahf
imul
je
cmc
js
pusha
popa
xor
mov
sub
inc
or
sar
les
stos
push
repnz
iret
fsubs
xor
scas
clc
pop
add
shll
std
out
sbb
icebp
sbb
cs
in
test
mov
inc
pop
loope
sbb
in
pop
pop
imul
fwait
mov
aas
notl
adc
sub
out
mov
loope
xor
aam
enter
cmpsl
xchg
push
ja
xor
pop
sbb
xchg
stc
into
and
je
repz
mov
pop
in
lcall
lds
xchg
jl
fwait
scas
fs
stos
push
cmc
jno
test
jmp
xor
stos
mov
fadds
jae
xor
frstor
into
sub
jnp
mov
pop
aaa
xchg
test
movsl
leave
jo
cmp
imul
rol
mov
sub
pop
clc
divl
dec
stos
push
mov
movsl
and
or
hlt
jmp
mov
out
sub
pushf
mov
inc
push
adcl
mov
int3
cmp
pop
inc
jbe
dec
mov
lock
xchg
push
push
inc
sarb
pushf
add
cmp
out
adc
jo
xor
pop
mov
sahf
lds
outsb
mov
and
sub
js
sub
xor
add
cmpsl
shrb
mov
xor
cmp
in
push
push
lock
icebp
xchg
pop
sub
sbb
mov
mov
jge
data16
pop
into
lahf
fcmovnb
pop
add
or
mov
iret
out
and
out
out
test
inc
mov
sti
in
rcrb
mov
shll
and
jno
int3
out
cmc
jno
jne
jl
sub
pushf
push
out
add
es
or
pop
sahf
sahf
jbe
gs
incl
into
aaa
sarl
fldl
and
repnz
inc
jo
add
popa
in
out
xor
cmp
mov
in
leave
andb
sub
or
pusha
loope
pop
pop
or
push
pop
out
iret
ud0
test
bound
jp
adc
fmull
cmp
sbb
xor
or
cmpsl
out
jne
scas
adc
inc
mov
mov
shrb
clc
xor
out
bnd
sbb
pop
or
pop
push
fs
and
cmp
mov
es
push
pop
sbb
pop
xchg
sbb
mov
mov
pop
out
loopne
cld
xchg
and
popa
add
in
push
jmp
js
jns
cmp
pop
mov
push
xchg
ja
icebp
adcb
dec
les
mov
mov
pop
dec
cltd
sbbb
mov
cld
pusha
cmp
ss
cmpsl
sbbb
pop
mov
push
stos
insb
dec
aad
mov
aas
pop
js
dec
lods
test
das
push
mov
shlb
push
inc
popa
aad
push
push
pop
imul
cld
jp
aaa
dec
sub
inc
add
inc
pop
inc
inc
and
jne
addl
fistl
mov
mov
sub
push
negb
xor
pop
mov
jle
cld
aas
pop
sub
sahf
sbb
pop
jns
fwait
mov
out
stc
je
fsubr
jge
in
push
in
mov
mov
rcrl
ret
lcall
clc
mov
xor
lret
fisttpl
out
fistpll
inc
and
les
sbb
movsbl
adc
pushf
cs
aaa
mov
push
cs
std
xor
sub
in
add
fbld
jae
inc
ds
addb
std
mov
out
lahf
in
push
insl
jge
in
cmp
scas
aas
xchg
in
pop
stc
pop
outsl
das
inc
add
pusha
push
scas
sbb
shll
inc
cld
push
fstpt
adc
fnstenv
gs
jp
mov
inc
add
pop
mov
adc
mov
push
pop
jae
jbe
jo
inc
test
mov
pop
loop
and
out
ficoms
pop
pop
mov
hlt
stc
mov
aaa
movsl
pop
and
clc
jns
push
lcall
call
negb
jle
cmp
sbbb
in
push
sbb
mov
fisttps
xchg
sbb
lea
mov
pop
add
mov
push
out
dec
sahf
lret
sub
and
push
js
mov
outsl
mov
and
sahf
les
test
inc
stc
mov
add
sub
shlb
leave
adc
pusha
in
aam
add
jle
sbb
and
pop
and
push
leave
dec
cld
mov
pusha
out
adc
into
push
adc
mov
test
mov
adc
jl
mov
popl
in
gs
in
and
mov
sarl
ds
fstp
mov
jle
in
imul
or
sbb
fxch
lods
lcall
mov
dec
es
mov
sub
inc
in
xchg
out
outsb
pop
loope
cs
movsl
sbb
push
jo
and
in
inc
movsb
xchg
ret
repnz
push
mov
lods
popa
adc
sbb
pop
popf
aaa
mov
dec
fdivp
jb
das
ljmp
repz
or
pop
dec
pop
sbb
cmp
add
inc
pop
xor
sbb
out
aad
repnz
mov
test
mov
sbb
and
cwtl
cmp
stos
sub
mov
test
fsubrl
call
add
pushf
pusha
mov
mov
cmp
pop
dec
gs
or
xor
lahf
arpl
test
filds
push
mov
cmc
push
imul
stc
mov
mov
xor
inc
pop
js
aaa
xor
popa
jo
inc
ss
add
loope
movsl
pop
sbb
aad
or
call
and
sub
dec
or
popa
mov
fucomi
mov
outsb
sbb
jmp
dec
popa
stc
arpl
add
pop
fmuls
out
mov
cwtl
push
adc
int3
sub
pusha
std
pop
cmp
fbld
jge
dec
and
cmp
inc
pop
out
push
addr16
pop
xor
stc
lahf
sub
sub
push
cltd
sub
jp
enter
pop
push
inc
jecxz
inc
imul
js
sahf
or
in
cli
add
xchg
lahf
jnp
pop
and
lea
add
xor
pop
xorb
pushf
sub
scas
icebp
lret
mov
or
pusha
xchg
mov
mov
nop
out
cld
dec
mov
cli
lret
js
and
push
icebp
or
insl
aad
dec
test
imul
or
pop
mov
mov
mov
out
js
mov
iret
xor
repz
idivb
or
mov
sub
pop
pusha
cli
mov
cltd
lret
lock
gs
inc
mov
sbb
and
pop
icebp
scas
iret
cmpsb
pop
test
outsl
stos
outsb
out
pop
sti
out
push
xor
push
mov
shrl
sub
pusha
fimull
dec
out
sti
lret
fisubrs
sub
pop
mov
mov
xchg
mov
movsl
pop
test
jmp
movsl
mov
push
xchg
mov
pop
xchg
js
es
sub
jns
scas
push
shll
pop
psllw
loopne
ja
dec
pop
dec
or
jnp
dec
adc
xlat
ret
mov
xchg
mov
enter
pop
loopne
ja
mov
mov
and
ret
pop
pop
popf
push
aaa
stos
mov
imul
cmc
inc
into
out
imul
pusha
jge
inc
xchg
mov
sarb
xor
xchg
adc
xor
dec
addr16
mov
adc
sti
lock
xchg
out
int3
bnd
xchg
popf
jne
das
dec
stos
inc
jmp
std
and
pop
loopne
leave
fcom
insl
lods
mov
or
mov
das
mov
add
mov
sbb
fisttpll
sbb
or
inc
out
pushf
mov
cs
adc
push
addl
mov
mov
or
push
xor
xor
shll
insb
cmc
pop
scas
rorb
lcall
imul
icebp
outsb
pusha
sbb
xchg
inc
or
nop
out
adc
insl
fdivr
or
mov
cmpsb
lods
lds
mov
popa
cltd
jp
inc
cmpsb
inc
dec
popa
pop
loope
cli
popf
clc
jle
div
inc
xor
scas
fsubs
sbbb
scas
test
je
sbbb
pop
nop
fwait
lods
popa
mov
xor
in
js
xor
sub
mov
test
add
pop
sbb
adc
adc
je
dec
adc
aad
cmp
pusha
or
insl
mov
cwtl
lock
sbb
xchg
int3
pop
ds
push
dec
push
loop
and
xchg
mov
dec
insl
xchg
xchg
out
iret
fnsave
and
cmp
fdivrl
ficoms
fdivl
mov
int
mov
add
mov
cmpb
sub
pop
and
fdivp
pop
xchg
stc
sub
pop
inc
lahf
outsb
xor
sub
sbb
hlt
xchg
dec
notl
jne
and
sti
cmp
pop
out
lahf
icebp
les
in
repz
or
shl
pop
clc
imul
mov
jge
scas
and
sub
jecxz
fsubrs
push
pop
test
mov
sbb
subl
mov
dec
je
test
mov
stos
push
pop
icebp
push
sub
loop
ja
adc
rcrb
fistl
ss
push
push
xlat
jle
pop
sbb
or
jl
stos
push
jbe
test
cmp
imul
lods
mov
mov
adc
pop
adc
outsl
push
adc
rorl
or
mov
or
cmp
sbb
mov
daa
mov
dec
pop
xchg
mov
gs
adc
cli
xchg
cwtl
adc
std
mov
jp
ret
cmp
out
test
and
jl
scas
xchg
jbe
out
sbb
and
mov
cs
addr16
loopne
pop
and
cmpxchg
or
pop
pop
fdivs
adc
push
lods
pop
sub
loope
rol
adcl
jle
faddl
or
icebp
inc
and
pusha
rorl
and
dec
add
scas
inc
or
and
ds
pop
xor
sbb
xlat
mov
lds
cmpsl
add
data16
test
cmp
nop
push
pop
lret
and
xor
popa
lret
lahf
adc
push
sbb
aam
fcomps
and
xlat
mov
mov
and
jmp
cmp
pusha
sahf
and
into
out
pusha
lds
ss
push
fsubrp
int3
pop
sbb
jle
and
pop
fucomp
fstpl
sbb
enter
punpcklwd
inc
inc
sbb
js
std
dec
pop
xchg
add
arpl
xchg
jl
hlt
and
out
jae
leave
pop
push
lcall
loope
js
jp
adc
aam
cmp
into
xor
clc
dec
stc
mov
pop
stc
pop
xor
ds
push
xchg
iret
sbb
xchg
shr
loope
test
inc
pop
bsf
adc
cmp
ret
dec
pop
push
hlt
pop
and
mov
frstor
stos
sbb
mov
cmp
pinsrw
icebp
pusha
inc
loopne
ret
idivl
out
or
sbb
lret
arpl
popf
int3
shr
adcl
fnstsw
shlb
and
clc
xor
adc
ja
addb
mov
aad
scas
add
pop
xor
nop
leave
or
pop
sub
ss
popf
test
adc
leave
nop
icebp
lock
fistpl
jae
dec
pop
sbb
pusha
jecxz
xchg
push
dec
cltd
mov
adc
xchg
in
outsl
cs
aaa
mov
cwtl
jmp
cld
ret
imul
mov
int3
adc
out
sub
clc
nop
insl
mov
lcall
jnp
dec
pop
mov
xchg
aas
aam
dec
push
mov
cmpsb
adc
pop
sbb
aaa
push
inc
push
fmull
repz
lret
ss
jne
and
mov
inc
push
fstpt
jnp
fiadds
stos
outsl
andb
jno
and
push
loope
pop
dec
sub
or
pop
pop
lods
pusha
rclb
lock
dec
mull
pop
dec
jmp
or
pop
imul
mov
pop
call
xor
xchg
cld
push
jl
xchg
add
mov
ja
push
push
outsb
pop
mov
outsl
mov
sbb
mov
je
mov
ror
pop
ficoms
in
xchg
cmp
lcall
pop
int3
test
fists
mov
ss
je
sub
call
ja
dec
dec
pop
inc
cmp
dec
push
adc
xchg
out
loope
call
push
rcrl
xlat
mov
repz
rcrb
enter
push
popa
nop
orl
push
pop
shrl
xor
sbb
and
aam
mov
leave
mov
adc
or
gs
ss
leave
pusha
cld
fcmovnb
sbb
out
inc
cmp
jbe
cld
push
std
jmp
dec
sbb
nop
das
mov
pop
and
imul
fdivs
cmp
fwait
add
cwtl
adc
mov
mov
or
popa
sub
mov
out
pop
jmp
push
iret
jmp
adc
cmp
call
fstp
mov
popa
adc
jge
mov
js
test
imul
daa
cmpsl
pop
mov
mov
cwtl
bound
insl
aas
xchg
ret
cmp
outsl
push
pop
std
leave
adc
jl
movsl
xor
dec
outsb
dec
add
cs
mov
out
mov
sub
pop
xor
mov
xchg
stos
mov
test
hlt
in
mov
mov
cmp
es
out
and
add
arpl
sbb
or
call
push
call
pop
subl
fsts
out
in
insl
sub
mov
decl
sbb
es
mov
inc
sbb
movsb
enter
ss
or
fiadds
ret
scas
dec
mov
pusha
test
inc
inc
scas
xor
dec
mov
ja
cmp
outsl
inc
lret
repnz
mov
ret
xchg
xor
inc
ret
xorl
xchg
jb
popa
ljmp
frstor
pop
inc
mov
mov
mov
in
mov
mov
mov
push
xchg
hlt
test
jecxz
or
pop
dec
fs
stos
scas
push
pushf
bound
push
jecxz
dec
fldl2e
xchg
out
shl
lea
lods
ret
test
cmp
pop
and
sbb
sahf
push
jl
in
movsl
nop
push
push
inc
insl
lahf
push
shrl
add
into
fdivl
idivl
pop
dec
inc
pop
loop
dec
push
clc
rol
into
leave
imul
xchg
arpl
push
inc
inc
js
and
arpl
sub
jo
sub
imul
dec
out
stos
inc
adc
cld
subl
push
push
in
cmp
fcmovne
push
out
in
out
cs
mov
fs
lods
ja
outsb
inc
mov
pop
out
fidivrs
mov
out
mov
add
and
js
inc
lea
fstp
outsb
sbb
xchg
pop
dec
add
aam
or
pusha
xchg
dec
decl
out
xchg
insb
sbb
mov
mov
repz
sbb
mov
add
clc
push
in
imul
xor
out
in
inc
fisubrl
and
mov
dec
push
mov
pop
mov
dec
pop
rolb
jle
aas
push
pop
xor
jnp
sti
mov
inc
bound
lods
dec
mov
pop
addr16
mov
pusha
mov
or
out
out
andl
jne
inc
icebp
fistpll
pop
pop
add
popf
push
loop
or
add
sub
out
cmpsb
rolb
mov
sub
out
fwait
xchg
insl
fstl
or
mov
xor
adc
jmp
pop
mov
nop
xchg
pop
imul
cmpsl
add
jae
rcll
cs
pop
in
inc
popa
fwait
stos
cs
icebp
adc
ljmp
icebp
ja
sbb
pop
push
and
mov
mov
adc
pop
xchg
sbb
sbb
out
loop
push
jp
mov
iret
or
pop
pushf
insl
addr16
ficompl
mov
ljmp
in
xchg
addr16
iret
pop
adc
cld
and
leave
mov
clc
xchg
push
sub
lret
add
push
push
mov
cmpsb
loope
out
xlat
dec
fcoml
jmp
mov
nop
add
out
push
subb
add
cmpsl
mov
mov
push
insl
arpl
test
and
std
aam
add
call
cwtl
xlat
es
scas
push
rcrl
dec
or
push
int3
cmp
mov
ret
mov
das
xchg
ss
pop
gs
out
clc
jae
popa
into
test
dec
aad
daa
out
jecxz
insl
in
xor
mov
or
mov
in
loope
dec
cmp
lcall
mov
fs
pop
aam
jns
inc
loope
mov
sbb
push
movsl
rorb
xor
test
lret
pop
jecxz
ficomps
in
fadds
repz
mov
pusha
dec
ljmp
dec
shlb
adc
jbe
js
es
ret
pop
int3
jb
and
pop
popa
push
loope
xlat
nop
cs
jg
test
pop
rcr
xor
push
lock
popa
shll
ds
and
mov
mov
push
dec
in
mov
pop
pop
and
xchg
mov
sub
sbb
je
out
fs
sub
pop
push
mov
xchg
xchg
in
or
lret
push
cmpsb
pop
shrl
pop
or
and
pop
scas
xor
enter
cmp
sub
pushf
out
cmpb
fsubs
imul
sub
or
jns
mov
cwtl
dec
pop
dec
pop
nop
pop
dec
mov
ja
mov
sbb
adc
in
inc
int3
icebp
pop
cmp
pusha
es
jmp
jae
cli
icebp
scas
jo
dec
adc
aam
sub
dec
rcll
cmpsl
lods
mov
sbb
or
leave
push
shl
stos
inc
push
add
into
fdivl
popa
out
neg
in
pop
mov
and
nop
and
jnp
xchg
or
pop
shll
push
push
pop
push
push
push
addr16
mov
andb
testl
scas
sbb
imul
xor
push
mov
dec
sti
inc
imul
cmp
push
jl
inc
inc
popa
loopne
addr16
push
shll
jbe
loop
sub
mov
jo
nop
mov
xchg
in
add
mov
add
enter
sbb
lods
xchg
cmp
fisttpl
pop
sahf
or
les
add
cmpl
and
cmp
jae
movsl
lret
cmp
pop
imul
inc
test
xchg
xchg
stc
xchg
nop
push
or
add
hlt
insb
das
test
shll
jl
mov
dec
jle
add
call
cmp
imul
cmp
mov
cmp
adc
shrl
and
xchg
sub
jne
mov
mov
xlat
ds
ljmp
pop
popa
test
pop
in
lahf
sub
inc
out
shr
mov
mov
jnp
es
mov
jb
pusha
movsb
loope
pushf
xchg
rol
aad
out
lea
js
sub
mov
fisubrs
pop
sub
loope
adc
cs
cmp
js
jae
pop
ret
mov
dec
sub
pop
sarl
mov
mov
jbe
ret
push
jae
lods
inc
sub
sbb
jns
mov
fmuls
pop
lcall
mov
pusha
jae
xchg
dec
cmp
in
cwtl
dec
and
imul
mov
sub
ljmp
in
add
mov
push
and
sub
xchg
cmpsb
out
inc
pop
or
sbb
mov
test
pop
xchg
std
decl
andl
jno
dec
notl
int
loope
out
movsb
ljmp
nop
arpl
out
sbb
dec
popa
fs
rclb
aam
sub
jge
fld
inc
iret
jno
dec
scas
ret
sbb
sub
in
mov
movsb
adc
xchg
in
add
mov
sbb
sbb
lret
out
jno
int3
xchg
out
push
xor
pusha
push
test
mov
popw
mov
hlt
xlat
stc
in
push
popa
sub
je
or
lret
pusha
cmp
dec
ficomps
mov
or
fwait
pop
movsl
addl
andl
mov
sub
pop
int3
add
cmp
out
faddl
fnsave
outsl
xchg
xor
popf
pusha
jge
jl
sub
add
popa
fstl
in
xchg
mov
pop
sbb
inc
pop
mov
outsb
test
outsb
test
dec
add
out
pop
jnp
sub
adc
js
mov
or
ret
std
in
cld
in
pop
scas
push
sbb
subl
pusha
push
jp
mov
cwtl
imul
sti
insl
or
mov
cmp
mov
pop
adc
mov
pusha
mov
lahf
push
out
out
sbb
loop
jnp
std
sbb
inc
pop
faddl
push
pop
repz
dec
pop
mov
jmp
loopne
in
ret
sarb
test
push
insb
cli
pop
inc
jmp
or
push
aam
imul
and
lea
xor
dec
mov
cld
lcall
and
mov
popa
fisubl
add
clc
dec
stc
pop
lock
jg
cld
outsb
or
xchg
out
mov
out
ret
sub
push
fcmovbe
mov
mov
pop
decl
cltd
cmp
cltd
sbb
ret
stos
bound
xlat
lahf
pop
and
aam
mov
pop
rcrb
jbe
pop
sbb
arpl
popa
out
mov
test
and
sbb
sbb
sbb
popa
sub
test
in
pop
scas
or
jne
fs
mov
insb
cmpl
and
stos
push
push
out
add
pop
fwait
adc
inc
fisttpll
xor
mov
mov
cli
pop
xchg
pop
add
pop
adc
push
lahf
pop
leave
lar
fsubr
xor
out
mov
adc
or
adc
imul
in
aad
lcall
jmp
ljmp
xchg
add
mov
mov
xor
add
imul
or
push
mov
aas
mov
inc
pop
push
adc
mov
pop
jns
mov
adc
pusha
dec
add
sbb
pmaxsw
loopne
pusha
ljmp
mov
sbb
ficompl
dec
pop
sbb
mov
cmp
or
out
pop
les
js
pop
mov
add
aam
clc
dec
lock
mov
jp
data16
xlat
pop
inc
pushf
shlb
xchg
inc
inc
fcmovbe
mov
xchg
out
or
dec
pop
sbb
adc
subl
and
test
mov
ret
movsb
mov
fs
out
jno
das
jle
test
xchg
dec
pop
push
fmulp
insb
je
aad
jb
lea
in
adc
out
mov
cmpsl
or
loope
outsb
jl
lock
xor
pop
sbb
sub
out
lret
inc
cltd
sbb
sbb
fs
rcr
aaa
push
iret
or
pop
sub
jnp
jb
push
out
push
jbe
aad
pop
aaa
pop
push
fnsave
int3
adc
test
out
push
mov
mov
pop
pop
enter
mov
in
sub
adc
push
rcrl
push
out
nop
scas
xchg
or
insl
sub
out
inc
cmp
mov
ss
mov
pop
mov
or
sbb
fimull
or
cmpsb
cmpl
inc
push
test
out
and
push
push
mov
test
xchg
xor
xlat
adcl
add
add
aam
or
xor
mov
mov
shlb
jg
push
xchg
sbb
into
lods
lcall
mov
call
loopne
pop
cmp
inc
inc
jecxz
mov
mov
jle
push
push
ffree
in
push
mov
int3
outsb
cmp
and
cmpsl
cmp
pusha
mov
pop
pop
adc
inc
fs
push
pop
jmp
stc
xor
mov
add
repz
sbb
imul
lods
jbe
push
int3
push
sub
xchg
mov
dec
mov
out
fidivs
lcall
in
fldcw
scas
sbb
adc
xor
dec
call
stos
pop
jae
pushf
mov
sbb
test
loopne
out
or
mov
xchg
out
test
push
lret
push
pop
pushf
stos
insb
wrmsr
jge
cmpsl
pop
stc
sub
sahf
mov
divl
fwait
dec
pop
popa
lods
arpl
jns
jb
in
push
inc
out
dec
add
xchg
sbb
dec
inc
cmp
fsubrs
mov
sbb
jmp
out
vunpcklpd
sbb
cmc
rorb
nop
mov
push
fbld
mov
call
popf
xchg
mov
jns
push
jge
fisttps
pop
push
mov
out
and
fs
push
bndstx
mov
out
gs
or
lea
rcrl
xor
cmc
ret
pop
fs
xchg
scas
mov
subl
push
rolb
lahf
push
pop
xchg
pop
xor
fnstsw
js
push
mov
andb
mov
mov
adc
sbb
cmp
xchg
inc
aas
cmp
fdivl
inc
jno
lret
sbb
shlb
jle
popa
lea
adc
mov
jge
pop
dec
mov
loop
pop
dec
int
lretw
aad
add
pop
icebp
jg
hlt
add
subl
imul
adc
or
pop
roll
mov
sbb
pusha
lock
cltd
out
mov
cmc
repnz
popf
fists
in
fldcw
fcompl
nop
rcll
sub
mov
test
push
lret
stos
nop
xor
xchg
jecxz
jl
mov
lahf
mov
dec
mov
ds
fsts
pusha
mov
inc
jg
out
cld
xor
in
scas
fildll
cmp
sbb
andb
adc
pop
push
mov
inc
repz
mov
push
mov
and
outsb
jno
pop
mov
or
fadds
and
pop
or
imulb
xor
fidivs
sarl
mov
jmp
adc
data16
hlt
rclb
in
xchg
inc
bound
xlat
ret
push
test
adc
repnz
or
repz
repz
inc
flds
pop
ss
sbb
cltd
and
push
mov
mov
sub
pop
insb
pop
mov
pop
or
push
jge
mov
pop
jb
mov
cltd
cmpsb
stc
push
jae
out
hlt
aas
pop
cld
inc
insl
sti
pop
movsb
inc
repnz
call
push
inc
ficomps
int
mov
dec
popa
and
inc
scas
adc
lret
js
mov
rolb
ficomps
lahf
mov
neg
pop
out
mov
andb
inc
ljmp
stos
test
dec
nop
pusha
jns
mov
pop
out
and
sbb
data16
and
cmpsb
pop
jl
aas
sbb
pusha
loopne
lret
iret
push
imul
add
mov
fs
ficoms
adc
cmp
push
mov
xchg
lahf
adc
cltd
cmp
outsl
adc
popa
mov
iret
dec
pop
pop
push
idiv
lock
and
cs
inc
xchg
mov
hlt
inc
push
mov
lods
std
dec
xchg
mov
loope
pop
jns
movsl
or
aam
rol
mov
xchg
xchg
in
jmp
cmp
cmp
orl
lods
push
in
pop
adc
xchg
hlt
dec
fs
lods
mov
xchg
lahf
cmc
xchg
shlb
mov
xlat
dec
adc
ss
adc
jnp
pop
fbstp
push
out
imulb
rolb
shlb
out
pop
dec
fs
xchg
loop
fnstcw
mov
scas
pop
iret
into
inc
subl
inc
call
mov
sbb
adc
popf
out
shll
jno
mov
insl
out
pop
lds
xlat
and
inc
fsubs
or
pop
shl
out
or
adc
imul
xchg
imul
push
jmp
daa
sarb
les
fisubl
out
add
out
arpl
out
mov
xchg
inc
lock
add
je
pop
jno
out
inc
js
std
xchg
mov
outsl
addb
mov
push
sbb
mov
jl
mov
movsl
dec
stos
insb
imul
notb
mov
int
sti
and
xor
sahf
scas
out
sar
jecxz
imul
inc
clc
movb
xor
xlat
or
add
loopne
in
pop
jge
stc
xchg
jge
mov
lret
fisubs
jmp
repnz
fwait
out
loop
call
jmp
adc
mov
clc
mov
pop
cli
dec
fpatan
push
sbb
in
out
shl
pop
movsl
sahf
push
jl
pop
push
movsl
pop
xchg
pushw
dec
jge
pop
pusha
gs
jb
out
je
fmuls
popf
rcll
pop
jl
out
jl
js
ret
sub
test
test
push
sti
ljmp
gs
fnsave
xchg
clc
xor
adc
lcall
popa
xchg
push
popa
movsl
shlb
clc
xor
xlat
out
pop
es
bound
sbb
jb
sti
lret
test
pop
cmp
in
aaa
ret
cmpsl
pusha
test
cltd
mov
iret
scas
jne
dec
mov
in
loope
push
and
stos
adc
mov
mov
mov
sahf
mov
sbb
lods
scas
test
inc
mov
icebp
cmp
imul
cmc
jmp
inc
xchg
jl
clc
insb
dec
lcall
inc
xchg
mov
imul
xchg
and
or
popa
std
jo
push
push
push
mov
sbb
mov
push
cmp
sub
pop
lock
sub
push
push
sbb
lds
stos
mov
dec
xor
add
mov
leave
int
pop
popa
popf
arpl
xchg
mov
sbb
ret
mov
jne
sbbl
std
mov
stos
add
incl
mov
cltd
xorl
cmc
out
push
cmp
add
adc
mov
test
pushl
movsb
pusha
mov
xor
loopne
mov
out
popf
outsl
pop
jecxz
pusha
rcll
mov
mov
fsubrs
insb
mov
fidivl
push
adc
sub
ds
mov
jae
out
mov
mov
mov
pop
and
inc
orl
pop
mov
add
aam
sub
xor
addl
es
jp
int3
scas
sub
mov
jmp
sahf
mov
add
pushf
icebp
pop
ficomps
jecxz
and
xchg
adc
pop
cmp
int
or
jl
les
or
cmp
mov
pusha
sub
out
leave
xchg
jno
adc
mov
shrb
hlt
aam
in
shll
add
das
or
pop
decl
adc
adc
nop
sbb
and
dec
dec
xor
jo
bound
cmp
mov
xchg
jno
pop
insb
movsb
mov
pop
pop
sub
pop
jmp
cld
jle
pushf
mov
fsubrs
loopne
cmpsb
sbb
mov
mov
arpl
mov
repnz
lea
mov
test
push
lock
out
adc
iret
roll
lret
out
dec
notl
out
add
inc
mov
mov
enter
pop
cmpsb
sarl
mov
mov
stc
fildl
test
clc
pop
loope
xchg
sub
js
int3
and
iret
out
mov
fisubs
and
test
scas
fisubrs
out
lahf
shl
imul
fists
pusha
pop
mov
add
daa
leave
out
dec
cli
inc
fistps
mov
or
pop
pop
and
out
jge
outsl
cs
lret
js
jmp
out
dec
push
mulb
sub
jae
xlat
or
orb
jo
les
sub
shlb
pop
jb
cmpsb
and
add
xchg
fildl
jne
sbb
mov
das
push
mov
fbld
loopne
lea
fs
fisttpll
pop
cmp
aas
push
mov
cs
aam
in
sbb
xchg
call
xchg
pushf
mov
sahf
scas
xchg
fwait
insb
pop
shll
jnp
xchg
es
pop
dec
pop
push
enterw
mov
lret
push
icebp
pop
cmp
xchg
jae
inc
or
popf
inc
inc
fdivrl
push
out
dec
popa
cmc
fxch
cmp
out
aaa
test
cltd
cwtl
mov
cmp
fldcw
jae
or
ljmp
adc
mov
push
cmpsb
daa
pop
outsb
cmpb
pusha
and
not
out
bound
test
mov
scas
out
loope
gs
xor
out
les
pop
outsb
pusha
jmp
inc
cwtl
push
out
and
xlat
sarb
jae
mov
inc
bound
pop
pop
test
pop
and
jl
sub
mov
out
mov
sub
mov
or
xlat
icebp
lds
mov
loopne
arpl
pop
dec
add
adc
mov
and
cmp
fs
dec
orl
jne
jno
jmp
sub
push
push
jge
mov
test
pop
and
jbe
or
sbb
out
jle
dec
ret
cmc
push
mov
and
dec
mov
int
jne
jp
pop
mov
data16
rclb
xlat
fs
adc
flds
call
sub
pop
mov
inc
lret
xchg
xchg
je
in
bound
arpl
inc
cmpsl
leave
cmp
xchg
in
int
ficomps
shrl
popf
xchg
push
mov
and
and
inc
jmp
out
sbb
pushf
faddl
pop
jle
sub
push
out
adc
adc
mov
pop
ja
es
and
push
ljmp
ficomps
or
jns
dec
and
sub
sbb
jl
loope
sbb
lahf
xchg
out
pusha
fists
add
sub
cld
pop
mov
add
pop
dec
out
out
lods
mov
daa
lret
sbb
mov
inc
in
sbb
out
test
pop
int3
roll
adc
fbld
ss
cmp
adcl
shlb
pmaxsw
fwait
or
mov
dec
mov
sub
in
or
or
pop
outsl
ss
pop
mov
sbb
sbb
outsl
mov
fdivrs
lret
pop
stc
les
out
xor
sub
cmp
hlt
and
enter
movsb
mov
fcomi
cmp
ljmp
and
push
fidivs
sbb
lcall
movsb
mov
jb
daa
stos
into
xor
jg
mov
cmpsl
adc
inc
and
cltd
mov
jmp
gs
scas
mov
popa
rcrl
and
loopne
daa
popa
push
jl
push
in
sbb
movsb
pop
fs
inc
pop
loope
push
loop
dec
jle
pop
mov
sar
sahf
xchg
pop
cs
dec
ret
sub
jl
movsb
xlat
mov
add
inc
arpl
cmp
iret
push
pop
rcrb
xor
pusha
adc
pop
jl
inc
add
and
pusha
movsl
stos
fsubrl
les
popa
inc
lret
sub
fs
out
add
push
je
cwtl
mov
stos
mov
xchg
loop
pop
mov
lret
mov
inc
repz
pop
mov
std
push
mov
lds
push
shr
rcl
pusha
mov
out
ss
stos
or
add
and
xorb
mov
movsl
imul
xchg
loope
mov
sub
popf
or
pusha
in
inc
fstpl
inc
adc
sti
dec
adc
mov
imulb
pop
pop
outsl
into
and
in
sahf
mov
inc
dec
push
lock
mov
inc
fwait
dec
mov
push
sbb
cmp
inc
pusha
cltd
pop
push
inc
pop
aad
fwait
xor
jnp
movsb
addr16
dec
pop
aad
inc
sub
fisubs
fmull
lds
jbe
popf
andl
or
and
adc
popa
sbb
sub
shll
stc
shl
cmc
pop
test
cli
push
xchg
and
dec
push
mov
and
cs
out
out
add
aad
jmp
fcomp
aam
clc
lgdtl
shrl
fldenv
jb
imul
loopne
dec
add
add
jbe
xchg
aaa
mov
and
in
mov
jp
dec
cmpsl
pusha
push
pop
aas
loope
cmp
imul
ds
mov
inc
push
dec
pusha
cwtl
aas
into
cmpsl
dec
ljmp
xchg
shrb
mov
xchg
fstps
pop
incl
mov
jae
xorb
dec
mov
lret
mov
mov
mov
in
add
repz
mov
imul
test
iret
out
adc
inc
pop
movsb
or
push
mov
add
and
clc
mov
cs
push
or
shl
push
jbe
cmp
adc
xchg
out
add
in
cmpsb
movsb
popa
clc
sbbl
adc
mov
sub
aam
pop
sbb
pushf
cmp
mov
test
and
shrb
sub
clc
pop
fs
pop
push
mov
jge
flds
stos
mov
fisubrl
sbb
out
jg
mov
out
popf
push
std
mov
inc
icebp
inc
xor
mov
int3
and
fwait
sbb
mov
pop
out
je
sub
dec
mov
loopne
test
mov
push
imul
xor
xor
lret
subb
repz
dec
shrb
adc
ss
jnp
jns
in
fcomps
jnp
add
icebp
adc
and
pop
pop
call
sub
mov
xor
jne
cmc
lock
ljmp
pop
or
and
xchg
push
lret
lahf
dec
or
imul
sbb
divl
push
mov
pop
sti
xlat
lds
mov
int3
pusha
mov
xor
mov
jbe
fcoms
jb
adc
movsl
dec
in
adcb
out
push
lret
mov
loopne
in
jg
push
and
lods
ljmp
pop
and
ja
xor
xor
packssdw
cmp
movsl
fbstp
out
or
pop
outsl
xor
push
pop
loope
xor
repz
mov
push
ss
jle
mov
jns
into
in
fadds
popa
lea
jae
inc
mov
sbb
movsb
fidivrs
and
test
mov
adc
loope
shrl
imul
jae
jns
sub
sub
inc
xor
pop
push
sbb
aas
fisubs
or
adc
push
add
frndint
paddusb
jne
pop
and
xor
add
or
mov
add
push
mov
out
repnz
out
pop
lret
push
in
je
pusha
int
jnp
mov
dec
stc
or
mov
sub
das
pop
arpl
and
mov
mov
sarb
dec
pop
jno
push
sbb
mov
dec
fs
mov
dec
popa
mov
aam
ret
add
call
mov
or
mov
pop
lcall
frstor
fstp
inc
inc
push
sbb
test
inc
inc
cmp
clc
jle
and
pop
mov
loope
out
inc
mov
cli
cmpb
cmp
mov
mov
jo
inc
je
inc
adc
js
dec
or
and
fsubl
inc
push
inc
pop
adc
call
pop
add
ds
and
add
pop
jge
inc
out
stos
loopne
repz
mov
mov
pop
xor
movsl
sub
and
bound
pop
lret
pusha
dec
repnz
std
cmp
sub
insl
or
add
shr
test
imull
scas
sarl
addb
std
pusha
sti
xchg
push
jae
pop
test
jns
jg
insl
mov
scas
loop
test
addr16
test
jge
pop
mov
xchg
stos
pop
fldl
push
out
fcmovb
ljmp
scas
rcrl
repz
mov
movsb
push
lcall
add
shll
shl
loop
push
in
mov
mov
jg
addl
and
inc
or
mov
lds
mov
aaa
jo
lods
mov
outsb
xchg
ja
push
inc
mov
sti
pop
push
nop
push
sbb
pop
mov
push
cmp
xchg
xchg
mov
dec
jg
pop
push
and
dec
sbb
add
fisubs
in
pushf
pop
sahf
leave
mov
add
ljmp
pop
lods
in
in
shl
add
mov
mov
idivb
imul
movsl
ds
hlt
jne
pop
cld
xor
cmpsb
in
ja
lds
test
ficoml
xchg
ret
scas
mov
frstor
xchg
repz
repnz
pop
pusha
movsl
adc
sub
in
adc
aaa
xor
xchg
pop
and
push
push
push
das
inc
in
mov
mov
loope
cmc
hlt
ljmp
lea
inc
ja
dec
outsl
or
ror
jnp
daa
loope
mov
jl
pop
pop
cmpsb
mov
push
or
std
cmpsb
pop
xor
repz
sbb
xchg
idivb
inc
xorl
in
aad
push
xor
cmpsb
pusha
sub
int
loop
das
js
insb
repz
dec
cmp
out
insl
aad
mov
mov
aaa
je
je
cmp
dec
mov
push
mov
hlt
pop
or
sub
pop
std
inc
and
mov
jo
push
popa
push
jge
test
out
lret
jp
add
movsb
out
outsb
insb
dec
int3
ds
shl
mov
cmp
pop
pop
repz
mov
out
mov
imul
addr16
push
and
jbe
ja
pop
mov
pop
out
inc
popa
in
sub
and
stos
cmpb
jle
mov
std
dec
insl
je
popa
cs
data16
mov
push
mov
push
leave
inc
popa
loopne
mov
int3
mov
mov
xchg
cmpb
or
out
outsl
std
es
mov
xor
stos
sahf
ss
or
lea
lcall
pop
cmp
rorb
jno
ja
and
jge
data16
xlat
xor
pusha
lcall
add
jae
pop
sti
iret
imul
out
xchg
cs
fucomp
mov
push
clc
add
dec
cmp
xor
insb
sub
add
hlt
pusha
imul
push
das
mov
iret
mov
mov
pop
xlat
mov
xor
fwait
mov
mov
scas
and
inc
cmpsl
addl
lcall
daa
push
test
add
push
pusha
push
xchg
pushf
cmp
outsl
fucomp
and
mov
cld
mov
fmuls
test
mov
sbb
test
push
xor
in
sbb
jb
mov
hlt
jno
mov
leave
push
fldenv
loope
addr16
dec
sti
loopne
push
pop
loop
scas
leave
shll
out
icebp
cmp
sub
gs
sub
aad
xchg
mov
test
mov
subb
jnp
adc
imul
add
pop
push
ficoml
jno
jo
sbb
jp
jmp
jg
sahf
insw
test
dec
mov
push
sbb
add
inc
jno
or
icebp
xchg
xchg
mov
shll
mov
xor
adc
mov
inc
cmp
mov
cs
dec
mov
test
jmp
sti
jle
xchg
dec
ss
pop
cmpsb
jns
pop
imul
dec
repz
fwait
lcall
daa
dec
std
mov
sahf
jp
jp
fcomps
sub
add
pusha
mov
adc
or
movsl
cmc
es
mov
mov
ss
out
xchg
fdivp
add
fs
cmp
and
mov
mov
cs
fnsave
mov
mov
xlat
std
pop
mov
es
and
cmp
call
pop
daa
gs
aad
adc
adc
pop
std
push
jle
pop
imul
xchg
in
movsb
and
addl
test
bound
loopne
dec
inc
pushf
out
mov
cwtl
addl
loopne
xor
jnp
cs
or
and
jnp
popa
mov
fcmove
jl
add
fcoml
pop
mov
mov
xor
sbb
and
cmpsb
in
mov
adc
ds
jb
fidivrl
in
js
popa
pushf
out
xchg
push
jge
add
aaa
imul
out
push
dec
jmp
out
fs
das
add
aam
xchg
sub
mov
sbb
push
data16
sub
fwait
and
add
inc
sub
cmpsb
clc
stos
and
cwtl
pusha
add
stc
and
hlt
mov
out
fildll
pop
or
pop
mov
or
aam
int3
push
dec
add
bound
daa
inc
pop
mov
mov
in
lds
bound
fiadds
xchg
es
mov
sbb
mov
push
cmp
pop
scas
dec
bound
pop
cmp
lods
push
and
cmp
push
ljmp
xlat
mov
xor
inc
es
mov
in
or
mov
xchg
adc
pop
and
pop
call
leave
sbb
xor
lret
gs
out
jge
outsl
jle
arpl
pop
sub
shrl
into
push
pop
add
aas
xor
sbb
and
gs
test
xlat
leave
mov
dec
sbb
hlt
pop
adc
js
sub
or
mov
adc
jne
out
aad
add
push
add
jno
mov
out
mov
ret
cli
mov
ror
pop
mov
lock
test
mov
lret
jae
push
mov
repz
xorb
cs
jno
aaa
xchg
mov
sbb
icebp
ds
mov
or
jnp
pusha
lds
loopne
mov
out
adc
pop
dec
std
bound
mov
sbb
adc
loope
adcl
mov
pop
mov
popf
hlt
jo
scas
in
imul
daa
cmc
jne
mov
outsb
ficomps
sub
fst
pop
add
in
fmulp
out
mov
leave
test
sub
test
sbb
out
stos
int3
xor
xor
bound
add
mov
fs
or
sahf
mov
and
sbb
dec
mov
ja
aad
sbb
sub
scas
fxch
dec
adc
xchg
sar
aad
lret
out
idiv
mov
stos
clc
adc
xchg
push
bound
push
jmp
mov
inc
outsb
lahf
mov
adc
popa
jae
adc
lret
jecxz
inc
loopne
cmpl
adc
vmovapd
dec
pop
mov
ds
ja
popa
iret
lods
sbb
test
movsl
outsb
pop
xchg
aad
xor
and
push
add
sti
out
sub
cmpb
aas
push
jae
sbb
out
sub
mov
add
aas
addr16
popa
dec
es
mov
pop
jb
xor
pop
mov
push
shll
mov
out
xor
mov
scas
andl
out
mov
mov
clc
mov
mov
cmc
cmpsl
xor
out
stos
data16
mov
popa
sub
jno
mov
inc
out
push
movsb
mov
in
pop
push
sti
cmp
arpl
push
rol
mov
jbe
pop
lahf
cltd
insb
or
addl
cmp
loope
adc
sub
mov
test
repz
rorl
jbe
mov
add
dec
pop
mov
mov
shrl
add
jmp
sbb
not
lock
fwait
cmp
call
scas
xlat
in
arpl
into
pusha
sbb
jo
jge
scas
mov
out
pop
cmc
int
les
rcrb
sbbb
and
and
movsl
orb
push
pop
out
mov
shl
popf
je
ret
pop
sahf
testb
pop
lods
and
loopne
mov
pop
jg
stc
loopne
pop
sahf
aaa
idivl
enter
pop
adc
pop
mov
clc
push
adc
pop
pop
add
test
popa
lret
iret
leave
jle
cli
or
out
mov
repz
add
sarb
into
out
jecxz
mov
movsb
fsubrl
dec
imul
imul
outsb
pop
cltd
push
ja
mov
imulb
xor
and
xchg
cmp
lcall
adc
filds
sub
mov
fwait
test
sbb
cmpsl
mov
clc
les
cltd
gs
pop
notl
inc
imul
in
aaa
mov
das
rcrl
lock
sbb
pusha
cld
dec
lret
add
loopne
or
xchg
loop
cwtl
lea
add
adc
loop
fs
aam
mov
js
mov
lret
out
and
sbbb
ja
or
pushf
lds
loopne
push
in
out
das
sbb
fimull
jmp
sbb
cmp
dec
test
sbb
xlat
mov
xor
adc
push
insl
dec
daa
sahf
push
data16
and
inc
xor
xchg
into
ficomps
clc
xor
js
xchg
xor
xor
sub
pop
decb
pop
mov
pop
xchg
ss
popf
stc
lret
pusha
hlt
dec
out
add
out
mov
mov
and
sbbb
cmp
mov
aaa
pushf
or
pop
insb
scas
pop
js
xor
scas
das
out
cmp
adc
sub
lods
mov
out
jmp
push
test
mov
and
dec
or
mov
fcoms
jb
repnz
in
pop
sub
xchg
fiaddl
pusha
ret
insb
ret
cmp
xlat
inc
add
sahf
cmpsl
xchg
mov
daa
neg
lock
mov
lret
mov
mov
jnp
adc
cli
mov
mov
aaa
add
push
iret
popa
clc
xchg
pop
xchg
mov
pop
pop
sbb
or
scas
out
push
xchg
sahf
mov
dec
and
pop
cmp
repz
cmc
ret
pop
mov
rol
xchg
pusha
shl
cmp
mov
mov
dec
ds
or
in
mov
aad
pop
sbb
sarl
or
vcvtss2sd
es
outsb
orl
movsl
mov
fmull
jae
fimuls
xchg
pop
cmpsb
enter
cmpsb
push
pusha
inc
mov
outsl
adc
pop
sub
mov
adcl
int
sub
sbb
pop
xor
stos
cmp
mov
and
icebp
loopne
push
mov
loopne
mov
in
adc
pop
push
in
call
pusha
pop
mov
es
shlb
bound
stos
loopne
mov
push
sub
pop
cmp
mov
cmpsb
orl
cmp
pop
mov
test
fstp
outsb
ja
and
ds
ret
dec
push
in
call
ljmp
notb
mov
add
mov
addr16
out
repnz
in
loope
test
das
pop
popa
or
pop
je
addr16
dec
cmc
in
pop
xor
gs
int3
repnz
ljmp
sbb
mov
out
imul
mov
cmpsl
push
add
mov
lock
test
mov
fldenv
into
jmp
push
popa
xor
fldl
inc
adc
movsb
fsubrs
xchg
jecxz
mov
inc
jp
loop
fmull
dec
js
test
or
dec
nop
int
out
lds
lea
xor
jae
sub
lret
fldcw
inc
mov
orb
ja
pop
push
push
cld
int
fstps
popa
push
xlat
sbb
outsb
mov
pop
clc
test
add
add
in
pusha
xor
lock
test
or
xchg
loope
loop
pop
jmp
mov
jmp
roll
pop
jmp
movsb
inc
jle
addl
cmp
mov
push
mov
lret
out
into
sbb
jg
ljmp
stos
inc
mul
sub
cmp
jle
addr16
mov
into
mov
aam
mov
test
or
add
push
fwait
es
push
ja
mov
in
ds
popa
push
movl
fs
pop
imul
mov
mov
arpl
push
jae
dec
mov
sbb
icebp
loop
push
popa
lcall
mov
mov
mov
pop
test
jmp
or
stos
shlb
int3
pop
mov
sbb
sub
clc
cmp
sti
test
inc
push
aas
gs
dec
dec
aad
sbbb
mov
loop
out
insl
pop
xchg
mov
mov
lret
jle
scas
sbb
sub
jns
mov
mov
or
jbe
mov
hlt
cmp
lcall
pop
cmc
mov
sbb
popa
xchg
mov
xor
mov
decl
sub
adc
repnz
jae
sbbl
pop
xchg
sub
mov
mov
leave
mov
repz
dec
movsb
ja
icebp
push
xchg
loop
loope
test
and
inc
hlt
pusha
adcb
or
pushf
pop
lahf
ja
inc
and
jae
mov
xchg
out
lea
mov
mov
inc
in
add
pop
inc
insb
or
rcrb
adc
mov
jns
fucomp
inc
repnz
pop
inc
aaa
push
mov
add
in
pop
push
out
mov
pop
push
push
mov
sahf
adc
mov
dec
insl
pop
sbb
mov
sahf
mov
pop
aas
adc
mov
pusha
dec
jae
pop
les
mov
push
and
mov
ret
jl
in
outsl
jle
jle
fiaddl
mov
jp
repz
pop
test
xor
and
xchg
jecxz
test
jae
imul
sti
stos
movb
or
jle
adc
aam
lret
push
inc
popa
incb
push
repnz
dec
and
pusha
ljmp
test
fucomip
jg
cmp
mov
out
mov
and
xor
mov
mov
sti
call
nop
cmp
jo
pop
mov
adc
in
lods
sti
inc
out
popa
inc
mov
xlat
dec
mov
call
jl
icebp
int
pop
aaa
popa
popf
loop
inc
pop
in
dec
out
lcall
sub
rorl
and
sub
add
pop
repnz
fcoml
fsubs
sbb
loopne
or
lock
movsl
or
cmpsb
inc
mov
je
mov
scas
pop
popf
pop
mov
and
xor
cmc
jnp
out
ret
popf
sbbl
push
pop
lahf
mov
imul
mov
or
stos
pop
or
lahf
insl
jmp
xchg
in
jb
dec
mov
mov
sbb
push
mov
out
aaa
cli
out
fs
cmp
enter
xchg
jge
mov
xor
pop
fisttpll
mov
push
cli
test
std
popf
inc
shrd
test
sbb
mov
cli
mov
dec
push
xor
insl
out
or
or
pop
popa
test
out
out
inc
mov
js
stos
dec
mov
xor
xchg
adc
pop
lock
and
rclb
jecxz
mov
or
jg
pushf
fscale
pusha
pop
push
push
test
out
loope
test
int
in
int3
xchg
xchg
fnstcw
int
rclb
add
mov
dec
rclb
or
movsb
pusha
mov
mov
aad
mov
push
scas
sti
lret
das
dec
divl
jno
jle
cwtl
or
outsb
fwait
xor
out
cmpps
daa
out
xchg
push
push
das
nop
push
aaa
popa
imul
arpl
loop
xor
mov
out
cmp
clc
adc
and
mov
pop
dec
repnz
cwtl
pop
ja
shrb
xchg
fsts
mov
popa
in
xor
loope
pop
test
lahf
mov
adc
imulb
cmp
ds
cmp
rol
adc
mul
xlat
push
xchg
dec
sub
shr
dec
jns
dec
aaa
pop
pop
inc
jb
cltd
leave
jle
out
dec
mov
mov
popa
mov
movsb
out
adc
push
mov
mov
divl
jb
cli
cld
std
ljmp
pop
sbb
lods
je
outsb
adc
jmp
xchg
loopne
sub
jecxz
in
cmpsl
test
cmp
popa
push
loopne
lods
xchg
pop
inc
push
insl
xchg
inc
loopne
fs
mov
cmp
gs
pop
mov
subl
adc
mov
pop
xchg
icebp
xor
sub
and
les
add
mov
out
call
arpl
sbb
pop
and
popa
jmp
mov
sbb
sbb
inc
icebp
adc
inc
adcl
sbb
or
pop
mov
and
test
ja
xchg
cltd
outsl
xchg
pusha
mov
test
lret
or
jle
or
out
pusha
jge
and
in
iret
inc
imul
fldl
lret
xorl
out
popa
pop
int3
mov
shll
jnp
flds
xlat
les
movsl
iret
jnp
push
xchg
sbb
push
pop
jecxz
fistps
popf
insl
popf
push
ja
stos
lods
inc
lahf
pop
jo
popf
push
cmpsb
jg
xor
xor
ss
push
xlat
nop
pop
jmp
add
xor
push
add
out
pop
nop
jmp
nop
push
popa
and
lret
push
pop
stc
cmpb
jl
pop
and
incl
imul
mov
mov
popa
out
inc
stos
jb
hlt
lock
aam
pop
jmp
in
roll
cmp
sbb
das
xchg
xchg
ljmp
lret
pusha
filds
data16
xor
jnp
and
lahf
mov
pop
pop
pop
jne
icebp
jle
pusha
fwait
mov
scas
sub
in
sahf
pop
test
rcll
cmpsb
mov
in
call
jmp
out
scas
sub
stos
pusha
jecxz
pop
inc
and
out
push
dec
test
inc
or
pop
out
ljmp
inc
lock
sub
jle
inc
outsb
in
and
mov
lods
adc
mov
lret
lahf
enter
ds
sub
cmp
inc
mov
pusha
fisttpl
inc
stos
add
mov
jle
dec
sbb
dec
adc
mov
popa
inc
mov
mov
cltd
arpl
jne
lret
add
movsb
in
adc
adc
rorl
cmp
xor
dec
mov
enter
push
lods
pop
scas
pop
es
dec
lahf
stc
in
push
bound
add
adcb
aas
aad
pop
cmc
lods
aam
clc
cmpsl
inc
xor
adc
mov
cltd
jmp
adc
sub
cmc
pop
mov
push
aas
add
into
sub
and
hlt
pop
aam
dec
mov
mov
sbb
rcl
pop
fidivl
test
test
push
inc
popa
gs
add
popf
mov
jl
push
add
movsb
hlt
mov
mov
fucomip
push
xchg
sub
cmc
mov
pop
ds
lahf
sub
and
insl
es
in
xchg
sbb
pusha
mulb
jp
cmp
int
aaa
fwait
mov
rcr
jno
data16
lcall
sub
xchg
sti
out
pop
jae
dec
dec
movsl
pusha
lods
jae
xor
aad
out
cmp
add
lea
sub
pop
pop
out
sahf
xor
xor
push
mov
lea
adcb
inc
mov
mov
xchg
int3
xchg
dec
pop
push
sahf
aad
lds
ss
adc
inc
xchg
in
sti
pop
sti
negb
xlat
jp
popa
cltd
mov
add
out
rcll
ret
mov
jp,pn
hlt
xchg
mov
in
xchg
std
shl
aaa
pop
stos
push
out
xor
mov
arpl
pushf
add
add
imull
mov
int3
mov
jne
pop
scas
fldt
adc
pusha
pop
lods
sub
sbb
shlb
fiaddl
pop
pusha
lcall
stos
push
cmp
adc
aaa
movsl
and
pop
xor
add
hlt
scas
imull
rcrl
and
les
xor
shr
mov
sub
pop
lret
scas
adc
xchg
fisubs
cli
mov
icebp
out
mov
aas
bound
cmpsb
mov
cmp
inc
out
addb
sub
jb
push
or
popf
and
rolb
push
in
mov
jbe,pn
mov
mov
cmp
jb
sbb
jle
subb
aas
inc
sbb
cli
test
movsb
dec
push
xchg
push
leave
fidivl
scas
xor
cwtl
push
mov
popa
jge
lods
push
out
add
fcomip
aam
pop
pop
mov
das
sub
cmpsl
pop
gs
popa
jno
cmp
pop
pop
jae
sub
push
jle
push
loopnew
insb
cmp
push
nop
push
inc
and
shlb
in
xor
fnstcw
stc
mov
mov
jbe
sbb
mov
rcll
insl
aas
mov
call
and
movsl
sahf
hlt
mov
mov
sub
test
mov
pusha
mov
aaa
cld
push
fsubs
pop
lods
sbb
cmp
cmpsl
int
pushf
mov
sub
js
aas
push
fsubrl
mov
mov
fsubr
orps
subl
mov
in
incb
lods
dec
cmp
push
in
daa
imul
mov
stos
ret
push
jge
popa
pop
pop
mov
test
or
cmp
and
dec
mov
mov
add
pop
or
daa
mov
les
out
cmp
xor
jge
cmp
loopne
adc
in
movl
subl
fildl
push
adc
lret
sbb
aaa
and
jae
sbb
cmp
mov
cmpsb
mov
mov
int
mov
loopne
lods
out
fistpl
shlb
rcll
roll
call
dec
popa
mov
xchg
xor
cmp
add
lock
adc
xlat
or
mov
add
xchg
add
dec
in
lahf
jb
rcll
xor
mov
in
cmp
sub
nop
out
cmp
push
pop
repz
test
add
sahf
jbe
mov
push
outsb
fdivs
inc
mov
pop
or
repnz
sahf
jne
add
or
cmp
es
add
test
inc
adc
dec
hlt
mov
ret
cwtl
inc
add
adc
pop
xchg
dec
scas
add
push
pop
cmp
inc
lahf
adc
insb
in
push
mov
pop
push
mov
jmp
pop
shll
leave
pushf
xchg
xchg
outsl
pop
jecxz
cld
xor
sub
mov
dec
movsb
push
addr16
imul
lea
mov
adc
fcompl
out
js
push
and
push
or
scas
adc
jmp
pop
rorl
pop
test
mov
inc
add
out
mov
push
test
mov
adc
xchg
sub
stc
xchg
fs
xchg
xor
xchg
test
pop
mov
jnp
cmp
insb
lods
pop
aam
add
xchg
push
loope
pop
fists
arpl
dec
popa
int3
mov
out
loop
aas
aam
lret
jne
out
or
xlat
int
pusha
add
stos
mov
out
add
rorl
lods
andb
pop
dec
pop
pop
sub
xchg
outsl
lcall
mov
andl
in
pop
out
or
in
stos
test
push
sar
arpl
or
inc
mov
sub
fimull
std
jb
hlt
pusha
andl
test
out
or
aaa
test
ja
pop
lcall
push
sub
mov
adc
popa
loop
xor
fdivl
out
mov
jge
jno,pn
push
mov
stos
mov
clc
xchg
fwait
out
sahf
sbb
addb
call
dec
rol
xor
ror
fidivs
mov
test
in
pop
dec
loope
inc
and
ror
into
cmpsl
jnp
mov
nop
fdivrl
stos
scas
hlt
inc
imul
push
cmp
out
test
inc
jecxz
dec
frstor
out
test
es
lods
jl
push
arpl
out
push
in
inc
xor
ds
push
inc
call
imul
push
pop
sbb
mov
mov
test
push
xchg
or
xor
ficompl
fsubrp
mov
arpl
out
mov
jmp
out
cmp
popf
divl
jg
mov
rorl
cmp
rclb
xchg
test
repnz
inc
movsl
and
cmpsl
orl
aaa
pop
lock
mov
pop
ficoml
xchg
xlat
or
loopne
add
mov
pop
out
in
and
xorl
sbb
in
mulb
or
mov
das
sbbl
push
out
push
pusha
pop
inc
frstor
lock
cs
and
imul
inc
sbb
pusha
jb
jg
ret
or
push
jne
mov
fistpl
xorb
movsl
jmp
js
jo
ss
popa
pop
in
and
jae
fsts
gs
vcvttss2si
sbb
das
mov
jb
sub
arpl
sbb
add
loopne
sub
adc
test
dec
mov
mov
mov
or
imul
std
and
aaa
mov
mov
and
pushf
pop
and
popl
xor
lcall
pop
nop
mov
add
jns
inc
sbb
lret
outsl
fnstsw
pop
call
push
dec
xor
cwtl
pop
dec
cmp
xorb
out
aaa
mov
into
xor
pushf
fisubs
enter
popa
and
cmpsb
dec
loope
or
lret
gs
pop
inc
add
ss
jne
ret
pop
or
push
cwtl
push
add
stos
int3
imul
mov
imul
sbb
scas
js
enter
pop
dec
push
dec
shrl
xchg
sti
and
sbb
popa
imul
push
cmp
mov
pop
cli
in
dec
dec
fadds
pusha
cmovnp
jle
fisubl
test
bound
pop
mov
add
sub
shll
adc
andl
cmc
and
aad
addr16
jb
mov
jnp
add
pop
and
jns
std
sbb
sbb
inc
lahf
xor
push
cmp
push
stc
or
mov
test
adc
fcomps
into
add
mov
stos
icebp
cmpl
dec
popa
aaa
mov
int
int3
mov
lcall
xchg
mov
xlat
pusha
mov
cmp
adc
cmpsb
mov
pop
outsb
lret
add
lods
lcall
mov
mov
fwait
sub
fs
jle
inc
adc
mov
sbb
fldt
pop
popa
fwait
mov
mov
and
rol
clc
mov
test
push
les
mov
cmp
arpl
shl
add
mov
xchg
jmp
sahf
jp
test
pop
sahf
aas
inc
sti
mov
cmp
and
and
stos
mov
pushf
dec
or
jecxz
insl
lea
adc
pusha
mov
or
shrl
daa
loopne
inc
stos
inc
mov
mov
cmp
scas
out
mov
nop
dec
arpl
into
and
sbb
jle
sbb
or
shrb
add
jge
pop
je
add
lods
dec
loop
aaa
pop
jmp
lcall
popf
inc
dec
sbb
frstor
push
xor
mov
mov
push
fisubl
and
and
pop
inc
inc
hlt
mov
xchg
scas
cmp
pop
add
dec
jno
inc
int
loopne
sub
adc
and
out
inc
scas
lods
stos
stc
jno
xor
arpl
outsb
and
lcall
insb
pop
mov
cmp
mov
outsb
das
test
dec
in
fwait
popf
push
test
insb
testl
in
pop
mov
add
xchg
xchg
pop
sti
pop
push
rorb
pop
inc
es
int3
xor
inc
stos
out
icebp
sbb
loopne
pop
pop
sbb
sub
pop
dec
push
jnp
mov
jb
lock
fstps
push
mov
cmp
inc
dec
popa
mov
pop
test
out
jge
and
cmp
xchg
aas
cmpsb
push
xor
or
daa
mov
xlat
mov
divb
test
cld
add
pusha
cmp
call
lock
sub
mov
es
lea
loop
std
mov
mov
sbb
inc
fsubl
out
pop
pop
inc
sub
sahf
imul
bound
out
popa
lock
xchg
push
andl
jns
push
frstor
add
jp
xor
xchg
std
sub
lahf
mov
test
pop
cmpb
into
outsb
xchg
mov
cmp
cmp
scas
mov
pop
lods
mov
adc
jge
cmp
xor
pop
pop
stos
pop
push
jbe
dec
shl
xorb
dec
test
pop
movsb
add
daa
push
popa
nop
rcl
popf
mov
adc
mov
ds
inc
sub
ffreep
jo
adc
pop
int
push
mov
xcrypt-cfb
cmpsl
mov
sbb
ss
cli
out
adc
lcall
rolb
or
jns
in
jbe
mov
pusha
push
jp
movsb
pusha
dec
rcrl
aam
jb
out
mov
lea
push
lds
lock
lock
hlt
xchg
push
aas
mov
cmc
or
stos
shll
jecxz
cs
enter
xchg
lahf
add
call
test
out
pushf
sti
xchg
pop
pop
mov
xchg
jl
cmp
imul
outsb
jne
jns
lds
xchg
adc
xchg
mov
out
sbb
sbb
inc
add
in
mov
adc
popa
jne
mov
jno,pt
pop
test
subb
sti
les
test
pop
int3
mov
aaa
fildll
clc
xor
fwait
pop
and
out
add
fwait
cmp
or
pop
adc
mov
pushf
pop
rcrl
and
xor
inc
sub
stc
daa
inc
dec
ret
push
mov
jns
mov
mov
lock
popa
mov
xor
pop
pop
stos
aaa
push
fbld
mov
sbb
rolb
icebp
test
in
cmpsb
jne
pusha
and
sub
ljmp
cmp
mov
mov
mov
sub
lea
fsubr
out
sub
fisttpll
pop
or
aaa
sbb
push
mov
mov
pushf
test
mov
and
inc
pusha
jne
fistpl
xor
into
call
push
nop
daa
sub
dec
add
jp
imul
xchg
and
adc
or
add
test
imul
or
incb
shrb
in
mov
mov
enter
lret
out
pop
sbb
int
mov
cmpsb
push
push
loopne
adc
jno
sbb
cs
lahf
jns
cs
or
movsl
ficompl
xchg
lea
sbb
jb
out
jp
jecxz
pop
aad
stos
mov
scas
cltd
push
or
dec
and
push
lahf
mov
jle
insb
or
push
addr16
fucomp
iret
push
pop
mov
pushf
mov
fistps
clc
xchg
ja
hlt
outsb
mov
or
scas
mov
mov
jnp
dec
pop
outsl
std
add
cmp
xchg
pusha
lahf
fmuls
push
in
mov
adc
outsb
push
aam
mov
sti
into
jmp
arpl
data16
popa
mov
into
push
sbb
out
sub
cmp
mov
cltd
sbb
shll
sbb
xor
clc
dec
pop
es
xor
cmp
and
and
clc
mov
push
or
pop
sbb
ljmp
sti
xchg
hlt
int3
mov
out
insl
pop
pop
jge
mov
sbb
sub
data16
jmp
out
cwtl
sahf
call
jle
enter
je
insb
lret
pop
pop
dec
and
dec
into
jle
mov
out
mov
insb
mov
ret
popa
mov
xchg
adc
or
jecxz
sbbl
fsubs
inc
inc
pop
insl
cmp
pop
inc
mov
mov
popa
push
lods
stc
xlat
stos
fwait
add
and
pop
in
cmc
mov
mov
cmp
mov
push
xor
jge
or
push
sbb
fisttpll
cmp
ljmp
push
arpl
sbb
add
sbb
cmpsb
fcompl
enter
test
adc
and
daa
xor
or
in
jle
andl
pusha
push
int3
xchg
pop
cmpsb
out
jae
gs
add
mov
icebp
mov
sbb
pop
jmp
pop
xchg
sbb
push
push
mov
push
lock
ficompl
mov
push
inc
jle
inc
jl
popa
cmpsl
int3
fldenv
lods
and
sub
lods
insl
mov
arpl
repnz
and
jecxz
jmp
rcrl
neg
pop
jg
ret
mov
out
inc
int3
jno
rol
cmpsl
mov
inc
shl
lods
lock
daa
jmp
dec
repnz
or
push
adc
and
dec
cli
in
jnp
test
inc
std
xchg
jb
cmc
test
xchg
sub
cwtl
or
pushf
mov
movsl
stos
mov
out
lock
popa
outsl
jmp
cmp
cmp
cs
inc
inc
out
arpl
in
jne
pop
add
push
pop
xor
xchg
addr16
popa
jne
cmc
push
ljmp
sarl
sbb
in
loop
shll
aam
pop
sbb
dec
movb
loope
sbb
iret
fwait
shl
lea
loopne
mov
pusha
rcrl
mov
lock
pop
and
jmp
pusha
enter
add
and
aam
xor
mov
ss
push
jecxz
sahf
cld
mov
test
pop
or
add
sub
pop
and
pusha
pop
xchg
mov
pop
cs
cwtl
bound
out
test
loopne
dec
pop
loope
cld
inc
pop
ljmp
in
jle
or
jb
popa
push
cmpsl
imul
adc
cmpsl
mov
int3
out
jno
sbb
add
sbb
and
daa
and
int3
pop
cmpsl
sbb
mov
pusha
push
in
icebp
icebp
test
sbb
xchg
fs
addr16
mov
ret
filds
jae
jae
fsts
loop
mov
adc
fnstenv
stos
ljmp
aas
fcomps
subps
cmp
inc
das
mov
push
out
mov
cmp
mov
xchg
arpl
sbb
cwtl
mov
jbe
xorb
bound
pop
aam
cwtl
mov
jb
mov
dec
pop
pop
inc
loope
dec
test
xor
das
xlat
and
jbe
arpl
push
lcall
jno
inc
in
enter
hlt
pushf
mov
mov
cmpsb
jg
and
mov
sbbl
lock
orb
xchg
scas
pusha
push
inc
js
imul
insb
mov
pusha
ret
lret
push
xor
in
popf
arpl
push
mov
dec
out
fimull
test
adc
sar
dec
mov
push
movsb
pop
ss
cltd
lahf
cmpsb
inc
jmp
mov
push
mov
divl
push
pop
adc
push
xlat
and
arpl
ficomps
pop
pop
inc
in
lods
ja
mov
xchg
popa
add
daa
dec
xchg
aaa
sbb
iret
sbb
pop
cmpsl
xor
repnz
mov
mov
out
fnstcw
mov
mov
dec
icebp
cwtl
pop
pop
sarl
jmp
insl
in
cmpsl
testb
dec
push
or
cwtl
xchg
fistpll
test
aad
adc
into
sbb
mov
pop
mov
pop
push
mov
adcb
negl
jge
repnz
sub
loope
repz
pop
fs
dec
cmp
push
and
mov
sub
and
insb
das
popa
pop
data16
sub
cmp
pop
aam
cmp
add
test
stos
lods
adc
cmp
dec
xor
xchg
xchg
gs
pop
mov
movsl
mov
sarl
jg
loop
aas
mov
cli
mov
sub
into
pop
sbb
jbe
loope
inc
jne
xlat
and
push
push
out
push
scas
xchg
movsb
mov
dec
inc
lret
pop
popa
icebp
push
add
imul
insl
add
cmpsl
fcoml
imul
add
out
jmp
lods
dec
pusha
xchg
movl
pop
imul
je
leave
loope
dec
adc
mov
mov
jbe
jbe
cs
pop
mov
jne
loop
push
loope
mov
jno
xor
in
pusha
mov
push
xchg
add
mov
jns
inc
out
shlb
xor
sbb
mov
icebp
fsubp
sub
mov
inc
shrl
jbe
and
xchg
loope
movsb
xchg
mov
fldenv
shll
movsl
lea
addr16
in
pop
mov
outsb
and
test
les
leave
sahf
adc
mov
rcr
mov
testl
or
or
mov
dec
pop
mov
mov
call
dec
lcall
jmp
fists
loopne
pusha
jns
cmp
add
mov
addr16
mov
mov
jge
pop
pop
jo
xor
xchg
ret
push
popa
enter
xchg
paddd
test
jmp
push
mov
je
out
push
popa
mov
out
xchg
in
fmull
mov
daa
jp
xchg
pop
test
call
mov
repnz
xchg
push
jbe
jge
outsb
nop
das
cmc
test
mov
mov
mov
pop
aaa
out
mov
mov
adc
mov
and
push
aad
inc
rcrl
xchg
xchg
lock
call
scas
sub
push
cwtl
ss
xchg
and
mov
pusha
sub
xor
testb
arpl
lcall
jmp
mov
push
mov
xor
mov
and
ret
out
mov
or
outsb
pusha
and
pop
inc
test
and
inc
mov
mov
push
mov
mov
pusha
insl
adc
stos
repz
arpl
xchg
loope
mov
cmp
pop
add
jmp
gs
sahf
repnz
xchg
fidivrs
loope
pop
in
cmpsb
fsubs
push
js
into
mov
or
out
push
enter
fcom
iret
xchg
jl
and
push
xchg
outsl
ficomps
stc
or
pop
out
fisubs
or
lcall
mov
cmp
dec
outsl
out
rcr
adc
mull
mov
out
ret
push
ds
cltd
repz
mov
jae
dec
jecxz
pop
je
int3
or
cmc
leave
pusha
mov
in
sbb
out
popa
push
fadds
mov
mov
jnp
xor
add
push
outsb
arpl
fs
sub
or
push
lret
testb
fimuls
stc
adc
jge
mov
dec
iret
xor
or
push
push
pop
shll
xchg
xchg
sbb
ja
pushl
pusha
sub
jo
stos
cs
outsb
mulb
mov
cs
or
outsb
aad
pusha
lods
out
and
adc
out
stos
sti
add
push
sbb
push
sbb
jle
adc
in
inc
jbe
out
add
pop
adc
adc
sub
sub
pop
stos
sbb
push
cmp
fs
arpl
mov
mov
movsb
aaa
addr16
pop
cmpsl
aam
sti
clc
ds
pop
pop
inc
in
inc
cmp
data16
vxorps
pop
inc
mov
xor
lods
xchg
mov
out
xchg
shrb
movsb
pushf
mov
nop
andl
pop
pushw
sarb
popf
cltd
mov
in
or
xchg
popa
js
mov
stos
mov
popf
mov
out
xchg
cld
sub
test
pusha
mov
pop
cmp
notl
mov
sbb
aaa
lods
pop
pop
and
test
cmp
xchg
pop
jnp
pop
pop
mov
xor
mov
in
dec
push
sbb
adc
push
shlb
fwait
cmp
sbb
insl
push
imul
mov
pop
and
loope
dec
insb
dec
das
pop
sbb
fsubrs
cmp
aaa
imul
fimuls
in
cmp
mov
in
xchg
out
inc
out
mov
inc
dec
xor
test
sbb
sbb
dec
dec
scas
jmp
lahf
cs
push
mov
cmpsb
xchg
outsb
mov
mov
stos
jecxz
dec
imul
bound
loope
outsl
mov
jge
mov
add
js
pop
push
das
out
shlb
xchg
scas
jmp
daa
sbb
adc
shll
mov
xchg
jmp
jecxz
push
out
addr16
cmp
filds
jnp
leave
mov
out
or
iret
sub
aam
jae
jne
jns
inc
fldt
mov
mov
pop
lock
cwtl
fiadds
fistpll
xor
xchg
dec
mov
nop
push
pop
add
jnp
sahf
xchg
scas
int3
and
add
nop
mov
jno
jl
mov
jge
cmp
pusha
int3
xlat
test
inc
popf
divb
out
xlat
mov
push
out
sub
push
fiadds
aad
adc
sub
in
mov
cmp
pop
stc
mov
push
pop
mov
push
les
stos
xor
outsb
mov
loope
call
add
and
aad
gs
mov
xor
push
pop
push
jne
rclb
xchg
pop
fstpt
popa
out
cmp
outsl
mov
mov
stos
push
push
popa
in
inc
repnz
cmp
and
faddl
and
arpl
mov
out
sahf
and
mov
into
inc
dec
xchg
jg
aaa
cwtl
mov
pop
sti
inc
sub
sub
push
dec
popa
cs
mulb
mov
mov
pushf
and
test
and
pusha
inc
jno
jge
xor
daa
es
jl
pop
push
dec
pop
and
dec
xchg
jle
jle
inc
bound
movsb
mov
sahf
mov
cltd
push
push
dec
mov
cmp
in
mov
lret
mov
and
xor
push
cmp
mov
jmp
out
stos
cmp
hlt
pop
out
fs
mov
mov
cmp
cmpsb
xor
pop
fistps
mov
jl
mull
cmc
out
loope
ds
popa
cld
or
scas
cld
lret
sbb
push
push
ss
mov
cmp
or
pop
popf
aas
jecxz
adc
sbb
and
dec
jmp
lahf
sbb
inc
dec
add
nop
sub
inc
sbb
mov
fiadds
pusha
mov
gs
push
mov
das
mov
stc
lock
pop
inc
push
or
xlat
cmc
test
enter
flds
and
leave
out
cld
stos
mov
ds
fwait
mov
fiaddl
out
mov
in
mov
std
xchg
pop
clc
pop
fwait
repnz
andb
pop
popa
push
shl
mov
out
test
xchg
lea
enter
repnz
insb
cmp
sub
cmpsl
shrl
mov
pusha
lds
mov
mov
out
push
mov
xchg
mov
xor
push
mov
lcall
ljmp
jp
sbb
sub
das
push
rcr
cmp
push
and
add
dec
sub
mov
out
mov
shrb
push
sti
out
cmp
iret
pushf
ret
jae
or
ret
mov
pusha
xchg
dec
push
mov
loope
scas
jns
sub
out
repnz
and
inc
add
jmp
stos
cmc
xor
arpl
les
repz
pop
xchg
pop
insl
aam
ja
inc
dec
jns
loopne
xchg
lret
pushf
xor
pop
in
adc
adc
jno
loopne
xchg
out
aad
jle
jge
mov
jns
cs
xor
out
mov
orl
pusha
insl
sub
mov
in
inc
movsb
andl
testb
ffreep
mov
pop
lock
pushf
push
pop
imul
in
int3
jmp
mov
mov
sub
mov
inc
or
and
adc
jae
pushf
divl
daa
jns
jb
call
arpl
mov
vrsqrtps
xchg
sbb
outsb
imul
mov
loop
push
test
and
push
scas
in
out
in
fldcw
xchg
dec
xchg
mov
adc
or
xchg
xchg
rcrb
shrl
addr16
or
les
out
sbbb
cli
jmp
mov
les
xor
dec
pushf
inc
lret
push
jbe
je
cs
pop
sahf
xor
shll
test
popa
or
pop
aaa
push
mov
loopne
push
xchg
out
gs
xchg
push
adc
fs
jecxz
test
xlat
pop
pop
sub
pusha
jae
popa
mov
inc
push
incb
out
mov
dec
inc
outsb
mov
popf
adc
add
sahf
fistpll
pop
out
jecxz
add
mov
and
push
shlb
and
lods
mul
xor
mov
scas
daa
dec
inc
pop
sub
mov
jnp
ss
sub
xor
imul
mov
push
add
xor
inc
out
xor
int
iret
test
dec
pop
adc
aad
xor
inc
push
sub
gs
mov
shl
push
adc
pop
push
cli
out
xchg
jno
std
pop
adc
mov
or
cmp
pop
clc
divb
popf
jae
jmp
std
cltd
cli
xlat
mov
sbb
add
into
insb
cld
repz
cld
jle
xor
lock
mov
mov
out
push
lahf
sub
mov
cmp
mov
enter
inc
popa
mov
cwtl
aas
out
enter
cmpsl
push
daa
xchg
xor
pop
icebp
sbb
cmp
popa
sub
jne,pt
les
sahf
sbbl
std
and
popa
fcmovnbe
mov
shlb
jmp
rorl
sub
jno
mov
das
stos
dec
int
add
mov
jo
into
mov
push
popa
add
mov
mov
push
mov
mov
cwtl
test
cmpl
xor
scas
mov
pop
arpl
out
fidivrs
or
popl
pop
push
push
or
loop
ja
jae
lock
dec
icebp
sub
push
mov
push
imul
mov
frndint
sahf
pop
cli
add
lods
sti
daa
out
sub
cmc
stos
dec
push
xor
dec
xchg
cmp
cmc
mov
mov
pop
jl
add
lret
pop
push
xchg
dec
jle
jo
stos
mov
mov
inc
cwtl
scas
push
fnstenv
outsb
push
jae
out
inc
add
lods
adc
repnz
mov
idivl
ljmp
mov
xchg
js
pusha
pop
add
mov
dec
popa
cltd
faddl
add
xor
mov
cmp
lret
mov
rorb
jno
add
or
push
mov
test
fdivr
cld
das
imul
push
dec
lret
dec
mov
out
pusha
movsl
jne
sbb
out
addb
cmp
out
push
push
lods
dec
mov
popa
mov
out
add
sub
jo
cmpsl
jno
sub
and
xchg
fucomp
andl
test
mov
dec
dec
jnp
jmp
das
push
xchg
pusha
push
leave
shlb
les
push
cmp
icebp
int3
and
sbb
mov
inc
out
stos
pop
jle
outsb
cmpsb
leave
inc
mov
in
xchg
into
pop
sbb
pusha
xor
sub
out
lret
les
and
lcall
pop
pop
mov
js
rol
mov
scas
inc
sbb
jmp
in
aam
pop
ja
out
adc
dec
push
jmp
repz
xchg
clc
aad
xchg
pusha
js
jg
insb
xor
dec
cmp
pushf
mov
sbb
daa
aam
dec
mov
dec
sbb
xchg
addr16
xchg
cmp
shlb
jb
push
mov
aad
rclb
inc
out
adc
and
fisttps
or
leave
jb
outsl
pop
movsb
jb
out
aad
hlt
loop
daa
lahf
mov
imul
add
mov
andl
add
rcr
mov
jo
mov
sbb
sahf
mov
lcall
shlb
outsl
gs
je
add
xor
xor
sarb
sub
xor
mov
xor
je
xorl
push
or
loope
imull
loopne
mov
pop
and
adc
ss
mov
mov
pusha
icebp
xchg
add
jp
mov
inc
mov
loope
inc
call
sbb
into
out
inc
adc
or
and
add
sbb
jnp
into
hlt
pop
popa
mov
jge
pop
es
push
popa
mov
mov
sbb
push
mov
fucomip
pop
cmpsl
pop
lods
push
pusha
arpl
xor
out
gs
mov
or
test
fs
jbe
pop
std
jmp
notl
aad
out
sarb
pusha
out
out
and
or
jmp
jmp
bound
popa
test
stos
test
outsl
jg
ret
sbb
test
in
and
push
loope
jno
inc
out
inc
aad
sbb
stos
cwtl
mov
sti
add
test
inc
push
xor
add
adc
mov
aad
loop
push
mov
cltd
out
pop
mov
mov
mov
stos
push
ja
xorl
push
xlat
xchg
sbb
pusha
mov
stos
ja
out
dec
mov
xchg
sbb
ficoml
mov
out
insl
stc
pop
sub
stos
sbb
iret
inc
dec
loope
in
cli
dec
cmpsl
mov
ficoms
bound
mov
mov
clc
mov
push
mov
fucomip
sub
adc
mov
outsb
dec
push
push
sub
jge
clc
ljmp
and
jp
ficompl
push
aaa
out
pop
in
pop
mov
hlt
xor
mov
lcall
fcomps
imul
pusha
inc
hlt
jecxz
push
js
mov
mov
shll
and
pop
pop
mov
push
int
pop
addr16
mov
int
cmpsb
arpl
mov
pop
in
leave
std
into
inc
les
fwait
aas
sub
xchg
in
and
test
mov
movsb
mov
jno
ja
testb
cmp
cmp
js
stos
mov
scas
stos
or
pushf
fwait
in
loopne
scas
insb
push
add
adc
and
mov
pop
pop
out
sub
xor
jb
cmp
ljmp
sbb
cmpsb
roll
or
sub
xor
add
pop
stos
sidtl
fidivrl
jmp
ret
dec
out
or
into
stc
inc
das
outsl
fists
xchg
scas
jmp
pop
fcomi
sub
push
popa
sub
sub
and
outsb
scas
cli
sbb
std
mov
lcall
xchg
dec
mov
fiadds
xchg
daa
sbb
pusha
in
mov
pop
shlb
cmp
outsb
mov
pop
nop
daa
fst
jl
sbb
pop
cmc
ret
xchg
rcr
mov
push
sbb
sbb
dec
imull
shr
xor
scas
cltd
sbb
fdivl
lods
repz
xchg
pop
xchg
add
lahf
mov
cmpsb
in
fstpt
add
pop
add
jnp
iret
pushf
out
fistpll
test
sbb
clc
push
push
test
mov
cltd
mov
stc
cmpsl
fcoml
out
xor
adc
cmpsb
jle
repnz
mov
popf
jns
mov
popf
pusha
fcmovnbe
mov
mov
test
out
cmp
mov
cli
jbe
mov
movsl
mov
adc
outsb
add
mov
dec
mov
js
push
into
mov
inc
jns
mov
lret
jecxz
and
pop
adc
push
in
push
sub
incb
mov
push
cs
mov
rcl
stos
jl
stc
dec
pop
push
dec
push
nop
insb
outsb
add
inc
aas
cli
push
and
js
pop
and
lret
jmp
rcrb
sub
dec
push
popa
mov
nop
out
in
in
or
and
mov
xor
pusha
push
dec
add
dec
andb
mov
pushf
mov
jl
cmp
pop
lods
inc
dec
dec
and
mov
call
in
sbb
cmp
imul
out
cmp
xchg
cmp
and
js
add
cmp
ret
int3
adc
mov
push
ss
lahf
xchg
pop
dec
mov
leave
mov
xor
test
or
xlat
xor
cmp
sbb
bound
lret
dec
outsl
push
dec
xchg
sbb
fisubrl
cs
xchg
jnp
aaa
jl
insl
add
dec
dec
xchg
pop
pop
cmpsb
sub
xchg
mov
inc
inc
imul
in
aad
addr16
mov
inc
sub
pop
fnsave
pop
cmp
mov
loop
pop
jb
or
int
lea
cmp
jl
push
sbb
ja
mov
pop
fnstenv
inc
jl
sub
test
jg
xchg
jne
fsub
mov
mov
xor
sub
arpl
lock
mov
call
test
mov
lcall
xor
sub
xchg
cmp
daa
out
das
in
sbb
sbb
bound
xor
daa
test
scas
icebp
lock
fidivl
pop
mov
mov
xor
pop
sub
xor
shlb
xor
clc
mov
add
aad
cmpsl
js
inc
jae
jl
cld
cmp
xor
sahf
ret
push
push
inc
je
int
fisubrl
inc
lret
inc
jmp
sahf
test
xchg
mov
imul
popf
push
mov
cli
push
xlat
mov
sub
imul
or
xchg
popf
sbb
into
mov
inc
test
fidivs
xor
pop
xor
and
aad
mov
adc
test
jmp
addr16
mov
popa
xchg
mov
test
fidivrl
pop
leave
shlb
cwtl
pusha
dec
push
out
adc
dec
icebp
push
lret
and
cmpsl
mov
lock
test
lock
subb
dec
lahf
inc
push
rcrl
mov
mov
jno
pop
aaa
add
push
popa
dec
or
ret
and
out
loop
dec
dec
jge
jo
mov
add
sub
or
notl
leave
lock
dec
test
rcrl
dec
movsl
inc
cmc
adc
test
cmp
aaa
loope
cmp
dec
andl
push
test
add
cmp
xchg
mov
and
fs
jge
jge
dec
shll
sub
or
adc
mov
ret
dec
push
out
fsts
mov
and
gs
mov
mov
mov
daa
inc
xor
ds
mov
push
rorb
xor
jnp
or
mov
mov
and
int
jp
inc
push
adc
push
cmp
ret
add
les
sbb
scas
out
and
xor
inc
aad
out
fiaddl
adc
xchg
stos
mov
fs
ret
mov
xchg
sti
fdivl
movsb
ds
mov
add
jle
mov
les
bound
iret
pusha
es
imul
out
fwait
inc
inc
xchg
mov
sahf
jge
pusha
movsb
cmp
sub
push
pop
and
xchg
aas
adc
fwait
pop
xchg
out
xchg
decb
ljmp
cltd
pop
lahf
push
shrb
sub
popa
and
inc
pop
ret
gs
cs
inc
push
pop
loopne
andb
ds
jno
or
stc
repnz
jae
mov
out
adc
out
add
pop
call
pop
loope
into
andb
shrl
pop
mov
mov
pop
xchg
call
or
or
cmp
jno
imul
loopne
fcoml
das
sub
and
inc
add
repnz
adc
pop
aad
jae
inc
lds
pop
repnz
dec
lods
mov
mov
sbb
das
lret
out
stc
rclb
test
out
add
scas
data16
gs
aad
cltd
ret
jmp
rcrb
int3
pusha
inc
pusha
mov
pop
mov
push
pop
mulb
nop
fcmovnu
pop
fs
shrb
aaa
movsb
and
out
push
rclb
lods
out
lcall
in
jnp
push
fstl
dec
sahf
hlt
out
pop
jp
jo
pop
or
sub
xchg
jns
jl
inc
std
int3
cmp
inc
shll
jno
test
into
shll
cmp
pop
popa
mov
fldenv
in
cli
cmp
sub
sub
shlb
out
repz
mov
stc
cmp
mov
pop
mov
jnp
lds
mov
fdiv
and
pop
test
dec
test
cmp
cltd
cmp
and
clc
sub
lods
pusha
js
popa
fwait
das
add
mov
xor
mov
stc
jmp
pusha
icebp
pop
arpl
out
mov
xchg
and
xchg
adc
mov
push
loope
rcl
insb
loopne
fucom
cmp
jae
in
mov
popa
dec
aad
cs
xchg
sub
xor
xchg
pusha
xchg
imul
cmp
fs
leave
xor
pop
imul
jle
mov
jbe
add
popa
mov
inc
ja
jl
pop
out
mov
lret
mov
insb
aaa
sbb
add
mov
or
cmp
mov
xor
loop
mov
ds
sbb
mov
push
add
add
cwtl
orl
add
gs
jmp
xchg
dec
xlat
mov
mov
mov
mov
push
pop
out
xor
xor
and
fs
dec
dec
mov
or
hlt
inc
ds
sbb
xchg
mov
icebp
cmpsb
stos
test
int
inc
xchg
dec
fistl
cmpsl
cmp
cmpsl
mov
dec
ljmp
mov
pop
cli
into
pop
ss
popa
pop
jg
xchg
scas
sar
sub
daa
add
sub
mov
inc
mov
outsl
fimuls
roll
xchg
or
and
jge
ds
js
int3
out
push
scas
xor
inc
in
adc
pop
inc
call
leave
es
mov
xchg
add
scas
jl
pop
sub
repnz
idiv
cli
mov
data16
mov
into
sar
push
dec
popa
xor
cmp
xor
cmp
test
mov
cmp
lea
pop
dec
cmp
lahf
or
and
jne
dec
push
jecxz
lret
sub
outsb
in
mov
out
shll
imul
push
insb
fistl
cld
fimull
push
fucom
add
pop
xor
filds
mov
jge
mov
shr
out
or
mov
orb
mov
mov
mov
mov
push
psrad
pop
adc
pop
push
sbb
rolb
int3
out
sub
pusha
jns
lahf
iret
pop
pop
pop
aaa
push
pusha
mov
pop
inc
popa
inc
lcall
push
inc
pop
push
outsb
rorb
jb
cmpsl
int
pop
and
cmp
mov
sbbb
sbb
inc
lret
pusha
xchg
xchg
out
stos
push
leave
and
insl
pusha
or
mov
mov
pop
mov
push
out
int
add
movsl
divb
popa
cld
pop
push
dec
sbb
push
or
iret
fs
xor
lds
fldenv
fiadds
and
cmp
arpl
inc
mov
mov
xchg
mov
dec
push
lea
pop
mov
sar
fdivrs
push
sahf
aaa
ficoms
xchg
sub
movsb
sti
jae
imul
out
jg
pop
jg
inc
and
stos
push
sub
cld
enter
sahf
loop
rcll
into
push
cmc
mov
out
pushf
mov
pop
push
aas
scas
mov
imul
test
mov
inc
int3
lea
inc
xchg
mov
push
je
enter
pop
or
mov
jnp
dec
pop
ljmp
mov
push
mov
out
mov
cmpsl
jecxz
mov
jmp
into
stos
lret
in
repz
sarb
xchg
test
push
into
push
pop
cmp
inc
je
jno
adc
mov
cmp
xor
loopne
jo
popa
inc
int
ja
inc
pop
adc
js
lcall
jmp
ja
call
pop
ds
loopne
add
push
movsb
inc
adc
cmp
jbe
mov
cmp
mov
out
sbb
das
mov
in
or
lea
je
push
pop
cmp
les
xchg
sbb
pusha
scas
cmp
out
mov
add
dec
scas
push
inc
xchg
add
nop
xlat
pop
adc
adc
lock
xchg
mov
fimull
vmaxsd
mov
add
insl
add
mov
mov
xor
jo
in
jl
cwtl
in
or
inc
lcall
insb
pop
sahf
ljmp
inc
push
jb
jnp
dec
pop
xor
popa
pop
adc
shll
addr16
push
jl
out
pop
js
mov
jae
popa
xor
orl
ds
pusha
shll
sbb
dec
push
lock
test
sub
mov
xor
mov
ret
inc
adc
stc
cli
pop
popf
enter
cmpsl
rcrb
ret
mov
clc
out
sbb
jo
add
lret
or
cli
dec
clc
cltd
sar
in
pop
clc
sub
mov
repz
dec
loopne
xor
pmaxsw
imul
je
test
cmpsl
pop
insb
lds
sahf
xchg
stos
mov
sbb
jo
cltd
out
es
ret
adc
test
pcmpgtd
and
xorb
jae
cmp
xor
mov
popa
mov
insl
shrb
mov
or
dec
add
mov
movsl
cltd
inc
mov
adc
es
cmovg
xlat
imul
push
mov
mov
jno
mov
or
or
addr16
shll
andl
pop
mov
mov
loop
loop
faddp
mov
andb
imul
sbb
lea
mov
shlb
push
or
out
sbb
icebp
ja
stos
mov
sbb
jg
jmp
filds
frstor
sahf
pop
jns
jl
sti
xchg
xchg
lret
testl
lcall
iret
add
and
out
mov
mov
inc
pusha
cmc
js
cltd
test
push
pop
fcmovbe
out
cmp
fimuls
jle
mov
and
jno
adc
test
arpl
add
call
jne
cld
sub
loopne
xchg
cmp
repz
fsubl
push
divl
xchg
dec
out
pop
dec
push
loope
stc
sub
pop
push
outsl
enter
jmp
popa
mov
inc
inc
push
in
or
jmp
insl
jne
adc
mov
aas
push
jo
pop
fs
mov
cmp
push
pushf
dec
add
test
sbb
mov
and
shrb
incl
add
sti
xchg
lds
sbb
in
xchg
or
mov
mov
fstpl
xor
call
and
shrl
stos
into
add
push
test
movsl
mov
push
sbb
pop
movsb
test
pop
lahf
icebp
push
sbb
inc
mov
adcl
fistpl
into
and
and
imul
scas
xchg
gs
out
mov
out
jg
mov
ret
in
pop
enter
push
daa
sub
pusha
shrb
xor
mov
pushf
outsb
out
test
fsubrs
mov
xor
in
xor
and
sub
pushf
jno
lea
adc
cmpsl
in
sub
imul
and
ss
or
mov
inc
mov
jbe
out
sar
loop
loop
xor
stc
pusha
jne
outsb
inc
fldt
jo
and
jl
js
iret
dec
loope
mov
ljmp
xor
jle
or
pop
loop
loope
mov
or
fwait
pop
add
test
pop
xor
cli
daa
call
xchg
pop
dec
xor
push
jg
ljmp
xor
inc
sbb
adc
add
imull
add
pop
shrl
rorl
out
fs
xor
outsb
shrb
pop
popa
lea
test
adc
lret
mov
inc
popa
out
test
jmp
loop
movsb
stos
and
je
fstpt
aam
mov
xchg
jbe
push
int3
out
movsb
jp
or
in
push
stos
mov
ja
xchg
loopne
inc
int
lds
dec
lods
icebp
mov
imul
andl
mov
out
mov
pusha
mov
mov
and
push
xchg
xchg
dec
ret
ss
adc
jbe
mov
call
movsl
and
nop
sub
xchg
jp
aam
rcrl
pop
jmp
lret
clc
lea
fstpt
jb
adc
push
lea
push
cmp
mov
cmp
popa
jnp
in
push
inc
jns
xorl
popa
lcall
inc
dec
rcrl
mov
inc
outsl
lods
jb
pusha
loop
js
xchg
jae
lock
stc
add
pusha
push
mov
sub
out
divb
ja
lea
out
pop
and
das
fwait
lahf
out
fisttps
cmp
add
cmpsl
mov
or
shlb
nop
add
aad
pusha
push
out
insl
stc
shll
imul
test
or
cmp
add
xor
inc
dec
repnz
iret
aad
ret
cltd
aaa
inc
rol
inc
subb
out
lds
adc
call
sub
sbb
push
push
add
call
es
popf
push
xor
arpl
cmp
pop
or
add
mov
jl
stc
test
ljmp
and
je
fwait
int
popa
scas
pop
imul
fwait
call
pop
movsl
outsb
xchg
mov
fisubrs
outsl
pop
roll
mov
aas
mov
add
xor
cmpb
leave
repz
test
jge
jae
mov
mov
mov
mov
push
dec
pop
enter
adc
or
ja
and
gs
xor
mov
mov
daa
scas
mov
call
xor
sub
pusha
mov
inc
mov
and
lahf
insb
fists
sbbb
pushf
in
push
cmp
out
push
jp
mov
insb
repz
out
pop
jl
jns
mov
dec
fldenv
or
and
xor
pop
jp
or
push
mov
fistpll
adc
into
mull
pop
pop
pushf
mov
sub
lahf
pop
ljmp
into
and
inc
pop
sub
rcrb
shl
push
inc
bnd
data16
dec
mov
jg
out
repnz
adc
jno
fsubs
js
int3
popa
pop
inc
mov
iret
out
xor
mov
pop
in
xchg
cmp
pop
adc
loopne
loope
xor
or
pop
lret
push
in
mov
jne
jl
pop
inc
shll
pop
jecxz
lahf
lcall
dec
sbb
cmpsl
insl
fcomp
xchg
loope
add
lret
movb
mov
outsb
je
aaa
mov
or
dec
inc
jl
paddb
or
rorl
pop
rcl
gs
out
lret
inc
jg
aad
xchg
aam
pop
movsb
ds
inc
call
iret
insl
lock
inc
mov
outsb
arpl
sahf
repz
push
cwtl
pop
in
pop
in
sbb
xor
in
jle
mov
cli
pop
addr16
jge
sub
sarb
jno
fadds
out
push
mov
pop
add
adc
adc
lret
insl
push
mov
je
xorl
popa
ljmp
mov
es
pop
and
dec
in
daa
sahf
inc
xchg
repz
aam
mov
add
sub
out
jae
mov
rcr
outsl
adc
jmp
lahf
ds
sbb
xchg
push
pop
out
mov
es
repnz
pop
push
rcrb
std
sbb
fistps
xor
xchg
jne
or
mov
pop
pop
push
push
pop
call
xor
js
pop
daa
les
in
out
xchg
pusha
repnz
jle
jbe
aas
out
xor
push
xchg
xchg
sub
out
jmp
jecxz
and
cmpb
lret
adc
or
andb
pop
jg
and
mov
loopne
push
pusha
push
scas
cmp
fmull
adc
or
push
or
loopne
sbb
push
jb
add
aas
popl
adc
ljmp
inc
adc
jle
test
jmp
rclb
pop
inc
or
ficoms
and
out
xchg
lret
add
dec
stc
hlt
dec
jnp
repnz
jge
test
mov
pop
inc
or
jp
xor
outsb
sbb
mov
lcall
add
cmpb
pop
lods
sbb
outsb
insl
xlat
pop
div
out
cmpsl
push
inc
sbb
int
cs
aad
adc
pop
rorl
out
movsl
mov
mov
add
ss
pop
pop
mov
loope
lods
pusha
repz
or
les
cmpsb
js
push
mov
test
xchg
outsb
mov
pxor
push
hlt
arpl
vsubss
call
js
pusha
in
sbb
lock
ljmp
rorl
jg
xor
mov
mov
lods
or
mov
or
jg
loopne
sahf
cmp
mov
imul
sub
sub
sub
mov
mov
icebp
push
adc
xchg
cmpsl
mov
filds
pop
jge
int3
jae
add
test
xchg
js
out
lods
sahf
sbb
lcall
mov
add
out
testl
scas
push
inc
jg
mull
dec
dec
lds
mov
ret
in
repnz
bound
pop
cmc
jle
das
adc
jb
adc
pop
popa
mov
ss
mov
in
out
loop
cmpsl
jae
adc
dec
adc
fimuls
mov
mov
and
xor
mov
fistpl
push
sti
jl
pusha
popf
lods
jno
nop
pusha
ficoms
out
mov
rcrb
mov
out
adc
inc
mov
lcall
lds
cmpsl
or
push
inc
jae
xor
fsubs
lock
ret
je
mov
mov
es
std
in
push
scas
ret
or
lods
inc
fldenv
lods
add
cmpsb
pusha
cmp
or
cmp
aam
loopne
push
mov
jae
ljmp
mov
mov
lcall
arpl
xchg
js
mov
push
mov
add
inc
jbe
out
jnp
sub
mov
push
sub
xor
mov
jae
pop
jns
push
or
out
aas
aaa
ret
xchg
lock
stc
xchg
adc
fistl
popa
cmp
stos
mov
out
jmp
pusha
pop
push
ljmp
mov
or
enter
jg
cmp
out
outsb
xchg
cmp
jbe
pop
daa
inc
or
fstpl
daa
xchg
insl
popf
xchg
lock
scas
or
popf
inc
pop
cltd
mov
cmp
popa
mov
stos
outsb
push
out
sub
xor
jbe
cmp
cs
jg
pop
lcall
cld
in
push
repnz
popf
outsb
nop
aam
js
pop
sbb
pop
mov
mov
mov
jno
fdivrp
pop
bound
addl
es
stos
adc
fsubs
jae
call
sti
out
adc
lds
add
push
add
ficompl
or
xor
dec
or
cmc
cmp
sbb
xor
faddl
nop
mulb
div
subb
out
adc
mov
test
xor
add
jmp
xlat
pop
adc
aaa
les
sbb
out
push
xor
enter
psubsb
and
jbe
mov
fwait
mov
mov
mov
jmp
aaa
fiadds
dec
push
insb
pop
aam
in
aaa
ljmp
sbb
pop
mov
push
jae
mov
and
in
cwtl
push
inc
imul
mov
xlat
call
outsl
xchg
pop
jo
cld
mov
lock
test
pusha
loope
nop
dec
incl
pop
aad
pop
xor
bnd
mov
mov
jmp
push
xchg
and
out
dec
jmp
rcrb
ja
dec
dec
inc
loopne
pop
bound
arpl
imul
and
insb
int3
adc
out
ljmp
scas
mov
sub
xchg
mov
call
push
and
imul
out
push
push
inc
sub
aaa
mov
add
sbbb
pop
or
test
mov
inc
adc
mov
jge
mov
xchg
push
push
testb
and
jae
mov
dec
jmp
mov
in
mov
push
xchg
cmp
inc
cli
mov
push
cmp
push
ficomps
stos
and
je
sahf
stc
xor
call
out
xor
push
mov
testl
pusha
mov
and
pushf
pop
push
add
or
lock
aad
add
xlat
xlat
sbb
mov
mov
sub
iret
dec
or
pusha
imul
popf
movsl
cmp
test
loopne
xchg
pop
repz
popa
adc
daa
or
mov
movsb
pop
out
sub
dec
cmp
pop
out
add
push
jnp
sub
cltd
inc
cmc
or
push
stc
sti
adc
aas
das
mov
push
push
stos
cli
pop
jge
adc
xchg
or
hlt
test
aaa
arpl
je
inc
and
clc
ret
jbe
andl
cmp
mov
and
call
out
push
js
in
jp
dec
xchg
xchg
mov
out
lret
jmp
sub
pop
pop
push
xchg
test
mov
or
pop
and
or
jae
xchg
pusha
imul
in
inc
mov
jg
pushf
cwtl
shll
push
pop
test
loope
mov
inc
jb
jge
inc
in
xor
sbb
mov
clc
fprem
and
cli
enter
test
ss
dec
jnp
out
pop
lods
mov
sbb
stos
dec
aam
jecxz
outsb
je
sbb
lds
fwait
pusha
inc
out
adc
xor
iret
test
add
inc
or
jne
inc
sub
out
mov
imulb
inc
mov
sub
out
bound
xor
vorps
xor
pop
out
push
popa
add
and
inc
push
test
fcomip
out
stos
jae
lahf
insb
add
push
das
es
sbb
jg
out
xor
pop
or
mov
add
mov
std
jp
or
out
sbb
mov
sub
outsl
push
repnz
aas
mov
movsb
mov
out
cli
xchg
mov
dec
mov
icebp
sub
cmc
pop
mov
cltd
inc
lahf
ds
rcrl
and
pop
cmp
and
test
lock
mov
sub
pop
shlb
testb
icebp
les
pop
dec
cmc
push
daa
mov
adc
pusha
aam
inc
bound
dec
jnp
dec
add
mov
test
popa
adc
or
arpl
mov
pop
mov
mov
push
addl
jecxz
int3
addb
je
push
push
mov
xchg
adc
ja
ds
cmc
xor
arpl
sub
stos
movsl
inc
jmp
fnstsw
cmpsb
les
pop
cli
incb
xor
out
mov
jp
stos
pop
cmpb
inc
cltd
out
pushf
xor
iret
jb
add
jmp
jb
cmp
das
push
bound
push
popa
pusha
lahf
cli
aas
push
ss
clc
loope
mov
sub
push
scas
orb
outsb
push
outsb
fstps
pop
test
jno
icebp
or
pop
test
dec
sub
outsl
andb
mov
jmp
ja
imul
jle
jmp
push
inc
int
sub
ja
jmp
adc
jg,pt
cmpsb
lret
jmp
loope
mov
push
pop
bound
scas
or
pop
dec
and
push
ffreep
sar
cmp
mov
popf
lds
sahf
push
and
in
js
faddl
imul
pop
xchg
mov
sahf
cmpsb
lods
pop
push
jecxz
call
inc
movhps
xchg
je
xchg
mov
and
xchg
pop
std
pop
icebp
lahf
mov
fcoms
sub
lock
mov
mov
lcall
sbb
cmp
mov
push
popf
outsl
insl
add
jae
xor
insl
das
mov
out
push
bound
shrb
mov
dec
aad
push
xchg
loopne
jp
out
test
es
adc
dec
mov
sbb
mov
pop
adcl
mov
js
in
adc
lock
or
xchg
xchg
pop
hlt
xchg
out
test
pusha
sarb
leave
out
testb
pop
imulb
inc
jns
sbb
les
pop
rclb
push
cltd
push
xchg
mov
cwtl
mov
sar
not
das
jns
mov
or
lcall
out
and
fwait
dec
mov
xchg
lret
pop
pop
test
add
pop
jmp
mov
jp
cwtl
into
inc
mov
mov
pop
mov
push
cltd
in
mov
sbb
popa
popa
pop
fldt
push
jle
fnsave
pop
lahf
movsl
out
inc
mov
pop
in
fwait
int3
test
scas
cmp
aaa
mov
popf
cs
das
push
test
cmpl
mov
adc
mov
imul
xchg
and
and
ficompl
rclb
or
fistpll
repnz
insb
mov
insb
mov
out
jno
sbb
jbe
shlb
sti
pop
adc
mov
not
ret
mov
pusha
test
add
sub
lcall
jl
dec
or
mov
insb
pusha
lahf
jo
cmovo
and
lea
mov
dec
cld
mov
shlb
pop
mov
cmp
hlt
std
insl
rorb
cld
push
xorb
fadds
jnp
mov
aad
dec
rcrb
rcl
loop
mov
xor
aad
in
jle
mov
cmp
jb
or
mov
cs
or
xor
xor
pop
lahf
mov
inc
mov
dec
popa
fsubl
inc
cwtl
and
lea
pop
mov
jge
gs
mov
add
and
cs
mov
ja
pusha
inc
test
pop
out
mov
mov
push
jecxz
mov
loop
inc
out
xorl
sbb
imul
push
stos
or
fs
addb
sbb
cmp
leave
cmp
mov
daa
mov
outsb
mov
into
test
jl
inc
negb
mov
in
daa
fcmovb
popf
icebp
stos
and
andl
in
xchg
pop
jne
sbb
mov
sbbl
out
adc
pop
jmp
xadd
mov
mov
jmp
popa
push
mov
push
out
not
addb
mov
lea
add
fidivs
pop
ds
push
mov
fmul
sbb
pop
push
cmpsl
or
mov
sub
sub
gs
push
push
and
mov
push
and
cs
test
sbbb
mov
adc
scas
fstps
ljmp
dec
popa
sbb
dec
fldt
sub
dec
decb
pop
incl
outsl
sub
jl
imul
cwtl
cld
add
mov
cmc
pop
lret
test
lods
stos
test
fwait
mov
ljmp
dec
sub
mov
push
xchg
jle
pop
xor
ds
sbbb
cs
inc
and
jmp
or
sbb
cmp
push
xor
push
loope
insb
cmpsb
fs
sbb
shl
outsb
jecxz
inc
inc
mov
cmp
xor
and
popa
and
mov
dec
out
ds
jns
sahf
idivb
scas
cld
pusha
mov
mov
cmp
out
out
xor
movsl
daa
ret
out
jo
pushf
gs
jo
pop
fcomp
sub
add
ret
xor
pusha
gs
cld
mov
out
scas
push
movsl
pop
outsl
xchg
inc
cmpsb
scas
sbb
jo
data16
sbb
daa
cmp
popa
sbb
test
pop
cmp
mov
pop
push
outsb
loopne
and
pop
inc
dec
sbb
ljmp
push
cs
add
aam
mov
fwait
shll
lea
push
ret
dec
pop
adc
mov
xchg
ds
lahf
js
push
ja
loopne
fxch
and
inc
xchg
data16
cmp
mov
fldl
cmp
push
sub
jne
movsl
pop
xchg
stc
xlat
stc
add
mov
jge
pop
out
ja
ss
scas
dec
cmpsl
xor
pusha
or
test
ficompl
pop
movsl
decl
pusha
xchg
or
jne
fsts
mov
in
mov
cmp
inc
mov
mov
and
mov
in
push
xchg
arpl
aas
jae
mov
sub
pusha
sbb
shlb
sub
out
adcb
inc
lods
cmp
dec
popa
or
fmuls
out
in
outsb
jne
aad
and
inc
pop
das
pusha
repnz
sub
dec
xchg
std
mov
cmp
jmp
out
pop
xchg
mov
lret
pusha
shlb
loope
push
mov
jge
bound
sub
pop
pop
andb
jp
popa
lds
enter
inc
sbb
add
sbbl
adc
dec
repnz
mov
sbb
add
loopne
cmp
push
cmpsl
push
push
bound
pop
ret
cmp
or
jae
push
adc
scas
jl
dec
or
aam
pusha
jp
scas
popf
into
pusha
jo
jbe
jecxz
sti
sbb
icebp
lds
hlt
mov
adc
pushf
clc
test
pusha
sahf
cmp
insb
out
mov
leave
lret
out
adc
pusha
push
xchg
lret
fwait
push
xchg
out
push
xchg
and
enter
dec
or
lods
clc
loopne
mov
jp
mov
pop
insb
mov
pop
mov
fs
incl
cltd
arpl
test
cwtl
test
fs
push
push
adc
push
jle
pop
mov
mov
das
ret
sbb
mov
and
cmpl
orb
dec
or
popa
mov
xor
rep
fbstp
sbb
movsl
sbb
mov
pop
adc
dec
inc
lcall
dec
lcall
outsb
xchg
enter
arpl
jmp
lahf
flds
sahf
popa
xor
out
jo
imul
mov
mov
xchg
inc
fsts
pop
xchg
add
in
mov
jbe
jecxz
in
daa
pop
mov
or
into
mov
daa
roll
test
adc
in
in
sbb
mov
test
sbb
adc
pop
ret
jo
sahf
and
pop
mov
dec
int3
sub
pusha
nop
cmpsl
adc
xchg
aas
stos
lret
pusha
shr
cmp
inc
int3
repz
loope
mov
add
dec
les
je
lcall
inc
inc
or
pop
xchg
je
repnz
push
shlb
subl
mov
aad
scas
out
jne
movl
inc
xor
inc
imul
add
sub
xlat
lret
inc
test
xchg
ja
out
xchg
push
pusha
fnstsw
adc
outsl
push
sub
int3
mov
cmpsl
push
cmc
movsl
test
movsl
hlt
xor
sub
or
clc
pushl
push
daa
addb
xchg
cmpsb
test
or
mov
clc
scas
jge
repz
lahf
nop
mov
mov
sub
sub
popa
or
fnstcw
mov
jb
popf
mov
or
dec
xchg
push
icebp
push
mov
arpl
push
int3
inc
test
add
xlat
lret
xor
or
xchg
and
out
inc
popa
push
sbb
sub
popf
leave
das
ljmp
imul
int
push
popa
inc
dec
vpackssdw
popa
mov
sub
or
xor
ror
setne
cmp
out
std
dec
test
clc
mov
mulb
sub
sbb
add
push
inc
mov
pusha
mov
in
mov
cmp
fwait
xchg
mov
jae
out
cmp
and
lock
jne
fldcw
mov
fimuls
in
sbb
sti
js
sbb
inc
mov
adc
jge
ret
lods
jne
cmpsb
jns
repnz
pop
xor
inc
in
inc
pop
mov
push
addb
dec
cmpsl
pop
fwait
shlb
xchg
mov
cltd
cmp
imul
test
in
mov
je
fisubl
pop
movsb
outsb
dec
test
repz
divb
out
xor
push
call
aad
mov
test
mov
sub
sbb
out
jae
mov
mov
imull
sbb
clc
leave
xor
aam
xchg
ljmp
pop
add
fdivs
cli
jae
scas
insb
jo
jns
inc
cwtl
pop
mov
pop
fsubr
and
ljmp
shrb
test
clc
adc
in
out
jo
xchg
mov
mov
inc
and
pop
xor
mov
mov
and
lret
insl
push
adc
sub
pusha
mov
inc
mov
mov
mov
out
pop
sbb
setno
stos
lods
pusha
xchg
stos
jns
out
xchg
jmp
add
pop
cwtl
sbbl
into
jmp
xor
sarl
jg
push
xchg
test
fildl
fidivl
loope
arpl
leave
faddl
stos
mov
push
mov
dec
scas
mov
xorl
in
push
and
ror
lods
jb
pop
pop
adc
push
xchg
push
imul
pop
pop
mov
sbb
sbb
jle
test
out
sti
xchg
mov
and
cmpsb
push
out
pop
or
movsl
and
outsl
xorb
scas
and
xchg
mov
xor
stc
mov
mov
or
sbb
jmp
dec
loope
jbe
fucom
fisubs
and
dec
and
mov
adc
push
mov
push
or
pop
cld
stc
xchg
sbb
pop
dec
cmpsl
dec
push
fistpll
add
add
test
mov
pop
stos
aaa
dec
dec
or
repnz
dec
or
sbb
xchg
dec
mov
in
in
push
or
pop
sbb
xchg
cmpsl
test
mov
sub
pop
pop
pop
cmc
jp
and
sbb
sahf
stos
jbe
mov
push
and
mov
das
test
push
and
dec
xchg
dec
mov
jecxz
and
sahf
push
push
in
mov
jge
les
add
xchg
push
sub
out
jp
js
add
out
int3
js
rcll
cmp
lock
js
xor
sti
in
push
loop
loope
pusha
and
repz
pop
sbb
icebp
lahf
fbstp
jb
dec
pop
lret
and
scas
das
aam
jl
adc
scas
je
cmpl
jno
test
mov
push
mov
adc
push
cmp
cmp
push
xchg
movsl
stc
xchg
mov
sbb
in
inc
jae
jmp
and
test
push
pop
mov
dec
add
fstps
xchg
xor
inc
inc
shll
push
fdivr
mov
mov
add
iretw
cmpb
jae
pusha
dec
pop
mov
stos
dec
sub
fs
mov
lock
add
into
mov
pushf
orl
shl
push
jle
pusha
inc
or
out
and
adc
out
inc
pop
xorl
pusha
pop
inc
sti
jmp
jmp
rorl
into
add
xchg
pop
pop
jg
cltd
lret
daa
or
xlat
xchg
xchg
mov
js
adc
movlps
or
sub
jmp
std
dec
jmp
loop
pop
popa
sbb
out
cwtl
pusha
lcall
mov
adc
addr16
outsb
lahf
xlat
ljmp
repnz
pop
xor
outsb
out
add
pop
mov
call
repz
fisttpl
andl
inc
adc
jno
enter
push
out
in
movsb
adc
xchg
lods
loope
mov
mov
mov
out
sbb
jp
mov
xlat
mov
push
lcall
add
cwtl
xor
jne
nop
pop
scas
mov
test
movsb
in
xchg
xchg
mov
testl
xor
scas
aam
adc
xchg
shrb
lret
sbb
ljmp
in
sbbb
or
stos
rolb
popa
faddl
stc
rcrb
dec
pop
lahf
xor
shlb
and
inc
add
lds
sbb
movsl
and
clc
les
in
addl
pop
test
sahf
lret
adcb
sub
in
mov
xor
add
aas
jg
jle
stos
jbe
in
ficompl
add
sbb
dec
out
pop
inc
mov
lock
stos
test
jns
add
dec
stc
out
loope
in
mov
ss
adc
xchg
mov
jmp
out
jmp
jp
mov
pusha
mov
xor
sbb
stos
and
push
mov
mov
test
add
xchg
cmpsb
dec
cmp
int3
enter
loopne
push
out
loope
inc
cmp
and
mov
sbb
imul
push
mov
popa
mov
std
movsl
shll
add
into
fnstcw
mov
rcrb
fistpl
push
lods
mov
outsb
imul
pop
jo
daa
das
xchg
and
mov
jl
lahf
jecxz
push
mov
pop
mov
dec
inc
icebp
out
pop
and
test
popf
lret
popf
dec
in
mov
sbb
lcall
xchg
pop
sub
jge
sbb
test
shl
cwtl
shll
cmp
lcall
lret
mov
jb
ficomps
into
fcompl
xor
jns
xchg
mov
ret
sub
jns
cmp
mov
pop
jne
jae
inc
add
ss
in
xor
out
pop
inc
lock
xchg
std
mov
sti
int3
arpl
inc
out
out
mov
mov
mov
shll
rcll
lret
dec
pop
scas
push
sar
popa
dec
fistl
and
mov
jne
mov
xchg
ds
test
mov
fwait
cmp
mov
ljmp
dec
shll
pop
xor
push
cmp
out
je
inc
cmpsb
cmp
sahf
jmp
xchg
xchg
out
and
or
sbb
lds
test
mov
push
pop
dec
mov
lods
bound
or
cmc
cmpsl
test
mov
adc
gs
repz
sahf
out
sbb
xchg
sahf
inc
data16
mov
sub
int
and
dec
sbb
xchg
aam
adc
repnz
cltd
adc
add
aad
and
test
jge
mov
dec
ja
icebp
int3
add
ja
xchg
lods
fs
mov
add
insl
js
dec
push
and
inc
push
data16
mov
mov
mov
testl
stos
outsl
loopne
mov
pop
aaa
push
addr16
repnz
fldenv
push
fistpl
sbb
mov
sbb
repz
lods
push
orl
test
adc
cmp
cwtl
stos
pop
cmpsb
jge
push
add
add
dec
je
jae
mov
inc
js
sub
fs
popa
sbb
into
xchg
ds
imul
push
pop
pop
inc
int3
aad
orl
xlat
sub
mov
dec
mov
pop
xrelease
int
adc
icebp
jge
add
dec
outsb
ss
xchg
mov
dec
xor
pop
popa
sub
pop
mov
jno
sbb
and
shr
insb
pop
pop
out
adc
stos
xor
mov
pop
push
xchg
lret
jmp
andb
ret
scas
sarb
pop
lret
int3
cmp
ret
mov
push
dec
loopne
rcll
fcom
adc
and
mov
pop
push
inc
dec
popa
jle
push
inc
sub
xchg
mov
push
jo
inc
sarl
cmp
inc
es
ljmp
mov
in
jp
mov
icebp
clc
sub
clc
lds
ret
lods
and
jle
jno
pop
or
xor
jo
ljmp
insb
cmc
stos
or
add
mulb
arpl
or
fdiv
int
dec
orb
lret
icebp
cltd
pop
rcrb
outsl
repz
xor
loope
and
jmp
push
add
xchg
push
das
arpl
xor
popa
inc
inc
and
out
xchg
fwait
ss
push
lret
mov
xchg
push
or
push
or
scas
stc
mov
sti
ja
sub
jnp
out
cli
mov
adc
lret
mov
fs
test
ret
nop
in
dec
mov
pusha
das
sub
shr
pop
icebp
out
xor
cli
xchg
mov
insb
lods
xchg
pop
mov
in
xchg
xchg
pop
jb
shll
rcll
loop
mov
sbb
shrb
arpl
icebp
lahf
mov
mov
sub
push
enter
cmpsl
sub
cmpsl
sarl
das
jno
gs
lea
sbbb
inc
sub
mov
fbld
adc
pop
sub
dec
xchg
les
cmp
mov
add
fistpl
adc
lret
mov
sub
cmpsl
out
push
push
add
mov
gs
outsl
pop
xchg
and
scas
test
mov
or
movsl
sub
test
repz
push
shl
shl
jecxz
enter
test
pop
add
xchg
jae
cltd
clc
pop
and
xchg
sahf
add
xor
inc
clc
push
mov
mov
dec
test
mov
lods
mov
scas
icebp
je
dec
pop
dec
mov
into
mov
jno
push
adc
scas
or
and
fnstsw
ljmp
xchg
shr
out
cmp
roll
mov
add
imul
lahf
in
mov
pop
js
ficoms
mov
mov
inc
aam
pop
aam
out
data16
adc
jns
add
outsb
xchg
pop
pusha
jl
sbb
xchg
jns
lock
pop
jnp
addb
jne
jns
lret
or
ljmp
xor
pop
sub
outsl
xor
int3
jae
enter
sub
mov
std
jg
fs
xor
sub
dec
enter
push
out
ljmp
mov
sbb
pop
mov
pop
xchg
dec
imul
adc
call
jnp
das
xor
enter
popa
hlt
lret
das
insl
inc
mov
ss
cli
stos
add
and
dec
outsl
popa
popa
out
or
mov
insb
push
dec
or
enter
scas
push
pusha
cs
push
mov
popa
out
dec
popf
cmp
icebp
outsb
pusha
xor
inc
push
enter
cmpsb
ljmp
push
cmp
shll
out
jl
das
pop
inc
out
mov
ret
js
xchg
mov
outsb
cs
movsb
mov
add
sub
jne
into
xchg
mov
aad
and
adc
movsl
xor
or
in
jne
jp
cs
cmc
cmp
cmp
pop
sti
mov
xor
adc
push
push
sub
sub
mull
icebp
cli
push
jle
sub
pop
or
ljmp
jns
repz
sti
fs
lods
sub
pop
xor
pop
dec
lret
or
mov
jg
out
addb
lahf
mov
out
xchg
scas
push
xchg
mov
pop
sub
cld
mov
in
inc
xor
mov
adc
pusha
mov
call
int
sub
pushf
scas
push
adc
sub
pop
pop
in
inc
xorb
jns
sar
and
in
dec
inc
push
pop
loope
dec
ret
outsb
lods
jb
add
repz
ret
or
cmp
push
sub
inc
push
in
mov
adc
or
aas
aaa
aaa
sti
push
mov
pusha
xor
jae
out
fidivrs
xchg
xlat
push
outsb
push
lea
and
loope
andl
xchg
mov
enter
in
shlw
in
pushf
repz
movsb
mov
xor
in
rcrb
lods
fidivrl
ret
dec
jge
pop
jl
pop
aas
aam
les
mov
sub
fists
push
push
push
push
stos
ja
mov
pop
clc
outsl
sbb
insl
add
stc
std
std
mov
clc
iret
leave
xor
inc
shll
jecxz
sub
and
mov
addr16
pop
leave
or
xchg
fstps
pop
subb
pop
xlat
push
stos
sub
subb
push
inc
icebp
es
push
pop
cld
cmc
mov
std
mov
lret
sub
stc
adc
cmp
fstpl
sahf
jo
pop
ficompl
inc
mov
ja
and
mov
and
jae
and
popa
aas
sub
sub
fistps
pop
jl
sbb
cmp
mov
dec
jnp
sti
dec
mov
xor
mov
pop
dec
pop
jae
add
dec
pop
xrelease
jp
fisubs
fnstsw
fucomip
sahf
push
out
pop
ds
or
pop
jns
sbb
int3
sbb
mov
scas
inc
mov
push
or
and
sahf
mov
loop
sete
leave
or
push
pusha
mov
and
dec
push
fmull
cltd
repz
fbld
mov
xchg
sti
aas
hlt
insb
call
aad
push
pop
loop
push
insb
clc
out
inc
push
leave
and
fstps
arpl
lds
jl
in
push
mov
mov
subb
sbb
lcall
inc
and
icebp
mov
adc
jl
lods
lods
hlt
out
fimull
mov
cmc
cmp
pop
adc
pop
jmp
fstp
pushf
or
pusha
pop
scas
aam
xchg
jge
lcall
mov
inc
jmp
stos
mov
pop
into
adc
jo
cmp
sub
xchg
push
popf
jno
add
mov
fldt
fnsave
sbb
outsl
push
mov
xchg
push
xor
nop
das
push
imul
xchg
js
lea
mov
xchg
mov
sbb
fbstp
add
jne
movsl
or
xchg
arpl
pusha
in
mov
sbb
xchg
lods
mov
aaa
add
das
pop
cmp
inc
in
sub
test
push
out
test
shr
test
jecxz
mov
pop
sbb
dec
lret
xlat
cmpsb
sbb
fisubl
and
arpl
jmp
pushf
mov
xor
gs
jae
nop
jmp
pop
aas
mov
add
pop
adc
push
mov
repnz
sub
lahf
push
js
pop
push
les
js
out
lds
jb
cmc
shll
loope
cmp
and
and
pop
cwtl
lret
lea
mov
out
inc
cmp
addl
pop
and
frstor
je
loope
dec
popa
dec
or
stos
jg
mov
pop
sbb
push
push
fmull
jnp
mov
dec
inc
stos
pop
mov
shlb
movsb
jecxz
adc
pusha
mov
mov
nop
hlt
mov
cltd
out
ljmp
mov
mov
pusha
xchg
sar
cmpsb
jle
pop
lds
mov
es
cwtl
cli
out
std
fiadds
hlt
mov
push
jne
cmp
aad
push
aam
sub
mulb
fcomp
and
pop
popf
std
jmp
and
nop
jne
cwtl
and
inc
out
ret
movsl
cmpsb
xor
pushf
push
inc
in
fsubrp
push
call
or
inc
sbb
lret
ds
popf
ss
lret
fistps
adc
push
cmp
mov
or
push
dec
jbe
sbb
jge
es
test
pop
adc
cli
fdivl
push
mov
jge
decl
and
dec
sub
push
fdivl
fistl
dec
jp
pop
in
jle
fisubrs
add
jae
fwait
sbb
pop
jl
orl
push
pop
test
sub
orl
mov
fldl
jae
push
pop
sbb
and
out
jbe
outsb
add
int3
out
sub
popa
dec
or
in
faddp
pop
sub
pop
insl
cmp
int
cld
pop
repz
stos
mov
xchg
lahf
xchg
loopne
sub
pop
cmp
leave
shrb
stos
ds
xor
pusha
aad
mov
dec
push
adc
repnz
in
pop
lods
jl
pusha
ljmp
mov
out
mov
add
dec
mov
dec
into
push
pop
mov
sub
mov
mov
lds
mov
imul
test
dec
jmp
in
sbb
dec
je
jge
inc
mov
mov
insl
dec
orl
or
and
mov
mov
push
iret
int3
fstpl
xlat
dec
xchg
or
out
cwtl
js
imul
adc
lahf
pusha
and
push
hlt
xchg
test
pop
popf
nop
add
mov
xchg
and
adc
pusha
daa
int3
jg
mov
stc
ja
jmp
and
data16
jmp
lea
ret
aaa
popa
push
into
push
pop
stos
mov
into
rcrl
mov
jnp
popf
xor
pop
sahf
sub
lcall
popf
mov
push
xchg
inc
sbb
xchg
lret
subl
push
leave
mov
lret
push
pop
call
repz
push
sbb
push
jb
push
cmp
xor
jmp
pusha
inc
mov
std
push
aas
xlat
and
dec
insb
jle
outsb
adc
ret
jl
pusha
xor
std
daa
xchg
cltd
out
int3
or
cs
mov
in
out
lea
out
sbb
mov
stc
lcall
movsl
rcr
sub
jmp
mov
sbb
lahf
pop
test
sbb
movsb
cmpsl
hlt
mov
mov
cmpsl
push
xor
xor
pusha
test
push
cli
fistl
hlt
pop
pusha
sub
clc
pop
out
sbb
addr16
adc
inc
out
pop
and
inc
cmp
jns
andps
fstpl
addr16
in
cmpsb
arpl
insb
pusha
jne
sub
xlat
es
repz
mov
test
ds
inc
mov
or
ficoml
lea
mov
jecxz
sarb
repnz
mov
mov
mov
xor
sahf
movsb
pop
pop
push
mov
inc
clc
rcrl
mov
roll
in
cmp
mov
icebp
movsb
aad
jl
mov
test
test
adc
mov
rcrb
stos
scas
mov
movsl
stc
xchg
jmp
inc
adc
push
jb
pop
or
xor
push
and
out
xchg
fs
mov
cmp
push
and
mov
stos
and
dec
out
cwtl
and
pop
inc
pop
addl
push
mov
adc
push
jl
pop
pusha
push
and
pop
jmp
clc
push
popa
ss
repz
mov
int3
es
sahf
or
xchg
push
xchg
out
ss
sub
pusha
fld
and
xor
xchg
out
stos
lcall
mov
es
jns
roll
sbb
xchg
pusha
bound
mov
imul
and
and
popa
fists
or
pop
adc
dec
lahf
mov
cld
jbe
push
sub
pop
out
icebp
adc
scas
jmp
aas
popa
es
jae
pop
cmpsl
xchg
inc
out
into
loop
sbb
loopne
sub
xchg
sahf
mov
pandn
fistps
fsubrl
into
mov
mov
in
test
jl
cmp
in
mov
xchg
fmuls
add
sub
mov
in
std
add
pop
cmp
stos
leave
jb
inc
mov
mov
fwait
arpl
fadds
aam
imul
lds
dec
fsubl
cmp
pusha
fcomp
mov
lcall
lock
repnz
add
aas
test
jp
dec
daa
add
rorl
rcll
cli
daa
aad
cmp
je
sub
sub
xchg
cs
loope
daa
push
push
in
pop
xchg
dec
ss
ficoml
dec
in
insl
xchg
sbb
call
aaa
push
out
jmp
add
xchg
adc
clc
cmc
pop
aas
cmp
jnp
jnp
xchg
inc
popf
mov
gs
ja
out
cmp
repz
shll
push
inc
pop
loop
cmp
mov
aad
aaa
adc
in
mov
jge
cld
bound
pop
or
mov
mov
cmc
mov
imul
cmpl
sbb
les
testb
mov
imull
jb
lods
mov
xchg
jp
stos
inc
loop
sbb
push
pop
lea
add
mov
test
push
inc
scas
fwait
out
mov
pop
push
shll
pop
in
pop
cmp
cmp
dec
or
inc
mov
call
int
insb
mov
and
in
sub
adc
mov
xchg
std
inc
ss
sub
pusha
inc
push
out
ja
sbb
jb
or
sub
or
pop
das
fdivrp
aas
aam
dec
js
popa
inc
or
jg
mov
cmp
pop
repnz
insl
sbb
js
jb
jnp
or
mov
adc
push
fnsave
cwtl
outsb
cmp
xchg
or
lods
lret
out
test
and
adc
data16
movsb
pop
mov
ds
or
daa
sti
cltd
mov
int
sub
lea
rclb
pop
jl
xor
nop
fstps
nop
cmp
mov
jae
ljmp
pop
movsb
test
addr16
in
or
mov
xchg
inc
fcmovnbe
negl
enter
dec
shl
cs
sbb
insb
pushf
add
jno
outsb
xchg
add
ret
dec
popa
ss
out
cli
sbb
jns
jle
mov
jns
loopne
pop
push
sbb
cmovle
sub
dec
inc
test
mov
pop
jl
popa
ret
xchg
jmp
popf
and
idiv
pusha
add
push
in
pop
pusha
push
push
add
out
punpcklwd
rolb
or
cmp
in
rcrl
into
push
mov
jmp
xchg
ja
add
shll
and
call
sub
fimull
jae
push
pop
lds
mov
bound
and
pop
mov
xchg
repnz
fisubrl
bound
test
pop
icebp
sbb
mov
outsb
jl
xchg
clc
int3
pop
mov
hlt
lret
mov
pusha
push
push
lods
sbbb
test
mov
xchg
mov
outsl
xlat
arpl
pushf
shll
lods
imul
shrb
push
lock
jmp
cmp
lcall
int
cs
jo
jns
sbb
lcall
pop
out
sbb
repz
mov
push
cwtl
and
sbb
or
jmp
popa
call
jmp
nop
out
pop
insl
int3
xchg
fisubrl
add
and
in
cltd
sti
pusha
enter
int
sbb
cmp
push
mov
mov
push
call
hlt
fs
out
and
les
push
fwait
mov
jle
or
lock
jmp
cmp
and
shll
dec
test
mov
ljmp
inc
mov
popa
cmc
lahf
xor
or
into
out
add
cmp
mov
out
lds
or
mov
cmp
loopne
cmp
pop
xchg
pop
inc
mov
add
mov
mov
lds
xor
pusha
test
push
clc
push
xor
push
pop
fcoml
xchg
pop
popa
popa
sub
and
imul
icebp
outsl
pop
xor
mov
mov
mov
das
push
or
push
inc
push
addr16
xchg
sbb
and
scas
es
es
mov
push
mov
jno
movsb
pusha
int
cmp
sub
andl
push
mov
jne
adc
sub
in
icebp
enter
shl
int3
push
cmpsl
xor
mov
sahf
fldenv
pop
out
es
fidivs
jns
xlat
dec
pop
push
jmp
mov
pusha
xchg
cmpb
clc
popf
lock
mov
rorl
mov
in
loopne
push
arpl
in
out
mov
lahf
jg
xor
incb
xlat
rcrb
add
int
cltd
out
imul
das
adc
push
popa
or
adc
insl
arpl
ds
lods
pusha
pusha
mov
ret
mov
jnp
jmp
bound
popa
test
lods
xchg
sbb
xchg
pop
inc
xor
mov
or
jns
dec
xchg
iret
add
cmpb
adc
pop
cltd
das
out
sub
bswap
lcall
pop
popa
fwait
cmp
mov
dec
pop
xchg
mov
pop
push
js
int3
pop
sbb
jb
xor
ror
inc
pushf
push
fsubs
loopne
sahf
sti
push
mov
push
fs
dec
addb
aad
in
outsl
sar
and
call
cmp
test
fbstp
add
sbb
out
rcl
jp
mov
ret
ljmp
pop
out
xchg
jns
or
in
pop
stos
sbb
mov
out
mov
enter
cld
jb
pop
sub
mov
das
pop
pop
dec
mov
popa
pusha
popf
push
xor
out
push
mov
pop
pop
dec
dec
xchg
scas
jbe
inc
mov
cmp
fsubr
push
lods
cmp
out
xchg
adc
adc
mov
test
mov
jbe
fwait
sub
insb
jl
add
nop
pusha
sub
cld
sar
call
jge
push
dec
cmpsb
add
movsb
lods
push
or
loopne
sbb
mov
inc
mov
mov
loop
inc
inc
jns
and
pop
outsb
xchg
and
insl
sub
scas
and
pusha
frstor
add
adc
or
loop
scas
scas
mov
jbe
repz
lcall
push
lahf
add
pusha
std
popf
gs
dec
xchg
cmpsl
or
mov
test
mov
adc
out
hlt
js
fs
jmp
add
xor
push
out
cmp
jp
out
bnd
pop
lret
inc
mov
mov
jecxz
cmp
mov
imul
cs
and
jmp
pop
fdivrl
lret
les
frstor
insl
pop
out
jae
into
flds
aas
inc
jge
lahf
out
sti
insl
or
pop
xchg
mov
inc
popa
sbb
outsb
xor
pusha
pop
stc
out
mov
sbb
mov
push
or
pop
adc
ficompl
add
mov
pop
sahf
fisubs
push
pop
pushf
mov
sbb
cmc
dec
sahf
andb
cltd
xor
pop
bound
xchg
pusha
shlb
fldl2e
out
cli
cmp
leave
mov
mov
or
sahf
xlat
inc
not
xchg
imul
lea
popf
pop
mov
addr16
test
adc
rcrl
push
push
std
lret
mov
aad
insl
xor
frstor
popf
xchg
aaa
fdivrl
out
mov
imul
mov
aas
mov
mov
inc
push
fucomp
lret
gs
ljmp
mov
mov
mov
cli
pusha
fadd
imul
out
sub
inc
into
sub
test
sahf
movsl
hlt
pop
jmp
sub
pop
mov
popa
sub
dec
outsb
in
and
arpl
mov
inc
inc
cmpsb
mov
jge
mov
fldenv
pop
mov
ret
pop
lret
popf
push
adc
pop
and
enter
outsb
pop
fwait
test
scas
push
fldt
pop
sbb
mov
xor
out
sbb
jnp
mov
pop
adc
sbb
inc
mov
fisttps
pop
lods
fidivs
push
push
stc
jg
out
inc
pop
dec
push
fisubrl
shll
and
jnp
out
adc
cmpb
scas
sub
movsb
pop
adc
mov
cmpsb
adc
js
hlt
or
xchg
mov
mov
mov
dec
flds
pop
xor
jmp
mov
cmpsb
mov
inc
repnz
out
imul
cld
outsb
repz
lahf
pusha
mov
ret
push
scas
icebp
xor
lds
mov
sahf
or
add
inc
ret
push
lods
adc
and
mov
adc
mov
shlb
out
in
sbb
data16
adc
inc
xchg
in
fadds
daa
pop
push
and
mov
inc
aad
aam
xchg
mov
in
jecxz
sbbl
mov
pop
adc
rcrb
adc
out
sarl
inc
popa
pop
cmp
inc
out
jb
mov
sbb
cmp
rolb
lods
jle
andl
in
fcoms
fmuls
jp
test
dec
mov
xchg
das
push
pop
out
xchg
lret
pop
ja
inc
enter
sahf
imul
in
call
pop
es
lods
and
adc
add
mov
mov
pushf
xchg
jnp
xchg
scas
cwtl
push
pop
pop
pusha
dec
jo
jmp
and
lods
and
std
pop
out
pop
lock
and
pop
aaa
and
fs
cmp
movsl
cltd
add
aaa
push
cmpsb
mov
dec
repnz
nop
cwtl
lea
popa
call
xor
xor
adc
mov
push
mov
in
xor
outsb
mov
dec
pop
xor
jecxz
inc
mov
in
push
ja
fistpll
jne
inc
lret
sbb
movb
jbe
push
cmp
repnz
dec
mov
xor
ljmp
out
or
ret
jg
cmpsl
dec
mov
jnp
orl
sbb
aad
aad
mov
sti
push
mov
xor
jno
mov
test
pop
jmp
lock
xchg
add
mov
in
add
fwait
into
pusha
add
cmp
sbb
lahf
sbb
loopne
or
popa
addr16
jecxz
test
and
out
mov
fstps
js
or
pop
jge
sub
loope
shll
xor
sub
ds
adc
ss
pusha
scas
cli
in
add
loope
test
imul
inc
js
and
popf
lds
jns
shll
inc
out
cmp
je
lods
cmpsl
lret
mov
push
out
mov
lock
xor
xor
sub
call
sti
jecxz
in
nop
pop
cmp
jecxz
or
in
jbe
hlt
mov
push
cmp
sub
je
pop
js
insl
mov
out
push
popa
mov
pxor
push
test
mov
mov
rorb
or
fadd
pop
inc
cmc
mov
aas
popa
xchg
and
add
push
add
xchg
test
jle
ljmp
repnz
out
pop
xchg
pusha
call
aad
push
out
and
into
and
xchg
lcall
add
cwtl
pop
push
jo
adc
nop
push
add
mov
bound
cmp
iret
cmpsl
pusha
rorl
movsb
dec
xchg
call
and
loop
sbb
push
mov
scas
and
dec
pop
xchg
xor
ret
mov
inc
add
out
shll
out
out
lret
mov
sub
ljmp
cltd
mov
pusha
in
mov
mov
sub
imul
dec
mov
leave
inc
xor
movsl
cmp
cmp
mov
repnz
and
xor
sbb
pop
fcomps
dec
mov
shlb
and
sar
adc
xchg
adc
mov
int
shrl
enter
fsub
sbb
or
mulb
mov
and
dec
pop
pop
aad
mov
popa
rcrb
cs
xchg
inc
sbb
push
inc
les
jle
sahf
jne
fistpl
push
in
cmc
inc
jecxz
scas
mov
aad
dec
and
pop
adc
cs
out
es
movsl
push
and
in
test
scas
pusha
adc
dec
test
ss
push
jne
pop
xor
cmpsl
xchg
jg
sub
inc
int
loopne
sub
lds
jg
popa
or
mov
mov
sbb
aaa
decl
fldenv
cs
lock
push
sbb
ffree
pushf
setge
push
mov
cwtl
fs
sub
fisubl
push
xchg
jg
ret
cmp
mov
shl
cmp
test
sub
cmp
popa
inc
push
arpl
mov
sbb
sbbb
mov
lods
mov
mov
call
shrl
icebp
clc
mov
or
mov
or
ret
and
shrl
out
rolb
jecxz
sbb
jne
pop
cli
fidivrl
push
in
outsl
inc
mov
lds
sbb
and
dec
in
pusha
xchg
and
int
push
pop
mov
dec
pop
fsts
cmpsb
jb
pop
ja
popa
pop
jno
inc
and
outsl
pop
add
shl
clc
test
pusha
icebp
test
nop
pushf
stos
pop
push
or
repnz
movsl
push
insl
lahf
and
js
jmp
ficomps
and
popa
movsb
jl
lods
xor
cmc
rcrl
fwait
stos
cmc
dec
jo
arpl
pop
sub
arpl
pop
xor
mov
call
addr16
popa
cltd
inc
inc
leave
scas
out
ret
inc
xlat
stc
or
cmp
mov
add
fcomp
mov
jmp
test
pop
add
sbb
mov
pmulhw
cmp
adc
cmc
cli
mov
out
xchg
mov
jnp
fidivl
subb
cmpsb
std
mov
in
popf
clc
pop
pop
iret
jno
cmpsl
or
or
cli
je
add
out
sahf
pop
mov
mov
sbb
cmp
and
negb
je
aam
inc
pop
fldln2
cmpsl
jb
test
rcrb
cmp
adc
fldt
out
repnz
jno
push
jmp
out
xor
dec
pop
mov
sbb
sahf
push
test
jecxz
lgs
sub
xchg
mov
dec
mov
mov
xor
dec
adc
pop
jge
sub
mov
js
push
call
pop
or
add
mov
insl
das
daa
nop
outsb
loop
rorl
push
cmp
xchg
inc
and
ret
cmp
rcrl
pop
sub
subb
popa
pop
cmp
pop
loope
addl
jecxz
mov
test
push
fbstp
out
je
gs
add
loope
mov
imul
test
pop
data16
sahf
cld
push
into
sbb
xchg
push
mov
out
jns
fbld
outsl
aad
stos
sbb
push
push
adc
add
push
pop
mov
cmpb
pop
dec
mov
fcomp
mov
popa
cmp
or
jne
fdiv
out
push
hlt
mov
jmp
fstpt
xchg
daa
pushf
cmpsl
lcall
xor
lret
fcoms
and
jbe
cmpsl
adcb
ljmp
or
ss
pop
jae
ss
pop
daa
mov
pusha
iret
mov
adc
or
and
mov
lcall
jbe
push
popa
push
jge
pop
push
jmp
jno
mov
insb
pusha
test
cmp
inc
out
jno
idivb
stos
and
xchg
mov
pop
fsubrs
ss
in
cs
fisttps
dec
jne
jae
pop
int3
das
ja
cmpsb
sub
in
mov
cmc
lret
mov
out
je
jp
xor
push
mov
jmp
pop
rol
push
fcomps
sbb
mov
push
jo
add
ret
xchg
pop
out
lods
loope
mov
push
xor
push
out
push
or
std
adc
add
pop
lahf
xchg
pushf
cmp
cltd
mov
jle
push
sub
rclb
or
pusha
in
incb
out
xchg
popf
add
shlb
mov
imul
xchg
adc
scas
jmp
sbb
arpl
or
ret
dec
in
or
test
fistpl
mov
cmp
pop
lds
int
fdivs
dec
ds
add
mov
je
inc
and
xchg
lcall
lea
push
sub
fdivrl
fs
cmp
push
aas
pusha
push
xor
popa
xchg
jmp
sbb
xchg
out
add
lahf
aas
push
mov
mov
jbe
lods
add
push
out
stc
shlb
imul
push
filds
cmp
inc
mov
and
cli
xchg
and
in
jl
mov
mov
dec
mov
in
cwtl
loope
repnz
popa
sub
mov
inc
popa
incl
sbbl
ja
jg
js
out
bound
repz
std
pusha
dec
or
push
ss
adc
and
ss
movsl
shr
pusha
lcall
mov
mov
movsb
rolb
push
fucomp
mov
movsb
pop
pop
cmp
clc
cmpsl
in
dec
jae
push
ds
aam
ljmp
mov
mov
fmull
out
push
sub
out
aaa
add
int3
inc
jl
stos
pop
ss
pop
jmp
inc
sbb
test
int
or
or
xchg
mov
mov
popf
out
pop
add
cwtl
sbb
inc
mov
arpl
cmpsl
push
frstor
stc
or
mov
in
pusha
jp
add
popf
ret
sbb
cs
xor
push
or
mov
lock
cmpsb
pop
lcall
int3
cmp
repnz
repnz
fwait
inc
and
imul
imul
push
jle
xor
repnz
gs
or
dec
push
movsb
gs
cmc
cld
inc
jae
xchg
lea
dec
add
pushf
pop
ss
es
mov
inc
jbe
ret
mov
lock
inc
shll
jbe
pusha
pop
sbb
popa
jecxz
popa
dec
jmp
outsb
addr16
sbb
mov
rorb
pushf
js
pop
adc
popa
or
adc
mov
xor
add
push
popa
popa
sub
sbb
and
mov
mov
loopne
es
out
pushf
or
mov
popf
std
rcll
inc
sahf
fistpl
xchg
pop
pop
xchg
mov
cltd
out
cltd
in
add
jne
fucom
subb
scas
ss
xor
sti
dec
mov
jnp
call
inc
popf
fistl
xchg
hlt
pusha
sbb
sbb
dec
fstpt
cli
dec
adc
adc
movsb
and
imul
inc
out
daa
outsb
pop
cmp
xchg
xchg
xchg
mov
mov
adc
ja
pop
int
lods
hlt
inc
jbe
adc
inc
aas
movsb
push
cmp
mov
stc
adc
jnp
mov
pop
out
je
push
push
xlat
fisttps
xchg
nop
sbb
pusha
sub
xor
or
push
jnp
imul
loop
pop
inc
inc
in
shlb
pop
xchg
pop
ret
push
cld
bound
popa
call
or
out
jae
jge
jne
mov
pusha
jge
test
and
nop
ret
mov
ret
test
mov
pop
aaa
jle
add
roll
fistl
pop
sub
outsl
mov
add
xchg
xor
out
mov
fcomps
or
insl
pusha
aam
lret
lcall
js
inc
mov
lahf
mov
sbb
sqrtps
pop
stos
lret
test
cs
pop
fists
sbb
mov
mov
mov
imul
aaa
fdivrs
clc
xor
xchg
pop
loop
mov
ss
inc
pop
cmp
gs
sbbb
jp
adc
ffree
xor
push
pop
and
sub
imul
fdivrs
sbb
aad
xchg
insl
cmp
pop
je
xchg
daa
cmpsb
mov
cltd
pusha
push
loopne
dec
dec
push
fwait
in
sbb
inc
out
lods
arpl
jmp
call
dec
mov
in
stc
hlt
test
pop
lret
scas
mov
repnz
xchg
xchg
xor
xchg
and
mov
jmp
lret
mov
clc
dec
mov
sahf
adc
fwait
jae
clc
mov
and
jne
fildll
mov
cmp
pop
pop
xchg
loop
sti
xor
inc
and
push
add
aaa
or
inc
fs
push
fisttps
fs
imul
mov
sub
rcr
inc
outsb
jge
movsl
lahf
mov
sahf
shlb
mov
cmp
addb
loopne
xchg
jmp
or
adc
mov
dec
sahf
in
cmpsb
or
lahf
mov
mov
lds
fsubl
jmp
push
pop
test
inc
fdivrp
cs
out
out
add
add
sub
dec
in
xchg
or
fisubrs
popa
adc
mov
fsubr
jb
repnz
pushf
sbb
sub
pusha
pop
fisubl
add
cmp
ljmp
sub
sbb
cmp
push
and
popa
rcrl
mov
pusha
xchg
xor
jnp
or
lods
out
loop
mov
jb
test
cmpsl
push
sbb
cmpb
and
inc
jmp
sub
push
pop
xchg
stc
out
stos
mov
repz
pusha
jnp
pop
add
fldenv
in
cmpsl
mov
in
pop
shll
push
xchg
andb
rcrl
dec
scas
icebp
andb
shlb
in
push
mov
xlat
nop
mov
out
bound
or
pop
mov
pop
das
mov
xchg
repz
add
shrb
insl
pusha
inc
dec
jle
dec
add
lret
out
movsl
jg
rcrb
lahf
sbb
push
inc
sahf
xchg
mov
out
mov
cmp
insb
pushf
lock
test
repnz
ja
out
mov
in
xor
pop
inc
test
xor
addr16
fidivs
push
cs
jmp
sub
sbb
mov
pop
cmp
sub
cmp
sbb
jae
inc
mov
addr16
pop
adc
mov
mov
mov
inc
cmp
arpl
adc
pop
stos
inc
bound
jmp
iret
jl
loop
push
pop
inc
fisubl
frstor
sbb
lahf
push
lods
jmp
sbb
sub
mov
cmp
hlt
shrl
out
adc
mov
dec
test
jg
push
xorl
mov
imul
mov
xorl
xor
dec
out
bnd
rorb
in
jg
mov
sar
rorl
hlt
or
or
inc
add
and
sahf
les
jns
xchg
fldcw
or
das
mov
sub
daa
fmulp
cltd
push
lea
out
ret
pop
arpl
dec
xchg
or
xor
jae
jb
mov
out
or
fidivrl
ljmp
popa
mov
mov
lret
in
in
dec
mov
aad
dec
pop
dec
stos
enter
ss
cmp
or
out
add
jecxz
mov
add
adc
mov
mov
movsb
aam
ds
in
lret
pop
sahf
and
pop
mov
insb
out
pop
or
mov
pop
inc
mov
push
jo
data16
cmp
stos
mov
movd
xchg
xchg
out
lock
sub
add
int3
xchg
jmp
mov
iret
fxch
sub
test
mov
mov
pop
movsl
sti
dec
movsb
int
lods
movsb
mov
sub
jae
pop
ljmp
pop
push
jne
pop
and
mov
mov
js
int3
sbb
inc
xlat
sbb
hlt
in
out
push
push
mov
xor
fisubl
adc
mov
sub
lds
jbe
flds
push
and
jp
pop
fisttps
ret
xchg
scas
jge
and
sbb
nop
dec
fisubl
inc
iret
into
pop
pop
test
pop
xor
adc
xlat
mov
xorl
adc
int3
dec
ret
clc
push
lds
aam
sub
out
ss
add
mov
sub
push
jbe
aaa
xor
mov
les
push
mov
and
shll
pusha
pop
cmp
movsb
or
xor
punpcklwd
frstor
mov
inc
out
repnz
jno
pop
mov
cmp
sub
lea
into
out
js
cmpsb
lock
sbb
adc
out
mov
sahf
jmp
addr16
rcrl
int3
dec
push
pop
sub
insb
pop
insl
mov
xor
inc
pop
mov
cmc
sbb
out
adc
add
pop
orb
leave
add
ret
in
movl
ss
push
in
cmp
xchg
fsubrs
in
adc
and
shll
out
movsl
into
xchg
in
sbb
mov
mov
xor
jl
cmp
jno,pt
mov
push
daa
je
fsubrs
jmp
jo
sub
pop
sbb
imul
sub
cmpsl
stc
adc
movsb
mov
cs
cmp
cmpsl
add
push
inc
pop
sub
stos
fidivrl
shlb
inc
xchg
test
test
xor
int
cmp
lret
mov
adc
aas
add
pusha
and
inc
icebp
out
dec
pop
sub
inc
adc
xchg
bound
outsb
test
fdivr
andl
enter
mov
or
mov
xor
push
xor
popa
pop
mov
xchg
leave
sbb
in
hlt
mov
sub
enter
aad
dec
lret
pop
add
mov
add
outsb
shll
pop
xor
lods
mov
out
fiaddl
lods
pop
iret
mov
dec
inc
push
dec
jp
inc
fdivrp
pop
inc
xlat
and
cs
mov
and
loop
test
cmpsl
dec
sub
lahf
pusha
rcll
icebp
out
mov
dec
aaa
push
pushf
in
or
xor
xchg
xor
js
data16
mov
fs
data16
or
test
mov
mov
pop
mov
repnz
je
xor
jecxz
sub
fcmovne
push
int3
enter
dec
mov
jmp
shl
jl
xchg
out
aas
out
lret
dec
and
pop
jge
xor
pop
push
xchg
inc
pop
mov
movsl
gs
dec
outsb
pusha
add
imul
jmp
sbb
xor
loope
xchg
lock
lods
lahf
test
outsb
fcom
xchg
outsb
xchg
sbb
clc
mov
inc
xor
test
out
in
movsb
int3
lahf
pusha
hlt
gs
stc
out
arpl
mov
lock
adc
pop
divl
sbb
loop
icebp
rolb
fisubrs
mov
cli
shr
int3
lret
call
lea
xchg
inc
dec
ret
cli
daa
dec
mov
movb
push
cs
xchg
out
dec
cs
aam
mov
jl
fstpl
test
sbb
jae
ss
jmp
mov
rcrb
mov
adc
and
fwait
fs
xchg
xchg
pop
call
inc
jo
sub
jae
or
adc
or
aas
push
movsl
sbb
xor
je
ficomps
std
or
int
dec
mov
adc
and
cwtl
ljmp
and
std
scas
clc
inc
loope
pop
push
cmpsb
dec
ja
push
add
sub
out
adc
xchg
cmp
out
fistpl
loopne
sub
sbb
mov
rorb
lods
out
mov
mov
pusha
adc
je
out
rcrb
pop
enter
dec
or
call
mov
mov
add
popf
mov
mov
iret
test
pop
push
xchg
xchg
fistps
dec
mov
ret
push
pop
testb
xor
das
xchg
inc
pusha
sub
push
jle
outsb
out
pushf
dec
adc
dec
shlb
adc
bound
jge
jnp
test
dec
pop
subb
mov
scas
es
ds
add
rcll
into
jmp
imul
neg
mov
sub
or
jp
sbb
pop
and
into
icebp
mov
or
adc
inc
and
xor
mov
testb
jne
lock
out
push
mov
inc
jl
mov
and
jbe
out
xchg
xor
push
cmp
jmp
lds
pushf
mov
pop
popf
icebp
dec
subl
xchg
xchg
push
or
rcll
into
xor
popl
pushf
sbb
out
sbb
gs
shrb
out
clc
cmp
sbb
iret
inc
popa
stos
popf
jle
jo
dec
lods
out
dec
aaa
pop
jmp
mov
popa
leave
mov
nop
mov
push
ret
leave
sub
xchg
mov
dec
mov
insb
cmpl
shr
mov
cmp
xor
pushw
dec
pop
in
orb
mov
imul
mov
push
pusha
je
test
cltd
repnz
cmp
jae
mov
mov
popa
pop
insb
mov
dec
out
outsl
push
mov
inc
test
mov
imul
xor
enter
pusha
cmovno
jnp
lret
jge
mov
xchg
pop
cwtl
jns
js
les
pop
push
mov
sbb
aam
cmp
add
jl
test
xor
jmp
negl
out
sbb
inc
out
pop
popa
call
push
inc
out
imul
data16
mov
mov
incl
scas
inc
pop
into
mov
shrl
js
pusha
mov
fdivl
jp
push
pop
jb
dec
fwait
das
fcoms
inc
xor
out
ret
pop
cmpsb
lea
ja
int3
bound
ret
add
adc
loope
jmp
push
pmaxsw
mov
in
sahf
and
cmp
add
arpl
out
cld
adc
pop
pop
inc
xlat
fsubs
inc
mov
sahf
adcb
xor
mov
addr16
mov
jmp
pop
sub
ljmp
mov
adc
jecxz
sbb
jns
test
dec
jne
xchg
dec
jmp
out
add
js
jl,pt
mov
or
inc
mov
out
mov
mov
pop
out
push
arpl
cmp
movsb
and
push
popa
jp
cld
popf
mov
dec
mov
mov
pop
sarl
pop
in
cmp
pusha
inc
call
cmp
pusha
mov
xchg
push
popa
lahf
or
cmpl
fs
loope
jl
push
jno
mov
xchg
inc
sarb
mov
xchg
enter
out
cwtl
jb
cmpsl
xchg
sub
mov
inc
stc
sahf
add
lods
test
pusha
xchg
mov
int3
sbb
sbb
xor
out
daa
sti
pop
cmp
mov
fsts
lea
xchg
sahf
movsl
shl
mov
fldenv
test
lds
and
adc
repz
out
jno
push
and
inc
dec
and
bound
push
lock
jmp
push
add
mov
pop
aad
shll
mov
pop
out
movsl
test
lcall
sbb
xor
lods
inc
rolb
repz
in
xchg
adc
mov
out
cli
and
pop
or
je
lret
addr16
popa
cwtd
icebp
sub
movsl
es
cmpsl
jbe
mov
xor
mov
icebp
scas
pop
ljmp
jne
xchg
jo
pop
adc
mov
mov
mov
leave
sbbb
stos
inc
fbstp
enter
ds
xchg
loopne
test
pusha
sahf
andl
stos
out
sbb
enter
xor
mov
sbbl
jns
adc
andl
jae
popf
pusha
dec
push
movsb
loopne
lahf
pop
cwtl
cmp
push
xchg
aad
movsb
add
inc
ficomps
mov
cmp
xor
jne
daa
or
mov
loop,pn
push
stos
dec
aam
and
cmp
cmp
pusha
out
pop
lahf
push
flds
cmpsb
inc
iret
int
cmp
fwait
movsb
notl
jno
mov
jnp
jbe
popa
add
mov
cltd
dec
lods
pop
xchg
cmp
mov
lds
out
test
cmc
dec
mov
pop
outsb
fsubl
pop
in
in
cmp
mov
or
jmp
jge
movsb
in
dec
mov
sub
pop
js
and
lds
pushf
insl
dec
push
fucomp
adc
xor
insb
outsb
cmp
movsb
ja
mov
rcrb
pop
inc
into
fs
lea
outsb
scas
out
pusha
xchg
stos
imul
ret
cld
mov
xchg
jmp
out
mov
mov
out
lahf
inc
or
pop
mov
sub
int
push
pushf
push
push
sbb
lcall
adc
popa
cmp
mov
out
add
je
jmp
mov
pop
mov
xor
iret
iret
test
add
mov
out
addl
xor
mov
ficompl
fs
inc
mov
clc
mov
out
scas
inc
cmpsl
hlt
out
fnsave
pop
mov
mov
andb
icebp
mov
pop
mov
cld
jp
push
mov
mov
pop
ss
int
xor
mov
scas
cmpsl
push
or
pop
loope
mov
adc
pop
cmc
mov
or
mov
in
or
fcomi
inc
mov
mov
imulb
lods
mov
cmp
shll
pavgb
xchg
cmp
lahf
flds
and
fnsave
ror
ficompl
repz
mov
pop
xchg
rclb
pop
push
int
pop
push
sbb
xchg
fiadds
dec
icebp
mov
push
jmp
imul
lods
mov
stc
and
dec
pop
jl
cmp
es
fs
or
ja
pop
jno
sti
push
mov
mov
hlt
stos
das
or
add
or
lock
arpl
or
movl
mov
nop
test
lods
xor
aaa
sub
xchg
pusha
lret
cltd
sbb
and
out
loopne
jnp
adc
jle
pusha
cmp
lods
out
inc
cmp
fs
ss
lods
mov
pop
push
mov
jl
adc
sub
sbb
xchg
out
sbb
fwait
mulb
movsb
aad
fstpl
inc
jno
les
jp
cmp
add
in
push
popa
fstp
negl
in
out
aam
lock
and
and
cmp
jg
and
out
inc
push
jae
cmp
adc
mov
repz
pop
sahf
mov
jns
lods
into
lods
pusha
push
popf
jecxz
cwtl
mov
jns
xor
and
mov
adc
jbe
or
mov
mov
lock
pop
std
pop
dec
sahf
outsb
std
test
xchg
lea
pop
cld
fld
cmp
icebp
or
xchg
or
inc
lods
jne
cmpl
push
xor
fcomps
pop
inc
jmp
adc
or
sbb
test
mov
lahf
mov
pop
pop
outsb
das
loope
outsb
or
invd
mov
rcl
inc
fidivrs
inc
outsb
xchg
pop
mov
sbb
mov
sub
and
mov
inc
push
adc
mov
leave
push
das
ljmp
icebp
out
mov
cmpsl
jp
loopne
and
cmp
jae
dec
push
pop
cmp
push
fsubrs
jnp
sbb
addr16
mov
mov
lret
jecxz
lock
fisubs
out
mov
or
int
xchg
rcr
push
cmpb
push
pushf
adc
mov
fstpl
pop
jo
cmpl
cmp
aaa
icebp
lods
pop
roll
adcb
mov
jmp
ficomps
aaa
loopne
and
mov
pushw
fmuls
xor
inc
pop
lcall
shlb
add
pop
cmp
jbe
jnp
jp
and
inc
push
imul
int3
ljmp
stos
and
cmpsl
in
mov
xor
scas
shrl
fldl
and
shll
xor
and
mov
out
imul
inc
mov
gs
je
pop
adc
and
pusha
mov
pop
xchg
out
pop
jle
sbb
andb
arpl
xchg
add
xor
push
lcall
mov
cmpsb
sub
fsubrs
shr
int
mov
and
inc
mov
jne
mov
and
push
les
enter
push
mov
dec
mov
jns
mov
push
sbb
cmp
mov
popa
in
rorb
mov
out
icebp
or
ss
stc
sub
data16
call
xchg
cli
inc
mulb
and
and
ret
insb
int
mov
adc
mov
nop
and
dec
insb
movl
mov
out
pop
and
jno
pusha
adc
mulb
cmp
pop
or
adc
mov
cmpsl
out
inc
cmp
or
xchg
and
push
xor
lock
das
cwtl
repz
repnz
inc
ss
pop
and
push
ds
xor
out
test
push
push
jmp
stc
aaa
fisubl
int
add
pop
ja
and
cltd
scas
adc
sub
xlat
push
je
jne
pop
fidivrl
jo
mov
movsb
or
and
pop
xchg
pop
inc
jmp
cs
add
nop
hlt
sbb
adc
cmp
jle
adc
fistpll
int
clc
loope
pop
inc
add
xchg
dec
cmp
push
das
addl
inc
lldt
int
sub
pop
push
pushf
push
arpl
cmp
arpl
mov
jnp
adc
cmpsl
xchg
rcpps
je
das
scas
aad
push
jno
pop
xor
add
cmp
and
mov
repnz
sbb
pop
xorb
andl
mov
into
ror
repz
sub
cwtl
inc
push
out
adc
fcoms
mov
xchg
std
cs
sahf
cmp
pop
andl
loope
xlat
add
jbe
aad
fists
push
mov
scas
pop
adc
pop
imul
out
rclb
in
or
mov
mov
out
test
mov
add
in
enter
xor
movsb
outsb
push
dec
mov
push
arpl
lods
imul
in
mov
std
mov
popa
andl
pop
fiadds
jnp
dec
push
nop
mov
jbe
loope
dec
push
adc
leave
jne
mov
mov
inc
lcall
test
lahf
inc
pop
pop
mov
push
jbe
push
jmp
lds
adc
push
clc
adc
and
icebp
lret
xchg
or
mov
ret
add
mov
loope
and
js
xor
mov
push
stos
loopne
adc
loopne
cmp
xchg
pop
insb
jnp
mov
ja
arpl
nop
mul
jnp
xchg
inc
xchg
fs
adc
sub
adc
popa
mov
inc
insl
mov
and
pusha
fnop
je
xchg
dec
mull
xrstors
mov
pop
dec
pop
mov
pop
mov
inc
fmuls
btr
in
xor
mov
pop
pop
mov
pushl
inc
loope
push
sub
ds
mov
out
cmp
mov
data16
mov
xchg
mov
pusha
jp
sub
imul
mov
fwait
or
add
xor
pop
jg
insl
or
ror
cmp
add
pop
sub
cmpsl
adc
push
pop
mov
fnsave
mov
cmpsb
fisttpll
jne
gs
inc
fadd
bound
push
sbb
fbld
fbstp
movsb
ds
dec
sub
or
out
push
pop
jae
data16
int
in
out
sbb
dec
iret
mov
and
stos
or
add
aam
inc
fistl
and
movsb
xchg
mov
out
mov
aam
out
mov
sahf
inc
jecxz
lcall
cmpsb
mov
jmp
adc
nop
ret
mov
pop
pop
adc
push
rcl
mov
ljmp
mov
fwait
add
push
mov
xor
or
pop
das
stos
mov
mov
pop
fiaddl
push
or
std
mov
test
xor
xlat
or
mov
jb
dec
lcall
into
sbb
adc
pop
lock
sbb
out
pushf
gs
cltd
adc
ds
mov
mov
inc
repnz
into
xor
arpl
and
lock
xor
mov
imul
jmp
sbb
je
cmpsl
das
out
data16
rol
jecxz
fisttpll
out
and
loope
int3
inc
and
pop
pusha
adc
cs
adc
mov
mov
outsb
inc
push
stos
rcrb
lret
ss
push
gs
into
out
pusha
mov
scas
pop
ss
dec
in
testb
popa
mov
inc
rclb
adc
cs
xor
je
sub
aam
sub
pusha
push
outsl
pusha
test
imul
sub
cmp
fstpl
mov
dec
stos
fmuls
mov
sti
and
imul
pop
xor
sbb
fs
pop
and
bnd
add
pop
and
pop
xchg
inc
stos
sub
and
jge
les
pop
rclb
popa
andb
push
pop
outsb
xchg
sub
test
push
in
push
je
pop
in
xchg
pop
mov
repnz
rclb
faddl
pop
sbb
lock
popa
ret
sbb
out
ret
in
adcb
scas
xchg
cmp
sub
cld
out
xchg
inc
lods
xchg
adc
cmp
fwait
xlat
ja
jg
xor
pop
aam
sbb
in
pop
out
cli
push
fdivl
test
icebp
cld
mov
jmp
arpl
lret
dec
sbb
xchg
fwait
incb
ret
std
mov
ljmp
pusha
mov
xchg
push
dec
lea
movsl
enter
aaa
jnp
sub
cmpsb
aaa
mov
scas
rcl
pop
pop
cld
ljmp
pusha
cmp
pushf
fnstsw
loope
adcb
add
fucomp
inc
idivb
push
push
std
mov
adc
in
repz
xor
out
pop
cs
xchg
lret
cmpsb
fmull
add
xor
mov
xchg
mov
xchg
sahf
lock
out
mov
idivb
shl
mov
test
fdivrl
ficomps
in
scas
jmp
in
ret
jbe
leave
fs
out
lahf
push
int3
test
inc
and
popa
dec
ss
dec
mov
test
cmpsl
maxss
scas
call
gs
push
mov
jge
pop
or
jmp
mov
std
outsb
aas
sahf
inc
pop
push
cmp
pop
bnd
stos
pop
out
ds
xchg
cmpsb
inc
pop
out
jb
test
leave
imull
inc
popa
mov
push
jbe
xchg
mov
out
xor
jecxz
stos
in
into
or
out
ret
jecxz
or
jmp
ljmp
mov
out
clc
stc
popf
das
push
jp
enter
pop
mov
loope
pop
loope
xor
add
adc
subl
test
sbb
incb
or
popa
jae
ss
int3
out
jge
dec
cmp
jbe
popf
es
jno
mov
push
shrl
out
mov
cmp
mov
fs
pop
adc
sbb
pusha
add
push
out
test
jnp
outsb
inc
xchg
mov
aad
inc
rcrl
or
dec
rorb
pop
addr16
stos
test
or
mov
std
add
push
pop
mov
test
fnsave
and
fs
daa
sbb
out
push
in
aam
scas
fiaddl
or
xor
pop
subl
shr
adc
sti
jb
out
out
divl
lock
insb
dec
mov
mov
pop
mov
push
mov
mov
leave
pop
nop
jae
fwait
out
xor
cmp
lea
sub
imul
sbbb
mov
daa
iret
inc
xlat
out
sub
test
add
je
pop
rcr
dec
mov
pusha
inc
mov
mov
les
jb
out
imul
dec
jecxz
jb
stos
ja
mov
in
push
in
ljmp
call
xchg
mov
out
inc
jmp
ds
arpl
sahf
js
aaa
mov
loope
inc
rcrb
int
pop
ljmp
dec
ret
jmp
and
imulb
sbb
rclb
data16
sarb
mov
ljmp
add
test
shll
int
fdivr
pusha
dec
and
rol
ljmp
scas
lock
cmpsb
pop
inc
and
in
loop
add
push
call
enter
out
xchg
cli
call
adc
push
jmp
test
pop
sahf
stos
aam
movsl
inc
popa
pop
lods
pop
shlb
xor
and
lret
bound
fildl
xor
adcl
repnz
sbb
rolb
mov
pop
add
mov
cs
sub
or
lea
icebp
inc
sub
lcall
inc
fsts
push
inc
popa
jl
insb
mov
in
push
js
inc
xor
pushf
jg
mov
roll
pop
mov
imul
add
xchg
xor
icebp
in
rcr
push
loope
lods
add
negl
pop
pop
jmp
fidivrl
rol
sub
out
add
sub
pusha
inc
sub
ret
ret
and
scas
pop
xchg
sbb
jb
out
fldl
cmc
loop
mov
cmpsl
push
mov
inc
sub
cs
fcoms
dec
xlat
mov
or
adc
push
push
jg
in
cmpsl
mov
or
mov
mov
adc
fiaddl
jae
aad
lahf
dec
popa
push
or
jp
fsubrl
imul
pop
inc
fld
icebp
mov
lods
mov
sbb
sbb
outsl
daa
clc
add
aad
xchg
xor
dec
and
push
add
cmpsl
mov
adc
daa
xor
xchg
jb
divl
cmpsb
repz
mull
pop
inc
hlt
pop
out
enter
inc
cmp
adc
movsb
or
dec
imul
xor
roll
aas
lcall
sbb
pusha
push
mov
test
outsb
bound
repz
rolb
bound
out
out
dec
std
push
icebp
lds
imul
icebp
push
pop
stos
stos
jb
pop
xor
inc
jle
and
adc
lcall
fwait
cmpsb
dec
ljmp
gs
jle
or
xchg
addr16
mov
mov
mov
lcall
in
sbb
outsl
xchg
popf
outsb
fdivp
test
imul
insb
mov
mov
mov
adc
inc
lcall
imul
pop
mov
imul
xchg
test
test
out
hlt
jbe
dec
or
jnp
mov
jmp
cltd
repz
jl
and
mov
mov
pop
cmp
in
mov
pop
dec
jno
sbb
repnz
repz
sahf
shll
add
cmpsb
mov
pop
push
insl
cmp
adc
outsb
jp
ljmp
das
or
not
add
and
js
bnd
and
lock
xor
inc
and
adc
xor
or
aaa
pop
stc
xchg
test
cmp
pusha
adc
int3
ds
xchg
mov
cli
out
adc
ret
ret
pop
movsb
fwait
sbb
shrb
test
mov
inc
cs
or
std
jp
add
in
stos
popa
sbb
lcall
and
pusha
pop
jne
and
sub
mov
cld
lea
mov
mov
movsb
mov
push
inc
fbld
pop
dec
xchg
cs
pop
pop
ja
push
je
pop
dec
test
rorl
test
shlb
popa
inc
push
and
shlb
jno
push
mov
or
xchg
fldenv
ss
dec
mov
add
jg
sahf
and
aaa
iret
out
lea
out
push
mulps
hlt
outsb
inc
push
lock
or
push
popa
or
sub
mull
add
faddp
sbb
subl
pop
mov
popa
sbb
aaa
sub
in
stos
repz
int3
test
pop
mov
mov
inc
gs
pop
hlt
jns
pusha
sbb
jle
mov
movsl
ja
pop
xchg
or
pusha
lds
or
icebp
cmp
inc
jo
push
mov
mov
ljmp
mov
test
cmpsl
lods
adc
unpckhps
arpl
xchg
push
aaa
adcl
push
and
mov
test
adc
add
and
jns
cmp
pusha
cltd
xchg
lea
pop
xchg
into
out
hlt
jp
nop
push
scas
inc
jmp
dec
scas
and
pop
cmp
addr16
pusha
adc
cmpsb
lret
jno
out
push
gs
mov
jae
sbb
xor
sbb
out
popa
jecxz
dec
test
mov
adc
addr16
out
jl
inc
pop
add
out
outsl
pop
or
sub
sub
mov
stos
inc
aam
push
xor
int
adc
pop
fdivp
pop
mov
xchg
pop
push
in
ljmp
leave
cvtps2pi
sub
push
push
shlb
dec
mov
pop
lods
out
pop
jp
cmc
cmp
popa
shll
gs
ret
jno
inc
xor
enter
popa
add
xabort
and
pop
loope
in
cli
movsl
jl
pushf
pusha
decb
inc
push
mov
lods
mov
xchg
not
aad
pop
pop
push
aad
push
sahf
xchg
push
out
add
jecxz
das
mov
movsl
out
xor
add
out
push
out
scas
xor
adc
repz
jnp
orb
int3
or
sub
sbb
loopne
mov
popa
and
int3
cmc
subb
xlat
mov
lret
or
enter
leave
sbb
pop
fisubs
xlat
loopne
add
push
ret
sub
pusha
sub
mov
mov
cli
ljmp
out
mov
test
testl
adc
sub
repz
lret
test
sbb
xchg
sub
pop
adc
ret
dec
cmc
mov
ljmp
js
cli
stos
inc
lods
bound
mov
jmp
cmp
leave
cmpsl
popf
lcallw
pop
push
popa
adc
xor
pushf
out
inc
ljmp
mov
lcall
out
push
out
jmp
add
mov
sub
jmp
adc
push
dec
jle
test
dec
push
fnstsw
in
movsl
xchg
mov
sbb
sbb
cwtl
outsb
pusha
gs
mov
inc
ds
jno
dec
mov
pop
arpl
aad
rorb
xchg
mov
add
jae
lock
xorb
sub
test
inc
pop
sbb
dec
pop
les
fisubrl
popa
jnp
int
add
mov
scas
das
jb
mov
loope
mov
sahf
je
rcll
cmp
ret
jg
pop
cmc
push
dec
add
inc
mov
cmpsb
in
xor
dec
dec
stc
xchg
outsl
hlt
jg,pn
dec
sbb
lds
lock
xor
xchg
add
pusha
or
lods
xlat
dec
mov
aam
imul
add
loope
loopne
fucom
mov
inc
inc
shll
jle
sbb
out
sbb
xchg
shll
xchg
int3
fwait
out
pop
in
cli
push
fldl
push
cmpsb
dec
mov
outsb
mov
inc
enter
test
dec
mov
sub
fsubl
stos
mov
icebp
xchg
into
jge
sbb
pop
adc
dec
mov
shll
aam
scas
sub
jecxz
pop
ja
cld
cmp
shrb
push
rolb
aas
jno
ds
jmp
or
sbb
test
pop
es
pop
je
jmp
mov
aad
mov
and
xchg
pop
cltd
stos
cs
popf
dec
push
sahf
pusha
fisubrs
sub
pop
or
xchg
into
jne
xchg
mov
mov
sbb
sub
sbb
sti
mov
inc
test
add
mov
in
testb
in
insb
mov
aaa
out
mov
and
ucomiss
insb
lea
push
mov
xor
pop
or
xchg
sub
push
out
mov
dec
mov
inc
mov
mov
dec
xchg
mov
int
fwait
cmp
pop
xor
mov
in
and
cmp
mov
sahf
dec
jns
xchg
pusha
adc
push
xchg
push
sbb
imul
out
adc
lods
xchg
repz
add
fcomps
test
mov
mov
jnp
push
jge
aas
test
sub
arpl
add
jne
or
sbb
sbbb
mov
jno
adc
xor
xor
dec
push
add
out
push
pop
dec
mov
das
jbe
add
sbb
mov
aas
mov
cmpsl
loop
sub
into
out
jae
test
cmp
add
daa
dec
popa
jp
cmp
cltd
cwtl
pop
push
cli
xor
pop
adc
aas
out
rcrb
subb
outsl
daa
cmp
clc
aas
shlb
xchg
out
pop
js
jp
mov
mov
pop
jbe
lcall
les
mov
mov
xchg
pop
push
and
mov
xor
repnz
xor
push
incl
push
popa
lea
cmc
inc
add
andps
scas
push
in
and
aad
fimuls
mov
xchg
adc
and
mov
push
xchg
les
pop
and
adc
cmpb
ljmp
pusha
in
push
dec
das
pop
fs
mov
stc
pop
or
aaa
xor
sbb
sub
mov
and
cmp
jg
jp
add
flds
or
out
mov
inc
add
jge
rorb
pop
scas
popaw
out
pop
cmpb
pop
inc
jmp
cmp
mov
bound
ss
repnz
xchg
cld
fcoml
in
mov
pusha
shl
pop
ret
sub
cltd
cmp
mov
js
dec
int3
out
mov
das
icebp
lret
sti
inc
repnz
xchg
mov
pop
add
fcmovnb
pusha
das
repz
xchg
test
jmp
outsb
mov
addr16
push
popa
scas
ds
mov
adc
fstpl
pop
push
fdivrl
icebp
pop
mov
sub
test
shlb
frstpm(287
inc
pop
jge
and
mov
out
add
dec
xor
cmpsb
icebp
jle
adc
xor
and
rorb
push
add
adc
loopne
dec
sub
xor
insb
pop
jecxz
xchg
pop
and
mov
cli
arpl
push
out
jg
ja
dec
mov
xchg
pop
sub
fadds
test
pop
clc
and
or
xlat
pop
cmp
addr16
loop
adc
pusha
repz
divl
bound
mov
push
sbb
pusha
xor
loop
xchg
xor
out
push
outsb
mov
pusha
shrb
mov
ret
loop
iret
mov
mov
jne
data16
out
mov
in
xchg
ja
jns
int3
vmread
call
adc
sub
ret
lock
add
jl
dec
lahf
adc
or
inc
xchg
add
cs
fs
outsb
pop
jmp
lea
je
xor
pop
out
fists
sar
adc
mov
into
pmaxub
xchg
out
hlt
insb
adc
test
out
pop
notb
xor
out
jle
pop
cmpsl
pop
push
mov
insl
inc
inc
mov
jp
xchg
or
sub
and
fstpt
aaa
push
mov
fs
add
mull
push
adc
xor
inc
cs
pop
adc
fs
xchg
adc
nop
movsb
fisttps
xor
repz
addr16
cmp
jns
pop
ja
push
mov
loop
add
fsts
outsb
jg
dec
idivb
inc
inc
or
or
mov
pusha
fdivs
sbb
jnp
loop
fidivrs
sbb
loop
cld
scas
lods
mov
jb
adc
pop
pop
and
sbb
adc
fbld
scas
negb
sbbb
push
dec
lods
mov
jg
pop
in
aad
fcmovne
ss
out
sub
in
jns
dec
pop
rcll
fstps
pop
ja
mov
jne
out
cmp
ljmp
push
dec
movsl
imul
ss
aas
ja
lds
testl
clc
mov
pop
sub
add
jmp
xchg
jo
lahf
arpl
ja
lods
adc
xor
add
push
into
enter
sbb
fcompl
popa
push
adc
rolb
mov
mov
pop
imulb
cmp
iret
fldpi
jo
cmp
mov
adc
add
lds
pushf
xchg
rcrb
xchg
push
and
out
lods
cmc
cltd
sbb
cmp
into
aaa
dec
and
cmp
popa
scas
push
mov
fiadds
loopne
mov
dec
xlat
jo
cli
fnstenv
scas
test
dec
jmp
pop
pop
bound
test
and
xor
push
mov
sub
add
xchg
adc
mov
fistps
popf
push
xchg
cmp
ljmp
mov
and
movsl
sub
movsb
icebp
out
cld
or
loopne
sub
test
cmpsl
pop
ret
mov
adc
out
in
and
push
mov
int
jbe
into
fwait
jns
out
imull
xor
lods
push
sbb
hlt
pop
push
sahf
pop
loop
pop
cltd
xchg
in
push
icebp
out
imul
or
rcrb
cmp
ficoml
mov
aaa
inc
ds
negb
jae
mov
insl
adc
pop
jle
cmp
lcall
xchg
mov
or
arpl
push
cmpsb
mov
stc
mov
insl
cltd
imul
jp
pop
push
jns
mov
sti
inc
out
je
aas
cmpb
sarb
pusha
dec
out
mov
in
sbb
mov
push
cmp
iret
jle
jne
or
sahf
out
mov
xor
enter
pop
push
aad
sahf
fst
out
adc
push
int
ficomps
inc
or
in
mov
test
or
push
mov
lds
addr16
pop
add
sti
jl
mul
dec
or
ljmp
mov
xlat
sahf
mov
jmp
iret
fidivl
and
shlb
xchg
mov
mov
mov
mov
sbb
lods
fidivrl
cmp
orl
bound
decl
push
inc
pop
jns
mov
push
popa
jmp
fs
jmp
and
pop
inc
mov
shl
xor
mov
dec
in
jle
out
cltd
fdivl
cmp
out
pop
xlat
lods
rcrl
jp
scas
mov
mov
cmp
mov
movsb
fisubrl
xchg
jae
fcmovb
fstps
lock
mov
mov
jmp
xlat
inc
inc
xchg
loope
out
in
loopne
pop
cwtl
or
stc
movl
cmc
popa
jno
mov
in
adc
jecxz
aaa
rcrl
push
xor
mov
mov
sbb
cmpsl
imul
lods
xchg
dec
out
bnd
cmp
stos
cs
stos
sbbb
and
lods
mov
dec
push
push
jg
mov
and
lcall
push
out
movsb
xchg
push
out
iret
add
jb
dec
outsb
pop
inc
mov
call
pusha
pop
dec
mov
cmp
xchg
pop
repz
mov
outsb
in
mov
fiadds
call
std
jecxz
in
jge
lock
cmp
mov
mov
aad
mov
test
cmp
ss
in
push
out
pop
cmpsl
imul
dec
and
mov
push
hlt
push
sbb
sbb
out
dec
push
dec
pop
push
in
xchg
ds
push
out
cmc
inc
mov
mov
les
jmp
pop
cmp
push
cmp
mov
xchg
mov
push
out
enter
call
mov
inc
lcall
xor
rcr
mov
test
das
into
cwtl
xchg
xchg
xchg
pop
shlb
ss
pop
push
mov
shll
sub
adc
or
ss
sahf
push
sub
add
lret
movsb
filds
inc
pop
or
or
scas
fidivrs
and
arpl
fucom
mov
mov
sbb
arpl
dec
into
push
inc
movsl
add
fbld
out
js
mov
mov
and
pusha
pop
and
es
repz
mov
aaa
ficoms
xchg
add
cmp
fcompl
or
mov
push
inc
popa
mov
out
aaa
repnz
and
mov
jle
fcmovnbe
daa
mov
repnz
mov
sbb
stos
xor
xchg
fiaddl
sub
dec
out
cltd
xor
push
sbb
jns
mov
mov
pushf
and
pop
add
mov
test
mov
fs
out
scas
jle
shr
movsb
sub
bound
push
push
add
pop
sahf
push
ficompl
jle
push
cli
inc
iret
sbb
in
cmp
push
jns
push
lods
dec
cmp
aam
jno
adc
and
lret
ds
in
mov
insb
movsb
lods
push
lds
jg
cld
cmp
icebp
ret
xor
shlb
fistpl
insl
cmp
jmp
popa
sahf
mov
scas
in
movsl
int
ja
lcall
inc
mov
add
lea
mov
lahf
jmp
out
push
std
push
xchg
rorb
ficoms
adc
pop
pop
clc
xor
mov
cmc
fldenv
hlt
dec
inc
bound
pop
xor
or
fisubl
jo
lret
pop
scas
cmp
mov
pusha
ds
mov
aas
dec
mov
enter
jmp
add
cld
mov
pop
pop
cs
ficomps
testb
mov
xchg
jae
outsl
add
push
mov
leave
jg
adc
jo
shll
std
add
push
fnstcw
xor
fs
pop
jecxz
mov
mov
sub
out
sbb
pop
add
mov
pop
fnstcw
add
shlb
jg
xor
out
adc
cmpsl
scas
clc
outsb
andl
lods
or
out
jle
jns
and
jne
dec
jmp
jbe
adc
add
xor
xchg
sbb
cmp
aad
inc
pop
mov
push
xor
cltd
push
dec
insb
mov
inc
dec
loopne
pop
pusha
xchg
cld
mov
or
sub
std
push
adc
jecxz
mov
ja
mov
mov
pop
out
and
xchg
sahf
add
movsb
jge
das
mov
mov
out
in
cmp
js
clc
mov
out
xor
lock
cwtl
fldt
mov
test
add
pop
popa
xchg
xchg
or
test
pop
fisttps
ss
inc
lret
push
mov
das
inc
push
movsb
test
push
lahf
loope
pop
sub
push
je
inc
ret
std
cmp
iret
mov
fisubrs
das
mov
xor
dec
fidivl
es
or
ret
cmpsl
fsts
rcll
or
push
pop
cmp
and
cmp
cmp
adc
popa
icebp
jo
sub
cwtl
or
pop
dec
outsb
push
mov
ret
and
mov
cmpl
mov
and
repz
fsubrp
cwtl
pop
inc
pop
lock
dec
cmp
aas
je
push
jmp
movsl
push
xor
xor
lock
dec
icebp
push
out
jle
cs
iret
jmp
cmp
dec
mov
pushf
and
out
int3
inc
adc
jae
xchg
das
imul
popa
leave
jbe
sti
cmc
sahf
out
out
jb
loopne
loop
in
addb
xor
out
fldt
aaa
lcall
xchg
js
dec
insb
and
imul
adc
pop
lods
pop
adc
addr16
pop
mov
adc
add
out
mov
xor
dec
inc
sbb
xchg
lahf
sbb
pop
and
dec
outsl
sbbb
pop
mov
adc
aam
jne
xor
in
out
scas
fcmovnu
popa
hlt
push
pusha
rorb
fidivrs
and
cmp
loope
pop
sahf
rolb
jmp
and
decb
sbb
imul
push
mov
test
bound
les
divl
or
lock
mov
call
test
les
cmp
sub
and
add
pusha
sahf
mov
bound
or
dec
inc
inc
insl
mov
pop
mov
mov
std
inc
pusha
inc
clc
jne
add
xchg
mov
popf
rdpmc
iret
pop
pusha
shr
js
cmpb
mov
sbbb
sbb
fwait
bound
stos
mov
inc
mov
scas
push
daa
xchg
fstpl
mov
push
addr16
faddp
xchg
inc
mov
jbe
insl
pop
enter
mov
cmpb
push
btc
outsb
lods
aaa
cmpb
adc
mov
xchg
add
xor
mov
pop
push
in
add
mov
cmc
pop
stos
push
cmp
pusha
sbb
repnz
out
repnz
jbe
jae
jnp
movsl
mov
loopne
dec
outsb
and
sar
push
push
cmc
adc
mov
fsubrl
jmp
mov
jl
sub
pop
mov
dec
scas
ljmp
cmc
fwait
mov
sub
sbb
scas
mov
js
cmp
cmpsl
test
ret
repz
mull
mov
les
mov
clc
adc
sub
out
movsl
gs
test
sbb
cmp
or
push
pop
popa
jne
sub
aas
jle
push
mov
xor
out
push
pop
mov
dec
hlt
shll
cwtl
inc
pop
fnsetpm(287
cmp
pop
lcall
push
fstpl
fwait
inc
cmp
movsl
test
dec
orb
cltd
adc
jecxz
push
jns
mov
ja
push
vmovhps
in
scas
lock
in
adcl
or
arpl
jb
lods
jns,pt
pop
xor
int3
aad
mov
les
push
jecxz
pop
repnz
push
test
inc
out
mov
das
xor
push
mov
jge
add
xor
pop
pop
ret
push
gs
push
pop
and
cmp
dec
and
pusha
push
adc
and
jne
lock
add
bnd
lock
xchg
imul
int3
push
dec
jle
jne
pop
mov
movsl
out
xchg
imul
out
push
out
pop
mov
mov
ss
repz
std
adc
add
pop
scas
adcl
in
out
inc
movsl
add
jp
aas
sub
out
out
imul
repnz
sarb
or
sbb
pop
clc
aas
cmpsl
jmp
fldz
cmp
sti
aaa
add
cmp
mov
mov
pop
imul
lods
adc
sbbb
mov
cld
jmp
out
divb
mov
jmp
xchg
ret
jge
fisttpl
xchg
jg
in
and
mov
push
arpl
push
xor
mov
mov
lret
in
dec
mov
jnp
push
das
nop
pop
dec
aas
add
outsb
jnp
mov
pop
scas
outsb
xor
xchg
shll
pusha
adc
mov
pushf
push
jo
mov
or
push
sub
cmc
sub
sbb
sar
jnp
sub
add
cmp
jno
sahf
mov
daa
jmp
xor
dec
mov
pop
repz
cli
sbb
or
mov
cmpsb
js
adc
stc
mov
mov
push
mov
cmpsb
xor
push
jae
dec
or
ficoml
push
out
sbb
push
dec
out
inc
mov
xor
dec
pop
shr
xor
add
xchg
loope
mov
fcomi
xchg
inc
and
mov
dec
mov
adc
pop
insb
jecxz
dec
inc
mov
insb
add
and
ja
mov
xlat
jmp
loop
or
gs
pusha
daa
push
pop
call
out
inc
enter
lret
mov
aaa
adc
sbb
add
sub
cmp
lahf
imul
cmp
movsb
jne
jno
sub
pop
ret
inc
pushf
loop
mov
gs
daa
xor
cli
add
pusha
testb
mov
out
jnp
mull
mov
mov
fiaddl
cmp
std
jae
std
js
and
sub
lcall
mulb
out
jecxz
popa
jo
ljmp
movsb
sahf
push
jb
pop
fildll
in
out
arpl
pop
cmpsl
lea
or
pop
push
mov
fs
and
mov
sar
cmp
pop
imul
aas
pusha
add
mov
jno
mov
pop
mov
imul
jno
push
mov
ret
mov
pop
mov
mov
imul
pusha
pop
xchg
and
push
inc
sub
ss
mov
lret
fidivrs
inc
mov
arpl
in
insb
add
dec
outsl
push
daa
pop
pusha
leave
imul
out
jmp
leave
adc
dec
punpcklwd
mov
push
xchg
push
xor
mov
jp
cld
mov
fcmovnb
add
mulb
rcrb
jmp
and
pusha
lods
push
stos
xchg
into
jp
add
jns
and
mov
ds
fstpl
out
mov
dec
mov
mov
hlt
movsb
jo,pt
xchg
out
mov
jle
out
or
sub
cmp
scas
cmp
nop
stos
ja
jae
sbb
test
and
loop
es
mov
xchg
lods
cmpsb
bound
jecxz
ja
fs
xchg
sti
mov
out
pop
test
pop
lea
pusha
popf
loope
js
adc
or
mov
adc
outsb
sbbb
je
iret
cmpsl
sbb
adc
sti
jmp
lds
in
fs
addb
popa
xor
sahf
movsl
sbb
repnz
movsb
int3
dec
cmp
lods
cltd
cld
insl
xor
inc
push
adc
jo
push
pop
nop
mov
aam
hlt
mov
arpl
pop
je
int
xor
shlb
jo
cltd
xchg
js
outsl
in
jae
adc
push
add
fimuls
ljmp
pop
pop
jmp
sbb
lds
inc
repz
xchg
mov
sbb
fcompl
lock
scas
neg
cwtl
movsl
inc
das
mov
iret
fstpt
outsb
jns
fistps
mov
out
pushf
int
push
add
mov
xor
push
cmp
adc
push
in
movsb
push
sub
mov
pop
loopne
cmp
pop
inc
in
popaw
cmp
sub
popf
out
adc
mov
repz
mov
push
xchg
sbb
scas
gs
das
arpl
aad
adc
bound
xchg
mov
mov
nop
or
negb
pushf
cmp
fildl
sbb
dec
jecxz
flds
ficompl
mov
push
call
int
lret
add
pop
dec
xchg
pop
mov
fadds
jge
add
jnp
jecxz
std
jmp
pop
insl
imul
sbb
nop
stc
in
lods
sar
sub
sbb
inc
loopne
andl
mov
or
mov
jl
adc
cld
js
scas
xorb
cs
and
andb
adc
jb
test
add
test
out
sbb
data16
call
mov
out
push
pop
fsubp
and
in
pop
insb
or
xlat
xchg
mov
pushf
sahf
push
nop
pop
mov
mov
lahf
pusha
pop
ret
test
test
mov
std
in
mov
int3
xchg
sub
push
xor
arpl
cs
fcompl
popa
leave
mov
repz
push
and
sub
popa
fwait
pusha
jnp
lret
cmpsl
add
pop
outsb
lds
popa
mov
or
push
sbb
push
es
test
stos
sub
dec
xorb
sbb
rorb
out
or
sti
xchg
dec
inc
into
xchg
add
sti
inc
out
or
push
push
mov
aas
pop
mov
addr16
loope
gs
insl
pop
sarb
into
pusha
inc
xor
mov
loope
xor
add
push
insl
sbb
outsl
inc
cmp
in
cmp
inc
pop
lock
inc
bound
test
lds
gs
mov
and
mov
xchg
in
stc
lahf
xor
jb
mov
out
push
sbb
mov
add
mov
int3
sahf
cmc
mov
xchg
pop
out
jp
or
leave
nop
pop
inc
shlb
iret
xor
inc
stos
addr16
mov
mov
pop
fistpl
test
in
push
fdivl
cltd
add
daa
fwait
add
pusha
push
xor
clc
movsl
pop
mov
or
mov
push
mov
out
sub
repz
aaa
push
pop
ljmp
arpl
mov
in
pop
jmp
mov
lret
mov
scas
out
mov
rcr
cmp
push
cli
pop
clc
mov
dec
popa
dec
pop
xchg
cltd
dec
bound
xchg
sub
xchg
xor
mov
push
testl
push
mov
iret
mov
into
push
pop
lock
cmp
jb
ds
mov
pop
mov
xchg
pop
popa
xor
mov
push
out
ljmp
sub
cmp
roll
stos
mov
pop
hlt
adc
int3
and
pop
jmp
adc
jb
pop
jl
out
lret
fnsave
mov
lea
xor
pop
adc
rolb
shlb
and
inc
loope
faddl
cmp
movsl
push
xor
in
repz
lahf
int
push
stc
xchg
sub
lahf
inc
test
ss
adc
sahf
test
sahf
mov
mov
pop
movsl
jbe
dec
ss
adc
and
into
xchg
jge,pn
jnp
pop
cs
arpl
push
adc
sarb
cmpsl
ret
neg
pop
jno
fs
mov
lods
into
or
pop
mov
xchg
and
out
dec
dec
dec
mov
mov
mov
jne
pop
fnstenv
movsb
inc
push
mov
sbb
sbb
daa
mov
xor
mov
mov
pop
push
adc
cmpsb
inc
shl
sahf
sbb
negl
movhps
jae
mov
pop
imul
mov
cli
mov
mov
or
fs
or
fstpt
mov
cltd
jg
inc
test
pop
push
pop
lcall
jmp
int3
jmp
push
test
subl
and
jne
popa
cltd
mov
test
add
test
jo
jmp
mov
aam
push
fsts
sub
inc
pop
mov
out
ret
cmp
jb
push
fs
jmp
sbb
mov
pusha
ret
fmull
push
inc
imul
inc
pop
ret
push
adc
xor
push
dec
mov
xchg
xchg
icebp
mov
mov
mov
push
leave
andl
mov
xor
fsubrp
mov
repnz
scas
push
mov
int
clc
out
addr16
xor
dec
lahf
dec
jmp
fisubs
xchg
add
pop
pop
jbe
out
fldl
shrb
data16
cmpsb
lret
scas
out
sub
mov
lea
jmp
dec
jns
and
pop
jo
pusha
popf
sbb
pop
in
dec
mov
and
lock
addl
cmpsb
fiaddl
pop
repnz
jb
cmpsb
adc
lret
pusha
scas
pop
int
stos
mov
push
pop
jl
or
pushf
jecxz
popa
jl
repnz
mov
rclb
out
jne
pop
push
call
lcall
in
inc
mov
test
sbb
pop
inc
xlat
pusha
xchg
std
aas
mov
add
jmp
cmp
hlt
cmp
add
scas
add
inc
daa
scas
push
push
xchg
mov
jnp
sar
mov
xor
push
jmp
es
mov
orl
jno
jo
iret
aam
mov
sub
sbbb
add
inc
fdivrs
repnz
mov
mov
lea
xor
jae
dec
xchg
push
popf
push
pop
scas
test
add
ret
fstps
xlat
xor
loopne
xor
out
jno
pushf
mov
xchg
cmp
dec
inc
and
shlb
movsb
mov
loop
pop
loopne
pusha
imul
jnp
mov
out
jns
cltd
sti
push
movsb
stc
mov
mov
enter
jl
imul
push
rcrb
push
in
test
movb
push
repz
cltd
fidivrl
inc
shl
sahf
sub
lret
fsubrl
pusha
icebp
loope
iret
push
faddl
mov
in
pop
and
das
mov
mov
bound
inc
shll
call
dec
rcrb
xor
out
adc
mov
mov
stos
out
stc
or
into
addr16
add
pop
pop
mov
pop
or
scas
sahf
and
fbld
fbstp
ret
out
jp
jo
mov
xchg
pop
mov
lds
and
jecxz
mov
leave
sbb
push
add
pop
sti
fnstsw
mov
pop
out
movsl
sub
insl
pop
ljmp
cmc
test
and
outsb
mov
push
xchg
push
pop
out
push
sub
mov
fbld
cmp
addl
out
lcall
xor
addr16
sub
aaa
mov
in
pop
mov
pextrw
and
lcall
in
lods
adc
into
dec
ja
aaa
mov
in
cmc
popf
pop
stos
lahf
xor
pop
sub
cmpsl
stos
scas
xchg
out
js
scas
es
or
int
cmp
ds
repz
sbb
and
jle
cmp
inc
pop
lods
jno
popl
mov
pushf
outsb
mov
fwait
shr
pop
mov
pop
in
out
mov
cmp
sahf
jae
add
ds
add
arpl
ljmp
mov
jns
mov
rcrl
testl
adcl
cld
int
pop
std
push
dec
sub
shl
pop
mov
dec
dec
daa
sbb
shll
lahf
pop
push
shr
leave
and
xchg
inc
pusha
daa
and
popa
out
shlb
jg
sahf
push
out
imul
insl
ja
pusha
mov
pop
inc
xor
mov
fisubl
lret
sbb
divl
mov
sub
cmc
js
rcrb
bswap
mov
xchg
int3
jne
fsubs
push
popa
outsl
mov
mov
test
sub
imul
pusha
mov
call
pop
or
fucom
pop
icebp
xor
dec
in
mov
mov
imul
pusha
out
adc
xchg
dec
out
aaa
and
jmp
mov
lds
push
sbb
in
pop
or
gs
jmp
xchg
pushf
les
mov
xor
push
pop
icebp
jnp
aaa
popf
jno
in
movsl
aaa
or
and
ljmp
and
adc
sbb
pop
enter
in
pop
jb
cli
sahf
ficoms
xor
int3
sbb
push
mov
insl
jnp
dec
pop
les
xchg
cmc
pusha
cmp
repz
mov
ret
mov
movsb
mov
push
mov
loope
cmpsl
and
and
cmp
in
mov
xor
lea
aam
inc
and
dec
lds
test
or
enter
sahf
adc
test
fwait
int3
ljmp
out
add
dec
dec
mov
sti
cmp
mov
les
test
in
shl
jle
mov
outsb
aas
dec
sub
sbb
lock
sub
movsb
jbe
cli
adc
adc
pop
bound
sbb
cmpsb
fistl
dec
repz
xor
lea
out
jb
push
jg
scas
pusha
lret
xor
adc
ja
out
movsl
pusha
mov
shll
xor
daa
pop
ss
sub
out
or
fdivl
insb
mov
fistps
aas
pop
loopne,pt
insb
pop
cld
call
aad
std
stos
xchg
dec
in
sub
mov
pop
popa
mov
cmp
mov
out
outsl
call
push
and
in
jno
pop
and
xor
popa
stos
fwait
dec
aad
jns
mov
ret
out
scas
inc
fsts
pop
jle
sahf
jbe
sub
adc
mov
mov
and
lods
outsl
pop
into
in
add
es
lea
adc
and
mov
sarb
inc
push
and
fnstsw
leave
mov
pop
or
out
xor
in
and
mov
test
mov
jg
pop
test
les
mov
out
jne
pop
hlt
add
sbb
push
jb,pn
std
ss
and
sbb
cmp
cwtl
add
mov
jmp
ss
sahf
arpl
and
test
sub
xchg
xchg
mov
bound
rorl
dec
xor
pop
xchg
or
lock
test
mov
cmp
pop
xor
loop
sbb
add
pop
xchg
pushf
in
icebp
call
push
jne
push
ss
pop
daa
in
sbb
and
push
loope
lods
mov
push
mov
xchg
dec
test
aad
cmpsl
int
mov
fstpl
out
flds
fdivl
jp
xor
pop
lea
adc
mov
loope
pusha
outsl
mov
dec
add
mov
mov
mov
int3
pop
insl
dec
pushl
inc
pop
ja
inc
xchg
cmp
mov
sbb
xchg
mov
mov
shlb
jns
imul
inc
mov
fs
cmp
aas
aas
mov
fbld
repnz
lret
dec
sub
pop
mov
xor
pusha
or
cmp
mov
push
mov
imul
add
push
imull
and
cli
outsb
xor
pop
and
sbb
push
movsl
idivb
push
je
clc
push
stos
pop
popa
push
sbb
lret
out
xlat
pop
pop
inc
jg
xchg
mov
mov
in
pop
xchg
roll
test
aaa
xchg
mov
mov
mov
in
or
cmp
xor
fucomip
inc
out
ret
inc
movsl
fisttpl
inc
and
sarb
popa
pusha
mov
sub
add
cmp
movsb
push
fcomps
daa
jb
ficoms
or
fnstcw
or
push
sub
cwtl
hlt
lods
jg
pop
ds
and
or
adc
pop
fwait
mov
fisttpl
pushf
push
pop
mov
stos
je
movsb
xchg
push
pop
jmp
repnz
pop
dec
outsb
mov
dec
pop
mov
push
icebp
repz
jns
xor
cmpb
mov
add
in
xchg
das
pop
sbb
repz
or
xor
and
loope
sti
lea
pop
adc
jb
jecxz
mov
popa
jecxz
rcrl
shll
fs
pop
sub
xchg
or
sub
sub
fldl
jo
xor
ljmp
jnp
mov
fists
insl
push
adc
in
sarl
push
pusha
mov
dec
xchg
jo
test
psubw
rol
outsl
pusha
mov
mov
js
xor
idivb
lods
mov
std
sub
push
adc
stos
imul
sub
leave
leave
add
pusha
push
pop
add
pop
and
in
push
cmc
mov
sub
nop
arpl
fsubp
pop
dec
jbe
arpl
ss
daa
mov
movntps
cld
dec
scas
das
imul
dec
cmpsl
mov
push
out
cld
xchg
ljmp
imul
add
pop
out
hlt
fucomi
xchg
push
arpl
xor
mov
inc
cmp
popa
push
xlat
call
push
or
push
std
xchg
jmp
out
cmp
test
mov
xchg
push
adc
data16
sub
adc
pop
push
xchg
ret
in
push
mov
call
xchg
imulb
leave
push
and
fwait
cmp
mov
out
les
call
and
jb
and
aaa
dec
sbb
out
aas
push
sub
mov
inc
lods
mov
insb
xor
xchg
xor
push
inc
insl
cmp
cld
ret
out
adc
xchg
xorl
dec
adc
mov
addr16
call
mov
xchg
mov
dec
add
es
sub
mov
jae
adc
in
lods
pop
jae
cmp
adc
jg
mov
adc
roll
cs
out
fsubl
mov
sbb
inc
cli
adc
adc
xor
hlt
nop
jmp
fisubl
jl
dec
mov
jge
xor
jnp
popa
push
sbb
stos
out
int
xor
mov
mov
or
cld
jp
lods
mov
add
push
test
mov
lds
mov
adc
lahf
sarl
dec
cmp
mov
popf
pop
shlb
lret
cmc
pop
mov
push
loopne
and
pop
xor
nop
and
inc
ss
pop
lock
pop
mov
mov
rclb
popa
jmp
push
ljmp
mov
pop
outsb
insl
mov
stos
cs
outsb
sbb
xor
iret
out
or
lret
nop
jbe
das
mov
fistps
inc
repnz
test
movsb
arpl
pop
cltd
pop
or
adc
jne
inc
add
and
stos
xor
xlat
mov
ret
adc
cli
pushf
jmp
pusha
ret
sbb
or
mov
test
xor
sub
xor
xchg
fidivl
es
mov
mov
andb
lret
cmpsb
xchg
xor
dec
mov
xor
out
xchg
xchg
lcall
adc
shrb
mov
mov
ret
add
xchg
ss
and
loop
adc
popa
icebp
aam
mov
in
movsl
aam
movsb
sbbb
lahf
pop
sbb
inc
mov
mov
mul
jne
daa
ja
jp
mov
sbb
pusha
adc
fldenv
jnp
mov
adc
mov
jle
je
push
out
pop
fmuls
aad
push
push
mov
subl
push
jnp
add
pop
icebp
fwait
dec
mov
loop
pop
fmuls
inc
cmp
lahf
pop
call
icebp
push
xchg
lock
mov
adc
pop
bound
sub
orb
pop
rclb
stc
pop
rcr
int
aaa
xorl
fs
pop
pop
mov
pop
mov
lock
imul
inc
lea
cltd
bound
call
pop
sub
sbb
pusha
out
push
sbb
push
cli
xchg
popf
in
mov
or
in
cmp
mov
cmp
fwait
xor
fisttps
inc
inc
lea
xor
pop
pop
in
les
cs
ljmp
pop
out
pop
and
fld
stos
mov
mov
clc
sti
mov
push
mov
mov
pop
insl
inc
shl
push
fistl
cmp
xchg
shlb
pop
sub
push
fmull
mov
push
pop
push
xchg
pop
add
pushf
push
mov
insb
jle
xchg
fwait
dec
mov
orl
add
pusha
test
movsb
mov
adc
push
pop
subb
jne
dec
mov
or
and
jp
pop
mov
hlt
lods
push
adc
inc
outsb
or
stc
int3
in
aad
fsubrs
cmp
mov
add
jg
testl
push
mov
rcrb
pop
cmp
in
loope
pop
mov
sbb
loope
xor
out
cmpsb
jae
mov
scas
iret
and
dec
shrl
add
daa
dec
loope
in
outsb
addr16
fcompl
jne
jbe
in
add
repnz
in
xchg
push
cmp
je
popa
fucomp
or
out
pop
mov
cs
ffree
pushf
sbb
mov
imul
sub
pop
mov
pop
sbb
je
insl
or
cmp
movl
test
outsl
cwtl
mov
inc
test
loopne
jle
addr16
mov
aad
fbld
pushf
aam
pop
loope
add
sti
or
adc
fsubrl
pop
popa
xchg
movhps
ret
jmp
xchg
sahf
add
add
jl
push
jmp
popa
insb
sbbb
mov
out
and
pop
stos
pop
and
sbb
xchg
jae
ja
sub
and
adc
jno
mov
jb
mov
fisubrs
neg
in
sub
test
or
fmuls
lret
js
jb
test
sub
sahf
idivl
sub
push
mov
in
pop
cmc
push
xchg
bound
int3
lea
mov
push
inc
pop
pop
jb
adc
pusha
pop
sahf
pop
out
mov
imul
mov
repnz
xchg
loopne
fidivrs
arpl
addl
mov
call
mov
lahf
stos
ja
cmp
mov
mov
cmp
int3
mov
mov
jbe
cmp
jbe
gs
pop
dec
cmp
cmpsb
shlb
pop
cmp
pusha
aaa
dec
loop
mov
fisubrs
das
jmp
dec
sahf
test
shrb
pop
pushf
jbe
pop
sahf
mov
ja
xchg
jno
xorb
inc
aam
int
xor
adc
pop
fistpll
add
cmpsb
adc
cmp
dec
pushf
in
mov
ret
jecxz
pop
mov
bound
iret
push
das
mov
aad
in
mov
jmp
mov
cmc
out
scas
pop
mov
pop
adc
mov
shrb
dec
pop
loope
push
imul
jns
test
lock
dec
aam
scas
push
popa
mov
push
in
addr16
pop
pop
mov
outsl
add
pop
imul
cmpsl
jbe
fnsave
xchg
and
fstps
push
jmp
add
adc
sbb
mov
inc
mov
sbb
out
pop
movsb
lahf
lea
pop
jge
mov
adcl
and
stos
arpl
add
gs
jae
jmp
dec
insl
xor
push
out
or
sahf
call
inc
bound
imull
xchg
cmc
repz
pop
push
movb
sbb
psubsb
and
pop
or
sarb
cs
inc
iret
mov
fwait
xor
sbb
cmp
jae
pusha
xor
scas
test
popaw
xor
jns
mov
iret
sahf
mov
dec
lods
gs
or
ljmp
push
int3
js
fisubl
dec
cmp
jl
pusha
cmp
pusha
jno
dec
cld
cmc
rorb
xor
push
cld
out
push
push
xchg
pop
out
aas
jmp
lahf
leave
mov
add
xchg
cmpsb
scas
out
lcall
outsl
mov
lods
jge
dec
cli
cmpsl
pop
cltd
xchg
sar
inc
xchg
pusha
jae
push
mov
out
inc
outsb
mov
cmp
push
xor
repnz
scas
or
shrl
mov
cs
je
jle
sbb
adc
push
add
xor
cs
mov
mov
in
rorb
shl
xor
aas
jae
test
add
and
cwtl
pushf
nop
outsl
xlat
push
mov
or
inc
loop
xor
fldenv
adc
out
mov
scas
dec
mov
popa
out
adc
xor
repnz
fs
pusha
jge
xchg
push
out
daa
and
fs
jmp
add
jp
mov
insl
mov
ljmp
int
loop
or
xchg
ljmp
jle
jae
jne
out
std
dec
int
enter
movsb
xor
into
mov
clc
push
out
inc
xor
sbbl
rorl
and
xchg
pop
test
adc
and
repz
cld
push
dec
cli
or
into
add
push
stc
sahf
in
or
popa
lret
jecxz
aas
dec
nop
lea
orb
mov
mov
or
pop
pusha
push
lret
mov
push
shll
mov
cwtl
mov
dec
pop
rol
adc
pop
cli
add
cmpl
push
in
mov
or
xlat
push
pop
rclb
add
push
pop
mov
in
adc
out
push
adc
xor
loope,pt
insl
arpl
fs
out
ljmp
push
sub
ss
xchg
jl
shrl
sub
sub
cmpsb
pop
pop
inc
xor
xchg
outsb
mov
jge
imul
mov
add
cmpsl
subb
fldl
xor
mov
mov
movsb
jae
jmp
jl
push
in
in
adc
cmpb
bound
jnp
pop
fbld
xchg
xchg
pop
jl
jmp
adc
in
sahf
jae
mov
xlat
call
cmc
fnstcw
lcall
xchg
mov
cmpsl
pusha
enter
jno
cmp
jne
sbb
scas
testb
jo
lods
imul
mov
pushl
cmpsb
fidivl
jle
loope
aam
out
cmp
repnz
mov
inc
fsts
pop
fiaddl
dec
mov
push
xchg
cltd
jg
cmp
out
outsl
bnd
adc
aad
arpl
nop
mov
pop
adc
xchg
xor
and
sub
dec
out
mov
mov
cmp
pop
xor
jb
cld
mov
sbb
xorl
pop
arpl
mov
xor
cmpsl
and
jle
jo
mov
stos
inc
outsb
and
add
pop
out
fldl
add
ret
in
mov
pop
out
xchg
and
ffree
aaa
jb
pop
add
pusha
sub
out
scas
adc
dec
push
mov
push
insl
adc
and
add
addb
pop
sub
dec
std
mov
push
pusha
adc
mov
adc
outsb
lods
pop
push
xor
push
mov
hlt
fimull
or
add
out
push
dec
repnz
pop
pop
cmp
jp
jne
dec
test
iret
push
insl
pop
sub
data16
popa
or
fs
ror
out
xor
xor
addr16
gs
int3
fsub
inc
sbb
sub
out
jb
push
mov
shrb
lods
pushf
out
dec
mov
mov
add
sbb
stc
xor
mov
mov
pop
pop
adc
jg
daa
rcr
cs
fstpl
test
out
pop
push
push
loope
xchg
leave
into
and
jle
pop
imul
mov
and
dec
mov
jnp,pn
cwtl
jmp
or
outsl
fsubr
loope
pop
xchg
aas
sub
aaa
mov
lcall
outsb
pop
in
jno
ud0
pop
out
loop
jbe
nop
pop
inc
repnz
inc
mov
dec
xchg
pop
iret
test
sub
popa
mov
adc
mov
loopne
inc
jmp
xor
lret
out
lods
repz
call
xchg
fistl
ds
dec
pop
xchg
pop
xor
aad
outsb
lcall
leave
dec
gs
rcrl
arpl
fcomi
ds
aas
rcrb
iret
subb
scas
mov
call
insb
es
outsb
xor
jle
aaa
push
aam
dec
movsb
pusha
orl
icebp
xchg
ja
push
pop
ret
mov
pop
push
cld
mov
add
divb
aad
in
mov
lahf
sub
adc
lock
inc
push
mov
and
pop
add
lea
mov
das
pop
cmp
mov
add
dec
dec
cmp
in
push
lock
adc
push
popa
cli
xchg
jle
mov
fsts
sbb
cmc
and
ss
rcrb
push
pop
aad
cwtl
mov
cli
mov
popa
stos
mov
push
lcall
pop
outsl
xchg
les
push
in
add
cmp
clc
xor
jecxz
rdpmc
pop
mov
insl
sbb
bt
mov
push
jge
mov
mov
shrl
icebp
fists
fiadds
adc
aad
out
jbe
lret
fbld
mov
ficompl
out
cmc
out
xchg
xor
xor
inc
es
adc
daa
popa
repz
push
dec
loopne
add
adc
mov
das
imul
xchg
negb
adc
sbb
mov
and
negl
jg
xor
jno
mov
and
insb
out
popf
lahf
rcll
mov
xchg
pop
jns
or
push
jne
stos
into
xchg
jo
lahf
lahf
lods
xor
aad
inc
shrb
adc
sbbl
xchg
push
out
ficompl
mov
in
stc
xlat
mov
push
hlt
sbbl
aam
jl
test
jnp
mov
xlat
lcall
outsl
repz
cmpsl
sbb
jne
andb
je
movsb
adcb
or
cmp
jg
ljmp
jle
rclb
push
fucomip
add
jbe
lods
pop
mov
stc
cmp
pop
push
dec
aad
mov
inc
je
mov
out
jle
loope
and
sub
testl
hlt
out
jp
nop
jne
sbb
inc
fwait
jae
call
pop
add
sub
out
mov
insb
js
jmp
fcompl
in
fwait
xchg
xchg
cmp
insl
cmp
sbb
mov
sub
stc
pop
sti
fsts
pop
in
jno
push
mov
push
lret
lods
call
fisubrl
inc
ficomps
pop
ds
adc
pop
cld
pop
lea
insl
pusha
add
push
or
shlb
ret
fadd
cwtl
shll
mov
outsb
sub
pusha
mov
cmpsl
loopne
dec
repnz
rcr
stc
sub
lock
jge
cwtl
pop
cld
cmpsb
mov
fbstp
popa
mov
xchg
jg
mov
shrl
dec
push
lahf
iret
mov
sub
test
mov
jg
add
pop
push
mov
sub
scas
dec
xchg
xor
mov
xchg
jl
mov
sub
das
test
jp
aam
insb
inc
mov
inc
lock
adc
push
movsb
movb
xchg
dec
pop
imul
mov
in
pop
jns
dec
jge
jecxz
cmp
in
jbe
inc
fsubl
in
and
or
das
mov
int3
arpl
bound
cmpsl
pop
lret
jmp
icebp
dec
out
mov
out
lahf
gs
out
push
sbb
data16
cmp
mov
jae
xchg
mov
out
adc
cwtl
jns
mov
fsts
pusha
das
xchg
mov
pop
jnp
mov
mov
mov
pushf
clc
pop
movsl
mov
into
mov
dec
dec
fs
push
test
jg
pusha
gs
push
stos
clc
faddl
out
mov
popa
repz
mov
add
push
pop
adc
out
lods
pop
mov
lahf
dec
pop
mov
push
loope
aad
icebp
dec
pop
mov
popa
jmp
aaa
or
mov
mov
ljmp
popf
stos
shl
out
pusha
inc
jno
cmp
mov
js
cmp
pop
mov
push
in
fs
arpl
cmpsb
out
mov
fistl
leave
gs
hlt
xlat
cmp
call
or
push
pop
xchg
and
mov
sbb
mov
fcmovnbe
inc
mov
mov
int3
xor
lahf
add
pop
nop
nopl
sub
jbe
pusha
inc
jge
cli
in
mov
popa
in
outsl
das
rcr
xchg
and
stos
out
out
xchg
dec
popa
xchg
sbb
sub
pop
shl
mov
mov
xor
int
adc
adc
jmp
pop
clc
sbb
test
pop
pop
mov
dec
lcall
and
mov
xchg
pop
repnz
inc
cmpsl
mov
iret
aaa
add
adc
mov
pusha
dec
and
cmp
mov
out
mov
pop
aas
dec
ret
pop
fs
mov
push
int3
xchg
mov
out
out
dec
lcall
mov
xchg
mov
cmp
pusha
cmpl
mov
out
adc
aaa
push
inc
mov
imul
pop
daa
cmp
pop
std
mov
dec
int
in
adc
xchg
sbb
push
je
add
adcl
push
cli
xlat
or
fdivp
out
dec
int
lods
sahf
and
fdivl
add
pop
mov
mov
out
js
lods
xchg
mov
mov
insb
mov
pusha
imul
shlb
negl
aad
push
sub
fdivrl
outsb
out
int3
popa
std
push
jnp
or
mov
xchg
decl
sahf
mov
stos
dec
dec
push
mov
mov
es
out
or
inc
mov
div
jp
pop
mov
cwtl
inc
test
outsb
xor
jle
int
stos
out
dec
mov
xchg
int3
jbe
lcall
test
jmp
inc
mov
arpl
and
sbb
sar
sub
jg
cld
sarl
xorb
es
fcomp
fsubs
mov
into
out
mov
mov
pop
jbe
sbb
into
lret
lahf
pusha
and
push
push
insb
out
pop
xor
enter
mov
push
loope
lea
ds
ds
pop
mov
mov
xchg
cwtl
adc
punpcklbw
jl
push
mov
dec
and
test
lds
adc
sahf
xlat
clc
pop
pmaxub
std
add
mov
out
jae
push
pop
or
xor
mov
test
push
int3
or
and
pop
xchg
jne
shlb
add
adc
sbb
jno
lret
or
addr16
repnz
test
int3
push
and
dec
dec
or
pusha
cmp
xchg
out
ja
push
out
hlt
sub
and
xor
mov
adc
xchg
pop
fistpll
fimuls
pop
ljmp
mov
adc
xchg
addr16
fldenv
std
jecxz
pop
aaa
mov
pusha
xchg
inc
mov
jl
xchg
push
pop
push
cmp
out
push
add
fistl
pop
fdivrl
mov
pusha
sub
lcall
shl
push
ds
pop
xor
fcoml
jb
in
fs
out
rclb
sbbb
popa
test
in
mov
popa
mov
shll
sbb
xchg
cmpsl
add
inc
adc
ljmp
in
insl
in
cmp
leave
sbbb
mov
sub
dec
movsl
jne
pop
mov
lret
xchg
push
popa
mov
out
add
call
sbb
stc
movsb
jge
into
adc
add
jmp
in
mov
or
je
xchg
sahf
push
xor
fisubrs
mov
leave
jmp
fcmovu
aaa
call
push
fidivs
and
pop
cmp
dec
dec
jp
iret
lahf
pop
ret
jbe
xor
clc
callw
push
jle
nop
fwait
or
xor
and
scas
cmp
addr16
cmp
arpl
cmpps
adc
lahf
sbb
bound
sbb
adc
xchg
in
push
ret
push
js
in
jns
in
inc
mov
dec
sbb
out
rclb
cmp
xor
jge
out
push
adc
repz
or
je
sbbl
stos
jmp
fwait
insb
xor
pop
add
and
jns
adc
or
and
pop
mov
test
inc
enter
dec
divl
xor
pop
aad
out
cmp
iret
push
inc
xchg
out
loop
mov
or
test
inc
push
jno
jno
dec
add
arpl
rcll
aas
jbe
js
fsubs
jns
inc
inc
scas
cmp
leave
mov
into
push
icebp
pop
push
add
cmp
je
push
jns
scas
outsl
pusha
xor
clc
in
out
push
pop
jg
sahf
jge
movsl
pop
js
mov
mov
out
mov
mov
sub
push
dec
fucom
mov
mov
adc
or
fistpl
mov
ret
lahf
test
in
aam
lret
xchg
mov
jmp
shrb
mov
push
xchg
xchg
pop
insb
mov
adc
in
or
fstpl
roll
test
mov
mov
cmp
pop
inc
sti
imul
inc
and
loope
cltd
sbb
jmp
fistpll
out
bound
mov
or
sub
rol
mov
bound
add
adc
hlt
aad
lret
bnd
xchg
leave
sub
cmp
es
loope
in
push
lret
adc
push
addl
lahf
sub
sti
imul
push
bound
jnp
jo
popa
das
inc
dec
xchg
mov
lret
das
out
adc
inc
push
mov
dec
or
pop
xchg
divb
sub
pop
insb
lock
nop
pusha
fldt
fsubs
mov
ss
jl
add
ret
pop
or
inc
insl
scas
hlt
ficomps
in
loope
push
push
addb
divps
inc
mov
xchg
jnp
rcrl
inc
cmc
stos
inc
inc
dec
jne
mov
pop
incl
pop
fstps
jle
aam
imul
or
pop
out
mov
sbb
mov
mov
push
push
dec
jge
dec
push
xchg
jmp
shl
imul
mov
rcrb
test
jmp
out
mov
int
mov
mov
pop
mov
cmpsl
fildll
sarb
jae
das
xor
arpl
adc
popa
cmp
xchg
mov
hlt
or
adc
fsubrp
xchg
add
out
sbb
les
cwtl
jg
rclb
mov
mov
lea
push
aas
ficoms
add
test
push
repnz
imul
mov
cmpsb
sub
outsl
cmp
outsl
adc
push
xchg
or
test
lock
mov
out
or
mov
jge
jo
out
sub
jle
out
mov
fcmovbe
lods
aas
lret
lods
in
std
sub
jae
jg
lods
and
pop
repz
imul
loopne
pusha
loope
in
andb
rolb
bound
fimuls
out
scas
pusha
pop
mov
pop
test
mov
xchg
push
jmp
mov
hlt
and
pop
movsb
mov
jle
test
mov
dec
lods
sub
out
gs
xchg
adc
pop
mov
fs
inc
xchg
mul
out
test
imul
mov
push
jo
popf
in
enter
mov
or
jb
cltd
dec
das
adc
fldt
jb
mov
lods
out
test
sti
push
scas
mov
aas
arpl
in
mov
cli
not
fstpl
popa
aas
decl
into
cmc
arpl
in
cmp
jl
inc
outsb
dec
and
into
inc
mov
dec
mov
in
mov
xchg
sbb
pop
je
push
fnop
inc
mov
arpl
jae
lret
push
les
adc
or
xchg
into
mov
xchg
popf
loopne
mov
in
fadds
aaa
movsb
pop
outsb
pop
fldcw
adcl
mov
cmp
mov
mull
popa
push
scas
push
xor
std
sub
mov
lods
jecxz
xchg
xor
aaa
inc
out
pushf
divb
mov
jge
out
mov
fsubl
cli
out
xlat
lods
push
ret
and
frstor
jmp
fcmovu
jp
ret
pop
sub
aaa
xor
mov
sub
pop
jb
add
fwait
fwait
mov
repz
pop
pushf
sbb
imul
adc
sub
loopne
lahf
sub
icebp
mov
and
adc
int
lcall
ret
xor
out
xor
mov
sbb
dec
outsb
ss
jp
insl
push
xchg
inc
adcl
jnp
lret
shr
pop
lds
push
sbb
aam
in
mov
out
dec
sub
cmp
dec
js
push
mov
ja
repnz
inc
mov
mov
dec
lock
lret
pop
mov
das
mov
les
mov
jnp
lods
jne
pop
test
sub
xlat
imul
pusha
mov
cwtl
call
and
repnz
pusha
shlb
mov
out
lods
add
mov
pop
scas
mov
inc
data16
jmp
push
jo
fstpl
sub
mov
stos
cmp
jae
adc
sahf
divl
push
scas
mov
inc
pop
jae
mov
or
pop
test
pop
xlat
andl
and
jl
and
pop
adc
pusha
aam
sub
cs
inc
cltd
dec
add
dec
xchg
test
leave
imul
and
push
lret
in
cmp
fmull
pop
pop
jmp
ficoml
popf
sarl
mov
cmpsl
pop
test
sub
add
into
mov
mov
adc
icebp
out
sbb
push
mov
jmp
push
cmp
adc
orb
out
fisubl
stos
repz
add
adc
pushf
cmp
cwtl
ja
popa
mov
inc
mov
out
test
mov
xchg
psubb
and
fistpll
ja
dec
cmpsb
pusha
imulb
mov
or
add
jns
je
jge
daa
stos
pop
test
std
cmpsb
movsl
mov
jb
inc
adc
jmp
andl
je
sti
pusha
dec
inc
mov
sbb
hlt
cmp
jmp
pusha
or
lret
ret
ss
shll
cs
mov
out
gs
test
dec
mov
outsb
mov
loope
lods
out
enter
cmpsl
jmp
popf
cmp
cs
jne
cmp
jecxz
loopne
negl
sbb
push
in
cmp
cmp
adc
mov
inc
lea
jmp
mov
js
and
addr16
mov
loopne
inc
fsubrs
test
stos
test
pop
bt
popf
in
jl
inc
shlb
inc
hlt
ljmp
mov
pop
adc
push
aaa
lock
cmpsl
mov
cmp
imul
out
pushf
xchg
shl
and
notb
shrl
lock
xor
adcb
or
outsl
or
mov
out
add
lds
rorl
adc
pop
shl
test
xchg
das
fnstcw
mov
mov
divl
sarl
add
inc
pop
loop
outsl
cmpsb
lret
jne
arpl
in
or
mov
in
scas
inc
pop
mov
adc
mov
insl
imul
imul
mov
sti
xchg
push
sahf
pop
fisubrs
push
cld
aas
inc
push
jmp
xor
xchg
jmp
pop
in
push
stos
cltd
les
dec
imul
xor
jns
mov
xor
mov
into
or
pop
test
sub
pop
xchg
popf
stos
push
mov
xlat
jbe
lret
jbe
fdivs
add
mov
sub
jne
out
xchg
into
push
ret
in
pusha
clc
mov
jnp
pop
mov
movsl
repnz
push
push
jo
push
rorl
pop
xor
scas
mov
mov
push
shrl
lret
add
jp
bound
xor
pop
scas
imul
das
cli
xlat
psllw
popf
cmpsb
push
and
add
jl
ret
mov
gs
imul
pusha
xor
mov
movsb
mov
jle
imul
mov
adc
out
cmp
cmp
movsb
scas
mov
pop
or
dec
sahf
pop
jle
out
jne
add
push
adc
out
xchg
jle
cmp
std
cltd
movsb
sub
sub
lret
sub
mov
loopne
aam
dec
movsb
mov
jnp
mov
xor
mov
mov
pusha
push
fistpl
in
dec
shl
out
xchg
data16
mov
cwtl
lahf
push
adc
jno
and
addl
fbstp
mov
pop
jg
inc
xchg
negb
fwait
jo
sti
cmpb
mov
xchg
xor
xchg
push
push
fnsave
ja
pop
sub
lods
dec
mov
out
pop
into
neg
adc
fidivl
loopne
mov
pop
arpl
lods
movsl
js
jo
stc
mov
mov
inc
inc
jnp
pusha
xorl
aam
mov
lock
mov
in
mov
or
fld
addr16
push
mov
out
movsl
or
cmpsl
jmp
dec
pop
fwait
inc
push
ret
outsb
ljmp
and
sbb
sbb
outsl
pop
mov
cmpsb
mov
fwait
mov
sub
or
xor
mov
scas
jne
xor
mov
sub
fistl
dec
add
setb
sbb
pop
out
cmp
cmpsb
repz
popa
cli
xorl
cmp
and
fsubl
pop
out
repnz
fs
pop
cli
push
mov
loope
sub
mov
mov
xor
mov
lret
scas
push
jae
mov
xor
xchg
pop
and
mov
xor
ljmp
mov
rcll
aad
in
push
pusha
out
jp
pop
mov
fwait
jo
insb
lods
filds
push
mov
ljmp
shl
jmp
rorb
sbb
pop
xchg
xlat
sbbl
pop
and
mov
scas
xor
jo
jne
push
dec
das
addr16
fs
fildl
lods
popa
or
pop
sub
idivl
and
mov
cltd
subl
pop
xchg
cmp
adc
push
xchg
bound
pop
and
jg
mov
pop
mov
add
roll
inc
add
adc
dec
inc
test
mov
sub
dec
cmpsl
std
sbb
bnd
push
jl
je
jg
mov
mov
push
fmuls
xor
sbb
sbb
mov
sbb
mov
push
insb
or
push
cli
mov
pop
pop
pop
mov
cmc
rclb
in
push
mov
and
cmp
popa
jp
iret
scas
jmp
dec
aam
or
sbb
sub
sub
lret
pop
iret
movzwl
mov
repnz
and
pusha
jge
and
into
ja
cmp
xchg
mov
out
arpl
cmp
aad
pop
fstpl
xchg
cld
push
test
mov
dec
sub
mov
xor
addr16
stc
jb
mov
cmp
stos
bound
out
push
lcall
xchg
roll
out
xchg
and
mov
cmp
lds
cwtl
ret
push
jle
fwait
cmc
call
clc
and
out
test
push
test
dec
jge
mov
fdiv
inc
dec
cs
out
or
mov
jl
pusha
and
sbb
cmc
mov
sub
movsb
popf
pusha
mov
mov
xchg
in
addr16
add
mov
popa
mov
jl
or
fstl
jbe
mov
jnp
mov
sub
stc
out
dec
jnp
mov
mov
nop
sbb
jbe
mov
pop
cmpsl
add
jb
sarl
mov
mov
roll
mov
outsb
cmc
mov
add
ret
iret
test
divl
imul
insl
out
jecxz
jge
mov
inc
das
fimuls
sti
imul
push
fcmovnu
add
mov
into
cmpsb
push
pushf
out
popa
cmp
sbb
xchg
shlb
mov
pop
test
movsb
dec
inc
dec
pop
sbb
lcall
stos
imul
int
add
pusha
sub
dec
test
dec
sub
xor
pop
lock
ret
and
fcmovnb
xchg
mov
pop
dec
mov
and
cmpsb
insl
sbb
pop
sbb
pusha
test
push
mov
dec
dec
push
fidivrs
aam
repnz
ja
sarl
lret
push
cmpsl
mov
and
test
adc
out
pusha
aad
aas
push
push
es
lea
fistpll
add
ja
insb
pop
adc
xchg
sbb
stc
jmp
jmp
out
sub
jge
mov
in
push
mov
pop
xor
add
popa
gs
loopne
jne
aad
jmp
dec
jne
add
mov
xlat
push
fnsave
out
jmp
sub
mov
pop
fldl
inc
sbb
sahf
cs
popf
scas
into
in
mov
pop
and
divb
mov
js
bound
xor
outsb
in
fildl
and
mov
jecxz
aam
inc
mov
dec
pop
pop
push
push
xchg
jp
jmp
in
pusha
mov
aaa
faddl
out
pop
mov
or
mov
fstpl
ljmp
pop
inc
push
push
lret
sbb
sub
push
mov
out
cmpsb
xchg
mov
mov
lods
sbb
push
jle
repz
and
sbb
mov
cmp
test
test
xor
adc
out
fsubrl
mov
mov
gs
jae
inc
push
cld
pop
jecxz
adc
popa
rorb
xor
out
orl
popf
icebp
les
cwtl
inc
das
push
pusha
and
imul
mov
adc
pop
cmp
imul
cmp
arpl
or
push
dec
cmp
popf
push
sbb
cli
aaa
sub
dec
lock
jno
insl
scas
scas
stos
add
pop
pop
xchg
shll
mov
inc
lock
lods
pushf
test
jns
push
pusha
loope
push
mov
jecxz
idiv
pop
int
mov
jp
jl
and
pop
out
in
sbb
fpatan
push
jnp
lock
icebp
mov
mov
mov
sbb
dec
and
scas
dec
xchg
dec
aad
mov
cmc
repnz
fdivrs
mov
enter
sub
repz
jo
aam
mov
push
rcrl
das
popa
push
fsubl
mov
mov
popa
mov
frstor
movsl
arpl
mov
mov
jae
inc
mov
aam
lock
pop
insb
jmp
lock
sub
jl
mov
and
iret
pop
testb
int3
pusha
mov
lock
pop
fimuls
pop
cmp
pushf
cmpsb
sahf
rcr
pop
popa
cmp
loopne
mov
insl
enter
mov
mov
mov
shrl
lods
loop
test
inc
hlt
test
mov
aas
test
jbe
add
mov
mov
ds
int
fcmovb
rcll
cmpsl
mov
push
inc
sahf
lret
test
push
mov
not
lret
fs
pop
mov
pusha
shlb
or
int
inc
ret
pop
imul
into
add
mov
lods
cmc
in
repnz
xlat
dec
push
iret
pusha
scas
in
subl
mov
cmpsl
mov
xor
cmc
adc
mov
insl
stos
sub
pop
and
mov
loope
ret
mov
movsl
rorl
gs
dec
sbb
xorl
pop
idivb
add
lds
inc
cmp
mov
test
jle
bound
sub
pop
add
push
fidivl
ds
nop
cli
push
or
pop
xchg
decl
and
mov
popa
icebp
in
lock
aad
out
sub
xor
jg
sub
loope
cmpsl
xchg
aas
negb
adc
mov
or
pop
aas
inc
sarb
call
dec
add
or
mov
lea
pop
pop
sub
mov
sbb
mov
pop
ja
xor
repnz
loope
sub
push
adc
fucomi
push
je
mov
mov
sahf
leave
mov
repz
roll
out
daa
cmp
clc
addr16
sbb
add
jbe
or
rclb
mov
pusha
je
stos
es
dec
sub
into
inc
ds
mov
sti
push
cwtl
mov
pop
in
jg
mov
mov
hlt
mov
ja
add
movsb
pop
pushf
sbb
push
movsl
enter
jl
mov
out
mov
loop
fisubs
repnz
xchg
inc
xchg
fistl
rol
pop
xchg
lods
in
ljmp
out
test
inc
pop
test
push
aam
mov
iret
imul
and
xchg
inc
rorl
and
popf
cmp
hlt
jl
sub
leave
xchg
lret
sub
and
jns
cmc
scas
aaa
sbb
andb
test
hlt
xor
mov
and
pop
push
inc
mov
pop
out
out
into
dec
mov
or
ds
mov
mov
jmp
push
inc
fwait
mov
cmpsb
lea
sbb
loopne
out
dec
out
movsb
and
shr
cwtl
push
movsl
addr16
arpl
or
mov
out
mov
pop
or
dec
xor
pop
aaa
and
and
jle
inc
sbb
cmpsb
sbb
aad
loopne
pop
stos
xchg
xchg
push
xchg
and
jmp
push
jo
xchg
jns
js,pn
std
pop
movsb
xchg
dec
movsb
mov
xchg
cmp
fcmovnbe
out
je
ror
push
ds
in
sub
xchg
aas
pop
jb
push
popa
pop
sbb
jle
lret
pop
popa
fsubrp
mov
mov
int
push
pusha
push
loope
enter
fcmove
sbb
inc
inc
out
adc
movsl
xchg
movsl
in
outsl
icebp
mov
cmp
mov
into
cmp
sbb
mov
dec
adc
mov
jecxz
pop
mov
jmp
dec
mov
scas
daa
int3
arpl
ret
ljmp
popa
xchg
mov
popf
sub
dec
add
pop
xor
dec
cmpsl
into
xlat
dec
adc
xchg
les
cwtl
mov
mov
push
and
repz
or
push
mov
jge
outsb
movsl
sbb
add
cli
fsubl
push
add
in
je
xchg
nop
ja
and
inc
sbb
movsl
pop
int3
and
out
fistl
dec
pusha
popa
cli
leave
push
push
out
add
out
cltd
jl
popf
fcoml
and
stos
xor
push
sub
aam
aad
ljmp
dec
cmp
and
into
jg
or
and
push
movsb
or
je
fldt
loope
gs
dec
rcrb
js
test
popa
mov
jnp
in
out
add
in
insb
jo
aaa
aam
enter
pop
cmpsl
xchg
mov
ret
arpl
pop
mov
xchg
xlat
mov
push
jb
nop
fdivrl
pusha
pop
push
pop
sub
cltd
test
aaa
pop
lcall
mov
arpl
ds
and
ljmp
stc
aad
sbb
sti
mov
enter
iret
ficoml
adc
imul
aam
out
lds
int3
lods
mov
xchg
jns
cbtw
repz
call
adc
dec
in
cmp
push
insl
out
jmp
rclb
idivl
popa
xchg
stc
iretw
aas
jns
mov
shr
into
xchg
pop
adc
or
push
scas
ficoms
gs
in
mov
jnp
mov
hlt
cmpsl
ljmp
repz
and
aam
shl
imul
out
xchg
adc
adc
lahf
add
stos
jbe
out
jmp
in
insb
call
fnsave
jge
pop
loope
mov
jnp
subl
imul
call
sub
popf
negb
push
out
xchg
xchg
or
data16
jg
push
iret
ret
pop
sub
mov
jp
mov
xchg
mov
outsl
pusha
adc
shlb
sub
insl
cmp
mov
out
lahf
aad
stos
rclb
pop
cmp
xor
bound
xor
andl
mov
sti
jae
outsb
push
fwait
gs
pop
mov
sahf
scas
les
dec
movsb
js
mov
cmp
enter
movb
or
lahf
jg
ds
xchg
xor
cmpsl
push
and
mov
pop
sbb
push
mov
movsb
adc
pusha
adcl
rol
ss
std
enter
mov
bound
inc
jne
sti
xor
and
dec
stos
std
scas
sahf
out
mov
push
inc
in
in
mov
fadds
imul
sbb
enter
not
imul
and
pop
rcll
lahf
outsl
aas
movsl
jle
push
and
out
and
mov
sbb
and
mov
mov
pop
xor
daa
lds
pop
test
adc
fnstcw
pop
imul
mov
mov
je
negl
pop
addps
ds
fldl
push
data16
jmp
movsl
sbb
stos
or
mov
push
ja
mov
movsb
out
inc
out
shrl
mov
push
int3
pop
push
pop
mov
sahf
adcl
and
lock
cmp
sbb
dec
aam
loope
out
lock
add
stos
xchg
aas
out
rorl
pusha
stos
cmc
out
sbbb
xchg
movsl
or
cmp
add
cli
shll
mov
and
xorl
jmp
cmp
inc
sbb
cmpsl
data16
mov
inc
divb
in
add
jnp
mov
pop
and
fwait
icebp
in
arpl
and
pop
mov
mov
inc
mov
jo
js
ja
test
mov
mov
subb
or
fstpl
rcrb
push
mov
ret
push
add
int3
xchg
rcrb
xchg
fimuls
lock
pop
mov
mov
ljmp
sub
je
jl
push
out
test
mov
inc
jmp
leave
clc
neg
push
sarb
add
jnp
mov
add
inc
mov
mov
stos
add
loope
pop
into
and
cmp
inc
ja
mov
jp
pop
out
jg
and
aas
jbe
popa
jg
add
jl
stc
je
inc
mov
mov
fnstsw
and
inc
mov
fcmovu
mov
jno
sbb
dec
aas
rcl
xchg
add
std
cwtl
jae
dec
push
ds
inc
lods
aaa
bound
movsl
adc
enter
out
pop
xor
xor
cmpb
mov
jmp
shl
movl
popa
div
ss
out
jmp
jae
scas
mov
sub
inc
or
pop
and
xchg
dec
pop
dec
sub
mov
test
iret
addr16
and
mov
dec
outsl
pusha
mov
std
or
xor
mov
subb
sbb
sbb
add
lret
xchg
in
out
lods
out
add
push
mov
mov
out
cmp
dec
lods
out
cs
jl
cs
lahf
push
stos
pusha
inc
dec
jg
mov
cmc
in
dec
mov
jo
sub
popa
mov
adc
arpl
lret
or
push
dec
mov
out
lods
mov
dec
imul
mov
jbe
mov
jp
sbb
test
call
sbb
push
mull
push
iret
mov
in
test
ja
popa
push
push
pop
movsb
dec
mov
lar
testl
ds
lcall
pop
fsubl
clc
ds
clc
push
push
jb
in
jo
leave
and
cmpsb
adcb
inc
add
adc
push
popf
cmp
push
arpl
mov
in
cmc
mov
pop
loope
mov
andl
xchg
popf
out
js
pop
mov
and
mov
sarl
mov
fidivl
dec
sbb
xor
loope
push
in
cwtl
adcl
jecxz
gs
mov
xlat
roll
push
inc
xlat
dec
sbb
call
and
pop
repnz
xor
insl
pusha
sub
pop
inc
push
jbe
dec
out
jg
jbe
popa
or
mov
ss
adc
pop
movsl
into
jo
shl
lods
pusha
insl
mov
adc
icebp
ss
xchg
mov
stc
pop
mov
jno
sahf
and
jo
outsb
pop
fld
jge
adc
xchg
insb
lret
in
sub
out
jmp
mov
mov
aaa
popa
jb
repz
std
push
xor
out
sub
mov
xor
std
lcall
and
mov
pop
inc
arpl
arpl
and
jb
mov
das
popf
xor
xchg
jge
push
mov
mov
adc
cs
hlt
dec
out
repnz
inc
cmp
insb
jo
ret
push
mov
adc
push
sbb
mov
sub
mov
clc
sahf
and
jecxz
adc
pop
neg
pop
mov
pusha
or
mov
jns
jge
and
dec
inc
cmc
dec
imull
movsb
pop
pop
mov
add
sub
push
mov
lahf
xor
inc
sbb
imul
add
or
cltd
pop
sbb
pop
cmp
mov
add
sub
in
shlb
movsb
daa
js
addr16
ret
jo
out
stos
aam
mov
into
dec
xchg
jae
push
mov
jge
mov
xchg
test
pop
int
mov
repnz
out
adc
dec
add
push
iret
inc
ret
mov
inc
xchg
cli
in
insl
adc
dec
or
pusha
lds
push
mov
jmp
movsl
pop
xchg
jmp
and
mov
mov
daa
and
fildll
jp
inc
cmc
mov
mov
xchg
bound
ss
sbb
pusha
pop
repz
clc
shr
lcall
mov
push
mov
sub
push
fs
xor
ret
lea
jmp
pop
aaa
jno
mov
jbe
movsl
sbb
scas
push
inc
movsb
filds
xlat
pop
mov
jo,pn
inc
jne
pop
fstpl
sahf
mov
jmp
in
outsl
mov
enter
pop
or
mov
mov
movsl
sub
add
push
adc
fdivrs
and
cmpsb
out
mov
insl
lea
std
xor
cs
cs
insb
arpl
xor
fadds
inc
mov
fisubs
xor
enter
xchg
pusha
sbb
test
stc
outsb
add
mov
pop
pop
popa
jns
shll
mov
push
fdivl
fucom
mov
stc
ja
push
pop
lret
mov
or
data16
add
sbb
adc
mov
adc
in
mov
shll
movb
cltd
cltd
int
popa
push
dec
mov
inc
out
mov
and
dec
and
cli
jb
test
mov
lret
pop
jo
add
sahf
inc
adc
pop
mov
and
jp
into
dec
out
mov
cwtl
mov
mov
rsm
add
pop
adc
std
mov
aam
jno
pop
xor
mov
inc
std
lds
popa
rcrl
sub
mov
xchg
imul
mov
sbb
pusha
cmp
bound
dec
mov
push
inc
ret
xchg
pusha
clc
push
aaa
pop
imul
mov
fs
mov
stos
loopne
sbb
addl
insl
inc
out
push
pop
jb
xorl
mov
add
adc
push
addr16
pop
pop
popa
mov
daa
cld
push
arpl
cmp
jne
test
mov
cltd
xorb
add
ror
pusha
mov
lods
daa
add
out
cs
dec
cwtl
nop
mov
mov
pop
pop
je
pop
mov
pop
lds
popa
push
out
roll
xor
out
cmp
or
mov
int3
xchg
or
mov
and
sbb
cmp
test
push
js
hlt
into
mov
and
pusha
movsb
inc
jb
icebp
xchg
and
imulb
adcl
jbe
mov
pop
mov
xor
icebp
lcall
dec
xlat
jae
cmp
rcll
fwait
xor
pop
jecxz
jnp
psrad
mov
mov
jmp
dec
mov
add
arpl
pop
mov
and
imul
inc
add
loop
testl
push
arpl
icebp
jbe
and
dec
mov
xor
into
mov
xor
insl
pop
mov
xchg
filds
sub
sub
imul
mov
pusha
aad
and
pop
jae
or
aas
jae
jo
mov
stos
int
pop
mov
add
push
sahf
mov
in
inc
xchg
add
push
pop
lock
sbb
pop
orl
cltd
andl
in
sarl
pop
gs
dec
mov
mov
sahf
push
loop
dec
mov
sbbb
loope
mov
adc
out
xchg
pop
fidivrs
test
pop
loope
cmpsl
mov
mov
xchg
cmpsl
add
xor
jmp
andl
mov
and
test
xchg
mov
xchg
rclb
mov
mov
or
in
jmp
and
jae
xchg
adc
loopne
pop
pusha
lea
imul
jo
xchg
ficompl
jne
lcall
jge
xchg
jno
clc
or
xchg
fs
jnp
dec
imul
into
out
lret
shr
incl
xchg
pop
aas
inc
lret
mov
and
outsl
xchg
imul
es
inc
loop
mov
mov
jmp
imul
mov
pop
cmp
imul
add
mov
data16
jmp
cs
mov
movsb
mov
scas
jge
mov
out
push
mov
jae
enter
mov
in
pushf
lahf
add
outsb
inc
mov
sub
dec
jae
push
out
jnp
add
dec
jbe
repz
pop
dec
sbb
xchg
out
cmpsl
dec
ss
push
pop
jne
mov
nop
dec
aas
xchg
outsb
jns
out
repnz
bound
pop
pop
fidivrl
insl
jnp
sbb
sahf
pusha
jmp
popa
and
push
pop
shr
ja
out
add
mov
test
aaa
and
fidivrs
call
lcall
mov
sarb
push
jns
insb
int
idivl
pop
cmc
add
dec
cmp
nop
lods
mov
adc
pop
mov
int
ja
mov
out
cmp
cwtl
mov
ret
mov
dec
jno
pop
dec
pop
mov
sub
adc
xchg
testb
cwtl
or
pusha
subb
movb
je
pop
movsl
inc
cmpsl
int
into
mov
out
adc
shll
jbe
mov
imul
pop
adc
jmp
lods
es
mov
lds
les
jne
sti
outsl
inc
cltd
mov
pop
cmp
sbb
sub
dec
les
popa
lds
jb
xor
add
outsl
fs
mov
imul
mov
movsl
sahf
sti
outsb
nop
mov
xor
outsb
arpl
xchg
jle
dec
cmp
loopne
mov
icebp
mov
loop
cld
pop
cmp
iret
mov
bound
test
icebp
inc
movl
mov
out
shrb
mov
jle
xchg
sbb
mov
out
jb
add
jns
sub
mov
inc
mov
leave
cmc
xchg
ljmp
pop
movsb
inc
shll
test
push
push
add
ficoms
push
sarl
mov
dec
fs
ja
daa
pop
fwait
inc
push
outsb
mov
lea
jmp
out
arpl
and
xchg
fdivrs
movsb
ror
xchg
iret
popa
mov
add
fwait
pop
lods
das
xchg
or
cmc
xor
cmpsb
cmp
scas
cmp
push
addr16
int3
cmpsl
aam
test
lods
pop
push
mov
cmp
push
js
lahf
and
pop
adc
and
cmpsl
pusha
hlt
mov
jg
xchg
mov
ss
add
out
call
lahf
fucomi
mov
pop
adc
test
fstps
mov
je
pop
push
dec
mov
pop
mov
dec
xor
mov
fs
lods
jnp
mov
out
push
jo
ds
pusha
shrl
movsl
inc
pusha
xchg
movsl
sub
mov
push
pop
sbb
push
std
pusha
mov
mov
pop
sub
jns
inc
lds
ficoms
out
and
outsb
sti
mov
jae
push
addr16
cmp
repz
and
adc
mov
xor
xorb
sbb
jnp
jg
fisubs
sub
dec
pop
push
xor
dec
popa
aam
into
fwait
pop
jae
pusha
in
movsb
or
sbb
loopne
lock
or
fisubl
dec
pop
or
pusha
dec
lret
jne
ljmp
inc
jecxz
fiadds
push
mov
call
dec
fisubl
lods
push
inc
cli
movsb
pop
lcall
inc
popa
loope
xchg
outsb
lods
jne
jmp
pop
adc
out
push
aam
loope
test
cltd
in
das
popa
outsb
in
xlat
add
fidivrs
pop
sub
fldenv
leave
cmpsb
test
add
mov
rolb
pushf
jecxz
stos
out
jg
or
xchg
xchg
cwtl
push
nop
inc
pop
scas
popf
imul
test
or
ret
push
add
push
jle
stc
mov
pop
insl
xchg
in
fs
jno
cmp
cltd
inc
push
mov
dec
pop
mov
bound
inc
roll
sbb
jmp
adc
shrb
sub
sbb
mov
aad
jnp
inc
les
pop
sbb
and
ja
pop
xchg
push
pop
sub
cli
sbb
xchg
std
loop
mov
or
lods
sbb
imulb
gs
sbb
mov
mov
push
and
cmpsl
pop
cltd
sub
jecxz
dec
ret
aad
and
pusha
loope
cmpsb
dec
xchg
cltd
mov
out
mov
push
mov
ss
jb
add
dec
xchg
inc
icebp
lods
cmc
lock
vandpd
push
push
pop
je
jg
sbb
mov
mov
mov
push
bnd
push
pop
int3
fwait
mov
popa
popa
sub
jb
test
icebp
mov
jg
cmc
mov
cmpsb
inc
push
clc
cmp
loopne
sbb
xchg
dec
xor
repz
xor
or
sub
out
inc
in
out
mov
mov
int3
inc
jmp
lea
xchg
sub
mov
jle
loop
pop
xchg
shl
or
arpl
xchg
pusha
addr16
inc
addr16
mov
call
mov
cli
mov
lea
sti
pop
shll
inc
cltd
ds
mov
xchg
inc
stos
fwait
sbb
pushl
mov
cmp
pop
mov
cmpb
adc
push
xor
lahf
je
lcall
aad
and
fwait
movsb
neg
jle
pop
rcrb
in
jne
cld
imul
ficomps
xchg
inc
mov
mov
xchg
lods
or
add
dec
cli
fs
iret
shlb
je
in
imul
fsub
mov
icebp
je
pusha
pop
dec
aam
sub
testb
pop
out
sbb
cmp
nop
adcb
mov
pop
cmp
push
push
subl
fcmovnbe
pusha
and
inc
cwtl
out
sub
inc
add
pop
mov
xlat
sarb
mov
add
mov
aad
ljmp
add
int3
push
mov
xchg
mov
or
jecxz
aaa
mov
mov
pop
filds
mov
cmc
lock
divb
xchg
loopne
dec
adc
jo
or
and
test
shll
arpl
jl
xor
lock
xchg
jmp
mov
mov
stos
aas
popa
mov
movsl
push
mov
push
jno
sbb
push
mov
add
lock
push
sub
pop
out
pop
sub
fisubrs
cmc
mov
mov
mov
insb
pop
mov
mov
test
add
clc
ret
mov
ret
ja
subb
push
dec
orl
fcoml
ds
mov
jg
jno
pop
xor
pusha
cld
mov
mov
inc
das
js
xchg
fwait
push
mov
outsb
movsl
pusha
xlat
arpl
inc
rorl
fsubr
stc
adc
lods
push
out
mov
fucom
gs
pop
ret
test
popa
repnz
imul
es
pop
call
cli
imull
je
into
ret
or
mov
rorl
bound
dec
jno
add
pusha
stos
std
mov
subb
lret
out
inc
pop
mov
enter
movsb
xlat
fs
xchg
inc
push
cmpsb
add
cmp
arpl
pushf
cltd
pop
pop
imul
and
pushw
add
addr16
loopne
aas
mov
out
mov
rorb
mov
pop
adc
ss
xchg
inc
mov
sub
out
push
pop
jmp
in
xchg
ja
mov
mov
mov
cs
cmp
lods
inc
adc
mov
aad
cmp
rclb
lahf
push
mov
jno
aam
pop
xchg
mov
lds
fidivrl
xchg
js
push
popa
and
iret
pop
dec
and
aad
mov
mov
outsl
inc
pop
loopne
scas
jo
xchg
xchg
fs
xchg
cmp
ljmp
jecxz
push
in
push
and
mov
sahf
pop
sahf
pop
xchg
push
or
push
dec
bound
popf
dec
fs
push
sub
inc
adc
xor
out
stos
inc
cmpsb
xchg
cltd
lods
dec
mov
adc
dec
jmp
arpl
je
dec
popa
loop
lock
das
loope
ss
cmc
clc
insl
loopne
lret
fstp
cld
mov
je
testb
sahf
out
mov
es
inc
popa
add
int3
mov
pop
pushf
adc
mov
push
dec
popa
mov
mov
mov
pop
ret
pusha
push
imul
pusha
sti
hlt
mov
adc
pusha
aaa
or
imul
les
in
leave
fs
dec
idiv
pusha
jae
push
movl
or
rcrl
cltd
stos
clc
fdivrp
inc
mov
clc
daa
jp,pt
popa
lcall
dec
out
aas
test
das
dec
fwait
push
mov
cwtl
addr16
jno
sti
ret
cmpsl
orb
fs
mov
adc
push
pop
loop
xor
je
fisttpl
sub
loopne
pop
loope
out
in
mov
out
mov
jae
mov
mov
lret
xchg
leave
inc
pcmpgtb
dec
es
outsb
xor
ljmp
sub
or
cmc
mov
pop
sbb
fs
or
sarl
inc
ret
icebp
pusha
xchg
stc
or
out
dec
pop
mov
pop
jne
ljmp
ffree
xor
adc
arpl
push
mov
mov
mov
ds
pop
mov
mov
sbb
out
mov
dec
mov
push
xchg
call
scas
mov
pop
and
xchg
cmp
and
mov
jne
inc
cli
or
cmp
out
adc
inc
push
popa
int3
add
push
movsb
loop
clc
out
cmc
sbbb
test
sbb
or
imul
in
outsb
adc
mov
sbb
scas
or
pop
dec
add
mov
movsb
fsubrs
pop
fcmovnu
jbe
out
dec
sub
decb
cltd
or
xor
jge
dec
test
cld
and
fisttps
mov
mulb
pop
inc
sbb
mov
push
fldcw
mov
or
sub
fs
sti
lahf
add
push
mov
pusha
sbb
mov
ss
push
push
shll
hlt
or
pusha
add
stc
cmpsb
cwtl
movsl
dec
sub
cmp
in
stos
and
orb
movsl
in
in
xor
lods
lock
or
xor
add
clc
sbbl
sub
dec
and
fisubs
push
xorl
pop
or
mov
inc
jnp
jno
xchg
mov
sbb
jns
pop
mov
mov
inc
push
xchg
push
xchg
outsl
adc
sbb
lds
xchg
and
pop
lods
mov
sbb
leave
jp
mov
sbb
pop
cld
cltd
pop
or
pop
lods
push
adc
mov
cmpsb
or
aad
push
insl
and
cmp
mov
ss
jg
add
adc
inc
push
push
fsubp
jg
call
or
dec
lret
pop
adc
cltd
test
lret
mov
mov
sti
and
cwtl
shll
mov
mov
pop
pop
mov
sbb
fsubl
sbb
mov
fbld
mov
mov
fidivrs
lods
popf
imull
add
shr
inc
dec
mov
xor
test
ss
inc
fmull
jecxz
sbb
mov
jecxz
sbb
cmp
ss
out
xchg
sub
cmp
icebp
mov
out
adc
or
and
jecxz
pusha
jb
or
push
cmp
andl
sub
movsb
push
push
inc
and
jecxz
mov
pop
push
test
scas
imul
mov
sarl
dec
fs
mov
pusha
or
popa
stos
pushf
lds
bound
pop
mov
jmp
xor
mov
adc
push
addr16
lock
mov
pop
mov
push
inc
test
jle
cmp
outsb
and
stc
cmp
sub
push
xor
fdiv
stc
negb
xor
jle
xchg
add
cmc
xchg
stc
fwait
int
xchg
cli
jecxz
mov
xor
mov
insl
mov
and
mov
pop
push
andb
sbb
mov
inc
rcr
add
mov
out
sub
dec
imul
mov
pop
and
jl
test
icebp
inc
mov
mov
mov
aad
rcll
in
xchg
push
or
mov
stos
pop
add
shll
push
imul
push
sbb
cli
mov
inc
into
lcall
mov
jns
inc
loop
imul
jge
add
into
or
stc
pop
mov
icebp
push
pusha
arpl
repnz
out
or
cmp
cmp
popa
add
or
test
pop
es
lea
mov
cmp
out
test
lea
in
mov
xchg
adc
fincstp
lods
decb
popa
pushf
fs
pop
xchg
pop
test
fidivs
sub
cli
pusha
fs
cmc
push
in
jns
jbe
add
aas
xchg
ljmp
inc
xor
aam
xchg
pop
out
jo
lods
lcall
jbe
mov
cmp
aaa
pop
subl
out
mov
loope
cmp
inc
mov
add
icebp
out
mov
pop
arpl
jns
and
xlat
mov
nop
les
and
fiaddl
dec
mov
push
xor
lds
out
jp
rclb
mov
je
inc
adc
push
push
cmc
ja
xlat
outsb
inc
xchg
and
mov
jno
pop
push
dec
mov
mov
int3
pop
outsl
jo
mov
pop
push
cmp
jo
lret
push
jnp
adc
pop
lret
fisttpll
insl
loopne
lcall
ss
test
jecxz
cwtl
pop
pop
pop
int3
lods
shlb
adc
pop
jge
loope
jg
mov
ljmp
arpl
pop
mov
out
out
fcmovnbe
mov
mov
fbstp
or
in
push
add
call
sub
sahf
js
cmc
and
jmp
push
lahf
push
inc
sti
xor
pusha
xchg
aad
cmpsb
mov
popf
jp
test
add
and
mov
sarl
call
shll
jns
ss
add
out
dec
test
pop
push
cmp
stos
mov
data16
out
dec
sbb
ficompl
dec
mov
icebp
jp
call
dec
and
and
pusha
mov
std
aam
or
frstor
mov
pusha
xchg
test
add
hlt
mov
rcrb
pop
imul
cld
xchg
loopne
lods
pop
lock
add
sbbl
dec
in
xchg
mov
bndldx
inc
loope
aad
loop
loop
pusha
es
jno
dec
ljmp
sbb
addr16
lods
sahf
sbb
jle
sub
fcompl
inc
fistl
xor
sub
out
pop
mov
push
mov
or
out
mov
sbbl
test
push
pop
adc
lods
out
pop
xor
push
loopne
lahf
sbb
or
repz
adc
and
adc
sub
inc
sub
out
iret
insb
cmp
fisubs
enter
and
mov
clc
jne
push
xchg
mov
int
push
pop
movsb
fmull
push
movsb
xchg
call
icebp
jnp
mov
push
scas
aam
pop
add
popf
mov
sub
jge
aas
dec
in
sbb
mov
dec
fstpl
scas
scas
loope
in
lock
mov
mov
dec
inc
cmp
pop
outsb
xchg
movsl
cmp
mov
fcomps
lds
mov
cmpsb
andl
and
pop
sahf
jle
inc
fidivrs
popa
adc
pusha
lcall
inc
and
imul
addl
sub
addb
loopne
cmp
pop
jecxz
mov
push
in
dec
loope
fstpt
mov
sub
adc
popa
inc
inc
mov
out
xor
cld
test
out
cwtl
mov
pop
mov
jne
dec
pop
xchg
jbe
adc
outsl
mov
in
nop
inc
xchg
pop
pop
adc
dec
mov
push
inc
popa
mov
lahf
fimull
sbb
inc
out
push
sub
mov
mov
rorb
mov
pusha
imul
jmp
pop
and
push
xchg
jno,pn
loopne
mov
inc
jnp
loope
gs
xlat
pop
xchg
pop
sbb
adcl
pop
call
or
je
xchg
mulb
jecxz
mov
sbb
sub
movsb
out
adc
mov
cld
mov
out
jnp
xchg
or
fucomip
lret
adc
mov
adc
dec
push
and
add
scas
cmp
sub
pop
dec
mov
xchg
movsb
push
stos
xor
add
mov
pusha
clc
repnz
hlt
inc
aam
pop
out
jmp
cmp
adc
xor
pop
mov
pop
cmp
or
out
jno
pop
movsb
sarb
ljmp
mov
pop
aaa
lock
out
in
jo
mov
jg
sub
or
ja
mov
jo
cmp
sahf
lods
fnstenv
call
mov
adc
pop
add
rorb
push
cs
out
push
push
pop
jge
test
out
aam
and
es
lock
fstps
sbbb
test
mov
or
in
daa
out
rcrb
pop
fs
ficomps
sbb
cmp
cmc
lea
pop
jle
pop
mov
pop
scas
mov
sti
mov
cmpsl
pop
mov
mov
loop
pop
in
jns
popa
xlat
insb
cmpsb
push
push
les
shr
mov
pop
fisubs
jae
outsl
enter
push
jmp
loope
pop
cmp
lahf
xor
cmp
lods
addr16
cmp
or
jo
ljmp
push
rclb
adc
xor
lret
lock
xchg
pop
pop
or
imul
icebp
mov
lret
jl
cmc
inc
xor
shlb
dec
push
push
jae
xor
pop
mov
mov
outsl
pusha
scas
sbb
lret
out
sbbb
aad
cli
xlat
cmp
pusha
fnsave
ds
cmpsl
std
sub
out
cmpsb
movsl
clc
es
scas
popl
lea
lret
push
or
pop
inc
dec
icebp
cmpsb
and
pusha
mov
movsb
jnp
pop
push
std
jecxz
das
sti
dec
sub
mov
lods
insb
sbb
pmaxsw
lcall
xchg
sbb
lock
push
adc
pop
push
cmp
xor
rcrb
int
fnsave
fdivrp
adc
cmp
jo
adc
adc
out
cmpsl
mov
mov
out
stos
sub
jl
jmp
push
daa
repnz
jns
jo
movsb
jbe
mov
rol
xchg
pop
adcb
mov
insb
cmovnp
popf
sub
mov
fldenv
mov
out
jle
stos
popa
pushf
stc
cmp
in
loopne
push
leave
jns
cmc
daa
xor
xchg
dec
pop
mov
sbb
adc
pop
mov
out
adc
pop
mov
fisttpll
cli
pop
jno
adc
icebp
xor
sub
jmp
pop
cwtl
in
mov
fs
and
pop
dec
imul
call
in
lock
jns
jmp
inc
adc
call
xor
mov
mov
sbb
ja
pusha
add
jmp
xchg
xor
imul
push
sbb
leave
jno
sub
cwtl
std
mov
xchg
mulb
jge
xor
outsl
sub
bound
loope
or
dec
inc
mov
aas
pop
idivb
fs
push
adc
xchg
adc
mov
in
cmpsb
mov
mov
sbb
aad
inc
inc
popa
push
das
icebp
and
pop
testl
xchg
push
pop
xor
out
mov
lahf
dec
fisubrl
out
out
xchg
dec
iret
sbb
rclb
mov
imul
popf
stos
ds
imul
cld
int3
jmp
or
add
sbb
mov
out
jbe
xlat
lret
jo
adc
icebp
xor
xor
dec
outsb
pop
jns
cmpsb
test
cmp
sbb
js
adc
lret
push
ret
xor
add
and
insl
dec
mov
push
clc
cmpsl
test
jg
pop
add
inc
push
test
gs
cltd
cmpsb
ret
xor
loope
cmpsl
lods
sbb
rcrl
and
mov
adc
push
cwtl
lods
loop
test
in
pop
jo
sahf
mov
mov
adc
push
loopne
lock
popa
or
loopne
movsl
hlt
into
movsb
in
or
in
sub
pop
data16
dec
dec
pop
jb
movsb
pop
push
adc
scas
out
mov
ds
mov
nop
sbb
pop
aas
imul
popa
jo
jno
fisttps
jno
ret
and
sub
cmp
push
lods
pmaxub
add
mov
shlb
in
mov
pop
iret
popa
cld
mov
mov
xchg
adc
repnz
pop
faddp
jle
pusha
mov
pop
arpl
outsb
sub
adc
data16
xor
adc
xchg
mov
cmp
push
push
pop
inc
out
mov
adc
das
jp
mov
jmp
filds
ficoms
shrl
add
cmp
pop
loop
jle
push
jb
popa
test
lock
pop
rclb
out
sub
sbb
negb
fnstsw
out
inc
lock
add
or
movsb
jo
cld
clc
mov
adc
invd
mov
xor
add
test
jcxz
push
sbb
push
cwtl
mov
push
dec
stos
shll
loope
cs
lret
std
cmp
pusha
xor
scas
pop
jb
adc
mov
mov
nop
push
mov
mov
and
push
pop
push
ror
jb
mov
xor
lcall
jb
insb
addr16
and
call
mov
pop
arpl
inc
int
scas
lahf
test
and
scas
ss
cmc
ret
popa
xor
and
and
adc
aam
out
subb
adc
fdiv
inc
mov
pop
lods
lret
pop
test
add
or
repz
icebp
pop
and
out
push
cli
cmc
lret
pop
mov
add
ja
inc
daa
popa
push
and
adc
sbb
push
dec
xlat
xor
mov
pop
mov
push
cmp
movsl
cmpl
jle
ficomps
inc
lods
hlt
add
movb
or
or
fyl2x
cmpsb
inc
sub
mov
decb
xchg
jecxz,pn
mov
xchg
test
jae
shll
cmp
sar
pop
inc
in
add
pop
out
pop
test
in
daa
sarl
sti
loopne
lret
mov
xor
pop
pop
mov
push
add
nop
hlt
xor
pop
lods
adc
rorl
mov
jle
out
xor
push
add
out
loopne
fimuls
clc
pop
and
pop
fcomp
push
js
dec
mov
dec
pushf
fbld
stc
or
and
out
stos
push
mov
mov
ficoml
adc
lds
xor
out
inc
mov
xchg
mov
fcomps
cmc
xchg
xor
nop
or
cmpsb
sbb
out
sti
sar
dec
aam
xchg
mov
flds
or
pusha
imul
loopne
push
das
xor
push
pop
ja
jg
mov
cmp
pop
std
outsl
xchg
add
mov
popa
ljmp
arpl
pop
push
inc
jmp
pop
cmp
enter
mov
dec
sbb
insb
pop
and
imul
ret
adc
push
mov
mov
mov
imul
push
mov
or
add
push
mov
mov
adc
inc
and
lcall
mov
fisttpl
push
pop
pop
fcompl
dec
pop
movsb
pop
les
fcomps
fucomip
xlat
cmp
pop
or
pop
mov
cmp
stos
mov
out
addr16
hlt
loop
shlb
push
jecxz
out
sarb
mov
pop
inc
popa
adc
cs
test
push
dec
xor
leave
jnp
aaa
mov
push
js
cmc
pop
xchg
add
mov
add
lret
pop
add
ja
sti
loope
pop
dec
push
shrl
insl
adc
push
xchg
cli
in
add
mov
sarl
dec
mov
inc
adc
mov
cmpsl
and
ffree
daa
fsubl
daa
sub
dec
xchg
pop
xchg
jmp
stos
xor
cmp
outsl
push
fwait
pop
inc
and
jnp
pusha
popa
iret
xor
inc
xor
push
jg
fisubl
mov
jg
ss
xchg
daa
jecxz
push
stos
iret
pusha
adc
mov
nop
mov
pop
test
mov
popa
jnp
jmp
or
inc
xchg
imul
icebp
fists
pop
cmpsb
dec
fiaddl
stc
dec
pop
xchg
hlt
cld
cmp
mov
pop
sub
mov
pop
push
aam
mov
lahf
std
pop
inc
dec
mov
and
dec
lods
mov
mov
dec
leave
pop
out
fabs
fs
inc
pop
ret
ja
adc
fsubrl
xor
outsl
stc
dec
out
rol
mov
mov
mov
cs
mov
cmp
fcmovne
push
cwtl
xchg
pusha
mov
out
push
popf
mov
loope
insl
aam
lea
push
pushf
mov
dec
or
mov
stc
out
mov
push
mov
sbb
or
push
test
adc
pushf
into
in
leave
es
pop
sub
insl
pop
dec
lret
xchg
fcmovb
mov
cs
cs
mov
pop
push
jne
aaa
mov
xor
xor
jp
sbb
and
cs
movsb
jae
insl
stos
and
jno
mov
mov
mov
pop
lods
xchg
xchg
aaa
xorl
adc
andl
outsb
adcb
out
and
sbb
xchg
in
push
or
add
clc
push
sbb
adc
push
sub
mov
je
out
xchg
mov
jo
rcr
aaa
cltd
mulb
sti
es
inc
xchg
mov
out
jg
or
stos
and
aad
imulb
lds
xor
std
mov
hlt
sahf
xchg
cmp
iret
cmp
loop
scas
fldl
sub
dec
loope
imul
sub
or
add
test
dec
out
dec
and
or
lods
inc
fldcw
in
movsb
mov
andl
push
hlt
jle
xlat
adc
sbb
inc
fisttpll
mov
insl
xchg
sti
pop
divb
mov
pusha
and
ret
pusha
inc
pop
push
mov
es
stos
jns
in
pop
lret
lods
sub
out
sub
pop
and
arpl
cs
xlat
jp
test
in
test
mov
mov
test
popa
push
mov
and
push
gs
cmp
xchg
test
outsb
add
pop
adc
arpl
testb
neg
out
hlt
push
adc
in
mov
ljmp
jg
add
in
scas
push
dec
fdivs
fwait
inc
pop
andb
pop
mov
popa
pop
inc
xchg
aam
lds
sub
pusha
jbe
je
mov
mov
mov
sub
sub
iret
mov
jp
lcall
les
sub
scas
je
out
aaa
repnz
push
xchg
dec
out
push
mov
sbb
lahf
mov
ja
cs
nop
loopne
push
sbb
jae
jl
out
sbb
test
and
addb
xchg
je
cltd
cmp
cmpsl
push
loop
loop
inc
movsl
out
mov
jb
jg
pop
pop
mov
mov
jne
xor
push
cmc
mov
mov
mov
stos
xchg
aas
dec
mov
jecxz
ds
jo
cmp
cmpsl
outsl
mov
ficomps
outsb
jae
push
insl
pop
pusha
cld
mov
das
cmp
xchg
and
pop
outsb
adc
jae
into
xchg
xchg
xchg
fldenv
lock
fwait
cmp
inc
or
xchg
dec
adc
push
or
dec
adcb
pop
cmpsb
mov
jbe
and
sbb
lods
jne
pusha
and
fwait
pop
aam
xor
out
dec
and
roll
mov
mov
push
std
orb
sbb
int3
repz
bound
movsb
mov
mov
or
sub
adc
pop
mov
push
cmp
sbb
xchg
sbb
push
out
jnp
test
mov
outsb
repnz
stos
inc
xchg
mov
daa
sub
icebp
xchg
push
xor
sub
into
mov
pslld
cli
mov
sub
and
sbbb
cltd
push
stos
cltd
popf
pop
popa
mov
or
out
xchg
adc
pusha
and
mov
clc
lahf
push
dec
out
xor
mov
cli
scas
adc
ffree
jo
loop
mov
fldl
jnp
out
cmc
pop
outsl
int
or
mov
dec
mov
xchg
scas
fwait
mov
pop
cmp
test
out
cmp
pusha
out
xor
sub
cmp
dec
test
popa
xchg
jle
insl
sbb
test
mov
cli
sub
jle
repnz
xchg
mulb
stos
mov
es
or
lahf
sbb
bound
rcrb
pop
inc
out
pop
push
fldenv
xor
cmp
mov
lahf
sub
pop
jo
out
std
les
and
push
lock
aad
mov
cli
cmp
mov
rcr
lea
test
dec
stos
loopne
stos
push
pop
popa
loope
jmp
cmp
jne
cld
push
mov
adc
cld
in
stos
dec
xchg
js
enter
sub
jmp
inc
lods
adc
mov
ret
lods
pusha
aaa
int
lods
mov
xchg
mov
cltd
mov
mov
xchg
sbb
rclb
pop
inc
dec
test
es
cmpsl
xchg
and
dec
xor
pop
out
shr
nop
sahf
pop
popa
faddp
arpl
mov
pop
int3
cmp
cmp
inc
rcr
add
stc
xor
std
jb
xchg
into
mov
fisubl
lea
les
js
inc
mov
adc
mov
mov
popa
data16
adc
icebp
loop
xchg
pop
popa
testl
aas
cmpb
pop
jnp
sbb
in
sahf
mov
inc
jmp
clc
gs
pop
imul
mov
and
test
xchg
push
punpcklwd
insl
iret
cmp
cmpsb
add
popf
inc
sbb
jnp
sbb
mov
adc
ja
ret
dec
push
sub
pop
sbb
loop
pop
cmp
pop
loop
mov
or
loopne
clc
ljmp
pop
push
ds
fldl
hlt
add
out
mov
bound
hlt
inc
inc
and
pop
stos
pop
out
shrl
lods
mov
cmp
jns
xchg
jmp
jae
cs
mov
ret
mov
dec
pop
loope
and
imul
daa
rep
shll
mov
dec
je
xor
and
test
ret
lretw
or
rclb
mov
and
mov
mov
sahf
sbb
faddl
mov
inc
insl
add
push
fstpt
movsl
mov
inc
push
sarb
and
cmp
mov
fnstcw
icebp
dec
fwait
sahf
out
cmc
cltd
ror
pop
push
xchg
pop
test
leave
jge
mov
mov
or
sbb
mov
iret
popa
fstps
iret
test
push
add
subl
pop
and
data16
jle
mov
fimull
hlt
rcrl
mov
or
cmp
dec
inc
jae
fidivl
out
jns
das
xor
or
insl
mov
loopne
fcmovne
pop
mov
add
enter
mov
out
mov
lods
cltd
int
jmp
jbe
pop
test
add
or
jmp
inc
jmp
pop
lea
add
xor
adc
mov
cltd
repz
gs
xor
mov
cmp
push
shll
rcll
xchg
loopne
repz
popa
int
mov
mov
mov
call
push
fdivl
jl
cmp
out
jl
movhps
popa
add
xor
sbb
das
je
aas
xor
insl
movsl
lret
pushf
mov
pop
sub
outsb
fsubs
inc
fwait
xor
ficoms
hlt
adc
ret
call
push
and
aaa
idivb
sub
cld
imul
inc
popa
sti
push
sub
movsl
out
xchg
shrl
and
popa
popa
push
shrl
in
xchg
lret
dec
pop
mov
or
mov
or
mov
pop
outsl
inc
dec
lock
in
lcall
in
cmp
sbb
adc
mov
adc
clc
adc
fs
clc
out
inc
push
jp
pop
dec
mov
cwtl
push
cmp
cmp
or
mov
loop
inc
stos
pop
roll
fs
adc
rorl
aam
jmp
fcoms
mov
stos
pop
xor
adc
jge
int3
adc
pop
cltd
cld
jg
sub
inc
sbb
cli
and
pop
push
aas
es
fwait
add
jnp
xchg
jl
jmp
mov
inc
jecxz
test
pop
in
sti
bound
mov
or
andl
inc
push
lcall
fadds
lret
mov
cmp
mov
scas
pusha
sbb
jg
dec
cwtl
pop
push
scas
mov
jecxz
out
shlb
jp
xchg
imulb
fnstcw
inc
and
imul
rol
insl
mov
addl
xor
sbb
int3
and
test
lods
xlat
xchg
xchg
pop
sub
jae
shlb
lret
sub
in
stos
cmc
xchg
xor
aad
mov
inc
clc
adc
std
inc
call
mov
mov
pusha
adc
jle
xor
inc
hlt
jne
cmc
out
push
sar
loope
dec
popa
leave
test
xchg
in
push
add
cmp
insb
inc
adc
popf
pop
xor
pop
lahf
leave
test
sbb
in
pusha
mov
sub
or
aam
pop
lcall
icebp
or
fidivs
stos
mov
call
shll
sbb
xlat
ret
cmc
jns
dec
iret
in
pop
push
jmp
idivb
jle
pop
negl
sahf
cmp
push
adc
scas
in
jmp
sahf
ret
mov
subb
sub
sahf
pusha
outsl
jae
push
out
in
inc
scas
je,pt
daa
or
mov
dec
sub
out
enter
mov
shrb
mov
jno
cmp
aam
mov
inc
cmpsb
cs
add
add
inc
lds
sahf
pusha
test
mov
pop
out
js
orl
mov
add
xor
das
pop
dec
pop
outsb
or
sbb
mov
imul
out
mov
xor
pop
cmp
jne
xchg
hlt
shrl
lahf
insl
cmc
pop
xlat
xlat
add
push
push
push
inc
pop
mov
bnd
sub
shr
out
lahf
out
repnz
aaa
add
and
inc
mulb
into
movsl
mov
popf
mov
dec
push
dec
xor
and
cmp
popf
movsl
scas
movsb
lahf
xor
and
push
nop
cmp
lock
ja
cli
mov
inc
add
shl
pop
cli
jle
pop
call
mov
mov
repz
adc
pop
aaa
xchg
jg
pop
jg
mov
mov
stc
xchg
loopne
lret
data16
cmpsw
jne
jo
or
mov
and
mov
lea
lods
mov
add
out
fwait
rorb
xor
lahf
xor
repz
adc
pop
rcr
insb
mov
sub
outsb
mov
adc
test
pop
in
daa
popa
push
in
inc
shrl
leave
and
cli
inc
cwtl
xchg
inc
pop
mov
mull
repz
popa
leave
mov
xchg
mov
xchg
cmp
pusha
sub
lret
das
fstps
pusha
outsb
jo
inc
or
adc
mov
lods
dec
leave
rcll
jno
fiadds
add
push
out
jno
jns
sub
out
dec
lcallw
adc
icebp
nop
fcoms
stos
sti
push
cli
jecxz
dec
jmp
in
ljmp
aam
cwtl
inc
dec
push
mov
ret
cmpsl
and
sub
test
cmp
mov
stc
jg
inc
xchg
push
fisubl
cld
xchg
jne
xor
repz
and
pop
cli
enter
push
and
into
aad
int
in
out
mov
out
fmull
xor
pop
add
or
inc
cld
out
nop
hlt
push
sub
repnz
out
call
clc
pop
shll
iret
mov
in
xchg
fwait
mov
cld
pop
bound
jb
leave
lods
pop
aam
aas
dec
js
mov
pop
push
dec
mov
inc
ds
nop
loopne
xchg
mov
and
add
cwtl
repz
pop
mov
xor
xchg
imulb
cmp
gs
or
xchg
lods
push
out
and
es
mov
dec
call
imul
pop
jne
in
push
popa
cmp
rcrl
push
or
or
stos
push
adc
dec
and
mov
xchg
pop
add
inc
cmp
test
mov
inc
jl
jge
int
sub
inc
dec
mov
mov
nop
test
ljmp
mov
call
sbbl
or
lea
sub
mov
mov
cmp
stc
jo
hlt
sbb
jle
mov
mov
lea
xor
mov
imul
cmpl
cs
mov
int3
push
subb
xor
mov
jp
push
cmp
xor
pop
out
iret
mov
pop
xor
push
fadds
fucomp
mov
push
in
mov
lahf
mov
cmp
pop
loope
pusha
pop
cmpsb
lahf
or
add
fsts
mull
inc
fidivrs
sbbl
or
mov
test
mov
ret
dec
pop
mov
sbb
or
push
push
mov
inc
das
inc
pop
pop
sbb
and
jle
xchg
movsb
in
sub
mov
fs
ret
movsb
xor
jae
lret
mov
arpl
inc
rorl
mov
filds
imul
aam
jo
rorb
loopne
imul
das
mov
fs
adc
mov
jge
subb
mov
push
test
in
ljmp
pop
arpl
fwait
out
pusha
fmull
cmp
shll
loope
jne
in
fstps
pop
add
std
mov
pusha
roll
cwtl
andb
sbb
fsubrs
pop
fstps
cmp
test
push
xor
or
out
mov
pop
push
call
mov
pusha
imul
lahf
out
in
sub
sub
loope
mov
stos
sbb
pop
lods
or
fisttps
sbb
pusha
dec
dec
add
out
lds
enter
bound
add
scas
sub
cmp
push
ljmp
mov
pop
jns
push
pop
mov
loopne
xchg
repnz
pop
stc
push
repz
mov
cmp
jo
and
outsb
sti
divb
out
jle
push
xchg
div
inc
in
mov
jl
xchg
sub
jbe
cmp
inc
mov
mov
pop
or
inc
jmp
orb
insb
scas
add
mov
push
dec
xlat
cltd
ja
fwait
jno
pop
daa
fwait
xor
shll
and
pop
pop
or
pusha
sahf
pop
in
mov
push
jae
iret
or
mov
gs
add
xchg
mov
cli
jecxz
mov
out
jbe
fmuls
push
mov
add
enter
imul
pop
in
ss
mov
mov
iret
or
pushf
push
cmpsl
shr
pop
fidivrl
lahf
bound
in
xor
arpl
mov
fldcw
push
cmpsl
pusha
clc
mov
xor
lock
or
add
add
mov
sub
pusha
pop
add
inc
inc
pop
add
test
lock
inc
mov
lea
pop
cmpsl
aas
cmp
iret
or
jg
cmc
out
std
out
adc
lret
pop
test
cmpsb
out
xchg
dec
push
jo
adc
jg
jno
scas
xchg
jecxz
lret
out
jb
pop
int3
sub
add
test
pop
mov
stos
or
popa
inc
sub
mov
add
lock
je
push
test
cmpsl
fwait
out
mov
gs
dec
sbb
mov
adc
movsb
stos
es
pusha
repz
scas
aaa
out
pop
mov
jnp
lods
or
testl
xchg
bnd
cmp
fsubrl
xchg
decb
push
xor
or
test
out
loopne
out
ja
or
addr16
sbb
sub
xchg
xchg
ss
jbe
adc
sub
in
scas
jp
popf
pop
fnstsw
decb
cmp
dec
jb
mov
js
daa
xchg
mov
mov
jge
cli
addr16
add
sbb
stos
xchg
inc
or
sub
sub
fs
and
leave
mov
add
lods
dec
sub
addl
cli
pop
and
xor
nop
xlat
dec
ret
shr
xlat
xchg
sti
jne
jno
xorl
jge
or
fwait
scas
push
mov
mov
in
and
dec
fstl
insb
adc
jno
cmpsl
idiv
dec
lret
sub
sub
cmp
sbb
loope
out
cltd
adc
cltd
mov
mov
dec
out
pop
ret
jae
call
pop
dec
pop
pop
pop
xchg
imul
sbb
pusha
nop
cs
sbb
into
dec
or
out
mov
xchg
mov
fwait
out
xchg
cmpb
mov
sub
push
dec
and
js
mov
nop
push
daa
pop
loope
xorb
out
call
sbb
nop
mov
mov
xchg
push
pop
or
sti
inc
fwait
sbb
push
push
lret
bnd
out
pop
jmp
adc
call
sub
test
shll
pushf
shr
cltd
cli
cmpsb
shlb
insl
inc
pop
leave
push
out
xchg
out
faddl
dec
clc
xchg
push
fisttpll
hlt
in
int
cmpb
lret
pop
ja
mov
loopne
cli
adc
adc
arpl
pop
iret
cmpsb
out
mov
jecxz
rorb
jge
xor
adc
and
lcall
jbe
in
lods
into
sub
and
dec
cmp
clc
and
or
pop
xlat
add
cli
pop
inc
xor
sub
xchg
test
fisubrs
sahf
lcall
dec
outsb
push
mov
mov
dec
popa
push
jg
mov
scas
adc
add
loopne
sarl
pop
pop
jmp
mov
adc
mov
scas
into
aas
jp
pop
sub
or
cmp
inc
lahf
stos
dec
in
sub
sahf
jnp
daa
mov
push
cmpl
pop
xchg
mov
iret
inc
jle
pop
decl
in
inc
xchg
mov
jne
mov
out
mov
jge
mov
sbbb
push
sub
add
loop
dec
push
arpl
mov
cmpb
imul
mov
dec
out
mov
repz
and
fisubl
xchg
mov
clc
int3
dec
movsl
cltd
mov
test
push
push
sub
xlat
pusha
loop
dec
jne
arpl
lcall
mov
call
mov
pop
inc
cltd
lea
cmp
leave
push
mov
lea
cmc
inc
add
loope
sbb
fcompl
orb
adc
insl
adc
fsubrs
cs
in
js
ds
inc
mov
pusha
ja
sub
pop
add
mov
mov
mov
in
pop
xchg
jge
aad
popa
xchg
addr16
sbb
sti
iret
in
pop
in
mov
pandn
push
xchg
pop
and
and
leave
add
add
jne
push
push
aad
cmpsl
fcmovbe
sub
incb
mov
sbb
pop
gs
sbb
push
mov
adc
or
adcb
sti
mov
shll
lea
mov
pop
rclb
mov
sbb
pop
push
std
icebp
clc
stos
add
out
xor
pop
xor
pop
in
loop
sub
jmp
ja
pop
insl
pop
sarb
jae
ret
enter
shl
cmc
jno
out
loopne
pop
mov
cmpsb
mov
cwtl
jmp
add
mov
and
mov
mov
std
bound
jmp
in
stos
shlb
jle
fisubrs
lods
jp
sbb
inc
pop
inc
out
jg
pop
arpl
leave
in
inc
movsb
aad
cmp
popa
fcmovnu
hlt
dec
push
push
xchg
scas
sahf
insl
dec
nop
cmpsl
sbb
mov
stc
bound
imul
roll
fwait
jo
mov
call
mov
and
jp
or
jne
loop
outsb
sub
or
ljmp
jecxz
loop
pusha
mov
outsl
sub
inc
lcall
mov
and
push
js
pushl
test
add
cwtl
jl
sub
adc
pop
and
out
sub
xor
lock
mov
jns
push
outsb
mov
lods
cmp
icebp
mov
pop
and
iret
adc
pop
pop
lea
pop
outsb
xchg
mov
shlb
out
cmpsl
and
and
lods
fs
cmp
sbb
mov
adc
or
mov
enter
add
push
lods
mov
push
cmp
mov
jle
push
mov
sub
jbe
push
dec
rcll
aas
pop
dec
enter
out
adc
shll
enter
into
sbb
lock
mov
in
out
add
enter
cmp
insl
shr
stos
fmul
and
outsb
add
jle
push
mov
dec
aam
std
lahf
dec
xlat
pusha
es
sahf
xchg
in
js
out
push
popf
pop
dec
adc
repz
fldl
gs
sub
xor
daa
mov
mov
es
push
mov
cli
sahf
jmp
adc
pop
push
out
mov
sti
out
repz
mov
fisubl
rcrl
gs
imul
pusha
mov
js
sub
test
aad
pop
mov
xchg
pusha
repz
dec
inc
imul
sti
fstpt
imul
fmull
pop
cltd
data16
out
loopne
test
mov
cmpsb
xor
faddp
pop
xlat
fwait
sub
pop
imulb
jbe
fisubl
mov
cmp
js
or
fs
push
push
add
xchg
out
mov
mov
mov
fidivrl
fcomps
add
mov
pusha
or
mov
and
mov
push
sti
adc
cs
add
sbb
adc
mov
test
and
ja
jns
pop
adc
pushf
shrb
outsl
dec
sub
loope
scas
loopne
bound
mov
out
adc
and
dec
ja
dec
xlat
shlb
rcll
pusha
sbb
inc
orl
je
mov
mov
cmp
insb
mov
dec
pop
adc
fwait
mov
pop
pop
mov
jge
jle
stos
jle
out
test
mov
es
mov
popf
mov
lcall
imul
sbb
ret
inc
sbb
mov
fsubs
cld
and
sahf
cmp
mov
aam
addr16
mov
xchg
das
mov
mov
out
in
xchg
lds
cmp
scas
sbb
and
push
cs
or
pusha
lods
scas
push
stc
lcall
xchg
xlat
call
enter
pop
lret
pop
js
xchg
stos
cs
enter
lock
adc
add
sbb
inc
jns
outsl
pop
dec
or
pop
lret
jo
pusha
mov
add
cmpsl
fsubs
fbstp
out
pushf
loope
sub
arpl
mov
and
out
mov
jne
fsubs
loop
or
test
mov
sub
sub
cmpsb
es
inc
out
out
cli
gs
mov
les
pop
pop
and
mov
dec
mov
xchg
stc
je
out
mov
ljmp
es
cmp
and
adc
loope
mov
add
dec
or
cmp
cmpsl
out
xchg
das
jmp
out
inc
jno
xchg
loop
jo
mov
jbe
sbb
dec
push
mov
and
sahf
xchg
pop
add
sbb
jo
scas
cmpb
mov
adc
xor
out
fsubp
enter
mov
mov
xor
stc
aas
mov
mov
push
xor
es
pop
outsb
std
push
enter
mov
pop
out
inc
and
add
nop
and
push
mov
sbb
dec
mov
sbb
push
fmulp
sub
ja
fistpl
jp
xor
jmp
dec
daa
jb
fldcw
pusha
out
lahf
fisubrs
add
inc
out
mov
inc
or
add
daa
sbb
mov
icebp
push
cli
inc
push
push
aas
xchg
fisubrs
adc
mov
das
sub
mov
jns
cmp
rol
in
fxch
push
aaa
dec
adc
repz
out
jge
mov
ret
mov
fbstp
loop
mov
lcall
adc
loopne
pushf
pushf
scas
or
into
add
xor
inc
and
adc
cmp
lcall
aas
cwtl
cltd
mov
ja
jnp
dec
cmp
clc
movsb
xor
push
inc
fadds
cmp
or
mov
cmpsl
mov
popa
mov
inc
jnp
iret
lea
in
push
sub
fdiv
cs
dec
push
cmp
popa
mov
xlat
and
popf
push
out
push
xchg
rcrb
lds
jo
xor
add
dec
into
aas
mov
sbb
fmul
pop
ljmp
ficoms
dec
out
divps
jae
cmp
je
push
pop
bound
inc
notb
or
out
movsl
or
xchg
lret
mov
mov
lods
add
fldl
xchg
mov
mov
test
rcrb
add
sti
movsl
xchg
cmpsl
mov
fs
add
cmp
fwait
pop
pop
popf
adc
mov
cwtd
sbbl
jl
pop
cmp
clc
movsb
enter
aad
mov
cld
lcall
fadds
out
jo
sub
push
mov
add
shl
scas
pop
pop
xor
lock
cmp
add
and
mov
movsl
push
push
add
mov
sbb
nop
out
mov
jb
cld
inc
inc
and
jbe
inc
mov
mov
cmp
imul
push
scas
popa
out
inc
cmc
test
push
or
mov
mov
fildl
cmpsb
frstor
repz
or
pop
mov
mov
push
mov
fstpl
icebp
gs
mov
lcall
cmpb
xchg
shlb
dec
out
pop
stc
fwait
rcrl
pop
scas
pop
and
popa
pusha
insb
ret
add
push
inc
mov
push
jo
loope
rcll
jo
pop
sbb
sub
xchg
xor
and
jbe
mov
cmpl
add
out
jmp
sahf
lock
xchg
cmp
test
mov
in
bound
daa
or
pop
cmp
xchg
gs
mov
dec
lock
out
js
int
mov
push
push
out
repnz
push
mov
sahf
ljmp
mov
pop
xchg
xor
xor
jnp
aas
loop
sub
popa
adc
push
dec
mov
xchg
pop
jl
sbb
mov
mov
push
add
out
xchg
jmp
mov
or
mov
loope
dec
jle
ja
shlb
arpl
out
jnp
push
mov
lea
or
dec
lret
push
inc
fidivs
ds
mov
popf
inc
ret
test
push
add
pop
jge
adc
pop
enter
jg
pop
sbb
dec
fs
movsl
xchg
shrl
add
shlb
mov
rcrb
dec
add
or
adc
ret
sahf
pop
push
cmpb
xchg
out
mov
inc
fdivrs
cs
lods
xchg
sub
pop
mov
add
pop
pushf
jne
jmp
out
mov
sahf
loope
push
push
sahf
add
aas
cmp
into
fcmove
mov
dec
inc
cli
pop
je
icebp
repnz
push
and
jl
mov
pusha
or
into
pop
push
push
pop
nop
lret
sub
sub
icebp
pusha
das
jl
je
pop
or
orb
fcmovnu
imul
pop
ja
dec
cwtl
xlat
jle
test
push
pusha
push
lret
push
mov
lahf
lea
dec
sub
sub
sub
repz
pusha
jns
push
pcmpgtb
out
pop
and
cmpsl
mov
xchg
xor
pop
pop
pop
ljmp
rcr
insb
jb
or
fnsave
sbb
mov
xchg
aad
sbbb
mov
fnsave
dec
sbb
imul
repnz
pusha
mov
pop
sbb
dec
rorl
mov
outsb
cltd
cwtl
mov
loop
inc
pop
push
xor
lret
lock
popa
popa
pop
jne
call
fstpt
pop
xchg
dec
jle
mov
pop
mov
clc
mov
add
xchg
pop
dec
in
nop
ljmp
nop
and
cwtl
popa
xor
rol
pop
pop
pop
dec
loopne
sbb
js,pn
std
xchg
imul
jo
inc
xchg
out
adc
or
popa
and
stos
cmpsl
sub
mov
adc
jg
adcl
push
sbb
pop
xor
push
cmp
lahf
aaa
jo
out
out
test
xchg
dec
pushf
and
dec
or
enter
hlt
mov
and
xchg
push
cld
jae
imul
pushf
rcl
aas
popa
and
pop
fildll
stos
insl
mov
pop
das
xchg
scas
inc
xchg
dec
lock
in
orb
hlt
sub
pop
inc
repnz
je
sbb
bound
sub
aaa
sti
dec
loopne
lds
add
int
or
enter
pop
pop
push
dec
inc
pop
test
xor
cmp
pop
stos
ss
test
popa
push
mov
lret
pop
xchg
call
and
out
cmp
sub
adc
loop
xor
push
or
test
mov
inc
xor
and
mov
jmp
mov
dec
sub
push
mov
out
add
mov
popf
jne
dec
add
xchg
fcmovbe
loopne
dec
pop
jmp
mov
inc
pusha
dec
lahf
mov
addl
sub
sbb
pop
movsb
jne
out
push
sbbl
lret
pop
lret
push
push
adc
sbb
push
out
xor
jne
or
mov
repz
and
popa
imul
jg
popf
out
push
xchg
lcall
push
cwtl
cmp
mov
adcb
aad
mov
sbb
gs
sub
cmp
outsl
stos
fstpl
test
mov
into
mov
jno
adc
pop
jle
adc
lret
test
aad
or
lret
lahf
mov
mov
out
les
inc
stos
test
dec
pop
clc
mov
test
sahf
fimull
stc
sbb
push
jl
shlb
imul
inc
inc
cld
jo
sbb
mov
popaw
and
ret
out
cwtl
mov
pushf
mov
mov
or
sub
xchg
xor
movsl
fs
shlb
mov
mov
mov
pusha
stc
sbb
in
dec
adc
fsubrp
xchg
inc
fidivrs
xor
int3
xchg
sbb
test
stos
cmpsl
in
sub
jg
out
and
in
stos
sbb
outsl
cmc
mov
adc
lret
dec
and
add
mov
je
sbb
pop
add
jge
mov
or
mov
fisubl
jbe
in
sbb
outsl
push
dec
clc
pop
hlt
xchg
repz
gs
outsb
rorl
sub
pop
pop
lock
sub
jl
xor
mov
repz
in
jl
push
mov
out
push
fstl
adc
add
roll
lock
gs
pop
test
mov
adc
and
stos
pop
mov
mov
insl
hlt
enter
ret
mov
pop
js
xchg
adc
pop
inc
popa
jg
pop
or
and
movsl
ret
fs
lea
dec
nop
and
out
and
jp
movsb
lock
movsl
add
mov
pop
rcll
in
push
out
inc
pop
xor
mov
cwtl
jmp
daa
push
dec
add
dec
notb
push
lods
inc
fwait
mov
loop
cmp
into
adc
mov
push
cmc
shl
fucomp
xor
mov
das
out
or
aad
jg
sahf
pusha
cmp
xor
lods
in
mov
add
cmp
pusha
nopl
out
ja
test
mov
jb
xor
cmc
in
xchg
fidivs
push
das
pop
inc
inc
mov
adc
xor
xchg
popf
imul
mov
mov
sbb
imul
xlat
lea
es
rorl
rorl
movsl
mov
pusha
jb
sti
cmp
std
pop
sub
popa
repnz
in
int
add
cmp
andb
adc
enter
and
insl
jns
lods
mov
pop
mov
xchg
sub
pop
dec
int
fs
mov
mov
mov
out
xor
in
pop
mov
dec
pop
nop
pusha
inc
add
mov
mov
out
ret
jmp
repz
adc
pop
or
pop
cmpl
xor
arpl
mov
xor
pop
pop
inc
insb
inc
mov
test
fs
lods
sub
ljmp
imul
sbb
mov
int
arpl
sar
adc
dec
lds
stos
xchg
sahf
ja
adc
movsb
mov
ret
pop
or
lods
or
jle
sbbb
adc
xor
out
sbb
lea
out
sahf
cli
cmp
cmc
cmpsb
arpl
jmp
adc
fs
call
imul
pop
cmpsb
lcall
pusha
sbb
or
xchg
cld
dec
nop
bound
in
fisubs
jno
xchg
dec
xchg
pop
xchg
daa
and
dec
in
test
stc
and
xchg
call
push
dec
push
xchg
and
mov
pop
xchg
mov
push
inc
es
data16
movsl
jle
push
daa
into
adc
cli
sbb
int3
scas
mov
adc
sti
xlat
xchg
js
adc
cwtl
mov
push
arpl
pop
sbb
js
out
xchg
pusha
fcoml
xchg
xchg
pop
in
stc
jg
inc
xchg
fcmovnu
fsub
sbb
cli
in
pop
or
jl
mov
cmpsb
sbb
nop
and
pop
mov
mov
out
push
mov
inc
out
inc
popa
and
inc
dec
pop
arpl
pop
or
adc
lock
pop
out
cltd
out
pop
push
sbb
mov
insb
iret
inc
jp
pop
loope
mov
xlat
pop
pop
ror
push
stc
mov
sub
mov
xor
add
ljmp
pop
test
pop
fnop
aaa
iret
movsb
pusha
pusha
arpl
jae
push
pop
insb
pop
in
fs
cli
pop
lock
sahf
pop
in
stos
jo
lea
in
and
pop
sbb
je
push
push
xor
mov
push
test
not
ret
add
inc
mov
push
nop
mov
int
imul
cltd
subl
addr16
mov
popa
in
adc
ret
adc
lahf
xchg
xor
sub
fs
lea
push
cmpsb
insl
pop
mov
stos
fcomps
xor
mov
mov
mov
fsubs
out
es
loop
outsb
pop
push
loope
adc
pop
mov
jle
sub
cmp
mov
shl
clc
jg
mov
scas
cmp
mov
and
pusha
xchg
cmp
popf
sahf
push
test
data16
lock
or
sahf
scas
out
mov
fisubl
sub
jmp
call
dec
mov
insl
mov
cmc
pop
jne
mov
negb
and
sbb
pop
clc
mov
flds
push
pop
adc
or
pusha
cld
scas
pop
inc
loop
cld
jb
int3
pop
mov
sub
fistpll
dec
xchg
int
negl
bound
std
sub
pop
les
imul
popa
nop
loopne
xor
daa
xor
push
adc
adc
fs
dec
mov
out
out
roll
out
sub
aaa
divl
outsb
and
iret
movsl
sti
pop
mov
fwait
mov
in
bound
sahf
movsl
dec
bound
dec
es
sub
loope
mov
insb
das
scas
loope
lcall
pop
inc
rorl
or
mov
push
mov
push
into
cmp
inc
pop
cmpsl
ret
mov
iret
mov
mov
out
nop
fildl
pop
xchg
or
rcrl
decl
adc
pop
inc
pop
jbe
rclb
adc
jae
pop
in
fists
ja
fs
xchg
add
test
ret
cmpsb
in
mov
pop
inc
fwait
mov
push
jnp
and
insb
or
imul
sbb
popa
in
add
popf
movsl
cmp
out
push
push
jne
mov
inc
sbb
or
out
push
cmp
out
insl
xchg
push
push
mov
insl
sti
cmp
pop
mov
sub
mov
lcall
adc
sbb
jmp
jne
xchg
loop
lock
shlb
out
lock
mov
icebp
iret
pusha
jl
add
mov
js
out
mov
ss
inc
decb
daa
mov
pushf
addl
push
adc
ss
outsb
into
push
addr16
mov
jo
ja
pop
enter
out
pop
cmpsb
mov
outsb
scas
pop
xor
out
mov
adc
xor
pop
mov
inc
aas
clc
repz
xlat
daa
xchg
xchg
cmpb
sub
jno
push
mov
leave
fildl
je
out
sbb
ds
add
jmp
pop
int3
jb
test
xchg
int
mov
andl
aam
mov
pusha
jecxz
or
jne
mov
stc
cwtl
mov
xor
xor
jnp
mov
pop
outsb
add
and
stos
mov
add
sbb
mov
sahf
das
cmpsb
cltd
outsb
adc
mov
xchg
add
adc
jg
movsb
pop
insl
stc
lahf
aad
cmp
pushf
rolb
stos
out
sub
ds
mov
sbb
adc
aas
cmpsl
pop
dec
push
lock
test
sub
push
mov
leave
xor
xchg
cmpsl
mov
add
stos
pop
push
cmc
lahf
push
or
cltd
test
out
lods
loop
sbb
jmp
movsb
and
outsl
lahf
cmp
repnz
out
stc
aas
outsl
ficoms
pop
sbb
sarb
in
repz
fstpt
add
jl
pushf
push
pop
mov
rcr
das
sahf
fisubrs
mov
mov
dec
push
sti
loop
iret
jmp
sbbb
pop
mov
and
popa
fisubrs
inc
stos
xchg
movsl
jb
rcrl
sbb
push
jnp
mov
rorl
pop
adc
push
sti
jmp
mov
insb
sub
aad
rolb
inc
outsb
jmp
or
fidivl
int3
jp
fisubs
push
push
sbbl
push
jg
les
test
fidivs
shl
std
cmp
jns
enter
adc
inc
pop
js
xchg
out
jmp
fstl
xor
sbb
sub
mov
mov
pop
xlat
pushf
push
push
daa
andl
mov
in
mov
xchg
pop
adc
xor
cli
pusha
in
nop
imul
ss
mov
dec
ficoms
arpl
mov
sub
repz
mov
stos
mov
xor
mov
arpl
fs
mov
mov
je
test
and
mov
push
fists
sub
mov
push
jno
pop
fcomps
js
sbb
mov
cmpsl
cs
mov
test
fisttpll
and
jb
pop
mov
mov
aas
stos
mov
cs
pop
imul
stc
xchg
sub
push
imul
xchg
and
add
les
gs
fldt
push
or
and
out
add
jmp
data16
out
dec
mov
test
cld
push
inc
xchg
xor
arpl
add
xor
insl
mov
test
pusha
stos
pop
push
push
loop
ljmp
sarb
jb
and
pop
mov
ja
sar
mov
xchg
ljmp
or
add
scas
or
jp
adc
pop
inc
jne
and
lcall
push
jmp
or
or
inc
push
cmp
jge
jbe
loopne
and
jno
loope
leave
jnp,pn
cmp
popa
orl
fwait
mov
jo
out
out
push
inc
aaa
insl
pop
jmp
out
sub
push
aam
incl
iret
ret
rorb
lret
adc
daa
hlt
subb
mov
pushf
mov
cltd
inc
icebp
inc
cwtl
sbbl
mov
sbb
pop
mov
insl
sub
jo
pop
fstpl
ret
mov
inc
imul
lods
add
test
mov
and
repnz
push
cld
dec
and
dec
push
pop
stos
inc
inc
push
xchg
cmp
lods
xor
mov
dec
lods
pusha
cltd
and
shr
dec
js
mov
dec
xor
lods
cmpsb
and
subb
nop
fs
cltd
out
sbb
inc
xchg
mov
push
add
sti
dec
out
cmp
fdivrp
scas
mov
push
mov
sbb
adcb
mov
xchg
mov
in
ret
sub
sbb
popa
push
fucomip
cmp
jbe
in
out
je
daa
imul
fwait
jns
ret
mov
jb
fmull
add
jl
mov
jl
pop
pop
jp
inc
ja
iret
xchg
inc
pop
xchg
popf
or
mov
add
sub
cmpsb
sahf
inc
cmp
out
loop
xor
mov
push
push
adc
lock
js
add
leave
mov
lcall
jbe
cmp
jbe
subb
xor
iret
push
lods
lret
je
fcomps
sbb
xor
cmp
test
push
mov
cmp
cli
fisubl
popa
fildl
inc
mov
out
je
mov
xor
push
dec
ja
xor
add
xchg
in
mov
sbb
or
test
mov
in
xor
xor
xor
xchg
push
shl
pusha
loope
clc
pop
out
inc
cmp
enter
stos
adc
rcrb
pop
loope
rolb
inc
push
push
repnz
cmp
mov
sub
sarl
mov
or
push
ja
popa
enter
jg
rcrl
sbb
and
pusha
push
bound
and
dec
sbb
scas
stos
cwtl
dec
inc
faddl
popa
mov
add
out
mov
test
fbld
rorb
scas
xor
in
xchg
push
rorl
aam
andl
das
test
pop
sub
fcoms
scas
pop
inc
mov
out
or
or
ret
mov
adc
pop
pop
pop
jnp
inc
movswl
pushf
mov
and
xchg
das
mov
mov
lea
push
xor
loop
push
repz
mov
into
xchg
jg
cmp
push
dec
je
rol
xchg
int3
pusha
orb
pop
out
add
jae
repnz
cli
movsl
in
hlt
addr16
mov
loope
cwtl
cmp
pop
or
jmp
es
xchg
inc
nop
xor
test
xchg
rcl
insl
cltd
sahf
cwtl
fcmovnb
push
and
scas
pop
pop
and
mov
sub
jl
fsubr
push
pusha
out
addl
inc
cmp
out
push
sub
rclb
ss
movsb
xchg
mov
fadds
xchg
clc
add
insl
jl
mov
ret
cmp
xor
dec
movsb
test
test
in
arpl
into
push
mov
jb
lret
imul
xchg
shrb
cltd
pop
les
cmp
lret
push
mov
dec
call
sbb
mov
fisttpll
out
jbe
idiv
xor
xor
repz
dec
test
aad
scas
sub
jb
xor
jle
xor
xchg
test
jo
dec
xchg
xchg
xor
mov
xor
mov
mov
adc
mov
cmp
iret
push
push
mov
test
adc
or
push
mov
iret
pusha
pop
ljmp
out
movsl
mov
adc
pop
outsb
fmull
or
cli
cwtl
aad
sub
loope
or
cmpsb
les
lock
sbb
cld
xchg
mov
bound
push
xor
pop
out
roll
test
sti
mov
pusha
xchg
cwtl
out
lahf
push
lret
stc
fldt
in
imul
arpl
mov
push
xor
mov
inc
stos
shlb
movl
leave
pop
les
in
les
pusha
cmpsb
push
test
lock
out
push
xchg
loop
fs
cld
repz
fcompl
sub
mov
push
mov
stos
out
dec
inc
int
sub
add
adc
ficompl
push
mov
mov
movsb
or
rcr
jnp
rorl
movsl
xchg
mov
xor
enter
jg
cwtl
adc
stos
dec
push
xchg
inc
pop
push
inc
xchg
stc
jl
aad
pusha
aam
mov
andnps
faddl
pop
lock
mov
cmp
popa
adcb
mov
out
cwtl
lods
lock
notl
mov
insl
mov
arpl
lods
daa
movsb
loopne
xchg
or
pop
xchg
push
adcl
imul
dec
mov
fwait
cld
inc
pop
ds
pop
push
popa
mov
mov
pop
xchg
xchg
dec
scas
outsb
jg
pusha
or
mov
sbb
push
loope
insl
xchg
in
fbld
inc
xor
repnz
in
cmc
rorb
xchg
push
ja
orl
repnz
out
std
outsb
daa
push
adc
mov
sahf
call
ret
popa
xchg
xchg
add
cmpsl
xchg
mov
push
push
or
pand
iret
fnsave
sahf
pop
or
and
add
mov
ja
popf
xchg
push
popf
fsubs
mov
xchg
fisttpl
or
adc
mov
out
fmulp
scas
dec
push
mov
push
cwtl
pop
lock
imul
sub
xor
int3
loop
dec
outsb
test
lahf
sub
add
or
icebp
out
fs
lret
push
inc
in
sub
push
les
sahf
and
sbb
repz
testb
mov
jecxz
imul
iret
pop
jge
test
pop
testb
push
int
aad
pop
add
sbb
mov
mov
shlb
es
xor
cltd
cld
mov
outsb
outsb
pop
sub
xchg
pop
mov
cmp
and
addr16
divl
out
adc
mov
sahf
lahf
pop
jecxz
lret
aas
sbb
jno
xchg
xchg
out
pushf
pop
cs
mov
rorl
addl
pop
pop
or
and
inc
notb
adc
cli
fwait
lret
mov
dec
stos
add
shll
insb
in
test
pop
scas
jg
aam
jb
mov
inc
mov
aad
das
sbb
jmp
pop
mov
inc
mov
sub
xor
movsb
add
mov
jb
add
dec
xor
mov
out
mov
jb
push
nop
sbb
imul
cld
aas
adc
xchg
bound
mov
cmp
mov
lcall
xchg
popa
gs
popa
xor
jp
pop
sub
out
sbb
cmp
add
movaps
insb
fidivs
mov
test
push
jmp
lods
rclb
dec
sbbb
stos
pop
fsubr
mov
out
sbb
mov
and
out
pop
add
mov
sbb
les
xor
repnz
sete
daa
pop
insb
pop
cli
cmp
aaa
in
xor
sub
dec
loop
add
inc
popa
stos
inc
xchg
out
into
cli
repnz
fsubl
movsb
hlt
gs
inc
lods
add
and
fldl
rcl
out
lock
mov
cmp
je
cmc
and
xchg
idivl
and
mov
mov
inc
xchg
jge
cmp
jb
cmp
fdivrl
loopne
mov
in
mov
pop
out
dec
pop
pop
mov
adc
fstl
sub
mov
and
jmp
lods
nop
mov
popa
inc
insl
test
in
and
push
sbb
xor
loopne
lea
loopne
call
insl
jbe
clc
xor
sbb
repz
dec
fwait
pop
int
add
xor
mov
jne
xchg
cmc
pop
aaa
je
pop
mov
jns
fcmovnu
adc
mov
out
lock
in
leave
adc
andb
cmp
mov
mov
ljmp
movsl
adc
mov
nop
test
shl
out
ss
ja
pop
sub
aad
adc
fstpt
sbb
call
adc
in
les
inc
sbb
jb,pt
adc
fidivs
push
dec
dec
or
imulb
fwait
mov
int
jmp
fiadds
pusha
std
outsl
push
xchg
inc
pop
jo
push
mov
pusha
inc
pop
rsqrtps
js
out
es
cmp
ret
mov
jne
sub
inc
stc
fsubrl
nop
jmp
dec
dec
mov
mov
outsl
pop
loope
xchg
jbe
push
xchg
jne
or
jns
mov
cmp
and
in
pusha
push
and
andb
or
cmp
push
adc
fs
mov
inc
mov
out
cs
in
outsb
mov
mov
test
jp
out
pop
mov
icebp
mov
fnstenv
int3
sbb
out
cmp
testl
pop
lods
out
loopne
push
adc
dec
push
pusha
inc
pop
xchg
jno
sub
hlt
and
or
hlt
pop
inc
pop
out
mov
dec
add
outsb
mov
lahf
das
enter
ss
or
dec
fisttps
inc
js
cmp
xchg
sbbb
out
mov
scas
push
out
cmp
mov
adcb
js
fwait
sub
adc
adc
imul
push
in
jne
test
scas
or
pop
jae
add
scas
xor
pop
xor
and
das
cmp
rcrb
push
and
aad
xchg
cmpsb
dec
pop
jnp
fldt
jo
in
daa
push
sub
inc
jmp
adc
int3
repnz
pop
pop
mov
ljmp
pop
cmp
fistpll
push
mov
in
push
es
inc
xor
pusha
aaa
push
jecxz
pop
shlb
les
out
mov
test
pop
lcall
insb
inc
jb
add
mov
fnstsw
pusha
adc
dec
inc
out
call
dec
xchg
mov
xor
mov
and
bound
mov
add
or
in
mov
xchg
cltd
lods
pop
mov
pop
fiaddl
push
rep
cmp
mov
in
cmp
int
adc
cmpsl
push
popa
jg
mov
lock
sub
sub
jle
lcall
xor
inc
dec
loop
sub
xchg
fcoml
jns
pop
je
into
sbb
popa
ljmp
dec
out
jp
add
sarb
cmpsl
mov
jecxz
pop
loop
cmp
mov
int
int
aam
mov
push
push
imul
inc
mov
jl
inc
push
jmp
test
jno
stos
pop
pop
aas
push
xchg
scas
outsl
divb
push
xchg
mov
clc
or
push
ljmp
pop
cmp
incb
jp
xchg
cmp
sbb
or
jle
fdivrl
inc
push
dec
push
lods
bound
gs
lods
add
inc
out
pop
add
mov
test
or
outsb
fcomps
xlat
push
test
and
mov
ja
insb
pop
jae
ret
out
mov
xor
xor
data16
imul
pop
sub
cmpsl
clc
aas
stos
lret
xchg
mov
push
xor
sub
arpl
add
aam
loope
mov
aaa
lret
push
sub
ja
pusha
xchg
sahf
iret
rclb
inc
enter
or
add
mull
pop
push
nop
jbe
fisubrs
sbb
int
jns
mov
movsb
xor
pop
cwtl
hlt
xchg
xchg
fsubrs
add
inc
xchg
push
and
jl
fstpl
sahf
adc
mov
cmp
cwtl
add
push
shrl
adc
pusha
aam
ss
mov
fsubrp
sub
inc
fisttpll
loope
xchg
cmpsb
jl
sbb
mov
or
jle
popa
add
dec
jmp
mov
push
icebp
sbb
jb
subb
pop
pop
test
jbe
sub
pusha
out
inc
aad
shlb
out
fisttpll
lods
fildll
or
or
rcr
aad
jge
inc
sbb
inc
cmp
mov
push
xchg
in
mov
pop
clc
aas
adc
push
popa
fstpl
push
insb
test
nop
and
cs
push
fiaddl
mov
subl
xor
inc
pusha
mov
insl
push
jmp
scas
and
aam
out
notl
pop
outsl
jnp
out
nop
mov
test
les
pop
jecxz
data16
or
mov
and
jecxz
inc
pop
pop
mov
cmp
fcmove
sub
adc
pop
or
inc
movsl
inc
subl
adc
and
push
outsl
subb
pop
cmpsl
aad
cli
popf
sbb
cs
mov
out
and
cmpsb
mov
inc
insl
in
aaa
or
mov
bound
loope
popa
cltd
push
cmp
push
leave
repz
sub
xor
out
push
inc
add
shrl
jle
push
adc
mov
jns
push
inc
jb
xchg
aad
and
pop
cld
adc
and
sahf
in
sub
sti
fisttps
push
mov
mov
popa
in
addl
cs
shll
cmpsl
mov
mov
pop
push
mov
lahf
psubsw
fs
pop
sub
mov
xchg
mov
cmc
dec
pop
mov
and
insb
mov
scas
push
sahf
push
lea
dec
cmp
rcll
movsl
jb
mov
cli
daa
dec
dec
inc
jecxz
nop
lahf
mov
adc
jl
mov
popa
add
jl
lods
add
ja
mov
pop
aad
out
in
sub
leave
push
dec
pop
std
out
jo
shll
pop
jle
push
or
es
rorb
and
add
cmp
insb
cmc
shrb
sbb
mov
repz
xchg
pop
aaa
ja
xchg
xchg
push
mov
jp
sub
popa
jle
mov
inc
mov
aad
inc
daa
sbb
cli
xchg
loopne
mov
mov
push
dec
mov
loope
mov
pop
popa
jbe
mov
or
pop
add
ja
inc
movsl
test
add
mov
inc
add
aas
pop
subb
loop
sub
and
sarl
or
sbb
and
pop
pop
xchg
iret
jl
imul
repz
mov
icebp
int
inc
leave
loopne
popa
xor
leave
rorl
call
ret
sbbl
xor
pusha
dec
jl
jl
divl
test
cli
mov
xchg
ret
jl
pusha
jno
test
adcl
and
lock
sub
mov
xor
push
add
testl
rcl
push
push
scas
fs
inc
sar
inc
jnp
out
movsl
movsb
cmp
ja
pop
imul
xorl
mov
and
cs
adc
fistl
pusha
addb
mov
out
bnd
dec
ret
pusha
scas
test
xchg
fldz
jne
mov
jmp
mov
jp
pop
push
test
xchg
in
scas
mov
mov
cmp
test
mov
pop
dec
inc
jnp
fisttpl
gs
ja
fists
push
mov
sahf
mov
out
and
jg
pop
xor
sbb
cwtl
test
loopne
sahf
mov
push
jbe
adc
mov
mov
mov
lret
call
repz
loope
cmp
pop
stc
sub
mov
fstpl
and
xor
mov
pop
push
xchg
mov
jo
sub
cli
movsl
pusha
mov
pmaddwd
xchg
pop
pop
int
scas
sbb
mov
mov
repz
mov
scas
js
aas
sub
mov
xorb
lret
pop
data16
mov
pop
and
xchg
in
pop
push
xchg
out
or
push
inc
rcrl
lret
jl
inc
aad
jae
fisubrs
push
adc
add
cmp
cmp
pop
inc
sub
insb
mov
push
out
jbe
jecxz
mov
push
or
cmc
mov
aad
mov
ror
mov
jne
movsl
xor
pop
pushf
movsb
mov
arpl
pop
xchg
jp
lock
mov
test
jno
popa
stc
jmp
imul
fsubl
lods
cmp
cmpsl
mov
test
cs
or
mov
fcos
sbb
fbld
imul
push
lock
and
mov
gs
pop
daa
sub
mov
pusha
mov
cmpsl
sti
cmp
or
and
test
cwtl
mov
add
out
xor
testl
lret
fdivl
or
cmpsb
aad
pop
push
adc
add
xor
xchg
push
add
or
dec
shlb
testb
jl
mov
fwait
mov
pop
dec
mov
sub
pop
push
cltd
sub
pop
mov
dec
mov
jecxz
inc
dec
dec
dec
cmp
ds
dec
in
mov
or
pusha
push
sbb
subb
jecxz
jno
cmp
fisttps
test
ja
jns
cld
out
sarb
push
mov
xor
push
push
pop
mov
or
inc
insl
jb
loopne
and
jecxz
jmp
push
push
test
cmpsb
or
fiadds
sub
push
shrl
fdivrl
dec
pop
xor
outsl
stos
lock
xor
cmp
pop
cmp
add
in
xchg
daa
push
pusha
mov
add
repz
dec
lcall
aas
push
add
pop
clc
adc
push
xor
jb
in
fstl
xchg
xchg
push
xlat
fadds
mov
pop
cltd
lock
insb
test
jg
jb
mov
push
adc
movsl
or
mov
jo
mov
imul
mov
loop
xor
pusha
cmp
mov
out
cmp
addl
mov
fsub
lds
dec
cmpsb
xlat
movsl
jb
pop
stc
pusha
or
ljmp
pop
rcrl
add
out
jmp
add
shll
imul
mov
loopne
adc
leave
addw
pop
pop
jp
jl
sub
out
xor
shrl
and
and
std
xchg
movsl
cld
inc
aad
sub
in
sti
inc
inc
mov
pop
mov
cs
bound
pop
das
push
lcall
dec
cmp
aad
dec
mov
rcrb
mov
pop
in
cli
fs
pop
mov
or
negl
inc
push
mov
pusha
mov
cmp
jp
nop
incl
bound
out
js
test
jmp
push
lods
dec
mov
jge
into
out
add
pop
pop
rcr
lcall
pop
gs
jg
subb
pusha
xchg
std
insl
xchg
push
jp
pop
lret
cmpb
into
rclb
jge
sbb
aad
negb
pop
xor
dec
mov
inc
pop
mov
lahf
loope
test
or
mov
and
je
sti
inc
pop
cmc
mov
ja
fildll
jmp
jp
jnp
lret
cmpsl
into
sbb
popa
leave
xor
pop
out
dec
jg
mov
adc
pusha
sbb
rcrl
mov
shll
and
sti
adc
ss
ds
mov
inc
mov
mov
dec
in
sbb
ss
pop
sti
pop
mov
xchg
cltd
mov
popa
cmp
rol
imul
out
push
xor
mov
pop
mov
push
xor
cli
mov
testl
cltd
add
jge
stc
out
stos
sbb
mov
rol
negl
inc
sbb
add
pop
add
cmpsl
std
sub
adc
in
jl
nop
jnp
addr16
dec
ss
popa
icebp
xchg
into
sbb
imul
out
int3
or
adc
lea
inc
ret
and
sub
por
lock
or
lods
lea
xor
inc
pop
sbb
xchg
cmp
pop
lahf
inc
imul
outsb
mov
iret
lret
je
leave
out
cmp
mov
push
fimull
pop
inc
inc
icebp
imul
imul
stc
cmc
notl
mov
aaa
popa
out
xor
pop
or
das
jmp
in
sbb
jne
cmpsl
dec
add
out
inc
sbb
loopne
sahf
mov
rcrl
fsubl
insb
mov
mov
adc
push
gs
mov
ucomiss
in
popl
nop
nop
movsb
repz
cmc
push
aam
add
xchg
mov
dec
adc
pusha
pop
or
mov
cs
sbb
jne
scas
sub
aam
push
mov
inc
andl
lock
out
ret
pusha
daa
inc
out
lods
jns
and
ss
movl
and
inc
mov
mov
jl
inc
mov
out
roll
iret
jnp
inc
xchg
adc
mov
out
aaa
adc
or
bound
or
pop
aaa
fsubrl
mov
pop
pusha
dec
dec
sub
cmpsb
imul
or
aam
pop
jnp
jb
fisubrl
fnstenv
icebp
mov
sbb
jnp
jmp
cmp
js
fidivrl
testl
mov
gs
out
xchg
push
mov
lods
sbbb
cmc
enter
outsl
lahf
stos
int3
or
decb
in
dec
shr
jle
pop
jecxz
lods
mov
push
bound
sbb
cs
mov
scas
and
mov
mov
sub
xor
or
xchg
jmp
mov
movsl
scas
mov
mov
pop
inc
cmp
out
sti
sub
push
sub
sub
js
out
adc
sbb
inc
addr16
sbb
into
mov
xchg
xor
cmpl
mov
xchg
push
mov
cmp
jg
jl
pop
push
hlt
dec
and
mov
push
or
fsts
jl
add
push
xchg
mov
jg
push
adc
repz
mov
mov
inc
xchg
adcb
ret
xor
xor
dec
shll
pop
movsl
add
sub
sub
xor
adc
mov
stos
xor
push
cli
fistpl
lds
xchg
mov
cwtl
fcoml
decl
ss
and
jecxz
leave
lods
lret
and
pop
mov
shll
les
push
ja
aas
scas
rolb
mov
aas
adc
push
add
lret
xlat
xchg
mov
rcrb
mov
aaa
inc
and
loop
repnz
pusha
and
test
out
xchg
shll
lds
ljmp
and
std
lock
lret
addl
mov
push
dec
pop
ja
sarb
push
rcr
dec
adc
xchg
hlt
push
cmc
xchg
movsb
push
cltd
popf
loopne
loopne
fstps
and
movsb
gs
xor
sub
and
in
call
orl
lret
les
callw
test
into
adc
adcl
loop
shll
mov
mov
js
out
jle
cs
adc
add
xor
ror
and
sbb
xchg
iret
insb
or
jmp
xor
cmpsl
push
mov
ja
lods
pusha
sub
mov
loope
mov
pop
dec
mov
jb
push
mov
xor
and
jb
adc
imul
pop
ss
out
push
mov
and
clc
scas
int
ss
pop
lahf
or
aad
mov
xchg
jecxz
pop
push
pusha
ret
or
pushl
push
lret
insb
ficompl
push
jae
sub
mov
mov
push
rorl
cmp
test
add
cltd
xor
dec
fmul
out
mov
outsb
inc
out
and
pushf
aas
in
sahf
popa
vrsqrtss
repnz
int
lahf
inc
pop
cmp
adc
mov
jg
dec
scas
stos
movsl
mov
mov
stc
ljmp
aas
fwait
adc
or
push
xor
xorb
and
add
js
add
jle
lcall
or
stc
lcall
addb
pop
cmp
aas
jg
outsb
int3
jb
imul
push
aad
stc
jnp
push
jae
sbbb
nop
mov
stos
sti
inc
out
cmpb
imul
xlat
and
stos
pushf
add
sub
outsl
dec
fwait
fs
stc
adc
inc
xchg
shrb
imul
add
mov
repz
push
add
scas
pusha
mov
inc
mov
nop
mov
mov
and
ljmp
pop
push
mov
pusha
adc
popa
mov
lds
jge
pop
pop
stos
xchg
scas
leave
fs
xor
subl
pop
test
push
sbb
mov
cmpsl
pop
push
inc
cmpsl
imull
pop
dec
mov
je
out
mov
dec
aaa
dec
xor
jo
pop
mov
bound
add
xor
scas
int
into
sub
jge
mov
scas
or
mov
inc
imul
pop
inc
daa
cmp
xchg
inc
mov
mov
adc
pop
out
ljmp
repz
mov
test
xor
mov
shrd
mov
outsb
xor
xchg
jmp
nop
mov
mov
xchg
jae
pop
push
lock
xchg
add
dec
popa
xor
add
lds
iret
and
aaa
xchg
jne
pop
shll
xchg
std
gs
lock
dec
adc
subl
repnz
loopne
leave
ret
pop
imul
mov
mov
mov
pop
imul
insl
jo
scas
loop
inc
sub
sub
movsl
jp
and
push
out
das
cmpsb
enter
and
mov
stos
dec
adc
lahf
jb
enter
divl
fistps
pop
in
loope
mov
movlps
add
insb
lret
out
sub
jg
shlb
sbb
fists
push
sub
inc
pop
cmp
or
inc
sbb
cmpsb
sbb
pop
add
sbb
daa
push
push
rolb
popa
cmp
dec
add
fs
aam
mov
mov
fstpt
inc
icebp
jo
inc
push
stos
cmp
ret
mov
mov
sbb
gs
iret
mov
stos
iret
mov
rorb
int
adc
dec
and
aaa
dec
cmpsl
in
adc
dec
xchg
daa
mov
pop
push
fwait
or
js
mov
jp
fwait
in
sub
cld
inc
cmp
sahf
xchg
es
andl
dec
mov
flds
jns
add
mov
pop
out
jl
into
adc
mov
push
mov
fisubs
sub
fucomip
add
jecxz
idivb
imul
and
jae
lds
ljmp
jno
xchg
rol
cs
loopnew
cmp
pop
cmp
add
fldt
out
pusha
movsl
dec
fiaddl
cmp
mov
mov
out
adc
sti
mov
out
fildll
adc
decb
push
sub
mov
fadds
xchg
adc
mov
jmp
out
subb
lret
mov
adcl
lahf
les
adc
clc
data16
lahf
mov
stc
cmp
fucomp
and
dec
mov
call
xor
cmp
inc
mov
out
iret
cli
lods
mov
mov
push
mov
sbb
popa
lret
je
mov
push
imull
addr16
insl
jle
mov
popa
cmp
sbb
inc
xchg
sub
lods
loopne
sahf
jae
outsl
pop
jns
jbe
in
scas
cmp
aad
xchg
mov
arpl
adc
ret
pop
dec
push
cmp
dec
mov
push
inc
test
push
mov
fsubrs
movsl
xlat
mov
sti
outsb
xchg
ja
xor
sbb
jmp
dec
adc
mov
mov
pusha
outsb
subb
imul
mov
popf
fcomip
mov
rolb
jp
adc
pop
dec
inc
mov
aad
mov
out
icebp
hlt
add
adc
cld
xor
sbb
adc
and
add
push
inc
adc
lahf
adc
out
xlat
fstpl
mov
pop
sti
out
aad
push
les
imul
stos
jmp
xchg
lods
mov
incl
and
inc
es
xchg
xor
pop
icebp
jae
jecxz
pop
fwait
mov
sbb
push
jnp
es
popa
cmpsl
cs
pop
ret
push
jnp
sub
data16
xor
stos
pop
mov
stos
sbb
je
pusha
adc
push
popa
cmp
mov
lahf
inc
stos
dec
inc
cmp
mov
inc
jb
sbbb
enter
or
notl
shll
insb
mov
bound
mov
sti
lock
xchg
fsub
leave
add
jno
mov
aad
cmpsb
mov
add
rcrb
sub
sub
or
insb
xlat
scas
cmpsb
push
sub
neg
adc
lret
fidivrl
lcall
in
pop
inc
cld
fnsave
popa
jmpw
push
fimull
mov
jmp
mov
push
out
gs
clc
popf
and
cwtl
mov
cmp
jnp
insl
in
in
pop
negb
jno
jo
mov
je
pop
aad
loop
pop
pushf
ljmp
pusha
jo
les
out
jp
dec
in
in
insl
andb
push
jbe
ja
out
mov
mov
test
negb
insl
add
aad
outsb
fmul
call
lea
int
popa
push
xor
ret
pusha
xor
cwtl
rorb
add
lods
insb
mov
cmp
pop
jae
sub
mov
loop
pop
mov
rcrb
lahf
scas
push
cmp
sub
imul
cld
push
jne
pop
mov
imul
or
cmp
pop
mov
les
dec
adc
sbb
test
or
push
and
aad
mov
inc
pusha
out
sbb
jg
push
jo
jmp
or
repnz
and
sahf
xchg
pop
inc
mov
gs
mov
jecxz
jb
cmc
ret
shr
cmc
jp
popa
adc
adc
daa
stc
out
ja
mov
inc
clc
popa
mov
data16
outsl
pop
xchg
ret
inc
dec
jmp
adc
rolb
sti
mov
je
aad
dec
out
dec
cltd
inc
xor
mov
cmp
stos
movd
dec
jb
inc
push
sbb
sub
mov
imul
xchg
mul
idivb
stos
inc
adc
lret
pop
clc
xor
paddq
popa
popa
inc
enter
fldt
adc
pusha
daa
pop
adc
and
dec
icebp
dec
push
out
repnz
or
dec
in
mov
lods
adc
mov
pop
xchg
cmpsb
mull
mov
loop
push
call
or
fwait
js
loope
mov
dec
out
sub
shl
sbb
xor
push
sbb
and
xor
sub
pop
shlb
icebp
add
cmpsl
push
sub
adc
pop
lret
dec
add
sub
pusha
jns
fwait
das
les
jnp
out
imull
push
icebp
movsb
ljmp
sbb
out
push
gs
sbb
inc
xchg
pusha
xchg
fcom
pop
stos
rcrl
jmp
push
xchg
and
inc
call
adc
xchg
mov
cmpl
pusha
stc
xlat
ljmp
xchg
pusha
pop
or
mov
mov
adc
mov
lods
mov
lds
xchg
scas
sub
mov
jbe
into
cmpsb
pop
test
jb
jnp
nop
scas
mov
pop
icebp
pop
sbb
sub
push
pop
stos
adc
stc
and
je
jge
mov
out
inc
or
sbb
sub
stc
popf
je
movsw
mov
cmp
xor
jl
push
push
call
popf
bound
fs
mov
pop
ret
scas
pop
cmp
xor
mov
in
out
test
ss
scas
mov
jp
or
imul
add
mov
call
pusha
fcoml
faddl
into
jmp
fsubs
inc
mov
loopne
xchg
shll
sbb
outsb
pop
data16
lods
sub
cmp
cwtl
xchg
jbe
pop
fdiv
add
and
popa
xchg
ret
call
lods
out
xchg
cmp
aaa
mov
stos
repz
in
fmul
pop
std
nop
add
sbbb
movsl
push
inc
dec
mov
test
xchg
dec
xchg
cmpsl
add
popa
ljmp
pop
fmull
adc
or
lds
lds
sub
daa
lods
cmp
cmp
stc
sub
mov
jae
imul
inc
xor
inc
ficomps
int3
inc
pushf
cmp
mov
sti
mov
out
mov
lock
stos
out
bnd
pop
cmp
cltd
shll
inc
test
out
mov
ret
call
aaa
movsb
lahf
mov
dec
outsb
xor
shr
outsl
adc
out
mov
mov
xchg
inc
dec
repnz
rcrb
add
dec
popa
jb
ret
sub
out
mov
push
clc
test
pusha
sbb
jl
fsubs
gs
xor
pusha
or
cmpsb
repnz
outsb
mov
mov
bnd
insl
mov
testl
test
vcvtsd2si
add
push
or
mov
testb
pusha
jl
fstps
push
cmp
pop
rorl
sbbb
imulb
pop
mov
adc
sti
insl
iret
and
jmp
out
stc
and
pop
out
loop
and
cmpsb
pushl
add
lcall
fmuls
ret
mov
xchg
scas
scas
movsl
lods
scas
inc
out
mov
loopne
cmpsl
mov
cmpsl
insl
adc
sub
lds
test
pusha
or
jg
push
adc
sub
dec
cmpsl
push
sti
jp
movsb
xor
sti
cmp
sub
jns
ficompl
jne
daa
sbb
cmp
jg
dec
sub
call
sbb
faddl
jo
addl
or
in
xor
daa
cmpl
lret
sbb
push
inc
popa
mov
inc
pop
fistl
inc
popf
sbb
push
out
xor
lds
cmp
add
imul
jns
add
sbb
push
popa
jo
xchg
inc
or
out
rcrl
dec
adc
mov
xchg
xor
out
jae
jp
mov
push
inc
sub
fsubrl
fidivrs
pop
imul
int
add
push
add
pusha
and
je
cmp
pop
xlat
or
pop
push
mov
add
bound
add
adc
mov
xor
ja
adc
out
int3
test
xor
mov
inc
sub
jle
pop
pop
rcl
xchg
lods
js
sub
mov
xchg
testl
inc
mov
aas
lods
cs
adc
fs
scas
pusha
jmp
mov
negl
cmpsl
cmpsl
out
test
test
jge
xchg
fistpl
aas
aaa
dec
inc
fsub
testl
xchg
inc
push
dec
adc
pop
pop
jp
js
testl
int3
je
movsb
out
or
out
pop
mov
pusha
inc
aad
andl
lret
movsb
xchg
aas
mov
out
and
fwait
shrl
sbb
xor
xchg
cld
jl
fnstsw
sbb
xor
out
adc
scas
push
je
and
cs
push
inc
mov
popa
push
mov
and
les
cmp
test
sub
mov
gs
inc
mov
aas
mov
scas
pop
test
mov
mov
mov
xorb
mov
and
mov
pusha
icebp
push
ret
jecxz
shlb
pop
out
test
adc
loope
sub
mov
dec
outsb
dec
jns
je
out
sbbw
loope
jbe
mov
pop
rorb
dec
arpl
lea
movsb
xor
outsl
pop
gs
or
mov
pop
scas
cmc
cmp
addr16
pop
push
push
in
inc
out
lcall
push
lds
popa
dec
or
pop
and
insb
fcompl
pop
mov
fnstcw
push
movsb
popf
ljmp
test
loopne
ja
out
pop
xorb
pop
clc
xchg
mov
das
mov
lret
fprem1
mov
push
es
mov
mov
cltd
sub
loopne
adc
pop
pusha
cwtl
mov
push
xor
pop
inc
shrb
and
adc
out
mov
mov
mov
rcr
pop
outsb
es
mov
mov
jns
jle
pusha
jno
jno
aas
xchg
or
stos
pop
inc
leave
push
lods
inc
test
faddl
push
shlb
dec
test
cltd
call
insl
out
lahf
fwait
testl
push
jle
out
mov
ja
cmp
xchg
mov
mov
loope
repnz
jge
xchg
mov
aam
xchg
nop
mov
xor
fmuls
pushf
out
mov
cli
add
insl
fs
rclb
lock
and
adc
les
or
loopne
sarl
push
mov
cmpsb
ljmp
int3
lds
jae
add
mov
pop
adc
sbbl
lods
icebp
dec
icebp
outsb
mov
sbb
inc
rcl
jns
push
jno
cltd
scas
in
dec
mov
mov
out
and
nop
mov
inc
in
ficoms
pop
outsl
pop
cmp
movsb
idivl
push
dec
pusha
in
push
inc
test
sbb
outsb
daa
xchg
call
lcall
fwait
or
xchg
insl
lret
test
out
cmc
pop
pop
mov
hlt
mov
sub
ss
into
or
sub
les
dec
push
loope
shlb
push
lods
in
pop
adc
ja
jle
pop
dec
sbb
mov
or
mov
outsl
and
es
mov
dec
xchg
scas
pop
adc
push
lock
into
jl
aaa
sbb
cmp
scas
push
daa
cs
cmp
jmp
mov
mov
push
jle
jns
jns
mov
sub
add
stc
sbb
popf
fisubrl
push
pop
clc
aas
int
test
dec
jne
xor
into
or
push
adc
movsl
mov
add
enter
ret
pusha
test
jb
sub
push
sub
movsl
andb
mov
push
inc
das
or
rcrb
insl
frstor
mov
popf
mov
inc
out
mov
pop
mov
jle
pusha
stc
inc
or
adc
out
push
cmp
mov
cmpsl
rolb
daa
pop
es
sub
mov
ds
shrb
mov
ss
les
xchg
cmp
lock
sub
mov
mov
jnp
inc
or
pop
outsb
jns
enter
pop
pop
hlt
fbstp
mov
pusha
cltd
psrlw
mov
stc
sti
mov
fimuls
mov
xchg
das
subl
out
pop
out
jnp
add
xchg
out
jbe
movsb
push
xchg
stos
mov
lods
cltd
pop
xchg
inc
fmull
test
enter
fadds
sahf
inc
in
pop
aam
cwtl
popa
push
cli
aaa
addr16
loop
in
mov
mov
fcomi
clc
xchg
and
cmpsl
sbbb
push
aaa
mov
jno
mov
push
jecxz
mov
sar
in
pop
mov
std
fs
cmpsb
push
loopne
insl
inc
div
mov
out
stc
add
aas
incb
jno
test
je
call
int
addl
adcl
movsl
mov
fsubr
adc
cmpsl
addr16
fcomps
sbb
arpl
pop
xor
xor
and
andl
or
xchg
in
or
mov
mov
and
pusha
xchg
idivl
inc
and
ret
out
in
loopne
xor
andl
fdiv
adc
les
add
mov
adc
cmpsb
cli
out
xor
sub
push
iret
dec
dec
mov
repz
popa
sbb
cmc
or
xor
add
pop
aam
inc
sbb
fcomps
stos
inc
adc
xor
mov
cmp
daa
icebp
mov
std
jge
inc
push
popf
fisubrl
pop
xor
in
imul
daa
add
mov
test
push
mov
add
push
enter
mov
sbbb
out
jmp
xchg
push
jg
jmp
pause
enter
pop
sub
sbb
stc
mov
push
xor
jmp
lock
test
xor
mov
push
or
ret
out
stos
cmp
enter
lods
popa
push
pop
pop
fmul
out
icebp
cld
pop
cs
dec
ljmp
pop
rcl
repz
mov
mov
gs
jl
movsb
push
push
xor
out
imul
fwait
jae
and
xchg
add
sbb
mov
pop
sub
pop
fidivs
cmp
dec
mov
push
sbb
jno
incl
sbb
pop
insb
inc
push
mov
push
xchg
mov
rcll
mov
test
cs
mov
cmp
outsb
jbe
test
ja
ja
inc
sub
lds
cmpsb
fidivrs
rcr
popa
cltd
add
inc
mulb
out
sbb
loopne
outsb
and
jno
mov
loopne
push
movsb
imul
scas
add
ret
rcll
cld
cmp
je
sub
lea
jp
add
xlat
mov
pop
aaa
xchg
hlt
cmp
call
inc
out
daa
xchg
dec
popa
mov
lock
in
out
hlt
add
mov
test
lret
pop
cmp
fstpt
push
rcl
pusha
jl
cmp
sbb
out
push
imul
test
push
mov
dec
xchg
mov
push
pop
insl
xchg
shll
outsb
scas
pusha
jp
push
mov
jno
out
mov
add
jecxz
jns
lcall
sbb
jo
add
ret
push
adc
pusha
mov
lods
out
pop
pushf
je
mov
aad
jge
outsb
mov
ds
or
cs
mov
push
pusha
or
jnp
cmc
xchg
xor
fcmovb
jg
cmp
xor
cmpsb
fldenv
pop
aaa
mov
movups
sbb
mov
mov
icebp
insl
dec
fsubs
lret
fistl
sahf
or
icebp
lcall
pop
adc
daa
jmp
xchg
addr16
and
pop
pusha
inc
punpckldq
jp
jmp
out
or
aam
ds
pop
in
sub
imul
mov
out
rorl
inc
out
cwtl
pusha
xor
adc
out
or
and
push
mov
jbe
push
fiaddl
repnz
mov
imul
push
add
push
out
andl
sub
pop
cs
rdtsc
les
push
sub
inc
fwait
mov
jmp
addr16
pop
ja
pusha
push
aaa
fwait
or
mov
cmp
sub
test
out
adc
ret
cmpsl
call
mov
ficompl
fcoml
movsb
dec
popa
adc
push
sub
ja
xlat
jecxz
out
fildl
push
enter
jge
jne
pop
mov
insb
testl
inc
inc
out
and
pop
test
mov
mov
push
lods
loopne
cs
inc
push
aam
mov
add
into
shrl
adc
xor
dec
loopne
xor
out
pop
enter
mov
adc
rcll
clc
stos
out
jl
and
inc
out
pop
mov
bound
in
xchg
pop
mov
shll
pop
mov
in
add
push
xor
out
test
xor
adc
xchg
shll
or
push
dec
pop
mov
fildl
xchg
idivl
sbb
call
lods
cmp
in
test
mov
xchg
add
mov
bound
pop
adc
les
mov
popa
xor
cmp
out
lcall
sbb
leave
int3
and
out
add
mov
shll
es
pop
push
mov
ljmp
lock
shr
cmp
test
js
pop
dec
push
lods
pop
test
xchg
ss
ret
pop
test
daa
mov
das
sbb
fstpl
mov
outsl
pop
push
sbb
shlb
and
scas
mov
push
push
and
mov
jg
pusha
addr16
lahf
sbb
mov
mov
cmpl
mov
test
lock
mov
fcmove
cmp
xchg
or
mov
mov
fwait
in
pusha
or
pusha
divb
shlb
mov
inc
mov
xchg
cmp
inc
cwtl
sahf
inc
incb
aad
pop
mov
jne
xchg
in
pop
shll
adc
adc
gs
out
cmp
les
push
pop
fstps
pop
sub
dec
mul
xchg
imul
out
imulb
adc
pop
fcomps
adc
test
arpl
add
icebp
pusha
je
jmp
scas
cmpb
cwtl
pop
jl,pn
inc
pop
sub
popa
data16
leave
jmp
adc
cwtl
pop
and
push
pop
mov
pop
iret
cltd
fs
jb
in
addr16
mov
xor
out
dec
mov
ret
data16
fidivl
mov
nop
pop
idiv
popf
filds
loope
pop
add
and
data16
in
cli
jae
aam
push
andb
insl
aaa
adc
mov
mov
sub
ss
fldenv
cmp
mov
inc
pop
inc
mov
sub
inc
pop
xor
sbb
sbb
out
mov
divb
lahf
sbb
pop
js
mov
pusha
mov
pop
mov
inc
ljmp
das
sbb
or
sbbl
push
mov
push
lret
sahf
rorb
dec
in
xchg
mov
add
mov
imul
mov
jns
popf
add
and
imul
fisubrs
ds
lahf
lcall
jno
in
cwtl
push
pop
insb
xor
mov
pop
imul
cmp
subl
aam
mov
movsb
leave
and
out
push
jmp
dec
jnp
popa
dec
xorl
aam
jo
adc
pop
cmp
cmp
dec
cli
mov
pop
jbe
dec
mov
aas
gs
pop
shrl
push
mov
pop
mov
xchg
push
je
sbb
and
mov
iret
mov
ret
push
les
pop
pushf
es
mov
enter
and
stos
movsb
mov
addr16
cwtl
push
push
inc
pop
in
xchg
neg
ja
and
shl
push
xor
mov
pop
mov
sub
lcall
pop
sub
out
sbb
stos
dec
cmpsl
outsb
jne
jp
inc
addr16
jno
or
iret
dec
inc
mov
fstp
sahf
pop
xchg
loopne
clc
pop
jge
dec
jb
sbb
mov
in
fmuls
test
out
out
lods
loopne
dec
pusha
out
outsb
push
dec
ljmp
sahf
fmulp
mov
out
mov
sub
mov
aaa
int3
pusha
mov
sub
es
loope
jo
dec
notb
pop
movsl
jmp
ret
mov
faddl
pop
mov
in
pusha
dec
mov
fisttpl
sub
lods
repnz
lcall
shll
adc
xor
adc
jnp
push
test
mov
out
or
int
insb
lahf
xor
cmpsl
pop
push
stos
pop
call
and
push
ds
and
mov
push
xchg
movsl
out
jno
jp
push
in
pop
ljmp
push
in
pop
imul
rol
mov
sti
cmp
sbb
push
push
or
fs
test
and
sbb
or
pop
or
mov
lods
fsubr
jle
dec
negl
mov
xlat
arpl
sbb
or
adc
fs
out
mov
xchg
loopne
mov
enter
lods
jecxz
pop
arpl
sbb
cltd
and
shrb
shrl
cmp
fisubrs
and
mov
out
nop
testl
movsb
inc
add
aas
repz
xchg
aad
int
pusha
gs
sbb
inc
or
xchg
cmp
lea
pop
xor
pusha
popa
pushl
dec
aas
dec
push
sub
imul
mov
in
daa
inc
push
pop
sbb
lcall
mov
movsl
leave
repz
and
icebp
std
and
rol
cs
jnp
cmp
or
mov
or
pop
fdivrs
or
repz
and
pop
mov
add
xchg
mov
fldenv
push
fcmovne
jmp
dec
leave
fsubrs
mov
pusha
mov
je
clc
out
imul
mov
mov
pop
mov
addr16
out
push
or
fidivrs
popf
jns
xchg
xchg
icebp
cwtl
jne
lret
xchg
add
pop
adc
scas
or
xchg
jae
lcall
mov
dec
loop
or
shll
cmp
shlb
jmp
sbb
xchg
xchg
cld
mov
lret
cmp
je
out
loopne
sub
stos
arpl
movsb
shlb
push
mov
sub
divl
and
scas
pusha
stos
mov
cld
jge
xchg
mov
sub
mov
mov
jae
out
out
jns
pusha
lock
cmp
cmpl
lret
xor
cltd
mov
push
loope
out
mov
cld
and
sarl
mov
sbb
xchg
fidivl
xchg
jae
outsb
out
jo
sbb
xor
scas
sbb
xorb
mov
movsl
fstl
test
jl
arpl
sub
ret
das
out
in
jno
xchg
scas
sub
push
adc
popf
add
pusha
mov
lods
inc
ja
jge
mov
sub
adc
mov
jl
movsl
lea
pushl
and
hlt
cmc
and
les
xchg
cmp
cmp
and
mov
out
nop
sub
fcompl
sub
jb
jno
pop
cmp
es
push
pop
inc
andl
jns
add
pop
sahf
out
test
lock
pop
add
xchg
rep
mov
fldcw
pop
mov
sub
hlt
bnd
mov
jg
aas
pop
dec
jg
cmp
and
mov
or
into
fwait
mov
outsb
ficomps
rcr
pushl
pop
aaa
stos
out
addr16
in
inc
ficoms
mov
mov
xchg
xchg
and
xchg
xchg
ret
les
inc
sbb
inc
sub
andl
out
in
mov
dec
jno
arpl
cmp
mov
and
jmp
enter
jecxz
les
lahf
out
lahf
jecxz
cmp
inc
data16
xchg
outsl
out
mov
mov
subps
nop
les
push
lods
mov
jbe
fidivrl
into
sbb
xor
pusha
pop
sub
loopne
dec
sub
out
pop
sbb
pusha
pop
add
mov
inc
jo
jnp
mov
cmp
push
mov
filds
cmpsb
mov
xor
pusha
sub
sub
pusha
mov
dec
mov
mov
lahf
cwtl
iret
inc
push
movsl
and
mov
mov
mov
sub
mov
lods
cs
pop
inc
popa
mov
pop
push
sahf
push
daa
add
sbb
pop
cltd
inc
ljmp
imul
add
out
arpl
arpl
jno
push
xlat
sub
add
mov
out
stc
popf
repnz
push
fwait
adc
stos
jns
and
rcr
pusha
mov
decl
and
out
and
xchg
scas
jle
arpl
jge
mov
enter
imul
pop
in
push
cmpsl
out
lea
pusha
imul
sub
mov
out
cld
fsubr
in
fwait
mov
xchg
adcl
sub
mov
popa
dec
cmp
nop
mov
insl
adc
data16
out
pusha
mov
inc
ljmp
cltd
mov
lds
xchg
dec
jne
int
sbb
pusha
cmp
or
ljmp
movsb
pop
nop
loop
inc
cmp
push
sbb
in
or
sahf
ja
je
and
fs
scas
out
push
js
outsl
movsl
push
in
icebp
xor
jmp
and
rclb
into
jne
mov
and
adc
popa
inc
int3
jle
dec
inc
fisubs
xchg
add
dec
repnz
xchg
pop
mov
bound
and
pop
add
ss
repz
add
sahf
cmp
mov
xor
mov
clc
pusha
movsl
jp
mov
inc
imul
sbb
out
mov
cli
daa
fxch
fimull
in
cmp
mov
out
je
repnz
ljmp
jp
out
mulb
jp
and
cmp
xchg
xor
add
cmp
pusha
stos
aad
push
je
popa
adc
mov
jns
mov
aad
cmp
mov
jecxz
in
jp
and
sub
popa
dec
movsl
fbld
gs
out
orl
sub
and
jg
fcompl
jo
push
ret
add
ds
dec
cwtl
xor
fsubl
add
mov
jo
pusha
mov
pop
cld
cmc
sub
xchg
mov
mov
cmp
sub
in
pop
aad
outsb
mov
xchg
pop
mov
dec
adc
jle
xchg
push
pop
shlb
mov
mov
pusha
cltd
sti
mov
in
push
mov
orb
mov
outsb
test
pop
pop
jecxz
orl
pop
in
and
fwait
mov
lods
pop
fldenv
test
call
push
inc
and
out
or
in
xor
gs
xor
test
mov
cmp
jbe
push
lcall
pop
sub
push
test
mov
ljmp
pop
sub
scas
mov
lods
shll
cmp
or
sets
ljmp
ffree
pop
add
xor
cs
scas
ret
dec
int3
mov
mov
rcrl
test
push
mov
mov
ja
vpunpcklbw
jnp
pushf
sahf
cmp
repnz
or
mov
scas
pop
or
pop
xchg
pusha
mov
xchg
lods
and
push
stos
mov
mov
sbbl
mov
cld
dec
shll
pusha
jl
jp
pop
cs
mov
xchg
push
out
scas
pop
outsb
xchg
lds
loopne
push
inc
mov
xor
test
lcall
mov
inc
mov
fstps
shll
int3
xchg
data16
push
fsubrl
push
jp
xchg
xchg
mov
mov
out
sub
ja
mov
rcll
ljmp
xchg
cmpsl
xchg
repnz
shr
and
in
dec
mov
mov
fisubs
sar
adc
test
pop
mov
es
add
nop
mov
lock
lea
nop
xchg
dec
ljmp
arpl
cmp
push
push
psllq
xchg
jmp
imul
jnp
bound
push
mov
loopne
popa
adc
pop
jle
jo
jne
sarb
mov
pop
push
inc
mov
ja
nop
dec
arpl
mov
cwtl
pop
mov
xor
hlt
add
pop
lods
pusha
mov
and
mov
mov
sarb
or
das
and
push
pusha
les
or
push
dec
ss
push
dec
xorl
scas
daa
push
inc
aaa
push
or
sub
mov
inc
push
jns
jle
jae
dec
les
mov
fxch
cmc
inc
push
inc
push
fwait
fwait
mov
xor
pushf
xor
or
out
dec
lret
les
sub
mov
in
jp
jge
jnp
out
loope
gs
into
mov
jns,pn
dec
cmp
cmp
test
cmc
fwait
push
add
pusha
popf
fcomps
cmc
jno
ljmp
pop
sbb
es
mov
dec
loope
data16
mov
sub
jmp
dec
pop
fiadds
mov
sub
and
adc
mov
pop
dec
into
jl
pusha
out
aaa
jo
aaa
imul
fldenv
dec
mov
xchg
mov
lds
mov
in
pusha
das
mov
sbb
add
add
cs
add
mov
or
add
lods
inc
dec
std
xlat
out
push
push
out
mov
lcall
test
addr16
xchg
dec
pop
fdivs
loop
popa
iret
stos
push
inc
std
push
add
jmp
xor
das
mov
cs
lods
xlat
cmp
mov
bound
xchg
add
call
in
xor
test
mov
fs
inc
add
out
orl
mov
in
pop
pop
jae
aam
inc
int
pop
mov
mov
scas
std
sub
mov
pop
mov
out
int
adc
pusha
xchg
and
add
idivl
out
inc
xor
dec
clc
movsl
pusha
xchg
nop
aas
scas
outsl
push
xor
push
cmpsb
and
pusha
dec
repz
and
call
int3
lock
add
dec
jo
ss
or
xor
dec
xor
inc
popa
mov
and
pop
jle
add
inc
into
pop
mov
movsb
cmpsl
iret
or
push
test
pop
addr16
fsubp
mov
mov
jne
xor
mov
jp
sbb
xlat
sahf
call
cltd
mov
dec
cmp
in
aad
adc
into
mov
stos
jp
icebp
dec
cmp
setg
or
movsb
outsl
dec
test
xchg
add
sub
js
loopne
mov
sarl
push
and
lock
imul
inc
mov
push
pushf
pop
dec
sahf
xchg
jno
push
or
xor
jb
mov
mov
in
pop
and
add
mov
mov
pop
jo
les
mov
sahf
scas
movsb
movsb
jp
es
mov
and
dec
clc
lcall
ret
loope
pop
mov
dec
dec
mov
js
bound
xchg
out
gs
pop
nop
lock
inc
mov
pop
enter
adc
fistpl
lock
inc
xchg
inc
lock
xlat
rol
cmpb
imul
js
repnz
cmp
incl
and
test
test
push
and
out
nop
fdivr
mov
fcoml
xor
xchg
in
nop
cmp
jmp
mov
movsl
inc
jge
pusha
or
xor
mov
fbld
sbb
popa
inc
in
pop
sub
aad
fbld
adc
out
sbb
xor
aas
cmp
pop
dec
add
lret
dec
lcall
rcl
mov
in
sbb
js
popa
push
je
neg
stos
scas
inc
ret
das
out
xlat
jns
add
lcall
stc
jo
add
mov
pop
add
xchg
mov
jb
xchg
sub
adc
pop
cmp
shlw
mov
jne
arpl
gs
ret
not
dec
mov
cld
test
pop
out
inc
lods
mov
sbb
xchg
daa
lock
iret
mov
std
inc
imul
mov
mov
scas
jne
outsl
inc
popa
sbb
lret
dec
dec
icebp
mov
cs
stos
mov
xchg
xchg
das
and
sbb
dec
aad
cmp
pusha
mov
insl
add
rorl
test
in
cmp
push
outsl
cmpsb
push
mov
mov
pushf
xor
jbe
cmp
fnstcw
test
mov
xchg
scas
and
ficoms
push
xlat
mov
mov
or
pop
dec
push
repnz
and
lcall
pop
cmp
cltd
lea
inc
cli
daa
and
inc
inc
push
xor
imul
sahf
cmp
jmp
das
mov
adc
outsl
outsb
pop
out
test
xchg
inc
fildll
push
cltd
dec
call
bnd
rcll
out
push
adc
cs
add
and
cwtl
inc
loopne
insb
pusha
stos
inc
mov
iret
mov
cmovb
push
pop
popa
pop
xor
pushf
enter
scas
dec
and
ret
in
in
aas
pop
lods
cmc
xchg
push
jle
add
mov
mov
mov
push
push
out
push
xchg
mov
stos
add
jno
sti
mov
in
push
enter
jp
mov
js
out
mov
jl
add
jmp
and
pop
ret
mov
subl
loope
out
insb
test
scas
jb
push
push
mov
fistpl
out
and
adc
fldcw
je
xor
lahf
out
into
jae
lret
cli
mov
mov
addb
and
movl
cmpsb
dec
mov
xchg
cmp
pop
adc
mov
ficoms
scas
cltd
mov
cwtl
loop
movsb
cmp
mov
mov
popf
cmpl
aas
popa
pop
jae
mov
movsl
in
incb
mov
movl
xor
pop
lahf
or
pop
call
jg
or
mov
adc
pushf
mov
pusha
mov
mov
push
cmc
lret
add
jns
test
aad
add
push
addr16
mov
icebp
pop
js
flds
jmp
fimull
int
pusha
adc
iret
xor
jno
jne
das
inc
loope
cmp
xchg
dec
in
addr16
mov
adc
xor
out
jecxz
gs
lods
mov
mov
mov
jl
addr16
ljmp
fildll
sbb
popf
sub
jle
shll
pusha
scas
push
xor
out
mov
lods
dec
test
jmp
pushf
popf
jae
lea
jnp
cmpb
in
sti
arpl
aaa
shll
out
pop
lock
mov
sub
stos
xchg
and
sbb
out
pop
je
test
fisttpl
jno
mov
test
lds
jmp
popf
and
adc
cmc
and
add
adc
and
dec
push
push
cld
in
es
dec
and
out
sbb
and
add
jbe
push
call
push
fbstp
dec
loop
leave
lods
pop
sarl
lret
xchg
add
jp
adc
xlat
pop
pop
call
add
movsl
add
dec
out
gs
scas
ja
ja
mov
jbe
shrl
push
push
in
pop
cs
xchg
xchg
sub
and
jecxz
lods
das
fnstsw
fidivrs
out
les
clc
inc
push
lretw
pop
push
or
dec
lds
int3
inc
xchg
pop
ret
pusha
arpl
sub
outsb
xor
pop
pop
jnp
pop
cltd
and
jns
shll
sbb
out
push
jmp
daa
mov
aaa
push
jg
cmp
mov
imul
pop
add
pushl
aaa
pop
fsubr
jne
fstpt
xor
adc
loope
mov
mov
outsb
sbb
rclb
ret
out
mov
adcb
push
ja
cwtl
addr16
fs
cmpsl
into
jae
out
lds
lock
stos
mov
sbb
das
std
xor
popa
js
xor
xor
pop
aas
dec
mov
loop
stos
mov
popa
lcall
mov
or
jno
ret
jno
in
pop
shrb
cs
mov
movsb
ss
xor
xchg
or
adc
pop
dec
jae
aaa
add
mov
fldt
xchg
pop
mov
leave
or
pop
mov
es
call
pop
inc
in
loop
je
pop
adc
push
stc
sbb
xor
pop
loop
lock
jp
or
imul
push
out
pop
lock
mov
hlt
lcall
or
fwait
pop
fimuls
in
cwtl
mov
inc
cmpsl
sub
adc
sub
push
pop
lock
inc
cmpb
sbb
test
mov
out
cmc
test
pusha
and
jle
add
sub
int3
out
pop
outsb
jp
mov
jge
mov
ds
fsubrp
arpl
mov
or
push
movsb
and
xchg
dec
scas
fisubs
jbe
es
sbb
inc
xchg
arpl
stos
cmp
outsb
jmp
jbe
cmp
cmpsl
ja
pop
sub
sub
jae
sbb
arpl
inc
push
in
sub
push
cltd
lcall
insb
pop
xlat
push
mov
xor
enter
jl
add
lock
inc
mov
mov
repz
add
out
sbb
test
mov
ffree
lea
into
out
xchg
and
pop
or
daa
dec
int3
pop
fistl
xchg
icebp
dec
scas
loop
dec
pop
ds
jle
or
stos
rcrl
pop
dec
and
push
movsb
lcall
adc
out
cli
and
test
out
iret
out
sahf
add
outsb
int3
pop
pop
mov
xorb
and
arpl
lret
add
aam
les
rclb
repnz
daa
adc
push
fisubs
lret
pop
dec
dec
pop
xchg
pop
xchg
dec
and
ficompl
dec
mov
data16
sub
jnp
das
rcll
or
daa
cmp
into
pop
push
push
jbe
cmp
push
xlat
iret
mov
test
in
push
imul
xor
nop
out
dec
fisttps
mov
add
cwtl
fstps
gs
jbe
pop
adc
ss
adc
or
daa
pop
icebp
sub
or
pop
jno
dec
loope
jl
js
xchg
xorb
lcall
dec
in
loope
cmp
xchg
jo
dec
in
cmpsl
pop
int
out
mov
stos
orb
iret
inc
outsl
fcomp
or
pop
shr
and
nop
and
pusha
scas
je
mov
or
inc
adc
xor
push
insb
fcoml
outsb
das
call
pop
popa
int
inc
cs
dec
popa
shlb
adc
loope
out
pop
mov
aas
mov
std
repnz
in
xchg
fsubs
mov
push
push
orb
xor
jl
js
es
cmp
shrb
leave
cmpsl
insl
add
fidivl
inc
adc
mov
jbe
xchg
out
in
jmp
mov
or
rclb
fistps
pop
pusha
in
mov
add
nop
cltd
xchg
xchg
lea
bound
dec
inc
pushf
lret
mov
or
or
insb
push
mov
dec
dec
xor
pop
cmp
repz
cmp
jno
data16
cltd
sbb
cmp
cmpsb
push
mov
xchg
orl
sbb
ja
pop
mov
aas
fdivl
or
adc
or
sbbl
clc
adc
call
jnp
jp
mov
adc
dec
test
dec
mov
xchg
sbb
mov
jae
mov
fldcw
jo
dec
adc
jmp
shlb
cmp
dec
aad
and
daa
mov
add
push
hlt
in
inc
cwtl
clc
push
pop
imul
pop
mov
add
pop
mov
loopne
and
rcll
call
daa
mov
jae
mov
popa
or
mov
push
in
test
popf
cmp
sbb
enter
test
stos
adc
cmpsl
mov
or
pop
sti
or
les
dec
out
xchg
repnz
popa
lahf
add
stc
ret
out
lock
mov
push
push
test
xor
iret
push
mov
mov
loopne
addr16
cmp
lahf
mov
gs
xlat
adc
out
push
aas
mov
fdivrs
scas
arpl
dec
pop
int
xor
fmul
inc
pop
jmp
inc
divl
lret
test
pusha
out
inc
testl
les
pop
or
daa
cmp
mov
lea
mov
cmp
adc
xchg
push
add
cld
jmp
jbe
enter
scas
sub
cmp
push
dec
dec
out
pop
sahf
and
mov
or
jl
pop
rcl
rcrb
ljmp
movsb
insb
mov
ds
fwait
pop
sti
lret
test
push
inc
out
sub
outsl
push
pop
test
loopne
lcall
or
icebp
or
mov
mov
mov
sub
insl
push
mov
mov
jg
pop
inc
stos
jecxz
push
ret
push
pop
mov
mov
sbb
mov
dec
jle
inc
and
mov
mov
dec
inc
cli
pop
arpl
add
mov
fwait
popa
js
shrl
out
and
scas
push
lret
jne
mov
mov
adcl
pusha
popf
push
pop
in
test
fimuls
push
sbb
sahf
out
mov
adc
dec
sbb
push
mov
xchg
xchg
mov
jnp
out
xor
insl
out
mov
sarl
cmc
lds
xor
data16
dec
fadd
das
fwait
mov
pop
ja
sub
lock
push
je
inc
xchg
nop
cmp
pusha
test
push
pop
jp
arpl
outsb
fsubp
insb
or
leave
mov
out
repz
pop
iret
enter
movsb
mov
xchg
adc
add
mov
insb
sbb
jae
pusha
test
int
in
sbb
adcl
dec
notl
jbe
sub
adc
add
es
cs
call
in
and
sbb
xor
out
out
jg
insb
push
scas
adc
out
pop
add
gs
push
outsl
mov
add
cs
les
sbb
push
push
test
out
aad
aaa
popf
frstor
les
pop
pop
ja
lea
dec
stos
lock
ret
inc
movsb
dec
pop
push
loopne
sti
pop
pusha
adc
movsb
test
stc
pop
mov
mov
pop
mov
pop
sbb
ret
xchg
push
pop
sahf
lea
jns
and
fsubs
lret
pop
lret
lahf
mov
jg
and
into
push
imul
pop
dec
das
lret
repz
mov
inc
push
std
sub
fninit
sub
iret
js
aaa
mov
pusha
add
out
sub
jp
cmp
pop
cs
mov
cmp
das
in
out
idiv
inc
lods
jne
pop
dec
cmp
loopne
jecxz
lock
jo
lock
clc
mov
imulb
aaa
es
lods
icebp
test
lea
add
icebp
ja
inc
lcall
or
cmp
inc
or
push
loope
mov
out
sub
notb
mov
cli
mov
jnp
push
fs
cmpsb
mov
bound
shl
sbb
or
add
loopne
and
hlt
mov
sbb
daa
pop
cmpsb
imul
pop
ret
pop
jge
out
lret
aad
mov
and
movhps
outsb
sub
lahf
sub
sub
incb
mov
adc
or
sub
leave
mov
dec
popa
loope
add
push
iret
or
cld
out
aam
xchg
pop
xlat
jmp
out
pop
mov
jmp
mov
data16
xchg
push
pop
mov
sbb
pop
xor
inc
push
xchg
sbb
mov
out
or
mov
scas
pop
pop
or
adc
jle
mov
lds
jg
stos
cmp
enter
sub
jne
push
data16
pop
and
sahf
filds
push
pop
sbb
and
jle
clc
cmp
inc
addr16
sarl
fwait
and
out
jb
add
xchg
lahf
popf
dec
pop
jne,pt
dec
gs
leave
sub
clc
mov
or
dec
pusha
cmp
cmpl
mov
mov
inc
out
gs
imul
data16
lahf
aaa
out
es
mov
movsl
push
dec
mulb
repnz
push
xlat
xlat
or
rcll
out
xchg
mov
cmp
cmp
fs
pushf
xchg
divb
shrl
std
fs
sbb
add
out
icebp
cltd
mov
mov
push
jb
aas
pop
mov
ss
inc
fsubrp
jb
incb
mov
pop
xlat
daa
sub
mov
ret
test
lds
mov
bound
xor
and
test
and
pop
pop
mov
loope
mov
sbb
mov
push
lods
mov
and
dec
pop
mov
sar
in
jno
mov
sbbl
in
ret
pusha
mov
cmpsl
jmp
out
adc
dec
in
cmc
test
mov
scas
sarb
inc
subl
je
and
xor
dec
nop
pop
popf
adc
jmp
push
or
adc
or
jo
arpl
clc
mov
pop
insb
js
cmc
cld
and
pop
popa
scas
and
lock
jbe
dec
out
inc
jge
sahf
mov
btcl
std
sahf
mov
or
cmp
mov
pop
xchg
int3
fdivl
mov
in
scas
or
inc
xlat
mov
adc
repnz
mov
jns
lcall
lea
pop
push
jns
cs
ret
out
cwtl
fbld
mov
lods
insl
lea
popa
dec
add
xor
cmpsl
mov
lcall
mov
fadds
xlat
popf
mov
roll
shll
mov
jo
arpl
outsb
dec
or
mov
sub
or
jl
xorl
pop
mov
fstpl
test
imul
add
xor
lds
pop
dec
sub
mov
pop
mov
test
push
add
popa
int3
mov
jmp
in
in
mov
les
ficompl
cmpsl
jle
and
mov
xchg
aad
enter
jecxz
jl
dec
out
pop
clc
xor
pop
jg
dec
int
aas
push
cmp
add
loopne
out
icebp
xchg
xlat
mov
pusha
cmp
jle
cs
out
or
or
jno
sarb
jp
shrl
out
jne
mov
cmp
mov
loope
pop
les
mov
fists
push
mov
lahf
js
scas
xor
aaa
push
sub
adc
fwait
add
jo
das
out
cmp
pop
mov
std
dec
test
pop
pop
sbbb
pop
or
nop
jmp
in
and
pushf
dec
pop
xchg
sub
mov
ret
xchg
add
mov
js
jp
pusha
repz
in
push
imul
bound
sbb
add
pop
and
push
cmc
sub
sub
pusha
std
jmp
out
push
bound
pop
sarl
aas
cs
jp
adc
jne
ss
fnstenv
sub
push
jae
andl
shrl
mov
push
sub
shll
push
stos
daa
xchg
dec
xchg
scas
jle
pop
loop
fmul
pop
enter
jmp
or
nop
and
mov
sbb
inc
arpl
push
icebp
repnz
mov
pop
dec
test
pop
das
cwtl
decl
pusha
or
imul
out
out
push
ss
call
mov
adc
push
mov
shlb
movsb
movsb
cwtl
push
or
out
xchg
in
ljmp
push
mov
push
outsl
icebp
and
xlat
aaa
fwait
fwait
dec
adc
sahf
mov
adc
jb
je
lds
jbe
popa
pop
dec
pop
lds
mov
mov
popa
jge
repnz
pop
and
mov
mov
push
dec
add
test
test
test
fs
cmp
mov
out
movsl
jge
in
jbe
orb
out
sub
in
arpl
jp
jecxz
bound
icebp
pusha
mov
movsb
daa
xchg
les
testl
lea
jno
mov
dec
xor
inc
mov
sbb
mov
cld
sbb
or
je
test
inc
rclb
fs
sbb
cltd
jnp
jnp
jl
pop
cmp
sub
pop
fistps
jg
push
jne
popa
add
jnp
mov
repnz
loop
xchg
int3
jecxz
das
adc
xor
loopne
enter
xchg
fcmovnu
pop
jb
lock
std
pop
push
movsl
sbb
mov
pop
outsl
pop
mov
cli
je
bound
sbb
jns
adc
pop
and
cmpsl
fldt
lods
mov
dec
adc
add
stos
mov
test
ret
sbb
loope
out
lcall
mov
push
outsl
push
loopne,pt
and
js
mov
mov
adc
out
stos
mov
movsb
sbb
ret
std
pop
adc
out
mov
cs
mov
mov
ljmp
nop
aas
sbb
mov
jno
fwait
inc
ss
jae
out
adc
pusha
jl
adc
xchg
jo
adc
ficomps
mov
dec
xchg
test
adc
dec
lods
xchg
jle
dec
fwait
in
xchg
pop
jbe
cli
out
or
mov
out
scas
pop
pushf
push
mov
pusha
lahf
insb
mov
test
xchg
jmp
repz
int3
inc
jbe
out
mov
adc
fiadds
mull
ret
push
adc
pusha
add
dec
loope
inc
pop
inc
add
lods
pop
loope
jae
xor
addr16
movsb
push
xor
mov
addr16
je
inc
into
imul
mov
push
pop
lahf
stos
fsts
div
xchg
push
imul
sub
ljmp
pop
sub
sub
xchg
fsub
divps
cltd
gs
sbb
inc
cld
mov
in
cwtl
cld
jno
cmp
sub
adc
ljmp
sbb
jb
sarb
loopne
out
arpl
dec
mov
loopne
push
pop
orb
xor
xchg
daa
popa
jbe
mov
xchg
nop
pop
jg
repz
mov
mov
gs
stos
add
pop
and
cmp
xor
imul
and
hlt
xchg
orl
mov
shl
pop
push
loope
dec
popa
call
adc
cmp
sbb
pop
aam
aam
push
in
movsb
scas
mov
or
sbb
out
stos
mov
leave
pop
jae
daa
mov
mov
xor
mov
sbb
or
push
cmpsb
inc
hlt
dec
popa
push
popa
test
xorl
stos
rorl
fbstp
pop
inc
and
cli
clc
sarb
push
fnstcw
pop
pop
adc
inc
mov
inc
mov
mov
mov
jle
filds
cmp
lret
pop
ficoms
data16
mov
cmp
mov
lret
push
fidivrs
movsl
and
dec
ds
push
xor
mov
and
jp
ret
or
dec
mov
mov
inc
and
stos
adc
aam
nop
pusha
arpl
fstl
or
dec
jmp
andl
cmp
ja
sbb
xlat
xor
xchg
jmp
lcall
inc
add
mov
cmpl
mov
adc
imul
aaa
mov
scas
pop
add
outsl
mov
add
insb
mov
push
imul
sahf
call
js
stos
fstps
xor
out
out
push
sub
mov
sahf
cli
out
cmp
out
and
jl
push
das
in
loope
or
pop
mov
mov
loop
sbb
pop
cmpb
jbe
push
push
and
test
inc
bound
mov
push
ret
loop
and
cltd
imul
popa
jbe
and
mov
cld
adc
and
lret
push
cwtl
or
push
add
mov
sub
ror
mov
mov
mov
mov
lods
outsl
push
arpl
mov
pop
repz
mov
loop
xor
arpl
mov
jg
je
pusha
mov
imul
pusha
inc
insl
or
push
mov
mov
lds
bound
xor
ret
sub
stos
ret
xor
xor
push
ljmp
add
stos
or
push
popa
sahf
push
lds
sub
pop
xchg
and
mov
test
xchg
jo
mov
js
mov
ja
adc
sub
stos
stos
fistpl
push
data16
adc
dec
jge
dec
inc
or
adc
loope
fmuls
dec
dec
es
std
imul
pop
arpl
add
imul
pusha
sub
inc
mov
xchg
add
mov
mov
iret
hlt
mov
xchg
fidivrs
aad
push
add
test
js
push
popa
sahf
popa
nop
inc
dec
jp
add
jae
aaa
push
or
sbb
mov
cmpb
ljmp
mov
pusha
adc
cmpsb
lret
lea
xchg
adc
daa
pop
cmp
pusha
inc
jmp
sbb
jmp
loopne
fdivr
in
jg
cmpsb
sub
inc
fisttpll
lods
pop
inc
mov
inc
xlat
insb
jo
popa
mov
in
punpcklbw
mov
out
xchg
shrb
test
mov
adc
scas
pop
out
sub
pusha
in
inc
out
das
adc
fcomps
xchg
lods
lock
subl
push
popa
pop
aaa
sub
jno
mov
lods
jae
aam
in
and
cmp
mov
aaa
and
pop
lock
scas
add
mov
mov
add
push
and
clc
pop
mov
and
lock
jne
loopne
xchg
popa
popa
xor
dec
clc
divb
in
pushf
andl
fcoml
mov
pusha
add
movl
rorl
cmp
cmp
mov
imul
adc
fbld
jl
scas
mov
orl
sbb
in
lea
iret
cmp
pusha
in
xchg
jae
push
outsl
pop
sbb
sahf
dec
mov
dec
loope
adc
xchg
jae
adc
movsl
jbe
mov
sbb
push
mov
cli
ret
jl
add
outsl
sub
pop
push
cwtl
imul
mov
inc
mov
and
out
dec
jmp
mov
dec
jp
mov
sbb
push
ja
xchg
pop
fs
dec
into
xchg
movsb
mov
push
pop
jo
add
dec
fnstsw
aaa
dec
jp
fimuls
cld
add
inc
popa
jo
adc
in
sub
xor
rorl
sbb
pusha
xor
pushf
pop
loopne
movsl
incl
adc
xchg
imul
push
sarb
mov
push
cltd
leave
mull
push
ss
push
xor
mov
mov
imul
ds
aad
dec
pushl
sub
cmpl
test
mov
orl
pop
pop
mov
lods
outsl
mov
mov
xor
std
jne
mov
pusha
outsl
inc
dec
xor
mov
sbb
add
iret
jns
dec
das
push
inc
int3
shll
aad
xchg
andb
jge
nop
shl
pusha
scas
sub
push
xor
dec
pop
pop
jnp
push
fcomi
and
in
repz
push
aaa
mov
lret
sub
xor
adc
mov
inc
stos
adc
loopne
sub
sub
jne
movsb
cmp
pop
sbb
mov
pop
xlat
xchg
pop
push
xchg
sti
cwtl
jnp
xchg
movsl
in
insl
ret
out
arpl
das
ret
loope
cmp
outsb
xchg
dec
arpl
jbe
out
push
movsb
sbb
jae
mov
adc
dec
out
in
lcall
mov
fsubp
rolb
pop
inc
jp
mov
popa
jnp
cmp
jecxz
pop
iret
jle
aaa
jae
cmp
ds
xor
mov
fs
incl
mov
out
pusha
test
push
jne
rclb
out
sbb
pop
jb
insl
bound
pop
fpatan
jmp
jg
dec
iret
mov
cmp
pop
dec
ss
inc
mov
pop
push
jl
cltd
pushf
out
sti
outsl
and
in
call
popa
sarb
notb
pusha
push
mov
lds
sbb
pop
adc
jp
lock
jo
cltd
jl
fwait
dec
and
pusha
mov
in
jmp
push
mov
test
mov
repz
xorb
cld
jle
bound
adc
mov
pop
stos
jge
xchg
scas
mov
mov
sti
pop
arpl
sbb
pusha
ds
pop
repz
sub
loope
xor
sbb
cltd
aas
xchg
repz
xchg
jns
notb
dec
sahf
pop
mov
sub
mov
cmpsb
push
negb
pop
adc
xchg
lea
loopne
lock
jmp
into
cmp
sbb
outsb
mov
bound
sub
mov
pop
mov
in
cmp
int3
lock
and
stos
xlat
bound
stos
cmpsb
out
mov
push
cmpsl
out
jno
sub
repnz
push
stos
test
adc
push
sbb
repnz
and
lock
test
push
mov
xlat
xchg
fdivl
and
lea
out
xor
mov
and
sub
std
jns
pusha
xchg
les
sub
pop
movsl
mov
aam
sub
in
mov
pusha
jae
dec
xchg
mov
lahf
pop
cltd
inc
mov
fisttpl
sub
lahf
mov
push
mov
insb
jb
int3
sbb
popa
mov
divl
scas
daa
adc
sub
pusha
push
jns
or
test
inc
mov
mov
mov
testl
xchg
lret
cmp
faddl
or
add
repz
loope
and
sbb
je
pusha
xor
movsb
stos
ficoms
mov
cmc
pop
push
push
push
mov
mov
aaa
call
in
jp
repnz
pop
shl
mov
ja
and
pop
out
repz
lahf
adc
data16
pop
out
pop
inc
jmp
xlat
sahf
sbb
sbb
pop
stc
jg
fldenv
out
dec
push
mov
mov
adc
inc
sub
push
push
hlt
sahf
out
cmp
push
imul
pop
dec
in
push
mov
mov
inc
push
push
jae
xor
iret
and
push
xchg
in
push
nop
into
sbb
sbb
pusha
jle
sbb
pop
fldl
hlt
ljmp
mov
out
mov
cmpsl
idivl
int3
jp
lock
dec
icebp
pop
je
inc
call
sbb
sbb
sbb
loope
adc
pop
cli
fs
pop
loopne
in
push
out
rcrb
hlt
mov
or
mov
or
cmpsl
mov
dec
repnz
pop
push
aad
mov
push
pop
jo
push
rclb
jo
push
mov
xlat
inc
lods
pop
test
xchg
rolb
push
aam
jp
or
mov
movsl
or
push
mov
mov
mov
jl
xchg
jns
or
loope
jge
ror
js
mov
sbb
push
cli
fsts
adc
xor
lods
pusha
mov
popa
sbb
mov
ljmp
mov
cltd
xchg
lock
xchg
adcl
daa
adc
mov
sub
pop
lods
push
fisttpl
inc
sub
lret
add
inc
push
xor
lahf
out
ds
popa
faddl
rol
cmp
movsb
out
or
pop
int
dec
stos
mov
inc
jno
and
pop
fs
das
aas
dec
mov
mov
xor
dec
xchg
pop
or
mov
pusha
add
adc
and
fwait
movsl
out
adc
push
pop
pop
mov
stos
and
adc
out
inc
push
cmp
xchg
xor
out
xor
pop
repz
subb
or
push
jno
sub
mov
pop
and
popa
xlat
call
pop
scas
fmuls
push
sub
out
out
jmp
or
rcl
mov
mov
aas
out
cltd
scas
lea
or
adc
ret
imul
pop
cwtl
stos
outsl
sub
imul
push
out
stos
lock
jge
adc
ljmp
out
pushf
mov
shl
or
add
inc
add
mov
loopne
ja
inc
aam
sbb
adc
xchg
rcrb
sahf
out
mov
fsubr
jecxz
out
cmp
imul
push
sub
pop
lods
popf
jmp
xor
out
js,pt
mov
mov
sbb
dec
pusha
cmp
mov
mov
popa
insl
sarb
or
xchg
xchg
mov
jmp
stos
dec
mov
std
mov
lret
ret
jmp
aad
adc
and
push
mov
cmp
out
xor
xchg
lret
pop
mov
sahf
mov
pop
into
out
add
popa
popf
sub
dec
out
pop
in
xor
mov
push
jno
int3
cmc
sbb
fisubs
or
push
push
movsl
addr16
rcl
pop
gs
das
pop
and
loopne
mov
loope
jge
mov
add
jnp
pop
adc
xchg
notb
pop
mov
popf
in
push
adc
xor
sub
and
sub
xlat
out
out
xor
out
loope
mov
pop
pop
jge
pop
ljmp
push
gs
ficomps
lods
out
test
inc
test
je
repz
xlat
aam
and
in
jle
aas
popa
pop
arpl
push
jbe
test
addl
aam
daa
out
ds
xchg
cmp
jo
cmp
in
incb
cmp
and
pusha
add
dec
gs
dec
xchg
shr
mov
fidivrs
jo
repz
cmp
dec
sbb
pop
mov
js,pn
inc
cmp
jle
dec
cmpsb
sbb
cld
lods
popa
jmp
test
sub
cmp
cmpsb
dec
stos
idivb
aas
loopne
ja
add
fxch
flds
push
test
xor
mov
fsubr
shrl
ret
int3
dec
subb
jns
sti
mov
ja
pop
jecxz
jp
lret
sbb
dec
cld
sbb
cmp
sub
stos
adc
mov
das
lods
leave
and
jmp
pop
pop
popa
adc
outsl
scas
ret
sub
shrb
fists
addb
es
and
xor
paddd
fisubl
fsub
dec
outsb
xor
pop
mov
push
xor
push
rcrl
jg
push
mov
daa
xor
and
fidivrs
mov
xor
adc
mov
and
mov
mov
xlat
loope
pop
jnp
aad
push
cs
sub
cmp
sub
mov
mov
mov
xor
popa
je
cld
jg
int
inc
out
mov
aaa
inc
fistps
mov
cmc
pop
jge
push
lahf
jecxz
jp
stc
push
xchg
cmp
sbb
xor
js
inc
push
mov
leave
pop
sbb
mov
sti
std
xchg
cli
sbb
out
ds
mov
aam
mov
pop
or
out
es
ds
imul
adc
xchg
mov
aaa
mov
aam
out
sbb
aad
shl
ljmp
xor
push
adc
hlt
push
and
push
lea
iret
fs
jb
mov
insb
leave
mov
out
pop
addl
into
aas
pusha
stos
sub
ja
push
movsl
jb
xchg
adc
xchg
daa
xor
dec
mov
mov
in
mov
fisttpll
xlat
cld
jns
add
sbb
fsubrs
jmp
ja
cs
rcl
jmp
xor
mov
addr16
cmpsb
stos
adcb
mov
sbb
xchg
subl
pop
pop
jns
cmp
add
roll
jmp
cmp
addr16
loopne
loopne
out
jne
xchg
mulb
mov
push
daa
lock
pop
dec
inc
mov
or
cmc
stc
sarb
pop
inc
sarb
adc
popa
cmp
loop
aas
out
nop
sub
pop
shl
mov
dec
lds
leave
dec
orl
out
sub
cmp
xor
loopne
ret
inc
sbbb
mov
js
fs
out
lods
inc
add
xor
push
mov
jmp
pop
sar
jbe
mov
jnp
pop
push
bound
mov
stc
stos
jle
adc
fwait
add
orl
jnp
loopne
leave
pop
push
push
cltd
mov
rcll
pushw
out
pop
cmp
inc
cmpsb
in
in
in
sbb
out
sahf
xchg
inc
stos
into
or
and
mov
inc
sbb
pusha
cmpsb
add
push
adc
mov
sbb
xchg
or
in
mov
out
mov
cmp
out
shlb
sub
nop
mov
aad
or
loopne
int3
dec
in
std
cmpsb
jo
scas
jae
cwtl
mov
pop
outsb
xchg
inc
and
shl
mov
jb
push
sahf
or
sahf
sub
stos
loopne
mov
in
sub
ljmp
jl
ss
mov
inc
xchg
loop
pop
adc
and
xlat
pusha
ss
mov
and
inc
add
pusha
in
movb
adc
leave
leave
mov
xlat
pop
mov
pop
mov
daa
lahf
add
cmp
pop
cmpb
jae
adc
andb
sub
mov
inc
inc
pop
mov
push
mov
mov
sbb
jg
rcrl
add
push
in
sbb
movsb
jmp
mov
inc
pop
push
pop
lods
sbb
jp
out
in
pop
jmp
inc
loopne
movsb
dec
mov
orb
inc
movsb
ds
rclb
pop
rcl
mov
inc
jae
xor
inc
dec
and
jmp
imul
adc
je
fidivrs
mov
xchg
pop
mov
dec
scas
dec
jne
cmpsb
out
out
mov
lret
xchg
mov
adc
xor
scas
test
lock
lahf
notl
cmp
cmp
loope
xor
push
mov
jo
jo
scas
lods
int3
xor
cwtl
pop
pushf
or
push
popa
mov
fdivrs
jmp
pop
daa
lcall
inc
add
imul
popf
imul
rol
mov
mov
scas
inc
dec
dec
clc
iret
inc
and
and
lret
insb
pusha
mov
sub
jecxz
pop
push
fs
sub
cli
jb
inc
xchg
pusha
les
adc
das
pop
or
push
std
dec
popa
push
aaa
out
adc
lahf
mov
dec
cmc
repnz
aam
lods
out
sub
mov
pop
decl
jbe
cwtl
arpl
leave
and
inc
das
mov
dec
out
call
fisubs
adc
fisubrs
pop
pushf
push
jo
sbbb
int
data16
out
fchs
aad
inc
popa
sarb
imul
insb
mov
bound
jle
mov
mov
xchg
cmp
js
fs
negb
or
flds
mov
xchg
mov
iret
cmp
mov
or
pop
outsl
stos
push
loopne
imul
and
cld
xlat
pop
and
outsl
sti
js
cmp
mull
and
mov
test
dec
fdivr
pop
cmp
add
inc
popa
cwtl
jmp
xor
adc
mov
cltd
xor
pcmpgtb
dec
addr16
mov
xchg
clc
ja
inc
push
mov
cli
mov
aas
out
push
pop
in
jge
outsb
jns
sbb
pushf
jl
les
dec
out
out
cs
insb
jno
sbb
add
ret
cmp
and
jp
jl
dec
popa
test
incl
mov
xor
sahf
cwtl
inc
cld
mov
les
roll
push
sub
out
outsb
cld
mov
add
out
pop
jl
add
fldl
decb
jo
adc
or
out
mov
loopne
jbe
mov
in
add
movsb
mov
pop
scas
push
add
dec
mov
test
jg
pop
pop
add
bound
jecxz
cwtl
adc
sub
dec
inc
jmp
mov
cmp
repz
repz
jae
lahf
push
xor
cld
shrl
out
orb
sub
rolb
inc
adc
sub
popa
popa
inc
sbb
ds
mov
mov
mov
push
jle
ja
inc
loope
cwtl
jg
out
cmpsl
mov
scas
mov
into
mov
push
push
push
nop
pop
insl
pop
pop
pop
inc
xchg
lods
or
orl
xlat
adc
sti
and
ds
dec
movl
cltd
je
add
jle
pop
in
jnp
bound
mov
inc
push
push
leave
sbb
ret
lds
or
push
adc
movsb
cwtl
mov
xor
push
cmp
loop
inc
or
inc
addb
xchg
out
lahf
dec
popf
push
test
mov
addr16
mov
push
jmp
fcompl
push
in
mov
fsubs
pusha
mov
cmpl
mov
dec
add
ja
push
pop
xlat
movsl
repnz
clc
add
mov
test
push
pop
sub
and
sub
fildll
test
or
enter
mov
push
adc
cld
add
fxch
test
testb
push
dec
popa
xchg
es
addl
pop
sbb
sbb
ret
push
mov
les
cli
push
addr16
ret
lea
in
push
das
cwtl
insb
int
shlb
and
mov
pop
in
inc
stos
and
stos
pusha
fisttpl
arpl
pusha
fimull
aas
popa
lea
dec
push
movsb
jb
inc
fchs
push
cmc
xchg
dec
fwait
xor
fimuls
pusha
mov
adc
pop
xor
push
out
inc
sbb
repnz
xchg
xor
inc
pop
xor
nop
mov
jg
popa
jno
sub
lcall
ss
loop
cmp
lahf
test
cltd
cmp
loope
inc
mov
push
mov
in
outsl
enter
mov
mov
mov
mov
shr
adc
inc
push
cmp
mov
stc
das
lods
jb
dec
rcll
push
mov
sub
xor
jns
mov
cmc
push
cmp
rclb
adc
in
sarl
call
mov
mov
push
into
jecxz
pop
push
inc
xchg
repz
sarl
pop
pusha
push
rolb
inc
cltd
mov
loopne
jnp
dec
loop
pusha
stos
xchg
movl
xchg
pop
dec
pop
js
aam
sarb
pushf
cmpsb
push
repz
add
cmp
shlb
pop
sub
push
xchg
outsl
insl
inc
cwtl
loopne
test
and
out
adc
daa
popa
mov
outsb
push
sti
cwtl
push
daa
out
cltd
jno
call
rcr
int3
lea
mov
xchg
jmp
out
addr16
dec
mov
mov
es
sbb
mov
xor
jge
repz
addb
daa
mov
adcl
xor
mov
stc
mov
cmpsb
data16
fldl
xchg
aad
enter
and
adc
test
out
into
in
imul
mov
mov
ret
ret
je
shlb
and
inc
fs
mov
push
insl
mov
test
dec
andb
insl
or
sbb
add
in
dec
iret
ss
xchg
out
call
fdivrp
push
pop
sbb
dec
call
stos
sbb
movsb
rorb
jge
xor
fidivs
call
mov
and
jnp
pop
rcrb
in
sub
sbb
mov
std
cmp
xchg
sub
mov
dec
jg
push
add
hlt
pusha
xchg
cld
out
scas
and
adc
out
add
fisubl
cmp
stos
and
icebp
hlt
mov
ljmp
mov
fwait
inc
add
out
push
lret
icebp
mov
jmp
cmp
pop
jge
pusha
mov
and
movsb
stos
and
lea
cwtl
ljmp
dec
xchg
inc
push
scas
inc
hlt
in
sub
mov
rcrl
xchg
fsub
push
push
add
mov
mov
out
addr16
mov
xlat
jb
test
sub
out
clc
and
imul
cmp
jmp
inc
cmp
pop
out
mov
push
dec
or
dec
mov
ficoml
pop
shrl
pop
jmp
sub
in
jb
int
pop
out
fucom
test
icebp
icebp
add
xlat
loopne
in
test
andb
aam
pop
fisttpl
icebp
ds
mov
into
mov
dec
enter
jecxz
sar
cmp
ljmp
jnp
sbb
sbb
call
dec
sbb
cwtl
dec
test
arpl
arpl
loop
les
popa
pop
mov
pop
loop
pop
lea
fisttpl
fs
or
rcl
outsl
and
sahf
out
imul
xor
loopne
mov
dec
in
sub
pop
add
mov
push
sub
mov
movsl
insl
outsl
xor
scas
sub
jg
cmc
jmp
xor
aam
data16
jnp
xchg
jp
andb
mov
mov
xchg
out
xchg
mov
pusha
insl
or
icebp
std
movl
add
pusha
mov
cmpsl
adc
enter
mov
push
lahf
xor
dec
out
push
mull
mov
lahf
add
fsubrs
fsubr
inc
sub
sub
popa
push
sbb
shlb
dec
jbe
sbb
mov
lcall
push
inc
push
sbb
imul
jno
js
add
push
pop
push
mov
jo
pusha
daa
xchg
sbb
scas
das
xor
hlt
int
inc
adc
push
ffreep
mov
inc
jecxz
mov
xchg
out
pop
int3
inc
jb
jo
push
dec
popa
inc
sub
push
fs
sbbl
mov
mov
enter
and
xor
pusha
fistpl
pop
xchg
lcall
mov
out
sbb
xor
xchg
cmp
sbb
loop
out
inc
inc
jns
jle
jle
das
jne
stos
jnp
add
push
outsl
insb
out
push
hlt
add
imul
mov
orb
lea
jecxz
mov
adc
mov
adc
xchg
jmp
xchg
pop
mov
pop
sti
shll
call
add
fstpl
dec
sarb
pop
inc
mov
out
sbb
jne
cmp
scas
je
xchg
test
cli
stos
sub
pop
or
adc
mov
xor
mov
sbb
pop
fdivs
push
and
in
mov
jmp
aas
mov
pop
scas
mov
mov
mov
paddusw
mov
push
fmul
insb
mov
pusha
xor
dec
mov
jmp
xor
stos
pop
mov
js
idiv
movsl
fmul
and
mov
and
daa
out
pushf
inc
cld
push
mov
mov
push
pop
mov
lret
out
sub
and
and
push
dec
sbbl
and
mov
imul
xchg
rol
out
and
pop
mov
push
icebp
ja
adc
mov
repz
in
popa
ds
add
mov
xchg
xchg
inc
popa
or
push
flds
out
hlt
or
test
push
lcall
not
lcall
orl
mov
cld
push
adc
pop
sahf
sbb
nop
pop
mov
add
inc
and
in
fsubrs
pop
gs
aad
fidivrs
popa
xchg
pop
dec
cmc
inc
jmp
or
or
int3
cmpsb
adc
mov
pop
ja
mov
jl
push
fisubs
and
add
jo
sub
fisubl
pop
xchg
jne
repnz
mov
and
rcr
jecxz
roll
and
jns
cmp
mov
jmp
mov
jmp
lahf
xor
je
lods
imul
cmp
or
andb
mov
pop
cli
jle
out
into
out
sahf
cmp
or
pushf
ret
add
pop
dec
mov
mov
sbb
xchg
mov
push
and
in
mov
mov
jl
pop
nop
mov
lret
pop
mov
cmp
jno
dec
and
mov
decb
xor
movsl
loopne
jnp
cmpsb
scas
nop
mov
push
inc
cmpsb
sub
insb
aaa
pop
sbb
das
jg
mov
cmp
cmp
out
mov
idivl
mov
or
inc
lock
xchg
loopne
shlb
cmpsl
sbb
xor
stc
cmp
cmpsl
fiadds
jne
ret
daa
add
fisubl
mov
popf
cmp
xor
mov
pop
in
dec
mov
push
popf
add
pop
xchg
pop
ds
xor
push
sub
ret
pop
test
out
out
inc
adc
mov
xchg
push
add
mov
xor
mov
push
icebp
dec
fdiv
pop
out
cltd
push
dec
adc
mov
lret
iret
hlt
cmpsl
dec
cs
dec
loop
lock
scas
and
adc
aam
pop
popa
jnp
loope
out
in
and
aas
cmp
push
mov
or
xor
stos
cld
sbb
sbb
mov
inc
adcl
fwait
std
xor
add
pop
test
iret
leave
ja
out
int3
and
cmp
lfs
pop
arpl
adc
mov
adc
fadd
nop
mov
mov
fwait
pop
repnz
push
mov
or
dec
popa
xor
xchg
movsl
nop
inc
lea
adc
scas
adc
lds
in
mov
xchg
movsb
xor
scas
mov
mov
dec
outsb
lods
pusha
xor
pop
mov
fstpt
push
into
xor
lock
adc
outsb
xor
pusha
and
and
xorb
repz
loope
mov
xchg
dec
rcr
cli
jbe
out
andl
sub
cld
jg
add
add
lods
in
cmpsb
adc
xlat
xchg
mov
scas
mov
popa
loop
out
mov
mov
imul
fs
andl
loopne
sahf
out
test
jmp
mov
cmc
lcall
inc
sbb
cmpl
or
test
cltd
pusha
jecxz
pop
mov
push
in
jecxz
hlt
push
popf
pop
sbb
cmp
outsb
pusha
sbb
enter
jae
fidivl
hlt
push
pop
aas
in
aad
das
pop
scas
pop
sbb
mov
jmp
mov
mov
inc
pop
out
nop
lods
popf
leave
push
add
inc
mov
pop
xor
jo
xchg
movsl
lds
jb
mov
scas
jb
pusha
adc
aam
jo
fldt
out
mov
pop
cmpsl
loopne
xchg
ffreep
and
sub
andb
mov
mov
sbb
pop
push
xor
lret
test
cmpsb
pop
sbb
jnp
lods
cwtl
fisubl
pop
and
mov
shll
pusha
scas
jmp
jmp
test
jo
cmp
push
sub
push
mov
stos
ret
add
data16
daa
mov
daa
sbb
mull
mov
ljmp
jmp
sbb
lret
dec
imul
push
subl
int
jno
jb
push
mov
pop
das
jnp
addr16
xchg
xor
nop
leave
xlat
rcrb
cmp
mov
push
sbb
jb
sbb
dec
inc
testb
or
pop
cmpsb
into
pop
fnstcw
xor
mov
or
cmpsb
mov
hlt
movsl
fnstsw
pusha
lds
sub
pusha
mov
mov
aaa
testl
cmp
lds
and
fadd
cmp
es
xchg
or
sub
test
test
mov
shr
outsb
lods
xchg
cmc
ljmp
mov
add
stos
cmp
hlt
cli
pop
imul
pushf
jno
pop
fwait
sub
test
call
mov
insl
aaa
mov
fbld
ret
movsl
jmp
cmp
fadds
push
and
and
jge
jecxz
add
mov
dec
sub
and
shrl
mov
es
inc
aaa
pop
pop
pop
xchg
je
and
cmp
in
mov
repz
iret
ret
and
movsl
je
jmp
inc
inc
fs
push
jecxz
cmpsl
inc
filds
sahf
adcl
call
pop
jmp
dec
popa
divl
or
mov
cmpsl
push
inc
in
mov
mov
ret
pop
sbb
pop
stc
mov
adc
iret
fildl
loope
popa
jmp
and
repz
xorl
mov
pop
les
scas
mov
pop
adc
pop
or
dec
push
mov
outsl
out
lret
mov
dec
shlb
std
mov
icebp
imul
xchg
and
pop
mov
insb
xchg
or
test
or
push
fwait
or
cld
xchg
inc
popa
out
cmp
inc
jo
popf
jmp
add
mov
sbb
mov
mov
adc
out
int3
loopne
sbb
mulb
icebp
mov
out
pop
lods
push
sbbl
jl
mov
les
pop
and
xorl
inc
xor
rcrl
pop
out
jge
xor
decb
dec
mov
and
lods
pop
mov
dec
pop
addr16
mov
daa
repnz
loope
xchg
data16
inc
mov
inc
mov
ret
xchg
notb
stc
or
lock
add
inc
hlt
or
pusha
pop
jp
cwtl
test
aam
out
shl
pop
pop
sbb
jg
daa
add
pushf
cli
jmp
push
loopne
jns
xlat
xchg
dec
add
in
lods
cli
mov
push
fs
mov
inc
lcall
div
leave
pop
mov
pop
sbb
dec
xchg
inc
int3
fldcw
cltd
sub
mov
test
xlat
sbb
xchg
adc
sbb
pusha
push
xor
out
int3
mov
jb
in
and
jge
xchg
scas
int
push
popa
mov
lods
jb
jmp
aaa
call
or
pusha
out
push
roll
in
outsl
inc
sbb
cmp
jnp
inc
aaa
mov
popf
out
test
jbe
mov
adc
mov
lahf
cs
cmpsl
pusha
mov
cmp
test
js
aas
popa
addr16
dec
pop
outsl
out
dec
sub
fcmovbe
and
mov
add
nop
fstpl
daa
pop
into
push
add
jns
in
adc
mov
push
cli
push
dec
arpl
hlt
adc
lret
add
jmp
dec
lret
pop
add
mov
pop
jne
imul
or
mov
mov
or
test
jle
fmulp
xchg
shlb
aad
fcompl
push
pop
cmp
inc
scas
popf
push
sahf
aaa
jp
jge
pusha
mov
and
sub
data16
stc
push
test
test
push
jp
mov
imul
cltd
adc
es
pusha
cwtl
or
iret
mov
pop
out
lods
out
mov
and
popf
aaa
int3
insb
popa
fs
sbb
xchg
movsl
pushf
in
das
pop
mov
dec
imulb
dec
imul
adc
lods
adc
xlat
pusha
dec
push
adc
ja
imull
jne
adc
xchg
xchg
fimuls
sub
cmp
cld
and
and
mov
cld
push
dec
and
dec
dec
scas
sar
shl
sahf
fs
sbb
shr
jg
jmp
or
add
cmp
lds
mov
jno
jno
popa
jmp
sub
fstps
dec
ror
push
popa
lcall
adc
mov
or
mov
in
mov
loop
push
dec
adc
pop
jae
mov
lods
pop
icebp
mov
out
dec
loope
orl
in
out
cs
mov
cltd
sub
in
leave
fistl
sahf
cwtl
pop
dec
int
mov
sbb
mov
int3
cmpsl
popf
pop
pop
push
or
add
scas
mov
or
outsl
sbb
pop
xor
inc
andb
xchg
mov
pop
fiadds
out
add
call
lea
and
jns
add
jo
scas
insb
mov
pop
test
pop
sbb
fwait
inc
and
mov
lds
popa
push
cs
cmp
scas
push
out
in
arpl
jge
xor
mov
xlat
push
movsb
xchg
out
ss
mov
mov
shl
daa
cmp
aad
and
pop
push
popf
cld
in
pusha
push
xchg
pop
loopne
das
scas
call
jb
pop
popa
leave
and
outsb
repnz
xchg
or
pop
xor
mov
xor
test
mov
push
push
xchg
pop
pop
xchg
cmc
jp
jno
sbb
pop
out
movsl
test
mov
fldz
and
jg
notb
js
daa
mov
inc
repnz
incb
jno
in
in
push
dec
add
loope
enter
fnstsw
dec
cs
cmpsl
adc
dec
hlt
xchg
mov
je
xchg
out
fst
repnz
push
xchg
ljmp
lahf
addl
loope
and
jge
out
pusha
xor
insl
inc
pop
aam
filds
iret
and
mov
xor
sahf
addr16
lock
cmp
jae
jo
rolb
inc
lods
loop
sbb
lock
cltd
pusha
imul
push
mov
and
pop
stc
or
mov
push
int
outsb
lret
xchg
popf
popa
pushl
hlt
sub
jbe
pusha
insb
int
mov
fidivrs
ljmp
xor
adc
dec
pushf
gs
mov
jle
iret
fwait
cs
xchg
mov
and
fs
test
pop
jae
mov
std
xchg
shrl
xor
cmp
push
push
add
popa
arpl
aaa
xor
adc
mov
lock
ljmp
xchg
or
or
aaa
or
cltd
loopne
ss
dec
xchg
call
add
or
cld
adc
fwait
xor
mov
sbb
push
lret
inc
dec
dec
and
cmp
pop
push
das
jp
push
imul
xor
sbb
mov
xor
les
pusha
addr16
arpl
popf
add
addr16
add
ja
in
stos
xchg
dec
dec
pop
push
and
movsb
ja
pop
mov
sbb
movsb
adc
in
cmp
mov
inc
bound
mov
aas
incl
push
les
sahf
jle
loopne
mov
out
push
fsubl
andl
pop
mov
out
data16
pusha
dec
jl
xor
loopne
fucomip
mov
mov
jl
ljmp
or
iret
test
xor
push
sub
in
add
mov
jno
addr16
rcr
jge
and
sbb
pop
stos
pcmpgtb
xchg
mov
jmp
mov
inc
test
adc
add
xor
out
dec
popa
stc
xlat
cmpsl
jo
dec
pop
movsb
mov
inc
sti
stos
ljmp
adc
loopne
and
inc
das
mov
aaa
xchg
or
push
leave
add
les
jp
lahf
imul
xchg
aam
xor
movsl
cltd
sbb
dec
mov
or
faddl
sahf
and
mov
iret
cmp
push
arpl
out
fcomps
jmp
or
pop
movsb
adc
mov
cmc
inc
dec
insb
imul
pusha
jno
jmp
cmc
lcall
cltd
xor
and
lcall
pop
adc
cld
addb
inc
into
jp
pusha
push
sar
testl
adc
push
loope
mov
dec
and
fwait
arpl
sub
outsl
pop
aad
xlat
add
xchg
popf
clc
inc
loopne
ljmp
bound
jne
mov
inc
push
mov
jno
push
sbb
adc
outsb
or
jl
push
out
xor
inc
sub
jmp
fiaddl
das
push
mov
cmpsl
mov
sbb
cmpsl
pop
cmp
sub
fiadds
loop
pop
push
fisttps
stos
daa
push
or
popf
rcll
mov
dec
adc
dec
pop
aam
jbe
test
push
mov
inc
aad
int
cltd
lods
mov
mov
push
pop
jae
out
cmp
pusha
sub
je
in
and
rcr
and
pop
mov
in
test
out
mov
rorl
testl
sbb
sahf
pop
testl
test
xchg
sbb
sbb
adc
jbe
imul
leave
divl
stc
mov
dec
popa
movsl
inc
loopne
xor
nop
add
repz
mov
call
mov
out
mov
in
pop
add
dec
cmpsb
sbb
loop
js
mov
sbb
popa
sbb
mov
incl
iret
pop
dec
xchg
jae
cmp
dec
hlt
push
arpl
mov
lods
imul
sub
jnp
pop
ret
loope
out
test
cs
xchg
mov
out
pop
push
out
mov
cli
mov
adc
cmc
mov
inc
sub
dec
ret
mov
into
out
cmp
aam
repz
mov
cmp
iret
repnz
out
pop
sub
stc
mov
pop
nop
mov
sbb
sub
push
xchg
icebp
enter
pusha
orb
aaa
inc
std
mov
push
into
cs
notl
mov
loopne
gs
jle
xchg
jecxz
push
daa
pop
popf
jno
mov
pop
lods
imul
cltd
jle
mov
mov
outsb
add
mov
cmp
leave
pop
lods
pusha
mov
shll
cwtl
lods
mov
mov
repz
fldenv
out
dec
dec
out
inc
xor
cmp
mov
pushf
out
popa
js
ret
in
jne
push
repz
sti
out
sbb
cmpsb
nop
jle
mov
add
in
pushf
xchg
test
es
mov
inc
jnp
gs
add
jo
les
inc
push
movsl
mov
mov
in
mov
sub
sti
sbb
add
pop
lret
cmpsb
shl
sub
push
jbe
and
lret
std
mov
mov
cmpsb
imul
jle
jo
adc
in
pop
and
and
dec
stos
push
mov
cmp
push
jbe
jmp
pop
int
movsb
inc
adc
or
movsb
call
jmp
lea
btc
lock
js
sahf
inc
popa
sbb
sbb
out
and
jle
inc
test
cmpsb
fcomps
movsl
jmp
cmp
cmpb
test
mov
stos
pop
xor
out
xor
cli
jo
fisttpll
add
mov
addr16
enter
xchg
pop
mov
popa
inc
mov
pop
pushf
cmpsb
xchg
cmp
fs
adc
mov
aaa
xor
and
or
mov
mov
rclb
add
cld
insb
and
jne
in
sbb
daa
dec
shl
or
ret
ss
outsb
push
lods
inc
or
push
lods
push
int3
lea
mov
xor
out
adc
sbb
mov
or
xchg
inc
adc
jp
and
mov
insb
mov
mov
pusha
icebp
push
subl
hlt
mov
mov
loopne
xchg
stc
rclb
pop
pop
dec
cmc
cmpsl
and
test
add
xchg
enter
push
loopne
test
mov
aam
ss
shrb
addr16
or
lea
pop
mov
cwtl
jo
test
enter
jmp
pop
out
fcoml
sbb
test
aad
mov
jb
push
pop
enter
jp
shlb
in
lret
xor
push
xlat
inc
sahf
ret
outsb
addr16
lahf
jns
lret
negl
mov
pop
cmc
fnstsw
adc
jg
sub
leave
xchg
pop
fwait
mov
dec
pop
fisttpl
xor
pusha
adc
addr16
ss
jl
mov
mov
popa
dec
into
test
out
out
jbe
in
mov
mov
mov
and
test
dec
out
inc
in
sub
shrl
xchg
cmp
inc
repz
pop
jmp
push
push
xor
pop
lods
nop
loope
out
push
dec
jmp
in
add
sub
enter
lahf
xchg
jnp
stos
mov
mov
mov
jo
out
dec
adc
xchg
xor
push
mov
push
inc
out
scas
sbb
xor
push
cmp
lea
std
and
and
loopne
inc
inc
cmp
push
mov
sbb
lahf
out
fdivrl
pop
sti
mov
in
sti
mov
lcall
pop
xchg
pop
add
xchg
inc
lock
pop
mov
jno,pt
dec
fistpll
mov
out
jne
or
sbb
in
add
ror
mov
mov
out
shr
aaa
or
lea
sub
cmp
sahf
ficomps
inc
push
mov
xchg
pop
pop
dec
xchg
jg
jle
sbb
imul
fidivl
gs
push
push
rolb
cld
gs
data16
sahf
sub
and
inc
sub
and
ret
pusha
pop
cmp
popa
outsl
or
pusha
mov
stos
pushf
out
inc
int
shrl
mov
mov
in
out
mov
sbb
in
add
or
fistpl
fnstsw
repnz
pushf
lret
mov
cmp
pop
xor
test
jo
pop
mov
gs
pop
ficoms
mov
dec
adc
and
mov
out
jp
lret
pop
pop
insl
leave
xor
pusha
xchg
mov
adc
in
push
push
int3
lret
sbb
fs
daa
mov
rclb
push
mov
and
cmp
clc
jnp
inc
data16
sub
ljmp
mov
stos
pop
or
push
int3
data16
repz
sahf
pop
sub
lret
push
inc
roll
sbb
xchg
jp
push
push
cltd
insl
fstps
lds
pusha
daa
stos
mov
cmp
cs
pop
sbb
dec
push
mov
mov
push
mov
cmp
cmp
add
mov
aad
imul
int3
push
jg
push
movsb
mov
and
cmp
dec
incl
or
mov
leave
mov
stos
pop
sbb
popf
test
and
dec
mov
pushf
adc
push
adc
and
in
jcxz
mov
or
jnp
push
stos
and
sahf
mov
sub
idivb
jae
pop
inc
fs
and
fsts
push
jb
aam
es
iret
stos
push
cmpb
mov
xorl
mov
sahf
push
cld
cltd
pop
bound
mov
leave
dec
dec
cmp
lcall
hlt
sub
mov
mov
mov
inc
in
xor
xchg
cmovs
jle
jmp
pop
push
xor
xor
sbb
mov
idivl
or
movsl
loopne
pop
andb
repnz
mov
out
sub
mov
jg
repz
xor
cmpsl
push
mov
adc
push
add
mov
mov
dec
test
xchg
lret
lea
mov
jne
pop
pop
mov
cmc
cli
adcl
testb
dec
fmul
out
add
cmpsl
ret
stos
imul
mov
lods
cwtl
jb
scas
push
jo
stos
push
shll
and
inc
dec
out
lahf
fwait
mov
xchg
int
pop
outsl
mov
pop
xchg
movsb
cmp
pop
cmp
push
ja
pop
and
ljmp
and
mov
xchg
es
inc
mov
int3
xchg
mov
adc
insb
mov
cltd
out
xchg
jne
mov
jo
mov
ret
sub
cmp
es
and
out
or
test
stc
cli
hlt
outsb
mov
pop
or
pop
in
out
fsubrs
adc
mov
push
push
outsb
loopne
jle
stc
push
dec
xchg
pusha
inc
repnz
or
inc
jbe
xor
mov
lret
xor
sub
fwait
jo
das
ds
xor
sbb
push
mov
cmpsl
ds
pop
dec
das
hlt
cwtl
je
stos
pusha
mov
pop
enter
pop
xchg
push
mov
repz
enter
add
je
addl
sub
jne
subb
mov
shlb
insb
aaa
mov
xor
mov
sub
mov
pop
je
out
loop
xchg
mov
push
add
sbb
adc
fildll
jge
cmpl
aaa
mov
loopew
xchg
cmp
addl
mov
dec
out
ret
jecxz
xchg
inc
dec
pop
mov
dec
mov
dec
insb
sbb
and
int3
icebp
jae
daa
sbb
es
aas
add
jl
repz
mov
fprem
jnp
add
adc
lods
add
sub
in
mov
sarl
sbb
xlat
push
in
inc
jge
cs
mov
mov
in
lods
cmpsb
mov
ljmp
cwtl
gs
sahf
loopne
outsl
xchg
pop
mov
push
mov
mov
sub
pop
xor
push
dec
add
aad
ja
je
xchg
andb
jge
popa
inc
fxch
xchg
inc
mov
out
div
push
jl
fbstp
mov
nop
popa
add
pop
inc
or
ja
leave
in
mov
xorl
push
and
inc
and
jmp
sub
pop
xor
rolb
and
sbb
inc
aad
pop
jp
jno
fistpl
push
sub
mov
xor
repz
out
out
leave
loope
fdiv
inc
mov
add
movsl
adc
adc
repz
mov
loop
stc
je
add
ret
push
fld
sbb
mov
test
xor
sbb
in
out
stos
sub
or
mov
pop
or
push
sbb
jno
sbb
pop
mov
movsb
ret
icebp
aaa
out
mov
xchg
or
adc
xor
orl
aam
outsb
pop
arpl
push
cmpb
sbb
push
jo
pop
ss
dec
add
cmp
popa
fs
cwtl
or
xor
xor
mov
mov
shrb
mov
movsb
fistl
insl
sbb
mov
cs
or
pop
sbb
rcll
enter
jne
repnz
jl
xchg
lret
pop
jbe
cltd
daa
inc
sbb
mov
cmp
inc
mov
adc
xorl
repz
jmp
jne
lock
sahf
mov
shlb
les
movsb
sahf
push
pop
pop
inc
leave
xchg
push
aas
pop
es
push
xor
outsb
xchg
sub
add
mov
outsl
add
sbb
inc
push
jnp
pop
test
jmp
ljmp
in
add
inc
push
adc
ss
sahf
mov
ds
jbe
sub
push
pop
dec
add
dec
pop
cmp
xorb
movsb
ja
mov
mov
and
js
loopne
or
sbb
sub
rorl
out
xchg
jnp
jns
lret
lods
mov
aad
mov
mov
cmc
pop
mov
mov
in
shll
int
mov
nop
js
int3
or
shlb
sub
loopne
fstl
nop
jecxz
pop
punpckldq
xchg
xor
and
jb
add
mov
scas
bound
stc
pop
mov
dec
mov
pop
or
icebp
sub
sahf
mov
jecxz
lret
push
sti
mov
and
xchg
cmpsl
or
sub
xchg
push
pop
hlt
push
mov
push
or
jne
mov
pop
testb
fnsave
hlt
jo
mov
mov
push
std
pop
pop
pop
jle
cmpsl
std
outsl
outsl
sub
aas
shlb
lds
jb
pop
inc
dec
sbb
add
sahf
jb
xchg
clc
pop
loop
xchg
repnz
fldl
arpl
out
push
push
add
test
adc
or
mov
out
pop
pop
jbe,pt
xor
xchg
xor
pop
icebp
cmp
sub
adc
xchg
mov
loopne
and
insb
addr16
mov
pop
dec
mov
mov
push
or
mov
adc
jle
out
leave
cmp
das
xor
pusha
arpl
dec
xor
in
sub
jge
lcall
fidivs
out
jecxz
outsl
cmpl
xor
mov
stos
cltd
out
ljmp
enter
dec
push
mov
in
cmpsb
repnz
dec
dec
shr
arpl
fldenv
mov
mov
xor
lcall
fcomip
push
pop
cld
stos
sub
jns
dec
mov
push
add
test
sbb
in
push
dec
pop
lea
out
cmpsb
into
pop
jno
sub
lcall
inc
loope
loop
pop
je
cmpsb
pop
lret
cmp
scas
pusha
lret
push
dec
cmp
push
dec
es
loopne
add
into
push
sub
xchg
mov
and
sbb
out
xchg
inc
pop
push
inc
pop
and
mov
cmp
out
fs
fstpl
sahf
pusha
mov
hlt
adcb
out
push
lods
popa
mov
pop
push
mov
rol
mov
ds
and
mov
and
adc
jb
cwtl
pop
mov
jne,pn
ja
pop
inc
mov
shll
xor
pop
or
outsb
ffreep
push
xchg
sub
cmp
std
cmc
es
mov
and
dec
mov
xchg
lods
push
inc
pop
jge
xor
ficomps
stc
mov
mov
outsb
bound
dec
mov
cmpsl
or
mov
mov
pusha
ljmp
push
add
mov
xor
cmp
cs
inc
jmp
xor
mov
add
das
out
cmp
dec
jg
add
popa
gs
pop
mov
or
call
scas
int
or
push
sahf
popa
js
mov
jb
sti
jns
inc
mov
inc
add
mov
jns
xor
in
cmp
lock
and
cld
bound
pop
insl
mov
push
push
pop
and
fmulp
in
outsl
out
out
jge
sub
ljmp
clc
sahf
ss
aaa
ds
mov
and
sbb
dec
sub
jb
sti
fstps
or
xchg
push
mov
sbb
mov
movsl
cmp
shll
mov
out
jne
mov
mov
mov
xchg
pop
jg
mov
xlat
fimuls
xchg
push
add
xchg
push
imull
mov
into
das
sub
mov
int
js
pop
stos
dec
icebp
movsb
jl
adc
divb
and
pop
mov
add
xor
out
fisttps
sti
lock
add
dec
mov
xchg
test
sbb
or
cmpsb
add
repnz
push
sub
push
decb
pop
ss
loopne
outsb
mov
dec
iret
out
in
or
pop
pop
mov
outsl
push
imul
adc
in
cmp
jle
imul
sbb
lahf
or
out
ds
cltd
mov
punpckhdq
and
popf
movsl
push
imulb
je
std
sti
and
push
dec
jp
les
mov
add
negl
fs
adc
fldenv
inc
cmp
dec
testb
popa
insl
push
xorb
push
jne
out
add
fistps
inc
xchg
mov
ljmp
mov
addr16
mov
xorb
pop
push
push
lret
push
cmc
incb
and
mov
mov
xor
test
mov
mov
adc
stos
lret
repnz
out
inc
xchg
adcb
and
jge
or
js
push
push
sbbl
pop
nop
mov
xchg
pushf
data16
and
push
pop
and
add
rorb
test
cmpsl
iret
sbb
and
jae
add
xchg
mov
sub
orb
xchg
and
sub
cmp
sar
jno
mov
sub
dec
adc
sub
push
popa
lds
sub
mov
rcll
movsb
ljmp
cmp
aaa
in
ret
lds
push
push
and
xchg
or
das
ret
pop
fisttpl
int3
mov
push
lcall
mov
jbe
lret
mov
js
and
pusha
xchg
cmp
mov
sbb
in
shll
arpl
aad
sbb
popa
and
lret
or
push
cmp
jecxz
aas
push
dec
pop
in
stos
arpl
loope
mov
xor
pop
stos
outsl
shlb
pusha
mov
aas
out
xor
imul
inc
mov
inc
or
repnz
hlt
mov
jno
push
and
test
and
cmpl
fsts
or
dec
ret
xchg
popa
add
lcall
shlb
mov
arpl
add
ja
pop
scas
ret
loopne
repz
mov
outsb
push
mov
push
pop
or
jmp
and
insl
pop
pop
push
bound
movsb
out
aad
mov
pop
stos
lods
xor
xchg
shlb
jnp
xor
inc
mov
shrb
mov
mov
in
pop
imul
enter
and
dec
loope
arpl
dec
fwait
aaa
push
popa
int3
xor
ljmp
sbb
jecxz
pop
jle
xchg
xchg
arpl
xchg
jecxz
iret
dec
imul
inc
scas
dec
pop
clc
shl
or
push
push
popa
std
out
imul
enter
or
stc
pushl
dec
lret
js
out
add
loope
xlat
xor
std
packssdw
aaa
jl
mov
lock
mov
sbb
aad
mov
loopne
dec
push
out
adc
aas
cmc
in
flds
mov
jno
dec
inc
fildl
in
pusha
lock
mov
adc
or
push
add
sub
dec
pop
jg
leave
movsl
or
pop
sahf
or
sbb
pop
cmpsl
std
aaa
jo
out
pop
lock
mov
or
pop
cmpb
jns
stos
or
fmuls
in
xor
sub
jno
sbb
mov
aam
icebp
mov
insl
outsl
pop
out
test
mov
and
jecxz
pusha
sbb
clc
xchg
xor
sub
stos
add
popa
loop
jmp
das
ja
lock
mov
fcmovu
dec
adc
popa
cmp
jge
sbb
jmp
mov
cwtl
inc
mov
pusha
lods
mov
test
out
lods
outsl
test
cld
sub
and
lods
popa
push
mov
popa
dec
pop
std
inc
jne
mov
out
inc
adcl
xor
outsl
sub
jo
xchg
adc
aas
pop
mov
mov
jmp
mov
in
cs
cmp
test
mov
adc
fmull
dec
push
xor
shlb
sahf
xor
cmp
jns
pop
dec
insl
int
push
inc
aam
test
sarl
cmp
lea
fsub
dec
pushf
adc
jae
mov
or
roll
sub
pop
pop
jb
xor
xchg
std
jbe
sbb
sub
jle
or
cmc
jns
mov
or
dec
mov
pushf
out
aaa
xor
jb
movsb
sbb
sbb
xor
xchg
mov
adc
call
mov
es
mov
rcl
mov
pop
call
jnp
xor
loope
js
and
pop
fdivs
dec
mov
or
or
lock
jecxz
mov
xor
lods
in
popf
cld
add
or
pop
xor
arpl
in
es
add
xlat
add
fstl
adc
and
and
and
ficoms
mov
into
ljmp
pop
add
xor
scas
or
sahf
rcr
dec
jnp
dec
push
pop
mov
lds
pop
call
nop
or
mov
scas
pop
jge
loope
gs
in
nop
pusha
data16
jle
mov
es
aam
fidivs
loope
enter
mov
stos
xor
fwait
pop
inc
pop
enter
jb
jbe
pusha
lock
dec
jecxz
inc
ret
push
repnz
mov
pop
mov
pop
insl
pushf
outsl
sbb
or
in
xor
pop
pop
sub
mov
push
sahf
movsl
nop
pop
jmp
jne
xchg
sub
mov
or
cld
mov
out
add
and
mov
jg
cpuid
pop
shrb
sub
sub
mov
jns
sbb
xor
es
fwait
push
lods
inc
test
pusha
test
or
leave
outsl
int3
add
adc
or
sub
mov
addb
push
enter
mov
test
imul
xchg
sub
outsb
push
push
cwtl
inc
mov
pop
cmpsb
outsb
arpl
rcrb
inc
aaa
in
adc
shrb
sti
cmc
sahf
and
mov
pop
call
sarb
out
dec
dec
inc
sbbl
outsb
aaa
loope
das
je
das
cli
shrb
fldenv
mov
jnp
mov
repz
inc
mov
jp
or
rcl
jl
inc
popa
or
mov
sti
cmp
jno
movsl
mulb
mov
pop
repnz
jg
push
cwtl
and
fwait
cmp
sbb
jg
pusha
sarb
xor
cli
fmuls
inc
out
fucom
jb
add
arpl
xlat
loopne
inc
mov
outsb
push
popa
mov
mov
push
and
cmc
data16
out
js
dec
aas
mov
loop
jp
ss
pmullw
fistps
shll
loop
xchg
out
sub
repnz
push
in
mov
repnz
jmp
in
btc
leave
or
test
rolb
pop
out
out
lods
dec
jg
fstp
out
shll
sbb
sub
and
ja
push
enter
loop
add
shll
ljmp
repz
xchg
scas
mov
shl
sub
lret
and
pop
and
std
adc
xor
xor
mov
into
out
orl
test
lret
mov
mov
popa
mov
aam
outsl
out
loop
pusha
scas
jge
imul
push
test
mov
cmp
dec
cmpsb
sbb
enter
rorl
ret
mov
scas
jb
out
cmpsb
cmp
sub
stos
notl
stc
inc
pop
mov
mov
mov
xor
dec
pop
xchg
insl
orb
cwtl
pusha
mov
repz
in
jnp
or
out
pusha
inc
cmc
push
enter
out
dec
lock
jle
mov
mov
xchg
xor
push
sub
fnstenv
xor
ret
pop
add
sbb
mov
loopne
mov
pusha
out
sahf
mov
cmp
imul
call
call
dec
xchg
sbb
es
repz
mov
xor
fsubrl
vaesenc
xor
mov
por
sarl
pusha
inc
adc
repz
pusha
mov
addr16
or
loope
aad
inc
mov
lods
out
sub
pop
cmp
and
insb
enter
mov
nop
divl
cld
aad
jle
mov
aaa
out
and
idiv
pushl
sbb
mov
fisubs
add
addr16
sti
pop
pop
pop
popf
jne
add
outsb
popa
xor
ljmp
fdivl
pop
call
add
jne
cmp
out
ljmp
cld
stos
sahf
lea
sub
bound
push
sub
enter
mov
push
jne
pop
pop
jg
das
add
repz
cmpsl
int
loopne
dec
lcall
ja
stc
pusha
adc
cmpsl
aas
inc
cwtl
sbb
push
sbb
aam
mov
pop
xor
out
orl
mov
out
es
sub
out
test
movsl
xor
push
push
xor
jl
dec
dec
fisubrl
mov
mov
jge
cmpl
lds
push
and
jae
push
fiadds
mov
jnp
pusha
dec
lret
cli
and
mov
dec
fisubrl
imul
adc
pop
pop
enter
sub
mov
js
or
stos
xchg
loopne
out
or
shr
pusha
or
movsl
shr
fwait
xchg
adc
cmp
bound
shll
fisubs
addr16
jecxz
cmp
mov
das
cmp
push
fs
decl
das
out
icebp
dec
fbld
adc
sub
and
dec
out
data16
rcrb
sub
lcall
cmp
mov
mov
pop
push
cmp
ud0
sub
repz
iret
push
popa
or
pushf
loopne
int
add
cmc
out
data16
xchg
fcompl
xchg
pop
xor
pop
or
and
clc
in
lock
mov
loopne
das
repz
call
pop
adc
and
stos
xchg
out
imul
cmp
lahf
into
addl
dec
adc
and
decl
mov
inc
inc
out
sbb
pop
lock
mov
mov
cmp
dec
cwtl
lods
xor
shrl
out
lods
ret
xchg
neg
jecxz
cmpsl
inc
stos
add
adc
jecxz
nop
jp
jmp
jae
and
bound
xlat
xchg
das
mov
repnz
push
scas
popf
xor
pop
xor
mov
push
jbe
xor
icebp
mov
ret
pop
mov
xchg
lods
insl
dec
and
pusha
jnp
or
mov
icebp
addb
push
repz
sbb
notb
push
xlat
fistl
pusha
add
aaa
in
shrl
mov
pop
popa
jno
add
out
adcb
ret
popa
pusha
neg
bound
leave
faddp
out
js
les
pop
lahf
js
in
mov
sti
leave
nop
call
dec
jl
lea
and
popa
ss
sub
icebp
mov
adc
out
in
in
out
pop
mov
sub
inc
inc
out
push
sub
sbb
xchg
xor
dec
test
popf
push
jne
mov
and
mov
mov
pop
and
inc
pop
lds
dec
xlat
out
int3
push
out
inc
imull
adc
pusha
add
push
test
inc
mov
aad
loope
fsubs
js
jmp
and
popa
popa
pop
or
out
mov
pop
adc
les
shll
push
pusha
mov
xor
mov
mov
or
mov
xchg
hlt
icebp
pop
xlat
fbld
daa
push
cmp
punpckhbw
popa
orl
cmc
movsb
or
or
and
test
xchg
pop
out
shl
xor
lods
cs
loope
and
out
pop
jge
ja
std
outsl
mov
mov
pop
adc
iret
call
or
loope
int
push
outsb
mov
dec
out
cld
ret
mov
scas
cltd
xor
fs
imul
sbb
inc
loope
cmpsb
ljmp
mov
cmp
xchg
push
add
sbb
fildll
mov
adc
jl
jmp
das
and
lds
divl
mov
add
mov
xchg
lds
inc
xchg
insb
fildll
hlt
lds
out
lods
loopne
jbe
into
pop
out
cmp
mov
negl
pop
inc
add
ljmp
std
shrl
in
dec
lret
cmc
and
jns
mov
and
sub
jb
ljmp
nop
sub
sbb
pop
jo
pusha
fidivrs
ret
pop
lods
or
aam
jecxz
xchg
add
icebp
outsb
movsb
rcr
loop
pop
push
jnp
aad
repnz
add
jbe
add
pusha
fs
jne
rolb
jmp
mov
pop
rol
dec
mov
mov
repnz
into
pushf
inc
aas
cld
pusha
cwtl
or
jne
xor
fsubr
adc
inc
mov
xchg
jge
pop
insb
shlb
repnz
dec
in
dec
pop
jbe
cwtl
je
pop
mov
out
sbb
cmp
lahf
adcb
jmp
test
push
das
mov
add
xchg
mov
mov
inc
push
cmp
pop
cmc
lcall
cwtl
xlat
sbb
loopne
icebp
add
xchg
mov
ljmp
mull
xor
pusha
incb
scas
cmp
mov
jmp
xor
push
mov
push
xchg
les
enter
pop
fwait
lods
sub
mov
scas
repz
mov
add
fmulp
or
das
mov
into
pop
or
jmp
test
jnp
or
cwtl
test
adc
or
xchg
and
arpl
push
jae
inc
enter
movsl
and
pop
xlat
cmc
clc
sub
fsubl
inc
cmp
cli
fisubl
lea
mov
or
fcompl
in
popa
aad
data16
jmp
cmp
out
push
data16
jg
mov
clc
ljmp
adc
cmp
xor
jmp
xchg
pop
rorb
mov
add
sbb
rcl
adc
xchg
sbb
jb
pusha
icebp
imul
mov
pusha
mov
and
test
push
xchg
dec
xchg
rol
mov
mov
imul
mov
stc
mov
xchg
mov
mov
movsl
hlt
inc
aad
fistpll
jno
pop
pop
test
lock
mov
add
ss
stos
arpl
and
or
xor
or
fldl
bnd
jb
xchg
sub
xchg
aam
mov
js
or
inc
ret
into
mov
push
mov
pop
and
sbb
stos
mov
or
stos
mov
sub
mov
mov
popa
and
std
pusha
jl
clc
data16
cld
xchg
mov
jg
add
mov
cmpsb
test
cwtl
lahf
jno
push
cltd
push
sbb
out
jmp
xor
pop
jns
xchg
mov
jmp
in
jecxz
jae
nop
call
xor
pusha
cmp
add
rol
push
jle
imul
inc
or
xor
xor
arpl
xchg
ret
or
xorl
dec
jb
imul
ljmp
mov
popf
out
add
loop
mov
popa
cld
cmpsl
cli
pop
lret
outsb
ja
jmp
xchg
js
push
lahf
test
pop
out
push
in
push
fs
mov
imul
lcall
push
imul
xor
lcall
inc
and
pop
loope
popa
dec
cmp
mov
push
incl
pop
flds
inc
add
gs
rcrb
jmp
or
mov
inc
daa
jmp
jo
scas
scas
mov
ljmp
lcall
outsb
mov
scas
pusha
mov
sub
mov
cs
and
sub
rorl
mov
push
jmp
jp
movsl
pop
aas
loopne
sub
ret
andb
xor
inc
fldcw
pop
inc
imul
mov
sbb
xchg
popf
add
cmc
shrb
mov
mov
pop
mov
xorb
popf
add
loop
in
in
std
aas
xchg
or
push
pushf
das
jb
leave
dec
add
inc
mov
cmp
scas
push
cmp
push
adc
mov
call
cmp
es
insb
add
ss
mov
leave
fs
xor
arpl
or
out
test
add
mov
sahf
pop
push
sbb
push
mov
sahf
sbb
out
pop
cmp
mov
push
sbbb
adc
hlt
test
pop
and
loopne
divl
and
imul
adc
jbe
jo
cmp
loop
out
xor
fcompl
das
jns
insl
scas
aad
pusha
cmp
mov
mov
xchg
stc
pop
pop
add
enter
lods
mov
pop
je
or
out
push
dec
stos
mov
inc
xchg
sub
adc
xchg
mov
aas
nop
xor
pusha
inc
xor
pop
popa
xchg
jge
sub
aas
lock
out
int3
add
xor
imul
mov
lcall
enter
fsubs
jb
popf
call
not
stos
sbb
out
push
lret
cmp
cmp
add
pop
push
pop
or
xorb
call
adc
negb
and
or
jb
gs
adc
lahf
add
pop
ljmp
sub
push
jo
adc
js
and
sub
jnp
inc
enter
and
pop
aam
dec
push
in
outsb
out
cltd
cmp
inc
ret
sub
and
nop
les
jbe
pop
or
mov
inc
push
pop
cltd
in
adc
and
push
mov
jne
adc
sbb
pusha
mov
enter
aam
out
jl
insb
shrb
cmpsb
gs
jno
xor
jb
cmc
insl
mov
jmp
int
add
push
sub
mov
inc
inc
lds
out
pop
jb
or
jnp
pusha
mov
xchg
jnp
ret
mov
jb
jmp
jo
sbb
popa
icebp
test
jmp
pop
frstor
adc
jbe
inc
jne
pop
ret
mov
mov
orl
and
out
ret
dec
rcrl
jmp
mov
out
ret
ret
arpl
xchg
adc
dec
pop
out
mov
add
arpl
paddw
and
test
pop
andb
xchg
pusha
sbb
sbb
shll
jmp
insb
je
popa
or
xchg
or
sti
leave
ja
out
and
pusha
jge
rol
xor
cmp
xor
add
dec
add
jp
leave
mov
jb
push
xchg
out
cmp
xchg
and
mov
dec
pop
push
inc
out
clc
out
pusha
fidivs
lcall
insb
out
fmull
add
ljmp
jns
stos
cmp
adc
ds
mov
lcall
loop
dec
pop
stos
cmp
out
pop
mov
cs
add
out
fs
push
cltd
fstpl
in
aas
pop
cmp
xchg
ss
pop
mov
jge
clc
cwtl
rcll
mov
ja
popa
daa
dec
mov
pop
push
cmc
cli
out
fwait
mov
sahf
and
movsb
jae
add
pop
or
pop
xchg
ja
hlt
inc
pop
or
lea
stc
pop
stos
adc
jo
inc
and
iret
mov
roll
dec
dec
or
mov
push
repz
inc
pop
rolb
into
fimuls
jnp
pusha
mov
int
mov
imul
mov
shrb
test
hlt
push
mov
jne
inc
stos
pusha
and
cmpl
sub
inc
inc
fnstcw
pop
push
cltd
mov
pop
lods
sub
ficomps
jmp
std
test
xchg
inc
inc
sub
mov
xor
mov
xchg
jle
outsb
dec
lods
pusha
xchg
mov
lods
hlt
xor
inc
adc
clc
sarb
subl
lods
pop
out
dec
lret
fistpl
cli
cmp
mov
sub
cwtl
lea
lret
adc
hlt
scas
dec
mov
sbb
leave
sub
and
jae
jl
or
mov
out
mov
jbe
push
daa
xor
imul
dec
out
mov
gs
shrb
das
in
ret
pusha
jno
push
mov
cmpsb
test
fs
test
addb
pop
out
inc
lock
mov
fs
adc
mov
adc
pop
scas
sub
pop
daa
test
mov
inc
push
pusha
scas
mov
jmp
push
int
xchg
pop
fs
pop
std
mov
mov
push
pop
push
jae
adc
jmp
pop
cs
push
mov
fsubl
xor
mov
arpl
in
stc
pop
flds
ret
sahf
jge
push
inc
into
and
popa
imul
lahf
fidivl
jnp
test
cmp
mov
loop
add
test
inc
movsl
push
fcomps
or
js
push
and
or
and
sub
inc
push
out
push
adc
sub
dec
fs
lea
dec
popa
push
cmp
out
jno
adc
mov
xchg
pop
push
data16
dec
mov
aam
fwait
das
adc
jle
jno
pusha
mov
xchg
dec
rep
lock
push
inc
add
adc
out
sub
aam
fldt
sbb
pop
out
test
dec
mov
mov
inc
fmull
popf
push
adc
sbb
ss
addl
mov
repz
pusha
fisttpll
repz
sub
and
loopne
dec
mov
push
repz
rorl
push
pop
pop
push
and
pop
cwtl
mov
mov
pop
xchg
mov
mov
cmpsb
mov
mov
jle
xor
or
cmp
fisubrs
adc
ss
fwait
cmp
aam
popa
iret
dec
mov
dec
out
out
std
dec
mov
dec
xchg
push
adc
mov
out
xor
add
pop
mov
not
scas
in
test
push
xchg
jne
js
push
mov
inc
fcmovb
repnz
lea
ja
icebp
mov
sub
lds
jmp
out
out
out
faddl
pop
adc
lret
repnz
int3
inc
fstps
enter
cmp
dec
and
rclb
out
cmpsb
mov
fs
mulb
andb
sub
imul
xchg
in
out
lea
aam
adc
or
and
in
pop
pop
inc
add
fisubs
dec
or
lahf
xor
adc
or
pushf
mov
mov
xchg
xlat
cmpb
fsubp
or
push
loopne
inc
xor
frstor
lret
pop
cli
mov
lea
stos
movsl
xchg
mov
mov
out
push
int
pop
enter
ret
mov
pop
sbb
pop
push
out
fs
mov
aas
adc
push
outsb
jbe
lods
adc
out
aam
inc
out
pop
add
xchg
cld
mov
in
add
xor
and
testl
dec
ljmp
mov
cmpsl
scas
dec
cmp
leave
fistpll
pop
out
lods
push
into
mov
sub
bound
dec
lcall
inc
sub
fwait
xor
mov
in
mov
cmp
xor
insb
shll
scas
in
stos
and
and
loope
pop
xchg
and
in
popa
xor
pop
fdivs
aam
mov
jecxz
lcall
mov
sbb
pop
push
test
jg
sahf
adc
loope
imul
pop
pushf
pop
shll
pop
xor
push
ret
cmc
adc
aad
or
jl
cmpsb
xor
pusha
popa
cwtl
insl
cmp
hlt
add
fdivrl
pop
rcrb
adc
sbbl
cmp
icebp
pop
and
js
imul
rolb
jo
gs
adc
ja
lret
aas
or
fnstcw
outsl
outsl
je
pusha
xchg
mov
adc
call
dec
out
fidivs
sub
xchg
xchg
push
mov
jnp
ret
testl
outsl
mov
lret
popa
mov
hlt
in
pop
out
fwait
cmp
gs
movsl
or
mov
xor
pop
test
pop
or
testb
cltd
push
mov
std
out
out
pop
in
jno
mov
pop
insl
push
sarl
add
pop
mov
fxam
cmc
pusha
pop
repnz
mov
mov
mov
enter
xchg
inc
jmp
sub
mov
push
jmp
pop
mov
mov
out
shll
popl
clc
ret
lahf
sub
out
mov
dec
xchg
fcompl
stc
lods
test
popa
fnstenv
ficoms
sbb
ret
aaa
insb
xchg
inc
leave
mov
data16
cmp
lret
xchg
xor
and
jo
fisubrs
push
icebp
movsb
sbb
sbb
out
xor
fisubl
push
lock
or
cs
cmpsb
outsb
inc
jns
adc
jmp
jb
repnz
push
ds
in
xchg
in
push
add
push
shll
dec
shll
and
cld
in
gs
push
jne
fidivrs
adc
cmp
push
mov
into
and
mov
out
push
lcall
mov
pop
mov
sbb
call
movsl
test
mov
mov
push
aad
cmc
pop
mov
fstl
xchg
pusha
push
xchg
cld
sbb
scas
mov
out
rolb
push
shrl
popa
pusha
mov
lods
mov
adc
jmp
push
jnp
and
mov
lods
inc
xor
adcl
cmp
into
sub
dec
out
jo
mov
and
push
xor
inc
xchg
adc
lahf
mov
icebp
push
out
pop
clc
sub
inc
mov
pop
inc
cmpsl
pop
sbb
mov
inc
popf
pop
mov
out
jp
mov
out
daa
decb
inc
call
popa
pop
sbb
sbb
mov
outsl
decl
clc
jno
add
pop
loope
fdivrs
mov
arpl
in
aas
xchg
stc
and
ljmp
mov
xor
mov
fwait
xchg
jbe
push
fwait
pop
push
mov
int
cmp
add
mov
xchg
sti
aaa
in
mov
pop
test
out
loop
push
sub
in
das
mov
ja
mov
enter
xchg
cli
cmc
out
xchg
pop
mov
adc
insl
fs
or
gs
daa
fimull
imul
arpl
mov
stc
sbb
xchg
in
jmp
out
cld
mov
jmp
sub
mov
or
pop
stc
gs
int3
mov
mov
loopne
out
fidivrs
es
mov
dec
or
cld
mov
ss
in
pop
sbb
shl
insl
dec
in
shlb
push
pop
in
pushf
jae
pop
aam
in
xchg
ja
mov
and
xor
cwtl
pop
jge
pop
popa
xchg
scas
aam
mov
push
and
cmpl
scas
xor
nop
mov
xor
lock
jl
pop
repz
in
cmp
dec
mov
push
js
mov
dec
mov
dec
stos
or
mov
sahf
cmp
sbb
lods
scas
or
pusha
mov
iret
xchg
ja
cmc
pop
rclb
dec
sahf
mov
xor
pop
scas
sub
imul
sahf
inc
mov
lcall
pop
in
sbb
out
mov
daa
lret
movsb
jle
aam
mov
lods
out
xor
sbb
xchg
adc
bound
icebp
and
pop
or
inc
cli
int
insl
pusha
or
cmp
mov
mov
mov
aad
push
cmp
sbb
cltd
push
jmp
or
push
mov
pop
cmp
push
add
or
ljmp
ret
dec
pusha
or
roll
out
shrb
imul
imulb
mov
pop
into
and
cld
mov
xor
cmpsb
dec
cmp
dec
out
hlt
jne
and
cld
sbb
mov
pop
outsl
cld
or
xchg
mov
insb
and
jmp
icebp
cmp
mov
and
xchg
test
xlat
std
in
and
negl
or
and
mov
pop
hlt
fldl
mov
add
jb
outsl
jl
aam
icebp
cmp
mov
movsl
scas
mov
aad
loope
mov
adc
out
gs
je
push
or
mov
dec
push
xlat
fistps
lods
cmc
pop
out
imul
adc
test
mov
fsub
push
int
jno
ss
shrb
mov
call
scas
mov
mov
icebp
push
lods
mov
xor
roll
out
in
mov
fucomp
mov
push
jp
imul
fcmovne
sub
mov
ljmp
xor
sti
mov
jl
addr16
rcr
fimull
lods
cmc
sbb
cmp
cmp
dec
and
cs
dec
dec
push
jno
xchg
ret
xchg
pop
aaa
fnstsw
cwtl
call
mov
rcll
sbb
dec
icebp
mov
pop
mov
xchg
push
pop
and
inc
push
ds
and
lock
mov
fimull
insl
call
or
mov
pop
push
cltd
out
xor
scas
mov
mov
pop
fbstp
lods
fidivl
bnd
fs
mov
pshufw
insb
insb
lods
iret
xchg
popf
popa
xchg
loopne
pop
in
adc
lret
cmp
pusha
jmp
rcrb
out
es
sti
jmp
movsl
cli
out
mov
fs
flds
out
mov
cmp
repz
and
jae
imul
hlt
and
insb
mov
mov
mov
jmp
and
shll
fnsave
sub
and
lret
or
addr16
cmpsl
push
and
popa
sbb
clc
inc
xchg
adc
pushf
pop
jl
sbb
fisubs
mov
jle
sub
addl
mov
or
stc
addr16
fsubrl
pusha
subl
in
sub
sbb
pop
xchg
and
push
mov
mov
repz
nop
add
aad
out
jb
pusha
inc
inc
push
mov
sbb
test
pop
jge
repz
popa
mov
sarb
pop
outsb
and
shll
or
mov
jl
in
call
mov
and
movsb
arpl
push
sbb
push
aaa
xor
sub
and
push
sbb
adc
pop
mov
mov
pop
pop
outsb
inc
mov
roll
dec
test
mov
jmp
mov
inc
lods
mov
pop
orb
pop
lret
xor
adc
push
and
call
mov
fldenv
sbb
fwait
pushf
pop
mov
aam
pop
and
aas
test
push
xchg
sbb
loopne
xor
loopne
mov
pop
push
adc
adc
divl
xchg
outsl
dec
in
push
lods
xchg
pop
adc
imul
hlt
xchg
mov
imul
inc
cmc
sbb
fldl
les
dec
jecxz
pop
ret
fistl
aaa
in
outsb
lds
decb
aaa
ds
div
dec
out
pop
mov
fwait
arpl
jmp
xor
lds
mov
xchg
in
dec
mov
popa
stc
lret
mov
adc
pusha
scas
and
sub
or
loope
mov
jge
movsb
pusha
je
aad
dec
lea
inc
push
push
add
xlat
inc
inc
pop
insl
fiadds
orb
lcallw
pop
adc
or
adc
rolb
mov
jl
insl
pop
ljmp
sub
paddq
mov
pop
mov
clc
mov
mov
sbb
into
xchg
add
xor
leave
mov
outsb
aas
insb
lea
shll
dec
sub
data16
sbb
jge
lret
mov
lret
popa
mov
push
sbb
xchg
stos
fidivs
out
lock
inc
mov
cmp
push
inc
cltd
faddl
popf
icebp
gs
ss
popa
addr16
add
and
xchg
mov
sub
sub
sbb
push
mov
dec
jne
jbe
repnz
xlat
jp
inc
mov
pop
movsl
jmp
mov
enter
test
hlt
insb
movsl
dec
push
push
lock
loopew
xor
leave
jle
mov
stos
adc
cmp
lock
pop
mov
leave
jno
adc
pop
and
pop
push
dec
in
pop
aad
lahf
mov
pop
fsubl
cwtl
arpl
nop
stos
sti
mov
sarl
mov
push
sbb
les
push
jle
in
xor
pop
andnps
into
stc
aas
lea
imul
xlat
out
subb
in
fisttpll
fcompl
stos
dec
mov
push
out
inc
xchg
mov
mov
arpl
pop
pop
cmc
rsm
pop
insb
jg
pop
push
mov
cmp
sub
mov
add
fistpl
neg
enter
popa
and
into
push
lahf
pop
fucomp
movl
fmull
push
pop
fimuls
pop
push
cwtl
sub
mov
cld
lahf
or
add
push
sbb
or
xor
fs
xor
dec
popa
ljmp
add
popf
dec
jo
and
lods
cs
dec
jno
sarl
cmpsb
jmp
sahf
fisubl
xchg
add
in
sbb
pusha
lods
dec
out
je
mov
jl
pusha
xor
outsb
cmp
pusha
into
test
imul
fists
bnd
iret
cmpsl
js
lahf
icebp
mov
mov
int
pop
adc
lcall
jmp
std
cmpb
fidivrs
add
mov
imul
frstor
jbe
adc
ja
cmp
push
out
dec
in
mov
cmp
pop
pop
and
inc
jo
or
bound
les
ficoms
popf
pop
push
pop
inc
sbb
dec
jp
mov
daa
cmc
or
std
mov
inc
les
mov
pop
xor
bound
inc
fisubrs
xchg
aam
mov
lahf
push
mov
add
jp
cld
push
and
sbb
cmpl
cmp
aaa
popa
cmp
jo
pop
inc
push
rorb
out
jo
cld
imul
pusha
in
cmp
sahf
push
adc
or
mov
jb
add
ja
xchg
je
aam
pop
ds
cmp
adc
and
or
jnp
clc
xor
adc
pop
fwait
ret
pushf
push
xchg
jo
mov
pusha
jnp
test
fcoml
in
sbbl
mov
push
mov
xchg
shlb
iret
jb
mov
gs
mov
jns
mov
or
cmc
inc
int
sbb
loopne
lods
cs
cmp
gs
popf
jg
clc
add
push
scas
lret
aaa
or
arpl
mov
sbbl
push
mov
or
jb
sbb
cmpsl
xor
adc
fsubrs
pop
cmpb
iret
pop
inc
xchg
pop
loopne
aad
sbb
push
lods
sub
mov
sahf
fdivs
xchg
cltd
xchg
pusha
or
adcb
loopne
rcr
xor
dec
jne
scas
xchg
inc
mov
out
cmc
cld
shll
mov
sar
arpl
dec
movl
lret
fidivs
mov
sahf
loopne
mov
dec
int
call
mov
das
jp
ds
cmp
lods
push
fstpt
movsl
pop
movsb
push
scas
sahf
push
dec
das
popf
pop
adc
in
or
dec
fwait
mov
push
clc
adc
jp
out
sub
xor
movsb
int3
out
cltd
lods
mov
ficoms
mov
add
sub
into
jecxz,pn
pop
loope
imul
rolb
xchg
rcr
jno
xchg
push
lret
mov
out
outsl
xchg
clc
dec
cmp
inc
xor
popa
aas
fwait
jne
cmp
lods
out
lea
jno
mov
push
out
inc
and
cltd
orb
je
xor
insb
cmp
packsswb
or
mov
inc
or
fs
xchg
pop
in
out
push
fs
inc
pop
dec
fidivs
adc
push
out
mov
cmp
xchg
ret
mov
js
fldcw
and
push
xor
insb
shrb
loope
jno
mov
in
movsb
sub
into
adc
adc
pusha
cmc
test
fucom
pop
pop
add
hlt
mov
adc
sub
xchg
cli
arpl
neg
xor
out
popa
nop
pop
jl
xchg
movsb
ficoms
subb
xor
out
mov
mov
popa
jb
mov
mov
ds
push
jg
dec
popa
dec
aas
cmp
mov
sub
cmp
dec
and
mov
rorl
pop
push
repz
and
fistps
out
addr16
js
sub
fdivr
sahf
rcrl
push
cmp
bound
and
adc
sahf
jge
push
arpl
ret
daa
jbe
cmp
push
popa
jg
dec
cld
in
pop
push
sbb
jbe
add
sub
jle
sbb
pop
jne
fisubrs
push
and
lock
adc
cmp
les
adc
mov
jbe
sbbb
xor
stc
into
sahf
cmp
or
popf
arpl
in
push
inc
popa
imul
add
mov
inc
push
xor
jns
inc
xchg
outsb
push
dec
jb
pop
xchg
pusha
cmpsl
or
cmpsb
xchg
out
shrl
cmp
jo
jbe
insl
sbb
jno
or
dec
cmp
pusha
xchg
pusha
int3
dec
lock
sub
sbb
sub
out
loope
test
mov
shl
jbe
out
cld
adc
aam
jnp
movsl
rcll
outsb
sbb
mov
or
sar
jle
inc
xor
xchg
adc
es
mov
pop
mov
inc
in
cmpsb
sub
add
int3
in
ficompl
and
pushf
es
inc
jb,pn
andb
shl
push
out
sahf
repnz
test
in
fildll
adc
insb
add
mov
jge
mov
fildl
dec
clc
sbb
addb
mov
jge
rcll
jmp
rcrb
popa
fimull
mov
adc
js
ljmp
data16
mov
loope
xor
adc
mov
mov
pusha
dec
xchg
arpl
xchg
ret
cmp
mov
inc
in
ret
xor
mov
out
lret
push
xor
test
cmp
mov
cmpsl
rclb
sub
xlat
push
inc
jmp
xor
shrb
add
jge
in
psadbw
loopne
aaa
rcrl
jg
test
adc
sahf
dec
mov
inc
pop
in
jmp
imul
mov
and
ret
adc
scas
outsl
push
leave
mov
dec
cli
cs
sub
push
nop
or
addr16
leave
outsl
test
pop
popa
sbb
and
sub
adc
data16
sub
xchg
push
pop
pop
out
imul
data16
stos
insl
pop
xchg
lock
mov
shrb
pusha
pop
jp
adc
aaa
ret
in
xchg
jle
ds
out
mov
xlat
call
xchg
flds
xchg
cmp
ja
popf
scas
push
inc
out
mov
sbb
clc
lahf
imul
test
jnp
xor
push
stos
push
repz
je
lret
insl
push
stc
xchg
adc
std
xchg
push
sbb
pop
fadd
insb
fdivrl
fildl
imul
sti
enter
sub
je
outsb
jne
sarl
pop
lods
push
sbb
or
jb
pushf
fdiv
jnp
pop
sub
xlat
das
lahf
xchg
inc
and
add
add
dec
xchg
stc
in
pusha
mov
xor
or
inc
dec
add
xlat
pusha
xchg
mov
addl
cmp
add
out
out
loope
leave
jecxz
insb
pusha
cmp
add
add
pop
lret
jle
pop
sub
mov
stos
and
xor
push
pushl
popa
insb
or
addr16
shr
pop
dec
xor
mov
mov
inc
inc
stc
in
addb
mov
sbb
cmp
and
loope
xchg
and
popa
scas
jo
jg
fsubrp
int3
in
and
or
xchg
frstor
adc
movsb
and
iret
test
rcrb
fwait
pop
lcall
jnp
mov
adc
inc
dec
mov
pop
push
lods
fsubl
pop
adc
mov
jl
test
cwtl
or
dec
push
negl
lea
dec
daa
popf
jle
loopne
mov
push
cmp
mov
jno
cwtl
fisubrl
mov
add
shl
fs
mov
dec
inc
clc
imul
jg
aas
out
mov
xor
dec
negb
loop
fidivrs
fs
mov
out
push
jnp
push
lods
inc
mov
aas
sti
sub
cld
jne
adc
sbb
sub
out
cmp
shl
in
repnz
add
fidivrl
jbe
push
dec
es
or
notb
mov
std
inc
cmp
inc
pop
push
pop
inc
xchg
push
mov
push
insb
rcl
lret
inc
or
dec
sub
cmp
les
shll
shrl
and
mov
shlb
sbb
std
in
sahf
int3
ljmp
bound
and
add
and
xchg
clc
mov
pop
mov
add
cmp
xor
add
ljmp
icebp
addb
sub
test
gs
pop
mov
dec
add
in
cmp
and
mov
out
inc
imul
test
push
movsl
notb
push
pop
jns
jbe
jno
mov
push
inc
or
arpl
jo
std
iret
mov
jmp
bound
mov
aad
in
lea
imul
pusha
and
cs
xchg
shlb
testl
sti
jnp
jp
fisttpll
imul
cmp
mov
imul
add
lds
cld
addr16
mov
xor
mulb
call
sbb
adc
dec
push
cli
outsl
out
in
mov
xor
xlat
pop
and
mov
jmp
xchg
ja
rcrl
loope
out
jnp
pop
inc
dec
pop
jge
mov
and
mov
rcrl
bound
fldenv
shrl
out
pop
jg
cmp
mov
mov
popa
xor
iret
js
cltd
and
es
fiadds
pop
int
sahf
mov
inc
les
clc
sub
dec
ljmp
lcall
arpl
cwtl
roll
call
loopne
xchg
das
shlb
fisubs
mov
arpl
cmc
jecxz
popa
mov
cmp
mov
pop
push
repz
jg
inc
mov
pop
out
gs
or
mov
mov
push
das
or
test
std
fistpl
add
sub
add
push
or
lcall
stos
lods
pusha
cmp
sbb
and
movsb
pop
lret
jge
insl
mov
pusha
mov
faddl
ficomps
pop
or
mov
mull
lds
push
gs
in
jge
sbb
rol
outsb
mov
mov
mov
test
dec
movsl
xor
and
xor
insb
pop
pop
adc
fcmovb
mov
outsb
or
mov
pop
sub
cs
add
ret
out
fisttpl
adc
popa
mov
adc
rcrb
inc
imul
outsb
jg
popa
add
jmp
movsl
das
mov
sbb
cs
jne
int3
pusha
scas
enter
add
call
pop
push
sahf
sub
add
pop
cwtl
adc
add
test
pushf
jmp
push
inc
fstl
push
out
call
enter
lea
mov
adc
adc
jb
xchg
push
xchg
and
shlb
mov
inc
popa
xchg
ja
out
xor
js
out
dec
or
or
hlt
pop
dec
int
sub
mov
xor
ret
outsb
fidivrl
rorl
pop
rcll
adc
pop
jmp
insb
lret
test
pop
jmp
cmp
addb
shr
out
in
lods
xchg
cs
push
and
imul
cli
rol
mov
subl
dec
in
pop
mov
push
bound
stos
daa
jbe
cmp
jp
jnp
xchg
and
call
adc
popa
aas
aas
inc
sub
mov
rcr
dec
xchg
adc
mov
add
xor
andb
fwait
daa
sub
push
xor
test
mov
in
in
sub
outsb
pop
push
out
call
push
outsb
mov
repz
lahf
cs
in
jp
in
subb
inc
dec
es
mov
pop
inc
mov
xchg
adc
faddl
pusha
inc
es
sbb
mov
lock
jmp
lock
pusha
sub
pop
enter
stc
arpl
push
int
addb
fistpll
popa
cs
pop
mov
mov
push
rcll
push
ja
sub
lret
mov
pop
dec
stos
sahf
cld
inc
neg
xor
icebp
jl
sub
push
in
addl
push
sbb
mov
pop
jns
cmp
pop
js
or
lods
daa
in
cmp
push
inc
pusha
mov
test
pop
int3
pop
push
mov
adc
out
pop
inc
mov
inc
popa
push
jmp
loopne
mov
mov
sub
cld
jnp
test
stos
out
subb
clc
pusha
adc
fldcw
push
xchg
dec
adc
int3
out
shlb
mov
ljmp
xchg
mov
dec
pop
dec
mov
xchg
scas
insb
cltd
int
cs
out
add
in
mov
sbb
mov
adc
and
pushf
xchg
and
enter
daa
jecxz
in
shlb
insl
popf
mov
mov
jp
inc
mov
xor
sbb
cmp
pop
jge
pusha
outsb
xor
out
ljmp
dec
out
ds
imul
test
nop
pop
into
xchg
xor
cli
mov
pop
in
inc
fdivr
js
out
adc
xchg
mov
mov
ss
loop
pop
pop
xor
sub
pop
mov
dec
mov
mov
sbbb
getsec
jmp
repz
adc
popf
negl
mov
sub
jae
mov
out
lods
adc
dec
insl
mov
popa
lods
sub
xor
stos
mov
mov
data16
pusha
and
jnp
pop
ljmp
mov
loop
mov
mov
push
xor
pop
int
lock
inc
mov
imul
mov
mov
leave
fiaddl
sbb
adc
and
fld
or
xchg
and
dec
jbe
insb
xchg
xchg
loop
leave
js
fsts
mov
and
shlb
repnz
ljmp
pusha
int
sub
out
xor
out
clc
mov
xor
pop
insl
cmp
jns
outsb
arpl
dec
jae
and
aam
cmpsl
inc
add
stos
outsb
pop
xchg
or
and
out
jno
ss
or
outsl
jmp
pusha
sbb
sarl
or
and
fildll
pop
pop
sub
inc
ret
jae
test
call
cmp
mov
mov
or
stos
lods
cmp
movl
sahf
and
mov
or
dec
xchg
pop
or
xchg
aaa
outsb
pop
mov
and
jo
mov
fstps
add
adc
mov
jbe
inc
cld
fdiv
scas
cli
gs
notb
sub
ret
popa
xchg
hlt
jnp
test
add
jmp
adc
out
add
lcall
stos
cwtl
pop
stos
cmp
xor
lods
cwtl
imul
das
fdivrl
inc
mov
pop
fsubrs
lret
inc
jne
outsb
andl
cmp
subb
adc
sub
fs
inc
scas
aaa
adc
test
pusha
sub
adc
gs
in
and
jle
imul
jae
loop
mov
mov
push
es
adc
adc
sarb
mov
sub
fldl
xchg
lret
lock
dec
into
in
xor
mov
test
jno
pop
jle
cmc
push
sahf
test
pop
jns
cmp
mov
insb
dec
nop
andb
ret
pop
dec
inc
test
test
and
leave
pop
test
sub
popa
mov
inc
into
aad
arpl
out
jbe
add
daa
movsl
mov
shll
stos
or
fnop
in
jno
jmp
mov
push
insb
pusha
mov
scas
shr
pop
jl
stos
mov
jge
adc
mov
or
hlt
and
shlb
rclb
xchg
mul
cmp
push
pop
scas
out
push
andb
int3
pop
dec
in
mov
lods
shll
or
call
mov
xor
int3
ljmp
mov
test
ss
filds
lock
aas
test
adc
lahf
fs
loope
shrb
xor
pop
out
or
adc
jns
adc
pusha
lods
pop
cld
mov
out
in
movb
frstor
ficompl
fisttpll
xor
mov
test
movsl
notb
popa
inc
lret
xchg
insb
mov
pop
hlt
and
rcrb
mov
push
fiadds
add
sub
jo
sub
das
incb
out
sub
into
mov
mov
add
test
push
fldt
pop
inc
cmp
jb
fisubs
hlt
stc
sbb
out
outsb
push
cli
pusha
xchg
pop
sbb
mov
xchg
cmc
xor
aam
loop
inc
popa
pop
das
and
icebp
imul
arpl
add
mov
mov
jl
dec
test
inc
or
out
pop
sbb
das
out
xchg
pop
add
pusha
cmpsl
mov
shr
out
sarb
dec
mov
testl
out
push
mov
add
insb
push
lods
or
out
dec
ja
sbb
or
jno
mov
mov
cwtl
pop
adc
push
jnp
std
lods
mov
movsb
mov
imul
out
add
test
dec
fs
mov
call
fdivrs
mulb
loopne
lds
out
push
pushf
push
scas
mov
sbb
fstpl
ficoml
xchg
aam
dec
hlt
popf
add
push
lahf
test
sbb
mov
int3
sbb
aaa
mov
mov
popa
xlat
stc
mull
or
add
jne
sbb
inc
mov
mov
mov
jl
out
test
ret
mov
mov
scas
push
test
push
stos
ljmp
movsb
jmp
push
addr16
loope
in
pusha
sar
shlb
sub
or
sub
add
scas
dec
aam
arpl
or
adc
dec
int3
mov
out
dec
mov
xchg
outsb
mov
test
lods
xchg
pusha
push
hlt
ljmp
jge
mov
pop
sbb
mov
pop
lea
call
aas
and
mov
and
out
xchg
push
sbb
mov
hlt
mov
mov
jg
jle
dec
push
popa
fisttps
push
and
lods
xchg
xor
xchg
jno
pusha
sub
lea
mov
inc
cld
mov
popw
in
push
out
ret
xchg
push
popa
dec
jle
in
xchg
mov
jb
testl
fwait
inc
jp
xor
lret
fsubrs
pop
out
dec
pop
cmp
insb
popa
cmp
xchg
inc
out
and
xor
jno
popa
sbb
mov
or
insb
sahf
mov
push
mov
push
pop
cmp
in
mov
lock
push
ficomps
push
das
push
xchg
into
xchg
dec
inc
inc
mov
cmp
inc
insb
add
mov
pop
popa
mov
movsl
push
and
sub
fisubrs
jnp
test
nopl
add
enter
and
push
jle
mov
jb
cmp
pop
add
pop
add
idivl
pop
scas
mov
and
out
dec
cmp
frstor
pusha
mov
push
insb
mov
inc
pop
dec
mov
cs
push
lret
jo
sahf
pop
or
sbb
xor
bound
rcll
ss
clc
shlb
mov
jge
out
push
xor
ret
jge
repz
outsb
push
into
jo
jmp
add
pop
mov
sub
pushf
imul
fimuls
xchg
pop
adc
or
add
mov
cli
pop
mov
or
ret
sub
stos
insb
jmp
test
mov
rol
pusha
outsl
fbld
in
sti
mov
out
push
adc
pusha
neg
pusha
adc
stc
sbbl
mov
xchg
popa
in
cmp
stos
out
pushf
mov
movsb
jmp
movsl
outsb
fdivrl
out
mov
imul
addr16
jmp
push
push
scas
or
addb
stos
or
mov
aad
sbbb
test
cld
fistps
sub
cmpsl
into
jns
jo
lock
jle
pusha
adc
cmpl
cmp
emms
or
adc
inc
rol
int
shrl
lret
mov
sti
add
lods
scas
stc
out
lock
inc
push
dec
aas
repnz
mov
test
push
xor
xchg
dec
jne
fdecstp
out
mov
push
pop
inc
data16
push
xor
adc
or
out
arpl
inc
mov
pop
aaa
mov
push
pusha
aas
adc
sti
shll
cmp
gs
xchg
pop
mov
movsb
repz
lret
mov
std
sbb
mov
mov
pusha
lret
shlb
hlt
pop
out
mov
stc
rorl
pop
icebp
xchg
popa
mov
push
push
clc
cmpsb
sbb
sahf
jae
mov
imul
inc
mov
sub
out
mov
rorb
mov
hlt
xchg
ret
xor
arpl
push
iret
xor
aaa
jge
outsb
pop
xor
frstor
aaa
inc
imul
imul
mov
jp
pop
cltd
pop
cmpsl
incb
mov
mov
xchg
jo
popf
out
mov
loop
push
scas
mov
sbb
xor
push
int
xchg
jmp
cli
in
scas
jl
psllq
push
pop
mov
and
xorl
mov
aas
xchg
sub
sti
pop
push
clc
push
adc
and
or
pushf
and
test
jmp
jp
mov
mov
bound
test
cmp
pop
and
and
add
mov
pusha
aas
lods
ja
cmp
pop
lea
add
nop
jp
popa
xor
cmp
fsubp
push
pop
jp
pop
mov
flds
pusha
and
ljmp
inc
mov
out
loop
cltd
sbbb
jae
sub
call
mov
int
arpl
in
mov
inc
inc
mov
inc
fsubl
inc
adc
lcall
sbb
mov
fs
and
aam
aad
int
clc
cmp
daa
cmpsl
or
push
lock
outsb
mov
pop
movsb
jno
xor
push
lock
jmp
and
pop
loope
push
mov
cmp
and
sub
aam
rcr
out
ja
adc
mov
mov
xchg
push
loope
inc
in
jl
xor
push
push
fstl
mov
enter
jo
out
jp
addr16
cmp
sbb
push
jbe
ja
pop
jb
xchg
push
or
pusha
mull
mov
cld
adc
cmp
movsb
add
xchg
popf
mov
mov
cmp
mov
and
push
ja
pop
in
insl
pop
sahf
mov
inc
cmp
or
or
loop
pop
push
push
movsl
daa
add
stos
and
cmp
int3
dec
std
idivl
orl
adc
mov
rolb
fistps
ja
sbb
mov
mov
push
mov
roll
in
pop
mov
sbb
fildl
add
mov
push
jecxz
out
and
shrl
les
imul
sahf
sub
inc
fs
prefetch
sbbl
adc
jg
pop
add
leave
push
test
xchg
or
rcrl
mov
insb
imul
pop
test
gs
mov
stc
enter
pusha
lods
enter
hlt
fists
divps
push
ja
push
cltd
sbb
pusha
mov
cs
out
lahf
shll
daa
mov
mov
lret
jmp
fistl
lea
cwtl
insb
add
xor
mov
repnz
lock
insl
scas
movsb
push
sbb
xor
testb
push
gs
pop
mov
pop
mov
xchg
xor
push
push
pusha
ret
imull
or
fwait
xchg
leave
xlat
cmpsl
out
call
mov
pop
dec
sub
push
mov
xchg
pushf
mov
pop
repz
jae
or
cmp
xor
ja
pushf
and
out
imul
jecxz
lea
arpl
pop
cmp
mov
inc
test
ret
stos
jne
movsl
mov
icebp
push
push
cmpsb
dec
adc
int
dec
ja
pop
call
sbb
popf
pusha
clc
mov
dec
cs
add
jg
rorl
leave
mov
iret
push
inc
jmp
pop
dec
sbb
pushf
out
sbb
loope
add
add
lahf
jmp
repz
mov
xor
andl
test
pushf
push
pop
popa
inc
mov
jbe
push
out
in
out
daa
out
jmp
dec
pop
outsb
repnz
jmp
dec
sbb
jne
add
push
imul
pop
pop
xchg
hlt
scas
scas
pop
jecxz
andb
loop
rclb
add
adc
out
pop
and
lret
pop
jb
clc
xchg
add
cmp
xchg
call
mov
xchg
mov
cmpsl
add
pop
mov
ds
fimull
push
cmp
dec
jo
push
push
rclb
jle
lcall
mov
xchg
or
mov
cmpsb
cmp
scas
push
and
and
sbb
pop
jge
popf
out
mov
push
es
sarl
fsub
popa
daa
sub
out
fwait
mov
sub
push
cmp
test
push
aam
fwait
pop
rolb
mov
pop
xlat
mov
mov
adc
outsl
pop
sbb
ficoms
out
ss
leave
data16
mov
xor
xchg
int
cmpsb
or
jge
sbb
fcomps
out
add
repz
std
cmp
dec
mov
push
xchg
or
push
cmpsl
and
cwtl
pusha
rorl
int3
mov
fs
daa
ds
xchg
repnz
push
or
iret
aas
into
xchg
xchg
xor
pop
jbe
cltd
cmc
or
pop
addr16
movsl
sarl
aaa
pop
push
or
dec
movsb
jns
pusha
xor
add
mov
sbbl
mov
pusha
xchg
add
fnstcw
rorb
shll
lods
repnz
pop
or
hlt
sbb
loope
cld
mov
adc
sub
inc
mov
mov
hlt
outsb
pop
jae
jecxz
popf
mov
pop
xchg
pop
sub
iret
push
rcll
pop
outsb
nop
mov
and
ja
xor
push
addl
icebp
pop
fs
lods
sbb
shl
lods
mov
cmpl
jo
jmp
mov
inc
add
inc
dec
add
pop
cmp
mov
mov
sarb
rcr
std
push
movsl
fisubl
imul
stc
pop
sub
inc
out
cmp
pop
push
mov
pop
std
sbb
dec
popa
test
rcl
push
mov
xor
mov
mov
lods
push
mov
mov
filds
out
cmp
cs
cmpsl
xlat
jno
test
push
push
mov
push
pop
addl
mov
mov
jmp
jnp
push
ror
pop
sub
and
jmp
std
pusha
dec
jecxz
adcb
adc
inc
mov
inc
shr
inc
fnstsw
cmp
pop
pop
add
jnp
mov
je
iret
or
popa
xchg
xor
xor
int3
pusha
aaa
jg
cmp
and
leave
xchg
test
xchg
inc
pop
pop
pop
insl
cld
scas
mov
jae
mov
push
loope
xor
mov
jge
and
xchg
sub
fwait
out
push
aam
dec
mov
push
jno
pop
fbld
pop
mov
clc
pop
push
sub
ror
pop
inc
push
dec
stos
mov
cltd
mov
or
mov
ds
int3
imul
mov
jns
push
sbbb
out
mov
fwait
in
pusha
arpl
push
inc
sub
jle
dec
lods
bound
adc
dec
inc
dec
mov
push
outsb
mov
out
sub
jne
inc
aam
adc
repz
inc
roll
cld
inc
fimuls
mov
jecxz
push
sub
inc
mov
xchg
out
pop
xchg
shll
push
push
cld
pop
adc
push
fwait
push
sti
xor
pusha
sbb
xor
out
mov
pop
or
jbe
inc
and
mov
stos
scas
sub
nop
popa
arpl
js
xchg
dec
pop
popa
and
sub
out
add
push
js
jge
repz
mov
pop
pop
hlt
dec
pop
into
xor
insl
mov
jmp
lds
jnp
das
xchg
sbb
sti
cmpsb
aas
dec
out
adc
orl
mov
pop
mov
mov
push
daa
push
dec
cmp
aas
mov
inc
in
or
test
cmp
daa
outsl
int
jb
lods
insl
fistpll
test
insl
stos
mov
mov
sub
push
cs
push
jge
and
loopne
lahf
push
jp
pop
cld
ja
sbb
xor
pusha
popl
inc
sbb
ret
sahf
mov
jp
inc
mov
test
fisubrs
or
xchg
outsb
jecxz
outsb
int3
dec
in
stc
mov
pusha
adc
pop
dec
rcr
mov
pop
and
test
pusha
in
xor
out
int3
jmpw
cltd
aas
cmp
movsl
sbb
jns
add
dec
xor
pop
adc
adc
pop
js
mov
add
jbe
and
sub
and
fadds
aad
sub
xlat
sub
fidivrl
aas
lret
pop
pusha
push
pop
insl
sub
mov
pusha
aaa
orl
pop
mov
mov
in
in
scas
pop
cwtl
pop
inc
insl
push
and
fistps
decl
pop
cmp
mov
ficompl
ss
in
xor
aad
sahf
xchg
icebp
add
xor
imul
cmp
mov
mov
popf
jle
pusha
pop
dec
pop
das
repnz
ret
adc
xor
enter
addr16
sahf
dec
pushf
mov
lock
dec
mov
mov
in
sti
xorl
jecxz
sub
loop
jae
std
mov
inc
push
pop
rcrl
inc
jecxz
js
lea
shrl
jns
stc
movsb
mov
lock
cmp
lea
jo
in
popa
sti
jle
mov
out
leave
mov
daa
mov
jge
cmp
xchg
push
sbb
lcallw
clc
ds
fs
cmpl
pop
add
pusha
pop
sub
adc
xchg
imul
gs
js
add
mov
outsb
aam
jne
cmpsl
cld
mov
inc
mov
in
sarb
push
dec
mov
xchg
fistl
pusha
push
popf
add
loopne
jle
add
add
xor
inc
mov
xchg
mov
xor
clc
pusha
jl
call
shll
mov
cmpl
pop
lock
lret
outsl
mov
push
repnz
rcrb
cs
cmp
mov
or
nop
push
mov
ss
adc
shrl
lods
pushf
xor
aaa
jp
out
arpl
push
mov
mov
xchg
pop
push
shl
xchg
mov
fsubs
mov
push
xorl
mov
mov
inc
xchg
jl
mov
out
mov
sbb
pop
or
aad
dec
rcll
movsl
xlat
pusha
and
gs
push
inc
mov
sub
rcrl
loope
jb
ret
cmp
add
jmp
fisubrs
add
xchg
stos
sahf
cmp
icebp
inc
jo
inc
loope
inc
out
jecxz
pop
cmp
push
jae
fisubs
inc
loop
jo
mov
fwait
pop
jns
push
test
bound
das
aas
popf
ds
push
add
scas
mov
adc
decl
mov
testb
mov
push
int3
subb
pop
lods
sub
add
pushf
cmp
pop
stc
mov
xor
subl
cmc
out
mov
sub
inc
jo
jle
mov
and
ret
test
mov
fyl2x
addr16
bound
rolb
repz
test
push
aad
jae
lea
divl
mov
xor
stos
imul
mov
and
in
mov
imul
lods
fldt
dec
repz
dec
xchg
sbb
movsb
jb
out
lods
push
imul
fidivl
mov
lcall
mov
jg
mov
pusha
out
test
mov
out
inc
adc
stos
fwait
hlt
sub
movsb
rcrl
loope
dec
loope
and
jnp
jns
and
adc
adc
pop
sbb
dec
add
xorb
mov
pusha
xchg
les
sbb
push
out
push
jbe
testl
test
dec
mov
daa
jg
pop
cmc
adc
pusha
mov
push
ret
iret
out
cmc
lock
lods
out
jns
push
dec
adc
popa
xchg
cmp
pop
mov
mov
test
imul
into
xchg
and
loope
in
aad
pop
lea
xchg
sub
loopne
out
mov
jp
jl
outsb
dec
mov
stos
fistpll
push
sbb
xchg
push
cld
pop
sahf
mov
movsl
pusha
sbb
into
xchg
gs
xchg
nop
into
pusha
pop
cmp
gs
sar
xchg
out
jg
xchg
insb
mov
inc
mov
mov
daa
int3
pop
jo
or
jl
jmp
push
and
leave
mov
std
scas
sbb
mulb
test
pop
dec
cmp
mov
jae
sbbb
cli
cmp
imul
les
jle
mov
cmpsb
mov
shll
sbb
sub
jp
cli
add
lcall
mov
adc
mov
dec
scas
icebp
mov
push
push
movsl
test
sbb
mov
add
lret
insb
mov
mov
addr16
lahf
pop
stc
inc
xchg
test
push
push
ds
fstl
data16
sbb
insb
push
imul
arpl
push
jmp
pusha
aad
hlt
shrb
xor
std
out
divl
fisubrs
push
dec
test
mov
imul
dec
xor
push
push
jl
mov
pop
les
mov
icebp
mov
jg
pusha
out
inc
mov
fbld
xor
mov
mull
and
bound
xor
mov
xchg
int
daa
lods
pusha
fildl
sub
inc
out
xchg
popa
aaa
arpl
pop
mov
mov
sub
or
sbb
mov
stos
mov
pop
pop
imul
push
mov
cltd
nop
and
add
shlb
out
pop
dec
cli
incb
xorb
es
cltd
add
jmp
pop
dec
xor
and
fisubl
mov
mov
repz
xor
and
daa
mov
push
dec
push
movq
int
rcrb
sbb
push
loope
popf
inc
lret
cmc
dec
sahf
out
out
add
mov
out
pop
pushf
notl
sbb
rcl
sbb
sub
and
mov
mov
sub
shl
and
adc
adc
sub
lds
fidivrs
into
into
push
mov
out
aas
lret
add
test
xchg
mov
in
sbb
mov
lret
out
xchg
out
out
and
inc
xor
push
dec
mov
or
pop
sarb
stos
ret
outsb
fisubrs
popa
or
jo
repz
out
sbb
sub
mov
loop
sub
pop
fildl
dec
add
andl
or
hlt
pusha
xchg
int
popf
outsb
mov
popa
mov
movsb
xor
leave
fisubs
bound
scas
pop
out
call
and
imul
int
out
addr16
in
int
or
jle
orb
jno
pop
add
jb
cmc
fwait
add
jo
pop
loop
push
lock
jno
xchg
mov
mov
add
pop
scas
mov
mov
or
idivl
fidivs
mov
sub
jle
cmpsl
loope
out
mov
sbb
inc
jmp
pop
pop
test
movsb
push
das
nop
add
jno
pusha
sbb
test
push
xor
push
mov
ret
and
movsb
pop
xor
mov
loop
in
sbb
xchg
std
lcall
outsl
jns
shlb
cmpsl
push
lret
pop
loopne
mov
pop
mov
int3
sahf
jo
mov
cmp
xchg
cwtl
pop
mov
jp
push
fbstp
mov
jno
gs
pop
mov
dec
out
xor
or
dec
sbb
lods
sub
sbbl
jge
rcrl
sbb
mov
push
and
add
sbb
pop
add
mov
pop
sbb
cmc
jnp
cli
in
mov
lea
xor
aas
std
es
cld
sbb
out
sbbb
jle
dec
inc
or
out
mov
push
mov
mov
pusha
enter
or
mov
mov
sbb
fsubrs
xchg
xchg
movsb
xor
movsb
idivb
js
xor
movsl
lret
fmulp
mov
mov
std
lock
jp
mov
test
mov
and
mov
push
std
ficoml
pop
leave
mov
icebp
pusha
iret
cmp
inc
mov
out
pop
dec
push
sub
push
mov
stos
pop
sbb
jae
xchg
into
mov
jbe
mov
test
pop
cs
cmp
test
add
outsb
fs
je
mov
fcoms
add
pop
adc
outsl
ja
mov
sub
pop
in
fstps
mov
test
pusha
popf
loope
pop
push
pop
nop
data16
insl
fcmovbe
mov
repnz
gs
enter
out
out
jecxz
in
dec
rcrl
mov
pop
gs
pop
fistpll
std
scas
pop
push
lea
xlat
jnp
xchg
je
xchg
insb
dec
mov
jp
stos
pop
jmp
dec
dec
loope
dec
jge
or
popa
jae
or
inc
jge
imul
cmp
mov
xchg
sbb
ja
mov
mov
fadds
loop
lahf
mov
inc
std
jne
push
stos
pusha
aad
mov
mov
imul
mov
mov
rorb
mov
shrl
ret
mov
mov
cmpsb
push
lock
iret
test
push
lods
mov
or
ds
insb
inc
out
jg
xchg
loope
test
xchg
std
xchg
cmp
insb
orl
scas
addr16
out
pop
pusha
mov
xchg
mov
xor
pusha
push
push
mov
insl
js
out
retw
inc
ret
pop
mull
outsl
aam
shlb
or
test
arpl
mov
inc
rorl
adc
mov
subb
mov
mov
fcomip
dec
and
andl
insb
xlat
scas
cmp
aas
out
adc
mov
mov
daa
subl
jns
inc
enter
icebp
pop
or
js,pt
jle
test
dec
test
jne
add
cli
add
out
jne
lahf
insb
fists
jo
or
jo
std
out
test
or
or
incb
loopne
cvttps2pi
out
jno
add
mov
stos
pop
jnp
aam
xacquire
iret
pusha
fisubrs
xor
hlt
popa
mov
adc
mov
mov
call
xchg
xchg
or
xor
fimull
push
push
stos
out
cmp
movsl
add
mov
jmp
rcrb
adcl
adc
enter
ljmp
insl
sahf
bswap
icebp
lcall
imul
inc
cmp
movl
xchg
in
fnstsw
cmp
cmpsl
in
inc
sti
jle
iret
pusha
sub
cs
shl
in
jecxz
mov
outsb
data16
pusha
mov
cmc
ret
xchg
inc
or
dec
andb
jle
fnstcw
pop
or
mov
pop
jmp
xor
push
or
out
inc
or
in
pop
inc
push
jnp
test
cmpsl
out
jo
out
xchg
mov
int
sti
arpl
or
push
pop
pop
xor
loopne
imul
mov
pop
shl
subl
mov
jno
test
aas
imulb
jecxz
push
imul
ja
dec
pop
mov
loop
pusha
pop
lcall
add
ret
stos
push
push
pop
mov
sub
pop
xchg
jbe
into
in
mov
xor
jecxz
enter
mov
icebp
jnp
test
in
jmp
loope
cmpsl
test
mov
mov
cmpsl
out
fwait
push
mov
lret
add
out
or
orl
fistl
mov
push
inc
mov
fdivp
cmp
dec
mov
sbb
lea
test
push
push
sub
out
push
icebp
dec
sbb
out
cmp
or
xchg
pusha
push
and
xor
dec
call
and
jbe
adc
push
mov
cltd
int
out
ss
arpl
mov
popa
les
addr16
in
sarb
mov
xchg
push
into
cmp
xsave
dec
in
add
cmp
enter
jmp
movsl
repnz
jo
rcr
pop
xchg
insb
xor
sbb
clc
jecxz
mov
andb
js
sbb
pop
mov
push
adc
cltd
loope
jno
lret
sub
and
or
loopne
or
mov
sbb
lock
out
and
pushl
mov
lahf
add
leave
push
mov
add
pusha
repz
sbb
das
or
out
dec
jo
fbstp
push
dec
and
test
je
neg
push
mov
into
sti
mov
pop
in
cmp
mov
jae
mov
aad
and
lods
int3
fstp
divl
popa
xor
mov
and
daa
mov
cmp
sbb
mov
pusha
jmp
cmpsb
pop
adc
cld
leave
out
test
hlt
dec
icebp
pop
popa
les
jge
push
inc
out
jnp
mov
cmp
xchg
repnz
pop
jae
int3
mov
ljmp
push
in
sti
xor
lock
out
jmp
xor
mov
lods
and
mov
loop
sbb
add
pop
test
jne
adc
push
and
push
popa
or
in
add
call
movsb
out
stc
dec
mov
fisubl
sub
loopne
or
movhps
and
ret
gs
jne
xor
mov
adc
add
out
ljmp
mov
xchg
mov
add
lret
mov
in
out
xor
aaa
xchg
mov
mov
bound
pop
bound
or
mov
cmp
mov
rcll
sub
call
imul
int3
push
popa
jmp
push
shrl
data16
pushf
aad
mov
push
testb
jmp
dec
pop
mov
pop
add
test
xchg
rep
cmc
out
icebp
cmpsb
fs
es
add
mov
xchg
in
mov
fisubs
subl
scas
cli
out
xchg
fsts
jnp
dec
addr16
mov
mov
jle
dec
popa
lods
dec
cltd
pusha
cmpsb
mov
dec
pushf
sahf
ret
adc
cwtl
stos
cwtl
dec
test
sbb
mov
scas
push
pop
jecxz
int
xor
and
out
xchg
shrl
add
int
cmp
lahf
or
pusha
inc
ret
mulb
lods
test
lret
ljmp
arpl
sbb
xorl
mov
xchg
add
lds
mov
and
loop
mov
inc
jl
jne
pushf
pushf
fwait
mov
popa
inc
xchg
pusha
sub
and
out
repz
cs
imul
mov
dec
inc
aas
enter
push
cs
dec
push
xchg
repnz
arpl
iret
pop
popa
xchg
sbb
or
mov
jge
pop
out
inc
push
aam
lock
mov
adc
jge
pop
pop
xchg
fwait
lock
mov
or
repz
sbb
fistps
call
out
mov
sbb
fwait
add
dec
lret
jnp
lods
fisubl
and
sbb
or
outsl
adc
mov
inc
mov
mov
out
dec
movsl
movsb
pop
mov
iret
mov
jg
jmp
xchg
mov
or
adc
push
add
fisttps
cwtl
lods
aad
inc
and
dec
or
iret
lods
ret
pushf
addr16
mov
fstps
outsb
jno
mov
cmpsb
mov
in
iret
ss
outsb
adcb
mov
add
bound
pop
cmp
mov
ret
pop
or
mov
add
add
int
lcall
dec
xchg
popa
and
pusha
lds
sub
sub
pusha
sahf
mov
mov
lea
jns
lods
in
sub
insl
xor
lods
mov
mov
ss
ret
pop
fcoml
int
mulb
in
inc
dec
icebp
xchg
and
pusha
xchg
pop
jl
inc
aad
imul
nop
mov
jbe
pusha
push
lods
xorl
jp
cmp
sbb
fiaddl
mov
push
outsl
je
lret
scas
cmc
sbb
pause
pop
sub
pop
outsl
outsb
mov
les
arpl
mov
int
dec
cmp
daa
out
ret
cmp
shlb
dec
popa
and
pop
int3
movsl
push
cs
ss
xlat
fsubrl
rcll
inc
push
push
dec
test
pushf
xor
sub
sub
imul
push
dec
cmp
or
rcr
jmp
stos
dec
xor
jecxz
test
lret
push
test
loopne
mov
push
add
push
lea
in
hlt
add
xchg
in
cmpsb
nop
scas
mov
pop
out
pusha
adc
mov
fwait
int
push
out
jmpw
fwait
push
mov
test
xor
mov
out
cmp
out
shrb
push
daa
pop
and
rcrl
bound
dec
mov
and
sub
pusha
pop
xchg
cmp
test
ss
and
jb
enter
imul
push
xchg
sarl
dec
test
xchg
es
and
daa
push
out
dec
loop
dec
or
mov
and
inc
pop
jmp
or
pusha
sub
and
in
in
fisubs
xor
mov
test
addb
sbb
add
dec
sub
fs
push
daa
and
cmp
sub
inc
out
pop
mul
xchg
cmp
mov
repnz
mov
push
popf
xor
hlt
mov
loopne
and
out
or
mov
mov
pop
jbe
dec
xor
fwait
imul
mov
or
cwtl
testb
cmp
jle
add
xchg
addl
mov
and
insb
insb
roll
mov
mov
cmp
push
stos
mov
pop
xor
pop
int3
scas
filds
andb
imul
icebp
sbb
mov
push
mov
out
jmp
js
pusha
xchg
pop
or
cmpsl
shll
insb
mov
fbld
push
fcompl
loopne
pusha
xor
inc
cmp
popl
dec
out
or
iret
sub
fisubs
jae
cmp
fnstcw
mov
daa
cwtl
mov
pop
jp
add
fnsave
mov
and
mov
pop
sub
dec
pop
cmp
pusha
lea
dec
pop
out
pop
loope
fdivrs
or
mov
jge
jmp
pop
aas
scas
mov
pusha
pop
xchg
loop
addr16
pop
enter
pushf
scas
and
mov
adc
xchg
rolb
cs
pop
cmp
mov
push
ljmp
cmp
pusha
icebp
jae
lock
inc
imul
push
push
mov
adc
push
push
add
adc
inc
ds
rorb
lds
out
push
push
in
call
iret
xchg
out
xlat
pop
xor
mul
arpl
rcrb
pop
cmpsb
stos
inc
add
movsb
mov
popf
out
push
lds
sahf
mov
lods
jno
xchg
pop
sub
cs
xor
push
jbe
pop
mov
add
scas
out
push
mov
push
add
mov
adc
test
fistpl
popa
xchg
pop
mov
and
mov
lods
popa
in
xchg
out
and
push
inc
mov
test
test
mov
js
popa
popf
sbb
leave
dec
out
jl
out
inc
inc
cmp
dec
shrb
push
xchg
dec
and
xchg
or
ret
test
out
pop
andb
jae
xchg
rcrb
push
enter
mov
jbe
adc
out
sbb
mov
call
cmp
sub
pop
shll
lahf
aaa
popa
das
dec
stc
negl
xchg
repz
mov
idivl
cmp
in
iret
jno
into
add
xchg
frstor
jle
mov
arpl
mov
lds
jl
pop
sbb
jmp
faddl
sbb
and
mov
push
fiadds
push
out
aaa
fdivr
leave
dec
clc
push
xchg
mov
ret
mov
or
push
leave
out
push
in
lret
gs
loopne
sahf
jge
mov
push
xor
loope
pop
in
and
inc
jae
test
adc
cmp
mov
jge
pusha
dec
or
jae
add
shrb
adc
popf
sub
stc
pop
outsb
in
pop
jle
jne
test
fucom
mov
cwtl
mov
out
sbb
add
xor
xlat
mov
fsubs
out
inc
sub
and
inc
pop
stos
pusha
or
push
call
mov
mov
push
xchg
andl
push
or
xor
add
in
es
sbb
in
cmp
popa
cwtl
push
inc
idivb
pop
xor
test
pop
xor
sub
mov
mov
rolb
sbb
pop
jno
jne
int
inc
adc
shlb
and
push
jae
mov
add
fs
and
xorb
dec
xor
imulb
or
mov
jecxz
test
mov
lock
jge
xchg
pop
repnz
movsl
aad
jmp
cs
dec
rcrb
mov
imul
mov
adc
pushf
jle
sub
pop
adc
and
or
dec
lods
pop
cli
and
jg
push
dec
pop
ret
es
pop
mov
pop
shl
es
jge
dec
and
and
or
stc
shr
iret
adc
testb
in
and
mov
and
lock
out
xchg
or
sbb
push
push
xorl
pop
lret
std
mov
fwait
cmpsb
pop
pop
cmpsb
movsl
pop
mov
mov
out
gs
addr16
pushf
push
push
leave
or
fsubl
dec
movsbl
vpsubw
in
lock
mov
mov
pusha
jno
mov
push
out
imul
nop
xor
mov
and
xchg
lahf
fsubrp
xor
mov
sub
mov
jo
ret
int3
mov
outsb
out
lea
lret
movsb
std
push
aaa
or
scas
das
push
test
push
ret
movntq
out
les
cmp
pop
xchg
mov
fwait
mov
pop
adc
insl
add
cmp
out
sbb
sbb
sub
fldenv
mov
pop
aaa
pop
sbb
movl
lret
inc
jmp
imulb
fmull
in
scas
rcll
pop
rclb
sub
out
mov
in
and
movsb
scas
ss
mov
shr
fdivrl
test
mov
sbb
loop
ffree
mov
into
sbb
push
sub
ljmp
loope
adc
pop
data16
and
repz
cs
fsubr
inc
dec
cmpsb
in
sub
sub
jmp
jle
in
dec
or
dec
lock
mov
dec
frstor
sbb
adc
sub
ds
sahf
and
xchg
test
mov
dec
fdivl
cli
movsl
ret
loope
lods
mov
mov
cld
inc
cs
in
jbe
aaa
inc
daa
sbb
and
repz
mov
out
into
enter
out
stos
add
test
add
test
mov
scas
push
lcall
dec
lods
cmpsl
cmc
icebp
mov
push
pop
or
mov
mov
fs
cmp
add
jbe
xchg
out
cmp
push
lods
loop
fcoms
jo
sub
push
xchg
insl
imul
mov
and
fsubl
nop
insl
jb
xchg
cs
loopne
push
leave
pop
data16
and
add
loopne
cmp
xor
js
mov
jmp
leave
stos
push
cs
sbb
out
xchg
mov
push
cmp
xor
adc
jle
pop
jmp
xor
pop
out
in
loope
scas
mov
push
shrb
push
cltd
cmp
scas
and
or
push
into
ljmp
outsb
data16
mov
ljmp
out
fsqrt
fadd
or
test
cwtl
sbb
nop
sub
notb
mov
enter
pop
pushw
xor
mov
out
or
mov
cmp
movsb
add
xor
mov
in
sub
lods
push
jnp
pushf
pop
mov
pushf
lahf
adc
adc
repnz
aas
pop
sub
cs
lods
out
jge
pop
stc
cli
cmpsl
loopne
fiadds
scas
insb
int
or
or
push
xor
pop
and
push
out
inc
rorl
jmp
adc
dec
sti
jnp
mov
sub
push
insl
xor
push
das
jbe
xor
jb
lret
pop
out
xor
movsb
sub
mov
out
mov
outsl
out
mov
in
sbbb
pop
sub
out
cmpsl
sub
cltd
or
sub
repnz
bound
movsb
pop
std
int3
movsb
aaa
cld
cltd
into
imul
in
test
xor
fmull
xor
push
outsl
lock
loopne
bound
or
and
pusha
mov
sub
push
pop
pop
aad
xor
sbb
setbe
sub
cs
pop
roll
mov
js
mov
outsb
pop
lcall
bt
jp
les
jl
fisubs
mov
mov
orl
icebp
sub
mov
cmp
dec
xchg
mov
push
in
int3
cltd
bnd
mov
or
movsb
out
add
pop
out
adc
sub
int
lods
gs
sbb
sbb
movsb
adc
aam
push
mov
fwait
ret
in
adc
lret
int3
dec
loope
push
lods
ret
out
mov
cmp
pop
into
sbb
fs
fdivrl
jns
or
and
ret
mov
pop
sub
bound
sbb
lahf
jae
cmp
jecxz
sub
dec
call
add
fcmovnbe
ljmp
dec
mov
xchg
jl
ljmp
jnp
sbb
jne
and
ss
ret
sub
inc
inc
or
and
std
ret
fwait
data16
adc
jg
sub
sbb
ficomps
in
shll
and
cmp
ds
call
cmc
xlat
das
insb
sub
int
sub
inc
fnstcw
and
loope
add
daa
scas
sub
js
mov
mov
mov
xor
out
cmpsb
push
cwtl
cltd
push
icebp
push
ficoml
movsb
adc
push
fucomi
repnz
pop
lea
or
cmp
push
xor
pop
pop
xor
incb
fisubrs
or
in
jl
lret
lret
sbb
pop
jb
call
fdiv
add
pop
mov
popf
daa
mov
xchg
cmp
icebp
jmp
dec
push
test
or
inc
dec
inc
sarl
pusha
cmp
scas
in
add
fistl
sbb
scas
lret
divb
iret
test
vpmullw
push
in
jb
rcl
pop
sbb
adc
sub
inc
repnz
mov
loopne
cmp
push
es
push
fdivp
out
xchg
inc
dec
mov
repnz
xchg
call
jbe
cs
inc
leave
mov
out
dec
cltd
hlt
imul
dec
dec
mov
jg
cmp
jle
dec
dec
mov
rorb
xorb
dec
movsl
idivb
scas
dec
add
aaa
mov
cmp
cli
sbb
mov
into
loopne
call
xchg
xchg
push
mov
jecxz
sbb
dec
push
mov
cmp
andb
lea
fcmove
pop
rcr
mov
xchg
das
or
sbb
inc
mov
sub
nop
shr
popf
aas
sub
fiadds
dec
dec
xchg
pop
leave
jge
mov
mov
xchg
mov
test
es
test
data16
popf
cmc
jp
pop
dec
xchg
imul
idivb
movsb
sti
insb
and
outsb
out
mov
dec
shr
mov
push
int
pop
jne
movsl
sub
and
insb
repz
incl
sbb
rolb
pop
dec
push
push
xchg
mov
inc
lods
xchg
test
ds
dec
je
add
lea
cmc
dec
sahf
stc
xchg
mov
pop
xor
imul
out
in
test
fisttps
jl
add
cmp
stos
mov
mov
and
mov
push
mov
jl
mov
repnz
gs
mov
inc
fnstenv
xlat
add
daa
dec
xchg
fisubrs
popa
imul
push
mov
ds
idivl
inc
xor
mov
cs
mov
push
popf
or
cmp
fldl
jae
inc
je
dec
sub
add
inc
sub
outsl
movsl
mov
lock
xchg
sub
fnstenv
inc
inc
dec
mov
and
out
xchg
inc
lods
out
mov
test
in
out
lods
in
testl
shr
fldl
insb
jae
out
outsb
xor
dec
test
mov
add
rep
lods
scas
ds
lahf
js
scas
inc
lods
cmp
jno
test
cmp
das
inc
or
lret
icebp
insb
push
popf
mov
sub
ss
or
out
sbb
rorb
out
pop
adc
mov
lock
cmp
mov
in
cmp
aas
push
mov
fildll
imul
xor
sti
ret
cld
pop
cmp
pop
push
cmp
jmp
cmp
lcall
in
jns
dec
sbb
arpl
aas
adc
cmc
rcrb
push
cmp
mov
int3
lret
push
lods
and
cltd
stc
cmp
inc
pop
cmp
lds
jno
or
gs
xor
int3
fcompl
std
cli
dec
jl
xor
xorb
push
xchg
mov
lock
imul
pop
xlat
mov
fs
in
mov
inc
mov
xor
mov
scas
pop
shl
adc
mov
js
in
jle
jne
leave
ja
ret
scas
cs
cli
sub
cmp
fisttps
adc
insl
adc
xchg
push
xlat
fmuls
popa
cmp
scas
mov
bound
xlat
adc
jmp
movsb
nop
pop
imul
xlat
popa
out
push
mov
aas
and
loope
lods
fistl
inc
int3
rcr
cmp
pop
les
mov
aad
lock
dec
sbb
cmp
mov
or
xor
lods
xor
iret
add
test
std
sub
shr
aaa
and
lods
inc
sub
pop
cmp
sbb
jecxz
pop
adc
sub
pop
ljmp
mov
ficomps
incl
or
xchg
inc
sbb
sahf
push
cs
cmc
cs
push
add
mov
das
sbb
inc
jmp
cmp
jmp
popa
cmp
cmc
mov
jo
filds
xchg
mov
lock
push
sbb
negl
sub
std
ja,pt
mov
cmp
pop
jnp
pop
loop
inc
fmuls
cmc
sub
pop
stos
adc
xchg
lods
and
rcrl
and
and
push
dec
fmulp
add
mov
dec
lods
adc
adc
je
push
outsb
xchg
push
pop
cmp
xchg
das
outsl
movsb
divb
inc
rorl
inc
jb
jns
mov
in
sbb
scas
jae
xor
insl
add
adc
push
mov
lods
aaa
sub
xchg
push
push
push
out
test
mov
or
and
or
jo
pop
cmp
enter
stos
test
xor
cmc
and
inc
push
mov
or
dec
dec
and
sti
pushf
adc
out
icebp
test
adc
movsb
mov
rcrb
inc
fiadds
ja
dec
pop
xchg
sub
cmpsb
lcall
bound
push
shll
inc
cmpsb
cwtl
dec
xor
aam
add
roll
xchg
outsb
jmp
xchg
push
ljmp
push
repnz
dec
js
xchg
cli
insb
mov
add
adc
mov
push
push
adc
rorl
sbb
inc
gs
add
adc
mov
inc
push
mov
dec
js
sub
mov
xchg
adc
cli
ret
incb
dec
or
popl
ret
popf
mov
push
test
inc
gs
add
daa
lods
loope
sbb
hlt
push
mov
ror
jl
xlat
add
cli
lods
clc
mov
xor
stos
sbb
or
test
sbb
and
add
outsl
pop
fldl
cld
mov
mov
push
mov
inc
xlat
ror
cmp
notl
pusha
and
sbb
dec
fiadds
cmp
test
inc
adc
cmp
outsb
mov
scas
push
mov
loope
pop
add
js
or
sbb
pop
push
in
fimuls
and
mov
pop
sbb
mov
cmp
xchg
in
enter
inc
test
mov
xor
movsl
sbb
cmp
mov
inc
jns
mov
fistpl
lcall
popa
movsb
xor
or
or
xor
cmpb
cwtl
mov
fstps
cs
dec
xor
xchg
cmp
clc
jge
ss
jp
and
cmp
jl
stc
loope
fisttpl
aam
fiaddl
or
mov
xor
jmp
pop
scas
fbld
sbb
mov
sti
pusha
or
push
xor
sti
mov
add
jge
mov
dec
mov
out
fwait
cmp
mov
cwtl
dec
mulb
push
stc
and
sbb
add
or
mov
dec
pop
mov
pop
sub
scas
pop
mov
and
lods
mov
sub
subl
xor
pop
imul
pop
fadds
in
cmp
sub
adc
rorl
and
push
push
dec
cmc
fiadds
inc
cmpsb
sti
stos
inc
test
sbb
and
mov
out
iret
and
in
lahf
ficomps
mov
cli
scas
sti
mov
fildll
pop
ljmp
mov
into
xor
mov
mov
mov
xor
cmp
shlb
popf
mov
jno
pop
shrb
dec
push
scas
lcall
out
cli
out
xchg
mov
mov
jnp
mov
jmp
push
push
icebp
mov
int3
mov
pop
mov
jne
xor
call
loope
pop
sahf
xor
xor
push
sbbl
rolb
and
out
inc
cmp
adc
mov
and
test
aam
dec
push
popa
jl
pushf
fucom
out
pop
outsl
call
adc
sbb
out
mov
fnstsw
and
and
dec
and
mov
jo
imul
or
out
lods
xchg
popa
pop
mulb
xor
cmp
icebp
pusha
outsb
es
sub
stc
frstor
jno
iret
adc
nop
addb
mov
inc
jmp
scas
sbb
test
pop
or
and
nop
pop
icebp
push
mov
cltd
je
out
cld
mov
loope
sbb
pop
mov
pop
ss
add
push
test
lds
push
mov
and
cld
fsubrl
xchg
xchg
pop
inc
imul
mov
cli
add
shrl
jnp
jnp
jg
mov
cs
dec
inc
and
pop
aaa
pusha
arpl
jmp
pop
popa
push
dec
inc
sahf
jle
out
push
bound
dec
pop
in
mov
int
std
pop
jo
jb
cli
loopne
push
dec
mov
cmp
mov
out
jns
nop
adc
jmp
les
sbb
cmc
mov
jg
mov
pop
jne
loopne
push
push
jecxz
fnstcw
imul
mov
jns
inc
popa
sub
jo
mov
inc
xchg
out
sbb
jle
dec
aad
fwait
loopne
stos
push
cs
pop
popf
mov
sbb
xchg
and
sub
sbb
xor
pop
inc
jecxz
dec
push
in
sbbb
adc
xchg
lret
lret
into
mov
or
inc
inc
push
test
pop
js
js
adc
or
cmp
mov
pusha
out
and
pop
cmp
int
in
xchg
sub
lods
push
push
fldenv
inc
lods
sub
and
pop
lds
sub
pusha
push
add
fiadds
push
jl
or
mov
outsb
insl
shlb
lea
push
adc
jo
jmp
push
inc
sbbb
stc
lret
fstps
adc
jl
out
xchg
add
adc
es
mov
cs
test
popa
inc
call
popa
xor
and
outsl
mov
jl
bound
mov
cmp
rorl
or
sbb
adc
or
imul
out
orl
enter
jb,pt
jmp
test
pop
in
andb
xchg
int
pop
mov
mov
fsubrl
sub
push
cs
mov
or
pop
jae
or
push
add
popa
inc
jl
pushf
push
sub
mov
adc
daa
stc
sahf
push
or
mov
push
xor
repz
add
pop
pusha
mov
jmp
loope
push
mov
inc
or
popa
cmc
nop
pop
jl
mov
mov
push
pop
push
arpl
pop
pop
movsb
dec
ljmp
loope
out
fwait
sahf
pop
xchg
inc
mov
sub
or
repnz
mov
xchg
repnz
loopne
cmpsl
outsb
mov
and
lea
call
add
mov
dec
cmp
movsl
pop
push
mov
icebp
mov
pop
aaa
inc
mov
pop
jl
adc
andl
mov
sahf
scas
jns
cld
cmp
popf
loopne
mov
pop
mov
push
xchg
sub
inc
addr16
dec
xlat
mov
sub
push
rolb
fmul
dec
cli
stos
imul
mov
outsb
inc
out
mov
jbe
dec
lahf
and
pop
fisubrs
mov
es
mov
push
sbb
fcompl
jbe
inc
and
rcrl
shrl
jg
fld
add
mov
cmpsb
popa
pop
push
stc
mov
adcb
fwait
pusha
or
add
test
imul
jge
aaa
movsl
push
popa
sbb
sahf
in
ja
mov
and
xor
mov
pop
loopne
scas
lock
lea
push
aam
jae
dec
mov
pop
mov
mov
and
pop
lcall
stos
mov
and
or
out
push
sbb
mov
push
push
mov
popf
and
jne
inc
out
test
mov
icebp
cmp
push
dec
adc
add
push
sbb
pop
or
lods
in
mov
pushf
scas
jo
jle
js
pop
mov
pop
add
out
shlb
dec
ljmp
push
add
dec
testb
enter
sahf
inc
shll
pop
sub
idivb
sbb
lret
add
add
lahf
ds
or
mov
jp
loop
pop
pop
dec
xchg
into
pop
mov
pop
rol
fnsave
jno
test
daa
bound
test
mov
cwtl
shrb
in
or
push
rclb
mov
cmc
push
mov
dec
sbb
hlt
ds
in
pusha
pop
dec
fs
adc
push
scas
addr16
out
out
pop
call
test
inc
add
xchg
out
pusha
out
adc
loope
adc
sbb
out
ret
imul
insb
pop
sbb
pop
test
jp
cmpsb
js
xor
mov
insb
jmp
xchg
sarl
pop
cmpsl
cmpsb
bound
fisubl
pop
sbb
mov
sbb
adc
andl
fisubl
jle
pop
dec
jno
pop
jo
mov
stos
mov
inc
jle
xchg
pop
jmp
outsb
mov
arpl
fsubp
push
es
pusha
add
sahf
cmp
jnp
push
lods
mov
mov
stos
fmul
inc
pop
popa
pop
mov
ja
pop
out
jns
mov
mov
inc
jl
sub
fwait
xchg
jo
xchg
inc
or
xor
test
les
pushf
pop
lcall
lahf
or
xchg
pop
cld
insb
and
push
xchg
pop
test
stc
loope
shll
adcb
or
xlat
test
xchg
js
arpl
pop
cmp
ja
fsubs
popf
sub
shlb
xchg
insl
mov
out
cmc
jb
sbb
movl
ljmp
pop
flds
cltd
icebp
xor
lret
repnz
rcrb
out
pop
fiadds
sub
mov
jnp
mov
push
inc
mov
jbe
out
subl
fidivrs
rol
jb
dec
enter
out
sti
repz
xor
mov
mov
pop
mov
inc
imul
out
cmp
jae
insb
pusha
out
push
jg
jl
ljmp
cld
lret
mov
cmpsb
stos
repnz
stos
jmp
mov
xor
outsb
je
sbb
out
call
xor
xor
cmc
push
repz
mov
mov
pop
fsubl
aad
push
xchg
out
test
cmp
fnstcw
sub
mov
push
push
clc
pusha
sarb
daa
loope
dec
es
pop
imul
inc
call
mov
movsl
adc
xorl
push
ja
stos
mov
sahf
push
push
cmpsl
pop
push
xchg
pop
ds
loopne
loopne
ljmp
mov
out
stos
dec
negl
data16
pop
push
mov
test
popa
pop
lret
inc
out
xchg
or
pusha
sub
fbstp
shrb
js
jp
lret
add
or
dec
jg
dec
push
add
movsl
mov
pop
push
xchg
pop
lret
fcmovu
movsl
rcr
push
popa
loope
inc
push
imulb
lahf
out
loop
pop
pop
inc
sahf
jae
mov
notl
ljmp
mov
mov
movsb
xchg
into
stos
push
outsl
mov
lahf
dec
flds
clc
dec
pushf
push
or
fs
xchg
or
ja
sbb
lahf
add
mov
cmpl
fadds
mov
adc
push
je
jge
movsb
imul
pop
ds
push
pop
sarl
lds
mov
jno
rclb
adc
cmp
fiaddl
sbb
cld
mov
sub
pop
dec
pop
fucomp
jnp
push
cmp
and
mulb
push
dec
xchg
xchg
and
pop
dec
sbb
pop
jb
sbbl
pop
iret
ss
fsubl
cwtl
push
adc
adc
jl
int3
inc
lahf
test
mov
sbb
into
pop
insb
stos
add
call
cltd
push
into
jecxz
adc
inc
movsb
pusha
imul
fcompl
cmp
or
es
shlb
xchg
shll
in
adc
mov
ljmp
out
add
rep
ja
mov
dec
sbb
scas
pushf
sub
lds
push
adc
dec
lret
nop
aas
mov
rcrb
mov
dec
les
pop
mov
outsl
mov
stos
shl
xlat
xchg
cmp
pop
push
xchg
fisubs
into
sbb
push
sbb
cmc
jp
clc
xor
sti
add
mov
pop
int3
aam
in
mov
shlb
fadds
in
pop
popa
dec
popa
push
mov
xchg
xchg
pop
inc
and
enter
pop
inc
sub
shll
adc
shll
arpl
rcll
and
sbb
mov
fistps
sub
mov
in
adc
pop
hlt
into
add
pop
stc
mov
leave
fldenv
push
jns
lods
lock
sub
or
icebp
mov
cmpsb
stc
dec
popf
jbe
sbb
pop
movsb
adc
xchg
sbb
jns
jecxz
mov
cmpsb
and
hlt
sub
testl
mov
out
sbb
inc
fisubl
stc
outsl
repnz
jns
ja
je
jae
jmp
add
jmp
add
sar
out
test
scas
xor
scas
sub
mov
std
push
cli
pop
test
jno
sbb
cmpsl
mov
fmulp
mov
pop
daa
sbb
shlb
inc
and
lret
mov
jmp
outsl
add
mov
clc
lods
std
cmp
lods
add
lods
cmpsl
jmp
movsb
and
dec
shrl
xor
add
push
mov
pop
mov
add
and
xor
push
sbb
ljmp
fbld
and
mov
jo
lds
xchg
in
int
mov
pop
insb
lds
pop
xchg
inc
js
in
lahf
cld
xor
shl
fs
xchg
es
sbb
mov
fucomi
testl
outsl
dec
push
repnz
push
insl
pop
out
outsb
mov
cld
fwait
mov
out
stos
dec
pop
test
jbe
roll
aad
pop
push
les
sahf
xchg
jne
cmpsl
sub
dec
js
popa
xchg
mov
mov
je
jae
lahf
xchg
push
sub
xchg
movsl
rolb
adc
mov
mov
icebp
push
hlt
and
mov
xchg
aam
adc
or
push
mov
adc
jo
pop
fldenv
xchg
popf
push
sbb
xor
jnp
fcoml
cs
mov
sahf
lret
mov
nop
push
push
sub
jbe
inc
insl
mov
sbb
arpl
pop
ss
loopne
sbb
dec
cs
in
lods
mov
mov
pop
push
and
pop
adc
js
insb
mov
sub
pop
aas
xchg
cli
shr
sub
pusha
imul
mov
stos
loope
inc
or
cltd
push
aas
fnstsw
clc
test
sub
mov
pop
xchg
cmp
jbe
mov
rcrl
cltd
in
dec
insb
push
std
hlt
pop
fs
mov
fst
xchg
push
int
push
xor
ljmp
and
out
push
cmpsl
in
mul
adc
xchg
jae
aaa
es
cld
cmp
lret
xchg
xor
jae
jae
pop
pop
ror
push
rcll
shll
sahf
aad
jmp
ja
pushf
bound
test
jmp
add
daa
add
adc
addb
add
inc
push
add
pusha
inc
popa
and
add
add
pusha
inc
add
rolb
and
orb
inc
addb
add
xor
add
mov
add
add
add
adc
orb
adc
and
add
nop
add
or
push
add
addb
push
add
or
add
add
mov
rorb
push
or
inc
add
inc
inc
add
enter
orb
add
orl
sub
dec
and
or
or
add
add
mov
inc
adc
push
adc
and
sbb
add
and
add
and
add
orl
lret
and
inc
inc
inc
adc
addl
or
add
dec
mov
add
and
add
add
xor
dec
add
adc
addb
adc
adc
add
add
inc
inc
add
sub
subb
adc
rolb
and
bound
xchg
push
xchg
add
add
cmp
mov
test
add
mov
mov
add
add
inc
stos
inc
cmp
nop
add
add
sub
add
or
add
inc
add
adc
adc
add
add
add
or
inc
mov
inc
addl
cpuid
add
add
addb
add
add
dec
adc
mov
add
or
add
sbb
addb
add
and
addb
inc
add
loopne
add
inc
add
dec
and
adc
mov
xor
nop
daa
shlb
add
mov
addb
add
and
add
add
and
lcall
inc
jo
cmp
mov
push
add
add
add
inc
mov
dec
and
add
adc
add
mov
and
add
add
addl
add
add
add
and
add
dec
sub
add
inc
test
add
subb
adc
add
sub
add
or
call
add
dec
andb
test
add
rclb
adcb
adc
add
inc
add
test
andl
add
add
test
add
scas
add
add
add
addb
add
add
and
push
dec
cmp
add
test
add
add
dec
andb
and
add
add
and
and
add
shrb
xor
add
sbb
inc
rolb
nop
add
dec
mov
pusha
mov
add
add
and
add
adc
lret
adcb
adcb
inc
add
inc
or
inc
add
inc
add
add
add
xchg
andb
add
test
add
add
inc
or
add
pusha
or
add
add
add
and
add
add
add
add
add
add
adc
add
inc
and
add
andb
add
add
add
add
or
bound
or
add
or
sub
or
add
inc
add
and
xchg
add
mov
adc
add
inc
loopne
or
and
add
add
addb
add
roll
adc
add
adcb
and
and
or
add
add
add
push
or
add
add
in
add
adc
add
add
add
add
in
push
add
add
or
loope
cmp
pusha
sub
add
or
and
add
inc
mov
add
movsb
sub
or
inc
add
adc
js
push
and
inc
adc
xor
jp
add
add
add
mov
add
inc
add
add
xor
inc
or
and
adc
mov
adc
sub
add
roll
or
inc
add
add
add
nop
addb
push
pop
add
ret
shlb
add
add
adc
adc
add
mov
or
test
add
inc
add
add
les
rolb
dec
xor
adc
add
and
add
add
push
sbbl
add
adc
add
inc
add
add
inc
inc
add
add
adc
les
add
addb
or
adc
pusha
or
dec
xor
addb
adc
sbbb
mov
adc
add
add
add
add
or
add
subb
add
imulb
and
inc
push
push
adc
mov
sub
bound
mov
push
inc
jb
add
movsb
fsubp
inc
and
and
add
add
add
inc
or
nop
sub
and
add
sbb
inc
inc
sbb
inc
push
loopne
add
add
add
adc
add
inc
add
xor
add
add
add
or
aam
add
add
add
or
add
add
mov
add
add
add
add
mov
and
inc
xor
inc
inc
or
inc
add
add
xor
lret
add
pop
add
mov
dec
add
xchg
inc
rcrb
add
add
add
push
adcb
adc
add
adc
addb
add
and
loope
add
add
and
orl
or
adc
cmp
addb
and
add
add
sub
addb
andb
add
add
dec
and
add
and
add
and
add
jne
addb
add
andb
add
lcall
mov
inc
adc
or
sub
add
add
add
inc
rclb
insb
sbb
add
xor
add
add
das
push
push
add
add
or
add
or
add
inc
inc
lret
addb
xchg
mov
add
xor
add
addb
and
add
add
adc
adc
cmp
addb
pusha
add
add
rolb
xchg
adcb
add
add
inc
and
or
and
inc
add
add
add
add
add
adc
add
add
add
add
dec
add
or
add
pop
add
lock
add
add
add
add
add
push
inc
or
or
and
sbb
inc
or
add
mov
inc
adc
sub
nop
add
xor
inc
add
imul
and
add
inc
addb
add
add
add
push
add
and
inc
inc
addl
adc
sub
push
and
add
or
dec
push
rolb
add
inc
add
and
and
add
adcb
inc
mov
add
inc
inc
add
xor
inc
add
pop
pusha
xor
inc
push
inc
addb
add
rol
and
add
addb
add
add
adc
add
xor
adc
add
inc
push
je
and
add
add
push
add
inc
add
add
cmpb
add
add
dec
add
add
inc
mov
and
or
lea
movsb
add
or
add
inc
jmp
and
add
inc
adc
add
sbb
and
adc
popl
mov
add
add
inc
or
add
or
add
arpl
add
inc
xchg
stos
adcb
add
lods
inc
add
adc
or
or
mov
or
or
add
test
shlb
add
push
and
dec
dec
sbb
ret
and
orl
add
imul
sub
add
add
test
add
and
inc
add
or
add
add
add
add
enter
add
add
nop
add
test
add
add
lds
and
add
add
dec
add
add
pusha
add
add
add
loop
add
or
les
sub
add
or
adc
xor
mov
subl
lret
mov
nop
add
add
inc
or
add
add
inc
mov
adc
adc
addl
add
inc
or
inc
mov
xor
inc
adc
add
inc
sub
or
test
jmp
sbb
pusha
adc
add
sbb
mov
add
pop
inc
adc
inc
and
inc
add
and
and
add
push
adc
inc
test
xor
adc
add
mov
inc
add
and
add
ljmp
adc
add
or
sub
add
sub
and
add
or
add
and
nop
mov
add
and
add
nop
add
and
inc
add
or
and
and
and
or
mov
add
and
add
dec
xor
or
add
push
push
add
add
add
add
adc
subb
rcrl
movsb
or
add
add
add
add
sbb
addb
add
add
nop
add
adc
push
adc
pusha
dec
adc
inc
adc
add
inc
addl
pusha
or
add
nop
add
adcb
push
adcb
add
add
and
andl
nop
add
adc
rolb
addb
inc
add
js
xchg
inc
add
dec
and
or
add
mov
add
dec
or
add
inc
inc
sbb
addb
add
add
inc
add
adc
xchg
push
add
add
add
xor
adc
or
inc
sbb
inc
and
push
add
add
orb
add
and
inc
test
and
test
add
inc
sub
or
add
and
orb
add
and
dec
fs
add
adc
inc
and
and
inc
add
cltd
pop
adc
adc
add
rolb
adc
inc
pop
or
inc
xchg
cmpb
add
or
or
pusha
push
add
add
inc
nop
add
add
xchg
mov
add
add
or
add
sub
cmp
or
arpl
sub
mov
addb
addb
add
es
add
addb
add
add
mov
add
add
adcb
addl
and
inc
cmp
add
add
or
adc
adc
add
data16
mov
add
add
or
shll
or
jo
sbb
adcb
sub
addb
add
add
orl
pop
add
sbb
add
adc
mov
inc
inc
nop
inc
or
add
dec
push
add
inc
add
adc
mov
inc
xor
add
dec
add
loop
adc
and
dec
or
add
sub
andb
add
push
pusha
sub
add
or
addl
rolb
add
add
adc
adc
add
sbbb
inc
add
add
add
adc
and
add
mov
lds
or
cwtl
jo
add
adc
add
add
add
inc
daa
inc
push
add
and
add
inc
add
and
add
add
adc
addb
or
adc
add
adc
add
or
push
adc
addb
adc
hlt
add
add
inc
inc
add
add
inc
add
add
or
push
push
add
rcrb
addb
adc
and
adc
inc
add
andb
and
test
sbb
or
inc
or
inc
inc
cmpsl
add
subb
movb
add
rcrb
push
sub
inc
xor
add
adc
add
add
add
sub
add
or
adc
rclb
add
add
add
add
or
or
adc
rolb
adc
add
sbb
push
add
or
add
popa
add
inc
inc
mov
add
sub
inc
addb
addb
and
inc
or
and
mov
add
dec
inc
addb
inc
xchg
dec
xchg
add
lds
add
add
add
mov
mov
inc
inc
push
and
sbb
sbb
add
shlb
pusha
inc
push
sbb
mov
ret
add
mov
test
adcl
add
inc
add
add
jb
add
add
inc
push
adc
add
or
add
inc
inc
sub
add
inc
add
add
dec
or
add
add
rolb
addl
fmull
inc
inc
inc
add
rclb
and
add
pop
add
adcl
xor
add
mov
mov
and
add
test
add
xchg
add
dec
test
inc
sbb
add
adc
andb
add
adc
add
push
adcl
loope
add
add
inc
add
add
add
add
add
orb
sbb
add
add
add
and
adc
and
roll
add
sbb
aad
daa
inc
or
adc
pusha
cltd
and
or
add
add
and
inc
and
add
test
rcl
add
sub
sub
add
add
add
lock
pusha
dec
add
add
nop
add
adc
inc
leave
cltd
add
add
mov
add
mov
add
add
cmpb
and
add
and
sbb
push
and
add
dec
adc
pop
inc
add
and
inc
test
add
add
add
add
and
adc
add
mov
add
add
add
orl
adc
add
or
inc
push
addb
inc
rolb
mov
mov
pop
or
add
and
hlt
add
and
es
rorb
dec
enter
pusha
addb
add
sub
inc
inc
add
add
add
add
dec
add
add
add
add
mov
test
add
or
sbb
add
cmpsl
adc
inc
or
add
push
or
and
xor
subl
add
add
add
add
inc
and
inc
mov
add
add
add
and
add
xchg
mov
add
and
add
