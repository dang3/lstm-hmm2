sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
push
pop
mov
mov
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
push
push
push
call
mov
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
movsb
add
insl
mov
insb
or
push
roll
loop
shl
sbb
push
sar
cmp
lods
xor
movsb
leave
push
mov
sbb
jne
loope
dec
mov
and
out
ljmp
push
scas
mov
adc
jnp
cmc
dec
sarb
cwtl
pop
xchg
bound
pop
outsb
repz
iret
rcl
sbb
outsl
xlat
mov
insl
xchg
inc
in
add
add
or
dec
subb
push
adc
nop
bound
and
xor
stos
sub
imul
fmull
or
imul
clc
out
iret
arpl
xchg
int
out
mov
push
rcl
dec
mov
push
fcomps
xor
ret
push
imul
cmp
cmp
movsl
test
xor
das
adc
ret
mov
icebp
push
stc
rcrb
and
or
fwait
sbb
adc
pop
int3
and
popa
mov
adc
loopne
leave
testb
jnp
pushf
mov
movsb
test
roll
inc
xchg
fcompl
mov
jmp
mov
cmp
pusha
inc
inc
fidivs
clc
adcb
jge
outsb
shll
xor
add
push
xor
arpl
jbe
outsb
jae
movsl
fs
xor
sbb
or
fildl
lea
add
mov
dec
pop
out
push
popa
pop
xor
lret
mov
movsl
push
dec
lcall
out
sar
mov
dec
or
in
out
das
xor
sbb
push
pop
mov
out
das
adc
sub
mov
flds
scas
inc
scas
popf
push
sbb
cmp
xor
sahf
mov
or
imul
jnp
inc
aaa
arpl
cmp
out
adc
movsl
inc
pop
or
std
xlat
sub
int
dec
jnp
and
outsb
xchg
dec
popf
jae
inc
roll
mov
mov
mov
lods
inc
inc
das
fsubrs
outsb
fcmovb
stos
adc
int3
sbb
and
int3
idivb
hlt
mov
push
das
push
jne
test
aaa
jnp
es
test
dec
dec
mov
in
loope
enter
dec
dec
fs
inc
test
xchg
dec
jb
xchg
pop
cltd
loope
xor
icebp
std
dec
and
push
add
pop
pop
xor
adc
inc
mov
mov
vmovaps
add
mov
lcall
insb
xchg
sub
sub
and
and
inc
sbb
lds
xlat
out
repnz
lcall
imul
jb
cwtl
pop
push
sbb
fs
mov
xor
imul
fsubs
imul
dec
lock
ret
mov
repz
test
divb
push
jmp
or
movsl
outsl
cli
lods
mov
out
mov
cli
dec
fbld
cmp
xchg
cwtl
fwait
call
mov
icebp
mov
fucomp
jno
add
cmpsl
push
cmc
les
fs
dec
push
hlt
dec
adc
stos
sbb
jae
fwait
inc
test
jle
inc
stos
inc
ljmp
pusha
push
arpl
dec
jmp
sbbb
es
jg
xchg
daa
sbb
push
ss
jg
lods
outsl
loopne
fcomps
call
xchg
adc
rep
push
sbb
fisttpl
pop
orb
ret
sbb
inc
xor
dec
mov
pop
push
iret
jnp
adc
add
or
out
cmp
jge
mov
stc
xchg
adcl
or
pushf
mov
mov
xorb
pop
call
jmp
or
fcompl
and
iret
mov
cmpsb
add
xchg
push
jmp
stc
pop
jae
dec
inc
cli
cmpsl
ljmp
in
jle
cmpsl
rcrb
mov
cmp
cmc
lret
int3
dec
insb
out
inc
out
pop
jnp
xchg
les
mov
daa
pop
shrl
lret
sbb
xchg
jl
out
loopne
stos
test
add
sub
rcll
cmpsl
ret
and
pop
insl
bound
xor
pop
xlat
push
cmpl
inc
xchg
shrl
push
xor
mov
imul
rorl
sbb
add
sub
mov
xor
aas
xchg
xchg
call
inc
stos
orl
leave
or
xchg
adc
xchg
mov
jae
push
cmpsl
mov
enter
fisttpl
fmull
sbb
cs
pop
push
scas
dec
add
xchg
iret
sub
dec
fs
movb
push
or
gs
lcall
xchg
pop
cmc
adc
rolb
lock
sbb
cltd
xchg
enter
les
push
or
icebp
pop
movsl
outsl
pop
jbe
or
and
push
mov
outsl
sub
fiaddl
out
lea
sbb
gs
dec
ss
sar
push
mov
nop
sarb
or
or
sub
push
push
loop
cs
xchg
clc
jno
dec
dec
cltd
and
fidivrl
adc
in
sub
testl
dec
shr
sub
sub
lds
mov
mov
jo
ljmp
rorl
sub
inc
bound
mov
push
push
mov
pop
xchg
sbb
cmpsb
add
fcompl
mov
jmp
mov
in
loop
aaa
jp
rorl
and
xor
push
fistl
call
lret
and
je
aaa
jle
popf
push
push
rdpmc
int
mov
daa
dec
test
movsl
dec
mov
push
push
jns
imul
inc
lods
cmp
aam
xchg
andl
cmc
clts
out
ret
ret
jae
push
stos
mov
jmp
lods
dec
stc
out
dec
int
xchg
or
sub
sbb
add
cwtl
in
pop
dec
pop
mov
aad
xchg
push
in
in
xchg
adc
jne
loopne
pop
adc
add
test
mov
or
pop
int
inc
xlat
or
insl
popl
mov
push
faddl
pusha
jle
mov
adc
sub
jnp
push
sub
push
mov
or
add
sti
outsb
shlb
cmc
xchg
and
pop
mov
add
stos
dec
iret
xor
in
pop
nop
pop
sbb
or
sbb
and
jecxz
pushf
jl
add
shl
sub
dec
stos
call
subb
jns
mov
and
scas
imul
pop
push
and
out
imul
xor
daa
cmp
outsb
pushf
mov
fs
push
mov
scas
cmp
pop
test
sbb
ret
pop
and
mov
cmp
push
int3
mov
lahf
ljmp
adc
mov
mov
ja
mov
shll
fisttpl
adc
shlb
arpl
roll
pop
scas
subl
xor
fwait
sbb
lock
push
into
pop
lds
ret
and
jg
pop
fldt
outsb
pop
adc
jl
in
pusha
push
or
xor
mov
fadd
sub
rcrl
cwtl
mov
xlat
xchg
pop
mov
int3
inc
push
adc
pop
lods
push
xor
loop
pushf
push
arpl
sub
in
sbb
imul
jb
and
cmp
out
jns
shlb
dec
inc
outsl
test
ja
dec
jp
les
test
cltd
pop
jae
pop
insb
dec
lds
out
rol
out
cmc
arpl
outsb
push
push
outsl
cmp
inc
or
jo
ret
shrl
sub
dec
inc
mov
jge
fwait
pop
add
push
push
dec
stos
jo
daa
add
push
shlb
mov
rorl
in
cwtl
stos
jns
inc
push
pop
in
gs
fdivrl
ret
xor
xlat
arpl
aam
ja
xor
icebp
in
mov
push
mov
lock
jl
pop
js
pop
push
sahf
sub
cwtl
jmp
inc
lret
jnp
stos
jmp
jecxz
and
gs
jnp
mov
xor
mov
sti
mov
leave
aas
mov
pop
mov
add
fnstsw
das
push
bound
adc
into
mov
dec
xor
or
hlt
shrl
ror
sub
xchg
adc
dec
xchg
and
out
sbb
mov
pop
aam
mov
aaa
es
adc
sbb
inc
jae
test
mov
push
arpl
pop
fnstsw
addr16
push
sbb
push
jg
aad
push
mov
rcr
mov
test
shll
addr16
adc
icebp
in
loope
lods
mov
movsl
imul
mov
nop
inc
xor
and
xchg
subb
xlat
rorl
fidivrl
mov
mov
cmp
pop
mov
inc
xor
data16
lret
mov
hlt
pop
cmp
push
and
add
dec
test
sti
roll
je
and
push
push
pop
in
jnp
fsubrl
lods
mov
cmc
dec
stos
dec
adc
fwait
movsl
xor
lods
ret
xchg
clc
lods
mov
int
add
jne
pusha
push
add
call
dec
sub
mov
test
std
inc
xchg
imul
fmul
inc
sbb
sub
test
jb
xor
shrb
mov
cmp
xchg
in
sbb
ffree
cmpsl
dec
mov
cmp
jecxz
leave
and
xchg
pcmpgtd
mov
adc
sub
xor
pop
outsl
mov
nop
or
xor
enter
shll
xor
mov
filds
dec
cmpsb
es
test
out
jns
mov
mov
or
scas
ja
sbb
jge
xchg
in
minps
ficomps
or
daa
mov
sub
dec
test
outsb
fsub
lahf
jbe
adcb
movsl
adc
mov
les
jl
sbb
loopne
cmpb
jp
lea
mov
aaa
and
iret
dec
inc
imul
hlt
mov
sbb
out
or
and
pop
in
loopne
test
inc
enter
dec
lcall
loop
ja
push
pop
xchg
jns
shrl
nop
xor
imul
sbb
sub
push
and
scas
inc
sub
inc
dec
pusha
or
icebp
push
lock
bound
imul
repnz
pop
call
xorl
jne
loop
lcall
hlt
mov
lods
fldl
add
fistps
pop
dec
jmp
lea
test
nop
inc
mov
shl
test
jae
inc
xorb
std
dec
pop
ret
cmpsl
scas
add
inc
or
mov
pushf
imulb
ljmp
stc
add
jnp
pop
shr
cmp
ja
and
idiv
mov
push
dec
mov
dec
cmp
btr
jmp
inc
enter
mov
inc
xchg
inc
dec
pop
push
push
add
fstp
pop
pop
inc
and
lock
out
sub
cli
push
sbb
xchg
push
mov
lods
stos
clc
mov
lea
in
cmp
rorl
cltd
dec
fisttpl
lds
cld
mov
cmp
dec
rol
mov
fbstp
dec
adc
jge
mov
insl
rorl
push
aaa
xor
sbb
mov
mov
add
mov
pop
sti
in
mov
dec
out
hlt
lock
pop
shrb
frstor
pop
pop
ljmp
cmp
and
rorl
mov
loop
cmp
and
in
xchg
idiv
pop
jae
push
popa
mov
or
push
pushf
shlb
xchg
pop
xchg
sbb
scas
lea
ret
xor
pop
dec
jo
pop
test
inc
push
sbbl
mov
sub
and
jnp
dec
jle
iret
mov
adcl
loope
jp
sub
mov
cmovnp
jnp
and
insb
mov
pop
and
sub
xchg
add
data16
subb
ja
ret
imul
push
inc
jbe
jae
add
pop
push
adc
pop
sarb
dec
ja
pop
or
stc
mov
jne
push
std
jns
stc
add
popf
mov
fisttps
es
pop
fidivrl
fdivrs
lea
dec
sub
adc
ds
pop
xchg
xor
jecxz
subl
shr
test
and
arpl
jg
add
hlt
jle
push
mov
cs
dec
mov
outsb
out
dec
call
xor
nop
out
and
add
fldt
lock
push
cltd
iret
sub
xor
fwait
pop
out
stc
mov
lret
mov
mov
dec
xchg
cwtl
lcall
ret
ret
pusha
fisubs
mov
mov
lods
xor
cmp
andl
outsl
mov
lcall
fidivrs
inc
lahf
cs
insl
or
jbe,pn
mul
mov
sbb
dec
push
mov
dec
push
mov
and
adc
dec
push
enter
mov
aas
loop
btr
loopne
dec
out
inc
mull
adc
jmp
fisubs
cs
push
pop
data16
je
lahf
ljmp
sub
lcall
jo
insl
insl
push
add
jb
ja
inc
xchg
ficoml
xor
lock
or
inc
mov
in
and
mov
in
sahf
int
pop
loop
aaa
inc
in
ffreep
in
lea
jne
test
je
call
into
scas
les
jae
push
fisttps
pop
dec
test
inc
ror
xor
daa
lahf
test
xchg
ret
adc
sbb
pop
push
fldt
push
mov
mov
pop
cltd
inc
jle
mov
scas
je
sti
out
or
jecxz
dec
jl
repz
cmp
hlt
scas
cmp
push
mov
lahf
dec
test
mov
ja
jbe
mov
cwtl
mov
pop
jno
cmc
pop
cmp
ficompl
jns
inc
movsl
xchg
cmpsb
rorl
popa
call
sub
jne
clc
imul
sub
mov
cmpl
mov
iret
adc
mov
lahf
cmp
push
xor
push
xlat
jmp
stc
jp
addb
ret
inc
pop
adc
sbb
adc
ss
stos
movsb
lods
add
jae
and
into
imul
std
sub
cs
jns
lcall
jg
lahf
sub
and
mov
push
bt
inc
out
xor
nop
cmp
mov
jo
and
fwait
in
inc
jnp
jle
mov
mov
jge
xor
pop
sbb
leave
jo
push
sub
das
test
repnz
popf
push
rcr
add
xchg
stos
cmp
or
out
mov
mov
adc
push
lret
mov
cmp
out
pop
mov
sbb
nop
shlb
das
push
loopne
push
leave
cmpsb
movsb
adc
push
cmp
cli
mov
fnop
or
or
movsb
leave
jne
mov
cmp
push
push
sbb
jne
outsb
jns
insb
rcrl
loopne
dec
or
mov
notl
mov
call
mov
ss
loop
mov
cmp
lock
testl
stc
push
rcr
cmp
inc
mov
push
xlat
xor
adc
lds
icebp
or
ljmp
xchg
or
sbb
xor
pop
xor
jae
jo
sbb
add
add
mov
push
ljmp
dec
aam
mov
repnz
test
xor
adc
push
sbb
inc
inc
stos
adc
fwait
ja
add
stos
mov
cmp
push
or
dec
cld
sbb
adc
jle
loopne
ds
movsb
mov
add
addb
icebp
fisubl
dec
xor
sarl
arpl
cmp
push
les
adc
xor
lds
cmp
xchg
inc
cli
pop
mov
loop
and
repz
mov
lods
out
stos
inc
stos
gs
xchg
aad
xor
dec
lret
and
push
mov
inc
cmp
sub
pop
lret
xchg
enter
mov
sbb
insl
lret
movsb
jge
mov
lcall
inc
loopne
pop
push
lcall
jmp
out
xor
and
xchg
fcompl
jmp
jle
inc
xorb
repnz
jne
mov
sub
push
push
inc
fdivrl
xchg
nop
xor
enter
js
outsb
pop
rorb
pop
mov
loopne
clc
mov
mov
add
pop
sub
mov
and
repz
test
mov
ljmp
sub
or
sbb
mov
cltd
pop
call
insb
clc
sub
lods
and
mov
cltd
sti
add
pop
mov
push
inc
stos
jmp
sub
xor
not
test
inc
mov
jl
mov
or
sbb
sub
scas
call
cmp
test
lret
dec
lods
adc
loopne
jmp
rorb
movsb
sub
pop
xor
mov
push
sbb
subl
out
push
jo
mov
mov
mov
mov
inc
es
ja
les
aam
xchg
dec
jge
or
xchg
fwait
mov
xchg
xorl
xor
and
jmp
gs
inc
fldenv
xor
lcall
mov
popf
cmp
adcb
fistpll
divb
lahf
jnp
daa
xchg
je
mov
dec
jp
jl
xchg
mov
mov
adc
push
cmp
pop
ret
out
dec
notl
outsl
inc
js
and
jo
xor
mov
repz
jnp
jo
mov
cmc
sbb
xchg
imulb
dec
or
cmp
mov
push
repnz
sti
ljmp
pop
lret
scas
and
cli
sbb
push
mov
push
cwtl
cld
ror
xor
fsubrs
mov
jmp
adc
arpl
cmc
fdivl
pop
push
dec
pop
mov
mov
adc
fsubp
notb
sub
sub
lcall
mov
cmp
jmp
mov
pushf
fists
test
or
add
cmp
outsb
jne
mov
lods
mov
fdivl
xlat
ja
cld
ret
fists
mov
jnp
ja
lahf
inc
mov
pop
js
push
push
loop
mov
lods
mov
push
mov
pop
sub
jle
imul
sbb
sub
xchg
sbb
xor
into
in
notb
sub
shr
dec
inc
fcoms
into
and
int
push
mov
sbb
dec
neg
iret
mov
outsl
mov
mov
adc
cmpsl
push
adc
lcall
sbb
aam
jmp
dec
int3
add
or
or
addr16
cmp
mov
or
aad
in
into
dec
mov
and
lods
push
lea
fcomp
xor
mov
dec
sbb
mov
mov
add
clc
daa
xor
push
pop
sahf
pop
xor
sub
outsl
imul
cmp
imul
movb
push
aam
int
jecxz
inc
lock
add
jl
mov
bnd
addr16
pop
mov
dec
enter
data16
mov
dec
cli
out
push
push
jae
mov
lret
insl
in
jg
mov
and
into
out
ret
lcall
jb
in
imul
test
mov
movsl
int
cmpsb
fisttpl
xorl
sub
jbe
add
scas
into
cmp
xchg
aas
lea
mov
sub
fmuls
cmp
arpl
jg
ljmp
push
fstl
inc
inc
push
inc
add
adc
and
dec
test
in
imul
test
sub
jo
inc
stc
dec
repz
sbb
mov
or
cld
dec
and
cmp
sbb
mov
fxch
xor
xor
mov
popa
cld
jne
adc
jge
dec
add
arpl
pop
and
sbb
cld
adc
sbb
inc
fistpll
mov
outsb
mov
mov
add
xor
push
enter
pop
xchg
je
stos
les
pop
add
mov
jecxz
fcmovne
stos
jnp
in
pop
mov
out
or
leave
std
cmp
push
inc
add
popa
add
lret
ror
add
sub
adc
add
push
fwait
mov
rorl
cli
mov
xchg
pop
cmp
les
mov
xchg
fsubrs
mov
or
sub
sahf
insl
movq
decb
dec
xchg
dec
or
xor
sbb
jae
clc
jb
shll
pushw
fsubs
xor
adc
or
cld
push
std
jge
or
out
arpl
xchg
paddsb
lret
mov
mov
movsb
std
inc
rcrl
arpl
dec
stc
mov
inc
minps
ds
nop
imul
lds
in
pusha
xchg
dec
mov
jl
out
in
stos
gs
xchg
test
ljmp
cmp
insb
sbb
inc
inc
movsl
popf
lea
mov
sbb
mov
mov
pop
cli
sbb
and
inc
jecxz
sub
out
subl
ds
jg
xchg
inc
mov
mov
dec
sub
sbb
jge
ret
pop
repnz
pop
or
int3
jnp
sbb
adc
cmp
mov
rorl
mov
or
addr16
inc
loop
mov
std
loop
push
cs
out
sahf
jne
mov
or
mov
adcb
xchg
enter
mov
fistpll
mulb
mov
xchg
in
cmp
cmc
xchg
sbb
mov
push
mov
xchg
or
dec
mov
sbb
xor
mov
cwtl
mov
lds
and
aad
stc
adc
mov
jne
push
mov
add
xchg
hlt
popf
ds
fld
sarl
sub
xchg
stos
pop
and
loope
stos
mov
frstor
imul
mov
das
scas
clc
rorl
mov
iret
sub
and
dec
popf
inc
and
xor
imul
push
xchg
and
loope
push
ds
in
jb
adc
andl
push
sti
mov
out
cmp
xorb
aad
test
ss
cmp
mov
call
in
lea
daa
loope
xchg
jne
push
inc
jmp
daa
adc
lahf
sub
sarb
dec
cmpsl
test
repz
jge
pushf
repz
mov
inc
popa
shrd
cld
insl
xor
add
inc
cli
clc
cs
ds
mov
insl
or
pushf
add
dec
lahf
in
jne
add
adc
imul
icebp
xchg
adc
shrl
loopne
inc
fnsave
mov
and
and
jns
mov
cld
inc
and
inc
sub
hlt
xor
stc
das
add
icebp
iret
fbstp
test
xor
xor
mov
cmp
sub
xchg
dec
stc
lods
sbb
push
test
data16
ret
push
fbld
test
aad
mov
mov
scas
pop
or
lret
imul
inc
push
addr16
in
mov
push
hlt
mov
sbb
and
mov
pop
and
call
jmp
sti
prefetchnta
cli
dec
scas
jg
push
adc
adc
addr16
dec
jns
jne
mov
lret
insb
rclb
push
insb
inc
out
sbb
pop
addb
pop
pop
mov
inc
gs
daa
lahf
jg
push
add
rcrb
hlt
jne
jg
in
scas
addr16
ja
iret
inc
or
repz
pop
aad
rorl
mov
in
sbb
nop
adc
cmp
std
add
lahf
cmp
xor
or
xchg
fucomi
clc
sub
pusha
cld
popf
int
fiaddl
or
jne
rcll
inc
pop
mov
fcmovnbe
adc
stos
cmc
or
xor
and
out
in
out
jmp
clc
pop
jb,pt
and
sbb
movsl
mov
bsr
xor
loope
lcall
adc
scas
shl
out
aaa
aad
outsb
subb
cwtl
enter
insl
lret
gs
push
rcrl
adc
inc
pusha
mov
dec
int
jl
fstps
add
xchg
pop
aas
jmp
jecxz
mov
xchg
repnz
push
dec
jmp
push
out
aad
clc
movsb
mov
sbb
je
jmp
ss
jbe
loope
repz
mov
negl
push
enter
push
mov
push
jno
mov
ffree
pop
xor
int3
cmpsb
into
repnz
out
test
sbb
dec
lahf
das
jno
pop
outsl
xchg
repz
add
bnd
outsl
cltd
sub
pop
xor
cmpsl
adc
lods
xchg
push
mov
shrl
stos
sub
dec
cmp
fdivrs
rolb
cmp
cwtl
or
mov
loop
hlt
jne
scas
xchg
xchg
int
sahf
int3
lea
sbb
push
mov
ret
sbb
aas
mov
xchg
jb
push
and
sbbl
cwtl
in
es
inc
add
xchg
test
rcll
fucomip
iret
sbb
add
or
dec
nop
mov
loope
les
pop
pop
fidivs
add
sub
js
fistpl
movsb
push
rorl
jge
push
loope
int
adc
pop
testl
jne
xor
and
pop
mov
movsl
int3
push
push
aaa
imul
in
xchg
mov
ret
shlb
testl
push
jecxz
ror
mov
sub
dec
popf
lds
fdivrl
imul
add
stos
jne
cmp
mov
push
xchg
cwtl
or
cltd
jg
call
jno
jo
andl
fcomp
push
popf
add
fsubl
jnp
pop
xchg
imul
cmp
sbb
in
clc
jg
add
mov
jl
and
jl
es
pop
inc
lret
aas
movsb
mov
or
out
or
jmp
std
add
pop
pop
sbb
out
outsl
push
movsb
xchg
dec
lock
popa
pusha
or
add
out
shrl
mov
cli
pop
add
out
fs
cwtl
push
outsb
shl
jmp
int
jnp
neg
jbe
fistl
lods
ss
add
mov
cli
mov
mov
push
ja
orl
push
pop
std
cmp
mov
push
xchg
and
test
je
popl
addb
cmpsl
and
enter
lea
sub
adc
mov
pop
push
push
pop
ja
int3
mov
leave
les
mov
push
mov
jnp
dec
lods
in
sub
in
nop
cld
in
xchg
push
sub
xchg
nop
andl
adc
notl
cmc
xchg
xchg
jmp
scas
jns
iret
mov
int
inc
push
and
inc
pusha
fcomps
mov
jp
ss
jo
fst
insb
cmp
cltd
xchg
mov
dec
adc
sbb
fmuls
fmulp
jno
mov
or
clc
mov
cmp
sub
mov
into
xchg
add
loope
and
and
xorb
out
arpl
add
push
jo
lds
in
cmp
sti
das
and
xor
ss
leave
sbb
or
in
or
aam
mov
sbb
cwtl
adc
les
or
sbb
mov
xor
outsb
pop
sti
add
fnsetpm(287
and
fnsave
popa
leave
cmp
loope
cmp
pusha
mov
sub
push
outsl
shr
push
scas
test
push
dec
sarb
push
mov
shll
cld
mov
sbbl
insl
fadd
add
and
mov
jg
jno
test
test
std
add
push
mov
test
stos
out
jl
stos
ljmp
mov
imul
arpl
mov
or
shrb
mov
jb
mov
inc
into
js
cmpsl
or
data16
or
lods
pop
inc
jecxz
movsl
cmp
inc
dec
stc
inc
dec
and
add
fxch
test
mov
xchg
shll
lcall
jecxz
mov
dec
adc
cmpsl
shll
push
out
pshufw
or
add
cmpsb
stos
adc
jl
add
mov
cli
arpl
mov
mov
movsl
mov
adc
jae
jbe
sbb
ds
xor
ret
sbbl
mov
sbb
lret
jg
sub
add
imul
out
push
jae
mov
xor
data16
mov
test
test
loopne
ret
fstpt
xor
adc
sbb
scas
sub
and
lret
xorb
jbe
adc
mov
inc
jnp
ljmp
ja
push
sbb
mov
pop
mov
dec
inc
mov
or
jl
xchg
lret
fisubs
subb
out
xor
sti
je
iret
mov
jne
push
lea
mov
scas
lcall
or
imul
xlat
sbb
mov
pop
in
cli
mov
lcall
hlt
jno
lcall
jno
xor
loop
mov
cli
sub
clc
rclb
je
push
adc
fcomp
sbb
and
xor
mov
daa
lret
add
ret
mov
xchg
clc
aad
fldenv
adc
fcmovnu
rorb
jb
test
inc
or
gs
xchg
dec
or
pop
mov
mov
movsb
dec
or
sete
hlt
hlt
and
dec
cmc
mov
sub
ss
pusha
add
xchg
xchg
movsb
or
sub
adc
mov
mov
adc
push
sar
jecxz
stos
inc
leave
cmp
add
cli
lcall
lock
and
lahf
jo
jbe
cmp
lea
xchg
in
pushf
addr16
cli
push
dec
or
gs
in
dec
dec
fs
cmp
mov
repnz
xor
xlat
mov
enter
or
scas
mov
rcrb
in
dec
cmp
out
fisttpll
lret
lahf
movsb
sub
adc
enter
jl
xlat
dec
scas
lret
push
xorb
aad
das
cmpsb
das
jnp
adc
mov
sub
cwtl
lds
xor
mov
cmpsl
fnclex
movsl
imul
pop
xchg
mov
cmp
cmp
hlt
xchg
aad
mov
or
ljmp
pop
xor
in
fwait
add
fstpl
insb
xchg
cmp
lock
mov
pop
stc
or
arpl
jg
mov
sbb
inc
je
movsl
in
test
xorl
pushf
aam
aam
fnstcw
dec
push
repz
outsb
lret
mov
rcl
or
pop
jne
or
das
out
mov
jns
ror
into
loop
imul
mov
xchg
testl
xor
mov
aad
cmp
movsl
mov
dec
out
aas
and
repnz
xlat
fisubrl
and
and
movq
add
adc
jmp
sub
cmp
adc
imul
cmpsl
ret
sti
outsb
mov
gs
aaa
addr16
sub
sub
js
loop
movb
jmp
add
aam
data16
fdivs
outsl
popf
or
xor
out
or
das
repnz
xor
mov
xchg
add
jns
popf
cwtl
adc
xor
adc
mov
jbe
or
mov
divl
xchg
sub
dec
adc
mov
inc
add
xchg
mov
rcl
shl
jecxz
mov
hlt
xchg
dec
jbe
ds
stos
repnz
and
mov
adc
dec
out
push
movsl
jns
inc
jne
movsl
mov
mov
jge
notl
xor
pop
js
and
stos
sti
push
orl
test
outsl
dec
ss
ljmp
add
outsl
dec
pusha
or
inc
outsl
shrl
mov
icebp
jae
jmp
or
dec
mov
or
push
aas
xor
mov
jbe
fcmovb
mov
js
shl
cwtl
push
nop
pop
push
rcrb
push
mov
sbbl
int
neg
inc
pushf
nop
push
add
xchg
mov
shlb
pop
and
cltd
cmpsl
imul
test
popf
or
jecxz
dec
jnp
imul
popf
in
adc
lods
test
mov
adc
cmp
lea
ret
jle
ret
arpl
in
pop
imul
jg
push
loopne
jae
push
insb
mov
pop
sub
adc
push
xchg
fiadds
imul
jns
push
cmp
dec
adc
pushl
and
jb
enter
sbb
dec
xlat
jmp
push
lods
pop
push
repnz
roll
int
push
movsb
outsb
out
add
call
or
cwtl
mov
cmp
push
pop
mov
adc
jl
xchg
mov
xchg
in
add
inc
cltd
in
xchg
inc
rolb
cmp
in
test
in
cmp
scas
movsl
icebp
test
xchg
adc
mov
fisubs
or
mov
rorb
repnz
jle
mov
push
xor
mov
pop
fcmovne
xchg
add
mov
mov
xchg
push
mov
inc
jne
clc
mov
aaa
xchg
push
dec
cltd
mov
sbb
sbb
push
or
dec
dec
aas
adc
sub
xor
xchg
xchg
js
adc
mov
sub
das
xor
mov
sbb
jo
cmp
shlb
dec
mov
add
xchg
clts
in
daa
push
in
adc
aad
out
adc
out
pop
jl
cmp
aaa
ja
lea
fidivrl
bound
mov
dec
les
aas
into
push
outsl
sub
pop
inc
cmp
mov
mov
add
sub
pop
out
push
cmpsb
subl
mov
lahf
data16
jmp
jmp
sarl
or
ds
dec
inc
mov
aad
push
cmp
jge
scas
cmp
nop
inc
mov
add
sbb
daa
inc
or
inc
sub
js
mov
push
test
push
gs
adc
enter
lods
les
mov
or
sbb
int3
xor
cmp
pop
or
mov
sbb
adc
pop
mov
fcompl
mov
call
fimull
in
rcrl
ret
inc
loopne
bnd
xchg
in
mov
pop
dec
and
idiv
mov
jl
lea
mov
lret
inc
mov
or
div
sarl
loop
shrl
adc
jle
insb
adc
adc
pushl
dec
xor
mov
push
sbb
jmp
pop
test
add
aam
dec
outsb
mov
lea
les
xor
mov
int3
xchg
cmp
lods
xchg
popf
inc
loop
sti
cmc
mov
xchg
cltd
int3
rol
mov
jo
popf
and
xchg
pop
lcall
mov
cmp
cmpsl
js
lods
xchg
cmp
arpl
pop
cwtl
lahf
cmpsb
clc
xchg
aas
gs
test
js
and
push
adc
add
xchg
leave
fstpt
rcr
adc
or
inc
lods
jmp
dec
mov
mov
sbb
xchg
ret
icebp
push
mov
xor
mov
mov
sbbl
mov
ret
bound
sub
pop
or
ret
mov
sub
shl
mov
fwait
inc
push
outsb
andb
cmp
mov
add
mov
jle
xchg
sti
in
shll
mov
stc
pop
sub
lock
and
or
jmp
movsb
dec
bound
imul
push
mov
jp
test
lea
mov
dec
jne
repz
cmp
sbb
jns
mov
cmp
dec
ss
xor
xchg
loope
xchg
fdivrl
inc
lock
dec
arpl
mov
mov
ja
inc
pop
jo
sti
fs
xor
fwait
jb
jmp
cmp
mov
cmp
out
mov
je
rcr
stc
xchg
fdivs
pop
outsl
jge
mov
out
cltd
cwtl
into
or
sarb
cs
add
lods
xchg
enter
adc
jp
xchg
int
mov
test
mov
cmp
out
sbb
enter
xor
fdivl
stos
outsb
loop
pop
mov
mov
movaps
jmp
rolb
stos
mov
xchg
mov
cmp
and
cmp
add
out
adc
jle
loop
int3
sbb
out
out
adc
push
cltd
or
jmp
in
dec
pop
outsb
lcall
and
cmpl
add
ljmp
sbb
jb
clc
arpl
orl
mov
test
push
jmp
add
add
and
mov
pop
inc
xchg
cwtl
jnp
jne
mov
xchg
stc
xchg
aad
movsb
hlt
jmp
dec
adc
push
add
stos
and
jnp
mov
loop
std
push
pop
icebp
add
xchg
mov
imul
test
out
add
ret
or
lock
xor
add
arpl
subb
iret
or
fsts
inc
aaa
mov
loopne
xor
sarl
jo
ds
dec
jge
xchg
mov
jmp
inc
push
mov
sti
inc
out
jb
fildl
push
inc
leave
test
enter
jl
dec
test
mov
roll
push
sub
adc
int3
loopne
std
loopne
loop
in
not
xor
jg
js
jbe
dec
lahf
aad
not
imul
arpl
test
inc
xchg
sbb
inc
rorl
inc
adc
xor
inc
sbb
fisttpl
push
scas
sahf
outsl
mov
lods
sbb
mov
jns
sub
pop
cli
xchg
lods
xchg
movsl
pop
ljmp
jo
mov
lret
fistpl
pop
adc
mov
dec
es
or
sub
in
sub
in
sub
xchg
or
dec
int3
inc
pushf
lods
in
pop
mov
inc
testl
lahf
cmp
iret
dec
mulb
sbb
outsl
sahf
rcrl
filds
stos
fcoml
imul
rcr
std
mov
jne
mov
mov
in
add
aas
negl
js
mov
dec
add
mov
pushf
fistps
mov
sbb
inc
pushf
mov
mov
divb
mov
test
adc
or
mov
imul
jg
sahf
clc
xor
aad
movsl
in
add
add
inc
jo
dec
adc
in
dec
movsb
iret
xchg
dec
inc
leave
es
cvtdq2ps
cmpsl
fldenv
bound
into
ljmp
les
shll
ss
div
cmp
mov
lcall
enter
push
ja
enter
sub
xor
pop
xchg
mov
jg
mov
fimull
push
das
jae
es
inc
imul
punpckldq
sbbl
aam
mov
adc
fs
ret
and
les
pop
shl
cmp
dec
hlt
stos
andl
xchg
push
cmc
push
inc
cwtl
xchg
je
jbe
rorl
mov
shl
fiaddl
dec
cmpsb
sbb
and
mov
nop
dec
insl
in
xor
dec
mov
insl
clc
fistl
std
imul
cli
jo
shrb
daa
fstps
hlt
ret
inc
dec
lock
add
popa
test
jl
xchg
mov
dec
and
icebp
dec
inc
sbbb
push
in
bound
jmp
inc
ljmp
aam
iret
inc
in
xchg
loop
xchg
mov
sahf
sbb
stos
and
cmp
cmp
repz
adc
lcall
dec
aas
xlat
fisttps
cmp
sbb
jle
imul
imul
jns
cmp
mov
loope
add
cmp
xor
je
test
dec
cmp
mov
or
sbb
call
in
gs
clc
cmp
sahf
imul
popf
fwait
adc
and
dec
xchg
xchg
xchg
enter
in
sbb
xchg
cltd
push
sbb
outsb
mov
push
aas
jne
scas
xchg
ja
mov
mov
push
pushf
push
push
pop
mov
daa
jge
sbb
mov
fxch
or
leave
and
outsb
mov
mov
jno
inc
jo
push
mov
pusha
loope
pop
inc
out
mov
adc
daa
repnz
cltd
lcall
mov
repz
gs
popa
lret
pop
imul
inc
imul
hlt
sub
movsl
lahf
jns
std
pop
pop
push
and
test
test
fld
mov
dec
daa
andb
out
insb
in
xchg
adc
xchg
cmpsl
lds
push
fistps
test
aad
icebp
jne
andl
dec
sub
xor
pop
jl
jmp
jns
out
fmull
fildl
and
or
iret
jg
les
xchg
fisubl
sub
mov
repz
xchg
movsl
pop
sbb
sub
inc
mov
pop
pop
or
movsb
sub
shlb
js
jnp
dec
rclb
jns
call
push
push
iret
push
test
in
xor
jmp
inc
and
sbb
test
in
test
mov
sub
sarl
xor
inc
jecxz
and
add
cmp
sub
xchg
loopne
adc
fs
lods
xor
call
test
cld
shl
mov
and
shrl
mov
je
bound
cmp
xchg
bound
cmc
pop
stc
or
out
fdivs
ret
das
popf
into
gs
negb
push
int
lea
pop
cli
jle
fistpll
xor
nop
dec
adc
movsb
dec
insl
mov
add
pusha
mov
xchg
pushf
xor
inc
inc
bound
imul
inc
hlt
popf
es
cmpsl
mov
lahf
imul
mov
mov
xchg
mov
mov
push
andl
sub
mov
fsub
mov
push
pop
mov
or
jmp
cmp
les
mov
jne
sbb
push
stos
ja
pop
lods
mov
hlt
fstpt
divl
and
xlat
enter
xorb
pop
jo
push
xchg
pushf
mov
pop
in
jo
sub
adc
rcrl
es
lods
mov
inc
sbb
mov
and
sbb
sti
rcrl
stos
dec
mov
std
push
or
cmc
data16
std
out
lret
inc
fwait
movsl
lret
inc
call
fs
cmpsb
jle
cltd
and
imul
orl
mov
fwait
pop
cld
pushf
inc
push
scas
repz
sbb
ljmp
call
mov
cmp
adc
cs
cmpb
inc
push
inc
inc
fldenv
push
lret
add
push
ja
lods
arpl
imul
jo
jmp
mov
jb
pop
fcoms
sbb
sbb
addr16
mov
lret
aam
sbb
cmc
loopne
ja
cmp
cmp
inc
adc
mov
cmp
hlt
mov
mov
fldenv
fs
mov
ror
sbb
imul
mov
adc
or
mov
popf
mov
cmpb
and
loop
imulb
inc
insb
mov
testl
push
popa
push
dec
mov
dec
dec
nop
stos
sahf
jo
push
xchg
push
jmp
dec
push
jp
fdivrs
fimuls
aam
dec
adc
lock
popf
dec
ret
add
push
lds
pop
stos
fsubr
adc
sbbb
and
mov
mov
mov
dec
cmp
cmp
scas
or
lods
test
mov
sbb
jbe
fdivrs
outsl
std
or
out
inc
out
pop
icebp
aas
sar
das
xchg
data16
sub
adc
adc
inc
inc
adc
stc
rolb
jno
in
mov
mov
out
add
js
cwtl
std
or
cmp
int
in
bswap
jb
lock
scas
ds
mov
leave
lods
lea
repz
sub
cmp
pop
bound
jmp
push
mov
pushf
sub
cmpsl
dec
sub
mov
ss
test
iret
cwtl
inc
daa
in
cbtw
mov
inc
pop
mov
xchg
add
cmc
inc
sbb
xchg
repnz
pop
fcmovnb
ret
test
dec
cmp
aas
ficompl
dec
cltd
xor
mov
and
les
push
mov
pushf
fdecstp
or
aam
inc
adc
add
ret
jbe
xchg
xchg
add
ss
dec
aam
push
mov
lret
movsb
sbb
mov
cmc
add
pusha
popf
cli
jg
imul
inc
cmpsl
in
adc
push
std
push
mov
mov
popa
cmc
add
fimuls
push
mov
jg
inc
xor
sbb
and
mov
adc
fs
mov
repz
dec
repnz
lret
js
pop
jae
xor
and
xchg
push
sbb
or
cwtl
out
push
adc
jl
jmp
mov
int3
out
mov
add
movsl
jge
lret
inc
notl
sub
outsl
adc
dec
sub
inc
ljmp
sub
cmp
pop
dec
jle
lea
addr16
imul
lea
sub
jmp
and
aam
push
push
mov
dec
repnz
jae
in
sbb
daa
inc
dec
mov
iret
mov
test
push
dec
adc
addr16
scas
sti
pop
repz
negb
mov
and
mov
xor
fs
ret
push
push
aas
push
decl
div
outsl
jp
inc
mov
and
into
cld
mov
push
cmc
fildl
aas
xchg
inc
add
lahf
sbb
and
loope
mov
jae
jmp
aaa
mov
fwait
loop
mov
ss
inc
cwtl
ss
ljmp
xor
pop
jae
lock
xor
fwait
stos
push
call
inc
push
sub
loop
shr
pop
pop
pop
cmp
inc
fs
or
sub
cmp
push
cmp
pop
sub
or
ud0
jge
or
pop
popf
or
inc
xor
mov
mov
je
ret
push
and
sbb
push
xor
rclb
push
cmp
and
jg
daa
xor
pop
mov
lret
push
lods
push
xor
push
jecxz
pop
xor
sbb
je
push
jl
popf
popf
scas
ss
pop
in
xchg
mov
fnstenv
repnz
int
dec
fistps
pop
cmp
frstor
sbb
add
fwait
leave
rolb
sbb
fsubl
pop
jbe
cmc
pop
jnp
call
xchg
test
mov
fwait
adc
sti
add
mov
outsb
cltd
addr16
out
shll
rorb
adc
jle
or
pop
dec
test
and
inc
das
jmp
dec
ss
mov
or
and
mov
cli
mov
pop
repz
add
mov
dec
enter
and
jecxz
scas
sbbb
xchg
push
cwtl
call
xor
cmp
jp
jcxz
push
sahf
pop
out
mov
sbb
stos
or
and
and
rcrb
sbb
andl
jno
pop
xchg
inc
adc
jno
sbb
inc
jmp
test
aaa
dec
sbb
xor
ds
arpl
jp
cmp
flds
or
dec
pop
mov
scas
shrb
push
cmp
jmp
jb
and
sahf
stos
bound
cmp
call
sbb
mov
sti
lret
add
insb
mov
repnz
adc
or
in
dec
push
orl
cwtl
mov
or
add
mov
mov
fcmovnu
mov
inc
cmpsb
aaa
xchg
push
outsl
sub
pop
jecxz
add
ficoms
and
jbe
pop
sbb
pop
jle
lock
in
fnstsw
dec
aam
xor
push
mov
inc
outsl
leave
sbb
cld
movsb
pop
mov
inc
pusha
dec
pop
scas
fchs
push
adc
push
cmc
std
icebp
xchg
add
cld
jmp
lods
and
inc
frstor
enter
shl
int
js
jmp
outsb
xor
arpl
pushf
xchg
xlat
cmp
jge
fucomi
add
test
cmp
push
dec
mov
and
adc
push
pop
xchg
adc
add
xchg
mov
cli
xor
sahf
dec
jecxz
in
std
sbb
mov
cmp
cmp
push
jge
jecxz
mov
out
out
jne
out
add
das
mov
int
dec
daa
mov
bound
adc
dec
jb
jne
push
sahf
adc
rep
sbbl
xor
into
xchg
sub
mov
sub
aas
stos
aas
js
push
add
jns
js
arpl
or
cmc
ljmp
fisubl
in
fucom
dec
aam
mov
mov
xor
loopne
cmp
push
enter
sti
test
sti
sub
jbe
outsl
xor
mov
cmp
push
fisttpll
icebp
sbb
stc
mov
push
xchg
fsubrl
mov
cmp
mov
mov
mov
bound
fucomi
insb
or
cmp
lret
push
es
negb
mov
aas
out
pop
mov
js
cmp
cmpsb
adc
aam
arpl
push
jnp
out
inc
add
dec
stos
loope
inc
push
and
mov
push
sbb
mov
push
insl
lret
movsb
int3
dec
jne
fs
xchg
push
push
fs
enter
bndstx
push
xor
imul
add
mov
mov
fidivs
stos
xor
insl
ljmp
or
stos
jno
in
rorl
rcl
add
or
mov
jge
mov
mov
mov
cmp
cs
js
mov
sbb
push
pop
cwtl
pop
lds
dec
jle
sahf
and
sarb
sbb
cs
inc
outsl
adc
mov
cmpsl
push
fisttps
pop
scas
rcr
xchg
popl
sub
jnp
lods
push
ret
popl
test
leave
jg
gs
insl
mov
xchg
cmp
repz
fcmovnb
lret
add
mov
xchg
jp
aad
push
cs
in
insl
ret
fisttpll
mov
es
fcom
lods
or
or
hlt
cmp
dec
stos
push
mov
icebp
setle
mov
outsl
xchg
sbb
push
repnz
mov
mov
ljmp
sbb
bound
fwait
pop
bound
jno
stos
mov
and
out
lret
in
ja
jo
mov
fldcw
testb
shlb
xchg
add
add
mov
mov
popf
pop
ss
test
cs
pop
pushf
sti
inc
daa
or
lods
xor
psubusw
jge
jbe
cmp
popa
push
xor
test
sbb
dec
je
push
lcall
or
mov
xor
jae
rol
fldt
mov
rcrl
imul
sub
out
lods
ret
sbb
andb
xchg
sbb
bound
gs
lods
jmp
lcall
into
pop
rol
xchg
xchg
xchg
xor
pop
icebp
aam
outsb
or
es
mov
jl
nop
mov
xor
js
test
icebp
pop
outsl
sub
stc
daa
pop
scas
sbb
xchg
adc
loope
ja
inc
inc
out
stos
sarb
push
or
es
or
mov
arpl
add
into
pop
out
clc
mov
addr16
inc
insb
imul
rolb
jl
imull
or
cmp
ljmp
pop
and
fnstsw
mov
fcoml
lret
cmp
imul
mov
outsl
xchg
sbb
sbb
xchg
movsb
adc
xor
cmc
rclb
jns
pop
dec
pushf
pop
call
fcomp
sub
sahf
mov
lea
pushl
movsl
push
scas
push
mov
jp,pn
outsb
shl
or
int
mov
xchg
mov
mov
addb
int
mov
leave
filds
xchg
ja
out
enter
stos
es
ds
jno
mov
xchg
lods
or
popf
mov
sbbb
cmp
in
mov
bound
mov
jle
and
aad
pop
sti
dec
sbb
leave
inc
scas
mov
cmp
les
add
mov
or
outsb
mov
and
xchg
sub
lret
lret
mov
mov
scas
and
ljmp
or
mov
add
int
xchg
mov
idivl
popa
fwait
loopne
lods
scas
cmp
jno
pop
popf
mov
push
je
pop
cmpsl
lcall
test
mov
push
lea
sahf
jo
mov
push
xchg
dec
xor
insl
les
addb
mov
xchg
jo
adc
push
stos
jge
inc
hlt
and
or
push
sbb
mov
stos
ja
sbb
or
out
cwtl
add
lcall
js
test
ficomps
dec
mov
arpl
stc
adcl
fsubs
push
mov
addb
ljmp
xchg
push
incl
jecxz
jbe
test
push
jl
xor
jmp
xchg
push
fisubl
int3
fs
add
inc
cli
in
outsb
into
or
xor
or
jge
arpl
pop
pop
in
or
ret
call
andl
insb
int3
testb
data16
rorl
insl
pop
out
sbb
loop
popf
sub
ljmp
repz
xchg
data16
out
subl
push
sbb
int
jg
adc
scas
hlt
or
inc
dec
jnp
mov
rep
popa
leave
pop
stc
inc
sub
out
inc
ljmp
sbb
and
ret
dec
dec
push
outsl
idivl
jb
or
and
bnd
push
andb
xor
sub
inc
and
jae
js
and
xchg
push
mov
sbb
add
std
mov
vcvttps2dq
add
mov
xor
out
inc
into
sahf
cmp
sarb
pop
sub
insb
int3
rorl
dec
xchg
faddl
cmpb
fisubl
in
das
xchg
jnp
cmc
dec
je
adcb
loopne
clc
push
and
stos
push
sbb
fbstp
pusha
add
sbb
xor
cmp
push
xor
jbe
cmc
cmp
test
cmpsb
insl
sub
fidivrl
sahf
testl
int
mov
ds
call
addr16
inc
and
xchg
and
fisubrl
and
jmp
mov
mov
mov
out
testb
loope
jmp
jnp
aas
add
mov
testb
mov
fcmovbe
mov
stos
cmp
sub
into
xchg
lds
dec
fisttps
cltd
aad
shr
cmp
xchg
push
jl
push
adc
sub
xlat
push
push
adc
fwait
push
out
test
mov
shrb
xchg
movsl
adc
mov
loopne
fsubl
int
sub
mov
out
mov
adc
push
xor
add
outsb
lcall
das
mov
pop
orb
hlt
lods
sarl
cmp
dec
push
jno
push
int
pop
in
xchg
jns
cltd
push
ror
adc
mov
and
xchg
xchg
ret
or
gs
xor
jno
hlt
es
out
hlt
mov
mov
or
sbb
adc
adc
xchg
sbb
push
sahf
adc
insl
pop
pop
cmc
enter
addr16
pop
adcb
cmpsb
jmp
call
xchg
faddl
xchg
push
dec
and
jl
sar
std
inc
adcl
push
mov
or
jo
mov
adc
in
ja
inc
adc
xchg
je
ds
xchg
sbb
pop
add
or
fwait
xor
inc
repz
movd
daa
dec
dec
rcr
std
or
fucom
hlt
ja
mov
nop
xor
int
pop
xchg
dec
int
popf
lahf
icebp
xor
and
sbb
incl
out
mov
rcl
mov
jnp
push
pop
sti
lcall
out
mov
adc
or
adc
sbb
divl
xchg
add
xlat
cmp
cmp
jbe
mov
and
int3
nop
pop
mov
movb
push
outsl
shlb
rolb
xchg
xor
hlt
cs
les
xor
stc
inc
add
shll
stos
jp
lcall
mov
test
mov
mov
push
sti
sub
sbb
mov
and
shr
xchg
xor
xlat
mov
xchg
and
test
and
jo
push
lods
mov
push
mov
pop
mov
push
out
arpl
les
testb
in
rorl
jg
push
and
shll
mov
mov
pop
xchg
mov
sub
ljmp
mov
sub
ss
lods
loopne
pop
mov
inc
pusha
mov
xchg
or
fistpll
xchg
jl
jecxz
or
das
fisubl
xor
mov
enter
das
sub
sbb
ljmp
fdivrp
icebp
dec
lods
or
sub
and
push
or
cld
xor
clc
les
gs
xor
cld
out
sahf
ret
dec
cmp
push
shrl
or
sub
imul
xchg
aaa
jmp
add
loope
dec
mov
cmpsb
shll
inc
pushf
push
mov
cli
aaa
js
lahf
aam
repnz
popa
jne
sub
sbb
and
addb
ficoml
aas
sbb
jmp
lods
cwtl
and
sbb
lea
mov
lods
pop
mov
lahf
fldl
jbe
push
sbb
and
jle
mov
xor
xchg
add
pop
aad
je
jge
stc
push
mov
cmp
dec
push
lret
sub
add
leave
daa
mov
iret
adc
dec
push
daa
inc
jecxz
cmc
inc
adc
je
jmp
in
and
push
sbb
jbe
sbb
int3
cmpsb
test
ret
hlt
dec
mov
mov
jbe
mov
out
mov
cmp
lods
sub
ficomps
pop
xor
and
sub
cmp
pop
xchg
mov
shll
or
adcl
mov
jmp
add
xchg
les
mov
xor
cmc
lock
push
dec
test
cmp
jbe
mov
push
cmp
lcall
mov
mov
aad
add
les
das
lahf
int
push
pop
or
xchg
mov
push
das
lods
divb
sbb
sub
fcoms
subb
push
mov
gs
cmp
ss
mov
or
mov
aam
jbe
mov
arpl
insl
test
inc
sbb
lods
cmp
mov
pushf
jne
pop
jp
pusha
das
pop
inc
incl
mov
mov
gs
out
orb
or
mov
aas
pop
sub
ss
inc
mov
inc
stos
insl
enter
cmpsb
xor
cmpsl
outsb
xlat
std
jl
xor
cwtl
cmpsb
jne
xlat
push
daa
hlt
xor
sbb
pop
faddl
repnz
jg
nop
push
fs
into
sbb
jns
aad
push
xchg
inc
je
les
es
and
daa
sbb
sub
or
mov
pop
repz
inc
repz
adc
jno
xchg
and
lret
sub
jp
ffree
sti
sub
frstor
push
jno
cmp
dec
popa
sub
aaa
and
mov
jmp
cmpsl
iret
jo
movsl
jmp
xor
pop
loope
adc
in
pushl
cmpsb
jb
je
cmp
inc
cs
pop
inc
pop
popa
xchg
fs
shlb
mov
das
or
test
dec
into
or
in
mov
int
mov
inc
scas
dec
cmc
adc
pop
repz
xchg
lret
adc
call
mov
ljmp
dec
aas
sbb
sub
cmpsb
mov
fsts
dec
lock
aas
xlat
lcall
jmp
ds
dec
scas
dec
sub
sub
cmp
xor
xorb
jg
rcrb
dec
movsb
pushf
popa
or
xor
stos
hlt
xor
into
out
adc
insb
mov
movsb
in
fs
mov
imul
aaa
es
loopne
xor
xchg
lret
adc
out
call
movsb
stos
xchg
out
pop
popf
xor
into
int
inc
mov
out
and
dec
push
jbe
xor
fildll
jbe
mov
xor
cltd
movq
popf
cmpsb
push
lea
das
or
cmp
and
and
xchg
call
fdivrl
xor
or
inc
mov
int3
mov
pop
inc
pop
pop
pusha
lea
push
loope
test
xchg
or
sbb
jecxz
push
mov
cmpl
sub
nop
cmp
push
mov
das
inc
pop
mov
mov
dec
js
lcall
push
shl
imul
ljmp
push
iret
ret
int3
xchg
test
mov
test
aas
xor
shlb
imul
push
imulb
mov
or
test
dec
imull
jmp
in
arpl
mov
in
jle
pop
xchg
clc
notl
test
sahf
or
in
scas
sbb
adc
sbb
and
jo
scas
scas
push
push
fsts
sub
adc
sar
pusha
pop
adc
fistpll
jecxz
pop
sub
push
shll
out
inc
stc
mov
xchg
jl
dec
or
push
cmpsl
insl
inc
or
xlat
ds
cmp
or
mov
popf
pop
call
repz
clc
cmp
xchg
loope
movl
push
inc
test
and
lret
fidivs
xor
iret
inc
mov
pop
mov
adc
testb
int
repz
into
ds
fildll
and
out
or
shl
shll
lds
mov
jnp
out
dec
mov
xchg
xchg
pop
mov
in
outsb
arpl
lret
jnp
sub
dec
push
test
jp
and
sbb
pushf
inc
mov
mov
int
movsb
xorps
testl
in
xor
ja
inc
inc
jl
or
adc
adc
and
xchg
cmpsl
mov
in
das
xacquire
data16
mov
pop
sub
pop
aas
push
das
jp
insb
jmp
push
mov
xor
and
sahf
incb
add
jno
xchg
sbb
pop
ljmp
push
icebp
add
or
or
pop
xchg
or
inc
and
inc
mov
mov
mov
pop
bound
aam
ror
push
loopne
dec
push
fldcw
mov
sbb
pop
push
das
inc
push
int3
sub
jmp
xchg
arpl
adc
out
fldl
jmp
pop
dec
or
xchg
and
movsb
adc
cwtl
outsb
add
dec
adc
pop
mov
sar
cmpsb
cmp
pop
fcompl
mov
pop
pop
jo,pt
cmpsb
sbb
xchg
stos
sbb
cmp
je
dec
add
add
adcl
push
lret
aaa
sti
enter
mov
xchg
inc
fbstp
sahf
push
jge
std
lret
cld
addr16
mov
notb
aam
testb
loop
sub
push
je
stos
dec
insl
pop
sub
and
lcall
sub
mov
dec
nop
add
stos
ja
dec
mov
add
inc
sbb
adc
loop
and
das
repnz
shll
jp
jle
rorb
sarl
lahf
out
mov
dec
jp
loope
cmp
xor
push
dec
frstor
lea
adc
insl
pushf
lahf
jo
cmp
cmpsl
mov
mov
sbb
or
xchg
lret
jns
aam
jo
fstl
add
jne
push
push
lcall
int
xor
std
scas
sarb
jb
aad
xchg
xchg
xor
pop
lcall
es
xor
or
lock
repz
pop
das
jmp
enter
xchg
cmp
sbb
pushf
int3
mov
out
and
ficoms
cmp
add
call
or
cltd
add
imul
dec
xchg
sub
sub
xchg
fcomps
jecxz
inc
cmp
inc
daa
popa
fwait
nop
jg
and
mov
ja
dec
mov
mov
gs
mov
aaa
or
mov
rorb
push
sarl
mov
pop
stos
pop
push
mov
xchg
fwait
lds
and
rcrb
out
cmc
cmp
dec
mov
lret
xchg
rcl
jge
fisubrl
sahf
jb
insl
push
or
sahf
push
int3
sbb
cmpsl
mov
cmp
insl
xchg
push
pop
shrb
cmpsb
or
inc
ss
cmp
js
mov
pop
popf
cld
and
and
xorb
xchg
dec
repnz
dec
jle
sub
mov
cwtl
addb
and
loopne
push
popf
sbb
icebp
int
sub
xchg
jo
es
mov
sbb
mov
jle
lcall
and
pop
ja
pop
js
repz
adc
cli
pushf
or
js
xor
and
xchg
dec
sbb
sti
xchg
aaa
ja
shl
subl
mov
fwait
ret
mov
pop
in
and
cmp
adc
jg
lds
sarl
xchg
mov
xchg
aam
mov
repz
pop
fsubr
push
mov
in
imul
ss
imulb
negl
outsl
fwait
adc
repz
dec
testb
divb
pop
pop
cld
repnz
push
fidivrl
cmp
jle
or
frstor
push
and
xor
sbb
inc
insb
sahf
pushf
mov
sbb
pop
sbb
sbb
xor
xchg
jno
xchg
sbb
lahf
sub
dec
jmp
test
inc
sarb
xchg
inc
dec
push
repnz
sbb
xor
fnstsw
fadds
in
out
sarl
js,pt
xchg
pusha
cmp
out
adc
out
out
push
aam
sub
dec
dec
sarl
fcoml
inc
and
repnz
lds
sbb
imul
dec
loop
movsl
jp
mov
push
daa
dec
shlb
jbe
popf
in
jecxz
mov
addr16
pop
push
in
test
mov
in
pop
in
and
fildll
add
xchg
sar
push
inc
adc
enter
mov
inc
jno
pop
mov
cmp
outsb
pop
ss
adc
scas
repz
rorb
mov
dec
icebp
inc
dec
cwtl
jge
fimuls
jl
inc
adc
cmp
ss
ds
mov
cmpsl
int
into
imul
pop
fwait
stc
in
pop
dec
push
mov
fpatan
sub
neg
sub
jne
cmp
push
nop
cmp
outsl
lret
xor
scas
divl
inc
or
push
jl
clc
pop
xchg
addr16
sub
sub
mov
ret
xchg
cmpsb
sbb
nop
out
or
in
in
mov
sahf
push
and
sbb
push
push
jbe
add
jg
loop
addr16
aas
aas
xorl
jg
sti
mov
jmp
iret
cmpsl
and
pop
arpl
rcrb
popf
jnp
fwait
fwait
mov
sbb
inc
dec
sub
pop
push
lods
pop
sub
mov
pop
push
dec
xor
das
fidivs
sbb
sub
std
jp
dec
and
pop
jns
push
stos
xchg
loop
fimuls
xlat
dec
or
pop
sub
enter
push
in
fdivrl
sbb
loope
clc
rcrl
xor
inc
inc
in
xchg
jle
mov
xor
out
xlat
aad
popa
mov
pop
pop
push
cmp
inc
jnp
add
jne
inc
and
out
mov
popf
bound
lds
xor
inc
push
outsb
xor
addr16
cmp
jno
imul
dec
mov
in
jo
add
bound
mov
xchg
in
push
imul
mov
jmp
lds
lock
lahf
pop
jg
jo
loope
repz
int3
sub
xor
fxam
pop
pop
add
push
mov
js
arpl
bts
frstpm(287
push
pusha
jnp
sbb
mov
or
mov
dec
inc
shlb
xor
cltd
xchg
int3
cmp
imul
pop
or
push
and
jl
mov
cwtl
jmp
icebp
rcrb
lret
and
lret
mov
add
jp
out
iret
lahf
sbb
mov
js
dec
sub
cmp
fnsave
jmp
loope
rcl
push
loopne
das
mov
rcll
flds
arpl
movsl
mov
fxch
adc
push
pop
and
aas
sub
dec
dec
scas
lcall
jnp
sub
cmp
movsl
mov
jbe
bound
push
dec
gs
xor
int3
into
cmc
js
or
mov
adc
push
xchg
scas
fidivrs
lods
fdivl
rcrb
xor
lds
ret
stos
das
shll
cltd
ret
inc
cs
mov
lock
mov
jne
xor
stos
mov
jle
ss
push
push
imul
xor
clc
mov
and
sarb
mov
adc
dec
loop
mov
movsl
xchg
and
cmpsl
jae
pop
cmp
test
call
dec
mov
scas
pop
push
js
movl
cmp
jg
andb
pop
xchg
xchg
xor
sub
mov
pop
cli
jecxz
repz
leave
inc
xor
cmp
dec
sub
mov
pop
dec
daa
jmp
push
mov
push
enter
in
das
repnz
push
inc
push
cmp
je
pop
add
stos
arpl
cmp
xor
mov
xchg
sub
pop
jae
pop
fdiv
insb
clc
mov
push
sbb
cltd
out
stos
push
cmp
add
and
mov
sbb
clc
pop
inc
push
fimull
pop
mov
fcom
out
jg
mov
xor
std
pop
testb
mov
add
xchg
insb
aas
loope
or
pop
cmpsb
push
cmp
sub
int
push
int
pop
aaa
lock
and
imul
mov
lret
callw
inc
arpl
es
js
xchg
stos
into
push
mov
cmp
stc
movsl
pop
adc
mov
mov
adc
xchg
or
mull
xchg
call
adc
add
out
lods
mov
aam
mov
push
xor
pushf
adc
lock
into
mov
mov
sub
popa
add
inc
cmc
mov
iret
mul
arpl
call
into
in
jl
addr16
out
fidivl
push
sub
push
pushf
pusha
pushf
out
loopne
shlb
inc
mov
cmp
fnstenv
lahf
addr16
es
mov
mov
pop
aad
jb
hlt
fxch
movsb
dec
outsb
bound
inc
push
insb
xor
shlb
out
out
cltd
int
dec
ja
out
fdivrs
test
aaa
jg
push
sub
mov
and
pop
push
out
inc
cmp
mov
lods
rcl
mov
xchg
mov
int
shlb
out
xchg
cmp
cld
jb
adc
dec
or
ljmp
xchg
sub
dec
lahf
xchg
sbb
mov
cli
lds
adc
sub
mov
cmpsb
into
cs
aam
lret
add
mov
leave
sbb
xor
mov
insl
lods
call
arpl
lds
xchg
jg
inc
je
mov
jne
dec
popf
out
sbb
push
icebp
fnstsw
scas
lds
mov
jae
pop
or
in
and
fldenv
imul
scas
mov
push
and
jp
sub
push
es
out
pop
jge
xchg
popf
add
xchg
stos
and
lea
mov
xor
adc
cmp
shrb
xor
fstp
sbb
cmp
inc
mov
cmovno
jle
mov
shrl
pop
add
iret
mov
mov
imul
sbb
fs
sub
rcrb
test
mov
ret
inc
loope
jno
clc
jb
dec
push
mov
in
sarb
xor
testb
mov
pop
jne
loope
mov
adc
mov
shll
mov
lcall
fisttpll
sbb
xor
sarl
mov
mov
stos
fwait
rsm
ret
ljmp
mov
stos
mov
fisubrs
push
or
cmp
iret
sbb
cmc
mov
mov
ds
push
jb
ss
mov
inc
mov
or
outsl
shr
in
push
mov
pop
out
mov
sub
xchg
adc
es
xchg
push
xor
xchg
pop
clc
loop
and
add
rcrb
inc
xor
mov
lcall
mov
mov
pusha
fwait
lret
push
xchg
test
movsb
xchg
cmpsl
add
dec
cld
mov
movsb
scas
arpl
out
stos
decl
add
push
fxch
js
cmp
ss
unpcklps
sti
int
pushf
adc
fcompl
or
daa
les
push
popf
in
inc
divl
cmp
stc
scas
sbb
icebp
cmpl
mov
mov
mov
xchg
push
pop
pop
pushf
es
add
jne
or
cld
les
test
xchg
testb
out
mov
flds
cltd
push
jo
jno
sub
sbb
mov
lods
xor
scas
xchg
sub
ds
xor
sbb
enter
jns
mov
test
in
sub
add
jle,pt
sbb
pop
adc
push
call
xor
jmp
xor
or
sub
loope
jp
test
loop
fistl
or
or
sub
std
aad
inc
dec
cwtl
inc
sbb
in
je
popf
push
cli
shlb
jecxz
mov
clc
jmp
sbb
neg
mov
sbb
and
and
sub
jno
push
sti
stc
pop
das
shll
mov
fildl
pop
dec
in
add
iret
testl
jecxz
sub
das
call
inc
cltd
or
mov
inc
xchg
xchg
mov
pop
sub
pop
pop
or
mov
push
hlt
iret
xor
pop
mov
orb
jmp
mov
clc
dec
cmp
scas
xchg
xchg
ret
aam
nop
sub
adc
lds
roll
jae
inc
add
hlt
push
jecxz
imul
jnp
out
in
outsb
sbb
pop
pop
test
mov
mulb
cmp
or
lods
lods
mov
or
aaa
pop
push
cs
and
ret
xor
jae
fiaddl
adc
arpl
pop
mov
xchg
jno
aas
imul
insl
dec
outsb
outsb
inc
cmpl
les
xchg
dec
cmp
inc
mov
add
jo
pushf
and
adc
testl
and
cmp
jmp
lea
add
jns
add
cmpsb
dec
enter
or
sbbl
or
push
fldl
movsl
or
loop
les
sbb
into
into
jbe
mov
into
aad
xor
mov
adc
pop
xor
mov
xor
mov
and
or
je
add
outsl
bound
mov
pop
sub
cmpsl
add
scas
mov
aas
iret
shll
mov
and
arpl
aas
cmp
xorb
in
xchg
xchg
pop
push
lcall
mov
jle
xlat
fdivrl
movsb
repnz
xchg
ja
shll
cmc
movsb
mov
ss
adc
fucomi
mov
sub
incb
in
or
scas
xchg
std
aad
sub
dec
aam
dec
dec
and
scas
sbb
or
ret
or
rorb
sbb
in
and
xorb
cmp
cmpb
xchg
pusha
data16
sbb
hlt
push
pop
pop
sarl
in
filds
inc
bound
inc
repnz
jp
movd
repz
out
insb
sub
adcb
in
sbb
mov
in
mov
rorb
add
pop
sub
repz
ljmp
mov
int3
mov
mov
es
popa
xchg
mov
or
xchg
in
into
test
cmp
loopne
test
std
xor
sub
enter
shl
pop
clc
mov
scas
mov
ja
push
std
adc
mov
mov
and
movsb
inc
test
test
cltd
and
cmp
and
lcall
cmovnp
or
fidivs
leave
and
fiadds
imul
dec
sbb
sub
push
jne
pop
pop
xchg
cmp
and
add
fisubs
das
inc
jg
lret
call
scas
add
dec
mov
jmp
push
ds
test
fidivrs
stc
call
xchg
ss
cmp
jns
outsb
in
adc
mov
lock
jl
or
stos
test
mov
fwait
adcl
popf
int
pop
in
mov
or
stos
cmp
test
mov
push
jle
mov
xchg
imul
fs
push
sti
ret
incb
mov
dec
mov
enter
fdivrl
xor
or
jno
xchg
inc
pop
mov
lret
pusha
iret
mov
js
pusha
push
add
mov
nop
fdivr
js
gs
inc
cmp
lret
shlb
mov
jae
addr16
cmp
mov
jb
dec
xor
dec
sub
pop
sub
mov
fstpl
mov
int
out
dec
push
pop
xchg
hlt
add
imul
mov
cmpsb
mov
mov
add
int3
adc
mov
mov
xor
je
pop
aad
pop
pop
pushf
jae
ja
ret
ds
fcmovbe
out
add
repz
add
orl
rolb
pushf
xor
adc
sbb
loope
and
push
lods
daa
in
repz
arpl
rcrl
push
hlt
xlat
pusha
sbb
notl
add
and
mov
push
mov
arpl
cld
push
mov
insb
in
pushf
out
fimull
cmp
leave
mov
inc
mov
repz
mov
inc
and
icebp
ja
subb
cli
dec
mov
outsl
push
sbb
add
nop
ror
dec
jno
or
jmp
inc
mov
lods
push
dec
sbbb
pushf
xchg
pop
sti
les
xor
pop
js
negb
inc
inc
jg
packssdw
xchg
pop
iret
or
lret
and
sarb
mov
push
pop
js
add
xchg
movsb
dec
call
xchg
xchg
mov
outsb
fdivrl
js
push
push
dec
jecxz
mov
outsb
imul
addl
cmp
adc
cwtl
aad
imull
imul
xchg
xchg
flds
adc
mov
ficoml
idiv
mov
pop
test
andnps
push
jg
pusha
mov
ffreep
push
nop
shrb
xor
popa
daa
mov
jno
jns
add
push
xchg
test
aas
inc
sahf
inc
std
inc
dec
cmp
mov
fisttpll
adc
popf
nop
clc
sub
push
xor
std
lret
xchg
xchg
jno
and
pop
out
stc
sbb
push
xchg
jb
inc
cmpsb
or
mov
mov
mov
push
stos
jg
scas
dec
out
dec
dec
mov
popa
or
ds
xor
out
push
sahf
or
ja
sbbl
imul
clc
mov
xor
pop
push
mov
xor
cs
push
sbb
mov
add
lods
fucom
pop
stos
lods
xchg
cwtl
mov
lods
ret
cli
lds
sarl
nop
mov
inc
push
fidivs
sbb
ja
repnz
cmp
xchg
sbb
pop
sbb
lcall
loope
inc
xchg
or
js
jo
fmuls
dec
mov
fnstcw
bound
mov
pop
add
push
ret
jmp
rol
movsl
jbe
dec
mov
imul
rol
dec
adc
scas
xor
int3
enter
or
mov
sbb
inc
aam
push
dec
xchg
data16
pop
cwtl
jno
adc
jmp
outsl
or
mov
dec
repnz
cs
mov
push
subb
shrb
jp
popf
pop
int3
ret
dec
je
loope
cmp
mov
movsb
xor
les
jg
push
adcl
sete
repnz
or
jo
mov
pop
adc
mov
mov
jae
mov
enter
jbe
jo
xchg
dec
aas
mov
cld
xor
push
test
pextrw
cmp
or
in
mov
mov
adc
inc
push
xchg
inc
iret
cmp
addr16
push
out
in
popa
fistl
push
or
js
xor
inc
stos
mov
leave
sbb
xchg
dec
jp
shll
lea
cmc
inc
stos
lods
loopne
or
and
xor
xchg
cltd
and
lahf
subl
enter
mov
jno
insl
fucomi
mov
and
mov
movsl
out
dec
fnstcw
repnz
xor
mov
flds
adc
jno
mov
dec
ds
fidivrl
loopne
jl
pop
jno
out
shlb
popa
cmp
repz
stos
add
jp
inc
mov
ret
jmp
mov
push
pusha
jle
in
pop
lods
adc
inc
insl
push
incl
add
add
pop
leave
push
scas
shll
pop
cltd
lahf
dec
xor
into
popf
hlt
movsb
aaa
pop
ret
mov
aad
mov
jl
in
inc
mov
inc
add
xchg
sub
insb
cwtl
je
mov
push
ficomps
mov
sbb
mov
xchg
or
push
lret
ds
jo
mov
push
jbe
out
sarl
repz
push
jo
cmp
xor
das
mov
in
daa
inc
in
xor
iret
jne
movsl
mov
lock
dec
mov
ficoms
jg
cli
sti
sub
in
pop
pusha
rorl
fmull
negl
jg
push
ret
ja
cmp
imul
jb
negb
sub
fldcw
xchg
fbld
xchg
clc
flds
fwait
mov
movsl
push
or
test
xchg
dec
cmp
mov
mov
add
shl
inc
jbe
add
ljmp
out
cltd
mov
mov
mov
dec
pushl
bound
mov
or
fwait
sbbb
int3
fdivl
xchg
adcb
push
or
or
hlt
ja
dec
push
mov
jb
cmp
jle
mov
mov
cmp
rol
sti
incb
sbb
loop
mov
gs
inc
cmpsl
adc
xlat
arpl
cmpsb
int3
cmp
aam
mov
ret
sbb
imul
jns
jno
popl
imul
push
insb
adc
fstps
pop
mov
xchg
movsb
rolb
les
and
adc
adc
add
mov
call
xchg
dec
mov
addr16
enter
cmpsb
sbb
xchg
out
hlt
xchg
xchg
fstl
push
jge
cltd
push
mov
push
sbb
dec
lods
icebp
adc
lods
roll
mov
dec
insw
movsl
jbe
mov
mov
cmp
je
mov
stos
fistl
imul
nop
xorb
lods
pop
mov
loopne
js
mov
inc
js
mov
pop
pushf
add
jmp
loopne
insb
push
push
pop
mov
test
mov
stos
and
jo
loopne
mov
fildl
or
pusha
ja
daa
repz
add
clc
in
xchg
inc
xchg
les
or
pop
xchg
les
stos
shl
xchg
jmp
inc
cmp
cld
jae
test
fisttpl
xchg
xchg
lds
fstpl
xchg
syscall
ss
ror
fcmovu
aaa
cmc
nop
add
arpl
daa
jb
scas
jg
lcall
imul
pushf
icebp
loop
es
pop
insb
cld
dec
fistpl
test
jbe
in
nop
push
sbb
inc
mov
hlt
loopne
sub
icebp
mov
sar
int3
fisubs
jbe
fistl
mov
xor
mov
adc
cmp
sti
out
jne
daa
xchg
bound
lods
lret
xchg
inc
cmc
push
mov
jl
shll
push
dec
push
cmpsb
outsb
rolb
fsts
dec
cwtl
inc
mov
push
loop
and
jb
xchg
popa
lods
cmpsl
jecxz
jne
mov
mov
mov
cmpsb
lock
or
add
mov
sbb
xor
mov
stos
xchg
stos
insl
xchg
outsb
pushf
mov
xchg
push
iret
clc
fmull
push
out
mov
jnp
out
cmp
adc
mov
mov
imul
imul
movb
pop
cmp
push
adc
mov
dec
or
in
ret
cld
dec
incl
lds
fldl
test
rcl
in
cmp
mov
icebp
and
pop
jae
int3
das
stc
movsl
mov
ret
jecxz
jecxz
xchg
lcall
sbb
or
out
fwait
insl
push
jecxz
outsl
lods
sub
leave
xlat
dec
mov
out
pop
lret
test
or
cli
jne
out
pop
jge
mov
cli
ljmp
push
ja
jbe
mov
out
out
std
inc
mov
shrb
adc
inc
popa
sbb
mov
and
xor
push
mov
movsl
cmp
push
push
mov
outsl
cmp
dec
cmc
xor
pop
orl
ss
xor
inc
xor
arpl
stc
mov
dec
cltd
fsubs
mov
and
rep
mov
or
xor
std
pop
push
leave
out
pop
pop
mov
sub
stos
push
add
scas
and
int
pop
xchg
mov
mov
cmpl
mov
xor
test
dec
shr
lock
lods
aad
ds
mov
and
xchg
push
sbb
in
movsl
ja
and
hlt
lret
mov
shlb
jb
jge
or
inc
pusha
jno
mov
mov
sbb
movb
adc
and
cwtl
addr16
jbe
add
and
lcall
out
das
shll
orb
mov
xchg
add
and
pop
cltd
pop
cwtl
mov
sub
pop
inc
ds
jl
pop
imul
add
sub
lahf
push
jbe
popf
mov
sub
xchg
arpl
enter
sub
mov
aas
cli
test
xchg
pop
das
xchg
ja
adc
subb
inc
pop
dec
mov
push
rorb
icebp
test
cmpsl
das
inc
cwtl
push
icebp
cmp
dec
sbb
jnp
les
xorl
or
xchg
sbb
fxch
ret
mov
stc
dec
imul
adc
sbb
jecxz
stos
lods
imul
pop
mov
mov
into
inc
sub
loope
jnp
jecxz
insl
add
in
cmpsb
sahf
sarb
js
ja
enter
fmull
or
sbb
xchg
sub
mov
pop
aaa
push
icebp
push
push
fidivl
add
jbe
fcmovnbe
or
sbb
sahf
outsb
mov
inc
add
data16
aad
or
push
js
xorb
mov
or
std
dec
mov
scas
push
lds
mov
lret
mov
arpl
jno
dec
mov
testl
dec
sbb
out
cmc
mov
fwait
sahf
cmp
stc
xchg
push
in
mov
sub
sbb
movl
xchg
push
add
dec
pop
cmpsl
sbb
push
int3
mov
lret
lds
ror
push
push
pop
gs
movl
cltd
add
xor
dec
sub
clc
and
cltd
hlt
adc
fwait
scas
mov
aam
daa
mov
in
ss
bound
pop
or
xor
mov
or
fdivr
jp
lock
ret
test
xlat
cmp
jb
test
es
push
dec
rcl
push
mov
into
xchg
cmp
addl
and
loopne
push
loop
and
out
js
out
mov
push
insb
mov
cltd
mov
outsb
push
push
lods
push
cmp
sub
jg
movsl
inc
mov
xchg
jns
scas
and
cmp
sbb
jno
jnp
out
out
cmp
cmp
outsl
dec
bound
cmp
and
cltd
adc
push
push
in
scas
fwait
pop
sbb
into
sbb
pushf
mov
xor
sub
aaa
fwait
rol
sbb
in
sbb
ror
push
imul
mov
cmp
adc
in
sub
popf
push
js
adc
je
stc
sahf
inc
push
data16
pop
stc
cwtl
imul
test
xchg
xchg
ja
push
loop
mov
lret
popa
repnz
cmp
dec
xorl
int3
shrb
fisttps
and
push
xor
dec
call
mov
ret
in
stc
adc
bnd
fwait
lret
out
xchg
andl
dec
cld
testl
push
jb
cli
xor
mov
sbb
jle
or
mov
inc
inc
pop
xchg
idivb
jmp
and
pusha
shl
enter
movsb
or
or
dec
inc
xor
xchg
mov
enter
sbb
pusha
add
sti
pop
gs
jl
jle
popf
mov
je
movntq
aaa
out
xchg
dec
xor
lcall
pop
movl
call
rcll
cmp
and
pop
imul
test
add
mov
iret
in
shrb
lcall
leave
in
xor
xchg
mov
push
ja
xchg
out
out
push
sub
sarl
lcall
mov
sbb
dec
sub
push
lret
rclb
rcrb
lds
dec
loope
jae
cmc
inc
lcall
or
jne
popa
jecxz
mov
divl
jbe
sbb
jge
iret
sub
inc
out
mov
rcrb
cltd
inc
mov
cmp
lret
cmpsb
jo
sub
and
outsl
adc
jge
inc
inc
cwtl
jb
cmpsb
insl
cmc
fs
jbe
cmc
and
pop
lcall
and
or
lea
adc
cmpsl
icebp
pushf
adc
lock
nop
or
gs
out
ja
lret
into
pushf
out
daa
loope
adc
sahf
ljmp
fiadds
lods
data16
fs
dec
sbb
pop
bound
les
in
xchg
xchg
bound
mov
xchg
sbb
cmp
mov
bnd
stos
daa
mov
mov
push
loopne
pop
rcl
cld
out
adc
push
mov
add
pop
sub
or
pop
das
sbb
insl
int
popa
test
jl
outsl
pop
mov
leave
fs
xchg
inc
xchg
pop
sbb
push
pop
popf
inc
or
push
sbb
push
cmpsb
movl
out
in
cmpsb
dec
in
inc
loop
or
lods
jo
pop
and
test
call
xlat
aas
sbb
adc
sbb
test
pushf
mov
lds
mov
lret
out
mov
mov
stos
dec
jns
into
cwtl
inc
xchg
push
enter
xor
stc
loop
mov
insl
aaa
and
lahf
add
enter
addl
adc
fisttps
cmp
mov
shrb
adc
outsb
fnstcw
add
icebp
outsb
int3
rolb
int3
sti
jae
and
out
ja
dec
add
adc
mov
pop
leave
cmp
xor
rclb
dec
fsubl
and
stos
in
hlt
les
mov
repz
ret
out
test
push
imull
xchg
sbb
sbb
out
sbb
pusha
dec
je
out
adcb
sbb
addr16
mov
lods
and
inc
mov
xchg
ja
jmp
mov
fwait
push
pop
fidivrl
push
ljmp
pop
cmp
mov
sbb
movl
sbb
stc
sub
scas
std
pushf
insb
inc
in
mov
mov
adc
mov
xchg
ljmp
mov
enter
inc
enter
cld
insb
jge
imul
les
dec
push
cmp
andl
lcall
out
iret
int3
rcrb
mov
ret
in
inc
sbb
add
pop
add
orl
fnsave
pop
mov
cmpb
js
add
mov
shl
ror
push
pop
mov
cltd
sti
and
scas
int3
addb
test
popf
movsl
sub
jge
jae
or
adc
movsl
cmp
out
nop
addb
les
test
and
and
fildl
gs
mov
sub
pop
xlat
stos
pop
imul
fisttps
xor
push
pop
movsl
pop
data16
xor
xlat
lahf
int
add
dec
cmpsb
mov
inc
jno
push
sub
xor
adc
push
xchg
sbb
enter
bnd
repnz
shlb
jecxz
ja,pt
js
xchg
mov
xchg
sub
mov
ja
ja
js
ss
inc
mov
sbb
xor
mov
iret
or
int3
mov
aad
clc
sub
test
bound
imul
outsb
jmp
sbbl
pop
sarl
jb
inc
jne
ss
sbb
fsubrp
lods
xchg
mov
xchg
arpl
out
jp
jne
mov
and
cmc
inc
dec
in
lahf
mov
sarb
mov
fsubs
jno
and
icebp
aam
in
jl
repnz
pop
dec
cmp
pop
ljmp
mov
lods
adc
movsb
sub
insl
imul
xchg
pop
xchg
dec
xchg
sbb
xchg
mov
push
ret
enter
std
jl
cli
cs
dec
pop
or
adc
outsb
sti
xor
inc
mov
movsb
cmc
decl
cli
subb
pop
cmpsl
out
arpl
dec
mov
daa
icebp
or
ds
addr16
dec
pop
jmp
ret
incl
add
mov
arpl
lods
add
imulb
fnsave
xlat
pop
rorb
pop
in
or
and
push
mov
cmp
adc
mov
or
cmpsl
flds
xchg
sbb
cmp
sbb
add
dec
clc
sbb
sbb
shr
mov
push
data16
rcll
sbb
popa
std
lcall
or
inc
or
push
mov
push
sbb
mov
out
mov
int
pop
adc
sbbb
movsl
adc
mov
pop
lcall
fisubl
xor
cld
or
incl
dec
inc
push
push
popa
xchg
std
sub
std
enter
push
jecxz
divb
sub
dec
mov
jecxz
pushf
cmp
pop
push
mov
call
cmp
pop
into
add
add
jae
cmp
push
out
pop
mov
sub
dec
mov
psubsb
outsl
pop
push
lret
adc
push
cmp
sbb
adc
cwtl
pop
jmp
or
pop
mul
into
inc
insl
or
gs
or
mov
loope
nop
jo
shlb
out
daa
jno
adcb
in
outsl
aam
popa
add
cmp
xor
mov
mov
sbb
scas
or
gs
add
lds
mov
mov
mov
sbb
inc
test
sub
in
imul
xor
adc
mov
pop
gs
ja
jne
stc
stos
sub
pop
loope
inc
cmp
pop
pop
xor
in
out
daa
das
mov
sbb
dec
sub
mov
pop
std
or
in
inc
nop
loopne
cmp
add
cmp
in
jo
pop
sub
js
mov
or
rcrb
mov
jno
mov
push
std
enter
ret
sti
das
call
ds
cmp
xor
jge
movsb
outsl
cmp
mov
jb
jl
call
shlb
inc
xor
aam
inc
and
mov
or
pop
mov
sbb
cmp
daa
pop
imul
int3
roll
mov
dec
cmp
xor
inc
xor
xor
test
sbb
mov
xchg
pop
cmpsl
sub
jl
pop
inc
daa
stc
pop
push
cmpl
push
test
adcb
test
idivl
jp
cld
mov
fcom
repnz
faddp
dec
add
into
mov
in
mov
stc
mov
stos
and
rcrb
cmp
xchg
sar
and
shrb
mov
sti
into
and
cmp
paddd
fisttpl
lods
cmc
inc
into
dec
push
scas
js
stc
mov
outsl
and
xchg
pop
add
push
pop
or
dec
lds
call
out
adc
in
inc
sbb
push
cltd
hlt
lahf
sub
adc
pop
test
add
add
and
mov
jl
sub
mov
mov
loopne
in
aaa
jmp
sbb
test
daa
lahf
test
in
inc
jbe
push
jl
lods
shll
inc
cs
cmpsb
inc
ret
mov
movsb
mov
repz
and
jp
sbbl
lret
filds
cltd
cld
mov
int3
sarl
mov
xchg
jae
lcall
jmp
ljmp
xchg
int3
sub
subb
ret
sub
aas
inc
pop
sar
xchg
add
gs
push
mov
push
jbe
sub
add
or
sbb
lcall
add
popf
in
dec
xor
mov
mov
lcall
push
push
int
in
inc
fsubs
int3
out
imul
and
sub
std
xchg
adc
push
idivb
nop
lret
sbb
outsl
xchg
pop
or
imul
iret
jecxz
jbe
xchg
xor
add
inc
mov
lret
int
in
repnz
fadds
shl
and
fnsave
pop
sbb
sbb
sbb
gs
pandn
jbe
pop
xchg
push
push
push
push
cmpsb
pop
push
dec
cs
pop
icebp
sti
pop
outsb
test
mov
cvtps2pi
cmp
fsubrs
add
notl
sub
push
mov
cli
icebp
sub
mov
add
aaa
pop
mov
lds
add
mov
jp
jecxz
push
iret
mov
push
xchg
inc
js
mov
mov
sbb
mov
sarb
push
aaa
or
sbb
xchg
xchg
adc
adc
loop
mov
repz
icebp
aas
shlb
data16
fs
out
lret
cmp
xor
scas
imul
pop
dec
gs
or
icebp
ret
pop
lods
or
xor
lret
or
adc
push
mov
aaa
xor
loopne
addr16
out
mov
loop
xchg
or
dec
in
sub
or
movsl
mov
fwait
jne
adc
fstl
mov
ljmp
inc
mov
fcoms
or
push
push
inc
sub
jg
mov
dec
mov
lock
rolb
xor
push
dec
icebp
cmp
add
int
inc
arpl
jno
in
and
aaa
fiaddl
test
or
adc
lock
sahf
add
or
pop
cmpsl
sbb
fs
notl
or
cmp
adc
xor
filds
jge
mov
mov
add
rol
jnp
cmp
xor
mov
mov
popf
adc
pop
dec
pop
xor
aaa
ss
pshufw
loopne
cwtl
pop
cmp
subb
cmp
sahf
push
add
cwtl
mov
dec
pop
jge
jnp
sub
jmp
popf
fwait
sbb
jg
insl
sub
aad
cmpsb
enter
or
shll
xchg
push
xchg
hlt
cmp
add
or
mov
rolb
push
test
iret
pop
sub
in
mov
pop
das
jle
push
jns
cmp
or
loopne
or
mov
popa
jae
cwtl
jb
into
mov
aad
inc
repz
jb
cld
and
lods
jno
out
outsb
push
rorl
push
pushf
aas
cmp
pop
jmp
shrd
sub
mov
add
lret
adcl
out
int3
pop
aam
jb
xchg
add
mov
dec
adc
cwtl
lds
out
push
add
and
inc
orl
aam
inc
mov
add
mov
in
lods
int
dec
pop
push
dec
pushf
pop
nop
subl
movsl
jae
xchg
jg
dec
push
push
mov
and
ret
stos
or
ljmp
sub
add
mov
xor
jno
xchg
xchg
sbb
je
fnstenv
mov
push
bound
leave
roll
test
mov
cmp
and
mov
das
push
sub
data16
ss
adc
stos
fnstcw
test
lret
xchg
inc
xor
add
adc
push
sub
push
add
jnp
mov
jae
adc
loope
dec
inc
mov
mov
lret
subb
icebp
bound
out
cld
or
jp
inc
subb
fs
ret
jle
adc
aaa
mov
lret
fdivl
or
push
shll
sti
and
aas
gs
mov
repnz
dec
in
dec
jle
jle
dec
push
and
mov
add
outsb
mov
dec
adcl
push
fucomp
cltd
cltd
xor
add
lods
inc
gs
aas
sti
xchg
adc
fisubrs
int
mov
sbb
gs
xchg
mov
and
dec
jae
cld
imul
repnz
add
std
xchg
mov
ret
in
xchg
call
iret
lret
add
inc
inc
in
mov
jb
test
pop
push
ja
push
add
aam
icebp
fistpll
mov
dec
inc
leave
add
xchg
and
jnp
pop
int
jno
jge
sbb
jns
push
cmp
stc
mov
jne
and
xchg
xchg
in
cs
xor
add
push
loop
add
out
lcall
pop
xchg
mov
test
je
pop
push
shlb
nop
add
out
inc
push
push
xchg
fsubs
dec
push
dec
pminsw
jmp
cmp
lcall
sbb
stc
pop
loopne
mov
mov
ret
and
adc
xchg
fisttpll
popa
jae
inc
dec
out
in
xor
mov
add
movsl
jmp
cs
mov
fcmovnu
scas
mov
adc
fldl
and
add
daa
or
push
push
inc
mov
jle
insb
mov
xor
jo
lcall
mov
ja
call
adc
jbe
sahf
xchg
loop
sub
inc
testb
cmpsl
mov
into
loope
aad
addb
fwait
pop
mov
test
out
and
and
mov
fsubl
popf
jl
mov
fs
lcall
cmp
pop
pop
es
sbb
std
test
adc
ja
pushf
gs
notb
and
adc
mov
mov
xor
jmp
shl
lahf
dec
stos
inc
dec
inc
jo
outsl
sbb
inc
ds
push
int
sbb
cli
aas
pusha
push
rorl
ret
mov
or
inc
or
ficoml
xchg
pop
add
mov
xchg
fwait
scas
sbb
clc
cmp
lret
dec
and
hlt
repz
sbb
dec
mov
loopne
lahf
mov
mov
sub
mov
std
jno
scas
into
push
aam
icebp
mov
pop
test
push
into
rcrl
add
inc
push
mov
dec
jns
je
mov
xchg
sub
mov
stos
dec
pusha
frstor
mov
xchg
adcl
cmp
sub
adc
pop
sub
shr
jge
push
xor
or
js
dec
lahf
nop
sub
test
ds
adc
and
movsb
lods
icebp
stos
imul
mov
add
xchg
push
ficomps
xor
dec
scas
jno
sbb
in
push
jg
fimuls
xor
nop
jo
mov
lods
mov
cmp
pop
in
int
jnp
mov
std
mov
add
jb,pn
inc
xchg
in
mov
addb
or
pop
push
lahf
shlb
outsl
fwait
loope
jge
mov
scas
add
xor
or
xor
push
jbe
mov
or
sub
jne
cwtl
dec
loope
and
mov
shlb
mov
imul
sub
cmp
adc
xchg
lret
mov
imul
sbb
iret
data16
test
xor
test
and
push
mov
int3
cmp
sbb
push
inc
out
inc
mov
xchg
sar
dec
aam
jo
or
pop
imul
add
dec
mov
insl
test
mov
push
outsb
xchg
in
xchg
cld
mov
dec
divb
jle
loopne
adc
dec
inc
cmpsb
mov
mov
or
lods
push
inc
inc
fsubp
mov
xchg
xor
mov
cs
dec
mov
xor
fwait
jl
jnp
adc
aad
lea
push
mov
push
push
inc
pop
out
outsb
dec
mov
stos
pop
inc
and
movsl
daa
mov
jne
xor
dec
xor
out
outsl
addb
add
mov
sti
inc
pop
into
pop
fucom
hlt
jmp
ja
sub
mov
mov
push
daa
cwtl
ja
loop
nop
push
aas
testl
sahf
rcrl
sub
enter
lret
or
icebp
popa
pop
popa
jno
inc
fwait
sahf
popf
push
nop
xchg
push
hlt
stos
arpl
cli
lcall
sbb
mov
cmp
dec
xchg
ret
dec
and
dec
les
push
dec
sbb
aas
out
test
pop
fs
jg
and
and
jmp
and
jno
ss
hlt
push
aas
mov
xchg
cwtl
xchg
sub
arpl
cmpsl
add
enter
adc
icebp
lods
ss
adc
test
cmp
pusha
jno
cmp
xor
xchg
arpl
pop
fidivrs
fwait
sub
and
lea
push
jl
xor
or
or
popa
sbbb
rcll
js
dec
pop
push
xchg
add
mov
pusha
in
out
or
mov
mov
scas
ss
adc
xor
dec
jns
jae
div
negb
mov
or
mov
dec
pop
pop
push
sub
insl
call
fs
outsl
xor
xchg
mov
test
xchg
arpl
mov
mov
cs
pusha
fcmovnbe
jbe
mov
jle
lea
imul
sbb
jnp
pop
xor
leave
jb,pt
jo
mov
xorb
sti
mov
movsb
sub
outsb
dec
mov
mov
mov
ret
xchg
dec
sti
imul
dec
inc
fiaddl
pop
ret
push
push
rolb
add
sub
stc
negb
and
popf
sahf
jno
scas
test
arpl
hlt
stos
push
xor
adc
push
cld
jnp
lret
xor
sbb
jecxz
pop
pusha
cltd
push
iret
push
orl
pusha
xchg
jo
icebp
cmp
aad
rclb
fsubl
imull
push
xorl
and
imul
icebp
stc
stos
add
mov
lret
xlat
push
imul
jp
jnp
mov
cmc
jg
hlt
and
das
jecxz
push
dec
jnp
push
sbb
push
aaa
insl
adc
mov
out
lahf
jns
or
addb
ss
and
mov
inc
mov
aaa
ret
mov
inc
daa
push
and
xor
push
sub
lahf
jg
lods
hlt
push
test
or
fisubrl
arpl
mov
stos
cmpsl
and
or
dec
inc
insb
pop
das
rorl
subl
mov
in
loope
mov
movsl
test
test
dec
sahf
rcr
inc
es
inc
cmp
movsl
jecxz
xchg
jb
in
test
xchg
sarb
mov
inc
loop
mov
push
mov
mov
cmpb
shl
xor
aas
push
mov
and
roll
repz
sub
mov
adc
cwtl
xor
mov
inc
xchg
clc
jbe
ds
lret
push
add
jb
jbe
add
test
sub
outsl
imul
push
lods
xor
adc
adc
jo
xor
mov
sbb
mov
ret
mov
std
popl
add
inc
xchg
out
pop
xor
lret
imulb
mov
popf
sbb
mov
and
outsl
mov
cld
outsl
fs
dec
mov
xlat
inc
lods
pop
cwtl
mov
push
stc
sub
push
xchg
orl
mov
sbbl
mov
jg
sub
xchg
sub
sub
inc
xchg
mov
dec
adc
clc
test
test
mov
scas
dec
clc
jno
lahf
dec
cs
jmp
xchg
outsl
or
ficomps
in
int
test
pop
shl
push
jg
outsb
mov
inc
push
sbb
call
jmp
aam
push
lods
lret
mov
pop
inc
and
push
dec
stos
test
or
xor
pop
jecxz
lock
inc
add
fbld
pop
leave
mov
outsl
push
test
sahf
jb
push
jbe
adc
adc
xchg
test
xchg
sti
sub
repz
dec
jmp
cmp
mov
dec
or
lds
ja
bswap
cli
xchg
jge
enter
cli
push
fcomp
sbb
adc
test
adc
add
es
movsb
dec
loop
push
mov
shrl
lcall
inc
inc
sbb
cmpsl
ror
push
xchg
imul
in
adc
sbb
dec
jbe
pop
and
pop
fsubrl
push
popa
fldt
loop
mov
dec
pushl
or
xorl
aam
cmovo
cmp
pop
imul
dec
add
loopne
add
lcall
cltd
lods
popf
jo
gs
and
in
iret
movl
clc
sbbb
add
sbb
aam
add
push
jae
mov
xor
mov
and
mov
test
test
out
divl
lahf
dec
inc
or
xchg
dec
mov
popf
aaa
scas
ret
lahf
xchg
call
test
xor
adc
mov
xchg
cmp
gs
or
jmp
push
lcall
movsb
lcall
and
cltd
jge
inc
test
sti
aaa
std
mov
cli
or
popa
mov
in
popa
mov
push
jecxz
xchg
mov
xchg
stc
cmpsl
mov
pushf
cmp
mov
xor
dec
dec
mov
cli
lret
dec
imul
mov
mov
xlat
xchg
mov
cli
push
fcoml
push
sbb
hlt
lods
lahf
push
jo
mov
decb
rorb
or
fisubrl
mov
jle
jle
mov
js
mov
pop
cmp
je
out
sub
pusha
or
push
sbb
cwtl
scas
dec
inc
out
and
dec
cmp
je
lret
xchg
testb
dec
add
iret
enter
or
test
mov
or
mov
jle
lods
loop
in
and
fcmove
mov
out
movsb
test
roll
xchg
jle
out
mov
and
add
scas
insl
inc
pop
push
jbe
mov
into
pop
sub
cltd
ljmp
jmp
shlb
ljmp
pop
pop
rcll
pop
cmp
cwtl
push
jge
out
sbb
call
bound
inc
test
in
add
mov
test
cmpsb
loop
mov
pop
ficomps
jl
and
sbb
mov
imull
pop
out
aam
adc
pop
cs
xor
xor
add
dec
jge
cli
jge
aam
lods
mov
out
fisubrs
xchg
xchg
je
cwtl
cmc
call
das
cmpsb
enter
mov
jns
inc
mov
movb
popf
jp
and
sbb
dec
lods
movsb
or
jb
clc
mov
std
or
jbe
push
cmpb
lcall
add
mov
lret
jno
mov
dec
push
and
or
hlt
pop
mov
je
xor
adc
xchg
jl
pop
fwait
jo
dec
push
inc
lock
or
sti
and
popf
jbe
push
mov
pop
pushl
push
mov
ja
aaa
decl
int
inc
test
mov
bound
lcall
insb
ja
or
outsl
cmc
add
hlt
dec
xor
mov
aaa
hlt
pop
scas
xor
leave
push
rcr
vmread
aad
add
cmp
jbe
lahf
idiv
ljmp
incb
push
jle
jne
push
sub
cmp
rclb
jne
xor
mov
ljmp
and
jecxz
cmp
pushf
mov
les
push
repz
cmp
repnz
mov
push
mov
adc
lret
mov
mov
jp
scas
rcr
jbe
ret
jbe
sbb
add
inc
aaa
or
sbb
dec
cmp
mov
push
push
or
test
or
pushf
fcomps
xchg
pop
push
and
and
inc
adc
pop
or
scas
out
dec
pop
mov
fucomi
jne,pt
cmpsb
mov
jnp
sbb
roll
lods
mov
xchg
loope
inc
cmpsb
popa
sti
xchg
mov
in
add
rorl
sbb
mov
push
mov
xor
int
bound
int3
pop
xchg
add
repz
pop
bound
adc
or
mov
sti
pop
fstpt
imul
sahf
arpl
stos
shrb
das
push
sub
dec
lea
mov
pop
cli
cld
push
or
inc
ret
xor
or
lcall
into
push
rcr
adc
lock
mov
jmp
int3
scas
shrb
daa
shl
xor
xor
nop
lcall
rcrb
insl
cmp
pushf
mov
bnd
jo
cmp
ja
pop
and
std
repnz
pop
lret
insb
push
mov
dec
sub
mov
adc
xlat
push
dec
std
sti
pop
sti
ja
nop
mov
jns
cs
loopne
adc
out
cld
mov
and
jp
sbb
ja
je
outsb
jle
inc
pop
iret
inc
pop
sub
out
push
pop
fwait
pop
xchg
inc
rol
xor
negl
jo
pop
lahf
pop
jmp
inc
ret
jae
and
loope
add
adc
leave
sub
sarb
add
cmp
sub
mov
int
gs
fmul
insl
push
xor
mov
push
jne
insb
iret
pop
sub
mov
fnsave
insl
adc
and
mov
sub
pop
insl
xchg
xchg
jns
xor
pop
pop
pop
adc
mov
pushf
add
imul
test
push
aad
sbbb
test
xor
pop
mov
shl
dec
sarb
stos
cmp
bound
addl
fists
sbbl
test
leave
js
testb
push
jne
adc
sub
fs
out
test
cwtl
popa
push
mov
jae
int3
sar
jg
pop
mov
mov
decb
jmp
enter
fsubl
jb
lock
mov
cmp
xchg
das
inc
jne
icebp
sbb
inc
shrb
xchg
inc
inc
mov
pop
mov
sbb
leave
fsubs
rcr
lock
cltd
ds
dec
rolb
sub
lret
and
mov
cli
ljmp
push
dec
or
and
sbbb
insl
insl
outsl
push
sub
push
push
mov
cmp
call
negb
cmpsl
xor
dec
mov
xlat
sar
mov
andl
xor
sub
inc
adc
mov
fnstsw
in
insl
mov
std
or
jb
sbb
lcall
or
insl
xor
push
fsubs
repnz
movb
inc
sbb
xchg
fcomps
adc
ljmp
xchg
mov
cmp
inc
inc
mov
xor
jno
das
fsubs
testb
test
sub
adc
scas
stos
arpl
pushf
and
mov
xchg
jge
xor
sbb
pop
pop
fildl
or
aam
pop
and
cmp
lea
jge
pop
sbb
xlat
lahf
aaa
loopne
insl
adc
inc
adc
and
xor
repz
in
div
je
cmp
es
mov
cmp
nop
clc
jo
shlb
js
inc
add
mov
cmpsl
bound
std
push
rol
mov
sub
adc
loope
push
sub
hlt
sbb
and
sahf
mov
xor
icebp
push
mov
xor
pushf
sbb
xor
aad
jg
pop
lods
mov
orl
push
jbe
daa
repz
insb
call
negl
sbb
push
inc
lea
fisttpll
fldt
das
addb
hlt
push
das
add
xchg
rcr
add
xor
mov
test
cmc
and
pop
fimull
xchg
out
cmpsb
push
andl
mov
fcoms
addr16
js
mov
int
xor
popa
mov
aaa
cltd
xchg
movsb
cwtl
mov
mov
and
lds
aas
cmp
xchg
sbb
test
inc
mov
push
mov
addr16
lahf
jg
js
mov
mov
fldcw
nop
js
jns
mov
mov
lret
mov
mov
mov
xor
xor
mov
inc
sbb
sbb
loopne
test
or
shrl
xchg
dec
mov
es
incb
jbe
mov
rclb
xchg
push
loop
fcmovb
and
inc
inc
jnp
push
sub
sub
mov
pop
xchg
jecxz
fisttpll
jmp
mov
inc
or
cwtl
jg
adc
xor
push
sub
std
xchg
mov
lahf
mov
popf
add
or
or
xchg
sbb
shll
shll
shl
stos
loopne
mov
add
or
in
xor
and
movsb
add
gs
cmc
sbb
aad
push
push
dec
or
imul
shlb
lahf
stc
out
inc
popa
imul
pop
xor
mov
jp
popf
sbb
das
out
les
imul
add
call
mov
jl
pop
leave
add
sbb
outsl
bound
inc
cmp
mov
insb
mov
sbb
push
icebp
mov
arpl
movsl
sbbb
push
mov
mov
add
mov
movsl
push
adc
mov
in
mov
inc
xor
rolb
mov
xchg
cmpsb
mov
sbb
jne
lods
shlb
test
xchg
xchg
loop
fisubs
ret
outsb
mov
lahf
mov
mov
mov
cmp
stc
xor
shl
out
dec
xchg
and
fsubp
or
test
pop
sub
mov
or
les
mov
jne
add
inc
dec
popa
and
mov
mov
scas
mov
dec
mov
lahf
aad
mov
push
push
lahf
cs
xlat
xchg
repnz
test
aam
lods
sub
mov
sti
dec
sbb
dec
clc
and
loop
mov
mov
leave
out
push
inc
xor
ja
and
fildl
mov
loop
push
aam
shlb
cmp
sub
les
inc
add
cmp
jno
dec
mov
std
je
in
push
mov
decb
stos
loop
cmc
adc
nop
fmuls
aam
dec
fwait
mov
cli
add
pop
pop
rorl
loope
loop
mov
adc
lds
rcll
push
je
arpl
jle
or
icebp
lds
lods
stos
cmp
outsb
add
lahf
or
leave
stc
adc
pop
test
mov
inc
or
xchg
ss
in
jge
enter
hlt
out
scas
insl
cld
pop
es
jae
dec
add
cltd
mov
imul
cmp
pop
nop
dec
xor
push
ss
popa
push
sub
mov
mov
mov
ja
punpckhdq
inc
push
push
add
data16
fstl
inc
cmpl
imul
aam
pop
ja
pop
sub
jg
loop
xchg
cmpsb
das
negl
jle
mov
sub
xor
sub
cmpsl
test
push
pop
jns
mov
inc
and
cwtl
fsubs
scas
mov
add
hlt
jne
add
jecxz
rcr
pop
cld
cmp
and
mov
out
jg
aad
adc
fcomip
jo
xchg
daa
pop
mov
jno
and
and
mov
mov
inc
enter
lahf
jae
cmp
and
jbe
jg
dec
sub
add
lcall
std
inc
dec
cmp
ret
cmpsl
cmp
mov
mov
dec
in
and
imul
mov
cli
jb
cld
mov
nop
shrd
rcll
maskmovq
pop
stos
das
mov
pop
fisubl
push
dec
neg
addr16
bnd
inc
pop
imul
leave
sahf
pushl
loop
jbe
mov
cld
es
cmpsl
jnp
daa
imul
dec
pushf
mov
and
push
test
adc
mov
nop
pop
in
cmp
pop
fimuls
and
jecxz
jae
sub
ja
js
fists
rcrb
xchg
pop
test
pop
add
aad
aaa
jb
out
xor
cmp
rorl
or
mov
in
call
inc
mov
lahf
addb
cs
pushf
sub
in
mov
aad
pop
addr16
adc
inc
stc
adc
dec
mov
xor
adc
jns
ret
push
mov
scas
mov
cmp
jno
jg
sarb
aas
xchg
rcll
sti
and
lret
cwtl
fisttpl
cmpl
xchg
or
push
lock
bound
enter
mov
mov
and
mov
lahf
daa
xor
bound
xor
scas
mov
jb
push
movsl
popf
inc
aaa
sbb
clc
ja
test
push
ljmp
adc
add
pusha
std
xor
inc
lcall
jg
mov
popa
sbb
sti
jne
insb
push
add
xor
mov
pop
cmovne
pop
daa
shrb
repnz
cmp
pusha
int3
mov
cmp
daa
sbb
es
js
daa
adc
test
mov
xchg
stos
sbb
cli
jg
jle
or
arpl
mov
icebp
xchg
cli
cmp
xchg
and
mov
jbe
fists
test
mov
and
call
aad
in
js
loop
jp
add
les
adc
and
and
xor
jge
or
or
sti
rcrb
jae
inc
clc
or
adc
push
or
jbe
addb
out
fmulp
lds
cwtl
push
or
jb
int3
dec
aas
dec
inc
or
dec
mov
push
cld
sbb
sbb
int3
scas
mov
mov
push
sub
sub
or
xorb
lret
popf
lret
dec
mov
fwait
lds
jbe
int
sub
loop
negw
mov
xchg
movsb
xor
xlat
add
jne
les
dec
sbb
xor
sub
imul
mov
data16
ss
stos
cmp
sbb
xorl
push
add
xchg
data16
pop
outsl
or
test
dec
pushf
jae
jg
pop
adc
lock
cmpsb
mov
insb
jg
aam
out
ja
out
cli
daa
add
sbb
cld
mov
sti
ret
outsb
bound
adc
daa
nop
roll
inc
stos
mov
xor
stos
cmp
mov
scas
dec
out
ja
hlt
xchg
xor
mov
lods
xor
pop
push
das
std
and
iret
cmp
gs
pop
rcll
pop
jecxz
pop
or
outsb
shl
mov
jmp
mov
out
xor
pop
push
lahf
pop
xor
fldt
imul
stos
fdivr
mov
sub
or
xor
pop
les
pop
inc
daa
xchg
mov
js
push
and
dec
outsb
test
pop
cmp
sti
in
sbb
jl
sbb
std
dec
cmpsl
mov
shlb
push
jl
xchg
xor
cltd
dec
mov
mov
pop
dec
inc
push
ret
movhps
aam
loopne
scas
or
loop
jbe
sbbb
ljmp
xor
sub
mov
imul
sbb
in
mov
out
or
dec
sub
fucomp
inc
jo
or
fimull
mov
jns
jo
push
insb
and
cmpsl
jo
push
add
inc
inc
loop
jmp
xchg
jmp
xchg
test
hlt
lret
jecxz
out
pop
mov
arpl
lods
pop
add
mov
scas
xor
lret
lahf
cld
cmc
cli
xor
pusha
cmpsl
cmp
inc
push
clc
mov
xchg
adc
rcll
shlb
mov
sti
xchg
cli
push
mov
outsb
sbb
and
mov
add
cmp
lea
testl
int
insb
mov
push
stc
lcall
les
ss
sbb
xchg
scas
push
pop
in
push
mov
bound
cmp
mov
loope
jl
mov
out
in
mov
inc
xchg
pop
sub
adc
pop
arpl
movsb
out
aad
stos
dec
sbb
mov
mov
sub
push
ficoml
mov
lahf
faddl
sarb
lret
dec
jne
int3
add
fidivs
hlt
dec
sbb
jbe
scas
inc
ljmp
push
idivl
test
jno
lret
bound
mov
lea
push
xchg
js
mov
sbb
inc
insl
insl
addl
rcr
push
outsl
inc
sub
out
sub
sbb
sbb
das
scas
into
outsb
shlb
repnz
test
push
adc
and
clc
ret
pushf
jo
jo
lock
dec
or
mov
jne
mov
xchg
mov
mov
sub
movsl
fiaddl
loope
push
in
cmc
push
test
addr16
nop
mov
aam
das
movsb
jp
inc
movsb
inc
or
mov
inc
adc
lock
cmc
dec
aaa
clc
fldt
bound
popf
pushf
or
stos
xchg
gs
or
inc
mov
jg
mov
shl
lfs
fdivs
xadd
sahf
stos
pusha
lret
daa
mov
pushf
addr16
dec
inc
jne
or
shlb
jne
mov
jbe
inc
test
mov
jecxz
pop
xor
xchg
subb
out
scas
cld
mov
adc
repnz
lock
cmp
ret
repnz
stos
pop
arpl
js
add
repz
pop
pop
ror
jecxz
pop
inc
cltd
jl
mov
jae
mov
icebp
stos
out
lcall
aaa
mov
push
dec
mov
xchg
pop
into
mov
enter
sub
jno
and
add
pop
jle
ljmp
das
mov
cmp
jo
testb
icebp
out
addr16
xchg
pop
jo
pop
mov
addr16
arpl
push
cmp
mov
inc
cmp
enter
jg
inc
adc
mov
mov
inc
lcall
fsubs
fstl
xchg
outsl
mov
loop
enter
aaa
popa
mov
aam
stos
out
cmp
push
pop
mov
sbb
dec
add
mov
ficoml
push
inc
dec
mov
enter
hlt
sub
test
test
mov
cmp
dec
repnz
stc
sub
sahf
or
sub
push
ret
lret
cmp
aaa
dec
rep
inc
xor
dec
test
sbb
ja
push
xor
inc
mov
mov
pushf
or
pop
aad
das
fcomp
pop
ret
or
dec
pushf
loop
and
push
lret
out
jno
shr
in
imul
xlat
lahf
test
sti
mov
insb
imul
xor
aam
lcall
inc
adc
sbb
xchg
pop
mov
fcmovb
xor
xor
cli
xchg
xor
sbb
loope
pop
mov
push
cwtl
popa
and
xchg
loop
pop
sub
pop
sarl
jbe
sar
das
jg
push
xchg
pop
push
int3
pop
fldcw
stos
add
add
pop
sbb
xchg
mov
out
push
jmp
and
shll
imul
test
dec
mov
dec
jg
dec
repz
adc
jecxz
adc
xchg
mov
ljmp
adc
rorl
stos
push
jns
push
adcb
jecxz
mov
test
fldt
push
and
leave
stc
jl
pop
push
add
dec
jae
ss
mov
xchg
mov
cmc
out
iret
xor
imul
pusha
jns
es
adc
add
cmpsl
imul
call
inc
popa
fcmovb
and
mov
add
mov
xor
cmpsl
in
repz
daa
sbb
fildll
data16
sbb
pop
mov
inc
scas
dec
stos
lahf
mov
sub
jecxz
psubusw
xor
insl
stos
sub
mov
mov
dec
jge
add
insb
bnd
sti
pop
outsl
sbb
sub
subl
subl
push
in
insl
pop
call
push
repnz
push
push
fdivrl
das
int
fs
aam
jmp
push
xor
ja
out
js
lds
xor
dec
push
ret
xchg
test
out
orb
test
sti
leave
cmp
cmp
sarb
aas
test
out
adc
inc
sbb
ss
mov
mov
jmp
and
dec
arpl
mov
sbb
rorb
icebp
inc
out
das
andl
push
nop
leave
loope
outsb
pop
adc
pop
pop
xchg
lret
adc
push
out
mov
sub
xchg
pop
ret
inc
test
roll
shll
addr16
push
jmp
adc
xchg
push
pop
lret
and
popf
ss
pop
icebp
cmpsl
cmpb
les
test
xor
ret
mov
popf
xor
cmpsl
push
sti
mov
orb
pushl
inc
inc
push
testb
pop
xor
insb
fldl
test
jle
add
popa
xchg
push
pandn
ss
mov
pop
mov
jp
dec
test
ljmp
iret
pop
add
call
aaa
jbe
cltd
scas
xorb
addb
mov
push
aaa
ljmp
nop
or
fidivrl
dec
pop
mov
fsubrl
mov
outsl
sti
push
xchg
dec
xchg
test
sub
ljmp
inc
out
sub
add
push
cs
pop
mov
and
inc
shrb
shll
push
inc
jmp
mov
cmp
sbb
push
out
or
adc
inc
andb
clc
fisttpl
xchg
mov
push
mov
adc
popa
push
cmp
xchg
pop
cmp
loopne
jo
dec
call
out
insl
repnz
mov
pushf
sub
imul
imul
jecxz
ss
pushf
add
adc
cmp
mov
jbe
pusha
sbb
es
mov
mov
mov
xor
or
inc
sub
pop
xchg
mov
shll
insl
mov
xor
xlat
pop
or
xor
daa
mov
dec
loopne
xchg
sub
shll
nop
add
inc
jo
push
jo
imul
cmp
xor
xchg
cltd
push
push
add
mov
outsb
insb
push
xor
xor
mov
testl
sbb
data16
outsl
mov
jle
mov
jns
jg
push
cs
and
dec
fadd
inc
stos
out
in
shll
mulb
mov
sahf
in
cmovge
cmp
sbb
inc
mov
jo
adc
jecxz
stos
cmp
daa
inc
cmp
outsl
sbb
out
mov
fidivrl
cmpsl
mov
sbb
push
sub
pushf
pop
or
in
push
jge
xor
clc
andb
divl
sub
mov
jae
cmpb
pushf
lods
xchg
push
jmp
pop
arpl
fdivrl
sbb
jae
adc
lahf
pusha
fmull
sbb
jp
int
sar
dec
jbe
or
insb
mov
rolb
mov
notl
mov
daa
inc
out
aas
add
sbb
mov
push
stos
add
jne
int
hlt
jb
mov
sub
push
push
xchg
lock
adcl
jae
push
jnp
into
push
stos
push
daa
xchg
ret
lcall
mov
cld
scas
or
inc
sub
push
push
jmp
sbb
jg
jmp
loopne
out
sub
mov
inc
icebp
pop
stc
cmp
repz
pop
bound
ss
cmp
in
lahf
test
das
aam
adc
and
cwtl
loop
fsubrl
sub
lcall
ss
jae
mov
mov
sar
mov
test
inc
jg
pop
leave
xchg
cmp
stc
push
jecxz
mov
cmc
and
cmc
leave
ja,pn
sbb
push
ljmp
xor
push
ss
mov
outsl
or
lret
adc
scas
out
in
int
mov
inc
mov
cmp
imul
adc
xor
enter
fstl
stos
xor
pop
push
decl
mov
fdiv
lods
mov
and
jle
inc
jmp
enter
in
xchg
clc
not
pop
xchg
pop
lock
jmp
sbb
push
inc
dec
fisttpl
call
ret
mov
bound
arpl
dec
sbb
jecxz
cmpsb
and
jno
leave
sti
cmp
and
inc
jg
jb
pop
adc
xor
mov
test
xchg
adc
call
xor
mov
ljmp
jl
push
mov
pop
imul
push
outsl
jmp
repz
jl
iret
dec
xchg
jns
ret
pop
cmp
add
repz
mov
pop
or
pop
lds
scas
push
nop
mov
enter
mov
icebp
cwtl
mov
mov
out
outsb
add
ret
cwtl
rolb
and
push
inc
push
or
loop
loop
ret
and
int3
cmpl
stc
pop
jnp
push
jo
stos
cltd
stos
jo
add
xor
out
arpl
fucomp
dec
rcrb
insl
cs
aad
mov
and
jmp
or
je
push
mov
mov
and
mov
sbb
insl
pushf
nop
loopne
or
stos
mov
push
lcall
and
inc
scas
xor
xchg
mov
mov
in
jle
pop
and
cmpsb
dec
or
mov
fwait
or
xchg
sub
int3
orb
jnp
bound
dec
cmpsb
push
or
out
leave
mov
cmp
mov
dec
jo
jbe
stos
xchg
cmp
dec
lods
pop
add
das
cmp
jae
rclb
icebp
dec
cmpsb
sarl
mov
mov
sbb
lods
mov
test
dec
jo
push
mov
jno
pop
jg
xchg
rcll
insl
jne
cwtl
cs
lods
xchg
insl
inc
pop
push
scas
jnp,pt
fisubl
fistps
xchg
data16
fcomps
push
jge
sahf
jge
ljmp
sbb
call
daa
stos
add
flds
jbe
insb
out
test
pop
int
push
cmpsb
and
in
aam
mov
add
and
nop
fstps
mov
mov
mov
mov
out
aas
or
push
xor
sub
cmpl
mov
or
nop
lahf
xchg
xchg
enter
and
sti
aam
dec
fsts
fdivrs
gs
pop
push
mov
or
push
pop
adc
in
jle
lea
lock
add
mull
shlb
faddl
dec
pop
xor
jp
outsb
shll
scas
and
add
lea
jecxz
sub
jno
add
popf
and
cltd
push
popf
ss
lock
add
loopne
xor
bnd
cmpsb
lret
cmpsl
test
jecxz
orb
push
rclb
popf
add
cmpsb
loop
dec
jnp
clc
mov
jl
stos
jle
pop
adc
push
pop
pusha
mov
lret
cmpsl
cmp
shll
outsl
int
push
add
pushf
jmp
adc
sub
test
movsb
leave
or
mov
jae
imul
dec
cmp
fimuls
das
mov
ljmp
je
mov
push
xchg
mov
test
adc
imul
inc
hlt
rcr
mov
fcomps
call
sbb
pop
addr16
or
sbb
or
aam
js
rcl
test
shll
adc
or
xor
dec
add
pushf
jmp
cmp
fcmovnbe
adc
outsb
push
sbb
push
outsb
rcrb
mov
or
mov
pop
or
bound
sub
mov
in
negl
lea
dec
int3
and
fcomi
fstpl
and
aas
adc
cltd
loop
xchg
repz
cmp
daa
adc
out
lea
push
mov
out
repnz
jle
inc
sbb
jl
mov
loop
btr
xor
movsl
xchg
addr16
add
scas
xor
shlb
and
sub
jo
rcr
mov
idivl
mov
int3
mov
xchg
out
scas
mov
idiv
in
push
sbb
inc
shlb
xchg
inc
pop
fs
pop
xchg
ror
pop
or
fistps
es
push
push
lods
or
dec
outsb
xor
daa
outsb
mov
pop
loop
jg
mov
test
xchg
mov
jnp
aam
orl
or
lock
out
mov
xchg
movlps
sub
jecxz
push
adc
sti
pop
cmp
mov
lods
jb
popf
xchg
loope
add
xchg
lods
cmp
dec
frstor
jmp
daa
sbb
test
push
inc
pop
jmp
cmp
mov
in
cli
je
xor
cmp
xchg
jnp
dec
pop
inc
adc
loope
std
or
addr16
mov
out
sub
daa
sub
out
add
mov
mov
push
test
cli
inc
push
xor
cmc
fdivl
push
push
inc
xor
pop
repnz
cld
pop
sbb
mov
js
out
arpl
shrl
shlw
test
jno
sbb
jb
test
test
pminub
add
out
fwait
lods
loope
push
icebp
dec
adc
test
out
outsl
fmul
pop
inc
ss
mul
sbb
push
mov
cld
adc
je
insb
mov
adc
sti
fdivrl
shll
sub
pop
sarb
cmp
call
bound
roll
push
push
test
negl
inc
lds
xchg
fwait
inc
into
movsl
jge
cmp
or
cmpsl
mov
inc
mov
loope
add
mov
lods
pop
pop
add
xchg
push
mov
or
hlt
imul
insl
cmc
mov
daa
mov
pop
jno
xchg
push
push
inc
push
out
sub
movsl
and
jp
push
jo
stos
mov
add
fsubrs
xchg
addr16
shll
xchg
mov
les
cmp
idivl
add
fstpl
or
sub
dec
int3
xchg
push
fcomps
mov
cmp
movsb
icebp
add
outsl
mov
push
std
adc
jg
pop
jg
jnp
sub
mov
sbb
stos
mov
testb
scas
enter
bound
fldcw
mov
inc
jp
lea
push
fs
test
pop
add
fs
push
push
mov
cltd
inc
pop
lock
pop
ss
cmp
int3
pop
push
adc
xchg
pop
xor
sahf
and
lods
mov
cmp
xchg
icebp
div
xchg
test
loope
and
add
mov
inc
mov
mov
push
lret
xchg
or
mov
xchg
pop
or
insl
lcall
jae
in
push
je
pusha
stc
push
mov
mov
repnz
fwait
mov
pop
fwait
xchg
stc
mov
adc
icebp
hlt
insl
push
stos
dec
and
jge
ret
sub
mov
dec
cmp
dec
sbb
sbb
ja
decb
faddl
mov
ss
mov
test
dec
test
in
push
lret
pop
popa
and
lods
popa
xchg
dec
pusha
xlat
xchg
push
mov
jmp
and
mov
stos
sub
push
es
adc
aam
pop
pop
in
cltd
cld
enter
repnz
mov
pop
pop
or
in
sbb
js
lods
adc
and
mov
loope
test
shl
sub
cmp
pop
test
ret
lahf
mov
sub
pop
ss
imul
repnz
or
jg
jnp
jb
sub
out
ds
mov
pop
test
loope
jo
inc
loop
int3
in
es
mov
pusha
adc
out
mov
xchg
rclb
lret
jle
cltd
das
push
push
mov
ljmp
sub
mov
jo
cwtl
mov
mov
cmp
leave
test
nop
aam
pop
rorb
sbb
imul
int
pop
cmpb
pop
lret
fadd
sbb
leave
das
xor
inc
call
repz
sar
xchg
adc
out
mov
adc
insl
cmp
mov
flds
push
jo
push
das
or
ret
out
pusha
test
cld
mov
ror
out
movsb
add
push
push
lea
icebp
cmp
leave
hlt
out
pop
xor
pop
rclb
xchg
insl
jecxz
adc
fcoml
repz
mov
mov
rol
aad
mov
lahf
test
setns
jns
shrb
pushf
je
mov
test
mov
xorb
sarb
pop
arpl
addr16
cltd
clc
dec
push
loop
mov
push
mov
cwtl
push
mov
sub
push
hlt
rol
mov
mov
jmp
shll
ds
dec
xchg
mov
hlt
add
push
pop
lea
call
ljmp
ljmp
xchg
addb
fiadds
movsb
test
xlat
push
pusha
les
int
mov
add
cld
out
cld
lock
sub
pop
push
pushf
xchg
int
test
cld
cli
sbb
jle
mov
lods
dec
or
hlt
jno
xor
pusha
sub
dec
dec
push
xchg
out
mov
sbbl
cmpsb
push
add
or
inc
cmp
pop
loopne
faddl
sbb
inc
in
pop
imul
icebp
mov
popf
inc
push
stos
adc
cld
imul
insl
loop
jbe
das
sub
inc
gs
mov
lods
sti
dec
xor
fimuls
push
cmp
cmp
hlt
loope
loopne
xchg
dec
cmp
mov
jmp
mov
mov
into
in
aam
outsl
adc
int3
mov
insb
jmp
jae
fxch
mov
popa
int3
and
mov
adc
test
gs
push
mov
dec
mov
or
inc
and
mov
negb
and
aam
out
add
js
xchg
repnz
ficoml
movsb
iret
shll
inc
popf
add
jl
ja
inc
push
mov
aad
mov
mov
fs
sub
cltd
xchg
mov
mov
cmp
test
xchg
or
cwtl
ret
sub
adc
add
add
and
mov
jno
and
or
sti
or
sub
jbe
cmp
fidivrs
cli
fsubrl
xchg
push
dec
fidivrs
test
sub
xchg
jmp
fistl
sbb
cltd
lock
repnz
xor
stos
mov
in
ja
push
mov
and
pop
mov
jne
pop
fcmovne
les
sub
loope
movsb
icebp
sub
push
inc
jp
jp
pushf
ficoms
xlat
pop
or
sub
mov
dec
push
sbb
cmp
adc
mov
fdivp
push
adc
jno
cmc
mov
popf
jns
push
repz
je
bound
sbb
fdivs
mov
loope
lahf
or
popf
mov
ljmp
dec
mov
xchg
mov
std
mov
mov
dec
daa
sub
pop
popf
cltd
shll
out
call
jae
jnp
sub
fstpt
addr16
insl
dec
mov
lret
add
hlt
push
jge
icebp
push
pop
mov
shlb
jb
jo
adc
loopne
sbb
pop
and
add
daa
cmpsb
pop
adc
std
sti
pop
inc
dec
fisubs
stc
xchg
int
sub
mov
push
bound
xorb
pop
in
movsb
out
repnz
in
sbb
sub
xor
push
xchg
jmp
jecxz
ss
xchg
mov
idivl
pop
dec
aas
jno
push
out
push
mov
pop
push
add
or
sbb
repnz
ds
stos
and
ret
into
rorb
dec
iret
xchg
gs
mov
mov
stos
inc
iret
jp
and
xchg
jbe
imulb
pop
insl
mov
jp
jno
xchg
movsb
xchg
outsb
cmp
mull
mov
jne
bound
pop
fwait
mov
nop
cwtl
xchg
xor
inc
inc
mov
sarb
hlt
add
mov
sbbb
sub
mov
mov
inc
or
aaa
les
mov
push
xor
out
addl
mov
jo
mov
shlb
out
adc
mov
mov
dec
sub
adc
xchg
xchg
lret
lcall
ljmp
dec
in
cltd
inc
cmp
jle
sti
jl
insb
sbb
sti
pop
fadd
xchg
sti
test
out
in
xchg
repz
inc
div
mov
repz
vcvttps2dq
out
sub
fs
push
xchg
shlb
xchg
outsl
test
and
and
scas
xchg
in
mov
adc
dec
into
insb
loope
sti
mov
sbb
sti
lds
icebp
out
cmp
mov
xlat
subl
nop
xor
movsl
jbe
stc
das
rcl
loope
repz
scas
mov
ss
mov
mov
outsl
xchg
test
xor
mov
js
cmc
adc
cmp
xchg
stc
lcall
cmpsl
inc
add
and
jg
mov
sub
cmp
movsl
pusha
xor
cmp
sub
or
xor
cmp
mov
push
data16
pop
je
push
jno
mov
in
mov
add
scas
aaa
sbb
and
dec
iret
ret
pusha
add
out
xcrypt-cbc
cmpsl
xchg
pop
and
std
les
out
out
adc
dec
mov
iret
cwtl
fisttpll
jge
xor
push
cmp
mov
in
pop
cmp
aad
dec
test
and
xchg
js
mov
jae
rolb
add
push
adc
imul
lds
fadd
push
daa
adcl
pop
out
aam
mov
pop
mov
lea
mov
test
pop
mov
pop
mov
lcall
test
loopne
pop
sbb
call
mov
hlt
das
rcll
mov
inc
shlb
test
pop
cwtl
cld
dec
add
inc
dec
xor
leave
lods
aam
insl
sub
inc
jecxz
cmp
add
lods
push
test
adc
divl
sti
ds
lahf
jp
pop
push
imul
out
add
sbb
cld
in
jmp
pop
inc
cmp
scas
pop
or
dec
mov
mov
adc
test
pop
mov
sbb
xor
aad
fwait
gs
cmp
mov
push
push
fwait
bound
inc
or
addr16
aam
test
jns
xor
out
in
mov
add
pop
lods
lock
lods
repnz
pandn
mov
test
jbe
xchg
enter
add
dec
rcr
notl
pop
inc
test
clc
popf
push
icebp
sub
mov
fs
into
rcrl
cwtl
cmp
sbb
sub
es
mov
cmpb
inc
mov
lret
inc
int
mov
sbb
popl
cwtl
loop
cltd
es
movsb
in
pop
loopne
int
sub
mov
jmp
inc
mov
inc
sub
cmp
stc
ljmp
pop
mov
push
lret
test
popf
sbb
es
ret
aaa
mov
ljmp
imul
mov
add
aam
lock
cmpb
cld
xchg
popa
push
pop
clc
fwait
aam
loop
cmp
xchg
add
popf
sub
movl
mov
mov
lahf
mov
into
enter
cmpsl
lock
sti
xor
gs
push
push
fld
ss
and
aas
pusha
pop
sbb
mov
aad
pop
push
pop
shlb
inc
mov
push
sti
mov
jmp
shll
xor
in
inc
dec
mov
push
ds
inc
leave
icebp
jp
mov
cmp
lock
jae
roll
pop
mov
repz
faddl
inc
push
mov
and
sbb
pop
push
gs
movsl
push
xor
cwtl
mull
scas
xchg
fimull
sbbb
jg
les
jo
xor
or
fsubr
aad
xchg
inc
inc
addl
lock
dec
xchg
test
push
flds
sub
and
jo
push
xchg
aas
sarl
adc
xchg
loope
test
mov
lcall
xor
leave
lea
and
addr16
add
xor
mov
sub
and
gs
shll
imul
ljmp
lret
pop
cmp
sub
push
dec
scas
jbe
xchg
xchg
sub
fldt
mov
adc
push
add
push
push
mov
push
sub
in
push
sbb
aaa
push
mov
jmp
dec
jmp
mov
xor
aad
pop
cmp
mov
outsl
lods
sbb
repz
sub
dec
test
shlb
insl
push
xchg
xor
mov
ja
movl
sbb
sub
scas
xchg
sbb
adc
push
adc
push
test
jns
jge
daa
xor
arpl
negb
xor
lret
cs
cmp
push
sbb
call
sub
test
cmpsl
xchg
shll
dec
push
test
jbe
ljmp
xor
xchg
inc
xor
pusha
das
mov
sub
pop
and
je
loopne
ffree
sub
aas
sub
mov
ljmp
movsl
stc
movb
push
or
mov
adc
gs
jecxz
shlb
call
push
mov
mull
xchg
fildl
add
and
mov
fcomi
dec
test
ljmp
and
clc
bound
mov
xor
mov
pop
jo
and
cmp
scas
cmp
pop
pop
lea
dec
das
hlt
std
lods
arpl
mov
cmp
pop
cmp
add
or
sbb
iret
rcrb
xor
insl
into
adc
jbe
mov
xchg
roll
xorb
std
fstpl
cmp
dec
and
sbb
dec
cwtl
aad
dec
cwtl
movsl
int3
rep
out
das
xchg
data16
fmull
jp
std
mov
fnsetpm(287
aad
xor
cs
daa
addb
clc
and
ficoml
out
xchg
or
push
outsl
push
sub
test
cmp
stc
loope
add
xor
cmp
mov
push
jns
mov
inc
pop
inc
cmp
sbb
push
cmp
sbb
add
outsl
loope
push
adcl
insb
xchg
jp
arpl
sbb
push
xchg
lahf
mov
jmp
in
flds
add
push
rcl
mov
ret
sti
adc
xchg
gs
xor
xlat
xchg
mov
subb
aas
imul
inc
or
iret
adc
pusha
jne
mov
hlt
cmp
je
call
mov
imul
lret
insl
or
inc
in
test
inc
out
inc
mov
sub
mov
lret
jne
dec
lods
mov
xor
popa
nop
out
movsl
mov
lcall
dec
repz
aam
adc
jmp
test
fstl
shrl
xchg
lods
test
les
mov
lahf
jbe
or
in
mov
loope
or
es
xor
pop
mov
je
xor
mov
inc
push
bound
cli
sub
xor
adc
jne
ret
mov
inc
mov
add
scas
test
iret
add
jge
cmc
jmp
xlat
mov
and
jg
fwait
dec
push
xlat
lock
adc
loop
mov
not
mov
sub
clc
lods
and
push
mov
mov
jae
je
fadd
sbb
repz
lcall
test
sbb
test
mov
std
mov
dec
fcoml
jb
xchg
cmp
sub
outsb
std
mov
lret
xchg
or
push
inc
mov
xchg
clc
mov
sub
jg
sbb
aaa
xor
mov
push
addr16
pushf
jge
ret
cmp
lods
push
jecxz
push
mov
in
scas
pop
loop
push
sbb
stc
fiadds
sbb
push
sbb
pop
popa
ja
mov
jno
xchg
faddl
push
cld
mul
mov
shrb
pop
int3
pop
pop
mov
or
sbb
out
arpl
push
sti
jle
push
aam
stos
jnp
rcl
push
cwtl
xor
cmp
pop
out
dec
cmp
jne
loop
aam
sbb
mov
xchg
insl
pop
cld
and
mov
int
xchg
scas
mov
outsl
push
idiv
mov
jp
mov
loope
movsl
scas
daa
addr16
jg
mov
xchg
fwait
shl
roll
cmp
cmpsl
cmp
mov
mov
xor
xor
sub
and
mov
jno
test
jbe
std
inc
push
inc
and
xlat
xor
xchg
jnp
lds
lret
sbb
stc
push
dec
and
iret
push
mov
movsl
mov
ret
test
sarl
hlt
mov
outsb
loope
cmp
subb
push
inc
jb
mov
arpl
adc
sub
inc
mov
call
add
int3
cmp
cmp
mov
mov
dec
sub
imul
cs
xorl
sub
and
cwtl
loope
mov
mov
nop
add
in
std
add
daa
adc
mov
jbe
pop
fwait
mov
sub
xchg
in
bound
mov
test
std
fnstcw
mov
in
outsb
jne
xlat
rcll
jno
nop
movsl
scas
data16
pop
mov
mov
inc
pop
jne,pt
or
js
dec
push
pop
mov
loop
xchg
out
cli
cmp
inc
rorb
xor
jecxz
push
mov
push
and
imul
push
inc
repz
adc
iret
ret
mov
jecxz
xor
push
pop
stc
mov
xlat
pushf
sub
pushf
in
dec
xor
ror
mov
add
inc
cmp
mov
fs
jnp
pusha
pushf
mov
nop
in
jp
adc
jns
shrb
push
push
outsb
jae
test
add
push
or
rep
xor
mov
aas
inc
mov
cmpsl
pop
mov
adc
sub
or
sub
mov
push
test
xchg
pop
adc
sbb
loopne
in
insl
pop
cmp
lahf
ljmp
shrb
sub
sbb
jecxz
js
cwtl
cmpsb
nop
dec
push
lods
rcrl
call
stos
jp
mov
inc
inc
testb
mov
lods
xchg
sar
movsl
addr16
cmpsb
mov
or
hlt
in
sbb
cmc
les
mov
sarb
or
pop
inc
xor
daa
cmp
insl
xlat
mov
ret
lds
jge
xchg
sbb
call
sub
jnp
push
add
jp
dec
mov
data16
jno
sub
cmc
fisubrs
cltd
mov
mov
cmp
xchg
repnz
fisubrs
stos
push
xchg
gs
push
push
lcall
leave
stos
jae
xchg
add
iret
mov
dec
das
cmc
push
pop
jno
leave
pop
jmp
pop
push
mov
jl
mov
push
inc
mov
dec
mov
xor
roll
xlat
fs
adc
and
push
sbb
in
sub
cmpsb
and
and
repz
into
loop
jnp
popa
popf
push
out
orb
and
fadd
sbb
push
push
popa
cmp
out
cs
das
dec
xor
sbb
add
and
decl
mov
ret
cli
gs
pusha
mov
lock
mov
or
insl
lret
stc
loope
loope
hlt
lea
push
nop
jns
loopne
jbe
mov
jg
add
mov
inc
insl
fldcw
arpl
jp
cli
sahf
in
fmuls
or
insl
mov
icebp
es
cld
xor
and
mov
jbe
adc
repnz
jne
or
push
push
sub
sub
pusha
add
test
xor
inc
add
pop
je
divl
loope
push
aad
leave
fmulp
fdiv
adc
insl
mov
push
or
cmc
inc
adc
addr16
mov
cmp
loopne
inc
sub
sarb
pop
in
daa
movsb
rcrb
sbb
mov
repz
fdivr
inc
insb
popa
repz
sbb
stc
add
loop
or
dec
inc
lods
nop
inc
es
or
sahf
sti
sub
or
xchg
jnp
mov
push
jge
rolb
sub
pushf
iret
mov
jne
loope
subb
int3
fmul
mov
insl
inc
or
subb
push
sub
test
out
or
call
pop
and
xchg
lock
push
xchg
ret
adcl
jle
sub
data16
in
dec
psrlw
ret
je
adc
and
adcl
fs
push
aam
push
sti
adc
pop
jbe
out
ret
mov
movsl
das
xchg
mov
test
mov
and
lds
out
jmp
sub
ja
sbbb
aaa
repnz
js
sub
rcr
ficompl
out
stos
int3
or
sarb
inc
jle
in
xlat
cmp
mov
lods
cmp
jno
dec
push
sub
fstpt
push
pop
imul
adc
in
inc
cmpsb
xchg
push
mov
hlt
pop
cld
stc
xchg
jecxz
dec
insl
pop
out
out
mov
xchg
push
and
stos
pop
mov
mov
jae
fld
fistpl
sub
clc
out
ret
scas
sbbl
pop
pinsrw
adc
out
pop
icebp
xor
dec
lea
aad
negb
sub
sbb
push
rolb
dec
xchg
inc
mov
xlat
lock
in
adc
loopne
push
mov
mov
push
pop
sbb
push
popa
sbb
lds
or
gs
loope
daa
ja
stos
inc
add
out
out
rorb
dec
aad
enter
loop
pop
lods
push
mov
test
out
push
push
iret
sub
xor
imul
mov
xchg
dec
xchg
leave
or
xchg
sub
iret
iret
stos
jg
mov
xchg
out
pop
dec
adc
xor
sbb
popa
mov
sahf
push
call
outsl
dec
jne
mov
aad
and
lret
cs
addr16
pop
mov
xchg
xchg
mov
sbb
dec
dec
cmp
ljmp
dec
movsl
notb
sub
cli
into
call
mov
or
sub
ss
call
fimull
xor
pop
cli
xor
out
sahf
stos
orl
inc
pop
mov
jmp
mov
push
adc
push
call
push
xor
lods
dec
mov
and
adc
mov
scas
adc
dec
sarb
loope
mov
daa
subb
cmpsb
loopne
xor
push
mov
push
call
pop
lods
or
dec
and
cmpsb
jo
cmpsl
scas
call
arpl
pop
out
dec
mov
mov
ret
push
nop
js
cmp
jae
sub
mov
cmp
mov
adc
outsb
loope
xchg
pop
out
ret
les
cmp
nop
xor
cltd
jae
add
fcomip
add
adc
repz
bnd
roll
cmpsb
mov
leave
movsb
cld
cltd
insl
cmp
adc
scas
mov
jle
mov
in
sbb
jno
iret
add
scas
cltd
mov
testw
or
es
out
dec
mov
sbb
sbb
pop
jle
out
daa
mov
xchg
idiv
jg
jmp
push
negl
mov
fiadds
mov
xchg
jbe
xor
hlt
inc
push
sbb
in
pop
lds
push
dec
push
lret
xchg
cs
xor
push
or
inc
and
out
lcall
lcall
mov
aam
cmpsl
decb
push
push
stos
jp
add
pop
xor
fs
pop
loope
loop
pop
loopne
sbb
sub
mov
into
push
cmp
cli
ss
lea
enter
xchg
sbb
lahf
icebp
mov
cmp
popf
adc
xchg
lods
mov
and
mov
fidivl
pop
outsl
cmpsl
sub
add
push
movsb
mov
or
es
dec
pop
pop
pop
fiaddl
leave
mov
mov
cmp
mov
cli
fcomp
add
aas
jle
adc
movsl
sbb
loop
into
xor
dec
sub
mov
jecxz
mov
cmc
fcom
es
cmc
into
mov
adc
ss
mov
fisttpll
mov
scas
push
add
out
aam
lods
mov
or
dec
out
fisubs
leave
cmp
adc
jo
mov
iret
push
lahf
out
loop
enter
aas
cmpsl
mov
xchg
jmp
std
mov
inc
popa
mov
addr16
into
and
cmpsb
lcall
fcoms
cmp
mov
xor
jae
xchg
jo
out
xchg
aaa
sbb
clc
scas
inc
inc
iret
add
mov
cmp
ljmp
jecxz
clc
mov
xchg
push
xchg
xchg
dec
dec
nop
jl
pop
jle
xlat
pop
jmp
mov
rolb
leave
aam
fidivs
cld
pusha
bound
adc
iret
push
xchg
cmp
roll
jge
add
js
dec
mov
push
rclb
mov
cs
stos
in
cltd
adc
jne
mov
push
out
inc
test
jbe
inc
adc
inc
mov
aaa
push
adc
imul
mov
sbb
mov
pop
or
test
and
inc
fimull
xor
xchg
cmp
jecxz
sub
and
inc
orl
mov
movl
pop
pop
ret
xor
push
mov
sub
xor
inc
sbb
shrb
gs
lea
mov
fst
xchg
xchg
add
es
mov
fldenv
xchg
call
daa
and
ret
xchg
push
sahf
pop
cld
push
pop
insl
int3
gs
les
jb
int
stos
in
fildll
push
and
je
testl
rorb
push
lahf
fwait
and
into
loope
jae
jp
shlb
pusha
inc
and
adc
hlt
scas
jb
adc
lret
ret
pop
and
movsl
imul
and
cli
or
ja
hlt
mov
jbe
xchg
clc
jo
int
stos
sub
adc
add
mov
mov
int
outsb
inc
repnz
pusha
jns
ljmp
js
dec
sub
push
cmpsb
sub
testl
dec
je
adc
cmp
out
push
inc
daa
push
cli
pop
out
mov
mov
push
rorb
das
ljmp
lods
movsl
lret
lods
ror
mov
inc
xchg
loope
cmpsl
pop
pop
xor
adc
jge
leave
out
loop
sti
xchg
lods
jle
and
add
cmpsb
iret
lret
fwait
xchg
xorb
lcall
and
cli
push
or
cltd
pop
mov
fnop
xchg
pop
outsb
cwtl
leave
cmpsb
imul
es
mov
cmc
adc
sbb
out
inc
fwait
imul
leave
push
enter
ficoml
bound
dec
dec
inc
enter
lret
lret
out
jp
dec
xor
movsb
out
add
inc
shrb
fwait
loopne
ja
in
xchg
adc
mov
pop
cmc
or
cmp
cwtl
dec
xor
jo
xchg
mov
xor
cmc
scas
sub
and
inc
mov
mov
cwtl
xchg
jle
sub
jnp
pop
jo
mov
mov
lea
in
movsb
lods
call
xchg
sti
fcomi
dec
aad
or
ss
sub
mov
imul
xchg
les
mov
push
leave
push
pop
fsub
das
push
xor
div
pop
push
sub
inc
loope
sti
xor
out
gs
aaa
dec
or
mov
addr16
fs
or
inc
jecxz
ljmp
rolb
out
out
mov
mov
cmp
loop
in
out
and
orb
mov
add
push
or
xchg
and
xchg
testl
aas
jmp
mov
cmp
pop
fwait
and
dec
dec
sbbl
push
mov
es
sub
xchg
scas
jp
push
pusha
es
sbb
or
inc
leave
orb
dec
mov
shl
adc
xor
push
cs
sub
movsb
mov
push
cmp
outsb
popf
or
sbb
xor
push
into
mov
jmp
fwait
inc
push
ret
mov
pop
outsl
or
jno
rolb
cmp
jbe
pop
pop
cli
test
dec
fisubs
dec
push
in
aaa
or
mov
hlt
sub
add
cmpsb
or
les
push
call
in
int
lods
hlt
into
add
mov
xchg
popf
xchg
or
cmc
pushf
int
and
out
or
fidivs
gs
idivb
test
outsl
orb
push
aas
or
aas
lods
dec
sbb
xor
pop
movsb
dec
mov
dec
imul
repnz
icebp
and
inc
cltd
dec
in
test
test
scas
fs
rolb
dec
xchg
lds
push
xchg
fldenv
adc
das
adc
fbld
mov
add
sub
subb
fs
push
jno
cmpsb
fucomp
or
fidivrl
cmpsb
xchg
sbb
addr16
pop
mov
fstps
jns
dec
scas
sahf
aas
mov
lret
pop
jecxz
je
sbb
std
popa
es
lret
mov
loope
sub
sub
imul
fst
adc
ret
int
mov
jg
es
lods
mov
icebp
mov
xlat
or
dec
cmc
mov
scas
ret
cmp
in
aad
ljmp
scas
inc
insb
and
cmp
sub
xor
stc
and
cmp
pop
mov
mov
popf
or
test
sbb
in
shll
adc
jl
mov
jne
mov
xchg
adc
push
jecxz
push
lds
and
push
rorl
and
fcomip
sbb
dec
push
aam
pushl
jbe
cmp
sub
lcall
les
ja
xor
and
sbb
out
sub
adc
sub
and
fs
dec
xchg
popa
mov
jp
xchg
es
xchg
cmp
pop
out
popf
inc
jbe
inc
pop
adc
pusha
or
push
fimuls
pcmpeqd
ret
or
sbb
mov
adc
xor
rcr
xchg
in
es
sub
nop
pop
mov
outsb
stos
ret
xchg
clc
sub
mov
lret
add
jae
cmp
aas
call
xchg
pushf
fs
jno
ror
jge
int3
das
fldenv
dec
cmp
lcall
gs
and
rclb
scas
inc
lret
aad
dec
mov
ret
mov
push
fistpl
cmp
lods
mov
cmpsb
das
mov
add
mov
jp
aad
lea
add
andb
jl,pt
mov
cmp
nop
fdivr
or
jne
or
push
mov
leave
movsl
loopne
mov
inc
cmp
jns
cwtl
and
xor
pop
mov
insl
inc
sub
nop
iret
fsubrl
jno
les
fbld
or
mov
fstpl
and
or
lods
int3
orb
leave
jmp
sbb
jp
cmp
jp
jp
dec
and
lods
and
or
inc
xor
dec
scas
lods
into
pop
mov
mov
out
mov
dec
orl
mov
inc
push
cmp
ljmp
add
add
jne
nop
iret
jg
addr16
jmp
sbb
mov
test
sbbb
into
lock
mov
scas
mov
push
sub
mov
lahf
outsb
aaa
push
push
outsb
dec
adc
xor
out
sbb
jle
or
imul
gs
mov
or
pop
lmsw
mov
mov
aad
outsb
add
push
jo
sarb
sbb
xor
inc
test
mov
sbb
xchg
push
outsb
call
call
addr16
or
xchg
fdivrs
iret
and
das
sbb
or
jg
adc
das
pop
int3
cmpsb
inc
call
std
push
adc
pop
jne
in
add
mov
and
add
negl
gs
mov
jb
xor
adc
add
adc
call
pop
sub
fwait
in
aas
stc
scas
aad
fwait
sbb
test
pop
into
scas
mov
push
sbb
sbb
jecxz
push
mov
adc
xchg
leave
movsb
dec
xchg
inc
mov
outsl
push
loope
xor
and
sub
mov
test
jo
outsb
sbbl
popf
out
fstps
stc
add
sub
xchg
cmp
cmp
lods
adc
fucom
and
in
inc
dec
fs
ret
nop
jmp
jg
inc
xchg
or
xor
mov
mov
pop
sbbl
jbe
add
jle
roll
push
pop
imul
sub
jbe
xor
mov
push
dec
test
pop
inc
int
shlb
ret
mov
adc
xlat
popa
xor
mov
lea
cmp
idivb
je
sub
cld
xor
mov
push
jb
xchg
pusha
jb
jmp
add
push
clc
lods
cmp
and
int3
aad
lds
aad
or
inc
pushl
inc
ss
outsl
mov
xchg
mov
int3
enter
sub
xchg
cli
cwtl
ret
cmp
cmp
imul
int
jmp
imulb
xchg
xor
sbb
adc
add
out
ret
mov
lods
and
popf
into
stc
dec
mov
daa
sar
fwait
jge
mov
mov
mov
pop
into
int3
sbb
jb
mov
xchg
inc
cli
movsl
loop
insb
cmc
lock
mov
push
jp
scas
das
dec
and
xor
imul
test
mov
nop
adc
imul
mov
into
movl
xchg
ljmp
pop
in
xor
and
int
push
jge
cld
xchg
mov
data16
in
add
mov
dec
out
sub
push
push
outsb
aas
mov
ds
jb
mov
imul
out
aas
pop
pop
sub
sahf
inc
cmp
fiaddl
xchg
pushf
ret
popa
cmp
push
push
in
cwtl
call
dec
outsl
mov
push
push
ret
lcall
add
loope
mov
mov
sbb
mov
or
shl
ss
and
mov
fs
jl
and
cli
mov
pop
enter
or
cmp
addl
daa
sahf
xchg
jp
js
jl
push
and
aaa
repnz
cmp
lret
add
sub
ret
test
dec
mov
mov
cmp
adc
or
and
mov
negl
inc
add
push
inc
sti
xchg
mov
push
adc
xor
xor
cmc
sti
push
adc
mov
arpl
dec
jns
fwait
cwtl
sbb
cs
out
in
sub
dec
enter
mov
inc
imul
xacquire
jge
push
xchg
mov
movsl
adc
das
xlat
dec
sti
xchg
fs
int
aas
in
sbb
shlb
push
sub
daa
fdivp
xchg
mov
daa
stos
or
outsl
addr16
rcl
hlt
imul
push
jge
ljmp
pop
cmp
dec
das
ljmp
shll
push
lret
fadds
cwtl
sbbl
pop
out
mov
fadds
mov
loope
xor
add
sub
xor
add
xchg
add
push
in
mov
jg
in
pop
fistps
incb
pop
sbb
cmp
jmp
jle
pop
pushf
aaa
shlb
subl
and
shlb
popf
out
roll
popf
popf
shrb
outsb
and
es
fildll
into
or
fisubs
push
dec
mov
mov
push
cmpsb
inc
cltd
xchg
incb
sbb
insl
into
xor
outsb
mov
out
cmc
lods
and
sub
cmp
loope
sub
shlb
cmp
ret
leave
repz
cmc
fdivr
in
add
jmp
stos
cwtl
lock
pop
and
jg
dec
gs
xor
sti
jg
cmpsl
xor
add
push
inc
cmp
mov
js
movsb
fimuls
jno
adc
and
mov
mov
clc
mull
shlb
lds
test
lea
cld
sarb
out
add
popf
pop
mov
fwait
sbb
sbbb
daa
sahf
cltd
stos
loop
fwait
push
push
inc
push
xlat
cmpl
push
rorb
sub
cmp
arpl
dec
loopne
add
sub
lods
xchg
sti
ss
out
mov
pop
inc
mov
sti
gs
rolb
out
ds
jnp
cwtl
mov
mov
and
cmp
adc
lock
push
inc
daa
movsl
sbb
mov
int3
inc
insl
negl
mov
dec
lret
pop
lock
xlat
stc
adc
lret
popa
roll
aas
ret
sbb
aaa
xacquire
mov
jmp
cmp
movsb
mov
pop
mov
inc
cwtl
sub
push
mov
add
xor
nop
ret
fldenv
in
lret
loopne
xchg
or
out
sub
arpl
scas
dec
xlat
cmpsb
cmp
pusha
xchg
mov
xchg
out
or
push
xor
jnp,pt
inc
mov
sub
adc
dec
hlt
and
ficomps
stos
arpl
loop
in
cli
xchg
cmc
add
ficompl
sbb
dec
mov
cmpl
shl
add
mov
mov
push
xchg
jnp
daa
stc
sbb
sbb
adc
add
out
push
xchg
jo
sbb
arpl
jne
jle
in
aad
and
aaa
mov
push
inc
jl
in
repz
ret
ds
cmp
mov
subb
iret
lahf
sbb
shrl
imul
dec
notb
sub
insl
inc
pop
push
repnz
aad
inc
dec
adc
cmp
fnstcw
aam
xor
jno
mov
repz
and
mov
movl
mov
mov
jns
xlat
out
cmp
in
push
mov
inc
jae
add
push
cmp
repnz
ffree
loop
mov
pop
mov
xor
adc
insb
pop
mov
jle
out
mov
mov
das
xchg
mov
imul
push
lods
daa
push
dec
mov
idivb
mov
movsl
dec
outsl
std
mov
xor
ljmp
mov
dec
pushf
jp
sub
pop
dec
outsb
lahf
ss
stos
repz
sti
xchg
or
sbb
push
fdiv
pop
out
xchg
daa
pushf
das
xor
addl
sti
mov
cmp
sbb
outsb
xor
shl
push
adc
push
pop
rorb
ljmp
iret
bound
data16
mov
inc
mov
cli
mov
lcall
and
insb
aad
and
movsl
arpl
fistpll
sbb
pusha
xor
insb
jg
in
mov
inc
xchg
xchg
cmc
iret
add
add
dec
mov
sub
lea
stc
lea
mov
stos
ret
outsl
jl
jp
sbb
cmp
insb
rcl
popa
pop
mov
mov
mov
pop
std
inc
in
pop
std
bound
inc
fdivr
dec
loope
cmpsb
sub
inc
jb
push
mov
addb
cmp
sbb
adc
ljmp
out
je
jbe
sub
dec
lret
adc
xchg
daa
rcll
insb
int
in
adc
dec
loop
repz
xchg
jno
fs
xchg
data16
push
dec
and
push
decb
leave
mov
ds
aam
sarl
pop
jp
jns
and
adcl
mov
mov
mov
fbld
xchg
ds
js
fiadds
push
adc
mov
xchg
add
jecxz
shrl
push
pop
mov
mov
or
pushf
loopne
sbb
push
mov
sbb
dec
jl
or
bound
dec
pop
jns
push
and
push
jnp
mov
xchg
push
fs
rcrl
in
mov
mov
xchg
rolb
dec
cmp
dec
cmp
sub
shll
pop
sub
cmc
xchg
inc
xor
dec
adc
adc
xchg
sbb
and
sub
and
lahf
iret
and
xchg
push
shlb
xchg
jle
les
mov
dec
das
sarb
push
xor
inc
aas
or
lds
je
push
and
inc
xchg
xchg
mov
lret
pop
in
sbb
fs
inc
cwtl
cmp
push
addr16
push
and
mov
fsubl
mov
mov
jle
mov
int3
fdivl
sbb
mov
cmpsl
enter
mov
xchg
jo
push
inc
xchg
leave
mov
lret
movsb
stos
mov
imulb
mov
jp
mov
pop
add
sbb
mov
daa
jo
fldl
sub
xchg
mov
in
ja
data16
cmp
loop
inc
shll
sub
popa
mov
imul
call
xchg
mov
push
sar
das
hlt
cmp
sti
icebp
and
insb
cmp
outsl
nop
pop
adc
mov
sub
add
and
jmp
mov
xor
mov
add
push
fisubs
cmp
out
testl
mov
pop
lret
sub
lret
fwait
sbb
mov
mov
imulb
lock
pop
jnp
int
jo
sub
in
push
sub
inc
sub
outsb
push
je
jmp
dec
cmpsl
dec
inc
iret
pop
mov
out
pop
pop
pop
shrl
rolb
dec
xchg
insb
pushf
xchg
int
xlat
fldcw
jbe
dec
lods
cmpsl
or
or
jp
mov
xchg
cs
das
sarb
xor
addl
cmp
mov
sbb
icebp
jnp
loope
je
pop
shlb
jmp
mov
pop
sub
xchg
cmp
push
leave
fs
mov
mov
mov
mov
push
cmp
inc
add
lods
and
mov
lret
xchg
push
mov
xchg
les
sbb
dec
sti
das
xor
addl
adcl
push
pop
cmpsl
mov
lods
data16
iret
cmp
adc
je
jo
lods
mov
jle
jle
sub
mov
inc
sub
out
xorl
cwtl
gs
xchg
lret
shl
fcmovne
or
imul
addb
mov
push
in
test
roll
jno
cmp
cmp
movsb
stos
fdivrl
pop
cmpsb
mov
mov
ljmp
lds
inc
jg
outsb
lcall
jb
or
sbb
push
stos
pushf
cltd
xchg
ret
cli
sbb
xor
adc
inc
lcall
testb
stos
adc
shl
sub
cmp
adc
jno
xchg
add
mov
testl
roll
fwait
xlat
add
sbb
add
aad
or
jecxz
inc
cld
push
xchg
xchg
sbb
sbb
jnp
idiv
push
mov
mov
pop
imul
sub
cld
rcr
lea
inc
jmp
adc
push
test
loope
test
addb
idivb
cli
loope
sub
arpl
jns
test
push
fcmovnb
mov
call
xchg
pushf
sub
jl
adc
fbstp
jno
stos
aam
jno
faddl
movsl
sbb
adc
lea
xchg
or
cltd
pop
jg
xchg
repnz
inc
sub
mov
lret
pop
add
daa
cmpsl
fs
repz
pop
and
repz
push
cmp
sub
push
push
mov
add
sub
xchg
or
dec
out
mov
sbb
pop
push
outsb
les
adc
rorl
cmp
pop
imull
les
xor
xchg
fcoms
xor
and
push
cwtl
clc
pop
xor
and
daa
call
iret
push
js
ljmp
call
xchg
lret
mov
adc
aaa
aam
lds
loop
inc
sub
mov
mov
cmpsl
pop
mov
cwtl
call
mov
sbb
lods
sbbl
stc
sar
adc
push
inc
adcl
and
lcall
cmc
scas
jo
push
mov
push
and
mov
aaa
mov
movsb
shlb
mov
jle
inc
cli
push
fs
fidivs
lock
les
sub
sbb
je
cmp
xor
outsb
loope
mov
xor
in
cs
cmp
in
cltd
rolb
inc
movb
pop
out
mov
imul
jge
ds
fnstenv
popf
pushf
addb
jne
scas
cld
inc
es
dec
mov
insb
lds
insb
xor
and
mulb
add
dec
repz
testl
in
sbb
mov
clc
imul
je
lods
add
cmp
int3
jge
adc
xor
mov
scas
call
les
or
stos
adc
mov
sbb
call
add
or
hlt
sbb
aam
test
push
clc
int
clc
cmpsl
out
add
mov
sbb
push
sbbb
fs
inc
sub
jmp
stc
insb
inc
mov
push
lret
pop
pusha
mov
in
mov
mov
mov
test
les
hlt
shrb
aas
pop
dec
inc
cmc
add
pop
sbb
adc
and
ljmp
hlt
std
sbb
or
xor
push
scas
test
add
sbb
dec
imul
es
stc
incl
das
fildll
push
addr16
add
xchg
pop
cwtl
popf
rorb
jne
xchg
movsl
and
leave
xchg
aam
or
dec
jae
ds
cli
cmpl
shlb
xchg
inc
mov
jbe
mov
xor
gs
inc
pop
scas
pop
js
cmpsb
andl
in
sbb
dec
mov
pop
out
mov
call
push
jp
dec
xchg
rcll
iret
adc
xchg
popa
lods
pop
push
jmp
sbb
adc
mov
push
fiadds
push
or
fs
xor
insb
loop
stos
mov
out
dec
stos
pop
sub
or
mov
ja
and
adc
cmpsl
in
mov
mov
cmpsl
push
xchg
cmp
xor
cli
seta
sub
adc
enter
into
les
std
iret
in
pop
out
popf
stc
fwait
popa
test
shll
sbb
xlat
add
enter
fs
add
das
cwtl
jp
xchg
pminub
daa
jecxz
mov
and
or
enter
dec
cmp
js
adc
or
jae
push
movd
rorb
xchg
ljmp
inc
stc
dec
int
push
cltd
xchg
call
mov
sub
xor
add
aad
jge
or
sahf
or
xchg
test
mov
pop
add
add
ss
sub
dec
push
cwtl
sub
pop
pop
pop
jno
call
cltd
lock
adc
repz
dec
andb
and
xlat
push
sub
pushf
inc
push
mov
sub
fsts
adc
jns
inc
jns
int
cmpsl
inc
lret
ret
mov
inc
dec
sub
int
pop
clc
adc
cmc
sbb
or
jmp
xor
push
sbb
xor
icebp
mov
lods
clc
push
outsb
push
adc
mov
imul
movsb
push
in
in
or
sbb
notl
insl
add
test
sbb
cmp
lret
test
scas
add
int3
aad
repnz
cld
ficomps
mov
mov
lret
pop
enter
sahf
sbb
inc
mov
fwait
mov
sbb
fcoms
mov
dec
mov
nop
pop
je
push
gs
mulb
push
addr16
std
cmc
insb
jo
push
xchg
gs
add
inc
loop
std
pusha
test
sahf
dec
repz
adc
add
cmp
sbb
mov
test
jg
push
cld
in
mov
dec
mov
les
in
in
mov
ret
inc
pinsrw
mov
sbb
outsb
in
dec
out
in
fnstsw
lea
insl
rclb
add
sbb
inc
mov
mov
xchg
push
cmp
jg
cld
movl
dec
cmp
inc
ret
adc
insl
inc
cmpsb
push
dec
inc
shlb
xchg
mov
pop
fwait
lret
push
mov
dec
fldl
pop
sbbl
aas
into
sub
xchg
xor
xlat
jp
je
add
adc
lret
subb
mov
mov
shlb
jno
dec
add
dec
and
fnstenv
sbb
dec
movsb
mull
mov
adc
sbb
xchg
sub
xchg
xchg
sub
mov
div
push
lds
xchg
pop
test
sbb
lock
or
jge
add
and
pusha
fwait
mov
and
adc
outsl
push
inc
lret
adc
dec
cmc
lods
imul
pop
repnz
mov
dec
popa
nop
aas
mov
clc
ljmp
mull
mov
cmp
mov
cwtl
out
aaa
push
cmp
push
adc
out
mov
xchg
and
push
icebp
fidivrs
or
cmp
enter
ror
push
scas
stc
cmp
push
dec
jns
adc
pop
insl
xchg
or
sbb
sub
fwait
xchg
int
loopne
inc
out
pop
sub
sub
inc
pop
andb
jbe
dec
out
or
outsl
jp
add
aas
fs
push
or
xlat
cmp
rcl
push
xor
ret
inc
addr16
scas
lret
aaa
mov
mov
fisubl
jle
dec
fstp
dec
and
mov
dec
test
or
and
mov
nop
mov
test
mov
mov
pop
mov
pop
scas
or
or
divb
dec
shrb
or
jo
fcomp
dec
mov
pushf
popf
mov
xchg
jb
lods
add
and
mov
inc
sbbb
sarb
sbb
fcompl
addr16
push
jg
cmp
add
mov
call
inc
jg
nop
xor
push
push
scas
jle
and
jae
int
push
pop
rcll
cwtl
dec
data16
cmc
pop
shlb
cli
ljmp
push
sti
arpl
icebp
adc
out
stos
sahf
mov
mov
mov
mov
push
ret
int
rcll
xor
sbb
xlat
xchg
iret
es
xchg
loopne
xor
mov
aas
int
mov
sbb
add
and
or
mov
dec
jmp
int3
dec
push
mov
and
and
loopne
repnz
je
cmp
sub
addr16
and
push
repz
mov
lea
out
lods
leave
push
cmpsl
mov
in
in
add
xchg
in
lods
push
popa
add
mov
cld
mov
aas
orl
aaa
xchg
xchg
mov
mov
shlb
jecxz
push
test
leave
in
mov
ss
jmp
aas
jmp
in
mov
adc
xchg
mov
cmpl
stc
cmp
inc
fdiv
lds
aad
fdivr
pop
cmpsl
out
out
rcll
xchg
xchg
lds
mov
sahf
cltd
leave
std
mov
push
mov
cmpsb
mov
into
hlt
jnp
scas
cmp
or
stos
pop
lcall
sub
jmp
mov
inc
outsl
xchg
popa
into
pusha
es
and
mov
fwait
xor
push
psubusb
mov
shlb
sub
push
xchg
push
fimuls
adc
cmc
jl
ljmp
dec
cmp
mov
test
dec
mov
mov
rclb
xchg
movsl
sub
stos
mov
jmp
pop
shr
jo
adc
mov
ret
aaa
das
or
fst
aas
inc
out
pop
cli
enter
xchg
test
xlat
lahf
insl
pusha
fld
mov
sbb
outsl
mov
inc
jae
fs
decl
in
test
pop
xchg
sub
xchg
cmc
rclb
xchg
ss
adc
lds
ds
cli
jl
jmp
imul
leave
scas
add
or
mov
fildll
sub
cld
fsubrp
out
mov
inc
fsub
ror
test
fs
mov
scas
jno
loop
pusha
loope
push
sbb
sar
mov
inc
jb
shl
adc
jae
rolb
loopne
mov
xor
mov
shrl
jp
push
rorl
mov
mov
pop
pushf
sahf
mov
cmp
push
xchg
movsl
outsb
das
jne
lods
mov
cmp
inc
dec
push
inc
fnstcw
and
rcrb
stc
xchg
insl
loop
popa
mov
add
or
dec
pusha
dec
cmc
out
daa
fadd
sbb
idivb
sub
pop
outsl
push
adc
cli
jnp
sti
pop
add
inc
int
add
daa
xor
mov
xor
mov
xchg
sub
fildll
out
ljmp
pop
cmp
adc
pop
cmp
jmp
push
lods
daa
mov
xchg
jp
or
mov
mov
push
rorl
sub
jo
pop
jp
inc
or
negb
xchg
or
push
mov
mov
insb
mov
imul
push
outsb
bound
ja
in
add
sbb
fsubl
sbb
test
test
or
push
fmul
mov
fidivl
sbb
ficompl
cmp
jb
xchg
xchg
inc
fimull
and
or
ds
jo
mov
mov
std
and
cmpsl
mov
jb
pop
sub
inc
mov
inc
mov
push
add
pusha
cld
repnz
fmuls
shlb
pop
xor
aaa
rol
push
popf
xor
pop
inc
stos
push
mov
les
loope
test
add
xchg
idiv
out
gs
cmp
outsb
dec
xor
es
lods
lock
dec
fdivl
jno
push
xlat
mov
pop
int3
jge
pop
xchg
mov
cwtl
xchg
pusha
std
dec
fwait
loop
pop
or
in
push
in
stos
fs
mov
aas
inc
pop
sub
aaa
cwtl
sbb
add
jb
mov
ljmp
sub
addr16
push
push
bound
rcr
fdivrs
xchg
push
jnp
mov
inc
idivb
mov
mov
popf
pop
stc
cmp
test
mov
and
repnz
xlat
fsubrs
mov
movsl
imul
sahf
cmp
scas
sarb
xchg
dec
lods
popf
push
mov
mov
jle
lea
xchg
or
xchg
jns
sub
add
insl
inc
cmpsl
jecxz
adc
jbe
popa
cld
and
xchg
cmp
andb
sub
repz
add
jp
loopne
xchg
dec
cltd
stos
std
mov
insb
repnz
popf
dec
ret
clc
fcmovne
mov
xchg
js
je
aas
ret
sbb
sbb
sub
mov
cmp
out
push
stos
fwait
les
lods
mov
add
gs
mov
xlat
ljmp
cld
and
jp
in
jo
sbb
out
sbb
mov
mov
xchg
push
mov
add
add
testb
add
imul
push
cmpsb
dec
xor
into
or
sahf
in
cmp
add
in
fwait
scas
insb
ss
je
pop
shlb
mov
add
cmp
testl
aam
dec
das
push
sbb
mov
jg
lods
mov
pop
adc
push
mov
hlt
pop
out
jge
in
and
popf
divb
push
insb
mov
cmp
xchg
ret
in
into
lock
jo
loope
outsl
and
mov
push
jmp
incl
mov
dec
in
ret
pop
loope
xchg
and
mov
inc
dec
push
mov
cmpsb
sub
jl
adc
xchg
dec
cmp
cmc
arpl
or
call
pop
addr16
pop
or
dec
gs
test
out
cmc
xor
add
push
mov
sub
sub
or
fs
add
sbb
push
pop
adcl
sub
fiadds
mov
pop
inc
inc
cmpsl
inc
jno
add
inc
xchg
loopne
sti
add
or
cmpsl
outsl
mul
cmp
clc
jb
cmp
push
fcmovnu
lcall
jge
jns
push
sti
jno
or
add
jge
sub
xchg
movups
push
pusha
jne
loopne
xlat
cmp
adcb
imulb
pop
and
xchg
xor
rcl
mov
lret
jl
cmp
push
rcll
ret
shrb
cmp
lea
or
sbb
js
loopne
pop
insl
repz
pop
aas
cmp
mov
dec
pop
loope
pop
sub
sbb
adc
mov
add
jecxz
das
data16
out
ret
sbb
push
pop
mov
jne
push
pusha
push
ret
fsub
jecxz
and
ret
add
pop
add
out
movsb
cmp
aas
lret
dec
imul
mov
lcall
adc
faddl
pop
push
add
push
sbb
jp
mov
fwait
dec
inc
add
inc
xchg
push
dec
lds
and
xchg
outsb
fnstsw
sbb
imul
inc
fdivs
or
push
scas
xor
les
cltd
movsl
aam
outsl
lods
jns
xchg
cmpsl
hlt
in
push
ljmp
mov
push
adc
sahf
cld
fsubrs
push
lcall
out
mov
imul
sub
jge
negb
adc
add
push
aam
mov
jecxz
dec
shll
push
jg
ja
cltd
pop
mov
data16
mov
aas
xchg
mov
cwtl
jb
xor
sbb
mov
mov
ja
xor
push
inc
fisttpll
data16
imul
mov
das
cmpsl
push
sbb
mov
arpl
les
ficompl
icebp
mov
icebp
mov
cmp
in
aaa
jecxz
mov
mov
dec
cmp
push
cmp
pop
adc
mov
mov
adc
rcrl
js
cmpsb
fiaddl
xchg
hlt
adcl
fiaddl
inc
iret
popa
cmpl
out
fwait
popl
pop
push
sarb
cmp
dec
cmc
cmp
ret
leave
jg
mov
loope
pop
mov
cltd
xchg
repnz
mov
cmp
sbb
cmpsl
pop
fnstcw
and
lods
jno
add
test
pop
add
mov
lret
xor
les
jmp
add
mov
icebp
frstor
sub
adc
mov
and
xor
mov
aas
xor
mov
test
loop
rclb
mov
leave
mov
inc
xor
or
ljmp
ljmp
mov
outsl
pop
cmp
fsts
xor
repz
out
cmpsb
jmp
pop
jbe
jnp
rorb
adc
out
into
jnp
ja
ja
scas
lds
mov
pushf
dec
cmc
jg
cmp
test
lcall
aam
out
lret
pop
jnp
stos
outsl
inc
arpl
std
lcall
loop
mov
push
dec
gs
fcoml
jbe
mov
roll
shlb
aaa
ds
pop
dec
stos
sub
fwait
sbbl
fcoml
sub
push
mov
sbb
push
bound
repnz
dec
mov
lds
daa
jg
int
mov
mov
sbb
sbb
push
mov
jno
fst
sar
mov
inc
iret
movsb
push
cld
xchg
or
sub
cmp
mov
ficomps
insl
push
call
iret
cmp
xchg
test
or
push
sbb
inc
stos
orl
sbb
and
mov
and
rclb
adc
adc
dec
ret
jmp
nop
and
pop
xchg
cli
jmp
dec
jmp
mov
xchg
fwait
and
add
pop
repnz
fistl
out
mov
sahf
fnstsw
das
stc
hlt
into
je
mov
lods
jbe
mov
xlat
push
fisttps
sbb
stos
push
popa
inc
daa
lret
in
pop
add
sub
push
or
loopne
mov
jnp
cmp
lods
add
paddusb
rcr
inc
cmc
aam
pop
push
push
data16
enter
push
std
adc
lods
test
sub
popa
xchg
jbe
and
inc
cmc
sub
dec
fbstp
outsl
push
cli
jmp
mov
mov
xor
fcompl
sub
cld
dec
xorl
and
dec
lods
pushf
mov
dec
les
or
bound
pop
dec
mov
mov
inc
lcall
inc
mov
out
fsubr
das
mov
mov
lds
xchg
xlat
or
jo
rorb
adc
sbb
push
mov
lds
or
sub
imul
addr16
insl
rcrl
or
imul
std
cmp
jnp
imulb
ljmp
aam
xchg
lea
iret
sub
adc
repnz
arpl
or
pop
xor
and
cmpsb
mov
xor
jae
sbb
bound
add
push
out
adcb
cmp
loop
sbb
clc
aad
mov
jge
sbb
lds
add
stos
js
push
and
mov
jnp
xchg
sbb
jno
outsl
mov
sub
jae
or
sub
sbb
std
push
mov
daa
mov
ret
jne
xchg
cli
inc
insb
or
andb
mov
add
xor
add
faddl
and
or
or
fs
in
clc
jo
scas
mov
ret
out
cmp
in
pop
repz
cmp
and
mov
aaa
inc
xor
pop
ja
push
lock
enter
lahf
icebp
imul
in
mov
in
test
add
repz
cmp
outsl
pop
fucomp
and
push
and
lods
mov
mov
inc
out
inc
push
outsb
pop
or
dec
fsubl
jnp
and
jmp
xorl
dec
or
mov
fsts
into
and
dec
je
daa
das
cmp
popa
faddl
and
scas
icebp
ja
lds
xchg
sbb
mov
xchg
lods
fstpl
int3
cltd
pop
movl
insl
enter
leave
jmp
enter
lds
pop
inc
jno
xchg
std
dec
jp
xlat
in
scas
sahf
pop
sbb
xchg
adc
ret
dec
inc
mov
in
js
adc
sbb
gs
lods
and
cmpl
cmp
ss
arpl
pop
mov
pop
xor
add
out
dec
ret
mov
or
and
ret
mov
fimull
mov
subl
pusha
subl
jno
pop
cmc
pop
out
repz
test
daa
out
and
mov
out
les
xchg
inc
aaa
dec
or
mov
inc
and
movsb
data16
mov
int
test
por
pusha
xchg
test
push
mov
pop
push
jnp
mov
lods
addr16
cmp
xchg
xor
insl
mov
out
lret
addr16
mov
add
repz
sub
push
loop
sub
xor
cmp
ljmp
bsf
hlt
sub
lea
sub
js
dec
ret
hlt
test
inc
mov
or
in
insb
mov
adc
loop
popf
mov
mov
sbb
sbb
sub
rol
stos
ror
mov
jp
or
push
cmpsl
rcrb
mov
push
in
roll
cmp
cmpsb
cmp
lods
cmp
lods
ljmp
arpl
push
lahf
push
jb
mov
arpl
xor
xchg
pop
lahf
in
pop
fsubr
aaa
fisubl
pop
sarl
mov
loopne
mov
sbb
mov
imulb
pop
xchg
jl
sbb
jg
arpl
and
xchg
les
pop
jo
mov
jmp
mov
cmpsl
add
fistpll
lock
inc
std
mov
push
popa
daa
adc
mov
aad
cmc
fildll
in
sub
push
in
jge
aam
mov
adc
aas
mov
nop
cmp
adc
je
data16
xchg
and
fwait
and
imul
sub
pop
inc
and
jns
xchg
call
pop
in
pusha
pusha
nop
push
xlat
push
pushl
fidivrs
adc
fildl
fwait
ret
adc
xlat
adc
into
stc
lea
xor
jb
add
cmc
imul
jmp
lret
add
xchg
mov
cmpsl
arpl
rcl
xchg
pop
shll
mov
sti
xlat
lahf
test
cmpb
js
sbb
add
push
sti
sbb
cltd
pop
stos
aad
pop
cwtl
push
pop
imul
jg
fistpll
leave
mov
push
loopne
lds
mov
ds
lahf
pop
inc
test
ds
or
jb
inc
cmp
or
inc
add
enter
pop
xlat
stos
mov
stos
mov
dec
push
lock
enter
pop
sbb
shll
shlb
cmp
fisttpl
in
inc
mov
test
mov
cmpb
inc
repz
in
xchg
aam
mov
push
mov
mov
inc
pand
mov
leave
scas
xor
xchg
aad
pusha
or
cmp
lds
lret
jno
adc
aad
jmp
stc
adcb
pop
pop
cmp
aad
rolb
push
repz
fcomip
mov
test
fnstcw
roll
es
clc
cmp
repnz
cltd
xor
jno
pop
add
std
popa
dec
jb
std
xlat
push
ret
sbb
mov
mov
lea
daa
xor
xchg
mov
insb
sbb
inc
ds
dec
cmp
out
dec
add
jecxz
jle
jl
adc
mov
inc
sarb
or
or
lea
pusha
push
gs
dec
cmc
pop
pop
or
and
xchg
mov
mov
psrlw
loope
sbb
jle
lock
inc
stos
loope
sbb
xor
add
dec
jae
add
outsl
push
out
jmp
int3
or
fisubrl
js
call
sbb
and
mov
add
xor
mov
mov
add
dec
mov
adc
mov
dec
insl
cmp
lret
lock
bound
fs
fbstp
iret
movl
cwtl
adc
xchg
cs
bound
stc
xor
clc
push
mov
ficoms
sbb
lods
outsb
stc
dec
xchg
dec
imul
pop
pop
rdpmc
xchg
sbb
mov
jb
enter
fisttps
aam
mov
jb
cmp
xchg
dec
jle
fidivrl
outsl
scas
insb
pop
fwait
loopne
fs
mov
cmp
sti
fstl
add
and
imul
addr16
lock
fs
andnps
xor
jge
out
cmp
mov
push
xor
inc
or
fwait
push
scas
lea
jb
subb
lret
xlat
push
mov
or
adc
cmpsb
mov
repz
movnti
cmp
push
testl
push
in
sbb
pop
popf
sub
out
jo
fdivrs
mov
mov
insl
test
mov
xchg
mov
test
bound
xor
rcll
lret
stos
push
xor
shlb
sub
pop
mov
or
out
mov
jne
mov
and
clc
jge
jne
sbb
aam
dec
out
jnp
mov
mov
cmp
enter
xchg
int3
pop
xor
sbb
xchg
cs
popf
xor
add
push
mov
mov
rorl
dec
xchg
ret
addr16
insl
jns
sub
movsl
and
add
xchg
fbld
mov
inc
sahf
mov
or
call
jno
out
cmp
jb
int3
fimull
push
sub
fsubrp
jge
fistpl
shrb
jmp
or
cld
sub
mov
mov
jnp
fldl
fs
or
xchg
mov
repnz
push
inc
xchg
sub
pop
xchg
inc
push
mov
add
mov
adc
add
repnz
sub
stc
shll
cmp
ljmp
cld
mov
imul
fnstsw
jp
lods
jecxz
loope
mov
loopne
xchg
clc
fistps
fsubrs
xor
pop
out
or
repz
add
fwait
jmp
xlat
sbb
shl
and
jp
idiv
outsb
or
adc
cmp
adc
jo
dec
das
dec
scas
das
mov
scas
incl
sub
xor
sub
mov
pop
sub
testb
insl
pushl
test
xchg
pusha
out
push
test
dec
imul
inc
imul
fmull
pop
dec
pop
jge
pop
fmul
or
jmp
push
aam
ret
xchg
or
push
imul
fimuls
inc
mov
lcall
hlt
sbb
and
push
inc
stos
iret
gs
jg
mov
mov
test
lods
clc
out
std
jge
stc
repnz
mov
repnz
sahf
fistpll
dec
loopne
clc
sbb
mov
inc
jg
cmp
and
ds
out
into
out
gs
mov
ljmp
mov
push
jb
scas
addr16
mov
inc
xchg
je
fstps
mov
mov
xchg
mov
cmp
in
movsb
push
and
xchg
test
push
lock
pop
repz
je
fs
xor
test
adc
popf
dec
insl
pop
fs
mov
sbb
or
fdivrl
inc
xchg
mov
push
aad
jne
mov
push
test
xor
test
loop
jmp
add
dec
xchg
mov
xor
adc
jmp
out
pop
mov
mov
dec
xchg
gs
sbb
mov
sub
sub
xor
adc
inc
dec
sti
pop
xchg
mov
pusha
jp
xchg
and
inc
add
mov
mov
test
daa
outsl
sbb
ret
inc
add
nop
mov
sbb
addr16
cmp
stos
dec
lret
stos
aaa
push
inc
icebp
xchg
jae
fsubr
insb
int
cli
mov
je
sbb
sub
and
fisttpll
mov
fs
pop
mov
pop
mov
cld
xchg
das
dec
aas
jb
mov
mov
push
xchg
xor
pusha
xor
jge
int3
mov
add
push
ljmp
icebp
ficoml
dec
cli
shr
or
add
dec
inc
je
aaa
pop
xchg
ds
loope
inc
adc
xor
out
scas
cmp
iret
test
and
iret
jb
xchg
pop
cmp
jecxz
mov
sbb
dec
and
cltd
mov
push
movsl
mov
outsl
xchg
roll
mov
fbld
adc
sbb
divb
lcall
jecxz
xor
push
jmp
in
scas
daa
xor
pop
mov
lcall
add
mov
jo
jge
xchg
add
dec
jo
jmp
arpl
add
insl
std
mov
data16
mov
clc
imul
push
jge
fistpll
and
xchg
dec
bound
pusha
pop
es
xchg
add
in
pop
jno
push
adc
cmp
cmp
push
fwait
test
fidivl
stos
in
mov
mov
enter
or
mov
mov
jl
lods
sarl
mov
xor
test
cs
bound
lods
ret
cmp
sti
jno
push
ret
xor
add
imul
mov
fs
test
xor
ret
dec
je
push
jo
xor
cmp
push
xchg
in
xchg
test
inc
mov
lret
pop
pop
mov
jae
jecxz
adc
mov
jg
lahf
cmp
jp
lret
sbb
mov
ja
jge
or
dec
or
lahf
lods
shl
ss
adc
ljmp
fistpll
stos
shrb
aaa
jo
call
dec
xchg
sbb
imul
in
enter
push
add
mov
into
pop
mov
cmp
xchg
loopne
sub
dec
or
imul
or
mov
js
inc
push
stos
jns
cmpsl
cmp
xlat
stc
imul
pop
lods
mov
xchg
jg
jge
xor
mov
pop
frstor
and
mov
cld
aam
push
loop
popa
cmpsl
and
push
jge
add
jae
call
xchg
lods
push
cmp
std
ror
dec
fstpt
aaa
into
pop
push
add
pop
fldcw
xor
or
mov
and
jbe
jmp
add
lret
lret
dec
in
into
inc
push
pop
pop
ss
xchg
repz
ds
mull
negl
iret
jmp
fdivr
les
enter
ljmp
out
dec
dec
outsl
mov
inc
mov
jge
inc
inc
dec
cmp
repz
and
sub
lods
call
fldenv
push
mov
pop
fistpll
mov
fs
inc
jmp
xchg
in
add
mov
push
aaa
push
xlat
stos
jnp
aad
inc
pop
popf
xchg
insl
jb
lods
xchg
inc
adc
enter
insl
jg
stc
mov
add
and
mov
idivl
cmp
inc
sub
xchg
push
aas
mov
ss
add
movsl
xor
fistpl
mov
jp
adc
xor
xchg
pop
mov
sbb
mov
jg
xchg
ljmp
mov
mov
mov
mov
mov
sbb
push
add
js
outsb
mov
or
push
push
in
sub
test
lret
add
pop
dec
movsb
mov
pop
mov
and
and
xchg
int
push
mov
mov
stos
xchg
lcall
cmp
sbb
out
inc
inc
lcall
jmp
ror
xor
cmovbe
and
mov
pushf
rclb
and
mov
ret
lock
movsl
repnz
inc
sbb
dec
jno
push
shll
adc
daa
leave
pop
mov
sub
lahf
cmp
lahf
push
popa
push
aam
pop
ret
in
adc
pop
fidivrs
clc
dec
push
mov
lret
in
xchg
xlat
in
xchg
movsb
sbb
inc
imul
mov
pushf
jo
and
pusha
push
jg
shll
in
cmp
inc
icebp
adc
and
pop
stc
mov
fidivl
xchg
lock
pop
cmp
pop
lret
pop
adc
push
cmp
stos
shl
bound
jbe
or
cld
push
fidivs
xor
inc
push
push
mull
in
les
dec
in
jmp
dec
mov
insl
fwait
add
push
dec
inc
and
flds
or
das
xchg
pop
mov
repnz
lret
sarl
imul
jbe
je
dec
decb
std
jbe
cmp
adc
lcall
and
push
inc
lret
dec
pop
add
ficomps
enter
sbb
loopne
adc
jle
sbb
gs
nop
fsub
adc
jp
lret
pop
xlat
or
cmpsb
es
sub
ret
mov
in
pop
push
enter
add
cmpsl
sbb
xor
test
sub
fisubs
sub
cmpsl
adc
jno
out
sub
xchg
pop
or
sub
aad
lret
xor
dec
arpl
adc
or
push
cmpsl
andb
cmp
bound
rcrb
cs
int
cmp
push
mov
xchg
push
inc
adc
rclb
aas
mov
int
xchg
xchg
xchg
add
mov
sub
fsts
pop
addr16
imul
jbe
mov
dec
data16
lds
sarb
fmulp
fidivs
stos
jnp
xchg
loope
aad
push
xchg
ss
xorb
aaa
gs
ljmp
mov
iret
mov
lret
insb
cli
sbb
lcall
jge
pop
sub
ja
jge
pop
popf
sahf
sbb
incb
inc
jae
jp
in
sti
add
mov
out
mov
movsl
fcompl
jg
pop
cltd
sub
addr16
ret
in
imul
bound
jae
sbb
dec
or
clc
or
push
push
scas
sub
out
jge
add
fisubs
push
jno
jns
lea
data16
mov
cmp
in
xchg
dec
jmp
int
adc
xor
pop
jle
call
test
inc
and
push
inc
xor
fwait
xchg
adc
out
call
cmp
outsl
je
jae
push
inc
xchg
mov
sbb
xchg
mov
daa
mov
adc
and
adc
add
stos
pop
lret
in
inc
inc
xor
ss
adc
mov
add
adc
mov
movb
jle
jo
loop
divl
mov
int
aam
mov
inc
dec
xchg
ret
cmp
mov
sti
test
jmp
xor
and
iret
dec
push
xor
sub
push
jnp
mov
or
aam
pop
iret
xchg
xchg
pop
in
lret
xor
jmp
cld
cld
xorl
stos
mov
gs
pop
jl
xchg
arpl
mov
pop
jmp
add
fidivrl
enter
sub
int
js
mov
mov
dec
mov
clc
iret
les
movsl
lea
xchg
add
jbe
cmp
inc
add
das
cld
icebp
orb
insl
jae
xlat
dec
loope
loop
jo
sub
fsts
mov
xchg
mov
mov
das
and
inc
lods
push
jl
in
imul
repz
leave
loop
testb
call
out
mulb
nop
jp
in
daa
cmp
and
pop
jmp
outsl
jbe
dec
std
lcall
mov
adc
out
ljmp
mov
test
movsl
rolb
fwait
das
stc
inc
cmp
xor
mov
sub
jo
or
loopne
jo
je
fstl
pop
pop
mov
insl
cmp
testb
dec
pop
mov
lahf
stc
cmp
ret
fcompl
xor
inc
cmpsl
jecxz
dec
leave
cmp
sbb
add
push
sbb
loope
and
mov
mov
in
iret
xchg
int
jns
scas
ja
es
int
sbb
cmp
xchg
jmp
pop
scas
mov
cmp
cmpsb
out
lods
insb
mov
jae
stos
pop
fs
xchg
fiadds
jle
add
add
icebp
jae
push
cltd
shr
inc
pop
xor
or
hlt
lds
nop
mov
xchg
jle
cmpsb
jp
pop
dec
lock
mov
mov
jl
test
sbb
fistpl
stc
adc
or
inc
sbb
mov
rcrb
or
dec
aas
mov
cld
xchg
push
or
mov
mov
pop
lods
movsl
stos
push
jg
cmp
scas
inc
cmc
and
stc
adcb
ror
pusha
mov
pop
pop
sti
xor
seto
adc
and
out
mov
pop
xchg
insl
or
les
daa
push
repnz
enter
dec
xchg
dec
jb
arpl
cmp
add
pop
in
das
pushf
dec
mov
pusha
xor
adc
out
pusha
push
imul
jp
bound
out
push
test
mov
mov
mov
je
mov
cli
frstor
xchg
into
jo
and
ret
rcrb
mov
sbb
into
test
jge
fistpll
lods
pop
movb
sub
xchg
sbb
mov
push
aam
inc
rcrl
mov
sbb
cmpsl
mov
cmpsb
mov
lea
xchg
in
ljmp
pusha
clc
push
fcoms
push
ss
gs
lret
pop
sbb
pop
jbe
inc
mov
xor
xor
push
xor
inc
imul
cmc
push
stc
inc
push
hlt
dec
fcmovnbe
inc
addr16
cmpsl
sub
mov
les
or
push
dec
cmp
push
fcmovnu
call
cli
xchg
pop
cmp
fiaddl
aad
mov
popa
repnz
push
inc
test
sub
lds
insb
or
adc
mov
pop
into
sub
outsl
lds
inc
jno
or
lea
pop
xchg
lods
dec
call
ljmp
xchg
add
test
push
cmp
rolb
shll
inc
and
in
clc
mov
pop
xor
dec
mov
icebp
fistps
or
pop
hlt
add
sub
ds
sbb
and
and
cmpsl
mov
insl
rorb
inc
movsl
sbb
in
lcall
xor
mov
ficompl
out
cmp
cmp
idivb
cmp
cmovs
push
mov
mov
sub
fistl
cmp
mov
int
adc
out
int3
les
fldcw
bound
es
jmp
add
or
mov
imul
out
int3
pushl
je
pcmpeqb
xchg
pusha
or
outsb
adc
dec
inc
push
jnp
pop
jo
xor
adc
lret
adc
lea
ss
roll
cmp
pushf
inc
aaa
sbb
pop
stos
jg
outsl
lret
mul
mov
dec
test
xchg
push
xor
adc
lods
dec
dec
adc
mov
and
cmp
loope
sbb
inc
iret
ljmp
jns
mov
cmp
or
mov
sbb
and
push
inc
add
mov
xchg
jns
loop
cmp
repnz
stos
orb
inc
faddl
sbb
pop
mov
xchg
add
mov
pop
loop
dec
imul
cltd
out
lcall
popa
jp
std
dec
push
sub
ret
cs
cs
xchg
mov
jmp
jb
dec
mov
cmpsl
imul
or
shr
fidivs
out
fsqrt
push
dec
notb
and
loopne
xchg
xor
lea
insl
cmp
inc
repnz
shll
lretw
hlt
pop
les
push
stos
stos
sub
aaa
pop
jmp
dec
popf
cmpsb
fwait
mov
repnz
mov
or
lods
fcmovnb
mov
and
and
sarl
sub
jp
pusha
int3
cmp
inc
ds
add
mov
in
in
mov
add
adc
inc
push
pop
mov
icebp
pop
pop
xchg
push
or
scas
mov
pushf
mov
cli
dec
lret
js
loopne
imul
inc
fimull
dec
sub
in
push
push
xchg
jge
pop
dec
rcrl
mov
scas
xchg
pop
lea
mov
test
mov
fadd
xor
or
dec
in
push
jecxz
sbb
cmpsb
pop
adc
pop
add
fs
push
add
lret
lea
jge
jl
lds
mov
movsb
dec
lahf
push
jl
push
test
and
aam
jl
adc
pop
jnp
pop
dec
lret
outsl
shlb
es
xchg
aam
les
out
ss
enter
adc
insb
push
fisubrl
inc
scas
pop
test
fadd
jecxz
jle
shlb
sub
cwtl
ret
xchg
gs
pop
push
adc
test
cltd
adc
iret
ja
and
in
inc
and
ret
xchg
and
nop
int3
sub
cmc
in
lods
fcomp
out
pop
test
pushf
popa
push
loop,pt
mov
inc
call
jb
fcmovnu
sub
aaa
cli
sub
stos
adc
test
jno
sbb
xchg
mov
iret
xchg
xchg
sbb
and
mov
fsts
sarb
lret
xor
lock
and
stc
fucomip
mov
lret
stc
icebp
cmc
dec
rorl
pop
das
add
cmp
pop
mov
jbe
mov
pusha
ret
xchg
or
mov
xor
in
iret
pop
mov
rorl
pop
pop
adc
out
arpl
lret
sbb
dec
and
mov
std
push
mov
leave
cmp
call
jne
fnsave
mov
xchg
mov
movsb
ja
cld
pop
push
push
push
decb
ja
cltd
xchg
cwtl
insl
repz
pop
bound
out
out
cmp
pushf
insl
mov
std
lahf
adc
push
repnz
jno
xor
in
ret
pop
sbb
xor
dec
mov
lret
jge
dec
addr16
bound
adc
fs
mov
cld
aam
xor
push
cltd
and
cmp
cltd
inc
xchg
pop
add
hlt
inc
pop
stos
cmpsb
dec
mov
and
out
push
pop
push
sahf
push
in
les
pop
pop
loope
cmp
fcmovnu
mov
je
into
inc
and
dec
mov
lods
shr
aad
fs
orb
jmp
or
insl
movb
fldenv
fbstp
imul
aaa
add
adc
ja
or
dec
neg
je
aas
dec
test
xor
xor
notb
cmp
out
inc
mov
rcll
cmp
xor
jo
adc
or
adc
sbb
pop
fwait
scas
or
inc
lret
ror
mov
lds
in
and
xchg
xchg
dec
in
movsb
dec
xor
cld
mov
dec
hlt
rcl
outsb
cli
cld
jb
inc
pop
mov
jmp
or
leave
daa
lds
lcall
int3
stos
jge
outsb
icebp
inc
out
jl
lret
sbb
outsl
mov
inc
mov
pop
add
not
loop
xchg
push
aas
bound
fidivl
ret
jae
pop
clc
xchg
inc
test
adc
shlb
cltd
and
mov
dec
push
sub
adc
push
adc
add
leave
push
mov
cs
sbb
movsb
ljmp
jb
test
ret
jg
and
out
imull
adc
pop
jno
push
gs
shl
mov
adc
add
pop
inc
cmc
adc
jno
ljmp
ss
mov
sti
ljmp
mov
mov
lret
lods
rdtsc
roll
xor
add
dec
pop
lods
or
xchg
or
or
adc
xor
in
pop
nop
rcrl
idiv
add
cmp
push
out
push
ds
iret
and
jo
jp
fwait
mov
mov
hlt
and
push
xchg
daa
imul
rol
add
xor
and
out
xchg
ret
cltd
sbb
inc
es
sbb
dec
nop
push
insl
lret
xlat
into
push
jae
pop
sahf
pop
imul
pushf
mov
rorl
cmp
shlb
clc
add
mov
jae
stc
inc
pop
push
and
pop
dec
jae
sbb
push
outsl
rorb
fsub
dec
push
jb
dec
repnz
shll
movsb
and
clc
out
repnz
les
adc
mov
mov
jne
shlb
lods
fcmovb
add
lcall
loopne
sarb
in
mov
push
add
fnstcw
cmpsb
mov
insl
imul
data16
xor
sub
dec
les
flds
xor
dec
mov
int3
jne
cltd
fildll
pop
sub
arpl
ds
mov
and
das
add
bound
hlt
cmc
sub
addr16
daa
movsb
adc
mov
or
ljmp
pushf
lea
mov
call
xchg
fistl
jno
add
test
leave
pop
ror
xchg
jns
lods
popf
loopne
ljmp
popf
xor
sub
add
add
push
mov
push
imul
sub
fcomps
jbe
adc
bound
cmc
push
arpl
jp
je
sub
divb
xor
leave
rcll
ja
lods
and
faddl
pop
mov
push
xor
decl
shlb
ja
mov
push
icebp
xchg
sub
lods
outsb
test
ljmp
int3
push
dec
out
insb
ret
xlat
mov
adc
dec
dec
aas
out
shlb
lds
fiaddl
jmp
fnstcw
es
and
add
stos
push
idivl
inc
jl
inc
jbe
jge
jmp
adc
cld
fwait
xchg
or
sti
push
jecxz
clc
ret
cmpsb
arpl
mov
je
aam
fwait
lcall
shrb
dec
arpl
push
mov
push
xor
xchg
adc
jg
ljmp
sub
fwait
jg
add
xor
sbb
fcompl
repnz
mov
adcl
cmpsl
add
adc
aaa
push
or
mov
js
mov
fistps
or
subl
cmp
adc
mov
lret
pop
adc
pop
jae
rclb
mov
leave
pop
push
je
ja
dec
cs
rorl
pop
rorb
mov
in
cmp
daa
jae
sbb
push
pushf
and
jne
push
and
shlb
inc
std
or
ret
pop
inc
shlb
xchg
pop
sub
or
hlt
mov
inc
leave
iret
cmp
pop
andb
push
lahf
jmp
std
jmp
push
sbb
pushf
je
mov
nop
mov
inc
push
test
stos
lods
add
insl
adc
xchg
adc
dec
add
les
xor
fmul
mov
roll
insl
mov
cwtl
negb
in
ss
sti
push
cs
adc
pop
addr16
inc
and
mov
pop
cmp
xor
xchg
sbb
mov
dec
sub
jno
shll
test
sub
xor
or
scas
sub
mov
inc
scas
out
add
mov
pop
shll
out
lods
mov
imul
mov
fmuls
xchg
sbb
data16
test
cld
iret
xor
in
push
icebp
aas
sbb
mov
stc
decl
addr16
fcomps
pop
arpl
sbb
subl
jae
mov
or
push
or
xchg
lret
movsb
das
xchg
popf
sbb
sub
jb
in
or
ds
xchg
mov
xlat
push
cwtl
movsl
sbb
lods
jg
mov
dec
pop
stc
xchg
push
imulb
inc
scas
and
mov
es
jge
in
pop
subl
aad
cmp
das
push
arpl
shrb
mov
outsb
or
inc
in
pusha
aam
ljmp
popa
test
popf
idivl
push
push
or
mov
ret
jmp
movsb
pop
pop
hlt
jae
dec
mov
shll
push
push
ja
andb
mov
or
cli
xlat
in
fnsave
sarl
in
rcrl
ret
push
les
shrb
out
lret
jbe
idivl
fdivrl
movsb
fcoml
lahf
xor
jno
or
adc
cli
jle
in
loop
mov
aam
jb
in
pop
mov
notb
ret
out
jno
cltd
and
xor
push
inc
cwtl
lds
mov
jae
mov
inc
mov
into
aad
lahf
cmp
and
and
fisttps
adc
inc
cwtl
xor
sbb
fsub
inc
lods
lods
outsl
nop
sbb
xor
int3
jns
lock
cmp
jno
sub
sti
pop
lcall
pop
add
in
bnd
fcoms
imul
aad
adc
aam
mov
lds
push
into
mov
jp
jae
inc
aaa
add
mov
adc
ja
push
push
sbb
cld
shrl
add
jmp
incl
stos
mov
rcll
in
shr
jle
sub
mov
in
loope
xchg
adc
test
xchg
add
sti
cmpsb
jp
pop
xor
jb
xchg
jge
mov
adc
flds
xchg
push
imul
inc
lds
mov
sub
adc
push
push
pop
cwtl
andb
pop
les
lret
inc
mov
sti
call
cld
aas
mov
lods
fisttpll
stos
scas
nop
dec
data16
testl
push
dec
adc
leave
orl
enter
cmpsb
xchg
scas
or
fsubrs
test
pop
insl
inc
xchg
pushf
gs
mov
xchg
jns
sbb
inc
inc
xchg
outsb
jl
jb
add
jle
inc
jno
sbb
mov
and
mov
jne
lods
lds
sarb
push
fwait
cld
mov
loope
adcl
jmp
adc
or
stos
testb
push
je
stos
cmc
jg
inc
or
js
pop
inc
dec
push
adc
cmp
out
sub
aaa
mov
lret
std
push
test
fldl2t
dec
clc
xlat
sti
sub
xor
pop
mov
or
lods
sbb
dec
dec
ret
je
push
sub
imul
pop
imul
div
sbb
mov
pop
jmp
cmpsb
and
gs
fnstsw
xchg
ljmp
repnz
daa
mov
sub
pusha
insl
lods
push
adc
sbb
dec
out
dec
sahf
in
pusha
pop
sbb
mov
mov
push
int
out
dec
outsl
and
cltd
dec
stos
lods
sbb
and
xchg
add
push
push
fnstsw
mov
fwait
xchg
mov
into
ret
push
mov
and
mov
pop
subps
mov
mov
jae,pn
notl
jne
dec
pop
cmp
and
aad
jo
out
dec
aas
adcl
lret
leave
clc
jmp
dec
test
mov
pushf
pop
cli
movsl
daa
xor
lock
das
loop
imul
andb
mov
push
push
cmp
mov
je
inc
aam
jno
aad
dec
mov
or
pop
jno
push
jae
push
cwtl
cmp
adc
sbb
test
pshufw
pop
lcall
dec
cli
dec
insl
rolb
push
pop
out
xor
push
scas
pop
add
mov
fwait
test
sbb
adc
sbb
loopne
imulb
jno
jnp
call
sbb
lcall
cmp
ss
scas
out
js
aad
imull
mov
mov
scas
rorl
mov
mov
cmc
push
sbb
cmp
xor
dec
lds
lcallw
sahf
pop
dec
mov
adc
add
pop
push
or
repnz
movsb
mov
sbb
or
lds
mov
cld
into
xchg
dec
iret
dec
das
stc
push
mov
andb
push
xchg
add
and
lahf
ja
mov
rclb
sbb
xor
int3
and
mov
jmp
sub
lahf
lods
mov
or
js
adc
cmpsb
fimull
or
mov
or
shrl
or
mov
cmpsb
ds
add
addr16
in
fadds
int3
insl
fisubs
mov
pop
gs
push
add
dec
pop
push
dec
sbb
xchg
bound
into
add
dec
push
pop
rcl
arpl
lds
ja
scas
sbbb
adc
loope
jge
mov
sti
popa
mov
sub
inc
add
mov
jb
mov
cld
je
scas
jns
push
jne
sub
xor
daa
or
setle
cld
jnp
in
out
popf
push
notb
sbb
in
in
mov
loop
mov
fmuls
add
test
push
dec
xchg
pop
insl
adcl
ljmp
fidivs
lds
or
dec
mov
pop
js
jmp
sbb
xchg
push
cs
in
mov
or
sbb
inc
gs
adc
pusha
ljmp
pop
inc
mov
mov
push
cmp
inc
pop
fsubp
sbb
js,pn
and
cwtl
fisttpll
mov
push
push
xchg
xchg
ja
adc
and
js
wrmsr
jbe
aas
pop
insl
notb
jg
mov
adc
mov
mov
mov
stc
fiadds
movsl
push
inc
popa
cmp
push
pusha
loop
push
fwait
in
jbe
adc
mov
and
pushf
lock
outsl
fwait
je
jmp
popf
inc
and
xor
push
jbe
mov
hlt
jno
je
insl
mov
ljmp
inc
lret
scas
sbb
cmp
int
dec
jno
or
ja
stos
adc
and
fsub
lds
xor
call
or
sti
out
cmp
add
into
movsb
cmp
xor
aaa
push
jmp
push
xor
lcall
jge
push
mov
inc
lock
pop
sub
sub
add
xchg
les
out
xor
imul
cld
call
rcrl
push
push
pop
in
das
lock
pop
fdivs
xlat
ret
outsl
jb
imul
inc
or
cmpsl
cmpsl
mov
out
adc
nop
add
dec
jl
sub
mov
ja
mov
mov
cltd
and
les
jne
push
lods
cmp
dec
cld
xchg
jo
ss
aam
loop
in
loope
clc
loope
mov
out
popa
and
push
add
xchg
insl
pop
daa
or
dec
push
pop
jg
pop
gs
dec
adc
jns
sub
fdivl
xlat
xchg
push
stos
or
xchg
gs
add
dec
jo
mov
pop
add
push
sub
lods
pop
mov
mov
mov
mov
sbb
jmp
stos
xchg
xchg
mov
inc
js
arpl
pop
test
mov
sub
ja
jb
std
xchg
test
pop
mov
mov
stos
xchg
sbb
ljmp
pop
jmp
test
add
cmp
and
jl
das
cltd
cmp
cmp
lcall
cmp
scas
setg
sbb
or
cmc
push
daa
pop
shlb
rol
movb
inc
mov
repnz
jp
xchg
cmp
fldt
add
or
cmp
jns
mov
mov
cmpb
dec
sbb
xchg
in
cltd
cmc
cs
out
int
sarl
lea
xchg
cwtl
xor
mov
incb
and
bound
cmovne
rcr
popa
dec
push
adc
xchg
scas
sbb
mov
inc
add
xor
push
push
les
xor
or
sbb
ret
cmp
cmc
mov
inc
mov
dec
lds
fistl
stos
in
dec
lods
or
xor
mov
xor
cld
xor
pop
stc
pop
mov
push
icebp
std
das
jge
dec
sub
and
dec
and
mov
push
js
movsl
pop
dec
pop
sbb
sub
jne
std
xchg
rcll
cltd
out
push
cwtl
dec
add
cltd
sub
out
cmovo
xchg
mov
dec
push
mov
jbe
lods
adc
out
mov
sti
idiv
fs
mov
aas
dec
test
fldcw
inc
mov
insb
je
leave
shrb
les
out
xchg
lret
xor
iret
and
icebp
ja
inc
repnz
mov
push
push
loope
mov
stc
cld
test
test
sbb
and
fsubrs
dec
lock
mov
movsl
and
fimuls
cmpb
mov
pop
add
fchs
jo
roll
pop
mov
pop
icebp
test
lcall
xchg
ds
loopne
ror
mov
hlt
mov
or
add
pop
hlt
mov
xchg
sub
ss
pop
scas
iret
xor
cmp
xchg
clc
ljmp
sbb
push
jns
jnp
js
dec
mov
jnp
je
adc
add
insb
adc
arpl
cmpsl
test
xchg
and
sahf
dec
pusha
add
aas
jecxz
lock
add
xchg
inc
dec
scas
hlt
mov
mov
sbb
popf
mov
jno
push
pop
negb
in
sub
mov
inc
lods
cmp
or
loope
shll
cmpsb
mov
xorb
dec
repz
fadds
rcrb
jns
orb
inc
sar
fcoms
dec
xor
jbe
fisubl
sub
mov
pop
pop
lods
movsb
pushf
in
cmc
sbb
pusha
mov
rol
insb
lods
adc
ret
mov
adc
inc
xor
push
and
mov
mov
mov
dec
xor
mov
mov
std
sbb
das
adc
ficomps
xor
aaa
add
mov
push
das
cld
jp
shrl
aaa
add
mov
sub
pop
fwait
mov
xor
arpl
pop
mov
test
sub
push
inc
imul
jecxz
push
rclb
loope
cld
sti
sti
xchg
mov
xchg
outsb
fs
out
cltd
pop
xchg
fsubrs
mov
pop
les
fsubrl
inc
jge
or
lods
sub
jno
xor
add
dec
iret
scas
mov
out
jnp
roll
movsb
loopne
adc
mov
jo
iret
lcall
lret
fcoms
push
push
loopne
mov
stc
test
lahf
dec
push
scas
mov
arpl
icebp
stos
leave
adc
mov
or
popf
mov
cmp
mov
gs
outsl
addr16
lock
sub
ss
mov
es
add
pop
mov
xchg
cmovo
push
mov
cmp
or
adcl
fsubrl
bound
loop
sub
das
inc
adc
test
stos
lcall
xchg
pop
pushw
filds
imul
and
jb
mov
lods
test
fcompl
jecxz
sbb
add
cmpsb
pop
repnz
mov
mov
pop
add
je
cld
popf
adc
jle
stc
add
pop
ja
jae
hlt
sbbb
mov
loopne
cmp
lahf
cltd
jbe
dec
fsubp
jns
sbb
sahf
add
lods
fisubrs
xor
jae
push
call
in
cmp
fs
ret
mov
dec
loop
mov
stos
subb
push
loopne
loope
sbb
hlt
mov
cmp
fs
jno
and
lds
ja
sub
sub
sahf
enter
push
movsl
roll
sub
addb
test
jmp
push
movsb
fstl
jge
dec
mov
cltd
cltd
aam
enter
add
mov
pop
mov
aam
xor
cld
push
jmp
add
vminpd
inc
lret
push
aad
enter
cmc
add
cld
fstl
loop
mov
aaa
out
ret
int
and
insl
adcl
pop
jo
test
dec
mov
push
loopne
add
rcll
cltd
insb
jne
jae
fisubs
inc
inc
lods
pop
cmpsb
sub
mov
lods
popf
cmp
imul
imul
stos
test
fstps
cmc
sub
ror
mov
adc
push
jns
subb
sbb
repz
pusha
cmp
sub
or
push
jl
daa
imul
lret
rclb
cmpsb
or
fistl
sub
xchg
sahf
popa
and
adc
scas
in
cli
iret
es
push
sub
xchg
out
pop
fucomip
pop
movsl
and
lods
das
rcrb
loope
jae
insl
popf
pop
xorl
pop
insl
mov
adc
mov
sahf
in
jge
mov
jbe
mov
rorl
xchg
loopne
dec
inc
sub
into
add
clc
sti
sub
push
shrb
xchg
and
scas
sti
or
inc
pop
pop
inc
dec
dec
inc
dec
pextrw
mov
lret
inc
imul
mov
sbb
mov
push
clc
ljmp
iret
jno
jbe
cmc
xor
mov
jmp
adc
pop
and
daa
rclb
mov
out
sbb
adc
ds
jo
push
mov
mov
lahf
loope
fs
jo
and
lcall
xor
iret
out
xor
push
ljmp
or
aaa
or
sub
addr16
push
cs
fistpll
int3
inc
pop
mov
test
orl
ficomps
jmp
rol
repnz
loope
jge
dec
js
and
loope
adc
loop
push
ret
jae
push
lock
test
xor
loope
fsubrs
mov
dec
insl
fs
pop
adc
add
jg
in
pop
out
adc
scas
push
add
jo
popf
shl
in
sub
int
data16
sub
stos
jl
into
push
mov
mov
es
sub
jl
push
xchg
out
push
push
mov
push
jge
mov
mov
fxch
stc
aaa
pop
jecxz
xchg
jl
sbb
loope
xor
mov
xor
add
cmp
jnp
sub
jge
cmp
xor
inc
rcl
lret
sub
inc
cs
sub
cmp
xlat
mulb
fildll
lahf
push
xor
ds
hlt
sbb
lcall
ficompl
xchg
mov
sbb
rorl
shlb
das
in
out
stos
push
push
imul
loopne
push
or
lea
mov
cmpl
mov
inc
inc
cmpsb
inc
adc
sbbl
push
pusha
in
dec
inc
mov
imul
cmp
ds
or
ds
mov
sbb
jb
mov
adc
mov
inc
popf
lea
mov
add
mov
int3
mov
outsb
xchg
test
mov
or
push
cmpsl
mov
adc
mov
mov
loopne
pop
pop
push
sbb
dec
add
fwait
add
push
dec
cmpl
iret
out
testl
xorl
cld
dec
in
test
lea
dec
inc
ds
jmp
stos
mov
outsl
mov
in
outsl
insb
mov
adc
mov
xchg
call
jnp
ljmp
cmc
std
xchg
adc
lahf
scas
ja
les
add
sub
out
sbb
movsl
xlat
repnz
mov
inc
xchg
push
out
mov
dec
ljmp
push
sub
ffreep
xchg
loop
jge
sahf
enter
pop
pop
out
adc
fcoml
push
adc
je
inc
les
repnz
fnstsw
xchg
scas
jg
pop
lret
jne
aam
iret
cmpsb
push
mov
idiv
mov
pop
jmp
jns
rolb
fildll
aam
jbe
imul
pop
mov
xchg
xor
rclb
repz
push
push
add
and
push
push
pop
cmp
and
aas
pop
mov
stos
and
push
or
out
rorl
nop
add
call
push
cmp
jns
jae
dec
aaa
ret
outsl
ret
add
push
out
xchg
test
repnz
inc
rorl
mov
mov
jnp
out
jb,pn
jne
cmp
sbb
fwait
jle
or
inc
out
pusha
lods
in
push
repz
repnz
ljmp
sbb
aam
jg
push
cs
push
adc
hlt
jb
cs
mov
stos
repnz
xchg
add
stos
mov
adc
clc
sahf
loope
cmp
xchg
jo
and
insb
shl
lods
cmp
fsubl
cmp
cmp
mov
inc
mov
daa
repnz
inc
jp
ds
xchg
mulb
push
xchg
test
xor
xor
out
cli
pushf
sbb
rclb
insl
xor
ja
jl
jnp
inc
xor
clc
jae
sahf
test
xchg
or
jo
clc
mov
std
mov
loop
pop
das
sub
repnz
stos
and
lahf
or
fs
outsb
into
ficomps
outsb
lock
insl
aas
cltd
stos
or
jle
dec
ds
jmp
dec
adc
arpl
sarb
push
stc
imul
aaa
xor
leave
cmp
shll
out
pop
aam
cmp
pop
das
push
out
push
adc
fdivrl
mov
xchg
xlat
pop
es
jmp
out
data16
inc
lods
push
dec
push
add
push
daa
cmpsl
push
fldcw
lahf
fiadds
cwtl
out
xchg
aas
xor
cltd
repz
lods
fnstcw
out
xor
loope
pushf
jbe
pop
and
push
shl
cmp
jmp
mov
stos
pop
nop/reserved
lcall
das
pop
or
mov
das
pop
loop
inc
jne
or
mov
add
lcall
adc
clc
pushf
inc
rorl
loope
xor
pop
mov
jge
xchg
pushf
test
pop
mov
sub
dec
sub
jne
sar
cmp
sub
mov
nop
mov
xchg
xchg
ljmp
int
adc
fwait
es
push
mov
pop
gs
sub
jo
lcall
outsb
xchg
jbe
xchg
cmp
daa
push
mov
outsb
jle
jge
jb
mov
or
or
call
cld
cltd
stc
jl
push
je
pop
add
cmpsb
idiv
xor
and
jp
imul
jns
lahf
inc
ja
or
and
and
mov
addb
pop
test
adc
pop
outsb
mov
push
push
or
adc
insl
sub
mov
adc
stos
lds
addb
cltd
and
lds
jecxz
test
jnp
enter
pop
fisttpl
dec
in
add
jno
movsl
cmpsl
jle
fsts
data16
loope
pop
and
rcrl
cmpsl
flds
pop
iret
pop
jge
notb
ror
pop
fisttps
sub
imul
mov
movsl
ljmp
hlt
ds
sub
imul
pop
sarl
stos
repz
loop
out
mov
add
imul
adc
mov
cmc
xorb
ljmp
jae
loop
pop
add
push
js
daa
cmp
mov
adc
jge
push
jge
pop
lret
ljmp
dec
mov
xchg
shr
xchg
in
pop
adc
mov
pop
bndstx
xchg
and
fmuls
xchg
popa
sub
in
sti
adc
add
push
sbb
popa
movsb
and
hlt
cmpb
gs
add
mov
jg
pop
or
aam
adc
shl
mov
test
lods
popf
rcll
adc
xor
mov
mov
and
mov
jb
push
adc
add
ret
nop
arpl
sbb
lods
push
xchg
sub
add
adc
sub
cmp
inc
jnp
inc
jg
mov
add
add
idivb
data16
gs
jae
in
lcall
adc
ljmp
cmp
sbb
mov
dec
and
xchg
push
repz
roll
rcll
jns
fldcw
and
in
out
adc
aam
sbb
loop
sub
enter
jb
rcrb
sub
fsubl
clc
push
mov
sahf
iret
fstps
pop
push
imul
fdivr
inc
jecxz
push
ret
fadd
sub
jae
mov
iret
ss
jno
adc
cs
sub
outsb
adc
push
gs
sub
ficoml
ljmp
inc
mov
adc
push
dec
mov
int
bound
cltd
mov
xchg
out
mov
sub
jl
add
adc
lcall
xchg
xor
push
test
mov
loop
call
es
xchg
sub
cmp
std
push
adc
mov
sbb
sbb
sub
dec
jbe
inc
mov
aas
and
xchg
xchg
in
and
cltd
mov
mov
push
xchg
sub
fsubp
leave
add
popf
test
dec
je
adc
fldcw
jbe
mov
sbb
jg
pop
repnz
ret
nop
sahf
pop
mov
shrl
iret
pop
mov
arpl
fisubl
adc
xor
fwait
add
xor
add
fsts
add
cmp
add
mov
add
push
sbb
sbb
mov
fsubrp
push
push
int3
cltd
sahf
mov
cmpsl
aaa
fwait
mov
in
jecxz
loopne
mov
jbe
ss
adc
jo,pt
js
xchg
les
mov
sbb
call
push
jmp
adc
fbstp
xchg
popa
pusha
outsl
cmp
xchg
mov
mov
mov
nop
mov
arpl
ss
jecxz
jo
add
cmp
inc
inc
pop
clc
and
lods
pop
jae
loop
jp
sbb
insb
dec
insl
hlt
insl
ss
jae
mov
pop
mov
shr
cs
lcall
std
push
and
cmp
aaa
addr16
fs
stos
mov
cmp
mov
cmp
jne
clc
ja
push
ret
inc
sub
repnz
sub
xchg
daa
mov
sbb
sbb
fldlg2
lds
jg
insl
and
dec
jno,pt
jg
cld
jnp
insl
or
mov
outsb
aas
divl
mov
faddl
pop
sub
daa
push
data16
mov
testl
xchg
pop
in
dec
mov
in
pushf
test
mov
xchg
scas
insb
jg
cmp
jge
insl
xchg
adc
push
arpl
repz
cmpsl
popf
mov
push
mov
pop
in
and
inc
pop
rcr
adc
popa
sub
outsl
rorb
mov
xchg
xor
jnp
push
arpl
ljmp
xchg
pop
loope
push
mov
mov
pop
movsb
dec
ja
pop
cmpsl
fnsave
loopne
jg
mov
push
aam
mov
xchg
daa
outsb
adc
jmp
xchg
xor
mov
out
pop
lahf
fsubrl
int3
jge
adc
int
xorl
sub
test
aaa
adc
or
sbbl
test
sub
lods
mov
sbbb
sbb
sbb
sbb
int
mov
cmpsl
sar
out
dec
mov
sub
loop
pop
loop
clc
ret
and
jo
or
mov
sbb
arpl
dec
dec
dec
jbe
aaa
dec
mov
cmc
das
cltd
mov
arpl
inc
in
sbb
cli
sbbb
dec
fidivrl
xchg
mov
ret
push
lahf
mov
das
iret
int
cmc
test
aas
mov
dec
xor
das
subb
les
or
loop
jl
in
jecxz
test
pop
in
inc
out
cli
and
sub
aaa
ret
inc
sub
fwait
xchg
popf
leave
xchg
lret
scas
gs
mov
pop
and
inc
lods
mov
sub
out
jnp
pop
mov
fisubrs
por
movsb
xchg
jle
pushf
in
test
push
andl
int
lods
or
push
stos
outsl
out
nop
pop
xor
cs
sub
outsl
inc
loop
pusha
mov
lods
sbb
sarl
les
gs
inc
jle
cmp
leave
cmove
xchg
cmp
push
leave
shrl
push
fs
and
scas
rcll
jmp
fdivl
aaa
fldt
std
in
mov
xor
fstps
stos
leave
jge
addr16
rcl
jb
cli
ret
fs
dec
mov
mov
and
inc
jl
mov
xor
mov
xchg
sbb
lods
dec
mov
push
cltd
sti
pop
fimuls
mov
mov
ret
cmp
lock
push
out
incb
sbb
sbb
movsl
lret
ret
cmp
int3
and
cld
jbe
into
popf
cmp
pop
in
pushf
or
aad
cmp
cs
sub
sbb
aas
push
es
pushf
push
push
out
stos
lock
lds
pop
xchg
lea
dec
hlt
ss
mov
cmp
sub
imul
imul
scas
lret
fildll
inc
imulb
rcrb
lods
pop
in
jp
push
or
inc
mov
pop
mov
dec
mov
adc
shll
out
mov
add
lahf
jnp
dec
xorl
mov
push
xchg
es
fwait
mov
adc
mov
les
jb
in
lea
pop
dec
loope
sub
cmpsb
mov
sbb
cmp
bound
xchg
jle
int3
out
jg
sub
or
dec
aas
push
insb
sarb
pop
out
adc
call
mov
aam
cli
in
stos
cmp
add
ret
pop
insb
push
sub
scas
dec
cld
in
mov
lcall
addb
add
ja
or
test
mov
cwtl
inc
mov
push
push
inc
mov
fstps
jno
mov
inc
or
mov
sbb
bnd
dec
insl
dec
xchg
test
mov
imul
or
pop
jbe
cli
cs
dec
or
out
cmc
sarb
add
sbb
and
inc
push
es
inc
ret
das
sbb
mov
loopne
les
xchg
mov
xor
fadds
jb
fcmovnbe
xchg
adc
inc
filds
mov
cmovle
mov
push
mov
xor
push
jae
or
arpl
mov
leave
les
cmp
dec
xor
and
push
ficoml
negl
sbb
sahf
mov
pop
mov
ja
cmp
jns
jne
xchg
imul
inc
xor
push
daa
and
out
aam
push
arpl
hlt
xor
pushw
pop
xchg
dec
scas
push
and
sbb
fwait
push
inc
insb
insb
lret
pop
and
call
and
pop
rcrl
sub
lea
mov
push
js
sbb
mov
pop
mov
pop
or
dec
negl
sub
and
pop
xor
jno
gs
jne
icebp
stos
push
addr16
aad
pop
popf
xchg
fincstp
fwait
ds
lods
pop
loopne
push
loope
cmp
jbe
dec
pop
or
movsb
inc
mov
popf
xchg
fimuls
mov
lret
cmp
jo
push
sbb
pushf
mov
pop
jno
ds
ret
push
push
lret
push
push
fs
sbb
cmp
fmull
cmp
sbb
adc
mov
ja
cmp
and
cmpsb
xchg
movsb
pop
loope
mov
push
xor
lds
lds
neg
dec
and
xchg
cmp
repz
jnp
fwait
jle
push
or
xchg
stos
std
mov
sub
popa
dec
mov
nop
push
jge
mov
nop
mov
cwtl
mov
das
out
test
stc
dec
leave
push
pusha
mov
inc
sub
and
mov
jnp
mov
pop
mov
push
cltd
and
jo
in
adc
xchg
sub
loopne
pusha
scas
es
aam
in
inc
mov
cld
pop
jae
adc
sub
fildl
or
sub
mov
jecxz
dec
jo
dec
add
lock
int3
int
mov
mov
lret
adc
xor
cmp
rcrl
ret
pop
xchg
aas
nop
sbb
xor
cmc
dec
mov
add
cmpb
mov
mov
add
mov
mov
jne
ret
in
add
fdivrl
fs
or
movsb
mov
dec
adc
jae
sbb
lret
addr16
dec
dec
inc
into
lahf
lock
and
cmp
push
leave
push
mov
xchg
bound
mov
rcrl
pop
jbe
mov
pop
and
jbe
or
dec
in
dec
cmp
mov
jb
inc
fiaddl
mov
lret
inc
cmp
addr16
mov
sbb
mov
cld
xor
mov
sub
divl
sub
or
xlat
out
sbb
push
repnz
bound
aam
cltd
lret
test
and
inc
xor
lcall
pop
xchg
xchg
out
pop
ret
dec
dec
test
or
jg
cmp
scas
pop
push
pop
in
loop
pop
sbb
test
ljmp
jle
cmp
ds
out
js
std
and
nop
loope
lcall
xor
dec
decl
or
xchg
stos
add
mov
in
out
sbb
ror
into
jb
jbe
mov
lret
jecxz
pop
ja
aad
jle
xchg
adc
mov
mov
stos
fisubrs
add
and
lds
mov
daa
adc
pusha
and
cli
in
mov
int3
mov
rcll
pop
lcall
bound
decl
mov
inc
fnstcw
jns
add
mov
jae
ficompl
stc
add
adc
cmpsl
fsubrl
cld
mov
push
xor
pop
cld
fwait
test
test
add
jg
mov
sbb
mov
pop
fdivs
gs
js
add
clc
movsl
jbe
insl
sbb
push
xlat
mov
pop
stc
iret
and
xor
addb
jmp
rclb
cmp
sbb
push
fwait
iret
outsl
and
pop
addr16
pop
imul
popa
dec
cmp
cmp
add
aaa
aam
push
psubd
sbb
add
or
push
add
iret
movsb
and
out
sub
lds
xor
imul
lcall
mov
fsubs
dec
in
push
jo
xlat
mov
pusha
gs
testl
xchg
sbb
pop
fnstenv
ljmp
and
repz
jmp
movsl
cmp
enter
cwtl
mov
add
adc
xor
stos
outsl
xor
sub
lods
mov
fldt
call
inc
xchg
dec
cmc
in
dec
in
mov
mov
cmp
cli
adc
icebp
ja
cltd
or
push
push
push
push
inc
mov
xlat
jle
jmp
sarl
fucomp
dec
loop
pop
push
mov
addl
inc
dec
xchg
shl
stc
sbb
mov
insl
mov
mov
fstl
pop
mov
inc
mov
adc
mov
cmp
mov
jne
push
aas
cltd
ss
mov
dec
mov
sahf
pop
leave
cmp
mov
lods
imul
test
mov
sbb
push
jp
in
bound
jecxz
out
aam
or
andl
and
or
imul
icebp
insb
pop
je
fcompl
lds
add
ret
fsubs
lret
lods
or
push
sub
mov
js
aaa
lcall
dec
shrl
add
pop
bound
dec
ret
sti
jbe
inc
sar
int3
or
in
xchg
mov
lea
bound
or
sahf
sahf
hlt
adc
pushf
iret
mov
inc
daa
pop
call
jo
sbb
push
sub
cmp
scas
mov
fisubl
cwtl
mov
aam
pop
rcl
outsl
xor
cmp
lret
pop
into
mov
mov
mov
mov
mov
pop
xchg
dec
pop
pop
mov
sbb
insl
jmp
push
mov
jecxz
out
mov
and
xor
lcall
into
stos
dec
push
jnp
insl
lods
push
clc
stos
xlat
nop
mov
mov
dec
int
sti
in
jmp
adc
mov
jo
inc
mov
push
adc
fsubl
movl
test
adcb
pop
out
xlat
cwtl
sahf
test
cmp
pop
sub
into
insl
pop
fwait
sbb
or
in
ret
mov
push
dec
pusha
adc
bound
negb
mov
xor
das
shlb
popf
push
scas
testl
pop
and
fsts
sbb
es
pop
scas
mov
sbb
xchg
leave
cmpsb
lret
loope
sub
mov
mov
push
pop
scas
aas
sbb
jnp
int3
popf
outsb
aaa
jecxz
xlat
test
sbb
aas
dec
add
push
ret
push
mov
les
cmp
xor
jbe
cli
push
mov
add
jo
pop
mov
scas
xor
int3
mov
push
mov
sti
sbb
add
mov
mov
test
push
cwtl
inc
cmpsb
daa
movl
pop
mov
loopne
fwait
add
gs
dec
mov
push
mov
popf
or
cmp
jae
fcomp
imul
jg
jmp
push
jl
shlb
pop
sahf
rorl
push
mov
gs
push
push
cmp
adc
pop
adc
popf
adc
fcmovb
ds
iret
insb
aaa
jecxz
push
xchg
jmp
mov
popf
outsb
fs
dec
adc
insl
dec
movsb
push
call
add
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
xor
add
ret
inc
cli
mov
adcb
push
leave
dec
out
jp
mov
popf
jl
leave
dec
scas
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
mov
push
pop
stos
enter
dec
shlb
sub
fucomp
daa
mov
fwait
jmp
leave
dec
xchg
sbb
pop
jg
sub
sub
adcl
adc
dec
jmp
dec
adc
test
cmp
gs
sbb
pop
mov
movsb
jbe
xor
in
add
rcll
jge
stos
insb
xor
ret
or
push
orl
mov
rol
sbb
dec
lods
inc
in
jae
sub
out
xchg
ds
gs
adc
jl
leave
dec
out
test
pop
pushf
jle
and
mov
popf
jl
leave
dec
out
mov
push
popf
jl
iret
dec
out
test
push
popf
insb
adc
dec
out
orb
lea
dec
out
test
push
popf
jl
leave
dec
out
test
pop
popf
jl
leave
dec
push
mov
mov
popf
jl
leave
dec
incb
adcl
adc
dec
out
test
push
popf
jl
leave
dec
out
add
stos
fiaddl
ret
mov
adcl
adc
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
sub
jl
leave
dec
into
mov
push
cmpsl
js
leave
dec
out
test
in
adc
leave
dec
out
movsl
mov
out
pop
adc
dec
out
aad
mov
popf
sub
leave
dec
rolb
adcl
adc
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
dec
out
test
push
popf
jl
leave
push
add
xchg
push
popf
push
mov
cmp
jecxz
gs
cmpsb
pop
das
lahf
add
mov
add
jns,pt
xchg
packuswb
xor
xor
out
adc
pop
inc
sub
add
add
cmp
icebp
inc
aaa
jg
dec
adc
in
push
mov
cmp
hlt
leave
pop
aam
jle
ret
jecxz
jne
rorl
rcll
mov
jecxz
push
push
dec
loop
ljmp
and
iret
loopne
call
fisubrs
dec
dec
lock
testb
imul
ret
adc
xor
pusha
dec
ror
or
xchg
jae
jae
es
mov
ret
dec
cmpsl
push
js
mov
jno
mov
lock
repnz
jle
inc
inc
pop
int
push
sub
rcrb
popa
sti
xor
loopne
push
sbb
lea
lock
mov
or
dec
je
push
dec
scas
sbb
shlb
push
int
in
and
mov
movsb
adc
mov
sbb
jae
inc
out
and
jmp
sbb
mov
cmc
arpl
xchg
pause
mov
data16
cmp
push
cmc
pop
stos
sub
gs
mov
negl
lods
cmp
and
imull
icebp
mov
pop
mov
ret
fidivrl
xlat
jb
sub
jne
out
inc
mov
out
out
arpl
pop
xchg
mov
loope
in
inc
sbb
jb
lds
aad
mov
sahf
pop
xor
aam
mov
ret
jg
fldcw
adc
cmc
sub
std
mov
or
mov
aam
sbb
icebp
setnp
push
jp
ja
xor
push
push
test
cmp
push
xchg
sti
jmp
pop
push
scas
test
fwait
cmp
jmp
inc
pop
mov
mov
mov
and
jae
xor
addr16
insb
fmull
frstor
and
fiaddl
pop
lea
push
decb
xor
iret
repz
std
push
les
loope
jl
add
lods
clc
or
and
roll
cmc
je
sub
jge
fadds
push
jmp
shlb
mov
mov
xlat
dec
sub
pop
mov
test
pusha
adc
push
xchg
jb
cmpsb
and
insl
mov
popl
popf
and
cli
sub
sarb
out
pop
cwtl
pop
xchg
ret
idivl
stos
or
sbb
sub
push
adc
cltd
dec
sbb
divl
fsubs
repz
icebp
push
popf
movsb
push
pop
es
push
jae
dec
mov
inc
cmpsl
test
popf
adc
imul
adc
leave
sub
nop
movb
inc
push
cld
repnz
fisttpl
in
jp
xor
int3
mov
filds
pop
outsb
aam
xchg
addr16
mov
jp
insb
rcrl
lea
test
outsl
and
xchg
stos
arpl
loopne
test
mov
adc
adc
push
sti
pop
inc
cmpsl
lds
inc
aaa
movsl
xor
mov
and
test
iret
outsb
sub
jge
or
cli
pop
xchg
rorb
or
insl
imul
add
jg
xchg
xchg
adc
mov
incl
inc
or
fldl2t
paddsb
ficoms
inc
pop
jmp
mov
add
sbb
jle
mov
enter
mov
std
das
sub
pop
xor
mov
jle
pop
lods
pop
jge
nop
push
push
sbbl
cmp
pop
or
sbb
xor
cltd
into
jl
pop
jge
sub
aad
inc
jg
fcomi
adc
mov
cmpsl
shlb
lods
lcall
dec
dec
mov
ja
fdiv
add
cmc
adc
aaa
mov
mov
mov
jecxz
cwtl
fldcw
mov
mov
stos
dec
insl
repz
pop
call
adc
pushf
add
inc
mov
mov
push
aaa
dec
jle
pop
decb
add
pushf
pop
lods
jmp
pop
sbb
daa
sub
adc
imul
sarl
insb
add
out
ret
addl
addr16
sub
inc
mov
popf
cmp
mov
sbb
mov
pop
loopne
xor
daa
out
cwtl
gs
js
jp
insl
mov
xor
dec
add
mov
add
mov
cmp
cmpl
out
popa
xor
std
mov
ss
es
jmp
and
test
dec
ds
jns
enter
adc
xchg
pop
inc
mov
push
cmp
pushf
sbbb
lret
xchg
push
sub
sub
lret
es
scas
subb
call
xchg
adc
add
xchg
in
mov
loop
addr16
fadd
test
xchg
sub
arpl
ret
push
and
add
adc
mov
arpl
xchg
fsubs
mov
dec
adc
xor
outsb
jmp
and
sbb
in
mov
out
stos
or
fdivrs
mulb
sub
addr16
jle
xor
lret
mov
add
lahf
es
pop
adcb
xchg
mov
dec
in
mov
cmp
jb
lock
xor
xchg
cmp
dec
mov
addl
mov
sbb
push
mov
jecxz
inc
cs
jp
sub
add
std
and
jp
dec
xchg
iret
jl
xor
mov
adc
mov
aaa
fstpt
ds
cld
push
or
jecxz
jecxz
dec
data16
scas
mov
jno
das
clc
lods
shl
jl
cwtl
push
or
add
push
inc
cmp
dec
pop
sbb
mov
lods
call
cld
movsb
hlt
testb
and
std
cmc
dec
out
fwait
ja
sub
out
pop
lods
daa
and
fucomip
fistps
push
xchg
rorb
add
add
stos
cmp
jno
gs
daa
push
ret
pop
add
mov
jge
rolb
jp
je
sub
push
jmp
lahf
aaa
mov
enter
into
push
cmp
imul
mov
ss
jge
pusha
cli
test
push
in
inc
mov
aad
gs
or
xor
negb
xchg
out
insl
dec
mov
data16
pop
outsl
cmp
out
jg
std
mov
xor
cmc
mov
adc
mov
add
out
or
cmc
rclb
ds
ret
jg
fwait
sbb
and
mov
test
lret
mov
stos
fimull
popa
aad
dec
lcall
lock
data16
into
fcmovu
xchg
and
fiadds
outsl
fstpl
lcall
aaa
mov
stos
lcall
aam
in
push
xchg
fsubr
mov
lret
out
loopne
pushf
inc
add
dec
enter
hlt
bound
call
movsb
push
push
jns
sub
jns
xchg
pop
xrelease
shr
dec
je
test
cmc
outsl
push
ja
jnp
or
xchg
mov
cli
dec
sub
sbb
fwait
cmpsb
data16
pushf
add
pop
jge
data16
mov
mov
pop
sub
mov
lods
imul
into
xchg
or
jo
out
loopne
ror
int
fadds
mov
pop
fcoms
addr16
add
jecxz
daa
int3
cs
cld
lds
insl
xchg
mov
mov
rorb
insl
fsubs
ss
jae
sbb
jae
push
loopne
rcl
jbe
out
dec
je
movl
arpl
mov
jne
xor
mov
or
ret
ds
test
dec
addr16
sbb
stos
gs
add
stos
pop
mov
inc
fdivrs
sbb
xchg
push
sbb
mov
xor
or
xchg
into
mulb
pop
andb
xchg
dec
mov
hlt
jno
and
pop
mov
sahf
lret
push
pop
and
inc
lret
mov
lds
pop
into
scas
cmp
aas
das
xchg
mov
fs
jmp
dec
popf
out
int3
adc
lea
popa
and
sbb
adc
scas
push
out
lcall
in
xchg
sub
dec
pop
mov
aad
scas
out
xchg
pop
cltd
shll
add
push
in
pushf
out
sub
adc
inc
inc
jle
fwait
js
xor
sbb
std
pushf
mov
test
adc
lods
xor
sbb
nop
notl
loop
lods
mov
cmp
xor
fcmovnu
ds
loopne
xchg
imul
imul
das
shrb
xchg
cmp
test
ja
test
iret
call
add
xchg
aaa
fcmovb
aam
int3
cmova
or
xchg
int
insb
into
and
jno
or
mov
popa
adc
add
pop
lret
add
push
bound
jmp
push
push
je
aaa
cmpsl
js
mov
test
inc
sub
and
push
ljmp
add
test
push
incb
loope
fwait
and
mov
pop
out
pop
push
or
xchg
fidivs
xchg
es
fcoml
jns
cmpsl
bnd
pop
clc
add
xchg
cli
daa
test
aas
mov
sub
scas
test
sbb
jl
pop
es
pop
je
inc
jb
sub
in
xor
mov
popf
mov
call
and
popf
int3
fcompl
cmp
leave
rcl
and
jo
cmpsl
jecxz
and
std
fninit
xchg
add
in
push
xor
inc
fcoms
shrb
add
adc
js
xor
and
mov
or
andl
cmp
mov
xlat
mov
mov
push
cmp
popf
sarb
fs
push
xor
cld
inc
pop
xor
enter
fdivr
arpl
pop
pop
push
mov
imul
push
pop
fsts
ret
xchg
negb
sahf
push
mov
orl
push
xchg
test
jge
leave
jge
xchg
icebp
das
arpl
pop
insb
sub
int
adc
add
sbb
add
fucomi
call
xchg
jno
xor
sub
add
jecxz
push
inc
je
hlt
add
and
leave
cli
ljmp
jg
repz
xor
in
adc
xorl
jge
faddp
sti
and
add
adc
aas
or
cld
lahf
sub
inc
insb
popa
mov
sub
stos
sbb
dec
int
jae
stc
mov
sbb
dec
imul
fidivs
dec
inc
icebp
out
hlt
add
dec
lods
clc
jmp
es
dec
push
xor
ret
ja
mov
inc
scas
dec
and
jb
dec
sbb
jb
cmp
leave
int3
pop
mov
cmpsl
insb
out
pop
aaa
mov
xchg
cmp
mov
cmc
mov
orl
xor
mov
je
lahf
test
mov
mov
dec
dec
mov
pop
decl
daa
adc
mov
out
xchg
lcall
psubusb
inc
leave
movaps
jbe
xor
sbb
adc
mov
and
das
fsub
cltd
mov
je
lahf
inc
ret
lea
and
push
das
leave
sbb
cmpsl
xlat
sub
lret
mov
jo
jge
fcmovnb
outsl
lret
cmpsl
movsl
loop
push
sti
adc
daa
clc
adc
pop
add
aad
ror
push
outsb
push
push
test
scas
cmp
xchg
xor
inc
subps
lret
jecxz
inc
shl
fs
daa
inc
out
lds
push
in
push
xor
stc
xor
mov
popa
xor
stos
nop
jge
cmp
repz
sbb
push
xorl
divb
mov
xor
lock
enter
push
mov
or
cmpsl
jns
adc
stos
inc
mov
jbe
mov
nop
mov
lcall
xchg
sbb
jecxz,pt
stos
jne
mov
inc
cmp
inc
mov
js
aas
out
les
cmp
pop
or
mov
jns
fldl
mov
dec
daa
insb
leave
jae
fiaddl
cmp
ss
mov
leave
std
push
dec
or
imul
or
cmp
insl
out
cmpsb
jmp
push
filds
bound
sub
arpl
pusha
fxam
jns
jle
jge
bound
xor
jmp
pop
popf
adc
cmpsb
lret
xor
dec
add
jl
mov
mov
push
loopne
push
inc
adc
scas
getsec
add
rolb
mov
xchg
jg
out
insb
dec
pop
dec
mov
mov
lods
test
mov
mov
dec
stos
loopne
cmp
je
test
sub
iret
push
nop
test
mov
and
daa
xchg
xor
fs
inc
popa
test
pop
pop
popa
adc
push
gs
pop
int
adc
mov
mov
xorl
imul
iret
sub
aam
test
push
push
out
cmp
xchg
inc
popf
fcmovne
or
daa
cld
inc
aaa
mov
xchg
lods
add
mov
mov
xchg
pusha
test
push
mov
adc
mov
dec
dec
jmp
cld
xchg
xchg
xor
dec
jmp
out
unpckhps
sahf
cltd
test
sub
ss
rclb
mov
setg
fwait
cmpsl
fdiv
outsl
in
test
mov
mov
xlat
cmp
lahf
rcll
xor
sbb
loop
push
push
test
or
adc
or
shrb
xor
stos
cmpl
pop
mov
push
fmull
call
scas
add
ss
test
in
test
push
test
jnp
test
pop
and
cmp
jno
or
fidivrl
rcll
mov
repnz
lcall
inc
inc
enter
loopne
sbb
sub
cmp
daa
xor
inc
lods
int
mov
mov
xchg
pmovmskb
ss
jbe
dec
xchg
iret
in
mov
xchg
lods
add
jg
adc
cmp
mov
das
push
sahf
mov
and
mov
int3
lret
dec
and
dec
bound
test
out
dec
lds
std
imul
dec
push
or
push
sub
popf
rdpmc
rolb
nop
nop
nop
nop
jmp
