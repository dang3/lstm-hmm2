imulb
imul
and
jbe
aaa
out
out
sbb
pop
pop
pop
inc
cmp
adc
es
std
arpl
bnd
mov
shrl
mov
add
sub
jle
sub
pop
pop
dec
sub
enter
aad
mov
rclb
mov
xchg
pusha
xchg
jno
ret
add
add
adc
inc
sbb
testb
test
loopne
cmp
rclb
mov
mov
and
or
ret
pop
dec
mov
in
xlat
or
mov
test
out
repnz
mov
push
xchg
jmp
mov
enter
sub
int
xchg
addr16
fistl
fs
add
ret
shrl
adc
or
and
mov
add
stc
aam
push
mov
clc
es
mov
mov
mov
stc
push
inc
ret
aad
in
xor
pop
fbstp
daa
out
mov
stc
cwtl
push
repnz
nop
into
cmp
test
es
aaa
mov
xchg
pop
loop
mov
push
lcall
test
mov
xchg
xchg
mov
and
xor
sti
add
hlt
jl
std
sub
cs
adc
rorl
xchg
pop
mov
adc
clc
push
cmp
push
cld
inc
rorb
push
inc
add
add
pop
test
out
dec
inc
xor
pushf
dec
mov
lcall
mov
xchg
mov
dec
cwtl
jmp
mov
lock
mov
fcomp
cmp
sbb
adc
imul
mov
pop
dec
stos
shll
or
das
adc
iret
add
adc
pop
mov
push
pop
loope
mov
jg
test
ds
cmpsb
fisttps
repz
mov
xchg
xlat
mov
aaa
inc
leave
cs
arpl
mov
das
test
loop
les
ret
scas
sahf
xor
fcomps
jmp
mov
adc
movl
xchg
cwtl
and
xchg
popf
pushf
add
daa
je
loope
mov
cmpsl
adc
inc
fisubrs
or
aaa
and
shll
mov
popa
lods
mov
cmp
jae
dec
mov
sbb
inc
jae
shrl
test
pop
add
or
aad
cmpsl
xchg
int3
xchg
aas
aad
and
cs
xor
xlat
test
les
or
out
xchg
inc
hlt
sub
or
iret
pop
fs
cmp
out
pop
lock
cmp
cltd
xchg
pop
lret
push
and
xlat
xchg
ret
adc
cmp
jle
outsl
daa
push
mov
subb
inc
ret
add
mov
loop
and
pusha
cmp
xor
and
jb
outsl
dec
cltd
imul
pop
lret
sbb
cli
and
cmp
cltd
add
out
or
push
scas
mov
fwait
xor
outsb
xor
loop
aaa
ds
js
and
dec
mov
imul
daa
dec
jne
lcall
jecxz
popf
js
cmpsb
mov
das
insl
mov
dec
pop
out
push
pop
and
in
push
lcall
bound
mov
jo
fnstcw
push
mov
mov
push
adc
xchg
cli
clc
xor
enter
sbb
pop
pop
fbstp
cmc
movsl
adc
push
pop
fimuls
repnz
lahf
aaa
sbb
xchg
outsl
pop
mov
xor
adc
int3
sub
mov
mov
pop
or
adc
cmp
ficompl
xor
mov
data16
fucomp
jecxz
lahf
lret
mov
sbb
fsubp
push
jecxz
mov
add
mov
ret
push
es
adcb
cli
dec
incb
fstp
mov
jnp
xorb
sub
mov
inc
ja
dec
fisttps
sub
push
add
inc
dec
push
add
popa
rcrl
lea
inc
mov
out
xor
inc
sbb
outsl
lahf
ret
mov
or
sbb
stos
nop
scas
jmp
push
mov
cmpsb
lcall
sbb
jbe
inc
mov
mov
dec
fcoml
rorb
in
je
push
adc
arpl
aaa
jns
std
jae
aam
inc
loopne
fidivrs
int
aam
fstps
lds
fcomi
addl
mov
jb
pop
jge
adcl
sbbl
sbb
xor
sti
pop
nop
adc
in
or
into
imul
dec
adc
stc
sbb
pop
roll
shlb
mov
int3
dec
out
mov
sub
pop
das
mov
out
test
pop
jo
mov
insb
mov
std
xor
lds
movsb
shll
outsl
pop
jbe
cltd
mov
in
jmp
imul
add
jmp
popa
dec
jb
push
xchg
or
cwtl
or
lea
jp
fsubrl
in
adc
jbe
lds
fidivs
pop
mov
and
pusha
xchg
jbe
jnp
fsts
push
test
pop
imul
xchg
mov
pusha
rcrl
jmp
hlt
pop
xchg
outsl
add
ja
imul
fcoms
pop
in
lock
lcall
movsl
fs
into
xchg
mov
dec
mov
js
cmpsb
sub
or
cltd
cmp
jmp
jns
mov
ss
leave
and
pushf
adc
movsb
pop
jo
movsl
fisttps
sbb
or
stc
sbb
das
xor
push
aad
loope
mov
lahf
pop
pop
nop
imul
jno
jae
inc
sarl
push
lret
mov
ljmp
xchg
push
or
shll
cmp
scas
or
and
push
mov
cmpl
sub
dec
sbb
mov
rcrl
pop
cs
or
addr16
sbb
test
jns
jae
jb
xor
and
add
mov
shlb
inc
sub
lods
mov
in
push
out
outsl
dec
cmp
push
filds
push
pop
mov
ret
cmp
push
jno
mov
lods
addr16
loope
and
cmp
rcr
mov
jb
jne
mov
jnp
mov
cld
and
imull
out
movsb
int3
lret
sbb
cmp
mov
cmp
sbb
sub
xlat
add
aaa
scas
xlat
inc
out
sub
cmp
xor
int
js
sbb
mov
and
xchg
scas
adc
jns,pt
sahf
mov
lea
rclb
mov
mov
jne
push
push
xlat
xchg
sub
btr
je
jae
addr16
add
push
sbb
dec
lahf
insb
xchg
cmp
lahf
sub
inc
inc
pop
mov
jle
push
mov
daa
or
ds
in
lds
or
call
or
pushf
jg
xchg
pop
xor
sbb
push
push
int
je
in
sbb
sbb
push
mov
out
fistpll
cld
jmp
pop
xor
imul
mov
das
jbe
movsl
jb
loope
outsb
out
inc
sub
add
add
rclb
notb
mov
je
in
test
cmpsb
jle
inc
outsb
or
lahf
imul
ret
push
insb
pop
sti
mov
jnp
jmp
stc
stos
sbb
xor
pop
inc
mov
out
add
inc
sti
data16
xor
lock
pop
xor
jo
popf
insb
pop
lret
out
mov
shlb
inc
jo
dec
outsb
scas
jb
fiadds
inc
jg
jp
bound
insb
pop
movsb
loope
mov
int
int3
ja
mov
sarb
lea
scas
addr16
inc
xchg
out
and
fwait
pop
pop
xor
jo
mov
push
mov
lret
pop
pusha
fnclex
rol
outsb
and
push
dec
cmp
in
stc
ds
jns
popa
xchg
lods
pop
out
loopne
push
popa
subl
mov
ffree
mov
mov
dec
cwtl
mov
mov
jnp
lds
test
mov
sub
adc
pop
movsl
cmc
lods
xchg
push
or
sti
daa
xor
out
pop
add
pop
xor
rolb
scas
push
dec
popf
xor
pop
mov
xor
lods
int
ret
inc
in
out
insb
push
jle
repnz
fsts
xchg
mov
jno
push
iret
movsb
leave
pop
sub
movsl
fsubl
imul
aaa
cltd
cld
fisubrs
fbld
negl
addb
push
ret
or
repnz
and
xchg
jecxz
pop
mov
mov
cmp
inc
xchg
pop
adc
adc
mov
cmpsb
pop
rol
fistpll
pop
mov
ret
or
jnp
int
add
insb
jp
mov
lret
loope
popf
push
ja
inc
bswap
mov
hlt
fadds
lret
and
cli
push
xchg
cmpsl
int3
lods
add
and
lret
lock
inc
cmp
mov
push
mov
leave
and
mov
cmpsl
loop
bound
inc
mov
adc
mov
xor
rorl
and
cmp
pop
push
inc
in
lret
sbb
loop
in
push
xchg
pushf
mov
push
fimuls
lcall
fs
adc
mov
insb
dec
xchg
sahf
pop
xchg
pop
sahf
rorb
mov
enter
and
xorb
lock
stos
and
in
dec
pop
pop
sbb
pop
leave
in
loop
adc
mov
mov
loop
pop
jmp
cs
popf
sarl
out
push
jno
ss
mov
dec
pop
mov
inc
shrl
pop
cmp
mov
push
mov
or
aas
idivl
pop
jnp
xchg
or
cmp
add
cmp
lret
cs
jecxz
dec
sub
in
mov
xor
icebp
sbb
sub
in
sbbl
dec
dec
sub
lods
std
pop
nop
mov
jp
les
scas
dec
cmpsl
mov
cli
jge
pop
out
je
ljmp
clc
sbb
sbb
test
loopne
loop
jmp
fucomi
stc
test
jle
cmp
and
add
mov
mov
push
mov
cmpl
in
sub
adc
imul
out
inc
dec
mov
lds
hlt
push
les
xchg
sarb
add
mov
sbb
call
push
mov
mov
into
ja
cmp
and
xor
add
popf
fisttpl
sub
ja
je
notb
fidivl
adc
and
cmc
mov
jno
cltd
out
mov
jno
clc
test
aam
xor
mov
mov
mov
in
stos
test
jecxz
push
scas
fs
lahf
dec
test
xchg
sbb
pop
inc
mov
cmp
xor
paddw
push
sbb
xor
rcll
rorl
mov
jo
mov
outsb
das
dec
pop
repnz
shrl
and
dec
pop
inc
xor
adc
inc
cvttps2pi
loop
inc
push
jl
dec
iret
xor
mov
xlat
or
mov
jp
inc
test
imul
outsb
or
jnp
and
test
mov
and
loop
jmp
sbbb
push
ja
mov
punpckldq
xchg
xchg
test
xorb
sbb
mov
mov
pop
mov
xor
fnstenv
in
insl
enter
sub
lret
add
jmp
dec
popf
or
notl
mov
jmp
std
adc
pop
out
mov
test
and
adc
lea
ja
dec
lods
sub
mov
push
pop
addr16
xor
inc
bound
sub
add
push
mov
and
xor
inc
shlb
xlat
mov
int
add
imull
add
orl
xchg
bound
loopne
mov
je
test
pop
or
and
pop
or
arpl
add
xchg
pop
out
cmpsb
dec
add
aam
rorl
adc
push
push
push
mov
dec
or
enter
scas
in
fwait
xor
jmp
adc
leave
pop
mov
sti
sub
inc
ja
movsl
repz
jae
data16
mov
push
scas
dec
pop
pop
lods
imul
cmp
insl
stc
mov
lds
outsl
je
popa
popa
fdivr
push
inc
xor
bound
adc
xchg
mov
cmp
dec
xchg
push
ficomps
mov
rorb
aaa
or
lret
pop
or
rolb
stos
mov
lods
jno
cmp
adc
lock
js
mov
cs
and
add
cmp
shll
sub
xor
push
sbb
ds
outsb
dec
fwait
jbe
dec
xor
roll
mov
mov
fistpl
sub
mov
popf
jb
stc
jp
leave
inc
inc
sbb
jmp
ret
int
dec
lahf
and
and
dec
xchg
or
ds
stc
data16
inc
xor
sbb
lret
jmp
cmp
test
out
leavew
jns
fldl
xchg
pop
outsl
pop
mov
push
scas
mov
adc
loopne
std
lods
jg
scas
outsl
in
rcr
push
leave
in
lret
mov
sahf
jae
or
cwtl
repnz
divb
xor
lock
mov
stc
lods
dec
in
arpl
xorl
mov
push
addb
mov
int3
sbb
jg
jne
mov
push
test
rclb
jnp
dec
and
pusha
push
sti
test
cmp
mov
inc
add
fcomi
mov
mov
cmp
fcmovnb
inc
pushf
push
add
nop
sub
fdivr
ljmp
in
pop
cs
rcl
inc
int3
xchg
sub
daa
mov
rcll
mov
ds
xor
lcall
jge
jl
mov
pop
repz
clc
xchg
push
les
cmpsb
and
push
adc
and
and
push
ljmp
in
adc
popf
push
or
xor
push
and
adc
stos
add
sbb
orb
pop
mov
jbe
xchg
xchg
outsb
xchg
movsl
fstl
loop
jno
xchg
cmp
and
ss
bound
push
mov
or
mov
xor
dec
lret
cmc
inc
call
or
aam
mov
jl
mov
inc
inc
xor
fxtract
je
inc
ds
mov
mov
ss
push
cli
cwtl
push
test
pop
xchg
enter
and
into
arpl
dec
mov
pusha
adc
aad
jbe
das
shr
hlt
in
mov
inc
sbb
and
dec
fcompl
sbb
push
fwait
lret
xchg
sbb
insl
mov
push
cmp
dec
push
pop
outsb
lret
das
jnp
inc
das
lret
orb
xchg
mov
xor
xchg
add
xchg
jge
lock
or
mov
mov
push
bnd
stc
movsb
or
lods
mov
aaa
pop
adc
add
jo
scas
ja
ds
lock
lret
mov
adc
adc
pop
mov
mov
mov
and
in
outsl
pop
mov
push
mov
fistps
sub
xor
test
stc
sub
xchg
and
in
mov
nop
sbb
iret
dec
pop
pushf
mov
rolb
stos
in
movsb
pop
ret
mov
inc
out
push
repnz
push
xchg
cltd
pushf
sub
aad
push
adc
jbe
sbbl
push
stos
pop
scas
and
les
mov
push
cmp
and
dec
cld
in
enter
loopne
inc
inc
fwait
gs
test
popf
ret
and
mov
xlat
xor
daa
imul
popa
and
pop
clc
std
rorl
ret
movsl
sbb
jnp
gs
push
outsb
lret
pop
dec
les
add
xchg
movsb
inc
mov
int
push
std
pop
jg
jge
mov
insl
adc
sub
popf
mov
mov
lods
fwait
les
sub
xorb
fisubrl
mov
mov
sub
fs
enter
mov
add
mov
adc
pop
dec
adc
cmp
jecxz
cmp
sarl
out
ds
mov
sub
rcll
inc
lahf
pop
jb
stc
xchg
imul
out
pop
in
hlt
jne
xor
pop
popf
test
shlb
push
or
or
rorl
push
push
dec
mov
inc
ljmp
xor
ja
sub
fsts
mov
cmpsl
imull
popf
and
mov
pop
jecxz
int
loopne
and
cmp
loope
or
into
mov
dec
sub
fdivl
sbb
dec
pop
movsb
daa
or
incb
incb
push
inc
mov
mov
sub
cmp
cmp
lcall
jno
add
outsl
test
dec
add
mov
or
popa
nop
mov
pushf
out
sbb
push
movsb
out
aaa
dec
mov
addr16
sub
adc
adc
add
sub
icebp
insl
inc
push
adc
lahf
lea
mov
mov
push
clc
sub
scas
not
xchg
xchg
and
dec
ret
pop
push
jno
rcr
mov
cli
pushf
int
xchg
add
lret
pushl
mov
icebp
lock
int
xor
into
xor
pop
pop
and
imul
xlat
push
mov
int
dec
mov
in
dec
xchg
mov
inc
xlat
or
push
cmp
mov
inc
xor
inc
dec
in
lret
lret
lret
push
data16
xchg
sbb
notl
mov
lods
add
push
sbb
adc
cmp
xchg
cmc
jae
jmp
call
sbb
imulb
rcrl
out
adc
ret
mov
push
xlat
stos
add
mov
stos
mov
dec
imul
jno
dec
test
adc
loope
add
ficomps
out
xor
xchg
es
dec
xor
mov
push
add
addr16
int
adc
data16
push
sub
pusha
cs
xor
rcrb
sbb
push
pusha
imul
push
divl
je
push
pop
std
ds
pop
pop
addr16
xchg
mov
sub
ror
mov
ja
dec
es
pop
test
or
adc
push
push
lahf
sub
pop
stos
mov
mov
aas
lcall
pop
pushf
pop
push
rol
add
mov
leave
rolb
pop
movsb
daa
mov
scas
pop
push
cmc
xchg
lock
mov
inc
push
pop
int
movsb
in
insl
idiv
or
loope
js
add
or
mov
ret
dec
sub
xchg
dec
lds
fwait
and
jg
cmpsb
cmp
inc
lret
les
ret
rcr
cmp
test
sbb
xor
dec
mov
das
loope
jecxz
rcrl
cmpsb
lret
out
xchg
cmp
pusha
jno
push
pop
inc
test
adc
daa
cmp
and
push
jl
mov
or
fwait
leave
pop
or
cmpsl
fisttps
mov
clc
loop
popf
cli
ljmp
jne
mov
dec
fxch
cmp
in
ret
xchg
xor
mov
aaa
inc
sub
sbb
imul
pop
and
and
movsb
imul
add
imul
popf
sahf
in
inc
mov
fbstp
je
lods
or
out
inc
dec
mov
inc
in
xchg
xor
ret
dec
ja
loop
adc
mov
xchg
sub
lret
mov
push
ss
push
fidivs
xchg
inc
lcall
dec
push
xor
rolb
repz
call
clc
aas
cmp
dec
imul
mov
mov
mov
dec
imul
mov
roll
inc
repz
jns
pushl
push
push
jno
movsb
adc
testl
movsl
or
mov
pop
jo
out
dec
int3
adc
add
and
jns
mov
inc
and
sub
leave
add
pop
sub
cmp
jae
or
insl
loop
jae
xchg
xchg
mov
in
push
inc
fimull
cmpsb
loopne
popf
mov
adc
ss
push
add
or
lods
lock
cs
inc
test
and
mov
es
inc
adc
sbb
jl
pop
pushl
das
jae
cli
lret
adc
pop
xchg
sbb
std
shll
xor
dec
aad
in
dec
loope
jo
mov
mov
jmp
cmp
jecxz
cwtl
frstor
fucomi
sub
or
ss
je
add
cmp
jbe
mov
mov
xchg
dec
push
insb
cmp
push
xlat
push
add
movsb
xchg
and
out
mov
inc
divl
or
stc
push
jmp
mov
inc
xchg
push
xor
mov
adc
xchg
ret
repz
mov
das
cli
ja
mov
push
ss
jmp
or
xor
or
dec
xor
stos
sbb
add
push
pusha
mov
dec
lcall
cmp
mov
cltd
xor
fucom
test
xlat
in
mov
mov
inc
mov
adc
mov
mov
or
push
mov
push
ja
sub
stos
pop
inc
mov
lea
xor
aad
mov
push
mov
adc
xchg
fistps
sti
pop
inc
test
pushf
mov
test
jp
ja
cwtl
hlt
or
gs
sub
inc
xchg
addr16
mov
xchg
clc
addb
pop
and
or
push
out
jo
jns
or
push
push
add
stc
jno
pop
cmp
jmp
lahf
stos
arpl
adc
cmpsl
dec
add
inc
cli
loop
stc
or
movsl
jbe
inc
or
or
mov
aas
aaa
pop
pop
fcoml
shl
pop
push
lret
int
mov
mov
lcall
inc
sub
sbb
pop
ret
inc
and
push
mov
sub
inc
and
push
dec
mov
fildl
jo
aas
je
jmp
xor
jmp
popf
or
imul
mov
shrb
sub
iret
adc
fisttps
outsb
push
test
mov
push
jg
or
mov
jl
add
mov
push
mov
pop
xor
inc
repnz
jp
sub
mov
imul
mov
movsb
pop
add
int
mov
dec
rorb
in
loope
xchg
jle
jbe
pop
mov
sbbl
mov
scas
mulps
loopne
scas
jl
add
cltd
int
jb
sub
or
xor
cmp
pop
es
sbb
hlt
inc
xchg
mov
adc
sbb
push
in
mov
inc
cmp
xchg
addl
sbb
andl
lock
jge
repnz
pop
je
pop
mov
pushf
jo
nopl
notl
icebp
jne
loop
cmc
pop
xorb
mov
pop
jno
stc
jl
jbe
lods
lcall
test
xchg
mov
jge
stos
cli
mov
out
daa
shll
xorb
mov
out
mov
test
mov
mov
gs
test
ss
cmp
inc
fs
mov
out
dec
mov
jb
mov
mov
jo
xchg
xchg
sbb
out
cld
cwtl
or
push
pop
and
inc
or
mov
push
out
aad
jae
aaa
cmc
pop
adc
cwtl
sub
xchg
sbb
inc
dec
jns
adc
enter
mov
mov
or
xchg
out
js
dec
or
roll
data16
jecxz
daa
jns
sub
pop
scas
stos
dec
jnp
or
pushf
shlb
push
lods
lahf
jge
sbb
fnstsw
or
cs
sub
xor
dec
pop
in
pop
in
jne
mov
dec
mov
push
repz
mov
mov
xor
pop
lret
xor
js
outsb
xchg
pop
mov
sahf
mov
test
sub
jne
in
mov
test
xor
push
xor
sti
scas
movsb
mov
mov
pop
cmp
mov
aas
mov
cmp
sub
lcall
out
mov
jl
ja
sub
mov
pushf
fisubl
cltd
jmp
push
mov
in
mov
adc
jb
movsb
test
sbb
mov
inc
in
fisubl
nop
cmpsl
stc
fs
xor
xor
mov
mov
add
rcll
cmp
out
test
xor
adc
dec
div
sub
and
jae
sbb
fiadds
xchg
mov
sub
sub
push
enter
jecxz
fldl
xor
stc
je
lcall
mov
dec
es
add
sbb
mov
adc
sub
ret
dec
fsubrl
je
ljmp
jae
in
mov
testb
xchg
and
sahf
mov
xchg
lods
mov
in
lea
jp
mov
jo
jb
dec
daa
jo
loope
pop
out
mov
jne
imul
xchg
nop
ret
mov
lods
or
dec
orb
fmuls
jg
sub
pop
std
addr16
sbb
and
xor
pop
mov
dec
or
fidivrs
movsb
roll
es
imul
lret
fiadds
scas
bound
or
cmp
mov
out
or
out
and
mov
aam
push
add
imul
pop
adc
jns
popa
mov
mov
add
cmp
out
mov
mov
aad
cmc
push
sbb
cli
daa
pop
hlt
mov
mov
out
mov
pop
popf
adc
cmp
clc
jae
js
adc
xchg
fsubrl
pop
and
out
mov
pop
cld
mov
mov
mov
imul
fsubrp
outsb
dec
mov
mov
dec
pop
scas
scas
or
and
aaa
orb
cmp
pcmpgtb
sub
rolb
inc
sub
pop
adc
push
cs
addr16
stos
xchg
out
cmp
data16
in
jecxz
lods
sub
and
js
test
sub
lods
push
dec
je
mov
adc
xchg
jle
loop
not
ffree
inc
in
sub
or
jbe
pop
int3
cmp
and
rcrl
outsb
mov
mov
outsl
or
dec
push
mulb
lods
pop
xor
cmp
ds
stc
arpl
ret
popa
imul
jb
pop
sub
or
cld
pushf
mov
mov
mov
or
add
jecxz
jg
js
xor
xor
push
sahf
jbe
int3
sbb
dec
xchg
in
jno
xor
mov
push
fiaddl
loope
jmp
pop
icebp
mov
sbb
fists
fucomi
push
lcall
test
xchg
ds
mov
add
dec
sbb
adc
loope
cs
inc
aam
enter
clc
cltd
pop
inc
mov
adc
inc
das
lock
xlat
mov
push
or
cmpsl
jo
repz
fwait
cmp
push
inc
loop
and
cli
cwtl
mov
mov
test
shr
aam
xlat
ficompl
shll
jno
and
sahf
shlb
sti
pop
test
push
add
les
fs
ja
jno
jle
pop
std
into
mov
fimull
lret
out
nop
xchg
fdivrs
push
xor
movsb
cmp
inc
and
cli
push
xchg
cli
aad
jno
add
mov
fisubs
out
rclb
push
or
movsb
rolb
insb
mov
xchg
js
out
mov
sub
pop
xchg
mov
cmp
adc
sbb
lret
js
jb
push
push
or
inc
mul
loope
lahf
aad
mov
fwait
sahf
fimuls
ljmp
ret
fsubl
dec
mov
ret
inc
sub
mov
mov
popw
fwait
cmp
js
movsb
fsubl
lcall
mov
cmp
faddl
sbb
xchg
lea
mov
call
jmp
fildl
shrl
ret
iret
dec
aas
push
fwait
mov
test
test
or
sbb
dec
ljmp
add
inc
arpl
out
xor
mov
movsl
lock
xlat
mov
sahf
iret
psrld
out
mov
leave
push
jae
xchg
daa
xchg
pop
in
xlat
lods
rcll
outsl
ljmp
aaa
icebp
mov
popl
test
daa
ret
repz
fldenv
xchg
mov
in
jno,pt
repnz
lret
addr16
das
cmp
fwait
out
imul
or
mov
bound
xlat
stos
aaa
cmpsb
and
test
idivl
cs
cmc
aas
xchg
mov
mov
mov
in
insl
idivb
push
in
nop
add
loop
ficoms
fcmovu
mov
stc
cmp
lea
mov
stos
lds
popf
adc
mov
mov
push
cmpsb
pop
dec
div
mov
lods
jb
mov
rcrb
or
sbb
sub
pop
enter
or
mov
popa
test
aam
sub
mov
lret
stos
gs
rcrb
cmpsb
cld
cmc
pop
cmpsl
jg
cmpsb
push
in
pushf
push
jbe
outsb
jae
sub
arpl
popf
mov
popa
imul
and
js
popa
jmp
dec
fs
or
lret
and
jae
mov
jmp
bound
repz
mov
loop
fwait
cmp
adc
mov
jge
ljmp
insb
or
in
and
loope
pushf
das
sbb
addr16
xchg
xchg
pop
int3
mov
pusha
aam
inc
pop
jmp
aam
dec
fisttpll
dec
mov
pop
sub
sarb
rolb
sub
arpl
in
jne
jne
xchg
lock
imul
psrad
pop
in
and
outsb
test
fistpl
sbb
xchg
imull
jo
roll
shll
scas
outsl
push
jl
xlat
jae
xlat
rcrb
cwtl
pushf
inc
dec
inc
hlt
sarb
pop
push
mov
gs
lea
lret
lahf
faddl
push
inc
adc
nop
xchg
loope
dec
fwait
xchg
inc
jg
sub
or
jnp
ficompl
push
shrb
iret
add
into
in
mov
ljmp
sar
out
add
inc
and
lcall
icebp
test
dec
imul
popa
not
and
xlat
pusha
mov
add
aad
mov
inc
dec
lcall
dec
xchg
pop
shr
test
xor
xchg
scas
outsb
hlt
int3
add
fistpll
pop
xlat
decl
ret
cmp
aam
and
lea
jg
ljmp
push
jne
jne
push
mov
int
insb
jno
jno
mov
mov
std
imul
pop
jbe
and
sub
dec
cmp
imul
push
mov
movsl
mov
fs
pushf
cmpsb
add
cmc
scas
es
scas
adcl
testl
jo
mov
mov
icebp
xchg
pushf
mov
push
sbb
add
xchg
add
fs
pop
adc
mov
rolb
add
mov
je
out
pop
cmp
or
fists
xchg
pop
outsb
fldl
gs
sbb
cmc
cwtl
or
repnz
jg
push
es
test
push
jmp
out
sub
fisttps
das
adc
rorl
xor
sbb
cmp
dec
lret
test
scas
addb
mov
push
cmp
jo
jmp
fstpt
std
scas
pop
xchg
adc
sbb
dec
addl
imul
loop
jb
je
mov
xor
fisubs
clc
xchg
jecxz
subl
mov
sti
in
mov
clc
xor
inc
rorb
push
mov
nop
ficomps
cmpsl
outsl
or
jne
xor
popa
ss
js
fiaddl
xor
xchg
repz
sahf
imul
pop
movsl
xchg
das
scas
je
divl
mov
add
stos
iret
dec
mov
loope
add
or
ss
sbb
xor
out
mov
adc
scas
sbb
cltd
imul
enter
adcl
mov
adc
test
ljmp
cmp
fistl
xchg
mov
push
jecxz
and
js
popa
dec
scas
xchg
inc
or
lret
adc
and
mov
daa
jge
mov
flds
or
mov
or
pop
and
mov
cwtl
rol
incl
sub
xor
repnz
mov
fwait
icebp
jl
cwtl
popf
jp
mov
aam
dec
mov
fwait
or
sub
std
lods
inc
stc
in
pop
or
in
dec
dec
test
xchg
cmc
jae
or
sub
dec
and
inc
sbb
ljmp
pushf
in
imul
or
mov
movsl
adc
inc
mov
jae
ds
in
push
popl
loop
xchg
xchg
pop
sahf
or
in
inc
xor
pop
mov
pop
fxam
scas
and
push
addr16
push
shlb
btc
sbb
aas
ss
push
adc
xchg
insb
in
mov
jns
adc
xorb
mov
ret
xor
adc
in
negb
mov
in
cld
xor
push
inc
mov
adc
insl
les
cmp
cltd
pusha
aam
push
jo
push
repnz
jb
push
outsb
jbe
inc
int3
sbb
in
cwtl
jp
cltd
rol
cmpsb
push
dec
push
xor
mov
lds
mov
or
sbb
mov
orb
xor
out
xor
inc
mov
ds
loopne
clc
pushl
hlt
fbstp
fisubrs
cwtl
mov
faddl
mov
add
pop
bound
jmp
scas
xor
jp
jg
es
into
aas
mull
jns
aad
mov
pop
jecxz
xchg
dec
lods
jbe
clc
cmc
and
pop
aad
inc
fstpl
fs
cmpsb
push
or
jmp
push
sbb
sub
mov
pop
xlat
mov
paddsw
fistpll
fdivrs
pop
outsl
lret
mov
int3
leave
fadd
xchg
repnz
xlat
adc
dec
popf
mov
or
jmp
frstor
test
sub
in
mov
insb
scas
cltd
lret
pop
std
fmulp
xchg
push
inc
push
popa
iret
adc
cmp
iret
out
test
xor
aad
mov
cmp
or
test
pop
add
push
roll
leave
cmc
jg
dec
push
xchg
int3
mov
pop
mov
pcmpgtb
push
jo
pop
dec
jge
mov
pop
pop
lret
and
lds
movsl
outsl
aam
cmp
mov
orl
mov
and
inc
jo
outsl
lds
xchg
test
popf
in
fs
mov
loope
or
cli
adc
push
fnstcw
jl
aaa
and
dec
push
loop
lds
lahf
rcll
insb
pop
mov
inc
daa
int
cwtl
add
movsb
mov
roll
adc
push
call
stos
pop
rclb
xlat
pushf
shrl
mov
inc
xor
xlat
stos
pop
push
inc
lock
and
outsl
ret
out
sbb
test
mov
movsl
cli
mov
mov
pop
push
push
data16
stc
je
cmp
stc
inc
pop
mov
xor
add
jle
mov
rorb
lds
mov
cli
mov
test
mov
lret
popa
jmp
adc
xchg
es
push
xchg
mov
push
lds
mov
ss
cld
rclb
cmp
jbe
icebp
out
dec
mov
arpl
stc
ss
arpl
loop
into
sbb
cmp
loope
push
push
pmulhuw
xchg
in
inc
mov
push
pusha
push
scas
cmpl
pop
jmp
lods
aam
insl
enter
or
nop
fidivrl
xchg
outsb
loopne
imul
scas
mov
call
pop
push
xchg
adc
repnz
xchg
xchg
leave
daa
icebp
jne
fisubrs
in
sbb
cltd
cmpsb
fisubs
adc
imul
fbld
mov
mov
lock
outsl
fisttpll
mov
and
mov
rclb
test
cmpsb
push
jbe
add
mov
shrl
push
adc
add
push
push
mov
inc
add
or
mov
and
fildl
jo
adc
or
jo
pop
data16
mov
negl
sub
sbb
pushf
rorb
cld
push
mov
fldcw
imul
cwtl
clc
scas
mov
add
fcomi
or
jnp
jns
push
lea
inc
jbe
xchg
pop
lods
jnp
loopne
lcall
dec
mov
fildll
push
test
mov
outsb
sub
popf
dec
cld
push
in
imul
fucomi
outsb
mov
jmp
jbe
scas
fwait
pop
rep
in
mov
repnz
daa
in
mov
add
mov
jns
stos
jnp
cmpsl
packuswb
xor
pop
jb
lret
cmp
testl
repnz
ficompl
pop
call
ja
cmp
rcl
icebp
rclb
mov
sub
and
sbb
std
mov
aad
faddl
jl
xor
mov
push
es
adc
ja
stc
int3
mov
jbe
jne
stos
sbb
loopne
pusha
add
adc
mov
xor
mov
and
mov
dec
sbb
enter
fbld
out
mov
add
sbb
push
imul
cmp
sbb
inc
sahf
popf
test
mov
fldt
pop
mov
push
push
imul
and
notb
popl
cmpsb
dec
mov
mov
mov
jno
inc
sub
stos
sbb
xor
mov
mov
lahf
popf
call
adc
cmp
jo
or
mov
cmp
in
arpl
or
ror
or
das
jo
popa
jnp
jb
and
insb
movsb
cltd
cmp
cli
mov
rorl
xchg
jnp
jg
js
sbb
or
adc
push
outsl
jb
dec
inc
stc
or
arpl
fwait
lcall
ret
leave
sbb
xchg
out
cmc
andl
aas
data16
xor
int3
pop
dec
jo
mov
insl
push
push
jne
jle
jmp
mov
jae
jnp
xor
les
out
mov
mov
lahf
stos
aaa
push
clc
mov
push
adc
jbe
js
fistps
push
hlt
mov
aas
mov
adc
push
jp
loope
inc
xchg
and
xchg
mov
fcoms
nop
imul
out
push
or
jo
dec
push
lods
sub
pop
clc
out
add
push
sub
xchg
popl
jae
cld
dec
ss
cmpsl
ja
push
divl
stos
xor
xor
xor
xchg
push
fs
inc
push
sub
inc
lahf
pop
adc
sub
or
adcb
jno
xor
cmpl
and
xchg
out
mov
roll
loop
data16
jle
jno
in
pop
jb
mov
mov
rclb
push
sub
nop
sub
jne
popf
out
mov
sti
lea
in
fwait
add
ss
mov
mov
jno
cmpsb
mov
shr
push
or
xchg
sti
xor
inc
lds
xor
add
inc
add
jo
sub
push
loop
jmp
dec
adc
das
aaa
pop
cli
aaa
xlat
xor
push
insl
icebp
stos
push
sahf
mov
into
add
lahf
js
lods
xchg
mov
jg
pop
inc
loop
add
mov
das
mov
cmpsl
lahf
jnp
fldt
int3
mov
sub
xchg
test
add
add
pusha
pop
mov
mov
mov
jg
push
pushf
xor
add
in
sub
mov
mov
jecxz
cwtl
loopne
jae
sub
cmc
mov
fsubl
mov
aaa
test
in
dec
mov
sub
mov
mov
dec
cmp
adc
xor
xchg
arpl
sub
jnp
jbe
gs
in
into
fwait
aaa
mov
push
xchg
dec
mov
xor
popa
div
mov
mov
clc
test
jno
xor
rol
leave
xchg
shlb
fldt
mov
es
fildl
or
xchg
cmc
loop
and
hlt
pop
bound
or
imul
mov
jecxz
shrl
xchg
pop
cmp
test
lods
in
ficoms
adc
pop
sub
nop
adcl
mov
xor
mov
xchg
stos
inc
cmp
xchg
aad
jl
pop
pop
lcall
and
and
jb
popf
pop
stos
repnz
mov
insb
adc
js
sarb
arpl
out
leave
inc
sbb
add
dec
mov
fildl
and
jno
bound
enter
mov
gs
shll
scas
jecxz
call
mov
shrl
xor
inc
jge
ljmp
push
mov
push
gs
mov
lock
mov
push
cltd
mov
pop
imul
add
xchg
or
call
jge
or
and
jg
addr16
adc
cmc
and
or
ret
shll
cltd
add
xorb
lret
enter
leave
pop
cwtl
pop
ret
xor
jecxz
mov
call
inc
jl
mov
push
scas
in
mov
dec
sub
fldcw
mull
lea
cmp
cmp
mov
jo
pop
add
push
sub
leave
jg
aaa
jno
xor
adc
repnz
sti
dec
push
lret
call
sbbl
jb
cltd
call
jns
in
ret
push
lods
and
xchg
and
inc
sbb
fdiv
mov
incb
push
pop
ja
pop
sub
outsb
mov
mov
in
inc
mov
adc
and
jp
lds
push
rol
stos
jmp
iret
test
mov
inc
pop
mov
pandn
test
lods
or
cli
outsl
scas
cld
out
mull
sbb
popf
cltd
loope
leave
pop
fildl
mov
adc
aad
neg
mull
or
iret
mov
dec
cmp
out
mov
push
mov
mov
mov
xchg
and
or
inc
adc
and
jecxz
sub
stos
jbe
sbb
cld
jnp
pop
std
jo
nop
jmp
les
cs
xor
pop
or
sub
rcrb
mov
test
sub
sub
pop
pop
and
inc
sub
or
sbb
sbb
addb
adc
inc
aad
pop
xchg
push
push
pop
pop
mov
pushf
scas
andb
clc
pop
jp
sti
cs
cltd
push
xor
icebp
pop
cmpsb
scas
scas
loopne
jae
adc
shrb
cltd
fnstcw
cmp
inc
adc
mov
fdivr
imul
pushf
xor
mov
jae
cs
pop
iret
std
cmpsb
outsl
iret
jle
dec
add
xchg
and
loope
cmp
and
cld
xchg
jo
xchg
cmc
mov
sbb
test
call
imul
xchg
sbb
mov
add
test
jns
adc
add
int3
divb
out
imul
sub
jne
dec
rcr
xchg
push
aaa
jl
sbb
addb
clc
ficompl
sbb
pop
and
or
imul
jl
movsl
int3
xorb
rcll
push
fdivl
test
xor
popa
js
sbb
movsl
rol
adc
iret
sbb
or
out
sarb
je
mov
ror
repz
addr16
pop
sbb
pop
insl
xchg
dec
scas
push
insl
shll
dec
mov
movsb
data16
push
adc
add
cld
adc
lahf
pushf
iret
dec
daa
repz
test
lret
mov
ss
add
inc
loop
pause
std
jno
mov
mov
mov
jg
pop
jge
sbb
adc
je
xor
sarl
mov
sbbb
subb
insb
xchg
in
push
mov
or
adc
xor
push
add
jne
xor
ret
xchg
das
ficoml
mov
and
test
mov
dec
inc
pop
out
stc
cmpsb
jns
flds
dec
inc
mov
ljmp
xchg
pop
rcrb
and
in
mov
sti
loop
jp
push
inc
icebp
pop
lock
push
mov
popa
pop
loope
jmp
sub
cmp
popf
push
fcompl
jnp
aad
cmp
lahf
cmp
push
and
mov
mov
mov
xchg
addl
dec
jle
mov
xor
adc
lods
pop
and
test
icebp
insl
mov
pop
cli
xlat
aaa
subl
cmpsb
test
push
mov
scas
stos
sbb
rcrl
into
repz
sbb
push
or
ljmp
jbe
lret
dec
adcb
jge
dec
popf
popa
pop
iret
stos
test
js
xchg
dec
add
xor
sbb
lea
and
xchg
fdivl
or
xlat
aam
pop
test
in
mov
imul
sub
xchg
jno
pop
incl
movsl
mov
jecxz
dec
in
sarl
loope
and
pop
xor
push
cmpsl
adc
cld
add
scas
ret
sbb
lahf
jmp
ret
lds
pop
dec
xor
ja
or
in
xchg
jecxz
loopne
loop
sbb
dec
lods
jg
cmp
aad
test
call
push
xchg
icebp
mov
ljmp
pop
inc
mov
xor
test
or
ficoml
arpl
lock
aas
pop
out
mov
jns
xchg
cmp
pop
jg
pop
jecxz
mov
loop
inc
stos
mov
inc
cmp
jae
sub
or
pop
fmull
fdivr
dec
scas
mov
mov
call
flds
lea
inc
adc
popf
int3
pop
pop
push
xchg
int3
sahf
mov
push
fldl
scas
push
or
pop
pop
add
adc
shl
fwait
mov
pop
fisttpl
sub
xchg
inc
test
pop
ja
out
popf
mov
cmp
cmc
loop
aam
dec
das
repz
push
hlt
nop
jb
jno
mov
out
movsb
jmp
ss
cmp
js
rclb
xchg
shll
jno
lret
inc
xor
out
fwait
jecxz
pop
popf
pop
sbb
jno
and
and
inc
jnp
test
lea
cmp
xor
cli
push
mov
hlt
insb
pusha
div
mov
mov
sub
add
mov
mov
pop
ror
mov
jo
sbb
pop
push
inc
enter
xchg
lods
maxps
sbb
jb
pop
or
adc
lcall
and
movsb
mov
push
push
cmp
adc
sbb
push
ljmp
cmp
cltd
cmp
jnp
add
push
jo
je
repnz
dec
xchg
inc
pop
mov
push
pushf
popa
push
jno
jo
pop
pop
sub
dec
push
bound
cmpsb
or
hlt
ds
addr16
jns
xchg
add
and
and
sub
test
ljmp
xor
jne
sub
cmp
cwtl
add
jo
mov
shl
push
jmp
icebp
pop
jnp
xor
repz
jne
loopne
mov
cs
pop
daa
movsb
dec
test
sbb
into
pop
mov
loopne
popf
cltd
daa
into
sub
dec
sub
xchg
jae
das
paddsb
add
jg
push
jl
mov
xor
negb
dec
adc
out
pop
inc
gs
push
je
mov
add
fchs
data16
in
jnp
je
movsb
adc
cmc
or
and
inc
pop
test
fsubr
cmp
loopne
xor
data16
add
mov
cltd
xchg
push
mov
xchg
add
mov
fsubs
pop
lds
ss
jle
cmp
push
lds
popf
fstpl
rolb
jne
gs
repnz
loop
xlat
loope
push
icebp
cmp
inc
es
repnz
sbb
xchg
stos
or
fistpll
sbb
sbb
mov
pop
sub
sbb
xchg
adc
xor
fcmovbe
frndint
xchg
es
mov
into
adc
dec
lret
rcl
add
into
sti
out
and
vpaddw
cmp
and
cltd
xor
push
insb
clc
pop
loopne
lcall
inc
mov
inc
movsb
icebp
sub
rcl
lcall
shrb
push
sub
call
in
mov
xchg
pop
push
pusha
cmp
pop
mov
dec
adc
mov
das
negb
pop
jne
pop
push
and
adc
push
ret
int
js
sbb
push
sar
adc
jmp
mov
xlat
out
out
cmc
adc
test
pop
sub
sbb
leave
dec
pop
cmpsl
aas
cmp
sbb
lret
aam
mov
adc
jecxz
sbb
aas
aam
sbb
sub
add
pop
sbb
pop
shrl
scas
or
ds
lods
cmp
cmc
mov
add
and
sub
xchg
imul
pop
xchg
cmp
add
shlb
mov
mov
fidivrl
out
mov
add
pushl
out
int3
repz
push
jbe
mov
push
sub
out
ret
xor
xor
dec
push
sub
jg
push
loop
cwtl
inc
in
imul
sub
ja
addr16
pop
jne
fisubrl
shr
push
mov
dec
adc
sub
fld
sbbb
test
mov
and
cmp
hlt
sub
adc
mov
jae
xorl
sbbl
repz
popw
jmp
mov
adc
mov
loope
arpl
inc
pusha
push
rclb
and
adc
iret
nop
and
dec
or
repnz
je
mov
stos
insl
ja
int
mov
xor
add
jb
and
outsb
add
jno
dec
je
cmpsb
out
jecxz
pop
out
clc
ljmp
enter
push
fld
neg
adc
mov
cmp
repz
jo
mov
or
pop
sbb
mov
jl
in
lods
and
pop
and
pop
dec
and
add
push
pop
mov
mov
out
out
sub
and
stc
xor
mov
fisubs
adc
fs
scas
lock
sub
cmc
adc
xchg
adc
in
jmp
and
dec
test
stos
pop
dec
lods
clc
inc
fs
dec
ret
xor
or
mov
xchg
in
clc
xlat
sbb
ret
lds
sub
cmc
fs
sahf
jecxz
mov
mov
movsl
adc
ljmp
xor
push
push
xor
shl
sti
and
repz
push
fdivs
dec
pop
cmpsb
and
mov
out
sub
xchg
and
xchg
push
stos
mov
mov
add
lret
jmp
lods
xchg
fistpll
insl
push
dec
repz
pop
inc
dec
xchg
inc
push
inc
or
sub
push
dec
jno
mov
jecxz
mov
cmp
pop
in
sbb
xor
mov
and
mov
das
push
xorb
leave
inc
mov
cmp
adc
fbstp
xor
inc
xchg
aaa
out
push
fisubrl
mov
fwait
and
jecxz
test
push
pop
push
in
jmp
scas
arpl
jmp
mov
iret
stos
mov
push
or
pop
pop
xor
pop
inc
roll
push
inc
pop
ljmp
mov
sahf
cmp
pop
jmp
cltd
xor
negl
inc
loope
mov
add
jecxz
push
sub
fimull
out
xor
mov
fsubrs
xchg
int3
pop
and
or
icebp
cmpsb
lcall
xor
or
mov
xchg
mov
inc
stos
out
push
scas
enter
or
inc
cwtl
adc
imul
lret
arpl
scas
testb
fdiv
outsb
fninit
lods
or
icebp
push
dec
add
hlt
push
divl
sbb
ficomps
pusha
shlb
scas
sub
lahf
clc
bound
lock
cs
sti
scas
in
sbb
adc
cmp
divb
sub
stos
cmp
cmp
fbld
divps
jmp
push
xchg
popf
lahf
xor
movsw
orb
push
cmp
lsl
push
pop
inc
and
add
add
mov
xchg
sbb
mov
in
add
lret
int3
xor
add
nop
inc
pop
mov
add
pop
jmp
into
cmp
addr16
push
sub
addl
push
mov
out
xchg
dec
iret
push
test
inc
pop
sti
aaa
shll
movsl
hlt
jns
ds
mov
lahf
sub
mov
add
sub
mov
in
or
xlat
push
mov
ret
sbb
cmp
fimull
lret
inc
lods
sti
std
in
fs
inc
push
fs
data16
rorb
lret
xor
sub
jmp
ret
fisubrs
in
sub
es
or
rol
cli
mov
mov
sub
popf
adc
add
movsb
shrl
popf
jp
sub
pop
out
arpl
lods
pop
xlat
popf
js
mulb
dec
cwtl
cmp
mov
call
inc
and
jne
rclb
and
ljmp
out
andb
lds
cld
cltd
xchg
dec
or
insl
je
rorl
jge
mov
and
loope
mov
popf
dec
xchg
push
cld
fsubl
push
add
and
filds
inc
ljmp
pop
mov
xchg
add
jo
int3
pop
xor
cmp
cli
popf
pushf
je
jb
jl
mov
int3
mov
pop
mov
int
bound
flds
pop
dec
xor
call
sub
mov
mov
push
mov
mov
jl
in
xor
jle
adc
roll
cwtl
js
aaa
pusha
aaa
pop
ret
scas
adc
mov
mov
mov
push
test
orb
sti
leave
cmpsb
sbb
pop
sbb
gs
sarb
cli
hlt
jle
add
ja
cld
sub
mov
jnp
cs
cwtl
fldt
push
dec
jmp
push
xchg
pop
clc
sbb
out
imul
or
rcll
les
ljmp
xor
xor
iret
xchg
lods
sbb
inc
cmpsl
scas
xor
fldt
pusha
fnstenv
lods
in
mov
mov
out
inc
mov
sbb
mov
call
sarb
lcall
sub
hlt
mov
mov
call
xlat
cmpb
sahf
sar
in
repz
push
cmpsb
ficoml
stc
mov
xchg
jno
fdivs
jmp
sbb
dec
cwtl
jae
push
fs
stos
cltd
or
inc
shll
push
xlat
aaa
jmp
jnp
repnz
pop
push
sbb
adc
or
sbb
mov
pop
xlat
movsb
adc
fwait
jp
dec
push
adc
mov
out
roll
push
jecxz
or
cmp
sbb
add
mov
lret
or
cmpl
cwtl
sub
add
rorl
dec
je
rclb
xchg
mov
mov
adc
out
lret
fwait
in
dec
in
inc
lds
in
push
xor
ret
insl
inc
pop
fs
pop
lahf
sub
xor
dec
jle
push
pop
shrl
cmpl
int3
mov
bound
icebp
jmp
lahf
sub
dec
cmp
leave
imul
ljmp
xor
dec
push
pop
in
mov
adcl
cmp
push
inc
mov
bound
rcr
jle
cmp
jo
xor
mov
imul
xchg
cld
enter
mov
jge
ret
push
xor
push
sub
push
push
inc
dec
sbbb
popf
cwtl
xor
sahf
mov
xchg
push
inc
jo
icebp
mov
lods
sbb
loop
out
mov
sbb
je
rcl
sahf
dec
push
mov
cmp
xlat
aas
push
adc
jle
lods
dec
pop
xchg
jge
aaa
fcmovnu
and
dec
arpl
movsb
add
mov
scas
inc
scas
xchg
aad
jmp
jmp
push
cmp
fisubs
mov
pop
daa
fdiv
sahf
fwait
shl
mov
stos
pop
movsl
jns
addr16
jb
jp
mov
das
sbb
push
cmpsb
loopne
xchg
xor
dec
dec
push
pop
inc
ja
ret
mov
mov
lea
lock
adc
inc
xchg
mov
cmp
push
dec
sbb
xor
dec
es
lods
sub
fs
test
dec
fistpl
push
clc
fwait
cmp
stos
addb
jo
imul
fbld
pop
addl
inc
xchg
mov
jge
sahf
mov
aad
aad
pop
out
hlt
add
adc
cmp
and
stos
mov
sti
or
cmp
fadds
push
jle
insl
pop
fidivrs
mov
or
roll
mov
test
push
mov
xchg
jae
dec
decb
jg
xor
pop
addr16
in
clc
mov
jge
data16
cmpsl
jbe
xchg
or
cmc
outsb
xorl
mov
mov
je
mov
fstpl
mov
scas
scas
ss
sub
test
or
cld
dec
imul
das
ss
xchg
fdivl
std
push
shrb
in
lods
gs
in
mov
jnp
or
lock
incl
pop
fdivrl
aad
fildl
fimuls
inc
out
adc
nop
mov
mov
jnp
call
bound
out
out
xlat
and
jge
ret
add
loop
adc
mov
ss
xchg
mov
stos
jge
mov
xor
xor
bound
xchg
idivl
loop
xchg
popf
outsb
push
push
add
mov
add
xchg
ljmp
cltd
push
lods
push
sub
or
push
sahf
xor
fstpl
shll
or
sub
jns
lcall
ja
enter
adc
xchg
int
pop
xor
ss
imul
adc
lea
pop
shr
bound
mov
push
pop
sub
mov
ret
inc
jmp
sbb
jle
mov
pop
dec
dec
inc
adc
xlat
daa
sarb
popa
repnz
out
lods
lods
sub
pop
push
mov
push
adc
pushl
mov
sbb
mov
pop
pushf
mov
xchg
dec
xor
adc
scas
out
sub
lea
xchg
or
pushf
in
lods
mov
data16
pop
sub
sbb
fs
xchg
add
sub
out
sahf
cmpsb
shrl
cld
fsts
jg
mov
leave
rcll
les
adc
xor
inc
pop
incb
mov
pop
inc
or
aam
mov
das
dec
jnp
stos
ret
inc
lock
dec
bound
movsl
pop
dec
aam
push
fimull
mov
sti
cmpsb
leave
sti
inc
repnz
pop
sub
popl
stos
push
cmp
or
xor
push
xor
mov
mov
and
lods
and
movsb
stos
pop
adc
pop
mov
ror
xchg
jp
and
pushf
sub
mov
jae
mov
inc
lahf
xor
mov
popa
sbb
std
mov
in
jg
fnstenv
push
jge
add
mov
mov
popf
inc
sub
adc
dec
mov
pop
pushf
sarl
sbb
push
faddl
insb
movsb
sbb
dec
add
or
sahf
xor
push
std
adcl
arpl
mov
lahf
pop
adc
mov
out
pushf
jl
dec
mov
shrl
adc
dec
cmp
pop
cmp
cmp
in
push
dec
xor
inc
mov
and
pop
leave
inc
sub
ss
mov
cmp
stc
mov
pop
mov
insl
test
fwait
add
inc
sbb
sub
neg
outsb
add
add
mov
fdiv
pop
and
lods
lods
xchg
sbb
rcrb
mov
and
jge
mov
sahf
cmp
cltd
in
jl
inc
out
jne
add
xchg
icebp
repz
out
cmc
out
sub
mov
or
clc
repnz
cmpsl
pusha
xchg
pop
or
or
dec
mov
dec
out
andl
mov
push
mov
in
jnp
in
or
stos
cmp
and
add
push
leave
mov
jecxz
sar
out
test
jge
inc
lahf
mov
sbb
cmp
out
sub
add
decb
cltd
shrb
push
andl
push
and
cmp
jnp
sbb
jle
and
mov
lcall
xchg
xchg
sti
test
js
cmp
dec
add
sub
xor
dec
and
mov
push
ffree
int3
inc
and
jecxz
add
aaa
xor
push
push
mov
je
int
or
mov
and
fucomi
les
andb
xchg
inc
fldt
iret
scas
cmp
mov
mov
dec
stc
mull
push
sub
dec
ret
mov
repnz
hlt
loope
sub
jmp
test
movsl
push
mov
push
arpl
lcall
ss
xchg
cmp
mov
mov
testl
add
jg
push
popf
mov
std
adc
repnz
cli
xor
adc
push
leave
sub
sub
add
xchg
sub
rclb
push
in
repz
insb
popa
popa
push
mov
xchg
push
sub
ds
jg
and
sub
adc
imul
cmpl
add
fcoml
add
loopne
jbe
push
pop
fdiv
jecxz
fcmovbe
lods
xchg
sahf
fstp
loope
push
bnd
adc
outsl
mov
cmp
or
pop
ficomps
adcb
nop
adc
loop
dec
ja
mov
sbb
rcrb
sub
dec
mov
outsb
sub
in
icebp
into
xor
mov
xchg
pop
and
pop
aad
xor
mov
xor
shrb
xchg
mov
or
outsl
das
sbb
sar
test
add
pop
test
fadds
push
inc
daa
xor
cmpl
xchg
lods
jno
sbb
add
adc
shll
ljmp
sub
loop,pn
je
adc
sbb
pop
lahf
stos
push
dec
sbb
mov
cmp
push
aaa
push
rorl
cmp
iret
xchg
pop
cmp
xchg
jne
mov
push
fisttpll
test
adc
jbe
add
push
inc
pop
aad
imul
into
dec
mov
mov
push
jne
adcl
in
jge
sahf
cltd
data16
pushl
inc
filds
int3
push
aam
mov
icebp
mov
jle
lret
lods
pop
pop
mov
cmp
js
pop
mov
test
sub
in
cs
dec
jmp
cmp
repz
push
popf
ret
add
mov
dec
test
outsb
movsb
push
repz
out
dec
loopne
jp
call
push
ret
lret
jnp
jnp
aas
push
sub
pop
pop
pop
stc
inc
cmpsl
fwait
mov
lea
pop
aad
xlat
cmp
popf
add
pop
inc
cmpsl
jle
mov
inc
fldenv
cwtl
add
xorb
repz
das
mov
negl
xchg
mov
and
inc
stc
or
mov
stc
jl
cwtl
mov
pop
ret
and
and
outsl
sbb
dec
inc
popa
sbb
and
cmpb
outsl
adc
lds
mov
add
mov
xor
pushf
inc
dec
in
jae
sub
sub
imul
add
jecxz
je
push
or
xor
adc
icebp
or
rolb
mov
push
std
out
sub
push
mov
mov
shlb
dec
mov
fimull
jg
std
cmp
jecxz
test
mov
mov
fidivl
fldcw
sub
xor
xchg
lock
cmp
movsl
mov
push
test
mov
flds
and
daa
inc
sbb
or
and
jo
enter
adc
cs
pop
mov
cmpsl
jne
sub
sub
dec
ret
gs
inc
or
mov
cmp
call
inc
adc
int
scas
adc
cmpl
shlb
add
mov
lea
push
or
shlb
ss
insb
push
push
lods
mov
jmp
pop
mov
gs
mov
adc
jne
loopne
xchg
or
add
lret
sbb
mov
pop
in
sbb
addr16
gs
sub
rclb
push
sub
push
sub
cmp
push
sub
lret
mov
cmpsb
enter
bound
dec
loopne
repz
scas
push
jp
jecxz
add
jle
lahf
mov
aad
icebp
push
addr16
test
fcoml
movl
inc
repnz
inc
or
cli
adc
inc
or
sbb
sub
shlb
jae
mov
xchg
adc
sbb
mov
stos
sub
jg
adc
addr16
int3
sbb
es
push
lahf
cmp
test
fisttps
lret
push
bound
inc
aas
xlat
xor
or
xchg
inc
scas
nop
cmp
or
cld
or
dec
mov
out
loopne
or
pop
and
push
rcll
dec
in
mov
fidivrs
and
lds
push
or
cmp
rclw
xor
push
aaa
rorl
adc
loope
mov
lret
mov
callw
cld
dec
ja
adc
pop
add
or
insl
into
lahf
arpl
rcrb
ret
add
and
adc
cmp
es
mov
mov
add
jl
testb
or
sub
test
pop
into
sub
fnstcw
inc
loop
and
das
xchg
cmpsl
push
dec
pop
into
cmpsl
ljmp
in
stos
and
jae
lods
xchg
pop
xorb
adc
sti
jge
and
repnz
rorl
in
lcall
fwait
orl
sti
push
cs
or
gs
ret
mov
xchg
or
dec
fsub
scas
aaa
jp
imul
fstpt
jbe
fcmovu
lods
jmp
mov
in
jnp
cmp
ret
jnp
bound
mov
fldl
jnp,pt
enter
bnd
sahf
mov
pusha
lahf
xchg
cmp
dec
cltd
hlt
inc
adc
sbb
ret
flds
inc
add
pop
mov
mov
pop
lret
inc
lods
add
add
jae
scas
ret
outsl
mov
mov
and
test
pop
push
addr16
add
cmp
mov
hlt
test
cs
sti
mov
daa
lret
test
inc
stc
loop
stos
std
dec
push
mov
push
shll
fidivl
lds
in
xor
imul
sbb
cmpsl
je
cmpsl
test
cltd
out
out
jp
and
push
enter
fdivrs
xor
xlat
int
mov
sub
xchg
ljmp
mov
xor
sub
and
repz
test
push
mov
jns
xor
leave
jbe
lock
and
dec
and
push
ljmp
xchg
stos
xor
stos
mov
movsl
mov
sbb
xchg
cld
adc
cmp
std
sub
inc
jo
push
mov
inc
outsl
push
lret
mov
out
fmull
add
inc
jge
ret
fs
sub
jg
cmp
and
gs
movsb
into
leave
sub
xchg
int3
idivb
mov
leave
add
mov
xchg
loopne
clc
inc
mov
cmp
gs
pop
idiv
mov
in
inc
jnp
dec
jecxz
adc
jmp
dec
bound
mov
filds
cli
cmp
mov
lahf
dec
lcall
daa
and
out
or
enter
dec
pop
insb
cs
repnz
pop
push
mov
insb
cmpb
adc
repnz
add
hlt
pop
add
mov
lcall
push
out
mov
fldl
test
imul
inc
repz
rcll
sti
test
int
push
mov
jl
dec
sbb
jp
repnz
out
stos
mov
dec
aam
insl
jmp
pop
jb
or
repnz
push
int
push
lahf
mov
stos
fsts
pop
cli
sbb
repz
cld
sbb
aaa
daa
jle
dec
popf
and
in
rolb
movl
aas
push
jno
je
test
mov
inc
jne
pop
xchg
xor
ret
push
xlat
inc
jno
aaa
lds
xor
ficoml
xor
lret
inc
fstps
in
test
push
adc
xor
cmpsl
pop
jno
jecxz
pop
jecxz
adc
ss
fsubrs
lret
mov
mov
hlt
push
insl
push
lret
and
ds
sub
sub
filds
or
xor
lret
xchg
jg
xor
loopne
cmp
mov
or
pop
jne
xchg
out
outsb
fwait
ret
xchg
and
dec
push
or
cmp
leave
testb
inc
or
push
lret
xor
lret
daa
mov
xchg
dec
movsb
inc
xor
xor
sti
fisubs
xor
sub
imul
inc
insl
xor
add
mov
icebp
pop
push
sbb
add
test
mov
xchg
jne
xor
mov
jne
in
push
aas
push
sub
xacquire
movsb
stos
std
push
adc
push
insb
fdivrp
jmp
ret
je
and
xchg
push
pop
stos
ret
xchg
ret
mov
sub
cmp
or
insb
rclb
mov
ljmp
mov
xor
daa
adc
imul
mov
insl
ret
inc
roll
sbb
lods
sub
sti
pop
lock
cmp
adc
jmp
lea
pop
dec
scas
mov
in
sbb
jae
arpl
and
call
jno
sub
dec
pop
push
ja
dec
or
es
push
iret
out
es
imul
nop
push
sub
das
or
in
out
arpl
mov
cltd
sbb
mov
ljmp
jb
jmp
mov
ror
hlt
pushf
jbe
xchg
add
jmp
xor
jecxz
iret
jg
xchg
ljmp
movsb
shll
and
out
xchg
jmp
inc
mov
int
jo
rcr
test
mov
inc
ret
in
sbb
sub
test
cmp
stos
add
dec
xchg
das
mov
cmp
dec
mov
pop
cmp
pop
insl
inc
es
jecxz
jp
pop
push
and
add
pop
add
movsl
mov
popa
mov
cmp
movsb
sti
sbb
lahf
std
dec
dec
xor
stc
push
push
cmpsb
inc
loopne
or
jecxz
push
hlt
adc
mulb
pop
push
xchg
add
mov
sbb
sbb
xor
cs
sub
jge
cmc
mov
outsl
xorb
mov
jno
std
stc
cs
shlb
jnp
jmp
pop
xchg
inc
xlat
test
arpl
out
scas
pop
sti
mov
inc
mov
jl
or
in
mov
mov
cmp
addb
insl
push
pop
jns
shrb
mov
dec
or
insl
faddl
fiaddl
push
sarl
js
std
out
sbb
mov
jp
sbb
push
mov
mov
jg
sub
push
adc
mov
mov
imul
int
add
dec
cmpsl
mov
push
jge
insl
fbstp
xlat
xor
test
mov
xchg
jb
mov
bound
lods
sbb
jnp
outsb
icebp
les
or
adc
pop
cmpsb
in
push
pop
sub
in
test
and
das
mov
sub
fsubrs
sahf
adc
nop
xchg
mov
add
aaa
arpl
loopne
insb
pop
dec
push
call
dec
cmpsb
cltd
fxam
mov
pop
or
mov
fisttpl
push
mov
push
dec
into
and
mov
lods
mov
and
mov
xlat
push
xchg
out
rcrb
rcll
incb
popf
or
sub
sbb
mov
cmp
stos
pop
cwtl
xchg
inc
outsb
lahf
push
push
push
jae
sti
lret
pop
push
lds
cmp
cmp
shll
jae
mov
add
dec
fisubl
xchg
aad
or
push
ja
jg
inc
cmp
ljmp
dec
pop
jnp
fwait
mov
in
addr16
out
xor
jecxz
xchg
das
or
dec
mov
pop
fists
push
int
das
jno
mov
jle
push
dec
jo
fstp
stc
mov
lahf
repnz
sbb
outsb
sub
cld
aad
sub
inc
or
lcall
ljmp
imul
jmp
xor
outsb
adc
les
rclb
aam
mov
mov
outsb
fisubrs
in
test
mov
imul
movb
roll
dec
in
and
mov
in
cmpsb
and
and
xor
mov
lock
cmp
push
insl
imul
outsb
mov
rcrb
jnp
enter
sahf
jb
xor
dec
rclb
jl
sub
in
pop
push
jbe
hlt
adc
or
pop
insl
inc
cwtl
outsl
lds
aaa
xor
sbb
xor
jae
pusha
or
inc
xchg
sub
sbb
xor
dec
cmovle
mov
sub
inc
and
lcall
ljmp
mov
mov
lds
hlt
or
jmp
push
sub
push
fdivs
insl
mov
xchg
addr16
nop
fmuls
inc
fwait
cmpb
in
aas
int3
xor
mov
sbb
sbb
adc
dec
push
jae
test
xor
fucom
fists
dec
lahf
fmul
movsb
xor
jns
mov
sbb
pop
push
call
jae
inc
jb
addr16
leave
das
mov
into
int
mov
pop
cmp
cwtl
aaa
jmp
cltd
xchg
sbb
inc
aam
jbe
xchg
pusha
sbb
cld
loopne
popf
lea
shll
pop
loop
cwtl
sbb
int3
jp
mov
int3
jecxz
in
and
cmpsl
rcl
dec
push
jne
shrl
mov
rcll
lea
dec
mov
popf
cmp
adc
sbb
cmc
fstpl
mov
ss
stos
inc
jae
dec
fwait
mov
test
shrb
xor
xor
enter
lcall
jl
pop
out
sub
mov
mov
pop
cmc
fcoms
rol
aas
xor
lock
das
jo
xor
xor
mov
mulb
lret
dec
je
pop
and
cmpb
mov
sbb
aam
clc
pop
pop
cmp
test
jae
divb
or
cmp
pop
pop
aaa
add
dec
fidivs
jl
out
imul
mov
lret
out
imul
clc
aaa
jnp
sbb
push
sub
faddl
cmp
dec
add
mov
mov
nop
cmp
scas
pop
int3
ja
cmp
xor
je
add
cmc
std
out
lods
dec
hlt
xlat
sbb
xchg
divb
popf
aaa
mov
repnz
jl
pop
mov
pusha
jns
jmp
push
sub
jg
popf
xor
cmp
sub
in
inc
insl
in
rcr
test
adc
push
idiv
dec
xchg
inc
jo
mov
aam
and
lcall
in
xchg
push
jecxz
rcrb
repz
popa
iret
or
pop
push
push
push
mov
aad
sub
fdivrs
push
jbe
scas
scas
dec
xor
das
jle
sub
and
pop
add
repnz
cmp
cmpsl
ljmp
or
add
xlat
in
xor
pushf
movsb
pusha
test
sbb
cwtl
push
leave
fldl
idiv
out
call
xor
pop
xchg
inc
rclb
aaa
push
or
daa
adcl
push
jae
pop
sub
push
push
mov
push
jg
xor
shlb
cmp
ret
iret
pop
push
test
pop
arpl
insl
test
ficoms
push
jnp
cmp
data16
aam
or
pop
fs
push
jbe
les
fidivs
repnz
cmp
aad
rcrl
lods
jns
in
jbe
cmp
fdivl
ret
ljmp
aam
outsl
out
loopne
sti
scas
jae
mov
jno
xchg
cmp
xor
dec
and
call
or
popa
insl
repz
pop
jae
add
fs
xchg
mov
cmp
mov
gs
xchg
xor
jmp
out
and
mov
insl
icebp
popf
outsl
dec
hlt
movsl
cmpsl
imul
cmc
scas
xor
or
cmp
mov
mov
out
dec
xchg
pop
in
out
in
and
pusha
mov
jecxz
cmp
lret
test
mov
mov
das
stos
xchg
sbb
ss
or
mov
ror
ljmp
mov
out
cmp
push
in
aas
movsl
rcrb
addr16
out
xor
int3
lret
stc
add
sbb
mov
and
xor
xchg
test
out
hlt
dec
dec
and
xchg
add
mov
cmpsb
inc
dec
test
bound
push
xor
mov
pop
incb
inc
sbb
cmp
ss
add
xchg
and
cmpsb
out
dec
notl
lret
lcall
xchg
rcll
add
sub
sbb
jge
push
loope
mov
jne
lds
inc
xchg
pop
jge
or
nop
and
test
jb
mov
ljmp
adc
jp
std
xchg
insb
ficoms
xchg
gs
cmp
stos
insl
mov
push
pop
imul
aad
std
xor
insb
loopne
sbb
repz
and
shlb
data16
xchg
aam
dec
repnz
and
fdivrl
clc
daa
loop
adc
push
sbb
or
loopne
lds
lods
xchg
xchg
mov
mov
push
push
sub
push
dec
repnz
data16
dec
xor
jbe
sbb
icebp
adc
cs
loope
dec
pop
xchg
mov
lcall
cmp
stc
in
or
ret
push
cmpsl
repz
mov
stos
inc
ljmp
cltd
aam
or
or
stos
adc
pop
subl
lret
adc
lcall
dec
sar
sub
in
xchg
mov
test
movsl
pop
clc
add
ret
ds
out
lods
inc
sub
xor
cmp
push
sbb
out
imul
out
or
jmp
dec
mov
xchg
fistps
dec
fimull
xor
fiaddl
aaa
fiadds
and
loope
fistps
addl
mov
adc
sbb
sub
movsb
jge
popa
push
loop
bound
insb
ret
pop
pop
jg
xchg
pop
divb
pop
cmp
mov
adc
mov
fmulp
jo
or
hlt
pop
cltd
test
jb
insb
lret
push
loope
and
pop
cmpsl
call
adc
xor
and
loop
insb
les
fisubrl
xchg
and
aad
std
inc
inc
rorl
dec
mov
imul
sbb
push
xchg
shl
pop
or
cwtl
pop
aad
inc
mov
sub
or
xchg
popa
mov
sub
or
add
call
es
xchg
mov
adc
inc
pop
sbb
mov
fisubrs
out
std
push
inc
aas
mov
in
mov
aas
lods
cs
mov
add
sub
outsb
je
push
inc
pop
push
xchg
int
jo
clc
cmpsl
sbb
xor
sahf
mov
idivb
and
lods
imul
scas
fnstsw
mov
jae
and
and
enter
cmpb
jns
and
or
les
dec
pop
imul
lret
in
jns
sarb
pop
add
scas
dec
xchg
leave
ret
daa
mov
cmpsl
filds
inc
inc
mov
arpl
iret
fwait
dec
cli
mov
mov
pop
ljmp
mov
js
push
jbe
mov
out
or
add
ds
popf
daa
cmp
dec
movsl
cltd
dec
stos
xlat
in
das
test
inc
adc
xchg
shll
mov
cli
outsl
lea
mov
ds
mov
shrb
out
out
sub
xchg
cmp
mov
adc
int3
cs
mov
sti
jno
fcoms
ljmp
jle
add
fs
sub
testb
mov
gs
jmp
xor
xchg
xor
dec
and
loopne
clc
lcall
jp
mov
movsl
lods
jne
out
mov
out
xor
fadd
push
push
dec
fdivs
inc
ficomps
scas
mov
sbb
push
in
push
dec
scas
jnp
cmpsb
stos
xor
fdivr
sub
jmp
imul
push
xorl
hlt
cmp
mov
cmpsl
push
and
jle
out
movsl
mov
mov
fadd
popl
mov
fsubl
adc
pop
fldenv
test
mov
push
xchg
and
xor
jbe
add
dec
xadd
adc
xchg
jne
out
cmpsl
xor
mov
das
mov
insl
cld
les
mov
inc
fistpll
fisubl
aas
test
or
into
xor
sub
mov
addr16
pop
cmp
dec
mov
loop
inc
les
fwait
es
out
ja
push
xchg
jmp
mov
es
dec
push
mov
mov
cld
insb
fsubr
icebp
popf
in
sahf
dec
test
push
adc
ljmp
popa
and
mov
push
outsb
lds
jbe
xchg
mov
data16
out
cmpsl
jae
adc
xor
cmp
jnp
loope
push
push
orb
xlat
sbb
insb
imul
jl
push
adc
push
movsl
addl
cmp
aam
fstp
cmc
cwtl
or
repnz
jle
je
lret
cld
lcall
arpl
sbb
adcl
imul
dec
imul
pop
inc
notl
mov
mov
push
outsb
jge
dec
test
in
das
pop
lock
test
cmp
xor
imul
mov
sbb
jle
mov
jle
xor
mov
lret
fsts
notb
sub
inc
adc
outsb
inc
divl
xchg
ficoms
or
mov
in
mov
adc
sbb
or
adcb
inc
push
xchg
test
lret
inc
pop
mov
add
add
lods
int
hlt
pop
in
je
lock
enter
cmp
pop
adc
movsb
fsubrs
loope
adc
out
lods
and
cltd
test
fcmove
pop
jg
fwait
jns
rcl
sbbl
shrb
les
dec
fldcw
stos
jnp
or
cmp
sub
sub
push
sub
cmp
bound
push
jl
cmp
sbbl
xor
adc
mov
push
mov
mov
push
imul
mov
les
sbb
and
dec
pusha
sahf
add
movsl
int
stos
jp
cmp
lods
popf
out
add
mov
adc
pusha
pop
lock
subb
mov
xchg
aaa
ja
movsl
jo
cltd
xchg
jns
stc
jmp
clc
jnp
js
push
cmp
pop
aam
inc
pusha
xor
pop
lea
adc
jnp
dec
xor
inc
add
xchg
cmp
imulb
push
inc
inc
cmp
dec
xor
inc
lret
jne
out
push
movb
xor
xchg
rorl
ficompl
mov
sub
push
mov
mov
xlat
les
roll
repnz
test
fdiv
es
movsl
sbb
sbb
sub
mov
xchg
push
mov
mov
cmp
fmulp
cmp
mov
out
and
cmc
push
cmp
std
jmp
mov
iret
pop
test
cs
int
clc
fwait
add
cmp
mov
cmp
or
cmc
sahf
pop
shrb
shl
adc
lret
xor
xchg
hlt
sbb
mov
inc
mov
dec
sub
mov
push
ds
mov
push
inc
out
icebp
cmc
bound
cwtl
dec
fidivs
iret
aaa
imul
ss
pusha
dec
ja
and
sbb
cmp
xor
add
repnz
fbld
adc
aad
xor
loopne
jne
lock
mov
imul
mov
shrb
ss
jmp
pop
lds
jge
jno
ljmp
loope
addr16
sub
adc
fldl
fisttps
call
sbb
stos
adc
and
jns
jge
repz
test
daa
lcall
push
popf
pop
mov
pop
mov
fildll
adc
int3
in
aam
cwtl
dec
in
pop
outsl
inc
rolb
fistl
and
pop
cld
xchg
mov
inc
xchg
test
div
ds
or
push
out
pop
dec
and
push
jmp
cmp
aam
sbb
aaa
sbb
jge
jmp
in
xchg
or
fistl
push
dec
adc
cmp
cmp
in
sarl
mov
jbe
pop
ror
mov
push
out
sbb
xchg
push
lret
cmp
sbb
sti
cs
xor
frstor
test
fldl
or
test
cmp
aam
and
cli
dec
sub
dec
test
pop
jbe
and
fwait
das
xchg
xor
fwait
sbb
stos
cwtl
lea
je
mov
xchg
jle
dec
rcrl
mov
push
movsl
pop
lods
jb
or
push
ljmp
mov
stos
xchg
inc
and
rcrb
adc
xchg
sub
xchg
mov
in
arpl
mov
pop
jl
dec
push
mov
pushl
pop
xlat
hlt
dec
jb
pop
out
add
dec
adc
call
vdivpd
into
test
xchg
lahf
mov
or
sub
shll
mov
push
jmp
xor
jae
outsb
cmpsl
pop
fsubrs
out
aad
mov
lock
add
xor
in
or
rcll
cltd
pop
cmp
shrb
aam
cmp
pop
popl
pop
adc
xorl
push
ljmp
add
ficoml
mov
push
shl
outsb
jae
lcall
or
lods
icebp
xor
xor
lds
mov
pop
add
pop
inc
add
call
adc
lahf
jns
add
shr
icebp
push
flds
stos
aad
jmp
xchg
and
out
sbb
inc
rcrl
test
inc
clc
mov
pop
sbb
pop
aaa
inc
or
or
outsl
arpl
jl
push
in
jle
dec
inc
add
test
lret
fildll
jbe
aam
xchg
sahf
sub
sub
jbe
lret
xchg
outsb
je
arpl
test
ds
lcall
xor
push
ret
pushf
lahf
xchg
adc
xor
outsl
inc
add
xchg
sub
lahf
lods
mov
add
sbb
mov
pop
dec
sbb
test
cmp
xor
and
stc
mov
sbb
xchg
ss
insl
in
cmc
rcrb
or
cmpsb
dec
jnp
pop
or
xchg
pushf
and
mov
enter
aaa
push
adc
inc
sub
fimuls
loopne
mov
xor
xlat
jbe
cmp
jg
xor
and
sbbl
movsl
and
lcall
adcb
pop
and
in
je
enter
movsb
mov
fisubl
scas
ret
lret
movsb
xor
outsl
mov
mov
je
lea
in
cwtl
inc
lods
out
mov
fucomip
jb
sub
je
dec
adc
dec
enter
mov
orl
dec
add
dec
or
push
push
aaa
pop
mov
xor
sub
jno
dec
inc
ret
test
dec
fnstenv
jmp
adc
sbb
jne
mov
mov
rol
sahf
into
sbb
push
call
inc
and
jo
pushf
adc
sbb
push
mov
ljmp
pusha
add
jmp
icebp
or
pop
push
pushf
bt
dec
inc
stos
lret
push
push
roll
push
jns
xchg
mov
testb
addr16
fldl
mov
and
notb
insl
sbb
nop
and
xor
iret
push
xchg
jle
rcrl
mov
add
insb
sub
and
push
fwait
leave
push
push
push
jg
js
add
jo
jnp
inc
inc
mov
sarb
push
insb
lods
xor
sahf
mov
mov
dec
out
push
inc
or
add
cmpsl
popf
call
mov
shlb
mov
test
inc
psraw
mov
and
pop
jp
lock
or
sbb
imul
mov
push
xor
push
mov
pop
xor
push
mov
inc
mul
mov
xchg
sbb
adc
mov
out
mov
enter
mov
dec
add
mov
or
jne
mov
dec
pop
int3
cwtl
pop
or
popa
sub
xchg
push
out
pop
push
loope
pop
pop
sarl
jns
pop
movsb
inc
das
xchg
or
mov
out
mov
jp
push
inc
sbb
jg
xchg
jns
jo
jne
push
sub
shrl
fwait
mov
out
shl
addr16
ljmp
enter
roll
pop
jl
std
cwtl
loop
pop
cltd
or
pop
push
shrl
xchg
cwtl
int3
ja
imul
repnz
out
aam
data16
cwtl
mov
mov
fisttpl
scas
pop
add
out
in
lret
repnz
popf
mov
in
es
inc
in
push
sbb
vcomisd
rol
sbb
jo
xorl
xchg
out
fistpll
and
mov
xchg
addb
mov
lret
shll
jl
idivl
sbb
arpl
cmp
sbb
adc
fisubs
cltd
lods
imul
cmp
cmpsl
cmc
cltd
mov
fisubrs
cwtl
mov
out
scas
mov
popa
cld
jns
movsl
pop
push
rorl
jp
int
lock
jp
ljmp
out
mov
loop
scas
std
stc
inc
mov
andb
shr
lret
sub
mov
imul
int3
in
pop
inc
dec
push
lock
mov
mov
dec
std
and
jb
cmpsb
movsb
push
inc
or
jns
popa
es
cltd
mov
cmp
mov
lds
and
adc
fxch
imul
jecxz
shr
lahf
mov
sub
cmpsb
jmp
xchg
int3
sub
test
ljmp
fsubrs
clc
outsb
sub
xchg
shrl
xchg
lds
cli
adc
fsts
ret
xchg
inc
das
mov
mov
push
stos
sub
lret
and
les
sbb
repnz
cmp
push
ja
cmp
sarl
xor
cmp
push
stos
std
dec
loop
loope
lock
shl
add
mov
fidivl
pop
jle
fdivrl
add
jno
cwtl
fcomi
lret
aas
mov
ds
in
fdivrl
js
shl
ja
aas
fdivr
lea
cmc
or
stos
icebp
and
push
incl
pop
mov
inc
push
and
add
or
ret
pop
sbb
sub
push
out
jmp
mov
and
inc
push
pop
stos
cmp
jmp
jg
ret
push
test
adc
cwtl
cmp
lds
bound
lods
mov
insl
dec
and
push
ficompl
repz
mov
or
jmp
inc
loope
filds
decl
sti
mov
cs
mov
aad
leave
outsb
int
xchg
inc
loopne
xchg
cmp
mov
mov
jle
or
mov
mov
ss
ror
leave
insl
roll
iret
push
xchg
and
jbe
js
jmp
in
mov
sti
push
ss
xchg
mov
sti
adc
jns
sub
pusha
in
shll
push
fildll
fstpt
pop
cld
dec
fldcw
inc
sub
out
mov
insl
enter
sarb
int3
pop
les
mov
pop
cmpsb
int
sub
ficomps
daa
or
aad
cld
jg
and
pop
ja
fldenv
jb
sbb
push
sarb
xor
adc
or
mov
cltd
mov
sbb
out
mov
cmp
jnp
clc
xchg
xchg
pop
mov
aad
pop
sbb
xchg
je
mov
xor
sbb
decb
outsl
cmp
adc
les
or
fstps
es
push
popf
out
cmp
lods
divl
fisttpl
adc
popf
inc
in
add
lea
repz
pop
js
pop
mov
js
imul
push
aas
add
mov
pusha
scas
imul
or
adc
sahf
inc
stos
test
jecxz
andb
sbb
xor
test
pop
shrb
outsl
xchg
pop
repnz
push
pop
adc
sbb
into
sbb
in
les
dec
adc
hlt
popa
sub
leave
movsb
lahf
jle
jle
fimuls
pusha
shl
inc
aam
push
xor
movsl
clc
cmp
les
sub
add
lret
xor
mov
cmc
arpl
xchg
pextrw
mov
xor
aad
leave
add
mov
loop
inc
and
mov
mov
add
ss
cmpsb
xchg
push
pop
xor
dec
jnp
jae
rol
loope
mov
and
cltd
push
ja
pop
mov
mov
pushf
push
insl
icebp
shlb
clc
push
pop
adc
adc
lods
out
xchg
shll
cmp
mov
setne
pop
js
adc
iret
pusha
pop
pop
arpl
pop
out
in
in
fisttpll
inc
insl
add
out
popa
js
in
es
out
xor
sub
popa
mov
pop
sub
add
inc
inc
pop
nop
inc
push
fisttpl
sub
in
rclb
add
or
inc
je
jns
pop
test
ds
sbb
xchg
psrld
aam
inc
lock
xchg
in
and
loop
cmp
ja
jle
mov
xchg
mov
lods
push
mov
mov
test
and
fidivs
cmp
xchg
loope
add
and
xchg
cmpsb
movsl
mov
jae
lret
cwtd
outsb
mov
push
or
inc
js
outsl
sti
push
xor
dec
rclb
dec
push
int
push
rcl
inc
jg
jmp
jp
inc
xchg
mov
loopne
lsl
cli
es
ljmp
ror
rclb
pop
jl
aam
sub
xchg
imul
test
in
xor
add
loop
repz
mov
mov
sub
in
in
add
in
arpl
faddl
xlat
push
pop
xchg
out
out
pop
inc
jae
or
push
aas
arpl
ljmp
sbb
ret
adc
push
popf
fs
lock
pop
ret
call
xor
pop
inc
loopne
inc
xor
dec
xchg
testl
xchg
or
sbb
fldcw
sub
adc
pop
iret
std
sbb
lods
mov
in
lods
pop
out
add
add
sub
sub
les
cmp
mov
adc
rcrb
lods
popf
pop
lcall
ss
mov
push
jecxz
add
scas
sbb
cld
out
repz
mov
cmp
cmp
or
cmp
jge
les
push
lcall
cmp
loope
out
pop
xchg
popf
mov
adc
mov
lea
dec
cmc
dec
add
xchg
pop
mov
push
pop
and
call
out
cmp
sahf
cs
pop
fdivrl
push
mov
pop
lcall
sub
out
aaa
xchg
mov
stos
enter
cmpsb
mov
xchg
aad
dec
es
mov
pop
mov
bound
mov
sbb
and
fiadds
sti
data16
push
add
mov
fs
xchg
les
addr16
out
add
xor
sbb
pop
je
cmp
mov
data16
popa
xchg
aam
push
movntps
dec
lds
jno
ljmp
cld
cwtl
insb
imul
cs
jo
mov
data16
xchg
loope
pop
mov
lcall
adc
inc
mov
mov
das
scas
push
xchg
inc
fstp
lcall
dec
es
xchg
std
out
mov
sti
pop
mov
mov
pop
pop
push
dec
addb
xor
sub
popf
xchg
dec
cmp
mov
movsl
scas
js
push
push
lock
mov
popf
gs
and
pop
repz
dec
out
mov
shlb
sub
imull
imul
int3
clc
inc
jnp
lea
icebp
loopne
mov
mov
mov
inc
cltd
cwtl
xor
add
in
jl
xchg
fucomip
pusha
jmp
sbb
mov
bound
sub
jge
sub
pop
rcl
fisttps
jo
pushf
xor
adc
mov
pop
xchg
jecxz
daa
push
push
inc
stos
jns
push
test
mov
xchg
xchg
data16
push
ffreep
cmp
fwait
xchg
pop
cld
jo
aad
sub
push
iret
fcoml
push
rol
sub
dec
xor
jo
or
mov
nop
movsl
call
fldz
mov
iret
dec
sbb
xchg
aas
inc
cli
ljmp
cli
rcll
vfnmsubpd
arpl
lcall
jnp
imul
rclb
fildl
jecxz
cltd
into
lods
ret
js
and
stos
test
or
in
xchg
ret
xchg
cmp
fisubrl
pop
jle
in
push
adc
repz
or
lahf
mov
mov
sbb
pop
jle
psraw
mov
jecxz
sbb
pop
push
mov
fwait
loopne
mov
enter
sahf
pusha
adc
pop
pop
sbb
dec
pop
mov
into
pop
std
stos
out
mov
lods
int
xor
rcrb
out
cld
push
enter
dec
jl
lods
into
lock
push
push
fsub
dec
dec
xchg
pop
bound
nop
lcall
stos
mov
outsb
and
dec
sbb
lds
mov
mov
pop
addr16
fmuls
pop
rolb
mov
sarl
in
ljmp
pop
sbb
dec
dec
cltd
ret
xchg
jp
das
push
add
mov
lret
subb
push
push
mov
cld
insb
es
ja
rcr
in
ret
mov
sbb
or
sbb
sbbl
pushf
sbb
hlt
mov
jmp
inc
sub
mov
ret
cmpsb
in
sbb
cli
dec
aam
aad
dec
enter
or
pop
bound
js
cmc
pop
lods
mov
lcall
fs
push
mov
cmpl
add
pop
outsl
jp
je
imul
outsl
sub
scas
fisttps
test
sti
addb
add
and
lods
xchg
add
icebp
scas
cmp
push
lods
out
ret
setns
push
lret
xchg
inc
scas
insb
jl
leave
adc
inc
out
pop
adcl
arpl
scas
mov
add
inc
dec
pop
and
std
adc
pop
in
scas
and
imul
push
nop
lock
rcl
sbb
ror
sub
push
mov
and
pushf
addr16
insl
clc
xor
mov
es
push
inc
xchg
jns
xlat
push
stos
and
push
aaa
mov
cld
loop
dec
not
cmpsl
stc
in
xor
add
cltd
stos
adc
xor
int3
pop
xchg
sti
push
arpl
mov
mov
add
add
pop
rorb
scas
int3
mov
cltd
inc
outsb
cmpsl
xor
jg
adc
jle
seto
fbld
ret
mov
jle
rorl
outsb
shlb
mov
mov
es
lock
jae
and
call
scas
sub
fwait
jge
pop
ret
es
jmp
and
mov
mov
xlat
pop
daa
sub
or
je
test
sub
and
add
jno
add
lock
cmpsl
add
sbb
or
cltd
sarb
rcrl
into
ret
popf
mov
pop
test
cmp
jecxz
test
or
adc
xchg
fmuls
loope
inc
or
sub
jb
loop
cmpsb
das
xor
aaa
es
mov
pusha
jne
adc
pop
repz
push
popf
cmp
in
mov
test
ss
loope
jl
dec
fst
rclb
fldcw
sub
sarl
in
mov
pop
jmp
mov
xchg
cli
sbb
sub
sbb
push
pop
in
cmp
ss
add
mov
ret
out
cs
je
ret
out
gs
dec
push
jl
mov
lods
push
insl
xor
mov
mov
sub
xchg
lahf
stos
sub
pop
jnp
adc
fisubl
xor
cs
shrl
mov
ret
test
push
jecxz
mov
pop
aas
and
inc
push
mov
cli
jb
lock
out
js
cmc
jp
mov
adc
test
xchg
xor
push
cmpsl
mov
ret
std
sub
ja
cltd
jnp
stc
add
nop
repz
dec
xor
inc
cmp
cltd
mov
lahf
fcompl
lock
xchg
es
ss
push
pop
push
rorb
push
jae
jecxz
add
call
jle
nop
das
fwait
sqrtps
fsub
xor
insl
insl
ss
or
icebp
pop
cmp
leave
pop
scas
fsubrp
in
mov
or
pop
fidivrs
or
jae
enter
jle
out
lock
dec
adc
arpl
mov
int
test
repz
das
add
movsl
inc
cli
push
and
aaa
sbb
mov
cmp
adcb
mov
sbb
testl
imul
sbb
push
xorb
push
inc
mov
pop
aam
js
mov
sub
shll
mov
cmpsl
cli
in
dec
int
sub
mov
scas
into
jmp
cmpsl
mov
push
in
adc
push
into
push
rcll
rorl
pusha
inc
cmp
sub
push
sub
add
and
xchg
inc
dec
test
lods
push
jbe
loope
movsb
sub
call
frstpm(287
mov
into
mov
outsb
enter
mov
nop
jbe
xchg
enter
test
push
mov
sbb
mov
and
insl
add
inc
pushf
mov
push
xchg
adc
icebp
ljmp
jmp
xchg
pop
xchg
daa
in
imul
int
cmpsb
popf
cmp
pop
ret
shll
xor
roll
or
sub
nop
shlb
jo
dec
das
push
movsb
mov
cmp
and
xchg
mov
mov
cli
push
in
js
rclb
filds
push
sub
xor
lods
lds
enter
adc
std
outsl
xor
insl
or
cmc
cli
or
lret
dec
or
mov
ljmp
jg
mov
jl
jno
insb
movsl
jbe
sti
jae
pop
mov
xchg
js
aaa
add
xchg
ds
cwtl
and
mov
sub
mov
imul
push
lods
out
mov
dec
loop
test
call
sti
inc
std
mov
jg
lret
mov
push
enter
jno
leave
ds
adc
mulb
mov
aas
pushf
inc
cmp
lds
pop
scas
shr
outsl
les
rol
pop
dec
mov
cmpsl
jno
xor
ds
pushf
shll
adc
pop
cs
shlb
popa
pop
adc
ss
out
pop
popa
inc
xor
push
inc
clc
push
sub
test
push
in
push
or
lahf
ret
sub
vmovss
int3
scas
push
push
pop
xchg
or
aad
ds
push
sub
jb
lret
add
in
xor
pop
sbb
aam
cmc
push
or
cmp
xchg
mov
cmpsl
sbb
cmp
add
in
mov
outsb
xor
xchg
test
push
insb
mov
test
pop
jle
shl
cmp
jne
mov
pinsrw
add
hlt
insb
jo
lret
rorb
ljmp
push
sub
das
dec
icebp
sbb
stos
das
or
mov
jbe
or
xor
stos
gs
ljmp
jno
lahf
cmp
and
push
mov
cmovs
out
scas
sbb
or
fwait
mov
test
mov
jle
cld
adc
bound
sub
pop
popf
mov
stos
in
push
cmp
fisubrs
mov
pop
sub
sbb
jp
jp
sub
outsl
push
inc
inc
clc
push
inc
mov
mov
xchg
popf
add
add
aad
scas
imul
fadd
cmpsb
fcompl
inc
fwait
inc
add
jae
pop
mov
test
mov
add
out
stc
push
clc
repz
repz
xor
mov
clc
mov
jae
aas
int3
adc
loopne
gs
jne
jmp
ret
mov
sahf
mov
lds
outsl
push
jb
xchg
out
or
sti
pushf
lret
sbb
gs
outsl
and
push
daa
push
pushl
movsb
or
jle
mov
rep
test
lcall
inc
jb
mov
jns
lahf
mov
mov
mov
mov
cmp
mov
shrl
sub
xor
jbe
sub
andl
adc
mov
and
add
or
mov
push
push
mov
roll
add
cmc
imull
cmp
clc
mov
xor
sub
dec
mov
mov
hlt
xchg
sbb
imul
inc
rcl
icebp
fldt
lods
and
push
stos
int3
xor
and
out
adc
loopne
pushf
pop
imul
in
mov
shl
mov
cmp
cmpsl
mov
loop
mov
mov
insb
mov
push
adc
shll
movsb
addb
out
movb
movsl
pusha
ficoml
fnstcw
and
or
or
nop
iret
stc
cmpsb
aam
rorb
addl
mov
aaa
xor
stos
xlat
or
neg
pop
fldcw
mov
xor
insl
loopne
or
fadds
push
loopne
into
and
adc
imul
aaa
sub
push
inc
adc
push
int
xchg
ret
test
mov
xchg
push
aaa
push
call
nop
arpl
rolb
repnz
sbb
xchg
shlb
xchg
repnz
pop
jns
mov
nop
ret
xchg
into
std
jmp
xchg
xor
dec
mov
jle
fimuls
cmp
or
fbld
fisttps
icebp
aam
cmp
enter
scas
inc
aam
fldenv
or
mov
insb
jns
daa
xchg
jbe
imul
mov
stc
or
scas
ss
or
aas
inc
paddusb
inc
loope
sti
nop
int
jbe
fiadds
jne
pop
aad
mov
ljmp
mov
jecxz
jp
sub
dec
sbb
push
or
add
test
ret
jo
nop
stc
test
mov
test
test
mov
addl
push
test
mov
pop
mov
ss
and
xor
filds
pop
xchg
cmp
loopne
jl
adc
sarb
in
xchg
cld
push
mov
lahf
fs
xchg
jbe
nop
loop
and
cs
mov
cmp
ss
fldt
xor
fdivrp
lahf
cwtl
jge
xchg
mov
addr16
mov
aaa
mov
adc
mov
cmpsl
fdivr
test
xor
popf
lret
push
addl
pop
outsb
lahf
das
mov
in
adc
pushf
sbb
xlat
test
push
mov
cmp
mov
cmp
and
js
clc
popf
movsb
hlt
movsb
out
rol
out
aad
cmp
decb
test
outsb
cmpsl
mov
enter
dec
incb
scas
and
js
inc
xchg
mov
sti
jecxz
clc
or
inc
push
int3
jmp
adc
pop
sub
jl
mov
or
std
sub
pop
in
fdivl
sbb
xor
das
xor
push
imul
inc
mov
movsl
add
movl
cmc
add
test
int
sbb
pop
xor
int3
lds
push
test
cmp
lods
inc
dec
mov
push
inc
orl
adc
mov
nop
daa
dec
scas
fcmovne
inc
fs
outsl
or
and
dec
outsl
jbe
aas
sub
jnp
jne
add
dec
addr16
xor
sbb
movsl
sbb
imul
test
lret
mov
xchg
pop
pop
mov
leave
and
mov
ret
test
mov
and
pop
popf
in
inc
aaa
fisubs
mov
push
lea
and
sbb
adc
adc
test
in
sbb
adc
aas
repnz
lods
xchg
push
inc
push
mov
dec
adc
cwtl
sbb
pushf
push
mov
fwait
sbb
imul
daa
adc
ret
or
daa
sbb
pop
sahf
icebp
ret
loope
xchg
dec
inc
movsl
xchg
popf
test
mov
aam
xchg
or
sahf
fldenv
pop
ss
xchg
lods
dec
add
fimuls
pop
dec
adc
mov
mov
fldenv
rcll
pop
xchg
test
mov
out
inc
add
add
or
ficompl
ja
shll
jmp
add
ljmp
aas
xchg
stc
xchg
push
lret
into
cmp
sbb
in
push
mov
pop
cmpsl
repz
aaa
sti
push
sbb
nop
call
ljmp
jp
das
or
stos
or
push
pop
ja
sbb
dec
lahf
rclb
xlat
mov
lea
mov
imul
mov
dec
adcl
mov
or
lahf
lock
loopne
ret
into
int3
clc
lea
out
pop
lahf
fdivrs
cmc
test
test
push
out
inc
adc
adc
repz
loope
xor
push
fbld
sub
cmp
aam
rclb
pop
int
mov
inc
test
ja
data16
mov
lret
cmpsl
fwait
mov
or
cmpsl
jecxz
pop
pushf
test
scas
xor
push
jns
mov
jge
repnz
mov
jl
popa
mov
push
popf
filds
and
pop
pop
fdivrs
dec
out
out
mov
sbb
and
mov
sbb
lea
sub
push
pop
test
fnstsw
pop
cmp
ss
mov
addb
mov
mov
xor
mov
add
dec
inc
popa
int
lods
in
cmp
push
in
ds
jne
and
xchg
in
xor
mov
cld
insl
adc
out
fidivrl
iret
cmp
cwtl
in
jl
jmp
push
pop
fwait
int3
or
scas
ds
mov
pop
out
fwait
jb
rcr
fimuls
xchg
sahf
cmp
mov
push
pop
sbb
scas
movsb
add
jg
jl
dec
iret
and
mov
adc
or
decb
mov
das
in
int
xchg
jns
dec
aaa
aad
dec
shrl
addr16
data16
mov
sub
sbb
mov
fisubrs
pop
rorb
cmpsl
aam
mov
into
xchg
add
shrd
lret
popf
lahf
xchg
push
dec
mov
cld
mov
pop
aam
ja
xchg
dec
cli
jae
leave
lock
mov
push
xor
add
sbb
fsts
mov
xchg
daa
shll
add
push
icebp
xchg
fmulp
xor
popf
pop
fs
mov
cmp
or
loopne
jns
xor
sub
pop
mov
in
and
jmp
ss
fs
lock
and
rorb
sbb
dec
pop
jns
aas
add
lock
pop
repz
push
push
shll
out
cltd
movsb
cmp
inc
js
push
es
jl
dec
je
int
cmp
and
sbb
add
dec
test
je
jl
stos
shr
enter
lods
popf
pop
xlat
loopne
pop
out
cmp
rorl
or
loopne
dec
addr16
pop
aaa
pop
aas
adc
and
and
js
xor
mov
fldcw
repz
out
mov
gs
fidivl
out
sub
movsb
pop
pop
sub
adc
fdivs
mov
test
out
js
or
mov
push
mov
loopne
sub
pop
loopne
push
dec
dec
ret
pop
and
xlat
jle
inc
pop
fstpt
outsb
in
popa
xor
orb
iret
mov
or
sti
mul
in
cmp
cmp
mov
and
add
or
sbb
leave
dec
dec
inc
jae
cli
and
lock
es
out
sub
push
cmpsb
fiaddl
mov
pop
cmp
sar
xchg
add
inc
xchg
call
mov
mov
cmc
movb
jns
lods
mov
test
inc
push
testb
ret
loopne
add
jmp
xor
test
mov
xor
pop
mov
lcall
jge
or
sub
cs
js
aam
adc
mov
mov
insb
mov
jbe
insb
xchg
pop
jmp
cmp
adc
inc
pop
scas
add
xor
adc
or
sti
adc
xchg
mov
int
sub
mov
repz
and
repz
repnz
pop
jl
add
inc
in
cmp
mov
sbb
imull
push
jnp
jmp
push
cmp
daa
aas
sub
mov
cmp
adc
adc
fcom
in
movsl
sbb
lock
mov
test
cmp
or
adc
inc
ret
cmp
mov
push
and
fwait
dec
hlt
cmp
push
fwait
pop
pop
mov
je
pop
shrb
and
test
adc
push
and
dec
out
mov
sub
mov
je
lods
adc
pushf
pop
pop
cwtl
or
andl
mov
out
daa
push
add
add
xchg
lock
jae
and
inc
adc
push
mov
cltd
in
lret
pop
pop
inc
aaa
push
ret
xor
cld
adc
pop
xchg
push
scas
mov
fs
push
xchg
mov
push
mov
popf
dec
fldenv
cmp
jnp
pop
xor
pop
push
sub
cmp
add
mov
fldenv
popf
and
lods
fimuls
out
pop
icebp
ret
xor
sbb
shlb
pop
cmp
pop
sahf
bound
outsb
fdivrl
movsl
fldenv
jmp
or
push
mov
pushf
mov
and
cmp
rcl
mov
mov
sarl
jae
lcall
jl
fldl
sub
sbb
add
xchg
sub
xchg
ds
lea
test
int3
les
jnp,pn
inc
jae
stos
rolb
ficoml
frstor
push
add
xor
mov
cmpsb
cmpsb
cli
mov
shl
rorb
dec
popa
xlat
aas
shr
and
inc
mov
jns
mov
addr16
pop
add
xchg
mov
test
jge
jp
mov
dec
mov
inc
lods
aas
hlt
sub
inc
push
jecxz
aam
push
inc
sub
ficompl
cmp
jp
cmp
fcmovne
mov
mov
rcrb
adc
test
xor
jge
add
jp
sbb
pop
int3
sub
test
jae
xchg
or
shrb
stc
fists
mov
int3
inc
outsl
hlt
push
push
add
daa
jns
lds
pop
into
scas
cmp
scas
xchg
in
lock
or
popf
aaa
push
ss
pop
mov
or
push
dec
subb
or
adc
fldt
mov
shr
mov
test
jo
adc
cmp
leave
icebp
outsb
cmpsl
mov
inc
add
mov
and
add
clc
dec
imul
in
xchg
or
xor
lcall
mov
cld
mov
ds
xchg
imulb
add
stos
jo
data16
sarl
mov
dec
xor
mov
xchg
stos
into
aam
jae
movsb
ret
inc
lods
jo
and
in
outsl
xchg
push
outsb
and
out
dec
sub
push
sbb
mov
lcall
inc
xchg
imul
add
cmp
dec
mov
adc
inc
mov
daa
mov
loope
lretw
scas
mov
mov
sbbl
xchg
adc
cs
add
mov
faddp
adc
dec
jns
cmpsb
popf
ret
sub
aad
and
je
outsl
inc
loop
cmc
pop
out
mov
mov
or
and
fldcw
mov
ja
and
xor
mov
mov
ss
mov
sti
mov
stc
rcrl
inc
and
mov
jmp
incl
popf
movsb
dec
pushf
xor
rclb
std
neg
push
adc
outsl
lea
push
or
xchg
nop
xor
mov
inc
mov
les
cs
pop
mov
mov
and
cltd
cld
out
fldcw
es
mov
jne
shlb
and
jecxz
mov
or
lods
lea
add
dec
mov
sbb
jecxz
lcall
or
pop
mov
xor
mov
cmp
pop
insb
int
repnz
test
clc
cltd
imulb
out
in
pop
add
cmp
fs
jae
imul
call
out
mov
divps
pusha
dec
mov
mov
jb
rcrl
adc
shlb
sub
xchg
push
pop
push
mov
dec
mov
add
xor
jnp
imul
inc
cmp
xchg
ljmp
outsb
push
lock
add
mov
mov
mov
clc
jp
pop
adc
cmc
sub
aaa
sub
fistl
adc
mov
mov
test
pop
jo
aas
lcall
or
aad
mov
pop
xchg
iret
icebp
add
arpl
movsb
sub
push
lret
test
sbb
add
pop
cmp
cs
dec
or
push
pop
adc
pop
add
and
adc
shl
lret
adc
sub
mov
push
pusha
popa
or
mov
mov
inc
mov
mov
shl
jecxz
das
mov
sbb
out
mov
mov
cvtps2pi
movsl
mov
mov
pop
dec
mov
push
mov
iret
add
mov
fisttpl
mov
pop
cltd
jae
popa
xchg
or
stos
outsb
pusha
and
sahf
outsb
lret
dec
pusha
adc
sbb
mov
inc
mov
push
cmc
jae
or
and
leave
movsl
mov
test
ja
stos
adc
push
fs
add
dec
test
cmc
mov
cmpsb
jae
pop
stos
lret
aaa
stos
lret
or
mov
dec
mov
fistl
cmp
jae
fcompl
addr16
lea
ficompl
cmp
data16
pop
or
fwait
fs
loop
gs
call
popf
push
adc
pop
test
push
out
inc
xchg
sti
aaa
dec
sbb
cwtl
or
out
cmpsl
cli
or
pop
insb
add
cmc
or
inc
adc
mov
stos
adcl
sub
andl
in
in
add
fdivs
rol
fsubrs
dec
lods
xchg
cmp
negb
dec
loop
lock
test
hlt
sbb
int
pop
sbb
adc
cli
movsl
loopne
jnp
jl
loope
cmp
mov
mov
xchg
mov
es
repnz
cmc
pop
lahf
jne
gs
inc
or
cmp
int
in
test
cmp
andb
fiaddl
xchg
addb
out
cmpl
push
cmpsb
fisubs
mov
stos
js
lea
std
popf
int
sahf
lcall
insb
rcl
push
icebp
jg
sub
iret
scas
outsb
dec
and
xchg
mov
data16
pop
out
push
scas
scas
or
sub
cltd
adcl
jbe
stc
test
jecxz
das
pushf
rcrl
fucom
push
pop
jle
add
cs
cmp
aas
lret
mov
stc
les
mov
dec
inc
mov
sbb
mov
stos
popa
subb
in
loopne
and
es
mov
mov
das
imul
sbb
mov
into
int
mov
sbb
sbb
pop
adc
xor
xor
das
out
aaa
adc
shll
inc
in
call
arpl
daa
jo,pn
xor
roll
clc
mov
sub
jbe
and
sub
and
nop
mov
pop
push
adc
mov
cli
cli
fdivrl
cld
aaa
xor
sbbb
and
in
pop
or
outsb
sub
dec
pusha
in
pop
addr16
jb
inc
fbstp
bound
shl
scas
outsb
rdpmc
aad
ss
shlb
dec
xchg
inc
or
or
push
stos
adc
das
clc
push
sti
jecxz
sub
fisttpl
rorl
insl
mov
cmpsl
mov
int
ret
sub
dec
cmp
in
push
cmp
lret
ds
popf
insl
test
insb
addl
into
data16
test
mov
sbb
or
rolb
js
mov
jne
pop
shlb
sbb
or
repz
sub
inc
and
ret
test
ret
pop
insl
lods
je
jo
insb
adc
lret
jecxz
dec
jne
ss
mov
incl
les
out
hlt
dec
pop
add
mov
int3
inc
dec
cmpl
enter
fiaddl
clc
mov
inc
insl
insl
mov
insb
ss
adc
test
insl
mov
mov
xor
dec
dec
hlt
xor
fwait
xchg
mov
push
mov
das
stc
dec
pop
jo
xchg
pop
mov
leave
imul
ljmp
loop
mov
mov
mov
fstps
arpl
and
jno
sbb
inc
js
out
pop
cmpsl
loopne
in
mov
aad
adc
mov
addb
pushf
sbb
je
pop
jp
xchg
cmp
orl
outsl
ret
xchg
cmp
xchg
lahf
pop
lods
xchg
inc
pusha
test
jno
or
test
mov
dec
pop
pop
or
add
cmp
and
dec
fnstcw
hlt
aas
pop
roll
or
inc
or
clc
icebp
fadd
leave
fidivrl
ret
xchg
loope,pt
push
mov
jno
or
inc
push
test
pop
and
cltd
and
movsb
mov
xor
aaa
inc
insb
jno
jnp
test
out
lods
fimuls
push
push
cmp
cmp
mov
cwtl
test
cmp
jl
cmp
sub
mov
cmpsl
xor
pushf
push
mov
andb
sub
addr16
fbld
fnsave
dec
loopne
inc
js
sub
push
sbb
add
xlat
pop
je
inc
mov
inc
cmp
inc
loop
sbb
shrl
dec
adc
pop
mov
mov
ret
testb
ja
test
hlt
adc
jnp
enter
lcall
sbb
xor
movsb
mov
ljmp
in
push
inc
add
out
sbb
scas
add
and
inc
and
mov
mov
in
ror
imull
mov
fadds
movsb
xchg
test
pop
imul
mov
xor
dec
ret
add
sbb
pop
dec
lcall
movsl
inc
jno
cwtl
cld
insl
leave
outsb
rclb
mov
popf
jb
pop
sub
sub
stos
and
mov
push
jge
lret
jbe
xchg
jns
jno
dec
stos
mov
nop
push
mov
xchg
jp
push
pop
xlat
mov
or
lock
lods
push
call
lcall
icebp
daa
nop
add
mov
mov
or
mov
mov
mov
adc
aaa
inc
es
inc
leave
scas
cmpsl
push
clc
mov
ja
iret
cmpsb
stc
int
mov
and
xcrypt-ctr
cmpsl
pop
sbb
cltd
out
and
lret
cmp
inc
out
loope
in
fsubl
or
aad
lret
mov
jb
xchg
loopne
mov
mov
icebp
in
xor
adc
xchg
pop
movsb
vpunpckhbw
inc
ss
dec
pop
fists
in
mov
fisubrl
fdivr
hlt
adc
cli
sbb
out
cltd
inc
insl
rorb
jp
mov
xlat
mov
jle
int
mov
aad
hlt
add
add
pop
add
mov
cltd
mov
jae
imul
mov
mov
leave
jae
mov
ss
ljmp
in
fidivrl
nop
jnp
mov
scas
jmp
cmpsb
divb
aas
rorb
lahf
es
sbb
xchg
insb
push
and
js
mov
dec
mov
ljmp
dec
jle
jp
or
pushf
push
adc
xor
inc
pop
inc
mov
test
xchg
nop
jo
jmp
mov
sahf
call
mov
leave
rorb
mov
stos
pop
mov
hlt
mov
push
push
cwtl
filds
sti
ret
mov
xor
dec
pushf
pop
sbb
mov
and
cli
add
push
inc
out
pushf
or
subl
mov
gs
pop
adc
arpl
scas
jmp
sub
add
cmpsl
fwait
test
scas
les
dec
pop
jmp
loop
repnz
sbb
jmp
xlat
xor
inc
mov
push
clc
shll
lcall
dec
loopne
xchg
movsl
les
pop
test
jle
call
or
outsl
push
loop
mov
test
sbbb
adc
inc
mov
sbb
imul
sbb
lcall
mov
mov
inc
inc
jns
sub
sbb
jl
es
inc
sub
fdivl
lret
mov
pop
mov
cwtl
pop
adc
adc
xor
negl
sti
dec
cmp
pop
xor
push
lds
mov
in
sbb
das
repnz
lcall
nopl
cmp
divl
fidivl
push
inc
repz
in
in
roll
mov
lcall
stc
ljmp
sbb
dec
loopne
imul
imul
push
in
cmc
mov
push
push
mov
add
and
cmc
and
push
cmc
test
in
pop
adc
jmp
into
aas
arpl
pop
ror
loop
pusha
adc
enter
insl
lock
push
arpl
jg
push
pusha
xor
je
and
dec
mov
stos
jecxz
pusha
cmp
adc
inc
cmpsl
lcall
popf
add
nop
sbb
mov
aam
xor
sub
rclb
mov
pop
add
pop
mov
sahf
mov
cwtl
call
or
scas
cmp
stc
jg
or
push
push
jns
icebp
xlat
lods
push
dec
cmp
repnz
movsl
add
pop
push
iret
and
mov
mov
fsts
fwait
cmp
imul
pop
cmp
fs
xor
xchg
imul
xchg
jmp
scas
mov
es
loope
cld
out
iret
dec
lcall
std
pop
mov
test
aas
loope
pop
rcll
push
xor
icebp
cltd
cmc
adc
lret
out
add
hlt
fsubl
fwait
sub
lock
mov
outsl
hlt
xor
xlat
into
fdiv
enter
test
popf
pop
rolb
adc
repnz
sub
aas
xchg
push
outsb
lahf
pop
out
lcall
xchg
and
push
stos
bound
outsl
rcrl
negl
test
pop
push
jg
push
inc
xchg
or
fimull
ret
scas
nop
and
pop
mov
sub
das
sarb
lret
inc
cmp
jae
adc
pusha
cmp
sti
and
je
xor
or
nop
fisubrl
insl
sti
or
sbb
jo
mov
ss
mov
xlat
dec
inc
adc
mov
inc
movsl
mov
movsl
scas
sub
lahf
inc
addb
push
leave
pop
lods
inc
cmpsb
jle
aad
ret
loopne
mov
insb
mov
adc
add
inc
das
pop
test
push
popf
sub
arpl
mov
sbb
aad
xchg
sub
lds
or
div
cmp
cmc
sub
mov
outsl
arpl
daa
out
and
repnz
clc
stos
adc
pop
sbb
add
and
jmp
lock
shlb
lds
push
lods
pop
mov
bound
sbb
and
pop
mov
sub
mov
stos
cmp
adc
or
arpl
and
lods
fisttps
leave
mov
addb
jg
loope
pop
mov
ljmp
and
enter
pop
sub
aad
imul
int3
popa
js
adc
pushf
sub
dec
xchg
les
fcompl
stos
test
shll
into
mov
jle
aad
or
sbbb
pop
adc
pop
mov
orb
cs
pusha
fists
push
sub
pop
xor
mov
bound
ret
sub
jl
pop
cs
les
or
inc
dec
in
jno
adc
or
mov
sub
jmp
aam
push
sahf
push
outsl
decl
xor
or
push
dec
dec
outsl
push
jmp
or
vpmaxub
je
leave
cli
add
or
pop
test
xchg
add
int3
xor
xchg
js
mov
pusha
mov
lock
add
testl
adc
lahf
jne
jg
inc
cld
adc
adc
insl
or
ljmp
xlat
mov
or
cmpsl
fmuls
in
pop
imul
and
mov
out
in
mov
mov
and
popa
stos
jecxz
sub
adcl
pop
mov
mov
sbb
mov
divl
les
adc
pusha
cmpsl
or
xchg
xlat
pusha
jae
dec
and
outsl
fdivs
out
mov
imul
cld
sbb
divl
movsb
ja
scas
lahf
in
cmp
xchg
cmpsl
movswl
or
or
roll
repnz
arpl
pop
mov
data16
jns
aam
lock
mov
sbb
scas
sub
sbb
or
or
xchg
ljmp
orl
js
cmc
ljmp
xor
fucomip
add
xchg
scas
icebp
jno
das
lea
mov
push
je
daa
mov
mov
xor
xchg
cs
rolb
xchg
mov
push
test
and
cwtl
in
mov
dec
cmpsl
adc
xchg
pop
test
cmpsl
sti
push
pop
shrb
mov
dec
sbb
scas
or
and
jp
mov
mov
cltd
or
fistpl
jg
fiadds
inc
nop
aam
add
lret
push
cmpb
js
inc
inc
loop
nop
jp
jecxz
adc
dec
mov
inc
movsb
lods
icebp
nop
jp
sti
mov
int
mov
fnsave
add
fidivl
xchg
mov
push
daa
fwait
cs
loop
repnz
xchg
lods
mov
jmp
xor
dec
stc
fmul
inc
subl
add
mov
add
mov
stc
cld
mov
cmp
sbb
pop
mov
pushf
jp
mov
outsb
das
std
jmp
and
les
pop
sub
inc
or
insl
and
mov
or
mov
test
sub
inc
jp
shl
mov
pop
jge
sahf
cmp
psraw
mov
xchg
mov
es
aam
jl
rclb
push
lods
pop
icebp
push
push
xor
jmp
call
lahf
call
or
inc
xchg
shrl
testb
mov
inc
clc
ss
fisubl
push
lret
int
push
ret
or
ja
push
push
mov
test
pop
lret
mov
pop
fbstp
xchg
test
or
lods
movsb
xlat
scas
fidivrs
les
jne
imul
or
pop
and
fsub
ds
lds
gs
sub
movsb
sahf
xorb
mov
aad
jl
insl
jmp
mov
add
hlt
outsl
aam
aam
and
push
xor
loop
and
in
jge
negl
imul
or
mov
insl
jecxz
out
jl
ret
rcl
push
movl
push
inc
sahf
mov
or
mov
out
xor
add
push
lods
xchg
mov
mov
test
outsb
mov
jecxz
in
div
icebp
fldl
mov
pop
int
imull
lea
sbbb
sub
push
xchg
movsl
adc
aad
jle
rcl
shrb
mov
test
mov
outsb
sbb
lds
ja
cmp
out
mov
mov
jns
jl
aas
mov
inc
adc
ja
mov
imul
mov
push
scas
std
pushf
lock
arpl
jb
fcmovnb
out
add
push
pop
inc
xor
std
inc
and
enter
or
icebp
sbb
out
vaddsd
ror
mov
or
xor
mov
push
pop
gs
pop
daa
adc
mov
fwait
enter
cmp
sub
shl
int
jne
inc
dec
les
out
cli
xlat
enter
loope
fistpll
daa
jo
pushl
lret
cs
int
jbe
mov
jno
mov
sub
pushf
ret
test
test
sub
push
push
mov
lret
add
stos
xor
mulb
push
lods
loopne
test
mov
into
xchg
xchg
sbb
push
push
std
add
adc
pop
sub
test
lret
add
orl
jg
into
fmull
xchg
xchg
cmp
adc
adc
push
in
lahf
and
ds
popf
cmp
pusha
cmp
shll
jo
ja
adc
mov
sbb
lock
dec
cmp
jo
and
mov
fists
xorb
add
dec
or
loopne
mov
adc
addl
sub
orl
stos
mov
test
loop
cld
cmp
aam
lds
ljmp
mov
mov
fisttpll
fisttps
aas
rolb
xchg
pushf
xor
add
mov
add
adc
insl
popa
push
inc
mov
dec
out
mov
es
mov
pop
repz
or
mov
xchg
jnp
aas
cmp
cmp
or
inc
adc
movsb
movsl
shll
stos
fdivp
cltd
in
sti
inc
or
lahf
add
into
and
data16
add
insl
stos
adc
fmul
cmpsl
leave
and
push
mov
es
shlb
cmp
cmp
ss
into
jecxz
jbe
dec
aaa
negl
mul
scas
int3
loope
inc
inc
incb
xor
pop
lds
cmp
lret
mov
cmp
mov
cmc
pop
out
popa
xchg
dec
sub
loopne
pop
call
or
mov
lret
mov
mov
xchg
add
lds
mov
cmp
add
or
dec
xchg
aaa
sti
out
frstor
or
xor
lea
aam
popa
dec
mov
mov
adc
add
insl
adc
clc
lods
notb
xchg
ret
xchg
sub
inc
call
pop
sbb
ljmp
dec
jno
mov
push
push
ss
cmp
rolb
adc
pop
popa
sub
leave
dec
cmp
and
xor
sub
mov
mov
xchg
sub
mov
adc
push
xlat
lods
or
sarb
daa
pop
or
and
adc
int3
sub
aas
and
cmpsl
pop
int3
ret
cmp
xchg
xchg
stc
fldt
sub
mov
sahf
shrb
cmc
push
sub
loope
subl
push
fisttpll
jle
or
rcll
adc
sbb
clc
mov
loopne
adc
xor
ret
cmc
jecxz
and
lods
stc
fbld
xchg
pop
xchg
xor
xchg
lahf
and
scas
jecxz
cmpsl
xchg
loope
lods
and
jg
add
sbb
es
mov
dec
enter
lret
ljmp
pop
cmc
imul
push
and
mov
rolb
sub
sahf
mov
lods
xchg
and
in
cld
fcoms
stc
loopne
mov
add
mov
enter
aaa
stos
das
out
stos
aaa
fisubs
xchg
loopne
sbb
xchg
mov
add
insb
scas
adc
rcll
arpl
daa
outsl
repz
cmp
imul
call
adcb
repz
or
fcmovu
mov
jae
push
sbb
ja
je
dec
movsb
or
pop
ljmp
push
scas
add
sbb
movsb
push
fmul
aam
ret
xor
adc
adc
adc
jnp
and
js
inc
jo
out
int3
lcall
mov
daa
push
lahf
mov
imul
mov
fists
testl
xchg
jno
xchg
dec
pop
push
loopne
lods
into
xchg
lret
mov
xchg
xchg
dec
mulb
push
cwtl
rcr
pop
mov
bswap
cmp
iret
bound
adc
std
mov
lods
mov
fstpt
fstpt
popa
adc
icebp
incl
aad
sub
mov
movl
ja
sub
outsl
mov
pop
lahf
out
ja
jbe
fucomp
mov
and
in
sbb
sub
mov
mov
inc
dec
push
mov
sti
adc
mov
les
inc
imul
sti
xor
xchg
inc
mov
mov
jb
mov
add
push
xchg
mov
mov
pop
xor
ljmp
add
or
push
jp
incb
dec
dec
jb
cltd
add
add
popa
jmp
andl
cmc
in
lods
inc
xlat
jmp
fdivl
mov
nop
into
mov
stos
insl
test
sbb
popa
jo
lret
jnp
imul
sub
jl
gs
cs
mov
dec
push
dec
cmp
enter
cmovge
ss
add
adc
shl
cs
mov
or
xor
js
mov
repnz
and
movsl
xchg
fildl
rcll
stos
add
repnz
lods
push
pop
mov
add
xor
jecxz
jmp
add
incb
mov
lea
outsl
jo
scas
cltd
cmpsl
xorl
jo
cmp
stc
inc
xchg
xor
pop
push
sbb
popf
movsb
fsubr
outsl
scas
stos
push
sbb
xchg
into
sub
test
xchg
clc
push
sub
out
sbb
mov
inc
sbb
dec
push
enter
jae
add
cmp
push
adc
das
or
mov
aad
dec
pop
dec
ljmp
lods
jno
imul
inc
int3
push
xor
in
repz
mov
rclb
ret
fstp
ljmp
arpl
shrb
es
mov
insl
outsb
aad
test
std
cmp
sub
fwait
xchg
jge
sarl
cli
or
bound
sbb
pushf
outsb
adc
cmp
xchg
shrb
pop
gs
out
push
xchg
into
rcll
pop
sbb
or
mov
jns
xchg
jge
add
lahf
push
push
mov
jge
inc
int3
or
xchg
push
out
hlt
dec
cmpsb
fidivl
sbbl
int
xchg
int3
flds
push
idivl
mov
pop
lods
imul
mov
gs
add
pop
xchg
push
arpl
aam
les
dec
cmp
int3
sbb
ret
sub
test
loop
ret
pmulhuw
add
cmc
mov
in
ss
ds
xchg
inc
push
cmp
mov
ljmp
sub
cmp
mov
xor
scas
lcall
lret
and
test
insl
pop
popa
adcl
sub
or
iret
lret
imul
hlt
add
mov
jecxz
rol
ret
popf
lret
xchg
add
inc
dec
clc
mov
add
fstps
fldl
mov
nop
xor
dec
dec
cs
fwait
cmc
sar
into
dec
or
mov
push
xorl
movsb
in
cmp
std
adc
mov
push
adc
jne
fsubr
inc
cwtl
outsb
cld
imul
sahf
xchg
pop
mov
sub
out
loopne
nop
pop
adc
add
mov
add
aad
insl
pop
mov
jmp
out
inc
rcrl
push
in
cmpsb
push
add
jo
xlat
aas
cmp
aas
xchg
and
stos
pop
adc
fwait
cmp
pop
jg
xchg
dec
xadd
add
cmpsl
scas
or
xor
jp
es
inc
out
js
jns
sbb
imul
aaa
adc
cli
orl
mov
or
adc
mov
pop
aas
in
ret
imul
movsl
shrl
pcmpgtw
xchg
cmp
pop
out
dec
loopne
push
mov
jecxz
sbb
pusha
iret
sub
rcr
xchg
push
inc
movsl
bound
and
mov
iret
rdmsr
jg
clc
push
lock
into
cwtl
fcoml
push
aad
add
test
imulb
xchg
pop
lods
add
dec
scas
outsl
push
push
rcrb
pop
movsb
loop
mov
test
push
add
dec
lcall
xchg
adc
push
pop
gs
lahf
add
cmp
sub
jne
add
sub
sti
testb
addr16
sti
and
lock
push
or
aas
pop
add
and
lods
dec
andb
dec
aam
fistps
sahf
call
push
les
outsl
test
sahf
in
mov
inc
movsl
xlat
popf
push
int
sbb
aad
mov
andl
push
or
dec
xor
scas
dec
adc
inc
dec
or
mov
js
push
mov
cmp
xor
mov
jns
jbe
dec
cmpsl
sbb
and
mov
ret
movsb
test
or
xchg
jo
es
push
and
mov
sbb
push
imul
out
nop
xchg
push
bound
cmp
inc
inc
nop
into
repz
je
sbb
mov
pop
test
or
sbb
rclb
hlt
rol
fadds
mov
fmull
inc
dec
outsl
in
inc
mov
jecxz
dec
scas
icebp
push
ljmp
sbb
mov
mov
xchg
sbb
mov
and
cmp
rcrb
sbb
jp
nop
pop
push
add
sub
adc
pop
jno
cld
push
hlt
data16
xor
jle
inc
inc
lods
imul
cmp
or
andb
rcll
les
jp
mov
jecxz
push
in
jle
fs
hlt
mov
mov
push
dec
mov
mov
in
cmp
xchg
popf
aaa
or
sub
mov
rcll
sub
fnstsw
xor
inc
jbe
enter
lods
mov
add
rcrl
movl
dec
cltd
fwait
mov
das
pop
shl
and
test
aaa
sbbb
xchg
and
xor
inc
xchg
addl
mov
mov
adc
cmp
push
pop
rolb
xchg
mov
insl
inc
pop
cld
sub
jb
or
jae
sbbl
sub
out
fldcw
mov
int
mov
xchg
adc
sub
loop
imul
xchg
mov
gs
cmp
scas
dec
cwtl
mov
inc
pop
or
imul
cld
nop
sub
bound
jg
sub
inc
xchg
lods
cmpb
repz
inc
or
sub
push
fisubrs
insb
mov
mov
and
or
and
xchg
mov
sbb
xor
xor
dec
out
mov
loopne
xor
xor
loope
insl
dec
scas
add
mov
rolb
mov
lock
add
adc
js
mov
notb
xlat
adc
das
dec
xchg
pop
iret
stos
adc
lret
enter
in
rorb
stc
mov
stc
gs
pusha
repz
aad
xchg
push
enter
daa
adc
int3
pop
mov
pop
add
filds
ljmp
outsb
cmpsb
call
xchg
xchg
and
push
icebp
mov
jb
jp
in
outsl
fistps
jb
xchg
nop
adc
jns
fnsave
mov
adc
mov
sahf
rcrb
sbb
jmp
inc
in
out
shlb
jo
mov
cld
andb
push
cli
jbe
pop
cltd
lret
jae
xchg
mov
cmp
mov
in
inc
shrl
xchg
push
xchg
test
ds
xor
mov
dec
pop
xchg
jne
out
movsl
aam
add
xchg
push
mov
sub
or
dec
adc
insb
mov
mov
mov
rorl
pop
add
fmul
inc
fnstcw
sbb
xchg
in
push
faddl
and
jle
cmp
sti
leave
mov
jo
mov
jp
or
mov
je
divl
scas
ja
imul
shr
mov
fldenv
add
fsubr
dec
out
xorl
mov
inc
inc
push
fimull
jne
or
cmc
mov
lods
pop
cmp
cmp
cmp
mov
xchg
or
dec
out
mov
ds
pushf
aaa
pop
push
in
xor
mov
push
cli
xchg
cmpsb
push
and
sub
iret
pop
sub
jne
xchg
ljmp
pop
xor
inc
call
lds
mov
test
xchg
mov
repnz
or
insb
je
cmp
xor
jge
cmp
lds
ffreep
mov
pop
arpl
cmp
sbb
or
sbb
mov
pusha
push
xchg
lods
mov
and
lods
jo
fs
mov
xchg
std
out
sub
ss
jne
xor
push
mov
cmp
dec
cld
std
mov
loopne
jmp
jns
aam
into
xchg
xchg
daa
dec
outsb
aad
dec
push
dec
cld
gs
repz
into
gs
jg
sbb
ja
int
xor
out
mov
mov
xchg
cmp
xor
roll
data16
pop
and
or
or
sub
push
cld
sub
insb
adc
stos
prefetch
mov
cli
stc
popa
test
addr16
pop
mov
test
or
test
mov
adc
or
sbb
pop
mov
lret
or
in
dec
jge
sub
jno
or
ss
rcrb
addb
dec
mov
ret
cli
sub
cmp
and
mov
pop
in
mov
ds
mov
mov
outsb
xchg
sub
movsl
out
pop
pop
dec
ds
test
leave
test
adc
jecxz
ret
je
loopne
sbb
xor
inc
inc
adc
jnp
xchg
inc
or
ltr
hlt
aam
into
dec
aaa
fdivrp
loop
mov
cld
fucom
cmp
into
insb
testl
aad
push
mov
or
or
xor
push
cmp
scas
loop
cld
sbb
pop
jle
fistl
pop
out
mov
xor
clc
loop
inc
cwtl
push
aaa
jae
testb
cmp
mov
xor
int
dec
daa
cmp
ret
fstl
test
sub
cltd
repz
xchg
xchg
out
cli
test
cmp
adc
mov
fmuls
icebp
lret
fwait
or
lods
lods
clc
xlat
out
xchg
insb
mov
xchg
add
mov
sub
jle
add
or
pushf
jge
xchg
cli
ret
jge
push
lcall
setns
stos
push
aam
xchg
add
in
insl
pop
out
scas
cmpsb
pusha
mov
adc
aad
and
test
or
inc
lea
cli
fs
lcall
arpl
outsl
aad
fidivs
jge
fidivrl
add
jmp
pop
adc
jno
fs
out
mov
mov
insb
jle
sub
cmp
adc
std
cmpsb
rcll
mov
lahf
pop
dec
sub
push
mov
imul
and
mov
sub
lock
pop
jb
jbe
addr16
jb
inc
repnz
dec
les
jecxz
cmp
xchg
or
fistps
pop
dec
push
push
shrl
hlt
dec
int3
pop
cmp
jge
outsl
and
rcl
test
imul
test
es
xchg
rcll
dec
xor
jne
or
cmp
into
add
push
xchg
out
and
out
cmpsl
sti
roll
stos
pushf
lret
icebp
icebp
cwtl
out
movb
dec
hlt
jge
dec
xchg
jl
outsl
push
dec
mov
mov
insb
or
pop
scas
add
mov
insl
dec
and
gs
pop
cltd
or
mov
add
jge
lret
cli
cld
jle
sub
add
mov
or
xchg
inc
fldcw
and
lea
inc
xchg
stc
scas
dec
push
push
fisttps
xor
cmpsb
pop
adc
cmpsb
jecxz
popw
lods
mov
jl
cmp
jecxz
sbb
jno
adc
fldl
andb
adc
jecxz
mov
jl
cmc
outsl
jge
jb
lods
jp
jle
es
cmp
fwait
repnz
or
xchg
sub
lcall
mulb
sbb
shrb
or
push
lods
leave
sub
addr16
call
shrb
add
jmp
lret
and
hlt
cld
pop
int
popf
dec
adc
out
fisubs
mov
sub
pusha
ja
dec
testb
subb
mov
jne
in
jge
stos
iret
mov
jb
add
pop
rcll
lock
pop
dec
lret
iret
icebp
xlat
mov
aas
mov
mov
jo
and
mov
loop
in
stc
hlt
mov
cmpb
fisttpl
test
into
jg
add
test
mov
pop
aad
insl
fstps
aam
cmp
xor
aaa
cmp
dec
cltd
ja
aad
adc
fbld
jno
adc
xchg
aad
cmp
lock
mov
jg
popa
pop
lret
lock
sbb
push
fs
pop
xchg
or
sub
andb
es
jmp
std
mov
cli
adc
repnz
das
adc
sti
lret
xor
inc
jg
jp
xchg
jp
sub
add
decl
cmc
out
add
cmovns
mov
adc
out
dec
rclb
orl
cwtl
add
pop
sbb
imul
adc
inc
mov
pop
roll
rcl
pop
out
jle
or
repnz
mov
addr16
cwtl
lcall
mov
adc
stos
les
mov
imul
pop
cmpsb
loope
sbb
fcompp
jge
je
cmpsb
mov
repnz
cli
pop
lcall
dec
mov
and
stc
insl
fs
adc
sbb
out
or
adcb
ja
mov
out
dec
or
and
dec
int3
pop
rcr
enter
mov
rol
rorb
push
mov
and
enter
push
pop
adc
cli
out
mov
sbbl
mov
inc
xor
or
jg
es
fiaddl
xchg
xor
mov
fisubrl
jg
enter
cmp
or
daa
js
pop
xchg
iret
xorl
cmp
in
out
mov
adc
outsb
fmulp
mov
push
aam
xchg
sbb
mov
mov
sub
adc
pop
xor
mov
jb
or
cmc
push
jle
jp
movsl
push
fisubrl
jmp
mov
sarb
sahf
cli
push
xor
sbb
out
mov
sbb
inc
dec
clc
sbb
aad
lahf
lret
mov
ficomps
imul
xor
dec
aad
xchg
lock
xchg
inc
movsb
push
or
fiaddl
hlt
inc
aam
push
test
or
mov
sub
in
in
shr
flds
stc
mov
xchg
aas
insb
stos
mov
push
xorl
jne
popf
jmp
cmc
mov
daa
sar
mov
scas
xor
mov
jecxz
or
shlb
js
mov
and
lret
jmp
loopne
xor
push
cmp
out
insb
add
jg
sahf
fcompl
xor
mov
daa
pushf
test
mov
push
insb
inc
outsl
ficoml
add
lods
sti
xchg
jno
les
cmp
cmp
addr16
mov
xchg
fucompp
mov
fdivs
int
das
dec
cli
xchg
in
inc
cld
lods
mov
push
ret
imul
mov
or
push
arpl
jno
xor
jne
roll
and
xchg
ss
sbb
fsubr
enter
ret
sub
pop
jle
sub
call
and
xor
jae
xchg
sub
imul
sti
mov
pop
imul
mov
adc
cmp
shl
shl
jo
mov
xlat
outsb
lcall
adc
mull
xchg
dec
daa
sub
jle
xorl
cmpsl
popa
dec
into
and
cmp
rcrl
das
add
test
mov
pushf
cmp
inc
pop
into
mov
mov
jo
nop
sbbl
faddl
mov
or
sbb
dec
dec
lahf
xor
xor
sub
test
iret
and
pop
or
jne
lods
mov
jo
xorl
inc
xchg
fdivs
jb
adc
out
inc
sarl
xchg
xor
inc
xchg
sub
out
cld
stc
jp
sbb
into
and
push
test
sub
pop
jl
in
add
jbe
fisttpll
bound
sub
out
shll
lret
and
test
inc
push
push
cmpsl
push
sarb
jno
int3
fdivrs
jmp
dec
pop
ret
inc
idiv
stos
in
mov
cmp
mov
in
ss
mov
dec
mov
adc
jmp
jno
add
ret
jae
xor
and
xchg
insb
jb
sub
pop
lahf
repz
push
pusha
aaa
gs
jg
call
xor
in
dec
sub
lea
push
jns
or
decl
mov
inc
inc
add
and
mov
neg
cld
loope
out
push
mov
mov
mov
stos
pushf
loope
mov
jecxz
dec
dec
pop
adc
sti
mov
xchg
sub
test
insb
cmp
adc
data16
loopne
inc
clc
cmp
push
filds
incl
insb
pop
jb
dec
or
push
dec
jmp
sub
subl
push
dec
fcmovne
xor
mov
roll
xchg
push
shll
mov
push
xchg
xchg
cwtl
pcmpgtb
cli
adc
inc
or
jno
xchg
ja
adc
xchg
out
xchg
out
or
xchg
fwait
adc
jecxz
iret
jp
jno
hlt
mov
stos
bound
mov
inc
sti
cld
leave
icebp
mov
stos
mov
adc
int
rorl
mov
ljmp
and
push
cmp
test
jp
les
xor
aam
mov
aad
imul
mov
ljmp
aaa
sub
data16
pop
std
mov
xchg
push
push
call
aad
or
loopne
hlt
inc
lahf
jo
mov
pop
hlt
dec
add
sub
cmp
adc
inc
and
mov
and
pop
shrl
loop
push
cmpl
sbb
push
ret
pop
shll
fildl
inc
jge
jnp
adc
xor
lret
sub
inc
mov
pop
cld
push
decl
fimull
add
add
stos
mov
xchg
aad
cs
outsb
sbb
mov
or
xchg
jl
fiaddl
les
mov
cmp
jp
stos
ss
jns
mov
push
inc
out
add
lods
shll
lods
adc
and
mov
clc
inc
in
jp
inc
and
mov
sti
or
ds
sbb
ja
mov
jg
mov
xchg
sar
ret
xorl
pop
inc
fidivrs
jae
pop
ds
scas
lret
sarb
pusha
cmpb
mov
xlat
cmc
sti
pop
rclb
cwtl
ret
lds
pop
rcrb
mov
mov
xchg
lret
imulb
pop
mov
fsubrl
dec
xchg
stc
popf
stc
sbb
add
mov
mov
push
add
cltd
cmpl
add
aad
mov
or
xchg
movsl
pushf
mov
lods
enter
psrld
repz
mov
rcrb
in
in
sbb
sbb
push
jle
mov
xchg
shll
imul
or
jns
mov
cmp
pop
xchg
test
bsf
rol
jge
mov
or
out
cmpsb
jl
mov
leave
cs
mov
shlb
movsl
mov
add
je
sbb
push
ljmp
out
sbb
jmp
loope
lods
mov
mov
jns
lods
pop
mov
push
hlt
add
mov
sbb
pop
mov
push
cltd
add
mov
hlt
fcompl
mov
sub
push
mov
mov
loop
jecxz
in
fcoml
xor
or
lods
mov
dec
out
movl
push
and
popa
testb
daa
mov
mov
pop
xor
daa
das
push
sbb
lret
adc
out
stos
mov
test
mov
and
sbb
xor
mov
insb
mov
jns
mov
outsb
push
adc
out
gs
ja
int3
outsl
pusha
mov
jbe
cmpsb
mov
out
int
xor
xchg
push
imul
lods
jmp
mov
gs
ds
inc
cs
mov
dec
inc
out
rcrl
cli
mov
imul
or
pop
aam
xor
add
sub
jbe
or
xchg
sbb
xchg
jg
jbe
inc
pushf
std
adc
push
repz
es
jb
jl
testb
push
fs
repnz
rclb
vpmacsdql
shlb
sub
mov
xchg
repz
mov
push
jno
mov
xchg
lods
cmp
push
nop
out
cli
lods
inc
dec
clc
sbb
adc
jnp
xchg
inc
inc
cmpsb
xchg
dec
inc
push
insb
cltd
sub
jmp
lcall
mov
pop
dec
and
or
mov
gs
jne
and
stc
insb
movsb
or
add
dec
xorb
pop
pop
pop
or
pop
and
shll
lock
gs
mov
push
std
ljmp
jnp
gs
iret
arpl
mov
sub
mov
movsb
or
out
lea
mov
cmc
adc
das
and
xchg
popa
cmp
lahf
rorl
popa
jp
jle
or
ret
repz
dec
outsb
clc
mov
cmpsb
add
xchg
sub
fwait
push
inc
stos
incl
sarl
stos
jl
es
insb
lahf
aam
loopne
in
add
pop
pop
arpl
scas
and
in
dec
xchg
and
inc
arpl
lds
mov
and
or
sbb
jnp
lret
cltd
enter
push
cmpsl
mov
inc
je
and
sti
popl
js
sub
rcrb
jo
xor
add
mov
das
in
arpl
je
and
popf
and
dec
lcall
ljmp
lods
out
test
or
out
sub
cmpsl
lret
add
bound
inc
mov
int3
xor
dec
stc
jb
data16
out
mov
and
ljmp
jbe
in
add
xor
les
adc
into
ret
add
push
or
sbb
pop
sti
pop
xchg
dec
sbb
cmp
dec
cmp
mov
jmp
enter
jmp
fwait
mov
sub
push
add
imul
and
cld
mov
inc
mov
jp
push
or
aam
fnstcw
lret
aas
sub
sub
fstp
ds
sub
mov
pop
sbb
mov
mov
in
fdivp
mov
mov
shll
stos
fcmovnu
adc
mov
clc
xlat
fcmovnb
jns
clc
aas
ljmp
mov
mov
scas
jae
mov
mov
adc
sbb
xchg
push
sub
lea
cmp
push
negl
inc
dec
ja
adc
shlb
mov
out
cmpsl
add
int3
jno
icebp
push
fldl
adc
leave
out
sbb
jbe
repnz
ja
add
inc
loop
dec
negl
test
xorb
popa
jp
int
in
jl
or
jg
stos
in
addr16
inc
stos
sbb
insb
inc
dec
adcb
push
pop
rolb
xchg
push
mov
aas
push
jbe
pop
jae
xchg
xor
and
cmpsb
mov
stos
cmp
pop
mov
and
mov
ljmp
fnstsw
cmpsb
popf
adc
in
push
mov
out
pop
pop
jg
adc
adc
addr16
aad
pop
addr16
cmpsl
ljmp
pop
mov
sbb
sbbb
jecxz
mov
sarb
arpl
movl
loope
sbb
mov
pop
mov
test
mov
jbe
jnp
adc
mov
pop
jle
setle
pop
ss
les
aas
mov
std
mov
sahf
mov
cmp
outsb
add
fnstenv
xor
mov
out
outsb
add
inc
std
fadds
lea
pop
iret
mov
mov
ja
fisubrs
outsl
inc
dec
leave
push
outsl
xor
jne
push
jmp
dec
in
xchg
addr16
movb
and
inc
scas
call
pop
pop
insb
ds
lock
pop
lahf
cmpl
mov
xlat
push
xchg
xchg
mov
or
sub
les
mov
sarb
loopne
imul
xor
push
xor
adc
jmp
out
push
inc
add
clc
cmpsl
pushl
cltd
loope
js
daa
scas
mov
cli
mov
sbb
push
inc
mov
shl
int3
xchg
testb
mov
mov
movsl
jae
sahf
adc
popf
rcll
inc
mov
addr16
movsl
cmp
mov
and
nop
mov
rorl
jge
mov
pusha
loope
sti
aaa
ljmp
cmp
rorl
out
xchg
pushf
push
lea
cmp
and
pop
or
pop
cmp
pop
push
scas
lret
dec
xchg
in
into
mov
xorb
icebp
negl
xchg
outsb
jb
in
dec
shlb
push
xor
mov
jmp
test
xchg
int
xor
mov
push
shl
xchg
sbb
pop
pop
clc
fistl
test
stc
jle
popf
sbb
pop
mov
inc
jo
dec
cmp
jmp
iret
pop
aam
addr16
add
jl
add
movsb
mov
das
cld
jnp
out
mov
xor
shl
jne
mov
imul
mov
daa
jle
inc
sub
cs
loop
aad
mov
add
mov
pop
inc
fistpl
call
jno
inc
dec
cwtl
fucomip
pop
aaa
aaa
lahf
add
popa
je
inc
repz
sbb
adc
jo
and
shr
nop
jmp
inc
nop
cs
or
xor
pop
ret
dec
xor
gs
fucomp
jecxz
xchg
mov
test
mov
jmp
and
mov
imul
call
mov
pop
mov
sub
jnp
into
int
int3
cmpl
push
ror
popl
int3
or
inc
fucompp
fs
adc
mov
adc
ss
jnp
lret
push
sar
xor
and
decl
pop
xchg
loop
scas
mov
pushf
in
push
mov
rcrb
lret
push
dec
pop
in
mov
fcomip
xor
fstpt
add
dec
xchg
movsl
sar
lret
popa
adc
addb
or
jecxz
ret
lods
mov
scas
push
sbb
jno
mov
adc
pop
dec
stc
aas
inc
cli
xor
push
bound
mov
xchg
adc
or
movsw
pop
push
mov
pop
and
cmp
lods
test
call
push
test
cld
cmp
xorl
pop
frstor
outsl
fwait
cmp
push
hlt
jmp
inc
adc
jnp
or
cmp
add
jne
testb
add
sbb
and
aaa
mov
rcr
add
gs
lcall
in
cld
push
add
outsl
cmp
lods
mov
jle
rcrb
mov
popf
cmp
push
fs
xor
lcall
fsubr
xor
hlt
insb
rdmsr
cmp
idivl
movsb
std
gs
call
jno
cmpsb
pop
or
mov
pop
add
xchg
xchg
cwtl
jne
aam
jle
xchg
mov
fldpi
outsb
sbb
mulb
aad
sbb
xor
in
shll
test
xchg
xorb
dec
sbbb
out
mov
inc
adc
dec
and
cltd
dec
or
inc
addr16
test
mov
lock
mov
fiadds
fprem1
call
mov
les
jo
popa
cmp
cwtl
pop
dec
xrelease
xor
jge
jns
stc
inc
hlt
dec
inc
je
ret
lods
out
sub
int3
or
inc
mov
inc
cli
jge
pop
jnp
jae
cwtl
rep
inc
jo
mov
dec
xchg
push
and
pop
xor
call
or
test
xchg
mov
jg
movzbl
je
stos
test
cld
addr16
negl
pop
mov
mov
int
dec
nop
fistps
jno
mov
aad
movsb
fnstsw
test
dec
mov
jle
mov
jno
push
dec
xchg
xor
mov
or
mov
add
rcrl
popf
loop
int3
incl
lahf
enter
pushf
mov
movsb
imul
stos
in
outsb
mov
lods
enter
cmpl
sbb
ret
call
xchg
xchg
and
rorb
xchg
sub
add
inc
sub
add
jmp
daa
inc
jb
jmp
adcb
lret
or
aam
js
fs
mov
ret
xor
gs
inc
jl
xchg
in
jns
dec
popa
negl
pop
je
ret
daa
xor
rorl
setno
mov
push
fdivrl
int
pop
cmc
pop
xor
int
mov
jmp
aam
das
mov
mov
loope
mov
call
mov
xchg
mov
and
push
inc
adc
repz
mov
xor
jmp
jmp
arpl
pusha
inc
test
mov
je
or
cmpsl
xor
dec
xor
sub
dec
sub
jmp
mov
xlat
dec
mov
or
mov
push
push
inc
cmpsl
call
fisttpll
xor
pop
leave
add
pop
stc
xor
cli
and
adc
sub
xor
jbe
lea
scas
in
push
push
subl
fists
arpl
leave
xor
insl
mov
aam
sbbb
notl
mov
xchg
popa
ret
xlat
stc
clc
es
jo
movd
sbb
dec
mov
or
popf
sub
inc
cli
leave
ds
shrb
ret
cwtl
repz
insl
test
jbe
into
push
push
push
data16
xor
mov
scas
push
mov
jg
inc
pushf
xor
xchg
js
push
pop
sti
jge
pop
icebp
push
or
inc
mov
sub
stos
xor
sub
outsb
push
add
int
test
pop
inc
mov
sarl
xchg
mov
sbb
dec
pop
push
sub
xorb
aam
xor
mov
divl
or
sbb
loopne
jp
or
cmp
sahf
cmp
addb
mov
mov
xor
mov
pop
jmp
lods
mov
inc
or
mov
jecxz
inc
sbb
push
or
test
incl
inc
imul
lock
fdivl
xlat
aas
shrb
push
enter
lea
test
ds
mov
sub
movsl
sbb
arpl
jo
xchg
int3
sbb
je
mov
add
bound
mov
adc
rcll
imulb
inc
fs
popf
inc
inc
popf
cmpsl
add
fbstp
mov
aad
jg
into
lock
pshufw
ljmp
adc
xchg
aaa
push
pop
lcall
mov
jecxz
fsubs
pop
xchg
add
movsl
insl
push
mov
adc
insl
adc
push
nop
cmp
jns
sbb
sub
popl
shl
and
mov
loopne
call
enter
stos
stos
pop
ds
and
jecxz
or
dec
push
movsl
or
das
push
gs
popf
pop
add
mov
pop
pop
dec
inc
lret
fidivrl
adc
jmp
in
push
leave
mov
xor
test
push
xchg
mov
fnstenv
lret
hlt
ret
xchg
pusha
int
add
push
notb
dec
bound
push
cmp
jge
mov
sbb
mov
shll
loope
or
pop
jg
cwtl
jb
testl
cmc
cli
gs
mov
sbb
push
jg
fucomp
and
cs
push
push
push
push
push
adc
jmp
push
popa
adc
cmc
lds
scas
xorl
out
int3
sbb
iret
popa
mov
mov
dec
pop
in
shrl
dec
outsb
scas
fs
dec
mov
iret
xchg
dec
sti
push
dec
or
and
stos
jmp
dec
flds
sbb
in
maxps
test
mov
mov
pop
add
adc
sbb
jp
push
pop
push
adc
and
jmp
in
into
pop
imulb
pop
inc
pushf
jmp
insl
inc
dec
je
jne
sub
jbe
loop
popl
cld
stc
xchg
insb
outsb
fstps
inc
mov
dec
lea
mov
lock
push
dec
mov
mov
lcallw
aaa
lods
arpl
cmpsl
xchg
enter
dec
adc
mov
insl
adc
dec
adc
jo
jbe
xchg
imul
mov
pop
and
adc
lea
mov
jno
mov
jle
dec
xchg
lret
mov
mov
popa
dec
in
stc
xchg
mov
icebp
mov
pop
push
jmp
mov
pop
or
mov
push
sahf
mov
mov
pop
in
fcmovb
push
sub
frstor
sub
sub
dec
ret
adc
imul
mov
out
or
cs
jnp
add
mov
cmp
add
daa
int3
les
add
dec
lods
movsb
mov
lret
imul
sub
mov
mov
and
and
xchg
rorl
or
fiadds
enter
loope
mov
sub
out
sti
iret
flds
ja
in
or
movsb
aaa
sti
in
mov
ds
xchg
cli
loope
jnp
jns
xor
inc
xor
sub
insl
xor
test
mov
mov
xor
jge
xlat
loope
sub
adc
xor
cs
mov
or
dec
fldl
xor
insb
or
jmp
loopne
jecxz
mov
xchg
das
insb
xchg
push
mov
sbb
fidivs
jle
dec
jne
sub
dec
js
inc
loope
mov
or
mov
gs
outsl
fdivl
out
sub
sub
hlt
imul
mov
inc
cwtl
adc
das
or
mov
mov
pop
adc
out
rolb
enter
iret
push
and
std
scas
shll
dec
rcrb
pop
aaa
enter
adc
and
out
int
fnstcw
adc
adc
xor
out
stc
cmpsb
daa
adc
insb
mov
xchg
movsl
pop
fbstp
push
cwtl
divb
adc
push
xchg
dec
sub
mov
loopne
repz
cs
sbb
mov
xchg
iret
ss
adc
or
inc
xchg
mov
jo
and
push
divl
ss
out
imul
scas
xlat
jmp
xor
cmp
rorb
sub
pop
scas
lcall
pop
inc
repz
dec
pop
add
cmp
in
addr16
js
mov
pop
lahf
movsl
xchg
lahf
or
fwait
test
in
stos
loopne
imul
outsb
xor
cmpsb
lret
push
pushf
es
lahf
or
test
add
cmp
push
lock
mov
inc
adc
daa
inc
pop
cmp
add
insb
inc
ja
xchg
popa
mov
outsb
and
sub
cltd
mov
pop
out
std
outsb
xor
sub
in
jg
mov
aas
nop
loopne
arpl
push
frstor
push
adcl
dec
adc
sub
add
or
arpl
ds
mov
addb
insl
xchg
in
xor
stos
inc
insl
adcl
or
jo
imul
xchg
roll
je
mov
cmp
push
aam
loop
nop
das
jp
aaa
bound
mov
xlat
idiv
add
je
mov
dec
or
cmc
push
dec
mov
std
add
lds
pop
test
sub
push
ljmp
pop
sahf
push
popl
dec
xor
inc
mov
fists
mov
push
js
mov
xchg
sbb
add
mov
and
lock
stos
fs
jmp
es
mov
andb
sub
pop
mov
in
cmp
mov
jmp
push
sbb
push
inc
push
add
mov
cld
repnz
mov
sarl
mov
cmp
lds
mov
fdivrl
enter
mov
sbb
js
add
add
ja
jge
pop
int3
mov
addr16
push
rorb
add
fs
adc
cmc
lds
add
mov
jmp
sbb
jne
push
in
xchg
lock
lds
pop
add
jge
pop
add
out
scas
mov
ss
movsl
push
mov
xor
addr16
xchg
lahf
fwait
ljmp
mov
leave
cwtl
stos
mov
cmp
in
mov
incb
std
mov
clc
adc
sbb
or
cmp
cmpsb
ret
stos
push
das
push
mov
sahf
ret
jecxz
arpl
mov
xchg
addr16
pop
dec
loope
imulb
shrl
shlb
dec
or
mov
in
fbstp
mov
and
and
push
jns
push
jecxz
cmp
mov
or
cmp
cmp
pop
imul
mov
and
stc
mov
xchg
repz
loopne
jnp
add
into
mov
into
inc
xor
fcmovbe
push
into
sti
push
or
add
stos
cwtl
jns
rcrl
pop
jp
mov
push
fsts
cmp
jnp
sub
xchg
icebp
leave
rorl
adc
lret
or
add
lcall
into
xor
outsl
popf
int3
loope
jns
push
shlb
es
adc
movsl
fsubr
data16
aad
dec
mov
sub
ja
pushf
ja
fmuls
fidivrs
push
jae
dec
imul
xchg
test
outsb
jnp
int
or
mov
nop
sbb
aad
or
dec
aas
cmpsb
pop
shll
or
adc
mov
fcmovbe
inc
lock
mov
xchg
sbb
jo
popf
lods
loope,pn
aad
lcall
clc
pop
clc
xchg
aas
or
mov
xor
add
jnp
shrl
dec
fadd
aam
and
push
hlt
enter
insl
test
mov
and
out
cmp
mov
out
sti
orl
or
mov
clc
push
push
cmp
or
mov
pop
push
pop
sub
popl
adc
addr16
cmpsl
clc
rcll
cltd
cmpb
fwait
pop
inc
cli
js
dec
rcll
popf
mov
adc
mov
loopne
dec
xchg
orb
add
sbb
outsl
or
sub
pop
jb
mov
lods
sbb
mov
movsl
xchg
pop
xchg
mov
cld
hlt
mov
test
shll
repz
mov
push
rorb
in
fstpt
pop
pop
jmp
cmp
in
shr
lods
jmp
cs
aas
push
jecxz
jbe
jl
cmp
std
dec
lock
sub
sbb
sub
fsubrs
or
pop
cltd
pop
insl
pop
pusha
pop
cmp
mov
lret
or
mov
addb
sarb
push
cmpb
test
mov
cltd
xchg
lcall
dec
cmp
mov
lods
out
movsl
ficompl
jmp
or
test
mov
sbb
pop
jbe
fst
fwait
mov
addr16
cmp
gs
and
jle
or
stc
bound
rcrl
xchg
adcl
int3
adc
cmp
fwait
lcall
stc
sub
lds
xor
aam
pop
outsb
clc
fadds
mov
inc
lds
fildll
mov
or
bnd
dec
mov
test
or
mov
mov
push
jp
inc
cmp
sbb
xor
iret
ret
xlat
sub
in
cmc
scas
mov
scas
xchg
fwait
adc
fisttpl
cmp
xchg
or
ret
pusha
add
sbb
aam
inc
mov
jge
inc
dec
incb
movsl
xchg
jp
mov
push
nop
mov
sahf
cmp
jg
sub
cmp
dec
sub
ja
fiaddl
mov
fisttpl
movsb
jbe
sub
mov
lods
dec
popa
push
mov
in
or
dec
scas
popf
mov
inc
daa
out
cmpsb
mov
xchg
sub
inc
mov
mov
cmpsb
int
ficomps
dec
mov
das
pop
pop
loop
insl
jae
in
inc
lret
in
popa
data16
addb
mov
fadds
orl
fwait
lret
jmp
stc
or
das
sahf
out
out
cs
inc
pop
call
dec
out
sub
movsl
cmp
push
push
jl
adc
ficompl
push
rcl
fnstenv
outsl
xchg
hlt
and
mov
jg
cli
test
mov
sbb
cmp
inc
xchg
or
mov
fwait
lods
hlt
fwait
enter
mov
mov
test
ss
rcll
mov
popf
dec
stc
shll
xor
shl
mov
add
mov
or
mul
popa
pop
mov
repnz
outsl
push
repnz
icebp
or
dec
pop
mov
fnstenv
sar
mov
mov
and
enter
rcrl
jne
scas
or
pushl
popa
mov
addr16
nop
push
add
sahf
push
xor
mov
lahf
sti
adc
jle
dec
mov
add
loopne
ja
int
es
cmp
imul
push
jb
popf
imul
push
jb
inc
sbb
js
insb
dec
outsb
mov
stc
xchg
or
nop
cmp
sub
cmpsl
repnz
dec
ficoml
dec
hlt
jge
jnp
outsl
or
xchg
aam
cmc
pop
std
data16
rcr
popw
jb
out
lds
je
test
outsb
stos
mov
add
and
ljmp
jbe
mov
xor
adc
clc
imul
lret
push
mov
aas
xchg
jno
adc
and
push
push
mov
xchg
cltd
lret
xchg
push
pop
cmp
cs
sub
lret
shr
in
mov
je
out
add
pop
lahf
cli
cmp
mov
dec
iret
neg
mov
cli
mov
mov
cmpsl
pop
xchg
in
psubsb
shrb
add
out
inc
xchg
imul
or
xor
push
lret
xchg
dec
mov
cs
or
cmp
vmovq
inc
insb
test
mov
pop
dec
sub
dec
repz
dec
mov
lea
fcomps
inc
sarb
pop
cmc
aaa
adc
inc
or
cltd
ja
cmc
scas
mov
rcrb
xor
fiaddl
mov
mov
mov
int3
xor
xchg
ficomps
pop
inc
fsubl
xor
in
push
add
xchg
arpl
jl
inc
es
aaa
push
mov
jb
pusha
fwait
insl
js
mov
loope
orl
xlat
jl,pt
mov
aas
fisubs
and
leave
or
mov
cli
push
adc
test
ret
dec
xor
pop
push
movsb
jne
hlt
bnd
adc
aas
sbb
out
jg
mov
repnz
imul
and
sub
sbb
aam
stc
sub
lods
stc
adc
outsb
shrl
cmc
es
daa
es
in
std
fisttpll
test
enter
adc
jmp
mov
mov
pushl
push
xchg
add
scas
cmp
sub
mov
xor
stos
lds
add
pop
or
scas
cmp
push
or
jg
ljmp
cmp
mov
pop
mov
cs
push
or
sbb
jns
xchg
aaa
mov
lahf
ret
or
sub
pop
movl
mov
inc
sbb
loope
pop
out
adc
cli
cwtl
push
push
sub
sub
je
mov
aam
mov
xchg
mov
fisttps
movsb
rolb
shll
pop
mov
fildll
pop
int
add
cmp
and
adc
daa
nop
popa
pop
xchg
cmc
sahf
jecxz
mov
sub
ss
dec
mov
xor
fs
into
sub
aaa
jp
test
stos
jb
jnp
mov
or
jg
dec
ret
jge
cmp
xchg
shlb
ret
and
mov
mov
inc
and
inc
sbbb
xchg
pushf
cmp
das
aas
sub
ja
ljmp
js
popf
shl
lret
mov
or
jge
ja
mov
bound
in
mov
xchg
cmp
or
dec
lock
inc
mov
fidivrs
punpckldq
jbe
lea
lods
xor
sub
push
fnstenv
mov
cltd
and
in
xlat
rorl
nop
outsb
jp
push
mov
cli
in
jo
cmpsl
dec
dec
scas
stc
sbb
inc
lret
ds
jb
out
ret
xchg
out
scas
jnp
leave
cmpsb
sub
jno
push
cmp
sub
add
sub
xor
sbb
add
in
fdecstp
in
fs
insb
sbb
sub
xor
rorl
push
jp
or
jb
pop
sbb
xchg
pusha
inc
adc
dec
test
pop
dec
sub
outsl
inc
mov
cmpsb
repnz
adc
mov
es
in
shll
in
jnp
dec
shl
out
imul
or
jb
enter
xchg
shl
in
mov
sub
xor
inc
aam
cmpsl
in
int3
xchg
idivl
fmull
xchg
shl
jo
push
out
push
mov
dec
jg
fists
mov
call
push
pop
les
shr
mov
cmpl
inc
popf
xchg
pop
enter
jmp
dec
scas
stos
inc
jno
jge
in
add
adc
push
into
fs
stos
pop
loope
inc
nop
xor
imull
xor
add
add
andl
or
ficoml
push
ljmp
ficompl
sbb
dec
icebp
cmpsl
mov
xchg
sbb
jge
jecxz
imul
cmp
loop
xchg
pop
dec
push
mov
adc
sub
sbb
jp
stos
dec
out
sub
movsb
sub
jo
popa
pushf
jg
fadds
aaa
mov
lods
mov
imul
repnz
sub
jg
jns
sub
sub
and
jge
icebp
fs
mov
sti
ficompl
fnsave
add
movsl
popf
lods
xor
pop
push
pop
sti
data16
and
not
xchg
sbb
mov
loopne
mov
jg
jp
aad
jno
adc
fcoml
mov
dec
inc
add
add
lret
jl
decl
mov
jo
adc
xor
in
lcall
test
dec
or
inc
rorl
push
xor
mov
or
shrl
mov
pop
ja
add
xchg
xor
cwtl
cld
sub
push
int
into
add
xor
cmp
jmp
imul
mov
pop
push
repnz
lret
pop
les
das
ror
scas
fstpt
inc
adc
mov
rolb
pop
xchg
xchg
out
aam
fnsave
cwtl
or
aas
jmp
insb
mov
xor
dec
pop
push
mov
sub
fsts
aad
outsb
xor
hlt
adc
fimull
lcall
mov
sub
test
or
addb
fwait
cmpsb
xor
xchg
inc
pusha
mov
out
mov
xchg
push
mov
out
adc
in
rorb
mov
mov
inc
retw
mov
mov
dec
mov
iret
fiaddl
or
push
aaa
cmp
cmp
xchg
and
mov
fistpl
pop
lret
jg
repnz
in
mov
mov
sub
aam
mov
mov
shrl
mov
sbb
enter
xorb
dec
mov
pop
fisubl
xor
pop
out
sub
pop
pop
and
std
and
fcoms
and
pop
mov
lcall
cmp
pop
les
imul
sub
fwait
adc
and
mov
ret
testl
in
mov
lods
jno
in
xchg
adc
jae
inc
sbb
mov
lods
xor
out
aaa
xchg
mov
das
pop
movsl
outsb
xor
inc
lcall
or
jns
addr16
push
aad
cmp
sti
or
cli
mov
push
push
in
ljmp
push
dec
xchg
mov
mov
imul
lea
stos
xchg
ljmp
xchg
xor
mov
inc
pop
inc
sub
mov
mov
add
in
push
lock
sahf
sbb
outsl
xchg
cli
outsb
dec
push
std
sbb
mulb
loope
sub
xor
into
sub
xor
mov
das
push
in
push
sub
push
pop
ds
xchg
inc
jbe
mov
insb
adc
aad
mov
sub
cltd
xchg
inc
inc
xchg
enter
xor
mov
data16
and
mov
scas
lods
xchg
push
jo
mov
in
sub
xor
stos
mov
mov
mov
jmp
mov
leave
js
sqrtps
pop
push
add
dec
cmc
lahf
clc
icebp
xlat
mov
mov
nop
dec
mov
jl
sar
dec
sti
loope
mov
mov
in
ss
mov
rorl
push
adc
mov
sub
pop
lods
cs
adc
outsb
jp
inc
test
inc
dec
scas
je
adc
cli
bswap
negl
mov
setns
and
xchg
jl
mov
add
jns
xor
mov
iret
dec
aam
adc
pop
andb
mov
sub
into
mov
and
jge
or
mov
sti
mov
sub
add
and
scas
ficoms
mov
xor
int3
mov
and
mov
jle
sti
sarl
push
stc
bts
cwtl
or
xor
call
mov
push
repnz
jmp
mov
mov
sub
jmp
mov
fs
rorb
lods
sahf
in
into
mov
iret
and
push
dec
mov
pop
push
lods
or
shrl
mov
add
dec
adc
xlat
jmp
add
iret
jg
pop
ljmp
mov
jecxz
cld
in
push
inc
mov
inc
mov
sbb
adc
and
mov
test
xor
out
cmp
sub
out
adc
jae
cld
call
cmc
out
cs
fucomp
iret
out
in
pop
xor
jle
inc
ss
and
jl
or
sbb
jb
xchg
and
in
loop
xlat
fistps
jg
adc
or
mov
xchg
ja
push
mov
incl
nop
dec
mov
adc
inc
cld
gs
inc
push
jo
mov
push
adc
js
push
js
cli
mov
hlt
mov
je
jo
das
xor
add
lea
mov
jns
dec
or
lret
sub
mov
ret
aad
mov
lock
lock
xchg
pop
jmp
sub
jne
out
jle
fwait
shlb
mov
pop
lds
xor
push
mov
mov
push
add
push
into
pop
sahf
add
xchg
pop
rclb
mov
int3
dec
mov
lock
push
mov
lcall
mov
jg
push
jne
js
sti
ficompl
cmp
sbb
shrb
mov
sbb
push
xchg
mov
movsl
mov
sub
aas
pop
mov
jg
jle
dec
adc
adc
or
icebp
jmp
cmp
cs
xchg
xchg
xlat
dec
jg
add
es
and
mov
aas
shrb
xor
movsl
inc
int3
sti
and
or
xchg
imul
ret
jge
sarl
and
xlat
or
push
mov
mov
jl
pop
fcoms
pushf
js
aas
cli
jb
fxch
out
xchg
push
lods
xchg
adc
ret
cmpsb
adc
xchg
popa
inc
scas
mov
jnp
aam
pop
test
jp
imul
mov
pop
lds
imul
pushw
icebp
fldl
xchg
jno
out
jp
fnstsw
or
cltd
inc
adc
fbld
push
fwait
sub
fstpt
leave
add
aad
jno
leave
cmp
jbe
test
sub
cmpb
orb
std
or
pop
cmp
add
mov
sub
push
or
leave
xchg
mov
inc
adc
xchg
lea
aad
loop
rcl
mov
test
mov
push
and
pop
scas
xorl
xchg
cwtl
cld
or
mov
shll
cli
cmp
sbb
xor
cwtl
lret
insb
aam
cmp
pop
aam
es
pop
ljmp
gs
and
inc
sub
pusha
outsl
pop
repz
inc
dec
add
and
cmpsb
push
mov
or
addr16
xorl
mov
xchg
dec
mov
sub
or
jno
cmp
fdivl
cltd
das
ds
loope
mov
aas
clc
movsl
and
fildl
mov
mov
sub
dec
ret
test
push
iret
push
sbb
lods
out
inc
scas
fs
sub
iret
pop
fdivrl
cmp
jecxz
pushl
mov
lock
iret
enter
adc
inc
xor
ja
mov
ljmp
cmp
sbb
pop
push
lods
ja
push
push
pop
mov
jp
push
into
test
adc
cmp
pushl
cmp
xchg
ljmp
xchg
pop
test
mov
dec
rcrb
pusha
xchg
je
dec
das
sti
mov
add
in
mov
repnz
push
dec
pop
cwtl
js
pop
lret
cmc
cmp
or
sub
dec
mov
out
mov
jl
rcrb
push
dec
sbb
aad
jmp
mov
pushf
mov
xor
inc
cmp
int3
dec
in
andb
xchg
push
sbbb
push
negl
add
sbb
or
mov
push
sub
mov
loop
fstps
ret
lea
orb
lret
push
pushl
cmp
jecxz
movsl
test
in
xor
mov
and
sub
mov
adc
cmc
inc
dec
push
pop
add
and
aam
int3
incl
mov
sub
imul
je
pusha
mov
cmp
lret
cwtl
pop
mov
xchg
dec
lea
xchg
into
fiaddl
mov
movsb
xor
push
mov
imul
and
xor
jge
mov
test
in
inc
ficoms
adc
clc
inc
push
push
sub
mov
scas
int3
or
push
and
cmp
mov
outsl
adc
les
aas
pop
inc
sahf
fs
mov
pop
fisttps
jmp
sbb
daa
popa
mov
int
rolb
hlt
ja
rclb
in
adc
mov
sbb
es
or
in
xchg
jae
das
pop
arpl
or
jns
fsubs
sub
enter
add
adc
adc
imul
inc
push
popf
loopne
out
pop
push
inc
mov
xchg
xchg
jp
jmp
jle
rclb
hlt
xor
inc
xchg
adcl
push
cmpsl
adc
push
sbb
sbb
mov
xor
and
xchg
and
sti
fnstcw
fsubp
stos
cmc
xchg
shlb
xorl
insl
jg
mov
int
inc
loope
push
pop
xchg
sub
inc
ret
mov
xchg
jae
fidivs
pop
jl
in
lea
scas
lcall
xchg
sub
jb
add
test
inc
fs
out
pushf
sar
mov
mov
outsb
int
and
pop
dec
push
xchg
and
jae
and
push
or
xchg
dec
and
sub
cltd
lret
lcall
jae
out
xor
leave
xor
fiaddl
xchg
arpl
pop
fiadds
dec
in
push
xor
fdivl
xchg
pop
sub
lods
mov
xor
mov
scas
xchg
das
lds
add
in
int3
xor
mov
mov
mov
jno
pop
std
cmp
lods
in
xor
pushf
incb
jecxz
pushfw
sbbl
sbb
or
lret
push
fs
adc
jge
jg
ret
ja
mov
pop
repnz
stos
lock
push
or
gs
push
cmc
mov
jnp
inc
pop
cmc
and
push
or
jle
dec
call
jmp
not
mov
loopne
adc
lods
mov
pop
push
push
pop
fiaddl
cs
mov
push
jecxz
lods
xor
mov
push
add
dec
mov
sbb
out
popf
push
xor
jb
add
xor
les
fstpt
les
jmp
fwait
out
inc
andl
push
in
mov
pop
mov
mov
lret
push
test
inc
xor
xor
adc
lcall
jne
cmc
and
and
cmp
dec
bound
jg
cmp
cwtl
aas
stc
rcll
shlb
and
shll
mov
ror
cmpl
ljmp
mov
xlat
inc
test
sub
jle
inc
dec
rcl
int3
cmpsl
jnp
fadds
inc
shlb
shll
pop
jge
fisubl
aas
adc
dec
outsl
imul
scas
in
scas
jb
arpl
mov
xor
mov
xchg
std
leave
mov
lods
xchg
adc
in
test
addl
insb
mov
push
aad
lock
mov
push
and
push
pop
jae
rol
in
fildl
sbb
push
stos
je
inc
adc
sbb
pop
mov
xlat
jle
leave
nopl
sub
cmp
push
ljmp
rcrl
push
cwtl
sarl
xchg
fnstenv
inc
pop
xor
insb
fcoms
cld
cmpsl
test
test
mov
mov
fcoms
shrb
add
sub
orb
mov
or
inc
fisttpl
jno
pop
xor
lahf
pop
int3
or
sub
scas
push
fdivr
dec
adc
pop
mov
sub
addr16
xlat
loop
cmp
mov
jnp
and
jl
daa
shll
int3
sarb
loopne
or
jb
cmp
xor
add
sub
ja
mov
daa
mov
push
popf
add
xor
mov
test
aam
xor
adc
sarl
pusha
mov
and
jbe
or
andl
shlb
xchg
sub
loopne
fists
out
xor
addr16
mov
jne
testb
cmp
icebp
je
mov
ja
bound
dec
adc
popa
xchg
cli
insb
test
sti
rcll
adc
mulb
pop
adc
and
xchg
xchg
andl
xlat
cmp
dec
std
cmpsb
adcb
lcall
push
pushf
adc
sbb
and
cs
cmp
ja
mov
loopne
ret
mov
or
fnstenv
xor
pop
int3
out
lods
lea
sbb
sub
pop
fcom
icebp
fildll
lods
roll
out
push
mov
fsts
out
sub
fwait
imul
xchg
cmp
and
lea
js
mov
jnp
or
js
and
inc
pop
push
stos
xlat
push
hlt
push
fst
jno
dec
jo
icebp
test
test
call
push
ja
sbb
inc
and
lret
loope
xorps
cli
fpatan
adc
stos
dec
adc
dec
shll
loope
fstl
in
cs
in
xor
insb
xchg
fstpt
pop
or
inc
xchg
push
mov
nop
dec
sbb
mov
stos
loope
xchg
scas
or
nop
pop
ja
outsb
das
stc
fmuls
push
jo
mov
dec
inc
push
ds
pop
test
ss
sbb
mov
daa
loopne
dec
inc
lods
lahf
sub
iret
dec
insl
fucomi
gs
outsb
mov
icebp
pop
sub
popa
jnp
jbe
faddl
lcall
cmp
cltd
jo
push
outsb
movsb
lds
je
fisubrl
test
jno
push
inc
pop
mov
jae
mov
outsb
xchg
cmpsb
xchg
mov
mov
lcall
inc
mov
ljmp
ss
insb
std
pop
mov
xchg
ljmp
or
mov
jg
aas
cld
sub
push
in
jmp
insl
cmp
in
and
clc
pop
arpl
shr
inc
add
xor
andl
fisttps
jp
dec
cmpsl
adc
ficoml
lahf
mov
mov
lret
push
nop
xor
dec
int
dec
incb
pop
iret
jle
ss
adc
fwait
loop
fstp
std
mov
lahf
mov
xor
mov
push
push
into
scas
testb
lahf
jno
cmp
addl
jmp
stos
int3
jae
mov
jb
outsl
cmp
adc
mov
xchg
popa
or
icebp
shlb
pop
xchg
jns
cmpsb
clc
pushf
jle
dec
popa
mov
repnz
mov
sub
into
pushf
lods
cmp
push
xor
bswap
cmp
jg
aam
jns
sahf
xchg
push
mov
stos
out
xor
sahf
sub
and
mov
pop
mov
and
ss
pop
pop
lods
inc
mov
lret
cmp
pusha
xlat
lods
hlt
pop
mov
sbb
mov
add
inc
in
movsl
inc
stos
mov
andb
mov
xlat
and
mov
lock
lret
cli
mov
dec
mov
mov
lea
pop
paddb
lahf
jo
aad
mov
and
push
add
testb
lcall
stos
mov
jmp
jae
data16
loope
sub
fs
pop
mov
lahf
mov
jno
pop
in
cmp
inc
sarl
sbb
xchg
stos
mov
imul
xor
addr16
mov
pop
bound
out
jae
xor
jecxz
and
rorl
cltd
rol
push
mov
jae
jae
and
mov
cwtl
lcall
add
sbb
cwtl
call
jl
ficoms
push
pusha
addr16
sub
out
xchg
push
test
mov
aaa
aad
mov
clc
pop
mov
cmp
sbb
mov
ret
movhps
scas
add
sbb
lret
xchg
repz
xchg
sbb
dec
test
or
pop
adc
adc
fsubl
sbb
loop
bound
xor
xor
loopne
jns
pop
push
and
jp
inc
mov
dec
lods
pop
push
std
adc
test
icebp
adc
cmpsb
cld
sahf
jecxz
in
jecxz
sub
push
xchg
popl
cmp
dec
xor
stc
imul
sbb
inc
mov
cmp
test
sbb
sbb
shll
jb
adc
add
or
or
inc
ret
mov
insb
test
sbb
jl
fwait
add
inc
repnz
inc
sahf
repz
dec
jbe
rcr
lret
push
lock
subb
mov
dec
das
mov
and
repnz
pop
mov
sbb
sbbl
xor
std
popa
jp
mov
xchg
push
sti
sub
push
data16
sub
mov
dec
popa
test
dec
add
jmp
inc
pop
nop
insb
stc
pop
mov
aas
addps
pop
in
aad
addr16
push
ficoms
jae
clc
xchg
shll
out
mov
push
jmp
lods
int3
push
mov
adcl
mov
in
inc
push
push
in
jb
pop
mov
xor
or
lcall
cwtl
enter
imul
mov
inc
jb
add
aas
loop
xchg
mull
dec
data16
popa
mov
imull
imul
push
jge
lods
or
push
fs
mov
clc
inc
ficoml
sti
mov
inc
fdivrl
sub
cli
jge
cmp
mov
xchg
in
jns
xor
mov
dec
pop
pop
and
lods
cmp
aaa
mov
outsl
fildl
or
in
xchg
sbb
or
mov
add
insl
xor
ret
gs
loop
pop
mov
dec
xchg
bswap
jmp
cmpsb
dec
mov
jp
ret
mov
cld
sahf
repz
mov
cmc
mov
ror
adc
cmpsb
dec
mov
jno
call
cmpsb
daa
and
cmp
jge
mov
pushf
popf
test
aas
ds
xor
out
decb
inc
cmpsl
test
mov
pop
push
aaa
fcmovne
push
add
lcall
sbb
add
es
dec
stos
popf
repnz
pusha
dec
and
out
sti
out
or
leave
mov
xor
fiaddl
out
adc
in
std
lods
dec
fs
push
mov
mov
xchg
scas
inc
repz
stc
lds
xor
add
push
jo
scas
sub
out
sub
and
sub
inc
push
je
ret
movsl
pop
pop
inc
loop
lea
dec
mov
jmp
add
ljmp
imul
fimull
shlb
mov
call
or
rol
or
ljmp
out
fcmovnb
and
cld
push
or
sbb
repnz
lret
or
arpl
and
mov
pop
lcall
shll
dec
and
inc
add
in
je
lret
rclb
aaa
cmpsb
pop
sbb
jp
imul
or
jno
push
sbb
jecxz
pop
dec
test
inc
or
into
shll
ret
movsl
cmp
and
or
in
and
outsb
adc
add
mov
aas
bound
inc
cmp
dec
call
dec
test
xchg
js
lea
ss
mov
cmp
pop
or
in
in
jle
and
add
sbb
hlt
mov
icebp
mov
insb
or
push
and
push
in
xchg
inc
jno
or
ret
lret
dec
imul
jp
and
xor
xor
movsl
cli
rcrl
out
cmp
fidivrs
xchg
mov
sbb
ficoml
push
pop
mov
xchg
test
das
push
sti
jnp
leave
aaa
xor
jmp
lods
imul
outsl
aaa
sub
lock
push
mov
ret
mov
xor
stos
jge
fnstcw
lods
or
push
mov
dec
push
bound
jo
mov
sbb
push
shrb
in
push
aas
pop
mov
test
jge
jnp
mov
xchg
mov
jo
jae
insl
adc
mov
xchg
sub
xchg
ljmp
xchg
dec
ja
jle
daa
cmp
mov
mov
addr16
mov
sarl
adc
jns
sub
fidivl
sarl
inc
in
shrl
cld
cli
enter
dec
outsb
es
lret
inc
insb
mov
mov
push
ja
subps
decl
push
mov
lea
inc
aam
push
into
je
xor
jno
push
push
cmp
sub
stc
mov
push
clc
jnp
or
lret
jmp
xchg
insb
insb
dec
les
xor
out
cli
add
insb
lret
pop
mov
mov
rcrl
and
clc
sub
out
xor
mov
decl
inc
test
jecxz
inc
imul
mov
sub
and
jle
push
neg
jns
xchg
imull
popf
or
pop
roll
rorb
inc
sub
cwtl
mov
add
and
loope
xor
out
push
sbb
gs
aad
dec
mov
clc
or
or
jl
or
cmp
sbb
subl
insl
pop
xchg
cwtl
in
mov
cmc
sbb
mov
fldl
lock
jmp
cmp
fs
dec
sbb
pop
or
lock
daa
in
xchg
mov
mull
pop
aam
je
imull
adc
addr16
decl
dec
push
fucomip
and
sub
daa
cli
out
xchg
scas
test
jp
out
test
inc
xchg
mov
addr16
pop
cmc
mov
lcall
ljmp
lods
adc
in
ror
jmp
push
in
xchg
enter
or
xchg
aam
dec
push
dec
xlat
push
cld
aas
mov
insl
loopne
and
cmp
mov
cmp
idiv
mov
pusha
inc
or
ss
test
dec
dec
popa
mov
xchg
int3
lds
xchg
arpl
push
add
imul
scas
push
push
dec
bound
push
lret
in
lret
jg
fildll
ljmp
fcoms
sub
test
xchg
imul
inc
sbb
lahf
nop
mov
movsl
es
clc
lods
cmpb
inc
jno
push
lret
repnz
movd
adc
push
mov
scas
dec
jno
push
adc
and
ss
loopne
outsl
or
sub
mov
fdivp
stc
das
xchg
xchg
dec
add
xorl
adc
daa
mov
pusha
inc
ret
outsb
movsl
insb
ljmp
dec
je
jle
jno
xchg
loope
mov
outsb
or
fimuls
negl
gs
xchg
call
rep
mov
cmp
sub
or
xchg
imul
ja
jb
lods
pop
cmc
test
dec
push
bound
loopne
push
jmp
or
mov
add
lret
popa
pop
test
push
ljmp
jmp
mov
adc
dec
and
cmp
jae
and
data16
xchg
idiv
das
int3
mov
dec
xchg
push
insb
roll
xchg
aad
ss
jne
fucomp
inc
adc
xchg
mov
fiadds
xchg
add
add
data16
mov
cmp
lea
out
add
xor
cs
addr16
xor
add
roll
jge
lret
dec
cmp
pusha
jmp
adc
rcrb
push
adc
pop
sti
and
loope
je
cmc
imul
inc
shll
movsb
cmp
or
sbb
rolb
mov
scas
repz
jmp
jnp
cld
stos
adc
sar
movsb
mov
lods
add
sbb
pushf
xor
imul
push
and
loopne
nop
divb
ss
loop
cmp
adc
fists
das
notl
mov
scas
push
inc
adc
sahf
movsl
jo
lcall
int3
mov
mov
jb
enter
xchg
xchg
hlt
lods
pop
lods
dec
cwtl
pop
xchg
cld
outsl
mov
xor
dec
cmpsb
mov
aaa
mov
outsl
rcr
dec
add
cmp
jno
insb
in
divl
aas
mov
adc
mov
lahf
mov
cltd
mov
call
pusha
lods
mov
xrelease
adc
movsb
ss
mov
je
out
vmovdqa
test
or
adc
sub
inc
imul
bound
js
enter
mov
mov
sbb
or
mov
xor
jb
xlat
push
into
cmpsb
dec
imul
sub
xchg
jnp
jns
test
sbb
xchg
in
cmp
xchg
das
jge
mov
fwait
mov
push
xor
mov
push
outsb
call
jo
icebp
pop
out
adc
loope
icebp
xchg
mov
dec
jo
movsb
pop
insl
dec
mov
stos
inc
and
int3
add
push
aas
popa
adc
icebp
sub
gs
sbb
push
cli
lret
xor
sub
in
je
mov
mov
adc
cmp
xor
cs
and
lret
pushf
cmp
les
mov
sar
lock
mov
mov
daa
scas
inc
out
inc
imul
jne
hlt
mov
jmp
sub
push
xchg
iret
inc
add
call
cmp
and
inc
ljmp
pop
test
and
subl
in
fstl
mov
sahf
add
add
push
lods
pusha
inc
outsl
add
cmp
out
fsubrs
les
fdivrl
adc
jmp
xor
cltd
xor
mov
lods
jb
outsb
pop
stc
add
xor
aam
mov
test
aas
inc
popa
test
mov
sub
mov
imul
sbb
cwtl
ljmp
add
xor
pushf
fwait
ret
adc
loopne
shlb
fisubrl
popa
mov
jp
adc
and
aaa
inc
push
and
xor
fcmovu
jp
iret
popf
xchg
fldenv
inc
xor
sbb
push
mov
fcmove
popa
or
inc
rclb
cmp
adc
fimuls
adc
faddl
rorb
loop
cwtl
push
dec
mov
les
adc
pop
sbb
push
lcall
inc
dec
jmp
sub
scas
ljmp
inc
mov
out
out
pop
push
sub
mov
out
inc
sarl
fisubrl
cltd
das
sahf
and
fwait
arpl
pop
mov
les
daa
or
lods
jle
add
add
cld
stc
jb
xchg
add
push
jae
sahf
test
scas
ret
cwtl
mov
xor
pop
push
fs
dec
sbb
cmp
dec
push
negb
add
dec
dec
ror
rorl
stos
xchg
push
je
jo
popf
jns
mov
aaa
js
adc
aaa
adc
movsb
test
int
push
stos
lcall
sub
adc
movsb
les
mov
rol
mov
and
lret
test
mov
addl
js
cld
xchg
lahf
jp
or
dec
aaa
es
jle
jp
xor
jge
das
mov
and
arpl
dec
insl
je
es
js
inc
sub
lret
mov
mov
jo
out
not
inc
sbb
cltd
loope
pop
es
xor
je
into
cmpsl
dec
sar
lret
mov
xor
lret
orl
inc
cli
push
cld
push
rclb
js
mov
sub
inc
sbb
xchg
ret
cli
xor
xchg
popa
mov
jle
pop
push
pop
push
test
in
jnp
rcrl
mov
adc
fucomi
xchg
adc
pop
movsl
lds
inc
adc
inc
cmp
push
sub
xor
xor
cwtl
lahf
sub
or
mov
push
dec
pop
aas
fnstenv
fcomi
call
or
daa
mov
mov
test
xchg
push
jne
inc
in
lcall
daa
paddq
repnz
fistps
jg
movl
in
add
cmpsl
mov
xchg
lds
or
pmuludq
or
cli
ficompl
sahf
subl
xor
cli
mov
stos
ret
jp
inc
dec
mov
mov
mov
insl
cltd
decb
test
dec
notb
ret
mov
dec
sbb
xor
mov
lcall
repnz
imul
push
push
jg
lds
std
pop
fldcw
add
fs
daa
cli
push
dec
mov
cmp
xchg
outsl
insb
xor
scas
dec
mov
sti
jge
mov
clc
push
pop
movsb
add
or
mov
aaa
jnp
cmp
shrb
frstor
inc
das
or
adc
inc
pop
xor
lods
sbb
pop
sub
fcompl
pop
pop
sbb
xor
loope
cli
cli
jae
xchg
fdivrl
xchg
inc
pop
fstl
ret
sub
out
sub
xchg
cltd
adc
addb
cmp
aaa
mov
shll
jge
dec
sarl
int3
cld
add
dec
mov
pop
xchg
mov
lods
cmpsl
add
xchg
jno
imul
call
in
ret
sahf
xor
xor
roll
cmp
cmpsb
mul
pop
pushf
dec
lea
imul
jne
cmpsb
push
lcall
aad
xor
and
insb
mov
cltd
inc
jne
add
mov
jg
xchg
out
pop
mov
mov
xor
inc
mov
inc
pop
push
jo
jecxz
xor
cmpsb
mov
add
inc
ret
xchg
repz
inc
mov
and
rorb
jno
stc
dec
adc
das
dec
inc
push
rcl
iret
cli
loop
sbb
inc
mov
repnz
lods
movq
stos
or
mov
lahf
inc
out
mov
notl
mov
pusha
sub
out
inc
movsb
add
lret
xlat
xchg
cmpsl
sub
ret
xor
das
inc
ljmp
shll
jae
sbb
xchg
mov
pop
xor
sar
scas
sub
ffree
mov
xlat
xor
jge
pop
cmp
es
sbbl
dec
std
jle
jne
leave
pop
sub
scas
cmpsl
fwait
or
out
aad
imul
les
out
xchg
mov
sbb
mov
int
pop
fstps
mov
addr16
mov
mov
sbb
cwtl
gs
lret
popa
nop
aas
ljmp
pop
imul
leavew
or
hlt
ret
scas
stos
mov
lock
mov
add
popf
adc
test
xchg
ret
fwait
bound
test
sub
sub
mov
lahf
and
mov
jle
push
popf
mov
shrb
or
adc
pop
subl
mov
out
sti
jnp
mov
add
call
xchg
push
add
shll
testl
loope
push
hlt
pop
flds
out
add
dec
into
popa
mov
fwait
sub
mov
pop
pop
loopne
xor
pop
movsb
add
lds
es
pop
jp
pop
mov
jle
mov
xchg
je
fstpl
andb
rorb
jle
movb
mov
cmp
mov
sbb
xchg
or
js
movsb
add
repnz
and
mov
and
push
scas
push
outsl
sarb
ds
fs
divl
add
lret
mov
mov
arpl
ret
push
jae
test
inc
xlat
jae
jnp
sub
test
gs
cld
xor
pop
loop
imul
in
mov
cmp
sub
movsl
pop
push
jl
push
sbbb
loop
lret
movsb
pushf
les
lcall
jns
jo
mov
push
push
mov
xor
aam
rcl
add
inc
lahf
cltd
lock
sbb
and
cmp
imul
aad
mov
inc
jg
je
xchg
pop
lods
mov
jp
fldl
pop
add
inc
enter
jne
iret
in
je
aaa
sti
dec
test
testl
je
mov
out
addr16
xor
add
sbb
or
adc
mov
loopne
flds
add
mov
mov
sbb
in
and
fldenv
mov
add
pop
ja
cltd
xchg
scas
out
rcll
aad
cwtl
mov
adc
loop
push
adc
imul
leave
pop
fwait
movsb
pop
and
mov
out
mov
lret
aad
mov
push
xchg
mov
and
sbb
lahf
out
cwtl
mov
sub
push
std
mov
jnp
mov
les
xchg
aaa
loope
or
fs
jns
imul
ss
int3
mov
push
lret
movsb
jmp
dec
outsb
pop
adc
sar
je
mov
inc
std
xchg
mov
cmp
outsb
dec
pop
lea
orb
inc
cmp
sbb
stos
jns
hlt
push
call
loopne
stos
xchg
ds
loop
pusha
cmpl
add
sahf
loope
mov
mov
test
imul
arpl
mov
call
aas
push
cmp
test
mov
push
adc
mov
orb
mov
decl
test
dec
subb
xchg
mov
inc
adc
add
int
aaa
fsubs
in
in
inc
jl
lock
dec
out
or
xchg
sbb
jno
lret
mov
adc
in
adc
mov
lods
negl
pop
popf
xchg
pop
je
icebp
xchg
add
push
iret
jae
outsb
mov
push
outsb
add
rol
push
shll
xchg
push
insl
xchg
xor
pop
addb
push
in
fsubrs
lods
sti
and
cmp
and
fldenv
call
add
idiv
out
sysret
lret
lock
out
aaa
jo
stos
loopne
scas
cmp
rorb
mov
ja
pop
mov
shlb
cmp
jge
das
cmpsl
inc
dec
or
mov
stos
lcall
sub
movsl
flds
movsb
adc
lods
testb
cmc
into
ror
sub
jp
lods
pop
ret
dec
ret
out
pusha
inc
in
pusha
in
loopne
lds
mov
dec
mov
dec
insb
out
enter
imul
cld
xor
sbbb
sub
out
incl
jge
addb
stos
sbb
dec
data16
les
fisubrl
movsb
int3
pop
mov
pop
dec
loopne
repnz
sbb
mov
dec
hlt
xor
popf
das
xchg
jmp
jb
aad
push
loop
jecxz
loopne
mov
push
mov
cmp
and
jbe
xchg
or
les
pop
movsl
cmpsl
lods
or
cmp
jl
popf
dec
mov
std
add
jmp
jp
inc
incl
ds
hlt
mov
push
shll
sti
repnz
test
or
mov
push
scas
and
xor
cmp
pop
fistps
pop
in
push
pop
jecxz
push
lods
xor
scas
scas
xchg
pop
aam
insb
movsb
cmp
jnp
add
jecxz
arpl
cli
pop
ja
movsl
lods
fs
pop
aas
out
cmpsb
mov
inc
rorl
dec
fsubs
dec
pop
fldcw
xchg
push
sbb
and
jno
mov
pop
mov
push
cmp
push
mov
shll
int3
or
addr16
or
repz
addr16
mov
sub
jge
outsl
test
mov
icebp
nop
mov
xchg
mov
sbb
movsb
push
xlat
jmp
mov
sub
inc
cmpsb
xor
sub
jmp
movsb
dec
dec
mov
addr16
out
outsl
add
adc
or
bound
into
and
cmp
pop
mov
loop
les
jae
inc
ficoms
stos
jns
cmp
mov
pop
je
xor
call
sbb
mov
stos
lods
xchg
sub
jmp
sbb
pop
and
sbb
fs
pop
sbb
add
cs
xor
stos
mov
sbb
lock
dec
sbb
sbb
addr16
jno
xchg
adc
or
outsl
sbb
addr16
stos
xor
dec
cmc
push
jnp
aam
cmc
pop
sbb
xor
cwtl
inc
push
jbe
cmp
mov
int
xchg
pop
and
and
and
aas
pop
shr
mov
addr16
leave
push
aas
inc
pop
out
pop
dec
les
jbe
dec
sub
sarl
imul
jmp
enter
fisttpll
cmpsl
add
mov
js,pn
push
lret
push
in
adc
lret
ljmp
mov
xor
or
cmc
dec
and
fcoms
sbb
push
shll
jo
outsb
ds
pop
mov
fcoms
scas
outsl
lods
xorb
in
mov
frstor
cmc
cli
jno
and
pop
add
hlt
daa
mov
out
int3
ret
adc
sub
aas
cmp
negb
or
mov
jns
leave
jp
dec
add
push
adc
movsl
call
dec
pop
xor
vpackuswb
icebp
mov
xchg
shlb
pop
outsl
dec
js
cmp
jg
inc
mov
popl
hlt
in
aam
xor
out
add
and
add
jo
xor
imul
adc
lds
es
pop
mov
into
push
divl
inc
and
repnz
or
enter
clc
mov
sub
jecxz
aam
pop
mov
testb
push
out
xor
or
call
mov
push
dec
cwtl
das
cmpl
cmc
mov
cmp
cmpsl
in
or
testb
sbb
sub
insl
pop
pop
repnz
cmpsb
inc
xor
xlat
lods
inc
push
sub
cmp
fcompp
pop
ljmp
and
push
clc
add
mov
push
in
mov
fwait
call
cmp
sub
int
cmp
adc
imul
add
pop
sub
cmp
push
cmc
insl
mov
je
pop
push
ljmp
mov
out
stos
cltd
mov
add
sbbl
fldt
std
mov
add
movsl
xor
xlat
and
pop
pusha
jno
std
jnp
iret
jg
movsl
push
or
and
nop
imul
sbb
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
push
jg
jae
cmc
sbb
dec
imul
sbb
or
push
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
cwtl
mov
cld
shl
pop
das
int
mov
dec
xor
je
outsl
scas
xchg
mov
inc
aaa
sbb
test
repz
push
adc
in
mov
push
cmc
sbb
dec
cmovo
lcall
jae
ret
mov
cmp
pop
stos
in
jmp
in
pushf
jle
lret
jns
nop
and
mov
adc
xor
xor
popa
aas
mov
outsb
cs
adc
push
incl
jae
ret
mov
mov
inc
jmp
jns
pushf
in
fs
or
mov
inc
mov
sub
cli
pop
sbbb
mov
fisttps
mov
lcall
dec
xchg
mov
mov
push
and
mov
cmc
sbb
dec
popf
mov
icebp
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
or
dec
xchg
mov
cmc
sbb
dec
xchg
mov
stc
sbb
dec
jb
and
sbb
pop
xchg
mov
cmc
or
dec
xchg
lods
and
sbb
dec
bound
cmc
sbb
pop
fistpll
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
lea
loope
subl
dec
xchg
in
pusha
sbb
mov
orl
xchg
loope
orl
pop
cmc
sbb
nop
xchg
mov
cmc
sbb
dec
xchg
pushf
and
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
dec
xchg
mov
cmc
sbb
loopne
mov
cmc
sbb
imul
mov
ss
dec
pusha
call
sbb
cmp
loop
rol
or
dec
mov
lods
mov
fisubrl
jbe
lret
movsb
rorl
and
cmpsl
pop
cld
aad
out
pop
jbe
rcr
ret
negb
xor
fstl
fimuls
arpl
or
xor
rcrb
dec
lcall
jns
pop
add
addr16
jnp
scas
push
ficomps
test
mov
movsb
xchg
pop
fcompl
add
cltd
and
and
add
stos
sarl
stos
dec
jecxz
xlat
jmp
cmp
xor
mov
push
mov
mov
call
add
add
fistps
mov
out
rolb
shrb
data16
mov
mov
repnz
insb
jmp
int3
gs
cs
addr16
push
mov
insl
pop
cmp
andl
pop
pop
std
sub
or
fcoml
mov
shlb
je
fists
inc
adc
loope
inc
scas
jg
inc
mov
sti
aam
mov
in
lds
hlt
push
pop
mov
push
mov
shlb
pop
call
mov
sahf
pop
push
lock
cmpsb
aaa
jns
nop
xor
jo
cmp
sub
push
icebp
outsb
addr16
lds
gs
xor
and
iret
pop
ds
hlt
pop
out
loop
mov
inc
push
xchg
sahf
pop
repnz
aaa
in
aaa
std
push
enter
ds
and
sti
movsb
inc
sahf
outsb
and
xor
and
sbb
pusha
leave
or
inc
and
xor
iret
test
pop
clc
sbb
clc
aam
xor
movsb
fildl
xlat
lds
jns
setb
clc
pusha
je
enter
and
mov
push
or
push
lahf
jmp
mov
sarb
xchg
jl
add
rcrl
push
hlt
xchg
xor
lcall
and
sub
mov
sub
repz
je
rclb
int
iret
lcall
cli
push
in
jno
js
fnstcw
xor
mov
es
jns
leave
out
push
dec
and
adc
and
jmp
lea
cs
mov
dec
jb
inc
scas
xor
cmp
push
sti
cmpsb
addl
setno
mov
mov
int3
rorb
cmp
iret
jge
jge
and
testl
insb
stos
add
cltd
mov
xchg
das
jne
pusha
push
sbb
ljmp
adc
jns
pop
jle
push
int
sbb
call
mov
dec
sti
call
loop
cmc
xor
dec
inc
xor
cmpsl
repnz
and
sbb
pop
rorb
test
cmp
xchg
xchg
dec
lock
xchg
les
fdivl
pop
and
or
dec
cli
fdivrs
lahf
mov
stos
in
fldt
inc
es
fs
push
test
jl
sub
xor
in
mov
pop
fisubrl
lret
mov
out
mov
or
sbb
mov
loopne
jne
test
popf
mov
mov
dec
mov
xchg
icebp
push
xchg
lret
pop
cltd
inc
lods
push
scas
mov
xchg
adc
sub
fisttpll
in
cmpsl
cmc
fsubl
mov
outsl
scas
call
cmp
daa
test
dec
add
sbb
mov
jne
or
imul
pop
aaa
cmpsb
pop
pop
ret
sub
inc
xchg
clc
out
jmp
inc
push
fsubr
call
mov
in
bound
mov
sbb
sbb
ret
call
adc
adc
mov
mov
aas
add
pop
lcall
in
mov
xlat
lahf
cwtl
lds
adc
lods
pop
xor
repnz
inc
std
imul
sti
out
push
xchg
jae
frstor
add
adc
inc
jb
sbbl
cltd
sbb
dec
sub
and
pop
out
out
aaa
mov
xchg
adc
mov
mov
stc
or
out
ret
jo
ret
in
icebp
mov
add
scas
adc
cld
bnd
loopne
mov
and
repnz
mov
loopne
xor
jp
cwtl
or
inc
subb
inc
mov
mov
xor
sub
push
adc
or
ljmp
mov
loop
mov
cmp
and
xchg
or
js
and
push
jecxz
cli
lret
mov
cmp
dec
xchg
xor
and
sub
sbb
adc
xor
outsl
and
sub
popf
push
sarl
pop
xchg
loopne
sbb
es
js
imul
in
dec
push
sbb
fsubrs
jnp
pop
cli
pop
aad
push
test
cli
jbe
add
cli
and
mov
sahf
push
repnz
addl
jg
push
sbb
add
lcall
ficoml
mov
inc
bound
xor
or
dec
sbbb
out
inc
xor
cmp
insl
enter
js,pn
xor
pushf
jg
xchg
jp
jae
add
shll
cmp
out
ret
mov
sbbl
out
movsb
mov
adc
pop
mov
lods
dec
lcall
sub
int
and
imul
je
in
out
pop
mov
mov
sbb
fsubrs
adc
jl
lret
adcl
dec
popa
stc
cltd
rol
mov
aam
andl
dec
lods
shlb
lock
sub
jae
jnp
push
imulb
jp
dec
inc
loope
inc
fcmovnu
mov
rcrl
adc
mov
mov
push
adc
ret
movsl
int3
jno
scas
test
test
and
bound
ds
leave
or
jbe
mov
rorb
sarb
aam
aam
and
jecxz
or
mov
aaa
stos
pop
or
ljmp
int
sbbb
nop
in
sbb
inc
lret
mov
add
test
xlat
push
pop
lahf
push
push
mov
arpl
loope
lahf
adc
mov
add
ret
fcoms
xor
ds
xchg
push
jl
push
dec
jecxz
jl
cmp
dec
dec
jle
ficompl
repz
ficoml
jl
scas
xchg
dec
stc
imul
fwait
add
xchg
in
and
idiv
loop
test
fdiv
out
imul
in
icebp
push
sbb
adc
mov
dec
ret
lock
cmc
mov
int3
aaa
sbbl
lcall
cmpsb
add
pop
jge
cmpl
mov
xchg
mov
fcmove
and
stos
mov
icebp
mov
inc
mov
pop
loop
movsb
mov
mov
mov
sub
insl
jle
out
mov
or
out
add
std
jp
scas
mov
adc
cmpb
and
xchg
adc
aam
pushf
lret
test
aaa
push
dec
push
push
push
shrb
adc
arpl
inc
fldt
mov
xchg
aam
rcr
xor
xlat
or
jno
popa
mov
push
dec
dec
stos
jl
mov
loop
inc
inc
mov
shr
in
mov
pushf
dec
push
lods
int
or
pop
adc
stos
dec
ljmp
xorl
jb
mov
mov
lret
add
mov
out
or
add
pop
lea
adc
out
mov
pushl
fistl
xchg
jnp
mov
rcr
xlat
cld
sti
cmp
cmp
sub
mov
mov
lods
repnz
jecxz
adc
dec
and
data16
push
cmp
pop
push
xchg
adc
push
mov
xchg
stc
gs
adc
xchg
mov
mov
fistpll
sub
cmp
gs
and
and
fists
push
or
loopne
push
cwtl
insl
sub
jecxz
add
adc
add
nop
add
stos
jnp
fisttps
sub
repnz
xor
dec
mov
xor
stos
cmp
jecxz
push
mov
push
stc
xor
and
decl
popf
leave
jne
pop
inc
xor
inc
shlb
cltd
mov
and
dec
xchg
pop
mov
loopne
stos
sub
jp
cmc
xlat
out
dec
mull
dec
in
data16
es
jge
push
es
or
repz
inc
dec
jbe
and
cmp
je
insl
fmull
mov
test
push
sbb
pop
sub
add
cmp
add
and
ss
ss
pop
int3
insb
and
mov
les
imul
xlat
in
frstor
in
dec
inc
sahf
push
in
fscale
lea
push
outsl
cmp
outsl
fists
push
push
aam
and
mov
dec
jg
jnp
call
inc
xchg
and
das
ds
add
push
adc
loop
sbb
sbb
popf
enter
int3
cmp
and
adc
insl
arpl
inc
inc
sbb
shrl
mov
lea
cli
push
pop
aam
sbb
mov
pop
arpl
pop
aad
mov
or
jno
mov
mov
mov
mov
inc
enter
mov
add
add
adc
inc
scas
xorb
inc
in
sahf
bound
sbb
mov
and
or
inc
dec
repnz
jg
push
jae
fidivrl
sub
dec
xor
cmp
pop
fwait
movsb
mov
push
sub
ljmp
pop
sahf
movsb
and
ds
neg
pop
jle
notl
mov
jmp
bound
pop
jnp
jge
xor
push
jge
mov
sbb
and
pop
mov
lcall
cmpsl
sub
inc
inc
cmp
pop
mov
jle
fsubl
sbb
out
ds
loopne
push
sbb
adc
pop
adc
adc
sbb
mov
lods
stos
add
arpl
mov
jg
push
add
cmp
movsl
or
mov
outsb
test
dec
fidivrl
iret
xor
shll
pop
jl
addr16
std
jne
pop
and
das
xor
inc
ret
xor
nop
xchg
add
adc
jle
sub
or
sbb
jb
mov
int3
cmp
pop
mov
shrb
add
fwait
movsl
adc
xor
pop
xor
pop
dec
cmp
int
sbb
inc
scas
xchg
pop
push
dec
jne
cltd
cmp
les
or
enter
inc
call
das
xorb
lods
insl
cmp
mov
sbb
push
enter
jb
lods
and
cmp
js
arpl
repz
arpl
sbb
mov
or
inc
pusha
sbb
sbbb
mov
dec
dec
mov
mov
neg
lahf
inc
sub
lea
pop
xchg
movsl
scas
ret
neg
mov
insb
inc
stc
test
jnp
mov
arpl
fcomip
rcl
push
les
adc
ds
push
sub
dec
lahf
fmull
lahf
add
push
mov
sbb
vpaddw
add
dec
mov
mov
sub
popf
aam
or
inc
xor
jb
jecxz
fwait
or
xlat
dec
sbb
mov
mov
mov
or
mov
jecxz
popf
sub
imull
in
or
xchg
test
jnp
push
jg
bound
stos
pusha
push
stc
push
inc
add
addr16
rolb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
