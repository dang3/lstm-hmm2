and
ret
xchg
xchg
insb
ret
inc
test
mov
rcl
and
xchg
aaa
dec
pop
gs
popf
mov
xchg
push
das
mov
sub
sbb
and
loopne
sbb
mov
inc
frstpm(287
adc
cld
sbb
push
xor
repz
mov
call
mov
mov
pop
loope
ret
push
xor
fisttps
xchg
frstpm(287
das
add
inc
xlat
jmp
iret
jnp
rclb
push
cwtl
push
inc
pop
pop
inc
xchg
mov
mov
aam
addr16
sub
ja
sub
pop
lcall
or
int
lret
fsubl
mov
rcrb
mov
push
push
mov
jnp
xlat
mov
nop
jnp
mov
cmp
pusha
dec
cmp
push
ljmp
add
pop
xchg
lods
ss
and
mov
movsb
mov
je
movsb
inc
xchg
daa
add
inc
pop
ret
mov
addr16
inc
and
xchg
sub
and
pop
xchg
mov
or
cmp
dec
gs
jne
sti
push
popf
imul
mov
enter
and
repnz
lea
mov
bound
or
in
add
push
jns
xor
out
out
xchg
andl
and
cmpsb
cmp
xchg
jne
pop
out
arpl
mov
push
xchg
dec
sub
scas
mov
or
cmp
mov
rolb
jp
outsl
xor
mov
arpl
push
xor
rcrl
movsl
stc
sub
ja
and
add
and
xor
ljmp
aad
mov
movsb
jbe,pn
dec
jecxz
add
sti
cmp
test
loope
inc
mov
std
test
movsb
cmp
pop
fs
xor
lahf
add
inc
cmp
sub
inc
cld
test
cltd
call
lcall
mov
pop
adcb
lret
cmp
xor
leave
pop
jp
cmp
jb
xchg
mov
enter
int
add
xchg
cmpsb
inc
pop
inc
hlt
test
loop
testb
fsubr
or
nop
cmovle
icebp
mov
pop
xchg
xor
dec
sbb
cmc
mov
add
push
xor
push
pop
int
jge
pop
adcb
in
push
es
and
inc
sbb
fwait
insl
out
pop
in
adc
sub
jp
mov
es
mov
and
imul
xor
leave
cmp
inc
lock
add
insb
xchg
sub
je
popf
dec
and
add
mov
in
add
repz
xchg
push
out
cmpsl
cmp
xchg
mov
pop
sub
aaa
daa
pop
pop
sub
push
sbb
leave
xchg
inc
sbb
call
mov
clc
mov
flds
xor
test
mov
jmp
repz
cmp
dec
xchg
lcall
or
int
add
push
in
ss
out
inc
pop
out
push
mov
scas
push
sub
push
in
inc
in
sahf
xchg
scas
mov
xlat
les
jo
push
cld
or
fistpl
arpl
mov
ret
stos
mov
pop
testb
mov
pop
js
pop
inc
shll
les
cli
std
cmp
rcrb
inc
aam
inc
lods
add
xor
repz
fcmovnbe
jnp
push
fs
add
cmp
aas
clc
mov
mov
sahf
stc
pop
mov
jne
or
fistpll
mov
xchg
inc
inc
dec
ret
mov
hlt
pop
stos
xor
in
in
inc
mov
cld
adc
jb
dec
mov
add
add
push
mul
negl
pop
lods
jl
ret
dec
lods
stc
aaa
mov
scas
insb
andl
cmp
mov
xchg
scas
popa
lods
test
sti
pusha
test
mov
lret
dec
and
jne
sub
cli
arpl
mov
pop
push
stc
inc
adc
sahf
and
push
testl
pop
adc
arpl
cmp
adc
xchg
push
divl
xor
pop
sbb
and
fildl
xchg
nop
es
jno
aaa
fldt
sub
fbstp
incl
aaa
mov
pop
push
in
aad
clc
inc
sub
push
add
or
inc
add
cmp
sahf
cmp
cmp
mov
mov
dec
inc
dec
add
xchg
dec
shlb
cmp
inc
leave
test
mov
rcr
ret
lahf
sub
sahf
cmp
mov
push
lea
jns
inc
lods
gs
in
fcmovnu
push
cltd
xchg
xchg
mov
mov
fcoms
outsl
fs
mov
mov
mul
popf
xor
push
and
mov
fldcw
loop
mov
and
and
jecxz
sahf
jge
shll
cmp
sbb
loopne
ss
dec
or
add
adc
fisttps
xor
push
insb
xor
pop
rep
cwtl
les
mov
sbb
xchg
pop
je
xor
fstpt
mov
jecxz
cmp
xchg
mov
pop
aaa
sbb
outsl
jb
outsl
sbb
add
fldt
dec
and
mov
adc
dec
cmp
and
pop
shll
sub
lahf
sarb
js
inc
jo
outsl
lock
xlat
mov
test
jg
jne
sbbl
cmp
pop
pop
and
dec
cmp
cmc
ja
data16
mov
das
add
mov
hlt
ret
gs
adc
hlt
add
inc
lret
arpl
mov
cmp
adc
ret
icebp
lret
fcmovu
out
mov
jle
mov
lea
jmp
outsb
sbb
pop
subl
stos
rclb
ds
imul
mov
mov
enter
push
jne
mov
lods
jle
adc
popf
cmp
call
or
ja
add
cmp
sbb
loop
push
in
popf
fldt
add
push
scas
mov
cmpb
adc
roll
fsub
aad
js
lea
icebp
add
addr16
out
stos
out
int
xor
sub
movl
daa
out
push
xor
imul
daa
es
sti
movsl
add
mov
and
dec
push
push
sarl
add
pop
cmp
push
adc
add
filds
jmp
test
dec
idivl
in
pop
pushf
jae
jge
arpl
sbb
repnz
je
inc
sub
repnz
dec
ret
mov
and
imul
fisttpl
pop
pop
or
sbb
imull
jmp
sub
lods
insl
jne
stos
cs
add
add
sti
jo
std
adc
in
xchg
mov
pop
push
sbb
jae
xor
rclb
add
mov
bswap
btr
adc
fistpll
ficompl
lret
sbb
fcomps
push
mov
mov
adcb
out
xchg
pop
pop
mov
lds
add
mov
aam
fisttps
mov
mov
arpl
std
lds
shll
inc
rcll
gs
sub
jg
mov
jne
test
iret
push
lea
dec
xchg
mov
popf
or
clc
sbb
mov
push
mov
sub
rol
test
ds
insb
btr
jge
mov
push
movsb
in
dec
mov
sbb
in
xor
adc
jae
jnp
call
adc
mov
mov
repnz
mov
lret
loop
cltd
jmp
mov
insl
dec
cld
mov
lcall
aas
fldt
and
lret
or
pop
and
rorl
mov
jo
lods
lcall
jecxz
and
cmpsb
mov
enter
stos
or
imul
push
sub
sub
adc
mov
xor
sub
adc
lahf
sbb
rep
jg
mov
push
test
popa
push
cmp
push
loope
mov
ljmp
push
cmp
fsubr
add
xlat
mov
pop
xchg
daa
outsb
ret
xlat
push
loope
add
sbb
enter
mov
ror
cmp
xchg
cmpb
and
lods
stos
in
bound
pop
cmp
xlat
fsubl
add
push
test
push
add
pusha
add
ja
pushf
add
jp
push
lds
add
stc
push
push
mov
dec
aas
mov
dec
fs
lret
jecxz
out
ffreep
ss
fistpl
ret
mov
push
or
xchg
cmpl
mov
mov
or
js
cmpsl
lcall
mov
mov
popa
gs
xor
and
xor
push
sbb
dec
jb
scas
mov
jp
jl
dec
and
or
xor
test
popa
xchg
ret
test
ljmp
imul
mov
pop
and
cmp
stos
stos
gs
xchg
daa
enter
div
aad
icebp
or
adc
push
sub
pop
mov
xchg
cmp
mov
mov
movsb
gs
sub
out
cwtl
call
mov
xchg
jge
sbb
jmp
cmpsb
test
fs
mov
std
mov
jle
push
mov
sub
or
push
aam
mov
sub
and
fimull
pop
mov
ficoms
sbb
pushf
loopne
cmp
lret
fdivrs
push
lods
cwtl
shr
std
lds
lds
pushf
dec
mov
pop
ja
mov
int3
sbb
sbb
sub
mov
xchg
rcrl
xchg
mov
push
pop
or
add
hlt
outsl
dec
ds
andl
outsl
cmpsb
jge
lret
mov
test
or
iret
pop
xchg
lods
adc
mov
xor
outsb
lahf
pop
xor
lret
lret
jno
adcl
popf
or
fmul
lods
cltd
pusha
dec
mov
movsb
pusha
pop
mov
mov
and
pop
adc
ret
cmpsl
mov
loop
movsb
adc
dec
pushf
jg
fisubrs
jo
and
jne
sub
mov
add
or
stos
aaa
testb
adc
mov
je
or
add
inc
hlt
sbb
out
nop
dec
lret
clc
xchg
roll
insl
dec
nop
and
jl
mov
shlb
lea
cmp
mov
and
jg
push
imul
dec
xor
cld
dec
sahf
andl
enter
jne
jno
adcb
call
cmp
add
push
fsincos
out
hlt
imull
add
subl
sub
mov
inc
rorb
xor
je
dec
jbe
cli
push
push
sbb
sbb
jmp
cli
mov
out
push
loopne
lahf
sahf
sbb
xlat
xchg
adc
mov
xchg
lea
mov
push
sub
sbb
data16
das
in
pop
jecxz
test
xchg
lahf
rorl
dec
lcall
ror
hlt
insb
pop
cwtl
dec
jno
pop
into
aad
rorl
mov
xor
cmp
jmp
sti
jb
sti
cmp
fwait
xchg
mov
xlat
or
loop
ja
aaa
pop
arpl
test
mov
adc
sbb
pop
jge
mov
rcr
mov
test
adc
ds
or
inc
dec
adc
aam
stc
cmp
movsl
push
adcl
xchg
in
fdivs
dec
test
xchg
adcb
dec
mov
repnz
bound
jbe
pop
pop
pop
sub
sbb
bound
or
out
xchg
pushl
inc
xor
test
cmpsl
shlb
loopne
test
aad
xor
mov
insl
mov
push
js
aaa
mov
fs
out
add
lahf
aas
movsl
cmpsl
mov
sbb
arpl
pop
subl
push
movsb
add
rcll
and
push
add
dec
mov
lock
mov
and
mov
xor
jno
mov
sbb
fdivs
dec
inc
push
es
sarl
test
dec
cmc
add
js
add
add
std
bound
jmp
enter
in
sbb
pop
mov
adc
push
addl
repnz
call
sbb
add
and
mov
cmpsb
ds
jo
repz
fstps
fxch
pop
mov
xchg
add
adc
cmp
dec
into
add
push
mov
loope
and
sti
jo
xchg
lcall
and
sub
fstpl
push
fcom
aad
mov
jae
xchg
pop
mov
mov
and
add
xchg
or
scas
movsl
add
xchg
xchg
rep
adc
bound
dec
fldenv
sub
test
insl
mov
push
scas
out
fidivrl
in
xchg
push
dec
test
std
repnz
lea
add
inc
cmp
es
xchg
xchg
sbb
loop
cmpl
fs
adc
dec
push
lods
xchg
dec
mov
push
add
xor
cltd
pcmpeqd
xorb
mov
lret
mov
pop
sub
sti
in
cmp
sbbl
imull
or
push
push
arpl
add
out
ret
imul
mov
ljmp
loope
std
push
rcr
sub
or
aad
add
xchg
jns
pop
lea
or
les
sahf
into
fcoml
xlat
int
adc
mov
cwtl
jmp
jbe
sub
xchg
jmp
pop
add
mov
cmp
jecxz
fwait
int3
int
cmpsl
mov
inc
out
or
fstp
gs
lret
sbb
jle
cli
xor
out
in
cli
jne
repz
adc
outsb
addr16
dec
in
fisttpll
out
mov
popa
andl
pushf
sarb
pop
push
and
outsb
pop
call
mov
inc
mul
insb
push
inc
out
pop
xchg
sbb
jno
fwait
nopl
int
std
xlat
ds
jl
adcb
or
lods
stos
sahf
mov
xor
sbb
orl
push
inc
pop
mov
test
push
es
mov
inc
into
xor
adc
test
cli
push
push
pop
cltd
or
add
xor
xlat
shll
pop
lock
mov
insb
sbb
test
adc
mov
adc
dec
dec
repz
movsb
fmuls
cmp
test
xchg
incb
cmp
fistpll
xor
mov
inc
gs
mov
adc
fstpt
mov
sti
sub
jge
push
sub
nop
inc
popa
les
lret
sub
mov
inc
mov
sbb
inc
scas
clc
push
pop
mov
cwtl
inc
out
out
loopne
out
repnz
arpl
xchg
sbb
dec
imul
sti
or
push
idiv
sbb
and
mov
add
imull
fnstcw
pop
fcom
fadds
xorb
adc
leave
pop
and
dec
fstl
jne
or
mov
push
sub
stc
add
rcrl
mov
aas
fists
aam
cmpsl
xchg
xlat
add
sahf
stos
jae
pusha
pop
scas
dec
adc
and
mov
repz
bound
jns
or
jo
add
or
lock
xchg
push
cmp
leave
ret
pusha
mov
lret
ds
iret
jp
mov
enter
loop
mov
or
sbb
adc
arpl
inc
repnz
out
push
and
push
jl
mov
jg
dec
adc
add
and
add
inc
pop
pop
stos
push
ds
push
idivl
movsb
jns
sbb
xchg
push
jp
xchg
jmp
test
mov
rclb
jge
int
dec
pop
xchg
je
fnstsw
aam
xor
ret
and
dec
pcmpgtb
sbb
jne
stos
inc
jne
aad
popf
test
out
call
mov
or
adc
shl
adc
fisubrs
sub
xchg
out
sbb
mov
out
scas
cmp
mov
pop
stc
ror
sbb
fcmovnb
fistl
sti
out
xchg
js
out
xor
mov
or
mov
addl
mov
in
adc
inc
idivb
inc
cmpsl
pcmpgtd
xor
xor
ljmp
push
xchg
mov
dec
push
sub
mov
sbb
xchg
xchg
pop
dec
push
sbb
mov
jle
adc
lea
cmp
cmp
xchg
addr16
and
pop
push
mov
jbe
stc
bound
mov
xchg
pop
jnp
and
mov
push
imul
mov
dec
xchg
lea
mov
lret
addb
adc
pop
insl
mov
jne
pushf
lea
mov
lds
loop
shrl
dec
outsl
xchg
test
xor
enter
jmp
cmp
mov
mov
jl
sbb
pop
addr16
pop
aas
ss
jno
dec
add
dec
fs
pop
xchg
sub
add
or
nop
int
xchg
jg
imul
lret
ljmp
adc
xor
jp
mov
sbb
rorl
mov
fsubs
movsl
sbb
cmp
mov
je
loope
int
or
mov
fnstcw
fcoml
int3
pop
shll
cmpsl
sti
arpl
call
lcall
cli
nop
fcmovnb
add
push
mov
fucomp
inc
pop
xor
sub
mov
jmp
cltd
mov
cmpsl
lcall
leave
test
push
mov
xor
mov
push
ds
in
addr16
and
je
xlat
mov
jge
sub
lods
mov
cli
xchg
fcmovnb
add
sbb
rcll
insb
xchg
adc
ud2
cld
xchg
pop
jle
pop
jnp
mov
js
sub
push
and
push
std
cmp
data16
add
dec
mov
popa
aam
xchg
lock
lock
sbb
pop
add
cmpsl
pushf
and
and
sbb
sub
shlb
ljmp
add
ret
lahf
cltd
jp
push
jne
xchg
enter
xchg
cmp
add
ljmp
lea
sbb
lods
testb
rcll
cmpsb
sbb
test
sarl
adcb
adc
mov
jnp
les
add
mov
movsb
add
decb
mov
int3
sub
mov
jns
jno
lcall
push
in
cltd
mov
mov
dec
fcoms
add
cmp
or
xchg
cltd
jg
mov
int3
movb
add
cmp
rclb
int
mov
psubw
jo
jne
loop
outsb
je
and
cmp
adcb
pop
jno
enter
out
pop
jne
jnp
mov
loopne
into
xor
test
shl
inc
jge
xchg
sti
mov
movsl
movsb
pop
test
jg
xchg
mov
loope
dec
adc
xlat
loop
icebp
sti
and
dec
mov
das
xchg
sbb
mov
jle
scas
mov
cmp
add
cmp
stc
lock
pop
mov
jge
inc
jo
int
xchg
ljmp
jg
add
cmp
dec
xchg
xchg
mov
inc
ss
mov
ljmp
data16
fisttpll
cmp
leave
adc
fisubrl
loope
aad
rsm
jns
adc
cmc
jae
sub
mov
pop
out
inc
lods
xchg
adc
scas
and
into
arpl
stos
xchg
dec
mov
push
stc
cmp
or
fwait
push
push
mov
jno
mov
addb
mov
shlb
aam
data16
push
int
aad
jle
movsl
adc
push
jge
fwait
jecxz
jge
scas
add
push
push
mov
enter
cmp
mov
les
stos
imul
fucom
jae
lahf
stos
movsl
inc
sub
jge
sub
mov
out
lds
jns
popf
add
and
div
and
leave
std
cmp
mov
loopne
rcrb
rcr
cmp
ficomps
pop
mov
insl
insl
mov
scas
push
movsb
popf
sub
push
out
cld
test
ja
outsb
in
loopne
pop
and
out
int3
imul
in
jmp
and
jge
hlt
sbbl
movsb
jl
push
cltd
les
int3
js
add
xor
incb
bound
sbb
dec
or
sub
jno
xchg
cltd
push
adc
out
xchg
cli
adc
aam
inc
jp
or
push
adc
push
bnd
adc
jmp
add
adc
sbb
sbb
outsb
cs
cvtdq2ps
xor
add
and
faddl
lcall
in
jg
cld
xchg
adc
jg
or
push
inc
xchg
xchg
stos
stos
or
jbe
sub
popa
insb
mov
in
das
and
gs
xlat
movsl
testb
arpl
stc
daa
ret
xchg
cmp
mov
icebp
sbb
rorl
dec
ja
dec
cmpl
lea
std
gs
fisttpll
push
pop
loop
in
inc
movsl
sub
push
aad
mov
int
cwtl
nop
ret
leave
outsb
fucomi
xor
sub
nop
loope
ds
out
mov
shrb
jo
lock
cmp
insl
sbb
int3
pop
ficompl
std
xchg
out
stos
sub
sub
cltd
mov
xchg
sti
push
xchg
xor
fiaddl
and
lret
dec
inc
sbb
gs
scas
data16
test
pop
cmp
jmp
sbb
add
movsb
scas
popf
clc
mov
xor
outsl
push
shlb
mov
lret
mov
les
in
pop
mov
add
sbb
test
rorb
sub
fldenv
movsl
xor
popf
mov
jne
xor
clc
fldenv
sbb
sti
xchg
sbb
sub
adc
push
dec
mov
std
rcl
xor
cmc
fistps
in
cmp
pop
push
pop
out
mov
mov
mov
call
jmp
xor
lds
cs
pop
shrl
or
adc
jnp
mov
xchg
out
cld
insb
insl
jge
and
adc
xor
jbe
adc
insb
shl
add
jne
adc
xor
jg
rorl
gs
aam
cs
out
inc
pop
or
cmp
in
inc
sub
inc
ja
mov
lock
leave
lods
fsub
cli
call
daa
sub
sub
adc
xor
enter
lcall
jecxz
xchg
sub
sar
dec
inc
push
lret
push
psubusb
out
scas
inc
sti
sbb
lahf
daa
mov
cmp
lret
cmp
int3
sub
push
pop
out
mov
pop
jbe
cli
mov
push
aas
sub
jl
dec
and
fwait
ds
aas
nop
mov
and
lds
xchg
push
cmc
sub
repz
std
xor
mov
cwtl
insb
pop
out
daa
stos
dec
jmp
jmp
jle
por
push
loop
add
dec
enter
add
mov
enter
pop
sub
ja
out
sbb
mov
cld
inc
inc
ds
jnp
mov
scas
mov
xor
sbb
scas
add
iret
jne
xor
mov
dec
mov
or
pop
sbb
out
iret
std
loopne
std
mov
stc
sub
ret
pop
xchg
shrb
sbb
es
mov
xchg
push
cmp
lret
pop
mov
int3
push
pop
stc
lahf
push
iret
pushf
inc
fsubs
push
push
cmp
scas
jo
xchg
sub
adcb
jp
mov
add
dec
aaa
das
inc
dec
repnz
les
int3
pop
mov
sub
cli
loopne
pop
in
in
cmp
fisttpl
lret
adc
and
adc
adc
and
lods
sub
leave
jo
out
les
sub
sarb
adc
sbb
ljmp
int
and
sarb
cmpsb
icebp
clc
daa
out
mov
in
fiaddl
jmp
rcll
lods
cli
icebp
cmp
dec
or
mov
dec
xor
jae
in
push
test
pop
xchg
popf
nop
and
cs
out
lods
icebp
cmp
movsl
ja
jbe
mov
roll
mov
aam
xchg
ja
dec
jnp
jmp
fldt
hlt
jnp
popf
cwtl
in
jb
pop
rcrb
jl
pop
aaa
repnz
dec
sub
add
jge
pop
push
xchg
jns
xchg
lret
movsl
pop
jne
popf
push
push
into
xor
xchg
repnz
sub
dec
scas
push
sub
xor
cmpsl
call
outsl
adc
xchg
inc
icebp
xchg
xor
jb
fadds
mov
ja
mov
repz
sbb
lahf
cltd
stos
andb
mov
push
test
sar
or
es
jb
fnstsw
jge
in
xchg
push
aad
xor
ret
xlat
arpl
iret
pop
mov
pop
add
outsl
xchg
pushf
pop
popa
iret
roll
cmp
sub
pop
loopne
adc
pop
xor
ror
iret
out
les
pop
repz
lcall
dec
dec
js
sbb
xor
cmp
sub
mov
std
mov
cld
push
insb
arpl
dec
xchg
stos
popf
mov
lcall
leave
inc
adc
sbb
adc
lret
insl
test
cli
lret
dec
jno
insb
or
inc
ljmp
inc
gs
sub
cmp
enter
inc
jnp
rorl
sbb
mov
cwtl
ljmp
stc
cmp
xor
pushf
inc
aam
add
imul
push
inc
pop
mov
lock
sub
cltd
rolb
loop
mov
adc
out
adc
decb
sarl
stos
jae
mov
mov
leave
rcrb
sar
fdivr
cmp
sbb
inc
sti
std
mov
pop
fneni(8087
arpl
sbb
push
xor
mov
rcr
fs
lcall
and
loop
xlat
aam
test
repz
fstpl
mov
mov
dec
testb
cmp
cmp
sub
ds
movsl
jge
sbb
scas
scas
xor
jb
int3
aas
ficompl
dec
pop
leave
fadds
cmp
jns
shrb
mov
mov
pop
ljmp
testl
pushf
adc
mov
jnp
jb
jmp
xor
push
pop
cmp
jae
aas
js
jnp
xor
dec
nop
es
push
aaa
push
fildll
jae
inc
xchg
xlat
or
stc
pop
add
mov
cld
mov
and
mov
cmp
outsl
push
adc
push
int3
pop
xor
adc
cmp
or
dec
stc
and
das
pop
out
mov
in
mov
fsubrl
in
mov
notl
das
sub
mov
add
mov
out
xchg
movsb
jnp
mov
pop
xchg
mov
adc
aad
daa
divb
cli
int
sbb
into
movsb
clc
cld
jo
xchg
xlat
cmp
mov
cmp
gs
daa
outsl
xchg
dec
jmp
xor
popf
cmpsb
ljmp
rcrl
jnp
test
daa
dec
sbb
pop
xchg
pop
pop
movsl
dec
std
decb
jp
mov
inc
inc
popl
pop
dec
or
push
test
pop
or
bound
aam
or
daa
mov
mul
mov
fidivrs
test
or
cmpsl
imul
dec
jae
jae
call
pop
movl
or
cmpsl
adc
sbb
add
stc
jae
add
lock
shrl
ljmp
dec
mul
adc
xchg
nop
loop
pop
faddl
roll
loope
lcall
lahf
xchg
cmp
xorb
or
pop
dec
push
jbe
imulb
push
js
pop
push
add
cmpsl
loope
les
inc
dec
lods
pop
idiv
xor
dec
sub
out
fdivrl
sbb
iret
add
pop
or
arpl
push
es
pusha
je
test
mov
or
mov
jno
add
add
or
mov
and
sub
push
sub
inc
loop
jbe
mov
sti
in
outsb
dec
adc
xor
mov
inc
push
fucomip
lahf
sub
cmp
in
mov
xor
cld
sbbl
cmp
push
bnd
js
loope
add
xor
shrb
sbb
pushf
loopne
shll
pusha
jno
add
jecxz
mov
outsl
sub
cmc
mov
cmp
dec
inc
popf
pop
loopne
arpl
jl
push
sti
push
push
and
lahf
and
cmp
lret
test
push
jnp
mov
fwait
sarl
sub
dec
push
push
fs
add
fildl
mov
jbe
jle
arpl
js
ds
sbb
incl
sbb
jbe
jp
mov
add
dec
fisubrs
scas
sbb
sbb
das
fisubs
cld
scas
xlat
jne
jno
mov
pop
jmp
mov
out
rolb
and
push
xchg
or
sbbb
ja
mov
in
ja
mov
aad
lock
lcall
shlb
sbb
push
pop
cmp
out
inc
pandn
jnp
rclb
mov
aad
push
jbe
icebp
add
in
push
insb
imul
xlat
lahf
repnz
pushf
mov
lods
scas
test
gs
mov
mov
jp
ds
xor
sahf
add
je
fldt
add
mov
push
xchg
pop
mov
mov
mov
nop
jb
lcall
xorl
ja
add
dec
fistl
mov
scas
add
shlb
inc
imul
fmuls
fstl
cmp
xor
or
lcall
cld
jecxz
pop
sbb
and
mov
repnz
xor
cmp
or
fisttpl
push
fildl
call
outsl
jo
lods
fbstp
mov
cmpsl
testl
movsb
icebp
sub
push
dec
lock
jb
lcall
add
cmpb
cmp
push
mov
mov
nop
jp
int
lods
rdseed
data16
or
nop
fdivs
sbb
mov
inc
mov
push
popa
popf
dec
or
rolb
sbb
lahf
mov
and
dec
pop
fdivrl
jecxz
sbb
dec
push
cwtl
mov
sbb
hlt
adc
imul
add
xchg
jnp
fisttpll
cmc
ret
stos
inc
sti
xlat
mov
jp
cmpsl
cmpsb
imul
shrb
xchg
dec
cmp
xor
adc
cmp
mov
push
bound
hlt
imul
popf
icebp
jp
pop
jmp
mov
imul
dec
outsb
loope
jecxz
or
pop
icebp
or
sbb
roll
test
jne
fwait
scas
scas
mov
lods
ljmp
fcmovnbe
dec
int3
scas
je
cmp
add
pop
fcoms
mov
adc
jmp
shl
pushf
test
test
ficomps
das
push
call
scas
paddb
dec
xchg
xor
xchg
shll
dec
xchg
or
mov
mov
hlt
inc
arpl
mov
push
popf
cmp
loopne
mov
ss
sub
lea
jmp
rcll
test
ss
sub
rcrb
fistl
sti
push
rorb
rcrl
outsb
and
sbb
dec
or
jae
stos
mov
xor
pop
repz
inc
jno
repnz
or
lret
jne
ret
mov
sbb
pop
cwtl
call
sar
cmp
sbb
cs
insl
push
mov
int3
xchg
sar
scas
lea
xchg
rcl
xchg
cmpsb
mov
std
movsl
or
adc
idiv
ror
mov
inc
fildl
jg
lcall
pushf
cmc
loopne
mov
ss
int
inc
bound
je
push
scas
adc
std
lods
sbb
stos
sti
push
sbb
int
mov
lret
cli
sub
enter
les
xor
cmpsl
andl
repz
and
fucom
aas
add
adc
imul
outsb
incb
sbb
jne
outsl
stc
jo
cmpsb
faddl
inc
in
add
push
or
ja
lods
dec
mov
push
pop
sbbb
dec
and
shlb
xlat
jl
add
sub
movsl
cmpsb
xchg
pop
jg
mov
xor
imul
bswap
lods
jecxz
testb
jp
movsl
dec
movsb
mov
xor
orl
xchg
shrl
and
scas
lods
cli
movsl
ficomps
fnstsw
jno
mov
pop
cmpsl
pop
dec
xchg
add
test
lock
rol
jae
mov
fisubs
mov
add
movsb
ljmp
or
movsl
lea
ret
mov
ja
jne,pt
xchg
das
or
and
clc
cmp
mulb
xchg
outsb
xchg
cltd
cltd
jmp
insb
push
aaa
and
cmp
lock
addb
xchg
xchg
xchg
ficomps
add
xor
pop
bound
aas
test
iret
sbbb
xor
sub
mov
mov
push
xchg
loopne
mov
dec
inc
lds
mov
adc
xor
insb
push
jmp
cmp
popf
push
push
fildl
add
lret
dec
push
cmp
aaa
cmpsl
addl
inc
adc
jo
fldenv
les
jbe
add
outsl
imul
xor
loope
xor
adcl
push
stos
cmp
sbb
inc
push
mov
pop
jno
pop
xor
dec
push
pop
cmp
or
bound
dec
ror
test
jbe
int3
push
loope
cmpsb
add
loope
xor
fwait
dec
or
rorl
or
push
call
sub
pop
enter
xor
out
push
dec
jno
lock
cmpsl
push
arpl
mov
jne
push
movsb
sarb
fimull
jbe
jmp
mov
mov
sbb
sarb
test
stc
movsb
mov
sub
iret
loope
inc
xor
cmp
xchg
stos
xor
mov
adc
adcb
mov
mov
pop
sti
mov
popa
pop
pop
xor
movsl
adc
in
mov
lods
in
aam
mov
test
mov
xchg
bnd
jno
gs
xchg
inc
fadd
jne
imul
jle
loopne
push
jg
jb
and
push
fsubrs
imul
sub
ret
lods
rorb
dec
js
cmp
xchg
push
mov
insl
into
mov
add
es
mull
aas
sbb
ror
mov
aaa
ss
mov
inc
add
std
push
adc
jp
mov
mov
out
insb
jl
inc
mov
es
scas
mov
mov
xor
pushf
cli
add
jns
mov
mov
imull
shlb
fsubrp
mov
cltd
dec
fcompl
in
sbb
cmp
scas
jae
fs
repnz
pop
nop
cltd
inc
add
sbb
sub
and
push
jae
jl
pslld
dec
and
scas
sti
jp
pop
xchg
or
aaa
data16
aam
mov
add
cmp
adc
mov
xchg
dec
jne
insl
addb
fs
add
pop
and
std
repnz
popa
or
popf
in
xlat
jno
ret
and
pop
add
test
jmp
aam
aad
jle
daa
dec
fiaddl
inc
and
sahf
sub
bnd
js
rolb
imul
cmpsb
fcmove
add
in
inc
mov
cmp
aam
rclb
imul
sub
iret
cli
xchg
das
adc
stc
mov
pop
pop
jg
cmp
test
stos
in
pop
xchg
push
cwtl
sahf
push
cmp
int3
jo
xor
imul
inc
mov
adc
rolb
sarl
push
mov
mov
insl
push
scas
daa
lods
pop
jge
daa
mov
pop
ljmp
jg
jmp
leave
scas
lret
xor
movsb
xor
lret
addr16
clc
cmp
xchg
lahf
mov
in
mov
test
push
out
test
adc
lock
imul
xchg
shlb
adc
xchg
inc
cmp
add
pop
hlt
in
xor
pusha
xchg
loopne
stos
inc
test
pusha
dec
rcll
sub
mov
cmp
xchg
cmp
js
bound
cmp
fnstcw
xor
mov
js
loop
lcall
movsb
xchg
mov
xchg
insl
sub
shrl
and
test
jle
es
pop
divb
into
ds
sub
test
sbb
mov
rcrb
mov
adc
sbb
sbb
daa
jb
movsb
movsb
or
xchg
scas
sbb
cwtl
ss
jno
xor
popa
inc
decl
pop
push
lret
es
or
mov
add
pop
lcall
xor
imul
int
add
dec
popa
push
imul
std
push
into
je
pop
and
loopne
add
xlat
mov
roll
dec
mov
inc
and
adc
jne
repz
popf
xor
mov
in
cmp
mov
jno
xor
int3
or
mov
mov
cmpsl
je
xor
inc
std
push
mov
pop
mul
jo
add
fcomi
adc
jle
jl
adc
and
nop
mov
int
mov
or
pop
adc
and
mov
cs
pop
ret
mov
xchg
jnp
add
scas
jp
dec
and
jne
data16
lock
sbb
dec
call
movsl
addb
or
sub
in
cwtl
loope
ficoms
dec
push
cwtl
std
inc
dec
imul
dec
pop
xchg
pop
sbb
shrl
aas
ds
in
jno
adc
inc
pop
mov
mov
xor
fisubs
mov
jns
dec
sub
dec
outsb
pop
or
int3
xchg
jb
loop
or
out
sub
jb
mov
subb
pop
mov
ljmp
and
and
aam
pop
lds
mov
iret
or
movsl
in
sub
or
bound
aaa
adc
mov
lret
call
pusha
shrb
andb
out
add
inc
jbe
cld
cmp
mov
cmp
fs
push
fdivs
idivb
test
out
cli
push
push
loopne
jbe
cmpsb
movsb
mov
icebp
jae
push
add
and
mov
loopne
sub
movsl
and
jno
mov
xor
adc
pop
bound
sbb
les
mov
jnp
mov
in
pop
outsl
cli
imul
mov
out
mov
jp
mov
stos
jns
ret
mov
and
std
cli
insb
sbb
push
mov
dec
xlat
fcoml
sbb
stc
dec
test
bound
dec
scas
add
pop
and
les
push
pop
jbe
mov
pop
outsb
test
movsb
sub
push
mov
fs
add
pop
add
clc
inc
sub
insl
dec
pop
bound
mov
jno
leave
in
enter
inc
stc
pop
fisubs
jp
adc
xchg
pop
mov
sbb
jns
sub
xor
sbb
in
xchg
mov
xorb
jle
pop
mov
jmp
shll
loopne
push
mov
inc
sahf
andb
pusha
adc
adc
sub
push
or
or
push
push
or
push
mov
and
or
ret
sub
insb
movsb
mov
push
stc
repz
sbb
mov
pop
call
xchg
ljmp
fistpl
fs
sbb
enter
inc
inc
ja
xorl
mov
pop
add
jmp
mov
pop
mov
fldcw
inc
push
sub
cmp
icebp
adc
mov
cwtl
xchg
loopne
pop
add
mov
sbb
test
jp
loopne
es
idiv
into
cmp
jg
pop
inc
xchg
add
ret
or
addr16
xchg
subl
insl
or
jbe
push
cmpb
mov
mov
cmp
test
test
repnz
std
lods
jo
mov
loop
xchg
inc
cmpb
sti
mov
popf
xchg
or
inc
and
pop
jp
dec
out
cmp
inc
fsubrs
add
jnp
sub
push
movsb
mov
cmp
out
cmpsb
lds
in
push
or
loopne
cmp
mov
cmp
add
inc
cltd
addb
addl
mov
mov
push
dec
adc
imul
loope
out
cmc
mov
cmp
push
sahf
inc
and
and
repz
push
push
insb
jne
or
add
xor
outsb
sbb
out
push
xchg
sbb
clc
mov
mov
movsl
mov
pushf
cmpsb
repz
inc
mov
stos
jl
shlb
adc
pop
xlat
repnz
inc
rol
fst
jb
pop
stos
push
mov
sbb
pushf
rorb
xchg
stos
jo
fldcw
call
and
adc
lea
cwtl
mov
sub
mov
mov
add
dec
ret
xor
cmp
push
ret
hlt
arpl
xor
xchg
xor
fmul
add
cmc
movb
movsb
enter
dec
xlat
int3
sub
pop
mov
push
js
das
cmp
add
rcrl
imul
push
adc
test
loop
rcrb
jmp
test
or
push
push
out
xchg
enter
mov
mov
shrl
sbb
daa
mov
pusha
in
inc
or
insb
int
adc
stos
imul
jp
subl
push
xor
stos
cmc
setbe
pop
push
adcb
pop
stc
mov
int
adc
inc
stc
mov
pop
xchg
pushf
inc
jmp
sbb
inc
test
loopne
pop
push
jl
add
sbb
shrb
hlt
fwait
daa
cmp
sbb
lcall
inc
imul
sbb
jle
xchg
aaa
mov
cmp
xor
ss
movsb
inc
rol
xchg
pushl
cmp
inc
inc
push
lock
xor
enter
push
sbb
js
cmp
aad
pop
nop
lcall
es
in
lods
hlt
fcomps
xchg
out
shr
push
ljmp
adc
mov
add
cmpsl
cmpsl
and
xchg
jg
rcr
mov
push
in
js
dec
sub
mov
push
push
shlb
cmp
mov
jae
jmp
dec
sar
xor
xchg
add
imul
dec
mov
ret
mov
sub
cltd
aam
pop
and
vsubsd
sub
push
inc
push
push
insb
push
jl
mov
adc
ficompl
adc
jo,pt
icebp
inc
lahf
cmp
sub
jmp
aaa
insb
jne
popa
push
fisubl
mov
iret
add
adc
mov
mov
dec
ss
add
test
push
dec
stos
jp
push
xchg
push
shlb
pop
and
movsb
mov
sbb
movsl
hlt
mov
lods
mov
imul
cmp
je
sbb
and
ds
dec
js
and
mov
iret
test
add
sub
testl
daa
jns
inc
push
rorl
push
mov
mov
jmp
sbb
cwtl
cmp
mov
mov
inc
sub
ja
test
nop
add
mov
sub
repz
adc
inc
mov
push
inc
add
scas
scas
and
inc
xor
or
inc
sahf
repz
adc
in
pop
or
in
andb
lret
rdmsr
push
icebp
push
mov
xchg
lahf
push
movl
inc
test
mov
push
mov
add
stos
jne
mov
mov
out
ret
push
stos
lret
jge
jb
jne
daa
cmc
jle
in
std
push
imul
daa
hlt
add
sbb
into
enter
cwtl
jnp
pop
pop
mov
push
out
mov
cmp
in
mov
ret
pushf
jmp
dec
inc
mov
mov
or
test
adc
iret
xchg
pop
push
adc
xchg
xor
pop
adc
or
mov
push
clc
mov
lods
test
addl
aas
rclb
out
jo
ret
mov
mov
mov
push
in
jp
adc
enter
cmp
test
push
mov
aam
push
or
and
mov
and
mov
push
jo
das
lret
int3
dec
cmp
jmp
push
cmp
int3
outsb
xchg
int3
and
jae
fldt
inc
outsb
jmp
add
dec
jno
jecxz
mov
cwtl
aaa
scas
cltd
dec
or
jmp
in
or
xor
and
dec
pushf
repnz
stc
stc
ficompl
or
test
bound
aaa
xchg
fiaddl
pop
setl
lcall
dec
xchg
mov
inc
mov
dec
sti
orl
jnp
lcall
or
jg
cld
mov
movsl
sub
or
push
or
push
inc
or
and
decb
jmp
es
dec
mov
mov
add
bound
adc
jg
clc
lods
es
dec
pop
lea
jb
inc
xor
sub
leave
outsb
rcl
test
inc
hlt
fsubrs
xchg
mov
aam
insb
mov
test
outsb
mov
lcall
es
mov
or
gs
imul
mov
loop
dec
cmp
lret
push
aas
or
push
jge
jp
mov
addr16
add
inc
inc
cmp
fcoms
mov
xor
ficoms
jp
xor
jns
inc
mov
fdivl
or
cmp
fimuls
add
mov
lret
cmpl
in
sub
mov
iret
lcall
cmp
cli
pop
pop
ret
lods
mov
loop
out
enter
xchg
mov
inc
jae
xor
lds
loope
lret
mov
repnz
lret
sahf
mov
ljmp
sbb
xchg
push
xchg
mov
mov
xor
add
adc
cmpsb
faddl
pop
xlat
es
lcall
lcall
lcall
fs
xchg
mov
sub
pop
ja
push
dec
or
pop
sbb
imul
push
sub
add
mov
xchg
mov
movsb
cmpsb
and
lcall
mov
dec
push
jp
sbb
icebp
or
jp
jne
rcr
jmp
pusha
and
xor
jle
and
lret
adc
pop
aaa
outsb
cwtl
cltd
lret
movsb
repz
out
hlt
mov
or
bound
pop
cmc
lea
xor
mov
call
ret
notl
pop
pop
mov
rclb
push
iret
movsb
xchg
sub
push
mov
inc
push
ret
or
push
mov
repz
inc
outsl
call
sub
aad
push
mov
cmpsl
add
in
dec
pop
test
inc
in
aaa
jne
push
stos
cmpsl
sbb
mov
imul
jnp
ja
test
imul
fidivl
dec
cwtl
mov
xchg
lahf
lock
mov
jg
mov
cmpl
mov
jp
test
cli
mov
mov
cltd
pop
sahf
xchg
ljmp
pop
movsl
jns
mov
sbb
in
mov
push
cli
xchg
inc
xchg
jno
jge
aas
stc
push
pop
mov
popf
adc
xlat
arpl
and
scas
sbb
add
or
dec
ja
popf
mull
rorb
mov
mov
jno
cltd
lret
testl
dec
xchg
rorb
sbb
push
ljmp
cltd
mov
jns
call
pop
test
mov
mov
les
aam
test
ficomps
push
hlt
addr16
gs
pop
adc
stos
mov
mov
xor
xchg
pop
push
mov
int3
mov
sbb
xchg
sbb
pop
or
mov
cmp
subb
subb
addr16
push
mov
lock
push
loop
ret
cmp
jmp
or
cmp
pop
jmp
or
mov
fldpi
in
mov
rorb
int3
mov
fdivrl
movsl
outsl
movsl
dec
mov
mov
mov
gs
add
shr
adc
cmc
lds
sahf
and
shll
icebp
xchg
jo
xchg
push
or
out
and
xor
imul
dec
test
xor
push
sbb
test
cli
dec
mov
test
jmp
loopne
cmc
jae
and
dec
cmc
dec
xchg
adc
cltd
int3
dec
jecxz
push
repnz
loop
popa
mov
ds
rcr
lret
mov
push
lahf
or
sbb
roll
pusha
lock
repnz
jo
hlt
mov
sbb
bound
stos
cmp
mov
in
ret
pop
cmp
push
ret
sarb
inc
pop
int3
mov
inc
push
lea
lcall
aad
out
test
xchg
imul
mov
xchg
sub
cmp
sbb
and
jb
pop
cmp
fnsetpm(287
aad
sarl
and
out
jmp
sbb
imul
mov
aaa
inc
xor
shr
fstl
lahf
sub
or
out
movsl
lret
jae
fisubs
pop
mov
pop
sbb
xor
bound
sbb
inc
repnz
lret
sahf
cmp
cwtl
fdivr
sbb
ret
mov
dec
jbe
pop
ja
outsl
and
rcrl
mov
mov
dec
sbb
jge
nop
sbb
loope
mov
lock
mov
loope
pop
or
adc
sub
call
sub
pop
xor
fs
pop
outsb
dec
movsb
ror
js
jb
inc
inc
mov
lret
scas
mov
sbb
js
fwait
adc
cmp
test
jo
ret
jle
xor
mov
push
out
ja
sahf
cmp
jp
inc
repnz
mov
cmc
dec
mov
test
pop
or
test
int3
sub
shlb
std
fnsave
mov
inc
cmpb
int
xlat
adc
aas
mov
cmp
repz
adc
adc
lcall
dec
cmp
repnz
mov
cmp
pop
cli
xor
popa
cld
xchg
or
fsubrs
fs
mov
and
pop
movsb
fdivs
icebp
sub
xchg
push
or
add
cmpb
or
push
jbe
pop
cltd
push
outsl
push
and
mov
and
jne
xor
int
cmpl
mov
mov
and
push
pop
xchg
shr
cli
jl
xor
into
adcl
out
cmp
cmpsb
cli
mov
inc
imul
cld
adc
sahf
lret
lods
push
lods
push
sub
pushf
in
cmpsb
insl
add
sub
cmp
jp
jae
add
in
pop
pop
aas
lds
sahf
stc
sbb
stc
mov
int
pop
andl
mov
test
sbb
les
push
jb
xchg
inc
clc
ss
ss
hlt
jle
push
popf
xchg
add
addl
adc
xchg
pop
icebp
std
arpl
dec
pop
dec
adc
jecxz
cmp
insl
jne
cltd
push
rcrl
jnp
inc
negl
js
je
fcmovb
cmp
pop
mov
jb
lahf
cli
pop
cmp
pusha
mov
nop
mov
push
adcb
stos
mov
pop
mov
js
dec
cmp
xchg
or
rcll
inc
or
mov
mov
cmp
mov
arpl
pushf
push
mov
xor
vpminub
mov
bound
push
or
enter
mov
loope
jno
cmp
inc
loopne
pop
xchg
cmc
push
dec
fwait
inc
shrl
cmp
jo
push
adc
aas
pop
mov
jnp
push
rorb
pop
jle
cmp
lods
mov
in
loope
mov
and
sbb
imul
rcrb
xchg
push
xor
mov
cmp
sbb
repz
push
sub
lret
mov
es
adc
jp
loopne
jl
xchg
or
and
nop
adc
xor
fcoms
push
in
fs
and
sbb
sub
push
sbb
lahf
mov
data16
adc
popf
stos
daa
inc
sbb
mov
lds
cli
and
test
inc
out
popa
jle
ret
cwtl
pop
pop
aad
rcrl
mov
mov
cmp
out
push
sub
jecxz
loope
adc
add
mov
mov
jl
sbb
xchg
imul
adc
ror
push
fldenv
inc
stc
fwait
dec
cmpsb
daa
jge
lahf
pop
icebp
dec
fdivrs
mov
pop
inc
dec
mov
or
fcmovb
jbe
mov
aad
and
incl
jo
mov
clc
mov
push
lcall
scas
add
jne
andb
and
xor
es
jmp
std
movsl
mov
pop
pop
mov
cmp
push
mov
jmp
dec
and
insl
loop
adc
stc
cmp
dec
mov
arpl
imul
pop
outsl
int3
pop
mov
cmc
push
xor
into
loopne
dec
and
push
or
leave
mov
cmp
out
cs
push
cld
add
out
push
xorb
pop
cltd
jg
xchg
ss
data16
shrb
fildll
jae
dec
or
in
fidivs
inc
sbb
fimuls
cmc
xor
jo
sarl
jb
std
jne
pusha
rcll
xchg
jmp
addl
cs
rorb
add
ror
frstor
fadds
mov
popf
das
leave
in
test
adc
cmp
sub
ret
shll
cmpsb
leave
roll
jl
and
pop
dec
mov
stc
push
jg
pop
mov
bound
fisttpl
cmp
pop
xor
or
lcall
mov
push
pop
or
aam
rcrb
xchg
pop
adc
mov
inc
loopne
les
stc
sub
dec
sti
ja
lods
push
insb
outsb
push
mov
mov
adc
xchg
fs
mov
std
mov
dec
jns
arpl
test
xor
repz
push
add
es
add
enter
fwait
push
or
addr16
inc
push
js
cmpsl
add
das
cmpb
mov
jne
mov
shr
cwtl
ja
jnp
lgdtl
push
subb
xor
jns
notb
inc
fldcw
in
mov
pop
xchg
mov
leave
scas
jnp
sbb
or
imul
xor
out
test
enter
test
push
sbb
je
jne
aam
fists
out
lods
fimull
out
je
insb
or
mov
in
insb
cmp
pop
lret
into
push
test
ljmp
pandn
jne
adc
scas
inc
scas
addl
and
jmp
fs
pop
mov
stos
je
nop
jne
xchg
push
addr16
lahf
out
fildll
sbbb
insl
jl
inc
dec
or
out
pop
fs
xchg
push
iret
jns
and
inc
mov
lods
sub
mov
sti
adc
ljmp
jnp
mov
pop
pop
adc
add
ret
mov
mov
cmp
add
shl
test
movsl
xchg
mov
jo
xchg
outsb
hlt
loopne
pop
xor
std
mov
xchg
cmp
into
scas
jae
xlat
sahf
adc
inc
lret
sub
push
repz
ljmp
push
ds
jbe
mov
mov
xor
xor
push
sar
hlt
jge
scas
cld
loopne
fcoms
xor
push
fnsave
xchg
fisubrl
jo
jle
and
cmp
and
popa
jns
js
lcall
mov
incb
mov
test
xchg
pushf
sahf
stc
push
mov
rcrb
loope
aam
clc
mov
xor
lcall
ret
scas
dec
stc
mov
cmp
dec
mov
mov
jl
inc
in
std
pushl
xor
out
jo
enter
cmpsl
ss
xor
lods
arpl
sbb
testb
in
and
sbbl
inc
pop
es
std
adc
andb
jmp
jae
ret
leave
jl
pop
addr16
fcomps
lret
mov
test
outsl
sub
fnsave
fldl2t
add
xchg
pop
lret
cmp
adc
movsl
jl
sbb
imul
pop
loop
pop
xchg
xchg
or
pop
jnp
xchg
sub
mov
dec
lcall
mov
sahf
fsubrl
sti
sahf
lds
leave
mov
adc
mov
and
movsb
incb
cmp
adc
sub
ljmp
int
cltd
fbstp
xchg
push
out
push
add
clc
dec
stos
xor
dec
ds
xchg
in
mov
cld
xchg
loop
xor
mov
add
cltd
xchg
mov
jl
sbb
cld
sbb
jmp
and
popa
push
nop
mov
fucomip
test
sub
ds
mov
fsubr
int
or
lcall
sbb
sti
or
push
mov
mov
les
mov
loopne
jp
sub
mov
mov
pop
push
hlt
add
shrl
icebp
jne
test
jbe
pop
inc
lret
mov
enter
jns
cmp
cmp
test
out
jp
adc
call
test
jle
jo
jmp
xchg
inc
test
xlat
xor
push
pop
lcall
daa
mov
test
cmp
clc
mov
xor
dec
aas
mov
lods
add
aam
and
sub
movsb
loop
cmp
mov
mov
mov
pop
repnz
push
and
sahf
mov
mov
fidivs
iret
add
mov
mov
push
push
mov
mov
add
cmpl
aad
pop
xor
push
out
cs
mov
mov
popl
outsl
ret
add
sub
stc
push
test
or
push
jbe
adc
inc
bound
dec
rolb
insl
add
bound
int
add
sub
fmull
add
inc
fwait
inc
int
ljmp
mov
fwait
jo
ret
out
sub
sahf
jl
popa
sub
fdivr
add
mov
hlt
lea
pop
sub
into
dec
or
out
or
mov
jnp
fnsave
stos
mov
idivl
jg
adc
sub
xor
xchg
inc
push
lea
lcall
stc
mov
sub
cmp
jno
mov
mov
adc
imul
arpl
loope
scas
insl
add
enter
out
mov
pop
movsb
xchg
adc
adc
cmpsb
lahf
jle
xor
cli
ljmp
or
pop
and
stos
pop
sbb
xor
xchg
sahf
cmp
cmp
mov
ficomps
sub
outsl
or
test
jg
mov
dec
scas
dec
fadd
test
movsb
aam
es
jge
sbb
sbb
cmp
inc
mov
jecxz
xchg
mov
inc
xchg
ljmp
inc
sbb
xchg
cmp
loopne
pop
movsb
cltd
push
sub
adc
jbe
sahf
dec
mov
cli
and
jbe
call
js
fmuls
aam
add
sti
inc
or
push
arpl
out
sub
cwtl
mov
subb
fs
add
or
stos
pushf
mov
xlat
jns
pop
inc
jo
shll
negb
lds
aaa
aam
rclb
and
inc
mov
sub
jg
testl
lret
lret
outsl
mov
xor
movsb
scas
ror
mov
inc
sbbb
sub
mov
push
rclb
fbstp
mov
adc
shll
dec
xchg
xor
and
repnz
jns
gs
fcomip
cwtl
cmp
or
inc
icebp
sbb
pop
and
call
sbb
xchg
rcl
or
dec
or
mov
loope
loopne
lock
outsb
cmp
adc
lret
mov
or
repz
dec
movq
push
aas
rorb
push
cmp
jb
inc
lods
mov
sarl
or
mov
outsb
cmc
je
enter
and
cli
jmp
and
xchg
dec
dec
scas
add
pop
mov
mov
lahf
cmp
mov
lea
push
cmp
cmc
cmpsb
shrl
add
insb
sbb
jb
test
test
sbb
inc
ret
mov
dec
cld
pop
sub
mov
add
mov
mov
jo
out
ds
jnp
lods
in
add
rolb
sahf
mov
dec
std
sub
jle
sbb
lea
mov
xchg
jnp
jae
mov
lret
or
adc
mov
imul
or
xor
nop
call
mov
aas
sub
cmpsb
pop
cli
and
jle
test
sub
push
scas
adc
xor
cltd
cmp
push
jg
or
xor
jp
inc
les
cmc
sbb
add
test
jle
sub
mov
loope
pop
jmp
cmp
jl
repz
mov
jae
fs
out
mov
mov
cmp
adc
inc
cmpsb
jl
loopne
jecxz
inc
push
gs
inc
xor
pushf
insb
xor
stc
repnz
push
xchg
cld
cmp
test
rclb
lods
faddp
pop
es
mov
icebp
lret
out
sbb
daa
and
cwtl
sub
cmp
cmpsb
ljmp
push
inc
push
pushl
mov
test
sub
mov
jmp
pop
movb
mov
imul
movsb
rclb
repnz
les
sbb
mov
repz
pop
aam
push
inc
jmp
jb
and
jmp
mov
aas
mov
mov
aam
cmp
mov
sti
dec
popf
xor
dec
inc
adc
orl
fldenv
gs
jbe
ret
dec
cmpsb
xor
gs
test
repz
insb
lds
push
mov
mov
add
mov
aaa
outsl
movsl
xlat
push
pop
ret
sub
sar
inc
pop
loop
std
call
or
sbb
mov
lahf
cltd
pop
imul
push
dec
xchg
jae
int3
jns
mov
xor
aad
das
push
or
divb
xchg
popa
inc
jmp
pop
loopne
stos
or
lods
pop
adc
test
das
push
xchg
data16
jns
fwait
jp
cli
cs
lcall
xchg
mov
inc
inc
mov
int
pop
addr16
adc
dec
rcll
xchg
jns
sub
and
cmp
daa
lcall
xchg
mov
adc
adc
loope
ret
test
sti
decb
invd
int3
adc
pop
add
ljmp
dec
dec
mov
mov
push
clc
xchg
push
std
cmp
jbe
leave
sarb
jmp
mov
out
es
and
scas
mov
pop
cs
cmpsl
xor
mov
sub
adc
cwtl
loope
pop
insl
pop
inc
sahf
ficompl
cmp
push
xor
or
aaa
add
ret
and
lds
and
in
push
adc
ret
xchg
shl
pusha
faddp
popf
aad
jnp
adc
fistps
stos
fdivs
mov
sbb
cmp
rcll
bound
dec
or
push
call
add
mov
and
pop
clc
mov
rol
pusha
adc
incl
add
addr16
aas
mov
dec
jmp
push
std
adcl
aad
mov
enter
clc
dec
aad
out
mov
inc
in
jle
sahf
inc
mov
add
inc
xchg
sub
sub
stc
mov
mov
test
xor
push
mov
les
clc
out
fdivl
les
xor
adc
sub
lods
lods
cmpsb
sarb
loopne
push
insb
test
mov
ret
xchg
icebp
es
adc
pop
mov
add
pop
push
pop
lret
push
sub
sub
jle
sub
adc
je
sub
sub
loop
dec
stos
stos
push
mov
inc
xor
fwait
jmp
into
dec
rorb
jnp
dec
movsb
jb
pop
adc
jb
adcl
cwtl
or
xor
out
pop
mov
or
inc
cmp
pusha
jae
in
lods
dec
loope
and
ljmp
adc
jmp
out
xchg
fwait
daa
enter
sahf
xchg
xor
mov
cmp
and
and
mov
push
cmp
pop
fs
mov
adc
test
or
jge
mov
mov
test
jecxz
loop
scas
mov
pop
orl
pop
rep
sub
jb
mov
pop
jecxz
inc
in
mov
sti
adc
sub
pop
and
mov
fdivl
mov
leave
and
mov
test
nop
movb
mov
adcl
pushf
js
jg
jmp
out
scas
mov
jnp
dec
dec
fucomip
test
xor
adc
fldenv
and
insb
sti
mov
or
loopne
inc
push
xchg
jno
sar
mov
in
sbb
cmpsb
lds
xchg
cmp
mov
popa
mov
les
mov
push
sbb
lea
out
mov
mov
mov
add
andl
jo
inc
ret
and
pop
jg
stos
pusha
fwait
jbe
add
mov
lret
cmpb
fs
imul
inc
xor
test
sbb
inc
mov
pop
jmp
bound
xor
mov
in
or
sub
movsl
repnz
sub
cmp
je
dec
jp
adc
jmp
sub
mov
add
and
add
cld
ret
cli
add
out
mov
outsb
mov
push
dec
add
rclb
push
gs
mov
aam
sti
aad
scas
imulb
ds
in
cmc
mov
loop
out
or
int
sub
adc
push
ljmp
repz
subl
jne
repz
adc
or
xor
or
test
pop
lcall
xor
out
out
push
jo
inc
fsubl
mov
xor
ret
rorb
out
cmp
sub
mulb
xor
mov
mov
push
push
sti
fs
cmpsb
ja
jae
movsl
push
test
sub
add
cmc
cmp
sub
mulb
enter
lods
test
daa
add
inc
movsl
jns
inc
add
jge
adc
lods
lock
loope
push
pop
cld
jo
insl
jnp
dec
mov
jns
pop
sbb
movsb
loop
mov
mov
adc
in
xor
jbe
in
mov
xor
xchg
loope
and
orl
ficompl
rsqrtps
xchg
rcrb
push
lret
lcall
sbbb
pusha
imul
out
imul
mov
jnp
mov
insl
fcoml
add
pop
mov
arpl
jb
scas
push
jmp
rolb
add
popf
jb
add
test
push
popa
hlt
or
bound
xchg
push
aad
cwtl
and
std
aaa
lret
out
in
xchg
idivb
iret
jle
push
icebp
insb
or
outsb
pop
add
outsl
lret
std
pop
add
out
inc
cs
shrb
pop
dec
jae
popf
xor
inc
ds
add
xlat
loopne
mov
int3
ljmp
sub
orb
in
jecxz
inc
sub
daa
jmp
jnp
sbb
push
xchg
cltd
call
int
insl
incb
xchg
movsb
mov
cmpsl
imulb
and
cmpsl
add
push
mov
roll
lret
rclb
adc
ret
lahf
xor
lods
adc
es
fnstcw
jnp
imul
icebp
mov
loopne
inc
push
cli
push
and
neg
pop
aad
pandn
loop
daa
in
rorl
das
cmp
mov
pushf
js
push
adc
xor
lods
dec
adc
mov
insb
xor
testl
add
xchg
lods
push
out
or
fists
out
xchg
xlat
call
jbe
pusha
and
inc
outsb
push
mov
mov
fnstenv
icebp
cmpsb
cmpb
out
rorl
xor
hlt
test
shlb
push
mov
test
aaa
js
out
mov
enter
shll
in
mov
sahf
and
fisttpll
bound
mov
push
stos
test
cld
fimuls
mov
add
pop
adc
lret
das
push
jmp
ret
dec
lods
js
jecxz
or
in
jne
jmp
mov
ret
push
and
mov
sub
and
stos
pop
or
push
pop
fs
lret
iret
pop
adc
pop
push
sbb
out
jl
std
push
inc
inc
xor
xor
loopne
lods
lock
xlat
and
xor
repz
push
es
sub
and
or
popa
decl
fbstp
mov
mov
push
cmp
stc
fiadds
adc
xchg
std
jbe
imul
hlt
cmp
inc
aas
insb
mov
cmpsl
aas
add
jmp
decl
push
lahf
arpl
adc
xor
shll
int3
xchg
data16
test
mul
or
outsb
jns
cmp
clc
lcall
jae
sub
addr16
int3
dec
scas
mov
ss
add
xchg
mov
mov
divb
push
cwtl
int3
shll
adc
call
clc
mov
cmp
or
pop
cmp
jle
cmovbe
into
pop
mov
xchg
setns
dec
and
adc
mov
outsl
fst
inc
shlb
fs
jp
xlat
mov
mull
sub
cmp
and
and
add
add
add
sub
push
or
loope
dec
jp
pop
sbb
adc
mov
and
jmp
lods
es
mulb
adc
xchg
mov
jg
fdiv
std
pop
adc
psubb
sub
test
or
mov
aaa
in
xor
adc
xlat
leave
repnz
add
ficompl
cmpsb
shrb
ret
adc
outsl
out
cld
or
repnz
movsb
adc
xor
pop
loop
movq
loopne
mov
ss
cmpsl
xor
std
aaa
and
clc
bound
fcmovb
test
push
stos
push
and
cmpsb
pop
pop
push
jns
loop
jl
pop
add
jae
push
xor
dec
jne
sbb
bound
inc
adc
outsb
fxch
and
dec
and
sbb
popa
jmp
and
jne
push
test
loope
icebp
mov
imul
inc
sub
xor
popa
mov
mov
or
aas
inc
aad
and
dec
cltd
scas
movsb
add
out
das
xchg
sub
sbb
pop
popf
mov
pop
adc
mov
int3
or
stos
fsubrl
cmp
sbb
jbe
pop
enter
xchg
adc
and
sbb
jnp
push
sub
js
shll
cwtl
aas
fwait
pop
fwait
mov
lret
loope
out
test
pop
setge
or
mov
and
aam
inc
xor
jne
sti
inc
daa
wrmsr
aas
sahf
xchg
xchg
xor
aam
pusha
xchg
fstp
xchg
jae
xchg
arpl
repz
hlt
xor
cltd
pop
pop
pop
iret
adc
inc
aad
lods
andl
inc
mov
repnz
and
es
xor
push
popa
fimull
lds
sub
xchg
enter
push
cld
mov
loopne
jne
ljmp
inc
pop
imul
pop
push
rcr
mov
cmpsb
fstpl
test
orb
push
lea
inc
into
jecxz
or
es
daa
jne
lds
pop
mov
pop
jno
shr
lcall
adc
es
mov
adcl
stos
ficoms
pusha
fidivrs
lret
and
scas
pop
or
int
int
pop
out
cmpsl
sub
out
adc
sub
jecxz
jbe
shlb
jge
xchg
mov
adc
mov
imul
inc
outsb
adc
les
imul
adc
jbe
scas
test
xchg
jno
lds
dec
aad
mov
mov
stc
adc
nop
pop
rorl
xchg
dec
sub
cld
or
push
je
push
shlb
pop
call
xchg
js
es
lahf
pop
xchg
pop
es
mov
pushf
insb
and
mov
arpl
mov
fnstcw
out
pop
sti
and
out
sub
addl
mov
mov
inc
xchg
cmpsb
mov
jns
fwait
pop
movsb
cli
push
sub
stos
and
fidivrl
lret
sub
mov
mov
mov
push
push
clc
mov
jmp
call
repnz
mov
cmp
js
gs
jg
rorb
in
or
mov
mov
mov
or
adc
mov
dec
int3
and
sahf
and
das
mov
dec
dec
cmp
jno
sarb
dec
cmp
daa
fbstp
pop
pop
sbb
jg
enter
mov
mov
mov
rorb
adc
or
sti
lds
mov
fbstp
sti
push
mov
pop
jae
sahf
orb
and
inc
dec
fbstp
nop
clc
jecxz
push
sbb
sti
pop
mov
push
lods
push
nop
sub
xlat
movsb
xor
pop
adcb
pop
ret
stos
test
gs
sub
movsl
xor
cld
shll
mov
mov
insl
cld
fst
je
adcl
imul
jecxz
xchg
fadds
in
and
push
mov
fistpll
pop
enter
cmp
lahf
xor
jle
cld
sub
jnp
in
mov
adc
cmp
mov
push
in
mov
sub
xchg
pop
xor
sub
inc
dec
std
ficoms
mov
lods
push
xchg
mov
push
cmpsl
imul
out
mov
shl
loopne
pop
sub
hlt
xor
and
hlt
sbb
pop
push
popa
dec
fidivl
sub
mov
jnp
pusha
sub
loopne
dec
daa
cmp
ja
fildll
lods
adc
add
bndldx
popf
pop
insb
imul
jbe
insl
das
sahf
dec
in
dec
jno
jno
sbb
sub
js
jbe
xchg
lea
cmp
in
mov
mov
dec
pop
jbe
in
ret
push
fnstsw
dec
push
mov
mov
mov
sahf
and
adc
sbb
sub
pop
orb
insb
ret
or
test
or
ret
adc
cmp
lahf
dec
push
es
imul
ret
mov
mov
ja
mov
mov
jp
cld
cld
into
fadds
inc
fmull
sub
mov
addb
push
or
push
lcall
inc
je
in
int3
insb
rcrl
mull
or
push
ficoms
testl
ret
test
popa
dec
mov
gs
sahf
daa
mov
mov
adc
mov
out
ds
push
pushf
push
shlb
cltd
sahf
cwtl
ljmp
or
cmc
jbe
xchg
cmpsl
out
push
adc
push
jg
call
cli
rcrb
xor
ds
pop
cli
inc
arpl
dec
arpl
imul
inc
pushf
shll
jo
bound
call
inc
and
daa
ss
fcmovnu
jle
mov
sub
dec
push
fadds
mov
or
mov
pause
mull
test
mov
inc
sub
cmp
xchg
cs
mov
sahf
bound
lret
pushf
inc
xor
push
stc
xchg
test
push
fwait
mov
mov
and
jno
out
adc
or
xchg
loop
popa
pop
mov
and
add
fimuls
movsb
fldcw
ret
cmp
sahf
push
sbb
sub
ja
sbb
testb
lock
in
out
iret
out
imul
cwtl
mov
idivl
or
mov
out
sub
sbb
inc
jle
adc
pop
repz
bound
mov
test
or
adc
into
xchg
push
daa
adc
inc
mov
fistpll
and
cmp
adc
vpaddsw
das
cmp
testb
stos
test
fistl
push
icebp
add
push
or
sbb
xor
xlat
jecxz
rcl
pop
add
xor
mov
pop
inc
clc
fldl
movsl
add
xor
or
lret
test
or
ret
mov
rorb
es
fbstp
adc
les
insl
push
cmp
jbe
push
mov
pop
shrl
or
mov
push
cmp
scas
rcrb
ljmp
dec
mov
mov
sbb
adc
inc
enter
adc
ret
scas
fnsave
stc
push
sub
lods
mov
bound
mov
inc
subl
ss
in
jnp
sti
sbbb
movsl
ss
cmp
jb
dec
jp
int3
xor
push
ret
dec
sub
mov
mov
loop
and
mov
fwait
sub
in
std
shrl
mov
add
jnp
cmpsl
inc
add
pop
mov
in
mov
mov
xorl
push
or
sbb
xchg
mov
das
stc
call
ret
leave
stos
and
pop
in
icebp
mov
dec
arpl
adc
jle
mov
pusha
cmpsl
pop
cmpsb
mov
fs
cmpsw
mov
inc
in
movsb
testb
repz
add
ficoml
out
aam
pushf
decl
dec
jnp
dec
popa
cmp
cmpsb
adc
sub
push
jp
repz
enter
aaa
inc
and
inc
fyl2xp1
icebp
xchg
shrl
inc
cli
mov
xor
aad
subl
shl
sub
inc
cmc
jmp
in
loopne
in
lods
and
nop
xchg
cmp
cwtl
add
jbe
mov
mov
lcall
sub
dec
es
pushf
sub
je
cwtl
ljmp
shlb
outsl
rcrb
test
lds
cmc
out
dec
cli
inc
or
jecxz
inc
cwtl
xchg
mov
adc
push
sbb
xor
in
out
add
inc
icebp
dec
or
arpl
pop
das
movsl
popf
dec
push
bound
push
es
mov
cmpsb
inc
sbb
aam
scas
xchg
enter
inc
fadd
repz
xor
mov
xchg
jg
push
cs
popf
data16
test
sbb
cmpsl
inc
push
jmp
or
fidivl
pop
and
push
int
mov
xchg
sbb
cmp
sbb
pop
sub
jnp
cmp
mov
lds
and
into
mov
test
repnz
test
outsb
mov
sbb
and
testl
mov
icebp
xor
mov
mov
out
movsb
arpl
jne
lahf
inc
aam
cltd
add
jecxz
int3
sub
push
js
sahf
sar
jae
sub
jp
pushf
cmpsb
push
mov
out
loop
add
xchg
xor
adc
cmpsl
sarb
cmp
mov
jae
jge
xor
test
mov
cld
cwtl
sbb
negl
and
loop
inc
aas
std
shlb
cmpb
adc
ja
cmp
pop
test
dec
sti
fnstcw
aad
clc
fs
sbb
adc
iret
push
xchg
mov
or
outsb
xchg
push
lods
add
jge
sbb
inc
mov
or
cwtl
fildl
xlat
mov
cmp
out
repz
xchg
jnp
mov
mov
xchg
repnz
xlat
dec
push
sbb
sub
jecxz
movsl
add
jle
and
cmp
cltd
dec
jae
xchg
or
mov
jge
enter
dec
pop
sbb
or
xchg
test
jge
in
cmp
push
repnz
icebp
pand
les
lret
repnz
mov
dec
mov
or
mov
pop
push
sub
mov
in
insb
push
lret
int3
adc
insb
testb
shll
aam
xlat
pop
and
adc
sbb
add
dec
popa
and
mov
and
cmpsl
adc
ljmp
xor
lret
xor
ficoms
xchg
sbb
testb
cmp
ficoms
jmp
adc
push
xchg
rcrb
sub
and
pop
in
mov
dec
clc
jb
loopne
testl
xor
add
push
and
fldenv
push
mov
std
clc
or
repnz
das
adc
scas
lret
sbb
pop
inc
dec
lret
lods
sub
ffree
adcl
or
sahf
loope
sub
add
aad
mov
jecxz
or
ljmp
jb
xchg
push
notb
sti
iret
sub
or
xchg
fldenv
lret
sbb
mov
add
mov
fs
jle
cmc
jne
adc
repnz
jle
cmpsl
sub
jne
push
fcmovne
pusha
das
cmp
movsb
lret
popf
sti
mov
jmp
cli
scas
sbb
in
xorb
add
js
xchg
mov
pop
push
mov
pop
and
xor
dec
mov
scas
into
add
fs
jmp
cld
mov
cli
sub
decl
test
test
test
or
ss
jle
mov
cmp
ltr
test
jne
loop
jnp
push
xlat
or
sbb
in
push
adc
push
fidivrl
xor
or
subb
orl
pop
mov
iret
imul
xchg
rcrl
push
pop
iret
add
adc
xchg
xchg
imul
je
push
scas
test
jg
mov
inc
jo
xchg
jbe
jns
dec
and
push
mov
or
xabort
sahf
add
mov
sub
mov
lods
int
pop
int
idivl
insl
dec
mov
enter
push
lcall
shrl
dec
mov
mov
outsl
and
andl
cs
repz
fistpll
sub
dec
movl
ljmp
xor
mov
adc
mov
xchg
fnstcw
xchg
popf
imul
push
es
jecxz
ljmp
test
cld
lcall
mov
sbb
adc
adc
mov
mov
sbb
mov
sbb
sbb
mov
scas
les
out
pop
mov
xor
push
jmp
popl
mov
cld
stos
xchg
xchg
stos
scas
or
sar
lods
add
xchg
ret
std
mov
xor
sahf
outsb
adc
jg
jbe
bound
lock
push
push
rcll
sbb
sub
jnp
int
pop
orb
lcall
xor
cmpsb
imul
push
jle
leave
adc
sbb
push
mov
xchg
push
add
xor
lahf
mov
or
push
or
int
xchg
xor
mov
stos
outsl
cmp
ss
xlat
jmp
add
aaa
mov
shrb
mov
lea
push
pop
in
jmp
sub
mov
das
test
iret
daa
imul
push
aaa
jecxz
dec
pop
dec
loop
sarb
sub
ret
push
nop
sub
scas
addb
fcmovb
movsb
sbb
es
xchg
inc
fstps
iret
rorb
into
or
and
inc
in
adc
pop
xor
movq
leave
jo
inc
pop
dec
xchg
jle
stos
add
ret
inc
lods
xchg
dec
mov
xchg
imul
fs
lret
mov
or
ficoms
aas
add
lahf
sub
cmp
jmp
cltd
sti
ficoml
fld
lret
inc
imul
test
arpl
out
xchg
push
lds
mov
popf
xor
fdivrl
popa
cmp
pop
cmp
sar
push
lods
repz
push
shlb
fmul
adc
or
and
adc
and
inc
xchg
divl
mov
imull
ffree
push
pop
xor
dec
pop
rorl
inc
setl
xor
mov
fsubrl
jg
mov
pop
adc
lcall
add
lahf
jo
movd
sub
push
fucomp
stos
add
cltd
fdivs
gs
lds
int
push
imul
stc
ss
adc
sbb
loope
add
lods
pop
in
add
push
jne
popf
mov
divl
outsb
mov
xchg
add
xchg
mov
scas
arpl
jle
jp
daa
mov
in
lock
sbb
xor
cmp
mov
xor
fcoms
scas
repnz
jne
jmp
add
dec
xchg
imul
scas
cmp
mov
stos
or
cmp
scas
push
lret
sub
call
dec
fsts
xchg
sub
xchg
jp
xchg
jecxz
insb
dec
rcrl
push
inc
jns
test
movsb
aas
jp
scas
inc
mov
inc
mov
imul
sti
jbe
push
ret
sti
push
insb
shl
sbb
pop
fidivrs
not
les
push
xchg
test
mov
pop
jns
mov
cmp
popa
in
cmc
cmp
mov
int3
sar
mov
mov
inc
stos
inc
cmp
push
xor
fstpl
xor
aad
push
int3
js
cmp
mov
mov
pop
mov
or
mov
jl
int
outsl
or
insb
incl
inc
gs
sbb
int
rcll
xchg
jae
push
emms
test
sub
pushf
xor
addr16
dec
mov
cmc
das
push
sti
cwtl
sarb
mov
inc
mov
inc
push
add
stos
lret
and
sahf
lea
cmp
insb
loop
icebp
jne
xchg
lods
lock
jo
daa
cwtl
push
loopne
cmp
pop
stos
cmp
pop
jae
iret
pop
in
sbb
xchg
daa
cmpsb
sub
mov
xor
fwait
je
push
sbb
jecxz
dec
add
pop
aad
jno
ret
imul
sbb
mov
aad
pusha
cli
stos
in
dec
in
cmp
jne
mov
mov
movsl
int
out
push
xor
pop
in
pop
or
repz
lcall
nop
lret
push
xlat
std
push
and
in
mov
cs
mov
adc
mov
or
jb
pop
mov
lret
push
call
sbb
rcrb
shl
jle
das
subb
pushf
dec
leave
sbb
ret
jns
sbb
or
in
dec
mov
mov
iret
shr
andb
cmpsb
lds
in
cmpb
sbb
dec
fs
popa
push
add
pop
push
mov
pop
in
dec
adc
xor
or
mov
xor
dec
into
ss
sub
and
repnz
adc
push
mov
push
or
sbb
gs
push
inc
cmp
xor
cmp
mov
cmp
cmp
sub
es
pop
pop
imul
xchg
and
out
adc
mov
stos
daa
std
pushl
notl
sbb
mov
sub
sub
xor
inc
in
inc
cld
data16
xchg
sbb
sahf
loope
hlt
mov
xchg
clc
inc
sub
popf
cmp
pop
es
popa
jge
icebp
mov
mov
xchg
xor
push
jno
jmp
sub
jp
pop
jb
or
lea
je
push
xchg
shll
pop
pushf
fsin
stos
sbb
aad
sbb
and
adc
push
pop
inc
and
inc
cmpsl
push
in
mov
push
scas
sub
or
add
mov
sbb
sub
out
loop
adc
bound
scas
add
adc
sub
or
stos
jb,pn
lods
in
fwait
pop
imul
ljmp
dec
into
mov
sbb
cmpsb
or
dec
ret
inc
out
xor
and
arpl
les
push
mov
pop
divb
pusha
xchg
jmp
arpl
popa
dec
orl
push
mov
sbb
pop
repz
lods
or
fcmovbe
cmp
mov
add
clc
push
jne
adc
add
test
shlb
enter
cmp
test
add
andl
push
loop
jno
pop
and
mov
sbb
push
icebp
pusha
sub
notl
push
xlat
decb
int
adc
pop
and
loope
fcompl
push
jmp
mov
cltd
lret
cmp
cmp
xor
test
sbb
lods
imul
add
mov
pop
push
shl
jle
popf
push
std
mov
out
mov
pusha
ret
xchg
subl
dec
lock
pop
push
jae
ret
lahf
cmp
out
fwait
lods
mov
or
data16
popf
mov
lret
ret
adc
lahf
or
enter
test
test
mov
popa
xchg
xchg
push
sub
insb
jl
inc
fdivs
filds
jnp
enter
fsubs
mov
or
fistps
and
notb
aas
fbstp
mov
scas
or
cli
insl
adc
loope
xchg
mov
pusha
mov
daa
sub
inc
test
ja
test
iret
push
icebp
sbb
stos
rclb
dec
jle
push
ljmp
cmpsb
pop
mov
xchg
es
cmp
imul
aad
dec
js
test
loope
dec
mov
push
push
jne
cmpl
out
pop
addb
negb
in
mov
inc
jg
dec
mov
sbb
sub
mov
dec
movsl
in
ffree
movsl
shlb
mov
dec
or
lds
jne
cmp
sub
cmp
les
add
sub
xorb
fwait
addr16
or
sub
adc
sbbb
jle
sbb
xchg
je
movsb
repnz
fcmovnbe
push
incb
dec
jns
orb
xchg
movmskps
or
outsl
push
mov
aam
add
insb
mov
mov
pop
sbb
mov
fiadds
daa
icebp
inc
dec
or
xchg
imul
dec
and
cmpsl
sbb
rol
out
mov
jne
xchg
inc
gs
orb
dec
jmp
mov
mov
decl
cmpsb
fcmovnbe
and
cmp
ret
lret
cmp
push
dec
ss
imul
pop
test
lods
ss
popa
or
outsb
add
sbb
hlt
jmp
jle
sub
imul
imul
adc
iret
jl
ret
pop
sbb
cmp
sub
aad
test
mov
pop
bnd
pushf
movsb
pushl
xor
mov
push
push
add
push
in
jmp
mov
popf
add
adc
pop
jo
and
mov
add
arpl
or
jb
in
lahf
es
out
inc
sarb
fistpl
pop
incl
in
ljmp
inc
jo
mov
mov
jb
xchg
xor
dec
ret
or
jp
jle
sbb
daa
out
xor
sbb
test
lcall
jne
cmp
stos
rclb
push
sbb
xchg
aaa
test
jp
pop
jge
out
popa
bound
outsb
inc
cmp
xor
xchg
fs
mov
mov
ret
xor
lret
sahf
les
jle
xor
stos
das
jge
mov
or
shrl
push
dec
aam
adc
push
sbb
jo
cmp
dec
ret
mov
cmpsb
mov
test
out
mov
sbb
add
out
aad
pop
sbb
cmc
leave
pop
call
repnz
xor
pusha
out
fsts
shlb
mov
jo
lods
sub
jae
sbb
mov
adc
dec
push
js
imul
popa
scas
pop
dec
mov
sti
add
mov
adc
loopne
es
and
xor
inc
mov
xor
icebp
sub
push
pushf
int
pop
out
mov
je
ret
mov
pop
sbb
cmpsl
ja
enter
mov
insl
int
or
xor
loopne
fucom
mov
insl
pushf
out
jae
xchg
jle
es
loop
sbb
jb
into
mul
adc
xor
and
inc
pop
mov
fdivl
inc
xor
je
mov
pop
jae
inc
add
sbb
dec
enter
ret
incl
mov
pop
sbb
es
mov
mov
xlat
das
dec
or
adc
fdivrl
cmp
mov
sbb
mov
and
pop
push
xchg
shll
push
aas
adc
or
popl
sub
imul
push
lret
ja
pop
adc
mulb
or
popf
std
pushw
andl
imul
push
xor
dec
lods
xchg
adc
mov
cltd
push
jmp
shrb
xchg
sub
sbb
lods
xchg
loope
sub
push
and
add
jne
lock
inc
loopne
pop
push
stos
mov
fsubs
subl
mov
xchg
ja
add
adc
and
pop
sarb
int3
cwtl
and
pop
jbe
add
or
addr16
bound
in
sub
jo
clc
jno
loop
lret
sahf
lods
mov
inc
sahf
cmpsl
push
mov
jg
loop
arpl
outsl
aam
in
xor
imul
push
rolb
idiv
stos
int
mov
cs
pop
inc
stos
jmp
add
push
fmul
mov
mov
jle
adc
cmp
cmp
mov
mov
xor
sub
jmp
test
test
xchg
push
test
fmuls
push
outsl
pop
add
jecxz
push
push
mov
loope
stc
les
mov
aaa
hlt
mov
sub
push
adc
fimuls
fidivrs
loop
imul
clc
insb
add
sub
int3
mov
lods
adc
ds
xchg
push
or
add
lods
push
pop
sub
and
bound
pop
in
ret
pop
xchg
aas
xchg
aad
enter
out
inc
popf
sahf
sub
xor
mov
xor
sti
jns
push
subb
jp
fs
xchg
lret
mov
xor
icebp
push
addr16
adc
mov
adc
repz
add
stos
sbb
lea
mov
add
pop
lret
mov
pop
ret
leave
adc
pop
mov
dec
pushf
cltd
or
xchg
push
mov
aad
push
mov
mov
aam
in
push
mov
js
push
sub
fsubl
or
movsl
push
int
sub
movsb
sub
pushf
jns
pushl
or
and
sub
jb
dec
fistl
cld
xchg
std
xor
xchg
xchg
xchg
repz
push
clc
and
add
mov
ss
cmc
jno
out
shlb
xor
psraw
mov
stos
add
push
stos
ret
push
sub
mov
imul
push
or
leave
dec
das
and
add
mov
pushf
push
sub
jne
int3
xlat
adc
jb
or
dec
and
insb
in
stos
jge
pop
subb
outsb
fwait
pushf
dec
lods
dec
enter
push
push
test
and
or
jl
jae
subl
sbb
mov
and
mov
out
cmp
rorb
mov
mov
sbb
mov
xchg
cmp
sbbl
idivb
xchg
xor
add
stos
push
xchg
ss
andl
xor
mov
mov
fadds
cmp
in
adc
arpl
mov
cmp
aad
sti
mov
loopne
idivb
xchg
xchg
mov
mov
lahf
repnz
xchg
and
std
push
addb
testl
loope
ja
mov
shll
pop
scas
xchg
ja
pop
fdiv
lahf
sub
lock
xchg
adc
pusha
cmpsb
jmp
aas
xchg
imul
push
adc
imul
loop
je
and
in
cmp
inc
outsl
pop
pop
repz
stos
lock
movsl
cltd
xchg
dec
mov
push
mov
mov
xor
add
lock
ffree
inc
hlt
lcall
push
adc
std
xchg
sub
out
test
in
mov
loop
sbb
xchg
fimull
inc
and
ja
rcr
out
out
pop
jae
sbb
fildll
fstpl
mov
xchg
xchg
cmpsb
aam
pop
jb
cmp
sub
fs
pop
push
mov
push
mov
cmp
hlt
stos
in
sbb
sti
xchg
jae
pop
loop
adc
adc
das
xchg
aaa
roll
outsb
aad
mov
dec
lea
jle
mov
or
mov
push
sahf
testb
scas
adc
mov
inc
sbb
mov
mov
add
jbe
ljmp
xlat
lahf
stc
pusha
jmp
mov
in
in
xchg
xor
aaa
int
cld
sub
pop
test
push
stos
jb
leave
ja
sub
cld
or
push
cmpsb
in
test
jns
pop
sti
lahf
pop
xchg
mov
add
popf
xchg
icebp
lods
and
jmp
inc
or
loopne
dec
test
ficomps
jle
bound
test
xlat
notl
push
mov
inc
imul
ss
shrl
or
cmp
ljmp
pop
iret
ja
sub
cld
test
icebp
inc
jp
xor
insl
frstor
cmpsb
enter
jge
cmc
pusha
hlt
bound
iret
shll
fbstp
mov
cmp
mov
imul
pop
es
cmc
out
mov
or
out
fisttpll
push
push
insl
mov
enter
adc
rclb
ja
mov
jo
inc
mov
imul
lret
push
cmpb
daa
aas
ljmp
rorb
sbb
aaa
push
gs
rorl
std
push
and
cmpsl
pusha
sbbl
mov
xor
bound
xchg
xor
nop
sub
lock
imul
pop
in
lock
mov
fcomps
shrb
jne
fcmovnu
addl
cmp
jne
insb
or
lds
outsb
mov
inc
ror
mov
psrlq
sbb
xchg
pop
ret
pop
sti
cmp
data16
cmp
mov
int
push
ret
loop
cltd
andl
add
xlat
daa
les
out
dec
idivb
pushf
test
dec
push
pop
testb
in
call
xchg
xor
dec
fnsave
jge
ret
xor
adc
or
sub
in
cwtl
roll
mov
inc
jmp
aas
lods
jp
int
mov
sahf
repz
jmp
xor
pusha
lret
sbbl
cwtl
ja
jg
sub
clc
jno
lock
dec
mov
rol
mov
jo
mov
jbe
insb
cmp
lock
icebp
pop
loopne
jo
test
test
cmpb
jno
lods
lret
pop
xchg
mov
sub
sub
ror
insb
icebp
ljmp
mov
aas
cs
out
mov
fisubl
jnp
test
dec
cmp
mov
dec
lock
pop
lret
xchg
push
lea
pop
push
cmp
fstl
sub
shrl
sbb
lret
pop
mov
daa
pop
roll
es
mov
jmp
nop
inc
sub
push
fwait
movsb
ljmp
jnp
movsb
push
outsb
xchg
inc
adcl
daa
aad
inc
outsb
cmp
xor
shll
jne
stos
cmpsb
sbb
mov
sub
lahf
sub
push
addr16
mov
cld
addr16
and
inc
or
es
cmp
shlb
out
mov
mov
mov
aaa
add
leave
cmp
push
dec
dec
test
adc
lods
and
std
pusha
pop
mov
cld
test
push
fcmovnbe
test
shrl
fisttpl
fs
out
mov
xor
fs
push
mov
jmp
ret
jge
add
cmc
rorb
sbb
pusha
push
orl
testb
sub
and
fwait
sbb
mov
inc
mov
stos
js
insl
int
push
push
fildl
jmp
xchg
stc
cmpsb
js
and
sarl
hlt
jl
xchg
mov
mov
fs
xchg
mov
lcall
add
aaa
mov
push
push
jb
aam
out
mov
in
mov
jns
xor
lds
sub
int3
ret
mov
or
pop
jno
lock
in
clc
mov
adc
adc
ja
dec
popf
popf
jns
loop
dec
je
push
xchg
cltd
movsb
icebp
daa
xor
icebp
fiaddl
rcrb
daa
lcall
jns
add
popa
cmpsl
inc
pop
mov
xor
not
pushf
into
icebp
inc
imull
xchg
cmp
daa
and
punpcklbw
test
mov
xchg
test
das
dec
aas
mov
mov
lock
sarl
fsubl
iret
mov
inc
inc
pop
pop
or
in
decb
rorb
adc
push
sub
dec
inc
idiv
daa
sbb
call
xchg
xchg
mov
cmp
mov
jae
cmp
test
add
push
jge
dec
or
adc
and
nop
pop
pop
and
inc
jecxz
pop
mov
in
pop
dec
mov
lret
sbb
testl
les
ljmp
lret
sub
lods
test
add
lcall
adc
pop
mov
xchg
push
mov
dec
inc
and
and
dec
loope
ret
cs
sub
xchg
jg
jne
lcall
adc
lret
in
leave
xlat
std
jae
aad
lret
rcl
lret
mov
popa
mov
lahf
repz
cmp
pop
dec
or
xchg
sub
scas
aam
mov
pop
sub
inc
sbb
push
xor
jns
xchg
dec
jg
and
mov
out
lcall
cmc
jg
sub
sbb
scas
xchg
clc
sub
jne
sbb
jnp
insl
int
xor
mov
or
push
adc
in
jp
pop
or
in
daa
stos
ja
pop
icebp
xchg
ret
or
push
or
dec
jbe
dec
jmp
push
or
std
jae
push
cmp
ja
les
enter
sahf
testl
mov
shrb
out
pop
or
mov
xchg
or
adc
sub
clc
sub
mov
imul
dec
push
daa
ss
push
inc
loop
mov
fs
mov
inc
cmp
xor
pop
sbb
push
int3
mov
xor
push
push
int
push
jae
jne
xlat
loope
xor
aas
out
or
jmp
outsb
push
mov
es
icebp
mov
jns
cltd
xor
xchg
out
mov
sub
xor
push
gs
inc
xchg
dec
jmp
ret
jle
scas
cmp
sub
sti
push
inc
ficomps
fidivs
inc
arpl
cmc
mov
in
xor
js
shll
dec
jae
sub
jecxz
fcoml
jbe
jg
inc
in
repnz
in
imul
push
ret
xchg
cli
aam
test
mov
mov
add
frstor
popf
sub
in
fdivl
out
nop
pop
sti
and
xchg
movsb
and
lret
cld
or
jmp
inc
add
popf
aas
xchg
mov
push
cmc
inc
jns
jle
je
dec
lea
mov
push
stos
inc
ficomps
mov
addl
or
add
cmp
add
add
pop
mov
stos
fsubr
mov
mov
std
cmpsl
in
dec
jge
out
xchg
dec
insb
xchg
fistl
lock
in
ljmp
fs
js
imul
push
dec
dec
or
or
and
xor
jbe
pop
push
adc
mov
push
fsubrl
add
cmp
sti
mov
aad
loop
mov
movsb
repnz
or
aaa
cmp
xchg
sub
sti
fcompl
out
es
sub
mov
lea
shlb
pop
mov
movsl
fwait
sbb
mov
sti
xchg
cmpl
mov
push
js
gs
jmp
lcall
xchg
push
pop
das
mov
scas
jecxz
add
jo
add
inc
filds
push
add
adc
faddp
aaa
lds
or
test
sti
lock
mov
popa
into
into
mov
stc
or
xor
fs
push
xor
rcrb
pop
cli
mov
mull
lods
mov
push
lret
pop
les
lods
stc
cmpsb
iret
mov
ffreep
scas
stos
fisttpl
aas
mov
addr16
sti
ds
cs
aam
mov
lcall
push
rclb
cmp
xchg
jnp
mov
mov
and
dec
lods
xchg
nop
xchg
cmp
xchg
ds
push
in
jl
cmp
ret
mov
lea
sub
adc
cmpsb
std
inc
iret
movsb
xchg
cmpsb
cld
push
scas
pop
lods
test
dec
and
dec
fdivl
mov
add
adc
mov
xchg
mov
add
mov
add
dec
sub
jb
cli
loopne
push
or
popa
movsl
enter
test
sbb
add
hlt
jb
jge
imul
lods
std
mov
push
add
loope
or
daa
adcb
xor
cmp
push
imul
stos
mov
or
mov
cmp
xchg
ss
push
xlat
int
jo
jae
call
frstor
iret
pop
mov
out
adc
mov
xor
xchg
inc
movsb
aam
inc
sar
adc
inc
xchg
lds
inc
push
lds
imul
bound
mov
add
es
lcall
xlat
jp
add
adc
adc
andl
xchg
dec
das
sub
notb
add
adc
jg
cmpsb
mov
mov
jmp
mov
lcall
pop
jnp
mov
scas
dec
cmp
jno
in
idivl
mov
in
daa
fidivl
fstpl
daa
inc
imul
ja
push
insl
fs
jno
enter
mov
test
and
xor
sbb
rclb
out
or
ret
push
vaddps
mov
jp
syscall
std
inc
imul
pop
jne
and
push
jge
mov
icebp
mov
popf
fcmovnbe
mov
pop
test
add
int
xlat
cmpsl
mov
sub
mov
mov
mov
hlt
jecxz
pop
rcrb
nop
adc
mov
or
fidivrs
mov
add
inc
movsl
add
scas
mov
movsb
stos
xor
jo
xchg
xor
push
xchg
scas
inc
or
mov
pop
xor
mov
xor
mov
fsubr
fdivs
jae
fwait
or
sub
fwait
fs
add
insb
fcomps
pushf
cmp
xor
out
lcall
sbb
daa
sbb
ljmp
cld
imul
ds
data16
fmuls
lods
mov
movsl
jecxz
stos
cmp
aam
movsl
sbb
mov
sub
xor
popf
jle
cmc
adc
sbb
push
inc
paddusb
cmp
pop
cmpl
out
xchg
jge
dec
push
mov
mov
je
dec
and
push
or
ret
adc
out
orb
cld
rcl
jo
ud2
movsl
push
cmp
repz
mov
add
mov
mov
lods
sub
daa
cmp
ret
imul
mov
mov
les
gs
xchg
bound
out
leave
push
bound
dec
xchg
cld
or
sar
mov
mov
lret
pop
inc
fimull
scas
int
lods
xorl
add
push
sbb
mov
jbe
mov
lcall
fdivrl
cmpsl
fdivp
pusha
mov
jle
push
clc
sub
pop
leave
lret
jecxz
or
and
or
rclb
cmp
dec
push
insl
xor
into
jne
mov
idivb
xor
test
je
leave
mov
iret
imul
dec
mov
mov
test
jl
xchg
adc
fisubrl
imul
xor
arpl
add
mov
in
xchg
insl
push
int3
mov
bound
es
rol
lock
movsb
in
push
lock
gs
and
xor
mov
sbb
repz
lds
cmp
aaa
movsl
mov
hlt
mov
jl
mov
es
cmp
xor
sub
cmp
xchg
je
outsb
hlt
pop
lea
ja
outsb
xchg
in
adc
mov
shll
lds
jl
jno
out
push
lea
lret
inc
sbb
repz
int3
mov
xchg
inc
lock
in
mov
mov
imul
gs
mov
pop
and
loope
mov
sub
jg
pop
jmp
cld
out
dec
in
mov
adc
xchg
cltd
xchg
lods
in
popf
sbb
mov
sub
adc
jnp
mov
xchg
xlat
test
dec
jl
jo
inc
ds
add
rolb
dec
mov
stos
xor
push
push
test
daa
enter
adc
or
and
xchg
mov
movsb
add
stos
imul
mov
mov
ret
cld
dec
sbb
jbe
push
mov
sub
rclb
test
addr16
push
sbb
out
aam
adc
xchg
mov
insb
xor
add
hlt
sub
movsl
notl
and
sub
xchg
jb
cmpl
push
stc
lret
push
xor
or
cmp
jo
in
xchg
mov
jecxz
xor
fwait
int
or
insb
xchg
dec
xchg
xorl
hlt
sub
mov
outsb
or
jnp
in
loopne
out
hlt
aas
xchg
adc
ffreep
mov
ror
out
mov
sbb
call
aaa
dec
and
or
mov
push
pop
repz
inc
mov
mov
adc
adc
fdivr
add
outsl
ror
adc
adcb
pop
addb
lods
outsb
lret
xchg
pop
jbe
or
and
into
sub
dec
jle
xchg
les
loop
repnz
xchg
imul
cmp
mov
sub
stc
pop
pop
scas
push
xchg
imul
repnz
js
ds
jle
sub
out
jecxz
stos
inc
arpl
ds
mul
les
adc
add
outsb
cs
leave
test
push
icebp
nop
ja
lds
sub
adc
pop
mov
push
xor
xchg
jnp
loop
dec
scas
loope
dec
mov
xchg
fsubr
dec
insl
sub
or
inc
outsl
adc
pushl
jg
imul
xchg
movsl
hlt
ljmp
xor
cmpsl
mov
pop
cmpl
mov
cmp
pop
fwait
imul
rcrl
mov
in
into
lahf
lret
sub
mov
sbb
sub
xlat
inc
ds
cld
xlat
mov
adc
or
loopne
mov
jnp
pop
sbb
mov
mov
scas
push
jl
inc
lods
repz
adc
pusha
fsubl
bound
push
add
nop
ret
fdivs
sarb
daa
fs
call
aam
lret
test
sbb
lods
outsb
xchg
call
int
daa
sub
mov
jmp
mov
sbb
adc
bndldx
pop
lds
test
ret
or
loope
loopne
mov
pop
push
add
call
dec
ficoms
icebp
movsl
pop
in
ds
in
js
fidivrs
push
loope
xchg
fimuls
cmpsl
out
mov
icebp
scas
push
test
pushf
pop
jne
lods
stos
sbb
mov
lret
xchg
sub
pusha
push
or
mov
in
pop
jge
bound
aas
push
dec
notb
xchg
cmp
dec
shl
and
les
sar
icebp
inc
stos
push
xor
xchg
and
repz
inc
cmpb
lar
cmp
inc
and
popa
outsb
cs
stos
and
popa
adcb
and
push
jnp
hlt
add
pop
adc
jge
mov
push
fidivl
inc
rcl
popl
aaa
xchg
pop
mov
fiadds
and
mov
sbb
push
push
xor
rclb
imul
pop
leave
faddl
jp
adc
and
lret
inc
sti
stos
and
aam
ja
dec
mov
lcall
cmp
pop
test
inc
in
pop
outsb
jbe
jae
dec
fs
out
shr
pop
movsl
push
fsubr
sub
jle
pop
test
roll
xlat
sbb
adc
add
insb
ret
ja
clc
jecxz
inc
xlat
sub
sahf
jle
cmp
jo
xorb
popa
cmp
ljmp
shlb
loopne
inc
xor
and
js
adc
data16
add
or
fwait
mov
outsl
adc
sub
mov
out
ja
push
call
divb
lret
adcl
push
push
and
jle
loope
add
mov
cwtl
xchg
sbb
cmc
push
pop
push
gs
fxch
inc
jecxz
xor
mov
xor
mov
cwtl
jle
in
out
pop
lcall
lea
xchg
ja
mov
xlat
jp
lea
adc
jns
out
fsubrs
fs
fisttps
mov
push
mov
shrl
jg
inc
repz
cltd
out
xorb
inc
adc
sub
inc
jmp
mov
dec
sbbb
fadds
adc
das
jbe
fbstp
mov
in
aad
or
ja
lods
jl
inc
mov
adc
and
popl
or
lret
cmp
xorl
scas
pushf
test
test
jecxz
pop
adc
push
mov
out
xor
xor
push
cmp
popf
aaa
sub
cmp
in
imul
and
push
add
sub
mov
xorb
inc
dec
cmpsb
gs
jl
test
ss
bt
das
loopne
lcall
add
push
mov
lods
or
pop
movsb
mov
out
outsl
jo
repz
jbe
clc
aam
ss
and
fs
mov
cmp
pop
fsubs
xchg
add
fs
mov
daa
push
js
enter
popa
cmp
cmp
inc
ljmp
test
std
push
dec
test
mov
lock
xchg
mov
into
je
mov
ss
jg
xchg
mov
or
cmpb
movsb
sarl
sbb
dec
jle
and
cmpsl
ja
push
push
jns
push
inc
icebp
lcall
outsb
les
in
jnp
jo
into
dec
inc
outsl
pop
fists
clc
pushf
xor
lret
icebp
mov
xor
aaa
push
data16
cmpsb
or
aad
adc
daa
dec
xchg
and
jbe
pop
mov
in
out
push
or
or
test
das
inc
xor
mov
addr16
add
lcall
add
inc
scas
addb
hlt
jle
jg
sub
cmp
sahf
jg
sub
mov
js
in
jg
pushf
mov
xchg
dec
or
faddl
xchg
jle
push
push
es
stos
aaa
jmp
insl
mov
insl
sarb
outsl
dec
arpl
idivb
clc
mov
out
or
push
stos
cmp
loope
jb
sbb
popa
jae
pusha
cli
cwtl
and
sub
xchg
xor
nop
pop
test
fisttps
sub
push
mov
cmp
add
imul
mov
lds
popa
daa
push
inc
test
adcb
or
ss
xchg
jmp
shlb
into
outsb
push
sub
mov
xorl
adc
stos
xchg
and
leave
pop
push
lock
imul
lds
mov
in
or
scas
insb
test
push
push
sbb
pop
shlb
mov
lods
rcll
lret
mov
jbe
addb
add
and
dec
push
xchg
and
cmc
fildl
popa
cmp
aad
lods
cmpl
in
mov
mov
int3
push
or
xchg
jecxz
mov
mov
inc
mov
and
test
fidivrl
imul
mov
data16
mov
stos
stos
add
subb
ss
push
sub
inc
pop
sbb
sub
repz
aad
std
movups
rclb
in
outsl
mov
pop
shlb
test
xchg
xlat
sbb
cmp
leave
cmp
repz
stc
jne
push
ds
jp
mov
sti
pop
add
xor
pop
sub
icebp
mov
stos
ss
jg
sub
dec
or
inc
mov
xor
jecxz
adc
or
and
cmp
in
iret
xor
adc
adc
mov
adc
into
daa
jo
adc
bound
mov
sub
push
inc
jl
xchg
in
insl
inc
in
aad
or
sub
adc
mov
dec
lods
pusha
mov
add
sub
test
fnsave
outsb
shrb
leave
lds
fucomi
pop
pop
jbe
shr
sarb
dec
or
xchg
cmp
sbb
sub
adc
adc
dec
popf
jnp
scas
inc
int3
outsb
int3
pop
sub
add
inc
fadds
sbb
mov
cmp
ficompl
adc
outsl
nop
cld
fsubrs
pop
sbb
imul
cmp
rcr
mov
mov
xorb
sub
out
fisttpll
add
or
stc
aam
lock
aas
xchg
lods
pop
mov
test
leave
bound
fstpt
movsb
hlt
push
cmpsl
and
int3
xchg
jo
add
add
ret
push
stc
insl
inc
inc
test
cmp
pop
call
cltd
adcl
je
cmc
fs
out
aaa
dec
sub
leave
inc
xorb
mov
sbb
add
or
adc
loope
mov
int
int
xor
sbb
xchg
fldl
pop
jp
mov
leave
test
mov
jno
test
xchg
sahf
sub
add
pop
push
sbb
xor
cmp
movsb
daa
sub
std
clc
xchg
jge
test
cmpsb
mull
fwait
test
mov
fwait
jo
movsl
lret
push
frstor
enter
xor
int
aaa
jbe
xorl
hlt
xor
jl
repnz
push
mov
push
dec
lods
adc
in
pop
inc
mov
into
not
push
mul
scas
test
aad
rcr
into
add
imulb
mov
mov
mov
sbb
or
lahf
shlb
xchg
mov
lods
in
stos
lea
or
test
mov
xchg
icebp
cwtl
sbb
mov
in
test
adc
adc
mov
dec
and
movsl
fcompl
cmp
inc
add
outsl
scas
int3
std
faddl
mov
mov
push
push
mov
adc
or
or
sbb
or
jbe
insl
pop
cltd
mov
jns
out
in
loope
and
fstpt
das
bound
arpl
and
inc
push
mov
in
sub
pop
jne
stc
in
lods
jne
stos
loopne
inc
add
cs
lods
sub
rcll
xor
ljmp
cltd
mov
jg
cmpsb
jno
mov
pushf
xchg
roll
or
adc
xlat
pop
faddl
xchg
aad
repnz
xchg
leave
ja
shrl
jno
scas
and
shll
ljmp
pop
inc
pop
lods
loopne
jmp
dec
mov
jno
int
push
and
jmp
clc
xor
push
aaa
loope
dec
pop
push
lods
add
dec
clc
and
loop
dec
jae
pop
xchg
inc
out
js
pop
sbbb
dec
je
mov
mov
xchg
lea
jp
adc
gs
out
fadd
push
lea
jecxz
push
cmp
mov
ret
fwait
dec
js
jo
adc
inc
gs
fadd
push
out
or
xchg
mov
add
dec
jl
aad
imul
mov
xchg
test
and
mov
pop
mov
push
mov
dec
and
daa
rolb
test
cmpsl
sub
push
mov
ret
gs
out
sarl
fldl
pop
push
jae
imul
ret
xlat
dec
cmp
mov
cwtl
pop
call
adc
outsl
jns
std
dec
xchg
xor
adc
dec
fcmovbe
enter
xor
xchg
pop
aas
mov
dec
out
leave
inc
dec
fstpl
mov
andl
jg
insl
mov
lods
lock
dec
inc
jb
ss
aam
pop
mov
push
mov
sti
cld
jp
dec
shlb
icebp
hlt
inc
and
movlps
adc
mov
mov
sbb
sbb
cmc
jno
fbstp
inc
hlt
dec
adc
cmp
shrb
roll
fists
mov
and
lret
in
les
adc
int
xchg
jnp
pop
xchg
xchg
jns
sub
int3
sub
imul
stos
sbb
or
flds
jb
jge
jg
cli
xchg
stc
xchg
add
addb
rep
jmp
dec
inc
je
repz
mov
rolb
mov
out
insl
loopne
and
repnz
in
xor
jae
jmp
aad
pop
mov
loop
ds
jmp
js
pusha
lret
adc
sbb
and
push
or
xchg
mov
es
mov
pop
mov
xor
or
jge
and
pop
aaa
ljmp
xchg
bnd
mov
pushf
pushf
pushw
xor
imul
shrb
inc
sub
test
dec
fs
inc
testl
mov
push
jns
push
cwtl
test
sub
fdivrp
xchg
push
jge
nop
lret
jge
add
sbb
scas
or
imul
cmpsl
fs
or
mov
mov
lods
or
int
sub
repnz
xchg
mov
out
sti
pop
mov
cs
repnz
mov
and
sub
jne
jp
rcrl
sbb
xor
popa
lods
jo
ror
rcll
dec
jmp
add
jno
or
and
push
fldcw
pop
mov
push
pop
rep
mov
das
hlt
outsb
inc
push
and
push
int3
data16
out
shl
arpl
or
stc
vmulss
sub
fists
push
mov
in
xchg
mov
push
nop
xlat
cmpsl
sbb
in
xlat
notb
xchg
inc
inc
loop
pop
and
cmp
lahf
lods
pop
pop
xor
sub
adc
add
push
xchg
je
lods
inc
mov
std
adc
roll
push
push
lcall
xor
popf
push
jmp
mov
movsb
sarl
cld
jnp
clc
pop
call
or
or
in
rcrb
add
mov
inc
cmp
repz
cltd
mov
push
mov
mov
scas
fstpt
scas
mov
sbb
sahf
fwait
loop
mov
in
pushl
adc
mov
dec
add
mov
push
push
pop
bndldx
push
stc
sbb
mov
fmuls
xchg
nop
notb
rcll
mov
push
mov
xchg
fadd
jnp
cli
les
sbbl
jo
jne
xchg
dec
bound
popl
and
test
lret
adc
mov
xor
aam
out
pop
mov
vpacksswb
out
popf
pop
xchg
sub
jle
out
ret
stos
pop
add
test
jo
cld
les
add
jnp
das
scas
pop
jae
mov
aas
dec
push
cmpsb
cmp
ret
in
fsts
daa
js
dec
call
setge
mul
xchg
ljmp
jae
mov
pop
dec
mov
and
loope
pop
es
inc
push
test
and
xor
sub
popl
jnp
movd
add
pusha
mov
shll
insb
push
int3
jecxz
pop
inc
cwtl
dec
sub
lahf
push
sbb
fmull
imul
mov
lret
ja
lods
scas
outsb
xor
repnz
out
pop
and
sbb
xor
pop
dec
out
push
scas
fisttpll
cmp
popa
lret
mov
and
push
xchg
mov
push
dec
xchg
and
in
sbb
movsb
pop
adc
mov
aaa
insb
pop
sbb
xor
incb
mov
shll
mov
push
cli
sub
dec
imulb
pop
popa
push
mov
sbb
push
imul
xlat
mov
out
sbb
inc
cmpsb
pop
add
cmp
push
mov
lea
sbb
insb
sbb
jg
dec
jno
xchg
fdivrp
add
dec
mov
ja
fildll
or
xchg
push
lret
fmul
test
fistpl
fisubs
pop
add
mov
mov
push
cmc
cld
aaa
das
ljmp
repz
cmpsl
ljmp
ja
push
push
out
movzbl
stc
loop
jg
push
xchg
push
test
das
jae
add
popw
push
push
cmpsb
fldt
sub
aad
mov
jmp
jno
xchg
cld
mov
sbb
sbb
loop
jo
mov
jecxz
xchg
xchg
hlt
lods
mov
mov
cmp
pop
xchg
ja
cmp
repz
cmp
jb
aad
cli
mov
loop
icebp
xchg
adc
aad
cmp
and
mov
mov
rclb
in
jge
cmc
mov
xlat
mov
sub
js
dec
test
aaa
jmp
cld
cmp
sub
out
addl
push
leave
inc
mov
jge
adc
mov
mov
mov
inc
jae
mov
xor
cli
aas
negl
stos
jg
mov
scas
push
xor
loop
pop
or
push
clc
adcl
shlb
jle
lock
cmpsb
pop
sub
lods
dec
sahf
mov
cmp
sbb
sbb
sbb
push
or
ljmp
clc
inc
daa
adc
jns
int3
je
lcall
sub
rcrl
inc
jb
pop
ljmp
mov
push
call
fld
mov
pop
mov
hlt
fadds
sub
addb
mov
add
in
jecxz
in
jg
cwtl
sbb
lods
fiaddl
mov
dec
cmp
insb
add
pop
or
mov
call
dec
pop
push
in
ret
xor
and
xchg
dec
hlt
pop
repnz
inc
iret
sbb
push
sbb
pushf
pop
cmp
jecxz
push
daa
jne
jb
repnz
pop
lret
jnp
test
test
js
pusha
loopne
push
adc
std
loope
mov
inc
sub
adc
aad
or
inc
sub
adc
sarl
js
cmp
sbb
scas
lret
mov
cmpsb
ret
cmp
test
jae
std
cmp
xchg
lods
stc
cltd
fiaddl
push
ja
clc
pop
popf
dec
sbb
xor
add
cltd
mov
xchg
scas
dec
adc
scas
outsl
stos
or
xchg
mov
leave
pop
mov
push
inc
mov
fdivrs
push
jecxz
rorb
and
pop
fstpt
mov
pop
js
stos
notb
push
cmp
ret
xor
insl
push
or
push
adc
inc
lcall
int3
push
mov
ficoms
pop
leave
push
ret
repz
mov
jge
sub
mov
cmpsl
jl
cmp
addr16
push
leave
cmp
xor
jmp
inc
out
lret
add
xchg
xchg
insb
jle
mov
bnd
es
aas
dec
pop
push
in
push
dec
test
rorb
imulb
test
sbb
xchg
shrb
lcall
sub
je
loop
xor
lock
test
xor
imul
pop
mov
mov
or
mov
ljmp
jnp
in
scas
addr16
or
rcll
out
sbb
jnp
mov
sar
lret
mov
push
push
ret
outsb
fs
or
aad
pop
inc
stos
jne
or
dec
jo
cmp
adc
mov
das
insb
xchg
lods
stc
insl
pop
pop
test
pop
movsl
jle
and
cwtl
imul
loopne
inc
out
addl
frstor
push
imul
lret
int
ss
and
mov
pop
mov
dec
push
pushw
dec
dec
repnz
jle
push
hlt
into
aas
push
mov
add
dec
outsb
mov
xchg
icebp
lods
jbe
push
test
ljmp
jecxz
push
and
rcrb
add
xor
cmp
in
jecxz
mov
mov
nop
or
mov
inc
fcoms
jp
cmp
aam
into
jmp
xor
lret
xor
inc
sub
add
pop
scas
xor
stos
or
popa
ret
pop
lock
mov
test
cmp
movsb
stos
insb
js
ret
xchg
jg
sbb
or
xchg
out
jp
xor
into
xchg
sub
push
jle
xchg
dec
and
or
cmp
clc
adc
mov
aas
sbb
mov
mov
ds
cmpsw
xchg
mov
data16
sti
pop
test
hlt
test
nop
and
out
and
xor
adc
fdivrp
adcb
mov
aam
inc
lcall
sbb
int
jp
fldcw
mov
jns
lret
repnz
icebp
in
xchg
jbe
in
or
xor
sbb
or
dec
add
sbb
pop
add
mov
fcmovb
mov
movsb
cli
xchg
outsb
fmuls
loope
bound
loope
leave
jno
jns
fisubl
lcall
jge
lret
push
test
loopne
jno
pop
sbb
mulb
adc
mov
lret
push
cmp
es
fldz
adc
lds
push
imul
dec
xlat
scas
ret
jne
inc
nop
pop
and
mov
inc
cmp
scas
xor
es
and
daa
fildl
lock
incl
xor
int3
into
adc
jg
inc
add
into
mov
popf
stos
push
fwait
inc
or
dec
sbbl
loop
add
roll
inc
push
int3
ss
dec
ret
adc
popf
stc
out
sbb
adc
sbb
icebp
pop
jne
jp
sbb
xchg
push
sbb
outsb
loope
push
inc
int
push
daa
pop
sbb
pop
ret
dec
hlt
pop
cmpb
sub
dec
jne
imul
scas
insl
push
mov
jns
fistpl
data16
adc
cwtl
cld
pushl
iret
aad
loop
push
cwtl
in
aad
jnp
mov
call
call
cmpsb
outsb
int3
mov
jnp
add
jns
les
insl
mov
sbb
ja
mov
or
mov
mov
cwtl
or
aam
sbb
insb
stc
andw
xchg
cwtl
jp
xlat
bound
pop
or
lret
out
cmp
or
mov
cmp
dec
test
stos
xchg
int
dec
push
fstl
insl
fdivrs
pop
test
inc
sarl
mov
insl
mov
lret
sbb
aam
sbb
mov
pop
cltd
mov
mov
and
sahf
out
mov
or
int
add
setno
mov
push
add
sti
popa
js
loopne
cld
xchg
popf
gs
addr16
cmpsb
cwtl
cmp
in
outsl
xchg
aas
dec
fisubs
sub
scas
test
cmp
mov
or
fsubrl
sub
and
sbb
leave
push
int3
mov
notl
test
sti
psubusb
insb
stos
shlb
lds
xchg
xchg
xchg
push
aas
mov
sbb
add
insb
call
jge
push
adc
xchg
or
pop
fsubr
mov
scas
dec
aas
xor
loope
mov
test
mov
flds
cmp
aam
fcoms
mov
gs
imul
jmp
in
movsl
sti
adc
divb
addr16
aaa
jp
hlt
stos
aas
cmc
mov
lea
hlt
mov
nop
xchg
repz
call
insl
mov
fsubr
push
add
ljmp
fisubrl
cmc
dec
xchg
and
cmp
ljmp
ds
inc
insb
stos
push
fildl
ds
outsl
adc
je
out
fldt
dec
aad
cmp
enter
out
push
lcall
adcl
inc
sti
pop
clc
es
push
enter
clc
pop
push
xchg
jns
add
lods
loope
fists
mov
mov
adc
data16
push
outsb
inc
lret
sub
dec
arpl
lock
inc
cmpsl
std
mov
mov
outsb
mov
or
scas
popa
jle
jbe
pop
arpl
push
xchg
aaa
push
pushf
sbb
dec
xor
add
xchg
in
or
jle
push
addb
fwait
and
jnp
push
jecxz
adc
movsb
mov
adc
sbb
add
jmp
std
cmp
loop
movsb
cld
leave
lock
push
sub
dec
sub
cmpsl
fisttps
scas
pop
mov
adc
fadds
lea
lods
mov
push
ja
add
or
push
mov
xchg
or
test
or
flds
xor
out
stos
sahf
sbb
daa
scas
cs
sbb
inc
sbb
fistpl
fwait
or
sbb
loope
sbb
inc
inc
dec
push
test
test
mov
sub
inc
mov
pop
xchg
pop
std
stos
and
lods
push
mov
aad
cmp
and
sti
dec
sub
pop
cltd
fdivl
mov
adc
adc
popa
stos
or
repz
addl
mov
cltd
lret
aad
popf
adc
pop
js
xchg
xor
mov
icebp
cmp
in
or
aaa
xchg
dec
sub
loope
adc
je
mov
xlat
or
movsl
inc
cs
repnz
stos
repz
mov
js
mov
mov
test
mov
or
xchg
hlt
mov
sub
sbb
fucomip
sbb
jns
stos
jmp
mov
fucomp
in
dec
test
pop
inc
pop
inc
imul
cmp
es
inc
xor
rsqrtps
mov
pop
sbb
lret
add
add
xchg
or
push
mov
mov
push
sub
ja
enter
aas
mov
lret
lcall
hlt
and
jge
cld
mov
fsubl
aad
inc
fwait
push
test
inc
add
and
push
pop
jg
dec
inc
mov
mov
movsb
insb
pop
add
sub
sbb
add
xchg
cmp
pusha
test
mov
loope
push
lahf
lret
xor
and
xchg
insl
loop
mov
ja
cld
xlat
mov
dec
addr16
jl
jle
dec
aas
fcomp
sahf
test
ds
loopne
test
and
cmp
test
in
imul
xchg
push
and
jge
add
leave
adc
and
not
mov
pop
fnstenv
nop
add
out
inc
mov
lret
rorb
jno
shr
xor
out
in
cmc
mov
mov
mov
in
test
nop
bound
or
xchg
xchg
adc
testb
std
daa
mov
lcall
aad
js
outsl
hlt
out
push
orb
fisubrs
cmpsl
mov
push
sub
add
sahf
outsb
sarl
jg
dec
or
cmp
mov
movsb
xchg
mov
adc
inc
jmp
sarl
loope
mov
stc
scas
push
lods
arpl
or
repz
sub
mov
vphaddubd
dec
mov
adc
xchg
fwait
and
jns
mov
jp
inc
clc
jb
int
fwait
inc
mov
and
fwait
dec
out
idivb
pop
xchg
jmp
dec
addl
aad
dec
fadds
sbb
imulb
push
mov
lock
out
ja
or
jb
aam
movsl
push
jl
idivb
mov
imul
sub
pop
mov
xor
lcall
fldl
inc
mov
jecxz
jb
jl
movsb
out
pop
xchg
cmc
dec
push
fbstp
insb
lret
loopne
dec
cmpsl
dec
push
push
pop
clc
push
adc
inc
mov
pop
call
mov
into
push
shl
xor
xchg
inc
mov
xchg
mov
fs
lret
fs
or
pop
mov
pop
add
xlat
cmp
jb
push
mov
pop
jno
inc
scas
pop
pop
push
mov
jo
xor
bound
sub
pop
mov
int
add
popl
inc
add
rol
dec
sbb
scas
mov
push
pop
and
test
mov
int
imul
add
and
aad
xor
sub
jmp
dec
pop
call
notl
add
fwait
ret
icebp
dec
sbb
inc
cld
sub
or
inc
cs
das
mov
cmp
int
fwait
mov
xchg
pop
and
xchg
push
nop
shlb
mov
fs
leave
daa
loop
jo
mov
xorb
jnp
pop
and
mov
outsb
mov
std
mov
sub
fists
dec
divb
arpl
mov
mov
cltd
dec
fwait
or
inc
jmp
out
cs
insb
adc
call
gs
adc
xchg
and
inc
adc
pusha
mov
lret
xchg
jl
rcl
add
jmp
cltd
mov
inc
mov
das
push
inc
mov
jne
rcll
add
pusha
push
ja
add
cmc
mov
call
or
int3
jg
das
and
dec
call
mov
imul
aaa
ja
ficomps
and
inc
cwtl
mov
cmp
std
lret
lds
ss
fdivrl
arpl
stos
push
dec
and
mov
loop
and
add
jnp
stos
dec
js
jl
xlat
faddl
movsb
add
xor
jle
push
xchg
pop
adc
lea
fmul
adc
xchg
jg
jge
mov
xor
pushl
imul
adcl
int
es
fstps
mov
xor
enter
pusha
adc
smsw
mov
and
pop
adc
pushf
dec
sub
bound
sti
fsubrs
out
addb
push
mov
adc
pmuludq
or
pop
push
jge
ret
sti
and
lret
add
fwait
sbb
ljmp
mov
lcall
test
sub
ljmp
negb
hlt
mov
faddp
mov
js,pn
xchg
inc
cmp
adc
and
lods
jl
xor
push
xchg
jl
std
gs
xor
loop
xchg
in
das
loopne
jns
inc
pushf
jae
test
xchg
lock
push
pop
sbb
pop
xchg
sti
fcmovnb
ss
iret
repnz
das
mov
pusha
push
jl
pop
hlt
sbb
cmp
hlt
sti
mov
clc
sarb
pop
xor
add
xor
xor
fadds
in
setl
inc
sub
jmp
outsb
xchg
mov
outsb
aas
shlb
loopne
std
jbe
mov
and
cmp
test
push
pop
mov
mov
cmp
inc
les
out
rcll
or
outsl
pushf
inc
cmpsb
cmp
jnp
in
pop
push
out
add
or
inc
ja
add
jb
jmp
sbb
jo
testb
xchg
xchg
xor
sbb
mov
ljmp
mov
popa
out
pop
xchg
enter
jecxz
sbbb
hlt
xor
xchg
mov
in
dec
mov
cmpsl
dec
out
dec
in
mov
push
and
adc
sarb
std
ret
jp
insb
cmp
inc
add
pushl
xchg
movsl
pop
lods
xchg
xor
mov
imul
fcmovnb
loop
dec
sub
push
adc
inc
popl
jmp
in
xchg
sub
sbb
or
pop
iret
into
lea
xor
int3
lahf
fidivs
inc
inc
daa
xchg
rolb
mov
push
push
pop
jge
jns
pop
push
cs
mov
movsl
mov
sti
pop
inc
mov
andl
sbb
or
outsb
and
iret
cmpsl
fisubl
pop
jecxz
das
fnsave
insb
fwait
mov
insb
push
push
xchg
cmc
loopne
ret
repnz
or
inc
cwtl
clc
inc
inc
adc
in
cmp
pop
jns
stc
add
mov
mov
xchg
push
imul
bound
int
ja
mov
sbb
loopne
lcall
or
xor
jo
cmp
repz
mov
leave
mov
sub
fwait
sub
shrl
je
mov
pop
pop
xor
xchg
adc
inc
push
clc
roll
xor
les
jg
sbbb
cmpsl
mov
sbb
mov
test
cld
cwtl
loop
sub
cmpsb
lcall
addb
les
sub
sbb
stos
test
in
dec
push
fiaddl
rcrl
lahf
inc
js
mov
cltd
daa
cmp
cmp
fidivrs
adc
fdivrl
sbb
call
sbb
ss
out
test
mov
stos
and
movsb
imul
push
lret
mov
sub
mov
movsbl
sub
pop
xchg
inc
lret
test
mov
fnsave
push
and
mov
roll
mov
jb
jo
jns
int3
outsl
xor
xor
sbb
mov
mov
or
cmp
mov
nop
sbb
add
xchg
add
and
call
and
data16
aad
addl
or
inc
in
add
insl
cmp
dec
and
ja
lea
sbb
lret
xor
gs
rolb
les
mov
jmp
loope
mov
and
push
adc
pop
push
mov
sbb
mov
mov
sbb
into
xchg
out
pop
dec
daa
data16
dec
aas
xor
js
sbb
sub
pop
stos
leave
rorl
aaa
ror
cmp
fists
jg
cs
lock
loopne
xchg
repz
mov
mov
ja
rcrb
add
int3
fisubrs
movsb
cmp
and
cmpsl
dec
xchg
fisubrs
idiv
mov
and
jmp
and
imul
adc
les
mov
dec
lea
sbb
jbe
aaa
jge
sbb
cmp
add
push
shrl
xchg
mov
pushf
mull
lock
les
hlt
adc
mov
cmc
jmp
rolb
adcb
ljmp
lea
sbb
jo
rol
mov
sbb
dec
inc
sti
pop
xlat
es
outsl
dec
jmp
mov
mov
fsubl
shll
ret
outsb
sub
popa
lret
jmp
push
es
xor
sub
and
push
add
or
andl
imul
sti
cmpsl
add
insb
xchg
ret
jbe
jmp
pop
lret
pop
xchg
lds
push
dec
loope
jb
mov
mulb
mov
and
lret
lea
das
fistpl
clc
xchg
jge
mov
cmp
mov
dec
movsl
movsl
push
adc
mov
aad
pop
push
jle
sarb
sbb
test
inc
mov
call
popa
fdivr
pushf
pop
adc
add
addr16
cmc
sbbl
push
cmpsb
xchg
ja
mov
insl
push
jecxz
mov
sbb
ss
mov
std
inc
hlt
pop
fdivr
ficoms
ja
push
lods
out
push
lods
push
ficomps
xor
cmpsl
pop
and
mov
pop
and
bound
sbb
imul
adc
mov
mov
rcr
pop
xlat
ret
mov
lahf
sub
add
xchg
or
addr16
cltd
aam
into
xor
jnp
in
inc
fucomp
xchg
or
mov
ljmp
loopne
cltd
pop
pushf
int
jne
add
jne
aaa
xor
push
std
jno
or
fsubl
sahf
repnz
dec
rcpps
adc
popa
sub
in
mov
hlt
aaa
sar
push
leave
mov
rcll
and
sbb
mov
faddp
sbb
sahf
bound
fmuls
inc
push
dec
xor
adc
lods
enter
lret
mov
or
push
push
inc
jno
fst
inc
into
or
adc
pop
sub
mov
outsb
cmp
xor
push
mov
or
xchg
xchg
inc
or
dec
or
mov
jmp
movsb
nop
insb
fs
cmp
imul
jnp
dec
iret
mov
or
fisttpl
add
repnz
popa
xchg
mov
mov
lds
xchg
icebp
xchg
mov
sub
cli
xchg
in
rorl
jg
int
les
pop
dec
jno
mov
sub
push
push
mov
iret
cmpsl
out
sbb
jbe
outsb
mov
pop
aad
cli
cmp
call
fcomps
lret
and
mov
or
packuswb
aas
cli
cmp
aas
cltd
test
movsl
lock
pop
sbb
leave
dec
lret
mov
dec
lea
push
mov
test
addr16
std
psubusb
std
cmc
pop
aas
jns
leave
push
mov
ljmp
push
sub
add
outsb
iret
ret
and
sbb
pop
imul
test
adc
xor
insl
das
xlat
rcrl
shll
add
iret
sbbl
or
dec
icebp
sbb
inc
mov
pop
sbbb
dec
enter
or
cli
rorb
mov
inc
inc
dec
mov
insb
jge
das
adc
cltd
sar
mov
cmovb
push
adc
adc
pop
adc
inc
jmp
push
add
push
and
sub
and
inc
mov
ror
gs
mov
jg
aaa
pushf
and
xchg
inc
jge
jo
negl
pushf
mov
xor
popf
ret
sbb
dec
rcl
cmp
and
xchg
adc
xchg
rorb
fisubrs
xorl
sbb
loopne
xorl
xor
ljmp
ret
test
mov
cmpsb
dec
adc
pop
xchg
ret
pop
inc
push
or
aad
xchg
repz
and
cmpsb
dec
stos
clc
in
pop
dec
cltd
or
dec
sub
call
mov
icebp
mov
imul
jmp
lea
xchg
add
mov
xorb
or
shrl
imul
mov
inc
gs
and
push
popf
lods
cmpsb
jecxz
xor
push
sbb
lret
push
andb
sbb
std
or
outsb
jb
and
not
data16
scas
pop
or
cmc
push
cld
aas
es
sub
lock
outsb
sub
dec
and
cmpl
mov
xchg
inc
pop
dec
imul
jo
insb
xchg
lds
xchg
mov
jne
stc
movups
xchg
jl
push
adc
insl
jnp
jno
pop
or
aam
jge
cmp
and
add
inc
movb
mov
xchg
gs
hlt
inc
mov
jbe
in
and
movsb
pop
sbb
or
outsl
lods
mov
movsl
ror
call
adc
call
sub
jae
ret
sbb
cmp
clc
lods
dec
je
mov
xor
xchg
je
pop
mov
sub
adc
pushf
mov
add
jne
jp
add
sub
fistpll
xorl
cmp
and
shl
push
pop
jnp
int3
loope
aaa
push
xlat
push
dec
push
shlb
or
stc
scas
mov
fcmovnb
mov
dec
adc
adc
stos
jnp
mov
gs
jmp
mov
sti
sbb
xor
xlat
xchg
or
mov
xchg
shll
pop
aad
xor
data16
mov
xor
mov
adc
add
in
test
jb,pn
les
aad
cltd
fstpl
lahf
inc
in
dec
aam
push
and
test
sub
insb
lret
es
and
lods
add
adc
mov
ret
or
xor
cli
call
push
jge
repnz
int
add
mov
mov
inc
addr16
out
insb
push
ret
es
adc
or
xchg
cltd
mov
add
mov
xchg
adc
dec
add
push
movsb
sti
les
xor
lret
jl
mov
dec
out
mov
or
xchg
cmp
push
xor
call
inc
adc
pushf
fwait
mov
or
lahf
jle
jg
sbb
inc
mov
pop
and
push
jo
movb
sub
std
pop
push
pop
cmp
mov
mov
outsw
push
add
in
lock
push
int3
sbb
fcmovu
adc
cmp
and
rorl
xchg
enter
sbb
dec
addr16
movsb
notb
sub
repnz
lret
mov
push
xchg
ds
jmp
dec
pop
dec
mov
addr16
in
enter
movsl
test
jl
vsqrtps
mov
xor
movsl
xor
lret
add
push
mov
rcrl
cs
xchg
mov
pop
xlat
push
inc
sbb
pop
ror
js
pop
les
adc
repz
mov
shrb
sbb
scas
std
xor
push
call
popa
sti
aad
sar
push
out
fsts
push
movsl
add
dec
mov
ljmp
aad
pop
loop
dec
bound
leave
clc
aam
push
sub
test
xor
mov
sub
pop
jbe
jmp
nop
leave
dec
je
test
and
in
xchg
in
cmp
add
mov
stc
mov
out
lods
and
mov
cmp
jg
ja
adc
mov
pop
lret
leave
adc
cmp
std
jnp
cli
inc
xchg
xchg
sbb
mov
inc
and
pop
lea
fdivs
pop
push
inc
xor
iret
ret
aad
or
pop
fsts
mov
push
push
xchg
mov
das
loopne
sbb
cmpsl
push
hlt
mov
loop
mov
cmp
lea
pop
pop
ret
mov
mov
and
add
inc
leave
pop
lret
pop
in
adc
or
test
inc
sub
jbe
lods
jg
mov
lret
xorl
repz
push
lcall
pop
sub
cvtps2pi
jo
test
aaa
lret
dec
lret
pop
clc
push
jb
fcmovb
xchg
sbb
add
std
scas
inc
pop
pop
or
es
je
das
and
dec
stc
and
rcrl
sahf
es
mov
or
pop
or
pop
add
sub
out
sub
xchg
or
shrb
and
cmp
pop
xorb
in
mov
sub
dec
jno
xor
push
icebp
add
out
test
xchg
inc
rclb
movl
idivl
mov
jp
ror
mov
pop
in
mov
das
fldt
out
push
int3
outsl
ja
ss
cwtl
sbb
enter
fwait
sub
inc
int3
mov
mov
or
mov
hlt
push
sub
arpl
xadd
cmp
pop
incl
ficompl
jge
in
popa
xchg
lea
mov
movsb
sbb
sbb
push
nop
pop
push
mov
clc
mov
push
push
inc
jle,pn
dec
rcrb
inc
orb
shl
lock
adc
xchg
xchg
in
gs
inc
adc
cmp
pop
sub
shll
xchg
aad
ficompl
pop
sub
cld
push
dec
lods
nop
mov
test
jle
adc
and
enter
fiadds
insl
jbe
leave
iret
mov
aad
call
out
cmp
push
add
std
in
mov
inc
sti
cmp
ja
xchg
xlat
and
adc
mov
les
mov
lock
push
sub
mov
daa
loopne
jl
cmpb
jge
int
fimull
push
nop
mov
insb
ljmp
lcall
xchg
sbb
loopne
or
push
ds
mov
sahf
sbb
jge
leave
push
insl
dec
or
sub
pop
andl
ror
adc
adc
mov
hlt
mov
jbe
dec
xchg
mov
sbb
mov
lods
add
insb
addr16
push
movsl
mov
push
add
adc
outsb
inc
sti
pop
js
mov
xor
xor
jp
aaa
pop
dec
jae
xchg
shll
mov
leave
push
subl
ficoml
or
lock
out
dec
lahf
jmp
stos
fldenv
xor
jg
movsb
lock
dec
mov
adc
mov
es
jg
lcall
es
cli
clc
insl
mov
lock
notl
in
mov
or
add
mov
out
ss
jl
or
dec
mull
fisubl
stos
icebp
xor
hlt
xor
aam
inc
jg
test
int3
cmc
push
mov
or
mov
xchg
mov
push
push
mov
enter
leave
stc
test
ja
int3
mov
daa
sub
sbb
imul
dec
mov
rorl
popf
rcr
or
mov
or
int
mov
sar
cmp
push
jge
jmp
inc
mov
arpl
clc
dec
repz
push
mov
dec
test
nop
and
shl
fistpll
sbb
clc
icebp
in
shll
sub
or
push
jo
dec
shrb
dec
cmp
adc
push
cltd
mov
or
dec
cmpsl
aad
test
mov
decb
pushf
and
xor
fildll
jbe
aaa
iret
adc
mov
cmp
mov
mov
sbb
xor
aad
mov
adc
lret
dec
loop
int3
xor
sbb
xchg
fcoms
imul
dec
jl
push
loopne
ss
out
nop
mov
inc
inc
mov
in
ret
mov
push
jae
arpl
push
rcll
sbb
iret
or
ret
push
pushf
aad
mov
sti
jns
fldt
sbb
xchg
stos
cmp
jo
add
ret
aam
fdivrp
pop
mov
ds
jo
lret
cwtl
mov
fstpl
call
out
rclb
push
test
and
imul
push
cwtl
daa
dec
repnz
or
cmpsb
pop
fwait
pop
jo
add
xchg
mov
outsl
aam
mov
jbe
ljmp
inc
and
ja
outsb
daa
sarl
or
ret
sub
mov
sbb
stos
xchg
out
xor
dec
cmp
mov
mov
inc
mov
sub
movsl
dec
xor
dec
rclb
pop
pop
xchg
jge
nop
lods
or
rcll
sbb
add
rclb
mov
repnz
mov
cmp
push
pop
repnz
inc
and
mov
push
jo
jbe
push
in
ret
ret
out
adc
fmull
mov
jo
rcrb
pop
lods
pop
testb
cmp
cmpsl
lret
inc
hlt
and
sahf
dec
andb
and
iret
aam
mov
push
push
repz
or
mov
ljmp
or
jl
or
arpl
jmp
jp
mov
lock
roll
adc
xchg
sub
loopne
leave
sbb
test
mov
cmp
xrelease
imull
mov
jnp
jno
inc
mov
push
or
sbb
adc
loopne
int
les
bound
jns
test
or
mov
imul
fistps
sub
mov
scas
push
subb
adc
rclb
adc
pop
sbbl
and
cmp
mov
sub
nop
addr16
sbb
dec
xor
jo
dec
ds
scas
daa
subl
loop
pushf
outsl
cmp
mov
std
push
js
repz
jp
jmp
gs
es
pop
jne
cmc
inc
cmpsl
hlt
fists
sti
outsb
lock
pop
aas
xchg
cli
cmp
out
ret
mov
ljmp
sbb
pop
mov
lcall
fwait
cs
outsl
jecxz
mov
fbstp
xchg
xorl
jecxz
and
mov
mov
bound
push
xor
mov
lret
out
js
or
xchg
lret
push
jae
pushf
jl
es
sbb
fld
sti
cmp
and
lcall
jne
sarb
push
or
cld
inc
adc
push
rolb
arpl
addr16
ret
pop
jae
sub
out
or
out
jle
sub
inc
add
push
mov
aad
mov
and
sub
mov
xor
xchg
jns
or
inc
xchg
cmc
addr16
and
add
int
sbb
cvtdq2ps
inc
and
and
out
popa
in
inc
pop
dec
lret
push
sub
push
js
cmp
pop
pop
negb
cld
js
adc
jbe
mov
add
jg
jecxz,pn
lods
mov
std
and
cld
mov
lods
aas
push
or
cwtl
mov
mov
je
push
lock
mov
insb
or
cmp
lea
xor
jbe
mov
je
pop
jo
lock
push
mov
jb
dec
jmp
pop
sar
imul
xchg
add
mov
push
push
add
popa
xchg
mov
fisubrl
adc
testl
push
sbb
mov
repz
adc
pop
push
cltd
popf
dec
or
mov
adc
dec
mov
leave
adc
push
sar
sbb
cli
cmc
js
add
mov
and
sub
pop
fsubp
in
outsl
push
fnstenv
sub
clc
mov
out
and
mov
or
jle
and
mov
sbb
jb
inc
jns
push
ss
adc
ret
rclb
sub
pop
cmp
add
mov
aas
int
std
in
dec
bnd
jo
pushf
inc
mov
add
dec
or
xchg
aaa
cmpsb
pop
xor
mov
mov
xor
fwait
gs
push
sub
inc
iret
fadds
lret
out
push
inc
pop
xor
imul
dec
inc
xchg
in
mov
xchg
mov
add
shll
mov
mov
jl
push
jne
mov
pushf
pop
aaa
scas
xchg
rclb
imul
pop
xchg
aad
cmp
add
mov
add
mov
int
push
and
mov
std
pop
stos
aam
test
jns
or
gs
cwtl
jbe
clc
mov
shlb
xor
or
fadds
test
mov
inc
fists
pop
mov
adc
fidivrs
rolb
add
dec
das
add
lods
inc
dec
frstor
add
mov
inc
stos
ficompl
mov
clc
xor
push
outsl
divb
sub
xlat
add
add
push
mov
mov
ret
icebp
outsb
xlat
sub
rorb
mov
dec
incb
cmpsb
mov
fwait
mull
push
out
in
pusha
in
xor
mov
call
data16
xchg
mov
push
data16
repz
cmc
nop
mov
mov
push
xchg
jg
outsb
ret
pop
bound
inc
xchg
imul
clc
pop
adc
jmp
ffree
jnp
iret
jae
fisttpl
or
inc
push
xchg
xor
sbb
or
xchg
mov
push
aas
fstpt
lahf
and
push
and
andb
pop
xchg
mov
xchg
in
xor
sub
test
es
data16
pop
loopne
lea
and
xor
xor
inc
jg
pop
out
inc
iret
mov
add
clc
sbb
xchg
push
outsb
mov
sbb
pop
push
jl
inc
push
add
push
lock
les
stos
dec
cmp
popa
in
sub
jmp
push
jmp
pop
imul
adc
xor
add
cld
and
pushf
cltd
mov
sbb
fidivs
jp
fnstsw
xor
or
jg
shr
fildll
mul
xchg
mov
cli
mov
lods
inc
and
pop
mov
pop
enter
sbb
jbe
mov
fwait
jp
gs
imul
add
aas
outsb
popa
cmp
adc
outsb
stos
mov
jae
cmp
cmp
cli
cwtl
adc
sub
insb
dec
ja
mov
mov
push
sbb
clc
stc
and
gs
out
cmp
jecxz
out
lret
push
mov
orps
xchg
xchg
pop
out
cld
xor
aaa
jle
loope
fstp
into
mov
xchg
mov
push
bound
xchg
sub
divps
lods
stc
inc
xor
dec
inc
jno
cmp
push
das
pop
jo
cmpsb
and
or
js
negl
xor
icebp
mov
dec
xor
cwtl
inc
lds
cmpb
inc
call
outsl
add
test
adc
sbb
add
add
add
lock
jns
mov
pushf
mov
mov
insl
xor
push
dec
mov
insb
addr16
in
dec
sub
jne
push
mov
sub
xchg
out
int
push
repz
jns
je
repz
jo
or
xchg
mov
sarl
mov
push
int3
or
and
bound
gs
adc
cmp
xchg
popa
mov
mov
adc
and
pop
loop
lock
rcl
aad
out
outsl
mov
test
sbb
stc
es
nop
leave
cmp
push
push
lds
dec
movsb
mov
xchg
and
push
je
in
test
iret
mov
dec
jb
sbb
push
addl
pop
sub
fwait
pop
xor
push
loope
nop
jl
ror
popa
inc
jbe
mov
or
sub
mov
or
mov
mov
mov
stos
mov
lahf
movsb
lahf
cmp
dec
inc
sti
mov
aaa
xchg
sub
sbb
pop
loopne
or
dec
or
in
jo
jne
int
repz
xor
mov
mov
pushf
je
repz
jg
das
stos
mov
push
fists
sbbb
push
popf
out
test
aaa
pop
sub
mov
mov
fcoml
xor
lods
mov
xor
jb
push
or
inc
stc
xor
mov
or
test
insb
xchg
and
push
xor
cmp
ss
sbbb
add
and
cmp
sbb
adc
add
int3
andl
sbb
cwtl
push
or
mov
aas
adc
jnp
sahf
jae
pop
jle
xor
cld
and
cmpsb
les
pop
stos
mov
ret
inc
mov
mov
xchg
fbld
xchg
mov
loop
cmpsb
test
dec
call
jno
mov
fidivrl
push
clc
fistpll
add
lods
xor
enter
into
mov
push
nop
dec
mov
and
inc
cmpsl
fst
popa
xchg
sti
push
loope
mov
add
jle
add
jbe
sub
push
ror
sti
mov
cmp
push
shrb
inc
rolb
or
mov
fdivrs
ds
daa
sti
shlb
mov
jno
sbb
fbstp
add
aas
jl
push
gs
ja
push
sbb
shll
idivl
leave
push
xor
mov
jo
test
in
cmpsb
mov
mov
pushf
bound
les
or
sbb
push
xchg
jl
insl
mov
into
movsl
insb
and
jo
jb
ja
ret
xchg
repnz
insl
fdivs
or
js
lahf
sub
pop
jnp
add
jge
fwait
push
fldcw
mov
push
mov
sti
jmp
lret
mov
scas
int3
sub
out
stos
inc
dec
cmpsb
fcoml
aam
test
pushl
jns
dec
icebp
es
int3
cmp
sub
divl
jo
xor
aam
pop
and
gs
out
jp
test
int3
std
mov
stc
decl
sbb
inc
and
fisttpl
cmp
dec
enter
sbb
je
icebp
pop
cld
jns
xchg
mov
call
xchg
out
pop
jno
dec
inc
mov
push
arpl
xchg
mov
fsts
in
cmp
pop
jmp
xor
or
outsl
leave
cmp
addr16
cmp
mov
in
shl
dec
sahf
adc
push
arpl
aam
out
mov
movsl
sub
inc
xor
and
and
cmp
pusha
mov
mov
xor
out
or
dec
lods
hlt
gs
imul
pop
shll
sub
and
mov
pop
adc
sub
mov
jmp
dec
jmp
fstl
mov
or
pop
jmp
pop
flds
clc
adc
out
out
xor
ret
lods
cmp
inc
sbb
mov
in
mov
xor
mov
loopne
mov
cli
cwtl
push
push
xchg
popa
test
test
ss
test
pop
jbe
ds
icebp
lods
fisttpl
sub
std
daa
test
jmp
mov
outsl
mov
adc
les
outsl
sti
sbb
repnz
lods
xchg
inc
dec
pop
cmpsb
out
stos
jne
mov
stos
inc
mov
xchg
xchg
dec
jo
cmp
cs
mov
xchg
jmp
or
mov
mov
test
filds
pop
call
lods
rcrl
faddl
mov
sbb
shl
xor
add
xor
mov
jge
mov
adc
pusha
xor
xchg
enter
cmp
pushf
sub
rdpmc
stos
testb
data16
adc
gs
push
push
xor
ljmp
adc
or
je
lods
and
add
movsl
hlt
mov
das
cmp
push
or
ud1
mov
or
jg
mull
outsl
add
xchg
das
popa
sbb
pop
push
inc
jo
test
roll
scas
lret
sbb
dec
mov
das
aam
sbb
lahf
lret
lds
lcall
mov
stc
pop
popf
inc
les
out
fs
and
aad
jmp
sbb
sub
lods
movsb
xor
ja
cmp
or
mov
dec
loop
popa
pusha
movsl
ret
add
xchg
shlb
clc
sub
lds
push
and
xor
and
push
sub
fistps
fsubr
cmp
jo
sub
or
sbb
ljmp
repnz
ljmp
mov
out
dec
scas
iret
hlt
sub
cmp
and
pop
push
jno
push
and
outsl
rcrl
dec
daa
rolb
sbb
das
icebp
insl
lret
or
packsswb
or
push
adc
push
ljmp
add
data16
call
cltd
jns
shll
dec
jns
push
sub
ficoms
rcrb
andb
inc
adc
adc
fwait
cmpl
ds
into
shrl
dec
and
rorl
cwtl
inc
pop
cs
arpl
xor
push
jge
ret
dec
stos
and
xchg
rorl
test
push
in
lock
lds
mov
mov
push
scas
inc
hlt
push
sub
pop
fimuls
test
xor
sub
rolb
mulb
jg
mov
xchg
faddl
mov
fwait
jb
mov
pop
or
cmc
popa
js
push
insl
inc
loop
push
jge
jge
pop
sub
push
cmpsb
pop
mov
sub
mov
jns
pop
pop
repz
sub
inc
daa
pop
je
lret
jo
mov
mov
or
xor
jg
rcrb
cmp
lret
clc
and
sbb
repz
out
cltd
mov
shlb
xor
dec
add
outsl
xchg
mov
sub
fwait
jmp
push
adc
pop
inc
out
leave
mov
xchg
xor
push
cmp
lods
sub
push
mov
sbb
stos
call
shlb
subb
in
fs
xchg
lds
sbb
adc
add
std
sbb
lds
sub
mov
mov
mov
outsw
xchg
dec
cmpsb
pop
sbb
or
jecxz
test
cmpsb
jnp
xchg
inc
leave
ret
sub
inc
push
xor
gs
inc
js
subl
aas
loopne
inc
dec
testb
roll
fisttps
mov
add
pusha
cmp
mov
pop
adc
pop
inc
enter
xor
fs
push
push
pop
lcall
cmp
test
cmpsl
sub
push
out
xchg
lahf
add
pop
inc
ja
pop
inc
mov
xchg
inc
pop
cmove
mov
xor
lret
inc
pop
movsl
loop
push
int
add
divl
or
or
mov
cmp
stos
mov
xor
mov
jmp
test
xchg
imul
push
add
fcmovbe
jle
cmp
shrb
cmc
and
sub
imul
jmp
sahf
jae
add
xchg
stc
lea
imul
pop
xlat
sahf
and
int3
fistpl
adc
test
mov
cmp
in
and
sbb
nop
jno
lcall
mov
jl
mov
enter
in
lahf
mov
paddusb
cmp
leave
sbb
imul
mov
loop
sub
sub
add
adc
sub
popf
stos
sbb
cmp
push
das
cltd
mov
mov
pop
sbb
jp
push
mov
mov
add
cwtl
loop
inc
repnz
inc
sbb
jno
lcall
mov
inc
sub
in
mov
cmp
outsl
and
mov
sbb
cmp
cmp
add
mov
sub
shlb
or
mov
mov
sub
xchg
inc
sbb
scas
ss
lret
and
jno
rolb
pushaw
test
dec
jnp
shll
divb
movsl
ljmp
clc
sti
xor
repnz
sbb
sub
imul
loop
and
push
add
and
jb
cmp
pop
out
lds
dec
jnp
xor
sbbl
cld
mov
rcll
jo
aam
mov
repz
in
adc
test
imul
jns
jg
dec
cmp
push
enter
sbb
adc
or
mov
mov
mov
arpl
int
inc
mov
into
dec
das
jge
mov
xchg
sub
pop
pop
cli
sbb
or
hlt
xor
in
lock
cmp
scas
push
pop
mov
cmpsl
and
stc
sahf
jb
scas
mov
xor
je
fs
jecxz
divb
jbe
push
inc
sbb
mov
xor
push
sbb
cmpsl
ds
jne
cmp
cmp
fistps
ret
jg
or
sbb
sub
icebp
call
jmp
inc
fucom
sbb
dec
lds
mov
push
cmp
jns
mov
xor
shr
inc
mov
xor
call
in
aas
js
push
fsts
mov
mov
and
pop
adc
in
mov
cmc
test
fidivs
pop
cmp
pop
push
enter
lods
push
mov
push
cs
xor
jp
push
lods
inc
ret
push
or
out
jo
sub
lahf
scas
fwait
adc
push
mov
mov
add
lret
shl
call
aad
pop
fidivrs
inc
scas
mov
clc
loope
ficompl
and
sbb
sbb
out
popf
sub
and
mov
mov
out
fsubrs
mov
iret
js
cld
lahf
icebp
inc
jl
cs
pop
in
and
sbbl
pop
cmp
add
mov
imul
into
fs
adc
sbbl
or
insb
adc
shrl
sbb
sbb
jae
sahf
push
int
dec
pop
pushf
subl
int
mov
mov
dec
cmp
repnz
inc
dec
adc
jmp
inc
mov
xchg
cmp
iret
scas
push
mov
shlb
jmp
xor
cmp
subb
mov
pop
shl
rcrl
sub
imul
ret
mov
arpl
mov
push
inc
push
push
sti
fidivs
mov
andl
hlt
cmpsb
sbb
mov
gs
push
mov
cld
movsl
cmp
in
pop
test
push
and
mov
sub
loop
xchg
jne
push
dec
dec
sub
jge
dec
pop
rol
test
cmp
cmc
xchg
mov
rcll
jns
js
scas
sbb
stos
push
mov
fwait
pop
faddl
adc
fidivs
ja
sbb
mov
xchg
jmp
aaa
jb
cmpb
in
push
ds
inc
jne
sub
pop
jle
dec
cs
fldt
push
or
sbb
xor
dec
fldcw
pop
or
sbb
pushf
movsl
inc
or
lahf
sub
mov
push
cmpsb
lods
push
mov
pushf
test
es
push
and
lock
sub
call
dec
xchg
aad
aaa
jo
icebp
xor
and
into
sub
mov
cmp
jmp
dec
xchg
xor
sbbl
mov
icebp
adc
ljmp
sar
cmp
pop
orl
jb
fcmovu
hlt
and
popa
push
ret
pop
mov
xchg
loop
sub
orl
sbb
dec
in
xchg
lea
out
mov
les
stos
imul
das
xlat
movl
test
pop
dec
xor
int
push
cmc
insb
sti
jns
daa
push
mov
add
cmp
aad
mov
int
sahf
fadd
cli
mov
loop
xchg
loop
sub
jmp
shl
cld
or
ret
xchg
pop
andb
daa
mov
stc
add
inc
push
dec
lret
bound
xchg
aaa
and
lods
rol
cmp
ret
nop
jmp
dec
lock
out
and
outsb
cltd
sbb
sbb
cmp
and
fstl
dec
mov
mov
xorl
bound
lea
jmp
sbb
call
push
add
aam
sub
ffree
outsb
push
cwtl
mov
fcomip
and
and
xchg
sub
mov
inc
sub
ljmp
mov
cli
sbb
mov
int
cli
cmpsl
jae
ds
incl
jmp
jns
lock
mov
stos
cwtl
push
xchg
xor
insb
in
imul
jmp
push
out
jl
stos
cmp
loope
add
xor
mov
stc
fstps
ret
cmp
sub
ret
inc
xor
sti
mov
dec
add
loopne
adc
sub
cwtl
arpl
mov
push
outsb
and
mov
push
dec
xchg
or
mov
mov
pop
addr16
outsb
push
sub
jb
pop
mov
xchg
jae
cmp
scas
loope
mov
cwtl
xor
aaa
mov
jns
iret
mov
mov
add
sub
bound
pusha
add
out
push
inc
rolb
xlat
or
in
sbb
out
push
sbb
xchg
jp
jnp
test
scas
xor
ret
mov
in
push
or
cmpsl
mov
dec
pop
or
addl
repnz
mov
inc
scas
inc
jnp
inc
scas
shll
push
lock
jg
cmp
stos
mov
cmc
cmp
add
loop
cmp
lock
scas
not
out
xchg
inc
scas
or
mov
xor
ds
xor
xor
dec
mov
out
cmp
pop
xor
pop
sarb
cld
test
xor
iret
stos
add
xor
pop
enter
add
xchg
shll
aas
sub
sbb
jg
cmc
fwait
shrl
mov
sub
rcl
sti
leave
fidivrl
fsubp
mov
arpl
xchg
xor
pop
icebp
test
test
adc
stos
or
mov
out
iret
orl
jg
xchg
xchg
pop
int
fsubr
lods
ret
cmp
scas
xorb
fisttpl
xchg
mov
mov
pop
scas
jo
jl
mov
sub
call
mov
pop
je
fldcw
or
les
outsl
outsb
push
sub
sub
cmp
push
or
dec
sub
mov
xchg
mov
mov
push
ret
push
mov
sub
pop
adc
push
mov
iret
mov
jg
inc
jae
adc
out
in
das
sarb
push
mov
inc
adc
mov
ret
xchg
cmp
aad
pop
pop
mov
ror
xchg
ds
or
call
arpl
adc
hlt
cmp
mov
scas
sahf
cwtl
adc
rcr
imul
adc
xchg
test
jae
stos
pop
test
jne
in
leave
push
sarl
sub
loope
jae
xchg
stos
xchg
xor
inc
cmp
test
in
sahf
xor
test
in
or
add
or
cli
mov
shll
mov
push
mov
inc
stos
adc
mov
mov
xchg
loop
stos
fidivs
push
sbb
lock
loop
sub
lahf
orw
xor
int3
sti
js
outsb
minps
repnz
push
shlb
mov
movsb
das
imul
in
lret
into
sbb
idivl
add
fcmovu
jbe
cmp
mov
push
fsubl
xchg
rcrl
xchg
out
sbb
sub
fidivs
sbb
enter
mov
fsts
xchg
test
cmp
popa
xchg
insl
hlt
mov
sbb
inc
in
and
pop
xor
lret
sbb
cmpb
add
pop
iret
roll
pop
xor
lcall
mov
xchg
int3
fimuls
out
xchg
xor
and
in
lret
jg
cmp
or
jmp
leave
pop
mov
xlat
out
add
lock
and
add
adc
lcall
daa
clc
mov
adc
push
ja
add
dec
repnz
les
movlps
in
lcall
les
lahf
push
sti
jl
mov
jns
in
or
cmp
adc
mov
and
pop
jno
xchg
addb
test
pop
cmpsb
jno
les
and
in
leave
insl
dec
pop
ljmp
imul
lcall
cmpb
push
and
push
lods
icebp
sub
dec
or
inc
add
mov
inc
pop
push
or
lock
adcb
enter
jnp
push
popf
shlb
push
xchg
push
loop
loop
in
xchg
mov
cmp
cmc
ds
pusha
lods
inc
inc
push
and
mov
cld
cwtl
popa
int
mov
jno
adc
fwait
xchg
stc
int
pop
pop
fmuls
in
stos
aaa
sub
and
lods
test
push
cmpsb
leave
xchg
pop
loope
subb
dec
xchg
push
jns
mov
sub
insb
fiadds
jmp
pop
mov
dec
clc
push
adc
sub
mov
out
sbb
mov
insb
outsb
adc
mov
push
xlat
mov
loope
lock
jnp
jb
sbb
popa
popf
sarl
lds
sub
es
pop
movsl
dec
add
cmp
push
scas
cld
rclb
dec
xchg
popf
das
and
pop
std
int3
pop
dec
pop
dec
dec
mov
push
add
pusha
add
xchg
push
or
add
ljmp
cli
ficoml
push
xchg
push
jp
push
lds
mov
sti
xchg
sti
xchg
and
push
and
lcall
push
mov
dec
ljmp
and
mov
xor
mov
add
and
adc
push
fldenv
aad
add
cmc
push
cmpsb
fisttps
cmpl
fs
outsb
sub
cli
fldcw
lea
xor
sub
jb
js
sbb
das
sub
loopne
test
rcrl
jno
push
aam
mov
push
mov
push
popf
or
dec
pop
ret
in
and
movsl
adc
inc
outsl
cwtl
jb
aad
mov
inc
jo
mov
enter
dec
and
mov
mov
outsb
in
push
rol
pop
fnstsw
es
jne
add
push
sahf
addr16
addl
lcall
or
or
ja
adc
fidivrl
sbb
cmpsb
lods
iret
movsb
jo
mov
adc
adc
add
leave
mov
dec
sub
inc
lcall
mov
mov
sub
mov
ret
fcoml
arpl
add
lock
js
mov
das
sbb
dec
mov
out
outsb
outsl
pop
lret
in
add
xor
push
push
push
add
mov
add
xor
mov
sub
int3
je
inc
insl
in
fimuls
outsb
jp
ja
lahf
scas
loopne
pop
subb
xchg
pop
sub
je
int3
sbb
hlt
cmpsb
sub
jge
gs
sbb
daa
jl
or
pop
mov
mov
xchg
movsl
out
imul
jne
cli
lahf
jne
frstor
stos
adc
jmp
mov
jmp
and
hlt
movsl
mov
out
inc
mov
push
bound
mov
push
rorb
lock
into
mov
clc
jmp
mov
jmp
sbb
inc
repnz
add
and
ror
outsl
into
and
add
lahf
in
mull
push
push
mov
inc
test
sbb
sbb
stos
das
lcall
je
cs
push
inc
loop
pop
jb
add
jo
xor
pop
mov
rcll
xchg
cmpl
ret
mov
in
mov
pop
dec
andl
inc
sbb
outsl
aam
xchg
cmp
scas
xor
das
lock
std
push
ja
jl
pop
cmpb
xor
push
cmpsl
inc
mov
dec
hlt
cmp
call
aam
jmp
mov
mov
and
jg
xchg
in
js
jecxz
jbe
jge
jne
or
test
test
dec
outsl
push
mov
js
clc
pop
cwtl
sub
pop
cmpsl
xor
cmp
pop
or
pop
popf
int3
stos
sbb
inc
jae
pop
repnz
fwait
loope
mov
sub
cmc
and
jae,pn
adc
adc
jo
das
jne
or
loope
push
clc
cs
cwtl
push
adc
xchg
xlat
push
ret
in
xchg
push
push
test
sahf
lock
aad
xchg
pop
out
xor
mov
mov
add
test
sbb
jge
test
jecxz
je
loopne
nop
mov
jns
pop
inc
or
push
adc
push
repnz
pop
ss
sub
enter
mov
sbb
mov
out
adc
inc
out
jnp
insl
xor
rcl
cmpb
mov
jae
cmovl
jp
and
sub
xor
push
imul
push
or
jae
mov
lock
xchg
cmpsb
sub
ss
pop
mov
movsl
wbinvd
mov
scas
add
xchg
inc
int
push
dec
popf
data16
sbb
ret
sbb
pop
adc
mov
jecxz
into
and
lds
int3
daa
dec
jns
mov
dec
test
enter
jnp
and
lret
lcall
mov
mov
mov
jp
mov
sbb
mov
and
adc
pusha
and
and
scas
sub
xchg
adc
cmp
push
mov
mov
sub
jecxz
mov
out
sub
sub
cmp
lcall
add
dec
out
int3
xchg
sbb
pop
ja
pop
or
cmp
cld
subl
dec
adc
inc
xchg
leave
and
repz
push
inc
cltd
and
and
lahf
ja
or
lret
mov
aas
mov
xor
into
shl
insl
and
mov
ja
insb
pop
ffreep
je
inc
mov
mov
jp
or
sbb
out
test
notb
lcall
dec
jb
push
lods
insb
faddl
dec
xchg
adc
sub
es
out
mov
jp
rclb
in
xor
stos
mov
testb
push
pop
push
mov
inc
fcomip
es
sarb
mov
mov
fdivrs
sub
enter
lcall
aad
loop
pusha
add
xlat
xchg
aad
sti
jbe
pop
fimuls
mov
mul
push
std
data16
enter
jmp
pop
mov
inc
sbbl
jno
addb
imul
mov
es
dec
mov
mov
into
push
and
or
push
add
dec
rcrl
stos
xor
out
xor
jle
mov
sub
ja
mov
mov
mov
pushf
push
pop
xor
jg
movsb
scas
inc
and
push
fidivrl
test
jnp
jge
scas
loopne
dec
ret
add
dec
jo
xor
pop
dec
or
cwtl
lock
mov
das
mov
pop
adc
sub
nop
movsb
bound
push
mov
sub
repz
jg
shlb
xor
push
inc
jmp
xchg
push
data16
in
fs
and
pusha
adc
insb
sbb
jo
push
push
xor
setno
daa
lret
loope
sub
ljmp
popa
dec
mov
sbb
cmp
insb
cli
inc
or
xchg
loopne
lahf
aaa
imul
les
fwait
int
movb
add
xor
inc
dec
loopne
sub
inc
movsl
pop
jae
sbb
notb
es
jbe
xor
lock
inc
test
mov
adc
lahf
popf
sbb
aad
lret
adc
loop
and
push
dec
arpl
dec
lea
sti
or
mov
sahf
lahf
lods
cmpsb
fldcw
or
xor
mov
xchg
jns
mov
inc
sub
inc
jle
jle
in
mov
roll
into
rcrl
jmp
mov
divb
sub
outsl
decl
stos
mov
into
add
mov
lea
shll
mov
xchg
lret
dec
lods
sub
and
fnstenv
mov
push
mov
andl
stos
pop
dec
jo
notl
sub
movsl
cmp
stos
mov
cld
outsb
es
jecxz
mov
lock
xor
sub
leave
sub
jecxz
dec
dec
les
cli
cmp
inc
jge
inc
or
sbb
mov
ror
push
or
mov
fistps
mov
cmp
adc
loope
js
insl
or
dec
cltd
lock
mov
lret
repnz
in
cli
push
imul
hlt
sti
bound
fcmovbe
add
in
lcall
ds
sarb
test
mov
mov
mov
stos
cli
xchg
fsts
xchg
ret
test
aas
imul
mov
inc
clc
popf
push
sti
sub
jb
mov
stc
cmp
jno
adc
je
cli
lcall
into
call
add
fbld
outsl
push
push
out
testb
xchg
pop
push
lods
out
lret
lret
shl
or
arpl
addr16
out
leave
out
sub
mov
adc
xlat
jmp
inc
test
and
les
add
in
in
fwait
aaa
dec
jp
mov
push
clc
pop
or
pop
adc
or
inc
pop
das
enter
sub
imul
repnz
cmp
leave
inc
pop
pop
push
testw
enter
mov
or
jne
idivb
rcrb
push
call
mov
mov
or
jle
jae
ljmp
mov
cmpsb
add
xor
popf
in
and
xor
push
cmc
or
adc
out
ja
imulb
aam
sbb
xchg
dec
shl
mov
popa
lea
cmpsb
ret
adc
pop
es
push
notb
mov
sub
and
divb
push
push
sbb
ret
notb
test
nop
lret
push
in
add
cmp
stos
push
imul
lret
add
icebp
sbb
lahf
scas
aam
mov
mov
pushf
insl
arpl
pop
mov
shrb
cmpsl
or
dec
or
jmp
lock
out
inc
stos
inc
into
xor
dec
clc
xor
rcrb
and
dec
or
or
add
sbb
push
cmp
jle
cmpl
lea
lahf
pop
xchg
ss
add
icebp
pop
movsb
ljmp
fnsave
loopne
pop
sub
xchg
push
mov
or
out
bts
cltd
cmp
cltd
movl
data16
dec
xor
stos
adc
or
jp
divl
insb
enter
xor
pop
test
imul
mov
icebp
xchg
vpaddusw
lret
fldl
cmp
jl
cld
push
daa
out
add
outsb
inc
cmc
dec
xchg
je
clc
inc
daa
xor
out
or
es
xchg
sbb
sahf
cmp
lds
inc
lret
mov
or
out
dec
pushl
push
jno
mov
daa
gs
sub
lret
addr16
fmull
lods
cmp
or
out
call
mov
daa
add
mov
shl
pop
cmp
pop
bound
push
adc
cld
and
icebp
and
or
sbb
or
mov
insl
scas
add
repnz
sbb
mov
or
aad
inc
mov
aaa
rcl
pop
test
inc
ffree
data16
add
and
imul
clc
lods
cmp
pusha
add
jecxz
xor
sub
stc
push
fwait
mov
jo
sbb
mov
sbb
into
clc
addl
or
shrb
enter
push
lret
mov
loope
xor
push
cmp
adc
pop
js
mov
cmc
push
pushl
push
stc
jp
mov
xor
ret
lret
add
std
jno
pop
dec
subl
cwtl
sbb
cld
loope
pop
das
das
or
or
dec
int
data16
inc
add
jp
push
movsl
mov
xor
cmc
xor
rclb
xchg
rorl
dec
insl
stc
dec
insl
out
pop
mov
pop
orb
out
shl
daa
sahf
sbb
push
jp
dec
push
inc
sbb
subl
cmp
dec
stos
int3
outsl
bound
mov
xchg
pop
xor
sbb
ret
and
inc
sbb
mov
imul
in
sub
and
ljmp
frndint
inc
sarb
hlt
gs
cli
and
js
fcomps
hlt
xchg
shl
in
push
fstpt
pop
inc
sbb
arpl
sub
inc
xor
inc
call
adc
icebp
lcall
mov
push
and
aam
mov
dec
mov
out
xchg
in
mov
lahf
jmp
inc
sar
scas
and
aam
out
lret
into
dec
dec
movsl
jl
inc
in
mov
notb
stc
jge
mov
repz
or
mov
push
mov
mov
fnstcw
mov
test
inc
jne
ja
xor
dec
lds
xor
push
jnp
loop
push
addr16
and
in
int
pslld
cltd
scas
dec
mov
push
mov
cmp
ja
fsubl
push
out
mov
fidivl
jbe
addr16
mov
mov
in
mov
xchg
rorb
cwtl
lahf
icebp
pop
repnz
cmp
xor
test
cmp
dec
in
inc
xchg
mov
cmp
pop
cld
mov
xchg
hlt
rorl
out
mov
jp
movsl
shrb
jno
pop
xor
fsts
fwait
jecxz
outsl
test
xorl
int
pushf
repz
rcrb
sub
je
movsb
inc
pusha
scas
fs
inc
mov
into
pop
ja
sub
cmp
push
ja
movsb
pop
cmp
add
jecxz
cmp
mov
hlt
mov
repz
je
pushf
mov
mov
push
sbb
xor
push
loope
mov
lods
mov
sbb
jl
jno
pusha
lods
fwait
hlt
mov
lahf
pop
jno
sbb
inc
push
xchg
dec
popa
inc
jnp
pop
adc
pop
outsb
pop
or
bound
sti
adc
xor
xlat
ret
adc
sbb
jbe
xchg
jecxz
push
dec
aas
sbb
int
fdivrs
push
mov
pop
fdivl
xchg
mov
icebp
sti
je
scas
mov
push
mov
lret
imul
loop
hlt
jnp
fmull
aas
dec
xchg
leave
cmp
dec
dec
stos
daa
mov
mov
adc
xor
inc
rclb
sbb
xchg
ret
add
movsl
add
sar
sub
pop
sub
push
cmp
pop
lds
mov
sbb
orb
sahf
mov
pushf
push
sub
add
lods
andb
adc
push
in
fidivs
jmp
jbe
lea
inc
cmpsb
push
in
test
out
test
mov
insb
push
stos
mov
out
ret
mov
test
aad
mov
cmpsb
mov
sbb
and
ljmp
je
rcll
movsl
add
sbbl
jg
les
jns
pop
out
xor
cmpsl
xchg
jns
jae
xchg
roll
and
xchg
add
mov
push
mov
das
and
inc
dec
ret
or
cmc
adc
mov
fists
push
jnp
stc
sbb
adc
das
adc
cmp
aad
mov
mov
stos
fs
ljmp
dec
pusha
test
bound
into
int
lret
adc
icebp
sub
notl
test
in
arpl
add
ja
and
cld
mov
xchg
add
and
mov
fstpl
pushf
popa
js
sbb
mov
in
jbe
mov
sbb
movsb
nop
nop
insl
dec
fcmovne
xor
imul
jmp
pop
rolb
sub
icebp
out
sub
jl
rcll
xchg
mov
mov
lcall
mov
movsb
popa
dec
ror
imul
lods
mov
stos
cmpsb
pusha
insl
inc
xchg
icebp
push
xchg
scas
lahf
mov
xchg
mov
cmp
loope
fcmovbe
out
rcll
in
inc
jns
mov
stc
fmul
jl
sub
arpl
sbb
imul
cmpb
sbb
push
shl
xlat
out
movsb
movsl
inc
dec
out
sub
movsb
pop
iret
popa
and
mov
lods
dec
nop
jae
mov
push
xchg
pop
aas
into
inc
imul
movsb
test
iret
call
lods
andb
movsl
jbe
mov
jg
dec
iret
daa
mov
mulb
stos
outsb
ljmp
sub
pop
in
incl
xchg
sub
cwtl
xor
iret
shlb
cmp
sub
push
lods
in
icebp
pusha
leave
jmp
adc
xor
cmpsl
mov
fstps
mov
mov
xor
cmc
inc
push
and
pop
jae
les
fxch
xorl
fwait
cmc
fmull
adc
insl
inc
jmp
loopne
cmp
in
pop
insl
push
jp
out
add
pop
rorb
in
js
enter
mov
rorl
ss
scas
and
cmp
dec
xchg
clc
arpl
lock
jne
mov
repnz
xor
inc
ret
nop
ja
cs
lcall
ds
fcoml
and
push
mov
fldt
or
roll
scas
dec
add
lock
mov
mov
sbb
stos
sub
lahf
push
pop
out
adc
dec
test
ja
pop
inc
bnd
adc
sub
imul
mov
in
test
mov
fstl
rclb
mov
jmp
repz
in
push
lret
daa
xchg
out
dec
xor
mov
jno
pop
cwtl
insb
fildll
mov
out
hlt
mov
scas
xchg
lcall
xor
cmp
jae
mov
sbb
aas
pop
xor
fidivl
mov
leave
ljmp
or
pop
fwait
jge
cmp
sub
aam
test
sub
add
stos
xchg
xchg
mov
lds
shl
loope
add
xchg
sbb
dec
cld
adc
int3
mov
popf
push
stos
loopne
or
xor
ja
movsb
lds
mov
sub
dec
or
test
pusha
movl
imul
push
push
sub
sub
or
pop
loop
push
ret
je
and
mov
add
pop
and
xchg
jmp
mov
stos
dec
int
sbb
cmp
sbb
mov
or
add
push
and
jecxz
lahf
mov
int3
lods
mov
dec
mov
mov
mov
sub
cmpsb
add
cltd
xlat
xchg
cwtl
sbb
outsl
inc
mov
lea
pusha
sub
push
sub
xchg
mov
xor
jne
fldenv
ja
stos
nop
ja
push
lods
cmp
addl
cmp
sub
xchg
sbb
push
push
cmp
add
jl
pop
inc
jp
cld
fdivl
pop
rol
cmpsl
inc
shl
dec
scas
mov
in
and
imul
xchg
gs
ljmp
lcall
pop
mov
dec
aaa
inc
mov
sbb
inc
cmp
adc
cld
lods
dec
cmc
jg
pop
cmp
mov
fiaddl
jg
mov
in
sub
loope
lods
adc
dec
dec
fnsave
bound
jo
push
insl
mov
cmpsl
icebp
mov
outsb
sbb
fisubrs
jno
adc
push
adc
xlat
push
out
lret
jmp
lahf
dec
adc
lahf
inc
jo
outsl
mov
push
cmp
rcrb
mov
push
or
mov
xchg
sub
or
push
and
xor
insl
jle
pop
out
cmp
mov
pop
enter
imul
test
cmpsb
push
pop
mov
jnp
iret
xor
jns
clc
dec
rolb
in
cmp
out
xchg
aas
mov
sbb
shrl
ret
add
cmp
jb
and
mov
or
dec
lods
xchg
sbb
xchg
sti
fwait
repz
inc
jg
les
popa
jmp
sub
xor
fwait
test
ja
jno
sahf
pop
flds
xchg
pop
in
lods
push
repnz
xor
daa
and
push
addb
iret
inc
push
shr
jle
scas
pop
test
cmpsl
fistps
pop
dec
mov
clc
sbb
insl
jae
inc
mov
popf
pushf
xchg
cmp
les
fdivs
and
fcoml
fsubr
int3
adc
leave
xor
popa
pop
adc
cmp
sub
dec
cmpsl
call
xchg
test
add
mov
bound
shrb
xchg
pop
cmpsb
shrl
adc
sarb
mov
mov
lcall
push
test
and
mov
inc
outsl
rolb
cmp
fiadds
lcall
shl
mov
mov
inc
or
push
dec
loopne
cs
divb
loope
add
mov
mov
lcall
iret
je
and
pop
push
push
sub
sbb
xchg
es
addr16
fdivrl
pop
push
jl
fidivl
repnz
mov
aaa
add
mov
inc
jbe
mov
xchg
es
stos
xchg
inc
mov
int3
mov
push
je
and
mov
je
xor
loope
es
sbb
cld
add
cmpsb
and
and
shll
iret
loope
sbb
add
sbb
push
inc
push
xchg
add
popf
jnp
jmp
loopne
imul
or
pop
and
jae
mov
clc
pop
or
jmp
lea
call
sbb
lcall
decl
push
lock
xchg
xchg
and
jb
adc
adc
aad
bound
lea
lret
inc
xchg
xor
jae
and
stos
fs
xchg
sub
sbb
gs
mov
add
ret
das
popa
adc
push
sti
sbb
xor
xchg
xchg
pusha
dec
inc
sub
in
daa
stos
in
aaa
fld1
lret
popf
in
icebp
movsb
cwtl
cmp
add
jl
inc
mov
in
aas
jno
in
imul
jmp
addr16
pop
push
adc
pop
stos
mov
jae
xchg
lea
push
popa
jecxz
popf
ja
mov
inc
je
dec
mov
jge
jns
mov
imul
sarl
pop
shll
or
dec
cmp
pop
jle
adc
push
ja
adc
xchg
dec
fcompl
xchg
and
hlt
fcoml
sbb
lcall
cmc
les
mov
or
pop
gs
scas
mov
cmc
aas
test
popf
or
fs
inc
jno
push
mov
cmp
xchg
sub
imul
addl
dec
jecxz
xchg
jle
leave
jno
cld
xchg
add
idivb
mov
cmp
jle
loope
push
lock
dec
cmp
int
push
pop
jo
es
xchg
aad
xor
cmp
in
pop
sub
mov
out
shr
xor
and
pop
pop
or
movsl
aad
je
or
jmp
mov
mov
jmp
cs
sbb
adcb
sub
xchg
mov
out
lods
mov
push
jns
jae
fdivr
ss
andb
sti
rcll
mov
xchg
sahf
push
fsubr
pop
sub
fmull
add
mov
lock
pop
shl
pop
imul
cli
mov
inc
inc
mov
dec
xchg
insl
imul
pop
add
arpl
imul
mov
sub
mov
jbe
xor
mov
ljmp
rcrb
mov
mov
dec
jp
cld
xor
jbe
push
std
into
jmp
popf
push
je
cmpsb
fmul
mov
aam
dec
inc
lea
and
pusha
add
and
addr16
jbe
je
inc
push
stos
mov
icebp
jae
lahf
jecxz
pop
test
cltd
pop
or
jbe
jbe
std
xchg
pop
sub
shl
mov
sti
jns
jb
fnstenv
je
mov
pop
stc
or
scas
and
adc
out
ss
jno
adc
ret
mov
clc
push
nop
lods
movsl
push
adc
pop
xchg
xor
push
jne
out
mov
das
xor
nop
cmp
mov
stos
pop
jno
dec
movsb
popa
into
test
cwtl
xor
mov
test
imul
inc
sub
jns
mov
mov
and
ds
xchg
push
dec
add
mov
xchg
dec
push
sbb
mov
or
push
inc
push
fiaddl
xorl
shll
jecxz
cmp
inc
dec
mov
repz
and
xchg
mov
dec
pop
pop
lea
notl
mov
inc
lds
iret
sbb
inc
in
mov
in
orl
pop
call
or
sbb
xor
fisttpl
pop
insl
mov
xchg
inc
inc
cs
icebp
pop
int3
mov
out
fildll
pop
mov
xchg
push
inc
aam
cmp
mov
std
outsl
push
pop
inc
lahf
mov
ljmp
add
int3
add
in
mov
mov
outsb
push
sub
push
xchg
xor
cmp
subl
mov
cmovnp
outsl
xor
mov
popa
adc
pop
stos
push
into
fs
mov
fldl2e
std
xchg
cmp
pop
bound
jge
hlt
jp
push
aaa
js
imul
add
push
dec
add
jae
or
adc
inc
mov
adc
clc
pusha
sub
dec
stos
pop
pop
and
sbb
pop
popf
outsl
fnsave
fdiv
mov
lahf
sbb
loopne
add
repz
dec
out
inc
adc
sbb
fsubl
cs
inc
mov
inc
mov
inc
push
sub
sbb
xor
sahf
sub
adc
or
sub
repz
rclb
lcall
inc
int3
xchg
int
iret
add
clc
pusha
and
fscale
cwtl
cmp
data16
fwait
jecxz
jbe
jae
bound
pushf
dec
outsb
jae
or
out
loope
mov
pushf
gs
rcr
cltd
pop
and
enter
popa
sbb
sbb
mov
cld
rclb
in
idivl
cmc
flds
jl
in
mov
hlt
sub
shll
jge
dec
pop
bound
jbe
push
sti
inc
mul
sub
inc
sub
sub
sub
jl
cmp
clc
cmp
sbb
int3
pop
js
mov
ds
adc
inc
lods
lods
sarb
arpl
sbb
mov
push
or
jno
repz
jmp
pop
xchg
jae
xlat
add
mov
in
and
cmp
mov
lods
rorl
loope
pop
loopne
push
xlat
ficomps
jns
out
pop
shll
mov
xchg
aaa
or
push
mov
pop
or
jbe
scas
sahf
das
and
sub
jae
push
notl
js
push
lret
into
xor
hlt
sti
inc
or
adc
sub
les
xchg
es
xor
xor
dec
inc
jae
pop
adc
xchg
aad
sbb
xor
das
das
xchg
jl
loope
fidivrl
rcl
push
inc
movsl
ret
ror
fsubr
add
pushl
sub
and
mov
push
mov
or
jne
test
sahf
mov
sbbl
mov
xor
xchg
lds
cmp
push
pop
aaa
add
fcmovbe
jb
sub
xor
jb
int3
inc
mov
mov
into
cmp
fstpl
jp
sub
in
loopne
dec
mov
inc
fldl
andb
leave
leave
cmp
outsb
sub
jae
daa
out
fwait
or
cmp
push
insb
pop
dec
pop
push
shl
jp
leave
out
mov
sub
mov
mov
xchg
mov
clc
mov
xlat
pop
sahf
lock
orl
cmp
adc
pusha
adc
fldt
int3
pop
outsl
repnz
push
cmp
leave
in
and
pop
rclb
cmp
sbbb
inc
adc
testb
push
or
xchg
xlat
cld
jne
sub
pop
aas
ds
cmp
push
sbb
scas
xchg
and
sub
pop
ja
negb
or
gs
loope
sbb
int
sub
cmp
test
out
sub
mov
test
jecxz
push
and
adc
push
js
scas
dec
popf
icebp
lock
rclb
mov
repz
sub
lcall
pop
sub
jno
adc
ljmp
xlat
clc
xor
outsb
or
es
fnstenv
inc
int
mov
movsl
fisubrs
mov
adc
and
jnp
cwtl
pop
rol
mov
jl
adc
ret
push
cwtl
lcall
jne
sub
lcall
aam
test
decb
pop
cmpsl
je
push
lcall
sbbl
pop
aam
imul
add
ds
loopne
iret
cmp
mov
xlat
dec
inc
or
popa
cmp
shll
xchg
sbb
hlt
xchg
adc
pushf
mov
push
in
dec
icebp
fwait
stos
filds
mov
add
scas
jmp
out
mov
inc
xchg
push
ret
ja
pop
mov
add
push
jno
mov
mov
dec
pop
mov
shrb
sbb
in
subl
or
push
inc
test
pop
push
outsb
sbb
icebp
popa
and
cmp
xor
mov
push
dec
ficoml
fisubrl
mov
push
mov
jmp
add
arpl
cmpl
out
sub
push
incb
push
sbb
movsl
lcall
add
rcll
mov
xchg
jl
jnp
stos
mov
sbb
push
jnp
push
or
mov
aam
stc
sub
inc
pusha
in
and
cmovb
or
out
dec
xor
pop
cmpsb
jge,pn
les
shlb
je
lret
sub
jle
loop
sahf
dec
repnz
sbb
lret
xor
cmp
push
ret
mov
cs
mov
sbb
mov
pop
adc
shrl
xchg
les
into
lods
cltd
xor
xchg
insb
jp
mov
insl
lods
lahf
sbb
outsl
loop
enter
cld
lds
in
mov
mov
pop
das
cld
call
inc
sub
sbb
pop
paddsw
xchg
pop
mov
push
js
sbb
je
adc
xchg
mov
push
adc
daa
cmc
outsl
int3
out
or
mov
repnz
push
shl
and
xlat
mov
mov
aas
or
mov
aaa
dec
popa
mov
mov
test
hlt
fstpl
and
or
adc
or
loop
stc
addb
into
out
jmp
cltd
aad
fidivl
incb
mov
dec
enter
mov
xchg
nop
inc
fistpl
pop
lds
jg
ja
lret
jmp
rcrb
ret
sbb
jle
and
lahf
dec
dec
and
aam
push
ljmp
dec
and
push
sbb
xlat
aad
pop
fcomp
sbb
imul
decb
add
xchg
mov
adc
sub
cs
outsl
lea
pop
pop
dec
cmpsl
shrl
nop
cmp
adc
pop
adc
enter
cltd
sbb
int3
sbb
jo
dec
pushf
inc
lret
add
cltd
addr16
xor
add
out
push
mov
ret
cmc
imul
pop
icebp
enter
add
ret
fldcw
movsl
or
imul
mov
xor
je
in
lret
mov
mov
cli
jmp
lods
push
loop
sarb
loopne
clc
inc
call
std
loop
inc
stos
stc
and
mov
mov
sub
clc
mov
bound
pushf
push
ds
push
mov
stc
mov
adc
sub
mov
imul
pop
inc
ret
insl
cwtl
rcrl
js
cmpsl
jp
out
insl
mov
ss
or
xchg
shlb
daa
add
xchg
dec
stos
inc
jne
adc
jno
cmpsl
cmpsb
scas
adcb
push
loope
lods
loopne
js
pop
ret
dec
mov
jle
pop
jb
xlat
xchg
dec
aas
popa
mov
xchg
int3
jg
lods
lret
imull
dec
nop
lret
or
jl
movsl
mov
cmpsl
jne
mov
jo
mov
cmp
stos
test
pushf
fcomps
lods
aad
dec
call
jbe
clc
xchg
sbb
out
cmpsb
cli
inc
adc
int3
cmpsb
popa
in
movsb
jb
pop
lods
hlt
and
xchg
fwait
jmp
movsb
cmp
mov
adc
imulb
add
xchg
lds
out
stos
push
or
sub
in
xchg
sub
dec
aas
xor
jg
sub
push
hlt
sti
adc
test
int3
jno
inc
movsl
sub
adc
adcl
push
rorb
je
xchg
outsb
rcll
push
ret
pop
mov
or
in
cmp
push
lret
pop
mov
daa
sahf
nop
fistps
in
pusha
in
sbb
stos
js
hlt
pusha
fsubrp
stos
das
and
mov
int
sarl
es
lods
sub
sahf
jnp
add
sub
mov
fcoml
add
call
insl
and
jo
and
or
negl
mov
sbb
lahf
cld
mov
mov
cmp
cwtl
mov
sbb
popf
sub
cmp
stos
inc
sbb
xchg
std
out
mov
mov
adc
leave
push
jecxz
repnz
mov
and
push
imul
cmpsb
mov
lods
ss
fstl
inc
inc
rcll
iret
imul
jge
adc
sbb
and
and
xor
roll
arpl
dec
xor
push
ds
adc
or
pusha
in
xchg
push
xchg
ss
fwait
icebp
mov
or
fdivrl
mov
pusha
push
add
nopl
aam
sbb
cs
inc
aad
sahf
pop
stc
popf
jmp
mov
lss
mov
dec
or
je
out
sbbl
ljmp
scas
dec
cmp
mov
rol
imul
or
das
push
cmp
sub
xchg
out
cli
mov
push
ret
test
sbb
data16
xor
sub
aaa
pop
mov
dec
in
pusha
xor
fwait
and
fs
repnz
add
add
ja
jg
jbe
mov
in
jbe
sub
sbb
or
scas
push
push
xchg
add
xor
lods
ja
jecxz
mov
stos
movsl
daa
outsl
pop
mov
push
leave
xchg
insb
dec
outsl
adc
lods
in
inc
and
cmpsl
cmp
jae
sbb
out
pop
cmpsl
mov
xchg
inc
sbb
hlt
dec
enter
outsb
sbb
icebp
movsl
outsl
stos
ret
mov
sar
and
scas
jbe
inc
test
mov
push
movups
mov
or
mov
jmp
ud2
dec
test
push
out
icebp
dec
ret
movsl
xchg
add
push
mov
jmp
enter
mov
mov
clc
mov
sbb
mov
out
mov
repnz
add
lret
mov
out
rcrl
xlat
xchg
cld
pop
jns
popa
icebp
movsb
std
mov
sarb
mov
or
das
cmp
adc
cwtl
call
mov
rolb
fimull
jo
pop
jnp
lea
add
xor
pop
inc
cmp
movb
add
mov
pop
add
scas
pop
and
ret
insl
arpl
les
pop
add
sbb
lock
jno
jno
inc
daa
sbb
lcall
sub
mov
scas
xor
push
imul
dec
mov
in
addb
and
sbb
and
add
or
xchg
sbb
iret
pop
repnz
sarb
jbe
mov
sbb
push
fdivs
fdivrs
enter
mov
xlat
inc
xor
jmp
mov
shl
call
xchg
cmpsb
jg
fmull
popl
mov
mov
jbe
xor
push
and
mov
out
pop
xchg
repz
mov
mov
jbe
cmp
sbb
iret
push
mov
pop
sbb
sub
adc
out
xchg
add
dec
push
and
add
dec
pop
add
test
xchg
daa
jmp
cmp
sbb
popa
cmpl
push
inc
pop
sub
nop
mov
ffreep
mov
test
sbb
jb
shlb
testb
xchg
call
sub
or
sub
pop
iret
adc
dec
loop
dec
mov
push
cmp
xchg
leave
mov
dec
cmp
inc
jne
imul
call
xchg
hlt
fisttpll
jno
test
lcall
pop
and
push
ss
insb
in
mov
inc
and
jne
or
test
mov
xchg
add
add
pop
icebp
inc
dec
sub
jbe
dec
adcb
fiaddl
jo
cmp
jno
fs
xor
rcrl
inc
pop
pop
ds
jmp
int3
dec
fistpl
lret
mov
es
clc
icebp
push
sub
jecxz
mov
jo
clc
mov
pop
cmp
adc
dec
cld
inc
xchg
out
dec
jnp
and
cmp
add
sahf
shll
fwait
add
xchg
pusha
les
dec
test
mov
out
and
in
mov
add
call
jo
cmpsl
mov
icebp
inc
in
dec
adc
xor
mov
add
jnp
mov
movsl
inc
lret
xor
jl
mov
stos
sbb
cmpsl
fs
outsl
mov
pop
inc
je
in
add
dec
idivb
lods
jb
xor
scas
inc
addb
clc
ljmp
pop
dec
aas
dec
je
sti
add
lods
int
xchg
xor
add
jbe
inc
xchg
or
ficomps
rolb
mov
push
std
popa
jae
out
or
sub
mov
das
lcall
int3
or
dec
sub
test
repnz
and
cli
test
dec
popa
gs
sub
adc
sti
inc
clc
and
xor
inc
add
mov
cli
stc
add
or
mov
cmp
mov
push
sbb
push
push
into
xor
inc
pushf
js
adc
rcll
mov
inc
or
xchg
int
enter
bound
mov
or
ljmp
inc
dec
inc
roll
lods
jle
cli
loopne
es
in
push
xor
rcrb
std
xchg
lret
or
fisubrs
sbb
outsl
xchg
out
in
mov
pop
pop
icebp
sbb
leave
push
pop
das
pusha
pop
push
rol
add
les
add
lods
outsb
add
mov
jnp
out
pop
mov
dec
cmpsb
mov
pop
dec
pop
dec
es
test
incl
inc
pop
bound
filds
lret
ss
xchg
sbb
cld
stc
mov
cmpsl
dec
lret
mov
mov
and
push
popf
lret
int3
aaa
shl
mov
adc
ja
cmpsb
inc
dec
js
dec
push
into
gs
int
xlat
or
mov
jo
push
cmc
popa
jb
adc
or
roll
je
xchg
movsb
lock
in
pop
mov
pop
mov
or
cmpl
scas
xor
inc
xor
push
ss
stos
cmp
or
ja
and
pusha
mov
xchg
repnz
or
imul
mov
cmovp
imul
sub
xor
ljmp
fistpl
out
sarb
call
push
icebp
pop
mov
inc
testb
cmc
stos
jae
mov
ja
pushf
and
xchg
sti
cmp
push
mov
xchg
push
aaa
in
pop
pop
fstps
pusha
rcll
scas
in
stc
or
jo
pusha
mov
xchg
push
xchg
test
fimuls
pop
cld
inc
rcr
or
repz
jl
lods
fimuls
in
cltd
inc
fs
stc
or
pop
ja,pn
and
mov
call
roll
ss
loopne
out
inc
cmpl
push
shl
mov
mov
out
cmc
imul
iret
outsl
jle
mov
mov
push
pusha
in
adc
sbb
jge
dec
sbb
outsl
shll
adc
mov
cmp
lcall
adc
xchg
lahf
jg
hlt
mov
rolb
push
orl
shl
adc
mov
imul
mov
mov
inc
enter
js
lods
sub
mov
mov
insb
shr
test
or
sarl
outsb
enter
and
inc
outsl
add
pop
push
in
sbb
xchg
fadds
shl
fsts
out
fs
lcall
inc
aad
das
ljmp
icebp
adc
xchg
in
clc
adc
lock
sub
iret
cli
or
fisttpll
xchg
rcrl
insb
dec
inc
jnp
pop
stos
fstp
lahf
adc
push
lods
jno
xchg
aas
cmp
cli
cltd
and
sbb
add
in
sbb
cmp
and
fistpl
xor
cmpsb
push
jbe
es
mov
pushl
insb
add
jae
mov
inc
adc
es
fdivl
and
addl
and
inc
sub
call
loop
sbb
js
push
pusha
mov
cmp
sbb
dec
xchg
lds
mov
mov
jae
cmp
cmp
mov
pop
cmp
xchg
push
lret
mov
or
cmp
lahf
fisttpll
sub
ds
jl
jl
add
xchg
xorl
in
lret
cmpsb
xor
insb
push
pop
mov
mov
fiadds
andb
pop
test
incb
push
push
lods
xchg
xchg
push
mov
inc
jecxz
xor
mov
dec
or
into
in
add
nop
mov
pushf
and
dec
shll
stos
in
mov
sahf
out
jg
cmc
std
or
sub
mul
ficompl
add
bndstx
mov
or
xchg
cmp
mov
inc
outsb
arpl
test
adc
aad
pop
add
fwait
add
push
jle
cmp
rorl
inc
xor
shl
xor
sbb
adc
leave
push
psrad
lds
or
add
lret
mov
arpl
sub
hlt
push
add
add
inc
sbb
sub
idivl
dec
pop
cmc
inc
and
sbb
pop
inc
sbb
inc
pop
jg
leave
jnp
sbb
aaa
xor
push
mov
insl
test
test
mov
out
dec
es
adc
push
rolb
and
jns
test
sub
xor
andl
mov
out
lds
or
popa
add
push
ret
andb
fs
test
mov
stos
sub
jp
xor
adcb
adc
cmpsb
movsl
jae
adc
mov
xchg
push
mov
dec
imul
fsubs
cmp
inc
mov
mov
imul
xor
jecxz
xchg
cmc
ds
aad
sti
jmp
push
aas
inc
outsl
es
call
cs
cld
or
cmpsl
fstps
pop
xor
orb
or
cmp
test
add
scas
jg
or
mov
push
xchg
add
pop
and
inc
jmp
scas
mov
xor
fwait
jge
int3
jb
jae
and
call
mov
les
xor
rcrb
imul
push
adc
cmp
ljmp
aad
fndisi(8087
testb
scas
push
push
into
push
loope
pop
stos
and
fbld
fadds
scas
inc
dec
leave
lods
imul
sbb
pop
push
push
lcall
jb
sbb
lock
mov
push
sbb
out
fnstsw
inc
push
mov
js
test
sbb
xchg
lock
and
icebp
test
mov
out
scas
adc
rorl
stos
scas
fsubl
cli
mov
int
dec
adc
mov
aad
cli
das
enter
lea
loopne
and
or
adc
jp
lcall
xchg
push
negl
adc
add
mov
dec
in
roll
cmp
mov
sbb
inc
scas
sbb
xlat
scas
xor
imul
jl
in
adc
ds
imul
out
gs
jne
imul
ret
push
stc
rcll
cmpl
xor
inc
pop
stos
jae
or
sbb
ss
jae
int
fnstsw
mov
jbe
sbb
jge
arpl
and
outsb
or
adc
pop
push
mov
and
and
loopne
dec
sbb
pop
dec
or
mov
pop
or
ret
movsl
cs
movb
pop
mov
testl
mov
sbb
xor
insb
or
repnz
mov
mov
aam
aam
jmp
cli
mov
int3
and
add
rcrl
iret
adc
inc
inc
sub
subl
fbld
pop
jno
out
dec
lods
mov
scas
scas
into
add
push
jmp
push
adc
mov
test
jo
dec
std
jae
pushf
and
push
push
cmp
xchg
cmp
pop
lret
jae
jb
shr
or
fisttps
cmpsl
xor
das
jmp
pop
adc
stc
mov
das
clc
test
pusha
out
mov
mov
arpl
cmp
lcall
out
das
das
xchg
mov
xchg
add
push
loopne
fiaddl
in
push
push
mov
xchg
mov
push
sub
bound
int3
jno
lods
test
sbb
sti
sub
cmpsb
jbe
dec
dec
stos
mov
out
cmp
sahf
push
inc
out
jecxz
stos
lds
outsl
inc
inc
fcomip
fsts
cld
ror
cld
cli
push
dec
out
pop
mov
insl
inc
pop
out
pusha
fs
into
gs
adc
fldt
or
fimull
sbb
mov
cmp
mov
notl
pop
mov
insb
mov
das
push
cmp
push
jne
xor
dec
sub
test
movsb
and
mov
dec
mov
mov
lret
in
pop
adc
arpl
rclb
inc
or
pop
sahf
lods
mov
test
out
xor
ret
cltd
mov
jae
aaa
push
mov
faddl
dec
mov
lock
cli
pop
push
xchg
lods
out
outsl
fldenv
cmp
aaa
rcll
adc
fsubrl
jb
add
xor
xchg
inc
inc
pop
pusha
sub
inc
mov
das
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
cmp
shrl
inc
pop
mov
psrlw
add
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
lods
dec
and
outsl
xchg
test
in
dec
outsb
mov
and
jecxz
das
mov
inc
sub
adc
fisubs
mov
xor
xor
push
inc
in
dec
sahf
stc
mov
and
and
stos
push
dec
and
mov
dec
popf
fucomi
push
movb
jb
jbe
mov
pop
adc
ljmp
xchg
mov
int3
pop
xor
inc
mov
or
loop
shlb
fcomi
push
movb
jae
push
jae
add
pop
fcmovbe
ljmp
cmp
mov
push
mov
adc
popf
fldt
inc
loopne
jle
mov
popf
stos
test
ljmp
mov
shrl
inc
jmp
and
mov
aad
stos
call
jo
fwait
or
push
dec
and
jo
mov
psrlw
inc
loopne
mov
push
dec
and
jo
mov
push
dec
and
jne
mov
inc
dec
and
jo
mov
push
dec
and
pusha
mov
push
dec
and
dec
and
stos
movsb
inc
and
test
psrlw
inc
loopne
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
movsb
les
fisubrs
jmp
cs
dec
es
loopne
imul
pop
sahf
stos
stos
push
dec
and
jo
push
jge
fmul
push
dec
and
jo
mov
shrl
cltd
in
mov
push
dec
and
push
mov
shrl
inc
loopne
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
and
jo
mov
push
dec
dec
jmp
mov
shrl
daa
pop
pop
mov
loopne
out
mov
sub
dec
and
mov
jo
pop
mov
stos
jae
stos
adc
sbb
lds
lret
push
cli
lods
mov
fildl
je
sub
repnz
sbb
arpl
popa
sub
lea
mov
cmp
dec
imul
push
push
lret
lret
es
test
jnp
imul
push
mov
or
roll
jb
arpl
cwtl
dec
lea
jns
sub
mov
popf
mov
inc
and
insl
push
lcall
shlb
xchg
sbb
cmp
pop
push
mov
gs
rolb
and
aad
or
jl
dec
and
lahf
push
ja
out
mov
int
adc
pop
popa
mov
ss
cmp
cmp
mov
xlat
ljmp
inc
les
xor
xchg
insb
in
out
rcll
ljmp
push
fcomps
rol
icebp
cmpl
dec
xor
cmp
outsl
cmp
fistpll
dec
scas
shlb
push
cvttps2pi
pusha
jno
out
gs
dec
mov
pop
push
sub
add
xchg
cmp
outsl
imul
cmp
push
ficoml
cld
in
mov
leave
jmp
mov
and
gs
scas
adc
jbe
out
stc
mov
in
movsl
add
mov
and
sbb
pop
in
push
and
mov
repnz
cmp
jmp
lods
ss
mull
outsb
into
out
movsb
test
mov
push
imul
je
add
cmp
sub
mov
pushf
mov
loopne
push
lods
jb
adc
xlat
cmp
inc
pop
jg
daa
mov
add
pop
cmp
add
fcomp
xor
or
mov
adc
jae
sbb
push
dec
imul
pop
or
sahf
daa
push
ret
add
sub
xchg
push
sub
or
cbtw
push
cmc
mov
xor
lods
movsl
das
loope
addr16
test
sar
jbe
adc
xor
pushf
dec
sub
cmc
movsl
jbe
cli
lods
int3
test
cmp
xchg
cmp
inc
cwtl
push
inc
or
in
add
cmp
aad
lcall
ficoml
push
out
sbb
adc
mov
frstor
dec
ret
mov
dec
cwtl
adc
add
adc
sti
add
popf
leave
push
daa
movl
jbe
out
sarl
in
addr16
adc
or
shlb
jecxz
out
mov
mov
jecxz
bound
sqrtps
stc
ja
cwtl
xchg
fmuls
mov
lock
jae
jmp
dec
push
pushf
movsl
sbb
test
data16
scas
and
loope
jns
push
add
add
jbe
leave
int
popf
cmp
lahf
adc
jmp
xor
or
cld
or
xchg
int3
decb
sbb
cmc
inc
sub
subb
pop
inc
loop
xchg
adc
movl
jmp
outsl
mov
dec
or
lods
test
pop
xor
lock
sbb
add
sbb
out
adc
and
test
inc
dec
inc
popa
cmpsb
aam
inc
cmp
scas
cli
nop
xor
jl
sbb
and
sarb
pop
fimuls
imul
ret
push
aad
jo
jb
clc
les
lahf
or
push
xlat
xor
xor
nop
ret
test
xor
cmp
mov
push
roll
scas
pop
adc
mov
push
add
mov
add
std
dec
mov
ss
sarl
sub
cmp
add
adc
mov
jno
test
jno
mov
pop
push
mov
fldl
sub
pop
fdivrl
mov
jns
lock
dec
push
lcall
and
sbb
pop
fisttpll
jbe
js
add
xchg
mov
mov
lret
pop
jle
into
enter
sbb
jmp
imul
pop
adc
fiaddl
xchg
jg
out
ss
jb
mov
daa
hlt
out
xchg
std
mov
into
pop
dec
mov
pop
cmpsb
fdivrs
push
mov
fiaddl
mov
dec
mov
shll
inc
adc
cmpsb
daa
std
dec
cli
mov
inc
jmp
int3
xchg
inc
cmp
mov
repnz
pop
fimuls
sub
scas
dec
push
inc
daa
cli
lds
pop
push
push
imul
sbb
pusha
lods
mov
inc
xor
jecxz
mov
pop
int
xchg
das
and
or
faddl
xchg
pop
jmp
cmp
sbb
dec
rolb
mov
ret
mov
icebp
loope
imull
mov
pop
jmp
ficompl
jge
mov
jo
mov
sarl
add
adc
jae
push
mov
adc
rol
lcall
popf
jmp
ljmp
mov
sub
idivb
cld
cmp
mov
imulb
pop
dec
insb
mov
xlat
push
mov
push
into
cmp
out
push
cltd
mov
push
cld
adc
push
or
loop
and
dec
test
xor
xlat
daa
lcall
aam
mov
adc
arpl
and
mov
ja
mov
inc
jle
rcrl
mov
add
divb
mov
xor
cmp
out
aam
mov
insl
sbb
inc
movsb
data16
dec
pop
arpl
cmpsl
adc
mov
adc
mov
dec
cmp
stc
adc
mov
loope
roll
test
repz
xlat
arpl
push
pop
inc
jle
mov
dec
mov
fwait
ja
ja
mov
jp
insl
lods
out
fs
scas
sbb
imul
inc
lods
scas
cmpsb
add
mov
jecxz
pop
ja
adc
fcmovne
xchg
rorl
inc
xor
rcll
inc
or
add
cmp
dec
scas
cmpsl
imul
mov
sub
adc
or
mov
pusha
cmp
es
mov
popf
lds
cmc
movsl
pop
sbb
jecxz
cld
and
fwait
push
mov
cmp
int
adc
cwtl
and
aad
inc
or
rorl
xor
push
dec
shll
mov
mov
xchg
fmull
nop
shll
cmp
repnz
xor
sti
cltd
movsl
sub
jo
add
out
or
cmpsl
lods
sbb
jmp
xchg
or
jns
jne
inc
jns
and
xchg
xchg
or
lds
jne
xor
mov
push
jge
push
mov
inc
imul
inc
add
stc
jmp
push
push
pop
rorl
test
jge
in
jbe
arpl
adc
subb
jg
mov
scas
cmc
leave
rorl
jge
mov
in
dec
aaa
fbld
mov
sub
pusha
mov
movsl
mov
out
pop
mov
loopne
mov
mov
mov
outsb
or
stos
mov
push
push
mov
mov
jp
fidivrs
mov
or
and
inc
adc
lock
xchg
fsubrl
jns
add
mov
xchg
in
sub
clc
pushf
dec
sbb
cmpsl
push
fwait
push
lock
or
push
pop
jp
les
jge
clc
clc
mov
mov
gs
movsb
sbbl
es
dec
jp
test
js
adc
xor
jbe
fnsave
xor
xlat
jb
pop
addr16
mov
add
push
mov
jmp
pop
inc
fsubl
decb
dec
add
mov
popf
dec
pop
mov
insl
lahf
xchg
sub
mov
out
jle
jnp
xor
push
loop
sbb
ds
cmp
rdtsc
movsl
in
ja
xor
and
dec
imul
mov
js
push
dec
mov
add
lea
dec
loop
and
test
std
jmp
je
int3
lea
xchg
ror
jl
pop
jae
mov
and
mov
xor
cmpsl
or
aas
push
add
mov
mull
rcl
xchg
rcrl
push
ret
add
and
jno
daa
out
dec
cmp
mov
push
and
inc
in
add
mov
sahf
std
imul
add
out
push
int3
dec
sub
cs
arpl
je
cltd
sub
addr16
call
mov
popa
jns
push
push
sbb
cmp
push
mov
bound
mov
dec
xor
scas
shlb
jo
lcall
es
addr16
xor
lods
int3
mov
mov
xchg
mov
in
das
inc
iret
popa
jne
out
add
fdivl
jnp
add
lock
repnz
xor
jp
ficompl
fldt
mov
xchg
add
out
jae
ja
cmp
lret
mov
dec
mov
dec
add
mov
dec
jbe
mov
jl
adc
pop
jns
out
in
jne
imul
aaa
loope
insl
jne
mov
scas
sub
push
fs
aad
mov
dec
fs
mov
adc
js
stos
mov
test
shr
pop
add
push
loope
adc
ret
cmpsb
mov
xchg
out
test
inc
jo
lea
ss
rcll
or
insb
adc
jl
in
sbb
in
scas
push
pop
or
icebp
ja
lcall
jp
mov
xchg
push
push
mov
and
aaa
mov
sub
arpl
lods
leave
jae
push
xor
add
mov
push
mov
popf
sbb
cmpsb
pop
test
adcb
lods
cmp
mov
xchg
je
cmp
dec
mov
into
xor
clc
fmuls
cmp
roll
mov
stos
pop
adc
cmp
adc
or
negb
push
int3
pop
movsl
or
dec
scas
xchg
inc
mov
pop
jmp
xchg
inc
shlb
lret
call
cli
sbb
mov
push
mov
push
pop
or
and
mov
mov
gs
fsts
decb
adc
inc
fcmovb
inc
rcl
push
xchg
jnp
add
cs
das
in
mov
rol
sub
xchg
cmc
cmpsb
push
xchg
lods
mov
sahf
inc
inc
test
jge
fcmove
lods
push
push
lods
enter
icebp
mov
aaa
xor
sub
negl
add
call
shll
adc
pop
adc
push
dec
mov
cmpsl
in
pop
lcall
sbb
fmulp
movsb
dec
push
mov
sahf
add
push
inc
je
xchg
sbb
sahf
cwtl
mov
lods
pop
jb
dec
add
scas
add
pop
mov
mov
xor
cmp
mov
cmpl
lret
out
push
xlat
sub
faddl
xchg
mull
fidivs
mov
mov
and
popf
je
xor
xor
lods
xchg
xchg
popf
pushl
adc
daa
mov
in
lods
loope
leave
loop,pt
jl
ja
xchg
ss
enter
cmp
sbb
xchg
stos
les
add
pop
lock
jns
or
xor
push
popf
mov
mov
add
sub
test
iret
sub
pop
aas
cli
mov
incb
imul
xor
popf
xchg
push
and
sub
insb
lret
inc
fsubl
test
xor
icebp
call
push
divb
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
