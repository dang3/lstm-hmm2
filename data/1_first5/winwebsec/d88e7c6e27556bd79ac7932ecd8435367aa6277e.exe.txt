movsl
push
or
in
sbb
gs
and
shll
push
imul
jae
push
sub
in
jnp
test
xor
fwait
aaa
test
and
aad
test
push
fwait
cmp
and
lods
loope
push
loop
push
jl
ror
sub
lahf
mov
cmp
fistl
cmpsb
xchg
mov
pop
push
pop
dec
jno
sub
fcomp
xor
test
xchg
pop
leave
push
and
jns
mov
jmp
dec
xor
and
or
xchg
insl
repz
sbbl
roll
inc
cmp
insl
fisubs
int3
lock
test
aas
dec
fs
jmp
lcall
cmp
inc
xchg
pushfw
imul
pop
pop
out
gs
lret
outsb
bound
iret
xor
jne
sbb
rclb
mov
js
sub
and
mov
stos
pusha
lcall
xchg
or
push
hlt
push
lcall
lret
pop
xchg
dec
xchg
and
testl
and
call
into
adc
mov
xor
and
push
insb
and
jnp
mov
cmp
mov
xadd
mov
aas
or
cltd
cld
jnp
adc
stos
test
insl
leave
stc
test
dec
repnz
pushf
mov
and
aaa
pusha
sbb
inc
xchg
std
sub
cmp
xor
xchg
cmp
lods
dec
adc
ja
mov
adc
pushf
mov
mov
loop
xchg
pop
adc
jmp
les
mov
idivl
bswap
std
insb
lock
sbb
test
pusha
clc
dec
push
and
mov
ret
aam
push
xor
adc
jg
push
js
out
mov
pop
add
lds
pop
xor
mov
mov
mov
mov
jge
mov
stc
bound
pop
ret
mov
add
rcrb
or
out
push
mov
or
int3
imul
sti
ret
dec
jmp
mov
jb
sub
xchg
stc
jle
lea
je
fwait
mov
hlt
add
sbb
lret
out
subb
aaa
mov
fmull
into
jae
es
or
fs
lahf
jmp
add
jnp
mov
addr16
mov
push
inc
shrl
xchg
imul
movsb
and
sub
jecxz
or
xchg
and
ljmp
adc
mov
stc
cmp
lods
mov
jg
dec
mov
mov
dec
repnz
imul
lret
cwtl
lahf
sbb
lea
dec
add
mov
icebp
ljmp
jns
cmpsl
push
jge
cmpsl
jecxz
mov
adc
sub
fadds
sub
fmuls
mov
cmp
mov
dec
pop
dec
mov
lea
jae
mov
pop
sbb
sbb
pop
adc
mov
or
cli
inc
pop
push
mov
xchg
xchg
xchg
jmp
lods
dec
in
push
enter
and
add
int
rep
jge
insl
lock
fisttpl
rclb
leave
enter
shl
ret
jbe
sbb
cltd
fwait
inc
push
sbb
movsl
inc
aad
insl
cmp
je
pop
enter
sysexit
add
fs
pop
fistl
inc
or
adc
fwait
imul
in
jns
sub
lahf
int3
jb
cwtl
arpl
inc
test
adc
xor
inc
int
repnz
mov
loope
fimull
mov
fs
adc
nop
in
std
dec
aad
mov
mov
push
mov
fstpt
mov
cs
aaa
sbb
jns
scas
sbb
test
daa
mov
pop
jne
cmpsl
enter
pop
xor
jnp
push
jmp
adc
das
aad
mov
lods
xor
nop
pushl
jns
jne
daa
mov
ret
adc
inc
mov
pop
je
fbstp
lea
xor
es
xchg
ja
sub
lret
sub
fs
sti
cs
push
or
scas
inc
call
and
rorb
xchg
jo
icebp
scas
or
xor
pop
adcl
adc
imul
pop
scas
sub
mov
push
and
fistps
nop
or
dec
ret
mov
sub
sub
enter
cmp
sub
cmp
mov
mov
pop
lcall
push
mov
lods
mov
add
xchg
xlat
sahf
adcb
ret
ds
adc
or
mov
ret
adc
stc
fldt
fisttpll
cld
notl
sarb
loop
push
pop
cmp
adc
imul
cmp
push
push
and
lret
ljmp
lock
and
xchg
lods
mov
mov
ja
mov
mov
inc
jnp
lods
int
mov
out
addr16
or
cmp
inc
adc
loopne
mov
dec
dec
push
mov
sbb
inc
xor
jg
jo
mov
ljmp
fdivl
or
addl
xor
jne
test
mov
or
xlat
mov
div
push
inc
mov
push
sarl
mov
test
jmp
aaa
ds
repnz
adc
clc
inc
mov
xor
mov
cmpl
icebp
gs
cmp
fwait
or
xor
pop
sbb
in
test
fidivs
js
pop
scas
mov
ror
mov
mov
in
mov
jae
pop
mov
movsb
cmp
adc
sbb
inc
fabs
sbb
mov
cmp
test
xor
loopne
fcom
add
xchg
stos
mov
fiaddl
stos
stc
pushf
out
fisttpl
int3
xchg
stos
jns
mov
bound
imul
sub
cmpl
xchg
lret
dec
push
sbb
add
mov
pop
mov
jo
mov
adc
mov
xor
call
sbb
rclb
sahf
xchg
flds
clc
dec
adc
fisubrs
les
scas
daa
inc
loopne
push
xchg
inc
into
jmp
jle
mov
jl
cmp
test
lods
bound
fldt
add
push
xchg
popl
add
and
or
mov
inc
mov
adc
push
and
cmc
adc
outsb
jae
lock
and
test
xchg
cmp
in
shll
cmp
push
cmp
test
pop
adc
dec
xchg
jg
push
dec
leave
cmp
sti
imul
dec
ds
push
test
cmpsl
ficompl
icebp
shlb
stos
cmp
sbb
sbb
sbb
inc
jmp
in
or
incl
add
cmp
inc
cld
in
into
outsb
inc
xor
fiadds
movsl
scas
xor
push
adc
lds
mov
mov
inc
jb
xlat
imul
sub
pop
inc
inc
nop
mov
imul
lods
int
xor
mov
out
xchg
pop
in
push
or
pop
and
subb
push
dec
mov
rolb
fnstcw
inc
std
dec
cmp
fistpl
test
fcompl
shr
inc
cmpsl
and
sbb
stc
sar
mov
imul
es
es
inc
popf
decl
imul
imul
ljmp
sahf
dec
sbb
cmp
andb
aam
pop
ss
xor
add
mov
aaa
ret
jb
data16
push
sahf
stos
test
mov
sub
mov
lods
adc
sahf
and
ja
sub
sar
jge
adc
add
je
or
in
cmp
jle
inc
mov
inc
test
inc
lea
xlat
xchg
jno
inc
sti
pop
ljmp
dec
dec
mov
lock
jno
mov
daa
cmp
jmp
loop
popa
dec
adc
jae
cmp
mov
sarb
sub
out
loop
fildl
mov
test
push
orb
push
mov
fsts
imulb
inc
xlat
cmp
cld
xchg
gs
lahf
cltd
push
xchg
shlb
mov
rclb
sahf
push
pop
lret
inc
sti
adc
sbb
cs
or
test
mov
sub
movsl
or
ljmp
pop
fcomi
add
cs
push
sbb
sbbb
mov
insl
inc
rorb
jl
lcall
dec
imul
mov
mov
inc
int
mov
inc
mov
xchg
mov
lods
pop
es
lock
shrb
xor
push
push
or
shlb
sbb
scas
inc
cs
mov
repz
faddp
sahf
fcomps
fnstenv
insl
mov
adc
fwait
rcrb
jnp
and
inc
fs
ficoms
aad
out
test
mov
cli
sahf
mov
in
add
testb
inc
jmp
cmp
daa
jmp
inc
sub
pusha
dec
insl
sub
mov
shll
movsl
outsl
adc
cwtl
sub
pop
cld
inc
in
push
cmovle
mov
lock
xchg
mov
adc
adc
mov
out
ret
in
mov
pushf
movsl
push
stc
push
mov
cmp
sub
inc
sbb
aas
fidivrs
adc
pop
dec
setae
sub
dec
je
and
add
or
aam
pop
and
out
sub
pop
cmp
adc
xchg
fcomi
sti
xor
in
mov
divl
imul
fldt
scas
xchg
scas
dec
adc
xor
out
or
or
push
mov
cmc
inc
pop
js
shl
xor
sbb
out
pushw
mov
aad
xor
cwtl
jecxz
scas
and
xchg
or
fldcw
pop
mov
in
pop
lahf
mov
or
xchg
adc
and
add
dec
popaw
adc
add
or
mov
cmc
inc
xchg
inc
out
mov
sub
push
mov
adc
cmp
push
outsb
xchg
cmp
push
lcall
nop
incb
sbb
jno
jne
sbb
movl
scas
test
cmp
mov
or
or
loopne
push
adc
xchg
adc
and
or
mov
mov
cmp
daa
jo
ja
fimuls
out
mov
cmp
mov
inc
jg
dec
pop
lahf
mov
lret
cmp
jne
inc
fnstsw
jl
xor
push
inc
enter
dec
fsubrp
mov
jbe
sbb
adc
fisubl
sbb
push
mov
out
sti
je
int3
mov
lock
orb
push
insl
push
cmp
js
aaa
or
sub
clc
xchg
lods
xchg
call
pop
test
sbb
sub
neg
loopne
xchg
mov
pop
daa
daa
lret
aad
popa
std
loope
fcmovnb
jg
xor
outsl
std
adc
iret
mov
mov
clc
clc
sbb
pop
push
pop
js
aaa
ret
sahf
add
xchg
push
sahf
dec
push
roll
les
mov
adc
repz
cmp
mov
bnd
cld
pop
add
int
aad
or
bound
jns
sbb
mov
sbb
push
nop
test
test
stos
in
rcrl
pop
push
popa
mov
or
jo
enter
jne
sub
or
dec
push
lret
shr
ds
sarl
lds
pop
int
adc
rcrb
push
jns
jbe
jno
call
in
movsl
sbb
dec
dec
adc
xor
adc
sub
xor
pop
and
mov
push
scas
cmp
mov
shll
mov
cmp
mov
movsb
pop
mov
adc
iret
imul
insl
and
cmp
sar
or
leave
and
dec
jnp
imul
daa
push
int
stc
push
mov
sbb
jle
pop
adc
fs
push
in
cmp
fisttps
jae
ror
outsb
jecxz
mov
mov
xor
sub
data16
gs
pushf
test
sbb
bound
sbb
lcall
lret
pushf
fdivrs
or
add
adc
jge
lcall
fsubrs
aaa
cmpsl
dec
xor
lock
cmp
inc
int3
sub
fstpt
mov
lods
addr16
adc
push
hlt
not
paddw
repz
fwait
xchg
test
sbb
xor
and
add
or
lods
inc
rcrb
movsl
cltd
daa
fwait
lret
mov
clc
push
dec
mov
or
call
cmp
push
test
fistpll
jge
jecxz
add
ret
inc
dec
push
xlat
subl
dec
mov
add
push
imull
mov
int3
jle
popf
int
or
push
or
fndisi(8087
sbb
sbb
dec
cld
gs
push
shr
out
in
call
jae
push
dec
jae
lcall
dec
mov
cmp
icebp
cmp
out
loopne
or
insl
sbb
fcompl
nop
dec
inc
pop
popa
push
jl
lds
dec
mov
sbb
shll
movsb
mov
fsts
adc
inc
hlt
xlat
paddusw
leave
mov
dec
into
iret
nop
inc
clc
mov
lods
lret
push
inc
mov
or
jne
jmp
inc
mov
or
fcomp
dec
fstl
or
inc
dec
jae
pop
out
lods
adc
sbb
std
out
push
insb
icebp
jmp
repz
xchg
test
mov
andb
iret
iret
pushf
xor
inc
cld
pushf
xorl
mov
aad
push
cltd
mov
ds
inc
mov
mov
out
xor
cmpsl
scas
or
insb
xor
or
mov
cltd
pop
sub
mov
insl
test
cli
push
jae
pop
pushl
add
add
push
aaa
xor
fsts
dec
jo
test
lock
lods
negl
pop
sbb
mov
jb
xor
lods
fmuls
xor
sub
ja
repz
push
push
shll
out
movsb
inc
adc
sub
shr
jbe
aam
mov
pop
mov
gs
fadds
mov
pinsrw
or
push
popa
mov
fidivs
stc
sub
inc
mov
lods
enter
adc
sub
std
adc
ficoms
pop
sbb
pushl
cmp
adc
or
adc
add
pop
outsl
inc
lods
jg
rclb
outsb
mov
jp
jno
in
fisttpl
and
push
pop
sbb
dec
sbb
sbb
lahf
rcr
jo
insl
cli
iret
sub
sub
lock
fdivl
arpl
enter
mov
mov
loope
pop
ficoms
mov
test
inc
cltd
or
ret
jp
dec
xchg
inc
mov
repnz
into
push
cwtl
cld
xor
mov
dec
push
lock
adc
sbb
shll
push
hlt
sti
mov
cltd
sub
in
inc
daa
cmp
inc
inc
repz
icebp
scas
fisubrs
inc
cmp
push
pop
push
popa
and
lret
push
test
cwtl
mov
es
rclb
xchg
pop
fs
inc
push
xor
insl
inc
add
lret
adc
sub
push
push
adc
out
pop
mov
add
stc
cmp
cmp
cld
fcmovne
insl
repz
pop
ret
mov
punpcklwd
push
les
imul
push
das
sbb
lret
xchg
cmpsb
xor
fstpt
into
xchg
cmpsl
or
pusha
and
add
dec
nop
mov
fistl
and
mov
jns
inc
mov
loop
or
aad
xchg
addr16
mov
mov
push
fadd
mov
xchg
rcrl
jns
mov
test
rorb
and
cmc
cmp
and
mov
xchg
xchg
pop
movl
push
jns
sbb
sub
push
pop
or
dec
jl
cmp
dec
cmp
push
dec
jle
push
and
add
pop
mov
outsl
je
cld
lcall
hlt
arpl
lret
mov
stos
or
call
push
mov
jmp
shl
adc
cli
sub
sarb
push
mov
les
dec
mov
pop
aad
add
xchg
dec
faddl
or
lods
out
stos
das
mov
and
inc
pop
divb
push
push
mov
mov
inc
icebp
enter
stos
imul
jge
mov
rclb
dec
mov
xchg
pop
and
push
and
jb
push
xlat
sub
and
mov
and
dec
cld
xor
jb
das
sarb
sub
outsb
adc
xor
negb
inc
aas
sub
outsb
scas
mov
dec
mov
rorb
enter
lock
lahf
mov
ret
sbb
jle
xchg
out
dec
ret
cmovns
inc
movsb
push
and
repz
xor
fsubrs
insb
cmp
push
push
sub
sahf
aas
dec
cmp
cmpsl
and
pop
idiv
xchg
inc
loop
pop
push
sub
inc
clc
mov
adc
test
mov
pop
mov
lock
push
push
dec
pop
jns
sub
and
cltd
sbbl
sub
jmp
rcll
jecxz
loopne
mov
aaa
test
stos
xor
frstor
ffreep
sub
xchg
cmp
pop
pop
push
stc
adc
sbb
jae
es
xchg
pop
jae
push
cld
cmp
insl
sbb
jecxz
mov
lcall
push
mov
xchg
push
je
ja
inc
scas
inc
filds
lods
fstpt
jecxz
pop
pop
cs
gs
sbb
cltd
pop
repz
addr16
jne
push
rolb
push
roll
shlb
fsubrl
cmpsl
add
dec
stc
ss
jae
aam
sub
jecxz
and
outsb
mov
nop
cmp
and
xchg
stos
fisttps
add
mov
sbb
loop
pop
xor
imul
and
sti
inc
test
rolb
inc
cmp
xor
mov
loop,pn
cmc
mov
inc
add
jp
test
push
sahf
nop
repz
or
add
cmpsb
jno
dec
mov
or
hlt
cmp
pop
add
mov
inc
pop
pusha
pop
sub
jne
sbb
add
data16
push
cmp
xchg
sahf
push
xor
test
mov
mov
lcall
data16
sub
xchg
outsl
jae
sahf
push
xor
inc
cwtl
lcall
push
jl
fs
lcall
and
leave
fnstsw
mov
adc
loop
fdivrp
cs
jge
xor
cmp
xor
sub
clc
mov
stos
movsb
jbe
jb
hlt
out
sbb
mov
and
loope
push
inc
iret
lret
nop
inc
pushf
mov
jp
inc
repz
bound
jb
mov
lret
fisubrl
or
outsl
clc
xor
cli
aad
mov
sahf
adc
mov
push
sahf
and
rcrb
xchg
out
or
add
clc
mov
xchg
xchg
pop
xlat
mov
mov
sub
pop
or
add
incl
mov
popa
or
fst
push
test
dec
sub
mov
add
xor
add
into
outsl
inc
stc
rorl
in
jp
test
mov
xor
and
js
ret
mov
popl
mov
mov
add
aas
jno
or
bound
subl
loop
testl
scas
adc
or
out
jp
mov
pop
push
fnsave
scas
xor
lods
aam
dec
add
jae
aaa
sub
mov
mov
daa
cmp
sub
inc
mov
mov
adc
mov
out
cmpsl
pause
leave
mov
adc
roll
loop
xor
and
cmp
add
push
and
addr16
cmp
xchg
add
das
push
push
rclb
and
fdivl
push
fldenv
inc
adc
fld
or
xchg
pop
cmp
mov
push
cmp
stos
sti
xchg
add
inc
fstps
ds
xchg
aad
movsb
jb
addb
and
push
stc
xchg
and
adc
mov
test
cmp
xor
sub
lods
mov
int
mov
pop
fdivs
cmpsb
lds
movl
push
inc
cmp
sbb
pushf
lea
insl
xor
aas
orl
mov
lds
out
push
enter
pusha
sub
push
inc
outsb
call
mov
jns
pushf
movsl
out
inc
test
movsl
pop
inc
cmovb
cwtl
push
inc
ss
add
push
mov
mov
sbb
mov
ret
aam
daa
xchg
sbb
pop
mov
std
add
jnp
gs
xchg
test
bound
out
ret
arpl
cli
ljmp
rcrl
jg
arpl
loop
ds
jno
orl
push
jle
movb
pop
jb
clc
test
fdivl
faddl
aam
mov
pop
cltd
bound
in
ljmp
je
subl
repz
push
inc
imul
inc
fisubrs
push
cmp
test
push
enter
dec
out
sub
jae
dec
xor
in
mov
add
jg
daa
lods
mov
xor
xor
stos
je
pop
fldt
mov
xor
fldcw
mov
cmp
mov
jp
pop
nop
dec
jnp
ret
add
loope
out
inc
and
stos
into
mov
xlat
jecxz
or
int
aaa
mov
cwtl
cmp
rol
mov
mov
and
mov
jbe
adc
jbe
mov
pop
and
std
cmp
je
jmp
cmovno
cli
fidivs
int3
xchg
mov
outsl
lds
sbb
and
out
pusha
cs
subl
add
xor
aam
xchg
sbb
xor
sub
sub
fxtract
ds
movsb
push
lods
sub
lds
or
out
push
push
popf
movsb
or
shl
mov
jbe
add
sbb
shll
sub
hlt
shl
xchg
jae
pusha
cmp
mov
jp
xchg
mov
jo
enter
lods
and
arpl
fildl
dec
bound
push
xchg
or
das
inc
jo
or
push
xchg
cli
pop
cmp
clc
or
xchg
iret
jo
jbe
dec
pop
mulb
je
test
inc
cmp
aam
mov
or
aam
add
aam
pop
sahf
pop
push
mov
mov
mov
dec
push
test
adc
dec
test
sahf
mov
and
adc
shl
sar
mov
xlat
jno
add
les
ja
mov
or
push
jne
push
fbld
jno
mov
sbb
fiadds
lds
and
jae
or
jecxz
mov
int
enter
imul
stos
out
lcall
push
and
jmp
mov
xchg
fwait
lcall
jmp
jmp
mov
cmp
sti
add
xor
rorl
nop
and
inc
negl
fiadds
dec
xor
push
mov
cmp
add
xchg
gs
or
cmpl
pop
enter
inc
mov
flds
cs
ds
pop
into
outsb
pop
adc
out
jo
aaa
mov
inc
daa
push
mov
xor
mov
mov
mov
add
into
dec
jg
cmc
loope
jg
out
mov
ds
gs
cmpsb
insl
jne
xor
sti
cmc
adc
mov
inc
cmp
push
cld
aam
push
fcoms
pop
les
sbb
in
movsb
push
fmul
pop
mov
pop
add
adc
ja
dec
stos
out
fwait
xchg
push
or
xchg
cli
jmp
jo
jb
addb
dec
jge
push
xchg
sbb
xor
dec
lahf
add
xchg
data16
pop
iret
cld
in
cmc
xorb
dec
sub
idivl
outsl
inc
movsl
push
dec
popf
stos
mov
sub
scas
add
aam
jne
sahf
cmp
popa
xor
or
xlat
xchg
jge
rcll
sub
mov
jno
div
dec
inc
mov
pop
add
xchg
outsb
lock
gs
add
out
imul
lcall
fcompl
inc
imul
in
test
jp
fwait
ljmp
fmul
xchg
int3
repz
cmc
dec
mov
movsb
cmc
and
push
jb
pop
inc
push
ljmp
imul
fisubl
mov
dec
sbb
jno
push
addr16
jne
pop
mov
xchg
orb
hlt
insl
lcall
fildl
jmp
mov
mov
mov
dec
outsl
sarl
stos
pop
xchg
add
push
dec
or
testl
fadds
orl
leave
cmpsl
iret
imul
mov
cmp
fwait
ret
ds
jo
jns
inc
push
pop
movsl
inc
movsl
lock
fiadds
dec
mov
repnz
sub
lcall
std
or
pop
and
xor
pop
cli
idiv
call
bound
jns
add
sar
and
pop
ret
in
shl
or
les
out
pusha
pop
and
push
dec
sbb
adc
rol
stos
mov
js
jl
inc
xor
adc
movsl
mov
push
lret
orb
sub
adc
mov
es
adcl
inc
in
adc
or
outsl
xlat
cmp
lahf
gs
xchg
mov
inc
leave
ficompl
inc
int3
iret
outsb
test
and
test
inc
add
mov
jbe
jo
pop
inc
lahf
pop
shlb
push
dec
mov
rcr
xor
jecxz
lahf
cli
push
xchg
push
add
lock
leave
xchg
and
pop
push
cmp
mov
mov
adcl
iret
push
pop
jge
mov
daa
or
ret
mov
int3
and
fs
cmp
std
jo
sbb
loope
aaa
mov
inc
add
das
mov
pop
lahf
cmp
jecxz
mov
loopne
adc
call
enter
loope
xor
mov
leave
xchg
inc
push
add
sahf
pop
loop
sti
xchg
mov
or
cmp
mov
xchg
lret
cmp
sbb
push
aad
dec
sbb
pop
mov
ret
loope
pop
or
jmp
insl
in
mov
movsl
cmp
scas
int3
cmp
jge
adc
shll
scas
imul
adc
jmp
insb
add
xor
cmpsb
stos
test
out
sub
sbb
rorb
mov
sub
in
cmp
movsl
roll
mov
xchg
mov
mov
insl
fwait
les
pop
rol
jbe
es
adc
shll
out
push
imul
cs
loope
sbb
add
das
scas
jbe
sbb
jge
ljmp
dec
mov
loope
hlt
mov
shrl
sbb
inc
in
add
into
push
leave
addr16
fdiv
aaa
mov
mov
sbb
rorl
fndisi(8087
pop
mov
les
cs
and
jbe,pn
addb
cmpsl
xlat
xor
test
outsb
pop
jmp
mov
mov
repz
incl
adc
mov
bound
cs
pop
adcb
cwtl
mov
cmpsl
lahf
pusha
in
mov
cs
mov
scas
and
add
dec
push
jbe
sub
mov
clc
pop
push
inc
jmp
push
mov
jl
dec
in
leave
push
mov
test
pop
into
imull
loope
and
or
and
call
test
in
xchg
sub
cmpsl
or
xor
cmp
inc
add
add
std
pop
lret
dec
das
jb
addr16
add
lock
js
pop
mov
insb
and
mov
out
adc
cmpsb
adc
dec
fsub
outsb
add
stos
mov
shll
or
cmp
mov
repnz
enter
sub
add
mov
push
jns
movsl
inc
mov
in
faddl
or
or
int
nop
arpl
adc
scas
int3
loope
cmp
call
add
sbb
xchg
xchg
jb
daa
dec
js
dec
mov
js
mov
ffree
nop
xchg
jne
fidivrl
aam
ret
test
mov
jle
push
cld
leave
jns
xor
lods
leave
aad
push
add
push
fcoml
or
or
rolb
enter
xor
mov
inc
je
int3
inc
pop
push
mov
dec
out
add
mov
dec
rcl
negb
push
xchg
test
cwtl
testb
sbb
sbb
xchg
rorb
dec
mov
add
or
mov
outsb
dec
mov
pop
addr16
jg
fsubl
jo
inc
push
mov
mov
push
pop
jo
dec
mov
mov
faddl
fiadds
and
test
jo
aam
pushf
mov
dec
xlat
xlat
roll
xchg
dec
pop
inc
cmc
jno
ss
jbe
inc
test
es
cmp
and
xchg
add
cli
roll
xor
push
fsqrt
rolb
sub
xchg
dec
jnp
fs
hlt
add
sti
mov
in
aas
cmp
sbb
mov
movsl
sub
lcall
pushf
loop
xor
out
inc
mov
cmpsl
and
bound
adcb
in
sbb
add
adc
in
sub
inc
push
cltd
dec
out
jbe
xor
out
sbb
ja
fistpll
cmp
pop
jl
arpl
fwait
dec
adc
pop
pusha
fcompl
jbe
mov
mov
sbb
cmp
cli
xchg
and
push
icebp
pop
pusha
ja
lds
es
jp
test
cmpsl
in
push
mov
mov
adc
ds
scas
in
lods
push
and
add
xchg
mov
jne
adcb
xchg
fstpt
inc
pop
testb
xchg
add
xchg
dec
cmpsb
jmp
and
imul
cmpsb
sbb
inc
add
sarl
mov
loop
inc
xchg
ja
lods
xchg
sbb
pop
rcrl
jp
xor
ss
pop
mov
push
inc
lahf
mov
sub
or
or
sub
pusha
imul
mov
or
in
adc
in
jecxz
pusha
push
mov
jae
pop
int3
outsb
lea
jecxz
data16
test
adc
xor
insl
pop
jae
int
inc
clc
js
push
jp
or
push
adc
loop
cs
push
rcl
xchg
inc
push
scas
loop
mov
lahf
pop
test
push
inc
clc
inc
mov
mov
js
loope
mov
imul
aam
xor
rcrb
sub
ret
out
push
das
lahf
xchg
leave
scas
ja
inc
ficoms
pushf
jle
lret
adc
jge
les
call
xchg
mov
sbb
mov
mov
shr
orl
push
mov
or
mov
sbb
inc
mov
push
mov
mov
mov
adc
pop
lcall
in
repz
hlt
cmp
jp
sub
cmpsl
pop
jae
inc
out
dec
int
sahf
sub
data16
movsl
xor
mov
lods
rcll
xchg
sub
pop
inc
lea
fldt
in
in
pop
cwtl
stos
mov
cld
dec
aas
jns
cmp
mov
jmp
xchg
pop
inc
lret
movsl
sub
test
stos
xchg
mov
popa
inc
daa
daa
inc
arpl
rol
in
adc
sub
aaa
dec
xchg
hlt
inc
jne
pop
out
mov
es
sub
adc
push
fcmovnbe
dec
push
dec
rcrl
xchg
out
push
add
loope
fisubrs
add
pop
popf
sub
andl
inc
call
aad
cmpsl
pop
fmull
xchg
popf
ljmp
int3
dec
push
cmc
fs
and
xchg
cmpb
cmp
mov
movsl
icebp
push
leave
mov
push
push
in
les
mov
roll
push
orb
subl
sub
ja
add
and
dec
inc
hlt
jecxz
jmp
sub
jns
sub
push
andb
or
lods
jle
and
das
sub
add
mov
sbbb
pop
cmc
mov
pushf
add
pop
cmpl
pop
mov
inc
mov
fistpl
push
push
cmp
ds
inc
inc
adc
mov
cmp
mov
arpl
movsl
inc
sbb
enter
push
sub
lock
and
repz
out
jl
int
iret
inc
pusha
f2xm1
lods
popf
rcrl
psllq
int3
xlat
ljmp
aas
and
sbb
arpl
push
xchg
pop
inc
push
es
addl
daa
rcrl
cmp
mov
cmpsb
jne
add
out
xchg
stc
push
ret
fcoms
sahf
mov
repnz
mov
adc
cli
pushf
add
enter
lcall
inc
push
dec
mov
test
or
lret
cltd
inc
cltd
inc
shrb
xchg
popa
jmp
jmp
fistl
aaa
clc
adc
add
inc
xchg
xchg
repz
out
ja
mov
push
mov
movsb
int3
sub
push
ret
call
adc
icebp
inc
rcll
fisttps
xor
adc
cmp
sub
push
push
rcll
idivl
sbb
lret
test
and
sub
fnstsw
push
push
pusha
fimuls
das
push
daa
fcmovne
adc
cld
outsb
adc
inc
imul
mov
push
jae
inc
jg
mov
inc
and
ss
mov
mov
scas
mov
std
sar
jge
dec
in
xor
pushf
popa
cmc
or
adc
popl
stos
in
adc
inc
popf
dec
arpl
and
rcrl
imul
sarb
jg
sub
xor
dec
dec
je
dec
mov
sub
insb
sbb
cmc
mov
mov
or
inc
pop
add
pop
mov
mov
dec
sbb
jbe
dec
pop
je
xor
dec
xor
sub
cwtl
into
pop
fldcw
addl
repz
mov
ret
ja
ret
inc
leave
jmp
add
in
xchg
shll
hlt
stc
sbb
or
add
inc
lahf
dec
bnd
and
imul
jne
adc
divl
in
pop
xchg
jns
daa
aaa
cmpsl
inc
jl
jmp
jmp
and
popa
xchg
jne
inc
add
daa
cmp
adc
sub
imul
sti
add
pop
shll
jmp
push
ljmp
addb
push
xor
outsb
jp
fidivs
sub
cmp
mov
repz
js
int3
iret
jno
cmp
sbb
pop
or
in
clc
shl
mov
out
jo
jo,pt
cmp
cld
inc
and
sbbb
fs
cli
in
mov
mov
dec
scas
mul
cmc
or
sub
jb
mov
fcmovbe
pop
fstl
aad
rcll
mov
shrb
int3
xchg
sbb
rcr
mov
mov
add
repz
adc
adc
mov
jl
cwtl
inc
dec
xor
lret
subl
adc
leave
fbstp
scas
test
mov
stc
add
jecxz
addl
imul
sbb
rolb
sbb
shlb
cld
cmp
adc
xchg
dec
adc
daa
rolb
push
mov
out
hlt
dec
les
ljmp
les
mov
out
rcrb
int
mov
mov
dec
in
sbb
xor
sti
and
mov
cli
jecxz
test
popf
icebp
add
pop
adc
into
xchg
in
scas
push
testl
jo
in
sub
imul
mov
negb
ftst
jmp
pop
call
js
lds
xorl
cmc
insb
adc
dec
push
adc
add
or
pop
add
in
or
mov
nop
pop
sbb
and
cwtl
std
stc
sbb
mov
test
cmc
clc
adc
xlat
arpl
imul
inc
loope
repz
ret
dec
pop
pusha
fnstcw
mov
ja
cld
stc
flds
xchg
jae
sbb
call
jl
sbb
dec
test
test
xchg
adc
mov
lret
add
dec
fisubrl
sub
jp
scas
call
fnstenv
or
pop
rclb
out
mov
ret
fwait
add
cmc
insl
push
or
mov
sub
aas
int
int3
out
inc
pusha
sub
adc
iret
or
outsl
push
adc
cli
lods
movsl
popf
inc
mov
or
jl
shll
stos
test
sub
inc
scas
or
xlat
movsb
sbb
inc
mov
in
mov
jg
scas
sub
movsl
cwtl
lds
cmp
repnz
or
insb
movl
push
push
and
cmp
cli
cli
frstor
ljmp
lods
xor
aas
stos
into
icebp
xor
fsts
push
sbb
mov
push
jp
pop
test
mov
sbb
inc
xchg
fwait
sbb
add
dec
imul
jecxz
cltd
push
popf
inc
cmpsb
push
push
jno
inc
ret
int
xor
imul
std
and
cmp
lret
in
mov
adc
sbb
or
lcall
jmp
mov
sbb
mov
mov
jnp
jl
lods
mov
mov
repnz
stos
or
or
rorb
dec
data16
outsb
aad
sti
inc
stos
xchg
and
sub
lea
out
jnp,pt
jae
lahf
fidivrl
jmp
fnstenv
repnz
xor
js
cwtl
fisubrl
popf
lret
push
hlt
push
jmp
xchg
inc
sbb
outsl
push
inc
in
std
lds
imul
mov
mov
jae
or
dec
pop
dec
out
inc
push
test
and
pop
xor
or
jno
ret
fs
lds
add
dec
sub
inc
cltd
lahf
rolb
std
js
sbb
vxorps
imul
aam
pop
hlt
fs
pop
fwait
sub
xchg
fildl
mov
xor
out
and
and
jnp
fs
sbb
push
or
stos
inc
jno
inc
dec
sub
sub
jne
and
xor
fistps
cld
daa
call
push
jb
ss
sti
jge
cmp
movsb
xchg
push
imul
cmp
mov
xlat
loop
dec
mov
jecxz
cmp
add
sub
push
and
stc
push
enter
popa
loop
loope
dec
imul
sub
out
dec
mov
mov
inc
add
and
cmp
cld
fcmovnbe
pop
fnstenv
ret
bnd
inc
mov
movsb
sub
sub
push
outsl
outsl
adc
dec
cmp
cli
adc
cli
xchg
arpl
sbb
mov
jae
std
repz
mov
cmp
jno
xchg
repnz
pop
stos
mov
adc
xchg
xlat
movsb
mov
ret
in
loopne
and
icebp
dec
stos
cmp
leave
cmpl
dec
cmpsb
popf
and
sub
inc
popl
imul
push
sbb
fldt
pop
add
push
je
movsb
iret
cli
aaa
rcl
pop
sbb
jno
dec
mov
loopne
jmp
cmp
fiaddl
jecxz
add
aas
scas
in
xor
dec
push
cltd
loop
adc
sahf
jg
mov
add
mov
dec
dec
pop
sahf
pop
mov
jg
pop
adc
xchg
int
jnp
and
jle
out
push
or
xor
jbe
mov
cmp
test
or
imul
loope
adc
push
adc
push
xor
xchg
mov
enter
fsubs
stos
and
sti
xlat
adcb
loop
xchg
pop
pop
inc
mov
mov
mov
or
push
xchg
cs
xchg
shl
mov
jge
dec
dec
movsb
shr
sbb
shr
es
fiaddl
cmp
or
daa
inc
aam
cmc
sub
inc
mov
in
sub
dec
push
out
loope
mov
out
addr16
lods
mov
pop
andl
das
leave
testb
ret
shrl
out
push
dec
clc
xchg
into
push
pusha
sahf
gs
stos
mov
add
icebp
and
hlt
inc
mov
cmpsb
test
sarb
xor
xchg
test
xchg
out
sub
aad
sbb
push
xchg
out
sbb
daa
or
stc
dec
xor
lahf
lods
stos
mov
insb
outsl
fwait
cmp
xchg
lods
cmp
or
jl
rcrl
jb
ljmp
roll
nop
mov
add
pop
pushf
mov
cmp
imul
cld
jl
and
mov
mov
dec
mov
ror
adc
in
and
outsb
in
cs
pop
loop
lods
les
cltd
mov
and
lock
sahf
inc
xchg
mov
movsl
mov
out
adc
adc
jmp
fmuls
fs
xlat
addl
sub
mov
or
jge
je
adc
jns
xlat
mov
sbb
scas
cmp
shll
testl
mov
cwtl
lea
mov
cmp
jmp
inc
mov
movsl
scas
ljmp
movsb
lods
lcall
cmc
and
mov
xor
adc
jle
ficompl
lods
add
mov
mov
das
mov
sahf
push
mov
mov
nop
push
or
bound
push
popf
rcr
jne
xor
rcl
push
leave
inc
or
cmp
sub
cmp
jmp
inc
je
and
adc
xchg
or
mov
mov
adc
or
fbstp
push
test
adc
xor
and
sti
mov
hlt
cld
pop
and
jmp
popf
loopne,pn
cmp
cmp
das
cmp
sub
and
ret
or
add
mov
lds
scas
xchg
mov
cmc
rorb
pop
jp
lods
mov
divb
fdivl
popf
jns
mov
pop
pushf
addb
fiadds
pop
stos
or
xchg
jne
popa
addl
insw
dec
push
out
test
mov
fstl
outsl
repz
mov
jns
dec
es
push
addr16
ret
cwtl
jae
fs
test
xchg
addb
in
mov
xor
xchg
xor
lea
orb
mov
mov
cmp
iret
xor
fs
and
dec
shrb
rolb
jle
xchg
and
add
in
aam
and
flds
mov
fwait
cmp
add
fwait
xor
dec
out
insb
jae
fwait
push
and
je
cmp
pop
fucomp
adc
dec
fstpt
sbb
shrb
repz
mov
xchg
popl
mov
or
xchg
inc
out
mov
fnstcw
movsb
and
inc
fistpl
aas
test
setae
fcoml
mov
and
jnp
jne
stos
es
addb
aas
fwait
mov
dec
mov
push
test
mov
mov
out
into
jp
add
xchg
loop
jae
mov
inc
sub
add
popl
jnp
xor
in
xor
rcll
or
test
adc
push
pushf
jae
nop
xlat
xor
leave
cmp
int3
cwtl
add
pop
orb
stos
fildll
xchg
ja
lods
mov
insl
push
popa
xchg
fidivl
mov
pushf
xchg
aad
push
cmp
out
fwait
aam
add
icebp
sahf
xchg
cmc
push
cmp
rorb
cs
pushf
cmp
xchg
push
xor
test
lods
cmp
and
cmp
dec
fimull
mov
xchg
out
or
pop
mov
mov
insb
mov
xor
lret
mov
xchg
sarl
insl
addb
mov
add
pop
cmovl
sub
jp
cmp
pop
ss
push
mov
xor
rcl
mov
mov
cmp
lods
sub
jle
push
out
outsl
cmp
jge
xorb
rcrb
out
shlb
repz
loope
imul
or
cmpsl
dec
xlat
cmp
cmp
sbb
popf
movl
outsl
mov
psubusw
stos
stos
lea
jne
or
cs
ljmp
push
cwtl
dec
aad
lea
mov
jge
add
fnstcw
adc
scas
and
js
loopne
mov
add
fmul
insb
sti
fcomp
cwtl
pop
imul
cmp
adc
cmp
imul
in
push
bound
cmpl
bswap
test
xchg
stc
or
xchg
mov
jp
xor
lock
adc
das
movsl
je
xor
xchg
jne
or
out
jp
push
stos
ja
xchg
fcompl
jb
mov
and
cmp
mov
icebp
scas
les
pop
dec
adc
cwtl
push
scas
imul
aaa
mov
pop
inc
push
fsubr
pushf
mov
je
add
scas
lret
mov
insb
push
mov
outsb
fistl
fists
pushf
and
into
xchg
aam
out
mov
shrd
out
mov
xor
cmc
in
inc
xor
stc
bound
sub
mov
xchg
ljmp
clc
cmp
lods
lahf
insl
pushf
scas
add
fadd
mov
jge
jmp
psubq
mov
dec
decl
pushl
adc
js
aas
sub
leave
sub
out
shll
lods
push
lock
mov
adc
jmp
jecxz
into
xor
and
stos
mov
inc
mov
cmpsb
mov
mov
pop
inc
jbe
add
out
cmpsb
dec
mov
inc
or
dec
test
xchg
pushf
add
add
xor
jmp
inc
negl
loop
iret
cmp
pop
xchg
add
dec
pop
mov
addr16
fwait
lods
or
and
jmp
iretw
add
lret
jge
mov
sbb
mov
outsb
aad
addr16
adc
cmpsb
jmp
or
pop
daa
xor
sub
pop
fwait
scas
push
iret
in
cmpsb
sub
pop
cmp
ret
xor
mov
pop
jl
xor
ss
shll
fbstp
and
pop
or
shlb
adcb
es
rcl
sarb
xchg
push
lcall
mov
jo
popf
cmp
or
imul
rorl
and
ds
mov
mov
notb
inc
adc
dec
shl
aaa
nop
inc
pop
fisubl
pop
xor
push
cmp
dec
sbb
test
mov
sub
nop
pop
adc
ja
iret
add
xchg
movsb
dec
inc
mov
clc
xor
jb
pop
pop
push
ss
cmp
lock
rcr
push
cmp
outsl
cs
scas
or
test
shrl
xor
jmp
dec
push
orl
pop
pop
fimuls
sub
and
inc
std
mov
mov
imulb
push
push
mov
ljmp
inc
jae
add
mov
or
sub
mov
pop
leave
push
rclb
push
aaa
dec
das
fdivrl
sbb
andb
inc
cld
add
fdiv
jae
cmpsb
pop
and
or
mov
and
popf
xlat
push
inc
xor
jp
pop
jbe
mov
sbb
sub
lahf
or
leave
lahf
outsb
fcoml
ljmp
xchg
push
nop
xorl
rcrl
mov
jmp
call
push
in
faddl
addl
cmp
ss
pop
ljmp
aad
push
mov
and
test
sbb
int3
push
and
or
mov
lock
mov
int3
ds
insl
sahf
pushf
nop
mov
mov
mov
sbb
push
xor
lock
push
lods
sbb
jae
xor
test
push
jne
pmaxub
nop
outsl
mov
xchg
je
sub
popf
ss
insb
jnp
adc
stos
test
sbb
aaa
dec
addr16
sub
jmp
lock
or
xor
sahf
js
mov
jno
outsl
clc
pusha
sub
les
lea
jle
imul
out
mov
add
lret
lret
repz
fmuls
out
lock
mov
xchg
xchg
mov
push
fisttps
outsl
out
sbb
and
pop
mov
test
and
lahf
arpl
sub
sub
js
mov
mov
and
inc
jo
fstp
fmull
pop
cli
addr16
sbb
xchg
sbb
pop
adc
bound
mov
sub
fstpl
push
mov
mov
loopne
sti
or
test
cld
fists
mov
or
repnz
add
xor
jb
fcompl
jge
xchg
aaa
cmc
lcall
and
outsb
inc
adc
mov
in
mov
sti
std
pushl
xor
inc
es
jle
push
ljmp
mov
and
sbb
mulb
xchg
pop
gs
dec
adc
adc
jns
xchg
in
mov
inc
fstpl
arpl
leave
hlt
fcomps
int
clc
ja
bswap
and
adc
xor
shll
loopne
fnstcw
insl
inc
in
xchg
push
test
jno
js
push
jne
mov
idivl
cmp
popa
xorl
dec
xor
out
insb
movsb
jge
adc
cmc
das
jmp
mov
pop
push
lret
mov
push
jne
negb
and
daa
pusha
mov
pop
cli
insb
fisttpl
push
add
xchg
inc
sub
movsl
and
push
mov
and
js
movsl
mov
icebp
mov
sub
jae
test
xchg
call
cmp
dec
popa
sub
lods
adc
rcll
dec
hlt
push
sub
xor
popl
cs
aaa
jnp
xchg
hlt
rolb
aas
or
and
xchg
pop
nop
cs
mov
jnp
ja
mov
push
jl
dec
stos
insl
out
mov
sub
les
idivb
jnp
in
add
xchg
xor
add
ret
in
inc
js
adc
int3
and
xchg
stc
das
out
cmp
pop
jle
js
mov
mov
push
outsb
sub
in
jno
ljmp
sbb
sbb
mov
mov
fdivr
outsb
mov
or
add
ljmp
mov
pop
test
mov
in
test
enter
shlb
jo
cmp
mov
lds
ja
call
inc
ljmp
mov
lods
lock
mov
pushf
inc
cmpsl
aad
push
faddl
adcl
sub
jb
cmp
inc
fsubl
rol
jns
jle
push
call
jmp
daa
and
push
loop
add
jmp
ret
es
cwtl
xor
adc
int3
fistpll
mov
popf
jae
test
inc
adc
mov
mov
push
fwait
mov
cmp
sti
mov
mov
xchg
sbbb
cld
or
nop
test
test
ja
in
lret
inc
mov
push
cltd
dec
ror
push
push
push
adc
iret
arpl
in
adc
xchg
test
repz
jl
xorl
dec
ds
cmp
out
jns
cmp
adc
cmp
push
and
cmc
sbb
push
xchg
inc
xor
adc
out
inc
mov
add
mov
gs
dec
enter
cld
sub
aam
push
xor
pushf
mov
loop
out
or
es
out
lock
std
mov
lcall
push
rcr
lods
lret
sub
xor
mov
adc
rol
jns
dec
negl
mov
out
pushf
adc
xchg
data16
cmp
dec
lock
push
xor
and
adc
sti
std
push
ja
mov
subb
sarb
in
or
test
sbb
pop
xchg
and
ja
in
in
jmp
sub
scas
hlt
mov
sub
mov
out
out
test
xor
imul
aam
xor
rorb
xchg
add
ficoms
stc
test
jge
daa
mov
rorb
fisubs
pop
sbb
xchg
push
xchg
lret
and
je
sbb
subb
pop
shrb
insb
jp
and
xor
mov
push
imul
loopne
out
cld
mov
fnstenv
out
inc
cltd
les
ljmp
pop
test
pop
or
mov
fwait
mov
push
test
movsl
sahf
sbb
dec
jp
lds
push
addr16
dec
adc
xorl
movsb
stc
pop
jge
mov
push
lret
jns
pop
pusha
sub
ds
cwtl
mov
mov
out
cmp
push
negb
ss
dec
cli
data16
loop
or
cmp
lea
dec
push
dec
mov
rcll
aas
xor
movsb
jecxz
sbb
dec
xchg
ds
sub
push
cmp
xchg
loopne
xchg
push
jmp
and
aad
push
cli
mov
push
or
scas
and
filds
lods
adc
and
std
test
lock
dec
loopne
jecxz
sarb
jg
pusha
das
add
mov
and
addb
mov
pusha
mov
adc
fldenv
psubusb
or
push
scas
pop
and
add
adc
lods
nop
sti
push
into
mov
push
sub
inc
nop
xor
adcb
sub
int3
insb
lds
std
mov
into
and
add
xor
and
sbbb
pop
cmpsl
aam
mov
inc
dec
iret
jl
dec
gs
mov
xor
in
outsb
outsl
and
fmull
rcl
pop
mov
xor
test
fiadds
inc
and
dec
xor
iret
ret
mov
sbb
shrl
dec
pop
loope
loop
in
jg
push
sbb
lcall
push
jg
add
lock
fistpl
or
sub
sbb
xchg
push
pop
lea
inc
test
inc
mov
inc
xchg
push
pop
pop
je
lock
scas
xchg
aas
mov
jbe
push
aaa
dec
mov
mov
insl
mov
das
inc
mov
loop
xchg
ss
je
mov
and
mov
je
cwtl
sbb
lea
push
sbb
xor
or
outsb
mov
daa
mov
xor
frstor
cmc
in
pushf
rcl
lock
movsl
mov
mov
lcall
iret
push
inc
enter
shlb
test
fiaddl
fnstcw
mov
adc
mov
std
dec
into
clc
mov
repz
mov
lods
mov
pop
test
ja
rcrl
loope
pushf
xchg
fistps
ja
xchg
stos
outsb
sub
test
loop
sbb
imul
leave
cmp
add
aam
adc
sarb
ds
out
pop
ljmp
shrl
scas
jbe
mov
add
push
cltd
xchg
jnp
cmp
sub
popa
push
insb
out
ffree
mov
inc
inc
arpl
inc
mov
and
xor
popf
jbe
cmpb
dec
pop
jge
xor
rcr
nop
cmp
jmp
je
insl
xchg
jg
sub
mov
pminub
dec
xlat
jg
fisubrs
mov
pop
cmp
add
ret
pop
arpl
mov
sub
fwait
or
cltd
ret
test
cs
mov
out
push
dec
or
maxps
lods
sub
insl
jge
xor
sbb
call
dec
mov
mov
cwtl
into
mov
test
scas
divl
pop
cli
cmp
push
pop
adc
std
js
push
xor
dec
sti
lods
pushf
push
pop
pop
lea
divb
ror
ja
push
mov
mov
outsl
cmp
roll
fnstsw
data16
jge
sbb
loopne
mov
movsb
mov
insb
dec
ss
enter
and
cmp
gs
test
add
daa
pop
in
aad
clc
in
lret
push
nop
mov
pop
inc
jg
andl
mov
inc
mov
cli
push
fwait
ljmp
loop
jo
or
and
xlat
ljmp
mov
add
fisubs
imul
mov
adc
loope
jo
xor
push
dec
inc
popf
repz
std
jmp
sub
ret
push
push
addr16
jmp
jle
lret
push
fisttps
inc
mov
in
ret
push
cmp
sbb
into
lcall
jnp
xchg
rclb
enter
lds
fldlg2
ret
aaa
into
jecxz
xchg
mov
push
lods
mov
add
ljmp
test
iret
dec
inc
or
add
int3
adc
loop
push
out
scas
add
fistps
or
mov
pushf
and
call
in
jno
cmpxchg
mov
insb
xor
cmc
fsubrs
push
insl
inc
rcll
mov
mov
arpl
gs
jge
mov
movsb
jle
jl
and
xchg
fsubrl
insb
je
xchg
aad
add
mov
or
sti
mov
mov
in
xor
or
insb
adc
pushf
outsb
int3
sub
test
inc
dec
mov
adc
or
xor
or
cmp
xlat
clc
rol
dec
mov
or
test
xchg
ss
hlt
imul
cs
push
inc
mov
fucomip
add
addl
jl
push
xor
mov
lcall
in
mov
adc
sarl
lret
push
lcall
out
mov
add
or
mov
xchg
cmc
dec
and
cltd
jp
loope
lods
pop
clc
xchg
hlt
outsb
jo
push
sbb
push
jl
push
xor
subl
imul
rcl
mov
dec
mov
lods
shlb
mov
push
mov
mov
jae
inc
cmp
out
jnp
aad
shlb
in
lock
hlt
push
aad
fldenv
pop
dec
enter
xor
mov
xchg
lahf
movups
stos
test
adc
addl
xor
jb
mov
cwtl
push
sbb
jp
push
les
jl
adc
fisubrs
fildll
jnp
cmpsb
stos
loopne
inc
out
cmpsb
ret
mov
mov
jg
add
add
dec
cld
es
xchg
jo
mov
adc
imul
xor
test
mov
fsubl
inc
in
cmc
add
push
or
data16
loope
lods
scas
pop
notb
xor
and
xchg
add
mov
fisubl
mov
in
push
popf
cmp
imul
test
maxps
leave
mov
out
xor
xchg
movsl
pop
lods
lea
jb
pop
mov
mov
hlt
repz
jecxz
hlt
jp
pop
adc
pop
call
test
icebp
jb
scas
leave
pop
jno
rolb
repnz
hlt
ja
cmp
xor
das
add
push
insb
xchg
dec
std
in
push
or
inc
cmovl
mov
mov
mov
sbb
inc
push
sub
lock
out
call
fs
shrl
dec
js
ss
jnp
xor
sub
mov
addb
in
cmp
pop
je
xchg
lds
cmp
inc
adc
add
loopne
cmp
nop
xchg
enter
sbb
mov
mov
mov
jg
sbb
and
out
add
xor
shl
mov
mov
maxps
sahf
inc
aam
xor
outsl
fwait
jecxz
xchg
test
enter
leave
test
cmc
or
sarl
hlt
push
lds
push
mull
fwait
mov
test
lods
inc
in
fsubl
sub
nop
pop
sahf
lret
ljmp
xlat
dec
or
fsts
mov
sbb
cmp
pop
rcrl
add
cmpsl
ror
jo
shll
mov
push
pushf
sub
icebp
rolb
push
cmp
and
add
bound
mov
addr16
ljmp
repz
push
in
subl
adc
push
cmpsb
dec
cmp
sbb
or
mov
mov
std
mov
jmp
subl
nop
cmpsl
out
testl
push
out
mov
repnz
and
divl
jb
loop
mov
jns
shll
inc
enter
cmp
je
mov
imull
cmp
fs
mov
jecxz
lock
mov
stos
scas
add
cli
mov
out
sbb
xor
add
sbb
stos
leave
sub
les
fnsave
daa
mov
xor
cmp
pop
js
or
or
pop
push
mov
fwait
cmp
dec
fs
fwait
rcrb
sarb
xor
mov
and
sbb
mov
mov
mov
inc
test
lods
push
outsb
xor
clc
mov
std
movsb
bound
sbb
add
lret
js
lret
fwait
mov
sub
jae
int3
ret
inc
xor
adc
int3
sub
lods
testl
mov
mov
mov
pusha
lret
push
cld
mov
sub
sub
and
pop
lahf
inc
lock
inc
add
insb
and
clc
nop
repnz
cld
push
mov
out
fsts
inc
push
in
mov
test
push
mov
test
pop
mov
fcoms
cmp
in
jno
rolb
imul
cwtl
xchg
mov
and
es
rcrl
push
test
fdivr
rep
mov
jle
mov
cmc
dec
add
mov
xchg
mov
es
int
dec
inc
and
shlb
movsb
pop
adc
xchg
andb
dec
or
fldcw
adc
ror
nop
ret
push
add
xchg
and
xor
mov
jno
mov
mov
enter
repz
mov
add
xor
pop
mov
inc
pusha
pop
lds
lret
xchg
push
out
cwtl
stos
fldenv
pop
mov
xor
aad
test
rcl
mov
cmp
scas
clc
cmp
and
mov
fwait
dec
je
ret
or
aam
pop
pop
add
pop
in
pop
push
lods
clc
cli
mov
xchg
ret
xchg
push
sti
repnz
pop
and
ja
xchg
pop
pop
sbb
stc
lock
pop
xchg
cmp
mov
jno
fucomp
inc
mov
ret
cld
cmp
mov
imul
les
movsl
push
mov
scas
shr
sub
test
cmp
std
js
sbb
sbb
out
mov
hlt
popa
sbb
cmpl
jo
fildll
fcomps
xchg
das
add
addr16
or
cmpsl
and
xchg
fbstp
imul
stos
push
movsl
add
pusha
mov
xchg
dec
jnp
mov
insl
inc
xorb
inc
ja
mov
outsb
jecxz
test
divl
addr16
mov
push
scas
push
rolb
or
cmp
mov
adc
cmp
mov
inc
inc
fwait
and
stc
aam
js
daa
mov
mov
cmpsl
mov
sub
test
inc
enter
add
lret
dec
inc
jo
push
pop
push
inc
push
sub
ss
shrl
aas
shlb
sbb
mov
movsb
xor
leave
jno
and
lahf
es
sub
pop
hlt
xchg
bound
out
int
add
repz
fcomps
sub
mov
jnp
dec
xlat
cmp
sub
in
xor
xor
pop
mov
or
mov
and
jle
jge
cs
leave
mov
filds
lret
insb
clc
js
subb
sbbl
adc
jle
or
mov
xchg
dec
lcall
mov
pop
lods
adcl
ss
mov
imul
mov
icebp
mov
inc
scas
mov
lock
pop
sub
imul
inc
mov
inc
lret
jnp
cmp
arpl
mov
xchg
aaa
xchg
out
mov
js
out
pusha
push
or
mov
inc
stos
push
add
test
mov
pop
mov
mov
aam
xchg
push
add
sbb
mov
inc
jne
inc
xlat
cmpl
pop
sub
or
addb
cmpxchg
inc
cmpsl
repz
xor
scas
sub
sub
add
inc
mov
rcrl
les
movsl
mov
rorb
sub
push
jbe
or
std
imul
test
inc
jo
and
push
fcoml
arpl
rcll
xor
cmp
movsl
dec
addr16
stos
in
rorl
add
pop
lods
and
push
pop
idivl
mov
repnz
in
cmp
in
sbb
sub
adc
jbe
inc
cs
in
pop
je
lret
pop
stc
lret
inc
in
xchg
rcrl
sub
lea
cmp
repz
out
add
dec
inc
jecxz
in
mov
cmp
pushf
shll
shl
xchg
sub
imul
mov
lods
xchg
or
add
aad
rol
lods
xchg
sarl
scas
mov
int3
push
popa
daa
popf
cmp
add
push
add
aas
cmc
aam
js
cmpsl
dec
stc
xor
iret
call
sub
sahf
mov
repz
mov
mov
sub
mov
test
add
popf
sub
pusha
mov
into
negl
sti
scas
cmp
int
fcomps
mov
push
push
dec
repz
mov
mov
int3
hlt
sbb
int3
cmp
in
mov
add
sub
mov
mov
add
mov
aas
nop
sub
insb
push
jle
mov
jecxz
jge
ret
jge
xlat
inc
push
stc
xchg
clc
or
cmpb
mov
out
hlt
jb
mov
mov
mov
mov
ror
mov
clc
repnz
sbb
cmp
sub
cmpsb
mov
insb
dec
mov
mov
sub
mov
mov
fs
data16
clc
jl
mov
outsb
pop
hlt
or
dec
pop
cmc
movsb
int
out
enter
xorb
shlb
jne
psubd
sbb
outsb
adc
mov
mov
mov
repnz
inc
mov
or
lcall
mov
push
xor
and
repnz
mov
jg
mov
cli
xchg
and
cmp
adc
sub
ss
dec
fwait
lods
sbb
jne
in
mov
mov
dec
mov
aaa
sub
mov
fwait
out
add
ja
repz
pop
push
sub
in
int3
popf
dec
inc
sbb
jecxz
cmpsb
ret
sub
pop
sub
cmp
pop
rolb
inc
sub
lea
les
vpsubusw
push
cli
gs
jnp
hlt
dec
cmp
out
cmp
sub
stos
popa
lret
insb
into
cs
push
pop
inc
std
fwait
pop
pop
mov
bound
cwtl
pop
pop
out
insb
cwtl
ret
fidivrs
imul
arpl
lds
pop
mov
add
loop
insl
push
cld
pop
clc
fldcw
in
fstpl
inc
jb
sar
repz
out
add
xchg
into
jge
adc
in
push
cli
push
aad
pop
push
cmp
adc
je
xor
jns
test
push
adc
icebp
loopne
inc
jmp
inc
xor
sahf
fldcw
shl
rcl
cmpsb
arpl
push
fstps
mov
or
or
cmp
pop
pop
sub
mov
and
test
daa
fcoml
push
cmpsl
xor
push
and
inc
dec
ret
add
cmpsb
cmp
push
pusha
push
ret
testb
sub
dec
nop
and
les
clc
cmpsb
imul
mov
dec
mov
std
cmp
xchg
sahf
not
leave
fists
push
test
sbb
cmp
adc
aaa
cmp
cmp
xchg
mov
sub
sub
movsb
arpl
je
ja
mov
loopne
leave
sub
jecxz
bound
pop
add
call
cld
int3
mov
clc
adc
pop
clc
dec
outsb
adc
sbb
dec
pop
and
pushf
aad
pop
lock
mov
mov
xor
cmp
push
aaa
or
lds
push
push
and
insb
or
stos
int
test
shrl
lock
hlt
jno
pop
push
gs
out
add
pop
lahf
mov
out
hlt
out
mov
add
fstpl
lea
jg
bound
add
fsts
outsl
imul
aaa
push
cltd
cmpsb
stos
xchg
aam
outsb
arpl
xor
pop
and
test
inc
xchg
add
or
aas
pop
push
movsl
and
pop
fldl
mov
and
ss
in
lret
aas
push
dec
test
sub
aas
cli
pop
mov
jne
push
int
rcll
sub
or
loopne
mov
orb
pusha
jnp
cmp
je
and
sub
dec
jle
sbb
and
xchg
push
jmp
idiv
sbb
mov
mov
dec
sbb
or
lahf
jp
ds
lcall
push
sti
sbb
and
jmp
jl
xor
sahf
inc
imul
mov
inc
mov
cwtl
fsub
dec
xchg
sub
inc
stos
dec
jge
fstpt
cltd
lret
ret
adc
lret
jle
in
call
jo
shrb
adc
cmp
xchg
repz
outsl
fisubrs
inc
dec
clc
jg
les
sub
decl
cmp
divl
into
or
popf
mov
fs
les
jl
mov
xor
inc
jns
inc
mov
adc
arpl
jo
test
mov
out
xchg
rorl
xchg
pop
inc
xchg
out
fwait
lds
pusha
lea
insl
ror
mov
cwtl
stos
in
mov
rclb
jnp
mov
jp
xchg
lcall
cltd
mov
aas
mov
jo
lahf
stos
push
filds
lock
pop
dec
ret
ret
psrlw
fwait
or
shll
out
add
aad
movsl
insb
cmp
jae
jne
fldl
int3
mov
inc
rcl
shl
xorb
cmpsl
xchg
pop
mov
inc
xor
shrl
in
stc
xchg
mov
insb
dec
pop
mov
pushl
scas
jp
cli
popa
in
inc
pop
mov
test
inc
insl
rcrl
jb
mov
mov
inc
scas
inc
inc
test
xorb
mov
mov
sub
mov
xlat
jb
out
cmp
cmc
popf
aaa
addr16
je
popf
xchg
cmp
and
fidivs
bswap
fs
mov
cwtl
dec
ret
outsl
xchg
cmpsl
dec
adc
cltd
xchg
cmp
jns
movsb
lret
cs
mov
xor
mov
sub
add
mov
clc
ret
insb
dec
mov
or
sahf
stc
arpl
stos
xor
hlt
inc
fwait
nop
cld
test
xlat
lcall
aaa
pop
fdivrp
in
cltd
cwtl
sbb
dec
mov
mov
jle
repz
fimuls
add
inc
push
dec
shr
stos
fistl
ret
xor
mov
adc
and
add
lods
inc
out
and
pop
fisttpll
dec
xchg
xchg
addr16
pop
idivl
add
push
hlt
data16
shll
arpl
hlt
mov
decb
std
xchg
movsb
xor
in
jg
jo
sbb
and
mov
or
sti
inc
daa
mov
xchg
insb
faddl
cli
inc
loop
sahf
test
aad
cmp
mov
insl
inc
int
cmp
xchg
ret
inc
sub
mov
notb
dec
pop
testb
push
sahf
mov
shl
in
inc
adc
in
pushf
push
cmpsb
adc
and
jge
xchg
daa
lcall
mov
fisttps
adc
pop
imul
jbe
jp
clc
adc
cmpsb
push
pop
daa
dec
push
push
roll
pop
xor
push
sub
ret
jge
les
cmp
jns
xor
inc
jae
icebp
pop
idiv
out
das
loope
imul
xlat
scas
adc
icebp
jmp
push
sub
ljmp
imul
or
add
outsb
xchg
cmp
insb
repnz
mov
stos
push
je
popf
dec
mov
testl
pop
mov
int3
cmp
pop
sbb
cmpsb
mov
adc
push
fnstsw
pop
mov
aam
sub
sbbb
jno
xchg
cmp
inc
jge
ja
inc
push
movsb
push
das
enter
test
leave
adc
test
cmp
les
pop
in
cwtl
leave
and
sub
test
sbb
xor
cmp
hlt
or
fmuls
lahf
jge
jno
sbb
enter
jecxz
xor
or
inc
out
ljmp
mov
or
xchg
jnp
jp
andb
out
daa
mov
popf
mov
sbb
jbe
lods
mov
sub
lahf
and
jno
jle
pop
ss
imul
sbb
pushf
xor
mov
or
push
pop
sub
sub
push
cmp
test
and
repnz
pop
insl
ret
add
cltd
hlt
cmp
push
test
xchg
sbb
stos
and
and
mov
sarl
aam
push
js
aaa
jne
pop
xchg
add
repnz
or
aam
push
mov
mov
ljmp
arpl
divl
pop
adc
test
mov
scas
mov
sub
pop
aam
mov
out
lahf
mov
sti
je
mov
add
jmp
jmp
repz
cli
cltd
ret
sub
mov
inc
enter
iret
fildl
out
xor
push
test
cmpsl
cmc
popf
xchg
int
mov
mov
test
or
lds
cmpsb
scas
sbb
mov
pushf
sub
loopne
mov
loop
dec
sub
movsl
stos
jno
or
lods
out
add
clc
pop
jns
mov
jg
leave
dec
leave
cmp
inc
sbb
in
outsb
outsl
mov
and
xchg
push
or
sub
ljmp
xchg
pusha
mov
sub
out
xor
test
aam
aaa
popl
mov
stos
xor
das
xor
adc
mov
dec
push
ret
imul
inc
jnp
push
push
pusha
movsl
adc
or
or
mov
ljmp
addr16
pop
insl
divb
cmp
lock
jmp
dec
inc
repnz
fsubs
add
gs
and
mov
xchg
inc
bound
cmp
fstpt
nop
lea
lds
push
into
lds
pushf
stos
inc
cmpsl
lods
xchg
adc
in
dec
mov
outsl
mov
cwtl
sbb
cmp
add
inc
scas
fstps
inc
or
cs
xor
cmpl
jp
into
inc
call
cmc
adcb
sbb
sbb
loopne
out
fdivrs
or
scas
sub
cmp
cmp
fists
add
dec
and
cmp
lret
cs
aaa
adc
cmpsl
cld
loop
in
jb
sbb
or
and
and
das
adc
rorb
sbb
push
nop
test
jle
cltd
ficompl
cwtl
aaa
addr16
call
cltd
sbb
addr16
push
mov
insl
jno
lods
pop
push
push
int
mov
das
aam
sub
push
std
jg
push
push
mov
rcr
leave
pop
fcomp
mov
lods
lock
jae
push
xchg
lahf
les
xor
push
xchg
mov
aaa
test
cltd
mov
fnstenv
xchg
or
mov
mov
adc
cltd
mov
cmp
fidivrl
insb
inc
add
pop
ret
ds
ja
lock
mov
sbb
xchg
cmp
jle
mov
andl
dec
pop
les
rcrb
andb
dec
mov
insb
xor
in
and
aam
xor
stc
sbb
jbe
dec
push
sub
cltd
sub
out
xor
xor
lret
insb
test
dec
xchg
jns
inc
dec
or
ja
mov
sbb
xchg
aad
sbbl
movb
jge
jb
xchg
sub
cmp
in
pushf
test
pop
sbbb
add
inc
push
jl
xor
test
xchg
mov
movsb
rcrl
push
mov
lds
aad
je
xor
cmp
fcompl
jns
or
cmp
cltd
inc
scas
sbb
jne
add
mov
xor
lret
subb
movsb
adc
sbb
sti
push
xchg
mov
mov
cld
aas
mov
push
outsl
ret
or
jnp
mov
rol
js
iret
jle
dec
lock
pop
je
test
fildll
mov
js
leave
addr16
xor
jecxz
mov
push
mov
jne
xchg
push
in
dec
adc
add
es
jecxz
sarb
popa
cmp
aas
push
and
stos
pushf
xor
out
test
bound
ss
inc
mov
lcall
adc
inc
arpl
jno
adc
inc
insb
lcall
fbstp
add
cmp
leave
sbb
sub
movb
daa
sbb
jmp
rolb
adcl
repnz
xchg
pop
out
shlb
push
and
push
ljmp
xor
and
push
iret
sub
cltd
sahf
jl
mov
js
inc
scas
sti
arpl
out
mov
mov
andl
xchg
int3
rcrb
test
jg
jb
addr16
push
aam
shr
mov
pop
xor
hlt
scas
imull
pop
fs
xchg
ja
mov
out
into
fxch
and
cmp
leave
ja
arpl
imul
xchg
lods
jg
test
add
loop
imul
gs
xchg
mov
jae
pop
cmp
sbb
xor
lea
adc
sbb
mov
iret
clc
pop
xchg
cli
fxch
sub
mov
fidivrl
dec
out
jns
sub
loope
mov
ss
jecxz
pop
push
and
test
push
sbb
aas
adc
imul
jnp
clc
iret
xlat
adc
shrb
repz
push
and
int3
jle
push
pop
push
push
jp
cmp
orb
push
subb
addr16
rorl
or
push
lret
je
jg
js
inc
xorl
lea
inc
push
pusha
pusha
shr
ficoml
cmp
js
shll
out
mov
add
cmpsl
mov
sbb
popa
or
pop
addr16
testl
fsts
pop
mov
dec
sbb
mov
mov
mov
fisttpl
lock
xchg
les
mov
cld
outsb
jmp
cmpsl
or
mov
sub
jecxz
scas
xchg
idivb
nop
xchg
jo
jno
daa
xor
sbbb
mov
inc
ljmp
jl
cwtl
fs
test
mov
je
in
outsb
ret
cmpsl
add
sub
mov
bound
orb
imul
mov
jns
mov
mov
int3
stos
adc
cmp
cmp
mov
or
lods
pop
int
mov
add
jbe
mov
movsl
fdivrs
push
test
je
jmp
lahf
xorl
xchg
inc
subl
xchg
or
and
sub
jno
das
xor
mov
xchg
push
rcrl
adc
imul
rorb
mov
pop
dec
repnz
or
cmc
jbe
push
lcall
sti
sbbl
jne
pushl
or
mov
push
add
sub
sbb
cltd
sbb
push
cmp
adc
ss
bound
adc
cmp
mov
negb
cmpsl
jge
fcom
mov
mov
ja
std
scas
xchg
fs
adc
imul
daa
mov
imul
dec
xchg
or
inc
jbe
lret
fsub
adc
repnz
fstpl
sub
test
rorb
pop
in
dec
aaa
loop
sub
stos
mov
mov
mov
idivb
mov
imul
lods
xor
mov
test
jbe
and
and
filds
ljmp
dec
xchg
scas
mov
in
int3
into
data16
out
mov
rcrb
push
mov
push
out
xor
sbb
push
jge
in
sub
movsb
lret
hlt
cmp
insl
xchg
mov
movsl
and
mov
pushf
loope
fcoms
mov
js
aad
mov
int
xchg
mov
insb
adc
pop
cmpsl
dec
add
xor
add
push
cmpsl
jnp
out
jnp
sbb
push
pop
inc
call
daa
inc
push
xchg
jecxz
jb
test
sub
mov
faddp
sbb
imul
and
xor
push
into
ss
cmpl
inc
xchg
xchg
mov
mov
sahf
lret
adc
cmp
lods
sbb
shll
orb
adc
and
or
cmp
out
mov
cmpsl
in
pop
xchg
gs
jno
inc
adc
jecxz
fsubs
inc
mov
es
inc
leave
sbb
decb
adcl
popa
in
scas
enter
bound
clc
and
xor
into
into
out
fs
in
add
push
lahf
hlt
add
dec
mov
cmp
fidivrs
mov
push
fwait
pop
or
cltd
dec
add
inc
outsb
sbb
insl
insb
out
lcall
int3
out
sbb
mov
add
int3
lods
pop
inc
adc
out
test
dec
cmp
fisubrs
test
lcall
and
stc
or
mov
movsb
mov
mov
cmp
add
push
cmp
add
arpl
push
adc
mov
test
nop
lds
sbb
movsb
pop
xor
sub
xchg
scas
mov
mov
push
xor
mov
cmp
mov
mov
fwait
jbe
aad
sbb
aas
loope
jo
imul
mov
jbe
jbe
sbb
dec
cmp
xchg
insl
mov
mov
or
int3
mov
xchg
fsts
jnp
and
xchg
sbb
dec
dec
mov
push
call
or
xchg
mov
or
outsl
insl
mov
ret
push
mov
mov
fadds
dec
add
loope
imul
cmc
in
xchg
cld
push
aad
fcomi
daa
and
push
inc
inc
test
dec
dec
int3
cmp
popf
jle
pop
out
test
adc
jo
shll
push
cli
adc
popf
fidivl
jno
xor
pop
aam
dec
sahf
dec
xchg
neg
inc
decl
push
shlb
pop
push
sub
dec
stos
push
dec
pop
ja
push
xor
jge
sub
sbb
xor
ss
pop
cmp
xchg
inc
shlb
pop
lea
in
jns
jge
loope
sub
mov
jmp
mov
mov
pop
nop
mov
push
jecxz
popa
jnp
scas
stos
and
sub
sbb
aad
and
arpl
jo
push
cmpsb
leave
xor
inc
cmp
pop
dec
orb
dec
cmp
notb
dec
sub
cmp
lahf
or
jle
push
xor
out
dec
lods
in
inc
dec
outsb
cli
add
mov
fmuls
sarl
int3
pop
sbb
dec
xchg
popf
fildl
mov
xlat
and
cmp
pop
inc
das
out
or
ret
andb
shrl
fcmovnbe
mov
dec
pushf
call
push
ja
test
sbb
jne
pop
sub
cmc
fdivs
push
into
sub
jae
sbb
jae
dec
cmc
popf
sbb
mov
mov
cmp
push
sti
and
ror
mov
mov
ja
jae
sbb
pop
inc
rclb
add
roll
leave
mov
mov
addr16
add
in
or
out
jae
iret
dec
pop
push
rcl
xor
push
int3
shrb
shl
je
xchg
sti
inc
rorl
xor
outsl
dec
les
cmp
and
stos
shll
mov
pop
sub
xlat
push
xor
ds
shl
push
push
adc
lret
popa
jl
rcll
adc
sub
cmp
test
pop
adc
xor
sbb
sbb
jbe
js
lret
addl
adc
add
daa
das
fidivrl
bound
pusha
xor
xor
push
into
ja
xor
push
push
xor
mov
cld
push
cmpsb
mov
pop
test
insb
xor
testl
mov
mov
and
pop
mov
jmp
cmp
add
dec
shll
vmovaps
dec
jg
mov
rcr
negl
xchg
dec
leave
or
rclb
arpl
sbbl
adc
or
inc
jge
add
cmpsb
out
cli
push
aam
mov
xchg
lret
jne
cmp
or
ss
push
or
mov
pop
dec
popf
out
mov
cmp
add
cmp
dec
cmpsb
insb
dec
add
dec
mov
test
imul
inc
dec
in
cmp
mov
add
push
pop
js
sbb
dec
adc
outsl
push
movsl
and
mull
mov
mov
sahf
inc
adc
and
call
ja
xchg
in
inc
cmp
jns
sbb
sub
das
or
dec
push
cmp
jmp
or
jnp
push
mov
movsl
lods
xor
std
repz
mov
dec
pop
adc
lret
in
and
pop
or
stos
and
and
mov
das
xchg
outsb
cs
aad
xchg
cmpsb
xchg
mov
mov
cltd
shrb
clc
arpl
cmc
jmp
movsl
ljmp
in
mov
sbb
push
fwait
mov
add
pop
add
idivb
stos
pop
fs
push
inc
mov
cmc
decb
les
push
scas
rcrl
xlat
jge
mov
sbb
inc
out
insb
mov
sbb
add
aam
push
pop
hlt
push
mov
lahf
je
aad
sbb
and
mov
es
pop
cmpsl
out
xor
gs
fnstsw
imul
cltd
inc
in
add
mov
rcrb
nop
xchg
mov
lds
lcall
outsb
jmp
je
xchg
ds
daa
enter
sbb
scas
mov
or
insl
sbb
sub
mov
enter
in
sub
pop
mov
pop
imul
dec
addb
mov
mov
sti
jb
adc
leave
xor
insb
popf
push
push
push
cmp
out
pop
pop
outsl
icebp
insl
inc
and
or
add
adc
mov
sbb
xchg
jbe
outsb
stos
notb
mov
pop
mov
outsb
add
xchg
aaa
bound
sti
rcr
loopne
scas
rcr
xchg
loope
es
dec
orl
mov
das
inc
pop
mov
and
or
and
xor
addr16
pop
out
dec
and
out
pushf
frstor
ret
into
les
push
fadd
xorb
adc
fadd
mul
xchg
xchg
add
str
aas
mov
mov
shll
dec
mov
mov
or
insb
jl
inc
mov
sbb
das
pop
jo
cmc
and
jb
ljmp
stc
les
push
jnp
pop
push
mov
cld
jmp
out
filds
inc
out
or
outsb
fwait
mov
pop
dec
mov
filds
int3
out
cmc
mov
cltd
cmp
jg
lcall
or
mov
sbb
aas
cs
cld
pop
inc
clc
pop
jae
setnp
cmpsl
cltd
xor
add
xchg
mov
and
iret
das
gs
xor
scas
inc
cmp
xor
xor
jmp
mov
and
gs
push
pop
out
mov
loope
xlat
fs
popf
addr16
mov
push
mov
icebp
inc
and
mov
jno
adc
sbb
pop
or
test
mov
insl
mov
lcall
sbb
mov
and
mov
popf
dec
pop
push
pop
sub
stos
aas
out
push
xor
push
in
mov
pop
out
xchg
inc
dec
ret
loopne
cltd
jae
inc
ljmp
xchg
xlat
push
add
jle
pop
je
jmp
and
mov
mov
dec
fiadds
ficoms
sbb
int
mov
pop
mov
inc
std
mov
dec
jno
repnz
gs
xor
xchg
ret
jl
loop
add
jp
push
inc
pushf
mov
ficompl
fimull
mov
jbe
xchg
lock
mov
and
cmpsl
outsl
pop
addr16
xchg
push
and
sub
push
jl
shrb
mov
xor
test
insb
inc
sbb
or
and
fiadds
lock
pop
sub
jno
mov
xchg
loope
addl
jl
bound
rcl
mov
mov
jecxz
inc
push
mov
aaa
add
jge
daa
cwtl
out
fisttps
sbb
test
jp
rcrb
sti
jmp
pop
mov
xchg
dec
mov
lret
pop
stos
push
push
add
xlat
sarl
mov
push
cwtl
sti
and
popf
jmp
cld
sub
mov
xor
sub
jmp
sbb
fs
push
dec
xorb
out
insb
adc
nop
in
xchg
push
sarb
mov
sbb
pusha
lcall
jnp
lret
or
adc
add
push
add
dec
pop
inc
sbb
fwait
popa
insl
and
or
add
pop
pop
ret
mov
pop
cmp
cmp
inc
sbb
jo
xchg
pop
insl
xchg
xchg
das
daa
dec
loop
dec
sub
sbb
mov
push
dec
lods
fdivrs
pmullw
add
int3
pop
icebp
aad
scas
or
test
mov
jne
jl
or
jbe
push
aas
or
cs
cmp
das
ljmp
loopne
sbb
add
mov
ret
movl
cmp
xchg
cmp
pop
sbb
in
mov
addb
rclb
inc
mov
push
mov
gs
push
xchg
push
mov
and
ficompl
push
push
push
ds
dec
test
out
in
mov
loope
sbb
cmp
lcall
outsb
mov
cmc
dec
or
stos
test
lods
je
inc
fnstenv
sub
lahf
addr16
xchg
pusha
popf
xchg
push
in
and
mov
das
push
mov
gs
mov
ret
pop
mov
aas
lcall
xchg
jecxz
dec
pushf
cmc
call
test
mov
pop
dec
cmp
dec
push
sub
movsb
pop
into
or
stos
xor
insl
sbb
and
pop
mov
cmp
notl
mov
push
xor
or
and
fdivrl
mov
and
cmc
push
jmp
jo
add
test
jo
adc
sub
outsb
and
or
scas
mov
dec
enter
push
insl
ja
fisttpll
pop
cmpsb
cwtl
cmpsb
sub
sbb
mov
fstl
inc
xor
dec
fdivs
fs
jbe
and
jp
pop
cs
mov
fstl
dec
inc
aad
mov
test
mov
sti
ljmp
add
cmp
inc
test
inc
cltd
jne
push
mov
out
mov
push
imul
repnz
xor
js
imul
push
cwtl
dec
jne
xchg
cvtdq2ps
mov
iret
mov
xchg
dec
xchg
xorl
dec
aad
std
shrb
pop
pusha
fbstp
inc
addr16
jecxz
xchg
xchg
aaa
mov
mov
cs
scas
rcr
mov
pusha
aam
jo
jle
ja
test
mov
cwtl
inc
dec
in
shlb
js
icebp
mov
sbb
mov
test
icebp
xchg
ss
fiaddl
adc
pop
dec
sahf
shll
into
std
popa
pop
in
adc
add
push
xchg
mov
adc
and
movsl
movsl
outsb
fldt
and
xchg
sbb
fimuls
push
out
add
repnz
sub
push
pushf
imul
cmc
mov
sarb
inc
xchg
or
lcall
xchg
sbb
in
xchg
sar
ret
mov
pop
insb
test
jl
int
iret
loopne
mov
or
mov
arpl
pop
das
jmp
rorb
and
out
movsl
jae
cmp
jo
cmpsl
js
cli
sbb
sahf
or
iret
xchg
dec
mov
cmp
pop
push
push
ds
cmc
inc
into
xor
sub
mov
lods
in
pop
pushf
sarl
or
negl
sub
dec
dec
pop
test
sbb
aaa
lods
bound
rolb
insb
decb
std
pop
cli
test
mov
jnp
js
scas
push
jle
or
insw
in
clc
mov
adc
cltd
divb
jnp
roll
and
jecxz
xlat
arpl
clc
xchg
sub
push
mov
inc
in
cwtl
xlat
push
xor
repz
lock
adc
lods
mov
inc
aam
lea
and
mov
mov
insl
adc
jne
lret
lsl
enter
sahf
push
lret
jb
push
inc
aad
out
les
in
xchg
call
sti
xchg
aaa
icebp
test
out
ds
push
adc
mov
ljmp
or
nop
sbb
mov
nop
and
out
das
jmp
inc
push
pushf
insb
and
mov
xor
xchg
mov
mov
pop
int3
xor
xor
aad
loop
loopne
cmp
dec
mov
insb
jp
or
ror
ret
jp
sub
and
mov
jne
adc
incb
sahf
mov
sub
roll
xchg
std
in
and
pop
add
or
lahf
aad
ja
mov
aam
push
sbb
imul
mov
ret
and
and
mov
aam
push
xlat
lock
lea
orl
mov
xlat
xchg
scas
nop
lods
das
iret
fs
es
or
enter
sbb
xor
ret
xchg
shl
xor
sahf
es
push
pusha
push
iret
nop
xor
loope
les
repnz
mov
sub
cmpsb
fcoms
jle
cmp
out
xor
and
xchg
fwait
sbb
loop
hlt
jg
cld
lds
or
cwtl
cli
jmp
add
xchg
push
fldenv
ljmp
mov
mov
movsl
scas
test
mov
js
popa
xlat
and
pop
jecxz
jp
sti
push
xor
xchg
pop
push
adc
ret
dec
mov
hlt
sete
pusha
fsubl
js
pop
dec
dec
xlat
rolb
mov
test
mov
adcb
cmp
lret
adc
xchg
dec
mov
fimull
jo
add
ljmp
adcl
into
mov
mov
lahf
lret
insl
lds
in
push
lds
shll
xchg
dec
cmp
jnp
cwtl
stos
cmp
and
mov
hlt
fs
ss
sub
mov
sub
gs
daa
sub
icebp
mov
add
sub
sbb
in
nop
pusha
leave
add
sub
dec
pop
add
cmp
ret
jmp
outsb
or
fs
xor
push
cmp
imul
outsb
hlt
mov
sub
std
jns
xchg
push
cwtl
movsb
mov
jmp
mov
ror
not
push
push
push
sti
es
into
push
push
in
xchg
jle
sub
fisubrs
and
xchg
test
rcrb
gs
push
jmp
lea
je
pop
out
adc
pop
jl
xor
stc
sub
mov
ret
mov
hlt
outsb
dec
cli
adc
mov
repnz
repnz
hlt
movsb
scas
mov
test
call
jmp
add
call
ljmp
mov
sbb
dec
xor
test
rol
movsb
adc
cmpsl
push
mov
fistpl
mov
xchg
in
test
push
stos
gs
pushf
xchg
add
add
jb
lds
xchg
popa
in
scas
jg
and
xchg
rcrl
add
xor
adc
mov
add
mov
je
fadds
add
xchg
xchg
clc
xchg
jmp
and
push
sub
dec
pop
xorl
inc
pushf
in
push
leave
mov
sub
nop
aaa
movsb
pop
sarb
xchg
subl
mov
mov
sbb
cmpsb
sub
cli
add
jb
mov
movq
fs
pop
outsb
fisttpll
dec
loop
jecxz
movsl
add
fcmovne
stc
jbe
cmp
xor
xorl
dec
into
push
mov
gs
inc
mov
out
aaa
popa
add
adc
mov
mov
sbb
mov
cld
mov
fcoms
daa
xchg
jnp
addr16
fisubl
sub
xchg
pop
lock
fdivl
mov
or
out
add
imulb
sbb
mull
pop
pop
loopne
enter
jb
in
sbb
aam
loope
mov
mov
cmpsl
je
dec
xchg
mov
test
adcl
push
and
mov
push
into
mov
lods
and
inc
das
fidivrl
mulb
add
aam
xchg
stos
xor
jno
lock
add
and
cmc
mov
dec
das
loop
cmp
test
pushf
pop
adc
fcoms
inc
cmpsl
cld
mov
sbb
popa
xchg
in
in
adc
and
rorb
popa
xchg
mov
loopne
sbb
rorl
xchg
mov
mov
sub
push
mov
jmp
fisubs
dec
int3
fs
lret
sbb
aaa
or
inc
rcll
xlat
cmp
cmc
sbb
inc
popf
add
insl
imul
notl
inc
pop
daa
pushf
or
dec
mov
sbb
push
cmpb
adc
std
mov
jl
outsl
clc
push
cmp
gs
xchg
jo
lea
pop
add
es
pop
mov
popf
lcall
dec
imulb
out
sbb
lret
lcall
fstl
sub
mov
cmp
add
ret
jecxz
xchg
lretw
pop
mov
mov
movsb
dec
out
adc
ja
mov
aas
inc
pop
jecxz
push
dec
and
pop
cmp
js
mov
loopne
cmc
pop
inc
cmp
outsb
pop
lahf
and
in
jg
rol
mov
inc
aaa
addb
aam
jns
inc
mov
mov
aad
iret
cwtl
mov
stos
mov
movsl
adc
sbb
xchg
stos
pushf
das
pop
jecxz
pop
imul
call
iret
adc
dec
imul
out
adc
sub
pop
mov
adc
std
mov
or
jo
inc
sbb
repnz
sbb
sti
out
jecxz
mov
xchg
fdivrs
adc
mov
jge
lret
pushf
js
loope
xchg
or
pop
cwtl
loope
sbb
test
leave
sub
lcall
cmp
xlat
xlat
test
lahf
adc
inc
adc
arpl
leave
jns
sti
dec
cld
popa
popf
mov
out
movsl
repnz
and
mov
jnp
mov
stos
mov
adc
sub
out
iret
call
ja
mov
sub
aas
jp
repz
xchg
lock
push
and
inc
pop
popl
dec
loope
mov
add
or
mov
lahf
or
push
scas
mov
xchg
mov
mov
mov
imul
out
adc
dec
arpl
xor
xchg
pop
push
jg
jbe
addr16
dec
iret
inc
jl
add
or
cmp
push
lcall
mov
cli
sbb
mov
out
sub
xor
sbb
pop
push
adc
lock
jg
in
pop
nop
cmp
xchg
outsw
dec
jp
popf
push
or
mov
cmpsb
nop
iret
mov
je
orb
cwtl
fsubs
cmp
cmc
push
negl
fdivl
adc
mov
jb
mov
pop
adcl
cld
insb
stc
in
sub
or
scas
les
ljmp
js
call
ret
jo
mov
jle
jge
fstl
or
sub
push
adc
mov
fisubrs
cmpb
int
iret
das
sub
dec
mov
jb
mov
enter
inc
mov
lea
cs
or
sbb
mov
aas
nop
call
out
pop
mov
cli
bound
mov
jnp
adc
jbe
mov
sub
or
cld
scas
fadds
dec
cmp
sub
jp
loopne
add
das
lret
sbb
cld
or
dec
jne
lret
movsb
mov
dec
cwtl
sbb
mov
fwait
pop
xor
dec
pop
ret
mov
pop
xchg
or
enter
fwait
inc
push
pop
cmpsl
pop
push
lds
xor
ret
rol
js
enter
push
mov
push
cmp
test
scas
add
jne
cmp
xchg
push
pop
aas
mov
inc
xor
or
shrd
jb
int3
pop
out
ds
xor
xor
jmp
push
mov
fidivrs
std
and
aam
jae
out
icebp
int
cmp
outsb
test
scas
mov
jg
es
and
sub
test
mov
ljmp
cmp
mov
arpl
jp
sbb
mov
mov
mov
pop
iret
sbb
xchg
test
aas
stos
adc
daa
xchg
insb
outsl
adcl
cmp
xorl
push
orb
push
in
test
sahf
call
clc
fisttpll
int
ljmp
movsl
and
lret
pop
sti
loope
sub
mov
cmp
or
in
test
or
sbb
and
popa
xlat
lcall
sub
mov
mov
outsb
loope
inc
enter
rcl
inc
inc
test
icebp
or
pop
cmpsb
mov
mov
dec
pop
or
popf
enter
jno
and
jle
ljmp
sbb
dec
mov
sbb
outsl
and
or
std
push
inc
out
jmp
nop
test
or
ffree
stc
mov
lcall
or
sub
inc
les
jg
push
cmpsl
jb
sub
cmp
loopne
and
outsl
fimull
jne
mov
cmp
lea
push
and
push
jp
movsl
loope
push
pop
sub
cmpsl
push
mov
loopne
arpl
adc
js
ja
ret
sub
cmp
mov
cmp
fwait
xor
stos
inc
mov
adc
lods
sub
popa
arpl
and
movsl
xchg
or
lcall
push
xchg
sti
pop
scas
inc
lret
std
stos
bound
pop
mov
jmp
inc
cmpb
seta
insb
shll
xchg
ret
xchg
in
loopne
ret
add
popf
pop
xchg
add
adc
cs
cmp
scas
mov
mov
rep
les
mov
push
loope
testb
loope
push
lret
aad
inc
or
mov
out
and
je
jg
lods
adc
shlb
dec
inc
add
push
mov
push
xor
dec
add
call
dec
lods
addr16
lods
pop
dec
popa
dec
cwtl
mov
pop
jp
push
in
mov
out
inc
std
fwait
xor
push
je
sbb
mov
repz
mov
nop
mov
ret
cmpsb
rep
sbb
insb
xor
dec
mov
dec
inc
test
jae
jl
mov
mov
stc
or
repnz
dec
xor
bound
sub
in
cmpsl
pop
jge
fs
std
mov
mov
jae
pop
insb
add
mov
sbb
mov
lds
sbb
cmp
pop
cmp
jnp
pusha
repz
sub
or
add
clc
gs
pop
mov
aaa
or
cmp
out
push
jle
addr16
push
lods
and
jns
pop
push
jae
dec
sbb
lock
sub
aad
xlat
sbb
lock
dec
or
inc
fsubr
mov
ret
rorb
lea
jne
add
cmp
nop
test
pop
xchg
ja
jge
dec
leave
pop
clc
cmp
push
sti
add
cltd
scas
cmp
xchg
test
std
xchg
mov
scas
or
xor
fdivs
lds
jle
dec
xchg
cld
xchg
shrb
cltd
int
xchg
std
stos
mov
outsl
jg,pn
mov
enter
pop
ret
sbb
je
or
inc
push
cwtl
push
hlt
ficomps
inc
or
into
aaa
clc
scas
xchg
in
jp
dec
sbbb
mov
enter
dec
cmpsl
out
and
push
and
in
mov
lds
fldl
cmp
pusha
mov
sub
lahf
out
andl
dec
dec
out
into
mov
mov
xor
dec
je
je
xor
sbb
mov
test
cmc
dec
loop
ret
mov
cltd
add
dec
fiadds
repz
add
jnp
aam
ljmp
test
push
push
mov
push
les
loop
enter
test
inc
fildll
daa
add
pop
ret
mov
sti
lods
pop
mul
sbb
andb
icebp
andl
mov
sub
and
xor
mov
dec
jns
push
push
sub
sti
sub
aaa
sahf
mov
test
mov
bound
out
mov
adc
cli
loopne
iret
sbb
sarb
push
ret
mov
mov
mov
icebp
pop
mov
mov
cmp
jo
nop
jle
pop
out
int3
xor
shl
inc
sub
dec
aas
popa
pop
and
cmp
and
ds
aaa
fstps
and
pop
iret
cmpl
adc
jbe
jne
mov
sub
cmp
daa
ficoml
jle
leave
add
or
push
pushf
mov
xchg
stos
mov
stos
je
dec
mov
mov
das
jle
adc
fsub
nop
mov
push
fcompl
ficoml
lock
data16
ficompl
sbb
add
fnsave
les
fwait
lahf
dec
aad
cmpsl
divl
insl
mov
cltd
insb
and
ds
mov
ljmp
lcall
aas
scas
test
add
xor
xchg
aas
mov
add
xchg
xor
aad
out
movl
mov
gs
push
xchg
push
or
fs
lret
into
dec
push
jl
ss
and
jl
jge
mov
iret
mov
xchg
pop
imull
ljmp
sub
mov
scas
jmp
mov
add
out
sbb
repnz
in
jns
shl
sub
ds
cltd
lahf
cmp
mov
pop
and
add
lods
jecxz
push
dec
cmp
xchg
sbb
adc
pop
cmpsb
lret
sub
or
cli
sbb
jp
dec
sbb
aam
vcvtss2si
sbbb
cli
lock
xor
mov
or
test
in
mov
sub
xor
enter
int3
add
cli
mov
or
stos
fdivl
out
fiadds
jl
jecxz
push
mov
ret
sbbb
arpl
and
scas
int3
sub
into
push
mov
test
dec
fisttpl
popa
dec
dec
add
pop
cs
rcl
push
dec
inc
add
cli
xorb
fmul
xchg
lea
shll
jnp
fcomps
lods
jecxz
sti
cs
into
int
outsl
sub
inc
pushf
and
mov
mov
dec
out
aas
test
decb
sub
in
mov
out
xor
stos
jge
loopne
xor
mov
into
mov
sbb
cmpsb
data16
or
jae
sbb
stos
jne,pt
or
xchg
outsb
rclb
out
jnp
push
aaa
or
or
mov
dec
pop
adc
jno
test
adc
and
pop
cmp
sbb
fisttpl
and
dec
and
push
stos
mov
sahf
sub
fsts
xor
hlt
subb
js
out
jns
mov
xor
jmp
test
movsl
or
push
jge
das
mov
sarl
into
mov
pop
je
adc
add
inc
out
ds
rorl
pushf
shl
push
mov
addb
js
popa
sbb
jae
mov
ror
sub
inc
dec
divb
test
lods
fwait
pushf
adc
pop
test
sub
out
push
outsl
ret
cmc
jg
lock
retw
cli
jg
icebp
lret
and
adc
sahf
loopne
std
inc
mov
push
test
pushf
popf
xlat
sbb
movsb
sahf
and
fs
sahf
mov
push
mov
lret
fs
cmc
lock
into
insb
scas
pop
aaa
rorl
sti
and
mov
jmp
mulb
xchg
push
aam
popf
xor
lcall
bnd
pop
and
add
filds
loopne
push
pop
cmp
add
in
out
dec
xadd
sub
dec
xor
int
sbb
movsl
jmp
hlt
mov
sbb
and
ret
sub
sbb
fisubs
xchg
xor
pop
jl
in
addr16
daa
jp
and
jae
iret
or
add
mov
sub
icebp
ret
icebp
push
inc
push
jecxz
push
adc
jne
adc
lods
pop
test
lea
arpl
je
int
pop
sub
lcall
pop
js
jmp
out
fistps
loope
xchg
inc
enter
mov
and
push
cmpsb
cmc
popa
imul
mov
pop
ds
mov
pop
mov
push
dec
stc
jne
cmc
mov
xlat
push
inc
xchg
xchg
jne
mov
sahf
shll
push
inc
add
mov
test
shlb
jo
jecxz
sub
shrb
pop
shlb
mov
aam
mov
push
int
cmp
fxam
push
add
mov
outsl
cwtl
mov
pop
scas
ficoms
call
cs
inc
ror
popa
lcall
push
dec
sti
insb
stc
fsub
leave
lock
test
arpl
shll
jno
and
shrb
xor
add
nop
fwait
addr16
aaa
mov
sti
std
fdiv
push
jmp
mov
push
pop
push
jbe
xor
mov
pop
cmpps
mov
mov
jmp
testl
aad
inc
imul
in
cmpsb
mov
fsubrp
xor
sub
mov
sub
dec
xchg
fnstcw
pop
sub
test
xchg
test
mov
mov
or
and
dec
mov
lcall
sbb
mov
or
movsb
add
xchg
cmpsb
inc
mov
shrl
faddl
mov
sub
int3
stos
xor
dec
shlb
gs
inc
mov
imul
xor
jmp
xchg
and
sub
push
cli
dec
pop
mov
lret
stc
xchg
dec
push
sub
mov
and
in
xchg
push
add
sbb
shll
cmp
cmp
lcall
mov
ret
fists
cmp
mov
cltd
ljmp
in
mov
and
cs
pop
pop
ljmp
sbb
fisubs
decb
stos
mov
cs
xchg
in
or
dec
xchg
adc
sar
insl
inc
mov
jo
test
out
in
fsubs
int
jo
mov
dec
cmp
sub
push
mov
leave
in
shrb
dec
or
pusha
push
inc
sahf
jp
rorl
mov
pop
xor
cmpsl
subb
or
sub
ficomps
pop
dec
loopne
pop
les
aad
test
enter
fldt
and
or
xchg
ljmp
cwtl
out
cld
xchg
ret
sbb
push
add
mov
std
daa
mov
sahf
sub
pop
mov
adc
and
shll
push
lahf
jo
adc
xor
das
xchg
sub
xchg
mov
dec
inc
pushl
out
lods
add
idivb
sbb
pushf
test
sbb
add
mov
mov
icebp
popf
stos
popa
and
xchg
data16
xor
add
adc
or
test
lock
in
add
std
and
loope
aad
cmpsl
movsl
sbb
dec
popa
inc
aas
add
leave
fimull
push
cmp
push
hlt
jbe
cmp
pushl
mov
fisubl
adc
inc
repnz
sbb
les
lahf
leave
int3
out
cwtl
push
loop
faddl
ds
jno
sahf
test
test
pop
sub
inc
fildl
test
or
pop
icebp
jbe
inc
push
gs
and
add
mov
pop
lahf
push
mov
push
lods
shrl
popa
inc
cmp
cmp
sub
pop
push
mov
lret
cld
sbb
pop
jb
jge
jbe
adc
mov
call
push
push
jns
sub
roll
rcll
mov
xor
dec
add
outsl
jmp
inc
sar
ret
iret
fcomps
or
adc
add
jmp
jp
dec
mov
mov
jbe
cmpsb
cmpsl
stc
dec
dec
movsl
loopne
sti
dec
inc
je
inc
adc
leave
mov
mov
dec
adc
mov
mov
lds
ja
jns
cmp
sbb
add
push
adcb
push
scas
orb
pop
mov
inc
inc
mov
jae
push
and
loop
mov
shlb
xor
mov
rorb
or
jae
mov
pop
sub
or
dec
loopne
pop
jae
lret
dec
dec
sbb
lods
mull
ljmp
xorb
les
mov
inc
hlt
jnp
in
pop
push
mov
call
fcoms
out
es
hlt
popf
pusha
call
push
dec
dec
mov
leave
in
int
mov
xchg
push
ljmp
fmuls
xor
cli
add
loop
ficoml
cmp
add
cmp
sbb
push
xchg
inc
shr
adc
adc
cli
fsubrs
inc
btr
jmp
mov
insb
mov
pop
sub
push
orb
cmp
or
lds
ja
cmpsl
aas
xchg
sbb
outsl
sbb
cmc
and
in
mov
cmp
dec
add
cwtl
dec
pop
ljmp
sub
data16
sbb
popa
fdivrs
xorl
sub
and
mov
sti
dec
or
or
adc
test
sbb
and
xlat
mov
jecxz
outsl
add
mov
pop
imul
inc
insl
loopne
das
push
lock
xor
iret
jmp
push
push
xor
mov
xchg
cmpsl
mov
aaa
arpl
andl
test
popa
in
cmp
mov
jmp
or
mov
mov
in
or
ljmp
xor
iret
ss
and
pop
scas
das
inc
mov
dec
adc
add
mov
int3
lret
shrl
mov
mov
pop
mov
icebp
repnz
jmp
fstps
sbb
mov
inc
in
stos
pop
adc
lahf
lods
pop
mov
clc
jno
cwtl
add
pop
mov
dec
andb
sub
sti
cmp
or
xchg
insb
jl
inc
push
ds
orl
addr16
fdivrs
pop
sbb
rcll
jb
xor
loope
dec
mov
ds
fwait
ljmp
popa
xchg
rcll
jle
cmp
daa
popl
xchg
ficoms
cwtl
mov
insb
add
lahf
ds
enter
stos
test
shrb
push
dec
dec
fisttpll
dec
mov
aam
mov
jns
out
icebp
adc
dec
sahf
insb
stc
dec
mov
ret
lods
and
faddl
or
sub
or
dec
aas
icebp
nop
mov
test
out
sbb
ljmp
push
jnp
outsl
das
adcl
cmpw
jp
jne
adc
jnp
fcompl
and
pusha
je
sarl
leave
jge
push
leave
adc
adcb
faddl
sbb
shrl
es
or
dec
push
sbb
dec
daa
mov
xlat
xor
jne
frstor
enter
jae
cmp
dec
outsl
jno
loop
gs
stos
cmpsl
jno
adc
popa
arpl
inc
adc
mov
mov
out
push
mov
iret
xor
test
push
push
jp
es
aas
test
inc
lcall
xchg
mov
rolb
js
popf
shlb
sub
divb
stc
adc
sbbl
icebp
xchg
fiaddl
andb
and
shrb
jle
loope
xchg
hlt
jp
or
test
in
fdivs
lds
pop
and
in
movhps
fnstenv
subb
rclb
add
jl
imul
outsb
call
or
enter
pop
xchg
push
in
xchg
sub
fbld
mov
sub
add
and
fstpt
cmpsb
xchg
lds
sbb
push
push
mov
lahf
cmp
iret
in
jne
jns
movd
cmp
cmp
scas
adc
lea
mov
xor
add
sbb
dec
outsl
daa
arpl
or
repz
add
xchg
or
pop
out
jbe
test
dec
mov
xor
movsl
mov
and
popf
xlat
pop
push
sarl
dec
jle
push
cltd
lret
cs
bound
lahf
adc
pop
xor
cmp
mov
lret
dec
mov
lahf
inc
dec
insl
scas
or
mov
xor
or
enter
out
aaa
into
fsts
cs
test
dec
cmp
jo
push
push
xor
lcall
repz
add
jg
push
and
mov
stos
inc
cmpl
loope
imulb
insl
sbb
in
add
and
call
aaa
test
sub
imul
rolb
inc
stos
inc
jo
into
lock
pop
pop
mov
fnstenv
nop
aaa
daa
int
fistps
addb
fbstp
imul
dec
jge
sub
pop
fildl
bound
nop
stos
pop
es
das
aam
fstp
fbstp
push
loopne
bound
xor
and
fmuls
mov
lods
adc
jg
dec
and
jnp
and
inc
cmp
aam
or
aas
std
xchg
push
xchg
loope
es
inc
into
out
call
ret
or
mov
bnd
and
std
icebp
push
incb
test
xchg
add
xchg
sub
sbb
repz
scas
and
mov
push
rol
lahf
gs
in
nop
lods
add
cmp
shrl
cmp
add
test
jb
ds
adc
or
movsl
sub
in
imul
rclb
sub
xlat
aas
scas
sub
enter
je
pusha
rcrb
dec
call
ficoms
push
subb
psubsb
fwait
pop
pop
adc
push
notl
mulb
stc
cmpsl
outsl
cmp
and
xor
adc
js
xchg
cmp
mov
sub
mov
loopne
mov
js
lret
xor
jae
in
mov
sti
les
mov
movsb
push
in
repz
mov
xchg
mov
dec
xor
xor
mov
xchg
ja
out
mov
and
fldt
or
dec
xor
std
jp
shlb
fxch
pop
jp
mov
repz
data16
cli
in
add
iret
jl
popf
shl
imull
xchg
les
jmp
sub
cmp
dec
imul
ds
loope
fadd
add
icebp
push
es
pop
push
push
adc
int3
sbb
jnp
outsb
push
outsb
repnz
imul
fidivs
dec
add
adc
sub
out
and
clc
std
cli
or
jo
jae
mov
leave
shr
pop
bound
loope
and
add
into
mov
loope
dec
pop
movsl
pop
add
and
stos
or
outsl
xor
cmc
lret
inc
or
pusha
rcll
repnz
scas
lgs
push
popl
xor
and
dec
xchg
push
fbstp
push
push
pop
shll
arpl
insl
popa
lods
adc
inc
mov
lds
xorb
cmp
sbb
jbe
aad
cmp
jno
popf
popa
dec
and
bound
xchg
ret
inc
std
int3
repz
mov
cs
fcompl
jle
ljmp
shll
pop
dec
cld
fidivrl
sbb
shll
push
inc
andb
cwtl
mov
add
test
nop
push
cli
and
push
test
inc
int
cmpsb
lods
sub
nop
pushf
mov
cmp
popf
sub
push
pop
popf
mov
cmp
stos
mov
xor
push
leave
faddl
fisubs
sbb
addr16
aam
mov
pop
adc
in
add
dec
cmp
mov
or
in
xchg
jne
cmp
jp
out
xchg
cmp
sarl
xor
test
popa
dec
adc
sub
movsw
pop
out
ror
xor
push
test
in
jg
adc
shr
mov
add
inc
jp
lret
orb
adc
and
roll
dec
shll
jmp
loope
imul
pop
add
iret
popa
lret
inc
dec
mov
mov
mov
push
jne
xor
mov
xchg
dec
or
ret
lods
fmuls
stos
adc
out
lret
xor
and
scas
test
push
lret
adc
aaa
es
adc
data16
dec
mov
sub
add
xchg
and
add
fstpl
jge
loope
scas
dec
push
fidivl
cltd
out
ja
lret
xor
inc
pop
jns
jmp
jns
loopne
mov
cmp
sbb
xchg
xchg
xor
push
in
mov
jb
mov
xor
mov
dec
add
dec
gs
ret
ds
or
in
shlb
mov
bound
pop
scas
sbb
cmp
jp
jnp
push
pushf
add
adc
sahf
mov
xchg
movsl
mov
xchg
seta
fs
mull
out
lret
mov
fnstsw
cmp
mov
bnd
fwait
pop
ljmp
mov
add
imul
xor
push
cmpsl
and
xchg
scas
sbb
je
xor
cmp
cmpsl
out
mov
cwtl
emms
mov
mov
sub
sub
stos
aas
ja
mov
imull
pop
jecxz
xlat
pop
mov
out
pop
push
mov
xor
pop
or
test
xchg
mov
inc
das
xlat
ret
xor
dec
dec
dec
popf
fdivp
and
jmp
ret
sub
mov
shll
idivl
aad
adc
pop
pop
mov
pop
scas
cmp
mov
js
subb
scas
xchg
and
xchg
fwait
push
jp
mov
xchg
adc
mov
sbb
out
or
pop
xchg
lret
jns
mov
jno
sbb
ljmp
aas
mov
pop
mov
mov
out
pslld
xchg
pop
pop
outsb
dec
fisttps
jle
xor
add
mov
lcall
mov
push
add
aas
out
ds
sub
js
mov
jb
cmpl
mov
pop
mov
push
out
out
enter
push
or
dec
jnp
add
std
add
xchg
sbb
mov
mov
push
ss
cli
and
and
pop
push
scas
jno
call
jae
sub
inc
jge
add
test
adc
push
xlat
mov
pop
xlat
call
in
fimull
leave
mov
or
and
and
push
jne
ret
popa
stos
xchg
movsl
add
rorb
out
sysenter
cmpsl
subb
out
pop
mov
add
and
and
hlt
push
inc
decw
mov
xor
mov
out
fs
addsubps
or
fnstenv
adc
sahf
or
aam
sbb
push
inc
mov
popl
fldcw
adc
push
sahf
sub
xor
test
sti
fistps
fwait
ja
insb
xlat
imul
sub
mov
movsl
mov
test
scas
lret
bound
imul
popf
and
arpl
adcl
inc
push
xchg
mov
mov
js
dec
lods
cmc
mov
sbb
rcl
jg
lret
xor
jmp
xchg
fbld
lret
je
push
add
mov
jge
ss
iret
xor
and
mov
sti
imulb
sbb
shr
mov
dec
rorl
sbb
in
mov
cltd
addl
inc
outsb
jmp
push
push
lret
adc
mov
mov
xchg
iret
xor
inc
ret
mov
dec
adc
inc
and
out
lret
rcr
and
adc
mov
pop
or
movsl
mov
mov
add
dec
rorb
lods
clc
out
les
ja
cmp
or
dec
pop
imul
cmp
mov
lock
pavgb
push
jmp
fdivr
aad
mov
jmp
ja
jle
lock
lods
cmpsb
lcall
inc
cmp
mov
bound
fcomps
out
sbb
data16
cmp
js
fstpt
push
movsl
outsl
push
cwtl
jae
ret
xchg
add
fsubr
and
and
hlt
in
or
jnp
sar
mov
push
cmpsb
insl
aas
daa
xchg
pop
jle
pop
inc
hlt
xchg
std
xchg
or
lret
inc
std
xchg
in
pop
sbb
mov
outsb
int3
pop
int3
jge
mov
sbb
rdmsr
movb
imul
jnp
mov
jg
and
bound
cmp
scas
out
stos
mov
or
pop
repz
jge
popf
jae
adc
or
mov
sti
xchg
fldenv
imul
insl
or
scas
in
cli
mov
imul
jl
outsb
and
bound
outsb
cmp
rorl
fistps
pop
mov
xchg
adc
test
xchg
mov
or
in
xchg
repz
sub
sbb
push
ret
mov
xor
push
jbe
inc
insb
mov
shrb
mov
lret
pop
iret
in
jg
outsl
adc
xor
sbb
cmp
mov
cmp
decl
pop
into
movsl
test
pop
cmp
push
push
popa
jecxz
pop
pop
test
inc
push
inc
jmp
in
dec
ret
gs
lods
aad
inc
mov
gs
jp
pop
jle
ljmp
loop
out
mov
cmpb
push
and
lods
addr16
jno
push
pop
sbb
lods
pop
out
push
fldenv
loop
shll
dec
xor
data16
gs
push
jmp
dec
xchg
adc
sbb
andb
dec
adcb
mov
fwait
popa
subb
mov
stos
mov
push
push
in
xchg
adc
lret
call
mov
leave
jecxz
jnp
sub
inc
sub
and
xlat
lret
js
andb
rcrl
pushf
mov
jns
add
ja
test
jo
pushf
push
das
aad
test
jbe
mov
or
pop
sbb
data16
in
xor
push
movsl
ret
pop
in
fs
inc
leave
add
mov
gs
pxor
jo
pop
dec
mov
sbb
sti
call
js
jbe
pushf
add
out
out
pop
loopne
pushf
daa
divb
pop
mov
mov
cmc
push
stc
push
push
jo
lea
cmc
adc
mov
jecxz
and
pop
jmp
lea
sub
sbb
enter
mov
jmp
inc
add
and
xor
jg
lea
idivl
imul
mov
mov
roll
xor
pop
jl
add
dec
sbb
call
cltd
or
cmp
xchg
js
lahf
mov
add
test
or
xchg
mov
inc
insl
fnstenv
mov
cmp
enter
mov
or
sub
mov
or
pusha
daa
ja
and
in
repnz
ret
stos
push
pop
insl
test
aad
mov
out
push
scas
das
dec
pop
cmpsb
and
jns
ja
mov
outsb
insb
xlat
push
and
push
out
xchg
cltd
fcomip
mov
lods
jno
push
add
call
cmp
lahf
add
int3
xor
dec
inc
xor
or
jmp
rcll
or
dec
in
add
fadds
sub
arpl
call
out
icebp
jp
sub
adc
push
mov
mov
outsb
cmp
mov
inc
add
in
add
int3
sub
in
lahf
add
add
hlt
pop
cwtl
cmp
dec
les
cmpsl
add
arpl
sub
iret
adc
mov
cmp
push
push
pop
mov
outsl
sbb
repz
lods
push
jle
fnsetpm(287
pop
xchg
or
ja
std
mov
into
daa
inc
stc
pop
in
push
xchg
adcb
std
push
hlt
or
adc
lahf
lcall
mov
sub
ret
fdivrl
pop
add
sti
mov
das
mov
xor
add
mov
mov
push
pop
mov
andb
andb
sub
adc
adc
mov
inc
push
incb
lcall
push
fwait
adc
out
pusha
and
pop
mov
inc
inc
xor
daa
or
paddusw
and
jo
test
and
cmpsb
out
iret
subl
mov
popa
adc
icebp
cmpsl
movsb
dec
xor
aaa
sar
repz
adc
data16
inc
fnstsw
push
les
sbb
xor
mov
clc
stos
xchg
push
aam
sub
popa
fdivrp
xchg
out
push
loopne
imul
pop
sub
leave
cmp
repz
les
or
cmp
or
inc
in
repnz
xchg
push
nop
push
mov
jno
pop
or
das
arpl
dec
rep
sbb
dec
dec
xchg
pop
loope
xor
xchg
cmp
ffreep
lcall
mov
mov
test
pop
mov
sbb
adc
adc
incb
adc
dec
jno
cmpsl
fisubs
in
lret
aam
sub
les
mov
lds
jns
jecxz
jg
lock
cltd
jecxz
pusha
leave
ret
andb
xor
sbb
cmp
leave
lods
outsb
int
enter
lea
adc
mov
xor
imulb
pop
lret
loope
ss
mov
fstpt
mov
in
adc
ret
insl
sub
fsubrs
xchg
es
das
loopne
mov
outsb
pop
fdivs
mov
in
adc
mov
into
add
cmp
dec
dec
out
fstpt
jnp
out
xchg
sub
xchg
inc
divl
dec
inc
mov
fucom
call
or
data16
or
arpl
mov
xor
nop
shll
jbe
push
scas
ret
lea
inc
pop
pop
and
lcall
inc
sub
je
xchg
aas
cmp
out
testl
or
pop
jae
fs
repz
clc
jne
mov
ficoms
push
jae
jp
subb
cmc
pop
push
push
incl
xlat
mov
pop
gs
jb
push
fwait
insl
out
outsl
es
xor
sbbl
xchg
lret
movl
cmc
sbb
xchg
push
call
shlb
out
xorl
push
cltd
mov
jp
dec
loopne
fnstcw
pop
mov
jae
fistl
cmp
pop
mov
push
sahf
push
mov
mov
arpl
pusha
pop
out
cmp
and
and
mov
shlb
mov
stos
lret
mov
push
jns
mov
ret
and
pop
imul
cmp
jnp
out
clc
push
push
movsb
stc
xor
sub
xor
mov
ja
jmp
inc
and
push
fistpll
xchg
xchg
fistps
lret
xchg
ljmp
rol
dec
leave
repz
mulps
dec
jmp
sub
lahf
aaa
popf
jae
push
mov
les
shlb
ret
dec
mov
adc
in
sahf
mov
lods
pushf
inc
sbb
outsl
hlt
and
aas
jge
outsb
sbb
mov
dec
mov
cmc
lds
push
xchg
xlat
insl
push
mov
pop
loopne,pn
popf
test
ds
fldcw
push
xchg
cmp
xor
and
addl
adc
icebp
imul
push
stos
push
in
mov
jge
or
int3
mov
mov
aad
ljmp
cmp
and
jp
xlat
cmp
jle
sub
xchg
jb
jnp
adc
orb
dec
dec
mov
test
fnstenv
ds
pop
mov
sub
sbb
jg
push
mov
pop
aas
pusha
sub
mov
mov
mov
or
outsb
cmp
leave
fwait
js
add
int
pop
xchg
mov
pop
push
inc
or
mov
mov
sub
mov
jae
rcl
mov
outsl
ss
xchg
mov
jo
dec
sbb
call
mov
pop
jp
xchg
addr16
mov
movsl
fcmovb
mov
popl
sbb
dec
dec
enter
mov
jne
push
sbb
jns
loop
add
dec
pushf
inc
adc
test
xor
xlat
pop
mov
xor
adc
or
stc
fistps
pop
mov
aam
sti
jecxz
cli
mov
and
fisubrl
pop
sahf
jmp
pop
fbstp
jne
and
jl
and
loopne
jno
jbe
shl
inc
push
add
repnz
xchg
mov
dec
mov
sbb
shlb
and
das
mov
call
roll
hlt
arpl
inc
mov
dec
or
mov
inc
jmp
gs
lds
mov
and
lock
xchg
jle
ror
lret
cmc
mov
xchg
mov
daa
xlat
insb
sbb
enter
sub
dec
stos
sbbl
jmp
mov
xchg
mov
aas
hlt
mov
fistps
cmc
dec
mov
inc
jb
jno
push
in
scas
jmp
mov
data16
scas
int
aas
sub
jnp
pop
test
js
jb
mov
mov
sbb
pop
jge
mov
pop
or
vcvttps2dq
xor
mov
shll
icebp
dec
cwtl
roll
jmp
xchg
fildl
cltd
cmp
cmp
popl
subl
faddl
into
cmpb
mov
cmpsl
inc
pop
loopne
mov
cmp
shlb
mov
jecxz
sbb
rolb
fidivl
dec
jmp
in
fisttps
adc
sbb
repnz
sub
rolb
rcr
orl
int3
pop
xor
popf
xchg
inc
xbegin
jbe
push
out
iret
push
add
ljmp
push
pop
push
adc
ljmp
mov
add
mov
icebp
cs
out
or
pop
movsl
mov
and
mov
lock
add
mov
mov
repnz
inc
jle
stos
inc
pop
jnp
dec
sbb
sub
xchg
outsb
mov
imul
repz
in
inc
lods
cmp
jge
xchg
js
sbb
call
jae
leave
or
or
ljmp
pop
adc
mov
mov
push
or
inc
adc
mov
mov
cld
mov
mov
jecxz
rclb
mov
add
adc
pop
or
ss
addr16
jns
xlat
add
mov
pop
into
inc
mov
and
xlat
aas
daa
mov
mov
mov
rcr
into
mov
mov
test
loop
rcrl
and
ret
or
dec
int
repnz
aad
or
in
jb
jl
xor
xor
loope
xor
popa
xor
jp
or
mov
ret
pop
scas
int
xchg
sub
mov
adc
out
in
inc
add
pop
jbe
cli
movsb
jb
add
xor
aas
rcll
inc
repz
addr16
pop
ja
jle
les
into
and
ror
and
pop
stos
jbe
scas
stos
xchg
or
ljmp
push
pop
cmp
push
push
xchg
sti
inc
into
hlt
daa
push
imul
xchg
push
xchg
repz
sbb
cmp
jnp
push
and
lret
cli
sub
push
push
inc
cmc
dec
addl
ljmp
and
inc
call
jmp
xchg
pextrw
fs
xchg
loopne
dec
loop
or
xchg
dec
inc
push
pop
pop
jns
adc
inc
js
call
xorb
mov
jbe
mov
dec
mov
movsl
out
repnz
jo
cmpb
les
imul
outsl
movsb
or
mov
out
dec
inc
insb
stos
outsb
add
or
xor
inc
adc
mov
inc
jge
or
xor
mov
test
inc
mov
mov
cmp
xlat
vunpcklps
sub
gs
mov
cmp
repnz
adc
cltd
mov
inc
movsb
shrb
iret
sub
xor
mov
pop
push
inc
mov
inc
sub
je
or
xchg
sbb
lahf
cmp
stos
cs
popf
rsm
and
orb
fldcw
out
call
jae
cld
and
or
lds
imul
pop
out
mov
into
xchg
dec
jge
pop
xor
lds
pop
or
or
aaa
lock
xor
inc
dec
sub
xorb
push
sub
jg
lret
mov
mov
hlt
ja
mov
ljmp
fcoml
sub
mov
mov
in
inc
std
jns
pop
xor
and
outsb
jmp
sahf
setbe
inc
fstl
je,pt
rcrb
mov
xchg
dec
xor
cli
mov
mov
stos
pop
or
sub
rolb
push
insb
jb
rep
jl
adc
popf
in
movsb
out
scas
or
rclb
dec
das
or
cmp
pop
sti
nop
pop
add
test
xchg
or
test
xlat
stos
cs
sub
sarb
idiv
mov
jne
scas
pop
xchg
filds
lock
mov
add
clc
pop
aaa
cwtl
mov
sbb
out
and
and
sahf
sti
mov
cmc
or
lea
dec
jo
stos
push
lahf
jl
lods
dec
cli
ljmp
ret
push
mov
adc
fstpl
andb
xchg
pop
pop
frstor
push
xor
rcll
aam
movb
in
mov
lods
xor
pushf
mov
mov
mov
repz
out
sbb
loop
jl
repnz
enter
test
rol
mov
andl
mov
jge
imul
cmp
fwait
shlb
inc
aad
and
cld
mov
mov
jmp
cmpsl
sub
pop
lret
sahf
shrl
pop
mov
or
and
mov
mov
add
psrlw
les
fadd
cli
sbb
into
lds
andl
xor
xchg
cs
xor
jle
fwait
ljmp
mov
jp
jo
xchg
lahf
xlat
je
push
mov
inc
sub
mov
mov
xchg
mov
stc
xor
jb
stos
sbb
movsl
mov
out
push
mov
inc
out
fists
std
or
call
xchg
mov
in
pop
mov
cmp
fcmovnbe
xchg
repnz
daa
ret
xor
ret
jo
in
ss
push
mull
cli
ja
adc
sbb
popf
sbb
in
push
jl
ja
mov
js
mov
cld
xchg
xor
dec
lods
xchg
test
andl
hlt
dec
push
adc
arpl
pop
inc
loop
dec
mov
jge
loope
les
fldenv
xchg
or
xchg
pop
mov
sarl
sbb
fdivr
gs
xchg
addr16
push
sub
mov
scas
rclb
add
push
lods
ljmp
je
sarb
fcomps
pop
incl
xchg
pop
subl
adc
or
mov
push
adc
mov
test
lock
loope
andl
or
cmp
ljmp
cli
mov
out
push
pop
push
mov
lods
xor
stos
adc
mov
repz
test
pop
dec
add
mov
outsb
fmul
loop
inc
std
addps
scas
jnp
incb
dec
or
sub
pop
xor
mov
jp
sub
dec
ljmp
adc
daa
lock
inc
inc
mov
inc
ret
mov
xlat
sub
lds
jns
lret
sub
push
inc
sarb
pop
int
faddp
push
addb
jl
flds
scas
mov
das
bswap
dec
or
inc
add
test
loop
cld
in
sahf
mov
xor
arpl
pop
inc
aas
mov
shrl
jg
insb
adc
icebp
adc
and
scas
inc
adc
ffreep
sbb
push
mov
cmp
bound
jp
dec
jb
in
and
or
fcmovb
jge
adc
xchg
data16
cwtl
sub
cmc
push
test
fcompl
mov
ss
add
adc
push
xchg
notl
jle
sbb
xchg
out
jne
mov
jge
sbb
lret
adc
rorl
xor
pushf
push
pop
aas
mov
insb
jns
xchg
fistl
inc
sbb
sub
add
fildl
xchg
fistps
int3
pop
fisubs
dec
xorl
jl
xchg
lcall
cwtl
into
out
sbbb
aad
jne
shll
mov
mov
cmc
std
pop
mov
xchg
jmp
adc
addr16
cmpsl
xchg
mov
cwtl
jge
mov
cmpsb
jmp
sbb
dec
mov
jns
es
sub
push
xchg
test
cmc
leave
cmp
or
mov
pop
pop
adc
ss
insl
mov
test
cmp
aam
mov
scas
int3
sarl
clc
jecxz
pop
bnd
inc
iret
pop
jne
sbb
mov
add
cmpsb
xor
std
sti
push
insb
jecxz
jge
mov
adc
movsb
or
adc
bswap
xor
pop
dec
js
inc
mov
mov
call
push
lods
jmp
adc
cltd
int3
jns
cmp
pop
dec
mov
test
pop
in
push
dec
andb
mov
mov
lret
inc
cmp
int
call
sub
mov
jecxz
in
push
and
add
cli
ljmp
dec
int3
mov
arpl
inc
aad
push
xchg
cli
mov
lods
clc
jmp
mov
stos
inc
sbb
hlt
stc
lods
sbb
outsb
cmpsb
mov
in
mov
gs
inc
mov
inc
repz
and
jns
xchg
add
adc
mov
dec
hlt
dec
int
inc
fimuls
fnstsw
xor
mov
jmp
mov
mov
shrl
subb
into
out
jg
ss
lds
dec
xchg
mov
mov
into
loope
jecxz
jp
rorb
push
dec
dec
data16
push
mov
call
inc
mov
adc
imul
test
rorl
and
lret
dec
jg
add
pop
sub
loop
insl
xchg
stos
dec
into
add
lahf
test
inc
and
in
jle
mov
subl
xor
std
repz
cmp
imul
mov
inc
cltd
movsb
pop
dec
fcompl
mov
inc
cmpsl
leave
aam
jp
dec
ret
cmp
outsb
xchg
cli
xchg
push
xchg
in
or
mov
dec
aas
iret
int3
mov
xor
push
and
cld
js
and
sbb
stos
xchg
lret
ret
cmp
mov
mov
push
fs
push
out
xchg
repnz
clc
fwait
or
push
xor
iret
dec
sbb
xchg
and
dec
out
addr16
enter
mov
je
sub
pop
sbbl
nop
pop
test
negb
pop
test
jecxz
cmp
sahf
scas
insl
inc
pop
inc
sbb
mov
xchg
test
je
xor
sbb
adc
mov
sbb
adc
mov
mov
rol
push
loope
ret
jnp
imul
cmp
xchg
lcall
inc
les
inc
jge
sbb
sbb
aam
daa
lods
clc
pop
rclb
negl
jae
repz
xor
or
add
pop
pop
pop
scas
or
xchg
je
leave
testb
add
jae
in
pop
aam
jo
and
add
aad
dec
in
xor
fcompl
xchg
out
and
stos
test
xchg
cld
cwtl
pop
fdivrl
imul
fxch
adc
add
sbb
mov
inc
mov
dec
dec
gs
xchg
xor
fists
popf
into
in
subl
shrb
lret
pop
cmp
cmpsl
jns
rcrb
mov
stos
sub
or
rorl
arpl
cmc
jne
lret
and
lods
cmpb
rcl
lret
je
mov
call
cmp
fs
push
xchg
jmp
jo
mov
es
jne
cmc
cli
ror
outsl
cmpl
cmp
loop
sbb
lods
inc
or
add
pop
jmp
pop
mov
mov
lods
scas
sub
icebp
cmpsl
xchg
lcall
arpl
int
incb
mov
arpl
jg
cmp
push
sar
leave
fs
push
and
sbb
les
fmul
mov
sub
hlt
daa
adc
jmp
xchg
lock
dec
sub
jbe
xchg
rorl
add
call
ret
add
imull
hlt
adc
xchg
aas
stos
into
icebp
in
in
andl
cwtl
call
mov
arpl
sub
incl
cld
inc
push
clc
mov
mov
negb
push
or
jg
fcomps
or
scas
pop
or
rolb
mov
ja
mov
jbe
mov
mov
inc
xor
sbb
enter
and
insl
clc
mov
pop
fmull
daa
mov
push
in
mov
dec
cli
xorl
pop
pushf
icebp
cmp
xchg
cli
or
mov
cld
call
add
bound
in
inc
imul
ret
inc
stos
andl
cmp
pop
pop
lret
add
es
mov
dec
and
and
es
jno
mov
or
mov
mov
mov
cmp
andb
jmp
nop
mov
push
mov
repz
cmp
test
or
insb
mov
cmp
enter
jl
or
or
lret
push
push
pop
sahf
mov
mov
imul
cmp
test
mov
mov
mov
rcl
mov
fcmovnbe
lret
sub
loopne
sub
push
lahf
hlt
pusha
xor
and
sahf
imul
or
xor
and
lret
mov
adc
push
pop
push
pop
lds
aam
nop
loopne
insb
enter
xchg
jl
mov
addr16
and
int
pop
cmpsb
aam
icebp
mov
int
rorb
scas
cmp
push
loopne
add
ret
in
pop
xor
in
dec
mov
and
into
cmp
jae
bnd
jns
stos
dec
xlat
stc
loope
stos
sub
test
ret
pop
or
or
push
or
adc
loop
sub
lds
jo
ret
inc
mov
fs
call
int
dec
insb
pop
sub
push
sbb
and
adc
mov
push
jle
or
xchg
pushf
ja
xchg
xlat
gs
test
les
outsb
loope
pop
insl
dec
cli
jge
je
ror
rcrb
or
xchg
es
cmp
in
popa
cmpsl
dec
xor
xor
testl
je
dec
ss
test
sahf
rcrb
mov
push
gs
sbb
mov
in
xchg
rorl
xor
lahf
push
stos
pusha
and
aaa
mov
jle
push
jecxz
mov
mov
cs
idivl
or
xchg
push
mov
aam
jp
jmp
loop
popa
inc
imul
mov
mov
cltd
cmpsb
mov
adc
ret
jge
or
sbb
xchg
pusha
gs
fsts
adc
sbb
sbb
mov
push
aad
int
bound
dec
push
mov
addr16
dec
sub
iret
mov
sub
push
and
cli
ds
inc
pop
xchg
jo
adc
sbb
fsubl
test
es
movsb
jb
negl
inc
jmp
inc
cmpsb
jge
sub
mov
aas
push
sbb
shrb
jg
mov
in
push
loopne
xchg
cmc
xor
into
sbb
fcoms
iret
mov
iret
push
sub
fs
scas
gs
sarl
pusha
xor
cmc
addb
xor
or
ffreep
mov
adc
scas
push
fs
push
shlb
xor
add
or
out
fisubrs
fidivrs
mov
push
pop
fldt
dec
add
push
orl
bound
mov
dec
push
or
dec
mov
xor
icebp
xchg
je
inc
fmuls
call
or
int3
pop
dec
inc
push
lea
inc
and
imul
movsl
cmpsb
mov
jo
push
inc
test
aas
pushf
lret
les
and
dec
test
xchg
adc
pop
or
jb
aad
push
rolb
xchg
mov
cmp
sbb
iret
or
cmp
arpl
add
xchg
loopne
cmp
lea
cltd
popa
or
mov
jbe
add
repnz
adc
lahf
xchg
mov
pop
bound
leave
cmp
sub
das
push
or
in
or
rcl
sbb
pop
outsl
daa
sbb
mov
xchg
popf
mov
sub
mov
rorb
jbe
sbb
push
or
pop
test
gs
xor
test
inc
fidivrl
or
divl
inc
testl
movsl
rcrb
cmpsl
lds
mov
pop
fxch
xlat
rcr
movsl
ret
pop
cltd
dec
mov
insl
dec
ja
push
xchg
xchg
xchg
push
mov
push
das
cli
sbb
mov
jns
sbb
pop
adc
and
and
lret
cmp
test
xchg
jo
int
adc
mov
ljmp
or
fwait
mov
push
sbb
cmpsl
clc
mov
daa
dec
cmp
dec
pop
cmc
cld
xor
int3
es
jp
testb
jns
jmp
xlat
jge
call
and
inc
sbb
inc
add
adc
mov
sub
push
jb
xchg
pop
push
push
jmp
add
xchg
std
clc
clc
push
mov
cwtl
sahf
xchg
xorl
cmpsl
mov
lods
pop
and
sub
push
mov
stos
dec
jl
add
mov
int
lret
mov
inc
mov
orb
cld
out
sahf
pop
sbb
loopne
xor
mov
and
lahf
or
cmp
int
pusha
ds
xchg
jnp
rorl
into
fisttps
lret
pusha
ss
push
scas
xor
sbb
gs
aas
fidivs
call
dec
adc
adc
mov
mov
popa
push
xlat
popf
xchg
shrb
and
lock
loopne
and
pop
cmp
outsb
test
ja
xchg
push
push
cmp
lret
xor
mov
inc
daa
and
pop
and
push
fbstp
subb
adc
jne
and
xchg
push
fbld
inc
mov
sub
mov
clc
bound
push
push
or
mov
push
mov
stc
adc
push
call
scas
xchg
scas
aas
loope
push
lea
jne
jge,pn
ja
nop
sub
out
jge
lock
dec
stos
mov
adc
inc
add
lret
jns
ffree
push
inc
js
in
mov
cli
xlat
out
and
lock
notl
mov
shlb
in
mov
jle
movsb
idiv
xchg
sarl
sahf
jp
gs
cmp
mov
inc
aam
push
pop
insl
addr16
sbb
clc
mov
in
sub
cld
jno
add
cmpb
mov
sub
mov
aam
and
js
jmp
std
ss
roll
sub
push
sbbb
jg
mov
or
mov
pop
and
lods
mov
add
inc
jo
xor
mov
mov
push
mov
test
stc
push
pop
xchg
fisttps
add
test
sbb
mull
xor
imul
jnp
fnstsw
sub
pop
icebp
sub
jbe
movsl
cmp
fisubl
call
inc
cmpsb
sub
int
in
or
sub
bound
call
test
xchg
fwait
shl
sahf
adc
lock
dec
mov
jecxz
cmp
bound
pop
xlat
inc
popf
dec
icebp
adc
adc
int3
mov
xor
aad
andb
jl
fdivrs
xor
movsb
xor
popl
and
xor
int
inc
jmp
cmp
xchg
subl
cmpsb
fwait
lds
sbb
out
ja
cld
mov
repnz
daa
jo
shll
call
sub
dec
cltd
push
cld
or
in
push
popf
mov
ficompl
dec
test
bound
cltd
mov
push
adc
fstps
pop
or
inc
push
sub
adc
lods
cmp
leave
inc
popf
aaa
xchg
rcrl
aas
cmp
mov
jns
inc
fsubl
and
mov
aam
imul
push
stos
enter
xor
je
mov
inc
add
jo
adc
mov
push
sti
or
arpl
push
xor
xchg
imul
int3
stos
pushf
clc
inc
mov
jp
add
pop
cmp
imul
mov
fwait
lret
movl
stos
das
dec
sbbl
sbb
dec
or
adcb
xrelease
fcoml
fstps
inc
push
std
int3
scas
xor
ja
fcomps
adc
jbe
enter
xor
sbb
inc
inc
mov
insl
scas
xchg
sub
aas
lods
imul
leave
scas
call
mov
mov
mov
jne
sarb
ret
xor
fwait
mov
xchg
push
fistpll
cltd
push
in
pop
pop
std
insb
fstps
mov
cmp
inc
ror
je
ljmp
mov
mov
pop
fs
or
mov
add
mov
sub
and
int
lret
ljmp
clc
sub
dec
out
inc
into
dec
mov
adc
cli
repnz
add
fisubl
popa
dec
aas
pop
inc
out
xlat
mov
pop
add
or
outsb
pushf
fwait
clc
inc
or
addr16
in
shl
mov
mov
mov
ret
shrl
mov
or
or
pushf
fistpll
addr16
inc
data16
das
cltd
rcr
test
adc
jle
mov
xchg
push
pop
mov
and
cmp
aam
add
and
fcmove
lods
push
cs
subl
add
imul
jmp
adc
arpl
jmp
mov
scas
mov
jo
sbb
mov
or
adc
scas
loope
xor
outsl
jecxz
pop
loope
or
pop
adcl
aaa
mov
push
jno
push
add
sti
lahf
int
jecxz
push
jne
mov
movsl
cmpsl
cltd
pop
mov
arpl
into
ljmp
mov
cmp
loop
xchg
jae
jae
lock
add
cmp
call
data16
xchg
sbb
add
adc
mov
mov
mov
jge
xchg
mov
mov
pop
mov
jnp
movsb
dec
faddp
pop
loope
inc
jp
cmpsb
shll
jns
cmp
push
inc
aad
add
std
jmp
imul
dec
jmp
add
cltd
aaa
and
inc
jg
jle
int
stc
mov
jmp
sub
jbe
jmp
pop
pushf
jge
pop
or
sub
cmp
popa
xchg
sub
loope
push
dec
insb
pusha
pop
dec
notb
pop
xchg
sbb
in
xchg
adc
adc
clc
fldcw
test
mov
push
jb
test
fsubl
add
jp
cmp
lcall
pushf
loopne
xchg
adc
xor
jns
scas
dec
rorl
sbb
dec
clc
sub
sbb
outsl
mov
pop
shrw
xor
ds
jmp
dec
jnp
shr
into
jecxz
bound
das
mov
mov
sbbb
andl
mov
pop
xchg
sbb
push
dec
xor
stos
or
popf
fcompl
sahf
test
mov
sbb
sbb
cmpsb
test
pop
jns
jge
aad
mov
ret
mov
add
jnp
and
push
jnp
gs
mov
dec
gs
or
cwtl
lds
clc
and
push
sbbl
mov
pop
mov
inc
add
loopne
stc
dec
push
adc
or
mov
sbb
bound
daa
inc
inc
pop
in
push
das
or
cmpsl
loopne
adc
mov
push
jl
shll
fsubrl
xchg
pop
cli
and
sub
aad
scas
pop
or
in
sbb
std
and
jg
iret
out
cmp
pop
fidivs
xor
or
fists
outsb
jmp
iret
in
push
std
insb
adc
inc
icebp
pop
insl
pop
aad
mov
jmp
mov
cmp
pop
sub
add
ret
mov
cmp
loop
adc
mov
movsl
stos
or
insb
push
lock
push
dec
jg
mov
sarb
or
enter
jp
pop
jmp
adc
adc
and
pop
test
inc
pop
fisttpll
arpl
add
mov
or
jb
cmp
cmp
push
push
xlat
aaa
mov
push
pop
or
shlb
inc
movsl
or
fidivl
data16
push
in
pop
mov
add
sub
sub
imull
push
ret
out
jle
push
cltd
mov
lret
dec
sub
ljmp
cmp
lods
adc
jae
xchg
push
mov
mov
outsl
push
xor
rcrb
aam
pop
call
daa
cmp
dec
adc
xchg
jb
js
cmpsl
out
xchg
sbb
lds
ret
loope
pop
ss
out
or
cltd
in
dec
call
arpl
je
and
xor
push
mov
jae
push
les
lea
das
xor
ret
enter
aaa
sub
sbb
xchg
sub
mov
push
mov
sub
pop
pushf
sti
jge
rorl
push
push
sbb
in
movsb
iret
repz
fldcw
sahf
pop
lret
xchg
imul
sahf
pusha
mov
and
les
push
xor
inc
je
mov
mov
fnstsw
jo
push
dec
xchg
push
test
sbb
mov
xchg
cld
lahf
jns
sbb
add
fnstcw
ss
add
lret
push
es
outsb
addl
adc
repnz
cmp
sbb
add
pop
sbb
xlat
inc
pop
je
pop
pop
in
or
insl
loop
jae
push
jg
jmp
stos
pop
test
dec
icebp
fstl
cs
fcos
stos
sbb
and
jmp
out
cmp
fimuls
leave
aam
sub
fwait
aaa
shlb
js
dec
outsb
flds
mov
aad
bound
mov
out
fadds
lods
jg
pop
sbb
cmp
pop
pop
out
adc
dec
mov
mov
xlat
add
pop
fdiv
or
test
xor
mov
mov
jmp
decb
jmp
mov
mov
mov
jecxz
xchg
push
out
mov
pop
push
mov
rorl
and
jecxz
and
inc
shr
shlb
jecxz
inc
gs
push
mov
pop
push
jmp
dec
cld
jno
jns
es
add
xor
push
cmp
stos
mov
jns
mov
mov
cmp
dec
sahf
loopne
jne
rcll
dec
inc
aaa
dec
outsb
or
push
rclb
lods
mov
outsb
pop
cmp
cmpsl
pop
test
popf
or
stos
cmpsb
add
adc
lcall
stc
imul
pop
pop
xchg
xor
xlat
imul
or
shlb
leave
sbb
mov
pop
inc
push
rcrb
push
aaa
inc
jae
cmp
jno
mov
xchg
mov
mov
or
out
push
inc
sub
rorb
loop
cmp
dec
mov
adc
into
lds
fistps
ja
out
cmp
int3
pop
in
mov
je
shll
push
mov
dec
arpl
sbb
test
fmul
fldl
shl
shlb
stos
mov
popf
cmpl
cmp
outsl
stos
loop
pop
iret
lret
mov
mov
inc
xchg
adcl
cmp
inc
mov
mov
push
ja
mov
int
mov
mov
int3
sub
std
test
sub
cmp
outsl
inc
mov
hlt
xchg
ljmp
mov
sub
xor
push
enter
es
rclb
and
inc
cmp
es
cmc
jg
xchg
out
dec
and
dec
jge
adc
jge
jge
sub
mov
aad
mov
sarb
xchg
mov
jne
loope
mov
mov
notl
lods
pop
in
gs
gs
cmp
repz
fmul
adc
lds
or
xlat
repz
pop
scas
mov
in
jge
or
sub
push
mov
sbb
pop
xor
mov
or
sbb
xlat
sub
scas
rol
ds
cmp
or
push
mov
test
jp
jo
fimuls
add
stc
xchg
cmp
mov
ret
loop
add
flds
mov
aad
xor
in
sbb
aad
inc
lods
mov
fmuls
imul
sbb
inc
data16
icebp
xchg
hlt
repnz
pushf
sub
into
push
int3
shr
cmc
dec
sbb
ja
jb
sub
adc
adc
imul
stc
flds
test
mov
adc
fs
adc
rcrl
sub
lret
shll
pop
insl
jge
test
jge
inc
xchg
xor
movsb
iret
sub
in
mov
mov
test
mov
nop
jbe
fiaddl
jp
ret
jb
jge
xor
imul
push
mov
jo
clc
stos
div
mov
sbb
push
lock
mov
in
in
out
xor
push
sbb
sub
add
ja
mov
clc
lds
and
xor
jnp
stc
in
push
jb
push
inc
outsl
gs
push
dec
and
pop
dec
scas
ret
loop
xor
dec
cmc
lret
push
icebp
std
and
mov
add
cmpsb
cmp
sbb
cmp
lahf
push
xor
outsb
push
mov
sub
xor
popf
and
dec
scas
xor
mov
jg
in
bound
xorb
adc
xor
mov
cltd
add
roll
sub
mov
loope
fcomip
mov
sbb
in
hlt
lret
jb
dec
sahf
loope
es
jle
pop
insb
cmp
testb
shrb
mov
lea
inc
pop
repnz
sbb
mov
je
rcr
mov
imul
cmp
xor
jge
je
mov
fidivl
mov
insl
movsb
cmp
out
daa
mov
and
mov
sahf
popa
enter
and
sti
scas
es
shlb
addr16
sub
or
stos
ljmp
or
addr16
into
sbb
imul
xchg
stos
incb
adc
test
mov
pop
mov
sub
loopne
or
mov
push
jl
cltd
mov
orb
dec
test
pop
dec
repnz
ficoms
xchg
aaa
repz
mov
xor
add
sbb
mov
call
jp
hlt
cld
cmp
out
ja
in
mov
dec
ds
lods
pop
shr
test
cwtl
insl
sahf
sarb
jnp
fiaddl
xor
aaa
mov
stos
lea
sbbl
xor
hlt
imul
or
nop
mov
lcall
loopne
loope
stc
sub
shll
add
call
cmp
mov
out
pop
sbbb
cmp
pop
mov
push
test
es
in
add
xchg
stos
flds
ja
outsb
xor
push
mov
lods
orb
pop
stos
lods
pop
push
dec
fildl
fwait
pop
mov
insl
aas
inc
inc
mov
pop
hlt
sub
rolb
hlt
scas
sub
cld
stc
pop
stos
add
jbe
dec
pop
jnp
adc
sbb
rcrl
cmp
stos
jae
loope
mov
push
add
cltd
je
je
and
xor
pop
ret
mov
mov
lds
adc
call
push
mov
loop
dec
scas
fsubs
pusha
inc
dec
pop
jns
daa
pop
loope
xchg
push
aas
cmpsl
test
dec
xor
pop
lock
ljmp
dec
mov
es
pop
loop
es
mov
ja
in
mov
or
ss
daa
ja
lret
addb
je
pushf
lock
imul
and
push
testl
in
inc
out
pop
hlt
xor
ror
cmpsb
dec
push
bound
ret
pop
mov
and
push
pop
xchg
pop
and
cld
jmp
popa
sbb
sbb
pop
push
add
mov
movsl
ss
hlt
cltd
xlat
int
inc
pop
cmp
outsl
xor
out
test
mov
call
cmc
xchg
push
call
xchg
jnp
mulb
fsub
clc
push
push
lcall
idivb
or
leave
gs
dec
jns
inc
cmc
imul
sti
sub
mov
hlt
mov
push
jl
icebp
lds
imul
movsb
iret
jo
inc
aaa
jecxz
add
insb
addr16
dec
xor
pop
stos
mov
inc
cmp
push
mov
adc
adc
add
std
mov
out
leave
xchg
testb
inc
pop
loop
dec
jg
shl
jp
push
sub
inc
mov
pop
or
lret
dec
cmp
mov
mov
int3
mov
sahf
cmp
subl
pop
ljmp
xchg
sub
ljmp
mov
imul
fisubrl
inc
je
and
inc
dec
imul
gs
test
lea
pop
sbb
cmpsb
clc
loop
repz
cmpsb
mov
jecxz
stos
cmp
scas
adc
fnstsw
inc
call
fs
shl
inc
out
xor
lds
jecxz
cs
cli
std
popf
mov
or
sbb
pop
inc
pop
xchg
loope
test
dec
mov
adc
mov
je
call
in
jae
fcoms
cli
scas
adc
mov
je
mov
das
adc
adc
mov
push
out
aaa
sbb
scas
add
sahf
das
lret
pop
xchg
sbb
pop
push
mov
mov
jle
fidivrl
adc
sub
sti
daa
jg
pop
mov
push
xchg
scas
mov
lretw
je
popa
jb
xor
int3
mov
inc
or
pop
and
out
lret
stos
fmulp
notb
adc
add
out
out
lods
sarl
test
pop
adc
dec
xchg
out
add
mov
aas
add
pop
iret
in
jg
mov
or
imul
adc
leave
or
cmp
sbb
pop
push
sbb
mov
decl
inc
push
mov
or
in
orb
mov
mov
ljmp
std
jle
lret
xchg
pop
cld
shlb
sub
xchg
addr16
inc
inc
dec
cmp
pop
adc
ret
adc
pusha
adc
xchg
and
pop
mov
dec
pop
sub
and
dec
jns
js
test
ss
xchg
decb
add
aas
cmp
inc
lods
sub
outsb
mov
aad
cltd
in
or
add
rcl
into
pop
and
fldl
hlt
sahf
sti
enter
add
in
xchg
mov
nop
stc
in
daa
and
test
lods
ljmp
and
mov
scas
mov
jb
ds
or
js
rcl
enter
gs
sbb
sbb
and
mov
sti
in
xchg
movsl
repz
insl
loop
push
icebp
mov
pop
add
mov
xchg
movsb
push
mov
pop
sbb
pop
xor
and
mov
cltd
xor
sti
and
jl
push
mov
push
movsb
roll
lods
dec
movsb
mov
fstl
in
pushf
popf
sub
ljmp
lock
xchg
pop
add
xchg
lods
sbb
dec
data16
es
mov
or
inc
or
sbb
fisubrl
aam
sub
gs
push
mov
and
dec
daa
lods
xchg
dec
jae
inc
jp
cmp
ss
sub
sar
push
pop
imul
iret
and
xchg
xchg
or
inc
je
add
sub
dec
cltd
test
mov
js
pop
test
negb
out
in
push
push
fcmovnb
push
movsb
sbb
gs
cmp
add
cmc
mov
push
int3
or
pusha
lcall
sbb
dec
inc
out
jo
hlt
daa
daa
lret
aam
dec
jge
adcb
ret
sti
cmp
inc
popf
fiadds
pop
inc
jne
lahf
test
adc
mov
dec
faddp
mov
nop
pop
test
mov
divb
jnp
push
xchg
enter
mov
sbb
inc
mov
jle
mov
test
stos
jbe
mov
inc
scas
sub
ss
std
mov
inc
mov
cmc
sti
out
sub
mov
pop
or
adc
fcompl
cmovb
mov
xor
jne
push
pop
cmp
ja
mov
jne
imul
jne
jge
ljmp
call
mov
ja
sahf
popf
and
dec
notl
mov
jg
sbb
cmp
add
mov
adc
je
push
stos
movsl
pop
cmpsl
das
jge
adc
cmc
addr16
enter
mov
ss
inc
lock
push
sahf
test
imul
arpl
cli
int
push
push
insl
sti
mov
cltd
sarb
sub
cmp
pop
xchg
sbb
rdmsr
cmp
insl
data16
push
popf
sarl
in
and
inc
repnz
sbb
cmp
xchg
cmp
mov
dec
mov
comiss
insl
cmp
mov
idivl
or
jge
xchg
sub
std
enter
data16
call
sub
test
mov
cmpsl
cltd
xchg
add
dec
shlb
pushf
fwait
dec
imul
stos
scas
push
fwait
adc
sub
jmp
dec
inc
push
shrl
aas
roll
lock
sbb
out
insb
adc
mov
jb
or
fs
mov
xchg
xor
push
fs
jnp
jmp
add
inc
mov
sarl
inc
mov
idivb
or
cmp
add
sbb
ljmp
push
mov
repnz
movsl
enter
jbe
add
andl
or
stc
push
cmp
lds
out
out
es
insb
push
pop
push
sbb
mov
sti
sub
pushf
cli
daa
es
divl
push
xor
xor
and
ret
add
stos
leave
adc
sahf
jge
or
push
leave
idivl
xchg
sub
inc
rcr
pop
and
bound
out
adc
mov
mov
out
ja
mov
adc
or
xor
xchg
out
jp
and
jmp
cmp
rol
and
daa
sub
or
push
pop
xchg
loope
cs
sub
and
or
push
and
jp
mov
push
sbb
hlt
mov
jb
in
jae
push
aaa
inc
jg
imul
adc
imul
ret
jle
xchg
pop
lds
clc
xchg
mov
mov
dec
lock
or
jb
jmp
mov
xor
ss
fdivrl
jge
mov
andl
jecxz
inc
rcrb
in
scas
pusha
xchg
inc
or
dec
adcb
adc
jecxz
mov
pop
call
mov
xchg
stc
xchg
out
and
inc
fs
rcrl
mov
and
into
mov
outsl
push
data16
iret
dec
mov
push
inc
xlat
fwait
aaa
sub
jge
sbb
je
dec
sub
cmp
mov
xor
lds
fcmovnb
push
repnz
call
dec
pop
push
pop
or
push
sbb
rorb
stc
repz
ret
leave
jae
jge
mov
popa
pop
rcl
add
pop
pop
inc
lret
or
sbb
out
gs
int
lods
push
aaa
add
sbbb
and
in
mov
das
stos
repz
pop
ljmp
test
mov
dec
ljmp
pushf
pop
jp
mov
incl
ret
sarl
pop
adc
sub
and
mov
jae
xor
push
inc
cmc
pop
sbbb
divl
mov
adcl
mov
or
idivb
out
mov
ret
xchg
jmp
mov
mov
scas
push
adc
lcall
push
test
aam
adc
cltd
fldenv
push
mov
loope
aas
and
and
mov
pop
pop
lock
push
lds
xchg
inc
mov
inc
cmp
loope
xchg
jecxz
scas
cmp
xchg
out
mov
cmp
subl
lock
push
push
mov
sub
mov
jb
out
movl
lret
xchg
or
or
push
lret
daa
mov
lret
push
jne
cli
mov
xchg
insl
or
adc
scas
xchg
pop
push
dec
test
in
and
cld
cmp
lret
mov
call
sbb
inc
cmp
mov
aaa
outsl
movsl
pop
mov
push
in
xchg
jns
into
jae
test
movsb
xor
cmpsb
pop
sub
stos
cmpsb
xchg
mov
cmpl
mov
stc
insl
nop
sar
inc
adcl
dec
lock
mov
sar
fadds
bound
or
cli
sbb
jge
mov
sub
arpl
pop
daa
add
push
push
inc
inc
pop
adc
add
aas
inc
xchg
incb
xchg
sbb
mov
mov
sub
mov
adc
js
xor
arpl
ret
das
stc
xor
daa
or
adc
dec
cli
dec
push
dec
and
jge
pop
stos
xor
and
jb
clc
mov
xor
fsubl
pop
lret
test
ljmp
out
sbb
jle
pop
sahf
mov
mov
sub
add
push
push
lcall
sub
fadd
insl
sub
pop
push
leave
lds
sahf
movsl
jge
mov
mov
mov
test
stos
cwtl
jp
sub
clc
lret
jnp
cmpsl
aam
push
movsl
push
add
adc
fldl2t
push
fistl
pop
xchg
mov
mov
cmp
sbb
cmc
cli
add
inc
in
pushf
aaa
shlb
leave
add
test
fadd
shlb
shrb
leave
add
cld
cld
outsl
or
sub
das
aaa
cmp
mov
xchg
jae
push
jmp
xor
mov
lods
jns
iret
jg
inc
stc
sbb
sub
jg
cmc
dec
in
out
out
push
jp
pop
je
sbb
aas
shr
xchg
dec
pop
push
or
cmpb
and
xor
and
jae
test
inc
ss
xchg
xlat
push
ds
in
mov
push
add
test
mov
iret
pop
adc
mov
mov
adc
sub
lret
imul
and
hlt
test
xlat
xchg
sbb
cmpl
cwtl
nop
imul
out
out
rclb
pop
cmp
cmp
in
rcl
mov
push
mov
int3
xor
sarb
mov
les
push
add
out
outsb
adc
mov
je
jp
mov
push
subb
mov
mov
gs
stos
in
je
nop
pushf
fwait
into
and
and
lods
mov
or
mov
mov
add
inc
test
hlt
sbb
mov
imul
insl
stc
jmp
or
mov
mov
lret
mov
movb
dec
or
lds
mov
jnp
or
mov
cltd
or
ja
mov
inc
sbb
cmp
pop
and
inc
fimull
gs
or
lds
mov
cli
push
push
fcom
jge
ja
icebp
jns
insl
jle
pop
fdivp
fs
lret
ljmp
and
int3
dec
jnp
cltd
push
test
xchg
adc
sbb
arpl
adc
ret
fs
clc
push
test
cs
dec
cmp
inc
repnz
sub
imul
lods
daa
mov
inc
test
push
popa
and
cltd
pusha
add
mov
nop
dec
test
cmp
stos
in
xor
push
dec
mov
mov
sbb
mov
inc
mov
cltd
imul
pop
pop
fisubrl
xchg
jnp
inc
sub
and
push
xchg
add
or
outsb
clc
cltd
pushf
movsl
inc
and
sub
out
rcrb
outsb
shlb
std
cmp
push
add
ds
pusha
inc
push
lahf
push
mov
std
dec
shlb
lods
mov
repz
negb
mov
jo
jge
or
cmp
sbb
idivb
repnz
push
rcrb
xchg
loope
fs
inc
pop
pop
sbb
jne
pop
sub
push
inc
cmc
xchg
jb
fcompl
adc
xchg
ret
inc
insb
pop
mov
insb
sub
shll
cmp
push
cmp
cs
pop
dec
dec
stos
loopne
pop
js
jns
test
jbe
shll
and
shl
pushf
mov
mov
shll
sub
add
xor
aad
inc
call
pop
leave
sub
sbb
call
dec
in
cmp
addl
pop
insl
das
mov
sub
iret
out
flds
into
repnz
jecxz
cmp
out
stos
pop
sub
int
mov
cmpsb
clc
sti
pop
dec
les
and
out
icebp
cli
mov
mov
and
lahf
sbb
pushf
xchg
adc
add
imul
outsl
inc
pop
stos
or
imul
pop
dec
inc
addr16
dec
adc
ss
je
pop
int
icebp
in
add
mov
pop
out
mov
dec
add
and
in
adc
mov
imul
push
cmp
aam
fldl2t
test
mov
insb
mov
cmp
enter
mov
mov
cmp
cmc
cmp
cmp
insb
or
pusha
pop
outsb
leave
push
xor
xor
pop
loope
mov
xor
pop
ret
rcrb
sub
push
imul
sub
dec
dec
xchg
and
mov
lods
or
sbb
call
sub
cmp
xlat
sub
sti
popf
icebp
in
dec
mov
into
fiadds
ja
mov
inc
lret
pop
mov
cmc
xlat
xchg
sbb
or
sub
add
jmp
push
lret
inc
insl
ret
jns
mov
adc
push
pop
inc
xchg
inc
cmpsb
pop
shl
loop
add
sbb
mov
fisubl
sub
inc
enter
mov
adc
int3
jle
popf
jg
sbb
mov
mov
inc
sbb
out
lcall
mov
fisubrs
xor
insb
ds
jp
aas
icebp
mov
mov
test
add
test
add
dec
and
and
outsl
std
ficoml
sub
into
xor
fucom
push
ficompl
fdivrs
jmp
dec
or
cmp
mov
xchg
pop
ss
addb
jl
lock
mov
mov
lods
push
int3
and
lods
inc
jne
ret
outsb
hlt
adcb
lret
mov
rcl
adc
xorl
call
call
fsts
xor
mov
fs
xor
add
push
sub
or
xchg
mov
repz
fwait
mov
mov
cmc
roll
movsl
add
cmc
lcall
sahf
ret
aaa
fdivs
ret
loop
xorl
arpl
push
cmc
xchg
add
and
push
add
sub
sub
sub
sbb
jnp
mov
xor
fimull
fdivl
fidivrs
add
ljmp
jmp
inc
sbb
fucomi
mov
or
jg
xchg
add
mov
pop
mov
and
jo
jnp
dec
dec
push
andl
add
xor
fsubs
push
out
dec
mov
je
xor
mov
mov
mov
jne
icebp
sbb
pop
and
ficompl
mov
or
jle
jg
and
iret
mov
add
jo
sub
adc
test
cmpsb
mov
push
mov
cmp
out
jb
roll
dec
stc
lret
out
inc
sub
cmpl
dec
jmp
std
pushf
inc
push
nop
fists
push
inc
nop
test
data16
cwtl
inc
es
mov
shrb
jne
data16
add
pop
dec
mov
adc
sub
jns
jbe
mov
rcr
lea
mov
and
mov
sbb
xchg
mov
stc
fdivrs
cmc
out
push
add
push
or
lock
fsts
push
call
mov
mov
cwtl
inc
ss
fadds
adc
jb
xor
xchg
inc
adc
cli
leave
cwtl
movsl
test
cmp
test
aaa
sti
push
add
inc
sub
mov
jmp
xchg
push
cmp
xchg
jne
xchg
popa
stos
outsl
or
enter
xchg
nop
pushf
jae
mov
stos
xchg
fwait
xor
mov
mov
mov
push
sbb
in
mov
mov
mov
test
rclb
inc
inc
inc
lahf
movlps
in
fs
aam
and
adc
nop
mov
fcom
orl
and
aam
fstps
add
sub
push
nop
clc
test
mov
fbstp
adc
popa
aad
aas
lods
fwait
mov
and
rcl
aaa
cmp
scas
and
in
popf
adc
std
jnp
dec
cmp
push
pop
shl
and
roll
mov
enter
imull
and
mov
insb
dec
stos
leave
stos
mov
aas
mov
xchg
lahf
in
sbb
lret
movsb
push
cmp
shlb
mov
imul
das
pop
into
ficoms
shll
psubq
mov
and
cmpsb
push
rol
outsb
jecxz
push
fucomi
out
sub
stos
adc
mov
in
outsl
adc
push
insb
inc
push
rorb
cwtl
cwtl
sub
nop
xor
push
nop
xor
fs
dec
mov
aaa
ret
fcoml
in
mov
xor
push
push
fisttpl
sbb
js
rol
adc
out
sbb
test
mov
and
fsubr
pop
jno
insl
in
jae
stos
or
sbb
int
fwait
add
in
pop
lcall
inc
jmp
fisubl
and
iret
adc
into
push
cld
sahf
add
cmp
xchg
mov
hlt
xor
or
mov
mov
and
mov
adc
add
fmull
iret
pop
mov
sub
hlt
pop
loop
or
or
mov
bound
lods
movsb
out
and
mov
jle
fmuls
mov
push
jle
cmpb
sbb
jnp
sahf
sub
pop
fnstcw
bnd
and
cli
mov
sub
mov
call
jecxz
xchg
or
xor
mov
mov
or
cmp
shl
cmp
addr16
hlt
push
pop
loopne
pop
sub
jnp
xchg
jle
call
pop
icebp
test
sbb
mov
fsts
inc
inc
jecxz
dec
xchg
insl
add
mov
xor
pop
arpl
lahf
mov
sbb
lret
aad
out
fsubr
mov
dec
mulb
mov
outsl
insb
insl
cmp
ja,pt
fwait
scas
xchg
sub
push
add
inc
cmp
mov
popa
or
stos
xor
lahf
push
pop
inc
scas
mov
enter
jp
or
push
jge
pop
int
sub
out
outsl
stos
or
push
dec
pop
rolb
aaa
pushf
insb
xchg
mov
shll
daa
in
out
cld
xchg
mov
inc
icebp
jecxz
and
sbb
ss
mov
fldt
xchg
sbb
scas
xchg
in
pop
xorb
leave
aas
lock
push
shll
cmc
ficompl
ret
dec
addl
rolb
pushf
mov
out
pop
cltd
mov
cli
sub
jg
ror
push
hlt
mov
faddl
out
clc
pop
cwtl
push
lock
inc
nop
mov
push
jae
in
dec
js
mov
cmp
xchg
or
ss
cmp
xchg
clc
mov
testl
sahf
lods
or
lock
leave
push
jo
ljmp
push
sbb
mov
adc
std
sarb
mov
lods
pop
addr16
pop
push
xor
dec
in
insl
sbb
mov
mov
stos
loopne
test
cli
pop
mov
add
enter
jb
das
jp
sbb
sbb
mov
inc
push
scas
push
or
clc
bound
and
dec
pop
sbb
push
dec
test
jo
cmp
hlt
pop
das
divl
push
pop
imul
stc
pop
cmpb
mov
ds
mov
mov
aas
lahf
out
test
lods
lods
push
pop
das
or
rcr
dec
orl
xor
rclb
mov
dec
xchg
jnp
mov
add
idiv
outsb
ret
push
push
loop
mov
ja
stc
orl
or
xor
js
mov
in
lods
sbb
add
shl
dec
mov
adc
jns
xor
jns
push
pusha
xchg
and
call
adc
les
pop
adc
jle
pop
gs
adc
sub
add
in
pop
aad
dec
sub
push
push
jge
adc
mov
es
pop
xor
jle
jmp
sub
and
xchg
pop
psrlw
dec
mov
and
inc
pop
dec
jb
repnz
xchg
mov
mov
push
icebp
sub
jecxz
stos
popa
out
shrl
inc
insb
outsl
lock
sub
cwtl
fwait
das
hlt
sbb
jle
test
sarl
jp
sbb
fidivs
push
jns
mov
and
jbe
dec
sbb
imul
lea
sbbb
out
fildll
add
pop
lds
out
in
push
loope
scas
enter
pushf
jmp
mov
in
push
sub
cmp
mov
dec
fnsave
rcrl
or
push
cmp
lds
hlt
sub
dec
inc
mov
push
adc
loopne
bnd
mov
fwait
xchg
loopne
imul
xchg
pop
cli
pop
ret
push
cmp
bound
icebp
lret
xchg
xor
ja
addr16
push
xlat
and
inc
xor
dec
pop
fs
fidivrl
aaa
push
iret
movsb
xchg
xor
sbb
jnp
sbb
repnz
xchg
insb
outsb
push
sbb
dec
inc
test
mov
cmc
cmp
in
push
mov
xor
jl
mov
xchg
jmp
push
aam
mov
fisttpll
sbb
jns
or
and
lods
ror
add
dec
cld
cmp
scas
lds
jmp
fs
sub
ja
in
repnz
add
jl
add
inc
hlt
push
insb
divl
mov
icebp
loopne
or
popf
push
int3
stos
push
fistps
and
adc
and
lock
mov
pushf
cmp
adc
mov
rclb
enter
xor
addl
jne
add
js,pn
pop
cmp
test
jg
jp
insb
add
mov
shlb
sub
adc
in
cltd
mull
ss
mov
mov
inc
mov
mov
sub
arpl
ret
in
jecxz
clc
mov
dec
sbb
and
xlat
gs
mov
gs
cmpsl
out
mov
mov
test
or
or
sbb
or
sarl
arpl
mov
clc
mov
lret
push
inc
mov
out
inc
pop
sbb
inc
dec
jb
jmp
pusha
push
cmc
lret
lea
imul
or
sbb
sub
mov
insb
aaa
cltd
rorb
push
dec
in
out
in
sbb
jecxz
pop
ret
push
sti
push
gs
ret
pop
test
mov
fistps
jecxz
jnp
adc
sarb
mov
enter
mov
outsb
sbb
mulb
popf
test
mov
dec
inc
icebp
mov
adc
out
fsubrs
fcomps
add
lret
out
jns
mov
and
jb
iret
imul
ss
sbb
movl
sub
inc
and
mov
mov
cwtl
add
pusha
mov
cmpsl
daa
and
add
inc
dec
mov
cmp
js
inc
in
push
sti
enter
push
jl
sbb
test
cmp
or
out
mov
xor
mov
mov
mov
pop
iret
cmp
xchg
jecxz
fcmovbe
push
std
sub
std
ja
clc
call
aam
lea
insb
jo
inc
sbb
inc
loop
test
mov
and
movsb
mov
mov
sub
out
add
repz
sarl
sbb
push
jecxz
dec
jnp
sarl
mov
xor
shrb
xlat
mov
jmp
and
and
mov
mov
or
xchg
repz
add
mov
dec
sub
dec
std
dec
loop
ds
add
mov
push
xor
dec
leave
out
sbb
pop
xlat
adc
icebp
mov
sub
mov
mov
dec
fs
xor
push
stos
stc
push
cmpsb
lods
in
shrl
push
sahf
scas
inc
jecxz
data16
mov
bound
stos
mov
filds
jg
movsb
cmp
std
fcmovu
and
hlt
decl
push
jne
out
push
or
dec
fdivrl
mov
hlt
faddl
adc
add
aam
add
sahf
sbb
repz
ljmp
mov
push
pop
pop
push
insl
mov
or
mov
adc
pop
mov
arpl
mov
sbb
adc
cmp
sub
dec
popl
ror
mov
ffreep
and
and
pop
jne
pop
repz
insl
sub
lret
repz
inc
data16
pop
and
shlb
popa
inc
push
xor
cmp
int3
sti
test
stos
out
lcall
movsb
aad
pop
mov
pop
addl
push
ds
push
xchg
lahf
cli
outsl
or
pop
jb
rclb
sahf
sahf
out
in
push
jle
xchg
aad
fldt
fsubrl
enter
pop
lds
stos
sub
fists
add
xor
mov
adc
pop
add
xchg
ss
aaa
xor
idivb
lock
idivl
cmpsl
mov
add
insb
inc
mov
cmp
pop
sbb
outsb
pop
xor
mov
les
mov
or
pop
std
or
jl
ret
push
lods
inc
cmp
call
icebp
sarb
pop
adc
xchg
icebp
hlt
sbb
movsl
lea
xchg
test
xor
dec
add
insl
daa
test
cli
nop
xchg
dec
movsb
je
les
mov
insb
pop
lcall
xchg
mov
insl
jg
add
or
dec
mov
sbb
aaa
pop
dec
daa
fnsave
lods
loope
outsb
jnp
mov
int
xchg
popf
adc
popa
adc
add
mov
std
mov
les
jle
ss
neg
int
dec
mov
push
das
rolb
daa
aam
rcr
stc
mov
add
cmp
cltd
or
lea
sarb
cmp
jns
push
add
jb
add
mov
nop
xor
adc
xchg
dec
xchg
bswap
loopne
lret
mov
fdivrl
lcall
jb
leave
adc
push
jb
xchg
jge
adc
aaa
movsl
pop
je
in
aam
xlat
cltd
jge
ret
ret
shl
scas
lock
rorb
in
mov
xchg
adc
mov
jmp
in
or
out
mov
das
int3
cmp
ds
inc
jl
data16
push
jle
cwtl
ljmp
add
insb
lcall
mov
rcrb
fisttpl
dec
cmpsl
sub
push
shl
test
mov
pop
aaa
imul
aam
dec
sbb
mov
fcomps
sbb
xor
dec
cmc
mov
mov
sub
lods
lock
in
inc
std
or
roll
jmp
xchg
hlt
es
sti
enter
push
push
shll
mov
scas
pop
dec
insl
nop
jns
xor
sbb
jo
push
std
cmp
jecxz
or
cli
lahf
xlat
lds
fldcw
and
outsb
mov
test
lahf
jbe
mov
popa
xor
int3
insl
adc
nop
test
cmp
add
sub
lds
sbb
mov
jl
cmp
inc
loop
adc
push
fnstsw
or
lret
or
frstor
popa
mov
test
aaa
mov
mov
push
test
sahf
mov
add
movsl
mov
mov
mov
sbb
pop
sbb
inc
xor
mov
aaa
ror
cmp
xor
adc
mov
fldl
stos
push
ljmp
cs
adc
daa
sub
fsubr
in
inc
sbb
pop
sbb
push
pop
dec
inc
sub
idivb
test
pusha
shl
pop
sbb
rol
nop
scas
movsb
jne
and
lock
mov
xor
sub
sbb
mov
xchg
call
and
sbb
lods
cli
sub
xchg
fstps
cmp
jmp
mov
test
jl
iret
mov
mov
jecxz
fwait
adc
pop
dec
mov
mov
xchg
add
leave
push
or
jae
stc
cmp
xorl
xor
daa
push
xlat
and
sbb
lea
stos
xor
push
daa
push
mov
mov
jmp
pushf
or
mov
inc
jle
iret
out
popa
repnz
out
or
andb
leave
out
addr16
sub
xchg
or
sarb
or
cmp
pop
ljmp
bound
pusha
movb
pusha
mov
mov
ljmp
dec
mov
shll
sbb
mov
fisubrl
jl
inc
into
mov
cwtl
dec
sub
sub
sbb
add
testb
sub
outsb
arpl
jbe
mov
lahf
into
fdivrl
sub
pop
xchg
cmp
xor
jno
and
inc
push
int
sbb
cmp
pop
jl
lahf
cmp
push
xchg
lock
sbb
mull
bound
fsts
fnstenv
push
lahf
stos
std
xchg
and
fadds
cli
popf
jae
in
lods
xchg
and
jmp
jae
and
adcl
lahf
out
jne
sahf
and
pushf
lods
mov
dec
call
push
in
mov
cmp
popf
dec
jge
fistl
pop
or
pop
push
xor
push
mov
dec
mov
mov
ja
mov
dec
mov
xlat
pop
lret
roll
push
dec
xchg
mov
sub
arpl
mov
addr16
cmp
jecxz
dec
fstpt
mov
fldt
mov
jge
cmc
cmp
cmpsl
repnz
aaa
rolb
mov
xchg
scas
or
jge
pop
dec
shll
nop
loopne
sub
pusha
push
shlb
add
fwait
movsl
inc
lcall
fsubr
into
mov
outsl
mov
and
add
or
inc
repnz
push
jle
or
sbb
lcall
popa
cmpsl
mov
mov
add
inc
inc
cwtl
imul
push
mov
push
sti
movsb
loop
les
mov
dec
adc
sub
xlat
push
ja
add
and
xchg
out
mov
sti
pop
mov
and
jb
stos
sub
push
insl
rorb
jmp
iret
xlat
mov
enter
add
pop
test
repnz
cmp
dec
sbb
add
dec
inc
fistl
sbb
adc
jne
hlt
pop
inc
xor
test
es
shrl
push
int3
lock
xor
mov
mov
int3
call
sbb
enter
shrb
dec
jp
ss
cmp
adc
mov
cltd
cli
scas
and
outsb
sub
insb
fstl
into
jp
popf
cltd
outsb
jno
push
mov
or
cli
inc
cwtl
mov
jmp
xchg
inc
es
add
fidivrs
push
in
mov
movsl
sbb
xor
popl
icebp
jmp
inc
stos
lcall
scas
sbb
push
push
adcb
pop
pop
push
lock
cwtl
ja
das
mov
cmp
sbb
xor
aam
lcall
test
mov
jmp
jmp
inc
sub
push
sub
outsl
jne
inc
or
sbb
cmp
aaa
or
or
adc
lahf
cmpsb
push
add
ret
xor
fisttpl
fsubrl
pushf
pop
sub
jp
nop
dec
out
mov
or
and
addr16
in
or
int3
je
or
jp
xor
cmp
movsb
mov
add
jae
adcl
out
add
pop
inc
pop
jle
cld
mov
std
pusha
icebp
loop
jmp
cmpsb
pop
std
push
sbb
add
fsubrp
sbb
inc
cmp
outsb
sahf
mov
in
push
sarl
popa
xchg
popa
cmp
out
cmpsb
or
stos
popa
ret
add
gs
out
sub
adc
mov
or
lods
lea
jge
popl
xor
inc
ja
int
stos
lock
and
faddp
mov
ds
pop
and
jbe
fldl
iret
pop
clc
inc
mov
ret
ss
xor
and
mov
scas
rorb
xchg
cli
cmp
std
pop
sbb
mov
mov
in
adc
sub
xor
sti
pop
mov
loope
pop
fbld
ficomps
in
push
jle
rcll
dec
jp
push
sti
sbb
xor
push
shll
xchg
jle
cld
int
mov
outsb
or
jp
scas
fdivr
mov
clc
out
xor
bound
hlt
pop
inc
ds
jl
sub
aad
ret
push
jecxz
pop
xor
xchg
fnstenv
xor
inc
pushf
stos
imul
inc
hlt
mov
jae
div
pop
mov
scas
lds
or
lcall
jno
cmp
inc
mov
adc
mov
in
imul
sbb
mov
inc
jne
faddl
mov
scas
dec
in
repnz
or
cmpsl
xor
sub
cmp
sbb
pop
cmp
inc
push
mov
mov
repnz
out
lock
dec
loop
sub
outsl
int3
add
mov
nop
shlb
cmp
sahf
inc
and
out
sub
jmp
push
aad
pusha
cmc
popa
in
repz
dec
mov
addb
aas
or
iret
adc
test
insb
push
ffreep
ret
push
incb
out
cltd
mov
jle
lock
sbb
jg
cmp
sbb
ljmp
sbb
add
in
or
int3
xor
mov
loop
repz
movsb
dec
lods
jae
pop
insb
dec
icebp
jbe
sub
jno
cld
cltd
xchg
mov
stos
xchg
loope
loopne
sub
xchg
iret
adc
cltd
sub
xchg
sar
mov
mov
add
mov
insl
mov
xchg
test
ds
add
and
daa
push
sti
pusha
jb
cmp
out
or
lahf
inc
push
daa
push
cmc
pop
xor
int
xchg
sahf
lahf
pop
cmp
insb
enter
imul
or
fcompl
adc
push
pop
out
xor
ret
sub
push
rclb
lods
lret
xor
je
iret
lahf
scas
mov
cmpsb
stc
inc
cmp
dec
loope
jb
push
cmp
aas
xor
push
push
add
leave
stos
repnz
inc
fs
dec
hlt
sub
out
enter
mov
aad
cmp
adcb
cld
cmp
imul
out
stc
xlat
xor
xchg
adc
jno
dec
dec
lret
andl
or
sti
push
mov
mov
cli
rcrb
inc
loope
test
sub
inc
dec
push
test
sarb
cmp
cli
jns
inc
rorb
push
or
in
sub
data16
mov
sbb
test
lcall
mov
sbb
mov
pop
cmpsb
loopne
push
fistl
shr
leave
lcall
xor
pop
jns
and
push
pop
push
add
push
aaa
mov
js
push
mov
mov
icebp
stos
mov
js
lock
pop
dec
adc
inc
stos
xchg
inc
mov
mov
movb
fcomi
out
mov
push
popf
insl
jge
jle
orb
mov
xor
jmp
add
lock
enter
xchg
jp
lahf
lock
adc
and
push
dec
mov
idivb
loopne
out
insl
in
sbb
cltd
mov
rolb
push
ds
es
popa
jg
lcall
fwait
mov
mov
xor
nop
insl
xor
fistpll
sti
imul
inc
pop
leave
cwtl
fcom
jb
and
cmp
jp
add
cmpb
lret
cmp
outsl
lret
push
push
ds
test
mov
sarl
add
fisttps
jo
subl
and
mov
mov
jae
pusha
aam
fwait
cltd
and
push
in
jp
mov
dec
jae
cmc
and
adc
aas
xor
addr16
sbb
add
and
dec
pop
push
jmp
pop
xchg
push
pop
push
mov
das
orb
add
repz
lret
test
iret
inc
inc
out
hlt
mov
repnz
into
sbb
test
jge
sbb
iret
pop
push
fimuls
lcall
xor
sbbb
je
push
xchg
and
push
adc
cmp
xchg
jge
mov
sbb
jle
les
mov
xchg
adc
sub
leave
ds
mov
into
push
orb
les
push
lcall
xor
loope
popf
out
jae
xor
nop
add
cmp
sbb
push
in
dec
dec
sbb
outsl
mov
inc
lcall
iret
and
add
movb
flds
pop
dec
push
xor
icebp
jns
je
pop
cmp
and
push
mov
push
dec
mov
loope
mov
pop
mov
jb
pop
subb
xorb
lahf
jecxz
xor
out
js
sahf
push
mov
out
or
push
inc
cmp
adcl
xchg
adc
mov
daa
ja
cmpsb
loopne
lea
jmp
pop
sbb
lcall
mov
stos
push
mov
xchg
mov
lea
xchg
es
and
add
das
flds
push
add
aam
xchg
fiadds
xchg
les
mov
int
push
test
rorb
lds
loopne
sub
lods
rorb
add
push
pushf
xor
ja
add
call
inc
pop
adc
mov
cmpsb
pop
cmp
bnd
mov
pusha
ret
inc
and
hlt
mov
xor
or
xchg
mov
test
sbb
pop
rcr
in
xchg
in
sub
sbb
imulb
roll
popa
mov
fdivl
lahf
enter
or
mov
ret
mov
jo
dec
hlt
fst
pusha
loop
push
sub
int3
xor
xor
xor
cmp
arpl
mov
xchg
shrb
or
repz
sbb
aam
hlt
xchg
jl
nop
xchg
push
icebp
movsb
xchg
inc
cli
mov
roll
movsl
push
aad
mov
jns
jg
repz
jno
fists
loope
or
roll
add
fidivrl
jne
and
pop
jae
sub
stc
mov
sbbl
add
movsb
fisttps
out
adc
sti
dec
in
rolb
sti
adcl
imul
ds
lret
pop
jae
sbb
or
cwtl
push
ret
test
sar
mov
add
stos
into
push
test
jmp
aam
mov
pop
decl
adc
loop
sbb
mov
add
in
mov
cmp
jnp
std
cld
add
cwtl
inc
sbb
add
ss
stos
aaa
push
jns
and
sub
jne
pop
lea
test
dec
pop
ja
in
mov
xchg
pop
in
in
adc
out
mov
cmp
xor
xor
imul
int3
and
incb
xor
in
pop
jmp
mov
and
aas
cmp
insl
push
mov
and
jg
lahf
lods
nop
mov
aam
mov
pop
dec
shl
push
adc
out
imul
fldt
and
mov
mov
or
fisttpll
xor
ljmp
shl
add
adc
xor
pop
cmp
inc
mov
in
or
mov
sub
cmp
or
xor
fadds
imul
repnz
ss
dec
push
jl
lret
push
xchg
lret
and
sub
dec
movsl
xor
ljmp
adc
jmp
xor
insl
pusha
pop
pop
shrl
addl
mov
popl
popa
cmp
jo
xchg
pop
push
mov
mov
out
sbb
mov
stos
popa
test
and
inc
stos
aaa
mov
lahf
imul
insl
dec
test
jge
push
and
shll
or
shlb
orl
shrb
scas
mov
lret
push
pop
add
jecxz
or
sub
jmp
nop
mov
int
cmp
adc
and
mov
cmp
jae
les
xchg
pop
mov
sbb
movl
jbe
jl
scas
pop
lcall
lcall
sarb
inc
frstor
or
mov
cmp
out
ljmp
mov
inc
iret
cmpsl
test
das
lods
dec
jmp
movsl
mov
ret
mov
jmp
or
cld
fcomps
test
fnsave
sbb
rolb
stos
fs
mov
aad
lahf
lret
lods
and
cwtl
dec
sub
pop
jnp
cmp
xor
mov
test
sarl
dec
popf
scas
inc
fwait
into
mov
mov
inc
fiadds
adc
mov
and
add
aaa
pop
pop
adcb
sub
cld
and
dec
lret
out
jecxz
enter
lahf
insb
es
adc
jbe
push
repz
aas
ret
mov
xor
or
jge
jecxz
or
push
mov
ljmp
adc
imul
icebp
ds
jge
cmp
shrb
pushf
scas
ret
push
shrl
fidivrl
pop
and
xchg
clc
lret
mov
rolb
loope
xor
ret
xlat
leave
ficomps
lahf
push
lea
call
mov
dec
jne
push
inc
push
rcrl
cmp
pusha
inc
insb
mov
dec
movsl
mov
popf
or
pop
and
inc
loope
outsl
sarl
push
pminub
jnp
jnp
fsts
mov
sub
adc
xor
loop
sub
nop
push
notb
int3
adcl
sub
dec
xor
or
sbb
stos
ret
adc
loopne
nop
and
out
xchg
and
jno
pop
pop
mov
xchg
ret
fwait
xchg
inc
subl
lahf
cmp
icebp
cmp
or
test
and
stos
inc
ret
cld
int
dec
cmpsb
mov
pop
inc
fdivl
test
adc
cmovns
ret
pop
xchg
jecxz
pop
ret
fs
aad
xchg
hlt
or
and
les
and
leave
pop
ss
mov
test
mov
push
sbb
mov
sbb
insb
ret
lea
decl
scas
mov
fs
xor
outsl
mov
daa
in
inc
push
inc
xchg
ja
mov
mov
push
mov
jmp
filds
or
jb
mov
or
mov
ficoms
or
jno
sub
mov
mov
mov
enter
fcomip
fnstenv
pop
push
add
pop
mov
mov
pop
cs
inc
cwtl
stc
ret
xor
stos
mov
jne
loopne
lock
sbb
test
mov
sbb
add
das
aam
fld
addr16
nop
loopne
insl
shlb
repnz
xchg
or
sbb
and
mov
rol
add
pop
cmp
mov
push
ret
mov
inc
movsl
jns
imul
adc
je
popf
sbb
in
cwtl
out
cld
sbb
cmpsl
mov
or
in
cli
clc
frstor
fs
into
lret
adc
cmp
inc
test
call
sub
xchg
and
adc
int
mov
clc
sub
mov
insl
es
test
lcall
push
leave
pusha
add
xor
adc
loop
out
sub
into
test
push
add
sbb
inc
and
sub
test
cmp
adc
add
dec
xor
push
jle
sub
mov
pop
or
jecxz
or
fcmovnu
and
add
mov
pop
pop
add
popf
test
push
dec
cmpsl
pop
sti
sub
je
out
adc
daa
nop/reserved
popl
loop
fucom
mov
mov
lcall
adc
and
shlb
popa
sub
and
in
les
mov
aaa
cmp
jecxz
je
int3
adc
repz
adc
jb
icebp
aad
mov
inc
dec
mov
daa
ficoml
dec
ljmp
inc
in
push
push
rcr
insb
pushf
mov
push
pop
xchg
js
adc
xor
sub
push
ja
test
and
outsb
cmp
mov
clc
mov
scas
mov
xchg
add
pop
jb
pop
je
xchg
mov
sarl
out
mov
cmp
out
jl
or
imulb
adc
sub
jo
cmpsb
pop
stos
pop
js
aad
inc
loopne
lret
fwait
jne
dec
cld
jl
cmc
decl
dec
aam
xlat
scas
lods
and
shlb
pop
in
loope
push
rorb
xor
fcoml
sbb
push
adc
ja
or
jge
mov
out
pop
mov
jle
dec
jnp
sbb
cmp
sahf
repz
mov
push
push
shll
sub
aad
dec
lret
sti
cmp
loope
mov
sbb
inc
add
xor
scas
xchg
jb
mov
in
add
push
loop
notl
dec
push
mov
leave
outsb
dec
jne
lock
add
pop
test
test
push
inc
pop
and
or
inc
add
mov
jae
pop
sbb
inc
leave
lds
mov
lret
sub
ljmp
adcl
mov
lods
mov
bound
jns
inc
mov
out
adc
test
mov
sub
cmp
push
mov
push
leave
or
lcall
in
pop
push
inc
add
xor
lcall
aas
dec
add
subb
mov
sbb
and
pop
xchg
clc
arpl
jnp
or
cwtl
dec
stos
test
sub
popf
mov
sub
sbb
xor
mov
aas
cmp
fdivrs
icebp
push
mov
sti
push
aad
sub
pusha
xchg
cld
lea
mov
xor
lret
mov
adc
fwait
mov
mov
dec
movzwl
repnz
shlb
rcrl
call
and
sub
jg
dec
sbbb
xor
and
testl
pop
outsb
js
fbstp
lea
jae
rorl
push
cmp
stos
pushf
ss
mov
push
push
negb
stc
dec
stos
mov
repz
pop
mov
mov
adc
movsl
stos
insb
mov
dec
push
push
sbb
mov
or
mov
jb
test
ss
stos
sub
mov
push
pop
outsl
stos
dec
scas
jg
mov
xor
mov
loop
jns
mov
push
xor
stos
insb
and
mov
sbb
cmp
lods
into
scas
adc
mov
xor
into
cmp
cwtl
adc
jne
pop
xor
outsb
ret
mov
add
sbb
sub
adc
add
insl
xchg
mov
push
or
push
jmp
shlb
and
shl
mov
movsl
xor
add
mov
jbe
xchg
adc
jp
pop
mov
cmp
mov
je
out
or
push
and
and
push
andb
insl
add
popa
jbe
jle
lcall
cmpsl
test
xchg
ds
sub
mov
jae
aam
push
jb
jbe
mov
iret
sbb
dec
pop
cmp
cmp
repnz
pop
inc
ret
mov
icebp
sbbl
dec
mov
outsl
les
cmp
mov
cmpsl
das
mov
out
lods
mov
inc
subb
xor
jb
pop
mov
jo
aas
pushf
sub
dec
pop
aas
xchg
adcb
ret
and
xlat
das
sbb
and
jmp
jo
insl
divb
ret
mov
cmp
in
jmp
adc
daa
je
lods
mov
out
pop
mov
scas
cs
int3
fs
movsb
lds
lret
loopne
test
sbb
jge
imul
sbb
cmp
ss
imul
repnz
movsb
or
std
inc
in
jb
shll
or
mov
add
push
loopne
scas
rol
fistps
inc
jae
and
xlat
aam
ss
lret
push
cmp
dec
mov
adc
dec
xor
or
scas
stc
stos
xor
adc
sub
mov
movsb
mov
clc
add
push
cld
add
in
xor
jl
scas
mov
loope
add
in
loope
addb
sub
add
sub
push
movsl
push
ss
js
mov
pop
sub
xorb
pop
movsb
push
adc
lock
les
rcrb
sbb
lea
fiaddl
and
push
shrl
das
or
adc
sbb
mov
cld
inc
xchg
movsl
movsb
adc
and
push
popa
mov
cmp
fcmovu
inc
sbb
push
addl
sbb
adc
dec
mov
lock
clc
xchg
nop
loope
roll
push
mov
jl
add
imul
clc
push
push
inc
mov
dec
ljmp
mov
jl
mov
xorl
hlt
icebp
andl
iret
sbb
pop
xorl
aas
push
pop
cltd
dec
jo
repz
shll
jno
pop
arpl
repz
jnp
dec
popf
xchg
mov
mov
or
or
lock
mov
sbb
ljmp
lock
adc
mov
xchg
or
mov
test
roll
and
lret
lea
inc
fcmove
adc
xor
repnz
mov
stos
ficoms
cmp
repnz
sub
rcrl
add
in
lret
lahf
jnp
std
pop
cmp
shlb
push
shld
jbe
fcmovnu
xor
insb
mov
dec
sbb
scas
push
test
sahf
test
aad
lods
lea
imul
insb
adc
out
pusha
xor
xchg
outsb
scas
pop
scas
or
mov
or
fidivl
test
lahf
push
jnp
cmp
adc
or
out
xchg
pop
fucomip
cld
in
and
mov
jne
ds
jbe
jl
lods
mov
in
xlat
fmulp
mov
iret
aad
pop
in
sbb
mov
out
sub
fcoml
push
mov
dec
popl
lret
sub
mov
call
sahf
adc
popf
add
daa
aas
xchg
cmp
and
lods
repnz
gs
push
xorl
testw
cmpsb
lret
xchg
imul
pop
call
sub
subl
cwtl
test
repnz
cmpsl
insb
test
out
adc
inc
out
in
mov
and
cli
mov
loop
mov
xchg
leave
mov
xchg
dec
fldl
add
lock
sti
sbb
aaa
bnd
xor
push
mov
or
sub
test
jno
enter
movsl
addr16
lea
into
lcall
cmpsl
or
int3
mov
inc
data16
push
lahf
std
scas
rcll
test
mov
pop
lret
hlt
jp
xchg
xchg
pop
push
cmp
jmp
pop
pusha
arpl
outsl
shll
adc
out
jae
mov
xor
sar
mov
js
jmp
into
pop
enter
adc
push
rorl
add
repnz
add
fimull
xor
mov
inc
jnp
pop
push
add
scas
int3
dec
inc
lds
dec
pop
lds
jl
gs
cltd
nop
add
jno
lret
pop
fdivl
mov
mov
fildl
xorl
sbb
cli
sub
cmp
pop
cmc
mov
lea
pop
sub
cwtl
ficompl
loop
jnp
out
fcompl
push
lds
out
cmpsl
jns
idivl
adc
es
pop
mov
push
shrb
mov
dec
loopne
inc
in
mov
cmp
clc
in
adc
pop
and
sbb
pushf
sbb
aaa
lcall
jbe
sbb
dec
ja
out
and
sub
xchg
stos
inc
cs
jne
repnz
mov
outsl
mov
int
mov
mov
repnz
push
cmpsb
lahf
jle
jmp
xor
mov
ja
sub
rcrb
aas
mov
sbb
stos
ret
push
aam
int3
lods
fisttps
jne
lcall
pop
into
cs
pop
cwtl
sub
imul
pop
popa
call
mov
test
hlt
enter
lret
arpl
icebp
sub
push
cmpsb
inc
mov
inc
inc
mov
mov
pop
icebp
and
jp
mov
into
xchg
mov
fimull
sub
push
sbb
rcr
fadds
adc
adc
fadds
das
ret
cld
adc
aam
hlt
mulb
mov
outsl
add
push
inc
cmpsb
lcall
dec
out
mov
xchg
test
imul
out
ja
sbb
subl
inc
testl
jne
test
add
fildll
pop
cltd
cmp
inc
jl
fstpl
sbb
adc
jae
test
xchg
inc
cmpsl
jge
rorb
cli
cmp
mov
insb
dec
xchg
pop
xchg
insl
pop
jle
outsb
sbb
push
mov
add
xchg
mov
add
hlt
int3
pop
test
pop
lcall
std
xor
add
mov
mov
repz
xlat
not
mov
inc
lock
out
cwtl
cmp
sub
and
mov
push
das
xchg
or
int
in
dec
movsb
jns
pop
mov
out
shrb
ret
leave
pop
repnz
idivl
ss
and
das
jns
enter
out
dec
sub
or
mov
or
leave
and
add
lea
addb
imul
rorl
js
add
xchg
adc
ja
movsl
fldt
fsubrs
negb
in
xchg
fs
mov
aas
lods
outsb
in
in
mov
xor
mov
int3
pop
jae
lods
int
lods
jp
dec
and
scas
scas
fs
aam
dec
cmp
test
sbb
nop
mov
mov
fwait
pop
aas
test
push
sub
jo
sbbb
adc
mov
test
ret
addb
enter
jne
fsubrl
push
paddb
dec
cmc
outsb
inc
jecxz
xchg
jne
add
nop
mov
mov
cld
sbb
adc
mov
mov
lahf
add
js
cli
imul
and
ss
jp
cmpsb
push
fisttpl
or
div
cmp
mov
scas
and
ret
mov
daa
jge
stos
jae
inc
and
ret
iret
add
repz
push
mulb
gs
ja
sub
adc
inc
dec
fwait
mov
icebp
stos
cmp
sub
dec
mov
push
inc
or
sbb
clc
push
ss
lods
shrb
push
sub
cltd
jp
pusha
jne
and
shr
data16
jb,pt
dec
push
scas
adc
cmp
xchg
jne
test
pop
std
mov
mov
test
jb
jp
inc
cmp
subl
xor
rcll
addr16
loop
jnp
sub
sbb
test
sub
xor
jg
mov
xchg
mov
and
push
mov
inc
push
add
mov
dec
test
or
inc
nop
push
ja
dec
pop
shll
xchg
pmaxub
nop
sbb
shr
mov
dec
nop
mov
mov
cmp
out
test
fnsave
jp
nop
inc
fimull
lds
push
rcll
pop
push
or
pop
dec
arpl
test
cmp
rep
notb
xchg
loope
leave
push
sub
inc
sbb
bound
out
addr16
lcall
adc
pop
xchg
mov
pop
mov
sbb
push
or
push
ljmp
or
cmc
inc
xchg
aad
inc
push
xor
pop
repnz
cwtl
decl
outsl
inc
addr16
mov
movzwl
add
imul
mov
sub
xchg
gs
pop
scas
mov
mov
cmpsl
enter
sbb
xchg
push
pop
fwait
lock
lds
stos
xchg
aaa
xchg
sbb
xchg
sbb
cmp
push
inc
in
addr16
and
cmpsb
or
dec
sub
jae
pop
mov
and
ret
and
ret
mov
xlat
repz
adc
xor
dec
fsubl
mov
jo
inc
push
fstp
cltd
jns
aad
inc
lock
pop
sub
out
dec
int3
mov
pusha
lahf
rorb
jb
dec
jg
loope
sti
adc
enter
mov
xchg
push
fildll
and
adc
push
xchg
fsin
xor
mov
fildll
stos
push
pop
dec
push
shl
mov
movl
test
or
cmp
pushf
mov
mov
xor
mov
into
mov
inc
sbb
sbb
loope
sub
repz
fisubrs
mov
fisttps
cmp
fxch
inc
or
jle
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
ljmp
lcall
inc
insb
iret
sbb
jmp
mov
dec
inc
insb
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
mov
insb
iret
jmp
test
iret
testb
jb
arpl
aas
les
movl
xchg
mov
arpl
mov
sub
in
and
stos
leave
sub
add
dec
inc
insb
enter
dec
icebp
mov
dec
das
aaa
jne
mov
add
inc
sbb
imul
in
cwtl
add
in
mov
rolb
dec
leave
fnstsw
pop
mov
inc
mov
inc
out
push
fmull
aaa
je
shl
cmp
outsb
outsb
inc
push
xchg
pop
in
jle
aaa
add
mov
in
es
push
inc
mov
popf
mov
dec
icebp
mov
inc
insb
iret
out
mov
mov
dec
jecxz
movsb
test
jmp
mov
scas
inc
outsl
into
in
daa
jecxz
or
dec
mov
repnz
insb
iret
out
jmp
mov
dec
inc
insb
iret
loop
jmp
cmpsb
out
dec
inc
outsb
iret
out
jmp
mov
dec
inc
insl
iret
out
jmp
mov
dec
inc
insb
into
add
jmp
mov
pop
inc
insb
es
cmpsb
out
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
adc
in
pusha
xor
out
mov
es
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
ret
inc
insb
das
in
es
ljmp
lods
dec
cmp
mov
dec
inc
insb
iret
es
les
xchg
jmp
mov
dec
inc
insb
pop
jecxz
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
insb
iret
out
jmp
mov
dec
inc
add
es
or
and
in
cltd
sbb
lea
jns
std
cli
or
mov
iret
test
ja
sarb
inc
sbbb
imul
inc
cmp
pop
pop
mov
dec
je
cmc
sub
icebp
scas
inc
pop
mov
arpl
dec
or
pop
or
push
data16
or
or
or
es
lcall
nop
push
pushf
scas
mov
sbb
mov
push
mov
inc
repz
or
cld
xorl
xor
mov
inc
mov
pop
or
jnp
lods
addr16
or
jecxz
int3
push
jo
cmpsl
mov
inc
enter
mov
adc
out
or
cmpsb
out
sahf
cmp
sbb
aam
pop
jbe
push
std
pop
outsl
and
pop
cli
cld
test
sbbl
lds
jne
lcall
test
inc
xchg
outsl
mov
scas
mov
push
push
mov
inc
push
push
fwait
imul
or
dec
fbstp
bound
cmp
lds
rdmsr
mov
cmp
nop
pop
js
hlt
mov
subl
dec
mov
add
lods
xchg
aas
popa
xchg
sahf
jae
and
out
rcrb
jmp
lcall
cmp
icebp
ffreep
dec
and
xor
nop
mov
mov
jmp
fwait
sahf
mov
xor
jg
add
xor
mov
shll
movsb
loop
outsl
inc
leave
and
daa
loop
and
add
ja
push
push
repz
dec
les
and
lcall
xchg
dec
push
cmp
out
pushf
roll
xchg
icebp
lret
mov
pusha
loope
xor
or
adc
and
sub
test
sahf
int
cmp
add
and
mov
fidivrs
inc
push
lret
cmp
outsl
jle
dec
push
xchg
sti
fidivrl
jge
push
mov
roll
lods
xchg
cmp
fbld
add
mov
mov
xor
pushl
loopne
inc
sbb
decl
hlt
aaa
dec
leave
mov
fcoms
push
sub
test
out
mov
cmp
test
lea
daa
cmp
fildl
and
es
add
mov
enter
pop
mov
mov
in
fs
lret
outsb
cmpsb
into
ret
ret
push
or
fs
push
or
jo
cmpl
dec
or
mov
pop
push
dec
cmpsl
push
xor
xor
nop
int3
sbb
or
in
mov
dec
or
pushf
jle
outsl
stos
loope
test
add
mov
test
call
orl
fadd
sarl
sbb
and
hlt
and
shll
xor
dec
das
aas
xchg
rol
adc
push
pop
jmp
repz
aam
aam
xchg
mov
bound
pushf
push
filds
test
mulb
dec
arpl
sub
or
clc
inc
fcompl
jle
pusha
pop
sarb
cmpsl
ret
imul
mov
push
dec
and
fimull
dec
adc
pushf
out
xor
mov
pop
ljmp
push
xor
lcall
push
leave
xor
pop
inc
adc
mov
inc
lret
sbb
es
bnd
pop
insb
cmp
xor
mov
ds
jnp
andl
clc
rclb
pop
pop
dec
nop
sub
xor
shr
push
addb
xor
adc
xchg
sub
or
and
enter
sti
imul
mov
shll
inc
xchg
mov
xchg
add
xor
inc
aad
sti
pop
and
push
or
adc
fistpl
std
jg
aam
pop
jbe
enter
iret
enter
fstpl
xor
sahf
push
mov
fcoml
mov
pop
and
lods
ret
pop
cltd
xor
sub
movb
mov
xchg
pusha
sti
xchg
lret
push
sub
arpl
out
sbb
fstpl
xchg
jge
scas
xchg
mov
call
inc
pop
cwtl
mov
sbb
push
jno
call
or
in
fisttps
inc
xchg
adc
test
int3
call
fidivrs
repz
aad
dec
pop
loopne
push
adc
jp
ja
inc
pop
dec
out
mov
call
int3
stos
into
test
inc
pop
mov
mov
sti
addr16
test
mov
push
movsl
cltd
cmp
jb
fwait
jecxz
hlt
lds
add
inc
mov
jg
and
cli
mov
jo
push
sub
arpl
push
ret
jg
xchg
test
decl
pop
ds
adc
jns
cld
into
push
fstpt
frstor
inc
fldl
mov
add
xchg
xor
xchg
sahf
adc
fsubrl
js
stos
dec
fbstp
mov
cmc
pop
inc
mov
sbb
pop
repnz
hlt
jmp
iret
push
out
repz
ret
push
jg
and
sub
push
jmp
jnp
sub
mov
adc
sti
fbld
xchg
mov
and
outsb
sbb
inc
jae
xor
lcall
adc
xor
mov
stos
and
jbe
xor
cltd
inc
movsl
int3
dec
ret
inc
fs
dec
push
cmp
ror
mov
sbb
push
mov
scas
pop
cmp
jno
jo
sub
imul
fwait
jns
push
movsb
movsl
lret
cli
jg
loop
dec
cs
dec
mov
imul
lds
loop
aaa
or
mov
adc
insl
jle
and
xchg
jns
and
xchg
push
inc
scas
shrb
movsb
loope
pop
cwtl
jb
pop
adc
imul
cwtl
push
iret
rorb
jg
xchg
dec
jge
jl
inc
mov
outsl
mov
add
jo
cli
sub
in
repz
jle
dec
and
jno
in
pop
data16
add
xchg
jb
and
xor
mov
push
push
cmp
inc
jne
pop
cmpsb
bound
jg
pop
repz
scas
std
mov
mov
sbb
or
adc
mov
hlt
fsubl
cmovns
pop
and
lret
sub
xlat
movb
push
sbb
sub
or
mov
xor
sbb
sahf
repz
stos
leave
test
jo
imul
jecxz
insb
cmp
mov
jmp
add
outsb
fidivl
cmp
inc
fld
or
and
repz
pop
int
shll
or
add
enter
hlt
gs
and
in
fistpll
add
arpl
fadd
ror
or
nop
mov
notb
mov
aas
ret
xor
fildl
xchg
std
repz
lock
sub
in
js
xchg
loop
xchg
cmpb
fs
mov
test
push
scas
inc
add
lds
mov
mov
negl
mov
cs
adc
lret
adcb
lods
lds
das
test
mov
mov
jno
add
adc
pop
rorb
xchg
pop
adc
push
xor
ret
or
mov
data16
dec
stos
mov
cmp
repnz
popf
popf
pop
mov
das
jle
pusha
test
dec
sub
ret
icebp
aaa
push
lret
ss
adc
mov
icebp
or
adc
imulb
dec
stos
sbb
push
dec
ret
ss
int
loop
inc
mov
fs
mov
dec
test
int3
mov
rcrl
sub
dec
stc
popa
shl
les
push
cmp
in
ffreep
addl
and
sub
and
or
icebp
xlat
mov
insb
dec
mov
cld
sbb
fdivl
cmp
mov
adc
sbb
and
mov
out
call
ret
jne
mov
xor
lahf
mov
xchg
hlt
fists
cltd
xchg
xor
xor
lock
xchg
mov
adc
xchg
add
fwait
gs
das
aas
and
mov
push
adc
cmp
lret
loop
inc
inc
lcall
out
int
add
hlt
pop
mov
andb
or
cli
pop
iret
ljmp
repnz
push
mov
fadds
dec
adc
push
out
mov
cmpsb
ljmp
add
mov
xchg
sub
push
int3
xchg
or
scas
mov
out
outsb
add
cli
mov
xor
stos
ffreep
add
pop
xor
in
dec
es
lahf
add
pop
or
int3
jp
cmp
fwait
push
xchg
cwtl
adc
pushf
inc
arpl
repz
shlb
push
jb
imul
cmp
idivb
mov
repz
dec
imul
mov
bound
inc
ret
push
enter
call
sub
clc
or
add
jb
data16
xlat
pop
out
mov
imul
adc
out
adc
jle
jbe
ror
jl
negl
push
and
mov
lret
sub
xor
jmp
repz
dec
imull
pop
es
lods
mov
daa
jbe
pusha
pop
jmp
call
pusha
jns
adc
lret
es
jle
mov
sub
test
shlb
jmp
cld
clc
rolb
scas
imul
dec
shl
aaa
popa
in
xor
imulb
sti
inc
lods
mov
or
xor
dec
hlt
sub
ds
shll
adc
jbe
into
and
xchg
cli
inc
jbe
pop
fnstenv
cmp
bsf
push
test
inc
pop
push
cwtl
shll
ja
cmp
xchg
aas
pop
lock
sub
mov
pop
ja
iret
inc
negb
push
push
jecxz
lret
or
sbbl
sahf
or
dec
or
sub
mov
mov
sbb
push
mov
adc
push
jmp
testb
xchg
leave
loop
and
fisttpl
pusha
das
pusha
adc
adc
dec
inc
xchg
sub
andl
push
pop
fstl
into
mov
inc
mov
jns
cmpsb
mov
adc
xchg
sti
jge
daa
outsl
les
mov
sbb
mov
cmp
jg
cmpsl
xor
inc
or
push
insb
jg
fcoms
xor
stc
addl
data16
test
pop
cmp
ljmp
add
fwait
sbb
jno
je
xchg
adc
add
lcall
lds
dec
cmp
push
mov
push
lret
ret
inc
mov
out
mov
mov
mov
xchg
mov
jg
and
cmp
xor
cmc
xor
xor
ret
fimull
adc
or
fs
clc
cmp
push
jbe
pop
fnstcw
pop
divl
sub
sbb
cmp
loope
ja
cmp
push
lea
cmp
jmp
arpl
add
pushf
or
into
push
dec
imul
aas
sub
iret
pop
mov
sub
xchg
push
push
sub
or
pushf
loopne
icebp
jo
mov
imul
mov
push
stos
or
mov
pop
and
xor
out
out
dec
orl
ret
movsb
mov
shr
les
mov
fwait
sbb
rclb
cs
decl
add
seta
lods
outsl
sub
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
