dec
dec
mov
push
xor
lock
mov
in
mov
ret
jle
mov
xor
adc
pop
dec
push
mov
out
mov
push
cmp
inc
dec
lcall
lcall
dec
dec
lret
adc
loopne
xchg
mov
test
sti
sub
cltd
rcrb
cld
std
jp
xor
mov
pop
sbb
test
jmp
ficompl
adc
fcmovnbe
data16
mov
in
mov
mov
jg
xchg
clc
mov
dec
data16
sbb
cmp
insl
xor
daa
push
adc
mov
pop
or
push
out
cld
add
sbb
xchg
pop
push
xor
jne
sahf
dec
sub
pusha
mov
cmc
and
or
lcall
lcall
cwtl
sbb
in
cmc
jecxz
cmp
cmp
addr16
pop
sub
imul
dec
xlat
aam
test
xchg
push
mov
and
incb
cwtl
aaa
pop
jp
cmp
cmc
xchg
fwait
jl
jmp
sbb
repnz
pop
inc
sub
scas
pushl
mov
sbb
xchg
cmc
sbb
or
lret
push
das
cmp
push
add
sysret
dec
dec
insb
in
xor
add
ret
iret
fcoms
cwtl
mov
sbb
cli
add
repz
mov
dec
and
push
push
je
mov
xchg
jae
and
xchg
inc
jbe
dec
or
enter
cwtl
emms
pop
adc
out
movsl
or
mov
ss
jne
shll
out
xchg
push
mov
pop
dec
shl
leave
mov
neg
dec
jae
xor
fsts
ficoms
cli
lahf
fbld
pop
mov
movsl
jge
int
movsl
pop
add
inc
push
lods
std
inc
insl
add
div
adc
and
into
pop
sub
pushf
pop
xorl
xor
adc
inc
pushf
pop
jb
xor
leave
loop
adc
in
stos
push
and
fnstsw
addr16
mov
leave
push
xchg
out
push
sbb
mov
xchg
hlt
jg
sbb
jo
push
xchg
addr16
push
xchg
aaa
in
leave
push
push
rorb
xchg
mov
stc
jae
inc
mov
pop
jno
pop
fwait
dec
fldenv
outsl
jno
pop
mov
push
dec
jo
in
js
data16
cmp
push
rorl
cs
mov
scas
sbb
movsb
and
mov
js
loop
fisttps
movsb
sub
adc
popa
or
jp
sub
dec
pop
and
mov
ds
xchg
icebp
inc
pop
out
or
fmull
loop
popa
mov
dec
and
push
inc
mov
jg
rclb
mov
push
mov
add
sbb
repnz
loopne
dec
fimuls
mov
in
sti
pop
jmp
pushf
pop
jge
or
cmp
push
je
xchg
filds
testl
mov
pop
rcrb
xchg
aas
pop
pop
loopne
mov
push
mov
jae
popa
pop
mov
adc
cmp
cltd
lcall
adc
xor
sbb
stos
inc
lret
jmp
jbe
pop
lcall
imul
insl
pop
sub
repnz
mov
bound
rolb
lret
gs
shll
lahf
test
lods
and
popa
mov
push
push
xchg
fldt
or
loop
stc
jge
cmp
gs
lods
sub
ds
mov
inc
sahf
out
aas
js
fidivrl
fnstcw
and
test
xor
pop
add
xchg
and
idivb
fwait
shr
xor
imul
arpl
mov
mov
push
repnz
jecxz
pop
int3
sarb
add
cmp
stos
jmp
xchg
sub
es
inc
ror
inc
or
inc
icebp
xchg
je
fists
aaa
add
cmpsb
jns
ds
enter
leave
xor
ds
mov
sbb
test
pop
into
jecxz
popf
xor
jmp
or
aaa
test
jg
xchg
adc
movsb
xor
shll
lret
sub
scas
inc
mov
add
pop
push
rclb
push
mov
mov
mov
inc
ja
lahf
mov
dec
ss
xchg
xchg
adc
mov
sbb
int3
xchg
pop
sub
or
sub
adc
lods
push
inc
popf
xchg
ret
or
je
mov
imul
daa
inc
in
andl
ret
test
cmpsl
adc
mov
imul
lcall
jns
insl
mov
in
push
sub
jb
in
cmp
add
mov
add
adc
fwait
mov
adc
fs
incb
clc
mov
lds
and
adc
xor
popa
adcl
pop
leave
in
out
dec
jge
jmp
sub
leave
push
or
mov
cmp
bnd
outsb
lds
mov
adc
dec
stos
or
mov
mov
lods
movsl
imulb
scas
mov
stos
rclb
mov
jecxz
lret
js
mov
popf
mov
pop
aam
fsubrs
sbb
mov
jg
dec
adc
pop
loopne
fidivrl
and
loop
clc
inc
aaa
outsb
pop
fmull
in
add
in
dec
mov
push
in
xchg
and
mov
add
add
inc
insb
or
xchg
mov
hlt
inc
cltd
int3
pop
xor
mov
jle
inc
cmpsl
fs
push
mov
orb
jae
push
dec
inc
jne
push
xor
int3
mov
pushf
nop
jecxz
push
dec
addr16
and
std
sbb
in
shrb
xchg
xchg
sbb
mov
cmp
xor
jns
cmc
mov
and
mov
in
and
fstpt
out
iret
sub
sub
jae
jmp
fs
fcmovne
mov
push
movsl
test
ja
fwait
inc
jp
rclb
mov
arpl
div
divb
cmp
lret
mov
out
adc
push
sbb
mov
mov
mov
push
in
cmc
in
scas
sub
xor
shrb
pusha
jns
data16
push
daa
cmp
ret
pop
pop
mov
test
subl
adc
xchg
cld
sub
out
sub
jae
and
push
shll
cmp
mov
int3
bound
sbb
fnsave
push
sub
dec
pushf
into
push
movsl
mov
dec
pusha
xor
stos
jmp
sbb
xchg
mov
or
out
mov
mov
iret
mov
lds
adc
aaa
xlat
cld
popf
loop
into
lods
pop
dec
xchg
xchg
nop
fldt
repz
gs
xchg
pop
pop
ret
mov
repnz
jle
repnz
cmc
pop
xchg
mov
push
dec
jl
jbe
ljmp
add
lods
loopne
xor
inc
gs
fdivrl
test
inc
mov
dec
in
jp
pop
pop
repz
out
sub
cmc
cmp
xlat
into
test
sbb
xor
and
out
sahf
dec
out
sbb
movsl
leave
cmc
scas
or
das
dec
divl
int
adc
stos
fildl
shlb
popf
mov
shlb
out
pop
fcomps
adc
aam
mov
xor
aas
movsb
jo
pop
jle
aas
out
aas
jecxz
call
aas
xor
pop
pushf
mov
and
pusha
push
int3
fldcw
add
pop
arpl
popf
int3
bound
cmp
inc
sbb
jb
andb
pop
jno
pop
xor
sub
ss
pusha
push
outsl
jmp
cmp
lock
push
pop
sbb
fistps
ret
sbb
or
cli
aas
sarl
pop
stos
clc
das
mov
xor
dec
jg
popf
rorl
jmp
cli
in
add
adc
mov
adc
xchg
push
push
pusha
insl
stos
inc
popf
pop
jo
pop
jle
mov
idiv
bound
pop
nop
mov
sub
stos
push
lret
and
mov
sbb
outsb
fs
cmpsl
mov
out
jl
je
jecxz
bnd
or
fsts
push
jnp
clc
movsl
in
jge
push
dec
sbb
jae
sar
out
mov
jb
fidivl
or
xor
sar
mov
xor
sbb
adc
mov
sbb
lods
jg
push
sbb
jbe
add
insl
call
inc
mov
add
lret
ljmp
mov
xchg
ret
lret
aam
in
cmp
cmpsb
sub
test
sub
pop
add
test
adc
int
xchg
pop
ljmp
xlat
loopne
adc
fldl
or
adc
lret
mov
jl
jno
in
xor
cmp
mov
jbe
inc
gs
xor
inc
addr16
jno
xchg
cli
lcall
es
mov
jne
aam
pop
dec
lods
dec
adc
cld
add
sbb
lods
sbb
flds
mov
mov
add
dec
mov
and
cmpsb
cmp
sahf
pop
loop
add
push
iret
lret
sub
push
sbb
ljmp
cltd
push
das
pusha
dec
out
or
sub
cs
mov
cmp
jae
cmp
and
aad
push
pop
aas
and
mov
aam
out
lods
mov
xchg
jo
fcmovb
loopne
cmp
mov
mov
mov
xor
incb
dec
outsb
dec
test
lock
lret
mov
push
rorb
push
cmpsb
rcrl
cmpsb
daa
cmp
mov
inc
lret
aaa
or
cmpsb
xor
cmpb
or
sub
push
cmp
xchg
ja
or
dec
jb
lds
ss
xlat
pop
int
lcall
repz
mov
ds
ja
fmulp
es
lret
repnz
jae
cmpsb
pop
xor
inc
arpl
dec
inc
sbb
mov
sbbb
rol
movsl
jp
in
cmp
dec
push
pop
or
dec
mov
jl
adc
sbb
cmp
sub
das
jne
mov
pop
jns
test
pop
gs
add
outsb
adc
ss
xlat
cwtl
repz
popf
or
adc
inc
cmp
jmp
pop
iret
sti
ja
int
push
lds
xchg
jo
jo
sub
cmpsb
jmp
test
sbb
sbb
and
mov
push
in
leave
mov
mov
rclb
lret
out
daa
imull
rolb
pushf
pushf
mov
dec
loop
lods
arpl
mov
sub
mov
pushf
jno
daa
xor
xorl
pop
xchg
outsl
std
movsb
imul
pusha
adc
and
mov
or
dec
and
pushf
data16
mov
fwait
adc
mov
push
xor
dec
mov
aas
test
into
pop
or
mov
or
shll
jmp
insb
pop
pop
jbe
sti
rorb
and
xchg
push
lock
ljmp
pop
cmpsb
jmp
mov
js
adc
dec
adc
popa
scas
dec
repz
leave
sub
adc
pop
jno
in
aas
outsl
mov
adc
arpl
jmp
les
push
mov
xlat
aas
rorl
dec
jns
push
aas
pop
dec
in
adc
cmc
inc
xchg
stos
mov
push
dec
scas
je
xor
cmp
xchg
xchg
cmp
add
xchg
rcrl
or
push
in
mov
aam
popf
inc
push
mov
inc
insl
test
leave
or
outsb
xchg
imul
push
push
lahf
and
std
mov
cmp
mov
addr16
mov
pop
es
inc
xchg
dec
in
lcall
dec
mov
lret
stc
xchg
sub
inc
lcall
dec
outsb
lcall
push
dec
les
stc
jo
insb
add
xchg
adc
movsl
lds
outsb
add
xchg
out
inc
sti
insl
rclb
mov
and
pop
lret
jae
sub
sbb
cmp
test
repnz
cmc
or
rclb
mov
cs
jae
mov
shll
dec
repnz
push
addr16
mov
mov
je
cmpb
out
ja
xlat
and
mov
push
mov
sti
adc
jle
in
jne
xor
mov
xchg
and
lcall
xchg
mov
cs
sbb
mov
xchg
loope
mov
mov
lds
pop
inc
mov
jl
pop
dec
in
cs
and
pop
jnp
jo
sub
sahf
add
add
add
rdpmc
int
mov
pop
fmull
aam
mov
pop
mov
out
inc
adc
aas
jg
or
arpl
in
sub
test
dec
push
sub
std
xchg
bound
out
mov
pop
and
ret
repz
jno
mov
sbb
xchg
sar
inc
jp
adc
dec
into
xor
push
pop
inc
pop
and
mov
xor
test
dec
or
sub
sbb
and
xchg
pop
nop
mov
mov
inc
leave
icebp
and
leave
pop
movsb
in
push
jmp
orb
iret
sbb
mov
enter
in
pop
mov
hlt
xchg
pop
aaa
lcall
push
mov
mov
mov
push
mov
sub
ja
adc
or
push
pop
inc
mov
jbe
mov
je
cmp
adc
hlt
fdivrs
push
or
sarb
xchg
sub
gs
xchg
mov
jge
and
push
mov
mov
xor
in
sti
mov
dec
mov
and
mov
arpl
in
mov
frstor
mov
loop
imul
dec
add
addr16
lahf
push
cmp
sub
jmp
outsl
iret
mov
mov
sub
iret
ss
push
stos
adc
mov
popa
gs
into
dec
mov
push
out
inc
cmpsb
mov
js
ret
int
sub
xchg
push
in
adc
pop
mov
fistps
inc
xor
imul
xchg
add
pop
stos
movsb
pop
mov
into
cmp
push
outsb
mov
fwait
out
mov
pop
inc
mov
pusha
ljmp
jbe
jge
pop
cmp
adcl
in
ss
mov
insb
push
pop
and
fwait
stos
dec
mov
data16
filds
jmp
sbb
adc
xchg
shll
jno
movsb
stc
xlat
outsl
xor
mov
gs
and
inc
iret
adc
nop
pop
sub
dec
js
cwtl
lret
lcall
orb
outsl
int3
pop
loope
or
fsubrl
lret
dec
pop
enter
mov
ror
mov
lret
pop
lock
xchg
das
scas
jb
jle
addr16
xchg
stos
imul
adc
test
fcomps
or
int
mov
inc
ja
mov
or
gs
outsl
pop
mov
xor
inc
imul
mov
pop
jl
mov
mov
imul
adcl
jne
mov
dec
stos
sub
mov
ss
imul
cmp
mov
jle
jp
pop
int3
adc
movsl
cmp
adc
ret
sti
cmpsl
push
stc
pop
cld
bound
mov
jno
jo
pop
push
jne
sbb
sbb
loopne
pop
mov
xor
mov
fdivs
loopne
ror
lea
arpl
aam
sbb
sbb
xchg
mov
ljmp
out
dec
pop
or
push
scas
ret
fstl
inc
or
and
divb
jg
ficomps
scas
xchg
cmp
push
sub
push
inc
mov
mov
pusha
pop
xor
dec
hlt
in
div
leave
sub
hlt
pop
and
mov
pushf
jp
addr16
sbb
sbb
cwtl
fbld
sbb
fsubrs
lods
xchg
mov
sbb
movsb
leave
pop
mov
loopne
aad
add
cmpb
movsb
leave
pop
out
addr16
loope
mov
jmp
cmp
or
adc
mov
pop
inc
xchg
jle
sub
push
stos
test
cltd
fdivrl
je
ret
cmp
sarl
pop
sti
jns
ds
outsb
lods
push
sbb
sbb
dec
push
xchg
int
jl
data16
ljmp
cltd
push
es
add
mov
or
push
out
cmp
xor
shrl
mov
gs
xchg
cmp
mov
fmul
notb
cmc
adc
jae
cld
stc
int3
ss
bound
mov
adc
inc
mov
in
fstp
int3
fld
gs
adc
lods
adc
xchg
adc
mov
mov
js
scas
mov
add
jne
mov
sahf
in
cmpsb
cmp
xchg
lret
lds
pop
xchg
add
jns
decl
dec
iret
jmp
add
sub
jl
orl
inc
mov
daa
jns
outsb
test
xchg
std
dec
cmp
mov
xor
mov
cltd
push
out
jp
jns
adc
mov
jecxz
pop
mov
fs
xor
mov
out
jo
fisubrl
xchg
cmc
pop
mov
mov
adc
add
jg
xchg
lods
subl
adc
mov
push
sub
pop
push
jecxz
dec
bound
inc
push
mov
inc
xor
mov
push
bound
and
mov
iret
or
dec
movl
outsl
mov
add
push
into
mov
data16
pop
adc
xchg
pushf
jns
sub
sbbl
pop
imul
jb
xchg
icebp
icebp
and
insl
outsb
add
xchg
lret
push
inc
fistps
push
jno
aas
sub
push
repnz
or
fld
lea
movsb
mov
or
jnp
push
jge
dec
sbb
lret
or
or
xchg
or
orb
push
scas
or
cs
xor
popf
xchg
push
jb
mov
pop
scas
sub
int
dec
in
pop
fwait
test
jbe
pop
mov
or
or
cmc
jg
cmp
jecxz
arpl
mov
lret
test
cmp
add
inc
roll
ljmp
cmp
fs
sahf
ret
out
and
adc
push
pop
stc
lea
add
mov
out
stos
int3
xlat
cmp
in
dec
pop
imul
cmc
loopne
int
push
or
cmp
fldcw
lea
loopne
iret
fbstp
js
adc
stos
cmp
aaa
ss
arpl
push
fstpl
lods
xor
mov
or
in
fisubrl
nop
mov
repz
sub
lds
add
and
jecxz
xchg
arpl
pop
ja
in
idivb
lret
enter
inc
pop
pop
dec
or
jle
or
push
jae
mov
mov
jae
push
jbe
jns
outsl
lods
fidivl
ficompl
aam
dec
lahf
add
sub
test
adcb
sbb
add
sbb
adc
adc
add
push
xchg
jecxz
inc
inc
popf
bound
push
jnp
push
mov
mov
cmp
mov
data16
dec
orb
mov
or
pop
jo
test
mov
lods
stos
mov
dec
lret
jo
jge
cwtl
mov
add
lret
mov
dec
rclb
lret
inc
pop
outsb
stos
xchg
gs
out
mov
mov
stos
out
or
sub
rcll
pusha
psubw
mov
adc
outsl
inc
sbb
inc
mov
pop
insw
fldl2t
cmc
cmp
jle
bound
sub
mov
arpl
sbb
mov
cmp
stos
add
addr16
dec
jecxz
lods
pop
mov
hlt
adc
mov
mov
add
ret
mov
push
imul
xor
sahf
lret
mov
outsl
in
icebp
ds
xor
inc
in
es
xor
mov
fld1
adc
xchg
lock
and
out
push
pop
jno
mov
mov
mov
xor
push
insl
loop
inc
cmc
pop
mov
ljmp
pushf
mov
rclb
pop
jle
jg
out
sbb
pop
test
cmp
sub
pop
mov
mov
shll
lcall
nop
adc
mov
jbe
aad
add
xor
dec
push
add
mov
lock
xlat
loopne
push
fstpt
pushf
cs
fcoms
jns
scas
iret
loopne
shlb
bound
arpl
fdivl
xchg
loopne
pop
or
add
gs
cltd
imul
imul
or
out
dec
mov
daa
mov
ljmp
sti
xor
adc
xchg
xor
and
outsl
or
cmp
push
ficompl
add
adc
negb
fmulp
sbb
and
inc
inc
sti
add
pop
mov
jg
add
mov
dec
jno
rcrb
fs
aad
adc
dec
sahf
mov
aaa
cmc
push
addl
movsb
cltd
bound
jle
xchg
sarb
cmp
lods
cld
mov
fmull
and
sbb
outsl
popa
mov
das
cmp
push
mov
into
out
mov
xor
xor
rorl
rolb
insb
mov
add
dec
aas
mov
lods
scas
sub
out
insb
fnsave
mov
icebp
xchg
mov
push
lahf
sub
push
push
inc
jnp
mov
outsl
mov
mov
out
xchg
sbb
and
int
xchg
mov
nop
push
in
push
fistpll
fsts
push
into
jne
push
and
popf
pop
inc
es
jae
fdivrl
sub
mov
imul
cmpb
push
pop
mov
or
lods
add
pop
inc
push
ret
call
fimuls
mov
mov
xor
jg
pop
pop
add
xchg
pop
cmpsl
adc
in
outsb
test
mov
lahf
sub
mov
mov
push
jg
xchg
mov
cmp
adc
int3
jns
inc
mov
cld
fisttpl
sbb
xchg
in
repz
jge
sbb
jecxz
sbb
push
lods
mov
lock
push
add
pushf
mov
shr
and
inc
cmp
setb
je
insl
addl
pusha
cpuid
ret
add
mov
insl
xor
and
out
mov
mov
addr16
push
mov
pop
xchg
xor
or
mov
cmp
int
in
jge
mov
aas
repnz
sub
stos
arpl
fnstcw
mov
mov
clc
sub
call
movsl
lret
or
mov
daa
cmp
lret
es
adc
ret
outsb
cltd
clc
fcomps
adc
lret
inc
cmc
push
jns
pop
jl
scas
sub
cmpsb
inc
loope
lds
add
test
pop
into
xor
ss
scas
insb
or
add
and
xchg
loopne
cltd
xchg
add
xlat
sbb
insl
mov
mov
pop
loopne
cltd
sub
inc
int
mov
gs
mov
dec
push
stos
add
popa
insl
outsb
sbb
sub
out
gs
cmp
cmpl
xchg
roll
out
and
cmpsl
lods
scas
in
add
dec
add
div
pop
aam
pop
nop
cld
mov
int
daa
xor
out
fs
or
ss
xor
xor
pusha
jnp
add
mov
jecxz
rcrb
int3
dec
lods
outsb
sti
sub
ror
imul
push
push
sarl
das
jge
xor
mov
and
fisttps
add
ljmp
xor
push
pop
adc
stos
daa
push
pushf
cltd
shlb
lock
clc
inc
jp
xlat
lods
xchg
outsl
dec
jecxz
jp
mov
dec
mov
fists
aad
movsl
mov
jno
and
cmpb
pop
cli
lds
sbb
mov
ja
aaa
push
fwait
jae
shll
lea
dec
in
std
xor
or
jno
xchg
or
xlat
push
xchg
out
or
int
dec
mov
or
out
inc
push
jne
rol
push
cmpsb
jg
sub
imul
adc
movsb
iret
scas
xlat
fstl
stc
das
xchg
mov
jae
in
idivb
ret
bound
mov
mov
insl
or
push
jbe
insl
pop
insb
xor
or
aaa
in
movsb
int
sbb
inc
xchg
lcall
push
mov
jle
push
lock
mov
push
sbb
das
int
aam
inc
popf
out
test
test
jp
add
xchg
sbbb
and
fistpl
mov
push
sub
repnz
push
xor
out
jb
xor
sub
stos
aas
dec
cmpsw
stos
add
sbb
pop
jb
xchg
sub
add
xchg
inc
push
mov
mov
mov
insb
loope
insw
and
mov
fdivs
and
fsubl
pop
jg
pop
out
xchg
jg
mov
sbbb
mov
int3
sub
pop
push
dec
in
int3
fdivl
sti
or
in
das
dec
add
jecxz
mov
aam
mov
dec
ret
stos
pushf
mov
dec
add
int
scas
mov
xchg
and
sahf
in
nop
jae
dec
add
insb
pushf
or
test
ret
sub
cld
inc
aad
xchg
aaa
decb
ret
xor
mov
add
mov
fstps
lods
jb
push
sub
inc
mov
cs
xchg
mov
shrl
shlb
pop
xor
push
inc
je
jno
scas
push
arpl
outsb
fiadds
repnz
lret
subl
imul
addr16
sub
mov
mov
xor
lea
jg
fisubrs
sbb
dec
ror
mov
add
arpl
push
dec
pusha
dec
andl
pop
add
jb
nop
mov
es
sub
int3
mov
add
std
in
jns
mov
gs
insb
fwait
jecxz
add
testl
mov
mov
loopne
pop
push
xlat
enter
mov
pop
cwtl
dec
out
aad
inc
ficompl
jl
outsl
scas
mov
xlat
inc
es
repnz
sti
dec
movsl
push
lcall
or
cwtl
mov
ds
sub
fwait
pop
mov
into
and
loop
and
jo
fsubl
dec
xchg
iret
scas
cmp
add
ret
mov
in
mov
jae
mov
inc
cmp
and
rcrl
mov
iret
dec
inc
cli
outsb
add
sub
imul
adc
int3
and
ret
xchg
mov
pop
jb
jbe
cmp
clc
lods
les
stc
stos
push
push
pop
jle
and
jge
loop
addb
dec
shlb
cmp
pop
fs
je
inc
stos
filds
push
xor
push
cmpsb
push
mov
std
push
sbb
outsl
xlat
push
sub
push
add
mov
lahf
push
push
xor
addb
enter
mov
notb
or
in
jmp
mov
test
xor
loop
xchg
and
loopne
aas
cltd
inc
cmp
fsubrs
rcrl
jo
xchg
mov
nop
cld
pop
push
cmp
inc
pusha
lahf
pop
cmp
vmread
adc
jbe
xchg
pop
cld
lods
lea
nop
xor
ljmp
insl
addr16
add
mov
aaa
roll
icebp
sbb
cmp
lahf
cltd
inc
xchg
pop
bound
jne
adc
cmpsb
popa
push
insl
lcall
cmp
imul
sbb
jae
out
pop
outsb
lock
fistps
mov
sub
xchg
mov
xor
cmpb
clc
inc
adc
sub
sub
xor
loopne
or
orb
sahf
inc
push
ret
icebp
mov
outsl
sbb
mov
sub
ljmp
or
adc
fisubl
pushf
cld
or
not
or
clc
fdiv
shl
scas
mov
cmpb
insl
cmp
mov
xchg
mov
fnstenv
mov
pop
lcall
mov
stos
pop
adc
inc
int3
sbb
sbb
dec
dec
ds
cmp
jb
adc
int
rcll
jnp
mov
lods
orl
mov
add
mov
push
out
out
mov
arpl
jnp
adc
rolb
or
push
push
testb
ljmp
jl
push
or
fdivrs
subl
mov
test
mov
dec
mov
push
sub
fisubrs
xchg
nop
push
fwait
movsb
jb
mov
sarl
jae
imul
pop
int3
sub
jmp
fcmove
dec
ja
imul
jge
ret
fidivrl
mov
out
mov
pop
ja
or
les
shll
xchg
ja
and
imul
bound
fistpl
lock
fsubr
jbe
stc
cwtl
add
mov
pop
pop
inc
add
push
mov
xor
pushf
xacquire
lea
data16
pop
arpl
jle
sub
daa
outsb
cli
cltd
test
notl
jmp
out
mov
sarb
xchg
adc
xor
push
mov
int
jae
repnz
aad
lds
movb
popf
add
dec
rclb
stos
xor
jp
mov
sbb
add
fisttpll
addl
or
addr16
repnz
test
mov
les
std
sub
gs
stc
cmc
adc
test
fcomps
into
push
xchg
sub
and
das
cmp
hlt
pop
jo
jb
popa
daa
sbb
xlat
cmp
mov
pop
sti
pop
sbb
and
cmc
scas
or
cli
jno
sub
cmpsl
xchg
int3
icebp
cld
out
arpl
xchg
add
sub
xchg
jmp
adc
stos
insb
lret
ret
sbb
cmp
xchg
push
pop
pop
mov
ret
xchg
inc
sar
jns
push
mov
mov
or
popa
mov
sbb
jnp
xor
dec
jb
mov
faddl
gs
out
mov
icebp
gs
jnp
icebp
and
adc
dec
cs
or
stc
sbb
out
jbe
xchg
cs
fcmovnbe
add
ss
scas
inc
cmp
and
mov
push
mov
xor
xor
dec
add
push
out
adc
ficomps
outsl
push
stc
daa
fucomi
leave
dec
movsb
jmp
movsb
je
sub
jo
mov
iret
push
pushf
int
pop
scas
dec
push
xchg
lods
test
mov
cmp
imulb
jne
ds
sub
adc
mov
std
shll
jp
adc
push
sbb
data16
jp
mov
sub
inc
pop
mov
lds
movsb
xchg
leave
test
lea
idivl
push
call
mov
dec
pop
or
rorb
popf
sub
jnp
jo
cmc
sbb
add
fsub
cltd
xor
jp
jb
pop
out
add
les
leave
push
imull
pop
cltd
jbe
rcrl
pop
leave
pop
dec
cli
arpl
int3
jp
out
and
or
jg
pop
lahf
dec
imul
xor
dec
inc
pop
outsl
pop
mov
mov
out
add
lods
cltd
lea
sarb
iret
adc
pushf
add
outsb
movd
ja
mov
inc
xchg
dec
cmp
lcall
addr16
adc
call
push
aas
outsl
sbb
push
mov
or
jns
and
sub
pop
sar
adc
in
imul
nop
push
xor
jmp
or
mov
sbb
mov
lock
ret
sub
push
imul
push
adc
dec
lcall
mov
pop
andl
addr16
dec
or
mov
xchg
sub
dec
lcall
fidivs
xchg
xchg
xchg
scas
je
test
fwait
iret
cmp
loopne
aad
inc
imul
and
inc
das
in
loope
test
jmp
xchg
dec
pushf
mov
xchg
sbb
jmp
adc
ret
notl
mov
mov
ret
push
mov
aam
dec
cltd
push
mov
mov
sbb
sub
jb
fptan
aad
jecxz
fsts
push
gs
jns
iret
push
jbe
mov
fisubrl
pop
add
icebp
fbld
jl
sbb
rorl
stc
jecxz
lea
test
pop
xchg
les
push
out
pop
pop
movsb
fsubs
push
or
cmp
repz
js
jecxz
ss
adc
je
jb
xchg
xor
sbb
and
cs
stos
pop
shl
cmp
and
sbb
push
hlt
and
ljmp
inc
inc
mov
fnstcw
sub
stc
subl
mov
or
jbe
mov
push
pop
sbb
or
pop
cmp
push
inc
dec
out
mov
xor
mov
scas
lock
std
jnp
clc
int3
inc
and
ja
mov
out
mov
mov
push
jbe
jle
mov
jbe
cmp
mov
aaa
pop
iret
lahf
jb
jecxz
aaa
mov
sub
pop
add
xorb
sbb
mov
add
nop
sbb
pop
daa
insb
sub
adc
ret
movsb
rolb
outsl
pop
sahf
mov
mov
ss
subb
mov
push
testb
mov
cs
or
sub
and
int
mov
fcmovb
lahf
push
add
cmp
lods
pop
pop
mov
mov
pusha
sbb
test
testb
mov
scas
lret
jle
iret
mov
into
mov
cmp
cmp
push
add
and
stos
bnd
mov
mov
insb
mov
enter
mov
ret
stc
sbb
fiaddl
in
out
cmpsl
jg
fadd
xchg
mov
adc
test
push
movsl
pop
push
xchg
cmp
or
lret
lahf
in
sub
jp
pop
into
or
in
testb
fidivrl
aad
jp
adc
add
adc
sbb
cmpsl
sbb
add
shlb
inc
push
imul
mov
pop
fldt
xor
negb
lea
add
popf
mov
fs
jnp
imul
lock
rcr
ret
jecxz
insl
fstps
dec
jl
fisubrl
add
stc
lret
cmp
cmp
xchg
mov
jae
xor
or
mov
jnp
aad
ds
cld
bound
add
mov
data16
jnp
mov
inc
mov
mov
pop
adc
jge
std
repz
inc
add
mov
sbb
and
jb
inc
xor
mov
ret
adc
inc
or
insl
pusha
cmp
or
cmpsl
adcl
mov
dec
sbb
dec
mov
mov
dec
inc
cmp
fwait
lea
loope
js
mov
jl
sub
addr16
inc
cmp
pop
addr16
repnz
les
lds
dec
in
icebp
push
adc
mov
enter
add
push
adc
cmp
insb
add
push
or
jb
js
in
sbb
mov
pop
xchg
push
jne
dec
fmuls
rcrb
cld
mov
add
pop
jno
shr
cwtl
dec
jb
fwait
leave
and
jl
lock
fisubrl
or
xchg
xor
or
inc
cltd
popf
jo
dec
bound
lret
lahf
and
sub
nop
sti
xor
jg
xchg
jecxz
sub
std
jae
xchg
cltd
adc
inc
inc
scas
jle
fistpll
in
aad
mov
fisubs
pushf
add
push
and
push
ret
push
sub
shrb
mov
filds
cmp
mov
push
mov
orl
and
xchg
orl
mov
jns
jmp
push
pop
repz
inc
inc
mov
jb
inc
dec
fildll
mov
leave
cmp
xchg
enter
xchg
loope
sub
fldenv
jb
int
dec
push
hlt
push
aas
jmp
rorb
mov
rcr
add
ss
shll
aaa
inc
and
and
loopne
mov
in
popa
out
xchg
paddd
mov
sub
add
loop
add
dec
jne
mov
adc
jns
cwtl
ja
sahf
inc
popf
dec
cmp
lea
mov
fdivl
pusha
inc
loop
dec
cmp
xor
es
movups
iret
mov
cmp
shl
ss
fs
xchg
sbb
xchg
scas
insb
mov
ret
mov
push
ds
outsb
in
inc
stc
push
aad
xchg
push
jbe
mov
xor
lods
inc
sub
add
adc
ljmp
and
dec
mov
jle
in
shrl
xchg
loop
jecxz
fcoml
scas
adcb
mov
mov
ficompl
leave
jo
adc
or
idiv
fnsave
arpl
jo
aas
mov
sub
and
jecxz
dec
push
jmp
into
mov
inc
lahf
fs
cmp
push
mov
inc
add
push
je
insl
lret
sbb
gs
sahf
js
insb
loopne
mov
ss
ss
cmpsb
mov
nop
sub
and
mov
gs
and
mov
xchg
xchg
sub
movsb
fisubrs
fldt
lret
push
aaa
jecxz
mov
pop
jge
cmp
mov
test
and
and
add
push
jno
push
in
mov
sbb
xor
jmp
sub
les
cmpl
jle
fimull
mov
dec
lds
mov
cwtl
push
or
mov
aad
adc
mov
cmp
shll
mov
add
mov
xchg
lds
out
adc
fimull
lods
ja
call
daa
xchg
inc
sub
inc
sub
into
lods
popa
lock
xor
es
je
clc
rorb
in
dec
cmpsb
repnz
xchg
repz
sar
mov
sbb
fs
mov
das
movsl
jne
fldenv
mov
or
mov
jbe
insb
clc
push
int
nop
cmp
sub
jmp
inc
pushf
popa
xorb
call
std
cmpsl
rcrb
and
jbe
xorb
mov
xchg
fnsave
out
stos
movsb
fst
hlt
jnp
xchg
xor
test
cltd
inc
pop
iret
push
lods
clc
dec
dec
adc
xor
mov
xchg
mov
out
xor
push
ffree
cmp
lcall
and
pop
inc
cltd
mov
aaa
cwtl
adc
jo
mov
lods
xchg
add
loope
pop
pop
daa
cld
dec
mov
or
jl
cmpsl
or
mov
mov
jno
cwtl
cmp
pushf
clc
dec
in
xor
in
popf
frstor
push
push
dec
jp
loope
dec
hlt
enter
push
push
jmp
test
pop
pop
iret
or
inc
out
xchg
sub
lret
ss
add
cmc
xor
pop
loop
mov
ja
mov
dec
or
mov
ds
jp
cmpsl
push
nop
sbb
cwtl
or
push
pop
fists
mov
mov
aaa
pop
dec
sbbl
cltd
mov
je
pop
inc
push
ds
aaa
inc
addr16
cmp
mov
inc
leave
sub
shll
xchg
mov
pop
dec
sti
out
in
push
push
pusha
jo
jns
clc
out
add
insb
mov
mov
std
stc
adcl
or
sbb
stos
jne
int3
pop
pop
inc
push
adc
mov
daa
pop
push
mov
in
std
cli
cmp
es
cwtl
sbb
adc
iret
lret
add
aad
in
iret
lret
popf
scas
test
sti
cmp
imul
inc
pop
fiadds
loopne
hlt
xchg
leave
mov
sbb
xchg
data16
pop
insl
int
lahf
or
imul
sub
pop
lahf
inc
cld
pop
dec
inc
cmp
jmp
xor
mov
cmpb
ss
add
out
cmp
push
out
popf
movsb
pop
jg
das
test
pop
mov
pop
jns
das
sbb
jge
stos
cltd
mov
aaa
mov
push
shrl
push
cs
xchg
or
mov
lret
xor
sbb
lahf
fadds
cs
aaa
push
fildll
jecxz
fmull
inc
popl
jp
cmp
lods
outsl
cmpsl
in
popf
jp
inc
push
push
lcall
ja
cmp
pop
orb
lahf
mov
push
mov
ja
jbe
adc
in
in
insl
or
out
add
je
movsl
sub
stos
push
mov
mov
jle
and
jo
jp
pop
cmpsb
repz
andb
sub
fs
cmp
insb
sub
scas
xor
mov
xlat
inc
add
dec
stos
insl
je
sbb
sbb
arpl
addr16
mov
or
push
sti
add
xor
inc
mov
aas
stos
inc
pop
fiaddl
inc
adc
pop
ds
stc
jne
testl
mov
xor
mov
jne
lret
aas
mov
data16
adc
aam
enter
push
test
inc
xchg
int
inc
xor
sbbl
les
out
test
inc
fldenv
jmp
inc
pop
js
add
or
fnstenv
lods
push
popa
pop
mov
mov
xlat
das
xchg
fstpl
lock
in
cmp
add
sub
lock
dec
mov
jmp
fstpt
push
mov
aam
push
jle
test
jmp
jge
shll
sahf
loop
out
xor
and
shlb
xchg
adc
xchg
cs
dec
xor
cmp
aaa
jp
rolb
mov
xor
jb
dec
cli
insl
lock
xchg
xlat
sbb
inc
cltd
jne
int3
and
jne
outsb
call
cli
add
cmpsl
in
rcr
push
pop
in
cli
loope
ljmp
lcall
mov
pop
push
push
sub
cwtl
sub
and
cltd
dec
xor
mov
imul
pop
cwtl
xor
jle
add
jle
add
stc
dec
lahf
or
xchg
xchg
negb
adc
lods
mov
loope
movsb
lds
loopne
loopne
loopne
popf
xor
ret
nop
jmp
pusha
or
out
out
inc
das
es
int3
mov
mov
outsl
icebp
push
pop
iret
test
int3
lds
push
xchg
jge
stc
jnp
and
sub
mov
pop
jns
aaa
out
lea
xchg
ds
xchg
js
xor
hlt
mov
pop
jae
and
aaa
ljmp
push
mov
stos
mov
add
xchg
xor
negl
mov
adc
imul
je
scas
insb
in
gs
sub
cmp
scas
int3
lahf
push
popa
push
sub
xchg
adc
aaa
push
sub
lea
xor
and
sti
mov
sti
pop
push
test
xchg
mov
mov
or
scas
jmp
out
add
in
sub
mov
les
xor
xor
xor
stc
mov
aam
cltd
mov
cwtl
mov
pop
fdivrl
sbb
fwait
lock
mov
mov
testl
xchg
loope
inc
movsl
mov
mov
jg
mov
cmp
imul
mov
pop
fsubs
xor
mov
out
inc
roll
popf
mov
clc
and
pop
xchg
jae
xchg
aaa
lea
arpl
and
jbe
test
in
aam
popa
mov
iret
inc
mov
popa
xchg
xchg
cmp
jge
in
test
fcoml
adc
jp
fiaddl
das
push
pop
shlb
mov
and
jmp
inc
adc
nop
and
mov
mov
pop
cli
ss
pop
fnsave
xor
neg
and
sti
enter
inc
inc
mov
lock
pusha
jge
stos
in
mov
xchg
mov
mov
shrb
data16
incb
imul
mov
outsb
pop
test
pop
mov
jns
add
mov
cli
mov
sarb
ss
jb
pop
pop
aas
inc
jg
aad
les
shlb
mov
cmp
and
stc
pop
mov
mov
stos
xchg
sbb
cmpsl
xchg
mov
orl
rcl
addr16
add
dec
pop
neg
and
stos
dec
insl
adc
scas
sub
addr16
or
dec
sub
and
sbb
or
dec
lret
ljmp
ret
dec
cmp
mov
jge
inc
cmp
sti
xchg
hlt
and
jle
cltd
adcb
shrb
rorl
jmp
xchg
push
mov
aam
stos
sub
dec
ud2
test
stos
adc
outsl
insb
sbb
cli
mov
nop
and
movsb
and
out
das
inc
orl
cmpsb
xchg
sub
movsb
popf
xor
xchg
out
js
out
idivl
rorl
aad
jp
mov
xchg
mov
scas
arpl
inc
jno
mov
push
mov
pop
cli
xchg
adcl
pop
inc
mov
pop
xor
mov
std
xchg
pop
fisubrl
adc
cs
out
test
aas
sub
sbb
sti
cs
out
inc
lret
das
cmp
adc
es
mov
inc
sbbl
aaa
fiaddl
push
std
mov
sbb
cmp
mov
movsb
cmp
sub
mov
xchg
ja
movsb
loopne
dec
pop
insb
insl
cmc
jge
cwtl
test
jne
arpl
add
dec
push
fwait
push
movsb
mov
sub
jl
lock
jecxz
push
and
push
mov
sbb
or
test
sbb
jae
les
out
sbb
test
in
dec
mov
fildll
lods
push
cld
push
cltd
mov
rcr
loopne
in
scas
in
addl
adc
add
lea
jl,pt
ss
fmull
jge
xchg
mov
pop
xor
mov
and
rol
sbb
fsubrp
adc
enter
sub
jne
data16
mov
jmp
sbb
lods
cmp
roll
pop
scas
ds
cmp
das
into
add
out
inc
fstpl
dec
mov
xor
sub
xor
std
aaa
fsubrl
pop
dec
nop
xchg
mov
sbb
and
rcrb
cs
leave
arpl
into
lcall
or
add
addr16
inc
std
push
lock
movsb
sbb
js
pop
jbe
adc
aas
jb
jno
insl
fidivs
fnsave
mov
iret
xor
or
mov
std
jae
mov
cmp
or
jp
rolb
outsb
test
mov
xchg
iret
xor
test
test
pop
jge
sub
pop
sbbb
dec
cli
pop
add
pop
ret
cmp
mov
sbb
or
mov
push
mov
mov
mov
inc
pop
daa
insl
and
lret
int
adc
push
and
int
jns
cld
xor
jno
movsl
movsl
dec
xor
jle
ret
sahf
mov
loope
xchg
out
and
inc
mov
pop
push
std
push
pop
stos
mov
pop
in
and
int
clc
lea
sub
or
or
rcl
jecxz
inc
xlat
out
mov
outsb
insl
mov
test
int
add
inc
mov
adc
or
add
push
mov
mov
jge
aad
jb
aam
stos
xchg
sub
mov
xchg
enter
mov
mov
pop
add
aam
test
out
aaa
xor
mov
out
rolb
mov
shlb
and
mov
leave
cs
inc
test
mov
int
shll
rcl
push
sbb
or
jmp
mov
dec
testl
stos
loope
lret
xor
jp
cld
jl
lods
add
fucomp
cmp
pop
in
or
mov
xor
push
popw
jb
ficomps
aam
pop
sub
andl
lret
loopne
inc
mov
sub
daa
and
scas
rorl
mov
iret
mov
inc
repnz
pusha
movsb
in
or
pop
lahf
jnp
fwait
ret
jbe
pop
out
pop
shl
test
mov
ret
fldl
out
sub
pop
inc
ficoms
sub
repnz
aas
jmp
pusha
imul
xchg
imul
cltd
stos
xchg
int
popa
rcrl
adc
sbb
lods
je
pop
jl
push
iret
xchg
sub
fnstenv
jp
shrb
xchg
popf
popf
mov
pushf
leave
loope
pop
mov
dec
in
push
mov
mov
lods
jl
sub
out
sbb
jae
add
fcompl
stos
push
aam
mov
in
lret
stc
call
cmp
imul
jecxz
add
test
fwait
into
mov
mov
icebp
mov
mov
jle
inc
pop
pop
dec
fisubrs
pop
or
ss
xchg
mov
or
push
ja
nop
in
pushf
lcall
sbb
popf
dec
in
inc
cmc
mov
sbb
fstpt
sbb
xchg
je
sbb
mov
pop
cwtl
sahf
xchg
inc
xor
leave
insl
les
xchg
jge
or
into
or
out
mov
lds
pushl
jle
pop
ljmp
mov
xchg
push
loopne
mov
sub
pushf
inc
imul
dec
dec
mov
dec
sahf
jl
mov
xor
xorb
adc
add
push
int
fisttps
pusha
lret
aam
or
dec
push
cmc
jle
ret
xchg
pop
mov
sub
mov
incb
mov
cmp
data16
stos
and
dec
jnp
imul
int
mov
inc
xchg
xor
loop
stc
subb
jnp
hlt
dec
incl
or
imul
flds
addr16
cmc
outsb
ficompl
inc
xchg
xor
cmp
outsl
adc
aaa
icebp
arpl
or
gs
fdivrl
shr
dec
aad
test
pop
fstpl
loop
scas
in
jmp
lret
scas
lahf
xor
mov
popa
mov
jge
mov
xor
mov
jp
mov
mov
xchg
mov
mov
cmpsl
pop
or
in
cli
sub
or
mov
inc
mov
fcomp
and
test
fldenv
xchg
cmp
mov
or
and
push
mov
xchg
insl
imul
dec
jg
int
stos
push
jae
lock
xchg
leave
inc
sub
mov
jo
hlt
lahf
stos
pop
and
inc
popa
popa
xor
pop
ret
inc
add
gs
popa
in
cmpsb
sub
or
cs
arpl
out
mov
out
out
sub
jle
aam
imul
xor
inc
add
lods
js
jno
cmc
ja
fwait
push
in
and
xor
popf
data16
cmp
add
ja
mov
adc
jecxz
test
aaa
push
mov
pop
inc
out
into
iret
jnp
je
and
shlb
jb
xchg
push
mov
xchg
cwtl
test
jl
incb
pop
sub
push
data16
jg
cwtl
sti
sbb
mov
enter
nop
clc
xor
or
stos
imul
xchg
cmp
pop
lods
push
ret
cli
outsl
sbb
cmc
stos
mov
xlat
pusha
mov
xchg
cs
inc
sbb
imull
push
mov
inc
ljmp
jno
xchg
ret
orb
aad
xor
addb
les
aad
add
add
sbb
or
test
rcll
mov
dec
push
in
sbb
lret
and
imul
out
add
lock
loope
in
lds
push
es
decl
or
outsl
lds
outsl
inc
sbbb
repz
cld
int3
add
mov
xor
pop
inc
inc
in
fnstcw
lods
xor
das
arpl
push
mov
xchg
movb
mov
jp
std
push
shrb
insb
mov
in
or
sti
dec
pop
pop
mov
inc
inc
mov
loope
mov
ret
and
push
repz
jnp
push
inc
addl
loop
call
pushf
push
mov
scas
fisubs
xchg
aam
das
inc
sarl
sub
out
adc
fildl
pop
sarb
xor
and
imul
jp
mov
jle
ljmp
dec
arpl
xor
xlat
lahf
mov
iret
push
cmp
xchg
mov
mov
mov
in
fsubl
pop
sahf
pop
inc
xchg
or
inc
jo
insb
movsl
xor
add
test
shll
dec
lods
imul
outsl
test
push
cwtl
sbb
and
cs
mov
inc
inc
lds
sub
cmp
xchg
cltd
jnp
xchg
add
and
cmp
das
roll
cltd
and
dec
xor
push
pop
bound
call
es
mov
jecxz
xchg
push
xchg
mov
and
lods
mov
ror
imul
addl
mov
ljmp
dec
pop
xlat
dec
sub
jns
jae
mov
outsb
push
jle
dec
jae
lods
roll
imul
dec
sub
push
or
ffreep
stc
cld
pop
add
dec
mov
inc
xchg
xchg
push
cmp
rcrb
push
push
sbb
mov
or
jle
lret
lret
pop
inc
loope
lea
imul
sub
sbb
cltd
xor
inc
iret
jp
outsl
sarb
cmp
and
pop
pop
cltd
jecxz
xchg
xlat
cmp
fisttps
les
sbb
mov
ret
xchg
cltd
daa
fldenv
mov
in
sbb
mov
inc
in
xchg
jae
pop
outsb
add
xor
push
loopne
int3
movsb
pop
pop
cmc
xor
pop
adc
add
and
adcb
ret
and
jg
aas
negb
aaa
cmp
add
mov
or
cli
insb
push
dec
xchg
add
shll
xchg
mov
push
adc
lock
mov
fldcw
or
lcall
xchg
mov
xchg
dec
dec
pop
jg
xor
mov
jmp
push
testb
das
pop
pushf
jo
popf
stc
sbb
pushf
push
mov
xor
xchg
movsb
and
jae
dec
cmpsb
push
dec
mov
mov
jnp
call
pop
test
push
push
adc
jae
fsubr
out
push
pop
xor
mov
xchg
pop
fwait
or
pop
scas
fsqrt
fmull
push
jmp
xor
add
hlt
lock
fwait
mov
scas
rcrl
add
cmp
cmp
push
lcall
xorl
pop
ret
adc
ss
ds
sbb
sub
and
jl
or
mov
inc
mov
lret
push
mov
xchg
cld
adcb
cwtl
pop
or
ret
and
or
rorl
daa
dec
loope
sahf
nop
jmp
push
cli
xchg
mov
push
sbb
mov
mov
std
pop
or
js
rolb
inc
sbb
adc
test
fidivrs
adc
and
sub
nop
jcxz
pop
push
lods
inc
push
xor
pop
or
jge
sub
mov
xor
mov
xchg
aad
repnz
xchg
pop
push
pop
clc
pushf
outsb
xor
and
sub
jo
stos
imul
movsl
lret
rorl
inc
inc
push
push
aam
mov
dec
fs
pop
cmp
and
stc
fs
inc
or
pop
lcall
jle
outsl
imul
sbb
xchg
sbb
lds
out
pop
xor
add
push
push
stos
andb
mov
or
std
jge
or
call
sbb
inc
mov
xchg
xchg
cmp
or
out
ljmp
sbb
outsb
shlb
push
lock
jg
xor
rclb
insl
in
data16
lcall
ds
popf
mulb
pop
fcomps
inc
popf
lea
dec
push
or
sarl
pop
xor
into
out
and
les
mov
add
cmp
xor
inc
repz
cs
jmp
repnz
sbb
lret
fisubrl
mov
pop
sub
fsubrl
aad
push
es
jg
and
sub
leave
sub
lds
adc
mov
rep
xor
mov
jmp
adc
sbb
jne
out
rorb
fiadds
xchg
xchg
add
xchg
jl
push
add
addl
sub
out
sbbb
mov
fstpl
and
stos
imul
out
into
cmc
movsl
call
call
pop
movsl
test
push
inc
mov
cmp
cmpsb
xor
mov
movsb
out
lds
outsl
cmp
out
outsb
add
push
ss
dec
mov
cmpsb
jo
lret
sbb
sub
rcrl
mov
stc
mov
mov
loopne
cmp
jns
xlat
ja
xchg
cmpsl
sbb
jbe
dec
and
fdivrs
or
mov
shlb
out
in
xor
mov
mov
dec
dec
icebp
push
xchg
test
or
mov
test
ljmp
rolb
xor
enter
jmp
xor
or
stc
inc
lea
adc
sub
mov
add
mov
add
adc
dec
jbe
sbbb
xchg
cmp
mov
cld
aas
fdiv
pop
pop
leave
outsl
push
xor
and
lods
jge
xchg
adc
fidivrs
loopne
mov
sbb
mov
mov
sub
pop
push
dec
clc
icebp
cmpsl
cmc
jle
je
shr
movsl
jns
pop
pop
sbb
cmovo
mov
pop
mov
jbe
gs
xor
repnz
mov
mov
adc
mov
in
dec
xor
inc
cmp
jno
xor
les
rcl
inc
in
insb
mov
repnz
ficoms
aaa
push
mov
sub
outsl
sub
sub
scas
ljmp
fscale
in
push
jbe
mov
ds
xor
je
iret
fnstcw
adc
jmp
mov
ja
ss
outsb
shll
movsl
jo
fldt
cmpb
int3
or
rclb
les
sbb
stos
dec
bound
mov
ret
sbb
push
pop
push
ds
xor
imul
cld
mov
cli
testb
pop
inc
mov
sbb
lahf
cmp
lret
movsb
dec
inc
shrb
xchg
sub
mov
js
xchg
sub
mov
lahf
inc
inc
les
sahf
dec
jle
test
dec
cli
pop
in
ja
mov
inc
dec
inc
mov
or
andb
add
inc
inc
sti
jle
dec
inc
fidivrl
std
loop
movsb
sub
or
in
arpl
cmp
daa
aam
sbb
aaa
add
jne
test
popa
imul
push
push
mov
aaa
mov
inc
dec
push
or
or
in
xlat
mov
pop
daa
pop
iret
push
sub
iret
in
sub
inc
mov
sub
aad
inc
or
push
add
mov
cltd
jecxz
fcoms
loopne
fprem1
rol
and
inc
in
shl
dec
and
add
into
mov
or
xor
sbb
fsubs
fcoms
fsub
andb
rorb
cli
insb
fstl
mov
jae
pop
xchg
jno
out
sti
popf
xchg
mov
cwtd
outsl
dec
and
in
addr16
test
sbb
jae
fdivr
rcl
std
push
std
out
dec
jb
ljmp
and
int3
and
jp
mov
aad
mul
xchg
push
pop
aaa
lods
dec
inc
ret
fistpl
notb
rcr
pop
data16
sbb
xor
cmp
mov
mov
js
dec
imul
mov
jbe
fiaddl
sbb
aam
push
ftst
and
aaa
aaa
xor
bound
xchg
aas
xchg
xor
jg
addb
icebp
add
loope
rcrb
mov
pop
imul
fisttpl
push
mov
popa
jge
nop
mov
dec
bound
adc
fsubr
push
sub
mov
mov
rorb
mov
mov
popa
outsl
test
imul
fisubl
and
cwtl
sbb
xlat
jp
pop
inc
xor
int
inc
and
add
cmp
mov
int
stos
push
and
jge
insb
jae
and
mov
fstpt
jge
popf
fwait
cmp
lods
adc
mov
insb
pop
mov
dec
inc
mov
ss
test
jg
out
mov
repnz
push
stc
push
movsl
inc
sub
sbb
je
lcall
test
fstpl
imul
jle
mov
cmc
push
inc
or
and
xchg
das
xchg
jmp
fistl
stos
xor
inc
sub
push
lret
jo
dec
ss
pop
jle
pop
adc
aad
fldenv
xor
jno
jmp
out
jmp
cmp
mov
stos
mov
addr16
das
mov
cmp
fsubl
xchg
test
popa
stos
sub
mov
mov
fiaddl
fildll
in
or
das
test
ret
int
icebp
inc
mov
mov
and
clc
jmp
add
and
or
arpl
or
std
inc
jmp
loopne
ret
sub
add
popf
popa
fadds
lret
add
or
cmp
lcallw
outsl
cmp
outsb
add
incl
fadds
movsb
inc
loop
scas
mov
out
cmp
jecxz
fildl
imul
test
adc
into
shrb
cli
pop
popa
inc
add
ficoml
cs
add
outsb
outsb
jge
fidivl
lods
dec
inc
nop
pop
jg
sub
cld
loopne
leave
dec
push
ja
add
daa
mov
add
adc
jecxz
fldt
test
bound
xchg
mov
inc
sbb
xor
cmpsl
les
les
jae
push
push
cld
mov
icebp
or
insb
in
sbb
stos
add
sub
adc
sub
mov
test
fcompl
iret
or
js
shlb
pop
and
sbb
test
pop
mov
std
ret
test
ret
inc
mov
cmpsb
cs
pop
out
mov
in
es
xor
mov
push
icebp
push
jnp
jmp
in
adc
dec
pop
iret
lret
adc
fmul
pop
lret
lahf
pop
movsl
xchg
dec
pop
mov
xchg
mov
pushf
lret
insl
sub
sbb
xor
cmp
sahf
pushf
or
mov
pop
mov
sbb
in
cmp
mov
fcmovnu
data16
xlat
fiadds
pop
in
sbbb
pop
xlat
mov
dec
sub
test
sub
lea
cmp
out
rorb
cmp
push
dec
cltd
jge
iret
push
popa
imull
loop
lcall
aam
test
jnp
into
mov
loopne
push
lea
inc
lds
je
rcrb
cmc
push
aas
push
int3
jb
jnp
out
stos
fnstsw
aad
addr16
pop
into
xor
pop
xchg
pop
or
xchg
out
jns
or
xor
or
ret
out
jmp
rorb
or
cmp
xchg
movsb
jae
add
and
ljmp
sub
push
test
popf
inc
lods
mov
sub
xchg
lahf
fidivl
push
cmpl
inc
pop
xor
fistps
xchg
xchg
xor
mov
jg
lock
addl
xchg
insb
mov
sub
shrl
fsubrs
and
mov
loope
and
xchg
mov
pusha
sbb
scas
addr16
cmp
mov
push
pop
xlat
fsubr
xchg
pop
and
mov
push
stos
jmp
lcall
sbb
jl
dec
out
or
mov
adc
pop
loopne
jb
mov
mov
out
cmp
or
xchg
es
mov
mov
and
inc
xchg
int3
adc
sub
jecxz
sub
lret
cmp
cmpsl
inc
mov
fs
and
sbb
push
push
xlat
dec
jg
daa
faddl
and
cltd
adc
mov
xchg
js
mov
sbb
add
lock
cwtl
push
and
aaa
xor
out
or
sarl
sub
sub
pop
inc
jae
mov
fisubrs
mov
jp
fmul
ret
push
sti
cld
mov
add
pop
pop
das
xor
mov
pop
lds
fwait
sbb
mov
add
xor
push
orl
cmp
std
mov
test
cmp
adc
inc
and
notl
loopne
sbb
insb
int
adc
mov
push
jmp
std
jne
xorl
sbb
and
sahf
call
int3
dec
enter
jbe
pusha
push
aad
dec
mov
mov
insb
fwait
xchg
leave
jb
sub
lock
and
fcmovnbe
mov
ret
rcrl
dec
shlb
leave
xchg
and
fabs
cld
inc
sbb
cld
add
ja
icebp
inc
dec
fstl
jle
nop
inc
addr16
or
dec
fwait
push
and
inc
xor
push
daa
outsb
cmp
ds
cmc
push
cmp
cmp
idivl
mov
fwait
test
and
push
ja
inc
pop
ljmp
clc
lods
ss
sarl
xchg
ror
pop
adc
lret
sbb
dec
pop
outsl
sub
and
int3
sub
movsl
cmp
adc
outsl
outsl
cmpb
adc
imul
or
sbb
pop
push
sub
or
shrb
push
adc
jmp
push
movsb
fnstenv
inc
jb
mov
sarl
cmp
jl
and
jmp
cmpl
es
xchg
xchg
and
sti
cmpl
repnz
mov
out
mov
subl
out
xchg
mov
imul
pop
xchg
mov
mov
jg
xor
into
inc
cwtl
push
loope
cmp
fcompl
add
testb
dec
inc
imul
out
icebp
bound
lds
int3
xor
mov
xchg
xor
shlb
mov
add
xchg
sub
or
into
sub
cwtl
adcl
dec
nop
jae
outsb
and
fnsave
shrl
sbb
cmp
and
pop
mov
scas
jmp
rorb
inc
shl
scas
xchg
shr
aaa
mov
or
dec
test
daa
sub
xchg
pop
sahf
roll
mov
cmp
inc
cld
jne
or
insb
push
popa
dec
mov
scas
mov
sbb
jns
inc
js
ret
jg
mov
or
xor
lds
dec
ret
dec
push
fnsave
insl
mov
dec
into
pop
pop
in
dec
cmp
ror
leave
movb
push
push
int3
ja
lods
mov
cld
xor
xchg
int3
pop
jns
ret
jge
mov
adc
imul
cmp
mov
and
rcll
inc
mov
sbb
dec
sarl
mov
pop
es
testb
nop
shrd
ret
fistl
lods
popf
pusha
add
nop
pushf
movsb
xor
lods
cmp
or
sub
call
lret
popf
in
jo
pop
daa
in
ja
adc
inc
or
ja
xlat
pop
enter
and
repz
jmp
xor
jmp
sub
xchg
add
xchg
pop
inc
cmp
clc
rcrb
stos
dec
xor
sub
movsl
push
xchg
push
cmc
cmp
push
cli
testl
fldenv
sahf
mov
stc
xchg
ret
jg
data16
fisttps
cmpsb
loopne
mov
xchg
jp
adc
mov
cmp
inc
mov
xchg
mov
adc
pop
push
adc
lcall
cmp
mov
ja
es
add
push
fiadds
loope
std
jp
mov
cmp
mov
scas
in
jne
mov
out
test
adc
mov
mov
repz
pop
dec
cs
call
inc
cwtl
cwtl
dec
jno
lds
add
aad
pop
push
pop
cmp
fisubrs
inc
push
lea
cmpsl
lea
jge
mov
push
sub
pop
pop
jno
cmp
pop
push
shr
jecxz
dec
shll
ds
les
mov
in
cli
stos
cs
push
add
mov
or
shlb
das
insl
jae
mov
popa
or
mov
cmp
ret
jle
sub
loopne
push
loopne
movsl
inc
mov
mov
sub
mov
adc
in
sub
and
lock
cs
push
push
sub
inc
es
test
push
insl
mov
mov
mov
xchg
pusha
bound
insl
sbbl
xchg
sahf
divb
nop
cmp
out
sbb
mov
push
mov
fcmovbe
dec
cmc
cwtl
sbb
lret
pushf
out
lods
shl
in
push
fidivl
repz
sbb
fwait
sbb
add
sbb
js
cs
andb
mov
popa
in
push
pop
shll
jg
adc
ret
mov
lcall
mov
cmp
xor
orl
into
mov
mov
je
pop
mov
or
sub
cmpsl
enter
mov
daa
jb
leave
add
ret
pop
cmp
out
cltd
leave
mov
mov
hlt
insl
lahf
iret
lea
das
inc
xor
sbb
ds
mov
add
mov
pusha
mov
or
xor
jnp
sbbb
stc
fnstsw
adc
jg
xchg
fidivrl
pop
outsb
and
call
xchg
pop
jl
sub
lods
or
inc
roll
sub
insb
sbb
cmp
xchg
sbb
lods
ds
je
jb
inc
mov
int
push
xchg
fsin
pop
clc
mov
mov
xchg
jnp
iret
lahf
int3
pop
add
push
fstpt
je
inc
leave
in
stos
sbb
repz
push
mov
or
inc
dec
flds
mov
movsl
dec
gs
xor
leave
call
sub
arpl
jbe
xchg
jno
mov
fstps
popa
ret
adcl
xlat
insl
mov
call
in
xor
mov
enter
dec
int
mov
mov
xchg
mov
jge
and
stc
mov
cltd
incb
inc
and
insb
jb
daa
lock
jmp
leave
gs
dec
addr16
fwait
xor
imul
jns
fwait
mov
enter
sub
es
adc
arpl
cmc
sbbl
sub
add
insb
stos
test
cmpsb
mov
jp
jbe
dec
cld
push
test
loop
mov
cmp
pusha
mov
popf
lret
pop
stos
xlat
pusha
xchg
push
mov
int3
jb
or
nop
xchg
test
loopne
fidivl
pop
clc
inc
sti
sub
pop
std
pop
daa
insl
rcrb
out
insb
stos
lods
cs
push
fadds
rorb
test
jg
cmp
jb
jmp
outsl
xchg
mov
pop
jb
sub
inc
loop
push
in
pop
lods
push
push
je
inc
jnp
add
cmpsl
nop
pop
inc
outsb
jo
adc
fsubr
mov
mov
jb
js
sub
das
cltd
ja
sub
lds
jbe
mov
xchg
cmpsl
mov
sub
lret
sub
fistpl
add
movsl
insb
jne
add
cmp
repnz
mov
loope
jge
mov
jbe
sbb
or
mov
jl
sbb
shrb
mov
jae
dec
push
push
gs
jno
add
movsl
add
mov
mov
out
add
pop
or
cmp
cmp
sbb
pop
push
enter
push
inc
aas
xor
lods
jle
adc
clc
and
loope
fwait
pop
dec
roll
sub
aam
into
std
stos
ss
inc
cs
stos
push
adc
sbb
out
mov
aaa
into
dec
adc
adc
fcmovne
andl
outsb
adc
shrb
daa
or
dec
clc
or
dec
xorb
imul
negb
push
mov
push
test
adc
test
dec
jg
jecxz
movsb
mov
shll
cmpl
push
cmp
sbb
pop
inc
std
mov
sub
test
xchg
sub
fnsave
bound
arpl
aam
inc
adc
and
fsub
lret
popf
stos
lods
aam
das
inc
mov
xchg
movsl
or
mov
or
and
in
mov
add
adcb
add
sbb
fs
test
xor
jmp
adc
insl
jl
rcrb
pop
aad
stos
dec
sbb
xlat
out
cmp
xchg
mov
cmp
inc
mov
test
add
push
adc
mov
movsl
mov
pop
mov
lods
or
add
add
into
cmp
in
aaa
out
pop
push
push
push
insl
or
mov
sub
loop
add
sub
xor
inc
scas
xlat
sbb
xchg
or
dec
mov
loop
lahf
fidivl
or
add
pop
in
mov
jno
sbb
or
push
stc
mov
or
in
addb
mov
and
pop
xor
inc
iret
mov
in
in
mov
ss
into
lods
shll
call
mov
mov
or
test
ficoml
fsubrs
mov
adc
cmp
xchg
jl
repnz
push
sub
xor
movsl
xchg
int3
sbb
dec
jns
jno
and
sub
xor
mov
mov
inc
rorb
sub
cmpsl
int
or
das
popf
or
and
leave
ja
enter
dec
test
pushf
jbe
push
mov
in
pop
stc
cmp
mov
mov
dec
ds
call
lods
jno
in
test
popf
into
aaa
aad
pop
sbb
add
mov
negl
jmp
int3
adc
sbb
test
add
push
sub
pop
inc
scas
mov
dec
push
cmc
dec
jne
push
dec
or
and
ret
das
sbb
outsb
iret
lock
insl
dec
adc
lds
sbb
bnd
in
aas
mov
mov
fdivrl
add
jnp
xchg
dec
sbb
shll
inc
jecxz
xchg
movl
test
mov
dec
adc
testb
je
dec
fucomi
arpl
xchg
xchg
sahf
test
xor
mov
stos
xchg
ja
lea
jns
push
add
mov
jg
icebp
push
xor
cmpsl
mov
pop
imul
insb
add
sahf
sub
push
or
lods
call
mov
ss
test
jb
movsl
clc
sub
cmp
pop
test
xchg
push
xor
shrl
and
rclb
push
test
loope
and
jne
sti
push
lret
xor
testb
adc
je
outsb
jnp
jl
jl
imul
iret
pop
lock
negl
mov
roll
outsb
jnp
lods
adc
shlb
xchg
fadds
and
rorb
adc
mov
loop
adc
pop
xor
mov
sbb
roll
les
daa
or
mov
out
outsb
jp
mov
dec
xor
jle
cwtl
pop
xor
mov
push
add
mov
xor
push
repnz
or
dec
pop
adc
and
cmpsb
xchg
lahf
iret
adc
sub
push
adc
daa
std
and
sub
data16
cmpsl
outsb
sbb
jge
adc
jbe
es
imul
test
xchg
andl
ljmp
ss
push
icebp
adc
pusha
jbe
pop
add
lret
pop
movl
sar
je
and
into
bound
mov
mov
push
mov
pop
jecxz
mov
sbb
bound
push
cmpsb
sub
repnz
cli
mov
shrl
ljmp
adc
ss
repnz
jp
jge
clc
test
lods
inc
lret
adc
sub
inc
subl
mov
shlb
loop
jne
or
mov
fnstenv
orb
adc
loopne
cs
into
iret
inc
lea
cmp
incl
xchg
xchg
frstor
insl
mov
adc
mov
loopne
and
lock
mov
loope
call
dec
add
cmp
cmpsl
outsl
dec
push
or
lcall
xchg
out
mov
mov
xchg
xchg
jb
push
adc
dec
in
cmc
addl
cmpl
xlat
outsl
jle
sbb
push
inc
jecxz
cmp
fstl
pop
or
sahf
mov
and
stos
dec
ret
leave
add
nop
aas
inc
sarl
cltd
dec
lret
pop
adc
cmc
popf
insb
hlt
mov
jo
mov
or
ja
fwait
out
mov
lods
push
mov
xchg
or
mov
fiadds
cmpb
pop
mov
jle
push
call
clc
mov
imul
adc
xlat
popf
popf
test
or
shld
mov
movsb
xchg
int
out
lds
dec
pop
dec
fnstcw
shlb
das
push
push
adc
je
inc
rclb
jb
add
out
add
mov
mov
push
xor
mov
icebp
ds
mov
pusha
xchg
push
adc
das
and
lahf
shlb
testl
adc
jae
sub
pop
mov
xor
mov
icebp
dec
repz
outsb
ficoml
mov
fnstcw
pop
xlat
std
int
push
mov
xlat
ret
xor
mov
and
not
test
out
repz
cltd
outsb
clc
inc
pop
aas
push
or
push
xchg
add
push
mov
jge
sti
push
fldt
xchg
sub
mov
rcrl
shlb
sbb
imul
ret
imul
add
or
pop
js
cmp
jge
cmpsb
xlat
jp
adc
dec
nop
out
int3
sub
popf
push
vpsrad
fiaddl
or
xor
push
pop
jmp
push
mov
xchg
scas
xor
gs
lret
or
data16
jo
in
test
in
push
adc
mov
imul
mov
inc
test
cli
pushf
sahf
xor
mov
push
fisubrl
jg
movsl
cmp
mov
lret
shll
mov
sbb
pop
jp
aad
mov
fildl
xor
pop
add
pop
out
in
lcall
mov
inc
stos
push
sub
mov
jmp
loope
sbb
fucom
enter
out
push
nop
gs
int3
aam
in
in
sub
jno
jno
call
into
xor
lods
push
push
sarb
in
sub
xchg
and
lods
sarb
pop
mov
cwtl
jmp
push
pop
clc
and
decl
cmp
mov
xchg
loop
das
add
hlt
imul
cmpsb
repz
mov
pop
adcl
out
adc
pop
pop
std
mov
scas
sti
xor
movsl
mov
inc
cmp
lahf
aaa
out
test
push
add
in
push
out
sbb
pop
jecxz
pop
pop
aam
test
inc
stos
xor
fmuls
push
mov
add
dec
pop
ret
add
and
push
insl
xchg
nop
xor
inc
fmull
jp
pop
push
xchg
push
imul
push
xchg
psadbw
and
je
in
sarl
repz
pop
loop
mov
mov
std
sbb
fiadds
sbb
lea
cmpl
xchg
stos
push
push
push
lldt
int3
add
fcmovne
dec
shll
lcall
cmp
cmp
xchg
insl
outsb
aad
jmp
outsl
xor
out
popf
daa
ret
cmp
loop
ficoms
cmp
outsb
xchg
xor
das
or
ret
push
dec
aam
and
shl
jmp
insl
fwait
mov
add
cmp
repz
mov
jb
pusha
add
dec
sbb
out
xchg
fidivs
cmp
jne
jl
cmpsb
mov
mov
and
jne
mov
mov
push
loop
sbb
flds
cld
push
test
sub
dec
mov
imulb
test
adc
and
enter
ljmp
and
sub
xchg
xor
cli
dec
xchg
ss
or
cmp
xchg
xor
xchg
loope
push
mov
scas
mov
dec
sub
mov
enter
lods
jecxz
adc
es
mov
add
movsb
push
cltd
xlat
and
lcall
stos
mov
mov
add
das
jecxz
divl
sbb
mov
sarb
call
adc
xor
or
mov
in
add
call
dec
pushf
cld
and
fadds
cltd
inc
mov
das
inc
pop
xchg
mov
mov
ds
fsts
mov
ret
jne
xlat
push
or
out
or
sbb
imul
sbb
mov
adc
ja
push
mov
iret
outsl
popf
inc
pop
rol
movsl
mov
adc
mov
ja
mov
test
lods
lock
pop
xchg
add
pop
push
xor
ds
lods
jg
push
sub
push
inc
or
xchg
dec
ret
in
cli
cmp
fcmovnu
fdivp
or
adc
xchg
stc
push
cwtl
and
push
lock
xchg
pop
das
js
adc
jge
xor
and
xchg
pop
dec
shrb
xor
mov
in
in
mov
stos
hlt
mov
cmp
pop
sbb
xor
push
adc
pusha
popf
pop
stos
mov
mov
dec
mov
data16
inc
jge
fadd
js
adc
stos
clc
test
fldcw
add
scas
or
and
popf
lcall
xor
or
pop
mov
movsl
cmp
lods
jp
inc
sahf
ja
ret
dec
add
sub
dec
shll
inc
sub
xchg
push
scas
mov
jbe
outsl
cmc
mov
mov
jp
xor
js,pt
arpl
and
pushf
cli
pop
negb
cltd
push
cmp
jno
pop
movb
push
sbb
adc
inc
js
testb
jo
mov
and
jp
push
les
shr
mov
push
cld
push
stos
aad
addr16
mov
sub
add
and
testb
data16
mov
insl
pop
shrb
aaa
js
xchg
pop
movb
jg,pn
repnz
jnp
nop
mov
test
sbb
aam
jbe
mov
ss
jbe
push
cmp
leave
repz
xor
loope
add
adc
cmp
xor
inc
repnz
test
lcall
test
push
fxam
and
jp
cmp
jns
mov
rcl
jle
or
shll
iret
popf
adc
mov
add
fldt
xchg
pop
pop
movsl
lea
out
jne
jge
dec
je
jo
repz
addl
push
pop
jns
mov
loope
aam
js
gs
les
pop
cmp
mov
fidivrl
and
lock
ja
mov
das
loop
ljmp
cmc
iret
lret
add
mov
mov
xor
sbb
lret
addr16
push
add
sub
repnz
push
sbb
mov
cmpsb
mov
lret
adc
ja
es
ret
pop
repz
add
dec
aam
dec
loopne
std
loopne
jle
mov
in
ret
pop
int3
pop
neg
cmpsb
cld
mov
push
dec
cmp
jg
xor
and
sbb
orl
test
int
in
jl
sub
mov
movsl
sbb
mov
into
cmp
test
daa
dec
mov
jnp
aam
pop
shll
jge
or
pop
mov
mov
fcompl
mov
xor
push
hlt
les
nop
adc
mov
mov
cwtl
leave
mov
out
mov
sub
xor
in
dec
sub
fxch
sub
xchg
cwtl
inc
mov
shl
pop
sub
or
ficoml
lret
xlat
xor
pop
dec
pop
into
mov
pop
inc
mov
xor
movsl
cmp
mov
inc
adc
mov
into
or
imul
pop
xchg
cmp
dec
lds
jle
pop
add
lods
xor
mov
cmp
mov
mov
push
jl
imul
sub
pop
mov
insl
scas
out
int
and
aas
ljmp
jmp
sbb
lea
ljmp
mov
inc
scas
jmp
cs
jl
sti
in
adc
ljmp
push
and
adc
xchg
das
stos
iret
pop
lods
mov
es
stos
cltd
roll
rcrb
mov
stos
sbb
mov
imul
pop
cs
xchg
test
stos
arpl
fs
stc
dec
lds
rol
sub
push
jb
iret
mov
dec
jo
cmp
in
adc
and
test
mov
sub
enter
xchg
faddp
or
inc
test
outsb
or
xor
sbb
cmc
mov
das
pop
iret
mov
xor
cli
shll
cli
pop
pushl
test
ss
xchg
movsl
xor
scas
sar
mov
mov
mov
sub
mov
in
xor
lret
lcall
aaa
inc
bound
out
sub
xor
fwait
loope
mov
test
movsb
mov
sub
mov
aad
xchg
out
dec
je
xor
ljmp
fucomi
mov
pop
cmpsb
xchg
xor
rcr
sti
enter
mov
repz
ljmp
adc
and
sub
arpl
int
jnp
rorl
cli
fldl2t
cld
fidivrs
pop
adc
addl
xchg
xchg
les
or
push
sbb
push
sub
jbe
cmp
mov
nop
fidivs
cmp
and
jnp
aaa
dec
xchg
mov
xchg
xor
fldl
in
dec
loop
clc
mov
push
inc
inc
sbb
add
xor
xor
daa
ja
jns
sub
prefetch
cmpl
push
pop
pop
jb
in
cmp
adc
mov
and
cwtl
insl
sbb
jl
sahf
popf
mov
add
mov
jp
cli
and
pop
mov
adc
and
sbb
xor
dec
stos
das
fptan
in
mov
addr16
inc
xchg
jns
cmp
adc
repz
sbb
fldlg2
dec
and
cmp
jmp
dec
fdivs
fmul
add
addr16
xchg
sbb
or
mov
jbe
push
adc
xchg
dec
cmpsl
cmp
mov
cld
sub
pop
add
lcall
adc
lret
dec
pop
pop
add
in
add
std
and
sahf
int
xchg
out
fst
jecxz
test
xchg
xchg
test
xchg
ss
daa
adc
out
ja
cmc
vpmulhuw
xchg
sti
sub
sbb
add
dec
popa
aam
fcomp
mov
mov
movsl
adc
mov
cmpsb
jo
pusha
sub
iret
push
iret
leave
mov
inc
inc
mov
mov
dec
lea
mov
mov
roll
pop
pop
jg
std
filds
inc
xor
cmc
mov
in
out
and
in
and
call
mov
out
loop
push
add
imul
test
test
into
mov
sub
dec
push
insl
aaa
mov
lds
push
gs
in
mov
dec
fbstp
test
jo
sti
mov
test
mov
jl
rclb
movsb
push
push
icebp
jmp
pop
xor
xor
loope
clc
int
xor
mov
xor
fstps
cld
jl
xor
sahf
pusha
mov
in
push
mov
jbe
inc
int3
jae
xchg
loope
xchg
dec
ficomps
rorb
in
scas
xchg
rcll
clc
sbb
push
out
aam
out
xor
cwtl
nop
jo
push
into
mov
leave
lods
dec
sub
stos
fs
push
lock
adc
test
xchg
movsl
cld
in
mov
mov
dec
sbb
mov
lods
in
lea
test
and
sbb
gs
sub
sarb
mov
scas
mov
jne
pop
test
and
nop
in
push
cltd
mov
sbb
mov
mov
mov
xlat
mov
adc
mov
lahf
add
nop
push
or
pop
lahf
inc
and
stos
dec
neg
jge
sahf
lds
and
cmp
sbb
mov
inc
jmp
mov
push
repz
or
ljmp
vdivpd
out
es
mov
lods
outsb
xlat
imul
repnz
jae
enter
subl
sub
in
and
outsb
ret
lcall
jne
mov
xchg
ds
clc
gs
repz
inc
push
cltd
push
imul
cltd
inc
push
in
jl
push
mov
xchg
ret
pop
fwait
mov
sub
lock
pop
mov
dec
dec
xor
jecxz
fistl
push
rol
mov
test
pusha
fadds
in
sbb
mov
icebp
push
test
lods
imul
xor
fstl
arpl
adc
or
pop
sub
mov
pop
jle
jnp
push
pop
mov
adc
scas
xchg
inc
mov
mov
loopne
push
int3
das
inc
push
mov
flds
testl
mov
cli
cmp
outsl
mov
fdivr
daa
inc
xor
pop
lahf
call
jbe
adc
pop
lods
sub
push
iret
xchg
andl
int3
sub
inc
jo
mov
mov
sub
dec
dec
sbb
fsubl
fidivs
scas
fsubl
ljmp
xor
mov
or
arpl
in
mov
nop
add
int3
push
cltd
jno
in
cmp
int3
popa
mov
add
mov
push
mov
cmp
pop
insl
cmp
hlt
adcl
out
or
xchg
and
sti
and
cli
dec
mulb
adc
pushf
mov
jno
push
fsts
cli
cld
cmc
clc
mov
xchg
push
loopne
sbb
mov
bnd
fsubl
int
out
mov
aam
xchg
or
push
mov
jno
add
mov
mov
pop
or
and
jmp
adc
das
or
sbb
es
xchg
imul
mov
imul
mov
orl
inc
mov
fwait
mov
mov
mov
mov
jns
xchg
cmp
icebp
pop
pop
push
test
gs
andb
mov
sub
cmp
push
test
movsb
push
mov
or
out
dec
jns
repz
mov
mov
pop
and
pop
je
fistl
mov
sbb
add
adc
and
mov
pop
jge
jns
fcompl
repnz
pop
adc
fisttpll
cmpsb
xchg
idivb
dec
jno
add
adc
fistpl
adc
jp
mov
cmp
sbb
mov
push
push
lods
push
sub
push
xor
dec
popf
mov
pop
lea
jo
movsb
cmpsb
and
push
sbb
in
pop
jae
push
mov
cmp
sbb
lcall
sar
cmp
pop
cmp
dec
and
sub
mov
mov
xchg
add
fmull
out
xchg
mov
adc
and
imul
fwait
je
cs
xchg
pop
mov
inc
sub
out
and
inc
dec
mov
les
lds
or
pop
inc
stos
into
mov
in
pushf
outsl
sub
iret
mov
push
outsl
dec
rcrl
push
call
repnz
jp
imul
fsubr
leave
lcall
scas
test
cmc
mov
inc
nop
mov
jae
adc
test
dec
fisttpll
jecxz
pop
pop
sti
lock
test
fstl
jge
out
and
mov
aas
sbb
jmp
stos
xorb
jbe
mov
xlat
push
jb
xor
lock
sarb
out
dec
fwait
jecxz
pop
mov
sub
mov
pop
push
hlt
sub
cmpsb
in
add
pop
fstps
mov
push
enter
cmp
xchg
xchg
sbb
mov
stos
push
das
ja
repnz
push
fwait
xchg
movsb
stc
mov
arpl
test
fcmovb
xchg
sbb
nop
pop
cmp
or
lock
mov
add
cmp
int
inc
lahf
mov
negb
aam
ret
orl
mov
pop
add
mov
mov
outsb
cs
sub
leave
clc
int3
cmpsb
outsb
pop
sub
movsl
and
cmc
gs
in
push
sub
sahf
mov
cmp
adc
int
fwait
lret
ret
push
lea
icebp
xrelease
out
loope
add
cltd
and
mov
lea
inc
cmp
pop
dec
std
ret
jge
mov
sbb
pop
xchg
mov
popa
into
lods
call
cs
jbe
nop
xlat
enter
xor
add
aas
cmp
scas
lret
and
jno
and
pop
mov
mov
or
adc
dec
pushf
jo
pop
jo
mov
dec
test
mov
outsl
test
mov
js
or
cli
adc
repnz
retw
in
nop
lret
aas
test
and
xchg
adc
cmp
or
xchg
sub
aad
cwtl
xchg
cmp
sub
daa
or
inc
pop
subb
sub
mov
mov
daa
outsl
fcmovu
pop
cmc
and
inc
push
pop
sub
mov
mov
mov
inc
pop
sub
cltd
mov
roll
test
sub
nop
iret
mov
adc
clc
repz
js
cs
mov
and
addb
pop
das
scas
dec
repz
das
or
out
inc
sub
jbe
dec
jecxz
sti
inc
sub
sub
lds
sub
jnp
popa
gs
scas
push
in
bound
std
jmp
sub
fwait
xchg
flds
dec
adcb
jle
into
push
repz
cs
out
inc
dec
loopne
pop
inc
rcrb
jae
cmp
data16
enter
mov
sub
push
dec
adc
pop
notb
push
ret
adc
shr
inc
sbb
adc
arpl
pusha
sbb
xlat
ret
xchg
adc
loopne
cmp
ror
setp
push
jl
xchg
adcl
cmp
inc
and
ds
push
out
shll
xor
adc
lcall
mov
pusha
aaa
mov
setns
and
stos
sarb
dec
xor
outsb
adc
push
push
lret
sub
loop
fs
cltd
dec
sub
sub
repz
adc
scas
mov
xchg
jg
xchg
cmp
inc
call
or
jno
xlat
aas
xlat
inc
in
or
xchg
hlt
insb
inc
je
cmp
cmpsl
in
adc
pop
mov
pusha
es
xorl
popf
fcompl
ja
aaa
dec
stc
jo
sub
loopne
ds
xchg
jmp
bound
lahf
shll
mov
out
xlat
call
imul
lea
mov
xlat
subl
xchg
js
mov
adc
lcall
aam
out
cmp
sub
gs
xor
fstpt
sbb
adc
jo
sbb
jae
push
pop
or
int
add
test
cs
mov
push
push
imul
push
xor
fwait
int3
xchg
dec
sbb
loopne
push
mov
popf
fcompl
xchg
adc
or
or
pop
mov
test
mov
adc
out
jb
shll
out
mov
inc
pop
rcrl
xchg
sub
test
adc
pop
mov
mov
xor
int
out
je
mov
popa
or
push
cmp
call
sub
xor
inc
jb
aam
mov
sub
roll
shlb
mov
push
add
cmp
dec
mov
and
movsb
test
mov
nop
add
jb
insb
pop
popa
lcall
stos
aaa
aas
pop
jae
jecxz
jp
or
inc
ret
test
js
and
imul
subl
lahf
jg
lods
in
out
xor
scas
ret
jne
mov
jnp
adc
pop
clc
jecxz
push
and
loope
outsl
dec
stos
aad
jecxz
sbb
xor
push
jecxz
les
imul
jae
mov
pop
xor
mov
adc
mov
inc
js
mov
mov
jb
sub
xchg
pop
sbb
jnp
pop
mov
leave
test
and
fildl
mov
xor
push
push
inc
add
sbbb
jl
adc
mov
pop
mov
add
call
shll
sbbl
xchg
jb
xchg
js
jp
or
inc
xchg
movsl
arpl
cmpsb
daa
out
xor
hlt
in
cmp
mov
outsb
test
popf
inc
jle
jg
mov
xor
ret
ljmp
xchg
mov
add
insl
xchg
cmpsb
shr
dec
jecxz
cmpb
and
mov
cmovns
xor
out
mov
fisubrl
dec
or
repnz
shr
das
outsl
sarb
es
ds
fistpll
inc
push
push
xor
xor
and
out
outsl
fimuls
popf
mov
das
mov
sub
test
jae
mov
out
add
aas
addb
mov
hlt
cwtl
jg
scas
and
shrb
outsl
enter
mov
int
xor
loop
sub
mov
push
jmp
pop
cmp
xchg
cli
mov
les
mov
mov
orl
xor
pop
sar
cwtl
xchg
popf
jmp
push
ds
cld
mov
mov
push
push
dec
loopne
mov
insb
movsb
stc
ret
test
dec
push
in
pop
xchg
mov
cmp
insl
push
xchg
std
push
stc
cmpsl
sub
inc
ds
fists
pop
clc
adc
movsl
repnz
push
out
pop
xchg
aaa
push
jb
sahf
push
lods
rcrl
es
ds
unpcklps
pop
sub
pop
lcall
mov
in
mov
iret
jae
enter
push
adc
cmpsb
fucomp
out
fisubrs
sbb
or
push
jecxz
jl
int3
imul
popf
inc
std
incl
or
mov
je
sbb
ret
cmp
push
or
sub
cwtl
add
or
cmp
dec
sti
nop
daa
push
push
outsb
mov
add
lret
xor
pop
cld
pop
data16
fwait
sub
xor
shlb
sbbl
jge
push
jnp
inc
push
xlat
out
fisttpl
nop
sbb
scas
or
mov
cltd
inc
mov
sub
pop
out
inc
aas
fcoms
mov
test
pushf
sbb
pop
cmpl
sbbb
ljmp
cmp
sbb
add
cmc
mov
jae
enter
daa
aad
dec
or
inc
xchg
shrb
ds
adc
sahf
push
loopne
xor
inc
leave
jno
sbb
int
inc
add
mov
dec
repz
and
sbb
pop
sub
xchg
int3
jecxz,pn
into
nop
stos
lods
mov
push
add
pop
cli
xchg
flds
in
mov
sbb
mov
imul
or
cmp
and
lret
sbb
xchg
out
in
xchg
push
data16
jg
mov
push
and
push
sbb
mov
push
lcall
sahf
mov
xchg
jno
dec
inc
cs
cwtl
push
in
pop
stos
xlat
testb
mov
inc
xchg
imul
mov
mov
sti
adc
and
xor
shr
addl
outsl
fdivl
iret
aas
popa
dec
in
movsl
std
xchg
roll
inc
sbb
xlat
jb
cmpsl
dec
test
pop
inc
nop
pop
insb
gs
xlat
insb
mov
push
sti
or
sub
and
mov
shll
jmp
pop
ret
mov
lret
mov
repz
jl
stc
mov
hlt
mov
jnp
xor
outsl
sub
and
mov
sub
mov
outsl
mov
cs
cmp
add
jb
mov
mov
cmp
push
insl
mov
and
test
sbb
or
and
rolb
daa
fwait
mov
add
call
movsb
lss
xorb
sbb
inc
xchg
adc
mov
adc
iret
adc
xchg
xor
xchg
add
outsb
dec
adc
stc
and
lcall
faddp
repz
arpl
push
call
leave
notl
cmpsb
pop
aas
imul
lods
pop
pop
xchg
int3
mov
scas
push
mov
sbb
fsubs
lahf
movsl
push
xor
xchg
or
int
fdivrs
pop
mov
popa
pushl
stc
and
cmp
jb
push
and
inc
sub
xorl
sbb
xor
mov
in
push
sbb
xchg
ljmp
mov
xchg
or
data16
fistps
jecxz
fwait
mov
les
xlat
movsl
pop
dec
or
cmp
sub
aad
mov
or
jno
call
or
xchg
test
adc
mov
jne
dec
clc
xchg
fisubl
daa
sbb
idivb
sub
daa
std
cmp
outsb
mov
arpl
pusha
xchg
pop
leave
or
iret
xor
scas
repz
ljmp
mov
or
jmp
inc
mov
imul
lds
fcmovnb
mov
push
jg
jnp
inc
sbb
mov
mov
cmp
sub
jbe
movsl
outsb
xor
jae
iret
mov
jl
ds
adc
pop
test
ror
fsubrl
cs
add
int
xchg
adc
cmpsb
adc
xchg
rcrl
in
test
bound
inc
or
fnstcw
or
imul
add
adc
in
lods
push
pop
xor
int
xchg
popa
mov
push
xor
out
popf
cld
or
adcb
lds
jae
or
faddl
daa
into
popf
lods
movsl
fnclex
mov
add
dec
mov
adc
and
notl
pop
loop
xor
lahf
sub
pop
sbb
cwtl
int
imul
sbb
arpl
or
std
out
scas
inc
xor
aam
addr16
mov
js
icebp
stc
ja
in
mov
mov
in
and
ja
xchg
mov
popa
push
dec
mov
sti
popa
loop
lcall
mov
repz
repz
cmpsb
cmpsb
mov
and
inc
mov
out
fwait
lea
dec
fidivrl
out
outsb
inc
scas
pop
mov
dec
ss
push
xchg
sbb
data16
mov
inc
gs
shrb
pushf
adc
xchg
inc
cld
xchg
xor
sbb
or
iret
das
or
lods
movsb
mov
jb
int3
xchg
mov
lret
pop
iret
mov
fiadds
icebp
stos
loop
pop
inc
mov
ja
in
or
and
sbb
xchg
push
mov
in
data16
pop
add
push
xor
mov
adc
push
inc
mov
fstl
cmp
mov
insl
stos
loop
test
test
aad
dec
sarb
stc
mov
push
push
add
xor
sahf
cmp
loope
pop
xor
idivl
and
push
mov
and
std
jg
xchg
cs
jno
setae
sub
push
mov
fcmovb
and
in
in
jbe
icebp
movsl
jne
mov
xor
sub
sbb
and
or
in
inc
and
adc
adcb
jb
adc
add
push
sub
sub
cmp
inc
aam
jbe
mov
es
adcb
jae
out
pop
jbe
ss
sub
outsb
inc
sbb
lahf
movsl
sub
fcomip
std
push
test
test
jae
lock
jb
mov
fmull
push
dec
jle
out
and
xor
or
mov
mov
push
and
les
gs
mov
inc
movsl
daa
in
out
shrl
es
sbb
out
add
cmp
mov
cmpsb
add
adc
add
push
orl
sub
jo
js
outsl
test
push
dec
and
or
or
add
gs
dec
nop
fs
f2xm1
out
pop
movsb
shlb
fldt
clc
sbb
pop
out
int3
ss
xchg
sbb
push
lock
test
arpl
mov
push
icebp
outsl
pushf
mov
xor
js
jmp
xchg
dec
ret
adc
xor
mov
push
pop
mov
pop
pop
sti
xchg
pop
push
push
xchg
jae
leave
sbb
xor
mov
ja
and
fsub
dec
imul
das
inc
gs
sbb
addr16
pop
sbb
lahf
ret
ss
int3
test
inc
loopne
rcrb
push
fdivrp
cmc
mov
xchg
pop
inc
add
or
lahf
fimuls
xor
test
or
jb
add
scas
repz
inc
outsl
ror
mov
int3
cltd
lahf
push
push
outsb
rcrl
in
test
shr
dec
imul
cmp
pushf
inc
pusha
repnz
or
ret
mov
mov
cwtl
std
sub
outsl
stos
je
dec
mov
orl
and
push
or
add
pop
addb
pop
aam
jl
scas
in
gs
push
mov
jmp
or
rol
add
cwtl
imul
pop
mov
in
shrl
push
mov
sbb
push
pop
adc
or
jp
in
xor
inc
sub
push
xor
jmp
cld
xchg
cli
pusha
fucomip
mov
mov
clc
shr
mov
daa
mov
push
dec
ret
jmp
push
repnz
xchg
ret
xor
out
cmp
and
mov
in
shl
push
dec
adc
cmp
adc
sub
int
jo
data16
mov
sub
dec
or
push
add
pusha
pop
mov
inc
cmp
push
adc
mov
cmpsb
cmp
add
push
ljmp
jle
loopne
loopne
mov
out
pop
add
mov
adcl
sub
inc
push
mov
rcll
bnd
int3
popf
icebp
aad
push
push
and
fisubrs
xchg
stc
xor
fiaddl
mov
fs
mov
dec
test
cltd
out
inc
cld
shlb
mov
cmpb
mov
mov
imul
mov
push
cmp
cmp
in
lea
sahf
imul
jg
inc
xor
mov
test
pushl
add
jg
cltd
rorb
push
mov
cmp
push
add
mov
and
sub
jne
push
mov
xchg
fcomps
xor
mov
mov
mov
jle
pop
and
mov
mov
in
pop
mov
mov
jne
adc
sti
es
jle
lods
es
outsl
leave
pop
cmp
fsub
mov
stos
mov
mov
test
icebp
ja
mov
xchg
lahf
xchg
out
scas
mov
in
setae
mov
leave
lods
sbb
adc
pop
xchg
sub
sbb
fldenv
arpl
pop
mov
sahf
push
or
push
pushf
testb
xchg
xchg
std
mov
mov
jecxz
lock
outsl
sub
mov
push
rcll
push
cmp
inc
loop
adc
mov
push
mov
cmpsb
dec
jle
fwait
xor
imul
jb
pusha
cmp
jmp
decb
jmp
mov
inc
push
test
in
inc
add
xor
pop
flds
inc
cwtl
mov
cs
inc
mov
imul
pop
call
dec
dec
les
incl
test
inc
rorb
xchg
xchg
dec
gs
dec
fdivp
or
in
jo
xor
jmp
test
sub
inc
popf
call
jne
or
and
mov
and
and
ja
cld
aas
test
repnz
ret
shrb
das
jae
nop
push
push
rcll
jecxz
inc
push
mov
ljmp
fimull
mov
stos
lods
aas
dec
sar
andl
repz
outsb
stc
je
icebp
sub
sbb
test
inc
add
mulb
push
nop
scas
dec
xchg
psubb
popf
scas
pop
movsl
scas
sahf
adc
mov
push
lea
fisubrl
loop
push
pop
decb
dec
push
xor
js
sub
fstpt
lock
jne
xchg
mov
mov
stos
icebp
lcall
xchg
xlat
mov
cmp
nop
movsb
xchg
pop
fsts
pop
bound
aam
popf
mov
and
adc
sbb
insb
jo
and
clc
push
cli
xchg
lea
lock
cwtl
xchg
test
rorl
into
xchg
mov
push
sub
jbe
inc
les
sub
lcall
inc
jl
lea
add
fnstcw
mov
daa
mov
adc
xchg
out
ret
push
lods
inc
cs
cwtl
ss
aaa
adc
aad
push
cmc
xor
mov
mov
sbb
xor
inc
adcl
incl
pusha
or
fwait
enter
add
mov
hlt
jbe
cli
push
out
pop
push
jmp
fsub
int3
jno
xor
cmp
or
in
into
orl
in
cld
xor
enter
ljmp
and
pop
ljmp
mov
add
push
dec
in
movmskps
xor
jecxz
pop
lcall
xchg
andl
roll
inc
roll
sti
jg
in
sbb
and
gs
iret
scas
push
cwtl
in
mov
mov
jae
mov
push
pop
cmp
and
mov
icebp
and
mov
cmpsl
xor
add
cli
mov
sbb
leave
adc
lock
insb
cmp
vpshad
mov
inc
enter
lret
sub
lahf
ja
adc
jg
lods
jno
movb
fstpt
nop
js
pop
movsb
jns
scas
dec
xchg
aas
jp
adc
ficompl
pop
ljmp
jp
jg
mov
add
mov
shll
push
stos
pop
pop
repz
loop
pop
scas
xor
cs
jne
aam
clc
cmc
xor
push
in
add
add
ds
mov
sbb
lea
inc
pop
out
bound
mov
call
sbb
shll
lea
je
loope
nop
cmpsb
cld
push
jns
mov
mov
add
push
outsb
fs
shll
lea
jbe
popf
shll
stos
mov
fstps
push
mov
aad
pop
outsl
pop
cwtl
inc
and
jp
sub
sbb
mov
rclb
and
in
cmpsb
sub
xchg
ret
test
inc
adc
bound
mov
inc
dec
xor
dec
enter
adc
mov
inc
cld
push
sub
inc
icebp
fwait
aam
mov
mov
out
daa
andb
aas
dec
cmp
leave
add
ja
xor
or
jbe
mov
push
clc
cmp
insb
cwtl
sahf
fnstcw
cmp
in
mov
loop
jle
jbe
lods
mov
aad
xor
scas
push
push
xchg
cmp
jo
sbb
fsubrp
divb
out
adc
or
mov
stos
lret
dec
sbb
imul
in
push
jae
push
or
sbb
mov
jno
js
cmp
jg
sub
cmc
xchg
in
jne
repnz
lock
push
popa
fs
sub
inc
and
adc
es
fisttpll
mov
cmp
repz
lret
adc
sarb
stc
add
loope
imul
add
pop
push
mov
cmp
jne
frstor
or
arpl
popa
outsb
pop
repnz
fwait
jno
mov
push
xor
sbbb
stos
sahf
add
mov
cltd
add
sbb
mov
push
mov
pop
sbb
loop
cmpsl
push
pop
out
test
repnz
loop
sub
sub
nop
ficoms
push
push
addr16
aaa
jl
xor
lds
xlat
cmp
lea
pop
stos
rcl
icebp
stos
add
shlb
nop
test
ss
cmpsb
cmp
jae
movsb
push
mov
aas
add
mov
mov
shrb
pop
mov
mov
push
fldcw
lcall
ljmp
jp
sarl
in
jns
push
xchg
notl
mov
int3
pushf
in
adc
xor
lds
cli
cmp
jb
mov
inc
jo
push
ljmp
call
inc
ss
dec
adc
cmpsb
out
addr16
cmp
sub
imul
sub
adc
push
mov
push
pushf
inc
inc
mov
sub
push
enter
mov
push
xorl
mov
outsb
addr16
push
sub
loopne
mov
shr
scas
push
jbe
ficomps
pusha
mov
mov
pop
adc
bound
in
outsl
add
push
mov
push
sbb
addr16
adc
dec
popf
sub
and
daa
push
cmp
outsl
movsl
daa
jle
in
push
test
xchg
loope
inc
gs
std
repnz
pop
mov
inc
aad
mov
xor
out
mov
fisttpl
push
xchg
cmpb
dec
add
je
aam
push
mov
into
rorb
cmp
sub
mov
lods
ja
into
xchg
xchg
sbb
or
mov
ljmp
test
adc
push
mov
jg
aas
or
sahf
sti
xchg
xchg
bound
lea
movl
movsb
stos
adc
pop
scas
pop
cmp
bound
adc
les
add
lds
xchg
jge
lods
pop
dec
dec
sub
popf
cmpsl
addr16
aas
pop
icebp
iret
xchg
sub
arpl
dec
aas
std
xor
mov
push
pop
addl
imul
imul
adc
out
add
les
lret
mov
jle
iret
imul
into
sti
jb
loop
push
xor
movsb
push
test
dec
cmp
jmp
mov
sbb
adc
dec
xchg
jle
mov
jo
push
sbb
adc
and
dec
and
push
xchg
stc
repz
aaa
cmc
cs
mov
xchg
int
mov
popf
shrb
call
mov
orl
fs
adc
jge
roll
mov
pop
push
xor
stos
movsb
addl
cltd
mov
fildl
lret
inc
push
cmc
test
and
lea
aam
xor
std
fmull
hlt
fmuls
and
dec
mov
jae
and
inc
inc
mov
dec
jge
jg
mov
les
dec
scas
mov
pop
in
dec
add
adc
mov
movsb
mov
ljmp
aas
shl
dec
repnz
sbb
idivb
mov
xchg
or
repz
pushf
sbb
add
push
cltd
pop
mul
xchg
push
std
cs
outsb
fildl
mov
fcmovne
xor
insl
cli
orl
sti
push
ja
repnz
add
push
sub
add
pop
imul
in
imul
mov
mov
cld
xchg
into
cmc
sti
in
fildl
pop
dec
fadd
data16
sub
test
call
push
dec
and
test
gs
subl
lahf
mov
popa
add
jb
cmp
adc
pop
movsb
add
test
cld
pop
inc
jp
fildll
xor
test
sar
loope
cld
mov
inc
cld
adc
jbe
add
dec
sahf
test
pusha
jo
test
jmp
loope
sub
push
or
cwtl
jmp
sbb
int
subl
lods
fiadds
inc
xor
jecxz
popf
sbbb
inc
std
lcall
add
stc
dec
cmpsl
cltd
mov
addb
push
add
out
pop
xchg
mov
fsubrl
add
inc
mov
mov
pusha
cmp
das
mov
fldenv
cmp
dec
movsb
das
or
push
adc
es
lods
cmpsl
iret
int
or
out
mov
inc
fmulp
adc
outsl
or
jg
sbb
gs
leave
fwait
push
dec
cli
push
psubw
mov
or
inc
xchg
inc
push
mov
adcl
mov
popf
int
add
inc
test
and
cwtl
scas
imull
push
data16
add
fwait
dec
test
or
out
lds
flds
arpl
mov
push
insb
pop
shr
and
or
popw
ret
int
mov
jl
test
loop
cli
mov
and
enter
stos
aaa
loopne
data16
out
aad
test
addl
in
ss
and
dec
dec
sbbb
ss
sub
jl
lcall
add
lahf
mov
xorl
xchg
xchg
hlt
xlat
inc
jle
mov
test
leave
xchg
cmp
test
xchg
mov
pop
out
dec
out
mov
shl
sub
call
or
addr16
jg
out
in
jmp
xchg
or
mov
in
and
and
mov
repnz
fisttps
pop
testl
repnz
sbb
imul
adc
clc
sbb
ja
pusha
adc
sahf
xchg
sahf
sbbb
mov
add
faddl
nop
and
loopne
push
cmp
js
imul
jl
enter
mov
ljmp
cmp
sub
cwtl
cmpsb
push
or
lds
fs
lcall
popf
dec
and
testb
adc
fs
pop
in
sbb
out
popa
sub
icebp
jge
mull
jno
nop
pop
into
call
add
paddb
iret
xchg
push
fisubrl
scas
mov
shrb
test
sub
sti
aad
arpl
repnz
jb
adc
mov
clc
gs
mov
test
stos
outsb
jb
aaa
add
or
xor
pop
cs
icebp
mov
dec
jmp
js
pop
xchg
fsubrl
gs
xor
mov
cltd
unpcklps
mov
cmpsb
mov
stc
int3
jbe
outsl
test
aad
lods
mov
push
inc
aam
leave
mov
push
out
xchg
popf
push
xlat
mov
scas
push
xlat
insb
push
cmc
mov
push
gs
fnstsw
cmpl
ljmp
jne
dec
in
mov
sub
mul
repnz
or
or
dec
outsl
mov
in
aam
addb
out
mov
mov
popf
dec
aad
mov
subb
lcall
ss
xor
enter
leave
int3
js
push
mov
outsl
pop
jbe
xor
adc
cld
mov
dec
in
cmpsl
popa
cmp
mov
xor
aas
mov
push
out
into
inc
mov
or
mov
inc
jp
lret
cmpsl
and
mov
lret
cltd
jecxz
pop
out
xor
ficompl
pop
and
push
aad
lds
dec
loope
into
bound
dec
mov
dec
daa
inc
xlat
cmpb
shl
lret
cmp
xchg
aad
ss
dec
xchg
fadd
mov
jmp
push
fildl
sarl
or
and
sub
add
pop
stos
push
push
adc
and
cmpsl
and
xchg
mov
sbb
lret
mov
orl
hlt
pop
adc
add
sbb
sbb
lods
adc
rorl
mov
mov
dec
fwait
lret
out
js
mov
aam
rolb
jmp
pop
push
bnd
push
dec
out
and
adc
hlt
adc
inc
add
gs
gs
sbb
or
jnp
add
fs
sbb
mov
pusha
adc
aaa
ss
in
cmp
cmp
add
imul
jp
sub
popf
outsb
cmp
rcrl
test
js
mov
inc
pushf
adc
fdiv
mov
pop
cli
enter
sub
jns
adc
cmp
jns
cwtl
fists
add
jns
or
xor
sub
popf
jne
push
cs
lahf
or
hlt
sbb
inc
aaa
sbb
pop
in
in
fistps
in
cmpsl
inc
sub
ficoml
push
out
mov
add
mov
sub
push
xlat
mov
into
das
jo
sub
inc
aaa
ja
test
out
dec
mov
aam
inc
and
ss
shrb
push
negl
repz
or
imul
in
or
mov
push
jle
and
bound
ds
inc
add
notl
sti
fnstenv
xchg
addr16
int
sarb
mov
mov
xchg
and
push
pop
lds
or
pop
dec
out
xorb
xlat
pusha
scas
int
mov
ror
pop
inc
lods
leave
xor
sub
in
sbb
leave
test
scas
add
int3
pop
xor
orb
repnz
in
adc
ret
or
pop
mov
mov
mov
sbb
call
dec
or
iret
mov
and
lea
dec
fwait
or
rorb
bound
mov
adc
xor
mov
push
push
outsb
cmp
mov
notl
scas
sbb
imul
rcll
and
sbb
sahf
dec
sbb
jns
inc
xor
sub
out
push
movsb
daa
icebp
movzwl
xchg
mov
push
push
or
and
and
pushf
fwait
inc
mov
add
cmpsl
aas
or
ljmp
push
mov
xlat
jmp
inc
dec
or
mov
clc
mov
mov
outsl
mov
xchg
add
jmp
gs
mov
sbb
mov
cmpb
cwtl
cmp
mov
cmpsb
pop
push
add
jno
fistps
loop
outsl
jo
or
xchg
clc
mov
subb
jae
repz
test
loope
sub
cli
mov
jmp
add
add
mov
ja
pop
sub
inc
cmpsl
add
std
jp
inc
jns
jl
addr16
aaa
call
mov
js
mov
jb
mov
bswap
loope
scas
aas
add
in
mov
lea
testl
bound
pop
icebp
outsb
inc
icebp
aam
mov
mov
mov
test
insl
inc
loope
push
out
and
and
or
mov
fadd
dec
sti
stos
rorb
and
push
les
xor
cmp
xlat
sub
fidivs
or
movsb
xor
jmp
out
mov
xchg
in
pop
shlb
lea
mov
sbb
mov
xchg
insb
hlt
sbb
add
mov
or
test
in
mov
push
mov
lahf
stos
call
sbb
cmp
add
jne
or
and
aas
insl
lcall
jg
and
sbb
pop
clc
sahf
mulb
fmuls
mov
lret
xchg
loopne
and
fcompl
xor
push
jno
push
inc
sub
notl
and
leave
jb
sub
sbb
xchg
xchg
inc
inc
sub
adcl
shll
sti
rcr
mov
out
push
je
dec
fs
or
and
jne
mov
or
dec
push
divb
lcall
in
adc
adc
dec
jno
int3
xor
pop
dec
dec
in
or
push
dec
mov
push
cmpsb
inc
mov
aas
aas
sahf
and
xorb
inc
mov
lods
mov
loope
jecxz
sub
sbb
jg
filds
popa
jl
jns
pop
pop
mov
mov
or
sti
push
fcomps
icebp
push
inc
jg
cs
sub
mov
or
add
cmp
mov
fdivrp
dec
adcl
icebp
js
fsubrl
pop
xor
mov
mov
jmp
sbbl
sbb
xchg
sub
cmp
idiv
add
mov
lds
dec
ljmp
pop
add
in
cmp
or
xor
fnstcw
in
call
repz
xchg
lret
hlt
sub
bound
or
or
push
lcall
shll
bound
xchg
je
cmp
sub
lahf
sub
cmpsl
rcrb
repz
inc
cmp
repnz
push
mov
bound
xlat
cmp
pop
mov
adc
cli
mov
mov
push
pop
xchg
in
mul
adc
loope
inc
dec
shll
mov
xor
mov
fadds
mov
add
sub
add
dec
adc
cmpl
into
aam
adc
fs
mov
and
mov
mov
mov
sbb
or
sbb
imul
mov
fldln2
and
mov
dec
leave
mov
jle
gs
das
or
mov
cmp
cmpsl
pop
or
xchg
out
dec
andl
jne
rcr
mov
fs
sbb
jecxz
xor
lret
sub
mov
aas
arpl
xor
aad
icebp
mov
in
inc
jnp
lahf
xor
sbb
popa
das
jle
out
ret
movsl
fucomp
test
pop
xor
mov
push
or
push
jl
xor
pusha
out
adc
test
andl
sub
pop
adc
inc
jmp
mov
test
push
dec
pop
sbb
bnd
or
jns
dec
dec
add
and
test
sub
repz
movsl
jne
sub
aad
adc
push
addr16
cmpb
jle
or
lods
fwait
cmp
push
sbb
test
pop
pop
ds
add
out
mov
sub
push
pop
divb
sbb
push
jp
dec
or
adc
shlb
dec
imull
push
push
fists
mov
addr16
xchg
mov
add
aas
ja
arpl
push
mov
dec
cmp
lea
and
push
pop
ss
add
lcall
sahf
scas
aam
jp
or
movsl
add
pushf
lret
xchg
in
in
fs
shl
ret
in
fbstp
sub
imull
scas
dec
arpl
push
cmc
ds
cmp
push
adc
inc
jp
lret
rcrb
mov
or
lods
inc
icebp
jbe
dec
cmp
adc
divb
int3
xor
jg
inc
jb
and
jbe
mov
sub
xchg
dec
fsts
pop
sub
lret
stos
and
cli
mov
test
int
cmp
xor
shl
cld
jae
repnz
sahf
in
sbb
aad
imulb
mov
sbb
adc
push
loopne
add
and
add
push
sub
movsb
ret
popa
mov
pop
rcl
ljmp
daa
xlat
movsb
xor
xor
aas
into
xchg
mov
enter
enter
iret
and
adc
rol
outsl
add
dec
inc
popf
fimuls
and
ljmp
push
pop
das
idivb
scas
stos
cmp
xlat
add
cmp
pop
jle
stc
push
stc
jg
xchg
jecxz
aam
push
daa
sbb
mov
insb
in
push
in
ffree
mov
pop
dec
adc
ds
call
shlb
das
lret
sub
or
pop
repnz
pop
sbb
enter
and
repnz
stos
and
jnp
sbbl
jp
adc
std
dec
sbb
push
mov
lods
mov
repz
adc
cwtl
xor
sub
pop
jp
xchg
dec
push
add
mov
stos
push
jb
adc
subb
push
pop
fbld
dec
dec
lods
mov
add
sub
in
mov
scas
out
inc
adc
es
test
cltd
jns
lret
lret
mov
mov
bound
xchg
lea
sub
adc
sbb
gs
sti
fsubrl
inc
cs
sub
scas
les
push
into
mov
mov
mov
sbb
movsl
fadds
ficomps
mov
insl
and
out
in
xor
rcrl
iret
dec
fistpl
cmp
fcomi
sub
aas
push
sbb
cmpb
addl
shlb
sbb
cmp
add
jmp
push
mov
cmc
jge
push
popa
pop
test
xchg
lahf
pop
ja
xchg
mov
cmpsl
jb
xor
aam
flds
ljmp
in
jne
fcmovne
cmp
gs
bound
or
fisttpll
mov
inc
test
cld
xchg
imul
xor
cmp
mov
xor
aam
enter
lret
int
jns
add
xchg
sub
repnz
dec
sbb
js
lock
stc
pop
pop
xor
je
dec
inc
cmp
inc
cmp
stos
les
test
mov
dec
mov
and
dec
es
inc
dec
pop
ljmp
mov
mov
iret
and
shlb
dec
ljmp
push
rcrb
and
xor
aad
push
sub
enter
in
sbb
xor
out
adc
fisttps
mov
pop
jle
xor
xchg
adc
ljmp
or
xor
or
jle
push
or
mov
fld1
hlt
movsb
sbb
es
scas
pusha
pusha
jbe
sti
aam
xchg
xchg
sub
add
xor
pop
jmp
clc
push
in
mov
mov
jbe
outsb
pop
dec
mov
cmp
mov
mov
ss
ja
loope
outsl
pusha
sub
mov
sub
and
add
add
mov
adc
dec
lretw
negb
pusha
mov
enter
inc
dec
sarb
dec
arpl
inc
add
ja
push
push
stos
xchg
aam
test
inc
pop
add
and
sbb
inc
insb
lock
dec
dec
mul
movsl
stc
jns
inc
mov
mov
jbe
out
sub
and
ror
cmp
sub
movsl
insb
fs
push
fwait
subl
lds
lahf
mov
mov
test
sbb
xchg
pop
dec
push
push
xor
cs
mov
jo
dec
insl
out
in
inc
add
dec
mov
ret
adc
pop
rolb
fwait
mov
dec
mov
xor
pop
pop
test
mov
xchg
ret
mov
or
js
icebp
push
rcll
cmp
int3
mov
outsb
sbb
out
sbb
int
shl
inc
mov
xchg
jno
orb
arpl
in
inc
shrl
ja
adc
shl
and
push
xor
xchg
test
rcrl
xchg
ljmp
pushf
sahf
fwait
pop
mov
mov
shll
idiv
or
or
push
ja
cmp
pop
pop
lret
jae
mov
loopne
push
rorb
stos
popa
lcall
inc
dec
push
mov
xor
dec
xor
lcall
idivl
mov
testl
ficoms
insl
sarb
dec
mov
mov
pop
or
xchg
std
movsl
cwtl
pop
push
insb
lods
inc
jb
dec
pop
lods
ja
mov
push
or
ss
add
mov
iret
leave
dec
imul
fcompl
sbb
das
enter
addb
adcl
sub
and
cmpsb
xchg
shl
sbb
dec
push
mov
xor
decb
mov
jne
enter
ljmp
push
into
daa
add
cli
cmp
and
dec
mov
inc
mov
push
push
out
ljmp
in
lock
and
into
enter
fs
movl
mov
add
push
mov
stc
or
sub
fbld
stos
pop
adc
push
xlat
jne
and
out
imul
adc
divb
int3
pmuludq
out
mov
and
sbb
mov
add
fsubrp
cs
enter
xchg
test
push
pop
sub
inc
mov
rcrl
shl
xchg
pop
dec
call
cmp
dec
sbb
cwtl
xor
mov
mov
jae
or
xor
lcall
mov
pushf
jp
jmp
sbb
push
test
bound
nop
dec
jmp
mov
pop
or
mov
lds
mov
push
sub
sub
test
mov
adc
pop
out
pop
sbb
or
stos
jb
icebp
xchg
mov
enter
jb
sbb
es
lods
push
pop
inc
sub
or
push
xor
push
js
mov
aad
adc
ror
cmp
addr16
push
jl
sbb
cmc
hlt
lods
pop
sbb
xchg
lcall
mov
mov
fisttpll
lods
in
sbb
adc
cld
xlat
mov
das
xlat
hlt
shlb
fcmovbe
sub
push
cmpsl
adc
xchg
jbe
out
pop
sahf
loopne
push
sbb
jno
popa
loopne
xor
cmp
or
dec
lds
jne
mov
inc
xchg
popf
cmp
mov
cs
adc
jb
push
push
out
shl
sub
and
scas
cltd
sub
shl
sub
cmp
xor
and
int3
gs
test
add
or
mov
mov
or
jl
mov
cmp
test
inc
addr16
mov
and
cmp
iret
add
push
ficompl
dec
xchg
mov
mov
in
sub
jl
in
jb
rorl
aad
xor
push
sti
dec
mov
cmp
pop
pop
int3
pop
fs
dec
imul
test
insl
sub
push
xchg
in
lods
fldt
int3
cmc
jns
movsb
mov
mov
loop
jecxz
ret
and
pop
mov
rolb
fnstenv
loope
inc
xchg
mov
in
mov
adc
mov
fdivrl
shr
jle
push
dec
mov
into
loopne
lret
aad
add
push
cmp
push
sbb
adc
dec
jle
adc
pop
sahf
push
mov
xor
repz
shr
sbb
test
xor
imul
cmpsb
xor
jmp
mov
les
lods
cmp
mov
lea
mov
lds
mov
add
sbb
inc
bound
call
cld
insl
sbb
inc
stc
cs
in
pop
cmp
sbb
jmp
in
cmp
adc
cmc
inc
insl
or
js
mov
push
mov
push
jecxz
pop
jecxz
insl
cli
aas
push
inc
mov
stc
imul
aam
ds
pushl
mov
insl
std
mov
cmpsb
adc
in
sub
pop
mov
into
lret
repnz
mov
loop
push
jg
push
test
push
shr
add
lret
sbbl
cmp
mov
dec
in
out
int3
andb
cs
repnz
inc
push
adc
fwait
inc
xorb
jns
sbb
sub
fdivr
outsb
pop
nop
lods
mov
ss
add
sub
mov
in
pop
xchg
mov
addr16
je
and
scas
js
sbb
jle
rol
or
fcomps
pop
inc
mov
rcr
aam
sub
and
or
mov
xchg
mov
cmp
addr16
mov
dec
les
cmp
push
add
out
xchg
cmp
ret
jae
xchg
xorb
in
outsb
push
std
mov
fwait
and
das
rorb
add
push
pop
ja
cld
dec
add
loopne
jecxz
pop
lcall
mov
add
in
xchg
in
xor
test
subb
sub
lds
popa
cmpsl
insb
adc
mov
or
rcr
stos
fcmovnb
fidivrs
mov
pop
push
xchg
push
cmpl
aad
xchg
std
movsb
loope
inc
popa
addr16
test
repnz
cmp
rol
out
dec
and
xchg
int
negl
cmpb
inc
test
enter
test
dec
int3
lret
ror
cli
fisttpll
enter
xchg
jns
mov
xchg
andl
repnz
and
or
xor
lods
cwtl
movsb
pushf
popf
lret
jne
fnstenv
push
sahf
push
sti
imul
mov
xor
xchg
leave
insb
lret
mov
in
push
xchg
pop
ja
lock
adcb
add
cmp
ljmp
popf
mov
pop
sub
cwtl
enter
lock
loope
mov
xor
test
bound
sbb
je
les
inc
arpl
mov
fsubrs
pop
notb
jne
lods
sarb
lcall
and
xchg
sub
mov
fs
cmpsl
add
cs
stos
movsb
repnz
sub
mull
push
inc
insl
inc
push
in
xchg
add
ds
fld
dec
mov
lds
cmp
jbe
sub
ljmp
sbb
out
xor
add
int3
mov
mov
pop
testb
xchg
adc
inc
cltd
testl
movsl
stos
fisttpll
or
jp
push
pop
add
or
out
push
mov
out
fucom
mov
or
jmp
xor
cltd
xor
xchg
inc
adc
and
mov
mov
dec
inc
adc
lret
push
out
adc
ret
inc
add
mov
lret
mov
xchg
bound
cmp
jbe
xchg
inc
push
hlt
or
movsb
lahf
adc
jbe
call
aas
push
iret
lods
push
sub
test
xchg
lods
push
popf
stos
in
xchg
adcb
dec
xor
lock
mov
mov
cli
out
xchg
push
js
in
jae
fmul
mov
orl
dec
lods
adc
pop
js
lock
cmc
negl
mov
sbb
loop
xchg
jecxz
rcrl
int3
stc
dec
jb
mov
sbb
xchg
push
rcr
orb
faddl
mov
int3
dec
repnz
mov
lock
out
or
pop
dec
fiaddl
xor
int
in
jmp
push
in
scas
mov
sbbb
dec
jmp
sbbl
add
push
cmp
adc
jae
sub
cmp
sub
rorl
jne
lea
lock
push
mov
adc
sub
jns
add
bound
xor
in
and
cmc
and
lcall
shrl
jp
fwait
mov
std
aad
sarl
push
fwait
sub
rorb
movsl
pop
push
jecxz
mov
mov
sbb
push
push
adc
es
stc
xlat
cmpb
or
pop
cmp
sub
das
arpl
push
jo
cmpsb
enter
fs
dec
movsb
cmp
push
add
fdivl
je
fdivl
mov
sti
frstor
rcll
inc
nop
jg
mov
shrb
xchg
pushf
dec
add
pop
mov
sub
scas
cmp
rcrb
mov
out
mov
sbb
or
out
inc
cli
and
movsb
fcoms
adc
in
pop
xchg
mov
clc
mov
int3
cld
and
xchg
lods
in
jns
or
dec
jmp
stos
push
scas
add
dec
stc
cld
sub
add
xor
insl
jecxz
mov
mov
jne
dec
outsb
test
aas
dec
xorb
sbb
xor
ljmp
push
mov
test
adc
push
add
sub
out
imul
mov
adc
xorl
dec
int3
dec
push
lock
cltd
dec
mov
fsubp
test
inc
and
and
cmp
add
push
jns
and
adc
gs
stos
cmpsl
xchg
xchg
lret
fisubrs
testl
insl
lret
mov
add
hlt
push
inc
adc
inc
pop
fsubrs
pop
in
and
and
ja
xor
push
dec
fcomip
aas
and
je
add
lcall
xor
and
out
loopne
mov
inc
mov
ret
cs
in
pop
in
or
mov
or
or
pop
gs
rcrl
xorb
int3
inc
inc
mov
sub
cli
dec
mov
clc
dec
xchg
pop
pop
out
cmp
fsubl
in
test
test
ds
out
daa
dec
mov
fstl
mov
cmp
ss
jmp
out
hlt
and
arpl
inc
stos
das
mov
js
add
or
push
scas
repz
mov
lahf
mov
inc
insb
mov
je
mov
insb
dec
jns
mov
test
xlat
in
adc
jbe
inc
sub
aaa
lahf
mov
mov
hlt
pop
push
out
and
fdivrs
jne
xor
mov
jle
stos
aad
add
xacquire
loopne
popa
lock
movntq
stc
lock
sti
lds
mov
pushf
cld
mov
sbb
insl
jne
mov
out
pop
fcmovb
inc
add
and
cmpsb
ret
fsubp
out
orb
xor
adc
inc
sub
sub
call
hlt
dec
mov
test
cld
jo
cmp
xchg
pop
or
or
orl
mov
jns
shll
push
xchg
out
mov
sahf
jne
stc
popa
outsb
adc
fwait
mov
mov
mov
xor
adc
ljmp
call
lock
mov
dec
push
int3
in
rcrl
add
adc
adc
pop
mov
cmpsl
hlt
mov
mov
test
push
dec
or
pop
adc
dec
shlb
adc
push
adc
pusha
das
enter
stos
fists
popf
mov
mov
xor
dec
and
fdivs
call
mov
cmp
or
scas
loope
cmpsb
mov
lock
lret
ret
addr16
mov
mov
pop
clc
mov
push
pushl
and
int
inc
mov
insb
push
pop
mov
xor
and
mov
jg
in
xor
mov
jne
pusha
mov
jl
test
ds
lcall
pop
loopne,pt
div
jp
addr16
mov
or
inc
pusha
pop
xor
call
clc
rcll
xchg
test
nop
mov
ljmp
fisubl
push
clc
and
clc
sbb
movsl
inc
mov
test
shrb
popf
mov
add
insb
cmp
out
mov
sub
pusha
sub
adc
xor
out
lods
jmp
mov
test
inc
xor
inc
sbb
testl
mov
and
daa
das
popa
das
push
jne
jb
adc
fwait
sub
aam
xchg
repz
add
movsb
stos
test
vmaxpd
popa
gs
xorl
fistpll
and
pop
dec
icebp
lock
mov
ja
jbe
out
movsb
hlt
adc
pop
dec
cwtl
test
push
xor
sub
out
push
das
pop
inc
mov
iret
jo
idivb
xchg
cld
int
cltd
push
bound
fisubrl
jb
pop
mov
mov
testb
mov
fstl
and
xchg
addr16
adc
xchg
aaa
mov
push
jl
test
sbb
jecxz
stc
xchg
push
call
div
data16
ret
out
xor
lock
mov
or
rcrb
dec
test
inc
adc
mov
push
dec
push
in
push
popa
jbe
adc
dec
mov
loop
rcrl
out
fwait
xor
pop
xchg
ss
inc
push
stos
test
push
xchg
repnz
hlt
lret
aaa
ss
rcrl
gs
rcl
inc
fbld
and
cmp
outsl
or
xchg
fildl
mov
stos
xor
sarl
inc
nop
add
ja
push
sub
bound
stos
cmpsb
xor
adc
fstps
cmp
and
pop
mov
push
pop
lcall
shll
imul
xor
leave
fcmovnu
push
loope
push
cli
lods
sar
push
test
lods
mov
and
arpl
fstpt
jl
xor
stc
inc
lahf
adc
rcll
dec
mov
sub
push
mov
and
test
js
lock
sbb
cs
dec
sub
mov
stos
lods
cmpsb
inc
insb
and
sbb
and
dec
jo
fxch
mov
test
mov
xor
jl
jb
je
or
add
mov
cmp
mov
xchg
push
dec
or
scas
jl
add
add
out
add
mov
add
pushf
or
jg
movsl
ja
andl
mov
and
add
mov
push
jnp
andb
push
sub
lds
push
test
pop
shrl
pop
mov
data16
call
clc
mov
daa
pop
mov
mov
cmp
in
lock
mov
les
sbb
add
sub
sarb
insl
fstpl
lea
les
inc
xchg
mov
out
xchg
int3
or
mov
std
push
shrb
aas
mov
add
xor
mov
call
lret
cmp
hlt
idivb
cmpb
imul
jmp
mov
push
in
inc
insb
or
add
adc
adc
and
popf
cmpsl
outsl
rclb
adc
clc
ret
leave
out
inc
xchg
insl
inc
xchg
dec
xor
xchg
jmp
pop
and
outsb
leave
push
mov
pop
push
mov
jno
push
das
fsub
stos
or
movsb
mov
scas
les
inc
sbb
mov
cmp
jl
sbb
add
dec
lods
popa
lock
pop
jb
aaa
lret
loope
and
sbb
lret
jae
xchg
aam
out
outsl
je
fsubs
scas
fisttps
in
mov
out
ds
sbb
push
cltd
mov
insl
adc
xorl
sbb
mov
adc
jbe
lret
iret
stos
push
mov
adc
outsl
and
mov
or
jle
es
aaa
or
test
sub
aad
in
ret
repnz
in
pop
es
xor
aas
mov
movsb
stos
jp
in
test
std
mov
insl
xor
aas
fisttps
adc
shlb
add
jb
adc
push
repnz
ds
jb
loope
jo
sarb
adc
and
cmc
push
ljmp
jo
bound
or
loopne
push
mov
inc
hlt
addb
pusha
dec
jbe
enter
imul
test
sahf
push
dec
cmpsl
inc
adc
inc
popf
and
lock
rcll
xchg
lea
adc
ds
sub
jl
push
test
into
lods
xor
xor
sbb
mov
shrl
jmp
and
push
call
popa
cltd
dec
jg
lods
jl
xor
rol
pop
int3
jns
cli
jno
sbb
fstpt
push
insb
fnstsw
pop
push
or
push
sub
inc
jo
adc
int3
aam
jge
mov
rcrl
popa
fscale
add
in
imul
or
push
clc
out
adc
xchg
je
scas
ja
js
scas
ficomps
mov
adc
push
dec
add
sbb
std
sub
shr
mov
dec
push
in
adc
lock
int3
dec
shrl
inc
dec
pop
je
mov
icebp
pusha
add
iret
cltd
lods
cli
aam
notrack
cltd
iret
jmp
sub
jo
inc
or
add
xchg
mov
in
lock
loop
inc
imul
scas
add
add
adc
fiaddl
push
mov
dec
sbb
out
pop
adc
dec
mov
dec
pop
dec
stc
pop
dec
mov
xchg
mov
mov
jg
aas
xchg
fdivs
lcall
jo
jp
mov
push
jnp
lret
test
stc
scas
les
pop
mov
pop
lret
push
andl
xchg
adc
mov
mov
mov
daa
mov
mov
and
int3
shl
cmpsb
mov
or
mov
adc
xor
lods
rcrl
rcl
frstor
or
notb
jb
popf
test
lods
mov
cmp
dec
and
mov
xorl
dec
pop
jecxz
push
sbbb
sub
inc
xlat
add
adc
testb
xchg
sub
dec
pop
sbb
sub
shrb
sbb
enter
icebp
stos
xchg
ljmp
inc
mov
inc
inc
jb
add
lods
sbb
jle
mov
in
mov
mov
outsl
outsb
or
mov
jmp
or
pop
lock
imul
in
mov
mov
fcomi
jecxz
xor
mov
stc
lds
jge
mov
push
xchg
mov
or
out
xchg
inc
fwait
push
int
cmp
xchg
xorl
movsb
xor
sbb
fmuls
mov
push
lock
pop
inc
in
or
ret
out
aad
cmpsb
jno
outsl
stos
popa
in
fsubrl
ss
fistps
test
loopne
jp
xchg
mov
sbb
pop
cmp
andb
cmpsb
nop
xchg
icebp
jne
je
shlb
inc
aas
stos
push
arpl
enter
pop
inc
stc
fists
lret
push
sarl
fmull
mov
mov
or
pop
hlt
mov
inc
sub
sbb
dec
inc
mov
cli
push
divb
aas
mov
rcl
dec
and
pop
dec
xor
cmp
pop
xor
pop
push
ret
push
push
scas
jecxz
sub
xor
ss
je
pop
and
lods
sbb
and
aam
ja
cmp
sub
push
jae
push
pop
fadd
or
call
pop
xor
dec
das
cmp
xor
into
jmp
nop
xchg
sbb
pushf
rsm
inc
sub
and
mov
mov
xor
pop
push
sub
adc
jne
cs
pop
mov
inc
cmp
cld
mov
adcb
aaa
or
inc
xchg
jg
in
sub
leave
jge
not
fucomp
add
or
in
adc
mov
sbb
nop
out
ja
add
jo
mov
push
rolb
mov
mov
js
dec
es
adcl
and
jl
push
push
dec
pushf
jns
outsl
jge
cmp
or
sub
mov
cld
push
ljmp
adc
or
lea
fwait
pop
clc
es
sahf
aaa
ljmp
adc
xor
inc
stos
pop
inc
into
pop
lahf
mov
rorl
add
sub
lods
sbb
cmp
cltd
fldt
jp
jb
cmp
or
xchg
dec
popa
xchg
into
bound
sbb
ret
push
sahf
or
push
xor
loopne
pop
ficompl
mov
outsb
pusha
mov
shll
lds
ficoms
ret
sbb
dec
iret
stos
dec
push
arpl
xor
cmp
jmp
xchg
js
fdivrl
mov
dec
inc
add
rcll
mov
push
shrl
call
cmpb
sub
mov
jp
mov
lea
in
bound
and
mov
in
adc
cmp
inc
lcall
call
xor
xchg
xchg
aas
inc
test
ljmp
jp
dec
popf
xchg
flds
int
push
shl
lea
iret
in
jge
jb
fimuls
pop
cld
iret
pop
cwtl
sbb
jns
lcall
lods
popa
jbe
rcll
lods
xchg
cmp
mov
iret
mov
ds
insl
sbb
or
cmp
dec
dec
scas
aaa
iret
outsl
sti
cli
pop
clc
fbstp
push
cltd
dec
in
mov
movsl
adc
xchg
mov
cs
or
jb
jb
and
sbb
adc
add
bound
movsl
jg
lret
mov
bound
sub
ja
aam
out
add
adc
test
jge
pop
in
inc
daa
adc
mov
clc
jmp
xlat
arpl
mov
cmpsl
lret
push
jmp
jmp
pop
pop
inc
adc
xchg
sub
pop
std
adc
leave
into
sarl
pop
in
cmp
mov
push
pop
fstpt
jne
outsl
inc
or
cs
repz
pop
loope
mov
nop
sbb
int
rcrb
inc
inc
mov
mov
imul
orb
adc
push
xchg
lret
sub
fwait
and
aaa
lea
xchg
mov
daa
mov
mov
mov
lods
xchg
jle
and
xchg
jb
ds
lds
shr
lcall
fwait
push
mov
jae
repnz
cmp
rcrb
test
jge
popa
hlt
mov
pop
sub
inc
xlat
fnstcw
pop
loope
cwtl
mov
xchg
xchg
push
sbb
dec
mov
pop
add
mov
adc
je
pop
cli
outsb
pusha
arpl
jge
sbbl
xor
rorb
push
push
jl
test
xchg
loope
ljmp
cmpsb
jns
cmp
std
jg
stos
inc
add
push
add
dec
xor
in
pop
mov
popa
jl
xor
xchg
into
pop
das
outsb
gs
add
sarb
fcompl
in
das
push
js
jmp
je
sbb
roll
mov
pop
cmpsl
or
sbb
dec
pop
cs
insl
cmpsb
or
cmp
call
fldt
xchg
rep
lods
jns
daa
pop
enter
add
nop
and
fcmovb
enter
aam
lret
mov
inc
or
shl
scas
insb
dec
lret
aas
mov
sub
sbb
shrl
in
movsb
js
sub
daa
fdiv
jbe
imul
add
leave
insb
adc
aad
pop
mov
ror
mov
dec
loope
xor
sub
ss
mov
xor
pop
out
test
sbb
cwtl
push
adc
push
rclb
int3
adc
push
mov
stc
and
dec
leave
sub
test
test
lea
jns
jp
lea
and
jb
push
repnz
loope
jbe
or
mov
jno
rcrl
inc
xor
in
ret
sbb
mov
mov
loopne
push
fcoml
jg
or
jle
pop
insb
mov
dec
inc
fstl
jno
sbbb
ss
xchg
outsl
addr16
xor
outsl
xorb
adc
ljmp
loope
mov
aam
shrb
test
mov
jl
fstps
stos
sub
mov
in
jge
sti
arpl
xor
or
lcall
ret
dec
int
pop
fdiv
das
cmpsl
pop
call
xchg
sarl
push
scas
rcl
xlat
icebp
jo
mov
and
mov
mov
xor
ret
repz
fstl
xor
adc
out
xchg
push
push
dec
dec
stos
and
mov
test
pop
rolb
pop
test
push
sbb
inc
jmp
pop
xchg
mov
dec
ret
mov
cmpsb
adc
cmp
cltd
pop
or
inc
imul
jecxz
adc
adc
sti
ret
fs
mov
mov
mov
push
inc
out
add
scas
dec
fdivl
dec
iret
mov
addr16
es
mov
jl
aad
push
fcomi
nop
inc
mov
jg
movb
mov
shll
int3
scas
pop
repnz
cwtl
jg
in
push
shll
stos
pop
jmp
jbe
sahf
pop
push
in
addl
gs
mov
push
adc
not
xchg
pop
clc
rep
lcall
call
out
mov
out
jl
sti
add
mov
mov
and
int3
jae
xor
sbb
out
mov
insl
xchg
add
out
movsl
jmp
lret
pushl
sbb
pop
xor
addl
mulb
test
stos
adc
into
dec
push
movsb
cpuid
jmp
or
adc
or
bound
sub
cwtl
xor
sub
or
jge
inc
movsb
cwtl
jge
pusha
push
roll
jle
inc
int
lock
mov
mov
loope
jbe
or
aas
divl
jns
and
or
lods
fcomps
inc
lcall
xor
ficoms
mov
or
ljmp
mov
mov
adc
adcb
lahf
mov
mov
lret
das
cmp
sbb
inc
iret
mov
xor
or
xchg
and
aaa
lret
push
fucomip
mov
inc
out
adc
popa
incl
pop
mov
pusha
jge
call
inc
jbe
outsb
add
pop
sub
bound
xchg
push
sbb
inc
loopne
movsb
hlt
repz
insl
add
stmxcsr
insb
jg
jmp
imul
sub
ljmp
mov
mov
jl
or
icebp
mov
adc
xchg
mov
sub
xlat
test
or
lock
cmp
mov
sbb
cli
pop
pop
inc
fcoml
inc
pop
mov
psllw
xchg
bound
pop
push
mov
cli
idivb
enter
orb
dec
pop
sarb
cmpsb
xor
sub
leave
stos
mov
mov
int3
imul
mov
sub
lds
and
xor
jp
push
testl
fbld
or
fimull
js
mov
sbb
push
gs
das
mov
rolb
pop
pop
ss
imul
inc
xlat
jo
adc
aaa
in
lea
sub
and
movsb
fdivl
scas
and
adc
jge
mov
sub
mulb
incb
arpl
push
lods
loopne
ljmp
mov
mov
jp
add
mov
xchg
adc
xor
push
loopne,pt
idiv
lock
mov
std
fs
ret
cmp
sub
dec
pop
mov
scas
or
xchg
push
nop
mov
add
xlat
out
cmp
dec
jge
lods
inc
fcmovnbe
inc
lods
mov
mov
mov
xchg
push
push
push
icebp
jecxz
lahf
pop
dec
mov
cltd
push
gs
subl
mov
xor
inc
jle
cmp
mov
shll
push
cmp
rolb
dec
xor
popf
adc
fildl
pop
pop
inc
les
inc
scas
aad
in
popf
xor
xor
pop
repz
les
insl
mov
in
loop
mov
nop
xor
pop
jb
clc
insl
cmpsb
push
push
push
dec
xchg
jb
jge
mov
shl
xlat
mov
mov
pop
adc
les
dec
and
pop
sbbb
jns
imul
dec
push
addr16
mov
mov
lods
mov
js
das
xor
sbb
mov
lods
mov
pop
inc
ret
dec
test
cmpsb
inc
and
mov
rol
xlat
jle
adc
xor
pop
testb
cmpsl
sub
repz
aad
mov
sub
xor
mov
or
mov
not
add
xchg
and
pop
mov
and
xchg
rolb
jge
inc
sub
test
dec
add
pmaxub
jle
fs
sarb
outsl
and
es
adc
cmpsl
sbb
popf
mov
and
or
jle
ret
cmpb
ja
cmp
test
and
adc
or
ss
xchg
mov
rclb
cld
mov
adc
push
xchg
call
inc
or
mov
xchg
out
xor
insl
aaa
iret
push
lds
jne
mov
fcmovne
out
negb
test
add
dec
in
stc
pop
sub
outsb
inc
popa
fs
loop
mov
mov
out
loop
xchg
ja
out
adcb
or
mov
loop
iret
iret
dec
mov
and
mov
decl
mov
xor
push
jp
or
mov
repnz
scas
sub
adc
jp
cmp
sahf
shlb
sbb
icebp
push
mov
ss
pop
adc
cmc
pop
repz
andb
testb
shll
push
stos
mov
xchg
clc
mov
or
pop
loopne
imul
sbb
sub
aas
push
dec
sub
jle
fidivrl
cmp
iret
xor
cmp
insl
dec
scas
insl
mov
mov
into
sbb
out
push
scas
jnp
je
dec
sub
or
jmp
xchg
or
nop
out
lahf
cld
dec
add
cmp
mov
repnz
sub
lret
mov
lods
arpl
lret
mov
jb
cmpsb
push
or
adc
push
push
cmp
jb
aas
xchg
lahf
stos
inc
arpl
insb
mov
aam
test
inc
aam
sub
shlb
mov
cmp
sbb
add
xchg
into
sbb
and
mov
mov
out
lods
cmpsb
mov
clc
lcall
jmp
mov
std
lea
jne
pop
pushf
push
clc
mov
add
cs
cld
scas
sub
sbb
xchg
adc
jmp
fcoms
repnz
mov
xchg
int
je
jae
push
nop
mov
jp
jae
addr16
xchg
orb
cmc
outsb
cmp
mov
ret
xor
push
mov
inc
das
sub
dec
mov
sub
out
test
add
push
dec
icebp
pop
push
adc
cmp
popl
sub
lret
sti
stc
rcll
neg
push
pusha
test
push
mov
cmp
xor
jg
push
inc
testl
repnz
addr16
std
fcmovu
xor
jno
mov
mov
pop
mov
push
hlt
sbb
sbb
fidivl
sbb
insb
mov
call
jb
ljmp
clc
pop
in
rcrb
lods
insb
leave
inc
add
push
mov
sbb
push
out
xlat
testl
out
inc
cwtl
xchg
movsb
aaa
xor
mov
mov
or
or
jno
je
and
jecxz
push
leave
dec
daa
scas
adc
rcl
pop
js
sbb
fwait
sub
xadd
pop
outsb
popl
stos
ss
scas
push
pushl
inc
jge
sub
add
inc
mov
jae
in
insb
icebp
btc
inc
pop
loopne
hlt
cmp
mov
pop
dec
mov
xchg
lods
testl
mov
sub
cmp
mull
dec
add
fwait
mov
cmp
loop
xlat
data16
add
or
add
or
sbb
mov
jle
outsb
sub
add
repz
arpl
cmp
loop
mov
dec
push
test
fwait
xchg
scas
pop
mov
pop
push
dec
rcr
and
push
cmp
mov
jg
stos
lret
test
jns
out
icebp
xchg
call
xchg
xor
mov
mov
mov
xchg
insb
jle
lods
out
fdivrl
test
or
inc
sub
sub
aaa
pusha
leave
int
and
sub
xor
dec
mov
mov
test
ret
xchg
jo
daa
jne
dec
int
fnstsw
cmp
leave
rcll
push
loope
jno
jne
repz
popf
nop
rcrl
jmp
pop
or
imul
rol
jbe
dec
lea
or
add
cmp
adc
inc
sub
and
inc
adc
sub
push
js
inc
or
pop
add
xlat
mov
lret
lods
loop
mov
jns
test
stos
inc
mov
push
daa
xchg
shlb
pop
mov
or
jg
iret
popf
cmpb
add
outsb
xchg
mov
stos
sbb
clc
xor
fisubl
or
xchg
mov
adc
adc
addr16
leave
mov
lock
cmp
mov
jne
xlat
sti
pop
inc
fisubs
push
or
inc
jno
or
loopne
cmp
xor
cwtl
xor
cmpsb
inc
addl
loop
xchg
das
fistpll
pop
movsb
adc
ds
insb
insb
mov
leave
jns
into
add
push
outsl
xchg
sub
shrl
xlat
add
mov
addl
mov
cmpsb
adc
pop
sbb
inc
mov
push
nop
dec
pop
pop
jmp
dec
inc
mov
shl
cwtl
jmp
add
int3
adc
cld
sbb
xor
push
adc
js
clc
sub
mov
cmp
in
in
orl
daa
mov
shrb
ficomps
sbb
and
addr16
enter
adc
sbb
sti
lods
xchg
mov
mov
cmp
fcoml
sub
pop
adc
js
sti
inc
push
int
loope
dec
add
fistps
dec
addl
imull
daa
mov
cmpsl
popf
fcomip
mov
cmp
rcr
mov
loope
dec
ljmp
roll
cwtl
imul
mov
xorb
ljmp
inc
test
mov
mov
push
bnd
dec
test
pusha
pop
hlt
cmp
add
popa
push
inc
neg
dec
adc
mov
mov
mov
cs
stc
fadds
jno
pop
push
dec
cmp
fdivr
pop
inc
js
jno
insb
xchg
xchg
pop
mov
xchg
push
dec
cmpsb
lea
jnp
outsl
xor
or
mov
and
sahf
xchg
ficomps
mov
popf
shlb
insl
adcl
pop
cmp
pushfw
pusha
and
inc
stc
addr16
inc
stos
clc
dec
cmp
jns
xor
popa
sub
push
pop
arpl
call
xchg
mov
insb
pusha
cld
movsb
sub
jno
arpl
or
jp
push
inc
jmp
jecxz
pop
cmp
stc
mov
imul
enter
sti
in
push
or
lods
or
pop
call
popf
jo
xlat
inc
jle
outsl
or
mov
push
xlat
push
in
add
jp
fmuls
jae
add
push
mov
cmpsb
out
push
cmp
rorb
in
mov
lret
pop
inc
les
repnz
pusha
cltd
inc
inc
jle
push
jb
loopne
sub
add
or
add
stos
out
mov
or
sub
sub
or
loopne
push
adc
xor
outsl
add
push
jnp
jmp
and
xchg
add
inc
gs
pop
sbb
push
push
sbb
jge
cltd
push
and
sub
push
insb
add
ret
lret
aas
add
cmp
aad
sbb
pop
in
add
add
in
sub
mov
mov
repnz
idiv
in
lret
jae
test
pop
cli
xor
mov
xchg
cmp
scas
sub
xor
jmp
flds
scas
sarb
fbstp
xchg
jae
shrl
sbb
mov
aad
sbb
pop
jl
mov
cmpsl
les
adc
cli
xchg
sub
push
or
in
ss
and
stc
pop
and
cld
lret
add
mov
inc
and
xchg
incl
rorb
in
inc
sub
sbb
outsl
mov
mov
sbb
ljmp
mov
int
jl
js
mov
lods
mov
aas
xchg
adc
and
inc
push
out
xchg
or
or
xlat
fmuls
or
lret
scas
das
repnz
stc
pop
call
add
imul
add
push
sbb
jns
mov
ja
push
nop
push
mov
imul
leave
js
jno
sti
mov
incb
rorb
mov
daa
das
out
sub
fimuls
mov
add
jecxz
jnp
add
mov
adc
lea
dec
stos
inc
sub
jne
les
push
outsb
js
push
shll
std
pushf
mull
outsb
dec
enter
pop
add
adc
orl
fsubrl
outsb
cmpsb
jp
xchg
xchg
xor
cltd
add
pop
ret
jge
dec
cmc
push
popf
pushl
outsb
xor
lods
inc
repnz
dec
dec
and
cmp
and
jbe
fwait
mov
push
add
or
js
and
jns
jno
or
iret
and
jmp
mov
or
adc
jge
lods
xorb
jae
sarb
sbb
dec
aam
adc
jae
out
rcrl
jo
rcll
out
xchg
lcall
sti
pop
or
cli
and
in
js
push
icebp
inc
pop
pushf
clc
sbb
lods
mov
sub
xor
pop
out
repnz
mov
xchg
ja
xchg
pop
jbe
into
pusha
jge
inc
cs
inc
mov
sbb
int
mov
and
add
xor
cmp
iret
and
dec
pop
add
lods
jg
mov
popa
insb
and
sbb
int3
mov
aaa
ret
jge
outsl
rorl
popl
std
or
add
sub
aad
add
iret
xchg
daa
int3
outsl
xor
lock
into
or
scas
stos
sub
je
pusha
lea
jnp
addb
and
xlat
inc
fisubl
js
cltd
loopne
addr16
xchg
cmp
and
das
loop
jmp
mov
xchg
adc
add
fldt
dec
xor
fcmove
dec
jne
pop
enter
in
cltd
sub
inc
mov
out
leave
sti
js
and
fildll
add
dec
inc
call
gs
push
pusha
cmpsb
rcl
sti
or
std
movsb
ds
jmp
filds
mov
inc
insb
mov
xor
jmp
insb
call
sahf
fsubrs
hlt
mov
jb
mov
mov
xlat
std
jno
xchg
mov
sub
mov
xchg
pop
addb
mov
cwtl
inc
xchg
out
mov
int3
notl
xchg
lds
fnstsw
jmp
dec
mov
out
cs
jl
jne
popa
pushf
or
inc
daa
test
xchg
stos
adc
mov
icebp
gs
sarb
dec
xor
push
pop
out
insl
xor
mov
daa
fadds
mov
movsb
test
lahf
cmp
repz
sbb
jne
out
jae
imul
mov
xchg
addl
or
dec
pop
mov
int
lds
jmp
jae
les
aaa
movsb
bt
mov
pop
mov
test
mov
push
mov
daa
add
fwait
adc
mov
jbe
and
xor
imul
xchg
mov
cmc
pop
xor
or
sub
in
and
test
lock
iret
bound
add
add
add
dec
test
inc
ret
int3
test
dec
mov
push
mov
loope
jae
sti
cwtl
add
cmp
shrb
stos
mov
dec
sbbl
cltd
stos
lods
xchg
fisubrl
push
mov
sbb
mov
fs
mov
push
mov
js
xor
sub
mov
repnz
mov
mov
shlb
fwait
adc
nop
and
push
sub
pusha
lret
rol
pop
lock
sub
adc
ljmp
add
icebp
push
rcrb
pop
lret
flds
out
mov
ret
or
cwtl
pusha
xchg
ss
add
repz
and
xor
mov
clc
cmp
pop
enter
scas
pop
sbb
ret
xor
jb
push
and
loope
mov
push
mov
pop
sbb
push
push
mov
and
std
pop
lret
cmp
lods
cltd
outsb
pop
cmpsl
jns
stc
fists
adc
ret
jecxz
ss
pop
ds
mov
inc
add
sub
mov
jns
dec
or
mov
sbb
imul
shlb
inc
add
jg
add
fs
sub
jb
mov
sbb
in
inc
testl
out
aam
add
cltd
scas
pop
pop
idivl
push
sbb
clc
xchg
stc
insb
inc
jmp
and
xchg
loope
int
shll
pop
jmp
adc
add
pop
xor
lods
rol
dec
cwtl
ret
call
sahf
lret
push
mov
jo
or
lcall
lods
inc
fnsave
mov
leave
xor
xchg
mov
and
sbb
bound
mov
das
addb
xchg
xchg
jae
enter
mov
into
xchg
inc
insb
pop
test
jbe
es
and
lods
test
out
dec
ja
push
stos
inc
mov
lods
into
jmpw
pop
jmp
add
xor
jno
fs
cwtl
addl
aam
ficompl
and
mov
ds
xorl
fsts
std
test
adc
scas
jle
mov
loopne
and
insl
xor
xor
mov
mov
mov
inc
in
hlt
inc
jg
pop
xchg
popf
lods
push
icebp
mov
pop
mov
mov
popf
dec
xchg
stc
push
popf
sub
sub
add
pmaddwd
push
out
scas
mov
push
adc
inc
xor
mov
cli
jo
adc
sbb
insb
cmp
pop
push
lar
fs
bound
dec
incl
shlb
icebp
push
pushf
cmp
cld
and
sub
cmp
mov
jecxz
xor
gs
inc
push
idiv
mov
daa
pop
jae
cwtl
cmp
cld
inc
jae
jbe
in
dec
dec
std
sub
dec
mov
dec
fcoms
jno
insl
mov
add
adc
pop
add
add
pop
mov
or
mov
dec
jb
mov
ds
insb
bnd
xchg
jno
lods
and
bound
inc
pop
lcall
ljmp
int3
repnz
stos
lahf
pop
mull
mull
or
mov
aad
sbb
dec
xor
outsl
mov
push
cmpsb
xchg
inc
push
cmc
adc
out
mov
inc
mov
or
imul
inc
add
movsl
movl
test
mov
xor
adc
loop
lcall
pop
mov
pop
scas
jmp
in
imul
push
lahf
in
iret
shl
ret
xorl
shlb
mov
sbb
dec
mov
or
inc
cltd
jne
jmp
xchg
mov
mov
call
jp
cli
sub
in
push
test
nop
stc
mov
lods
filds
dec
mov
xchg
pop
jecxz
add
stc
cmc
lods
or
lds
lahf
jns
push
xchg
sub
in
out
add
mov
les
sti
xchg
inc
or
lcall
xchg
les
xlat
mov
out
je
in
cmp
dec
xor
jecxz
cltd
cs
repnz
pop
repz
imul
xor
cs
cmpb
lret
cmp
adc
jmp
loopne
and
sub
inc
dec
aam
icebp
adc
or
scas
sbbb
push
jle
cltd
jo,pn
pop
dec
pop
and
inc
dec
and
mov
jno
cmpsb
ret
enter
sarb
scas
cmp
inc
ljmp
pop
xlat
orb
jbe
mov
inc
es
mov
movsl
or
pop
and
sahf
xor
insb
lods
std
or
mov
std
enter
test
xor
jnp
lcall
mov
mov
fisubs
xor
cmp
fs
push
cmp
and
mov
inc
dec
xchg
out
pop
and
pop
je
imulb
jmp
adc
mov
mov
in
repnz
into
jecxz
ficoml
adc
leave
cltd
repnz
stos
out
cwtl
fidivrl
lods
cmp
fnsave
pop
inc
ficompl
test
outsb
popa
shlb
int
in
shrl
pop
mov
ds
dec
sar
push
clc
sub
push
push
mov
sub
imulb
aas
xor
mov
loopne
stos
push
imul
push
push
sti
test
repz
add
lock
sahf
sub
addr16
dec
loope
adc
je
sub
jge
cmc
lock
pop
cltd
adc
pop
adc
ja
mov
lods
inc
mov
fsubr
cmp
jno
cmp
or
jnp
rcl
sbb
dec
inc
in
stc
in
cmp
fsubs
mov
jecxz
adc
mov
push
mov
jb
or
inc
gs
xor
add
subl
mov
shlw
jecxz
pop
popf
ret
push
hlt
jmp
jl
jnp
sbb
fcmovnu
fs
or
test
fdivs
inc
ljmp
loope
iret
mov
jne
adc
mov
xchg
dec
sub
cmpsl
ss
inc
pop
iret
call
push
loope
icebp
rclb
loop
iret
sub
push
jne
cmc
xchg
sub
mov
repz
bts
xchg
inc
xchg
sbb
insb
test
xlat
or
lahf
std
mov
xlat
add
in
cli
rorb
call
test
mov
leave
incb
bound
inc
xor
pop
sub
sub
jg
jmp
mov
and
pop
mov
xorl
or
ss
inc
mov
xchg
jb
aas
vpshufd
pop
sbb
mov
or
into
mov
xlat
inc
push
push
jmp
sbb
call
pop
ja
or
or
cmpsb
mov
xchg
sub
outsl
sbb
cwtl
dec
push
adc
jbe
fdivs
inc
adc
or
and
out
aas
scas
mov
fcoms
out
sub
leave
cs
dec
data16
xchg
pusha
adc
ds
xlat
xchg
mov
testb
aam
loop
outsb
fwait
xchg
ja
rolb
cmp
cmp
push
sub
sti
lods
dec
call
jne
in
inc
call
mov
aad
mov
push
inc
fldl
and
or
test
cmp
cmp
lret
mov
idivb
pop
sbb
sub
fldcw
lods
xchg
ljmp
mov
xor
lods
mov
xchg
hlt
stos
cmp
push
sub
stos
rclb
xor
scas
imul
mov
sarb
ret
and
mov
and
add
jb
out
and
test
sub
jg
push
movsb
out
aad
pop
add
or
std
cmpsb
jmp
pop
insb
adc
sbb
xor
test
jbe
lahf
lret
ret
sahf
loope
pop
popf
and
sub
mov
addr16
ret
cmpsl
cli
cmpsb
mov
jb
dec
cmp
int
mov
test
inc
lock
adc
popa
lods
icebp
js
sbb
js
popf
push
mov
bound
mov
lcall
and
push
xchg
adc
pushf
outsl
nop
mov
ret
push
ret
loop
jecxz
adcl
mov
fucomp
cmpsl
adc
jmp
mov
arpl
arpl
dec
stos
mov
sbb
jp
scas
call
add
lahf
sbb
and
lods
lea
fimull
sbb
popf
jg
xor
in
test
add
add
stos
xor
adc
repnz
nop
sbb
sub
adc
movl
add
bound
aad
das
repnz
sub
add
jmp
sub
add
mov
lahf
hlt
jno
cld
mov
and
mov
dec
jne
out
shr
inc
sahf
sbb
mov
dec
cmovae
pop
data16
nopl
cmpsl
jne
cmp
std
subl
ljmp
cld
or
aad
dec
mov
xchg
in
loopne,pt
cmp
jecxz
and
jl
test
hlt
jo
cmp
ds
pushf
cmc
jne
push
dec
sub
loopne
mov
xor
pop
xchg
ret
repnz
xchg
inc
mov
ret
jmp
push
cmpl
dec
fisubs
stc
inc
ret
shlb
out
insl
pop
mov
clc
shll
mov
movsl
data16
sbb
inc
arpl
and
idiv
jmp
outsl
sub
add
into
mov
fistl
adc
push
test
push
dec
xorl
cmpsl
sub
push
scas
fdivrs
mov
das
fdivp
pop
sbb
clc
repnz
xchg
lret
lea
mov
in
pop
push
adc
xor
pminub
outsl
pop
ds
mov
jl
das
fs
cmp
pushf
cmp
jbe
iret
inc
loop
cmc
xorl
dec
dec
fistl
cmpb
insb
inc
mov
sti
add
mov
jne
int3
inc
xor
push
in
sbb
call
and
in
test
sbb
adc
repnz
jl
or
shlb
repnz
sub
xchg
call
and
dec
insb
ret
das
hlt
aas
out
dec
lcall
adc
cmpsl
push
mov
fmull
or
rclb
jne
jno
mov
sub
mov
mov
pop
in
mov
fbld
gs
cmp
mov
orb
jecxz
arpl
dec
cmp
icebp
mov
xor
mov
add
xchg
inc
out
xlat
mov
test
or
jo
rorl
dec
js
mov
push
jb
in
pop
jmp
xchg
mov
sahf
mov
mov
cmc
gs
test
push
sbb
pop
lds
add
add
add
imul
lds
dec
pusha
inc
mov
clc
js
lds
jae
sbb
pop
lock
stos
cmc
lret
and
pop
mov
cmc
mov
int
into
jecxz
subl
fwait
add
xor
rcr
push
mov
add
xchg
repnz
daa
add
sub
enter
mov
pop
dec
add
ss
mov
bound
testl
and
roll
sbb
pop
pusha
mov
cmp
and
cwtl
cmpsb
fdivrl
xchg
xchg
mov
stos
and
lea
xchg
adc
jmp
insb
out
call
add
jo
addr16
xchg
lea
pop
mov
ret
das
adc
xlat
inc
bswap
mov
rcrl
jp
pop
cs
aas
mov
ljmp
adc
pcmpgtb
aaa
aas
add
xchg
jb
pop
das
pop
movsb
aaa
adc
inc
je
mov
and
lahf
push
add
push
or
cmp
xor
enter
xchg
jle
mov
ljmp
decl
shll
cmp
jnp
dec
outsb
leave
scas
mov
outsl
and
xchg
mov
pushf
inc
mov
xlat
je
jnp
sbbb
decb
stos
ljmp
xchg
lahf
cwtl
popf
imul
cmp
mov
stos
jge
daa
jns
jge
cvtpi2ps
out
shrb
out
sbb
add
cld
xchg
or
leave
icebp
cmp
and
repnz
cmp
and
cs
fdivrs
cmpl
dec
in
sti
loopne
mov
xchg
jmp
pop
fdivp
test
mov
outsb
jge
sbb
add
dec
in
lds
lods
inc
dec
cmp
dec
inc
jg
pop
pop
insl
xchg
cmp
cwtl
jbe
pop
aas
jbe
std
mov
mov
fdivl
xor
popa
push
mov
jmp
subl
icebp
push
das
out
data16
cmp
mov
mov
push
stc
inc
inc
mov
call
ljmp
push
cmp
jg
add
enter
inc
or
and
shlb
fistpll
cmc
stc
idivb
imul
lods
jne
ljmp
sub
or
inc
sbb
xchg
insb
sbb
int3
cltd
imul
dec
xchg
loopne
dec
aad
add
ror
fwait
sub
repnz
rorl
out
mov
data16
cli
sub
out
outsb
inc
in
dec
inc
les
inc
xchg
mov
mov
imul
jae
inc
adc
pop
pop
push
and
sbb
es
mov
adcl
dec
jne
add
xchg
stos
adc
xchg
stc
pop
jmp
enter
clc
cltd
inc
mov
dec
cmpxchg
and
jmp
and
test
rcl
int
xorb
xor
lret
lahf
xchg
icebp
enter
popa
mov
addb
xor
or
shl
rol
repz
mov
imul
dec
or
mov
cmp
shl
inc
lret
das
or
mov
aam
sbbb
and
inc
imul
mov
shll
data16
pop
fwait
lods
movsb
xchg
rorl
into
push
scas
negb
push
imul
jbe
loopne
test
mov
in
rol
lock
lods
push
pop
lret
dec
xrstor
mov
lds
std
jge
mov
xchg
and
fwait
mov
aaa
mov
insb
jae
push
repnz
in
or
cmc
js
call
rcrl
cld
mov
mov
es
sub
test
push
jne
jno
jp
jne
in
mov
scas
popf
ret
xchg
rcrl
add
xchg
ljmp
pop
cmp
test
int3
pop
xor
push
xchg
sbbb
aam
loop
lret
ljmp
loopne
push
cwtl
xchg
aas
rcr
nop
mov
cmpsb
xlat
testb
or
lahf
mov
mov
jne
xor
fldt
mov
cmp
and
shl
push
movsl
xor
jns
pop
pop
dec
sbb
xchg
jno
sub
xchg
outsl
imul
call
leave
les
js
arpl
fsub
mov
xchg
cli
xchg
popa
dec
sahf
sti
or
cld
xchg
dec
movsb
push
cmp
in
sbb
adc
addr16
decl
leave
mov
mov
les
sbb
jmp
jl
dec
pop
inc
pushf
bound
xchg
or
lea
inc
gs
xchg
int3
fucomp
pop
lea
imul
jmp
push
insl
scas
fwait
pop
test
fwait
rorb
das
mov
push
mov
sub
cmp
xorl
cld
mov
push
mov
sub
mov
fidivrl
rcrl
mov
stos
inc
out
jne
sub
imul
cmc
int
mov
xchg
xor
jp
lret
jp
out
lea
in
inc
dec
mov
push
dec
add
sbb
js
lcall
sarl
jp
mov
xchg
mov
pop
mov
addb
outsb
push
sti
push
addr16
and
out
mov
insb
and
sbb
sbb
or
push
push
inc
mov
mov
stos
add
out
jmp
cli
or
imul
out
ds
int3
push
ficoms
dec
adc
imul
mov
sbb
xchg
pop
fwait
mov
add
cmp
cld
insb
xchg
repnz
xchg
jl
repnz
mov
outsl
dec
decb
lahf
adc
test
ror
rolb
sub
es
dec
adc
shr
decb
ret
shll
jp
ret
movsb
fdivs
js
fsub
add
xchg
xchg
mov
mov
jnp
push
inc
mov
arpl
out
fisubrs
push
add
add
xor
or
in
loop
fs
xchg
test
xchg
or
xor
fs
fimull
es
addl
cmp
fisubrl
flds
fninit
mov
pop
mov
xor
lock
fsubl
push
dec
aad
pusha
pushf
mov
pop
std
push
pop
inc
fs
push
rolb
insl
xor
mov
xor
mov
dec
icebp
test
add
or
int3
pop
data16
xchg
je
popa
sbb
fs
cs
xchg
mov
popf
mov
adc
in
data16
cmpsl
jns
out
cmpsl
std
sbb
ja
vzeroall
jl
pushf
mov
sub
std
cmp
adc
pop
push
sbb
push
fisubrl
mov
jmp
and
cltd
and
push
test
into
push
aas
sub
xchg
xchg
jns
in
shll
inc
fimuls
mov
cmp
mov
or
xor
test
test
in
mov
jg
notb
jmp
fsubrs
popf
jg
add
fldt
push
inc
cmp
push
ss
jne
cltd
insb
push
leave
xchg
mov
stc
into
gs
insl
adc
push
inc
ret
out
sbb
pop
xchg
xor
adc
push
rorl
jns
ret
xlat
mov
cwtl
xlat
push
or
dec
addr16
inc
xchg
shrl
pop
jbe
mov
icebp
fcmovb
jno
xor
xor
xchg
adc
ds
js
aad
pop
add
lret
fisttpll
mov
xor
add
mov
pop
cmpsb
outsb
insb
rcl
inc
test
mov
popf
cmp
cmp
xchg
fs
sbb
jno
sbb
xchg
adc
mov
insb
lahf
in
mov
orl
mov
sub
jecxz
mov
sbb
cwtl
push
or
dec
aam
sbbb
push
mov
stos
add
rcll
push
dec
add
inc
dec
and
mov
in
in
into
repnz
xorb
sbb
push
mov
pop
in
xchg
add
in
jg
and
sub
or
mov
add
and
aad
jle
lret
jp
mov
push
and
in
ds
popa
or
ja
xchg
jmp
scas
pshufw
movsb
pop
clc
sarb
and
sbb
ljmp
mov
add
fs
ficomps
fwait
gs
nop
aad
ss
mov
nop
out
dec
arpl
subb
xor
rcrb
in
add
add
in
inc
xor
mov
cmp
pop
gs
sbb
arpl
xchg
push
arpl
xchg
jno
fcoml
and
out
jmp
pushf
test
sbb
shrb
iret
mov
decb
loopne
cmp
cmp
es
pcmpgtb
mov
faddl
mov
ss
jmp
fimull
mov
pop
cltd
xor
daa
inc
mov
fcom
in
cmp
inc
lcall
hlt
mov
in
test
or
xor
jbe
cmp
pop
js
lods
jbe
xchg
shrl
push
jo
adc
stos
addl
lds
push
mov
dec
lds
pop
inc
mov
negl
pop
push
or
out
xchg
insl
push
mov
sub
push
adc
cmp
mov
test
into
das
jno
cmp
xor
shll
adc
add
mov
bound
mov
insb
das
inc
inc
call
add
enter
push
jmp
fldenv
mov
or
mov
dec
adc
or
or
mov
jns
imul
pop
ret
xchg
stc
pop
mov
sbb
ror
xchg
sub
in
leave
int3
cmpsb
andb
in
test
inc
scas
cs
mov
cmp
fs
ret
mov
cli
inc
mov
in
xchg
in
ja
in
pop
or
or
adc
adc
orl
mov
push
push
add
out
aaa
imul
inc
in
xchg
dec
push
outsl
sbb
sub
jmp
mov
ljmp
dec
adc
psubusb
push
mov
pushf
jmp
cs
add
xchg
mov
dec
imul
mov
and
fimull
je
mov
dec
jno
and
xor
ljmp
shll
xor
pop
jne
cld
xchg
xchg
sbb
in
mov
je
push
or
movsb
test
shl
mov
xchg
sarl
add
mov
in
lcall
movnti
jge
pusha
sahf
push
add
lcall
cwtl
push
pop
punpckhwd
mov
popa
scas
jne
push
mov
jmp
pop
inc
pop
dec
xor
iret
xor
test
cmp
jmp
mov
sub
movnti
push
mov
dec
fidivs
mov
outsl
lock
push
mov
mov
insb
mov
js
mov
ja
inc
orl
inc
aas
cwtl
lods
sbb
faddp
xor
in
mov
lcall
push
jns
arpl
mov
stos
lret
push
jo
mov
aad
or
cmpsb
bound
out
fnstsw
cmpsb
cmp
xlat
or
dec
inc
loop
mov
rol
adc
sub
inc
jg
fmuls
repnz
add
push
sbb
insl
inc
je
addr16
dec
inc
js
sbb
sub
fidivl
jne
stos
jg
dec
adc
push
out
rcll
mov
cmpb
fldt
ret
out
cmp
cmp
sub
inc
mov
into
mov
cltd
stc
pop
stos
aaa
bound
pop
icebp
push
dec
mov
mov
lea
mov
sbb
mov
pop
scas
or
psubw
inc
jg
pop
gs
mov
nop
push
fsub
jmp
pop
mov
int
mov
aam
and
loop
jl
ds
cmp
sbb
rorl
pop
jb
push
sub
stos
jns
cmpsl
mov
mov
popf
add
mov
outsb
sub
and
in
push
pop
xor
pop
mov
insb
sbb
out
loopne
push
outsl
fiadds
outsl
mov
jle
imul
cmp
lock
xor
cld
jmp
stc
sbb
mov
push
jo
mov
sbb
xor
mull
mov
aad
inc
and
push
xchg
xchg
jmp
add
mov
popf
and
dec
xchg
adc
pop
inc
repz
cmpsl
jmp
popa
outsl
adc
sub
inc
lods
sbb
testb
mov
fisttpll
push
mov
and
in
inc
jmp
push
mov
fldenv
jnp
pop
sub
xchg
push
and
xchg
ret
cmp
jb
push
inc
pusha
movsb
cmc
or
lcall
test
push
mov
fcomi
xor
and
or
jg
pop
push
or
push
mov
mov
xchg
push
jle
repnz
test
push
bound
push
add
push
sbb
insb
xor
dec
cmpsb
cld
clc
roll
or
pusha
mov
cs
popa
push
orb
xor
add
xor
lock
es
and
lock
inc
add
ficoms
jae
xchg
push
xor
pop
out
sarl
cmpsb
xchg
stos
mov
inc
or
pop
pop
push
inc
cmpsb
mov
add
cli
out
in
jg
sbb
dec
test
xor
movsl
sub
rorb
movsb
jle
cli
adc
call
lcall
mov
and
sbb
ret
stc
ret
mov
sahf
jne
scas
jp
stc
fs
mov
aad
sarl
enter
pop
add
in
mov
cmpsl
es
loopne
jb
jp
inc
sahf
je
push
mov
adcl
cmp
imul
fnstsw
dec
divb
pop
push
jg
adcl
ret
outsl
repnz
or
mov
or
mov
xor
insb
lds
mov
sbb
xchg
lret
inc
mov
dec
jo
packssdw
loope
in
test
mov
je
outsl
pop
cli
in
push
push
stos
mov
cmp
jno
mov
adc
xchg
rolb
mov
xor
jp
dec
mov
cmp
out
lcall
dec
dec
pop
mov
add
mov
movsl
lods
mov
sti
adc
push
cli
mov
pusha
xlat
mov
jne
push
mov
mov
adcb
jae
sbb
mov
rcrb
jnp
cmc
xor
add
test
rorb
jge
or
mov
in
dec
push
push
arpl
sub
xchg
fxch
pop
add
jb
adc
js
lahf
sbbb
pop
rcl
add
gs
lcall
into
bound
repnz
push
lret
lods
jne
popa
pop
xchg
lock
out
jge
sbb
xchg
stos
mov
jl
jmp
cmp
cmc
andl
sbb
mov
sbb
lods
fsubs
push
pop
pop
cwtl
or
pushf
or
cld
pop
punpcklwd
pop
xchg
stc
and
inc
scas
test
pop
jnp
or
mov
inc
inc
xor
mov
mov
xchg
mull
scas
pushf
push
fcmovb
jae
and
adc
testb
pushf
scas
dec
fsubl
add
xor
mov
xchg
adc
sub
add
jno
jbe
sub
dec
mov
and
test
rolb
aad
lods
push
push
fnsave
xchg
push
imul
push
cmp
mov
test
loope
mov
adcb
push
pop
xor
sbb
xor
add
pop
pop
mov
mov
scas
movl
js
mov
in
dec
xchg
in
das
fcmovu
add
fwait
xchg
js
in
xchg
in
dec
jle
adc
sahf
or
ret
pop
pusha
add
xlat
cltd
in
int3
cmpsb
lret
sub
or
push
xchg
bound
push
ja
cmp
xchg
mov
pop
imul
inc
xor
ret
push
ja
fwait
pop
divb
lock
pop
cmpsb
inc
lods
push
or
clc
stos
sub
inc
xchg
aad
je
pop
test
jg
pushf
lods
jnp
insl
xchg
test
ret
ja
or
lahf
adc
xchg
jns
fdivrl
daa
jae
xchg
cmp
jmp
jmp
dec
sub
testb
sub
jb
enter
add
hlt
xorl
or
out
pushf
shll
data16
arpl
pop
pop
push
repnz
jne
mov
mov
ja
push
repz
pop
aaa
mov
xor
pop
mov
stos
aad
sti
cmc
std
pop
leave
sbb
or
cwtl
sub
movsb
sbb
test
add
jne
cmpsl
inc
push
dec
inc
lods
inc
insl
dec
loopne
mov
mov
pop
mov
mov
pop
sub
sarb
int
popa
movsl
adc
mov
mov
push
push
out
mov
mov
aas
pop
fcmovb
adc
imul
jmp
xchg
sahf
inc
dec
fdivrl
cli
test
movsl
or
bound
in
negl
popa
outsl
adc
push
dec
add
les
push
dec
sbb
jl
cmpb
cmc
in
rorl
mov
mov
mov
lret
sbb
lahf
outsb
cmp
pushf
cmpl
daa
inc
cmp
push
pop
jl
mov
xor
add
sbb
push
loopne
in
addb
clc
cmc
xchg
cmp
dec
add
out
popa
mov
add
jmp
pop
push
pop
mov
cmpl
sti
cs
mov
mov
imul
jmp
fcomi
mov
imul
enter
inc
or
imul
das
xor
test
cmpsl
cmpsb
lods
and
imul
sbb
loope
iret
sub
jl
pop
push
pop
lods
push
sbb
subb
popa
and
jp
jae
int
out
rcr
test
pusha
cmc
out
or
int3
jne
inc
sahf
addr16
test
xchg
jbe
adc
lods
push
test
mov
insl
cmpsb
rorb
push
je
aas
mov
pop
cmp
in
add
push
pop
pop
or
cs
stos
incb
arpl
popa
repnz
loopne
nop
js
repnz
inc
test
popf
jp
hlt
cmc
pop
mov
xor
icebp
psubsw
pop
mov
xor
mov
add
mov
cld
cmc
pop
inc
inc
jnp
xchg
les
ljmp
add
fisubrl
in
jl
jo
mov
jmp
ss
dec
push
divb
in
or
mov
jg
verr
fcompl
xchg
out
xchg
push
ret
and
lret
inc
pop
inc
stos
and
push
adc
lahf
sti
lret
adc
aaa
ss
andnps
mov
imul
inc
movzwl
mov
jb
mov
fwait
cmp
pop
hlt
cwtl
fstpl
in
rolb
push
mov
push
sahf
mov
test
arpl
mov
test
mov
outsb
adc
nop
fwait
outsl
pop
add
sbb
in
cmp
aas
daa
dec
pusha
test
imul
add
xchg
cmp
loope
in
mull
dec
and
sbb
inc
call
shl
push
cwtl
pop
mov
mov
fnstcw
cld
test
inc
adc
adc
out
adc
mov
movsb
fstl
fnstenv
adc
jge
cmp
jbe
cmp
shl
xchg
ja
or
mov
leave
xchg
outsl
sub
add
shlb
insl
ss
mov
hlt
push
jns
test
aas
jge
xchg
lea
jae
mov
clc
mov
ljmp
sbb
out
test
gs
cmc
and
jns
pop
outsl
imul
cmp
arpl
mov
and
cmp
mov
jns
dec
xchg
decl
int
xchg
cmp
fnstenv
out
add
imul
and
movsb
lods
enter
or
ja
mov
mov
jle
sbb
xor
and
clc
shlb
imul
pop
je
scas
fisttpll
jg
xchg
and
popa
mov
fdivrs
mov
or
pop
lcall
cs
xchg
adc
ficompl
jnp
and
loop
add
sarl
mov
pop
cmp
pop
idivb
test
adc
fistl
js
sub
or
add
cmp
inc
jns
nop
jns
xchg
mov
add
mov
xchg
jp
in
xor
xchg
lods
or
push
xorl
dec
mov
xchg
sub
lods
adc
shlb
and
or
push
and
jno
stc
pop
mov
in
mov
pop
stc
sub
xchg
dec
shrb
fwait
iret
clc
lds
cmpsl
dec
cmpsb
movl
jnp
pop
or
push
mov
divb
adc
mov
sub
in
aad
xchg
test
mov
jle
lock
jecxz
sub
mov
lret
aaa
or
xorl
sub
aam
jnp
fsts
add
arpl
ja
iret
mov
pop
cld
mov
mov
loop
mov
aaa
nop
xor
ds
push
cmc
pop
adc
lret
add
and
pop
jns
stos
jl
cli
out
dec
dec
arpl
pop
cmp
cmp
mov
jno
cmp
adc
mov
je
cmpsb
hlt
or
pop
jp
popf
dec
popf
sbb
divl
icebp
jne
imul
subl
sbb
xor
cmpsl
scas
push
sarb
clc
vrcpps
add
cmp
lret
jae
mov
out
cwtl
lds
subl
xchg
scas
add
jne
bound
sub
jo
stos
mov
cli
clc
mov
fs
mov
jg
into
rcl
dec
and
ret
mov
fcmovbe
cld
ds
mov
and
ffree
xchg
fiaddl
test
cli
fiadds
xchg
fs
xchg
mov
imul
outsl
pop
mov
xchg
sti
mov
jecxz
adc
and
and
das
jae
imul
and
mov
cmp
xchg
out
inc
in
cmpsl
cmp
ss
mov
jnp
ret
int3
pop
fsubrl
jge
dec
in
jbe
pop
insb
mov
fcom
push
or
aas
cltd
add
adc
jae
adc
pop
subl
sbb
cmc
out
or
sti
adc
or
shld
adc
sub
repz
and
in
push
or
les
jnp
push
mov
mov
leave
ds
jl
lret
fistps
mov
and
push
lret
fisttpll
jb
push
cli
fs
xchg
cltd
inc
stos
popa
or
push
adc
shll
xchg
mov
stos
dec
pop
add
enter
mov
sub
sub
out
jnp
ret
int3
pop
and
mov
dec
mov
stc
and
jne
icebp
push
add
fdivrl
add
sbb
outsl
push
lgs
in
cmp
int
in
push
inc
sti
mov
push
xor
mov
sbb
pusha
mov
call
mov
pusha
cmp
xchg
js
mov
aas
adc
sti
pop
or
fcoms
shlb
inc
int3
repz
jmp
add
mov
jl
dec
cmp
xchg
lods
jo
jg
sbb
loope
cltd
adc
ret
pop
test
cli
or
ds
cld
icebp
cmp
mov
push
lods
notl
daa
shrb
inc
mov
jbe
cmp
lds
movsl
dec
ljmpw
push
or
xchg
dec
ljmp
lods
mov
inc
call
lahf
and
dec
xchg
jbe
orl
push
int3
cmp
pop
push
mov
das
std
nop
loop
testl
and
push
int3
addl
insl
add
nop
lcall
mov
ficoms
mov
int
int
sub
in
sbbl
ds
in
sti
ds
cmpsl
xor
push
dec
mov
stos
in
outsl
pop
mov
and
mov
jbe
mov
mov
mov
jp
cmc
mov
push
loope
dec
xchg
cmpsl
cmp
inc
or
jb
or
jb
test
fistpl
cmp
adc
push
ror
jecxz
cmp
sub
inc
sbb
xchg
fcomps
shrb
jbe
adc
sub
mov
xor
pop
sub
stc
mov
in
movsl
fs
inc
movsb
xchg
pop
and
mov
jp
dec
sub
addr16
dec
lea
fucomp
out
pop
int3
enter
popf
inc
scas
inc
inc
mov
test
adc
rorl
mov
add
stos
and
add
sahf
xor
add
push
loope
push
clc
dec
and
stc
cld
jg
adc
mulb
or
leave
adc
lret
sub
xor
push
add
pop
mov
xor
inc
stc
daa
test
nop
jp
jge
out
inc
rorl
push
je
or
sbb
add
cmp
xchg
jmp
and
cmc
mov
mov
lock
mov
out
fdivl
mov
lea
and
nop
mov
mov
xor
pop
out
xor
and
pop
in
in
divb
xor
jl
pop
ret
les
push
add
jmp
xchg
pusha
in
push
decl
sbb
sub
scas
adc
jno
adc
repnz
sub
outsl
ds
jno
inc
outsl
aad
mov
shlb
pusha
pop
ffreep
or
inc
pushw
mov
inc
fmull
pop
sbbb
mov
push
int3
ljmp
fimull
loopne
xchg
lods
out
mov
xchg
shrl
dec
ficoml
rcl
mov
cmpsb
out
pop
jo
and
icebp
sbb
xor
lcall
push
cli
mov
xor
cs
rcrb
mov
in
imul
shrb
je
jns
xor
cmp
inc
adc
sti
or
js
sahf
dec
pushf
mov
sub
std
sbb
arpl
das
lds
cmpb
adc
push
filds
in
mov
std
cmp
cltd
push
adc
std
or
or
xor
push
mov
inc
dec
and
ja
clc
sub
pop
addr16
sub
mov
and
cmp
pop
pop
add
fs
cmp
pop
push
sbb
cli
popa
and
sbb
call
test
push
push
jle
inc
jge
pop
aas
dec
cmp
dec
fwait
and
inc
pop
push
ret
fdivp
imul
jns
sahf
cmc
pop
push
fwait
dec
sbbl
jecxz
lcall
and
pop
ja
add
adc
and
push
cmpsl
sub
cmp
aad
shrl
xchg
clc
cld
and
or
test
arpl
jbe
sub
je
inc
dec
mov
fs
insl
cmpb
push
das
pop
daa
ret
jecxz
aas
xchg
imul
lods
jle
inc
jbe
dec
push
sti
cmpl
xor
mov
xchg
cmpsl
pop
rorb
pop
dec
xchg
imul
inc
stos
mov
cs
mov
imul
xchg
in
push
enter
in
mov
jb
arpl
sub
xor
or
stos
jo
pop
jae
hlt
sbb
push
in
jge
aam
dec
mov
pop
sahf
icebp
adc
out
daa
mov
popa
inc
mov
jg
dec
lods
jb
in
es
or
and
pop
loopne
fs
cmpb
sub
pop
fwait
jb
and
into
jb
sbb
mov
insl
jecxz
pop
icebp
push
or
sysret
fbld
negl
mov
pop
xchg
repnz
lods
adc
sbb
push
incb
xchg
gs
push
mov
pop
js
ret
inc
dec
jg
inc
sti
and
adc
out
jge
arpl
adc
dec
or
test
dec
imul
movsb
movsb
les
enter
in
lods
shrl
scas
fistps
push
pusha
mov
enter
push
cld
mov
ret
inc
mov
mov
subl
inc
mov
dec
push
jo
and
hlt
mov
or
scas
stos
xor
ss
mov
jecxz
out
jb
sbb
dec
push
cmp
add
or
mov
outsb
cld
pop
push
dec
dec
mov
rcl
out
jmp
xorl
jl
out
mov
sub
popf
xchg
jbe
dec
xchg
cld
inc
out
inc
data16
push
or
xchg
lret
testb
mov
ja
lock
sbb
dec
outsl
flds
mov
add
jmp
push
xor
test
and
dec
mov
xchg
dec
lcall
mov
mov
and
jnp
sub
pop
sbb
cmp
xor
movsl
add
xchg
push
clc
arpl
push
movsl
pop
or
es
inc
in
test
ss
fmul
push
add
push
or
xor
daa
and
scas
or
icebp
icebp
xor
xchg
lahf
mov
jl
xor
sbb
lods
push
popa
xchg
es
add
cmp
push
mov
mov
lods
mov
sbb
fmuls
mov
push
aam
mov
and
adc
stos
or
adc
push
jmp
lock
shl
jbe
stos
inc
sbb
and
dec
rorb
fmul
dec
xchg
sbb
push
lret
mov
rorl
mov
test
mov
fs
mov
jo
fs
pop
test
adc
and
sub
dec
fcoms
cmp
push
int
shrb
inc
ss
fs
mov
cmp
mov
in
cmc
and
jbe
add
negl
push
daa
mov
xor
add
dec
push
jbe
movl
sub
cmpsb
and
mov
inc
push
outsl
popa
lea
jae
jne
cmpsb
repnz
jge
scas
scas
scas
mov
push
sbb
xor
neg
pop
rorb
ret
icebp
adc
sbb
mov
aas
pop
popf
push
adcb
les
mov
adc
into
outsb
jbe
push
xlat
dec
bound
add
es
adc
adc
pop
sti
cmp
jns
xchg
sbb
xchg
orl
fistl
inc
mov
lcall
push
paddsw
addb
push
dec
gs
cmpb
in
adc
sub
enter
adcb
mov
cli
dec
sub
mov
sbb
shl
dec
sub
jle
pushf
push
and
dec
sub
mov
jnp
es
imul
or
mov
lds
fsubr
inc
mov
fstpt
mov
mov
mov
loope
test
inc
lds
push
adc
mov
jne
or
aam
shl
or
mov
mov
aas
mov
cli
aaa
sub
add
out
adcl
jb
scas
mov
push
mov
add
leave
jmp
mov
xor
insb
inc
cmpsb
fsubrl
in
mov
movsb
sub
xchg
stos
add
jp
sbb
and
stc
jbe
add
cld
cltd
xchg
jne
dec
or
ret
inc
cmp
inc
lahf
test
mov
push
das
xchg
push
mov
add
xor
or
jo
and
cmpl
nop
sub
roll
cs
ljmp
xor
lds
clc
leave
fnstsw
lods
mov
enter
or
dec
mov
es
lahf
arpl
dec
iret
pop
in
push
inc
sbb
nop
daa
aas
or
ror
aaa
cmpsl
sbb
and
adc
ret
frstor
lods
mov
sbb
dec
shlb
nop
add
mov
movsl
jge
xlat
std
add
dec
fdivrs
inc
clc
imul
enter
cmp
jp
push
xor
repnz
jmp
or
adc
and
frstor
adc
push
xor
pop
inc
popf
adc
pop
pushf
sarb
fs
add
mov
mov
testl
push
std
roll
jo
jg
pop
sub
mov
jb
inc
add
or
pop
dec
push
or
dec
mov
push
lcall
sbb
int
mov
dec
cmp
insb
and
jno
or
mov
mov
mov
mov
push
int
int3
mov
cs
xchg
push
xor
dec
and
mov
mov
adc
and
jno
xchg
les
and
loop
test
cltd
cmp
mov
push
fisttps
nop
sub
cmp
lods
enter
shlb
iret
sbbb
scas
out
xor
xchg
mov
aam
lret
iret
jmp
sub
pop
ficomps
retw
scas
xor
or
and
shl
cmp
and
divb
fwait
movsb
or
cs
sbb
dec
ljmp
sub
rclb
mov
adcb
mov
bound
push
mov
int
aas
mov
dec
cmp
gs
and
add
das
xchg
stc
mov
test
and
jns
lahf
cmp
loope
xchg
rorb
and
dec
push
adc
xor
movsb
daa
pop
ds
jmp
sbb
in
mov
repnz
xchg
sbb
and
ja
insl
pusha
mov
cmp
sub
scas
ss
sbb
dec
dec
add
fcoms
adc
push
dec
rcl
mov
sarl
add
jae
shll
mov
push
inc
imul
loopne
mov
movsl
rorl
flds
inc
shrl
add
cmp
sub
lock
cld
xchg
cs
idivb
js
pop
jge
jp
dec
add
fsubrs
enter
lea
jnp
cld
adc
jno
push
add
push
fwait
sub
cwtl
scas
pop
in
pop
testb
and
in
cmp
test
popf
ja
xor
cli
or
add
and
ds
outsb
test
dec
cmp
sub
jg
dec
inc
incl
xor
popf
push
sarb
fdivl
mov
xlat
or
test
daa
pop
mov
cmp
das
outsl
das
popf
jmp
enter
aad
ljmp
and
cmp
and
mov
xchg
xchg
fs
pop
cmp
or
out
jne
jo
or
push
stos
and
das
sub
stc
lods
cmp
stos
pop
outsb
loop
cmpb
mov
push
cmp
cmpsb
lea
cmpsl
dec
shlb
in
outsb
or
mov
mov
ret
cmp
in
jecxz
adc
xor
outsb
test
test
cmpsb
neg
dec
xchg
scas
jb
mov
mov
add
movsb
out
fisubl
call
xchg
xchg
enter
dec
and
cmp
fnstcw
fimuls
das
pop
mov
das
fidivs
inc
sti
jb
out
cmp
leave
or
fdivp
jmp
cmpb
pusha
mov
ret
add
rcll
dec
lods
movsl
insb
add
adc
cli
insb
loop
mov
nop
mov
fnstsw
sub
aas
sbb
test
incb
bound
mov
or
mov
insb
and
and
ds
push
es
in
addr16
movsb
and
cmp
and
and
add
stos
pop
or
fwait
icebp
movsl
jge
data16
mov
jl
dec
jmp
ds
jne
out
jo
xlat
adc
xchg
cbtw
mov
mov
sbb
xchg
clc
mov
mov
sbb
idiv
adc
or
xchg
mov
shll
sub
jge
stc
jae
jle
mov
jecxz
push
outsl
in
push
ja
mov
in
inc
mov
jmp
cli
or
push
testl
mov
pop
in
and
ds
pop
push
addr16
xchg
les
fwait
aam
mov
gs
mov
jg
imul
pop
jge
aam
lcall
mov
mov
loopne
mov
mov
lods
add
popf
test
insb
cmpsl
ficoms
sbb
xchg
pop
ret
sbb
add
mov
sbb
jbe
or
push
lcall
fisubl
outsb
ret
mov
ljmp
inc
mov
int3
stos
lret
pop
loope
cmp
mov
xchg
lea
push
imul
xor
jbe
inc
mov
adc
and
fidivrs
fcmovnbe
jmp
or
cmpsb
les
les
and
sbb
xchg
lahf
dec
cwtl
and
pop
jbe
cwtl
cltd
cmp
vmovlps
jbe
in
lods
jg
outsl
push
xor
jmp
and
cs
cmc
pusha
lret
je
ret
mov
sar
lea
xchg
cmp
cmp
dec
mov
pop
or
fstpt
or
lock
jo
cmp
mov
call
dec
jnp
ror
sub
push
xchg
xchg
or
in
push
mov
cmpsl
mov
jo
pop
inc
out
adc
jbe
mov
cli
push
mov
das
int
mov
xor
imul
lock
cmc
xchg
pop
imul
mov
out
add
fdiv
ror
stc
sbb
dec
xor
inc
lahf
sub
push
arpl
push
jecxz
test
jbe
notb
shll
test
add
daa
test
pusha
mov
pop
outsb
popa
sbb
push
out
adc
ljmp
cld
adc
mov
popf
iret
in
in
pop
stos
inc
std
pop
pop
fnstcw
or
sub
loop
push
dec
jge
cld
mov
out
cmpsb
ret
pop
fs
fs
fwait
popf
push
lods
fwait
jns
pop
mov
cmc
jo
mov
or
ja
or
xchg
or
stos
rclb
dec
dec
add
lods
clc
mov
icebp
in
pop
aad
in
jle
xchg
imul
pop
jb
xor
cmp
cld
mov
mov
fsubrs
std
inc
jns
push
fistpll
cmp
mov
rcr
in
xor
dec
mov
cmp
ret
xchg
jge
push
adc
dec
dec
loope,pn
add
or
or
dec
das
fnstenv
mov
jl
inc
fsubrs
ljmp
ljmp
je
xchg
xlat
adc
jno
arpl
mov
push
jp
mov
gs
jbe
dec
sub
mov
fisttps
and
repnz
loope
dec
ret
cmp
js
mov
pop
mov
mov
adcb
fstp
cli
je
cmp
iret
jno
adc
out
pop
jp
movb
into
sbb
les
arpl
rolb
mov
sti
in
call
movsl
loop
js
sbb
ret
sbb
mov
sbb
jg
xchg
ljmp
mov
in
aam
test
cmpsl
inc
jnp
inc
fs
jle
mov
add
fs
cmp
push
sbbb
jb
mov
add
or
and
dec
push
mov
lds
aaa
inc
mov
mov
testl
pop
xchg
pusha
cmp
mov
cmp
divl
into
xchg
sub
lahf
dec
icebp
sbb
jo
fwait
sbb
bound
ds
aaa
jbe
fldcw
mov
push
test
loopne
or
pop
fmul
or
stos
push
das
mov
mov
jg
outsl
push
test
cmpsl
xchg
add
aad
popf
pushf
push
push
pop
xor
xchg
xlat
push
adc
pop
fisttpl
mov
rol
inc
fisttpl
xor
js
out
push
daa
call
or
lock
hlt
pusha
and
popa
and
das
mov
sub
ljmp
aas
popf
xor
arpl
mov
repnz
cmp
ret
into
into
out
jmp
xor
mov
fistpll
cli
fbld
pop
int
rcl
adc
orb
sbbl
mov
xlat
jne
scas
xchg
sbb
lahf
pop
cld
cs
add
mov
aas
and
jp
sbb
or
sbb
adc
lods
xor
cli
aas
mov
sbb
sti
std
push
adc
dec
cmp
jge
jno
sbb
xor
out
mov
inc
cmp
sbbl
fdivrl
nop
int
dec
push
sarl
pushl
mov
cld
pusha
lret
xor
xchg
jmp
cmp
test
stos
es
xchg
sub
ds
xchg
dec
aas
add
adc
testl
es
pop
jg
sbb
pop
mov
mov
es
popf
add
sub
andl
ds
mov
test
in
jle
jns
mov
scas
sub
xchg
mov
add
sarb
dec
sahf
mov
pop
popa
rolb
dec
dec
cmp
jnp
cmove
sahf
roll
jnp
adc
sbb
mov
xchg
add
lods
lods
mov
push
adc
adc
jb
lret
sbb
sbb
das
cs
push
cmpsb
ret
out
jecxz
cmp
mov
xchg
sbb
jge
test
sub
fsub
icebp
cmp
fldenv
idivl
cmp
or
and
sub
cmpl
stos
mov
sub
je
stos
sbb
js
xchg
mov
mov
stos
in
mov
mov
jae
cs
push
add
sbb
loop
xchg
aaa
lock
push
adc
ja
andl
call
test
into
rcll
mov
cmp
mov
jo
push
xor
adc
push
mov
leave
jp
jae
imul
jmp
leave
fldl
xor
cwtd
int
lahf
adc
ret
mov
pop
pop
les
adc
mov
pop
adcl
dec
jl
cmp
addb
rcl
cmp
sbb
nop
shlb
sub
jle,pt
sbb
imul
mov
pop
and
add
jmp
xchg
dec
cmp
add
int3
dec
movsl
lret
js
rol
jecxz
mov
sbbb
fsub
insl
jecxz
pop
pop
bound
mov
or
outsl
xor
int3
fbld
xchg
imulb
test
repnz
xchg
inc
push
jle
dec
mov
xor
fidivs
lea
xor
in
inc
popa
mov
inc
movsl
xchg
js
push
and
jl
loopne
lahf
dec
inc
out
push
mov
into
mov
mov
sub
ret
mov
dec
pop
in
sahf
loope
test
aad
fidivs
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
dec
mov
pop
pop
sub
push
mov
jnp
in
mov
pop
sub
push
enter
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
ror
push
mov
fwait
inc
jmp
cmp
sbb
rclb
das
xor
mov
cltd
mov
lds
dec
call
xchg
mov
inc
cmpsl
xor
or
mov
pop
sub
push
mov
sbb
ret
mov
mov
movsl
leave
and
add
xlat
aam
push
inc
xor
orb
shr
ja
push
adc
push
repnz
xchg
mov
pop
jo
mov
sbb
test
test
and
popf
fcomps
xchg
push
jo
pop
andb
out
dec
ljmp
fimull
nop
cmpsb
in
sbb
enter
test
pop
pop
sub
jecxz
test
in
mov
pop
enter
sub
repnz
popa
mov
pop
xchg
into
push
mov
test
hlt
test
mov
dec
sub
push
mov
test
in
mov
pop
sub
push
mov
cmp
pop
pop
sub
test
in
fistpll
push
mov
cmp
pop
pop
cmp
push
cwtl
daa
test
in
mov
pop
sub
push
mov
xchg
clc
in
mov
pop
sub
push
mov
mov
mov
pop
fadd
push
outsb
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
lret
popa
ljmp
push
adc
sub
push
mov
aam
cmpsb
daa
pop
pop
sub
push
mov
test
add
cmp
enter
test
in
test
push
push
and
pop
pop
sub
push
mov
movsb
clc
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
push
mov
test
in
mov
pop
sub
cmp
sub
xlat
in
lahf
mov
jno
adc
bound
xchg
stc
mov
cltd
fdivrl
ljmp
cmpsb
jg
movq
fnsave
push
xlat
sub
in
cmp
push
jo
imul
in
adc
pop
jns
test
repnz
ljmp
sbb
mov
or
xor
leave
repnz
push
mov
xchg
ds
jae
sbb
cwtl
aas
sub
pop
mov
lahf
mov
xchg
mov
int
add
pushf
dec
jecxz
lds
shrb
dec
movsb
xchg
outsb
inc
lahf
cmp
inc
shlb
sbb
jle
push
out
or
sbb
dec
cli
xor
or
jle
mov
inc
adc
enter
mov
xchg
adc
ss
push
add
insl
mov
lods
pop
into
adc
xchg
push
mov
scas
movsb
cmpl
jle
or
js
sbb
out
lcall
pop
dec
push
inc
fwait
lret
push
jl
pop
mov
add
cmp
xchg
je
fisubrs
mov
std
ret
or
mov
and
jmp
sub
adc
sbb
pop
stos
test
sbbl
faddl
into
out
add
outsl
shrl
shl
in
cmp
leave
mov
arpl
jne
push
or
add
dec
and
mov
xchg
shl
push
pop
mov
orl
sub
dec
push
repz
movsb
inc
imul
cwtl
xchg
scas
sbb
lods
xchg
xor
in
push
jne
cld
or
jae
cmp
leave
mov
inc
std
aad
test
insl
cmp
add
cmp
sub
js
inc
pusha
sub
mov
fldt
dec
push
popf
push
stc
or
out
in
cltd
mov
mov
adc
mov
sub
sbb
mov
cmpsl
mov
jmp
cltd
jno
ret
sbb
dec
cmp
test
pop
push
push
arpl
push
pop
mov
or
loope
fcoms
dec
push
insl
xor
or
add
dec
or
daa
cld
outsb
xchg
cltd
jmp
adc
out
pushf
test
xor
mov
arpl
push
lock
add
or
ss
xlat
mov
mov
sub
xor
andl
clc
out
jl
and
sbb
shlb
test
testb
dec
jecxz
dec
fildll
cmpsl
imul
daa
and
test
push
mov
mov
inc
xchg
lea
fnstenv
insb
adc
jge
lods
inc
sub
and
jb
push
popf
repz
jns
adc
xchg
sahf
jb
add
push
int3
addr16
test
into
aad
jnp
xor
xor
dec
push
push
cli
enter
pop
jae
lods
xchg
in
int3
jbe,pt
jns
inc
pushf
cli
sub
jl
or
pushf
sbb
mov
pop
ds
sub
cmp
loopne
sahf
iret
in
insl
faddl
in
gs
sbb
or
xor
mov
pop
stos
xchg
or
xchg
lcall
sti
data16
out
pop
pop
fsubp
xchg
shlb
pop
hlt
xchg
mov
in
pushf
xlat
mov
or
popf
jecxz
mov
xor
lods
jg
inc
and
test
sbb
jecxz
jp
leave
and
adc
xchg
addr16
movsl
inc
cmp
cmp
pop
cmpsl
and
mov
sarl
adc
inc
aas
shll
jmp
cmpb
or
or
cli
icebp
imul
sbb
out
xor
roll
in
dec
or
xchg
adc
xor
stos
shrl
mov
pop
lret
and
adc
lahf
ds
pop
out
imul
adc
rorb
test
shll
jae
mov
push
xchg
sbb
stos
pop
fisttpl
in
cmp
scas
inc
fwait
ss
xchg
es
pop
lods
mov
outsb
sub
das
push
ret
xlat
ljmp
pop
cmp
inc
imul
jge
daa
and
test
ds
inc
movl
pop
push
shr
cmp
and
cmp
add
sbb
fmull
mov
sbb
out
pop
dec
ds
sub
mov
xchg
pusha
leave
out
mov
dec
push
aad
mov
int3
inc
xchg
lds
mov
lods
inc
or
dec
lods
mov
icebp
mov
lods
jns
mov
out
fcompl
je
int3
mov
push
jmp
adc
mov
fidivrl
xchg
push
push
fbstp
cmp
or
mov
xor
aam
xor
out
dec
cmp
add
and
lcall
mov
xor
ret
cmp
fmulp
cmp
shll
add
notb
aas
stc
or
es
or
loopne
aam
inc
mov
jecxz
add
lret
in
fldt
push
clc
cmp
and
andb
jg
add
mov
and
jmp
js
mov
sbbb
stc
mov
cmp
jle
jecxz
or
inc
pop
push
pop
pop
je
pushf
sub
in
out
icebp
jnp
mov
adc
inc
cmp
lds
xor
bnd
inc
jbe
add
cltd
cmpsb
fists
and
fs
mov
in
movsb
jp
mov
xchg
and
bound
rcrl
es
jmp
cld
call
mov
rorb
lods
push
lock
push
nop
pop
mov
jge
pushf
add
xchg
mov
test
cmovle
mov
push
push
cmc
add
hlt
lods
enter
xchg
sub
rcll
fyl2xp1
mov
outsl
cmp
inc
scas
cmp
adc
jb
jbe,pn
ficoml
mov
rorl
mov
dec
ror
cmp
call
push
pop
lretw
jle
fcoml
cmp
sub
sti
add
cs
int3
xchg
sbb
loope
neg
aas
sbb
fldcw
loopne
fs
lret
lret
cmp
cli
sub
xchg
inc
nop
int
fcomi
test
push
lahf
mov
ljmp
lds
cmp
in
mov
or
or
xchg
pop
shrb
enter
sub
mov
xor
std
inc
aad
popa
lods
push
sti
jl
pusha
pop
int
les
aad
test
jnp
add
dec
adc
push
popf
lock
inc
std
lods
out
mov
inc
fs
loop
sbb
cmp
adc
add
mov
aam
mov
inc
add
sbb
add
les
fdivrl
and
pushf
outsb
aaa
fsubrl
and
xchg
mov
adc
or
push
sub
js
mov
fisubrl
iret
add
mov
inc
xchg
out
push
push
sbb
sbb
pushf
mov
aaa
fnstenv
add
sub
and
mov
add
repnz
pop
fstl
mov
dec
in
dec
repz
xchg
inc
cli
clc
adc
mov
xchg
xor
mov
fldt
jnp
jo
popa
sub
repnz
bound
dec
aad
cmp
jp
aam
sahf
idivl
push
shrl
fmull
add
cwtl
inc
clc
int3
add
jge
push
push
jb
loop
mov
mov
dec
leave
mov
xchg
shrb
addl
out
jb
push
lock
push
xchg
das
pop
popl
mov
xchg
subb
sahf
js
pop
or
repz
fcmovbe
sbb
out
jmp
push
jge
push
das
mov
imul
mov
lea
and
bnd
mov
push
sub
clc
add
mov
fcmovnbe
cmpsb
cmp
sub
sub
mov
inc
pop
mov
cmp
sub
or
aad
into
popf
xchg
xlat
xorl
popl
in
or
push
into
sub
jb
push
movsb
lahf
and
popl
adc
mov
add
js
pop
loopnew
pushf
push
jns
clc
cmpsl
pop
ret
and
stos
xchg
out
imul
outsl
or
out
fnsave
ljmp
xor
or
xor
cld
nop
out
xchg
shlb
clc
addr16
lret
sub
dec
sbb
push
add
mov
aaa
xor
nop
inc
push
iret
rcll
mov
dec
inc
push
pop
xlat
mov
cmp
sbb
aad
push
scas
bound
mov
adc
inc
and
incb
cmpsl
inc
call
les
scas
xor
pop
fiadds
bound
push
cmp
adc
dec
inc
jecxz
jns
adcl
notl
scas
jbe
xor
add
ljmp
fbstp
leave
push
push
jns
adc
cmp
mov
inc
das
fs
pop
inc
push
or
lods
aam
and
cmp
movsl
sbb
ficoms
imul
out
mov
fistpl
mov
add
xchg
test
call
push
xchg
int3
ret
mov
dec
lods
and
add
insb
repnz
cwtl
cli
or
or
cmp
cmp
adc
lahf
adc
insb
js
test
mov
sub
pop
pop
decb
or
jl
out
push
dec
cmpsl
jp
fwait
dec
inc
sub
ret
mov
mov
jns
arpl
pop
sub
and
dec
fs
xchg
cmp
adc
aas
sahf
jne
dec
ja
xchg
in
fcmovu
fisubrs
inc
in
ret
push
jmp
ror
adc
mov
inc
ret
test
addb
cmp
pop
xchg
aas
push
incb
mov
cmp
dec
fwait
psraw
jne
jl
mov
lahf
or
xchg
pushf
mov
xor
mov
pusha
nop
repz
int
mov
jle
or
aam
rol
push
mov
in
mov
shr
xrelease
loope
arpl
mov
sti
mov
cmp
jmp
jne
lods
jb
sti
test
sub
das
mov
jmp
loope
mov
in
pop
jmp
xor
lcall
cmp
cmp
pop
int
pusha
or
or
ss
cmp
xchg
cmp
and
fcompl
dec
push
out
xor
rolb
into
push
inc
rol
xor
mov
test
arpl
inc
sti
jno
pop
lcall
and
cmc
adc
fstpl
inc
jne
jle
push
das
mov
sbbb
cmp
hlt
jo
fs
push
jb
jnp
xlat
jl
cmc
lock
push
aaa
adc
call
lods
cli
shlb
dec
cmp
push
push
jne
nop
dec
in
fimuls
adc
cmp
mov
jns,pt
repnz
sbbl
mov
into
inc
lds
cmpsb
call
or
and
dec
mov
gs
cli
inc
jmp
ret
add
andl
mov
flds
orb
adc
cltd
lret
popf
in
lahf
pop
insl
xor
xor
testb
push
test
and
movsl
mov
mov
clc
pusha
pop
dec
ljmp
leave
jns
out
ficomps
frstor
test
out
xchg
mov
or
xor
incb
or
add
jp
lds
loope
and
pop
xor
das
into
stos
aas
lds
sbb
imul
in
nop
add
rolb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
