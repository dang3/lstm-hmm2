push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
scas
inc
cmp
sbb
mov
daa
push
cmp
aad
push
aaa
sarb
push
xchg
adc
mov
adc
xor
nop
imul
push
mov
sbb
scas
sti
push
mov
stos
cmpb
xchg
jbe
stos
ss
or
dec
sbb
mull
aad
out
dec
xor
insl
loopne
and
jb
shrb
shrb
cmp
rol
push
out
popf
divb
dec
ljmp
xchg
movsl
add
mov
faddp
aad
jecxz
dec
les
mov
int3
jb
scas
add
inc
addl
lcall
adc
xor
pop
push
sar
cwtl
jmp
xchg
dec
mov
nop
pop
cld
outsl
shlb
test
in
pop
dec
ret
rorb
jo
pop
movsl
test
insl
or
andb
es
add
fildl
mov
movsb
test
ljmp
jmp
pop
inc
mov
fldl2e
shr
out
jno
fldl
add
add
inc
cmp
sarb
lahf
sub
add
sahf
mov
lret
lods
je
sub
lock
cmpsb
fstpt
inc
mov
imul
lret
pop
xor
loopne
mov
push
or
lods
xchg
jl
jne
lret
mov
sub
out
outsl
dec
lods
mov
testb
lock
xor
ss
nop
aas
out
cwtl
cwtl
pop
mov
sub
loope
xchg
fldt
sub
add
mov
sahf
insl
cmp
imul
xor
mov
jb
fsts
loop
popf
or
adc
sarl
cli
adc
pop
insl
fildll
inc
in
jle
adc
cmp
out
xor
icebp
cmp
cs
in
int
and
stos
out
imul
sti
andl
test
mov
dec
test
int
pop
dec
jo
xchg
ret
xor
inc
ret
repz
push
arpl
ja
lea
out
iret
cltd
xlat
mov
xchg
and
mov
out
sahf
imul
hlt
xchg
repz
add
mov
add
inc
mov
xor
xor
mov
lods
fsts
sbb
jno
mov
and
insb
sub
repnz
sub
lret
iret
bswap
cmp
cmp
mov
cli
xor
mov
jbe
lcall
inc
fwait
insl
loop
das
xchg
cmp
ss
jnp
cld
jnp
iret
dec
sub
or
faddl
mov
mov
lods
aaa
js
in
push
jbe
pop
enter
adc
push
mov
fldenv
fdivrs
outsl
int3
loop
test
mov
mov
ss
addb
out
fwait
jp
popa
pop
mov
int
iret
cmp
pop
int3
sar
insb
xorb
jmp
mov
push
test
mov
nop
dec
pop
add
rcll
loop
cwtl
inc
jmp
int3
jae
and
fldt
pop
aas
fs
shrb
mov
les
mov
mov
sahf
lret
insl
mov
dec
sti
mov
ljmp
or
mov
push
clc
aam
dec
out
sub
leave
xor
clc
mov
pop
adc
mov
push
mov
fidivrl
inc
std
lret
hlt
push
add
jo
mov
mov
jnp
push
cmpsb
xchg
js
es
repz
enter
dec
fsub
mov
in
inc
add
pop
mov
lret
cmp
and
dec
mov
sbb
xlat
and
pop
sub
fsts
pop
xor
cmpsb
mov
pop
rep
xor
push
add
sub
lret
jo
iret
stos
aas
push
sub
rcll
sbb
or
jae
push
mov
cwtl
clc
aad
insl
cmpsb
hlt
jecxz
pop
ret
cmp
mov
adc
div
loopne
mov
sbb
movb
mov
push
cs
jmp
loop
jnp
into
js
lds
pop
sahf
jns
push
cmp
daa
aas
repz
faddl
mov
push
pop
mov
jno
jbe
imul
hlt
fildll
cltd
pop
add
cld
or
or
inc
bound
fs
ss
fldcw
lds
and
mov
or
enter
call
jns
jge
lahf
jecxz
jmp
inc
repz
mov
icebp
hlt
add
mov
mov
cmp
lea
imul
xchg
push
add
sbb
mov
rcl
mov
ja
sahf
popa
in
pop
imul
fidivrl
xlat
in
scas
add
push
mov
loop
loope
inc
fdivp
mov
cmpsl
push
sahf
imul
pop
shlb
hlt
std
data16
sbb
pop
pop
loopne
ljmp
testb
das
jns
sub
sub
dec
sti
add
pop
add
jle
mov
mov
repz
movsb
fwait
xchg
sub
push
mov
adc
jno
and
in
and
sbb
dec
pop
add
mov
push
repz
call
cmp
pop
mov
int3
xchg
in
mov
js
sub
shlb
stc
fwait
out
dec
sub
sub
mov
rclb
out
mov
sahf
out
jb
cmp
lahf
push
ret
in
mov
out
mov
pop
fwait
outsb
jp
mov
dec
add
jbe
push
jo
clc
loope
push
sbb
mov
xchg
outsl
push
mov
leave
dec
jmp
sub
test
lods
hlt
stc
int
xor
push
inc
scas
jns
ss
int3
idiv
cmp
cmp
out
in
mov
add
add
pop
mov
xchg
sub
leave
fnstsw
ret
ja
scas
jbe
mov
in
xor
pushf
leave
jae
sub
and
aad
cmpsb
pop
mov
jbe
inc
sbb
mov
mov
nop
and
stos
jmp
cmc
lods
xchg
sbb
push
fwait
pushf
shrl
data16
movsb
xchg
jae
add
sbb
push
repnz
int
iret
inc
lea
jbe
inc
dec
iret
push
push
cmp
sbb
mov
mov
mov
sti
inc
scas
insb
dec
mov
nop
xor
jae
fisubrs
mov
jg
mov
into
sub
jb
gs
sti
sbb
into
divl
pop
sbb
inc
adc
mov
ja
pop
insb
push
xchg
popa
stos
test
cmp
pop
jne
enter
sub
stos
or
inc
mov
aaa
xchg
push
outsl
xorl
lds
jo
push
jle
mov
mov
xor
mov
inc
shll
out
ret
bound
and
sarl
jae
xchg
add
test
jmp
imul
and
sbb
out
push
cwtl
lret
mov
jp
inc
repnz
dec
pop
sbb
pusha
and
lret
es
fildll
mov
mov
fdivl
lock
stc
cltd
push
ficompl
leave
sub
fdivl
mov
push
rolb
shlb
xlat
inc
mov
push
scas
pop
mov
fnsave
mov
or
pop
iret
mov
insl
into
jae
in
jnp
andb
and
lods
lahf
and
ss
movsl
andb
sub
stc
out
ret
push
dec
js
inc
out
or
adc
mov
fcomp
cmp
and
inc
jle
sub
pusha
das
mov
negl
adc
sbb
int3
jns
mov
shlb
cld
dec
cmpsb
mov
xchg
fs
or
lahf
dec
sub
pop
push
sub
fimull
inc
aaa
xchg
jnp
xchg
add
adc
pushf
loopne
jne
inc
outsb
cmpsb
out
daa
push
adc
pop
popa
sahf
fcoml
cmp
sbb
dec
test
repz
xchg
cltd
push
std
cld
and
out
ret
aas
add
daa
pusha
stc
xor
fsub
jecxz
dec
push
cmp
and
pop
addr16
cmc
and
xlat
jl
dec
mov
mov
pop
mov
jge
mov
out
sub
stos
or
out
mov
jle
adc
push
cmpsl
test
mov
or
or
mov
lds
cmp
mov
xor
sahf
pop
mov
xchg
movsb
adc
lods
push
in
add
in
add
les
jle
rcrb
imul
jnp
mov
iret
add
sbb
cmp
fcom
sub
mov
sbb
jl
imul
push
repnz
rolb
jnp
scas
or
cmpsb
push
dec
daa
scas
or
cmp
stc
cmp
popf
push
xor
pushf
nop
idivl
shlb
mov
je
push
stos
mov
gs
mov
scas
dec
imul
mov
je
xor
mov
xor
in
sbb
add
dec
or
push
test
mov
xchg
sub
dec
mov
stc
cltd
fstps
lret
push
fs
adc
push
pop
or
or
sarb
ljmp
jmp
repnz
mov
mov
fdivl
sar
das
sub
jo
inc
xchg
fnstenv
push
or
fimull
sub
dec
lock
inc
cmpsl
mov
jne
or
icebp
in
mov
aam
xor
roll
mov
pop
adc
cmp
popa
mov
addr16
aas
lock
dec
sbb
add
cmc
leave
inc
and
push
xorb
enter
aam
pop
imul
shrl
and
push
mov
pop
cmp
sti
xchg
sub
mov
int3
dec
testb
jl
jg
in
jge
fistpl
adc
push
mov
das
inc
sahf
and
gs
out
push
in
stos
dec
mov
imul
lret
mov
dec
push
dec
mov
shll
and
adc
jno
jecxz
aam
std
mov
mov
outsl
in
mov
xchg
jg
sub
movsl
bound
mov
xchg
mov
dec
fcomi
mov
push
mov
mov
sub
aaa
or
stc
inc
cmpsb
bswap
decl
lods
sbb
data16
fnsave
jns
ffree
leave
iret
sbb
dec
ds
scas
and
pop
in
and
and
and
out
mov
adc
or
inc
lret
pop
stos
lret
add
daa
mov
int
es
inc
inc
jge
shrb
or
ret
rcll
jbe
mov
add
sahf
and
add
fisubl
xor
sbb
or
xchg
and
push
sbb
insl
mov
dec
stos
jp,pn
out
icebp
enter
add
pop
and
imul
int3
rep
shlb
les
sti
je
cmp
adc
lods
xor
in
pop
orl
scas
lds
or
fsub
in
mov
in
daa
jecxz
lods
repz
push
lcall
std
or
lods
out
or
xor
dec
adc
ret
push
pop
add
mov
jl
out
mov
dec
lcall
sarl
adcl
in
and
mov
sti
imul
or
mov
arpl
repnz
adc
mov
push
xchg
addr16
test
out
or
subl
rcrb
pop
add
testl
and
cmp
sbb
pop
push
mov
fidivs
and
cwtl
jne
sbb
sub
out
cltd
pop
add
negb
cmpb
jg
stos
int
pop
mov
mov
push
xor
mov
push
iret
inc
ds
fcmove
pop
push
or
and
and
sbbl
push
sub
or
jns
pop
mov
lahf
pushfw
jae
sbb
aaa
mov
add
jbe
insb
pushf
adc
mov
lahf
push
adc
ja,pn
bound
repz
pop
jae
mov
dec
cli
stc
notb
out
dec
ss
leave
sub
pop
push
jl
je
mov
lcall
adc
mov
adc
les
sbb
inc
pop
push
mov
js
popa
mov
add
mov
gs
out
shl
enter
rcll
cltd
cmpsl
inc
add
xor
jge
sbb
repnz
fs
inc
mov
cltd
cmpsb
call
xor
dec
lahf
in
dec
hlt
ljmp
scas
fwait
inc
cmp
mov
sub
das
sbb
scas
xlat
into
into
imul
or
adc
out
pop
lods
sbb
xchg
scas
int3
fwait
add
fbstp
cmpb
imul
cmc
ror
xchg
enter
pop
fsubrs
arpl
inc
xchg
rolb
movsb
js
lods
fistl
lahf
insb
jmp
mov
dec
lods
dec
aas
iret
or
mov
test
push
sub
mov
repnz
xchg
fcoml
out
arpl
jmp
enter
xchg
mov
gs
xor
sbbb
xchg
push
sysret
loopne
push
and
pusha
mov
subb
pop
sbb
rcll
sub
sarl
sbb
test
sbb
or
mov
push
add
enter
jmp
out
pusha
jns
push
lock
mov
test
inc
ds
xor
cmp
xor
add
cwtl
xchg
testb
addr16
iret
mov
fistl
xchg
pop
in
divb
repnz
bound
xchg
push
mov
enter
cmp
lea
in
mov
addl
movsb
int
test
dec
lret
or
adc
xchg
rorb
in
add
fwait
cmp
inc
xlat
lock
stc
fistpll
xchg
and
xchg
sub
sub
ljmp
cmp
lds
sbb
xlat
arpl
pop
cmp
inc
pushf
lahf
or
push
mov
ljmp
dec
mov
testl
popa
fcomp
sub
sub
jbe
gs
jnp
push
leave
sbb
lods
lret
gs
jg
pop
push
fwait
xor
les
pop
sub
in
pusha
add
push
in
loope
dec
dec
fdivs
repnz
int3
jae
add
dec
add
sahf
ljmp
xor
dec
in
push
dec
cs
cld
movsb
popf
sbb
pop
cmc
mov
and
sbb
xor
mov
xchg
icebp
rcrb
cmp
cltd
push
inc
sbb
xor
stos
mov
xor
pop
push
daa
sbb
cld
in
or
out
xchg
push
aaa
enter
test
pop
ja
xchg
cwtl
cmc
mov
or
sbb
mov
mov
sub
jmp
or
outsb
mov
jae
les
adc
test
js
xchg
sub
imul
jg
data16
out
jmp
js
or
shll
rolb
rol
in
jns
ds
xchg
imul
push
cmp
sub
rorl
inc
jns
and
test
mov
adc
push
stos
fisubl
sbb
pop
and
push
test
add
add
sub
mov
pop
jle
mov
sub
cwtl
fistpll
cltd
sub
daa
add
subl
lret
cmp
jl
xor
jbe
xchg
jle
add
mov
fmuls
jne
fcoms
scas
dec
loop
pop
ret
or
or
enter
adc
jno
push
aas
cmp
mov
rcl
pop
xchg
and
dec
dec
lahf
add
cmp
movsl
decl
push
loopne
es
loopne
sbb
push
add
mov
setge
rcrb
xor
jmp
out
insl
neg
sbb
sbb
idivb
mov
flds
loopne
scas
mov
and
arpl
add
mov
mov
sarb
or
jecxz
imul
adc
gs
xchg
dec
add
adc
jbe
popl
xchg
xchg
repnz
pop
xchg
or
mov
scas
fnstenv
cwtl
sbb
sahf
mov
fidivs
out
jg
stos
mov
imul
mov
cmpsb
and
fucompp
pop
add
clc
leave
cmpsl
and
adc
mov
adc
in
cmp
push
jb
adc
xchg
das
imul
push
lret
loopne
pop
jg
movsb
fimuls
mov
mov
movsb
cmpl
pushf
aad
mov
sub
popa
jo
cmova
jno
mov
or
add
jle
insb
aam
lahf
xchg
repz
or
mulb
stos
popa
subb
inc
adcb
and
dec
test
dec
lret
icebp
ficoml
adc
test
fdivl
test
js
inc
xchg
fmuls
jl
cmpsb
inc
sub
hlt
push
mov
pop
js
or
test
pop
fmull
loopne
and
xchg
std
xor
je
lret
dec
in
cmp
clc
aaa
addr16
sub
and
shlb
xchg
jo
aas
ljmp
test
add
sbb
xor
cli
popl
fisttpl
inc
mov
fsubrs
int3
mov
subps
push
loop
add
stos
loopne
pop
mov
clc
dec
rol
adc
push
mov
int3
mov
adc
and
push
pushf
adc
js
jno
shr
push
lret
inc
sbb
xor
not
xchg
add
icebp
cmpsb
mov
jmp
out
push
sbb
lock
adc
sub
pop
in
fcomps
stos
rclb
adc
hlt
shlb
rclb
mov
xchg
add
or
pop
add
dec
jp
scas
data16
loop
lods
add
dec
and
in
loopne
pop
push
adc
sar
sbb
pop
pop
jmp
ret
pop
imul
mov
dec
iret
mov
adc
ja
movsl
mov
xor
jo
and
xor
xchg
mov
jns
mov
pop
push
jp
pop
and
out
out
inc
les
pop
or
jg
push
rol
mov
push
aas
pushf
aad
xor
pop
ja
dec
iret
mov
pop
jmp
xlat
test
sbb
xor
mov
and
sbb
idivb
mov
loop
fidivl
xor
and
dec
in
out
push
pusha
sbb
xchg
shl
sarl
jmp
test
pop
cmpsl
inc
addr16
test
repz
pop
dec
cltd
movsb
leave
or
inc
aad
xor
rolb
adc
sti
xor
sub
in
test
cmp
push
es
mov
xchg
jmp
lahf
or
jno
bound
mov
jp
pusha
cmp
lods
sbb
xor
cmp
pop
and
movsl
push
or
mov
xor
bound
sbb
das
and
xchg
fisubl
mov
mov
push
dec
out
sbb
push
sub
pop
test
mov
lock
cli
mov
outsl
add
test
aad
sbb
mov
adc
repz
xchg
mov
pusha
jae
mov
xchg
add
adcb
ret
ss
mov
adc
imul
cmp
out
mov
imul
dec
sub
icebp
or
inc
movsl
and
sbb
mov
call
std
add
cwtl
in
add
cmpsl
ficompl
push
xchg
lock
inc
mov
inc
jno
pop
sbb
mov
jecxz
push
mov
inc
in
mov
aaa
andb
rclb
outsb
dec
int3
fwait
xchg
imul
repz
mov
push
add
fists
int3
add
jmp
adc
in
test
add
dec
js
out
ret
xchg
enter
mov
rcll
add
jp
jge
outsl
add
xchg
push
pusha
inc
add
arpl
cmp
jnp
fs
cwtl
cld
out
jmp
in
xor
sub
cmpb
cli
xchg
mov
lcall
test
mov
lret
popf
cmpsb
mov
pop
adc
popf
scas
push
out
mov
mov
test
sbb
mov
jbe
fldenv
adc
jno
sti
jnp
cld
scas
pushf
data16
scas
scas
jl
sub
bound
cmpl
lret
outsl
lods
lock
sub
push
subl
decl
aad
and
je
dec
stos
ljmp
and
sub
mov
insl
ja
std
sub
mov
xor
jecxz
data16
scas
add
jae
push
dec
aam
cmp
cmpsl
cld
pushl
mov
pop
mov
cmovne
jbe
stos
jl
add
dec
and
in
xor
scas
lahf
nop
mov
pop
mov
mov
fsubs
push
cmp
fidivs
cltd
mov
mov
add
test
inc
imul
push
inc
js
dec
mov
mov
fadds
repnz
cs
loop
or
rcrl
cwtl
jl
mov
mov
xchg
js
adc
test
fwait
dec
insl
lock
mov
loopne
pmuludq
dec
sbb
fcmovb
jns
insl
mov
or
lret
je
rcll
les
fnstenv
movsl
adc
push
lret
adc
test
mov
aam
arpl
les
cmp
mov
jno
cli
mov
mov
mov
movsl
sub
lods
xchg
dec
mov
or
pop
mov
aas
and
addr16
mov
test
shl
lock
stc
sbb
cwtl
movsl
fmull
fwait
pop
pop
rcll
sbb
add
pop
iret
and
sahf
imul
add
inc
test
pop
mov
aas
sub
jno
repz
je
adc
sbb
fdivl
lcall
mov
sbb
xor
push
sarb
jb
fsts
inc
loopne
sti
adc
pop
add
adc
mov
add
dec
sahf
lock
sahf
icebp
or
in
jmp
xor
subl
ror
inc
popf
fisttpl
and
fistpll
and
lea
jb
sbb
mov
stc
xchg
inc
xchg
push
adc
dec
inc
xor
leave
and
in
shlb
sbb
mov
cmpsb
cmpsl
sbb
adc
out
je
inc
ficoml
test
push
push
fwait
in
adc
and
sub
mov
sbb
bound
pop
daa
dec
xor
mov
mov
sbb
sbb
or
cli
xchg
neg
push
in
xchg
jae
sbb
mov
sub
jp
std
ret
rcrb
int
mov
sbb
dec
mov
mov
daa
push
push
adc
xchg
cltd
loopne
pop
data16
int
movsl
aad
shl
or
jmp
mov
xor
iret
cltd
push
xor
fimull
sbb
push
cmp
adc
jo
fwait
aam
jecxz
cmp
mov
fstp
fcomip
dec
insl
into
pcmpeqb
lods
mov
and
and
jno
pop
cwtl
loopne
aam
outsb
hlt
fsubrs
gs
mov
or
adc
adc
notb
cmc
cwtl
rcl
mov
ja,pt
aam
popa
fisttpl
mov
out
jo
loopne
jns
xchg
push
fimull
mov
fnsave
push
xchg
jae
xor
mov
push
xor
cmpsl
loopne
pop
mov
jl
xor
push
pop
pop
popa
ja
sub
dec
fidivrs
pop
mov
shl
call
pop
jb
mov
push
push
mov
xchg
xchg
les
inc
jbe
int
test
loopne
add
test
loop
lods
pusha
fdivs
test
push
addr16
lahf
imul
and
loope
jo
loope
nop/reserved
ret
lret
lock
pop
and
jo
mov
jno
call
cld
jnp
sub
outsb
pop
scas
imul
icebp
xchg
daa
push
dec
out
dec
cmp
sub
addr16
sbb
jp
fwait
push
scas
lock
mov
enter
inc
ror
mov
in
mov
xchg
mov
mov
inc
inc
jb
inc
xchg
je
mov
dec
ret
scas
xchg
clc
inc
jns
hlt
mov
jl
fdivrl
mov
stos
lea
add
inc
dec
sti
or
sub
mov
lret
out
lods
xor
sbbl
xchg
and
mov
xchg
fsubs
sti
aam
pop
sahf
xlat
das
aam
daa
dec
jge
fmull
in
jecxz
addb
mov
aaa
rcll
cmc
xchg
jbe
fwait
call
cmc
jg
add
int3
lcall
enter
test
fbld
jge
imul
sbb
dec
xor
imul
stos
push
xchg
cs
pop
sbbl
pushf
test
mov
in
xchg
sbb
pop
and
jne
dec
stos
leave
adc
sahf
mov
repz
cmp
adc
leave
in
push
insb
insl
mov
cmpl
jbe
int
iret
lcall
inc
sub
ret
sbb
fcmovnb
mov
enter
jmp
std
int3
clc
adc
xchg
aam
pop
rol
fistps
roll
mov
in
inc
mov
cmpsb
mov
aaa
inc
cmpsl
mull
push
fadds
adc
push
jae
push
mov
push
pop
call
fwait
dec
cmc
lret
jp
mov
jne
int
insl
jg
fmulp
mov
faddl
push
fsubr
out
push
test
mov
call
cmp
pop
adc
sbb
lret
lea
dec
push
jmp
push
aam
hlt
in
push
dec
in
push
adc
jo
and
sub
lods
out
mov
pop
loopne
jle
stos
not
adc
outsb
mov
dec
out
mov
enter
adc
pop
cli
inc
mov
sub
xchg
xlat
mov
cs
mov
and
and
push
cmc
outsb
int
call
and
in
loope
ss
add
out
int
cmp
icebp
pop
mov
popf
mov
mov
adc
mov
pop
int3
outsb
fidivl
jns
sub
sahf
shrl
inc
ljmp
or
out
mov
push
andb
frstor
pushf
cwtl
add
adc
fstpt
mov
mov
movsb
push
lahf
sbb
arpl
or
add
xchg
lods
imul
or
sub
add
ja
xchg
xor
sbbb
mov
adc
mov
pop
out
mov
setns
lahf
xor
arpl
xor
cmp
xor
cmp
fldcw
dec
dec
push
or
bound
inc
add
sub
and
push
addr16
pop
pop
xchg
test
jns
mov
mov
mov
arpl
movsl
out
add
cmp
mov
sahf
mov
lret
jge
pop
mov
xor
dec
test
cmc
das
and
jecxz
jno
lahf
sbb
xchg
push
dec
mov
pop
xchg
sbb
mov
push
cli
jp
inc
jno
ds
cmp
jbe
lea
lock
andb
push
int
sbb
inc
in
pop
ret
movsl
adc
cs
fcompl
fnsave
or
xor
and
repz
push
ljmp
push
jmp
insl
orb
in
or
adc
xchg
mov
add
jge
pusha
sub
leave
subl
mov
pop
loop
xchg
sbb
jnp
or
insb
mov
jmp
and
add
out
adc
adc
dec
pop
inc
arpl
inc
daa
pop
mov
shl
xor
sti
jmp
fsincos
xchg
and
push
fs
icebp
fsubrl
lcall
fnsave
xor
mov
sub
ja
sub
ds
add
inc
xchg
jle
jmp
lock
push
or
jge
shll
push
sub
or
popf
xchg
scas
pusha
mov
insl
imul
arpl
popf
repnz
cmp
aas
sub
sbb
or
sbb
fwait
dec
movsb
fwait
incl
jg
fmuls
pushf
pop
lret
inc
rorl
jl
jg
sub
rorl
xor
aas
aas
pop
jge
arpl
push
and
cmp
inc
pop
mulb
aad
mov
sti
xchg
push
cs
inc
ljmp
adc
leave
ss
cltd
adc
in
fcomi
push
mov
add
mov
enter
fmull
test
aaa
mov
inc
sub
imul
insl
inc
scas
das
mov
jo,pt
pop
mov
push
fisubl
sub
test
pop
mov
rolb
imulb
pop
call
test
movsb
ss
ja
sub
fdivrl
pop
sti
scas
cmpsb
mov
das
mov
and
adc
jge
std
lods
sub
mov
ds
idivl
movsb
pop
pop
jno
push
aam
mov
mov
mov
mov
mov
shr
push
bsr
popa
pop
mov
push
push
mov
aam
xor
pushf
ljmp
pop
loopne
inc
loopne
dec
lods
movsb
leave
sub
and
push
xchg
scas
test
mov
ret
ljmp
std
fwait
inc
sub
inc
push
mov
lods
sahf
arpl
mov
imul
mov
out
repz
fcompl
xor
xchg
test
sbb
andb
or
lret
sub
mov
cmpsl
loope
cmpsl
jmp
std
ret
rcrl
test
js
test
je
push
dec
mov
mov
or
pop
mov
mov
or
or
cmpb
xor
dec
cmc
mov
subb
jbe
mov
inc
xchg
insl
adc
cltd
inc
testb
push
inc
sub
das
cmp
xor
push
loop
popf
and
outsl
rol
or
fnsave
movsb
mov
daa
sbb
mov
jmp
inc
jae
pop
movsb
add
lds
loop
std
dec
mov
ja
popl
and
pushf
inc
cmc
jg
aaa
add
nop
es
cmpb
jecxz
and
pop
ds
insl
push
xchg
cmp
icebp
inc
push
test
jmp
sbb
shlb
js
outsl
lret
lret
in
xchg
xor
repz
movsb
mov
or
pop
daa
sub
iret
fwait
inc
and
movsl
sbb
dec
mov
mov
arpl
iret
push
pop
sbb
push
shl
inc
imull
mov
out
xor
inc
pop
shr
xchg
icebp
lret
cli
or
mov
push
insb
pop
push
push
insl
lock
aam
mov
ljmp
data16
shlb
sbb
inc
and
repnz
loopne
mov
aas
pop
push
adc
icebp
ret
jp
and
mov
lahf
inc
add
daa
dec
push
xchg
and
loope
ja
dec
adcb
icebp
cmp
dec
loopne
loope
sbb
pop
and
push
inc
mov
xchg
addr16
add
stos
cmp
sbb
or
cmp
insb
jmp
bound
inc
repnz
xchg
mov
adc
push
jne
das
sub
ret
and
aam
sub
stc
jg
test
or
or
mov
cmp
xchg
je
mov
dec
lds
sbb
lahf
movsb
jecxz
enter
mov
pop
dec
pop
inc
xor
xor
pop
out
lahf
arpl
or
jl
push
mov
ds
or
stos
int3
push
and
sub
jns
adc
repnz
mov
xchg
ja
cmp
out
test
mov
jae
into
mov
sub
fs
mov
mov
aas
push
pop
add
inc
lds
mov
les
cmpsl
insl
jb
addb
test
test
in
leave
faddl
inc
movsl
pop
inc
popf
adc
ss
imul
and
mov
lahf
cltd
cwtl
in
lcall
imul
cmp
mov
test
int3
jg
add
sub
repnz
sbb
xor
jnp
test
out
add
xchg
rcrl
ds
mov
sub
and
into
aaa
inc
mov
sub
icebp
and
and
inc
lret
add
fcomi
xor
jl
jg
ret
mov
sub
xchg
pop
mov
sub
sti
push
rorb
out
push
sub
cli
and
rcrb
dec
imul
fwait
inc
fwait
jnp
jmp
and
int3
jae
daa
leave
outsl
adc
dec
fadd
in
lea
xchg
adc
lods
inc
ds
movsl
mov
and
jl
push
fsubrs
sub
fisubrl
addb
xor
jle
push
arpl
and
mov
cmpsb
hlt
mov
test
cmp
pop
jno
dec
inc
scas
xchg
int3
scas
push
inc
sbb
cmp
mov
das
adc
mov
pop
sub
enter
mov
inc
jae
cmp
inc
lock
pop
inc
xorb
popl
and
inc
clts
and
dec
pop
stc
adc
leave
push
or
dec
xchg
push
arpl
push
rorl
xchg
jb
adc
das
repz
xchg
roll
dec
dec
cmpsb
dec
mov
fdivrs
scas
and
sti
sub
subb
jmp
out
dec
push
outsb
adc
mov
cmp
xchg
push
xor
imul
xor
shll
push
mov
cmp
es
sbb
ret
out
daa
mov
adc
adc
or
cmp
stos
xchg
repz
sbb
sub
mov
fwait
es
mov
jae
clc
cmp
mov
xor
cli
sbb
out
push
dec
dec
pop
movsl
je
sahf
push
es
lcall
int
add
jns
sbb
fs
or
fisttpll
cmpsl
fnstenv
outsb
xchg
iret
jl
lods
repnz
in
pop
push
in
ja
cs
push
mov
mov
mov
outsl
pop
fsubr
push
insb
pop
stc
test
insb
into
sbb
or
imul
jg
icebp
mov
testl
mov
js
dec
stos
dec
add
dec
mov
xchg
lcall
cmp
sbb
lcall
mov
pop
pop
testl
cmp
lea
test
daa
pop
imul
cmc
or
mov
pause
lahf
mov
clc
pop
lcall
popl
xlat
cmp
xor
movsb
and
xor
es
frndint
push
mov
xor
mov
cmp
lea
or
ljmp
lea
cs
imul
sub
mov
fwait
mov
inc
test
jecxz
test
cmp
pop
cli
xor
notb
inc
inc
in
pop
insl
cmpsl
ror
popa
rorl
push
lock
inc
add
add
push
nop
jmp
sbb
xor
aaa
jnp
nop
pushf
mov
pop
out
idiv
loop
lock
popa
mov
adc
pop
fbstp
mov
jnp
pusha
mov
test
insl
cmpsb
rep
xchg
enter
fcmovb
or
mov
das
hlt
cs
mov
leave
mov
leave
push
pop
shll
jo
lods
jl
jb
jle
jg
negb
cltd
xchg
jae
push
cmp
sbbb
ret
pusha
fists
and
lahf
enter
xor
into
loop
and
leave
sbb
jne
testl
mov
inc
adc
arpl
sub
jmp
fidivl
mov
push
je
insb
dec
jl
mov
leave
imul
clc
push
sub
icebp
or
jae
push
popa
imull
fmuls
test
push
sysenter
sub
push
mov
ss
gs
xor
push
int3
enter
and
pop
scas
mov
call
sbb
fildl
addl
scas
into
inc
push
xor
cmp
fisttpl
xor
mov
xchg
cmp
aam
cmpsl
popf
in
pushf
and
cmpsl
or
std
sub
inc
dec
cli
int
outsb
insb
xor
enter
scas
movb
lock
mov
add
je
leave
push
jmp
jmp
int
xor
lods
push
jle
enter
ljmp
movsb
jecxz
stos
sub
jecxz
stos
sub
iret
hlt
cmpsb
cli
jnp
in
pop
cmp
and
jnp
inc
mov
aam
loop
xchg
stos
shrl
or
adc
mov
scas
pop
push
cwtl
pop
mov
rcl
psubq
jecxz
push
mov
test
nop
sub
out
shl
movsl
shlb
add
ficomps
mov
in
jl
mov
fwait
repnz
and
pop
mov
cmp
sahf
arpl
testl
aaa
movsl
pusha
mov
cs
jns
add
push
or
jo
lcall
mov
loope
add
push
andb
cwtl
in
test
mov
sbb
aas
mov
fidivl
jmp
fsubs
pop
add
pop
mov
jge
stc
popa
or
nop
ret
mov
jns
push
cmpsb
add
mov
js
xor
jge
xchg
sbb
sub
ljmp
inc
es
ja
push
nop
add
cmpsl
mov
and
bswap
leave
push
fidivrs
imul
pop
inc
cmp
movsb
mov
pop
mov
iret
test
pop
scas
stos
movsb
aas
sysexit
jecxz
insl
or
mov
mov
cmp
icebp
xor
dec
mov
push
sub
mov
jmp
xchg
adcb
ljmp
push
lods
testl
push
das
and
cmp
fs
add
xor
cltd
negl
jl
pop
mov
sub
cmp
mov
data16
jo
jmp
jg
jne
xchg
into
lss
ret
mov
and
xor
or
int3
mov
cmp
dec
push
push
xchg
outsl
xor
mov
add
loop
sbb
xor
mov
jle
dec
fwait
xchg
pushf
push
push
inc
add
pop
and
or
push
cmp
mov
inc
in
and
cltd
push
sbb
or
in
lcall
ret
cwtl
pop
in
jecxz
xchg
xchg
loopne
icebp
jno
mov
cmpsl
rorb
push
cmp
sub
jg
jbe
push
xchg
xor
add
xchg
jl
lock
jb
test
cmp
xchg
mov
cs
mov
dec
arpl
out
push
mov
repz
lock
bound
mov
call
popa
push
addl
orl
mov
mov
in
and
cmc
add
pop
fs
mov
adc
adc
lds
inc
push
cmp
xor
push
pop
xor
jp
inc
dec
lret
les
dec
adc
enter
mov
cmp
je
jae
pop
into
test
imul
pop
fcomp
or
add
xlat
cmp
jb
mov
sub
fldenv
sti
and
or
pushf
mov
mov
add
xchg
les
shll
test
aad
daa
jg
andb
or
inc
lret
dec
mov
mov
mov
ds
scas
push
pop
gs
rcll
or
pop
push
ja
popf
pop
jmp
mov
mov
sub
inc
addr16
out
adc
inc
imul
div
pop
iret
mov
jae
sbb
std
xchg
inc
adc
mov
mov
cld
xor
push
icebp
jmp
sub
adc
adc
lret
pop
push
movsl
xor
dec
fs
dec
sbb
xchg
call
neg
dec
push
push
adc
inc
dec
repnz
repnz
fnstenv
dec
cmp
mov
out
and
mov
mov
cwtl
popf
jbe
adc
adc
into
mov
inc
ss
repnz
mov
and
gs
and
bound
lea
add
inc
aaa
push
xchg
loope
das
mov
pop
into
xchg
fwait
stc
xchg
stos
and
push
cmpsb
iret
and
xor
cs
push
loopne
mov
lods
push
out
or
cmp
inc
dec
imul
mov
push
out
xchg
lods
or
inc
out
inc
into
loop
dec
add
sbb
daa
xchg
adc
dec
loop
sti
jl
dec
add
ret
inc
out
jmp
mov
mov
out
cli
adc
mov
fs
and
jns
mov
enter
xor
or
push
cmp
lcall
sub
pop
adc
sbb
pop
dec
rcll
pop
jne
and
repz
in
mov
fs
decl
add
xchg
mov
mov
in
inc
int
jge
dec
fs
push
jecxz
pop
movsb
sbb
cmpsb
sub
shrl
push
outsb
leave
ja
aas
sub
fs
mov
mov
pushf
or
movsl
and
pop
jae
xchg
test
push
lret
inc
xor
sub
fwait
lret
lea
xchg
les
in
jae
cmpsl
rcr
add
out
push
lahf
mov
mov
pop
sub
fnstenv
sub
sub
andl
mov
mov
frstor
cmp
sbb
pop
sub
mov
icebp
mov
cmp
jle
cmc
sbb
and
mov
jns
push
cmp
cwtl
jo
sbb
mov
fadds
add
pop
or
and
or
repnz
int
dec
nop
mov
dec
add
xchg
int3
jge
cs
sahf
mov
test
mov
mov
ficoms
jmp
mov
sbb
pop
in
sub
mov
sub
jmp
fldenv
mov
and
mov
std
testb
mov
daa
adc
mov
pop
xchg
sub
sbb
lcall
pop
in
bound
push
push
cmp
negb
sahf
jnp
cltd
ficoms
or
cmpb
andb
mov
out
mov
mov
cmc
into
adc
aaa
push
jo
push
in
inc
into
sbb
mov
push
cmpsb
lds
cmpsl
dec
adc
in
cmc
adc
aad
nop
cld
mov
xchg
inc
pushf
cli
jg
jbe
sub
pop
lea
aad
fidivrs
lahf
and
xor
xor
sbb
jb
add
xchg
cmpsb
scas
fldcw
out
repnz
mov
sbbb
push
test
or
jo
jl
shr
lea
jmp
push
sti
sahf
or
xor
jle
jge
cmp
adc
loope
lods
mov
cmp
mov
xchg
out
xchg
and
loopne
aam
inc
mov
xor
fwait
jnp
js
add
movsl
in
push
sbb
das
xchg
jno
push
xchg
mov
pop
addr16
das
mov
lds
outsl
stos
jns
fucomip
shrb
jnp
fdivs
loopne
mov
int
and
jl
dec
rcrb
or
xchg
loope
sti
mov
loope
add
es
jg
sarb
shrb
cmp
push
or
or
jno
int
cwtl
jns
sub
les
xor
or
mov
fwait
sahf
in
into
aam
leave
adc
jns
ds
push
cmpsb
sti
pop
dec
jae
adc
inc
mov
jg
mov
add
test
pop
cli
mov
pop
adc
and
je
fwait
test
pandn
arpl
sahf
push
xor
stos
sub
sti
shld
sahf
sub
pop
inc
mov
dec
aam
les
imul
out
scas
adc
mov
sub
pop
ret
lret
pop
inc
xor
mov
mov
ds
in
lcall
dec
orb
jmp
ja
mov
aaa
xchg
sbb
testb
sahf
gs
cmp
loopne
enter
push
lea
out
push
sbbb
vxorps
mov
popf
xchg
jp
in
push
lret
cmp
xchg
nop
mov
pop
mov
adc
xlat
insl
mov
jmp
rcrl
imul
daa
arpl
sbb
adc
mov
xchg
repz
add
add
sbb
inc
adc
add
mov
fsubl
mov
popf
pop
cwtl
inc
js
or
cs
pop
lret
xchg
jg
jmp
movsl
jae
ds
xor
jno
fisttps
or
cmp
or
es
mov
fistps
inc
lea
mov
xor
shll
scas
test
imul
test
xor
mov
push
jecxz
sbb
push
shll
ret
insb
push
bnd
std
adc
adc
fidivs
mov
repz
inc
bound
xchg
push
xlat
mov
icebp
in
inc
jnp
push
in
data16
test
fcomps
idiv
cmp
add
jbe
loop
ficoms
jne
repz
std
or
loope
sarb
aas
push
inc
add
out
movsb
pop
mov
jno
and
stc
in
sub
and
dec
repz
mov
subl
mov
cltd
iret
cld
xor
adc
adc
loope
xchg
insl
pop
adc
insl
pop
imul
ja
clc
add
pop
adc
nop
clc
sti
adcl
std
cmpl
jp
andl
mov
test
sub
xchg
xorb
sub
fldt
sub
aaa
lods
std
dec
lahf
add
xchg
mov
ljmp
xchg
mov
jge
add
add
pop
cltd
aaa
inc
sub
and
int3
mov
inc
jmp
fcomps
je
cmp
aas
mov
mov
filds
xchg
inc
and
mov
push
sbb
pop
stos
xor
xor
xchg
add
mov
cmp
jae
mov
push
mov
xor
jp
int3
xlat
enter
lret
inc
mov
icebp
loopne
or
cmpsb
aaa
add
popf
sub
add
ret
fiaddl
xor
mov
popa
sti
xchg
aam
jno
hlt
es
dec
faddp
in
dec
inc
and
es
aad
in
pop
dec
out
sbb
mulb
sbb
sub
pusha
pusha
adc
sub
or
pop
rcrl
fimull
mov
lahf
js
mov
cmp
int3
enter
sub
fmuls
lahf
pushf
iret
sub
in
out
sbb
sahf
inc
repz
sub
scas
pusha
and
pop
jge
jbe
stos
xchg
insl
repnz
xchg
ss
loope
and
int
dec
iret
pop
test
frstor
mov
out
dec
cwtl
adc
shrl
aam
aam
sbb
les
sbb
or
pushf
ljmp
lret
sbb
jp
mov
or
outsb
or
mov
or
pusha
rorl
int
pop
dec
adc
push
lret
sub
pop
bound
iret
adc
push
test
stc
fs
xor
jmp
inc
fisubrl
xchg
fcmove
std
mov
fidivrl
add
xchg
lock
and
aas
xchg
add
cmovg
out
pop
es
pusha
out
mov
pusha
mov
sahf
sti
in
cmpsb
xchg
pop
cmp
ret
xor
push
adc
fwait
mov
cmp
pop
outsb
xchg
cwtl
sbb
ror
cmpsb
movsb
xor
daa
adc
out
xor
nop
xchg
inc
jnp
sub
call
pusha
into
mov
loopne
insb
fbld
lock
mov
hlt
xchg
shr
xchg
mov
jae
pop
push
xchg
dec
mov
mov
popl
clc
cmp
mov
insl
ret
in
push
ds
fcoms
daa
in
pop
mov
jbe
sti
sub
sbb
mov
sahf
mov
pop
loope
mov
scas
cli
rorb
rol
adc
adc
out
add
mov
push
inc
insb
int3
popf
test
insl
mov
sub
mov
test
mov
jo
fcomip
pop
cltd
inc
imul
sbb
mov
ds
sti
push
insb
mov
and
xchg
rclb
mov
dec
inc
add
pop
stos
loope
int3
inc
cmp
inc
out
sub
aaa
and
test
jle
repnz
stos
adcb
dec
cwtl
jne
dec
inc
jmp
inc
loopne
dec
fs
xchg
sub
jne
repz
outsb
xchg
ljmp
push
cmc
and
add
pop
xchg
lods
rcrl
ljmp
xor
push
leave
jle
lock
jle
movsb
dec
pop
je
testl
sub
jns
jmp
lcall
mov
sbb
leave
mov
jl
subb
inc
dec
add
insl
mov
pop
and
fmul
into
stos
gs
sub
mov
sahf
popa
jle
sbb
mov
enter
inc
xlat
stc
frstor
shr
lahf
jb
adc
mov
jg
mov
xchg
mov
sbb
inc
push
and
fimull
xor
sahf
nop
push
mov
add
jns
int3
jae
loope
lock
mov
pop
xchg
clc
and
out
mov
mov
popa
mov
mov
jl
es
jno
push
mov
add
enter
lret
jae
sarl
jno
fucomi
cmp
out
jbe
fadds
aad
fistl
or
ret
es
lret
ss
imul
movsl
xchg
adc
imul
aad
cmp
ja
xchg
into
js
push
and
or
add
push
or
jge
sarb
inc
jne
fimuls
cmp
xlat
cmp
dec
adc
js
or
mov
adc
xlat
clc
mov
fsubrs
jmp
ret
iret
dec
dec
jb
popa
mov
aad
js
jne
test
in
enter
ficomps
push
jb
add
jb
pop
jno
cltd
push
adc
repz
das
fstpt
jae
cmc
out
lds
mov
add
xchg
push
inc
mov
or
in
aaa
add
push
sti
push
loopne
test
nop
mov
push
sub
mov
pop
push
aas
push
mov
or
daa
jle
xor
inc
sbb
mov
popl
mov
cmp
inc
shrb
out
dec
stos
mov
int
mov
cs
sbb
je
frstor
push
clc
pop
add
sbb
or
push
inc
pop
jecxz
shrb
fcoms
out
imul
gs
pop
add
fiaddl
in
stc
mov
mov
sub
aad
movsb
ffreep
je
xchg
scas
ljmp
pop
pop
pop
xor
push
xchg
outsb
bound
mov
sbb
mov
add
cli
pushl
divl
push
in
fidivl
cmc
bound
lods
pop
push
mov
jp
out
adc
xchg
std
out
lea
lret
int
in
xor
insb
das
sub
mov
sbb
fidivs
dec
mov
jle
add
jno
test
int
je
pop
lret
and
jbe
aam
xchg
rcll
sahf
stc
inc
test
in
popf
loope
setns
push
push
lret
in
lds
cmpsl
lcall
std
sbbl
sub
stos
repnz
std
sub
sbb
jne
jae
daa
fisttpl
ret
mov
xor
into
dec
mov
testl
or
cltd
mov
cmpsb
in
cltd
pop
lds
sub
push
lret
lods
cltd
mov
adc
xor
push
icebp
sbb
cmp
repnz
cmp
sub
xor
or
mov
xchg
pop
movsb
mov
push
jnp
xlat
lock
adc
insl
scas
jb
adc
sbb
cmp
lods
sub
jp
mov
loopne
jno
mov
xor
jb
pop
in
inc
mov
mov
shr
sbb
dec
sbb
in
push
fldl
add
test
fbstp
jnp
ss
cld
dec
test
cmp
xor
jne
in
cmp
dec
loop
cmp
idivb
push
add
push
rorl
push
in
xchg
mov
loope
adc
mov
loopne
incb
mov
insl
mov
mov
push
and
cmp
pop
and
push
lods
sbb
cld
adc
xchg
stc
mov
xor
rol
sbb
dec
dec
pop
adc
dec
dec
and
push
sti
xchg
mov
leave
cmp
xchg
in
test
jge
call
dec
test
inc
mov
subb
sbb
sbbl
movsb
jmp
andb
and
in
xchg
xchg
dec
mov
jecxz
jns
sub
leave
fwait
sbb
out
fdivp
ja
les
xor
push
xchg
sbb
jns
out
push
pusha
cmp
push
push
dec
mov
or
daa
shrl
movsl
mov
decb
or
ret
lcall
ljmp
clc
adc
adc
push
inc
jns
mov
sub
push
sahf
insb
pop
fidivl
out
mov
jne
jno
or
pop
cmp
rclb
ds
cld
popf
inc
dec
push
lock
out
dec
pop
inc
or
pop
lret
xor
cwtl
popa
dec
fcmovu
xor
mov
int3
add
loope
xor
adc
popf
dec
sub
jb
outsl
push
aaa
or
arpl
adc
sub
cmp
pop
mov
jns
sbb
push
inc
mull
jmp
xchg
xchg
xlat
out
int
mov
fwait
mov
stos
mov
push
inc
hlt
jnp
sbb
xor
dec
pop
rclb
xchg
sub
cmp
ljmp
fidivs
stc
ret
movsl
loop
loop
push
pushf
sbb
aad
push
jl
xchg
jmp
call
mov
aas
inc
xchg
inc
mov
js
rcr
test
add
lods
mov
clc
aam
cmp
sub
sub
and
test
leave
add
pop
mov
cwtl
sbb
sti
out
dec
xchg
lahf
jmp
cld
fsubrs
sbb
push
enter
fistpll
push
rolb
xor
flds
cmp
and
mov
cmp
and
jbe
pop
and
jo
mov
out
addr16
xor
or
and
insl
sub
sbb
rcll
jae
push
fstps
xor
test
shr
std
ja
into
push
push
inc
pushf
mov
test
fchs
in
bound
dec
pusha
mov
xor
inc
pushf
jp
sbb
jne
mov
aad
or
aas
pop
add
loope
jl
mov
js
adc
jp
xchg
xchg
and
jp
inc
cmp
push
xor
mov
pusha
out
push
push
pop
shll
in
push
mov
std
shlb
je
fisttpl
sub
movsl
int3
jg
mov
sbb
push
clc
push
mov
into
xor
out
test
cs
lahf
cmc
pop
in
jecxz
inc
out
scas
adc
cmp
push
call
fists
sbb
ds
cld
sub
cmp
push
clc
xchg
test
ljmp
cmp
mov
push
adc
movsl
repnz
flds
cmp
mov
dec
dec
pop
inc
add
or
dec
sub
push
sbb
dec
jmp
inc
mov
jp
xor
and
jg
mov
ret
ss
ret
popf
icebp
or
bound
xchg
jg
jo
push
xchg
xchg
xor
xchg
mov
or
mov
dec
outsb
test
inc
out
add
jecxz
mov
mov
mov
mov
movsl
daa
dec
mov
leave
pop
pop
hlt
repz
std
xor
mov
shll
push
int
shll
incb
popf
inc
imul
test
sarl
mov
fdivp
or
or
pop
in
out
in
xchg
add
addr16
sbb
sbb
dec
loopne
stos
lcall
jmp
push
mov
int
cwtl
sarb
loope
out
ret
imul
jo
ja
mov
orb
pop
add
rorb
or
sbb
inc
std
pop
inc
mov
cmpsb
sbb
adc
pop
repz
jge
js
fs
fidivrs
scas
cmp
outsb
jbe
jae
icebp
aaa
push
cli
push
pop
lds
push
loop
loop
pop
shll
out
pop
fisubrs
jecxz
loope
mov
out
mov
jp
mov
pop
push
fnsave
insb
leave
pop
pusha
or
adc
ds
stc
out
paddd
outsb
push
cmp
sbb
jp
je
stc
lahf
or
and
int
rcll
add
dec
adc
repz
roll
pushf
mov
rcll
idivl
mov
sahf
dec
pushf
lret
fs
pop
out
push
jno
popa
inc
ficompl
scas
cld
cmpsl
mov
dec
popa
in
mov
pop
insb
jmp
loopne
leave
call
fnstsw
adc
inc
psubd
mov
push
inc
jbe
push
repnz
sub
add
jns
inc
lods
adc
mov
aas
rorb
sbb
jle
push
push
mov
dec
ret
jp
dec
pop
jmp
mov
imul
je
jo
mov
inc
divb
jno
sahf
lcall
es
dec
lret
inc
sub
cmpsl
test
push
mov
mov
dec
pop
xchg
lret
in
pop
add
add
popf
push
popf
or
or
jg
in
pop
dec
bound
movb
xchg
ljmp
loopne
dec
or
or
and
pop
test
mov
jmp
adc
jns
xor
mov
add
push
imul
out
lret
sbb
xor
or
or
rolb
pop
inc
dec
ret
div
mov
xchg
cld
lret
in
in
ds
inc
dec
movb
add
push
out
scas
insb
inc
je
sub
sub
ljmp
dec
mov
jp
mov
in
mov
ficoml
sbb
lahf
or
sahf
movl
inc
mov
sar
mov
out
out
mov
pusha
cmp
push
inc
lret
repz
mov
scas
lods
fsubs
sbb
jp
movsb
cmp
lcall
add
add
shll
in
movsl
mov
xor
pop
mov
mov
jmp
cmc
movsl
dec
xchg
insb
add
lret
mov
mov
inc
ds
rolb
nop
mov
mov
jl
push
nop
mov
xchg
movsl
dec
push
jmp
inc
jo
fistl
xor
pop
mov
in
leave
and
mov
fwait
add
jnp
addr16
hlt
mov
mov
mov
xor
aad
testb
and
scas
test
add
cmp
in
jmp
mov
in
cmpsb
mov
mov
xchg
das
inc
sbb
in
mov
data16
or
xchg
jmp
repz
sub
xchg
ljmp
data16
rclb
xchg
hlt
mov
lods
push
mov
jl
mov
inc
pop
es
shl
repz
mov
jmp
scas
imul
sub
arpl
mov
imul
dec
pusha
xor
jecxz
imul
add
cld
dec
inc
sub
imulb
cmp
insb
repz
or
push
scas
mov
gs
test
mov
or
mov
popa
lret
and
andb
in
jnp
mov
gs
mov
int
out
push
sti
mov
or
sbb
in
lods
decb
and
add
pop
pop
cwtl
push
ret
stos
dec
les
cmp
fcoms
xorb
popf
icebp
mov
and
fstpt
stos
call
or
pop
psadbw
mov
popa
mov
mov
sbb
jl
rclb
fiadds
cmp
fwait
sub
or
inc
push
sahf
test
xor
pushl
mov
and
xorb
pop
loop
push
aam
sub
movb
nop
xchg
push
and
arpl
inc
rcrb
cmp
cmpb
xchg
daa
shl
or
mov
enter
xchg
enter
mov
scas
adc
jnp
adc
aaa
insl
stc
dec
ds
inc
sbb
and
cmp
fdivrl
dec
dec
and
es
xchg
and
out
ljmp
pop
or
mov
cs
cmp
imul
adc
ljmp
test
movsl
push
imul
ljmp
or
test
or
xor
sbb
loope
out
inc
inc
aas
loopne
jbe
xchg
inc
push
mov
and
lods
in
in
and
add
imul
jmp
push
sbb
fmuls
jbe
faddp
test
out
lahf
pop
shlb
mull
clc
aas
shl
or
xor
nop
mov
int3
jle
dec
rol
or
mov
pushl
out
test
xlat
out
out
add
fistpll
cwtl
insb
call
xor
ds
ret
gs
stos
adc
mov
and
sahf
sub
xchg
jecxz
sub
mov
orb
sub
push
testl
testl
in
adc
arpl
sub
mov
push
xor
jecxz
mov
iret
jl
xchg
out
mov
sar
lea
shr
add
or
mov
jge
fimull
pop
add
fxch
inc
loope
xchg
push
xor
int
cltd
daa
mov
sahf
shlb
pop
adc
fcmove
add
movsl
gs
insl
test
xchg
nop
mov
loop
js
cli
lds
adc
dec
cld
fists
aas
gs
cmpsb
pop
repnz
dec
out
mov
adc
jp
inc
shll
mov
scas
in
or
cmp
xchg
out
sub
cmc
dec
hlt
mov
mov
xchg
bound
xor
push
sub
xorl
dec
xchg
xchg
loope
jb
lods
sub
adc
pop
ret
sbb
mov
subb
mov
xchg
rcrl
push
adc
mov
push
mov
andb
dec
hlt
xor
push
push
cmp
sbb
pop
insb
jl
fsubr
enter
push
dec
jbe
repnz
xlat
lahf
xchg
xchg
mov
ljmp
jnp
or
xchg
mov
mov
fisttps
fmul
pop
out
push
mov
call
imul
xor
popa
inc
add
inc
dec
xorb
inc
ds
sbb
xor
sbb
lret
and
lock
xor
dec
inc
repz
xorl
xchg
mov
push
lret
mov
in
or
adc
or
idivb
nop
cmp
icebp
sbb
dec
in
fisttpl
insl
fcom
insb
stos
aam
jg
xchg
icebp
sub
les
pop
gs
cs
dec
ja
subl
fs
lea
and
xlat
jb
cmp
imul
xlat
jns
loope
mov
push
loope
icebp
jg
mov
add
sbb
out
add
inc
jg
adc
popa
cs
jl
out
subl
sub
push
xchg
push
jle
pop
mov
jle
mov
mov
mov
lcall
je
cmpb
and
jb
scas
jmp
js
fwait
loope
sub
jg
sbb
adc
loop
jae
sti
mov
movsb
mov
andl
mov
rolb
test
jae
mull
loopne
testl
sub
movsl
es
adc
icebp
mov
insl
mov
mov
inc
xchg
mov
aad
cmp
mov
jmp
mov
fidivrs
nop
lock
incl
jp
ret
jae
es
jp
cmpsl
in
sbb
push
fisubrl
iret
iret
pushl
dec
xor
mov
or
add
psrad
jg
lea
mov
popf
ss
push
cmp
sarb
call
xchg
flds
or
mov
add
sar
je
es
je
call
fnsave
cmp
fwait
pop
into
mov
idivl
fldl
xor
mov
popf
xor
ret
icebp
dec
dec
sbb
sub
or
lods
jns
inc
mov
dec
pop
push
dec
in
in
loop
and
jae
rorb
cs
pop
int
adc
pop
mov
sti
jmp
les
sbb
cld
cltd
cmp
daa
addr16
fcompl
and
mov
iret
mov
adc
add
pop
pop
pusha
lahf
cld
dec
lods
and
lods
in
insl
inc
push
sahf
cmpb
call
subl
inc
xchg
or
pop
mov
or
in
faddl
nop
lock
arpl
inc
mulb
dec
push
shld
ret
pushf
jp
lock
pop
dec
dec
dec
xchg
pop
dec
pop
roll
sbb
or
or
in
push
fcompl
lods
cltd
cltd
jp
xchg
push
adc
lahf
xchg
cmc
aas
sbb
loope
je
cmp
rcpps
mov
adc
lret
dec
pop
cmp
fsubl
hlt
mov
xor
mov
in
nop
pop
add
out
sub
adc
movl
inc
push
and
in
xchg
sbb
aam
lock
mov
jmp
pop
dec
xor
sub
imul
adc
rclb
mov
mov
das
iret
iret
sub
adc
imul
int
pop
inc
ljmp
cld
adc
lahf
adc
inc
mov
dec
cmpsl
stc
data16
in
mov
push
dec
sub
lock
xor
insb
pop
xorb
repnz
ret
and
insb
sub
mov
inc
insb
into
clc
xchg
popa
push
into
cmp
scas
push
insl
mov
jbe
jl
mov
int
cmp
popa
mov
pop
mov
or
cmp
push
rcr
repz
add
mov
adc
dec
faddl
jge
add
push
shrl
cltd
addr16
cmpsl
mov
shll
adc
fimull
sbb
incl
movsl
stos
adc
sub
lods
popf
int3
aad
outsl
xchg
push
inc
push
sub
mov
dec
sbbb
nop
mov
imul
cltd
mov
scas
sub
mov
mov
lods
dec
sub
add
jnp
pop
jl
adc
inc
mov
pop
mov
jb
sbb
call
xchg
fisttpll
lahf
xchg
shrl
mov
arpl
jg
insl
jg
or
or
push
or
test
jnp
mov
push
add
mov
and
loope
jns
icebp
xor
add
mov
xor
mov
scas
fs
das
inc
aam
jns
aaa
ret
addr16
inc
sub
mov
xchg
pop
imul
dec
jno
push
inc
jp
data16
inc
in
mov
hlt
jo
fistpl
add
clc
jb
sub
and
adc
xchg
dec
mov
lret
cmp
and
adc
shlb
es
aaa
mov
lret
push
fcompl
in
shrb
or
add
dec
fisubl
stos
and
mov
jno
sbb
stos
mov
pushf
stc
xchg
pop
sub
inc
jnp
and
rcrl
adc
pop
add
lret
icebp
push
push
or
add
adc
in
mov
cmp
aam
js
mov
mov
push
push
sarl
test
add
xchg
or
dec
in
pusha
imull
push
jp
lds
subl
push
pop
and
mov
pop
xchg
nop
stc
lods
test
sti
arpl
cli
add
inc
inc
lock
jno
jno
mov
fdivr
xchg
mov
js
sti
inc
jg
inc
fwait
add
sub
xchg
mov
push
ret
sub
push
sub
movsl
out
and
lds
xchg
adc
bound
mov
jb
dec
mov
and
subb
add
stc
subb
fstl
enter
dec
sub
test
jnp
pop
add
fwait
outsl
adc
xchg
ja
sub
dec
nop
dec
loopne
mov
cmp
cmpsb
or
out
add
sbb
dec
pop
mov
cmpsl
int
xor
fisttpl
jecxz
test
xor
pop
mov
mov
mov
lret
add
sub
xchg
cmp
sbb
inc
loop
mov
subl
xchg
and
pop
fsubrs
pop
filds
ja
sbb
lea
push
ja
mov
pop
loope
jg
mov
inc
cmp
mov
sbb
dec
movsl
imul
int
cmc
iret
push
insl
cmpsb
sbb
adc
pop
sbbl
repz
xchg
jp
data16
scas
insb
mov
fists
mov
popf
out
mov
call
loope
cmp
push
sub
pop
int3
xor
inc
sub
push
push
aad
loope
and
jno
lock
test
lock
xchg
addl
cmp
pusha
stos
fwait
gs
lret
push
push
add
jne
in
or
mov
mov
mov
nop
insl
mov
aas
mov
fsubp
add
jo
aas
sub
dec
inc
ffreep
jmp
rcrb
or
stos
sub
sbb
ss
aam
xchg
out
mov
rcr
cmp
fnstsw
ror
xor
xchg
mov
sahf
fxsave
sahf
out
pop
lcall
testb
jl
inc
fiadds
call
fldl
faddl
sub
sar
dec
lret
out
xlat
in
mov
dec
loopne
clc
popf
adc
jae
cmp
pop
leave
mov
into
or
inc
negl
lcall
lcall
movsb
inc
pop
and
jg
andb
hlt
mov
mov
pop
mov
orb
outsl
in
test
or
cmp
pop
ljmp
fs
jle
mov
mov
rcr
add
cmc
nop
ficomps
mov
xchg
icebp
cmp
or
adc
cwtl
and
sbb
lods
add
add
adc
outsb
mov
push
shll
adc
adc
out
mov
stc
push
das
lret
mov
rcl
push
mov
daa
stc
out
cmp
arpl
adc
sbb
call
cs
sbb
out
or
cmp
mov
leave
mov
in
dec
jmp
mov
not
mov
sub
and
dec
jmp
js
inc
rorb
sbb
ret
sarb
and
cmp
rcll
dec
dec
bound
test
xor
popf
or
xchg
andb
fidivrl
dec
mov
or
mov
sub
xchg
fisttps
add
adc
aaa
push
div
sbb
or
int
mov
lret
ja
add
sub
ret
cmp
sbb
inc
jp
push
jae
fisubl
flds
rolb
jbe
push
mov
or
lods
jmp
fcomp
stos
es
outsb
push
fildl
xchg
cmp
adcb
sub
or
add
cmpsb
cwtl
pop
dec
mov
push
pop
and
fs
jbe
test
pop
jno
pop
fld1
or
ljmp
dec
sbb
lods
jno
icebp
enter
imul
sub
test
adc
xchg
pop
cmp
faddl
scas
or
inc
jo
aam
enter
push
adc
sti
mov
ljmp
and
pop
lea
jb
out
or
jecxz
adc
push
and
lret
pop
xchg
fisttpl
mov
lahf
or
es
pushf
xor
push
data16
fdivs
adc
pop
shlb
pop
lcall
arpl
stos
sbb
shlb
nop
in
imul
inc
cmpsl
ljmp
arpl
popf
rcrl
cmp
stc
sti
inc
jno
repz
push
testb
mov
fcmovnbe
xor
or
sbb
lret
cltd
or
movsb
xor
dec
popf
xor
adcl
push
mov
mov
ret
xchg
mov
leave
xchg
hlt
clc
int
cli
movsl
sub
mov
mov
jmp
and
or
aam
fisttpl
cld
lcall
xchg
aam
ljmp
sub
int
sbb
ficoms
jmp
out
js
jno
in
pop
test
sbb
cmpsl
loopne
hlt
and
adc
or
stos
fwait
or
call
mov
mov
movq
loope
add
pop
mov
jl
sub
mov
scas
into
or
mov
les
dec
decl
xchg
fcompl
cmp
xor
dec
imul
pop
ljmp
sub
jp
xchg
lods
movsl
out
push
mov
sbb
rol
insl
push
jmp
lret
jne
in
inc
push
sub
pandn
jno
jecxz
pop
mov
test
push
test
push
bound
xchg
mov
jl
adc
mov
cmp
jmp
push
sub
das
xchg
paddw
mov
push
sub
jb
inc
ret
mov
cmp
xchg
mov
js
jae
xchg
stos
ficompl
mov
mov
mov
sti
inc
or
jne
loop
aas
in
pop
daa
test
xlat
imul
sbb
sub
jns
repnz
repnz
xchg
pop
and
out
sar
dec
add
rolb
cwtl
leave
or
mov
mov
jns
push
test
mov
cli
lods
add
pop
sbb
push
jl
pop
and
mov
or
cmp
shlb
aas
fists
mov
fnsave
cli
call
jns
sbb
mov
imul
push
pop
es
mov
insl
rcl
mov
je
xor
inc
stos
test
ficoml
mov
xor
ja
xchg
xorl
jle
into
xor
xchg
sub
pop
xor
and
xlat
sti
stc
out
xchg
adc
loop
ja,pt
push
jno
lahf
push
pop
inc
xchg
hlt
lcall
cmp
cmp
push
dec
movsb
push
out
sbb
addl
mov
or
mov
xlat
mov
jg
pop
into
inc
enter
jge
lds
xchg
imul
jae
sbb
dec
in
sub
mov
inc
xchg
pop
out
push
push
mov
les
mov
xchg
push
and
push
out
mov
rclb
mov
jecxz
push
out
out
cltd
xchg
int
xor
sbbb
inc
sub
in
adc
dec
inc
dec
jbe
push
dec
movntps
cmp
dec
popa
stc
negl
cmpsb
mov
xor
in
ss
and
fldcw
dec
sahf
sbb
xor
shll
out
sbb
fbld
and
sub
fiadds
sbbb
or
push
hlt
mov
inc
push
cld
fs
xor
shl
cs
dec
sub
mov
sub
rolb
inc
and
inc
std
lret
jae
fs
repnz
cmpsl
out
adc
mov
nop
sub
xor
or
mov
lcall
into
inc
xor
fmull
add
test
xchg
xorl
jge
xchg
mov
sbb
repnz
cmp
aam
les
push
in
inc
dec
or
add
bswap
push
lahf
fs
xchg
ret
add
repz
xchg
jns
ret
lcall
popf
push
fwait
sbb
sar
or
lds
xchg
pop
inc
imul
xchg
push
sbb
sbb
fists
ds
fstl
imul
add
mov
fbld
xchg
repnz
jo
loope
pushf
sbb
xchg
push
popf
test
and
sbb
xchg
jl
jmp
rcrb
scas
jge
lahf
adc
gs
cmpb
pop
int3
adc
subl
ds
sar
and
insb
push
test
mov
imul
das
iret
scas
test
call
pop
jne
jl
pop
dec
cltd
inc
hlt
pop
out
mov
adc
lahf
mov
push
sti
xchg
repnz
jb
xchg
or
inc
add
sub
mov
test
in
pop
cli
pop
push
jle
inc
cmp
jge
ss
loope
push
mov
cvtpi2ps
lods
mov
data16
imul
loope
clc
jmp
push
insl
inc
jmp
scas
dec
or
lret
sbb
repz
pop
and
and
loop
aaa
mov
sub
addl
clc
es
repz
push
push
shrl
mov
push
test
jns
outsl
xor
out
ljmp
adcb
loop
and
cs
mov
add
mov
push
mov
dec
cmovs
in
cmpsb
lret
pop
mov
in
pop
ds
add
push
jmp
ficoms
repz
pop
popa
push
push
sar
nop
into
mov
or
js
push
aam
lods
and
cmp
push
icebp
cmp
bound
jmp
or
outsl
xchg
pop
leave
clc
into
mov
mov
in
out
out
sub
add
pop
or
out
daa
add
dec
or
insl
jp
orl
inc
test
lds
xchg
mov
mov
mov
and
mov
mov
mov
pop
fwait
aam
add
pushl
mov
lock
les
dec
jbe
aam
xchg
and
xlat
mov
shlb
mov
rclb
lcall
loopne,pn
lods
cmpsb
sbb
push
loope
out
andb
out
mov
sti
leave
push
test
add
lcall
loop
xor
dec
pop
gs
out
rcrb
fs
add
or
lcall
imul
dec
mov
scas
por
cs
mov
xchg
and
mov
sbb
cmp
leave
hlt
pushf
mov
lods
repz
mov
imul
sti
mov
sbbb
test
push
lods
and
inc
add
dec
add
aam
sub
insb
cmc
testl
repz
xchg
add
ret
xchg
sbb
inc
mov
xor
add
push
in
pop
imul
ljmp
xor
mov
add
sbb
popa
push
in
mov
and
mov
jbe
into
push
pop
scas
cld
mov
and
es
mov
inc
pop
xchg
jge
push
repnz
push
pop
sub
inc
fcompl
sub
xor
mov
test
sahf
dec
movsb
cmpsl
sub
sub
xor
addr16
dec
add
imul
test
or
into
in
cmp
ljmp
add
pop
mov
xchg
cltd
jmp
testb
and
xor
xor
outsb
in
sbb
lret
cmp
cmc
cltd
and
adc
incb
add
adcb
enter
sub
stc
pushf
cmpsl
add
lods
adc
imul
push
imul
gs
test
add
in
mov
inc
fstpl
mov
ret
cmpsb
stos
cmp
cltd
push
jnp
rorb
mov
inc
cld
fwait
inc
addb
aad
ss
bound
data16
lret
shrb
scas
in
stos
daa
insb
ss
mov
push
aaa
pop
add
xchg
xchg
out
cmpsb
mov
push
test
pop
aam
xchg
insl
leave
dec
insb
or
xlat
andb
scas
pop
rorl
lds
mov
pop
es
mov
ret
pop
mov
xchg
xor
pop
roll
jns
into
stc
loope
in
sub
std
lock
cmp
cmpsl
add
sbb
cmp
insb
jmp
mov
loop
jmp
mov
out
gs
mov
push
dec
cmpsb
mov
mov
push
scas
lret
not
jbe
dec
xchg
lret
out
fmulp
roll
add
push
jle
fmuls
test
lock
ffreep
std
aaa
sbb
es
shll
stos
or
sti
cmc
sahf
cmpsl
aaa
push
push
testb
mov
jle
rcrb
pop
mov
outsb
dec
mov
lret
mov
lcall
xchg
adc
stos
and
hlt
test
enter
mov
ret
sbb
adc
jae
mov
rcr
xchg
lret
fcmove
clc
addr16
adc
mov
mov
jge
push
lea
cmp
cs
xor
xchg
sbb
xchg
jns
nop
add
jge
cmp
rcl
xchg
pop
loop
imulb
mov
xchg
aaa
les
cld
inc
loope
sub
sbb
mov
in
cmp
xlat
pop
xlat
mov
xor
pop
sub
mov
mov
pop
fnstcw
jo
les
lret
lods
enter
adc
dec
jns
cli
adc
xor
lods
push
cs
sti
cmpsl
jmp
imul
sub
add
or
lahf
sub
add
jnp
in
push
jns
imul
jns
insl
jne
pop
inc
lea
int
dec
shlb
or
ret
rclb
sub
push
dec
xchg
loop
andl
ja
or
rorl
sti
cmpsl
jmp
cmpsb
subb
dec
movsb
fs
xchg
add
jo
inc
and
mov
fnsave
fcomps
mov
lahf
pop
in
sbb
out
and
jb
mov
pop
lds
pop
lret
ja
insb
cmp
lret
ljmp
push
jp
add
sub
push
mov
jge
or
jecxz
and
lss
test
leave
sti
mov
lret
inc
scas
int3
or
sub
imul
test
mov
mov
in
or
jle
or
mov
cmp
lahf
xchg
push
and
fsubrp
lcall
push
add
inc
pop
out
pop
shll
cld
add
js
inc
or
scas
addb
icebp
hlt
mov
jne
xchg
in
fisubs
lods
sub
cmp
cwtl
enter
push
pop
and
inc
imul
aad
loope
push
push
push
cmpsl
adc
jae
sbbb
pop
stos
push
sub
scas
adc
test
pop
sub
test
cli
xorb
and
imul
insb
jecxz
cmp
pop
popa
mov
fcomi
add
cmpsl
jg
psrlq
xor
shlb
lods
repnz
mov
and
ja
jg
cmp
ficoml
inc
jo
sbb
pop
mov
add
pop
mov
cmc
cmc
pop
int
icebp
je
jp
addl
dec
pop
dec
mov
leave
cmp
sbb
add
push
test
movsb
scas
cmp
and
mov
dec
sbb
jne
mov
repz
ljmp
pop
mov
test
iret
push
xor
push
enter
jecxz
adc
cmp
iret
adcb
jl
adc
ljmp
xor
int3
scas
xor
je
fs
aaa
xor
loope
push
add
dec
sarb
stc
sbb
adc
daa
ja
mov
mov
scas
mov
adc
and
mov
mov
shr
scas
jb
cmp
sbb
ret
shlb
in
mov
outsb
sbb
test
aas
std
jg
rorb
mov
xor
xor
hlt
imul
ja
sub
arpl
ljmp
fdivrp
mov
mov
bndldx
dec
adc
shll
lahf
mov
stos
adc
ljmp
mov
sbb
mov
push
int3
into
or
sbb
insb
jecxz
lods
mov
and
test
jge
push
mov
jp
loop
or
dec
xor
nop
outsl
cmpsl
xor
jo
popf
jne
lds
mov
icebp
call
push
fwait
jle
mov
adc
mov
adc
rorb
daa
mov
fdivr
int3
out
rorl
xchg
inc
pop
stc
mov
ret
ffreep
add
sbb
punpckhbw
mov
cmp
mulb
ret
mov
jae
jo
js
arpl
rorb
or
decb
mov
dec
mov
pop
xor
push
cmpsl
les
push
or
cltd
xor
std
data16
add
xchg
lods
jg
xchg
addr16
pop
jno
jo
push
lret
fimuls
push
dec
iret
cmp
push
arpl
inc
dec
xor
in
out
js
inc
shrd
out
mov
cmp
lret
and
adc
aad
mov
gs
mov
pop
xchg
out
sahf
test
test
and
das
and
inc
mov
mov
cs
imul
mov
adc
inc
push
out
in
push
xchg
cmp
jbe
lret
jb
inc
fisttpl
out
int3
mov
sahf
pushf
negl
mov
arpl
lea
xchg
popf
imul
sub
in
insl
cmp
push
adc
mov
scas
sub
lret
ljmp
out
test
and
sub
push
sbb
mov
adc
loop
xchg
aam
xchg
inc
out
ljmp
lods
cli
int
add
mov
adc
lret
mov
out
insl
in
movsl
ret
out
mov
mov
ja
fsubp
inc
and
rorb
xchg
adcl
scas
add
in
mov
push
mov
les
sbb
xor
insl
sub
cltd
mov
nop
aas
xor
pusha
adc
test
icebp
jns
sub
aaa
movsb
adc
sbb
push
adc
psubsw
xchg
shlb
mov
mov
dec
mov
call
stos
pop
ss
idivb
negb
add
xchg
inc
inc
mov
pushf
movsl
jne
pop
call
mov
pop
sbb
mov
pushf
std
mov
outsb
fisubl
jg
dec
and
call
jnp
rcll
cwtl
mov
ljmp
push
inc
popa
push
push
mov
add
dec
fs
dec
les
lea
jp
xor
pop
sub
inc
ror
ror
inc
ljmp
es
and
ja
adc
scas
push
or
jae
jl
push
mov
xchg
xor
and
test
mov
hlt
and
jns
call
cs
cmp
mov
xor
pop
faddl
pushf
push
leave
cltd
xor
inc
sbb
gs
mov
testb
cli
mov
shlb
or
orps
fsubl
mov
orl
insl
pop
xchg
cmpsb
and
es
push
push
or
add
bound
dec
push
orb
sidtl
push
add
mov
sahf
push
ds
and
mov
cmp
leave
inc
mov
in
pop
loope
fmull
push
outsb
int
dec
jnp,pn
mov
add
adc
mov
in
xor
ret
outsb
shrl
cwtl
sbbb
fstps
push
push
mov
fsubr
dec
pop
push
add
inc
fs
xor
cli
add
cmpsl
jno
aaa
inc
push
push
dec
jle
sub
aam
cmp
sbb
fmulp
ret
xchg
loope
mov
loop
roll
push
std
pop
cld
fs
nop
or
insb
pop
popf
xchg
sub
test
push
xor
cmpsl
outsb
iret
or
leave
test
xchg
mov
jecxz
adc
push
punpcklwd
mov
adc
hlt
fistl
ja
or
je
xchg
rcrb
cmp
mov
rclb
pusha
jne
mov
xchg
rorl
fxch
lock
xor
pop
incl
in
push
pop
and
push
fstps
clc
in
mov
addr16
jne
in
sub
out
cmp
pop
dec
popa
mov
fwait
jo
jnp
inc
pusha
outsb
lret
pop
mov
push
cmpsb
aaa
push
dec
or
hlt
jb
aaa
xchg
lods
lahf
mov
xchg
and
and
dec
subb
sub
lret
in
gs
dec
es
inc
int3
mov
mov
mov
cmp
test
out
add
cmp
cltd
mov
jmp
inc
inc
ljmp
ss
lahf
loop
jb
mov
popa
xchg
enter
incb
cwtl
push
adc
adc
sti
inc
add
dec
push
inc
cmp
test
sub
push
mov
adc
and
nop
add
rorb
and
dec
inc
adc
pop
cmp
dec
es
cmp
bound
insb
jno
movsb
jmp
xchg
or
aam
scas
sub
xchg
pop
mov
sbb
mov
inc
mov
pusha
push
aam
ficoms
les
stos
ret
and
dec
xlat
sar
push
cmp
pop
dec
xchg
sub
add
sarb
add
mov
sbb
jne
mov
pop
cmp
arpl
repnz
xor
pop
popf
push
repnz
popf
sub
and
or
jne
pop
mov
inc
mov
xor
inc
sub
mov
jbe
iret
shl
sbb
jae
sar
aad
jnp
in
pop
ja
pop
imul
out
inc
dec
cmpsb
dec
stos
inc
sti
stos
sub
mov
repnz
int3
out
lcall
mov
jl
out
fildl
cmpsb
jbe
rcrl
sub
mov
and
push
push
inc
xchg
popf
fidivrs
pop
sti
fbstp
sbb
idivb
or
dec
push
lods
mov
stos
fadds
dec
test
mov
mov
dec
out
mov
gs
pop
mov
aaa
cli
hlt
pop
addr16
rclb
fldenv
adc
out
add
lret
in
insl
iret
repz
bound
inc
or
test
mov
jecxz
xchg
lds
mov
push
jo
dec
repnz
mov
cmpsb
xchg
dec
scas
mov
mov
sahf
push
cmp
ja
jb
inc
jo
lcall
add
xlat
inc
and
jns
jmp
or
nop
int
dec
imul
inc
movb
adc
lds
mov
mov
xor
jo
out
mov
pop
xchg
bnd
push
or
out
cmpsb
imul
push
jp
insl
lods
leave
int
pop
pop
cld
mov
std
pop
fnsave
pop
mov
fstpl
imul
adc
mov
jl
pop
sbb
inc
mov
dec
jp
sub
xor
sahf
xlat
or
rol
into
jge
shlb
scas
mov
into
add
ja
xchg
popa
and
mov
fdivl
jns
or
lea
arpl
std
mov
add
xchg
lods
xor
lods
cmp
fisttpl
stos
call
mov
cld
popa
dec
dec
mov
add
mov
pop
mov
cmp
or
and
cwtl
sarb
xchg
dec
imul
rcll
pop
or
jmp
jae
leave
lock
mov
sbb
add
jmp
mov
nop
lods
jb
stc
sub
sahf
lahf
int
lds
xlat
jnp
scas
jns
xor
cs
psubsw
dec
and
cmp
push
imul
push
je
insb
pop
adc
fcmovb
cmp
xchg
inc
pop
lea
repz
jbe
pop
enter
fs
cld
jae
movsl
mov
outsb
jge
dec
out
sahf
leave
or
add
xor
mov
leave
lret
sbb
xchg
in
shr
sub
or
into
clc
adc
cmp
out
jnp
lods
stc
or
movsb
jne
pop
dec
fbld
sub
orl
push
pop
jg
mov
mov
fs
xor
dec
push
xchg
sbb
fnstcw
sub
cmp
sbb
sahf
subl
adc
add
dec
movsb
iret
pushf
hlt
mov
call
ret
jno
xchg
or
adcl
imul
out
sub
mov
loope
hlt
fwait
and
inc
sbb
xchg
fwait
sarb
out
dec
lret
std
push
dec
orl
std
push
jnp
loop
jbe
enter
addr16
outsl
ds
sahf
dec
nop
adc
icebp
sbb
add
add
jbe
pop
push
fwait
loopne
addr16
andb
ss
out
jne
pop
jnp
sub
jb
cwtl
addb
pusha
sub
fwait
pusha
dec
in
imul
pusha
xchg
mov
push
push
push
inc
push
jg
cli
cmp
mov
cmp
test
bound
test
cli
cwtl
popl
cmpsb
dec
lods
movsb
xor
ret
outsl
das
cmpsb
cmp
popf
xor
leave
dec
insb
rcrl
xor
inc
adc
data16
adc
sub
push
addb
test
fcmovu
inc
out
push
rorl
imul
and
loope
test
inc
jmp
pop
cmc
pop
daa
xchg
out
int3
push
mov
mov
pop
std
push
imul
imul
mov
dec
cmp
fcoms
jge
sub
aad
cmc
loopne
adc
push
imul
xchg
push
subl
loopne
clc
ljmp
and
aas
test
fldenv
arpl
adc
or
xchg
rorb
inc
ret
inc
pop
shr
jne
je
cld
fiadds
xor
mov
or
jge
cmpsl
sub
jl
dec
cmpsl
push
test
jb
cmp
cmp
mov
xchg
arpl
nop
nop
and
mov
iret
mov
outsl
cmpsl
mov
push
mov
cmpb
pop
jnp
cli
and
fcmovu
add
pop
in
lret
inc
mov
or
dec
sub
mov
mov
push
pop
jno
sub
sub
ds
hlt
cmp
mov
int
pop
stc
xchg
add
xchg
jnp
or
clc
mov
scas
push
jb
mov
sbb
pop
les
test
outsb
and
add
mov
xor
mov
icebp
insb
jp
sti
push
cmpsb
faddl
loopne
or
outsl
mov
and
negb
mov
aad
fsubs
push
push
int3
dec
jno
gs
sahf
or
js
cmp
jl
rcr
insb
test
add
push
xlat
sbb
cmp
push
add
in
das
xchg
xlat
pop
lods
pop
arpl
daa
sub
cmp
stos
mov
mov
xchg
outsb
cmp
stos
pop
imul
jb
mull
cli
xchg
test
ret
loope
add
call
mov
nop
and
cwtl
xchg
shr
push
ds
stc
adc
jmp
mov
mov
loop
mov
push
or
jle
inc
adc
rcrl
jo
xor
addr16
jbe
xchg
js
into
addb
out
pop
shlb
stc
mov
rorl
cmpsb
pop
lret
mov
mov
shlb
rcrl
sub
add
and
jae
cmp
mov
or
loopne
arpl
inc
and
push
inc
pusha
cli
pop
cwtl
push
mov
inc
ljmp
jae
or
push
stc
scas
sbb
int3
ja
arpl
shlb
jp
icebp
das
inc
repnz
or
dec
dec
pop
ficompl
fildll
outsb
shll
mov
lret
popf
mov
mov
aam
xchg
addr16
leave
sti
push
js
iret
sub
inc
sub
ljmp
mov
jle
jbe
mov
mov
push
cmpl
mull
scas
fdivs
clc
mov
xor
aas
xchg
outsl
push
inc
xor
add
jl
pop
fdivrl
dec
pop
xchg
jns
daa
in
adc
inc
pop
xchg
cmp
js
fwait
jmp
mov
out
shrb
jle
dec
lret
aaa
push
lahf
xor
cli
push
sbb
aam
sub
pop
das
popf
xchg
loope
add
or
mov
xor
xor
pop
jnp
pusha
pop
sbb
popa
stos
test
pop
insl
xor
lock
sbb
shrb
xchg
pusha
mov
cmpsb
sbb
aaa
aam
lahf
sub
push
sub
mov
push
push
dec
cmp
lret
adc
jae
mov
adc
xor
or
ss
jnp
ljmp
fldcw
mov
repnz
lret
lret
insl
push
jbe
pusha
cmpsb
sti
jl
or
and
jne
gs
cmp
das
xor
stos
xor
pop
stos
pop
push
push
inc
xor
push
sahf
sbb
and
push
cmp
cmp
rcrl
in
cmpsb
jbe
addr16
xchg
lds
mov
lea
xchg
sub
sbb
jne
stc
push
test
or
or
jno
inc
jae
out
sbb
adc
aaa
push
add
pusha
mov
jo
mov
fdivs
xor
add
outsb
cltd
and
stc
stos
fldt
sar
push
push
cmp
ficompl
test
inc
mull
mov
mov
sub
inc
scas
push
sub
xchg
outsb
jno
incl
repnz
sbb
mov
incl
idivb
shlb
lret
xchg
cli
jg
test
or
into
sub
inc
cmp
test
xchg
pop
in
fldcw
insb
lcall
scas
or
add
cwtl
popf
jmp
mov
mov
xor
mov
test
jmp
or
dec
pop
fwait
ds
or
sahf
imulb
sub
cs
repnz
push
mov
xchg
cld
xlat
adc
adc
fs
mov
in
dec
cmp
daa
and
xchg
fldenv
inc
aaa
test
out
sub
inc
sub
cmpsb
std
clc
jmp
sahf
mov
xchg
dec
cmp
add
call
lcall
ds
jle
cs
push
adc
mov
leave
pop
jge
xor
mov
xor
fsubrl
jl
daa
sbb
iret
xlat
test
xlat
push
les
je
pushf
xchg
adc
out
pop
inc
fwait
inc
jl
mov
mov
addr16
test
ret
leave
inc
std
test
jg
aad
lea
sbb
jmp
push
loop
aad
sub
adc
jnp
ja
pop
add
push
jmp
aad
pop
adc
mov
push
stos
mov
stc
inc
sub
call
xchg
mov
aaa
jmp
lds
addl
mov
je
call
xchg
lahf
mov
loope
ret
pop
cltd
test
adc
ret
jae
roll
push
mov
bts
push
pop
push
fld
test
xor
call
lea
cli
mov
imul
fcoml
nop
push
test
test
imull
add
jo
ss
jae
decl
addr16
scas
ret
pop
mov
outsl
fisttps
cmp
stos
jge
daa
and
sbb
leave
xor
pop
movsb
popa
icebp
sahf
addb
add
and
div
sub
xor
pop
fnstcw
shlb
jo
icebp
sbb
negl
jge
not
rcrb
invd
mov
mul
jns
mov
cmp
push
iret
xor
mov
or
fwait
jae
test
fmul
add
xorb
loopne
mov
mov
ds
lea
mov
mov
fs
xchg
dec
xchg
xchg
mov
xchg
icebp
or
repz
lods
aas
mov
test
in
push
pop
pop
std
test
les
pop
inc
mov
call
rclb
lods
xchg
xchg
xor
or
inc
push
or
xchg
push
jecxz
fnstsw
sysexit
or
jns
push
outsb
xchg
fiadds
jecxz
push
dec
popa
aaa
pop
cmpsb
add
pop
cmp
das
push
jbe
inc
adc
sti
jo
sub
mov
push
inc
mov
mov
test
test
outsb
notl
test
dec
or
and
mov
aam
sbb
jne
and
insb
push
les
sub
xor
jns
xchg
int3
xor
orl
pushf
pop
xchg
push
adcl
pop
js
pop
inc
fistl
lcall
cmp
or
mov
icebp
jne
push
jno
fbld
ss
ret
scas
fs
xchg
xor
cld
loopne
mov
in
negl
and
fwait
negb
andl
xchg
scas
jmp
fs
out
popf
add
mov
jae
lret
mov
xchg
fildl
pop
pop
lock
inc
dec
mov
mov
or
int
sahf
cmp
hlt
jg
sbbb
int3
js
pop
inc
repnz
daa
int3
mov
jmp
jbe
xchg
repnz
and
cmp
push
loope
lret
mov
add
adc
inc
push
in
add
or
les
push
dec
shl
cltd
push
lcall
shll
daa
and
pop
jb
cltd
leave
lea
or
shlb
or
xchg
shll
jns
xchg
push
loopne
or
ja
lretw
pop
stos
and
add
jmp
pop
cmp
xor
adc
jl,pt
or
in
frstor
pop
lret
inc
sub
insb
jge
jmp
xor
inc
and
loope
sub
xchg
pop
test
or
sub
xchg
xchg
lret
jecxz
imul
xchg
jecxz
sbb
hlt
and
loop
and
hlt
add
stos
xor
cmp
cmp
sbb
subl
daa
mov
adc
sbb
xchg
imul
add
mov
stc
cmp
sti
das
fwait
sbb
xchg
mov
xchg
cld
push
jg
cs
xor
jae
and
mov
cwtl
add
ret
sti
mov
fldt
les
int
movsb
testl
arpl
das
outsb
xor
loopne
clc
or
jo
xchg
andl
adc
inc
add
ljmp
mov
or
pop
rclb
movsb
in
stos
sbb
mov
mov
push
movsb
jp
popf
lahf
in
sbb
bound
sub
daa
add
pushf
loopne
stos
xor
in
stc
cmp
push
mov
cmp
xlat
repnz
ljmp
push
or
jmp
scas
out
out
clc
and
sbb
fisubrl
repnz
leave
dec
nop
dec
jno
jne
addr16
sbb
lret
jne
mov
stos
xlat
cltd
rorl
mov
divl
sub
pop
jle
je
sbb
jns
mov
aad
sbb
adc
push
sbbb
sbb
loopne
in
pushf
inc
out
mov
jge
sbb
sbb
sub
lea
dec
fisttpl
cmp
das
fldenv
fs
ret
jns
test
xor
xchg
ret
popa
dec
imul
popf
sbb
pop
jmp
xlat
xchg
inc
push
outsl
icebp
pop
jae
mov
or
shrl
test
pop
mov
pop
sub
stos
mov
push
adc
ret
insb
or
add
add
lcall
clc
mov
movsb
xor
testl
mov
rcrb
add
roll
popf
incl
cmpsl
inc
sub
adc
mov
js
adc
sbb
iret
jge
sarb
mov
imulb
xchg
ret
xchg
ds
cmp
sti
xorb
jl
insl
cmp
xor
fcmovnbe
mov
pop
mov
dec
rclb
nop
ds
jo
gs
fldt
in
pop
ljmp
push
mov
push
leave
fldt
repnz
pop
testl
fld
fldl
in
movsl
push
rcr
fiadds
testl
jae
aam
clc
mov
sub
jge
xlat
or
xchg
ret
xchg
xorb
in
test
subl
jns
lea
xchg
mov
aad
sub
cmp
pop
xor
testb
out
pop
out
mov
inc
fld
fnstsw
mov
out
ds
jecxz
inc
lock
and
dec
mov
sbb
scas
arpl
subl
js
mov
mov
push
sbb
pusha
xchg
lcall
je
xor
es
dec
mov
test
cmp
ljmp
and
rcll
mov
loopne
insl
daa
frstor
imul
xchg
in
mov
mov
lret
sub
mov
repz
rcrb
aaa
insb
iret
sbb
push
push
in
and
push
dec
inc
or
ja
ljmp
fisttpll
icebp
lahf
push
push
pusha
sbb
ret
popf
add
mov
cs
movsl
out
dec
icebp
push
cltd
aad
ror
push
pop
mov
aad
es
gs
or
push
leave
add
les
arpl
loop
test
cmp
mov
pop
or
xchg
sbb
inc
pushf
cld
je
cmpsb
fs
call
adc
sub
popa
and
mov
mov
daa
xchg
insb
out
push
adc
push
xchg
mov
out
stos
lods
xor
test
out
lahf
sbb
shl
cmpsl
push
inc
add
or
daa
out
mov
mov
lcall
test
push
or
movsb
cwtl
jo
xorl
ds
mov
mov
cli
rcrb
pop
sarl
adc
add
call
and
sbb
jg
aad
outsl
loopne
sbb
aaa
mov
fwait
push
into
fstpt
pop
aaa
lea
push
jno
mov
movsbl
imul
and
cmp
cmp
rolb
out
pop
sbb
push
mov
push
fcomps
jae
rcrl
int3
fistps
xor
pop
xchg
mov
cmp
in
data16
adc
repz
xchg
fcomip
push
jo
js
pop
cmp
jnp
xchg
arpl
in
not
lock
and
rolb
jle
mov
dec
cmp
sub
add
adc
js
lea
add
push
add
ss
jae
mov
xchg
lods
mov
add
pop
shrl
and
dec
mov
sarb
mov
dec
push
aam
in
in
dec
icebp
loopne
sbb
and
data16
enter
adc
popf
test
push
jne
addl
mov
mov
xchg
push
jno
in
sub
iret
popf
push
or
cmp
and
rcrl
xchg
shlb
sbb
cmp
cmpsb
inc
jle
dec
ja
and
pop
out
add
sbb
cli
loop
dec
mov
mov
fistps
mov
andb
cmpl
aad
cmp
subl
outsb
orl
lret
xchg
mov
xchg
jae
add
in
int
orb
out
pop
dec
cli
xor
test
xor
sbb
sahf
jae
mov
mov
add
sbb
and
inc
inc
mov
cmp
int3
fucom
push
xchg
lds
das
inc
clc
cmpsb
popf
cmp
dec
fscale
mov
cmp
sahf
jmp
jle
cmp
scas
daa
mov
ss
movsb
push
push
adc
dec
mov
inc
or
dec
repz
out
rcll
and
and
add
inc
es
add
fisttps
data16
mov
add
fistps
xor
push
xchg
dec
inc
int
adc
mov
jp
insb
push
test
andl
add
jne
cmp
out
popf
pop
mov
fwait
mov
testl
pop
ljmp
jg
fistl
lcall
xor
aas
repnz
or
ret
cmp
outsl
jmp
jns
xchg
cmc
stc
out
inc
add
je
xchg
cli
push
and
cmpsb
gs
ss
pop
mov
dec
in
adc
jae
adc
jns
jns
pop
push
cwtl
and
insl
out
inc
imul
push
xchg
pop
pop
pop
movsl
pop
std
jge
cli
pop
imul
jbe
fisubs
gs
push
and
ds
mov
bound
orb
push
rcrb
in
mov
aaa
mov
adc
adc
pop
adc
test
dec
lods
les
aam
cmp
rolb
mov
inc
or
add
cwtl
movsl
ret
cmp
mov
inc
fimuls
mov
idiv
or
ljmp
ror
push
cs
arpl
jno
test
mov
shll
shr
jg
lods
repnz
add
add
popf
push
inc
jb
jmp
or
xor
dec
xchg
out
mov
mov
clc
int3
fsubl
fisubrl
add
dec
fcoms
mov
push
loopne
adc
jo
inc
push
xor
mov
xchg
pop
pusha
mov
sub
shlb
enter
mov
inc
out
add
hlt
sbb
pand
inc
cmpsl
jg
cmp
cwtl
leave
xchg
ret
iret
add
pop
sbb
cltd
cwtl
sahf
cmp
sbb
adc
lret
mov
js
daa
adc
lods
sub
mov
xchg
add
test
adc
in
in
insb
out
adc
mov
adc
imul
or
shl
sub
aas
cmp
es
hlt
popf
mov
ss
das
out
test
mov
mov
jbe
xor
lret
rcrl
repz
std
push
add
jg
sarl
adcb
sub
scas
clc
ficompl
push
popa
dec
cmpsb
mov
xchg
aad
pop
fcmovb
stos
rcrl
int3
and
cmp
adc
pop
pop
test
imul
repnz
jne
aaa
jae
mov
and
mov
jge
jo
mov
adc
sub
and
loope
stos
pop
das
push
mov
cmp
enter
xor
inc
and
add
inc
jb
mov
jl
out
sub
cwtl
lret
ds
sbb
mov
ja
xchg
inc
addb
sub
cmp
roll
mov
push
jmp
pop
lahf
lods
loope
loopne
pop
fcom
arpl
inc
pop
mov
adc
fnsave
mov
jo
inc
jo
sub
repnz
jo
cmc
ljmp
popf
push
int
pop
fcoms
jmp
std
ljmp
or
mov
mov
mov
pushf
cmp
bound
ret
cmp
mov
frstor
inc
repnz
xchg
jmp
ja
fcmovne
dec
test
mov
and
insb
out
ds
cwtl
dec
pop
scas
shrl
xlat
add
dec
sub
popa
xchg
icebp
mov
loopne
jne
or
test
aas
cmpsl
in
out
jmp
jae
xchg
dec
jno
pusha
jecxz
insb
mov
addr16
cmp
scas
jbe
xchg
pop
jle
popa
cmp
push
xor
stos
jno
scas
push
xor
fdivrl
outsl
addb
push
inc
or
inc
out
push
xor
aam
shrb
cmp
lods
out
loop
out
fcoml
cmp
aas
adc
cmpsb
shrb
movsl
pop
xchg
aaa
push
fldt
cmp
push
hlt
sar
rclb
push
xchg
adc
dec
cmp
hlt
pop
cwtl
jge
sub
les
xor
not
leave
lcall
loop
je
mov
outsb
in
stos
out
inc
pop
sbb
adc
or
dec
xor
dec
sbb
cmp
gs
es
std
push
and
push
mov
aad
fisttpll
testl
lea
or
jo
jl
fisubs
pop
xchg
lcall
scas
mov
mov
push
pop
mov
mov
ficompl
sarb
lcall
adc
mov
mov
sub
fwait
xchg
xchg
mov
dec
pop
mov
xchg
jbe
mov
and
jae
test
subl
adc
int3
stc
test
fildl
add
adc
push
adc
cmp
xchg
xchg
cmp
out
sub
dec
rclb
cmp
in
xchg
test
sub
sub
data16
pushf
lahf
stos
addr16
call
ss
fimull
rclb
loop
addb
arpl
out
pop
mov
xchg
daa
les
and
cmp
out
cltd
push
cltd
imul
mov
mov
xor
xor
and
adc
enter
fcoml
dec
out
outsl
push
fidivrs
cs
cmp
or
lock
push
fidivrs
push
hlt
enter
add
and
fisttpll
sub
dec
adc
sub
xor
inc
test
rclb
cmp
xchg
lock
adc
jb
jg
out
std
cmp
in
sbb
pop
dec
out
pusha
and
stc
push
mov
jo
ds
nop
jle
shlb
dec
jle
daa
mov
xchg
or
sbb
in
jb
pop
pushf
iret
mov
dec
fsubrs
sbb
pop
cmpsl
mov
dec
and
adc
mov
test
lods
sub
pop
out
xor
mov
mov
jmp
fdivr
icebp
out
pop
jl
push
inc
clc
pusha
test
xchg
lods
add
mov
std
popa
xchg
test
xchg
ficoml
inc
push
dec
lods
sarb
idiv
xor
repnz
sub
or
mov
dec
cld
fstl
out
mov
sub
push
lcall
mov
adc
pusha
in
push
and
mov
ret
adc
sti
mov
and
test
daa
fmuls
outsb
aas
mov
mov
aaa
cld
icebp
lods
dec
and
add
fcomps
cmp
mov
ret
or
fnstcw
push
adc
xchg
loope
or
fldl
inc
js
mov
cld
data16
mov
mov
loop
pop
pop
lret
push
fdivrs
sahf
mov
stos
xorb
inc
data16
inc
and
rorb
int3
int
pop
insl
sub
sub
rolb
jmp
mov
arpl
bound
fwait
sahf
dec
js
cmc
or
pop
sub
and
jge
rcl
jmp
imul
push
clc
dec
into
adc
sub
inc
divl
cli
and
or
cmp
push
jmp
sbb
inc
jnp
xor
pop
inc
xchg
pop
movd
scas
mov
popf
movsb
shll
and
loop
insb
add
fstpt
shlb
mov
push
arpl
or
icebp
cmc
cmp
sub
js
in
dec
cmpl
daa
cmp
push
mov
dec
insl
sub
outsb
fmul
pusha
add
inc
outsb
push
pop
test
in
or
lahf
xor
xchg
push
fimull
jns
xor
and
int3
fwait
mov
cs
mov
movsl
bound
pop
jne
pop
rcll
mov
repnz
imul
dec
sahf
jle
subl
shlb
push
sub
pop
fcmovbe
cmpsl
and
imul
stos
cmp
cmpsb
xchg
out
jge
mov
filds
add
sti
int3
lret
mov
jg
sti
shrl
es
cmp
sub
test
movsb
in
mov
out
in
push
sbb
syscall
in
ficompl
push
arpl
popa
xchg
jae
jp
pop
jb
movsb
mov
dec
nop
push
pop
divb
jmp
xchg
sub
std
std
xchg
cli
fcompp
dec
les
mov
xchg
daa
or
icebp
sti
mov
sti
ja
pop
xor
ror
pop
push
mov
sbb
or
sub
test
adc
pop
cmp
mov
mov
jae
out
xchg
test
rep
rolb
sub
call
iret
push
call
mov
jge
cmp
inc
loop
in
add
ljmp
push
adc
icebp
add
sbb
inc
lea
aaa
lock
cmpsb
mov
pop
xchg
sbb
fildl
mov
enter
sbb
push
test
and
fsub
dec
fdiv
stos
imul
shrb
ds
push
or
aad
imull
xor
adc
bound
bound
out
pop
mov
xor
mov
or
xchg
push
jne
jle
imul
jo
adc
lods
mov
pop
repnz
pop
and
mov
sub
iret
or
jecxz
cltd
js
adcl
push
in
in
fiaddl
insl
shr
lock
xor
or
outsb
ljmp
pop
pop
insb
xchg
inc
je
sbb
popf
push
push
lret
out
cld
push
push
enter
push
enter
or
pop
insb
push
xor
push
shll
lods
xlat
aam
stos
or
sub
cmp
fnstsw
int3
daa
js
loope
in
in
sbb
and
jle
mov
cmp
xchg
fldl2e
lea
iret
imul
lods
cmp
pop
jnp
mov
and
mov
imul
rol
push
jmp
push
gs
xor
popf
cmp
inc
fiaddl
mov
push
and
mov
push
sub
out
cmp
int
mov
out
into
lret
mov
test
adc
add
roll
shrl
cwtl
jp
subl
scas
sahf
fisubl
mov
mov
push
xorb
or
and
mov
movsb
mov
adc
scas
mov
outsl
shl
add
jae
aas
loope
pop
popa
inc
sub
mov
dec
jge
ret
outsb
aad
rorl
adc
int
enter
add
inc
cmp
cmp
fs
xchg
jle
mov
mov
add
pushf
std
mov
mov
pop
mov
gs
lret
mov
jbe
xchg
mov
mov
shlb
pop
mov
outsb
jg
push
sub
movsl
xchg
cmp
and
and
xchg
in
sbb
sub
adc
mov
aad
fwait
adc
mov
xor
mov
inc
lcall
mov
xchg
iret
mov
dec
pop
outsb
inc
push
mov
dec
ds
push
mov
adc
data16
test
mov
push
xor
ss
xor
cmp
add
push
mov
in
xchg
mov
add
pop
movsb
shrl
jb
mov
pop
stc
das
es
sub
push
divb
sub
mov
xchg
xchg
sub
jl
or
bound
or
jnp
daa
mov
xchg
jb
and
shl
sbb
mov
in
mov
cmp
mov
out
or
pop
push
aaa
mov
mov
xchg
aad
rcpps
mov
add
xor
lea
dec
iret
jmp
test
out
sbb
pop
adcl
or
cmpsb
mov
insb
ljmp
push
sbb
lret
pop
test
je
mov
cltd
pop
mov
fildl
inc
mov
test
xor
pop
test
hlt
mov
cmpsb
xlat
adc
and
imul
xchg
addb
dec
bound
popa
pop
loop
mov
lods
xor
inc
shlb
call
add
icebp
cmp
mov
mov
or
push
xor
cmc
xor
aas
mov
fbld
mov
insb
push
cmp
out
mov
push
lods
loop
mov
xchg
test
es
and
mov
repnz
outsl
sbb
mov
call
inc
arpl
mov
pop
pop
out
stc
sub
jbe
sbb
out
insl
sbb
mov
imul
and
sahf
test
imul
sub
sbb
add
ja
mov
les
je
aam
dec
cmp
sbb
jne
and
ds
je
hlt
adc
jle
jo
cmp
cmpsl
dec
in
pop
lret
enter
mov
insl
mov
pop
or
lret
push
popf
bound
mov
jo
mov
out
roll
mov
mov
xchg
pop
ss
popa
cmp
daa
das
mov
xor
lock
mov
mov
out
jo
lahf
push
jl
xor
imul
cmc
in
aas
adc
test
and
jns
cmpsb
hlt
pushf
shr
push
loope
data16
icebp
mov
fsubrp
scas
pop
ja
pop
outsb
in
sub
into
and
pusha
sahf
fwait
divb
jecxz
mov
insb
mov
lahf
sub
sub
push
fldl
add
sbbb
lods
fisttpll
daa
pop
xchg
loop
push
jno
cmpsb
mov
addr16
sub
xor
pop
mov
rcrb
push
jns
and
mov
ret
and
jge
jp
into
in
decb
mov
adc
and
sub
pop
sbb
int
ljmp
jmp
adc
sub
rcrb
cmpsl
mov
and
or
or
and
lcall
cmc
insb
or
movsb
cltd
sub
push
test
mov
arpl
imul
push
lock
loopne
mov
adc
lahf
addl
push
inc
je
cmc
dec
pop
jno
ja
xchg
dec
rorl
pusha
mov
loop
and
dec
fldenv
pop
gs
push
xlat
pop
mov
mov
jmp
mov
or
mov
insl
jle
jge
push
push
inc
adc
add
mov
je
jmp
xchg
xlat
in
into
pop
mov
jno
push
out
adc
pop
stos
adc
xor
fdivp
mov
inc
lret
ds
dec
xchg
and
xor
mov
lds
fmull
or
std
mov
shlb
lea
jbe
mov
or
inc
xchg
shll
sub
sub
fmull
out
add
xchg
push
push
popl
mov
add
lcall
cmp
and
xor
xchg
mov
ljmp
inc
and
dec
xor
repnz
pusha
inc
sti
fmuls
adc
inc
fisubrs
insb
jnp
mov
lods
or
jmp
rcrl
in
icebp
jl
mov
lret
pushl
xor
icebp
inc
sbb
jl
add
mov
push
imul
inc
adc
imul
xor
push
mov
cwtl
xchg
ficoms
mov
int3
xlat
cmpl
jae
sbbl
mov
add
xchg
and
xor
clc
lods
and
in
lahf
dec
jns
movsl
mov
idivb
pop
fs
leave
popa
pop
adc
stos
lock
or
fsubs
jl
outsl
stc
out
cmp
andl
xor
clc
mov
test
or
cli
or
mov
aam
cli
push
xchg
pop
push
cmp
pop
fs
test
mov
sbb
or
add
mov
fidivrs
xor
sbb
cmp
mov
test
sbb
inc
mov
pop
out
scas
dec
imul
push
aaa
cli
mov
fmull
push
lcall
push
xchg
mov
cmp
mov
call
inc
int
add
fdivrp
or
sub
jmp
scas
sbb
add
push
aam
cmc
les
and
adc
in
push
arpl
adc
popa
adc
or
dec
inc
dec
test
dec
dec
ljmp
mov
jns
pop
cwtl
dec
outsb
cld
push
xlat
jg
dec
insb
mov
add
outsb
scas
or
icebp
dec
insl
fistpll
repz
rolb
push
iret
lret
aam
pop
fstpl
or
adcl
aas
insb
jae
jle
leave
faddp
push
mov
pop
jo
jmp
enter
pop
jmp
dec
hlt
test
or
ja
adc
lcall
and
out
lods
jns
addr16
jo
sub
fstpt
and
pushl
call
mov
pop
adc
testl
ljmp
pop
push
stos
dec
mov
arpl
sub
cmpsb
div
imul
and
push
repnz
sub
xor
cltd
enter
push
enter
pop
and
mov
mov
mov
lahf
sub
mov
mov
mov
and
ror
push
fistpl
sahf
dec
mov
aas
cmp
pop
push
dec
loop
jle
mov
js
mov
icebp
movsb
inc
fstpt
pushf
xchg
adc
inc
in
cltd
iret
leave
jbe
push
adc
jecxz
movsb
fdivrp
icebp
out
xlat
pop
jmp
call
dec
push
adc
addr16
jns
or
mov
xchg
and
pop
fimull
fcmovnu
xlat
notl
std
call
int
int
dec
mov
add
loop
mov
shll
jecxz
push
push
sbb
mov
jb
add
sub
decb
push
jp
cmp
stos
add
rcrb
lock
pop
insl
cmp
pop
jl
xchg
or
outsb
push
or
jo
pop
shlb
add
bnd
sub
and
mov
jl
rcrl
inc
pop
pop
in
out
mov
sub
sti
jae
xchg
inc
lahf
lahf
sti
and
out
cmpsl
mov
xchg
mov
loope
inc
jb
cmp
gs
ficomps
int3
bound
stos
popf
xchg
push
int
rclb
mov
cmpsl
fwait
inc
iret
push
mov
add
push
fucom
cmp
jecxz
push
dec
adcl
repnz
mov
jno
lock
mov
cmpb
pop
mov
pusha
in
inc
and
arpl
das
inc
lds
mov
arpl
sbb
lret
lea
and
stos
ret
popf
inc
cli
cmp
es
pushf
nop
xor
and
mov
inc
jmp
into
ret
lret
dec
fstps
repz
aaa
inc
and
out
xor
fs
xor
gs
flds
inc
data16
int
mov
test
lea
pop
jne
and
pop
mull
jecxz
sub
in
ja
aaa
jmp
sbb
jbe
adc
pop
cmpl
cmp
push
cs
push
adc
or
stos
ljmp
dec
aam
add
mov
and
out
stc
cmpsl
fiadds
sbb
call
pop
in
popa
das
inc
mov
jne
push
cli
mov
xchg
call
dec
and
xor
cltd
dec
push
je
mov
fcoms
jns
fnstenv
dec
bnd
mov
mov
mov
adcb
subb
adc
int3
shl
out
scas
pushf
les
ffree
inc
or
mov
cli
inc
fistpl
adcl
jle
test
and
dec
xchg
xchg
fldl
scas
jne
into
jmp
push
dec
imul
mov
dec
cmpsl
jo
shlb
xchg
dec
xchg
cmc
icebp
ret
sub
int3
add
push
mov
cmp
sub
nop
mov
int3
sti
mov
ret
not
mov
pop
out
popf
jb
cmp
xchg
or
jae
pop
sbb
add
out
sub
mov
aas
sub
inc
mov
adc
jle
push
pop
into
adcb
or
sbb
jb
in
pusha
pushf
aam
ds
les
mov
cmp
mov
in
mov
mov
shr
mov
add
pop
sub
pop
pop
ja
sub
cli
pop
add
cwtl
lea
das
test
mov
adc
subb
dec
das
bound
inc
mov
mov
pushf
xchg
in
shrb
adc
mov
sti
xor
sbb
adc
xchg
sbbb
jg
mov
lcall
popf
into
cmp
cmp
add
mov
jb
mov
clc
out
test
dec
jae
sarl
aaa
jb
cwtl
out
push
sarl
testl
ret
sbb
imull
cmp
fnstenv
mov
fisttpl
hlt
mov
adc
mov
inc
push
sub
mov
adc
add
sti
cmovns
jne
into
leave
bound
daa
cmp
cmc
add
add
xchg
jmp
data16
mov
movsb
mov
sar
imul
jne
pop
lahf
dec
cmp
mov
and
sub
adc
xor
rcrb
arpl
aam
xorl
push
xchg
inc
rorl
in
cmp
jp,pt
rcrb
das
pop
pop
in
scas
xchg
inc
stc
push
push
neg
xlat
dec
call
push
or
jbe
push
repnz
mov
scas
push
in
cmpsb
je
roll
imul
cmp
inc
pusha
xchg
mov
hlt
pop
or
pop
ror
in
jae
push
shlb
jo
pop
adc
lods
pop
pop
mov
cwtl
das
mov
jae
in
adc
cmpsb
push
repz
dec
lds
push
inc
ss
dec
popa
lds
fwait
cmp
push
push
gs
xchg
jecxz
pop
lahf
fisubrl
push
cmp
bound
shrl
loope
ficoms
adc
xchg
popf
mov
inc
adc
add
or
sbb
orb
negl
enter
sbb
fists
out
in
push
mov
jmp
fbstp
test
or
clc
adc
and
sbb
shrb
aaa
mov
pop
adc
mov
dec
cmpsl
lret
mov
push
xor
adc
lret
xor
movsl
shrl
das
dec
xchg
addl
in
cmp
mov
dec
test
imul
cmpsb
aad
imul
mov
popa
pop
push
icebp
push
xchg
loop
fucomp
out
sbb
lds
rcl
mov
addr16
xchg
sub
mov
adc
add
mov
adc
imul
sbb
dec
xchg
inc
push
jno
xchg
mov
pop
mov
sbb
adc
popa
add
xchg
fiaddl
or
mov
push
mov
popf
xchg
clc
push
push
rol
jo
xchg
xor
movsl
sub
mov
add
cmp
shll
jge
mov
loop
cwtl
add
xorl
xor
sbb
bound
xor
fistpll
and
outsb
inc
popa
or
rcl
or
jbe
lods
mov
mov
cmc
scas
or
out
xchg
dec
jle
inc
dec
push
pop
push
push
cmc
repz
lcall
lea
sarl
stc
xor
adc
pop
jmp
sbb
je
js
je
call
gs
jne
clc
imul
cmpsl
in
push
add
data16
and
in
or
shll
sub
push
stos
test
sti
xchg
jo
test
loopne
fdivr
or
call
or
addb
sbb
gs
scas
shld
movsb
dec
cmp
xchg
xchg
pop
dec
pop
pop
jge
inc
decl
in
or
mov
cmp
movsb
fidivl
insl
mov
hlt
cli
xchg
shr
xchg
dec
sbb
decb
adc
stos
xchg
movsb
jecxz
mov
mov
mov
dec
push
sar
jle
aad
jbe
inc
mov
push
add
sub
sub
stc
lea
and
sub
mov
pop
sub
mov
cs
lret
lds
in
insl
and
lahf
ffreep
or
jbe
add
sbb
rdmsr
iret
or
xchg
dec
orb
pusha
subb
ret
inc
in
cmpl
test
sub
jnp
ret
imul
push
jne
sti
ljmp
loope
leave
jae
lea
pop
test
popa
lahf
addl
std
mov
and
push
mov
rorb
iret
xor
or
jp
imul
pusha
daa
fisubrs
fstps
pop
jp
jle
jbe
jl
aam
scas
mov
xchg
das
call
xchg
test
push
cmp
popa
cmp
sub
shr
jmp
in
scas
jge
enter
jle
in
icebp
add
mov
mov
mov
push
sbb
mov
nop
scas
lahf
test
ja
jae
or
in
bound
pop
mov
bound
fistps
adc
ljmp
dec
push
jp
xor
and
mov
pop
mov
fistl
test
das
shrb
daa
les
test
fcoms
pusha
imul
sub
jae
lods
es
push
cmp
sub
jecxz
icebp
xor
das
pop
std
repnz
adc
divl
rcrb
in
and
cmp
enter
scas
repnz
lcall
imulb
mov
fdivrl
xor
fsubrs
or
pop
fidivrl
xchg
jo
mov
fld
mov
sub
ja
or
pop
xor
mov
pop
mov
cli
adc
mov
loop
lods
movsl
fwait
mov
jo
test
lods
insl
shll
fildl
jg
loopne
jb
and
je
sahf
mov
adc
repz
sbb
mov
mov
or
adc
and
sti
rolb
or
mov
out
push
mov
push
push
jp
mov
lds
aam
adc
xchg
popa
and
cwtl
xchg
push
subb
lahf
sbb
call
mov
pop
notb
cmp
xchg
lds
mov
jne
and
push
dec
sbb
jbe
push
jmp
sti
jno,pt
shlb
jle
std
int
bound
outsl
mov
cltd
movsb
pop
and
xor
cli
jns
fdivrl
or
imul
push
mov
mov
int
inc
sarl
xchg
daa
stc
lret
lock
movsl
cwtl
sub
repz
popa
mov
adc
add
xchg
inc
jg
leave
repz
leave
mov
pushl
add
int
cltd
and
push
inc
add
ret
mov
pop
jae
inc
mov
jb
adc
ja
bound
mov
mov
ja
cmp
xor
gs
mov
dec
lods
cs
lods
push
test
lcall
ja
dec
les
jae
pop
inc
dec
fsubs
xchg
dec
dec
xor
ficoms
push
jp
das
cld
xchg
xor
mov
flds
jg
out
push
jnp
mov
sti
pop
int
lods
rorl
mov
lret
daa
mov
out
xor
push
lds
lods
nop
ret
mov
out
lret
rclb
int
push
sahf
cmp
leave
inc
add
adc
andps
or
sub
or
or
stos
in
and
adc
stos
or
je
cltd
xor
rolb
rol
popf
aam
or
loopne
fs
aam
mov
mov
data16
test
xor
lds
push
andb
mov
movsb
mov
popf
sti
xor
popf
out
in
flds
sub
dec
das
jns
inc
ss
cmp
and
cmp
divb
enter
in
adc
js
mov
pop
jns
notl
sub
pop
mov
mov
fisubrl
xchg
dec
adc
ss
push
xchg
or
xlat
jne
sub
jecxz
jmp
sbbl
aas
jmp
mov
cmpsb
js
imul
ja
push
xchg
inc
jno
loopne
xchg
clc
nop
and
mov
aas
or
sbb
adc
fwait
sub
cmp
cli
xchg
cmpsl
pop
push
rclb
cltd
mov
into
in
sub
gs
call
adc
test
bound
mov
and
enter
adc
xor
movsl
xchg
push
add
pop
xchg
mov
test
mov
iret
cltd
ret
sarb
dec
or
or
and
add
sub
sub
mov
inc
cmc
lahf
aad
inc
jl
shl
push
lods
jns
xchg
add
add
popa
mov
xchg
mov
lds
xchg
mov
jae
adc
cmpsb
cld
add
sub
lret
scas
jns
aam
pop
mov
mov
or
idivb
mov
stc
popa
mov
fldcw
xchg
jp
push
mov
loopne
mov
outsl
mov
ret
daa
cmc
test
bound
in
outsl
push
shl
adc
stos
repz
repz
cwtl
das
cmp
add
jne
cltd
fisttpll
fcmovnb
jg
adc
movb
jmp
push
adc
mov
inc
fsts
outsb
mov
das
or
cmp
shlb
mov
enter
std
jns
movsl
add
repnz
mov
cmpsb
cmp
in
idivl
negl
sub
scas
icebp
ja
mov
sub
ficoms
lds
icebp
fsubrs
test
outsl
mov
push
xor
jle
pushf
mov
jno
cwtl
mov
sbb
xor
fsubrs
jge
mov
fidivl
cmp
push
ja
sub
imul
push
mov
mov
dec
sub
sub
les
mov
and
sbb
sub
dec
inc
lcall
repz
mov
mov
add
mov
push
lahf
xor
jge
or
mov
cmp
aad
adc
jg
pop
jp
lods
push
cmpsl
in
decb
in
adc
roll
push
jge
cmpl
mov
scas
pop
dec
sqrtps
pop
cmp
xchg
adc
and
inc
sbb
rclb
cwtl
xchg
mov
cmp
add
mov
jecxz
daa
fs
sub
int3
jmp
out
filds
jns
and
sbb
push
mov
or
aaa
rorl
inc
gs
fisubs
fistl
mov
scas
movl
push
repz
cld
into
cmpsb
xor
mov
cmp
adc
sti
push
sti
lea
jmp
mov
push
push
sbb
pinsrw
outsb
outsb
inc
cmp
andb
cmpsl
mov
sbb
leave
pop
addr16
rcr
ret
pop
mov
cmp
fistpl
imul
push
or
shlb
inc
xchg
sbb
and
sub
or
xor
shrb
lods
movsb
dec
call
test
cltd
outsb
call
mov
xchg
xchg
in
arpl
ret
js,pn
jno
outsb
pop
mov
lea
push
jmp
ljmp
pusha
xlat
and
imul
stc
dec
adc
or
mov
pop
rcr
lock
shlb
sbb
cmpl
ljmp
add
cltd
inc
imul
push
sub
inc
mov
mov
jno
pop
inc
repnz
leave
mov
and
cli
push
jp
and
mov
xchg
rcl
mov
data16
in
pop
adc
das
push
pop
loop
cs
pop
adc
movsl
lea
insb
dec
outsb
lods
gs
ret
push
iret
idivl
stos
bound
pusha
or
pushf
lcall
cmp
cmpsb
push
mov
and
push
mov
lret
pop
xchg
dec
fsubr
test
push
ljmp
add
xchg
mov
lret
les
js
dec
sbbl
sub
jb
mov
sbb
sub
aad
sub
outsl
or
idiv
jns
mov
or
addr16
outsl
jge
dec
and
xchg
sahf
addr16
dec
mov
xchg
cmp
mov
mov
xchg
ret
or
repz
jmp
pop
pop
adc
mov
xchg
xchg
in
setnp
mov
jp
cmpsl
dec
into
or
icebp
popf
mov
xchg
add
ss
or
dec
push
imul
iret
pop
das
push
or
in
cmpsb
xchg
adc
int3
pop
and
repnz
cli
push
loop
cmp
subb
and
repz
xlat
fnsave
loope
testb
sbbl
dec
sti
fdivs
xchg
sbb
or
lock
imul
dec
add
push
inc
or
mov
or
xor
test
jge
sbb
mov
pop
sti
sub
lcall
outsb
stos
lea
mov
leave
inc
xchg
cmpsb
sbb
push
cmp
pushf
push
mov
lock
outsb
cmp
jle
jo
out
add
xchg
xchg
clc
fs
data16
or
or
js
arpl
packssdw
push
or
mov
fistl
cmp
stos
cmpsb
sbb
icebp
add
xchg
mov
inc
pop
leave
inc
mov
and
das
fldcw
pop
das
ret
pop
fsubl
and
in
stc
je
fcompl
and
or
test
jp
in
mov
fiaddl
mov
sbb
sub
fldl
cld
cmp
mov
mov
insl
stos
mov
pop
push
outsb
out
mov
add
pushw
pop
cli
cmc
mov
and
movsb
push
cmp
xchg
xor
pusha
cmp
scas
in
mul
stos
dec
js
cltd
cmc
movsb
lret
ljmp
pop
popf
pop
int
shrl
sbb
lock
cltd
cmpsl
mov
scas
pop
aas
ss
push
outsb
sub
hlt
fs
xor
xchg
adc
js
push
push
arpl
rcll
jp,pn
fcoml
mov
or
test
inc
lret
loope
insb
popa
xchg
xchg
mov
xchg
addr16
pop
jp,pn
adc
mov
adcb
adc
in
nop
sahf
add
jp
sbb
js,pt
into
pop
shll
insb
push
sub
outsb
inc
push
mov
imul
in
pop
mov
mov
pop
xchg
xchg
and
add
adc
pop
bound
hlt
xchg
push
mov
push
inc
scas
fmul
cld
jnp
xchg
cltd
in
imul
pop
sbb
int3
pushf
call
sub
cmp
stos
sti
sub
mov
std
xchg
mov
neg
in
jmp
iret
leave
inc
xchg
or
cwtl
add
mov
or
cmp
outsb
mov
inc
mov
pop
pushf
fdivr
fs
adc
shll
in
cmc
movsl
nop
in
lea
pop
lret
mov
aad
xchg
push
xchg
sahf
add
cmp
shrl
inc
jb
sbb
roll
mov
hlt
icebp
popf
lahf
test
mov
lds
mov
lods
pop
data16
into
mov
insb
mov
and
loop
jp
adc
inc
dec
dec
in
popf
xor
push
inc
out
xor
pop
lret
push
push
outsb
fwait
jmp
mov
jl
or
pop
sbb
jo
aad
pop
int3
jl
sub
sbb
mov
daa
xchg
sub
shr
jb
std
or
cmp
dec
in
ss
pslld
cs
mov
xchg
clc
jle
inc
pop
addr16
fcomps
lds
add
dec
pusha
lods
jmp
and
sti
add
popf
scas
sub
or
push
aad
xor
scas
dec
xchg
test
xor
stos
js
ss
loop
and
mov
adc
popa
lock
mov
push
int3
xchg
popf
sbb
jns
sbb
mov
dec
lahf
and
leave
lds
sbb
scas
sub
mov
xlat
push
repz
xlat
ja
push
pop
out
lods
inc
out
mov
inc
cmp
stc
cmp
imul
dec
rol
insl
jae
loop
ret
mov
lock
mov
rcrl
js
add
mov
push
movsl
popa
and
sti
ret
aad
cwtl
xchg
pop
scas
into
mov
fmuls
pop
sbb
jbe
dec
mov
pop
or
iret
add
call
mov
lret
pop
icebp
mov
bound
fsubl
and
iret
test
in
call
dec
mov
fidivrl
ljmp
xor
xchg
je
fwait
mov
ror
sub
adc
cmp
lret
add
sbb
sbb
add
fistpl
sbb
clc
mov
mov
mov
jno
cmp
repz
xchg
adc
data16
jle
or
and
mov
loopne
push
ficomps
xor
bound
imul
ljmp
leave
xor
lahf
fsubl
dec
addr16
jg
shrl
push
pusha
mov
loope
loop
std
incl
jecxz
jnp
jp
imul
shll
dec
xor
and
xor
std
jmp
aas
adc
nop
mov
pop
inc
add
sbb
jmp
xchg
out
mov
into
sbb
sub
jo,pt
dec
pop
cmc
aas
lods
movsb
xor
pop
mov
and
loop
mov
adc
mov
daa
cmc
rcrb
hlt
push
pop
je
dec
push
addr16
sbb
mov
pop
cmpsb
push
add
popf
dec
cli
dec
pushf
jge
xchg
loope
ret
lods
mov
dec
rorl
in
sbb
into
mov
scas
push
icebp
in
insl
cmp
out
lock
in
dec
imul
push
inc
mov
xchg
clc
pushf
fimull
inc
fsub
in
xchg
adc
mov
mov
ja
cmp
add
aad
and
aam
dec
orl
push
dec
cs
xchg
xlat
int3
or
outsl
fildll
lds
adc
push
iret
add
or
or
test
jbe
xor
jnp
add
push
out
push
test
and
mov
jp
dec
sub
mov
and
lock
cmpsl
pop
cs
gs
cmp
add
test
cmp
mov
sub
pop
loopne
filds
cwtl
pop
repnz
add
dec
in
mov
push
push
outsb
xchg
inc
mov
pop
sub
pop
mov
pop
and
es
fdivl
cltd
cmp
ficoml
arpl
sbb
adcl
cld
je
xor
test
pop
and
xchg
in
bound
jmp
pusha
testb
or
outsl
fisubrl
push
pop
int
cmpsl
lret
lods
adc
es
dec
mov
jl
xchg
dec
mov
enter
test
ss
jmp
jge
fdivrs
in
ret
mov
xchg
xor
sti
in
ja
mov
mov
mov
fstpl
ljmp
mov
jne
mov
outsb
imul
add
out
addb
add
ljmp
ljmp
pop
andb
outsl
out
or
jmp
mov
movsb
outsb
jl
out
xor
aaa
jbe
stos
pop
mov
cmpsb
xor
pushf
push
cmp
stos
and
rcr
mov
mov
es
push
loope
adc
jne
jae
outsb
jp
mov
clc
ret
push
and
mov
sbb
jb
xchg
fiadds
pop
jb
rol
xchg
jle
inc
aam
pushf
pop
popf
or
out
movsl
lock
pusha
adc
sbb
icebp
push
pop
add
push
fstps
mov
sbb
add
icebp
repnz
xchg
mov
cmpsl
test
mov
iret
mov
pusha
aad
xchg
mov
or
dec
lret
or
add
dec
mov
lock
sub
rol
and
mov
mov
adc
or
or
adc
inc
pop
fsub
jle
lods
cmpsb
inc
inc
dec
mov
push
mov
xchg
jo
jle
dec
jne
lds
pusha
mov
das
enter
mull
jp
xchg
dec
loopne
or
mov
xchg
mov
pop
loop
ss
xchg
and
rorl
fildll
mov
int
and
and
xor
call
outsl
and
inc
cmp
int
scas
adc
ret
sub
fdivl
int3
fistps
or
dec
pop
pmaxub
cmpsl
aas
mov
xchg
or
lret
repnz
inc
xchg
mov
xchg
cmpsl
pop
out
int
fisttps
jl
stos
adc
dec
lea
lret
jns
adc
pop
stos
popf
xchg
ret
and
ja
add
popa
mov
jbe
fimull
jne
mov
cli
xlat
scas
inc
push
lret
rclb
pop
xor
sbb
divb
clc
push
adc
ja
and
pop
xchg
pop
adc
out
mov
push
add
sub
aaa
sbb
dec
iret
sub
ficomps
and
enter
pop
adc
cmp
ficoms
lock
xchg
cwtl
inc
lcall
lret
jnp
mov
sub
adc
in
add
mov
push
sarl
aam
adc
out
mov
lea
jns
mov
and
movb
cmc
cmpsb
cmp
inc
daa
and
scas
sbb
and
popa
pop
sub
inc
jmp
mov
sti
arpl
mov
lock
sub
mov
pop
test
xchg
ds
out
xchg
sahf
push
out
ljmp
les
out
sbb
inc
out
movsl
pop
test
and
xor
adc
out
pop
adc
sti
sub
mov
fildl
pop
mov
mov
mov
imul
ss
mov
sarb
icebp
xor
mov
fmuls
sub
cmp
jns
insb
xor
cmpb
out
in
jge
imul
jno
jae
mov
cmpsb
fwait
add
sti
sub
adc
xor
cmp
adc
and
rclb
shrl
mov
mov
jnp
mov
js
pop
imul
stos
jl
insl
cmc
xchg
pop
test
sbb
mov
adc
push
dec
rclb
mov
push
jne
push
mul
push
sbb
adc
sahf
cmp
push
pop
outsb
testb
inc
jne
cmp
and
sub
fsubr
adcb
xchg
push
inc
fwait
add
inc
push
jmp
and
adc
add
add
mov
les
jae
out
lret
cmp
aad
addr16
mov
xchg
ret
pop
cmp
and
push
jp
loopne
and
xor
inc
and
mov
xchg
sub
scas
bound
sbb
dec
pop
cmpsl
and
andl
into
inc
xor
xchg
stos
xor
aad
inc
pop
jns
imul
lds
add
scas
sbb
cmp
mov
pop
mov
sub
pushf
cwtl
imul
test
mov
dec
sbb
cwtl
inc
outsl
lock
adc
aam
or
mov
mov
lret
sub
fstps
push
jne
loop
or
je
fsubr
lret
arpl
clc
push
iret
frstor
pop
loope
fbld
out
je
mov
dec
adc
pop
xlat
aad
mov
hlt
adc
loope
sbb
cs
cmp
xchg
adc
xor
and
imul
das
cltd
push
cmc
bnd
mov
cmpsl
jge
std
jle
push
and
dec
xor
xchg
cmp
jecxz
or
pop
or
jp
out
jecxz
xchg
imul
insl
cld
stos
cltd
lds
outsb
adc
stos
cmp
pop
idivb
insb
xor
es
scas
sbb
or
and
pop
test
mov
std
and
rorl
dec
outsl
or
jbe
push
flds
add
ss
mov
int
xor
mov
xlat
fcoms
jns
repnz
mov
add
loopne
lretw
cmp
leave
xchg
add
xlat
inc
add
xor
sbb
sbb
mov
scas
jge
mov
sbb
mov
add
leave
adc
stos
push
dec
mov
or
jmp
mov
sub
sbb
and
xchg
insb
add
push
jge
cmp
push
sub
loope
push
repnz
jl
lds
or
imull
shll
fildll
jmp
push
notl
mov
dec
lret
dec
in
fcoml
jmp
inc
jecxz
mov
cmc
lret
jae
movb
aaa
cmp
push
push
stos
cli
xchg
enter
cmpsb
fnstsw
mov
mov
int
sub
dec
mov
iret
adc
dec
fstsw
push
cmpsl
lods
cmp
xor
rcrl
cmp
cwtl
cmp
bnd
in
das
push
adc
mov
out
or
cmp
push
and
cmp
push
cmp
js
scas
mov
push
fstps
jg
jp
ret
mov
xchg
lods
js
add
or
mov
or
data16
arpl
xlat
cli
test
lea
xor
inc
sbb
xor
jbe
push
sub
cltd
mov
sbbl
outsl
jno
movsl
sbb
push
jmp
fxtract
test
dec
stos
inc
mov
sub
pop
jecxz
xor
push
mov
sbb
jnp
mov
jnp
pop
xor
cmp
repz
mov
pop
out
movsl
int
xchg
sbb
mov
mov
xchg
push
loopne
push
dec
stc
jnp
cmpsb
jo
bound
les
imul
icebp
les
mov
addr16
movsb
jo
jo
js
movsb
or
stos
jmp
imul
dec
jp
push
aas
pop
inc
shrb
lret
jbe
arpl
push
dec
clc
out
mov
bound
xor
ds
mov
test
pop
bswap
xlat
jb
icebp
insb
push
sbb
adc
sub
push
stc
iret
fs
fldenv
push
mov
decl
adc
or
negb
mov
mov
dec
cmc
xchg
dec
fldt
ds
push
test
cwtl
push
pop
adcl
mov
pop
push
popa
enter
pop
jmp
add
push
adc
jecxz
jnp
fistpl
or
rcrl
jns
pop
mov
adc
cmp
imul
lret
lea
add
mov
aaa
or
xchg
mov
notl
cmp
pop
pop
mov
pmullw
push
ds
jecxz
scas
arpl
sbb
cmp
imul
lock
aad
pusha
jnp
and
decl
dec
inc
ret
addb
jge
xchg
xor
outsl
aaa
sarl
stos
sub
mov
inc
in
in
fidivs
andl
inc
push
sarl
pop
push
roll
cmp
inc
shr
in
xchg
push
loop
sbb
lds
cltd
pop
push
xchg
insb
push
push
lahf
push
gs
mov
sbb
mov
xchg
jnp
lcall
test
sbb
add
cmp
sahf
sti
push
sub
sub
insl
outsl
add
cwtl
daa
adc
mov
inc
xchg
cmp
inc
push
inc
jl
or
xchg
sti
ret
cli
adc
lods
dec
pop
dec
arpl
sub
xchg
xor
imul
sub
jl
stos
sbb
push
lcall
inc
fnstcw
xchg
sbb
add
pop
xor
bound
ljmp
scas
cmp
nop
ds
xor
inc
mov
ret
hlt
fwait
cmp
jge
pop
or
shl
fwait
xor
pushf
inc
xchg
cld
push
inc
int
loope
mov
push
mov
mov
incl
mov
push
pop
push
aas
cmp
daa
sbb
xor
pushf
aas
or
out
jmp
in
inc
jb
pop
es
stos
push
cmpb
sti
dec
pop
jmp
loop
pop
adc
lret
add
jb
mov
fistpl
add
push
out
mov
sub
xlat
push
push
arpl
mov
out
test
fdivl
or
cmp
test
add
out
cli
xchg
jnp
jg
leave
pop
mov
adc
fidivl
data16
adc
sahf
jecxz
jne
daa
popa
lock
fld
arpl
sti
sub
test
lock
push
imul
mov
fistps
jecxz
in
pop
enter
popa
pop
out
adc
inc
cmpsl
inc
mov
lea
xchg
sbb
push
xor
das
rorb
mov
mov
and
daa
dec
lods
cmpl
fcoml
imul
or
ds
fstp
or
dec
mov
jl
jge
jo
xor
mov
dec
add
inc
xor
insl
sbb
repz
push
aas
fmull
xor
xorb
aas
dec
dec
arpl
pop
cli
push
mov
mov
js
iret
inc
aad
int
mov
jmp
pop
dec
add
imul
movsl
mull
sub
repnz
xor
test
out
ja
imul
inc
mov
fs
fdivrs
dec
adc
aam
jb
mov
jnp
jno
cs
mov
cmpsb
int
les
ds
xchg
adc
mov
popf
aad
sub
pop
add
xchg
add
pop
js
scas
ret
pop
pushl
sbb
pop
inc
popw
xchg
xchg
cmpsl
in
into
mov
jne
into
mov
in
popa
or
cmp
pop
mov
push
imul
fnstenv
ds
xor
fsts
scas
mov
mov
sbb
cld
adc
pop
xor
popf
data16
xorl
aaa
dec
xor
movsb
imul
js
ret
idivl
xorb
jnp
imull
es
mov
dec
cmp
jnp
push
lret
sub
hlt
inc
jp
daa
mov
mov
dec
mov
xchg
outsl
orb
xchg
gs
xchg
outsl
adc
rorl
xchg
shll
sbb
js
push
out
dec
sti
push
clc
pop
add
xchg
xchg
xchg
add
jno
int3
jmp
ljmp
inc
fnstcw
or
xchg
xor
mov
nop
mov
sti
scas
out
adcb
pop
daa
push
mov
hlt
add
jl
jns
mov
in
or
mov
cmp
xchg
and
cmp
leave
pop
cmp
mov
pop
and
lock
pop
dec
mov
xor
sti
add
pop
icebp
push
dec
xchg
fwait
push
shrb
mov
stc
int3
xchg
je
mov
xor
push
jb
test
fnsave
jg
in
arpl
mov
inc
into
scas
rcrl
popf
pop
data16
jp
rorb
stos
std
fisttpll
fldt
mov
repnz
jecxz
bound
cwtl
add
push
ja
add
xorl
in
insb
jl
dec
mov
lcall
in
nop
movntps
jmp
and
xor
cmc
push
jns
mov
add
loop
mov
lock
mov
pop
adcl
sub
imul
gs
frstor
sub
sub
test
jb
rcll
mov
jmp
fcoml
ljmp
lret
insb
mov
mov
mov
inc
xchg
inc
fs
jnp
mov
sub
push
add
loope
mov
or
cli
adc
fstps
pushf
push
in
mov
mov
repz
in
mov
or
in
push
pop
xchg
xor
cld
arpl
inc
test
xlat
xchg
mov
and
faddl
sti
mov
ja
adc
stc
jg
gs
in
repnz
push
xor
push
sbb
sub
jg
shlb
mov
sub
and
and
ja
sbb
pop
mov
pop
xchg
xchg
test
add
cmc
scas
add
push
and
xchg
adc
test
lods
aad
jb
cmp
imul
out
push
xor
or
aas
inc
sbb
cmp
jle
aad
inc
sub
cmp
mov
xchg
out
nop
add
mov
imull
cmp
or
cmp
notl
adc
dec
pop
mov
stc
testb
imul
push
inc
icebp
jp
data16
add
sub
cld
mov
pop
adc
repnz
jo
fnstenv
adc
pop
fcmovb
push
nop
pushf
mov
jb
xor
sbb
jmp
sbbl
loop
rol
push
mov
sub
notl
imul
out
loop
enter
mov
stc
pop
inc
cmp
xor
pop
outsl
adc
in
lds
ja
test
cmpb
push
or
mov
add
sub
clc
sub
xchg
in
inc
mov
lret
nop
add
push
out
rcll
fstpt
js
lret
test
out
mov
cli
xlat
stc
adc
xor
dec
movsl
clc
aad
das
ja
addr16
xchg
sbb
ret
add
lea
mov
mov
dec
xchg
mov
fstpl
into
push
decl
xchg
out
mov
dec
dec
imul
pop
mov
testl
loope
jns
push
lahf
cmpsl
insb
dec
into
jns
pop
push
xor
nop
scas
add
les
xchg
or
pop
xchg
mov
out
push
mov
inc
aam
push
mov
gs
push
mov
push
ds
xor
xor
dec
inc
push
pop
mov
jo
dec
pop
pop
mov
pop
fsts
insb
jg
jmp
inc
outsl
js
sbb
push
xor
mov
or
pusha
pop
imul
pop
fistl
negb
add
mov
jmp
xor
dec
repz
sbb
insl
sub
stos
cmpsb
and
arpl
sbb
gs
pop
sub
xchg
adc
sbb
mov
cmp
test
das
sti
dec
xor
sbb
outsb
popf
les
pop
ja
shlb
inc
mov
shrb
je
stos
mov
and
loope
cmp
xorb
add
xor
dec
pop
sahf
and
pop
cmp
ljmp
jnp
cltd
pop
or
setl
jbe
mov
mov
mov
idiv
add
cld
shlb
xor
insb
xchg
pop
dec
outsb
arpl
shrb
push
xor
lret
lods
aad
cltd
stos
mov
dec
out
ja
ficoms
ret
orb
int
in
mov
and
mov
movsl
data16
inc
sti
fisubrl
fldcw
and
push
in
xchg
sbb
push
dec
push
fidivrs
cltd
push
mov
lret
mov
mov
sbb
addr16
js
das
mov
mov
jo
movsl
xor
dec
movsl
xchg
jbe
mov
mov
out
movsl
out
push
bndstx
decb
cmpsb
push
mulb
adc
nop
aas
mov
lahf
adc
push
and
pop
xchg
adc
mov
pop
aas
adc
jae
sbb
fs
std
rclb
jbe
addr16
xor
shlb
mov
and
scas
ror
call
xchg
fisttpll
or
push
nop
pop
jl
inc
icebp
js
jno
dec
mov
rol
cli
adc
nop
inc
loop
and
shll
gs
adc
call
fs
add
lcall
push
jns
add
cmc
add
inc
sub
sbb
in
jns
dec
inc
add
add
push
icebp
mov
sbb
mov
cmp
sbb
cmp
xor
jbe
clc
in
pop
int
mov
pop
and
push
xchg
pop
pusha
add
inc
push
and
je
int
sarb
mov
or
pop
imulb
lds
mov
sbb
xchg
arpl
mov
fs
or
test
pop
jecxz
lods
lea
jmp
loopne
inc
outsb
pcmpgtb
jg
sbb
loope
dec
jns
or
ljmp
sub
jl
stos
int3
xor
scas
out
fwait
xchg
sbb
mov
push
rclb
inc
push
shl
mov
ret
fwait
in
packuswb
jb
push
outsb
stos
inc
mov
ret
scas
es
push
addr16
movb
pop
aam
sbb
imul
movsl
ds
adc
pop
xchg
fistps
inc
sti
loop
xchg
das
nop
lods
or
cs
add
inc
lods
int
sbb
insl
in
fdivs
jp
stos
or
sub
dec
fsubs
push
xor
pop
jmp
dec
jo
cld
addr16
cld
mov
andl
jp
jge
cmp
xor
sbbl
fiadds
sbb
inc
loope
repnz
out
sbb
push
rep
jae
dec
aam
add
inc
pusha
in
xor
std
repnz
push
js
adc
outsl
xchg
mov
push
shl
lock
jmp
add
in
fisubrl
sub
pop
loopne
fsts
inc
rcll
lods
mov
sbb
inc
jbe
add
insb
mov
jbe
and
push
push
pop
in
stos
in
fistpll
fstps
je
in
mov
xchg
sub
dec
push
cmp
sub
sub
lcall
and
and
mov
icebp
iret
inc
jp
mov
jo
in
imul
jle
sti
and
test
or
clc
sub
xor
leave
movsl
loope
dec
insl
mov
push
das
mov
add
adc
cmp
sbb
das
mov
xor
sub
mov
out
dec
and
mov
mov
mov
rcrb
daa
dec
cmpsl
dec
jecxz
dec
jno
xchg
addr16
and
out
repnz
mov
cmpsl
js
cmpb
repz
out
adc
mov
push
mov
cmp
push
jne
cltd
cmpsl
mov
dec
mov
mov
repz
mov
outsl
jmp
repz
dec
xor
bound
inc
push
cli
jb
xor
inc
mov
dec
add
in
outsl
add
std
aad
mov
fstpt
inc
sub
stos
lods
cmpsb
jle
xchg
sti
idivb
xchg
push
iret
cmp
jb
and
push
xchg
incb
aad
jno
fildl
out
pop
pop
ss
and
pop
xor
aaa
repnz
fs
les
dec
xlat
dec
loope
jns,pt
mov
xchg
xor
pop
dec
add
jbe
add
les
cmp
stc
cwtl
fidivrl
popa
sub
fnsave
cltd
add
push
jb
xchg
rcll
cmp
sub
int
ret
jmp
mov
std
adc
outsb
pop
mov
cmp
data16
mov
mov
push
fdivl
pop
and
jp
jecxz
xchg
mov
cmp
lahf
std
outsb
ja
loope
lock
lock
xor
cli
fisttps
int3
dec
cmpsl
cmpsl
adc
xor
jns
nop
fstp
sub
addr16
aas
jge
hlt
pop
lcall
bound
or
push
xor
fmul
iret
getsec
stos
repnz
mov
test
lcall
push
iret
sub
mov
xchg
add
popf
das
lcall
pop
push
mov
mov
fistpl
lcall
bswap
std
je
jno
imul
lcall
inc
lods
decl
das
sub
in
push
mov
int3
jno
aas
aas
lock
xor
push
mov
loop
sub
cmpsb
xchg
sub
mov
xor
dec
pushf
inc
cmp
xchg
js
mov
push
lcall
testl
lahf
sti
push
stos
xor
outsb
andl
addr16
fadd
xchg
mov
ret
mov
xchg
pop
and
ds
fwait
andl
out
push
cmpsb
xchg
pop
cltd
push
push
or
scas
add
xor
dec
xor
out
push
add
repz
sbb
adc
clc
inc
mov
jno
xchg
dec
nop
fabs
dec
sub
sarb
ja
je
jp
inc
xorb
loop
and
push
push
in
fiaddl
stos
dec
sahf
aam
mov
sarl
cmp
add
jg
mov
gs
cmp
cltd
push
sbbl
mov
outsb
rclb
jp
cmp
and
arpl
loope
add
fstpl
push
mov
loope
hlt
jge
sbbb
sbbl
jg
fwait
jne
mov
push
cwtl
inc
popa
pop
add
sbb
popf
cmpsb
and
jno
inc
orl
jmp
pop
mov
dec
mov
pop
push
popf
fnstenv
pusha
lret
mov
mulb
sbb
pop
sub
idivb
xlat
xlat
xchg
sub
xchg
xchg
in
fadd
movsb
cmp
mov
jle
int
fcoms
shrb
fwait
xor
add
mov
inc
mov
call
loop
xor
orb
xor
adc
cmp
repz
sub
lock
fiadds
leave
mov
subb
js
rclb
enter
sub
or
jmp
mov
push
outsb
add
mov
out
sbb
clc
into
sub
call
out
mov
sbb
lds
inc
inc
call
rolb
dec
cwtl
js
xor
sbb
cmp
sahf
in
push
pop
call
xchg
aad
outsb
lock
push
sarl
mov
repnz
pop
add
push
fisubs
cmpsb
loop
cmc
add
add
mov
jo
jle
pusha
icebp
lea
fmulp
stos
lds
aad
fisttpl
in
js
inc
xchg
lahf
jnp
nop
sbb
fwait
out
dec
add
sbb
cld
add
and
lahf
jnp
sbbl
sub
lret
imul
inc
shrb
fs
dec
xlat
pop
add
xor
mov
fisttps
push
stos
mov
lahf
mov
pop
jmp
xchg
push
inc
cmp
mov
dec
sbbl
push
dec
cwtl
jge
lods
add
jno
dec
sbb
dec
inc
fldcw
fs
shl
push
inc
jae
inc
pop
mov
jne
sti
cmc
hlt
jae
lds
orb
add
adc
je
or
mov
xchg
sub
mov
rcll
xor
dec
scas
out
arpl
lods
test
fisttps
sbb
cli
loop
dec
loop
pop
out
sub
adc
fwait
aad
hlt
push
outsl
sbb
mov
pusha
in
inc
add
sub
fnstcw
cmpsl
jge
or
aad
push
in
sbb
sbb
stos
int
sub
lods
mov
add
shr
scas
push
enter
and
push
inc
dec
and
std
adc
mov
into
insb
sahf
fildl
shll
dec
mov
sub
inc
ss
ret
pop
orb
mov
xchg
arpl
rcll
mov
test
pop
divl
dec
jnp
xchg
mov
aad
jnp
xchg
mov
loope
or
and
popf
add
inc
push
out
xor
repnz
scas
inc
pop
ss
popa
add
int
lods
aaa
andb
lock
sub
in
ficoml
xor
insl
cmp
inc
aam
movb
inc
dec
std
lret
push
push
and
cmp
jns
icebp
adc
pop
or
mov
inc
stos
insl
sub
pop
stc
repnz
dec
cmpsb
sbb
out
jns
cld
jge
xchg
gs
jnp
inc
int
cmp
movsb
add
pop
or
out
loope
and
xor
ret
iret
bound
scas
sbb
seta
jnp
add
add
out
and
xchg
jg
ret
movsl
mov
pop
divb
xor
dec
scas
ja
lret
shrb
les
push
mov
jne
jae
xchg
push
jmp
dec
adc
cmp
sbb
pop
or
cmc
cmc
push
adc
adc
int3
ljmp
stos
out
mov
sbb
popf
xchg
es
call
out
push
cmc
mov
loop
sub
orb
scas
pop
adc
xchg
sub
pop
mov
data16
lahf
insb
and
xchg
pop
pushf
cltd
sahf
sub
stc
mov
or
mov
test
mov
inc
push
push
rcrl
filds
sbb
and
push
xor
pop
in
fldl2e
jae
ljmp
xchg
fldt
sub
scas
xchg
mov
clc
sub
or
sub
pop
insl
lods
ror
fmul
jbe
sbb
mov
mov
addb
xchg
in
int
clc
test
and
cmp
lods
inc
jnp
xor
xchg
jbe
fimuls
cwtl
xchg
and
sub
out
mov
filds
xor
iret
test
dec
jne
mov
push
les
mov
dec
xchg
cmpsb
out
mov
out
push
daa
outsb
sbb
mov
daa
jl
jb
movsl
inc
jbe
lea
in
mov
adc
and
jle
cmp
les
cmp
insl
idiv
cmp
loope
pushf
daa
and
sub
push
push
sbb
pop
or
fistl
add
fdivs
cmp
xchg
jne
or
adc
insb
add
fwait
mov
mov
mov
aas
push
mov
pop
jecxz
pop
shrl
mov
rcr
stos
faddl
call
dec
adc
test
mov
stc
pop
mull
or
js
xchg
scas
mov
or
xor
inc
jne
cmp
es
js
fmull
push
inc
cld
or
ja
sub
pop
aaa
lock
xor
mov
cltd
lods
out
test
mov
hlt
mov
xor
pop
cmp
aam
imul
add
pop
call
jge
icebp
outsb
mov
push
hlt
adc
push
fmul
pop
sbb
ljmp
push
ret
std
outsl
fucomip
pop
xor
ljmp
xchg
cmp
mov
push
add
pop
fisttpll
mov
cltd
stos
dec
cmp
push
xchg
push
push
adc
frstor
ja
mov
or
pop
aad
stos
lock
aaa
arpl
push
inc
ficoml
fcmovu
pop
shll
mov
dec
test
or
push
jns
cmp
fistps
insl
cmp
dec
xchg
mov
lret
insb
sbb
mov
mov
sar
mov
mov
adc
int3
in
fstl
hlt
jne
pop
in
inc
mov
adc
sub
fst
mov
xor
inc
sarb
dec
lret
add
mov
cltd
xlat
lcall
lods
mov
jecxz
sub
dec
cwtl
mov
or
mov
push
clc
sbb
lahf
mulb
jge
shl
jno
sti
pop
mov
dec
dec
mov
les
cmp
ret
xchg
rorl
jnp
nop
adc
pop
jb
sub
mov
mov
mov
sbbb
cbtw
push
insb
add
adc
inc
mov
xchg
inc
aam
xor
out
pop
imul
dec
hlt
stos
popf
test
cld
push
ljmp
sub
pop
cmc
lods
and
pop
lea
jecxz
mov
push
jae
lret
inc
ss
xchg
push
imul
sahf
mov
icebp
xchg
mov
cltd
out
xchg
cmp
mov
ss
fldenv
outsb
in
movsl
mov
dec
pop
push
dec
sbb
fs
jg
push
adc
shr
push
sub
mov
ss
in
icebp
ret
mov
pop
push
iret
mov
add
scas
mov
push
or
outsb
adc
fwait
mov
in
cmp
rolb
mov
push
fstpt
push
aad
sbb
push
mov
stc
jo
adc
icebp
movsl
insl
xor
fidivs
jl
outsb
adc
popa
sti
mov
je
mov
insl
add
cmp
cld
jmp
pop
int3
sti
loopne
mov
movsb
mov
fs
cmp
enter
stos
cld
popa
and
jns
pop
sarl
xlat
movsb
mov
ljmp
sbb
xchg
dec
inc
pop
or
test
lods
inc
outsl
fmuls
lcall
in
pop
sub
and
xchg
inc
mov
mov
mov
loopne
and
mov
pop
sarb
out
loopne
sub
sbb
inc
out
jb
dec
mov
xchg
outsb
push
aad
mov
add
rcr
xchg
sub
sbb
sarb
fidivrs
xchg
push
clc
mov
and
in
pusha
mov
imul
cmp
mov
add
fbstp
push
inc
ds
dec
dec
lret
les
loopne
imull
sbb
sub
js
test
inc
sbb
push
push
mov
popf
dec
ss
mov
dec
xorl
aaa
dec
dec
pop
sbb
pop
outsb
cmp
dec
enter
mov
out
sbb
xchg
std
sbb
arpl
mov
ds
xchg
lret
lock
cmp
mov
sbb
inc
mov
rorb
jbe
add
xchg
arpl
outsb
test
cltd
icebp
sbb
cmp
aaa
popa
jnp
push
adc
sub
cltd
inc
enter
dec
push
lds
xor
sbb
pop
inc
scas
push
repz
stos
mov
ds
push
aas
or
dec
cwtl
mov
jns
jnp
lock
aas
lock
fisttpll
hlt
jo
test
and
clc
mov
lret
in
enter
int3
sbb
xchg
sti
sub
jae
cli
inc
xchg
std
nop/reserved
inc
cltd
pop
js
dec
add
out
push
xor
xlat
mov
lcall
add
sub
xlat
xchg
addl
das
fstpt
mov
dec
sti
cld
inc
mov
sub
or
jae
movsl
lods
fiaddl
lret
test
outsb
sbb
inc
int
push
das
je
mov
jo
jb
cmp
push
rcr
xchg
jae
sub
roll
jo
cmc
adcl
dec
add
ret
add
jnp
inc
dec
dec
sub
sub
xchg
adc
adc
mov
fdivr
add
push
inc
push
push
lock
psubusb
jno
rclb
adc
mov
ljmp
loope
xchg
cs
adc
outsl
add
js
int
addb
loope
jne
cmp
aam
in
iret
notl
sub
out
mov
mov
movsb
adc
stos
jbe
mov
xor
and
sub
imul
pop
inc
clc
push
inc
or
xor
inc
mov
test
test
sbb
repz
lock
into
aaa
data16
ljmp
push
ficompl
js
imull
inc
pop
ss
pop
popf
lcall
add
les
ret
repnz
xchg
push
add
aaa
xchg
push
xchg
push
adc
addl
xchg
sub
mov
jns
outsl
cld
sbb
repz
sbb
pop
xchg
gs
dec
cmp
cmp
gs
punpcklbw
mov
mov
dec
lcall
pushf
add
pop
push
add
dec
dec
leave
add
cmpsb
cwtl
push
xor
enter
sub
cmpsb
push
sbb
and
jmp
loopne
mov
and
addb
cmpsb
data16
outsl
adc
aam
and
mov
pop
loopne
je
jne
pushf
sub
orb
pop
add
sbb
mov
dec
fwait
push
and
in
mov
out
ret
outsb
mov
ja
lcall
cmp
inc
in
mov
sbb
fbld
aad
inc
into
pop
push
dec
shrl
adc
loope
jno
lret
adc
insl
add
imul
aam
jno
mov
test
push
stos
xchg
push
and
mov
out
outsb
pop
xchg
xor
xchg
lret
sub
mov
jnp
or
push
outsl
inc
and
insb
pop
bound
push
cmpb
mov
int3
icebp
and
pop
xchg
dec
scas
cmp
xchg
neg
adc
and
jmp
push
dec
sar
iret
test
cmp
aam
mov
and
push
cmc
sub
out
out
dec
adc
jg
outsl
cmpsl
lods
in
out
pushf
cmpsb
scas
pop
or
or
xor
gs
mov
jmp
lret
inc
add
inc
xor
sbb
pop
testl
call
inc
je
pop
test
cmpl
fwait
sbb
bound
data16
stc
sub
arpl
push
pop
push
cmp
dec
adc
sub
test
aas
cmp
ret
hlt
mov
bound
xchg
pop
out
aaa
movsb
insl
cwtd
adc
ss
mov
xorl
xchg
add
pop
std
adc
out
sbb
jle
mov
dec
jecxz
shll
subl
jp
mov
push
insb
popf
inc
adc
test
push
mov
es
jmp
and
fdivs
lcall
imul
add
adcb
repnz
out
pushf
popa
adc
jmp
out
add
mov
repz
es
addb
pushf
sbb
xchg
jl
ja
cmp
adc
insl
and
in
popa
gs
inc
js
ljmp
rolb
mov
pop
inc
sbb
push
test
pop
stc
adc
ss
lcall
ljmp
dec
and
sub
sub
hlt
cmp
sbb
out
shl
loopne
mov
scas
xor
repnz
mov
sbb
ror
xchg
mov
cli
cs
jmp
ljmp
mov
inc
int3
and
lret
inc
movzwl
sbb
and
push
loope
ljmp
andb
andl
mov
loop
jno
das
repnz
in
adc
sub
aad
inc
lahf
mov
mov
mov
and
push
sub
cld
push
jp
leave
xchg
inc
inc
sbb
pop
insb
gs
adc
out
cmp
cld
mov
inc
es
je
rorb
dec
loope
push
lods
mov
xor
inc
cmp
add
stos
push
mov
fisubrs
push
cmp
ds
idiv
mov
dec
outsb
loopne
add
dec
jmp
cltd
dec
xor
and
repz
cltd
pop
stos
push
divb
test
push
aaa
sbb
adc
lds
xor
cmp
inc
jecxz
push
add
adc
stos
fisubl
dec
aaa
stc
iret
in
stos
rcll
xchg
pushf
shr
jle
fidivs
cli
cmc
ret
add
sub
cmpsb
xor
xor
jae
jmp
cwtl
pop
lcall
iret
fsubl
roll
mov
jge
lret
mov
popf
aam
jno
cld
fists
push
sub
push
pushf
fisttpll
mov
xchg
enter
and
aaa
cmp
dec
push
repz
clc
xchg
and
cmpsb
ja
push
sbb
cmp
data16
negl
mov
dec
cld
rolb
push
mov
mov
js
in
xchg
jp
test
lret
mov
xor
fcmovne
aam
mov
mov
lahf
dec
xchg
pop
lds
lea
arpl
push
jmp
movsb
sub
mov
lret
lock
inc
ret
or
lcall
es
mov
add
out
imul
jae
sarl
cmc
or
sbb
xor
fbstp
mov
adc
push
mull
insb
clc
fsub
cmc
xchg
and
xor
in
scas
add
cltd
lret
adc
data16
shll
pop
pop
add
test
xor
in
push
mov
out
mov
out
stos
cld
cmp
mov
dec
testl
loopne
mov
ret
or
inc
cmp
xor
imul
or
inc
jne
imul
xchg
call
dec
das
add
mov
dec
out
fistl
push
mov
sti
subl
sbb
stc
lret
cmp
fisttps
fwait
add
mov
repz
outsl
out
stos
and
lret
fwait
xchg
mov
mov
cwtl
push
enter
ljmp
cmpsb
sub
fadd
dec
push
inc
mov
lret
loope
mov
mov
mov
pop
scas
sub
repz
outsl
sub
xor
nop
cmp
mov
pushf
sti
cmpsl
jno
or
xchg
mov
dec
int3
add
sarl
lahf
push
push
adc
push
cmp
mov
filds
daa
repz
lahf
jecxz
inc
fisubrl
orb
inc
pop
cmpsl
dec
pop
scas
or
xchg
enter
in
stos
mov
inc
fs
sub
add
out
push
mov
jnp
lret
in
repz
sbb
imull
in
cmpsl
fsts
mov
cmp
mov
pop
data16
jl
sbb
arpl
les
add
add
mov
divl
xchg
pop
push
cmc
cmpb
pop
negl
outsb
push
movaps
push
insb
mov
in
inc
jns
jnp
icebp
cmp
cmp
sti
rcrl
jb
push
or
fs
loopne
das
pop
loope
dec
adc
dec
arpl
ret
dec
xlat
or
insb
cmpsl
xchg
add
cmc
enter
scas
xchg
scas
mov
leave
into
add
cmp
stc
call
mov
dec
inc
jge
mov
lds
stos
movsl
jbe
sbb
push
push
stos
mov
cmp
loop
xchg
adc
jl
adc
or
mov
call
mov
sbbl
cli
mov
sub
push
xor
cmp
fs
ret
add
stos
pop
testb
push
xor
xchg
sbb
mov
mov
imul
mov
gs
push
pop
aad
sub
addr16
std
test
imul
je,pt
push
sbb
push
push
inc
mov
mov
arpl
sbb
cmp
sahf
pop
push
sub
sahf
movsl
cmp
or
shr
inc
push
sarb
cli
xor
aad
loope
xchg
sub
mov
push
fsts
pop
mov
pusha
push
cli
pop
mov
jp
dec
int
mov
cld
es
xchg
add
pop
hlt
push
sbb
jb
sub
and
repnz
and
mov
shll
sub
out
jecxz
add
add
stos
pcmpgtw
mov
mov
mov
xchg
push
sbb
dec
into
shlb
popf
xor
lea
pop
push
pop
stos
in
push
testl
and
lods
shl
mov
push
push
xor
mov
fdivrs
movsb
into
cld
mov
rcl
jae
stc
stc
mov
ret
rcll
adc
dec
hlt
jbe
ds
std
ljmp
pop
insl
sarb
iret
jo
mov
jne
xor
js
mov
xor
test
sbb
imul
stos
mov
jge
in
shrl
rol
leave
addl
test
cmpsb
cld
bound
cmpsl
into
mov
ret
bound
enter
inc
loopne,pn
pusha
test
ffreep
clc
in
fnstsw
mov
xor
test
jmp
in
loop
mov
mov
and
pop
dec
adc
inc
repnz
hlt
lret
fsubs
add
dec
inc
jb
loopne
or
cltd
jle
jp
mov
mov
lods
jmpw
mov
je
std
mov
in
pushf
push
inc
xchg
mov
pusha
mov
and
out
jnp
in
daa
xlat
xchg
in
mov
and
in
arpl
js
out
xchg
add
cmp
mov
jmp
lods
mov
inc
cld
add
mov
or
cmpsl
cmpsb
sub
cli
lret
lods
xchg
mov
aaa
push
mov
cmp
push
lock
cmp
sbb
push
and
ljmp
dec
stos
and
ljmp
lods
inc
addl
std
add
dec
mov
mov
loope
fstps
in
push
mov
and
stos
imul
fdivrl
cmp
fstl
out
fwait
mov
mov
mov
mov
cs
sub
adc
bound
and
stos
lea
pop
sub
push
pop
cmp
jbe
inc
mov
mov
fidivs
lret
jae
fisubrs
mov
cmpsb
and
das
test
push
jb
mov
jae
cmc
iret
cmpsb
jmp
mov
cmp
decl
xchg
sbb
mov
in
xchg
mov
inc
shr
fistl
mov
in
cld
flds
and
xchg
push
out
mov
dec
sub
or
xor
aas
add
jno
notl
push
mov
mov
adc
xchg
lret
rol
incb
mov
mov
pop
push
and
xchg
sbb
add
mov
test
xchg
mov
aaa
and
les
out
cli
or
test
bound
ret
cltd
push
fildl
mov
mov
es
and
jge
fists
inc
fldl
imul
adc
inc
outsl
out
or
repz
imul
enter
fwait
mov
adc
imul
cmpsl
fidivl
arpl
aam
push
data16
fs
jne
imul
or
mov
push
pushf
test
inc
pop
loop
sarb
mov
jb
test
jp
les
fucom
dec
fistpll
push
cmpsl
dec
decl
mov
jnp
test
inc
jg
inc
test
cmp
mov
fimull
adc
push
repz
and
mov
insl
pop
mov
jne
daa
xchg
pushf
mov
jmp
push
ret
push
pop
push
rclb
adc
xor
cmpsl
neg
sbb
cld
mov
jmp
inc
mov
xor
cmp
mov
aam
adc
insl
js
xchg
push
pop
sbb
stc
jns
mov
pushl
jl
xor
lret
aam
stc
jle
sbb
fmull
add
mov
push
popf
je
jns
lock
addr16
aaa
sti
cmpsb
xchg
hlt
jb
dec
and
pop
pop
add
in
es
sbb
std
jb
xor
jae
jo
clc
jp
fucom
call
out
stc
xchg
pusha
xchg
lods
and
dec
dec
popf
nop
leave
dec
and
mov
les
aad
and
push
sub
lret
into
cmpsb
addl
cltd
test
mov
shll
sbb
pop
mov
push
mov
jno
nop
push
cmp
adcb
cli
pop
or
mov
dec
jae
sub
dec
jo
jge
je
out
not
std
repnz
jo
dec
ffreep
pop
in
pop
pop
into
lods
cmpsl
sub
cwtl
push
fisubrs
mov
outsl
push
cmpsl
add
arpl
jo
movb
sahf
mov
jp
or
mov
rorl
and
lods
data16
out
add
lods
add
clc
pusha
jp
popa
or
aas
movsb
sbb
xchg
test
stc
and
cmp
sub
mov
add
bswap
or
ret
jmp
mov
fld
adc
arpl
addr16
add
adc
int3
dec
dec
xchg
ljmp
or
inc
adc
lea
sbb
notl
cli
test
call
fucom
ja
mov
jge
xorb
outsb
adc
and
out
popf
xor
lret
add
fildll
pop
leave
push
pop
flds
jg
pop
inc
imul
bound
dec
rep
into
pop
xchg
xchg
sbb
subb
cld
xchg
fiaddl
pop
nop
mov
dec
push
push
test
xor
dec
push
push
outsb
cmp
shl
leave
push
or
nop
mov
in
xchg
jge
xchg
pop
add
xchg
mov
flds
ret
cs
vcmpss
push
sbb
stos
mov
pop
dec
cmpsb
enter
mov
in
loop
cld
lret
and
lds
xchg
leave
inc
jle
aad
repnz
push
jp
leave
jecxz
mov
pop
sbb
xor
sbb
mov
pop
movsb
cs
mov
inc
mov
nop
cs
rorl
outsb
cmp
loopne
mov
fwait
loop
cli
int
shlb
mov
sbb
xchg
int3
and
cmp
push
xchg
xor
cmp
jbe
std
lcall
jb
rol
mov
and
iret
mov
dec
cmp
dec
jmp
nop
dec
les
loopne
stc
mov
push
popf
mov
xor
xchg
shll
lock
push
mov
and
outsl
pop
repnz
lods
mov
inc
dec
cmp
pusha
dec
pop
adc
scas
xor
sbbb
mov
mov
add
mov
out
xchg
mov
arpl
sbb
push
cmp
mov
adc
out
cmpsb
mov
inc
add
jge
mov
shlb
lcall
ja
xchg
sbb
dec
subb
sahf
and
or
dec
repz
adc
sar
adc
or
sbb
cs
push
icebp
mov
mov
cmpl
shl
jnp
insl
lcall
lret
scas
mull
js
xchg
in
insl
shrb
jcxz
fmull
into
inc
les
inc
arpl
mov
xchg
data16
and
and
in
scas
cld
sub
xor
leave
xchg
and
sbb
popf
outsl
push
ljmp
lock
sub
hlt
test
mov
stc
adc
mov
rclb
dec
lcall
gs
decl
jl
mov
test
inc
mov
pop
mov
shl
lds
lcall
and
lahf
or
push
inc
lds
inc
fdivp
cmp
dec
rorl
mov
rcll
or
call
mov
shrl
jne
push
add
loop
and
out
jge
inc
or
test
shlb
leave
and
dec
adc
push
popa
imul
push
dec
pop
add
jge
mov
jnp
js
int3
jmp
and
ds
data16
lods
pop
jo
sub
in
addl
in
rorl
cwtl
xchg
or
xchg
xor
push
lea
or
ja
sub
or
into
push
pop
xchg
push
addl
out
or
repnz
mov
fwait
dec
xlat
mov
xchg
inc
imul
cld
add
lock
jbe
imul
jne
jae
add
push
jl
mov
mov
movsl
or
lods
loopne
test
cmpsl
adc
jne
mov
inc
pop
sti
cs
test
cmpsb
push
add
fidivl
bound
std
mov
je
jp
mov
icebp
mov
mulb
sbb
cltd
mov
sub
cltd
lds
ds
ljmp
adc
mov
or
xor
test
lock
jo
xor
ja
dec
dec
mov
lret
cmp
mov
imul
lods
mov
hlt
mov
cmp
in
jmp
out
xor
sub
inc
push
mov
inc
and
cmp
and
test
add
lret
jecxz
mov
out
popf
push
inc
notb
dec
gs
lea
aad
jbe
frstor
adc
push
push
sbb
lahf
sbb
dec
adc
cmp
imul
loopne
ret
fcoms
loope
test
xor
stos
xchg
jg
fistl
add
hlt
push
mov
sbb
cmp
fidivrs
ficompl
fimull
mov
xorb
inc
cmp
jnp
adc
mov
pop
outsl
bound
out
imul
leave
popa
push
jns,pn
add
inc
dec
setp
pushf
inc
testl
test
dec
das
arpl
sbb
sahf
fnstenv
int3
xor
ret
inc
popf
outsb
or
xchg
cwtl
mov
aam
and
add
mov
pop
push
jae
in
in
inc
cwtl
pop
jecxz
xchg
andl
rclb
hlt
mov
lods
addr16
loop
inc
shll
xchg
cmp
sub
adcl
fisubs
std
inc
les
mov
push
add
shrl
jb
iret
fmuls
mov
sub
fadds
ds
shll
nop
cmp
aas
xchg
push
adc
mov
movl
push
jbe
inc
xor
aam
arpl
leave
cmp
or
cmp
cmp
fwait
popf
fdivrl
rcrl
lcall
sbb
popa
shl
jae
cmp
mov
inc
xchg
inc
lahf
dec
shll
dec
pop
je
cmp
sub
xchg
out
outsl
mov
sbb
mov
in
jge
or
pop
jle
cs
scas
jae
push
test
push
add
sbb
add
mov
jl
push
vpermpd
imul
and
aaa
out
mov
inc
or
lret
icebp
fstl
mov
int3
cmp
sbb
mov
aam
push
cld
cmpsb
rcrl
pop
and
mov
sbb
and
sahf
push
push
cmpsb
into
jb
xor
and
mov
shrb
aad
cmp
push
jbe
adc
int
and
pop
add
or
sarl
loop
outsb
cltd
test
cmp
push
das
cmp
cmp
adc
or
dec
mov
push
sbb
sbb
push
scas
mov
ret
inc
push
scas
int3
data16
rclb
es
sub
xchg
flds
mov
cli
mov
mov
cmp
dec
jo
add
fcomps
out
inc
fstpt
xchg
jo
pop
loopne
out
adc
cli
or
arpl
and
adc
es
stos
mov
popa
mov
xor
ret
adc
outsb
push
lea
push
sbb
add
leave
xchg
mov
dec
rcll
call
pop
push
daa
lock
test
stos
stos
mov
pop
dec
cmp
dec
push
jno
lods
inc
sahf
ret
js
xlat
xor
or
xor
imul
mov
gs
rorb
leave
mov
cmc
inc
sahf
xchg
pop
std
hlt
mov
call
sub
leave
jbe
mov
mov
mov
repnz
repnz
mov
adc
mov
xor
xor
ljmp
fisubrl
xor
and
imul
cld
xor
cmc
sub
inc
repnz
int
pop
test
cmpsl
loope,pt
xchg
mov
add
cmc
cs
sbb
test
loope
sbb
hlt
lods
xchg
add
stos
and
cmpsb
xor
push
rclb
lret
push
push
pop
cmp
pop
lahf
pop
sub
cmp
sbb
jp
lahf
cmp
dec
xlat
ret
movsl
loopne
roll
xor
mov
adc
cld
movsb
cli
es
out
jge
mov
jo
outsb
call
lock
lods
adcl
fidivl
inc
and
mov
filds
sbb
sbb
mov
adc
mov
into
repnz
mov
pop
push
ror
jmp
sbb
inc
pop
push
jmp
addr16
cltd
and
out
inc
aaa
xor
xchg
nop
pusha
xchg
cs
push
xchg
mov
enter
loopne
nop
jae
lock
lods
push
mov
arpl
cs
jbe
scas
aaa
mov
test
push
lahf
out
mov
adcb
push
pushf
ret
jecxz
cmp
icebp
push
or
dec
inc
inc
in
jp
xchg
popf
or
jg
mov
daa
jb
out
push
insl
and
inc
xor
dec
and
mov
pop
rcl
xchg
scas
adc
ss
scas
cmp
sbb
in
jmp
lods
sub
cld
sti
push
fldl
je
and
aam
cs
push
cmp
mov
loop
jb
test
adc
in
lret
in
dec
fadd
dec
jns
mov
or
lods
xor
in
sbb
cmp
inc
and
sub
loop
gs
in
jecxz
mov
aam
clc
adc
or
xor
jo
and
mov
sbb
cs
sahf
and
jle
inc
insl
cmp
data16
sarb
shlb
iret
or
add
dec
jl
and
jne
xchg
push
xor
scas
in
cmp
inc
fidivrs
mov
jns
sti
mov
int
insb
adc
insb
xchg
outsl
inc
js
lret
sub
mov
in
mov
ds
rorb
mov
in
insb
jl
cmpsl
cmp
nop
pop
lods
sub
aad
into
xor
jne
scas
shr
aam
test
lret
hlt
jno
fwait
mov
jae
dec
or
push
std
ja
out
pop
pop
mov
or
test
jnp
es
sti
daa
lret
aaa
pop
test
and
shlb
bnd
xchg
or
mov
addr16
add
jno
xchg
stos
mov
pop
rcrl
rcrb
int3
pop
aas
das
mov
fcomip
mov
jb
out
pop
imul
dec
xor
mov
addl
inc
bnd
pop
aaa
sarb
and
jne
sbb
std
aam
fidivrl
aaa
jge
negb
xchg
inc
push
inc
repz
enter
rclb
mov
sbb
ret
aad
pavgb
jnp
adc
ds
setne
xchg
aam
cmp
mov
ja
je
lods
lret
push
out
orl
stos
shll
aam
xchg
xor
seto
test
add
xor
pop
test
nop
popl
xchg
xor
repz
ficomps
test
sub
fwait
mov
xchg
dec
stc
mov
cmc
in
out
sub
xor
fst
repz
inc
xchg
int3
xchg
dec
ret
cmc
es
xchg
xchg
mov
movsb
data16
jecxz
pop
mov
popf
jge
lcall
daa
adc
stc
aad
cmpsl
loop
cmp
inc
pop
xchg
stos
int3
clc
pop
and
lret
imul
sbbl
adc
lret
push
xchg
and
jbe
and
inc
dec
add
cs
jae
roll
das
sub
es
pop
test
and
int3
outsl
jne
addl
add
pop
or
and
adc
fxch
cmpsb
mov
pop
add
sub
aaa
lods
roll
out
sbb
lcall
mov
add
cltd
push
cmp
imul
mov
sbb
adc
sbb
pop
leave
or
mov
xchg
xchg
ficoms
push
dec
sbb
pushf
leave
xor
pop
pusha
into
insb
cmpsb
arpl
ret
sub
jo
jp
rcll
mov
imul
add
icebp
mov
sarl
push
adc
dec
mov
mov
jp
lods
and
repz
pop
pop
repnz
dec
mov
mov
mov
cli
inc
cld
hlt
xor
sub
inc
pop
fsub
cmp
mov
out
call
fs
inc
ret
add
push
and
sar
lods
jnp
ret
jmp
dec
lock
push
xchg
imul
out
hlt
sub
push
shlb
pop
aas
lock
fmuls
test
mov
sahf
nop
push
mov
aam
lods
sahf
imul
pop
fs
int
push
fs
adc
or
xchg
or
ficomps
aam
and
mov
in
adc
sbb
push
pop
adc
and
xchg
bound
add
cmp
push
adc
mov
in
lahf
mov
iret
dec
fdivrl
test
and
outsl
pop
fucomip
add
rorb
adc
jecxz
xor
repz
leave
ficompl
aas
lea
push
stc
gs
divb
mov
pop
aaa
clc
insb
add
mov
fidivrl
loopne
jl
insb
dec
mov
inc
xchg
push
cmpsl
arpl
ds
push
xchg
hlt
mov
sub
and
sbb
cmp
leave
cs
lock
cltd
scas
add
sbb
or
insb
popf
scas
loop
pushf
int3
cmp
mov
cltd
push
jns
fists
je
ljmp
pop
lcall
shll
rorl
mov
and
pushf
adc
pop
sub
nop
ficoms
xor
loop
cs
xchg
loopne
data16
jge
sti
fstps
enter
jmp
mov
mov
push
mov
faddl
out
ds
add
sub
sbb
cmpsl
test
xor
xchg
in
fdivl
scas
aas
push
pop
push
xchg
sub
push
lods
ja
push
pusha
push
lods
mov
insb
and
scas
mov
sbb
push
imul
in
pop
cmp
ja
lods
test
xlat
enter
std
sti
adc
sbb
push
lcall
cmpsl
repnz
mov
mov
test
and
mov
lods
lods
and
fs
xchg
stos
jecxz
das
int3
aas
push
jecxz
adc
ja
mov
push
adc
inc
pop
mov
pop
fiadds
jae
inc
movsl
cmp
mov
jl
notb
jno
jo
stos
xchg
or
repnz
rorb
sbb
fdivrl
xchg
and
or
dec
jl
aas
xchg
scas
nop
push
lods
fidivs
or
sub
nop
and
gs
sub
sub
inc
cmp
repz
fcmovnb
or
das
adc
jl
add
xchg
scas
stos
jne
clc
sbb
enter
mov
add
and
mov
hlt
mov
shlb
sbbb
mov
cmp
cs
sahf
imul
imul
push
mov
adc
jecxz
sub
scas
xchg
push
jp
cmp
inc
mov
sbb
les
insl
xchg
lods
subl
inc
dec
pop
and
lahf
pop
cmpsb
mov
and
mov
repz
xchg
jnp
sahf
cmc
bound
rorl
ds
pushf
stc
xchg
push
push
jmp
jp
sahf
dec
sbb
ret
loop
inc
into
mov
xor
insb
adc
cmc
inc
cmp
push
scas
mov
out
sbb
pop
fwait
xor
sbb
jge
std
push
rcr
mov
inc
sub
mov
ss
push
xchg
and
mov
stos
xor
frstor
sbb
dec
movsl
cmp
in
mov
xorl
rorb
pop
mov
inc
ds
vucomiss
pop
cmp
int3
lock
push
movsb
add
nop
jecxz
dec
into
into
fs
or
fcom
xchg
nop
or
mov
push
dec
or
imul
xor
cmp
gs
fwait
out
mov
add
lods
insb
cli
pop
xlat
inc
lods
fidivrl
mov
addr16
mov
das
mov
out
sbb
lods
mov
adc
inc
cltd
loop
daa
pop
aam
dec
aas
mov
sbb
inc
clc
test
lock
dec
xor
xchg
aam
add
mov
call
adcl
adc
lret
xor
and
inc
mov
loop
les
sbb
icebp
fcom
repz
sbb
pop
xchg
fs
inc
call
aas
hlt
adc
inc
rcrl
adc
xor
jo
int
test
xchg
and
es
mov
sub
xchg
adc
hlt
mov
pop
fsubp
in
sbb
push
jne
or
pop
call
ficomps
xor
xlat
lock
adc
pop
xchg
out
sub
jl
decb
icebp
and
or
xchg
cmp
add
and
jnp
hlt
cmpsl
jo
repz
pop
aam
mov
push
or
or
in
pop
dec
daa
add
adc
shll
sbb
pushf
mov
inc
loope
push
insb
mov
jne
adc
or
popa
xlat
enter
cmpsb
xor
jo
in
call
mov
jae
fcomip
inc
popa
xchg
movsb
push
stc
shrl
push
mov
add
or
scas
push
gs
inc
push
pop
dec
mov
nop
test
leave
cltd
mov
ficomps
in
aam
xchg
clc
push
and
addb
inc
mov
add
lods
xor
mov
xor
dec
push
cmp
adc
jne
mov
jnp
daa
or
in
dec
pop
ja
and
shlb
subb
xor
sti
and
popa
and
frstor
stos
pop
dec
xchg
xlat
xor
push
cmpsb
push
pop
jns
insb
testl
in
xchg
into
sub
xor
push
stc
jno
std
mov
mov
adc
loopne
push
push
aas
daa
in
loop
sbb
data16
xchg
leave
jecxz
popa
or
xchg
xchg
cmp
push
fs
xchg
push
nop
out
xor
aaa
xchg
cmpsl
inc
sbb
cmpsb
dec
arpl
jmp
fwait
gs
sub
inc
adc
dec
sbb
add
mov
inc
push
out
mov
sub
mov
stos
mov
stos
xchg
inc
movsl
cmp
inc
fsubrl
aad
sub
mov
std
outsb
gs
sub
test
sub
xchg
mov
repnz
push
lret
rcll
mov
add
push
jl
rorb
push
xor
xlat
insb
xchg
push
fisttps
leave
mov
dec
es
push
mov
dec
cmc
xchg
and
mov
ds
add
out
and
push
dec
sub
inc
gs
adc
cmp
fwait
sub
sbb
fcomip
sbb
mov
ja
cli
xchg
pop
imul
dec
inc
mov
sbb
sub
pop
mov
sbb
mov
fsts
sahf
and
adcb
sbb
hlt
ret
dec
and
test
imull
idivb
or
fadds
inc
xchg
icebp
inc
mov
lods
and
mov
dec
mov
sahf
or
mov
or
sti
pushf
int
jne
pop
push
cmove
scas
mov
cld
ret
adc
iret
ret
repnz
and
mov
dec
repnz
test
pusha
test
cmp
push
out
cwtl
xor
cmp
push
insb
in
mov
lods
stos
and
xchg
adc
dec
mov
sub
jb
or
ficomps
in
daa
adc
jo
cltd
aas
adc
push
int3
pop
pushl
adc
test
sbb
push
in
inc
xchg
ficoms
sbb
mov
pop
pop
push
sub
scas
popf
pop
nop
loopne
xchg
push
sar
or
inc
dec
jns
loop
mov
aam
out
stc
and
jmp
test
stos
cmp
add
xchg
push
int
sub
push
jb
pushl
xchg
sbb
push
jle
mov
in
repz
js
sub
scas
ljmp
mov
or
mov
jo
pushf
fwait
pop
fdivl
mov
cmp
lret
ja
and
cmp
loopne
cltd
idiv
dec
or
cmp
cld
leave
cs
dec
xor
mov
mov
jmp
mov
pop
dec
inc
pusha
cmpl
jg
popa
and
xor
dec
bound
push
xchg
fcoms
or
adc
push
or
push
or
or
mov
push
pop
push
mov
mov
mov
cmpl
mov
hlt
enter
pop
add
ljmp
pop
jl
bswap
pop
pop
cli
jae
and
scas
mov
stc
js
pop
adc
mov
mov
and
dec
lods
in
lock
mov
outsl
pop
xor
mull
test
and
andb
lret
adc
pop
sti
stc
lock
out
cld
mov
pop
int
sub
xchg
es
pop
add
mov
add
add
mov
jl
leave
sahf
jo
mov
cmc
bound
cmp
scas
jo
push
out
or
scas
and
lods
mov
stc
cmpsl
sub
jo
xor
xlat
outsl
add
imul
cs
dec
clc
daa
popf
lret
adc
leave
add
mov
fnstenv
pop
add
sub
push
int
cmpsb
add
push
sub
cmp
ficomps
dec
lods
test
imul
insl
lea
xor
or
pop
loop
data16
data16
insl
jb
mov
dec
fists
mov
or
mov
mov
push
cmpsb
ret
cmc
mov
add
lahf
mov
lret
and
movsl
mov
inc
insb
xchg
mov
inc
in
imul
adc
pop
mov
dec
pop
add
scas
stos
punpcklbw
je
jecxz
xor
ljmp
loop
shlb
xor
push
mov
cltd
pop
fsubr
fcmove
pop
push
pop
movsb
xor
into
xchg
iret
scas
lret
jge
lea
mov
mov
ret
int
shlb
adc
push
xchg
xchg
int3
iretw
aaa
xor
cmp
pop
lds
xchg
fs
out
pop
jg
hlt
sub
mov
jb
hlt
pop
cltd
xchg
jns
ljmp
shl
push
add
jb
int3
mov
das
sbb
js
mov
inc
sub
add
xor
lock
shll
jecxz
push
mov
xchg
jmp
xchg
pusha
cltd
cmp
sub
or
xchg
jle
call
shrl
cli
sbb
adc
or
push
pop
outsl
xchg
add
popl
jo
sbb
inc
add
jo
loope
jno
popf
cmp
jo
pcmpgtb
sbb
xchg
pop
cmpsl
dec
xchg
test
sub
cwtl
rcll
cmpb
incl
inc
ds
xlat
push
sub
lds
insl
pusha
sub
dec
and
jl
int
stos
cltd
mov
xor
mov
pop
fs
cmc
lock
add
mov
sti
sti
fidivl
aaa
lret
mov
fcmovu
dec
in
sbb
daa
insl
jl
ret
mov
pop
sub
jmp
and
mov
shll
shll
xor
mov
add
sbb
pop
lds
xor
rorb
and
cmp
xchg
aad
jge
nop
inc
adc
cmpsl
xor
in
cmpsl
xor
mov
test
inc
jbe
jb
das
xchg
nop
or
mov
lahf
out
jns
add
fdivp
loop
add
xchg
fstp
cmc
add
fisubrl
movl
sahf
sub
fistps
push
test
mov
rcll
xlat
bound
icebp
outsb
jns
jle
scas
out
outsb
jnp
inc
out
adc
fisttpll
or
jg
movsb
mov
add
push
mov
cmp
xor
aam
jne
arpl
cmp
nop
dec
adc
ljmp
insb
pushf
and
mov
out
and
adc
mov
mov
mov
repz
pop
aas
or
and
cmpsl
out
test
xor
fisttpll
mov
jbe
jae
movsb
mov
das
dec
cmp
aam
ficoms
outsb
dec
cmp
nop
das
data16
or
mov
lods
adc
or
dec
stos
fstpt
sahf
or
enter
add
movsl
jecxz
push
mov
xchg
cli
adc
pop
mov
loope
shl
adc
or
sarl
and
xor
jnp
sbb
nop
xor
scas
lret
adc
psrlq
mov
movsl
ja
rol
mov
divb
jl
xchg
adc
scas
into
xor
push
mov
add
cmp
jmp
insl
mov
stc
jge
dec
pusha
lcall
mov
adc
loope
mov
cltd
icebp
inc
pop
xchg
and
cmp
sub
mov
sbb
mov
inc
mov
cmp
and
jmp
add
call
pop
negb
ds
xchg
repnz
sbb
jns
mov
popf
fidivrs
outsl
arpl
sub
mov
inc
dec
add
cmp
fcomi
stc
gs
sti
fcoml
jge
in
pop
lcall
cld
mov
fmulp
mov
ss
or
lods
jecxz
jge
arpl
mov
sub
stc
adc
push
push
pop
inc
aam
roll
in
add
repz
lods
dec
popa
mov
cmc
mov
pushf
mov
dec
or
sbb
dec
lods
call
xchg
push
stos
jnp
out
xchg
fisttpll
leave
imul
es
and
inc
mov
jge
jb
or
sbb
mov
sub
cmp
mov
xchg
dec
add
aam
push
cmc
jge
cmc
ja
mov
dec
mov
shrb
movsb
lret
ret
pop
or
imul
inc
mov
push
push
dec
fdivrs
mov
adc
jmp
test
stos
dec
mov
xchg
dec
xchg
pusha
insl
or
inc
outsl
xchg
adc
or
test
cwtl
jns
or
push
xchg
mov
push
mov
pop
cmp
pop
out
std
add
inc
dec
repz
popf
xor
sub
xchg
repnz
jae
dec
lods
out
sub
mov
hlt
pop
aaa
mov
mov
and
mov
sahf
out
popa
lods
das
bound
ja
pop
movsb
movsb
dec
and
rcrl
adc
pop
cwtl
icebp
out
mov
push
sarl
mov
sbb
mov
lods
add
xor
lret
das
test
in
repz
scas
rorl
and
lcall
lods
imul
fstl
inc
pop
jo
ret
arpl
xchg
imul
push
mov
xchg
add
xor
ljmp
or
pushf
push
inc
xchg
cmp
mov
jl
mov
add
loopne
pop
ss
xchg
rorl
mov
shrb
mov
adc
mov
adc
mov
mov
sub
add
enter
sbb
lcall
inc
jl
repnz
repz
adc
sbb
xchg
add
sahf
call
cltd
dec
dec
push
cmpl
rclb
repz
arpl
fimuls
in
or
in
pop
daa
push
mov
lods
stc
fmuls
jg
sbb
cmp
pop
rorl
fsub
icebp
cmovne
fwait
adc
xor
xor
xor
cwtl
xchg
pop
mov
ss
add
cmc
push
mov
fs
pop
push
out
hlt
imul
vmwrite
jl
mov
mov
push
lret
xchg
dec
ficomps
push
lock
scas
jg
test
mov
pop
or
rorb
adc
jle
lods
adc
push
inc
add
and
cmc
push
xor
pop
ja
fistpl
clc
sti
andb
add
out
add
fsubl
scas
sub
orl
cmp
loope
mov
in
jle
dec
mov
cmp
jb
movsb
in
push
pusha
push
xor
subb
repnz
std
repnz
jge
sbb
lods
pop
push
inc
in
lds
cmp
jno
test
aam
imul
xchg
push
gs
sbb
icebp
out
in
jnp
jl
push
gs
or
adc
dec
cmp
loope
xchg
js
out
cli
pop
test
jae
lahf
cmp
jo
aas
fdivrl
add
push
mov
pusha
mov
arpl
pop
and
loop
jl
push
cs
mov
popa
sahf
cltd
xchg
jmp
mov
out
mov
mov
xchg
adc
scas
call
test
test
cltd
pop
scas
stc
mov
mov
adc
fstp
push
pusha
int
sbb
scas
ret
sti
mov
pop
imul
cwtl
inc
jp
stos
out
push
lods
subl
scas
clc
imul
shrl
lods
xchg
pop
cmpsb
pop
mov
int
int
shl
xchg
jle
xchg
js
orb
xchg
mov
mov
adc
stc
fwait
dec
and
les
in
pop
hlt
lcall
or
out
mov
xchg
sahf
es
push
sub
add
int
pop
xor
pop
mov
stos
scas
es
dec
jns
inc
mov
fistps
sub
sbb
cmp
mov
enterw
movsb
jo
pop
and
into
stc
mov
push
and
or
sti
fs
cltd
xacquire
cmp
test
push
ret
add
adc
imul
and
sub
jecxz
loope
push
sub
push
stc
cmp
mov
mov
movsl
xchg
xor
icebp
test
sti
add
enter
sbb
jne
add
mov
or
pop
mov
pop
cld
sbb
inc
jae
adc
pop
push
call
daa
cmp
jge
pop
dec
shll
jnp
cmp
hlt
jmp
shlb
repnz
push
sbb
fsubrl
pop
cltd
push
outsl
stos
mov
popa
add
sub
in
loopne
and
insl
push
sub
lock
mov
jo
add
sub
sbb
mov
push
add
cmc
ja
push
pop
xor
fadd
shr
dec
je
mov
xor
mov
jbe
xchg
or
push
popa
stos
aas
ss
test
cwtl
fucomp
shlb
jns
cld
gs
pop
mov
call
pushf
aas
push
pop
shrb
and
cmpsb
xchg
addb
xchg
rcr
inc
pusha
or
imull
lods
cmp
fstp
mov
jecxz
loop
push
jmp
inc
addl
das
cwtl
out
adc
lds
mov
pop
scas
mov
inc
push
sbbl
or
xlat
inc
test
mov
pcmpgtw
fdivs
pop
cmp
mov
mulb
push
cmp
sub
popf
nop
or
push
lcall
aad
nop
lods
add
icebp
sub
imul
or
or
fdivp
daa
pusha
in
push
mov
fbld
scas
lds
add
out
fidivs
mov
pop
aam
loope
mov
lock
xor
in
ljmp
nop
lcall
dec
mov
out
pop
fiaddl
mov
lock
adc
lods
sub
out
xor
pushf
outsb
addb
add
shlb
js
mov
fsubrl
xchg
aam
jne
mov
jo
int3
xor
push
pop
adc
stos
jo
ljmp
sbb
push
pop
inc
sub
cmp
sbb
mov
sub
mov
or
sub
push
mov
lods
xchg
cmp
clc
lods
or
les
pop
loop
sub
mov
lret
lea
cmp
mov
push
sbb
lock
movsl
push
cmpsl
call
dec
popf
lret
mov
subl
iret
pushf
add
cmpsl
cmp
add
xlat
xchg
ffreep
cmpsb
leave
push
cmp
sub
sbb
inc
sti
jae
fildl
xchg
addr16
in
iret
in
sub
cmpsl
fwait
xchg
out
test
jmp
cld
jne
hlt
ss
mov
test
fadd
push
push
jo
mov
sbb
mov
stc
cld
xchg
cwtl
jl
les
push
sbb
nop
push
lret
jnp
imul
jmp
rcl
mov
imul
repnz
aad
and
subl
pop
iret
sbb
sub
test
les
popa
mov
pop
mov
gs
mov
or
lods
xchg
mov
xchg
cltd
pop
pusha
cmp
mov
pop
and
pop
lcall
movsl
ret
rorb
xchg
jl
push
out
dec
mov
jmp
sub
loope
xor
xchg
jle
in
pop
int3
loopne
sbb
cmp
inc
inc
mov
leave
dec
into
push
jmp
lcall
clc
sbbb
test
dec
xchg
loopne
xor
inc
pop
and
mov
mov
jecxz
push
mov
push
test
daa
loope
adc
aas
add
jecxz
test
addr16
popf
data16
jns
insl
jnp
dec
dec
testl
enter
sub
das
adc
jbe
jge
mov
mov
or
push
cmp
sti
aam
push
enter
ret
ficomps
mov
cmp
dec
dec
pushf
or
lock
xchg
dec
adc
push
lret
cmpsb
cli
xchg
adc
push
pop
or
xchg
adc
lods
sub
pop
push
push
mov
pop
sub
push
iret
negb
out
add
adc
loop
jbe
pop
mov
add
loopne
and
inc
popa
jo
sub
test
stc
clc
jb
mov
lds
lock
lea
stc
repz
sbb
mov
test
pop
bound
nop
xor
dec
push
push
cmp
and
test
sahf
fiadds
lret
and
sahf
fwait
add
cmpl
aam
scas
sbb
and
insb
add
fs
push
mov
or
or
dec
mov
pop
dec
in
lahf
aam
shlb
popf
movsb
fldl
add
sbb
jne
push
sub
out
ss
sbb
xor
add
in
js
ljmp
pop
add
push
out
lahf
dec
and
dec
scas
mov
outsb
lods
push
sahf
jp
idiv
cmc
test
cmp
rcrb
and
jmp
mov
in
xor
fildl
push
call
xchg
sbb
push
cmp
into
cs
cmpsl
push
cmp
adc
push
inc
sarl
sub
and
cmpsb
dec
mov
mov
push
mov
mov
cltd
mov
and
enter
mulb
dec
or
nop
out
dec
cmp
hlt
cld
loope
mov
xchg
sti
ds
cmp
ret
insl
push
sbb
jmp
mov
dec
sarb
lcall
add
xchg
mov
dec
int3
mov
stc
or
xchg
enter
fstl
and
clc
xor
cwtl
les
xchg
xor
lods
jle
ljmp
mov
sbb
das
ja
mov
push
decb
mov
je
inc
rorb
out
pop
dec
inc
cmp
pop
add
test
mov
sub
mov
stos
lcall
lods
or
fstps
cmpsl
aas
add
fidivrl
push
mov
insb
insl
and
scas
jl
sti
or
jne
les
insb
ljmp
sarl
inc
pop
xor
sti
mov
or
loopne
es
mov
in
xlat
pop
xchg
mov
mov
stos
aad
pop
or
jp
dec
xchg
cli
mov
ja
inc
bound
bound
je
mull
pop
sbb
push
and
adc
lahf
popa
aam
scas
adc
lahf
arpl
push
mov
inc
or
ljmp
jle
xchg
lods
movsb
pop
cltd
stc
insb
lock
sub
int3
jl
mov
inc
push
xor
and
ret
arpl
jne
movsl
mov
test
lcall
mov
mov
push
stc
adc
adc
cmp
jle
lcall
dec
mov
call
sub
addr16
and
lds
push
xor
sub
mov
xor
dec
or
jo
les
sbb
push
dec
inc
jns
int
jnp
mov
out
gs
movsl
mov
mov
repz
sub
addr16
push
outsb
bound
lds
or
and
clc
mov
mov
subl
mov
imul
push
and
jmp
int3
mov
adc
sbb
int3
lret
fisubrl
js
testb
mov
inc
test
dec
add
cmp
lods
push
jne
inc
lods
add
or
adc
or
jno
pushf
pop
and
pop
jnp,pt
mov
cmp
jle
outsb
jo
adc
addr16
xchg
out
xchg
sub
loope
imul
jb
loope
or
sub
icebp
movsb
mov
inc
aaa
xor
xchg
bound
dec
sub
stc
aam
push
and
xchg
dec
mov
clc
dec
dec
imul
xor
mov
and
popf
scas
cmp
lret
in
xchg
cltd
jae
xchg
cmp
jns
int3
mov
mov
mov
jae
sub
push
mov
addb
loop
mov
cmp
ror
dec
cld
loop
pop
inc
jnp
les
sbb
pop
sub
and
lea
je
sub
jbe
outsl
aad
ljmp
fwait
mov
pop
shrl
test
sub
sahf
and
pop
js
call
push
outsb
or
int3
lcall
repnz
decl
insb
push
jle
lret
mov
loopne
in
sbb
fdiv
sub
mov
call
pop
jnp
jge
push
add
sub
mov
jp
push
cmp
adc
mov
test
inc
sar
pop
pop
sbb
in
push
mov
or
mov
dec
xchg
test
jp
insl
mov
test
cs
les
idivl
mov
push
jp
scas
shl
inc
mov
pop
cld
dec
add
sbb
aad
clc
aam
lahf
inc
sub
sahf
inc
inc
sub
cmp
xlat
pushf
mov
test
jl
cmp
jl
cmpsl
push
insb
sti
mov
idivl
xchg
push
into
pop
fwait
adc
xor
add
out
enter
in
mov
push
mov
cli
outsl
test
stos
jmp
xchg
sub
sbb
xor
jge
insl
mov
cmpb
pop
add
xchg
cmc
test
mov
fisttpl
insb
int3
repz
sahf
in
popa
jns
push
cmp
sti
scas
inc
push
iret
xchg
dec
pop
lret
pop
std
cli
testl
fadds
t1mskc
es
jb
testl
mov
lahf
push
cli
mov
push
pop
sbb
in
push
lea
scas
test
adc
or
ss
shll
add
fcompl
sti
mov
out
lds
push
fdivrl
loopne
pushf
mov
jecxz
cld
pop
jno
add
jl
mov
adc
lahf
push
out
into
push
sub
xor
add
jne
adcl
and
pop
out
loope
push
sub
stos
push
jg
adc
pushf
inc
call
lds
out
leave
add
lret
inc
cmpsl
adc
inc
mov
xchg
je
mov
cmpsl
fwait
add
stc
xchg
cmp
jno
imul
mov
mov
hlt
shlb
pushf
push
mov
loop
lock
mov
insl
cmp
pop
pop
fdivr
leave
push
dec
js
xchg
in
cmp
mov
mov
rorb
cmp
movsb
push
movsb
loope
lret
lret
cmp
fdivr
rcrl
jp
inc
pop
sbb
xchg
mov
add
mov
add
imul
xchg
pop
mov
lea
negl
xchg
sub
dec
jo
shlb
cmp
sbb
add
push
adc
mov
fistpl
push
pop
mov
xchg
jb
das
ret
mov
lahf
cmp
push
aas
jmp
inc
sub
lods
inc
stc
data16
mov
jmp
sbb
sub
in
xchg
xchg
sub
scas
lock
lret
cld
cmp
daa
shll
daa
cs
fisttps
inc
and
fwait
add
jnp
fildl
call
dec
pop
cwtl
das
mov
int3
inc
jbe
pop
cmp
hlt
ret
enter
mov
dec
movsb
inc
pop
pop
bound
andl
stos
sub
push
pop
add
fidivrl
mov
insb
xchg
fists
push
scas
pop
lret
add
xor
in
pop
popa
xchg
aaa
push
gs
dec
and
aad
ficomps
xor
lea
dec
mov
cmp
xor
ja
test
ja
lret
mov
lret
in
push
cli
cli
pop
sarl
sahf
call
mov
loope
dec
add
addr16
cs
or
adc
jnp
jbe
lods
xchg
sub
push
es
add
scas
fsubs
cli
jne
xchg
dec
nop
cwtl
das
ss
sbb
loopne
mov
push
lea
fdivrl
or
aas
out
sub
sbb
mov
sub
cs
lds
sbb
mov
out
jmp
jno
mov
iret
out
cli
inc
dec
push
rol
xchg
loop
test
mov
jnp
icebp
inc
xchg
mov
sbb
xchg
cmp
add
cmc
lods
cwtl
mov
mov
jo
mov
sbb
mov
movsb
lret
cltd
push
testb
aad
mov
movsb
insl
shll
and
cmp
stos
and
add
mul
popa
sbb
and
lahf
and
in
sub
cmpsl
fadd
outsb
or
out
cmp
xchg
push
test
xor
jp
outsb
add
push
leave
mov
sti
fildll
dec
es
inc
mov
out
andl
js
mov
lock
mov
sti
test
push
jecxz
cmpsl
mov
stos
fmull
adc
movsb
add
out
sbb
nop
cli
out
rol
int
sbb
push
mov
or
and
iret
pop
das
jns
fstps
xlat
popa
sub
cltd
dec
loop,pn
push
stos
loope
sbbb
lock
or
xor
pop
leave
sti
repnz
add
scas
jge
adc
lock
mov
int
xlat
loope
mov
and
sub
subl
cmp
push
mov
sbb
fistl
sub
notl
sbb
imul
aam
or
fldl
inc
push
and
in
cmp
xor
adc
pop
xor
sub
dec
pop
enter
xor
cli
pop
movsb
je
int3
and
jnp
add
inc
lcall
sarb
xchg
jae
test
leave
cmc
std
lods
xchg
out
fiaddl
movsb
testl
pop
sbbb
sbb
scas
pop
xorb
pusha
or
sub
in
icebp
in
mov
movsl
je
mov
jb
adc
sub
lds
out
add
imul
push
nop
popa
cmpsl
dec
test
xor
loopne
inc
and
iret
inc
adc
and
inc
loopne
fcmovne
mov
cld
hlt
cmpsl
dec
xchg
xchg
sbb
add
addr16
sub
push
loop
adc
inc
jo
adc
outsb
frstor
dec
iret
scas
out
inc
stc
inc
ljmp
iret
mov
insl
or
push
arpl
jne
pop
mov
loopne
arpl
in
or
inc
and
stos
xchg
cld
aad
nopl
add
inc
add
stc
inc
xor
sbb
call
inc
and
sub
js
pop
mov
addr16
cmp
stos
jmp
cmp
xchg
lods
inc
out
std
int
f2xm1
xorl
jo
std
fisubrl
scas
mov
icebp
or
sbb
mov
pushf
or
and
pop
push
jnp
repz
add
adc
lahf
xor
cwtl
mov
and
hlt
call
pop
xor
movsl
adc
out
stc
lea
sbb
mov
sbb
sbb
push
xchg
in
mov
mov
jnp
outsb
sarb
popa
rcl
pop
orl
icebp
sub
fldenv
ds
fstpt
mov
xchg
mov
push
push
outsb
mov
xchg
popa
ret
inc
scas
fs
cltd
dec
xchg
adc
mov
xchg
sub
mov
add
negl
lods
add
test
sti
lret
and
push
sub
loopne
ljmp
in
notl
sub
and
xor
insb
xor
add
pop
xor
push
mov
les
mov
push
test
fldl
cli
push
repz
dec
in
imul
mov
imul
fwait
xchg
sub
test
repz
jae
xor
fadds
lods
repz
cld
ljmp
dec
les
add
sbb
flds
mov
pop
es
movsb
add
stos
jno
mov
ljmp
jbe
mov
out
lea
cltd
out
std
pop
bound
pushf
adc
cmp
sbb
jb
les
testl
scas
repnz
sub
xchg
loop
lock
lret
xor
nop
mov
sahf
fld1
and
and
scas
cwtl
sub
and
lahf
jae
dec
inc
out
xor
pop
in
sbb
sbb
mov
test
cmp
ds
jb
loopew
xchg
lea
add
lods
inc
stc
dec
push
sbb
cmp
mov
and
aas
das
mov
in
jp
loope
sub
cltd
mov
sbb
pop
insb
ss
push
jmp
inc
leave
js
fcompl
mov
hlt
sbb
and
cmpsb
aam
bound
push
inc
cmp
jnp
aaa
sarb
in
inc
mov
mov
xchg
dec
addr16
push
cmp
or
jge
lret
add
xchg
fwait
and
sbb
push
add
adc
les
dec
out
shrl
xchg
add
inc
push
push
jnp
and
inc
dec
xor
jmp
mov
scas
repz
in
xchg
insb
out
pop
pusha
in
rcl
jns
js
nop
ss
js
xchg
out
sub
dec
outsb
movsb
pop
or
in
pop
loop
cmp
cmp
push
pop
int3
call
adc
xchg
mov
fnsave
and
fninit
in
in
dec
cwtl
adc
adc
push
ljmp
aad
mov
gs
jb
fnstenv
mov
inc
lret
je
into
scas
popf
sbb
xchg
xchg
movsl
add
loopne
call
jne
dec
mov
pusha
push
inc
xchg
sub
sub
imull
cld
sti
rcr
mov
mov
or
push
filds
pop
cmpsl
jge
mov
das
add
mov
inc
jb
inc
rclb
push
iret
imull
cld
xchg
dec
push
inc
pusha
hlt
or
inc
in
lahf
in
cmc
lcall
stc
xchg
pop
xlat
or
jmp
cmp
mov
cmp
idivl
ds
xchg
and
cwtl
nop
add
inc
sub
test
test
pop
adc
subb
aam
aas
invd
push
inc
adcl
shll
mov
es
ret
xor
stc
aas
orl
mov
out
shrb
int
mov
sub
lea
xchg
sar
jp
pop
xchg
pusha
outsl
jnp
iret
pop
fadds
cmp
cmp
lahf
jns
add
mov
lds
push
push
dec
cli
push
pushf
pop
enter
aam
sbb
popf
sub
and
jle
pop
incl
xchg
lret
pop
fs
sbb
jns
cltd
cmp
push
dec
leave
pusha
xchg
test
stos
rclb
pop
fsubr
xchg
push
sti
ljmp
in
and
mov
xchg
movsl
cmpsb
cmp
jne
es
lahf
fs
outsl
subl
jl
jg
popf
popa
sti
mov
xchg
mov
inc
sub
dec
lahf
dec
cmpsb
xchg
std
std
or
and
sbb
mov
mov
lock
gs
js
or
sub
or
xor
jecxz
cmp
push
push
sbb
and
test
lahf
dec
mov
ret
and
push
push
and
test
std
dec
pop
push
lds
gs
cld
sbb
out
mov
stos
sbb
xchg
xor
sbb
inc
mov
or
sarl
mov
fdivr
pop
ret
call
inc
arpl
das
mov
enter
shrl
mov
dec
repnz
sarb
push
andb
stos
xchg
dec
rcrb
adc
inc
pop
jecxz
es
push
dec
xchg
and
aad
pop
cltd
mov
cmp
inc
stos
fmuls
mov
push
fisttps
repz
jnp
jecxz
or
mov
addr16
sbb
nop
stos
jae
rcr
enter
testl
mov
lock
push
jns
inc
push
push
mov
push
sahf
test
loope
xor
loop
js
in
mov
cmpb
sbb
push
jl
xchg
mov
in
je
and
sbb
cmp
sbb
pop
test
sbb
jne
fwait
das
js
imul
mov
fnstsw
adc
outsl
mov
mov
enter
stos
in
or
pop
cmp
mov
loop
mov
jp
bound
mov
adc
pop
sbb
add
and
cld
out
jno
outsb
xor
cmp
push
pop
mov
pusha
insb
and
or
mov
jnp
repz
clc
repz
xchg
xor
jp
push
dec
in
test
test
cmpsl
nop
in
sbb
pop
inc
fmuls
mov
test
les
jne
jle
sub
std
stos
push
gs
push
mov
xor
fisttps
sbbl
sahf
in
faddl
int3
push
lret
sub
jbe
adc
push
insl
pop
sbb
adcb
bnd
pop
sbb
inc
data16
push
xchg
jns
mov
pop
ds
ret
dec
add
inc
lret
cs
pop
stos
xchg
scas
inc
fstpl
test
in
xor
loope
sti
mov
mov
xchg
filds
loope
push
and
jge
dec
inc
pop
aam
call
out
mov
clc
push
xchg
inc
cmp
mov
cmpb
rclb
scas
sbb
fsubrl
inc
push
sbb
push
sbb
mov
mov
pop
sbb
xchg
into
loop
push
lds
and
sbb
dec
inc
or
getsec
add
mov
inc
movsb
cli
dec
fstl
and
mov
gs
outsl
push
mov
dec
sbb
jge
sbb
inc
and
inc
mov
fbstp
aaa
mov
push
es
sub
dec
inc
or
push
cmpsb
jnp
sub
jno
mov
mov
sub
pusha
add
imul
sahf
repnz
ds
adc
xor
cmp
int
fidivrl
in
arpl
mov
movsb
lret
insl
jns
fdivs
out
test
xchg
inc
pop
je
outsl
and
push
test
cli
sub
push
sbb
xor
mov
fs
pop
testb
in
cmpsl
dec
and
mov
or
pop
sar
mov
es
outsb
mov
je
daa
popa
sbb
mov
loopne
mov
loop
xchg
push
outsl
cwtl
mov
addr16
jecxz
sub
pushf
out
push
jmp
xchg
jl
lret
mov
mov
xchg
mov
cmc
xchg
ds
outsl
lcall
stos
cmpsb
repz
sbb
arpl
sti
xchg
popa
and
adc
mov
dec
dec
loopne
pop
ja
and
xchg
push
or
sbb
push
cmp
jle
outsl
fsubl
pop
cmp
repz
add
lds
inc
mov
sub
arpl
sbbb
add
inc
mov
mov
je
sbb
ljmp
push
and
lea
pop
hlt
mov
sbb
mov
mov
lock
jbe
stc
int3
push
push
mov
push
xchg
scas
test
mov
outsl
jne
shl
adc
jae
addl
ljmp
stc
push
aaa
sahf
popa
adc
rcrl
rolb
ds
mov
jns
push
pop
fisubrl
cmp
mov
pop
adcl
jae
mov
pop
xchg
jne
push
adc
dec
pop
pop
in
add
daa
dec
loop
lea
pop
and
imul
unpckhps
jae
xor
js
sub
or
sub
mov
inc
bound
mull
xor
ja
push
in
mov
dec
shr
mov
pusha
jl
aad
pop
xchg
jg
leave
dec
cmp
orb
mov
push
xchg
push
cmp
stos
loop
inc
gs
or
test
mov
out
push
mov
and
adc
movsl
pop
sahf
pop
jp
icebp
pop
clc
call
inc
inc
neg
add
sub
push
add
imul
int
cmp
cltd
das
popa
lcall
mov
popf
int
inc
jmp
sarb
fs
scas
mov
lret
insb
fstpl
lock
cmp
dec
cmpsb
addl
cmp
aam
test
in
test
push
jmp
fs
test
inc
push
out
or
pop
sbb
sub
mov
mov
js
outsl
xchg
popf
jo
icebp
sub
push
cmpb
push
ds
lahf
popf
lret
xor
addl
or
jno
icebp
or
cmp
nop
adc
sbb
arpl
icebp
ja
push
dec
scas
and
imul
rcr
mov
jno
xchg
stos
add
xchg
fs
xor
shl
sarb
lea
sbb
xchg
xorb
push
sub
pop
in
outsl
mov
daa
das
fs
shlb
repnz
stos
xchg
add
xor
loope
push
cld
cmpb
daa
mov
stc
xchg
jnp
js
int
repnz
xor
xor
mov
cmovl
pop
hlt
lret
fcoml
dec
lea
iret
js
inc
cmp
mov
in
addr16
popa
fisubl
mov
jge
loope
adcl
xor
and
fnstenv
push
ret
es
stos
push
fstpl
pushf
jmp
jle
lret
cli
mov
sub
loope
and
xor
sti
jo
sbb
repnz
add
xlat
daa
jns
mov
rcll
ja
and
scas
adc
pusha
or
add
fstps
out
mov
sub
cmp
push
in
inc
mov
jbe
adc
mov
sarl
push
js
mov
dec
popf
test
fisubrs
adc
int3
fucomip
dec
push
call
pusha
imul
pop
scas
dec
stos
std
stos
sarb
cmpsl
ret
std
xor
and
in
hlt
sbb
movsb
mov
mov
fwait
sbb
test
inc
mov
pop
mov
pop
cmp
or
xorl
rcll
push
ficoml
lcall
pusha
mov
aad
imull
pop
adc
inc
imul
loopne
pop
mov
and
loope
xor
cmp
rep
inc
outsb
ss
mov
bound
fwait
and
push
fdivs
sar
cmp
cmp
xor
xlat
xchg
cltd
add
jl
inc
sahf
mov
sbb
jl
xchg
aam
push
shr
cld
push
subl
push
popa
scas
enter
pop
repnz
addr16
bound
out
xchg
pop
push
stos
xchg
fildl
or
aam
lock
dec
test
shrl
sub
push
inc
push
xor
dec
jl
lods
mov
iret
xchg
ljmp
in
ja
movsl
std
or
jp
ret
or
and
or
ja
push
ja
shlb
or
movsb
in
arpl
mov
ficomps
insb
inc
or
iret
ds
rcrl
out
mov
test
lds
into
sub
push
call
lods
cld
lcall
adc
lret
nop
lret
pop
push
or
jle
cmp
fstl
pop
idivl
xchg
pop
bound
add
rcll
or
loope
insb
dec
add
fstpt
xlat
mov
pop
adc
rclb
rorl
lods
lock
dec
in
loope
jmp
adc
xchg
mov
cmp
fcoms
xor
out
shlb
xor
inc
enter
cmp
in
mov
je
hlt
fdivs
xchg
sti
mov
push
out
sbbb
add
imul
mov
das
push
scas
xchg
xchg
and
push
out
mov
xchg
movhps
jge
leave
stos
xor
in
jmp
mov
addr16
sbb
nop
push
scas
ds
push
jmp
outsb
fisttpll
sbbl
xchg
sub
dec
cmpsb
mov
mov
mov
cs
mov
dec
fnsave
jle
mov
jge
aaa
dec
jno
xor
out
xchg
adc
andl
mov
dec
mov
stos
leave
pop
and
jo
mov
cmp
cmp
push
fsubp
loope
cmp
fcmovbe
pop
mov
jle
shrb
cld
adc
sti
cmp
sub
sbb
inc
nop
sub
repnz
test
ljmp
int3
push
int
xchg
leave
and
jecxz
xchg
test
inc
bound
popa
xor
dec
sub
jae
js
repz
repz
call
sbb
cld
mov
or
xor
jo
test
fdivp
pop
or
xor
test
inc
out
add
dec
and
mov
ja
mov
in
out
repz
sarl
in
push
ficoml
adc
imul
leave
cltd
mov
xchg
cld
lcall
jnp
cmp
test
loop
or
jne
xchg
inc
xchg
push
mov
xchg
add
jae
cmp
ja
stos
mov
push
enter
cmpsb
add
icebp
ljmp
xchg
stos
fcoms
mov
pop
inc
jp
push
dec
adc
jae
cmp
cmp
add
lock
cwtl
shlb
cmp
mov
jns
cli
jnp
mov
push
pop
cwtl
or
outsl
test
vmwrite
movsb
call
les
int3
mov
imul
jbe
into
lock
mov
mov
dec
xor
sbb
cmpsl
scas
dec
repnz
adc
add
mov
jl
test
loop
xor
sub
or
jge
aaa
call
sbb
sarl
out
rolb
push
add
pusha
test
jg
add
fcom
and
divb
cmpsb
lea
fnstenv
push
mov
xlat
je
mov
pop
adc
cmpsl
pop
into
fistl
inc
stc
mov
ret
mov
in
dec
mov
leave
mov
jbe
or
inc
sbb
jmp
push
jne
int3
or
scas
adc
xchg
dec
add
pop
inc
xor
or
xor
test
ja
test
sub
or
lret
pop
mov
jns
inc
mov
mov
jg
fists
xchg
inc
pusha
out
test
inc
into
dec
pop
mov
cs
sub
xchg
lret
shrl
fstpl
out
mov
sbb
or
rcll
icebp
or
inc
pushf
std
loopne
pop
or
mov
mov
adc
dec
push
arpl
xor
ds
mov
addr16
cld
xchg
sub
call
dec
orb
or
sbb
or
cld
cmp
inc
pusha
nop
aam
pop
bound
loope
dec
fnstenv
out
dec
xchg
popa
push
ja
pusha
sahf
xor
fsts
sub
xor
inc
cmp
inc
xchg
push
iret
lock
or
push
inc
sbbb
lahf
add
les
test
lods
in
mov
add
push
stos
push
aas
cmpsl
cwtl
enter
ss
neg
jb
xchg
es
das
imul
filds
lock
test
ds
jno
std
in
repnz
cli
mov
leave
push
push
jl
add
push
jmp
loopne
and
dec
testb
xor
repz
out
cmp
in
jmp
pushf
mov
xchg
test
sti
roll
daa
xchg
mov
inc
mov
loopne
ffree
mov
xor
test
push
popa
push
mov
add
mov
adc
jns
push
jnp
add
xorb
mov
xchg
sbb
addr16
sbbl
pop
and
pop
insl
jge
cli
xchg
sub
ljmp
stos
add
ja
sbb
sbb
fwait
jl
mov
jo
add
lods
dec
aam
push
sbb
mov
jge
outsb
cmc
mov
sbb
or
addr16
pop
xor
sbb
mov
push
mov
pop
xor
mov
imul
xor
xor
or
push
lret
jo
adc
xchg
jnp
stos
pusha
mov
xchg
scas
sahf
pop
ret
mov
sub
push
inc
push
pop
js
mov
sbb
xor
mov
divb
lods
mov
fcoml
lock
jl
loop
mov
cmp
aas
in
inc
cmp
dec
mov
or
and
push
bound
out
add
push
push
mov
mov
ret
or
push
mov
jl
sbb
and
or
js
add
leave
add
jge
xor
and
pop
ret
inc
repz
lcall
test
ja
xor
and
rcll
add
adcb
test
stos
movsl
mov
in
xor
fstpt
dec
fldt
inc
cmpsb
and
jnp
rorb
rcll
or
lret
pop
call
mov
clc
pop
fdivrs
push
mov
fsts
and
jb
test
mov
dec
mov
push
lret
and
pop
push
out
std
cmpsl
in
jl
roll
mov
mov
and
test
sub
jle
lods
pop
sub
xchg
gs
mov
mov
insb
pop
sbb
xchg
aad
mov
es
ss
imul
inc
js
outsl
shll
dec
jns
outsl
xchg
mov
rolb
and
adc
leave
mov
out
push
scas
out
sub
or
jmp
ret
mov
loop
out
xor
sub
adc
cmp
int
and
mul
fiaddl
cmpsl
in
sub
cmp
in
mov
jp
sbb
dec
enter
cwtl
cmp
mov
test
inc
mov
xchg
cmpsb
mov
jge
mov
or
jnp
out
and
dec
fsubrp
and
stos
mov
pop
aas
fcmovb
inc
gs
dec
adc
ljmp
je
xor
push
cmpl
inc
push
pop
mov
xchg
cmp
mov
adc
xor
loope
sub
jae
jnp
inc
sbb
add
hlt
sub
repnz
call
das
mov
clc
jo
shll
filds
insb
popa
into
stos
icebp
pop
data16
lcall
push
mov
sub
pop
insb
pop
shlb
mov
add
popa
xchg
mov
bound
mov
jbe
repnz
outsl
cltd
or
mov
aaa
pop
and
push
jge
push
mov
imul
or
sbb
inc
mov
mov
outsb
insb
xor
ljmp
ficomps
mov
ss
loope
pushf
shll
in
mov
sbb
aaa
subb
sahf
mov
arpl
pop
adc
and
andl
push
adc
mov
pusha
and
mov
xor
fsubrl
mov
xchg
pushfw
fld
lock
xor
add
call
inc
cmp
test
sarb
jae
test
add
mov
shll
scas
mov
call
cmp
jnp
lret
sbb
ja
cmp
push
xchg
push
mov
jle
pop
mov
dec
mov
mov
aad
inc
dec
pop
xchg
cmp
xchg
lahf
adc
xchg
imul
xchg
sahf
in
xor
ss
xchg
cmpsl
jns
sar
clc
jb
aad
cmp
mov
pushf
out
cld
aam
xor
fdivr
jnp
rcrb
rclb
or
fstl
fidivrl
pop
sbb
cltd
dec
aaa
js
jo
push
scas
xor
lods
in
push
pop
out
ljmp
mov
cmp
subb
loopne
notb
push
fcmovb
push
decb
test
stos
repz
push
mov
rcrl
inc
mov
mov
push
mov
test
xor
mov
or
xor
ja
mov
adc
aam
jp
mov
sub
out
scas
adc
popa
in
sub
jmp
xor
enter
shll
push
push
rclb
std
push
xor
mov
xor
std
add
sarl
mov
pop
push
inc
add
outsl
fcomip
mov
imul
pop
jle
ds
inc
dec
nop
fcomi
mov
loop
inc
in
aad
out
xchg
mov
movsl
push
inc
add
xchg
lods
xchg
sti
mov
aas
adc
lock
enter
cmp
sbb
aam
sbb
mov
xor
mov
cmpsb
jbe
mov
imul
lret
xor
add
iret
out
aam
xor
cltd
dec
lds
jno
lret
dec
ret
inc
and
xchg
lock
xor
push
ljmp
test
out
mov
rcrb
dec
lods
xchg
sub
test
sbb
sub
pop
jle
aam
adc
notl
daa
incl
popa
rcl
lret
jne
lret
daa
xor
mov
out
aad
fisttpl
dec
stc
pop
or
jne
leave
bt
add
clc
mov
mov
popa
popa
mov
pop
repz
cmc
ljmp
in
sub
mov
loopne
js
and
std
in
scas
dec
sub
mov
xchg
arpl
call
sub
hlt
int
mov
mov
insl
cmc
jmp
pop
stos
es
enter
insl
pop
pushf
ja
jo
xchg
pop
push
xor
aam
dec
push
sub
inc
push
stc
pop
jecxz
hlt
xchg
cmc
pop
hlt
pop
je
mov
jmp
add
lods
int3
icebp
jnp
ret
or
or
lock
imul
jnp
and
push
leave
sub
outsl
cmpsl
rorb
xor
arpl
loop
out
fwait
mov
insl
push
sarl
popl
outsl
out
fildll
es
out
test
pop
adc
adc
outsb
or
pop
ret
add
rcrl
jnp
mov
adc
pop
pop
and
std
sub
leave
scas
sub
daa
mov
scas
jb
repnz
inc
fwait
mov
sbb
loope
cmp
stos
xor
push
pop
mov
test
cmp
loop
clc
mov
lcall
pop
jno
cmp
and
leave
add
int3
stc
jb
es
push
mov
pop
cmpsl
dec
push
sbb
xor
xor
cmpsb
adc
ljmp
mov
sbb
push
sbb
inc
jp
and
int
cmc
jbe
mov
xor
and
mov
popa
arpl
sub
lret
cli
pop
xchg
inc
iret
or
xchg
cltd
push
repz
push
shrb
sar
add
jecxz
inc
mov
sti
xor
mov
flds
xchg
sub
pop
xchg
inc
xlat
sbb
xor
sar
mov
jnp
jnp
jecxz
movsb
or
pop
int
push
ret
mov
dec
xor
dec
xchg
fistpll
cs
daa
mov
cmc
gs
cmp
jge
inc
cli
fldenv
inc
loop
push
rdmsr
add
enter
mov
mov
clc
lods
jo
mov
mov
ds
je
into
jae
jnp
sti
bound
sbb
std
lret
mov
inc
inc
and
cmp
cmc
mov
or
jp
adc
jmp
or
loopne
sbb
lcall
sub
ss
xchg
out
inc
dec
mov
mov
xor
mov
mov
mov
popf
in
and
pop
push
std
push
sahf
dec
adc
test
and
lea
lea
test
and
rorl
stos
push
xchg
mov
adc
sbb
aad
or
sbbb
or
push
mov
fcomp
and
mov
adc
dec
xchg
loope
cmp
sahf
mov
aaa
in
inc
pusha
shrl
and
jp
fwait
adc
roll
sub
sti
adc
ss
jb
das
sbb
aad
stos
imul
sub
mov
and
in
mov
mul
xor
lea
std
push
xchg
cltd
cmp
aas
sbb
imul
mov
adc
dec
pop
cli
call
lock
or
pop
scas
mov
mov
and
mov
jp
xchg
loopne
scas
xchg
loope
shrb
sub
push
push
into
xchg
shl
cld
test
shll
inc
mov
adc
js
cmp
decb
and
dec
xor
mov
leave
or
jle
or
mov
fnsave
and
mov
test
cmpsl
add
ret
ret
movsl
mov
sub
sub
adc
imul
in
lcall
push
popf
jge
mov
or
xlat
cmp
inc
or
cmp
inc
stos
cmp
dec
dec
inc
repnz
push
push
movsl
pop
int
xchg
jnp
lock
adc
aam
mov
push
ret
das
jl
cmpsl
mov
mov
es
repz
gs
lock
add
in
and
divb
adc
addl
cld
lea
adcl
jnp
or
dec
lcall
loope
mov
push
cmp
push
pop
xor
andl
jnp
outsl
lret
push
test
notb
sub
mov
repz
xchg
push
jbe
inc
dec
push
mov
fptan
mov
les
dec
repnz
and
adc
jg
fildll
ret
outsl
lock
cmpsl
mov
xchg
fdivl
divl
mov
mov
cmp
in
in
repnz
cmp
adc
sub
sti
popa
adc
and
xchg
jmp
cltd
jne
leave
jl
add
sbbb
mov
outsb
test
fs
push
mov
mov
clc
and
cmp
roll
mov
sbb
loope
sub
inc
mov
sti
cmp
lock
shll
dec
jo
xor
mov
sbb
fucomip
addl
repnz
cwtl
push
push
mov
sub
iret
scas
rol
jecxz
or
mov
sub
jb
das
sahf
and
jmp
mov
sbbb
scas
cli
cs
mov
test
test
out
clc
or
adc
inc
mov
repnz
or
sub
sti
in
push
ds
movsl
cmp
add
pop
lea
push
das
xor
pop
jne
shrl
leave
pop
fistpll
inc
xor
pop
dec
shll
mov
movsb
cmp
lret
jg
lcall
int3
sbb
js
jle
out
sahf
mov
adc
mov
xor
fwait
push
stos
repnz
mov
lock
dec
mov
fstpt
add
mov
sbb
dec
pop
fldenv
lahf
iret
test
lds
mov
imul
xlat
and
mov
or
je
out
ja
or
inc
jne
mov
fcmovnbe
jle
sarb
jge
mov
sbb
lcall
stc
and
jo
jmp
ljmp
and
sti
lods
cmp
clc
fstl
into
adc
ds
dec
mov
adc
les
push
xchg
xor
std
ja
jmp
rolb
inc
inc
dec
and
loop
movsl
or
adc
jb
in
out
lcall
ljmp
and
and
arpl
jno
pop
or
xor
int3
enter
inc
inc
pop
movsb
jmp
jle
mov
pop
and
dec
ret
mov
andl
mov
daa
fwait
mov
xchg
sub
mov
cmp
mov
aad
out
dec
push
mov
xchg
xor
jae
xor
xchg
sti
adc
or
sub
mov
popf
mov
sbb
jno
aad
xor
inc
shrl
mov
mov
dec
mov
cmp
stos
fstps
std
cs
andb
inc
mov
pushf
fwait
inc
jg
dec
jecxz
push
sbb
or
inc
xchg
and
add
lods
insl
push
cmp
mov
in
stc
push
out
cmp
push
out
and
pop
fcmove
pop
and
inc
fmuls
cmpsb
push
adc
in
jmp
mov
cmpsb
or
dec
ds
add
imul
xchg
xchg
jl
dec
push
pop
arpl
cli
test
push
mov
ror
hlt
sbb
add
ds
inc
mov
mov
xor
out
push
xor
jns
push
idivl
fisubs
ja
inc
push
jne
shlb
loop
in
andl
dec
xor
loop
dec
aam
dec
xchg
mov
push
push
lcall
adc
add
shll
sbb
lock
addr16
nop
jp
or
lret
test
loop
push
mov
mov
outsl
out
scas
fbld
jecxz
pushf
pop
orl
pop
sbb
add
xchg
sub
mov
pop
ljmp
sub
es
out
insb
leave
stos
jno
xor
mov
insl
les
pop
movsl
xchg
nop
test
sbb
fstps
xchg
in
aad
sbb
cli
icebp
push
fisubl
and
insl
imul
out
stos
mov
fbstp
insl
jae
icebp
pop
fmull
push
xchg
andl
rcrl
stc
pusha
cmp
int3
popa
scas
sbb
or
stos
xrelease
push
xor
dec
movsb
dec
leave
loopne
add
add
aas
or
mov
lds
jg
cmpsl
leave
cmp
leave
outsl
aam
pop
dec
adc
and
mov
xor
xchg
sbbb
adc
pop
or
shrl
push
jl
mov
js
cmp
adc
sub
sbb
xchg
inc
stos
pusha
ja
dec
imul
or
repnz
notb
adc
shrl
test
jl
imul
jle
in
popf
mov
enter
and
xchg
test
xchg
enter
ret
shlb
mov
lcall
jnp
mov
or
mov
jg
jns
and
ss
and
fldl
test
adc
lods
or
sbb
fnstsw
cmp
mov
dec
and
mov
mov
mov
pop
testb
test
mov
xchg
pushf
ffreep
mov
mov
sub
xchg
out
jae
popa
lahf
push
mov
xchg
loop
rcll
testb
ljmp
mov
adc
icebp
add
pop
lret
sbb
cmp
hlt
mov
or
movsl
das
ds
xor
out
jbe
test
xchg
cmp
cmp
repz
pushf
divl
or
xlat
mov
imul
test
mov
cmpsb
jle
fmull
or
mov
jb
push
cmc
repnz
lods
in
bnd
scas
inc
xchg
cli
movl
pop
dec
gs
aam
dec
fldcw
test
shrb
or
aad
mov
push
jne
or
cmp
imul
fidivrl
inc
adc
popaw
mov
lahf
mov
jno
je
mov
in
shll
push
mov
or
mov
test
jnp
cmpb
xchg
add
mov
mov
andb
js
iret
mov
fldenv
xor
xor
lahf
jp
jp
fistpll
sub
mov
sub
das
cmc
push
clc
imul
sbb
cwtl
imul
cmpl
push
nop
sub
or
cmp
mov
bound
or
and
jmp
outsb
mov
jbe
insl
or
stc
fisttpl
into
loope
sub
int
jge
arpl
aad
adc
cmpsb
ja
cmp
mov
and
push
outsb
imul
inc
movsl
jne
icebp
mov
and
pop
and
loop
mov
stc
test
pusha
jp
fildl
loope,pn
xchg
imul
dec
out
jns
lods
loope
adc
sub
js
pop
cwtl
ss
lea
hlt
adc
leave
pop
mov
inc
dec
incb
iret
adc
cmp
movsb
dec
dec
mov
adc
mov
mov
mov
outsl
das
adc
or
lods
les
push
mov
jne
mov
bnd
jae
bound
neg
adc
mov
rcr
icebp
lret
mov
xchg
jle
add
push
out
pop
mov
mov
fisubs
cmp
dec
ljmp
inc
fs
and
push
sahf
leave
outsb
add
mov
pop
jecxz
xchg
daa
nopl
or
clc
or
xor
ja
or
push
pop
mov
push
xchg
fmull
adcl
cwtl
xor
xor
sub
jp
dec
pop
outsb
lock
ja
pop
imul
lret
cmp
cmpsb
repnz
dec
std
repnz
ljmp
cmp
adc
mov
in
arpl
mov
sbb
mov
fwait
mov
add
stos
testb
mov
mov
shl
les
stos
jb
cld
mov
pop
imul
sub
ljmp
cmp
push
loop
aad
imul
insl
pop
sub
mov
pop
mov
lock
imul
jno
mov
inc
stos
jno
test
enter
xchg
xchg
call
xor
fstps
xchg
jb
sub
imul
pop
fsts
mov
mov
mov
bound
popa
push
frstor
push
scas
cmc
push
mov
mov
jmp
pextrw
push
daa
or
in
outsl
leave
mov
scas
push
and
imul
mov
fldcw
icebp
adc
fmull
les
xchg
das
xor
adc
push
test
jb
out
ror
rolb
push
fnstcw
jne
insl
cmp
hlt
loopne
shll
add
adc
and
sbbl
adc
outsb
mov
sub
push
and
in
in
ljmpw
imul
xor
sub
push
jnp
ds
fldcw
shlb
or
pop
cmpsl
lds
test
fs
push
xlat
cwtl
fldt
ljmp
sbb
push
ret
cmp
into
fs
jle
push
mov
push
stos
cmpsb
enter
outsb
mov
enter
ss
and
adc
movsb
push
xor
dec
lret
out
xchg
sarb
fdiv
lea
xor
out
sub
xchg
pop
outsl
push
push
cmp
out
mov
daa
scas
out
rcll
aad
and
leave
out
add
xor
les
cmp
into
hlt
push
in
scas
clc
push
cmpsb
inc
stc
fstps
mov
mov
pop
rcrb
cmp
hlt
xchg
dec
and
test
xchg
mov
mov
push
nop
mov
stos
sbb
es
scas
or
mov
shlb
jle
mov
lret
and
divb
push
loope
push
jmp
jnp
mov
jp
mov
xchg
sbb
xor
cmp
test
mov
in
leave
pop
add
add
ljmp
dec
mov
cli
orb
sti
mov
jle
pop
repnz
push
jl
in
jbe
popl
ficompl
rolb
or
pop
cltd
sbb
mov
push
push
fxch
aas
daa
movsb
sub
add
mov
enter
add
sub
mov
xor
mov
push
pop
mov
push
sbb
push
xchg
jne
pop
jae
cmp
push
cmpsl
cmp
mov
cmp
outsb
push
sar
shlb
jp
sahf
xchg
mov
mov
scas
xchg
xchg
xlat
filds
lret
ret
xor
lods
aad
xor
ret
mov
add
pop
loop
push
add
sarb
jmp
cmp
mov
sub
fnstsw
test
sbb
pop
push
pop
jnp
push
mov
jge
mov
mov
xchg
aas
pop
repz
inc
pop
push
insb
inc
jno
imul
repnz
push
or
jmp
std
pop
sub
and
mov
popf
xor
call
mov
popa
sbb
and
test
xchg
repnz
push
sbb
cmp
loope
push
movsl
test
inc
sahf
push
mov
cmp
xchg
fwait
cltd
sbb
sbb
cmpsb
mov
lods
sbb
sub
add
cmp
mov
mov
data16
pop
push
andb
sub
inc
les
repz
lret
popf
sarl
jno
fstpl
xor
dec
dec
mov
push
cmc
mov
mov
mov
adc
mov
int
cmp
push
arpl
jnp
bound
into
in
cmp
scas
sub
hlt
or
sub
cvtdq2ps
enter
fs
push
cmpsb
jbe
test
jns
ds
leave
scas
lock
ret
mov
cmp
movsb
test
jl
mov
add
pop
jno
mov
inc
stc
negl
loope
lcall
fcomps
repz
je
test
mov
xchg
js
rolb
pop
or
ret
cld
sti
imul
scas
incb
imul
fs
dec
ljmp
or
sbb
call
pop
xor
or
out
mov
test
mov
sub
stc
nop
lret
jmp
fstpt
or
inc
movsb
gs
insb
arpl
mov
test
movsl
mov
shrb
subb
sahf
dec
adc
xor
or
pop
loop
mov
push
or
inc
scas
fidivs
jo
jno
xchg
push
lods
inc
mov
add
lret
mov
lret
mov
loopne
cli
int3
call
ret
filds
mov
in
xchg
push
aaa
mov
sub
dec
roll
xor
mov
jl
cltd
test
xor
adc
push
pop
add
mov
adc
test
pop
stc
aaa
xlat
inc
cli
push
in
mov
lret
ret
int
add
xchg
out
icebp
pop
mov
adc
cmp
das
mov
mov
pop
in
dec
leave
mov
add
sti
or
icebp
dec
mov
rol
scas
push
les
ret
fiaddl
adc
arpl
xchg
aas
arpl
lret
pushf
and
adc
subl
push
ret
call
add
repz
les
lcall
mov
inc
dec
xchg
mov
mov
sbb
repz
mov
shll
cli
push
push
lahf
out
mov
push
adc
pop
sub
xlat
jle
cwtl
xchg
mov
cmpb
push
dec
repz
cld
out
inc
and
mov
xor
dec
xor
lods
out
push
xchg
lods
in
adc
xchg
rorl
sub
pop
shrl
insl
pushf
insl
adc
and
dec
mov
divb
test
and
ret
jmp
sti
out
mov
xchg
push
jne
xchg
nop
sbb
dec
test
jnp
cmp
imul
mov
pop
push
pop
mov
xchg
cmp
xchg
jg
inc
xchg
jp
cwtl
and
xor
das
out
and
iret
mov
add
and
adc
lock
mov
sbb
xchg
jb
sub
fildl
inc
in
in
fwait
pop
adc
cmc
or
jbe
in
aaa
mov
mov
lods
and
movsl
push
inc
out
and
mov
push
in
aam
xor
loope
xchg
push
mov
sub
sub
or
push
or
inc
ficompl
loope
and
int3
push
push
imul
test
orl
shll
jae
and
mov
rorb
mov
aam
addr16
aad
icebp
cmp
mov
or
shll
in
inc
mov
mov
leave
mov
mov
stos
ja
push
aaa
sbb
jb
aaa
cltd
lcall
or
ss
hlt
jmp
jae
cmp
ss
aaa
mov
shll
std
mov
dec
pop
adc
inc
ficoml
cs
or
test
add
sbb
pop
xchg
ret
sbb
loope
negb
lock
or
out
push
negl
repnz
out
out
mov
jg
mov
ret
jg
sub
sub
xchg
mov
xchg
jge
rcll
outsl
jb
jl
adc
mov
lret
mov
fwait
imul
and
mov
daa
scas
adc
shlb
and
outsb
push
sub
fs
fiadds
or
cli
push
jnp
outsb
arpl
dec
data16
insl
insl
mov
in
inc
insl
pop
sbb
fldl
mov
repnz
dec
xchg
test
dec
test
out
shlb
popa
mov
sub
dec
cmp
push
fcomp
js
gs
in
xor
dec
iret
add
xchg
outsb
pusha
mov
ljmp
xchg
cmp
aaa
nop
mov
push
lods
jno
aam
in
and
sub
pusha
inc
pop
mov
adc
sbb
dec
or
mov
pusha
mov
popa
and
sarl
enter
sbb
jle
jo
adc
repnz
push
cmp
sbb
ljmp
xlat
jl
sbb
pop
mov
in
out
mov
lahf
cs
bswap
repz
cmp
rolb
repnz
mov
mov
jnp
inc
je
xchg
mov
push
mov
sub
jne
fs
mov
xor
sub
xor
mov
mov
inc
add
push
mov
push
dec
lret
xor
arpl
mov
sbb
out
and
fisttpl
data16
movsl
insb
inc
push
mov
cmp
adc
repz
sbb
push
sub
lret
sbb
imul
pop
in
cmpb
fcomp
pop
mov
sbb
mov
sbb
sub
mov
loop
push
daa
test
push
hlt
shlb
ret
add
mov
and
scas
mov
mov
sbb
iret
imul
mov
movntq
out
jp
mov
out
ror
push
sahf
mov
xchg
jp
mov
sarb
ljmp
xchg
fstpl
adc
std
jbe
mov
push
push
inc
cmpsb
mov
and
pop
insl
xlat
iret
cmp
pushf
data16
mov
dec
xchg
popf
mov
push
sub
cs
lret
cmp
add
jle
fisubrs
push
fs
and
mov
jo
fstp
mov
push
adc
call
sub
mov
aas
lds
nop
mov
in
jge
pop
inc
outsb
fsts
pop
mov
mov
rolb
addr16
out
add
xchg
aam
mov
mov
loop
andl
jle
outsl
lret
mov
or
in
divb
cmp
fisubl
pop
bound
xchg
test
fstpl
int
scas
mov
mov
push
sbb
icebp
adc
add
adc
iret
pop
push
or
int
jns
mov
push
repnz
fsubrs
lods
insl
cs
push
cmp
mov
imul
xchg
scas
xor
xor
pop
jge
add
idivl
push
xchg
cld
xor
fmull
cmp
cltd
dec
cmpsb
push
pop
xlat
xor
and
test
add
loopne
enter
mov
mov
pop
aas
adc
xor
dec
sub
inc
add
push
aam
cli
cmp
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
jecxz
xchg
push
leave
pushf
dec
mov
lock
jno
in
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
nop
dec
mov
add
cmc
ds
cs
sbb
out
andl
cmp
imul
popa
mov
outsl
je
mov
jmp
and
cld
repz
cwtl
dec
mov
sarb
int
loopne
mov
jae
xor
inc
outsb
xchg
adc
jns
jecxz
and
jbe
fsubrl
test
decb
imul
loopnew
mov
jae
scas
sub
jge,pt
inc
jnp
rcl
mov
mov
js
ja
add
fdivl
sbb
divb
xor
data16
aas
cli
mov
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
xchg
mov
mov
imul
cld
repz
cwtl
dec
mov
shrd
int3
cld
repz
jno
push
mov
movsb
stos
xsaveopt
push
cld
mov
cwtl
pop
mov
shrd
std
repz
cwtl
dec
mov
imul
push
cld
repz
xchg
dec
mov
clflush
push
xrelease
dec
mov
xsave
push
cld
jecxz
cwtl
pop
mov
xsaveopt
inc
cld
repz
cwtl
dec
mov
xsaveopt
push
lret
lret
mov
add
and
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
imul
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
rolb
stos
rorl
in
repz
cwtl
sub
jno
add
mov
mov
xsaveopt
push
sbb
mov
xsaveopt
push
cld
xor
cwtl
dec
out
stmxcsr
add
leave
cwtl
dec
mov
xsaveopt
je
cld
adc
ljmp
add
cld
repz
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
xchg
repz
scas
jno
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
mov
xsaveopt
push
cld
repz
cwtl
dec
pop
in
scas
pop
add
repz
xchg
rclb
popf
arpl
outsl
sti
adc
sahf
add
pop
rcrl
and
mov
mov
cwtl
lock
aad
movsl
xchg
adc
outsb
mull
je
les
ss
dec
mov
xor
in
imul
out
icebp
cld
push
jbe
fs
dec
cmp
int
mov
or
add
cwtl
adcb
lods
and
and
and
mov
test
mov
leave
mov
aad
push
iret
and
xchg
je,pt
mov
fisubrl
addl
xor
add
fsubs
lcall
imul
nop
cmp
mov
push
sub
push
data16
int3
mov
cltd
adc
adc
xor
xor
xchg
dec
pop
xchg
and
filds
lds
fisubs
aaa
gs
dec
inc
cmp
bound
mov
pop
scas
adc
lds
sub
jl
adc
andl
loop
fistl
sbb
movsl
aas
cli
dec
jbe
ljmp
add
cli
fstpl
mov
enter
mov
js
xchg
loop
add
stos
out
lds
fwait
add
lds
mov
ds
mov
cmpsl
adc
inc
lahf
push
sub
adc
ja
xor
add
sbb
int
sbb
pusha
jno
cmp
rolb
outsb
ds
sbb
call
test
aaa
jb
jmp
pop
and
cld
es
sub
mov
sbb
jnp
push
fidivl
dec
lea
push
inc
adc
fistps
xchg
xor
and
pop
sbb
popa
icebp
movsl
cltd
arpl
push
mov
push
pop
mov
std
out
test
xorl
jnp
and
std
sbb
ss
xchg
mov
pop
push
or
ss
enter
and
ja
insb
dec
popf
push
cld
sub
out
aas
mov
adc
das
xor
mov
cli
jne
and
mov
dec
test
mov
jge
aam
push
and
pop
jl
cwtl
inc
and
or
xchg
pop
xchg
test
sub
sub
sbb
imul
js
into
xlat
imul
loopne
pop
mov
addr16
and
cmp
pusha
inc
je
pop
je
xor
test
inc
sbb
fmull
push
cmpsb
push
lret
ret
mov
or
insb
aad
push
rorl
xor
cltd
sbb
jle
cs
mov
pushf
dec
test
ret
loop
ret
dec
icebp
lods
xor
aam
cmpsb
xchg
mov
call
jle
sbb
inc
in
mov
pop
fadds
add
stos
ja
cmp
push
push
aad
adc
rcrb
mov
push
rcl
das
sbb
xor
cmp
stos
sbbl
jae
sbb
into
jbe
or
add
mov
scas
and
stc
push
sub
inc
cmc
testl
dec
cmc
add
mov
loope
push
clc
xchg
mov
xchg
push
loopne
ds
push
loopne
dec
cld
test
mov
or
push
xlat
jae
je
sar
cmp
mov
ja
xor
repnz
mov
sti
pop
fisubrl
rcrb
jle
cld
fcmovnb
cld
test
jmp
pop
jle
ljmp
and
mov
popa
testl
mov
movsl
pushf
fwait
adc
fnstenv
jbe
mov
enter
add
xchg
arpl
lods
mov
aas
mov
ret
xor
sub
popf
in
jle
add
push
sbbb
inc
mov
imul
mov
scas
adcl
xor
mov
inc
jns
in
jb
jl
jns
fidivrl
xchg
and
xor
sti
fbstp
repnz
xchg
cmp
xor
scas
rcrl
xchg
or
pop
cld
aaa
sbb
nop
outsb
icebp
fistpl
mov
adc
leave
push
gs
ja
pop
popf
out
cmc
aam
call
cmp
xchg
push
dec
out
faddl
jecxz
push
mov
inc
je
dec
es
mov
fcoms
aam
and
xchg
mov
xchg
add
inc
lods
ja
std
mov
cmp
add
dec
sub
ljmp
rol
in
lret
sub
sbb
pushf
lret
scas
rolb
fisubl
mov
imul
sub
lahf
ret
idiv
stos
ja
sub
rcrb
in
testb
add
add
push
jmp
imul
dec
lock
jae
test
sbb
cmp
mov
sbb
sub
aam
int3
les
lret
dec
mov
jnp
jns
test
movsl
dec
or
mov
push
cmp
cmp
sbb
adc
iret
aad
jp
addl
rclb
xor
xlat
cmp
push
arpl
jle
mov
outsl
jo
addl
sbb
push
cmp
repz
cwtl
xchg
je
ficomps
insl
push
int3
js
fdivl
inc
jno,pt
pop
sbb
out
fs
xchg
cmc
xchg
cmp
lds
in
les
cmp
lret
push
or
jo
jle
icebp
ret
lock
sub
sub
push
lods
pushf
repnz
int3
stos
mov
add
mov
pop
adc
pop
sub
add
cli
std
out
mov
pop
fld
clc
or
ret
bound
cmp
xor
in
push
ret
les
shrl
or
mov
sbb
push
out
pop
cmpsb
loope
push
cs
and
aaa
imul
rclb
push
mov
cmp
cld
fstl
cmp
stos
pop
mov
mov
xchg
xchg
fstps
cmpsb
jno
sahf
sub
cwtl
mov
xor
loop
and
pusha
inc
fsts
mov
cmp
movd
lods
lods
scas
jns
pop
ret
cmp
and
in
lcall
inc
xchg
add
es
jo
mov
mov
lret
mov
mov
or
out
ss
pop
lahf
jno
cld
xchg
and
gs
sbb
push
mov
call
jp
cli
dec
inc
fmuls
aaa
mov
sbb
aad
pop
sti
mov
shl
sarl
adc
pop
decl
movsb
imul
push
adc
mov
or
sahf
push
sub
mov
or
incb
jns
push
dec
push
jl
cltd
cmp
std
mov
mov
mov
inc
push
jl
dec
jbe
and
out
jmp
lret
loop
adc
scas
shl
lock
test
ror
cmp
xor
jnp
test
iret
dec
fwait
and
pusha
mov
mov
push
stos
outsb
arpl
mov
sub
stos
lcall
sahf
sub
pop
add
loopne
imul
ljmp
push
sub
shll
sbb
cld
stos
or
les
and
mov
mov
repz
xchg
into
push
inc
xlat
xchg
and
fdivs
jb
daa
in
testl
cmp
mov
notb
push
and
mov
sub
pop
sbb
imul
sub
sub
shrl
adc
cwtl
and
scas
sub
pop
xchg
adc
inc
into
cmp
int3
gs
dec
mov
jge
fldl
movsb
inc
sub
pop
rcll
js
leave
add
outsb
test
dec
shrl
clc
dec
fiadds
sub
cmp
out
and
pop
stc
in
repz
and
data16
xchg
sar
outsb
pop
sbb
dec
enter
and
cltd
or
pop
xchg
sahf
test
test
repz
add
or
lock
jg
push
sbb
sti
lods
or
cwtl
push
dec
imul
call
ljmp
imul
cmpsl
int3
sbb
dec
pop
cwtl
sti
cwtl
adc
inc
pop
mov
fidivl
je
pushf
jae
mov
jmp
push
mov
cmpsb
mov
xor
pop
cmp
in
or
mov
jl
push
rolb
pusha
or
push
fst
ret
xchg
imul
push
cmpsb
in
sub
adc
daa
jp
aas
gs
and
jae
push
aad
pop
sub
dec
mov
cmpb
sti
and
popa
cld
sti
cmp
push
sbb
or
xchg
insb
mov
xor
out
cmp
enter
xchg
mov
jp
andl
popf
scas
es
lea
xchg
jl
push
sbb
sbb
sbb
sahf
mov
and
pop
and
pop
jge
mov
pop
lods
ds
mull
jbe
out
cltd
mov
icebp
mov
in
xor
add
rol
shlb
lea
cmp
leavew
popf
outsb
pop
iret
sbb
test
jo
or
push
ret
mov
leave
pushf
xchg
cmp
mov
cmp
out
inc
fcompl
mov
out
out
pop
push
xchg
cmp
xor
addr16
loope
cmp
xchg
lods
jecxz
pop
mov
paddw
dec
loopne
push
pop
in
shrb
lods
dec
mov
cmp
or
mov
and
cmp
ljmp
dec
jb
or
cwtl
data16
hlt
lahf
out
movsb
mov
lea
jo
sub
adc
dec
fwait
loope
mov
sbb
mov
mov
jmp
negb
dec
ret
fsubs
sub
insb
psubb
sbb
add
aas
cwtl
dec
jno
pop
movsb
dec
imul
add
cwtl
cmp
pop
dec
ror
mov
loopne
mov
ret
mov
xor
jae
xor
pop
hlt
jb
cmp
test
push
js
popa
adc
xlat
add
cltd
jge
jae,pt
add
dec
out
xor
inc
mov
xlat
jne
enter
push
outsl
pop
cmp
xchg
test
pop
pop
inc
pusha
inc
jo
fisubrl
mov
jo
shlb
add
sar
sub
mov
lds
xorl
insb
cmp
pop
xor
and
mov
push
sti
xchg
pop
test
ficoml
sub
test
push
cltd
scas
int3
shrb
ret
cmp
adc
stos
inc
inc
push
cli
into
push
cld
fsubp
in
cmpsl
jmp
nop
lcall
gs
test
cltd
in
cmp
outsl
jbe
pop
scas
mull
push
lcall
push
and
cmp
sub
cmp
mov
mov
ljmp
imull
sbb
cmp
cltd
out
ss
pop
dec
mov
out
push
xchg
mov
mov
dec
xlat
in
fiaddl
jecxz
faddl
mov
ja
roll
lds
dec
sbb
lods
cmpsb
adc
sbb
mov
test
aas
jle
push
jo
cwtl
jmp
iret
push
test
and
scas
cmp
jle
fnsave
shrb
inc
iret
xchg
test
fcmovb
mov
inc
and
out
ja
pop
push
stos
mov
or
stos
outsl
pusha
pop
pop
sbbb
pop
jl
inc
xchg
jne,pn
pop
mov
lahf
sbb
les
mov
jmp
nop
test
sti
not
ficomps
pop
dec
and
popa
aad
cli
mov
or
mov
push
and
out
cmp
mov
push
stos
mov
xor
fidivrs
clc
dec
mov
sub
push
lret
mov
sbb
cwtl
in
or
insl
test
sub
mov
in
cli
pop
or
jae
push
fsubr
add
or
inc
mov
pop
pop
or
in
lds
roll
jnp
adc
jp
cmc
cmp
jne
int3
imul
sbb
imul
sti
mov
add
push
push
jb
sbb
aaa
sbb
ljmp
ret
and
mov
repnz
sub
popf
push
fcmovu
or
xadd
mov
mov
xor
push
andb
pop
xchg
aad
or
das
in
jae
and
cs
or
cmp
xchg
mul
cmp
movsb
popa
enter
mov
jle
pop
or
bound
cld
addr16
dec
adc
ror
mov
insb
loope
outsl
repnz
cmpsl
cmp
dec
xor
outsl
pop
stos
scas
je
inc
pop
rcr
movsb
movsl
add
sarb
pop
pushf
cmpsl
shlb
out
test
push
jne
dec
ss
adc
imulb
adc
adc
out
mov
or
xor
add
push
or
clc
mov
call
repnz
push
xchg
pop
push
or
shll
mov
inc
daa
add
sub
pusha
fisttps
notb
sbb
or
adc
or
and
jp
mov
aas
or
enter
loop
movsl
push
pop
inc
mov
int3
jne
push
call
mov
push
in
mov
inc
jnp
fwait
xchg
es
jne
jnp
sub
out
repz
stos
inc
loopne
mov
dec
pop
movsb
lods
out
cmp
adc
inc
pop
insl
ja
or
fidivs
xchg
and
ret
aaa
out
and
sahf
lock
push
jne
imul
pop
loopne
mov
jle
jne
jo
jnp
jne
scas
je
sbb
pop
xchg
subl
mov
cltd
push
mov
popa
dec
in
mov
scas
lret
lahf
cmp
mov
sbbb
or
lret
add
daa
ror
adcb
pushf
js
aam
ljmp
xchg
xchg
pop
in
push
iret
mov
sarb
mov
jbe
jecxz
sbbb
sbb
divb
out
ja
clc
test
inc
fdivrl
pop
rcr
cs
cs
loop
mov
pop
cmp
sub
sbb
lret
jae
sub
adc
inc
aas
sbb
aam
jne
push
in
push
add
mov
adc
xchg
pop
dec
int
out
imul
call
jmp
cmp
sbb
lcall
sub
es
arpl
and
push
pop
out
sbb
stos
cmp
jnp
adc
pop
std
jo
jne
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
