outsl
call
dec
aam
jo
popa
xor
nop
mov
mov
cwtl
shr
inc
movsb
sub
ret
nop
call
int3
adc
xlat
popf
lahf
les
adc
cmp
jg
xor
aad
mov
call
and
add
lahf
ss
fs
sub
xor
fsubl
adc
sub
out
loop
ffreep
mov
cltd
popf
out
scas
call
sbb
dec
push
loopne
popa
pop
sahf
fcmovbe
arpl
sahf
repnz
xchg
sahf
cmp
adc
out
flds
xchg
adc
mov
enter
pop
int3
push
adc
mov
shlb
std
and
outsl
dec
mov
and
aam
xchg
xchg
push
rcl
mov
insl
fistl
mov
dec
and
add
cld
mov
int3
xor
or
iret
movsl
lahf
aas
push
lods
mov
dec
sub
ficoms
dec
pop
movsl
fwait
dec
sbb
in
imul
ret
mov
sbb
movsb
cmp
add
push
xchg
mov
aaa
js
cmp
push
xchg
mov
fstps
loope
or
or
mov
daa
ret
push
and
rorl
mov
outsl
xchg
in
push
dec
lock
or
lcall
mull
imul
fcomi
int3
inc
repz
xchg
push
cmp
mov
dec
and
add
inc
mov
roll
lret
in
adc
mov
dec
js
and
jmp
movl
push
and
and
jae
adc
mov
or
push
cmp
aam
pop
aam
mov
js
lahf
fidivs
cmp
popa
scas
add
xlat
cmpsl
add
mov
mov
mov
dec
fsub
and
and
pop
divb
lret
jno
stos
xchg
push
add
push
dec
inc
fisubl
ret
dec
fistpll
jl
or
test
leave
mov
rcl
mov
xor
mov
pop
xchg
lret
movsl
mov
in
ret
cmp
inc
xor
adc
ja
or
mov
and
hlt
dec
xchg
dec
cmpsl
and
invd
hlt
jo
inc
cmp
xchg
mov
sti
pop
xchg
aam
lds
icebp
inc
shrl
enter
push
in
fcomi
fsubl
push
push
test
mov
cmpb
xchg
sub
in
fnstcw
sbbb
push
inc
xchg
lcall
fwait
in
sbb
or
pop
lcall
sti
and
stos
ljmp
xlat
and
pop
cld
and
xchg
ret
jns
mov
movsl
int3
fnstsw
test
hlt
xchg
dec
add
mov
xor
lds
ss
or
fwait
pop
icebp
fprem1
and
fcomps
add
xchg
aam
push
dec
das
push
outsl
xor
cmp
mov
mov
div
cmp
inc
out
inc
cltd
dec
inc
mov
xorl
lea
ret
cmp
jbe
cmp
aam
out
inc
test
cmp
xchg
inc
pop
out
cli
rcl
sbb
js
pop
das
pusha
ds
sbb
xchg
mov
in
sub
push
ja
sahf
cmp
es
pushf
cltd
ret
int3
push
ljmp
clc
mov
jp
mov
inc
es
lret
xor
or
xor
mov
and
xchg
int3
out
std
lret
movsl
xor
mov
daa
ret
outsb
les
add
pop
dec
jb
fidivs
adc
faddp
lcall
push
mov
xchg
out
ds
inc
in
adc
push
and
lahf
cwtl
push
jno
shrb
mov
xchg
mov
or
js
mov
add
test
lret
dec
mov
mov
cmp
adc
xor
or
xchg
sbb
scas
ret
ljmp
rcr
jge
mov
and
outsb
dec
imul
enter
stos
nop
bound
cltd
fwait
nop
loope,pt
into
jno
in
xor
or
outsl
push
leave
dec
sub
aas
pop
in
insl
in
sbb
pop
or
xor
out
jmp
xchg
mov
stos
dec
xchg
push
aad
jb
xchg
or
adc
fisubs
decl
dec
bound
and
xchg
popf
je
cmp
bound
out
rcrb
mov
hlt
jge
pop
sub
sub
repz
xor
or
inc
jae
jl
in
addr16
push
fs
incl
mov
inc
adc
dec
std
pop
push
in
fcmovnb
xchg
popa
xor
popf
movsb
std
jno
test
das
and
stc
or
fldenv
jmp
mov
or
push
cwtl
das
inc
sub
movl
or
ret
xor
xchg
mov
idivb
jl
ja
nop
popa
push
fstl
out
xchg
dec
mov
cmpsb
lods
pusha
ja
sahf
mov
push
je
jo
cmc
in
dec
stos
testl
jl
test
add
fs
or
adc
rol
add
arpl
stc
dec
es
dec
sub
ljmp
loopne
orl
dec
movsl
jp
jmp
sti
mov
jp
dec
divl
jnp
je
inc
sbb
sti
push
sbb
xor
pop
push
ltr
lahf
cmp
pop
fstp
mov
cmp
in
nop
mov
das
cmp
cmc
fstpt
jp
xor
jne
fsubrp
jle
dec
sub
pusha
nop
and
gs
cmp
adc
fs
sub
mov
dec
pop
popf
stos
xor
lret
and
fcomps
in
adc
jo
ljmp
in
add
idivb
mov
not
push
jae
or
mov
push
adc
mov
movsb
push
stos
pop
aaa
mov
out
fldl
shlb
shl
out
xchg
in
jne
mov
mov
test
adc
or
pop
arpl
and
push
xchg
and
scas
or
cmpsl
push
cmpsb
lcall
mov
push
jns
cmp
cwtl
xor
fimuls
imul
inc
mov
clc
test
testb
xlat
add
sub
stc
pop
fisubl
mov
jo
divl
pop
mov
into
lods
sbb
std
pop
nop
fcoms
dec
mov
out
in
pop
fsts
gs
movsb
lahf
stc
mov
repz
movsb
and
sbb
and
lea
je
mov
xchg
dec
xorl
sahf
mov
lret
add
cmp
pop
push
push
addr16
add
jp
popa
gs
sbbb
aam
mov
out
shl
fmull
mov
xlat
dec
cmp
pop
repz
sub
push
push
cmp
mov
cmp
inc
in
or
sub
mov
adc
std
lods
mov
fdiv
out
adc
sahf
jg
mov
dec
ret
sbb
jle
aas
inc
loop
loop
xor
imulb
mov
inc
sub
xchg
dec
jl
push
push
adc
jo
add
inc
push
sbb
call
std
scas
stos
xchg
stc
fadd
cmpl
xchg
aad
mov
ljmp
sbb
leave
push
fadds
lret
loopne
cmp
mov
dec
sub
push
call
mov
sbb
lea
subb
jl
cwtl
adc
push
into
aad
adc
addr16
in
sbb
adc
xor
and
icebp
dec
and
and
add
pop
mov
dec
ffree
shlb
lds
jle
sbb
cld
rclb
dec
and
out
bound
test
test
faddl
sub
data16
into
cmp
imul
xchg
mov
in
adc
fld
in
jno
aad
mov
shl
pop
mov
ljmp
hlt
fisubrl
loopne
cmp
out
mov
scas
cltd
sar
das
shufps
xor
stos
inc
sbb
push
mov
ja
aad
jg
cmp
add
jo
cli
test
hlt
xor
out
pop
mov
xor
ret
sbb
pop
cs
dec
nop
sub
iret
loop
push
pop
push
popf
daa
sbb
pop
aad
aaa
daa
adcb
sbb
mov
mov
movsb
lahf
dec
and
gs
or
fbstp
and
mov
add
pop
fisubs
mov
or
mov
and
stos
filds
inc
xchg
add
aas
push
call
cmp
sub
dec
jb
loope
fldenv
sbb
fisubs
xchg
dec
dec
scas
push
cli
fwait
aad
mov
inc
push
dec
sub
and
mov
sbb
out
dec
data16
shll
icebp
dec
test
jmp
mov
lock
cmp
lods
mov
jnp
lret
mov
fdivr
int3
mov
lret
stc
sti
xor
lds
popa
pop
nop
pop
xchg
jecxz
cmp
xchg
fidivl
push
arpl
jns
dec
cmp
addr16
mov
dec
sti
add
mov
mov
test
in
or
sub
or
loop
loopne
addr16
jns
adc
lea
sarb
mov
adc
nop
dec
push
sahf
loope
dec
lahf
mov
insl
or
ret
push
mov
in
arpl
idivb
in
sub
in
shlb
and
test
pop
notb
dec
out
mov
in
in
stos
ret
arpl
add
or
popf
sahf
in
mov
pop
xlat
pop
jae
xor
jae
into
bound
jb
ret
shl
nop
cmp
pop
adc
jl
lds
jne
jl
shl
mov
call
rcrl
push
aad
sub
or
mov
out
cmp
imul
dec
popf
xchg
dec
out
push
fwait
lock
push
ret
mov
sbbl
pop
into
adc
out
lds
push
fcompl
inc
xchg
inc
out
cld
lahf
xchg
adc
mov
inc
loope
cmp
pop
popf
xor
stos
leave
dec
xor
adc
insl
push
adc
out
sub
push
sti
adc
pop
lea
fs
arpl
jnp
out
ljmp
lcall
mov
hlt
cltd
clc
jmp
inc
scas
adc
sbb
fwait
lods
push
xchg
movsl
fmul
xlat
push
xor
mov
imul
out
movsl
jnp
xlat
sbb
rolb
xchg
jno
jge
xchg
pop
out
adc
push
mov
jmp
cmpb
mov
fstl
mov
shlb
inc
leave
in
jbe
push
rclb
push
fdiv
fimull
mov
pop
ds
mov
cmc
in
push
dec
push
inc
cltd
adc
stos
fildl
addb
je
jo
fsubp
add
push
jge
push
pop
in
adc
je
inc
xchg
mov
ret
jae
or
and
sub
sub
sahf
outsb
es
aad
shrl
fsubrl
jb
lds
push
adc
add
cli
cmp
dec
repnz
pusha
jg
inc
hlt
orl
or
test
add
ds
int3
add
xchg
clc
hlt
add
mov
fimull
fiadds
pop
mov
aad
aad
loop
pop
lods
xor
cltd
fbstp
mov
ret
lea
xor
fstpl
xor
stos
lcall
dec
es
lock
cmpsb
aad
inc
loop
xchg
das
push
int
adc
mov
or
inc
enter
sub
push
stc
or
jno
imulb
dec
mov
insl
jge
mov
enter
cmpl
sbb
test
xchg
test
mov
jnp
pusha
sbb
mov
xor
inc
sub
es
lods
cs
sbb
and
push
in
cwtl
fidivrl
popf
lods
pop
out
mov
mov
pusha
stc
jno
pop
sbbl
mov
ljmp
xchg
jbe
jp
adcb
movsl
mov
test
pop
and
jmp
popf
cmp
fcmovu
sub
stc
lods
in
or
cwtl
cmc
movsb
cmp
jle
and
mov
xor
jge
movsl
push
sub
or
lret
enter
cmp
mov
and
jl
loopne
pop
sub
in
mov
push
fnstcw
add
repz
dec
add
jns
cld
cmpsb
sbb
xchg
cwtl
lods
push
mov
sub
adc
mov
lret
mov
sub
mov
add
push
mov
xchg
push
daa
ja
sub
xchg
push
es
jecxz
inc
fisubrs
cwtl
dec
cmp
addr16
fdivr
or
or
jnp
push
push
orb
int3
fcmovnb
pop
inc
aas
jecxz
negl
mov
mov
inc
sbb
lock
xor
fidivl
loop
add
pop
rol
sbb
mov
xchg
je
add
pop
in
jo
repz
into
or
push
push
xchg
stc
inc
cmc
push
call
imul
jno
mov
gs
and
lock
and
inc
cs
iret
cmp
pop
roll
jp
jne
cs
pop
mov
adc
dec
xchg
lea
cli
fs
cltd
cmp
mov
push
ds
repnz
fisttps
add
mov
loopne
mov
sub
sbb
adc
in
jmp
shlb
insb
in
enter
push
push
bound
insb
jecxz
sbb
arpl
add
cmpsl
mov
push
dec
mov
fisubl
lcall
push
sbb
mov
fucom
fisttps
popf
xchg
sbb
xor
jb
jnp
xchg
lahf
pop
mov
xorb
jne
dec
jns
xchg
push
push
mov
mov
bound
aas
lret
loope
mov
out
xchg
mov
mov
mov
cmp
and
and
xchg
sbb
popa
xchg
nop
xor
mov
cmc
sbb
mov
repz
mov
testl
in
fstpt
inc
cli
or
addb
inc
js
iret
dec
popf
and
push
sub
mov
mov
aaa
arpl
out
push
mov
jge
xchg
mov
orl
lods
stos
paddsb
in
fcomp
adc
flds
mov
mov
aam
ljmp
js
or
les
out
fstpl
fsubrs
hlt
fisubrl
pop
mov
jno
dec
imul
sub
jb
push
jns
inc
jne
lods
test
cli
jp
std
adc
out
add
cltd
ficoml
clc
cmc
mov
mov
enter
outsl
loopne
iret
mov
cmpsb
int3
jnp
out
add
hlt
inc
psubusw
in
jo
jmp
sti
inc
into
jp
dec
adc
repnz
pop
sub
adc
jnp
sub
push
dec
iret
nop
cwtl
or
ja
pop
pusha
mov
ficoml
mov
mov
addl
inc
pop
lea
iret
sbb
mov
or
and
dec
sbb
cmp
push
std
sbb
mov
mov
mov
xchg
and
push
loope
lods
movsb
adc
adc
jle
subb
lret
test
jp
movsb
push
inc
ret
out
sarb
sbb
adc
aad
movsb
aaa
outsl
push
inc
push
push
xchg
cmovo
mov
push
push
mov
outsl
push
xchg
inc
mov
sub
sbbl
outsb
stc
xchg
in
xchg
cmc
imul
in
imul
or
push
cmp
xchg
daa
push
mov
mov
sbb
jle
mov
push
cmc
fiadds
sbb
dec
xor
xor
in
mov
push
int3
sahf
cmp
lods
push
lcall
jae
sahf
jg
aad
xchg
xchg
cmpsl
lds
sub
inc
fdivrs
adc
mov
xchg
loopne
ret
mov
ret
and
xor
xor
inc
loopne
jmp
mov
jo
sub
aaa
jae
loop
pop
mov
mov
xchg
lods
xchg
and
or
pop
es
xchg
dec
pushf
fsubrp
push
add
push
sub
ret
xorb
lds
push
into
mov
mov
fistpll
xchg
hlt
out
push
pop
pop
mov
jg
xchg
dec
push
cmc
dec
shrb
int3
sahf
out
dec
data16
push
inc
pop
shlb
and
into
xchg
jg
cs
fldcw
std
lret
lret
aas
mov
adc
stc
movsb
fnstsw
cmp
add
lods
adc
movsb
popf
mov
add
ljmp
movsb
fisubrs
add
sub
hlt
shll
call
or
inc
mov
mov
mov
pop
mov
add
xor
icebp
jg
bound
inc
push
shll
adc
movsl
jnp
and
mov
ja
dec
cmc
cmp
jne
inc
sub
jns
je
rcrb
sbb
cs
mov
scas
das
aad
fstps
sbb
dec
fiadds
fbld
cmp
push
dec
psubb
repnz
mov
mov
nop
lock
and
cmp
jo
repnz
xchg
mov
hlt
xchg
mov
mov
les
xor
cmp
add
loope
movsl
fstp
je
dec
mov
push
add
add
flds
arpl
hlt
sahf
in
sar
stos
mov
xchg
cmp
leave
enter
fiadds
inc
test
jb
leave
xchg
xchg
push
repz
rolb
loopne
or
dec
sbb
inc
int3
ja
sbb
mov
popf
lahf
sbbb
ret
jp,pt
push
dec
loopne
sub
adcl
mov
std
adc
jg
arpl
out
inc
cs
xchg
in
insl
xor
adc
in
mov
inc
sub
aad
iret
outsl
inc
sub
imul
hlt
sub
out
inc
dec
sbb
js
xor
jb
xchg
test
clc
pop
nop
negb
pop
bound
mov
into
imul
jle
stos
aad
push
xor
add
lret
xchg
xor
push
and
xlat
repnz
in
dec
push
cld
bound
cmpsb
push
mov
cmc
sbb
mov
mov
imul
xor
xor
push
test
cltd
xchg
std
jmp
mov
int3
xchg
pop
std
pop
jnp
aaa
mov
aam
xchg
or
sbb
dec
push
test
fwait
jne
in
inc
inc
push
imul
dec
aaa
mov
push
insl
pop
dec
ja
and
fwait
mov
subl
push
xor
test
jecxz
push
add
in
mov
ret
stos
cmp
dec
adc
icebp
push
rorb
and
movsl
incb
roll
pop
jo
sahf
std
leave
call
cmpsb
rorl
dec
das
out
inc
idiv
into
aas
mov
sub
stos
rcrl
stos
add
mov
dec
xchg
outsl
push
jg
inc
sub
mov
dec
pop
or
push
mov
mov
xor
xor
dec
or
pop
out
cmp
or
ljmp
cmpl
sarb
inc
add
mov
or
movsl
cmp
push
or
scas
rcrb
stc
xchg
add
or
inc
outsl
mov
mov
out
add
jb
outsb
cmp
inc
fldl
lcall
jp
jmp
outsl
in
cli
mov
repz
out
fcompl
mov
xchg
mov
test
scas
fadds
cmc
test
out
repz
outsl
xchg
push
jmp
bnd
cs
jbe
popa
jbe
mov
lods
movsl
sub
push
or
clc
stos
mov
mov
mov
jo
jbe
or
loopne
jle
cmp
and
shlb
jns
dec
or
inc
mov
xorl
add
jo
or
dec
loopne
fmuls
sub
add
xchg
pusha
push
outsl
xchg
test
ja
xor
jecxz
pop
in
or
push
aas
pushf
push
jge
pop
add
cmp
push
sbb
rep
int
xor
lret
ret
sub
lret
loopne
pusha
jae
mov
dec
fldenv
inc
loopne
xor
and
sbb
scas
push
test
push
inc
adc
and
xor
paddq
jne
rol
sub
xchg
lahf
je
sahf
pop
test
and
aad
imul
test
lods
mov
movsb
lock
test
aaa
jmp
les
nop
lock
lea
imul
lahf
out
fs
xor
loop
push
adc
lods
icebp
dec
push
ds
imul
shlb
add
movsl
nop
ss
ret
insb
testb
cmp
addr16
jnp
in
adc
jmp
cwtl
jle
mov
leave
bound
bound
lock
pushf
pop
mov
xchg
jbe
into
pop
jl
lahf
push
pop
xor
mov
inc
popf
and
mov
loop
mov
daa
jo
sbb
orl
jae
adc
mov
pandn
fs
push
outsl
test
and
sub
mov
daa
jo
aad
xor
inc
xchg
in
stc
repz
sub
test
push
adcl
fsubrs
das
ret
push
mov
loop
adc
cmc
sti
jmp
cmpsb
and
scas
and
fidivrs
stos
mov
fadds
mov
cmp
or
pop
mov
fadds
bnd
int3
dec
addr16
push
adc
seto
mov
xchg
mov
imul
imul
xchg
jae
jo
add
in
daa
cmp
lret
fwait
into
out
js
mov
daa
sbb
xchg
cmp
fwait
cmpsb
jnp
in
push
jp
sbb
sarl
jne
and
pop
lds
add
enter
pop
push
adc
stc
ret
xchg
lret
adc
dec
mov
js
lock
cmc
ljmp
loopne
cmp
and
out
movb
dec
push
rolb
adc
jne
sti
push
add
mov
in
dec
inc
idivl
pusha
cmp
jae
pop
sub
jmp
push
cmc
and
cli
adc
dec
cwtl
jecxz
std
inc
xor
aaa
int
add
es
cmp
add
idivb
xchg
rcll
cmpsl
stc
sub
xchg
pop
stos
fnstcw
and
push
mov
idivb
popa
push
cmp
icebp
ret
fisubrl
inc
xor
pushf
push
pop
push
mov
mov
pop
rcll
loope
mov
mov
jb
cmp
stos
xchg
mov
and
ficomps
and
clc
iret
dec
inc
mov
loopne
sub
aas
push
push
and
les
cmpl
pop
xor
push
test
cmc
and
and
xchg
adc
inc
inc
pop
in
clc
sbb
sbb
or
dec
add
sub
mov
cs
dec
jbe
and
cmp
lds
pop
and
xchg
and
jnp
icebp
test
rorl
xor
ss
je
mov
or
ljmp
mov
sub
or
ret
rorl
dec
ja
jae
add
sub
jnp
lods
dec
pop
adc
popa
jae
cmp
ja
daa
mov
mov
cld
in
gs
mov
mov
and
pop
out
lea
sub
or
xor
aam
sahf
mov
arpl
mov
idivl
sbb
or
in
loope
das
out
sub
hlt
jge
push
mov
ds
ret
add
xor
adc
cmpsb
fsubs
adc
js
lock
test
adc
push
fcoml
add
push
mov
loop
and
mov
popa
or
pop
popf
js
or
sbb
cmp
add
sbbb
imul
or
insb
xchg
pop
aaa
cmp
int
fmuls
cmp
lahf
xor
and
fucom
ss
adc
pop
pop
fdivrl
xchg
or
std
in
sub
ljmp
mov
pop
mov
sbb
lret
mov
out
pop
mov
dec
mov
xlat
fldenv
test
loop
int
inc
dec
ljmp
push
sub
cmp
dec
jge
push
mov
fsubp
fwait
shrl
cld
imul
adc
data16
mov
or
adc
pop
push
repnz
add
sub
cmp
subl
push
xchg
cmp
adc
add
movsb
dec
inc
xor
push
mul
inc
sub
leave
les
cli
rcll
inc
adc
add
cs
adc
dec
cmpb
push
jnp
xchg
adc
insb
imull
push
sbb
cmp
push
inc
mov
jge
sbb
clc
sbb
push
cwtl
pusha
movsl
and
inc
inc
mov
inc
flds
loope
adc
or
push
imul
adc
add
cmc
in
test
in
pop
insb
cmp
clc
adc
mov
mov
loop
cmc
call
dec
sub
cwtl
insb
dec
jno
and
adcl
dec
mov
add
repz
jb
xor
in
lods
push
mov
pop
mov
push
xchg
adc
push
cmp
cmc
xchg
sbb
mov
dec
xor
sbb
xor
inc
ret
or
pop
dec
mov
das
sarl
icebp
int3
icebp
push
lcall
xor
xlat
out
mov
jae
cld
int3
repnz
call
test
sub
ljmp
jle,pn
mov
xlat
shlb
mov
fadds
arpl
sub
mov
aad
sub
jo
xlat
cmc
jbe
xor
cmc
add
js
fsubl
mov
adc
mov
in
jb
or
lods
pop
xor
stos
mov
pop
adc
xchg
popf
add
dec
mov
xchg
xor
loopne
icebp
mov
cltd
push
xchg
test
enter
jg
or
cmp
data16
popa
mov
pop
outsb
repnz
mov
stos
mov
or
jge
imull
sbb
icebp
or
jp
lret
sti
int3
add
insl
les
add
das
out
mov
scas
inc
call
outsl
inc
mov
popf
imul
enter
xchg
insb
lea
mov
and
das
xchg
jae
stos
cmpsb
xor
xchg
aaa
lret
xlat
enter
and
fidivrl
repz
stos
pushf
das
jecxz
ds
fwait
lret
xchg
inc
adc
mov
pop
hlt
and
add
pop
xchg
je
imul
aaa
sarb
cmp
push
mov
xor
jns
cs
inc
and
addr16
and
aas
sti
cmp
sbb
pop
jns
add
clc
gs
or
nop
dec
in
movsb
mov
fistpl
adc
cmc
icebp
out
xor
push
pop
mov
xchg
std
hlt
mov
lea
stos
gs
and
cmp
movsl
enter
mov
sar
cli
gs
repz
out
out
xchg
mov
cld
sbb
cmp
out
dec
push
xor
je
xor
lret
ja
insl
inc
jl
and
xchg
icebp
and
idiv
lcall
jns
jo
push
or
sbb
xchg
cmc
int3
sub
aam
jb
rorl
inc
jnp
inc
dec
jge
add
pop
cmp
lret
sub
repz
nop
les
dec
add
dec
lds
rorb
push
cmp
push
lret
xchg
into
loope
sub
fnstsw
negl
std
or
xchg
mov
jnp
ds
jnp
ljmp
dec
push
cs
cmp
repnz
in
fnstenv
pop
inc
and
xchg
pop
dec
test
fcompl
push
add
arpl
insl
mov
insb
xor
inc
in
std
jne
in
mov
cmc
jno
into
fadds
jge
loopne
xor
test
add
jg
push
fwait
int
ja
push
cmp
cmp
cmp
imul
into
xchg
xchg
aam
sub
data16
popa
push
ret
jecxz
jbe
pop
add
loope
bound
mov
or
leave
enter
nop
push
jecxz
test
jno
hlt
sbb
lock
mov
add
dec
pop
adc
xchg
mov
scas
and
rolb
popa
xor
inc
int
iret
scas
sbb
stc
mov
insl
inc
cmp
pop
sbb
insl
ljmp
jo
jmp
push
popa
mov
push
mov
mov
sbb
xor
addr16
and
jno
addr16
fwait
lcall
into
aam
ret
mov
mov
jne
dec
or
mov
xor
inc
aad
loope
mov
mov
dec
fwait
add
adc
xchg
sub
std
mov
test
aam
push
push
adc
mov
nop
dec
xchg
out
int3
out
imul
inc
jo
into
jae
ss
add
nop
jno
out
test
jl
sub
or
cmpsb
daa
inc
lods
dec
enter
adc
int
pop
ret
push
andb
pop
pop
cmpl
jb
in
mov
xor
mov
jb,pn
xor
dec
push
push
outsl
jnp
pop
mov
in
jp
mov
jb
and
dec
test
inc
adc
rcr
xor
cmp
outsl
jbe
sub
ja
xchg
das
cli
sub
lds
xor
sbb
lds
aad
pop
sbb
lods
mov
inc
and
xchg
movsl
imul
das
mov
ljmp
in
sub
imul
inc
sub
pusha
ds
mov
loopne
call
inc
cmpsb
inc
pushf
jbe
int3
mov
push
loopne
clc
dec
mov
mov
dec
js
push
stos
push
push
add
fisttpl
loope
xlat
popf
sbb
imul
push
adc
int3
or
xchg
aas
ret
mov
mov
out
fdivrl
jge
sub
and
test
xchg
ficomps
mov
dec
xchg
fwait
sbb
push
stc
int
out
add
or
jmp
ret
call
xchg
mov
jge
mov
push
test
sub
jno
sbb
jge
loop
testl
gs
lock
pop
lock
push
scas
in
mov
sub
xchg
inc
repnz
es
jns
ret
hlt
or
fistl
in
nop
dec
adc
loop
lods
inc
ret
push
xlat
dec
lds
pop
push
sub
lds
adc
imul
adc
scas
or
andb
pop
sub
xor
xchg
sbb
lea
fs
inc
cwtl
insl
pop
jne
mov
lock
xchg
mov
mov
jmp
xor
mov
xorl
in
fisttpll
inc
push
adc
mov
xchg
call
sbb
mov
mov
pushw
xor
aam
cs
cmp
movsl
sbb
xchg
jnp
mov
js
xchg
sbb
repz
call
lea
push
cltd
add
mov
fidivrl
inc
add
cmp
cld
inc
loopne
cld
dec
xlat
add
sub
pop
mov
push
test
into
pushf
insl
stos
mov
pop
jge
or
push
and
push
adc
fsubr
mov
dec
xchg
aas
mov
repz
add
xor
insl
jmp
cmpsb
and
push
dec
idivb
out
ja
loopne
cmpsl
nop
outsl
mov
les
lock
popa
roll
xchg
fwait
sbb
mov
mov
add
lcall
inc
pop
and
or
push
pop
and
mov
adc
cmpb
sub
out
imul
adc
cli
lods
xchg
cmp
aas
inc
fldl
ds
dec
into
aad
push
fcoms
ss
bound
rcrl
call
push
outsl
pop
ljmp
inc
nop
pop
mov
pop
mov
add
cltd
xchg
in
xchg
push
fsub
out
iret
lahf
pusha
rcl
mov
std
push
shrl
scas
or
xor
test
pop
mov
loop
clc
popa
sub
dec
popf
dec
xor
inc
mov
imul
pop
gs
ret
mov
lret
cwtl
jp
enter
pop
mov
dec
mov
jae
xor
in
mov
sahf
xchg
insb
jae
mov
push
xchg
cmpsb
adc
xor
add
ret
and
mov
pop
pop
push
aad
mov
or
into
jo
mov
rcl
push
jno
dec
enter
cld
mov
flds
fsub
div
and
cmc
push
icebp
inc
add
icebp
shlb
das
add
scas
jo
mov
sbb
dec
adc
xor
testl
mov
xor
mov
sub
mov
sub
aam
out
out
jp
jmp
jo
sub
and
mov
mov
in
shl
fdivp
and
das
fincstp
imul
push
fbstp
push
mov
mov
lds
adc
dec
lcall
int3
xchg
cld
cmp
insb
shr
jg
sbb
arpl
dec
pop
movsb
dec
out
jnp
mov
cmpsb
inc
jo
inc
ljmp
mov
repnz
ret
dec
mov
dec
int3
aaa
nop
hlt
cs
push
stos
or
jnp
cmpsb
stos
pop
in
xchg
mov
daa
sub
push
or
mov
xor
pop
je
punpckhwd
fcoml
push
lods
adc
xchg
add
sub
push
imul
popf
mov
pushl
jg
xor
int3
push
mov
inc
inc
adc
std
sub
stos
mov
rcrb
dec
xchg
bound
mov
pop
sub
inc
lea
pop
mov
jno
sbbb
xor
enter
dec
leave
cmp
push
mov
lods
jp
and
shrb
sbb
in
icebp
jno
add
rorb
adc
or
sbb
repnz
das
jle
sub
inc
adc
gs
popa
mov
jecxz
lret
out
inc
pushf
sar
cmp
faddl
pop
pop
dec
lods
sbbl
mov
add
les
hlt
aad
insl
aas
add
sahf
pop
jge
unpckhps
in
sub
shrb
dec
clc
mov
push
inc
jmp
jge
pop
lods
cmc
adc
call
mov
daa
inc
outsb
sbb
testl
xchg
dec
add
fidivrl
xchg
dec
sub
test
fwait
pop
add
jg
rcr
push
insl
fsub
in
jge
enter
lds
push
xchg
shlb
mov
rolb
dec
int
cltd
jno
push
mov
ffreep
hlt
ret
pop
push
add
shrl
jb
cltd
inc
and
test
fiaddl
scas
cltd
lahf
int3
lods
pop
xor
adc
and
or
push
sub
dec
subb
mov
iret
cmpl
dec
test
fwait
adc
mov
and
mov
xchg
imul
test
insb
sbb
fisubl
mov
push
cmp
adc
cli
fs
pop
std
aad
xchg
xchg
add
into
push
mov
push
dec
xchg
and
mov
fmull
test
stc
rclb
stc
aad
insl
imull
xchg
xor
push
xor
je
pop
lcall
lret
sbbb
mov
jl
pop
add
enter
inc
filds
int3
movsl
pop
arpl
xorb
sub
push
jne
jecxz
stos
cld
lock
jns
push
mov
imul
icebp
cli
loopne
add
xor
and
inc
push
add
ja
add
sbb
fsts
xchg
xchg
and
lds
cs
adc
ja
xlat
sub
push
pop
sbb
fsubrl
xorl
xorl
xchg
sbb
push
bound
mov
inc
repz
fcmovnb
fiadds
gs
mov
mov
mov
xchg
inc
pusha
pop
sbb
inc
dec
mov
leave
mov
adc
fs
andb
sub
decb
mov
jb
cmpsb
aas
sub
pop
jno
popf
pop
test
xor
push
into
sbb
add
adc
lds
mov
stos
daa
push
adc
sbb
cmp
jg
pop
adc
dec
ret
adc
cwtl
fisttpll
adc
fucom
sbb
cmpsb
rclb
pop
loope
stos
and
pop
sti
and
jl
test
stos
sbb
iret
xchg
cwtl
mov
fistpl
loope
rcr
pop
ret
test
fldt
imul
jmp
mov
push
repnz
xor
mov
or
mov
cmpsb
stc
pop
adcl
and
jno
pop
aam
sub
xor
and
cmpsb
movsl
test
jp
add
stc
jl
mov
pop
or
pop
jle
xor
inc
repz
sub
add
push
popa
adc
test
cltd
pop
int
sbb
idivb
xchg
into
ljmp
enter
jmp
xor
sub
dec
jbe
imulb
sbb
cmp
mov
xor
arpl
inc
jge
mov
test
push
or
rcrl
push
cwtl
sbb
rorl
xor
ljmp
dec
xor
gs
das
jo
sahf
push
js
add
negb
and
jp
push
jns
ret
repz
bound
push
jae
xchg
jp
mov
xchg
xor
das
hlt
cmp
xor
cmp
in
mov
les
mov
sbb
loop
push
push
mov
or
jle
adc
popa
inc
sbb
xor
loopne
add
ret
pop
scas
sub
xchg
insb
push
ljmp
movsb
aad
lret
dec
pushl
sbb
imul
je
shrb
mov
ficoms
add
or
inc
stc
add
test
sbb
out
cmp
push
mov
je
or
pushf
jle
add
push
mov
arpl
add
add
jmp
fdivrs
movsb
or
ja
push
popa
mov
lods
or
daa
mov
push
orl
rorb
fwait
dec
movsl
ds
lret
mov
pop
inc
push
std
inc
aaa
outsb
ljmp
push
sbb
dec
or
daa
repz
adcl
xor
mov
pop
aas
adc
push
mov
xchg
jle
leave
jo
and
shlb
and
rcl
and
leave
cmovg
pop
imul
shr
xchg
dec
xchg
fldcw
lret
loopne
insb
roll
pop
fldcw
rclb
in
jae
mov
lock
popf
scas
mov
ss
lods
mov
ret
mov
and
out
jg
dec
push
adc
rolb
sub
sti
lret
pop
lods
lcallw
cmp
in
mov
inc
add
out
test
fwait
ss
fldcw
adcb
fisubrl
jnp
jge
repnz
lods
std
cmc
add
mov
loope
arpl
gs
and
sub
cmp
out
movups
or
xor
loopne
jo
ss
and
jns
aas
shrl
cmpsl
mov
add
ljmp
inc
inc
stos
pop
lods
pop
sub
sbb
add
adc
pop
push
gs
mov
cmp
mov
pop
pop
in
sub
fsubr
cmc
mov
fists
pop
xchg
mov
iret
jae
lea
cmpl
ficomps
push
mov
hlt
pop
pushf
std
pusha
pop
sbb
mov
jo
outsb
je
loop
lea
sub
mov
pop
mov
mov
sbb
movsl
sub
adcb
in
pop
int
int
pusha
test
push
mov
cli
inc
lock
mov
xor
dec
jbe
adc
cmpsb
pcmpeqw
fcomps
and
out
or
mov
in
sub
call
ret
int
stc
in
in
push
or
pop
jno
xor
scas
push
loopne
sti
and
xchg
xor
int3
mov
pop
sub
js
shlb
cmc
jmp
sub
adc
lods
or
test
mov
pop
sbbl
frstor
sub
daa
xchg
test
dec
dec
mov
mov
push
mov
in
scas
adc
pop
mov
pop
xchg
or
cs
xchg
std
add
loope
ss
mov
out
push
clc
imul
in
inc
lods
adc
jbe
mov
cmp
inc
and
jle
jno
and
test
fwait
lret
and
dec
push
into
xchg
or
popa
scas
addr16
insl
cmovge
mov
daa
outsb
pop
push
adc
mov
inc
and
mov
mov
adc
faddl
rorb
orb
popa
gs
inc
push
cli
loope
aaa
arpl
lock
pop
test
mov
jle
pop
inc
call
pcmpgtw
jno
loope
imull
arpl
xor
out
mov
sub
jmp
test
jnp
arpl
stos
negl
fisubs
sbb
scas
mov
imul
loopne
icebp
test
sub
cmp
roll
scas
ret
inc
jp
inc
repz
and
mov
inc
inc
xchg
test
pop
and
mov
rcr
mov
in
cmp
add
add
movsl
mov
and
pushf
aad
popa
daa
mov
cli
sub
dec
inc
in
dec
movsb
pop
xor
jns
mov
lcall
out
jne
jmp
or
loope
arpl
clc
dec
cs
or
jnp
mov
mov
ret
ljmp
xlat
out
fildll
pop
aam
fdivl
cmp
push
lds
or
xchg
fadds
sub
dec
and
push
or
fwait
outsl
pop
imulb
push
clc
inc
sub
add
mov
repnz
arpl
xchg
enter
mov
aad
bound
add
lret
mov
xor
sbb
subl
lcall
dec
out
pop
out
add
inc
sbb
push
or
sub
scas
lods
xchg
jmp
jecxz
cld
lods
xor
leave
xchg
insl
adc
xchg
adc
lret
jmp
or
rdrand
rolb
sahf
je
mov
push
mov
jp
dec
xor
mov
cmpsl
cmpsl
cmp
jmp
and
daa
jnp
outsb
mov
push
xchg
xlat
xchg
push
jns
stos
xchg
adc
lods
jg
mov
test
pop
gs
or
push
mov
test
sbb
sahf
mov
jno
addl
out
pop
fistl
call
push
stos
fidivs
lea
push
push
cmp
shl
jp
mov
push
fnsave
dec
inc
insl
ds
jl
push
cmp
add
or
jecxz
lds
or
jb
inc
mov
sub
ficompl
and
shll
cmp
cmp
or
out
xor
or
leave
cs
mov
mov
rolb
xchg
aas
repnz
aas
cmp
pop
repnz
xor
mov
inc
mov
cld
inc
jp
inc
ffreep
add
cwtl
inc
adc
xchg
mov
pop
mov
inc
outsb
fwait
sbb
shl
add
in
cmp
xchg
in
and
adc
xchg
stos
sbb
sub
pop
les
cld
jge
mov
mov
mov
js
push
inc
fsubr
nop
add
mov
or
jl
int
incb
out
mov
jp
test
fsts
jne
add
int3
mov
xchg
pop
and
dec
pusha
mov
push
cli
test
test
mov
adc
inc
je
pop
xchg
pusha
inc
lods
or
stos
sub
arpl
push
shlb
divl
push
cmp
add
imul
icebp
test
movsl
popf
repnz
sbb
sti
ja
insl
mov
mov
pusha
stos
and
addr16
cmpsl
ds
loope
cld
rorl
pop
insl
mov
aas
adc
cmp
pop
sub
pop
in
mov
fdivl
cld
mov
dec
xor
lds
ds
mov
inc
scas
mov
leave
adc
enter
add
pop
mov
int3
stc
icebp
ljmp
pop
jne
imul
loope
mov
mov
hlt
xchg
mov
mov
mov
lret
jmp
dec
xchg
lcall
push
testb
ljmp
mov
lea
and
aaa
fs
xchg
mov
push
aad
out
sub
or
jecxz
or
xchg
jne
xchg
dec
push
mov
or
sbb
add
jg
arpl
ret
pusha
mov
and
cli
out
testb
or
mov
popa
std
mov
adc
gs
xor
xor
mov
std
push
add
jecxz
jl
jae
ret
imul
cmp
cmp
jecxz
popl
aaa
or
stc
cmp
mov
out
push
pop
hlt
jecxz
out
add
dec
jg
or
and
lahf
shl
cs
inc
pop
mov
fadd
fistps
les
in
nop
jge
mov
into
xchg
jnp
adc
mov
movsb
dec
lret
scas
dec
add
sahf
push
adc
mov
in
push
lret
loope
fiaddl
in
pop
jnp
add
fisttps
adc
mov
adc
mov
inc
ret
dec
push
int3
lcall
insl
mov
pop
cmp
xor
pop
imul
pop
test
mov
fsubl
out
mov
push
jl
sub
popa
adc
add
inc
push
xor
mov
fstpt
stc
in
aad
loope
push
and
out
dec
dec
lea
insb
pop
mov
pushf
pop
jmp
pop
mov
pusha
repz
push
jecxz
xchg
sub
dec
roll
outsl
push
ja
dec
sbb
repz
adc
aaa
jb
sti
test
outsl
mov
adc
dec
shll
in
pop
mov
jle
pop
loop
js
jns
data16
xor
lret
mov
lods
test
xchg
aam
ljmp
lods
dec
movsb
rorl
lods
out
loopne
movsb
testl
fdivl
and
aas
fdivs
aam
out
stos
dec
xchg
test
addr16
vandnpd
xchg
jg
jo
inc
divb
stc
enter
jle
out
xchg
cld
xchg
lahf
sbb
inc
sub
insl
adc
lea
fld
test
cmpsb
popf
jo
xor
cwtl
push
imul
in
sbb
push
cmpl
test
inc
enter
mov
repnz
je
test
lods
add
lds
and
inc
push
mov
sub
imul
mov
loope
cltd
pusha
lret
icebp
aaa
insb
test
and
dec
rcrb
jnp
lahf
sub
sub
insb
out
inc
xor
inc
js
in
jmp
jp
xor
and
insl
xlat
cmp
xor
andl
call
adc
dec
xchg
testl
imul
dec
mov
mov
cmpsb
cld
hlt
fdiv
pop
cmpb
and
call
pop
pop
pop
inc
add
stc
and
jb
sbb
bound
inc
jbe
lahf
push
ror
inc
sub
mov
ljmp
cltd
inc
push
mov
mov
aas
push
fisubrs
stc
je
sub
loopne
sar
mov
imul
jle
nop
xor
rorl
out
mov
dec
and
add
jo
insb
movsb
addr16
gs
aaa
mov
cs
sub
loop
sbb
sub
les
dec
sti
pushf
and
loop
or
cwtl
push
int3
repnz
and
pop
idivb
repz
out
xchg
test
popf
cmpsb
test
and
outsb
stos
arpl
adc
pop
mov
fwait
mov
daa
push
cmp
je
inc
mov
jmp
cmc
loop
lock
xchg
cwtl
arpl
rcrl
lea
inc
sub
cmpsl
lcall
pusha
aam
gs
cli
sbb
xchg
inc
sub
sub
daa
lret
aas
insl
and
gs
mov
outsl
mov
adc
call
or
mov
or
rcr
lcall
into
jnp
sub
ficomps
aaa
xor
shr
and
inc
out
mov
pushf
xor
fidivrl
js
lret
or
adc
imul
adc
and
lea
or
cmp
les
push
jge
addr16
dec
xchg
not
imul
inc
lock
lret
xchg
cld
jb
testb
and
fisttpl
ret
and
add
cmp
int
sub
adc
daa
add
or
inc
icebp
out
cs
pop
fnstcw
pushf
andb
or
movsb
or
mov
mov
and
test
xor
sub
mov
dec
pop
popf
and
ds
xor
mov
stos
ret
sti
cmp
push
clc
lcall
add
mov
mov
push
out
mov
xor
aam
push
lods
add
ficomps
outsl
loope
test
outsl
inc
mov
push
mov
sbb
scas
arpl
mov
es
sub
loopne
movsb
inc
pop
out
mov
int3
jbe
sub
in
and
ficompl
push
mov
mov
outsb
xchg
mov
xor
xchg
fsubrs
movsb
fsubl
lahf
cwtl
mov
ret
and
ret
jo
jge
cltd
faddp
push
stc
push
ljmp
dec
cmp
and
mov
inc
inc
fsubrl
jo
outsb
test
and
cld
and
jns
inc
call
xchg
inc
or
push
cmp
push
not
fidivs
push
mov
mov
daa
mov
mov
sahf
neg
bound
sahf
test
jb
cmp
aaa
enter
fld
and
aam
inc
lret
xchg
std
cmpsl
cld
fwait
mov
dec
test
fnsave
push
sbbl
push
adc
loopne
jno
popa
inc
mov
mov
dec
sbb
in
xchg
push
or
pop
xchg
imul
jbe
addb
mov
xchg
enter
gs
cmp
sub
push
lock
xchg
pop
mov
addb
into
aas
jne
sbb
adc
xor
out
cmpxchg
js
cmp
jmp
inc
lods
mov
push
popf
icebp
sub
aam
filds
lods
cmp
mov
mov
aas
xor
sub
in
mov
test
pop
mov
mov
pop
mov
jae
xchg
ds
and
or
leave
mov
xchg
push
insb
mov
les
loope
push
out
sub
or
or
mov
mov
ss
gs
mov
or
repnz
je
pop
lods
jne
stos
aad
cli
in
popf
mov
push
icebp
push
mov
addr16
popa
sti
mov
xor
nop
sbb
icebp
sti
mov
push
adc
daa
mov
scas
cltd
pop
jl
out
jge
xor
sahf
cltd
pop
or
mov
imul
sbb
and
mov
dec
pop
cmpsl
add
sub
xchg
mov
stos
jns
stos
out
repz
pop
lahf
inc
push
subl
xor
movsl
mov
push
loopne
seto
mov
bound
repz
iret
mov
pop
jle
bswap
test
fistpl
mov
sub
pop
xchg
xlat
pop
ds
xchg
push
insl
jbe
jo
lcall
cmc
xlat
xchg
push
dec
pop
inc
lods
inc
data16
xor
std
rcrl
scas
dec
xchg
lahf
cmc
pushf
inc
jno
aam
loope
mov
js
js
xchg
dec
test
dec
mov
mov
addl
loopne
inc
mov
test
leave
dec
pop
outsl
inc
mov
hlt
into
sub
mov
cmp
lret
jmp
push
jns
fidivrl
xor
sbb
jle
in
lea
repz
mov
gs
fsubrl
negl
stos
sti
sub
out
mov
sbb
xchg
add
inc
lcall
dec
clc
test
cmpsb
mov
sub
or
mov
adc
insb
mov
scas
in
in
enter
mov
cmp
repz
mov
push
sbb
inc
aam
add
sub
daa
mov
ja
aam
jle
fidivrs
loop
xchg
movsb
pop
jo
xchg
fisubrs
int
cmp
fucomp
sbb
mov
dec
push
push
or
xor
lods
and
push
pop
int
loopne
ret
outsl
lret
loop
and
imul
adc
adc
outsl
movsb
push
or
sahf
rcr
mov
shrb
out
mov
inc
fnstenv
aaa
pushf
pushf
outsl
std
mov
test
aaa
push
jnp
roll
enter
adc
rorl
insb
dec
rcl
ret
aad
mov
jge
or
stc
lahf
xlat
xchg
inc
mov
cmp
inc
jl
leave
ss
inc
outsl
pop
jg
sub
int3
stc
adc
das
mov
cmp
imul
sahf
fsubs
push
lods
lds
push
mov
push
cwtl
xor
cmp
sti
sbb
int
sbb
daa
sbbl
aam
cmp
in
sub
sub
loopne
sub
test
and
xchg
ja
adc
and
icebp
addb
call
loop
sahf
ja
xor
icebp
push
cmp
add
add
push
add
aaa
xchg
lods
or
mov
repz
sbb
xchg
lock
cs
iret
adc
sub
xchg
icebp
pop
fisubrs
jnp
mov
test
test
cmpsb
dec
or
outsb
fs
cwtl
mov
sbb
mov
rcl
xchg
add
cmp
movsb
andb
cld
fists
lahf
mov
ss
cmp
out
mov
push
adc
cmpsl
xchg
push
andb
in
sub
pop
rclb
aad
icebp
nop
fscale
adc
dec
movl
xchg
mov
add
shrl
and
cli
stc
cmp
lahf
xor
rorl
out
pop
movsb
nop
dec
mov
mov
hlt
mov
das
sub
push
lea
cwtl
dec
es
lahf
int3
inc
mov
jno
dec
pop
inc
fsubl
sub
jle
mov
mov
jle
imul
inc
push
ljmp
jb
dec
ret
mov
push
rcll
xor
jl
pop
loop
pop
icebp
gs
dec
iret
aas
pop
jo
cli
lea
inc
dec
outsl
or
lret
inc
xchg
mov
ret
or
sbb
jg
fdivp
adc
cmp
mov
cld
dec
xchg
sbb
fidivl
clc
insb
dec
mov
sub
xlat
lret
dec
lock
and
mov
push
pop
and
lods
fadds
loopne
jle
out
scas
mov
adc
xor
cmp
out
es
cmp
icebp
jp
insb
inc
sub
mov
inc
sti
xchg
mov
mov
xchg
dec
jns
or
cmpb
push
xchg
data16
aad
scas
stos
data16
pop
js
es
push
jg
push
or
push
jns
lock
push
mov
xchg
iret
pop
push
jp
pop
ss
adc
xchg
add
inc
pop
push
fs
push
mov
divl
pop
ja
decl
mov
fcomps
setae
test
mov
xchg
add
loop
pop
pop
out
mov
or
xor
mov
xchg
jns
fcoml
jmp
cltd
mov
and
mov
or
and
push
test
addr16
or
dec
out
mov
cld
scas
mov
pop
and
push
stos
icebp
inc
and
pusha
cmpsb
nop
stos
lret
sub
cmp
mov
daa
in
mov
sub
pop
int3
pop
fistl
jo
test
mov
pop
js
lods
cmp
divl
adc
push
loop
in
jle
push
insb
pop
arpl
fwait
add
js
or
add
push
js
adc
and
daa
rorl
mov
mov
loopne
add
bound
add
jne
jb
xor
jle
loope
mov
mov
or
or
jae
je
push
repnz
xchg
and
sub
scas
leave
pop
mov
inc
mov
lods
mov
andl
push
stos
sub
je
sti
mov
mov
cltd
push
and
ficoms
mov
xor
arpl
sub
adc
dec
mov
xor
cltd
inc
in
sahf
rclb
scas
xchg
jne
int
and
loop
test
xorb
lock
ret
mov
out
pop
sbb
dec
add
jg
or
or
aas
sbb
gs
or
mov
adc
int
rcr
xchg
mov
pop
inc
and
or
pop
loop
xor
push
loope
jne
xor
mov
out
daa
bound
pop
xchg
repz
pop
jo
cld
inc
sbb
cmp
ret
push
jecxz
mov
mov
fimuls
hlt
stos
in
push
mov
mov
or
test
cmpsb
iret
test
pop
push
out
jle
push
outsb
or
mov
into
push
out
and
and
rolb
ret
fldt
push
xchg
sub
arpl
jnp
mov
call
push
dec
lcall
mov
lret
or
mov
lds
sbb
ja
daa
pop
inc
movb
fdivrs
fnsave
mov
fcompl
inc
lahf
jl
cmp
divb
mov
mov
cs
cmc
or
adc
rcr
jns
popf
cmp
nop
cli
pushl
adc
inc
insl
xchg
sbb
add
cwtl
sbb
cld
push
subl
xchg
gs
std
imul
lods
adc
inc
sbb
xlat
dec
and
xchg
aaa
push
loop
movsb
lret
clc
test
push
inc
ret
adc
mov
cmp
movsb
out
adc
mov
sbb
pop
push
fsubs
js
lcall
lret
dec
and
adc
sbbl
and
or
add
rcll
stos
pop
inc
or
test
outsl
decb
iret
loop
ljmp
dec
adc
push
dec
decl
cmc
sarb
out
mov
iret
jo
movsb
push
cltd
mov
pop
rcl
test
jne
mov
cs
jno
push
popa
pop
rclb
dec
lret
cmpsb
mov
jg
das
or
jl
lahf
fildl
repnz
cmpsl
jbe
pop
mov
push
xchg
xor
mov
xor
arpl
mov
stos
repnz
ret
and
pop
rcrl
or
in
data16
and
outsb
adc
pop
mov
sbb
pop
outsl
sbb
outsb
mov
lods
mov
pusha
and
cmpsb
pop
pop
dec
inc
sbb
nop
mov
int
or
test
iret
loopne
iret
dec
push
sahf
lahf
adc
stos
jns
jb
xor
js
stos
jae
cli
and
jbe
cmp
das
mov
xchg
lahf
adc
mov
push
fsubs
or
pop
add
mov
int
loopne
and
mov
adc
adc
test
icebp
lret
aas
aaa
ret
xchg
aas
out
adc
fbld
test
lahf
mov
and
shlb
or
adc
in
sub
jns
iret
cmp
mov
popf
lods
pusha
sbb
pop
xchg
jge
sahf
push
test
inc
rcl
cmp
nop
sub
and
leave
rorb
iret
stc
cs
repz
loopne
or
aaa
pop
or
insl
pop
cmp
shr
cs
aam
xchg
inc
pusha
pop
lds
cmc
mov
mov
icebp
and
push
push
test
jb
ret
inc
xchg
lods
adc
sbb
std
mov
gs
shrb
xor
das
mov
roll
jne
fimuls
push
shr
adc
fidivrs
popf
add
fidivrs
sub
cmpsb
jb
dec
bound
xchg
lds
push
lcall
out
push
cmp
adc
dec
mov
movsl
fistpl
enter
cmp
or
les
xor
gs
lcall
add
mov
inc
jge
sbb
iret
ret
daa
cmp
push
test
ss
cltd
test
lods
loope
inc
adc
ljmp
push
lcall
int
aas
pop
test
fistl
dec
aam
or
push
add
adc
loopne
pop
inc
push
cltd
jae
jge
adc
test
aad
idivl
test
lods
cli
and
je
int3
std
popf
xor
cld
divl
lods
pusha
mov
iret
cmp
dec
or
lcall
out
notb
adc
or
stos
js
std
into
push
dec
nop
lock
cltd
out
cmp
mov
xor
jp
sbb
imul
jecxz
leave
pusha
jb
xor
shll
fbld
pop
sub
adc
repz
mov
repz
inc
into
ret
loopne
ret
out
loop
xchg
ds
dec
stc
inc
xor
in
sbb
lahf
pop
jp
or
adc
pop
jg
or
mov
call
mov
addr16
in
mov
scas
data16
imul
cmovae
push
inc
jnp
cmp
push
cmp
add
aaa
leave
inc
rcll
in
mov
ffree
sub
dec
jae
stc
sub
shlb
push
and
or
inc
mov
fidivrl
and
sbb
fs
hlt
dec
and
push
mov
add
jl
mov
js
in
cvtpi2ps
hlt
cmp
inc
int
mov
cwtl
rorl
out
leave
and
xor
fldenv
bound
pop
push
cli
ret
lds
ss
in
call
arpl
andb
insl
gs
jne
lea
adc
sub
rorl
pop
pop
xchg
mov
inc
inc
rcrl
jmp
in
repnz
aaa
iret
in
in
fstps
pushl
lods
dec
cmpsb
dec
cli
lock
jl
in
ljmpw
arpl
jmp
sub
loope
in
ds
inc
stc
dec
mov
xchg
cmp
lods
jb
cmp
add
test
add
test
sahf
std
xchg
in
jle
mov
mov
lock
insb
jne
dec
push
fsubrs
jl
mov
mov
push
shr
stc
xchg
sub
jge
imul
lret
mov
xchg
or
in
cmp
pop
cwtl
add
loop
aad
xchg
mov
loop
lret
enter
clc
xor
cmpl
jge
mov
inc
adc
cld
sbb
and
adc
mov
push
aad
loope
popf
mov
lea
mov
popf
cmc
lret
movsl
les
sbb
jns
sti
idivl
shlb
dec
push
cmp
inc
inc
aam
cmp
dec
inc
push
xor
mov
in
sub
bound
cmp
push
sbb
cwtl
inc
out
jne
pop
adc
popa
jnp
inc
adc
pop
pop
push
pop
scas
jb
xchg
mov
inc
sbb
mov
test
push
sub
ds
out
jle
testl
xor
pop
stos
mov
and
or
iret
cmpsb
ds
jmp
xor
dec
jecxz
mov
and
insl
outsl
pop
les
das
push
jl
in
xor
sub
mov
lods
ficomps
out
adc
lock
jecxz
jle
mov
cli
cmpsb
std
imull
loopne
sub
jmp
sub
pushf
sbb
dec
jo
add
mov
and
push
sub
sub
jmp
insb
in
test
movsb
pop
xor
pop
icebp
jmp
jmp
and
js
sbbb
subl
inc
adc
mov
adcb
mov
xchg
sbb
pop
jne
pusha
cmp
sbb
adc
std
imul
xchg
cli
push
xchg
les
aam
jno
es
fwait
jp
popa
sub
arpl
loop
test
stos
dec
icebp
cli
jle
sbb
add
push
or
jb
outsb
test
adc
mov
and
movsb
sbb
xor
adc
movsl
pop
ds
sarb
cmp
push
jo
ret
pop
mov
jmp
std
jb
sbb
and
stos
inc
pop
lds
pusha
mov
pop
fs
pop
and
dec
add
ss
daa
sbb
pop
fcmovu
dec
fistps
inc
daa
jns
add
mov
cmp
mov
lret
lock
adc
mov
pop
jae
rorb
push
cmp
jmp
stos
lahf
mov
mov
int
pop
xor
push
xchg
push
insb
std
int3
rcr
repz
fsubr
jmp
popa
and
xor
outsl
adc
xchg
pop
mov
pop
outsl
nop
inc
mov
adc
xchg
lahf
movsl
aaa
cmp
sbb
cmc
xchg
inc
scas
xor
inc
pop
call
fwait
cli
xchg
lret
sub
mov
cmpb
xor
mov
outsl
movsl
xor
dec
sub
push
jo
add
or
aam
adc
lret
addr16
sbb
mov
test
mov
mov
push
inc
jno
and
mov
jno
sbb
mov
icebp
in
arpl
sti
repnz
add
test
lock
xchg
pop
push
imul
sbb
jecxz
lret
stos
jp
dec
push
lock
fisubrs
add
imul
mov
mov
jbe
cmp
or
xchg
repnz
xchg
or
jns
clc
sbb
or
lods
push
les
and
cmp
pop
mov
jno
jmp
lods
rolb
dec
cmpb
push
leave
dec
xchg
push
sbb
push
mov
and
clc
sub
test
rcl
mov
imul
push
pop
push
testb
xchg
flds
or
and
or
imul
gs
mov
cmp
and
jmp
inc
rcll
dec
repnz
or
pusha
add
sarl
iret
movsb
xchg
mov
call
jb
sbb
loop
movsb
out
test
sbb
adc
iret
sti
cmp
mov
lret
ja
ja
jp
testl
arpl
jmp
aas
xchg
iret
imul
pop
stos
jmp
bnd
jns
pushf
mov
push
lret
jmp
test
pop
aas
jmp
xchg
cwtl
das
xchg
sub
nop
test
ficompl
rolb
pop
outsl
jns
out
gs
dec
adc
mov
xor
xchg
icebp
xor
mov
mov
lret
mov
lret
in
icebp
xchg
add
jmp
add
jmp
push
mov
mov
pop
inc
adc
push
into
jnp
arpl
jns
pop
xchg
sbb
lcallw
es
jmp
sbbb
add
or
jo
mov
inc
inc
imul
les
rolb
xchg
lods
lds
inc
mov
push
sbb
xor
enter
fst
jnp
adc
push
rcl
mov
out
mov
in
stos
mov
flds
outsl
mov
scas
mov
in
notl
addl
push
or
lcall
xchg
aaa
fdivl
nop
adc
imul
jae
jp
repnz
decb
mov
daa
sbb
pop
psrlw
xor
cmp
cld
sub
sbb
stc
push
sbb
fs
xchg
movhps
pop
xlat
stos
rcll
mov
in
mov
or
lods
pop
repz
cmp
icebp
popl
xor
mov
xchg
hlt
fildll
lock
cmp
sub
scas
sub
xor
push
pop
push
sbb
lahf
ljmp
adc
std
pop
shll
sbb
push
out
or
test
xor
xchg
pusha
cwtl
push
pop
imul
mov
popa
cmp
hlt
cmc
inc
repnz
out
pop
popa
pop
cwtl
in
pop
xor
out
in
sbb
push
xor
inc
mov
addl
mov
sbb
testb
in
int3
out
jg
push
pop
dec
mov
jp
call
xor
bound
adc
loopne
inc
sbb
nop
mov
hlt
test
jmp
hlt
xchg
bswap
popa
fadd
cwtl
sbb
mov
aad
pushf
jg
add
and
and
xchg
loope
add
sbb
arpl
mov
add
or
stc
fisubrs
xchg
xchg
rcll
ljmp
loope
push
pop
pop
mov
hlt
incl
ret
pop
mov
mov
push
lods
push
aaa
in
xor
scas
mov
shl
and
outsl
daa
repz
xlat
test
sub
filds
cmp
aam
push
jle
dec
xor
push
xchg
imul
xchg
fisubs
xchg
mov
les
dec
pop
fdiv
movsl
jle
adc
pop
mov
mov
aaa
out
xlat
cmp
out
mov
push
inc
and
test
xchg
xor
in
mov
arpl
mov
mov
in
movsl
xor
test
pusha
mov
fwait
jno
leave
inc
inc
mov
das
push
out
dec
ret
adc
rcrl
xchg
adc
and
fidivrl
add
in
imul
cltd
sub
inc
push
loopne
inc
shr
jle
jle
xchg
pop
clc
push
je
push
int
inc
imul
xor
xor
lock
and
pinsrw
fsubs
insl
pop
call
je
subl
inc
mov
or
mov
in
fmull
pushf
mov
push
cmpsb
stos
pop
push
push
add
andl
jbe
xor
push
pop
dec
xor
push
xor
mov
mov
jg
sub
scas
scas
rcll
mov
leave
or
ret
lods
in
pop
lret
mov
pop
mov
cmpsl
shr
lahf
data16
rcll
int
push
stc
pop
jge
push
mov
jle
jne
pop
or
dec
sub
imul
xchg
jno
push
adc
adc
sub
pop
add
ljmp
xchg
imul
push
incb
cmp
aaa
mov
push
push
out
jo
add
add
or
and
dec
or
cmpsl
mov
and
aas
ja
outsb
push
add
pop
adcb
call
out
pop
mov
adc
cli
sub
push
mov
inc
pusha
add
add
fwait
mov
mov
shlb
scas
mov
stos
popf
lret
ds
push
sbbl
stos
in
ret
mov
sbb
rolb
xchg
push
rcrl
jle
es
jg
xchg
inc
pop
dec
mov
push
sub
mov
lock
cmpsb
cli
scas
out
fsubp
decl
push
sahf
sbb
and
push
mov
mov
push
aam
dec
mov
incl
inc
aas
push
out
cmp
adc
push
clc
pushf
inc
jo
push
sub
loop
jle
out
mov
aam
lds
sbb
push
enter
fwait
mov
inc
adc
imul
lret
mov
xchg
lods
cmpsl
push
mov
jno
movsb
add
lret
cmp
mov
pop
aas
xchg
std
nop
dec
mov
and
mov
mov
sub
push
test
dec
push
sub
loope
push
adc
push
add
sbb
xchg
cmpsb
pop
or
fnsave
or
cmp
jmp
cmp
xchg
pop
mov
gs
imul
out
sub
jns
sbb
hlt
xor
push
sarb
repz
test
sahf
bound
xchg
xchg
mov
xchg
fwait
mov
jne
or
lods
ja
mov
cmp
mov
inc
cli
sub
sahf
ret
push
sti
adc
mov
mov
jp
jmp
fwait
xchg
adc
pop
test
mov
or
push
xchg
scas
or
xchg
mov
mov
into
fldt
sub
jns
jmp
test
push
xchg
add
in
push
dec
cmp
outsl
pusha
repz
pop
adc
lret
pop
cmp
nop
and
lods
adc
call
cli
sub
mov
ljmp
andb
int3
das
sub
sbb
add
xchg
pushf
test
mov
push
and
cmp
inc
jecxz
cld
shll
push
mov
xchg
add
mov
lcall
and
cmpsb
cld
stc
sbb
clc
aaa
xchg
xchg
arpl
sbb
in
filds
xor
addb
bound
and
mov
xlat
adc
mov
dec
mov
add
pop
and
push
mov
fwait
mov
and
adc
test
outsb
mov
sbb
daa
mov
lea
mov
push
movsb
pop
les
dec
in
mov
pusha
lret
adc
mov
and
jae
mov
push
addl
fdivrl
loop
adc
xchg
mov
push
test
and
cmc
lret
ja
dec
loop
mov
xor
xchg
xchg
std
outsb
sub
and
inc
andl
lret
pop
stc
xor
es
push
rcll
fst
testl
cmp
fs
lds
mov
push
jecxz
push
jbe
push
xor
mov
mov
test
test
push
dec
jecxz
leave
insb
ljmp
lret
stc
inc
push
inc
or
push
mov
gs
push
cmp
mov
mov
std
mov
stc
fs
or
sbb
scas
scas
aam
sub
loope
mov
in
add
mov
std
int
xchg
and
call
cwtl
push
jb
cld
sarb
hlt
call
sub
sbb
popa
or
leave
clc
mov
add
dec
mov
sarb
int
xorl
popf
add
sub
xchg
mov
sti
dec
cmp
cmp
fadds
das
adc
adc
lock
push
pop
bound
popf
popa
mov
push
shlb
jne
push
iret
jns
iret
jle
add
push
inc
out
jb
sub
pop
daa
inc
adc
xor
and
xchg
mov
xchg
loope
ds
add
dec
outsb
sbb
push
cld
movsl
push
pop
mov
jbe
xchg
ss
dec
stos
xor
cld
imul
jae
inc
xchg
ljmp
xor
cli
dec
call
push
jg
or
pop
dec
cmpsl
ljmp
mov
es
push
fstps
stos
push
xchg
sbb
leave
das
fcompl
push
fstps
xchg
cmpsl
movb
in
ret
rep
lret
or
sbb
pusha
int3
jmp
push
sbb
mov
push
mov
pop
xor
jge
pop
pop
and
fs
shrl
rcrl
sbb
lods
mov
jbe
mov
mulb
mov
movsb
mov
incb
int3
aam
or
jp
flds
daa
ljmp
jae
push
dec
inc
pusha
nop
mov
fisttpll
sarl
loope
mov
icebp
sti
jp
or
or
mov
ds
jns
fmuls
xchg
out
jmp
lret
andb
sub
sub
push
sahf
dec
rolb
or
inc
cmp
mov
insb
sahf
mov
popf
pop
or
dec
xchg
pop
pop
sbb
push
test
push
movsb
fucomp
mov
orb
xchg
add
sbb
dec
fdivs
pop
call
fimull
in
and
mov
pop
enter
fldenv
pop
ds
gs
cmc
adc
pop
jb
idivb
xchg
jbe
jno
sbb
call
popa
test
insb
sbb
aaa
mov
insb
xor
ljmp
pop
cmpsb
aam
dec
adc
pop
mov
loop
test
push
inc
fistps
xor
shrb
pushf
mov
sbb
sarb
push
out
xchg
lods
daa
cmpsb
push
mov
aam
aas
xor
cmc
shl
insb
stos
pop
clc
mov
push
add
cmpsb
and
aas
imul
jne
ja
cmc
pop
cmp
push
enter
sub
jge
les
sbb
das
cld
push
xorl
test
iret
in
lds
jbe
xor
in
dec
lea
mov
sbb
cli
int
push
jno
mov
fs
leave
subl
push
test
aaa
and
cmpsb
sub
cmp
lock
lret
cmc
call
ja
movsl
lods
stos
cmp
incl
mov
mov
cmp
jnp
dec
sbb
inc
xchg
and
inc
out
sub
aam
pop
std
cld
bound
ss
out
andl
xchg
leave
popf
fisubl
push
ret
mov
imul
sahf
push
test
scas
stos
sub
dec
data16
mov
and
or
nop
shl
pop
inc
cld
cmpsb
rcl
add
xor
mov
shll
insb
and
or
stos
xchg
lods
adcl
clc
jbe
icebp
out
mov
daa
ss
orl
popf
call
push
jg
push
jge
sahf
enter
ds
mov
popa
lcall
mov
jmp
ret
dec
lock
bound
jmp
adc
imul
mov
inc
jg
push
mov
mov
cmp
inc
sbb
pop
sub
inc
lods
jle
repz
pop
imul
je
sbb
sub
jl
inc
je
mov
or
xchg
sub
call
cltd
stos
leave
enter
jne
ds
ret
push
flds
or
pop
cld
dec
sub
popa
fsub
sbb
dec
hlt
push
push
test
push
shr
sbb
pop
or
dec
repz
fdivrs
mov
into
popf
aam
pusha
data16
xchg
jl
testb
insl
ret
lea
int
add
push
add
dec
dec
mov
lret
adc
sahf
mov
push
into
insb
mov
cmp
repnz
mov
push
xor
xor
xchg
cltd
mov
lds
int
mov
sbb
push
cmpsb
push
nop
adc
loopne
int
push
pop
mov
fstpl
adc
das
sbb
clc
sahf
push
sub
dec
cmp
and
arpl
movsl
js
jbe
aaa
popa
ja
xchg
mov
or
fldcw
dec
mov
push
hlt
daa
cld
inc
and
mov
jmp
stos
cld
jg
cwtl
jl
aas
mov
pop
mov
ret
push
cltd
insl
aas
or
mov
aas
xchg
shll
loopne
leave
scas
adc
les
in
mov
mov
scas
std
pusha
outsl
imul
push
mov
rolb
pusha
cmp
sahf
or
push
aas
jne
std
xchg
xchg
pop
je
adc
adc
lahf
xchg
test
pop
add
lret
jl
aam
je
jb
mov
ret
popf
or
mov
dec
lock
xchg
jmp
fnstcw
icebp
pop
movsl
mov
sbb
les
jo
xor
incb
add
inc
cmpsb
xchg
and
in
cltd
lahf
sbbb
inc
add
and
rolb
pop
in
add
outsb
cmp
sbb
sbb
jecxz
movsl
mov
cmp
jns
inc
fdivrs
push
daa
popa
nop
mov
sub
mov
xchg
mov
jo
adc
push
jb
adc
or
pop
out
rorl
and
inc
mov
or
jae
test
loop
jae
mov
dec
adc
xchg
and
enter
lods
jl
push
mov
pushl
sub
or
jp
jge
jbe
std
push
call
movsb
xchg
jl
mov
ljmp
jecxz
xchg
cmpl
mov
add
test
pop
movsb
js
xlat
xchg
dec
call
mov
test
int
cmpsl
das
or
sub
in
test
aas
cld
and
inc
sub
xorl
jg
jg
mov
jle
test
adc
rcrb
push
mov
push
push
leave
inc
inc
repz
sub
sarb
pop
lods
jbe
pop
push
cli
fwait
jb
xlat
jl
into
cmc
adc
mov
mov
fmull
adc
gs
and
loopne
arpl
out
add
je
ret
cmpsb
sbb
adc
mov
shr
push
aas
rcrb
andb
cmc
fucomi
jnp
pop
push
jl
cmc
push
and
lds
fbstp
dec
mov
sub
lds
jb
jbe
push
add
fmul
clc
addl
add
xchg
gs
xor
sub
mov
mov
insl
lahf
or
pop
ds
test
sub
faddl
adc
mov
fnstenv
jp
sub
sbb
xor
in
adc
lods
shrl
fldt
adc
push
jno
pop
xchg
push
aaa
mov
cld
xchg
push
inc
xor
test
in
push
push
push
in
adc
insb
xor
cbtw
adcb
js
rcrl
dec
clc
lods
jmp
dec
ds
xchg
xchg
mov
aad
pop
and
inc
out
arpl
push
jne
scas
pop
mov
inc
stos
inc
or
adc
add
pop
xor
cltd
cld
test
mov
test
cmp
adc
pop
lock
ds
sarb
jbe
cmp
or
mov
int
arpl
or
subl
loope
ss
sbb
sub
and
push
scas
mov
loope
movsb
movsb
int
sbb
into
shlb
mov
leave
xlat
jl
out
shl
test
jl
mov
or
dec
jl
in
sbb
aas
push
shrl
aas
push
jge
sar
sbb
clc
arpl
sti
popl
mov
insb
push
cmp
out
je
adc
rclb
jmp
or
cmp
nop
xor
cli
dec
push
jle
mov
ljmp
lret
insb
ret
add
inc
xchg
movsb
pcmpeqd
mov
adc
mov
cmpb
cmp
lcall
mov
and
test
fdivs
incb
out
xor
icebp
ljmp
gs
inc
mov
data16
std
xchg
sbb
outsl
data16
add
enter
sbb
pop
mov
ret
repnz
add
enter
jmp
enter
pop
mov
test
out
and
inc
jbe
mov
imul
push
jb
add
jae
pop
push
inc
test
adc
cmp
fmul
data16
jmp
lods
out
ss
lock
sub
es
int3
fidivrs
orb
push
rorb
jno
popa
pop
rorl
mov
push
in
cmpsb
mov
mov
loope
pop
push
dec
sub
xchg
shr
cli
icebp
jmp
add
subl
outsb
mov
testb
ror
std
rorb
out
mov
xchg
adc
xchg
cmpb
mov
int3
icebp
enter
ret
subl
pop
cmpsl
inc
lcall
mov
hlt
push
test
jb
movswl
int3
popf
mov
inc
loope
loop
lret
shrb
push
xor
cmp
arpl
test
lahf
clc
fwait
inc
pop
gs
mov
call
mov
ja
pusha
adc
stos
and
outsl
loope
stos
inc
mov
push
or
sarl
push
and
imul
sbb
xor
dec
add
mov
filds
lods
jle
jae
movsl
pop
sahf
sbb
repnz
adcl
loope
add
sbb
out
movsb
jno
pop
xor
sti
sub
stos
icebp
sbb
or
ret
mov
imul
lds
and
outsb
jl
sbb
jo
push
stos
pop
xor
jmp
fbld
push
xchg
scas
xchg
sti
in
adc
mov
lret
ret
sub
iret
jb
test
ljmp
adcb
std
fldl
loope
addb
pusha
out
mov
orb
or
cmp
test
fdivrs
les
dec
add
test
sub
mov
inc
push
adc
pop
adc
pop
inc
pop
daa
xorl
xor
dec
repnz
push
mov
or
scas
add
hlt
pop
mov
push
jno
mov
insl
xor
cltd
and
mov
stc
filds
add
xchg
ret
pop
or
jecxz
jns
sub
mov
movsl
push
aam
push
mov
pusha
jmp
jns
or
out
shlb
pop
cltd
in
jns
pop
mov
in
xchg
stc
or
leave
dec
push
inc
test
lss
outsl
movsl
inc
xchg
mov
sbb
cmpsl
or
out
or
sbb
orb
wbinvd
sub
pop
inc
mov
pusha
test
sar
dec
aaa
inc
popf
mov
out
or
inc
fbld
loope
jae
sbb
push
and
lcall
mov
stos
push
outsb
push
adc
jp
std
out
repz
add
dec
jo
push
ret
imul
fcomps
rolb
cmp
test
in
mov
dec
dec
xor
cmpsb
into
lods
imul
lea
scas
cmp
pop
ret
push
lea
adc
sbb
aas
or
mov
int
and
int
jbe
pop
jmp
enter
or
fiadds
ss
xorb
or
and
push
dec
add
or
or
fldt
lcallw
push
pavgw
loope
push
mov
xchg
ret
xlat
stc
out
cmp
cli
cltd
sar
mov
add
sti
pop
add
jnp
and
jae
ss
outsl
sbb
ljmp
sbb
aas
mov
and
aaa
lret
xor
inc
ret
shlb
cmpsb
div
xchg
mov
sti
ljmp
xor
outsb
addr16
lock
test
out
dec
loop
push
popf
xchg
jb
cmp
loope
push
mov
aad
lods
sbb
dec
mov
clc
mov
iret
adc
jge
popa
es
lret
sub
std
rclb
mov
filds
sbb
div
jecxz
fistpl
xor
jp
pop
cmpsb
ret
shll
shl
cmpsb
mov
inc
jge
ja
dec
pop
sub
lea
in
xchg
lods
mov
mov
sbb
in
rorl
pop
sbb
cmp
xchg
cld
popf
xor
cmp
adc
and
push
test
jp
mov
test
push
jae
dec
mull
out
push
je
sbb
cmc
lahf
adc
insl
dec
dec
inc
pop
aas
inc
jns
cmpb
xchg
adc
adc
movsl
sbb
imul
add
ret
add
mov
push
mov
xchg
ljmp
stc
xchg
hlt
out
xchg
imul
shlb
fstps
enter
out
in
or
mov
push
dec
adc
hlt
cmc
outsl
lods
mov
xchg
scas
mov
ret
enter
push
mov
arpl
mov
lret
enter
adc
jno
xor
xor
adc
in
sbb
lcall
inc
out
cli
jl
dec
mov
mov
stc
pop
pushf
inc
scas
pop
mov
adc
fs
mov
imul
int3
test
sub
insl
arpl
scas
mov
fwait
jb
movsb
adc
push
mov
cmp
adc
mov
sti
lods
jp
lea
mov
jns
sbb
outsl
jmp
aad
divb
xor
push
jns
and
xchg
jns
jecxz
adc
push
vmovddup
icebp
mov
fwait
arpl
push
mov
push
adc
lods
lods
inc
js
adc
inc
adc
jnp
dec
data16
in
xchg
cmp
insb
cwtl
add
rcrl
sub
jae
lea
inc
jp
push
sbb
push
jg
stos
dec
roll
sub
mov
xchg
mov
push
add
cld
cmp
daa
or
jge
test
lock
aaa
in
mov
data16
clc
sbb
lea
movl
aam
mov
popa
mov
push
dec
dec
in
or
add
pop
pushf
and
inc
cwtl
push
mov
push
dec
lret
push
or
mov
fiadds
repz
in
test
push
push
lret
mov
lods
popf
ret
rolb
push
sbb
xchg
cmp
fimuls
ja
cltd
cld
insb
mov
leave
mov
push
pop
inc
dec
jle
nop
ret
adc
add
loope
scas
xchg
xorl
cld
cs
pusha
mul
sbb
bound
pop
mov
cmp
shrl
mov
adc
sub
dec
aad
aad
repz
stc
std
adc
cmp
dec
in
sti
call
or
mov
cltd
or
add
loop
cltd
imul
mov
aas
cld
in
inc
popa
mov
xor
push
mov
and
pop
adc
fwait
test
loopne
sbb
test
mov
pop
outsb
out
mov
cvtps2pi
xchg
pop
adc
nop
in
aam
sbbl
mov
aam
inc
cmpl
xchg
cmp
leave
call
cmp
mov
mov
stos
dec
cwtl
dec
dec
lret
repz
jmp
push
xor
std
inc
sbb
rorl
cltd
mov
das
loop
je
sub
cli
pushf
xchg
fsubl
inc
mov
aas
in
popa
push
mov
mov
jg
push
lods
and
pop
sub
jmp
push
adc
fadd
jg
adc
or
imull
pushf
in
fwait
setnp
mov
xchg
daa
arpl
jg
or
pop
add
jae
daa
leave
mov
scas
and
jb
xchg
jmp
test
cmc
je
mov
sbb
jp
scas
xor
subl
or
int
sub
mov
ds
and
fiadds
jmp
xor
lock
es
push
xor
les
aam
lock
shl
out
mov
es
cmp
jge
mov
sarl
push
and
cmp
mov
pop
or
je,pt
mov
pop
mov
cmp
iret
sbb
add
sbb
test
shrl
sbbl
rorl
out
xchg
mov
cmp
into
ret
mov
xchg
xchg
add
out
aas
lock
or
mov
xchg
dec
daa
and
push
dec
lods
ds
fstps
outsb
jge
movsl
insl
mov
sbb
testb
add
les
into
fdivp
fmulp
mov
and
sub
adc
jne
jg
fmuls
jl
addr16
jbe
pop
jb
cmp
lods
xchg
call
rorl
pop
nop
pop
sub
xlat
loope
mov
dec
mov
sbb
inc
sahf
in
adc
xor
inc
xor
xor
jnp
int3
testb
adc
cltd
test
mov
jmp
xor
orb
mov
adc
cmp
cld
popa
pop
push
sbb
and
lea
jg
and
movsb
jo
xor
in
out
mov
add
jg
jg
outsl
mov
ja
pop
cmp
pop
mov
push
aad
push
dec
sbb
into
lcall
push
jb
insl
and
loop
push
lret
jg
cli
add
jmp
lahf
jnp
xchg
jg
ss
add
xor
movsl
fwait
cld
pop
loop
push
xor
mov
adc
jns
data16
divb
and
cmp
jecxz
xor
lret
mov
loopne
xor
xchg
mov
add
gs
lahf
loope
mov
cwtl
xchg
jge
or
pop
testb
xchg
das
push
pop
into
adc
lods
xchg
push
cs
ljmp
push
jnp
dec
sub
sub
aas
das
mov
in
xchg
mov
mov
adc
sub
add
pop
sub
inc
adc
lcall
add
dec
pop
add
adc
dec
je
inc
fwait
outsl
ds
mov
jb
add
push
adc
or
hlt
push
inc
cmpl
pusha
cmp
sbb
mov
add
cmpsb
nop
mov
sub
clc
xchg
mov
mov
cmp
add
sub
mov
stos
outsl
push
movsl
inc
and
pusha
mov
push
cld
mov
push
inc
jb
add
das
inc
movb
xor
shll
jnp
jbe
jb
ds
jl,pt
nop
adc
jno
mov
sbb
and
jne
mov
mov
cmc
fs
and
mov
or
cmp
les
ja
pop
imul
add
jno
xchg
loop
cmpl
sub
out
test
pop
aam
cltd
daa
fwait
aas
inc
bound
pop
cmp
insl
and
add
shrl
fldcw
imul
aam
jp
outsl
pop
push
out
xchg
mov
dec
add
sbb
loop
ret
add
js
cli
and
cmpsb
and
in
add
je
ja
repz
cmpsb
sub
and
push
mov
mov
adc
stos
xor
dec
push
push
scas
pop
stos
adc
pop
nop
movsl
testl
out
js
inc
daa
cmpsb
loopne
xchg
daa
and
lock
repz
fcomps
cmp
sbb
adcb
in
adc
fcomip
sti
arpl
and
xchg
roll
xor
pop
sub
add
ljmp
jmp
loop
or
pop
sub
push
cld
xchg
and
mov
add
test
loop
mov
repz
add
adc
sub
mov
add
fbstp
cmpsl
mov
xchg
std
test
jo
or
jbe
sahf
sub
jecxz
icebp
push
lahf
shll
sbb
pop
lahf
mov
js
lret
pushf
add
in
dec
and
or
and
push
in
ljmp
ret
aas
hlt
sub
sbb
out
push
dec
pop
adc
dec
inc
loopne
and
adc
mov
inc
rolb
inc
clc
cli
insb
pusha
pop
pop
jnp
inc
mov
cli
fstps
in
sbb
and
test
dec
adc
testb
pop
inc
mov
cmpsb
rcll
dec
fdivs
fimull
lahf
push
xlat
cs
fbstp
cmp
mov
add
push
push
jp
and
and
sub
xor
stc
push
xor
outsb
jo
push
daa
lods
mov
pop
mov
xchg
and
cmp
mov
mov
inc
mov
mov
add
jge
cs
adc
pop
inc
test
jmp
rol
lcall
cmp
push
sbb
ljmp
mov
sbb
sub
lcall
test
aas
push
jo
jo
pop
pop
or
in
jecxz
cmp
int
int3
js
in
ss
mov
xorb
xchg
pop
jge
jmp
frstor
xchg
jg
adc
adc
xchg
stos
fsubrl
sbb
imul
pop
lds
jb
inc
cltd
and
hlt
ret
lods
mov
xchg
pop
xorb
pop
jnp
test
sbb
jo
inc
mov
cmp
jp
push
xlat
imul
push
rcrb
ds
scas
push
jno
pop
into
fadds
into
xchg
ret
pushf
or
sti
mov
out
fwait
cmp
sahf
in
mov
test
xlat
lahf
mov
jno
cmpsb
mov
and
rorb
imul
cwtl
dec
xchg
sti
and
mov
push
jl
pop
add
lods
add
fldl
and
jp
cmpsb
movsb
jns
test
enter
in
dec
pop
xchg
mov
lret
aad
ljmp
cmp
cmc
idivb
cltd
pop
loopne
mov
mov
movsb
dec
rcll
sub
pop
cmc
xchg
mov
cmp
loop
mov
lcall
inc
movsl
xchg
aad
jne
ret
outsb
loop
mov
adc
stos
ss
dec
push
adc
mov
jbe
daa
sahf
jae
mov
rcl
sbb
mov
lea
test
jno
xor
jb
sbb
loopne
js
dec
pushf
lcall
mov
mov
aaa
scas
hlt
arpl
push
jmp
roll
pop
gs
cmpsb
movb
adc
dec
rorb
inc
hlt
and
loopne
push
jne
fstpl
maxps
mov
inc
mov
mov
movsl
sarl
push
sub
mov
mov
scas
mov
xchg
cmp
push
imul
int3
xlat
into
arpl
mov
jp
jle
sub
test
and
sub
pushf
xchg
sti
lcall
lods
mov
cmpsl
jle
jmp
cmp
clc
sarb
hlt
xchg
pop
addl
in
push
out
xlat
movsl
jp
out
js
push
sbb
mov
xor
cmp
imul
ficompl
adc
test
lret
xorb
popf
mov
sub
shrb
cmp
push
pushf
jmp
jb
cmpsl
and
xorl
and
mov
mov
test
xchg
scas
test
or
xchg
and
lcall
les
in
sub
test
mov
cwtl
insb
idivb
or
lret
fmull
shll
pop
mov
mov
or
fpatan
ret
leave
cmp
cmp
push
fbstp
push
sti
cmp
mov
xor
vmread
daa
fucomip
in
std
outsb
mov
jle
mov
mov
fdivrs
or
std
xchg
cwtl
inc
or
mov
jge
lods
cs
repnz
cs
sbb
jl
pop
pop
ljmp
mov
sub
inc
out
add
ljmp
jb
add
pop
push
out
cmp
mov
cwtl
scas
fstps
cmc
aaa
add
mov
xchg
gs
inc
aam
sbb
gs
in
pop
fnstsw
int3
jl
sub
mov
xchg
jg
pop
push
sbb
sbb
xchg
cmp
jne
inc
fidivs
inc
xlat
xchg
call
lcall
and
pop
call
push
mov
ror
cli
adc
in
aas
mov
stos
inc
inc
sbb
xchg
sub
out
call
sbb
clc
dec
mov
push
ret
lods
xchg
int3
mov
pop
subps
daa
mov
xchg
jne
mov
clc
int3
and
xchg
jne
lods
leave
addr16
ss
loop
cld
xchg
sahf
inc
sub
cmpb
jmp
cmpsl
xchg
outsl
jmp
push
rclb
ljmp
jbe
shl
jp
push
dec
dec
mov
sbb
stos
gs
cmpsb
pop
push
ja
dec
adc
stos
lea
lock
icebp
shll
mov
adc
lret
stos
pop
mov
xor
outsb
das
xor
out
mov
fisttps
mov
hlt
sbb
sub
jae
outsl
stos
adc
xor
jne
lock
mov
pop
ret
arpl
jmp
outsb
cmp
mov
jno
jecxz
jne
add
cmpsb
xlat
repz
stos
dec
xor
mov
xor
inc
push
lret
cmpb
loop
fisttps
and
lcall
and
cs
je
cwtl
hlt
sub
cwtl
mov
int
loop
mov
pushf
adc
mov
mov
and
cltd
push
inc
mov
jbe
nop
sbb
dec
sub
adc
jbe
std
inc
dec
nop
cltd
mov
add
xchg
push
xor
jmp
dec
repnz
or
add
push
imull
stc
dec
cmp
jecxz
out
in
adc
inc
push
sub
jne
movsb
idivb
testb
test
fs
fistpll
add
sti
orb
sbb
xchg
sbbb
cwtl
aas
mov
loope
push
in
mov
jmp
out
cmp
lock
cmc
gs
pop
inc
cmpsl
jnp
sub
xchg
sbb
loopne
push
stos
sbb
adc
pop
fdivs
jno
push
clc
cmpb
push
mov
pop
aam
xchg
mov
and
sbb
enter
xor
addr16
jb
xlat
jnp
push
lods
or
sub
cmp
shll
pop
jmp
in
clc
into
mov
mov
notb
jge
pop
lcall
pop
call
ret
shlb
add
jg
loopne
in
ret
add
mov
sbb
xor
nop
dec
xlat
js
pop
into
push
mov
mov
pop
outsl
testb
mov
enter
sbb
add
push
xchg
scas
jp
js
lahf
mov
xlat
and
lahf
lret
nop
mov
sbb
mov
push
jno
push
push
adc
ljmp
stos
xchg
scas
add
rorb
mov
cltd
jmp
dec
movsl
pushf
cmp
mov
loop
popl
xor
iret
push
repz
fnsave
jne
iret
mov
jo
test
mov
or
orb
adc
loope
scas
inc
cld
es
sti
push
cmpsl
adc
pop
inc
ds
leave
cmp
cltd
pop
adc
stc
enter
push
xor
xor
xchg
jno
jo
in
mov
ljmp
lret
xchg
cld
add
xor
inc
pop
movsl
push
ret
xchg
push
ret
adc
mov
jb
or
or
cld
push
fwait
push
adc
ret
add
mov
jb
push
into
mov
bnd
in
sbb
push
into
dec
scas
sahf
push
shl
jne
inc
sub
sub
enter
jecxz
mov
je
paddb
jge
ds
cs
js
daa
nop
enter
popf
cmp
fsub
movsb
adc
mov
lret
mov
popf
aas
aad
dec
jnp
iret
jg
paddusb
imul
aaa
jno
jp
or
push
sbb
ret
adc
jb
pop
mov
ljmp
pop
dec
mov
rolb
lahf
aam
insl
mov
pop
repnz
scas
les
xchg
mov
adc
sbb
push
push
pop
out
cmpsb
and
push
xor
mov
and
mov
imul
add
sub
cs
mov
xor
aam
les
mov
in
mov
lcall
stos
insl
les
mov
inc
clc
movsl
cmpsl
add
push
adc
arpl
out
or
push
fs
lea
dec
mov
xchg
xchg
jg
decb
std
lret
push
aaa
push
das
movb
inc
pop
dec
push
xor
movl
push
pop
mov
fs
xor
xchg
xlat
push
gs
popf
jecxz
jp
and
in
cmp
sub
repz
cld
fnstenv
xor
inc
push
out
in
pusha
ret
adc
dec
sarb
push
xlat
push
popa
pop
imul
inc
adc
or
adc
fnstcw
and
inc
cmc
ljmp
mov
pop
jmp
movsb
xchg
nop
cmp
jmp
sub
cwtl
dec
mov
cmpsl
pop
sbb
ror
std
dec
cmpsb
xchg
dec
into
shrb
stc
inc
pop
xchg
xchg
stos
subb
xchg
mov
mov
pop
shrb
pop
pop
popf
push
iret
mov
and
xchg
cmp
psrlw
pop
pop
mov
mov
lds
fwait
test
shll
test
jl
aas
xchg
push
stc
iret
cld
jmp
lahf
or
xchg
mov
xchg
mov
push
sub
sub
or
jmp
enter
inc
pop
or
add
add
pop
sahf
mov
mov
or
cmpsb
mov
jmp
mov
and
cmp
mov
cmp
repz
sbb
mov
jle
jb
push
jmp
fcmovnb
movsl
cmpsb
ds
lret
cmp
xchg
jbe
addr16
in
xchg
adcl
adc
push
iret
out
push
xchg
lret
ljmp
imul
out
or
stc
test
insl
jb
arpl
xor
shrb
pusha
sbb
ja
mov
push
stc
fsubp
fadds
repz
cwtl
sbb
fnsetpm(287
mov
xor
fistps
fstps
inc
pop
dec
jo
lock
out
ljmp
inc
xchg
andl
jae
js
xchg
shl
adc
fcmovu
pop
sub
add
into
dec
or
rorl
test
cwtl
mov
cmp
push
inc
cmp
xlat
xchg
hlt
aam
rcrb
push
cli
xor
incb
orb
hlt
mov
icebp
mov
push
or
andb
jne
fcomps
daa
sub
push
sbb
or
pop
xor
aad
test
adc
dec
inc
test
fstps
add
mov
xchg
pop
addr16
pop
fisttpll
imul
pop
dec
or
mulb
xor
mov
mov
mov
sub
jnp
aaa
adc
jne
arpl
lods
nop
imul
dec
jne
nop
js
cmp
mov
je
pop
daa
push
sti
aaa
push
fwait
call
dec
fs
jle
mov
xchg
cmpsl
jg
jae
out
lret
sbb
xchg
mov
cmp
mov
lods
je
imul
ljmp
stos
cmp
in
cmpsl
cmp
dec
sub
decl
insb
iret
popf
loope
inc
cmpb
cld
icebp
mov
jns
lock
sbb
popf
repz
sbb
das
cmp
jge
mov
cmp
xchg
sbb
adc
or
fimull
add
rolb
movsl
push
cmpsb
sbb
jno
mov
pop
push
je
ja
xchg
shlb
out
cli
int
xor
sub
jne
xor
xor
or
mov
test
rcrl
or
out
divb
icebp
loopne
jnp
sarb
inc
jge
or
cmp
nopl
xchg
cmp
sub
pusha
lret
jae
pushf
pushf
movsb
xchg
add
mov
cmpsb
out
fsin
adc
mov
add
jbe
mov
jo
cltd
sub
or
sbb
pop
repz
outsl
test
in
je
push
xchg
mov
arpl
dec
sub
fadd
repz
pop
enter
fsubr
add
shrb
ficoml
sub
pop
jmp
sub
mov
bound
ja
scas
sbb
jge
nop
loopne
cli
je
lock
outsl
pushf
xchg
mov
sub
icebp
mov
mov
movsl
push
and
test
inc
mov
mov
push
lock
or
ss
push
ljmpw
jmp
jle
xchg
pushf
cmpsl
aaa
lods
inc
imul
leave
addr16
dec
inc
jnp
neg
or
cmp
repz
int
lret
jae
imul
outsl
arpl
ds
jg
mov
xchg
sub
les
rcl
cmp
popa
cmp
adc
sub
outsb
adc
lcall
popa
dec
xchg
push
mov
push
outsl
bound
adc
decl
jno
test
xor
dec
in
mov
les
or
and
lods
xchg
ret
out
es
xor
push
nop
add
and
sbb
movswl
popf
push
push
mov
shl
loop
loop
in
xor
data16
cld
sub
ss
push
sbb
pop
mov
nop
jnp
movl
into
add
sbb
iret
ficomps
xor
rcr
enter
int
or
sbb
jbe
jb
daa
out
dec
jne
jge
mov
add
cwtl
mov
les
jo
inc
push
mov
mov
mov
jge
lock
addr16
ficoms
jl
adc
mov
lods
pop
cmp
or
sub
jp
leave
adc
or
xchg
cmp
push
out
mov
addb
push
push
pop
xor
push
jb
pop
scas
jle
adc
sub
mov
test
popa
dec
scas
jl
sbb
xor
cwtl
dec
mov
or
adc
mov
lock
insb
int
gs
loop
loop
data16
xor
xor
push
data16
ljmp
push
loope
push
xor
mov
mov
test
repz
out
inc
out
dec
dec
leave
pop
lock
mov
es
fsubs
stc
dec
mov
push
movl
jno
es
out
pop
sbb
and
subb
inc
test
nop
scas
cwtl
lcall
jae
jbe
js
insb
decl
mov
cld
cli
incb
xor
jbe
mov
mov
sbb
push
arpl
mov
adcl
cmp
jb
cmp
inc
add
push
and
push
and
das
and
mov
sub
lcall
xor
adc
add
test
int3
ffreep
mov
mov
mov
sbb
outsb
inc
sbb
xor
scas
das
fstpt
xchg
in
bound
adc
or
mov
pop
push
fstp
loop
dec
leave
stc
lods
insl
into
fldenv
fbstp
mov
insb
lock
cli
ss
lea
dec
sub
ficoms
add
aas
dec
mov
inc
hlt
or
sbb
jge
hlt
iret
inc
shl
mov
push
data16
in
sahf
js
push
sbb
ljmp
and
aas
sub
adc
adc
scas
negl
push
shlb
idiv
or
push
popa
pop
xor
out
pop
dec
shll
and
pop
push
inc
mov
icebp
xchg
mov
mov
adc
xchg
sarb
dec
pushf
ja
rcr
imul
and
hlt
jno
das
push
cmp
stos
fcomps
dec
push
adc
rolb
push
dec
pop
lret
inc
data16
mov
jno
push
out
mov
dec
push
out
stos
ret
cli
adc
pop
jb
xchg
adc
xorw
out
enter
imul
dec
in
jmp
mov
mov
pop
or
mov
icebp
dec
cmp
mov
pop
pop
mov
mov
enter
mov
mov
mov
cmpsb
mov
out
dec
bound
push
mov
and
popf
jbe
scas
pop
dec
push
fiadds
sbb
ds
push
push
pop
add
jno
or
inc
je
stos
push
cmpsb
jbe
loop
outsl
mov
ds
cwtl
jecxz
ss
inc
out
shlb
test
hlt
push
mov
jne
jmp
imul
fucomip
pop
push
pushf
mov
rorl
daa
add
pop
and
loop
cli
cmp
and
stos
jne
cli
adcl
cmpb
pop
cld
or
imul
icebp
mov
push
sbb
sbb
jne
daa
cltd
stos
sbb
xor
inc
es
jbe
push
adc
ja
adc
lret
loopne
pop
jne
scas
jbe
sahf
enter
sub
repz
pop
push
sbb
mov
dec
mov
pushf
mov
mov
jg
dec
jmp
or
inc
sbb
mov
pop
ja
cltd
aaa
cmc
pop
out
loop
pop
fwait
ja
adc
push
push
ret
call
xor
and
xchg
fldcw
fstpl
mul
adc
xchg
jae
in
in
mov
lahf
je
xor
std
out
pop
mov
dec
mov
js
ret
push
fmull
push
sub
aam
ss
sbb
les
lret
mov
push
xor
insl
cli
mov
cmp
inc
mov
les
daa
mov
enter
pop
sub
roll
dec
mov
ja
cmpsl
in
fneni(8087
sub
pusha
rcrb
xor
test
jp
xchg
stc
shll
add
push
cmp
jns
pop
faddl
fcos
sahf
mov
fdiv
shr
and
dec
or
les
adc
lods
sbb
sub
jno
push
jg
sub
lret
add
add
mov
xchg
dec
in
xchg
jmp
push
stc
in
add
int3
je
int
adc
add
mov
push
inc
mov
inc
lahf
push
and
sbb
cmp
in
jae
pop
jns
mov
xor
inc
pop
aaa
pushf
jns
cmp
jnp
push
cmpsl
adcb
pop
jp
jmp
jb
clc
cmp
inc
sarl
add
or
insl
movsb
and
cli
cmpsl
add
rcr
cld
ret
dec
mov
fwait
popf
movsl
call
outsb
mov
jg
jg
pop
test
cmp
shrb
pop
adc
add
jbe
adc
and
dec
cmp
sar
shll
dec
or
scas
sbb
xchg
mov
sub
adc
pop
dec
pop
dec
jp
es
testb
mov
pextrw
sbb
xorl
mov
xchg
push
mov
js
out
jg
lea
in
andps
enter
pop
push
mov
stos
aas
sbb
leave
xor
mov
push
pusha
cmpb
lret
ds
in
inc
cmc
lods
fidivrs
andb
or
xchg
lahf
push
lret
sub
stos
cli
leave
in
cmpsb
jp
and
fcompl
jl
mov
fwait
xor
jb
aaa
call
sub
test
sahf
xor
cmp
lahf
in
jae
fsubs
mov
les
mov
pushf
dec
pop
pop
adc
adc
mov
shlb
in
rcrb
mov
push
jae
mov
nop
cmp
xchg
ja
int
jae
mov
lods
ret
or
dec
or
inc
pop
repnz
mov
popl
cld
pop
clc
sub
notb
mov
pop
cmpsb
jp
mov
int
out
add
inc
add
dec
rorl
xchg
mov
jae
jle
push
sbb
ja
test
jb
aam
loope
dec
and
fwait
cmp
in
jno
or
mov
xlat
xor
cmpsl
lods
xchg
adc
les
jp
pop
dec
dec
or
ds
jae
in
mov
ret
cli
or
popa
seta
xor
aaa
adc
jg
xor
leave
cltd
inc
xchg
out
fisubl
or
sub
lret
stos
loopne
xor
ret
cs
in
jne
or
das
into
adc
dec
fildl
int
roll
jne
cld
jns
xchg
sub
pushf
faddl
mov
addr16
or
into
sbb
push
icebp
lret
int
mov
gs
or
cs
mov
mov
addr16
add
or
scas
je
sub
mov
popf
cwtl
sub
out
hlt
movsl
cwtl
int
arpl
scas
inc
jl
and
jl
jp
pop
lods
leave
into
data16
jo
cwtl
lcall
mov
mov
xor
push
or
fisubrl
xor
aaa
out
das
mov
or
jge
stos
mov
cltd
addr16
imul
imul
lret
sbb
loopne
or
push
aas
sub
sbb
xor
jnp
dec
sub
xor
sbb
xor
bound
lret
jb
pop
pop
mov
ss
and
jg
ror
mov
sub
add
imul
dec
dec
cmp
push
inc
sbb
dec
mov
xchg
mov
popa
dec
insb
call
lahf
jge
ds
cli
ss
ja
sbb
orb
subb
jmp
jecxz
mov
add
dec
cmpsb
rcr
ss
jecxz
cmp
fs
test
imul
mov
ret
jp
gs
fisttpl
repz
push
pop
lret
fisubrs
js
out
int3
stc
test
pop
movsb
cmpsb
and
xchg
lret
outsl
aas
je
repz
jecxz
xlat
out
pop
add
add
adc
hlt
dec
sub
mov
mov
push
into
sbbl
lods
mov
jg
jle
fisubl
add
mov
and
rcll
add
pop
or
andl
cwtl
mov
fnstcw
imul
int3
mov
push
and
push
sbb
mov
dec
arpl
push
test
adc
mov
cmpsb
mov
cmc
add
xchg
repnz
and
jne
fndisi(8087
mov
mov
adc
out
out
imul
mov
cs
or
xchg
dec
les
cmc
xor
cmpsb
clc
xor
shlb
mov
adc
fcmovu
xchg
push
lahf
push
xchg
sub
dec
add
mov
lret
xor
lret
inc
test
or
lret
in
clc
mov
pop
cli
mov
cltd
inc
insb
addb
fimull
jno
frstpm(287
sbb
mov
sbb
rol
test
mov
stos
push
mov
cli
mov
sti
pusha
popl
dec
adc
inc
adc
shll
sbb
in
inc
fwait
add
outsl
jbe
out
in
adc
test
lock
addb
pop
sub
out
ret
adc
jnp
sti
cmp
loope
and
out
add
aaa
jno
mov
fmul
mov
dec
pop
ja
and
inc
mov
mov
cmp
push
stos
xor
cli
mov
and
sub
xchg
add
sahf
in
shlb
imul
ljmp
push
dec
into
dec
ds
or
push
das
adc
call
into
mov
cmp
je
mov
sahf
jae
xchg
xor
popf
sub
icebp
fistpl
lds
outsl
sbb
and
int3
inc
push
repnz
into
mov
into
xchg
jp
jmp
mov
lret
inc
ss
shrl
ret
and
add
pop
dec
iret
add
js
je
std
mov
ffreep
andl
mov
adc
push
xchg
ds
inc
jae
mov
dec
xor
push
loope
mov
and
jb
into
and
int
test
repnz
lods
shrl
dec
lods
xchg
sub
call
std
or
fistps
fnstsw
nop
xorb
ljmp
jecxz
jmp
dec
lock
sbb
test
adcl
inc
subl
out
lss
xor
jnp
add
xor
loope
lcall
aas
adc
pop
shll
mov
iret
subl
and
xor
adc
fs
sbbl
mov
rol
inc
jmp
inc
inc
jns
dec
cmp
leave
jae
stos
shrl
jns
fidivrl
mov
js
cmp
inc
cmpl
or
mov
loopne
loop
xchg
repnz
cli
dec
cld
cmp
imulb
and
or
je
sbb
int
cwtl
dec
xchg
pop
aad
sbb
std
pop
lea
adc
add
push
test
and
mov
mov
outsl
divb
ficoms
xchg
dec
rol
shrb
pushf
sbb
pop
mov
mov
cmpsb
xlat
pusha
cmp
mov
bt
add
cmp
adc
insl
arpl
imul
out
sbb
jb
sbb
xor
out
repz
out
out
adc
xor
ljmp
jmp
xor
test
sub
xchg
mov
dec
cmp
stos
repz
mov
sub
int
scas
mov
addb
mov
fwait
push
les
pop
scas
call
jmp
sub
jmp
das
lods
sbb
inc
icebp
sbb
jne
adc
test
push
pop
sahf
sub
push
xchg
movsb
sbb
std
cmp
outsb
test
and
mov
dec
sub
je
scas
sub
fisubs
jno
add
lahf
das
sbb
dec
xchg
dec
out
jmp
lock
mov
lret
cmp
sub
stos
sub
jb
pushl
lea
push
cli
xchg
imul
nop
fdivl
push
aas
lea
jp
mov
ja
repz
fbld
sbb
sub
pop
fistps
mov
dec
into
xorl
jno
adc
push
adc
push
sbb
adc
stos
adc
adc
or
dec
cmp
mov
data16
add
sub
int3
shlb
iret
lret
fwait
mov
xchg
loop
pop
push
call
insb
cmc
cltd
push
mov
stos
sub
test
movsl
out
and
push
add
lds
popf
adc
mov
cmpsb
dec
rclb
pop
jno
and
test
sbb
cmp
jge
adc
or
adc
comiss
sbb
roll
sbb
dec
jnp
cltd
or
pushf
fistpl
lock
pushf
lcall
add
push
jg
sub
cmp
daa
jl
adc
divb
pop
ret
pop
popf
out
scas
fwait
mov
pop
fsubl
lea
ret
jp
ja
jl
cmpsl
xchg
out
fidivrs
jne
das
rclb
or
inc
daa
test
jecxz
sbb
and
fadds
and
mov
sub
sbb
mov
jecxz
sarb
ret
adc
mov
cli
leave
test
mov
rolb
test
arpl
iret
push
insb
mov
ret
and
mov
loop
sbb
pop
nop
stc
subl
jae
and
add
fnstenv
cmp
mov
dec
xchg
aaa
pop
lret
mov
out
sahf
xchg
sbb
cld
aas
mov
idivb
mov
lds
out
shll
mov
xchg
es
mov
test
mov
lret
loopne
push
addr16
sbb
fcmovbe
mov
jmp
mov
daa
cmc
add
add
fiadds
sbbb
cmp
jns
test
insb
icebp
pop
icebp
push
loop
adc
shll
adc
sub
jl
in
jl
sbb
or
je
lods
jmp
imul
into
adc
jbe
popl
insb
mov
push
sbb
lret
jle
out
lea
xlat
sbb
into
push
mov
arpl
loope
int3
fists
aam
aam
in
xor
inc
jecxz
sbb
sub
movsb
andb
pop
mov
jg
ret
cltd
push
add
cmp
stc
jae
sbb
test
adc
xchg
xchg
dec
sti
inc
cs
pop
arpl
mov
fcompl
sub
ficoms
xchg
sti
inc
mov
cmp
and
mov
pop
jbe
inc
lea
add
mov
and
in
mov
mov
stc
das
jge
pop
dec
imul
xor
out
inc
stos
sahf
bound
or
xchg
mov
inc
mov
adc
fstpl
mov
xor
fbstp
imul
xlat
rcr
out
pop
sub
bound
fadds
hlt
dec
push
cmc
mov
dec
scas
enter
scas
ja
push
insl
mov
call
fs
fidivrl
and
repz
dec
lods
adc
jecxz
cltd
js
es
enter
push
in
lret
in
je
pop
jl
push
out
pop
xor
mov
xchg
test
fwait
push
jno
jb
pop
sti
add
mov
neg
fstpl
xchg
in
iret
out
out
popa
jae
and
ffreep
push
mov
pop
or
pusha
mov
fsubrs
lds
pop
sub
or
mov
sbb
mov
xor
sbb
ds
pop
and
ret
lods
cli
shrl
lahf
mov
xchg
push
mov
xchg
pushf
mov
cmpsb
out
insl
mov
movsb
mov
jecxz
adc
jmp
mov
bndldx
or
jg
enter
fsubl
pop
filds
dec
push
xchg
push
mov
in
ret
jecxz
xchg
movsb
shl
lahf
inc
dec
int
cmp
mov
cmp
xor
jnp
jnp
ljmp
dec
mov
std
mov
int3
imul
movsl
in
sbb
xor
push
mov
pop
test
push
loopne
mov
sti
push
stc
inc
call
lahf
cmpsl
or
pusha
into
mov
xor
inc
cmp
sbb
lea
mov
sarb
dec
mov
mov
pop
shll
mov
cltd
in
inc
jg
leave
dec
paddq
ja
mov
imul
fadd
and
jnp
cli
mov
ja
loop
adc
push
cmovbe
pop
fisttpl
sbb
sbb
movsb
les
jae
cld
sbb
lods
pop
nop
lret
daa
sarl
and
and
push
gs
pop
push
bnd
inc
mov
scas
cmp
dec
adc
mov
jb
xor
ja
enter
iret
ss
ja
imul
pusha
cmpsl
in
mov
mov
or
movsb
pop
sub
xchg
or
jne
push
cmpsb
sbb
pop
push
out
mov
jge
loop
lea
dec
mov
dec
fldenv
and
sub
add
lcall
sarl
test
push
add
jne
cmc
jg
push
test
mov
xor
addr16
mov
push
cmp
sbbb
inc
lods
or
lods
sbb
cld
cmp
adc
pop
popf
cmp
jl
das
out
mov
pop
in
add
jmp
stos
mov
pop
lahf
stc
or
sbb
rolb
xor
push
movsl
icebp
repnz
inc
xchg
ljmp
add
imul
addr16
xor
out
jno
mov
jae
sub
inc
inc
mov
xor
shrb
int3
jo
sahf
movsl
in
ds
andb
test
jno
ja
mov
dec
inc
pop
fdivl
xorl
ja
fcmovu
jo
inc
loopne
dec
roll
insb
xchg
repnz
mov
jo
shlb
push
pop
adc
popf
fwait
push
or
cmpsl
cld
adc
jg
pop
mov
lahf
in
out
scas
mov
sti
bound
xor
cmp
xchg
jle
pusha
mov
rcrl
inc
lret
and
shll
xchg
sbb
mov
addr16
add
mov
pop
roll
push
cmp
fstps
iret
fsubr
sub
addl
ja
dec
push
insl
ret
xor
adc
cmc
mov
xor
xchg
pop
sbb
or
imul
in
mov
imul
scas
xor
repnz
mov
sub
leave
je
shlb
addr16
push
out
test
sti
loope
cmc
in
pop
iret
sbb
mov
mov
movsb
sub
push
add
and
call
xor
xchg
inc
insb
icebp
add
dec
lret
inc
fcomp
mov
ja
fnstcw
pop
aaa
pop
and
adc
push
add
cld
lahf
xchg
pop
cmp
insl
ja
cmp
in
and
popf
call
lret
xor
loope
xor
and
inc
loop
test
arpl
inc
inc
pop
leave
loope
hlt
out
add
imul
push
aas
sbb
xor
icebp
in
or
fisttpll
enter
ja
push
mov
xchg
dec
jecxz
dec
rcr
leave
test
sub
test
jp
dec
add
movsl
mov
cmp
sbb
daa
mov
stos
sub
xchg
cmp
pop
add
loope
ja
daa
dec
xchg
xchg
in
rcrb
and
pop
cli
adc
pop
pop
xor
iret
push
test
cmp
xor
jo
in
popa
xchg
data16
stos
pop
adc
aad
add
pop
inc
pop
mov
xor
mov
gs
inc
subl
mov
inc
xor
imul
mov
push
cmpl
jle
inc
add
adc
int
int3
icebp
jmp
adc
es
mov
mov
add
scas
daa
ja
scas
cmp
inc
xor
out
rcrl
cmp
jmp
jecxz
add
xchg
jae
pushf
ret
push
inc
dec
mov
xchg
mov
mov
mov
inc
cmp
addr16
jns
and
das
and
sti
mov
or
lcall
sub
adc
in
stos
cmpsb
add
cmc
lcall
adc
xor
xor
inc
lea
icebp
cmpsb
mov
sbb
cwtl
aam
or
sahf
adc
movq
adc
pop
jns
dec
hlt
sub
or
testl
dec
jecxz
mov
das
push
sti
xchg
jp
notl
cli
loopne
out
lret
jae
repnz
and
mov
rcl
lock
shll
jnp
inc
ljmp
addr16
lahf
push
jl
leave
push
adc
add
jg
sub
int3
roll
out
lcall
bound
hlt
into
dec
insb
andl
pusha
iret
push
mov
xor
jno
mov
push
push
cmp
cli
xlat
jb
pop
jno
arpl
int3
xchg
xchg
mov
shl
clc
imul
popf
pop
sbb
and
jmp
sub
xor
test
inc
decb
adc
pop
jae
stc
and
fwait
sbb
hlt
push
mov
loopne
push
mov
fwait
pop
pop
jecxz
mov
out
test
nop
push
adc
mov
icebp
inc
xor
dec
xor
dec
loope
pop
mov
ds
movsl
push
iret
push
scas
mov
arpl
pusha
inc
sti
loope
and
dec
and
push
jne
mov
cmpl
stos
xchg
outsb
pop
cwtl
and
imul
mov
xchg
call
lods
push
inc
aam
in
cli
repnz
mov
rcr
call
lahf
stos
pop
shlb
lret
in
push
xchg
or
lods
mov
mov
xchg
je
cmpsl
mov
and
adc
xor
push
int3
fnstenv
repz
and
and
test
sub
pusha
push
loope
das
daa
into
rcrb
cmpsb
push
lcall
iret
ds
jl
insb
push
cmp
or
aad
sbb
pushf
js
insl
out
enter
stc
lcall
popa
je
in
push
jl
jge
lods
pop
pop
fcmovb
mov
sub
ja
mov
adc
lea
cmp
mov
mov
aad
jmp
sbb
jecxz
das
mov
jo
pop
or
sti
nop
clc
pushfw
cltd
lea
push
lret
fbld
sbb
push
lret
sarb
orb
lahf
sub
push
mov
adc
mov
movsl
sub
pop
mov
sub
cmp
lods
lcall
xchg
cs
imull
lret
arpl
sti
xor
pop
fiadds
popf
jae
mov
roll
mov
mov
mov
dec
imul
cld
pop
dec
mov
xor
pop
outsl
imul
pop
pop
mov
rorl
and
mov
cmp
push
rolb
and
mull
cld
pop
stos
cmp
shll
sub
mov
pop
mov
adc
test
inc
inc
xchg
sti
repnz
inc
adc
push
rclb
xchg
int3
jns
loop
mov
aad
lds
fimuls
mov
inc
sbb
push
push
jo
and
test
mov
in
mov
es
es
inc
fnstcw
dec
xchg
mov
stos
push
stos
fistpl
push
sbb
pop
push
mov
out
fldcw
std
insb
aaa
xor
mov
std
or
lods
add
cmp
xchg
add
ret
fwait
dec
jb
mov
stc
jb
cmpsl
enter
push
push
push
in
pop
mov
fdivrs
xchg
test
xchg
daa
push
in
sub
cmp
cwtl
inc
mov
xor
or
out
out
ret
push
inc
popf
xchg
les
clc
repz
pop
subb
sarl
mov
adc
mov
leave
mov
int
sbb
push
aad
mov
leave
xchg
mov
pop
test
cli
inc
jg
sbb
cmp
inc
dec
movsb
or
add
sub
xchg
xchg
jne
jo
push
or
add
idiv
mov
and
push
popf
cmp
xchg
fwait
adc
jb
mov
pop
mov
sub
sti
out
stc
clc
or
test
iret
jne
mov
mov
stos
not
sub
push
xchg
ljmp
enter
inc
xchg
ficoms
and
add
mov
mov
fcmove
sti
mov
xchg
popf
hlt
or
pop
jb
jb
lcall
pop
pop
call
fcomps
out
sbb
xchg
mov
mov
mov
mov
stos
pop
push
repz
in
aas
dec
cmp
or
jno
dec
cmp
cmpsl
jge
xor
arpl
mov
lret
jmp
out
or
fildl
push
sub
out
inc
pop
cmp
adcb
arpl
push
sub
jno
inc
and
or
fwait
mov
fiaddl
pop
sub
mov
mov
push
xor
fnstenv
aas
jl
or
inc
mov
mov
clc
ror
das
test
pop
and
sub
jl
mov
out
daa
scas
sbb
xchg
stc
mov
fidivl
sbb
loop
icebp
fwait
les
xchg
aas
and
aad
ljmp
lcall
and
mov
cmp
test
xor
add
test
mov
in
pop
add
pop
jmp
sahf
aam
push
push
ficompl
loop
pop
xchg
lods
dec
hlt
loop
clc
sub
stos
test
pushf
cmp
or
push
repz
fidivrl
test
cmp
mov
mov
inc
and
in
xor
inc
ds
jecxz
repz
pop
adc
mov
mov
lret
insb
enter
int3
in
xchg
pushf
jbe
mov
loopne
push
xchg
ja
jo
fistpll
mov
movsb
sub
ffree
scas
xchg
dec
iret
lahf
gs
xchg
jbe
mov
and
xlat
mov
jne
cmpsb
jle
test
dec
jb
sbb
dec
mov
inc
jb
fnstcw
insb
and
pusha
jb
lock
ret
sub
inc
mov
inc
loop
jmp
add
mov
int
xor
sub
jmp
cld
mov
inc
fwait
jo
lret
xchg
stc
in
mov
adc
sub
pushf
push
jne
adc
adcl
out
pop
out
adc
mov
jne
mov
rcl
jae
adc
mov
adc
inc
mov
jbe
test
mov
pop
sub
lret
test
sbb
adc
aad
pop
repz
push
loop
out
xor
jne
cld
div
xchg
and
and
fistps
iret
sub
mov
mov
jge
sti
sub
push
insl
negb
add
daa
gs
dec
out
dec
imul
sub
fadds
xchg
push
mov
es
fstps
adc
mov
sbb
ret
or
test
dec
mov
or
xchg
pop
add
aaa
cmp
stos
jb
pushf
in
push
mov
clc
jbe
gs
sub
sbb
fucom
pop
sbb
inc
xorl
adcl
iret
inc
mov
in
subl
int
pop
mov
or
xchg
pop
movb
cli
sub
popf
and
mov
mov
mov
ss
orb
js
jg
inc
jnp
das
pop
mov
ror
orl
hlt
mov
js
lret
adc
or
adc
inc
cmp
in
mov
push
push
adc
cmc
repz
jecxz
pop
xor
xor
jmp
jne
fwait
in
pop
add
mov
repz
and
sub
adc
sbb
aas
fs
mov
sbb
mov
jnp
cli
adc
cltd
call
es
jmp
stc
or
mov
xchg
mov
jp
push
in
mov
lea
dec
mov
aaa
mov
fwait
iret
lods
dec
out
cs
xchg
mov
outsb
pop
ficoml
mov
and
shl
cli
out
xchg
std
imul
inc
hlt
push
dec
outsb
jbe
fldt
mov
sarb
test
jmp
or
stos
mov
cmp
stos
xchg
lock
addb
jg
pop
xchg
imul
loopne
test
jp
dec
fwait
dec
xor
and
push
mov
inc
jg
imul
cmp
cli
pop
ret
cmp
push
mov
add
mov
fstl
adc
cwtl
js
data16
cmp
adc
inc
pop
popa
lret
enter
cmp
inc
and
adc
dec
les
cli
push
inc
xlat
xor
sub
pop
inc
xor
outsl
pop
jb
jns
repnz
test
mov
jbe
or
rcll
in
jns
stos
sbb
flds
scas
enter
add
push
mov
dec
ret
push
pop
mov
mov
outsb
dec
mov
mov
mov
lods
fcompl
push
xor
dec
xchg
cmp
shrb
les
inc
ret
pop
xchg
ret
xchg
sub
imul
jns
push
pop
rolb
jo
insb
xlat
dec
cmp
and
jb
lret
mov
push
cmc
push
xchg
insl
test
stos
cmp
mov
outsl
adc
sahf
call
mov
xchg
ret
adc
idiv
shrl
je
loop
enter
cld
or
xchg
movsb
jmp
and
aad
sub
inc
fidivrl
sar
ret
mov
aaa
jg
push
dec
repnz
cltd
ror
xchg
fcoml
mov
mov
pop
and
mov
or
mov
scas
daa
dec
in
out
jmp
pop
or
sub
aaa
xor
stos
xlat
xchg
mov
push
or
jb
sbb
test
cmp
and
mov
mov
inc
mov
outsl
push
add
pop
dec
sub
push
icebp
inc
ficoml
xorb
loop
gs
mov
mov
shlb
ja
dec
push
shll
inc
std
test
mov
xchg
pop
ficoms
lret
mov
and
sub
aad
imul
push
aam
jecxz
and
add
push
dec
mov
lods
cmpb
call
addr16
mov
cmp
xchg
lahf
mov
pop
mov
fsubrs
or
dec
ljmp
dec
adc
sub
xor
shr
pop
sbb
and
lods
out
add
cmp
and
lock
push
push
push
inc
idivb
fs
xchg
cld
fmul
and
and
call
les
test
push
lods
cmp
pushf
mov
or
clc
add
jg
adc
popf
mov
popf
jnp
pop
test
into
insb
in
xor
arpl
scas
daa
sbb
jl
pop
xchg
mov
or
das
add
push
inc
out
hlt
mov
ret
sbb
es
fwait
iret
sbb
into
cli
shrb
flds
fstpt
pop
mov
out
or
push
test
mov
xor
lret
mov
insb
jmp
mov
pop
stos
cli
dec
int
hlt
xor
rep
push
add
push
push
aam
test
icebp
xchg
in
iret
push
out
in
inc
pop
dec
xor
pop
sti
dec
jno
adc
leave
cmp
jnp
adc
lock
adc
mov
adcl
sti
inc
in
mov
in
add
rclb
ret
mov
xchg
fnstenv
stc
lds
insl
xor
sub
dec
movsl
shlb
mov
dec
inc
mov
out
fcoms
fwait
out
pop
mov
cwtl
mov
xchg
mov
hlt
add
dec
lods
pop
test
or
add
lret
xchg
cli
sub
xchg
int3
xchg
dec
iret
cmp
insl
es
jmp
xchg
addr16
lcall
cmp
fimull
leave
push
mov
or
lahf
int
cmpsb
shrl
inc
daa
scas
divb
mov
pop
cmp
inc
lock
imul
je
imul
jge
xchg
push
inc
xchg
cwtl
pop
sbb
fmul
ja
into
or
fistpll
out
ficompl
dec
cwtl
out
cs
dec
or
xor
xchg
add
or
xchg
xchg
clc
mov
movsb
stc
adcb
or
sahf
add
mov
mov
cmp
and
loop
adcl
adc
mov
xchg
push
imul
cld
daa
jecxz
loope
mov
loop
pop
imul
js
pop
rorl
cmp
aam
rclb
in
cmc
adc
scas
out
sub
pop
and
xor
xor
xor
fcoml
add
xor
cmp
mov
sub
out
rcrl
cmp
mov
mov
mov
jg
mov
in
lods
sbb
pop
testb
sbb
shr
jne
cmpsl
xchg
ja
cmp
fldl
and
sbb
arpl
dec
lahf
rorl
cmp
sub
sbb
cmp
fs
leave
xchg
enter
lock
lahf
dec
out
mov
out
sbb
in
mull
cmpsl
cli
sbb
sbb
pop
andb
xchg
mov
jmp
inc
in
xor
xor
sbb
ja
jmp
inc
jo
test
mov
jl
je
mov
decb
or
xorl
in
test
sbb
repnz
mov
xor
push
push
mov
dec
jb
fistpll
into
shll
out
mov
lea
mov
add
insl
test
xchg
sub
jmp
stc
aad
mov
push
mov
xchg
aad
mov
fimuls
push
inc
xchg
mov
out
aad
test
lahf
and
xchg
mulb
mov
pop
jb
mov
inc
lahf
xchg
ss
jb
pop
daa
push
adc
fadd
jne
fnstcw
int3
call
or
lcall
fists
mov
xchg
sbb
add
mov
adc
pop
mov
push
adc
lahf
adc
int3
add
movsl
push
insl
mov
mov
rcl
pop
jmp
out
push
sub
and
das
sub
lea
inc
faddl
cs
jecxz
call
xchg
loop
int
inc
fcomip
mov
out
test
cmpl
push
push
popa
and
adc
es
push
pop
mov
imul
popa
xor
inc
mov
mov
in
mov
mov
pusha
movsb
loopne
clc
cmovnp
inc
fdivrl
cld
lcall
jbe
pop
dec
test
adcb
dec
ret
add
cmp
xchg
fcmovne
cld
daa
pop
loopne
es
into
sbb
stos
mov
rcll
cmpb
jns
xchg
cmp
push
mov
inc
ret
fldcw
lock
lods
gs
mov
pop
sbbl
sbbb
mov
lods
jmp
push
pop
xchg
pop
push
lods
sbb
push
ret
and
jnp
scas
mov
push
sbb
inc
adc
add
cmp
pop
push
push
dec
ds
mov
lea
jae
sub
ret
mov
jae
adc
cmp
cmpsb
mov
dec
sub
mov
ss
gs
sbb
cli
pop
mov
xchg
inc
mov
inc
dec
cltd
xor
mov
rcl
add
daa
push
clc
push
ret
adc
ja
push
sbb
ret
orl
in
xchg
cmpsl
xchg
movsb
pop
mov
enter
lds
add
loop
jbe
insb
mov
mov
mov
push
sahf
stos
inc
repz
mov
je
adc
jl
fwait
js
push
or
dec
out
jp
mov
or
daa
in
fwait
mov
jb,pn
shrl
lret
and
sbb
and
fbstp
jge
pop
mov
lock
inc
or
sbb
push
popf
in
push
adc
ljmp
sbb
dec
jg
inc
add
ds
sarl
sub
decb
or
repz
imul
test
sbb
cli
popa
ds
push
test
mov
lods
mov
inc
cmp
cmp
enter
mov
lret
pop
pushf
ds
adc
stos
popa
push
xor
out
inc
jp
sub
sbb
sbb
ljmp
jecxz
pusha
shlb
in
xchg
mov
addb
shll
cmp
pop
xorb
popf
aam
mov
dec
push
or
cmp
js
dec
add
adc
in
das
sbb
push
cmp
shrl
push
inc
push
call
adc
js
mov
testl
out
movsl
jae
xor
mov
in
pusha
xor
push
test
xor
rorl
orl
int
jg
dec
xor
enter
mov
mov
pop
cld
test
scas
int3
or
lds
mov
pop
jge
or
dec
out
lods
rcrl
bound
ret
and
das
and
in
push
xchg
lods
data16
push
mov
dec
push
mov
subb
mov
roll
inc
sahf
cltd
jne
pop
ljmp
scas
je
mov
stos
or
xchg
out
adcb
loope
cmpsb
sbb
hlt
mov
sub
sbb
push
daa
out
mov
mov
inc
shlb
add
push
xor
sub
addr16
enter
enter
mov
mov
rcll
pop
fsubrp
push
pop
pop
sar
inc
scas
mov
push
cmp
mov
and
sub
shrb
insl
addb
fistps
mov
ja
shll
or
push
cmc
jecxz
dec
cmp
arpl
in
inc
popa
or
dec
dec
xchg
nop
push
or
xlat
pop
jns
push
out
dec
mov
popf
arpl
xchg
in
lea
dec
cmp
push
jbe
cld
adc
das
mov
sti
mov
xor
sbb
movsb
jno
sub
mov
adcb
push
cmp
add
xor
adc
leave
dec
xchg
jmp
and
pop
pop
stc
mov
mov
and
cmp
add
and
data16
insl
std
jp
arpl
mov
mov
mov
ret
add
mov
mov
pop
mov
push
into
in
jecxz
sahf
fdiv
in
adc
lea
push
inc
mov
jmp
lahf
cmp
faddl
add
mov
arpl
cmpl
jae
jl
jle
jmp
lahf
std
pop
mov
jo
xchg
xchg
hlt
jno
cmp
out
in
mov
dec
into
mov
stos
inc
and
pop
push
in
es
leave
push
sub
xchg
push
test
imul
movsl
xor
mov
xchg
mov
ja
xor
icebp
insl
adc
cld
in
mov
jbe
out
pop
aaa
std
cmc
dec
out
idivl
cs
or
rol
or
pusha
movsl
push
out
and
jae
add
addr16
ret
pop
xor
add
inc
adc
or
push
imul
jmp
mov
cmpsl
das
mov
mov
inc
rcl
daa
add
mov
out
add
push
or
shll
xchg
mov
pop
mov
xchg
hlt
movb
data16
or
scas
xchg
jno
mov
fadds
popf
negl
lods
inc
fisttpl
es
js
pop
mov
sub
in
enter
xor
push
adc
int
jns
inc
sahf
inc
lret
sti
sbb
cmpsb
cmpl
dec
lea
fsubrs
mov
adc
shrb
out
stos
cs
sbb
dec
add
pop
addl
fwait
stos
cmp
inc
push
pop
and
adc
je
adc
mov
psrlq
push
sub
dec
mov
lea
arpl
sub
insl
and
leave
lock
mov
and
cmp
jne
out
inc
loopne
ret
fs
insl
sahf
lahf
fcomps
test
push
stos
fiadds
push
lret
mov
mov
pop
bound
sbb
dec
lods
insb
outsl
call
sbb
pop
mov
mov
sti
mov
and
outsl
idivb
fcomps
xchg
enter
jo
add
daa
adc
mov
and
pop
pop
sub
xlat
adc
inc
aam
shll
push
mov
fsubs
popl
shlb
cmpsb
aaa
cmp
dec
jp
push
jge
mov
sub
int
fidivrl
fsubr
jno
sahf
in
and
es
rcrl
mov
and
sahf
push
lock
inc
mov
jg
mov
jl
xor
add
jo
sbb
lea
frstor
jp
adc
jb
imul
pushf
sbb
and
mov
ficomps
outsb
and
test
jo
xchg
nop
xlat
gs
mov
jmp
add
pop
cwtl
mov
lcall
and
adc
out
stos
dec
int
sahf
cmpsl
sub
fbstp
jne
imul
add
jl
inc
popf
push
push
outsb
sub
std
pop
sub
rcrb
jle
inc
add
xchg
jnp
imul
add
jle
js
hlt
inc
inc
pop
scas
sahf
frstor
loopne
xor
adc
xor
daa
pop
in
xor
loop
icebp
aas
mov
icebp
ljmp
add
adc
fwait
loop
push
pusha
mov
jle
adc
loopne
movsl
in
dec
fs
aam
pop
dec
es
sbb
imul
sbb
outsb
std
sub
fwait
int3
sahf
cmpsb
lret
jmp
mov
mov
pop
sub
adc
imul
sysenter
aas
jmp
neg
pop
stos
xchg
les
sarl
scas
leave
inc
lock
sbb
xlat
adc
adc
mov
or
out
fwait
jp
ja
fs
aas
repnz
shrl
xchg
fistl
movsl
repnz
fistps
adc
jle
dec
mov
mov
cmp
movsb
out
add
pop
dec
mov
pushf
gs
popa
mov
cld
test
or
sbb
mov
sbb
cwtl
inc
popa
std
movsl
jmp
rcrl
test
lret
xchg
subb
jle
and
in
ss
mov
or
out
es
lods
inc
pop
scas
mov
push
mov
rcl
aam
mov
mov
jg
cmp
shl
jge
and
popf
lods
mov
pop
mov
adc
adc
fsubl
sbb
addl
lea
push
mov
mov
nop
adc
add
mov
jmp
add
pop
sub
and
mov
clc
lea
outsb
inc
lods
fisttpl
dec
sbb
daa
clc
add
out
test
lods
push
lahf
hlt
arpl
xchg
cld
pop
jle
or
jge
js
cmp
mov
punpckhdq
adc
out
test
xchg
push
xor
les
mov
call
imul
roll
inc
roll
roll
jl
adcb
xchg
scas
sbbl
inc
sarl
lods
pop
jns
pop
mov
mov
jo
div
hlt
ljmp
inc
mov
ret
pusha
cmpsb
out
mov
or
jl
lock
hlt
ds
pop
cmp
fcmovbe
dec
push
aaa
ret
lret
mov
fprem1
out
sbb
push
fisubs
mov
mov
pop
or
inc
pop
mov
adc
jae
fisttpl
xor
insl
in
mov
test
push
fnstsw
pop
cmpsb
mov
decb
int3
or
jb
cmc
jl
pop
sahf
push
lds
test
jmp
xor
jns
fidivrl
aaa
mov
jb
jnp
jno
mov
out
adc
sbb
xlat
in
add
sbb
frstor
add
adc
mov
mov
dec
test
fucom
cmp
cmp
enter
loop
mov
xor
sub
hlt
loope
push
dec
mov
rclb
sub
xor
dec
push
xchg
cmp
movsb
ljmp
xor
daa
mov
test
fnstsw
mov
cmpl
addb
mov
mov
xchg
in
cmp
inc
inc
push
in
popa
stos
ja
sbb
jb
jno
cltd
into
fdivp
lock
xchg
and
out
mov
xchg
divb
mov
pushf
mov
push
popa
cs
dec
test
shll
and
arpl
int
insb
or
stos
les
int3
incl
mov
ja
add
dec
mov
xlat
push
lds
fwait
cmp
test
aam
xchg
push
in
mov
xlat
ret
cltd
js
mov
out
xchg
jg
add
ljmp
loopne
pop
aam
sub
mov
movsb
cmpsl
mov
push
cli
push
cmp
popa
add
xchg
out
lds
cmp
add
xor
sbb
gs
test
pop
std
sub
mov
cmpsl
and
sub
sub
rcl
jl
pop
xlat
pop
mov
add
jnp
mov
adc
and
add
jg
xchg
pop
xchg
mov
jbe
ret
out
mov
jecxz
out
xor
or
lret
add
std
pop
aaa
push
mov
jne
xchg
push
and
aam
inc
movsl
mov
movl
inc
repnz
xor
cld
mov
outsl
mov
out
ljmp
mov
cmpb
lea
enter
add
fmuls
sbb
clc
mov
add
cmpsb
shrb
fnstcw
cli
xor
daa
lods
push
mov
arpl
lret
or
xchg
xchg
pop
xor
push
xchg
repnz
and
push
lock
popf
dec
sbb
add
lock
cwtl
lret
mov
test
mov
jge
stc
xor
hlt
stc
insb
cmpsb
jnp
jl
mov
jmp
jle
sub
ds
sbb
xchg
rorl
mov
mov
jnp
lret
or
sub
adc
pop
insb
lods
jnp
or
aam
xor
movsb
movsl
movsb
add
pop
rorl
mov
rclb
pop
cltd
inc
inc
popa
lods
xchg
pusha
cmp
lret
pop
test
xchg
mov
cld
stc
mov
out
jno
fisubrs
pop
jb
dec
push
frstor
scas
push
pop
and
mov
mov
adcb
rcll
cli
mov
lock
xchg
and
xchg
scas
push
sbb
sbb
test
jmp
cmp
bound
inc
push
cmpsl
push
push
iret
ljmp
lea
dec
mov
scas
mov
loop
jne
jae
pop
movsl
mov
pop
or
loopne
mov
jg
cmpsl
icebp
jg
dec
jecxz
push
or
test
pop
xlat
idivl
lods
ss
shll
adc
aaa
ja
out
sub
adc
push
add
push
xchg
popl
movsl
lret
cmpsl
ds
insl
movsl
ljmp
dec
push
fstpt
cmpsb
xor
pop
cmp
inc
xor
inc
hlt
pop
pop
xor
jge
aaa
hlt
push
add
les
push
and
add
and
dec
imul
fxch
xchg
push
popf
mov
insl
jecxz
icebp
aas
xor
sbb
test
aad
inc
dec
pop
push
mov
sub
lock
sahf
sub
pop
nop
mov
xor
xor
sbb
popa
mov
stos
outsl
mov
mov
jo
pusha
mov
xor
sbb
in
cmpsb
pop
xchg
xchg
lahf
or
movsb
sub
clc
push
and
pop
inc
cs
fst
inc
ljmp
mov
adc
call
fistl
rcrb
push
xchg
pop
add
mov
orb
inc
imul
push
fistl
push
fs
loope
and
xorl
and
insl
andl
inc
out
sbb
cli
push
xlat
rcrl
cld
cltd
loope
mov
cld
sub
cs
or
adc
ljmp
pop
mov
and
into
jnp
add
pmaddwd
out
nop
pop
js
lret
pop
scas
fcompl
pop
adc
loop
xor
out
stos
jnp
cmpsb
lret
mov
dec
in
mov
lahf
mov
mov
outsl
sbb
mov
ffreep
out
mov
sub
push
lock
xchg
cmpb
and
fld
mov
adcl
jp
push
cmpsl
in
mov
icebp
inc
mov
inc
xchg
iret
jge
xchg
dec
in
inc
rcrl
repnz
inc
dec
dec
mov
or
roll
jno
push
andb
enter
inc
pop
out
popa
loope
stc
mov
push
mov
mov
sahf
cmpsb
mov
dec
sbb
mov
js
mov
je
arpl
fcmovb
js
in
rorb
jb
and
bound
in
add
daa
or
push
stc
loopne
imul
push
pop
test
xchg
push
inc
xor
fidivs
fcoms
xchg
ljmp
pop
adc
dec
cmp
mov
or
enter
jge
xchg
in
pop
scas
repz
ds
popa
pop
btsl
add
out
dec
enter
mov
xor
push
mov
and
stc
shrb
lcall
push
outsb
sbb
pop
mov
cmp
out
cmp
enter
pop
cwtl
nop
mov
dec
mov
repnz
in
imul
sub
pop
pop
dec
ret
rcll
outsl
pusha
bound
pop
xor
insb
push
fsubrp
adc
lods
xlat
dec
lods
ljmp
sbb
cld
push
out
or
add
hlt
mov
xlat
cmpsb
movsl
hlt
cmpsb
jnp
jne
xor
mov
outsb
inc
je
or
lods
out
mov
in
mov
nop
adc
movsb
adc
cmc
mov
dec
fs
imul
jg
je
negl
fsubrs
ja
pop
ret
and
push
xchg
ss
jecxz
das
lods
in
fabs
xor
mov
leave
xchg
inc
cmpsl
sahf
lea
pop
in
lock
outsl
jne
inc
mov
xchg
idiv
call
lock
and
mov
lock
test
or
mov
push
push
push
stos
lahf
and
lea
mov
xor
dec
add
xor
dec
ja
cld
dec
adcl
loope
movb
pop
mov
fndisi(8087
addb
adcl
sahf
or
in
xchg
fwait
push
pop
test
push
sahf
sahf
jge
xchg
adc
lods
cmp
xor
in
fildll
ljmp
loopne
jno
sbb
stc
or
dec
call
pop
xchg
push
and
fldlg2
rorl
add
clc
jae
push
test
jae
pop
sbb
shlb
lods
mov
or
pop
sub
outsb
repz
xchg
scas
mov
jmp
and
or
push
ja
adc
add
ret
xchg
pusha
pop
faddl
cld
cmp
stos
enter
add
imul
dec
xor
cmpsb
ret
ret
in
orl
mov
or
popf
movsb
xor
cltd
push
cs
test
mov
and
inc
lret
imul
xchg
sbb
cmpsb
cltd
pop
and
jbe
and
jle
pop
fstl
xchg
add
cmp
and
xchg
mov
int3
xor
inc
sub
jae
arpl
push
sbb
clc
test
dec
aad
or
cmpsl
imull
mov
sub
fsubrs
mov
scas
lret
add
das
sub
add
push
shrl
dec
mov
jg
insl
stos
inc
inc
in
mov
aas
addb
inc
mov
imul
orb
out
pop
add
cmp
mov
push
pop
icebp
jl
xor
add
or
and
sbb
rorl
mov
lods
sahf
add
mov
repz
push
dec
jmp
popf
inc
fcoms
stos
lods
push
bound
mov
mov
int
out
test
mov
push
xchg
xchg
pop
fmull
jnp
inc
mov
jne
sbb
jnp
orl
or
xchg
fimuls
frstor
xchg
mov
icebp
fldenv
icebp
mov
pop
in
sub
std
cmpl
aaa
stos
and
std
imul
sbb
xor
add
push
repz
icebp
js
out
xlat
adc
push
pop
lods
and
jbe
pusha
add
lea
xchg
push
shlb
xlat
daa
jp
js
cs
imul
and
mov
jae
loop
jb
or
push
xchg
into
jmp
lcall
inc
push
gs
sub
cwtl
xchg
out
shl
je
push
leave
aad
scas
fwait
lret
test
cmpsl
cmc
orb
imul
sub
dec
popa
pop
xor
cmp
mov
xlat
pop
imul
xchg
mov
pop
into
xchg
aam
arpl
sarl
cmp
shll
ss
fincstp
ss
mov
mov
rcrb
in
mov
lock
jb
shl
push
add
mov
test
lods
pop
ja
scas
outsl
fisubrs
lods
add
jmp
icebp
add
inc
int
arpl
sbb
nop
js
data16
clts
out
mov
or
add
sub
mov
xor
mov
inc
mov
adc
ret
fsubrl
jp
mov
dec
stc
push
add
mov
loope
mov
rcr
dec
pop
xchg
lock
sbb
or
pop
mov
pop
jmp
push
fsubrp
xor
je
fcmove
divl
fcomps
scas
mov
dec
xor
jecxz
test
or
loop
out
aaa
push
dec
lds
test
sarl
add
sub
jmp
xchg
arpl
rcrl
repz
mov
hlt
xlat
mov
sub
inc
sbb
dec
mov
or
mov
popf
nop
sahf
xchg
movsb
pop
and
or
mov
cltd
xor
or
in
or
add
mov
loopne
or
les
inc
push
jne
and
xor
aam
idiv
sub
mov
xchg
adc
sahf
movsb
test
ja
push
jmp
push
dec
push
dec
dec
xlat
and
jg
adc
xor
shl
fiadds
stos
daa
ficomps
jp
cmp
jno
pop
jo
sbb
in
sbb
cld
mov
stos
mov
jle
movsl
xchg
mov
mov
jp
add
pop
xchg
pop
cmc
push
xor
sub
push
push
andl
sahf
outsb
testb
testb
rolb
lods
or
jo
and
jle
cmp
test
sub
jle
xor
mov
cmpsb
fsubrs
mov
idiv
inc
ss
aas
std
out
jmp
or
add
mov
mov
stos
enter
fldl
cmp
mov
mov
sbb
outsl
out
cmp
in
mov
fdivs
xchg
test
xlat
sub
adc
xchg
shrb
xlat
and
subl
stos
xlat
out
mov
push
stc
add
out
or
lahf
test
fbld
xorl
aas
pmuludq
in
out
or
insb
into
fildll
xor
loope
mov
sahf
ljmp
insl
dec
addr16
js
push
fdivl
adc
dec
cmp
dec
push
movsl
cmp
fld
xchg
push
jecxz
cli
or
sub
fildl
mov
mov
daa
gs
repnz
outsb
in
sbb
outsl
jno
jp
out
xchg
mov
inc
ds
sahf
sbb
pop
mov
lret
andb
push
rcll
fwait
push
sbb
jbe
js
decl
lret
leave
call
push
xchg
adc
xlat
in
xor
cmpsb
adc
ficomps
mov
movsl
aaa
lret
jp
lea
les
ss
dec
and
loop
add
inc
jae
fildl
cli
sbb
in
fnstsw
xchg
stos
cmp
jnp
mov
ret
or
mov
cmc
inc
aam
push
testb
sub
or
xor
std
testl
rcrb
add
dec
xchg
loop
imul
nop
ja
jmp
inc
das
lods
popa
scas
shl
sbb
adc
addr16
cbtw
sti
mov
cmp
mov
cli
push
pop
xchg
inc
xor
pop
pop
xchg
lret
or
aaa
fsubrl
shll
pop
aad
push
scas
xor
jae
ljmp
sbb
mov
pop
mov
popf
jno
mov
mov
and
push
out
in
insl
cmp
outsb
int3
cli
xor
je
jg
idivb
and
and
nop
nop
jno
adc
scas
sub
repz
push
jnp
jae
test
dec
mov
xchg
mov
fisttpl
cs
aam
int3
pop
mov
orb
xchg
mov
xor
xor
push
adc
idivb
scas
cmc
scas
lods
notl
sbb
jae
das
mov
cmp
jae
xchg
xchg
test
sbb
sub
les
sub
adc
outsb
imul
jmp
cmp
fdivl
pop
je
mov
cmpsb
lock
adc
mov
roll
lret
cmp
push
xor
movsb
pop
add
daa
lcall
pop
lgs
dec
push
repnz
jle
cmp
filds
mov
dec
fucomp
ja
adc
cltd
je
fucom
lea
sub
dec
fstpt
mov
mov
push
xchg
cmp
cmpsl
inc
sub
pop
mov
cld
dec
inc
or
fcmovne
pop
adc
xchg
lahf
scas
jo
shrl
jno
pop
pop
loope
inc
add
out
xor
or
adc
cs
sahf
sbb
mov
push
leave
out
mov
outsb
pop
dec
jns
or
hlt
mov
dec
dec
mov
pop
xchg
jo
mov
xor
xchg
sbb
cvtps2pd
dec
hlt
inc
jl
sub
in
fcmovnb
sub
mov
out
jbe
les
imul
mov
fcoml
mov
jle
outsl
imul
dec
lods
lods
add
scas
mov
popf
push
lret
fidivl
sbb
jae
cs
mull
mov
push
iret
jae
sub
int3
cmp
push
into
xchg
mov
add
jmp
cmc
cmp
cmc
jnp
mov
ja
push
jecxz
sbb
loope
iret
ds
dec
xchg
loope
cwtl
or
push
cmc
jp
sahf
fsts
pop
mov
adcl
lea
xchg
ljmp
jl
cmp
pop
push
insb
aas
mov
lds
imul
sbb
lods
sub
cmpsl
ror
dec
arpl
insb
jno
add
inc
xorl
sub
ficompl
cld
aas
incl
xchg
xor
adc
cmp
dec
and
fisubrl
cs
pop
push
pop
and
or
ds
iret
pop
mov
out
lret
sbb
add
cmpsb
cltd
stos
test
repnz
or
add
scas
leave
mov
pop
sti
sub
pop
subb
ret
push
pusha
inc
lods
or
and
das
ret
jl
sahf
cmp
fildl
pop
sbb
icebp
pop
lods
aaa
out
shll
enter
das
xor
add
add
in
adc
xlat
sbb
fsubl
xor
jo
out
dec
mov
inc
icebp
xor
mov
lcall
jg
mov
das
loop
inc
inc
rorl
pop
lret
std
out
xchg
cld
add
and
arpl
add
arpl
imul
xor
sbb
mov
negl
divl
mov
aam
loope
xor
fists
inc
xchg
push
adc
xchg
das
andb
test
sub
push
jae
jo
jnp
ffree
push
dec
add
js
lds
push
inc
xor
in
movsb
add
ds
dec
subl
gs
pop
mov
and
sbb
rep
stos
jmp
dec
adc
cmp
iret
jg
popf
rcl
mov
imul
mov
ficomps
and
adc
dec
cmpsl
mov
lds
loop
sub
pop
push
xchg
inc
jl
mov
and
xchg
stos
push
in
dec
popf
fildl
sbb
push
pop
and
cmp
dec
lea
xchg
sahf
arpl
aam
inc
cmpb
je
jmp
mov
dec
aam
dec
sti
jle
mov
in
jmp
mov
or
sbb
mov
ret
add
and
ficompl
outsb
xor
pop
loopne
add
out
shlb
imul
pop
aam
pop
adc
divb
push
adc
pop
xor
cmp
movsb
dec
xchg
shr
es
xchg
iret
push
dec
data16
xchg
dec
je
adc
les
lods
sahf
mov
sub
imul
mov
aaa
enter
mov
stc
shll
testl
jle
nop
test
dec
cmp
andb
mov
push
rclb
inc
sub
mov
js
mov
iret
mov
fistl
dec
and
mov
bound
js
int
cmp
mov
sub
int3
adc
out
inc
inc
xlat
jge
clc
pop
cmp
out
cmp
dec
push
push
mov
fs
add
inc
mov
mov
popa
ret
hlt
test
cld
and
int
loopne
daa
push
outsb
sbb
pusha
cmp
scas
dec
fbstp
dec
sbb
jbe
fs
dec
ss
dec
push
jno
lahf
mov
xchg
mov
stc
dec
call
aas
in
notl
push
or
sbbb
dec
mov
push
or
push
push
mov
xor
mov
cltd
shrb
add
jo
test
xchg
pop
shrb
pop
mov
push
mov
or
in
mov
inc
inc
loop
cli
mov
and
pusha
fnsave
adc
add
clc
ljmp
add
mov
pop
and
fwait
pusha
xor
pusha
imul
scas
push
add
insb
dec
mov
cmpsb
das
xor
loope
in
mov
bound
popa
sbb
and
xchg
dec
cmp
push
dec
fistps
cmp
mov
adc
mov
incb
inc
adc
fwait
push
mov
out
lret
push
fs
push
add
dec
shrl
fisubs
pop
imul
mov
dec
xor
adc
mov
das
imul
inc
je
out
shrl
xchg
cld
pop
aam
pop
sar
andl
in
dec
test
fsubl
mov
mov
inc
mov
jo
xchg
mov
or
out
loopne
sub
pop
or
xchg
movsl
in
out
popa
ss
cmpb
out
hlt
xchg
xor
jmp
adc
xlat
pop
hlt
cli
cmp
ja
push
mov
mov
lock
cmp
aad
lea
and
icebp
rorb
xor
das
rcrl
mov
jecxz
fdivrl
add
aaa
shlb
add
adc
push
aas
sub
hlt
lock
xor
cmpsl
inc
inc
sbb
xchg
pop
stos
adc
pop
out
and
call
mov
pushf
and
mov
mov
mov
aam
aaa
cld
sub
sti
jp
pusha
xlat
add
mov
test
xor
mov
out
nopl
or
lret
fstpt
sbb
mov
sbb
dec
mov
sub
cwtl
push
xor
dec
push
sub
ds
orl
xchg
das
push
mov
insl
aas
into
adc
jle
mov
rcrb
ja
sub
lds
xchg
xor
outsb
adc
cli
adc
dec
out
pop
jo
jno
sbb
pushf
adc
sub
jnp
dec
lea
xchg
push
jge
ret
ss
dec
dec
rcrl
jns
and
shll
cmp
xchg
test
loopne
in
es
mulb
roll
jbe
ds
sbb
jns
add
pop
sahf
jns
mov
jle
jo
dec
adc
or
push
jge
sub
iret
outsb
add
or
ja
lock
rcrb
test
push
ret
fmull
and
outsb
and
imul
scas
mov
pop
or
sbb
xchg
mov
int
ret
and
imul
in
fildll
icebp
bound
shr
sbb
xor
cmp
jnp
out
or
sahf
jmp
nop
orb
sbb
lret
jae
mov
loope
and
push
xchg
mov
in
lods
imul
adc
push
iret
jge
jno
je
lods
and
mov
sub
cwtl
clc
mov
jo
loope
adc
aad
out
push
mov
rcr
cmp
outsl
aad
dec
insb
iret
in
rclb
mov
jg
mov
or
jae
xor
sbb
mov
jle
mov
mov
or
push
or
mov
adc
push
test
test
cmp
cmp
fsubs
adc
out
iret
test
std
push
daa
loopne
dec
lods
mov
xchg
adc
xor
cltd
jo
add
or
js
in
mov
xor
add
jmp
jp
mov
adc
xchg
addl
aad
shll
jno
inc
lret
out
and
push
xor
sarl
movsb
shll
loopne
mov
lcall
and
mov
adc
int
inc
mov
je
icebp
scas
mov
mov
or
jge
push
sub
test
pop
sahf
mov
dec
push
jecxz
xchg
dec
mov
xor
xchg
push
jnp
mov
sbb
xlat
xor
xor
mov
fwait
ret
jecxz
ret
inc
out
shrl
daa
stos
scas
sub
hlt
push
xor
and
out
je
add
jecxz
sub
and
outsl
stc
adc
mov
push
xor
fisubrl
pop
cmp
jo
lods
sbb
push
xchg
jno
fnstcw
outsl
cmp
es
and
ljmp
xchg
push
push
lret
mov
dec
loopne
push
xchg
lods
scas
xor
adc
mov
dec
dec
ret
cltd
push
and
les
ret
lahf
in
mov
cmpsb
mov
iret
out
bnd
cli
loop
popa
jne
mov
js
lock
fisubrs
push
jbe
jns
cmp
push
clc
mov
xor
dec
jmp
cmp
lret
xor
daa
fnstenv
insl
pushf
xchg
stc
jno
adc
movsl
dec
loope
mov
lret
rorl
stc
nop
ret
or
inc
adc
dec
mov
les
call
mov
fisttpll
mov
lock
pop
inc
push
dec
aas
popa
insl
sbb
scas
sahf
add
pop
fmuls
inc
lret
mov
push
lods
jecxz
sbb
cwtl
divb
loopne
fists
dec
cmp
arpl
cmp
fxch
mov
cmp
lahf
mov
push
lea
es
imul
jno
sub
xor
jo
std
xor
imul
push
mov
inc
or
test
cltd
outsl
lods
sub
test
out
roll
fld
in
lret
stos
inc
in
or
jb
cwtl
sbb
in
mov
add
adc
leave
add
outsl
mov
dec
cld
jne
jns
or
test
dec
and
sub
add
jb
shll
lcall
and
aad
jae
inc
push
add
idiv
lahf
or
test
cmp
sbb
inc
xor
cli
mov
or
icebp
incb
lcall
loop
std
cltd
cli
mov
sbb
cmp
leave
xchg
push
push
push
inc
shrb
repz
clts
ficoml
mov
cltd
sbb
adc
xchg
and
hlt
sahf
jb
cmpb
cmc
xchg
xchg
sbb
scas
xchg
imul
pushf
mov
xchg
pop
js
imul
add
mov
fldt
mov
shrb
in
add
mov
dec
mov
pop
fidivs
shlb
sbb
test
insb
subb
jp
cmp
xchg
ja
cmc
lahf
cmpb
ret
frstor
in
lock
aad
jbe
ret
inc
es
fdivr
addl
out
jns
in
and
rclb
into
dec
outsb
xchg
bound
retw
push
daa
adc
sbb
ljmp
jecxz
pop
fisttpl
adc
xchg
cmp
and
mov
orb
xor
lock
dec
and
fbstp
int
xchg
and
inc
fucom
dec
adc
mov
or
fdivrs
rcrb
aam
xchg
fisubrs
orl
mov
enter
and
mov
and
sbb
or
js
in
cmp
scas
stc
imul
sbb
shlb
dec
cltd
ljmp
and
fs
fdivs
sub
and
and
imul
mov
inc
cwtl
inc
push
adc
fbstp
fwait
stos
sub
inc
cmpsl
mov
mov
adc
sbb
test
inc
mov
jle
jns
in
push
cmpl
sbb
dec
mov
xchg
and
sti
jp
cld
arpl
in
sub
call
push
pushf
add
xor
sahf
iret
xor
mov
xchg
sub
or
scas
mov
push
pop
movsb
test
call
rorl
fs
push
icebp
or
mov
fs
xchg
subl
mov
push
mov
repz
lods
daa
call
ljmp
or
dec
mov
mov
inc
in
push
fsubrs
in
or
call
daa
xor
subb
or
aas
rolb
mov
leave
xlat
mov
test
test
cmp
scas
aam
xchg
jmp
xchg
jle
push
out
mov
fisttpl
pop
cmpsb
shlb
inc
inc
and
lods
fbld
mov
emms
loopne
sbb
outsb
pop
cmpl
lret
push
and
mov
dec
inc
jb
jo
mov
xchg
xchg
dec
xchg
or
in
mov
mov
fcomi
rcll
mov
mov
inc
data16
leave
jl
mov
out
lock
and
scas
inc
add
lock
mov
aam
lret
fildl
and
xchg
icebp
insl
in
jae
sub
mov
ret
aam
nop
lods
or
cmpsb
mov
cmp
xchg
scas
cli
cmpsb
shll
rcl
lea
dec
push
aad
cld
js
or
aas
jge
or
pop
jbe
fs
mov
mov
jno
inc
int
test
fiadds
in
nop
addb
loope
mov
xchg
push
mov
cmpsb
xchg
je
hlt
mov
sbb
mov
mov
test
mov
mov
xor
stc
cltd
scas
lcall
mov
imul
lds
ret
lea
and
mull
scas
add
mov
ret
fmul
mov
fcoms
xchg
jnp
push
filds
sub
fcomp
sbb
add
dec
pop
and
cmc
std
inc
dec
popf
ja
xchg
xchg
adc
jle
pop
inc
into
in
lea
xor
or
lods
xor
xorb
cmpsl
orb
jecxz
fmuls
add
mov
pushf
add
ljmp
dec
lret
add
mov
push
mov
pop
sbb
or
out
aaa
test
cmp
and
int3
out
xor
dec
cmpsl
add
xchg
and
dec
imul
mov
in
pop
adc
push
lcall
jae
aaa
jae
rcll
jmp
scas
cmpsl
lods
push
lock
in
dec
scas
cmp
and
inc
sub
fldt
jo
leave
ds
rcrl
adc
xchg
shrb
add
push
hlt
stos
or
das
jg
popa
cwtl
movsb
aam
ja
push
mov
idivb
jle
mov
addr16
mov
insl
dec
dec
stc
cmc
adc
sbb
loope
add
xor
outsb
cmp
lahf
xchg
xchg
jp
fdivl
add
inc
lds
pop
xchg
pop
jmp
and
insb
dec
mov
lcall
rolb
pop
and
dec
mov
scas
sbb
jmp
sbb
push
hlt
mov
xchg
xchg
popl
cmp
in
adc
mov
jne
and
fisttpl
sbb
les
adc
data16
out
jae
and
cwtl
shr
mov
sti
leave
inc
out
pop
pop
arpl
ret
pop
mov
push
fsubrp
outsl
test
mov
test
arpl
stc
mov
mov
xchg
adc
insl
sbb
in
sbb
mov
push
lahf
dec
and
add
outsb
mov
adc
bound
insb
mov
dec
xor
stos
mov
inc
sub
sahf
sbb
sbbb
jno
xor
dec
jp
mov
push
rol
adc
popa
aam
cld
lcall
into
pop
pop
push
out
cmp
pop
mov
bound
or
lock
daa
loop
stos
pop
adc
out
and
push
lock
inc
mov
loope
movsb
push
fistps
jmp
in
mov
mov
mov
xchg
and
ficompl
jp
push
flds
push
iret
in
cld
jge
scas
rcll
arpl
les
int3
inc
pop
out
mov
dec
int3
dec
stos
nop
jmp
mov
shl
into
scas
fistpl
dec
jbe
int
rol
push
scas
ds
xchg
daa
inc
adc
popf
pop
push
inc
in
mov
test
roll
mov
or
pop
push
mov
test
shr
dec
cmp
jns
inc
lock
test
andl
xchg
dec
jno
fadd
lret
insb
enter
call
outsl
sbb
loopne
xchg
icebp
sti
sbb
and
ja
cmpsl
adc
cmc
aas
mov
in
inc
js
jg
jno
jle
andl
fs
cltd
inc
adc
cwtl
push
jne
xlat
lods
je
ss
fdivrl
xchg
cli
xor
sub
add
in
imul
in
xor
dec
push
pop
roll
and
or
fwait
pop
sbb
and
int3
daa
shll
fcomps
push
xchg
inc
mov
pushl
aas
cwtl
mov
test
mov
add
push
fstl
enter
and
add
push
sub
dec
sbb
jmp
cltd
loope
xchg
lret
lods
shrl
aad
mov
xorl
xor
adc
inc
popf
inc
test
movsb
hlt
mov
mov
sub
add
mov
inc
movsl
mov
shufps
push
mov
or
rolb
pop
bound
lods
adc
add
inc
repnz
in
stos
lret
dec
sub
call
sbb
lods
pop
cmp
int3
fiaddl
insb
xlat
jne
test
xchg
pusha
aam
movsl
imul
add
pop
mov
xchg
lahf
lahf
ret
push
sub
ljmp
jle
daa
inc
pop
sub
dec
icebp
mov
imul
les
dec
push
fcompl
lds
push
iret
push
mov
jmp
xor
inc
sub
rolb
jo
pusha
ret
push
cmpsb
cmc
roll
repz
daa
test
mov
inc
ja
into
fisubl
call
jb
imul
cwtl
mov
dec
mov
repz
jg
xchg
xchg
addr16
imul
es
aaa
cmpsb
sub
add
push
hlt
or
hlt
stc
mov
stos
xor
insb
cmp
pop
jno
jge
dec
pop
add
dec
shrl
repz
lahf
fwait
push
push
cmpsb
xchg
push
aas
in
lcall
or
sahf
movsb
cltd
mov
jne
inc
sbb
dec
mov
mov
std
cs
fwait
xor
push
cli
out
cmp
fdivrl
das
sar
in
sbb
mov
cli
ficomps
stos
add
xchg
mov
cmp
lahf
out
ret
enter
cmp
dec
out
cwtl
sti
push
inc
mov
std
jns
add
or
out
mov
je
mov
mov
movsl
cmc
and
or
cld
adc
mov
xchg
jle
fucomip
fcompl
xchg
lret
int
and
loope
loopne
sub
jp
push
push
mulb
mov
adc
mov
sbb
aas
sub
sbb
jo
or
or
push
dec
sub
adc
xor
out
outsb
add
cmp
outsb
ja
popl
mov
lods
sti
dec
outsb
dec
lea
or
hlt
addr16
cmc
sbb
f2xm1
scas
sub
stc
fldcw
push
cli
mov
cli
test
fldl
std
push
push
icebp
jae
stos
pop
sbbl
inc
inc
call
mov
and
xchg
shrl
int
lock
jns
add
ljmp
cmp
rcrl
mov
mov
pop
outsb
push
pop
out
repnz
lahf
call
test
push
stos
sub
in
dec
movsl
lcall
and
add
pop
mov
fsubr
cmpsl
data16
adc
inc
jno
dec
insl
inc
mov
outsb
mov
xor
popf
or
xor
ret
fidivrl
cmp
pop
push
add
add
mov
xchg
xchg
push
push
push
fwait
ja
mov
wbinvd
shl
pop
sub
push
popa
jge
gs
and
fld
sub
mov
pop
cmpsl
xchg
lahf
leave
mov
xor
add
fdivl
js
sar
mov
or
cmp
mov
and
pusha
sbbl
jb
jbe
cld
xor
and
scas
stc
mov
fwait
push
jae
subw
sahf
and
fsubr
adcb
je
jmp
add
lahf
jnp
add
into
jnp
shlb
xchg
enter
stos
and
pop
push
rcrl
jle
mov
add
dec
iret
mov
push
push
or
sub
xor
sub
jo
lret
mov
sti
lcall
mov
mov
outsl
pop
mov
and
jns
loopne
adc
cmp
dec
push
or
mov
mov
clc
movsb
mov
loop
lret
ret
scas
and
lret
mov
out
xchg
iret
leave
cmpsb
popf
cmpsl
or
and
fistpl
mov
bswap
pushf
cmpsl
imull
mov
icebp
cmp
insb
inc
xor
xchg
test
sbbb
sbb
jle
adc
jge
aas
pop
bound
icebp
mov
scas
lock
inc
lds
or
pop
call
fiadds
fsubl
out
fstl
mov
dec
es
cmpsl
gs
xor
in
jns
fnstsw
repnz
push
icebp
xchg
add
lret
and
stc
jne
outsl
daa
cmc
nop
ror
stos
rolb
shlb
shlb
es
outsl
inc
cld
pop
mov
and
adc
or
cmpsb
test
xchg
xchg
call
in
xchg
sbb
or
mov
pop
cmp
mov
iret
gs
dec
cmp
or
jns
and
mov
mov
in
int3
and
stos
push
mov
test
jmp
push
add
sub
aad
fldl
popf
pop
mov
xchg
shlb
rorl
and
movsb
test
loop
sbb
mov
jne
jbe
fsubrl
orl
xchg
sbb
sub
les
pop
cmp
and
or
repz
gs
add
jl
jo
dec
xor
or
sub
inc
push
or
jno
lea
dec
xchg
inc
cwtl
mov
sti
cs
rcl
sbb
and
daa
inc
pop
inc
hlt
mov
inc
mov
ret
scas
push
push
scas
dec
mov
mov
and
inc
fcomps
cmp
add
sub
inc
xchg
jmp
leave
repz
adc
cwtl
loope
iret
adc
imul
pop
or
add
push
imul
jnp
push
in
ret
push
ret
dec
jge,pn
cmp
lcall
lcall
into
lret
movsb
out
fadds
jg
test
and
sti
inc
fmul
sbb
testb
lret
pop
das
mov
bound
lret
or
xchg
aas
push
test
jl
cmp
in
lret
cmp
out
out
mov
aas
or
in
or
or
mov
xor
push
mov
cmp
lahf
xor
popa
mov
dec
pop
cmp
daa
call
hlt
xor
mov
sbb
fwait
adc
clc
adc
dec
enter
out
das
mov
mov
jnp
scas
xor
and
inc
sub
outsb
jp
repnz
mov
lret
repz
hlt
sub
popa
cmp
mull
dec
addr16
xchg
aas
cmp
xchg
jg
sub
mov
mov
or
mov
movsl
sahf
and
shl
adc
fs
add
cwtl
sbb
mov
or
sub
and
cmc
div
push
adc
and
cmp
add
dec
aam
jbe
xor
dec
add
mov
mov
inc
lock
mov
ret
push
mov
cld
fdivs
jecxz
rol
jae
mov
push
or
dec
lds
jle
and
mov
cmp
and
dec
cld
inc
mov
out
push
or
in
imulb
add
data16
ds
mov
outsl
mov
push
orb
or
iret
mov
lds
dec
cs
pusha
call
cmovae
into
popf
popf
add
dec
repz
mov
xor
adcl
and
add
add
inc
stos
cwtl
jno
lods
dec
adc
pop
not
or
cwtl
int
cltd
inc
xchg
leave
sbb
rcrb
cs
adc
int
dec
pop
or
xchg
pop
xor
iret
xchg
xchg
dec
stc
mov
sbb
mov
sub
jno
jecxz
push
push
dec
mov
push
inc
daa
scas
cmpsl
cmp
gs
jp
xchg
push
ss
lods
sbb
je
lea
and
std
rcr
mov
in
jge
gs
or
int
shlb
decb
and
ficompl
xorl
xchg
aam
int
fmul
sti
sbb
mov
fwait
or
xchg
fwait
int3
mov
insl
pushf
rolb
lahf
xor
es
dec
inc
popf
andl
xor
mov
cltd
adc
push
push
cmp
ret
insb
in
out
and
iret
sbb
pop
pop
nop
pop
push
mov
icebp
scas
scas
je
adc
in
divl
xor
push
rorl
mov
insl
inc
push
fsts
push
dec
out
arpl
push
add
or
daa
mov
push
insl
repnz
clc
inc
lds
add
es
lea
cmp
sub
mov
pop
inc
loope
jmp
xor
into
mov
mov
or
jle
roll
adc
out
or
daa
out
lods
jle
add
scas
icebp
ss
in
test
scas
popf
sti
xchg
pop
loopne
ret
jl
in
es
gs
and
cmp
jp
lret
adc
aas
or
xchg
cli
fsubrp
dec
cmp
add
addb
fs
lcall
dec
xchg
ja
mov
or
sahf
add
push
push
and
daa
sub
insb
and
sub
or
aaa
cltd
mov
pop
bound
mov
or
stos
xor
pop
pushf
into
pop
cmp
push
cmpsl
adcb
mov
inc
enter
adc
loop
movsb
mov
dec
mov
hlt
and
cmp
js
sahf
dec
stc
aam
fucom
mov
sub
lock
dec
dec
cmp
xchg
pop
out
cs
aas
loope,pn
and
imul
shlb
test
negb
and
mov
clc
xchg
xchg
or
push
out
pop
cmc
mov
dec
xchg
daa
imul
jae
jl
mov
xchg
sbb
in
cs
data16
jmp
or
shll
sbb
cmpsb
xchg
jge
pop
mov
lds
addr16
inc
popf
fdivrl
or
insl
and
les
inc
shrl
or
xchg
ss
imul
push
xchg
mull
mov
dec
dec
repz
push
faddl
mov
roll
push
sbb
mov
lods
cs
aas
xchg
dec
xorl
cmpsb
dec
mov
add
cli
enter
lods
sti
shl
ja
push
loope
or
test
cli
pop
mov
pop
lret
mov
enter
push
mov
rcrl
push
cmc
xor
or
xor
or
pop
cmpsl
icebp
js
pop
sub
and
and
imul
mov
push
test
dec
hlt
xchg
cmc
inc
pop
adc
mov
jle
aaa
mov
mov
mov
fsts
cmp
or
in
addr16
in
insl
mov
lods
mov
push
in
jnp
in
movsb
rorb
push
call
mov
in
jo
outsl
popa
push
ljmp
insl
cmp
add
jbe
cwtl
cmpsl
outsb
or
sub
or
and
pushf
es
subl
lock
adcb
inc
xchg
or
in
mov
bnd
cmc
dec
jge
mov
iret
ss
jecxz
iret
pop
add
pop
mov
or
sub
pop
adcl
push
js
or
sbb
lahf
leave
outsl
inc
push
cmp
pop
push
jo
cs
es
inc
sub
xlat
and
adc
xchg
aad
xor
mov
repz
ret
insl
outsb
cwtl
outsb
sbb
dec
push
pushl
jge
and
xchg
iret
xor
outsl
je
mov
daa
and
call
rcll
lea
nop
cmp
and
xor
push
push
dec
inc
and
cmp
out
mov
inc
adc
mov
aaa
pop
mov
aam
cltd
js
iret
shrb
jmp
or
xchg
mov
adc
rorb
aad
sbb
hlt
push
daa
cld
psubusb
dec
fildll
std
jecxz
lea
cmc
stos
add
cmpsb
ljmp
dec
lret
pusha
xchg
fildll
popa
inc
lret
sub
push
mov
or
insb
sbb
mov
adc
nop
out
inc
xchg
or
lods
nop
push
int
imul
cmpsl
scas
sbb
jg
fs
shlb
test
pushf
add
leave
push
mov
ret
pop
pushl
mov
sti
pop
sti
insl
mov
mov
adc
arpl
dec
lods
jns
inc
cmp
mov
subb
ss
xor
inc
mov
pop
push
imul
adc
jb
lods
adc
xor
cmp
rorl
in
pusha
imul
mov
xor
inc
das
fs
clc
mov
daa
mov
dec
push
sub
frstor
jne
mov
cmpl
roll
dec
repnz
xor
scas
repnz
and
es
adc
insb
pop
cmp
rcr
aam
hlt
cmp
push
sbb
stos
dec
mov
inc
mov
fwait
push
ret
push
or
stos
aas
mov
jl,pt
sbb
xchg
scas
lret
adc
into
dec
movsb
dec
js
add
scas
lock
jl
scas
pop
mov
ljmp
sbb
push
iret
mov
jb
jmp
pusha
cmp
cmp
mov
mov
cmc
sub
mov
adc
jp
cmp
popa
cli
push
loopne
loop
fisubrs
pop
cwtl
clc
test
jecxz
mov
cmp
shrb
lret
cmp
lods
mov
mov
pop
push
hlt
jg
es
lds
fisubs
jne
and
mov
xor
test
or
dec
lahf
sub
mov
invd
sarl
mov
aad
icebp
mov
mov
add
mov
adc
pop
fwait
nop
out
stos
push
adc
sub
loop
xlat
xor
mov
jae
mov
xor
mov
mov
sub
aaa
inc
fidivl
ror
pop
data16
xor
je
mov
popf
out
das
xchg
mov
iret
negb
cmc
sahf
hlt
sbbl
and
sub
or
xor
scas
push
pop
sahf
shrl
out
xchg
ja
daa
pop
popa
hlt
insb
adc
ja
jmp
mov
push
insb
sub
xchg
bound
or
aad
cmc
push
inc
mov
dec
lret
mov
pop
outsl
push
sbb
clc
out
lods
xchg
dec
push
jo
stc
stos
test
jge
inc
ficompl
fidivrl
mov
loop
rcr
mov
bound
mov
push
ss
lods
push
loopne
fimuls
test
cli
cmp
in
sub
fidivl
cmp
aam
pop
cli
shlb
cmp
loop
push
mov
stos
rorb
xchg
pop
mov
das
arpl
sbb
repz
inc
leave
ret
jns
fbstp
shrl
pop
lcall
lahf
push
mov
push
sub
adc
les
mov
popf
fdecstp
add
icebp
psubb
out
push
jge
cmp
test
int
jo
ucomiss
mov
xchg
jb
pop
out
iret
jb
jle
pusha
or
push
jns
lds
or
sbb
fistpll
cmp
scas
jge
icebp
lea
es
in
mov
cld
pop
add
loope
dec
fisttpl
inc
mov
lahf
data16
sarl
aam
into
add
scas
add
test
lret
xor
xlat
cwtl
dec
ja
mov
rcrl
pop
pop
stos
movsb
xchg
enter
push
sahf
pop
mov
ljmp
push
in
sbb
sub
push
mov
ja
in
push
xchg
mov
sbb
aam
mov
pop
rcrl
push
lcall
call
cli
sbbl
cwtl
lret
movsb
xchg
repz
aam
cmp
pop
pop
int3
cmp
add
ljmp
dec
xor
mov
hlt
push
in
int3
repz
inc
mov
sbb
fmul
test
xchg
mov
sti
icebp
popa
push
hlt
and
outsb
push
iret
lret
push
push
mov
xchg
fdivs
dec
arpl
jg
outsb
stos
push
mov
testl
mov
leave
or
cld
imul
in
sbb
push
sbb
subl
out
xchg
push
in
push
push
push
mov
xchg
frndint
xor
lods
mov
xchg
add
imul
xchg
and
test
dec
es
or
push
in
sub
mov
stos
leave
dec
vprotq
cmpsl
mov
cmc
xor
xchg
rcr
jle
pop
negl
mov
popa
add
mov
mov
lds
shlb
and
pop
sub
cli
stos
mov
lock
push
outsl
js
test
out
dec
mov
mov
dec
pop
lea
dec
push
popa
push
stos
xor
and
push
lret
dec
stos
ja
add
sbb
xor
jb
or
mov
adc
sub
add
push
mov
push
pop
lods
pop
lcall
arpl
push
imulb
adc
gs
mov
or
and
adc
ja
or
sub
lret
cmpsb
mov
mov
jge
addr16
push
adc
inc
test
jle
jle
xchg
sub
aad
outsb
ljmp
int
or
xchg
or
dec
xor
push
mov
mov
aaa
in
in
shrb
pop
mov
pusha
sub
data16
gs
jle
popl
inc
inc
jl
or
mov
cs
sub
push
test
mov
xlat
mov
pushl
mov
pop
mov
pop
movl
lret
inc
push
mov
push
adc
out
mov
push
push
and
sbb
mov
and
add
ss
pop
lock
mov
bound
fs
das
jne
scas
xlat
sti
xchg
fst
lods
mov
lods
jae
decb
hlt
xchg
stos
std
lock
loope
cmpsb
cmp
and
pop
push
cld
push
mov
js
sub
in
jb
xchg
loopne
mov
jge
clc
popa
test
arpl
int3
test
and
push
incl
lahf
clc
jmp
pop
das
daa
test
or
cmc
insl
pop
pushl
cmp
push
mov
dec
or
imulb
dec
dec
mov
ret
sarb
sahf
adc
lds
lods
notb
faddl
int3
loope
cwtl
push
gs
xlat
inc
fucomp
mov
in
xchg
addb
imul
das
xlat
mov
sub
repz
sbb
icebp
xchg
js,pn
push
inc
js
js
jns
dec
push
push
out
ljmp
sbb
dec
cmpsl
aaa
dec
adc
cmp
push
mov
mov
fadd
and
je
add
xchg
mov
xor
sub
or
dec
mov
mov
inc
add
mov
jmp
lret
daa
mov
test
and
sahf
lcall
clc
push
or
sub
rorl
je
cltd
xchg
inc
jnp
xchg
sub
sub
adc
ret
ja
mov
push
lea
bound
mov
test
sub
into
int3
pop
addr16
xor
fwait
mov
pushf
cwtl
xchg
faddl
mov
das
insb
dec
jae
sti
imul
push
mov
xlat
iret
cmpsl
aam
mov
or
inc
mov
data16
lea
cltd
imul
dec
lcall
pop
push
cmp
je
jnp
push
divb
push
dec
stos
mov
lcall
cmc
ljmp
ret
scas
add
mov
inc
jge
cmp
mov
mov
sbb
push
in
sbb
xchg
adc
hlt
push
xlat
imul
imul
stc
orb
fisubrl
sub
pop
ljmp
les
ficomps
mov
dec
pop
daa
mov
inc
jp
xchg
lea
xchg
and
xchg
pusha
dec
mov
inc
jp
sub
mov
mov
out
aad
ret
or
loopne
lret
lcall
cld
xchg
and
std
cmpsl
lods
in
fsubl
adc
or
adc
sti
ljmp
push
mov
fiaddl
cmpsl
mov
cbtw
clc
pop
mov
mov
xchg
dec
jo
pop
inc
cmp
or
dec
pop
pop
jnp
sub
xchg
inc
pop
mov
push
sbb
pop
mov
pop
faddl
push
leave
jo
push
in
jecxz
es
test
and
mov
sbb
sub
ret
gs
loop
add
xchg
pop
mov
jns
sub
pushf
pop
pop
stos
inc
cmc
test
xchg
lahf
je
cmpsb
jne
cwtl
mov
sbb
int3
pop
dec
enter
xor
push
xor
fcmove
cmp
mov
pusha
fcmove
filds
gs
lea
scas
test
sahf
xchg
stos
cmp
adc
jno
push
cmpsb
imul
pop
inc
jb
cmp
call
enter
xchg
xor
shll
adc
push
mov
jmp
iret
push
fcoms
gs
loope
out
in
jp
out
jb
repnz
jbe
dec
popa
imul
and
sub
dec
stos
les
dec
arpl
and
test
cltd
inc
test
mov
es
ret
fsts
jo
dec
add
mov
arpl
xor
ljmp
int
add
or
or
cmp
jne
pop
adc
ret
sbb
fdivp
inc
enter
adc
pop
xchg
imul
or
pop
xchg
je
xchg
scas
call
divb
sbb
aad
loop
push
pop
push
add
roll
out
sbb
jl
out
gs
push
jp
lret
push
je
cltd
mov
das
dec
or
mov
popf
dec
xor
xchg
jp
push
fisubrl
test
hlt
icebp
inc
lods
out
rolb
and
into
pop
xchg
xor
xor
in
xor
mov
mov
sub
rcl
pop
cmp
repnz
sub
call
pop
shrb
mov
and
out
rcrl
or
pop
sub
arpl
int3
add
adc
test
and
xorb
xchg
xorb
or
cwtl
insb
iret
add
mov
xor
das
xlat
add
pop
inc
test
mov
jae
out
dec
lret
push
shlb
aam
mov
insb
orb
add
xchg
dec
xor
or
stos
out
iret
ja
push
pop
ljmp
jnp
iret
xchg
sarb
mov
outsb
mov
jle
push
or
sahf
adc
faddl
cmp
push
jbe
cmp
xorl
movsb
xor
pop
jo
sub
jnp
pushl
sub
dec
pop
sub
gs
cmpsb
jne
dec
xchg
in
adc
jl
dec
push
out
pop
aaa
sbb
cmpsb
das
jmp
jbe
imul
stc
mov
int3
std
sarl
mov
loop
or
pop
pop
pop
push
aas
lock
pop
insl
gs
imull
adc
mov
mov
inc
cmp
fmuls
stos
pop
pop
dec
fldl
mov
xchg
loope
loopne
jmp
icebp
cmp
scas
xlat
push
mov
cmp
inc
jmp
or
push
cwtl
fcmovb
mov
sbb
adc
ja
add
xchg
aaa
ss
push
lret
jl
cmpsl
mov
addl
and
insl
mov
sti
stc
repnz
and
leave
sbb
or
inc
mov
enter
cld
and
mov
lret
cmp
repz
mov
dec
or
inc
pushf
push
push
scas
mov
fimuls
lret
inc
lods
pop
lods
xor
dec
cwtl
ficomps
cmpsl
test
imul
loopne
inc
mov
pop
mov
adc
jl
gs
sbb
outsl
outsl
arpl
shlb
cwtl
mov
bound
mov
ret
fs
push
xor
cmp
jmp
les
bound
bound
fisttpl
sbb
push
into
pop
dec
push
cs
pop
imul
cmp
jmp
mov
mov
cmpsl
push
lret
adc
lret
jecxz
lock
jecxz
loop
das
jae
cmp
or
out
push
pop
nop
pop
out
mov
pop
cmp
loope
cmpsb
cmp
out
mov
sbb
leave
and
loopne
cmp
and
pavgb
and
mov
mov
lea
pop
pop
pop
pop
outsl
mov
pop
fdivs
mov
dec
xor
fistps
roll
movsl
scas
jle
mov
rcl
lcall
xor
adc
rclb
or
pop
pop
nop
jo
mov
xchg
and
cli
mov
lea
loopne
ret
aam
jne
int
xor
xor
mov
mov
add
cmp
mov
dec
movsb
mov
cmp
or
sub
add
push
loope
mov
jmp
out
je
ret
imul
imul
inc
add
enter
call
mov
lcall
dec
stos
ds
jmp
add
cltd
popf
mov
cs
pop
arpl
cmpsl
int3
sub
pop
push
dec
cmp
in
mov
rcrl
push
out
or
xchg
mov
hlt
in
add
push
add
sub
leave
mov
mov
fisubl
add
cmp
divl
pop
loop
push
ror
nop
test
ja
push
rcrl
sub
out
add
lahf
xchg
jne
mov
int
addr16
hlt
shlb
bound
imul
scas
mov
pop
ss
adc
shll
mov
ds
jns
ds
jmp
cs
xlat
cld
aam
jae
cmpsl
dec
sbb
dec
addb
mov
inc
mov
icebp
push
cmp
xchg
neg
lods
adc
icebp
or
leave
icebp
or
jo
cwtl
xchg
stos
cli
xlat
mov
jecxz
add
fsts
mov
inc
pushl
ja
jae
lods
insb
sub
and
out
xchg
flds
mov
bnd
fadd
mov
pop
xor
pop
int3
adc
push
sbb
push
fbld
jecxz
insl
xor
mov
mov
mov
push
xchg
sub
jecxz
int
test
movsb
outsl
emms
sub
pop
sar
sti
add
gs
xchg
dec
pop
rol
xor
xchg
pop
inc
inc
enter
sub
int
orb
mov
cmp
xor
cwtl
pop
or
dec
es
pop
popf
jae
xchg
pop
aaa
xor
xor
push
sub
mov
add
adc
push
fisttpl
and
mov
mov
add
mov
inc
aad
dec
and
xchg
fscale
sbb
pop
jecxz
xor
push
mov
aad
sarl
pop
push
adc
jmp
gs
jo
push
push
iret
movsl
adc
adc
cwtl
sbb
jno
xchg
sbb
sub
out
add
mov
rcr
rcl
rorl
lods
cmp
je
sbb
jmp
imul
arpl
aad
xor
popf
in
je
or
mov
pop
dec
inc
jno
lods
in
and
inc
outsl
mov
push
dec
jmp
push
insl
in
outsb
cld
mov
mov
aad
inc
mov
cltd
fstps
pop
mov
xchg
mov
imul
mov
sahf
out
push
fcoms
adc
clc
mov
popa
iret
out
int
cmp
push
mov
cmp
mov
stos
es
loop
pop
xchg
sub
movsb
outsl
ja
xor
lret
jle
js
cwtl
mov
insl
pop
loop
lods
lahf
or
pop
adcb
and
xor
in
pop
pusha
sarl
ret
xchg
mov
mov
push
or
dec
xor
jne
xor
lcall
ret
dec
and
inc
leave
mov
nop
movsl
jl
lds
daa
xor
inc
sub
jno
inc
dec
les
inc
push
xchg
sub
jae
fcomp
jno
mov
imul
sub
cmp
mov
xchg
push
rcrb
mov
push
mov
mov
test
pop
rcl
andl
repz
mov
imul
sahf
sbb
cmp
fsubs
sbb
push
cmp
pusha
jmp
dec
sbb
aaa
pop
jmp
mov
inc
imul
mov
dec
rol
aas
cmp
loope
push
push
push
into
inc
divl
mov
stc
stc
insl
push
das
roll
sarb
fimull
xor
adc
test
aam
adc
jg
fdivs
mov
sub
cmc
loopne
mov
repz
xchg
data16
stos
mov
popa
lahf
mov
sub
lcall
lods
or
leave
iret
sbb
sub
pop
outsb
aas
mov
fcomps
dec
ret
aad
mov
inc
inc
push
imul
psubq
mov
lods
lcall
repz
and
loopne
add
mov
adc
arpl
push
aaa
in
dec
test
xor
out
cmp
ret
call
dec
dec
mov
pop
mov
sbb
dec
jae
mov
inc
push
imul
xchg
lcall
incl
xlat
cwtl
mov
cmp
xchg
dec
je
nop
dec
stc
pop
out
out
pop
pop
cmpsb
sub
mov
add
jb
ja
cwtl
fldl
fsts
cmp
fs
lret
rolb
test
sub
mov
ret
stc
dec
xor
mov
xor
rcr
jle
cmc
cld
jg
daa
pop
ljmp
pop
xchg
negb
imul
nop
mov
or
and
lcall
daa
push
shll
push
add
dec
cmp
out
inc
je
scas
sbb
sub
push
dec
in
add
add
insb
mov
addl
mov
add
xchg
scas
and
popa
imul
imul
mov
out
mov
mov
inc
hlt
or
std
fldcw
and
xchg
popa
adc
inc
in
bound
push
adc
scas
add
fiaddl
jnp
push
addr16
mov
rcll
push
arpl
adc
out
les
mov
bnd
and
mov
xor
ret
pop
out
test
mov
les
cmp
insb
sub
xrelease
test
gs
xchg
adc
js
mov
leave
mov
mov
shrb
jne
insb
data16
insl
xchg
xchg
sti
jae
jle
inc
push
jo
add
cmpsb
adc
cmpsb
mov
mov
push
out
pushf
popa
jl
push
mov
iret
mov
mov
pop
adc
notl
in
mov
add
inc
add
out
ret
xlat
repz
outsl
or
enter
dec
je
xor
fnstenv
xor
iret
mov
mov
ud2
dec
in
out
rorl
xor
pop
add
or
loop
or
mov
rorl
lret
jns
scas
pop
pop
mull
in
cmp
lock
das
adc
push
xchg
cmp
lret
test
jmp
add
push
lods
pop
pop
xchg
sub
adc
cmpsb
inc
add
sahf
aas
jmp
inc
pop
xor
push
push
pop
jnp
or
aam
in
sbb
mov
mov
mov
xchg
mov
push
add
cmp
mulb
cmpsl
xchg
jno
test
in
xor
push
xchg
ja
pop
cmpsb
mov
xor
pop
push
lea
sbb
xchg
in
int3
dec
out
cmp
xchg
fidivrs
inc
fdivl
inc
into
daa
loopne
shrb
inc
mov
adc
test
xchg
in
lock
cmpsl
xchg
or
ss
mov
fs
int
scas
fcmovnu
pop
xchg
mov
lods
add
nop
in
pusha
mov
jo
aas
call
mov
dec
mov
lods
enter
clc
repnz
imul
xchg
add
int
xor
add
jae
sbb
fmulp
jl
mov
mov
std
jecxz
das
dec
in
mov
into
into
mov
and
jl
xchg
test
cmp
cwtl
fwait
or
fisttps
jno
mov
cmp
sbb
push
test
fs
cmp
or
adc
xchg
rorl
repz
outsl
push
jo
sub
cli
idivb
or
cwtl
xchg
outsl
push
add
lods
push
leave
dec
fsub
dec
xchg
mov
cmp
xchg
add
int3
cmp
in
test
mov
test
sarl
lcall
xchg
sub
or
add
inc
adc
cmp
cmp
ljmp
test
fwait
lcall
jg
adc
cli
jb
sub
sbb
pop
movsl
jl
int3
in
dec
mov
stc
and
inc
stos
int3
imul
cmpsl
push
mov
add
xchg
out
movsl
adc
cmpsb
jl
gs
stc
sbb
and
lea
pop
push
das
add
iret
pushf
jecxz
aad
lods
pop
dec
mov
loop
aaa
pusha
or
iret
std
xor
out
pop
repnz
or
push
pop
pop
hlt
ja
ds
cmp
lcall
mov
stc
mov
leave
xchg
add
push
or
push
pusha
cltd
xchg
jp
lahf
push
testl
cmc
xlat
add
in
jmp
cwtl
xchg
out
or
jp
ljmp
loopne
jae
dec
lds
push
sub
into
sub
push
cmp
enter
add
xor
mul
popf
popf
xchg
jmp
arpl
mov
movsl
mov
sub
dec
aad
das
in
sub
adc
in
scas
scas
push
lds
mov
test
out
ret
int
mov
ret
inc
and
ja
xor
jo
pop
lock
fwait
dec
nop
aad
lock
ss
addr16
popa
fdivrs
cmc
sbb
inc
cli
and
out
imul
or
cmc
push
dec
sbb
push
pop
jae
xchg
mov
mov
push
ljmp
sub
inc
fs
enter
push
cmc
mov
adc
fs
adc
scas
mov
repnz
jne
inc
inc
adc
scas
dec
mov
adcl
push
inc
inc
adc
mov
iret
call
sub
adc
push
dec
xor
push
test
dec
adc
sahf
enter
cmp
add
pop
cltd
push
nop
xor
adc
sbb
movsl
jno
push
xchg
fisubrs
push
mov
xor
push
pop
inc
inc
call
cmp
sbb
and
jmp
push
dec
inc
fbld
inc
and
xchg
add
add
ja
sub
das
pxor
rcrb
leave
sub
and
xor
adc
cmp
pcmpgtb
sbbb
orb
lret
loopne
or
scas
mov
or
test
lods
std
jo
sub
cmp
lahf
ja
lods
daa
dec
adc
mov
push
bound
push
les
fdivs
test
pushf
pop
inc
add
loopne
jbe
data16
sub
mov
out
movd
test
pushf
jnp
cmc
pop
xchg
add
sbb
aam
jmp
mov
xchg
arpl
xor
ret
ret
sbb
xor
push
mov
inc
cmp
mov
xor
test
sbb
fsubrs
lret
push
dec
cli
test
xchg
and
mov
sub
add
repnz
daa
push
rcrl
xchg
mov
fnstcw
pop
adc
pop
lcall
gs
cltd
aaa
pusha
mov
mov
vshufps
pop
push
jmp
ret
sub
jmp
shl
mov
push
jo
or
inc
hlt
je
cmp
mov
les
clc
dec
in
mov
mov
test
dec
addb
dec
push
cmpsb
adc
xor
test
mov
cmp
shlb
lahf
or
shll
jp
sahf
int
inc
imulb
fcompl
mov
jmp
and
cmp
int
aad
int3
clc
js
je
pop
leave
push
sti
loope
shrl
or
sti
sbb
test
jmp
inc
mov
jne
adc
lock
xchg
jl
mov
pop
xlat
inc
push
xor
pop
dec
xor
cmp
int3
xchg
sbb
mov
mov
rol
xchg
inc
lcall
loope
pop
xor
push
sub
mov
mov
sbb
mov
ret
push
stos
push
lods
inc
cmp
pop
sbb
jg
xor
stos
pop
mov
cmp
push
jmp
ljmp
sbb
dec
mov
jle
pushf
ss
xor
pop
outsl
mov
push
sub
lret
imul
mov
jp
push
inc
xlat
insb
mov
lods
adc
mov
mov
xlat
adc
and
xor
xchg
cmp
out
insl
xchg
jg
pop
ret
xchg
cld
mov
test
es
jg
sub
or
lods
jge
cmp
cmc
mov
mov
mov
aam
cmp
cmp
cmp
inc
push
fldl
test
adc
out
cmp
or
pop
popf
adc
fs
sub
aad
sarl
jne
mov
xchg
scas
sbb
stos
mov
cltd
filds
xor
daa
gs
notb
pusha
xchg
loop
or
push
push
int
sub
dec
xor
inc
fs
aad
mov
js,pt
rorb
imul
xchg
add
stos
dec
add
push
pushf
fmuls
dec
adc
fidivl
jmp
push
je
out
loopne
addr16
stos
jnp
fstps
cmpsl
push
mov
in
sar
test
mov
jp
imul
mul
lods
sub
jle
jo
popa
mov
xchg
imul
sub
push
dec
lret
fdivrl
nop
sub
clts
cwtl
lods
or
fidivs
es
jp
imul
or
or
mov
mov
mov
lods
fistpll
push
mov
mov
push
cmc
jno
inc
push
cmpsl
mov
ret
into
push
push
test
cli
push
adc
out
sbbb
daa
mov
cmpsl
mov
sub
jg
out
inc
inc
xchg
pop
std
push
test
fwait
pop
insl
xor
insb
lcall
mov
xor
push
mov
orl
and
xchg
mov
insb
das
movsl
lods
dec
cmpsb
dec
mov
int
ss
int
stos
sahf
xor
roll
leave
or
cmp
hlt
fcompl
out
lcall
in
xchg
std
in
fildl
bound
rol
hlt
jnp
in
cs
jno
mov
xchg
adc
add
mov
xlat
lret
and
sub
fdivl
xorb
addr16
xor
lret
mov
push
add
cmp
stos
negl
popa
rcrl
lcall
pop
das
mov
or
fadds
fsubrs
and
daa
subb
lock
cltd
popa
add
jo
xchg
das
xchg
xchg
cmp
mov
mov
ljmp
ds
push
pop
xor
push
loope
mov
adc
sbb
popa
lahf
outsl
cmp
add
arpl
cmpb
bound
stos
jbe
fildll
das
push
xor
fimull
std
out
or
add
mov
jb
sbb
adc
das
out
lcall
mov
dec
push
movsb
std
adc
mov
imul
mov
inc
push
fsubrs
mov
out
iret
into
xor
pop
repz
jae
into
add
fcmovnbe
xor
repnz
pop
sbb
or
fnstenv
fs
cmc
jae
or
les
push
subl
in
dec
cli
inc
or
js
rcrl
cltd
mov
mov
and
mov
jb
popa
add
push
scas
out
jbe
push
test
test
push
mov
ficoml
xor
jns
jbe
and
or
out
fiadds
mov
or
movsl
and
outsb
mov
out
xorl
stc
inc
mov
ret
sub
mov
mov
mov
sbb
or
xor
and
cmp
sbb
cltd
enter
js
add
push
adc
jle
movsl
adc
insb
mov
test
aas
in
push
xchg
jl
sbb
push
loop
gs
mov
mov
inc
daa
xor
jmp
std
or
rcl
adc
and
or
lcall
addl
insl
adc
adc
mov
mov
repz
fisttpll
mov
fwait
pop
stos
test
arpl
xchg
das
pop
lods
nop
inc
das
sbb
rcll
movsl
dec
popa
mull
pop
or
fcmovnb
push
fistpl
rdpmc
in
and
push
mov
jmp
or
lret
ljmp
enter
cmp
mov
into
imul
daa
fwait
imul
hlt
fstps
inc
mov
movsb
sbb
mov
dec
mov
or
rol
dec
pop
cmc
repz
push
stos
cmpsl
js
and
pop
and
sbbl
or
mov
mov
subl
das
mov
jne
jnp
call
loop
inc
inc
pop
pushf
adc
sbb
inc
bound
mov
insl
xchg
rolb
adc
xor
jecxz
mov
pop
pop
or
jbe
sbb
push
out
jmp
mov
jle
aas
aam
leave
mov
add
jb
cmp
lcall
pop
and
stos
xlat
fldt
test
push
insl
stos
es
enter
mov
cmpsl
mov
sbbl
addr16
sub
add
sub
lahf
adc
sub
dec
push
ret
adc
lea
cmp
xchg
mov
les
push
mov
lock
mov
pushf
in
jmp
fstl
outsl
jge
jns
sbb
dec
mov
mov
cmp
loop
mov
and
jno
add
loope
sub
jmp
mov
popf
adc
icebp
push
inc
insb
fs
call
push
aaa
dec
push
push
popa
out
mov
push
xor
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
ljmp
push
mov
lcall
adc
sbb
or
lcall
in
and
shlb
mov
shlb
mov
shlb
mov
into
mov
xchg
push
xchg
cmpsb
mov
stc
int3
jbe
test
fidivrl
ret
inc
jnp
fsubrl
roll
add
xchg
xchg
int3
xchg
jae
push
ret
das
pop
lret
lcall
je
inc
orl
fmull
test
int3
jg
inc
movsl
mov
adc
or
loopne
push
mov
jbe
xor
shrl
lcall
mov
mov
ret
dec
mov
xor
and
and
pop
cmpsb
out
jg
mov
inc
ljmp
ljmp
test
orl
lahf
mov
mov
test
push
das
jae
mov
ret
lcall
out
adc
mov
sahf
lahf
mov
mov
rorl
ret
lcall
call
ret
lcall
in
daa
sbb
mov
lcall
in
and
shlb
mov
ret
sbb
and
and
shlb
mov
shlb
mov
rcr
lcall
movsb
and
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
out
cmpsb
loop
mov
mov
shlb
push
cmpsl
xor
jb
addl
mov
and
mov
rolb
lahf
out
push
mov
shlb
mov
rclb
lahf
mov
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
mov
shlb
int3
pushf
out
xor
lahf
lahf
mov
je
ja
stos
sbb
inc
imul
jnp
lahf
dec
lea
sbb
lea
popa
mov
push
mov
aad
push
xchg
dec
pop
nop
jo
ds
lds
pop
mov
add
cmpsb
fisubrs
push
inc
test
ret
test
in
push
push
das
mov
jl
ljmp
and
mov
fidivl
sub
mov
outsb
inc
lcall
test
sbb
pop
sarb
sahf
push
imul
cs
mov
push
dec
pop
xchg
and
xor
dec
adc
cli
pop
daa
ss
xchg
and
mov
inc
mov
jno
fs
aaa
inc
jle
jl
mov
cld
xor
mov
je
dec
xchg
pushf
push
mov
hlt
fisubrs
fs
lods
mov
pop
mov
fwait
imul
leave
jle
cmp
fiadds
cmpl
pop
xor
inc
sbb
gs
dec
bound
jp
push
iret
xchg
bound
add
aad
addr16
mov
sbb
sub
and
daa
pop
xchg
pop
popa
jmp
fldl2t
je
in
cs
mov
outsl
push
inc
bound
loopne
fdiv
sbb
stos
mov
xchg
mov
cld
sbb
popf
push
jbe
into
sub
jmp
mov
imul
test
mov
or
fdivrs
add
and
orb
and
lret
divb
ficompl
stos
ss
sbb
iret
mov
dec
mov
inc
out
pop
jp
stos
mov
push
dec
jp
dec
ficompl
das
negl
or
imull
clc
push
sbb
inc
push
shl
stc
rcll
mov
jno
push
adc
adc
insb
pop
pop
pushf
xchg
inc
rolb
loope
cli
faddl
mov
sbb
hlt
fs
inc
shlb
out
sub
xchg
jecxz
cltd
sti
inc
arpl
adc
xor
inc
pop
std
icebp
cmp
add
sub
iret
mov
inc
jmp
ss
jg
push
popa
and
sbb
dec
pop
cmpsb
push
mov
bswap
push
pop
jmp
sub
fcompl
inc
gs
sub
aas
add
mov
or
shll
dec
and
xlat
lret
cmpsb
push
adc
or
insl
mov
icebp
inc
shl
cmpsl
cwtl
mov
pop
xor
inc
sbb
jmp
mov
movsl
mov
les
outsl
mov
popf
jle
aaa
xchg
add
inc
xchg
adc
les
mov
push
pop
cmp
cmp
sbb
mov
sbb
xlat
xor
pop
push
daa
dec
aaa
sbb
int
inc
repnz
call
push
push
pop
pop
inc
mov
rol
pop
or
cmp
pop
adc
cmp
cmp
pop
pop
mov
sub
enter
and
adc
jp
sub
enter
sub
cmp
js
jnp
jb
sub
xor
rol
push
push
jge
push
pop
sub
and
push
sbb
sbb
jae
push
xor
dec
rorb
pusha
inc
add
loop
dec
js
outsb
xchg
inc
push
xlat
mov
shlb
arpl
into
lea
std
mov
mov
xor
mov
push
jne
int3
enter
push
cld
xor
pop
pop
fsubrs
and
jmp
adc
loop
dec
leave
inc
cmp
out
sub
jo
repnz
test
sbbb
cmp
inc
mov
pusha
aaa
repz
lods
push
repz
or
mov
sub
pop
sbb
fwait
mov
xor
scas
fmul
and
rsm
adc
ret
inc
je
xor
ds
jo
fisubrl
loope
pushf
lcall
lcall
mulb
sbb
pop
fiadds
push
fnstsw
or
cmpsb
stc
xchg
cmp
fldcw
int3
xchg
add
dec
or
std
mov
jb
jae
repnz
test
sarl
inc
daa
push
lock
ret
stos
push
or
mov
mov
mov
fimull
cld
add
xchg
das
cmp
push
adc
dec
push
scas
sub
push
mov
cltd
xchg
cli
add
jmp
pop
mov
inc
decb
add
adc
jne
fstps
mov
incl
cmp
int
mov
rorb
sub
mov
call
and
fbld
or
sahf
xchg
ja
inc
jle
and
jnp
xchg
lds
inc
out
ret
out
mov
sub
pop
test
fs
enter
sbb
or
lcall
sbb
lea
fs
adc
jmp
or
fnstsw
das
xor
cmpsb
lock
int3
icebp
aad
inc
mov
cmp
xchg
in
dec
das
int3
ljmp
movsl
cmp
jmp
mov
xor
cmp
pushf
dec
mov
add
sbb
mov
rcl
push
jl
loop
or
rorl
push
sub
mov
sbb
add
aas
jae
xor
andb
adc
pop
sbb
jnp
bound
mov
cmpsb
dec
or
push
lcall
jecxz
fsubrl
loope
jp
shll
sub
lret
popa
mov
clc
bnd
jnp
scas
std
push
xchg
test
push
dec
loop
pusha
lods
fwait
jnp
imul
pop
xchg
shlb
or
rorl
loop
inc
cmp
push
scas
or
inc
icebp
push
out
roll
jp
popf
pusha
or
or
xor
sbb
lcall
jp
test
or
xchg
clc
mov
add
mov
cli
cwtl
push
mov
out
sahf
cwtl
shrb
xchg
and
xchg
cmp
dec
stos
push
ja
test
aad
sub
adc
shlb
loope
mov
aaa
add
std
pushf
cmpsl
sub
lret
cmpsb
das
ljmp
mov
movsb
cltd
mov
jb
insl
pop
add
jnp
inc
xor
mov
decb
jb
dec
outsb
test
ljmp
outsl
arpl
arpl
insb
jnp
ds
and
cmp
lock
add
mov
and
idiv
int3
das
stos
and
mov
ljmp
mov
xor
js
pop
cmp
int3
inc
insl
bound
lcall
out
or
out
enter
leave
xor
rcl
dec
and
dec
inc
jge
push
jge
cmpsb
aam
call
sub
xchg
out
xchg
aaa
sbb
aad
stc
icebp
cmp
adc
mov
and
scas
fiadds
inc
call
int3
mov
push
call
adc
loopne
int
iret
jno
mov
mov
cmp
pop
dec
sub
mov
shlb
adcl
adc
pop
scas
sbb
lea
dec
lea
mov
or
xchg
cli
inc
in
iret
divb
dec
je
ljmp
add
xchg
add
inc
in
clc
dec
inc
stos
xchg
jbe
xchg
add
xor
test
and
dec
cmpb
cs
sub
fisttps
jbe
push
mov
ja
pop
insl
lods
push
test
jecxz
lret
fisubl
xor
sahf
and
cmp
sbb
xor
mov
call
cld
fnstenv
xchg
inc
movsl
pop
mov
xor
jle
or
add
ljmp
sbb
sub
mov
sub
jne
lcall
fiadds
int
and
pop
inc
aas
jne
adc
mov
inc
sbb
sbb
jbe
popa
hlt
nop
pusha
cmc
call
adc
xor
sub
fldt
mov
ret
cmp
test
xor
mov
and
loop
xchg
and
add
lret
and
jne
add
dec
pop
xor
mov
push
addr16
add
popf
xlat
push
add
fidivs
arpl
jecxz
cmpsl
pop
ljmp
push
xchg
sbb
mov
add
in
mov
pop
enter
or
cmp
clc
lock
push
test
push
aad
repz
in
or
adc
push
cli
and
sti
sub
lods
adc
arpl
xchg
call
outsb
cmp
arpl
dec
and
popa
ljmp
lea
jbe
jno
loop
cmc
mov
ss
lret
xlat
dec
fldcw
loope
mov
cli
xchg
test
jecxz
repnz
in
cmpsl
inc
cmp
in
dec
jge
push
es
push
push
std
sbb
fisttpl
ud1
int
enter
js
movsl
jne
xlat
sub
loope
ret
into
mov
pop
aad
pop
inc
mov
nop
adc
dec
mov
cwtl
inc
sub
movl
lahf
mov
leave
decb
imul
xchg
imul
pusha
nop
in
mov
les
dec
sbb
sahf
sub
jns
dec
dec
out
xrelease
bound
sbb
and
movsl
push
sbb
cmpsb
mov
sbb
movl
mov
lret
push
in
lahf
sub
aas
pusha
jp
or
mov
sarb
cmc
add
sub
lock
jl
mov
jno
fimuls
cmp
pop
dec
cwtl
aam
xchg
mov
push
mov
inc
bound
mov
push
xchg
inc
cmp
mov
pandn
xchg
mov
or
mov
in
or
outsl
sbb
pushf
push
insl
push
cmpsb
lret
fidivrs
adc
lea
inc
stc
xor
push
sbb
fnsave
pop
mov
and
xchg
mov
xor
shrl
mov
inc
sbb
mov
mov
mov
push
pop
testl
decl
stos
pop
or
jno
out
subl
mov
rcrl
sti
js
xor
push
cmpsl
push
cli
dec
xor
and
js
xchg
sub
mov
xchg
roll
push
dec
push
mov
xor
jmp
xor
lods
frstor
clc
mov
push
popf
in
ds
push
mov
inc
mov
int3
pop
in
mov
xor
and
mov
ret
mov
inc
sbb
mov
hlt
in
push
xchg
cmp
call
inc
aas
repz
int
stos
sbb
fld
aas
mov
aaa
shl
test
out
out
jne
pusha
loope
call
sbbb
js
js
pop
pop
cmpsb
int3
ss
lret
lock
adc
addr16
and
cmpsl
imul
jle
popf
inc
mov
lds
push
popf
jae
dec
push
pushf
xchg
mov
mov
rclb
addr16
jg
std
movsl
clc
xor
pop
cmpb
jle
xchg
bound
jne
fimuls
jmp
mulb
data16
dec
jo
sub
jbe
inc
lret
and
mov
call
xchg
xchg
push
or
adc
jae
xor
shll
inc
idivl
in
push
pop
movsb
test
rorb
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
