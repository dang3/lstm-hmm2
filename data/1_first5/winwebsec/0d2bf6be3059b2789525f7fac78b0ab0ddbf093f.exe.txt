inc
inc
xor
mov
sbb
mov
push
stc
dec
out
sar
das
mov
jo
shll
movsb
sti
and
add
sbb
call
jbe
or
jmp
xchg
sarl
push
sbb
arpl
mov
sub
sub
fnstenv
sub
aas
sarb
inc
call
das
and
in
cmpsb
test
add
arpl
pop
sbb
test
ljmp
dec
jo
inc
sbb
mov
jmp
mov
push
jmp
cmp
cmp
pop
lahf
ja
sarb
call
add
xor
rcl
adc
push
mov
mov
dec
jp
test
out
rorb
je
int
je
xor
iret
jmp
inc
jbe
arpl
cmp
iret
bound
test
and
jnp
xchg
das
jb
insl
mov
inc
inc
push
xor
push
jno
out
cmp
sarl
and
mov
jmp
mov
lcall
push
xchg
or
jne
sub
sub
jle
pop
dec
xchg
mov
xchg
inc
cmc
pop
out
fwait
popa
iret
in
fists
bound
dec
mov
lods
mov
aas
mov
ljmp
shl
sbbb
or
push
push
sbb
mov
lret
mov
xchg
sar
adc
push
insb
pop
popf
addr16
icebp
int3
aas
imul
in
sub
push
sub
stc
repz
sarl
lret
dec
jmp
add
jnp
aaa
bound
inc
loopne
sbb
sub
stc
dec
roll
inc
out
rcrb
adc
das
jge
cwtl
pop
push
into
mov
sti
lea
scas
jg
push
and
addr16
mov
js
popf
mov
and
ret
pop
cmpsb
push
das
push
or
or
subb
js
jne
add
pop
in
xor
jp
ret
xchg
inc
sub
add
pop
cmp
rcrb
or
xor
inc
inc
adc
dec
popf
mov
mov
push
mov
cli
aam
cmp
sub
sbb
or
pop
cmpsl
arpl
hlt
mov
ljmp
cmp
mov
cs
cmpb
jne
mov
dec
nop
sbb
mov
jne
minps
add
xchg
scas
popf
mov
mov
jbe
cmp
sub
cmc
jae
stc
divl
aad
sub
aam
xchg
cltd
je
cmovnp
adc
jae
leave
popa
xchg
jbe
and
or
xor
push
jb
call
mov
mov
test
cli
jbe
mov
sbb
ret
sub
adc
and
test
ds
sbb
ret
lods
pop
das
inc
imul
movsl
aad
shl
pop
stos
ret
fisttps
jnp
xchg
neg
shlb
loopne
mov
sbb
add
fcomp
mov
leave
cltd
push
xchg
cltd
in
das
rorb
dec
scas
xchg
scas
inc
mov
xor
std
adc
outsb
jbe
fs
repnz
pop
mov
sbb
icebp
push
pop
test
in
mov
mov
cmpsl
adc
jbe
lcall
js
cli
xchg
imul
add
sti
pusha
les
cmp
adc
pop
lock
psubd
into
in
cld
xlat
scas
mov
sub
loope
imul
mov
cmpsb
adc
inc
adc
rorb
inc
xchg
cmc
or
sub
fwait
mov
mov
push
aad
int3
jge
jg
dec
xchg
push
pop
pop
addr16
call
ss
sub
pop
push
lock
mov
cmp
repnz
jge
ja
out
or
js
push
aas
pusha
cwtl
lret
cmpsb
psllw
pusha
xchg
mov
das
movsb
popa
dec
jmp
popf
test
repz
int3
negl
test
call
shll
sbb
mov
and
dec
cmp
sbb
add
mov
mov
fidivs
rclb
or
imul
push
push
aas
aas
stos
shrl
fidivs
sarb
lcall
push
ljmp
inc
pusha
dec
es
in
rclb
push
ficoms
es
roll
dec
das
lret
dec
jecxz
jnp
sbb
stos
xchg
add
cmp
cmpsb
hlt
adc
and
fstpt
popa
xchg
in
and
push
xor
add
into
leave
outsl
inc
push
lods
jb
or
dec
pop
dec
dec
push
sub
sbb
test
loope
mov
sbb
xor
cmp
mov
jno
mov
imull
imul
ror
and
mov
pop
jmp
sbb
cmp
pop
bound
mull
jbe
sbb
popa
xchg
push
cli
mov
out
imul
orb
js
cmp
jp
fldenv
movsb
push
xchg
in
sahf
sbb
mov
and
fistps
sub
jns
push
inc
xchg
call
cmpsb
xchg
xorl
filds
xor
inc
hlt
xor
mov
mov
ja
jecxz
mov
test
js
popf
aas
mov
lds
gs
xchg
sbb
xlat
lea
ja
cmp
adc
adc
xchg
cltd
push
jns
pop
add
pushf
dec
data16
pop
push
pop
add
test
pop
or
mov
data16
rcr
int3
cmp
stos
incl
jo
cmpsl
jno
xlat
fcoms
inc
xchg
lea
adc
pop
add
mov
dec
or
mov
enter
cmp
jp
cmc
jge
fists
or
hlt
xor
xchg
add
in
dec
loop
scas
xchg
lds
and
and
ret
jmp
add
add
mov
cli
and
push
mov
loope
pushl
sub
sti
mov
jl
cmp
sub
dec
jmp
cli
outsl
mov
in
addl
mov
inc
inc
inc
and
mov
mov
insb
ja
adc
mov
shll
scas
add
pop
in
xchg
pop
adc
lock
pop
xchg
xchg
add
add
repnz
mov
pop
sub
test
imul
sti
and
js
cmp
adc
jg
mov
cwtl
add
sub
xchg
mov
fistps
adc
mov
ja
xchg
mov
mov
dec
mov
push
xchg
loopne
out
xchg
repz
pop
or
scas
out
cmc
push
arpl
lods
lahf
dec
sub
xor
movsl
jg
aad
cmpsb
cs
orb
or
fstps
xor
insb
fs
or
out
mov
mov
sbb
add
pop
inc
aas
fs
fucomp
out
lret
addl
fsts
imul
push
pop
insl
enter
mov
mov
int3
inc
inc
loop
cmc
pop
fidivrs
inc
mov
mov
mov
lret
mov
repz
mov
mov
mov
sub
in
mov
popa
pop
cmp
stos
sub
push
out
fcoms
jl
rcl
xchg
and
cmpsb
enter
xchg
inc
xor
and
nop
or
pop
fwait
out
std
in
dec
xchg
push
cwtl
mov
es
movsl
xor
push
ja
dec
repnz
fwait
pusha
loopne,pn
pop
pop
cltd
fsubrs
aaa
jmp
cmpsl
lock
ja
das
lock
pop
push
adcb
bsf
mov
adc
dec
pop
outsb
xor
stos
xchg
mov
push
cmp
shll
testb
out
aad
sbb
lret
dec
mov
call
xor
jle
sub
push
sbb
xor
ret
mov
rcrb
data16
xchg
mov
cmp
jns
xchg
testl
pop
push
ja
mov
test
fs
icebp
lahf
movsl
push
inc
dec
loope
mov
jb
push
cmp
sbbb
out
push
call
fisubrl
aam
fyl2xp1
js
aad
cmc
inc
xchg
setle
stc
push
jnp
cmpsl
and
loope
pop
jecxz
pop
int3
xchg
loop
dec
imul
jne
cmp
imul
in
dec
aad
cwtl
out
jae
shl
adc
dec
cmpl
xchg
pusha
cmc
loope
and
jb
mov
jnp
outsl
dec
and
repz
cmp
push
inc
loop
ret
lcall
rorb
pop
sbb
add
fwait
addr16
gs
sahf
jp
xchg
xchg
stos
jnp
cmpsl
outsl
and
fstpt
test
jmp
xor
mov
fs
hlt
jo
in
imul
fstpt
fwait
jne
or
pop
sahf
lods
fsubl
sub
dec
js
insb
dec
rolb
sbb
clc
shl
addb
pop
and
jmp
lea
dec
inc
gs
sbb
push
aaa
mov
mov
xor
test
ror
inc
cwtl
mov
ret
insb
mov
arpl
push
or
ds
loopne
cmp
cltd
aas
xchg
enter
mov
sti
icebp
xor
frstor
sbb
add
movsl
mov
insl
mov
push
xlat
push
cmp
dec
mov
xchg
in
jne
mov
aad
push
push
jbe
out
push
push
jmp
add
push
inc
inc
sub
cmp
jge
jle
mov
sub
pop
and
out
call
test
jecxz
lods
fwait
and
cmp
lods
push
les
int3
in
rolb
mov
inc
push
icebp
jmp
call
push
pop
or
divb
mov
inc
ret
sbb
scas
jp
cmp
mov
and
xchg
lahf
jb
arpl
fstp
aam
pop
mov
add
cs
pop
inc
hlt
fs
xor
push
enter
popa
shrl
mov
mov
push
je
cmp
test
push
insb
lods
push
daa
inc
je
pop
pushl
imul
pushf
or
icebp
aas
rcrl
stc
cwtl
cmp
repz
cmp
movb
pop
jno
test
sbb
lods
loop
enter
clc
inc
or
mov
ret
mov
pop
push
sahf
inc
leave
inc
mov
stos
aam
test
leave
or
add
ss
int
ficoml
lods
ja
lret
in
pop
repnz
cmpsl
cmp
push
push
cld
dec
stos
pop
aad
mov
jl
out
ss
es
adc
stc
jno
add
cmp
jmp
jnp
push
je
mov
mov
test
push
sbb
xor
cwtl
cmp
push
inc
xchg
push
lcall
fs
imul
push
cli
sub
pop
push
push
jle
cmc
rcl
add
mov
mov
fsubrl
xchg
out
xor
rolb
shlb
lods
sbb
push
lock
lcall
cmc
sarl
mov
mov
or
sbb
shrl
inc
dec
mov
sbb
mov
lea
into
insl
mov
or
jle
pop
shrb
fldl
outsb
add
fwait
ljmp
in
fimull
imul
lahf
sbbl
fstpl
stos
pusha
stc
inc
mov
pop
dec
push
and
lock
mov
out
sarl
mov
sub
fldcw
punpckhdq
xchg
daa
add
push
icebp
fcompl
roll
test
dec
shlb
and
leave
adc
xchg
cs
mov
mov
ljmp
lret
shl
pop
sub
add
aas
inc
pop
icebp
test
pop
in
jmp
call
js
popf
std
ss
mov
sub
loope
or
sarb
pop
int
in
add
cmc
mov
pop
xor
jp
push
push
mov
lret
stc
adc
jp
pop
and
adc
cmpsl
loope
fldpi
xchg
dec
ret
gs
loope
push
sbb
push
mov
leave
hlt
lret
add
push
arpl
mov
call
and
xchg
out
xchg
xor
jmp
sbb
xor
lods
pop
clc
dec
pusha
dec
mov
push
xchg
xor
jbe
sub
lret
imul
mov
fwait
shrl
pop
sub
inc
ret
and
push
mov
test
stos
pop
lcall
repz
xchg
sub
sub
mov
jns
xchg
sub
and
rclb
rclb
js
mov
and
adc
aaa
imul
cmp
push
inc
inc
bnd
mov
push
inc
xor
dec
mov
lret
lahf
add
sub
mov
add
cmp
sarl
pop
jae
inc
and
inc
and
jl
xchg
xchg
js
pop
sub
jp
pop
push
iret
mov
inc
jecxz
fcmovb
push
int3
in
fs
fdivrl
popf
testb
cli
pusha
das
cmpsl
mov
push
and
inc
pop
mov
rcr
mov
jle
hlt
aas
sub
fwait
sub
sti
ret
subb
and
es
pop
fsts
lds
clc
imul
mov
in
jp
cld
in
sub
repz
fdivr
popf
and
inc
add
push
xor
xchg
lock
fmul
fistl
mov
ja
in
mov
pop
leave
xchg
inc
mov
lock
into
cmc
jns
push
pop
repz
insb
mov
sbb
jl
sub
into
jo
jl
and
mov
js
sbb
mov
loope
mov
popf
push
aam
pop
ds
cmc
imul
movsl
in
in
nop
push
out
shrb
or
pushf
push
push
fdivrl
aad
sahf
jnp
ss
adc
rcrl
lea
xor
cmpsl
imul
push
cmp
leave
xchg
or
outsb
in
or
push
mov
rclb
pop
xor
in
test
rol
pop
cmp
cmpl
mov
mov
sbb
jle
popa
pop
cli
fbld
xor
and
stos
clc
data16
sub
inc
testb
je
std
push
dec
inc
mov
and
ret
xlat
fcompl
inc
in
sbb
push
inc
mov
jns
stos
orl
lods
cmpb
in
push
add
fmull
cs
mov
arpl
sub
cli
ret
mov
lock
mov
jb
add
in
add
mov
fidivrl
mov
and
fdivrl
cli
stos
pop
mov
rol
fldt
dec
iret
sbbb
jmp
push
insb
mov
fbld
stc
and
stc
cmp
pop
leave
mov
mov
je
cs
stos
or
dec
xchg
pop
inc
mov
aas
jmp
xchg
mov
outsl
inc
mov
repz
enter
mov
push
xor
out
insl
jle
stos
test
mov
add
jmp
jg
daa
dec
mov
pop
push
stos
sbb
testl
je
rclb
test
xor
pop
movsb
pop
inc
push
fisttpl
xchg
jae
psubw
and
or
or
xor
hlt
fiadds
int3
es
aad
fisttps
push
data16
inc
inc
mov
pop
lods
xchg
jnp
lcall
pop
lods
subl
ss
push
xchg
ret
xchg
or
hlt
xor
cmp
shrb
cmp
and
mov
xor
adc
or
mov
out
dec
js
sarb
jmp
xor
mov
sub
xor
dec
js
outsl
mov
pop
ss
jmp
cmp
pop
fildll
imul
push
icebp
push
out
add
inc
icebp
out
xchg
mov
and
cltd
daa
cmpsb
sbb
icebp
aas
or
or
pushf
into
jae
es
jmp
jno
scas
dec
test
sahf
inc
pusha
test
stos
repz
add
cs
insb
aas
and
xchg
dec
stc
dec
fidivrl
and
loopne
aad
sub
xchg
and
or
push
pop
cmc
stc
popf
pop
loope
pushf
dec
shl
repz
add
sub
mov
mov
xor
imul
pmaxsw
lret
pop
test
pmaxub
mov
mov
mov
nop
lock
stos
inc
jbe
loope
and
and
cld
sbbb
sbb
dec
push
mov
jo
shr
xchg
in
scas
or
ja
cmpl
mov
ret
push
ret
dec
mov
pop
cs
inc
pop
push
jmp
jno
mov
pop
outsl
imul
icebp
sar
jnp
or
insl
push
shlb
adc
rcrb
xor
in
mov
mov
cld
push
rorb
cmp
pushf
lcall
or
mov
mov
into
xchg
lea
dec
jo
dec
and
jb
mov
pop
inc
cmp
mov
jne
stos
test
lds
jns
imull
or
lock
jmp
xchg
mov
cmp
inc
pop
shlb
negb
ja
loopne
mov
mov
in
pop
mov
stos
clc
pop
in
and
lahf
dec
adc
push
and
orb
mov
mov
out
jl
mov
adc
jae
mov
xchg
mov
sub
in
lods
dec
fisubrs
push
xchg
mov
and
gs
push
cmc
sub
add
orl
ds
jae
cmc
dec
icebp
pop
stos
adc
icebp
mov
es
les
cmpl
adc
outsb
pusha
sub
sub
mov
lret
ret
idivb
sbb
inc
fwait
loop
adc
int
rcrl
jl
sbb
nop
cmp
cmp
adc
jg
loopne
stos
popa
xchg
lods
push
mov
ss
xor
pop
cmp
add
push
mov
fsubs
xchg
mov
addl
pop
out
divb
mov
fwait
test
inc
mov
inc
jo
add
lds
push
in
xor
es
test
out
xorl
divl
ds
mov
xorl
dec
pusha
inc
sbb
dec
adc
dec
mov
fld
dec
cmp
call
jmp
shrl
imul
mov
ret
test
rolb
movsl
dec
in
or
repnz
lock
cmp
sbb
sbb
fldt
mov
les
and
jecxz
mov
jne
fsubrs
int
fdivrs
jne
mov
cmp
cltd
pop
push
idivb
outsb
negw
jne
adc
jg
and
dec
mov
out
movsb
test
sarl
cli
jo
mov
mov
inc
mov
xor
aad
xchg
je
pusha
ret
and
lret
bound
mov
pusha
adc
push
jl
xchg
mov
mov
dec
lahf
pushf
test
sti
push
dec
mov
lock
xor
dec
repnz
mov
add
sbb
inc
push
sub
out
push
lret
mov
inc
or
cmp
leave
or
or
sbbb
add
pop
pop
outsl
sub
mov
jg
pop
jp
mov
dec
xor
push
inc
sbb
lods
pop
movsl
cli
shrb
xlat
aas
add
or
lahf
int3
mov
inc
push
orb
pop
sbb
enter
dec
xor
and
add
adc
lahf
das
cmp
xor
push
push
test
cmpsb
mov
icebp
sub
push
pop
push
cmp
mov
mov
sub
push
shl
cmp
add
fwait
xchg
push
xchg
loope
popf
popf
cmpsl
jno
fwait
sub
pushf
xchg
push
ret
sarb
popa
call
mov
into
ss
out
lds
insb
test
aam
xor
mov
movb
call
or
inc
jl
in
mov
sub
adc
push
das
lahf
mov
xchg
lods
ljmp
sub
add
jo
aas
popa
dec
cmp
inc
jmp
and
fsubrl
loope
outsb
pop
adc
gs
pop
lcall
test
add
pusha
imul
scas
out
xchg
cmpsl
mov
or
mov
sub
cli
mov
xchg
shrd
dec
les
sbb
mov
jbe
rcr
fstps
ror
lahf
cmc
lahf
push
shlb
popf
test
test
xor
inc
jle
fs
lahf
or
sarb
imul
jns
add
test
xchg
sub
mov
loop
dec
movsb
push
xchg
mov
nop
repz
repnz
ret
pop
ret
or
in
stc
sub
push
stos
stc
stc
mov
jmp
xor
and
add
fs
push
shrb
es
pop
xchg
out
pop
dec
dec
lea
sub
push
leave
cwtl
fiadds
int
inc
test
jge
or
sub
iret
loopne
mov
jo
inc
jne
sub
fcomps
sub
xchg
xor
lret
aas
mov
sbb
in
ds
lods
popf
push
out
mov
enter
xchg
jp
andb
rcrb
push
inc
cwtl
inc
test
mov
mov
mov
jno
test
test
push
xchg
jecxz
jnp
push
cmp
mov
mov
push
dec
mov
sub
sub
dec
imul
in
xchg
and
iret
mov
daa
mov
sub
pusha
inc
and
sti
pop
xlat
divb
push
adc
jmp
enter
loope
imul
push
push
push
and
loope
mov
or
call
xchg
cmp
cmp
or
mov
dec
scas
mov
xor
cmp
mov
into
dec
or
add
xchg
fistpl
ret
sbb
add
push
sbbb
iret
mov
leave
mov
jge
das
cmp
imul
ljmp
icebp
jae
add
push
mov
jae
cmp
mov
mov
stos
adc
xchg
test
imul
mov
inc
bound
rol
jnp
push
into
dec
sbb
idiv
lret
fsubrs
xchg
hlt
sahf
or
les
in
int
mov
cmp
lds
and
jne
movsl
int
adc
bound
fwait
inc
push
shll
sub
out
push
pop
dec
jae
data16
stos
cmp
out
jle
inc
int3
pop
addr16
xchg
pop
mov
mov
mov
mov
inc
shrl
aas
push
outsb
sbb
lea
cwtl
fnstsw
bound
fisubs
ja
out
bound
test
ds
sub
mov
xor
stos
sbb
shll
incb
pop
call
fiadds
or
mov
xor
loopne
int3
mov
add
scas
shrl
loopne
rcrb
mov
mov
sub
and
je
test
jne
loope
xchg
sbb
mov
mov
add
sarl
pop
fcomp
push
mov
dec
pop
cmp
mov
sahf
test
cmp
into
xchg
sti
cmpl
or
int
outsb
jns
pop
and
xor
daa
jae
or
push
inc
dec
dec
xor
adc
lret
imul
movsl
push
lahf
jge
mov
jne
fisttpl
jno
push
int3
cmc
adc
aas
sub
movsl
das
dec
imul
clc
std
int3
out
jp
in
shlb
or
mov
inc
insl
fsub
stos
insl
shlb
rcl
dec
mov
mov
scas
cmpl
stc
mov
aam
int
dec
push
enter
inc
mov
dec
mov
es
inc
and
in
mov
mov
inc
inc
daa
aas
xchg
hlt
movsb
mov
js
aad
call
pop
not
test
lahf
stos
adc
lds
ds
inc
cmpsb
in
fwait
push
daa
sbb
stos
and
mov
pushf
push
xor
clc
and
xor
cltd
and
push
xchg
pop
xor
stos
std
test
aaa
mov
add
imul
out
rcll
cmp
ret
push
push
sub
inc
dec
lahf
hlt
idiv
jle
add
into
and
cmpsl
into
cltd
in
and
mov
mov
and
cltd
insl
sbb
stos
pop
jl
xchg
adc
orb
pop
sbb
sbb
cli
in
mov
inc
and
and
mov
inc
sbbl
cld
pop
inc
fcmovnu
jg
and
push
xor
push
xchg
jbe
mov
adc
or
std
icebp
jns
arpl
xor
inc
adc
cmp
pop
inc
push
in
lea
pop
test
adc
xchg
mov
fucomp
xchg
mov
mov
jmp
je
push
shlb
fdivrp
cmp
ja
mov
jge
out
imul
test
aas
xlat
cmpsl
outsb
or
sub
push
out
jne
leave
test
sbb
push
into
mov
popa
pop
jl
lcall
arpl
jmp
push
shll
jns
and
insb
fistpl
push
popa
cmpsl
xchg
fnstenv
aad
fidivrl
xchg
icebp
arpl
fldcw
test
loopne
cmpsl
sbbl
jle
xor
sub
sub
xor
cmp
shll
in
test
aad
dec
roll
or
aad
js
lcall
test
ljmp
add
sbb
shll
cmpb
mulb
xchg
std
jecxz
js
xor
gs
mov
push
adc
sub
mov
movsb
mov
lcall
xlat
cwtl
lods
dec
lret
mov
bound
popa
pextrw
mov
pop
mov
push
fmuls
xor
mov
or
andb
pop
shll
popa
in
gs
loope
xor
out
dec
dec
mov
std
in
sbb
mov
xor
pusha
add
add
outsl
ret
mov
add
stc
test
out
sbb
mov
mov
loopne
fs
jb
adc
fistl
pop
cmp
xor
or
pop
mov
cmc
add
and
ljmp
pusha
xor
cmp
sbb
imul
mov
sub
jnp
push
pop
iret
xchg
std
insl
pop
and
xchg
pop
repz
mov
nop
xchg
fmuls
or
or
xlat
and
push
call
loope
fs
call
push
cmp
mov
jecxz
lret
push
sub
imul
or
dec
jbe
scas
test
and
sti
jo
adc
jmp
test
adc
filds
sti
mov
sub
repz
repz
xchg
sub
push
nop
cmp
ljmp
add
incl
cwtl
xchg
mov
dec
outsb
mov
mov
mov
call
sub
dec
adc
test
add
cmp
dec
imul
dec
mul
insb
jg
les
shrl
subl
or
fs
lea
test
xor
inc
add
and
adc
inc
pop
xor
idivb
push
popf
pushf
jnp
xlat
outsb
cmp
lea
xchg
sbb
pop
pop
sbb
lret
stc
mov
lea
add
ss
push
mov
push
icebp
cmp
push
fsts
cmp
sub
cmp
test
cmp
adc
imul
mov
icebp
xchg
out
pop
nop
sub
insb
test
clc
idivb
mov
fwait
or
xor
xchg
xor
rcl
movsb
mov
pop
cmc
pop
or
js
repz
or
xchg
inc
xlat
pushf
in
popa
test
scas
je
mov
inc
test
push
lret
into
outsb
pop
xchg
mov
adc
roll
sub
inc
mov
mov
mov
and
shrl
mov
leave
negb
pop
enter
and
int3
test
and
or
cmp
pop
sbb
addr16
mov
dec
es
fwait
dec
or
add
pop
mov
arpl
sti
ja
jecxz
into
out
jns
xchg
les
cmp
inc
lds
xchg
inc
inc
cmp
gs
pop
imul
outsb
dec
cld
cmp
pushf
mov
lock
xlat
xchg
and
data16
call
lods
jecxz
sub
stos
pop
adc
pop
mov
mov
insl
adc
rcrb
mov
fs
push
hlt
inc
rcrb
jae
sarb
xor
xor
mov
push
cmpb
push
adc
mov
clc
lods
lock
add
ret
cmp
jp
fnsave
daa
xchg
cwtl
insb
or
sbb
ficomps
sbb
and
insb
mov
jae
ficomps
lcall
xor
mov
and
shlb
lea
cmp
and
iret
inc
sub
clc
adc
mov
xor
paddw
push
and
daa
dec
pusha
out
lret
test
dec
test
mov
dec
mov
xchg
and
lds
mov
jno
sahf
dec
ja
stos
ljmp
into
out
mov
out
push
xor
lods
lahf
mov
xor
push
jbe
inc
dec
cmp
sub
sbb
lock
push
aad
repz
inc
xchg
xor
call
push
mov
mov
mov
es
and
in
inc
push
xorb
and
or
popa
outsb
dec
popa
lock
fcomi
lahf
mov
mov
mov
push
sahf
pop
or
and
inc
add
je
sbb
xor
ret
std
dec
jl
dec
adc
mov
cmp
xor
sub
andl
movb
fistpll
mov
xor
inc
fs
push
sbb
mov
addl
ljmp
ljmp
out
cli
shrl
mov
stos
mov
and
pop
mov
scas
push
rorb
mov
mov
pop
adc
int3
add
movsl
inc
bnd
es
out
push
and
sbb
adc
xchg
enter
aam
push
dec
popa
dec
jo
xchg
or
mov
dec
shll
xorl
push
mov
dec
xor
outsl
sahf
push
insb
jl
jge
frstor
sbb
push
dec
sbb
push
sarb
push
imul
or
aad
fildl
into
divl
decb
xor
xchg
lahf
xor
and
daa
jg
int
and
cmp
mov
jns
jp
mov
or
aas
sub
mov
jecxz
xchg
test
mov
adc
xchg
sahf
shll
adc
mov
jecxz
cli
sub
stos
repz
mov
push
insl
or
cmp
push
sbb
sahf
loope
pop
push
pop
jae
adc
sti
test
rcl
inc
push
and
or
shll
mov
call
mov
mov
dec
xchg
cs
mov
iret
jne
cmp
into
xrelease
pop
clc
pop
icebp
sbb
cmp
shlb
hlt
out
fbstp
sbbl
mov
es
sub
xor
insb
lret
test
and
inc
jno
ret
insl
sub
cmp
out
mov
cwtl
es
popa
daa
sub
ljmp
aaa
ss
in
xor
push
mov
push
daa
add
adc
cmp
or
xchg
in
scas
sahf
mov
hlt
xchg
dec
adc
out
mov
jno
fmull
sub
sahf
repz
pop
push
dec
xchg
inc
outsb
mov
dec
inc
push
test
add
dec
repnz
or
outsl
adc
push
push
dec
mov
sub
jne
push
xor
icebp
leave
sub
call
mov
push
mov
xchg
pushf
xlat
enter
cmpsb
out
push
push
imul
lahf
fisttps
lock
sbb
push
xor
xor
mov
inc
push
cltd
lahf
mov
aas
mov
call
cmpsl
pushf
xchg
jae
cmp
and
mov
scas
add
rolb
aas
nop
mov
enter
orps
pop
mov
xchg
mov
lods
inc
ja
jb
mov
clc
dec
mov
and
outsl
sub
test
ror
xor
or
fstp
lret
addr16
mov
sub
xchg
add
xchg
jp
push
out
pop
popf
add
push
sub
subl
and
and
push
out
add
mov
mov
sbb
aam
loop
xchg
inc
ljmp
adc
xchg
icebp
inc
cltd
add
dec
push
and
test
jmp
adc
lret
lock
les
adc
popa
in
cmp
outsl
sbb
dec
pop
daa
movsl
sbbb
sbb
scas
pop
fistpll
and
out
int
or
add
loop
pop
lods
idivb
pop
daa
test
decb
and
push
pop
dec
or
inc
orl
mov
loopne
lret
in
push
xchg
push
adc
xlat
jns
out
mov
pop
lahf
ret
jnp
aaa
gs
jne
incb
idivb
mov
adc
repnz
pop
xchg
add
out
dec
lea
leave
pop
sti
sub
test
cmp
pop
xor
mov
cld
lret
mov
pop
arpl
add
cmp
pushf
xor
movsb
jecxz
jo
fsubrl
data16
stc
push
jp
call
mulb
int
mov
mov
lahf
jle
js
inc
repnz
into
sbb
inc
cmpsb
ljmp
pop
bound
jl
sahf
mov
mov
fcomi
pushl
lea
divl
cmpb
out
mov
mov
insb
xchg
dec
lds
fwait
scas
or
imul
sbb
sti
mov
mov
cwtl
aad
and
test
stos
mov
jnp
jae
mov
cli
xor
and
test
out
add
ds
cwtl
xlat
xor
mov
popa
or
loopne
and
lret
cmpsb
je
push
jo
mov
jae
sahf
pop
shl
int
add
add
xor
jle
bndldx
les
ficompl
sahf
adc
fcmovne
lock
cmpl
pushf
cmp
and
ljmp
jmp
cmp
pop
mov
mov
sbb
shufps
daa
push
xlat
jmp
or
sbb
dec
ret
and
push
or
pop
add
nop
pusha
hlt
jecxz
loop
stos
push
xlat
xchg
jae
lods
xchg
out
shlb
mov
sti
fisttpl
xchg
aam
inc
or
sub
pop
out
fsubr
dec
inc
adc
aas
inc
pop
out
mov
xor
mov
stos
cli
pop
cmp
push
mov
notl
mov
into
xchg
rcrl
mov
jl
inc
fiadds
mov
lods
lds
inc
mov
inc
imul
in
shll
cmpl
push
adc
or
lock
xchg
or
xor
dec
sub
xor
and
jnp
cmp
fsubl
jp
push
jae
mov
mov
repz
push
movsb
inc
fbstp
xor
ja
shl
push
mov
popf
rol
outsl
push
pop
push
rclb
add
jmp
aaa
ja
sub
mov
sbbb
adc
pause
in
push
push
mov
sahf
mov
es
ljmp
push
push
shlb
add
push
repz
jle
subb
rcrl
lret
or
lcall
int3
std
outsl
mov
arpl
sub
pop
sbb
in
add
popa
mov
sub
push
add
xchg
xchg
dec
pop
mov
push
adc
dec
das
incl
ljmp
and
jg
adc
popa
in
cmp
xor
stc
aaa
xor
in
dec
or
out
push
icebp
jns
add
lret
xor
aas
cmp
add
fcmovnu
in
or
xor
imulb
sbb
mov
test
test
or
sbb
fwait
xchg
fcomip
fldcw
enter
sub
or
addb
inc
or
aas
subb
sub
mov
int3
sbb
sbb
into
out
xor
rcll
insb
cmp
roll
and
inc
inc
into
out
movsb
out
cmc
inc
xor
adc
ljmp
lret
mov
cmp
out
iret
cmpsb
std
bnd
jmp
lret
push
inc
fwait
xor
or
aaa
xadd
in
in
nop
dec
and
fiadds
jno
xor
jmp
add
aad
es
jnp
jb
fs
xchg
addr16
dec
push
js
sub
sbb
lds
sbb
das
insl
cmp
mov
clc
dec
or
push
sub
ret
xchg
stc
popa
fistpll
lds
es
push
xor
stos
push
mov
ret
aaa
pop
inc
push
mov
mov
test
popa
sub
jmp
pop
ret
lahf
cwtl
adcl
mov
dec
mov
addl
roll
inc
lea
jbe
jne
inc
mov
cltd
mov
or
sub
lret
in
mov
xchg
pop
mov
cmp
sysexit
int3
loop
mov
push
push
stos
add
xchg
jecxz
shrl
lods
repnz
scas
ljmp
xchg
loopne
rorl
add
adc
sub
or
cs
and
lea
insl
mov
lahf
mov
mov
push
dec
push
in
mov
sub
add
or
push
sbb
js
cld
dec
xchg
adc
shrl
int3
scas
xlat
jno
out
fstl
xchg
incb
push
jo
lods
xor
xchg
mov
nop
subl
sbb
adc
into
mov
add
or
jb
movsl
frstor
and
outsb
int3
int
dec
roll
loope,pn
push
mov
push
ljmp
cmp
aam
cmpsl
adc
cwtl
adc
rorb
in
and
xor
mov
mov
mov
pusha
cmp
jne
mov
inc
fcompl
xor
repz
ret
clc
enter
imul
xchg
push
enter
and
adc
mov
pop
and
cli
jg
mov
cwtl
jns
mov
mov
in
jl
xor
adc
mov
or
in
js
jo
and
xchg
push
xchg
cmpsl
insl
std
push
add
mov
sbb
pop
sbb
out
xor
push
inc
cltd
mov
dec
leave
sbb
jle
sub
mov
mov
cmpsl
cmp
std
xchg
sbb
aad
dec
dec
add
inc
sbb
jno
and
lods
cmp
scas
cmp
and
xor
cmp
xchg
into
mov
fldcw
push
insb
pop
cwtl
js
and
xor
or
xor
int
lahf
cmp
sbb
into
and
pop
ss
aad
and
popf
pop
fisubrs
les
pop
int
enter
int3
mov
filds
add
sbb
aad
fldt
rcl
xchg
jnp
cmp
sub
and
stos
jl
xchg
mov
jge
xchg
fsub
pop
lahf
push
and
fcom
or
pop
dec
adc
dec
es
jnp
adcb
mov
inc
adc
loope
cmp
in
pop
mov
and
aas
mov
push
rorl
pusha
add
mov
push
inc
inc
inc
xchg
sub
scas
out
xor
xchg
push
rcll
or
push
ss
mov
lds
xchg
push
cltd
std
ss
mov
mov
ficoms
jl
cmp
add
dec
aaa
mov
ss
fldt
cpuid
insb
ffreep
xchg
repnz
jmp
outsb
mov
test
rolb
sub
push
sbb
fidivl
pop
or
dec
cli
xchg
and
out
sti
mov
in
ror
push
aad
or
gs
test
mov
jne
cltd
cmpsl
sbb
pop
fisttps
bound
pop
stos
xlat
or
into
jnp
daa
out
sub
push
out
repnz
or
scas
mov
or
inc
arpl
add
imul
icebp
in
add
or
fimuls
pop
and
mov
aas
dec
pop
ja
push
xchg
mov
push
fldl
mov
addr16
lds
mov
jbe
movsl
stc
test
or
in
popf
sub
in
sub
pop
dec
mov
mov
popl
notrack
mov
jmp
aam
adc
mov
movsl
jns
into
fnsave
mov
arpl
lahf
inc
insb
icebp
jne
js
mov
mov
icebp
repnz
mov
jl
sbb
mov
mov
mov
xor
sbb
add
push
insl
arpl
stos
push
lods
lds
out
xchg
mov
xchg
push
je
jecxz
jo
sbb
js
cmp
lahf
adc
push
imul
pop
jge
xlat
xor
mov
push
fwait
push
pop
sbb
mov
pcmpeqd
and
adc
jb
clc
arpl
outsb
push
outsl
fmuls
jns
xchg
push
int
mov
mov
lret
call
in
fisubs
iret
out
es
mov
jmp
mov
pop
xchg
push
push
fdivl
pop
dec
mov
xchg
imul
out
xchg
sbb
mov
nop
in
sbb
pop
add
and
xorl
jp
pop
sbb
and
and
mov
adc
sub
rclb
sub
insl
stc
insb
sbb
pop
sbb
pop
jne
addr16
outsb
cmpsl
sbb
push
xor
out
fidivl
cmp
out
ds
and
mov
sub
ret
inc
idivl
call
pop
jo
add
sub
sahf
lods
mov
jne
mov
inc
cmp
sub
shrb
xchg
flds
shrl
adc
sbb
ds
sbb
fnstcw
and
cmp
jecxz
inc
pop
loop
scas
adc
rolb
jg
arpl
iret
mov
xor
cmp
and
lea
jle
push
jge,pt
push
dec
xor
int3
andnps
in
adc
cmpsb
js
mov
dec
shl
loope
mov
mov
test
repnz
inc
pop
in
mov
loopne
test
sti
xor
mov
xchg
ds
aas
pop
mov
cmc
nop
and
jbe
pusha
sub
test
mov
bound
cmp
push
in
into
test
int3
xor
push
out
shrb
int
lea
aaa
adc
mov
jo
adc
mov
shr
jl
or
lock
or
fimuls
mov
dec
popf
cmpsb
pop
out
push
daa
repnz
push
jnp
in
cltd
dec
out
ljmp
loope
dec
xor
stos
nop
push
leave
add
sub
pop
jmp
shlb
pusha
mov
ret
xchg
cmpsb
sti
jne
ja
adc
cmp
mov
test
push
cmp
aaa
ds
or
xchg
inc
inc
push
js
fdivrl
stos
cmp
fdivrs
mov
out
xchg
call
and
and
xor
or
xchg
dec
mov
mov
dec
cmp
push
insl
mov
aam
push
jns
jmp
pop
mov
stc
cs
data16
push
xor
leave
push
mov
stos
adc
jecxz
lock
mov
sub
jg
stos
cmpsb
das
adc
lds
pop
shll
sub
pop
inc
dec
fcoms
mov
jno
xor
and
pusha
clc
dec
popl
dec
in
or
imul
loop
cwtl
pop
lods
sub
jge
ljmp
orb
sar
stc
mov
pminsw
ds
push
push
push
jp
sub
xorb
ficoml
cmp
mov
push
push
lock
mov
mov
shlb
dec
gs
bound
mov
mov
dec
and
xchg
je
push
sbb
mov
inc
aad
ljmp
jbe
lahf
inc
loop
mov
je
mov
jmp
les
mov
aaa
mov
fimull
into
push
mov
adc
dec
dec
inc
movsb
jmp
mov
inc
mov
xor
cmp
xchg
add
adc
outsl
sbb
add
inc
lds
cltd
shl
xorl
clc
dec
icebp
fucom
dec
call
lods
mov
or
inc
sbb
sub
into
outsl
inc
mov
cmp
add
push
in
repnz
aaa
inc
mov
lret
dec
clc
pusha
test
push
adc
mov
jno
xchg
pslld
dec
cwtl
lea
sbb
std
daa
mov
mov
iret
dec
cmp
xor
js
cltd
dec
mov
or
xchg
sub
dec
in
ret
xor
mov
rorl
sub
xchg
stos
mov
push
es
or
int3
std
leave
and
mov
lds
ja
cmp
jae
or
mov
jne
jo
rcrl
shrb
cmp
test
mov
xchg
cmc
add
push
sub
pop
add
push
shlb
imull
daa
add
out
stos
push
mov
imul
out
xchg
xchg
mov
pop
cmpsl
jns
imul
into
sub
test
loope
sbb
lcall
pop
push
les
test
add
popl
sbb
sbb
fs
lea
mov
fsub
jmp
repz
sbb
je
mov
rolb
pop
adc
lods
dec
shrl
loopne
pop
adc
loopne
iret
rclb
inc
ds
ja
ljmp
or
movb
mov
cltd
cwtl
ljmp
mov
adc
push
mov
pop
out
outsl
jp
xchg
push
insl
mov
or
push
jmp
push
in
cmc
xor
insb
mov
mov
ss
inc
movsb
jg
jecxz
cmp
pop
mov
jb
inc
sbb
call
or
dec
xchg
mov
pop
lock
frstor
inc
adc
xchg
add
pop
es
imul
imul
inc
jbe
ja
sub
sbb
sub
xchg
mov
int3
mov
or
sbb
push
xor
movsl
loope
cli
test
or
sar
add
dec
mov
int3
and
repnz
adc
pop
dec
fs
es
xor
mov
mov
inc
jno
jbe
push
jg
outsb
clc
scas
sub
mov
push
and
divl
and
inc
insb
mov
push
jl
scas
aad
popf
inc
mov
hlt
or
add
mov
out
cmp
dec
push
pusha
jp
loope
push
ret
inc
mov
ds
push
pop
lds
mov
test
push
out
repnz
orb
pop
in
fmulp
in
dec
int
mov
mov
shll
mov
icebp
sbb
gs
sbb
in
ret
icebp
mov
mov
lcall
and
mov
dec
cltd
adc
cltd
jp
mov
test
bswap
rclb
ret
lds
pop
scas
jge
sub
mov
imul
inc
cmp
ss
add
nop
lret
dec
mov
sub
test
mov
add
cmc
jne
xor
mov
popf
sbb
pop
ret
mov
lret
addr16
xchg
or
push
xchg
jge
push
jmp
adcl
dec
mov
arpl
cmp
pusha
cmpb
mov
in
inc
mov
dec
mov
sbb
inc
mov
push
into
stos
cmp
mov
mov
adc
and
inc
sbb
cmp
call
outsb
push
lea
call
lcall
std
mov
cltd
std
sahf
hlt
sti
stc
add
jb
das
adc
test
rep
mov
or
andl
mov
mov
xchg
jecxz
inc
cli
push
mov
add
push
sub
pop
lods
inc
xchg
push
adc
out
out
out
je
das
xchg
sbb
cmpsl
std
dec
xchg
push
inc
or
test
xlat
int
jmp
jmp
sbb
jl
fbld
mov
outsb
in
out
sbb
pushf
std
in
mov
out
pop
scas
fimuls
pop
and
inc
xchg
repnz
call
lods
mov
push
daa
mov
jl
decl
fadds
pusha
push
outsl
inc
or
lods
adc
hlt
sbb
out
pop
mov
dec
imul
dec
ss
dec
xor
lods
call
mov
push
lods
inc
arpl
orb
int3
jl
clc
pop
sarl
mull
or
fistl
add
ret
imul
xor
xor
fsubl
into
sub
pop
leave
jmp
jmp
sub
xchg
xchg
xchg
push
or
sti
dec
jnp,pt
icebp
sahf
and
jbe
mov
scas
adcl
adc
xchg
fdivl
mov
dec
jbe
mov
cltd
loop,pt
cmp
mulb
negl
filds
aas
inc
dec
leave
mov
call
inc
mov
cmpsl
xchg
push
dec
mov
in
adc
jnp
dec
ret
xor
cmc
mov
lock
adc
outsl
bnd
or
push
pop
outsb
sub
loop
inc
in
jbe
out
in
cli
mov
ficomps
fldenv
pop
ret
out
inc
outsb
jge
mov
pop
inc
and
lret
pop
adc
sub
ret
movsb
pop
dec
jno
inc
dec
in
sbb
lret
rdpmc
inc
pop
push
dec
es
push
sub
xor
push
xchg
pop
jb
mov
dec
imul
std
in
mov
push
jae
add
cmp
xchg
jbe
clc
in
scas
lahf
xor
lret
jp
pop
cmpsl
loopnew
inc
testb
movsb
cmp
or
repnz
out
negl
xor
sbb
out
rorl
lock
push
push
fcmovu
cli
xchg
shrl
sub
imul
out
mov
cmp
or
mov
xor
mov
into
orl
mov
in
cmpsb
or
ds
dec
iret
leave
cmp
cli
mov
adc
out
sbb
or
ret
in
push
mov
xor
in
jmp
nop
fsubs
das
popf
cwtl
std
jle
outsl
xchg
mov
lret
jecxz
lahf
adc
and
out
mov
inc
mov
push
adc
movsb
ret
mov
mov
sub
mov
fadds
mov
mov
push
out
inc
int3
fmuls
sub
aas
out
popf
sahf
stos
xor
call
nop
cmp
pop
stos
sub
loopne
sbb
nop
inc
icebp
sbb
sti
bnd
xor
fdivr
fidivrs
daa
xchg
es
aam
lods
lcall
movsl
jne
in
xchg
jne
icebp
addr16
out
jmp
adc
mov
cmp
mov
xorb
add
pop
test
ljmp
dec
xor
xchg
sbb
pop
mov
push
sbb
push
notb
pop
push
adcb
ret
lcall
iret
adc
mov
repz
out
and
loopne
add
lods
mov
xchg
pop
and
dec
mov
add
aas
insl
pushf
push
mov
loope
cwtl
pop
cld
mov
sbb
out
sahf
pop
xor
inc
dec
out
repnz
out
cmp
fadd
pop
jnp
lock
mov
jno
ja
lret
in
mov
test
subl
and
fisubs
dec
mov
xlat
loop
ds
sti
jecxz
cmp
pop
push
out
or
movntq
jnp
jl
pop
and
jle
fnstcw
inc
repz
mov
mov
inc
ret
ljmp
adc
cld
mov
mov
push
xor
adc
ss
or
xor
outsb
mov
inc
stc
add
sbb
pop
cld
inc
repnz
into
and
cmp
and
iret
xchg
adc
jne
out
xor
sbb
push
test
int3
cwtl
orb
mov
cld
mov
mov
sahf
fidivrl
es
push
push
pop
rcr
out
inc
mov
popf
outsb
cmp
cmc
dec
sbb
mov
or
xchg
mov
imul
dec
in
mov
lods
dec
fnstsw
hlt
rolb
lods
adc
das
fbstp
pop
push
jle
inc
mov
std
shlb
add
xchg
or
jge
sbb
in
aam
pusha
les
dec
nop
xchg
inc
imul
mov
adc
pop
ret
xor
add
inc
daa
scas
mov
sub
out
shl
stos
adc
push
cmc
pop
js
mov
dec
addr16
pop
jge
mov
lcall
inc
in
popf
fstl
push
xor
push
sub
fwait
shlb
lcall
sti
jge
mov
or
daa
dec
xchg
push
adcb
inc
mov
mov
mov
dec
pop
push
cmp
add
lods
or
in
inc
loopne
and
push
and
jno,pn
sbb
daa
popf
xchg
je
xchg
inc
out
dec
cltd
inc
jbe
shlb
fisttps
dec
mov
fxch
adc
rorb
adc
call
test
les
lods
and
aaa
flds
cmp
jecxz
or
addb
movsb
mov
mov
xlat
aaa
idiv
punpcklbw
or
jnp
add
xchg
jl
adc
inc
sbb
add
ret
movsl
sub
cwtl
push
inc
jge
fisubs
dec
cmp
add
aaa
fsub
pop
jl
mov
mov
int3
daa
aad
daa
lods
fimuls
push
xchg
test
rol
mov
xlat
popf
cmp
stos
and
jg
call
lock
mov
imul
sbb
ds
inc
pop
xchg
ds
push
push
or
dec
insb
jo
sarb
xorl
or
or
xchg
lds
add
mov
fdivl
stc
sarl
add
or
push
gs
stos
stc
fcomps
in
movsl
jg
rorl
adcb
gs
sub
mov
xchg
lods
dec
and
lret
mov
push
movsb
fwait
dec
and
lret
adc
mov
add
xlat
xchg
int
outsl
sbb
add
cmp
adc
hlt
add
in
push
pusha
cld
je
mov
jo
in
mov
fs
pop
aam
sbb
adc
xor
and
jp
cmp
out
xchg
adc
and
push
nop
mulb
fs
mov
xchg
rorb
mov
fistpll
mov
cld
mov
push
fsubl
sub
adc
fwait
mov
mov
push
jp
es
push
sub
mov
int
sbb
xor
lea
je
bound
sbb
fnstsw
test
pop
and
aaa
orb
push
dec
pop
cmp
push
sbb
lock
adc
mov
and
sub
clc
xlat
fsubs
push
xlat
addr16
ret
cwtl
cmp
out
clc
repz
adc
and
fisttpl
pop
ficoml
inc
ficomps
imul
arpl
outsb
fbld
push
ret
mov
in
popa
sbb
stos
pop
adc
jge
jmp
hlt
xor
enter
jns
xor
xchg
hlt
enter
add
aas
leave
ljmp
fcmovnu
lea
add
jae
pop
cmp
push
cs
ja
sbb
mov
dec
inc
dec
pop
add
add
mov
popf
adc
push
subb
inc
test
mov
bnd
sbb
mov
aas
mov
xchg
imul
aas
cwtl
lret
nop
rorb
adc
js
add
mov
cmpl
add
pop
sbb
fldl
ficompl
pop
les
push
dec
enter
scas
jp
jp
push
mov
enter
loopne
adc
pop
xor
push
or
mov
sarb
in
push
ret
xchg
pop
movl
hlt
sti
push
fstpt
xchg
jb
jp
sbb
lods
adc
pop
mov
cmp
mov
jno
sbb
dec
ret
push
xchg
les
shll
shlb
les
mov
sti
xlat
push
kmovb
loope
adc
and
add
popa
push
test
dec
or
adc
imul
mov
icebp
lcall
inc
xchg
add
leave
jo
fs
in
cmp
mov
sbb
and
jae
loop
popf
mov
stc
and
lret
aad
cmc
ljmp
sahf
add
mov
mov
xor
cmpl
ficoml
jl
xchg
fiaddl
orb
ds
mov
rorl
pop
add
sub
hlt
and
outsl
pop
enter
dec
or
jns
fwait
push
adc
fsubrp
imul
sbb
hlt
ja
les
loopne
pop
and
sub
mov
jb
icebp
leave
add
ljmp
add
pop
xor
aaa
dec
sbb
cmc
xor
lods
or
and
xor
mov
push
aas
dec
adc
push
mov
je
adc
jecxz
jp
xor
mov
mov
jb
inc
hlt
push
fnstcw
or
mov
mov
mov
jns
add
xchg
data16
mov
and
ljmp
negl
push
lea
inc
push
andb
icebp
sahf
rclb
cmc
mov
xor
sbb
mov
xor
clc
cmpb
xchg
fldl
add
push
cmpsl
or
push
inc
inc
push
and
sub
mov
out
cmpsl
out
or
rcrl
or
mov
or
fwait
sub
push
pop
add
xchg
cli
pusha
add
or
mov
pop
mov
xchg
jb
div
in
cmp
jecxz
popf
testb
in
lock
xchg
mov
gs
jg
lcall
aad
adc
js
sub
mov
std
add
adc
sbb
xchg
mov
jl
jnp
repz
dec
push
xchg
xchg
dec
jg,pn
cmc
lcall
imull
insb
sti
in
dec
inc
test
push
neg
push
mov
dec
daa
addr16
inc
inc
and
out
jb
cld
cmpsl
gs
push
pop
jecxz
inc
rol
push
lds
mov
mov
ret
xor
xchg
jg
int
push
pushf
scas
stc
add
aas
xchg
pop
and
adc
xchg
lds
jmp
es
sarl
mov
sub
rcll
mov
pop
cwtl
fs
fdivrl
lds
sbb
xchg
sbb
enter
insb
nop
jg
dec
pop
add
or
mov
jno
lahf
sbb
mov
int3
cmpsl
pop
cwtl
insl
dec
mov
insl
std
loopne
test
cmpsl
outsl
add
fidivs
dec
repnz
mov
pop
adc
push
dec
cmpsb
mov
stos
pop
xor
jns
int3
push
xchg
xchg
hlt
cmp
fbld
add
js
sti
inc
aad
les
pop
inc
xor
dec
ret
pop
mull
adc
pop
pop
aad
push
mov
pop
imul
nop
out
aad
out
cmp
push
jae,pn
lds
inc
out
push
out
mov
or
pop
movsb
sbb
cmp
out
push
xchg
leave
mov
pushf
cmp
ds
pop
jecxz
shrl
out
push
xor
add
inc
jg
fs
arpl
pop
sub
mov
dec
neg
js
fldenv
mov
sarl
data16
jmp
inc
fcmovnu
aaa
mov
repz
sub
nop
push
add
or
punpcklwd
rcrb
rclb
inc
roll
icebp
loope
sub
stos
sub
sub
loop
xchg
mov
inc
jnp
or
mov
mov
stos
aad
scas
pusha
cmp
fisubl
mov
stos
sbb
outsl
dec
mov
andb
test
ljmp
rcll
mov
inc
push
pop
shr
and
adc
dec
fmull
or
dec
pop
and
dec
and
adc
cmp
aam
mov
mov
sti
or
cmp
in
outsb
fcomps
pop
imul
shll
xchg
mov
push
or
push
jp
cmp
aam
stos
jecxz
icebp
lds
shrb
ret
sbb
sbb
rcll
ljmp
adcb
imul
adc
adc
sbb
push
dec
addb
ss
data16
cmp
dec
inc
inc
cli
xorl
mov
mov
dec
mov
sbb
mov
fiaddl
or
jp
hlt
ret
addr16
cmp
fwait
stos
arpl
adc
xor
in
mov
in
sbb
mov
loop
cs
jns
xor
push
jne
pop
fs
fadds
sub
mov
push
imul
ds
sbb
cltd
xor
gs
cmp
jns
fsubs
sub
xor
xor
add
les
test
xchg
cmc
or
or
sub
leave
popa
pop
xor
sbb
jmp
loopne
clc
rorb
shll
addr16
lods
xlat
xchg
dec
add
and
pop
das
push
test
dec
loop
mov
out
or
jb
adc
cmp
fimuls
cli
mov
scas
fistps
add
fwait
jo
jbe
push
mov
data16
fcmovnbe
xchg
test
jp
stc
stos
lea
inc
sbb
xchg
mov
ds
push
stc
out
or
cmp
addr16
les
push
lds
pushl
jne
outsl
bound
dec
add
add
sub
xor
test
fimull
mov
add
sub
dec
and
outsl
mulb
lcall
xchg
push
call
cmp
mov
inc
loop
imul
xchg
lahf
xchg
test
sbb
mov
jle
and
fcmovbe
mov
push
jns
mov
xchg
mov
es
pop
xchg
mov
push
sbb
jnp
fistl
or
inc
popa
fistpl
push
pop
notl
pop
and
xchg
fmuls
call
leave
lahf
or
mov
outsl
sub
int
ret
test
jp
or
mov
mov
dec
imul
jbe
add
jle
push
imul
xchg
aaa
imul
fwait
sbb
add
pop
mov
in
jne
cmp
lods
je
mov
aaa
xor
sub
cli
test
sbb
addr16
mov
sbb
cli
mov
mov
sbb
sub
mov
outsb
sub
fimuls
in
nop
mov
fimuls
xor
fsubrl
cmp
pop
jno
and
popf
pop
loop
mov
iret
fiadds
repz
divl
xor
fwait
mov
mov
xlat
sub
or
mov
sbb
sub
xchg
xchg
sub
mov
push
sahf
cmpsl
adc
in
ja
dec
loop
pop
jns
add
ret
sbb
sti
inc
push
xchg
inc
mov
mov
xchg
out
in
ret
outsb
xor
icebp
inc
enter
leave
cmp
jge
lds
frstor
cld
ja
arpl
pop
pop
xchg
push
out
ds
repz
add
sbb
pop
pop
js
hlt
iret
out
ret
sbbb
lcall
dec
push
loop
subl
fcmovbe
int
insb
mov
insb
into
int3
cwtl
mov
loope
cli
cmc
inc
jp
fiadds
loope
pop
adc
iret
xor
pop
cmp
xor
xor
sbb
adc
push
popf
mov
pop
push
ja
xor
dec
loopne
in
bound
pop
ss
ja
into
lods
int3
mov
pop
imul
inc
adc
push
lds
and
jo
mov
dec
aam
xorb
dec
pop
mov
lods
movsb
daa
shll
jecxz
dec
pop
insb
sar
mov
xchg
cmpb
add
lods
push
pushf
sub
in
jge
mov
or
mov
fidivl
xor
or
test
xchg
aaa
or
dec
mov
add
adc
rcl
iret
adc
sti
lret
aaa
bswap
insl
or
imul
iret
sbb
add
aaa
or
sbb
cmp
ret
adcl
adc
xchg
data16
mov
dec
xchg
rcll
lret
das
xchg
mov
movsl
jl
sbb
and
fiadds
ret
fcomps
scas
test
adc
push
repnz
and
fwait
loop
stos
dec
mov
mov
adc
ret
icebp
shrl
enter
lods
sub
sbb
leave
or
sarl
movsl
idivb
and
lret
das
fistl
cmp
xchg
rcrb
mov
inc
mov
push
aas
faddl
fistps
pop
pop
and
mov
mov
mov
jae
outsl
shrb
mov
push
or
mov
pop
sbb
pusha
pop
jbe
mov
fmuls
xchg
jo
add
sti
mov
and
scas
das
and
pop
and
pop
jge
fwait
cli
int
ret
mov
inc
add
xchg
sbb
sbb
mov
inc
testl
not
call
mov
mov
hlt
outsb
mov
cmpsb
or
fwait
xor
leave
jge
testl
inc
cwtl
push
sarb
gs
stos
pop
push
pop
cli
aaa
cmpsb
xchg
ss
mov
inc
insl
mov
cmpl
pop
xchg
jl
fimuls
pop
push
inc
or
dec
push
mov
mov
test
or
mov
cli
ja
dec
xor
loope
lea
test
sbb
jno
push
sub
jl
cs
sbb
shl
pop
jecxz
or
sbb
push
mov
ficoms
sbb
sbb
lods
rcl
fstl
push
test
inc
push
mov
xchg
outsl
test
js
pop
in
in
push
das
insl
dec
push
dec
fadd
imul
push
cwtl
jo
int
mov
lods
test
add
xchg
push
adc
loope
stc
mov
call
inc
xor
ljmp
jmp
sahf
sub
cwtl
push
sub
or
repnz
faddl
jo
and
adc
mov
jnp
xor
aad
std
lods
push
cmp
xchg
or
hlt
imul
mov
sub
fistpll
jbe
std
mov
int3
mov
mov
jle
repz
cmp
cs
hlt
inc
fwait
xorb
xchg
icebp
decl
fisubs
sbb
test
mov
inc
cmp
sub
push
add
xchg
sub
xlat
cmp
adc
push
inc
adc
lea
lods
out
jb
mov
js
xor
jmp
pop
mov
mov
aas
pop
fisubs
mov
jns
ja
outsb
test
sbb
mov
stc
lret
push
mov
mov
lret
xor
push
sti
aam
add
loop
fisubrl
xor
lcall
lods
shrb
outsb
inc
inc
and
mov
or
repz
je
fdiv
pop
or
loopne
cmpb
lret
bound
xchg
mov
popa
arpl
enter
or
xchg
sub
cmp
fwait
sarb
cmp
cmp
xchg
jbe
adc
fcomps
pop
ljmp
shrl
mov
je
mov
cmp
sbb
nop
dec
nop
xchg
jnp
xor
or
or
cmp
mov
es
lcall
repz
loopne
and
and
test
push
xchg
repnz
lods
push
dec
push
mov
push
imulb
pop
inc
fadds
jp
mov
aaa
pop
mov
das
or
jmp
test
ret
add
stos
stos
lret
adc
mov
pop
sbb
mov
les
loopne
adc
hlt
popf
pop
imul
push
cmc
fnstenv
data16
mov
pushf
xor
add
jnp
or
add
push
gs
sub
cwtl
sub
mov
or
lock
push
repnz
scas
dec
enter
mov
mov
fstps
adc
mov
cmpsb
subb
fwait
mov
add
movsl
out
adc
mov
xor
or
inc
cmp
xchg
mov
fwait
addr16
icebp
pop
inc
adc
cli
sbb
adc
fsubl
jl
jbe
and
in
fisttps
fbstp
xchg
sbb
inc
push
jne
lret
clc
ds
pop
jmp
jb
adc
scas
push
stos
test
in
jno
mov
in
xor
out
adc
fwait
clc
popf
subb
pop
pop
adc
inc
iret
jecxz
push
inc
xor
push
mov
inc
mov
push
lahf
loopne
or
out
vfrczss
mov
into
andl
or
into
or
dec
je
pusha
cmc
mov
add
mov
xchg
cmpb
sub
lock
and
mov
rcrl
out
mov
rcpps
pop
mov
inc
mov
add
mov
lods
neg
fnstsw
fsubl
mov
mov
cs
fsub
in
cmp
mov
inc
push
xor
mov
cmp
xchg
push
xchg
loopne
pushf
loopne
xchg
inc
inc
jecxz
data16
jne
cltd
dec
sub
mov
mov
inc
add
outsl
jb
lcall
mov
frstor
js
neg
fldt
jo
mov
pop
movsl
mov
cs
sbb
jge
xor
rcrb
cmp
and
or
test
jns
inc
xchg
or
loope
scas
int3
pop
jb
shr
xchg
imul
scas
fldcw
lock
dec
fistpl
lret
shll
outsl
jecxz
xorl
int3
jmp
cmpsl
xchg
divl
push
xchg
icebp
cmp
add
test
sbb
mov
outsb
lret
inc
ja
out
shll
iret
and
cmpsb
pop
mov
movsb
shl
xor
adc
cmp
push
mov
jno
fs
adc
xchg
xchg
add
or
loopne
addr16
xor
inc
add
popa
int
in
lcall
mov
addr16
adcl
push
sub
cmc
add
inc
or
push
jnp
jne
imul
dec
adc
ljmp
push
mov
xchg
cmp
cli
mov
daa
and
and
mov
gs
aam
sub
nop
lahf
and
mov
xchg
ljmp
shrl
sbb
xchg
pop
popa
test
std
mov
jb
mov
adc
add
dec
clc
rcll
sbb
test
ja
sbb
adc
scas
mov
test
fs
mov
nop
mov
lcall
xor
xchg
sti
shl
add
push
fs
sub
xor
jnp
es
inc
leave
xor
or
in
in
fistpll
cmp
add
dec
xchg
clc
fwait
pop
mov
adc
push
fiaddl
in
jg
subl
mov
inc
mov
add
inc
push
mov
jmp
out
pop
cltd
mul
mov
pop
xor
ret
pop
adc
orb
fisubs
cmc
jmp
pushl
out
int
mov
cmp
pusha
in
mul
adc
add
mov
repnz
ss
icebp
mov
mov
daa
out
or
lods
cmpsb
add
nop
xchg
inc
imul
xor
imul
cmpsb
pop
xchg
aad
cmp
inc
int
fidivl
push
inc
into
xchg
mov
pop
stos
mov
es
into
jnp
mov
mov
negl
pop
xlat
inc
or
sbb
inc
ret
mov
mov
xchg
jns
scas
daa
xor
mov
lahf
xchg
sub
adc
adcb
or
push
ds
inc
jmp
mov
int3
aaa
cmp
dec
stc
scas
mov
out
das
push
inc
movsb
fxch
dec
mov
lret
add
into
sahf
es
fistps
mov
adc
ds
ds
out
sbb
xchg
dec
shr
jge
mov
loopne
push
xchg
xchg
xchg
xor
out
idivb
add
xor
cmp
aam
add
pop
jmp
movsb
sbb
xor
or
movsl
xchg
sub
add
xchg
push
shr
sbb
arpl
dec
loop
cmp
stos
cmp
adc
xchg
or
add
xchg
xor
shl
imul
mov
addr16
out
pop
je
sub
adc
les
or
add
xor
aad
pop
pop
xlat
movsl
jecxz
xchg
popa
sbb
clc
mov
mov
xchg
movsb
jle
vmovaps
inc
into
jo
mov
adc
call
sar
dec
cmp
adc
dec
out
cmpsb
cmp
pop
or
loop
mov
pop
ret
mov
jg
sub
dec
test
outsb
and
and
pop
cltd
fdivs
mov
shrb
add
and
negl
cmpsl
adc
dec
rolb
int3
addr16
lahf
cs
leave
bound
add
pop
jl
aad
mov
mov
fisttpll
sub
adc
pop
pop
jmp
adc
jns
jo
in
mov
cmp
and
jns
cmp
call
shrl
mov
or
xor
int
enter
add
test
rcll
shl
jmp
jle
push
lret
scas
pop
push
dec
mov
mov
gs
jnp
jb
fdivrl
add
sbb
sub
mov
in
xor
sbb
mov
in
subb
scas
inc
add
and
cmp
mov
push
adc
jmp
movsb
aam
xchg
fwait
sbb
jbe
and
cmpsl
mov
aas
aas
pop
mov
and
movsb
arpl
imulb
je
dec
mov
popf
data16
mov
scas
shl
fcmovnb
dec
add
idivl
or
xchg
cmpsl
jp
bnd
leave
jo
ds
scas
daa
sub
out
jg
xlat
rorl
nop
adc
scas
jo
test
stos
ret
aad
fstps
loope
fdivl
movsl
js
sti
mov
mov
sbbl
mov
pop
jne
ret
xchg
jo
jp
cwtd
test
fistl
ja
std
mov
xorl
pop
int
int3
test
pusha
std
aaa
in
adc
cmp
xor
xchg
push
les
inc
push
scas
mov
mov
es
scas
jge
lea
aas
fwait
insl
jae
inc
pusha
mov
mov
or
aad
add
movsl
mov
das
nop
clc
add
xchg
pop
lods
xchg
inc
cmp
sbb
outsb
cmp
push
mov
dec
test
pop
jne
push
jae
mov
or
xchg
lds
hlt
sbb
adcl
test
mov
cmpsb
into
mov
stos
mov
in
mov
incb
int3
outsl
mov
add
lret
adc
rcrl
mov
adc
push
add
mov
push
xor
xchg
cli
ficompl
mov
sub
gs
cmc
sbb
pushf
or
and
ficomps
or
ret
mov
adc
ja
hlt
in
inc
leave
mov
cmpsl
adcl
sbb
mov
adc
fwait
int3
fidivl
test
add
and
lds
dec
push
pop
or
jmp
jl
sahf
xor
and
mov
mov
mov
xor
mul
pop
jmp
sbb
xchg
repz
fmuls
fs
shlb
rol
cld
iret
loopne
sbb
push
xor
pop
cmp
inc
daa
dec
sarb
cmp
add
shl
ja
dec
cltd
jae
push
scas
mov
scas
adc
dec
pusha
mov
adc
add
addr16
jmp
pop
push
inc
repz
out
push
mov
push
data16
xchg
call
push
frstor
into
test
push
dec
jle
hlt
pop
or
and
fs
push
jae
arpl
mov
ja
test
int3
icebp
out
xchg
jae
push
pop
mov
addr16
in
adc
pushf
popa
scas
push
sub
xchg
mov
push
fwait
cltd
fidivrl
pushf
out
pop
mov
decl
jo
sbb
lret
xlat
hlt
mov
mov
enter
fldl
xchg
pop
test
aad
dec
sbb
inc
pop
add
jmp
cmp
jmp
pop
push
mov
fcmovnu
hlt
fildl
fdivl
pop
test
xor
gs
nop
jmp
push
outsl
popl
popf
out
frstor
movsl
nop
dec
sub
ja
mov
jnp
cmpsb
cld
test
adc
mov
sbb
stos
test
mov
sti
test
push
ret
sub
gs
pop
ret
mov
push
pop
lcall
cmp
lock
bound
ret
mov
insl
sarl
vorps
leave
scas
pop
mov
xor
mov
xor
pushf
add
out
push
inc
or
xor
pop
insl
cmp
xor
in
lcall
cmp
test
xor
fnstsw
aaa
adc
lcall
push
mov
cmpsb
adc
sbb
out
cld
adc
mov
lods
cmpsl
xor
push
sub
les
rol
sti
movsl
aam
jbe
cmc
sub
ret
es
rclb
push
mov
add
and
jecxz
mov
mov
bound
idivb
push
jp
push
ds
dec
dec
testl
xchg
cmp
or
lds
xor
ljmp
clc
enter
dec
jecxz
xchg
xchg
sbb
into
lods
adc
int3
and
repnz
sbb
popf
cmp
xchg
psllw
pop
loope
fstl
ja
cmpb
fwait
cwtl
pop
sbb
mov
out
sub
jne
pusha
push
xor
push
or
mov
jo
int
mov
sar
out
xlat
shll
mov
imul
and
out
popa
hlt
mov
iret
cmpsb
lcall
dec
mov
aad
imul
scas
pop
adc
and
out
mov
mov
and
xor
lods
lcall
or
out
daa
loope
lret
cli
cmp
stos
movsb
cltd
sub
aad
or
mov
out
jecxz
addr16
insb
jo
sbb
pop
push
sub
push
jp
gs
or
sbb
movsb
cmp
adcb
je
mov
sbb
and
mov
xchg
adc
enter
aad
sbb
mov
cmc
sub
outsl
mov
inc
mov
hlt
and
add
imul
dec
lret
sbb
mov
into
xchg
xor
mov
aad
pop
fwait
shl
jbe
test
push
mov
dec
mov
or
dec
add
in
sub
in
lcall
jns
les
pop
xchg
and
jne
call
mov
out
mov
lret
inc
das
inc
shlb
cwtl
push
and
call
mov
stos
push
xchg
mov
dec
int3
xor
jo
popa
in
aaa
mov
mov
popa
imul
mov
add
mov
fnstcw
arpl
jmp
outsl
mov
add
sbb
lock
rcrl
mov
lret
int3
int3
fsubrs
sbbl
xchg
lcall
sarl
mov
sub
mov
iret
mov
fidivrl
insl
lret
push
jge
inc
cmc
add
je
push
add
lcall
stos
jl
inc
sub
sbb
scas
or
mov
push
stos
sbb
dec
stos
repz
inc
jge
push
xor
xchg
hlt
loope
test
sub
push
out
je
dec
lahf
mov
adcl
fildl
mov
and
loopne
lret
dec
sarl
mov
and
mov
sub
and
test
mov
xchg
jp
icebp
xchg
daa
loop
push
daa
arpl
or
insl
out
shl
and
inc
or
push
xor
xor
lea
add
mov
leave
int3
jp
cld
stos
bound
push
test
orb
cmpsl
out
lahf
push
mov
jo
add
jbe
fldlg2
rorb
jae
sarl
ret
push
fwait
into
gs
icebp
dec
pop
sbb
jbe
mov
push
imul
stos
mov
in
mov
popa
ss
sub
adc
test
inc
cmp
pushf
icebp
insw
stos
cmp
cli
dec
mov
setg
jl
dec
jo
lret
fnsave
orb
dec
mov
hlt
mov
arpl
adc
pop
or
dec
and
push
mov
pushf
pop
adc
dec
inc
inc
nop
std
add
repnz
sub
out
pop
pop
lcall
in
sub
cmc
scas
aas
and
or
pusha
data16
add
add
and
mov
inc
mov
jno
popf
imul
loopne
mov
xchg
dec
mov
xor
pop
pusha
call
sbb
adc
outsl
dec
jle
pop
jecxz
test
or
ret
arpl
hlt
lret
mov
push
add
push
mov
inc
push
loopne
or
scas
mov
xor
push
cs
shl
cmp
mov
pushf
repnz
mov
std
fcmovnb
xchg
call
ja
sub
sbb
mov
sbb
adc
mov
mov
mov
cld
loopne
cmp
ljmp
shlb
fnsave
mov
movsl
dec
mov
sahf
sarb
pop
inc
jo
cmp
mov
pop
push
pop
mov
leave
xchg
das
lret
ja
adc
inc
adc
in
lods
xlat
lock
leave
fcmovnu
movsb
scas
decl
mov
clc
in
mov
add
aaa
add
scas
push
loope
xor
and
mov
adc
std
pop
push
mov
daa
pop
jo
sub
aaa
shrl
out
pop
hlt
add
call
dec
and
adc
push
push
jno
fistl
cmp
movsl
dec
mov
subl
mov
incl
ja
pop
and
popf
loope
mov
mov
xor
lds
sbb
mov
fdivs
jbe
cmp
adc
inc
mov
clc
das
xchg
xchg
xchg
and
cs
inc
mov
jp
jbe
push
testb
sub
int
add
xchg
adc
lock
test
and
push
insb
sbb
pop
sub
cmp
adc
fs
insl
stos
or
test
in
xchg
insl
out
mov
mov
and
dec
xchg
sub
mov
negb
ds
dec
lret
xchg
push
xlat
les
inc
push
fwait
test
push
into
or
mov
push
loopne
insl
fstps
fisubrs
decl
or
sbb
inc
nop
out
pop
jge
clc
mov
xchg
xchg
inc
dec
fs
subl
jb
fsubr
pop
int
mov
inc
ljmp
daa
xchg
into
mov
insb
pop
jecxz
dec
and
imul
mov
and
popa
movsl
pop
xlat
mov
ror
int
aaa
mov
cmp
lret
and
adc
inc
jno
add
xor
popa
cli
mov
clc
xchg
mov
scas
mov
dec
sbb
xchg
push
jnp
iret
addr16
mov
xchg
stos
sub
cmp
scas
adc
imull
faddp
fimuls
jae
mov
cmc
mov
mov
jne
inc
mov
add
xchg
mov
lods
jge
cwtl
xchg
sahf
lods
scas
arpl
stos
sub
jecxz
rclb
add
jo
jb
jecxz
pop
jae
xor
xor
adc
pop
pop
sub
mov
sahf
jecxz
cmp
push
sub
pop
push
pop
mov
sub
fldl
push
inc
jne
sub
out
ss
outsl
sbb
and
mov
stc
cltd
jne
sub
outsb
in
mov
adc
leave
pop
loope
pop
mov
mov
test
push
mov
js
mov
mov
stc
push
xor
loop
sti
test
int
out
cmpsl
gs
in
cltd
dec
inc
xchg
push
pusha
jecxz
sbb
repnz
loope
inc
mov
clc
iret
push
pop
leave
shll
jl
fsubl
aam
arpl
cmpsl
in
mov
nop
dec
dec
cmc
sbb
push
mov
mov
js
loope
pop
sbb
jl
inc
sub
test
std
mov
ret
adc
push
xor
mov
push
adc
xor
xchg
lahf
mov
mov
push
icebp
sbb
push
push
mulb
adc
int
cmp
pusha
loopne
shr
aad
push
sub
mov
out
mov
xorb
repz
dec
das
jge
mov
push
mov
lcall
pop
movb
push
repnz
or
std
cmpsb
dec
icebp
mov
jns
les
add
push
pop
je
lea
enter
inc
cmpsb
lock
inc
dec
dec
push
jo
pop
and
mov
insb
into
mov
add
pop
rorl
and
fldcw
loope
and
xor
jge
cmp
xchg
mov
dec
or
push
fcmovb
cli
faddl
loop
adc
push
test
cmp
lods
data16
fnstenv
jecxz
dec
gs
xchg
fisttpll
sti
dec
dec
ja
push
std
mov
fcompl
in
mov
ret
je
pop
pop
subl
je
xchg
xchg
pusha
out
pop
icebp
and
cs
mov
cmp
mov
pop
add
pop
shll
loope
or
jecxz
sbb
sbb
push
bound
sbb
fisttpl
aam
cltd
dec
stos
dec
inc
mov
fnstenv
adc
arpl
out
or
loope
sub
inc
push
dec
popa
dec
ret
xchg
out
pop
sub
jle
imul
xor
cmp
shrb
mov
popf
cmc
outsb
pop
lret
lret
jle
xor
adc
xor
jns
sbbb
cmp
jnp
dec
cmp
sbb
mov
loop
cmp
dec
sbbb
xchg
stos
push
or
sbb
and
adc
mov
sbb
cmc
xchg
pop
loopne
add
mov
mov
push
inc
rorb
shll
sub
jecxz
adc
mov
outsb
aam
inc
les
in
mov
mov
pusha
scas
xor
fildl
pop
sbb
ja
out
pop
or
rcrb
cmove
xor
inc
sbb
fpatan
sti
imul
xchg
pop
fimuls
mov
test
mov
mov
lods
sub
nop
dec
imul
in
stc
out
in
adc
mov
xlat
test
sbb
push
flds
dec
jnp
pop
mov
mov
push
loopne
imul
mov
arpl
mov
cmc
lock
loopne
and
push
push
xacquire
mov
fsubl
negl
aam
mov
repz
cli
pop
insb
std
scas
sub
adc
lahf
int3
repnz
pushl
mov
xchg
mov
aad
mov
dec
xchg
fistps
cmp
fcoms
inc
std
loop
sahf
pop
mov
fdivs
adc
out
xchg
movsl
jb
cmp
dec
je
or
ss
mov
cwtl
into
jl
das
push
inc
lea
xchg
sbb
push
add
mov
and
ljmp
test
mov
mov
pop
mov
mov
add
outsl
mov
iret
in
mov
adc
dec
enter
orl
ljmp
push
fs
int3
sub
fs
std
pop
push
mov
das
inc
fcmove
sub
ds
xor
sub
lret
dec
cmpsb
imul
xchg
sti
push
xchg
push
jle
dec
mov
add
and
cmpsb
mov
xor
fcmovnb
clc
jle
xchg
mov
shrl
mov
push
pushf
loopne
push
sbb
mov
xchg
jo
push
testb
push
gs
mov
imul
xor
sar
daa
js
jnp
repz
dec
push
je
or
outsb
mov
fistpll
cmp
imul
sar
or
lods
xor
int3
clc
cwtl
push
stc
dec
adc
lods
xor
cmp
test
or
mov
push
aad
mov
push
dec
hlt
ds
mov
and
dec
addr16
and
jns
pop
movsb
sub
shrl
fxch
aad
movsb
xor
stos
das
add
ret
cmp
mov
out
cld
mov
pop
ds
xchg
lods
mov
loope
filds
xchg
aas
xchg
fdivs
ret
mov
or
fidivl
addl
adcb
xchg
mov
mov
pusha
jl
aam
imul
ds
or
fprem
out
cmc
push
sbb
cli
stc
pop
divb
pop
call
test
sbb
imul
add
sahf
cmp
movsl
orl
decb
in
xor
shl
nop
lock
sbb
mov
inc
or
mov
jb
cmp
push
lret
mov
and
cmc
jb
dec
xor
push
ret
xchg
cmp
add
cwtl
sti
adc
xchg
loopne
js
in
adc
divb
dec
jae
and
mov
in
jle
xrelease
sub
adc
xlat
stos
shrb
mov
fs
cmc
fidivs
cltd
dec
incl
sbbb
cmpsl
mov
in
out
lods
cwtl
test
push
xchg
cwtl
pop
and
invd
mov
incb
daa
jno
xchg
jge
cmpsl
xchg
enter
sbb
xchg
pusha
cmp
fsts
xchg
in
outsb
les
sti
lock
pop
fcomip
lcall
mov
ret
ljmp
mov
or
out
repnz
push
jae
popf
xor
xchg
xchg
add
loopne
or
lea
hlt
and
test
lahf
ss
xchg
sbb
lahf
in
cmpsb
aaa
les
cs
arpl
rorb
jne
xor
cmpsb
xor
xchg
jnp
or
fsubl
pop
int
inc
mov
push
cmp
in
loope
mov
sbb
push
push
sub
mov
dec
lea
mov
lods
jb
push
sub
jae
clc
aas
dec
cwtl
iret
push
lahf
xchg
push
xchg
fxtract
out
lea
imul
andl
and
pushf
aas
fistpll
add
lods
push
push
popf
cwtl
dec
lock
pop
mov
je
dec
jns
test
sbb
sbb
jl
test
inc
repnz
mov
clc
ficoms
add
enter
insl
mov
inc
dec
scas
daa
in
pop
adc
rol
push
mov
test
cmpb
mov
hlt
push
jnp
cld
cmp
xor
add
mov
and
mov
inc
aad
push
lods
stc
push
dec
lea
leave
dec
aas
sbb
imul
lods
loope
cmp
cmp
sub
nop
push
je
push
add
adc
lret
je
jne
mov
pop
sub
xchg
clc
or
setle
inc
int
movsl
add
inc
pop
sub
lods
std
ja
insl
jno
jp
add
enter
ljmp
and
std
loop
sahf
or
popa
sub
aaa
sub
xchg
fmuls
mov
jg
dec
enter
clc
pop
test
mov
into
pop
jb
mov
and
mov
mov
gs
push
sub
cs
or
es
jl
and
int3
je
inc
add
lret
or
push
mov
xor
iret
xchg
scas
pop
pop
lahf
jae
cmp
and
push
int3
insl
int3
lahf
sahf
xchg
nop
loope
iret
and
jno
push
mov
cs
mov
mov
inc
pop
push
test
lea
ds
pop
jp
repnz
test
insl
mov
or
inc
xchg
jnp
push
jae
mov
in
pop
jl
in
pop
mov
dec
jg
std
xchg
jmp
adc
dec
ss
xor
scas
dec
int
add
faddl
nop
sbb
test
divb
mov
dec
or
mov
jbe
adc
stc
inc
call
ja
test
inc
jne
xchg
fdiv
add
mov
jns
fs
mov
mov
sbb
add
leave
sub
lea
iret
loopne
add
shlb
fldenv
xchg
xchg
adc
faddp
mov
mov
out
stc
outsl
imul
les
fisubrl
mov
std
push
lret
mov
ljmp
popa
mov
jle
rol
repnz
repz
cmc
lods
imul
mov
into
pop
fndisi(8087
ss
mov
push
lds
aam
adc
stc
int
jp
dec
loopne
mov
std
sbb
sub
inc
je
into
pop
sbb
xor
push
ret
scas
cmc
in
shl
cwtl
xchg
ja
addr16
mov
sbb
fbstp
mov
jae
sahf
fwait
lahf
imul
cli
push
cltd
sbb
push
pop
ja
outsb
pop
add
rcl
mov
aas
cmp
add
cmp
scas
jno
loope
daa
mov
push
movsb
hlt
adc
outsb
and
cmpsl
xchg
lods
clc
dec
sbb
dec
or
jbe
inc
sahf
push
lret
cmc
cmp
or
into
inc
inc
cmp
or
fisubs
daa
lods
addr16
in
xor
push
and
leave
ds
xchg
shll
stos
mov
data16
pop
xchg
rcll
insb
and
shr
test
sbb
jecxz
movb
imulb
inc
mov
push
adc
adc
lods
int3
test
pop
test
das
into
adc
mov
cmp
and
push
loopne
xchg
cmp
xor
out
fsts
stos
iret
lahf
lds
movsb
or
push
push
sarb
les
mov
ja
sub
push
fidivs
mov
jno
cmpsl
push
mov
ljmp
push
mov
setge
nop
test
in
imul
lret
lods
push
enter
dec
pushf
rcll
fs
ja
out
xchg
subb
push
scas
jg
xchg
inc
or
adc
xchg
mov
and
cli
cmp
sub
insb
dec
leave
loop
loope
out
push
mov
or
pop
push
jecxz
clc
jo
imul
aam
ljmp
ret
out
push
das
pop
mov
fyl2xp1
sbb
nop
push
stc
mov
negb
stos
sbb
cmpsb
rcr
sub
sbb
sbb
jo
fldt
imul
lock
std
xor
mov
jo
es
and
sarb
or
lcall
pop
neg
push
mov
dec
cmpsb
rcll
jecxz
test
mov
adc
cwtl
bound
mov
mov
loop
icebp
dec
aam
in
mov
cmp
inc
divl
mov
add
xor
fstpt
jp
and
cwtl
pop
cmpsl
ret
push
mov
popa
insl
mov
or
push
aad
scas
sbb
movsb
sarl
xchg
enter
push
mov
push
push
lods
push
out
push
in
sub
lret
adc
call
and
mov
mov
fildll
xchg
xor
out
and
add
enter
or
xchg
push
add
pop
or
addr16
mov
lcall
cmpsl
jae
dec
or
repnz
dec
movsl
mov
mov
fmull
mov
daa
popf
sbb
ds
ffreep
inc
xor
and
enter
rcrb
orl
pop
aas
test
lret
pop
ss
orb
push
ret
fstpl
cs
bound
push
inc
mov
sarb
mov
dec
aam
shr
adc
mov
fcomps
xchg
les
dec
inc
paddusw
jno
pop
dec
dec
mov
dec
outsb
push
nop
dec
test
cmp
pop
outsb
push
out
push
jne
mov
push
lds
and
popf
mov
addr16
inc
dec
jl
adc
mov
inc
insl
loope
mov
or
cwtl
mov
ja
jno
cmpsb
fwait
ja
scas
add
mov
dec
add
mov
pop
cmpsb
shrl
aaa
and
sub
stos
fcomps
mov
gs
pushl
xchg
fidivs
pop
orl
adc
push
inc
rcrb
aad
pop
mov
test
dec
mov
pop
into
and
sub
push
or
pop
jge
inc
pushf
sarl
dec
aaa
scas
and
sbb
in
les
add
mov
lds
inc
imul
mov
pop
les
sbbb
in
sbb
mov
or
push
add
test
xlat
add
and
subl
clc
mov
sar
pop
std
cmp
xchg
or
mov
jne
aad
pop
loope
add
xchg
in
inc
add
mov
sbb
mov
jg
movsb
lcall
and
and
xor
xor
mov
pop
or
push
fwait
sti
pop
aas
push
adc
jnp
inc
pop
sub
ret
and
xchg
mov
lds
js
push
es
cmp
adc
xlat
mov
push
mov
ret
jno
cmpsb
xchg
insb
dec
adc
js
sbb
pop
outsl
mov
scas
jl
aad
lcall
sub
and
shlb
add
mov
into
aaa
xchg
iret
push
and
sahf
es
cmp
lahf
rcrb
out
es
mov
dec
add
nop
inc
mov
xchg
xor
or
ja,pn
adc
xor
or
add
mov
imul
popa
sbb
sub
es
cmp
mov
push
dec
cmpsl
sahf
call
inc
adc
sbb
adc
mov
fnstsw
out
dec
mov
lret
mov
push
loopne
les
mov
scas
addl
in
sbbl
repnz
dec
les
pop
mov
daa
jb
xchg
cmp
pop
xchg
mov
xor
outsb
push
fistps
jb
cld
adc
xor
sete
shl
add
call
cmp
add
and
push
loopne
scas
stc
and
aas
int3
and
xor
adc
outsl
cmp
leave
push
enter
insb
inc
dec
insl
arpl
fcomp
int
loopne
ja
negb
sub
push
js
outsl
inc
xchg
lret
out
sbb
lahf
ret
dec
jae
sbbl
cmp
dec
adc
out
push
push
mov
mov
imul
lret
scas
nop
xchg
adc
or
mov
pushf
mov
pop
fwait
arpl
imul
pushl
test
dec
loopne
clc
sbb
loop
xor
das
test
and
imul
addb
and
add
ljmp
movsb
aam
cmpsl
subb
stos
and
xchg
out
mov
std
or
adc
push
jbe
imulb
popa
out
icebp
je
sahf
dec
fildll
xor
pop
push
arpl
adc
mov
mov
push
inc
stos
sahf
push
daa
aam
fsubs
aad
mov
jb
sbb
mov
sbb
mov
push
lret
sahf
fistpl
xor
mov
add
neg
jg
pusha
dec
inc
pop
adc
adc
gs
xor
pushl
stos
imul
cwtl
aaa
mov
jne
fs
imul
dec
add
mov
sbb
xor
fildl
fcomps
mov
xor
xchg
das
int3
adc
scas
cmp
jg
xorl
push
psubq
out
inc
dec
incb
mov
or
stc
cld
push
xor
scas
mov
andl
shrb
push
xchg
cmp
xchg
cld
and
test
cld
dec
cmpl
jl
and
jmp
fwait
mov
push
xlat
push
arpl
bound
and
ljmp
or
adc
cmp
add
fs
xor
or
nop
jbe
push
fsts
fisubl
sub
xor
xchg
test
call
std
lods
sub
pop
int3
mov
pop
jmp
jmp
xchg
push
pusha
cmp
bound
jnp
jl
lahf
cwtl
insb
dec
lcall
jg
je
pop
mov
push
push
ss
mov
and
cs
xchg
faddl
adc
in
sub
aaa
pmaxub
aaa
sub
jmp
inc
pop
mov
mov
mov
dec
dec
mov
cmp
mov
cmp
aam
xlat
inc
jle
push
orl
notb
jle
jb
shl
sbb
xchg
out
lock
xor
cmp
inc
ja
pop
or
int
adc
xchg
mov
js
test
mov
sbb
pushf
fistl
in
fwait
xor
pop
cmp
das
dec
clc
adc
sbb
inc
sub
jecxz
jbe
out
out
sub
cmp
jb
xchg
xchg
cmc
sbb
jo
clc
adc
and
in
mov
mov
cmp
push
imulb
mov
popf
xlat
js
inc
ror
mov
insb
popf
test
mov
mov
aas
cs
mov
sub
rorb
cmp
mov
mov
jmp
mov
das
lock
lods
bound
nop
dec
mov
sub
aaa
insl
testb
inc
pop
cmp
sbb
xchg
dec
add
inc
mov
cwtl
cmpl
jmp
and
fiaddl
mov
outsb
and
mov
xlat
mov
sbbb
test
enter
imul
adc
andb
adc
inc
test
loopne
sbb
addr16
mov
xchg
lret
push
pop
jb
fwait
push
cmpsl
cmc
bound
cmp
fsubrl
or
and
jge
lahf
xchg
inc
roll
negb
jns
cmp
push
pop
jl
cmc
fsubrl
sub
ret
out
xchg
imul
decb
mov
popa
cld
add
mov
scas
lret
xchg
pop
ljmp
push
mov
adc
sbb
or
push
stc
push
sbb
lret
mov
popa
gs
sub
lds
cwtl
outsl
jl
popf
clc
mov
nop
sbb
mov
jecxz
jbe
fldl
fcompl
xchg
inc
lret
adc
mov
sbb
mov
and
mov
add
sahf
into
sahf
ret
adc
aam
and
cmp
into
imul
or
jb
pop
pop
inc
xor
push
and
test
shlb
jecxz
adc
js
mov
inc
add
pop
sbb
mov
add
jns
mov
jo
sbb
sbb
sbb
push
jle
xor
pop
mov
popa
loope
mov
and
jo
xchg
enter
sti
or
loop
adc
adc
jb
pop
lahf
mov
inc
push
adc
imul
mov
inc
pop
out
cmc
xchg
popf
test
jo
ret
lret
aam
scas
sti
mov
jge
jns
ficompl
or
push
cmc
xchg
loope
movsb
bnd
lods
cmpsl
lcall
and
sbb
dec
out
xor
daa
loope
cmpsl
inc
sub
daa
xchg
mov
mov
cwtl
inc
ljmp
jne
or
mov
aad
cld
in
xchg
push
aaa
push
loop
and
arpl
mov
ss
or
add
push
xchg
mov
adc
sbbb
push
cmpsb
xchg
dec
stc
mov
sti
push
inc
iret
mov
pop
fnstsw
xor
inc
mov
xor
add
lds
stos
lret
mov
cmpb
mov
imul
jg
jg
jmp
jge
scas
test
mov
jne
enter
jl
or
mov
xchg
ja
fdivr
sti
dec
push
mov
lcall
aad
scas
cmp
aam
scas
test
pop
jnp
push
imul
mov
or
sahf
inc
gs
shll
fnstsw
cwtl
xchg
mov
outsl
loopne
andb
scas
fidivs
stos
jb
into
les
mov
orl
sub
push
int3
mov
test
xchg
sbb
lea
mov
jp,pn
cltd
cmpsb
cwtl
int
out
jb
jbe
scas
xor
loop
int3
pushf
pushf
adc
cld
xor
adc
mov
pusha
inc
sbb
sub
aam
popa
inc
mov
dec
cwtl
imul
test
mov
in
push
dec
hlt
and
fidivs
stc
jb
xchg
pop
push
test
pop
dec
add
cmpsb
testb
fstp
or
int3
int3
repz
and
clc
movsb
clc
jnp
xchg
push
push
rclb
mov
push
inc
cld
add
add
push
rcll
repz
inc
xor
jmp
sbb
xor
orb
sbb
fdivl
sub
push
loop
add
mov
add
pop
cmc
hlt
or
nop
xchg
aaa
aas
jle
out
rol
call
sarb
add
mov
mov
or
addb
cmp
jle
in
into
ficompl
outsl
das
cmp
xchg
cmpsl
add
mov
xor
loopne
test
cmc
xchg
call
mov
dec
add
push
outsb
test
sbb
and
fidivrs
test
faddp
pusha
pop
je
addr16
push
pop
jle
lcall
fsubrs
ret
icebp
imul
mov
dec
sahf
pop
ss
outsl
xchg
jp
pop
sub
popf
leave
push
and
xor
lret
fstps
adc
scas
adc
repz
xor
or
aam
iret
mov
call
notb
shll
dec
pop
cmp
dec
iret
pop
push
dec
add
cmp
cld
icebp
push
sbb
ljmp
or
sbb
inc
test
insl
stos
cmp
mov
dec
add
lock
test
icebp
in
mov
outsl
dec
pop
add
or
pop
outsb
xchg
xchg
test
rcrb
inc
add
cwtl
jbe
lcall
movsb
shl
sbb
mov
jns
mov
repz
inc
push
fcoml
ret
int3
ss
loop
pop
aas
mov
and
or
fdivl
dec
pop
mov
rorb
fcompl
or
pusha
pop
mov
adc
mov
lods
ja
mov
nop
add
js
popa
sbb
adc
and
ss
pop
pop
cmc
subl
pop
decb
pusha
adc
flds
xchg
sbb
testl
xor
add
shl
cmpsb
in
lods
and
arpl
xchg
fwait
adc
fiadds
movsb
cmpl
or
xor
adc
stc
leave
mov
imul
inc
add
int3
add
cmp
in
sti
stc
insb
bound
cmp
scas
push
pop
xor
mov
adc
pop
sbb
lds
or
inc
loop
push
pop
pop
jb
mov
out
dec
rol
jae
rcll
fisubrs
sub
pop
jno
fmull
fstl
ficoml
pop
cmp
pop
ds
add
js
in
stos
xchg
jns
nop
inc
or
adc
cli
or
gs
faddl
push
mov
shr
xor
xor
pop
mov
jo
mov
inc
cmpsl
cmp
std
xchg
and
in
scas
movsb
outsb
push
xor
push
push
daa
inc
cwtl
sbb
mov
out
xor
mov
stos
cwtl
incl
mov
ljmp
fwait
adcb
dec
or
add
lret
jb
jo
pop
add
test
mov
ss
push
mov
adc
test
aad
push
rcrb
test
jmp
je
mov
dec
jbe
in
mov
out
mov
subl
scas
aad
adc
jl
incl
jp
mov
cld
mov
dec
adcb
stos
add
in
xchg
fsubr
sbb
push
push
push
push
div
xor
lcall
repnz
xchg
std
lds
dec
movsl
in
fsubrl
repz
int3
or
sbbb
jbe
adc
in
xchg
inc
mov
push
mov
leave
scas
sbb
xchg
mov
xchg
cwtl
cmpsl
mov
ret
mov
ljmp
and
jb
fidivrs
les
sub
mov
lea
jo
ret
dec
outsl
ss
sahf
cld
inc
pushf
lods
inc
pop
push
inc
sbb
fiadds
sahf
into
cmc
cs
lock
adc
sub
adc
jne
es
sub
daa
std
sub
aas
nop
loope
inc
rolb
mov
sub
mov
jl
push
inc
xchg
adc
sbb
and
in
dec
sub
cmp
xchg
mov
jle
xlat
in
pop
pop
xchg
xor
and
unpckhps
cmp
fwait
jg
xor
sbb
adc
xor
sti
pop
mov
sub
mov
stc
cmp
lods
push
lods
jb
adc
in
mov
mov
push
inc
fildll
push
sub
jae
fldcw
aad
mov
dec
pop
dec
push
jmp
hlt
dec
test
fwait
jno
cltd
sti
jne
test
mov
mov
push
jo
out
gs
popa
outsl
and
idivb
je
jp
add
fnstcw
sbb
and
jle
adc
dec
sbb
jnp
ja
lea
imull
jnp
dec
inc
xor
flds
test
shlb
push
jle
and
dec
imul
and
push
testb
shll
int
xchg
je
cmpsl
das
and
test
mov
inc
cmp
test
jne
loop
adc
test
push
fdivl
scas
and
push
pop
pop
push
push
sti
xchg
enter
mov
das
xor
sarl
lcall
sbb
push
xor
xchg
inc
push
fnstsw
cmp
sahf
test
pop
mov
pop
mov
lods
dec
shlb
push
pop
ficomps
arpl
pushf
aam
cmpsb
inc
xchg
mov
pop
push
fwait
stos
mov
lret
notl
gs
dec
add
cmpl
loop
adc
es
rolb
xchg
aaa
iret
xchg
mov
jne
in
cmc
pop
sbb
mov
jae
mov
xchg
cmc
add
jg
shlb
pop
inc
movsb
inc
inc
inc
rcll
das
sbb
out
inc
imul
push
aad
xchg
ss
xor
test
aas
sarl
pop
pop
cmp
int3
pop
insb
jmp
and
sbb
mov
mov
push
cwtl
mov
aaa
sub
or
jg
xor
xchg
sbbb
ja
sub
adc
add
push
pop
cmp
ret
lret
sub
popl
sbb
clc
jg
push
inc
fwait
or
fildll
pop
pop
sti
in
adc
or
or
and
push
adc
adc
loop
enter
or
rclb
rcr
xchg
push
cmp
inc
jge
imul
lock
lock
call
out
pop
scas
sbb
push
pop
fldcw
out
mov
mov
lret
scas
pop
jp
cmovno
scas
clc
sbb
insb
xchg
mov
pop
sub
inc
or
mov
inc
repz
fs
xchg
or
sahf
xchg
xchg
push
adc
mov
popl
push
dec
sub
jbe
inc
sbb
bound
or
repz
jmp
stos
nop
lods
movsl
int
fbstp
pop
add
in
cmp
xor
mov
adc
addr16
push
hlt
jg
pop
out
lods
push
out
fidivrl
dec
push
movl
sub
xchg
fsub
inc
pop
movsb
pop
loopne
imul
pop
lret
and
sub
ret
std
jbe
outsb
jnp
cmp
ror
ret
fwait
mov
jns
pop
xchg
jp
pop
push
and
xchg
push
mov
dec
mov
scas
out
mov
enter
jo
das
cmc
push
fsubl
rorl
jg
fmull
ss
cltd
mov
sbb
or
push
and
push
repz
fbstp
stc
enter
adc
je
add
fistl
add
jns
mov
xchg
mov
rolb
push
mov
mov
movsl
daa
lock
daa
push
ljmp
fcos
aad
mov
outsb
adc
jmp
sub
outsl
out
dec
jae
mov
ret
frstor
push
negb
test
daa
add
leave
push
and
repz
mov
clc
pop
loop
push
mov
enter
orl
cmp
ja
or
or
sarb
xchg
and
mov
add
insl
in
add
in
loop
fwait
cmp
or
leave
or
hlt
xor
loop
ds
sub
mov
cli
adc
les
dec
pushl
out
add
and
lods
cltd
ja
or
in
push
mov
je
insl
xchg
out
or
push
sub
pop
popf
and
xchg
xchg
jge
je
out
mov
xchg
mov
pop
outsl
push
ja
outsl
pop
xor
jg
add
lods
cmc
adc
pop
jecxz
lods
int
push
loop
mov
lods
imul
repnz
lret
inc
je
cmc
mov
pop
xor
adc
push
ret
and
call
scas
add
fldl
sti
pop
mov
repz
imul
aam
cmpb
or
mov
cmp
ljmp
dec
mov
sarb
add
lret
ret
sub
outsl
xchg
std
push
jp
xchg
adc
call
inc
adc
lcall
dec
rcrb
stc
mov
or
scas
inc
fs
add
aaa
cld
add
xchg
call
inc
sub
mov
pop
sbb
outsb
out
and
mov
rolb
sub
mov
sahf
pop
popf
and
fcoml
mov
xor
icebp
xor
pop
push
mov
rclb
or
xorb
fiaddl
mov
outsb
add
push
pop
add
and
mov
outsb
movsb
jmp
cmp
lea
mov
or
mov
mov
mov
pop
jecxz
jle
sub
orb
xor
pop
mov
jo
hlt
push
add
insb
fisubrl
cwtl
xor
xchg
stos
add
test
ja
xchg
jl
xchg
push
sbb
adc
mov
mov
cld
add
je
dec
pop
int
clc
push
push
push
arpl
sbb
stos
loopnew
mov
jb
jecxz
dec
jmp
inc
adc
cmp
mov
bnd
push
imul
lea
cwtl
pop
lret
gs
lods
mov
arpl
ret
jl
lods
clc
pop
jns
dec
mov
dec
sar
add
inc
push
mov
mov
dec
je
cmp
push
mov
sbb
sub
jmp
fistps
mov
fsubs
add
aad
mov
out
add
dec
inc
scas
adc
xchg
adc
push
lahf
push
shrb
testb
repz
inc
or
sub
dec
mov
dec
xor
nop
jmp
sub
xchg
inc
lret
cmpsl
mov
fcoml
push
xor
rcr
in
mov
mov
mov
iret
test
cs
lret
pushf
inc
shll
lds
call
pop
adc
or
fwait
shll
dec
push
sbb
xchg
pop
cmp
adc
inc
xor
call
test
xchg
and
ret
test
mov
rcrl
push
jne
and
loope
mov
xchg
push
rolb
pop
mov
outsb
sub
mov
mov
ret
push
outsl
xchg
shlb
jl
ret
cmp
in
cmc
push
into
icebp
shlb
inc
mov
sub
daa
xchg
mov
fs
adc
pop
jnp
insb
int3
popf
bound
mov
xchg
orb
fcomps
cmp
pop
das
inc
stos
sub
push
fdivrs
cltd
loopne
call
sub
andl
std
aas
in
outsl
popa
dec
xlat
push
movsb
sbb
ja
orl
test
and
imul
mov
sub
icebp
and
push
rolb
push
pop
mov
mov
jne
movb
ror
push
subl
adc
adc
int3
mov
adc
movsb
sbb
sub
adc
sub
xchg
cltd
std
dec
pop
fdivrl
sahf
xchg
orl
and
insb
xlat
jno
sbb
out
in
jno
mov
sub
jno
jg
cli
subl
movsb
aas
rclb
mov
or
add
ffreep
or
push
adc
mov
xchg
or
movsl
mov
lret
xchg
pusha
push
mov
nop
mov
cmp
imul
mov
cmp
mov
cmp
adc
arpl
pushf
arpl
and
cmp
loop
or
ja
shll
jb
push
and
shl
mov
mov
cltd
sub
cmpsb
push
xlat
outsl
mov
lret
xchg
inc
lods
loope
xchg
jmp
add
ficoms
jns
daa
es
mov
pop
add
cmpsb
rclb
mov
fwait
idiv
mov
pop
cltd
in
je
leave
insl
push
cmpsb
test
add
xorl
lcall
daa
loop
popa
mov
cmpsb
lcall
jle
aam
inc
push
xchg
cmp
add
push
rol
das
lock
sbb
jne
pop
mov
mov
sbb
mov
and
mov
push
fisttpll
in
das
cld
out
icebp
push
pop
push
dec
mov
pop
dec
mov
test
mov
sysexit
cmp
sub
sub
jl
clc
pop
push
das
bound
stos
xor
out
sbb
scas
sub
outsl
es
adc
rolb
out
addr16
xor
mulb
imul
scas
shl
hlt
push
ror
pop
inc
fdivrl
stos
cli
enter
ret
xor
lds
cltd
lcall
xor
add
jecxz
mov
dec
lds
add
jge
notb
pusha
mov
arpl
push
jmp
or
sub
sub
pusha
iret
movsb
sub
jb
add
and
in
cmp
jne
scas
xorb
add
pushf
mov
mov
xchg
les
icebp
cmp
aaa
dec
test
jmp
hlt
fsts
addr16
nop
or
dec
fs
inc
pop
scas
xchg
dec
mov
xor
or
iret
xor
inc
dec
sarb
mov
jbe
and
mov
and
test
outsl
dec
cltd
addl
sub
push
xor
jbe
adc
cli
mov
insl
push
xor
sar
xor
mov
loope
pushf
daa
adc
sub
clc
xchg
roll
sbb
sub
jbe
or
test
inc
lods
ror
pop
popa
or
scas
movb
shufps
sub
je
insb
ret
scas
pushf
movsb
mov
out
pusha
push
or
and
imul
sub
xchg
sbb
or
add
jge
cmpsl
cltd
clc
mov
addr16
mov
push
mov
mov
pop
les
pop
pop
mov
lods
out
mov
mov
mov
jle
movsl
ret
adc
adc
jge
adc
adc
adc
lret
jg
jecxz
jns
xor
xor
adcl
lods
pushl
pop
dec
test
out
lods
sbb
cwtl
mov
push
xor
rcll
fstp
push
out
xor
xor
xchg
stos
sub
sub
sbb
xchg
aad
shr
out
ret
add
pop
decb
adc
and
lea
inc
data16
test
shl
ja
or
jp
push
aaa
xchg
filds
inc
mov
mov
jp
cmp
mov
sti
cmpsb
pop
adc
lock
loopne
lock
lret
push
inc
mov
sub
sub
icebp
sub
jp
mov
imul
mov
xlat
mov
mov
ret
inc
jp
addl
inc
cmp
add
dec
inc
sub
mov
mov
or
push
lock
mov
inc
test
mov
aaa
int
or
cmp
lods
insl
xchg
cmpsb
lcall
flds
js
xlat
enter
cmpsl
sub
add
imul
inc
or
cmpsl
stc
popf
sarb
in
inc
sbb
lcall
adc
mov
adc
sbb
int
push
xchg
adc
pop
jae
xor
mov
pop
les
jns
sub
adc
das
cwtl
shrb
add
cld
pop
jbe
mov
jo
fsub
inc
xchg
push
cmp
iret
mov
ja
push
mov
imul
bound
pop
ja
mov
movsl
adc
std
outsl
cs
outsl
adc
out
and
add
cli
xchg
sete
add
iret
orb
mov
cmpsb
in
mov
and
data16
int3
cmp
test
fldt
push
push
orb
push
add
jmp
ljmp
lahf
dec
fs
insb
into
push
mov
mov
sbb
xchg
pop
mov
insb
pop
push
notb
fcoml
jae
mov
push
or
call
sub
jns
adc
daa
das
sbb
cmp
cmp
add
es
xchg
pop
repnz
xchg
pop
adc
sbb
jg
or
or
pushl
lods
pop
ja
addr16
je
adc
fisttpl
and
orb
daa
rol
lods
sub
jmp
pushf
and
insl
popa
in
ss
aas
popa
shll
xor
out
fldcw
sbb
lea
in
dec
push
lds
dec
lds
aad
jp
shll
adc
mov
jbe
fs
stos
inc
imul
cmp
fistpll
wbinvd
jmp
out
lods
std
shll
and
push
test
test
jno
loopne
cld
sbb
outsl
sbb
pop
sub
inc
dec
adc
mov
or
mov
inc
jecxz
mov
inc
nop
aas
cmp
add
adc
arpl
gs
adc
mov
imul
mov
fwait
and
into
xchg
mov
bound
mov
arpl
scas
mov
sti
int
add
jmp
xchg
cmp
das
adc
or
sarl
fs
sbb
xchg
in
js
sbb
sbb
push
inc
cmpsl
or
or
dec
in
mov
inc
jge
shrb
mov
mov
push
cli
sub
out
lock
fs
daa
ljmp
fabs
xor
mov
jne
add
and
ds
adc
orl
lcall
fwait
cmpsl
mov
lret
js
js
xlat
test
mov
xor
es
sub
arpl
mov
or
adc
mov
js
adc
div
stos
cmc
adc
scas
inc
xor
imul
mov
movb
mov
pop
inc
fnstenv
inc
fsub
inc
mov
pop
mov
jnp
test
xor
cld
mov
adc
addr16
jge
mov
mov
fisttpll
rol
divb
in
push
shll
mov
faddp
xchg
aaa
dec
in
push
std
add
dec
xchg
xchg
mov
stos
xor
push
adcl
in
in
add
stos
imul
shlb
mov
mov
jecxz
xchg
sbb
in
jbe
sbb
int3
scas
push
in
shlb
dec
adc
lahf
cmp
rclb
or
push
push
in
enter
fidivs
or
sub
dec
enter
outsl
icebp
orb
aaa
cmp
ja
sub
fadd
cmp
sub
out
sub
sub
or
inc
je
sub
pop
ss
div
push
ljmp
rcrl
jbe
mov
inc
ffreep
cli
push
adc
cmpsl
sub
lret
ljmp
lods
dec
or
lods
jg
cmp
rcl
sub
test
jle
adc
mov
test
popa
scas
mov
fsubrl
xor
imul
sbb
lock
cmp
test
add
in
fs
js
int
mov
adc
dec
mov
idivl
aaa
inc
or
lahf
jbe
test
mov
adc
mov
push
testl
inc
bound
pop
loope
push
xor
ret
rclb
rcl
roll
push
dec
rcl
add
mov
mov
jnp
inc
xchg
out
sub
jb
out
xchg
imul
push
lds
mov
add
mov
cmpsb
je
ret
ljmp
jl
pop
mov
in
popa
push
push
push
adc
aad
pop
dec
rcr
scas
jns
outsl
xchg
or
repnz
or
shrl
dec
cmp
inc
js
das
or
dec
sbb
icebp
inc
lds
mov
cwtl
test
pop
pop
mov
in
stos
filds
loop
push
dec
sub
pop
add
cmp
popf
das
mov
scas
mov
sub
xor
jb
jnp
sbb
cmp
cmp
int
test
mov
cmp
stos
loop
or
or
mov
add
dec
stos
jns
push
out
pop
icebp
dec
insb
cmpsl
test
mov
ret
dec
push
aam
dec
notb
mov
inc
je
pop
add
int
rolb
movsl
cmp
ja
lds
adcb
lods
imul
lock
rcrl
mov
sbb
mov
adc
sarb
xor
mov
cwtl
fcmovb
xlat
test
cmpb
adc
add
neg
inc
in
je
and
sbb
add
mov
aam
imul
in
xor
arpl
repz
jno
sahf
pop
inc
int
imul
repz
sbb
pop
mov
scas
filds
dec
idivl
mov
or
shll
repz
push
repz
xlat
jp
pop
lahf
mov
pop
cmc
sbb
inc
inc
ret
negb
xchg
shlb
ret
cmp
cmpl
inc
xor
push
not
mov
neg
mov
cmp
inc
pop
dec
scas
pop
popa
inc
aam
out
sbb
outsl
sub
xchg
stos
cmc
pop
dec
xchg
pop
into
sti
rclb
sahf
pop
jno
xor
mov
push
int3
mov
imul
stc
jmp
dec
jecxz
fwait
out
cmc
pop
test
sub
sti
jb
and
stc
mov
roll
ss
mov
test
push
mov
out
adc
ror
or
mov
addr16
scas
push
stc
js
fidivrl
push
std
cmp
pop
clc
sbb
cmpsb
movsb
pusha
in
fwait
movsb
sarl
and
pusha
gs
cmc
loopne
stos
icebp
xor
jne
rolb
xor
sbbb
stos
xor
jge
lret
nop
jmp
iret
mov
jne
push
add
test
mov
das
dec
test
lods
mov
pop
fsubl
pop
cli
push
xchg
inc
sbb
ds
xor
lods
jns
lret
jnp
daa
sub
popa
lods
sahf
cld
flds
mov
popf
int3
sub
push
mov
dec
push
or
fcoms
and
shlb
test
jl
loopne
mov
pushf
ss
call
pusha
in
ljmp
loopne
cmp
mov
push
jno
pop
jecxz
add
jecxz
mov
cltd
sbb
shrl
lret
adc
sub
movsl
push
out
pusha
in
cli
push
lea
mov
cld
ficoml
loopne
fwait
mov
push
cltd
icebp
mov
aaa
push
adc
jecxz
jecxz
cmpb
inc
jg
inc
jge
call
xchg
loop
fstpt
sbb
or
orb
jnp
or
outsl
push
sbb
sbb
aas
test
push
and
insl
flds
push
mov
push
lods
xor
jnp
rcll
and
add
movsl
aad
loope
cmc
call
mov
ljmp
mov
loop
pop
pop
ljmp
mov
mov
push
sbb
bound
mov
sti
pop
sub
lret
pop
fs
js
shr
aaa
jecxz
jecxz
or
outsl
jle
ljmp
pushf
sar
cmpsb
scas
scas
fdiv
mov
push
mov
shlb
and
stc
fisttps
lods
push
ljmp
cwtl
pop
cmc
adc
cld
mov
adc
dec
fcomps
dec
scas
les
and
imul
add
imul
enter
jle
or
sbb
mov
push
and
fwait
pop
addl
mov
jno
aam
cltd
mov
loope
cmp
sahf
fcomps
pop
out
inc
outsl
push
jmp
or
cmpsb
adc
jbe
pop
fldt
mov
leave
mov
pop
jecxz
jp
das
enter
adcb
arpl
out
sarb
popf
daa
scas
jg
ret
mov
lea
xor
dec
lods
xor
inc
jge
cmp
mov
pop
add
mov
mov
fsts
pop
js
hlt
cmp
cmp
mov
pop
adc
add
daa
arpl
test
push
jbe
sbb
mov
mov
inc
jp
movsb
jecxz
loop
add
dec
mov
and
pop
ljmp
xchg
scas
jmp
inc
xchg
sbb
mov
push
mov
xchg
icebp
xchg
mov
mov
mov
loopne
mov
fiadds
test
mov
push
js
fiaddl
arpl
mov
cmc
and
jbe
iret
xchg
sbb
lods
cli
repnz
dec
ss
fmuls
stos
adc
pop
shrb
push
inc
clc
cmp
sbb
test
push
lahf
pusha
pop
lods
stos
push
sbb
std
fldenv
add
fninit
inc
in
mov
or
pop
clc
push
xchg
xchg
call
mov
push
and
jo
jbe
scas
insb
fstpt
xor
push
pop
cmp
out
mov
into
call
mov
outsb
and
movsb
aaa
insl
rcll
jno
mov
loopne
mov
mov
loop
ficompl
aam
loop
mov
shll
mov
loopne
rclb
mov
es
lock
lock
mov
ror
lcall
loopne
mov
nop
js
push
jbe
ljmp
stos
repnz
negl
fst
pop
add
les
ret
sbb
push
sub
popf
push
xor
inc
jmp
mov
outsb
imul
das
aad
inc
push
and
pop
scas
push
xor
pop
es
jnp
jge
sti
sub
xchg
loope
mov
xor
sti
xchg
jecxz
sarl
xchg
jns
roll
cmc
lods
aaa
rcr
pop
sub
les
shll
sbb
insl
and
jno
aad
call
mov
lds
mov
mov
and
repz
fwait
jno
popa
sub
es
push
test
notl
and
fwait
ds
xor
js
jmp
out
icebp
outsl
and
pusha
push
pop
cmp
jmp
cmp
sbb
push
shrl
xor
clc
scas
hlt
sarl
lret
add
mov
cmc
jne
pushf
push
mov
ret
jb
daa
and
fmul
sub
scas
xchg
inc
imul
mov
cli
sbb
das
jo
inc
inc
jecxz
shl
andb
fsubs
xchg
mov
je
insb
je
or
dec
loop
xchg
out
push
mov
pop
lret
shrl
flds
aad
adc
jbe
push
roll
mov
fcmovne
pop
dec
stc
mov
in
or
jl
int
addr16
shll
mov
cmp
test
jl
imul
mov
stos
pop
lahf
std
dec
cmp
or
sbb
lahf
lods
xor
xor
push
pop
bound
enter
or
lods
mov
fucomp
sbbb
mov
bsr
push
jb
adc
pop
into
loop
repz
mov
cmpsl
lods
xchg
mov
mov
aad
xchg
scas
cmp
push
shl
mov
in
pop
cwtl
int3
pop
into
test
jnp
mov
gs
pmuludq
pop
sbb
mov
inc
pop
mov
int3
xchg
stos
lock
fsubrl
and
jb
lds
mov
push
jge
into
or
jb
mov
decl
cltd
mov
nop
stos
push
fwait
sbb
mov
dec
sbb
shl
imul
cmp
pusha
push
aam
add
lock
mov
adc
push
addr16
cmp
cmp
out
data16
cmp
mov
sub
sahf
push
mov
xchg
push
xchg
mov
shll
repz
les
sbb
stos
mov
popf
jae
pop
ss
inc
int3
xchg
and
jo
int
pop
inc
aaa
pop
or
je
test
mov
inc
es
pop
fdivr
rclb
pop
push
push
pop
int3
jg
jecxz
outsb
push
fwait
fwait
js
aas
loopne
and
call
in
rcll
jmp
movsl
roll
adc
jnp
mov
dec
push
mov
mov
and
or
gs
hlt
push
jg
orb
testl
js
outsl
mulb
lds
popa
add
sbb
insl
sbb
repnz
stos
cld
sub
xor
mov
test
mov
xchg
cld
dec
cwtl
scas
cltd
out
cltd
cmp
push
in
popa
aas
fwait
mov
add
in
jno
insl
jle
hlt
xchg
mov
leave
inc
cmp
jge
cmp
mov
mov
gs
pop
or
aaa
data16
and
push
stos
sahf
push
daa
mov
or
bound
add
outsb
sbb
cmpsb
mov
test
add
lock
insl
xchg
rol
sub
stos
les
enter
cmp
outsb
sub
pop
jae
lahf
je
xor
xor
mov
outsb
ret
arpl
push
xchg
jb
data16
sbb
jecxz
jb
dec
sub
adc
or
outsl
test
repz
insb
cmpsb
dec
mov
sub
cmp
sbb
jae
xchg
jge
inc
gs
icebp
sti
cmpsb
push
fstpt
loope
cmp
not
rcrb
dec
xorb
and
add
pop
adc
dec
dec
pop
je
xchg
loopne
roll
jle
and
or
push
out
push
push
icebp
dec
xchg
xor
push
adc
xchg
push
pop
cwtl
adc
inc
lds
inc
sbb
dec
sbb
leave
repz
inc
daa
data16
push
les
dec
aam
shlb
cmpsb
mov
sti
cmc
fcomps
ljmp
in
mov
rorb
jae
aad
js
cs
repz
popa
sbb
fstps
xchg
mov
adc
es
push
cmp
imul
outsl
andb
xchg
fldenv
outsb
pushf
orps
push
fninit
inc
adc
or
cmp
dec
cwtl
ljmp
icebp
push
dec
fs
and
cmp
add
jmp
and
and
dec
jns
pop
subl
jb
das
jb
hlt
icebp
add
mov
pop
mov
pusha
mov
sbb
nop
test
es
popf
or
test
and
imul
out
cmpsb
or
imul
lahf
and
cmp
xchg
xchg
cmp
or
sbb
fdivr
stos
xchg
mov
sbb
mov
insb
push
aaa
mov
lcall
push
js
cmpb
test
arpl
mul
push
fimuls
adc
jbe
cmpsb
push
mov
ja
pusha
mov
push
daa
sbbl
add
fsubr
mov
sbb
rorl
xor
mov
lods
push
pop
sub
fnclex
mov
or
std
add
sbb
jae
xchg
mov
int
imul
repz
xor
cmp
or
pop
mov
repz
mov
push
inc
popf
loopne
xor
in
push
jb
cmp
mov
aaa
xor
xchg
xchg
xchg
dec
inc
xor
cmp
xchg
in
pop
lds
fimull
lock
int3
sti
dec
movsl
and
sub
dec
mov
xlat
pop
adc
je
out
mov
icebp
xlat
add
pop
call
insl
pop
fimuls
loope
out
inc
rol
xlat
das
es
xchg
xor
addl
pop
mov
sbb
lahf
loopne
xor
inc
leave
adc
cmp
cmp
pop
ds
out
insb
faddl
xor
fdivl
aaa
add
or
fcompl
or
mov
mov
imull
shlb
fdivr
loope
jl
pushf
fsubr
xchg
stc
mov
push
push
xchg
add
pop
lea
xchg
mov
aas
add
shll
std
sbb
inc
hlt
sub
out
cmp
mov
mov
jle
test
or
inc
add
clc
mov
and
mov
in
icebp
aam
orb
out
insb
and
lahf
lcall
push
push
insb
lret
in
iret
iret
mov
add
sahf
pop
shll
filds
ds
into
inc
and
ljmp
clc
ficompl
sbbl
lahf
mov
loop
addr16
dec
sub
inc
sbb
insl
out
jae
or
push
in
fldcw
outsb
jmp
xchg
outsl
in
popf
xchg
pop
mov
dec
jle
es
pop
mov
aas
notl
mov
imul
xor
roll
push
mov
mov
lods
js
xchg
pop
test
and
sbb
jmp
mov
push
jns
fcoms
test
cltd
jp
jo
repz
aas
enter
in
flds
jge
lds
loope
adc
adc
mov
and
movsl
adc
cmpsb
mov
jne
mov
cs
sub
cmc
jmp
push
mov
sbb
inc
je
loopne
dec
or
inc
movb
lods
dec
inc
xchg
insb
cmp
xor
loop
xchg
adc
orl
inc
daa
sar
or
sahf
sbb
push
xchg
lret
push
arpl
mov
cs
je
pop
jge
mov
repz
arpl
push
into
and
dec
push
adc
add
cs
xlat
les
or
xchg
inc
inc
push
ds
sub
fsts
mov
add
outsl
sbb
cs
xlat
mov
xor
cwtl
bound
push
jae
sahf
lcall
dec
aas
mov
shr
ss
jo
sub
lods
or
lods
adc
sbb
ret
or
mov
loop
push
mov
mov
jae
push
sbb
mov
loopne
repz
out
int3
arpl
mov
jle
jle
xchg
cmp
xchg
ja
mov
ret
lret
inc
push
cmp
adc
and
repnz
or
cmpsb
mov
addr16
sbb
push
fiaddl
lea
mov
lods
hlt
sbb
mov
call
xor
sub
add
pusha
sbb
mov
ficompl
sub
ror
mov
mov
fisubl
lret
add
nop
mov
cmp
aas
xor
das
inc
add
jns
jp
pushaw
imul
xchg
mov
fsubr
and
ficompl
jmp
pusha
cmpsb
icebp
rolb
daa
push
push
cwtl
add
adc
mov
aaa
adc
movsl
mov
test
test
xchg
inc
or
jl
or
xor
cmp
xor
loop
inc
xor
cmp
xor
ja
test
mov
sti
xchg
jecxz
sbb
je
mov
mov
lods
jmp
repz
insl
lock
mov
jno
jns
cmpsb
add
mov
stos
add
data16
inc
jle
out
mulb
popa
rorl
fcmove
mov
iret
cmpsl
ss
aas
and
cmp
jge
outsl
mov
dec
xchg
and
adc
sub
xchg
add
push
test
loopne
cwtl
or
push
mov
rorb
lock
scas
jmp
mov
out
mov
lock
lea
cmc
data16
inc
sti
inc
jbe
cmp
xor
mov
xor
push
adc
test
cli
add
sbb
mov
fidivl
outsb
jge
jbe
xchg
les
jo
sbb
jge
loopne
loope
push
fidivl
gs
popa
dec
push
cld
pushl
pop
xor
pusha
xchg
shlb
pop
add
add
xchg
push
les
mov
test
pusha
mov
pop
mov
pop
push
test
pop
fstpt
shl
cmc
dec
stos
xchg
call
test
ds
adc
cmp
lahf
shll
sbb
mov
out
inc
cmp
fisubs
inc
dec
shrb
pusha
mov
mov
loope
leave
insb
mov
push
ss
decl
mov
lock
cmpsb
sbb
js
lcall
xor
mov
mov
loop
pop
js
aam
inc
sub
cltd
and
scas
ds
sbb
sbb
ror
in
mov
jbe
lock
inc
and
insl
xor
sbb
add
xor
adc
shrb
and
fsub
nop
and
lahf
add
add
fsts
cwtl
in
mov
cwtl
mov
jle
out
xchg
push
mov
rolb
repnz
push
roll
setns
in
mov
add
test
lods
or
inc
mov
xlat
and
mov
stos
insb
sbb
lds
mov
enter
dec
push
std
mov
cs
push
push
push
sub
inc
add
mov
aas
xchg
adc
inc
pushf
or
ret
pop
adc
cmp
scas
dec
xchg
mov
std
imul
xor
out
shrb
mov
std
mov
mov
add
mov
testl
mov
adc
lret
push
inc
or
mov
mov
pop
cmpsb
nop
jns
inc
lret
mov
or
ror
pop
mov
arpl
in
jnp
add
test
sti
xlat
mov
dec
ljmp
jae
lcall
dec
push
jnp
cltd
mov
push
stos
xor
adc
jno
imul
push
inc
cmpsl
enter
pop
push
loop
mov
clc
push
mov
scas
xor
out
mov
int
dec
mov
jb
orl
pop
dec
add
out
adc
fwait
add
lods
jle
imul
mov
add
imul
movsb
pusha
sbb
pop
xor
fadds
icebp
mov
adc
out
sub
sub
out
mov
addr16
xchg
mov
shll
jo
pop
jae
push
movsl
fadds
adc
pop
pop
pop
inc
and
addl
and
aaa
mov
insl
pop
pop
loope
rorl
cmp
outsb
add
push
and
push
push
add
push
fs
cmp
mov
nop
jae
sbb
in
in
jns
daa
call
sub
add
adc
pop
cmc
jae
jecxz
mov
inc
scas
sahf
mov
shrb
das
movsl
gs
sbb
sub
push
adc
xchg
add
testb
pop
ja
push
data16
sbb
or
arpl
sbb
adc
lea
repz
ss
push
iret
cli
cmpl
aam
xchg
mov
jnp
scas
mov
fnstsw
pop
mov
shrl
scas
jno
cmp
aaa
loope
inc
cmpsl
add
xchg
push
cmp
push
dec
out
addr16
xchg
stc
dec
mov
inc
push
stc
lcall
jne
inc
insb
es
sub
mov
adc
sbb
sub
ss
push
sub
lret
or
adc
repnz
cwtl
ret
mov
cmc
mov
outsl
cld
idivl
movsl
testl
and
popf
inc
ret
mov
ja
decl
jnp
jmp
push
ljmp
dec
dec
jge
mov
int3
xchg
dec
cmp
std
cmp
fnstsw
outsb
add
test
xchg
or
pop
fs
movl
and
testl
sbb
aad
int
xor
decl
sub
dec
leave
xchg
add
or
inc
daa
xlat
aad
jmp
cmpsb
mov
es
dec
repz
xor
xrelease
lahf
and
bnd
rol
fwait
mov
fmuls
and
inc
stc
and
popa
lret
clc
cmp
or
rorb
ss
jns
xchg
push
xchg
ja
push
test
pop
divl
mov
dec
mov
into
push
xchg
dec
inc
jmp
sti
cmpsb
jmp
push
jns
test
pusha
cmpsb
cmp
cmpsl
and
jbe
and
lock
push
xor
nop
xchg
push
stos
movsl
lock
insl
pop
sbb
xchg
sub
mov
push
xchg
lds
aaa
jno
hlt
sbb
inc
setno
enter
ret
outsb
cmpsl
sti
in
popf
cli
sbb
loop
mov
cltd
lods
xor
and
data16
sar
dec
fs
aas
mov
xor
mov
hlt
test
inc
jns
decb
cmpsb
hlt
test
cmp
out
inc
gs
inc
fninit
jge
inc
push
fwait
js
ljmp
sub
cmp
test
or
rorb
jb
or
test
test
std
sbb
dec
and
pop
jnp
out
frstor
cltd
push
mov
add
js
jb
adc
sti
jns
mov
mov
ret
lahf
or
and
mov
cmp
cmp
roll
sub
add
fadds
jbe
scas
xchg
fisubrs
add
mov
pop
rol
inc
stos
add
adc
clc
adc
jle
adc
int
and
jl
inc
cmc
negb
jb
sbb
mov
add
mov
jns
sbb
cmp
and
push
inc
fimuls
mov
cmp
dec
sahf
dec
inc
xor
dec
ds
jp
add
lds
xchg
lds
cmp
subb
test
pop
sbb
into
bt
hlt
aam
outsl
ja
sub
enter
test
test
pop
arpl
inc
mov
push
data16
mov
jle
popa
mov
icebp
inc
adc
mov
mov
std
call
jne
movsl
add
mov
cmp
out
int
fstl
out
mov
loopne
cmp
ljmp
cltd
add
cmp
flds
cmpsl
ds
adc
stos
inc
cmp
ret
pop
xor
jg
test
repnz
ljmp
or
push
gs
lea
cld
in
xchg
push
sbb
push
lret
and
inc
test
xlat
stos
mov
adc
sub
sahf
and
inc
test
sbbl
hlt
push
sub
inc
mov
or
xor
add
stc
cltd
lcall
loope
lret
hlt
addr16
cmp
sub
cmc
push
fcomip
out
ret
cmpl
jg
add
rep
pushf
xlat
mov
lea
imul
dec
inc
rolb
ja
scas
popa
mov
inc
into
frstor
add
jno
cli
lods
aas
aad
pop
xchg
aam
insb
addl
mov
out
adcb
lret
xor
and
mov
loop
bound
push
movb
ret
lea
aad
jg
sti
mov
fistpl
std
and
pop
pusha
pusha
adc
movsl
rcll
stos
data16
fisubs
fcmovb
jb
xchg
test
js
mov
dec
test
sbb
push
jns
jg
ljmp
stos
nop
mov
pop
popa
jmp
sub
mov
test
dec
xor
xor
add
or
mov
dec
dec
mov
mov
pop
and
cmp
mov
in
ljmp
push
repnz
dec
sub
dec
lods
mov
and
mov
sbb
shll
push
rol
mov
jl
sbb
movl
fnsave
add
aad
cld
dec
sbb
xchg
icebp
adc
mov
mov
inc
cmc
mov
ja
cltd
jecxz
cmp
loope
mov
or
repz
cmpsl
cmc
mov
andb
push
and
out
jle
icebp
cs
push
xchg
std
mov
push
jle
mov
pushl
das
mov
xchg
outsb
cmp
scas
test
jno
mov
repnz
add
adc
lret
dec
or
sbb
cmp
add
shll
xlat
fs
lds
inc
add
test
adc
cli
lcall
push
test
add
nop
leave
dec
dec
ret
xor
xchg
pusha
push
sub
cmp
mov
aam
pop
in
hlt
pop
pop
scas
sarb
test
mov
pop
xchg
push
xchg
add
rolb
insl
sti
xchg
sub
fsubl
jle,pt
loope
or
jno
out
mov
outsb
mov
mov
mov
push
pushl
jmp
int
aaa
jnp
stos
adc
mov
pop
scas
dec
pop
jbe
sbb
and
pop
push
test
sub
scas
adc
jmp
mov
andb
cmp
xchg
fisttpll
cwtl
mov
std
push
pop
adcb
or
in
jmp
mov
cmpb
mov
mov
popf
sub
mov
inc
xor
lods
pop
sub
aaa
or
sbb
cli
jecxz
test
fucomip
aad
mov
mov
fwait
jb
cmc
mov
xor
sbb
dec
nop
inc
js
hlt
adc
inc
sub
repnz
inc
push
xor
ja
push
ror
jb
and
push
lcall
out
jae
loope
add
add
mov
inc
insb
lahf
inc
test
cmpsb
aad
ds
aad
aam
jns
and
hlt
mov
iret
and
mov
sub
aam
adc
iret
hlt
push
xchg
xor
mov
adc
loope
sbb
insl
imul
cld
das
in
ljmp
jnp
sub
dec
xchg
xchg
mov
popf
scas
popf
jb
mov
outsb
loop
xor
sbb
cmp
mov
cmp
pop
xchg
mov
sbb
frstor
out
lret
inc
imul
xor
cli
cmp
daa
mov
rorl
cmp
xchg
xchg
sahf
das
xchg
scas
popa
xchg
stos
xchg
js
shll
aam
mov
dec
mov
sbb
gs
aas
pop
aam
stc
fld
sub
mov
out
inc
mov
jecxz
xor
outsl
stos
xor
push
and
and
or
jg
and
jo
mov
cs
movsl
outsb
arpl
adc
out
in
daa
and
mov
neg
push
rol
push
fildll
jmp
pop
roll
repz
imul
push
dec
in
xchg
icebp
push
push
mov
add
xchg
into
ja
xlat
aad
xchg
mov
jbe
push
xor
jns
push
cwtl
adc
mov
mov
push
fs
stos
in
loop
mov
lea
or
jg
fldenv
pop
or
push
es
nop
and
shlb
repnz
lcall
or
push
push
pop
push
jle
xor
mov
test
mov
je
loop
cmc
idiv
imul
dec
imul
inc
cmp
fcmovbe
call
push
testb
pop
lds
mov
push
or
fs
mov
loopne
jecxz
imul
clc
jno
daa
push
sti
out
outsb
fdivrl
aam
popa
mov
flds
and
sub
in
mov
sbb
jb
jecxz
push
int
mov
and
or
lret
js
push
push
push
dec
and
adc
imul
in
jnp
jno
lret
sbb
push
fnstcw
lea
and
cmp
je
out
or
fisttps
xchg
gs
insb
push
dec
xchg
push
mov
cmc
or
pop
cmp
scas
lahf
fs
push
ret
and
inc
fldl2t
push
pop
mov
mov
out
test
test
dec
adc
cmp
dec
mov
aam
jp
or
dec
add
fs
ja
test
mov
push
loope
and
jno
inc
xor
push
mov
mov
adc
loop
js
cmpb
pop
aaa
pop
je
push
push
mov
shl
minps
inc
leave
rcr
inc
mov
in
push
leave
iret
ja
ds
push
mov
inc
mov
bound
imul
repz
loopne
dec
adc
xchg
lea
fs
inc
pop
data16
push
adc
add
or
je
insb
hlt
stos
mov
int
cwtl
mov
shl
pop
ja
xchg
inc
and
icebp
lret
pop
outsb
roll
popf
loop
enter
imul
and
xchg
jl
jecxz
lret
sahf
lret
cltd
js
cmp
arpl
pop
dec
icebp
adc
jle
mov
adc
xchg
aam
pop
or
les
mov
data16
mov
nop
pop
pop
jg
ficoml
stos
mov
pop
ljmp
inc
out
cmp
cmp
fs
cmc
cli
inc
lret
fs
or
and
sub
sub
and
xchg
ror
insb
ret
and
add
int
mov
pop
test
mov
lcall
cmpsb
leave
imulb
lcall
movsb
lret
ret
sub
aad
shll
inc
mov
lret
notl
and
dec
das
adc
into
mov
dec
pusha
sub
xchg
push
lret
pop
cmp
stc
das
pop
js
jno
rol
xchg
cltd
sub
int3
repz
test
and
push
push
sahf
test
or
bound
sbb
ljmp
out
insb
fnstcw
jb
add
mov
xchg
mov
inc
call
popaw
inc
jbe
mov
push
pop
shlb
lock
popf
or
mov
test
pop
fdivrs
inc
sub
add
sbb
inc
xor
dec
dec
in
mov
in
push
loop
aad
sub
ja
ljmp
pushl
adc
mov
cmp
cmc
mov
popa
fs
sub
mov
push
and
or
out
xlat
sarl
pop
int3
imul
pop
sbb
push
xor
rclb
dec
mov
mov
mov
inc
aaa
cmp
cmpsl
or
fs
jge
dec
fwait
xchg
adc
sbb
pop
popf
xchg
jl
lahf
inc
mov
fistps
repnz
test
popf
fidivrs
ja
jmp
mov
mov
aam
mov
dec
pop
in
fsubs
xchg
dec
and
add
inc
mov
out
mov
aaa
mov
cmp
out
cwtl
ret
dec
sbb
mov
pop
int
sti
aaa
ds
icebp
lsl
mov
sbb
loopne
jg
add
mov
add
test
movl
inc
lods
bound
adc
mov
sbb
mov
mov
adcb
out
sub
inc
sub
fsubr
adc
into
mov
mov
xchg
aam
mov
push
sti
inc
ljmp
js
pop
stos
pusha
and
inc
push
or
shll
insb
xchg
mov
push
cmp
or
jle
js
loop
movsb
cmp
orl
inc
pop
movsl
sarl
sub
mov
cmpb
cwtl
xor
dec
or
xor
mov
clc
leave
sub
fstl
je
clc
push
xchg
or
jg
mulb
lock
and
ss
fsub
mov
sahf
mov
and
sbb
fiadds
dec
movsl
mov
imul
js
xor
sbb
lahf
leave
jnp
jecxz
lods
mov
adcb
shll
addr16
pop
sti
fisubs
inc
jne
ljmp
popf
insl
xchg
mov
shrb
jbe
pop
cmp
ljmp
cltd
xchg
sbb
mov
cmp
dec
inc
mov
in
mov
popa
lock
loop
lods
shrb
xor
push
inc
popf
inc
sub
mov
cltd
test
fwait
and
push
sub
sub
data16
and
ljmp
aas
scas
fimull
sahf
push
add
movsb
and
bound
dec
add
cmpsb
push
out
jne
mulb
fcomps
dec
inc
roll
dec
xchg
imul
sbb
movb
sbb
pop
mov
loopne
or
cmp
bound
add
loope
les
les
mov
cmp
icebp
rorb
mov
scas
sub
xchg
mov
repz
mov
xor
lea
cli
adc
add
push
insl
pop
jmp
enter
out
cmp
enter
xchg
aas
pmaxub
ret
pusha
fisubrl
sarb
ja
jne
mov
fwait
mov
push
jecxz
xchg
xor
cmpsl
jns
ja
addr16
jnp
bound
xorl
or
push
ljmp
out
push
sub
out
test
mov
inc
mov
pop
int3
push
mov
out
sub
lods
testl
cs
dec
movsb
dec
or
cltd
mov
adcb
stos
packuswb
fnstsw
mov
jg
mov
outsl
test
aad
sti
lret
retw
fs
mov
and
out
insl
push
psubusb
inc
and
mov
cmpl
hlt
and
push
sbb
pop
mov
dec
movsl
xor
push
leave
pop
nop
rcl
sbb
neg
jb
loope
imul
sub
inc
xor
jp
jo
int
sbb
dec
cwtl
push
imul
mov
jns
add
pop
out
pmaxub
out
mov
hlt
out
cmpsb
pop
cmp
dec
lahf
sahf
sub
add
pop
cmp
mov
push
push
fbstp
enter
push
mov
ja
stc
or
pop
jnp
mov
aam
push
adc
adcb
mov
arpl
in
push
cwtl
imul
es
xor
add
mov
xor
pop
mov
jp
pop
mov
test
and
call
xchg
addr16
popa
lods
xchg
fidivrs
fcompl
in
subl
sub
sbb
jbe
sarb
sahf
fisubl
sahf
enter
lock
fildll
xchg
mov
xchg
int
sub
jo
outsb
loope
and
aaa
add
mov
sbb
xchg
dec
loopne
outsb
je
fisttpl
mov
roll
sub
pop
adc
inc
mov
sti
lea
ficomps
aad
adc
leave
out
jp
fmuls
int
cmpsl
pusha
in
inc
sub
mov
bound
mov
loope
fisubrl
sub
cmc
out
in
into
push
cli
enter
mov
push
je
lea
movsl
xchg
inc
and
cli
xor
outsl
cmp
je
loop
ljmp
jge
push
sbb
fdivl
lret
cli
pop
add
xlat
pop
leave
push
lds
xchg
std
pushf
jnp
sahf
iret
rorb
daa
push
push
outsl
mov
push
mov
jp
push
lcall
stc
sbbl
and
lcall
or
cld
dec
pop
dec
call
push
add
dec
in
push
add
jmp
push
xchg
addr16
adc
mov
movsl
sub
mov
inc
pushw
rolb
pop
cmp
pop
sarl
cmc
xchg
test
out
rorb
pop
enter
cmpsl
stos
push
inc
mov
adc
cmc
jbe
fldcw
lods
xchg
jb
lcall
lret
mov
pop
sbb
adc
or
mov
mov
sbb
insl
pushf
xlat
ret
add
imul
repnz
je
incl
std
and
js
lea
popf
pop
and
fdivrl
mov
mov
xchg
adc
int3
xchg
dec
xor
jo
mov
ljmp
js
sub
pop
daa
xlat
cs
jae
or
out
mov
das
add
dec
lret
ja
stos
jae
cwtl
cmp
mov
loopne
push
push
testb
pop
fimull
jbe
mov
push
and
cmpsb
mov
out
imul
insl
call
daa
outsb
mov
dec
mov
bound
adc
ja
cli
imulb
jae
test
mov
clc
imul
bnd
aas
mov
jnp
cmp
fmull
sub
aaa
or
movsb
push
adc
push
jns
jo
jle
rorb
jmp
jmp
mov
cmp
mov
add
fcmovbe
cmp
icebp
cwtl
stos
orb
enter
orl
mov
pop
adc
pop
sub
push
daa
lret
mov
imul
aas
sub
cmp
je
or
negl
xchg
shrl
fwait
imul
jp
jne
insb
icebp
dec
mov
or
xor
fs
cmp
lea
lods
aad
jb
jbe
mov
xchg
push
or
sub
inc
mov
mov
test
mov
push
dec
xor
lock
scas
out
or
ds
lahf
fs
or
sub
xor
inc
mov
cmp
mov
repnz
in
or
mov
fldl
add
daa
loopne
rorl
sar
push
outsb
push
inc
xlat
mov
mov
scas
mov
stos
out
clc
push
mov
scas
test
inc
xor
sti
int
addr16
std
sbb
mul
sub
mov
lret
add
jnp
jae
lds
dec
daa
ret
inc
int3
add
jl
jle
clc
pop
xor
sahf
xchg
jno
fnstenv
mov
mov
cli
mov
btc
jo
sbb
xor
mov
jp
or
lea
mov
xchg
test
mov
idivl
out
je
pop
adc
daa
pop
in
stos
mov
dec
cmpsb
mov
add
pusha
sar
or
daa
aaa
mov
subl
push
out
sbb
fwait
out
adc
in
mov
push
dec
jg
pop
sbb
sarb
into
out
xor
cmpsb
lock
loop
testb
xchg
adc
popa
add
lds
rcrl
xchg
rolb
sbb
aas
pop
int3
xlat
hlt
jmp
nop
dec
dec
repnz
xor
sbb
lahf
mov
sub
mov
push
daa
stos
add
pop
out
xchg
stos
xchg
jae
mov
pop
sbb
in
sub
shr
jg
pop
out
dec
adc
dec
rolb
lret
mov
sbb
xchg
xor
sub
sbb
ljmp
out
mov
dec
inc
inc
cmp
pop
mov
sbbb
mov
les
mov
fbstp
or
mov
push
sub
sbb
xor
push
in
ja
sub
cld
inc
in
setns
inc
mov
daa
imul
mov
loope
aad
sbb
push
inc
mov
or
sahf
dec
ret
test
insl
adc
adc
sub
dec
dec
and
pop
fbld
dec
cld
popf
cmp
and
mov
outsl
xchg
mov
push
fs
lahf
into
push
cmp
cmp
cwtl
enter
push
into
sbb
mov
lahf
sbb
cld
and
fucom
and
jmp
jecxz
test
mov
jg
mov
add
ds
mov
data16
outsl
stos
xor
xlat
mov
dec
cmp
push
push
cmpsl
mov
je
jne
lahf
dec
adc
mov
mov
lret
int3
ficoml
inc
pusha
jg
pop
subb
push
mov
ffreep
push
decl
arpl
in
fistpll
into
or
mov
in
or
mov
ja
xchg
or
or
testb
add
bound
movl
cmc
jmp
xchg
xor
mov
pop
push
push
pop
cwtl
fnop
xor
cmp
aas
sub
push
outsl
mov
outsl
push
lods
ret
leave
jmp
neg
jmp
add
adc
mov
notl
inc
scas
in
pop
dec
or
int3
sub
testl
cmp
lock
loopne
out
xor
insl
jo
mov
push
and
fdivr
icebp
mov
fcmovne
in
pop
adc
sbb
fsubs
out
insb
loope
ja
out
paddsb
ret
lahf
pop
lock
rcll
push
sbb
jns
xorb
pop
mov
mov
sbb
mov
shlb
ffreep
sbb
call
pop
jo
adc
xchg
xchg
mov
push
dec
jp
clc
mov
lds
hlt
out
sbb
je
outsl
jmp
lahf
pushf
pop
dec
mov
xchg
imul
xor
mov
mov
das
fnstcw
test
aad
xchg
inc
mov
mov
dec
or
cmp
enter
loope
ljmp
fsts
ret
push
sbb
push
repz
stos
leave
imul
push
mov
xor
lahf
pop
pop
add
fidivs
fsubl
or
fldcw
xchg
and
add
add
jns
mov
lret
or
mov
rcll
jnp
adc
dec
dec
fstpl
mov
testb
fdivl
push
xchg
adcb
outsb
xor
inc
or
test
lcall
gs
rcrl
sbb
shrl
inc
pop
sub
inc
push
cmp
sub
adc
out
inc
push
and
in
mov
sbb
lret
jmp
push
jb
aam
inc
and
xchg
cmpsb
jns
ljmp
shrb
push
aaa
jno
aam
xchg
arpl
fmul
xor
test
loop
adc
mov
mov
xchg
push
push
test
pop
ret
jmp
repnz
xor
out
cld
or
xor
out
ja
dec
divl
push
imul
fldcw
xor
push
out
les
push
lret
push
int
in
rclb
jo
ds
and
mov
xor
in
xchg
push
jmp
test
add
dec
mov
jmp
call
and
test
jmp
or
xor
mov
push
dec
push
mov
mov
cmp
lock
xchg
ss
cmp
cmpsb
xor
pop
cli
stos
cmpsl
pop
xor
movsb
pop
jge
xchg
arpl
ja
aas
push
lret
inc
or
nop
in
adc
adc
push
and
and
notb
jno
and
push
push
aam
xor
in
xor
mov
sbb
mov
dec
or
xor
je
xor
push
fistpll
xor
dec
pop
scas
add
lahf
fdivs
popl
sub
cmp
fsub
cmp
push
pop
ror
scas
iret
stos
repz
add
mov
je
lock
sub
scas
pushf
mov
rolb
add
ja
icebp
sbb
sti
dec
clc
lock
jb
popf
sub
outsb
mov
les
cmpb
testl
adc
aam
pop
arpl
or
inc
xchg
and
jle
dec
scas
jb
nop
lret
xor
dec
dec
xchg
les
mov
cli
cmpsb
xor
mov
subl
push
xchg
rorb
ja
hlt
out
sbb
cld
lret
lret
push
ret
mov
pusha
inc
pop
fnsave
dec
in
mov
mov
xchg
mov
loope
leave
into
popf
pop
inc
cs
xchg
mov
mov
xor
pop
mov
out
andl
sub
cmp
ficoms
xchg
mov
cltd
sbb
testb
pop
sbb
sbb
bound
jle
add
loope
or
mov
add
sub
cmp
repnz
adc
fsubl
push
xor
sub
arpl
dec
call
jno
add
xor
mov
add
or
sub
or
inc
jbe
rcr
xor
int
mov
xchg
test
cwtl
sarl
xor
mov
fbstp
outsb
jnp
xor
jp
outsl
jo
ss
enter
pop
lock
mov
add
adc
mov
xor
sbb
jbe
movsl
into
in
xchg
dec
hlt
jno
ljmp
ret
jno
and
into
pop
cltd
fcmovnu
mov
sub
cli
les
daa
jge
ja
lcall
sar
mov
ss
mov
xlat
jmp
cmp
adc
in
mov
or
stos
adc
jnp
add
push
insb
xor
cmp
fisubs
push
stos
jb
test
pop
adc
loope
jg
mov
jg
dec
fisttps
add
push
jg
outsl
mov
xchg
inc
test
jmp
or
rol
filds
adc
call
push
cmp
sbb
mov
mov
fs
or
cld
and
jae
ds
fdivp
gs
adc
in
jmp
jle
popa
and
jne
inc
adc
int
xchg
cmp
loope
or
push
xchg
sbb
fisttpll
les
xor
out
inc
and
testb
or
int
outsl
dec
out
cmp
pop
mov
popa
fs
js
stc
push
dec
add
lahf
jg
xchg
xor
loop
add
adc
lds
push
push
push
mov
scas
sub
mov
fists
mov
movsb
stos
push
arpl
xor
jl
cwtl
adc
je
fs
movsb
mov
xchg
xchg
xchg
add
xchg
mov
dec
incl
mov
out
push
or
xchg
out
lock
stc
jge
push
aad
jae
cli
and
iret
divl
mov
repnz
mov
jle
orb
lea
xlat
cmp
aas
jbe
xchg
imul
int
pop
daa
js
mull
daa
mov
mov
lcall
xchg
les
cwtl
add
lods
cmpsl
in
in
ljmp
pop
mov
mov
adc
mov
int3
ja
shlb
rcll
out
xchg
inc
jbe
test
arpl
das
jecxz
xor
fidivrl
insb
or
call
fwait
ss
pop
inc
hlt
cmc
xor
mov
leave
jmp
loopne
arpl
cmp
xchg
mov
and
popa
push
xchg
pop
jmp
fmuls
pushf
jge
call
fbld
fidivrl
ja
mov
sub
ss
insl
mov
or
push
ret
test
repz
fidivs
push
adc
stc
popf
pop
mov
push
or
loopne
mov
inc
lret
pop
in
dec
lods
loope
andl
push
cmp
jmp
xchg
dec
sahf
inc
pop
add
repz
lret
cmpsb
and
repz
mov
xchg
out
lret
gs
inc
aaa
fists
nop
and
loopne
xchg
add
add
pop
ljmp
stc
lock
lcall
sub
sub
in
sbb
ret
mov
pop
mov
or
sbb
pushf
int
aas
adc
ljmp
loop
xchg
pop
shll
cmp
or
ret
pusha
jbe
push
inc
nop
or
pop
pop
aad
scas
and
pop
jo
mov
daa
ja
stc
and
cmp
cmp
daa
outsb
test
cmpsb
xorb
cmp
nop
add
repz
das
pop
add
xchg
cmp
out
xorl
pop
cs
dec
mov
pop
jo
inc
mulb
lds
mov
dec
fstl
push
push
bound
xlat
cwtl
sbb
sbb
mov
mov
div
xor
cmp
sbb
xchg
aas
rorl
loope
ss
xor
add
int
mov
lret
out
adc
or
sub
fldcw
pop
movl
mov
push
lods
xchg
repz
addr16
out
jl
fstpt
std
mov
and
das
int
test
or
loopne
stos
aaa
rolb
push
pop
mov
xchg
stc
aam
test
clc
xchg
in
cmp
mov
rclb
sti
and
shll
add
mov
imul
xor
inc
je
sbb
lods
insl
cmc
adc
adc
outsl
cmp
or
xchg
ja
inc
jmp
icebp
sub
push
arpl
fiadds
shll
test
or
in
insl
clc
into
std
lahf
push
mov
push
push
xlat
push
pop
dec
sahf
test
push
dec
or
mov
sub
pop
loop
xor
xchg
dec
jb
jno
xor
mov
jns
add
mov
in
fcmovb
fmull
fldenv
xor
movmskps
xchg
jb
sbb
mov
adc
pop
loopne
pop
adc
mov
inc
aas
js
sub
das
fisttps
sbb
adc
adc
push
loopne
cld
mov
lahf
shlb
or
and
mov
xchg
jl
enter
arpl
rcll
scas
call
cmp
sub
in
jecxz
mov
mov
dec
popf
jb
add
out
fidivl
std
cmpsl
push
mov
dec
hlt
add
out
adc
fstps
daa
mov
ret
cs
mov
adc
and
loope
xchg
or
jo
mov
in
mov
xchg
add
xchg
mov
cmp
mov
fidivrl
jg
enter
sbb
test
pop
jecxz
cwtl
in
fs
je
lret
hlt
sbb
pusha
adc
aaa
dec
fadds
cmp
fistpll
adc
mov
push
mov
divl
lret
xchg
jne
push
push
xchg
jnp
in
inc
mov
into
adc
mov
out
mov
insb
mov
sbb
sar
cwtl
xchg
pushf
xor
ret
cs
add
pop
scas
ljmp
arpl
cltd
mov
cmp
sbb
lea
in
cmc
jae
xor
jecxz
fnsave
dec
fdivr
and
mov
jno
adc
mov
mov
or
in
pop
and
pop
rol
jns
pop
xlat
fucomp
mov
dec
adc
pop
icebp
and
xchg
sbb
bound
mov
xorl
pop
adc
stc
pop
or
sub
or
je,pt
sub
or
enter
jo
stc
insb
enter
arpl
aam
inc
sbb
push
jns
pop
insl
scas
test
imul
pushf
xchg
stos
subl
pop
rcl
fdivs
inc
loopne
pop
mov
mov
adcb
fistl
movsl
aam
les
jge
jnp
or
sahf
leave
adc
pop
repnz
out
adc
cmp
popf
add
xrelease
pop
jmp
nop
outsb
pop
gs
mov
aas
test
sbb
xor
mov
xor
iret
inc
outsb
clc
pop
dec
mov
mov
push
pop
mov
sahf
cmpsl
mov
rorl
pop
pushf
jnp
jge
pop
pop
nop
sbb
dec
icebp
jns
fmul
mov
cmp
lret
enter
dec
push
lock
shrb
push
xlat
xor
popa
insl
push
popa
sbb
leave
scas
jmp
repnz
push
add
jne
push
mov
mov
add
inc
sub
mov
sub
repnz
nop
cmc
cmp
jno
enter
stos
cmpsl
jnp
cltd
mov
cmpsl
mov
sarl
mov
data16
repz
cli
adc
push
pusha
popf
bound
icebp
mov
push
cld
pop
cmp
mov
cmp
out
fisubrs
rcrl
mov
cmc
divl
push
xor
and
inc
pop
lods
imul
xchg
and
sti
daa
leave
xchg
cmp
dec
xor
les
int
dec
pop
lret
push
mov
mov
stc
daa
dec
sub
icebp
sbb
push
data16
cmp
lea
clc
add
popa
sbb
jne
cmovnp
cmp
loop
or
js
mov
mov
push
iret
adc
dec
add
enter
push
dec
push
out
mov
stos
scas
jns
push
aad
outsb
push
imul
jg
xchg
lahf
cmp
mov
lret
mov
sub
out
sbb
push
loope
neg
mov
fisubs
inc
inc
dec
pop
dec
sbb
jae
pop
jo
cs
cli
dec
jb
lea
cld
dec
mov
stc
or
and
xchg
or
jge
add
xor
push
fs
dec
fnsave
in
in
mov
sub
aaa
pop
test
mov
mov
or
sti
das
push
std
push
int3
stc
cs
je
mov
in
mov
cmp
call
pop
xor
lods
xor
or
adc
cmp
pop
rcrl
mov
add
out
in
xchg
in
dec
fwait
dec
sub
int3
pop
push
mov
inc
stos
add
mov
lea
stos
pop
cli
sub
aas
mov
adc
ret
xchg
adc
bound
roll
inc
push
inc
cmpsl
rcr
push
jno
cmp
icebp
fdivrs
jne
push
xchg
cmp
aaa
loope
and
or
lock
test
adc
pop
adc
jp
lock
outsb
and
sbb
xor
inc
sti
stos
idivl
add
and
in
jne
popf
ljmp
adc
negb
nop
inc
mov
xor
out
cmovb
pop
mov
cmpsl
fcomps
xchg
xor
dec
sub
xor
pusha
add
add
sub
aas
mov
xchg
fwait
or
in
pop
and
movsl
push
xchg
xchg
daa
subb
add
mov
cwtl
xor
xchg
or
push
jnp
xor
or
gs
dec
xchg
or
mov
aam
ljmp
je
and
leave
cmpsb
add
pop
je
daa
sbb
and
mov
add
lods
sbb
xchg
xlat
iret
xor
push
hlt
jg
sbb
xor
adc
pushf
loope
int
gs
fnstenv
aam
jg
into
lock
or
cli
jae
jbe
hlt
aaa
pop
not
repz
jbe
adc
jge
inc
sub
jg
fiadds
push
out
dec
stos
cmpsl
cmp
jge
je
lea
movsb
fcoms
jle
int
test
cmp
adc
add
adc
jl
fwait
pop
pop
xor
push
mov
cwtl
and
inc
mov
pushf
push
pushw
xor
xor
stc
pop
es
imul
xor
fldcw
and
loopne
cwtl
shr
fldl
fstpl
and
xchg
movb
dec
test
jp
test
cmp
aaa
dec
push
jg
mov
popa
popa
sbb
filds
insb
add
js
fisubl
jp
iret
mov
mov
xchg
cmp
jge
mov
outsl
rcr
pop
pop
and
mov
pop
mov
dec
imul
loop
cmpsb
test
or
add
negb
mov
in
xor
sahf
pop
pop
cmp
mov
in
popa
adc
inc
cmp
mov
xchg
mov
movsl
pop
fdivl
stos
xchg
pop
sub
ret
cmp
jae
std
subb
jno
mov
dec
roll
jbe
adc
aaa
xlat
pusha
or
popf
lods
xchg
adc
or
sbb
and
pop
dec
testb
sti
push
hlt
sarl
int3
dec
push
popa
out
shrb
cs
jge
imul
das
rolb
mov
mov
lea
aad
imul
pop
lock
sbb
in
aad
xor
jnp
test
adc
push
sub
push
push
inc
lcall
adc
dec
in
jp
lahf
aad
mov
jge
sub
in
cmpsl
lods
cmp
movsb
lds
jb
sub
cwtl
mov
pop
das
fmull
or
mov
nop
mov
and
sub
jmp
xrelease
or
mov
push
mov
or
jp
cmp
movsb
sub
xchg
xor
cmp
fcmovnu
insl
lock
add
pushf
movsb
mov
fs
inc
fdiv
leave
in
inc
push
jne
aaa
xchg
xor
repnz
xchg
cli
icebp
int
mov
cwtl
mov
push
out
loope
xchg
je
pushf
add
jge
lea
jge
xor
pop
data16
mov
std
hlt
and
arpl
fnsave
inc
dec
loop
or
cmpsb
sarl
adc
ret
pop
fadds
fstps
xor
push
cmp
mov
and
dec
mov
stos
push
ja
movsl
cmc
add
jg
jae,pn
add
in
outsl
incl
adc
mov
add
sub
mov
xchg
stc
aaa
orl
lds
pop
lea
pop
cwtl
ss
lods
pop
adcl
inc
xchg
xchg
out
gs
push
fmuls
bound
add
loope
lcall
adc
lret
fs
jo
std
hlt
jne
mov
cmc
cmpsb
jl
add
jmp
and
adc
stc
xor
push
push
cmp
aad
mov
and
xor
mov
sub
test
mov
arpl
cld
in
test
testb
ret
inc
cmp
loop
outsl
sbb
das
mov
stos
sbb
ret
pop
fimuls
jb
cmp
mov
jne
lcall
mov
xor
add
dec
ds
and
add
pop
mov
sbb
adc
pop
xchg
sub
rol
sbb
xchg
jge
imul
test
mov
xor
js
popa
pop
stos
cmp
popa
stos
sbb
incl
test
dec
movsl
out
dec
out
push
jp
pop
divl
xor
xchg
gs
pushf
insl
mov
loop
or
inc
mov
repz
jmp
inc
addb
in
andl
push
xor
dec
cld
or
je
mov
incl
call
mov
int3
adc
pop
pop
ret
lea
mov
xor
fdivl
inc
lcall
enter
lds
jbe
dec
mov
sbb
addr16
test
lods
dec
pop
lods
sbb
aam
or
adc
cwtl
pushf
sti
or
fsubs
jp
cmp
jecxz
sar
xchg
mov
mov
inc
je
cmp
push
in
mov
pop
jl
mov
fwait
mov
sub
mov
out
push
and
sub
and
incl
mov
xchg
cmpsl
push
arpl
cmpl
inc
xchg
fwait
or
mov
pusha
xor
and
xor
add
test
xor
insb
enter
test
push
adc
add
shrl
jnp
js
lret
jo
sbb
sbbb
sub
jg
cmpsb
pop
int
pop
into
mov
mov
or
out
jbe
pop
mov
lret
jno
sub
cmp
add
sbb
or
push
cld
xor
insb
nop
fistps
mov
mov
mov
xor
xchg
sbb
movsb
popa
ss
rcrb
nop
ret
fidivs
aaa
aaa
daa
fcoms
add
leave
inc
pop
sub
mov
mov
pop
lock
or
inc
adcb
out
jno
fnstsw
hlt
lret
sbb
push
and
insb
in
push
andb
rolb
mov
sbb
adc
enter
pop
adc
inc
in
shrl
in
aas
mov
or
mov
stos
bound
add
lea
iret
sbb
pop
ficoms
xor
add
into
push
in
mov
sbb
lds
mov
fcoms
mov
jp
js
daa
mov
mov
cmp
rorb
popa
outsl
pop
or
imul
clc
lea
insb
sahf
imul
fldl
pop
daa
pushf
shr
mov
stc
sbb
mov
xor
outsb
push
aas
xor
jecxz
iret
loopne
cmp
fnstenv
int
fidivl
aam
enter
and
lds
jno
int3
inc
push
mov
push
mov
int3
adc
xorb
push
mov
cmp
mov
in
pop
push
push
and
dec
ljmp
mov
fsts
cmp
jb
add
stos
xchg
mov
push
scas
cmp
fsubr
adc
ljmp
xchg
mov
mov
int3
popf
stc
inc
xchg
lock
sbb
loop
inc
mov
imul
pop
push
add
mov
jo
or
popa
in
clc
rcll
or
push
jge
test
or
xor
aaa
popa
in
xchg
adc
pop
mov
sbbl
rorl
lahf
cmp
shl
inc
push
or
jle
arpl
or
repnz
jb
mov
or
mov
jg
rolb
fdivrs
sub
js
sbb
jp
in
push
sub
adc
aad
xchg
mov
loope
xchg
imul
out
jne
addr16
pop
inc
decb
sbb
xchg
push
pop
pop
pop
loop
push
movsb
or
lods
mov
add
gs
jae
xchg
mov
adc
gs
cli
addr16
scas
mov
cld
or
out
or
xor
aam
mov
outsl
pop
dec
cmpl
cwtl
jnp
mov
xor
mov
out
popf
adc
or
popf
pop
fnstcw
call
push
xorl
mov
aaa
test
mov
cld
cltd
sbb
mov
jecxz
and
jnp
imul
mov
or
out
pop
out
dec
fwait
sbb
lods
mov
add
dec
inc
in
lret
inc
add
shll
mov
mov
out
and
test
inc
add
and
in
cmp
stos
cmp
jp
cltd
pop
sbb
mov
arpl
mov
scas
fwait
repnz
jl
mov
call
lds
loopne
cmc
fsubrl
xchg
test
push
sbb
arpl
xchg
aaa
sub
out
dec
movsl
mov
gs
cmp
cli
lods
jp
or
pop
sub
fiaddl
mulb
ret
inc
xor
movsb
sub
push
fstpl
hlt
jo
push
call
push
test
lea
push
lret
dec
rolb
dec
ficompl
aad
jne
sub
int3
aas
adc
ja
aad
xor
pushf
hlt
orl
lods
mov
call
adc
xchg
in
mov
adc
out
mov
out
add
xor
adc
in
pop
mov
sub
movsb
shl
js
push
xor
inc
gs
dec
sbb
insb
add
movsb
nop
fnsave
push
xchg
push
mov
shll
fstl
data16
nop
rcll
add
mov
fst
test
xor
sub
mov
xor
sbb
scas
imul
pusha
xchg
pop
rcl
data16
sub
push
inc
and
sarl
sbb
test
push
movsb
hlt
popa
enter
adc
push
mov
dec
out
data16
addr16
daa
cmp
dec
mov
fdivl
jmp
mov
cmp
lods
pop
pop
inc
adc
pushf
in
in
and
out
orb
stc
lock
pop
cltd
daa
fs
pushf
lcall
daa
cmpsl
sbb
lret
or
xchg
sbb
mov
or
xchg
inc
sub
dec
loop
lret
das
popf
adc
add
push
jno
mov
andl
mov
ja
gs
mov
xor
mov
lock
add
aas
push
xor
jle
xor
decb
call
ja
jbe
mov
xor
shl
xchg
xchg
iret
mov
ret
cmp
leave
clc
dec
or
fiadds
js
rcrl
mov
icebp
mov
rcr
je
cli
js
aad
fsubrl
shlb
xchg
sbbl
xor
scas
inc
xlat
pop
push
cmp
mov
add
jecxz
xor
hlt
sub
jmp
aas
sub
dec
sub
jns
mov
pop
xchg
xchg
pop
adc
and
daa
cs
ret
sub
bound
and
or
mov
jge
mov
mov
das
xor
stos
aad
loope
stos
fisttpl
test
stc
or
jge
dec
inc
ja
pusha
jo
gs
mov
xchg
dec
es
xor
lcall
out
mov
andl
bound
ds
rolb
and
mov
push
sub
add
push
xchg
cmpsl
jns
jmp
adc
test
inc
push
pop
pop
dec
push
pop
in
push
jl
repz
push
int
sbbl
pop
lods
xlat
lods
push
add
aad
lods
and
pusha
hlt
out
orl
push
clc
scas
jecxz
sub
dec
sbb
jnp
scas
push
ds
cs
scas
dec
aad
cmpl
jmp
imul
lret
push
je
adc
aaa
or
push
loop
test
repnz
fldcw
jle
dec
add
xchg
cmp
jbe
xchg
test
jno
adc
sub
xlat
adc
mov
or
mov
popf
incb
mov
loop
test
hlt
out
mov
cmpsb
dec
push
jb
mov
mov
into
or
rorl
adc
sub
push
pusha
testl
add
lret
lods
ss
sbb
fwait
scas
lods
cmpsl
clc
daa
add
add
in
imul
pop
std
int
xchg
jb
je
in
test
test
addr16
ret
ss
aas
int3
adc
loop
iretw
dec
adc
jg
and
scas
jne
clc
enter
mov
ret
inc
test
xorb
push
pop
cli
jbe
pop
jmp
push
mov
sbb
jp
mov
mov
addb
scas
jns
gs
cld
push
mov
loopne
add
clc
cltd
dec
push
dec
lahf
mov
insl
cmpsl
sub
cmpsl
and
jne
movb
ret
mov
mov
lods
mov
dec
dec
sub
mov
stc
fisttps
push
imul
ret
xlat
fmuls
or
lret
loope
pop
out
or
shl
ja,pt
insl
sbb
cmp
jge
imulb
add
fs
sti
jp
jg
cwtl
lock
or
cwtl
pop
fwait
imul
sub
lods
sarb
xchg
outsl
pop
push
jp
jmp
insl
imul
adc
aaa
pop
aad
sti
aad
cmpsb
or
inc
iret
inc
notl
jns
ret
ficoml
sub
scas
add
es
sbb
inc
push
ret
xchg
jp
jne,pn
in
cltd
pop
arpl
cld
movb
mov
or
add
cmc
xchg
mov
mov
dec
fisttpll
jge
mov
mov
mov
push
adc
cmp
jno
dec
mov
add
mov
imul
fidivl
cmp
push
mov
out
iret
sub
jmp
jns
popf
mov
dec
mov
popa
stos
pop
cmp
add
xchg
arpl
xlat
lea
shl
insb
mov
jb
pop
jbe
cmp
dec
jmp
pop
mov
sub
pop
jo
jo
aas
cld
aad
pop
xchg
xchg
and
push
pop
or
lret
popa
push
cmp
mov
das
sbbl
in
cmp
call
cs
xchg
mov
sbb
gs
and
mov
rorb
sub
and
adc
notl
stc
mov
jle
stos
popa
xchg
mov
lds
or
sub
and
mov
pop
push
pop
pop
sti
mov
test
jbe
pop
enter
sub
xchg
or
jb
sbb
insl
xor
into
sbb
mov
mov
stc
insl
xchg
lods
and
ffreep
fidivrs
andl
mov
dec
shll
cmpsl
inc
mov
insl
and
sub
add
nop
or
insl
jmp
test
jp
inc
mov
in
leave
xchg
ljmp
notl
adcl
sub
testl
jae
xchg
inc
call
xchg
sarb
mov
pushf
cmp
popa
gs
jns
rcr
add
xlat
call
add
jbe
clc
mov
jmp
out
mov
push
jns
pop
pop
xor
mov
adc
fwait
mov
ss
rcrl
push
pop
jno
push
lods
cmpsb
pusha
xchg
mov
mul
fldcw
jmp
idivl
arpl
loop
outsl
call
sub
cld
cmp
sbb
cmpsb
sbb
push
mov
js
iret
xchg
pop
dec
mov
adc
mov
test
jae
imul
leave
xor
mov
mov
shrb
lcall
nop
sarb
out
loope
pop
leave
cmp
inc
aaa
dec
repz
fistps
bound
sbb
mov
lock
jb
add
sub
mov
sbb
adc
rep
insl
dec
lahf
jle
jp
cmp
testb
cmp
movl
pop
jge
leave
push
ds
or
xlat
inc
test
imul
cwtl
or
nop
aam
stc
aaa
ds
out
movsb
jp
daa
les
jge
pop
jle
dec
mov
js
mov
push
adc
lahf
mov
mov
divps
lret
xchg
inc
mov
aam
xor
and
test
jbe
and
mov
add
lods
negb
and
scas
xchg
loopne
insb
mov
pop
jmp
sub
xchg
xor
mov
aaa
xorl
add
cli
test
sbb
lcall
icebp
aam
push
pop
lahf
jbe
cmp
sbb
push
dec
rcpps
dec
jle
push
lea
leave
dec
cld
cmp
outsl
xchg
pop
test
jb
sahf
hlt
sub
loop
lock
cmp
mov
clc
imul
sbb
push
or
push
jnp
les
call
or
jne
mov
enter
sub
fisubl
lret
dec
xchg
lock
out
sarl
inc
pop
jl
inc
adc
xchg
mov
lods
or
lret
and
mov
adcl
shrb
push
sti
enter
mov
test
aad
ret
stos
cmpsb
xor
pop
jg
cmp
insb
sub
jg
popa
mov
iret
hlt
mov
ret
sub
pop
fstl
inc
push
add
mov
incl
jge
jge
push
xor
in
test
iret
aam
jno
xchg
mov
clc
inc
les
insb
hlt
imull
jle
mov
sbb
jns
hlt
add
and
sbb
mov
add
or
jl
iret
in
loopne
add
sbb
add
adc
mov
flds
rcr
xbegin
ret
add
xor
cmp
mov
lods
in
xchg
or
push
push
xchg
xchg
scas
cmp
xchg
movsb
add
addr16
and
dec
shl
cmp
lahf
int3
gs
sbb
cli
or
imul
adc
pop
mov
sbb
nop
in
sbb
out
cmp
lods
lar
inc
cld
insl
out
adc
jne
push
shr
and
int3
xor
mov
pop
mov
aam
imul
xchg
mov
mov
test
ficoms
filds
aad
jge
sti
hlt
mov
aaa
addl
push
and
lds
in
push
dec
adc
out
shrb
jae
add
adc
jl
xchg
xor
pop
sti
mov
in
mov
scas
in
testl
mov
lret
js
pusha
mov
adc
xor
cmpsb
adc
in
fnsave
cwtl
adc
pop
jne
insb
push
and
fstpt
add
inc
mov
pop
mov
mov
pop
xchg
or
mov
push
mov
fistl
divb
lods
sbb
push
lods
cmp
push
sahf
in
and
fucomp
lret
bound
dec
jmp
dec
sub
mov
shr
dec
xchg
inc
test
lods
mov
sahf
shll
out
insl
icebp
adc
push
test
push
cmp
push
in
push
jae
sahf
orb
xrelease
rcrl
adc
mov
js
inc
pop
in
add
lods
lds
cmc
out
inc
pop
cmpsb
popa
jb
push
repnz
pop
xchg
jp
fistpll
in
xor
out
jae
push
insb
lock
push
scas
insl
movsl
inc
mov
xchg
jmp
sbb
jl
push
cmp
mov
and
sbb
cmp
xchg
push
add
xchg
inc
es
mov
lahf
js
xchg
inc
insl
or
mov
enter
sbb
ret
jae
push
pop
leave
add
js
das
mov
or
push
pop
xchg
orl
mov
jne
and
jp
mov
xor
call
lock
incb
fimuls
call
dec
sub
lret
in
movsb
dec
and
mov
push
mov
pop
popf
inc
movsb
arpl
ljmp
std
inc
pop
scas
push
sbb
sub
xchg
scas
xchg
mov
ret
stos
cltd
push
test
add
and
daa
out
push
sub
cmpsb
jo
cmpb
sbb
xlat
subb
mov
cmp
push
cmp
adc
jmp
mov
mov
ficompl
mov
mov
push
into
popa
xchg
pop
out
or
test
gs
cwtl
jmp
sbb
repnz
lret
lret
out
fmull
xor
cli
ss
add
popf
dec
fwait
sbb
mov
dec
inc
outsb
daa
js
inc
in
pop
daa
fisubrs
cwtl
int
ss
push
pop
imul
lods
dec
mov
push
inc
sbb
mov
pop
repnz
mov
xor
pop
mov
mov
mov
popf
std
jecxz
in
cmpb
sbb
inc
and
push
xchg
sbb
sbb
fnstenv
and
scas
xchg
fstpl
cmpsl
cmp
mov
mov
mov
bound
xlat
sub
arpl
cmp
aam
ret
loope
cmpsl
pusha
in
sbb
mov
dec
sbb
mov
mov
push
fnstenv
scas
icebp
or
add
movsb
add
outsb
daa
push
add
jnp
stc
push
mov
mov
and
out
mov
mov
data16
aad
xor
addr16
mov
and
jl
cmpsb
js
pop
dec
or
jecxz
lcall
mov
fnsave
or
adc
sub
stc
inc
out
xchg
je
mov
ret
cmpsb
daa
sbb
test
gs
push
cmp
enter
sbbb
orl
mov
and
mov
enter
xchg
in
pop
mov
pop
mov
das
or
xor
push
mov
and
repz
pop
adc
sbb
jg
test
andl
mov
and
inc
ja
mov
pop
xor
sub
pusha
adc
sti
or
cli
loop
loopne
addr16
bound
cmc
sub
out
or
cmp
lds
loope
xchg
call
mov
cmp
mov
test
xchg
jmp
int
push
les
jb
fs
mov
into
xchg
lods
seta
jo
scas
shrb
pop
inc
dec
roll
jb
sbb
push
into
fwait
cmc
cmp
imul
xchg
or
xor
icebp
xor
ljmp
mov
pop
cltd
out
xor
push
inc
pop
mov
fnsave
mov
or
add
loopne
jecxz
or
inc
ja
es
push
sub
mov
ljmp
stos
je
repz
lods
loop
ds
xor
lcall
xchg
jo
ja
adc
mov
call
add
mov
inc
inc
and
cmp
pop
push
lods
shll
adc
sbb
test
mov
or
imul
xchg
lcall
ljmp
xchg
dec
mov
lcall
adc
pop
js
vmwrite
sub
iret
outsl
stos
jmp
incl
icebp
sqrtps
sti
cmp
sub
orb
adc
aaa
cmc
imul
ret
sub
leave
xchg
stos
dec
lcall
iret
ror
mov
shlb
cwtl
aam
sar
lods
push
es
inc
outsl
and
adcb
scas
cmpsb
shlb
and
sub
fisubrl
loope
outsl
add
inc
dec
in
xorb
lret
xor
aad
scas
push
mov
pop
in
mov
mov
cltd
cmp
lcall
notb
into
xchg
jbe
push
js
stos
inc
mov
push
pop
lods
test
sub
push
jns
mov
dec
mov
push
xor
xor
enter
push
shl
push
stc
fmul
adc
jnp
fnstenv
fcmovnb
rorl
sbb
ret
jne
lock
hlt
mov
out
adcl
movsb
ret
xchg
and
jns
xchg
icebp
negl
jnp
cmc
js
popf
fdivp
dec
das
repnz
adc
idivl
insl
ret
push
scas
iret
mov
add
int3
mov
mov
insl
dec
xchg
mov
test
ret
testl
and
mov
or
push
xlat
mov
sahf
sub
scas
sub
push
xor
cmp
xor
ja
mov
mov
add
add
lahf
push
and
imul
cmc
jae
stos
add
dec
clc
mov
ficoml
push
inc
or
xchg
fadd
mov
and
fistpll
inc
cltd
xchg
std
out
jmp
or
fisttpl
cwtl
lock
sti
xor
fs
push
sahf
push
js
add
loope
jp
lock
aas
rolb
inc
shrl
inc
add
cmp
or
ret
sbb
in
add
dec
fistl
dec
loope
mov
mov
inc
mov
sub
sub
roll
js
jmp
sub
repz
cmp
jecxz
jmp
popf
sti
mov
mov
ds
and
movsb
push
lret
outsb
or
jne
loope
pop
lds
das
pop
dec
inc
pop
sub
pop
hlt
cs
mov
dec
hlt
aas
sub
xlat
aas
les
sub
cmp
push
in
jo
cmp
mov
ja
jmp
mov
loopne
mov
mov
dec
mov
jmp
repz
rcrb
ret
insl
out
xor
call
std
rorl
testb
cwtl
push
jae
lret
das
add
lds
popa
fiaddl
in
pop
pop
mov
push
mov
or
jne
lods
cmpsl
pop
pop
inc
decb
cld
push
subb
fdivrl
outsb
and
xchg
mov
sbb
and
cmp
aaa
inc
out
lods
rcll
dec
adcb
mov
and
mov
repnz
insb
bound
dec
pop
dec
mov
push
xchg
lret
rorb
test
shll
jmp
repnz
add
insb
ret
mov
xchg
sub
out
lods
cmp
je
adc
adc
int3
sub
inc
sub
jl
stos
mov
test
jp
and
dec
jnp
or
cmp
inc
mov
bound
sbb
mov
cmc
test
pusha
pop
fnsave
ret
xor
pop
cmpsl
mov
icebp
mov
inc
push
imul
daa
sub
xchg
mov
xchg
std
ds
xor
rcll
rclb
dec
pop
and
xorb
out
loop
arpl
xor
into
or
mov
adc
sub
mov
mov
cmc
mov
sub
sub
mov
mov
pop
ret
dec
sbb
and
xchg
xchg
inc
jb
and
roll
in
in
xchg
push
dec
std
pop
out
and
dec
or
or
cmp
outsb
jbe
add
sbb
int3
stos
fbstp
mov
scas
mov
add
call
outsl
ja
pop
lds
sub
arpl
mov
push
and
mov
jle
ss
mov
test
imul
sbb
or
push
ja
dec
mov
pop
leave
dec
jbe
push
pop
out
push
jne
jns
repz
ret
cmp
aas
mov
mov
sbb
bound
inc
xchg
mov
sti
jae
sub
test
int3
add
mov
jle
sub
xchg
xor
lcall
test
mov
xor
in
push
jmp
pop
dec
fstl
push
mov
aas
test
pusha
jb
fs
movsb
lret
pop
add
outsl
dec
movsl
test
hlt
shrl
xchg
cmp
outsb
pop
je
shll
fbstp
inc
dec
xor
push
jecxz
push
or
in
repz
jne,pn
pop
and
int
sub
sbb
lods
iret
fistpll
inc
enter
ljmp
mov
lahf
sbb
dec
push
jecxz
jmp
xor
or
roll
leave
ljmp
mov
jmp
push
iret
mov
mov
outsl
pop
inc
rorb
jle
stos
fisttps
std
sahf
jnp
dec
jns
jl
es
test
jb
cmp
sub
pushf
das
cld
ret
imul
cmp
enter
push
flds
int
pop
in
cli
popa
popa
push
cmpsl
nop
data16
cmp
mov
es
lock
call
cmp
es
sbbl
jmp
fs
mov
fldl2t
out
mov
aaa
ffree
jp
jmp
adc
and
inc
push
xchg
push
outsl
jno
push
adc
add
mov
test
jno
fsubs
cs
bound
sahf
lahf
mull
jbe
fxam
ljmp
push
push
dec
mov
and
pushf
test
outsl
mov
inc
mov
xor
cmp
repz
stos
push
pop
push
dec
ficompl
movsb
fcompl
xchg
jmp
in
imul
aam
fwait
les
sub
leave
gs
add
cmpsl
rorl
sbb
mov
fs
mov
jp
cs
adc
cmp
cld
mov
jnp
ret
aas
into
mov
dec
add
insb
and
fimuls
in
push
sbb
loopne
popf
cmpsl
xor
or
mov
sub
adc
in
test
and
sbb
push
pop
sub
push
mov
mov
jmp
xchg
addr16
fadds
popf
push
or
lea
insb
sbb
addr16
or
push
insl
xor
sub
sarb
dec
inc
and
loop
pop
pop
add
cmpb
outsl
push
mov
shll
imul
adc
adc
aaa
and
sub
xchg
adc
outsb
hlt
psrlq
dec
cltd
push
rorb
xor
xchg
xor
jmp
adc
dec
int
andl
out
cmpsl
mov
sbb
and
sbb
in
mov
pop
repz
call
xchg
je
push
pop
test
cmp
iret
adc
dec
fdivrl
in
jp
rcrl
add
stos
insb
xchg
dec
sub
ss
mov
call
aad
push
mov
pop
lcall
ret
lods
xchg
mov
cmpsl
ret
xchg
and
dec
std
jbe
pop
movsl
jp
sti
add
das
in
add
js
ds
cmpl
imul
or
fsubr
cmp
sub
xchg
test
enter
pushf
lods
int3
loop
cmp
xchg
cmc
addr16
mov
sbb
popa
imul
sbb
fsubs
adc
je
sub
push
xor
cmp
push
xchg
retw
aam
or
fstpl
stos
test
xor
xor
xor
sub
repnz
xchg
mov
stos
cld
lahf
sbb
dec
shl
cld
std
xor
fwait
or
xchg
stc
xor
not
cmp
rorl
testl
dec
aaa
repz
adc
cmpsl
lahf
rorb
test
pop
loopne
scas
nop
je
dec
les
pop
jg
repnz
shrl
adc
fsubs
mov
rolb
dec
mov
test
aas
shll
jmp
pushf
and
mov
pop
cmp
push
xchg
mov
sub
and
jl
shrb
lods
subb
rorb
adc
pop
mov
pop
mov
mov
mov
das
mov
mov
inc
and
pop
leave
jo
mov
pop
jno
lods
pop
dec
fdivrp
add
xor
inc
gs
out
cld
repz
push
decl
pop
cmp
pop
adc
cli
cs
mov
fdivs
psubq
push
mov
jae
pop
mov
adc
arpl
outsl
inc
loop
loope
mov
sbb
mov
icebp
lods
iret
hlt
in
jo
rolb
leave
outsl
mov
and
push
loope
bound
add
cmpsb
test
shll
add
test
inc
cmpsb
sbb
mov
cmp
adc
xlat
cmp
sub
pushw
shrb
andl
test
mov
imul
inc
mov
pop
lock
xchg
sub
xor
call
in
scas
inc
push
mov
pushf
repz
pop
and
outsl
fisttps
xor
and
jl
mov
movsl
aas
mov
adc
dec
sti
jnp
mov
movsl
cmpsb
in
sbb
popf
fistl
lods
mov
fdivrs
push
xor
cmp
xchg
xor
orb
call
sbb
xchg
mov
adc
sti
sub
push
inc
cmc
rcrl
lahf
repz
or
inc
fwait
out
scas
and
ficoms
push
ds
dec
xchg
dec
pop
sarb
incl
mov
and
adc
add
jge
mov
adc
mov
lods
std
gs
mov
cmp
adc
gs
fcom
push
dec
push
mov
scas
lea
cmp
cmp
cmp
sti
scas
pop
pop
pop
ret
jecxz
push
fdivl
sub
pop
jno
xor
or
sbb
outsl
cmpsl
jecxz
test
jns
add
les
arpl
lods
cltd
stos
xor
sbb
sub
popa
loope
mov
cmc
jl
cmpsl
in
cmc
push
mov
mov
cmp
and
cltd
cmp
lret
fmuls
mov
leave
push
sbb
mov
xchg
fwait
mov
pop
fcoml
adc
and
fimuls
pop
mov
out
adc
into
and
xchg
dec
pop
das
ret
mov
cld
pop
into
loopne
sbb
mov
sbb
or
ror
jmp
xor
xor
arpl
ret
pushf
adc
lret
sub
andb
gs
push
imul
dec
pop
pop
lahf
dec
std
enter
mov
enter
sar
xchg
lcall
or
repz
sbb
scas
jl
push
push
push
jo
lods
sbb
mov
push
test
pop
or
lret
xchg
jno
and
sub
dec
mov
xchg
imul
cmp
into
insb
mov
int
les
aaa
pop
xchg
fs
push
mov
icebp
mov
pop
in
mov
mov
push
jne
pusha
push
mov
sbb
sbbl
mov
flds
stos
sti
out
sbbb
loop
add
add
arpl
je
out
mov
pushf
mov
and
inc
dec
dec
pop
jo
push
imul
mov
das
push
add
cltd
loope
stos
inc
push
loopne
pop
mov
mov
xchg
lcall
pop
popf
mov
fisttpll
lret
add
jb
punpckldq
inc
xchg
push
in
mov
xchg
mov
pusha
jnp
jno
xor
sub
outsl
jo
sbb
fwait
mov
mov
or
jle
jl
mov
xchg
and
call
xchg
in
lea
cmp
push
add
xor
pop
mov
adc
lds
xchg
lret
add
mov
cwtl
xor
cwtl
mov
jb
js
es
cmpsb
sbb
inc
dec
stos
orb
in
or
les
das
or
or
sub
inc
add
fisubl
stos
cmp
mov
adc
xor
mov
jl
xorb
jne
fsts
push
xchg
je
mov
incb
xor
jle
repnz
addb
inc
nop
imul
aad
into
ljmp
xor
lret
mov
ret
mov
push
sub
sbb
daa
scas
jno
jmp
mov
icebp
xor
push
dec
movsb
mov
fstps
xor
jle
add
std
cmpsb
mov
mov
lret
adc
addb
xor
add
cmpsb
mov
scas
ss
dec
inc
ret
or
jae
add
adc
cs
push
xchg
scas
jnp
mov
lea
je
add
packsswb
lea
mov
rorb
push
or
push
mov
add
dec
xorb
push
push
or
jnp
mov
or
mov
lea
xchg
mov
add
cmp
lock
dec
and
jns
inc
push
xchg
mov
fs
nop
stos
jg
push
jne
pop
inc
gs
push
daa
orl
mov
cmp
std
lock
mov
sbbl
push
repnz
jns
popf
fcomps
sahf
mov
mov
addr16
icebp
arpl
scas
xchg
mov
mov
sahf
iret
lods
cmpsb
js
or
repz
je
test
dec
xchg
loopne
mov
test
mov
sub
in
jb
imul
xchg
jno
push
lea
add
rclb
and
push
out
movsb
lods
adc
mov
jae
into
and
jo
fists
xchg
sbb
fsts
ss
mov
sbbl
sbb
add
movsl
pushl
xor
pop
cli
xor
and
dec
push
xor
fcompl
iret
ja
xchg
loope
loopne
mov
jbe
sub
cmpl
mov
into
pop
push
jp
dec
adc
or
cmpb
inc
mov
push
cmp
mov
mov
dec
int3
mov
sub
into
lret
adc
mov
sub
jecxz
or
dec
popf
push
and
pop
lcall
es
mov
lahf
push
addr16
shr
arpl
fwait
xchg
pop
cmp
inc
mov
adc
sbb
rclb
push
add
pop
sbb
pop
cmpsb
and
xor
xchg
push
arpl
jmp
adc
xchg
cmp
pusha
mov
icebp
push
inc
mov
jle
aas
dec
jb
out
mov
add
stos
cmpsl
sbb
loop
xor
sub
dec
rolb
es
pop
movsl
fnstsw
xor
fistpl
out
mov
inc
jo
xor
xchg
lods
les
mov
or
mov
xor
ds
cmp
pop
xchg
pushf
fsubs
inc
in
mov
or
fildll
fwait
jae
movsb
sub
mov
iret
push
call
cmp
fcoms
movsl
inc
fwait
aaa
test
xchg
out
outsl
ret
std
fsubr
mov
mov
mov
push
mov
pop
push
inc
jge
mov
fcoms
test
xor
add
shlb
frstor
dec
cltd
mov
inc
sub
aam
inc
cmp
dec
mov
sub
sub
push
iret
dec
aam
cs
jmp
js
hlt
xor
insl
cli
mov
jns
test
push
and
adc
jo
orl
movsb
or
mov
repz
ds
mov
adc
arpl
insl
ljmp
call
rcrb
jmp
inc
std
cmpsb
sub
push
das
cs
mov
add
pop
mov
jbe
mov
std
pop
into
scas
sbb
ljmp
incb
cmp
or
pop
cmp
mov
pcmpeqb
mov
jns
push
cli
push
insb
dec
ret
fld
jl
pop
hlt
test
pop
mov
arpl
aaa
in
addr16
xchg
cltd
cltd
cmp
outsb
mov
in
loope
add
dec
dec
sub
jle
stc
push
fs
insl
repz
ret
ljmp
xor
out
enter
mov
pushf
push
fistps
dec
fprem
jne
pop
push
adc
lock
je,pt
push
push
xchg
fs
adc
xchg
pop
les
ja
or
cltd
mov
addr16
test
popf
gs
les
jns
adc
pop
sub
or
jmp
les
fsubl
mov
lds
add
ret
sbb
sbb
add
addr16
xor
jle
aad
push
mov
not
inc
cmp
inc
push
sahf
inc
ja
stc
rorb
sbb
jns
pushf
xchg
arpl
cmp
loop
jl
ds
and
cltd
sub
ja
add
xchg
push
jmp
dec
int3
push
outsb
mov
out
fsubl
and
imul
fwait
test
cli
hlt
sbb
jae
repz
iret
outsl
scas
imul
add
mov
shrb
mov
bound
dec
and
mov
xchg
cmc
mov
fsubs
je
add
or
pop
dec
mov
or
insl
popa
cwtl
xor
cwtl
test
push
mov
xchg
popf
xchg
add
loope
dec
out
add
hlt
aam
ds
adc
lret
inc
cmpl
repnz
sbb
jo
inc
out
inc
mov
jmp
cmpsb
loope
xlat
sub
in
sbb
subb
pop
jae
pop
aam
pop
call
mov
fcomps
jns
hlt
push
mov
adc
loopne
lahf
ss
jp
inc
pop
mov
dec
sbb
negl
or
sbb
shlb
push
lods
ret
int
sub
mov
mov
inc
les
jns
scas
jmp
rcll
cmovg
aam
cmp
mov
sub
xor
push
xor
inc
call
enter
into
sarl
sub
jbe
mov
pop
enter
into
lea
lods
in
push
out
xor
mov
push
adc
orl
jne
cmpsl
out
hlt
bound
push
fldcw
jl
addb
push
push
push
or
in
negl
sub
jnp
nop
mov
lods
pop
jecxz
out
mov
xchg
jbe
pop
jnp
testb
dec
sbb
mov
lds
mov
mov
or
jmp
sub
pop
pusha
in
xchg
xchg
pop
mov
jno
jl
jmp
xchg
sub
sub
lods
pop
jnp
mov
dec
frstor
and
mov
jae
mov
inc
xor
or
aad
insb
repz
aaa
push
jno
mov
in
xor
out
xor
notl
decl
push
xchg
jmp
roll
movsb
aaa
cmpsb
xor
and
mov
int
jno
pushf
add
xchg
sub
mov
aam
fs
shlb
sbb
popf
push
inc
test
mov
or
xchg
mov
cmp
sbb
adc
inc
or
pop
ja
mov
es
add
cmpsl
cmp
faddl
add
fsubl
adc
sbb
repz
xor
adc
movsb
dec
adc
cs
lret
push
test
iret
mov
jle
aaa
loope
negl
mov
rolb
mov
cmp
add
int
rcrb
jg
or
in
jg
int3
out
mov
cltd
mov
add
das
dec
add
xor
aaa
pusha
negb
cltd
imul
mov
pop
xchg
pop
cli
aaa
jae
pop
into
push
xor
test
xchg
notl
in
push
rol
xor
mov
movswl
pop
outsb
push
jns
lcall
fmull
push
cmp
int3
mov
ja
cmp
popa
cwtl
fwait
xor
and
xor
adc
scas
cs
std
push
cwtl
sub
push
insb
dec
scas
pop
je
xor
sbb
movsb
adc
cmove
lea
push
pop
mov
sbb
and
mov
sbb
dec
in
push
xchg
mov
lea
lock
test
ds
clc
mov
pusha
mov
out
lea
sbb
nop
xor
jl
jl
dec
dec
sbb
mov
ror
mov
push
and
xchg
mov
ret
mov
test
ja
shlb
inc
scas
adc
xchg
orl
mov
lods
inc
push
jns
dec
xchg
sub
mov
xchg
cld
std
lods
inc
fstps
push
popf
mov
mov
idivb
inc
sbb
sti
in
mov
mov
cld
mov
lahf
cwtl
test
fs
inc
into
cmp
mov
enter
mov
leave
jns
lods
mov
jo
sub
sar
mov
pop
lahf
dec
shlb
sub
jp
lds
adc
adc
aam
pop
or
das
pop
pop
or
cmp
lret
dec
pop
push
int
xor
xchg
sbb
mov
jno
out
mov
cmp
jg
imull
mov
xchg
inc
xchg
fidivl
lods
xchg
inc
stc
insb
cmp
pop
arpl
fucomi
jae
fbstp
jg
xor
xchg
inc
nop
bound
mov
push
js
subw
lcall
jle
xlat
aaa
jbe
mov
xor
stos
mov
cmp
jecxz
lds
test
movsl
add
jle
cmp
push
xor
aaa
into
jo
shl
lcall
push
div
leave
mov
faddl
xorb
add
stos
add
loop
lock
mov
sub
jecxz
xchg
out
les
stc
jo
push
fnstsw
stos
outsb
fnstenv
popf
movsl
mov
or
lcall
cli
jecxz
gs
xchg
shl
lods
jno
push
mov
leave
mov
jbe
test
add
imul
or
xor
inc
cmp
add
sub
aam
and
sub
in
imul
fwait
sbb
mov
push
xor
pop
sbb
adc
push
dec
clc
adc
lock
ljmp
jne
add
pushf
paddusb
jmp
push
fwait
mov
push
push
scas
push
dec
nop
scas
sub
and
mov
mov
fcmovne
xchg
sub
xlat
jae
dec
scas
fldt
in
mov
stos
in
int
pop
test
inc
sub
push
fnstenv
imul
cmpsb
push
lds
xchg
mov
sbb
dec
out
call
and
and
and
xchg
out
shll
jl
pop
xchg
gs
xchg
sub
aam
xor
nop
xor
movsb
in
roll
jmp
das
push
xchg
out
psubsb
inc
cwtl
into
jae
sub
or
and
cmp
jno
inc
push
arpl
add
imul
xor
fnstenv
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
decl
jp
pop
push
adc
stc
loopne
ss
clc
fidivrl
sbbl
pop
add
ljmp
clc
pop
add
ljmp
clc
adc
pop
fdivrs
stc
xchg
xor
push
pop
xor
and
mov
test
xor
xor
mov
pop
test
rclb
loopne
pop
push
adc
incb
iret
pop
push
movsb
aas
repnz
add
push
or
into
cmpsl
mov
into
js
add
add
xor
pop
push
sub
nop
cmp
add
movsb
aas
repnz
add
ljmp
adc
push
lods
xchg
popf
shl
pop
cli
movsb
loopne
cmp
push
push
push
stos
jbe
pop
test
pop
lods
clc
pop
add
sbbl
or
sbbl
fprem
adc
cmp
xorl
add
sti
cmp
push
adc
stc
sbb
ss
clc
fdivr
pop
pop
ss
pop
push
adc
stc
pop
add
ljmp
clc
sti
pop
ss
pop
mov
add
ljmp
clc
pop
adc
ljmp
clc
jmp
cmp
call
pop
repz
sbbl
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
cmc
cmp
ficompl
adc
ss
sbbl
fdivrp
pop
push
jae
mov
sbb
stc
aas
add
or
lods
clc
jg
ss
clc
fisubl
sbb
ss
clc
pop
and
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
pop
add
ljmp
clc
mov
adc
sbb
orl
stos
lahf
loopne
test
shll
insl
mov
pop
ss
cmp
sub
hlt
fwait
cmp
inc
aaa
pop
mov
lods
dec
outsl
lahf
fdivrs
incb
shl
lds
pop
cli
cmp
das
jae
or
fucomi
jmp
cmpsl
fs
pop
aam
xor
mov
mov
data16
mov
lods
mov
pop
cmp
adc
cmp
pop
push
cwtl
cmp
inc
insl
test
orb
jne
sbb
pmullw
mov
aad
call
movsb
lcall
imul
fisubs
ret
add
je
ss
insl
or
sbb
sbb
outsb
xchg
add
jbe
inc
pop
dec
dec
push
xor
add
iret
and
frstor
add
xchg
or
inc
lahf
push
pushf
mov
scas
mov
test
out
arpl
jae
mov
jp
dec
negb
cmpsb
fldlg2
mov
pop
js
inc
fistpl
or
mov
ss
push
and
mov
daa
sub
jnp
hlt
and
adc
pop
xor
loope
lods
sbb
and
fisttpl
aam
cld
xchg
imul
scas
mov
adc
test
orl
pop
adc
add
mov
mov
inc
push
movsb
inc
jbe
cmp
xchg
leave
and
adc
push
push
push
cmc
jb
xchg
add
stc
pop
add
cs
les
pop
ljmp
std
jno
mov
push
call
xor
pop
sub
fld
xchg
fidivrs
mov
ja
xchg
test
and
cmp
push
pop
aas
loope
pusha
out
aas
sbb
loopne
aam
call
scas
or
cmp
aaa
jg
sub
lcall
mov
mov
add
sbb
push
push
lcall
pop
push
inc
andb
sub
ret
push
push
fwait
in
out
ret
and
inc
pop
xor
call
adc
pusha
in
mov
sub
nop
andl
loop
cmp
ljmp
jo
lock
ljmp
psubw
add
sar
clc
cmp
adc
hlt
shrl
cmp
in
jns
pop
in
push
jo
jne
xchg
es
out
mov
xchg
pop
mov
movsb
pop
jns
inc
sahf
add
add
mov
fisttpll
sub
adc
fimuls
and
push
jle
and
sub
mov
nop
je
ss
push
jnp
xor
in
sub
rcl
sbb
cmpsl
push
pushf
leave
sbb
jg
and
popa
int
aam
adc
bound
cmp
fs
shll
or
loop
jmp
test
sbb
push
push
pop
dec
add
push
jp
bound
push
mov
pop
out
icebp
inc
pop
push
outsb
xchg
adc
cmp
dec
pop
dec
subl
mov
scas
adc
imul
cmp
xchg
xchg
stc
iret
fistpl
inc
sbb
dec
xchg
icebp
movsl
gs
mov
js
jno
insl
sub
sub
rep
inc
iret
mov
hlt
pop
icebp
movsl
sub
lret
das
xor
mov
mov
rorb
cltd
ret
inc
mov
jl
rcr
push
fisttpl
mov
mov
leave
in
lret
pop
sbb
sbb
fidivrs
xor
mov
pushf
inc
xchg
xchg
pop
fistpll
pop
dec
arpl
xor
xchg
scas
lahf
rcrl
insl
xchg
adc
sub
test
testl
or
fs
xchg
gs
lds
movsb
cld
cmp
ds
repz
pop
adc
repnz
push
or
jmp
xchg
xor
shl
pop
push
push
je
xchg
cmp
push
outsb
int
pop
outsb
inc
and
inc
cmp
sbb
or
stc
inc
dec
decl
int3
xor
xchg
int3
rcrl
sub
into
mov
cmp
pop
cli
in
ss
lahf
add
loop
cltd
add
mov
pop
out
je
xor
dec
mov
push
ja
and
cmpsb
imul
jecxz
icebp
lods
ss
lcall
fsts
jbe
sbb
sub
dec
jne
mov
xor
mov
stos
xor
jg
lahf
pop
cmp
stos
pop
incl
push
adc
int3
push
push
cmp
dec
jae
clc
xchg
cmp
fidivrs
dec
push
add
and
sbb
pop
add
repz
lret
xchg
cmp
pop
xor
or
arpl
sbb
out
shll
mov
dec
sub
loop
mov
pop
or
lea
aam
dec
rorl
test
push
or
ret
jmp
or
inc
das
movsl
fsubrl
movsb
inc
test
xor
lods
add
stc
and
inc
scas
xchg
data16
pushf
mov
cmp
repz
dec
int
jns
sbb
cmpsl
push
sti
cld
jno
xor
sub
outsb
fsubrs
repnz
lods
sub
jg
mov
into
push
mov
inc
cmpsb
ja
xchg
xchg
cmp
inc
ja
cmc
mov
in
jge
fcoms
data16
ret
imul
mov
aam
aad
cmp
shl
popf
adc
nop
nop
mov
or
jb
mov
inc
cltd
and
pop
pop
sub
int3
xchg
leave
roll
or
or
iret
add
push
mov
jno
ficompl
mov
adc
jb
enter
adc
test
jno
and
sbb
push
push
mov
fmulp
shr
mov
arpl
hlt
push
and
fnstsw
faddl
jb
lret
ss
cwtl
push
lock
pop
mov
or
push
inc
nopl
scas
lods
dec
imul
ret
cmpl
lret
adc
les
stos
iret
inc
xchg
pop
jmp
stos
mov
lret
int
jecxz
dec
mov
aaa
push
popa
cmp
mov
adc
sub
imull
mov
push
sub
imul
jbe
lock
xor
and
push
mov
mov
lock
ljmp
add
xchg
xlat
xor
lds
repnz
pop
filds
inc
push
mov
popf
pop
add
or
adc
add
lahf
mov
loope
in
enter
cmp
into
adc
mov
mov
xor
jbe
test
xchg
xchg
sbb
loop
push
push
andl
cmp
xlat
test
repnz
lds
mov
pushf
xor
gs
xor
aad
lods
sub
cmp
pop
push
jnp
mov
mov
and
cmpsl
xchg
sbb
pop
add
sbb
aam
xchg
loope
jno
mov
pop
ficoml
arpl
fnsave
fiaddl
enter
xor
pop
inc
rorl
add
out
pop
je
mov
xor
repz
popa
sbb
pop
sub
rcrb
sbb
shll
daa
xorl
adc
andb
cmpsl
sbb
decl
popf
or
cltd
jge
xor
sahf
cwtl
push
das
dec
popf
sub
and
sub
jns
or
and
cmpsl
dec
mov
sub
xchg
in
bnd
adc
or
dec
hlt
jg
pop
xor
mov
xchg
mov
std
lahf
lret
arpl
aad
iret
enter
fbld
shr
xchg
sbb
mov
and
sbb
insb
xchg
sbb
outsl
and
inc
xor
fistpl
test
outsb
sub
mov
shl
sbb
xor
sub
push
cmc
movsl
sub
cmp
add
and
mov
std
fbld
test
pop
out
int
punpckhwd
jle
sub
sahf
cmc
mov
add
jbe
insl
es
and
and
out
xlat
std
xchg
mov
fcomps
or
mov
sbb
cwtl
movsl
adc
or
or
and
fs
out
cmp
pop
jnp
mov
mov
mov
test
out
jmp
push
movsb
add
fsubr
adc
test
pop
pop
lds
leave
ljmp
lret
cs
lcall
mov
sub
mov
enter
jmp
xchg
mov
rorb
aam
jb
dec
sub
mov
daa
jecxz
pop
dec
stc
lds
aaa
shlb
xlat
add
lahf
cmc
js
and
dec
aam
in
or
pop
push
inc
sahf
xor
js
int3
and
les
lret
sub
cld
test
sbbl
aam
inc
and
jbe
sti
fs
je
mov
pop
shlb
into
lcall
xchg
push
popa
xor
loop
push
rolb
ret
in
fnsave
icebp
mov
fcoml
popf
js
scas
sub
mov
repnz
push
add
stos
and
pop
sub
daa
adc
stc
out
and
jb
les
fucomi
fstpl
bound
jno
pop
jl
mov
dec
push
inc
int3
iret
add
jns
lcall
pusha
xchg
mov
push
sbb
mov
test
pop
pop
fcoml
dec
adcl
mov
jae
mov
mov
jnp
adc
sub
shr
inc
xor
in
push
mov
popf
rol
adc
add
xchg
add
js
push
lods
mov
jg
dec
int
mov
loopne
std
out
pusha
pusha
in
clc
or
or
aaa
xchg
mov
and
js
mov
inc
data16
mov
push
pop
cmp
aaa
sub
scas
mov
fmuls
in
push
out
xor
mov
aam
push
and
repz
mov
adc
cmp
mov
jns
mov
mov
popa
repz
mov
cmp
add
ds
ss
call
lock
mov
popa
mov
jle
gs
mov
cmp
xchg
mov
lret
cmpsl
faddl
jmp
fbld
and
and
test
ds
sbb
sub
int3
gs
fistpl
sbb
idivl
jae
mov
mov
xchg
jmp
out
in
or
ret
xor
add
loop
sbb
sbb
inc
cli
xchg
stos
pop
xor
test
push
add
xchg
repz
jbe
ss
and
and
mov
mov
inc
scas
lret
push
mov
loopne
jae
cmp
jo
and
test
rcrb
add
push
and
jns
inc
mov
xor
in
push
push
dec
push
insb
dec
or
aad
and
inc
rcll
test
repnz
and
out
rcrb
inc
inc
xchg
inc
mov
stos
sub
sbb
ss
cli
cltd
dec
push
enter
lahf
sti
aaa
stos
test
sbb
adc
push
mov
mov
adc
push
divb
or
mov
inc
cmc
cmpsl
dec
rolb
push
fnstsw
mov
jle
add
mov
int3
jnp
jmp
xlat
adc
push
imul
inc
add
or
inc
lea
and
pop
js
lea
and
lea
mov
test
rorb
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
