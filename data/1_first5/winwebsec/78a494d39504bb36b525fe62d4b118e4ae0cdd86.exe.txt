sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
call
lea
push
push
call
test
je
push
push
push
call
mov
lea
push
lea
push
call
test
je
push
push
call
mov
add
mov
push
push
mov
push
call
push
push
mov
push
call
movb
call
mov
movb
movzwl
cmp
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
call
movb
mov
add
mov
mov
movl
mov
push
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
mov
push
call
lret
inc
dec
scas
sbb
and
and
sbb
sbb
inc
cmpsl
jae
ss
call
sub
add
xchg
loope
cwtl
rcll
and
mov
arpl
sub
mov
loop
push
fisubs
sub
push
jge
negl
shl
in
mov
pop
mov
cmp
push
imul
ret
xchg
pusha
nop
mov
xor
fldl
cltd
in
jecxz
in
out
xor
in
outsb
adc
cmpsl
xacquire
dec
cmpb
addr16
adc
pop
faddl
cmp
or
in
cmp
cs
xchg
iret
xchg
mov
mov
ret
mov
sbb
mov
mov
adc
or
imul
pop
jns
mov
sub
cmp
rcl
pushf
add
sti
inc
sub
cmp
inc
adc
out
mov
mov
xor
rcrl
and
fcmovu
mov
mov
or
xchg
xor
in
mov
out
sbbl
bound
sbb
loope
aas
fists
int3
in
clc
sub
pop
iret
inc
mov
inc
and
jnp
pop
mov
into
lret
sub
push
jbe
call
in
pop
lock
in
jg
int
mov
lods
pop
lds
ret
sarb
fwait
dec
mov
xor
adc
cmpsb
mov
xchg
push
arpl
sbb
mov
adc
mov
add
idivb
cmp
call
mov
movsl
inc
bound
mov
loop
pop
subb
fwait
jns
mov
push
dec
scas
or
outsb
mov
mov
mov
in
xchg
or
fs
pop
cmp
push
pop
loop
mov
cmpsl
lret
dec
cmp
insl
adc
or
movsl
shll
insl
mov
jnp
out
pop
sub
out
pop
clc
clc
mov
and
xchg
icebp
aam
ret
xchg
inc
out
test
xor
dec
xor
xchg
dec
add
arpl
pushf
fsub
scas
and
out
mov
fsubrp
sbb
out
jns
jb
jnp
sbb
push
shlb
sub
jno
or
rcrb
movsb
in
jns
add
mov
mulb
in
into
jns
sahf
andl
ret
scas
jne
fldt
dec
sub
push
sub
mov
push
ret
mov
dec
push
scas
shl
ret
pop
sti
aad
mov
xchg
fs
push
dec
pop
dec
sbb
or
stc
jle
jne
push
jae
cmpsl
dec
mov
out
cmp
out
mov
mov
orl
cli
adc
add
and
push
mov
push
mov
cli
inc
mov
call
je
cwtl
and
dec
aam
fcoms
into
sbb
pushf
scas
or
outsb
jo
and
cmp
es
ja
cs
push
aam
into
mov
ret
mov
ljmp
test
mov
pop
stos
cmpl
sub
lcall
out
xor
andb
insl
nop
pop
mov
xchg
out
shl
dec
pop
mov
dec
mov
pushl
mov
sub
jns
dec
outsl
mov
jge
js
cmp
lret
xchg
roll
mov
call
cld
dec
cli
test
lcall
shrl
into
fdivp
dec
lock
in
xchg
jp
pop
add
mov
ret
mov
xchg
add
inc
mov
pop
xchg
pop
popf
lods
dec
push
fs
inc
pop
cli
inc
fs
addl
fsubs
shlb
mov
ds
cld
ds
adc
mov
rcrb
es
xchg
test
sub
inc
out
mov
sub
js
test
outsb
shrl
mov
inc
les
pop
popf
out
mov
cmp
popf
inc
popa
sbb
pop
lret
push
pusha
push
jae
jg
xchg
dec
jp
xchg
mov
pushf
jge
cmpb
sbb
adc
and
inc
ss
aaa
adc
shl
sti
lds
push
mov
repz
mov
dec
test
or
pop
movsl
hlt
dec
sti
in
xchg
sub
sub
sub
push
out
sub
pusha
shlb
xchg
cld
faddl
mull
dec
inc
jno
pop
cmp
loopne
cmp
cmp
scas
xlat
insb
mov
loope
std
fs
lcall
and
xchg
add
roll
clc
mov
inc
mov
pop
loop
and
gs
outsb
cltd
and
xor
mov
sbb
cmp
cmp
push
leave
sbb
cmc
inc
fcmovbe
loope
repnz
loopne
mov
sbb
jle
sub
cmc
subb
addb
or
push
je
aad
call
cld
xlat
ficoml
popa
pop
fcmove
stos
imul
ja
jp
in
cmc
lret
in
or
jb
ljmp
xchg
test
stc
pusha
icebp
pop
and
stc
pop
inc
xchg
lds
jle
pop
mov
sti
push
push
sub
mov
or
out
xchg
mov
jo
pop
shlb
push
enter
jmp
add
mov
loop
jecxz
mov
mov
sub
out
test
insb
pop
adc
addr16
inc
jb
stc
jno
js
and
out
add
test
inc
jg
jl
out
and
jge
mov
mov
js
lods
push
or
mov
imul
cs
cs
lahf
mov
push
sub
cmp
add
addr16
jae
adc
xor
call
and
aaa
mov
adc
mov
ds
sub
scas
mov
adc
testl
pushf
ret
sahf
jle
popa
pop
and
xor
cltd
xor
je
sbb
add
pop
mov
jno
dec
push
push
fisttpl
jne
mov
mov
adc
cmpsl
test
data16
and
push
in
dec
ja
cmp
lods
fdiv
inc
out
xchg
outsl
xchg
rcll
repz
mov
mov
mov
mov
mov
fidivrl
sbb
test
sub
lahf
imul
gs
push
das
pusha
xchg
cwtl
dec
mov
mov
fwait
xor
sub
stc
dec
mov
pop
xor
xor
push
aaa
mov
xor
adc
adc
mov
inc
xor
scas
adc
adc
cmc
shrl
jae
cmp
mov
js
pop
fs
push
lret
enter
daa
xor
ror
out
xor
or
fucomp
movsl
sub
dec
test
lods
gs
jl
stos
and
std
mov
dec
add
outsl
nop
adc
pop
cmpsb
mov
mul
cmp
loopne
lods
outsb
dec
sub
push
adc
loop
int3
jp
jle
fiaddl
clc
mov
dec
sti
enter
jp
and
jge
loope
repnz
jne
pop
mov
ds
repz
test
aad
imul
cwtl
andb
mov
ror
xchg
mov
cmp
xor
pop
arpl
ret
fwait
and
leave
je
adc
push
push
jae
dec
fiaddl
mov
popa
sbb
dec
mov
dec
pop
dec
movsb
sarl
xchg
shll
mov
or
gs
mov
leave
or
jg
push
or
jne
test
push
mov
rolb
int3
arpl
and
mov
mov
jbe
adc
jmp
jl
adc
insl
hlt
out
popa
dec
sbb
dec
insl
mov
xchg
dec
out
fsubr
pop
push
hlt
leave
push
sub
mov
ja
mov
shlb
sbb
xchg
cmp
inc
push
push
subb
pushf
push
imul
mov
incb
xor
sbb
pop
fnsave
fistpll
mov
sbb
xchg
mov
fidivrl
mov
adcb
jp
aas
adc
inc
jo
sub
lock
pop
sub
jg
ror
dec
out
in
pop
jge
je
je
out
cmpsb
mov
sub
ret
sbb
dec
pop
cld
sub
adc
and
inc
add
movsb
cmp
mov
test
jmp
fsubs
push
pop
popa
es
adc
in
mov
mov
inc
inc
fldcw
repz
je
push
insl
push
shll
dec
rcrb
lret
mov
xchg
mov
outsb
mov
push
pop
ss
outsl
std
add
sbb
cltd
into
scas
stos
lea
jecxz
sbb
mov
mov
jne
pop
faddl
imul
xor
lret
nop
int3
lahf
imul
dec
push
pop
sarb
adc
sub
mov
cwtl
hlt
lret
sub
addb
jno
imul
jbe
mov
test
repnz
or
movsb
mov
mov
in
dec
pop
mov
push
pushf
pop
pop
mov
dec
xlat
sub
les
mov
xlat
insb
inc
xor
add
jb
xchg
sti
stos
fsub
pop
test
dec
mov
loope
sti
testl
nop
int
iret
xchg
aad
cmp
sub
mov
dec
mov
mov
mov
xor
adc
mov
inc
pop
fdivs
outsl
mov
inc
mov
or
cmp
or
mov
std
jmp
xor
dec
data16
mov
jmp
jl
jnp
popf
sub
jne
jae
iret
scas
jnp
mov
add
mov
push
out
cmp
fwait
out
add
push
lds
mov
ss
mov
fldl
mov
insb
jmp
mov
lods
xor
rcl
dec
xchg
dec
cmp
pop
movsb
ljmp
jae
lsl
mov
jg
and
mov
cmp
scas
push
mov
or
int
ret
mov
cmp
sub
stos
hlt
int3
jb
pop
jnp
cwtl
add
jl
mov
clc
lea
ret
test
jb
sbb
shll
sbb
pop
outsl
into
sub
inc
repnz
pop
jecxz
loop
add
sub
or
es
popf
in
inc
dec
js
insb
les
xor
inc
movsb
insb
pushf
out
loop
lcall
sub
sahf
sar
les
sbb
stos
mov
pop
mov
dec
inc
ret
addr16
push
push
inc
test
mov
jecxz
mov
mov
lods
mov
aam
aam
adc
inc
gs
roll
inc
push
sbbb
mov
pop
adc
sbb
sub
shlb
mov
dec
mov
mov
xor
insl
shlb
roll
test
leave
lods
dec
outsb
lret
sub
mov
les
adc
jae
xchg
vpunpckhwd
add
das
mov
loope
pop
mov
cwtl
inc
test
addb
mov
inc
outsb
mov
push
adc
xchg
fldl
xor
int3
inc
insl
push
mov
pop
jg
xorb
repnz
mov
adc
shrb
mov
jg
and
cmp
repnz
dec
jecxz
mov
ds
int3
xor
cmp
mov
scas
iret
movsb
test
dec
add
cmpb
xchg
icebp
mov
mov
insl
repnz
incb
out
test
push
sub
adc
pop
inc
sahf
inc
adc
xorb
fmull
test
ss
adc
lret
loope
dec
push
adc
icebp
xchg
fidivrs
ljmp
sbb
jnp
mov
stc
outsb
lds
mov
jge
add
jne
pop
inc
outsb
pusha
sti
loope
push
adcb
scas
fdivrl
mov
or
subl
mov
cmp
bound
mov
out
hlt
xchg
pusha
inc
int3
mov
cmp
push
lds
and
lea
add
loop
call
pop
insl
sahf
repnz
lahf
aaa
mov
add
jmp
imul
xchg
and
sbb
xor
mov
sub
push
jno
cmp
in
stos
push
xchg
stos
adc
incb
mov
into
fnstsw
pop
icebp
arpl
jg
cltd
nop
mov
pop
fidivrl
cmc
cmp
daa
cmp
dec
add
sar
mov
jmp
jb
arpl
mov
jl
adc
and
imul
in
iret
push
cmp
adcl
add
das
push
xchg
lret
push
ret
cltd
rcll
xchg
adc
out
je
gs
dec
dec
sub
or
shr
mov
mov
mov
outsl
sub
sbb
push
ja
dec
jnp
xchg
pop
add
inc
dec
aas
or
int3
or
loopne
jbe
bound
pop
inc
xor
test
pop
mov
jecxz
sbb
jns
push
cli
sahf
ret
mov
gs
sarb
pop
dec
pop
fwait
das
or
sbb
stos
xchg
jge
xchg
in
les
xchg
xor
test
mov
dec
dec
lret
imul
cli
mov
jg
push
jno
das
pop
ss
mov
int3
xchg
jge
lcall
xchg
and
adc
ror
mov
jnp
imul
pop
cmpsl
cmp
lahf
out
jnp
xor
fisubs
pop
or
fistpll
icebp
in
inc
jb
cmp
jnp
shl
pop
andl
stc
sub
fcoml
push
int3
ss
inc
xlat
incl
nop
jl
insb
sub
loope
les
cmpsl
addr16
sub
pop
push
xchg
or
cmp
adc
and
mov
sbb
stos
jmp
and
leave
push
push
jl
outsb
push
int3
imul
push
xor
lock
mov
cltd
and
cmp
cmp
adc
je
cmpsl
fldl
in
aas
mov
addl
mov
loopne
sub
adcb
add
bound
jecxz
rolb
add
pushf
dec
lcall
fidivs
mov
push
inc
xchg
lds
pop
jno
inc
inc
jmp
stc
jns
in
xor
int3
jbe
jbe
imul
ja
cwtl
cmp
sbb
xchg
jno
jl
or
faddl
setno
push
add
push
ret
lods
stc
add
aad
into
shll
shlb
mov
jp
ds
push
pop
in
xlat
jns
and
lahf
call
pop
sub
mov
jbe
mov
gs
mov
inc
and
inc
pushl
xor
popa
pop
jmp
jo
pop
scas
test
ror
sbb
idiv
imul
pop
cmp
iret
aas
mov
xchg
xchg
ficoml
mov
sbb
insb
inc
dec
push
jo
clc
pop
movsb
sub
jbe
pop
ljmp
icebp
aam
jge
dec
and
cmc
push
or
sbb
mov
stos
movsb
jbe
and
out
jp
pop
xorl
hlt
ret
jl
pop
sub
cmp
mov
mov
or
jnp
aas
lret
lea
pop
fimull
add
shll
cmp
mov
aam
inc
fs
mov
in
inc
mov
push
or
cltd
cwtl
dec
outsb
sub
xor
dec
out
mov
add
sti
push
stos
iret
in
mov
loope
mov
stc
out
push
cmpsb
push
lods
mov
or
push
sbb
cmpsl
lods
lret
cmc
pop
orb
in
push
out
mov
jno
popf
mov
jmp
imul
cmc
xchg
std
mov
rcll
decl
jno
leave
push
sbb
sahf
in
xchg
adc
aas
lret
pop
mov
cmp
mov
imul
inc
lds
inc
push
cs
dec
sbbb
inc
imul
adc
mov
lahf
ret
lock
es
push
sub
mov
or
mov
test
jno
ss
test
insl
lods
shrb
ficoml
rcr
loope
arpl
add
add
scas
xchg
test
test
data16
mov
outsl
adc
mov
mov
cmpsb
std
test
sti
add
imul
test
xchg
ret
cltd
cmc
mov
sbb
shr
jb
dec
mov
and
jp
nop
dec
sbb
test
mov
sbb
mov
arpl
movsl
pop
xchg
or
mov
jns
popf
adc
dec
lcall
mov
mov
mov
pusha
jle
scas
icebp
mov
daa
fmull
add
mov
test
lds
push
mov
push
dec
addr16
sub
mov
add
add
sub
sbb
mov
call
fstpt
xor
fistpl
cwtl
es
xchg
xchg
add
mov
sbb
sub
lahf
stc
fcoml
es
sbb
test
in
fstps
mov
mov
andl
sub
or
add
es
jecxz
sbb
inc
pop
jmp
shll
sub
mov
pop
or
mov
cwtl
inc
dec
adc
xor
daa
inc
jne
lock
sbb
mov
aam
iret
insl
adc
hlt
push
lea
out
int3
cmpsl
cmc
pusha
pop
pusha
push
mov
adc
xchg
xor
push
xchg
jge
xor
push
mov
jno
lock
mov
inc
inc
xor
es
cmp
mov
or
cmp
lea
jno
mov
imul
mov
jne
or
sub
call
sub
icebp
daa
sarl
xchg
inc
popf
jae
cmp
dec
bound
cs
jns
xor
movsl
dec
add
outsl
ret
shlb
push
jp
xorb
cmpsb
jmp
cld
pop
push
or
or
dec
mov
sahf
daa
dec
outsl
bnd
push
adc
push
shll
adc
fs
and
clc
jbe
push
add
out
sub
mov
ljmp
aam
scas
shl
cmp
popf
mov
in
sahf
push
in
inc
stos
or
pop
lods
out
insl
sub
fwait
vxorps
cmpb
add
ds
sub
cmp
jb
mov
popf
inc
dec
xor
outsl
fstpl
adc
adc
push
ljmp
arpl
xor
xor
je
sbb
push
inc
mov
xchg
aaa
test
sbb
sbb
dec
mov
xorl
xor
and
mov
sub
push
scas
sub
je,pt
mov
sbb
das
into
hlt
xchg
lcall
popa
iret
push
jecxz
push
cmp
add
test
push
lret
mov
stos
push
and
stos
pop
jg
or
out
sub
sbb
js
pop
and
loopne
test
jne
mov
lds
jne
lcall
xlat
roll
dec
out
dec
loope
mov
stc
and
das
icebp
inc
test
movsb
mov
lods
jecxz
mov
aad
mov
jb
mov
in
xchg
in
fmull
jle
sti
lods
xchg
mov
loop
pop
fwait
cmpsl
repz
bnd
inc
mov
xor
adc
cmp
test
push
clc
mov
mov
inc
xor
mov
pop
or
xchg
xor
mov
jno
pop
sbb
mov
insl
and
out
fidivrs
iret
aaa
lret
roll
sbb
xlat
outsb
fcompl
push
stos
mov
arpl
mov
jns
mov
cmpsb
push
sbb
inc
in
imul
xchg
loop
sbb
jae
test
out
pop
xor
adc
addr16
aas
sub
in
into
mov
mov
loop
dec
sub
icebp
xor
mov
repz
loope
into
jle
fcom
cli
popa
aam
inc
and
ljmp
shrl
xor
iret
and
scas
jne
imul
inc
sbb
mov
mov
repz
or
adc
xor
mov
je
data16
lock
cmp
xchg
mov
xor
pusha
loop
xchg
sbb
push
ljmp
loop
scas
xchg
imul
test
outsb
js
and
stos
shl
sarb
roll
stos
fcmovnu
push
mov
addr16
pop
ror
mov
mov
push
sarl
nop
mov
mov
push
insb
xchg
jne
sbb
mov
cs
insl
mov
pop
xchg
push
das
sbb
mov
aad
lahf
jge
jmp
outsl
sbb
out
ja
mov
es
add
xor
mov
push
mov
inc
pop
or
fildl
push
jb
sbb
shl
rcll
iret
pop
or
jle
iret
push
xchg
out
or
mov
movsl
xorb
in
scas
push
mov
into
xchg
push
jecxz
add
xchg
sub
movsb
mov
test
cmp
bnd
sub
repnz
push
hlt
clc
movsb
inc
sub
pushl
inc
mov
cmp
xor
in
icebp
stos
inc
sar
fidivs
xchg
cwtl
pop
add
cmp
jo
xor
clc
mov
and
mov
mov
into
pushf
loop
jne
inc
inc
int3
sbb
push
xchg
daa
cmp
push
sub
mov
mov
mov
push
dec
inc
test
bound
cmp
outsb
lret
ss
mov
pop
jmp
nop
in
mov
out
sub
in
mov
push
repz
xorb
ja
lahf
jne
inc
fcmovne
std
jne
mov
aaa
jg
pop
lahf
inc
mov
sbb
dec
jae
sub
aad
pop
sbb
fwait
mov
xchg
mov
and
popa
xchg
movsl
roll
pop
loopne
mov
jb
mov
push
shrl
adc
inc
pop
jbe
cld
xchg
mov
in
cltd
or
pushl
cli
aas
jecxz
test
mov
mov
jge
das
xor
mov
push
mov
add
dec
jmp
or
into
movsb
shll
out
sbb
out
dec
test
push
nop
ljmp
in
dec
sub
ret
and
ss
lret
push
das
test
or
insb
pop
clc
ret
adc
sbb
fucomip
sub
add
bound
sub
xchg
add
inc
or
fisubs
daa
or
leave
jno
aam
fsubr
pop
inc
dec
xor
xor
std
sub
test
mov
or
out
mov
repnz
xchg
testb
fwait
leave
and
xor
in
pop
orl
pop
sub
jl
pop
dec
jb
mov
xchg
xchg
in
xchg
jmp
mov
cmp
jmp
das
loop
inc
test
mov
push
cmp
or
sub
imul
jno
pushf
je
out
and
mov
loope
xchg
repz
jns
and
hlt
or
mov
push
or
test
rclb
jle
xor
out
pop
stos
iret
cltd
mov
loop
mov
loopne
lods
mov
fsubrs
stc
mov
arpl
ss
xchg
sub
sbb
enter
outsb
jae
je
xlat
out
rorl
fstl
fdivrs
inc
leave
sbb
xor
jae
jmp
sub
out
sub
dec
repnz
push
in
jmp
add
insl
out
jo
sbb
clc
pop
enter
es
xchg
jl
adc
cli
ljmp
stos
fcomi
jbe
sbb
fistps
xchg
mov
push
test
popa
xlat
lea
adc
inc
xor
int
mov
mov
inc
cltd
arpl
cli
ds
lock
jb
mov
xchg
mov
das
jge
sub
mov
pop
repnz
je
jae
or
sbb
jnp
inc
scas
jns
inc
adc
outsb
adc
les
cmp
sub
fnstsw
push
addr16
test
push
ret
pop
xlat
or
ss
mov
push
fsubrs
mov
test
loopne
mov
fildl
push
scas
inc
dec
mov
ljmp
shl
shlb
fimuls
fnstenv
dec
sub
es
loopne
xor
jg
movsl
or
rcll
xlat
add
mov
cwtl
xchg
andl
loop
mov
ds
jge
jle
sub
lret
push
and
and
fs
cmp
lea
addr16
jne
inc
xchg
das
inc
push
movsl
mov
push
addr16
test
inc
and
out
cmp
and
sbb
mov
pop
je
fmull
lret
jmp
pop
pop
stos
or
dec
mov
insb
mov
sub
pushf
sbb
push
dec
aad
jmp
dec
pusha
std
push
jg
mov
adc
adc
daa
cmp
inc
xchg
push
jl
insb
sub
lret
out
clc
movsb
ljmp
sub
out
and
imul
mov
les
jo
ret
outsb
std
mov
mov
scas
call
add
rclb
nop
push
data16
or
stos
push
mov
imul
and
xchg
jo
aad
fdivrl
mov
ret
int
sbb
inc
sbb
ret
sub
mov
inc
fisubs
int3
mov
sbb
ret
sub
push
subl
sahf
repnz
lret
gs
push
and
fsub
les
nop
leave
sti
lahf
jp
pop
rolb
mov
inc
rclb
inc
in
mov
notb
movb
pop
or
iret
rcrl
test
sahf
lods
cmpsl
dec
cld
mov
xchg
cmp
adcb
xor
and
jnp
je
int
shlb
into
pop
inc
lods
cltd
scas
addr16
insl
test
sub
data16
mov
mov
fucom
mov
cwtl
or
cld
orb
imul
stos
mov
aaa
jnp
adc
push
in
mov
adc
push
inc
stc
sahf
push
insb
jb
cs
ficomps
popa
mov
add
mov
lcall
pop
sbb
mov
mov
push
pop
insl
ss
mov
stos
and
mov
test
ret
rcrb
jns
lock
adc
add
loope
xor
fisttps
movsl
jl
mov
rclb
lods
inc
or
movsb
cmp
xor
push
cmp
lds
fs
mov
jg
lahf
mov
jno
adc
outsl
add
clc
andnps
mov
pop
ret
bound
fiadds
cli
jge
mov
xchg
adc
ljmp
pushf
pusha
gs
cmp
inc
xor
dec
push
repz
sbb
data16
jnp
sarb
mov
cmp
jo
cmc
push
push
add
cmp
in
shlb
xor
dec
inc
loop
sbb
jge
hlt
sbb
mov
and
data16
out
je
inc
es
out
sbb
push
shll
mov
hlt
inc
stos
nop
cmp
cmp
stos
sub
dec
imul
mov
xor
xchg
das
and
movsl
inc
jns
inc
sbb
cld
cmp
loopne
sbb
or
cmpsb
mov
push
xor
addr16
pop
or
stos
js
and
subl
shr
or
push
cmpsl
mov
aad
and
mov
jmp
inc
cld
aad
out
mov
dec
popa
scas
loope
jmp
dec
adc
or
pop
sub
stc
push
imul
jne
popf
adc
and
sbb
jg
aas
imul
stos
add
mov
clc
jbe
cmp
mov
mov
lds
mov
jg
loopne
mov
popf
insb
shrb
inc
push
daa
nop
push
cmc
je
xchg
fisubrs
push
lahf
and
test
test
and
xor
sbb
mov
push
int3
pushf
es
out
sub
mov
add
mov
lret
mov
scas
mov
xor
fisttpl
int
aaa
xchg
ret
and
xor
scas
push
shll
xlat
dec
test
xlat
pop
ret
xor
movsl
insl
mov
shll
push
nop
pop
push
push
rorl
ss
inc
iret
push
jno
sub
mov
add
das
movsl
adc
pop
push
mov
cwtl
mov
add
call
lds
sub
pop
shr
and
mov
outsb
dec
inc
gs
lds
popf
ss
call
inc
adc
push
cmp
fsts
fistpl
jge
dec
mov
and
inc
int3
cld
pop
outsl
subb
xlat
xor
loope
pushf
lahf
movsb
gs
data16
cmp
jae
pop
push
je
lea
icebp
cmp
arpl
mov
out
mov
xor
je
sbb
xchg
data16
add
dec
pop
je
punpcklbw
sub
push
jecxz
fildll
or
sub
pushf
jae
out
fcomip
scas
pop
mov
push
sahf
inc
cmp
and
adc
mov
mov
sub
add
adc
adc
sahf
dec
cmp
repz
pop
into
clc
mov
add
loopne
les
ljmp
jo
sub
std
mov
jle
pushf
add
adc
or
js
dec
mov
xor
dec
into
in
adc
push
lret
inc
fsubl
repnz
jne
sub
aam
pushf
lds
push
xor
or
jecxz
test
xchg
jb
iret
mov
es
pushf
outsl
cltd
add
jo
test
das
xchg
fneni(8087
data16
test
push
or
insb
roll
loop
pop
lret
push
pusha
fnstenv
xchg
pop
insb
imul
inc
cmpsl
mov
inc
mov
xor
sbb
pushf
out
fcmovnbe
mov
movsb
sbb
xlat
push
inc
rcrb
movsl
fdivr
add
sahf
dec
repz
add
leave
push
pop
ret
stc
mov
xchg
test
push
inc
loop
loopne
sbb
into
inc
lret
xor
add
inc
repz
insb
rclb
in
mov
ds
add
in
mov
stc
ja
inc
sbb
in
and
jnp
ret
sbb
jbe
bound
and
lock
movsb
aaa
mov
cmc
ret
mov
push
mov
sar
ficompl
lret
jg
mov
push
lock
std
addr16
dec
or
jnp
std
sahf
pop
test
stos
and
ljmp
cwtl
subl
push
fidivl
rcl
testb
gs
push
adc
insb
push
or
jbe
mov
pop
int
cmp
lahf
cmpsb
fstl
ret
imul
in
dec
or
in
dec
pop
popa
inc
shrb
arpl
int
adc
push
adc
push
sti
out
std
and
jne
lock
inc
xchg
test
lock
fninit
push
imul
push
cmp
cmp
pop
data16
loopne
mov
mov
mov
insb
ds
mov
rclb
cmp
leave
xchg
sbb
sub
fwait
das
inc
jnp
jo
pop
mov
pop
xchg
dec
xchg
add
lret
outsb
mov
mull
xor
hlt
and
mov
int3
movsl
in
les
dec
jge
gs
loope
int
call
cmp
xor
mov
fxch
mov
sbbb
mov
adc
in
pusha
insb
sarl
push
add
sbbl
ja
sarl
cmp
mov
movsb
mov
inc
shlb
cld
lret
mov
cs
icebp
ror
loopne
idivb
fstl
lds
mov
stos
outsl
scas
xor
jge
or
mov
adc
stos
addl
sbb
fimull
insl
sub
ret
dec
fldl
test
outsb
ficompl
xlat
aam
dec
lahf
jae
arpl
fs
and
lret
rolb
jns
stos
pop
rcrb
movsb
call
and
in
pop
jbe
xor
out
ret
push
mov
jbe
mov
mov
je
jo,pn
lahf
mov
lods
or
and
ficoml
cmp
add
lea
cmpsb
inc
movsl
insl
mov
test
sbb
and
aaa
sub
pop
pushf
adc
gs
outsl
jbe
in
das
xor
and
inc
jecxz
xor
mov
in
adc
enter
gs
push
addb
pop
int3
pushf
outsb
sbb
push
ja
and
and
inc
jge
sbb
adc
stos
mov
mov
inc
into
cwtl
lcall
fisttpll
push
movsl
adc
shrl
push
push
ficomps
and
vpsadbw
fdivr
pop
loopne
dec
inc
mov
mov
mov
jo
sbb
cld
out
jns
bound
and
jle
adc
cmp
mov
jmp
js
jno
inc
in
js
rcrl
fcoml
pop
shrb
push
push
psllw
rcrl
xchg
push
into
pop
bswap
mov
flds
repz
push
movsl
mov
test
push
rcl
movb
jnp
mov
sub
fs
loop
jb
repz
mov
scas
hlt
andl
loope
jl
push
xor
dec
outsl
jp
hlt
mov
push
mov
mov
cmp
pop
or
std
test
push
cmp
movsb
jnp
cli
lcall
sbb
sub
push
je
jno
adc
repnz
pop
mov
sarl
aaa
dec
popf
adc
out
pop
bound
sub
pop
mov
mov
pop
mov
cmpsb
pop
dec
fnstsw
faddl
lret
mov
add
lahf
sbb
movsb
lock
pop
cs
add
movsl
cmp
pop
pop
roll
cmp
xchg
test
xchg
out
daa
jp
movsl
aad
popa
push
mov
cmp
testl
pop
sbb
mov
clc
sahf
ljmp
cmp
int3
cmp
push
divb
dec
push
sbb
jmp
lock
xor
jle
xlat
sbb
xchg
xlat
nop
sub
frstor
dec
cmpl
pop
insl
pop
add
je
leave
stos
xor
addr16
mov
stos
fisubl
push
lods
je
or
repz
lret
sub
js
leave
mulb
test
xor
dec
cmp
jmp
jb
mov
or
add
xor
nop
dec
movsb
xchg
insb
cmp
mov
xchg
xor
into
sbb
jp
nop
inc
jmp
pop
cld
or
sbb
lock
js
jmp
mov
sarl
das
add
inc
shll
xor
je
push
add
les
cli
add
in
scas
in
cmpsl
xor
es
movsb
std
dec
sbb
xchg
sub
and
rorl
sub
aad
repz
stos
aas
mov
fsubr
or
dec
xor
mov
leave
mov
adc
push
fcoms
cmpsb
jl
jp
sbbb
sbb
pop
lea
mov
punpcklwd
xchg
jnp
pushf
xor
jnp
and
xor
push
ljmp
xchg
pop
in
and
lock
jge
xchg
mov
int
or
or
mov
fsts
scas
ret
add
add
push
notl
push
mov
dec
in
mov
mov
xor
jecxz
bound
imul
jo
shll
push
mov
xchg
adc
mov
xor
fistl
inc
xchg
xlat
int3
xor
shll
or
lret
ljmp
mov
cmp
pop
and
push
scas
pop
mov
xor
mov
stos
pop
or
pop
inc
fiadds
sti
cli
dec
xchg
sub
xchg
lods
fwait
push
js
dec
dec
rcr
hlt
mov
lahf
movsb
jecxz
ja
sti
ds
pushf
jnp
xchg
lock
add
sbb
je
test
mov
dec
mov
xor
insb
jl
or
pop
push
insb
jmp
or
ret
loope
iret
sarb
and
mov
adc
mov
mov
pop
cmp
fistl
mov
mov
fyl2x
mov
lahf
mov
add
mov
aam
mov
mov
dec
loope
mov
sbb
mov
push
xor
mov
loopw
enter
js
mov
loopne
adc
pushw
xchg
jbe
mov
add
out
cli
cltd
push
and
xor
das
xor
stc
out
jle
iret
jnp
outsb
iret
les
dec
push
mov
test
sahf
inc
aas
xor
daa
fcomps
inc
stos
arpl
mov
xlat
push
stos
jmp
mov
enter
add
dec
aas
sub
lahf
mov
push
inc
cld
inc
pushf
aam
or
loope
clc
lds
xchg
push
pop
das
xchg
mov
mov
mov
sbb
xor
sub
mov
rorb
mov
in
or
xor
in
adc
mov
popf
out
popa
mov
xor
or
jae
icebp
xchg
pop
mov
add
negb
push
inc
call
stc
cmp
call
pop
jne
mov
xor
rorl
xor
and
rcrb
dec
push
lea
mov
xchg
adc
adc
mov
or
call
popf
sub
ja
or
push
imul
lret
aaa
aam
mov
inc
pop
js
fidivs
adcb
and
pop
push
xor
pop
xchg
sbb
cmp
jmp
xchg
lods
lea
add
aaa
or
push
adcl
fwait
add
jmp
insb
mov
test
mov
in
ds
lea
cmp
cltd
nop
xchg
mov
cwtl
xchg
sahf
rcrl
ffree
loop
rcl
rcl
jmp
cmp
mov
addr16
and
lock
push
xchg
das
fdivr
cmp
aaa
clc
pop
mov
add
xchg
sub
sahf
or
jg
sbb
ja
pop
rcl
jnp
jno
in
int3
cmp
sub
ret
dec
addr16
mov
ja
movsb
lret
ficoml
bnd
xchg
cmpsb
xchg
sub
sub
jp
jns
push
cltd
mov
mov
push
mov
or
fisttpll
jecxz
ret
insb
cmpb
int
mov
rclb
push
mov
dec
in
jo
mov
stos
xchg
xchg
cld
cmpsb
dec
jnp
shlb
jnp
shll
push
dec
push
cmp
int3
dec
aas
out
insl
sar
pop
repnz
jne
mov
sbb
movnti
pop
pop
mov
mov
pushf
mov
jg
scas
lods
cs
mov
mov
ljmp
dec
andb
fmul
mov
int3
mov
pop
stos
pop
and
jecxz
cmc
lret
stos
sub
xchg
push
and
inc
push
aas
adc
and
pusha
cmp
sub
jmp
fiadds
mov
jne
in
xor
jmp
cltd
divl
push
sahf
lods
inc
mov
sub
add
cmp
sahf
dec
cmp
push
sarl
adc
test
lock
cwtl
mov
imul
into
mov
or
sub
scas
pop
testl
xor
and
xchg
xlat
jp
mov
xchg
pop
mov
adc
cmpsb
add
sub
out
fiadds
xlat
in
mov
adc
pushf
jmp
mov
mul
popf
adc
mov
outsl
mov
pop
sub
loope
push
stc
xlat
xchg
add
xor
adc
jl
mov
lcall
inc
cld
fisubs
cld
pop
sti
inc
aam
push
aad
repnz
inc
daa
and
outsb
inc
dec
inc
xor
mov
mov
les
test
fwait
push
enter
popa
dec
in
sbb
jno
lcall
mov
adc
inc
mov
hlt
mov
js
mov
popf
sbb
jae
pop
aas
inc
movsl
sub
mov
mov
adc
xor
pop
or
push
add
outsb
hlt
cmp
push
pop
sbb
jg,pt
mov
sbb
gs
out
frstor
mov
jle
popf
sarb
xorl
xchg
fwait
test
in
loopne
int3
lds
xorb
pushf
dec
in
inc
aas
fistps
lods
push
aam
std
sub
mov
sbb
icebp
sub
in
mov
loop
dec
xor
dec
stos
sarl
in
lahf
scas
mov
cmp
add
movups
push
xchg
jge
inc
lret
std
push
mov
rolb
scas
pop
dec
sbb
dec
rolb
pusha
jns
cmp
jg
repnz
out
jne
and
lcall
test
mov
les
mov
in
out
inc
shr
sti
xchg
xor
jo
cmp
clc
mov
mov
scas
cmpsl
test
ds
clc
enter
decb
in
loope
push
insl
or
test
mov
shll
in
sub
xor
fsubrs
jae
ret
adc
lcall
mov
mov
movsl
and
lock
lahf
mov
scas
in
loopne
stc
imul
aad
fs
push
les
mov
in
add
test
jb
pop
ds
adc
pop
and
inc
leave
add
cmp
addb
cmp
pusha
mov
mov
pop
add
xchg
pushf
cltd
push
stos
dec
test
lret
ss
adc
adc
dec
inc
push
xchg
pavgw
gs
adc
mov
pop
mov
dec
add
dec
mov
jge
inc
mov
clc
pop
dec
mov
stos
lahf
cmp
push
xchg
les
jae
stos
jo
jae
jbe
jnp
cltd
stos
clc
push
pop
loopne
inc
in
mov
orl
sti
lea
fadd
pop
mov
jnp
ljmp
jnp
jg
cltd
mov
dec
jbe
adc
dec
sub
jb
cltd
jmp
cli
fs
mov
pop
sub
sub
xchg
add
movsl
jae
nop
std
stos
jmp
or
mov
movsb
js
xlat
mov
and
pop
popa
std
test
pop
mov
orb
cli
pop
mov
adc
lods
jno
fnclex
pop
mov
ret
pop
mov
jle
mov
arpl
add
inc
cmp
test
shlb
cli
adcl
call
jl
adc
enter
das
push
mov
test
in
pop
shrb
cli
sbb
mov
int
xchg
arpl
ret
shlb
inc
popa
cmp
or
or
pop
add
popf
xor
repnz
dec
hlt
dec
dec
loop
sbb
mov
xchg
in
icebp
mov
push
push
jp
out
orl
shlb
sbb
cltd
mov
mov
mov
cli
es
push
xchg
xchg
cmp
fisubl
sahf
xchg
cli
repnz
dec
add
fwait
andl
rcll
cmp
push
pop
sub
push
lcall
mov
jno
ja
iret
jbe
and
pop
and
fwait
test
mov
cwtl
inc
dec
mov
push
mov
mov
andb
out
cltd
push
and
xchg
adc
mov
mov
push
fldcw
adc
inc
cmpsb
inc
cmp
pop
arpl
incl
dec
test
or
xorl
xor
fnsave
and
mov
movsb
in
shl
inc
fidivs
mov
fsubl
loope
add
xor
push
and
cltd
jg
sbb
push
ljmp
in
lods
mov
push
or
cwtl
cmc
dec
test
iret
add
ss
push
and
add
popa
sbb
pop
loopne
xor
xchg
loop
or
popf
sbb
push
xchg
inc
sub
jnp
in
pop
stos
cmp
cmp
outsl
call
push
mov
xor
and
adc
mov
jmp
data16
add
mov
mov
mov
mov
rol
lahf
lea
pusha
dec
xchg
xchg
jnp
test
repz
int
sub
data16
xchg
jne
sub
add
nop
loop
loopne
pop
mov
test
cltd
psrad
push
push
es
notb
xlat
inc
icebp
add
mov
movl
push
xchg
out
dec
mov
or
cs
cmp
leave
call
clc
lds
cmp
das
push
fs
and
pop
mov
xor
pop
pop
add
repnz
pop
sbb
adc
push
and
or
xchg
insb
fildll
xchg
roll
out
cwtl
imul
nop
hlt
push
jmp
jbe
das
loope
inc
mov
sbb
fdivrl
push
bound
mov
arpl
add
mov
mov
mov
fcomps
orb
popa
push
decb
or
fists
inc
in
and
xchg
mov
xor
sar
cmpsb
js
daa
xor
imul
jg
addb
xor
stc
xchg
cmp
xlat
mov
mov
int
mov
jo
mov
int3
push
inc
xor
cli
and
xchg
gs
xor
cmp
inc
mov
adc
lock
inc
mov
mov
and
notb
leave
loop
cmpsl
adc
xchg
dec
xor
push
adc
inc
jae
sbb
test
push
mov
shrl
and
lea
pop
cmc
adc
xorl
cmp
addr16
ficomps
mov
push
mov
inc
pop
mov
sub
sti
fldcw
incl
push
or
inc
incb
rcrl
inc
sbb
fucomip
lcall
push
push
cmp
dec
ret
push
shl
mov
pop
inc
out
xchg
rcr
aaa
mov
pusha
or
dec
jecxz
and
imul
or
adc
loopne
test
xor
call
cltd
inc
jno
or
jp
outsl
lods
mov
cmp
mov
dec
aam
xchg
adc
arpl
std
fcmovu
push
or
sets
sub
aas
sub
fidivrs
cmp
movsb
cmpsb
lea
insl
mov
subb
scas
andl
cmp
dec
int
inc
stos
stc
ljmp
clc
mov
cmp
movsl
xchg
insl
dec
test
das
and
icebp
pusha
cmpsl
mov
and
xchg
jmp
fisubrs
pop
in
leave
push
je
scas
push
sub
mov
sbb
adc
lock
xor
insb
sub
mov
mov
dec
pop
out
jb
cmp
push
inc
hlt
sbb
insl
repz
sub
xchg
jmp
mov
xchg
or
push
stc
inc
ja
imul
mov
push
stc
nop
lds
and
mov
in
aaa
call
sbb
push
push
nop
fmuls
loop
fcomi
or
mov
lret
imul
out
inc
repz
rcl
fwait
cmp
sub
fists
mov
insl
sub
enter
dec
xor
cld
js
sub
add
popa
xchg
insl
dec
inc
xchg
inc
ficompl
mov
ja
xor
add
notb
jg
mov
add
adc
push
mov
insl
and
and
push
cmp
jp
jb
push
imulb
push
add
fwait
mov
push
cmpsb
ja
dec
pop
jmp
loopne
pop
sbbb
inc
ja
sti
mov
test
aaa
cmp
add
xchg
push
aaa
xlat
jmp
inc
loope
mov
stc
xor
iret
leave
jge
sub
pop
mov
cmp
pop
pop
outsl
shll
or
test
mov
jp
lods
pop
sub
inc
clc
inc
pop
pop
in
inc
dec
jne
jae
inc
jb
inc
out
sti
es
add
mov
jg
aas
jo
push
xor
into
pop
or
popf
inc
scas
test
xlat
sbb
daa
or
outsb
aas
jmp
in
scas
inc
xchg
cmovl
pop
xor
push
jb
js
inc
fdiv
aas
sbb
push
push
out
fldl
xchg
mov
daa
mov
push
out
stos
cmp
in
or
dec
pop
fdivl
inc
xor
andb
sub
call
mov
lcall
jge
addr16
ret
ret
sbb
mov
cmpsb
sbb
and
xor
sbb
lcall
inc
ret
sbb
fidivrl
xchg
cs
ja
sub
scas
cmpsb
push
jecxz
or
push
shrl
xor
push
scas
dec
add
jnp
in
rcrl
sub
popa
pop
mov
and
push
ljmp
push
dec
out
lret
cmp
adc
jle
int3
lods
push
push
mov
push
pop
incl
adc
jge
pop
pop
cmp
repnz
jmp
bound
hlt
les
push
dec
dec
jae
loope
idivl
rcr
xchg
negl
stos
insl
ljmp
sbb
mov
or
dec
cli
addl
sbb
push
inc
inc
repz
insl
loop
mov
xlat
jo
scas
xor
cli
lock
je
cmp
scas
data16
sbb
xor
outsl
imul
enter
repnz
and
repnz
sub
hlt
mov
sti
adc
and
fnsave
xchg
divb
loope
jmp
mov
mov
mov
dec
rorb
cli
stc
xchg
bound
cmpsl
inc
std
push
out
add
jg
xchg
inc
ret
push
cmp
repz
sbb
jp
sbb
xor
inc
push
rcr
ss
cmpsl
cmp
sbb
insb
cld
fsubrp
lcall
ret
imul
and
cwtl
loop
frstor
cmp
inc
xchg
scas
mov
jmp
icebp
outsb
xor
notl
loopne
sub
repz
loopne
dec
add
mov
pusha
push
pop
mov
inc
lea
pop
add
cmp
xor
sti
add
add
adc
fwait
add
sbb
cmp
shrb
dec
xor
mov
add
add
mov
push
mov
mov
xor
xchg
scas
movsl
jecxz
ret
push
pop
dec
jl
mov
or
jb
lods
adc
loope
jmp
jb
push
int3
cmc
or
mov
ljmp
imul
iret
pop
test
in
cmp
dec
pop
test
mov
pop
movsb
js
lods
push
repz
mov
sbb
push
sub
xor
fs
lret
jle
ja
sub
fimuls
arpl
fwait
stos
dec
fmull
xchg
add
cmp
sbb
cmp
sub
add
mov
in
sbb
idivb
sbb
lock
or
dec
insl
push
mov
jb
das
adc
aam
xorb
mov
xchg
sbb
mov
cs
fidivrl
ljmp
mov
jno
les
shlb
pop
sbb
or
jmp
cmc
or
inc
lods
pop
cli
inc
push
stos
stc
dec
je
dec
mov
sbb
aaa
mov
jp
int3
mov
enter
add
adc
sbb
cmp
ss
imul
test
sbbb
sti
sub
or
mov
cmp
jnp
and
outsl
or
aas
test
jb,pn
sti
addb
cmp
gs
xor
negb
add
outsl
das
or
fcompp
mov
ja
xchg
lods
xorl
arpl
dec
jmp
negl
jb
arpl
stc
sub
or
insl
imulb
sub
loopne
inc
enter
test
mov
cmpps
aad
scas
or
rcrb
test
and
jl
cmc
sbb
mov
dec
push
adc
inc
or
pop
sbb
js
mov
dec
pop
mov
pop
cmpsb
pop
ja
jge
repz
add
add
sbb
pop
icebp
or
pop
or
pop
daa
and
aad
mov
sub
dec
in
shlb
jmp
mov
nop
cmp
sbb
inc
jg
pop
cmp
scas
adcb
dec
out
insl
pop
xor
imul
lock
adc
aam
out
push
aam
lcall
sbb
pop
cmp
sbb
mov
test
mov
mov
pop
std
jae
je
lahf
pusha
test
mov
jo
les
mov
movsb
gs
out
cld
xchg
test
push
mov
jns
lods
iret
jnp
mov
js
scas
sar
mov
mov
mov
mov
and
loope
jae
mov
aas
sub
xchg
push
outsl
push
mov
xchg
or
call
mov
les
xchg
and
inc
insl
xchg
ljmp
mov
out
mov
sbb
cmp
test
fsubrs
imul
sahf
sbb
rcrl
sbb
adcl
fsubrl
cmp
inc
sti
jb
pop
pop
clc
enter
jb
outsb
sahf
mov
mov
call
jae
stos
call
ficomps
and
or
pop
cltd
mov
bound
lods
test
std
outsb
dec
sti
jbe
daa
test
jbe
aaa
pop
pusha
pop
mov
cld
fdivrl
lods
rorl
mov
dec
popf
cwtl
sbbb
sbb
jnp
inc
jle
mov
icebp
pop
imul
insl
sarb
js
in
cs
pushl
fcom
and
es
stc
ds
push
mov
repz
shlb
adc
mov
jnp
rcrl
add
les
fs
movsl
and
dec
inc
xor
push
outsb
insl
sub
inc
push
aaa
loope
aad
xchg
mov
aam
push
repnz
and
xor
inc
ret
sub
cld
sbb
aad
jnp
lods
xor
jb
lods
dec
shrl
xor
xor
out
mov
repnz
repz
ds
stos
xchg
xor
adc
loopne
mov
fmull
stc
movsb
mov
lret
dec
inc
cmp
add
push
sbb
repnz
sub
ljmp
mov
lods
inc
sbb
mov
fnstenv
inc
test
cltd
sbb
jne
mov
inc
sub
or
lret
in
scas
sbb
sbb
sbb
adc
or
mov
sahf
xor
or
inc
jo
shld
out
inc
xlat
lods
cmp
fwait
sbb
sahf
or
repz
fnsetpm(287
mov
movsl
xchg
sub
inc
push
push
out
mov
lcall
lcall
outsl
xor
fstpt
mov
sbb
mov
add
xor
fdiv
jne
and
fiadds
mov
out
add
adc
cmpsb
dec
push
inc
xchg
incl
dec
xchg
fdivrs
cmp
fcomip
cli
hlt
cmpsb
lret
mov
cltd
xchg
pop
and
fwait
pop
lret
xchg
out
loop
mov
sbb
les
movsb
cmp
mov
sub
outsb
and
clc
outsl
inc
push
push
mov
setp
fdivl
adc
in
cld
inc
enter
mov
pop
cmp
roll
inc
pop
shl
cmp
dec
fs
adc
xchg
adc
ret
clc
cmp
shrb
xor
xchg
ljmp
in
fsubs
inc
sub
push
inc
sub
test
cmp
sbb
mov
xor
shr
mov
push
mov
iret
push
inc
dec
out
jbe
push
cmp
test
test
inc
dec
fldt
pop
mov
frstor
jg
insl
jmp
ljmp
ss
clc
push
daa
mov
jp
repz
push
lcall
jg
cmpsb
adc
or
out
mov
leave
loop
shl
movsb
mov
pop
and
jb,pn
cmp
mov
aam
push
mov
xchg
loop
adc
movsb
shrl
sbb
inc
outsl
push
inc
dec
add
in
iret
fmul
mov
call
dec
test
pushf
jbe
cmp
push
nop
inc
daa
cmpsb
cltd
pop
pushf
addr16
xchg
inc
cli
fistpll
lods
call
pop
mov
push
int3
mov
clc
and
gs
push
xor
mov
scas
add
scas
push
int
jp
dec
dec
jmp
divb
lcall
inc
mov
jns
mov
fnstenv
ret
test
jnp
cwtl
pushf
nop
dec
mov
inc
decl
scas
mov
xlat
cmpsb
outsl
sbb
xor
aad
mov
arpl
inc
notb
xchg
cld
xchg
imul
outsb
mov
idivl
mov
mov
mov
xor
bound
jecxz
xchg
xchg
mov
sbb
stos
xchg
out
notb
xchg
sub
imul
movsb
dec
jle
sbb
mov
popf
outsb
repnz
outsl
jmp
jo
add
inc
mov
clc
dec
add
adc
pushf
stos
pusha
popa
mov
rorb
pop
xor
jge,pn
cli
filds
adc
or
pop
in
pop
inc
sbb
push
aas
insl
sub
add
jle
movsl
movsb
pop
ret
and
or
sarb
inc
push
hlt
add
shrb
imul
mov
jae
sbb
ja
shrb
jle
mov
fs
adc
cmp
mov
jmp
dec
cmp
dec
dec
xor
addb
aam
jge
int3
pop
lea
adc
mov
fildl
cmp
and
xchg
out
inc
pop
rcll
xchg
push
ret
inc
jne
fsubr
addb
and
cmp
push
pushf
dec
or
ret
sahf
outsl
inc
nop
xchg
xor
lret
mov
aad
mov
int3
popf
sbb
push
ret
fists
mov
cli
aad
ss
pop
bnd
sbb
add
push
rolb
out
jp
fs
es
pop
arpl
jne
pop
xchg
xor
mov
sti
std
or
subb
push
fsubr
out
push
pop
add
mov
fcomi
xor
loop
ja
add
and
inc
pusha
int3
imul
stos
cltd
repz
dec
repnz
in
call
mov
hlt
enter
subl
inc
pop
mov
je
loop
or
and
or
adc
mov
mulb
xchg
fdivr
xlat
jge
out
jns
shlb
mov
and
fcompl
mov
pop
adc
or
or
xchg
fmuls
jge
insb
in
xlat
ror
mov
fwait
adc
out
cmc
add
aad
mov
sbb
jb
cli
stos
xor
jnp
mov
mov
mov
pop
and
sub
movl
leave
cli
mov
test
popf
mov
js
decl
pop
repz
rcrb
filds
jo
test
adc
cmp
push
lahf
lcall
mov
ret
jbe
or
stos
outsl
in
sarb
fldenv
sbb
fnstenv
aas
sbb
and
xchg
into
adc
fnsave
xchg
leave
sahf
fisubrl
cmpsb
lods
loope
adc
es
or
jle
pusha
lds
inc
push
push
mov
stos
popf
mov
mov
xor
add
inc
push
jbe
test
cld
jns
fucom
sarb
add
add
sub
mov
mov
inc
push
add
mov
add
push
add
pop
mov
inc
jp
nop
jp
add
pushf
jecxz
fwait
mov
je
push
dec
insl
lret
jb
push
cltd
and
fldenv
push
bound
jae
dec
mov
pushf
inc
mov
or
repnz
mov
xacquire
xchg
ja
jecxz
mov
mov
stc
jecxz
mov
movsb
xor
xchg
xor
cld
and
loopne
lods
std
mov
test
pop
inc
cmp
cwtl
mov
shll
pop
add
mov
fisttpll
mov
lods
int3
add
mov
pop
and
test
lret
shll
or
push
loop
adcl
hlt
inc
add
jl
adc
out
cmc
out
add
pusha
pusha
imul
cli
push
inc
rclw
dec
outsl
lret
sub
clc
fwait
stos
loope
inc
pop
push
dec
sub
ss
pop
mov
sbb
ja
insb
lods
sub
jno
sbb
sbb
jno
in
dec
arpl
dec
imul
sub
inc
les
pop
xchg
push
mov
adc
out
sub
sub
sub
movsl
sub
dec
and
lock
push
rcl
lock
shr
rorl
mov
jmp
test
sbb
decl
or
les
pop
mov
aad
pop
and
lods
xor
pop
mov
les
loop
adc
fistpl
mov
inc
jbe
xor
outsb
enter
mov
cltd
lret
fldenv
and
sub
or
sbb
loope
xchg
sub
test
pop
ja
cmp
imul
xchg
push
inc
fwait
pop
in
pop
dec
dec
out
bound
stos
inc
shll
jecxz
xlat
lods
inc
and
test
jl
and
stc
sbbl
repz
xlat
sti
inc
std
dec
movsl
dec
mov
cmpsb
int
ss
pop
aad
pushf
lcall
hlt
add
ja
jmp
mov
fidivrs
cltd
fs
in
xchg
imul
cld
inc
xchg
xchg
sub
cmp
popf
cmp
in
test
dec
es
aas
popf
xchg
and
lods
jecxz
xchg
xchg
loop
mov
and
pop
xchg
mov
daa
add
push
out
insb
and
es
jp
jmp
ficoms
sahf
mov
call
or
scas
ret
mov
adc
mov
aas
lahf
in
pushf
lret
adc
lcall
sub
repz
rolb
push
dec
mov
leave
out
in
xchg
mov
mov
clc
int3
xchg
imul
movl
aad
sahf
int
into
push
leave
jp
js
daa
push
add
mov
stc
in
hlt
lods
cmpsl
fdivrp
dec
fcoms
inc
jb
add
mov
aaa
cli
mov
push
push
jl
adc
or
sub
push
push
jge
das
dec
out
shll
mov
inc
es
cmp
adc
lods
pop
clc
add
xchg
pop
xchg
and
fdivp
sub
cwtl
or
mov
mov
mov
daa
stc
mov
sbb
out
xor
ljmp
inc
test
adc
lock
scas
adc
mov
mov
data16
aad
addl
mov
jb
hlt
sbb
ja
push
lods
dec
stos
sub
into
jmp
push
ss
jge
mov
in
jg,pn
rol
cld
xor
adc
sub
xchg
or
fsubl
lock
pop
loope
fsub
mov
cmp
enter
test
mov
push
mov
sbb
cwtl
ja
or
and
js
or
sar
cmp
ds
xchg
xor
in
fdivl
mov
jb
cld
leave
sub
xlat
add
and
ret
or
xchg
lcall
enter
mov
stos
push
add
adc
nop
jbe
dec
mov
inc
mov
aaa
movsl
jecxz
xchg
lret
or
and
repz
dec
cmpl
cmp
ljmp
add
mov
xchg
jg
out
mov
mov
mov
test
push
fldt
inc
push
jo
cmp
mov
ret
inc
or
hlt
dec
testb
test
pusha
or
shr
pop
add
aam
jp
testl
add
imul
repz
stos
and
mov
xor
shll
xchg
add
and
inc
and
fcoms
xchg
add
and
xchg
rcrl
jl
lea
cmp
sub
imul
mov
shlb
dec
filds
pusha
and
jne
sti
add
mov
and
cmp
add
add
dec
shrb
pop
into
jae
lret
push
mov
sti
mov
push
test
shl
out
es
imul
pop
fisttpl
imul
mov
insb
jbe
xchg
aaa
pop
stc
enter
sbb
xchg
mov
xchg
sub
fstpt
pop
lods
fwait
or
adc
push
inc
jbe
mov
fcoms
lcall
mov
les
test
fidivs
in
shrl
push
xchg
push
inc
adcl
adc
hlt
push
mov
inc
arpl
cmpb
xchg
loopne
pop
pop
mov
int
mov
push
add
xlat
jmp
cmp
shl
ss
enter
cmpsb
int
add
xchg
mov
movsl
aaa
shrb
mov
shlb
in
jb
mov
sub
pop
inc
sub
or
fsubs
icebp
adc
mov
jg
ret
push
xorb
xchg
mov
mov
cmp
mov
test
aas
subl
nop
mov
aad
aas
sarl
test
add
mov
ss
lock
les
inc
iret
lods
pusha
adc
xchg
hlt
popl
insl
int
ret
sarb
adc
lret
or
sub
rcll
in
cmp
ja
bound
fiadds
test
imul
xchg
lcall
arpl
xor
adc
mov
out
sar
xor
std
xor
mov
mov
enter
jle
adc
sbb
pop
pavgb
inc
test
adc
arpl
jl
int3
lock
out
iret
jecxz
insb
push
sub
mov
nop
sbb
push
addr16
push
inc
cmp
inc
or
imul
mov
shrb
cmp
jmp
cmp
adc
add
iret
lahf
repz
push
xor
outsb
movsl
fisttpll
in
out
pop
sahf
sbb
lret
enter
push
jle
dec
or
loop
into
cmp
cmp
mov
jo
enter
inc
push
out
adc
insl
dec
sub
push
jecxz
stos
iret
mov
orl
mov
inc
pop
fmull
in
mov
and
pusha
cmpsb
push
sbb
addb
lds
push
jecxz
rorl
cld
mov
ljmp
lock
jns
in
cmc
and
push
and
sub
ljmp
cmp
mov
sbb
push
pop
into
add
xchg
and
mov
mov
ret
pop
leave
bound
cmpsl
movsl
cld
or
mov
stc
add
int3
aam
sbbb
cmp
push
mov
lret
adc
icebp
mov
aaa
aas
outsb
pop
lea
jbe
clc
inc
testb
fldl
mov
add
dec
or
inc
jns
or
in
lds
popa
pop
addb
in
imul
lock
dec
sub
xchg
test
sar
ret
xor
xchg
ljmp
dec
sbb
rcrb
sub
std
jno
movsb
fld
test
or
push
dec
pop
mov
fisubrl
cmp
dec
test
add
enter
pop
pop
cmp
cld
outsb
ljmp
outsl
pop
imul
inc
cmpb
lahf
in
andnps
clc
mov
fists
imul
bound
xchg
mov
jo
jmp
add
jmp
and
scas
mov
jge
scas
ret
push
dec
or
dec
lea
mov
test
loopne
xor
mov
nop
out
test
sahf
push
inc
push
add
pop
mov
sub
cmp
adc
cmc
add
dec
imul
ljmp
jecxz
repnz
js
and
sbb
outsb
rolb
imul
pusha
jecxz
and
lcall
loope
dec
jle
je
jl
mov
and
int
jle
lea
dec
int
js
xchg
pop
push
pop
cli
gs
test
es
aas
add
push
jo
test
scas
fdivs
xchg
push
lret
lret
inc
xchg
or
arpl
movsl
jnp
rorb
fsubl
pop
jno
into
and
mov
mov
mov
pop
clc
xchg
or
mov
dec
ret
and
dec
xchg
ljmp
stc
lahf
mov
xor
push
in
jp
loop
pop
out
mov
xor
into
jne
bound
mov
psadbw
cwtd
pop
or
sahf
stos
insl
xchg
and
jp
mov
jg
cltd
in
xor
cmpsb
xor
jge
add
insl
push
bound
enter
sub
mov
xlat
sub
push
out
js
bnd
stos
hlt
icebp
std
insl
or
aad
out
adc
cmp
lret
cwtl
cmp
mov
rcr
insl
and
sbb
scas
loopne
sbb
xchg
jmp
ret
push
enter
inc
pop
jle
lds
xchg
repz
or
mov
jno
movsb
xor
clc
xchg
fidivrl
scas
test
inc
test
pushl
xchg
insb
and
xor
mov
ret
out
mov
inc
sbb
adc
jle
lret
out
inc
les
dec
adc
and
mov
fisubrs
mov
int
push
or
pop
adc
sti
push
sub
dec
insb
xchg
mov
jae
js
enter
xor
pop
movsl
test
hlt
in
repz
xor
push
out
inc
movsb
mov
jns
shll
jle
dec
add
shl
mov
dec
movsl
sub
sahf
scas
mov
xchg
jl
add
popa
mov
pop
xlat
rcr
jne
je
aam
xchg
dec
dec
popa
sbb
dec
xchg
les
push
pop
jmp
cmp
xchg
outsb
bound
and
dec
fdivrl
mov
mov
pusha
in
push
inc
sahf
cmp
test
xor
popa
dec
popf
jl
lret
and
addl
repz
mov
in
mov
jmp
movhps
sti
add
pushf
fcmove
inc
stos
and
mov
inc
lock
mov
jg
or
fidivs
es
push
xchg
xlat
add
or
aaa
mov
mov
ret
int
push
insl
cmp
sbbb
stc
lret
popf
js
adc
inc
shlb
clc
lods
xor
pop
aas
cli
push
sti
push
inc
push
subb
xorb
push
xchg
push
daa
leave
cmp
aad
jmp
mov
js
push
add
adc
insb
fsubrs
pop
jno
aam
push
and
mov
jno
or
pop
dec
loope
jle
pop
repz
sbb
mull
mov
popl
stc
stos
sbb
jge
jne
cmpsb
cmp
dec
xchg
inc
dec
arpl
subl
out
aas
fcoml
fs
add
pop
inc
ds
insl
adc
and
add
mov
stos
adc
xor
pusha
xchg
test
pop
mov
add
dec
pop
fwait
pusha
jno
push
lds
add
cltd
jg
jbe
lcall
adc
cltd
in
lahf
lock
fnstcw
add
dec
cwtl
adc
dec
cli
mov
in
fnstsw
mov
cltd
addr16
test
stc
ja
jle
je
mov
jns
call
rolb
clc
push
fistpl
jns
mov
jnp
xor
mov
int3
adc
shll
add
push
inc
aas
jecxz
dec
sub
mov
dec
loopne
fiadds
aaa
in
imul
dec
mov
push
push
fs
arpl
dec
test
sbb
pop
sbb
cs
jg
pushf
fistpl
fs
pusha
inc
push
js
imull
je
cli
into
fidivl
out
inc
arpl
fst
xchg
or
jp
sub
popf
mov
or
rorb
cmp
insl
mov
ljmp
cmpsb
jnp
ret
and
daa
cltd
cmpsb
adc
imul
lcall
adc
in
imul
inc
push
mov
jb
push
add
daa
mov
mov
inc
cld
pushl
inc
loopne
sbb
aam
pop
add
dec
ficompl
fsub
lahf
push
ljmp
lcall
ss
mov
fs
int3
adc
jp
or
sarl
pop
loop,pt
ss
sbb
loopne
test
loope
pop
loop
and
xchg
jo
mov
sub
jl
scas
jo
sbb
faddl
and
cmp
mov
fstl
inc
or
xor
cmp
inc
add
out
cld
mov
sub
sub
in
xchg
popa
movsb
mov
xor
sti
cmp
repz
jb
sbb
popa
cmpsl
leave
out
lret
xor
jb
mov
pop
fsave
mov
sbb
in
push
je
std
mov
cmp
es
mov
sub
es
daa
add
test
pushf
mov
subl
mov
inc
rcrl
jecxz
nop
testl
lods
dec
push
jg
and
std
jecxz
push
jmp
std
imul
cmp
lock
sqrtps
icebp
xchg
das
lods
inc
rorl
add
stc
jmp
mov
outsl
out
lds
out
imul
add
lods
movsb
lods
out
jns
cli
mov
push
add
jg
nop
call
adc
cmp
in
mov
push
jg
inc
mov
cmp
push
add
mov
mov
nop
xchg
inc
cmp
sbb
ja
add
sub
or
repnz
shrl
sbb
rcll
dec
mov
mov
sub
or
enter
ret
sti
cld
xchg
sarl
add
dec
lods
jmp
rcrl
in
out
stc
les
nop
leave
ljmp
and
cmc
shll
sarl
out
loop
or
inc
dec
push
fnsave
cld
xchg
add
shl
dec
jo,pt
inc
aad
leave
lea
ss
jl
mov
popl
jp
push
adc
stc
sub
dec
out
inc
cmpsl
adc
mov
es
inc
jp
enter
iret
mov
test
inc
mov
mov
xchg
push
test
imull
pop
mov
mov
mov
sbb
sbb
lea
jg
cmp
mov
xchg
inc
loope
mov
jmp
and
enter
lock
idivb
repnz
or
rorb
push
das
cmpsb
daa
rcrb
das
add
imul
in
inc
icebp
aam
sub
out
mov
mov
mov
rcrb
movsb
mov
jl
inc
dec
mov
mov
pop
inc
imul
test
fldenv
fsubs
cmp
or
xchg
cmp
and
scas
inc
push
faddp
jne
and
push
push
jl
les
lock
and
jb
push
fstl
mov
or
stc
test
xchg
hlt
pop
sbb
out
jle
out
imul
flds
pushf
int3
loopne
cmp
adc
xor
cld
and
stc
jns
mov
in
loop
or
sub
jns
adc
mov
cmp
cmpsl
out
sbb
ds
je
push
xchg
mov
scas
enter
mov
sub
sbb
rol
dec
xor
aam
xchg
outsl
test
push
push
jo
shrl
xlat
jnp
int
leave
repz
inc
add
jecxz
sbb
les
aas
inc
add
xchg
orl
and
jecxz
sahf
ficomps
add
movsl
xchg
dec
and
xor
mov
sti
cmc
clc
ds
ljmp
mov
and
lods
inc
out
rclb
xor
or
jge
jge
out
ljmp
cmpsl
sub
mov
shrb
addl
enter
out
loopne
pusha
sbb
lds
decl
dec
mov
fstps
xchg
xchg
xchg
xor
xchg
cmp
push
or
jno
push
data16
adc
pop
xor
mov
jo
lcall
push
jmp
nop
push
or
ret
lock
dec
dec
into
push
stos
mov
xor
pop
sub
dec
pop
inc
std
dec
pop
jg
sti
and
out
ja
push
dec
lret
sub
mov
int
popf
fwait
mov
inc
cmp
sub
mov
sub
inc
dec
push
aaa
cmpsl
outsb
push
cli
and
icebp
outsl
cmp
fcomps
pop
fsub
std
and
dec
xlat
dec
pusha
imul
fdivl
add
xor
test
out
mov
and
push
or
xor
roll
sub
xor
hlt
shrb
lods
lret
test
ret
adc
inc
sbb
xor
pop
or
mov
inc
js
sbbb
mov
mov
das
xchg
fsubs
dec
repz
aas
and
dec
mov
push
xor
ds
ljmp
cmpsb
test
sbb
ret
ret
clc
out
adc
fbld
adc
xlat
push
int
sti
push
leave
sti
setae
insb
push
jl
je
pop
in
adc
dec
test
pushf
mov
test
cmc
mov
xchg
or
mov
enter
xlat
faddl
push
decl
mov
xor
insb
xchg
dec
outsl
mov
sbb
xchg
jo
pop
pop
mov
aam
xchg
imul
xor
mov
cwtl
lods
movsb
mov
push
or
or
fdivs
gs
lret
push
inc
adc
or
outsb
mov
mov
cmp
sarl
mov
lods
in
test
lahf
es
inc
rorl
pop
test
inc
mov
std
pop
sbb
sbb
jbe
xor
inc
je
sarl
or
jecxz
jmp
fs
clc
cmp
loopne
push
lock
loop
cmp
dec
adc
mov
dec
mulb
sti
repz
gs
and
dec
repz
jne
inc
cltd
in
and
into
jnp
jp
jge
faddl
stos
xor
xchg
loop
daa
xchg
aas
mov
add
shl
inc
js
lcall
stos
adc
daa
push
ja
mov
dec
fdivl
aas
mov
add
fstl
popf
leave
cmp
cmp
cmp
cmpsb
ficompl
push
enter
cmp
ds
sbb
test
imul
cmp
sahf
push
cld
push
loope
dec
inc
xorb
iret
pop
into
adc
sbb
pop
repnz
ss
rcll
xlat
xorl
ja
cmp
mov
out
push
out
mov
pushf
sub
mov
pop
out
movsb
jbe
iret
popf
sbb
fnclex
ss
adc
insb
mov
xor
or
cmp
in
dec
shl
adc
cmp
lea
fidivl
mov
aad
add
sub
push
mov
xchg
das
repz
xchg
fdivrl
scas
xchg
lods
and
cmp
aas
push
mov
js
icebp
lea
or
imul
cmp
and
addr16
push
stos
mov
data16
push
push
sub
shlb
cs
testl
push
enter
mov
adc
test
lahf
les
sbbl
mov
add
scas
sub
jnp
dec
mov
in
test
cwtl
rcll
inc
pushl
ret
push
adc
ficomps
mov
rorl
enter
sbb
push
scas
fs
mov
scas
push
mov
rclb
test
ficoml
fs
pop
in
loope
mov
addr16
pop
jo
dec
repnz
pop
mov
cmp
pop
das
jle
outsl
stc
fistl
test
cmc
inc
sub
inc
mov
dec
imul
gs
daa
testb
inc
aaa
fwait
jmp
into
jae
mov
push
out
leave
dec
xor
xchg
sub
push
test
mov
rclb
out
cmp
outsl
and
lahf
das
mov
in
sub
mov
xor
sbb
and
in
int3
mov
inc
jmp
lret
mov
mov
xchg
outsl
pop
push
invd
push
bound
std
fisubrl
and
cltd
mov
inc
and
pushf
ja
jns
scas
add
int
lcall
sub
imul
aaa
xor
pop
sub
mov
add
mov
scas
scas
in
or
in
cmp
nop
mov
out
data16
mov
in
arpl
xchg
movsl
xor
in
lods
xchg
mov
out
sub
and
xchg
in
lea
fmulp
add
ljmp
adc
in
mov
hlt
out
addr16
lahf
inc
or
ret
xchg
sub
mov
pusha
dec
pop
fistpl
dec
ficoml
outsb
jbe
adc
pop
xchg
and
push
roll
adc
lds
icebp
pusha
mov
pushf
hlt
sub
xor
popl
pop
inc
test
sbb
mov
push
inc
cmp
arpl
inc
in
adc
outsl
int3
mov
lods
cs
mov
shrb
jle
mov
call
pushf
adc
lods
or
stos
and
fidivrl
jge
mov
stos
repz
and
mov
mov
stos
addr16
push
divb
fsub
xchg
repnz
inc
imul
inc
scas
es
jno
push
mov
jp
idivb
cmp
or
mov
aam
out
inc
inc
cmp
lahf
adcl
or
lcall
adc
adc
adc
add
orb
orb
ret
adc
jb
test
and
jbe
int3
std
pop
cli
jmp
xchg
aad
mov
arpl
mov
or
jmp
xor
in
xchg
mov
dec
nop
rorl
in
pop
inc
mov
lea
pinsrw
sbb
mov
in
outsb
aas
and
xchg
xorl
add
xchg
inc
xor
dec
xor
fcoms
jmp
into
lret
and
scas
ja
movsb
push
inc
mov
pop
adc
lret
in
aad
rcrb
ret
and
outsb
mov
adc
rcll
cld
xchg
cli
insl
sbb
adc
movsb
mov
hlt
pop
outsb
xchg
cmp
std
rcrb
lock
mov
pop
mov
arpl
adc
mov
inc
out
testl
pushf
inc
jmp
push
sbb
xchg
jns
mov
test
cmp
jg
in
pop
xor
mov
std
mov
outsl
xchg
insl
stos
int3
jne
nop
rcl
mov
out
push
mov
mov
scas
dec
push
mov
inc
ficomps
add
inc
into
fcmovb
movsl
int3
aas
inc
mov
and
sub
push
xor
sbb
inc
dec
sbb
out
sbb
sub
mov
cltd
mov
dec
mov
adc
and
sbb
mov
iret
xor
jb
adc
add
jbe
in
mov
icebp
add
fwait
or
daa
jo
sbb
dec
cld
repnz
jno
and
push
fisubrs
sub
inc
dec
push
add
movsl
lods
mov
jge
dec
lods
sbb
adc
popl
ss
lret
neg
loopne
dec
xorb
stos
int
xor
adc
push
cmp
and
decl
sbb
test
dec
shll
add
ds
and
jbe
adc
ds
jnp
cld
les
lret
sbb
push
into
shll
into
inc
sbb
ljmp
cwtl
js
scas
shl
shlb
bound
cltd
adc
or
pop
xchg
test
lods
jb
enter
rcl
sarb
xor
push
push
or
inc
push
in
add
mov
cmpsb
lea
ficoms
pop
std
test
or
cltd
in
adc
pop
pop
dec
sbb
and
jne
std
dec
lret
mov
scas
sub
mov
add
ds
sti
mov
arpl
mov
repnz
call
movsb
shlb
dec
mov
lcall
dec
mov
adc
bound
test
mulb
repnz
pop
xlat
idiv
ret
sbbb
call
sub
xor
xchg
popf
cld
les
jmp
popa
jge
ret
mov
stc
and
fdivl
xor
leave
das
dec
int3
dec
sahf
mov
sti
frstor
aam
notb
mov
pusha
insl
ss
jno
ds
mov
lret
hlt
pop
lods
sub
fucomip
inc
ffree
push
icebp
mov
cltd
out
sbb
fiadds
cmp
push
leave
insl
xchg
jl
ljmp
outsb
or
mul
repz
rcrb
sbb
je
call
push
popf
pop
jle
cmp
ror
nop
iret
imul
sbb
jp
cmc
jg
xchg
mov
xchg
mov
in
jle
xor
or
push
and
add
sbb
mov
sub
mov
jecxz
xor
int3
push
pop
xchg
pusha
adc
jns
leave
sbb
je
sbb
and
mov
notb
aas
jmp
mov
imul
pop
xchg
aas
mov
es
cmc
cmp
lods
lret
mov
sub
in
jno
inc
mov
cs
cmpsl
push
push
aaa
dec
or
cmp
jae
lret
and
lods
mov
or
and
pushf
jo
es
mov
push
adc
repnz
in
pop
inc
scas
add
adc
push
shll
mov
and
jp
imul
mov
loope
xor
and
add
pop
sub
xor
int3
mov
xor
hlt
jp
jg
lds
and
scas
push
xchg
imul
jp
mov
mov
sub
push
aaa
arpl
sahf
aad
xchg
mov
inc
push
jns
cmp
push
shl
das
sub
pop
xor
push
push
sub
adc
push
add
pop
inc
sub
scas
lea
fldl
or
cmp
mov
data16
mov
xchg
gs
icebp
or
mov
inc
aad
inc
testb
jb
xor
jbe
icebp
lods
cmp
ss
nop
cwtl
add
in
das
dec
call
mov
call
roll
nop
rcrb
ljmp
sbb
push
mov
xor
xor
mov
imul
movb
icebp
filds
inc
xchg
push
xchg
sub
pushf
fisttpl
mov
jl
adc
roll
cs
arpl
adc
in
mov
imul
addl
xchg
repz
shll
mov
sahf
scas
decb
repnz
mov
ss
and
sahf
sarl
shl
mov
pushf
or
jmp
fstpl
push
sbb
mov
push
pop
cmp
pop
xchg
mov
loopne
imul
pop
movsb
and
dec
dec
mov
dec
outsl
jmp
sub
jge
xchg
iret
movsb
fistps
decb
or
int
pop
add
mov
and
sub
inc
pop
rcl
js
push
clc
pushf
gs
pop
mov
enter
fwait
adcb
testb
push
pop
lock
add
jg
dec
data16
mov
jg
push
mov
popf
xlat
ffreep
xchg
lret
push
xor
push
sbb
pop
push
cmp
cmp
mov
xchg
and
adc
sub
icebp
lock
dec
adc
mov
test
pop
mov
loop
adc
aad
mov
in
add
inc
pop
inc
xchg
and
push
shlb
cmp
cwtl
jbe
and
aas
mov
dec
aas
cmp
xor
insl
cmp
pop
js
lret
shrb
lods
adc
mov
pushf
mov
aaa
sbb
out
and
fidivl
cmpsb
inc
shrb
adc
mov
mov
ds
arpl
lds
sbb
repnz
sbb
icebp
sti
mov
scas
sub
mov
pop
adc
test
or
push
scas
or
out
jae
fisubrl
leave
in
cmp
jecxz
test
push
mov
cmpsb
int3
and
out
jae
mov
loop
dec
mov
loop
scas
xor
jle
adc
insl
cmp
push
stc
jno
pop
mov
outsl
pop
insl
shll
enter
and
cmc
mov
mov
ret
add
stos
pop
sub
adc
inc
pop
jo
push
addr16
sbb
and
imull
add
lret
pop
sahf
andl
jg
fcoml
inc
mov
cmp
pop
jle
push
add
inc
cwtl
cmpsb
xor
fldcw
xor
push
xor
sbb
mov
adc
add
loope
add
popa
or
jb
arpl
sub
outsl
fists
sbb
popl
push
sahf
sbb
shrb
push
sbb
dec
pop
adc
in
mov
daa
push
or
bnd
repnz
sub
fsubl
daa
mov
lcall
pop
rcrl
jbe
inc
data16
adc
into
jmp
stc
out
aad
push
aaa
xchg
mov
out
and
xchg
inc
xchg
mov
adc
movsb
cmp
arpl
pop
lods
xor
loopne
repnz
sub
jnp
pop
repz
push
popf
and
int
jne
cli
lods
stos
repz
xchg
fnstsw
mov
push
cmp
adc
mov
adc
inc
popa
cmp
and
testb
shll
add
aaa
or
enter
mov
std
ret
sbb
cmp
mov
iret
inc
mov
push
bound
ljmp
fdivs
ljmp
ret
mov
cmp
inc
lods
dec
add
cld
ds
in
leave
or
ljmp
xchg
cmp
or
mov
std
stc
push
fs
out
sub
push
lock
mov
mov
test
sbbb
jnp
or
aam
jle
scas
test
fmuls
push
call
cmp
test
loop
in
inc
add
xchg
enter
or
xor
dec
add
imul
inc
add
mov
or
daa
cmc
inc
mov
push
inc
cmp
jmp
dec
rclb
in
inc
out
test
fnstenv
data16
in
fdiv
jge
adc
ss
repnz
into
push
adc
maskmovq
notl
lret
in
ss
addr16
sbb
movsl
ljmp
or
mov
das
loopne
xchg
xor
mov
mov
incl
mov
shlb
jg
dec
imul
mov
cwtl
inc
lods
mov
xor
pop
inc
movsb
add
dec
rcl
push
cmp
and
in
sub
dec
fwait
cmpsb
inc
xchg
sbb
les
mov
popf
sti
fiaddl
int
test
leave
out
xchg
es
mov
pop
jbe
cmp
or
std
push
jl
inc
fiadds
add
dec
xor
pusha
aad
mov
adc
sub
jne
cmpsl
mov
mov
repz
stos
scas
add
arpl
adc
sbb
aas
es
inc
lods
push
adc
pop
mov
xchg
jp
sbb
or
insb
mov
cmp
and
cmp
cmp
mov
fs
cmp
scas
jb
aas
jb
test
add
std
pop
push
add
add
pop
popa
xorl
jo
and
fildl
ret
rolb
sbb
iret
xchg
je
stc
or
pop
adc
shll
icebp
mov
icebp
int3
and
stos
filds
cmp
rorb
pop
aam
enter
jge
ffree
mov
sbb
int
dec
jg
frstor
cld
jns
dec
lods
adc
imul
add
js
loopne,pt
lret
loop
cmp
push
cmpl
adc
xchg
outsb
cli
jle
ds
subb
ret
mov
cs
push
js
in
mov
push
jge
jno
xchg
mov
arpl
sub
in
arpl
test
out
sub
add
fiaddl
push
pop
fcoms
sarb
loop
and
add
jp
inc
les
add
xor
mov
jo
jg
aam
addb
pop
mov
jge
gs
xor
test
inc
inc
jg
shl
push
mov
fldl
sti
scas
or
bound
mov
mov
sub
or
dec
dec
test
jecxz
in
test
test
pop
test
imul
mov
adc
iret
dec
mov
mov
pop
cltd
xchg
loopne
std
cld
lcall
xor
lcall
arpl
mov
inc
nop
inc
xchg
lods
shrl
ljmp
adc
push
xchg
lcall
add
pop
movsb
and
and
mov
lahf
jb
in
push
ret
xorl
aas
movsb
mov
fsubl
mov
inc
adc
orl
jp
andb
enter
dec
loop
push
hlt
xchg
and
mov
loopnew
movsb
fldt
jnp
xchg
popa
cs
clc
sbb
leave
divb
inc
jge
cmp
and
testb
dec
fwait
jae
push
loope
addr16
add
sbb
scas
out
mov
mov
loop
cld
pop
jg
mov
adc
xlat
mov
xchg
jge
xchg
pusha
das
pop
out
divl
movb
push
lods
test
mov
inc
lods
insb
mov
loope
push
jl
roll
inc
inc
shl
cs
mov
andb
mov
add
scas
xchg
lahf
xor
mov
mov
das
mov
in
lcall
inc
addr16
inc
arpl
mov
subl
xlat
out
push
lea
add
mov
imull
xor
inc
rcll
push
sbb
xlat
dec
jae
cmpb
loope
es
add
add
pop
adc
xchg
cmp
mov
pop
xchg
inc
arpl
repz
sub
cmc
pop
inc
xchg
mov
cwtl
dec
enter
gs
jns
cmpsl
jg
inc
bsr
sub
or
jg
sub
and
aad
loopne
push
daa
std
xor
in
aaa
aam
lret
add
enter
cmpsb
xor
stos
lret
xor
sahf
mov
cmc
sbbb
pop
data16
mov
fistps
xlat
push
outsb
add
ficoms
stos
mov
and
jge
cwtl
sarl
jmp
cmc
jmp
shrb
cmp
jmp
lods
jmp
mov
fs
cmp
cld
push
dec
push
dec
mov
pop
mov
jbe
scas
sub
enter
add
cmp
dec
add
jbe
in
int3
nop
pushf
fisttpll
pop
push
cmpsl
sbb
adc
gs
mov
inc
mov
adc
ljmp
inc
jmp
and
add
dec
aaa
sar
add
sbb
mov
fs
lret
fdivrs
cmpsb
inc
clc
or
push
lahf
sub
mov
xchg
into
sbb
sbb
xlat
daa
fptan
or
icebp
sbb
and
leave
pop
in
add
shl
jns
mov
pop
int3
sub
inc
pop
loope
sbb
push
pop
into
push
leave
dec
repz
push
imul
data16
clc
dec
sub
pop
pop
add
ljmp
les
push
push
outsb
xchg
cmp
imull
hlt
arpl
imul
fbstp
add
int
js
int
add
hlt
mov
mov
cmp
xor
sti
mov
fisubrl
push
int
test
add
lret
outsb
and
push
or
inc
xor
fimull
int3
js
dec
push
dec
cld
subb
mov
cmpsl
jne
add
cmp
xlat
push
and
shlb
push
sub
inc
mov
inc
pop
movsl
jne
xlat
test
pop
dec
int
adcl
repnz
jle
dec
loopne
lahf
cmp
mov
pop
push
sub
sbb
sahf
or
dec
fs
mov
out
xor
add
and
aam
adc
push
push
pop
or
scas
inc
movsb
sub
aam
dec
adc
adc
xor
idivl
pop
or
add
jbe
repnz
and
movsl
repnz
pop
pop
ss
mov
outsb
sti
in
mov
jae
cmp
adc
dec
test
xor
std
lea
test
outsb
mov
or
inc
sbb
mov
inc
jne
fsub
pop
dec
pop
fwait
stos
in
cmp
mov
push
and
cmp
outsl
outsb
pop
into
jmp
aam
jne
scas
xchg
mov
pusha
add
push
in
jmp
xchg
int
jge
and
or
jmp
vmovdqa
shr
sbb
add
loope
negl
stc
inc
push
leave
cmp
and
test
stos
jmp
xchg
mov
lock
push
push
hlt
int
mov
and
mov
push
sub
jg
in
sti
cmpsb
dec
movsl
jp
call
dec
cli
fwait
cld
mov
mov
inc
adc
iret
and
or
and
add
inc
in
sub
es
or
and
mov
xchg
lods
jne
mov
into
cmp
scas
stc
out
jne
mov
sbb
pop
jecxz
adc
pop
xchg
jno
loope
cmpsb
sbb
jno
rcl
ss
mov
aam
ret
notb
mov
cs
sbbb
stos
notb
incl
or
xor
xchg
call
mov
std
dec
dec
icebp
dec
xchg
repnz
cwtl
and
inc
cmpsl
mov
das
lret
das
das
pop
pop
in
rorl
jno
sahf
or
sti
push
shl
pop
test
jle
cmpsl
add
dec
fcmovnb
fisubrs
push
mov
sarl
test
loop
mov
push
cld
psrld
lret
jae
pusha
clc
lods
cwtl
xchg
push
divb
jge
scas
repnz
nop
lret
call
mov
ret
sbb
fcoms
jnp
fistpll
add
xchg
xchg
scas
insl
out
jl
mov
ljmp
fs
or
mov
orb
and
pop
pop
inc
ss
std
dec
sbb
ret
lods
lock
test
sbb
mov
mov
das
jg
xchg
xchg
loop
sbb
outsl
movl
enter
fiadds
mov
cmp
and
sbb
jbe
clc
sub
mov
cld
jnp
std
and
add
lds
dec
ret
jmp
add
dec
rcrl
sub
fimuls
pusha
mov
into
test
sub
xor
cwtl
adc
daa
loopne
enter
rcll
lret
mov
lock
cltd
arpl
int3
add
sub
fucomi
lret
jle
in
and
or
cli
sbb
int
out
adc
pop
or
sub
insb
loopne
mov
test
lcall
in
mov
hlt
lea
dec
scas
int
shrl
outsb
xchg
rcl
in
push
outsb
and
cli
jg
add
ds
dec
in
xor
lds
cmp
mov
xchg
idivl
fucomp
mov
and
cli
bnd
dec
andl
fstl
stos
xchg
and
roll
divb
daa
test
xchg
mov
cwtl
xchg
xor
imul
popf
mov
out
mov
outsb
lret
pop
mov
mov
es
popa
lock
in
lods
inc
mov
push
xor
pop
push
mov
ror
aaa
sbb
into
into
lds
adc
mov
inc
div
xchg
and
lods
push
je
das
pop
imull
ret
into
push
push
loop
dec
xor
test
pop
add
fs
fimull
or
cmp
mov
inc
int
rcl
je
inc
jbe
enter
call
inc
dec
xor
mov
shlb
mov
inc
pop
loopne
pop
adc
les
imul
pop
xor
cmp
dec
or
xchg
jg
int
pop
adc
pop
mov
insb
lds
mov
shlb
test
shrl
ss
imul
imul
jg
xor
cmc
ljmp
inc
cmp
repz
dec
fstpl
test
xor
bound
xchg
jnp
sti
mov
int
pop
fiaddl
lcall
and
nop
pop
call
push
inc
cmp
out
daa
or
cmp
iret
imulb
cwtl
xchg
mov
imul
sub
sbb
pop
cli
aad
outsl
lret
imul
push
mov
pop
sti
fisttps
sbb
pop
pop
cmp
or
pusha
jne
js
lret
cmp
insl
mov
and
cmp
cmc
test
out
add
cmp
rcl
ja
push
lds
or
dec
sti
cmp
mov
outsl
ds
outsb
pop
fldl
add
test
mov
cld
out
bound
outsl
adc
cld
xchg
jmp
sbb
mov
mov
xor
or
ljmp
es
push
cs
rcrl
mov
mov
jmp
or
lahf
mov
pop
jle
cmpsl
xchg
sbb
out
jmp
cs
imul
test
add
add
iret
dec
test
xor
or
lock
mov
ds
cmp
pop
test
mov
xorb
cld
aad
pop
jmp
add
lret
jmp
dec
push
movsb
and
cli
stos
jmp
loopne
test
bound
ret
xor
das
fs
clc
popa
jnp
imul
bnd
lock
jmp
test
xlat
hlt
std
adc
stos
std
rcr
fldcw
lea
pop
push
and
pop
movsb
push
bound
roll
adc
mov
aas
add
sub
cmp
or
sbb
imul
mov
bound
cmc
lcall
jnp
loope
icebp
fsubrs
push
push
dec
sbbl
ds
arpl
and
adc
lret
push
xchg
inc
mov
les
outsb
sub
xlat
push
test
je
mov
dec
cmp
xlat
imul
mov
mov
xchg
dec
arpl
mov
rcrb
cltd
dec
ret
jnp
lds
sbb
sub
xchg
mov
inc
mov
push
pop
pop
push
jo
subl
scas
incl
push
lea
mov
mov
adc
ret
dec
jp
inc
sti
or
pop
push
daa
cli
and
push
data16
pop
jecxz
call
outsl
out
jge
push
cmp
daa
add
push
and
sbb
outsl
cli
sbb
ljmp
mov
mov
jae
cli
inc
pop
inc
ja
push
ror
ljmp
hlt
sbb
push
cmp
roll
xchg
out
adc
ror
and
js
jmp
shlb
pusha
cmp
adc
cs
sub
shrb
add
loopne
fnstenv
popf
mov
push
jnp
lea
or
add
movsb
in
ret
add
andb
lahf
add
add
xor
xchg
scas
scas
gs
daa
std
sbb
out
adc
push
sub
sub
mov
cmp
aaa
imul
leave
mov
out
jne
mov
pushf
popf
and
mov
ret
out
inc
in
jb
push
scas
out
ja
stos
mov
out
xor
push
out
xchg
or
pop
inc
addl
xor
es
mov
jmp
inc
ss
gs
shrb
int3
mov
mov
mov
repnz
push
pop
ss
dec
mov
movsb
pop
mov
and
and
int3
mov
sarb
shl
sahf
push
out
push
add
xor
in
stc
xor
mov
mov
int3
sub
add
outsb
push
cmc
jne
adc
pushf
daa
mov
fsts
pusha
fildl
or
inc
mov
xlat
mov
push
xchg
cltd
test
ja
mov
xor
jle
jle
jge
mov
int3
sub
jb
sub
pushf
xchg
and
cwtl
and
incl
cltd
push
mov
push
cwtl
out
xchg
add
push
int3
or
pop
mov
insl
icebp
int
pop
mov
or
inc
pop
xchg
bnd
add
cmc
jae
adc
in
aas
fnstcw
push
shrl
ja
shlb
mov
inc
je
jno
ret
jo
cmp
mov
call
xchg
jb
mul
pop
dec
mov
or
bound
aaa
negb
ret
inc
fistpl
lea
pushf
push
xor
push
mov
into
stc
fdivrs
or
ja
gs
adc
notb
jge
hlt
mov
inc
or
mov
leave
and
add
lret
movsl
push
repz
pop
stos
mov
mov
jne
inc
and
inc
inc
out
xor
mov
fnsave
out
jbe
sahf
call
mov
xchg
in
repnz
movsl
les
icebp
shrb
lret
mov
and
daa
loop
xor
outsb
insb
mov
push
xor
dec
push
inc
add
fstpl
das
and
pop
ljmp
lret
add
ds
jecxz
mov
add
cmc
sbb
mov
add
rcll
jge
es
mov
sub
popa
xor
clc
push
pop
test
in
mov
imul
fmul
xor
lret
mov
ljmp
popf
pop
hlt
xor
pop
cmpsb
ja
inc
cli
cli
add
and
inc
xlat
xchg
sbbl
sub
in
movsb
dec
adc
idivb
lods
lahf
and
pop
fwait
mov
aas
scas
mov
shrb
int3
out
mov
popa
movsb
int3
inc
int
and
adc
mov
push
sub
in
stos
loope
test
jmp
jecxz
enter
fistps
test
out
dec
aad
mov
push
lahf
aam
pushf
daa
pop
adc
std
dec
xchg
inc
les
fdivrl
imul
decb
mov
gs
push
cs
scas
jne
jmp
mov
test
not
test
push
shl
js
dec
mov
xchg
aam
cmp
addps
xchg
xor
mov
stc
add
jnp
mov
nop
rcrb
push
ret
or
push
outsb
pusha
mov
enter
out
inc
mov
and
jl
aaa
test
loop
aad
les
ds
scas
lods
mov
fimuls
ret
pop
loop
inc
pushf
pop
js
fwait
loopne
mov
add
mov
push
in
out
fdivrl
xor
bound
cmp
push
cmp
fdivr
push
pushf
pop
dec
xchg
test
fcompl
decl
js
pop
adcl
pop
push
pop
mov
mov
addr16
cmpsb
xchg
lea
or
aad
xchg
adc
lahf
js
aas
or
movsl
aaa
pop
mov
lea
lods
test
daa
out
or
mull
loopne
outsl
mov
mov
out
jecxz
outsl
push
push
jbe
mov
push
sub
cli
pop
cmp
inc
test
enter
mov
cwtl
add
in
dec
jo
in
outsl
data16
cmpsb
xor
mov
mov
xchg
or
mov
xor
jne
mov
jnp
bound
adc
hlt
dec
and
pop
pop
inc
insb
fs
fldenv
fisttps
mov
xchg
lds
push
movsb
aad
ror
add
mov
lcall
push
repz
out
test
cwtl
jns
sarb
sbb
popa
lods
outsl
xchg
imul
outsb
inc
pop
in
gs
dec
jbe
loopne
stos
and
int3
sbb
mov
xchg
xor
push
fdivrl
sbb
xorb
mov
fimuls
push
std
adc
aaa
or
insl
outsb
nop
xlat
sbb
bnd
cwtl
lods
js
cmp
push
or
jo
rorl
lahf
and
fs
and
je
dec
cmpb
cmp
sbb
mov
inc
pushf
xlat
stc
fs
sbb
add
subl
in
cmpsl
sub
ja
xchg
iret
jno
push
sub
dec
add
mov
mov
pop
scas
cmp
enter
test
pop
shlb
dec
addr16
rorl
jb
loope
test
in
rolb
add
inc
cmp
into
out
ljmp
lret
dec
pushf
mov
shlb
nop
or
out
push
mov
and
adc
daa
mov
push
cmc
adc
or
outsl
movsb
pop
mov
mov
lcall
cmp
mov
push
push
adc
pop
pop
outsb
sub
gs
push
fcompp
scas
pusha
inc
mov
adc
mov
fcoml
sarl
xchg
mov
pop
sbb
fisubs
pop
dec
fcomps
push
clc
decl
icebp
sbb
pop
sbb
xchg
dec
inc
dec
inc
cmp
cwtl
jmp
cmp
mov
sbb
push
pop
sbb
or
xchg
pushf
xlat
imul
add
xlat
add
out
xor
or
movsl
test
cmp
fdivrs
jne
sub
mov
add
dec
mov
shlb
fisttpll
mov
dec
orb
pop
xor
aaa
inc
cmpb
imul
cs
jb
xor
aad
xchg
xchg
movsb
divb
xchg
push
aam
xchg
xor
test
popa
in
sub
scas
dec
movsl
mov
repnz
jmp
push
dec
mov
repnz
fisubl
cmp
cli
pop
shl
jbe
jne
inc
movsl
test
sub
mulb
cmp
and
pusha
cmp
daa
adc
movsl
gs
rclb
das
scas
or
call
sbb
jo
cmp
arpl
shl
lods
jle
push
mov
jo
insl
js
enter
iret
inc
int3
mov
push
inc
mov
mov
jbe
cmp
scas
mov
jge
nop
ret
jns
xor
sub
or
adc
hlt
and
mov
jnp
and
jae
insb
int
subl
das
sub
aaa
sbb
xor
arpl
subl
scas
cmpsl
push
and
cmp
and
xchg
xchg
xor
adc
aaa
sbb
add
pop
pop
cltd
out
je
data16
js
sbbb
sbb
xchg
lcall
repnz
ds
mov
in
xchg
lock
cwtl
clc
into
fcoms
les
cli
or
andb
mov
xacquire
aaa
movsl
adc
mov
fwait
adc
mov
loopne
pop
and
mov
xor
mov
push
dec
push
rcr
xchg
sbb
mov
and
subl
and
popw
mov
movsl
add
les
cs
lahf
or
or
aas
out
pop
test
xchg
xor
mulps
cltd
testl
sbb
hlt
adc
hlt
jne
dec
cmp
and
mov
rclb
xchg
ja
sbb
inc
movsl
pop
ja
sbbl
dec
or
inc
and
mulb
mov
or
sahf
popa
mov
enter
xor
or
xchg
out
inc
jge
sub
xchg
dec
jl
test
imul
push
push
or
faddl
sub
sbb
xchg
xor
push
and
mov
repz
shlb
add
jo
das
data16
cpuid
imul
adcb
jns
test
xor
push
dec
and
insb
or
mov
mov
shlb
stc
into
adc
stos
dec
pop
inc
ret
inc
popf
xchg
jno
rcrb
mov
cltd
insl
mov
sbb
push
addr16
jae
call
fisubrl
push
cmp
jne
fwait
sbb
mov
cmp
xlat
into
sub
or
lods
je
inc
dec
fistl
sub
imul
icebp
in
fucom
mov
adc
lret
adc
sbb
aad
mov
jae
jo
push
lahf
mov
pop
lock
pop
add
fldcw
movsl
pop
stos
pop
mov
scas
fs
inc
ja,pt
rorb
inc
cld
and
shrl
xor
jecxz
fnstcw
insb
adc
pop
out
dec
and
xor
daa
push
imul
push
and
mov
lret
cmp
add
popf
lret
test
in
test
test
mov
sbb
mov
inc
int
ds
stc
gs
sub
fiaddl
jns
or
es
jno
int
pop
adc
pop
bnd
mov
add
add
pop
aaa
outsl
arpl
loope
pop
rclb
mov
add
mov
or
pop
cmp
out
dec
popa
scas
cmp
dec
imul
aam
sub
mov
mov
mov
repz
xchg
into
mov
sarl
std
enter
jae
jns
cmpsb
and
int
xlat
jle
jp
xlat
int
popf
jae
iret
rorl
adc
inc
sahf
xchg
add
pop
aad
data16
call
add
push
lret
sbb
cmp
cltd
dec
push
push
dec
pop
test
xor
call
subb
adc
dec
xor
mov
mov
jg
outsb
mov
jae
xchg
out
pop
pop
test
std
aad
jne
or
cltd
ja
jne
mov
add
jl
cmp
mov
loop
pop
dec
ljmp
add
cmp
jbe
mov
in
xchg
mov
stos
pcmpeqb
mov
xchg
adc
out
loop
shlb
or
gs
mov
cld
ficoms
in
adc
aam
jb
sbb
push
dec
mov
repnz
outsl
sub
jae
imul
int
mov
push
int3
cmp
mov
sar
dec
mov
pushf
mov
pushf
es
jecxz
das
adc
movb
repnz
int
gs
dec
sti
pop
pop
adc
xor
lods
sbb
fnsave
adc
cs
fs
push
stos
hlt
iret
mov
mov
add
sbbl
jmp
cli
push
loope
leave
pop
or
mov
mov
inc
aam
push
mull
loop
dec
mov
arpl
cs
mov
rorl
push
stos
mov
lahf
daa
lock
insb
jg
sub
xor
cmpl
xor
jl
lcall
push
mov
mov
sbb
popf
subps
je
adc
and
int
sarl
jg
add
mov
xchg
in
fistps
jne
add
mov
in
loope
pop
test
and
cmp
inc
rolb
mov
push
int3
insl
sbb
insb
fldenv
add
jl
dec
ret
rcll
int3
or
imul
fcmove
ret
add
lret
loope
xchg
mov
xor
dec
push
xor
loope
mov
out
mov
mov
in
aaa
loopne
lods
mov
push
sbbl
add
or
insb
addr16
xor
imul
push
arpl
mov
mov
mov
loope
stos
fsts
mov
sub
mov
pop
popa
mov
lea
mov
lahf
add
lret
or
pushf
sub
je
les
pop
pop
out
sub
inc
or
call
sub
and
lahf
mov
orl
lahf
cwtl
push
dec
in
das
cli
dec
enter
stc
pop
add
sbb
add
sbb
mov
jge
stc
loop
xorl
test
aam
cmp
push
cs
cli
std
out
outsb
sub
inc
xlat
fcoml
pop
fstps
das
test
fsubr
mov
repnz
xchg
int
loop
dec
sub
in
clc
outsl
shlb
push
push
imul
jo
push
add
jbe
push
push
gs
mov
add
data16
adc
jnp
dec
inc
repz
cli
mov
sub
jnp
jb
in
ja
fisubs
jo
fstl
jae
movsl
mov
sahf
adc
add
cmpsb
jne
mov
cmp
gs
xchg
in
rcll
push
cmp
es
jl
xchg
sub
daa
into
test
mov
outsb
aas
push
mov
jb
push
or
adc
pusha
mov
jbe
sub
add
aaa
ljmp
test
dec
pop
cmp
into
adc
nop
test
or
outsl
inc
inc
and
in
popf
sahf
lret
pop
fistps
inc
jg
cmpsl
std
sub
cmp
jns
inc
xchg
loop
and
aaa
ret
faddp
jne
push
shrl
stos
cmp
jp
jne
and
jns
outsb
hlt
loop
cltd
mov
lcall
and
out
ret
lret
mov
adc
loopne
jnp
addb
cmp
imul
rorl
cmc
cmp
scas
xor
push
jno
cmp
jecxz
pop
cmp
jbe
mov
subl
fmuls
push
xchg
jne
xchg
stos
aaa
insl
dec
jecxz
vcvtsd2ss
jle
imul
ljmp
lcall
dec
dec
cwtl
adc
aad
push
data16
push
cmp
mov
sbb
push
xchg
enter
mov
jbe
mov
stos
es
mov
mov
ss
pop
push
and
mov
orl
mov
xorl
add
stos
std
sub
inc
mov
xor
and
mov
daa
mov
flds
or
xchg
xchg
pop
and
ret
jle
mov
dec
mov
stc
mov
xor
dec
js
push
mov
mov
jnp
mov
rcl
mov
fcmovnb
push
inc
lods
adc
push
and
lods
jns
pop
pushf
in
jge
push
dec
jp
mov
pop
sbb
adcl
cmc
mov
cwtl
aam
mull
leave
lods
sbb
sbb
dec
aam
movsl
lods
inc
aam
pop
pop
das
mov
inc
mov
aas
or
iret
mov
add
add
ljmp
xchg
js
push
mov
xchg
fildll
subl
daa
sbb
push
popl
clc
sbb
clc
cltd
adc
lock
jbe
jae
mov
add
mov
xchg
fsubl
jp
inc
ja
cld
push
repz
sub
les
imul
adc
arpl
jmp
lods
andb
inc
cmp
cmpsl
inc
dec
cld
loopne
adc
inc
fcoms
scas
repnz
sbb
lcall
es
add
dec
mov
dec
pusha
andl
out
rclb
pop
push
sub
xor
jg
jbe
lret
stos
and
mov
ljmp
mov
orl
or
xlat
mov
daa
repz
xchg
mov
stos
int
outsb
jns
aam
iret
in
and
pop
scas
insl
in
mov
add
push
outsb
mov
ss
test
iret
testl
rcll
push
pusha
xchg
test
ds
in
mov
mov
push
mov
jmp
aad
out
dec
fisubs
sub
test
or
mov
push
jl
int3
xchg
xor
subb
push
or
pop
xlat
insl
ret
cmp
cmp
pop
popf
imul
scas
inc
lea
addl
not
jmp
pop
mov
push
sub
inc
lods
inc
add
cmp
outsl
gs
or
adc
outsl
mov
clc
in
loop
xor
aad
testb
mov
clc
js
cli
and
not
ss
lock
stc
leave
and
stos
pusha
test
test
xor
push
bound
jecxz
fstl
arpl
adc
imul
les
add
jb
mov
cltd
loope
fwait
xor
cltd
flds
pop
test
fisubrs
jecxz
or
mov
adc
hlt
or
sbb
mov
outsb
xchg
or
enter
mov
ucomiss
fldl2t
jmp
lret
loope
jnp
sahf
outsl
inc
orl
jg
push
pop
divl
lret
cmp
das
enter
and
push
jns
mov
into
lahf
les
mov
push
shll
mov
pushw
push
in
or
xor
pushf
jge
bound
jae
ss
sbb
icebp
mov
sbb
std
es
pop
sbb
or
sbb
and
adc
out
jmp
xlat
cltd
aad
gs
in
js
ja
sbb
inc
ljmp
cltd
data16
es
loope
bound
sub
xchg
xchg
mov
xchg
and
jg
mov
push
dec
inc
inc
jecxz
and
mov
cmp
adc
enter
cwtl
sub
into
repz
loop
sub
addr16
add
out
fadd
rep
pop
jno
jecxz
cmp
insb
leave
in
leave
popa
bound
pop
insb
mov
out
and
adc
aaa
push
mov
aad
and
and
xor
push
or
cmpsb
mov
clc
ljmp
pop
testl
mov
lahf
push
lret
stos
xorl
hlt
add
sbb
xchg
adc
out
push
xorb
xchg
rcl
and
jo
shll
xchg
jo
int3
inc
test
mov
mov
out
cmp
mov
ss
mov
pop
sarl
test
scas
cmp
lea
lret
mov
scas
stc
push
fldcw
push
mov
sbb
lret
add
repnz
aas
xchg
sub
inc
xlat
mov
jnp
or
lods
aas
popf
and
xchg
xchg
mov
add
sbb
stc
nopl
sub
lock
enter
lahf
es
mov
outsb
pop
fimuls
adc
or
push
inc
adc
insb
iret
or
jno
iret
mov
xor
pop
lret
push
aam
mov
gs
data16
add
ljmp
test
sbb
cmp
cld
pop
inc
movsl
inc
xchg
cld
dec
pop
mov
and
test
fsubrs
and
inc
das
hlt
js
xchg
push
es
jno
jbe
mov
adc
fcompl
xchg
pop
in
lock
cltd
mov
test
pop
dec
test
cmc
stos
push
xchg
pop
sahf
ficoms
xchg
xor
mov
jnp
bound
mov
jp
dec
lcall
test
jae
mov
adc
jp
lock
out
mov
add
sub
enter
stos
and
ret
hlt
in
push
lods
sbb
es
jo
and
jns
fildll
sti
add
lods
or
repnz
shrl
sti
movsl
inc
cmp
in
dec
loope
inc
pusha
dec
or
sbb
mov
negb
sub
pop
pop
mov
imul
pop
jbe
in
inc
adc
mov
rorl
xchg
ret
jge
dec
ss
push
out
or
adc
cli
adc
xchg
sbb
fdivrs
mov
lahf
sbb
std
push
xchg
xchg
pop
pop
icebp
push
rcr
jae
pop
dec
rcr
pop
dec
sub
push
inc
sbb
sub
lahf
popa
inc
mov
enter
or
div
rclb
xor
jp
lock
cld
and
sbb
insb
xchg
sbb
and
es
adc
arpl
cltd
push
ja
mov
xchg
vorps
inc
movsb
repnz
loopne
mov
aad
outsl
sti
shrl
pop
mov
ret
xor
sahf
popa
fimuls
sbb
in
mov
inc
push
lret
lea
pop
xchg
sub
dec
dec
imul
jecxz
aaa
test
ret
rorl
add
mull
out
dec
sbb
sub
xor
iret
or
cmpsb
adc
add
and
or
or
stos
mov
mov
mov
sbb
daa
popa
outsb
or
pop
bound
jo
fsubrs
sub
xchg
xor
pushf
and
push
std
dec
mov
mov
iret
movsb
cmpb
xchg
pop
mov
cmp
jb
cmp
cmpsb
push
data16
repnz
add
testl
lret
sbb
cmp
in
cltd
cmp
cmc
xchg
pop
adc
and
mov
popa
push
sti
loope
push
cmp
xor
div
cli
loopne
loop
test
stos
cmp
in
fisttpl
push
int3
enter
into
in
mov
dec
fistpl
xchg
cltd
pop
les
or
mov
push
addl
mov
in
stos
loopne
push
pop
dec
and
push
mov
push
mov
aad
call
jne
sub
dec
stos
xor
sarl
adc
enter
lret
fcoml
test
rolb
dec
stc
mov
add
mov
inc
dec
js
lcall
mov
xchg
push
shrl
mov
mov
stc
sbb
sbb
jmp
or
push
mov
inc
insl
or
fldenv
cmp
inc
push
sahf
bound
push
inc
rcrl
ret
insl
mov
jle
dec
xor
cmp
js
mov
movb
sub
inc
shrl
test
sbb
add
cs
lea
jl
pop
mov
insl
push
add
out
bound
out
jmp
or
insl
jns
dec
or
dec
mov
adc
sub
add
fdivr
sub
xchg
in
nop
mov
lret
or
sbb
pop
adc
negb
cmp
dec
jle
lea
dec
mov
and
mov
nop
lcall
popf
ja
mov
das
sbb
fildl
sbb
jns
inc
test
test
jbe
scas
mov
mov
pop
mov
scas
mov
mov
dec
mov
outsl
pop
mul
jmp
lcall
xor
mov
fwait
les
inc
inc
mov
inc
mov
adc
and
inc
out
cmpsl
xchg
dec
push
outsb
jmp
dec
addr16
pop
ret
shrl
imul
lahf
push
mov
test
mov
sub
std
popf
pop
push
jns
aam
enter
jbe
fsubrl
mov
hlt
jge
arpl
push
test
fs
pop
xchg
std
xor
xor
push
ficoms
lock
lcall
pusha
push
out
popf
test
cmpsl
mov
push
xor
dec
mov
fdivs
mov
jp
xchg
fisubs
add
data16
xchg
lea
mov
gs
add
aas
adc
xor
lahf
dec
sahf
sub
jb
mov
outsb
xlat
iret
ja
rclw
adc
insl
xor
or
dec
add
pop
xor
pop
jge
adc
enter
adc
jl
gs
pusha
ficompl
dec
pop
movsb
in
fsubrp
sub
or
int3
test
sbb
cli
cmp
into
mov
add
cmp
das
adc
fs
xor
push
cwtl
push
xchg
jmp
lds
pusha
fmuls
adc
gs
test
rcl
inc
mov
and
pop
mov
test
mov
clc
test
lret
jns
repnz
imul
or
aam
enter
xchg
repnz
pop
ret
push
aad
xor
sbb
rcr
cmpb
sbb
pop
xlat
nop
jecxz
sub
add
rol
xchg
xor
addr16
mov
mov
push
pop
in
fldl
dec
bound
popa
in
inc
fcomps
mov
cmp
push
sub
and
scas
cmpsl
das
pop
movsl
jecxz
push
mov
xor
pop
repz
cmpsl
icebp
jle
pop
ja
mov
out
rep
lock
dec
and
test
pop
pop
mov
movsl
scas
mov
sarl
fsubs
cmp
jmp
outsb
mov
out
daa
outsb
daa
sbb
cwtl
xchg
repnz
addr16
arpl
les
cmp
dec
inc
lock
cs
iret
mov
pop
add
jne
rcrl
inc
push
cmpsb
jo
push
lcall
fsubrs
mov
pusha
aad
fstl
cs
xor
add
push
mov
and
je
inc
in
adc
push
mov
test
enter
nop
loopne
and
jp
lahf
lret
adc
xchg
dec
xchg
inc
sub
repnz
ja
xor
in
mov
pop
insb
call
stos
push
and
mov
pop
lahf
cltd
shlb
cltd
xlat
xchg
mov
pop
xchg
sbb
es
notb
aaa
in
and
inc
pop
les
int3
lods
sub
push
push
es
xor
mov
mov
and
xchg
cltd
adc
adc
negb
push
sub
mov
pop
pop
stc
testb
inc
ret
loopne
jbe
xchg
sub
lods
enter
mov
dec
lret
imul
pop
fwait
data16
insb
sahf
push
mov
movl
dec
sbb
sahf
lret
push
add
aad
cmc
sbb
rcr
out
dec
push
and
bound
int
push
jo
mov
cltd
cli
fwait
scas
mov
pop
and
sub
fs
lods
add
add
xchg
mov
stos
pop
mov
and
ret
pop
push
push
sub
cmp
pop
sbb
shl
daa
sbb
or
fdivrs
xchg
adc
and
loope
fldcw
add
mov
daa
testb
push
add
push
dec
dec
test
pop
pop
xchg
and
and
and
add
icebp
or
mov
ret
pop
fstl
and
jg
popf
outsl
loope
and
rorl
fwait
mov
lcall
into
and
sbb
sbb
pop
lock
sub
and
test
daa
out
mov
stc
ret
mov
outsb
cmp
out
insl
icebp
popa
pop
outsb
jge
imul
mov
and
push
sbb
sub
push
imulb
in
call
fs
push
lds
add
dec
inc
push
test
insb
xor
mov
mov
cmp
mov
in
insl
adc
mov
stos
loope
fdivrs
gs
and
scas
mov
stc
inc
mov
dec
das
sarl
sub
mov
cmpsl
sarl
cltd
int
pop
and
scas
jmp
sub
mov
sti
fnstcw
in
outsb
jns
sbbb
xlat
bound
pop
inc
pusha
mov
hlt
jl
push
mov
pop
test
aas
inc
mov
mov
and
add
out
and
inc
push
mov
outsb
movsb
push
jmp
push
mov
out
insb
repz
aas
push
add
icebp
mov
test
mov
lcall
jle
dec
mov
stos
xchg
push
add
hlt
out
xchg
std
jmp
sbb
push
xchg
sahf
xor
mov
jb
xorl
and
cld
push
das
int3
mov
nop
add
jb
out
mov
xchg
jmp
cmp
faddp
pop
fwait
jbe
pop
test
jno
nop
imul
mov
fsubrl
and
stos
out
cmp
orb
enter
test
popa
rclb
and
cmpsb
cmp
hlt
or
dec
cmpsl
mov
data16
stos
cmp
addb
pop
mov
jecxz
xor
in
dec
repnz
clc
out
inc
nop
push
push
daa
lock
sahf
sbb
out
insl
hlt
cmp
cmc
xchg
repz
add
xor
dec
jo
adc
or
es
push
lret
jge
test
mov
stos
jae
jge
stc
insb
cs
inc
xchg
lret
sbb
ljmpw
mov
rol
mov
cmp
adc
and
mov
cli
into
gs
daa
jp
dec
cli
dec
faddp
ret
shlb
cwtl
jp
mov
xlat
loop
loop
imul
jmp
stc
in
idivl
pop
lods
pop
push
xchg
cmp
xchg
out
mov
xchg
sti
pop
xor
std
inc
cmp
clc
vpshufd
repz
pop
mov
sub
leave
mov
push
mov
mov
jbe
add
hlt
test
mov
xchg
mov
mov
out
cmc
inc
jnp
jno
sbb
pop
jo
aaa
jmp
xor
push
mov
push
gs
cwtl
and
cli
roll
scas
cmpsb
fisttps
je
outsb
shlb
lock
xchg
push
or
cwtl
imul
rcl
xor
add
jmp
push
jb
cli
into
cmc
mov
adc
or
jle
jle
jo
mull
cmp
outsl
repz
int
clc
mov
xor
loope
inc
and
test
std
adc
popl
sahf
pop
lret
xor
push
push
adcb
sahf
pop
mov
iret
rcrb
jo
sbb
call
jae
mov
rorl
test
lods
push
or
mov
stc
push
ret
cmc
xchg
mov
lret
sub
adcb
clc
shrb
sbb
xor
mov
mov
aas
and
mov
arpl
mov
and
imul
mov
inc
int3
xchg
xor
push
fistpll
mov
lcall
cmp
dec
jge
leave
inc
mov
inc
inc
mov
aas
fxch
mov
push
movsl
pop
xchg
cmp
dec
daa
mov
pop
test
push
cmpsb
cmp
call
and
mov
push
arpl
ret
jo
xor
xor
imul
rorl
repnz
loopne
andb
in
cmpsb
sub
cmpl
xchg
dec
mov
mov
js
fcomp
je
pop
or
shrd
fnstenv
jmp
sub
fwait
push
subb
xchg
mov
mov
divb
mov
add
adc
push
mov
and
fiadds
mov
fs
mov
rcrl
xchg
shll
dec
pop
pop
jnp
lcall
pop
outsb
xchg
fnstenv
or
outsl
pushf
sub
inc
fcompl
notb
xor
adc
push
mov
cmp
add
sub
mov
pop
jle
jbe
in
mov
mov
jne
and
stos
sbb
jecxz
mov
cmp
sub
xchg
mov
and
xchg
or
pushf
inc
jmp
adc
sbb
cli
fistpl
mov
xchg
cld
cmpsb
push
lret
pop
mov
popf
cs
xlat
mov
sarl
sbb
pop
lds
mov
pop
or
pop
out
imul
div
repz
and
shlb
jns
cmp
cmp
movsl
xchg
sbb
xor
push
scas
push
sub
dec
clc
fs
xchg
xchg
mov
rcrl
xor
aaa
loope
xchg
mov
mov
lret
stos
sbb
cwtl
dec
sub
test
xchg
or
xchg
push
shrb
fsubrl
mov
xchg
xchg
movsl
xchg
in
mov
xchg
sbb
stc
test
push
cli
shll
loop
jmp
or
push
push
adc
fcomp
sahf
mov
mov
push
mov
test
dec
xor
mov
jmp
sahf
outsl
mov
mov
mov
bound
pop
sbb
outsl
jg
orl
lcall
in
fildll
js
call
and
inc
xor
mov
jb
ljmp
test
adc
or
push
jns
mov
pop
movsb
and
sub
fwait
sbb
or
xorb
jae
pop
and
movsl
out
stos
lret
mov
lds
iret
lea
lods
in
lcall
lock
test
cmp
xchg
push
push
stc
daa
lret
fnstcw
xchg
push
xorps
pcmpeqd
xor
mov
pop
and
xchg
scas
dec
cwtl
push
adc
and
scas
cs
xor
filds
aaa
sub
xchg
dec
subb
dec
push
cltd
mov
mov
mov
test
sarb
clc
les
xchg
enter
pop
ja
ss
sahf
cwtl
push
imul
cmp
hlt
xor
mov
add
enter
sbb
and
lcall
cmp
fiadds
out
inc
or
out
xor
mov
adc
les
pop
movsl
int3
mov
repz
mov
jle
mov
xor
sahf
and
sub
xchg
lcall
pop
jge
pop
xchg
sub
adc
insl
pop
movsl
in
cltd
aam
xchg
iret
pop
adc
lods
mov
pop
dec
push
or
mov
or
cmp
insb
xchg
mov
sub
fnstenv
push
add
test
cwtl
mov
addr16
vxorps
fsubr
xor
jmp
inc
and
mov
xor
aaa
cld
add
cwtl
out
bnd
in
rcrl
test
sbb
test
mov
jb
fwait
and
mov
push
enter
jecxz
je
push
or
pop
sbb
es
in
and
mov
pop
mov
or
out
ja
arpl
pushf
ret
imul
cmp
pop
data16
mov
pop
and
xchg
adc
data16
imul
dec
fisttps
into
and
mov
sbb
push
mov
pop
aam
cmp
pop
shll
jno
aas
addb
dec
repnz
ss
pop
mov
lret
jo
xchg
je
pop
call
push
jnp
mov
cmpsl
jbe
ja,pt
mov
pop
jmp
shl
movsb
in
and
add
push
mov
pusha
scas
int
adc
inc
outsl
es
jbe
loopne
lret
sbb
sti
add
ljmp
push
and
adcl
inc
mov
and
mov
pop
stc
and
daa
jae
dec
push
js
repz
in
lret
pop
outsb
pop
jns
imul
shrl
and
test
pop
mov
test
push
cmpsl
dec
inc
fistpll
sahf
outsb
pop
call
nop
iret
pushf
mov
mov
mov
je
sti
std
jl
push
or
stos
ret
jle
pushf
mov
repnz
inc
mov
out
mov
mov
xlat
loop
jg
shlb
adc
pop
mov
adc
sbb
cmpsb
push
push
adc
fdivl
or
jb
pushf
pmuludq
bt
xchg
sbb
push
scas
pushf
ds
push
inc
xor
imul
jl
ss
inc
addr16
ljmp
mov
add
and
and
mov
push
mulb
aad
mov
jo
leave
fimull
inc
sub
in
pop
cmp
cli
mov
dec
jns
xor
loop
fcmovnb
fsubrs
mov
mov
push
je
cmpl
xor
imul
adc
movsb
or
ret
jnp
stc
out
ret
lret
enter
mov
jnp
or
lods
jecxz
xchg
inc
sbb
pop
jno
lea
out
into
xlat
mov
mov
cltd
setno
xor
loope
in
pop
lea
inc
lret
cmp
fidivl
push
xlat
xchg
repz
iret
sbb
add
mov
das
xchg
cmp
stos
adc
adc
lret
adc
addr16
addr16
and
jo
mov
aad
push
pop
lea
sub
fcmove
mov
adc
fstpl
mov
shll
test
aas
sti
adc
mov
aas
std
adc
lock
or
lods
mov
call
sub
push
and
in
xor
xchg
andb
les
cltd
mov
int
inc
cmp
mov
movsl
dec
imul
clc
add
aam
in
push
cmpb
mov
aam
mov
and
aam
fisttps
adc
and
fld
or
fs
es
lcall
mov
push
jno
dec
and
stc
cld
fildll
repnz
leave
pop
test
sahf
mov
jne
dec
push
das
daa
jnp
cmp
and
sbb
shlb
mov
push
jg
shlb
adcb
jo
and
jmp
mov
pop
mov
sbb
js
dec
cmp
sbb
sub
mov
leave
rolb
jbe
js
popa
xchg
adc
jnp
xchg
lret
xor
dec
push
mov
jecxz
sbb
adc
fsubl
sbb
fldt
fcmovb
shr
fwait
or
lret
dec
jge
dec
loopne
jo
clc
push
lods
sbb
mov
lods
mov
dec
dec
mov
inc
js
xchg
cwtl
mull
sub
jecxz
adc
nop
addr16
mov
xlat
push
sbb
ljmp
outsl
loope
cmp
mov
lea
pop
mov
pop
ficompl
pushw
inc
adc
pop
dec
dec
pop
rcl
fcmovnu
dec
adc
je
xchg
xchg
add
inc
adc
lret
pushf
fsts
push
leave
pop
jno
adc
add
mov
in
and
inc
or
mov
cs
push
jmp
xchg
cmpsb
mov
out
and
outsl
adc
mov
icebp
fs
or
nop
std
pusha
inc
lods
std
rolb
insl
cltd
data16
jmp
pusha
cld
adc
add
sub
jno
pusha
mov
rorb
repnz
aas
push
jb
sti
adc
cmp
lods
ret
mov
jg
or
inc
fnstsw
inc
push
mov
jns
pop
sbb
rclb
das
mov
es
sbb
jmp
mov
adc
shlb
jae
movsl
sarl
xor
mov
and
and
aam
pop
popf
mov
lock
jnp
pusha
cmp
dec
jge
pop
add
leave
in
lds
dec
int
adc
cltd
xchg
add
es
into
sub
stc
pop
popl
or
into
mov
jo
mov
outsb
mov
mov
or
ficoml
hlt
fneni(8087
out
jg
fldt
sbb
call
cld
fcoms
and
mov
push
nop
jmp
cmp
mov
shll
loope
xchg
or
insl
orl
les
xlat
lahf
jns
sub
out
les
pop
ficomps
in
lock
pop
test
ljmp
mov
mov
pusha
adc
push
je
fdivs
cwtl
lods
sbb
or
xchg
shrb
repz
cmp
pop
adc
imul
outsl
add
test
cmp
mov
adc
adc
pop
mov
jns
add
imul
adc
popf
in
sbbb
lds
mov
test
scas
lahf
mov
dec
cli
int
push
inc
and
lret
cmp
repz
mov
pusha
jns
mov
imul
or
outsl
or
dec
out
mov
xor
mov
cli
mov
and
scas
repnz
adc
nop
sbb
cmp
xchg
hlt
or
xchg
shlb
call
icebp
dec
xchg
push
push
data16
shll
sbb
fistps
fwait
pop
or
fistpl
loopne
call
cmc
or
sub
mov
add
jg
cmpsb
jl
jno
push
adc
push
inc
mov
mov
or
faddl
push
xor
inc
dec
mov
ret
leave
lahf
inc
mov
sarb
in
push
push
xchg
popf
mov
popa
insb
cmp
or
lods
fwait
lods
push
rolb
mov
aad
lds
scas
into
adc
and
adc
fwait
mov
pop
iret
push
imul
dec
sbb
bound
push
mov
lahf
and
cmpsl
and
les
push
jno
adcb
sub
data16
or
test
add
in
sahf
sub
or
push
mov
pop
ficoms
pop
adc
enter
popa
test
jl
cmpsl
aad
mov
inc
int
fldcw
xor
jno
push
sub
std
shll
int
adc
adc
pop
nop
push
add
sub
lods
sbb
pop
push
dec
stos
les
add
mov
adc
repnz
jns
mov
fistps
or
ljmp
mov
stos
push
js
bound
dec
mov
xchg
adc
jno
cs
imul
or
add
in
call
xor
and
xchg
iret
stos
mov
es
mov
mov
aaa
repnz
jno
pop
jo
gs
xor
xor
pop
sahf
mov
cmp
add
xchg
or
clc
adc
adc
sbb
pushl
bswap
pop
dec
jmp
lret
shll
lret
test
repnz
fnstenv
add
jnp
and
and
mov
pop
xchg
add
lret
cli
clc
in
pusha
xlat
mov
push
outsb
ss
jecxz
jns
cmpsl
dec
add
mov
and
jle
into
xor
insb
jno
cld
mov
jne
push
icebp
and
sbb
sahf
push
mov
pusha
shlb
ds
shll
int3
imul
ljmp
mov
push
dec
das
cmp
push
mov
cmp
mov
dec
pop
lods
fwait
adc
sarb
ficompl
pop
push
pop
cmp
mov
pop
popf
push
test
lods
jns
lods
sub
dec
into
mov
mov
push
cwtl
cltd
cs
fstp
sbb
ljmp
idivb
sbb
jg
inc
jecxz
pop
inc
mov
xchg
cmc
popf
movsl
loopne
mov
cmp
xor
pop
in
or
iret
adc
cmpsl
fsubs
inc
pop
popa
daa
jne
jae
add
cmp
testl
fadd
outsl
clc
out
es
push
iret
add
add
push
popa
jg
mov
mov
pop
sahf
cld
arpl
add
mov
dec
or
or
xor
jmp
js
add
bound
jns
cmp
mov
jo
sbb
mov
scas
add
mov
pop
add
imulb
mov
fscale
jno
xor
xchg
sub
cmp
mov
mov
xor
icebp
dec
cmpsb
inc
pop
dec
adc
sub
and
imul
xrelease
idiv
xchg
sub
mov
push
lods
cmpsl
and
cmc
es
xchg
jno
out
cmp
xchg
cmp
pop
mov
je
and
push
push
stos
push
gs
sub
or
mov
push
mov
add
mov
cmp
add
jb
xchg
push
mov
sti
xor
and
xor
dec
ret
mov
push
inc
bound
cmp
sub
cs
and
and
popa
icebp
out
xor
mov
frstor
cmp
xchg
movsb
fistpll
jge
sub
xor
sbb
aad
mov
cld
push
arpl
in
les
popl
js
add
enter
and
sub
xchg
pushf
aas
fnstenv
adc
jecxz
dec
pop
test
jg
sbb
outsl
and
cmpsl
mov
xor
pop
aaa
das
cmp
int3
call
popa
hlt
shll
sbb
push
mov
dec
lret
pop
mov
sbb
lahf
push
jmp
or
adc
and
mov
rclb
pop
sbb
adc
iret
or
jp
ljmp
mov
pop
cli
cmpsb
pushf
dec
outsl
add
orb
jb
enter
aas
dec
insb
std
cwtl
int
push
frstor
cmc
or
rclb
aaa
loop
sbb
sub
out
add
sub
cmp
or
pop
movsl
or
sub
mov
xor
xchg
adc
outsl
push
xor
lea
loope
icebp
push
sbb
push
sub
push
into
push
mov
outsl
fldt
xor
and
dec
repz
jmp
jmp
or
pop
icebp
shl
cwtl
stos
gs
and
subl
mov
in
ds
stos
jnp
out
sbb
data16
jmp
dec
jle
loop
pop
jmp
orb
push
fnsave
mov
sub
dec
fdivrs
dec
pop
imul
enter
sti
stc
lret
in
lret
cmc
inc
inc
std
dec
mov
xor
fldl
mov
stc
or
dec
ret
push
stc
orl
pop
ds
lds
in
popf
xchg
or
stos
int3
sub
pop
mov
pushf
aaa
xor
subb
inc
enter
mov
xor
inc
aaa
dec
xchg
fidivrl
rorl
mov
dec
cli
aaa
push
emms
cmp
push
aas
cs
add
mov
mov
fcomps
fimuls
cmpb
pop
call
and
gs
and
xchg
test
add
jno
aas
push
jg
outsl
iret
int
rorl
sbb
mov
fcmove
push
lods
and
std
cmp
mov
sbb
out
es
and
cltd
cmc
adc
xor
push
adc
loop
or
int3
jmp
aad
cld
icebp
or
jo
loopne
clc
jne
add
mov
pop
scas
into
cmc
jge
xchg
repz
cmc
push
cld
rcr
repz
xchg
jb
pop
lock
push
mov
ss
fsubrl
lret
xchg
lods
dec
ss
lock
nop
and
mov
push
mov
jmp
lret
flds
xor
in
cmpsl
push
orb
jl
ret
inc
pop
jle
cli
cmp
sti
insl
adc
test
les
ss
movsb
sti
cmp
xchg
leave
xor
into
jns
sarl
mov
test
aad
rcrl
jmp
mov
push
cwtl
cwtl
dec
push
xlat
orl
mov
lahf
jl
imul
xchg
das
dec
jo
mov
inc
jae
cmp
jge
stos
pushf
dec
jmp
arpl
mov
xor
ficomps
sbb
and
ljmp
fst
mov
test
frstor
dec
daa
es
cmp
cltd
xchg
cwtl
fistpll
clc
mov
mov
push
pop
jo
mov
mov
xor
adc
cmc
jnp
cs
jnp
mov
scas
outsb
addr16
call
mov
ret
cmpb
mov
notl
data16
popf
pop
shl
and
lock
xchg
dec
scas
pop
fs
sbb
mov
lcall
rorl
or
add
jnp
xchg
jbe
sbb
std
out
jbe
nop
push
sub
lock
xchg
xchg
push
xchg
das
jbe
enter
sbb
lret
loop
pop
or
mov
cli
add
in
push
jae
push
add
andl
add
lahf
sub
icebp
mov
adc
repz
lret
aaa
cmp
cmp
xchg
mov
int
aam
pop
das
mov
movsb
stos
lcall
int
xor
adc
ds
push
inc
jbe
dec
and
push
cmp
xchg
xlat
mov
cmp
adc
decb
and
fsub
movsb
cli
fcmovbe
sub
inc
mov
sahf
clc
xor
pop
sbbb
jle
call
push
iret
xor
jns
mov
in
dec
imul
pusha
add
test
xor
in
movl
out
inc
aam
movsl
in
popf
sub
test
xlat
xchg
dec
xchg
aaa
sbb
pop
xor
mov
inc
adc
cmp
enter
pop
mov
shrl
cmc
popf
dec
sbb
sbb
ja
xor
jmp
stos
xchg
jp
cmp
lods
out
mov
dec
fldl
scas
shrb
int3
mov
pushf
mov
insl
push
lahf
cmp
push
mov
mov
into
fwait
bswap
mov
mov
xor
mov
xchg
mov
sub
adc
popa
imul
shll
mov
pusha
aaa
push
movsb
std
mov
subb
mov
mov
out
ds
and
xchg
test
insl
fidivs
xchg
pop
aad
lret
sub
mov
fldl
test
xchg
icebp
mov
mov
inc
movsl
push
mov
popa
decl
dec
mov
addr16
mov
int3
mov
adc
jg
repz
dec
das
popa
dec
and
mov
and
lods
pop
inc
test
bound
loopne
cmp
adc
pushf
push
clc
cmp
sub
shrb
sbb
and
mov
bound
out
sub
add
in
and
push
ss
stos
inc
adc
aad
cmp
sub
xchg
sub
or
daa
xchg
mov
repz
adc
lahf
outsb
sub
lods
lcall
sub
icebp
and
xor
sub
sub
int3
test
pop
decb
or
inc
jp
cmp
inc
push
mov
xlat
insb
fisttpll
rolb
dec
sub
mov
gs
imul
push
inc
lgs
pop
add
pop
lock
imul
xlat
sub
jg
idivb
xor
leave
lahf
lahf
arpl
mov
sbb
ds
pop
jl
xlat
jnp
jns
mov
fnstcw
aaa
aad
mov
push
pushf
pop
fincstp
insb
lock
mov
leave
cmp
in
stc
out
adc
push
dec
imull
and
adcl
lods
movsl
mov
inc
mov
xchg
gs
mov
inc
cmp
jp
add
add
jne
xor
insl
outsb
dec
xchg
sarb
pushf
sbb
inc
fdivrl
push
pop
dec
test
dec
dec
jle
sahf
popa
push
xor
clc
jne
jmp
loopne
orl
rcr
cmp
and
rol
lahf
jbe
das
fcmovbe
mov
movsl
jge
mov
out
test
lcall
mov
push
stos
dec
insb
mov
mov
xchg
and
xchg
jae
and
idivl
iret
xor
lcall
inc
das
arpl
dec
pop
or
cmp
xor
fmul
xlat
in
lock
movsb
push
inc
stc
jmp
jp
clc
lock
outsl
push
test
in
cmp
inc
xor
sbb
xchg
xor
mov
fstpl
jae,pt
cld
js
push
cltd
loopne
xchg
ffreep
cs
adc
fsubr
lods
adc
loope
inc
popf
scas
cmp
cmpl
out
xchg
or
and
call
sbb
test
cli
addb
outsl
adc
or
xor
lahf
div
shll
je
lock
stc
in
fimull
stos
fnsave
pop
fs
mov
mulb
jb
out
mov
je
mov
loopne
fldenv
pop
dec
pop
inc
rcrb
add
icebp
xchg
mov
mov
xchg
mov
outsb
repnz
cmp
push
imul
push
es
xchg
enter
cmp
push
mov
pop
adc
dec
adc
in
test
adc
push
fnsave
and
aad
lcall
adc
insb
mulb
mov
jb
mov
pop
sub
xor
jecxz
inc
out
sahf
int3
inc
jge
imul
jb
rcr
and
mov
lods
xchg
and
fs
xchg
lods
sbb
inc
cmp
test
fistpl
gs
ja
or
aad
mov
test
sub
or
push
mov
lock
pop
ss
jo
js
adc
lret
fdivrs
mov
pop
xchg
jp
popa
out
icebp
imul
cmp
sub
lret
or
xchg
clc
pusha
cltd
das
inc
or
inc
inc
sub
jb
push
leave
lea
mov
lea
jge
pusha
xchg
jno
add
outsl
dec
jnp
mov
pop
imul
hlt
sbb
ljmp
popf
je
sarb
or
dec
sarb
lods
mov
jnp
mov
pop
inc
aas
and
dec
in
sbb
mov
mov
lds
popa
and
jl
jnp
pop
sbb
sbb
mov
sahf
lods
lret
sbbl
adc
cltd
push
and
mov
repz
lahf
lcall
or
xchg
ror
js
into
mov
xchg
in
inc
cli
imul
pop
xchg
ljmp
xlat
xor
push
leave
sarl
aad
mov
dec
push
xchg
and
stos
jecxz
rclb
cmp
mov
les
fidivs
cmpsl
nop
int3
mov
pop
das
lret
jmp
mov
aaa
push
pusha
test
incl
cs
xchg
jnp
pushf
lret
dec
and
lret
inc
int
xor
mov
aad
arpl
dec
dec
mov
add
pop
cwtl
das
ljmp
xchg
int
test
jns
dec
cmp
push
popf
fnstcw
aad
mov
hlt
push
fs
mov
cmp
stc
cmpsb
cmp
in
hlt
pop
cmpsb
es
sahf
popf
fcmovu
xlat
and
xor
cld
sti
out
cltd
out
stos
or
mov
xchg
jbe
add
sub
aad
stos
inc
into
std
jg
aam
pop
xor
adcb
aad
xchg
dec
mov
push
stos
repz
mov
cmp
andl
jg
pop
rcrb
fwait
pop
xor
sahf
cmc
jmp
orb
shll
push
xchg
cmpsl
mov
xor
in
sub
cmp
vunpcklpd
mov
pop
adcl
mov
push
xchg
sub
cmp
jne
push
lcall
or
sbb
cwtl
inc
mov
mov
scas
inc
lahf
or
adc
and
pop
and
popf
lock
jle
adc
lock
xor
loope
loop
cmp
xchg
adc
sbb
or
push
aam
jmp
xor
je
test
dec
inc
stos
aam
push
int
cmp
movsl
bswap
push
xchg
cmp
incl
cltd
outsl
aad
xchg
or
fistpl
insl
jae
aad
lods
insl
pop
dec
pop
hlt
imul
mov
jne
je
out
lods
xor
icebp
or
xchg
out
popa
sbb
dec
and
sub
mov
loopne
stos
sub
gs
dec
lods
pop
in
test
sbb
or
or
in
or
jb
es
mov
jle,pn
ret
sub
jns
xor
rcrl
movsb
or
inc
cmp
into
push
outsb
les
add
fstpl
mov
sub
dec
ficoml
inc
test
mov
stos
add
dec
or
mov
ror
sub
dec
imul
stos
sub
es
add
rcll
xchg
dec
fcmovnbe
lahf
and
jp
mov
int
inc
jmp
sub
iret
sub
scas
imul
icebp
cltd
pop
or
cli
dec
frstor
mov
test
jae
lods
sub
xor
lea
xlat
popa
lods
cmpsb
push
sar
mov
inc
pushl
mov
out
and
mov
lods
mov
mov
in
daa
iret
rep
cs
cmpsl
cmpsb
xlat
das
cmp
mov
pop
test
push
inc
or
add
pop
push
add
cmc
cmp
js
lock
mov
ljmp
mov
outsb
dec
sbb
mov
loop
repz
andl
push
jecxz
mov
mov
arpl
mov
subl
push
push
jne
das
dec
sub
adc
jne
jge
dec
cs
or
adc
xchg
popf
loope
gs
js
xlat
sub
loop
pop
pop
int
fstl
jne
cmp
add
sbb
lods
imul
fdivrs
data16
mov
movsl
hlt
and
sbb
jp
out
inc
inc
insl
imul
bound
mov
add
dec
jbe
mov
push
js
rcrl
loop
mov
mov
js
icebp
inc
das
fisubrs
pop
dec
bound
ret
dec
or
or
aas
movsb
mov
inc
add
test
into
cmpsb
pop
mov
mov
repz
rep
daa
cmp
clc
imul
xchg
sub
enter
jle
xlat
xor
cltd
scas
lcall
repnz
ds
xlat
jns
xchg
mov
cmc
rcl
cli
and
inc
ret
sbb
out
xchg
inc
push
jmp
pop
mov
mov
insl
repnz
mov
push
loopne
call
outsb
popf
push
mov
adc
ficoml
fwait
scas
dec
cmpsb
idivb
xor
pop
push
sar
xchg
xchg
xchg
dec
mov
xor
pop
inc
ja
mov
cmp
push
jne
lock
ds
lea
mov
and
jns
pop
cmp
push
jg
xlat
and
loope
pop
jmp
add
rolb
not
add
dec
fsub
jmp
and
mov
push
sbbb
cmp
jb
hlt
pop
aas
or
lock
out
add
loopne
loope
cmp
ss
cmp
jl
push
mov
or
push
adc
fmuls
jg
pushf
movsb
fsubs
sahf
cmp
xchg
rcrb
jle
xchg
je
push
sbb
or
and
aas
push
or
into
add
sbb
outsb
xor
das
gs
imul
push
dec
fwait
mov
mov
mov
rclb
sub
pop
jmp
push
adc
add
inc
xchg
inc
fs
dec
mov
testl
mov
add
aam
mov
and
dec
and
inc
out
notb
mov
sahf
stc
mov
push
testb
pop
leave
xchg
jae
int
call
ret
popf
inc
pop
pause
out
cld
lret
adc
jl
nop
lcall
xchg
adc
jmp
gs
cmpsb
jmp
daa
push
inc
sete
pusha
push
jae
cmp
iret
in
mov
imul
mov
movsb
in
repz
push
movsb
xchg
sub
fwait
and
out
mov
adc
pop
sbb
push
jmp
push
leave
and
push
and
outsb
and
pushf
inc
jg
daa
mov
int
aaa
mov
sub
fisttps
insb
dec
fimuls
inc
push
lret
mov
dec
loop
adcb
sub
inc
sbb
and
stc
xchg
push
jbe
aas
mov
mov
adcl
std
sbb
jmp
leave
movsb
in
iret
mov
lods
or
adc
xchg
xchg
sti
dec
and
inc
mov
dec
and
or
lods
sarl
hlt
clc
push
mov
movsb
aam
mov
or
imul
mov
mov
xor
inc
push
cmp
aam
stos
adc
mov
mov
or
sbb
scas
movsb
stos
and
lret
jecxz
lods
dec
jmp
xchg
test
repnz
sub
inc
sub
out
pop
add
xchg
mov
mov
jl
lret
mov
sub
mov
rorb
leave
fucomi
popf
test
mov
push
fs
data16
jg
jae
xchg
cmpsb
sub
inc
shl
mov
cmpb
jo
test
push
es
and
cmpsb
mov
push
aam
ret
mov
or
xchg
or
clc
test
adc
cmpsl
in
mov
mov
cltd
std
lcall
mov
fmul
fcomps
lds
lods
out
sub
inc
nop
mov
mov
inc
insb
fxch
jecxz
jmp
iret
nop
fisttps
dec
jecxz
popa
rcll
scas
repz
adc
fnsave
jnp
js
ret
lea
cwtl
fimuls
inc
mov
or
pusha
dec
aaa
out
pop
pop
sbb
or
jbe
stc
in
jmp
test
inc
outsb
out
gs
inc
notb
inc
pusha
mov
dec
mov
xchg
pop
sub
faddp
pop
push
gs
or
dec
sub
fldcw
or
mov
pop
and
lret
sbbl
add
adc
sub
sbb
shlb
push
sbb
jnp
add
and
mov
daa
daa
mov
ss
loop
adc
pop
xchg
cwtl
daa
jle
ja
push
push
daa
scas
outsl
mov
pop
imul
jecxz
in
push
loop
mov
ljmp
jp
movsb
mov
into
ja
push
pop
cs
sub
add
fimull
push
outsl
mov
or
sahf
out
loope
cwtl
fs
ret
mov
filds
dec
jl
adc
pop
dec
sti
cs
jp
jmp
popf
lods
outsl
nop
and
lods
push
loop
hlt
xor
aam
arpl
xchg
mov
out
jl
dec
xor
push
mov
xchg
test
test
add
push
push
add
xor
repz
push
inc
in
fnstsw
std
dec
pop
cmp
test
mov
mov
inc
sbb
ret
sbb
mul
mov
fwait
pop
cmp
sbb
fucomi
and
and
or
adc
jbe
lcall
pop
hlt
sbb
adc
cmp
cmp
push
sbb
ret
lret
xor
jl
and
mov
test
popf
shll
add
pop
icebp
push
hlt
iret
ljmp
cli
mov
xchg
subl
push
stos
push
shl
xchg
inc
add
push
or
jnp
adc
jae
pop
aad
push
lcall
orl
pop
fidivrs
test
mov
cs
fcmovnu
dec
push
cli
test
aas
dec
dec
out
jmp
loop
insb
sbb
clc
xor
dec
sbb
jo
sub
jae
xor
ja
pop
xlat
adcl
into
jl
cli
pop
cmpsb
mov
inc
rcrl
test
or
jecxz
and
clc
bound
or
add
repnz
mov
es
push
cmpsl
jg
sbb
pop
mov
pusha
pop
and
and
inc
xchg
outsb
daa
and
es
sub
xchg
cld
fs
sbb
cmc
ret
cmp
inc
stos
test
dec
xorb
aas
lock
lods
lods
mov
pop
cltd
pop
or
or
arpl
mov
add
insb
xchg
inc
inc
jae
adc
push
cltd
push
push
fs
rclb
std
xchg
fisubrl
lds
pop
daa
in
push
daa
outsl
and
sbb
or
push
adc
imul
mov
xchg
cld
repnz
btr
cs
addr16
sarb
cs
stc
jbe
mov
dec
xor
xchg
sbb
xchg
or
std
push
mov
cld
repz
test
xor
fwait
pop
inc
ljmp
bound
jnp
addr16
dec
mov
cli
sbb
lcall
cmc
and
push
popa
push
xchg
mov
stos
fldt
incl
rorl
dec
mov
adc
adc
mov
lcall
mov
jb
sbb
es
mov
push
mov
vpcmpeqw
stos
sub
xor
ret
popf
stc
sbb
fwait
pop
mov
lcall
push
mov
fimull
adc
ffree
dec
int3
shrl
cltd
fisubl
push
rorl
pop
mov
dec
xchg
jo
iret
popf
inc
xor
xor
or
idivb
push
das
cld
rcrb
ret
ret
test
adc
rcrl
jecxz
out
js
divl
aas
in
arpl
lds
cmp
sub
add
mov
cld
in
pop
in
and
imul
sbb
gs
and
test
std
test
cltd
dec
jmp
jbe
outsb
dec
push
movb
repz
or
dec
adc
dec
stos
bound
push
mov
fdivs
pusha
fisubs
jle
cmp
out
add
test
or
add
popa
xchg
into
mov
mov
cmp
into
cmpsl
in
orl
sub
into
jl
std
pop
push
push
push
or
in
xchg
jbe
push
or
nop
mov
stos
lcall
ss
xorl
cltd
in
adc
lret
int
les
mov
add
mov
adc
cwtl
sub
aas
mov
xchg
outsl
mov
adc
out
imul
cld
out
in
repnz
mov
mov
insl
dec
pop
xchg
sbb
or
outsl
das
dec
ds
pop
es
aam
ret
add
xchg
je
aas
push
cwtl
dec
xchg
dec
mov
fnsave
cmp
sub
enter
and
or
stos
jnp
sub
rol
adc
ds
mov
bound
ss
test
xchg
or
flds
xor
fptan
lods
movsl
rcll
cmp
ror
mov
imul
xchg
sahf
int
pusha
cs
mov
out
sbb
sti
dec
in
loopne
xchg
sub
cmp
add
in
lods
mov
jecxz
push
push
inc
push
sub
mov
push
shlb
xor
into
cmc
pop
pop
inc
hlt
or
xor
fs
into
cmpsb
cmp
sub
or
dec
fwait
inc
mov
pop
jmp
in
imul
push
cwtl
call
cmp
fsubrs
fists
pop
mov
mov
cs
mov
int
adc
push
dec
mov
jno
je
decb
adc
loope
inc
les
arpl
imul
sub
and
movsl
in
jbe
jp
test
sbb
or
clc
jbe
cmpsl
and
push
and
or
mov
sar
adc
outsb
push
cmp
sbb
addr16
std
fdivr
jmp
xor
into
mov
add
aaa
jae
fstps
jae
cwtl
adc
push
scas
aam
aas
mov
nop
shll
push
out
stc
sub
adc
int
cmp
popf
dec
or
scas
stc
mov
push
and
dec
loope
inc
daa
stos
sub
stos
ja
mov
stos
jnp
mov
mov
std
push
mov
adc
push
inc
xor
shll
addb
fs
inc
cld
jp
jbe
sbb
es
mov
lods
dec
sub
out
push
out
sub
jg
iret
mov
sahf
pushf
jb
pusha
aam
out
cmp
movsb
or
flds
in
mov
or
mov
in
out
out
aad
cmp
cld
push
sub
ds
daa
inc
jl
push
cld
pop
stc
push
inc
add
fmul
or
push
pop
and
or
dec
out
jno
pushl
outsb
in
cmp
dec
lea
jne
ret
xor
and
data16
push
imul
or
leave
pop
int
gs
xchg
mov
ss
loopne
jbe
push
aam
iret
dec
mov
push
fwait
in
mov
sahf
bound
adc
and
out
adc
data16
pop
mov
outsl
aaa
sbb
mov
dec
xchg
jmp
enter
cld
ds
xchg
clc
adc
incb
and
jo
push
pop
stc
or
es
or
push
mov
adc
cltd
push
add
cli
mov
and
xor
popf
fildl
adc
dec
shr
outsb
xchg
jecxz
dec
inc
mov
rcrl
adc
lret
pop
pop
cmc
mov
pop
push
add
loop
xchg
push
test
pop
mov
mov
sub
pop
outsl
sbb
fwait
xchg
daa
add
or
movsb
icebp
in
arpl
shll
test
movsl
test
cli
jns
fidivrs
aad
mov
mov
mov
mov
cmpsl
out
and
loopne
nop
sub
sarb
sbb
cmp
mov
ss
sar
inc
lahf
icebp
push
or
xchg
mov
out
push
pop
jl
sub
ja
sbb
push
cmc
xor
sbb
in
inc
sub
mov
stc
aam
pop
jge
push
rorl
mov
sub
cmc
pushf
cmc
pop
mov
test
aaa
fidivrs
cld
sub
dec
out
push
stc
aas
out
ljmp
adc
and
jp
data16
jmp
out
push
icebp
insb
inc
daa
stc
rcrl
les
dec
adcb
lea
push
and
jg
shrl
xor
jle
add
mov
mov
push
repz
lods
cmp
mov
mov
fsubs
jmp
push
adc
addr16
mov
xor
adc
mov
xchg
outsl
add
inc
data16
out
popa
loopne
sahf
inc
test
popa
enter
mov
insl
flds
ljmp
nop
out
and
dec
fcoms
out
dec
out
mov
mov
sarl
or
idiv
inc
shlb
out
mov
or
cld
popf
fbld
iret
outsb
add
data16
test
fdivs
outsb
cmp
sub
inc
ljmp
add
filds
mov
in
cmp
test
add
cmc
scas
mov
testl
inc
mov
xor
ljmp
je
pop
or
xor
sbb
dec
add
cmpl
or
mov
and
in
icebp
pop
sub
add
mov
aaa
or
push
jmp
imul
lcall
add
dec
enter
ljmp
imul
sbb
pop
xchg
sbb
xchg
imul
shl
call
push
xchg
and
mov
into
adc
in
sub
movsl
sbbl
pop
or
add
cmpsl
mov
push
dec
sbb
ss
adc
jecxz
imul
xor
lahf
sbb
je
and
and
push
mov
fldcw
fsubrs
push
and
jbe
mov
mov
loope
dec
push
mov
or
mov
push
push
cwtl
add
std
and
jbe
sub
ret
sbb
xor
movb
cmp
mov
mov
lahf
or
cmp
int3
or
std
mov
sti
jge
jg
aaa
mov
into
mov
and
gs
sbb
or
std
nop
inc
mov
in
js
cmp
and
ret
lcall
rcr
rcll
pop
mov
mov
jbe
sub
cld
and
ljmp
inc
aam
in
add
sub
adc
sbb
sub
data16
mov
push
mov
bound
mov
div
dec
lret
add
in
mov
xor
shrb
push
xchg
pop
cltd
imul
mov
adc
lea
cmp
add
sbb
ja
or
dec
js
arpl
cmp
or
out
gs
cmpsb
jmp
push
sbb
adc
mov
lea
aas
and
xor
mov
sbb
sbb
push
sbbb
jl
shll
push
repz
mov
adc
outsl
fcoms
imul
inc
cltd
loopne
stos
cmp
aas
dec
mov
int3
mov
out
rol
xor
fistpll
inc
out
sub
sub
sbb
dec
dec
movsb
stc
js
and
add
xor
lea
inc
fimull
ja
out
cmp
xor
lds
jne
xlat
push
and
or
mov
int3
jle
adc
adcb
jge
jle
clc
pop
jns
lea
jnp
out
shlb
fs
in
push
stos
cs
xchg
jno
push
jp
je
in
jecxz
mov
and
mov
inc
pop
sarl
mov
jl
sti
cmpsb
pop
das
cmp
cs
cmp
or
bound
or
aad
jmp
sub
jge
inc
xchg
mov
xor
popf
int
pop
test
lods
pop
stos
in
xor
repz
shll
orb
fiadds
aaa
jecxz
or
jbe
inc
inc
jb
sbb
stos
xor
testb
ds
add
ret
or
out
jmp
popa
xchg
mov
inc
pop
popf
rcr
stos
ds
xchg
sbb
jle
xlat
pop
movsb
lods
cmp
sbb
push
xor
aas
cmp
sahf
inc
xchg
aad
inc
scas
mov
pop
jp
shlb
out
gs
out
dec
xchg
add
sti
test
sub
stos
popf
pop
aaa
push
cmp
push
pop
jae
je
or
mov
mov
rdpmc
jae
rorl
rorl
outsl
add
adc
out
inc
mov
xchg
push
or
mov
mov
mov
ret
dec
mov
push
stc
fs
sbb
mov
nop
sub
push
movsb
mov
ja
mov
loopne
loop
add
push
mov
add
or
and
pop
mov
push
imul
jg
adc
pop
adc
add
inc
into
add
gs
mov
adc
add
adcb
leave
xchg
adc
into
sbb
lock
pop
inc
xchg
jae
pop
and
lds
or
jle
test
jb
inc
push
add
fistpll
test
sub
insb
and
jmp
out
sahf
bound
decb
xchg
data16
ret
arpl
jecxz
cmp
jg
cmc
je
cltd
pop
xchg
cmp
push
in
mov
sub
outsb
sbb
push
jbe
mov
push
or
adc
jnp
mov
push
negb
cli
dec
sbb
push
cmp
daa
add
push
mov
adc
or
aas
shl
adc
loopne
fbld
dec
mov
xchg
mov
xor
and
and
and
mov
jo
dec
shll
addr16
mov
mov
aaa
adc
mov
call
adc
or
jo
dec
mov
sub
scas
mov
push
aad
sbb
fcoms
or
imul
sbb
mov
jmp
out
adc
adc
sub
mov
repz
push
cli
add
cltd
inc
cmpb
mul
cmpsb
ffreep
dec
popl
mov
mov
sub
or
adc
mov
sub
mov
data16
sbb
jb
add
loop
adc
pop
mov
lret
gs
notl
sbb
cld
jbe
fs
stc
push
ss
das
mov
push
push
jmp
bound
dec
test
je
pusha
loop
inc
jbe
lods
inc
sahf
xor
mov
push
inc
xchg
push
jne
push
xchg
sbb
outsl
xlat
fbld
test
rclb
jnp
mov
ds
cli
lcall
or
in
inc
add
xchg
or
mov
mov
in
pop
xor
pushl
rcrl
test
mov
mov
fldcw
fcmovu
adc
fisubl
test
loopne
filds
mov
ret
and
lcall
fs
push
push
mov
rcrb
mov
mov
jo
dec
adc
fcmovnb
call
out
dec
mov
sub
pop
arpl
mov
js
dec
outsb
jecxz
test
addr16
xchg
cmp
shlb
loope
inc
sub
sbb
popf
loopne
mov
int
dec
popa
ss
mov
inc
les
mov
mov
mov
cmp
xor
bound
lcall
fsubr
loopne
xchg
add
lds
inc
mov
xor
jge
lods
push
cmpsb
sbb
imul
xor
aad
movsl
cmpsb
enter
stc
or
mov
xchg
addr16
push
and
xchg
xchg
mov
cwtl
cwtl
aas
cltd
add
sbbl
cltd
push
sub
xchg
xor
aad
js
dec
or
jbe
mov
movsb
jns
das
cmp
pop
mov
lods
mov
xchg
fldenv
ds
lret
pop
dec
daa
call
inc
cltd
fsubs
insb
xlat
mov
cs
in
mov
add
and
mov
or
inc
sti
xor
in
fsubl
mov
inc
mov
test
mov
fwait
push
cmp
outsl
add
sbb
inc
fdivr
dec
mov
jp
pop
add
lea
aas
lods
cmp
inc
sub
inc
xor
int
scas
cmpsb
rclb
fisubs
imul
scas
mov
lahf
cmp
iret
xchg
xlat
cli
int
jg
repz
push
jmp
mov
out
cli
or
test
and
loope
xor
push
xor
into
fadds
fs
inc
cmp
cs
test
ret
sbb
push
loop
stos
mov
dec
adc
adc
push
sbbb
cmp
es
add
loop
int
sbb
add
stos
xor
lds
fs
adc
push
testb
mov
xchg
xchg
pop
add
mov
mov
lds
adc
jb
out
inc
xor
adc
loope
mov
jl
xchg
pop
das
fnstsw
pop
movsl
ret
out
sub
mov
in
add
sub
out
mov
ljmp
fs
dec
jg
movsb
aad
adc
pusha
ljmp
loope
dec
outsl
mov
mov
mov
pop
jge
dec
mov
pop
cmc
pop
popf
pop
jne
cmp
out
xchg
or
inc
je
xchg
scas
lock
add
add
arpl
jnp
jns
stos
mov
int3
mov
sbb
jb
pushf
xor
stos
mov
mov
enter
sbb
negb
or
inc
dec
pop
mov
push
cmp
es
adc
lods
pop
add
into
xor
movsb
pop
pop
mov
pop
cli
push
leave
out
xchg
pop
push
jne
mov
sub
testl
adc
sbb
mov
shrl
nop
mov
insb
mov
push
stc
fnstcw
xchg
bound
add
in
push
mov
insb
sbb
lcall
out
cmc
sbb
xchg
xchg
fwait
lahf
je
xchg
pop
xchg
and
adc
adc
and
shrb
add
and
adc
mov
jnp
mov
dec
xchg
mov
pop
sarb
sti
jmp
xchg
jg
mov
test
adc
mov
outsl
add
adc
pop
or
mov
xchg
roll
push
std
loop
mov
cmp
ror
js
cmpsb
mov
and
mov
cli
xchg
outsl
inc
test
cltd
in
xchg
jb
fildl
jb
lret
inc
fists
mov
mov
mov
cmp
repz
or
push
test
or
jne
int
xor
sbb
sbb
je
or
fisubrs
and
cmp
xor
jno
and
inc
arpl
inc
addr16
xlat
bound
jecxz
add
push
cmpb
add
ret
clc
pop
out
push
imull
cmp
in
jge
popf
scas
cwtl
imul
mov
jmp
aaa
mov
xlat
loopne
add
xor
or
dec
cmp
adc
push
shlb
mov
ficoms
dec
pop
scas
loop
shlb
sbb
pop
pop
test
lock
sub
ja
xorb
movsl
out
pop
sarb
pop
mov
cmpxchg
lock
pop
xchg
and
inc
lret
movsb
out
lret
addr16
ljmp
clc
test
sub
jne
sub
addr16
inc
xor
iret
movsb
and
ret
movsb
pop
jb
loopne
add
int
cs
jbe
mov
sub
pushf
or
out
xor
xor
out
popa
or
sti
icebp
jmp
push
outsl
adc
push
adc
fsubrs
dec
in
dec
mov
xchg
xchg
notl
stc
fldcw
in
jb
lods
sbb
jb,pt
dec
jns
je
inc
pop
lret
movsl
movsb
mov
mov
lahf
imulb
lahf
mov
shl
subl
sub
xchg
out
mov
dec
rorl
inc
lods
fisubrl
shl
popa
sti
imul
inc
scas
test
mov
shl
in
and
dec
cld
out
xor
adc
mov
lods
and
push
lock
testl
xchg
push
shl
sub
jle
fs
jle
sub
das
cmpsl
outsl
mov
push
arpl
jbe
inc
inc
jle
bound
in
inc
inc
test
dec
mov
xor
bound
inc
pop
test
pushf
in
mov
dec
pusha
jg
shlb
add
loope
imul
mov
sub
shll
pop
nop
leave
fs
jnp
stos
jb
or
add
mov
lods
int
repnz
xlat
popf
mov
xor
mov
stos
mov
mov
aam
or
add
jae
lods
xlat
cmpsb
cmp
shr
fsubs
push
pop
mov
or
int3
daa
mov
cmp
cmpsl
pop
test
mov
shrb
and
cmp
call
sub
leave
mov
iret
popf
lds
add
outsb
scas
scas
lods
or
dec
add
mov
fwait
pop
mov
push
popa
scas
and
mov
dec
jns
in
imul
in
stc
les
push
sub
dec
repz
xchg
stos
lahf
push
add
inc
jl
lcall
xor
cld
xchg
repz
xchg
jae
xor
xchg
sub
xchg
in
call
insb
fs
sbb
std
inc
fwait
jns
and
fisttpll
xor
cmp
pop
leave
adc
cwtl
push
xor
mov
xlat
cwtl
push
dec
pop
sti
pop
push
lock
sbb
push
stos
stos
out
jge
mov
inc
pop
and
sub
mov
sbb
aad
test
jns
loop
mov
mov
push
xchg
cld
jle
inc
bound
daa
push
mov
in
xor
push
jp
fisttps
fistpl
sbb
mov
add
xor
insl
fisttpll
sbb
bnd
jbe
ljmp
dec
push
mov
cmp
hlt
imul
popf
insl
popa
xor
dec
mov
mov
loope
and
pushf
jle
and
push
and
shlb
outsl
jo
and
rorl
sub
and
ja
mov
int3
push
stos
adc
and
push
ret
inc
ds
pop
in
bound
sbb
hlt
push
add
fistpl
in
xor
jne
enter
push
dec
movsl
dec
mov
pop
jae
add
pop
nop
mov
cmc
dec
and
sbb
mov
addr16
outsl
mov
or
test
and
push
adc
ds
sbb
in
jnp
sub
mov
pop
sub
int
roll
jo
cld
sarb
jns
addr16
leave
adc
inc
ficomps
rcrl
test
push
sub
popf
shl
ja
in
add
lcall
inc
lret
mov
pop
repz
pop
js
push
mov
shl
push
or
mov
jne
fs
mov
adc
pop
aam
adc
xor
xchg
sub
insb
call
or
sbb
ss
jle
xor
faddl
push
cmp
cli
mov
mov
ficoml
xlat
jecxz
shrb
rorb
adc
push
bound
cmp
push
ret
jge
xor
imul
lahf
push
cmp
jno
jne
sti
add
decb
xchg
ljmp
dec
adc
sbb
lahf
mov
jge
pop
int
mov
aam
out
test
push
sbb
push
icebp
cwtl
shrb
aaa
sub
cs
insl
lock
cmp
add
loop,pt
lods
dec
pop
adc
push
int
cmp
loop
stos
and
bound
movsb
jb
and
jge
arpl
test
push
sub
mov
mov
fdivr
adc
arpl
stos
jmp
cld
or
sub
inc
push
iret
gs
or
or
mov
stc
movsl
adc
lods
xchg
out
xchg
sbb
sbb
cs
cmp
cmp
or
cmp
xor
in
ss
mov
stc
xchg
std
scas
cld
stc
aam
xchg
adc
add
add
sbb
fnstenv
movsl
pushf
sub
sub
mov
pop
ret
xor
fsubl
gs
sbb
push
out
pop
std
xlat
stc
sbb
aam
out
sbb
popf
out
jb
cmpsb
dec
mov
lds
sub
mov
andb
mov
cmc
out
mov
sbb
pop
test
loopne
fidivl
rol
stos
xor
test
cmpsb
sbb
ret
shlb
in
ret
lcall
in
fadd
pop
lcall
pusha
xlat
ss
mov
xchg
addr16
mov
adc
divb
inc
rcl
pop
sub
bound
nop
lahf
lahf
mov
xorl
jl
cmp
cmpsl
sbb
push
repz
mov
ljmp
fcomip
lahf
outsl
leave
loope
mov
std
xor
add
jmp
movsl
push
lods
stc
scas
mov
mov
inc
mov
inc
push
sahf
jae
test
imul
and
cmp
imulb
mov
ffreep
shrb
jg
sub
cwtl
mov
lcall
fildll
fsub
inc
xor
test
stos
dec
push
rclb
pop
xchg
lods
jge
sbb
push
aaa
sti
fucomp
adc
not
mov
cmp
xchg
cs
outsb
mov
lret
lods
adc
jecxz
inc
mov
or
push
ss
pop
mov
push
and
dec
pushf
mov
inc
ljmp
mov
fimuls
insl
pusha
in
inc
cmp
add
js
jno
or
sub
js
adc
pop
scas
or
imulb
dec
adc
movsb
mov
lahf
jmp
cmp
lea
push
push
aam
scas
xorl
mov
rcrb
mov
test
sbb
pop
popa
movhps
cmp
mov
jp
loope
jp
fistpll
popa
sbb
popa
and
and
pop
les
fwait
ljmp
jbe
xchg
stos
test
js
mov
cmp
daa
stos
test
ds
movsb
sub
es
pop
test
fsts
or
cmpsb
cld
inc
out
mov
cwtl
insb
push
xchg
xchg
inc
in
fs
mov
stc
push
push
incl
mov
pop
test
in
es
pusha
repz
test
dec
adc
or
mov
add
fcomps
rcl
jle
mov
push
push
xchg
pop
imul
xor
push
test
mov
adc
pop
and
mov
mov
stos
adc
ja
cltd
les
or
and
insb
stc
rcr
and
fisubs
aas
pop
jae
test
leave
pop
mov
dec
fiaddl
jmp
dec
xlat
mov
jno
push
mov
mov
call
inc
jnp
fs
dec
cld
sub
into
mulb
mov
jge
mov
ds
stos
xlat
gs
push
lret
pop
mov
and
cld
sub
aam
lret
mov
push
imul
subl
jge
insl
xlat
movsb
iret
sbb
inc
mov
dec
mov
ljmp
fcomps
ret
push
sbb
sbb
call
cmpsb
mov
rcl
outsb
mov
cmp
clc
aam
call
mov
mov
sub
jmp
mov
aad
nop
cmp
mov
pop
mov
mov
ljmp
int3
jae
es
shl
movups
mov
int3
das
loop
daa
repnz
mov
xor
push
add
pop
sbb
sub
mov
push
add
insl
pop
iret
lahf
lret
andb
pop
xor
das
cmp
leave
fadd
mov
dec
jmp
mov
stos
sahf
lret
mov
daa
ret
inc
dec
mov
jb
push
jecxz
jge
push
clc
cmpsl
clc
fwait
sti
int
lods
les
pop
or
cmp
adc
xchg
stc
lcall
add
fldl2t
pop
add
enter
mov
jg
and
outsl
mov
mov
jno
add
push
jo
cmp
lcall
les
xchg
imul
dec
inc
aam
fcmovne
addr16
pop
ja
dec
vpsadbw
xchg
into
jb
mov
iret
pushf
or
mov
leave
cs
dec
popa
iret
test
lods
dec
jmp
lahf
xor
notb
call
imul
fcmovnbe
mov
sbb
sbb
xchg
loope
jmp
fcoms
inc
lods
cmp
inc
out
push
jno
test
adc
leave
cmp
jae
push
insl
push
dec
int
imul
or
aam
fcompl
jnp
or
fmull
cmp
jo
mov
adc
pop
ret
loopne
adc
shrl
repnz
mov
add
faddl
adc
adc
js
imul
test
lds
leave
mov
sbb
mov
xor
push
or
fwait
cwtl
add
sub
and
lcall
push
xor
xchg
out
lea
push
add
dec
adc
xchg
pop
pop
clc
lds
test
or
push
dec
js
test
rorl
imul
pop
stos
mov
hlt
shl
shll
pop
inc
push
int
jecxz
sbb
inc
mov
shlb
xchg
and
out
nop
lahf
jge
mov
mov
movsb
push
adc
adc
or
ret
movsb
cli
cmp
pop
je
dec
fisttps
imulb
dec
pop
add
xor
test
test
setle
out
xor
test
and
insb
and
xchg
inc
test
mov
and
xor
mov
sbb
lds
test
pusha
scas
dec
jns
dec
and
mov
inc
inc
test
stos
dec
pop
repnz
and
mov
fldl
hlt
or
jnp
call
mov
scas
dec
cld
jg
ja
vpminsw
sbb
adc
lcall
nop
in
lret
inc
hlt
enter
stc
jno
arpl
mov
loop
inc
mov
add
test
add
dec
xchg
push
dec
stos
mov
sbb
aaa
outsl
das
rorl
movsb
orl
sahf
sbb
sbb
mov
inc
pop
ss
fsubs
and
xlat
inc
xor
lcall
std
mov
ja
insb
inc
lock
pop
sbb
aad
and
cmp
test
dec
mov
test
call
dec
pop
xor
inc
inc
pop
xor
iret
sbb
jne
adc
and
aaa
repnz
mov
stos
outsl
out
ror
mov
in
jp
or
lods
jmp
pop
fstpt
xchg
leave
cltd
and
nop
rorb
cltd
loop
data16
jecxz
mov
test
mov
cmp
push
rdmsr
mov
sub
adc
scas
testl
shlb
xchg
mov
mov
shrl
dec
aaa
jecxz
and
adc
rol
and
fwait
mov
xchg
pusha
es
push
and
push
das
lret
nop
cmpsl
fwait
sbb
sbb
cmc
je
push
mov
xchg
xchg
sbb
and
push
jmp
leave
mov
sbb
fmuls
sbb
mov
sub
fidivrl
stc
add
in
xor
sbb
adc
test
push
sbb
in
sahf
lcall
dec
lcall
movlps
mov
sub
jecxz
mov
dec
call
and
loopne
ds
out
push
or
out
jno
test
inc
mov
dec
jmp
addr16
leave
mov
fs
mov
ror
scas
dec
stc
into
lods
movsl
or
jge
outsl
lahf
fiadds
ds
push
fs
sub
lds
mov
xor
outsl
cmpsb
aaa
cmp
cwtl
ret
mov
loopne
cmp
pop
cmp
sub
mov
mov
fildl
cwtl
scas
sbb
adc
inc
sbb
dec
sbb
rorl
push
into
adc
lahf
push
dec
aam
loopne
mov
push
loop
int3
jbe
out
loope
aas
dec
lret
fidivs
pop
fdivp
jmp
xchg
xchg
sbb
rcrl
out
andb
test
and
jg,pt
cld
inc
push
pop
adc
dec
arpl
and
jbe
and
imul
xor
or
jle
add
scas
das
xor
inc
imul
mov
test
cmp
sbb
shrl
std
mov
mov
add
sbb
mov
rorb
in
pop
cmp
xchg
mov
in
daa
insb
push
orl
xchg
out
push
sbb
and
stos
mov
mov
popa
pop
es
sub
js
out
mov
and
ficoml
nop
movsl
sbb
mov
les
aad
jnp
pusha
aam
lahf
xchg
pop
adc
arpl
xor
push
or
push
jbe
mov
in
jbe
cld
mov
bound
xor
lret
rcrl
push
aaa
popa
fistl
in
push
jp
shll
add
inc
dec
adcl
imul
lds
dec
sub
in
insl
and
dec
jmp
mov
inc
pushf
scas
movsb
les
cmp
movsb
xor
xor
mov
insb
xchg
jge
or
adc
push
xchg
imul
cmpb
test
adc
shl
fwait
xchg
int
fcmovu
stos
cmpsl
out
maskmovq
imull
mov
ret
ret
lds
and
loop
jns
or
pop
cmp
jae
in
cmp
loopne
subl
and
push
bound
dec
pop
rorl
repnz
imul
pop
mov
inc
mov
scas
jno
jo
insb
jp
push
push
jne
sbb
andb
in
xor
mov
popa
lahf
add
arpl
push
lea
inc
pop
movsl
cmp
enter
clc
imul
lcall
out
nop
mov
call
mov
mov
das
pushf
aas
mov
pop
dec
movsl
decb
loope
in
mov
jge
mov
shrb
icebp
les
sbb
sbb
xchg
mov
icebp
int3
aas
das
push
jg
fisubl
out
push
sub
cli
jg
add
inc
add
rorl
adc
mov
shlb
xchg
adc
fimuls
adc
stc
fmull
dec
pop
sti
xchg
ljmp
or
lds
bound
add
push
push
and
out
addr16
jb
cld
inc
pop
rcl
inc
inc
mov
movsb
jns
clc
cmc
shlb
scas
rcr
sbbb
xor
inc
mov
cltd
xor
xor
lds
stos
leave
js
shll
outsl
addr16
repnz
ret
je,pt
xlat
jge
nop
cmpsl
adc
pop
int3
rcr
add
inc
cmp
mov
pop
addl
addb
mov
pop
lcall
jl
or
movsb
jl
ficomps
mov
mov
fwait
pop
rcll
mov
leave
mov
jo
mov
rorl
mov
lcall
sbb
xchg
mov
mov
jge
and
jp
mov
dec
sub
shrl
fmull
scas
cld
push
movsb
mov
sti
nop
mov
out
rolb
mov
nop
jecxz
sysenter
dec
cmp
jmp
aaa
mov
jb
inc
popf
hlt
shrl
jno
jge
pop
repz
movsb
dec
lret
xchg
js
xor
scas
int
sub
xchg
inc
cmp
sub
or
into
xor
rclb
jno
icebp
inc
mov
jnp
sub
and
xor
and
push
cmp
xchg
jne
imul
scas
add
add
sti
sti
jmp
cwtl
adc
aam
test
mov
lods
push
adc
movsb
repz
mov
add
inc
das
inc
out
xchg
and
mov
aad
jb
lock
aad
lods
xchg
ss
insb
push
pop
jge
cmpsl
pop
outsl
pop
adc
es
cmp
subl
dec
filds
sbb
mov
jbe
xchg
mov
adc
lock
es
jbe
imul
fcmovbe
dec
je
lret
add
pop
ds
push
push
jnp
dec
cmp
or
rcrl
push
push
movsb
add
cmp
push
enter
push
fildl
sub
aaa
push
fstpl
inc
popa
push
fimull
das
fnsave
nop
xchg
dec
aam
popa
dec
push
sbb
adc
notl
bound
ss
and
lea
jl
xchg
cmp
mov
push
or
sbb
stos
adc
and
cmp
out
xor
cmp
xchg
push
xchg
mov
rorb
pop
cwtl
out
and
mov
pop
push
jb
pop
mov
lods
int
bound
mov
xor
div
mov
nop
dec
sub
mov
jns
dec
lds
jne
dec
cmp
inc
scas
or
push
rcrl
lods
push
std
add
rclb
and
lods
subb
fdivp
mov
lds
sub
sub
and
imull
enter
roll
lret
pop
ja
xchg
mov
adc
shrb
inc
add
mov
pop
xor
orb
mov
pushf
dec
mov
jo
fstpl
std
frstor
ljmp
pop
icebp
xchg
xchg
insb
lods
fsts
pop
xchg
mov
outsl
cmp
daa
cli
xor
bound
add
orl
lods
icebp
rcr
test
lds
xchg
and
push
xchg
mov
rcrl
jmp
cld
inc
inc
sbb
mov
addr16
mov
insb
loop
pop
dec
js
push
add
mov
frstor
sbb
jecxz
std
popf
xchg
and
pop
frstor
fs
popf
cltd
jp
adc
loope
dec
push
push
stc
lret
pop
push
jecxz
pop
das
mov
movl
pop
sub
xchg
push
fsub
add
sbb
mov
icebp
mov
sbb
add
stos
dec
gs
mov
push
gs
xor
lea
adc
es
pop
mov
hlt
cmc
push
stc
pop
test
dec
pop
lret
xchg
movsb
lea
mov
add
or
mov
sub
cmpsb
nop
xor
leave
adc
mov
push
pop
es
mov
dec
into
mov
xchg
ja
push
or
dec
mov
push
mov
aas
jmp
sbb
scas
cmp
sub
push
xlat
mov
inc
in
imul
mov
mov
lock
jl
stos
movsb
adcb
inc
cmp
pop
imul
mov
inc
imul
iret
icebp
sub
sbb
cli
push
rclb
ds
mov
mov
pop
in
fisubrs
fidivs
mov
in
push
mov
pop
jo
and
mov
shll
xchg
push
dec
mov
push
mov
push
adcb
nop
fs
xor
sbb
es
cmp
mov
stos
out
xrelease
mov
mov
lea
jne
aaa
cmp
imul
sub
push
xchg
or
out
adc
ss
or
ss
inc
and
repnz
and
jecxz
jecxz
out
inc
mov
sub
dec
xchg
lcall
or
xchg
push
mov
outsb
sub
aam
std
cmpsb
push
rcrb
rcll
xchg
hlt
cmpsb
outsl
inc
dec
or
sub
push
mov
mov
out
jns
ds
lods
sbb
das
mov
shlb
std
imul
mov
sti
aad
out
adc
adc
push
sub
sbb
out
inc
mov
icebp
push
ret
ss
out
in
repz
add
hlt
scas
push
orb
jg
adc
in
ret
sbb
cmp
cmpsl
out
and
sahf
mov
fbstp
or
xor
sub
insb
iret
les
int3
mov
pop
movsb
fldl
xchg
aas
add
add
pop
js
fs
sub
sahf
cld
push
mov
js
ret
bound
into
jne
mov
xchg
cmp
ds
pop
add
jecxz
push
loope
lock
rol
sti
iret
cmp
xchg
pop
xchg
sub
lods
insl
xchg
or
dec
aaa
sub
scas
add
pop
ljmp
adc
cwtl
or
fwait
pop
mov
daa
lods
mov
dec
sbb
lcall
lcall
je
jp
adc
mov
sbb
jl
add
mov
jp
jo
test
pop
lret
xor
add
out
ficoms
sub
mov
pop
shlb
sbbl
pop
mov
or
arpl
arpl
add
test
mov
addr16
or
jle
rcl
sbbb
inc
lea
mov
arpl
pop
seto
add
push
jne
pop
mov
xchg
test
xorl
sub
fwait
push
mov
mov
fstl
cli
js
jg
cmc
lods
movsb
sbb
nop
gs
mov
mov
aaa
call
jmp
xchg
push
ds
mov
sti
test
fidivrs
push
test
pop
xor
pop
fists
xchg
xchg
insl
popa
mov
sar
pop
in
arpl
cltd
push
jbe
movsb
xor
mov
push
call
gs
pop
sbb
mov
notl
out
and
lods
jl
push
fsincos
addr16
pushl
sub
test
xlat
stc
mov
orb
fists
mov
cmpsl
adc
mov
or
pop
mov
mov
or
jbe
int3
cltd
fisubrs
fnstenv
leave
push
enter
xchg
lahf
and
mov
push
fistpl
sbb
aad
lods
pop
loop
aam
mov
adc
stos
mov
cmp
cmp
cld
mov
jp
mov
xor
push
ffree
pop
dec
mov
mov
sbb
push
jle
repnz
fldl
sbb
sub
adc
or
ficoms
cmp
popa
sub
pop
mov
out
out
into
ret
lods
add
dec
popa
sbb
shlb
mov
fwait
and
mov
test
int
mov
or
cmpsl
shlb
enter
pop
lret
ds
sub
mull
nop
shl
std
ds
dec
cmp
mov
jbe
mov
fdivrl
fucom
les
inc
dec
mov
mov
inc
or
sub
outsb
cmc
stos
fimuls
cmp
pop
leave
cltd
scas
push
lahf
push
push
imul
xor
push
mov
pop
sahf
cld
rolb
adc
lahf
xor
pushl
cli
add
xor
sub
push
inc
xchg
cmp
imul
adc
dec
and
sub
xchg
mov
pop
fadds
mov
inc
div
pop
mov
adc
jg
lahf
xchg
into
sub
lds
lods
cmpsb
fldenv
add
push
or
sub
mov
adc
stos
cltd
or
icebp
push
pushf
inc
scas
or
pusha
push
xchg
push
inc
outsb
imul
in
add
movsb
mov
cli
popl
repnz
inc
xor
cmpsl
sbbl
fdivrs
in
repz
xor
aam
int
jno
loope
pop
xor
sbb
add
mov
xchg
mov
addb
ja
dec
adc
movsl
test
push
xor
out
push
sbb
pop
jno
push
leave
mov
push
std
inc
ds
cltd
in
sbb
pusha
loop
pusha
cmp
mov
popf
lahf
sbb
and
push
xor
mov
and
loop
je
xchg
cmpsl
cmpsb
mov
rcrb
pop
aas
adcb
pop
push
std
adc
test
sbbb
into
cltd
ret
jns
adc
in
sbb
xchg
push
adc
cmp
inc
sub
adc
mov
orl
inc
push
lea
mov
jmp
push
addr16
and
clc
dec
in
stos
xor
push
inc
lock
add
cwtl
adc
inc
nop
sub
addr16
mov
mov
aad
sub
fildl
inc
sbbl
pop
shlb
cmp
inc
jecxz
repnz
adc
mov
aad
adc
xor
inc
sar
mov
add
in
dec
sub
jns
shll
out
dec
adc
fld
xor
lock
push
les
das
rolb
cmpsl
fwait
mov
test
jo
fwait
mov
gs
xchg
mov
dec
lcall
scas
popa
in
ja
decb
and
mov
popf
sub
xchg
popa
je
pop
outsb
imul
rorb
push
and
mov
sbb
mov
outsb
mov
not
out
scas
btsl
xlat
inc
es
and
pop
dec
roll
jo
adc
mov
adc
lea
cmp
dec
cmp
add
ljmp
pop
jnp
test
sbb
mov
in
int3
lret
js
jne
loop
lock
outsl
mov
jno
xchg
dec
push
mov
and
or
push
mov
scas
adc
cs
add
data16
stos
cmc
jmp
leave
xor
lock
jp
push
push
pop
lahf
xor
lcall
or
jb
inc
adc
xor
lret
out
inc
cld
sub
jae
and
mov
mov
ljmp
lea
repnz
xor
mov
or
pusha
les
lds
add
ljmp
add
dec
pop
xlat
dec
mov
aam
sbb
pop
jnp
mov
sbb
mov
mov
cmp
xor
lret
bound
les
ss
test
jmp
lods
fimull
push
sbb
nop
insl
jge
pop
divb
jecxz
in
icebp
mov
pop
aam
add
and
inc
add
jb
in
faddl
inc
scas
adc
mov
push
pushl
arpl
out
add
cmp
cmp
pop
ret
cmp
mov
std
adc
inc
out
aaa
inc
add
inc
jecxz
sahf
mov
repnz
push
fildl
subl
xchg
mov
lcall
into
mov
iret
push
cwtl
mov
jnp
sbb
rorb
cwtl
loop
bound
xor
dec
rclb
dec
pop
ja
jbe
mov
xchg
adc
add
mov
lahf
and
jns
rcrb
or
jmp
cld
lcall
pop
fs
out
les
mov
xchg
sub
mov
jl
shlb
xlat
movsb
add
cltd
sbb
cwtl
xchg
mov
pop
or
xor
and
jmp
sti
xchg
ss
inc
mov
xchg
dec
data16
inc
int
pop
mov
push
jmp
jg
cmc
mov
dec
in
shll
icebp
mov
xchg
push
xlat
xchg
imul
mov
or
aam
std
and
pusha
adc
popf
dec
je
les
dec
sub
add
push
xor
xorl
push
scas
clc
mov
or
pop
pusha
mov
out
push
mov
jno
bound
or
cmp
inc
aas
push
fnsave
mov
mov
jbe
push
jnp
insb
scas
push
les
fs
sbb
daa
inc
sti
xchg
sub
cmpsl
xchg
das
lret
sub
out
je
inc
xchg
fsubr
jae
jecxz
adc
and
test
jns
pop
gs
cmp
add
jae
jmp
call
fsubs
add
sub
mov
push
pop
cmpsb
sbb
jb
sbb
int
les
push
push
push
insb
mov
lds
in
mov
pop
xchg
push
aaa
mov
stos
sti
add
jnp
movsb
sbb
imul
push
push
test
insl
dec
sarb
ljmp
rclb
mov
lock
leave
sets
into
lret
push
scas
addb
fistpll
lods
push
mov
jg
mov
mov
jp
imul
xchg
cmp
xchg
xchg
mov
sbb
leave
das
test
cwtl
mov
mull
xchg
cmp
mov
icebp
mov
fwait
pusha
fdivrp
lahf
ljmp
cld
push
gs
xlat
dec
cmpsb
adc
dec
shlb
or
testl
push
cs
xor
scas
xor
adc
mov
gs
in
ror
movsl
sub
mov
or
jbe
lods
inc
imul
inc
js
int
fs
mov
xor
jp
push
pop
mov
xchg
addr16
pop
add
xchg
and
fdivp
popf
inc
xchg
cmp
fsubl
icebp
push
dec
mov
sub
push
outsl
pop
and
mov
mov
or
pop
or
fbld
sub
sub
stos
sbb
cwtl
aas
sub
or
es
jecxz
call
sub
adcl
imul
mov
pop
xor
sbb
and
testb
jge
lock
xchg
add
mov
stos
cltd
cmc
inc
mov
pop
and
in
jo
sti
xchg
mov
lods
fbstp
and
push
out
cmp
test
adc
adc
inc
add
dec
sub
adc
popf
testb
loopne
ss
gs
xchg
pop
je
sbb
jp
inc
lcall
mov
and
ljmp
ret
mov
movsl
mov
xchg
cmpsb
repz
int3
dec
xor
jbe
push
bound
dec
cmp
outsl
jne
cmpsb
aas
xchg
fbstp
cld
popa
jl
add
push
push
int3
jmp
icebp
testl
or
insb
fbld
push
popf
mov
test
adc
push
cli
aam
dec
imul
fs
in
out
adc
dec
and
aam
push
js
xchg
push
ljmp
nop
mov
data16
jg
loope
xchg
push
test
fwait
or
jmp
leave
push
dec
cli
sub
in
shlb
fadd
addl
mov
test
add
sub
or
inc
ds
inc
inc
fwait
int
lods
repz
mov
shll
mov
dec
ss
mov
pushf
cmp
adc
xchg
sub
jmp
shlb
lahf
adc
or
mov
add
dec
icebp
add
dec
in
lock
mov
xchg
ds
sti
xchg
mov
dec
xchg
int3
fldt
sub
enter
mov
push
enter
jnp
xchg
flds
and
icebp
inc
mov
or
lds
aam
mov
mov
outsl
and
stc
xchg
leave
bound
cmp
inc
sbb
out
push
roll
mov
movsl
adc
adc
xlat
xchg
into
sub
pop
dec
xchg
in
inc
cmp
pop
rcll
xor
bound
xor
and
xchg
pop
adcb
push
lret
stos
mov
sbb
es
mov
pop
pop
adc
jb
std
jl
fnstcw
aam
push
outsl
or
leave
inc
andb
xchg
repz
push
jb
push
and
lods
adc
leave
jo
cwtl
cmp
xchg
sbb
in
push
ss
rcrl
fs
hlt
pop
arpl
lcall
sub
cltd
iret
pop
inc
jle
mov
xor
add
movsb
adc
loopne
dec
sti
mov
adcb
scas
aas
lcall
in
scas
jmp
in
jg
adc
in
sbb
mov
fucomip
mov
lret
adc
mov
test
add
pop
sub
stos
jge
int
popf
cmp
sbb
arpl
sbb
mov
or
and
icebp
jo
dec
insb
aam
sbb
inc
mov
xor
out
out
imul
cmp
push
aas
mov
pop
mov
mov
jmp
pop
pop
nop
testb
jecxz
jo
sub
notl
and
addl
ss
mov
push
aam
rolb
mov
mov
and
xchg
sarb
lcall
xchg
repz
in
sbbl
mov
sub
and
das
mov
cmp
jecxz
push
pop
scas
add
fyl2x
into
outsl
mov
push
ss
sbb
je
repz
movsl
gs
jle
out
stc
cld
cltd
pop
repnz
xor
ret
xchg
push
inc
mov
loopne
push
lret
mov
int
pop
push
orl
push
and
repnz
jmp
push
or
ror
dec
cmp
inc
mov
std
sbb
lahf
mov
mov
add
fildl
insb
jae
sahf
xor
mov
pushw
jle
lods
stc
lock
sub
ficompl
xchg
ret
mov
pusha
ljmp
out
outsb
sbb
sbb
inc
sbb
subl
xlat
mov
mov
imul
dec
sbb
shlb
add
push
movsb
stos
ja
testb
pop
shrb
sbb
dec
mov
addr16
outsb
mov
insb
arpl
call
rorl
aas
out
or
rcrw
loope
xchg
mov
push
mov
cld
mov
dec
loopne
dec
pop
add
notb
mov
and
adc
add
sub
dec
xor
push
cmp
call
sarl
pop
js
or
adc
pop
fs
inc
imul
pavgb
mov
in
push
cld
imul
aaa
adc
push
sbb
hlt
inc
jmp
into
pop
sub
and
mov
mov
fwait
int
jle
test
xor
lret
shl
shl
sbb
mov
les
xchg
jecxz
stc
xchg
inc
add
pusha
lret
mov
jle
inc
mov
dec
mov
rclb
pusha
sub
inc
or
in
lahf
fadd
add
jne
xor
into
imul
xor
mov
cli
inc
clc
xchg
jmp
xchg
fs
fs
mov
xchg
aaa
push
vcvttpd2dq
movsb
mov
popf
pop
sarb
icebp
data16
push
pop
pop
jl
pop
shl
test
push
push
xchg
cmp
inc
rcl
repz
outsl
mov
jbe
add
ds
repnz
lahf
out
test
sbb
sbb
lds
in
imul
add
push
rcl
cmpsl
jle
pop
inc
stos
mov
out
dec
lock
mov
and
jp
inc
push
adc
push
test
fsubs
lahf
outsl
inc
imul
pop
out
mov
rcl
cmp
gs
lret
popf
sbb
int3
orl
sub
dec
inc
out
imul
popf
cli
dec
mov
out
stos
imul
mov
mov
inc
adc
dec
dec
mov
sbbb
sub
mov
push
mov
and
mov
scas
mov
dec
sbb
mov
xor
adc
push
adc
bound
les
xchg
es
loop
loop
pusha
lret
pop
std
and
and
xor
and
mov
xchg
mov
jb
dec
ja
popa
xchg
lods
rclb
paddd
cmpb
addr16
cld
push
imul
inc
mov
shrl
lods
mov
shll
dec
lret
movsl
test
mov
xor
pop
mov
int
pop
jae
clc
pusha
and
pop
mov
cwtl
outsb
cmp
and
add
repz
mov
and
pop
xor
xor
xchg
adc
lcall
adc
add
shll
lods
cmp
or
or
dec
mov
dec
test
sub
lret
jmp
in
rolb
sub
scas
pop
jge
mov
insb
dec
hlt
fdivrp
aad
dec
mov
and
lds
pop
jp
icebp
dec
movsl
inc
inc
sub
and
imul
lret
mov
enter
ja
dec
push
sbb
pushl
pushl
push
mov
shlb
lock
enter
cld
push
cmp
jle
lret
inc
imul
mov
int3
xchg
subl
or
mul
jmp
lcall
icebp
dec
xchg
pop
sbb
xchg
pop
mov
push
lea
fs
mov
adc
in
add
sub
sub
push
or
and
sub
and
xor
dec
pop
stos
jp
inc
jge
ss
dec
call
push
push
stc
push
cmp
xchg
mov
sbbb
mov
lret
jl
mov
mov
adc
xchg
push
xor
xchg
fisttpl
int
std
pop
jg
pop
lds
lret
adc
sbb
daa
mov
or
xlat
cmp
test
test
std
jo
mov
add
push
rcll
ja
mov
fidivrl
aaa
or
mov
xchg
or
sub
add
test
xchg
scas
jo
aas
test
shlb
iret
xchg
and
jnp
jne
fsubs
loop
repz
mov
ror
mov
lods
arpl
xor
cmp
or
xchg
cli
das
fwait
pop
mov
adc
xor
int3
mov
jne
hlt
dec
and
cld
sub
cmc
test
xor
sar
shll
popa
cld
add
push
in
jmp
sub
in
js
daa
sahf
mov
xchg
push
or
movsl
xor
int3
push
jne
test
fwait
mov
adc
jg
call
test
clc
clc
data16
pop
ds
adc
insb
pop
fistl
jnp
daa
inc
inc
xchg
mov
test
dec
add
xchg
idivl
aas
mov
orb
es
orl
adc
jl
shll
pop
mov
addr16
stos
sub
lds
insb
into
and
dec
sbbl
cmpsb
dec
add
mov
fnstsw
push
ret
jnp
lret
stc
cmp
pop
mov
jno
xor
es
out
fwait
add
int
xchg
lea
xor
loopne
mov
add
pop
sbb
adc
shl
push
call
mov
ds
push
mov
fsubrl
pushf
cmpsl
call
or
and
lds
insb
ret
or
out
nop
push
cmp
inc
push
stos
cmc
and
mov
push
and
popf
ficoml
push
aad
inc
xlat
inc
or
mov
cmp
mov
insl
push
adc
ret
inc
push
jmp
cmp
mov
pop
pop
out
std
mov
and
lahf
sbb
adc
das
cs
or
dec
mov
adc
dec
imul
push
mov
xor
xchg
and
adc
jp
xchg
gs
lea
pop
aaa
lret
mov
pop
aad
mov
pop
xchg
leave
mov
test
dec
mov
pop
mov
cmp
xor
mov
cmpsb
les
pop
repnz
cmp
xchg
cwtl
push
leave
xchg
sub
mov
jbe
mov
push
aas
mov
xchg
icebp
jl
push
inc
arpl
pop
sti
jge
mov
mov
mov
pop
sbb
mov
mov
mov
push
pop
notl
adc
push
inc
orb
test
bound
push
xor
inc
rorb
icebp
dec
test
aad
mov
push
aam
lds
pop
xor
adc
lret
push
sub
cmp
fisubl
dec
mov
lcall
out
pop
and
daa
jle
inc
jne
int
jmp
jge
cmp
out
cwtl
fsubrp
popa
xor
call
dec
pop
lea
cmc
pop
mov
mov
pop
and
inc
push
stos
jl
pop
pop
sub
jle
jo
bound
cmp
adc
arpl
mov
xchg
gs
lahf
dec
add
pusha
lds
dec
add
test
lods
shlb
insl
icebp
out
je
jmp
mov
cmc
xchg
fadds
lahf
jns
jns
sahf
xlat
cmp
outsb
fisttpll
gs
aam
jmp
insl
les
lods
adc
or
popa
jo
push
mov
in
cmp
pop
jmp
cltd
xchg
sbb
inc
incl
jno
cmp
jl
pop
sub
rcrb
dec
sbb
mov
in
xchg
xchg
cmp
mov
sahf
bound
push
sub
jne
pop
mov
pushf
cmpl
mov
jo
pop
rcl
dec
out
fcmovnb
adc
inc
jl
inc
cld
pop
jg
popf
mov
cwtl
mov
pop
or
int
int
sbb
cmp
xchg
cli
ret
push
xchg
push
cmpsb
and
jp
and
and
pop
xchg
push
sub
mov
cwtl
aaa
xchg
adc
sbb
inc
add
or
inc
loop
cmp
sub
subl
arpl
adcb
dec
aaa
push
unpckhps
test
mov
stc
dec
cmc
push
fstp
lcall
call
das
adc
aam
scas
mov
mov
cmpsb
nop
fnstcw
popf
cmp
shrb
jb
hlt
in
and
pop
jp
push
in
add
arpl
xchg
cmp
pop
pop
lock
sbb
scas
fwait
sub
sti
sub
daa
call
je
pop
xor
mov
pop
lods
add
mov
shlb
mov
or
pusha
mov
in
movsl
js
popf
sahf
int3
insb
flds
jns
push
jno
jle
stc
out
mov
sbb
lahf
sarb
mov
int3
inc
call
mov
repz
lret
dec
call
fstps
jno
jnp
leave
mov
or
or
fldl
jecxz
fidivl
lahf
sarb
push
mov
mov
pop
pop
or
mov
test
push
repnz
adc
jo
sbb
in
jle
lods
cmpb
lods
adc
lcall
sti
mov
lahf
xchg
cmp
fstl
jmp
sti
dec
daa
or
out
add
jp
pusha
out
fcmovnb
mov
mov
dec
cli
popa
popa
icebp
pop
roll
adc
movsb
mov
pop
xor
roll
test
sbb
gs
cmp
sbb
lods
inc
or
insl
xor
outsl
or
in
scas
and
mov
out
lret
rolb
call
or
call
push
and
mov
mov
inc
push
fwait
inc
scas
ja
sbb
dec
nop
pop
stos
sub
fisubrl
icebp
imul
movsl
xchg
ret
mov
push
out
add
clc
push
jae
subb
xchg
xlat
jmp
lods
loopne
mov
sbb
cmpb
and
adc
xchg
jno
xchg
leave
xchg
je
cmp
shlb
addl
inc
jge
jae
mov
cmpsl
sub
jb
jecxz
mov
inc
add
sub
movsb
xor
push
xor
mov
insl
repnz
sub
dec
insl
jb
lea
xchg
pop
mov
pushf
cmp
andb
adc
xor
cmp
insl
andb
shrb
mov
cmpsl
sub
inc
or
int3
cwtl
jae
xor
and
pop
fldt
cmp
in
push
adc
lods
shll
push
cmpb
out
mov
jns
imul
inc
out
lds
push
lahf
imul
xchg
jecxz
jae
scas
mov
inc
js
int
out
pop
mov
ss
sahf
nop
mov
out
sub
leave
or
mov
sti
lods
mov
xchg
inc
imul
or
adc
jecxz
cmp
cmc
pop
xchg
adc
cli
adc
fcomps
pop
jmp
outsl
pop
push
repnz
cmpsb
jo
push
scas
xchg
xchg
pop
cmp
or
pop
cmc
pop
es
inc
aam
pop
dec
rol
and
cld
cmp
mov
xor
dec
data16
dec
jne
cmc
lods
jge
icebp
jns
dec
or
clc
sub
sub
popa
pop
pop
inc
xchg
lock
shrl
cmp
jge
cwtl
repnz
dec
daa
shlb
and
std
je
pop
cld
cltd
dec
jnp
jne
mov
xchg
xchg
inc
pop
pop
icebp
andb
push
outsb
popa
dec
icebp
mov
sbb
cld
into
divl
jp
mov
adc
mov
das
jecxz
rcll
adc
icebp
test
mov
insl
mov
and
rclb
hlt
cmpsl
movsl
outsl
test
xchg
loop
inc
faddp
imul
vandps
add
sub
push
pusha
out
addl
dec
mov
xor
jmp
movsb
and
mov
cmp
lock
sub
mov
add
dec
add
push
pop
lods
int
insb
dec
shlb
mov
stos
jmp
hlt
repz
sub
push
mov
aaa
xchg
loopne
cli
aaa
fucomi
call
in
and
mov
jo
push
adcb
lret
or
test
jecxz
xor
decb
cwtl
cmp
test
jp
fidivs
stc
into
insl
jbe
addr16
mov
nop
scas
int
mov
mov
sbb
gs
gs
aas
lea
lcall
insl
mov
push
imul
jge
pop
sub
cmpsl
jecxz
aaa
add
adc
std
dec
xlat
xchg
flds
test
cmp
loope
mov
push
jecxz
and
ljmp
push
push
lret
adc
sarb
rolb
in
push
fwait
or
imul
insb
cmpsb
sbb
jl
dec
out
xorb
sbb
mov
mov
and
xchg
rol
jnp
in
or
mov
mov
mov
lret
push
mov
sbb
rcrb
pop
cs
idivb
fstps
mov
mov
lahf
mov
cli
scas
fstp
rcrb
sarl
xchg
jl
call
leave
xchg
mov
cmpsl
ror
push
xchg
mov
pop
out
mov
pop
imul
jbe
je
xchg
stos
hlt
outsb
xor
lods
mov
pop
mov
dec
mov
mov
inc
in
and
dec
mov
sub
nop
mov
test
adc
jmp
pop
jns
aam
inc
shl
pop
mov
fwait
mov
shll
into
mov
jl
jo
mov
test
cmp
jo
pop
pop
dec
mov
lss
lea
jnp
sub
cs
mov
repnz
cmp
aad
ja
or
inc
fst
jg
dec
and
aad
pop
loopne
xchg
ret
and
pusha
test
dec
test
pop
mov
push
insl
popf
mov
pusha
mov
hlt
movsb
pop
sbb
fcomps
sub
and
cmp
ljmp
outsb
daa
inc
lcall
mov
outsb
add
insb
fwait
adc
inc
adc
sahf
mov
jnp
pop
dec
push
pop
and
mov
sbb
fistl
lods
mov
addr16
add
jmp
sbb
divb
and
or
xchg
notl
mov
and
push
jae
pop
mov
outsl
sbb
lcall
popa
add
mov
sbb
repnz
jo
add
xor
push
pop
cvtdq2ps
mov
ds
imul
movsb
cmp
sarl
pop
add
hlt
or
jno
xor
fs
cli
ja
bound
sub
sti
leave
push
pop
bound
xor
andl
adc
roll
sbb
imul
aaa
inc
clc
jns
scas
xchg
pop
xchg
push
outsl
inc
loop
call
roll
jb
imul
push
int3
ljmp
fsubr
mov
adc
or
mull
mov
inc
push
addr16
cmp
jne
dec
shll
fbstp
call
lret
xchg
jo
mov
lret
movsl
cmp
sub
insl
mov
mov
arpl
xchg
push
outsl
add
pop
push
out
out
xor
push
scas
lods
mov
inc
xchg
sahf
cmp
leave
fmuls
aaa
arpl
sbb
mov
pop
dec
roll
push
mov
add
and
cli
xor
ss
outsb
fnstenv
das
or
sbb
dec
call
adc
push
xchg
shrb
pop
sub
lret
mov
sbb
push
pop
push
pop
ret
or
xchg
cmp
push
jns
pop
mov
mov
jle
fstp
inc
mov
out
imul
jle
repz
jl
xor
adcl
mov
cmpsl
mov
fs
and
mov
int
pop
loope
lock
or
add
mov
push
cmp
sbb
xor
mov
dec
inc
jle
adc
mov
jae
dec
jno
fstp
icebp
hlt
sub
mov
lret
popf
and
mov
arpl
aam
xchg
push
pop
lret
ret
mov
add
inc
fimull
cmpsl
andb
or
leave
popf
mov
push
adc
arpl
and
add
rolb
and
mul
popa
inc
mov
pop
mov
imul
and
das
sub
inc
pop
pop
sbb
shlb
inc
pop
popa
out
cmpsb
test
fisubs
add
fwait
js
movsl
lahf
jno
sahf
dec
loop
shll
mov
mov
xbegin
popa
fs
loope
or
mov
sub
add
shl
mov
rcr
cmp
addr16
xchg
dec
enter
hlt
pop
sbbb
iret
cld
movsl
mov
stc
mov
lods
bound
shl
and
rclb
pop
and
mov
ja
cmc
cmp
out
shufps
insb
sub
push
lea
sar
dec
push
out
cmp
bound
mov
rcll
stos
fwait
mov
call
add
fs
mov
lcall
test
inc
jo
xorb
and
int
rorb
xchg
sti
push
sbb
dec
loop
inc
std
in
bound
test
dec
fisubrl
cmpsl
fwait
cmpsl
mov
mov
and
jns
fiaddl
or
and
push
mov
out
mov
jp
mov
ljmp
fs
xor
jecxz
xchg
leave
cmp
mov
inc
aad
outsb
jbe
xchg
xor
mov
lods
out
lahf
and
mov
or
dec
or
lock
sub
inc
add
aad
inc
pushf
mov
push
pop
add
inc
mov
jp
or
mov
jecxz
dec
stc
ss
test
dec
les
sbb
into
mov
push
mov
mov
dec
sbb
xlat
int
adc
call
sarl
fdivs
hlt
add
mov
comiss
arpl
lahf
test
xchg
push
sbb
test
mov
dec
hlt
ss
cmp
insb
repz
push
enter
sub
nop
bound
icebp
ja
fcompl
lods
adc
cmp
xchg
scas
xchg
int
mov
sbb
push
clc
jbe
pop
int
mov
jne
sarl
push
aaa
rol
cmp
mov
jno
sbb
fsubrs
popa
push
lods
inc
mov
inc
fisttpll
clc
xor
int
divb
gs
loop
fwait
cmp
pop
mov
ds
adc
jae
enter
jnp
movsl
adc
mov
xchg
push
pop
lods
mov
and
or
add
pushf
stos
shll
dec
leave
lret
imul
enter
jg
sbb
je
jnp
or
pop
mov
inc
or
xchg
jno
das
mov
aas
rol
jnp
mov
push
pushf
push
in
sub
pop
mov
repz
data16
cmp
sub
imul
bound
adc
cmp
pop
adc
imul
pop
xchg
bound
imul
pop
add
roll
dec
sub
mov
loop
ljmp
es
xchg
pop
sbb
loopne
lahf
mov
mov
pop
lret
mov
enter
xchg
sbb
sbb
sub
dec
xor
inc
dec
push
cmp
sbb
push
mov
cmp
sbb
mov
repz
out
dec
xchg
xlat
test
daa
mov
call
push
sub
mov
sbb
or
jl
jae
shlb
dec
mov
sbb
mov
js
mov
pusha
jecxz
ret
jg
xchg
inc
pop
jae
arpl
mov
jle,pt
mov
or
mov
mov
outsl
xchg
jns
adc
lods
jmp
push
fidivs
xor
or
popa
lock
out
popf
push
in
les
jo
mov
sbb
and
inc
adc
fs
mov
pop
cmp
int3
mov
popf
clc
ret
dec
adc
sarl
aas
outsl
into
repnz
mov
aad
iret
push
pop
pop
cwtl
fisubs
and
adc
scas
mov
aas
fstps
jle
xchg
pop
daa
xor
test
subl
nop
cmpsl
daa
enter
call
pop
jno
mov
jb
inc
outsb
cmc
mov
and
bound
lods
mov
add
mov
insb
lock
adc
test
mov
iret
mov
mov
xor
and
aam
stos
or
pop
mov
daa
jb
sub
jg
mov
jae
lods
adc
out
pop
fs
mov
and
jmp
nop
rolb
xchg
lds
test
dec
out
xchg
out
and
aam
mov
push
fisubrl
aaa
fs
mov
sub
push
pop
stos
lds
xor
mov
add
and
add
adc
pop
xor
xor
je
mov
subb
adc
mov
sahf
mov
sub
mov
fwait
pop
push
lret
xor
sbb
hlt
loopne
sahf
push
bound
sti
jle
and
imul
test
xor
pop
mov
aam
xchg
add
adc
add
aad
gs
mov
outsl
aaa
nop
mov
rcrb
mov
and
jae
stos
inc
out
fwait
scas
and
sub
ljmp
inc
ret
push
adc
popa
cmpsb
mov
aaa
dec
ret
stos
mov
inc
sbb
dec
and
movsb
jne
and
pop
popa
pop
cli
jbe
pop
rol
mov
je
pop
mov
push
or
add
inc
shl
push
ljmp
xor
inc
mov
int
in
xchg
adc
add
sbb
xor
popf
add
or
stos
mov
jb
test
jecxz
xchg
dec
fnstcw
lret
inc
xor
adc
inc
mov
cmp
int
das
jg
iret
mov
fucomi
dec
js
and
jo
add
hlt
icebp
test
mov
jmp
shl
push
push
stc
mov
out
in
cwtl
xor
jo
dec
sahf
mov
add
stc
push
cmp
pop
in
aam
into
add
movsb
shrb
push
mov
or
dec
sarl
sub
add
lods
les
outsb
aaa
mov
pop
insb
mov
test
fldcw
loop
inc
mov
nop
test
cltd
cld
jecxz
dec
and
mov
adc
mov
les
imul
cli
cld
add
adc
test
sti
fistpl
in
sub
inc
pop
sbbb
push
dec
adc
add
cmp
lea
lcall
pop
jp
test
into
dec
popf
out
sbb
mov
xor
rcll
sub
dec
dec
or
push
dec
fists
loop
add
or
xchg
push
adcl
push
sbb
or
mul
std
adc
and
ficoms
mov
xchg
data16
fnstenv
int
aad
test
pop
adc
sbbl
push
and
push
cmp
out
xchg
outsl
jno
xor
daa
jmp
lods
fwait
add
push
mov
add
call
ret
push
in
inc
dec
inc
lock
jo
aaa
stos
mov
pop
pop
and
insl
mov
sub
pop
pushf
and
dec
push
mov
jmp
les
inc
out
stos
bound
pop
fmuls
mov
sbb
pusha
out
jae
rcrb
test
in
push
xchg
sub
cltd
adc
orb
jae
fmulp
jo
dec
ljmp
dec
add
mov
fmull
inc
dec
loop
fcomps
mov
mov
xchg
cmp
gs
loop
outsl
adc
sub
mov
dec
pop
loopne
sbb
in
fwait
and
push
ljmp
mov
in
outsl
push
mov
cmc
mov
mov
icebp
adc
or
scas
inc
pop
fsubr
test
mov
fldcw
mov
dec
cmp
clc
js
mov
leave
dec
push
inc
inc
loopne
sti
mov
mov
sub
mov
in
push
sub
sbb
stos
xchg
cld
out
sahf
es
ja
push
mov
les
pop
push
dec
adc
lret
dec
mov
fcmovb
out
mov
aad
push
pop
mov
jge
xor
out
or
cmp
adc
jecxz
imul
cmc
ss
fimuls
push
or
jo
stos
pop
mov
pop
cmp
shrl
sbbl
sti
jmp
adc
sbb
fildl
cmp
or
push
dec
xor
mov
sbb
or
flds
push
rorl
scas
inc
push
pop
test
stos
je
or
push
repz
xor
xor
imull
adc
jecxz
lea
gs
xchg
cld
jns
push
pop
negb
pop
dec
jp
lods
dec
mov
jns
xchg
sbb
push
jbe,pn
inc
outsl
das
in
in
lret
movsb
sbb
jge
scas
dec
hlt
and
cs
clc
repnz
xchg
addb
adc
pop
xchg
pop
and
add
push
pop
jae
lea
mov
adc
les
out
outsl
push
pop
cmp
lods
lock
add
bound
adc
dec
mov
scas
dec
ljmp
mov
mov
sub
stos
adc
xchg
cmpsb
enter
cmpsl
cs
pop
or
shlb
addb
cmpsl
dec
les
movb
or
push
mov
cmp
push
scas
je
xchg
or
adc
jl
mov
xchg
inc
cmp
lock
jge
adc
mov
mov
push
jnp
ja
jne
pop
popa
stos
jne
mov
out
adc
add
imul
dec
ja
mov
lea
jg
cmpsl
aad
or
lods
mov
jecxz
gs
lahf
push
pop
mov
cmpsb
sbb
fcomps
adc
and
add
jmp
inc
cmp
add
push
pop
clc
or
mov
inc
in
push
dec
test
pop
shr
and
xor
mov
sbb
sub
lods
mov
jo
add
xorb
loope
inc
cmpsb
or
adc
imulb
or
enter
dec
mov
clc
fistl
leave
testb
push
xchg
sub
add
jns
push
adc
jmp
inc
movsb
jnp
movl
jl
out
mov
popa
and
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
push
call
push
push
push
call
push
push
push
push
push
call
test
je
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
call
push
push
call
push
push
push
call
lea
push
call
call
cmpw
pop
push
je
push
push
call
push
call
add
call
jmp
push
push
call
inc
pop
sub
xchg
and
push
adc
xchg
vminss
call
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
inc
out
mov
scas
loopne
sub
mov
fldcw
cltd
mov
adc
enter
test
out
mov
xchg
fnsave
loope
inc
cmp
movb
vminss
pop
push
adc
cwtl
and
mov
push
mov
out
int
push
sub
cmp
dec
incb
lret
dec
aad
dec
les
aas
sbb
cmp
or
pop
or
push
cwtl
cmp
mov
push
mov
js
sub
movsl
shl
aad
das
loopne
push
lret
jle
push
dec
stos
jne
sbb
fidivrs
outsb
push
adc
cwtl
vminss
lea
ljmp
mov
adc
lods
xchg
inc
jecxz
or
ljmp
pop
inc
call
lods
xchg
vminss
lea
adc
es
push
adc
lods
xchg
and
push
adc
sub
and
push
adc
lods
adc
ss
push
adc
lods
xchg
jb
es
push
adc
lods
xchg
vminss
jecxz
adc
push
es
mov
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
cmp
leave
ljmp
jecxz
push
add
lods
xchg
pop
lds
sub
inc
push
fdivr
frstor
es
push
repnz
fsubp
adc
mov
cmpsl
xchg
bound
in
lea
adc
lods
xchg
vminss
lods
push
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
vminss
lea
adc
lods
xchg
lods
loop
sub
ljmp
sub
pop
mov
movsb
mov
xchg
mov
adc
xchg
jmp
and
aas
and
add
scas
and
jno
shll
pop
in
jle
push
mov
imul
adc
mov
test
sbb
cmp
repnz
pop
popf
lret
sahf
sub
dec
xchg
xlat
dec
mov
cmpsb
divl
in
popf
and
movb
inc
inc
sub
push
std
inc
add
cwtl
push
or
inc
or
lea
xlat
dec
sub
das
pop
and
and
aas
int3
loop
pop
mov
mov
sbb
lret
and
outsb
aas
subb
fstpl
mov
data16
inc
out
push
fmulp
cwtl
mov
dec
mov
mov
je
shl
cmpsb
jae
test
cwtl
push
mov
mov
mov
mov
mov
in
sbb
in
jnp
dec
push
mov
ja
lods
mov
std
std
aas
jl
jl
das
mov
lock
mov
sub
push
or
fisubl
test
sub
push
mov
sub
dec
push
inc
popa
lahf
mov
sarl
jbe
inc
xor
adc
mov
push
cmpsl
and
ja
loopne
sub
popa
dec
mov
scas
adc
fstpt
das
mov
mov
je
icebp
sub
add
fsubs
jne
out
jmp
js
mov
xlat
hlt
jg
cwtl
sub
mov
or
repnz
sub
in
div
repz
pop
pop
sbb
iret
xor
mov
psraw
add
cmp
add
iret
push
cmp
lcall
push
pusha
pop
xor
sub
sbb
adc
xchg
aaa
clc
cmp
add
dec
pop
xchg
popa
cmp
fisttpl
push
jmp
mov
pop
insl
xchg
stos
inc
jp
xchg
pop
pop
leave
push
mov
or
and
jl
gs
in
mov
jp
add
addl
xchg
rcrb
ja
xchg
addl
or
es
in
jno
jae
sahf
dec
xorl
aaa
inc
aaa
mov
not
adcl
lock
into
jae
jbe
inc
icebp
imul
mov
pop
inc
mov
bound
addr16
cmpsb
inc
cmp
test
fcmove
dec
add
loope
fiadds
xchg
into
test
jne
pop
pop
pop
into
mov
andl
sarl
jg
scas
jecxz
divb
inc
test
addb
inc
movb
cmp
inc
mov
and
adc
cwtl
jno
adc
fs
mov
mov
mov
test
pop
add
sarl
std
movsl
push
js
push
pop
hlt
cmp
mov
xor
out
cld
sbb
xor
dec
push
fdivl
stc
and
in
stos
xor
decl
sbb
movsb
xor
mov
mov
push
push
lds
es
mov
jne
mov
shlb
mov
dec
cmp
mov
inc
cld
fbld
out
shlb
stc
insl
inc
jne
xchg
mov
add
mov
and
xor
push
sub
imul
popf
dec
cmpsl
jnp
and
xor
test
jnp
sbb
loopew
push
sar
fstl
test
arpl
mov
mov
sbb
nop
out
add
sub
and
test
inc
fbstp
jge
les
pop
xchg
xchg
test
lcall
int3
test
pop
pop
or
mov
jge
out
testl
sub
and
add
mov
decb
int
push
xlat
xchg
enter
dec
push
gs
lds
cwtl
or
mov
data16
add
outsl
nop
fcomp
or
insb
decl
fisubrl
push
jae
inc
mov
test
test
cmp
call
xchg
fwait
jb
addl
xchg
out
mov
push
jl
pop
xchg
jno
mov
adcl
hlt
dec
mov
sbb
xchg
dec
push
mov
mov
mov
sub
mov
cmp
les
xchg
add
and
or
cmp
jg
sub
cmpsl
ret
dec
add
shl
sbb
and
shrb
in
xor
xchg
mov
loope
das
testb
jp
icebp
daa
push
shl
dec
rclb
adc
or
mov
push
push
or
pop
in
and
xchg
imul
jmp
sub
mov
or
cld
xorl
cmp
dec
xor
sbb
jle
out
jecxz
icebp
cmp
add
adc
cmp
lret
or
imul
arpl
sahf
pop
xchg
les
or
rclb
call
push
fdiv
jne
shl
adc
xchg
imul
dec
push
fwait
mov
stc
add
and
inc
fisubrl
enter
es
mov
dec
enter
aas
fucomip
push
or
xchg
lock
pop
xchg
xchg
cmp
int
das
pop
mov
mov
sub
ret
stc
mov
and
or
lods
and
push
pop
cmp
mov
xchg
out
or
add
loop
mov
and
mov
les
push
cmp
fsubr
idiv
adc
les
cli
mov
xchg
fprem
cs
or
push
jnp
and
fwait
outsb
sbb
setne
movsb
stc
ljmp
testl
rclb
jo
push
ficoml
lahf
dec
lods
xchg
lcall
lahf
dec
cltd
dec
imul
xor
add
sbb
mov
push
xor
fsubs
sahf
mov
negl
daa
cmp
pop
lods
loope
sti
push
imul
adc
sub
ja
xchg
or
popa
mov
shrb
cmpsb
movsl
call
inc
push
push
push
push
mov
gs
pop
insb
and
jecxz
cmp
call
adc
cmp
jmp
mov
js
pop
fimull
xchg
dec
ljmp
fdivl
pop
jns
es
pop
mov
scas
inc
and
cld
mov
dec
or
jl
cld
mov
mov
and
popf
or
int
xor
in
pop
fsts
in
out
add
pusha
xchg
xor
rorl
pop
add
mov
sub
cmpsb
cmp
or
push
jo
das
push
sahf
mov
adc
dec
and
jmp
lea
mov
in
mov
cltd
xor
mov
sti
mov
ret
mov
and
jge
or
mov
inc
ds
jb
imul
mov
mov
ficomps
test
insb
pop
fidivs
dec
jecxz
xlat
aam
mov
xchg
imul
mov
mov
cmpsl
stos
pop
jnp
scas
sbb
push
adc
xor
sarl
int3
cli
dec
stos
das
xchg
and
loope
stos
pop
add
dec
fists
popa
adc
sbb
lcall
rorl
daa
test
out
and
jae
lea
das
mov
aas
adc
adc
pop
dec
mov
push
mov
outsb
adc
dec
scas
pushf
jns
sbbl
andb
in
data16
mov
inc
popa
scas
adc
js
or
leave
mov
xor
mov
ljmp
cmp
fadds
jno
pop
pop
adc
mov
cli
sub
dec
clc
lods
mov
lcall
add
mov
add
xor
mov
lds
imul
add
test
push
pop
fwait
inc
popf
sub
dec
insb
pop
sbb
sub
add
push
pop
std
icebp
mov
push
orb
push
je
dec
xchg
repz
jbe
movsl
repnz
xorb
pop
popl
push
and
and
incl
sub
out
test
xor
test
push
pop
out
cmp
ja
shrb
clc
push
push
ja
dec
ljmp
fdivrl
sbb
jb
pop
pop
out
sti
push
scas
iret
in
cmc
cmpsl
adc
xor
pop
nop
popf
loope
jl
pop
ds
shl
outsb
mov
pop
push
xchg
ljmp
rcrb
xchg
mov
inc
pop
pop
sub
xchg
sbb
add
js
mov
popf
or
in
jnp
int
or
mov
push
and
cli
mov
pop
push
bound
inc
push
dec
push
imul
inc
test
out
mov
push
adc
mov
or
push
fbstp
cmp
popa
push
mov
sbb
mov
inc
outsb
or
sbb
test
nop
lsl
jge
and
pushf
adc
mov
xchg
xchg
pop
mov
xlat
iret
lods
adc
fdivs
jle
mov
les
mov
jle
add
loopne
cwtl
pop
faddl
out
xchg
stos
jle
cld
movb
adc
dec
push
jecxz
sub
imul
mov
bound
pop
cltd
dec
adc
out
xchg
push
xchg
xor
repnz
mov
push
movsl
cmpsl
inc
jns
cmpsb
and
test
in
outsl
in
xor
add
pop
xchg
cmpsl
loop
cld
sbb
test
jg
gs
jmp
pusha
jne
adc
push
push
jnp
xchg
testl
cmp
cli
pusha
inc
adc
aas
pop
adc
pop
jmp
sti
ja
mov
call
insl
test
leave
dec
push
mov
lea
adc
pop
push
push
sbb
or
sub
gs
jp
repz
push
and
enter
push
and
lds
inc
les
imul
or
pusha
mov
push
pop
stos
je
fisubrl
adc
jne
dec
jp
call
out
ja
jmp
fisubrs
and
imul
add
repnz
adc
adc
rcll
lcall
lods
out
ret
adc
pop
fdivs
aam
je
packuswb
or
js
xor
push
pop
into
adc
mov
sbb
iret
repz
stos
fwait
insl
jbe
inc
jo
inc
xchg
push
sub
fisttpl
xchg
mov
js
lret
scas
jecxz
jle
mov
jnp
lods
ds
pushf
pop
push
pop
fstl
mov
std
push
pop
cmp
lret
out
cmp
jbe
xchg
and
mov
out
fiaddl
loope
jae
je
dec
ret
lds
mov
lahf
sbbl
cmp
std
jg
pushf
mov
mov
out
xchg
mov
add
add
dec
adc
out
mov
dec
ffreep
cld
cmc
pop
xor
pop
xchg
movsl
cmp
sbb
aaa
push
jne
jae
mov
repz
gs
sub
mov
call
pop
adc
mov
dec
repz
out
sub
push
pop
std
jnp
or
fdivrl
sbb
lret
stos
sub
push
or
push
push
mov
cmp
icebp
out
movsl
sub
stos
dec
mov
xchg
cmc
mov
dec
filds
cs
mov
jg
enter
aas
sarl
orb
aas
inc
int3
aaa
cmp
test
add
imul
add
dec
push
es
xchg
leave
mov
jae
push
or
or
dec
movsl
mov
iret
dec
xchg
xchg
icebp
scas
xor
movsb
jne
out
fiadds
shrl
push
sbb
push
js
andl
sub
stos
mov
scas
inc
jmp
pushf
scas
inc
cs
push
sub
sub
push
xchg
dec
fs
ret
xor
cmp
and
sbb
imul
lret
lret
sti
cmp
nop
fstps
and
xchg
xchg
das
and
and
mov
stos
adc
aam
and
lcall
adc
sti
mov
add
daa
daa
adc
jp
pop
sbb
mov
out
cmp
mov
mov
pushf
ss
add
xchg
mov
pushf
mov
push
push
xor
bound
mov
iret
sbb
imul
add
add
or
adc
and
jp
mov
xchg
nop
pop
xor
push
push
mov
stos
stos
and
mov
popf
fcmovne
outsb
pop
and
repnz
jge
dec
cli
in
stc
dec
test
mov
subl
jge
or
inc
into
out
addr16
or
in
sbb
movsl
mov
imul
fistl
sbbl
shrb
sbb
and
mov
xchg
mov
in
xchg
cmp
ss
pop
mov
dec
xchg
jecxz
xorl
dec
clc
stc
xor
cmc
mul
pushf
pop
movsl
push
repz
shrl
push
std
std
imul
inc
ja
jmp
dec
loopw
pushf
mov
mov
shll
test
xchg
lock
cmpsl
fisubs
pop
outsl
test
roll
inc
push
cmc
or
aam
lahf
jns
addl
pusha
lds
sbb
ret
retw
dec
push
rcll
out
mov
sbbb
out
in
cld
mov
lds
inc
outsb
push
pop
and
movsl
adc
jae
lcall
shlb
pop
push
push
cmp
imul
andb
inc
rcrl
push
gs
adc
imul
roll
push
lret
inc
xor
jbe
xchg
jo
imul
nop
lahf
out
lret
pusha
data16
lock
inc
imul
lock
mov
out
jge
in
inc
pop
call
inc
or
fwait
test
call
push
push
push
call
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
bound
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
bound
nop
bound
mov
add
bound
jo
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
bound
aam
inc
add
bound
hlt
bound
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
arpl
nop
arpl
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
fs
add
fs
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
test
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
test
nop
test
mov
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
test
aam
inc
add
test
hlt
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
test
nop
test
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
xchg
addb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
