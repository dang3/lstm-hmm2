push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
lret
into
jnp
or
lods
pop
mov
loop
sub
ret
movsl
pusha
sarb
loop
jne
inc
ret
sbb
and
sub
xchg
jne
xor
sti
pusha
or
ror
dec
lods
mov
popf
cmp
sbb
jecxz
xor
cmpsb
fs
sub
movsb
sbb
loope
pop
and
test
stos
lahf
ljmp
outsl
jg
into
mov
pop
or
mov
dec
or
fs
mov
in
xchg
out
enter
and
cmp
mov
into
adc
cmp
scas
pop
push
movsb
stos
inc
adc
in
cwtl
sbb
mov
lods
fwait
movsb
addl
cmp
and
cmpsb
jnp
adcb
lahf
repz
lcall
pop
ljmp
jge
cwtl
cli
std
dec
jg
out
dec
add
mov
inc
cmp
push
int
jl
add
jmp
lret
mov
cmpsl
pop
mov
xor
loopne
sbb
addr16
arpl
jns
push
jmp
imul
sbb
test
movl
xor
adc
pop
jbe
daa
dec
jge
cmp
dec
push
ret
and
jae
push
push
xchg
ja
lods
fildll
lods
xor
imul
mul
sbb
or
add
pop
fadd
out
jg
bound
mov
add
and
sub
push
mov
sub
jecxz
mov
stos
jae
inc
jge
std
inc
push
and
ret
test
push
loopne
imulb
dec
movb
xor
lret
add
loope
mov
ret
fwait
jns
inc
shrb
in
psrlw
xchg
mov
sub
stos
jo
adc
xorb
fdivrl
jne
out
test
xchg
pop
fists
xor
fstl
pop
inc
insb
jl
lds
or
push
inc
sub
dec
mov
stos
sub
cmp
nop
cs
ficoms
fs
mov
pusha
scas
icebp
sbbl
mov
xchg
pushf
mov
push
push
add
loopne
inc
out
cmp
fadds
inc
dec
xor
movsb
add
frndint
test
cmpsl
add
cmp
lods
lahf
adc
aas
inc
add
out
push
xor
and
mov
mov
insl
mov
jecxz
call
int3
add
adcb
imul
mov
out
dec
add
or
cmp
sub
jmp
mov
or
in
hlt
or
stos
fadds
stos
aam
jno
aas
test
sub
sbb
jbe
add
mov
inc
ret
xchg
dec
sub
jbe
stos
stos
mov
insb
aad
adc
xchg
mov
dec
jno
jp
adc
in
push
adc
sbb
icebp
pop
out
iret
mov
movlps
mov
mov
cmc
xchg
test
push
rcll
ljmp
fldenv
enter
mov
xor
jecxz
xchg
dec
inc
cmp
pop
push
mov
insl
bound
lcall
jl
cmp
cmpsl
push
jae
cmp
insb
bswap
mov
sbb
sti
or
or
or
mov
arpl
mov
adc
push
nop
dec
leave
es
cmovno
and
mov
jp
mov
sbb
shll
jb
shll
sar
scas
mov
xlat
add
into
fs
ss
dec
xlat
pop
xor
out
push
jae
lock
dec
sub
sbbb
mov
add
js
mov
je
jb
popa
pop
gs
xlat
test
mov
lahf
lret
jae
sub
and
mov
nop
pop
and
das
sub
xchg
nop
andb
je
scas
or
mov
outsb
inc
lret
aam
scas
scas
inc
mov
sbb
adc
cmp
aad
jge
push
mov
aam
ret
push
fisttpl
imul
out
lods
mov
push
jecxz
sub
loope
xchg
jmp
dec
test
xchg
outsb
out
lret
xor
loopne
add
adc
lock
lret
mov
into
mov
mov
and
test
fistps
in
adc
test
stc
stc
lret
mov
sub
fwait
int3
rclb
mov
js
nop
mov
pop
and
dec
xchg
mov
in
mov
je
mov
ljmp
sbb
loop
mov
addr16
and
xor
jae
xchg
outsb
lods
xchg
mov
popf
sbb
bound
sbb
pop
fisubl
fimuls
sahf
test
xchg
mov
mov
mov
add
mov
and
pcmpgtb
and
adc
or
sbb
lods
ljmp
jns
into
push
adc
js
xchg
mov
lcall
sub
xchg
push
lcall
add
cmpsl
mov
inc
and
jecxz
outsl
mov
push
xor
leave
lds
mov
sub
xor
loopne
xlat
daa
ja
das
pop
pop
ficoms
mov
mov
adc
test
scas
addr16
shlb
adcl
fsts
out
add
push
stos
sbb
pop
sub
inc
pushf
fstp
pop
jp
pop
sbb
cvtps2pi
sar
das
push
jg
mov
sarl
push
push
push
mov
xchg
icebp
cs
lods
and
invd
jmp
push
cld
test
cmp
xchg
xor
mov
xchg
dec
cmpsl
out
std
or
test
scas
mov
jmp
arpl
cmp
jmp
mov
in
xchg
pop
push
lcall
scas
mov
jne
xlat
push
repz
jno
inc
pushf
push
ja
sbb
cmp
fistl
cmpb
dec
stc
dec
adc
jae
fsts
lock
pop
inc
jge
and
mov
test
adc
outsb
idivl
fistpl
ss
inc
fistps
cmc
jb
iret
mov
lods
data16
sbb
add
dec
bnd
adc
stos
jne
out
dec
cmpsb
mov
sub
pop
ljmp
mov
inc
push
test
lahf
push
xchg
mov
mov
out
cli
aas
nop
popf
jne
loopne
sub
push
jl
in
add
adc
mov
jecxz
sub
iret
and
gs
dec
iret
sub
sbb
push
adc
adc
cmp
xchg
vpavgw
ud0
fsubp
xchg
cmp
adc
inc
mov
jae
cmp
adc
pop
fnsave
jmp
dec
xchg
push
jecxz
ffreep
jne
adc
repz
dec
sbb
inc
rolb
sbb
mov
out
outsl
push
adc
in
fisubs
cmp
mov
add
aaa
sbb
enter
std
adc
in
sbb
xchg
es
sbb
lea
cmovno
incl
inc
aaa
mov
into
jb
or
mov
andl
test
in
gs
ret
xchg
incl
test
xor
adc
push
test
add
sbb
push
sub
fmuls
mov
mov
call
rcr
outsl
popf
mov
enter
lahf
mov
mov
rolb
cmp
rcll
loopne
push
in
pop
addr16
movsl
pop
cmp
xchg
and
mov
sarl
insb
push
mov
sub
or
shlb
pusha
loopne
hlt
add
mov
adc
lods
movl
pop
or
xchg
jns
fcomps
jecxz
mov
jbe
jg
add
stos
pop
jbe
out
xchg
cltd
cmp
adc
or
imul
loop
and
xor
jns
fmulp
out
xor
adc
mov
movsb
mov
adc
and
add
clc
inc
and
ret
jg
lcall
jno
ja
neg
in
and
popa
jmp
sbbl
mov
les
es
cmp
pop
negb
dec
mov
outsb
mov
inc
dec
insb
insl
dec
xchg
outsb
inc
inc
mov
push
or
pop
pop
aam
mov
sub
insb
imull
push
cmp
inc
fwait
and
mov
in
mov
cli
lock
xchg
sub
test
jno
aad
and
push
xchg
push
add
in
cmp
add
or
or
mov
jb
mov
insl
adc
push
pop
rorb
add
pop
movsb
test
push
sub
pop
xor
out
cltd
add
push
loopne
xor
dec
xorl
sbb
es
js
xchg
mov
stc
or
jmp
adc
mov
in
cmp
fmuls
cmp
ss
repz
fmul
jl
in
push
ret
add
pop
mulb
leave
mov
js
repz
dec
pusha
gs
fmulp
xor
sub
push
lds
cli
and
popf
inc
test
repz
cwtl
push
scas
rcrl
jns
popa
jmpw
jecxz
movsb
test
mov
in
and
xchg
ljmp
sub
into
sub
push
bound
push
out
dec
repz
xchg
xchg
xchg
jo
push
mov
sbb
les
idiv
add
popa
cld
xor
or
pop
lods
outsb
fldl
sbb
popa
bound
cli
and
movntps
sub
cmp
hlt
loop
jp
out
repnz
mov
mov
cmp
sub
arpl
jno
xorl
push
pop
ljmp
cmp
clc
adcl
lahf
test
or
jae
xor
pop
jae
ds
cld
loop
pop
cs
or
fistpl
aad
adc
mov
shlb
mov
mov
clc
dec
fidivl
into
mov
ficomps
xor
test
sub
mov
adc
push
push
clc
sub
adcl
sub
or
fisubl
call
dec
test
pop
loope
jl
sbb
into
push
add
lea
add
ja
add
addr16
sti
jecxz
in
int
ja
cs
bound
mov
stc
adc
cmp
loopne
cmp
loope
stos
mov
jo
sbb
fstps
cltd
push
and
repz
inc
addr16
enter
mov
xor
sbb
nop
popf
into
push
xchg
pushl
sub
jg
jb
mov
push
cld
cmc
movsb
shr
out
shrl
lods
dec
jl
imul
outsb
mov
insl
add
inc
cltd
pop
arpl
push
cmpsb
cmp
xchg
addr16
sti
mov
lcall
pop
xlat
insl
add
cmc
ss
ds
shlb
mov
jo
or
xchg
ss
lods
jo
out
cmp
dec
lds
movsb
xor
mov
imul
pop
pop
movsb
sub
inc
add
xlat
in
outsb
mov
daa
inc
aad
mov
pop
fildll
mov
data16
inc
test
mov
out
ds
and
jo
mov
mov
out
xor
cli
adc
les
cli
int3
push
add
jns
and
inc
push
mov
push
aaa
lcall
out
orb
pop
cmc
sub
test
sti
imul
jo
mov
bound
pop
call
aam
mov
push
inc
mov
das
and
pop
movsb
cmpsb
out
pop
icebp
push
and
cmpsl
mov
push
jnp
sbb
jb
pop
add
inc
popa
pop
cld
push
cmp
out
add
ds
sahf
xor
test
out
jecxz
xchg
rcrl
mov
fnsave
test
adc
jge
add
out
cmp
out
out
rol
jbe
push
sub
jae
and
cmp
insl
or
je
shrl
rclb
mov
loope
mov
add
or
mov
add
cmp
sbb
imul
fs
lods
dec
cmpsb
leave
add
enter
popa
int3
ret
mov
je
test
es
mov
lahf
mov
xlat
mov
pop
push
incl
push
loope
jnp
jecxz
fiadds
inc
and
pop
pop
pop
sbb
cmp
dec
inc
daa
arpl
clc
adc
add
or
loopne
adc
sub
flds
sbb
inc
shrl
adc
mov
mov
out
pop
punpcklbw
adc
mov
mov
fistl
imul
sub
dec
leave
inc
clc
icebp
cmp
pop
popa
pop
jge
push
push
movsb
call
push
xlat
jl
outsl
inc
cltd
mov
dec
std
rcrl
mov
pop
lret
inc
dec
xchg
shrl
cltd
out
pop
and
mov
cmpsb
jae
sbb
cmc
fsubrl
pop
cmpsb
test
mov
pop
test
pushf
incl
pop
or
pop
lcall
gs
sub
pop
adc
test
mov
mov
lods
arpl
sti
mov
xor
loopne
sub
and
out
mov
pop
and
sub
push
mov
xchg
cmpsl
scas
loopne
or
je
jno
mov
jge
dec
inc
adc
or
pop
call
and
jl
sbb
jae
adc
jge
cmp
xchg
mov
out
dec
sub
add
mov
or
or
enter
mov
fisubrs
idivb
pop
push
ss
jl
xlat
jp
jmp
popa
in
jg
mov
dec
popl
and
mov
and
stos
sbb
in
in
mov
fcomps
scas
out
or
jl
sar
scas
dec
jbe
adc
xchg
js
cmp
movsb
or
nop
mov
in
adc
sub
add
insb
pop
rcl
push
add
cmp
jecxz
mov
cmp
mov
lcall
inc
or
adc
pop
ss
movb
hlt
xchg
popa
jbe
movsb
pop
int3
or
xor
xchg
dec
xchg
ret
in
fldenv
mull
iret
ss
arpl
pop
cmp
fcoms
insl
mov
lods
push
xchg
or
mov
sbb
pop
cmc
arpl
fs
mov
or
stos
or
fcmovnb
push
out
push
jecxz
mov
pop
and
push
jmp
subl
or
mov
xchg
cmp
jbe
push
pop
inc
xchg
nop
inc
scas
cwtl
lock
push
nop
icebp
jns
in
icebp
scas
aad
fildl
aaa
dec
xchg
push
and
decb
testl
aad
add
inc
cmp
dec
shrl
js
jge
aas
leave
shlb
ret
ja
in
xchg
test
hlt
insl
xchg
add
aas
subb
popf
in
mov
xchg
fistpl
mov
sbb
fsub
into
mov
cmp
mov
lods
xchg
push
leave
lahf
and
lods
fildl
push
cltd
pop
sub
lcall
jmp
fcomps
xor
pushf
and
loop
inc
adc
jcxz
push
jb
test
cmp
sub
sbb
mov
popl
ds
mov
sbb
sbb
push
clc
adc
sbb
movsl
jbe
fldenv
sbb
out
pusha
arpl
lahf
sahf
jne
xchg
inc
adc
or
cmp
cmp
fbstp
outsb
pop
in
mov
and
inc
or
pop
je
xchg
jo
push
stc
std
mov
aaa
cmp
sbb
xchg
sbb
mov
sbb
mov
in
call
xor
push
xchg
jg
int
fcomps
dec
adc
pop
add
sub
xchg
cmp
and
push
add
xor
add
or
nop
inc
shll
mov
xor
pushf
fstpl
mov
fmulp
sub
ljmp
mov
lcall
arpl
pop
sbb
cli
push
mov
sbb
dec
jge
mov
ret
jmp
inc
jae
xor
xor
xor
clc
or
adc
pop
xor
aaa
jbe
mov
stos
fadds
popa
std
xrelease
jl
pop
add
xlat
push
ds
shl
les
jbe
repz
sbb
je
lods
cmp
push
rcrl
push
mov
add
sbb
cmc
pop
mov
clc
pop
adc
xchg
jnp
rcll
adc
loop
stc
stos
insl
cmp
sbb
add
sub
shl
imul
cli
mov
stos
pop
sbb
jae
in
push
faddp
mov
sbb
pop
mov
jae
push
dec
cmp
pop
sub
int3
adcl
and
xchg
xor
inc
or
pop
test
mov
jne
gs
sub
push
pushf
mov
cmp
xchg
adc
add
push
pop
add
inc
data16
push
xor
insb
in
jmp
pop
adc
jg
cmpsl
imul
mov
dec
adc
icebp
xchg
xchg
mov
jecxz
pop
adc
outsb
xchg
setne
pop
push
incl
sbb
loope
sarb
mov
sub
lods
jbe
mov
inc
lods
mov
popa
test
jl
scas
dec
jno
cmpsl
cli
leave
jl
mov
outsb
jg
dec
fwait
sarb
mov
pop
cltd
inc
jns
shr
sub
mov
enter
adc
pushf
dec
push
dec
in
add
les
sarb
mov
cmp
xor
insl
cmpsb
aad
pop
int3
adc
ss
js
fcomps
dec
xor
pop
push
out
js
mov
out
fwait
pop
add
xchg
pusha
dec
cmp
sub
mov
outsl
fwait
loop
shll
or
push
cs
push
mov
fdivl
rorl
jnp
roll
sub
cmp
pop
push
leave
and
mov
test
mov
sbb
lret
jl
fisubs
pop
mov
nop
aas
push
vrcpss
outsl
cwtl
addr16
leave
cmc
mov
or
mov
jb
dec
cmpsl
test
mov
mov
mov
push
pop
dec
inc
inc
sbb
mov
shr
scas
dec
inc
mov
xchg
mov
orl
mov
dec
ds
test
mov
aas
add
xor
rorl
jmp
adc
or
cmp
out
cmp
cmp
repnz
in
cmc
or
sub
mov
ret
das
sbb
sbb
repnz
call
pusha
cmp
mov
sbb
pop
add
scas
pop
pop
adc
push
pop
pop
and
mov
xchg
addr16
cmp
jo
cmc
je
or
mov
dec
inc
sbb
ds
jmp
incb
aam
jno
daa
push
popl
jp
pop
sub
push
push
into
fstpt
fbld
shlb
lret
jnp
mov
andb
jmp
movsb
mov
out
mov
add
cwtl
and
cwtl
jle
xlat
inc
out
lods
repz
mov
pusha
cltd
fnsave
mov
inc
out
pop
push
int3
sbb
jbe
mov
xor
inc
add
in
push
pop
xchg
push
adc
mov
mov
sti
and
jmp
adc
sbb
push
dec
adc
ljmp
in
mov
les
xchg
leave
mov
lock
add
pop
jle
mov
jmp
adc
pop
jge
add
jno
inc
add
scas
fimuls
arpl
pop
in
rcrl
test
sub
inc
bnd
outsl
cs
and
push
je
push
lea
lea
test
ret
mov
leave
std
add
xor
or
cs
imul
loop
xchg
sti
std
or
adc
test
sub
sbb
repz
and
fidivrl
inc
sub
jg
gs
lahf
xchg
mov
pop
insb
leavew
out
iret
mov
push
xchg
sbb
cmp
mov
mov
jne
jge
cld
dec
mov
pop
leave
addr16
xor
repz
icebp
push
adc
into
pop
inc
insl
test
pop
sarl
and
inc
jge
clc
dec
movsl
jb
push
add
fwait
andb
jp
mov
adc
sbb
mov
mov
mov
jg
cli
sub
aas
scas
cmc
jne
or
les
sub
clc
filds
mov
mov
add
cmp
mov
data16
cs
scas
mov
int3
mov
js
sub
adc
int3
icebp
in
adc
mov
pop
pop
rorl
pop
pop
mov
test
mov
mov
add
and
fcomps
je
push
fwait
lock
jle
mov
sbb
xor
sbb
fs
sbb
sbb
xor
ds
lahf
xchg
ja
mov
mov
sub
or
bnd
push
mov
outsl
xor
xor
jnp
ja
daa
adc
lret
xchg
fs
xchg
int3
xor
sbb
add
hlt
decb
fldl
cmp
clc
push
sub
xor
push
cmp
ss
xor
push
scas
add
in
xchg
push
inc
bound
and
sbb
nop
aas
ret
cmpb
inc
push
mov
xchg
jne
loopne
mov
push
rorl
lods
adc
fisttpll
dec
sbb
cmpsl
push
xlat
call
outsb
mov
mov
xor
mov
jg
push
movsb
pop
sbb
call
hlt
movsl
negb
inc
sarb
insl
out
mov
fnstcw
adc
sub
dec
inc
fidivrl
xchg
test
xchg
mov
ret
aaa
int3
outsl
cmpsl
mov
jno
aaa
lea
xorl
xchg
imul
and
out
lds
dec
pop
xchg
fildl
hlt
cld
add
stos
mov
push
jmp
sbb
test
clc
ret
inc
inc
xchg
lcall
inc
push
inc
sbb
xlat
aam
aaa
dec
push
and
fnsave
test
int
cmpsb
inc
ds
cmpsl
sub
jle
test
imul
int3
stc
mov
xor
cmpsb
adc
lret
and
sbb
mov
push
xchg
mov
aaa
cmp
in
push
sbb
sahf
cs
mov
xor
adc
scas
ficoml
cmc
in
cmpsb
adc
fpatan
loopne
cmpsb
jge
lds
xor
aad
xchg
lea
mov
stos
and
dec
cltd
in
aad
aad
and
out
and
mov
je
lods
cmp
xor
in
sbb
inc
bound
and
ljmp
sub
sbb
cmc
rol
stc
jp
ds
scas
int3
shr
push
xlat
sahf
ds
push
call
clc
xchg
xor
out
lret
sahf
outsb
lcall
lret
repnz
xchg
sbb
adc
xor
xor
in
mov
cltd
inc
sti
ret
push
iret
pushf
mov
sub
js
gs
adc
popf
jnp
inc
arpl
inc
xorl
bound
add
sub
cwtl
or
and
inc
add
cld
mov
cmp
lret
loop
testb
xchg
shr
and
push
orl
mov
orb
cmp
xchg
cmp
arpl
inc
sub
shl
out
mov
sahf
add
sub
pusha
ds
ja
push
outsl
jb
imul
test
sbb
mov
fs
dec
adc
jno
sbb
pop
movsl
pop
jo
xor
jmp
jg
push
push
std
jmp
jecxz
lods
mov
movsl
dec
cltd
mov
outsb
xchg
xchg
xor
lret
test
pushf
xor
scas
and
mov
add
push
and
test
mov
shll
lret
fs
jae
es
mov
mov
shr
jle
or
sahf
pop
xchg
pop
cs
lret
sbb
sbb
sub
loopne
test
pushf
into
xchg
mov
cmp
and
cmp
mov
mov
adc
mov
jg
cwtl
and
lcall
sub
aas
xlat
les
sbbl
loope
pop
cld
jb
sbb
js
inc
lock
xor
push
loop
js
mov
sub
rol
jmp
fmuls
sbb
sub
mov
hlt
mov
leave
xor
rcll
and
mov
mov
xchg
fldlg2
stc
jae
in
js
lock
pop
mov
jg
nop
sub
pop
dec
mov
repnz
test
test
dec
adc
and
lea
jle
push
cmp
flds
mov
shll
cmpsl
data16
push
inc
aaa
clc
aas
pop
fmul
pop
repz
loope
push
xchg
mov
add
or
sbb
rolb
push
gs
push
or
jae
push
call
sarl
stc
or
sbb
ljmp
enter
scas
not
cmp
lea
idivb
in
ficompl
sub
or
ja
mov
pop
arpl
xchg
mov
cmp
jns
cli
jae
sub
shlb
outsl
jne
cld
xchg
imul
fistl
es
jp
mov
pop
mov
cmpb
data16
and
sbb
jbe
xor
loop
bnd
push
ds
cmp
jnp
fxam
cmp
movsl
nop
lods
dec
in
sbb
inc
dec
jno
inc
sub
push
rcrl
lods
sarb
xor
push
das
dec
sbb
cmp
pop
inc
test
clc
sub
jp
in
call
int3
inc
mov
into
inc
mov
lcall
adc
je
mov
clc
ds
jae
xchg
and
sbb
jae
into
and
scas
fisubrl
gs
xor
push
ja
pushf
cmp
jb
lret
popf
and
cmp
ljmp
push
add
pop
xchg
lahf
pop
addr16
jae
shll
mov
lods
out
sub
stos
and
inc
gs
in
cmp
sbb
int3
and
push
mov
and
lret
push
cwtl
add
fsubs
dec
mov
popf
mov
add
aaa
sbb
outsb
push
out
repnz
xor
aam
xlat
stos
pop
jp
loope
inc
ja
je
je
mov
inc
mov
push
sahf
inc
sbb
adc
mov
xor
cwtl
sub
ljmp
add
call
xchg
movsb
out
pop
pushf
cmc
adc
call
pop
aad
shr
fnstsw
rcl
pop
arpl
push
js
stc
jo
dec
sbbl
cmp
mov
fisttps
daa
push
lods
xchg
push
std
ja
mov
cmc
adc
les
lcall
sti
outsl
mov
into
sbb
xlat
inc
loope
lods
sbb
flds
lock
xchg
dec
rcll
and
mov
jno
push
push
pop
insl
mov
mov
push
xor
dec
jp
loope
dec
push
shrb
mov
inc
sbb
and
mov
cmp
add
ljmp
sahf
rorb
inc
add
sbb
cmp
mov
in
in
insb
scas
sbb
jno
xchg
xor
push
xchg
aaa
mov
imul
sti
mov
mov
movsl
in
push
add
cmp
ds
and
jno
sti
movsb
out
stos
scas
rorl
jne
mov
in
xor
pop
dec
jle
nop
sub
mov
test
push
jno
test
or
inc
xor
shrl
push
cwtl
hlt
mov
into
mov
dec
adcb
enter
call
pmaxsw
bound
or
sbb
or
and
cld
push
pop
mov
push
mov
lds
ficoms
and
movsl
inc
fisubl
sub
push
xor
jno
inc
in
mov
pop
xor
test
bound
dec
test
mov
sbb
in
cmp
sbb
mov
loopne
push
rol
enter
xor
xchg
mov
or
and
push
jae
stos
cmp
inc
dec
pop
push
inc
sbb
ja
push
arpl
cmpsb
mov
icebp
adc
lods
jne
or
xchg
lret
pop
jne
jbe
inc
xchg
cs
push
js
xchg
insb
popa
xchg
call
mov
in
dec
sti
sub
xchg
lds
xchg
xorl
push
mov
add
in
fisubrl
or
roll
shrl
movsl
adc
push
sub
inc
adcb
test
pushl
ss
lcall
xor
filds
adc
ja
jle
dec
push
mov
dec
adc
xor
jmp
adc
cwtl
mov
ds
pop
push
sbb
shrl
outsl
sbb
jle
inc
movsb
dec
outsl
dec
mov
mov
sbb
popa
inc
jnp
sub
stos
inc
cs
mov
es
aas
dec
jno
test
cwtl
sbb
rcrb
sub
xchg
ret
pusha
je
mov
stos
cmp
js
out
adc
mov
xchg
adc
push
pop
test
or
getsec
pop
movsl
mov
fwait
sub
jb
mov
sbb
xlat
xchg
int3
xor
lds
or
ret
sbb
jb
adc
lahf
push
es
cwtl
mul
push
mov
jae
cli
ja
jg
cmp
leave
lock
fchs
or
ljmp
push
or
ja
fcmovbe
jg
inc
pop
ret
loop
mov
test
pop
push
test
adc
insb
mov
rcll
test
push
sahf
xchg
call
lock
lds
adc
enter
jp
cwtl
xor
lret
jo
fs
pop
clc
dec
lcall
cmp
push
xchg
xchg
imulb
stc
rcrl
mov
push
jl
xchg
clc
cld
or
xchg
mov
and
inc
inc
sbb
aad
jnp
int3
push
lea
pop
and
mov
es
xor
les
ljmp
sub
dec
movsl
outsl
gs
pop
mov
dec
das
shll
add
xor
shll
stos
out
test
xor
icebp
push
and
stc
pop
adc
jg
dec
mov
arpl
mov
pop
push
dec
repnz
adc
int3
sbb
movsl
fistpl
bound
mov
jp
sbb
push
fcoms
ss
je
or
or
inc
pop
call
add
xor
dec
mov
mov
movsb
inc
pop
pop
mov
inc
fistps
push
pop
ror
out
mov
push
stos
jp
repz
adc
sti
or
sbb
dec
push
pop
cmp
cmc
pop
dec
daa
pop
lret
ja
leave
dec
mov
pop
into
stos
dec
mov
js
cld
inc
outsl
push
sbb
mov
sbb
mov
aas
in
fisubrl
add
mov
cmp
pusha
sbb
sbb
pop
movsl
mov
xchg
andb
jo
in
in
testl
xchg
rcll
sti
stos
jnp
jo
add
xchg
insb
bound
out
in
dec
in
jae
lods
mov
jbe
lock
mov
or
lcall
rcl
or
test
lahf
popf
or
lods
out
stc
or
xchg
fisubrl
aaa
iret
loop
jge
rol
in
jno
mov
andl
or
adc
popf
xor
aas
lcall
xchg
mov
data16
mov
jmp
inc
int
jp
mov
push
jnp
jg
mov
lcall
mov
pop
ds
cs
clc
lret
adc
push
ret
push
in
cmp
mov
add
and
adc
int
pop
outsl
repz
mov
jmp
push
or
xor
mov
push
fs
sbb
sahf
icebp
sbbw
je
sub
pop
fdiv
xlat
aad
mov
xchg
pop
inc
or
jmp
btr
lcall
sbb
mov
hlt
pop
mov
or
ss
push
add
cmp
shlb
xor
sub
sbb
insl
movsl
xchg
not
sbb
xchg
or
cmpsl
addr16
push
movb
popf
jg
or
jo
inc
sub
in
xchg
pusha
xchg
lods
adc
cld
mov
pop
xchg
mov
jg
adc
lcall
adc
clc
cmp
and
mov
pop
fists
xor
jg
fiaddl
push
inc
cmp
mov
or
xorb
mov
sbbl
or
cltd
cmp
mov
clc
aaa
out
mov
mov
mov
mov
push
add
loope
lea
into
addr16
stos
or
fimuls
insb
gs
inc
pop
xchg
cmp
push
test
cmc
push
stos
lock
adc
and
jnp
pushf
subl
outsb
scas
lcall
mov
out
enter
out
cwtl
movsb
dec
lcall
xlat
or
popf
xchg
inc
jb
ds
stos
adc
sub
mov
enter
jp
addb
push
xchg
sub
fnstsw
cs
mov
outsl
call
push
sbb
dec
daa
andb
pand
push
pusha
mov
daa
adc
push
push
sub
insb
add
fisubs
xchg
test
popf
sub
flds
cmp
adc
xor
fsubp
pop
lock
push
mov
es
jmp
aas
imul
mov
insl
sbb
push
cmp
jg
fisttpl
stc
cmp
fs
add
add
xor
xchg
dec
inc
in
rcrb
dec
mov
rorb
fmuls
in
mov
mov
dec
xchg
jne
mov
dec
repz
jb
mov
sti
add
push
in
in
adc
loopne
clc
sbb
je
test
jmp
sahf
xchg
and
cmp
jmp
pop
push
cmpsl
bound
cwtl
hlt
filds
subb
adc
xchg
mov
and
pop
push
xchg
mov
stos
push
sub
sub
adcl
inc
dec
out
push
xchg
dec
mov
jne
inc
jmp
popa
push
ss
mov
add
sbb
icebp
xchg
in
scas
repz
inc
sub
cs
hlt
xor
and
pop
aam
xor
push
aad
pushf
mov
inc
xchg
cmpl
mov
or
xor
aad
aad
int
xor
and
xchg
shll
lods
shlb
imul
std
fmul
xchg
add
cmp
repz
push
pop
inc
cmpsb
pop
cmc
sbb
ss
fiaddl
xor
les
aad
shll
js
and
stc
cmp
out
repz
push
lret
out
movsl
cmpsl
iret
pop
loopne
pop
xchg
sti
push
in
lock
sbb
fdivp
in
mov
fnstenv
jge
les
mov
adc
jl
mov
and
in
pop
inc
push
clc
xor
shlb
ss
dec
xchg
into
mov
mov
xchg
aam
lcall
sub
sbb
jl
sub
dec
mov
xchg
nop
fcmovu
popf
into
es
push
shll
and
add
movsl
or
push
mov
cld
mov
jecxz
cmp
and
sub
add
inc
out
inc
dec
sahf
mov
dec
les
bound
add
dec
call
leave
sub
out
dec
and
push
push
mov
pop
mov
xchg
in
jnp
jb
mov
scas
pop
xchg
cs
jecxz
cmpb
jp
pop
xor
mov
dec
jb
jbe
stos
or
ljmp
addr16
mov
push
mov
mov
stos
xor
cmpsb
lea
nop
xor
adcb
sbb
mov
movsb
inc
imul
push
sub
lahf
pop
mov
out
push
mov
jp,pn
lods
mov
or
std
loope
aad
mov
jb
imul
pop
jae
pusha
test
and
cmpsb
pop
mov
mov
jae
pop
push
sbb
psubusb
and
push
inc
gs
call
pop
mov
call
mov
call
ror
mov
xchg
aaa
popf
iret
xor
push
mov
mov
in
add
mov
movb
jecxz
sub
pop
mov
sbb
push
negb
inc
call
inc
adc
outsl
add
mov
rcrb
out
adc
pop
in
daa
nop
adc
fsubrl
xor
push
mov
mov
in
stc
ret
xor
and
outsb
popf
inc
std
shr
inc
daa
sub
push
sub
push
gs
push
and
ja
mov
mov
movsb
xor
sub
sub
movsb
inc
iret
imul
movsl
notl
and
ds
cli
sbb
or
ret
push
jg
jp
sbb
and
adc
pop
jg
xor
inc
out
popl
dec
stos
loop
pop
xchg
and
aad
cld
cwtl
mov
push
adc
xchg
icebp
jmp
les
cwtl
repnz
cli
push
ficoml
mov
xlat
sbb
out
test
xchg
in
jmp
gs
push
cmpsl
lods
daa
fwait
jmp
xor
fldcw
and
mov
fs
jle
sub
lods
push
sub
mov
enter
pop
test
and
pop
adc
dec
jg
setnp
sbb
outsl
test
pop
popf
push
ret
add
mov
mov
ja
loop
xchg
out
adc
mov
stos
add
nop
pop
mov
cmp
cmp
push
sbb
mov
gs
mov
scas
leave
inc
xor
dec
test
pop
push
lock
cmpsb
fsubl
adc
dec
shl
xchg
pop
xchg
int
aad
fcomi
imul
sub
fisttpll
add
pop
addl
mov
add
mov
ret
rcr
shl
add
leave
arpl
xor
popf
out
add
outsl
jp
cld
mov
dec
cs
sbb
adc
mov
xor
mov
adc
pop
mov
test
inc
xor
out
sahf
fists
dec
push
mov
push
test
pusha
dec
jnp
pop
mov
push
adc
test
out
jo
dec
add
scas
add
and
push
mov
sti
jecxz
pop
in
mov
fists
scas
in
jb
dec
in
imul
cmp
subl
fidivrl
or
xor
je
bound
test
lea
aaa
add
push
imul
jle
dec
sub
std
push
insl
arpl
add
dec
dec
xchg
cmc
inc
aas
shr
insb
scas
ror
popa
push
add
in
rclb
mov
jge
pop
in
nop
cmp
dec
testl
adc
movsb
aad
add
js
or
loope
mov
inc
repnz
and
je
or
pop
fucomp
xchg
mov
stos
mov
and
fdivs
mov
inc
dec
sbb
jecxz
lret
xorl
fnstenv
arpl
xor
xchg
in
xchg
into
lock
fs
jg
iret
sbb
mov
ljmp
push
ss
insb
leave
jle
adc
sahf
and
les
int
mov
mov
repz
xchg
add
out
popa
aad
dec
imul
inc
popf
test
dec
dec
add
lret
arpl
dec
push
in
std
pop
leave
dec
out
mov
js
mov
push
movsl
test
mov
jb
xchg
pop
test
nop
popf
fisttpl
xor
mov
fstpt
push
icebp
rcrl
lods
push
or
cld
into
mov
inc
fbld
fdivl
or
sub
rcrb
addb
mov
push
lock
jge
out
in
popa
ret
es
sahf
jecxz
mov
xchg
mov
xchg
push
arpl
xor
xchg
mov
cmp
popf
int3
adc
or
and
push
rcrl
sbb
imul
data16
std
mov
jne
and
mov
std
add
aam
cmpsb
sbb
inc
hlt
jp
adc
adc
rorl
pop
cli
je
sub
jne
mov
jnp
dec
cltd
ficoml
jo
jb
lods
mov
leave
dec
add
push
ja
xchg
add
shlb
cld
sbb
call
sahf
fs
movsb
mov
lea
mov
mov
mov
in
test
ret
out
popf
mov
lock
arpl
push
and
lods
adc
je
mov
lcall
mov
xchg
adc
push
pop
xor
scas
xchg
repnz
add
loope
push
sbb
xorb
push
ret
jb
in
add
inc
popa
les
loopne
xchg
push
pop
mov
push
mov
hlt
and
arpl
pushf
ret
aaa
clc
sub
push
out
jbe
sub
inc
dec
mov
shrl
push
or
inc
pop
ja
sub
lds
cltd
sti
push
push
xchg
imul
sub
sbb
xchg
cmp
js
jmp
mov
das
sub
fs
std
bound
mov
pop
mov
pop
out
mov
cmc
pop
inc
adc
test
movsl
movsb
mov
repz
xchg
xchg
popa
push
outsb
inc
aad
out
push
dec
jmp
fistps
mov
pushf
mov
fwait
adc
cmp
xor
popf
sbb
sbb
fildll
cmc
enter
mov
sbb
pop
jecxz
and
and
or
xchg
jecxz
loope
test
mov
lea
sub
scas
dec
mov
pop
push
popa
cwtl
dec
popa
ja
pusha
mov
and
and
and
rorl
ret
mov
mov
arpl
ret
jb
icebp
stc
push
sub
sbb
fcoml
mov
sub
lods
mov
scas
rcrb
mov
pushf
jo
lret
out
repnz
mov
xor
inc
adcl
test
js
fsubp
jle
out
push
push
adc
or
shr
and
jp
aam
outsb
mov
mov
push
adc
inc
aaa
lcall
in
xor
cmp
pop
jmp
in
inc
popa
mov
dec
lods
movsl
xor
xor
loope
mov
jno
xlat
fistps
xchg
xor
mov
gs
mov
cmc
ljmp
sarb
jns
sbb
ret
out
outsb
push
sbb
add
xorb
pop
pop
neg
pop
scas
repnz
xchg
sbb
jg
pop
dec
aam
arpl
push
mov
jle
adc
lds
jns
cmp
mov
test
pop
mov
daa
xchg
repnz
fwait
pusha
mov
addb
push
fdivrs
and
ret
cmp
xorl
shll
ret
pop
jl
frstor
dec
cld
scas
and
daa
es
lret
movsb
jnp
push
adc
fucompp
mov
add
sbb
aas
jne
mov
test
push
sbb
stos
std
or
scas
xor
mov
jle
daa
adc
jg
mov
xor
test
daa
xor
insl
ljmp
mov
mov
repnz
popf
insb
mov
mov
vpmovq2m
aas
dec
xor
test
lea
xor
test
sub
mov
and
shl
cmp
outsb
mov
xchg
std
loopne
ds
rol
xchg
sub
mov
push
outsl
daa
jbe
push
or
enter
jp
test
cmp
pop
sub
test
xor
ret
push
mov
shrl
cmp
dec
cmp
sahf
xchg
mov
iret
nop
les
leave
jno
cwtl
test
xchg
dec
fcoms
xchg
ja,pt
lret
stos
jle
or
aad
mov
dec
inc
mov
adc
push
cmp
ror
lods
hlt
ja
push
mov
sub
and
pop
mov
or
push
push
dec
es
mov
jmp
cmp
out
out
es
into
and
push
negl
add
int
iret
inc
pop
imul
aas
gs
mov
lods
leave
ja
sbb
xorb
std
mov
xchg
jg
imul
std
rcll
loope
mov
lods
cmpsb
inc
popa
clc
into
mov
sbb
je
roll
xchg
xor
jno
out
xchg
shll
add
jno
rcrb
inc
or
pop
xor
mov
mov
mov
mov
jp
inc
add
addl
pop
cmp
shll
and
gs
inc
fwait
jno
ret
sub
rcll
add
call
sub
cmp
leave
cmp
insl
imul
pop
mov
pusha
cli
fdivs
inc
inc
mov
jl
cmpsb
or
insl
hlt
ljmp
jns
out
outsb
xchg
and
or
leave
sbb
scas
push
dec
jle
es
jp
and
aad
popf
adc
inc
sub
stc
adc
std
ljmp
ret
adc
js
flds
xchg
cmp
sub
dec
and
xchg
pop
data16
fstps
xchg
std
push
jbe
sbb
mov
push
rol
repz
pop
sbb
or
call
jg
daa
cmp
add
xchg
and
imul
repnz
lret
mov
clc
adc
test
mov
les
mov
jbe
push
and
cmp
mov
fwait
movsb
mov
mov
dec
insl
lret
rorl
aad
negl
imul
xchg
sbb
pop
push
jnp
ja
push
shl
inc
jno
push
loop
push
cmc
ljmp
push
popa
outsl
pop
push
icebp
push
xchg
jge
cmp
jp
xchg
addb
rorl
lret
xchg
xor
pop
jg
and
dec
mov
xor
xor
pop
sbb
mov
cmp
leave
jle
ss
cmp
fidivs
lea
sysret
in
push
mov
es
jnp
inc
mov
add
out
std
insl
pop
aad
and
jb
xchg
cmp
xor
sub
jns
loope
mov
imulb
push
push
test
addr16
call
loope
add
lds
ljmp
push
dec
jne
dec
and
sbbb
lret
cmc
imul
fldcw
stos
jbe
call
jb
pop
xchg
mov
out
outsb
out
mov
lods
negb
in
pop
pop
in
mov
inc
ljmp
mov
mov
imul
jb
aaa
popf
hlt
sbb
sub
icebp
faddl
jne
aas
cmp
xchg
leave
cwtl
fwait
mov
rorb
jo
repnz
mov
mov
std
push
fdivrl
cmp
xor
mov
push
iret
jno
pop
jg
das
or
and
mov
dec
inc
jmp
inc
test
loop
push
stos
pop
push
push
lds
jae
lock
daa
adc
repnz
push
xchg
inc
insl
push
push
push
and
fisttpl
or
loopne
add
add
add
inc
fstl
and
pop
stos
or
sti
push
dec
gs
mov
dec
ds
inc
mov
sahf
cmc
mov
and
idivb
scas
std
cmc
clc
insb
jp
or
data16
xor
aad
loop
subb
push
pop
pop
sbb
add
in
mov
sub
cli
cltd
mov
mov
xorb
mov
xor
outsl
sub
push
aas
dec
and
fimull
aas
sub
inc
jne
out
mov
aam
mov
and
test
dec
mov
call
adc
jns
outsb
cmp
aas
sbb
add
pop
xor
or
inc
stos
call
mov
test
pop
adcb
xor
aaa
jg
mov
test
test
mov
cltd
mov
add
inc
out
sub
cltd
pop
icebp
test
das
fs
mov
lcall
xchg
mov
lss
fdivl
into
lahf
jge
adc
lods
mov
or
cmp
js
mov
addb
rorb
fmuls
into
test
out
jmp
repz
bound
or
dec
push
xchg
inc
incb
hlt
mov
cld
jl
jae
mov
and
ret
push
popf
icebp
adc
stos
mov
ret
dec
xor
ljmp
push
inc
cmp
test
or
pop
push
orb
bound
popf
jbe
int3
stos
addr16
mov
xor
in
dec
rep
jbe
jns
jle
inc
mov
gs
xor
jle
pop
inc
loop
in
push
push
xchg
roll
mov
or
jbe
and
js
xchg
imul
je
adc
imul
aad
dec
vmovd
test
mov
jne
into
jge
jl
mov
xor
pop
cmp
popa
jno
adc
lahf
xorb
cltd
jle
in
lret
pop
js
xor
push
in
push
jge
stos
adc
clc
xchg
cld
inc
hlt
mov
ja
xchg
popa
adc
enter
lret
jbe
lock
nop
test
out
and
xchg
xchg
push
adc
mov
lds
dec
and
sbb
xor
fdivrp
shlb
jo
or
mov
sbb
jmp
dec
out
pop
dec
stc
and
out
xchg
in
inc
mov
das
or
cmp
push
dec
lods
add
xor
pop
lcall
pop
aad
stos
push
fmull
adc
out
stos
iret
je
les
sub
dec
dec
bound
push
cwtl
ret
or
sub
adc
cmpl
mov
dec
pop
ficompl
jb
addr16
mov
sub
mov
inc
rdmsr
xchg
ret
pusha
mov
push
mov
in
jne,pn
lods
xchg
mov
jp
xchg
repz
dec
xor
push
add
lods
cmpb
scas
sbbb
add
dec
bound
pusha
mov
mov
clc
inc
lea
fidivrl
out
ret
in
pop
jle
push
test
dec
cmp
fwait
inc
testl
icebp
jns
cmp
mov
mov
add
xor
clc
sbb
outsb
enter
xchg
mov
fcomps
push
jecxz
or
mov
jmp
mov
test
jg
ror
xchg
daa
adc
std
mov
in
dec
aad
addr16
lods
mov
hlt
int3
aam
out
jle
lock
xchg
int
lods
stc
xchg
int
adc
sbb
fs
jg
aam
jo
loopne
loopne
pop
push
out
and
shrl
repz
mov
jnp
jg
cs
fbld
mov
ss
cmp
or
mov
sti
jne
dec
fidivl
and
push
or
mov
sbb
mov
mov
imul
and
adc
leave
neg
stos
or
hlt
mov
xchg
ret
cmp
lret
cmc
cmp
xor
xchg
or
test
jp
loope
mov
and
frstor
xor
cmpsl
jno
cmp
dec
cld
ja
push
and
mov
sahf
jbe,pn
pop
sti
push
scas
repnz
xchg
push
out
out
xchg
lret
mov
xor
imul
adc
movb
insb
clc
mov
insl
bound
aas
js
faddp
hlt
xchg
pusha
mov
aad
dec
fstl
fs
cmp
les
pcmpeqb
fildl
icebp
clc
jl
popf
fcmovbe
ds
push
shrb
loopne,pn
daa
in
addr16
or
jmp
imul
aas
and
test
push
iret
cmpsl
js
addr16
out
mov
outsl
mov
adc
je
xchg
pop
jae
fidivs
pop
mov
or
lcall
pop
clc
cmpl
lret
cmp
push
pop
dec
or
and
cmp
push
jbe
adc
je
fnstsw
bound
arpl
sbb
pop
lret
jne
mov
push
fsts
or
data16
jae
lahf
in
pop
mov
xchg
hlt
sub
jle
pop
imull
int
push
mulb
inc
sbb
dec
xchg
sub
mov
push
in
sub
pushf
inc
jle,pn
ljmp
std
pop
test
imul
cmp
jns
or
lahf
out
sub
cmpsl
movsl
in
out
sub
pop
and
xchg
jnp
test
jle
dec
lock
in
shrb
sti
addb
inc
lahf
stc
pop
mov
cmc
dec
lahf
jne
dec
cmpsl
int
xor
fwait
sbb
mov
out
jge
cmp
js
push
ljmp
and
dec
pop
ljmp
cltd
mov
cs
shll
push
cmp
movsl
out
xchg
out
dec
daa
xlat
xchg
pop
push
hlt
mov
data16
mov
mov
mov
add
sti
jb
ljmp
pushf
imull
data16
pop
cltd
sub
pop
dec
fwait
inc
jmp
push
mov
jbe
lods
fnstcw
cmp
mov
xchg
jo
insl
mov
iret
stos
push
mov
out
pop
rorl
fsts
addr16
es
ss
test
dec
dec
in
andl
sub
test
xor
or
sbb
adc
mov
fs
add
aaa
xchg
add
pop
inc
xchg
pop
push
sub
pop
testl
cli
ds
ss
aad
ljmp
ja
dec
test
xchg
cmp
jns
inc
mov
jb
arpl
sub
push
gs
cmp
mov
out
sti
imul
or
dec
pop
xchg
stc
mov
jl
cwtl
outsl
call
call
cmp
mov
sarb
pushl
mov
xchg
in
cmp
jp
test
xlat
push
inc
mov
adc
jo
inc
mov
pop
add
jbe
cltd
inc
jmp
pop
push
adc
dec
adc
fiaddl
xorb
mov
mov
repnz
mov
push
movsb
adc
inc
outsb
xchg
sub
es
xor
int3
sub
and
dec
mov
jne
and
loop
outsl
pop
push
mov
sub
sti
add
flds
out
jo
sub
sbbb
and
pop
sub
push
or
sbb
cmp
jmp
pandn
shrl
inc
rcll
xchg
pusha
sub
push
addr16
mov
cli
incl
push
xchg
or
push
adc
ljmp
ret
cwtl
out
pop
addr16
xor
repz
push
jbe
in
adc
jae
pop
mov
fucompp
jmp
push
inc
lds
mov
out
mov
jbe
cli
dec
into
outsl
cmp
pop
push
aam
and
lret
mov
mov
test
xor
add
movsl
push
jmp
mov
in
push
xchg
adc
cmp
pop
mov
xchg
push
je
xor
fmull
push
dec
push
mov
add
sti
jnp
cmp
pop
pushf
rolb
cmpsb
lods
shr
pop
sub
mov
xor
push
sub
add
outsb
mov
jge
insl
xchg
sub
movsl
repz
sti
mov
pop
dec
jmp
mov
aaa
inc
sub
fcmovu
outsb
out
mov
femms
call
pop
fcompl
jbe
inc
enter
mov
in
jo
push
out
add
into
outsl
push
mov
xlat
hlt
ret
pop
and
mov
or
mov
popf
jae
sbb
shrl
jmp
hlt
clc
shll
dec
add
leave
imulb
aaa
stc
xchg
cmp
pop
outsl
xlat
push
mov
ljmp
sub
inc
in
jle
jo
and
fsubrs
xor
pop
sbb
sti
jo
imul
mov
jo
or
scas
cmp
divl
sarl
xchg
mov
mov
sub
cltd
mov
cmpl
dec
mov
test
ss
aas
bound
cmpsl
lret
mov
rorb
push
out
mov
mov
jb
jg
cs
xor
add
inc
shll
sbb
out
fisubrs
and
push
pop
into
mov
adc
sub
loopne
mull
int
pop
fnstenv
mov
dec
add
lret
mov
cld
xor
fs
nop
out
lods
rcll
push
adc
aas
xchg
lahf
add
dec
fucomi
sbb
jbe
je
lods
add
js
imul
add
arpl
cwtl
mov
mov
pop
enter
pop
push
sub
pop
or
inc
ja
in
and
js
loope
subl
pop
sbb
xor
or
or
lcall
mov
pop
out
test
nop
nop
and
mov
emms
fmuls
insb
fldenv
pop
cmp
mov
dec
jge
loop
test
push
imul
xchg
lret
cwtl
and
cmp
adc
pop
sub
dec
xchg
inc
pop
repnz
mov
lcall
popa
fs
dec
test
cwtl
popa
popf
aad
cmpsl
aaa
mov
stos
dec
sbb
adc
lret
push
push
js
dec
mov
dec
lcall
jecxz
lock
hlt
adc
jp
pop
or
xchg
sbb
out
jae
bound
lret
mov
leave
mov
stos
push
add
mov
add
ds
js
sub
dec
or
sbb
sti
jno
fdivrl
dec
andb
rep
xchg
mov
pop
lock
or
mov
adc
add
inc
add
xchg
aaa
push
and
sbb
insb
sbbl
arpl
lods
jmp
imul
in
subb
pop
pop
push
or
adc
or
popf
mov
mov
push
lret
jb
mov
push
cltd
push
push
inc
mov
fstpt
cmp
lret
inc
mov
outsb
jae
nop
stc
imul
pop
xchg
jg
jbe
push
test
sbb
pop
push
pop
push
push
xchg
xor
jbe
jbe
pop
xchg
imulb
pop
std
xchg
test
repz
pop
iret
jle
add
iret
test
mov
cmc
mov
xchg
inc
repnz
pusha
cmpsl
jbe
fistl
aaa
xchg
ret
xchg
mov
sti
ss
fs
pop
ret
push
leave
mov
loope
inc
cmp
mov
and
or
or
test
xchg
pop
mov
xor
pop
mov
cmc
cmc
and
dec
jl
push
inc
xchg
call
xchg
aas
popf
push
scas
repnz
xor
adc
out
ja
mov
cld
cmpsl
add
roll
sub
dec
mov
jg
lcall
push
sti
xchg
mov
out
add
mov
mov
les
jbe
cli
xlat
sbb
pop
cmp
rolb
xor
pushf
adc
add
mov
pop
jae
cwtl
pop
cmp
inc
adc
mov
ljmp
popf
inc
dec
rcr
jbe
fldt
stos
xchg
jno
loop
aaa
or
jo
movsb
dec
mov
dec
stc
call
mov
xchg
push
or
rclb
pop
xchg
flds
pushf
sbb
xchg
xchg
jo
in
cmp
xchg
inc
cltd
pop
ja
mov
xchg
inc
test
and
mov
add
test
cmp
sub
or
dec
ror
jecxz
test
sbb
outsb
push
xor
push
adc
test
mov
mov
sub
sbb
or
lods
push
scas
repnz
inc
or
adc
cli
xor
cmpsl
mov
fnstenv
jl
inc
fcoms
jmp
icebp
das
jmp
and
sub
xchg
lahf
pusha
mov
addr16
loope
inc
insl
and
gs
mov
xlat
sbb
mov
outsl
inc
jno
xorb
sbb
aad
rorb
ret
fwait
out
aad
repz
mov
mov
or
jnp
push
mov
lret
sbb
das
lock
mov
lds
inc
jg
add
push
sbb
cwtl
add
xchg
test
pusha
push
dec
dec
movsb
jbe
pop
iret
fiaddl
and
rolb
sarb
rorb
ret
cmp
jge
cmpb
shr
cmc
pusha
adc
mov
pop
mov
jp
out
push
dec
in
or
int
enter
in
mov
xchg
jge
clc
fistl
popl
mov
pop
push
sub
mov
mov
fistpll
into
mov
pop
inc
cmp
fldl
dec
inc
leave
aas
lock
xor
inc
fadds
adc
xchg
data16
fmull
in
adc
sbb
inc
shlb
mov
shlb
jnp
mov
pop
sbb
sub
fldl
popa
xchg
mov
orl
adc
mov
push
and
lods
fisubs
loope
shll
xor
pop
dec
inc
iret
sbb
test
pop
or
add
pop
xor
int3
jmp
inc
dec
pop
jg
jno
outsl
cmp
lcall
inc
mov
jp
imul
sti
je
out
adc
fnsave
cmp
fwait
das
fisubrs
test
ret
jo
jne
dec
out
in
xchg
push
cmp
imul
je
fisubs
lret
or
fcmovu
das
mov
and
push
arpl
pop
js
jge
dec
pop
adc
or
sub
sbb
cltd
inc
cmc
loop
mov
icebp
loope
xorl
mov
pop
gs
iret
pop
stos
insb
mov
lcall
imul
dec
inc
idivb
pop
int3
les
test
pop
mov
cltd
cmp
cmp
mov
jmp
pop
mov
outsl
fnstsw
addps
lret
mov
push
add
cmpsb
negl
add
lret
cmpb
fidivs
pop
imul
pop
push
mov
je
mov
or
testl
rcrl
sub
and
loop
pop
insl
cmp
test
sbb
adc
or
jle
dec
shrl
insl
ds
sti
adc
aad
mov
mov
gs
divl
jne
push
xchg
adcb
mov
cwtl
mov
sub
fs
cmp
fs
mov
pop
pop
stos
mov
cmpsb
stos
pop
mov
xchg
inc
popf
fidivrl
lahf
adc
icebp
popa
sbb
lods
imul
cmp
sbb
mov
mov
and
pop
inc
repnz
pop
push
jg
stos
push
mov
add
jecxz
add
por
add
and
lods
shll
push
jae
and
pop
test
mov
sbb
or
std
scas
ret
inc
nop
mov
mov
outsb
add
test
rorb
and
jbe
sarl
mov
jp
pop
sbb
in
cwtl
mov
in
mov
fimuls
mov
xor
jae
sbb
les
mov
sub
add
or
int
movsl
adc
loopne
scas
in
cmp
movsb
scas
inc
or
mov
shll
call
incl
lret
adc
add
dec
mov
test
orb
cmp
je
ret
movsl
call
les
fcoms
cmp
sub
add
or
std
mov
int3
mov
cmp
repnz
enter
push
inc
mov
sbb
enter
and
sti
jo
xchg
fs
test
mov
jbe
xor
fistpll
icebp
fldt
sbb
insb
jecxz
in
xor
movsl
push
pop
adc
and
fstl
cmc
addr16
cld
out
jns
fisubrs
inc
sub
jae
lea
lods
inc
adc
xchg
fcmove
dec
cmp
or
mov
mov
shl
lds
bound
xchg
push
js
pop
pop
cmp
addl
adc
mov
int
add
fldenv
xor
pop
leave
loop
mov
lods
adc
push
push
inc
or
pop
fmuls
jmp
or
outsl
mov
mov
nop
movsb
roll
stc
ret
add
pop
dec
mov
call
push
dec
push
push
push
pop
popa
sarl
jle
or
sub
jg
and
popf
sahf
pushf
sbb
pop
lcall
mov
push
xlat
push
dec
pushf
sbb
or
mov
dec
scas
clc
or
mov
dec
add
notl
jmp
inc
dec
lret
inc
xor
aam
ret
jmp
aam
and
pop
imul
and
bound
add
sub
in
std
repz
ds
and
fcmovu
adc
jl
or
pop
lcall
adc
sub
imul
push
mov
ret
inc
lret
xor
dec
xchg
dec
xchg
xchg
sbbl
inc
xlat
dec
iret
sbb
movsb
mov
out
cmp
out
es
or
out
cmc
mov
mov
bound
ror
inc
pop
loope
stc
and
cwtl
and
hlt
sahf
mov
mov
stos
sbb
and
out
mov
ret
rorb
jns
and
loopne
or
jl
mov
sub
jp
in
aam
mov
dec
rclb
xchg
jne
xchg
push
mov
mov
mov
nop
push
rcrb
icebp
xchg
imul
xchg
shrl
lods
add
int
or
dec
ret
shlb
jae
adc
mov
xor
xor
aad
mov
outsl
nop
lods
lods
mov
mov
pop
xor
dec
lcall
ret
lea
jne
call
cmpsl
xchg
shl
push
rclb
inc
shll
out
aas
mov
cld
sub
js
movsl
cmp
shrl
mov
add
subl
shlb
push
inc
out
dec
imul
pop
xor
icebp
adc
popa
je
add
mov
push
push
dec
xor
mov
xor
ficoml
mov
dec
out
sub
add
push
xor
in
mov
push
adc
jg
lds
sti
into
mov
and
sub
inc
into
mov
ja
movsl
push
aam
sar
add
repnz
mov
testl
enter
cmp
or
leave
out
dec
pop
inc
sahf
mov
mov
leave
sbb
cmp
lea
imul
daa
jns
fildll
jle
loopne
and
push
or
std
std
enter
xchg
push
sbb
cmp
pop
out
cmpsb
xor
push
pusha
inc
lods
mov
stos
loop
mov
popl
xlat
pop
lds
push
je
fbstp
and
sub
test
mov
lret
mov
xor
in
dec
xchg
pop
xor
add
push
or
aas
or
mov
test
add
cmp
push
nop
cli
xchg
ficomps
mov
int
pop
arpl
push
les
cmp
pop
adc
mov
ror
test
lcall
test
test
jns
mov
sbb
pop
shlb
scas
ficoml
ret
outsl
sub
xor
cltd
addr16
and
dec
jg
mov
je
mov
andl
jae
xor
iret
sub
hlt
xchg
filds
fdivl
push
mov
mov
jge
lret
jmp
add
gs
push
sub
sub
xor
sahf
mov
push
outsl
lods
popa
inc
jns
pop
fs
or
dec
inc
mov
jae
test
mov
mov
pop
adc
xchg
in
cs
dec
lds
cmpsb
aas
outsb
addr16
fidivrl
out
mov
stc
pop
adc
sub
push
cmp
bound
jne
xchg
mov
js
insb
or
in
arpl
rolb
fs
pop
repnz
test
mov
out
jb
pop
cmp
sub
outsb
dec
cmp
movsb
ret
jns
insb
ja
mov
cmpsl
jg
jecxz
popa
and
rcrb
inc
xor
call
repz
adc
cmp
xor
xchg
mov
add
add
or
cmp
scas
sbbl
psubsw
lret
push
addr16
mov
pusha
dec
or
push
outsl
or
adc
cmp
ds
lcall
push
mov
mov
movzwl
iret
adc
push
pop
sbb
cmp
push
sbb
pop
inc
adc
sub
mov
xlat
pop
pop
sahf
sti
jb
pop
leave
pop
inc
pop
stos
pop
ret
aaa
shlb
gs
inc
mov
and
push
adc
xchg
sbb
loop
gs
gs
fcmovnu
jbe
das
and
jecxz
ds
adc
cmp
fldenv
xor
xchg
xchg
cmp
fld
outsb
mov
cmp
ja
repz
mov
aad
ja
mov
push
add
and
pop
lret
cli
xchg
xor
sbb
sbb
cmp
mov
xchg
jle
je
test
dec
or
hlt
repz
cld
pop
jne
lock
jl
shl
testb
addl
sbb
push
divb
lret
xor
lret
in
std
rorl
push
dec
call
push
xchg
scas
and
xchg
fstpl
ret
jnp
cmc
shll
fisubs
xor
test
sbb
sahf
lret
repz
adc
sub
push
pushf
jbe
xchg
mov
sub
xchg
mov
fiaddl
std
xor
push
adc
or
xor
fstl
jg
stos
imul
out
jne
xor
cs
dec
stos
out
aad
rcr
scas
vucomiss
pop
dec
pop
cwtl
iret
xchg
ds
add
js
sbb
test
cmp
xchg
add
bound
cmpsb
push
clc
and
xor
js
mov
js
add
mov
push
loop
push
pop
cmpl
pop
push
adc
cmpb
pop
push
outsl
cmp
mov
in
push
into
mov
insl
lahf
mov
push
push
dec
mov
jne
mov
aad
cwtl
or
in
mov
xchg
fs
adc
jle
inc
movsl
out
mov
insb
sbb
enter
mov
aas
lahf
push
adc
jno
mov
and
outsw
mov
sub
xchg
iret
mov
lcall
flds
int3
sbb
mov
cmp
sub
jmp
mov
mov
rcl
sub
mov
cmc
sub
jo
hlt
dec
jl
mov
sti
loop
sbb
into
xchg
mov
jmp
outsl
gs
ja
sub
and
jae
mov
jo
fwait
pop
add
sub
push
sti
cmp
cmp
push
sub
mov
jns
mov
in
fnstcw
sub
jns
pushf
cmp
bound
adc
loop
dec
insb
popf
or
xchg
stc
daa
xor
aad
das
and
mov
bound
fwait
sti
inc
mov
ret
loop
pop
sahf
les
and
and
test
and
sbb
mov
xor
push
sti
inc
or
test
js
insb
adc
addr16
or
xchg
xchg
jp
sbbl
bound
cmp
xor
xchg
int
pop
mov
sbb
mov
and
fsqrt
loopne
cli
test
ret
test
cwtl
fstpt
ja
popa
jge
inc
push
push
inc
mov
imul
push
adc
enter
adc
pop
jmp
and
outsl
xor
add
adc
sub
cmp
add
push
adc
es
mov
add
out
scas
outsl
mov
lret
fiadds
ljmp
or
ja
ror
and
mov
pop
loop
hlt
hlt
sbb
icebp
aas
je
mov
pushf
test
mov
or
xlat
out
out
clc
and
leave
outsb
add
enter
pop
daa
int
lret
repnz
xor
addb
ss
lock
sbb
test
fld
data16
sbb
ret
push
loopne
ret
enter
ljmp
jne
xchg
aam
inc
mov
fisubrs
pop
mov
inc
call
pop
add
and
xor
ljmp
ret
lret
arpl
out
mov
aas
adc
jecxz
pop
enter
and
and
f2xm1
cld
enter
rorb
xchg
sahf
mov
pop
push
es
mov
dec
fldt
inc
sub
pop
outsl
jnp
movsb
push
inc
lock
push
mov
xor
icebp
push
pop
cs
stc
cmp
mov
adc
pop
je
lcall
mov
mov
pop
jle,pn
aaa
mov
sbb
popa
or
test
mov
icebp
ja
pop
xchg
mov
sbb
ja
inc
jbe
cmp
cmp
stos
stos
jp
mov
add
or
adc
pop
insl
dec
je
cli
sub
pusha
repz
ljmpw
je
dec
int3
bound
fildll
mov
fnsave
lcall
and
mov
sbb
test
sbb
das
sbb
mov
pop
pop
mov
xor
mov
cld
icebp
xchg
insl
movsb
ret
inc
es
xchg
cmp
mov
mov
stc
add
push
mov
adc
push
fwait
aaa
dec
adc
dec
dec
sub
cld
bound
fsubrl
mov
sbb
pusha
ret
movsb
xor
push
lret
xchg
mov
cmp
leave
add
mov
clc
pusha
mov
icebp
shll
aad
jecxz
xorl
push
cwtl
cltd
imul
insl
jmp
adc
mov
xchg
dec
jle
add
loope
jle
ja
repz
pushf
cld
cmc
sub
xchg
insl
fdivp
dec
mov
aaa
pop
out
dec
mov
jbe
ss
sahf
or
imul
out
push
out
leave
dec
add
inc
xchg
jge
test
cld
mov
gs
pop
mul
aam
outsb
mov
iret
outsb
mov
mov
in
dec
lods
push
das
and
stos
pop
and
jmp
and
lahf
jo
inc
pop
xor
push
cmpsb
insl
or
sbb
mov
adcb
and
mov
push
sbb
xchg
push
jo
inc
sarl
mov
push
cwtl
fmuls
insb
sbbl
cmp
jno
mov
shr
inc
fbld
mov
gs
cmp
mov
mov
cltd
stos
jg
xchg
mov
mov
outsb
in
lahf
aad
aad
enter
and
lahf
popf
loopne
out
jl
jl
into
lea
cld
sub
test
cmp
ror
insb
test
imul
pop
pop
dec
pop
push
adc
daa
sarl
subb
imul
jno
enter
testl
aaa
jne
push
mov
ret
sar
mov
sbb
xchg
fdivs
mov
pop
in
dec
push
mov
jbe
push
ds
out
mov
adc
into
jmp
repnz
jg
inc
and
fstps
jecxz
xor
shr
popa
call
lods
das
lret
in
mov
dec
repz
and
lock
aas
loopne
push
shll
mov
hlt
adc
jno
addr16
repnz
call
daa
cmpsb
mov
push
fsubs
mov
or
aaa
pop
rcll
push
xchg
iret
xor
ja
aad
inc
lds
int3
mov
std
and
pop
insl
stos
or
dec
popf
jno
and
mov
icebp
cmp
daa
stos
stc
mov
lock
stos
push
mov
mov
dec
mov
mov
jge
rcr
sub
shlb
shl
adcl
test
out
sub
jmp
mov
cmpsb
stc
jmp
adc
pop
pop
outsb
cmc
mov
outsb
sar
popa
call
rolb
jbe
jmp
adc
int3
iret
cmpsl
dec
sarl
mov
pop
mov
jmp
fmuls
dec
notl
cmpsl
ffreep
xor
ja
test
push
enter
jne
lcall
jno
ret
mov
cmpsl
adc
push
xchg
mov
inc
cmp
in
adc
and
mov
fcoml
pop
lods
mov
shrb
sar
in
inc
mov
and
popf
je
xlat
push
or
divb
dec
ja
mov
xchg
xchg
clc
iret
jmp
cmpsl
test
adc
xor
cmp
lret
mov
nop
incl
mov
aad
push
pop
xchg
add
hlt
sub
hlt
xor
into
pop
xchg
lods
cmp
pusha
xchg
sbb
out
mov
mov
shrl
xor
outsb
sub
sub
outsb
in
daa
lret
pop
inc
clc
cmc
lret
inc
dec
mov
rcl
fmulp
cmp
cld
and
mov
mov
cmp
dec
lret
xorl
cli
mov
add
daa
add
aas
sub
repnz
or
pop
ljmp
push
jne
in
adc
lcall
jmp
and
pop
fdivl
lds
xchg
movsb
xchg
dec
mov
pushf
repnz
pushf
xor
pop
test
stos
pop
sbb
jge
lcall
daa
out
pusha
sub
jg
or
test
mov
jb
adc
sbb
cltd
sti
in
mov
push
xor
cmc
hlt
stos
inc
and
in
divl
test
cwtl
push
push
jno
bound
sub
les
int3
dec
jne
sbb
shll
inc
xchg
scas
js
push
pop
ds
je
mov
mov
mov
addr16
movsb
and
sub
or
das
daa
test
inc
jb
pop
int3
hlt
gs
pop
jae
mov
das
divb
frstor
insb
xchg
fiadds
leave
xor
or
push
mov
jmp
dec
cmpsb
rcr
test
cmpsb
xor
jns
xor
sub
inc
push
ja
popf
dec
lcall
mov
add
leave
inc
sub
xchg
ja
push
fildl
xor
aam
jle
js
jne
test
adcl
out
out
insb
sub
jle
insl
sub
sahf
and
pop
sbbl
pop
push
cmp
mov
inc
cmc
cmp
push
test
add
inc
xor
push
or
in
jg
push
bound
popa
dec
inc
jb
pushf
xchg
or
mov
jle
pop
dec
aaa
lock
frstor
fisubl
mov
fstl
cmp
fiaddl
stos
pop
dec
fiaddl
xchg
mov
sub
fprem
fisttpl
lea
test
mov
fdivl
add
mov
cltd
jle
sbb
xor
dec
movsb
jne
repz
dec
mov
pop
pop
jae
push
jo
mov
push
adc
ljmp
psraw
push
sbb
jae
imul
add
pop
daa
imul
loope
test
into
mov
adcb
std
fidivrl
pop
addr16
out
jb
sbb
adc
popf
pop
addl
and
adc
js
ds
mov
push
js
imul
xchg
sbb
aam
icebp
jmp
dec
mov
adc
sbb
mov
or
cs
test
push
loope
cld
shll
or
or
gs
mov
imul
pusha
ror
xor
out
xchg
cmp
push
jg
dec
fwait
stc
gs
fisubrl
xor
push
adc
inc
xor
rcr
cld
shrl
push
push
and
ja
and
sbb
mov
pop
jp
push
pop
inc
xor
add
jmp
jg
xchg
and
out
xchg
mov
pop
lods
sti
loope
pop
push
sbb
test
jne
jmp
and
mov
push
sub
outsb
cmc
test
aas
mov
fs
mov
dec
mov
pop
pop
sbb
dec
out
mov
dec
mov
and
sbb
dec
addl
js
out
in
sbb
push
mov
lods
aaa
fsubrs
jg
inc
and
test
lcall
stos
sbb
sub
pop
les
pop
cli
pop
iret
mov
adc
popa
mov
stos
les
adc
adc
mov
fwait
loope
mov
hlt
sti
in
jecxz
dec
xor
sbb
fldt
fwait
movsb
or
pop
ret
lahf
je
and
adc
and
in
jl
fdivs
add
jnp
insb
push
stc
mov
adc
jl
hlt
inc
lock
fwait
mov
mov
int
push
xchg
inc
cmp
sbb
pop
jbe
mov
mov
sbbl
ds
fmul
or
mov
mov
scas
fs
not
xor
lret
movsb
push
cmp
push
pop
out
pushf
add
push
jl
mov
fcomps
incb
popa
ljmp
xchg
shrb
test
pop
cmp
in
popa
lea
sub
ffreep
test
mov
call
xchg
icebp
out
jnp
popf
push
loopne
sub
jb
lock
cmp
lcall
shr
sar
mov
sbb
pop
daa
xchg
push
arpl
rclb
mov
pop
insb
lret
in
rdtsc
cld
sbb
mov
call
loopne
mov
ja
xchg
imull
les
mov
ja
stos
add
outsb
pusha
pop
incb
imul
call
popf
dec
test
fstps
bt
das
lods
adc
lock
jns
xchg
gs
sbb
add
push
outsl
inc
adc
hlt
jge
xor
lock
aad
mov
add
sbb
jns
repz
fstp
loope
mov
mov
ret
pop
jb
pop
jno
sbb
ret
sub
icebp
test
cmc
and
pop
xor
inc
mov
imul
xor
stos
xor
je
fnstsw
repz
cmp
add
mov
fnsave
repz
xor
cmp
adc
sub
mov
mov
inc
cmpsb
mov
or
sub
sbb
in
rcrl
inc
fisttpl
push
testl
xchg
std
cmp
inc
and
sbbb
aad
aaa
xor
mov
xor
loope
cmpsl
inc
or
push
add
mov
testb
xchg
pop
dec
pop
adcb
lods
or
test
in
lcall
or
aad
cwtl
test
or
sbb
adc
mov
icebp
idivl
and
test
dec
push
mov
sub
push
or
pop
mov
xor
push
and
nop
fidivl
add
and
pop
and
std
aaa
jp
or
pushf
jp
adc
and
jecxz
int
repz
sbb
push
mov
dec
and
pop
sub
orl
mov
jg
into
and
inc
and
call
loopne
adc
mov
lods
or
jo
loope
iret
sbb
loopne
add
ss
lock
out
jne
aaa
hlt
xchg
mov
fldt
cmpb
push
push
hlt
fldenv
scas
cvttps2pi
mov
cmp
mov
or
sbb
jns
les
in
mov
enter
lcall
aas
pop
sbb
dec
add
aaa
pop
xchg
cmp
lds
pop
fidivs
out
in
sbb
adc
cmp
testl
jecxz
subl
movsb
outsb
gs
lods
mov
xlat
js
stos
sub
xchg
pop
rol
cmpsb
hlt
sub
xchg
pause
loop
inc
popf
jmp
cld
mov
movsl
mov
je
cmp
fwait
inc
jmp
lret
cli
int3
shlb
js
jl
or
adc
xor
test
cld
rep
jg
xchg
dec
cs
cmpsl
in
pop
jno
mov
add
js
sbb
cwtl
dec
testl
mov
fs
xlat
cmp
pop
enter
cmp
dec
addb
cmp
pop
stos
mov
int3
pop
pop
pop
aaa
adc
pusha
into
adc
loope
out
cmp
mov
push
test
jp
or
xor
bound
dec
sbb
fnstenv
lock
and
rsqrtps
sub
ficomps
stc
dec
cmc
imul
xchg
scas
xchg
push
test
ljmp
jns
movsb
adc
add
mov
pusha
test
jne
pop
cmc
push
rcl
out
mov
jle
lahf
imul
fsubrs
adc
js
xchg
xchg
adc
push
adc
sub
daa
add
xchg
and
lea
loop
int3
push
mov
xchg
in
mov
lods
sub
pop
or
mov
js
add
jl
stc
lods
mov
clc
jns
sti
jmp
push
lahf
cli
mov
push
jae
ljmp
pusha
pushf
fcomps
sti
sbb
fimuls
sbb
push
enter
xor
stc
jo
jle
push
popa
stos
jno
inc
xchg
fs
push
and
popf
dec
push
sbb
lds
pop
adc
test
call
ret
sub
cmp
xor
or
nop
gs
fidivl
cmp
mov
mov
sub
imul
jle
out
push
push
mov
iret
js
pop
or
dec
cmpsb
jl
fucom
loopne
pop
popf
sbb
pop
pop
sub
xor
iret
push
jae
std
mov
inc
rcrb
stos
sbb
inc
ret
in
fwait
pop
in
movb
jp
inc
nop
mov
out
imul
cmp
jmp
sub
mov
pop
nop
enter
mov
cmp
jle
jb
xor
pop
lods
mov
jbe
cli
rol
insl
inc
xchg
loope
pop
sub
test
loop
scas
pop
push
lret
and
addl
sti
add
pop
jo
and
loop
push
inc
mov
testl
inc
pop
imul
pushf
leave
cs
mov
xchg
les
mov
xlat
fistps
add
lods
cwtl
xchg
inc
into
push
mov
cmc
sbb
sbb
loope
mov
into
adc
jae
mov
call
into
mov
insl
pop
fisubs
push
cmc
fistps
ss
dec
jno
les
js
inc
ret
sbb
loope
les
jge
xchg
rcrl
ja
xor
mov
sbb
xor
and
bound
xchg
pop
aad
fs
xchg
add
jg
cmc
pusha
push
mov
dec
call
inc
cmc
lea
push
sub
adc
idivl
sbb
mov
stos
mov
in
mov
rolb
cltd
fsubrl
pop
aam
arpl
sti
inc
arpl
jnp
mov
xchg
xor
xchg
cwtl
bound
xor
and
std
jge
adc
xlat
add
mov
cmpsb
xor
cwtl
inc
lock
insl
jbe
xchg
mov
xchg
cmp
or
sub
popa
adc
cmp
dec
xchg
jecxz
test
jg
test
mov
mov
xor
jnp
cmpsl
mov
popl
sbb
ljmp
dec
loop
mov
jge
hlt
add
test
and
xchg
mov
inc
mov
jmp
sbb
push
add
sub
cmp
cmp
shr
push
pop
jbe
inc
fwait
push
cs
pop
inc
mov
sarl
sub
mov
in
or
pop
adc
fisubrl
dec
adc
lds
test
das
push
dec
test
das
cmpl
aaa
insl
ret
sbb
call
lods
push
mov
push
andl
inc
push
add
icebp
and
sub
sub
aad
lret
cs
int3
in
mov
rcll
sbb
test
insb
jmp
or
jns
sub
in
adc
adc
or
mov
mov
loop
sahf
sub
push
and
ret
jne
dec
lret
adc
cmc
add
mov
adc
mov
lret
std
aaa
jae
in
lea
push
hlt
push
push
dec
jl
or
ret
mov
jge
outsb
sub
sbb
jmp
cld
lret
adc
xchg
popa
insl
rcll
popf
mov
in
mov
mov
ficompl
lret
test
add
sbb
imul
dec
jge,pn
int
sbb
outsl
jmp
cmc
mov
negl
je
push
mov
add
fiadds
gs
xorl
mov
cmp
xchg
push
add
dec
ficompl
jo
and
cltd
jp
cmp
aas
and
ficoms
ficoml
sub
mov
ja
and
pop
adc
xchg
stos
xor
xchg
stos
inc
loope
xor
jnp
movl
out
jle
mov
xchg
pop
enter
ss
sahf
push
lods
lahf
sbb
mov
jnp
adc
fiaddl
jg
fwait
cmpsb
and
iret
int
push
push
loope
les
mov
lahf
jp
sub
into
mov
cmp
push
add
sti
pop
pop
call
pop
out
jp
adc
xchg
outsb
outsl
nop
shll
aam
sub
xchg
fimull
imull
push
xchg
into
push
mov
push
shl
ficompl
lods
adc
jo
sub
je
dec
xor
push
aam
jmp
decb
dec
ret
xchg
jp
and
inc
dec
dec
lret
pop
fs
jle
js
aas
testl
loop
enter
inc
jnp
cmp
add
insl
pop
iret
jb
cmp
imul
in
mov
mov
lods
addr16
adc
imul
scas
imul
adc
xchg
cld
sbb
or
sbb
adc
dec
mov
xchg
mov
jb
mov
testl
xchg
repz
jne
cmp
arpl
dec
xlat
mov
nop
adc
icebp
jg
repz
out
dec
mov
lret
inc
or
cwtl
fisubs
shll
les
pop
cmp
jns
or
mov
inc
loopne
jmp
lahf
inc
xorl
das
jbe
xor
icebp
loop
jno
dec
jge
test
xchg
sub
aam
mov
jae
repnz
cmpb
popa
xchg
stos
dec
push
cmp
xlat
in
fsubrl
xchg
popf
stos
orl
sbb
sbb
add
add
inc
pop
ret
push
mov
sub
test
mov
and
nop
or
mov
loopne
jno
or
pusha
jo
jle
movsl
lods
aad
arpl
popa
xorb
shrb
scas
addb
out
sub
stos
das
in
lea
aas
jmp
jmp
iretw
dec
pop
cmp
add
xor
fcmove
xchg
dec
xor
mov
push
pop
stos
lds
popa
mov
fiaddl
or
rolb
mov
std
pop
imul
mov
xor
lret
sarl
jbe
rcrb
pop
data16
pop
rorb
stc
adc
pop
ljmp
movsb
xchg
repnz
xchg
data16
nop
dec
jno
mov
lret
push
fdiv
aas
fdivrl
repnz
in
inc
xchg
int3
mov
xlat
dec
movsb
and
imul
and
mov
mov
inc
xchg
dec
and
ss
icebp
jge
rclb
shll
test
xchg
xchg
push
sub
ja
sbb
xchg
loopne
jno
mov
adc
jno
add
adc
push
popa
mov
in
pop
fidivl
cmc
mov
xor
into
imul
fnstsw
add
inc
bound
ljmp
les
add
push
mov
cmp
sbbl
loop
push
push
dec
adc
push
adc
mov
out
mov
jno
lock
cmp
sar
pop
hlt
xor
ss
jo
mov
mov
scas
bound
xchg
test
pop
push
lods
cmpsl
mov
test
orl
cmp
inc
sbb
aaa
filds
push
push
es
mov
cmpsb
push
inc
pop
dec
jg
insl
stos
popl
xor
sbb
ds
lods
aas
outsl
test
test
dec
shll
or
lcall
and
push
jmp
xchg
jmp
mov
cwtl
jp
cmp
rolb
mov
jns
out
imul
outsb
enter
dec
push
lock
inc
cmp
mov
dec
repz
in
arpl
mov
pop
or
jb
popa
cmpsl
lahf
shrb
les
lret
mov
add
iret
mov
imul
push
imul
lods
call
mov
jno
jne
in
bt
sbb
loop
fisttpl
and
pop
stos
aad
xchg
loopne
sub
stos
adcl
pop
ljmp
stc
inc
mov
jne
call
jle
cwtl
pusha
or
ret
aam
or
mov
sarb
mov
sub
sub
dec
adc
das
add
xchg
jno
cmp
test
jae
popf
push
cwtl
add
outsb
sub
into
dec
xchg
xchg
xchg
push
add
icebp
jne
inc
sahf
in
enter
stc
out
lods
imul
xlat
movsl
mov
pop
jle
mov
lods
movb
aad
std
xchg
xchg
addr16
sbb
and
and
fldlg2
or
mov
pop
scas
mov
xchg
das
dec
dec
ficomps
add
divb
adc
ja
adc
mov
in
xlat
mov
or
sbb
mov
or
dec
pusha
lock
inc
loope
xchg
xlat
push
lea
fisttpl
adc
ljmp
incl
xchg
negl
cli
push
in
jns
pop
mov
mov
in
aad
mov
push
inc
inc
test
mov
push
in
mov
ljmp
cld
sbb
mul
mov
mov
std
inc
sub
in
addb
sub
ss
sbb
repnz
cltd
cli
fs
orl
push
dec
push
roll
sbb
mov
xchg
lods
rclb
negb
aaa
pop
mov
fsubl
pop
fwait
jne
icebp
push
test
mov
pop
sti
out
stc
mov
leave
pusha
in
fisubrl
inc
dec
subl
rorb
lcall
fwait
test
in
int
add
cwtl
mov
jo
loope
sbb
lcall
cld
shrl
mov
dec
mov
xor
push
cmp
scas
cmp
cwtl
xchg
lahf
jle
lea
jo
mov
dec
sbb
out
dec
addr16
sub
inc
frstor
inc
out
pop
mov
xchg
jbe
pop
pop
pop
rcr
jne
scas
add
push
insb
popf
pop
sub
dec
dec
pop
mov
nop
pop
loopne
mov
sub
test
fsubp
cmp
nop
stos
leave
and
lods
sbb
mov
adc
sub
sbbb
inc
mov
fadd
loop
shrb
int
out
lcall
popf
mov
mov
cmp
int3
lods
cmp
cmp
pop
sbb
shrl
or
pop
stos
nopl
ret
or
lds
stos
mov
je
add
iret
stc
pop
icebp
and
xchg
mov
mov
adc
mov
repnz
mov
cld
mov
lds
cmp
dec
jne
sarl
pop
xchg
inc
outsl
sbb
cmp
roll
int3
mov
clc
jb
dec
loop
mov
and
repnz
out
or
mov
repz
mov
mov
out
fildl
or
push
add
mov
sub
sbb
mov
into
xchg
push
mov
shll
sub
jmp
loopne
mov
gs
jp
pop
cmp
mov
mov
cld
ret
lds
sub
cmp
or
dec
inc
stos
inc
hlt
dec
ss
dec
mov
movsl
ja
into
jmp
sub
lea
insb
stos
sub
jnp
and
xchg
outsl
jmp
stos
stos
and
lea
outsl
in
in
jbe
sbb
cmp
into
pop
std
sahf
hlt
sub
push
mov
xor
mov
gs
jp
loopne
dec
jp
or
scas
push
dec
imul
stos
cmp
xchg
pop
xor
int
std
jb
pop
dec
mov
cmp
xchg
push
repz
ficoms
xchg
lock
addr16
push
inc
jnp
mov
stos
mov
scas
in
popa
je
pop
inc
jnp
xor
into
fs
add
add
xchg
mov
into
imul
pop
xor
cmp
sub
sub
inc
cmp
push
out
int
push
fucomp
mov
dec
fimuls
cmpb
out
add
inc
dec
xchg
mov
pop
add
out
or
clc
aam
sbb
loop
inc
loop
cmp
mov
fst
mov
subl
pop
imul
fildl
pop
lret
inc
fimull
xor
inc
xor
or
push
fwait
js,pn
ret
xchg
xlat
das
push
idiv
mov
test
jl
mov
addr16
ss
jnp
inc
loope
daa
jae
inc
in
cmp
add
dec
adc
mov
aaa
jns
popa
idivl
xor
add
and
lods
movsl
adc
sbb
dec
push
clc
mov
add
and
mov
lcall
out
mov
mov
inc
xchg
adc
and
sbb
jmp
inc
pop
adc
sub
xchg
and
and
sbb
lea
dec
pop
inc
or
sub
pop
lret
into
mov
test
daa
jl
ja
icebp
and
loope
test
pop
adc
cs
shr
pop
pusha
mov
add
dec
cmp
push
sbb
std
repnz
loopne
push
xchg
dec
xchg
lods
inc
add
fisubrl
cmpsl
sub
fadd
pop
int
sbb
fmull
push
sbb
push
pop
stos
mov
cld
jno
mov
inc
dec
pop
push
sarl
pop
in
into
add
mov
sti
or
cmc
lret
inc
mov
ret
loop
push
fwait
mov
pop
mov
daa
lret
adc
loop
into
inc
repnz
test
loopne
pop
vfrczsd
mov
jg
pushf
sub
mov
jo
mov
xchg
stc
inc
call
in
or
mov
add
lods
adc
push
cmp
cmp
pop
sbb
inc
add
icebp
adc
mov
mov
test
rcrl
push
fnstsw
xorl
test
int
sti
add
adc
hlt
dec
jo
cmp
fdivr
int3
cwtl
xor
inc
insb
out
ja
push
cmp
sbb
rol
stos
lret
ret
stc
cmp
adc
sub
pop
arpl
ja
sti
rcrb
rcrl
fsubrl
adc
fs
cmpsl
cmp
arpl
into
or
stc
nop
jg
jl
insb
int
loope
adc
xchg
call
sbb
mov
inc
cli
mov
mov
mov
ss
sbb
push
cmp
adc
or
sbb
popa
mov
out
ja
push
push
xchg
mov
cmp
ret
mov
pop
push
repnz
subb
loopne
movsb
xor
cltd
and
dec
movsl
fcoml
mov
fisubrs
out
js
xchg
fwait
pop
push
addr16
jmp
xor
scas
jbe
popf
cmp
hlt
push
jbe
movsl
int3
imul
sbb
push
aam
sbb
xchg
mov
daa
int
adc
xor
mov
jl
jg
push
mov
and
mov
pop
pop
sub
cvtps2pd
xchg
adc
lods
jno
and
ficomps
and
inc
add
jp
repnz
xchg
sbb
pop
add
xchg
xchg
xor
xor
daa
adc
jecxz
sub
sub
divl
popf
fidivrl
clc
push
pop
cmpsb
std
sti
imull
mov
jns
xor
adc
or
mov
xchg
imul
scas
mov
push
cmp
and
sti
int
inc
and
movsb
xor
mov
sub
mov
sbb
and
je
lcall
inc
pushf
lret
sbb
decb
cwtl
shrl
aaa
pop
aam
pop
subb
push
mov
xor
std
jb
jne
repz
sti
jne
xchg
lock
fcompl
jp
outsl
pop
dec
mov
jge
cmpsl
test
shll
mov
cmpl
jmp
test
outsb
das
pop
inc
mov
pop
mov
mov
loopne
mov
pop
stos
mov
sti
mov
or
mov
push
cmp
cmpsb
fnstenv
xlat
mov
push
enter
inc
repz
ret
xchg
in
cmp
aam
adc
loopne
inc
dec
mov
popf
xchg
sub
stos
cltd
or
jno
test
out
xchg
mov
push
popa
or
mov
jae
mov
sbb
push
lods
aad
in
fldcw
add
jns
add
lods
mov
jae
ljmp
stos
cmp
outsb
mov
push
ret
dec
stos
pop
inc
and
push
cmp
sub
adc
cmp
xor
sarl
xchg
lahf
lret
mov
sarb
mov
push
add
mov
mull
fdivr
call
jo
push
jg
fildl
sub
sahf
or
out
xor
lahf
and
dec
sub
test
or
sub
neg
xchg
push
inc
lahf
repnz
in
flds
repnz
push
fimuls
push
jmp
mov
sti
insb
int3
jne
icebp
push
adc
fwait
and
das
sbb
int
rclb
mov
or
add
stos
jecxz
jno
jo
jl
mov
ss
inc
in
leave
js
jne
mov
fcomi
inc
sahf
mov
xchg
fwait
or
mov
dec
dec
push
pop
out
aad
mov
xor
sbb
das
icebp
push
fs
sbb
mov
cmc
adc
pusha
or
sub
push
dec
mov
push
xchg
negb
adc
mov
add
xchg
pop
jg
cli
mov
lock
jp
lret
jl
int
fsubl
pop
imul
clc
lods
xor
js
leave
fwait
xchg
jns
and
add
mov
sbb
pusha
xor
sbb
in
inc
xchg
inc
ret
sbb
subl
in
sbb
xchg
dec
adc
cli
inc
fbstp
xor
lahf
ja
xchg
je
scas
xor
push
cmp
dec
push
xchg
adc
aas
scas
daa
leave
adc
xchg
mov
or
mov
js
inc
dec
outsl
or
outsl
dec
adc
xchg
pop
push
adc
mov
int
jae
repz
cmp
ret
in
add
dec
rep
xchg
je
imul
clc
cs
loopne
pop
pop
outsb
cmpsl
pop
pop
push
xlat
movsl
push
pusha
aaa
shlb
leave
add
and
pop
aas
pop
jnp
addl
dec
ds
lcall
leave
cmp
cmp
pop
call
pop
outsb
in
into
pop
inc
hlt
and
aas
mov
fists
test
pop
pop
and
leave
imul
pop
mov
fucom
xchg
xchg
insl
jae
bound
pop
test
dec
sbb
cmp
mov
mov
sub
pop
cmc
or
cmc
pop
cwtl
sub
push
fsubs
inc
cltd
mov
lahf
add
data16
or
and
xchg
cltd
mov
push
and
and
insb
or
ret
and
pop
or
mov
or
cmc
jge
orb
std
and
icebp
jl
sbb
or
stos
aam
sti
or
or
xor
dec
push
mov
xor
xor
or
jg
les
jg
mov
call
in
rcll
cmp
shlb
lahf
xchg
and
stos
imul
xchg
pop
sub
or
aas
sbb
fs
mov
in
xchg
lods
cmpsl
sbb
call
and
in
aam
pop
inc
cmp
push
lcall
stos
or
cs
cmp
movsl
sub
iret
fbstp
adc
inc
xchg
fstpt
mov
addr16
add
mov
push
sbb
add
stc
je
mov
push
pop
cmp
xchg
and
std
into
cmp
xchg
sub
cmpsl
ret
mov
fiadds
arpl
roll
fs
fidivrl
outsb
dec
xchg
xor
sysenter
sbb
pop
insl
xchg
xchg
out
pusha
rolb
pushf
inc
or
ds
lcall
mov
jbe
xchg
inc
sbbb
or
clc
sbb
aaa
push
add
add
fcompl
or
push
int3
jns
mov
add
ja
ret
cld
mov
repnz
pop
cltd
fistpll
in
push
jg
popf
push
sbb
pop
push
fcomps
je
icebp
ja
fildll
push
pop
loope
jecxz
dec
rcll
mov
std
lret
fadds
or
pushf
mov
pop
and
scas
cmp
cmp
mov
jns
sbb
or
idivb
mov
sub
dec
test
mov
cli
ret
push
arpl
stc
mov
adc
cltd
sbb
sub
cli
in
pop
gs
mov
stc
sbb
mov
add
pop
mov
ss
mov
add
ret
test
jns
and
add
shrb
mov
add
jo
fwait
xor
pushf
mov
outsb
sub
loope
mov
das
loop
adcb
aas
or
cmpsl
divl
mov
sub
cmc
dec
incl
xchg
das
mov
and
push
mov
mov
fs
mov
xchg
adc
lret
leave
jae
out
jp
std
jns
and
xor
int3
scas
ret
sbb
loopne
mov
lds
lret
push
sbb
lea
imull
jle
cwtl
mull
sub
push
jno
and
insl
rcll
jge
jnp
mov
push
lret
adc
xchg
or
andb
sub
inc
sub
repz
inc
pop
fists
jns
stos
push
sahf
ja
adc
add
push
xchg
test
sub
sub
push
mov
jno
lea
lcall
pop
cld
mov
mov
test
push
mov
pop
xchg
pop
scas
lock
addr16
fdivs
inc
lret
sub
push
mov
or
xchg
xor
insb
jle
rcl
pop
cwtl
mov
adc
xor
pop
pop
push
out
js
test
xchg
lds
popa
xorl
xchg
jl
repnz
cmp
repz
fdivrs
push
add
push
lods
sub
xchg
or
out
cmpsl
test
jmp
mov
stos
lods
sahf
jb
mov
and
imul
fildll
jmp
scas
scas
lret
xor
notb
add
or
das
mov
int
mov
hlt
lcall
inc
push
pop
dec
ror
jge
fwait
popa
call
pop
cmpsb
mov
movsl
cmp
mov
jne
rorl
mov
push
in
aam
and
adc
imul
mov
out
cmc
jge
in
xchg
dec
dec
mov
cmp
pop
shrl
ja
xor
xchg
popa
add
or
push
xchg
in
add
out
inc
and
xlat
loopne
popf
push
sub
into
out
pop
sub
and
pop
and
push
icebp
imul
lahf
mov
xor
loopne
js
sub
out
add
aad
mov
mov
out
aaa
cmpsl
cmp
les
shr
jb
mov
cmp
push
fwait
xchg
popa
arpl
cmp
or
inc
pop
sub
jnp
shr
shll
subb
lret
ljmp
cmp
mov
in
fs
gs
nop
or
add
imul
pop
in
sub
pop
test
mov
aam
in
stos
jge
leave
iret
pop
dec
rcll
jecxz
cmp
mov
inc
mov
inc
das
stos
das
inc
sub
mov
mov
mov
out
ja
repz
mov
mov
imul
rorb
scas
xor
fimuls
out
addr16
cmp
ror
pop
out
insb
sarl
call
xchg
mov
push
pop
mov
sbb
aam
out
dec
fisubl
cmp
pop
inc
fmulp
mov
daa
mov
mov
cld
je
or
mov
decl
shrb
and
rorl
imul
aam
ds
lahf
xor
pusha
repz
push
ret
xchg
adc
mov
push
std
bound
xchg
cmp
xchg
jl
push
cmp
add
sti
cwtl
push
nop
cltd
dec
les
cli
mov
xor
daa
xchg
movsl
in
hlt
fldl
and
inc
pop
andl
sbb
les
scas
push
imul
pop
aas
push
fstpl
xor
cld
xchg
jns
testb
mov
xor
outsl
clc
sbb
jb
jae
mov
jns
sub
add
pusha
and
pusha
inc
inc
jns
pop
pop
jle
sub
jns
add
movsb
fmul
in
xchg
fdivrl
lret
inc
ljmp
and
mov
xchg
cs
fcomps
fstpt
jg
push
pop
jle
or
fstpt
mov
fildl
stc
cmp
imul
aad
sub
fisttpll
or
or
aaa
in
push
mov
shll
sub
call
cmpsb
cmc
fimull
aam
ds
lret
ret
mov
cmp
lds
mov
adc
outsl
ds
inc
inc
dec
cmp
xchg
aas
push
push
sbb
mov
dec
sbb
and
jmp
push
pop
je
fldenv
xor
add
stos
push
insb
stos
mov
push
cmpsl
popf
cmp
mov
adc
inc
jae
nop
mov
and
xchg
ljmp
dec
and
loopne
subl
sbbl
dec
sbb
fcom
mov
cmpsl
aam
xchg
iret
jnp
xchg
in
inc
idivb
mov
adc
mov
mov
movsb
lea
mov
cwtl
in
aam
mov
push
mov
dec
adc
fisubrl
sbb
jl
shl
out
and
stc
xor
mov
lods
lods
mov
out
rcr
jae
repnz
cmp
jne
cli
fcoms
pop
int3
jnp
jge
inc
or
xor
ja
add
lds
jnp
push
jae
leave
add
fs
lahf
outsb
push
rorb
mov
dec
lcall
pop
rolb
aad
xor
mov
test
xchg
sub
mov
push
dec
inc
lods
cwtl
sub
pop
adc
and
ds
dec
mov
sbb
xlat
cmp
adc
jle
dec
dec
jle
stos
clc
imul
mov
inc
mov
hlt
clc
stc
xchg
pusha
sbb
dec
adc
lahf
pop
shlb
hlt
inc
mov
or
and
xor
sbb
sbb
test
sar
xor
popa
jns
sub
mov
clc
scas
leave
mov
or
aam
dec
jo
mov
xchg
xchg
or
movsl
pop
gs
or
or
mov
stos
addb
push
outsl
ja
shlb
xchg
mov
cwtl
les
cmpsb
add
aaa
xor
stos
push
mov
add
ljmp
pop
mov
pop
or
mov
mov
inc
sarb
sbb
cmc
stc
sahf
dec
out
xlat
sub
push
fs
xor
out
jmp
or
imul
adc
insl
mov
jg
mov
jg
addr16
aad
xor
mov
dec
repz
int3
aaa
pop
cltd
and
js
sub
push
and
push
hlt
push
jge
push
pusha
push
or
nop
xchg
jne
iret
sbb
incb
xchg
pop
test
es
adc
cs
push
mov
pop
mov
in
or
and
adc
pushf
xor
mov
sub
sub
xor
daa
pop
push
xchg
jbe
imul
inc
mov
fistps
leave
aas
inc
xor
pop
out
pop
fistps
push
dec
stos
cmp
fucomi
addr16
mov
cmp
sbb
inc
lods
mov
mov
xlat
mov
push
pop
hlt
das
jmp
shll
pop
clc
ds
fs
xchg
xor
rorl
ret
or
push
pop
jo
sbb
fst
adc
fs
stos
or
mov
xor
pop
xor
js
sbbb
push
repz
test
leave
jl
inc
cmp
pop
in
rcrl
push
dec
mov
add
xor
shlb
sub
dec
xor
lds
mov
sbb
mov
fidivrs
imul
pop
pushf
xchg
and
or
js
in
dec
repz
xchg
xor
test
adcl
mov
ret
and
fxch
mov
and
adc
pusha
mov
pop
movsl
mov
mov
cmp
cli
lret
and
adc
jg
fsub
aam
fs
mov
fsts
fs
sub
cmpsl
lods
fcomip
bound
orl
pop
vandpd
mov
xchg
adcb
mov
inc
daa
mov
in
loope
insb
push
pusha
test
lret
daa
add
cltd
stc
xor
lods
sub
filds
out
neg
xchg
or
lret
stos
adc
and
sarb
xchg
add
sahf
mov
lods
lock
push
mov
jle
aam
cmpsl
xor
xchg
dec
lods
lds
jl
jmp
gs
dec
add
mov
cmp
inc
ficoml
xchg
push
mov
iret
call
adcl
adcb
icebp
jb
gs
sbb
sti
inc
jl
mov
leave
ds
fiadds
push
or
sbb
test
inc
mov
outsb
and
mov
aas
stos
cmp
scas
cmp
xor
mov
xor
sub
inc
jb
sbb
cmp
mov
adc
daa
call
sub
xor
ret
sbb
mov
inc
movsl
out
stc
jns
popf
into
add
inc
dec
dec
sbb
and
in
mov
outsb
dec
jns
xor
dec
jl
mov
mov
push
xchg
inc
inc
mov
sbb
shrl
loope
xchg
es
adc
jnp
aam
xor
leave
sbb
in
xor
movsb
pop
jne
mov
ja
add
or
push
pusha
and
xor
rcrb
data16
inc
fdivs
pusha
loope
leavew
mov
rcll
jae
out
sbb
dec
addb
inc
inc
fnstsw
fnsave
jl
gs
push
enter
mov
dec
xor
mov
test
mov
testl
ret
push
cmpsb
ss
cmpsl
mov
lret
push
cli
inc
aam
jl
rcrb
ds
jl
xchg
sub
cmp
std
pop
loop
xchg
insl
pop
and
and
pop
ret
sbbl
xor
jns
mov
push
movsl
leave
xchg
jae
out
hlt
sbb
fiadds
pop
dec
pop
dec
adc
dec
adc
sahf
jle
lea
pop
insb
movsb
out
push
xor
sahf
repz
sbb
xor
negb
jne
xor
test
pop
push
pop
xchg
jbe
sbb
stc
andl
shrl
pop
es
mov
dec
mov
lods
mov
xchg
push
mov
sbb
daa
mov
dec
mov
adcl
xchg
movsl
and
dec
cmp
call
or
push
mov
push
fnstcw
and
adc
push
inc
lea
push
cwtl
inc
iret
repnz
mov
mov
out
sub
std
in
and
or
cmpsl
jge
mov
pop
out
loopne
pop
fwait
push
cli
pop
cmp
scas
jmp
mov
sub
call
loop
popf
enter
je
fs
aad
sbb
xor
int3
ds
xchg
xchg
stc
mov
sub
add
push
cltd
sbb
popa
xchg
bound
out
pop
subb
and
xchg
shl
mov
xor
or
push
sbb
sbb
ficoms
fcompl
xor
mov
aam
pop
test
mov
arpl
imul
in
sub
mov
sbb
sti
mov
cmpsl
cmc
mov
mov
rep
add
sub
dec
xchg
fstpl
jmp
jle
out
sbb
mov
cs
movsb
inc
inc
dec
test
mov
jo
pop
imul
insl
fiaddl
push
cli
mov
dec
pop
adc
aam
xchg
cs
addr16
inc
mov
out
xchg
push
clc
mov
rcrb
aaa
sub
lahf
inc
sti
cmp
pop
cmp
mov
pop
in
push
or
push
ret
cltd
fs
mov
cli
xlat
mov
imul
mov
ret
jmp
out
and
add
jno
cmpsb
push
hlt
mov
xchg
mov
or
push
push
fistl
pop
outsl
in
adc
mov
loope
stos
jecxz
add
jecxz
jmp
push
enter
mov
scas
sbbl
mov
and
movsl
push
stos
shl
sub
psllw
and
test
pusha
cltd
shlb
cld
roll
psubsw
jb
cmpsb
sahf
mov
jo
data16
lock
jbe
xchg
mov
movsl
fsubrl
xor
scas
dec
inc
push
sbb
negb
mov
orb
mov
data16
inc
add
ret
aad
lcall
mov
and
jge
sti
dec
aas
adc
cmpsb
jg
nop
outsb
imul
xchg
jp
roll
jne
pusha
loop
sbb
into
jb
xor
int
or
or
scas
pop
enter
sbb
push
insl
xor
xor
cwtl
sahf
pop
push
in
scas
sub
mov
pop
outsl
rcrl
es
inc
jl
pop
repz
das
jae
stos
mov
cld
mov
xor
stc
mov
loop
or
inc
adc
push
push
push
test
sub
pop
jmp
jp
jmp
xchg
aad
fadds
sti
dec
xchg
loopne
aam
mov
ds
dec
jmp
aad
shrl
and
mov
dec
cli
xchg
xchg
inc
shll
sbb
js
movl
mov
out
sbb
push
mov
pop
mov
pop
adc
aam
mov
jns
push
lret
cmpb
insl
xlat
or
dec
pop
test
cld
jne
or
hlt
mov
fdiv
outsb
popa
icebp
daa
sar
fnstcw
test
cmc
mov
dec
inc
arpl
adc
enter
loopne
pop
cltd
stos
ja
and
jg
cmp
lahf
xchg
dec
xor
inc
call
and
loope
inc
repz
out
imul
daa
fwait
insl
inc
or
cltd
mov
fnstcw
icebp
jge
push
fwait
jae
mov
fwait
jae
cmp
mov
lds
insb
fistps
jp
iret
and
stc
and
cltd
sub
push
jmp
clc
incb
inc
mov
dec
inc
and
dec
ret
shrl
popf
mov
jmp
popa
ret
mov
mov
dec
hlt
test
jns
jmp
dec
mov
cmp
push
push
xchg
fistpll
std
mov
dec
sub
test
xchg
cmpsb
and
loop
rcl
mov
imul
fiadds
scas
ret
sbb
sub
aam
movl
in
aaa
mov
ss
xlat
out
lock
xor
or
sbb
mov
imul
add
or
inc
jns
cmpsl
rcl
mov
jo
insb
push
daa
clc
test
mov
jge
fldenv
inc
sarl
mov
jg
and
out
div
jg
xchg
es
mov
fcmovb
imul
dec
mov
push
pushf
xchg
daa
bnd
outsb
dec
cmp
inc
adc
aaa
nop
fdivs
mov
xor
sub
mov
jo
lret
movsl
pop
inc
cs
mov
jle
dec
add
mov
or
pushf
dec
mov
push
ljmp
push
mov
dec
adc
rolb
mov
mov
fcmovu
cmc
movsb
repz
pop
mov
xor
jmp
inc
nop
cmp
pop
or
rcrb
mov
push
jge
pop
cld
push
xor
ficoml
ds
pop
les
or
lret
cmp
std
lock
arpl
scas
pop
movsl
pop
dec
adc
enter
daa
inc
adc
mov
aas
push
jno
in
fdiv
xchg
mov
push
call
ja
out
stos
stos
pop
inc
enter
icebp
jl
loope
addr16
andb
pop
or
in
xlat
push
lock
negl
mov
out
aad
das
or
sarl
not
fsubr
xor
icebp
push
leave
sub
pop
and
xor
cmpsl
mov
cltd
mov
stc
jle
loope
mov
mov
test
lret
inc
sub
loope
add
fwait
lds
fisubs
push
inc
sub
inc
fmuls
pop
lods
js
jns
xor
iret
xchg
pop
dec
xchg
int
adc
pusha
addr16
shll
inc
hlt
cmp
inc
in
pop
lret
add
pop
js
dec
xchg
inc
push
arpl
push
add
scas
pop
jbe
lahf
xor
scas
inc
arpl
je
lock
mov
dec
cmpsl
popa
or
std
jns
mov
mov
imul
int3
jecxz
push
mov
ss
mov
sbb
pusha
mov
add
mov
cmpsl
or
popa
out
pop
in
std
and
cmp
fisttpll
cld
xchg
lods
inc
aaa
push
cmp
and
push
adc
das
cmp
dec
insl
xor
xchg
pusha
imul
cli
loopne
lahf
mov
xchg
jb
int3
shlb
mov
sub
aam
incl
out
orl
jl
push
test
jle
movsb
ja
adc
sti
daa
inc
sarb
jmp
stc
add
cli
mov
dec
push
xchg
lods
sub
inc
int
andl
lret
repz
ret
push
pop
xchg
jg
pop
xchg
lds
pop
cmp
int3
enter
or
mov
inc
mov
pop
subb
xchg
in
les
sub
mov
repnz
lahf
std
mov
cmp
push
inc
pop
mov
loopne
adc
loop
jl
fs
popf
push
and
lret
aaa
jb
xlat
or
pop
or
rcl
sarb
int3
lock
mov
out
ret
ret
icebp
sub
pop
mov
adc
sbb
in
inc
or
popw
movsl
mov
or
imul
cltd
mov
or
xor
ret
cs
fbld
stos
repnz
testl
sub
mov
cmpl
mov
cmc
adc
out
leave
jmp
mov
call
aas
xor
mov
cmpsb
mov
mov
pop
mov
aad
sbb
pop
lods
test
dec
loop
mov
pop
push
je
out
inc
les
shll
inc
shlb
pusha
icebp
mov
or
pop
push
nop
sbbl
cwtl
or
in
fidivl
xchg
sbb
jae
xorb
xor
adc
scas
test
test
out
sbb
sub
mov
sub
dec
scas
fbstp
js
and
std
xor
xor
push
ja
add
add
and
lea
add
mov
sub
mov
sarl
adc
cmp
fucomp
sbb
insl
mov
jp
and
int3
sub
int3
sbb
insb
sbb
sti
pop
dec
not
push
xchg
stos
mov
dec
inc
sub
xchg
add
repnz
pop
jmp
arpl
jno
push
lcall
out
in
icebp
cmp
aas
add
addb
popl
in
pop
xor
add
mov
call
pop
mov
lcall
pop
popa
cli
mov
rolb
gs
cmpsl
aad
xor
pop
stc
adc
add
xchg
movsb
imul
dec
add
jnp
lcall
dec
adc
fld
and
dec
insl
push
sbbl
rorl
pop
je
lods
adc
lock
add
mov
add
push
bound
lock
int3
out
mov
cmc
inc
xor
cwtl
pslld
not
fsubs
inc
sti
jmp
add
lcall
ljmp
loopne
test
popa
lods
lret
outsb
mov
cltd
test
shlb
shrl
push
jp
scas
pop
xchg
fmull
repz
fbstp
pop
mov
stos
out
cs
hlt
das
fcompl
dec
rorb
mov
xchg
jmp
push
inc
dec
dec
decl
fcom
or
fistpl
pop
and
pop
cmc
roll
ljmp
clc
leave
into
dec
outsl
hlt
repz
and
sbb
or
sbb
repz
add
mov
mov
mov
cwtl
cmc
xor
mov
call
jbe
pop
repnz
clc
mov
fstps
sbb
cli
or
add
jbe
nop
aaa
popl
stos
hlt
nop
xlat
xchg
int3
aad
mov
mov
rcl
lea
pop
mov
jo
into
icebp
cmp
loopne
or
mov
fmull
fs
push
data16
ss
hlt
mov
je
int
mov
insb
scas
adc
mov
xchg
data16
xor
or
ja
iret
outsb
mov
push
lds
test
mov
mov
mov
cmc
mov
test
xor
mov
xchg
push
add
adc
adc
sub
daa
shrl
arpl
loope
enter
mov
jmp
mov
dec
xchg
inc
int
std
jecxz
stos
and
xchg
in
outsl
inc
sbbl
jmp
stos
and
xor
out
jle
jmp
ljmp
fwait
mov
in
pop
add
pushf
pop
sbb
inc
mov
jne
pop
mov
push
cwtl
jge
ret
fdivrl
mov
mov
rcrl
enter
pushf
adc
mov
arpl
test
add
mov
mov
sbb
pop
sti
xor
mov
fcoms
sbb
mov
sub
adc
insl
push
or
xchg
jl
cmp
daa
sbb
testl
mov
add
mov
fdivrs
lahf
ljmp
push
nop
ret
pop
dec
add
pop
int
ja
sti
inc
and
daa
pop
test
inc
mov
sbb
and
sbb
cwtl
das
sahf
outsb
scas
mov
xor
in
and
mov
mov
mov
cmp
mov
jl
xchg
mov
push
xchg
setno
scas
sub
jge
adc
lahf
pop
shll
rorl
xchg
nop
jnp
popf
add
sti
xchg
pop
scas
das
lods
fstps
leave
and
mov
pop
xchg
push
adc
jge
stc
pop
pop
mov
ljmp
into
add
call
adc
enter
daa
xor
and
icebp
sbb
test
movsb
mov
movsb
adc
lods
dec
inc
clc
mov
mov
jo
cltd
sbb
rol
sbb
loopne
movsl
sub
add
sub
xchg
push
enter
inc
adc
cwtl
mov
sahf
mov
sub
mov
xchg
mov
fs
outsb
shll
das
roll
cmpsb
mov
inc
fsubs
sbb
lods
push
xor
inc
sub
mov
ret
and
mov
sub
les
add
lcall
inc
mov
outsl
pop
inc
insb
xchg
loop
stos
push
xor
dec
jns
cmc
add
loopne
fsubl
dec
mov
ds
popa
fildl
clc
rcrl
add
imul
inc
lret
xchg
mov
cld
divb
into
pop
sbb
rolb
dec
push
jmp
jmp
push
lret
sti
lcall
stc
push
js
out
sub
mov
in
fiaddl
and
jmp
repnz
fistpl
pop
popa
or
ss
xchg
stos
push
icebp
daa
adc
divb
loop
popa
adcl
aam
pop
nop
mov
push
aaa
push
pusha
fstpt
popf
cld
mov
loopne
cwtl
pop
fdecstp
dec
sbb
jae
dec
es
divb
pop
xchg
dec
cmp
pop
outsb
xlat
sbb
add
jg
sbb
je
sbb
mov
int3
call
hlt
ret
fidivl
loopne
mov
icebp
aas
xorl
dec
cld
inc
or
ds
stos
or
or
fidivs
out
pop
sbb
arpl
pop
in
xchg
ljmp
jo
icebp
sub
xor
sarb
in
pop
sbb
nop
push
cmp
fnsave
and
mov
mov
ud1
or
dec
mov
test
ljmp
push
mov
lcall
stos
scas
clc
popf
or
inc
fisttps
cmp
sbb
add
jle
xor
shrb
sbb
jbe
ret
test
lcall
mov
pushf
std
repz
fs
jp
or
and
shrb
pop
daa
mov
int
add
sub
movsb
fadd
repz
xchg
test
push
cld
xchg
lcall
and
pop
sub
pop
ja
loop
aaa
or
std
push
lret
sbb
mov
loope
outsl
fdivs
jns
xchg
cltd
mov
xchg
pop
stos
pop
inc
shll
jns
or
and
add
sbb
adc
cmp
hlt
and
fsubl
cltd
movsb
push
and
jo
sub
jb
test
xchg
sub
ja
pop
in
jl
incb
xor
stos
mov
mov
inc
outsb
and
loopne
dec
ss
jp
mov
xchg
add
adc
adc
scas
push
mov
xchg
cmp
ljmp
adc
sub
loope
xchg
mov
mov
sbb
xchg
pop
adc
les
outsl
repnz
cmp
sbb
pop
mov
add
jl
add
cmp
fmulp
sbb
mov
ret
pop
sub
enter
and
out
in
sbb
mov
inc
mov
enter
insl
inc
lds
cmp
adc
mov
sbb
mov
fldln2
les
out
ljmp
and
mov
int3
ror
push
sbb
pop
push
ret
xchg
sbb
cmc
lds
cmp
mov
test
rclb
repz
mov
mov
clc
pop
xlat
cmp
in
sub
faddl
and
sarl
movsl
jl
sarl
loop
aad
and
pop
shr
cmp
testb
lods
xchg
dec
pop
movsl
sub
mov
fwait
cmp
inc
nop
push
cmpsl
cltd
jp
and
push
jne
inc
pop
sbb
loopne
inc
stos
inc
push
fnsave
and
ss
adc
insl
out
cmp
mov
lods
cmc
ds
push
xor
sub
add
inc
lret
out
addb
fwait
mov
inc
mov
mov
shrb
sub
scas
scas
sti
bound
sbb
pop
sbb
mov
adc
es
outsl
or
mov
cmpsl
repz
adc
shrl
stos
and
and
arpl
lds
imul
scas
sub
dec
fmull
mov
jle
inc
mov
mov
add
mov
mov
xchg
dec
cmpsl
nop
outsl
imull
or
or
xchg
cmc
pop
cmpsb
mov
sub
enter
int3
pushf
xchg
out
pop
mov
xor
call
xor
jle
stos
cs
or
outsl
mov
ret
aam
xchg
in
push
dec
mov
sub
icebp
mov
jb
ja
add
inc
add
aas
mov
jne
test
add
test
cld
sbb
or
or
cmpsl
ss
inc
mov
adc
das
es
add
enter
cwtl
mov
rolb
push
mov
xlat
hlt
dec
xor
jo
out
or
pop
dec
adc
add
addb
or
xlat
imul
jbe
movsb
loop
push
mov
and
addr16
movsl
xor
push
fildll
mov
insb
stos
rclb
add
mov
push
gs
jmp
imul
sub
div
xchg
inc
adc
mov
fidivrl
xchg
xchg
shlb
adc
frstor
hlt
scas
leave
faddp
push
sti
int
pavgw
sbb
ret
aaa
lods
xchg
es
repnz
aas
cmp
aaa
mov
dec
and
not
aas
push
and
in
pop
ja
fstpt
stc
loope
aam
aad
push
bound
jmp
dec
mov
filds
pop
lahf
inc
cmp
mov
test
outsb
xchg
aas
mov
cmp
pushf
test
gs
das
cmpsb
and
add
cmovno
push
sti
lret
mov
pop
fwait
popa
cld
add
repnz
mov
test
mov
cmp
pop
add
push
into
divl
cmp
jmp
push
push
inc
idivl
or
int3
xchg
cli
dec
fstpl
mov
xchg
mov
bound
sbb
insb
outsl
pusha
aaa
into
xorb
scas
adc
xor
mov
or
scas
inc
sub
sub
adc
inc
movsl
cmpsb
xor
add
lret
inc
inc
cmpl
cmp
arpl
daa
mov
cli
pop
jbe
adc
outsb
push
jmp
in
xor
or
and
decl
dec
push
mov
mov
adc
shl
sub
xchg
out
es
jg
jns
lods
mov
cld
or
sbb
mov
ret
dec
pop
int
mov
adcl
dec
ds
cmp
je
and
dec
test
jbe
push
scas
inc
fisttpl
int3
xlat
ret
xor
loope
cmp
pushf
daa
pop
sub
adc
adc
fwait
addr16
mov
jne
scas
lret
mov
cmp
cwtl
mov
pop
sub
hlt
mov
aad
repnz
sub
jle
sbb
sub
mov
jp
mov
xlat
cmp
je
mov
adc
mov
hlt
mov
divb
xor
xchg
call
mov
jmp
inc
mov
call
mulb
push
jge
xchg
aaa
sub
sbb
in
int
cmp
scas
call
jge
into
add
aam
jns
cmpsb
mov
push
pusha
sbb
jg
sbb
or
shlb
clc
rcrl
ficoml
mov
xchg
adc
cmp
xor
vmovups
outsb
sub
push
scas
popa
outsb
lahf
movsb
lods
jno
push
cwtl
push
lea
add
sub
loop
xlat
cmc
in
idivb
lds
xchg
mov
adc
xor
mov
mov
scas
test
std
mov
xchg
jne
cs
imul
fcomip
mov
movsb
mov
imul
xor
jmp
push
jp
push
mov
push
test
enter
pop
lret
test
sbb
adc
mov
pop
mov
and
lret
inc
cmp
sub
cmp
mov
test
pop
ds
dec
icebp
sbb
cmp
test
icebp
ficoms
pop
std
orb
push
int3
stos
xor
test
das
xchg
je
scas
adc
pop
mov
das
mov
pop
xchg
aad
repnz
mov
iret
sbb
pop
xor
enter
xor
cs
xor
fcmovb
test
inc
aad
inc
int
cmp
mov
dec
inc
in
sub
test
mov
into
aam
adc
int3
dec
shlb
ret
lcall
into
mov
mov
shrb
jne
or
stos
ja
orl
bound
mov
sub
adc
cmp
daa
pop
push
and
das
fbld
mov
push
hlt
sbb
movl
mov
mov
push
add
push
addr16
or
dec
inc
std
push
xchg
pop
pop
mov
jl
sbb
xor
pop
xchg
cltd
dec
xor
pop
inc
in
pop
mov
add
sub
shlb
out
sbb
fdivs
jl
shrl
dec
xchg
arpl
gs
daa
loop
shl
shl
fldenv
pop
cmp
inc
js
jbe
js
mov
or
dec
addr16
fimuls
inc
aad
adc
dec
push
cmp
dec
popa
or
daa
test
jb
into
mov
leave
pop
add
mov
insl
outsl
sbb
add
loope
test
mov
jge
and
out
xor
fiaddl
aad
push
push
pop
xlat
leave
fbld
cmp
imul
adc
fwait
insl
test
xchg
lcall
cmp
fsubr
push
sbb
ja
xor
sbb
mov
inc
out
mov
xchg
rcll
push
hlt
lds
mov
dec
sub
mov
mov
and
mov
and
add
pushf
push
fcomps
jmp
filds
loopne
push
cmp
sub
adc
jno
ret
or
adc
int3
sub
mov
mov
jmp
popa
cmp
mov
jle
inc
mov
jnp
rcrb
push
dec
stos
inc
sbb
jl
mov
sub
addr16
add
pop
sbb
jle
mov
dec
push
dec
pop
jg
xlat
insl
addr16
mov
mov
push
push
clc
sub
sub
es
dec
rcrb
aam
addb
mov
xlat
icebp
jnp
jno
mulb
pushf
mov
outsl
iret
fsubrp
ret
inc
jae
mov
sti
mov
mov
jge
jmp
mov
das
sub
cmc
sbb
sarb
dec
push
xchg
jo
stos
hlt
xor
sub
or
push
adc
int3
mov
cmpsl
push
push
das
aas
xor
sub
mov
fmull
mov
adc
inc
pop
inc
pop
or
adc
sahf
xchg
push
jns
les
sbb
lahf
xor
out
sub
fcompp
dec
loop
add
add
rorl
and
rolb
out
negb
xchg
and
int3
fldt
jle
mov
rolb
cli
or
mov
data16
fidivl
or
cwtl
jle
mov
add
hlt
jno
jp
std
aas
and
pusha
push
mov
lods
cld
fistps
pop
test
in
and
insl
fcom
pop
mov
cmp
or
inc
cmpl
and
inc
add
ret
mov
mov
test
repz
stos
sub
shll
dec
xchg
cmp
cmc
adc
das
adcb
add
cmp
xchg
push
sbb
dec
and
sti
mov
popa
cld
push
lret
clc
gs
in
lret
xchg
push
cld
mov
pop
jns
in
fnsave
sbb
sub
nop
sub
or
pop
lret
icebp
test
aaa
and
cmp
push
or
imul
pop
aad
xor
scas
cmp
lcall
aaa
out
rcrb
mov
stos
lahf
mov
movsl
out
inc
lea
ficoml
inc
or
in
sub
push
decb
call
xor
rorl
out
adc
add
dec
lcall
xor
jl
scas
mov
dec
shll
aam
sub
jb
aad
sarl
dec
push
jno
xchg
or
dec
leave
loope
add
mov
cwtl
mov
out
je
xchg
test
xchg
cmpl
mov
xor
rorl
dec
pop
xchg
adc
push
ret
loope
ja
insb
je
clc
and
out
into
push
and
xor
hlt
mov
fsubrl
mull
cmp
ljmp
daa
andb
or
dec
cwtl
or
push
xor
push
mov
test
cmp
inc
push
sahf
xchg
xchg
cmp
fadds
cmpsb
dec
inc
pop
movsb
jnp
mov
push
addr16
into
call
and
cmp
mov
and
out
and
add
ljmp
lods
rorb
sub
rcrb
xchg
cld
icebp
icebp
mov
jns
xor
sti
xchg
cmp
outsl
dec
and
or
mov
cwtl
cmc
in
push
add
jns
repz
push
das
adc
lods
pushf
hlt
lea
dec
and
mov
lret
mov
sub
push
or
test
add
xchg
cmp
stos
enter
stc
addr16
cs
aaa
lret
mov
cmp
test
into
bnd
xor
sahf
jge
fidivs
push
daa
rcr
mov
jge
fwait
js
and
es
dec
inc
lret
loopne
cltd
sub
rorl
test
insb
push
pop
movsl
rcl
stos
sub
and
out
sbb
sub
clc
jecxz
push
lods
and
sar
pop
pop
in
sbb
jecxz
mov
pop
mov
sbb
movsb
jno
push
jb
dec
mov
into
jp
push
pop
js
mov
adc
xor
pop
pop
add
repz
pop
jo
loop
sbb
or
out
das
jge
mov
xchg
xor
sbb
sahf
movsb
cmp
test
or
mov
sub
pop
xor
das
fildll
jmp
loop
subl
popf
mov
imul
sarb
ss
sbb
hlt
aas
loopne
test
pop
cmp
and
mov
and
inc
xor
sahf
xor
pop
enter
jae
pop
push
das
idivl
and
sbb
movsb
out
movl
out
insl
adc
fildl
mov
mov
xchg
inc
push
cmp
jb
mov
rorl
mov
pop
ss
in
cmp
xchg
mov
roll
mov
push
add
dec
scas
adc
mov
lods
lea
sbb
sbb
dec
jns
jle
mov
mov
xchg
inc
mov
inc
shr
pop
adc
push
pop
mov
xor
mov
pushf
xor
daa
mov
fidivrs
pop
in
arpl
cltd
je
repz
sbb
inc
cmp
inc
adc
inc
into
movsb
in
mov
mov
mov
mov
sub
adc
cmc
in
mov
cmp
cmp
xchg
dec
mov
pop
mov
push
mov
dec
lods
push
in
roll
ret
sbb
fisttpl
sarl
int3
loope
repz
sbb
xlat
adc
xor
es
push
repz
std
out
aaa
xor
inc
or
mov
sti
xchg
xchg
mov
lret
lea
cmpsb
shll
dec
push
lcall
fldt
shrl
andnps
sbb
enter
jmp
in
sbb
ds
pop
int3
repz
xchg
dec
inc
jmp
xchg
je
push
adc
mov
xor
imul
push
fsubrl
xlat
jp
std
push
in
dec
xor
pop
adc
mov
lock
mov
lret
adc
or
push
dec
or
dec
jecxz
xchg
sarb
jo
lcall
and
lods
sti
fdivr
test
outsl
idiv
sahf
stos
push
shlb
or
xchg
sub
add
jg
adc
imul
cltd
mov
das
pop
push
rolb
rcr
mov
cmpsb
adc
adc
cmp
sub
movsb
dec
dec
sbb
stos
jle
out
and
jne
mov
stc
pusha
mov
push
cmp
jae
jp
lret
xor
jle
push
je
cmp
movsb
xor
mov
inc
or
loope
xchg
ds
mov
or
pop
in
roll
dec
cld
push
mov
test
add
adc
loop
sub
dec
andl
ficoms
push
ss
mov
subb
adc
sub
xor
mov
sbb
sbb
in
xorb
movsl
inc
scas
ljmp
in
stos
fildll
ret
push
or
add
cltd
out
stc
stos
mov
xchg
push
lcall
add
inc
xchg
push
add
mov
fidivl
sbb
mov
xlat
pop
inc
cmp
and
or
adcb
push
fdivrs
out
and
jae
adc
insb
and
push
test
outsb
or
sarl
or
fidivs
xchg
in
lahf
lret
inc
cmp
cltd
aam
rorl
out
fsts
sbb
dec
sbbl
jg
adc
or
mov
cmp
adc
sahf
hlt
adc
iret
pusha
mov
mov
imul
out
xor
ljmp
add
fs
imul
mov
xor
in
mov
imul
aam
insl
sbb
hlt
jl
lret
loopne
xor
cmc
mov
mov
xchg
push
and
push
lds
daa
push
cmp
mov
cmp
outsb
into
mov
incl
arpl
inc
hlt
sbb
pushf
mov
xor
jb
mov
mov
and
dec
pop
arpl
push
sbb
andl
push
mov
rorl
xchg
xchg
adc
lret
mov
add
push
bnd
adc
sbb
fwait
loope
pusha
cmp
out
push
add
rcl
sbb
jge
mov
clc
pop
and
xlat
stos
mov
or
xchg
xchg
or
sahf
rorb
sahf
xchg
sub
push
jns
adc
adc
sub
xchg
rcrl
fadds
call
inc
rorl
lahf
shll
xchg
jle
aam
dec
mov
in
pop
mov
inc
or
stos
xlat
imul
aad
xchg
push
outsb
test
loope
pop
add
jbe
or
aam
ret
inc
hlt
inc
xchg
cmp
sahf
outsb
subl
cli
lock
loope
outsl
xchg
inc
cmp
pop
imul
dec
stc
mov
inc
addr16
mov
inc
cmpsl
xor
ffreep
stos
and
push
jle
push
push
cmp
iret
dec
lods
push
aas
add
in
lods
xor
pop
xchg
test
cli
or
out
add
dec
inc
mov
shlb
ret
push
dec
scas
sbb
loop
icebp
in
xor
pop
pop
cld
xor
movzwl
jne
aad
addr16
inc
fldl
mov
arpl
xor
pushf
test
test
loope
popa
mov
jl
and
mov
mov
push
sahf
or
hlt
test
test
inc
pop
jl
neg
jecxz
shl
aaa
push
dec
xchg
or
sub
push
inc
fcompl
out
orl
pop
dec
jmp
shrb
loopne
dec
bound
cwtl
fldl
pop
pop
adc
adc
pop
mov
dec
cmp
pop
lret
lea
lcall
je
imul
lahf
push
or
lods
xchg
or
dec
lods
enter
imul
clc
sbb
stc
jecxz
sub
inc
pop
test
push
mov
jg
xchg
adc
ret
sbb
sub
inc
push
adc
pop
xchg
jl
jmp
sub
mov
test
insl
pop
mov
out
and
sbb
mov
xor
and
pop
and
stc
mov
sbb
adc
popa
push
mov
mov
push
int
inc
stc
pop
add
stc
or
cmp
dec
xchg
cmp
sub
or
scas
pop
xchg
out
dec
loopne
fdivp
fdivl
inc
ja
and
mov
aad
and
xchg
mov
xchg
insl
outsb
gs
mov
daa
pop
pop
push
jl
xchg
fwait
out
push
xor
movsl
mov
or
int3
aam
mov
add
jecxz
push
popf
xchg
mov
aas
push
add
cltd
test
cmp
sub
sub
mov
ret
inc
ds
aam
adc
cmpsb
push
lea
and
mov
jge
mov
cmp
pop
ljmp
adc
out
inc
dec
xchg
push
dec
mov
push
pop
sbbl
leave
jg
repz
stc
push
movsl
adc
mov
loopne
adc
or
jno
cltd
xchg
jl
outsl
dec
mov
jae
adc
shl
subb
lods
sahf
add
xlat
dec
inc
movsl
and
mov
mov
fcmovnu
cltd
mov
jmp
lods
ja
mov
cli
sbb
arpl
fiaddl
aad
scas
jl
das
loope
jmp
test
pop
mov
xor
mov
or
dec
xor
pop
mov
out
push
push
shlb
xchg
in
mov
aas
add
mov
jno,pt
icebp
jg
test
addr16
mov
loop
stos
imul
pop
cmpsb
mov
shlb
mov
adc
pusha
aaa
cmpsb
xchg
cmpsb
fildll
sbb
jne
mov
lcall
idivl
out
add
mov
push
pop
cs
gs
jp
ret
jae
scas
cs
sbb
sbb
scas
ja
int3
pop
repnz
mov
out
jno
or
mov
je
or
repz
adc
pop
loope
lods
pxor
mov
cld
push
xlat
push
pop
stc
adc
pushf
and
add
leave
jbe
mov
sbb
xchg
addb
das
push
push
lret
loop
in
adc
cld
adc
rol
pop
cmp
adc
cmpsb
adc
push
cmp
mov
adc
enter
xor
cmp
mov
mov
mov
pop
scas
movsl
or
daa
or
inc
dec
movsl
aas
call
xlat
jo
add
sbb
cmpsb
outsl
pop
mov
mov
xor
pushf
add
inc
xchg
repnz
push
add
out
repz
in
xchg
pop
mov
jae
mov
out
inc
inc
ret
mov
fs
or
ljmp
and
out
fsub
movsl
cli
rorl
shll
pushf
and
call
push
notb
jbe
fsubr
push
xchg
sub
lea
int
add
cmpsl
xchg
sub
sbb
mov
js
lret
frstor
fdivrl
in
inc
addr16
pop
mov
iret
sbb
nop
jge
nop
into
mov
cmp
iret
ja
xor
movsl
ja
insb
loopne
call
inc
push
mov
sub
test
call
movsl
out
or
adc
data16
pop
jo
mov
xor
int
cs
mov
out
mov
insl
les
xchg
clc
ficomps
int
loop
cmpsl
ja,pt
mov
mov
outsb
and
xchg
in
in
enter
rolb
dec
or
lock
pop
fucom
and
jae
dec
je
and
sti
and
or
pop
sti
mov
xor
pop
inc
sti
imul
pushf
jns
cli
xchg
mov
push
mov
adc
popa
dec
sbbb
push
popa
push
mov
adc
push
add
push
xchg
std
push
xchg
lods
cmp
lock
or
mov
add
movsb
ss
sti
test
arpl
push
movsb
clc
sbb
jge
add
xchg
out
lret
or
shlb
roll
lcall
sbb
fwait
pop
inc
std
rorb
dec
push
cmp
fwait
sarb
out
mov
xorb
fs
data16
lahf
call
lret
out
std
out
outsl
add
or
sub
cli
and
mov
lods
filds
std
nop
mov
push
out
adcb
fidivl
cmp
or
mov
int
fildll
ret
aaa
mov
fstp
jg
and
pop
shll
repnz
movsl
xor
jle
or
cmpsl
lods
in
inc
mov
int3
mov
aaa
outsl
mov
mov
jle
and
mov
dec
jo
dec
mov
fimull
or
jbe
xchg
fisttpll
sarb
xchg
testl
lds
mov
outsb
cmp
pop
adc
popa
push
jge
js
sbb
jp
int
inc
fsubl
into
sbb
outsb
in
lahf
xchg
std
mov
pop
sub
pusha
cltd
pop
push
sbb
repz
mov
sub
hlt
out
xchg
push
out
jmp
into
push
orb
addr16
orl
pop
or
fdivrl
dec
scas
sarl
mov
push
mov
rcll
xlat
adc
pop
sbb
dec
iret
ret
dec
daa
lock
pop
sbb
cmpsb
outsl
loopw
adc
int3
xor
mov
jae
hlt
jne
adc
cld
inc
cmpsl
insl
pop
mov
push
sub
sub
je
pop
mov
push
aas
repz
or
push
aaa
mov
or
hlt
ljmp
lcall
sbb
ret
out
lock
jp
cmc
movsb
mov
cltd
in
mov
enter
sbb
and
dec
xchg
push
jns
pop
stos
insl
test
jno
or
mov
push
mov
inc
repz
push
jne
sahf
jae
jle
or
rol
js
aas
jbe
jp
or
pop
jle
std
push
mov
lea
xchg
sub
inc
popa
inc
rcr
adc
cmpsb
xor
stc
adc
sbb
cmp
fucomip
cmp
or
sbb
mov
fwait
sub
int3
and
shrl
push
ret
rcr
sub
adc
popf
mov
outsl
ljmp
and
adc
test
lret
scas
mov
repnz
xchg
arpl
dec
push
aad
sbb
stc
icebp
bound
roll
jae
push
mov
insl
inc
neg
aas
fcoms
movsb
psubsb
sbb
push
lds
scas
sub
orl
jge
xor
mov
fwait
push
inc
push
sbb
into
adc
int
roll
dec
xor
dec
ret
rcll
cmp
add
aad
sub
dec
adc
lods
mov
mov
ds
movsl
jge
inc
je
jne
in
xor
sbb
xlat
scas
incb
popf
lock
test
daa
sarb
pop
pop
fnstenv
les
push
insl
leave
add
fiaddl
mov
sbb
mov
push
push
fcomps
fistps
fisubrl
cld
cmp
dec
loope
sbb
ret
mov
ret
cmpsb
dec
cwtl
clc
jmp
jae
fadd
in
xor
icebp
popf
fcos
xchg
and
pop
test
movsl
adc
cs
dec
mov
xchg
pop
and
adc
test
jb
mov
push
ret
jmp
cmpb
jp,pt
sahf
add
push
cs
cmpsl
jnp
loope
test
jae
into
shll
cli
arpl
flds
pop
cwtl
ja
sub
jne
arpl
lret
aam
push
jmp
test
leave
push
jno
pushf
es
popa
add
jge
out
outsl
dec
lahf
call
rcll
mov
xchg
out
xchg
stc
and
jne
arpl
inc
xor
scas
mov
xchg
out
dec
incl
in
fcom
jmp
aam
clc
sbb
cwtl
aas
jns
cmp
xchg
frstor
imul
push
or
jmp
sti
lcall
decb
push
imul
or
jecxz
fnstcw
dec
pop
adc
lahf
fwait
pop
mov
pusha
and
xor
nop
shlb
outsl
mov
jmp
in
cmc
add
adc
hlt
xchg
mov
into
cmpl
repnz
jge
scas
arpl
sub
jbe
pop
mov
sub
test
test
clc
in
push
cmp
xor
fdivrp
xchg
ljmp
in
mov
movsb
inc
ss
dec
mov
cltd
inc
push
lea
pmullw
dec
rorl
loope
test
jo
or
pop
inc
mov
jns
adc
cmp
sbb
clc
xchg
add
xchg
je
adc
in
popf
repnz
cli
inc
inc
clc
xor
stc
inc
les
or
lods
jb
push
movsl
iret
jb
mull
shl
xlat
jmp
jle
leave
pop
xlat
gs
jbe
lret
aad
mov
mov
mov
popf
rcll
ds
addb
ficompl
mov
or
std
push
add
mov
mov
jge
sbbb
lods
call
pop
shlb
rol
negl
in
enter
rcr
mov
jmp
push
mov
movsl
add
ljmp
dec
loop
lock
xor
adc
push
or
adc
call
movsb
lock
lock
fsubrs
or
push
ror
insl
aas
ret
jo
fistpll
mov
mov
mov
xor
inc
fwait
sbb
jne
cld
xchg
fxtract
out
iret
test
imul
cmp
push
fcmovbe
push
ret
mov
mov
mov
cld
jge
xor
cmpsb
hlt
xchg
xchg
ret
lock
xor
sub
rcrl
sbb
sbb
js
add
fxch
out
push
aas
sub
adc
cmp
cmp
pop
sub
mov
jns
jl
jecxz
sub
fwait
mov
adc
mov
mov
pop
loopne
xchg
iret
lcall
adc
std
std
fcmovu
test
pop
out
in
pop
pop
xchg
ficoml
xorl
repnz
mov
dec
pop
fists
or
cmpsl
jmp
jb
mov
and
and
mov
mov
cmp
cmp
or
andb
and
incb
and
sub
jo
sub
js
ret
mov
push
movsl
inc
fdivp
fnsave
fimuls
fcoml
cmpsb
xor
push
imul
cmp
mov
or
lret
jno
sti
es
lret
xor
xor
pusha
je
out
js
mov
jns
push
movsl
or
lahf
cmp
inc
clc
and
or
mov
sbb
cmp
sub
icebp
adc
sbb
popf
ss
enter
lret
xchg
pop
loop
lods
push
call
xchg
pop
dec
adc
sbb
dec
out
xchg
fildl
push
orl
aas
mov
push
nop
mov
adc
dec
push
add
and
mov
sub
cmc
inc
pop
push
mov
enter
lock
testb
loopne
mov
xchg
dec
stc
out
fisubl
lahf
enter
push
mov
icebp
aas
mov
and
sub
out
out
rcrl
das
ja
aam
icebp
fnstenv
jle
cmp
adc
jg
rcrb
jg,pt
icebp
cltd
in
mov
jne
pop
sbb
test
test
inc
adc
dec
inc
xchg
push
lock
jecxz
push
push
cmp
push
xor
outsb
mov
sub
addr16
das
add
mov
movsl
inc
dec
mov
sti
test
lock
fstpt
icebp
imul
adc
mov
pop
es
int
jge
clc
xor
fwait
push
push
xchg
mov
pop
jbe
mov
int3
cmpsb
and
test
inc
std
inc
stos
test
popa
or
xlat
and
xor
mov
dec
lds
nop
out
sbb
enter
fcomps
enter
jge
push
mov
jo
inc
xor
rcll
cmp
adc
or
imul
fsubrl
cwtl
pushf
dec
xchg
mov
jnp
adc
cli
iret
and
dec
mov
push
fnsave
pushf
mov
mov
jge
xchg
arpl
das
xor
mov
dec
adc
mov
andb
push
mov
ds
sub
stos
pop
andb
into
add
dec
shr
mov
mov
cmp
ljmp
arpl
jne
enter
pop
outsb
mov
and
test
pop
sub
aaa
stos
cli
mov
in
sbb
call
xchg
dec
xchg
sub
inc
or
and
or
cmpb
xor
in
pop
adc
aaa
cmp
test
imul
popa
sbb
xor
int
mov
xchg
cmp
adc
sub
xchg
lea
jno
cmpsb
push
push
mov
push
fiadds
push
push
pushf
call
add
dec
rcll
mov
and
and
mov
xor
lret
sbb
stc
xor
cmpb
xor
xor
mov
rorb
pop
pop
int3
shlb
push
test
push
xchg
mov
cmpsb
add
aas
outsl
xchg
dec
push
mov
cmpsb
xor
adc
cli
cltd
sbb
sbbb
sub
insb
add
inc
icebp
mov
pop
int
shr
hlt
into
jmp
sub
nop
or
insb
push
cmc
jecxz
jno
sbb
push
jo
pop
lret
idiv
push
inc
adc
xor
fildll
sti
mov
cmpsb
sbb
fmull
inc
or
mov
les
mov
mov
loopne
xchg
divl
fs
test
cmpsb
arpl
sahf
cld
xchg
inc
xor
mov
mov
sbb
push
push
sbb
pop
add
int3
jb
jnp
out
ja
stos
mov
and
push
out
mov
pop
push
sbb
lret
sbb
dec
jle
mov
mov
jae
push
cpuid
sub
aam
sbb
mov
add
push
sbb
outsb
add
sbb
mov
push
dec
sti
daa
jle
stos
mov
cltd
jmp
and
addl
adc
sub
jo
shlb
add
lods
xlat
push
mov
mov
imul
xor
cmp
aad
cli
aaa
and
and
stos
cmp
movsl
mov
shrb
dec
inc
xor
lret
cmp
push
adc
insl
xor
and
fcompl
jns
out
cmp
mov
jge
pop
lahf
ja
enter
in
cmp
mov
adc
orl
imul
fldenv
into
xchg
stos
popf
jno
in
lds
lahf
test
popa
push
push
add
fisttpl
cli
fdecstp
scas
fidivl
lahf
sub
lods
xchg
mov
pop
popl
nop
sub
aad
xchg
inc
into
mov
insl
lret
dec
fs
aas
fnsave
pop
popf
lret
fdivs
int3
xor
or
cmp
into
cld
pop
jb
cwtl
rcll
jne
jnp
jb
pop
inc
pop
test
mov
xchg
popa
and
inc
out
gs
mov
cvttps2pi
fistpll
dec
ja
xor
dec
cld
js
fs
xlat
and
sahf
mov
pusha
adc
push
loope
sub
rolb
leave
nop
pmaxub
jl,pt
mov
jle
mov
add
and
or
push
rcll
xchg
mov
jp
add
loope
rcll
push
repnz
or
jg
movsb
jg
cmp
insl
inc
popf
add
jbe
mov
and
scas
fcomps
pusha
shll
pop
mov
insl
addr16
add
sub
mov
pop
cmp
sub
mov
ss
popa
jb
adcl
mov
scas
sti
call
or
imul
cmp
or
in
pop
insb
ljmp
dec
xor
scas
pusha
loope
mov
sub
popf
pop
rcrb
xchg
jecxz
sub
dec
rclb
daa
xor
popa
int3
jmp
push
dec
lods
pop
inc
jmp
into
jbe
or
add
adc
test
out
push
push
push
sahf
dec
pop
dec
js
xchg
cmc
dec
mov
push
notb
arpl
ret
adc
inc
je
int
mov
fbld
xchg
xchg
push
xchg
dec
orb
add
roll
xchg
mov
ss
cmp
xchg
adc
imul
data16
ret
sbb
add
sbbb
adc
xchg
sub
mov
mov
xor
test
call
repz
jge
jp
dec
dec
inc
adc
outsl
shll
lods
xchg
cltd
dec
add
or
andb
xchg
pop
pop
lahf
lret
sub
mov
pop
jp
repz
leave
mov
and
loopne
es
iret
je
dec
inc
enter
adc
push
pop
mov
daa
mov
mov
lods
inc
sub
fsub
aam
pop
xchg
jle
fucomip
in
xchg
sub
ja
xor
cmp
sbb
xchg
mov
mov
in
test
xor
es
pusha
xchg
inc
adc
mov
mov
pop
and
scas
stos
pop
inc
mov
hlt
sub
adc
xchg
js
notl
sti
push
pop
and
dec
mov
xchg
mov
xchg
dec
jo
hlt
sub
mov
jnp
cmpsb
and
mov
xor
push
sub
movsl
add
or
aas
loopne
add
leave
lea
cs
sub
ds
mov
aad
inc
adc
dec
fidivs
int
test
mov
imul
mov
inc
test
movsl
cmc
es
inc
hlt
gs
jp
out
pop
pusha
mov
lret
or
lret
cwtl
pop
fxch
mov
out
mov
cmp
test
cmp
repz
nop
jl
sub
xchg
test
xor
cmpsl
adc
pushf
lds
leave
push
shll
popf
enter
mov
test
test
xor
mov
in
mov
adc
adc
mov
pop
or
and
insb
cmpsb
mov
pop
mov
xchg
enter
sub
push
mov
out
mov
pop
popl
aam
sub
pop
dec
adc
push
push
cmp
xor
call
test
addb
or
jl
inc
lods
fstps
outsl
xchg
xor
and
repz
add
mov
xchg
in
and
les
outsl
pop
leave
into
ret
sub
out
jns
pop
ds
andl
imul
jg
cwtl
jb
sbb
out
push
or
cmc
dec
lea
pop
ljmp
xchg
xchg
cwtl
xor
jns
test
scas
rcrb
push
xor
insb
lds
rolb
jg
adc
ja
xchg
jbe
inc
sti
loope
fiadds
insb
addr16
daa
daa
cmp
repz
hlt
and
mov
cwtl
sub
sub
mov
inc
ss
jb
ficompl
fcmovnb
xchg
jae
mov
add
jns
add
lahf
xchg
push
jecxz
outsl
cltd
leave
imul
dec
pop
adc
sub
hlt
and
jne
push
jne
mov
test
push
loope
mov
mov
pop
adc
ja
leave
cmp
pop
mov
iret
or
mov
lea
xor
jbe
lea
test
dec
xchg
jl
scas
mov
icebp
aas
dec
scas
and
push
pop
xchg
xor
cmpsl
lds
mov
mov
dec
xor
lcall
jno
push
cli
sbb
dec
push
andl
mov
and
icebp
adc
dec
repnz
leave
push
adc
push
mov
jl
rolb
imul
shll
popf
xchg
xchg
lds
cmp
sbb
sub
out
push
adc
rcrb
jle
jns
add
add
pop
scas
push
pop
and
dec
sub
pop
test
fs
and
enter
fists
adc
stos
fwait
adc
popf
pop
fcmovu
and
push
incl
sub
mov
sbb
shl
push
fcomp
and
mov
jnp
enter
cli
mov
sbb
test
sbb
xchg
xchg
jl
imul
testl
dec
fsubrs
inc
jae
mov
je
test
mov
mov
stc
pop
ss
mov
add
rcrl
aas
daa
jp
xchg
push
inc
aam
pop
or
xor
jne
dec
movsb
je
mov
jbe
popa
fidivrs
stc
popf
ljmp
xchg
scas
les
nop
popf
push
test
cmpsb
sti
mov
mov
jecxz
stos
mov
fcmove
and
adc
cltd
enter
in
adc
inc
push
and
loopne
sbb
xchg
pop
stos
mov
sub
jg
repz
adc
dec
icebp
ds
das
dec
loop
push
in
inc
test
xor
pop
lods
pop
cmp
inc
mov
in
repz
push
fdivs
repz
push
lods
inc
jae
unpcklps
push
or
cmp
pop
xchg
mov
inc
adc
mov
lret
xchg
movl
imul
xchg
movsl
push
aaa
sahf
add
sub
loope
fdivp
je
fnstsw
rolb
mov
rcrb
inc
add
jg
mov
cmp
mov
and
clc
sub
mov
cmpsb
ret
mov
jns
cwtl
jno
lret
outsl
iret
mov
sub
sarb
or
xchg
sub
pop
notl
mov
jno
add
addr16
arpl
test
testl
jnp
test
push
xchg
inc
out
in
or
out
add
data16
sbb
dec
iret
aas
sahf
xchg
aad
mov
xchg
enter
push
push
lea
fdiv
daa
adc
dec
imul
mov
clc
ja
data16
sub
mov
push
cmp
sbb
add
bound
fsubrs
pop
cmpsl
gs
xor
repnz
pop
inc
ret
jns
and
shrl
test
into
in
cwtl
jle
xor
xor
repz
aam
shll
mov
adc
cmp
imul
sbb
fsubrs
or
bound
mov
inc
mov
jns
fwait
daa
push
xchg
dec
dec
mov
jns
fstpt
std
push
mov
rolb
jnp
push
inc
dec
leave
pop
leave
or
xchg
jmp
dec
jns
mov
xchg
inc
cmp
nop
bound
xor
adc
repnz
sarb
and
pop
sbb
mov
pushf
add
test
inc
jge
dec
push
lock
dec
sub
push
cmpps
xor
cld
out
mov
sbb
push
clc
jl
mov
jle
addr16
out
in
dec
pop
sbb
push
jno
enter
lret
cmp
cmc
sub
jge
pop
inc
inc
inc
add
xor
adc
sbb
fwait
cmpsb
and
mov
push
jecxz
pop
cmpsl
clc
xchg
xor
sti
mov
lret
mov
aaa
jbe
mov
mov
sub
fiaddl
dec
aas
push
pop
pop
orb
mov
jmp
mov
aad
sbb
ljmp
scas
pop
popf
xor
into
lds
nop
inc
cmp
pop
ss
jae
js
pusha
out
int
push
int3
pcmpgtb
mov
outsl
ljmp
cmp
inc
inc
movsl
das
mov
or
or
jl
and
mov
xchg
cs
mov
pop
cmp
and
fcmovb
mov
movb
jge
mov
das
ficoms
out
dec
push
mov
outsb
jae
repnz
cli
adc
test
sbb
push
mov
mov
test
test
inc
push
xor
lock
cmpsb
add
sti
adc
sar
jbe
cmc
clts
inc
sub
cmp
aaa
or
scas
lods
pop
jmp
je
push
jnp
movsl
adc
hlt
enter
test
mov
or
and
test
sbb
dec
aad
aas
xchg
aaa
mov
movsb
popa
jp
mov
pushf
cmpsl
push
ds
pop
jmp
push
fisttpll
push
sbb
scas
repz
arpl
sarb
mov
jecxz
sbb
and
cmp
mov
mov
insl
mov
xor
into
das
imul
push
stos
fimull
imul
jns
push
add
push
sbb
aam
pop
inc
xchg
and
aad
addr16
mov
rolb
cmpl
and
aas
sub
pop
int3
xchg
bound
testl
inc
mul
pop
jmp
imul
inc
insb
rcrb
mov
popf
test
sub
cmp
rcll
aad
inc
out
and
pop
pushf
and
jnp
repz
mov
push
test
push
je
insl
cmp
pop
mov
ret
paddb
decb
shl
push
or
pop
outsb
push
filds
negl
popa
iret
or
mov
imul
sub
outsb
stos
pop
add
sub
mov
repz
rorl
or
mov
push
cmp
arpl
or
and
mov
mov
xor
roll
push
jnp
imul
dec
mov
mov
mov
sub
rcrl
add
mov
out
aam
mov
inc
stc
js
fdivrl
ja
outsb
aam
inc
int3
sbb
sub
int3
stc
push
out
pushf
icebp
push
pushf
xchg
mov
and
pop
inc
mov
add
data16
mov
xor
jecxz
dec
scas
cli
bound
push
data16
mov
add
pusha
mov
mov
sbb
xor
pop
mov
mov
jp
inc
add
push
aad
aas
mov
sti
jo
xchg
or
lds
sub
xchg
ja
fisttps
mov
xor
jnp
aam
pop
lcall
in
push
jge
movsb
add
pop
mov
jb
scas
je
mov
cmp
rolb
imul
inc
lea
stos
addr16
push
cmc
sub
push
pop
leave
les
js
inc
cli
adc
iret
fndisi(8087
jle
hlt
xchg
mov
xorb
and
test
bswap
in
insl
mov
mov
lret
mov
jecxz
mov
cmpsl
iret
repz
lock
jnp
ficoml
icebp
sbb
rcll
movsb
sbb
mov
js
movsl
mov
push
mov
xchg
fnstsw
pop
mov
sub
std
adc
movsb
mov
inc
cltd
jge
cmp
repz
lahf
mov
dec
fcomps
cmp
rol
gs
dec
test
insb
rclb
pop
add
pusha
and
add
push
jae
divb
mov
or
pop
push
in
sub
dec
push
cwtl
mov
fisubl
mov
jne
xlat
orb
add
xor
inc
jnp
pop
popa
sbb
outsl
mov
dec
mov
add
ja
mov
outsb
loop
or
sbb
mov
mov
or
push
sbb
jp
push
out
or
xchg
insl
xor
or
aas
push
mov
pop
fistps
test
push
mov
jp
dec
dec
mov
adc
pop
and
fdivrl
testb
enter
cltd
jnp
int3
shlb
sbb
clc
mov
xchg
mov
jno
and
fisubl
cli
dec
ds
add
mov
das
clc
gs
dec
sub
sbb
push
sub
scas
out
push
jg
gs
jb
daa
lods
lods
mov
xor
pop
rol
dec
pushf
fldcw
aaa
daa
mov
cmp
or
cmp
adc
and
hlt
lods
push
push
clc
inc
loop
adc
imul
sbb
jp
sub
jno
xchg
xor
fisubl
mov
push
dec
fwait
cld
jg
push
or
pop
js
fcom
adc
xchg
aas
inc
ret
dec
add
ljmp
insl
push
or
test
ret
and
sbb
cmc
jnp
push
ja
sbb
mov
in
mov
scas
mov
mov
dec
xchg
push
scas
popa
add
fisttps
add
or
rcll
mov
scas
mov
mov
xor
mov
test
les
cmpsl
rcrb
dec
push
jbe
or
jne
adc
ds
aad
mov
xchg
push
push
fcompl
into
test
psrld
gs
and
or
push
out
aam
xchg
adc
fwait
push
out
cli
and
sub
js
sbb
jo
lods
je
mov
aas
dec
dec
pop
insb
das
xchg
mov
adc
gs
stos
jp
imul
sbbl
add
loop
and
js
push
lds
mov
and
mov
outsb
sbb
mov
inc
or
setbe
push
lret
ja
ds
xchg
test
fisttpl
xchg
cmp
lds
inc
xchg
call
sbb
add
dec
pop
ds
mov
subb
fisttps
out
rol
loopne
push
pop
adc
rcll
je
mov
shl
std
sub
or
mov
std
cmp
push
test
mov
hlt
pusha
dec
icebp
mov
xor
aaa
fs
in
leave
cli
sti
outsl
hlt
insl
lds
pop
jge
lret
es
jno
mov
pop
les
ja
jg
in
pop
lea
shl
fmull
push
push
lods
sub
mov
jae
xchg
sarl
sub
jns
lods
pop
xchg
jo
jmp
cmp
xor
jno
dec
inc
gs
js
lock
test
out
andl
imul
mov
inc
mov
into
ljmp
jne
das
xchg
or
and
shrl
pop
adcb
sbb
add
fnstsw
and
cmp
xor
cld
mov
pop
mov
mov
cmp
insb
xchg
pop
cmc
jmp
gs
repz
cwtl
lahf
scas
mov
pop
fisttps
pusha
mov
test
stos
fs
sbb
or
sbb
adc
cmp
sub
out
leave
jl
dec
movsb
cltd
jbe
rorl
test
mov
cmpsb
in
or
imul
inc
xchg
out
xchg
sbb
sbb
adc
xchg
int3
das
lcall
fldl
cld
or
mov
pop
call
mov
xor
push
pop
jns
sti
push
dec
push
and
push
mov
inc
ljmp
inc
loope
lret
outsl
call
push
pop
and
adc
sub
rcr
push
push
pop
pop
cld
popf
popf
test
mov
and
push
daa
les
lods
push
loop
xchg
inc
testl
pusha
sbb
mov
popa
xor
loop
jmp
xchg
in
inc
mov
mov
in
jno
xor
pop
mov
mov
or
jecxz
and
in
leave
pop
push
sub
ljmp
aam
push
nop
dec
js
cs
into
push
aam
pop
fsts
mov
iret
test
mov
jg
imul
mov
inc
cmc
inc
xor
jmp
adc
sbb
dec
in
movsl
cmp
push
xor
gs
lahf
adc
shrl
cli
aam
movaps
movsl
ret
fsubrl
xchg
insl
mov
cmp
test
lret
mov
or
bt
adc
push
aaa
xor
cltd
dec
mov
pop
neg
mov
pop
pop
or
notb
mov
push
pushf
adc
cmp
popf
adc
andb
mov
icebp
test
sbb
sarl
jo
cmpsl
scas
xor
xchg
lock
push
push
mov
addr16
mov
jae
mov
cmp
push
jmp
fistl
test
movl
stos
movsb
cmpsb
lsl
leave
daa
je
pusha
cmpsl
test
jle
arpl
sub
loope
adc
mov
lahf
es
sub
push
jne
lcall
bound
dec
in
test
int3
rolb
or
jae
dec
add
and
jo
pop
sbb
mov
cmpsb
movsb
pusha
mov
cli
inc
xchg
cwtl
or
inc
loope
jne
inc
pop
outsb
jae,pn
adc
imul
sarl
fwait
and
sub
jg
and
inc
mov
xchg
das
mov
rcll
das
dec
lods
imul
lret
mov
jno
test
sub
subl
and
and
lret
or
adc
fwait
out
rorb
incb
lahf
imul
jae
repnz
cmpsb
cltd
pop
iret
aas
jg
add
roll
scas
cs
sub
shlb
push
jmp
sbb
jge
cmp
rcrb
cmpsb
and
adc
out
lret
mov
cmpsl
test
pop
pop
gs
pusha
das
addb
rcll
xor
cmp
xor
sub
xchg
leave
xchg
outsl
push
push
xor
mov
mov
inc
gs
dec
add
push
mov
xor
or
pop
push
mov
aas
sti
les
imul
stc
mov
clc
push
dec
in
js
adcb
call
dec
dec
add
pushf
outsb
jle
mov
mov
sub
dec
dec
cmpsb
sub
ret
sbbl
outsb
sti
or
into
jle
insb
mov
push
pop
fisttpl
pop
stos
call
dec
movntps
mov
push
popf
jo
add
push
aam
into
aas
adc
out
adc
ret
fstl
ljmp
cmp
pop
into
call
jl
pop
dec
aas
hlt
adc
jno
les
out
pop
mov
fs
pop
cmp
sbb
mov
mov
xchg
test
cli
and
or
sbb
jnp
xchg
jmp
movb
adc
sbb
aad
sub
jle
mov
mov
sar
sbb
loope
inc
sub
data16
xor
xchg
push
js
mov
jns
xchg
cmp
push
xor
adc
repz
pop
jg
hlt
xorl
jge
loop
mov
sbb
cwtl
ficoml
sbb
cltd
cmp
jbe
je
ret
fwait
xor
xchg
dec
pop
mov
bound
in
jg
xchg
mov
and
mov
cmp
loopne
pop
scas
dec
mov
es
sbb
jne
dec
sahf
scas
jnp
jecxz
dec
gs
shl
ljmp
mov
mov
subl
and
mov
frstor
jecxz
repnz
cli
mov
pop
mov
xor
sbb
imul
enter
sbbl
dec
dec
jmp
push
mov
hlt
repnz
sahf
mov
pop
sbb
test
les
stos
pop
and
sub
test
inc
popa
ljmp
aas
data16
push
mov
sbb
sti
fistl
shll
jbe
mov
mov
enter
outsb
and
inc
push
cmovne
sti
rolb
ja
sub
cmp
cltd
scas
arpl
push
or
ds
mov
sbb
cmp
adc
push
ds
cwtl
jbe
cmp
or
mov
push
xchg
xchg
pop
mov
xor
jmp
sti
inc
pop
pop
pop
lods
push
sbb
jno
jne
mov
lahf
enter
mov
repz
in
outsb
mov
and
and
bound
ret
xlat
es
xor
js
scas
jl
mov
jl
jge
inc
dec
xor
sbb
dec
inc
movb
mov
or
cmc
out
bound
scas
cwtl
and
pop
aad
jle
or
pop
outsl
mov
aas
in
jne
push
repz
in
lods
sub
cwtl
fs
cmp
call
repz
dec
sub
or
ja
mov
xchg
jmp
pop
and
jne
gs
clc
jb
and
sbbb
in
clc
insl
xchg
push
mov
in
sbb
not
in
adc
sbb
mov
hlt
mov
push
mov
aam
loope
or
ja
mov
mov
and
mov
pop
pop
invd
inc
int
add
mov
clc
inc
jo
pop
ja
in
jb
dec
scas
fisttpl
pop
mov
ss
int
test
outsb
dec
loope
arpl
lods
adc
insb
push
movsb
push
int
jl
sbb
add
dec
mov
mov
dec
push
dec
sbb
mov
out
push
mov
mov
pop
leave
mull
lcall
addr16
pop
sub
cmp
push
mov
test
pop
mov
mov
jle
and
stos
dec
mov
or
cmpsb
jmp
loopne
cmc
mov
xor
fwait
pop
xchg
push
movsb
fistps
push
iret
pop
xor
mov
neg
mov
loopne
adc
into
adc
data16
jne
int
daa
insl
xor
and
mov
inc
or
jno
test
es
jg
add
or
jle
mov
adc
data16
cltd
add
outsb
mov
pop
cmp
push
movsl
and
mov
xchg
lretw
pop
fs
or
xchg
inc
jge
push
in
xchg
xor
adc
hlt
adc
push
in
sbb
in
in
inc
sbb
mov
push
rcrb
push
test
sti
cwtl
jg
adc
jne
and
lods
je
mov
mov
mov
mov
mov
enter
lds
lock
pop
sbb
sub
xchg
insb
les
jbe
push
std
sahf
mov
inc
movsb
cmp
test
cld
mov
fmul
or
sub
sahf
dec
inc
mov
out
in
mov
lret
xchg
aam
outsb
cli
movsb
movsl
push
adc
mov
adc
loopne
fcomps
adc
pop
and
mov
mov
out
push
scas
push
lahf
jns
push
pop
rcll
scas
xlat
lret
call
test
test
adcb
adc
or
or
inc
sub
je
pop
mov
sahf
sbb
add
sbb
stos
mov
enter
ss
cmp
cli
ret
push
clc
push
out
and
mov
sbb
rolb
dec
fnstcw
jmp
loope
dec
push
scas
addr16
and
mov
push
popa
ja
mov
in
dec
jae
sbb
mov
sti
jnp
or
gs
aad
cmp
in
sub
mov
ficoms
pushf
lock
iret
jo
cmp
lea
int
push
push
jae
leave
test
xchg
dec
and
add
mov
cmp
popf
in
mov
inc
jnp
insl
jnp
adc
sub
add
and
pop
dec
add
orl
jb
pop
int
dec
popa
ss
and
mov
ljmp
push
std
push
add
and
and
bound
ds
or
inc
cli
arpl
pushf
imul
fmuls
pop
and
arpl
test
cmp
mov
add
push
sti
lahf
xor
mov
jecxz
fidivrl
ds
dec
adc
inc
gs
push
in
dec
sahf
cmpsb
mov
rclb
into
lret
lods
xchg
push
mov
add
stos
testl
xchg
sbb
pop
xchg
addl
lds
pop
cmp
jmp
sub
cmp
xchg
sub
sti
ljmp
repnz
cmp
nop
inc
in
cwtl
and
mov
flds
jns
fimull
jle
pop
lahf
enter
jge
scas
loop
or
push
int
cmpsl
unpcklps
push
dec
add
movsl
xchg
mov
sub
mov
mov
cmpsl
mov
add
mov
cwtl
cli
pop
and
mov
push
or
rcl
jp
jecxz
sbb
andl
addb
mov
xchg
or
out
jle
ret
add
ljmp
sbbl
js
notb
faddl
ja
xlat
out
cs
call
pop
mov
jne
jp
sbb
xlat
scas
movsb
popf
xor
fildl
dec
pop
add
adc
std
inc
push
pop
and
xchg
or
in
adc
lret
test
fsubrs
mov
sbb
mov
push
loopne
jb
xor
adc
faddl
test
test
dec
lea
lret
movsb
cltd
mov
nop
xor
xchg
fisubrs
dec
push
jns
or
pop
int
inc
dec
subl
test
out
jmp
or
adc
jns
rorb
insl
ror
add
mov
pop
cwtl
mov
cmp
imul
cld
inc
dec
pop
pop
mov
cmpl
iret
arpl
jae
fcomi
sub
and
sub
add
mov
call
cmp
lcall
arpl
pop
push
fiaddl
and
pop
mov
data16
test
daa
jne
testl
adc
mov
pop
cltd
mov
push
shll
out
rolb
mov
js
xchg
pop
add
jp
das
fldenv
jle
xor
aas
inc
ja
jb
dec
in
push
cmpsb
aaa
sbb
scas
sbb
inc
xor
fs
lea
sub
sbb
cmp
je
pusha
mov
jbe
push
adc
xchg
test
and
jmp
test
lods
js
mov
daa
imul
mov
je
sti
inc
stos
or
inc
xchg
int
into
fs
popf
jnp
stos
sbbb
sub
jno
pushf
pop
xchg
mov
stc
cmpb
pop
mov
nop
push
jg
andl
mov
sub
insb
scas
xchg
dec
xor
lahf
mov
mov
xchg
out
mov
xchg
mov
lock
mov
repz
sub
pop
mov
push
add
pop
pusha
out
ss
mov
mov
cmp
adc
into
jge
fdiv
jno
lods
pop
or
cs
aas
ljmp
lods
sbb
mov
xchg
outsl
push
pop
jo
bound
mov
or
mov
adc
cmp
scas
imul
or
out
sbb
loopne
and
repnz
adc
xchg
inc
add
mov
hlt
xchg
add
mov
jge
fwait
xchg
pop
pop
push
add
pop
xchg
fsqrt
adc
and
xchg
jb
xor
mov
imul
xchg
dec
in
aad
pop
pop
mov
xor
es
jmp
push
rclb
cmp
int
push
mov
shrl
cmp
clc
cmp
mov
mov
adc
mov
fwait
int3
call
mov
iret
ljmp
jmp
adc
adc
inc
int
out
cmp
xchg
xchg
aam
cwtl
sub
sub
stc
fcoms
xor
xor
jae
fcmove
out
mov
xchg
add
inc
test
stc
pop
mov
test
pop
push
mov
jp
add
clc
bound
push
scas
sahf
mov
mov
inc
pop
xchg
popa
shr
rcr
out
jne
in
imul
in
mov
test
jge
jno
and
or
aad
or
dec
mov
popa
fisttpl
xor
or
mov
and
push
cmp
stc
test
popf
pop
test
stos
jg
mov
adc
jl
sub
cmp
ds
adc
xchg
adc
out
lds
scas
or
cli
inc
jle
sbb
pop
int
mov
xchg
xor
add
hlt
stos
rol
dec
arpl
xorl
popf
add
rorb
inc
mov
mov
push
das
and
and
sub
mov
repz
pop
or
out
xlat
mov
dec
mov
loopne
sub
les
aaa
out
das
pop
xor
jnp
in
xchg
xor
and
jnp
mov
adc
insb
pop
xchg
cltd
movsb
push
sbb
int
push
sarb
cmc
cmpsl
or
enter
shrl
push
pop
movsl
lds
inc
and
sahf
dec
add
ljmp
adc
mov
mov
sbb
cli
or
ret
rclb
lcall
lret
add
mov
cmp
nop
mulb
sub
loopne
push
fdivl
mov
cmc
daa
lret
jge
dec
push
stc
sbbb
pop
sbb
sub
push
push
scas
dec
sahf
mov
fwait
ds
and
lea
xor
test
hlt
inc
dec
test
inc
dec
adc
fisubrl
addr16
shl
sbbb
test
loopne
sub
push
jnp
add
aad
iret
inc
add
aad
push
cmp
jecxz
lock
push
ror
jns
std
sarb
xor
enter
mov
adc
xchg
out
dec
jne
push
inc
test
fwait
inc
mov
pop
test
inc
scas
xor
movsb
xchg
inc
lock
addb
xchg
lret
fmuls
sbb
insl
in
push
sub
mov
testb
sub
divb
adc
sub
adc
jecxz
aas
jge
in
ljmp
repz
in
push
mov
fldenv
jo
fwait
js
dec
xor
cwtl
sbb
repz
ljmp
push
arpl
xchg
cwtd
sub
inc
aam
xor
bound
in
arpl
pop
mov
xchg
inc
or
bound
dec
inc
pushf
cmp
inc
test
sbb
mov
dec
mov
insb
mov
popa
out
mov
push
xchg
shll
xlat
loope
leave
in
jecxz
inc
sarb
ljmp
in
shr
int3
call
xchg
mov
ds
pop
sub
xchg
adc
lds
sbb
out
fisubs
ret
scas
ljmp
in
pop
sub
int
push
aaa
fnstcw
pop
inc
int3
xchg
aaa
push
repnz
les
lret
out
mov
iret
lds
nop
lahf
and
addr16
daa
add
test
sub
rolb
mov
pusha
je
test
mov
nop
test
pop
pop
rorb
mov
push
pop
sti
jns
lods
fisubrl
lock
stc
outsl
xchg
or
fimull
pusha
scas
aas
dec
arpl
ret
mov
push
rorl
jne
push
outsl
imul
test
pop
aam
cmp
lock
into
rorb
flds
mov
cmp
mov
dec
test
test
xchg
fwait
cmpl
js
mov
mov
aad
in
xchg
adc
xchg
lods
jmp
mov
sbb
adc
mov
jmp
enter
mov
cmpsl
mov
inc
cs
repz
xor
cmp
xchg
push
mov
pop
xor
call
pop
popf
test
mov
push
imul
lock
roll
pop
cmpsb
js
in
inc
repz
aaa
and
fcomi
fsubl
or
test
out
xchg
roll
sub
sbb
mov
pusha
dec
call
push
xchg
fstpt
dec
xchg
push
gs
cwtl
pop
cmp
push
push
pop
leave
push
iret
ja
ret
jp
shr
jp
out
fcmovbe
and
add
test
fldt
enter
sub
push
rcrb
xlat
sub
push
xor
lock
test
dec
roll
cmc
data16
pop
ss
sbb
iret
mov
bound
inc
stc
imul
shlb
aad
or
pop
dec
data16
adc
je
and
and
dec
ret
rcr
jl
test
jmp
scas
and
arpl
pop
sbb
add
repz
faddp
sbb
bound
shl
pop
dec
lods
mov
loope
push
pop
imul
int3
mov
out
push
cli
push
adc
mov
mov
dec
adc
sub
out
mov
push
cmp
jle
scas
or
aaa
scas
sbb
inc
dec
idiv
pop
mov
push
daa
xchg
negl
push
cmp
inc
ret
stos
xchg
ja
push
nop
pusha
test
out
shr
dec
or
sub
sbb
lahf
inc
sub
adc
sub
pop
xchg
sahf
jmp
sbb
cwtl
cmpsl
adcl
jp
pusha
fsubrs
mov
int3
mov
insb
sub
mov
sub
mov
pop
popf
jg
and
push
ret
mull
movsb
mov
jne
enter
add
pop
mov
stos
xchg
inc
notl
test
int
inc
add
push
dec
lds
xchg
inc
add
pusha
cld
aad
dec
adc
xchg
push
clc
out
mov
in
or
pop
inc
add
aaa
jmp
leave
aas
or
rcll
jmp
jae
js
imul
repz
cmp
sbb
inc
mov
sbb
cltd
sbb
jns
inc
mov
or
out
xorb
inc
mov
push
mov
push
or
loope
xchg
sbb
xchg
leave
inc
jle
int3
pop
pop
dec
push
addl
jmp
imul
pop
ret
mov
or
cmp
pop
xorb
sbbl
pop
imul
mov
xchg
jmp
jge
jnp
jbe
lret
mov
mov
imul
lods
mov
xor
adc
adc
xchg
jle
mov
or
inc
insb
imul
pop
pop
pop
dec
lods
sbb
aas
push
cvtpi2ps
loop
imul
loope
stc
mov
scas
xchg
adcb
jae
cmp
mov
aas
mov
sbb
ret
repnz
dec
xchg
stos
push
push
jno
push
lahf
test
jns
ja
push
adc
movsl
sub
xchg
popl
out
jl
test
out
add
mov
inc
outsb
cmp
inc
inc
or
cmp
jle
fidivs
and
into
cli
mov
xchg
mov
out
mov
mov
in
out
cmp
xchg
daa
test
push
push
mov
or
pop
hlt
cmp
jge
fdivs
lret
and
ss
xchg
mov
sub
mov
mov
or
movsb
ds
push
and
cmpsb
mov
cs
hlt
sbb
insb
xchg
popf
hlt
xchg
inc
in
and
repz
jno
dec
inc
test
push
cmpb
mov
sti
or
test
lret
lods
flds
mov
int3
outsb
imul
push
jae
scas
add
xchg
nop
fsubrl
test
adc
int3
fwait
push
enter
mov
test
xor
subl
push
shll
pushf
xchg
adc
xchg
xor
push
mov
imulb
push
and
call
mov
movsb
int
cmpsb
sbb
scas
xor
in
xor
fidivrs
lret
movsl
cmp
pusha
mov
fcomip
test
xlat
loop
cmp
pop
dec
sahf
enter
cs
repnz
int3
mov
jo
mov
adc
jge
out
push
scas
mov
out
or
pushl
inc
jnp
ret
jb
add
or
xor
adc
cmpsb
and
and
mov
add
cli
and
adc
xorl
jno
mov
popa
scas
xor
test
jmp
xchg
add
adc
jae
sub
inc
pop
jbe
insb
hlt
xchg
loop
cmpl
adc
add
in
mov
jb
aad
gs
mov
mov
push
xor
push
inc
shll
adc
repz
push
lret
jbe
jno
add
aad
jmp
icebp
inc
adc
adc
pop
and
pop
add
mov
int3
loopne
inc
lret
cltd
lds
dec
jl
fldl
inc
add
mov
mov
ljmp
sahf
enter
cmp
sbb
or
xchg
lret
lahf
test
dec
inc
out
testl
dec
xchg
ljmp
cmpsl
mov
and
pop
lods
xchg
dec
addr16
hlt
mov
imul
lahf
add
sub
xchg
sub
push
pop
push
hlt
stc
mov
sbb
xor
xor
clc
xor
div
or
xchg
or
push
cmp
inc
imul
inc
dec
pusha
adc
pop
mov
ljmp
pop
sub
adc
sub
mov
inc
cmpsl
lods
or
mov
jg
leave
mov
test
mov
std
ljmp
ljmp
das
lock
jge
sub
jae
sub
fistl
loopne
cli
pushf
mov
rol
lods
mov
xchg
or
add
xchg
cmpsb
insl
mov
mov
lock
xor
cmp
add
push
xor
adc
mov
and
push
dec
test
movsl
js
and
out
sar
jns
dec
je
pop
mov
cmp
mov
push
fcomp
xchg
arpl
movsl
pop
aaa
inc
add
inc
repnz
fs
push
and
and
movsb
subb
popa
add
insb
jl
xchg
xor
pop
lcall
jo
ftst
pop
pop
std
sbb
or
xorl
stos
stos
fisttps
sahf
jns
imul
jne
sahf
sbb
cltd
jmp
es
inc
cltd
mov
call
and
cmp
sub
mov
fwait
sbbb
shr
or
mov
shlb
jmp
and
lret
inc
mov
jne,pn
iret
pop
lret
shlb
mov
idivl
sub
add
rclb
lods
inc
mov
hlt
je
xor
inc
dec
add
mov
clc
pop
sub
sbb
xchg
mov
pop
jge
push
popa
test
popa
loopne
hlt
lock
lcall
or
lock
adc
xor
sti
pushf
and
add
jns
add
or
cmpsb
test
cmpsb
test
sub
aam
cmp
ret
inc
popa
lahf
pop
ss
loopne
inc
cltd
inc
out
lods
adc
xchg
das
pop
test
imul
mov
popa
test
dec
and
pop
add
pop
dec
pop
push
or
jmp
sbb
cmp
mov
mov
out
bound
cmp
and
jns
inc
fs
jns
shll
inc
mov
movsb
mov
fs
sti
daa
pop
or
dec
cwtl
rol
popa
xchg
insb
in
jecxz
push
push
pusha
push
ret
sub
ret
add
loop
adc
inc
fisubrl
jmp
pop
sbb
mov
xchg
sub
ss
xor
data16
push
call
outsl
push
and
xorb
adc
dec
adc
mov
ljmp
call
inc
sub
push
add
jle
sbb
sbb
inc
das
loope
xor
fisubl
push
jb
xchg
addr16
pop
jno
imul
test
addr16
insb
je
pushf
cmp
jmp
jno
scas
dec
push
loopne
loopne
psubb
jno
mov
and
add
mov
cmp
and
add
add
dec
sbb
lret
cmpb
cmp
jg
adc
or
lahf
data16
add
mov
lods
dec
mov
incb
insl
cmp
mov
sub
out
inc
aas
inc
and
dec
jae
jmp
or
cmp
test
fcmove
sbb
stc
ja
sti
imull
shll
mov
xchg
lcall
push
loope
ljmp
mov
mov
sbb
mov
enter
push
and
insb
add
xchg
test
pop
je
jmp
jnp
roll
out
jno
jne
lock
out
pop
cmpsl
arpl
das
loopne
jns
adc
or
outsb
mov
lret
jmp
in
popf
aaa
ds
popa
in
mov
mov
cmp
or
jmp
add
nop
roll
pop
rol
sub
sub
mov
xlat
popa
test
or
cld
inc
pop
sbb
jl
sbb
and
push
xchg
add
add
mov
scas
pop
fistps
jne
repz
cmp
int3
scas
mov
push
in
xchg
popa
and
pop
enter
addr16
add
or
mov
adc
lods
xchg
mov
jl
cmp
mov
mov
xchg
sub
jne
xchg
jp
pusha
icebp
jno
add
and
insb
lods
jmp
cld
mov
dec
aad
mov
fsubs
sti
fisttps
jno
cmp
lds
xchg
mov
adc
or
je
out
sarl
mov
addr16
insb
out
mov
dec
test
imul
add
sbb
lock
push
fidivs
mov
ds
jno
inc
idivl
ret
mov
sahf
scas
jp
xor
sub
inc
mov
sbb
popf
add
dec
repnz
stos
stos
enter
pusha
inc
data16
fwait
cmp
imul
incb
movsl
xchg
and
outsb
xor
adc
xchg
test
scas
jecxz
mov
shrb
cmpsl
sub
fcmovb
iret
xor
daa
xchg
sbb
notl
jno
pop
or
jnp
mov
cli
fcom
test
clc
shrl
mov
fcompl
rolb
cld
aas
xorl
mov
shll
sub
xor
js
popa
pop
fcompl
scas
ljmp
test
mov
mov
pushf
daa
adc
ficoms
xor
sbb
int
mov
cmp
jne
leave
jp
add
les
cli
mov
repnz
andl
call
sbb
jbe
aam
mov
sub
jne
ret
sbb
mov
lods
lahf
mov
test
mov
add
cmpsb
mov
cmp
ror
and
cmp
ret
adc
dec
mov
and
dec
pusha
dec
stos
ficoml
cltd
jae
aad
mov
jbe
or
jae
cmp
aad
pop
cmp
push
mov
mov
mov
sbb
jg
mov
and
jno
cmp
sub
lds
rorl
outsl
or
jle
fidivrs
xchg
dec
adc
push
sbb
push
pop
dec
sar
push
movaps
sub
aaa
in
dec
xchg
inc
in
imul
test
icebp
pop
pop
sbb
movsb
xor
mov
shlb
pop
xor
sbb
ficomps
mov
cmpsl
mov
cli
rcr
fwait
repz
test
xchg
and
insb
push
xor
jb
adc
sub
lret
lods
jbe
or
jbe
xchg
mov
popa
mov
stos
sub
jge
and
in
das
dec
sbb
mov
xor
dec
push
inc
mov
mov
mov
shr
mov
shlb
cmpsl
add
fmuls
xchg
lods
xor
mov
and
pop
mov
or
aam
fnstsw
add
loopne
dec
add
ja
push
aad
xchg
or
or
or
cmpsl
jl
inc
mov
dec
scas
pusha
mov
int
xchg
inc
lcall
mov
add
pop
jno
jp
add
pop
adc
scas
adc
stos
jmp
xor
xchg
mov
add
jecxz
jp
rorl
and
fs
adc
outsl
cmc
pop
or
das
cmp
out
pop
xchg
push
jge
ss
cmp
int
test
aad
sbb
insb
pop
mov
add
xor
fdivrl
cmp
popf
adc
lahf
push
ret
pop
add
mov
arpl
and
mov
mov
pop
fxch
subb
xorl
out
aad
push
and
mov
out
rorb
lea
inc
inc
fiaddl
ret
int
mov
fistl
dec
mov
fiaddl
fldl
repz
sub
or
ret
push
stos
aad
sbb
ja
lds
adcb
mov
in
sbb
pop
add
add
and
movsl
lahf
xor
mov
jne
jmp
shl
fldcw
xchg
push
addr16
jns
cmp
fwait
fwait
hlt
push
ret
jnp
ds
push
push
xchg
aaa
loope
cld
test
outsb
pop
imul
or
fnstcw
adc
push
stc
xchg
sub
mov
cmc
inc
sbbl
scas
xchg
sti
les
add
data16
mov
das
adc
loopne
addb
sub
jle
incl
mov
imul
jns
ficompl
mov
mov
stc
and
xor
push
mov
dec
jg
pop
hlt
stos
sbb
jb
adcl
test
xor
test
hlt
rorl
jnp
out
mov
lcall
or
fbld
inc
inc
movsl
xor
jb
adc
cmp
jg
or
fnstsw
and
shrl
fwait
mov
cmc
inc
add
fstpl
sub
cmp
mov
or
aam
xor
sahf
push
adcl
pop
xchg
cmc
add
xlat
or
mov
pop
cwtl
test
xor
in
out
cmp
or
subl
jns
dec
rorb
cwtl
add
xchg
pop
inc
sahf
or
xor
cmp
jle
cmc
insl
nop
fnsave
add
outsb
in
gs
pop
xchg
adc
ds
jae
mul
lods
mov
cmp
cmp
sbbl
lock
pop
movsl
dec
insb
mov
frstor
mov
jl
in
dec
push
clc
xchg
push
mov
out
mov
and
dec
test
jbe
jg
jo
add
mov
das
dec
popf
push
fs
testl
adc
popa
loope
mov
data16
mov
jle
xor
cs
hlt
scas
sub
fstpt
adc
outsb
ret
cmp
sahf
in
bound
jp
jbe
xchg
xchg
or
mulb
mov
in
js
ljmp
pop
sub
fnsave
mov
add
cmp
das
fstpl
adc
dec
pusha
sub
mov
pop
sbb
scas
pushl
insl
sbb
jb
out
adc
dec
aaa
fnstcw
mov
shl
sub
mov
xor
cmp
mov
arpl
inc
push
mov
clc
xchg
jg
xchg
ret
imul
adc
lahf
mov
leave
data16
aas
cwtl
add
adc
movsb
lods
lods
lret
in
data16
leave
and
std
fnstsw
js
daa
xchg
sti
in
xor
xor
cmp
xor
lret
sub
lock
adc
in
cmp
add
dec
dec
inc
dec
mov
sbb
sahf
rol
mov
or
mov
pop
pop
fdivp
shl
scas
sbb
test
pop
adc
mov
mov
test
jbe
ret
xor
mov
arpl
movsb
fcomip
jmp
jno
aam
cmp
mov
pop
fists
shrl
test
sbb
pusha
mov
adc
mov
jns
mov
mov
jle
lcall
xor
lock
pusha
dec
xchg
jns
fwait
daa
sbb
add
pop
mov
adc
xor
or
and
dec
cwtl
les
add
sub
lahf
xchg
sbb
out
jle
ss
movsb
cmc
cmp
jne
icebp
lret
xchg
ficompl
mov
mov
inc
cmp
fdivrs
mov
leave
ret
dec
and
cmpsl
int3
imul
dec
push
test
outsb
movsb
sahf
addl
imull
aaa
icebp
gs
mov
jge
sbb
rclb
mov
pause
jg
pop
lret
pop
mov
pushf
hlt
fdivrs
sbb
adc
in
test
push
push
hlt
test
addr16
ds
mov
test
dec
int3
pop
push
cli
adc
xor
sarb
mov
or
sahf
adc
and
fwait
lcall
in
push
fcmovb
mov
pusha
ret
loopne
xchg
test
aas
cmc
ss
scas
andb
aam
test
adcb
lcall
es
xor
imul
loop
xchg
lods
out
insl
fstps
insb
inc
mov
mov
lret
and
xchg
cli
in
jno
or
adcl
mov
aaa
jns
xlat
and
adc
jle
aas
into
repnz
sub
sbb
push
push
pop
sbb
gs
notl
mov
or
dec
xor
jle
in
pushl
sbb
stc
xchg
mov
sub
add
push
xor
cmc
in
xchg
std
inc
ljmp
dec
add
xchg
mov
int
xchg
addr16
mov
stc
js
rclb
iret
xor
push
enter
mov
xchg
mov
mov
pop
sbb
mov
cli
imul
add
inc
ret
jge
inc
es
pop
dec
sub
mov
inc
sahf
mov
jns
cmp
outsb
add
shll
inc
sbb
mov
fisttpll
les
add
std
repz
lcall
sub
lock
inc
pop
mov
out
sahf
cmp
nop
movb
outsl
lods
ret
xchg
in
sahf
inc
push
xor
jecxz
jmp
dec
cs
pop
sbb
fsubs
xchg
mov
aaa
pop
out
inc
in
ja
inc
fs
mov
and
lock
aam
ljmp
arpl
mov
shrl
ljmp
mov
mov
xchg
dec
or
fstpt
pusha
arpl
nop
in
mov
cmp
test
xchg
jae
div
popf
add
test
cs
ret
sub
add
jns
popa
js
inc
dec
jbe
add
ss
push
movb
sub
arpl
push
mov
movsb
int
scas
rcrb
xchg
incl
leave
pop
jl
push
cld
or
xchg
sub
repz
fs
mov
cmp
scas
test
cmp
push
mov
inc
nop
adc
jbe
sbb
jns
lock
push
int3
push
pusha
sub
out
jmp
add
xchg
aam
inc
adc
dec
mov
mov
xchg
nop
adc
aam
daa
add
push
xchg
jecxz
dec
fistl
mov
repz
inc
int3
leave
jmp
nop
xchg
dec
adc
test
not
dec
mov
loope
push
xchg
jecxz
sbb
mov
leave
addr16
xor
mov
neg
enter
fldt
mov
and
push
cltd
fnstsw
cmp
mov
pushf
prefetch
lds
mov
ret
out
stos
mov
inc
mov
lods
inc
pop
mov
xor
jecxz
loopne
fsubr
push
push
mov
pushaw
dec
push
jmp
pushf
sbb
ljmp
inc
enter
in
stos
add
and
mov
es
dec
inc
xor
xlat
adc
push
jecxz
ret
and
clc
cmpsl
jecxz
fcmovne
or
cli
aas
inc
cs
pop
bound
lret
lahf
push
pop
test
or
jno
adc
mov
rol
ret
hlt
aas
push
jmp
je
and
xor
mov
mov
test
or
pop
jae
push
jbe
aas
scas
inc
pop
outsb
and
push
insb
roll
lea
xlat
push
lock
outsb
in
repnz
push
push
out
repz
cmpsl
xchg
dec
stc
and
cmc
mov
mov
in
xchg
dec
or
aam
jecxz
pop
icebp
je
jno
scas
dec
sub
notl
dec
pop
mov
xor
mov
jnp
sub
xchg
pop
push
xor
in
daa
test
cmpsl
popl
pop
les
cmpsb
mov
mov
nop
cli
mov
adc
dec
mov
mov
sbb
jns
sub
in
test
jecxz
lods
outsb
inc
jmp
jbe
sahf
sbb
pop
cmp
mov
arpl
xor
sub
push
pop
aam
mov
cmpsl
jmp
push
or
cwtl
mov
arpl
pop
inc
mov
cmp
inc
cmp
adc
pop
pop
das
and
cmp
test
jmp
lock
clc
cmp
push
and
push
add
bound
xor
inc
imul
lahf
ljmp
scas
js
in
mov
imul
add
push
insb
aad
dec
aas
stos
aaa
repnz
or
push
xchg
flds
test
or
sbb
lret
push
loop
imul
insl
mov
loope
nop
push
insb
cs
call
test
cmc
xor
out
sarl
add
test
pop
rorb
add
shl
push
jne
cmpl
inc
sbb
xchg
mov
fs
mov
jecxz
and
lcall
push
movsl
sub
mov
inc
mov
scas
stos
pop
sbb
je
in
out
lds
and
inc
jle,pt
fbstp
ljmp
and
outsl
cli
mov
loop
loop
je
rcll
mov
loope
mov
mov
and
inc
inc
aaa
jo
ss
mov
ss
int
daa
fcompl
fists
cmpsb
push
xchg
xchg
cmpsl
lock
mov
push
lcall
mov
orb
cmp
mov
adc
lahf
pop
addr16
jp
sub
fisttpll
clc
sub
inc
out
cmp
pop
add
daa
insl
ds
xchg
std
and
movsl
adc
mov
xchg
pop
pop
call
sub
rol
adc
test
push
inc
push
push
cmp
xlat
xchg
testl
popf
xor
push
jg
and
repnz
or
into
mov
fwait
push
mov
sub
dec
out
adcl
fiadds
fcmovu
in
and
inc
jno
mov
jmp
loopne
iret
cwtl
add
mov
push
xchg
pop
cwtl
inc
inc
pop
xor
add
lcall
orl
push
xlat
jmp
test
add
adc
lret
add
cmc
sub
test
imul
fsubr
xchg
inc
gs
out
xor
test
mov
inc
das
sbb
ret
leave
dec
pop
cmp
insb
dec
cmp
cmc
mov
mov
jae
lahf
jecxz
popf
add
mov
xor
or
mov
clc
mov
popl
loope
or
shl
and
mov
jg
sbb
mov
adc
dec
aad
xorb
ds
push
addr16
int
and
scas
cmp
loopne
lods
ljmp
xchg
insb
popf
and
pop
ja
mov
aam
aad
sti
lock
dec
jno
jge
sub
ljmp
or
or
mov
push
lea
cwtl
and
sub
add
or
call
pop
and
or
or
mov
push
fcoms
rcr
sub
dec
movsl
add
dec
aam
out
stc
in
xor
mov
mov
jg
imul
movsb
sahf
out
bound
incb
ja
jmp
mov
mov
xorb
andl
pop
jg
cmp
movsb
xchg
jp
add
popf
mov
jb
inc
cmp
test
nop
fsubrl
std
sarl
pop
mov
out
push
imul
mov
push
ret
sub
clc
cmp
jl
and
sub
pop
add
mov
int3
mov
push
clc
push
cmp
xchg
std
dec
mov
es
mov
cld
xchg
loope
in
add
out
rorl
pop
insl
push
dec
lock
stos
xorb
pushf
xchg
pop
mov
je
stc
jp
xor
inc
insb
nop
sbb
xor
mov
push
mov
rolb
aas
pusha
lret
in
addr16
and
cltd
sub
add
xchg
mov
push
dec
xchg
inc
push
aad
xor
ljmp
sub
mov
push
add
subb
dec
sahf
adc
stos
or
imul
add
test
xor
out
mov
mov
xchg
sbb
or
dec
aad
dec
es
lock
inc
rcrb
xchg
pop
aam
mov
je
enter
xor
pop
mov
hlt
cmpsl
shll
dec
fisubl
push
insb
iret
imul
popf
popa
and
push
xchg
push
and
push
cmc
mov
cltd
or
in
and
mov
rorl
ljmp
add
cmpsl
add
add
and
adc
insb
stos
call
add
in
ss
cmc
xchg
or
dec
fistpll
je
mov
ficoms
xor
divb
fmulp
les
dec
sub
inc
imul
jbe
sub
lea
ret
fnstenv
inc
lret
push
int3
push
sbb
mov
scas
mov
jne
sbb
icebp
sbb
sbb
cmpsl
sbb
inc
push
loope
add
pop
in
sti
mov
fildl
fiaddl
out
les
xchg
jno
mov
fidivl
or
add
inc
cwtl
outsb
add
or
js
pushf
arpl
sarl
adc
and
popa
mov
out
push
stos
add
xlat
jp
cmp
test
int
sbb
add
rclb
leave
in
mov
lret
lods
pop
pop
addl
dec
xchg
into
jle
nop
scas
and
push
mov
cs
cmp
aas
pop
rol
jne
aaa
outsl
out
int3
jb
out
push
cld
iret
jnp
outsl
and
push
std
and
cmpsl
fimull
int
cmp
or
scas
es
jbe
push
mov
mov
rorb
adc
xor
adc
jns
lcall
mov
push
and
adc
cmp
dec
cmp
mov
test
movsb
cmp
test
mov
imul
push
dec
mov
adc
push
rcrl
dec
ret
sub
mov
push
jno
add
lods
call
jecxz
aad
sarl
mov
hlt
xchg
addl
add
movsl
mov
daa
cmp
mov
and
repz
mov
mov
pop
stc
sahf
pop
inc
pop
mov
cmp
bound
aaa
inc
mov
push
lds
jmp
mov
or
cmp
ret
pop
les
movsl
push
pop
mov
cmp
popa
sbb
xor
mov
int3
jp
int
fstl
adcb
jmp
dec
out
inc
cmpsl
xchg
add
mov
inc
mov
adc
lahf
popa
inc
jl
mov
stos
push
sbb
jmp
dec
push
jb
push
adc
das
ja
add
push
add
pop
fucomip
scas
sbb
jecxz
int
stc
xor
sarb
cmpsb
mov
sahf
jl
lcall
mov
xchg
stc
dec
xor
xchg
mov
xor
jg
lret
mov
pusha
and
add
ja
push
enter
or
xchg
pop
jnp
jmp
cld
stos
ljmp
sbb
ficoms
clc
lods
adc
xlat
and
or
icebp
pop
jecxz
inc
aaa
fs
jnp
aaa
pop
push
aam
xchg
dec
fisubs
test
lds
out
imul
push
pop
pop
mov
scas
pop
mov
xorl
mov
jge
pop
rorb
repnz
push
jg
and
inc
lret
imul
in
mov
mov
dec
lea
mov
rorb
xor
enter
je
mov
xor
mov
imul
sti
adc
je
sahf
dec
jb
scas
or
fistps
adc
cmp
xor
sub
adc
js
mov
das
ja
jl
push
xor
xchg
unpckhps
data16
inc
xchg
ficoml
stos
push
add
mov
xchg
std
mov
jo
jne
pop
jno
sub
js
cmp
lcall
add
xchg
fimuls
xchg
imul
xchg
aad
pop
push
in
inc
mov
adc
out
loope
xor
adc
cs
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
push
push
mov
push
call
lea
push
lea
push
lea
push
call
test
je
mov
push
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
mov
push
push
mov
push
push
push
call
movb
mov
add
mov
mov
movl
mov
push
call
call
pushl
pop
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
mov
call
test
jne
push
push
push
call
call
push
push
push
push
push
call
test
je
push
push
push
call
mov
mov
call
mov
cmpl
jne
push
call
add
push
push
push
call
xor
pop
mov
pop
ret
sub
push
push
call
lea
push
call
push
call
cmpw
je
push
push
push
push
call
push
call
add
jmp
lcall
adc
lods
out
or
cmp
rcll
fwait
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
push
out
or
int3
leave
xor
jle
sbb
and
loope
adc
and
mov
fwait
adc
into
jle
lods
mul
fwait
pop
test
mov
in
fildl
addr16
test
or
pop
sub
mov
push
sbb
cmp
dec
mov
nop
jb
dec
lahf
or
adc
addr16
ja
xchg
rclb
inc
out
pop
mov
cmp
subb
incl
push
cmp
inc
sbb
arpl
in
mov
fsubl
mov
fmulp
mov
enter
cmc
xchg
lock
subb
jmp
movsb
sbb
push
push
stos
mov
mov
push
sbb
test
or
ret
mov
rcrl
test
out
adc
rcll
fwait
dec
out
cmovge
xlat
test
jle
push
addr16
lods
call
mov
ret
rcll
mov
mov
aas
rcll
fwait
test
push
dec
ret
hlt
jle
adc
lods
out
or
cmc
jle
sbb
lods
out
or
repz
addr16
mov
mov
outsb
rcll
fwait
test
or
ret
cmc
jle
adc
test
or
inc
mov
adc
cwtl
in
cmp
mov
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
fisttpl
movsb
push
fwait
test
or
leave
mov
jle
adc
test
or
lret
mov
xchg
pop
addr16
test
or
loop
mov
clc
test
or
xchg
mov
dec
lret
lret
test
or
mov
jle
adc
test
or
ret
cmc
sahf
rcll
fwait
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
or
ret
cmc
jle
adc
test
dec
mov
jle
adc
or
jb
sub
push
inc
mov
adcl
sub
cs
jmp
add
test
xchg
mov
push
sti
mov
mov
mov
cmp
dec
mov
lds
adc
insb
add
cs
les
mov
push
xor
adc
int
pushf
sub
sub
jo
lods
dec
sub
mov
push
pusha
inc
pushf
test
lret
das
inc
fisubs
inc
in
in
or
fcomps
movsb
pop
out
sub
in
push
jo
mov
or
ret
out
adc
call
shlb
or
fadd
cmp
cmp
jmp
inc
cmc
and
scas
fildll
aas
mull
adc
mov
lcall
xchg
jle
aad
sub
aaa
ja
push
mov
push
push
mov
jmp
inc
mov
call
mov
cmp
es
in
adc
imul
lock
movsl
or
jbe
stos
pop
mov
xor
jno
mov
mov
sub
jp
xchg
movsb
rcrb
or
dec
pusha
test
loope
in
pop
mov
jmp
dec
xchg
call
dec
push
mov
dec
mov
mov
std
fstps
push
push
test
je
inc
mov
movsl
das
adc
push
jl
add
test
xor
daa
cld
sub
xchg
push
mov
add
mov
adc
inc
loop
addr16
imul
push
pop
adc
mov
cs
jp
mov
adc
inc
repz
mov
test
test
xchg
mov
aad
call
xchg
in
mov
jns
jbe
dec
push
bound
xorb
stos
imul
gs
orl
add
adc
pop
jecxz
and
cli
pusha
xor
jnp
and
mov
test
lahf
mov
gs
sbb
inc
lds
xchg
fldl
enter
jecxz
lret
jae
sub
cmp
mov
dec
out
pop
cmpb
imul
or
xchg
ja
je
xor
xchg
and
pop
pop
test
movsb
iret
dec
stc
popf
out
push
dec
fnstcw
shll
mov
mov
jns
sub
dec
negb
pop
mov
roll
adc
fdivp
ja
xchg
cld
lret
jle
dec
xor
push
or
in
mov
dec
test
pop
fidivl
adc
mov
dec
mov
pcmpgtd
or
ljmp
mov
in
dec
lods
cmp
add
mov
andl
fisttpl
sub
stos
sbb
push
out
sahf
push
cmc
fldt
cs
aad
scas
je
cmp
push
xchg
xor
mov
push
dec
lds
fsub
test
jns
es
cltd
xor
mov
testb
pusha
and
hlt
pop
push
sbb
push
sbb
outsl
in
jbe
jb
adc
cmp
or
mov
fsts
test
cmp
aam
test
lret
dec
cmpsl
push
mov
mov
movsb
mov
sbb
adc
or
and
pop
cmc
mov
dec
cwtl
test
fsubl
xor
cmp
int
pop
loop
je
xor
inc
decl
popa
add
mov
insl
or
inc
das
popa
inc
les
aam
xchg
insl
ret
in
jo
sbb
mov
xor
jbe
cmp
xor
sub
fsubp
pop
sbb
ficompl
lret
jmp
and
loop
outsl
addr16
fst
xchg
rcll
jecxz
adc
pop
loop
aaa
out
dec
pop
std
outsl
push
jge
insb
or
cli
sub
clc
lret
push
push
hlt
dec
fidivrl
mov
push
clc
push
or
mov
ret
jg
psubw
fnstenv
mov
repz
mov
fstl
or
test
push
int3
inc
shrl
and
add
shlb
pop
loope
ffree
mov
jno
pop
dec
pop
cwtl
aas
arpl
mov
xchg
out
xchg
cmp
repnz
imul
xchg
push
mov
mov
push
imul
adc
movsb
sub
xor
and
insb
jecxz
mov
ret
sbb
in
stc
jbe
pop
push
xchg
pop
mov
sbb
inc
sbb
mov
shrb
mov
or
xlat
repnz
mov
jecxz
lock
ds
aas
iret
ret
xchg
out
inc
stc
cmp
push
jge
mov
sbb
mov
outsb
cmc
push
test
lods
les
ss
adc
mov
mov
ss
adc
jnp
jle
push
cltd
push
inc
fldt
test
mov
lods
mov
lea
pop
xor
loope
mov
and
repnz
xlat
xlat
mov
insb
sahf
jge
std
inc
mov
fnstsw
push
jnp
sbb
jmp
mov
dec
fs
and
out
mov
cmp
mov
cmpsl
jl
lcall
sbb
fstps
cs
lret
and
and
aam
xlat
ljmp
imul
ss
inc
dec
or
imul
lret
fdivr
decl
dec
xchg
and
push
shlb
out
and
push
adc
les
pop
loope
inc
loopne
fwait
call
loope
add
mov
outsb
les
les
insl
jbe
lahf
int
sti
mov
movsl
or
and
jo
inc
loop
nop
fwait
stos
mov
push
push
dec
push
mov
xor
js
nop
enter
lock
jle
mov
mov
imul
fs
out
test
mov
fdivs
pop
add
fistpl
iret
popa
leave
push
push
pusha
jle
sbb
sti
shll
stos
xchg
aad
imul
inc
jnp
out
inc
cmp
popa
daa
mov
mov
cmp
in
and
mov
jne
push
cltd
stos
cmp
jb
add
out
nop
nop
or
sbb
jg
ja
fcmovb
cmp
aaa
roll
jno
dec
sbbl
lcall
enter
repnz
out
jl
push
jmp
or
cmp
pop
xor
push
add
dec
subb
pop
cmp
stos
cmpsl
cmp
shrb
jo
or
sub
jl
cmp
cmp
jnp
pop
mov
push
pop
bnd
push
mov
mov
fxch
and
enter
fidivs
mov
pop
lods
imul
mov
cltd
pusha
in
add
mov
filds
in
pusha
add
clc
sub
out
cmp
xor
ret
nop
fwait
mov
mov
pop
add
sbb
in
push
test
sbb
bnd
inc
inc
and
mov
pop
mov
jmp
jle
cltd
or
in
js
sti
push
fwait
mov
push
add
xor
or
or
out
mov
mov
add
pop
dec
xchg
push
inc
aad
jecxz
cmc
addr16
cmp
repz
mov
and
add
cmp
dec
movsb
int
mov
stc
jle
xchg
xor
mov
dec
cltd
pop
inc
and
mov
mov
pop
cltd
insb
mov
mov
xchg
mov
jbe
dec
pop
addb
mov
mov
cmpsb
xor
jbe
add
jns
sub
push
jbe
insb
cld
xor
scas
pop
cmc
out
mov
xorl
aaa
jl
push
jl,pt
outsb
and
sub
iret
test
and
xchg
inc
adc
fldcw
lcall
arpl
sbb
les
and
cmp
jae
cmp
repz
xchg
in
repz
sbb
test
aad
adc
stc
cmp
shll
mov
out
in
sbb
and
cmp
les
popf
jnp
or
push
int
cmp
jge
test
lds
hlt
cmp
shrb
inc
data16
loopne
out
xor
or
dec
in
mov
xor
push
fwait
xchg
leave
ds
mov
dec
sbb
cltd
lahf
in
pop
sub
dec
and
out
imul
add
dec
dec
mov
jo
xor
inc
rorl
imul
inc
inc
dec
xchg
hlt
mov
mov
pop
push
xlat
stos
ds
out
lret
fnstenv
jnp
push
sahf
jg
pop
pop
mov
stos
fsubs
sub
daa
rorl
jnp
xchg
mov
call
xlat
outsb
vxorps
pusha
clc
jb
orb
mov
shlb
push
int3
cs
fldenv
lret
in
dec
ficomps
mov
cmc
inc
daa
mov
lea
shll
in
scas
adc
pop
add
in
jns
dec
mov
pop
notl
addr16
xchg
jp
scas
jo
mov
sbb
hlt
rclb
pop
or
insl
mov
call
das
ja
sti
dec
xchg
lods
leave
sbb
rcrb
cld
aad
shrl
add
jle
lea
adc
adc
inc
shll
push
mov
xchg
popf
int
sub
in
es
dec
fnstsw
cld
fcoms
add
rcrb
jne
cmp
xor
lret
mov
rclb
and
xor
sbb
mov
js
jnp
test
out
adcb
sub
jne
pusha
sbb
lds
push
jbe
sub
and
pusha
sbb
rcrb
push
mov
jecxz
sub
jb
push
and
jle
dec
scas
jp
inc
push
gs
popf
jp
sbb
adc
fdivs
cmp
out
jno
pop
ret
out
insl
outsb
out
add
inc
inc
aas
in
inc
jp
rclb
sub
mov
lea
aad
or
es
into
mov
and
std
insb
add
cmpsl
cwtl
push
mov
out
mov
aad
and
jno
push
pop
push
cmp
in
jbe
pop
fmul
js
pop
shrd
push
cmp
push
cmp
adc
dec
mov
jno
push
scas
mov
sbb
push
pop
daa
push
and
and
jnp
ret
stc
adc
xchg
xchg
sub
aas
mov
inc
dec
out
inc
jecxz
int
push
fwait
mov
sub
mov
loopne
pop
lods
popa
decb
sbb
sahf
push
dec
and
cmp
jmp
xor
arpl
mov
jns
mov
adc
cmp
test
mov
mov
hlt
push
xor
inc
cld
loopne
mov
pop
mov
sbb
mov
call
push
mov
push
mov
lea
fcoms
inc
jmp
fwait
rorl
lret
push
sti
xchg
inc
sub
lds
pop
icebp
adc
jae
sbb
jge
inc
insb
mov
push
ret
push
jle
and
mov
mov
mov
cld
call
fnstenv
mov
imul
into
jecxz
add
call
jne
repz
into
mov
pop
jg
dec
pop
lds
or
sbb
pop
sbb
inc
insl
or
jbe
in
jae
push
mov
mov
jbe
pop
sub
adc
jmp
sub
mov
stc
scas
xchg
repnz
inc
inc
test
jmp
sar
mov
shrl
ret
mov
jge
subb
test
leave
add
pop
mov
add
fistl
icebp
mov
sbbb
or
and
mov
or
xlat
and
jmp
mov
pop
sti
sbb
nop
and
call
push
push
push
call
xor
add
ret
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
