or
adc
cli
mov
lcall
mov
xchg
test
push
cwtl
call
xchg
paddd
jns
mov
mov
ljmp
je
mov
sbb
data16
push
repnz
xor
lret
xchg
xor
jne
push
dec
aad
and
into
mov
ja
daa
add
or
fwait
sbb
push
or
lahf
sub
sub
and
jae
les
add
and
cltd
rcl
int3
rorb
push
jge
xchg
adc
pop
pushl
lahf
cli
lods
push
dec
xor
mov
aaa
and
outsl
jns
call
es
in
ja
sahf
mov
mov
aad
xor
dec
daa
mov
push
and
iret
outsb
sbb
addr16
imulb
jge
jmp
les
cld
mov
mov
xor
xchg
mov
lea
or
cwtl
pop
jbe
fadds
push
clc
pop
dec
pop
jb
scas
xchg
pop
xor
jmp
rcll
push
jne
pop
pop
push
and
mov
sbb
xchg
sbb
pushf
dec
divb
imul
mov
sub
iret
push
test
sub
xlat
pop
imul
cli
push
insl
sub
imul
movsb
and
rcll
clc
cmp
xlat
xor
in
adc
mov
cs
jp
inc
mov
pop
adc
mov
mov
xchg
sub
lret
inc
mov
mov
cs
test
ret
mov
les
pop
mov
push
lea
xchg
lods
xlat
lahf
adc
or
mov
push
cmp
jbe
or
js
fsubrs
cmp
lahf
xor
aas
sahf
outsl
add
movsb
mov
mov
jp
or
aam
hlt
dec
fsubr
lea
call
jno
popf
addr16
xchg
repz
pop
fimull
adc
in
shlb
sub
sbbl
insl
xchg
xchg
ja
pop
out
das
pop
rcr
xor
out
xor
aad
pop
int
fucomi
fidivrl
test
iret
fists
push
hlt
call
lcall
cmp
sbb
aam
pop
jp
js
into
mov
adc
push
cmp
insl
inc
sub
and
iret
test
mov
xchg
loope
xchg
lock
and
sbb
mov
outsl
lcall
in
dec
mov
jno
fcom
push
jge
addr16
xchg
into
dec
xor
pop
addr16
mov
pushf
mov
fbstp
ljmp
or
mov
addr16
cld
int3
add
push
out
pop
dec
sbb
mov
mov
inc
bound
mov
fistps
insb
lock
in
into
mov
inc
push
pop
push
jmp
xchg
call
in
scas
push
mov
or
stos
pop
push
nop
and
xchg
outsb
cmp
rclb
fnclex
lods
popa
mov
jo
pop
lock
stc
leave
fidivl
jnp
xchg
sbb
int
cmp
aas
xor
or
jnp
sbb
xchg
jne
cmp
xor
test
pusha
cwtl
out
shl
xor
nop
mov
daa
dec
sbb
mov
jne
mov
fiaddl
add
mov
fimull
cmp
fidivs
imul
ja
addl
xchg
xchg
insl
pusha
negb
sub
clc
add
push
add
pusha
shrb
inc
stc
fidivl
mov
xor
pop
pop
jecxz
cmpsl
mov
inc
fsubr
xchg
lcall
mov
test
pop
mov
daa
jne
test
and
rol
xor
pop
test
fs
imul
jp
dec
je
xchg
inc
in
fisttpll
cltd
call
movsb
dec
adc
pushf
jo
jl
adc
inc
pop
adc
add
pop
insl
addl
jle
mov
dec
xchg
dec
jmp
inc
ss
dec
xchg
dec
iret
stc
push
mov
pop
leave
or
insb
daa
jl
loop
fisttps
stc
xchg
pop
push
nop
add
pop
in
pop
ret
movsb
test
xor
pop
and
arpl
add
ficomps
int3
jle
inc
aad
xchg
add
add
fldl
sbb
xor
pop
mov
imul
shll
dec
or
dec
sbb
inc
roll
test
xchg
inc
lret
sub
pushf
inc
aad
loopne
in
ja
mov
pop
cmpsl
lret
test
xchg
sub
lea
fisttps
mov
movsl
and
addl
int
jecxz
sbb
das
sub
nop
sbb
mov
je
cmp
xlat
in
jae
fildll
loopne
inc
or
ds
jle
aaa
sbb
jge
cmpsb
sub
or
andb
mov
imul
cmp
rcrl
jno
jmp
stos
push
mov
mov
repnz
xor
jge
scas
daa
add
mov
mov
out
pushf
popf
mov
push
mov
push
sarb
xchg
mov
or
aad
imul
jnp
dec
mul
sub
xchg
stos
jnp
out
jo
pop
shlb
cmc
sub
sub
rcll
xor
mov
movl
xlat
in
ss
idivl
adc
adc
xchg
add
icebp
add
sub
xlat
add
jo
mov
inc
dec
aam
in
add
cltd
dec
mov
leave
xchg
imul
int
in
aaa
ds
std
add
int
leave
jp
pop
cwtl
clts
popf
sub
popf
jg
call
adc
clc
aad
cli
sub
scas
sub
fisubrl
lods
mov
test
dec
stos
call
sti
leave
in
jmp
push
mov
sbb
lahf
outsb
mov
into
scas
in
jl
mov
sarb
fnstcw
cli
and
cmpsl
test
mov
mov
popa
loope
inc
in
push
dec
into
pusha
sbb
push
call
in
xlat
hlt
ret
outsb
rcl
and
jnp
loope
and
iret
ret
stos
cwtl
out
fdivl
icebp
xor
mov
jmp
bound
lods
cmp
cmp
in
dec
hlt
shlb
mov
rcrl
je
pop
add
pushf
mov
dec
mov
bound
movl
mov
gs
xchg
movsb
cmp
push
jno
xor
outsl
inc
mov
mov
test
jb
das
cmp
adc
stc
push
cmp
int
xchg
jae
inc
in
insb
jp
and
mov
xchg
outsl
aam
inc
outsl
hlt
pop
push
inc
testl
xlat
dec
aas
js
sub
jns
fwait
out
lock
shrl
mov
out
dec
mov
push
fidivs
addl
mov
mov
add
stos
xorl
inc
cwtl
stos
fucompp
scas
mov
fldcw
cmp
lcall
pop
outsb
lods
or
stos
jmp
push
mov
mov
sub
lcall
int3
out
push
stos
in
pop
inc
jb
scas
cmp
push
test
adc
loop
lods
xor
movsb
into
mov
mov
lea
or
cmp
int
imul
xor
daa
popf
and
loope
and
dec
push
push
jnp
pushf
push
cmp
cmc
test
ds
ret
jo
push
call
repnz
or
push
mov
movsl
dec
movsb
jmp
pop
in
push
or
pop
popa
shlb
aam
xor
mov
sub
push
fiadds
push
xor
mov
cmpsl
sbb
lcall
add
or
rorb
cmpsl
sbb
push
push
aaa
mov
jmp
push
xor
insl
and
repnz
xor
insb
push
ljmp
scas
gs
xor
fbstp
push
leave
mov
mov
and
adc
mov
jg
or
fsubp
mov
aas
push
fstl
cmp
lock
nop
push
out
outsl
xchg
mov
push
repz
adc
insb
xor
notl
and
test
add
sub
pop
clc
cmp
sbb
sub
rcrb
add
icebp
push
mov
setge
out
adc
push
adc
push
inc
in
inc
and
subb
inc
enter
sarb
push
sbb
aam
and
add
pcmpeqb
cltd
rclb
mov
insl
jnp
sub
addl
aas
sbb
fs
inc
jns
mov
xor
dec
in
lahf
and
orb
pop
push
daa
fwait
dec
lea
add
xchg
subb
out
jmp
test
outsl
sub
repnz
rolb
inc
int
out
test
scas
push
xor
sbb
imul
adc
push
scas
cs
insl
leave
fmul
cwtl
mov
dec
cld
pop
ss
mov
and
test
pusha
aas
xchg
adc
or
lret
daa
stc
scas
sub
fwait
clc
js
stos
mov
jns
cli
cld
xchg
shrb
nop
decl
jge
dec
test
fcmovnb
dec
fucomip
xor
jns
dec
ds
push
repnz
or
cmp
cmp
sbb
push
sbb
outsl
lock
mov
sbb
in
pop
cltd
sbb
ret
and
mov
or
das
xor
fcoms
ss
xchg
ret
and
jo
fnstenv
loop
add
mov
add
jae
incb
mov
mov
es
stc
pop
fdivrs
cmpsb
mov
rorb
and
orl
sub
nop
mov
cmp
dec
jnp
push
add
xchg
jbe
cmp
inc
xorl
inc
repz
setp
je
into
mov
rorb
test
lock
roll
mulb
stos
xchg
incl
bound
cmp
jnp
cmp
push
inc
mov
nop
push
xchg
clc
cwtl
lock
and
add
mov
sub
pop
sub
mov
mov
lds
xchg
jb
es
jecxz
xchg
pusha
iret
jl
lods
pop
das
mov
add
incl
sub
mov
inc
push
repnz
push
lods
mov
inc
adc
push
ficoml
jmp
test
jnp
out
adc
fcoml
xor
outsl
rol
jns
mov
mov
movsl
sbb
sbbl
sbbb
mov
push
dec
mov
push
sub
xlat
es
lcall
push
imul
rcll
or
inc
aas
and
push
ret
lods
add
jmp
je
inc
jecxz
cwtl
push
fnstcw
aaa
loopne
mov
jmp
aad
ret
aad
cmpsb
aaa
cli
add
bound
dec
outsb
sub
scas
dec
ficompl
ljmp
dec
xor
test
adc
pop
pop
xchg
dec
adc
sbb
xor
js
sub
dec
adc
jae
imul
xor
ret
fdivs
xchg
pop
les
sub
cmp
fisubrl
aam
ja
pop
mov
aad
shrb
mov
fcmovnbe
sub
push
les
cs
ret
mov
lds
adc
inc
inc
cmp
push
aaa
imul
add
sbbb
push
mov
rorb
sbb
dec
das
decb
daa
and
fnstcw
js
pop
popa
aad
xor
dec
jge
mov
aad
dec
mov
scas
jo
jno
mov
in
lds
lret
jle
repz
pop
sti
inc
jle
lods
mov
sbb
push
pusha
pop
inc
jo
cwtl
add
cmc
lods
adc
push
mov
xor
jmp
pusha
dec
nop
jl
sahf
cmp
jle
rol
test
add
addr16
int3
test
cmp
dec
cwtl
ret
inc
testl
stos
cmpsb
pop
sub
add
sbb
movl
push
lea
divb
mov
stos
cmp
mov
leave
push
loope
pop
rcrb
sbb
mov
aas
cmc
jmp
push
fists
mov
add
test
jl
xor
adc
pmulhuw
sbb
push
inc
fsubs
and
cli
orl
cs
popf
dec
xor
lods
mov
jge
mov
cwtl
mov
inc
lret
add
outsb
dec
jle
cli
enter
ja
xlat
cmp
roll
inc
and
push
loop
std
push
pop
cmc
clc
or
mov
jmp
sbb
pop
aam
cltd
idivl
faddp
mov
cmpl
jnp
scas
mov
lcall
out
jge
cmp
adc
popf
insb
lret
mov
outsb
and
dec
push
jne
pop
xor
or
in
test
or
adc
dec
sbb
push
sub
adc
and
je
ja
sub
sbb
aam
adc
sbb
jbe
jbe
stc
mov
andb
pop
or
sbb
sbb
sub
adc
ret
lods
cmp
mov
add
add
es
adc
jne
adc
sub
lret
push
loop
popf
icebp
cmp
pop
xchg
push
add
dec
cs
das
pop
sub
cmp
xchg
cli
mov
mov
pop
icebp
inc
mov
sbbl
imul
cld
pushl
jno
outsb
cs
or
pop
add
and
fstl
arpl
fsubrs
dec
fistpll
ljmp
fs
clc
les
ret
shll
push
int
pop
sbb
movsb
jbe
mov
xchg
pusha
jl
cmp
jo
or
add
insl
dec
mov
xlat
aad
pop
clc
pop
je
add
cwtl
enter
loopne
out
push
fdivrl
sub
fcomip
lods
pop
andl
cmpsb
js
or
fiaddl
xchg
push
dec
cmp
adc
xor
adc
jecxz
movsb
pop
daa
adc
lahf
scas
mov
movsb
int3
mov
fs
dec
mov
loop
push
subl
ja
lcall
jmp
shll
xor
push
clc
notl
shrb
call
add
fidivs
sub
mov
stos
push
pop
cwtl
mov
mov
pop
xor
inc
test
mov
mov
leave
iret
add
pop
insl
xchg
cld
jb
leave
xor
jge
inc
jecxz
iret
push
mov
clc
xlat
adc
js
mov
and
or
aad
rorb
and
fildll
stos
or
mov
sub
sbb
out
xor
das
insb
dec
xor
in
inc
fs
mov
jmp
aad
dec
lcall
sub
gs
xor
xchg
adc
jns
test
sarl
lods
loopne
les
pop
ret
jle
loop
std
out
test
sub
cmp
adc
add
loop
or
fiaddl
xchg
mov
jp
add
lcall
xor
xchg
test
aaa
lret
into
loope
popf
sub
pop
iret
in
xchg
jecxz
mov
sti
mov
cmpsl
into
push
mov
fcmovb
test
mov
mov
and
in
pop
cs
cmpb
sahf
inc
xchg
jne
jl
pop
insb
repnz
xor
ret
mov
jmp
add
xchg
sub
cs
jno
push
pop
loopne
add
jo
movsb
orb
jp
push
pop
rclb
int
xorb
dec
arpl
push
mov
cmp
jnp
and
push
mov
xor
push
int
loope
sbb
inc
xchg
or
fdivr
mov
push
mov
xor
divb
sub
and
aam
adc
xlat
lcall
es
call
pop
sar
test
cmp
and
dec
shll
cmp
adc
cmp
outsl
mov
cs
xor
inc
cld
rorb
imul
in
lods
stc
adc
sahf
mov
adc
outsl
cwtl
xchg
inc
push
push
ds
dec
pop
pop
jnp
out
idiv
scas
out
ja
inc
lret
sbb
push
xlat
lret
ret
jp
inc
pop
and
mov
push
std
jnp
call
fiadds
insl
into
xor
shlb
add
test
jp
mov
clc
jg
stc
add
pop
cmp
iret
stc
add
sbb
iret
add
in
test
packssdw
xchg
dec
and
xlat
sbb
xchg
adc
push
mov
test
cli
inc
adc
jno
xchg
cmp
orl
stos
jnp
or
not
addr16
mov
or
mov
mov
jnp
adc
dec
sbb
xchg
addr16
dec
aam
fnstenv
dec
lods
lods
cmpsb
lret
cmp
pop
ljmp
push
movb
push
cmp
pushf
xchg
lahf
je
xchg
int3
mov
stos
test
adc
or
and
in
out
push
lods
rorl
test
insl
pushf
popa
adc
and
xchg
adc
jnp
inc
cmp
mov
loopne
stc
insb
and
pusha
pop
ret
pop
and
std
dec
xchg
cmp
mov
xchg
jecxz
pushf
sub
or
movsb
push
or
inc
mov
mov
mov
fstl
dec
push
and
lcall
aam
cli
or
mov
cmp
xor
test
int3
add
jmp
push
lods
cmp
sbb
mov
jo
push
lock
negb
pop
inc
dec
sarl
mov
enter
daa
fs
ss
fdiv
jo
mov
inc
lahf
pusha
adc
pop
pop
in
mov
push
sub
clc
in
sub
test
add
int3
push
outsl
loopne
punpckhdq
add
push
dec
jnp
int
scas
test
dec
into
into
inc
cmp
gs
ss
cmp
sti
lahf
sti
and
inc
arpl
adc
ret
test
inc
mov
cmp
ja
add
sbb
jns
fiadds
jmp
fmull
lahf
ljmp
add
dec
std
push
dec
dec
inc
lahf
mov
cmc
dec
mov
fwait
push
or
mov
and
xor
test
xor
and
pop
mov
xchg
lcall
out
and
or
dec
cld
cmpsl
fwait
outsl
sub
test
or
adc
adc
mov
imul
sbb
inc
stos
jle
int3
repz
jle
sbb
insb
or
clc
sbb
jg
faddl
dec
popf
cwtl
pop
xlat
mov
stos
xor
push
stos
jne
in
sbb
xchg
xchg
push
or
test
push
iret
jmp
dec
mov
lcall
dec
mov
cmp
jge
xchg
dec
loop
imul
les
adc
loopne
sti
je
or
pushf
push
or
lds
mov
loope
das
jle
test
push
rclb
add
cmp
and
aad
or
adc
in
aam
xor
cmp
loopne
and
jp
push
bound
push
mov
dec
shll
mov
out
xor
xchg
pop
inc
fidivrl
repz
int
xchg
mov
xchg
adc
scas
repz
loope
and
icebp
out
push
sbb
mov
or
scas
jle
mov
push
mov
outsb
aaa
leave
mov
sub
lds
jbe
push
push
ret
add
mov
cld
and
cmp
pop
test
int
mov
inc
sbbb
jbe
pop
xchg
ficompl
sti
dec
sarl
sti
pop
adc
pop
xchg
lock
daa
jo
insl
push
mov
and
push
jge
hlt
dec
out
insb
add
std
mov
mov
xor
inc
scas
js
mov
scas
test
cmpsl
shll
push
xor
test
and
outsl
aaa
and
decl
jne
out
arpl
mov
ret
ss
test
pushf
sbb
movsl
adc
rclb
data16
xchg
cmc
in
inc
addl
sbb
int3
cmc
jne
xchg
mov
mov
test
iret
rclb
add
aam
sbb
inc
dec
movb
jne
mov
xor
xorb
fdivs
das
lret
or
push
gs
mov
adc
add
mov
pop
inc
sub
mov
pop
into
inc
decl
out
jecxz
and
push
jmp
mov
int
or
mov
mov
sbb
mov
xlat
dec
je
js
lcall
ljmp
xor
cld
pop
int
inc
sub
push
or
je
dec
or
fs
daa
mov
and
xor
rep
push
adc
dec
cmpsb
push
pushf
call
dec
pop
test
jl,pn
pop
mov
jbe
xor
fwait
xchg
lret
push
mov
mov
mov
or
xor
ret
inc
aaa
in
jecxz
mov
popf
hlt
into
cwtl
xchg
xor
jb
cmp
xchg
call
fldl
in
push
pop
push
aas
mov
xchg
sub
xlat
mov
xchg
adc
or
jecxz
mov
into
xorb
inc
xchg
mov
mov
jae
xor
scas
xchg
test
add
mov
ret
inc
fadds
std
stos
cmp
mov
cmp
imul
cwtl
imul
jno
hlt
aad
add
dec
sbb
mov
push
jbe
ja
and
iret
popf
test
in
addr16
leave
xor
push
or
fwait
iret
cwtl
jge
sar
push
mov
test
enter
pop
outsb
ja
inc
xchg
and
and
mov
das
pusha
sub
mov
insl
loop
push
aas
and
push
mov
jns
je
mov
push
pop
rorb
pop
in
push
sbb
dec
js
xor
stos
pop
mov
fcom
fsubl
jae
icebp
cmpsl
das
movsl
sbb
loope
lret
ja
jo
and
dec
scas
mov
adc
ret
fs
fldt
dec
or
movsb
adc
push
addl
push
in
mov
cmpsb
addr16
push
add
push
dec
aaa
imul
movsb
idivb
cmp
dec
sbb
sub
add
xor
arpl
jbe
xor
lahf
or
push
or
mov
lahf
roll
sbbl
jno
and
lret
movb
sbb
loopne
in
adc
jae
adc
aaa
in
sbb
mov
lret
pop
xor
cmp
stc
mov
cmp
imul
inc
and
cltd
ss
xor
sub
loop
push
mov
hlt
ret
out
push
adc
test
paddsw
fwait
add
and
icebp
add
stos
mov
clc
jl
cmp
fiaddl
nop
das
lret
mov
loopne
push
shl
pop
mov
mov
fimull
popf
mov
inc
sub
lds
leave
bound
push
jnp,pn
and
sbb
push
pusha
sbb
outsl
ss
push
adc
xchg
pop
mov
lcall
adc
mov
orl
pop
push
adc
dec
rcrl
call
xor
and
mov
mov
sub
cmpsl
pop
pop
xchg
gs
test
jmp
out
mov
jl
push
and
bnd
addr16
popf
sub
push
cmp
cs
or
pop
enter
cmpsb
adc
sbb
mov
sub
test
xchg
andl
aas
mov
js
sar
and
lods
jo
mov
xlat
adc
xor
sahf
pushf
pop
mov
add
into
fxch
mov
mov
fldl
inc
out
mov
mov
pop
test
or
lahf
and
push
and
jecxz
dec
xchg
sub
cmpsl
xor
hlt
xor
sbb
jp
scas
hlt
or
sarb
pop
xor
test
repnz
push
cs
add
mov
xor
sub
ficoms
mov
add
cld
test
les
or
cmp
lds
mov
push
test
adc
dec
cmp
push
loopne
and
pop
xchg
insb
fldt
shlb
push
shrb
pop
or
add
out
movsl
scas
out
and
cmpsl
and
mov
inc
jbe
push
hlt
jp
stos
sub
mov
gs
loop
das
fidivs
jno
xchg
push
and
xor
jge
test
jl
lods
dec
imul
imul
stc
jecxz
sub
mov
inc
mov
and
jle
cmc
jo
or
push
movsl
pop
mov
inc
jbe
xchg
dec
mov
or
xchg
mov
cmpsl
add
add
ss
xchg
out
gs
adc
add
and
je
jbe
or
fnstcw
test
outsb
fwait
inc
xchg
xchg
push
pop
jns
sub
xor
jns
inc
cmpsl
das
jbe
int
lods
outsl
loope
dec
into
aam
mov
mov
sbb
pop
lret
mov
or
push
aad
shl
stos
fadds
xchg
movsb
ljmp
nop
loop
aam
adc
jns
push
cmp
dec
arpl
in
jmp
push
in
add
roll
loope
or
adcb
sub
lcall
mov
pop
out
pop
in
loopne
in
pop
in
push
push
dec
lcall
mov
out
push
push
aad
push
sub
mov
das
dec
push
insl
pop
sbb
push
pop
mov
xchg
push
mov
and
jl
xchg
jecxz
and
xchg
jecxz
mov
ds
lock
jmp
cwtl
dec
icebp
push
addl
xor
inc
mov
rorl
cltd
std
xchg
enter
ret
lds
test
push
mov
cmp
cmp
popa
mov
mov
cmp
jne
xchg
mov
fbstp
outsl
inc
xchg
outsl
outsb
clc
push
stos
sub
loopne
fldt
cmpb
stos
add
push
out
outsb
cwtl
push
add
and
es
stos
jo
movl
jne
ljmp
xchg
lock
decb
imul
out
sub
inc
rcll
in
or
xor
jo
mov
aam
jge
cmpl
xlat
outsb
xchg
int3
xor
mov
adc
lods
mov
aaa
fwait
mov
jge
and
ficoml
mov
rcrb
inc
mov
mov
sbb
loop
jb
xchg
cmpb
mov
fists
cmc
sbb
mov
roll
out
pusha
std
pop
dec
cpuid
sti
and
dec
jno
sbb
pop
inc
mov
and
shll
xchg
in
faddl
fstpl
lcall
add
mov
lock
outsb
jp
das
pop
xor
push
xchg
and
mov
in
dec
rolb
shlb
or
pop
shl
push
int
je
push
mov
fiaddl
jl
mov
scas
out
xor
lock
xor
dec
or
loop
dec
pop
pop
sub
sbb
ljmp
and
push
frstor
mov
lods
fsubrl
mov
adc
push
adc
xor
scas
sbb
shlb
xor
mov
mov
inc
ret
mov
xchg
cs
pop
mov
popf
sti
and
out
push
ss
jge
push
pushf
jo
and
jne
cmc
jae
dec
push
out
jb
scas
std
addr16
push
pushf
fistpll
xor
loop
add
es
jl
mov
push
xchg
aam
loope
xchg
jge
dec
mov
outsl
adc
movsb
xor
lret
pusha
ret
cmp
movsb
mov
fdivrl
mov
and
enter
shll
sti
add
ret
push
add
xchg
fistpll
xchg
nop
test
sub
popa
scas
or
pushf
sub
pushw
lds
push
lahf
and
add
pop
pop
mov
sub
das
push
jb
into
xor
lahf
mov
popa
repnz
out
iret
mov
inc
flds
shrb
and
push
mov
cli
and
data16
lods
in
pop
push
sub
or
push
jae
cmp
negb
shl
js
pushf
call
adc
mov
dec
inc
jmp
lret
ficoml
int
and
test
loopne
fwait
inc
add
cmc
inc
push
pop
aas
jle
add
xor
cmp
pop
cli
pop
into
fdivrs
mov
sub
adc
aam
cmp
and
fcoms
mov
xchg
out
xor
sbb
dec
push
arpl
pop
mov
lods
fsubrl
aam
mov
jmp
repnz
push
jae
push
and
or
pusha
fstl
in
aad
pusha
outsb
aas
jmp
jb
jne
loope
jo
push
adc
adc
push
or
imul
fs
push
test
jbe
fstpl
sbb
lea
loope
mov
cmp
inc
xor
daa
in
push
and
cmp
sbb
push
mov
pop
sbb
mov
movsl
lcall
dec
mov
sub
inc
in
lea
daa
cs
adc
and
mov
xchg
xor
pop
aaa
push
nop
push
sbb
lcall
outsl
mov
add
mov
test
aaa
imul
sahf
or
push
pop
mov
out
adc
push
imul
aaa
fidivl
leave
incb
ds
cltd
mov
jo
add
aad
dec
sub
dec
xchg
xchg
mov
push
div
pop
jb
push
sbb
and
mov
push
pop
push
cmp
daa
xchg
das
clc
jecxz
fs
outsl
and
pushf
mov
jmp
outsl
push
mov
dec
fsubrp
dec
dec
fcoml
lods
mul
cmp
pop
or
ja
push
add
and
outsl
mov
sbb
pop
js
lds
cmp
daa
imul
loope
and
adc
out
add
adc
loopne
push
dec
adc
out
popf
inc
pop
jnp
xor
xorb
pop
fidivrs
add
jae
xchg
mov
and
xchg
icebp
bound
xlat
sbb
ficoms
aaa
dec
push
pop
push
scas
xchg
mov
sub
idiv
out
in
cs
pop
push
ret
mov
mov
sbb
dec
push
jmp
xorl
inc
mov
dec
popa
mov
mov
in
into
pusha
loop
rcl
mov
imul
mov
imul
dec
sti
dec
ja
cmpl
cmp
ss
adcb
pop
out
fucomi
pushl
mov
shrl
daa
hlt
xchg
xchg
int
dec
movsl
xor
add
ja
insl
or
xchg
sbb
negl
jbe
push
imulb
xchg
out
adc
xlat
pop
push
sbb
and
lods
xor
push
sub
aas
aam
test
fadds
pop
dec
dec
fdivr
aaa
push
sbb
repz
xchg
dec
js
data16
dec
rorl
in
mov
das
dec
nop
sub
sbb
pushf
dec
mov
dec
aam
mov
xchg
xorl
dec
mov
lret
mov
in
out
outsb
int
iret
ja
xchg
out
pop
add
jb,pt
into
pop
out
ja
ss
inc
loopne
and
jg
push
test
mov
jp
xchg
mov
sbb
adc
dec
cli
cmp
adc
stc
dec
adc
mov
mov
movsb
xchg
in
inc
lods
push
mov
das
push
or
das
or
cmpsb
sbb
pop
inc
pop
mov
addr16
das
aaa
mov
enter
loop
sbb
mov
push
inc
js
lret
pop
imul
stc
xchg
or
sub
cmp
rcll
adc
push
addb
add
insl
pop
sarl
and
cwtl
pop
cli
in
xchg
aaa
popa
mov
mov
rcl
icebp
insb
in
loope
mov
inc
sarl
mov
inc
pop
fsubrs
pop
dec
or
frndint
dec
pop
insl
shr
out
push
pop
sub
je
mov
jno
lds
add
imul
xor
and
and
ret
inc
inc
fdivrl
pop
push
push
adc
inc
bound
inc
mov
mov
test
scas
out
jb
andb
xchg
dec
rolb
outsl
sub
pop
sub
jb
jecxz
cmp
cwtl
aam
loop
xchg
jmp
fwait
loope
mov
fsubl
sub
dec
mov
push
faddp
outsb
jge
int3
jb
and
pop
pop
lds
cwtl
push
dec
lods
test
std
adc
push
xor
stos
mov
outsl
stos
aaa
test
test
jg,pn
test
mov
rcrl
dec
stc
lds
dec
mov
sub
pop
push
mov
jno
dec
mov
push
cltd
and
inc
dec
mov
push
lods
mov
in
mov
out
dec
dec
pushf
pop
and
jl
daa
inc
inc
xorl
lcall
testb
add
mov
xor
fsubl
shrb
js
pop
out
iret
mov
loopne
pop
pop
mov
pusha
add
add
int
jae
mov
cmp
mov
loop
aas
mov
inc
and
enter
imul
nop
push
mov
mov
ljmp
mov
mov
fiaddl
adc
mov
jl
test
icebp
lcall
push
jne
mov
test
data16
repnz
pop
cmpsl
jecxz
ret
inc
fstpl
bound
flds
mov
lods
mov
cmp
lcall
shrl
leave
adc
lods
int3
or
mov
repnz
testb
pop
adc
jbe
imul
mov
jne
inc
fildl
adc
dec
insl
xor
mov
push
dec
out
mov
aaa
lret
jp
push
xchg
dec
rcll
push
and
push
push
imul
dec
cmp
mov
sbb
push
cwtl
pop
pop
bound
leave
clc
jmp
cli
add
std
mov
ficompl
inc
popf
cmpsb
inc
mov
xor
push
adc
std
les
mov
push
int
mov
lret
sarl
int
nop
test
sar
pop
sahf
jno
repnz
mov
dec
or
or
loope
and
pop
jge
jns
arpl
pop
inc
cmp
mov
pop
test
add
and
icebp
sub
in
les
fs
cmpsb
ds
popf
pop
and
lea
sahf
xchg
scas
pop
and
cld
pushf
cmp
dec
xorl
pop
das
push
sub
loopne
cmp
fbld
in
dec
pushf
aas
ljmp
scas
add
test
pop
ret
fistl
xchg
push
lods
mov
or
sbb
mov
mov
push
in
test
aam
xchg
dec
jae
xor
jb
add
jnp
sub
add
ljmp
lss
aas
sahf
xorl
lea
inc
inc
pusha
push
test
lods
and
aas
push
adc
sbbb
adc
loop
sbb
xchg
stos
mov
xchg
xchg
insb
or
push
insl
stos
in
push
mov
and
pop
sub
or
jns
push
seto
stc
pop
cmp
imul
imul
dec
int
test
test
hlt
sub
xchg
clc
test
fiaddl
int3
add
lds
jno
mov
cmp
daa
fsubl
pop
add
lcall
or
popa
add
ficoms
fmull
sub
xchg
cmc
shlb
cmpsl
add
mov
dec
iret
ds
gs
pop
lods
push
push
clc
sub
pop
add
fstps
mov
or
add
pop
xor
xchg
or
push
jg
jmp
push
imul
inc
push
arpl
cmp
sbb
push
mov
test
mov
cmpsl
pop
ret
test
pop
mov
xchg
xor
add
mov
and
movsl
jecxz
mov
inc
stc
mulb
jmp
movsl
leave
mov
mov
mov
rorb
fadd
mov
push
rclb
jge
in
enter
sbb
inc
sbb
xor
shrl
push
insl
push
push
jne
imul
frstor
nop
mov
test
xlat
jl
mov
fmull
mov
call
cld
mov
das
xor
fldl
xchg
pop
lret
mov
int
inc
inc
jecxz
dec
add
adc
mov
lods
xchg
mov
xchg
jno
aas
or
and
or
shll
stc
repnz
divl
adcb
xchg
daa
pop
push
xchg
aad
push
adc
and
adc
jmp
cmp
sub
movsb
out
push
pop
aas
inc
popf
daa
adc
jb
or
stos
stc
movsl
jnp
jge
add
enter
loop
push
outsl
insb
ss
shr
xor
cmp
ljmp
pop
xor
dec
cld
enter
test
test
adc
loope
lock
negb
cmpsb
mov
shrl
jb
sub
int
out
mov
sbb
xor
push
xlat
out
mov
xor
xlat
mov
mov
das
incb
sub
pop
scas
or
adc
xorl
pop
mov
xchg
iret
push
sub
pop
into
ret
xor
nop
push
cmp
push
das
cmpl
les
adc
xchg
andl
lds
pop
push
mov
test
les
mov
pop
pop
inc
sbb
mov
mov
pushf
cmpl
pop
cmp
mov
dec
push
out
mov
movsb
mov
and
call
inc
mov
scas
addr16
pop
mov
sub
mov
out
pop
mov
imul
dec
test
cmp
pop
mov
mov
dec
and
adc
pusha
cmp
jnp
sub
gs
add
cwtl
push
iret
sbbl
add
js
sbb
arpl
loopne
loopne
jo
fsubl
xchg
mov
add
mov
fcomps
pop
and
sub
repnz
xor
jns
int3
sarl
dec
scas
mov
shlb
leave
cs
jb
std
sahf
enter
repnz
lret
repz
dec
stos
cmpsb
mov
sub
inc
loopne
mov
add
in
inc
mov
mov
movsb
leave
inc
jl
jecxz
outsl
inc
mov
aam
imul
xor
push
mov
insb
shlb
push
testb
nop
push
cmc
rclb
stc
xchg
mov
ret
rep
mov
mov
popa
cwtl
jbe
cmp
mov
inc
cmp
mov
lods
sbb
fwait
or
pop
sbb
nop
add
sbbl
adc
push
aam
sub
jae
add
imul
jl
or
in
xchg
ret
icebp
cmpsb
nop
out
fwait
nop
mov
and
fimull
outsl
xchg
pop
add
jl
dec
inc
mov
push
idivb
sbb
dec
arpl
testb
push
scas
in
cmc
test
outsl
adc
out
ljmp
ss
adc
test
pop
subl
push
push
sbb
or
gs
inc
xor
out
mov
lahf
push
loop
jmp
mov
cli
addr16
xchg
les
push
mov
cmc
mov
or
cmp
imul
inc
xor
push
lret
in
dec
out
mov
in
mov
jb
push
btc
adc
push
scas
xchg
frstor
inc
cltd
loope
mov
fcomps
sahf
std
pop
mov
push
add
xor
fldcw
push
push
push
or
mov
sbb
lahf
jbe
test
sub
jg
push
mov
and
mov
jle
mov
push
pop
orl
push
pop
insl
and
negb
push
in
inc
shr
cmp
pop
add
mov
js
jae
pop
cmp
cmpsl
and
or
lds
les
dec
xchg
pushf
ret
popa
std
mov
jnp
mov
add
je
mov
push
mov
sub
pop
popl
leave
clc
add
mov
ret
clc
aaa
mov
inc
mov
insl
mov
push
xchg
test
fbld
mov
jnp
fcoml
jo
ss
mov
andl
or
push
outsb
dec
adc
jae
pop
pop
mov
xchg
daa
dec
cli
dec
je
xchg
aad
int
pop
clc
pop
in
push
push
pop
sbb
pop
pop
mov
sbb
movsl
fwait
and
adc
outsl
xchg
jp
cltd
inc
jg
xchg
mov
push
gs
cli
idivl
ds
and
fwait
push
rcrl
fdivs
xchg
in
mov
mov
push
and
xlat
shl
push
mov
repnz
sarb
adc
add
push
dec
sub
std
fildl
push
mov
mov
mov
or
das
xchg
loope
adc
clc
xchg
push
ja
sbb
shrl
fdivrl
lods
repz
and
jmp
loope
jns
repz
dec
aam
into
jae
aas
inc
loopne
sbb
dec
adc
jo
loopne
adc
jbe
test
push
movsl
push
push
mov
inc
inc
and
mov
ret
sub
in
jge
push
mov
mov
add
fcompl
mov
cmp
subl
push
insl
add
jae
insb
add
stos
or
hlt
repz
movsb
jo
pop
xor
jmp
dec
shl
and
test
dec
addr16
and
pop
and
dec
or
xchg
and
and
jno
ds
test
xor
cli
ss
mov
jno
mov
pop
mov
arpl
adc
or
add
ja
mov
or
aaa
and
xchg
cmp
inc
es
imul
push
or
stc
add
out
push
outsl
mov
hlt
inc
shr
das
sbb
cmp
es
and
cmc
push
enter
mov
mov
bound
les
movsb
cmp
push
repnz
loope
xchg
pop
shrb
fbstp
clc
imul
popf
mov
pop
xchg
xchg
push
mov
push
mov
iret
test
iret
scas
outsl
pop
stc
mov
or
and
pop
push
push
pop
sub
inc
mov
ret
scas
push
imul
idiv
mov
sbb
roll
pushf
cld
push
test
sub
jnp
sub
jl
daa
lods
fsts
scas
sub
lods
xchg
sub
pop
cs
es
rolb
mov
xchg
dec
aad
clc
adc
scas
fwait
je
je
std
mov
in
dec
ss
mov
sub
leave
std
mov
pop
mov
pop
mov
push
xchg
pop
dec
push
and
pop
lock
scas
adc
popa
in
jle
jmp
shrb
fisubrs
imul
fwait
pop
faddl
cmp
xor
xor
cmpsl
jle
inc
xor
hlt
test
imull
mov
jp
arpl
lret
push
dec
addr16
add
clc
cmc
test
sub
jle
cltd
or
push
outsl
das
sbb
xor
jbe
pop
cwtl
fldenv
aad
call
addr16
pushf
shll
cmpsl
mov
jne
cmpsl
sbbl
xor
gs
push
dec
sub
xlat
adc
in
or
jo
pop
push
insl
testl
insl
adc
hlt
jp
in
test
mov
pop
sub
mov
xor
lods
push
or
push
int
mov
sbb
or
sbb
dec
push
jns
inc
mov
pop
outsl
jp
cmpsb
dec
mov
jno
ds
dec
sbb
and
test
xchg
push
adc
scas
into
mov
pop
outsb
test
jns
jbe
sub
mov
lds
stos
lret
in
mov
xor
xor
sub
idivb
out
add
lahf
mov
test
xor
adc
loopne
movsl
ss
ret
push
push
jo
push
fcoms
inc
mov
addb
movsb
pop
pop
mov
test
sti
shrl
hlt
popf
push
lret
adc
mov
sub
xchg
jmp
add
push
sbb
jb
mov
inc
mov
arpl
incl
out
mov
adc
aas
and
jle
xor
insb
xor
fnstcw
dec
incl
xchg
popa
sub
xor
pop
xchg
ret
in
stos
pop
cwtl
les
sbb
jl
dec
pusha
and
sbb
push
decb
jno
imul
and
lods
out
shlb
stos
push
mov
outsl
mov
test
int
stc
sub
stc
mov
mov
stc
mov
push
push
clc
jne
insl
xchg
push
in
ret
push
inc
mov
xor
xchg
cltd
cmc
mov
dec
das
pop
add
decl
ja
sub
mov
and
iret
fstpl
je
sub
lea
mov
lret
mov
movsl
and
dec
sbb
jo
into
lods
aam
sbb
out
sbb
mov
dec
cmpsl
and
loope
hlt
arpl
jno
sub
sub
pop
inc
pop
adc
es
jae
cli
notl
out
push
mov
scas
pop
jne
xor
imul
fnstenv
push
or
mov
outsl
sbb
lods
int
in
in
test
dec
fistps
das
sbb
dec
movsb
inc
dec
in
sti
mov
fst
xor
pop
mov
xor
push
std
bound
xchg
imul
inc
test
add
flds
enter
jl
jl
out
jle
mov
pop
nop
rcrb
cmp
mov
push
adc
loopne
adc
or
call
jg
ret
insl
repnz
mov
and
shrl
mov
dec
push
mov
jo
out
mov
lds
ret
pop
adc
test
subb
add
call
aad
cmc
mov
iret
loopne
or
aaa
push
xorl
int
setp
xor
pop
repz
fisttps
cmpsb
mov
je
fwait
shlb
loope
ds
imul
scas
test
shrl
and
mov
pop
out
sbb
pop
cmp
sbbb
xlat
fwait
mov
in
fists
lret
std
and
test
cmp
cltd
add
insl
and
xchg
add
sahf
out
dec
ja
sub
in
jb
mov
orl
repnz
mov
mov
ds
ss
test
daa
stos
call
cli
and
test
movsl
inc
dec
mov
sbb
lcall
decl
fs
lahf
sbb
scas
cmp
jo
scas
test
cltd
lock
mov
stos
mov
les
lds
jo
add
mov
cmpb
call
add
divb
xor
cmp
sbbl
push
mov
jmp
lcall
andb
cld
cmc
adc
ss
js
vcvtsd2ss
jbe
lods
jle
jno
ja
in
pop
out
lods
sbb
pop
dec
push
gs
mov
or
sbb
pop
ffreep
mov
push
cmp
leave
mov
orl
and
xchg
dec
inc
sbb
xchg
into
mov
push
mov
sbbl
lods
sub
xor
inc
inc
inc
ja
inc
repz
add
hlt
filds
push
jmp
dec
sbb
jmp
sub
mov
dec
leave
loopne
mov
mov
jecxz
fsub
sub
add
lret
mov
or
push
and
inc
arpl
pop
outsl
imul
cmp
in
mov
cmp
rolb
adc
stos
jmp
add
sub
rorb
add
xor
icebp
cwtl
xchg
pop
dec
sbb
mov
and
test
lods
jnp
fdivrs
or
std
insl
sbb
pop
lea
repz
xorb
ret
mov
add
add
push
test
mov
ror
outsb
pop
test
or
cwtl
idiv
aad
push
std
fildl
pushf
ret
inc
jae
in
jge
insb
mov
cmp
test
popa
sub
xor
nop
dec
aam
push
mov
pop
ja
sbb
xor
and
push
loop
dec
mov
sar
daa
or
pop
dec
stc
pop
lahf
mov
dec
push
dec
aaa
inc
cltd
test
mov
lock
adc
sub
pop
in
ret
je
jo
popf
fldenv
dec
xchg
mov
lea
ja
das
lret
and
xchg
cmp
adc
orl
mov
adc
push
jnp
sbb
mov
xchg
mov
fistpl
push
dec
xchg
ja
inc
fcmovu
cmp
inc
ror
xchg
lahf
mov
iret
movb
and
and
ret
not
sub
cmpsl
test
es
loopne
repz
mov
std
sub
cmp
or
jge
out
test
mov
add
pop
xor
rcll
inc
sbb
xor
cmp
or
into
mov
cmp
jp
add
fs
mov
test
lods
cmp
xchg
test
xlat
mov
in
cmp
outsl
testl
pop
cmp
in
je
push
cmpsl
mov
inc
pop
push
pop
adc
adc
sub
ret
rorb
xchg
gs
fists
sub
mov
aas
inc
orl
pop
and
insl
sub
jl
in
fwait
inc
bound
mov
mov
mov
xchg
movsl
shrb
pop
leave
sub
jmp
mov
mov
lcall
lods
sahf
xor
mov
pop
mov
hlt
in
or
mov
arpl
mov
out
aam
mov
sbb
and
aas
out
in
loopne
xor
mov
lds
pop
cli
mov
and
shll
imul
push
cld
test
pop
aam
jne
lods
sub
lock
pop
ret
in
out
push
sbb
mov
andl
dec
sub
xchg
dec
cld
sub
scas
pop
imul
cmp
push
push
pop
testl
ljmp
xchg
flds
adcb
or
cmc
in
in
adc
loope
test
dec
in
jae
test
pop
push
js
popa
xchg
pop
adc
push
pop
sbb
sub
inc
inc
or
nop
fs
pop
jne
push
popf
pop
pop
jge
je
stos
push
shll
xchg
add
insl
insl
jp
movsb
jp
pop
jp
insl
mov
popf
sub
out
shrl
rcll
push
aad
icebp
and
stos
and
xor
sbb
pop
repz
mov
cmp
sbb
sub
in
insb
aas
pusha
add
iret
mov
das
movsl
and
xchg
cs
jns
push
fs
incl
lret
or
lret
adc
push
or
pop
jbe
rcrl
test
lret
mov
imul
mov
xchg
fnstsw
mov
and
cli
pushf
push
fwait
mov
mov
lods
jbe
pop
stc
int3
iret
dec
mov
xchg
mov
push
fcompl
inc
dec
add
sbb
call
les
add
test
inc
jecxz
aas
outsb
pop
push
mul
mov
les
jae
xchg
out
adc
enter
mov
cli
movsl
in
jne
push
pop
sbb
xlat
pop
mov
shrl
test
lods
out
data16
mov
repz
sar
xrelease
fsubrl
sbbl
stos
les
pop
pop
lcall
sub
pop
dec
mov
or
inc
out
sarl
mov
das
mov
mov
and
daa
mov
inc
push
sub
inc
or
sub
inc
xchg
aaa
jb
sahf
dec
pop
push
push
mov
lcall
jmp
aam
lret
aad
adc
lcall
inc
sub
js
dec
adc
test
sub
push
decb
mov
mov
xor
inc
cld
imull
std
inc
push
and
jo
jg
jle
outsb
mov
mov
mov
jmp
pushf
test
js
mov
lock
cwtl
sub
stos
push
jmp
dec
or
mov
jb
push
and
cwtl
mov
insb
mov
loope
mov
add
aaa
leave
cmp
xchg
or
loope
js
stc
and
sub
out
dec
cmp
es
dec
movaps
and
test
or
and
mov
add
dec
cmp
shll
out
or
int3
movsl
mov
setle
xchg
pop
inc
loopne
or
stos
lret
mov
push
std
std
movsl
sbb
pop
mov
mov
iret
xor
push
xor
adc
popf
popa
out
or
jg
dec
sbb
out
loopne
dec
cmpsb
js
add
rorb
repnz
enter
scas
push
shll
lret
inc
inc
mov
add
pop
add
fcompl
push
es
push
js
sub
in
out
sub
sub
scas
dec
mov
fs
sti
shrl
jecxz
add
loop
insl
cmp
stos
stos
jecxz
jae
jecxz
and
jne
daa
lcall
sub
scas
mov
hlt
sub
mov
enter
and
mov
xor
and
test
mov
mov
push
lea
jg
inc
push
sbb
in
shll
dec
cmp
dec
cmp
shlb
test
xchg
push
cli
cld
lods
jae
sti
adc
adc
lods
xchg
or
or
and
pushf
enter
and
and
arpl
iret
mov
shrl
mov
adc
iret
lods
ret
or
cmpsb
adc
sar
ficoms
fstl
repz
push
and
sbbb
or
insb
xchg
sub
gs
enter
cmp
or
repz
mov
add
pushf
inc
lcall
mov
enter
xor
fprem1
add
jbe
push
cmpsl
push
mov
pop
adc
dec
cmp
mov
jl
in
sahf
pop
data16
int3
and
mov
dec
popa
jae
rcl
push
mov
add
sbb
jnp
adc
clc
sub
pop
cmp
out
jnp
push
subl
gs
push
or
and
lahf
bound
test
fidivl
les
cs
ja
and
int
inc
jb
mov
mov
push
fnsave
push
xchg
icebp
mov
cmp
jmp
push
and
data16
dec
mov
shll
jmp
lcall
sahf
xchg
jecxz
ds
ret
lret
or
movsb
or
int
dec
push
mov
mov
repz
add
sbb
jns
or
push
mov
loope
push
mov
icebp
xchg
lahf
and
sarb
inc
mov
sahf
rcl
sub
leave
xor
dec
ret
mov
test
jo
iret
cmpsb
enter
jo
in
push
lods
xchg
js
lods
jae
popa
or
ljmp
lea
pop
pop
sahf
js
add
mov
mov
jle
in
lods
scas
dec
stc
dec
rcrl
pop
gs
mov
xor
mov
cmpb
xchg
pop
inc
iret
add
and
loope
mov
clc
mov
pop
xchg
sti
mov
and
int
pop
aaa
adc
jl
dec
pop
pop
mov
pop
arpl
adc
icebp
lea
adc
mov
xchg
notl
test
out
push
inc
loope
xor
dec
jo
push
fidivrs
inc
mov
enter
cmp
jg
out
mov
mov
jae
push
adc
or
out
cmp
or
adc
xchg
insl
sbb
xchg
into
jmp
les
popa
jne
out
aas
mov
and
cld
and
ss
mov
dec
bound
or
add
icebp
xlat
movsl
je
push
mov
fs
pop
jge
mov
outsl
loop
pop
les
sub
sub
std
cmpb
call
push
test
cmp
movsb
xlat
sbb
inc
loopne
ds
adc
sarb
clc
jg
mov
mov
repz
bound
lret
xor
pop
lods
or
pop
push
cltd
mov
mov
push
out
xchg
sbb
mov
sbb
push
sti
mov
jnp
lock
out
and
adc
pop
ds
testb
and
jge
aad
dec
or
repnz
shll
or
cwtl
aas
in
pop
loope
fcomps
jp
in
lods
fdivp
fistpl
sbb
mov
mov
rcr
out
lea
fs
notb
xchg
xchg
sarb
aas
pop
inc
imul
or
sti
xorb
cld
scas
pop
aaa
jae
nop
outsl
fisubrl
pop
call
jl
daa
outsl
clc
js
sub
inc
out
mov
movsl
cwtl
push
and
mov
xlat
stos
adc
dec
lcall
inc
imulb
std
jno
xor
jbe
into
sbb
fdivl
std
jae
in
call
lds
and
fs
cmp
cmp
mov
push
scas
sub
jecxz
idivb
les
xor
mov
imul
mov
cmpl
cmp
lds
loopne
jle
mul
xor
jecxz,pn
xchg
sbb
out
pusha
shll
xchg
insl
into
dec
ljmp
mov
data16
out
mov
fwait
dec
cmp
leave
ret
dec
mov
nop
je
pop
and
jno
vpsubsw
fistpll
mov
pop
pop
pop
in
movsl
cmp
fcomps
jl
je
test
sbb
mov
adc
insl
push
xchg
or
lahf
pop
inc
test
sbb
mov
ss
mov
out
inc
cmp
sub
mov
enter
repnz
adc
mov
and
cs
mov
mov
or
mov
add
in
push
clc
and
jo
fldt
push
cmp
cmpsl
pushf
mov
cmp
and
movsb
lods
mov
lds
mov
das
imul
int
mov
push
out
jmp
ja
sub
adc
xchg
pop
loope
aam
xchg
sub
stos
mov
sbb
inc
xchg
mov
ljmp
mov
sti
loope
and
dec
shll
mov
pop
push
out
nop
in
int3
sbb
add
add
and
rorb
mov
clc
call
inc
xor
pop
xor
mov
cmp
jae
xchg
out
push
add
rcll
push
cmpsl
jns
xor
repnz
push
orb
mov
dec
adc
xor
mov
adc
stc
lods
cwtl
cmp
lret
pop
ja
sub
fsubs
test
dec
in
push
push
cmp
pop
leave
sub
inc
into
ds
xor
jns
dec
cld
mov
clc
jl
in
or
outsl
stos
test
inc
sahf
aad
add
je
subl
test
adc
cli
test
mov
mov
testl
popf
mov
dec
pop
lock
lcall
rcll
pusha
xor
iret
sub
mov
out
mov
aaa
mov
ja,pt
xor
adc
sahf
scas
in
push
dec
mov
sub
push
mov
xchg
nop
ficoml
cmp
cmp
call
fs
mov
jns
lcall
inc
stos
call
sub
pop
xor
sbb
jb
rcr
shll
pop
sarb
add
shlb
and
out
cs
or
dec
dec
enter
sbb
xchg
xor
sbb
or
addr16
js
xor
lds
cmp
mov
fnstcw
test
rol
lods
addr16
sub
adc
xchg
lods
dec
xor
and
lods
mov
repz
fld
sahf
pop
inc
sub
xchg
adc
pushf
js
xchg
dec
adc
ss
mov
stos
sub
arpl
in
mov
stc
shll
in
fucomp
mov
cwtl
insb
out
sbb
dec
out
jge
outsl
cmpsb
add
pop
xor
mov
jp
rorb
outsl
sbb
leave
stos
and
jo
dec
ret
scas
in
jle
pop
aad
mov
mov
pushf
pop
push
repz
clc
cmp
fs
fsub
pop
mov
xchg
add
and
loopne
mov
ja
adc
in
in
ss
mov
xstore-rng
cmpsl
inc
andb
iret
mov
mov
fidivrl
stos
inc
imul
es
bound
shlb
cld
sub
scas
or
jae
sbb
pop
or
push
push
fs
mov
negl
mov
lods
stos
dec
iret
and
cmp
or
mov
push
add
mov
dec
lods
sarb
jecxz
add
cmpsl
jno
xorl
pusha
into
icebp
jge
or
cmc
xchg
mov
add
xchg
inc
pop
jno
mov
loop
loope
push
clc
sahf
lods
andb
and
out
fists
pop
std
xchg
lahf
dec
stc
mov
rorl
push
ljmp
repz
push
and
pop
lds
addr16
mov
callw
jle
or
cld
lds
cmp
xchg
or
jl
mov
mov
pushf
inc
pop
test
scas
scas
andb
mov
testl
mov
cmpsb
imul
sub
mov
mov
call
add
or
cmp
fistpl
int3
ds
daa
out
outsb
jmp
push
leave
in
je
jae
push
pop
sub
or
xor
ss
loop
mov
jg
push
pop
js
mov
ljmp
sbbb
pop
rorl
arpl
sahf
xchg
xchg
add
inc
popf
loope
dec
inc
mov
das
test
je
cmp
enter
push
and
sub
inc
cmp
stos
pop
repnz
jne
mov
jne
cli
aas
lret
dec
out
je
imul
dec
scas
out
shlb
cmp
cld
in
aaa
test
in
lock
mov
mov
push
jmp
aad
push
ds
adc
loopne
mov
cld
cmp
xchg
mov
adc
lret
lcall
push
icebp
lahf
sahf
sbb
enter
test
xchg
lcall
xchg
ljmp
mov
int3
test
dec
std
pushf
push
cwtl
mov
xchg
sub
pop
xchg
mov
dec
dec
xlat
push
rcrb
call
mov
lcall
mov
mov
xchg
xchg
mov
push
lock
fdivp
jecxz
inc
test
mov
xchg
fcomp
cli
push
cmpsb
xchg
aam
popf
mov
xchg
adc
cmp
fistl
push
ja
dec
and
in
loopne
mov
cmp
fstpl
iret
data16
fisttpll
inc
sbb
int
ret
mov
mov
mov
and
inc
mov
dec
mov
inc
jae
push
mov
movsl
jno
sar
fadds
in
sbb
jge
sub
mov
mov
sbb
jae
or
xchg
in
sets
push
add
mov
lea
dec
cmp
daa
fldcw
push
shlb
insl
je
sub
adc
pushf
push
sbb
ret
movsl
jp
out
int
orb
inc
test
ljmp
dec
xchg
adc
aad
je
addr16
imul
out
mov
cmp
hlt
jns
mov
cmpsb
dec
mov
mov
fwait
rorl
popf
fldenv
xorl
xchg
lock
shrl
cltd
adc
std
cmpsb
pop
dec
mov
pop
repz
outsb
push
jmp
xor
xor
adc
insb
nop
jmp
xorb
pop
push
rorb
xchg
daa
pop
inc
lods
inc
cmp
inc
fs
ljmp
lods
xchg
and
add
ficomps
sbb
xor
aam
mov
cltd
scas
in
pop
lods
rcrl
popf
popa
lods
clc
addb
add
jle
adc
std
out
cmp
aam
fdivl
ror
cmp
aam
shrl
daa
bound
or
dec
call
jno
push
add
fcoms
mov
scas
add
jp
jl
movsl
popa
sbbl
scas
cltd
jae
out
test
cld
mov
jb
outsb
push
mov
mov
or
sbb
add
out
push
pop
bound
dec
pop
decb
mov
add
adc
fld
xchg
sbb
es
push
adc
cli
mov
sub
pop
add
notl
or
sbb
cmpsb
scas
xchg
in
mov
adc
int3
jle
push
add
and
ret
shl
repz
test
in
cmpsb
mov
bound
pop
jle
dec
jne
repz
jmp
xor
mov
fwait
js
jp
nop
lock
mov
dec
flds
std
aaa
inc
movsb
stos
pop
lods
push
mov
add
mov
das
fadd
or
int
cmp
and
mov
adc
sbb
cmp
loopne
xor
imul
pop
shlb
or
mov
xchg
addb
ljmp
leave
and
xor
add
jo
addr16
insb
push
mov
sti
and
inc
sbb
test
outsb
cmp
xchg
adc
jge
pop
bound
mov
push
mov
daa
js
jge
pop
in
icebp
xchg
out
push
shl
stos
sbb
jb
aaa
cli
nop
dec
dec
fisubrl
push
lcall
mov
ljmp
sbb
mov
mov
mov
insl
add
xchg
cld
loope,pt
clc
xchg
ret
sbb
dec
jle
dec
insl
aad
call
movsl
loopne
scas
sbb
test
and
mov
dec
sub
sub
or
xchg
cwtl
imull
and
inc
scas
xlat
mov
stos
mov
je
in
pop
dec
mov
jae
mov
mov
jecxz
push
outsl
jp
xchg
mov
popf
sbb
jns
pop
or
imulb
addr16
out
fcomps
sbb
xor
or
mov
or
stc
test
jecxz
arpl
ljmp
push
outsl
andl
mov
inc
dec
fsubs
rcrl
pop
imul
adc
bound
daa
xchg
ja,pt
cwtl
cmpsl
sbb
in
add
ljmp
inc
clc
mov
or
out
icebp
push
imul
sbb
cmp
push
pushf
sub
ja
lock
dec
cmovae
dec
pushl
movsb
ss
or
add
mov
test
ss
ret
ja
out
inc
fldenv
int3
inc
imul
insb
out
pusha
into
mov
adc
out
mov
daa
jo
and
and
inc
ljmpw
mov
or
and
jp
mov
aaa
mov
xor
pop
int
cmpsl
push
cmp
xchg
lcall
mull
xor
cmc
dec
cmp
fsubrs
jl
mov
pop
sar
pop
outsl
icebp
xor
inc
cmc
mov
popf
pop
cmp
jge
xor
push
or
jle
mov
jb
sbb
lret
adc
ret
leave
push
mov
popf
lea
inc
fiaddl
in
or
hlt
or
cmp
push
test
fistpl
mov
and
mov
or
inc
lock
fcoml
push
cld
xor
or
imulb
sbb
subb
mov
adc
mov
and
repnz
pop
mov
rol
push
scas
add
fidivrs
imull
int3
mov
mov
jne
xchg
mov
int
jecxz
movsb
or
and
mov
xchg
adc
xchg
or
inc
mov
adc
xchg
in
rclb
xchg
mulb
jnp
xor
cld
inc
push
test
xchg
lods
push
add
or
test
xchg
sbb
jg
pop
daa
hlt
dec
cmc
xor
mov
or
dec
fistpl
stc
pop
push
xchg
xor
test
hlt
mov
mov
js
bound
bound
aad
stos
xchg
jae
lcall
push
fstpl
test
xchg
dec
cli
sbb
add
mov
lds
pop
nop
pop
lds
jne
pop
aaa
fmul
pushf
add
mov
push
mov
cmpsl
pop
lret
or
add
mov
sar
pop
call
mov
in
pusha
data16
fdivs
pushf
bound
test
int
jg
xor
xchg
adc
fdiv
and
in
add
and
mov
jl
mov
xchg
push
ja
bswap
test
fdivrl
push
mov
and
lahf
sbb
lret
in
fdivrs
test
jl
sub
iret
and
inc
ss
in
xchg
js
push
nop
sbb
sti
insb
leave
pop
aam
pop
dec
pop
push
push
adc
and
cmp
mov
push
fcomps
dec
inc
aam
dec
adc
inc
push
add
pop
lds
fnstcw
pop
js
mov
xchg
pop
lock
xorl
das
scas
pop
cld
jo
in
ret
xchg
jb
adc
add
xchg
fsubrl
std
push
mov
xchg
test
test
mov
out
ffreep
mov
in
ljmp
mov
test
stos
not
sbb
repnz
shr
dec
pop
rol
cmp
mov
push
cmc
movsb
fnstcw
jo
sbb
mov
xchg
add
and
adc
neg
imul
add
lret
test
inc
jns
bound
inc
out
mov
into
imul
movsb
push
xchg
out
pusha
stc
stos
adc
out
jg
enter
mov
scas
mov
lds
pop
mov
adc
js
inc
out
rorb
adc
in
in
fs
sahf
adc
mov
mov
xor
lcall
repz
pop
inc
pcmpeqd
sti
mov
inc
dec
xorb
dec
push
std
mov
pop
shl
mov
or
out
shl
popf
daa
fdecstp
pop
mov
mov
cmp
and
xor
add
insl
xor
imul
jne
hlt
cmp
mov
mov
xor
lret
sub
jns
push
ds
xchg
xchg
ss
test
lahf
fdivr
mov
xchg
imul
mov
cmpsl
decl
icebp
imul
data16
jne
mov
mov
push
loope
xchg
sbb
inc
rcpps
inc
push
ds
jge
add
jno
pop
movsl
jae
cli
out
or
in
shl
mov
xor
fsubrs
dec
outsl
sbb
pop
out
test
and
pop
out
addr16
add
js
and
popa
fdivrp
out
pushf
imul
mov
pop
cmp
cmp
push
popf
popa
stos
jle
jmp
loopne
push
iret
fcomi
adc
dec
gs
outsl
xor
xor
iret
inc
cmc
pop
pop
notl
adc
xor
cmpsb
ljmp
xchg
dec
mov
push
mov
push
aad
imul
or
fsubrs
enter
iret
and
pop
xchg
es
push
loop
clc
loopne
dec
mov
inc
pop
in
mov
leave
adc
cltd
mov
pop
xor
mov
int
mov
pop
cmp
mov
in
cmpsb
cmp
push
pop
out
imul
and
jg
mov
inc
sbb
mov
ror
iret
or
repz
mov
shlb
test
mov
cmpsl
outsb
lock
and
and
iret
ljmp
and
mov
in
and
lea
mov
mov
xchg
lret
dec
sub
dec
push
xchg
mov
mull
mov
hlt
movsl
mov
outsl
sbb
pop
push
daa
or
sbb
pop
js
sbb
fbstp
in
hlt
in
or
lret
fdivl
movsb
mov
mov
leave
lods
mov
xchg
subb
and
pop
lahf
pop
insb
insb
cmp
ja
push
rorb
fst
sahf
les
mov
inc
dec
mov
ljmp
vprotb
ja
push
pop
or
mov
arpl
jo
icebp
or
mov
xchg
dec
xchg
or
mov
xchg
push
int3
popa
dec
pop
lahf
mov
mov
xchg
rcrb
adc
inc
dec
dec
mov
jb
fbld
fmuls
imul
das
adc
dec
mov
cmp
pusha
sahf
out
push
mov
mov
mov
fmul
iret
push
fistl
mov
test
mov
xor
xchg
dec
pop
sbb
pop
or
bound
push
xor
sbb
push
jns
cmpsb
sbb
and
test
stc
icebp
xor
ss
movsb
mov
xlat
mov
and
test
inc
mov
pop
push
jg
sahf
fcmovne
aas
xlat
mov
repz
ss
into
sbb
xchg
ficompl
clc
sub
mov
and
fs
jge
cmpb
inc
or
add
inc
mov
or
and
adc
mov
dec
arpl
sub
test
test
xor
mov
mov
sub
sarl
add
add
add
shlb
out
je
inc
scas
push
and
clc
sub
xor
xchg
insl
cld
es
daa
adc
cmc
mov
test
sub
hlt
mov
and
jg
clc
inc
push
aam
das
je
fs
xchg
stos
xor
dec
sub
in
xchg
mov
pop
push
fcomps
lods
icebp
lcall
push
sub
shlb
in
lahf
mov
dec
push
dec
out
daa
dec
push
cs
pop
sub
mov
insl
mov
imulb
or
and
dec
hlt
inc
les
ret
call
mov
test
pop
les
popa
js
je
nop
leave
push
mov
imul
push
iret
mov
sbb
mov
mov
push
mov
add
mov
inc
arpl
shll
fs
fistpl
in
cmpsl
cli
ret
mov
rclb
lret
jno
dec
pop
insb
xor
aad
data16
and
orl
lret
les
fldcw
movsb
xchg
lcall
mov
adc
clc
or
mov
sbb
lret
and
sbb
aam
ja
add
aad
movsl
popf
fimull
aam
rclb
leave
xchg
cld
int3
test
outsb
in
decl
cmp
mov
hlt
jb
xchg
out
inc
jge
outsb
jle
cmc
stc
adc
imul
in
lea
imul
pop
clc
adc
adc
lea
arpl
cmp
push
bsf
inc
out
jg
ret
and
pop
scas
cmc
out
jp
jle
pushf
mov
xchg
lods
mov
fdivrl
out
out
aam
fwait
rcr
push
xchg
sub
iret
loopne
xorl
je
bound
adc
out
pop
adc
jmp
mov
nop
mov
es
pushf
in
fdivs
or
imul
cmp
mov
aam
mov
lods
mov
popa
mov
pop
rorb
push
sub
or
sbb
decl
shlb
push
add
jbe
xor
inc
decb
stc
sahf
loopne
pop
xorb
sub
ret
sbb
jle
jbe
repz
movsl
insl
rcrl
aaa
iret
cmp
inc
mov
les
orl
xor
inc
je
mov
fcoms
pop
loopne
cmp
xor
dec
das
and
imul
sub
je
jmp
out
mov
push
cmc
add
cld
push
fwait
mov
dec
bound
iret
sbb
jae
xor
js
js
mov
out
aas
push
xor
pop
mov
aas
xchg
xchg
mov
fsubrl
je
mov
mov
pop
hlt
cs
ret
lods
shll
imul
sysenter
mov
sahf
and
jmp
push
jecxz
mov
idivl
sti
pop
scas
add
adc
jmp
sbb
gs
ret
adc
fwait
test
into
cmp
xor
stos
push
into
and
mov
aam
ds
pop
inc
imul
and
add
rclb
pop
aaa
mov
cwtl
fildll
int
and
sub
push
mov
jle
pop
jmp
cmp
sub
fcomps
sub
fistpl
or
mov
cmp
dec
in
xor
ret
sub
mov
sub
divl
imull
mov
adc
shll
jnp
outsb
pop
out
subl
leave
aam
lods
gs
mov
movsb
push
mov
scas
push
lret
int3
notb
mov
out
push
cmp
and
sbb
jb
iret
sub
lret
pop
mov
add
lods
fsubrs
cmp
adc
mov
adc
cmp
inc
or
repnz
rcl
xor
movsb
in
jmp
add
cmp
repnz
xchg
xlat
aas
fs
test
fadd
fnstenv
push
xchg
loopne
mov
push
push
ret
ret
popf
xor
sub
jb
xchg
xchg
cli
and
mov
es
mov
mov
lret
push
adc
cmpsl
fsts
sub
hlt
repz
push
pop
sub
js
push
sti
sbb
imul
js
addr16
mull
adc
push
adc
test
adc
cltd
mov
pop
dec
jp
pop
mulb
aam
fsubrp
sahf
lret
add
outsl
jne
xor
push
repnz
xchg
mov
and
fbld
bnd
xchg
clc
cmp
sarb
cmpsl
dec
or
fsubrp
ret
stos
push
add
mov
jno
std
pop
pop
sub
pop
idivl
cmpsb
lock
es
cmp
push
sub
out
aad
add
jno
cmp
mov
mov
adc
jmp
and
dec
cmp
inc
js
test
add
scas
mov
mov
inc
cmc
in
inc
aad
cmpsb
jle
cli
mov
int3
lahf
fsubs
pushf
nop
adc
ljmp
sbb
lds
cmpl
lcall
jge
jmp
mov
mov
testb
jle
aaa
cmpsb
dec
insl
repnz
pusha
pusha
leave
pop
es
and
fwait
pusha
fwait
out
cltd
test
rcrb
push
cltd
inc
outsb
add
stc
push
mov
scas
mov
mov
mov
test
stc
jae
inc
pop
xlat
pop
lods
das
jae
lock
std
xchg
rcr
jmp
jl
lds
scas
add
or
add
js
int
xor
stos
xor
popf
fidivrs
mov
push
cli
add
mov
lret
mov
leave
lcall
inc
and
lcall
or
ficompl
and
mov
in
pop
mov
shr
cmpsl
rcrl
bound
and
push
inc
insb
lods
shl
add
in
jge
adcl
xchg
loopne
sub
xor
sbb
inc
dec
bnd
shrl
jle
mov
clc
roll
shrb
xor
out
scas
push
scas
nop
push
inc
out
add
andl
loop
inc
pop
clc
push
sbb
bound
cmp
outsl
test
cmp
add
xor
push
mov
imul
out
aas
push
bound
daa
je
pop
mov
sbb
hlt
in
jno
insb
adc
ja
adc
test
or
inc
dec
mov
adc
dec
cltd
int3
add
scas
xor
pop
ficoms
mov
push
sbb
mov
cmp
aad
xor
mov
cmp
jbe
insl
dec
inc
in
icebp
fistpl
loope
or
data16
xor
sbb
cmpsl
vshufps
jae
or
sarb
fst
jge
dec
xchg
inc
and
mov
stos
dec
ljmp
jns
scas
scas
lock
cmc
cmp
mov
push
mov
xor
and
sarl
add
pop
mov
cltd
out
adc
rcl
xor
adc
push
and
gs
cmp
add
fistpl
mov
inc
lcall
xchg
adc
and
push
pop
lahf
stos
into
lret
shl
lods
outsl
rcr
pop
out
push
push
lds
jno
mov
shr
push
jle
jecxz
cli
and
cmp
rclb
push
jmp
or
into
jns
xor
cmp
scas
out
push
int
jae
lret
cmp
test
mov
out
add
jne
xlat
out
jae
movsb
fisubrs
movsb
dec
add
aam
cwtl
cmp
push
add
inc
rorb
xlat
and
jp
gs
jno
repz
outsl
ljmp
lret
mov
adc
fbstp
cltd
out
ja
loopne
stc
cmpb
and
sbb
aad
adc
icebp
pop
mov
mov
stos
dec
repz
sub
xchg
mov
mov
loope
cmpsb
push
sbb
cmpsl
and
sti
dec
loope
push
frstpm(287
xlat
mov
or
ret
fists
mov
jo
dec
scas
sbb
lcall
push
push
xlat
fidivl
sub
loope
sbb
mov
loopne
sub
xchg
dec
sub
ret
pop
dec
jne
jb
adc
ret
cmp
rol
xor
gs
loopne
jae
scas
push
fwait
lock
insb
mov
cmp
test
mov
std
cld
stos
rcrl
sbb
enter
cltd
dec
mov
inc
out
imul
jb
jne
inc
scas
inc
pop
and
outsb
jae
sub
and
push
sub
or
cmp
sub
adc
push
icebp
adc
addr16
call
mov
and
or
js
lret
clc
dec
loop
lret
inc
es
jle
mov
loope
cld
popa
dec
pop
test
adc
andl
mov
mov
jmp
rorl
in
mov
pop
mov
xor
push
push
fnstenv
orl
xchg
mov
aam
sub
sbb
mov
and
outsl
xor
mov
dec
push
jge
sahf
xor
jae
jle
xchg
jnp
inc
arpl
in
add
dec
imull
cmp
aam
andb
mov
mov
jno
pop
jg
push
cmpb
mov
icebp
sbb
jbe
or
cwtl
sahf
out
inc
test
movb
sbb
lock
repz
out
push
pop
movl
pop
loop
outsl
fs
push
lret
mov
enter
nop
into
ret
dec
scas
clc
out
push
jecxz
test
xchg
mov
mov
lahf
mov
sub
xor
cmp
hlt
movsb
lret
lods
mov
jmp
fldt
hlt
cmc
cltd
sub
imul
popf
push
test
cmp
sub
add
adc
inc
lods
outsl
mov
and
and
ja
jne
and
dec
ljmp
jmp
inc
inc
outsl
inc
add
xchg
mov
dec
xchg
sub
inc
sahf
adcl
fmulp
jmp
push
loope
mov
adc
adc
movsl
mov
aas
jnp
insb
shl
lea
add
adc
test
xlat
add
enter
adc
inc
xchg
test
adc
inc
fistpll
cmc
add
sbb
pop
xor
andl
cmp
adc
lahf
mov
xchg
or
or
jecxz
inc
jns
sti
ja
xchg
add
lret
mov
fisubl
sbb
into
xor
or
sbb
notb
jp
inc
push
xchg
dec
add
outsl
test
push
out
fcomps
and
dec
pop
ja
cmp
stc
adc
cmpsb
ja
js
mov
outsl
call
sbb
lret
and
push
jg
test
jl
dec
push
imul
mov
stos
iret
dec
inc
jecxz
movsb
cmp
push
sbb
sbb
sbb
xlat
fldt
imull
test
enter
cli
dec
xor
clc
jns
test
inc
xor
pop
pop
stos
insb
jg
sbb
push
mov
add
xor
dec
imul
xlat
add
flds
mov
jecxz
dec
xor
push
scas
aaa
mov
dec
in
xor
sub
aad
outsb
jmp
test
leave
pop
inc
in
lock
movsl
adc
push
lods
add
les
xorl
jecxz
movsl
mov
xchg
rolb
xor
mov
dec
paddusb
add
xchg
mov
ss
inc
and
push
aam
test
ja
in
cmc
adc
dec
insl
fisttps
inc
pop
jnp
mov
adc
lea
push
sbb
mov
dec
fistl
pusha
sub
jae
repnz
jo
cmc
arpl
adc
xchg
cmp
and
xchg
mov
cmp
jb
add
stos
cwtl
mov
sub
xlat
cmc
stc
repnz
shl
bound
sub
ret
adc
xlat
cmpsb
bound
sub
or
je
pop
int3
or
cmp
add
sbb
jge
xchg
iret
packsswb
or
lcall
mov
data16
ja
or
lret
mov
pop
xlat
aaa
xchg
adc
jle
sbbb
loop
leave
fsubl
inc
cltd
push
push
jns
jmp
mov
adc
fs
dec
add
push
out
mov
lcall
sbb
mov
or
lds
and
loopne
nop
mov
sbb
jmp
fdivp
xor
cmp
or
cld
sbbl
movsl
inc
std
iret
xchg
das
pop
dec
adc
aaa
in
repz
shll
rcll
mov
lret
or
cmp
adc
dec
fnstsw
sahf
out
imul
nop
xor
clc
lea
cld
arpl
push
lret
aaa
jne
sbbl
mov
fnstcw
inc
insb
mov
mov
add
inc
movsb
adc
jo
and
scas
or
ret
sti
test
rcll
mov
dec
rcr
fadd
xchg
push
pop
adc
aaa
pusha
xchg
sub
imul
jb
addr16
ret
leave
test
nopl
icebp
lock
add
and
popf
ret
cld
mov
lock
add
mov
adc
rorl
in
cld
mov
ljmp
sbb
mov
les
es
dec
jns
inc
sti
jge
movsb
fs
push
clc
popa
and
push
test
push
aas
int3
insl
repz
stos
lcall
jge
hlt
je
push
inc
xor
jae
negl
int
pop
cltd
lock
mov
jno
ret
push
pusha
jecxz
or
and
or
bnd
lret
xchg
inc
jae
pop
sahf
test
ret
xor
stos
aaa
jp
stc
sub
sahf
test
pusha
cld
or
jne
lea
paddsw
js
xor
out
mov
lcall
pushf
lret
pop
add
aaa
sbb
and
xor
rcrl
and
iret
jbe
push
out
scas
shlb
inc
mov
dec
xlat
sub
repz
outsb
mov
push
push
jb
push
out
mov
lret
push
popa
test
xor
lea
cs
xchg
and
lcall
sbb
xor
frstor
test
pop
add
ds
imul
je
dec
in
or
adc
xchg
adc
cli
mov
pop
dec
mov
cltd
xor
mov
test
leave
mov
dec
popl
in
mov
cmp
push
lea
outsl
and
adc
sbb
xchg
push
push
add
xchg
mov
jg
popf
loop
xchg
out
jno
stos
adc
mov
push
mov
and
or
jge
repz
sub
faddl
sub
lock
cmpsb
icebp
mov
or
mov
lods
add
jne
aam
add
nop
rcrb
jl
mov
jle
cmp
push
mov
ss
lds
inc
push
mov
inc
ljmp
fisubrs
xchg
shl
sbb
loop
int
add
push
mov
rolb
gs
and
leavew
adc
dec
add
sub
repnz
sbb
ja
repz
and
mov
icebp
and
test
push
pop
sub
jbe
add
ror
rcrl
cmp
loopne
repnz
sub
dec
jns
sbb
sahf
mov
or
xchg
sarb
cmp
pop
scas
xchg
mov
hlt
sub
int3
push
repnz
lea
push
or
bound
call
movsl
out
lret
push
lahf
add
addr16
and
xor
mov
jo
out
sbb
push
pop
add
insb
je
mov
push
repz
mov
jecxz
js
lods
aas
sar
addr16
test
in
imul
aaa
in
mov
xchg
jl
adc
or
iret
mov
roll
pop
mov
scas
lods
jno
fsubs
loopne
lret
sbb
mov
sbb
lret
mov
call
fimull
cmpl
es
jg
sbb
or
mov
fildl
adc
inc
pop
ds
aas
jecxz
jmp
sbb
icebp
pop
stc
or
mov
test
xchg
inc
cmpsb
stc
sbb
mov
movsl
add
xchg
xchg
push
xchg
fs
in
imul
je
das
stos
and
push
cmp
int
notb
into
sub
sub
out
push
inc
inc
jo
test
push
js
dec
popf
push
sub
imul
mov
cli
aam
mul
cld
aam
pop
cwtl
lods
add
or
jecxz
pop
in
out
lock
pop
insl
fmull
mov
sub
movsl
jmp
pop
mov
pop
lcall
cmpsb
jo
pop
shrl
xchg
shll
stos
lds
sub
adc
arpl
mov
or
cli
shll
es
cmp
mov
mov
cs
nop
icebp
in
int3
pop
int3
jnp
cld
and
insl
mov
rcr
sbb
je
ds
jne
push
adc
fisttpll
cmpsl
push
pop
insl
pop
stos
pusha
pop
mov
nop
aam
xlat
daa
xchg
mov
aad
inc
pop
enter
je
cld
pop
rcll
outsl
std
ljmp
inc
lret
sbb
push
jp
mov
dec
xchg
adc
call
push
jno
notl
inc
out
jecxz
jns
into
or
in
sub
enter
sar
dec
cwtl
xlat
inc
fists
pop
adc
cmp
xchg
jmp
jo
xor
xchg
pop
jae
sub
fistpl
int3
push
mov
cli
aas
adc
sbb
push
aam
cmp
xchg
out
jo
xchg
dec
scas
sarl
and
xchg
clc
or
rcr
mov
stc
push
pushl
mov
xchg
add
int3
dec
ss
jbe
inc
adc
int
ret
loop
inc
clc
mov
jl
push
nop
adcl
je
sub
xor
lea
movsl
mul
sbb
inc
ss
cmp
addl
cmpl
cltd
sub
dec
jmp
scas
pop
fs
loop
sbb
out
mov
inc
pop
andb
jae
push
mov
insl
dec
lcall
push
add
fst
cmpsl
es
fsubr
stos
andb
in
sub
and
and
xorl
mulb
in
add
push
xchg
cmpb
sub
ret
push
pop
out
outsb
subl
in
pop
je
stos
daa
xchg
dec
int
push
jbe,pn
adc
cmp
daa
and
cltd
xor
mov
push
xchg
add
out
push
adc
dec
js
xor
mov
ret
sbb
mov
cmp
pop
push
mov
mov
sub
jbe
lods
cmpl
add
arpl
stc
popa
jb
nop
jae
shll
mov
pop
lret
rcll
fwait
out
mov
rcll
mov
hlt
push
test
jge
push
or
loope
rcll
push
cmpsb
movb
and
sahf
gs
adc
lahf
roll
adc
imul
repz
cld
rep
leave
repnz
add
and
xor
lahf
lret
iret
push
iret
into
sahf
pop
pop
jmp
mulb
test
sbb
jbe
inc
mov
mov
jne
les
ret
cmp
imul
lret
mov
movlps
cmp
inc
mov
and
lods
mov
aas
imul
rol
lods
inc
pop
movsb
jo
dec
std
das
icebp
mov
sti
dec
pop
adc
jae
mov
repz
xor
mov
fiadds
scas
jge
lret
add
fdiv
andl
andb
sub
dec
gs
mov
mov
into
adc
je
cltd
and
cwtl
lahf
or
movsb
adc
scas
cli
test
jge
scas
daa
jnp
in
movsl
test
scas
xorl
nop
or
push
pop
fistpll
jnp
jl
mov
out
mov
mov
and
mov
sub
jp
pop
pusha
cmp
inc
fadds
loopne
mov
xor
mov
mov
cmp
cltd
or
add
mov
clc
or
incb
popa
adc
shrb
fcmovnu
sbb
add
mov
jg
xchg
std
dec
aaa
cmp
sub
ljmp
xor
test
xlat
sti
xchg
daa
mov
fistps
and
sbb
xor
xlat
xor
cwtl
dec
inc
in
mov
mov
xor
loope
cwtl
pop
xrelease
rcr
mov
daa
mov
adc
loope
xor
sub
shrb
rcrl
jl
adc
ret
sbb
ret
inc
adc
mov
dec
pop
cmpsl
arpl
das
add
out
imul
and
test
leave
mov
je
mov
pop
dec
lcall
clc
imul
aam
inc
sbb
cmp
cmpsb
inc
cmpsb
adc
and
mov
testb
lods
arpl
aam
pop
dec
xor
push
shl
adc
out
cmp
jne
mov
imulb
popf
leave
test
pop
fsubrp
or
inc
xchg
mov
icebp
ja
cli
inc
int3
iret
sub
cld
lea
push
fisttpl
mov
fsts
and
fcmovnu
addr16
cs
std
inc
test
xchg
mov
arpl
andl
push
movsl
dec
adc
dec
fstpt
out
mov
add
inc
pop
xlat
cmpsb
cmp
inc
ret
popf
loope
stc
test
stos
push
xorl
pop
call
xchg
mov
fsubl
inc
sti
les
and
scas
sub
fidivrs
xor
mov
stos
xor
push
movsl
scas
mov
mov
into
inc
lods
or
addr16
jnp
shlb
push
xorb
inc
mov
inc
in
fbstp
mov
jo
mov
mov
xchg
xchg
pop
lods
cs
xor
push
subl
popf
shrl
in
vaddsubps
int
mov
adc
sahf
xchg
std
int3
xlat
iret
imul
jl
repnz
mov
sub
fisubl
lods
sub
loop
sub
jecxz
sahf
ud1
inc
cs
xchg
cmp
mov
xchg
push
sahf
stos
sti
out
scas
mov
mov
pop
and
stos
sti
rclb
aaa
dec
or
dec
push
ds
xchg
mov
in
jmp
xor
clc
mov
shrl
addl
push
repnz
outsb
fisubs
leave
hlt
div
test
decl
aad
out
push
cmpsb
push
xchg
cmpsl
cltd
cli
shlb
shl
mov
out
aad
shrb
loopne
or
lcall
mov
out
loopne
test
pop
cmp
mov
gs
jmp
popl
lcall
inc
push
mov
sbb
sub
mov
icebp
out
es
jle
or
mov
add
in
inc
sbb
xchg
push
fdiv
sbb
pop
or
pushf
cmp
insl
pusha
imul
inc
mov
out
into
inc
loop
sub
or
jmp
stos
inc
mov
cmp
and
jp
and
in
sbb
icebp
or
adc
sbb
cltd
jge
testb
push
xchg
test
sub
jmp
stos
mov
std
cmp
mov
push
scas
jno
and
sbb
mov
jns
mov
lahf
mov
inc
testb
repnz
ds
fcomps
dec
lret
in
shll
out
push
test
out
jge
decl
mov
or
cmp
std
fmuls
cmp
and
jmp
mov
dec
cmpsb
xchg
gs
dec
or
fwait
xchg
pop
arpl
cmp
sbb
jnp
dec
push
test
jo
push
pushf
imul
mov
push
jbe
imul
sti
cmpsl
dec
mov
jbe
mov
mov
dec
push
fbld
aad
sbb
lods
int3
les
clc
loopne
mov
loop
stc
test
jns
sbb
cmp
insl
cmp
es
bound
adc
sbb
repnz
sbb
sbb
sbb
sti
push
movsl
ljmp
push
pop
mov
rcll
lds
inc
or
sub
and
mov
dec
cmpsl
div
out
push
mov
fildl
dec
adc
in
stc
nop
fs
out
inc
ljmp
rcll
adc
inc
mov
push
cwtl
loop
mov
in
out
xchg
cwtl
mov
and
pushf
or
cli
mov
mov
mov
mov
add
jno
mov
lock
les
and
mov
imul
push
xchg
push
dec
or
pop
ret
orl
es
mov
push
fimull
push
call
pop
and
pusha
in
pop
or
loope
add
loopne
pop
aaa
inc
xchg
ror
dec
js
xchg
sbb
lahf
bnd
mov
pushl
out
dec
mov
outsl
ds
insb
iret
data16
cmp
das
mov
fucomp
add
mov
jl
pop
aas
pop
xor
xor
jp
repnz
inc
jo
fcmovbe
ret
lahf
scas
fwait
shll
dec
pop
jle
in
insl
out
pop
outsb
mov
pop
jnp
mov
add
stos
jo
and
and
push
fisttps
inc
stos
cli
aam
push
shlb
daa
mov
sbbb
xor
insb
xor
xchg
or
jge
cmp
pop
push
into
and
jmp
cld
cmpsl
xchg
test
cli
mov
sub
xor
shlb
ret
pop
inc
iret
lods
orb
call
pop
sbb
stos
mov
roll
and
divl
pop
cld
push
inc
cmp
mov
in
std
dec
shrl
out
xor
ljmp
lods
insb
arpl
mov
in
icebp
shll
or
adc
mov
mov
aaa
repnz
jo
lahf
shlb
adc
cmp
stos
js
shll
xor
cmp
arpl
mov
ss
xchg
int3
xchg
out
in
mov
sub
movsl
push
sbbb
cmp
jecxz
lds
cmpsl
sar
aas
or
test
shl
cwtl
mov
fsubs
ja
adc
jl
add
fdivr
fs
xchg
mov
pop
mov
mov
movsl
scas
test
fwait
jnp
icebp
pop
test
imul
push
mov
mov
lods
hlt
fldt
xor
cmp
lock
mov
mov
cld
or
out
mov
or
pop
movsl
jp
rcll
sbb
jecxz
or
jg
aas
xor
adc
add
xlat
call
cmp
out
push
push
test
lret
shrb
and
adc
ss
ficomps
mov
push
push
push
stos
pop
loope
pop
sbb
mov
dec
lods
loopne
popa
mov
mov
adc
ret
je
das
outsl
dec
push
push
bound
mov
aas
enter
or
fwait
cmpsl
enter
enter
xor
xchg
out
inc
push
addr16
rclb
out
mov
jbe
sub
fisttpl
pop
jle
mov
bound
jmp
pop
xor
cld
jo
fs
xchg
sti
insl
fsubrs
jle
in
sub
insb
dec
xor
push
pop
or
js
gs
push
lods
mov
mov
sbb
push
push
pop
loopne
xchg
call
lret
sub
sbb
je
inc
pop
push
sarl
sbb
int3
and
xchg
mov
mov
out
test
std
mov
jnp
mov
xchg
mov
and
mov
dec
pushf
pop
mov
mov
sbb
popa
dec
push
sbb
fs
rcrb
in
pop
jge
push
xchg
add
cmp
add
xchg
out
mov
sbb
lock
cmc
imul
lret
pop
mov
adc
xchg
cmpsb
add
fsubl
or
cmp
adc
rorb
je
cmpl
stc
outsb
adcb
scas
sub
or
in
jmp
mov
add
bound
add
mov
insb
pop
fistl
xor
xchg
and
fimuls
out
sbb
mov
test
test
mov
out
mov
cmp
popa
and
jno
jb
push
test
cmp
iret
aad
cmc
sbb
mov
fmull
stos
lret
out
add
jbe
jecxz
sbb
xor
adc
push
popa
push
or
xor
andb
cmp
pushf
call
sbb
mov
cmp
adc
addr16
aas
jae
push
lcall
fcoms
jg
and
push
mov
mov
pop
sub
shrl
ljmp
int3
pusha
clc
fcomp
loopne
shl
arpl
mov
add
pop
push
mov
ret
push
add
cs
sbb
xchg
insl
pop
js
dec
cwtl
daa
mov
sub
mov
add
jb
ljmp
ret
pop
dec
dec
in
nop
testl
mov
mov
dec
xchg
sbb
add
in
sub
pop
stos
jns
and
lods
mov
sub
pusha
enter
subl
imul
xchg
mov
cmp
xchg
pop
pop
jle
xlat
jmp
fisubl
jle
adc
mov
push
arpl
xchg
fadd
roll
adc
and
mov
mov
addr16
adc
lods
enter
mov
jecxz
addr16
ljmp
test
fistpll
cmp
pop
stc
shll
mov
arpl
jno
inc
sti
jb
jnp
out
and
fcoms
mov
out
maxps
inc
pop
xor
and
incl
pop
add
mov
cld
scas
roll
cmp
pop
int3
shlb
xlat
insl
mov
outsb
aas
outsb
mov
scas
or
add
sbb
lcall
mov
xor
jmp
adc
sub
roll
and
sbb
push
dec
mov
pop
mov
in
lcall
lods
js
inc
push
or
icebp
xchg
stc
mov
pop
pusha
les
mov
daa
movl
lea
mov
sub
je
and
out
fsubp
sti
jb
hlt
sti
pop
sbb
mov
loopne
jle
addr16
gs
insl
and
popa
pop
or
repz
ss
rcr
add
clc
test
dec
lock
jl
shr
es
mov
mov
push
movsl
mov
shlb
jge
xchg
push
test
cmp
sbb
and
jbe
pop
cmp
hlt
adc
xchg
call
push
insb
outsb
cmp
sbb
rcl
cltd
sbb
push
in
sbb
xchg
xchg
jmp
lret
inc
adc
mov
dec
test
jns
cmpb
data16
push
pop
out
ret
and
and
xchg
aam
sub
ret
lret
aam
xchg
xchg
jno
and
cltd
jno
push
enter
mov
cmp
xbegin
nop
clc
jge
pop
sbb
cmc
lret
fs
push
sbb
aas
stc
leave
aad
sub
std
and
mov
das
push
adc
rorl
push
cmc
daa
or
jae
out
leave
adc
lcall
mov
fistps
jmp
pop
mov
sarb
add
jmp
jo
test
daa
mov
roll
fdivs
rcll
bound
and
mov
shrl
adcl
push
cli
add
sub
jns
push
inc
das
fildl
sbb
fcomps
cmp
push
and
mov
xchg
inc
cli
pop
fcmovnbe
xchg
test
jnp
dec
lret
pop
mov
jecxz
aad
pop
xor
stc
popa
shll
sbb
mov
lea
push
sarl
ljmp
mov
mov
imul
ss
in
stos
cmpsb
jns
pop
sub
adc
pop
dec
stos
mov
jo
in
icebp
fsqrt
xchg
dec
mov
fmuls
xor
sub
dec
xchg
add
sub
xchg
mov
in
inc
insb
add
sbb
out
sbb
push
out
mov
push
popf
inc
mov
movsl
shlb
aam
sbb
test
fstpl
pop
mov
pop
pop
sbb
or
xchg
push
dec
push
pop
hlt
and
or
outsl
add
out
dec
jge
xor
imul
sub
imul
rorb
cmp
mov
lcall
xchg
inc
jae,pt
jne
loope
fisubrl
pop
int3
adc
mov
mov
cmp
sub
in
jmp
lcall
icebp
inc
xchg
in
insb
cmp
mov
or
adc
aam
push
inc
mov
jp
pop
adc
cmpsl
leave
mov
xor
mov
mov
scas
push
sbb
jno
mov
repz
inc
push
enter
jmp
insb
aas
and
outsb
into
push
mov
xlat
repnz
aad
mov
dec
mulb
out
icebp
not
lock
sub
not
jl
out
fwait
or
add
inc
xlat
sub
sbb
std
push
sub
es
imul
pop
mov
ljmp
push
ss
push
insl
add
inc
cmp
add
cmp
xchg
or
mov
je
pop
cltd
in
jne
cmp
xlat
gs
push
arpl
push
cmp
lret
cli
jg
add
int3
jno
cmp
out
iret
fldt
push
test
dec
clc
mov
xor
ljmp
jp,pt
adc
pop
js
xchg
lock
adc
orb
std
adc
adc
stos
and
outsb
xor
sbb
in
shll
out
popf
and
sub
adc
stos
adc
out
xchg
mov
in
push
push
jno
sbbb
xor
pop
mov
jmp
or
aad
les
jbe
dec
xlat
push
test
adc
test
mov
andb
adc
repz
inc
enter
inc
ljmp
sub
jg
into
das
seta
lcall
iret
xor
jae
loope
stos
call
aaa
adc
mov
fcmovu
pop
cli
sub
add
push
xor
jecxz
xor
loop
xor
pop
push
loope
loop
add
mov
mov
cmpsb
or
call
adc
and
jae
adc
pmuludq
mov
sbb
fs
mov
and
sbb
cli
inc
js
pop
cmpb
scas
cmp
dec
mull
mov
jecxz
sbb
and
pop
or
jmp
test
fbstp
fistpll
pop
int
sbb
out
mull
jge
cmp
es
jne
arpl
lahf
pop
int3
or
daa
scas
movsb
mov
push
or
int3
loope
mov
aad
pusha
fdivrs
xor
insl
movsb
xchg
sub
cmove
push
cmpsl
xor
jg
into
pop
lea
xchg
lret
dec
jg
fs
adc
adc
xor
push
call
fcmove
ljmp
push
dec
outsl
push
sub
sbb
inc
mov
pop
nop
push
das
movsb
sbb
fcmovu
lock
jnp
jl
jp,pt
cwtl
xor
pusha
mov
add
inc
push
fstps
xor
add
xchg
xchg
test
ss
sbb
pop
jg
jne
popa
and
xor
addr16
cmp
or
sbb
inc
dec
jge
test
fisubl
movsb
icebp
pop
ds
adc
mov
jno
fsubrs
inc
and
gs
inc
sbb
adc
sarl
mov
lods
or
sbb
inc
aas
lahf
imul
dec
xchg
lods
out
jl
jle
popa
or
pop
and
roll
pop
mov
aas
imul
mov
test
dec
xor
inc
mov
ret
shlb
jb
or
lea
sub
sub
mov
ficoms
lock
jbe
test
mov
loopne
subb
push
das
ss
xor
movsb
dec
mov
or
pop
mov
jne
cmc
loop
scas
push
inc
pop
lods
fst
inc
mov
leave
enter
rclb
push
nop
push
sti
aam
push
inc
int3
inc
mov
aam
mov
mov
jb
scas
push
scas
push
sti
inc
add
fwait
popf
pop
mov
stc
jb
lea
daa
cmpsb
std
add
xor
jnp
jo
sub
dec
aas
incl
lods
or
or
inc
icebp
inc
jecxz
mov
fimuls
in
xchg
xchg
or
pop
mov
sub
pop
rcrb
dec
add
push
jmp
adc
aam
stos
sbb
subl
fisttps
sti
lret
push
sahf
cmc
mov
xor
mov
mov
daa
and
mov
pop
inc
push
mov
dec
movsb
aaa
jnp
or
lea
adc
mov
fs
int
sub
dec
clc
ret
hlt
aad
mov
push
shr
dec
and
popf
mov
xor
cwtl
stos
push
pop
mov
pop
arpl
inc
les
enter
fsubrs
xchg
xchg
xlat
adc
lea
negl
mov
mov
hlt
roll
lahf
mov
sub
or
jnp
and
xchg
cli
push
lret
jmp
dec
jg
mov
inc
cmc
adc
sub
adc
fisubrs
xor
jecxz
push
sbb
sti
mov
int
jmp
adc
push
out
loop
push
or
mov
popf
into
push
sbb
inc
push
mov
jb
inc
add
sbb
dec
xor
dec
aam
inc
and
call
and
repnz
push
fldt
test
push
insb
push
and
test
loopne
mov
cli
mov
insl
jae
addl
flds
cwtl
daa
fcomps
add
pop
cmp
jbe
dec
rol
push
ret
adc
outsl
or
ret
sahf
push
push
xchg
outsb
rol
rcll
test
dec
aam
inc
xlat
test
cwtl
iret
xor
or
dec
loopne
aad
xor
mov
mov
int3
jg
js
adc
dec
ret
daa
out
cmp
pop
xchg
mov
xor
das
jg
jb
pushf
gs
repnz
xor
in
inc
dec
xchg
jg
cmp
jle
push
xor
cwtl
mov
sti
js
sar
fwait
jne
cmp
sub
fnstenv
pop
add
shrl
push
mov
sub
jbe
nop
xchg
hlt
inc
xchg
leave
push
daa
adc
xchg
sub
mov
insl
sub
fisubl
out
addr16
dec
addl
sti
xor
fdivrs
xchg
add
push
leave
mov
jne
and
mov
cmc
loopne
test
lcall
sub
fisubrs
gs
adc
inc
inc
fcomi
mov
push
loop
fdivrl
rol
test
jno
lods
mov
subl
xor
loop
lods
bound
mov
addr16
xchg
int3
pop
add
sub
jge
jecxz
or
dec
xor
loopne
gs
insb
adc
lahf
in
shrb
adc
lea
lea
inc
mov
imull
mov
in
sbb
stos
jp
hlt
push
add
or
xchg
call
fstpt
add
mov
ss
push
inc
sbb
sbb
mov
mov
pop
pop
fidivs
test
jo
cmp
outsl
into
jle
ja
inc
cmc
arpl
js
incb
push
mov
cltd
pop
mov
out
jne
xor
mov
xorl
scas
shl
inc
mov
ljmp
sbbl
inc
mov
sbb
cmp
cmp
pop
in
dec
mov
pop
imul
icebp
sbb
pop
cmpsb
enter
push
xchg
pop
pop
sbb
ds
mov
in
lret
test
mov
add
stos
push
dec
movsb
sub
mov
stos
pop
ja
scas
xor
sub
mov
popf
shlb
iret
inc
mov
fcoml
scas
in
lods
push
lahf
sub
out
push
enter
and
jb
inc
mov
xchg
sub
jae
adc
push
mov
clc
or
andb
leave
fwait
out
mov
fnsave
mov
inc
rclb
adc
cmp
cmp
test
sub
inc
mov
loop
outsb
cmc
js
push
inc
movsl
cmp
test
push
outsl
dec
rcl
push
rorl
push
cmp
aad
test
fwait
test
arpl
add
test
int
cmp
fwait
xchg
out
popa
xchg
push
stos
and
cld
jecxz
pop
outsb
lea
push
or
mov
and
inc
imul
xchg
pop
fwait
mov
lods
addr16
dec
jne
mov
xlat
out
das
push
dec
std
jnp
ja
cltd
nop
pop
pop
scas
test
jl
ljmp
adc
jae
pushf
bound
push
mov
in
cmp
pop
mov
lret
das
or
jp
push
mov
xor
pop
pop
rcrb
stc
inc
pop
lods
sub
in
cli
stos
or
mov
jnp
pop
aaa
in
xchg
jmp
sbb
inc
test
ds
mov
push
dec
inc
das
push
fdiv
ljmp
leave
rorb
and
out
cmp
lret
out
add
xor
push
mov
jecxz
push
into
cmp
pop
add
sbb
xchg
mov
mov
bound
add
ds
jno
xor
loope
imul
mov
mov
push
mov
jle
cwtl
das
insl
add
mov
mov
sti
mov
dec
les
mov
scas
in
inc
fdivr
loope
push
popf
mov
pop
leave
push
mov
fadds
cmp
xchg
push
loopne
jnp
jo
mov
jno
in
daa
mov
rclb
sub
xor
mov
mov
or
sbbl
test
lds
inc
or
mov
jecxz
pop
mov
fsubrs
pop
loopne
lods
mov
mov
shrb
sbb
fidivl
xchg
fldcw
loope
xchg
mov
movsb
int3
nop
and
add
sbb
or
xchg
jae
add
packuswb
popf
stos
or
adc
nop
icebp
push
push
jecxz
je
jbe
mov
xor
in
mov
push
into
and
mov
mov
mov
dec
add
jle
lahf
mov
mov
call
xchg
mov
push
addb
xor
fwait
jecxz
adcb
sbb
cmp
std
mov
mov
leave
rcpps
xchg
or
imul
sahf
fldenv
mov
xchg
pop
jmp
mov
xor
jg
or
jns
iret
pop
push
xchg
std
scas
data16
movsl
mov
mov
sahf
arpl
dec
mov
mov
inc
in
daa
das
fs
test
mov
dec
cwtl
hlt
pop
cmp
cmp
add
pop
push
call
mov
or
push
orb
loopne
fldcw
das
icebp
mov
pop
mov
test
xor
outsl
jmp
cli
sub
dec
call
movsb
jle
outsb
cmp
cltd
fmulp
xchg
xchg
sub
add
jbe
sub
pop
jle
pop
cltd
das
arpl
fldlg2
lods
xor
pop
bound
popl
icebp
and
pusha
testl
or
sub
into
or
add
xchg
jnp
aad
add
ljmp
sarl
jno
jle
lds
testb
adc
fildl
stos
lahf
adc
and
ljmp
pop
sbb
mov
test
fisttpll
adc
pushf
jge
fisubl
xchg
and
lret
xor
out
daa
arpl
jae
and
popf
jg
in
and
jns
insl
mov
sub
stc
enter
scas
pop
jnp
lret
pop
xabort
sti
cltd
jo
sahf
xor
push
dec
in
pop
or
test
rolb
mov
test
data16
rcll
test
mov
fisubrl
lahf
lock
pop
pop
cmp
cmc
mov
hlt
cmc
js
xchg
cli
ja
xchg
cmc
jae
out
xchg
loop
aad
movsb
fsubrl
push
xor
jno
push
mov
and
test
mov
mov
mov
sub
enter
out
pop
xorl
jmp
std
pop
out
std
into
adc
xor
adc
std
das
insl
jno
scas
enter
std
add
cmp
xor
scas
pop
and
sbb
lret
pop
mov
std
xor
cmpsb
sti
cmp
repz
adc
imul
add
loop
fldcw
arpl
sub
cmp
scas
leave
test
pushf
mov
push
in
sub
dec
or
mov
sbb
and
sbb
mov
aad
int3
jle
dec
imul
popa
shrl
in
sbb
loopne
loopne
xchg
in
xchg
sbb
mov
inc
ds
mov
adc
dec
pop
add
xor
fwait
sbb
sub
fwait
cmp
fmull
adc
adc
lret
dec
and
rcl
into
push
lods
push
push
push
sub
sahf
mov
mov
sub
add
dec
aaa
add
je
test
shll
fs
out
cs
in
mov
cltd
push
dec
scas
in
popa
adc
lea
push
jmp
pusha
xlat
rol
jge
inc
ds
or
lods
repnz
sub
inc
or
fsubrl
pop
sub
ja
xor
aam
mov
sbb
int
jno
lea
sub
mov
aam
push
movsl
pushf
push
lea
add
mov
or
mov
cmp
lock
fsubrl
movsb
mov
movsb
cltd
test
inc
clc
mov
gs
test
sbb
movsb
lock
leave
lds
negb
aam
repz
aad
add
xor
loopne
pop
cmp
adc
jbe
add
lret
xor
popa
in
mov
xor
mov
sbb
and
in
popa
js
nop
aaa
repz
repnz
imul
xor
fwait
sbb
movntq
les
xchg
mov
push
int
fadd
imul
mov
out
add
mov
cmp
insb
sbb
adc
jmp
inc
jb
outsl
sbb
lret
movq
push
pop
jno
test
push
jb
sbb
gs
adc
imul
dec
lahf
xor
fcmovu
or
les
dec
aaa
jle
pop
xor
and
sbb
inc
sbb
push
xor
aaa
mov
int3
jns
jnp
divb
sbb
jp
ficoms
push
and
xlat
mov
outsb
push
sub
lahf
fsubp
sbb
xor
insl
jb
jno
sub
mov
notl
pusha
mov
pop
push
mov
sahf
jl
push
mov
ljmp
mov
cmpsl
jns
arpl
out
xorb
xor
or
fwait
add
sbb
into
pop
cld
insl
bound
lret
test
mov
cmp
outsb
adc
pop
shlb
cli
in
jmp
leave
jns
nop
cld
adc
test
mov
and
or
fisttpl
mov
jns
mov
imul
dec
loop
adc
stos
and
ja
repz
push
mov
or
fwait
addr16
push
fldcw
insb
and
inc
test
jl
and
sub
les
xchg
pop
fdiv
and
std
adc
push
pop
adc
inc
lods
stc
subb
push
mov
xor
lret
mov
sub
mov
mov
out
test
sbb
push
jg
sti
lcall
mov
and
repz
sub
sbb
incb
push
lret
mov
cmp
icebp
push
or
ljmp
mov
pop
and
pop
mov
jg
pop
jnp
mov
push
or
jl
popf
ss
xor
jp
dec
dec
in
and
test
push
scas
das
jb
mov
aas
adc
jl
aam
and
dec
fsubp
sub
pop
push
icebp
mov
pop
out
sbb
out
test
push
daa
insl
shlb
ficompl
add
int3
cltd
mov
int3
xchg
popf
inc
iret
fsubs
repnz
sbb
sbb
and
sub
ret
rorb
in
out
adc
pop
call
lret
sub
pop
and
popa
popf
into
shlb
xorb
or
sbb
into
mov
push
lock
fistps
out
test
xchg
cli
jl
adc
lea
or
cmp
or
pop
jp
leave
mov
push
mov
pop
testb
mov
xchg
repz
hlt
pop
sub
add
dec
test
xor
dec
into
clc
dec
loope
test
btr
push
adc
insl
outsb
mov
xor
mov
sarb
insl
stc
aad
jno,pt
nop
inc
into
jmp
mov
mov
push
cwtd
add
mov
jnp
mov
add
dec
xor
or
outsl
stc
clc
sub
pop
or
stc
pop
lret
mov
shlb
inc
jno
inc
pop
mov
test
and
out
js
sub
mov
test
mov
shll
neg
jno
and
mov
rsqrtps
int3
cmp
std
insl
mov
jns
or
int3
inc
sbb
pop
mov
ret
lahf
fmuls
push
icebp
jno
clc
adc
idivl
addb
fsub
push
shll
push
jge
pop
dec
or
sub
lock
xchg
xchg
movsb
or
lcall
jl
ja
fiadds
sub
adc
rcrl
fsubl
push
cltd
xor
fsubr
pop
mov
xchg
and
out
std
add
jbe
loop
and
jge
data16
repz
add
imul
xlat
ret
sub
sub
in
cli
pusha
jp
sbb
push
out
fiadds
jb
nop
mov
sub
sub
inc
mov
test
into
mov
stc
pop
push
sbb
je
test
imul
aas
lahf
sbb
popa
push
sub
inc
push
cmp
xor
jne
jmp
mov
rcll
outsb
sbb
fcmovnbe
or
cmp
gs
insb
out
mov
xchg
jle
scas
xchg
lret
mov
add
push
xchg
mov
notl
sbbl
aaa
mov
cmp
and
aad
mov
mov
mov
out
scas
fs
mov
das
lret
xor
xor
mov
push
pop
add
dec
mov
sub
cltd
mov
rorb
adc
lds
in
jnp
jmp
push
jae
addb
imul
dec
xchg
lcall
xchg
rorl
mov
inc
add
ja
adc
not
adc
test
pop
jno
sub
mov
dec
jg
pop
push
inc
shlb
pop
imul
jb
and
leave
clc
lods
adc
xchg
lods
hlt
dec
ficoms
add
imul
inc
cli
lret
es
sub
mov
dec
mov
insb
fcmovnbe
mov
adc
jle
lods
sub
cmpl
enter
std
adc
cld
mov
push
cmp
and
adc
fldenv
jge
mov
xor
outsl
pusha
dec
pop
xor
das
or
mov
pop
ja
mov
stos
mov
mov
ljmp
xchg
mov
sbb
bound
int
inc
adc
pusha
negl
loop
mov
movl
xor
fnsave
sub
xchg
cmp
cmovnp
jb
clc
dec
dec
push
pop
adc
out
ficompl
mov
push
inc
mov
mov
lea
fidivl
inc
shr
outsb
out
add
pop
push
data16
pop
addb
data16
mov
cmp
xor
pop
jmp
jge
movsl
out
out
cmp
out
pop
test
fimull
sub
add
in
aas
insl
leave
jns
pop
mov
loope
add
mov
jbe
xchg
ja
aad
sub
and
xchg
xor
icebp
cmp
jbe
cmp
fwait
jle
mov
daa
or
icebp
jns
idivb
fdivp
scas
mov
push
scas
and
pop
lcall
mov
mov
mov
inc
dec
and
scas
in
out
xchg
ret
sub
fsubrl
mov
gs
insb
mov
lret
push
mov
lock
lods
pop
ljmp
loopne
jge
cli
jne
sub
xor
scas
negl
cmc
push
test
lods
cmp
mov
mov
not
mov
add
push
jnp
or
das
adc
and
scas
inc
pop
arpl
lods
decl
lock
mov
jmp
mov
test
push
inc
mov
adc
push
or
lds
imul
mov
mov
or
push
pop
xor
and
or
jmp
ja
mov
or
ds
ljmp
sbb
cmp
sbb
lock
inc
sub
les
fimuls
outsl
inc
pusha
cmp
xor
jp
push
rcr
sbb
divl
and
inc
fistpll
scas
aas
pop
adc
push
cmpsb
roll
pop
icebp
roll
fiadds
rol
movsl
pusha
nop
call
mov
cli
inc
sub
xlat
mov
bound
int3
jmp
sar
push
adc
pushf
cltd
testb
in
dec
sub
push
ljmp
inc
gs
xchg
jbe
mov
sub
sbb
lret
out
sub
cltd
xor
xor
inc
loopne
out
sbb
xlat
jmp
hlt
fnstenv
icebp
popa
adc
mov
push
xchg
icebp
inc
shrl
fcmovb
adc
fadds
push
adc
and
jnp
xlat
dec
sbb
out
cmp
leave
and
aam
imul
dec
inc
xorl
xchg
mov
xchg
aaa
pop
cltd
dec
rcll
sbbl
pop
pop
gs
pop
xchg
cwtl
mov
mov
jno
movsl
int3
jmp
cmp
aam
xchg
fldl
loope
sbb
push
les
xchg
xchg
js
cmpsl
movsl
xor
mov
ss
sbb
push
mov
fistps
notl
mov
cld
inc
popf
ret
sti
fs
cltd
insb
adc
sub
push
ja
shlb
pop
cs
push
cmp
lret
push
daa
mov
movsb
out
andb
jecxz
mov
int
cld
adc
push
dec
inc
loope
popa
push
mov
movsb
lds
lds
mov
lods
insb
je
test
xchg
cmpsb
pop
lea
lret
jbe
inc
fsubs
inc
dec
into
cmpb
jbe
addr16
and
fsts
outsb
and
test
dec
xor
inc
sarl
xor
mov
daa
mov
inc
fiadds
shrl
aam
mov
rcr
lods
cmc
cmp
hlt
ljmp
push
into
jae
jmp
aam
fstl
fcomps
lds
mov
pusha
fwait
loope
ffreep
inc
fdivrs
pop
xchg
aad
and
repz
iret
sub
hlt
mov
fsubr
fists
shl
adcl
sbb
push
stc
sbb
out
in
mov
and
in
mov
push
ds
dec
dec
bound
cmp
and
fiaddl
mov
jge
int3
cwtl
xor
testl
dec
shlb
test
lcall
mov
icebp
addl
mov
fsubs
ret
or
or
sahf
mov
pop
xlat
xchg
push
dec
mov
jo
pop
or
mov
repnz
push
int3
repnz
out
push
push
mov
xchg
inc
adc
xchg
pop
or
fldenv
xchg
mov
loop
cli
cmp
cmp
cmp
icebp
imul
rcrl
pop
add
xchg
sarb
or
push
inc
inc
xchg
push
lea
roll
and
ljmp
ja
cmp
aas
push
std
loop
cmp
sbb
mov
enter
or
dec
xchg
inc
push
je
pop
cmp
call
mov
lahf
clc
add
mull
outsl
xchg
xchg
lods
sub
lods
push
sbb
fwait
jl
push
pop
xor
lods
hlt
popf
test
or
test
xlat
pop
jb
xor
lock
outsb
scas
cmp
and
popf
movsl
add
stos
aad
scas
aad
sbb
mov
ret
push
mov
inc
inc
test
in
aam
std
mov
arpl
jl
mov
jmp
mov
jno
ja
jp
insb
xor
cld
and
dec
cmp
dec
gs
das
xor
in
lret
fsubrp
outsl
xor
and
or
push
push
paddb
mov
xchg
xor
cwtl
das
jle
fstpt
mov
std
mov
dec
shll
test
clc
repnz
cmp
mov
push
cmpsb
out
pshufw
xor
mov
cmpsl
or
mov
lds
sti
adc
add
in
jb
mov
dec
fwait
lret
test
clc
ficoml
sub
je,pt
fimull
adc
xor
xchg
cmp
dec
lods
cmp
mov
rcrb
pusha
push
lea
jno
adc
das
js
add
pop
jmp
pushf
inc
pop
sbbb
test
pop
mov
add
mov
push
idiv
jge
mov
cmp
cmpsl
push
push
iret
fld
mov
lcall
mov
lock
pop
sub
rolb
add
stos
rorl
mov
xchg
dec
mov
add
jmp
jle
push
xor
aaa
lret
xorb
jp
int
outsl
push
loopne
mov
adc
fstpt
cmp
sbb
cld
pop
aaa
sti
repnz
mov
movsl
add
shl
mov
hlt
xor
xor
in
push
xlat
inc
sub
insl
addl
test
xchg
jge
fiadds
inc
in
shll
lds
or
mov
add
ret
sahf
and
imul
icebp
mov
es
ja
mov
dec
loopne
add
cmp
pop
mov
iret
popf
jg
or
jnp
pop
xchg
subl
rcrb
mov
and
adc
les
xor
dec
or
das
xchg
sub
or
mov
movsb
scas
or
rorl
je
daa
and
inc
fnsetpm(287
loop
add
inc
adc
iret
jecxz
mov
std
cmp
sahf
mov
mov
in
roll
dec
dec
xchg
xchg
ffree
dec
into
leave
xor
fadds
or
and
idivl
sarb
into
xor
or
jecxz
lds
adc
xor
and
xor
pop
or
es
mov
and
push
adc
imul
out
fmuls
data16
mov
sbb
call
fiaddl
data16
shrb
xor
jecxz
mov
out
outsl
scas
pop
sub
test
scas
testl
dec
aas
sub
ret
pushl
mov
xor
sub
fstpl
outsb
repz
mov
out
sub
pop
mov
jne
cltd
fisubs
jb
insb
insb
adc
arpl
xor
scas
stc
push
add
pop
mov
jg
pop
data16
inc
ret
mov
cmp
fimull
xor
push
stos
iret
lock
leave
lret
dec
cmp
repnz
cmp
push
mov
cmp
jae
fwait
jecxz
cmp
jb,pn
ret
insb
popa
adc
xor
andl
xor
pop
lea
xchg
xlat
mov
mov
xor
shr
adc
push
dec
sub
inc
mov
nop
pop
test
shrb
mov
lods
imul
sar
adc
imul
xchg
sbb
aad
dec
aam
jne
inc
pop
in
jg
fstp
das
xor
and
in
xchg
sub
fidivl
sbb
test
mov
add
mov
lea
int
or
mov
call
out
mov
fdivrl
push
cs
xchg
jne
test
ljmp
in
mov
sbb
push
popf
add
add
jae
leave
sub
mov
mov
fnstcw
mov
rcr
movsb
push
nop
or
mov
mov
ret
pop
psllq
mov
xchg
xchg
xchg
xor
je
bound
add
std
pop
dec
mov
pop
rcl
loopne
pop
mov
adc
aas
mov
movsl
add
imul
lahf
andnps
rcrb
iret
sub
pop
gs
sbb
push
enter
testb
jg
adc
push
fs
aam
fnstsw
push
adc
pushl
jnp
mov
jnp
xor
xchg
cltd
fistps
notl
push
in
push
sbb
aad
push
mov
push
and
push
ret
inc
cmp
lret
mov
jae
xchg
lods
ss
std
xlat
mov
lcall
mov
mov
dec
or
sbb
movsb
push
loopne
frstor
aam
sub
ret
stos
mov
inc
pusha
mov
xor
lock
stc
nop
es
repnz
xchg
frstor
enter
xor
fstpl
ds
mov
add
pop
int3
inc
cmp
xor
js
mov
dec
jge
xor
ds
pop
pop
pop
inc
loope
aaa
fnstenv
xchg
jge
mov
mov
ja
cwtl
lea
lret
jg
arpl
insb
cs
test
arpl
gs
in
or
out
loope
mov
cwtl
mov
or
cltd
aad
add
iret
out
adc
dec
pop
sub
push
lret
fstps
adc
ja
pop
cld
lods
pop
test
fimuls
test
imul
lds
sar
xchg
scas
bswap
lods
inc
mov
lahf
lods
sub
or
lret
test
mov
inc
sub
test
cld
in
xchg
jnp
sbbb
popf
test
jo
mov
out
mov
and
push
pop
and
js
cli
and
or
mov
or
sbb
adc
shl
sub
daa
mov
movl
mov
movsb
pop
dec
jl
bound
or
mov
cmp
or
cmp
rcrl
mov
cmp
aas
ret
jbe
test
xor
push
inc
test
push
dec
cltd
push
or
xor
mov
mov
push
fmul
mov
add
inc
gs
sbb
loope
add
out
or
outsb
pop
xchg
arpl
lds
adc
jno
mov
mov
hlt
mov
inc
iret
dec
ja
push
rcr
adc
scas
xchg
leave
ljmp
push
outsb
ret
xchg
shlb
rcr
or
lcall
jp
mov
call
lret
mov
pop
outsl
or
sbb
pop
xor
push
jl
jge
test
fwait
jmp
rcr
mov
add
sub
jg
pop
rclb
cmp
aas
pop
cmp
xchg
sbbb
jbe
xchg
shrl
ret
jnp
int3
xor
imul
sti
mov
or
in
jle
cwtl
jno
and
enter
les
scas
inc
fisubl
pop
insl
cmp
dec
adc
mov
subl
or
jb
dec
adc
adc
lods
test
adcl
fiadds
jmp
inc
adc
add
stos
mov
xchg
jne
xchg
dec
mov
jnp
jne
out
testl
pause
mov
pop
sub
inc
aaa
inc
loope
in
aaa
cmp
push
xchg
repnz
insb
jmp
ljmp
lods
xor
or
aad
fcmovb
mov
js
lahf
xor
or
jg
scas
mov
in
xchg
xchg
call
in
pop
mov
out
daa
mov
test
xchg
cmpsl
cmc
and
jbe
xchg
mull
mov
xchg
xchg
aam
outsl
mov
jl
icebp
or
jmp
test
mov
fisubs
lahf
dec
outsl
gs
inc
push
inc
push
xor
jbe
mov
pop
repnz
dec
add
shll
leave
sbb
or
pop
cmp
xlat
sub
outsb
push
cli
dec
iret
xor
xor
xchg
in
inc
dec
mov
ja
divl
cld
lods
or
adc
mov
push
orb
xchg
add
jo
aad
jmp
scas
sub
mov
sub
or
int
hlt
mov
inc
sti
nop
add
sub
insb
int3
lds
add
imul
add
jb
jmp
sub
sub
xchg
loop
mov
icebp
mov
sbb
jnp
scas
jno
scas
jbe
pop
pusha
pop
test
cltd
lds
mov
gs
imul
adc
xor
add
in
xchg
daa
lcall
js
xor
loop
adc
call
jle
adc
vpaddusb
and
arpl
pop
call
xor
mov
and
jge
cmpsb
mov
xchg
cltd
jae
or
or
sbb
xchg
mov
push
negl
inc
jecxz
push
jb
add
iret
lahf
sarl
add
popa
xchg
sarb
sbb
loope
in
aad
xor
fldt
mov
xchg
dec
repnz
sahf
push
push
xor
lahf
js
movsb
jbe
shll
pop
xlat
mov
icebp
mov
add
and
cmp
jl
mov
lds
push
add
out
or
shll
pop
push
pop
sub
sub
fisubl
jo
sbbb
xchg
xor
pop
mov
add
or
gs
daa
insl
pop
scas
loop
xchg
push
and
sahf
cltd
jg
sub
imul
pop
int3
stos
mov
movsl
aaa
cli
out
std
call
mov
jns
int3
ds
jmp
pop
lods
enter
aam
inc
shr
or
xor
icebp
pop
pop
js
mov
xor
xchg
and
jnp
and
or
daa
je
sbb
mov
scas
push
sbb
ficoms
sbb
sub
mov
fs
pop
ret
xchg
xlat
pop
outsb
pop
fldcw
das
fnstsw
push
add
lea
mov
xchg
loop
jnp
and
push
xor
jns
scas
jns
std
push
cmpsb
adc
xlat
adc
xchg
jnp
jmp
push
call
xchg
xchg
cmp
sub
pop
jae
mov
stos
lcall
loop
lcall
out
xchg
jl
and
lret
lahf
imul
das
jbe
cwtl
or
sbb
imul
mov
imul
lahf
mov
push
leave
dec
push
imul
repz
mov
adc
jo
or
insb
sahf
filds
push
xor
mov
and
std
add
cmpsl
push
loope
push
jmp
xlat
mov
test
dec
in
adc
lret
test
pop
xchg
addl
jle
jb
imul
bound
push
std
in
pop
jnp
push
cs
push
mov
pop
fdivr
dec
popa
xchg
jg
jg
clc
pop
push
out
jae
outsb
mov
adc
les
aas
nop
pop
xchg
aaa
mull
fsts
cmp
out
sbb
movsb
cmp
mov
sub
mov
syscall
movsl
scas
int3
adc
dec
pop
test
sbb
xor
pop
xor
icebp
loopne
inc
shrl
pop
push
mul
sbb
mov
xchg
lret
push
add
loopne
inc
out
cs
rcrl
mov
test
push
xchg
jmp
ds
nopl
pop
fistl
mov
in
popf
js
mov
mov
je
fwait
mov
int
fs
aaa
sahf
xchg
adc
mov
xchg
cmpsb
mov
mov
dec
movl
rolb
jb
mov
mov
mov
das
sti
and
sub
adc
mov
jae
repz
into
insl
stos
xlat
mov
xor
lret
or
popf
adcb
push
mov
pop
jl
xchg
adc
loop
or
cmp
fadds
inc
xchg
imul
popf
push
pop
jb
add
mov
jge
cltd
insl
inc
jns
hlt
sbb
sub
add
insb
in
decb
xor
xor
pop
in
inc
loopne
adc
pmullw
cmpsl
add
lahf
push
loope
xchg
jnp
pop
push
jecxz
and
mov
or
pop
imul
les
jne
add
mov
jg
cmp
and
dec
xor
js
push
daa
xor
jle
dec
mov
repz
inc
into
mov
mov
insb
cmp
mov
ss
inc
push
repnz
scas
lahf
or
pop
jb
mov
pusha
push
pop
sarl
imul
test
mov
pcmpeqd
das
xchg
xor
int
adc
out
or
adc
fs
cmp
rolb
mov
stos
sub
cmp
mov
adc
mov
orb
mov
out
push
clc
fnstsw
pop
lods
aas
dec
cmp
sub
push
stc
push
and
or
pop
sub
sti
adcl
gs
sarb
mov
dec
out
gs
ds
fldcw
loope
fidivrs
xor
mov
mov
mov
test
xchg
sti
sbb
mov
cs
loope
mov
shlb
test
or
xor
in
lods
pop
sahf
rolb
pop
iret
pop
shrl
mov
pop
lods
sbb
mov
enter
mov
negl
pop
bound
sbb
lcall
and
and
jnp
gs
int
cli
jo
daa
mov
ljmp
push
lock
rcrb
add
in
les
sti
insb
pop
cmp
jecxz
dec
push
shl
add
adc
xor
cltd
pop
test
sbb
or
lret
dec
and
xchg
mov
sti
in
into
xchg
cld
jns
cld
xor
dec
and
mov
mov
mov
cmc
cmp
popf
js
xor
push
scas
mov
cmp
int3
lret
cmp
lahf
xor
icebp
fimull
dec
dec
insb
mov
dec
inc
cmp
es
add
xchg
scas
xchg
cwtl
fbstp
adc
add
jo
mov
lcall
lea
jae
or
add
adc
fisttps
jp
pop
sbb
push
ret
jo
lahf
ljmp
sbb
cmp
sahf
or
daa
mov
mov
loope
or
faddp
test
mov
mov
lret
mov
lcall
push
cmp
testb
movsb
loopne
and
notb
sbb
jo
jne
xchg
sub
push
dec
inc
in
mov
test
inc
xor
cmp
sub
out
mov
dec
aaa
in
pop
mov
jb
fdiv
pcmpgtb
dec
addr16
pop
or
dec
out
sub
jo
or
mov
rolb
sbb
sbb
jmp
mov
call
sub
adc
lret
mov
mov
mov
inc
scas
or
ret
xor
aad
rcll
push
lea
mov
xor
dec
mov
sub
xchg
and
or
xchg
imul
sub
loop
jno
xchg
xor
sbb
sbb
mov
fsubrl
push
push
test
xchg
adc
mov
and
test
call
gs
sub
mov
in
into
mov
add
mov
mov
sub
out
mov
inc
test
js
jl
inc
shll
lcall
or
mov
or
add
dec
notl
xchg
popf
and
loopne
sbb
dec
cmc
jmp
call
and
mov
xchg
ficomps
loop
es
aaa
outsb
jmp
pop
jge
cmpsb
adcb
mov
pop
add
push
push
adc
dec
mov
jb
loop
inc
ljmp
pop
pop
lods
jns,pt
add
push
sub
out
mov
cmp
loop
adc
fsubl
divl
inc
inc
aaa
jg
mov
call
das
fwait
out
or
and
xchg
cld
mov
jnp
test
andb
push
repz
push
inc
adc
cmp
in
lock
push
push
movsb
sbb
mov
popa
stos
aam
mov
or
mov
jns
pop
fsubrp
into
pop
xor
stc
push
fwait
mov
hlt
adc
mov
or
push
loope
dec
jae,pn
test
jmp
mov
xchg
outsl
in
out
inc
inc
aam
cmc
pop
js
inc
cmpsl
xchg
cmp
xor
sub
stos
roll
stos
je
cmpsb
ljmp
leave
stos
push
fists
add
dec
fwait
jp
dec
mov
mov
adc
test
je
mov
push
xchg
in
xchg
jnp
movsl
jnp
xchg
lret
and
cmpsb
push
mov
cs
mov
mov
xlat
js
iret
jne
insb
in
and
push
mov
xor
push
out
jge
lea
loopne
daa
aaa
fs
or
mov
pop
test
push
pop
mov
push
cmpsl
and
push
mov
xor
inc
cmp
adc
xor
push
pop
and
ljmp
mov
xor
and
inc
pop
clts
popa
cltd
insb
ss
mov
out
pop
ret
lcall
xor
xchg
xchg
adc
push
add
aad
mov
sbbl
push
xchg
shr
push
push
or
or
stos
add
jno
jle
scas
enter
popf
outsb
push
and
and
xchg
stos
stos
add
ret
cld
add
sub
mov
pop
push
or
or
loopne
fstpt
lahf
movsl
pop
xchg
xor
dec
insl
pusha
inc
inc
popf
test
push
add
mov
add
sub
sbb
mov
dec
jo
xchg
dec
icebp
add
mov
and
jp
push
pop
add
push
das
cli
xchg
adc
pop
lock
cs
mov
cs
add
jbe
add
push
pop
inc
xchg
mov
divb
sub
movsl
cmpsb
popf
xor
enter
int3
jecxz
leave
and
cmp
pop
add
lds
jg
je
jno
sahf
sub
sub
and
mov
cmpsl
adc
mov
mov
int3
lahf
sub
in
loopne
jecxz
stos
movl
lret
cltd
stos
pushf
scas
inc
cmpsl
lret
daa
stc
pop
xchg
jmp
scas
xor
xchg
notb
ret
cld
or
and
dec
jno
xchg
xor
gs
mov
cwtl
fidivs
int3
xchg
sub
in
dec
sub
arpl
test
adc
jnp
cmpsl
addr16
dec
sarb
call
pop
les
ret
inc
pslld
subb
and
comiss
and
mov
roll
popa
je
cwtl
cmc
in
enter
mov
pushf
sbb
push
and
stc
insb
icebp
mov
out
scas
das
jl
mov
jne
imull
cli
fnstcw
xor
cmpsb
mov
cmp
sub
or
push
pop
test
in
xor
sbb
dec
pop
sbb
mov
pop
mov
je
pop
fimuls
xlat
mov
das
inc
into
push
popa
aad
int3
add
sub
pop
adc
loope
xchg
mov
rcrl
jns
and
xorl
roll
cmp
jo
xchg
aam
dec
cmp
je
inc
mov
imul
pop
repnz
ss
into
clc
xchg
xchg
pop
jge
call
mov
pop
mov
ja
stos
mov
cmp
lea
mov
roll
pop
fimuls
dec
jns
xchg
and
leave
dec
popa
jmp
popf
mov
mov
int
lea
in
dec
popf
sarl
popf
sub
imul
or
xor
xchg
push
js
les
inc
xor
popf
dec
xchg
mov
nop
add
or
scas
psubsb
out
daa
cli
aam
into
nop
inc
push
in
cmp
movsl
push
pushf
data16
push
test
stos
lds
mov
sbbl
and
jp
in
jge
add
insb
cwtl
mov
or
es
mov
mov
notb
mov
jmp
mov
jle
xchg
std
cmp
rorl
sub
cld
mov
push
mov
call
cmp
mov
xor
repz
push
jbe
jge
out
popa
jecxz
sbb
xor
push
sbbl
sub
into
out
mov
pop
subb
bound
addr16
sub
out
sar
inc
ljmp
lds
daa
or
sub
mov
inc
sti
mov
jle
adc
hlt
lret
aam
pop
nop
xor
adcl
xchg
or
adc
cmp
mov
mov
frstor
push
imul
inc
xor
dec
mov
cmp
sbb
lods
sbb
xchg
insl
push
xchg
es
aad
movsl
sbb
shrb
jno
jmp
jae
insb
in
test
arpl
in
xchg
imul
shrb
fsubl
jge
adc
test
imul
popf
and
and
daa
mov
push
cmpsb
inc
xor
push
sub
and
push
xchg
xchg
nop
mov
push
test
ss
aaa
pop
xchg
mov
xor
bound
add
movsl
mov
cmpsl
push
fucomi
jg
lcall
arpl
push
jl
mov
pop
add
imul
movsl
xor
jae
clc
aas
outsb
pop
pop
popa
sub
mov
imul
sarl
push
div
aas
jecxz
out
jno
inc
mov
and
mov
icebp
test
mov
xor
adc
push
fisubs
mov
inc
pop
lahf
dec
fisubs
jecxz
pop
gs
pop
jns
lock
xor
in
jge
xchg
test
mov
hlt
or
imul
lcall
fcompl
dec
out
xlat
orl
jmp
in
imul
and
sti
push
mov
sti
stos
rcll
ret
push
lea
test
inc
stc
lcall
aaa
ficomps
jns
push
icebp
push
lea
iret
out
in
mov
cld
lret
aad
inc
inc
lret
lds
or
pop
mov
adc
cmp
testl
pop
jg
cmp
lods
xchg
hlt
call
mov
inc
in
xchg
imul
jb
dec
cmpsb
lea
fmul
fimull
mov
adc
push
into
jno
test
sbb
inc
mov
flds
push
ret
das
pushf
cli
adc
cltd
xlat
jl
stos
fs
jnp
sbb
iret
mov
stos
cmp
push
rolb
in
mov
imul
push
shrl
sbb
jnp
loopne
inc
dec
mov
pop
sub
pop
add
dec
xchg
sbb
push
outsl
jl
es
cltd
adc
enter
xlat
xor
jg
jno
sub
fwait
push
pop
add
sar
push
ficoms
sti
xchg
mov
pop
sbb
ficomps
movsb
rorl
pop
dec
ljmp
sbb
test
jb
dec
mov
cmp
mov
mov
xchg
pop
sub
mov
push
ss
popf
push
jmp
xor
fwait
and
iret
pop
jo
jae
mov
into
int3
push
xor
shrl
mov
cmc
sub
jb
arpl
data16
stos
cmp
cmp
test
and
push
clc
jne
sbb
leave
popa
mov
pop
fbld
cmpsb
mov
mov
mov
and
nop
xchg
jl
rcll
dec
mov
adc
adc
lret
fiaddl
push
repnz
sub
data16
mov
repnz
pop
lods
lret
lahf
mov
jne
int3
and
stc
jbe
inc
outsl
loopne
inc
nop
hlt
inc
mov
add
adc
daa
add
jmp
jge
jae
addr16
adc
call
scas
lahf
mov
pop
aas
xor
mov
outsb
rcl
dec
adc
ret
popa
insl
in
das
gs
cltd
mov
aaa
les
sbbb
xchg
and
push
cmpsb
int
jno
mov
mov
pop
psubsw
out
jge
push
adc
mov
add
fs
aaa
adc
fstps
xchg
outsl
loop
es
lret
mov
js
mov
adc
ss
add
or
lahf
cs
cmp
mov
push
or
icebp
jge
sub
push
pop
xor
xchg
aad
sbb
jle
cwtl
pop
push
sub
adc
cwtl
cmp
dec
or
cld
outsb
dec
push
bound
inc
inc
aas
fldcw
clc
or
xor
jle
mov
mov
addr16
lods
daa
cld
lods
xor
and
xor
jne
cmpb
sbbb
inc
xor
mov
in
out
mov
cs
pop
push
enter
adcl
and
mov
insl
add
rorl
int3
xlat
lea
into
cltd
out
and
push
les
xchg
popf
pop
stc
cs
movsb
adc
xchg
popf
jno
pop
dec
lret
shl
shl
fwait
mov
fsubs
mov
xchg
jge
mov
dec
xor
nop
xchg
nop
aaa
push
xchg
movsl
or
jg
xchg
sbbl
loopne
mov
cltd
out
repz
sti
mov
sbb
ss
mov
ds
inc
or
nop
or
in
enter
arpl
mov
test
xor
push
sub
stos
sub
xchg
jns
js
jmp
mov
fwait
sub
pop
pop
fsubrp
cltd
std
iret
ret
push
insb
js
ljmp
cwtl
fildl
into
cmp
in
jmp
daa
cmc
and
sub
stc
mov
dec
int
sbb
out
push
popa
cmc
mov
popf
push
stos
xor
repnz
aam
cltd
movsb
pop
lahf
cmp
mov
push
sub
mov
sbb
jmp
into
mov
mov
sub
jo
push
or
imul
call
outsl
pop
xchg
inc
das
xchg
rorb
xor
add
test
ret
pop
int
insl
jp
mov
das
sbb
dec
mov
sbb
cmp
aam
lds
xchg
cld
and
gs
repz
incl
fcoms
push
outsb
in
add
xchg
jae
sub
fs
sbb
lcall
xchg
loope
sbb
jge
out
and
idivl
bound
jge
cmp
xchg
sbb
icebp
push
nop
nop
fs
push
pusha
xchg
adc
mov
jl
cmp
ret
mov
cmpb
mov
aas
pop
sbb
aaa
sub
and
xchg
cwtl
mov
lock
jno
jmp
cmc
pop
pop
xor
out
sub
mov
ja
cmp
repz
js
cli
arpl
lock
inc
cmpsl
push
and
sti
jno
push
dec
test
or
aam
dec
push
add
icebp
mov
subl
or
scas
dec
xor
loop
pop
ret
imul
fldl
inc
sbb
into
mov
arpl
mov
out
call
mov
cld
inc
lcall
dec
jo
addr16
out
mov
and
dec
adc
lret
pop
jmp
das
clc
xchg
ljmp
and
sti
or
inc
sbb
push
pop
jl
icebp
cmp
addl
repz
and
test
aad
filds
lock
test
nop
or
xor
fwait
bound
out
and
cs
int3
imul
inc
xor
test
push
adc
ret
mov
std
div
out
arpl
inc
outsb
cmpsb
push
and
fdiv
jae
push
lea
adc
sbb
jp
push
mov
jmp
loopne
mov
repz
push
jg
inc
xchg
popa
sbbl
mov
jnp
mov
stc
push
push
or
in
add
mov
lret
pop
jmp
jmp
insb
lahf
rorl
test
iret
outsb
mov
dec
loopne
scas
dec
sahf
nop
cmp
lds
repz
sub
push
ja
xchg
inc
inc
mov
stc
mov
xchg
mov
or
xchg
or
mov
inc
imul
cld
cmp
xchg
mov
jge
addr16
rol
or
fiaddl
push
sti
add
and
mov
sub
test
xchg
sub
rolb
or
fbld
adc
enter
adc
ret
iret
jb
jmp
dec
push
hlt
and
fnstenv
add
cs
sbb
pop
jg
aam
imul
fildl
sub
shll
push
rclb
jae
fnstcw
lods
jnp
js
add
cli
pop
hlt
andl
push
pop
pop
xchg
scas
les
lea
lds
mov
shlb
popa
xchg
and
jne
jb
cmpl
fldt
orps
mov
add
lods
outsl
cli
lahf
adc
adc
iret
repnz
pop
fisttpll
or
xlat
scas
push
inc
test
xchg
sbb
sub
sub
sbb
stos
pop
jns
test
xchg
xchg
cs
outsb
jns
sub
cmp
into
mov
mov
add
hlt
movsb
dec
in
fwait
into
cmc
xchg
dec
jne
loopne
and
lret
pop
push
inc
pop
shlb
clc
xchg
adc
lahf
ss
adc
mov
xor
xor
and
or
dec
pop
stc
mov
enter
dec
loope
clc
add
loope
inc
sub
jmp
sub
push
pop
out
xor
iret
xor
cld
xchg
lock
repnz
sbb
rolb
fildl
inc
sbb
lahf
pop
lret
lods
imul
repz
push
inc
fcmovnbe
jl
add
enter
stc
pusha
xchg
stos
out
push
cwtl
xlat
xor
test
mov
mov
popf
push
push
inc
ljmp
adc
jb
sub
into
mov
mov
jp
lea
lcall
add
insl
fnop
int3
popf
fmulp
jp
dec
fcomps
jo
ss
cli
lcall
add
pop
mov
out
call
out
popa
es
push
std
mov
and
xor
add
dec
xchg
cli
push
push
imull
add
test
dec
and
sub
pop
mov
pop
push
push
xor
lahf
xor
jb
outsl
push
adc
push
loope
leave
fadds
cmp
adcl
jmp
fidivs
cltd
rcll
scas
cmpsl
jge
pushf
stc
pushf
mov
insl
mov
mov
loope
xchg
add
fisttps
push
mov
mov
push
push
in
jne
movsb
mov
cmc
and
mov
ja
call
and
in
sbb
dec
stc
push
je
scas
inc
mov
and
bswap
lock
mov
inc
jnp
je
mov
jecxz
pop
out
icebp
sbb
jnp
mov
sub
sbb
sti
shlb
int
jne
stc
cmp
es
mov
enter
cmp
pop
in
xchg
hlt
push
cmp
shrl
pop
xor
ret
fldlg2
bound
loopne
icebp
fisubs
lock
mov
sbb
xor
jno
daa
jb
sbb
imul
imul
cld
dec
cmp
lock
orl
inc
sbb
adc
dec
out
lret
into
cmc
sub
cld
or
pop
or
nop
lcall
sahf
xor
xor
testb
mov
int
lret
nop
mov
mov
test
xor
cld
in
aaa
call
and
dec
mov
inc
dec
scas
in
in
cwtl
jge
push
movsb
xor
in
lods
sbb
jb
inc
inc
jle
add
xchg
sbb
std
lret
sub
dec
and
ja
in
stc
aad
flds
sahf
insl
pushf
jg
sub
stos
mov
sbb
sbb
sbbl
js
hlt
pop
mov
mov
push
push
insb
test
jp
movsl
sub
dec
push
or
cmp
popf
push
fwait
cmp
negb
leave
es
push
insb
and
push
addl
add
scas
rcll
stos
fistl
lock
xchg
mov
xor
aaa
sbb
mov
enter
cmpl
or
js
mov
shrb
cmc
jns
or
jnp
cld
mov
push
push
jb
fdivs
mov
jmp
mov
imul
jnp
shlb
sub
mov
push
xchg
cmp
call
inc
mov
lret
dec
rcrl
xor
rcrl
sahf
and
lods
mov
pop
out
sub
inc
ds
cmpxchg
lock
pop
push
push
push
outsl
dec
xchg
inc
mov
dec
xchg
xchg
pop
aam
fidivrl
sub
fidivrl
cli
popf
ss
mov
inc
mov
outsb
fs
xor
dec
aas
xchg
push
mov
pop
sbb
loope
xor
or
xor
sub
stos
mov
cmpl
lods
dec
adc
jnp
dec
bnd
sub
faddl
push
into
stc
jge
rol
outsl
mov
call
push
xor
sbb
out
xor
je
sub
popa
push
jecxz
pop
fsubp
inc
js
cmpb
jl
into
sub
mov
arpl
je
jmp
lcall
ret
jno
inc
lcall
and
or
mov
fimull
dec
inc
hlt
popf
cs
lcall
inc
push
inc
outsl
sarb
xchg
sbb
sahf
jb
dec
lock
push
int3
popa
lret
es
addl
xchg
movsb
lds
xchg
jnp
sti
outsl
fldenv
test
xor
out
ret
aam
push
test
mov
cmp
pop
out
sar
xchg
xor
push
js
dec
lods
jle
insl
push
into
stos
stc
and
inc
lret
add
push
addr16
imull
adc
sbb
in
loop
jl
push
or
ficompl
pop
jne
imul
add
lret
inc
xor
clc
xchg
pop
scas
mov
mov
cmp
push
mov
out
adc
sub
dec
mov
test
mov
push
movsl
cli
pop
dec
pop
orl
stc
lds
push
enter
ret
and
jl
sti
fstpt
fiadds
mov
out
ret
rorl
push
mov
xchg
add
sbb
cmp
popf
sbb
aad
adc
push
push
push
mov
int3
and
loop
jnp
leave
dec
adc
cmp
push
loop
xlat
inc
leave
adc
pusha
sti
or
pop
inc
mul
popl
and
out
cmpsb
hlt
push
lret
xchg
or
sbb
dec
dec
pop
out
and
adc
mov
movsl
clc
jns
icebp
std
movsl
cmpsb
sbb
and
lea
jecxz
cmp
cltd
or
in
mov
jecxz
es
stc
xchg
fcom
shll
icebp
rorb
push
negb
push
sarb
hlt
sub
out
mov
inc
mov
pop
cmc
or
push
in
mov
dec
lock
cli
cmpsl
mov
jae
mov
shll
es
cwtl
cmpsb
outsb
sub
xlat
inc
push
pushf
dec
jb
nop
sbbb
in
divl
stos
pop
test
sbb
rcll
xor
fdivl
jno
rorl
aas
sahf
sub
xchg
jo
mov
push
xchg
sub
mov
out
jno
sub
inc
jnp
mov
cltd
mov
jmp
sub
aaa
aas
mov
imul
mov
pop
adc
and
push
xor
nop
shr
cmpps
shrb
aam
add
in
aaa
jp
clc
adc
cmp
add
fdivrp
cmp
js
ficompl
add
stos
or
xchg
cmp
lds
repnz
adc
inc
or
cmp
push
mov
pop
mov
pop
pop
xchg
ret
adc
in
mov
push
cli
movsl
jmp
and
sub
xor
sub
orb
mov
loope
stc
push
dec
les
fistpl
inc
mov
nop
jle
std
aas
xchg
notl
sub
adcb
bound
mov
and
gs
xchg
push
iret
int
sbb
or
shlb
test
inc
mov
mov
stos
mov
dec
and
int
push
cs
daa
cmp
fdivs
mov
les
adc
sbb
mov
jp
pop
mov
mov
loopne
sub
xor
std
jnp
mov
aaa
fimuls
dec
jmp
push
int3
mov
sub
adc
jnp
scas
mov
sarl
lods
xor
fldl
jae
les
pop
imulb
cmp
decl
xchg
jb
bound
cvttps2pi
xor
aaa
repz
inc
xor
or
sti
std
mov
xchg
addl
jne
jle
cwtl
in
mov
mov
xor
xadd
test
add
neg
movsb
rolb
mov
repnz
jl
jecxz
jp
jg
pop
into
mov
cmp
in
add
xor
jnp
mov
outsb
not
xchg
add
cmp
icebp
ja
insb
movsl
pop
mov
loope
adc
in
xor
aas
pop
pop
and
sub
ret
test
pushf
divps
enter
lods
shll
icebp
adc
pop
les
pop
xchg
mov
cmp
mov
xor
xlat
adc
xchg
xchg
ds
aad
adc
sub
pop
xor
nop
cmc
lret
mov
or
pop
xchg
sub
push
dec
ret
xlat
or
xchg
gs
out
test
mov
mov
cwtl
mov
lret
sub
xor
bswap
ret
push
movsl
loop
imul
mov
ret
or
stc
and
lea
outsb
add
and
pop
ja
sub
test
sbb
fmuls
loopne
ret
enter
addb
dec
clc
std
orl
bound
xchg
inc
pop
out
std
scas
lret
lock
fadd
insb
pop
fs
mov
xor
mov
jo
leave
push
cmpsl
or
inc
dec
cmp
mov
push
inc
bound
das
inc
mov
enter
out
push
lret
ficoml
mov
pop
cmpsl
enter
xor
out
inc
push
sti
cmp
inc
jnp
mov
repz
cmp
lahf
lock
inc
fcmovu
fldcw
inc
ds
enter
xchg
inc
in
jl
xchg
xchg
scas
lcall
push
xor
movsl
or
mov
sbb
es
xchg
xchg
test
xor
ss
push
dec
test
in
jp
popa
into
inc
cmc
aaa
mov
aaa
test
mov
repz
clc
dec
mov
sti
xchg
sbb
push
repnz
rorl
les
inc
in
nop
mov
lcall
cmp
sahf
mulb
aam
adc
into
in
out
shlb
push
rcrl
push
mov
mov
pop
movsb
dec
fs
aaa
push
dec
jle
daa
sahf
aad
les
stos
es
es
mov
xlat
dec
aad
xchg
mov
sub
sbbb
push
fnstenv
mov
lods
add
mov
jns
pop
sub
repnz
dec
pushf
loope
lret
mov
cwtl
xchg
inc
lock
popf
lahf
pop
xchg
sub
in
sub
jge
mov
jb
or
into
test
call
push
outsl
mov
jl
movsl
inc
mov
inc
sbb
dec
and
or
data16
push
push
in
push
add
fwait
daa
sub
les
pop
sbb
jne
cmp
mov
xchg
fsubrl
cwtl
add
data16
mulb
mov
sbb
mov
fs
jmp
es
jl
test
jne
vpmaxub
loopne
imul
sub
xor
outsb
push
cmpsb
movsb
movsl
cmpsl
rorb
insl
lods
out
testb
mov
sub
sbb
sub
add
aad
jg
cli
pop
addl
je
sub
mov
mov
mov
push
fimull
lcall
sbb
sub
and
imul
divb
lods
pop
and
mov
or
jp
stc
jno
and
lahf
adc
mov
popa
test
xor
rcrb
push
jno
imul
out
js
inc
cmp
iret
fcom
int3
je
sub
jecxz
sub
pop
mov
adc
lods
xchg
inc
cld
in
mov
in
xchg
mov
es
cmp
jns
imul
rcll
sbb
and
and
loop
lret
mov
cmp
mov
mov
jnp
and
mov
out
loop
ja
enter
idivl
mov
xor
stos
lea
xor
std
clc
std
xor
jns
push
aas
out
mov
xor
push
jmp
and
jo
mov
adc
and
or
inc
movsl
xor
add
lock
es
push
add
and
test
push
rolb
je
push
test
ja
inc
popf
fucomip
stos
jge
cmpb
sub
rol
or
add
aas
movsl
mov
jg
pop
lods
mov
mov
push
fcmovbe
push
loopne
les
in
cmp
fistpl
pop
lods
jp
rcl
das
cmc
push
lcall
jecxz
in
xchg
jnp
cmpsl
cmc
repnz
sub
adc
fs
shr
mov
std
xor
enter
add
insl
hlt
cmp
dec
push
adc
cltd
in
push
cmpsl
jno
or
jle
cwtl
lret
cmp
imul
shr
jge
push
fisubrs
jecxz
add
ljmp
inc
icebp
decb
sbb
nop
shlb
cmp
jecxz
aam
jecxz
in
sbb
mov
cld
icebp
ret
stos
cmpsb
dec
std
out
and
dec
aaa
mov
iret
out
in
adc
inc
mov
xchg
pop
pop
cli
xor
adc
cmp
mov
cmp
sub
dec
ret
lret
aas
inc
es
loopne
mov
push
mov
xor
mov
mov
mov
lock
jge
dec
jg
pop
popf
xor
in
pop
inc
pop
repnz
xchg
hlt
mov
xlat
into
bound
add
fistpl
or
mov
cmpl
sbb
add
and
cmp
leave
divb
int3
bound
add
lcall
inc
xchg
mov
lods
in
je
adc
cmp
cs
nop
cmpsb
ss
mov
mov
xchg
repz
stc
mov
and
dec
inc
in
ljmp
leave
sbb
sbb
nop
mov
in
adc
out
jbe
cmp
std
mov
mov
push
dec
movsb
roll
fldl
test
cltd
mov
mov
or
and
pop
outsl
shl
sbb
pop
dec
jnp
into
movb
push
scas
scas
push
decl
mov
ror
mov
mov
dec
xor
out
popf
std
rolb
jecxz
nop
mov
xor
vpcmpgtw
dec
sbb
jb
test
mov
cmp
jmp
sub
aad
aas
push
sar
aas
xchg
mov
cli
push
scas
xor
mov
adc
mov
dec
imul
mov
or
pop
dec
sub
aas
popf
pushf
out
dec
cmp
bnd
scas
dec
ja
mov
insl
inc
ljmp
cmp
adc
cmc
xor
dec
push
imul
andl
dec
movntq
jno
in
lds
ss
xchg
xor
dec
fcomps
mov
lods
cmp
jecxz
js
cwtl
sub
mov
push
xchg
xchg
jmp
call
cwtl
mov
dec
lcall
jp
jl
cld
lock
arpl
pop
push
inc
mov
pushf
shlb
test
je
lds
add
clc
pop
cmpsb
jbe
push
call
pop
int
jge
loopne
jge
inc
push
enter
cli
and
or
dec
in
adc
sbb
je
movsb
orb
das
sub
outsb
frndint
andb
ds
dec
aaa
xlat
icebp
data16
xchg
jb
jecxz
ficomps
push
xor
sbb
mov
out
jge
sarl
mov
aaa
cwtl
aad
jg
test
nop
lret
lea
pop
mov
scas
push
dec
call
int
cmp
scas
daa
notl
xchg
sbb
sub
mov
xlat
jmp
mov
adc
in
les
scas
cmp
test
and
jl
sbb
pop
fwait
test
mov
pop
inc
jne
cmp
fidivrs
mov
lret
sti
lods
fcoms
fidivrl
and
insl
pop
jle
add
xchg
sbb
addb
inc
mov
icebp
add
es
ret
xor
iret
test
mov
movsl
mov
and
push
mov
push
mov
pop
mov
repnz
push
insb
mov
jo
aad
iret
sub
addl
testl
push
fiaddl
push
movb
bound
in
mov
ss
call
sbb
pop
xor
sub
add
movsb
cltd
jg
movl
jecxz
jne
mov
lods
outsl
push
mov
shl
enter
outsl
sub
add
xchg
sbb
mov
scas
or
lock
mov
sub
jns
sbb
inc
fildll
mov
adc
ds
mov
fsubl
push
jne
sbb
jne
pop
pushf
imul
clc
jb
mov
cld
mov
sub
mov
jecxz
lea
cmp
mov
lret
mov
add
push
add
sbb
inc
leave
data16
add
loopne
mov
movl
hlt
sahf
mov
mov
mov
xor
cmpl
jl
jno
sbb
int
mov
mov
pop
mov
cmc
pop
jp
or
cltd
daa
popa
aad
inc
inc
in
ret
cli
dec
jecxz
mov
pop
aas
pop
mov
sub
cmp
sbb
mov
xor
adcb
jl
int3
stos
cwtl
inc
pop
push
adcl
sahf
jmp
out
scas
stos
jmp
outsl
dec
pop
push
in
inc
mov
sbb
inc
in
pop
pop
sub
mov
cmp
pop
lea
in
dec
or
js
xchg
mov
adcl
cld
cmp
jle
out
push
mov
repnz
adcb
inc
xchg
repz
adc
mov
daa
addr16
scas
and
xchg
mov
sub
jl
movsb
pop
jp
sub
or
repz
aas
and
popl
mov
sbb
or
pop
std
out
aaa
and
loop
test
sbb
cmp
movsb
dec
sbb
cli
int
fsubl
or
fimuls
dec
out
sub
int3
mov
xchg
mov
outsb
jb
add
and
pop
xchg
xchg
push
push
inc
pop
js
cmc
filds
repz
mov
inc
test
je
and
shrl
mov
out
popf
enter
xchg
in
mov
aaa
sahf
push
cmpb
inc
sub
mov
xchg
push
inc
outsb
shl
mov
dec
jl
add
add
sub
movsl
in
testb
pop
sahf
mov
cmpsl
pop
popf
cs
cld
mov
mov
mov
mov
fwait
push
mov
lods
add
lods
lods
sbb
arpl
cmp
add
clc
mov
rcr
inc
jl
out
xor
nop
xchg
dec
sbb
mov
arpl
psraw
ret
test
push
jge
push
je
aad
and
sub
cmc
mov
xchg
mov
rcll
mov
xchg
mov
push
sub
popa
mov
sub
movsl
pusha
lcall
and
and
jns
sti
jle
sahf
lret
lods
sbb
push
in
ljmp
sbbb
dec
adc
xor
and
test
stos
mov
push
xchg
ds
adc
repz
divl
cltd
cltd
cltd
loopne
xchg
jl
push
jg
jo
mov
pop
ret
stos
or
arpl
xchg
fisubs
daa
mov
and
test
repz
fwait
pop
mov
cltd
mov
fxch
fsts
xor
movsb
and
iret
iret
pop
sbb
pop
loopne
fcoms
call
mov
aam
scas
repnz
cmc
lock
bound
mov
icebp
fnstcw
add
lahf
sbb
mov
aam
cld
dec
jge
das
and
sub
loop
jne
mov
mov
xlat
test
lods
jmp
data16
notl
test
sbb
pop
jle
push
sub
bound
xchg
jl
or
mov
insl
enter
push
xchg
dec
mov
jmp
test
and
out
lds
les
in
xor
push
xchg
push
leave
lcall
or
jno
inc
push
movsl
xor
and
mov
inc
out
lret
jb
test
popf
jo
mov
dec
push
pop
aam
movsb
notl
sbb
ret
cld
push
lret
dec
lea
inc
mov
push
cmpsl
cltd
lret
les
ret
mov
fsubrp
push
xor
pop
std
inc
xchg
add
ja
fdivl
sbb
cwtl
sub
addr16
pop
xchg
pop
inc
shl
xor
mov
ds
pop
cltd
jg
lahf
fstpl
out
sbb
nop
data16
adc
push
ret
dec
add
cmp
outsl
aam
cltd
dec
scas
testl
jl
popf
mov
inc
fs
imul
pop
mov
cmpsl
jns
mov
loope
mov
jnp
add
je
les
sub
and
mov
repz
sbb
sub
repnz
push
mov
lcall
dec
in
popf
dec
xor
and
adc
stc
jg
mov
jae
mov
dec
int3
stos
ljmp
pusha
or
xchg
add
mov
adcb
lret
adc
in
jle
jge
imul
int
mov
inc
arpl
inc
fistpll
outsl
cmp
or
jae
popa
outsb
fimull
loop
push
jg
mov
pop
xlat
inc
fstl
popf
or
sub
xor
cmp
or
jo
dec
pushf
movsb
dec
stos
sub
cmp
cs
cmpsl
dec
mov
push
gs
push
push
mov
cmp
lret
fmul
scas
jecxz
jmp
and
pop
and
popa
fldcw
imul
dec
rorb
in
test
push
cmp
loope
movsb
mov
popf
shrb
lret
xor
push
out
loop
and
pop
pop
xor
in
xchg
inc
push
dec
jnp
rcr
mov
push
sarl
sbb
ret
xchg
sub
adc
notl
mov
push
lods
mov
popf
cmpl
test
mov
out
cmpsb
movsl
sbb
loopne
sub
hlt
dec
mov
fs
lock
loope
xor
mov
cmp
out
clc
inc
outsl
xor
in
push
or
shll
jne
jns
mov
int3
sarb
loop
fidivrs
lods
rclb
sbb
xor
nop
aas
loop
and
test
repnz
int3
adc
jmp
and
mov
cmp
sbb
mov
insb
cli
mov
fldt
xchg
sbb
ja
or
mov
inc
pusha
stos
gs
test
dec
test
adc
cmp
arpl
xchg
icebp
ds
nop
mov
js
dec
js
test
ret
les
sbb
lds
fimuls
and
mov
scas
jbe
cmp
add
movsl
cmp
jbe
push
lar
adc
sbb
pushf
xor
pop
dec
dec
adc
add
push
mov
stos
dec
iret
sahf
mov
loop
mov
lcall
lcall
or
sub
ds
mov
jl
sbb
popa
jb
fadds
sbbl
push
pop
mov
rol
shlb
inc
cmp
cmpl
ja
jo
lock
and
mov
jo
sub
adc
inc
stos
fsts
ss
imul
mov
or
add
aas
pop
aad
jge
mov
packsswb
aad
inc
mov
dec
mov
int3
loop
push
das
jno
inc
mov
ds
aaa
rcll
bound
inc
repz
cmc
push
jns
or
push
add
cmp
shrb
pop
push
or
iret
xlat
out
cli
stos
mov
scas
lods
and
cld
lds
xor
insl
adc
and
lret
pop
popa
les
loop
test
pop
lret
adc
or
mov
test
dec
xlat
js
aas
shl
adc
inc
mov
subb
in
pop
mov
push
icebp
pop
sub
push
loop
aam
mov
pop
es
rorl
int3
lea
jecxz
lods
out
jo
filds
inc
lea
pop
inc
loopne
push
dec
movsb
in
inc
pop
sarl
jmp
ret
aad
pop
push
sub
mov
add
jecxz
stos
pop
push
rcrl
adc
je
sbb
gs
pop
fiadds
loope
in
fwait
mov
ds
sbbl
xor
mov
arpl
adc
sbb
adc
adc
mov
enter
fnstcw
sbb
xchg
imul
mov
rcr
or
lret
or
or
sbb
stc
leave
push
leave
sahf
jnp
mov
mov
cmp
test
pop
mov
lods
gs
or
dec
xchg
and
push
pop
cmpsl
aad
cmp
add
mov
inc
xor
mov
testb
dec
adc
lods
mov
call
xlat
movsl
jnp
mov
sbb
pusha
push
test
pop
not
dec
push
rcll
fs
fistl
sub
jne
xchg
fistl
loope
dec
sub
jnp
jns
dec
cli
add
insl
jns
cmpsl
fwait
jmp
insb
pushf
out
push
and
mov
push
mov
stos
pop
ja
lcall
pop
movsb
xor
lret
int
std
cmp
xlat
lock
data16
arpl
jo
dec
adc
mov
sbb
rolb
mov
adc
ret
push
lock
shrb
aad
out
out
and
adc
dec
cmp
pop
aam
dec
in
addr16
call
out
js
fucomip
mov
mov
mov
test
jmp
cld
mov
jecxz
pop
adc
pop
pop
imul
lods
addr16
mov
sbb
sub
mov
pop
sub
ljmp
cmp
jg
test
jge
imul
out
inc
mov
sub
sub
xchg
pushf
xchg
pusha
sbb
mov
mulb
jno
cmpsb
gs
andb
pop
es
lods
testb
push
movl
aaa
add
mov
fs
xchg
pop
movsb
lahf
inc
imul
adc
dec
cmp
andl
in
cmpsl
lds
jmp
scas
dec
adcb
inc
cwtl
inc
mov
sti
test
cltd
imulb
add
add
add
lcall
cmp
outsb
xchg
rcrb
mov
xchg
mov
lea
pop
popa
dec
leave
and
ret
adc
out
mov
fistpll
ret
pop
mov
loopne
jbe
in
sbb
out
outsl
outsb
call
ljmp
pop
xlat
sub
outsb
rorl
test
cli
call
mov
jns
lret
imul
mov
in
test
stc
jg
je
mov
adc
mov
jnp
mov
jno
add
cld
mov
imul
push
lea
mov
fwait
add
dec
je
sbb
rolb
clc
add
mov
dec
mov
enter
inc
and
mov
hlt
clc
and
mov
sti
pop
sub
mov
imul
addr16
inc
dec
xchg
in
jp
data16
sub
cmp
inc
xor
cld
inc
cwtl
add
sti
jnp
and
mov
add
repz
sub
js
sbb
pop
jl
fstpt
pop
cmc
arpl
cmpsb
pop
xchg
je
in
outsb
mov
lock
push
mull
mov
and
daa
or
dec
cld
cmpsb
mov
fldenv
push
jb
ret
fbld
out
push
lahf
movsl
stos
add
lock
sbb
rcrl
sub
xchg
cld
xchg
or
shlb
pop
mov
dec
std
pop
xor
cltd
bnd
pop
add
fldz
stos
iret
dec
out
adc
mov
cmp
lods
push
mov
xchg
cmp
pop
ret
ret
fidivl
insb
mov
je
bound
nop
pop
mov
iret
jg
std
fwait
cmpsl
sbb
lcall
push
sbb
pop
test
cs
pusha
insb
xchg
push
shrl
in
mov
outsl
movsl
cmc
shll
fmulp
stc
xorl
repz
daa
scas
ljmp
or
and
mov
leave
or
pop
rclb
mov
mov
ds
lds
shrl
mov
xchg
daa
xchg
rol
fcoms
out
mov
mov
mov
inc
mov
es
cmp
int3
scas
cltd
jg
inc
scas
fnstsw
push
ret
sub
fwait
insl
jmp
and
movsb
out
jecxz
cmp
xchg
in
mov
dec
in
je
push
mov
sbb
divb
cld
mov
arpl
jp
dec
cmpsl
loopne
lret
lea
push
inc
imull
dec
push
je
push
in
into
jno
sahf
popf
xchg
mov
scas
icebp
shll
loopne
int3
and
xchg
loopne
push
inc
addr16
repz
int3
or
jne
mov
repnz
pop
es
inc
xchg
pop
popa
sbbl
cmc
push
imul
push
pop
lret
insl
movsl
or
inc
pop
enter
inc
outsb
add
lahf
mov
loop
fsubrs
lds
fadds
jb
push
lods
mov
mov
stc
jno
inc
lret
lcall
cmp
inc
jb
testb
shl
dec
fmull
sbb
enter
mov
lods
pop
ja
cmp
push
and
or
jns
jg
xor
ret
inc
inc
sbb
xchg
sbb
sbb
shl
push
popl
cmpsl
sub
and
mov
xchg
call
adc
pop
adc
fstps
dec
out
mov
aad
jp
leave
dec
push
out
data16
push
aam
loopne
fwait
lret
pop
imul
mov
mov
and
pop
jbe
pop
push
xchg
push
or
call
sub
into
lock
and
sub
xchg
fidivrl
out
movsl
cwtl
sbb
fisttpl
xlat
fbstp
mov
or
jle
xchg
sti
jl
imul
and
push
fdivl
xor
jmp
stc
bound
xor
rcrl
lret
in
repz
xchg
ret
out
or
push
pop
cmp
addr16
insb
adcb
into
insb
fsubl
and
out
lcall
rolb
outsl
loop
xor
inc
mov
dec
sub
add
mov
mov
mov
jo
loopne
xchg
push
jno
pop
mov
das
rol
inc
sbb
jmp
inc
aam
outsl
in
cmp
cmc
ja
pusha
adc
xor
cvttps2pi
mov
cmp
cmp
aas
cmpsb
stc
sbb
das
sbb
jmp
push
cmp
orb
ror
mov
bound
ss
cltd
jo
aad
jnp
lahf
adc
pop
icebp
or
dec
jge
inc
mov
aaa
mov
mov
rorb
jbe
js
hlt
mov
outsb
push
rolb
in
dec
sbb
aad
cld
cmpsl
sbb
daa
or
push
or
icebp
daa
dec
pop
pop
cmp
loop
xchg
pushl
jns
loope
sbb
jae
fdivrs
cmp
push
cmc
ret
stos
pop
xchg
addl
dec
push
sbb
ficompl
mov
jbe
add
mov
push
pusha
popa
fsubrs
daa
fstpl
sbb
pop
cld
xchg
sub
lods
fldenv
hlt
xor
popa
inc
adc
lret
xlat
inc
or
cmc
xchg
pusha
rclb
pop
imul
mov
outsb
inc
pop
into
pop
mov
mov
jmp
pop
int3
hlt
imul
inc
mov
ffreep
stc
sbb
jecxz
das
xchg
das
leave
mov
and
dec
fbld
sbb
cmc
cli
ret
mov
jns
addl
repnz
popa
test
dec
insl
mov
add
jge
inc
data16
fildl
outsb
sbb
and
adc
mov
fsubs
daa
add
and
xor
pmaxub
adc
std
mov
mov
or
xlat
and
sub
out
or
or
imull
bnd
adc
and
out
jg
cld
inc
imul
cmp
int
pop
out
popf
aas
dec
ja
push
push
xor
out
xlat
dec
xor
cs
sub
cmp
mov
movsb
notl
push
in
je
dec
arpl
cmp
push
stos
cmp
lea
loope
xor
push
dec
xchg
jno
es
and
test
mov
inc
loopne
jmp
outsl
mov
or
xchg
add
xchg
mov
dec
jo
cmp
and
cs
cmp
inc
sub
pop
xchg
pop
mov
cmpsl
mov
sub
xorl
or
arpl
xor
clc
out
lahf
sti
mov
cli
sub
rcll
cmc
icebp
scas
data16
hlt
daa
leave
arpl
sbbb
int
cmpsb
popa
add
in
test
xor
roll
scas
int3
aad
push
lret
ret
loope
push
or
pop
and
jno
test
pushf
repz
sub
add
lds
add
into
inc
jmp
cmpsl
jbe
imul
xchg
mov
test
or
pop
ror
jecxz
scas
test
int
ss
lea
or
jl
faddl
add
or
mov
or
sbb
xor
sub
cltd
cmp
mov
ret
or
xor
daa
jnp
adc
jmp
stos
ja
scas
sahf
cmp
jl
and
xchg
add
loop
xchg
mov
inc
fs
dec
pop
jle
mov
inc
xchg
decl
adc
ret
call
loopne
adc
sub
mov
popf
pop
je
cltd
mov
xchg
sub
jne
inc
pusha
clc
jns
fimuls
add
add
aam
mov
inc
cmpsb
pushf
jno
test
xchg
aad
push
mov
mov
scas
mov
lahf
xchg
into
jnp
sbbb
or
push
adc
scas
push
out
ret
imul
pop
push
es
push
add
out
cmc
ret
cmc
push
add
pop
jge
dec
or
cmp
xor
arpl
subb
inc
push
sbb
sbb
sub
ds
lds
mov
and
xor
je
jno
mov
push
pop
sub
aas
cmp
push
jne
mov
fcompl
cmpsl
test
xor
les
test
adc
icebp
rcr
xor
pop
sub
dec
fdivs
mov
push
das
xlat
repz
jnp
les
out
sbb
lret
and
shrl
shr
lds
mov
fisubl
loop
movsl
scas
mov
dec
popa
out
fldl
dec
xchg
and
sub
dec
repnz
sbb
push
adc
xchg
inc
andl
mov
loope
inc
push
jmp
and
dec
add
cmc
mov
fnstsw
int
mov
xchg
add
jl
mov
sub
mov
or
insl
inc
sti
les
jbe
cmp
push
mov
dec
push
stos
hlt
mov
xor
test
loopne
push
shrl
xor
fstl
je
inc
movsl
cltd
jp
xor
pshufw
mov
mov
xor
xor
and
xor
lcall
in
sub
jns
mov
adc
xchg
dec
lock
or
imul
add
jbe
movsb
push
jbe
and
sbb
xorb
inc
cltd
ret
repz
mov
xor
inc
nop
scas
cmp
pop
lds
sub
in
sbb
cmp
xchg
mov
jge
add
insb
mov
aam
ret
cmp
mov
inc
add
cld
pop
sub
xor
fisubrs
sub
cmpsl
jne
xor
out
cld
push
outsl
loope
sbb
jns
jne
add
aaa
into
in
in
loop
xchg
enter
and
repnz
xor
clc
pop
fsubrl
hlt
repnz
jo
repz
inc
pop
repz
call
jb
xchg
cmp
adc
mov
mov
xlat
xchg
insl
mov
mov
and
or
out
in
sbb
jmp
and
dec
push
pop
rcrb
hlt
out
sub
arpl
push
sbb
ja
xchg
daa
stc
daa
test
and
call
jne
add
out
xchg
fsubl
jnp
out
mov
xchg
mov
hlt
outsb
and
es
xchg
fisubl
aas
rclb
jge
adc
js
and
std
dec
repz
out
or
je
aad
imul
jl
mov
das
shll
sub
jle
insl
mulb
out
clc
jns
dec
jnp
filds
in
xchg
movsb
fucomip
jnp
push
lods
iret
xchg
insl
aas
push
xor
jl
aam
xor
jge
sbb
repz
test
and
negl
mov
dec
test
jno
cmp
xlat
pop
adc
sub
sbb
add
inc
inc
out
popf
pop
fwait
pop
sbb
sub
in
popf
or
int3
cltd
sbb
fadds
and
loop
lock
inc
rcll
lods
ja
fisttps
add
push
sub
pop
dec
jge
outsl
aaa
clc
fstpl
test
push
arpl
into
push
test
xchg
movsb
push
int3
icebp
dec
push
ss
xor
rcll
lret
mov
jecxz
mov
inc
jle
add
push
test
add
iret
out
and
dec
xor
repz
fidivs
jecxz
ljmp
ret
sub
imul
and
mov
test
loop
test
mov
ja
mov
pop
addb
mov
pop
lcall
pop
shl
lret
ss
jg
cmp
popf
push
adc
mov
das
xchg
xor
jmp
cmp
and
cmpsb
mov
sbb
mov
and
ja
iret
mov
jno
xor
sahf
out
sub
dec
pop
sub
addl
out
inc
ja
adc
mov
pop
xchg
sub
jmp
daa
pushf
adc
mov
ret
out
mov
pop
popf
xchg
xor
mov
imul
aad
popa
sahf
xchg
mov
inc
jecxz
sahf
jae
lret
mov
int3
adc
inc
add
out
das
sub
scas
push
repnz
dec
add
ss
xchg
stos
lods
lahf
loopne
add
or
pop
fwait
xlat
int
dec
pop
or
insb
mov
inc
jae
int
bound
push
test
dec
mov
inc
sbb
fildll
jo
pop
or
push
lea
adc
fldl
sbb
sub
xor
xchg
mov
push
cmp
into
mov
rcrl
movl
ds
punpckhwd
je
jnp
mov
popa
push
pop
xor
cmp
jl
fisttpll
stos
pop
or
dec
xor
and
xchg
pop
movntq
dec
push
push
bound
push
push
and
push
xchg
cmpsl
cmp
lds
adc
insl
cli
imul
push
mov
mov
push
rcrb
lods
cs
sub
dec
push
push
cmp
adc
mov
sbb
js
loopew
lahf
push
dec
mov
test
xchg
es
sub
xchg
test
loope
sbb
mov
lods
lods
pop
or
das
mov
loope
sbb
nop
outsb
sbb
mov
stc
in
push
inc
outsb
loop
js
dec
sub
dec
and
fistpll
insb
sbb
mov
xor
sbb
mov
fiaddl
xchg
clc
insb
fidivs
cltd
movsl
lods
data16
xor
shrl
js
push
mov
push
cmp
out
or
inc
xchg
call
adc
pop
test
jp
lds
push
jno
mov
inc
mov
and
out
cltd
rolb
test
mov
push
clc
mov
cmpsl
xor
je
movsb
cmp
mov
test
mov
sahf
js
lea
mov
sub
push
mov
mov
repz
gs
ret
insb
lea
adc
sahf
mov
rorb
mov
cwtl
out
iret
in
mov
bound
cmc
lahf
adc
in
gs
adc
in
pop
mov
dec
dec
sbb
shlb
sahf
ret
or
bound
adc
jmp
cmpsb
mov
xchg
adc
out
std
or
pop
in
rorb
and
fisubl
ljmp
xchg
sbb
or
adc
outsb
je
mov
jle
mov
cld
pop
data16
shll
hlt
mov
sbb
dec
aaa
lods
lret
xor
lahf
xchg
xchg
sub
xchg
fsubr
out
dec
and
lcall
dec
dec
sub
and
jbe
push
shrb
mov
fs
adc
inc
mov
pop
push
adc
cmp
add
and
std
sub
notb
insl
add
push
fnstenv
rclb
sub
movsb
or
je,pn
xor
call
aaa
leave
in
mov
adc
std
mov
dec
or
repnz
cmp
sarb
or
add
inc
fcoml
sub
xor
mov
jns
loopne
jo
add
dec
mov
shrb
cltd
lcall
data16
dec
icebp
push
jae
sub
in
cmpsb
or
in
mov
ljmp
jno
notb
adc
add
xchg
mov
mov
and
cmp
inc
lods
pop
jg
iret
xor
jmp
rolb
mov
divl
jae
iret
lea
jle
mov
stos
mov
adc
or
xor
cmp
push
jge
push
dec
xor
int3
lret
movb
jmp
xor
xchg
out
in
xchg
repz
loopne
pusha
jo
sub
sub
fistpl
cmp
inc
addr16
enter
dec
sub
insb
scas
stos
idiv
repnz
fstpt
loopne
inc
pop
std
popa
mov
stc
xor
adc
push
int
xor
js
data16
xor
aaa
dec
add
test
pop
mov
into
adc
jo
ret
bound
adc
fsubr
inc
movsb
imul
insl
ja
ja
gs
mov
push
out
inc
out
arpl
mov
xchg
push
cs
jae
in
nop
and
ret
dec
mov
jmp
xor
xor
repnz
cmpsb
addl
call
pusha
sub
add
mov
push
push
cmp
sbb
mov
sbb
mov
dec
lds
cwtl
dec
fsubs
pushf
sub
xchg
dec
xchg
xchg
xorb
jmp
jl
push
push
adc
pop
and
push
icebp
out
adc
mov
mov
add
rorl
dec
in
daa
add
test
iret
imul
xor
sbb
mov
push
stos
xlat
loop
int
inc
addb
add
pop
pop
cmpsb
xor
inc
push
sbb
and
xlat
xchg
in
test
pop
loop
jae
cmpsb
push
in
int
dec
adc
lahf
jne
ss
popf
or
dec
call
xchg
loop
adc
pusha
add
fidivrs
fbld
jp
and
aas
xchg
repnz
scas
sub
adc
nop
fbstp
ret
and
dec
pop
sahf
adc
fdivrp
add
inc
test
imul
cmp
or
mov
fmuls
or
je
test
mov
mov
mov
lock
pop
mov
aad
inc
mov
pop
aas
jge
push
iret
mov
jo
inc
mov
push
sbb
mov
fistpl
add
enter
pusha
aad
mov
in
inc
inc
pop
jb
mov
or
pop
pop
or
out
shrl
shrb
mov
dec
cs
inc
and
jmp
cmpsl
stc
hlt
out
mov
lahf
inc
and
mov
xor
sub
sbb
mov
andl
sub
sub
xchg
out
out
ljmp
in
jle
enter
das
push
mov
rcrl
dec
pusha
fadds
and
jno
sbb
rcrl
aad
aaa
mov
mov
mov
mov
xor
fcmovu
rorb
add
sbb
fmull
lret
imul
adc
adc
iret
inc
and
gs
push
dec
jno
bnd
cmp
mov
or
test
das
xor
adc
out
dec
dec
sbb
jne
rclb
test
lock
es
jl
movsb
push
mov
fisttpll
mov
cwtl
mov
repnz
int
stos
inc
aaa
cmpl
popf
mov
pop
jno
mov
fwait
adc
dec
cmp
jns
dec
outsb
sbb
cltd
hlt
fs
inc
push
pushf
dec
pop
aaa
loop
mov
fistpll
xor
into
or
mov
std
push
pop
out
arpl
loope
movsl
sbb
mov
or
xchg
cli
mov
inc
dec
mov
mov
jle
lock
sub
xchg
cmp
insb
jg
mov
and
cld
jge
rcrl
xor
les
adc
dec
lcall
stos
mov
jge
mov
sbb
in
pop
jle
sbbb
loope
lcall
mov
jns
push
fcoml
lret
xchg
and
cli
scas
pop
and
mov
call
rorb
test
in
dec
aam
imul
push
and
adc
lock
je
adc
pop
es
bound
jae
dec
xor
ds
and
gs
sbb
xchg
subl
in
cs
int3
pop
lret
imul
ja
push
and
xor
and
dec
in
pop
shrb
xor
xor
cwtl
fwait
cld
ficoms
out
hlt
shl
into
or
xchg
add
iret
iret
pop
scas
mov
sarl
hlt
jmp
adc
add
mov
bound
nop
jg
sub
data16
lods
pop
out
add
pop
sub
inc
out
ret
cmp
arpl
out
lahf
mov
outsb
testl
adc
mov
test
insl
inc
lods
lds
ljmp
rcll
sub
push
jecxz
fwait
insl
push
pop
and
jmp
in
xchg
jno
dec
inc
and
sbb
out
sarb
push
aad
sahf
iret
xor
leave
repz
popf
sahf
into
mov
mov
in
test
push
addr16
sbb
lahf
and
mov
arpl
cmp
lock
xor
jb
xor
cli
imul
add
pusha
scas
pushl
fisubs
fistpll
in
cli
stc
sahf
dec
pop
call
mov
es
iret
cs
inc
loop
inc
or
mov
inc
test
xchg
jno
or
xor
movsb
xor
mov
imul
jo
fsub
movsb
lods
lods
xchg
jnp
mov
in
xor
and
or
jne
jl
sub
cs
sub
push
out
push
push
cmpsb
bnd
mov
pop
mov
leave
cmp
sbb
jns
aaa
cli
or
push
ss
add
iret
in
fs
sub
xchg
andl
aad
mov
mov
xchg
sbb
pop
lret
push
or
popa
das
ja
mov
xchg
in
hlt
shl
pop
fisubrs
jns
push
inc
nop
icebp
ror
cmp
sub
sbb
fisubs
lds
mov
mov
jno
xchg
jmp
jne
lock
jo
xor
pop
fstps
push
ret
gs
outsl
mov
jp
adc
dec
push
and
popa
dec
sbb
cwtl
int
fiaddl
addb
sti
ret
lods
mov
and
ds
dec
adc
aad
fs
ds
and
pop
xor
cmp
mov
gs
stos
pusha
iret
fldcw
add
dec
cmp
pop
stc
jmp
ret
mov
outsl
mov
sub
test
sahf
movsl
notl
or
not
sbb
push
in
pop
xchg
mov
and
xchg
inc
lds
dec
sbbl
lcall
decl
into
xor
jecxz
loope
ret
leave
aas
fldcw
shll
daa
das
test
test
icebp
rolb
daa
cmc
add
mov
push
cmp
mov
or
adc
sahf
add
pop
pop
out
imul
push
mov
add
add
lods
aad
sbb
pop
mov
in
lods
ror
arpl
out
arpl
ret
sub
movsb
mov
aad
sbb
sub
lods
daa
in
cmpsl
out
test
enter
int3
ret
jl
jge
test
mov
sub
sub
adc
rclb
inc
fcomps
fistpll
inc
xchg
loopne
adc
loopne
ja
cmpsl
cmp
aad
and
mov
jns
xorb
cmp
mov
inc
inc
outsl
out
jge
xor
add
jne
pop
push
scas
jecxz
pop
mov
fistpl
aas
jge
fisttps
sbb
push
in
nop
add
imul
out
loope
sbbb
inc
outsl
inc
rcrb
stos
cli
sbb
ret
adc
jle
ljmpw
sbb
push
mov
out
fwait
push
adc
icebp
sbb
cltd
pop
or
dec
aad
cmp
xchg
sub
inc
xchg
jmp
inc
xor
push
inc
fcoms
push
or
repnz
sub
jnp
pop
cwtl
jge
mov
flds
and
and
hlt
nop
and
pushf
fwait
pushf
test
jg
add
xor
lods
popf
push
mov
mov
lcall
jl
mov
mov
sarb
cmc
and
test
mov
pop
cmc
adc
lret
xor
rcrl
fstpl
dec
sub
xchg
xor
xor
cmp
inc
xor
and
dec
shrb
mov
xor
fldt
pop
hlt
sbb
cmp
loope
subl
scas
mov
cmp
enter
out
imul
hlt
ficoms
std
xor
fs
mov
push
lret
mov
sbb
ficomps
mov
ret
xchg
mov
out
sub
repz
pop
dec
insl
xchg
and
imul
das
adc
lods
and
jo
icebp
scas
lods
or
or
loopne
divb
test
xchg
and
into
pop
jmp
mov
js
add
mov
fldenv
lods
push
jns
ja
inc
xchg
icebp
icebp
sbb
test
arpl
fbstp
cmp
pusha
call
aad
dec
inc
push
cwtl
js
push
cmp
les
mov
pop
cwtl
mov
loopne
sub
or
dec
sub
pop
sar
mov
fisttpll
xchg
push
lea
ljmp
sbb
cwtl
aaa
sti
mov
pop
mov
jno
sti
icebp
in
sub
and
maxps
jb
cmpsl
ficoms
pop
ret
mov
pop
sbb
pop
aaa
and
hlt
in
add
mov
sti
adc
pushf
gs
movsl
inc
or
pop
insl
inc
stos
jmp
cltd
fsubr
aam
xchg
mov
icebp
aaa
jle
cs
std
pop
inc
enter
mov
cmpsl
cli
xchg
cmp
cmc
pop
pop
adc
dec
data16
xchg
ds
aaa
or
adc
outsb
shlb
sbb
xorb
movsl
pop
mov
dec
xchg
mov
push
aam
jg
jo
stc
ret
scas
push
cmp
mov
aad
ds
decb
ret
xchg
jae
and
or
cvtps2pi
lods
popf
xchg
ja
pushf
xlat
scas
fs
inc
dec
sub
lds
mov
test
xchg
inc
cli
popa
cmc
jmp
fcoms
sub
stos
lcall
pop
std
add
mov
insl
dec
pop
fistpl
push
fidivrl
adc
mov
dec
aaa
add
jno
mov
in
jns
mov
pushf
hlt
pushf
mov
mov
scas
rcll
push
sub
aam
loop
mov
mov
dec
gs
jecxz
inc
int
mov
jle
mov
aas
ja
or
insl
pop
loop
push
jns
push
testb
ss
cmp
clc
cwtl
jl
ffreep
cmp
je
ljmp
mov
xchg
pop
loope
loope,pt
dec
xchg
mov
and
std
push
lods
test
ja
mov
mov
repnz
jae
mov
and
mov
iret
xchg
xchg
inc
dec
mov
xor
xor
inc
add
xor
dec
jae
mov
sbb
js
sub
xchg
cmpsl
sbb
in
push
loopne
adc
sti
or
pushf
insb
and
movsl
out
rcr
push
int3
cmpsb
enter
pop
sbb
es
mov
pop
jne
xchg
cmp
inc
lcall
lock
or
mov
pushf
lock
ret
jecxz
jp
aaa
std
fnstcw
push
fisubrs
ret
sub
pusha
loope
das
dec
lds
iret
cmp
mov
push
push
push
inc
xchg
adc
mov
in
jp
mov
pop
in
jge
enter
mov
adc
call
in
movsl
repz
or
fcmovnbe
sbb
aas
push
jae
lcall
jnp
fstl
push
ror
and
inc
test
popf
xchg
dec
repnz
jge
ja
dec
add
pop
outsl
cmp
xchg
mov
mov
mov
push
sub
and
ficompl
and
push
and
or
inc
sbb
sbb
outsb
xor
enter
xor
and
int3
insl
xor
adc
push
fcomi
jns,pn
arpl
lahf
mov
xchg
fistps
mov
je
sub
mov
insl
sahf
pop
or
jo
daa
jmp
fidivl
hlt
xor
mov
adc
arpl
jmp
add
dec
push
xchg
aad
mov
or
xchg
push
enter
xchg
int3
pop
loop
insl
jno
in
syscall
push
imul
push
cmp
add
cld
je
xchg
loop
inc
in
aam
inc
push
mov
ret
pop
jge
pop
mov
fcmovnb
sbb
std
and
fnstcw
rorb
rcrb
push
push
cltd
mov
add
sbb
pushf
nop
fcompp
es
aas
pop
fistl
clc
enter
lds
addl
fadds
aam
xchg
add
insb
dec
jne
sbb
pop
gs
push
cs
js
dec
andl
div
xor
sbb
daa
cld
mov
daa
dec
pop
cwtl
mov
xor
lret
or
mov
inc
push
mov
mov
js
pop
divb
mov
fnstsw
or
pop
ret
bound
bound
dec
adc
test
std
mov
dec
or
jae
or
popf
fnstenv
lods
xchg
cltd
add
pusha
repnz
add
stos
pusha
call
cltd
ret
std
fimuls
xchg
sbb
clc
les
arpl
add
outsb
xchg
jmp
cmp
inc
sbb
mov
dec
pop
dec
aaa
push
data16
cmp
sub
pop
jle
insb
loope
dec
lahf
imul
ljmp
mov
lods
insl
in
fisubs
repz
aas
and
jge
lds
ret
fs
pusha
js
adc
rorb
ret
scas
mov
push
movsl
in
and
out
int3
ss
ja
cwtl
inc
data16
mov
in
add
cld
dec
hlt
adcb
les
xlat
adc
jmp
inc
jmp
aad
sbb
test
shr
cmp
pop
fadds
jecxz
repnz
pusha
lds
sarb
shr
test
cmpb
dec
pop
dec
ret
test
insl
sbb
les
push
xor
ja
shr
addl
xor
mov
fsubrl
das
ret
pop
pop
cwtl
in
pusha
clc
data16
mov
aaa
pop
ret
jl
or
xor
mov
mov
xchg
mov
lret
xchg
int3
rcrb
jg
and
push
dec
jbe
ret
loop
push
adc
push
fwait
pop
sahf
aam
pop
out
outsl
testb
lret
int
divl
adc
xor
xchg
sahf
leave
out
es
inc
mov
adc
cmp
mov
scas
shr
fwait
invd
int
sbb
adc
or
and
ficoms
ss
pop
faddl
dec
jo
and
mov
jmp
les
mov
jge
push
data16
xor
push
sarb
iret
lahf
jno
mov
stos
pop
jg
dec
sbb
xchg
mov
cmp
xchg
lods
outsb
mov
adc
addb
imul
outsl
sub
push
cmpsl
push
stc
setns
sbb
pusha
cmp
outsl
movsb
mov
loope
xor
xlat
xchg
mov
mov
in
xchg
loop
idiv
cwtl
cmp
mov
cmpsb
dec
sub
lods
pushf
imul
in
mov
sbb
ja
imul
xor
dec
pop
in
jo
stos
adc
addr16
dec
rcl
pop
lret
or
pop
mov
sbbl
sahf
sbb
pusha
mov
fwait
or
into
test
pop
repz
enter
pop
mov
pusha
enter
pop
push
and
xchg
add
icebp
push
cmpl
adc
sahf
in
dec
xorb
sbb
mov
into
inc
jmp
sbb
cmpsl
cwtl
lret
and
out
aad
pop
add
cld
out
cmpsb
jae
loopne
int
fwait
jmp
inc
sbb
in
add
jno
lods
lods
or
out
add
adc
stos
mov
ja
pop
sub
cmp
int
xchg
ds
jns
adc
mov
cld
jle
add
mov
or
xchg
scas
pop
mov
xchg
aas
jg
pop
popa
icebp
test
dec
xchg
push
mov
imul
outsb
and
fnstenv
pusha
mov
mov
and
sub
mov
mov
out
and
jb
pop
fmul
mov
xchg
pop
fisubrl
movsl
or
adc
inc
mov
xor
mov
push
pop
dec
sbb
loope
adc
or
shlb
out
mov
hlt
mov
fnsave
je
jb
nop
lahf
ljmp
push
mov
xchg
dec
cli
icebp
call
mov
daa
cwtl
out
lea
cld
mov
adcl
sbb
lock
fstps
xchg
call
fs
lods
add
rcrb
mov
faddl
out
lret
inc
in
cld
add
jp
inc
pop
adc
cmp
nop
mov
jno
sub
pop
movsb
jnp
in
test
stc
pop
cwtl
cli
sbb
sbb
das
jno
popa
fcmovne
add
sub
call
not
ret
fisubs
scas
jge
lret
cmp
lock
mov
negb
or
jbe
in
sub
xor
int3
xchg
ret
mov
adc
iret
dec
or
shlb
gs
add
jle
pop
lret
mov
bound
jno
jns
xchg
xchg
push
fs
call
gs
push
mov
mov
ret
scas
jmp
lcall
dec
and
adc
repz
shll
or
jmp
pop
rcrb
ret
mov
adc
jp
cli
fsts
ja
sbb
rcll
jb
in
sbb
and
sub
ret
mov
lods
arpl
aam
lods
test
jmp
mov
das
sbb
jmp
push
cmp
dec
sar
pop
insl
or
out
mov
inc
or
cmp
cld
pop
inc
je
pop
lods
cmpl
outsl
mov
xchg
and
sbb
cltd
lret
push
lds
fldl
lea
or
mov
xor
mov
fisttpll
shlb
pop
add
sub
sbb
cmpsb
in
mov
aaa
insb
outsb
mov
xor
sub
mov
cmpsl
cmpsb
scas
pop
fists
inc
fwait
and
daa
iret
sbb
dec
pop
aaa
fists
idiv
mov
test
mov
pop
rclb
push
add
xor
and
push
das
pop
mov
js
add
or
lock
push
insb
cltd
xchg
push
xchg
push
push
mov
test
repnz
jnp
nop
push
jmp
loop
pop
gs
loopne
fwait
pop
clc
or
fsubrs
pop
repnz
fnstcw
mov
adc
js
sbb
sub
and
cmpsl
imul
lock
mov
or
mov
add
test
sbb
gs
or
and
dec
int
push
imul
mov
pop
add
push
int3
xchg
pop
aam
xor
jo
clc
cmpsb
or
mov
push
sti
mov
xor
addr16
fimull
aam
dec
mov
imul
dec
scas
cmc
push
mov
lods
xchg
sti
jmp
or
inc
or
ljmp
ss
xchg
mov
push
clc
or
leave
cmpsl
out
lock
xor
mov
enter
sbb
out
call
jge
jno
pop
movsb
xchg
inc
xor
les
orl
cld
int
cmp
mov
aas
mov
ja
xlat
lret
ret
test
jecxz
cmp
mov
inc
test
mov
insl
pop
mov
movsb
ds
leave
les
mov
jae
nop
mov
inc
jb
mov
scas
xor
adc
and
std
cmpsl
sub
or
insl
in
pop
or
mov
cmp
mov
dec
xchg
cs
dec
into
cmpl
inc
add
sbb
icebp
adc
pop
sub
setbe
dec
sub
insb
adc
sbb
mov
push
pusha
in
arpl
add
push
les
pop
push
sbb
cmp
adc
or
xor
push
mov
xor
loop
jns
test
or
sbb
lods
fildl
sub
stos
scas
or
mov
loope
rolb
sbb
dec
cli
lea
faddp
div
aas
hlt
fwait
push
jae
xor
mov
fdivl
sub
imul
into
je
or
cli
sbb
mov
push
test
adc
lea
out
fidivrs
pop
ret
data16
das
call
scas
cmpsl
movsb
adc
out
sbb
push
or
inc
cld
mov
iret
cmpxchg
lcall
push
lock
cltd
repz
test
inc
std
repnz
in
pop
test
push
push
inc
adc
sub
sub
imul
das
mov
inc
pop
xor
mov
xor
cltd
enter
dec
or
xor
pop
je
pop
xchg
sbb
aaa
push
mov
cmovl
and
movl
addr16
cld
lds
jae
add
ds
push
push
push
sbb
std
xchg
sysret
fistps
push
call
pop
imul
jge
push
sub
scas
or
stos
mov
pop
sbb
movsb
cwtl
inc
xchg
jmp
cmp
lods
push
inc
or
sbb
pop
xchg
out
jp
dec
jp
cs
lock
lock
or
pop
push
jbe
or
dec
shll
dec
push
cmp
mov
dec
mov
icebp
insl
fisttps
fst
jbe
fbld
jp
sub
dec
lret
add
xchg
rorb
dec
rcrb
clc
dec
mov
lods
sti
insl
mov
js
adc
aaa
idivl
inc
mov
cmp
xchg
lea
daa
xchg
mov
sbb
cltd
idiv
mov
fildll
mov
pop
sahf
mov
adc
cli
pop
fstl
inc
cmp
adc
sarb
aad
fisttps
jl
jmp
mov
mov
jnp
inc
inc
jl
repnz
and
push
sub
out
ljmp
add
outsl
xor
mov
fs
add
push
test
subb
in
outsb
inc
les
jb
sub
enter
test
lcall
imul
push
mov
mov
pop
mov
loopne
rcrb
pop
in
test
jl
fstps
xlat
test
mov
aad
jmp
std
jb
shrl
push
and
ja
add
idiv
inc
ss
fcoml
or
lock
mov
push
out
in
ja
lock
movsb
inc
cmpsl
and
or
fistl
cltd
mov
add
and
dec
lods
sbb
jne
xor
cmp
adc
leave
push
xlat
dec
decl
mov
addb
mov
loopne
test
cli
and
popf
insl
jb
or
sbb
rorl
in
jg
lods
aam
ret
push
in
scas
mull
iret
mov
jae
xor
jno
aam
jno
or
ret
into
test
jecxz
sti
frstpm(287
adc
and
add
mov
adc
fdivs
ds
or
jg
ret
mov
push
jmp
fldt
sbb
mov
cmp
imul
xchg
loope
mov
fldt
je
scas
add
lock
or
idiv
outsl
rcll
and
ds
lret
clc
lds
lahf
xor
pop
call
mov
sbb
jmp
shlb
adc
testb
out
adc
jle
out
xchg
iret
hlt
mov
lods
stc
push
scas
mov
add
aas
xchg
lock
xchg
add
jb
adc
pop
dec
mov
xlat
divb
mov
out
mov
cmp
or
fcomps
adc
cmp
das
adc
sub
enter
mov
mov
push
or
pop
cmpsl
cmp
subl
pop
hlt
cld
cmp
push
int3
scas
popf
jmp
mov
arpl
jns
mov
insb
xchg
mov
mov
mov
push
add
mov
popa
shlb
call
cmp
mov
movsb
js
out
iret
icebp
push
sbbb
push
testb
ja
mov
sub
pop
dec
es
in
cld
enter
movsb
ljmp
jbe
out
sar
adc
jo
fwait
adc
mov
loope
or
stos
push
gs
sbb
repnz
fistps
inc
sub
out
xor
es
xchg
sbb
cmp
jb
or
adc
mulb
mov
mov
outsb
ja
ljmp
mov
jmp
ja
jo
add
mov
cmc
popa
test
lret
jns
sub
mov
das
xchg
jnp
cmp
push
pop
dec
test
cmp
insl
clc
push
sbbl
xor
adc
mov
in
bound
add
pop
addr16
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
ljmp
stos
xor
sarb
out
ds
ds
icebp
mov
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
sbb
dec
lods
das
ja
bound
loopne
cltd
lret
dec
test
pop
and
nop
int
lods
dec
lock
cwtl
int
xchg
mov
stc
pop
mov
outsl
cld
test
xchg
loop
ds
xlat
push
ss
push
pushf
jge
push
push
arpl
call
mov
pop
xchg
cwtl
mov
in
in
enter
scas
movsl
fsubs
xor
cmp
sti
jmp
push
pushf
jge
push
push
xorl
fcmovnb
jge
cmp
cwtl
mov
lcall
rcrb
add
mov
xlat
push
ss
xchg
loop
ds
shll
das
ret
jo
nop
loop
out
test
ret
cmp
xchg
add
sti
mov
xchg
pop
nop
ds
shll
xchg
ret
cmp
and
ds
les
mov
xchg
loop
cmp
shll
das
ret
cmp
xchg
out
aas
out
shll
das
xchg
xor
out
and
ret
mov
ds
mov
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
xor
sarb
adc
icebp
mov
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
pop
cmpsb
inc
fistl
lret
mov
ret
cmp
xchg
loop
cmp
shll
loopne
xchg
jae
xchg
loop
ds
loope
icebp
inc
add
xchg
ds
mov
enter
loop
ds
lds
mov
xchg
loop
ds
roll
iret
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
ds
shll
das
ret
cmp
xchg
loop
push
inc
lret
mov
mov
ds
outsl
and
or
push
add
inc
cmp
adc
arpl
lea
enter
sub
mov
adc
sub
repnz
dec
sbb
xor
xlat
pop
ss
test
xor
imul
imul
cmp
movsb
fwait
inc
pinsrw
pop
mov
push
ss
pop
push
ljmp
pop
into
or
std
xchg
out
ss
jno
and
andl
arpl
mov
mov
mov
mov
add
and
rolb
add
adc
outsb
jmp
mov
dec
sbbb
jnp
sbb
push
and
cmpl
lods
dec
fdivrs
push
orb
loopne
mov
dec
daa
lret
mov
sbb
pushf
shll
gs
ja
xor
mov
dec
jo
popl
jne
shlb
mov
pop
cmp
test
bound
cmp
fld
sbb
sub
dec
mov
mov
sbb
stc
dec
mov
int
lahf
cmp
cs
hlt
stos
xor
add
out
xor
icebp
pop
or
pop
clc
rol
mov
ret
push
jae,pt
in
cmpsb
xchg
int3
in
adc
lea
lcall
mov
or
or
loopne
out
mov
cmp
add
inc
mov
ljmp
pusha
mov
push
ret
imul
jno
out
divb
or
mov
leave
cltd
inc
ja
cmpsl
arpl
adc
push
inc
and
mov
push
mov
cmp
and
rclb
das
mov
mov
cs
sub
cmp
xchg
loope
cmpsb
xchg
mov
lods
int
adc
mov
orb
jecxz
xor
cmpsb
mov
test
leave
mov
test
stc
dec
out
leave
scas
fildll
in
sahf
insb
cmp
movsb
movsb
stc
cmc
add
cmp
add
call
sbb
jl
inc
fcomps
cmp
aas
in
test
out
dec
inc
fdivrl
fnstcw
xchg
pop
xchg
fcomps
clc
push
cmp
orb
adc
mov
push
inc
ficoml
adc
push
cmpsb
repnz
hlt
fcomi
push
js
ds
dec
cmp
cmp
jmp
sub
adc
icebp
mov
push
jbe
xchg
inc
dec
cmpsl
jo
xlat
nop
popf
fdivr
adc
in
pusha
mov
mov
in
jle
enter
adc
lret
dec
mov
idivl
mov
sar
sub
movsl
dec
testl
mov
pop
xlat
or
jg
int
jae
jg
jl
sbb
mov
iret
push
outsb
gs
cwtl
xchg
xchg
or
or
mov
in
xchg
pop
cmpb
jp
sahf
xor
insb
mov
jnp
xchg
mov
pop
enter
aam
cmc
loop
xor
lock
dec
xor
je
jae
shlb
dec
in
pop
mov
cmp
inc
adc
xchg
add
lahf
dec
cmp
pop
inc
add
adcb
out
and
out
add
xchg
mov
in
pop
pop
xor
jne
sub
adc
vxorps
xchg
sti
xor
sub
or
push
rcll
xor
xor
and
call
mov
sbb
cltd
jbe
mov
vxorps
lea
mov
push
aad
mov
dec
xor
cmp
jne
repnz
orl
pop
sti
pmaddwd
mov
scas
sub
fstpt
jmp
sub
xchg
dec
enter
sti
mov
and
out
dec
add
jmp
jno
test
pop
inc
insb
daa
lods
jo
bound
jl
mov
nop
ds
pop
sbbl
dec
mov
jecxz
in
cmpsb
pop
mov
cmp
cltd
addl
add
jp
nop
daa
lods
push
add
inc
in
mov
outsb
push
dec
mov
pop
mov
mov
jnp
aaa
or
push
out
es
push
mov
cmc
lcall
ror
out
mov
jae
clc
rcrl
push
imul
mov
test
faddl
mov
sti
mov
jl
pop
mov
fildl
incb
xchg
xor
xor
sbb
xor
aas
sbbb
repz
out
pop
mov
adc
and
fidivs
mov
imul
or
push
out
cli
sub
xchg
pop
mov
pushf
xchg
fnstcw
adc
xchg
push
sub
or
pop
into
xlat
sub
inc
std
addb
or
push
inc
pop
jae
and
stos
add
ss
cmpsb
aam
or
and
fildll
pop
pop
out
out
stc
inc
mov
into
push
bound
filds
adc
mov
jl
icebp
jae
bound
mov
inc
ljmp
ja
ret
sbb
lcall
cmpsl
lods
fdivrp
mov
daa
test
jp
fwait
cmp
lahf
scas
jne
out
add
mov
jo
push
out
stos
fwait
sbb
push
or
or
enter
adc
fildll
rcll
jecxz
and
push
push
pop
or
adc
repnz
mov
jp
mov
orl
sarb
sbb
xor
fs
pop
push
xchg
rorb
data16
pop
sub
subb
push
movb
sbb
or
lret
inc
dec
popa
sub
nop
xchg
xor
hlt
cmpsb
mov
nop
adc
stos
pop
loopne
cmp
xchg
je
insb
divl
or
fsubrl
jl
mov
push
cmpsb
out
jne
xchg
xchg
push
enter
and
pop
sbb
cmp
adc
push
cmpsl
sbb
stos
lahf
fnstsw
mov
out
rolb
adc
sbb
mull
and
add
adc
insl
cli
jl
adc
add
ljmp
cmc
test
sub
sub
mov
loope
xchg
imul
in
sub
cmpsb
sbb
cmp
jge
stos
mov
pop
cmp
stos
push
add
dec
dec
cli
cmp
pop
pop
jo
je
test
sub
add
dec
call
hlt
add
pop
in
pop
mov
xchg
iret
daa
rorl
ds
in
popf
cwtl
and
cli
push
jns
mov
mov
push
lods
jmp
and
dec
lret
loopne
inc
inc
out
or
mov
pushf
ja
loop
and
sbb
cmp
jno
and
call
mov
jae
xor
pop
jb
in
hlt
pushf
push
xor
icebp
ja
mov
push
aad
fucomi
jb
add
paddw
lea
dec
lret
adc
in
add
adc
out
and
mov
adc
xor
leave
inc
pop
pusha
mov
cmpsb
jns
pop
push
mov
aaa
xor
lcall
sbb
jmp
adc
mov
mov
jle
fstpl
lods
add
rcrb
outsl
loope
push
in
pusha
push
xchg
xor
mov
push
pop
jns
jecxz
pop
xor
scas
ret
jp
shl
xor
in
inc
dec
mov
mov
dec
scas
xchg
clc
jmp
inc
pop
insl
cmp
fadds
pop
mov
jb
inc
mov
and
mov
aaa
mulb
jp
inc
or
sti
jae
xchg
sbb
ljmp
cmpl
mov
inc
and
add
ret
cmpsl
insb
movsl
repnz
sub
insb
pop
cld
jg
lea
aas
dec
push
mov
add
addr16
cmp
ja
fidivl
cmp
mov
dec
xor
stos
push
inc
lret
js
pusha
test
mov
mov
call
xor
sub
loopne
jmp
dec
mov
add
adc
call
mov
int3
mov
add
std
xchg
adc
xor
pushf
inc
jmp
xchg
mov
fisttps
and
hlt
std
hlt
rolb
and
out
or
fidivl
mov
sbb
daa
pop
mov
sahf
lcall
scas
cli
es
stos
xchg
xchg
sbbb
and
add
and
stos
or
xor
sbb
fidivs
mov
push
inc
mov
adc
mov
out
mov
sbbl
jns
scas
cmc
aaa
mov
int
push
push
adc
mov
and
mov
in
out
pop
pop
inc
es
dec
mov
pop
jnp
je
jg
insb
andb
dec
stos
aas
xchg
addl
stos
mov
jmp
pop
cld
or
mov
das
les
test
cmp
inc
insb
inc
lock
and
rcrb
mov
mov
cmpsb
test
sbb
je
daa
leave
andb
dec
adc
lods
lret
idivb
insb
rclb
and
hlt
lea
stos
pop
dec
pop
pop
insb
in
sti
push
adcb
bnd
push
sbb
cmpsl
mov
or
lret
xchg
pusha
mov
fs
call
incl
subb
cli
xor
mov
fcmove
mov
push
fisubs
cmc
movsb
dec
and
std
dec
leave
mov
adc
dec
sbb
sbb
mov
dec
fnsave
icebp
sub
mov
xchg
push
xor
movsl
test
outsb
sarb
adc
loop
cmp
insb
push
stc
xchg
flds
add
push
push
jae
xchg
mov
or
stos
mov
cmc
mov
ret
jecxz
icebp
jae
iret
stc
mov
cmpsb
jo
fstps
les
mov
cld
jmp
xor
push
push
inc
xorl
cmpsl
jmp
dec
pop
sbb
xor
push
mov
mov
stos
jmp
mov
ret
mov
dec
insl
test
sub
or
insb
insb
mov
and
fstl
or
push
or
jno
push
and
sbb
andl
rcrb
push
cli
imul
popf
mov
jg
pop
xor
xor
movsb
cld
pop
fwait
jecxz
jnp
sti
fiadds
adc
or
lds
stos
dec
pop
cwtl
sbb
ret
iret
mov
add
orb
imul
insl
std
or
xchg
insl
mov
les
notl
mov
jo
mov
mov
aad
ss
sbb
mov
mov
jno
jl
nop
pop
aas
jbe
popf
xor
or
hlt
dec
bound
les
stos
in
cltd
ret
repnz
sti
jno
inc
iret
jg
sbb
stos
sbb
push
outsb
mov
dec
inc
mov
add
or
dec
scas
stos
dec
jo
or
daa
push
push
daa
int
adc
pop
jo
call
dec
cmp
and
jnp
jmp
xchg
lods
push
das
push
cmc
cmp
mov
cmp
out
mov
sbb
sub
add
sbb
mov
insb
imulb
in
push
int3
cwtl
jg
iret
enter
mov
mov
ret
insl
cltd
out
fadds
sub
iret
sub
lea
out
aaa
push
jl
fucomp
std
jne
lods
movsl
std
in
rol
std
fmuls
rolb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
