test
lret
pop
scas
dec
pop
notb
stos
stos
bound
sbb
pop
das
jle
test
dec
mov
jg
cmp
mov
mov
mov
mov
push
mov
pop
mov
nop
jp
outsb
xchg
roll
pop
pusha
xchg
jne
jne
cmc
sti
pop
xchg
lret
xchg
cwtl
out
out
inc
jo
cltd
jns
dec
test
lcall
push
dec
bound
mov
inc
xchg
ljmp
xor
inc
out
iret
add
mov
outsb
lret
addl
jne
xlat
mov
notb
clc
push
jno
iret
scas
mov
pop
mov
int3
and
mov
add
in
popa
add
mov
pop
pop
push
aas
and
testb
sub
aad
adc
rclb
js
push
or
xor
mov
mov
je
loopne
gs
lods
pusha
data16
xchg
jl
in
xor
iret
fnstenv
mov
lret
orb
xchg
pushf
mov
mov
mov
or
repz
sbb
sub
insb
outsb
mov
stos
mov
shr
shll
sahf
mov
xlat
out
andb
sub
dec
lcall
xchg
add
orb
jno
fiaddl
or
xor
inc
and
cwtl
fadds
lock
dec
test
push
cmp
xchg
cmp
les
int
adc
notb
js
sti
jb
arpl
push
jp
pop
and
repnz
add
outsl
fldenv
adc
xor
mov
imul
dec
cwtl
xor
lods
dec
jno
pop
es
cmpsl
cmp
pop
cmp
jne
jnp
mov
in
xor
scas
rorb
pop
incb
ss
testl
nop
inc
loop
fwait
ljmp
adcb
push
mov
aad
sub
mov
adc
lcall
orb
dec
pop
cmp
mov
stos
push
or
addr16
test
ljmp
inc
and
and
scas
ss
arpl
stc
cmp
lret
ss
xor
pushf
je
xor
roll
push
scas
push
cltd
out
mov
popf
punpckldq
jae
repz
pusha
fs
dec
aam
nop
daa
xchg
inc
icebp
push
sbb
jno
in
shll
ret
jle
imul
test
es
int
jnp
jecxz
push
fs
loopne
push
sbb
arpl
rcrl
pop
xchg
in
mov
std
addb
inc
ftst
in
rolb
cmp
dec
js
mov
orb
pop
xchg
and
cmpsl
iret
ret
lcall
jp
or
in
int
scas
lret
loop
lahf
add
mov
out
mov
push
jle
lea
daa
push
test
inc
ljmp
sbb
mov
xor
sbb
push
sarb
or
adc
adcb
sbb
mov
rol
outsl
fildl
jp
in
imul
or
mov
pop
stos
out
cmp
pushf
ljmp
ret
addr16
sbb
xchg
outsb
pop
inc
cmp
inc
imul
and
pop
lret
nop
pop
xor
xchg
push
pop
fdivr
mov
mov
test
scas
jp
xchg
lahf
or
inc
fists
adc
adc
adc
dec
cwtd
jl
and
mov
sbb
pop
inc
sbb
out
hlt
sbb
adc
jecxz
mov
imul
jmp
sub
cmpsl
sbbl
xchg
inc
mov
pushf
cmp
mov
or
sti
fsqrt
mov
aam
adc
adc
inc
dec
and
mov
sbb
mov
push
dec
jge
ljmp
xor
enter
incb
adc
hlt
jne
icebp
mov
push
inc
jmp
push
std
dec
mov
dec
les
popa
jb
sbbb
inc
mov
scas
fists
jne
pusha
cli
dec
pop
sub
les
imul
mov
inc
add
mov
cmp
hlt
out
mov
mov
fidivs
dec
incb
xchg
xchg
cwtl
inc
lea
sti
mov
adc
mov
fs
ret
cmp
sub
loop
hlt
sbb
dec
xchg
dec
pop
lods
popl
xchg
ficoml
outsb
sbb
test
push
cmp
sbb
and
in
inc
xchg
jnp
clc
nop
loopne
push
ds
xchg
and
movsl
sti
jg
or
pop
pop
test
arpl
loope
xor
cmp
lahf
mov
loope
lods
dec
imul
hlt
cwtl
out
cli
jp
test
insl
pop
orb
addr16
xchg
dec
loopne
jne
enter
or
pop
mov
cltd
push
mov
mov
sub
fimuls
sub
outsb
mov
lock
inc
test
mov
sbb
jle
std
and
aaa
in
shrl
shll
shlb
loopne
push
pop
xchg
jb
mov
pop
lea
sbb
push
push
ljmp
or
and
dec
cmp
xchg
and
stc
mov
or
pop
repnz
and
xlat
xor
push
sub
test
cltd
dec
pop
sbb
out
push
jge
pop
sarb
push
push
xchg
xor
cmp
imul
mov
clc
jns
lcall
dec
rcrl
inc
fisubl
ds
aad
lcall
fidivrl
dec
inc
mov
cwtl
jecxz
add
inc
repz
xchg
mov
lock
test
push
inc
dec
xchg
xlat
push
test
or
and
adcl
dec
jge
push
cmp
dec
daa
cmp
pushw
imul
jnp
ds
andl
xchg
lods
stc
sbb
cmp
jl
js
xchg
push
mov
sub
hlt
and
sub
jle
cmp
or
in
adc
insl
pop
fwait
lods
cmp
cmp
rcr
mov
sbb
xor
jmp
stc
xor
and
into
pop
jnp
mov
scas
mov
icebp
test
neg
and
sub
ret
cld
sbb
lret
push
lret
pop
jle
mov
rcrl
sub
out
and
dec
add
inc
in
jle
push
xor
scas
or
xchg
ret
jb
jl
mov
shlb
pushf
add
mov
xlat
sti
sbb
push
xchg
popa
mov
jnp
popa
adc
aad
jne
xor
xchg
lcall
adc
cmp
xor
xor
test
scas
loop
ds
stos
xlat
outsb
lock
fistl
imul
jb
and
push
pop
dec
insl
sahf
xor
call
xor
cmp
add
filds
inc
mov
sbb
or
lods
dec
fnstcw
out
xchg
mov
shr
lret
ss
int
mov
xlat
xlat
pop
dec
pop
xchg
loop
ds
jne
sub
cmp
les
jb
loopne
adc
fisttpl
movsb
ret
sbb
mov
out
jp
addr16
push
xchg
sub
pop
repnz
cld
enter
jnp
scas
xlat
lret
shrl
pop
lret
sbb
loope
or
pop
cwtl
jge
dec
adc
imul
enter
data16
js
aad
push
pop
imul
fidivrl
testl
out
scas
mov
call
scas
lock
and
fistpll
test
repnz
mov
ds
inc
jp
or
xor
inc
xchg
fldl
mov
loopne
int
pop
jbe
mov
mov
jge
movsb
call
ljmp
in
fnstenv
scas
mov
je
sarl
fstpl
inc
add
jns
rcl
mov
inc
cs
out
cwtl
sub
and
loopne
ds
out
inc
jle
cmp
push
idivl
repz
sbb
shl
sti
inc
cmpl
jle
out
add
dec
jecxz
mov
jp
sbb
mov
lods
pop
std
mov
icebp
fisubl
pop
push
sub
stos
and
ja
dec
movl
mov
xchg
lods
mov
xchg
and
cmp
inc
fwait
xchg
xchg
xorl
sub
add
mov
in
outsb
shrb
push
jmp
and
fldt
sti
jbe
fs
mov
ss
jge
cmpsl
mov
scas
jg
inc
jmp
mov
mov
and
insb
cli
and
xor
cmp
stos
inc
sbb
dec
mov
hlt
aad
add
lods
add
movsb
aad
fnstenv
daa
lret
and
mov
mov
cmp
les
in
frstor
dec
xchg
mov
pop
lea
lds
xor
das
xor
pop
fists
xor
mov
inc
insl
loopne
fmuls
dec
jg
push
and
pop
add
sub
scas
jg
fisubl
pushf
sbb
cmp
cmp
push
clc
icebp
imul
xchg
add
scas
out
out
mov
inc
pop
or
xchg
cmp
inc
mov
arpl
mov
xchg
or
jb
ror
xor
adc
fs
aam
push
or
testb
cmp
stos
and
das
subl
bound
jno
dec
fadds
and
in
sub
cltd
ror
cmc
fucomi
subl
les
cmpsb
imul
enter
mov
xor
pusha
inc
hlt
ds
dec
sarb
xor
dec
sbb
sti
repz
js
sahf
stc
mov
ss
inc
mov
jmp
jg
cwtl
xlat
jne
mov
repz
pop
and
sub
cmpsb
test
lret
mov
jne
xchg
xchg
cmpb
repz
jmp
cmp
jb
inc
mov
adc
pop
enter
adcl
jmp
lds
push
push
or
inc
shll
and
push
mov
dec
fwait
sbb
fwait
and
sbb
push
jo
clc
adcl
ss
stos
pop
inc
mov
sub
jmp
cmp
xlat
mov
or
xchg
leave
jg
sub
mov
rcrb
mov
pop
scas
in
pop
ret
dec
stc
andl
rcrb
sbb
mov
orl
dec
mov
or
sub
out
lcall
repnz
hlt
pop
and
mov
test
jo
fcoml
icebp
xor
xor
sbb
ss
popf
push
inc
pop
mov
mov
popa
inc
push
and
sbb
fnsave
movsb
fimuls
pop
cmp
out
rcl
scas
movsb
mov
push
shlb
mov
test
mov
aas
ret
and
cs
xchg
fdivrl
add
ss
mov
in
xor
mov
mov
xchg
pop
leave
jb
icebp
add
push
mov
fwait
cmp
or
xchg
lret
in
leave
push
mov
mov
test
add
mov
mov
xor
push
lods
mov
scas
cmp
movsb
xchg
push
xor
out
sbb
pop
sti
std
adc
fisubrl
and
out
pop
dec
sbb
mov
stos
lahf
xor
pop
or
fdivs
mov
adc
dec
shll
fdivl
adc
push
sub
jb
jae
iret
xlat
inc
pushf
dec
in
iret
cs
mov
xchg
stos
faddl
or
jnp
fwait
inc
fdivs
mov
fcoml
jns
lcall
fld
test
test
pop
or
adc
repz
loop
jbe
movd
popf
arpl
push
lock
mov
fstpt
cld
inc
sbb
inc
fbld
iret
mov
inc
insb
dec
mov
inc
les
pop
sbb
dec
nop
cmp
call
xor
cmc
mov
stos
in
shr
jecxz
sub
lahf
aaa
bound
lret
sbb
xchg
xchg
jmp
xchg
aad
xchg
jbe
jp
add
das
cmpsb
repz
fidivrs
push
aaa
xor
pop
or
test
inc
sbb
cmpsb
mov
jle
cli
jae,pt
mov
sub
add
shlb
stos
pop
sbb
xor
sbb
movsb
imulb
sbb
add
je
popf
or
jne
sub
hlt
lret
cltd
in
pop
popf
add
lcall
mov
int
inc
cmpsl
mov
sahf
and
push
xchg
idivb
pop
shl
dec
std
adc
cld
and
xchg
inc
pop
out
push
xchg
subb
mov
bound
xchg
leave
ret
push
imull
nop
ljmp
imul
mov
idivl
dec
sub
push
or
adc
stos
push
pop
sbb
mov
ret
lock
mov
sub
movsb
ss
outsl
or
fisttps
ret
sbb
fs
inc
icebp
push
rol
mov
fidivl
adc
cwtl
xor
xchg
sub
pusha
dec
mov
out
and
jns
adc
xchg
scas
mov
cs
push
dec
lds
out
adc
mov
mov
fsubrs
and
fmull
lock
cmp
call
xchg
mov
lahf
repz
in
lret
dec
or
add
std
adc
mov
inc
mov
hlt
inc
mov
movsl
loope
and
ds
cmp
and
loopne
pop
xor
scas
xchg
loopne
roll
xorb
xor
ds
cltd
jp
or
scas
enter
pop
mov
fidivrl
fidivl
std
repz
add
call
ljmp
xchg
ficompl
lret
inc
sub
or
in
inc
in
jbe
lea
stos
je
xor
or
push
lret
test
in
je
xchg
call
inc
mov
imul
dec
adc
sub
cmpsb
aas
cwtl
pop
int3
and
enter
push
cld
gs
jne
mov
outsb
repnz
cmpsb
xor
add
ja
addb
pop
mov
in
es
adc
in
cmc
add
sub
sbb
pop
xchg
pushf
dec
jg
xor
ja
xlat
sub
loope
and
xor
pop
sbb
mov
ja
shr
or
loopne
pop
sub
fists
pop
hlt
int
cwtl
jnp
xchg
push
and
and
add
and
ret
scas
adc
test
es
xor
jp
push
xor
jb
and
dec
cmc
add
cmp
push
inc
imull
mov
addr16
pop
add
fbld
fistpll
out
out
fcompl
xchg
shlb
in
xor
scas
xorb
mov
mov
xor
jmp
sub
ja
xchg
xchg
outsl
sub
push
add
cltd
and
sub
pop
push
mov
xlat
pushf
adc
cmp
xchg
lret
and
das
rclb
mov
mov
dec
inc
stc
jg
adc
push
loope
add
lds
push
aam
xchg
pop
sub
sti
stc
pop
jg
and
imul
dec
mov
push
cmovne
xor
std
pop
sbb
ret
pop
add
mov
jnp
mov
push
xor
and
mov
imul
pop
cmp
mov
outsb
cli
push
push
enter
adc
sub
ljmp
xor
call
adc
pop
mov
adc
mov
popf
fldl2e
in
push
test
hlt
xchg
and
mov
mov
or
inc
mov
mov
fcmovnbe
int
mov
insl
add
dec
popf
adc
test
sub
test
push
and
inc
out
outsb
int
push
jl
mov
mov
add
adc
pushf
jl
lret
jge
gs
loop
pop
push
push
call
pop
jo
mov
and
std
in
lret
stc
movsl
and
clc
pop
and
mov
insb
mov
jmp
lret
mov
and
inc
sub
lret
sbb
jne
imul
sbb
sbbl
shlb
repnz
sub
in
mov
stc
xchg
pop
pop
xchg
out
pop
rol
stc
ror
dec
js
inc
test
pusha
scas
out
scas
int3
sarb
jl
data16
fmul
leave
aad
ret
fbstp
bound
lcall
out
mov
mov
and
fsub
aaa
push
sbb
stos
xchg
add
xor
xor
mov
scas
xchg
outsb
dec
loopne
repz
and
lods
adc
xor
outsb
dec
and
jnp
sub
decl
push
gs
jl
test
pop
scas
nop
std
xchg
add
xor
or
mov
sarl
insb
loop
xchg
movsb
fdivs
das
cmpsl
lds
test
int3
subb
sub
inc
stc
mov
cmp
cltd
or
scas
sbb
jns
cmpsb
inc
pop
or
stos
or
sbb
in
ja
cmp
jl
scas
mov
test
xor
iret
shrb
pop
out
mov
mov
xchg
lock
add
jae
sbb
in
cmp
or
jb
in
andb
and
push
push
adc
fbstp
sub
mov
add
sbb
in
xchg
out
jnp
push
xlat
ja
mov
sub
sbb
pop
fwait
clc
sti
decb
sub
mov
loopne
popa
xchg
mov
or
stc
sub
fmul
sbb
int3
scas
je
xchg
add
mov
push
dec
push
and
pop
and
faddl
rolb
repnz
push
ljmp
fldt
mov
pop
mov
lods
notb
push
fsubrs
js
dec
push
test
data16
and
dec
mov
push
push
rorb
push
ljmp
es
fiadds
jle
jb
mov
popf
pop
push
ret
xchg
cld
out
adcl
es
jns
pushl
xacquire
mov
xor
imul
shll
repz
and
clc
in
repz
push
pop
ss
bound
and
ds
and
sbb
sbb
lea
cmp
mov
or
pop
dec
ret
hlt
dec
xor
pop
and
and
movsb
jo
fisttps
and
pop
dec
arpl
xchg
das
dec
xchg
mov
mov
aas
imul
gs
jb
ror
les
adc
push
jne
arpl
lods
adc
mov
ja
push
aad
out
cmp
or
push
movsb
push
push
mov
xor
xor
adc
stc
adc
mov
and
out
add
mov
sub
xchg
xor
roll
es
pushf
lcall
cs
lock
inc
insl
jp
xorl
or
and
push
ret
pop
dec
inc
mov
ficomps
cmc
cltd
repnz
fdivr
in
ficoms
dec
mov
adc
push
mov
fwait
sub
adc
xchg
dec
gs
push
lret
pop
jo
repz
lods
mov
jecxz
out
dec
push
inc
jo
das
sub
leave
roll
mov
add
jne
shll
mov
data16
inc
sbb
pop
stc
or
jg
andb
scas
jecxz
xchg
jbe
sbb
pop
mov
lcall
cmp
mov
negl
xor
enter
ljmp
add
jne
pusha
mov
popf
dec
inc
mov
adc
cmc
xchg
shr
outsl
data16
call
adc
jne
call
sbb
mov
dec
xorb
notb
mov
jno
xor
iret
gs
cmp
mov
mov
repnz
les
mov
in
push
lock
loope
sub
lret
adc
push
pop
lods
aas
loopne
subl
push
inc
std
inc
inc
sbbl
ds
addr16
cmp
cmp
testl
aaa
lods
pop
add
mov
fnstcw
and
stos
mov
mov
xor
push
lock
mov
fsubrl
sti
jo
lds
shlb
cltd
lcall
js
std
sub
in
adc
jnp
sbb
add
stos
push
inc
xor
fucomp
jae
sub
push
add
cs
dec
ror
outsl
sarb
paddusb
push
in
pop
cld
movsb
lahf
loop,pn
aaa
jns
adc
mov
add
mov
and
sarl
leave
sahf
push
jle
cmp
pusha
pop
xorb
inc
xchg
push
in
sub
scas
fisttps
stos
adc
test
pop
and
jns
push
jb
dec
mov
nop
in
jl
pop
sub
ljmp
mov
push
test
jge
cmpl
test
adc
adc
inc
inc
push
add
and
inc
push
inc
add
sahf
inc
sbb
dec
ret
int3
push
sbbb
adc
insb
mov
icebp
lods
or
shl
call
mov
mov
cmpl
shrb
ret
fs
int
inc
push
popa
dec
add
lock
mov
adc
adc
mov
dec
push
jns
mov
mov
jae
mov
inc
jl
subb
arpl
and
xchg
cmc
adc
ficoms
insl
mov
jmp
mov
push
outsl
lret
mov
cli
push
mov
pop
pop
insl
call
aam
sahf
xchg
int3
mov
jbe
outsb
dec
arpl
xor
adc
fsubrl
rolb
inc
sahf
icebp
sub
fidivrl
add
cmpsb
sti
inc
sbb
jo
sub
in
mov
stc
stos
mov
jnp
xor
cli
jle
mov
enter
fisubrl
push
out
into
push
pushf
inc
mov
pop
dec
sbb
push
out
or
push
pop
sbb
mov
andl
push
fldt
fisubrs
and
repz
inc
sub
outsb
xor
cld
iret
adc
std
addr16
cmp
jne
jns
call
jb
xchg
cld
pcmpeqb
dec
and
or
leave
push
mov
pop
pop
cli
sub
adc
ja
xchg
outsb
inc
es
clc
cmp
inc
fs
xchg
flds
xor
xor
mov
sbb
leave
add
xlat
shrl
sub
jecxz
sbb
dec
mov
aas
mov
inc
aas
push
dec
push
fsubrl
cmpsb
jmp
stos
jnp
push
mov
testb
inc
dec
push
out
fcmove
mov
cmp
je
mov
enter
add
mov
dec
mov
sub
std
mov
jg
or
je
add
into
aad
imul
call
aam
pop
icebp
loopne
rolb
cmp
orb
addr16
inc
dec
adc
push
mov
outsb
mov
scas
xor
ss
mov
std
push
fcompl
pop
add
mov
push
push
call
cmc
imul
inc
xchg
ret
add
stc
xor
jge
call
dec
outsb
movsl
movsl
roll
in
dec
movsb
mov
and
or
jp
movsb
and
inc
push
pop
shr
xor
cmp
popf
add
cld
shl
rcrl
sbb
push
ljmp
adc
sbb
mov
push
cmp
mov
add
xchg
pop
loopne
lcall
mov
out
sar
add
cld
add
cmp
and
jecxz
push
js
jb
xchg
xchg
sub
jle
push
addl
jecxz
pop
rcl
and
or
mov
test
xchg
push
mov
out
push
outsl
lea
daa
imulb
shrb
xchg
shl
and
stc
jecxz
orl
rorl
jae
jmp
data16
cltd
jp
mov
idivb
vshufps
xor
cli
addl
or
shrb
add
jmp
and
inc
dec
mov
das
xchg
ficoml
mov
fisttpll
aad
and
pop
sbb
sbb
cld
adc
pop
mov
cmpsl
and
movsl
rorb
rorb
pop
mov
xchg
aas
inc
repnz
mov
mov
mov
sub
adc
stos
fdivs
xor
xor
clc
dec
and
rcrb
xor
pop
xchg
sti
xlat
xchg
pop
fisubrl
mov
adc
jecxz
push
call
or
jge
xor
or
jge
mov
andb
sub
lret
call
xlat
scas
push
jmp
loopne
mov
loop
rolb
push
xor
sbbl
xchg
jle
jo
imul
cmp
xchg
pop
add
jg
pop
insb
pop
inc
insb
fwait
sar
scas
mov
mov
lods
stos
das
fidivrl
imul
pushf
les
lods
paddq
adc
xchg
inc
je
dec
clc
sub
scas
clc
out
test
into
mov
mov
addr16
mov
mov
add
xchg
jp
push
mov
cli
stos
mov
mov
mov
sub
popf
dec
xor
ss
sub
jle
fwait
mov
xor
xchg
enter
sub
pop
loopne
popf
xor
lahf
push
fnstcw
lret
in
or
mov
xchg
ljmp
sti
lods
fcomi
dec
ret
adc
sbb
adc
add
cli
stos
push
aas
iret
jns
scas
js
push
mov
push
loope
jae
dec
or
push
jmp
clc
cmp
xchg
decb
je
mov
repz
lock
ds
pop
shlb
jns
xchg
mov
xchg
sub
sub
enter
add
add
lahf
imul
bound
dec
push
xor
sub
clc
mov
pusha
ret
jecxz
fldcw
daa
jo
sbb
mov
mov
aad
fdivr
leave
repz
out
movl
mov
mov
sub
pop
push
sub
inc
cmp
or
repnz
aas
or
xchg
jle
or
jmp
daa
shlb
fisubl
cmp
leave
dec
nop
aam
cmp
fs
mov
fwait
insb
mov
add
mov
cmpsb
jl
dec
loop
jecxz
xor
add
inc
pushl
test
or
jns
mov
dec
inc
and
push
leave
inc
mov
int
repnz
ret
and
mov
sub
pop
xor
fiaddl
add
incl
in
inc
add
xor
push
xchg
in
test
lret
jl
xchg
stos
test
and
lcall
and
dec
cmp
pusha
ficoms
sub
inc
or
in
adc
xor
add
aaa
adc
lds
push
and
dec
shrb
or
frstor
or
cld
into
sbb
or
jl
ficomps
ljmp
out
fildll
es
adcl
leave
xorl
clc
inc
rcr
dec
pop
xchg
gs
enter
mov
xor
inc
xchg
inc
mov
dec
out
inc
fwait
in
fstps
push
and
test
jmp
in
mov
inc
cmp
ds
sbb
shrl
cmpsb
jl
jnp
mov
mov
push
push
mov
std
aaa
je
push
loop
adc
in
lahf
cli
and
xor
dec
xchg
add
sar
cmc
jno
push
jmp
lret
subb
sbb
jl
jo
popa
mov
jae
fiadds
test
push
mov
insl
jbe
xor
sbb
pop
test
push
pop
mov
ljmp
cmp
jmp
loope
stc
fists
imul
nop
bound
jb
pushf
push
jne
stos
mov
add
jg
pop
jmp
enter
daa
insl
stc
pop
aaa
lock
shrb
cli
dec
into
push
ret
mov
sarb
sbb
clc
mov
gs
cmp
xor
sbb
andl
into
and
cwtl
and
and
ljmp
xchg
xchg
jmp
jle
dec
and
xchg
dec
mov
xchg
sbb
mov
mov
and
mov
insl
inc
pusha
adc
andl
cltd
jge
mov
aad
sahf
fld
rorl
call
push
mov
mov
negb
in
or
adc
fildl
pop
or
dec
xor
push
add
insl
cmc
inc
jb
mov
push
pop
jbe
mov
lods
ja
dec
mov
scas
inc
xor
sub
cld
icebp
stc
xchg
mov
adc
mov
cmp
cmp
jg
mov
cmp
cwtl
hlt
pop
push
mov
xchg
stc
test
clc
aas
stc
push
push
mov
xlat
jecxz
lret
jmp
jae
and
jae
adc
stos
cmp
sub
mov
inc
inc
adc
or
jge
stc
insb
inc
aas
or
mov
sub
sbb
ss
bnd
inc
shlb
in
shrd
sahf
mov
rep
out
pop
and
lahf
sbb
add
pusha
shl
add
xor
sub
sbb
lahf
clc
push
test
mov
pop
jecxz
shlb
out
mov
xchg
int
call
adc
push
adc
dec
scas
xchg
data16
popf
push
es
push
mov
rcr
mov
aam
jbe
popl
dec
jecxz
add
inc
test
add
ret
mov
adc
cwtl
sbb
cwtl
sub
mov
cmpsb
mov
sub
jg
sbb
dec
sub
mov
cmc
lahf
push
and
pop
je
mov
jno
adc
push
add
dec
hlt
xor
out
mov
xchg
es
lods
adc
daa
aas
mov
std
in
fwait
loope
jl
and
call
scas
push
sahf
mov
push
xchg
inc
jo
js
jl
and
sbb
ret
mov
mov
dec
fadds
xchg
imul
xchg
inc
sub
aam
xor
xchg
mov
lods
sbb
dec
fxch
aaa
fcoms
xchg
es
push
sub
cs
xchg
nop
sbb
sahf
add
jb
sbb
push
cli
xchg
inc
mov
lods
insb
sub
sub
stos
in
inc
push
dec
xlat
lea
insb
testb
aas
cltd
les
aaa
and
push
idivl
je
cmp
cld
sahf
loope
in
mov
xor
push
aas
inc
or
ret
daa
stos
jne
repz
xchg
sbb
xchg
dec
dec
jb
test
fsubrl
pusha
or
mov
shrb
mov
jle
pop
stos
int3
pop
or
xchg
scas
out
shll
pop
dec
adc
push
cmc
in
push
test
std
repz
mov
xchg
scas
add
mov
shl
aam
in
in
test
lock
jmp
xchg
mov
sahf
xchg
or
cmp
push
jb
stc
jg
pop
scas
popf
xchg
xchg
push
cmp
repnz
jnp
hlt
add
inc
dec
and
xchg
sub
or
int3
jp
or
sti
mov
rorb
lods
mov
and
dec
pusha
enter
push
dec
xor
das
stc
adc
add
incb
xchg
and
and
adc
mov
in
sbb
inc
and
and
lds
cwtl
xor
fbld
lock
pop
mov
mov
pusha
sub
jbe
cmc
cli
roll
mov
out
xchg
xor
ds
jno
mov
and
push
cmp
fsubrl
mov
cli
xor
test
mov
jle
lret
pop
mov
movsb
mov
mov
sahf
xchg
sub
jp
lods
sub
loop
rcrb
xchg
sub
inc
mov
loopne
mov
pop
movsl
addr16
in
xor
mov
inc
or
fldt
aaa
pop
incb
jno
and
cs
call
jmp
dec
mov
xchg
negl
ficoms
in
popa
cmpsl
pop
leave
push
bnd
mov
lods
cmp
mov
test
or
inc
out
pop
sbb
int3
mov
jle
into
loop
add
pop
dec
push
subb
les
mov
jno
adc
mov
das
dec
mov
add
or
sbb
mov
or
push
push
inc
mov
fcoms
aad
mov
jbe
ljmp
mov
and
and
jl
or
xor
int3
jl
loope
pop
inc
mov
lcall
add
mov
loopne
push
orb
jns
cld
lcall
cld
mov
cli
xor
mov
sahf
add
add
arpl
sub
frstor
push
or
in
and
mov
test
shlb
clc
xor
es
add
add
pop
fnstsw
popa
fldcw
cltd
cltd
or
or
shr
pop
push
pop
sub
shll
and
leave
jg
js
mov
daa
dec
and
push
inc
mov
test
mov
imul
in
mov
scas
jg
int
outsl
imul
loope
aam
xchg
pop
sub
add
mov
fnstsw
lods
and
adc
xchg
dec
fs
inc
jp
dec
fmul
push
xlat
inc
ret
xlat
sarb
scas
inc
add
rcl
inc
xor
sbb
xchg
int3
out
pop
pop
aas
mov
insb
dec
xchg
es
xchg
leave
mov
jnp
bound
cli
pop
pushf
add
movsl
mov
subl
inc
rcrb
test
rclb
dec
dec
jl
mov
lea
inc
loop
mov
inc
sbb
lods
mov
in
pop
inc
addr16
das
je
movsl
nop
std
cmpsb
aam
jno
adc
mov
imull
xchg
cs
scas
xchg
cmp
or
xchg
sub
mov
int
aaa
dec
fbstp
sub
inc
sub
cmpsl
xchg
jno
sbb
xlat
int3
imul
pusha
xchg
mov
scas
or
stos
mov
cmc
xchg
cwtl
mov
dec
ljmp
mov
push
fimull
mov
xlat
push
jp
popf
inc
out
xbegin
inc
jge
xor
cmpsl
mov
imull
fmuls
outsb
lods
repz
dec
sbb
adcl
call
pop
daa
mov
sub
xchg
int3
inc
test
mov
xchg
sub
ljmp
mov
xchg
push
lea
xor
cmp
pcmpeqd
gs
popf
orb
js
jno
mov
sti
inc
cmp
pop
data16
lar
push
stos
int3
loope
push
popa
jne
push
mov
lret
mov
bound
jge
imul
std
shlb
cmp
sub
daa
sbb
out
hlt
daa
cwtl
xor
pop
mov
pop
and
cmp
xor
aam
xor
jl
mov
adc
scas
jne
push
cmpsl
jge
adcl
fwait
addb
sbb
repnz
call
ljmp
pop
or
mov
jmp
outsb
sub
cltd
insl
lods
mov
fidivl
inc
mov
sti
dec
adc
aaa
adc
jge
jb
lahf
imul
mov
xchg
push
adc
sar
add
loopne
js
cs
aaa
fcomp
subl
mov
popf
mov
inc
sbb
arpl
xchg
sarb
add
xor
test
cmp
sti
ljmp
outsl
imul
inc
pusha
and
fwait
int3
sbb
mov
arpl
adc
pop
jno
sbb
std
rcr
xchg
dec
push
fwait
cmp
cmpsl
push
push
add
adc
stos
push
sbb
fcomp
mov
mov
je
enter
cmc
add
push
cmp
das
aad
pop
mov
jo
rcl
loop
aaa
jbe
mov
adc
movsl
pushf
fcmovnbe
add
aas
add
push
sti
pop
jne
cmp
jnp
jg
movb
or
pop
fbstp
and
sbb
pop
inc
adc
and
jg
inc
mov
and
sub
lret
jmp
mov
shrl
ret
sti
lea
loop
imul
jns
mov
fisubrs
nop
test
shll
push
mov
int3
sub
inc
dec
outsb
lcall
repz
sbb
aam
jg
or
push
sub
in
xor
mov
mov
cmpsl
mov
in
xlat
imul
or
push
clc
cltd
xchg
fisttpl
xchg
leave
sub
xor
cli
lea
je
pushf
or
dec
test
not
cmp
into
push
add
dec
insb
sbb
in
and
lods
xor
sahf
sub
sub
loope
mov
lret
addr16
push
dec
mov
stos
push
sti
mov
mov
inc
xchg
pop
push
fnstcw
in
xor
ljmp
in
aas
popa
cmp
and
scas
sti
fdivr
aam
inc
dec
push
push
add
or
cmp
and
jge
mov
lock
call
and
mov
mov
mov
adc
or
fnsave
inc
xor
movsb
adc
ret
stos
arpl
outsl
out
or
xchg
pop
dec
lods
mov
out
mov
arpl
mov
xchg
and
xchg
sbb
pop
outsb
jo
mov
cmp
icebp
les
fmuls
push
pop
xor
pop
ljmp
adc
sahf
pop
ja
rorb
and
ds
add
sub
daa
push
xchg
adc
or
fisttps
addr16
add
imul
and
fs
aas
vmread
pop
pop
cmp
xchg
fwait
pop
out
popf
aaa
jo
adc
in
xchg
adc
lods
jno
mov
aas
xchg
xor
test
mov
dec
stos
int
or
push
shr
dec
bound
add
pop
popa
aam
out
add
xchg
xor
stos
cmpsb
mov
test
mov
adc
adc
ret
jo
imul
adc
cwtl
lret
ret
in
inc
dec
jge
daa
mov
xor
and
and
pop
adc
testl
in
xchg
cmp
jo
push
pop
es
dec
fcoml
je
ja
lret
or
jmp
add
push
push
dec
movsl
sbbl
pop
rclb
sti
out
sbb
cmp
jno
outsb
jb
pop
dec
jmp
xchg
pop
repnz
inc
mov
subb
and
out
dec
mov
and
adcl
loopne
xchg
imul
sbb
sbb
add
fbstp
push
ja
fwait
xchg
xchg
stc
iret
pushl
ljmp
aam
jns
lea
stc
mov
mov
lcall
push
pop
jae
pop
ja
stos
mov
outsb
mov
lea
push
push
mov
lret
movsb
push
and
loope
xchg
jns
aad
out
pushf
loope
bound
inc
add
xchg
xor
pop
popa
fcoms
inc
lods
out
fnstenv
sub
cmc
stos
in
fstpl
aam
mov
push
sbb
jb
mov
and
int3
test
rclb
adc
andl
in
clc
pushf
mov
cmp
mov
and
daa
jl
pop
imul
mov
ret
ret
insl
adc
sbbl
and
mov
and
push
ss
aam
xor
dec
outsl
lods
sbb
xor
in
mov
rcrb
in
sbb
test
inc
aad
lahf
call
out
jnp
out
cmp
pop
cli
lcall
bound
pop
data16
push
and
jecxz
push
or
inc
adc
movsb
add
xchg
mov
cld
jno
insb
out
push
and
jae
jg
push
xchg
dec
dec
cltd
push
push
sarb
adc
xchg
and
lret
sti
inc
ljmp
stos
stc
fwait
cmp
daa
xor
and
push
fsts
xchg
xchg
scas
xchg
mov
or
sub
test
jnp
cmpsl
cwtl
js
or
inc
and
stc
ljmp
nop
aam
mov
cmp
and
out
xchg
data16
mov
pusha
aas
mov
bound
fsubs
pop
call
xchg
inc
dec
adc
loopne
mov
inc
sti
cmp
adc
adc
push
rcrl
sub
test
negl
mov
ds
mov
fildll
cmp
mov
iret
ds
out
sub
outsb
in
sub
ss
add
inc
xchg
inc
imull
pop
dec
ficoml
cmpsb
inc
xlat
xchg
test
mov
fmull
int
xchg
jbe
sahf
cmp
xchg
mov
xchg
aam
pop
mov
insl
cs
test
xchg
adcb
imull
sbb
outsb
xor
xchg
mov
cmp
mull
fistl
test
shlb
pop
pop
adc
jge
dec
mov
stos
insl
jg
and
and
pusha
and
fsubrp
stos
pushf
and
jle
mov
shr
cmpsb
insl
cmp
fcmovbe
dec
dec
sub
repnz
stos
mov
clc
outsl
ljmp
std
mov
inc
push
in
imulb
repnz
mov
mov
pop
gs
ljmp
cmc
fdivs
loopne
push
push
mov
or
loop
pop
shrb
push
sarb
out
adc
xchg
cwtl
arpl
rorl
xlat
hlt
jns
mov
push
lea
mov
loop
inc
add
adc
sub
add
sbb
mov
sub
xorl
lret
inc
cmp
test
les
mov
nop
lahf
sub
pop
int3
push
pop
inc
dec
ficoms
inc
lods
aas
test
xchg
rorl
int3
outsl
into
out
xchg
cli
insb
es
sub
inc
adc
insl
mov
xor
jmp
push
sbb
aaa
xchg
bound
cmc
and
test
pop
int3
loop
xchg
cmp
sti
inc
fs
inc
sbb
inc
ret
repnz
cmp
pop
or
bound
cmp
lods
pop
mov
shll
fwait
adc
inc
inc
ja
mov
movsl
pop
fs
movsl
xchg
add
pop
xor
nop
inc
cmpsl
cmp
jmp
lcall
aam
enter
adc
popa
cmp
pop
stc
sbb
repz
lcall
ss
test
mov
addr16
shl
jmp
idivl
imul
pop
bsf
add
xlat
mov
mov
pop
loope
pushf
leave
nop
jl
jno
ficompl
mov
and
xor
pop
js
notl
repz
movl
mov
sahf
push
jecxz
lahf
aam
int
sub
aas
adc
push
and
add
pusha
test
adc
jo
push
test
lret
outsl
pop
out
btr
test
test
mov
sub
pop
std
xchg
push
add
imul
inc
sbb
andl
sub
pushf
pop
pop
lahf
mov
xor
aad
xchg
dec
mov
or
int3
icebp
dec
push
jp
and
imull
inc
push
ja
out
and
fisubs
adc
cmp
enter
cld
int3
jp
sbb
pop
jno
cmpsl
loop
jmp
pop
filds
push
repnz
xor
push
xor
inc
xchg
jmp
sbb
jnp
imul
cmp
test
and
cltd
or
fldcw
in
mov
cmp
sub
pop
icebp
adcb
mov
jne
and
ss
enter
imul
jg
or
sbb
xchg
jae
mov
movsl
mov
mov
imul
lret
jae
cmpsb
sub
loope
pop
push
cwtl
jmp
push
dec
imul
rol
loopne
je
and
bound
pop
test
cmp
inc
pop
orb
roll
xchg
addr16
jmp
shll
nop
imul
cli
aaa
scas
xchg
mov
cld
or
cmp
aaa
sahf
mov
stc
xchg
out
test
jl
xor
push
xchg
mov
add
cmp
or
xor
sbb
add
jl
xchg
fldl
ret
add
int
xor
hlt
hlt
int3
push
and
into
adc
mov
in
out
mov
scas
lea
dec
inc
mov
test
add
pop
cmpsl
int
sbb
sbb
mov
ret
xchg
pop
and
iret
and
test
lahf
nop
push
xlat
inc
dec
push
sbb
push
insl
leave
xchg
mov
lcall
cmp
ja
inc
pop
test
pop
cmc
sbb
jp
and
test
adc
pop
fwait
rcll
sbb
shl
push
out
and
ret
mov
mov
or
mov
fs
pop
pusha
add
sbb
sahf
dec
pop
scas
push
xor
xor
jl
push
repz
pop
leave
test
cwtl
pop
cmpsl
mov
xchg
shlb
ja
cmp
and
sbb
sar
jle
dec
xor
scas
out
jp
nop
sbb
and
mov
pop
clc
jb
xchg
sahf
xor
imull
cmp
stc
add
adc
jmp
jae,pn
sbb
rdmsr
outsb
imul
outsl
xlat
and
mov
pop
fxtract
sub
xchg
inc
std
xchg
out
push
and
outsb
or
cmp
mov
hlt
divb
pushl
sbb
addr16
sbb
inc
out
roll
or
mov
pop
rcll
inc
je
sbb
inc
push
mov
push
push
sbb
mov
movsl
push
andb
out
sub
mov
icebp
inc
jecxz
mov
push
push
inc
sub
sub
js
gs
int3
in
imul
xor
xor
inc
add
pop
call
inc
popf
sub
cmc
sahf
and
mov
jae
pusha
mov
lods
sti
inc
dec
test
pop
test
popf
dec
inc
lods
inc
xchg
push
jle
xchg
jno
movl
pop
dec
cld
jo
loopne
xor
add
mov
shr
testl
pop
shll
adc
and
pop
pop
jmp
test
pop
stos
ret
dec
xchg
mov
adc
jp
mov
out
adc
in
jns
mov
mov
lret
mov
pop
pop
add
cmc
jecxz
mov
add
pop
fiaddl
pop
or
adc
xchg
jecxz
inc
in
dec
int
xchg
and
lock
aaa
or
cltd
pushf
adc
xchg
fcomps
ljmp
ljmp
mov
gs
pop
or
mov
notl
push
push
inc
jge
jne
into
pop
cld
pop
popf
xor
out
leave
stc
nop
pusha
and
cld
das
cld
jg
insb
dec
dec
ja
pop
mov
bound
mov
orl
fistpl
sub
dec
arpl
sar
jno
mov
push
xor
lcall
add
add
in
pop
das
cmp
jno
xchg
sti
fdiv
push
mov
dec
cmp
ljmp
jns
insb
mov
and
in
outsb
ret
ret
jno
add
mov
cmpsl
inc
mov
sbb
inc
clc
aad
sbb
data16
mov
jnp
xor
dec
in
fistpll
push
and
push
xchg
into
dec
push
adc
lahf
mov
adc
lret
cmp
sahf
mov
dec
int3
jne
and
pop
mov
pop
sub
push
ret
enter
shlb
and
push
sub
cmp
sbb
jns
cmp
mov
sub
aad
popa
test
sarb
movsb
and
mov
xchg
pop
push
std
pusha
mov
jecxz
test
popl
pop
scas
mov
jo
mov
ja
mov
jno
jno,pn
repnz
movups
lock
jg,pt
ljmp
popf
loope
sti
mov
dec
les
push
arpl
push
pop
lods
mov
out
paddusb
loope
pop
aas
out
mov
pop
pop
mov
dec
repz
pop
sbb
and
inc
jo
insl
adc
inc
fldenv
cltd
or
pop
insl
lahf
pop
sub
lret
sub
pop
out
stos
pop
inc
jecxz
mov
sub
into
add
lock
vmovmskps
jmp
mov
into
fidivs
add
mov
pop
cmp
or
cwtl
fists
or
jns
mov
cmp
pop
rolb
daa
inc
rclb
mov
mov
inc
pop
pop
pop
bound
xor
add
inc
test
pop
sub
cmp
xor
ss
pushf
lret
jg
outsl
dec
lfs
pop
adc
ss
lahf
in
shll
mov
xchg
rcrl
mov
mov
or
daa
shrl
sub
pop
fisttps
hlt
lcall
fisttpl
arpl
xor
stc
les
mov
xchg
inc
jb
xor
cmp
pop
pop
mov
and
mov
pop
push
gs
psrlw
cltd
fld
inc
sbb
dec
cmp
mov
cltd
fpatan
test
mov
xor
repnz
cmp
pop
mov
pop
adc
sti
ljmp
or
dec
loop
stos
sti
out
repnz
repnz
cmp
rorl
popa
mov
jecxz
and
mov
movsl
sbb
cmp
mov
push
stos
idivb
iret
mov
dec
in
dec
scas
test
scas
cld
lea
mov
aas
cmpsb
add
cmpsl
cmpl
pop
mov
aam
cmpsb
pop
je
pop
loop
adc
inc
cwtl
daa
mov
add
mov
aas
mov
in
jmp
and
and
fisttps
sbb
push
cmc
pop
add
cmp
addr16
movsb
sti
and
mov
addl
gs
push
mov
call
and
rclb
popf
cmp
or
in
lahf
adc
js
jg
mov
nop
aas
arpl
jo
mov
dec
dec
insl
or
dec
mov
inc
les
add
cwtl
adc
push
pushf
aas
dec
mov
hlt
cmp
jl
test
cmp
jmp
rcrl
pop
aas
lods
outsb
sub
mov
cld
xchg
mov
adc
imul
or
or
lcall
in
mov
outsl
sbbb
rorl
lds
shll
adc
xor
sbb
xchg
xor
repz
and
mov
inc
loope
jge
aad
aas
push
mov
fdivs
sti
addl
and
jb
push
cmpsl
cld
jmp
js
push
andb
ret
xchg
pop
mov
jns
enter
test
aad
push
mov
jb
mov
stos
daa
out
jp
push
jns
pop
sti
stos
sbb
or
adcb
shll
add
xor
enter
aad
sar
jno
loopne
clc
fbstp
inc
clc
sbb
pushf
jg
sub
cmp
mov
sub
pop
dec
rcll
pop
ret
cmp
adc
lahf
jle
loope
aas
dec
inc
mov
xor
fmuls
xor
lcall
cmc
rclb
xchg
repz
mov
pop
pop
clc
push
lods
mov
push
push
cld
jno
xor
push
mov
int3
mov
rcl
lods
push
pop
test
add
inc
xor
fstl
rolb
lods
or
loop
fs
jns
arpl
int
int3
mov
inc
adc
mov
ror
push
inc
jge
dec
dec
pop
shlb
push
je
cwtl
pop
cmp
cmp
cmpsl
cltd
divl
stos
aaa
mov
insl
fs
cmp
les
mov
dec
int
mov
outsl
je
or
js
shll
ss
cmpsb
repz
test
mov
cmpsb
sbb
xlat
adc
adc
lock
pop
push
mov
test
adc
adc
lahf
arpl
dec
lcall
push
sbb
stos
ds
sbb
xchg
jo
popa
push
cmpl
popf
call
and
lods
pop
xorl
fildl
add
mov
cli
add
dec
push
nop
inc
or
repz
sarl
cmp
jmp
mov
adc
movl
and
in
lahf
fs
xchg
fldcw
mov
out
jbe
rol
popf
jnp
push
das
lcall
and
movsl
scas
pop
mov
popa
sbb
dec
adc
fdivrl
pop
inc
xchg
xor
inc
push
xor
ror
ljmp
fldl2e
test
jno
mov
test
aaa
fildl
xchg
loopne
add
add
lcall
enter
popf
lea
cmpsb
clc
add
dec
lret
push
lock
outsb
jmp
and
repz
pop
cltd
mov
outsb
adc
scas
jne
jb
sbb
lods
imul
lods
call
dec
addl
push
jb
imul
sub
mov
sbb
rcll
shlb
xor
stos
push
push
ret
mov
jae
ret
adc
ret
add
int
mov
cltd
adc
test
pop
inc
dec
ss
push
ret
sub
mov
xor
mov
push
inc
push
push
sbb
repnz
push
faddp
lahf
inc
dec
jae
fistps
nop
lahf
push
cmp
sbb
adc
aas
xchg
mov
ret
xor
add
mov
sbb
push
pop
gs
std
in
xchg
je
cwtl
push
and
sbb
gs
loop
jmp
dec
loope
pop
das
jecxz
fisttpl
jns
icebp
push
loop
jecxz
int3
xchg
outsb
stc
push
mov
mov
in
cmp
cmp
ret
mov
fisubs
pop
xchg
xor
jb
ret
jp
scas
mov
push
adc
mov
clc
test
outsb
mov
mov
push
icebp
call
enter
scas
icebp
jmp
fadds
scas
daa
lahf
daa
ss
xchg
push
mov
aas
and
push
inc
loop
pop
scas
push
insl
mov
or
cmc
insl
sbb
popf
push
pop
in
stos
movsb
push
or
mov
shl
adc
cmp
mov
inc
pop
mov
out
add
jo,pn
test
popa
les
jbe
fiadds
jle
test
jne
dec
ja
shll
mov
push
shr
test
cmpsb
jg
sub
out
int3
add
sbb
mov
inc
inc
into
dec
push
clc
std
enter
pop
clc
lcall
movsl
sub
inc
hlt
cmp
jne
testb
out
or
leave
push
mov
mov
mov
xchg
negb
mov
mov
jno
inc
fcoms
push
lcall
scas
shlb
dec
push
xor
std
sti
jecxz
imul
orb
mov
insb
aaa
mov
pop
adcl
in
call
push
loope
xchg
dec
je
cld
add
dec
xchg
mov
int3
shl
loop
imul
dec
out
cmp
push
out
rcrl
sbb
loope
and
cmpsl
sbb
lret
iret
fldl
push
cmpsb
mov
add
mov
mov
int3
faddp
sbb
cmp
sub
mov
inc
fsubrs
pushf
int3
cmp
cld
fdivs
cmp
push
clc
push
fwait
hlt
jns
fbstp
mov
fcomps
test
outsl
aam
cmp
mov
push
rcll
out
sub
mov
add
ret
mov
mov
js
lock
jne
and
xchg
mov
jbe
mov
sub
out
sbb
testl
out
xchg
push
addl
pop
loopne
out
jg
xor
pop
sub
jmp
dec
mov
pop
adc
sbb
nop
mov
rcrb
subl
int3
or
fidivl
xchg
push
out
test
into
or
or
cmp
xorl
xchg
mov
mov
fnsave
ljmp
jbe
test
rolb
dec
out
rorl
mov
bound
test
pop
iret
in
lahf
clc
jecxz
adc
add
imul
sbb
and
rorl
sub
xor
icebp
fmull
and
stos
scas
sub
or
dec
adc
push
lock
and
push
lods
lret
cmp
mov
cmc
ror
cmp
pop
mov
jle
and
test
cmp
or
or
mov
mov
lea
es
xchg
sbb
jmp
enter
jg
js
mov
scas
or
je
sub
inc
arpl
or
pop
dec
mov
mov
movd
pop
xor
inc
cs
xchg
push
nop
scas
lret
fldl
sbb
add
fdivr
xor
scas
fdiv
cmp
or
lahf
mov
addl
ds
aam
test
inc
out
sbb
pop
mov
xchg
lret
pop
push
aas
mov
int3
add
xor
es
stc
stos
test
es
mov
cmp
scas
sbb
in
mov
lods
jmp
lret
sub
cltd
rcll
hlt
fidivrs
mov
data16
or
icebp
add
sbb
filds
in
mov
imul
in
shl
je
pushf
push
repnz
hlt
push
and
movsb
nop
mov
mov
pop
jge
xchg
int
mov
pop
and
outsl
mov
mov
xor
fisubrs
ss
mov
mov
dec
int
cmp
movl
mov
ficomps
cmpsl
pop
cmp
adc
cld
jne
dec
mov
ljmp
cmp
jb
jle
mov
mov
xchg
insb
inc
pushf
lcall
xchg
pop
sub
shll
mov
repz
xchg
ljmp
xchg
xor
and
call
fdiv
xchg
cmp
clc
data16
cmp
push
sub
inc
inc
rclb
dec
and
sub
sti
movsb
pop
push
and
dec
xchg
xchg
in
and
shlb
xchg
sub
pop
aam
in
aas
call
mov
sahf
loopne
mov
dec
in
and
pop
mov
mov
jno
adc
jae
xor
mov
movsl
inc
test
or
adc
pop
mov
mov
sub
jl
scas
cmpsl
add
aas
push
std
xor
ficompl
je
imul
dec
jb
das
mov
inc
cmp
repz
lea
dec
loopne
xchg
mov
movsl
je
mov
mov
ret
jns
cmpsl
inc
sbb
aad
es
out
mov
lahf
stc
fucomip
xor
lea
jecxz
shl
or
push
add
cmp
jle
hlt
out
lret
push
std
or
out
sti
xchg
call
out
bound
adc
push
je
dec
enter
sub
mov
call
in
gs
inc
pop
mov
sbb
dec
sbb
es
pop
inc
inc
lcall
cmp
add
pop
xchg
fdivrs
dec
out
jb
and
and
push
xchg
pop
dec
pop
add
pop
adc
movsb
xor
mov
cld
sbb
xor
jo
test
and
dec
lock
mov
stc
push
cmp
dec
pop
pop
lds
lcallw
scas
subb
clc
stc
lds
mov
push
mov
pop
xor
cs
test
int3
sbb
sub
incb
shll
out
sbb
push
in
std
in
and
dec
in
sbbl
inc
push
adc
gs
cmpsb
add
in
or
fs
sub
sub
mov
pusha
sbb
out
mov
or
add
lods
xchg
fistpl
push
out
cli
pop
mov
and
jns
fwait
orl
outsb
lcall
jno
aaa
mov
and
imul
std
push
and
inc
sbb
push
mov
aas
xor
push
and
data16
mov
fildll
incl
push
pop
xchg
lods
inc
or
aad
mov
imul
push
loop
adc
push
std
sbb
cmc
xchg
leave
dec
mov
lods
sti
data16
xchg
inc
sub
inc
sub
jp
mov
jno
add
adcl
fsubr
jecxz
aas
fbstp
dec
cltd
ljmp
sbb
cmp
loopne
dec
sbb
data16
xor
test
xchg
mov
mov
dec
sar
xchg
sbb
es
int3
insb
daa
mov
mov
mov
int3
imul
adc
imul
push
sbb
scas
xchg
push
sub
push
sbb
gs
shll
popa
shrl
adc
cmc
shlb
dec
pop
mov
xlat
and
jne
xor
fmul
mov
and
jge
add
lcall
fadds
test
mov
mov
cmp
inc
xchg
jae
pop
lods
fwait
mov
inc
add
aad
mov
jle
pop
fucom
jmp
ret
sbb
pushl
jg
mov
mov
fimull
lds
mov
divps
lds
cmp
pop
popa
arpl
push
pop
mov
cwtl
arpl
fldl
mov
jae
clc
rcl
ret
xchg
jge
jle
jno
loop
add
push
out
icebp
push
pop
psubw
ja
push
mov
cmp
add
sbb
outsl
push
popf
push
mov
cmp
repz
scas
movl
sti
xor
fucom
into
js
ja
and
stc
addr16
pop
ljmp
and
fcoms
in
jmp
push
lock
stos
and
rcrl
aas
mov
lret
xor
fists
jno
fstpl
add
loopne
jae
negb
nop
inc
push
je
scas
sub
pushf
push
dec
pop
jo
jg
push
mov
push
cmp
push
cmp
sub
sbb
mov
cmp
mov
ss
out
arpl
out
pop
add
xor
adc
dec
mov
xor
mov
test
cmc
sub
out
dec
xchg
xchg
push
jmp
xacquire
loopne
or
xchg
mov
pop
lret
cmp
sub
sub
movsl
pop
popf
xor
xlat
jne
loop,pt
fildl
push
or
fdivs
in
cmpsb
xor
aad
mov
mov
mov
add
js
push
addr16
mov
pop
sarb
lods
jae
in
pop
mov
repnz
sbb
enter
push
pop
fsubr
add
inc
int
nop
xchg
test
mov
cmp
mov
in
jle
bound
mov
lods
mov
mov
ret
or
ds
in
fwait
cltd
mov
push
lret
sahf
mov
scas
push
xlat
les
dec
aam
sbb
icebp
movsl
sahf
sub
es
out
shll
js
cmp
enter
inc
jns
cmpsl
inc
xor
cmp
xrelease
stc
pop
jmp
sti
testb
in
nop
sbb
jae
jecxz
pop
pusha
add
push
jp
testl
pop
into
cmc
andl
outsl
sbb
inc
adc
dec
cli
jbe
xchg
cmp
inc
and
adcl
sub
adc
pop
test
fldt
inc
movsl
xor
movsb
jp
sub
mov
inc
cmp
mov
cmp
ficomps
into
pop
shlb
fwait
cltd
mov
and
add
xchg
cmp
push
jp
lods
stc
sub
sahf
adc
pop
dec
jnp
xor
jg
mov
ds
in
add
adc
xchg
add
iret
loope
mov
shrl
mov
add
in
cwtl
pop
clc
insl
cmp
inc
shl
mov
outsb
ljmp
xchg
outsb
test
mov
outsl
cld
adc
mov
out
push
or
outsb
ja
or
jp
pop
jo
ja
push
lods
dec
cmp
add
pusha
shr
hlt
inc
nop
push
mov
pusha
cmp
decl
or
lods
cwtl
call
pushf
jo
adc
mov
test
xchg
mov
rcrl
out
ret
sub
pop
mov
out
stc
add
push
adc
sbb
or
mov
inc
test
push
int3
pop
aaa
pop
sbb
pop
lock
int3
add
outsb
dec
pop
mov
mov
testb
outsl
in
xor
add
into
js
lret
cmp
jno
cmc
mov
not
notb
daa
add
mov
xor
pop
add
clc
xchg
dec
out
out
daa
cld
inc
sbb
add
repnz
in
in
test
cld
orl
xor
mov
mov
mov
add
orl
sar
adc
pushf
stos
and
dec
shll
int
mov
pushf
lcall
shll
daa
mov
insl
add
popa
mov
ljmp
ljmp
cltd
or
fs
jl
pop
xchg
or
adc
jle
and
cli
sub
stos
neg
mov
mov
mov
shll
push
das
insb
push
ficoml
aaa
push
movb
loope
sbb
aam
in
and
and
lret
aaa
icebp
aas
sub
or
rorb
leave
in
sbb
pop
pop
xchg
icebp
and
jae
dec
ret
test
jle
sub
inc
cltd
ret
shll
jns
mov
mov
pushf
insb
pop
minps
pop
lds
insb
push
adc
insl
fwait
jmp
cltd
movsb
enter
xchg
ret
loopne
push
mov
nop
cmpsl
in
bound
pop
aad
testb
imul
daa
xchg
pop
lea
xor
jnp
adc
mov
inc
pusha
or
mov
mov
bound
in
pop
arpl
shlb
jns
inc
int3
push
xor
xchg
mov
xor
pop
jle
or
and
sub
push
cmc
jle
cs
mov
cmp
test
test
fmuls
icebp
xor
ja
lret
jmp
xor
nop
psubusb
dec
fucomp
gs
loop
loop
pusha
dec
sub
mov
or
data16
cmp
cmpsl
loope
lods
add
ljmp
mov
int
rcrb
popf
jns
pushf
in
test
sbb
jecxz
xor
leave
cs
pop
or
rol
stc
sahf
dec
icebp
loop
in
pop
inc
scas
xchg
inc
jmp
std
mov
xchg
test
pop
cmpsb
jo
sbb
lcall
adc
andl
lock
or
xchg
loopne
sub
mov
push
fldl2t
inc
mov
push
adc
mov
fisttps
and
lods
cmp
pop
xchg
outsl
int3
js
xor
shlb
jns
push
inc
and
outsl
and
cmc
adcl
out
pop
test
jg
gs
adc
call
push
sub
ss
movsl
orb
xor
dec
cli
xor
mov
push
repnz
pop
je
jne
mov
fmuls
or
dec
insl
fnstcw
dec
or
repz
mov
imul
hlt
scas
mov
inc
jns
ret
cmp
sub
xor
dec
or
pusha
mov
sarl
fcmovnb
push
cmpsl
jae,pn
add
scas
sbb
adc
mov
ret
pop
lock
rcll
or
sbb
mov
loop
cmp
push
push
xor
and
sub
sti
cmpsb
adc
xor
xor
add
stc
gs
in
out
ret
rolb
cmpsb
jbe
sbb
int
xor
add
xchg
mov
inc
add
ja
clc
mov
inc
fsubl
imul
in
test
push
push
js
rcrl
lahf
fs
int3
cmp
jle
test
gs
push
sub
das
insl
popf
pop
mov
push
outsl
jmp
jmp
sarb
je
out
ljmp
push
xchg
mov
aaa
mov
in
nop
mov
flds
inc
out
pop
enter
or
in
ud1
scas
sbb
incl
loopne
je
dec
xchg
in
mov
dec
hlt
mov
lock
sbb
and
xlat
jae
jecxz
adc
mov
jbe
arpl
and
push
sub
cmp
sti
aad
movsl
push
fstpl
movsl
xchg
mov
cli
ret
movsbl
pop
in
cmp
push
lret
pop
fldl
std
ret
lcall
dec
lock
in
add
test
pop
in
jne
mov
cmpsb
lods
inc
add
cmpb
aas
out
mov
gs
jnp
hlt
mov
dec
mov
loop
jae
jmp
inc
dec
xchg
lcall
jp
ljmp
sbb
mov
ret
add
pop
outsb
inc
xor
xchg
outsb
push
pusha
jmp
pop
mov
adc
shrl
cli
cmp
repnz
and
adc
mov
cmp
das
xchg
cmp
jae
cmpb
repz
lds
imul
aad
push
clc
dec
pop
lds
cmp
mov
pushf
fcmovu
mov
enter
adcl
cli
cli
adc
ficompl
in
mov
dec
shlb
arpl
jecxz
icebp
mov
cltd
dec
ret
jle
push
or
push
lock
shlb
out
test
scas
and
add
add
rcl
addr16
push
popl
popa
mov
ljmp
add
sub
hlt
adc
pushf
arpl
pop
pusha
enter
loop
adc
dec
push
jle
stos
loope
pop
popf
cmp
pop
pop
add
loopne
lea
adc
lock
push
adc
inc
loopne
inc
mov
outsl
mov
ficomps
gs
jle
je
cmp
lods
outsl
cmp
adc
ljmp
out
jmp
cmp
or
rolb
push
pop
fmul
mov
popa
jmp
and
or
and
test
lea
mov
jo
xchg
xor
stos
cmp
mov
sbb
mov
sbb
jbe
or
mov
cmpsl
cmpsb
or
mov
pushf
into
cmp
stos
jo
xchg
stos
mov
hlt
cmpsb
call
inc
jbe
inc
push
adc
lret
fistl
sbb
dec
sbbl
xor
test
cmp
pop
xchg
xorl
lahf
mov
adc
in
sahf
mov
testb
lcall
test
iret
mov
insb
out
mov
dec
and
in
cs
daa
jb
es
inc
movsb
lods
mov
pop
xor
fisubrl
enter
ret
or
pop
ljmp
mov
xorb
pop
ja
xchg
jle
iret
or
xchg
das
test
ja
adc
xor
jecxz
scas
fmull
adc
fmul
add
adc
imul
les
or
mov
mov
jbe
aaa
xlat
cmpsb
or
mov
xor
shrl
test
xor
in
popf
sub
leave
cmp
ret
les
inc
mul
inc
mov
lret
mov
data16
and
and
daa
ss
and
repz
movsl
cwtl
xlat
test
stos
or
ss
shlb
dec
inc
jle
adc
push
cmc
adc
jns
xor
sbb
push
insl
dec
shl
jle
loopne
imul
push
cmp
lahf
mov
mov
ret
mov
cmpsl
jae
add
fistl
cmpsb
add
mov
ss
cli
xchg
push
dec
fs
inc
dec
or
add
bound
xchg
adc
loop
xchg
addl
jbe
stos
inc
icebp
in
xor
test
jbe
and
scas
mov
jecxz
sahf
inc
jecxz
ljmp
inc
mov
shll
jge
sbb
cmpb
cmp
adc
pop
call
adc
clc
inc
sbb
ret
repz
sub
outsb
mov
and
add
mov
in
add
in
cmp
mov
push
aad
mov
cmpsb
and
mov
rcll
and
cld
lds
pop
insl
mov
or
sbb
dec
incb
inc
pop
pop
ds
inc
aad
xor
pop
daa
ret
pop
je
lea
lds
push
xlat
or
push
cld
mov
add
fisttpl
inc
xchg
jb
sbb
in
gs
out
fsubl
ficomps
pop
insb
jmp
leave
popf
adc
or
pop
mov
dec
lret
xchg
inc
mov
adc
loope
inc
clc
push
dec
fsubl
or
sub
pop
fcoml
mov
sub
xchg
popa
push
shlb
fcom
mov
shl
mov
ret
pop
cs
cmp
popf
push
stos
mov
cmc
sub
push
aaa
rcrb
dec
dec
int
stos
pop
fucomp
and
fiaddl
pop
into
add
mov
xor
cld
stos
cmc
addr16
ss
int
sub
gs
in
mov
les
jbe
cmc
cmp
cmp
push
xor
lret
push
or
inc
out
test
test
mov
ret
pop
xor
adc
lcall
cltd
adc
mov
mov
xchg
add
sti
fisubs
hlt
sub
push
outsl
jno
test
fnstcw
mov
clc
shrl
rol
push
aam
cmpsl
mov
or
inc
sbb
sbbb
dec
mov
rep
xchg
ret
pop
lock
ftst
out
sub
negb
or
lock
cmp
addr16
mov
aam
and
mov
outsl
dec
sbb
xchg
sbb
pop
in
fwait
sbb
adc
adc
or
out
push
jo
pushw
or
cmp
dec
scas
jo
jge
sahf
in
ja
xchg
lea
dec
or
lock
dec
les
arpl
aam
ret
dec
lods
stc
loopne
add
sbb
sub
mov
inc
arpl
push
xchg
mov
out
mov
lock
push
add
jno
fisubs
int3
add
int3
repnz
mov
inc
ret
outsb
or
or
enter
sub
into
ret
sbb
in
mov
xchg
mov
aad
sub
jge
lret
ds
ja
push
or
mov
idivb
or
cmp
xor
sub
cld
les
gs
push
out
inc
loope
xchg
and
in
xchg
stc
cli
xchg
insl
sub
bound
mov
psubd
out
cs
mov
and
cltd
sti
cmp
mov
xor
xchg
adc
mov
divl
mov
outsl
ret
dec
dec
into
adc
sbb
out
xchg
cli
out
and
cltd
inc
ljmp
xchg
into
sbb
bound
mov
pop
cmp
push
out
test
rorb
aam
inc
outsb
add
lret
or
cmp
adc
gs
call
filds
lret
imul
mov
lret
xchg
xor
mov
adc
add
clc
sbb
fstpt
movsl
mov
rcrb
add
xor
pop
push
sti
popa
popf
jns
mov
aas
push
aas
int3
mov
test
fistpl
or
cmpl
lea
add
adc
mov
dec
shlb
rcrl
pop
aas
pop
sbb
inc
push
pop
sub
adc
icebp
mov
dec
cmp
icebp
dec
adcb
and
je
pop
js
xchg
fsubrp
push
or
mov
aad
mov
dec
cmp
ror
dec
lods
decb
sbb
pop
push
lods
adc
and
or
dec
xchg
test
mov
push
push
jnp
pop
lds
ljmp
sbb
push
pop
jno
sub
add
sbb
imul
addr16
cs
mulb
jmp
addr16
int3
in
sub
push
aas
or
push
stos
out
js
sub
out
ljmp
das
aas
pop
adc
insb
add
cmp
cmc
jmp
fidivl
jb
xor
mov
cs
push
adc
popf
and
fs
mov
es
add
fisttpl
and
pop
into
xlat
movsl
ljmp
aas
pop
rclb
mov
jp
inc
mov
inc
iret
pop
push
mov
rol
frstor
scas
dec
xor
push
cmp
or
sbb
call
daa
pop
lcall
enter
pusha
cmp
cmp
push
out
or
adc
cmp
adc
cmp
out
xchg
aaa
inc
sub
clc
push
out
or
jg
ret
loope
dec
sub
shlb
jno
xchg
sub
std
pop
loopne
jecxz
mov
or
mov
stos
lea
push
mov
pop
push
nop
sahf
into
cmp
ds
test
sbb
pop
movsb
push
leave
xor
je
ret
mov
lea
hlt
jo
loope
push
fcmove
jg
xor
adc
int
lock
push
adc
push
lods
enter
xor
pop
inc
dec
xlat
ss
cmpsb
push
das
mov
xchg
js
dec
add
mov
adc
mov
scas
lret
pop
and
adc
or
dec
sbb
cmp
sub
jge
jmp
xchg
data16
sbb
mov
shrb
stos
mov
mov
dec
and
iret
ljmp
in
popf
shl
out
mov
xchg
mov
pop
pop
nop
call
mov
inc
repz
lods
lret
fisttps
cmp
cmpsl
push
push
and
pop
xor
outsb
xchg
mov
arpl
jp
notl
rcl
cmp
adc
rcll
adc
addr16
jecxz
inc
xor
vmwrite
sbb
insb
mov
mov
cmp
xchg
test
test
add
jg
scas
jae
jg
push
or
jecxz
xor
out
scas
jns
push
cmp
mov
inc
movsb
cs
idivb
cld
pop
jl
add
or
movsb
cmp
sbb
inc
cmp
imul
pop
cmp
repz
dec
scas
movb
jbe
ja
or
lock
shlb
loope
dec
xor
insb
out
shll
or
xor
jb
push
movaps
subl
je
sti
push
in
mov
mov
mov
out
mov
mov
mov
push
mov
inc
jne
jb
push
xorb
repz
sub
ja
adc
and
insb
ror
jb
xorb
fsubs
cmp
and
in
inc
and
ret
jnp
inc
sahf
mov
xchg
or
mov
sub
jecxz
sub
cmp
mov
lods
in
outsl
fstps
inc
xchg
loop
jo
cli
lea
es
push
loope
push
xchg
sbb
aad
arpl
push
dec
les
adc
dec
and
shll
jae
shll
dec
cmp
lea
xchg
in
orb
cmp
xchg
rcll
mov
add
mov
inc
call
fidivrs
pop
mov
inc
pushf
sar
push
adc
loop
cmp
adc
xchg
mov
push
bound
push
daa
outsb
jns
je
cmp
aas
sbb
std
out
adc
aam
dec
xchg
aas
xor
aad
rclb
divb
adc
adc
or
repz
fstpl
out
cmp
cmp
out
les
cmp
dec
push
rorb
inc
gs
cmp
js
hlt
push
fwait
cltd
jns
js
inc
cmc
add
std
add
push
mov
push
pop
hlt
out
push
ss
or
imul
mov
pushf
add
push
out
scas
xchg
pop
mov
out
mov
add
xor
out
push
push
loopne
jno
pop
orl
adc
lret
mov
and
es
aas
in
das
xchg
sbb
test
push
or
test
push
dec
jmp
lods
sbb
sbb
test
inc
add
sar
fwait
jl
pusha
mov
addr16
mov
imul
fsubr
mov
data16
repz
push
inc
add
xor
imul
xor
xlat
cmp
xor
call
cli
aam
lret
ss
sub
repnz
scas
lods
mov
orl
fwait
mov
add
cmp
mov
xorb
dec
iret
mov
cmp
xlat
sbb
fnstenv
scas
push
mov
in
das
pop
xchg
loop
rcrl
sub
test
xchg
in
int3
lahf
or
arpl
in
lea
xor
subl
and
mov
adc
stos
add
stos
repz
fldcw
mov
add
mov
movsl
mov
jb
inc
mov
jge
adc
xchg
ret
jo
popf
ljmp
call
jno
cmp
xor
push
out
mulb
xor
mov
mov
push
repnz
lds
and
push
notb
gs
scas
push
lods
xchg
adc
aas
lock
cmp
ret
pop
add
or
mov
sub
jbe
lahf
out
and
jmp
pop
rcll
and
mov
cld
sub
loopne
jb
mov
iret
pop
repnz
or
orl
dec
scas
movsl
xor
inc
xor
cmp
pop
mov
mov
enter
mov
adc
std
lods
adc
lea
fidivrs
out
inc
pop
jo
mov
fmul
aaa
add
inc
inc
mov
test
enter
or
pop
shlb
insl
jp
pop
adc
inc
add
sbb
sbb
add
jbe
and
sub
inc
lret
xor
cmp
adc
push
or
add
sbb
mov
stc
sbbl
inc
fisubl
nop
mov
scas
xchg
sub
repz
dec
pop
push
mov
sub
shlb
iret
stos
jge
or
leave
in
cmp
jns
dec
and
adc
scas
lods
das
cmpsl
sahf
pop
sbb
xchg
out
and
mov
jb
jne
nopl
pop
loop
mov
hlt
hlt
mov
push
xchg
cmp
push
lret
inc
cmp
pop
dec
ds
sbb
inc
adcl
fwait
cmp
xchg
les
push
jb
dec
push
repnz
mov
cmp
or
cmc
pop
bound
sbb
mov
pop
mov
iret
imul
call
mov
inc
hlt
loope
lea
cli
sbb
decb
ret
leave
mov
in
jns
sbb
or
add
dec
sub
cwtl
fstl
inc
sub
xor
cltd
ja
cwtl
push
xor
fnstenv
repnz
pop
sub
call
mov
push
adc
decl
sbb
movsl
shll
push
add
add
ss
adc
andl
mov
fimull
sti
mov
or
add
setl
and
pop
les
mov
sub
mov
inc
mov
shll
mov
sub
call
out
jmp
xor
int
cmp
lea
imul
insb
xchg
js
pop
jno
ljmp
out
add
xorb
push
aad
push
outsb
hlt
stc
dec
jmp
jbe
push
jg
add
xlat
es
mov
add
pop
aaa
insb
dec
sub
loop
fcmovne
adc
xor
hlt
cli
xchg
cli
adc
cmovae
adc
sub
imul
and
add
jnp
mov
add
mov
fsts
jl
jl
pop
pop
out
push
xor
adc
lahf
stos
add
fdivr
mov
cld
cmp
cmp
or
insl
insl
andb
outsb
out
cld
cmc
inc
xor
js
adc
sbb
fucomi
mov
jl
and
or
imul
ja
add
cltd
cmpsl
xor
int
cmp
push
mov
push
push
test
or
sub
stos
scas
cmpsb
nop
in
inc
scas
cmpsb
mov
adc
outsl
adc
nop
lods
mov
push
push
lcall
ja
jp
mov
cmp
sub
cmpsl
stos
mov
pusha
stos
xor
jnp
aam
xchg
jl
hlt
jbe
sbb
push
push
testl
loop
xor
xor
xchg
shrb
jns
rcl
pop
mov
mov
mov
inc
jbe
inc
jo
sbb
rcrb
xlat
insl
shll
psubw
mov
pop
call
test
mov
xor
hlt
cmp
sarb
inc
ja
push
jbe
push
push
xor
pop
add
imul
inc
cmp
mov
mov
scas
andb
fdivrp
inc
or
cwtl
dec
sahf
mov
xchg
addl
dec
jp
notb
sbb
testl
pop
inc
and
flds
sbbb
cwtl
xchg
inc
orb
stc
lds
cmp
fildl
addr16
xchg
into
hlt
cli
nop
cmpsl
sbb
sbb
cmp
and
xor
mov
and
push
xchg
ret
int
jnp
mov
iret
push
pop
popa
test
mov
mov
inc
jns
out
inc
mov
xchg
arpl
xchg
and
dec
mov
enter
add
or
add
rolb
xor
es
rcl
sub
and
mov
sbb
mov
or
or
push
add
loop
push
int3
jle
push
fld
in
fsubs
jo
sbb
dec
push
fcoms
sahf
inc
cmp
jg
xorps
filds
dec
lds
aam
aam
enter
imul
movsb
je
nop
and
fwait
and
mov
push
and
adc
pop
cs
pop
int
fists
lods
pop
add
jle
in
lea
and
cmpb
andb
cs
pop
push
rcll
scas
mov
clc
mov
push
les
xor
sub
jb
xchg
dec
sbb
lret
xchg
je
call
adc
and
aad
int3
mov
sub
xlat
and
cmpsb
repz
rorb
jbe
les
sbb
daa
cmpsb
ds
push
mov
jle
mov
out
iret
fisttpll
xor
cwtl
adc
sub
cmp
xchg
jae
scas
sbb
mov
aas
lods
aam
adc
pop
dec
cmpsb
pop
popf
adc
fs
faddl
add
in
dec
imul
xor
repz
cmp
push
cmp
fistpll
es
mov
arpl
or
rorl
lcall
and
add
outsl
sub
mov
int3
jnp
or
push
aad
mov
stos
add
xlat
movsb
inc
push
fld
xor
pop
mov
mov
clc
adcl
in
mov
jmp
rcr
ss
jne
push
test
jae
lret
inc
pop
stos
js
arpl
add
xor
int
xor
sahf
ss
cltd
xor
sbb
imul
cmp
push
xchg
cmp
lods
cmp
into
inc
repnz
mov
sbb
push
scas
mov
into
gs
shl
dec
out
jg
jmp
jae
outsl
sub
sbb
xchg
jns
rcrl
pop
jns
mov
imul
sub
xor
lret
outsl
or
push
enter
dec
in
orb
cmc
ret
popa
sub
aad
jb
add
stc
sbb
lea
fsubrl
jp
jnp
jne
movsb
pop
fs
sbb
lock
inc
decb
lods
test
xchg
repnz
jg
outsb
or
test
fnstenv
dec
rolb
mov
adc
dec
mov
push
adc
jnp
pop
jge
fmul
pop
push
push
pop
out
add
jbe
insb
dec
cmp
ja
jns
sbb
scas
call
push
mov
ljmp
rol
pusha
mov
mov
aam
out
sbb
xchg
mov
cmp
jp
not
push
fisubl
add
and
sub
hlt
aam
xlat
mov
test
mov
mov
out
inc
inc
movhps
jo
decl
out
inc
push
leave
xlat
inc
xor
dec
or
or
mov
cwtl
mov
adc
cwtl
xchg
popa
paddsw
imull
sti
or
dec
pop
lods
mov
adc
mov
fwait
sbb
sbb
cmp
subb
movsl
shrl
cltd
orb
inc
pop
jl
push
pop
out
into
jmp
pushf
add
out
gs
mov
orb
cmp
mov
lods
mov
dec
adc
xor
inc
add
mov
inc
add
sub
testl
push
das
test
data16
ds
aam
sub
mov
inc
filds
pop
fsts
dec
iret
stos
sub
inc
add
fwait
scas
push
or
sub
adc
mov
mov
mov
pop
cmp
sub
inc
adc
or
sbb
iret
xchg
or
fisttps
fbstp
pop
call
pop
in
push
sbb
arpl
mov
loop
inc
jecxz
xchg
cmc
lods
loop
fistpl
addl
call
mov
jg
or
and
mov
scas
sub
push
pop
inc
jno
lret
imull
push
movsl
adc
sbb
inc
lahf
jg
enter
fdivrp
pusha
mov
sahf
incb
mov
adc
dec
xor
jo
aam
out
arpl
int
inc
popf
jge
xchg
dec
pop
bound
and
pop
mov
and
pop
mull
xchg
insb
and
cmpsl
jp
and
loope
es
ja
dec
jmp
aad
frstor
add
add
mov
iret
cmp
adc
xor
mov
jl
xor
cld
pop
ret
push
cmc
lock
xchg
cmpsl
pop
mov
add
push
hlt
add
push
xchg
dec
sbb
add
cld
imull
ret
and
jle
sbb
mov
nop
mov
dec
pop
xchg
aad
and
sub
xchg
das
inc
pop
sbb
ds
mov
sub
pop
and
stos
pushl
mov
jl
sbb
mov
push
jb
xchg
imul
push
les
push
sbb
fcompl
mov
lcall
in
jle
stos
aas
test
jmp
lea
fstl
jecxz
movsb
cmp
cmp
pop
sti
inc
dec
push
push
xlat
es
cmpsb
ss
clc
sbb
arpl
movsb
hlt
fxch
adc
or
fstpt
dec
cmpsl
push
xchg
int3
mov
bound
out
idiv
push
ret
xor
sbbl
mov
aam
mov
icebp
cmp
push
sbb
scas
push
mov
push
repz
inc
ljmp
mov
sbb
xchg
call
cld
inc
cmp
daa
int
sbb
adc
cld
jnp
or
sub
lock
jecxz
imul
push
insl
lea
and
pop
dec
clc
out
cmpsl
jmp
add
mov
cmp
stos
jmp
sbb
pop
imull
das
lods
fidivs
mov
pop
pcmpgtd
push
mov
and
lcall
sub
leave
mov
outsb
sub
push
pusha
sbb
push
andl
loope
adc
and
in
lcall
push
loope
pushf
adc
dec
daa
outsl
mov
fsubrs
adc
mov
sbb
mov
adc
hlt
rclb
sarl
pop
mov
or
sub
and
cltd
outsl
or
fisubrl
push
mov
arpl
adc
inc
mov
fisubrs
mov
xor
adc
xchg
lods
mov
enter
js
pop
sub
push
movsb
fwait
xchg
dec
jle
sbbl
add
popa
and
sub
sbb
sbb
push
jbe
mov
mov
push
adc
into
cmp
jb
stos
add
xchg
dec
dec
dec
jns
sbb
js
repz
pop
insl
inc
test
adc
dec
and
sbb
pop
inc
mov
mov
adc
xchg
push
add
jmp
lret
push
or
aam
lea
out
push
mov
jns
xchg
shr
dec
insb
pop
mov
jmp
inc
cmp
jns
add
pop
jp
out
jbe
lret
mov
pop
cmp
jae
icebp
sub
fmul
stos
mov
scas
dec
enter
mov
sahf
xchg
mov
xchg
out
fimull
das
lods
and
bound
push
nop
mov
popf
stos
push
jne
xchg
pop
lock
xchg
jmp
pop
repnz
shll
xchg
ja
mov
xchg
mov
cwtl
pop
mov
xor
cmp
xor
and
sbb
scas
cli
push
fwait
lds
dec
mov
dec
dec
or
cmpsb
movsl
imul
mov
fwait
ret
mov
cmp
les
sti
repnz
int
mov
outsb
mov
testl
loop
arpl
loope
sub
adc
lahf
dec
in
jp
or
pop
adc
imul
mov
rep
jns
or
xor
sbb
insl
and
dec
mov
sbb
loope
pop
cwtl
js
out
or
fistl
mov
adc
loope
xchg
shlb
push
mov
xor
inc
push
pop
sbb
outsb
iret
sbb
lods
fcomps
inc
adc
mov
outsb
mov
shll
dec
mov
icebp
sarb
and
fwait
xor
ljmp
je
mov
inc
nop
mov
sub
sbb
jno
mov
sub
sub
repnz
mov
ret
sub
nop
inc
rcrb
mov
mov
push
inc
inc
stc
test
imul
into
imulb
ds
mov
pop
pop
mov
rcrl
sbb
fsts
es
jge
aam
cmc
mov
out
and
xlat
shr
mov
lock
addr16
adc
cmp
mov
lahf
mov
pop
inc
repnz
or
sarl
rcll
ljmp
ret
mov
mov
pop
mov
add
arpl
movsl
and
mov
cmp
or
adc
bound
outsl
cli
mov
add
jne
popw
or
lods
push
xor
inc
mov
int3
inc
push
lcall
mov
imul
iret
rorb
pop
push
in
arpl
cmpsb
dec
data16
fs
mov
es
call
stos
std
and
jecxz
ss
xchg
stc
mov
in
jg
sbb
pushf
out
cld
dec
std
cltd
test
mov
mov
int3
sbb
and
push
jl
decl
sbb
push
adcb
mull
mov
jp
scas
imul
adc
sub
cmp
shll
jmp
or
scas
es
int3
mov
pop
push
sbb
movsb
dec
cmp
inc
xchg
jno
mov
add
mov
or
lods
pop
test
dec
push
mov
ljmp
jo
repnz
push
aas
xchg
sbb
ret
imul
pop
cli
add
js
inc
or
pushf
adc
inc
pop
sbb
mov
mov
fs
xor
data16
mov
sub
mov
lcall
dec
in
lahf
jb
fisubrl
mov
repnz
test
ja
sbb
sti
mov
gs
xor
jo
jecxz
lock
ds
into
pop
fsubl
aas
pop
sub
jno
pushf
cld
sub
and
push
mov
mov
xchg
push
into
push
mov
push
xor
and
adc
sub
imul
adc
inc
inc
movq
dec
sbb
dec
inc
xchg
roll
call
fists
mov
inc
aaa
addr16
cs
mov
ljmp
ljmp
andb
leave
movsb
mov
test
adc
jb
mov
push
rorb
push
mov
out
mov
sarl
xor
and
js
mov
mov
cld
jl
adc
fwait
push
aas
pop
push
pop
aaa
push
lods
adc
test
dec
ficompl
mov
psubq
xor
and
stos
xchg
xor
stc
sub
repz
loopne
mov
out
imull
sub
out
and
aam
or
stos
xor
sub
sub
loopne
pop
arpl
mov
bound
dec
cli
xor
aad
inc
hlt
iret
frstor
jmp
or
movb
add
cmpsl
enter
loop
in
xchg
imull
push
imulb
daa
pop
aaa
ds
xor
or
loopnew
cmpsl
jo
xor
sub
rcrb
xchg
dec
std
add
int3
shlb
xchg
and
cmp
xor
jb
sti
adc
mov
cs
jmp
add
push
push
and
sbb
and
sbb
gs
fwait
in
xor
cwtl
mov
das
adc
inc
pop
xor
sbb
les
paddq
add
cmc
and
dec
dec
dec
lcall
dec
and
dec
or
add
icebp
cmpsl
in
out
dec
mov
mov
stc
mov
stos
sahf
fidivrl
sub
mov
jae
repnz
dec
aam
cmpsb
clc
outsb
push
xor
xor
push
dec
mov
mov
fwait
mov
icebp
xchg
push
out
cmp
je
cmpsb
data16
pop
lods
add
and
pusha
lahf
xchg
sbb
xor
les
xchg
cld
cmpsb
mov
scas
pop
adc
and
gs
in
xlat
sbb
in
lds
xor
push
and
mov
mov
dec
fstpt
jmp
sbb
xchg
jg
mov
add
jo
and
sbbb
lret
mov
lods
jg
or
aam
sahf
cli
dec
sbb
into
test
popa
jl
cmpl
xor
cmp
mov
mov
sub
or
push
into
pop
pop
test
jecxz
cmc
sarl
adcl
js
fcoms
ret
test
mov
add
movd
call
sbb
int
pop
mov
mov
dec
dec
ret
sahf
push
mov
ficoms
clc
fs
sar
pop
xchg
outsb
sub
jae
std
aaa
stos
iret
and
sbb
pop
xor
call
testb
lods
push
or
sub
sub
std
push
and
lea
or
pop
push
daa
jp
or
mov
mov
fxch
dec
mov
pop
dec
xor
adc
stos
decb
cltd
arpl
sub
cmp
xor
sahf
sub
rorl
imul
sub
leave
out
hlt
cmp
sbb
dec
and
dec
das
ret
leave
pop
sub
sbb
mov
popf
fld1
js
xor
imul
in
shrl
pushf
dec
pusha
in
aad
imul
sbb
aaa
sti
dec
ret
jl
pop
pop
rcrb
xor
ret
leave
dec
adcb
cmpsb
sub
addr16
mov
mov
lods
adc
out
call
xlat
pop
sbb
xchg
mov
jle
das
enter
push
shl
mov
repnz
cmp
sti
adc
pushf
xor
cmp
cmp
xchg
push
in
sbb
out
ljmp
andb
mov
sub
sub
pop
xor
adc
mov
repnz
std
dec
scas
xchg
push
add
std
xor
aas
fldl
js
push
mov
pushf
xchg
lods
mov
out
jecxz
adc
test
clc
out
clc
mov
mov
and
push
bound
in
jg
repz
pop
push
xlat
pop
jp
fldt
int
xchg
push
aad
cmp
add
or
pop
mov
xor
dec
fisubrs
movsl
inc
cmc
lcall
jae
nop
lds
out
les
jp
cmpsb
sub
dec
jmp
pushf
sbb
dec
xor
inc
fstps
lcall
cltd
or
or
and
add
mov
ljmp
mov
mov
mov
loopne
cltd
mov
jo
int
roll
pop
xorl
rcll
imul
adc
scas
xor
stos
jle
stc
dec
cmpsb
push
leave
sbb
and
or
push
aad
jns
in
or
jp
stos
in
dec
push
push
cmp
xchg
sahf
hlt
xor
ss
add
outsl
in
push
xchg
stc
pop
add
test
mov
mov
jmp
into
das
push
stos
int3
cmpsl
add
jmp
jmp
arpl
jb
dec
enter
fstp
mov
sub
mov
es
rclb
pop
dec
in
aad
lock
mov
mov
out
js
lcall
push
mov
js
ja
test
mov
xor
jnp
xchg
push
add
sbb
pop
divl
dec
imul
dec
repz
cs
in
mov
addr16
cltd
cwtl
jle
adc
or
sbbl
in
push
pusha
scas
jbe
repnz
mov
pop
lret
or
push
push
int3
arpl
xchg
push
add
or
xor
pop
xchg
push
lea
mov
scas
pushf
pusha
pop
mov
xor
stc
adc
jb
out
mov
lcall
adc
push
sub
dec
dec
pop
stos
cwtl
sbb
mov
dec
sub
mov
jecxz
xchg
fwait
sub
sbb
pop
cld
push
adc
mov
fsqrt
mov
push
xchg
insb
dec
jp
insb
push
ftst
testb
das
push
sub
sub
jne
imul
imul
mov
data16
and
add
adc
aaa
xchg
xor
test
pop
movsb
dec
bnd
repnz
fimull
mov
lea
cmp
in
sbb
out
cmp
js
push
jg
dec
mov
jbe
dec
adc
adc
or
dec
lret
jp
hlt
push
adc
pop
jo
xor
fmuls
push
mov
int
aas
mov
dec
sbb
push
fmuls
mov
test
cltd
or
insl
repz
jl
icebp
mov
jnp
sar
adc
dec
pop
push
add
fwait
pop
dec
xchg
les
jmp
mov
sub
mov
leave
test
adc
jmp
or
jne
stc
enter
mov
inc
ror
cmp
clc
dec
fwait
add
adc
jnp,pt
iret
push
ficoml
addr16
insl
addr16
xchg
mov
or
jns
fmulp
arpl
sub
push
shlb
sahf
in
ret
addb
out
fiaddl
inc
cmp
les
mov
xchg
stos
mov
cwtl
inc
xor
in
inc
pop
and
xor
lcall
ds
insb
int
inc
mull
sub
pop
fsubr
adc
faddl
ljmp
add
loop
das
int
lods
inc
push
xchg
dec
test
adc
lods
imul
nop
jne
pop
clc
pop
push
or
and
cwtl
adc
outsl
inc
loope
mov
or
mov
mov
pop
xchg
cld
test
and
scas
sti
insb
or
jnp
pusha
push
andb
ljmp
popf
dec
add
or
pop
sbb
pushf
adc
loopne
pop
clc
loope
add
pop
xchg
sub
lcall
js
sbb
xor
pop
aad
pop
fwait
xchg
pop
push
ja
xchg
dec
cmp
jns
lahf
push
les
dec
add
pop
adc
test
imull
and
clc
enter
xor
cwtl
test
xor
ja
imul
js
out
inc
pop
sbb
hlt
repnz
inc
adc
xor
pop
jmp
bnd
outsb
aad
or
jbe
inc
out
outsb
into
sub
sub
lods
mov
sahf
shrb
pop
stos
hlt
mov
sbb
mov
call
fwait
cmp
xor
mov
lahf
cmp
sbb
add
into
and
cltd
iret
mov
call
mov
mov
dec
pop
jmp
dec
add
decl
xchg
ret
call
int
pushf
inc
test
cmp
xor
xorl
cli
push
add
repz
arpl
mov
pop
sbb
lahf
insb
mov
sub
and
cwtl
mov
iret
jno
pop
fmull
iret
repnz
cmovbe
testl
arpl
scas
xchg
rorl
push
call
mov
push
jo
int
sub
pop
pushl
and
frstor
push
jo
mov
sbb
test
sbb
pcmpeqd
push
xchg
push
test
cmc
or
push
lcall
adc
pushf
xor
shrb
add
xorb
in
test
adc
xor
and
inc
ret
loop
xchg
daa
push
cld
bound
outsb
and
cmp
add
out
push
push
iret
aam
jae
add
push
cmp
push
scas
out
xor
cwtl
jecxz
mov
adc
fisubrl
mov
aad
shlb
add
mov
push
adc
jnp
sub
mov
icebp
mov
mov
or
insb
rolb
out
fstps
fdiv
mov
mov
popa
pop
bound
sub
rcrl
push
aas
pop
repnz
mov
or
or
sub
adc
dec
sbb
pusha
mov
clc
loope
jle
lds
loope
adc
cld
push
mov
fs
cli
add
dec
push
xor
fistpll
add
cmp
jl
ss
inc
out
xchg
mov
mov
ja
mov
or
mov
lahf
in
xor
std
pop
mov
cmp
adcl
mov
and
jl
dec
sbb
fisttpl
mov
xchg
inc
aas
fsubs
mov
dec
das
clc
add
dec
pop
xor
xchg
cltd
cmpsb
mov
orl
dec
fldenv
jmp
sbb
out
adc
icebp
std
nop
imul
pusha
mov
mov
ret
mov
jns
push
push
cmp
jmp
xchg
out
fwait
cli
inc
cli
push
dec
mov
mov
inc
es
jmp
dec
pop
adc
shll
out
xchg
test
shrl
out
outsb
lret
test
mov
mov
xchg
aas
cmp
xor
xchg
cmp
xor
int
inc
pop
dec
mov
insb
push
loopne
cmpsb
lds
mov
pop
cltd
gs
lea
shll
pop
outsl
cmp
mov
mov
mul
push
jl
aaa
cmpl
stos
shll
dec
sub
mov
push
or
mov
xchg
or
jge
cmp
test
daa
mov
stos
addb
push
xchg
je
mov
mov
repnz
dec
cli
loope
test
adc
mov
movsl
iret
push
loopne
fdiv
dec
ja
nop
lock
and
xor
and
or
or
or
mov
rcrl
jg
adc
les
std
or
ss
mov
mov
adc
sub
mov
hlt
dec
in
dec
lea
add
pop
loopne
arpl
jne
jae
or
xor
pop
inc
xchg
sti
outsl
xchg
dec
lock
je
pop
int3
dec
imul
fwait
dec
push
or
or
sbb
pusha
leave
pop
ljmp
push
stc
cmpsl
add
jp
leave
mov
test
js
insl
test
stc
mov
popa
mov
sahf
test
push
mov
sub
cmpsl
lods
shll
mov
ds
sbb
ljmp
out
inc
loope
aad
dec
jmp
loope
xchg
mov
nopl
adc
ret
adc
loopne
jmp
es
mov
imul
imul
or
pop
jmp
mov
xor
and
push
lds
ja
jb
mov
ja
mov
jg
pop
inc
stc
push
dec
sub
cmpsl
push
sbb
dec
sbb
lcall
nop
rolb
adc
lods
cmpl
xchg
test
cmc
xchg
cli
pop
mov
sub
xor
cltd
jg
fwait
mov
dec
xor
outsb
lods
dec
xchg
mov
and
sarb
cmc
add
adc
lods
loop
negl
aam
add
les
xchg
push
and
popa
mov
andb
xchg
xor
jbe
xchg
mov
xchg
test
pop
ja
imul
ljmp
inc
inc
sbbl
sti
adc
push
pop
lds
mov
and
test
fsubl
scas
mov
call
sub
test
leave
mov
sub
xor
pop
sub
sub
add
jle
arpl
lods
icebp
jne
out
mov
mov
je
sbb
pop
dec
pop
mov
lds
test
shll
loop
or
jg
cli
xor
out
movsb
pop
push
shlb
push
push
mov
inc
lcall
sbb
cmp
mov
mov
mov
iret
into
mov
iret
data16
pushf
pop
shll
gs
enter
and
jecxz
sub
adc
inc
sahf
mov
data16
xchg
xor
cmp
fwait
icebp
mov
pop
stc
jno
imul
jo
ret
fistpll
push
lret
jo
push
mov
and
aas
popf
gs
imul
inc
jg
fdivrl
lcall
mov
lret
stos
sub
and
push
sbb
arpl
fisubrl
sbb
fistpll
push
repz
das
xlat
orl
arpl
or
fldcw
ret
inc
sbb
push
inc
bound
pop
or
sub
ret
jnp
or
xchg
or
and
dec
movsl
subb
add
xor
inc
aad
mov
insb
add
les
mov
jae
pushf
pop
mov
or
jl
adc
repnz
in
mov
fs
sbb
inc
mov
mov
jl
inc
cs
pusha
mov
negl
xchg
mov
addr16
popa
pop
shrl
dec
aaa
adc
xor
fstpl
add
xchg
iret
outsl
mov
aaa
push
lcall
sub
push
out
pop
inc
stc
pushf
aam
pop
das
imul
std
jno
aad
push
outsb
out
sub
adc
mov
cs
push
in
push
push
or
movsl
push
pop
push
and
ret
sub
icebp
scas
in
imulb
adc
stc
inc
in
add
cmp
aas
xlat
out
jg
in
aad
rcrb
push
out
adc
push
sbb
xorl
push
das
lods
xchg
lods
fcomps
pop
push
xchg
sahf
enter
movsl
pop
mov
xchg
ljmp
mov
inc
loop
mov
jnp
loop
out
frndint
dec
xor
lret
loop
leave
push
movsb
fstpt
andb
aam
cli
dec
cwtl
lcall
bound
or
cmpsb
jecxz
xor
push
mov
in
daa
mov
jp
push
jo
inc
jne
push
scas
cs
sub
insl
mov
or
push
sbb
lods
stc
loope
jge
push
push
lahf
fidivl
or
dec
sbb
or
sub
mov
fisubrl
mov
mov
into
outsl
outsl
outsl
or
iret
push
test
stos
pop
ret
mov
test
setp
aad
fsub
enter
std
inc
cli
sahf
lods
mov
xor
push
push
mov
pop
repnz
dec
push
or
mov
mov
cmpsb
xlat
mov
int3
jl
pop
mov
cmpsl
and
aaa
lods
or
xor
adc
hlt
lea
rcl
inc
popa
add
xchg
scas
je
sub
and
in
xor
add
jno
test
and
mov
mov
mov
pop
aad
fwait
cmp
and
pop
fisubl
push
in
stos
push
cmc
mov
call
sar
fiadds
iret
xchg
rclb
hlt
fdivl
mov
dec
shll
mov
int
xor
rorb
mov
or
cs
mov
out
pop
or
or
inc
cmpsl
or
imulb
loope,pn
cmp
push
aaa
outsl
in
sbb
js
lret
mov
push
aaa
int
outsb
xchg
mov
adc
stos
stc
jno
dec
js
or
aam
or
and
sbb
lock
repnz
push
cmp
xchg
sbb
or
dec
or
fsts
and
shlb
cwtl
fisubs
and
mov
push
sbb
ret
push
stos
insl
xchg
cmpsl
mov
fisubrs
mov
push
push
jnp
mov
jnp
pop
ja
test
scas
pop
pop
scas
mov
out
jno
frstor
insl
movsl
sbb
stos
fiadds
cmc
in
mov
mov
fcmovne
push
sahf
mov
mov
and
pop
sub
xchg
and
sbb
push
inc
or
dec
arpl
out
fcomps
cmp
push
into
and
sub
data16
cmp
mov
mov
push
int3
mov
or
loopne
ss
ss
lret
and
pop
cmp
push
inc
sbb
loopne
fwait
hlt
sbbb
bound
lock
lods
into
fisubrs
dec
scas
sbb
xchg
fimuls
xor
inc
or
pop
aam
xchg
sub
inc
shrb
test
data16
nop
dec
fcmovbe
inc
push
jl
push
xchg
mov
gs
popf
push
push
push
movsb
movsb
jp
mov
fcomps
or
gs
jae
int3
subl
pop
mov
pop
sub
aam
push
dec
incb
js
mov
mov
loope
xchg
clc
xchg
inc
push
inc
mov
and
fiaddl
imul
dec
popa
pop
and
js
sbb
and
sbb
dec
and
mov
in
pop
dec
mov
jg
xchg
mov
pop
mov
jecxz
into
lods
loop
xor
aam
ds
or
in
inc
movsb
push
sbbl
mov
jmp
in
pop
and
or
orb
adc
movsl
push
add
ja
imul
imul
jle
push
iret
fucomip
out
sub
rcr
in
fs
and
add
mov
in
push
cmp
and
mov
pop
jmp
in
cmc
xchg
pop
int3
add
jp
lcall
out
mov
push
pop
xor
addr16
pop
inc
aas
push
addb
js
cmp
dec
push
push
leave
and
daa
loopne
inc
sbb
in
adc
addr16
jbe
dec
out
lds
xchg
pop
ljmp
and
fwait
add
inc
cli
xor
fcmove
inc
inc
xlat
daa
mov
cmpl
jb
sub
daa
xor
sub
out
add
incb
scas
outsl
inc
mov
aad
les
dec
rolb
movsb
sub
dec
xchg
popl
ljmp
popf
jl
push
add
adc
hlt
and
mov
xlat
mov
and
dec
jle
sub
lcall
cmpsl
sbb
pop
dec
cmc
shl
loope
std
dec
dec
lret
sbb
in
sub
inc
xor
pop
jp
inc
jge
mov
fcomps
pop
enter
pushf
xor
int
inc
push
sbb
mov
aas
mov
outsl
xchg
and
shll
cmpb
and
mov
xor
pop
cmc
sbb
mov
bound
jne
movsl
aas
mov
mov
adc
negl
fdiv
fdivl
ljmp
ret
iret
adc
push
jg
shl
cmp
cmpb
movsb
sti
paddq
aas
xor
nop
rorl
nop
lret
out
daa
cmp
stos
push
cld
adc
jno
je
jbe
pop
cs
xor
cmp
and
aam
xchg
push
ror
add
pop
push
lret
jae
lcall
sub
lret
or
cmpsl
push
cmp
fistps
mov
pop
fiaddl
inc
out
adc
cli
or
in
pop
sub
push
adc
jae
add
out
ljmp
insl
sub
adc
mov
daa
aaa
push
loop
ffree
pop
jnp
fbstp
scas
pop
pop
sarb
loope
pushf
lea
xor
rcrw
cmp
mov
jmp
dec
dec
stos
sbb
jne
cmp
jmp
shlb
pushf
sbb
cmc
rcll
and
xchg
xor
jne
xor
pop
mov
pop
sbb
push
adc
dec
jne
ja
fwait
push
aam
add
sub
pop
pushf
outsb
lret
das
int
test
push
out
pop
scas
dec
aad
adc
ja
scas
xor
and
es
leave
dec
enter
out
jae
mov
dec
push
fadds
pop
xor
sub
and
ror
dec
test
dec
loope
xor
xor
mov
or
addr16
ret
subl
pop
loopne
or
lea
cmp
xchg
dec
and
out
hlt
sub
repz
add
adc
out
int3
movsb
push
repnz
dec
sub
fiaddl
nop
dec
jae
scas
aaa
lock
mov
rorb
cmpsl
frstor
cmpsb
push
xor
mov
xor
mov
and
fcomi
adcb
or
jmp
aad
pop
sub
sub
shll
jmp
adc
lahf
lds
sbb
ss
mov
sub
daa
add
or
mov
xor
pop
mov
rorl
dec
icebp
sbb
test
mov
imul
bound
sti
ds
xchg
daa
push
sub
inc
xchg
mov
and
dec
sbb
out
jnp
mov
sub
in
movsb
mov
xor
test
push
xchg
jnp
sbb
jo
mov
rorl
adc
loope
rclb
add
cli
xlat
js
add
fs
xchg
daa
pop
cltd
inc
xor
sbb
sub
dec
inc
and
lcall
js
push
jne
sbb
inc
test
xor
mov
push
cs
push
ret
sti
iret
scas
pop
cmpsl
and
bound
icebp
arpl
in
jecxz
push
mov
mov
iret
push
inc
sub
xor
mov
jne
dec
add
mov
or
adc
jb
std
mov
test
or
ret
mov
incb
shll
movsl
mov
lock
fstp
xchg
cmp
xchg
lods
dec
nop
pop
das
test
cld
mov
adc
dec
faddl
or
cmpsb
xlat
popf
push
add
xchg
repz
sti
call
lahf
sbb
clc
mov
fs
xor
xchg
data16
add
lret
ret
xchg
ror
rorb
and
xchg
pop
mov
or
fs
push
add
icebp
jno
cmp
iret
fwait
jo
xchg
pushf
ds
pop
and
mov
mov
xor
cmpsl
mov
imul
xchg
or
jae
pop
cmc
data16
or
mov
add
push
pop
push
jnp
jle
das
cld
int
mov
xchg
jb
xchg
add
ja
push
cmpsb
clc
or
ret
jg
pop
pop
aas
clc
push
push
aad
out
mov
push
jb
ret
or
jno
mov
mov
inc
test
jmp
jle
cmp
jg
mov
push
movsl
pusha
imul
lea
icebp
xor
inc
sahf
mov
stos
or
out
cmpsb
loope
inc
sbb
out
nop
mov
or
pop
int
iret
mov
pop
sar
sub
sub
pop
sahf
sbb
pause
jne
and
add
jns
shlb
fisubs
mov
clc
neg
push
add
loopne
cvtpi2ps
mov
adc
xor
addb
mul
mov
mov
rcrb
popf
std
sub
push
xor
jle
sub
lock
imul
in
or
sbb
rcrb
lret
int
mov
xchg
push
mov
jp
clc
pop
mov
xlat
pop
in
and
add
outsl
mov
jbe
fildll
rcll
ss
rcr
and
shll
aam
inc
cmpsl
mov
mov
push
sti
ret
es
mov
fiadds
or
ret
jns
loope
fstpt
sub
repz
shl
xchg
movsl
cmp
push
inc
mov
jnp
cli
inc
push
test
jns
pop
xor
sbb
adc
or
sbb
sbb
inc
cmp
and
rcll
adc
mov
jle
test
mov
inc
fildl
jmp
jg
inc
mov
inc
ss
iret
add
mov
lds
add
fucomp
xor
add
mov
fs
sbb
insl
add
sub
in
inc
lds
push
inc
stos
int
push
imul
mov
mov
lret
test
testb
cltd
mov
dec
sbb
movsl
mov
imul
push
jnp
leave
decb
jne
pop
xor
or
aad
ret
mov
cltd
or
out
and
clc
out
and
mov
jo
mov
mov
dec
loopne
push
out
mov
in
subl
test
cmp
sub
xchg
mov
lds
mov
xor
jae
jmp
pop
insl
mov
inc
movsb
stos
sar
test
push
outsl
or
dec
xchg
xorb
cltd
test
pop
imul
pop
decl
inc
adc
dec
clts
dec
repz
insl
fcoms
ret
out
hlt
push
dec
mov
pusha
mov
mov
leave
fs
cmp
pop
or
jge
cmp
cli
and
inc
dec
mov
pop
xor
xlat
xchg
and
xor
subb
stos
adc
mov
gs
gs
int3
in
pop
in
sbb
xor
mov
mov
cmc
test
jb
dec
arpl
notb
lret
pop
nop
sub
dec
imul
int3
std
push
lret
mov
je
dec
fnstcw
mov
pushf
lret
bound
lcall
aad
mov
out
mov
mov
stos
sbb
fdivrl
add
outsb
mov
sub
mov
ss
in
adc
test
lods
inc
addb
mov
out
dec
mov
xor
jg
repz
push
stc
xchg
jnp
jle
insb
les
loopne
mov
cmp
aam
add
mov
iret
push
addb
sbb
sarl
scas
dec
push
lea
lods
push
adc
or
outsl
outsb
xor
sbb
xor
xor
in
and
mov
cmp
or
pushf
mov
shl
jne
ret
fcoms
cmp
jne
rdpmc
dec
add
idivl
push
js
inc
jg
sbb
pop
hlt
jle
mov
jge
inc
pop
cmpsb
in
sbb
inc
push
xor
lcall
and
jae
int3
mov
call
mov
int
adc
frstor
std
push
jp
loopne
popf
loope
mov
or
lret
iret
sub
mov
mov
cmpsb
in
bound
jns
jbe
mov
and
inc
out
roll
jne
cwtl
sbb
jp
ficoms
flds
mov
nop
pusha
xchg
cmp
or
addr16
pop
test
addb
sub
mov
int
sbb
add
loopne
and
jne
push
cmc
dec
fnstsw
inc
adc
mov
test
sbb
enter
sbb
int
jbe
dec
lcallw
mov
xchg
mov
sub
aad
push
push
jb
mov
pop
andb
xor
scas
mov
pop
or
inc
pop
mov
cli
or
and
push
mov
std
jns
dec
scas
out
jae
leave
imul
add
xor
loope
lock
inc
push
addb
push
add
inc
jne
ret
ret
cli
shrb
mov
jecxz
aam
add
mov
bound
fldl
push
lods
xor
loopne
aaa
sbb
mov
stos
xchg
xor
sarb
gs
in
pop
cmp
cmp
js
cmp
fwait
mov
repnz
ret
dec
xchg
cmc
insl
sbbl
mov
add
std
stc
mov
or
jg
jp
lret
leave
lods
xor
lret
mov
sbb
sub
add
dec
jnp
lahf
je
xor
cwtl
sbb
dec
rol
aas
push
ficoms
lret
mov
mov
inc
loopne
test
cmp
and
sbb
cwtl
iret
outsb
out
mov
jp
enter
lods
js
pushl
xor
mov
int
sbb
adc
mov
cmp
jae
iret
sbbb
inc
ret
stos
in
cld
mov
arpl
mov
dec
addb
mov
or
lock
loopne
dec
adc
xchg
mov
xor
dec
jno
movsb
xchg
jae
imul
aam
out
mov
sub
out
addr16
lret
dec
divb
adc
das
push
add
les
sbb
mov
inc
repnz
leave
fstpl
fcoml
cmpsl
scas
ja
mov
dec
shl
aas
in
sahf
pop
cmp
addr16
aam
pop
mov
xor
adc
outsb
cmp
test
adc
ljmp
xor
add
repz
lods
shll
cmc
sbb
test
js
ds
mov
aas
aaa
scas
sub
push
or
cmpsb
fs
pop
inc
aas
add
imul
or
pop
xchg
subb
out
je
inc
add
fildl
mov
and
enter
adc
sbb
aad
and
mov
jae
mov
cmp
and
pop
inc
push
adc
js
sahf
scas
pushf
jp
cmp
outsl
cmp
scas
push
pop
add
cltd
or
addr16
pop
mov
aad
dec
pop
dec
mov
cmpsb
imul
lea
sub
and
push
xor
xchg
out
insl
rcll
add
mov
fwait
in
mov
insl
mov
and
dec
leave
idivb
out
sub
jge
mov
aam
adc
dec
les
pop
sub
or
cmp
loopne
add
push
mov
je
sub
adc
insb
lods
mov
and
push
mov
jno
jnp
int3
into
cld
sbb
push
mov
cwtl
lds
push
adc
xchg
rorl
jl
push
shrl
lret
add
add
jle,pt
push
and
sar
leave
insl
xchg
dec
outsl
mov
imul
mov
mov
lea
xor
mov
test
les
jb
scas
mov
fucomip
fdivrl
dec
in
xchg
add
test
jbe
adc
ja
push
test
ljmp
out
fwait
pop
leave
ret
bound
lahf
sub
dec
inc
hlt
jns
nop
faddl
mov
sub
pop
add
call
dec
fildl
pop
mov
pcmpeqd
jo
lock
sub
sbb
aaa
inc
inc
mov
jo
enter
push
dec
jns
xor
insb
aaa
xchg
dec
inc
cmp
jl
sub
enter
pop
fistpl
lret
push
les
pop
and
xor
lods
lods
xchg
imul
cmpsl
iret
pop
jmp
js
jb
aaa
pop
shl
hlt
xchg
sub
into
dec
movsl
xor
mov
sub
loope
or
movsl
adc
mov
fsub
push
sbb
and
add
add
pushf
rcrl
mov
xlat
jl
insl
jne
addr16
pop
insb
push
inc
fs
imulb
lcall
fildl
mov
mov
mov
syscall
adc
outsl
xchg
fistpl
cltd
std
fwait
mov
insb
push
pop
loop
dec
xor
push
jg
jge
aaa
inc
push
andl
adc
test
mov
jb
fdivrs
cmc
test
gs
or
rclb
pop
in
in
push
xchg
mov
stos
dec
out
lret
std
movntq
out
or
push
leave
mov
and
or
push
jo
mov
ret
xorb
repz
mov
ret
icebp
inc
repnz
test
std
std
ja
ja
adc
add
sti
aad
jg
inc
cmpsl
jnp
repnz
jmp
jg
and
lods
icebp
jno
push
mov
repz
mov
mov
sbbb
popaw
fnsave
xor
xor
mov
test
out
rcl
jno
js
mov
rorl
iret
mov
scas
cs
adc
cwtl
cmpsl
inc
std
push
lahf
push
mov
cmp
xchg
mov
sti
jnp
std
leave
push
insl
into
mov
cmp
clc
jge
add
call
ret
addr16
jne
int
push
mov
push
lds
add
push
subl
ret
stos
sbb
mov
pop
mov
jge
daa
push
mov
imul
fcmovu
rclb
push
push
add
cltd
ret
les
cmp
and
and
repz
jg
in
loopne
inc
daa
adcb
lcall
pop
mov
out
fwait
out
lret
test
dec
or
jne
dec
mov
lcall
push
decb
and
sub
dec
and
lock
mov
jmp
movsb
pop
push
adc
mov
jno
pop
cwtl
push
mov
test
jle
sti
cmpsl
fmuls
mov
push
inc
dec
scas
mov
or
out
or
aaa
mul
cwtl
sarb
push
mov
xchg
idivb
push
jecxz
insl
nop
or
push
test
pop
ljmp
add
mov
iret
push
orb
jle
in
or
jno
inc
sub
jb
adc
or
std
cmp
push
mov
loop
push
dec
dec
and
xorb
or
jb
sbb
jns
xlat
bnd
fldt
or
icebp
fwait
mov
mov
jae
fucomp
sub
cmc
cmpsb
outsl
dec
aaa
push
nop
xorl
add
scas
and
fdivr
and
mov
push
sti
imul
xchg
cmp
ja
or
pop
pop
push
inc
jns
and
add
pusha
adc
es
aaa
addr16
dec
ret
xor
sbb
bound
adc
xor
dec
mov
imul
rcrb
pop
xchg
dec
or
stos
lock
scas
cwtl
lds
inc
mov
xor
cwtl
test
sbb
adc
cltd
inc
andb
push
pop
je
push
pusha
inc
data16
mov
movsl
adc
fs
pop
xchg
jge
nop
or
and
ficomps
push
inc
jb
or
in
and
shrl
sbb
test
adc
xor
cli
xchg
jns
addb
decl
fstl
insl
mov
push
loop
or
sub
push
or
test
outsl
test
xchg
mov
or
cld
nop
push
add
cmp
sbb
dec
jbe
jns
sub
test
stos
jg
cmpsl
dec
sbb
lret
dec
sbb
dec
pop
ljmp
push
out
xlat
jo
push
cmp
into
rorb
push
sub
pop
fldl
outsl
adc
push
aas
jne
mov
daa
mov
sbb
mov
movsl
xchg
cmpb
cmpxchg
add
mov
push
and
jle
jp
mov
mov
scas
pop
lcall
sbb
stos
shrb
mov
fxch
outsl
mov
jecxz
sbbb
sahf
dec
jbe
lods
cli
call
js
cmp
cmc
fdiv
sub
fiadds
adc
xchg
loop
sti
loop
push
sarb
jbe
adc
andl
lock
pushf
movsl
cmp
push
jns
inc
bound
cmp
or
cs
pop
inc
les
call
mov
call
mov
stos
jo
xorb
bound
hlt
enter
outsl
jmp
inc
pusha
xchg
loopne
ffreep
fidivrs
add
cs
outsl
jb
dec
ss
mov
les
popa
loop
add
and
pop
fwait
lcall
push
sbb
fs
mov
push
pop
jge
lea
ret
mov
cmp
sti
dec
cmp
insb
mov
stc
lret
out
xchg
sub
gs
insl
in
lock
adc
ja
sub
adc
dec
daa
xor
xor
mov
adc
push
or
push
cmp
addl
gs
out
cld
mov
fimuls
jmp
out
cmp
adc
add
pop
sbb
jo
and
lods
or
movsb
add
pop
mov
lods
data16
int3
call
add
push
nop
xor
test
repz
pop
jns
movsl
xorl
inc
cmpsb
or
fcmovnbe
jnp
cmp
aaa
lods
mov
movsl
cmp
out
rcll
mov
xchg
int
fisubs
cmpsl
xchg
inc
or
add
push
or
jnp
pop
lret
ret
mov
xchg
jae
pop
mov
pop
xchg
sub
mov
mov
daa
sahf
sub
sbb
inc
lods
int
mov
mov
fidivs
fstpt
jge
repz
jle
pop
test
test
flds
inc
sub
scas
sub
out
sbb
and
xor
push
jmp
cli
mov
jmp
mov
cmp
adc
mov
push
data16
mov
push
popf
into
loop
mov
and
movsl
inc
pop
out
or
mov
loope
xchg
push
pop
inc
fucomi
addr16
adc
push
faddl
lds
aaa
pushf
rcrb
mov
dec
ljmp
popf
jmp
and
mov
imul
es
mov
stos
lds
jl
adc
std
shrl
fsubl
jmp
fs
mov
jmp
mov
pop
mov
arpl
aam
in
xchg
or
leave
seto
ja
scas
stos
adc
lods
add
inc
cmpb
push
pop
pop
leave
int3
adc
mov
dec
insl
ljmp
icebp
into
push
xchg
bound
mov
sub
mov
sbb
jbe
pop
push
or
xchg
call
js
into
sar
jno
and
xchg
iret
int3
arpl
ds
sahf
repz
mov
push
or
popf
insb
aaa
jae
enter
mov
aam
mov
xor
pop
movsb
xchg
cltd
ja
cmp
dec
mov
adc
mov
inc
fwait
lea
in
or
aad
inc
fldenv
dec
add
pop
addr16
fs
add
add
stos
or
stc
xor
pop
data16
cli
stos
je
and
lret
push
push
aam
out
sub
adc
ret
jmp
adc
mov
es
aad
dec
and
sub
insl
jne
or
jbe
aaa
shrl
add
dec
rclb
xchg
jge
cld
mov
push
mov
xchg
and
xlat
movsb
sub
mov
jmp
mov
mov
mov
cmp
push
inc
cwtl
out
jb
dec
fisttpl
pop
sub
add
jp
imulb
jg
repnz
push
out
sarl
jp
mov
scas
aad
out
dec
jp
dec
pushf
ffree
pop
popa
push
ret
imul
or
stos
lods
test
inc
ss
mov
imul
and
sbb
maxps
add
les
xor
in
and
cmpl
rol
mov
ljmp
add
jle
out
pop
sbb
nop
mov
sbb
cmp
ljmp
jae,pt
adc
inc
push
lock
jmp
call
fcoms
cwtl
in
jbe
jmp
repnz
or
mov
in
and
sbb
pop
xchg
jb
rol
mov
cli
mov
pop
push
es
mov
sbb
cmp
ljmp
pop
rolb
inc
scas
push
pop
test
lods
scas
push
fs
pusha
xlat
sub
inc
mov
and
or
dec
push
inc
das
add
adc
stos
jmp
aaa
in
dec
inc
fistpll
sti
push
and
dec
lret
aad
inc
movsl
lret
lods
aas
popf
pusha
xor
inc
mov
fxch
add
mov
or
arpl
fcoml
xchg
pop
loope
cmp
pop
std
mov
jae
stos
cs
clc
imul
enter
lcall
sbb
imul
add
lahf
cwtl
ljmp
cmc
sub
cwtl
dec
or
nop
mov
test
sbb
dec
lods
fmul
dec
test
movb
adcl
and
in
das
pop
push
dec
xchg
add
mov
ss
xor
push
in
std
scas
das
sti
mov
cmpsb
ficoms
in
and
jmp
sahf
cmp
pop
movsb
adc
adc
mov
iret
or
jecxz
js
add
loope
jle
divb
xchg
jl
add
push
stos
int3
cs
out
dec
call
pop
xchg
adc
sub
jge
pop
sub
cwtl
ss
cmp
pushf
push
repz
lea
mov
loope
mov
pop
pop
mov
and
xlat
out
pushf
mov
lods
es
mov
movsl
es
inc
dec
sub
dec
iret
adc
aam
into
pop
dec
popa
or
in
ret
out
hlt
in
cmp
and
cmpsl
subl
push
jg
arpl
fdivrl
mov
mov
and
in
aad
xchg
push
xor
aaa
ret
pop
std
repnz
adc
stos
xchg
jne
ljmp
sbb
push
mov
shlb
std
ds
pop
pushl
or
xchg
jge
fsubl
xor
popf
fiadds
dec
and
push
jne
ret
ret
lcall
adc
repz
pop
rol
inc
imul
lret
inc
jbe
adc
les
cli
adc
adcl
leave
push
jl
cmp
pusha
into
out
inc
dec
jmp
pop
adc
pop
mov
and
sahf
dec
movsl
negb
in
sarb
sub
sbb
ficompl
xchg
mov
push
mov
xor
xor
popf
push
xchg
adc
add
xchg
and
lret
inc
iret
int
mov
mov
nop
sub
sbb
sub
mov
dec
sub
mov
rcll
loopne
mov
add
cmp
pop
push
adcl
outsw
dec
mov
fdivrs
mov
gs
add
mov
fucomp
scas
mov
mov
lods
mov
mov
cli
mov
jnp
add
call
dec
xor
adc
enter
mov
mov
insb
fdivl
loop
pop
mov
scas
xchg
stos
dec
add
dec
pusha
inc
mov
push
add
lret
push
mov
imul
sub
xor
pushf
xchg
xorb
std
shll
pop
ss
aam
mov
das
cmp
cli
cmp
out
in
test
xor
mov
aam
test
mov
push
nop
neg
fsubp
cmp
stos
iret
fsubrs
movsl
sub
add
aaa
cs
xor
jg
lcall
iret
outsb
imul
sub
out
cld
lahf
mov
sarl
sbb
add
pop
jge
sub
nop
arpl
adc
cs
cmp
fisttpll
inc
and
pop
jne
or
or
sub
jnp
mov
push
mov
add
je
xor
inc
add
aad
adc
test
mov
inc
faddl
xchg
jno
repz
push
xchg
nop
mov
inc
xor
jbe
sub
dec
dec
ds
push
and
shrb
aad
cmovo
test
xchg
inc
sbb
imul
shl
cli
mov
stos
push
insb
xchg
iret
jbe
xchg
test
lret
sub
shrl
or
mov
jnp
pcmpeqb
push
movl
adcb
dec
mov
and
idivb
shl
cmpsb
enter
mov
jno
pusha
aas
dec
jecxz
pushf
js
jge
popa
mov
fstpt
xor
jo
xor
pop
notl
fs
bound
xchg
scas
xchg
out
xchg
adc
jnp
sub
add
je
int
push
mov
notl
push
outsb
popa
lds
dec
xchg
dec
rol
adcb
pusha
insb
stos
outsl
jle
or
mov
xlat
cmc
imull
inc
jmp
cmpsl
dec
xchg
or
add
add
adc
xchg
das
scas
push
lcall
jmp
ret
inc
mov
cmpsl
cmpsb
ds
pop
daa
jnp
lret
mov
jmp
mov
sbb
pusha
testl
sub
mov
sbb
sbb
push
loop
dec
mov
fwait
lahf
mov
or
rcll
in
pusha
pushf
test
pushf
cmp
ret
iret
mov
push
dec
push
insl
push
jmp
out
ljmp
icebp
shl
imul
loope
aad
ja
test
pushf
mov
adc
and
and
pop
pop
mov
sti
mov
dec
dec
in
sahf
popf
sbb
mov
push
adc
mov
add
sub
or
lea
jmp
aas
addr16
xor
fwait
repz
mov
stc
lret
dec
dec
push
xchg
aas
jl
and
mov
adcb
mov
arpl
stos
add
insl
adc
shrl
lret
dec
xlat
dec
outsb
jno
clc
lea
out
push
mov
add
pop
nop
loope
loop
pop
loopne
or
mov
push
xchg
mov
adc
jl
adc
std
mov
test
into
push
ja
mov
adc
insb
push
nop
mov
pushl
or
add
pop
sub
sub
cld
cmpsl
jecxz
mov
aad
sbb
add
dec
je
clc
jmp
mov
mov
sub
scas
or
xchg
enter
test
lret
cld
and
fucomi
ljmp
jecxz
mov
xchg
cli
jge
imul
lods
pop
xchg
mov
jns
mov
inc
rep
xlat
int
aam
adc
xor
xchg
jne
ret
or
fsubl
in
jb
fsubrs
xchg
mov
fcmovbe
outsl
mov
loopne
push
mov
dec
sti
ss
pop
or
xchg
lds
lret
mov
negb
cmpsl
bound
dec
push
inc
xchg
cld
cs
ljmp
lcall
and
mov
shr
cmp
jg
cmp
cmp
mov
pushf
cmp
std
lods
xorb
lcall
ret
pop
or
icebp
sbb
cmp
adc
cmp
pop
mov
or
out
sub
jnp
dec
or
adc
nop
in
cmc
mov
fldenv
pop
sub
sbb
push
clc
jle
xchg
mov
stos
pop
jecxz
fcmovb
es
xchg
in
inc
aas
sbb
aaa
mov
xchg
fcoms
inc
xchg
incb
imul
inc
hlt
push
shlb
addr16
stos
scas
cs
inc
out
fbld
inc
pop
fwait
sbb
cltd
lcall
testl
add
or
test
jno,pn
mov
pop
sub
jecxz
ret
cmpl
dec
add
fsubs
mov
popf
xchg
mov
cmc
push
fwait
mov
push
sbb
pushf
dec
jl
pushf
or
int3
adc
pop
mov
sarl
add
mov
push
xchg
xor
or
or
pop
mov
dec
inc
push
pusha
ja
loopne
sbb
in
bound
pusha
and
mov
ret
jg
cvtdq2ps
loop
push
loopne
cmp
add
bound
lds
add
sbb
pop
pop
call
mov
sbbb
pop
xor
pop
add
xchg
sbb
inc
insb
fcompl
or
loope
sbb
adc
adc
aam
jle
out
or
fstps
sbb
aaa
pop
int3
in
and
or
or
test
cmp
fldcw
dec
jnp
cmp
xor
cmpsb
aas
mov
dec
sar
pop
xlat
lea
push
xchg
sub
dec
shl
dec
lahf
jbe
jl
ljmp
xchg
jne
mov
fnsave
repnz
in
stos
nop
movsl
sbbl
int
adc
in
xlat
je
push
xor
icebp
xchg
lods
popa
inc
loope
xor
fstpt
sti
dec
push
bound
jle
push
cmp
scas
sub
mov
xchg
adc
popa
cs
jg
repz
inc
add
shll
jbe
lods
xchg
jp
xor
lret
outsb
push
mov
mov
sub
es
or
scas
push
scas
jbe
mov
ja
adc
mov
aas
lock
and
ss
xchg
cmc
jno
outsl
movsl
sub
out
xor
ljmp
cld
push
nop
push
aaa
imul
sbb
scas
push
inc
mov
ja
mov
fildl
xchg
pop
les
cmpsb
lods
pusha
sbb
mov
leave
mov
cmp
lret
stos
mov
int3
adc
mov
aad
dec
repz
cmp
imul
lock
js
stc
push
frstpm(287
insb
xchg
mov
xchg
addb
mov
scas
inc
and
pop
add
test
or
ds
fwait
fwait
mov
sti
cs
and
inc
jmp
jg
arpl
sub
fnstenv
subl
js
xchg
mov
jmp
test
lret
push
sbb
lahf
shlb
adc
or
xchg
out
cmpsb
jo
fcomps
inc
jp
loopne
fdivrp
mov
test
push
fcomip
testb
sbb
xor
cltd
in
fcmovne
aaa
iret
pop
ficoml
call
pushf
sub
bound
pop
ret
adc
xchg
jl
mov
mov
jge
sub
jnp
dec
shlb
adcb
and
insb
or
in
in
mov
inc
popf
inc
push
aad
ds
mov
insl
cmp
shll
fistps
inc
sbb
imul
mov
or
push
cmpsl
pushf
test
cmp
jae
add
sbb
or
or
mul
lock
shl
push
aas
sbb
imul
ja
mov
mov
xlat
fistpll
sahf
adc
lcall
pop
sbb
sti
jge
xchg
jo
pusha
and
cli
into
lahf
sahf
jns
cmpsl
stos
into
idiv
repnz
push
dec
int
bnd
pop
jo
inc
push
dec
jne
jge
push
stc
jge
loopne
push
lcall
adcb
sbb
jne
xchg
sub
adc
or
aam
sbb
inc
jmp
sub
xchg
fmull
pop
dec
xor
mov
negl
sti
inc
loop
inc
jns
inc
popa
vphsubbw
xchg
jg
or
lahf
outsl
outsl
sti
or
or
aad
outsl
or
jmp
and
fisttpl
xchg
pop
dec
inc
das
sbb
imul
ret
inc
loope
xchg
jns
cmp
xchg
rorb
insb
jle
addr16
cmp
cmp
pop
mov
dec
xchg
outsl
int3
mov
push
cmp
outsb
cs
mov
sbb
xchg
jg
es
mov
pop
jno
or
sbb
int3
and
xor
cmpsb
shrl
lea
jns
test
mov
inc
dec
pop
or
pop
dec
dec
and
mov
add
rclb
and
push
push
push
ds
mov
out
icebp
or
jmp
in
in
imul
and
pop
inc
fs
aaa
mov
mov
popa
mov
hlt
sbb
fdiv
push
adc
je
shlb
pop
cltd
dec
hlt
pusha
cs
pop
push
test
pop
int3
add
mov
add
ds
ret
mov
xchg
rep
shll
jg
add
imul
icebp
test
lods
push
mov
mov
sbb
mov
xor
sbb
add
fsub
mov
les
add
jmp
or
xchg
xor
in
dec
jne
jae
inc
mov
mov
dec
shrl
or
mov
stos
gs
jle
scas
imul
lods
dec
fs
xlat
lret
ss
imul
xor
ret
mov
or
test
mov
stos
dec
dec
cmp
jnp
cmpsl
flds
sbb
and
sub
pop
and
test
jmp
loop
rorb
test
cmp
pop
andb
insl
insb
pop
out
cmp
das
add
test
pop
lock
ret
adc
add
push
sbb
cmp
mov
pusha
jo
inc
sbb
push
nop
cld
outsl
lret
ret
push
dec
leave
jb
iret
mov
jns
clc
mov
imul
sbb
sti
and
xchg
imul
add
testb
into
jecxz
push
push
push
add
mov
sub
stc
add
lea
and
push
add
mov
xor
out
mov
fdivrl
fwait
mov
out
lea
inc
pop
outsl
cmp
mov
add
xchg
roll
jecxz
out
inc
and
adc
daa
shrl
inc
jecxz
dec
cmp
pop
add
push
nop
cs
push
mov
inc
insl
pop
repz
icebp
xchg
xor
push
mov
incb
movsl
xchg
jp
jle
in
xor
lea
jl
or
pop
aam
loopne
push
xchg
dec
imul
fcmovb
mov
aas
mov
dec
in
insl
push
dec
add
and
lods
aad
and
jg
fsubr
mov
mov
mov
mov
pop
outsb
jne
adc
mov
xor
testl
xor
or
adc
xchg
addr16
stc
mov
pop
push
mov
sub
loop
and
add
sbb
sbb
adc
inc
inc
pushf
imul
mov
or
mov
mov
mov
jp
stos
loope
dec
dec
jl
aaa
dec
lock
pop
mov
stos
jecxz
xor
sarl
call
popa
adc
xor
gs
xor
mov
lods
adc
adc
fptan
fdivrl
stos
mov
add
sub
xchg
jbe
cltd
roll
cmp
movsb
test
fwait
jbe
mov
jb
sbb
lods
fnstcw
dec
add
iret
cmp
lcall
loopne
adc
mov
aaa
and
jns
push
pop
out
int3
loop
cld
lea
push
xchg
fwait
jmp
pop
add
aas
mov
jno
mov
adc
mov
lea
ds
or
movsb
shrl
inc
cmp
test
pop
push
test
mov
js
fadds
mov
ds
dec
or
mov
or
adc
bound
fsubs
cwtl
push
sarb
mov
mov
imul
ljmp
add
push
add
cmp
testb
loop
cmpl
leave
es
inc
xchg
in
mov
mulb
data16
xchg
lods
add
dec
out
sub
inc
jge
jne
mov
outsl
cwtl
sub
out
cmp
mov
lock
cmp
add
mov
nop
stos
or
mov
mov
out
pop
xchg
mov
jl
mov
pop
push
sub
mov
sub
mov
clc
lret
sub
xor
adc
mov
or
and
add
push
xchg
push
cmp
fists
mov
jo
xor
repz
data16
repnz
mov
lret
mov
lea
shrb
cmpsb
pusha
insl
insl
pop
pop
stos
xor
daa
or
jne
mov
cwtl
pop
sbb
pusha
sarb
int
xchg
cmpsl
stos
bound
sub
or
in
mov
ljmp
and
outsb
addr16
push
xchg
mov
sbb
or
add
lea
cmp
dec
sub
mov
dec
sub
aaa
popa
mov
mov
push
test
pop
jp
loopne
dec
mov
inc
repnz
jbe
cmp
pusha
mov
out
insl
push
pushf
cmp
movsl
sub
clc
sub
jge
aad
xlat
gs
es
aam
lcall
push
sbb
outsb
daa
call
mov
adc
xchg
ficompl
mov
mov
xchg
sub
add
cli
dec
iret
xchg
test
adcb
mov
push
icebp
xchg
in
xchg
lods
leave
fsubs
ljmp
gs
stos
cmp
subb
jae
lods
inc
sbb
dec
mov
cld
adc
les
lret
jbe
mov
gs
fs
pop
subb
dec
scas
fwait
rcrb
mov
int
lret
cmp
xor
pop
sub
jbe
dec
xchg
lret
adc
ljmp
mov
cmpsb
or
test
in
sbb
mov
push
or
push
jecxz
xorps
pop
addb
inc
ds
lods
mov
push
es
in
daa
fdivr
gs
cmp
push
stc
dec
aaa
adcb
jbe
xchg
repnz
add
loop
call
test
lods
mov
rcrb
mov
inc
and
lret
fldenv
push
adc
arpl
je
or
cmc
xor
loopne
push
fwait
and
scas
dec
adc
push
push
xchg
sbb
push
imul
push
push
pop
fisttpl
cwtl
jo
pop
jg
dec
les
pop
addr16
jge
stc
inc
in
mov
scas
push
stc
mov
fsts
mov
jns
cmp
in
mov
sbb
xlat
cmp
xchg
mov
andl
fimuls
lock
sub
jg
jmp
ja
icebp
or
push
ret
sub
lcall
xchg
xor
mov
flds
int
lcall
pop
xor
mov
cli
add
xor
and
inc
es
sub
fisubl
popf
fidivrs
iret
jne
mov
in
sub
ljmp
jne
jmp
lods
movsl
jbe
mov
popa
cmpsl
sbb
push
mov
leave
test
daa
rcr
nop
insb
adc
cmc
mov
mov
sbb
sub
inc
pop
cwtl
data16
divb
out
aam
imulb
lods
xchg
scas
and
or
mov
push
cmc
mov
jb
sub
cmp
mov
mov
loop
inc
cmp
iret
idivb
mov
cwtl
shll
cmpsb
clc
and
mov
xor
dec
pop
in
imul
xlat
cmpsl
fcomps
fcoms
stc
mov
mov
xchg
rorl
jae
fildl
cmp
adc
mov
cmpsb
cmp
fstps
mov
xorb
fimull
ds
push
push
pop
cmp
shll
push
jns
icebp
or
push
fmuls
jnp
leave
mov
je
popf
pop
in
adc
dec
add
into
xchg
push
xchg
lret
and
es
test
loopne
mov
jmp
add
fstps
push
and
push
xor
jno
movsl
rcl
push
push
mov
mov
mov
dec
pusha
addb
movsl
pop
es
mov
stc
sbbb
pop
gs
stos
xor
fldcw
or
cmc
imul
jne
fs
and
test
dec
ret
addr16
mov
push
hlt
int3
inc
lock
xchg
cmp
fidivrl
les
dec
sbb
pop
insl
pushf
mov
repnz
dec
shlb
movsl
jmp
in
enter
add
dec
jb
aad
sahf
test
pop
mov
cmp
add
and
mov
xor
std
sub
inc
cs
mov
imul
jl
les
mov
lods
mov
or
roll
scas
imul
adc
jae
mov
inc
xor
push
orb
mov
push
movsb
cs
call
andb
xor
orb
xchg
pop
pop
jge
fmul
jp
fbstp
test
je
add
jns
ret
cmc
adc
lock
cmp
outsb
je
dec
jae
xchg
lds
mov
xor
popa
sub
add
push
cmp
aas
add
pop
adc
pop
jns
aaa
ja
xor
jle
cmp
add
es
jb
jne
xchg
push
pop
fs
jb
sarl
negl
cltd
inc
lahf
enter
sahf
dec
inc
xchg
adc
ss
cs
jnp
stc
lret
je
into
int3
cwtl
int
popl
inc
push
xor
mov
adc
cmp
push
pop
fstps
mov
pushl
in
in
xchg
jae
xor
xor
popa
mov
out
jecxz
pop
iret
movsb
cmc
aad
mov
lods
push
les
ds
aad
dec
push
lret
pop
pop
cmpsl
ficompl
inc
ljmp
test
in
imul
ds
lcall
inc
xor
lods
mov
xchg
int3
mov
dec
xchg
and
mov
xchg
xchg
mov
xor
push
outsb
xor
jae
lods
adc
cwtl
xchg
pop
leave
arpl
xor
jae
insb
mov
loopne
mov
fistps
jmp
cmp
pop
xchg
xlat
and
scas
aaa
out
call
enter
push
std
stos
mov
addl
jl
add
vmovdqu
nop
outsl
sbb
push
fcoms
loop
or
sub
jmp
xchg
inc
ret
push
orb
push
push
out
pop
iret
add
cld
out
inc
xor
mov
in
decb
test
sbb
shrl
enter
mov
dec
adc
andl
sti
add
push
clc
ds
mov
mov
push
cmp
lea
loopne
mov
jle
test
jns
std
dec
out
and
xchg
mov
cmp
nop
pop
mov
cmpsl
add
jle
mov
aaa
push
pop
pop
fcompl
insb
cmp
adc
push
add
mov
jp
imul
dec
mov
js
fs
push
jae
mov
sbb
into
add
int
fnop
inc
xchg
pop
pop
ljmp
push
lcall
push
adc
aas
cwtl
iret
adc
ss
inc
cmp
mov
xchg
adc
inc
cmp
iret
mov
adc
out
lods
jo
cld
js
push
dec
fsubs
ret
clc
sbb
pop
scas
in
fcompl
jmp
lret
mov
cmp
inc
cmp
in
rol
pop
hlt
cmpsl
xchg
gs
call
xor
mov
jmp
xor
gs
enter
fistl
cmp
repz
stc
xor
lret
mov
jl
xchg
pop
cmp
pop
jl
and
xor
add
xchg
daa
mov
lock
fldcw
xchg
lahf
pusha
orb
dec
mov
mov
sub
push
test
repz
outsb
test
dec
adc
or
fs
mov
mov
jp
push
iret
rol
mov
sub
sbb
loope
inc
cmp
push
aad
jb
adc
dec
mov
testl
inc
xlat
xor
and
sbb
aas
test
sub
jl
bnd
xor
jo
mov
out
pop
inc
loop
pop
pop
dec
fisubl
arpl
or
out
pop
and
idiv
fnstenv
cmp
movsl
scas
aaa
insl
jg
inc
pushf
out
fstpl
xchg
sub
mov
pushl
in
cmp
inc
fists
ljmp
push
adc
mov
ficoml
push
mov
sbb
dec
mov
test
stos
push
lret
rolb
fidivs
sbb
xchg
fwait
xor
flds
pop
cmp
loope
sahf
shrb
xchg
add
les
fistl
int3
scas
fidivs
add
and
aas
add
push
mov
mov
jnp
cmpsb
inc
jbe
out
jb
mov
rolb
and
mov
and
es
cli
stos
add
sbb
add
ja
push
imull
and
sahf
sub
rcr
aas
jnp
out
lahf
xchg
outsb
or
sub
add
repz
cmp
mov
pop
inc
call
adc
and
cmpsl
or
aad
xchg
mov
mov
out
ss
sar
pusha
aam
mov
test
lods
jnp
adc
and
sbb
jmp
aaa
cs
outsb
mov
test
ret
jbe
lret
jp
nop
mov
rcll
xchg
or
incb
cltd
rcrl
adc
out
int
fdivrs
loop
jbe
jo
imul
test
stc
iret
mov
aam
mov
sbb
repz
aas
roll
pop
fsts
stos
mov
add
or
mov
dec
dec
dec
repz
cmp
in
sbb
test
aas
or
cmpsl
cs
pop
popa
mov
mov
loop
pushf
lret
push
mov
cmp
push
pop
divl
and
mov
scas
mov
mov
bnd
test
jle
or
push
cmp
imul
jl
and
fstps
cmp
cmp
jne
mov
dec
fsubrl
push
das
cwtl
pop
xor
xchg
dec
addl
jnp
mov
bound
cmc
cltd
es
mov
add
aam
das
mov
test
jmp
fwait
mov
in
mov
jg
mov
mov
ror
dec
in
aas
stos
aas
enter
dec
shl
jmp
xchg
or
roll
xor
mov
jp
adc
sbb
push
or
add
add
enter
adc
xchg
fisubrl
leave
cmp
loope
mov
adc
fsub
aas
jb
dec
jecxz
sbb
add
in
test
arpl
lock
leave
jb
icebp
xor
ljmp
pop
push
xor
fldcw
dec
inc
push
iret
mov
shll
mov
cmpsb
out
ljmp
jne
inc
loopne
rclb
movsb
aas
adc
mov
in
mov
push
pop
add
pop
jb
pop
divl
rolb
push
loop
std
pushf
push
rcrl
xor
push
popl
fisttpll
mov
ret
out
les
ss
test
push
cli
mov
cmp
sbb
data16
add
mov
sbb
mov
cmp
push
or
jl
insb
push
push
rcr
pop
aaa
xchg
ret
pop
sti
pop
inc
mov
dec
inc
repnz
decb
call
inc
cmp
rolb
mov
imul
arpl
rcrl
xchg
in
lds
mov
add
push
dec
sti
inc
mov
pop
adc
mov
inc
stos
inc
je
les
icebp
cmp
inc
adc
aad
stos
stc
adc
cltd
into
cmp
jle
movsl
cmc
sbb
call
lahf
in
in
push
in
pusha
pop
int
jmp
in
add
push
fists
test
and
lcall
jns
dec
sub
repnz
stc
inc
lods
lahf
cmp
cld
jl
dec
xor
decl
fwait
clc
pop
cmp
enter
shl
fldcw
out
sbb
pusha
mov
dec
or
sub
pop
push
in
or
sbb
jle
in
dec
push
sti
ret
outsb
mov
mov
xchg
leave
and
lcall
sbb
push
cmp
xchg
push
push
das
lahf
sub
and
lock
mov
push
cmc
out
cld
mov
jmp
imul
fistps
std
pop
inc
mov
pop
cmp
sarb
inc
pop
rol
pop
std
sti
push
leave
inc
mov
dec
arpl
fbstp
push
sub
push
adc
push
sahf
ljmp
mov
test
mov
lcall
dec
hlt
push
fsubrl
jne
jge
bound
jmp
nop
das
into
cmpsl
pop
mov
in
sbb
xchg
mov
into
sbb
add
cmp
pop
mov
js
lods
pop
inc
add
outsl
fidivrl
jmp
sub
sbb
inc
mov
fwait
daa
jne
jae
jmp
lret
hlt
imul
outsl
test
push
lcall
pop
adc
xor
pop
int
loopne
shlb
and
push
out
push
fistpl
aas
cmp
push
out
jbe
jle
adc
push
je
nop
lret
inc
dec
push
sbb
and
add
ds
fsubs
aad
lcall
popa
jg
push
cwtl
dec
fsubp
jmp
mov
adc
lock
mov
enter
negb
inc
mov
pop
shll
xchg
inc
xchg
adc
mov
lods
sub
loopne
notb
mov
dec
vpsrad
sub
addr16
jp
test
int
addr16
jmp
jmp
gs
test
imul
mov
clc
addr16
adcl
add
lret
cmpsb
sbb
pusha
lcall
lea
inc
movsb
dec
adc
jbe
addr16
movsl
mov
xor
sar
popa
dec
popa
movsl
jbe
sbb
stos
sub
xor
aaa
shr
sbb
xor
pop
jmp
sahf
mov
testl
add
shrl
pop
aam
scas
clc
and
dec
xchg
test
pop
lods
movsl
pop
enter
adc
dec
jmp
stos
mov
movsb
loopne
add
add
cmp
dec
dec
push
and
xchg
mov
jo
xchg
push
int3
jp
gs
inc
cmpb
cmp
ja
testb
inc
fistpll
orl
out
inc
clc
add
out
push
repz
pop
clc
sbb
arpl
outsl
inc
or
hlt
adc
push
fistps
dec
sub
xchg
ljmp
mov
mov
inc
daa
lcall
insl
or
mov
add
shll
inc
xor
rorb
sub
rcll
and
xor
fldenv
jnp
stos
int
push
push
cmp
orl
cld
clc
out
leave
pop
test
imul
rcl
mov
sbb
cmp
push
out
lret
loop
stos
sub
inc
or
pop
insl
out
aad
in
lods
jnp
scas
lcall
out
push
xchg
mov
jbe
js
cmpsb
dec
loop
inc
nop
int3
insb
stos
fdivrl
add
sub
add
rcl
xchg
cmp
stc
lret
inc
movb
sti
jns
in
cld
jno
sbb
adcb
lods
sub
xchg
sub
and
dec
ljmp
stos
movsb
out
inc
cli
push
jle
leave
mov
orb
stos
dec
mov
fxch
sub
sub
cmp
out
rorl
add
out
push
and
mov
jns
in
xchg
lods
pop
inc
loopne
lcall
outsb
movsb
push
push
jg
sahf
les
cmp
dec
scas
in
int
es
jbe
cmp
shl
inc
pop
add
push
push
gs
je
insb
fdivl
enter
push
jmp
int3
lcall
xchg
lods
jo
daa
test
jns
xor
call
jmp
mov
mov
or
or
les
jmp
in
das
xchg
inc
pop
push
jnp
es
cmp
imul
or
jmp
ds
mov
and
push
mov
xchg
push
std
sbb
cmp
fcomps
jp
lods
sahf
cltd
xchg
and
xchg
xchg
push
jg
leave
shll
lods
dec
jne
sub
rolb
dec
insl
nop
push
das
fsubrl
inc
mov
push
icebp
mov
xchg
xor
inc
inc
cs
mov
mov
int3
loop
mov
mov
xchg
rorl
push
sbb
adc
pop
mov
pop
es
aad
xlat
lret
xchg
mov
inc
push
sub
sbb
mov
mov
xchg
jle
cmp
sub
cwtl
lcall
or
cwtl
mov
stc
push
xor
add
es
fwait
sub
and
pop
sub
xrelease
jle
sub
ret
mov
cmc
lcall
jo
shlb
mov
push
jno
mov
jecxz
cmp
in
outsl
push
sahf
lret
fldenv
sbb
gs
cmp
sub
adc
dec
cmp
mov
sub
push
les
popa
shll
icebp
mov
adc
jle
out
add
adc
or
mov
cmp
and
or
push
shll
xchg
adc
cmpsl
push
fisubl
fidivl
ret
pop
cmpsl
mov
fnclex
psrlw
mov
sbb
ret
in
cmp
icebp
jmp
test
fists
shlb
fistps
push
ljmp
dec
cmc
daa
inc
jmp
cmp
add
mov
mov
sti
dec
stc
outsb
mov
mov
into
movsl
xchg
test
pushf
lea
push
xor
pusha
cmp
jo
inc
nop
out
and
fistl
mov
mov
dec
cmpsl
pop
jnp
fidivl
inc
jl
sbb
jecxz
lea
das
js
out
clc
add
xor
and
jl
mov
ljmp
xor
mov
mov
ss
push
mov
dec
stc
add
data16
jl
pop
cmpb
push
jo
pop
out
test
xor
add
lods
sub
jne
lea
enter
fistps
pop
push
dec
frstor
xlat
rcrb
mov
call
adc
fists
je
stos
repnz
inc
pop
int
cmp
pop
mov
mov
or
movl
cmpsl
ljmp
add
shlb
inc
dec
cmp
jbe
scas
cmp
js
shlb
push
lock
mov
or
jno
sub
ret
movsb
and
xchg
shll
adc
jle
xlat
insb
pop
out
jmp
pop
inc
xor
mov
lret
jl
out
add
dec
test
xchg
jns
loope
and
imul
jae
orb
push
out
push
test
loop
gs
and
cli
mov
adc
bswap
insb
test
mov
sbb
movsb
inc
mov
lods
xorb
in
ja
mov
xchg
scas
xchg
idivl
mov
mov
pop
push
ficomps
jb
loope
sub
stos
int3
movsb
mov
sub
insl
mov
lock
ljmp
pop
and
rep
xchg
mov
flds
xor
and
aad
in
mov
mov
lea
test
sbb
insb
sbb
insb
stos
xor
mov
popa
subb
mov
mov
pop
sbb
pop
in
or
mov
cmpsl
push
xchg
movsb
mov
lea
inc
aam
ss
nop
testb
adc
dec
icebp
call
sti
call
jb
add
mov
xchg
mov
testl
arpl
fwait
lods
rcll
ret
sub
jne
ja
aam
je
hlt
lods
push
mov
int3
fldt
xchg
dec
mov
shll
xor
inc
call
addl
ds
pop
movsl
test
ss
pop
je
in
or
stc
bound
xchg
cli
test
mov
xorb
mov
sbbb
mov
and
cmpsb
xlat
js
shlb
pop
push
jno
push
loopne
jb
pop
repnz
push
div
jnp
pusha
push
fnsave
repz
mov
or
mov
movsb
call
stc
lods
sub
jae
cmp
insl
scas
in
sbb
insb
and
rolb
loop
out
push
loope
shll
ljmp
lcall
pop
push
cli
xchg
pushf
cmp
std
mov
stos
pusha
xorb
test
push
popf
addr16
lods
pop
frstor
add
js
dec
lods
adcl
xor
iret
cmp
push
in
pop
movsb
and
ja
test
pop
sbb
dec
inc
sbb
rclb
or
scas
aaa
cltd
dec
or
lds
xor
mov
jle
xor
cmc
movsl
sub
pop
and
xor
push
fwait
in
test
pop
data16
lea
cvttps2pi
call
shlb
cmc
inc
and
shl
push
in
and
cmpsb
call
shr
pusha
out
cltd
test
jb
push
sub
into
xchg
mov
add
fisttps
rcrl
and
repz
xchg
subl
xchg
cld
xor
jmp
push
cmp
in
pop
in
testl
popa
pop
jo
inc
push
sbb
sahf
pop
int
bound
scas
pop
gs
jp
loopne
pop
lcall
sub
gs
popf
sub
ret
subb
pop
repnz
leave
add
imul
stos
loop
punpckhbw
aam
aas
add
loope
ror
dec
dec
and
in
adc
fnstsw
inc
add
mov
mov
inc
fs
sub
mov
mov
imul
inc
mov
xor
inc
xchg
movsl
mov
lcall
loopne
xchg
xchg
and
inc
leave
push
cmp
sub
ss
les
sbb
push
cmc
mov
bound
pop
insl
sbb
xor
push
xor
mov
pop
hlt
xor
insb
cmp
cltd
jnp,pt
cmp
int3
addr16
jmp
sub
ret
sub
mov
ss
bound
movsb
rcll
and
adc
push
sti
movsl
rcll
out
hlt
mov
add
fidivl
push
dec
push
xchg
inc
mov
sub
inc
and
repnz
nop/reserved
cld
dec
orb
lret
fstpl
in
xor
repnz
cmp
mov
mov
movl
test
jl
xlat
mov
cmp
imul
add
inc
cld
mov
xor
iret
inc
cltd
push
pop
mov
push
hlt
or
stos
or
ja
fs
add
test
fisttpl
stos
xor
mov
or
cmp
ja
lcall
xor
push
add
test
fcomps
pop
jg
in
rcrb
nop
xchg
call
sub
inc
push
aad
pop
push
xor
loopne
or
and
xlat
cmpsl
scas
push
arpl
or
jb
pusha
fiaddl
je
popa
mov
fs
das
or
adc
pop
xchg
imull
aam
mov
test
add
sbb
stc
daa
cli
xchg
mov
lret
pop
jmp
jae
mov
mov
loop
fcmovb
xchg
shrb
and
push
scas
repnz
and
scas
add
aam
in
dec
orl
xchg
lock
imul
push
cli
xor
dec
push
push
xchg
dec
push
push
inc
dec
lret
cmp
scas
dec
stos
les
pop
xchg
idivb
out
mov
xor
mov
out
mov
lret
aad
repnz
or
inc
sahf
outsb
pop
xchg
dec
mov
ret
mov
pusha
mov
mov
xchg
enter
outsb
daa
hlt
add
insb
mov
jb
popf
push
xor
xor
push
lods
sbb
call
dec
les
or
xchg
rol
xchg
movsl
fiaddl
jg
mov
xor
pop
stc
divl
inc
push
mov
push
pop
mov
mov
shll
adcl
mov
aam
xchg
in
xchg
jmp
mov
lcall
xor
test
cmp
mov
dec
pusha
stc
fiaddl
and
jge
int3
and
mov
push
mov
xchg
jmp
cmp
lea
lea
push
xchg
mov
push
adc
mov
dec
mov
jae
rcrb
mov
insl
fld
adc
mov
ds
jnp
xchg
mov
sub
or
into
push
pop
mov
fdivs
pop
dec
xlat
add
adc
jle
sbb
inc
sbb
lods
je
into
mov
mov
das
pushf
mov
xlat
dec
pop
pushl
sub
test
pushf
xor
lret
xor
ss
scas
mov
lret
push
stos
aaa
xchg
fwait
push
mov
cmp
add
inc
les
jg
shrw
pusha
ret
sub
movsb
std
stos
jecxz
cld
insb
jl
dec
push
xor
jbe
clc
mov
fucomip
sbb
add
cmp
bound
add
aam
lds
jge
mov
sahf
and
and
inc
cmp
jmp
call
pop
imul
sub
loope
jns
or
jg
xchg
fs
je
mov
in
out
adc
jne
adc
jmp
adc
sbb
lds
add
jecxz
inc
lcall
mov
adc
jmp
pop
sahf
fcmovu
and
inc
dec
and
mov
scas
lcall
sub
testl
dec
into
dec
mov
push
outsl
movsb
fmull
into
cli
jne
and
incb
push
adc
in
sbb
shr
lcall
dec
repz
stos
jae
push
adc
outsl
in
mov
inc
jge
push
mov
push
mov
test
js
lret
vucomisd
lea
inc
insl
fisttps
imul
cmp
ja
add
popf
fcoml
adcb
pop
hlt
sti
mov
sahf
popf
lret
jns
nop
mov
add
dec
cld
mov
cmp
mov
dec
nop
or
call
sub
int
jp
add
xchg
movsb
das
lahf
dec
mov
call
orb
outsb
jne
xor
iret
imul
lods
test
movq
dec
lods
fwait
call
fstpt
jbe
add
inc
push
movb
jp
fidivs
daa
pusha
js
xlat
jo
iret
xchg
cmp
sub
sub
cmpb
cmpsb
xor
cmp
sub
jge
push
xchg
rol
xor
adc
adc
ret
nop
daa
sahf
arpl
jle
lods
clc
test
pop
dec
sbb
mov
jp
imul
enter
or
lret
fisubrs
pop
sahf
sbb
movsb
sbb
mov
rorl
cmp
int3
mov
lock
repz
sbb
loop
sbb
pop
or
sti
push
or
dec
repz
test
push
pop
iret
mov
cmp
mov
fsubrs
sbb
shlb
cs
dec
mov
sti
xchg
es
bound
and
ljmp
imul
cmp
cmp
cmp
lahf
cld
in
in
cmp
int
or
aas
imulb
inc
pusha
daa
adcb
popf
and
ret
push
popa
push
and
stc
call
xchg
ret
ljmp
mov
out
insb
xchg
mov
jmp
ds
jno
out
sbb
pop
pop
enter
xchg
addl
jbe
ret
dec
mov
shlb
jns
inc
sbb
xchg
jbe
mov
mov
pop
add
cld
rclb
loope
mov
ret
leave
xor
push
jge
push
mov
sub
sub
testl
or
aas
mov
mov
xchg
cltd
and
int3
sub
dec
loop
sub
je
mov
add
pushl
cs
in
cmpsb
and
dec
add
inc
mov
in
xchg
or
mov
stos
loope
std
popa
mov
jns
mov
aaa
bound
cmpsb
mov
stos
push
bound
movsb
mov
push
enter
fildl
cmp
lods
mov
fcomip
jecxz
testb
cli
out
jl
push
iret
mov
xchg
mov
pop
incl
outsb
jne
fdivs
notb
cmpsl
sahf
sub
stc
add
stc
mov
jns
sub
or
mov
hlt
outsb
shrb
and
inc
add
in
das
pop
sbb
mov
lods
cmp
test
aaa
aam
inc
cmp
mov
adcl
cmp
mov
mov
jg
shrl
repnz
jne
jno
mov
in
pop
xchg
in
inc
or
icebp
dec
or
and
cmpsb
mov
inc
xor
stos
inc
and
inc
xchg
rorl
xor
sbb
int3
adc
add
fcomi
lret
fisubrl
outsb
into
scas
lcall
mov
add
mov
sbb
or
mov
sti
jnp
pushl
cltd
dec
add
aad
jl
or
jne
xor
jmp
and
adc
movsb
pop
mov
mov
test
or
jns
sub
mov
pop
push
imul
pop
aas
mov
rclb
add
lea
sub
shll
xchg
and
icebp
push
mov
xchg
push
cmc
mov
pushf
scas
mov
in
call
cmp
pop
inc
jp
push
pop
add
lock
add
pop
aaa
ret
pop
shl
and
pop
imul
mov
ds
jno
popa
sbb
enter
scas
pop
mov
push
scas
fadd
fbld
xlat
inc
push
sub
jmp
sti
out
stos
ljmp
cmp
mov
xor
jbe
fcoms
imul
pop
push
mov
mov
lods
dec
lret
mov
pop
mov
dec
in
shll
cmpb
pusha
scas
xor
inc
xchg
aam
xchg
cltd
push
xor
dec
std
jae
ljmp
ljmp
loop
repz
shlb
and
xchg
movsb
pop
push
paddusw
mov
add
int3
scas
pop
subl
jns
mov
cmp
test
outsb
sbb
lret
iret
data16
jg
mov
ljmp
sbb
test
mov
lret
call
jp
mov
add
mov
pop
push
lahf
in
xchg
lods
sub
lahf
rclb
fwait
lcall
dec
bswap
push
das
cltd
daa
test
cli
call
cmp
or
mov
fcompl
mov
loop
add
sbb
jle
or
sub
in
inc
cmpsb
jae
inc
sub
loope
icebp
inc
outsl
aad
sub
adc
in
mov
jnp
or
pop
push
and
or
mov
clc
mov
push
or
inc
mov
push
pop
mov
mov
xor
xchg
in
push
push
and
push
add
outsl
das
cmp
jns
or
mov
push
sbb
pop
lret
das
adc
fbld
xchg
fldcw
mov
mov
pop
mov
imul
nop
insl
inc
dec
cltd
pushf
inc
jmp
sbb
or
mov
or
mov
sub
push
dec
ljmp
repz
xchg
mov
or
sub
imul
fistps
in
push
and
pop
lahf
aaa
fildl
adc
ret
and
lea
pop
push
push
outsb
cmp
data16
mulb
ret
xchg
dec
mov
arpl
out
fsubs
pop
inc
push
cmp
cwtl
cltd
jnp
mov
out
sub
sbb
ret
mov
pop
out
js
mov
add
and
iret
iret
or
jnp
jecxz
imul
push
inc
ss
pop
sub
test
das
mov
jno
repz
insl
jne
divl
mov
fisubrl
hlt
loope
cs
adc
lds
shll
nop
xchg
sbb
sbb
mov
test
and
cmpsb
mov
dec
pop
lret
mov
mov
ja
aad
ret
cmp
pop
movsb
and
xchg
xchg
sub
mov
or
nop
out
lcall
outsb
mov
push
out
sub
scas
loop
mov
dec
test
pushf
int
mov
leave
inc
mov
push
push
negl
cli
cs
inc
adc
mov
xchg
insb
cmp
dec
leave
je
pop
cltd
stos
mov
mov
out
sarb
pop
xchg
out
pop
mov
cmp
push
adc
scas
stos
mov
pop
dec
adc
cmp
push
jmp
pop
insb
cmp
lds
xor
gs
nop
xchg
adc
hlt
jl
and
imul
mov
mov
rcll
lock
mov
and
xlat
pusha
les
pop
mov
aaa
cltd
and
inc
aas
or
xchg
pop
push
and
push
pop
inc
out
and
mov
and
cmp
cmp
clc
stc
pop
jbe
jo
lahf
mov
mov
mov
or
push
scas
outsl
push
push
mov
arpl
pop
cli
mov
ss
xor
or
cmp
push
jl
decl
xor
rcrl
mov
push
cmp
add
cwtl
outsl
ja
inc
add
mov
stos
push
sub
outsb
ds
inc
push
inc
in
ret
ljmp
inc
in
or
shll
iret
xchg
filds
lock
add
add
jg
jecxz
addb
lea
ja
aad
mov
mov
inc
inc
popf
dec
fidivrl
mov
cmp
cmpsb
xchg
sbb
aaa
push
scas
inc
and
fnsave
test
push
mov
jmp
xor
lahf
mov
jmp
addl
ret
pop
out
mov
add
mov
adc
fisubrs
loop
cmp
pop
push
call
nop
cwtl
or
xor
std
mov
add
fwait
lahf
ss
adc
mov
inc
jo
inc
pop
dec
sbb
cmpsb
daa
into
das
sub
adc
fidivrs
cmp
mov
cmp
xor
jmp
pop
sub
mov
insl
xchg
inc
add
mov
push
out
add
dec
push
xor
inc
dec
push
cmp
sti
je
cmovb
clc
mov
push
mov
outsb
mov
xchg
jl
je
sbb
subb
pop
popf
stos
je
into
jmp
lret
xlat
cmpsb
stc
div
loopne
jns
add
repnz
mov
cmp
and
xor
sub
mov
pop
xchg
aam
inc
jo
addr16
sti
jge
mov
or
sti
stos
lea
xlat
pushf
out
lea
adc
fcompl
mov
mov
ret
pop
sbb
sub
cmp
or
stos
shlb
cmpsl
sub
xchg
rclb
push
jge
fdivl
shll
roll
out
and
jmp
mov
insl
mov
mov
inc
in
mov
das
push
cmp
pop
in
sbb
xchg
in
fisttpl
stos
dec
in
cli
outsl
push
pop
notl
and
loope
rcr
outsb
shrl
dec
ljmp
popa
es
test
idivl
cltd
xchg
sbb
xor
or
and
adc
or
aam
repz
lcall
xchg
js
movsl
pushf
xchg
popf
out
push
insb
rorb
fstps
test
hlt
xadd
sbb
lea
out
adc
jp
mov
inc
dec
dec
xor
test
int
aas
dec
xchg
pop
test
sub
pop
mov
fdivl
jns
push
jne
in
or
lcall
jne
sbb
aaa
add
ret
cs
pop
movb
mov
dec
mov
dec
outsb
negl
mov
fmulp
pop
pop
pushf
push
enter
dec
movsbl
cmp
xor
dec
daa
xchg
xlat
iret
sbb
and
adc
fsubrl
dec
inc
test
cmp
jne
bound
sub
test
int3
xchg
cli
pcmpeqb
cmpsb
cmp
aad
add
and
fiaddl
xorl
scas
cmp
fldenv
inc
mov
andb
sahf
ret
insb
xchg
mov
shll
inc
pop
sub
pop
int3
cmp
repz
xor
xor
jae
sbb
dec
adc
and
sub
xchg
and
iret
int3
mov
addr16
mov
rorb
cs
adc
pop
outsb
push
adc
outsl
fdivl
cmpsl
jbe
add
inc
jecxz
sub
mov
or
push
das
mov
push
push
fcomps
lds
inc
in
int
fdivr
sbb
xchg
sbb
mov
in
mov
insl
loope
enter
repz
cmp
and
int3
fidivl
xor
movq
pop
dec
fildll
stc
jno
xchg
lds
movsl
jmp
scas
iret
aam
and
mov
push
loop
fwait
sub
fidivrs
lcall
mov
cltd
cmp
push
xorb
pop
or
jae
push
adc
cmpsl
inc
mov
xor
sbb
decb
int
sbb
mov
ljmp
mov
enter
mov
and
jo
push
jecxz
pusha
and
dec
mov
faddl
loopne
jl
loop
jp
subb
mov
popa
fucompp
dec
sub
jg
jecxz
mov
test
data16
jbe
adc
adc
cmpsl
sbb
rcrb
sbb
addr16
sbb
lock
in
ret
jne
incl
xor
xor
in
cmp
jae
mov
repnz
or
in
flds
movsl
cmp
int3
push
and
sub
scas
xor
jbe
sbb
mov
pop
pusha
fcmovne
out
ja
add
pop
mov
add
xchg
cmp
cld
setb
push
repz
sub
imul
movb
test
xor
or
mov
lret
orl
push
test
lret
mov
outsb
imull
sub
cwtl
imull
mov
int
ss
jnp
fimuls
aas
or
push
cld
shll
pop
cmpb
dec
push
shrb
push
push
out
ficompl
or
add
es
sbb
insb
jne
fisubrl
xor
rcrb
pop
int
dec
sbb
lea
xchg
xchg
std
cmc
jns
test
mov
mov
int
lahf
mov
lock
sahf
mov
jp
insl
pushf
aas
cltd
xlat
sbb
lock
xchg
pop
jbe
ja
cmpsb
push
std
arpl
inc
mov
std
xchg
test
outsb
xchg
add
mov
fwait
jle
push
cmc
lret
bound
ss
pusha
push
lret
inc
addr16
fwait
cmp
mov
ja
inc
dec
ss
adc
push
mov
jmp
leave
lods
jne
sub
push
jg
add
mov
push
mov
hlt
shrl
dec
jecxz
jo
loopne
popa
scas
jmp
and
mov
and
mov
add
aaa
and
jne
rorb
cmc
movsb
push
into
or
dec
jnp
cwtl
inc
outsb
and
lods
pop
dec
xchg
mov
je
mov
xor
stos
mov
and
xor
mov
in
sub
xchg
lds
dec
jge
adc
or
ljmp
cmpl
fisubl
rcrl
addr16
pop
hlt
push
pop
sbb
xor
mov
add
icebp
lock
lret
push
pusha
jnp
test
addr16
pcmpeqb
xchg
mov
dec
adc
push
fnsave
xor
push
cmpsl
xacquire
loop
pusha
std
push
adc
and
rcrl
dec
pop
stos
xchg
fmull
sbb
out
shll
add
or
and
fistpll
sbb
sahf
fsubrp
test
push
mov
jmp
popf
jg
clc
out
leave
mov
jb
leave
aaa
cmp
outsb
nop
mov
in
out
rclb
push
insb
xchg
push
std
cmpl
ficoml
sub
mov
lcall
lret
mov
aad
pushf
fcompl
jb
dec
mov
dec
popf
cli
shl
repnz
out
cld
xchg
lea
sub
dec
lods
or
mov
sbb
cmpsb
cld
pmaxsw
jge
mov
test
and
and
pop
sbb
jmp
jl
lcall
push
ljmp
mov
sub
rcll
push
push
adc
mov
mov
pop
mov
pop
ljmp
mov
push
sarb
cld
cmpsb
je
fisubrs
mov
ret
addr16
cmp
loopne
jmp
stos
movsb
add
add
in
idivb
ror
das
adc
cmp
jns
scas
mov
das
dec
fcomps
repz
sub
mov
xchg
sbbb
cmp
pop
xor
push
addr16
ljmp
fadds
mov
sbb
mov
inc
sbb
jns
ljmp
je
aam
pusha
insl
xor
and
pop
jae
in
inc
sbb
cmc
sub
pop
call
addr16
jbe
dec
sub
sub
adc
xchg
or
inc
nop
pushw
dec
and
test
test
int3
push
das
fidivrs
rorb
lds
movl
cli
insl
or
lods
lock
outsb
pop
mov
jne
mov
int3
movsb
push
cwtl
adc
enter
sbb
lahf
imul
popl
lahf
xor
aaa
ret
mov
inc
fdivrl
xor
jp
popl
lock
popf
dec
xlat
xor
jle
lea
ret
xor
inc
jmp
inc
dec
pop
stos
mov
cmp
lods
mov
mov
xchg
cli
jae
push
ret
dec
push
sbbb
aam
pop
xchg
mov
dec
mov
dec
das
xchg
mov
loope
sub
jecxz
imul
jnp
leave
xchg
mov
icebp
fnstcw
cwtl
stos
lds
imul
inc
xor
mov
aas
loopne
push
xchg
cs
push
mov
pop
ret
sti
or
adc
xchg
je
in
int3
xlat
xlat
sbb
pop
inc
adc
sbb
cmpb
adc
and
jne
sub
or
iret
xor
outsl
xlat
jp
dec
mov
sub
jnp
cli
add
aad
cmp
and
scas
mov
mov
cmc
push
mov
add
push
cmp
leave
fs
lret
jge
or
push
loope
push
stos
mov
and
xor
nop
jo
or
xchg
inc
arpl
inc
sbb
pop
or
cmp
jns
mov
xchg
mov
mov
es
shll
js
rclb
cmp
pushf
rclb
or
lcall
testb
out
jmp
cltd
popf
cmp
mov
imul
pop
aad
sub
arpl
add
aas
cmp
pop
inc
pop
cli
jno
shll
dec
sbb
jl
rcl
xchg
push
stc
jo
push
and
jne
inc
loope
nop
ja
dec
popa
ljmp
dec
adc
push
roll
aaa
icebp
mov
sbb
imul
jl
movsb
jno
inc
mov
leave
loopne
add
repz
push
jnp
je
jns
jp
cld
lret
ja
xlat
cwtl
sub
and
push
int3
out
and
movsb
lret
divl
fisubrl
mov
pop
lods
xor
fildl
loopne
mov
xor
subl
mov
movsl
or
call
or
pop
addb
or
jno
mov
mov
and
orl
js
sbb
xchg
fistpll
adc
inc
mov
movl
int3
outsb
rcrb
sub
in
ret
mov
pusha
ret
into
shlb
call
lret
fsubrs
mov
mov
mov
fisubrl
pop
or
jnp
inc
cwtl
daa
aaa
xchg
pop
or
jp
mov
rolb
test
pop
js
mov
mov
sbb
mov
lock
push
std
or
mov
hlt
rclb
push
dec
dec
ret
pusha
mov
cld
lcall
inc
jb
aaa
pop
data16
inc
push
or
mov
es
sub
sahf
inc
mov
add
pop
sub
repz
xor
test
imul
or
addr16
cmpsl
inc
xchg
push
mov
mov
mov
push
xor
sbb
movsb
xor
sti
inc
nop
dec
gs
imul
test
outsb
mov
mov
fsubl
sbb
insb
imul
pusha
sbb
daa
inc
pop
push
es
adc
test
fistpl
push
test
xor
cli
mov
push
jecxz
data16
dec
test
pushf
fldl
pusha
xchg
xorl
hlt
sbb
das
aam
adc
pop
mov
sahf
testb
in
or
fidivl
out
push
inc
pop
repnz
pop
cmp
or
sub
mov
inc
cmp
push
imul
in
out
or
sub
and
mov
shll
pop
ja
sbb
jp
pushf
fists
cmpsl
ds
loope
out
std
jmp
pop
inc
imul
jae
sub
xchg
add
push
pop
sbb
sub
js
inc
mov
out
inc
xchg
push
xor
lods
xchg
out
mov
cmpsl
fimuls
ja
mov
subb
pusha
imul
xchg
outsb
imul
adc
aas
inc
push
pop
addb
les
sbb
les
adc
ja
sarb
paddsb
loope
andb
cli
mov
arpl
jl
cmpsl
popf
add
xor
popa
xor
insb
push
mov
fnstenv
mov
addb
xchg
inc
aas
cmp
adc
pop
aas
cltd
sub
mov
pop
cltd
nop
jne
dec
dec
mov
cld
inc
das
iret
sbb
pop
inc
mov
out
push
or
cltd
adc
js
push
cmp
add
sbb
fsubrl
add
xchg
ds
sbb
out
outsb
out
lea
inc
loope
push
xchg
mov
jmp
cmp
cmp
xchg
movsl
lock
das
ljmp
pop
shrb
data16
das
movsb
ds
cmp
push
aam
inc
lret
movsb
push
ds
push
mov
sbb
sub
pop
addl
iret
scas
insl
push
inc
push
xor
inc
jp
notl
jle
xchg
mov
outsb
cmc
mov
mov
jo
imul
es
pushf
mov
out
sbb
add
test
imul
push
jno
mov
cld
mov
sub
shlb
cmpsl
ud2
adc
dec
cs
enter
loop
andl
or
mov
data16
mov
and
dec
ficoms
js
push
fwait
push
push
lret
arpl
stos
popf
push
xchg
push
mov
stos
jae
add
xchg
push
sbb
pop
jbe
mov
jge
div
inc
hlt
ficoml
pop
lcall
fidivl
mov
mov
sub
cmpsl
pop
dec
xchg
jno
ds
dec
movsl
popf
addr16
outsb
repnz
in
push
popf
or
cmp
inc
add
dec
in
call
movsb
test
add
pop
adc
jecxz
add
in
adc
aaa
sbb
xchg
int3
test
scas
dec
cld
pop
in
jl
mov
sub
sbb
adc
leave
data16
dec
inc
or
or
cmp
dec
or
testl
repz
cltd
jmp
mov
call
jb
mov
and
aad
ss
push
rclb
sahf
dec
jae
jbe
push
xor
push
xchg
jbe
push
push
aam
add
inc
and
cmp
push
pop
xchg
inc
aad
nop
xor
push
std
ss
mov
jae
aaa
dec
pop
push
fmull
sub
fimull
lahf
mov
lret
or
and
xchg
cwtl
jp
iret
mov
and
push
or
xor
add
mov
lods
sub
pop
test
mov
xor
and
enter
rol
filds
add
pop
mov
mov
ss
cmp
mov
mov
jo
or
es
subb
add
push
adc
and
aas
and
pushf
das
hlt
add
shrl
mov
or
popa
mov
out
pop
call
pop
movsb
ret
mov
jge
push
addl
and
sub
push
jge
inc
cmpsl
cmpsb
cld
int3
push
mov
inc
nop
fdivp
and
je
sub
push
je
adc
nop
scas
mov
xor
and
push
jge
flds
lcall
push
cmp
xor
lret
arpl
movsb
ret
dec
mov
jle
jg
lret
or
cmpsl
out
jno
push
sbb
mov
adc
and
inc
es
and
mov
icebp
cmpsl
rorl
pop
insb
sbb
pop
push
cli
andl
pop
fs
cmp
cltd
dec
lahf
sti
dec
or
sub
loopne
fwait
pushw
in
sbb
lock
enter
sub
fistl
inc
and
cmpsl
jb
or
and
push
jo
int3
mov
adcl
nop
test
xor
mov
push
iret
mov
aaa
jg
or
iret
ljmp
and
pop
jb
mov
mov
cmc
push
pop
inc
sbb
xchg
dec
cmp
mov
sbb
mov
in
lahf
add
dec
jae
mov
jle
xchg
dec
adc
sahf
xorl
sbb
jge
lret
lea
inc
xor
clc
jecxz
xchg
jle
pop
push
loop
outsl
loopne
push
arpl
shrb
jns
inc
test
xor
xor
test
int3
sbb
sub
sub
and
mov
dec
cmp
xor
aaa
lret
sbb
pop
cs
push
adc
xchg
mov
lods
add
inc
lcall
mov
inc
jmp
adc
nop
xchg
inc
adc
xacquire
sub
leave
test
push
outsb
bound
icebp
scas
jmp
mov
xchg
push
push
or
mov
std
mov
dec
outsl
xor
cmp
push
mov
and
inc
jnp
lock
cmc
fnstcw
xchg
call
cmp
push
mov
inc
cmpsb
dec
or
pusha
pop
enter
sub
mov
ljmp
aad
pop
and
inc
and
imul
btr
aad
xchg
testb
mov
sbb
mov
sub
shlb
mov
xchg
jne
xchg
fsubrs
hlt
hlt
jno
pop
sbb
mov
inc
loope
div
xor
or
enter
mov
int
mov
mov
adc
lahf
cltd
clc
mov
shrl
adc
or
pop
and
xor
stc
jl
add
sbb
fcoms
shll
jne
dec
dec
mov
popf
adc
icebp
ret
mov
pusha
xchg
cmpsl
pop
or
mov
sub
add
add
cmp
dec
fcmovu
lods
lret
add
dec
mov
sbb
lock
push
dec
cwtl
pop
mov
ret
push
andb
xchg
shl
mov
call
sub
cmc
cmpsb
leave
pop
sbb
divb
sahf
adc
adc
push
scas
sarl
pop
mov
cmp
daa
cltd
adc
lods
sahf
dec
xchg
repz
pop
or
loop
addr16
in
decl
out
jecxz
stc
clc
xchg
in
jne
jecxz
mov
sti
addl
divl
std
int
jp
cwtl
dec
cmp
aaa
cltd
mov
jle
inc
rcll
push
and
out
in
push
pop
push
fucomp
push
xchg
cmp
jmp
ja
sbb
scas
mov
mov
icebp
js
lds
lahf
mov
inc
mov
in
mov
mov
and
clc
cltd
insl
sub
mov
lods
sub
les
push
ljmp
in
lcall
popf
outsl
inc
ja
and
lahf
mov
pop
leave
out
jp
popf
jg
dec
enter
adc
xchg
jecxz
mov
loope
lea
push
mov
fcomps
punpcklwd
mov
mov
fnsave
jb
xor
scas
fs
push
shll
jecxz
pop
add
ljmp
dec
jnp
mov
sarb
or
add
xchg
xchg
sub
push
and
mov
ljmp
leave
pop
or
xchg
outsl
mov
cmp
rolb
mov
inc
xlat
lcall
sahf
adc
pop
pop
insb
addr16
mov
pop
ret
push
stos
sbb
adc
xchg
ds
add
clc
adc
cmp
xchg
adc
pop
xor
outsl
ret
sub
aad
dec
ss
pop
out
shrb
popf
dec
arpl
nop
and
in
adc
mov
sbb
out
adc
insb
gs
mov
popa
shrl
dec
in
jg
bnd
xchg
dec
cmp
pop
xchg
jge
xchg
sahf
jo
adc
aas
mov
movsb
mov
js
cmp
sbb
pushf
aaa
popa
scas
divb
sub
pop
stos
imul
and
int
sbb
in
or
mov
fwait
mov
inc
enter
fldcw
mov
mov
fstps
stc
loope
out
stos
fstps
jae
mov
cmpl
or
jp
push
cmp
jb
les
xlat
or
cmpl
xor
push
sub
sahf
sbb
cmp
cmp
outsl
aad
mov
cmp
shll
hlt
inc
int3
pop
sbb
in
xchg
sbb
add
lret
cmp
jmp
xchg
mov
or
testl
push
ljmp
pop
xor
sub
jne
jo
push
adc
jo
in
xor
add
add
dec
cmp
jecxz
or
and
cmp
notl
enter
mov
xchg
xor
xorl
test
data16
stos
js
sbb
enter
scas
push
sbbl
push
sub
sub
out
sbb
sbb
adc
and
mov
inc
shlb
and
pop
hlt
mov
push
pop
jo
sarl
mov
mov
out
mov
xor
std
roll
push
sbb
test
ljmp
nop
jb
pop
push
ljmp
and
pop
dec
mov
sub
insb
mov
pop
jl
dec
ljmp
outsb
iret
push
add
adc
mov
adc
clc
mov
or
hlt
icebp
xchg
sub
push
pop
cmc
notb
pop
dec
das
adcl
les
lods
ret
pop
fmulp
dec
jle
add
mov
popf
clc
stos
into
push
mov
das
popa
mov
paddd
loopne
in
call
mov
add
add
repz
sbb
es
test
les
std
fucomi
cmpsb
loope
xchg
add
and
andb
in
dec
dec
jle
add
or
movl
sub
fs
xor
je
int3
push
dec
fucomi
mov
mov
fistps
repz
cli
rcl
mov
push
inc
push
mov
add
out
test
inc
mov
movsb
add
clc
sbb
popa
pop
pop
and
mov
mov
cmp
leave
in
in
cwtl
jnp
icebp
xchg
movb
xchg
sub
mov
pop
inc
add
pusha
sbbl
je
fwait
scas
mov
fsubs
fwait
sbb
mov
xor
jmp
inc
add
lcall
fimull
inc
sbb
int3
fists
sbb
dec
imul
lahf
jbe
lods
xchg
stc
xor
repnz
lock
stos
cmp
cwtl
clc
fldl
mov
stc
cmpsb
lret
in
adc
xlat
jb
daa
pop
test
into
or
dec
in
int
in
repz
or
mov
int
xor
pop
mov
hlt
xchg
mov
jo
testl
dec
lock
mov
mov
or
stos
lods
test
clc
notl
push
and
subl
push
fadds
cmp
jnp
cld
ret
mov
clc
xchg
dec
or
xchg
sti
testb
test
mull
and
iret
mov
mov
push
push
pop
jns
out
fsubs
sbb
inc
loop
mov
int3
adc
add
pop
sub
add
das
fsubl
call
push
loope
das
loopne
jmp
cltd
cmp
add
sub
aaa
gs
xorb
sub
iret
mov
xor
jb
cli
popa
add
mov
cmpsb
xor
sarl
aas
pop
cltd
push
addr16
in
xchg
jo
cwtl
andl
int
unpckhps
jg
dec
add
adc
xor
xchg
test
mov
imul
mov
pop
sbb
test
ds
inc
pop
out
add
fdivrs
jb
jmp
hlt
fldt
cmp
pop
addr16
mov
sti
in
push
or
inc
cmp
imul
in
xchg
in
lods
cli
pop
mov
int
or
out
dec
shr
sbb
push
pop
stos
mov
sbb
cli
and
xchg
sbb
popf
scas
stos
pop
rorl
cmp
std
repnz
test
fisttpll
mov
push
pop
or
mov
and
adc
jg
test
inc
or
xor
in
push
call
ljmp
adc
or
push
ret
mov
test
jb
push
lds
or
or
mov
jno
sub
shlb
popl
or
out
cmp
or
cmp
test
mov
jbe
mov
jbe
mov
mov
inc
pop
adc
inc
or
out
lods
stos
xor
jns
sub
xchg
cmpsl
ja
out
adc
add
sbb
mov
lds
or
jo
rcrl
fisubrl
jns
lea
mov
testb
inc
pop
mov
out
adc
pop
mov
imul
lcall
sub
out
dec
jp
inc
sti
test
loope
ds
sbb
sar
popa
ds
cmp
cmp
or
dec
mov
adc
or
inc
jecxz
repnz
arpl
pop
rorl
pop
repz
xchg
aam
xchg
sbb
push
in
mov
iret
pusha
adc
add
movb
int
mov
jns
mov
test
sbb
clc
jbe
and
push
xor
jne
adc
xchg
inc
fcoms
movsb
add
mov
push
dec
imul
ret
adc
jle
push
cmp
into
inc
rcll
mov
nop
sbb
push
fdivrl
xor
push
mov
sub
or
add
adc
lods
cli
scas
cwtl
jb
mov
jb
xchg
add
bound
mov
dec
clc
out
lret
fs
pop
fisubrl
cwtl
pop
jmp
fadd
ja
movd
repz
push
adc
mov
inc
loopne
xchg
push
jp
mov
or
pop
inc
pop
aad
int
push
ret
cmpsl
dec
push
stos
xchg
or
pop
dec
lds
fiaddl
adc
outsb
gs
jmp
mov
xchg
sub
pop
mov
fmulp
or
mov
xorb
pop
and
test
es
xchg
rol
imul
scas
sbb
lds
fadds
xorb
fsubrl
xchg
pop
xor
xor
movsl
js
mov
cmp
adc
cmp
jae
add
mov
add
popa
add
mov
sti
push
mov
lods
jmp
nop
dec
dec
popa
test
int3
adc
jo
or
jb
xor
cmp
dec
or
and
loopne
xchg
cwtl
dec
mov
out
pop
imul
mov
test
cs
imul
and
mov
push
shl
or
sbb
adc
ficomps
mov
fstps
add
adc
inc
mov
push
aaa
lret
xor
aam
mov
scas
ffree
outsb
sti
mov
inc
popa
push
pop
mov
mov
dec
and
or
fistl
xor
push
jmp
leave
sbb
pushf
in
pop
mov
repnz
stos
popa
push
push
test
rcr
lret
pop
ss
sti
decl
pusha
cmp
aam
jae
aas
loope
das
pop
sti
popa
loop
stc
jns
cld
jecxz
daa
or
popa
xchg
dec
fcmove
xchg
mov
add
outsl
repnz
in
ret
enter
lods
push
arpl
das
jne
pop
cmp
or
testl
push
test
pop
fnstcw
lock
popa
add
stc
xor
add
jge
pop
adc
push
ljmp
loope
pop
cmp
jle
cmp
sub
mov
ret
ret
push
push
push
xorb
mov
nop
cli
mov
sub
test
dec
daa
xor
push
in
mov
das
imul
pop
cmc
jmp
or
sub
or
push
sarb
add
mov
jmp
sahf
mov
or
and
fsubl
jns
jle
cmc
sbb
or
imul
fisttps
out
ja
pop
test
ret
cmp
or
pushl
jb
cmpsb
push
cli
xchg
cmp
jae
lret
lea
push
cmpsl
ret
sbb
inc
adc
mov
push
push
fdivrs
or
ret
and
in
add
sub
rcll
pop
iret
xchg
dec
scas
sbb
in
inc
cld
push
mov
inc
pop
dec
add
int
cli
lds
mov
ljmp
jle
jb
push
jle
in
gs
cwtl
cmpsb
dec
sahf
lret
inc
mov
das
mov
ja
mov
fbstp
push
repz
inc
sub
xor
call
gs
nop
dec
sub
push
adc
xor
push
mov
shl
jno
dec
lret
mov
jo
sbb
push
xor
xchg
int3
cld
subb
stc
outsl
and
sarl
cli
stos
or
stc
mov
out
add
icebp
mov
adc
pop
cmp
lret
cmpsb
push
dec
shlb
movsb
pop
push
cld
in
popf
sub
out
insb
fdivl
addl
inc
jecxz
pop
lret
lret
push
and
xchg
pushf
xchg
cmp
rcll
mov
mov
ss
xchg
sub
jns
xor
mov
jmp
jle
ljmp
js
sbb
into
lock
mov
test
cmpsb
in
dec
stos
pop
rclb
cmp
cmp
ret
enter
int3
mov
push
popa
mov
idivl
insb
and
adc
scas
or
adc
insw
out
push
fdivs
jae
xchg
mov
pushf
mov
lds
mov
inc
mov
pop
cmp
mov
loope
jecxz
stos
mov
in
mov
jecxz
mull
int
aas
jl
mov
and
ffree
push
inc
and
ret
test
lock
aaa
xchg
adc
xor
test
popa
cmp
in
sti
xchg
aas
outsl
mov
cmp
loop
dec
add
sahf
sbb
into
push
jge
fists
popa
jae
sahf
adc
loope
sti
push
repnz
xchg
ljmp
pop
das
fucomip
cld
pop
inc
je
inc
mov
jae
je
add
in
repz
inc
jne
ljmp
ljmp
mov
sbb
dec
inc
addr16
enter
inc
out
adc
adc
sub
mov
popf
push
mov
adc
inc
mul
loop
mov
sbb
les
pushf
je
divl
popa
and
or
dec
inc
les
out
push
jnp
and
in
clc
ss
xchg
add
adc
ljmp
pop
pusha
pop
imul
push
insb
pop
stos
xorl
dec
fwait
xchg
testb
xchg
jg
mov
popa
xor
fwait
jo
mov
xacquire
inc
mov
arpl
sbb
int
jnp
xor
xchg
daa
pop
sub
loope
in
cmp
insb
icebp
loope
int3
inc
add
iret
inc
lods
mov
clc
sub
xlat
movsb
in
imul
popa
or
nop
and
xchg
mov
fwait
jae
fadd
outsb
xchg
mov
pop
icebp
in
ljmp
mov
xchg
cmp
xchg
and
jno
insb
dec
mov
test
pop
hlt
sub
lock
lods
jge
mov
mov
push
sub
cmp
xlat
and
inc
outsl
push
sub
push
test
aas
iret
pop
rcrb
imul
and
gs
dec
divl
test
lods
sub
mov
repz
jno
cmp
push
stos
mov
adc
mov
sti
jmp
adc
sbbl
cmp
mov
fisttps
lcall
push
xor
shrb
stc
mov
dec
fisubs
outsl
sbb
and
xor
fimull
adcl
sub
xorb
outsb
shrl
pop
cli
add
or
and
and
sbb
lds
mov
in
int
and
jno
into
inc
fs
inc
cmp
pushf
stos
rorb
fsubl
and
jb
inc
xor
testb
sub
cmp
mov
lods
push
inc
aas
idivl
stos
test
pusha
leave
adc
pop
rorb
fisttpll
in
fcmovbe
sub
mov
inc
push
add
sub
out
js
or
jge
xchg
ljmp
jae
push
xor
add
push
pop
out
pop
icebp
fcomps
mov
adc
and
testb
xor
add
push
ret
sar
fistpll
mov
mov
jbe
cld
sub
das
inc
push
and
fnstsw
adc
and
outsb
stos
add
lcall
mov
sub
jp
and
insb
ja
lcall
or
sarb
call
pop
and
adc
mov
jmp
pop
repnz
scas
mov
sbb
and
mov
lret
jle
or
push
lea
out
jns
in
push
hlt
psubd
jne
out
aas
int3
into
cmp
leave
add
xchg
jl
jo
xchg
into
push
xchg
dec
cmpb
aaa
mov
outsb
movb
and
call
in
cmp
sub
mov
and
xor
sbb
mov
inc
jp
pop
mov
xchg
stos
sbb
into
add
adc
mov
lcall
lods
xchg
add
scas
test
je
jns
fnstcw
dec
push
cmc
and
mov
jmp
jp
inc
pusha
adc
xor
les
inc
pusha
xchg
jns
mov
dec
loope
dec
push
mov
pop
test
inc
adc
sti
out
scas
insb
or
or
andl
sbb
push
sub
mov
sarl
lret
mov
fwait
leave
rorl
or
jle
cmpsl
lret
add
rolb
fs
inc
sub
imul
pusha
mov
loop
std
iret
jno
bound
hlt
push
cwtl
cmp
aad
add
stos
push
cltd
mov
dec
jle
and
jmp
ret
push
int
jg
fcmovnbe
iret
sbb
fldcw
testl
adc
pop
adc
dec
sarb
cwtl
popa
fsubrl
icebp
and
cld
push
outsl
iret
jl
sar
mov
aas
adc
popf
xchg
push
out
and
mov
jge
jge
shr
pusha
xor
adc
mov
xchg
sahf
and
mov
mov
aas
jae
lea
jnp
mov
pop
imul
sub
sbb
cmpsb
dec
and
aaa
mov
in
subb
sub
xchg
outsb
xlat
mov
cltd
pop
mov
xor
push
mov
lods
fcoml
movsl
and
cmp
xchg
into
fcompl
jl
je
jns
mov
lds
sub
bnd
mov
cmp
mov
jecxz
sbbb
jae
xor
or
inc
inc
add
push
pop
dec
lds
pop
mov
fiadds
mov
adc
fistps
das
int3
scas
cwtl
xlat
sti
dec
scas
jnp
add
sarb
outsl
and
jle
jmp
xor
sub
sti
cwtl
lds
add
daa
push
imul
jecxz
xorb
aaa
cmp
fdivl
stos
fucomip
pop
pushf
and
lds
jns
inc
clc
or
addr16
hlt
rcrl
inc
fdivs
mov
push
fs
test
je
test
cmp
in
repz
pop
aas
movsl
aad
outsl
call
or
mov
and
push
shl
enter
sub
fcmovnb
outsl
adc
arpl
sub
mov
std
ljmp
lea
adc
mov
jne
nop
lods
aam
add
mov
sub
lea
pop
cmp
fwait
mov
dec
test
or
push
nop
aaa
out
dec
jmp
fisttps
ja
sbb
jns
stos
add
push
sub
dec
or
cmp
xchg
pop
into
in
sub
fists
je
xchg
daa
movsb
js
and
cmp
rorl
shrl
inc
cwtl
mov
xchg
mov
arpl
loope
mov
outsb
rolb
sbb
and
repnz
bound
pop
and
dec
outsl
jecxz
mov
pop
and
sbb
ljmp
mov
add
jg
dec
push
nop
push
xchg
inc
call
cmp
mov
add
addr16
test
add
jl
in
jno
ds
sbb
sbb
call
stc
dec
fstps
cmpsb
hlt
pop
pop
sarb
dec
push
xchg
cltd
mov
mov
pop
jae
iret
adc
xchg
fwait
ret
or
bound
aad
fnstsw
inc
lea
fmuls
push
loop
ljmp
mov
mov
icebp
sub
push
dec
mov
push
or
push
hlt
arpl
mov
xor
mov
hlt
cs
icebp
sar
sub
or
ljmp
sti
push
lea
mulb
mov
dec
jo
js
mov
stc
das
mov
jns
test
xchg
aas
mov
mov
sbb
xor
rolb
mov
mov
inc
movsb
jns
jns
jnp
ja
pop
shrb
and
movsb
addr16
xchg
cmc
mov
in
ds
dec
incb
xchg
sahf
fimull
xchg
sub
cmp
adc
ja
push
cmp
fucom
inc
arpl
js
xchg
adc
rcrl
dec
sub
push
mov
lods
mov
loop
fwait
scas
mov
inc
cmc
jg
shrb
mov
ret
fdivl
push
adc
cltd
push
test
movl
mov
pushf
or
es
mov
mov
ficoms
xchg
and
jl
out
sbbl
mov
push
bound
push
cmpsb
mov
enter
cmp
out
push
jl
in
add
sarb
lcall
int
xor
mov
cmp
mov
inc
add
call
mov
inc
cltd
icebp
jmp
dec
inc
dec
mov
pop
cmp
jno
inc
xor
adc
dec
leave
sub
outsb
xor
divb
stos
shl
pusha
sbb
test
add
daa
fisttpl
pop
movsl
adc
mov
add
stc
inc
and
faddp
loop
sbb
pop
sbb
mov
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
clc
loop
lret
jno
inc
test
mov
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
or
lret
std
mov
loope
inc
mov
ds
loop
flds
sbb
insb
jns
lods
xchg
roll
ss
outsl
push
out
jb
inc
test
dec
loope
xor
incb
jge
inc
dec
cmc
push
mov
stos
mov
xor
shrl
jl
lock
pop
out
cmp
dec
iret
sbb
inc
cmp
mov
dec
jae
sbb
cmc
push
mov
dec
popf
add
enter
sarl
pop
sub
pop
orb
xchg
pop
sti
dec
pusha
fiadds
pop
stos
shrb
loopne
inc
test
mov
outsb
lret
jb
inc
xchg
mov
sub
jb
inc
test
or
mov
sub
pushf
lock
test
or
jbe
hlt
inc
xchg
cwtl
dec
or
mov
push
test
mov
sub
jb
inc
test
mov
sub
and
inc
test
mov
inc
test
mov
sub
jb
push
test
movsl
mov
inc
test
mov
test
or
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
add
test
mov
cmp
jb
xchg
sbbl
es
or
in
xchg
out
dec
or
cmp
inc
fistps
mov
sub
jb
inc
test
xchg
mov
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
jb
inc
test
mov
sub
hlt
inc
scas
cmp
lods
fwait
lahf
ret
sub
insl
jl
out
stos
lcall
mov
sbb
jmp
pop
xchg
fcoms
sbb
scas
loopne
in
xchg
das
mov
data16
xor
stos
loope
out
add
push
and
jbe
inc
out
pop
sub
lock
cs
mov
adc
bound
paddd
jp
jge
mov
jbe
incb
inc
or
cmpsb
int3
lods
jecxz
test
cmp
lods
or
or
add
and
push
out
add
and
mov
dec
fwait
cmc
loopne
mov
push
mov
pop
add
lret
adc
aad
test
lds
loope
lcall
out
xchg
jle
in
xor
sub
mov
stos
iret
jbe
push
and
cli
add
adc
pop
push
stos
jae
xchg
loop
dec
cltd
sub
xchg
mov
cmpsb
cmc
sub
dec
mov
jl
cli
mov
add
cmp
dec
lcall
mov
insl
jl
or
or
test
lcall
sub
push
stc
pushf
into
adc
sti
sbb
fists
pop
les
jnp
or
daa
shlb
adc
sarb
sbb
xorl
popf
pop
cmp
repnz
call
xchg
roll
ja
jne
stos
aaa
mov
lods
add
jp
in
jno
adc
repz
pop
adc
add
dec
mov
mov
add
xchg
sbb
mov
adc
or
mov
xchg
xchg
xchg
pusha
js,pt
dec
jmp
jb
and
and
add
mov
jno,pn
mov
push
push
cmp
sti
lods
adc
or
ds
pusha
sbb
sub
mov
push
ljmp
push
sarl
pop
or
xor
sbb
mov
fstl
adc
ret
int3
inc
mov
out
sub
xor
adc
adc
push
mov
das
xor
cmp
dec
push
fimuls
or
mov
aaa
into
mov
push
mov
into
je
jg
push
aad
rcrl
mov
xlat
push
in
pop
outsl
mov
pop
xor
add
add
pop
xchg
jecxz
xor
cmp
mov
cmp
call
sub
cmp
int
test
push
pop
sub
ljmp
imul
jne
mov
scas
movsb
cmpsl
int
je
adc
pop
add
push
xor
repnz
movsb
add
push
inc
lcallw
cmpsl
mov
mov
cmp
lods
pop
adcb
scas
orb
xor
in
jl
cltd
ret
dec
rcrl
stc
jl
loop
test
inc
mov
fildl
mov
mov
shlb
cmp
xlat
data16
in
subl
add
xor
jge
insb
cs
mov
sarl
rolb
in
adc
mov
sbbb
popa
mov
push
and
sbb
enter
pusha
bound
xchg
test
fcoml
movsb
lret
fnsave
popa
daa
iret
push
rol
add
xor
dec
mov
mov
cltd
hlt
mov
sarl
push
or
cmpsb
filds
dec
and
mov
inc
jecxz
mov
jl
imul
lahf
push
sub
or
mov
xchg
jg
sbb
jg
pop
inc
cwtl
push
imul
ret
outsl
stos
ss
cmc
or
sub
sti
adc
mov
jne
mov
adc
lret
xchg
ficoml
jo
insl
pop
cmpsl
fildll
sbb
mov
mov
sbb
push
in
cltd
dec
stos
or
or
rcl
mov
or
popa
in
or
jae
and
enter
sub
stos
mov
stos
mov
pop
xchg
dec
or
call
enter
insl
gs
xchg
mov
pop
pop
out
ljmp
inc
data16
cmpsl
orb
shrl
in
aas
xorb
push
cmpsl
loopne,pt
pop
cld
dec
sub
xor
xorl
sbbl
jl
into
inc
les
nop
push
jae
pop
scas
cmp
mov
jae
stc
scas
ficompl
ret
mov
push
hlt
and
aas
cld
dec
pop
dec
stc
test
aam
inc
dec
fsubrs
cmc
mov
popf
jge
mov
or
movsb
mov
cmp
std
mov
inc
fdivrl
or
rorl
cs
jl
outsl
xchg
scas
repz
adc
or
pop
inc
sub
pusha
and
call
fldenv
aaa
and
fxch
fisubrl
cmc
add
mov
hlt
mov
mov
xchg
sbb
xorl
or
lret
adc
push
cld
sbb
movsb
jp
jbe
out
loope
pop
pop
loope
fimuls
jnp
mov
or
mov
rorl
push
jno
push
xchg
idivb
cmpsb
imul
jo
push
jae
sub
fs
sub
ret
add
rorb
pop
adc
jnp
insl
push
mov
ret
pusha
mov
incb
outsl
lods
cwtl
mull
lea
pop
imul
into
sbb
scas
cmp
mov
mov
mov
clc
dec
lods
inc
ret
jle
push
xor
push
lret
pop
sbb
xlat
dec
cmp
mov
jno
loopne
push
rol
inc
dec
lcall
rep
and
mov
ljmp
jg
or
cmp
xchg
ljmp
mov
inc
inc
sbb
pop
dec
push
xchg
mov
dec
enter
jecxz
fildl
insl
inc
mov
in
adc
popa
lret
mov
inc
push
xor
adc
inc
imul
add
mov
loope
loopne
fisubrl
xor
add
in
int3
adc
push
xchg
mov
bound
mov
sbb
sub
jge
jl
rol
push
sub
inc
decb
sbb
push
arpl
mov
adc
push
jb
cmpsb
xchg
mov
hlt
scas
lds
fs
div
test
in
xor
push
mov
pusha
mov
mov
sub
stos
test
test
pushf
pop
int
xor
xor
iret
imul
adc
sub
push
jp
das
lds
pop
pop
jecxz
or
or
inc
inc
out
loope
insb
int
cmp
lock
insb
shlb
add
scas
lret
and
xlat
push
push
xor
std
out
mov
sbb
or
jae
fdivl
repz
gs
in
jg
push
push
mov
mov
stos
enter
fdivs
prefetch
xchg
test
jmp
inc
jle
add
aam
subl
jl
xchg
pop
xchg
add
outsb
jo
and
and
hlt
ds
shll
repz
pop
mov
mov
lret
xchg
jmp
out
aas
repz
nop
or
scas
jg
pop
push
xchg
out
sub
jb
fstpl
jl
dec
clc
loopne
pop
mov
inc
test
pop
push
fnstsw
add
push
push
adc
pushf
out
xor
cltd
lcall
cmpsl
dec
lods
movups
dec
fadds
test
push
stc
in
movsb
cmpsb
ljmp
push
cmpsb
mov
dec
sub
push
aam
adc
loopne
mov
shrl
fimull
pop
sbb
mov
test
ss
jo
in
inc
ja
push
mov
sbb
mov
in
dec
mov
lcall
js
and
inc
jmp
xor
loope
sbb
mov
mov
cmp
add
dec
mov
add
add
dec
js
outsl
sbb
xor
or
fisubrl
adc
arpl
mov
xlat
jne
mov
jge
push
loop
sub
lcall
inc
jb
push
push
fs
int
jno
movsl
push
mov
cs
push
scas
jecxz
cs
push
in
cmc
adc
dec
daa
out
andb
out
sub
mov
and
jns
orb
sbb
mov
sahf
jo
fistpl
fs
fdivrp
rolb
sbb
dec
mov
sbb
pop
sub
cmp
js
push
jmp
cmpsb
dec
cmp
imul
jb
pop
and
loop
ret
or
cmp
iret
sub
pop
lock
xor
sti
daa
mov
cmp
fldt
jbe
fsts
xchg
dec
jge
sbb
mov
pop
sub
mov
rcl
or
stos
divl
mov
pop
dec
movsl
jnp
rcrl
cmpsl
adc
pop
fstpl
leave
lcall
push
ljmp
outsb
jbe
sub
push
xor
aas
jge
jnp
int3
adc
pop
sub
mov
pop
clc
mov
lea
and
lret
ja
outsb
repz
sbb
test
in
add
fisttpl
mov
mov
sub
gs
lret
sub
cmpsl
and
mov
cmp
xor
test
and
pop
arpl
cmp
cmp
pop
push
jns
and
lret
lcall
add
adcb
test
adc
jmp
pop
testl
mov
sbb
jnp
cld
fs
subl
cmp
aas
xchg
mov
inc
push
sbb
xor
inc
addr16
jns
ret
out
into
test
adc
and
notb
leave
push
adc
ljmp
mov
sbb
cltd
xor
arpl
jge
ljmp
movsl
dec
call
push
cmp
aad
leave
mov
icebp
adc
fsubl
cmp
or
push
pop
mov
loop
movsb
push
mov
push
xor
out
lds
mov
inc
imul
push
shr
push
stos
out
mov
mov
cmpsl
mov
popa
es
sub
pop
mov
sub
in
jg
push
pop
push
dec
push
out
jle
mov
xchg
call
imul
xchg
dec
mov
loop
sahf
inc
add
jmp
xor
cmp
push
mov
push
add
push
lret
xor
pop
nop
push
jg,pt
fldcw
lea
pop
inc
pop
mov
or
mov
xchg
lret
or
add
adc
les
stc
lret
jp
inc
lods
bnd
inc
cs
out
xchg
lock
mov
push
sub
jne
into
xchg
xor
mov
sbb
xor
lahf
stc
fildl
subb
push
sti
dec
psubq
xor
loopne
lret
add
dec
std
mov
pop
sub
jl
cli
repz
je
pop
stc
repz
xchg
pop
xor
ljmp
inc
inc
push
mov
fimull
aas
mov
das
inc
rcr
pop
lds
loopne
jle
push
or
leave
and
cmpsl
in
ret
dec
pushf
dec
scas
adc
loop
subb
xchg
jns
aad
mov
jnp
cmp
fstp
push
xchg
jge
mov
push
jp
inc
push
lock
and
mov
xor
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
