push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
mov
xchg
iret
or
call
and
and
mov
push
test
jae
aas
clc
lret
cmp
sub
push
xchg
ds
cmpsl
sub
lods
ds
xchg
pop
notb
inc
mov
mov
or
insl
or
out
loopne
and
sbb
outsl
mov
push
dec
scas
stc
je
in
ja
inc
mov
sbb
sbb
jo
push
jmp
mov
and
daa
shlb
mov
loop
iret
dec
xor
mov
inc
sub
sub
pop
pusha
xchg
cmp
in
leave
mov
in
xchg
movsl
push
dec
js
pusha
sbb
mov
imul
cld
jp
jbe
lock
mov
inc
cmp
pop
mov
xchg
push
push
or
popa
sbb
xchg
xchg
mov
mov
fcmove
inc
mov
arpl
mov
nop
jnp
add
push
pop
aad
ljmp
jmp
inc
mov
popl
sub
fstl
xchg
lcall
sub
mov
ret
sbb
aaa
or
pop
pop
mov
in
push
or
jp
lcall
outsl
mov
out
xor
into
insl
pop
and
mov
push
jl
jbe
movsl
outsb
jp
xor
push
push
call
ret
loopne
inc
pop
push
icebp
out
jbe
repz
mov
push
jno
sub
inc
mov
cmc
mov
jnp
add
sbb
xor
inc
jle
adc
pand
mov
shrb
aaa
movsl
arpl
out
movsl
lea
rcll
int3
xchg
aas
pop
dec
test
mov
fstl
push
push
out
mov
aam
test
adc
out
push
pop
push
hlt
mov
mov
add
lret
pop
xor
push
mov
insb
iret
xor
xchg
jmp
cs
cmc
mov
inc
cmpsl
popf
or
mov
or
dec
ret
and
popf
jae
out
popf
xchg
les
jno
hlt
mov
sub
js
insl
adc
ljmp
mov
loope
cmc
into
mov
out
xchg
pop
test
inc
fisubs
sub
js
jl
sub
xor
push
popf
mov
arpl
sub
mov
fs
stos
ret
mov
dec
mov
xchg
xchg
mov
add
adc
js
xchg
adc
in
mov
das
mov
int3
and
insl
dec
out
in
std
in
jle
shll
mov
mov
pop
cmc
adc
lds
in
insl
test
lea
stc
or
push
stos
xor
fdivr
push
jp
in
fmull
gs
dec
jns
jbe
jo
sub
inc
cmp
sub
jnp
jl
push
scas
aam
stos
iret
fwait
push
and
xor
cmp
rclb
test
xor
mov
out
sbb
stos
adc
mov
mov
les
roll
jl
nop
pop
push
idivl
push
orl
in
testl
push
xchg
jl
leave
lods
stc
xchg
add
add
cmpsb
pop
addr16
xor
lea
js
xchg
das
jle
jl
jns
inc
pop
movsb
lcall
dec
pop
ja
bound
and
mov
movsl
insl
pop
pusha
mov
test
cmc
icebp
outsl
daa
mov
mov
xor
or
xlat
aad
aad
sbb
and
push
sub
idivl
rorb
jno
mov
dec
xor
push
pop
adc
cld
cmp
mov
jge
cmp
call
pop
int3
stc
fnstenv
imul
outsb
sbb
pop
clc
sti
hlt
xchg
leave
loope
aad
sbb
sub
call
push
jecxz
dec
div
aaa
mov
xchg
pushf
or
xchg
das
cltd
or
add
adc
cmpsl
test
mov
sti
push
mov
aas
jb
push
daa
lds
int
lea
pop
xlat
jns
iret
jl
mov
add
or
sub
popf
jl
adc
sbbb
mov
dec
loope
outsb
popa
repz
add
cmp
jg
jp
cmpsl
jge
sbb
mov
push
sbb
test
sbb
vfrczsd
adc
push
xchg
mov
inc
jbe
xor
cmp
mov
xchg
dec
mov
adc
stos
leave
lods
dec
lahf
lcall
sub
mov
inc
movsl
in
sub
lcall
sub
in
lods
sti
or
std
cmpl
add
fisttpll
int
cmp
scas
fwait
std
mov
mul
mov
sbb
xor
cwtl
test
adc
or
ret
inc
in
std
push
shrb
jbe
in
add
or
and
dec
test
scas
add
sti
xchg
sbb
cli
in
xchg
mov
jge
cwtl
int
lahf
pusha
lock
lds
dec
js
jo
or
test
jne
jno
cmp
loopne
cmpsb
cmp
pop
mov
jbe
push
pop
shl
leave
jno
pop
xchg
mov
cmp
inc
rcrb
psubsw
cmp
repnz
lock
adc
inc
mov
mov
xor
dec
adc
xchg
cmp
sbb
lock
xor
and
js
mov
movsb
inc
in
mov
xor
jecxz
jne
out
nop
push
ljmp
lods
andl
sbb
call
sbb
mov
test
pop
movsl
scas
outsb
jnp
mov
scas
mov
int3
jge
sahf
pop
shrl
in
movsb
dec
jo
lret
pop
testb
mov
add
movsl
push
lcall
pop
cld
out
xchg
jne
dec
outsb
sub
popf
in
pop
cmp
mov
cmc
adcl
push
cs
outsb
mov
sbb
lods
sbb
lods
fxch
aad
popf
push
gs
shlb
sub
stc
int
jbe
daa
aaa
or
int
cmp
aas
inc
subb
and
or
movsl
xchg
out
cmp
jbe
jg
mov
clc
stos
cld
dec
enter
push
cmp
lahf
shlb
into
fnstenv
fnsave
mov
rclb
dec
aaa
dec
or
out
pop
inc
jo
test
push
pop
ljmp
sub
dec
add
test
daa
fistl
cmp
xor
jne
inc
stos
sbbl
repz
nop
ret
mov
fwait
xor
sub
leave
xchg
cmp
xchg
insl
es
stos
inc
jo
outsb
mov
jmp
ficomps
xor
xlat
mov
and
aas
pop
arpl
xchg
push
mov
xor
es
sub
pop
push
ss
arpl
shll
fsubr
call
xchg
fcompl
mov
cltd
push
es
sahf
daa
iret
sbb
jae
test
sub
daa
jp
jl
push
popa
mov
mov
push
push
dec
jg
cmp
mov
push
fisubl
mov
jo
addr16
push
mov
or
inc
dec
pop
stc
notb
cmp
inc
ret
push
je
mov
arpl
push
shl
addl
cmpsb
mov
sbb
cltd
push
fbld
sbb
shll
leave
add
mov
xor
test
popf
add
and
or
jl
bound
or
sbb
push
add
popf
mov
mov
rclb
dec
mov
clc
test
mov
repnz
int3
add
dec
stos
movsl
push
rclb
jno
fs
shrl
ljmp
pushf
cmp
sub
and
in
lods
or
orb
movsb
stc
sbb
mov
and
sbb
dec
push
cmovnp
jg
rorb
xorl
mov
adc
std
in
cmpsl
add
mov
cli
cli
sbb
jo
jno
xor
scas
xchg
push
outsl
mov
sub
call
mov
mov
xlat
adc
das
xchg
or
int
ja
jno
sub
shll
jns
dec
ret
push
adc
and
test
stos
mov
nop
enter
sbb
iret
iret
int3
icebp
out
shr
fbld
push
jecxz
push
imul
insl
lret
sarl
mov
sbb
cmp
js
jnp
lods
icebp
arpl
push
arpl
gs
or
loope
rcrl
inc
out
inc
jbe
enter
ss
outsl
mov
lahf
iret
mov
call
enter
shl
push
cwtl
jbe
push
and
pop
lock
jb
insb
push
ror
dec
and
ds
mov
clc
arpl
inc
aas
add
jg
out
loopne
sub
mov
cmpsl
pop
xlat
or
repnz
stc
subb
popa
rclb
fsubl
daa
loope
and
xor
clc
add
xor
push
nop
inc
mov
pop
push
jecxz
cmp
in
jp
and
mov
pop
test
lods
jecxz
xor
fldt
jne
and
jno
cli
into
enter
ja
fcompl
add
mov
test
popa
cwtl
cld
cld
mov
push
sarb
cmp
clc
hlt
imul
and
pusha
sub
in
enter
mov
and
sub
and
sti
addl
cwtl
cld
loop
xor
int3
gs
lock
xchg
dec
lea
daa
in
xchg
xchg
jp
xor
mov
insb
popf
fistpll
mov
nop
in
test
std
pop
adc
les
dec
mov
shlb
mov
movsl
pop
lea
xorb
shlb
cmpl
les
or
dec
loope
adc
lea
push
test
adc
sbb
repz
xlat
pop
xor
add
push
mov
inc
sbb
iret
dec
xchg
cli
mov
enter
lea
fmulp
push
arpl
dec
lret
hlt
mov
jp
ficoml
cmp
and
in
jae
jle
aas
mov
pop
test
stc
dec
out
hlt
incb
vmread
adc
jecxz
stos
push
add
test
shll
pop
loop
fnstcw
popa
fs
and
lock
imul
xchg
rolb
adc
jmp
into
cmp
cmp
jno
cmp
mov
push
loop
rcrb
insb
pop
cs
cmp
adc
sbb
idivb
adcl
sbb
in
mov
out
adc
dec
stos
aad
sbb
mov
js
out
or
int3
sub
fiaddl
sahf
add
je
mov
sbb
scas
ljmp
mov
and
xor
ja
movsl
rcll
in
clc
sti
bound
insl
xor
sbb
fsubr
int
in
adc
fbld
lret
add
and
xchg
mov
or
insl
fsub
or
xor
rcrl
and
ja
lods
das
jne
cmp
jno
je
and
pop
adc
mov
mov
push
and
int
repnz
pop
outsb
loop
inc
mov
sbb
rcll
or
out
xchg
mov
or
inc
mov
aas
pop
rcrl
push
xor
hlt
mov
push
hlt
enter
stc
cmp
push
shl
jne
fsubr
sub
sbb
push
push
push
xor
xchg
hlt
inc
inc
mov
xchg
mov
lock
jbe
scas
ret
mov
test
dec
add
sub
inc
jge
inc
outsb
sbb
ja
gs
inc
cs
pop
sahf
jo
dec
jb
je
push
fdivl
shrb
dec
sbb
push
mov
je
mov
cmc
jnp
mov
inc
repnz
cld
mov
fs
sub
cwtl
les
loopne
xchg
xchg
dec
nop
mov
push
dec
push
or
adc
decb
lcall
and
jno
shrb
rclb
fdivrs
adc
addr16
push
cs
in
in
mov
inc
stos
fwait
cltd
jbe
or
mov
les
sub
add
sbbb
sbb
lods
sub
dec
mov
sbb
xor
jnp
lods
lds
dec
nop
push
mov
xor
xchg
mov
mov
mov
fsts
xor
daa
push
lcall
mov
inc
cs
jb
inc
add
out
pop
pop
sub
in
xchg
fnstsw
mov
jge
fbstp
shrl
pop
mov
lahf
les
int3
inc
enter
lahf
mov
push
insb
sbb
inc
mov
lret
repnz
mov
or
add
rorb
pop
lods
adc
or
push
mov
mov
push
mov
orb
jns
jmp
lods
sub
push
leave
push
ja
repnz
loopne
adcw
cmpsb
out
bound
out
or
in
jno
cmp
or
fnstsw
pop
sub
rolb
pop
movsb
sti
cmp
out
pop
stc
xchg
idivb
ror
bound
mov
xor
pop
or
imul
inc
xor
xchg
and
push
mov
mov
iret
dec
loopne
push
xchg
scas
xor
dec
dec
lret
mov
fadds
xchg
jg
mov
push
add
outsl
lods
mov
inc
stc
repz
sub
cmp
mov
xchg
or
mov
xchg
sbb
test
dec
and
sub
mov
data16
out
pop
dec
pop
push
and
jo
negl
arpl
xor
mov
les
in
inc
jne
and
enter
dec
dec
jns
jno
mov
jecxz
or
or
js
mov
or
lea
in
push
push
jmp
add
cltd
jg
mov
sub
icebp
xlat
fabs
sbb
cmp
mov
mov
in
arpl
pop
cmp
xor
lcall
sbb
test
cmp
pop
mov
cmc
sub
dec
aam
xchg
or
fwait
jns
in
mov
gs
dec
aad
repz
popa
and
mov
xchg
or
fcmovne
push
fcomip
push
repnz
in
or
sbb
jecxz
sub
pop
mov
mov
push
das
sbb
shlb
add
les
push
mov
mov
addr16
fadd
sbb
pop
popa
incl
scas
hlt
sub
insl
inc
and
push
adc
pop
outsl
cmp
dec
jno
cli
sub
or
roll
or
sub
ljmp
pop
and
in
aad
push
jae
mov
and
push
test
add
xchg
push
sub
push
sub
jb
aam
les
inc
and
bound
cwtl
mov
js
sbb
test
cld
xor
sbbl
imul
pop
sar
mov
mov
cmp
cmpsl
imull
xchg
es
mov
lds
add
cmpsl
push
roll
outsl
add
pop
mov
shlb
xorb
adc
stos
loopne
addr16
push
popf
testb
xchg
jo
xor
dec
int3
and
xchg
sahf
mov
iret
mov
cmpsb
hlt
ficomps
pusha
test
out
jmp
xchg
ret
fistl
lock
sbb
jnp
xchg
mov
jge
test
int3
cmpsb
js
mov
pop
mov
jns
lods
add
cli
les
pop
fisttpll
xchg
es
fnsave
cmp
and
lods
dec
sar
dec
and
cmc
mov
mov
inc
test
xor
inc
shrl
fdivrp
pop
cmp
daa
dec
in
mov
xchg
mov
dec
jge
lods
or
cmc
sbbb
outsl
jnp
fcompp
or
xchg
icebp
adc
mov
mov
sbb
pusha
call
inc
add
pop
hlt
add
jl
pop
xlat
gs
mov
push
mov
mov
push
mov
out
mov
jae
fimull
push
out
dec
push
dec
sub
fstpt
jno
jle
mov
cmpsb
fs
xor
push
std
fimuls
lea
je
mov
inc
jp
cmp
in
push
lahf
jmp
sub
sbb
xchg
mov
out
jnp
xor
insb
cli
out
gs
popf
mov
mov
jp
cmc
lock
fwait
nop
xchg
push
or
jge
dec
dec
jmp
hlt
sbbl
das
dec
xor
push
mov
jmp
xchg
cmc
mov
push
dec
js
inc
push
mov
push
imul
repnz
sarl
add
jmp
and
push
int
loopne
and
sti
xchg
jle
bound
lret
fistpl
js
out
push
pusha
push
add
mov
jg
dec
clc
push
adc
cli
rclb
jle
ljmp
push
or
ja
pop
cwtl
inc
movsb
cmc
and
fs
dec
dec
cmpl
xor
and
jno
dec
mov
xchg
adc
mov
xor
out
push
scas
mov
sti
xchg
mov
inc
xor
adc
xchg
cli
pop
mov
enter
xlat
and
jle
or
ljmp
das
cmc
enter
fadds
or
and
xorl
mov
ds
ret
add
jo
test
lret
add
jg
mov
jns
rorl
adc
jne
or
shrb
xor
adc
xor
in
adc
pop
push
mov
push
cmpsl
add
mov
or
fistps
sahf
pop
mov
mov
push
and
jo
and
lock
mov
push
sarb
and
movsl
push
jecxz
xchg
xor
ja
push
push
and
dec
js
mov
add
xor
clc
scas
mov
pop
mov
loope
outsl
ret
dec
les
leave
pop
lea
and
cmp
cli
aam
lret
aad
sub
psllw
sarl
jb
push
lock
out
clc
add
sub
dec
pop
fsubrl
fwait
mov
xchg
loop
cmp
les
aad
test
xchg
aad
xchg
or
imul
arpl
popa
cmp
pop
cld
add
jne
pushf
pop
scas
add
xchg
sub
add
cld
dec
adc
fcmovnbe
cmp
push
fnstcw
push
xlat
arpl
or
sub
mov
push
sub
icebp
pop
sub
or
movsl
jns
push
into
outsb
out
test
loopne
punpckldq
push
jbe
adc
xor
pop
jne
mov
or
jae
fists
adcb
cmp
pop
push
xchg
xlat
pop
ret
and
sti
adc
je
jb
jbe
je
call
sbb
and
push
repz
mov
lahf
shrl
sub
adc
cmp
out
les
jg
push
stos
push
mov
pop
pushf
and
mov
sbb
mov
push
sbb
mov
test
jae
or
ds
imul
adc
imul
xchg
pusha
in
pop
xor
inc
test
mov
pop
mov
mov
mov
add
pop
into
jp
flds
filds
push
fcomps
pushf
and
mov
lds
mov
shlb
ffree
inc
mov
out
sub
stos
pop
push
fildll
push
addr16
mov
cld
mov
add
or
clc
mov
cs
outsl
popa
push
cmpsl
push
icebp
mov
aam
int
or
sti
push
test
fwait
push
addb
imul
xchg
daa
movsb
push
xlat
or
adc
loopne
jnp
push
pop
pop
cli
lret
mov
pop
out
mov
fcoml
mov
enter
fidivrs
mov
sbb
and
mov
push
mov
dec
or
out
cmp
stos
pop
repz
push
cld
sbbb
push
sbb
pop
add
cwtl
icebp
arpl
jecxz
stos
push
add
inc
scas
or
inc
test
add
int3
mov
js
ret
push
jp
jb
adc
jle
ja
and
inc
hlt
pop
mov
test
and
fildl
xor
insl
pop
clc
pop
inc
pop
xchg
xor
aam
pop
add
mov
and
scas
pop
pop
sbb
dec
sub
dec
imul
xabort
xchg
xchg
add
cmpsl
jae
xor
mov
mov
subb
mov
push
xchg
imul
and
clc
or
pushf
out
lods
bnd
jo
add
loopne
loope
xlat
mov
mov
mov
push
lahf
lcall
sbb
adc
cmp
mov
inc
sbbb
and
cmp
add
mov
loop
pop
out
shrb
and
cmp
dec
fildll
mov
int
inc
imul
ljmp
dec
sahf
xor
outsb
mov
sub
lcall
insl
cwtl
stos
negl
movsl
rcl
mov
fimuls
mov
mov
xchg
or
push
push
dec
mov
adc
mov
cltd
jmp
rcll
aaa
dec
ljmp
xchg
loop
xor
mov
lret
addb
mov
subb
mov
adc
popf
psubusw
aas
insb
xchg
rcr
repz
and
loopne
jb
mov
dec
mov
das
sbbl
int3
fisubrs
lock
mov
imul
adc
jmp
repnz
jns
adc
push
repz
popf
pop
inc
and
outsb
fsub
repnz
mov
mov
mov
xor
lock
testl
fidivrl
push
xchg
icebp
inc
sti
ds
ss
aaa
add
mov
outsl
pusha
jp
mov
sub
add
addr16
or
ds
lods
mov
mov
push
add
xchg
or
dec
sbb
and
loop
xchg
jp
ret
mov
test
push
mov
lea
mov
insb
push
loop
mov
sbb
insb
rclb
push
fistl
cmp
out
pop
fdivp
dec
out
ficoms
shlb
adc
xchg
pop
icebp
sub
mov
test
clc
out
jg
pop
or
xchg
stc
stc
push
ljmp
loop
enter
add
dec
iret
mov
pop
pop
aas
xorl
loop
out
hlt
fidivl
pop
lods
mov
adc
and
daa
rcrb
mov
call
and
andl
pop
mov
and
cmp
lret
clc
fst
lea
hlt
sbb
and
ffree
inc
popa
xchg
stc
fdivrs
fcomps
xchg
adc
mov
jmp
or
test
cmpb
lahf
push
and
outsl
lahf
popf
les
roll
push
add
xchg
and
xorb
shll
je
mov
xchg
data16
mov
pop
cmp
xchg
and
das
sbb
dec
jge,pn
inc
bound
lea
dec
aas
jns
push
cmc
movsl
or
xlat
loope
fiadds
lret
pushf
imul
lret
or
sub
push
getsec
sbb
adcb
add
mov
or
repnz
lret
sub
mov
ss
pop
in
notl
push
dec
daa
lock
xor
cmc
ja
adc
sti
jp
loope
pop
ud2
mov
xchg
sub
push
call
xchg
rorl
sarl
inc
jmp
movl
adc
or
and
scas
sbb
out
insl
lods
clc
rcr
sbb
jmp
cmpsl
xchg
sub
dec
pop
pop
or
enter
adc
inc
aas
daa
inc
mov
mov
idivb
je
push
call
cmp
jnp
dec
adc
or
scas
and
xor
cmp
push
sti
daa
aaa
icebp
inc
cmpsb
adc
push
sarb
enter
mov
mov
add
enter
jg
cld
outsb
mov
mov
push
mov
cli
frstor
adc
jle
insb
inc
in
int
js
fcomp
jg
push
insl
sub
scas
cld
push
mov
mov
addr16
rcll
movups
gs
fmuls
sbb
aam
cmp
stos
mov
sub
or
xchg
pop
push
or
mov
lods
mov
adc
test
aam
divb
inc
mov
out
rorl
ror
add
and
add
sahf
mov
mov
inc
fbld
cmp
jmp
mov
popf
inc
mov
pop
shrb
out
out
rol
dec
xchg
xorb
pop
imul
mov
sti
inc
add
jp
loopne
jo
jbe
cltd
adc
push
xor
mov
repnz
sar
in
imul
dec
js
jmp
repnz
push
cmp
sahf
lods
pop
dec
das
and
xchg
pop
and
inc
mov
pop
mov
hlt
pop
rcrb
pushf
adc
push
js
inc
shl
pop
mov
fnstcw
adc
test
jbe
push
daa
fidivrl
in
test
and
mov
mov
mov
cli
out
imul
hlt
fmulp
dec
xchg
cmpsl
loopne
ljmp
sbb
jle
cmpl
xchg
leave
in
push
popa
out
imul
sbb
add
inc
test
xor
test
sub
lea
pop
sbb
fs
sbb
jo
lret
inc
cmpsl
pop
xchg
imul
pop
xor
xchg
xchg
inc
and
cmpsl
fiadds
pop
and
ret
pop
lds
sub
fdivrl
mov
cmp
jmp
sti
faddl
loop
mov
xchg
mov
roll
mov
xor
sahf
or
push
repnz
mov
divl
cld
cmc
pop
pop
xor
cs
test
mov
sbb
xchg
and
insl
push
gs
loope
lock
clc
cmpsl
lods
lock
push
add
repnz
or
add
call
les
xchg
or
hlt
out
insb
clc
popa
jnp
data16
xchg
lcall
into
jns,pt
in
mov
test
gs
sub
iret
pop
mov
cmp
mov
sbb
cmc
and
pop
loop
adc
jae
dec
popa
jle
imul
xchg
hlt
lret
sub
cs
cmp
xchg
add
cmp
enter
shrb
xchg
and
cwtl
sti
pushf
gs
clc
fs
push
lods
addr16
aas
out
dec
jo
pop
jno
and
out
ret
lods
pusha
and
cmp
pushf
loop
call
xchg
nop
adc
dec
loopne
sbb
inc
pop
xchg
les
loope
mov
jbe
mov
jecxz
sti
jb
push
jbe
xchg
aad
adc
lahf
push
pop
jl
inc
ret
add
lret
addr16
mov
aas
lret
stos
daa
fmul
and
add
dec
xor
jp
lea
pop
loop
adc
test
es
out
addr16
rcrb
dec
mov
adc
lret
cwtl
sbbl
js
outsb
mov
fcomp
inc
insl
mov
dec
mov
rorl
mov
in
mov
out
push
pusha
shl
mov
fldl
push
fcoms
adc
dec
mov
and
daa
jne
pop
dec
add
aad
jmp
mov
mov
leave
xor
mov
sahf
mov
inc
sbb
mov
xor
lea
push
sub
lea
or
mov
call
jbe
data16
scas
andl
mov
push
jle
jecxz
or
loop
mov
std
xchg
insb
ret
adc
ss
cmp
test
or
sahf
lcall
mov
mov
imul
mov
xchg
rep
cmp
cmp
outsb
stc
cmp
push
push
testb
sub
in
push
out
sub
les
xor
cmp
xchg
loop,pn
insb
filds
cmpsl
loopne
inc
adc
jae
push
imul
mov
rcl
cltd
and
jbe
sub
aas
cmpsb
push
cmp
cmc
xchg
mov
cltd
inc
sub
mov
popf
loopne
push
jl
scas
add
push
mov
add
lock
jno
jae
cltd
sub
scas
ja
cs
ja
jbe
mov
mov
inc
adc
sub
adc
aad
jg
clc
repz
adc
or
jb
jbe
pushf
jno
push
cs
idivl
mov
adc
cmpsl
mov
popa
jae
sub
inc
jb
aad
pop
lds
test
rorb
dec
insl
jecxz
and
or
test
repz
cmp
xchg
addr16
jne
pop
ljmp
lret
sbb
cli
pop
cmp
ret
push
pop
cli
decl
cltd
jbe
addr16
cld
sbb
int
lods
sbb
insl
mov
loopne
data16
loope
inc
insb
pushf
cli
push
jb
loope
movsb
add
aas
rolb
dec
call
scas
xor
mov
xor
mov
test
mov
je
mov
pop
cmp
dec
push
sub
ret
ds
ficoml
jmp
cwtl
push
pop
inc
gs
jl
seta
mov
sti
ja
push
std
sub
mov
into
cmp
pop
arpl
or
js,pt
pop
xor
sbb
cwtl
inc
cld
clc
dec
pop
lcall
xchg
or
sbb
loop
test
xchg
inc
mov
mov
dec
push
add
sub
mov
shr
dec
jecxz
and
ss
rolb
aaa
clc
popa
sub
push
divl
jae
aam
in
pop
xchg
jmp
jbe
cltd
sarb
jl
mov
cmpb
dec
pop
sub
sub
pop
std
pop
lcall
or
mov
ficomps
or
pop
jbe
lds
cmp
mov
push
xchg
pusha
adc
adc
idiv
inc
fldcw
rol
pushf
push
fsubs
rclb
dec
aas
add
ds
mov
pop
les
inc
nop
insl
fisubrs
loop
cmc
mov
xchg
xchg
dec
or
or
les
lahf
fisttpl
call
sahf
jb
pusha
cmp
call
lcall
les
or
rolb
fstl
frstor
cmp
push
mov
movsb
orw
shl
or
jae
les
lea
sbb
adc
push
outsb
mov
cmpsl
in
rcll
outsl
cmp
push
jae
sub
in
sbb
cmp
in
sbb
xchg
jecxz
mov
fucomi
nop
in
stos
cmp
inc
inc
and
push
or
lret
cwtl
and
push
inc
jl
xor
sub
test
data16
mov
dec
sbb
rorb
cmp
leave
imul
xor
mov
sbb
enter
rolb
cwtl
push
test
shll
jnp
sub
xchg
lods
dec
jb
sahf
sub
out
hlt
pop
dec
dec
inc
jb
pop
pop
and
xchg
jnp
call
add
addr16
sbb
mov
lds
mov
jle
add
or
cld
fcomip
mov
js
stos
and
in
sbb
fsubrl
xor
dec
mov
test
lds
ljmp
sbb
xchg
fcomp
dec
loop
inc
jno
in
out
jg
jge
mov
lods
aam
pop
inc
xchg
mov
inc
mov
jns
mov
mov
sbb
inc
xchg
fdivs
fistl
xlat
dec
mov
arpl
xorl
je
or
lock
nop
bound
outsl
movsl
test
add
je
xchg
adc
sub
add
pop
mov
mov
dec
cmp
sub
mov
xchg
iret
jae
adc
cmp
repz
outsl
lods
fdivrl
push
call
xchg
xor
repnz
lock
push
lar
fmuls
mov
lcall
mov
inc
pop
mov
enter
dec
loope
shlb
jecxz
int3
mov
inc
add
int3
mov
fdiv
xchg
add
jns
iret
cmpsb
jns
mov
cmc
in
lods
stc
outsl
cmp
mov
sub
test
arpl
adc
faddl
mov
inc
aaa
inc
mov
xor
lcall
cmpsb
imul
mov
ss
pop
cmp
shlb
cmpsb
fidivl
sub
xchg
dec
mov
bound
call
add
xlat
ljmp
mov
inc
jg
subb
clc
insb
jb
mov
xor
dec
add
repz
sub
push
test
cmpsl
xor
adc
and
pop
push
push
dec
js
aas
mov
shl
repz
jb
scas
ljmp
mov
fcmovnb
mov
arpl
ljmp
and
lret
inc
mov
ds
sub
shll
js
mov
pop
hlt
or
xchg
gs
push
stos
push
inc
rorb
hlt
lret
sub
gs
cmp
out
mov
stc
or
add
pop
jp
mov
mov
mov
mov
cmc
mov
cmp
out
mov
push
rorb
or
push
cmpl
cmpsb
in
push
or
fwait
dec
push
lods
rolb
mov
mov
inc
mov
outsl
or
mov
mov
xchg
xor
xchg
scas
mov
mov
sbb
push
arpl
notb
loopne
rcl
dec
jle
fadd
push
xchg
xor
sbb
push
and
xchg
lahf
jp
into
jae
sub
int3
popa
mov
bswap
fldcw
outsl
dec
sub
scas
push
inc
jne
jae
mov
push
sbbb
mov
lods
inc
enter
adc
mov
rcrb
cwtl
sub
xchg
jne
mov
shl
sub
jecxz
inc
shr
arpl
adc
pusha
jle
nop
rcrb
imul
loope
bound
adc
adc
ja
outsb
add
or
mov
sti
mov
mov
xchg
pop
push
fmulp
xchg
rorl
int3
sbb
enter
inc
jne
out
aas
pop
jae
xchg
sub
xchg
gs
mov
bound
dec
jecxz
stos
notb
cmp
int
icebp
mov
jl
jno
sbb
ret
sti
sbb
mov
inc
lea
in
dec
adc
jo
test
push
mov
sahf
lock
in
movsl
nop
mov
mov
test
mov
repz
lock
loope
mov
es
push
ljmp
ljmp
xor
in
inc
dec
add
loope
sub
jo
mov
outsl
shll
shlb
ret
inc
or
outsb
js
mov
inc
jno
xor
adc
jnp
sub
jmp
or
jg
iret
pop
js
cmp
xor
xchg
xchg
adc
je
inc
std
mov
add
inc
jg
pop
ret
push
pop
or
add
cltd
add
iret
sbb
mov
sbb
test
dec
push
xchg
int
mov
xchg
xchg
in
clc
and
adc
cli
xorl
movl
xchg
xchg
ss
daa
mov
out
inc
cmp
cmpsl
mov
rorl
push
push
jmp
js
loop
fdivl
arpl
or
jb
cmp
insb
shlb
or
gs
or
je
jo
xchg
clc
nop
int
lcall
fstps
xchg
xchg
stc
aaa
push
les
or
insl
jae
test
mov
data16
stos
mov
and
clc
outsl
gs
mov
int3
mov
sbb
mov
clc
or
mov
movsb
int
push
inc
inc
dec
movsb
sub
fidivs
cmpsb
aam
dec
and
or
mov
js
cs
xchg
inc
sbb
ljmp
ds
mov
dec
aas
add
lods
push
push
loope
pop
outsb
xlat
fimull
cmpl
add
xchg
xchg
sub
pop
push
inc
dec
fimull
sysenter
cmpsl
mov
dec
xchg
inc
out
jb
cmp
add
mov
sub
lcall
adc
xchg
or
mov
pop
repnz
in
dec
adc
or
in
sub
bound
xchg
roll
scas
arpl
stc
pop
xchg
fstps
enter
and
sub
pop
fcomps
rcll
xchg
mov
and
ret
pop
in
xchg
fcmove
mov
inc
jge
xlat
push
mov
pop
adc
mov
pop
arpl
outsl
les
xchg
adc
and
lds
dec
or
mov
outsl
lock
movsl
jp
cmp
pop
stos
ss
lods
leave
nop
popf
adc
cmp
mov
push
jne
test
je
orpd
and
mov
cmp
xlat
test
ljmp
push
ss
shlb
das
in
das
pop
mov
and
fs
subb
lds
ficoml
vcmppd
mov
jne
repnz
repnz
lods
es
aad
mov
cs
inc
xchg
xchg
fldl
jmp
rcll
sub
ret
jge
frstor
jmp
cltd
push
jg
sbb
mov
sbb
jne
cltd
xor
xor
xchg
sarb
test
mov
mov
pop
push
pusha
out
mov
cwtl
pop
adc
xor
sbb
jbe
cwtl
mov
sti
and
data16
push
and
idivb
sbb
rcrl
xor
loope
rcll
add
frstor
sub
fldenvs
dec
fmuls
dec
sbbl
inc
sti
push
aaa
iret
adc
pushl
mov
jne
xor
push
mov
loopne
push
mov
mov
aas
pop
dec
mov
sbb
repnz
xchg
test
pop
inc
mov
pusha
mov
mov
cmp
mov
jl
add
jns
mov
push
jl
repz
fisubl
push
imul
pop
inc
testl
adc
iret
adc
cwtl
adc
fistps
dec
mov
rclb
inc
psubq
cmpsb
mov
loopne
sbb
sbb
insl
mov
mov
mov
push
xor
lock
movsb
inc
add
or
insl
js
add
notl
xor
js
test
fiaddl
cmp
and
sub
js
gs
mov
dec
inc
call
test
push
out
pop
dec
rcll
lods
dec
aad
inc
in
jp
push
sub
dec
lods
jl
icebp
ljmp
loop
xchg
push
jbe
scas
add
test
clc
cmp
push
push
xchg
mov
dec
test
or
cmpsb
push
aas
sbb
inc
in
stos
and
imul
xor
aas
lock
sti
adc
test
hlt
gs
push
dec
dec
sub
ror
inc
or
push
out
push
popa
add
mov
or
pop
inc
out
inc
adc
and
mov
jne
sbb
loope
jl
pop
lock
lods
in
push
inc
aas
mov
lcall
lcall
pushf
adc
push
mov
cld
xchg
add
out
nop
cmpl
daa
in
mov
push
mov
mov
jb
dec
clc
xchg
lods
or
push
inc
add
outsb
mov
pop
ss
xor
aas
repnz
push
sbb
mov
cwtl
mov
inc
movsb
sub
mov
es
mov
test
insb
add
pop
mov
test
push
push
daa
in
mull
movb
imul
test
inc
lea
ja
scas
popf
into
mov
mov
mov
jg
cmp
dec
inc
and
lods
mov
sarb
test
or
add
inc
mov
push
inc
mov
es
lret
ljmp
cs
imulb
out
inc
xor
jno
ss
movsb
pop
push
mov
jnp
mov
nop
dec
stc
lds
in
dec
and
call
cmp
sarb
test
push
sbb
sub
loopne
inc
xlat
inc
jne
xor
mov
movsl
mov
iret
pop
popa
jo
in
xchg
rcrl
xor
add
pop
jmp
sbb
and
cld
dec
push
addr16
in
ljmp
cmpb
inc
push
pop
out
dec
addr16
lea
es
iret
jecxz
jae
movsl
rorl
dec
adc
or
data16
add
fldenv
lock
lret
mov
fdivl
stc
addb
adcl
mov
test
ss
xor
mov
mov
push
pmulhuw
mov
and
stos
data16
enter
test
or
shl
jle
pop
jl
mov
adc
xchg
shrl
out
fdivrl
push
mov
sub
push
stc
cmp
mov
or
cmp
pushf
xor
movsl
xor
push
mov
sub
add
mov
ficompl
fsubrs
sti
adc
es
aaa
mov
or
out
int3
push
out
aam
jp
test
push
lret
test
mov
sbb
popf
mov
mov
xchg
ss
pop
stc
sub
hlt
sub
sub
test
jno
pop
int
and
cmp
push
mov
insl
mov
jecxz
call
cmp
stos
cltd
lret
jbe
lcall
imul
adc
xor
dec
xor
or
fnstenv
mov
clc
inc
fs
mov
test
into
movsl
inc
mov
xor
sbb
loope
icebp
lea
sub
movsb
mov
inc
dec
test
test
adc
lcall
xchg
xchg
xor
cli
push
jb
inc
inc
mov
psubd
fwait
and
stos
lds
divb
jbe
insl
shll
les
rorl
negb
out
jp
add
xchg
loope
mov
mov
and
jo
jg
mov
lret
nop
sti
mov
xor
loopne
iret
call
adc
pop
ret
xchg
sub
push
mov
sti
insb
shrb
lock
in
loopne
xlat
scas
sub
sub
loope
push
fwait
push
fildl
jl
pop
mov
push
mov
cmp
mov
aad
sahf
insl
xor
aaa
xchg
int3
stos
stos
push
xor
xchg
pusha
imul
data16
dec
dec
icebp
push
xchg
jl
dec
cmp
jp
cmp
bound
loope
clc
dec
inc
sbb
sarl
and
adc
push
mov
lret
xchg
cmp
cli
ds
adc
jb
mov
ret
cmp
dec
xchg
jo
fwait
add
sbb
sbb
mov
cmc
fisttpl
fcom
xchg
aaa
jbe
gs
enter
je
cltd
dec
pop
inc
out
je
stos
inc
cmc
jg
xchg
mov
push
sahf
push
inc
sub
in
jle
jg
pop
pop
pop
into
mov
mov
addr16
in
jo
pop
scas
mov
pop
push
sbb
push
inc
dec
popf
fimull
int
ljmp
out
loope
mov
int
dec
or
daa
stos
fsubrs
mov
lds
les
mov
inc
and
pop
mov
jbe
mov
out
popa
or
adc
jnp
rcl
insl
scas
dec
scas
dec
insb
out
fwait
inc
shl
es
int
dec
jb
pop
and
mov
andb
addl
add
out
inc
ss
and
pop
shrl
cmp
es
jg
sub
out
std
jne
dec
xchg
lds
repz
or
or
daa
dec
dec
repz
int3
es
mov
inc
push
inc
lock
scas
mov
and
mov
insl
add
sub
dec
testb
push
xchg
mov
dec
ficompl
fstp
nop
imul
inc
lea
nop
stc
leave
dec
push
mov
xchg
test
xchg
aad
mov
adc
sbbl
sub
or
repnz
mov
fsubl
ss
scas
jmp
mov
bound
std
adc
dec
lods
push
jmp
ret
into
push
ljmp
popf
out
call
popa
pop
or
in
jecxz
shrl
pop
lods
les
xor
subl
mov
jle
cmpsl
xchg
add
or
jecxz
outsb
or
lea
adc
push
ja
push
xchg
movsb
fdivs
mov
not
cmp
push
fldl
es
push
inc
sbb
pop
rclb
es
mov
or
add
sbb
and
adc
jns
mov
dec
lock
mov
bswap
add
xchg
movsl
or
rclb
and
cmp
jns
and
fidivrs
xor
scas
mov
mov
adc
jge
sbb
test
pop
int
xor
je
xchg
push
outsl
xchg
dec
inc
jmp
pop
addr16
cmp
nop
decl
add
or
or
bound
lret
mov
test
and
cmp
icebp
xchg
xor
aad
rorb
in
nop
cmp
mov
insl
mov
scas
mov
stc
fucom
js
iret
dec
xchg
sub
fidivrl
cmp
sub
fsin
or
or
pop
ss
lret
mov
test
int3
pop
pop
mov
orl
out
in
or
imul
cmp
pop
fs
cltd
jae
push
out
push
inc
inc
loope
mov
sbb
cmpsb
sbb
adc
inc
testb
xor
and
and
xchg
cmpsb
pop
mov
and
dec
outsl
and
mov
out
xor
int
ret
pop
into
adc
repz
cmp
enter
loope
or
int
repnz
lods
cld
xor
push
mov
xchg
sub
fdivrs
test
shlb
daa
in
aaa
sbb
dec
pushf
add
out
popa
mov
mov
icebp
xor
test
out
push
arpl
cmc
test
mov
das
rorb
pop
and
mov
fidivrl
inc
addr16
stos
mov
or
xchg
aaa
ss
loop
dec
repnz
lea
mov
fxch
fcmovb
insb
dec
ret
xchg
cs
leave
push
and
add
cmp
pop
mov
pop
stc
ljmp
pop
sbb
mov
movsb
add
mov
dec
mov
repz
subb
mov
int3
int
pop
mov
inc
stc
cld
cmpsb
lret
in
mov
sbb
jmp
ret
sub
xor
imul
mov
dec
adc
test
adc
lahf
mov
inc
adc
or
ja
and
das
sbb
cmp
mov
mov
aas
scas
pop
sti
ret
xor
into
loopne
in
and
orb
pop
xor
sbb
inc
xchg
bound
mov
mov
pop
or
inc
sbbb
and
popa
addl
adc
xchg
xchg
push
push
stc
mov
rcl
mov
in
rol
insb
fucom
fildl
mov
sub
into
mov
ret
lret
mov
push
test
xchg
int
cmc
pop
pop
cltd
aas
mov
xchg
insl
clc
daa
sti
and
sbb
dec
aaa
lock
jp
push
push
and
stos
jg
int3
inc
dec
cli
rolb
fsts
adc
push
push
arpl
push
ss
lret
pop
aas
xchg
mov
movsb
dec
xchg
in
ds
out
jo
fmull
xor
mov
aas
xchg
xor
outsl
in
and
ret
adc
nop
sti
jle
inc
push
test
inc
ret
aam
or
xchg
outsb
and
xor
test
pop
sub
mov
and
xchg
adc
pop
lock
ret
cwtl
pop
lret
mov
xchg
sarb
dec
stc
outsl
inc
fnstsw
jno
mov
cltd
adc
mov
pop
xor
adc
cli
xor
add
sti
pop
push
movsb
pop
pop
test
loope
jle
cmpsl
mov
sbb
sub
fs
sbb
sbb
aaa
mov
sub
mov
out
scas
scas
and
xchg
xchg
aam
data16
adc
int
xchg
sahf
lds
test
jmp
xor
outsl
imul
fwait
imul
sub
push
mov
pop
push
test
sub
out
into
xchg
lahf
sbb
xchg
xor
jnp
mov
mov
aas
dec
test
scas
icebp
lret
lret
popf
push
fsubr
ss
rorl
fcmovne
mov
cmp
arpl
and
mov
cli
push
adc
jnp
sub
in
xchg
jae
jg
or
mov
xchg
divl
dec
aam
movsb
mov
or
mov
mov
bound
sub
adc
fstpt
insb
jb
or
or
mov
das
mov
dec
aas
adc
lret
das
popf
dec
sbb
adc
ss
add
xchg
les
cmp
je
stc
mov
repnz
pop
mov
addr16
mov
nop
nop
imul
addr16
fldl
push
mov
cmp
mov
jge
leave
loope
lret
lods
je
roll
push
sbb
dec
std
inc
rcrb
test
push
mov
pop
push
jp
xor
rcrl
pop
lea
roll
icebp
adc
notl
outsl
ret
bound
test
test
out
fadd
push
cmpsb
xor
in
push
scas
xchg
adc
inc
and
xchg
push
adc
xlat
fisttpl
adc
adc
or
pop
lret
inc
xor
insb
loopne
sahf
inc
lcall
je
add
leave
pushl
popl
clc
sub
or
jmp
lods
loop
int3
mov
cs
addl
loopne
inc
mov
pop
insl
sub
mov
imul
jle
fisubrl
push
push
sbb
xor
es
cmp
and
cwtl
push
aas
ret
pop
mov
xor
xor
inc
call
aad
push
test
sbb
nop
sbb
mov
xchg
mov
and
lret
sbb
arpl
jg
mov
mov
jo
repz
movsb
mov
jb
fmul
mov
iret
lds
mov
jge
adc
add
cmp
dec
sti
mov
xchg
or
mov
mov
jo
pushl
loop
pusha
test
fisttpl
jae
in
enter
and
lods
cmp
ljmp
pop
pop
outsl
repnz
fbld
xchg
iret
pop
mov
sbb
in
or
ret
movsl
out
lret
push
xchg
data16
push
loopne
xor
sub
mov
movsl
pop
divb
insl
aaa
test
adc
inc
jo
push
loop
test
pop
hlt
sahf
jae
cs
out
xchg
les
les
sub
cmp
pop
mov
scas
dec
setne
mov
aad
add
cwtl
lock
inc
enter
popa
mov
leave
in
push
nop
pop
xor
push
dec
clc
repz
ret
pop
insb
in
repz
movsb
sub
out
in
xor
push
xor
popf
aaa
fnstsw
cmp
xchg
cltd
stos
jne
push
ljmp
mov
push
adc
xchg
inc
pop
mov
jge
jmp
sub
dec
dec
rcrl
adcb
notb
test
push
cld
push
mov
sbb
jp
mov
mov
mov
call
inc
lea
aad
adc
negl
xchg
mov
sbb
addr16
push
jae
adc
test
xchg
out
add
dec
iret
adcl
xor
lea
dec
or
nop
out
cmp
or
std
mov
mov
aas
add
mov
mov
cs
mov
mov
inc
push
adc
test
xor
aaa
cltd
jb
jmp
sbb
or
dec
mov
jecxz
xor
sub
cmpsl
xor
lods
or
mov
ljmp
adc
loop
loop
cmp
or
rcll
pop
hlt
lahf
lret
mov
adc
sbb
ficomps
outsb
shl
fdivrl
mov
call
paddw
cmp
ss
test
pop
pop
sbb
pop
xor
orb
pushf
mov
mov
push
pop
lcall
stc
repnz
mov
rorb
aas
loopne
cmovne
out
stos
jge
stc
lret
dec
pop
mov
dec
add
jmp
addb
mov
dec
out
rcrl
ret
lahf
push
add
std
push
imul
xchg
dec
dec
inc
mov
jmp
mov
sub
movsl
mov
lods
or
ss
nop
xchg
cs
dec
adc
and
int
ljmp
aam
or
popf
jge
sbb
add
lret
aam
adc
gs
lea
dec
and
cmp
into
adcl
jo
and
sbb
mov
ret
sbb
loop,pt
gs
add
mov
dec
pop
adc
incl
nop
or
bound
leave
xor
stc
sub
mov
xchg
jo
into
mov
jns
xor
fnstsw
push
inc
xchg
pop
mov
nop
push
enter
jl
dec
mov
lock
jbe
pop
fldpi
add
cmp
cmc
pusha
das
orb
add
push
xor
mov
push
aam
dec
aas
push
pop
daa
hlt
mov
add
dec
cmp
out
in
inc
xchg
sbb
ljmp
lahf
inc
lcall
aad
into
out
cwtl
cmp
loop
or
daa
and
xchg
sub
shl
sahf
cmp
lcall
loop
in
dec
rclb
adc
push
insb
sub
call
lods
sbbb
stc
pop
nop
cli
sub
or
hlt
in
cmpsb
je
jmp
jnp
dec
dec
push
clc
lret
push
je
adc
dec
fldcw
add
mov
into
adc
pop
lret
mov
incb
aam
and
xor
sub
nop
fidivrs
xchg
pop
add
scas
enter
loopne
shrb
repnz
add
fs
jnp
xor
aam
inc
xor
mov
into
loop
pop
ret
cmp
xchg
jo
or
cmp
into
mov
scas
pusha
fwait
pop
sahf
inc
add
into
pop
pop
adc
cmp
cmp
dec
inc
mov
push
daa
inc
mov
jle
int
jo
ja
shlb
loope
pushf
pop
pop
cmp
jg
pop
mov
mov
int3
push
mov
cmpsb
push
iret
fcomi
dec
pop
data16
push
and
insl
arpl
test
fwait
je
rol
aad
xor
push
ds
or
jns
mov
in
inc
hlt
stos
mov
in
cmp
fdivrl
bnd
push
sbb
mov
mov
mov
cwtl
mov
xor
rorb
scas
loop
mov
pop
pop
and
test
mov
cmp
into
je
int
fwait
sub
jg
adc
es
mov
cmp
or
lods
sub
bound
iret
es
push
push
sti
jmp
sbb
fidivl
push
cltd
sahf
std
mov
iret
test
mov
mov
sbb
sub
pushf
lds
test
out
dec
sti
fstl
lock
mov
xchg
xchg
pop
popf
dec
dec
sub
adc
andb
fmul
jb
lea
cmpsl
repz
add
adc
arpl
insb
dec
sub
dec
call
aaa
add
call
push
popf
mov
aaa
ds
bound
daa
jp
cli
aaa
sbb
dec
adc
cmp
add
idivb
nop
mov
mov
jnp
data16
fnstenv
aas
xchg
call
jge
mov
in
test
or
pop
push
and
mov
and
dec
mov
das
lods
into
daa
xor
lahf
test
mov
int3
insb
jecxz
mov
out
and
push
pusha
pop
adc
xor
cmp
insb
push
push
adc
imul
xchg
out
xchg
lret
adc
push
test
sub
imul
jno
xchg
int
mov
fldt
test
mov
push
lods
lea
negb
flds
sbb
inc
jae
and
adc
popa
test
xchg
cmp
mov
cmp
bound
mov
mov
and
lds
movl
or
jecxz
int
jl
xorb
push
cwtl
test
iret
push
ljmp
mov
fistps
into
lock
dec
xchg
negl
lds
jmp
jo
jb
cmp
in
data16
out
imul
add
add
sub
sub
not
daa
jno
arpl
xor
add
pop
cmpsl
jmp
cmp
mov
addl
push
add
faddl
clc
xlat
and
mov
xchg
cmp
cmpsl
out
cltd
xor
jnp
mov
sbb
inc
outsl
mov
jmp
lret
idiv
dec
out
sub
test
cmp
ret
std
dec
mov
jle
rolw
lods
and
jp,pt
cmpsl
ret
cwtl
hlt
fstp
sub
push
pop
lds
imul
loop
add
pop
lret
fwait
add
mov
mov
or
daa
mov
xchg
inc
add
inc
adc
addr16
mov
or
push
push
in
filds
mov
fs
jb
lea
push
cs
jo
push
mov
inc
pop
jle
sbb
sub
or
mov
inc
movhps
cli
lcall
fimuls
pop
pop
jb
add
mov
push
js
push
mov
rclb
pop
mov
push
test
mov
lahf
pushf
mov
into
mov
adc
test
adc
popf
sub
jmp
int
imul
aam
sbb
dec
shr
stc
lcall
ret
sub
cmp
loop
out
testl
aaa
mov
scas
stc
cwtl
jmp
pusha
out
in
xor
add
loopne
fidivl
repnz
loop
jmp
sub
sti
loope
jecxz
test
cmp
outsl
or
mov
rcll
ret
jmp
sbb
mov
or
lret
fwait
cmp
in
es
mov
stos
push
int
fcompl
loopne
push
aad
mov
cmp
rcrb
ret
cmp
out
sub
pushf
enter
stc
nop
imulb
mov
mov
xchg
sub
loop
jns
cmp
loopne
in
insb
movsl
xlat
add
cmp
mov
outsl
sbb
cmp
adc
dec
sub
out
sbb
mov
mov
xchg
xor
inc
add
jno
cmp
mov
lea
lods
lds
pop
dec
mov
test
out
rolb
in
dec
daa
pop
push
sbb
jecxz
nop
mov
inc
cmp
addl
aas
add
std
icebp
lock
js
sahf
cmp
aad
inc
sti
cmpsb
imul
pop
hlt
mov
adc
iret
lret
jl
addl
jg
push
stos
lods
mov
nop
mov
dec
repnz
aas
movb
mov
cmp
sbb
gs
push
mov
jo
add
sub
adc
xor
inc
inc
movsb
pop
cmp
cmp
sub
rcll
les
xor
xchg
sbb
dec
jno
add
inc
imul
into
xchg
dec
test
das
loope
or
jmp
cmpsl
cld
dec
xchg
icebp
add
add
std
incl
push
xor
sgdtl
insb
out
into
incb
stos
movsb
mov
aaa
imul
sbb
mov
hlt
ficoml
dec
jecxz
and
mov
dec
lcall
in
inc
mov
xchg
cmp
dec
cld
faddl
mov
xor
and
mov
leave
dec
pop
jno
gs
addl
jle
push
js
aam
xor
sbb
in
sbb
cld
test
nop
bound
jle
xor
dec
setb
repnz
cmpsl
rolb
and
xlat
jno
test
or
lea
mov
and
xlat
sbb
and
cwtl
cwtl
fistpl
sub
jns
mov
fmull
or
test
aaa
dec
push
aad
rcr
xor
or
mov
testl
cmp
fsubr
xor
fwait
repz
mov
filds
loopne
clc
nop
fdivl
enter
jp
dec
add
mov
xchg
jbe
inc
sti
sub
push
sbb
jle
rorb
lahf
in
inc
sbb
sub
jg
inc
sub
push
adc
and
shll
mov
push
mov
lods
ja
cmp
bound
and
fwait
ds
adc
jne
insl
adc
test
sbb
jp
pop
and
adc
aam
xchg
adc
shrb
dec
pop
jecxz
mov
jg
adc
pop
shrb
cmp
mov
mov
add
inc
cmp
jmp
and
inc
jo
stos
xchg
xor
outsb
mov
inc
lret
testb
xchg
adc
enter
movsl
fwait
sti
mov
dec
fistps
pop
loopne
push
arpl
dec
inc
xchg
cli
into
test
fs
and
sar
ds
xchg
ret
pop
adc
mov
jno
mov
adc
or
xchg
fnstenv
jle
xchg
sub
ds
aas
mov
sub
fildll
adc
aad
mov
mov
in
inc
daa
jle
sahf
data16
pop
mov
inc
push
fwait
es
aas
add
add
adc
loop
iret
adc
xor
dec
sbb
sub
lods
shl
xchg
std
add
in
mov
mov
xor
stos
out
inc
xchg
fyl2xp1
fists
push
enter
mov
mov
rolb
xlat
dec
add
inc
mov
pusha
cmpsl
adc
pop
xlat
xor
add
out
jl
jb
mov
push
pop
repz
jae
clc
inc
loopne,pt
push
es
push
mov
sub
iret
add
ret
sub
xchg
sbb
pop
adc
mov
jbe
xchg
inc
sub
aaa
mov
jecxz
stos
or
call
int3
flds
mov
xchg
mov
mov
repnz
bound
lods
movsl
fucom
sub
or
mov
or
inc
jno
clc
pop
mov
in
ret
adc
es
test
mov
ret
lods
adc
dec
mov
fidivrs
cmp
mov
sub
dec
mov
pop
xlat
je
pop
mov
stos
mov
xchg
loopne
cld
jnp
mov
inc
xchg
cmpsl
xchg
push
xchg
movsl
data16
jmp
cmp
ds
gs
addr16
sbb
pop
sub
lds
hlt
xor
and
dec
daa
in
add
jb
lods
adc
leave
xchg
addr16
hlt
out
or
adc
dec
aaa
sub
xchg
jl
lea
lods
push
lahf
mov
out
or
sbb
dec
push
inc
mov
xchg
ja
inc
jnp
icebp
sub
cmp
mov
xchg
xor
andl
aaa
popf
pop
mov
push
mov
xor
mov
sarl
pop
jno
gs
es
pop
out
jl,pt
push
mov
inc
push
aam
cld
lock
clc
aas
cmp
sub
out
lods
jo
dec
mov
or
xorl
cmp
jl
shr
lcall
addb
cs
or
mov
insb
mov
iret
test
mov
data16
int
pop
adc
mov
clc
out
inc
rcrl
cs
std
pop
or
loope
ja
push
leave
ss
rorl
cmc
jg
xchg
jbe
jnp
out
or
mov
clc
or
xor
shrl
rorb
sub
xor
daa
jb
xchg
jecxz
and
jnp
popa
dec
int
add
fidivs
enter
imul
xor
jp
jle
es
and
cmp
inc
sub
loope
rorl
ret
jo
dec
mov
sub
or
cmp
gs
pop
je
insb
lcall
fistl
and
pop
idivl
mov
and
mov
shrl
fsub
sbb
pop
inc
dec
xchg
jecxz
sbb
adcl
lds
int3
mov
gs
iret
push
pop
push
jl,pt
fisttpl
xchg
add
add
loope
sar
loopne
and
outsb
cmpsl
sub
loop
dec
stos
xchg
roll
cwtl
testb
in
and
stos
out
gs
jl
dec
loope
xor
enter
add
xchg
xor
jbe
push
ret
repz
sub
add
jg
mov
outsb
mov
shrb
cmp
mov
xchg
scas
xor
cmp
mov
xchg
daa
js
jle
in
repnz
aam
add
lods
data16
xlat
and
cwtl
adc
aaa
sahf
cmp
stos
xchg
lahf
mov
mov
jb
insb
sbb
adc
aas
je
push
lods
adc
xor
jne
add
out
imul
rcrl
mov
pop
cwtl
sub
mov
inc
iret
arpl
add
mov
lahf
cs
arpl
loope
daa
sarb
lods
sahf
aas
inc
call
es
addr16
adc
sahf
imul
out
add
pushf
mov
push
sbb
push
pop
jbe
cli
dec
cmc
pop
fidivl
mov
lods
push
jp
add
pop
push
mov
out
xchg
mov
xchg
inc
shl
ss
mov
movsb
fistpl
call
jge
in
sbb
and
sbb
pop
jmp
lea
sub
inc
sub
jl
dec
jg
and
mov
mov
jne
call
outsb
mov
lahf
add
xor
push
mov
imul
fld
rcrb
jae
movsl
test
and
dec
loopne
push
and
mov
jo
imul
adc
mov
mov
inc
lcall
test
jmp
push
xchg
and
pop
push
mov
xchg
repz
xchg
mov
shrb
lret
adcl
jg
xchg
lret
sbb
popf
jae
inc
fidivrs
push
xchg
fldenv
mov
testl
ljmp
cmpsl
test
jb
xor
push
mov
popa
scas
inc
ja
in
ljmp
adc
jmp
in
jo
xlat
or
lds
test
inc
dec
lcall
xlat
adcl
hlt
add
int
adcb
sub
mov
jnp
pop
sti
loopne
inc
mov
xchg
pop
xchg
shrb
cmpsl
in
enter
dec
jg
mov
ds
pop
mov
and
dec
iret
je
push
jns
lret
or
jno
in
mov
sbb
in
mulb
js
pop
dec
mov
or
fldl
int
cld
lods
aaa
adc
hlt
jne
jno
sbb
mov
adcb
les
pop
aas
leave
data16
hlt
out
cs
push
je
mov
pop
sub
rolb
xor
ss
test
out
aad
loop
arpl
push
rorb
xor
jns
pop
je
xchg
xchg
xchg
adc
add
pop
scas
sbb
leave
lds
cltd
xchg
fcmovbe
push
mov
leave
jge
dec
or
mov
cmpsl
in
mov
dec
imul
push
mov
bound
rorb
mov
stos
dec
stos
lcall
push
jp
fisttps
mov
mov
ljmp
push
adc
aam
pushf
sbb
daa
fldt
or
cli
lea
cmpsl
shrl
add
mov
dec
cmp
idivb
lea
xchg
add
mov
jbe
sbbl
sbb
jle
popf
adc
mov
add
mov
repz
sub
pop
adc
or
roll
lret
aad
push
pop
lahf
insb
testl
xchg
xchg
inc
stos
cmc
pushf
push
inc
fs
shrb
sub
mov
xor
cwtl
jne
je
aaa
jle
aas
adc
jbe
pusha
stos
sbb
pop
xchg
andl
pop
mov
pop
ret
add
movsl
mov
and
data16
into
mov
fwait
cmp
pop
and
mov
jno
inc
sub
arpl
leave
lds
iret
pop
insb
not
push
jge
dec
fisubl
jo
xchg
jno
test
mov
dec
adc
out
mov
nop
movsl
les
nop
xor
sbb
sbb
daa
or
xchg
movsb
ljmp
outsb
ret
adc
mov
cli
lahf
xchg
ljmp
push
xor
lods
sahf
movsl
jle
fcos
stos
add
outsl
xor
xchg
xchg
jle
push
rep
xchg
jge
call
or
inc
mov
xchg
out
in
push
std
fimull
shrb
cmp
mov
jnp
cld
sub
arpl
pop
pop
out
iret
xor
mov
xchg
push
sub
gs
push
jp
cwtl
add
mov
mov
adc
push
icebp
cwtl
jns
adc
addr16
xchg
push
jp
dec
jno
lods
mov
js
inc
sub
pop
pop
inc
icebp
dec
iret
scas
mov
push
mov
mov
shrb
pcmpgtd
lret
add
push
xchg
mov
hlt
mov
and
stc
ss
jno
and
insb
cmp
scas
push
push
out
push
inc
test
fs
fidivl
cltd
fwait
mov
mov
test
mov
std
cmc
test
inc
out
and
jp
or
test
pop
dec
and
sub
aas
push
dec
ret
xchg
pop
push
xchg
and
sar
pop
sbb
xor
sub
fcmovu
push
dec
call
sarb
sub
leave
sub
and
adc
mov
inc
je
ljmp
daa
xchg
xchg
sub
loope
sbb
int3
pop
and
mov
in
cmp
xor
or
stc
push
adc
pop
scas
std
dec
stos
cmpsl
test
adc
sti
xor
jae
sahf
push
push
jo
lods
div
sub
pop
push
sti
sbb
or
movsb
sbb
cmpsb
shll
roll
rcrl
xor
mov
cmp
out
add
icebp
and
or
test
or
ja
mov
inc
adc
and
pushf
mov
mov
mov
addr16
pusha
push
inc
xchg
inc
and
mov
outsb
sbb
jmp
add
xchg
jecxz
push
iret
push
fcomip
out
xchg
scas
in
pop
inc
pop
jne
sbb
loope
pop
xchg
mov
stc
push
mov
out
inc
addr16
xor
in
mov
test
movsb
xor
imul
push
dec
adc
std
into
push
lea
or
scas
push
jbe
mov
push
shll
push
sbb
lret
xchg
sbb
movsl
dec
lds
inc
pop
fs
xor
xor
mov
lea
or
cmp
mov
adc
mov
aad
and
cmp
int
sbb
mov
call
clc
popf
mov
sbb
push
add
jl
int
adc
lea
adc
test
xchg
mov
stos
call
dec
std
adc
btr
aas
inc
xorb
bound
inc
adc
dec
into
mov
fsubl
push
imul
dec
sbb
push
mov
inc
xor
add
leave
or
mull
xchg
iret
ljmp
sbb
pop
and
rcrl
sub
sub
push
jp
cmp
dec
pop
adc
movsl
mov
dec
call
add
cmp
push
fidivl
inc
andb
sbb
loopne
loopne
adc
mov
out
mov
scas
or
notb
cmp
das
mov
mov
pusha
xchg
in
hlt
cmp
xor
pop
push
add
jmp
into
push
mov
jnp
sbb
cmp
jb
lea
repz
je
xchg
cmpsl
inc
es
out
xor
add
push
sub
add
jo
and
add
add
push
cmpsb
mov
outsb
push
xchg
lods
add
mov
mov
mov
in
xchg
das
sbbl
dec
jns
mov
movsb
test
sbb
xchg
aam
fsubl
leave
jge
mov
movsb
loopne
add
cwtl
lds
xor
int3
mov
aam
test
pop
mov
adcl
pop
or
jae
imul
jae
cmp
idivl
in
or
pop
xor
iret
inc
mov
movsl
mov
jnp
cli
pushf
jge
stos
push
cmpb
outsl
xor
das
outsl
mov
dec
adc
xlat
push
orb
and
xlat
aad
adc
xchg
outsl
push
ret
xchg
ljmp
inc
enter
test
fwait
mov
ret
arpl
xorb
pop
outsb
or
sub
aam
mov
push
mov
sbb
inc
push
jmp
test
inc
out
jo
adc
repz
inc
js
or
or
pop
or
aaa
in
es
mov
mov
or
and
popa
scas
out
adcb
fcom
mov
sarb
dec
cmp
inc
xor
cmp
inc
push
jecxz
lret
adc
mov
sub
cmpl
sub
pop
std
scas
and
sbb
movsl
stc
fstps
nop
xor
out
and
loop
dec
cmpsl
jno
iret
fmul
or
movsb
filds
sbb
jnp
ja
lret
push
xchg
and
fwait
pusha
fstpt
test
lock
fld
pop
mov
into
js
push
push
fidivrs
popa
jle
outsl
cltd
ss
xor
popf
or
test
jbe
xor
adc
adc
inc
pop
movsl
sbb
cmp
dec
aad
add
gs
scas
mov
inc
les
push
or
mov
cmc
lahf
gs
or
filds
dec
jns
roll
pop
xchg
imul
iret
mov
fcoml
pop
xor
fstps
and
pop
cld
add
and
adc
add
pop
xchg
push
mov
pop
pop
fs
les
ret
popf
xchg
sub
div
and
dec
scas
orl
ja
cmp
sub
das
pop
leave
aaa
mov
cmp
ret
sub
test
mov
adcw
add
into
jns
lret
out
jno
es
or
popa
aam
ss
ds
enter
pop
and
add
push
arpl
or
ljmp
lahf
fists
pop
jp
sub
inc
mov
pop
dec
jns
out
adc
fcmovnu
mov
pop
js
add
xor
push
pop
jmp
cmp
imul
xor
adc
das
loope
jg
repz
jns
add
int3
mov
dec
and
pushf
call
aaa
mov
out
ljmp
fucomip
and
push
inc
sti
lea
test
jae
sti
mov
and
aad
fcmovnu
mov
sbb
aam
xchg
adc
or
lcall
cmp
add
push
out
outsb
cltd
loope
mov
mov
stc
je
push
loop
clc
lret
clc
stc
shrb
sub
aaa
pushw
movsb
ret
xchg
sahf
cmp
lahf
ds
or
ds
jne
adc
aaa
and
repz
add
sub
xchg
dec
in
xchg
pop
pop
xchg
roll
scas
sahf
cld
cmp
icebp
inc
jb
sbb
pop
cmpsl
daa
add
movsl
lds
or
adc
aaa
aaa
clc
rol
jle
imul
jg
or
iret
dec
adc
or
mov
cld
insb
negl
pop
cmp
or
leave
lock
add
push
into
xchg
xor
in
mov
lds
dec
and
mov
icebp
adc
int3
push
leave
jns
decl
decb
mov
sbb
movsb
test
pop
movsb
xchg
out
insb
sub
scas
out
sub
sub
mov
sbb
out
and
fldenv
mov
xchg
xlat
xor
mov
inc
jno
test
sbb
fsubrs
std
xor
mov
dec
pop
dec
lds
cld
lea
fnstcw
jbe
jbe
imul
sbb
loop
shl
adc
fdivrl
or
dec
outsl
je
call
mov
mov
dec
into
xchg
mov
fwait
and
enter
call
inc
mov
adc
neg
mov
push
incl
adcl
hlt
add
int
loopne
cwtl
gs
mov
sahf
rclb
repz
ret
bound
jbe
lods
xchg
sub
pop
ret
sbb
mov
test
cmc
sbb
jecxz
sub
mov
and
repz
and
pusha
mov
fstpt
lea
xor
xor
les
or
adc
cmp
fldl
dec
repnz
add
mov
aad
add
push
sahf
enter
adc
test
je
inc
dec
pop
cli
repz
xor
imul
push
aad
or
pop
cmpsl
test
jp
and
and
xchg
add
mov
add
jne
dec
sti
lret
mov
movsb
loopne
ljmp
sti
or
lods
push
aam
add
aaa
xchg
mov
sub
mov
add
xor
sahf
iret
or
mov
loop,pn
mov
xor
jne
xor
or
test
sti
arpl
test
aam
iret
inc
pop
jp
pop
inc
xchg
mov
push
sub
push
inc
adc
jecxz
mov
cli
je
loopne
dec
mov
es
test
add
ss
mov
cmpsl
cmp
jmp
call
insb
rol
mov
sbb
pop
testl
or
lcall
iret
push
in
cmpsl
stos
lods
pop
es
jge
mov
out
adc
dec
imul
ljmp
add
push
int
push
cmp
add
mov
sbbb
mov
cltd
jp
cmp
data16
ret
push
inc
add
int3
pop
test
aaa
in
or
out
out
insl
lods
fwait
rorl
mov
mov
data16
ror
push
xchg
leave
jae
fistpl
lahf
lds
jnp
aam
xchg
jne
cmpsl
out
mov
dec
xor
stc
sbbl
in
rorb
pop
test
push
and
or
sub
push
jnp
gs
jmp
mov
imul
iret
loope
inc
in
push
jne
arpl
repnz
out
pop
outsl
inc
mov
mov
mov
mov
fnsave
xor
jmp
adc
or
add
push
popa
movsl
dec
fistpl
inc
xor
pop
aam
cld
movsl
inc
call
lds
jge
mov
add
cli
add
push
add
mov
push
lahf
mov
adc
cmpl
mov
int
js
mov
stos
aam
lret
mov
mov
lock
jg
mov
arpl
pop
into
push
push
iret
jne
cmp
push
call
cs
push
and
sub
mov
shlb
stos
mov
inc
pop
sub
add
inc
ficompl
iret
fs
orl
mov
js
popl
hlt
jnp
aas
xor
sbb
imul
rol
mov
mov
xchg
and
jle
xor
sar
insb
jae
mov
negl
add
sti
and
push
cmpsb
xchg
sub
pop
jo
pop
aad
lret
cmpsl
push
cli
adc
xor
dec
sbb
jno
jecxz
mov
dec
addl
mov
loope
fldcw
jne
xor
arpl
jnp
cmc
mov
pop
sar
iret
sub
adc
cmp
imul
orl
push
fldl
mov
test
cmp
clc
and
push
push
aad
and
cmc
mov
cli
push
ror
outsl
lea
aam
ss
push
dec
or
xchg
pop
xchg
pandn
adc
test
rorl
jg
mov
xchg
jae
mov
xchg
pop
mov
mov
pop
pop
pop
pop
mov
outsb
xor
xor
icebp
push
mov
sahf
shld
movsl
test
test
lret
mov
push
aad
mov
xlat
xchg
mov
adc
add
popa
mull
in
dec
inc
movsb
popa
in
inc
sbb
jle
and
pusha
movsl
lret
jecxz
sub
push
std
push
xchg
add
std
leave
cmp
outsl
shll
icebp
icebp
cmp
mov
lcall
sub
inc
jo
adc
inc
imul
xor
divl
imul
push
cmpsl
push
iret
fs
inc
xchg
adc
jbe
pop
xor
cld
cmp
pop
imul
or
js
sbb
sti
cmp
div
push
cmp
or
adc
rolb
test
adc
nop
scas
or
daa
add
push
addr16
sbb
lret
add
and
ret
add
sahf
xor
xchg
mov
nop
stos
fildll
add
or
in
das
push
imull
lods
jg
add
js
ffree
ja
pop
stos
xor
in
sub
ds
adc
jmp
jg
bound
jne
mov
outsb
mov
inc
inc
testb
popf
gs
hlt
stos
ja
inc
std
mov
mov
outsl
push
repz
push
mov
aad
sbb
mov
fmull
mov
mov
push
ds
lods
dec
idiv
add
sub
daa
jb
push
inc
inc
out
lea
shll
data16
hlt
inc
mov
mov
mov
and
fimuls
stc
xor
out
dec
dec
fists
mov
shll
and
out
cmp
mov
sub
jmp
pop
mov
leave
lahf
cmpsb
dec
push
stc
sub
iret
and
data16
mov
movmskps
inc
jns
fwait
jge
outsb
ja
fs
mov
add
cmp
pop
xor
stos
nop
pop
neg
shrl
ljmp
call
mov
adc
cmpsl
sub
adc
mov
cmp
add
cs
rcll
lahf
movsl
int3
push
jle
push
scas
js
cmp
cwtl
jmp
mov
fistpll
push
loop
divb
frstor
mov
lahf
mov
mov
inc
imul
cld
cmp
fsub
mov
ja
in
in
fsub
sub
sbb
xchg
repnz
mulb
lea
stos
lds
lds
mov
pop
add
loopne
je
jne
stc
cmpl
xlat
mov
cmc
pop
test
sbbb
or
cmp
scas
sub
cmp
fcomps
fdiv
cmp
push
mov
mov
rorb
aad
leave
mov
or
popf
xor
aad
enter
aam
idivl
pop
mov
ljmp
sbb
lock
pop
jns
lods
add
cld
rcrb
int3
ret
mov
xor
dec
enter
dec
add
mov
dec
sahf
push
cmp
mov
xlat
cmp
das
cltd
shr
or
mov
data16
gs
xor
dec
pop
sbb
xchg
sbb
test
mov
lods
addr16
dec
filds
inc
dec
cmp
sub
pusha
inc
sub
imull
cmp
sub
jmp
xor
fisttpl
pop
push
jg
clc
mov
popf
cbtw
xor
inc
cmpsl
test
in
stos
js
push
in
xor
xchg
cs
sar
jno
or
aaa
jl
push
and
repz
out
out
cs
stc
dec
gs
les
jmp
push
jmp
mov
xlat
lods
je
pop
mov
fnstenv
inc
mov
arpl
pusha
cltd
inc
aad
es
insl
fistpll
int
push
mov
sub
fidivl
leave
and
scas
repnz
mov
mov
xor
mov
or
cmp
and
mov
mov
mov
mov
mov
and
lret
xchg
fldcw
xchg
push
out
outsb
mov
adc
push
cltd
xchg
jae
xchg
mov
adc
xchg
sahf
pop
inc
sbb
stos
shrl
rep
cmp
loopne
arpl
inc
data16
lret
add
pop
sub
shll
shrb
dec
hlt
mov
xchg
xor
fdivrs
fistpl
sub
inc
push
xor
inc
out
mov
test
mov
push
dec
ljmp
mov
cmp
pop
adc
ja
call
adc
jp
or
xchg
dec
pop
inc
andb
stos
shlb
sbb
mov
fs
mov
xchg
ja
push
lods
push
dec
enter
sarb
adc
push
xor
jmp
mov
loopne
pop
les
dec
push
fs
jbe
outsl
jg
cmp
fbstp
dec
adc
adc
mov
pop
movsl
test
xchg
lock
mov
ljmp
sbb
das
inc
daa
fs
jb
fmuls
mov
aaa
mov
dec
jle
rorl
enter
popf
xchg
repnz
aad
dec
imul
out
cmpsl
push
mov
sub
cmp
push
and
pop
xchg
push
push
fldl
pushf
inc
inc
es
ja
cmpsl
aaa
mov
mov
fldt
clc
or
and
mov
or
adc
inc
pop
divb
dec
jo
int3
dec
in
cltd
sarb
xchg
loope
popa
xor
mov
icebp
sub
insl
sub
push
std
jbe
mov
negl
push
dec
jle
xchg
addr16
in
popa
adc
outsl
dec
ljmp
stos
dec
xchg
xchg
mov
fnstcw
mov
adc
dec
push
cmpsl
roll
and
outsb
into
dec
sbb
in
inc
mov
or
cmp
fbstp
outsb
inc
mov
inc
or
ret
lods
pop
aad
aad
pop
daa
bound
or
insb
insb
cmp
popf
daa
inc
cmp
leave
iret
or
jae
fcmovu
out
repz
dec
add
call
jnp
jns
push
dec
pop
mov
mov
dec
pop
pushf
dec
mov
or
loope
imul
mov
mov
cwtl
jle
mov
xor
lret
jb
sbb
or
dec
outsl
cmc
fsubs
xchg
jno
lret
jb
fnstcw
pushaw
and
xchg
neg
jno
pop
clc
add
hlt
sub
call
push
in
shl
lahf
fisttpll
out
pop
add
cmpsb
pusha
mov
mov
or
xchg
repnz
pushf
push
sub
loop
fisttpll
xchg
cmc
cld
jne
test
sahf
push
and
aaa
aam
xor
stos
or
lock
adc
xchg
sub
fs
iret
fs
rcr
movsb
scas
jno
push
push
mov
loopne
andl
addb
xchg
loope
mov
iret
fidivrl
add
or
fdivl
lds
and
inc
jb
lret
xchg
sahf
push
les
dec
xchg
xlat
pop
roll
adc
bound
mov
repnz
lret
cmp
in
pop
and
dec
es
jp
insb
std
ficomps
cld
inc
aam
inc
jno
scas
push
fwait
testb
sbb
jl
inc
xchg
enter
loopne
mov
cltd
push
into
push
or
pop
dec
push
mov
scas
mov
int3
adc
enter
test
pop
push
test
pop
es
adc
mov
ja
fcomps
cmc
int3
mov
or
and
lock
mov
xchg
pop
je
pop
leave
sti
jge
push
lods
xchg
pop
cli
cmpsb
pusha
test
xchg
lds
xchg
push
insl
fmuls
lea
insl
cltd
aam
mov
out
cltd
xchg
fmull
xchg
subb
xor
test
ljmp
sbb
add
xlat
mov
or
dec
test
into
xchg
js
push
jns
roll
inc
pop
adc
mov
cli
add
in
pop
sti
jmp
adc
int3
lea
es
mov
jp
jno
dec
fwait
lock
out
push
pop
and
enter
aas
jl
rep
lcall
xchg
push
fsubs
inc
bound
sbb
or
xchg
xor
sbb
and
outsb
and
outsl
mov
pop
push
adc
jl
repnz
popf
ret
jg
jno
push
loope
popa
jo
mov
repz
test
mov
out
push
int
dec
xchg
stos
in
lock
add
xchg
adc
mov
jae
es
jmp
add
mov
xchg
fdivl
pop
cs
testb
imul
and
inc
scas
xor
jecxz
add
jno
pop
les
test
lea
test
add
xchg
es
jg
js
mov
cmp
push
and
inc
or
add
shr
xor
inc
push
test
xor
fcomip
pop
and
mov
jo
sub
inc
es
and
test
cmp
inc
arpl
incb
js
mov
outsl
bsf
aad
jnp
jnp
mov
add
lds
sub
or
xchg
fs
dec
jmp
pop
jb
xor
push
fldcw
scas
adc
mov
dec
mov
stos
push
cli
bound
fidivs
jno
inc
mov
xlat
jmp
rcl
nop
mov
xchg
xlat
and
fstpl
xchg
add
aam
es
mov
cld
lret
jmp
inc
addr16
jmp
or
sbb
sahf
test
cmc
xor
std
mov
push
test
pushf
mov
cltd
mov
jo
iret
mov
int3
in
mov
insl
xchg
and
sbb
add
ss
jecxz
sbb
mov
dec
add
inc
pop
out
xor
cmpsl
fcoms
fyl2xp1
push
jg
int3
outsl
jno
vphsubdq
and
movsb
pusha
sub
sub
notl
xchg
int3
jbe
mov
push
pop
aaa
stos
dec
lahf
iret
scas
adc
test
pop
cld
xchg
mov
xor
and
dec
xchg
or
outsl
add
sbb
int3
sbb
popl
mov
inc
adc
dec
xor
enter
lret
jbe
repz
loope
test
imul
ficoms
xchg
shll
jne
out
pop
xchg
mov
std
idivl
or
lods
mull
pop
test
or
xchg
mov
inc
enter
push
lods
pushf
cli
rcll
in
loop
pop
dec
ret
jmp
cmp
sub
cltd
nop
fisubrs
dec
jl
push
mov
cmp
or
or
aaa
sbb
sahf
insb
sub
and
pop
inc
andb
iret
jo
addr16
in
mov
jb
add
and
rcl
xchg
sbb
scas
add
into
movsb
sub
popa
mov
mov
fbstp
in
decb
xchg
inc
xor
push
test
inc
cmp
sbb
lret
out
sarl
stc
loopne
fsts
xor
icebp
pop
cmp
test
and
and
xor
or
lahf
pop
out
xor
inc
push
push
mov
cmp
test
pop
or
aas
xchg
mov
lret
and
mov
lret
jp
iret
and
cmpsb
xor
mov
cwtl
popa
test
test
cmp
ror
push
setnp
mov
xor
push
iret
movsb
into
inc
or
loope
out
jb
inc
inc
sbb
jle
inc
popf
rclb
adc
jae
loopne
adc
cmp
lret
aad
jne
push
scas
push
stc
bound
sti
popf
mov
dec
adc
lret
icebp
loope
sti
test
sbb
lret
xchg
ljmp
into
shr
pop
arpl
jns
inc
rorl
lods
and
je
nop
cmp
mov
scas
mov
scas
or
jle
enter
rcrb
mov
push
fmull
sti
outsl
mov
test
jae
cs
push
clc
movb
orl
cwtl
into
or
lret
sbb
movsb
inc
and
xlat
leave
cmpsl
inc
inc
jle
add
nop
cwtl
push
adc
cli
lcall
cmp
inc
sub
lods
inc
sub
sub
es
mov
cli
call
mov
inc
mov
aad
xchg
das
leave
repnz
outsb
pop
adc
ljmp
xor
daa
loop
cmpsl
aad
int3
daa
idivb
out
cmp
nop
cmpsb
repnz
push
daa
movsb
ds
loop
imul
add
pop
or
push
xchg
or
invd
dec
pop
cmp
cli
pushf
out
je
add
mov
movsb
shll
stos
mov
pop
clc
sub
push
add
mov
pusha
outsb
insl
push
mov
sub
loope
pop
ss
adc
dec
icebp
mov
or
pop
or
sbb
fldt
sbb
pop
or
sub
and
xor
pop
pop
jp
nop
psrld
scas
inc
leave
jl
call
add
movb
daa
int3
mov
xchg
jg
dec
mov
shrb
stc
mov
jo
aaa
or
jno
call
push
xchg
jnp
mov
fidivrl
mov
test
lret
dec
test
dec
sbb
mov
out
pop
stc
sti
inc
sbb
mov
mov
push
int3
inc
inc
jecxz
or
das
ja
inc
test
cli
jo
lods
out
out
jb
mov
xor
sti
iret
sub
ja
pusha
or
mov
ds
addr16
sub
ljmp
inc
pop
dec
mov
or
pop
call
inc
mov
sbb
mov
jecxz
popf
mov
mov
xchg
mov
mov
cmp
ja
ja
jle
cs
in
hlt
fmull
mov
mov
inc
hlt
outsb
insb
in
call
jno
add
pusha
add
gs
lods
and
loop
clc
mov
jbe
je
enter
aam
pop
xchg
xor
pusha
dec
xor
sub
xchg
fdivl
movsl
cmpsb
sub
or
xchg
xchg
pop
sbb
jae
aas
xor
imul
mov
mov
inc
mov
imul
jmp
sbb
loope,pn
call
lock
cwtl
and
shl
mov
mov
fcompl
inc
fs
scas
imul
enter
arpl
push
mov
or
call
inc
cs
loop
xchg
mov
sbb
push
lock
aam
test
aas
pop
push
icebp
popa
cmp
sbb
adc
jo
shrb
popf
pop
call
push
push
mov
scas
and
mov
add
jne
pop
sub
jl
push
jecxz
cld
ja
mov
movsl
add
andl
leave
lahf
ds
xchg
push
lods
jbe
mov
cld
push
add
scas
cmp
xor
in
mov
sub
or
in
inc
imulb
mov
push
xchg
xchg
in
add
mov
cwtl
mov
sub
xor
ffree
sahf
fnsave
adc
jl
xchg
out
shlb
mov
mov
sbb
pop
jne
adc
mov
sbb
int
xor
pop
dec
push
test
inc
sub
xor
stc
test
push
dec
out
pop
push
mov
hlt
sbb
cmc
or
push
dec
test
mov
push
pusha
loop
inc
sub
sar
js
mov
sub
xor
nop
mov
pop
cld
jnp
mov
repz
cmpsl
js
dec
mov
fldenv
cmp
test
sbb
out
add
xchg
or
jmp
fwait
sti
jge
sbb
iret
ss
jo
rorb
int
test
fisttpl
xor
mov
push
jne
sti
lds
repz
in
mov
xchg
push
adc
pop
movsl
int3
hlt
cmp
scas
xchg
lds
das
les
pop
bound
cld
stc
adc
inc
clc
in
pusha
lock
ret
xchg
test
inc
enter
xor
mov
test
in
push
push
leave
xchg
push
fsub
inc
pop
mov
cmp
iret
jb
dec
clc
sub
jg
ret
sub
mov
inc
sub
aad
push
sub
pop
cmp
aas
ret
push
cmp
dec
enter
je
icebp
movsb
jae
fcomp
xlat
mov
jmp
lret
inc
push
mov
xchg
test
in
je
lahf
push
dec
sbb
mov
outsb
out
arpl
cmp
add
or
push
outsl
inc
repnz
mov
ret
mov
cmp
call
and
ljmp
and
adc
add
and
sbb
adc
bound
jl
cmpsl
push
test
inc
cmp
insb
mov
sub
shr
popa
pushf
jle
lcall
push
imul
and
xchg
nop
inc
ljmp
dec
cmp
je
jmp
shll
shl
ret
jo
or
sahf
push
out
repz
jae
sarb
xchg
sub
loop
in
push
and
out
inc
mov
loopne
aaa
xchg
mov
pop
jae
stc
add
push
shl
imul
test
pop
icebp
push
mov
pop
cmp
sbb
sub
bound
leave
or
lods
dec
inc
imul
xchg
xorb
mov
test
scas
cmp
push
jbe
loop
jno
dec
lcall
insb
xor
lods
lock
xor
pop
mov
outsl
sysret
inc
push
or
cmp
adc
lds
push
mov
aam
negl
std
out
shlb
and
subl
push
cmp
aas
mov
fsts
pop
pop
jg
insl
jo
andb
pop
dec
into
or
sub
xlat
cwtl
add
jecxz
and
cltd
outsl
loop
mov
jns
add
test
and
jno
dec
mov
xchg
add
imul
lahf
pop
std
xor
stos
cs
add
adc
xlat
arpl
cmpb
shrl
add
adc
aam
xor
and
mov
mov
faddl
std
mov
jns
lret
xor
pusha
mov
xchg
dec
dec
xor
leave
insb
gs
mov
mov
pop
fstl
aaa
inc
xchg
movsl
lahf
pop
dec
rol
je
hlt
insl
sarl
mov
iret
jo
and
ficomps
out
call
pop
fldenv
ret
call
vmaskmovdqu
stc
divl
inc
pop
mov
inc
stos
adc
lock
bound
mov
xchg
cld
in
cmp
in
pop
sbb
pop
adc
mov
sub
stos
rolb
imul
adc
cwtl
icebp
and
and
in
xchg
add
or
xchg
repnz
xchg
aam
jae
test
sub
loope
dec
loope
sbb
sbbb
sbb
imul
cwtl
dec
clc
and
xor
and
adc
xchg
in
pop
fiadds
pop
ss
lds
pop
shlb
addb
inc
pop
xor
fincstp
test
or
pop
rcll
popf
inc
jbe
outsl
xchg
sbb
fimuls
mov
dec
out
add
mov
or
rclb
movsb
inc
sub
addr16
xor
lcall
divb
dec
inc
pop
flds
hlt
lea
xchg
mov
and
sbb
stos
dec
fmuls
pop
push
scas
jo
xor
sbb
or
fnstenv
iret
imul
mov
test
repnz
cli
mov
cli
les
movsb
mov
xor
push
inc
pop
cmp
sahf
mov
int3
ds
call
push
bound
push
call
stos
xchg
sub
insl
out
andl
inc
ss
sarb
repz
pop
cmpsl
adc
in
lea
mov
pop
adcl
popa
cmpsl
jmp
js
hlt
das
xchg
xorb
popf
mov
cs
out
fidivs
scas
sbb
jno
outsb
or
aas
or
in
cmp
call
push
mov
sub
jnp
inc
ljmp
fsubrs
adc
mov
aam
pop
ret
dec
push
repnz
cld
imulb
inc
pusha
rclb
es
iret
push
inc
cmp
test
xchg
loope
lock
sbb
insl
enter
sbb
dec
push
popa
scas
mov
out
jle
int
push
shll
pop
ja
outsl
xchg
fcompl
loopne
addr16
cmpsl
sub
jo
js
cwtl
out
inc
outsl
sbb
mov
mov
fwait
out
movsb
push
lods
lock
pop
and
jg
mov
sub
pop
fidivs
push
outsl
xor
pop
xchg
push
sub
ss
jb
aam
repnz
divb
adc
call
shl
mov
insb
sbb
mov
adc
aam
and
arpl
test
mov
mov
mov
push
bound
xor
stos
adc
jns
aaa
mov
bound
sub
xor
rorl
rcll
jecxz
pop
scas
fsubrp
push
js
cmp
test
adc
inc
adc
loopne
lcall
push
loop
inc
ficomps
pop
es
sub
les
mov
ljmp
repnz
xchg
rcl
pavgw
dec
or
pop
cltd
mov
bnd
shrb
dec
or
sbb
adc
pop
xchg
popa
sbb
roll
pushf
mov
insb
xor
mov
push
imul
faddp
loopne
repnz
push
outsl
sbbb
sarl
ja
adc
add
xor
mov
lret
pop
or
les
or
faddl
cmp
adc
jbe
push
mov
sub
enter
mov
and
rclb
sbb
or
add
ret
sar
dec
dec
or
fcompl
mov
push
sub
into
lods
xchg
push
mov
call
cltd
pop
and
out
adc
cld
mov
and
jle
cmp
or
push
mov
mov
add
add
jbe
jnp
and
pop
jl
mov
popf
xor
mov
mov
ja
lods
shl
cwtl
arpl
stc
lods
jge
jl
sbb
adcb
cmp
sub
adc
cmp
push
ret
imul
sbbb
std
inc
pop
faddl
mov
filds
lret
das
ss
lea
cli
je
mov
jbe
sub
gs
shlb
cli
int
jmp
jne
in
out
fwait
xchg
rcrl
lock
shll
aad
push
and
enter
dec
pop
push
std
out
add
fisttps
mov
dec
jg
jns
pushf
leave
jecxz
push
add
dec
pop
lods
inc
div
faddl
les
and
rcll
bound
add
iret
xchg
je
movb
pop
es
adc
mov
sbb
xchg
pop
jecxz
add
adc
add
push
mov
sbb
lret
mov
pop
add
cwtl
xor
xchg
in
or
hlt
and
movsl
dec
sbb
ljmp
jmp
pushf
jno
cltd
gs
mov
jb
popf
sub
dec
add
or
out
testl
fidivrs
xlat
sbb
dec
fcmove
ds
shll
pop
stos
adc
mov
mov
loop
xchg
pop
les
pusha
pop
cmp
out
lods
sub
dec
push
les
mov
add
cmpsb
xor
shr
add
wbinvd
daa
inc
ret
cmp
mov
lea
dec
xor
clc
shl
imull
jmp
inc
sub
sti
or
mov
jb,pn
test
xchg
xor
mov
add
das
movsl
lods
pop
stos
enter
pop
mov
sub
lods
jl
xchg
imul
pop
jo
orb
std
or
push
outsl
cltd
roll
jne
in
xor
dec
adc
xlat
xchg
push
dec
lods
popa
hlt
or
jg
popf
add
imul
rorb
mov
cmp
call
out
mov
lea
mov
mov
mov
mov
push
push
inc
push
jmp
cmp
rcrb
out
push
xchg
xchg
add
mov
nop
aaa
cmp
out
data16
push
adc
push
popf
es
mov
push
inc
mov
mov
in
or
in
adc
xchg
popf
mov
push
sahf
out
repz
mov
sti
sar
out
sub
lahf
mov
lds
call
adc
aaa
cltd
add
fistl
xchg
adc
xchg
xorb
out
push
add
push
or
in
lahf
push
jns
lods
lret
rclb
ljmp
ret
sahf
mov
pop
data16
xchg
aad
mov
jbe
push
nop
test
cmp
dec
divl
pop
cltd
jne
inc
inc
stc
lcall
mov
lret
jge
dec
mov
out
ds
dec
daa
cmpb
rclb
movsl
push
aad
lods
jb
or
xchg
outsl
mov
pop
fs
cmpsb
inc
xchg
push
sbb
mov
xor
mov
fisubrl
das
dec
mov
in
stc
add
jp
data16
mov
insb
jbe
ret
adc
mov
outsb
insb
cli
int
outsb
insl
jnp
popf
mov
popf
push
bound
cmpsl
push
addl
mov
insb
sbb
shrb
aam
xor
pop
inc
or
or
outsl
cmp
sub
adc
add
repz
lahf
cli
insl
inc
inc
insl
xchg
jmp
sub
mov
mov
les
lcall
push
cmp
sub
mov
lods
push
adc
in
ret
cld
pop
jle
shl
jg
adc
sbb
jle
sub
out
sbb
cmp
testb
inc
fdivrl
loop
int3
loop
mov
dec
fisttpl
int3
cmp
into
fidivl
imul
xchg
mov
sar
loope
fldenv
insb
out
push
push
dec
mov
push
imulb
test
repz
add
addr16
mov
popf
dec
jb
hlt
xor
imul
adc
sub
insb
adc
adc
mov
xor
or
and
jle
cmp
jnp
and
sub
xchg
scas
xor
pop
or
pop
adc
mov
adc
or
enter
cmpsl
rorb
inc
or
mov
icebp
cmpsb
shrb
or
or
cmp
adc
das
xor
les
sbb
mov
std
push
data16
add
or
sub
sti
xchg
ljmp
dec
cli
pop
sahf
mov
ljmp
aas
in
xor
repz
aaa
sbb
adc
pop
aas
push
jecxz
fwait
inc
and
inc
and
in
push
es
mov
daa
das
je
test
in
sub
and
scas
adc
lcall
std
adc
enter
cs
clc
push
sti
sub
cmp
pop
aad
mov
mov
adc
cmc
idivb
les
inc
clc
jmp
lods
in
cmpsl
pop
or
cmp
out
xchg
or
or
jnp
and
or
lea
imul
mov
push
cmp
popf
nop
les
jmp
mov
pop
dec
mov
mov
sbb
ds
stc
add
in
rcr
inc
and
and
call
mov
sbb
rcrl
ret
sbb
lcall
jg
jecxz
inc
loop
scas
imul
repnz
subl
add
xchg
notl
and
addr16
out
adcl
mov
stc
add
adc
repz
adc
mov
dec
scas
ret
adc
ljmp
imul
rolb
pop
data16
jg
movsl
enter
ljmp
pop
ds
cltd
dec
push
sub
inc
adc
push
test
cmp
xor
and
adc
test
mov
fimull
dec
pop
das
push
pop
movsl
rcrb
mov
dec
inc
jbe
push
inc
push
jne
inc
jo
or
inc
arpl
xor
ljmp
mov
repnz
das
jae
inc
xor
add
xor
je
xor
push
inc
ja
dec
pop
ss
sbb
xlat
add
mov
pusha
outsl
push
mov
les
jmp
xor
movsl
sub
scas
add
inc
mov
adc
inc
mov
cmp
ficompl
out
add
adc
out
push
and
push
lahf
mov
pop
mov
movsl
adc
and
or
xor
cmp
pop
das
pop
fcompl
dec
xchg
das
mov
repz
inc
stos
mov
lret
cmpb
jbe
lahf
inc
dec
loope
orl
add
cwtl
call
xor
jl
sub
test
mov
dec
inc
or
jge
and
sbb
push
inc
mov
push
dec
daa
shr
lods
in
jmp
sub
cmp
outsb
jnp
push
icebp
mov
sub
and
jecxz
lods
in
dec
push
pminub
cmp
jne
xchg
pushf
jge
test
stos
push
or
in
xlat
mov
push
and
js
rcrb
mov
stc
aam
cltd
int
pop
popa
adc
jle
pusha
sbb
mov
pop
add
pop
inc
cltd
dec
push
add
sub
sub
jae
mov
jne
mov
enter
xlat
cmp
aad
jl
lret
sbb
push
mov
js
lret
divb
mov
fcom
push
pop
stos
sbb
je
in
std
mov
cli
mov
jns
popa
push
xor
aad
stos
mov
xor
aam
push
stos
in
test
pop
xor
jo
pusha
jno
into
mov
mov
mov
sub
fsubl
lods
mov
iret
push
lret
cmpb
dec
and
in
dec
aam
adc
add
pop
aam
pop
adc
call
cmp
mov
sbb
push
jae
test
or
xchg
xlat
cld
popa
je
lods
scas
add
pop
add
inc
dec
or
and
loop
cmp
push
add
sbb
clc
cmp
daa
or
cmpsl
adcl
into
jl
mov
or
or
mov
xchg
movb
pushf
mov
mov
lock
mov
sbb
shlb
pusha
leave
out
das
pusha
and
mov
xchg
jmp
je
mov
stos
adc
or
outsb
data16
and
sbb
out
aas
cmp
loop
cmpl
mov
adc
adc
ljmp
idivb
xor
push
mov
sbb
test
jo
xor
mov
and
into
out
pop
add
dec
fisttps
dec
adc
out
aam
xchg
mov
sub
call
add
sub
xchg
insb
leave
add
sbb
sub
and
sbb
push
mov
inc
jg
mov
and
push
es
add
mov
add
lods
outsb
pop
out
sarl
adc
or
cltd
pushf
fwait
dec
shll
dec
dec
mov
andb
adc
xor
add
dec
push
rcr
aad
cmpsl
inc
repnz
rcr
mov
mov
xchg
call
out
sub
mov
fimuls
mov
lcall
mov
jmp
rorb
dec
adc
jno
loopne
fwait
stos
mov
jecxz
inc
sbbb
decl
push
dec
lods
sub
jle
icebp
mov
jge
or
mov
mov
xor
lds
imul
mov
test
cltd
repz
enter
leave
mov
sbb
daa
dec
and
mov
cwtl
add
xor
lret
movsb
in
xor
xchg
push
inc
mov
adc
add
mov
int3
arpl
jne
mov
jo
in
push
mov
aas
clc
mov
or
loopne,pn
lods
and
insb
outsb
jo
aad
adc
and
jmp
cmp
xchg
ficomps
and
push
je
and
ret
cmpsb
xor
cli
push
insb
jnp
int3
inc
loope
cmp
mov
mov
fiadds
aam
pop
aad
push
dec
cmp
movb
xor
mov
mov
pop
dec
iret
aaa
cli
xor
call
aam
sub
adc
jbe
adc
jle
jmp
jl
subl
sbb
or
mov
div
jge
subb
test
repnz
lret
dec
js
add
int3
push
js
jle
push
sub
aaa
lods
xchg
dec
and
mov
adc
lock
test
sub
push
out
jnp
xor
aaa
sub
and
popl
mov
xchg
push
loopne
fadd
jmp
je
sbb
loop
pop
mov
cmp
jecxz
push
jnp
pop
ljmp
mov
in
cltd
fwait
sarl
or
data16
sub
jns
mov
xchg
mov
cmp
mov
dec
xchg
inc
cli
in
ljmp
add
mov
xchg
ror
lcall
rol
lret
iret
jns
aaa
in
dec
pop
xchg
xchg
mov
push
push
or
inc
out
mov
add
gs
bound
xor
xchg
hlt
pop
jecxz
loopne
lret
daa
and
jmp
jo
ffree
pop
jmp
rcrl
stc
pop
pushf
movsb
out
pop
bound
imul
call
sub
rcll
cmp
pop
ss
repz
jns
mov
mov
out
ljmp
and
fwait
inc
fcmovnbe
pop
push
cli
pop
cmpsb
ss
mov
mov
xchg
jo
adc
out
jl
nop
jle
or
jbe
mov
test
icebp
pusha
add
cld
jmp
in
das
xchg
dec
ret
scas
xchg
mov
jns
and
stos
repnz
rclb
lret
outsl
push
and
clc
lea
xor
sahf
pop
push
mov
insb
mov
jnp
push
add
and
xchg
add
mov
repnz
cwtl
push
sub
fdivs
mov
inc
and
lds
pusha
or
jmp
int3
cmp
mov
sbb
inc
rclb
cs
data16
out
and
adc
add
sub
ljmp
cmpsb
cltd
gs
sti
or
lods
pop
inc
testb
cltd
cmp
xchg
test
dec
pop
ljmp
push
in
sub
sbb
mov
imul
ss
and
clc
cmpsb
mov
or
fcomp
into
xchg
jge
fwait
shl
mov
xchg
andb
push
jae
addr16
fs
ljmp
mov
lock
ss
adc
dec
imul
sbb
test
and
push
test
jp
xchg
cmp
out
adc
jo
les
fucomip
mov
aas
movsb
xor
mov
cmp
lret
subl
int3
dec
lahf
pop
xchg
cmp
cwtl
pop
push
xchg
icebp
mov
icebp
jbe
insb
or
rcr
push
ss
push
sub
mov
sub
icebp
mov
xchg
imul
ja
fidivl
mov
loop
xor
repnz
mov
pop
imul
ret
push
data16
pop
mov
std
outsl
fsin
pop
aam
cmp
sub
xor
pushf
lods
lcall
outsl
hlt
js
out
leave
inc
or
outsb
or
cwtl
mov
ss
push
repz
inc
add
sub
and
dec
xor
mov
and
or
inc
frstor
inc
or
mov
xor
xor
adc
std
adc
mov
cmp
ss
arpl
mov
sbb
mov
inc
push
addr16
xchg
in
xor
aas
sub
stos
sti
aam
loope
adc
lods
enter
push
test
push
jmp
dec
dec
repnz
jbe
data16
mov
stc
push
jmp
mov
adc
mov
jb
adc
cltd
push
fistl
in
ficoms
lret
xor
xor
sub
mov
xor
xor
and
call
fiadds
jbe
ljmp
pop
adc
les
icebp
enter
rol
sub
push
dec
mov
outsb
fildll
stc
or
stos
inc
jg
adc
sub
es
iret
shr
loop
adc
pop
xchg
movsb
mov
ret
pusha
call
mov
push
aas
cmpsb
push
fstps
jmp
mov
insb
mov
loope
xchg
hlt
into
jno
fldcw
das
cmp
push
cmc
mov
bound
jmp
adc
dec
sub
pop
es
or
pop
adc
fadds
out
cmp
sbb
lods
imul
icebp
int3
mov
mov
lods
fxch
popf
push
sbb
push
clc
roll
ret
lret
push
adc
cld
xor
xchg
inc
inc
pop
jae
or
inc
sbb
std
in
jnp
push
mov
test
in
pop
push
lods
das
imul
mov
sub
inc
sbb
inc
pop
pop
hlt
jae
sti
xor
xor
daa
pop
inc
lods
inc
inc
xchg
rolb
dec
jecxz
sahf
inc
push
sub
mov
push
insl
loope
dec
mov
adc
outsb
in
jmp
push
pop
cmpsb
sub
sbb
cs
pop
aam
mov
sub
push
adc
fnstsw
popf
or
sbb
mov
xor
pop
cmp
enter
cmc
mov
dec
les
mov
mov
mov
pop
jg
jns
out
xor
pop
shr
jmp
sub
pop
leave
fsubs
sub
dec
daa
out
dec
jno
pop
cwtl
add
or
mov
push
jmp
mov
subb
xchg
adc
mov
push
push
dec
xor
or
fstpl
mov
bound
es
mov
sbb
js
jl
add
mov
test
fwait
adc
adc
dec
and
push
sbb
inc
dec
cmpsb
ret
bound
das
fldl
xchg
sub
adc
jp
mov
xor
sub
clc
movsb
mov
xor
and
add
xchg
test
jno
push
int3
into
in
and
lret
xchg
imul
or
aas
or
clc
lods
adc
daa
cmpsb
rorb
pop
les
js
dec
repnz
dec
addr16
sbb
xlat
jecxz
xor
jmp
push
orb
popa
sbb
xchg
cwtl
jns
sub
fdivl
in
cmp
sub
add
cmpsl
pop
or
jns
movsl
push
repz
inc
sub
ss
bnd
push
jo
cmc
pushf
cmp
xchg
addb
loop
idivb
pusha
mov
sub
sbb
push
jge
mov
icebp
test
gs
outsb
cmp
push
pusha
lret
mov
dec
testl
shll
mov
dec
cmpsb
or
jp
aas
push
jno
cltd
andb
mov
pop
add
mov
lock
xor
orb
inc
enter
in
xchg
pop
push
dec
adc
fptan
and
sbb
into
mov
aaa
sar
clc
movsl
shrl
fst
imul
repnz
or
and
xchg
gs
out
notb
test
sbb
test
mov
sub
out
lods
push
and
jae
outsl
fwait
loopew
insb
stos
out
mov
mov
std
stos
sub
clc
ret
leave
sbb
dec
sub
sbb
les
movsb
jo
sub
arpl
imull
inc
mov
xchg
adc
insl
push
out
imul
les
adc
adc
or
imul
pushf
cmp
xor
mov
rorb
jno
push
sbb
sub
mov
clc
mov
or
xchg
das
ret
xlat
dec
jge
dec
sbb
cmpsl
cmp
cs
mov
stos
loope
add
adc
cwtl
sbb
push
icebp
sti
mov
das
mov
jne
add
outsb
js
out
es
and
mul
sti
xchg
cmp
sub
fbstp
add
add
add
mov
mov
adc
leave
orb
lea
xchg
pop
xchg
cmp
aas
sub
out
adc
mov
push
orb
or
enter
js
dec
repz
mov
loope
cmp
daa
xchg
test
jns
sub
icebp
push
push
pop
mov
pop
mov
jae
ret
pop
clc
insl
imul
mov
fucomip
mov
in
inc
cli
push
jbe
push
jns
fdivl
in
inc
mov
pusha
push
fwait
pop
lahf
int
ror
in
fistpl
orb
loopne
xlat
lods
jge
dec
sbb
fsubrs
adc
in
cmp
and
sbb
cltd
sub
into
bound
outsb
pushf
out
lock
daa
clc
dec
and
cs
int3
xchg
fsubs
data16
pushf
jb
fistpll
pop
and
mov
sbb
adc
dec
sub
push
ds
test
adc
jo
mov
ftst
dec
mov
in
push
sbb
lcall
lds
mov
lds
pop
xorb
sbb
lods
push
js
repnz
aaa
mov
sub
fistpl
loope
mov
dec
popa
xor
test
es
fwait
jnp
xor
add
jne
add
jnp
jmp
inc
mov
sbb
sbb
add
ja
sub
pop
jne
call
adc
movsl
dec
pusha
adc
mov
or
leave
and
stc
or
dec
mov
leave
test
ja
test
cli
jb
pop
push
push
xchg
xlat
push
lea
insb
sbb
pop
insl
push
shlb
in
and
fists
lock
outsl
sti
stc
dec
push
cmp
stos
pop
repz
insl
pop
addr16
stos
dec
adc
inc
push
inc
sub
std
movsl
xchg
pop
icebp
push
lods
or
xlat
xor
lret
imul
jno
jbe
sbb
inc
shlb
aaa
sub
dec
mov
rolb
mov
pop
fildl
lods
mov
lods
jmp
bnd
adc
sbb
cmp
dec
sarb
push
cli
aas
and
flds
dec
rcr
sti
jp
outsb
push
cltd
jno
popf
int3
repz
cmpsl
insb
lods
imul
jne
repnz
je
mov
test
shr
jo
sub
mov
sbb
push
loopne
shlb
xchg
fs
je
mov
sbbl
mul
cmpsb
imul
aas
mov
adc
xchg
sbb
pop
sbb
or
mov
dec
int3
and
mov
inc
jno
fbld
dec
fnstenv
test
sbb
inc
push
mov
into
addl
and
lahf
dec
push
sbb
out
call
and
daa
cmpsl
pop
lret
loopw
loope
test
inc
and
clc
pop
and
jo
jne
ss
cmp
mov
scas
mov
lcall
daa
xlat
cmc
daa
xor
cmpsl
push
nop
popa
jae
into
mov
popa
fnsave
repz
push
sarb
subb
jns
push
icebp
pop
or
imul
cmpsl
xor
mov
clc
lret
sub
sti
arpl
xchg
hlt
mov
jb
mov
pusha
cltd
xor
js
sub
dec
xor
icebp
std
inc
sbbl
cltd
out
sub
arpl
inc
add
cs
sub
fldlg2
testl
jl
in
cmpsb
jbe
out
xlat
sub
mov
and
pop
push
jae
dec
ss
repz
std
adc
add
outsl
xchg
sbb
sbb
mull
data16
jmp
jg
jne
int
dec
lods
xchg
mov
pushf
push
dec
and
push
clc
repz
and
les
xor
mov
scas
xchg
xor
stos
shrb
pop
jno
inc
jmp
jno
mov
jmp
bound
aaa
inc
fistpl
cmp
jo
add
push
xchg
mov
nop
cmovl
sbb
fldenv
lahf
jo
cwtl
cmp
aaa
mov
cmp
shlb
jle
mulb
lock
pop
pop
fsts
addr16
push
or
mov
test
inc
inc
stc
jne
les
clc
sbb
xchg
fildl
sub
adc
jb,pn
aad
js
daa
sti
in
mov
repnz
inc
inc
adc
push
lret
movsl
mov
adc
and
pop
mov
pop
lcall
sbb
push
inc
out
mov
repnz
inc
cltd
add
push
mov
lahf
dec
or
sbb
mov
fldcw
daa
sti
decb
addr16
fdivrl
shl
mov
mov
jp
cwtl
fbld
fstl
in
pop
shlb
jb
rolb
xchg
sub
mov
jge
ljmp
int3
adc
jbe
mov
and
dec
xchg
add
mov
int3
push
mov
aaa
mov
xorb
in
sub
mov
sub
mov
push
fcomps
pop
imul
add
lock
jo
out
out
mov
pop
sbb
mov
xchg
movzwl
imulb
jne
daa
idivl
jecxz
xchg
enter
xorl
adc
inc
mov
or
and
fcmovnb
ret
rsm
xchg
outsb
mov
das
cwtl
dec
loopne
out
call
imul
jmp
fwait
push
shrl
xor
jae
inc
leave
fldl2t
insb
mov
mov
pop
mov
xchg
inc
mov
dec
test
inc
sub
or
ret
mov
adc
jecxz
leave
insl
mov
adc
movsbl
adc
xor
dec
mov
scas
inc
mov
in
xor
adc
pop
cltd
loope
xchg
jns
push
or
fstl
mov
pop
lods
orb
cltd
mov
lds
fistps
hlt
cmp
add
cmc
inc
jmp
cmp
test
fwait
sbb
cs
call
push
jbe
inc
cmc
fwait
mov
pop
lock
out
mov
adc
das
sbb
jmp
and
push
adc
fbstp
jae
push
mov
icebp
xchg
popa
loope
sbb
repnz
or
jns
push
xor
adc
cmp
push
or
mov
sbb
mov
pop
dec
test
pop
dec
mov
jns
into
lahf
xchg
sub
sub
mov
loopne
adc
xor
scas
ja
push
jmp
lahf
inc
mov
cltd
filds
sub
xchg
mov
mov
arpl
fisubrs
cmp
shr
sub
push
cmp
mov
std
dec
pop
int3
sbb
jne
cmp
jl
sub
rcll
arpl
dec
clc
packssdw
fnstenv
pop
sub
and
fisttpl
adc
sbb
mov
fdivrp
movsl
test
mov
inc
xchg
rorb
icebp
pop
aaa
pop
xlat
adc
movsl
cmp
popf
bnd
xchg
mov
pop
lods
arpl
int3
and
jge
inc
mov
push
pop
cs
popa
ljmp
test
sbb
cmp
popf
out
add
mov
addr16
push
xor
ljmp
mov
fistpl
pop
fistpll
dec
mov
pushf
mov
les
aam
scas
sub
test
es
movl
push
or
mov
jge
add
popa
pop
test
sub
and
dec
cmpb
mov
lret
daa
pop
int3
push
adc
add
andps
xchg
sub
pop
jp
mov
push
adc
dec
mov
shll
inc
jae
daa
ljmp
jb
je
cmc
test
lcall
mov
jp
lods
inc
aam
pop
lcall
or
mov
adc
shr
mov
xchg
jno
xchg
pushf
and
mov
mov
push
sub
push
mov
dec
adc
and
xorl
scas
mov
adc
xchg
lahf
jg
bound
xor
sub
pusha
fstps
stos
imul
mov
lret
push
test
fwait
insb
je
in
orl
sbb
inc
filds
nop
push
mov
inc
and
nop
mov
lret
fisubl
push
lods
jg
xor
sti
mov
pusha
sub
add
jge
popl
out
push
dec
js
orb
lods
push
pop
cld
ror
cmc
xor
or
into
push
cmpsl
mov
sub
xor
sub
pop
xor
cltd
pop
sbb
fbstp
sub
out
push
mov
lcall
pop
mov
xor
stc
roll
cmp
mov
jmp
in
cwtl
sarb
out
insb
pop
mov
mov
std
sbb
ja
pop
pop
push
fstpl
and
add
adc
mov
out
push
movsl
ret
lgs
fnstenv
xchg
jae
pusha
xchg
sti
fdivrs
and
idiv
testl
or
in
jmp
jge
or
mov
lret
jge
add
test
in
and
dec
movsb
add
inc
push
fldenv
xchg
and
cmp
push
mov
and
and
xor
test
jmp
into
pop
lods
loopne
xchg
lods
lret
fistpl
push
mov
push
movsb
int
je
sahf
into
jno
loope
adc
sti
nop
fwait
shlb
in
push
mov
pop
lea
or
adcl
jmp
and
pop
in
in
sub
cmp
aaa
push
aad
jno
inc
sub
repz
mov
xchg
test
popa
cmpsl
aaa
jmp
sub
nop
mov
loop
loopne
repnz
test
loop
mov
adc
sub
jge
jle
jge
and
in
pop
and
test
push
inc
mov
cmpsl
fidivrl
incl
sbb
dec
adc
push
icebp
sub
xor
sbb
and
pop
jecxz
out
pop
cmpsl
iret
push
sbb
push
adc
pop
pop
push
fiadds
je
incl
cmovns
mov
xor
sub
dec
sub
jl
xlat
or
in
mov
aam
mov
push
push
mov
pop
out
in
test
inc
cltd
decl
es
mov
lahf
test
out
dec
xchg
mov
cwtd
loopne
out
in
jmp
mulb
cmpsb
xor
je
sbb
movsb
fldcw
fmull
clc
shl
or
nop
es
fstps
inc
popa
xchg
in
mov
aad
bound
push
add
mov
popf
push
mov
xor
and
cld
ds
push
test
scas
sub
sbb
add
stos
aaa
shll
mov
jne
add
jecxz
rol
mov
inc
jmp
jmp
mov
pop
push
es
repz
add
adc
popf
mov
xchg
push
and
pop
sub
das
jb
shl
js
sbb
mov
negl
fisttps
and
mov
nop
fcmove
arpl
adc
cmp
or
icebp
dec
xor
inc
mov
inc
jb
mov
pop
test
jmp
sbb
mov
jp
mov
xor
popa
aam
enter
mov
jo,pt
or
xchg
pop
repz
mov
mov
fdivrl
pop
addr16
jns
adc
dec
std
push
xor
mov
or
add
cmp
movsl
sbb
fscale
pop
aad
pop
stos
pushf
rclb
cmp
ja
push
test
cmpsl
addr16
arpl
inc
xchg
jp
jns
xor
dec
inc
cmp
dec
stos
icebp
push
aam
aam
adc
in
ljmp
fldl
mov
lret
loop
jg
dec
push
bound
sbb
test
jg
popa
clc
insl
movsb
xchg
inc
out
dec
negb
filds
bswap
xor
pop
xchg
xchg
inc
pop
cltd
mov
add
adc
xchg
gs
inc
and
orl
jb
imul
fs
addr16
adc
push
mov
mov
mov
sti
insl
add
sub
xchg
movsb
fcomip
jb
push
repz
test
movsl
mov
adc
std
into
sbb
daa
adc
mov
nop
fisttps
mov
mov
imul
aam
mov
popf
insl
pop
cli
adc
cmp
or
jb
push
sbb
adc
mov
fimuls
fists
mov
push
sbb
mov
out
cld
cli
jnp
jle
pop
test
pop
sub
mov
in
and
push
mov
fistpl
int
mov
repnz
stos
popa
test
cmpsl
lods
mov
adc
jge
adc
cmp
adc
inc
mov
aaa
mov
pop
jle
mov
dec
or
add
and
xorb
and
nop
pushf
sub
aaa
repnz
scas
inc
xor
scas
cmp
xchg
icebp
inc
mov
mov
bound
jge
ret
xor
jno
dec
push
mov
jmp
pop
jmp
push
lcall
mov
mov
ret
mov
andb
lds
mov
lock
pop
mov
cmp
lea
xlat
ret
add
test
andl
scas
cmc
fildl
jne
and
cmp
sbb
push
dec
loop
sti
cltd
xchg
daa
outsl
cmp
dec
loope
mov
enter
cmpl
cli
rcrl
jmp
aas
xor
inc
rcl
call
jae
mov
mov
scas
adc
dec
pop
dec
scas
aam
pop
pusha
cld
movsb
mov
mov
stc
outsb
stc
jbe
inc
orb
movsl
test
mov
je
icebp
xor
or
mov
fs
lret
out
xor
outsb
fnstcw
add
std
jmp
dec
inc
push
mov
mov
add
inc
mov
jge
sub
sub
adc
mov
push
aam
or
test
jmp
adc
xchg
xchg
decl
lret
jb
adc
nop
add
pop
imul
add
setl
iret
mov
cmp
cs
lret
dec
mov
repnz
sub
dec
add
shr
rcrl
xchg
push
std
sbb
add
imul
mov
subl
pusha
aad
je
sti
std
push
test
jmp
daa
pop
jo
xchg
mov
rcll
xor
cmc
push
jmp
sub
cmp
lds
cmp
mov
sbb
adc
cltd
xlat
pop
insb
ficomps
jo
inc
ret
fucomp
jno
add
pusha
imul
mov
mov
jle
mov
lods
pop
pop
xor
lret
mov
cmp
jl
mov
cmpsb
testb
lds
jbe
divb
sbb
add
mov
enter
les
xchg
fcmovb
xchg
jecxz
jmp
sbb
mov
jl
fldenv
pop
lret
stos
outsl
or
and
xchg
insb
inc
enter
aas
iret
hlt
push
notl
pop
stos
xchg
xchg
bound
sub
push
cmc
cwtl
bound
add
popa
dec
and
repnz
xchg
xchg
pop
mov
or
aaa
mov
push
sti
adc
adc
jbe
cwtl
and
sub
add
xchg
inc
faddl
add
es
pop
inc
pusha
add
adc
mov
mov
jge
insl
and
fsubrl
push
pushf
stos
stc
sub
jl
xchg
ljmp
mov
xlat
sub
mov
push
arpl
push
gs
loop
addr16
jp
pushf
sbbl
daa
ds
mov
stos
movsb
adc
mov
lret
sbb
aas
into
nop
sti
jns
adc
jecxz
push
sub
dec
orl
pop
mov
cmpsl
xchg
xchg
repz
xchg
adc
gs
int
cmpb
nop
pop
push
ljmp
fdivrs
fwait
dec
addr16
adc
pop
sti
dec
cmp
mov
repnz
xchg
lcall
nop
lds
push
or
int
and
mov
in
sbb
mov
adcb
cmp
mov
pop
and
leave
out
pop
loop
aas
jg
lods
cmp
ret
push
mov
jmp
loopne
popa
rcrb
push
add
in
insl
xchg
sub
add
test
movsb
jae
push
push
das
mov
fcomps
mov
jnp
inc
out
add
js
dec
push
xchg
push
filds
lret
pushf
push
shrb
or
jno
sti
sahf
das
cmp
pop
int
int3
dec
and
sarb
jbe
shrl
xchg
sti
pop
cs
jmp
nop
test
push
fs
mov
rolb
inc
mov
fwait
test
cs
sarb
cli
mov
mov
xor
into
and
and
mov
bound
xchg
mov
outsb
iret
sbb
xor
pusha
push
stos
stos
out
add
xchg
mov
jae
jb
and
xchg
jp
sahf
xor
stc
pop
cmp
pushf
or
pop
shlb
sub
push
cmpl
sub
mov
dec
xor
ljmp
sbb
jp
cmpsb
loop
mov
test
adc
dec
mov
or
mov
mov
lret
movsl
mov
lcall
fnstcw
lds
and
dec
adcl
dec
repz
xchg
in
or
adc
sarb
dec
push
dec
repnz
push
sbb
push
sbb
jge
aam
dec
movsb
stos
xor
add
fldt
dec
lods
pop
jl
inc
cwtl
inc
scas
stc
xor
inc
pop
jge
test
mov
jp
popa
jg
sbb
sti
mov
and
push
fdivl
xchg
cmp
mov
push
xor
push
sub
cmp
mov
xor
aas
rcr
incl
sbb
add
cmpsl
or
pop
fwait
xor
shr
addr16
arpl
push
in
and
pop
repnz
repz
les
or
jp
sub
into
insl
lods
adc
bound
in
movsl
imul
pop
push
sub
jmp
or
sarl
push
mov
adc
pop
icebp
sbb
and
inc
lcall
testl
xchg
push
push
inc
pop
test
xor
cmp
roll
je
inc
sbb
inc
daa
inc
mov
out
adc
dec
push
pop
test
xor
cwtl
scas
andb
mov
sbb
test
cmp
mov
aaa
add
mov
xchg
aad
cmp
push
cmpsb
cmpsl
insl
jae
pop
xor
inc
jne
cmp
scas
lods
rol
push
xchg
add
fdivl
int3
ds
push
cltd
xchg
popa
ret
adc
cmc
push
cmc
sti
cli
pop
or
cmp
xchg
hlt
mov
push
lret
pop
push
pushf
leave
push
inc
dec
jns
out
in
sub
and
xor
pop
dec
or
push
jg
jp
out
inc
cmp
aam
pop
add
cwtl
pop
xchg
fbld
movsb
jne
test
mov
inc
push
pop
pusha
or
notl
pop
stos
add
aam
leave
data16
lcall
sub
mov
push
enter
aas
out
stos
bound
negb
js
jmp
xor
mov
cmc
lahf
xchg
ja
dec
mov
mov
pop
lds
pop
test
xchg
sbb
xor
push
sub
aas
sub
ja
inc
pop
mov
or
aam
mov
pop
push
leave
aas
aad
ds
lock
insb
dec
xchg
jl
fdivl
push
ljmp
sub
inc
mov
push
push
lods
adc
add
test
movsl
mov
iret
mov
les
push
mov
rorb
mov
jb
cld
test
add
std
dec
clc
mov
enter
xor
or
notb
mov
xchg
xor
cld
cld
je
lcall
push
add
jge
ficompl
sbb
shlb
in
test
stos
aad
sbb
adc
inc
movsb
mov
xchg
or
out
xchg
or
imull
xchg
fldl
mov
sub
jns
stos
gs
lods
in
testl
pop
data16
int3
xor
cmc
mov
insb
pop
std
cmp
jo
cmp
scas
lds
icebp
push
pushf
ret
mov
in
popf
mov
xchg
or
mov
mov
scas
mov
cs
pop
out
jae
shlb
adc
mov
xor
gs
pop
repnz
ljmp
mov
cmp
shll
movsl
in
movsl
ret
or
andl
cld
sbb
pop
aam
lock
xor
mov
mov
lea
jp
rorl
lret
ss
sub
test
xor
int3
arpl
les
xchg
jge
sub
iret
jnp
fldl
popf
out
mov
cltd
mov
int3
lea
lods
sbb
dec
xchg
int
xchg
mov
rorl
add
jbe
mov
into
imul
dec
or
sub
xchg
and
mov
jp
cmpsb
mov
jle
out
push
inc
inc
mov
fstpl
test
add
sbb
mov
repz
lea
out
xchg
idiv
mov
inc
roll
push
push
iret
mov
mov
jle
mov
jns
test
shr
mov
andl
xchg
jnp
rclb
int3
out
cmp
push
sarb
lea
pop
ja
out
add
mov
xchg
imul
fiaddl
dec
scas
loopne
push
iret
sbb
pop
pop
dec
rorl
and
xchg
sbb
pusha
fcomps
sub
jae
and
push
jmp
cld
jno
mov
or
mov
jle
cmp
cmc
push
iret
stos
push
or
push
popf
lahf
call
jb
push
fildl
jecxz
stc
adcl
mov
jecxz
idivb
loope
mov
mov
add
mov
lcall
pop
xchg
jne
push
mov
sub
mov
xchg
fwait
lods
mov
push
xchg
jmp
lret
push
adc
or
mov
push
sbb
xchg
push
pop
sbb
popl
sbb
pop
or
sysret
adc
dec
in
jl
and
orb
repz
rorb
push
dec
mov
xlat
inc
mov
repz
adc
rclb
sbb
mov
rorl
or
adc
add
outsb
popf
xor
scas
aas
jg
sti
cs
adc
decb
insb
insl
scas
add
add
sbb
addb
or
in
mov
mov
in
popa
cmovnp
test
lret
cmp
fs
jnp
loope
shlb
cmp
out
lcall
xchg
xor
hlt
mov
jno
lods
int3
adc
xchg
pop
ss
pop
cmc
sarl
bound
or
and
push
aas
out
and
incb
sbb
lidtl
pop
jb
pop
sti
jmp
insb
shlb
ds
inc
pop
mov
in
bound
mov
nop
out
add
cmpsl
xchg
add
mov
jb
mov
bound
nop
mov
aad
and
int3
xor
aam
cmpsb
jne
pop
xchg
push
sbb
aam
jbe
xor
jmp
add
cmp
ss
adcb
mov
and
negb
adc
lods
or
leave
enter
lea
jle
inc
dec
shl
sbb
and
xor
ja
gs
sub
mov
mov
outsl
cltd
mov
js
jg
lea
icebp
scas
stos
pop
jmp
pop
into
aas
and
xchg
fimull
sbb
loopne
or
push
inc
xchg
mov
mov
pop
adc
pop
push
dec
mov
pop
bnd
testb
add
push
mov
cmpsl
gs
sbb
push
mov
das
jl
mov
mov
pop
adc
loop
xchg
cmpsl
dec
pop
cmp
sub
adc
in
push
aas
loop
fsubl
xchg
jo
repnz
adc
test
js
es
sbb
push
dec
lea
push
in
pusha
adc
jmp
ljmp
lcall
leave
mov
push
push
adc
in
pop
arpl
ret
cmp
adc
xchg
pop
xor
lcall
mov
pop
jmp
and
push
cs
jmp
jb
push
push
jae
sub
add
dec
in
sti
cli
xor
jle
std
sub
test
add
es
push
and
cmp
lock
adc
out
call
hlt
mov
fildl
add
jne
jo
add
cmpsb
mov
jae
repz
loope
mull
mov
imul
mov
fldenv
mov
out
pop
or
test
dec
aad
xchg
mov
fisubl
cmpsl
sub
iret
pop
jmp
or
in
jge
stos
xchg
and
xor
addb
inc
push
mov
lds
fucomi
scas
and
stc
xchg
call
or
sub
ficoms
sub
idivl
cmp
mov
mov
cltd
sbb
or
mov
push
pushf
fmul
jge
ret
enter
leave
idivl
cmp
cld
push
jb
add
xor
ljmpw
mov
push
jp
sub
dec
mov
sbb
inc
hlt
xor
push
and
stos
mov
andl
inc
push
aam
in
adc
xlat
arpl
xor
inc
lea
mov
jmp
jno
shrb
loopne
add
dec
ret
insb
jmp
cmpsl
push
jle
pop
cmc
scas
mov
pushf
jns
or
fs
cli
or
daa
hlt
or
mov
ds
xchg
xchg
ss
inc
push
fsubrs
inc
jg
lds
aad
cmp
pop
dec
and
in
inc
push
lock
dec
outsl
popf
test
mov
test
bound
or
loopne
mov
xchg
jge
xchg
lret
out
adc
xor
pop
loop
rcrb
cmp
sbb
cmp
shlw
xor
decb
jle
pusha
pop
idiv
sub
int
pop
pop
and
cmpsl
xor
enter
js
inc
or
mov
ja
cs
add
jle
mov
dec
push
sti
pop
add
inc
push
mov
adc
and
imul
mov
push
inc
mov
notb
fnsave
aaa
mov
pop
outsb
xor
enter
notb
stos
push
sbb
push
cmp
dec
inc
jge
add
fs
sahf
and
dec
xor
lock
iret
in
jns
fidivl
adc
imul
dec
inc
sub
xor
popa
pop
xchg
punpcklwd
out
rcll
movsl
aas
mov
outsb
sub
sti
push
inc
ror
pusha
enter
xchg
shll
shl
xchg
shlb
push
mov
cltd
pop
adc
stos
mov
push
dec
pop
add
into
jnp
dec
push
xor
or
xor
sub
dec
jmp
xchg
shlb
out
std
in
mov
inc
call
xchg
add
out
push
cwtl
data16
cmp
pop
nop
dec
xor
xchg
adc
jle
mov
cld
jge
mov
shlb
mov
mov
mov
sub
cmp
stos
rorl
and
mov
inc
jge
sub
nop
andb
cmp
push
data16
xchg
inc
and
jg
rcrb
addr16
movsb
or
push
mov
icebp
lcall
das
add
sub
mov
sub
inc
pop
xchg
or
ret
test
pop
adc
pop
sbb
or
jnp
in
aad
lods
pop
fcompl
push
inc
mov
sbb
add
push
repz
add
mov
dec
cmp
jo
pop
repnz
mov
idivb
and
mov
jge
pop
cltd
jl
inc
stos
pop
les
lock
cmpsb
inc
push
mov
add
cwtl
out
fisubl
ds
test
mov
mov
imul
repz
jae
adc
add
lods
out
mov
cmp
fs
xor
lea
adc
es
aas
outsb
loope
mov
data16
or
inc
scas
sub
adc
jl
jl
mov
and
inc
test
js
popf
fldl
aaa
mov
dec
or
ja
mov
arpl
mov
aam
in
xor
test
ja
outsb
pop
cmp
mov
pop
cmpsb
leave
popf
add
xchg
in
pop
and
js
fstl
jnp
aam
mov
ret
repnz
or
jg
clc
stos
pop
push
bound
cmp
das
mov
setge
leave
test
cmp
cltd
mov
leave
push
cmp
dec
popf
mov
push
into
mov
rclb
mov
cmp
insb
sbb
vmovaps
mov
popf
xlat
push
xor
mov
mov
inc
inc
jo
fadds
loopne
loop
shrd
shlb
dec
stc
dec
inc
scas
stos
push
enter
into
xor
icebp
rclb
push
and
aas
jl
pop
inc
sbb
xor
loopne
movq
or
mov
in
push
test
add
mov
sbb
and
or
mov
and
mov
pop
or
pop
test
jo
xor
loop
out
inc
mov
data16
lcall
test
scas
inc
fs
inc
and
add
cmp
cmp
addr16
sbb
jmp
mov
inc
cmpsb
mov
mov
nop
mov
aad
mov
pop
jnp
lods
mov
pop
cmp
orl
dec
xchg
push
lds
rorw
xchg
je
bound
filds
mov
mov
sub
daa
mov
and
xchg
sub
lea
insl
mov
bound
sub
int
and
jns
push
enter
leave
mov
xchg
repz
fsubl
xchg
dec
int3
jge
ss
cmp
add
and
out
dec
sub
cltd
xchg
cmc
dec
js
mov
fadd
sahf
xchg
mov
push
leave
mov
xor
cmp
jle
inc
loope
lods
bound
push
xchg
cli
or
scas
mov
cmpsb
mov
lock
mov
call
stos
mov
mov
js
dec
mov
pop
or
or
add
xchg
in
loop
popf
insb
jmp
push
aaa
aaa
sbb
pop
xchg
mov
inc
mov
inc
mov
iret
mul
sbb
push
adc
arpl
cs
popa
push
out
nop
mov
ja
add
jae
push
mov
adc
out
pop
loop
lods
sub
rorl
sbb
mov
xchg
xor
jge,pn
push
into
dec
cld
daa
xchg
shl
and
jbe
mov
ljmp
dec
jle
into
cmpsl
and
in
add
jbe
movsb
pop
xchg
popl
pop
adc
xchg
das
mov
sahf
imul
adc
scas
add
mov
mov
xchg
inc
shll
jns
cmpsb
aaa
sbb
cmc
add
jno
je
aaa
dec
push
inc
xchg
aaa
popa
arpl
or
push
xor
sub
lret
jl
xor
shl
repz
or
or
cmp
rorl
divb
cmp
sub
and
leave
cltd
mov
adc
cmp
sahf
dec
fiaddl
repnz
subb
sub
iret
add
arpl
and
and
shll
repz
xchg
push
jb
push
cltd
inc
cld
jecxz
pop
push
cmpsl
add
mov
add
xchg
test
jbe
dec
adc
stc
mov
xor
sti
sbb
daa
jnp
mov
bound
or
jmp
idiv
mov
adc
mov
or
cmpb
stos
ficomps
push
scas
mov
xor
insb
int
rcrl
mov
jle
dec
jmp
push
pop
testl
jp
pop
jge
decb
xchg
cmp
mov
dec
popa
test
fnsave
das
add
div
adc
mov
ficompl
xlat
xchg
repnz
mov
dec
jno
and
dec
ja
sub
aas
aaa
sar
testb
jecxz
jns
mov
ror
add
outsl
popf
sbb
inc
insb
sti
xor
es
sub
fildll
jo
xor
aaa
mov
jl
or
stc
xchg
imul
jnp
mov
pusha
and
cmp
in
xchg
pop
sbb
jp
cmp
pop
cmp
xchg
popf
jmp
rcr
fsts
imul
jae
sti
cmpsb
lahf
xor
sbb
test
mull
mov
aad
push
xor
jp
cs
imul
push
push
mov
cld
imul
std
icebp
bnd
faddl
js
jmp
ss
pop
loopne
test
fsincos
xchg
mov
mov
pop
lahf
push
cmp
enter
arpl
pop
repnz
cmp
aam
outsb
sub
xchg
add
in
inc
cwtl
sbb
call
xchg
popf
out
adc
daa
stc
sarb
xor
mov
dec
repnz
mov
cmpsb
les
xor
cmp
sub
jg
xchg
and
mov
xchg
stos
adc
hlt
into
fmuls
inc
push
xchg
cmp
xor
sahf
add
clc
popa
xor
jg
cmpsl
xchg
pop
inc
and
iret
scas
mov
and
pop
aad
aas
xor
repz
int
inc
cmc
jo
mov
mov
push
mov
xor
jno
sub
jle
cmpsb
out
fisubrl
mov
jmp
scas
pop
out
fldenv
hlt
fcoms
inc
cmpsl
xchg
repnz
lds
xor
inc
mov
arpl
dec
outsb
and
ret
out
nop
lcall
pop
mov
cmp
gs
cli
repz
popa
and
dec
adc
pop
leave
int
add
fwait
adc
pusha
in
nop
aad
lahf
xchg
dec
mov
lret
cli
or
add
add
mov
mov
add
xchg
adc
or
scas
int3
call
mov
mov
pop
dec
addr16
dec
pop
insb
jbe
lds
daa
outsb
add
imulb
and
or
or
cs
mov
xchg
mov
mov
mov
insl
ja
sub
mov
fs
cmc
ljmp
jmp
adc
xor
dec
push
push
inc
loope
adc
fnstenv
nop
fwait
pusha
pop
mov
jl
xchg
scas
lods
pop
sbb
and
jle
cmpsl
ja
in
cli
outsb
in
ja
cmp
pop
pop
clc
cld
insb
lds
popa
adc
cld
psrlq
mov
push
cli
pop
bound
dec
dec
inc
jecxz
shrb
and
shlb
push
push
arpl
sti
inc
scas
cmp
and
cld
addl
pop
dec
jo
and
inc
adc
mov
or
cli
inc
jmp
push
xchg
mov
and
mov
sahf
pushf
mov
sub
lods
cld
stos
into
aaa
popa
xor
les
sub
xor
out
sahf
jecxz
or
xor
jae
int3
adcb
daa
dec
adc
imul
and
idivl
mov
loope
mov
cli
add
mov
dec
xchg
dec
push
incb
mov
ror
xchg
xchg
mov
test
leave
enter
in
mov
cmp
subb
xlat
mov
push
std
jmp
cmp
push
jno
iret
adc
mov
mov
and
inc
xchg
xor
inc
and
mov
sbb
jns
xor
pop
add
sbb
add
aam
sti
clc
imul
fs
adc
sub
lock
and
push
test
push
mov
jb
mov
call
push
repz
xlat
or
rcl
orb
popa
mov
cmpsl
xchg
or
int3
arpl
cltd
pusha
pop
cli
mov
and
jle
jb
xchg
jle
push
jecxz
in
clc
sub
popf
jne
cmp
lcall
and
dec
aaa
mov
xor
mov
mov
push
jne
in
movsl
popa
lds
in
cltd
xchg
outsl
cs
cmp
push
hlt
test
in
out
cmpsl
dec
lret
pusha
inc
in
sti
cli
test
imulb
xchg
xor
dec
fwait
push
xor
add
subb
insl
mov
jmp
ljmp
insb
sahf
inc
in
mov
mov
int3
movsb
mov
mov
movsb
xor
jle
and
ficomps
mov
dec
dec
pop
pop
jmp
fldcw
sahf
fidivrl
sub
sbb
and
dec
and
test
leave
movsb
xchg
js
enter
mov
pop
adc
in
lret
cmp
insb
out
in
movsb
and
orb
pop
xor
or
in
sahf
or
cld
aad
fisttpl
adc
mov
adc
sahf
xchg
adc
mov
call
or
faddl
test
loop
xchg
fs
sarb
jno
fidivrs
sub
dec
or
push
arpl
ret
jnp
adc
loop
xor
inc
sbb
inc
or
outsb
movsl
pop
add
in
add
scas
dec
sub
add
test
scas
das
xor
push
shrb
push
cmp
int
fdivrl
xor
cltd
inc
push
ljmp
in
pop
sub
outsl
test
pop
mov
mov
or
sbb
rcr
dec
inc
cwtl
jg
inc
bound
mov
add
mov
add
sbb
xchg
testl
aaa
jle
les
fadd
xor
mov
xchg
dec
pop
mov
mov
or
scas
outsl
adc
js
lea
lret
sbb
insl
cmp
adc
test
sub
push
cwtl
jg
sbb
cmp
xor
cmpb
clc
int3
push
push
je
add
aam
ja
xchg
xlat
lods
arpl
or
mov
into
add
dec
lret
mov
xchg
movsl
addr16
in
clc
jbe
dec
push
aam
scas
andb
or
dec
mov
aam
sbb
mov
int3
push
mov
bound
inc
sub
aaa
ret
dec
stos
dec
and
int3
test
lods
cmp
dec
outsb
and
fcmovu
sbb
int
nop
and
lret
push
adc
cltd
aaa
cltd
mov
cltd
movsb
or
fcoml
test
leave
les
cmp
dec
lods
add
cmp
mov
push
xchg
bnd
inc
mov
dec
dec
in
cld
out
in
loop
adc
repnz
rcl
lret
cli
pushf
clc
and
pop
mov
push
or
or
and
mov
xor
fnstcw
pop
std
dec
cmp
outsl
push
scas
out
das
adc
shll
popf
jo
inc
pop
mov
addr16
mov
in
jno
imul
subb
ja
cli
fldl
out
mov
lcall
scas
pop
fnstsw
addb
mov
movsl
fdiv
icebp
outsb
jne
adc
and
jns
adc
dec
xchg
out
pop
jne
repnz
test
aad
es
loope
outsl
add
ds
push
repnz
imul
imul
xchg
mov
push
dec
push
jns
xchg
bound
mov
cmpsb
push
jle
std
add
mov
inc
addb
in
je
jae
xchg
movsl
leave
lods
cmp
mov
repz
fidivs
mov
loope
jns
test
rorb
cld
dec
ret
mov
nop
popf
mov
inc
xchg
inc
pop
xor
aaa
out
loope
add
push
sbb
xor
movb
fstpt
mov
mov
lret
ss
jne
and
xchg
dec
lods
aas
stos
pop
xchg
int
fisttpl
cwtl
ja
or
fsts
push
stos
xor
push
ret
xchg
loop
js
bound
sahf
xchg
mov
movsl
or
mov
inc
cmp
jns
xchg
mov
fbstp
pop
adc
aad
out
push
lcall
insb
sub
sti
xchg
fbld
sbb
pushf
mov
ror
out
adc
call
cmp
mulb
fdivrs
and
hlt
fnstenv
push
add
cmp
jle
xchg
repz
adc
pop
and
mov
mov
jg
lds
addr16
or
mov
inc
mov
mov
fs
in
mov
xor
movsb
addr16
outsl
jp
loopne
push
outsl
out
mov
int3
add
cmpsb
mulb
jnp
pop
mov
enter
adc
jae
sub
cmp
cld
nop
push
dec
mov
cwtl
les
or
in
push
add
push
out
in
outsl
or
jp
lahf
and
cwtl
mov
add
aaa
je
xchg
jge
jb
adc
xor
repnz
inc
jmp
mov
in
pop
ja
mov
imul
jg
test
shrb
lock
into
and
fwait
xchg
lds
jb
mov
int3
xor
test
hlt
aad
out
pop
addr16
jmp
mov
adc
popa
jb
sti
repz
jmp
push
je
mov
mov
pop
addl
sbb
lret
jo
jg
popa
test
sti
xor
stos
jecxz
xor
adc
sub
dec
or
repz
shrb
jno
popf
sub
cs
cltd
aam
sbb
add
jb
ret
out
fnsave
ja
jne
int
daa
push
jno
das
mov
dec
cmp
aam
lea
aad
xor
idivl
test
addb
fstpl
daa
jle
jne
aaa
xchg
leave
flds
lcall
out
cmc
jae
cmc
push
jns
adc
push
dec
icebp
dec
lock
lods
sub
cmp
mov
inc
add
push
imul
pop
inc
push
les
cmp
fsubrl
es
cmp
and
sarl
popw
xor
popf
mov
jb
pop
aas
xchg
mov
cmp
cmp
cmpsl
icebp
mov
addl
outsb
add
push
mov
sub
rcrb
sbb
cmpsb
stos
cmp
add
test
add
negl
mov
aaa
push
inc
cmp
dec
jns
movsl
into
out
sbb
imul
fsubl
es
adc
je
int3
cmp
inc
xor
fistps
mov
sub
and
mov
das
inc
aad
push
arpl
xchg
and
xlat
lret
fisubl
xchg
inc
fdivl
jb
push
push
leave
mov
jecxz
add
and
mov
add
loop
outsb
paddb
xor
xchg
test
lea
mov
in
ljmp
xor
and
popf
mov
jecxz
dec
mov
jne
sbb
in
popf
mov
jae
arpl
add
fidivs
xor
push
adc
mov
mov
xor
test
inc
hlt
popl
sub
mov
pushf
les
repz
jle
aas
aad
aas
pushf
bound
jg
push
xchg
jmp
mov
jb
mov
imul
jbe
lahf
out
xchg
outsl
scas
push
jecxz
loopne
inc
out
cmc
jns
sub
cs
push
sti
fdivrs
ljmp
sti
in
ret
sub
adc
pop
inc
and
lods
clc
aad
or
icebp
xor
scas
add
sub
jecxz
dec
dec
addr16
and
lock
dec
jno
addr16
sti
xor
inc
cmpsb
hlt
shr
sub
jnp
and
bound
inc
inc
jmp
cmp
inc
jo
les
mov
imul
xchg
lds
or
xchg
addr16
into
jnp
test
pop
mov
fidivrl
adc
insl
mov
push
jmp
mov
shrb
push
and
and
mov
dec
mov
adc
aaa
lret
in
xor
pushf
das
ds
pushf
mov
mov
ja
lods
fwait
clc
dec
or
sarb
sub
scas
popf
mov
sti
jge
idiv
cmc
jle
addl
pop
nop
jo
dec
dec
in
ss
xchg
lea
cmp
sub
jmp
pop
jp
xor
sbb
scas
xor
mov
xor
iret
mov
call
mov
nop
jns
xor
rcrl
decb
mov
lcall
ja
mov
subl
sar
mov
add
loop
cmc
push
push
pop
pop
xchg
ja
add
mov
mov
sbb
test
inc
inc
idivl
mov
icebp
push
movsl
or
es
inc
jle
ret
jns
push
push
and
push
add
sbbb
push
and
jo
sub
sbb
jmp
inc
aam
test
sub
mov
cmpsl
fldenv
pop
xchg
inc
iret
cmp
out
jecxz
xorl
or
mov
loop
sub
lret
cld
or
mov
cmpsb
push
fsubr
test
mov
adc
ds
pop
push
fxch
dec
cmp
cmpsb
ljmp
push
dec
sub
jge
inc
and
hlt
xchg
leave
test
or
mov
rolb
mov
jmp
or
sub
cmp
cmp
cld
push
das
jne
inc
ret
insb
les
sbb
add
ds
xlat
xor
in
sbb
push
dec
pop
loopne
jl
sahf
xchg
ja
rol
in
xor
fcompl
mov
lahf
in
dec
movsb
xchg
jns
mov
ja
xor
in
or
xchg
fisttps
mov
sahf
mov
dec
jno
dec
repz
movsb
fisttps
and
or
dec
push
sti
cmp
push
es
mov
in
insb
xchg
add
xchg
insl
xorb
adc
dec
shll
pop
push
add
popa
pop
dec
stos
aas
or
add
xchg
into
test
es
push
loope
and
ret
cmp
popf
negl
mov
outsl
dec
xor
jmp
inc
cmpsl
adc
or
push
clc
lahf
mov
dec
call
or
ror
cli
xchg
outsb
sub
pop
jnp
sbb
insl
pop
cld
jmp
adc
jmp
push
fs
dec
fmulp
je
lahf
stos
ret
mov
aas
sarl
xchg
mov
fisubrl
sbb
push
mov
cmp
xchg
mov
dec
sarb
push
mov
scas
jo
mov
lahf
push
jns
fcmove
mov
mov
hlt
sbb
cmpsl
inc
or
in
jge
icebp
mov
pop
call
rcl
mov
shr
aam
push
nop
xor
dec
push
lods
fwait
adc
imul
mov
or
mov
mov
xchg
mov
xlat
pop
sub
idivb
inc
sub
idivb
ljmp
cli
rcll
jl
pop
stos
cmpsb
cmp
data16
in
into
mov
xlat
fs
xchg
sbb
push
call
bound
ret
lea
aaa
int
push
mov
pop
scas
sti
ret
jg
xor
pop
repnz
mov
mov
pop
out
add
scas
mov
jo
sub
inc
sub
xor
stc
in
loope
and
inc
int3
adc
divl
test
mov
mov
fcoms
adc
push
hlt
add
sbb
or
mov
insb
pop
icebp
or
jle
dec
or
shl
sbb
mov
fwait
es
stos
sbb
mov
push
adcw
daa
fdivl
mov
dec
sti
mov
cltd
leave
pop
lret
cmc
outsb
int
das
insl
ret
xor
xchg
rol
lods
xchg
repnz
lea
loope
rcl
aas
popa
sub
clc
lret
xor
cmp
inc
lods
outsl
xor
inc
mov
ret
xor
mov
adcl
int3
lds
pop
popa
sbb
push
ds
movsb
xchg
les
cwtl
pop
fwait
lret
repnz
lcall
scas
push
adc
or
jnp
xchg
jno
cmp
mov
add
repnz
add
push
dec
push
shlb
dec
add
xlat
in
nop
dec
repnz
dec
pop
out
inc
add
add
jbe
shl
or
andb
jns
outsb
rcrl
loop
test
jbe
popa
xor
mov
jp
cmpb
jns
inc
sbb
pop
push
outsl
insl
dec
sub
xor
enter
mov
jb
jecxz
adc
mov
adc
call
mov
add
repnz
push
cmpsl
xor
cmp
push
push
mov
cmc
adc
sub
mov
lods
or
mov
enter
xlat
lods
or
lret
cld
insl
xchg
stos
sbb
sub
add
xchg
call
ret
sub
jno
push
adc
dec
outsl
sbb
pushf
or
fwait
pop
xor
int3
les
or
lods
pusha
leave
fdiv
mov
faddl
iret
push
cmp
stos
pop
jae
leave
bts
push
xchg
mov
das
lods
mov
rolb
xlat
pushf
xchg
dec
pop
cmp
fisttpl
fdivs
and
sub
adc
dec
push
into
inc
lods
jns
mov
pop
add
add
adc
ljmp
jmp
xchg
pop
imul
cmpb
sub
cmp
lahf
clc
add
mov
push
sbb
jne
into
sti
test
mov
test
mov
cmp
jmp
cmp
mov
sti
sbb
call
push
jno
aad
dec
mov
movsl
stos
push
testl
mov
add
dec
pop
stos
jbe
sub
repnz
mov
xchg
dec
insl
leave
orl
jae
push
or
xchg
jbe
nop
or
shll
and
sahf
sbb
xchg
shll
flds
in
mov
lret
xchg
lea
mov
mov
jecxz
sub
mov
das
in
xor
inc
in
xlat
pop
mov
fsubrs
pop
out
xor
hlt
cmp
loop
mov
fwait
jp
pusha
sub
xlat
sbb
aas
repz
hlt
fstpl
add
mov
sbb
outsl
roll
sub
push
dec
xchg
mov
adc
pandn
mov
or
jo
jl
xchg
adc
dec
inc
pop
dec
jmp
aaa
pop
js
fbstp
inc
mov
add
push
push
data16
add
out
imul
fldcw
scas
movsb
dec
xchg
sti
mov
push
frstor
lods
sbb
ljmp
out
dec
pop
add
mov
sub
sub
sti
in
cli
scas
stos
xor
jbe
std
icebp
jbe
fisttps
mov
mov
push
negb
cmc
jg
or
xchg
adc
and
test
dec
mov
data16
dec
in
insb
xor
mov
cmp
and
mov
mov
movsb
gs
addr16
jecxz
call
dec
cmp
sub
aas
cmp
push
pop
out
bound
sub
fbld
sti
imul
inc
popf
mov
ss
in
push
jno
jge
mov
test
add
cmp
fstl
aad
jno
add
daa
mov
adc
sub
ret
aaa
jp
sbb
not
sbb
xchg
outsb
jle
and
daa
adc
fs
xor
mov
mov
sti
ficompl
cmp
rcll
sbb
or
mov
arpl
test
sbb
pop
lods
push
jge
jge
into
shll
out
pushf
ss
dec
lcall
lock
and
mov
sti
in
and
scas
cmpsb
cmp
mov
sbb
mov
sub
dec
and
inc
fwait
xor
ds
and
xlat
mov
arpl
pop
das
loopne
mov
mov
cltd
xchg
ret
jp
cmp
or
into
test
les
cmp
sbb
ret
cs
cmp
dec
test
lea
ja
push
pop
and
je
call
call
dec
dec
lahf
cmp
jmp
dec
neg
xchg
push
push
ja
add
cmp
or
pop
loopne
ja
subl
adcb
pushf
popa
jg
pop
push
lods
fdivrl
add
out
jae
mov
popa
mov
addr16
push
add
pushf
ror
adc
xchg
cmpsl
test
add
lods
and
adc
lcall
inc
scas
out
cmc
cmp
mov
iret
or
in
ja
es
push
daa
es
mov
jl
xor
fisttpll
in
push
cmp
mov
fmull
cmp
push
frstor
pop
cs
xchg
test
sbb
out
adc
xor
and
dec
sbb
mov
cmp
es
lock
sub
mov
or
ret
sub
pop
pop
adc
push
inc
insl
test
adc
mov
out
xchg
lahf
call
push
mov
sti
xor
sarl
jecxz
add
pop
xchg
push
insl
in
mov
and
adc
les
mov
add
mov
pop
add
clc
mov
sbb
mov
or
data16
cmp
inc
mov
out
inc
out
in
rorl
jg
addr16
daa
test
add
cmp
lret
inc
xchg
movsl
jo
iret
or
aad
add
mov
pushf
adc
mov
subl
mov
je
cmpsb
xor
xlat
pop
stos
fstps
fdivrl
xor
mov
loop
sahf
repz
adc
decl
sub
cwtl
imulb
jbe
int
adc
out
stos
test
aam
fwait
push
adc
adc
popa
int
pop
sbbb
dec
pushf
dec
mov
push
adc
dec
inc
loop
ljmp
jle
and
xchg
pop
leave
dec
adc
xor
mov
iret
adc
pop
sbb
pushf
mov
mov
push
int
sarl
icebp
clc
lods
add
cli
jnp
lret
in
cmp
jnp
mov
loope
frstor
push
pop
jmp
cld
mov
cmpsb
mov
movsl
sub
fimull
gs
or
cmp
aad
pop
inc
in
lret
sbb
mov
int3
inc
inc
scas
mov
aam
adcb
rcr
push
insb
lods
test
cmpsb
jae
push
subl
xchg
jmp
rolb
add
cwtl
cmp
xor
inc
insl
movsl
popa
lcall
stos
sbb
mov
neg
jb
popa
iret
mov
xchg
adc
orb
push
jae
sub
roll
jmp
add
popa
cmc
lods
pop
xor
and
inc
les
mov
add
test
jg
push
mov
outsl
lcall
nop
adc
xchg
pop
cs
sub
pop
pop
fwait
out
xor
scas
mov
pushl
dec
sbb
ret
and
jp
pop
add
int
adc
les
jl
mov
and
movsb
lds
nop
dec
inc
xchg
lcall
mov
xchg
xlat
inc
cmp
sbb
xor
mov
data16
push
ret
jb
inc
push
out
fstps
push
cmp
push
or
movb
push
mov
popa
add
xor
out
test
cwtl
jl
or
adc
sub
pop
mov
movsl
xchg
adc
lods
scas
iret
or
stos
adc
sahf
pop
sbb
pop
sbb
hlt
ds
xor
mov
shr
mov
mov
les
xchg
mov
xchg
and
mov
outsb
add
sub
movsl
push
jp
xchg
les
mov
dec
mov
push
clc
lock
lods
mov
nop
aaa
mov
roll
mov
or
cmp
jb
and
pusha
push
mov
lret
popa
cld
pusha
cmc
shr
rcrb
push
int
push
sub
shll
fsubl
push
xchg
popa
jbe
mov
pusha
xlat
lods
clc
push
bound
fisttps
adc
popa
loopne
mov
sbb
adc
sub
push
and
pop
and
mov
outsb
fldenv
sub
pop
fimuls
add
dec
xor
push
cmpsl
ljmp
ljmp
fldcw
ret
inc
mov
enter
xchg
ljmp
jecxz
outsb
lock
scas
das
loopne
imul
mov
sbb
xlat
cmpsl
xor
fcmovbe
test
add
jp
xchg
adc
ja
int3
loopne
and
pop
stos
imul
xchg
and
jo
mov
in
sbb
xor
test
outsb
out
popa
sti
mov
jae
mov
ret
popa
sarl
orps
pop
cld
hlt
ja
and
icebp
or
cmp
sub
jmp
stos
push
mov
outsb
cwtl
mov
inc
jg
jbe
into
xor
adc
adcb
aad
add
or
andl
movsb
mov
add
xchg
cmp
out
adc
das
cmpsl
adc
pop
cmpsb
addb
or
and
push
pop
lock
cli
ror
shlb
push
mov
push
add
hlt
cmp
sti
sub
mov
add
pop
shll
ret
insb
cmp
inc
jns
xchg
sbb
xor
mov
push
mov
cwtl
or
jnp
dec
nop
repz
add
pop
call
test
cmp
xchg
mov
scas
lea
das
cmp
xchg
or
sbbl
cmp
sbb
mov
or
das
mov
adc
test
inc
popa
ret
test
xor
and
push
rcll
dec
cmp
lods
negl
movsl
inc
sub
movb
dec
mov
cmpb
mov
inc
push
add
aam
icebp
fisubrl
jmp
sub
jg
pop
dec
mov
or
pusha
push
scas
shlb
lret
ret
lcall
and
popa
in
popcnt
push
cmp
out
sub
inc
cmp
div
aaa
clc
imulb
pushf
add
inc
adc
addr16
je
or
sub
vpmacsww
cmp
push
inc
xchg
add
sub
in
out
add
pop
pop
pop
sub
clc
iret
sbb
lret
cmc
fildll
mov
stos
push
and
or
mov
test
hlt
adc
xchg
in
cli
mov
insb
xchg
xor
outsl
mov
lods
into
mov
xchg
aam
pop
cmp
jp
lcall
repz
loope
sbb
xchg
movsb
outsl
sbb
inc
and
pop
and
cmp
adc
add
pop
dec
jno
sti
inc
sbb
inc
pop
push
pop
scas
roll
insb
or
mov
lahf
fdivrl
ss
imul
lcall
hlt
cld
sub
cmpsb
cli
ljmp
lahf
inc
jnp
outsb
imul
add
adc
pop
ret
mov
dec
sbb
jne
inc
icebp
push
je
add
pop
mov
xchg
jns
cmp
daa
xchg
ret
in
push
push
rol
std
pop
lret
cmp
xchg
iret
cwtl
dec
inc
jecxz
imul
leave
es
or
ljmp
ror
mov
mov
insl
inc
mov
stos
jmp
sub
pop
ja
pop
fildl
xor
mov
mov
mov
dec
ret
je
sbb
aas
lods
mov
fimull
mov
xchg
rcrl
add
mov
repz
or
pop
cli
fcmovnb
adc
outsb
negb
imul
cmpsb
xor
and
call
dec
mov
mov
scas
lods
idivb
loope
pop
fwait
test
pop
inc
inc
aas
scas
int
mov
pop
movsl
adc
push
jp
adc
jb
xchg
mov
nop
call
pushf
repz
sti
sbb
popa
push
cmp
out
movsb
jae
pop
add
dec
inc
loop
movsb
xchg
cmp
in
push
scas
adc
cmp
dec
mov
add
std
lds
jno
test
ret
adcb
xchg
orb
push
inc
sub
sub
xlat
gs
mov
xchg
scas
cltd
sbb
repz
or
and
insl
inc
jl
and
pop
mov
aam
imul
orl
imul
leave
popf
xchg
ljmp
pop
adc
sbbb
or
aas
icebp
xor
jg
cmp
inc
mov
outsl
add
xlat
xchg
mov
pop
sbb
jg
or
addb
jmp
or
test
push
popa
mov
xchg
mov
outsb
adc
inc
and
cltd
pop
adc
xchg
xchg
dec
into
lock
or
xchg
push
mov
ret
icebp
add
jecxz
pop
hlt
test
pop
decl
ret
test
icebp
dec
and
aas
in
sub
pushf
jmp
fistps
stos
adc
adc
pop
sub
jge
test
jmp
push
mov
push
je
sub
dec
dec
mov
cmp
cmc
lods
cmpsb
or
and
xchg
add
lods
in
in
setnp
lcall
push
out
push
push
test
ja
or
sub
mov
mov
int3
adc
fdivs
mov
xor
push
mov
test
fsubrl
mov
pop
xor
pop
out
inc
dec
push
inc
mov
inc
out
clc
lds
cmova
dec
movsl
xor
test
outsb
not
xor
cli
adc
outsb
dec
jae
cmp
xchg
jb
mov
jmp
andl
fdivl
popa
stos
xchg
lret
test
adc
ja
les
and
xchg
arpl
mov
or
push
xor
sbb
or
lock
push
mov
into
insb
mov
xchg
icebp
xor
push
lret
pop
jo
cwtl
xor
pop
and
std
pop
mov
cltd
mov
mov
cld
test
fisubs
mov
sar
cltd
push
or
sarb
jl
inc
clc
int3
fstl
jne
inc
dec
xchg
cmc
scas
js
arpl
push
in
push
push
xchg
inc
jne
sub
cmp
fldenv
adc
repnz
mov
lea
aam
pop
iret
test
loopne
mov
push
test
dec
push
inc
adcl
sbb
callw
std
fidivl
jp
jnp
dec
mov
inc
jecxz
sbb
out
cmpsb
mov
or
nop
stos
xchg
into
sbb
ss
mov
gs
es
adc
mov
stc
dec
mov
dec
lods
mov
decl
loop
lods
lcall
into
insl
mov
nop
hlt
js
cmpsb
push
into
mov
stos
inc
popf
or
fcoms
out
pop
fadds
in
lcall
negb
sahf
test
test
mov
inc
pusha
jbe
mov
movsb
pop
sti
stos
rorb
iret
cld
inc
loop
xchg
xchg
mov
cmp
lods
cltd
dec
or
js
or
push
jg
dec
iret
rcrb
cmp
mov
fsubrl
adc
sbb
or
lcall
push
stos
nop
inc
add
xlat
and
pop
sbb
jecxz
mov
stos
arpl
insl
push
xor
xlat
sbb
enter
push
add
and
and
cmp
out
dec
ds
sbb
lret
pop
ficoml
adc
sbb
addr16
clc
pop
fmull
lock
bound
shlb
lea
pop
les
test
push
sti
es
mov
je
fsubrl
jbe
jns
xchg
jne
jl
sahf
into
insl
jecxz
fcomps
push
flds
add
pop
insl
dec
fcmovnbe
jg
push
dec
add
das
mov
pop
sbb
sti
ud2
xchg
lret
and
sub
mov
jecxz
iret
xor
adc
sarl
call
outsl
jl
adc
ljmp
insl
out
xchg
jmp
or
cltd
mov
stos
test
pop
lods
and
lods
cltd
fstsw
ret
cld
call
je
mov
jo
sbb
sbb
aam
xchg
lret
in
mov
cwtl
lock
int3
inc
dec
inc
add
stos
movzwl
mov
and
pop
cld
xchg
clc
rorb
cwtl
cmc
sub
cs
push
out
es
ror
cld
sbb
mov
out
rcrb
jge
mov
in
cwtl
inc
mov
xor
int3
popa
aad
sub
jmp
aad
xchg
xchg
enter
adc
jb
clc
aad
sbb
cmp
or
neg
gs
xchg
gs
sbb
inc
stos
aam
inc
stos
flds
fistps
outsl
cwtl
push
scas
call
orb
outsb
cld
and
or
or
fcomps
sahf
loope
stos
test
xchg
sub
sar
pop
insl
mov
fcmovb
jmp
mov
cld
cs
cmp
cltd
adcl
in
mov
das
in
movsb
mov
insb
iret
repz
add
inc
inc
xor
adc
out
jo
mov
cmpsl
pop
sbb
mov
sub
xor
mov
jle
inc
inc
jne
pop
outsl
mov
mov
ret
popa
cmp
dec
outsb
mov
and
cmpsb
addb
fptan
jge
push
imul
fldenv
xchg
hlt
fcmovu
lea
notl
xchg
or
sbb
add
push
and
mov
mov
pop
jmp
mov
insl
mov
in
push
stc
pop
lock
mov
repnz
jp
push
bound
inc
sub
jbe
mov
jbe
cmp
lahf
test
iret
mov
outsl
rolb
mov
or
call
in
imul
mov
lods
push
into
les
out
cmc
xchg
les
scas
cs
push
xor
cld
xchg
push
lea
scas
sub
aas
or
xor
cmp
mov
sti
xchg
insb
xorl
xor
mov
test
pop
popf
xchg
fistl
mov
arpl
jns
cwtl
inc
and
xchg
iret
xchg
and
mov
ljmp
test
sub
in
cmc
sbb
or
mov
mov
cmpsb
sti
scas
lock
out
jmp
btc
and
dec
xchg
jl
cmc
jb
arpl
push
stos
out
daa
sbb
cltd
mov
mov
or
sbb
lods
cmp
mov
out
mov
pop
mov
out
dec
cmp
loope
into
add
cs
pop
and
nop
add
movsl
cmp
popa
sub
data16
aad
frstor
movsb
jns
sbb
test
cs
mov
ja
aad
popf
out
mov
mov
dec
xchg
push
jo
push
inc
test
sar
in
mov
mov
lcall
xchg
sub
pushf
mov
sbb
adc
popa
jp
mov
cmp
inc
cmpl
out
pop
iret
shr
mov
div
push
loopne
and
or
cmp
pop
adc
sbb
sub
xor
add
jge
lahf
push
push
ret
insl
push
mov
jmp
cmc
ret
cmp
sub
stc
out
idivb
shld
lods
bound
adc
hlt
push
or
je
jp
lahf
aaa
iret
sub
jne
mov
hlt
pop
nop
mov
outsb
scas
sub
jae
sbb
fcom
jle
xor
jae
jae
xchg
adc
jmp
stos
add
in
cli
push
cmp
mov
nop
out
fistps
les
cmp
push
call
and
insb
mov
mov
inc
push
das
fistpl
jns
lods
aad
out
shl
popa
sbb
int3
mov
push
fildl
data16
scas
push
sbb
in
mov
cmpb
rclb
insb
in
ret
arpl
inc
xor
into
xor
in
or
xchg
pop
add
fucomip
sbb
xor
data16
and
andb
mov
lcall
fldenv
stos
push
movsb
incl
call
scas
add
lea
mov
mov
or
pusha
push
scas
pushf
mov
out
roll
add
adc
push
mov
in
mov
ret
pop
std
jmp
iret
mov
les
inc
mov
push
cltd
mov
mov
lods
inc
xor
xor
daa
pushf
jnp
cmpsb
push
adc
lret
add
leave
or
pop
lcall
jo
mov
mov
data16
sub
push
mov
sbb
mov
inc
jbe
or
jl
sbb
mov
popf
pop
clc
xor
jmp
pusha
arpl
lret
mov
dec
cmc
sbb
sbb
in
popf
clc
popf
ss
sbb
mov
mov
xchg
repz
push
fisubrl
in
jmp
cmc
xlat
iret
inc
mov
mov
stos
int3
push
jnp
adc
xor
data16
cmp
sub
adc
xchg
pop
mov
push
iret
insb
out
sbb
inc
ljmp
xor
pop
enter
sarb
xor
cmp
or
mov
sbb
lret
or
cmp
imul
aaa
aas
fcomps
mov
inc
fwait
mov
ss
sbb
inc
jp
and
je
jl
ret
add
stos
mov
jl
mov
std
mov
xchg
mov
pop
rcr
enter
hlt
fnstenv
or
mov
sub
or
jle
imulb
pop
jo
sbb
lods
xchg
add
inc
mov
stos
iret
dec
aad
rorl
stos
cmp
les
sbb
xchg
jle
lcall
inc
lret
incb
pop
mov
adc
xchg
lahf
jae
push
jo
test
filds
or
push
and
mov
inc
mov
and
push
lret
push
shll
pop
pop
xor
repz
add
jle
fwait
or
mov
inc
cmpsl
mov
mov
pop
mov
xor
adc
sti
je
pop
inc
sub
xlat
adc
adc
inc
push
adc
jae
insb
gs
hlt
ficomps
xchg
cmp
cli
mov
pop
or
rorl
dec
adc
ds
loop
test
xchg
sub
sahf
enter
arpl
lods
pop
mov
inc
xor
aad
dec
gs
sahf
jl
xor
jns
addb
test
xor
je
xchg
in
jge
je
mov
nop
dec
pop
lds
sub
or
add
jae
xchg
int
stos
and
ja
jnp
xchg
xlat
leave
sub
sub
mov
pop
icebp
xchg
and
ficoml
insb
sti
or
dec
loop
and
jmp
or
popf
inc
push
adc
inc
and
cli
sub
push
int
out
cmp
and
shlb
push
push
and
dec
mov
pop
and
mov
push
push
cmc
adc
adc
xchg
ret
data16
mov
fildll
cmp
ret
pusha
add
lock
mov
rcrb
inc
in
sti
shll
repz
xchg
sbb
adc
mov
pusha
sbb
push
aam
push
sahf
inc
es
pushw
imul
jb
mov
mov
adc
data16
fldenv
dec
adc
mov
sbb
pop
push
popa
push
jae
add
cmp
aam
jecxz
imul
shr
lods
add
fadd
mov
adc
push
mov
or
int3
lds
fisttps
xor
mov
lods
je
adc
add
rol
xchg
push
push
loopne
shlb
lods
shll
int
jecxz
loop,pt
movsl
dec
out
and
fbstp
imul
push
xor
mov
movsb
cmp
addr16
pop
dec
stc
mov
mov
cmp
push
orb
insl
sbb
adc
jp
js
push
mov
sub
pop
mov
mov
adc
daa
icebp
mov
or
scas
sbb
mov
xchg
push
add
jne
mov
jo
mov
hlt
movsl
in
insb
int3
push
cli
and
or
dec
or
dec
je
jns
fsubl
mov
xor
push
int
add
push
std
repnz
arpl
mov
adcb
into
test
xchg
dec
sbb
in
pop
dec
mov
popa
mov
or
ret
mov
out
lret
fildl
dec
leave
or
loope
mov
pop
mov
out
outsl
mov
inc
push
test
movsb
mov
cltd
lock
mov
stc
xor
xchg
mov
stc
cwtl
inc
orb
inc
sbb
lods
jbe
push
inc
xor
test
xor
mov
in
mov
push
fisttpll
mov
jnp
push
ss
and
add
jbe
mov
decb
inc
lcall
lret
dec
lds
dec
aam
inc
lret
mov
clc
mov
dec
cs
push
mov
hlt
rorb
sbb
bound
data16
xchg
sub
jp
xchg
adc
outsl
and
sub
xor
push
mov
and
cmpsb
paddw
sti
sbb
xchg
jg
mov
mov
adc
cmc
in
xor
test
nop
mov
jl
hlt
sbb
dec
lods
call
push
mov
xchg
jl
cmpsb
addr16
ja
jbe
jne
lcall
popa
xchg
lods
addb
adc
inc
lods
dec
jmp
push
jns
aam
add
shl
and
pop
sub
out
sti
nop
sarl
fnsave
xchg
and
pop
xchg
mov
xchg
mov
popa
mov
push
cmp
xor
xchg
push
popf
sbb
push
mov
mov
jmp
cli
ss
push
test
cli
rclb
sbb
push
mov
cs
jne
xchg
sbb
outsb
out
or
mov
mov
es
mov
test
in
daa
je
push
push
movsl
mov
mov
jo
push
push
dec
mov
stos
fwait
inc
stos
mov
sbb
movsb
jge
ret
mov
adc
jge
mov
stos
cld
cld
insl
movsb
mov
ret
inc
inc
test
xchg
push
rorl
inc
imul
fsubs
mov
xlat
xchg
clc
enter
icebp
mov
pop
jo
aad
fmul
ret
lcall
dec
push
ljmp
in
stc
int
loop
call
imull
arpl
jno
cmp
add
mov
sub
xchg
pop
andb
cmp
out
aad
je,pt
mov
pop
out
jmp
mov
gs
mov
icebp
je
lods
sbb
clc
das
xor
outsb
icebp
arpl
mov
in
shrb
lods
adc
mov
mov
inc
cli
sbb
jo
repnz
aam
ret
mov
cld
mov
xchg
mov
fmull
loope
lods
nop
sbbb
xchg
int3
cmp
cmpsb
orl
lcall
sbb
xchg
aad
jl
cmp
xchg
push
cmp
pusha
or
mov
aaa
inc
in
mov
push
xor
loopne
push
mov
je
sub
pushf
scas
into
js
popf
mov
mov
enter
mov
int
pushl
xchg
ljmp
add
lret
dec
jl
push
ret
cmc
cli
mov
and
iret
mov
push
nopl
int3
insb
sti
fucom
jnp
ror
mov
mov
ret
rcr
jg
pop
shl
pop
ds
sbbb
fs
push
ss
pop
or
test
hlt
out
imul
sub
jg
xchg
jns
mov
pushf
loop
pop
push
dec
fs
sbb
pop
push
sti
repz
cmp
mov
stos
sbb
out
and
push
and
mov
mov
mov
xchg
int3
mov
loope
xchg
dec
cmpsl
insb
loopne
ja
ljmp
cmpsb
xbegin
sub
pop
fstl
fisubrl
pushf
mov
xor
jo
cmpsb
int
xchg
xchg
push
jo
push
scas
xor
je
mov
pop
pop
add
sbb
outsl
sub
xchg
hlt
and
mov
ja
js
lods
loopne
arpl
aas
xor
sarl
lret
xchg
mov
scas
push
je
pop
aas
xchg
xchg
xor
cmc
imul
popa
dec
and
test
mov
jmp
mov
ffreep
mov
shl
faddl
test
cmp
lds
or
aaa
scas
fucom
and
pop
push
jns
sub
mov
jmp
xchg
lcall
mov
jecxz
lcall
jle
dec
mov
or
jnp
repz
ljmp
dec
imul
inc
ljmp
loopne
push
test
pop
hlt
dec
fimuls
lret
cmp
jbe
or
mov
pop
add
push
pusha
iret
mov
lret
cli
ret
sub
sbb
stc
cmp
int3
out
push
push
mov
xchg
jns
jmp
scas
sarl
add
mov
stos
js
jecxz
fsubl
mov
pushf
ljmp
xchg
pushf
jmp
daa
and
mov
add
fimull
sub
rorb
in
fadds
cmp
jno
daa
and
rcrb
cmp
inc
ficomps
daa
cmp
pusha
jae
sbb
dec
dec
mov
cmp
mov
movsl
iret
push
lods
and
fstpt
jp
pop
or
push
adc
popa
lock
push
bound
outsb
rcll
insb
push
jge
movsl
push
pmaxub
adc
pop
fisttpl
fmull
lods
xchg
xor
fs
xchg
jge
cmc
shl
pop
mov
lret
pop
inc
dec
in
push
lds
mov
xor
jae
jge
lods
out
sarl
xor
cwtl
out
ss
lods
xrelease
ficomps
je
push
test
dec
cmpl
out
ds
mov
dec
clc
or
xchg
xchg
dec
fcomip
loop
mov
in
xchg
test
pop
fwait
pop
ret
or
bound
xchg
sbb
shll
sbb
stos
mov
push
icebp
loope
sub
fisubs
sar
frstor
inc
mov
mov
vcvtss2sd
mov
fidivl
rolb
mov
addr16
or
orl
jb
xor
or
test
sub
mov
sbb
pop
xor
and
cmova
sub
std
adc
jmp
lock
mov
adc
push
dec
mov
jg
into
lret
clc
sbb
jle
cltd
ja
pop
xchg
pop
fcoml
lds
mov
imul
xorl
mov
popf
je
sbb
inc
xchg
xchg
push
and
mov
rcr
xchg
loope
sbb
int
mov
jns
in
lds
cmp
fists
in
fcmovne
loop
in
jnp
xchg
test
lret
mov
cmp
ret
cld
pop
push
xchg
or
fldl
test
mov
ss
ss
inc
jle
xchg
jne
mov
les
aaa
test
xor
sbb
push
jno
fdivl
lret
jmp
daa
adc
inc
add
in
inc
sbb
dec
mov
push
daa
hlt
sub
push
sub
rorl
aaa
push
sub
cli
add
es
push
outsl
sti
loopne
scas
sub
xchg
mov
jecxz
loopne
xor
pop
pop
pusha
cmp
lods
lcall
adc
cmpsl
int3
jbe
jg
scas
cmpsl
sub
in
xor
cli
int3
xchg
je
sub
daa
movsl
mov
jl
pop
rorl
mov
popf
adc
or
push
add
or
push
add
pop
pusha
ror
jbe
out
push
add
adc
pop
es
inc
jl
out
dec
in
push
pop
sbb
pop
clc
add
cmpb
lods
incl
sarb
mov
and
mov
cmp
dec
idiv
rsqrtps
add
jno
sub
add
pop
xor
loope
cmpsl
mov
aas
cmp
out
stos
test
fcompl
lahf
mov
sub
popa
add
or
aas
in
add
cmp
jo
jns
scas
in
jmp
fwait
mov
sub
test
sar
adc
inc
jne
and
dec
or
ret
mov
pop
push
cmpsb
into
imul
or
inc
aam
pop
dec
cli
sbb
jecxz
shlb
int3
iret
sub
jb
into
pushf
stc
mov
stos
jecxz
sbbb
pop
mov
mov
sti
push
and
ror
fiaddl
adc
jno
bound
je
dec
int
inc
mov
in
fsubrl
jecxz
mov
stos
cmovb
ret
push
mov
xor
cmp
outsl
push
mov
sti
lock
mov
mov
ja
cld
icebp
pop
nop
sub
jmp
xor
sbb
pop
mov
ret
xchg
adc
daa
dec
cmp
std
mov
out
out
mov
dec
lods
movl
or
andb
pop
ffreep
outsl
jmp
jns
aaa
out
ret
cli
arpl
adc
inc
decb
jae
mov
movsb
mov
jnp
adc
sub
mov
push
or
std
mov
ss
xchg
mov
xchg
and
mov
pop
cmpsb
jge
mov
jb
lods
xchg
or
shlb
ret
pop
sbb
xchg
insl
insb
push
cmpsl
jle
or
jl
ss
je
ja
in
or
xchg
js
cltd
mov
mull
pop
push
out
sub
adcb
test
add
jne
pop
xor
leave
mov
push
push
add
pop
aam
ficomps
sub
nop
lods
pop
fwait
jmp
cs
fcomps
sub
repnz
nop
cld
test
js
adc
or
cmp
mov
xchg
cli
pop
adc
gs
mov
fcoml
xlat
aad
jns
into
stc
or
lret
sbb
loop
cmp
xor
sbb
lret
pop
cli
scas
sub
out
sbb
rorb
push
insl
pop
push
scas
push
daa
imul
or
ss
fsubrl
clc
push
push
sbb
mov
mov
jg
shrl
test
ret
sahf
nop
cwtl
out
mov
pushl
scas
jle
xor
dec
jns
cmp
ds
inc
jne
mov
xchg
in
sbb
jae
dec
movsb
or
out
jbe
jmp
cli
fwait
jmp
aam
dec
xchg
jg
inc
dec
xchg
jp
inc
push
mov
add
dec
ss
cmp
nop
xchg
movsl
mov
pop
repz
out
jge
lock
push
data16
inc
js
fistpl
jp
loope
mov
lea
repz
ss
mov
sbbb
pop
scas
mov
ret
pop
jg
pop
jp
xor
fwait
mov
into
jle
adc
std
lcall
add
sahf
inc
pop
cmp
ja
stos
aas
cmpsb
jo
or
repz
sbb
add
jno
jo
sub
fistpll
xlat
imul
pop
push
fisubs
int
jge
add
sti
jecxz
cmpsb
inc
cs
testb
sub
xor
ret
pop
icebp
sub
lock
jle
pop
mov
jb
lret
push
dec
jp
sub
add
bound
push
xchg
cmp
in
mov
repnz
push
aas
rolb
mov
fldcw
mov
ss
shl
pop
inc
xchg
call
sub
mov
shl
push
mov
arpl
inc
or
lds
xchg
pop
push
out
aas
ds
inc
mov
pop
adc
cli
aad
mov
stos
cmc
pusha
lds
inc
push
pop
ret
arpl
jge
inc
fildl
sbb
jl
cmp
imul
push
mov
mov
cld
std
sbb
sahf
test
inc
ret
sbb
dec
jns
gs
push
shrb
and
icebp
daa
or
incb
inc
and
cmc
pop
and
call
inc
and
das
repz
cli
cwtl
adc
jg
add
xchg
loop
mov
gs
test
loopne
and
and
push
or
fldt
cld
mov
sbb
or
push
hlt
loopne
cmp
andb
repz
in
out
xchg
ret
test
cs
inc
sbb
out
push
push
lcall
loope
gs
or
loop
and
mov
adc
xchg
test
stos
pop
ret
stos
test
lea
stc
jl
xor
cmp
pop
jb
sub
aam
xlat
and
jp
movsb
pop
xor
in
loopne
insb
mov
aam
xchg
repnz
dec
mov
or
pop
xchg
hlt
aas
xor
push
dec
push
ret
push
repnz
iret
lds
cwtl
add
pushf
pop
and
arpl
aaa
push
adc
fimull
test
fcomps
jb
jge
fstp
mov
cmc
dec
sub
inc
popa
sub
jb
xor
ror
movsb
stos
jnp
cmpsl
cmpsl
inc
mov
xchg
nop
daa
or
and
push
test
mov
jl
add
mov
mov
xlat
cmpsb
xlat
ljmp
leave
pusha
or
cmpl
xchg
xchg
rcrb
out
cmpl
les
cltd
or
bound
and
dec
fadds
pop
imul
stos
int
pop
testb
inc
fwait
cld
lret
jnp
js
xchg
mov
inc
jb
xchg
pop
fists
arpl
sbb
stos
icebp
xor
loop
lock
rolb
enter
jmp
jns
cmp
ja
adcl
test
jo
divb
lods
pop
stos
add
fisubs
popa
add
scas
imulb
daa
and
push
and
imul
sbb
cmpsl
repnz
arpl
xchg
mov
dec
add
out
mov
stc
xor
jno
mov
sti
sbb
aas
xor
dec
adc
aad
mov
dec
into
add
cld
iret
repz
scas
dec
mov
pop
nop
or
push
xchg
scas
xor
push
adc
aas
cwtl
pop
roll
push
loope
jb
pop
int3
cld
and
xor
int
fwait
fs
mov
gs
pop
push
dec
sbb
jmp
lods
loopne
repz
mov
fdivr
cmp
in
jb
jmp
cmc
int
stos
cmpsb
xchg
add
int3
decl
and
cwtl
test
shl
cmp
stos
or
cmp
clc
sbb
test
jne
js
pop
cmp
lds
shlb
adc
sbb
xchg
or
hlt
inc
jecxz
sub
cmpsb
fsts
lock
sbb
cmp
cmc
sub
adc
jecxz
test
movaps
shll
push
cs
jns
xor
adc
in
jbe
push
dec
fcoml
bound
pop
outsb
faddl
jae
paddw
adc
das
outsb
inc
ds
mov
jge
cltd
cmp
cmp
and
std
jmp
stos
cmp
xor
pop
mov
jb
mov
mov
or
sub
mov
pop
adc
lea
mov
adc
push
jb
xor
aas
fldenv
adc
dec
mov
sahf
or
insl
jnp
ja
or
std
and
shlb
es
cmc
shr
push
out
add
sahf
fs
inc
test
or
xlat
dec
fildll
lock
pop
loope
push
arpl
pop
cmp
and
add
mov
fcompl
adcb
push
cmpl
push
mov
adc
pop
push
shrl
fmul
mov
mov
lcall
jg
sub
in
add
cmpl
sbb
add
mov
adc
cmpsl
xor
lock
and
and
aad
inc
cwtl
scas
cmc
add
sar
pop
pop
xor
or
int3
jno
lret
jnp
add
cmp
and
ret
inc
push
jnp
enter
lret
out
lcall
mov
aaa
decb
pop
push
adc
aaa
or
icebp
int3
cmp
xlat
or
notl
loopne
pusha
out
push
outsl
test
cmc
loope
pop
or
lcall
icebp
jl
scas
lcall
imul
pop
clc
and
fisubl
clc
outsb
jl
and
and
mov
rcl
inc
jae
repz
repz
pushf
ja,pt
movsl
fists
call
cmp
sbb
lahf
scas
jne
popf
sbb
les
mov
outsb
xchg
popa
sbb
xchg
int3
loop
dec
pop
xor
adc
pop
xor
cmp
push
add
mov
in
enter
mov
push
dec
jmp
outsl
popf
popa
rorb
mov
sbb
inc
sbb
es
jnp
daa
sbb
mov
xchg
stos
enter
ds
loopne
xchg
sub
sbb
rol
cmp
pandn
fldcw
xchg
pusha
add
inc
jg
dec
pop
add
mov
push
pop
sub
jmp
inc
ret
xchg
push
cmpsb
insl
add
mov
int3
icebp
xchg
icebp
rorl
mov
emms
mov
sbb
lds
arpl
repz
les
xchg
and
dec
xor
cwtl
sti
or
pop
fidivrl
outsl
jns
and
pop
aam
mov
dec
xchg
push
incb
xor
repnz
mov
xor
inc
sti
je
push
pop
push
inc
jp
dec
cmpsb
lock
data16
dec
das
aas
jle
test
mov
inc
xorb
andl
stc
push
fimull
mov
gs
jnp
add
cmp
inc
mov
sbb
push
cmp
sub
pop
std
dec
out
inc
divl
pop
repnz
pop
jl
add
stc
sbb
jg
leave
test
lock
jb
and
mov
scas
mov
notb
push
dec
dec
dec
es
dec
into
push
push
pop
lock
add
sbb
cmp
addr16
lret
adc
imul
lods
mov
pushf
je
xlat
inc
insb
daa
mov
dec
in
mov
jbe
jg
int
adc
mov
add
sbb
inc
loop
orb
imul
dec
push
mov
daa
jne
incl
loope
mov
jecxz
popa
jecxz
xchg
or
mov
or
ret
push
jmp
push
xor
or
push
mov
push
loop
xchg
jecxz
mov
sti
mov
shll
push
idivl
scas
stos
push
imul
fs
dec
jne
sbb
xchg
push
stc
sub
lea
push
fs
adc
jno
push
insl
pop
mov
adc
lret
fs
sub
test
fldcw
dec
pop
cli
icebp
jae
xor
dec
inc
rcrb
in
push
icebp
pop
int3
mov
adc
push
fs
pop
jnp
fwait
sbb
cmpsl
mov
pop
cmp
cs
xchg
scas
pushf
adc
call
mov
and
int3
pop
out
aas
add
inc
jp
push
je
imul
mov
xor
repnz
out
mov
mov
or
push
push
xchg
or
mov
push
pop
ss
imul
gs
push
out
add
inc
movsl
add
loope
outsl
je
popa
cltd
jmp
mov
pop
loop
nop
push
lea
movsb
sub
mov
dec
idivl
jo
sbb
cld
dec
test
loope
adc
fmulp
sti
push
pop
xor
adc
aas
ficompl
int
adcb
sub
adc
cmc
or
xor
int
or
xchg
lret
es
out
dec
scas
sbb
hlt
jo
mov
out
xchg
and
out
fs
xor
in
stos
jle
call
idivl
and
rcll
arpl
push
mov
test
pop
jp
fwait
jmp
mov
hlt
mov
ja
fs
cmpsb
das
enter
addl
scas
call
or
ss
xchg
pushl
sti
int3
test
mov
xchg
dec
stos
scas
sti
push
pop
xchg
mov
push
or
cmpsb
or
pop
inc
dec
jl
xor
inc
sbb
jp
jmp
dec
insl
mov
xor
xlat
pusha
fucomip
or
add
push
pop
pop
repnz
mov
dec
mov
mov
jp
int
inc
pop
xlat
cmp
or
enter
fdivp
out
inc
pop
xchg
mov
test
aas
int3
pop
test
inc
dec
mov
pop
cltd
fistpll
roll
and
inc
out
pusha
and
in
sbb
daa
daa
in
xchg
out
add
jae
cmpsl
inc
dec
int
jb
or
ficoml
jb
adc
insl
mov
iret
insb
pop
mov
inc
das
push
mov
dec
push
mov
ss
add
push
stos
pop
mov
mov
push
cli
cmp
fwait
xor
ss
jns
enter
fs
idivl
jne
or
subb
or
xchg
dec
les
xchg
push
mov
or
std
rolb
sub
push
lea
xorb
xor
ficompl
pop
std
pop
lret
push
adc
mov
fs
cmp
sub
xchg
and
leave
fwait
std
pop
mov
sub
dec
loopne
pop
mov
ds
cmpsb
cmp
fs
sti
movsl
mov
ret
sbb
cli
pavgw
rclb
aaa
push
adc
cmp
cli
das
add
sbb
mov
xor
dec
xor
adc
imul
cmp
daa
subl
xchg
mov
jns
insb
cltd
adc
pop
movsb
addr16
arpl
push
xchg
pop
mov
xor
dec
jb
xchg
mov
pop
lcall
sbb
aaa
mov
jle
lock
add
or
lea
push
push
icebp
pop
cmp
cmp
sub
xchg
push
rolb
jmp
lock
lods
arpl
arpl
pop
xchg
jp
pusha
lds
arpl
mov
and
lahf
mov
jge
add
movsb
test
sbb
cmpsl
shll
mov
ja
jnp
and
or
jne
lcall
sbb
mov
jl
and
mov
test
fldenv
xchg
mov
sti
mov
inc
xor
mulb
cltd
sbb
add
ss
sbb
mov
mov
pop
add
in
jne
xchg
mov
push
jl
and
cmp
sub
movb
mov
lcall
out
adc
sub
ljmp
int
xor
and
and
popa
or
incl
pop
jnp
mov
adc
dec
addr16
jns
xchg
loopne
jg
push
bnd
jae
ret
inc
push
imul
stc
xor
cmpsb
lret
sbbb
imul
xchg
jae
shll
and
cmpsb
mov
stos
mov
out
xor
fcmovnbe
scas
xor
dec
xchg
and
out
in
mov
cli
test
loop
add
mov
pusha
movsl
addl
pop
dec
in
lock
shrb
arpl
and
hlt
aas
icebp
xorb
icebp
push
xor
dec
jmp
lods
fwait
dec
mov
jo
nop
lods
or
pop
and
xchg
inc
icebp
push
in
call
loope
add
pop
icebp
xor
sbb
popa
outsl
mov
cmp
out
rcrl
adc
inc
incl
mov
and
xor
cli
or
shrb
out
repz
gs
stc
mov
icebp
xor
js
divl
jne
add
rcrl
inc
sarb
jecxz
repz
enter
xor
cmp
dec
xor
sub
and
dec
out
popa
mov
ss
mov
scas
add
pop
lods
jne
push
cmpb
xor
lcall
jmp
adc
xor
fwait
outsb
xor
dec
mov
and
push
daa
ret
repz
sbb
mov
dec
sbb
ret
jno
mov
mov
mov
inc
push
fsubrl
inc
je
stos
mov
dec
out
mov
in
adc
mov
add
push
insb
push
lods
jge
push
pop
iret
ljmp
pop
mov
popa
add
inc
fs
xor
inc
xor
hlt
push
jbe
scas
push
inc
mov
out
out
jl
inc
clc
cld
cmp
loop
mov
adc
mov
dec
hlt
fstpt
dec
lahf
in
inc
or
and
out
hlt
vmread
jecxz
lret
push
jle
pop
mov
aas
xor
and
pusha
sub
inc
dec
cld
mov
inc
jns
xchg
lret
lahf
push
shlb
sub
jg
cmp
pop
mov
mov
ss
cld
push
out
pop
mov
xchg
ret
mov
jno
sbb
outsl
cmp
sub
fsubrl
pusha
push
and
mov
mov
cltd
and
in
loope
sti
shrl
jp
test
xor
mulb
fs
xchg
cmpsl
cld
cltd
xor
fldl
mov
pop
pop
cmp
dec
cmp
inc
out
adc
fisubs
cmp
mov
out
shll
xchg
pop
sub
into
movsl
setnp
out
push
jge
xor
test
rcll
mov
jne
std
fildl
test
adc
mov
pop
mov
jae
insl
xchg
movsb
and
cltd
gs
inc
gs
sbb
and
popa
cmp
or
dec
hlt
gs
add
loopne
xchg
fs
loope
jnp
and
cmp
out
sbb
loope
cmpl
pop
dec
ffreep
pop
adc
sahf
push
pop
jmp
sbb
jno
inc
or
hlt
jno
mov
movsb
pop
scas
movsb
dec
and
outsb
sbb
rcr
dec
push
cmp
sti
dec
ljmp
les
enter
arpl
sti
adc
xstore-rng
cmpsl
add
adc
push
jmp
sub
push
jg
divb
xor
es
sub
jnp
pop
test
insb
iret
dec
pop
pop
test
les
push
push
push
xchg
lret
add
mov
and
lret
test
notl
sahf
lds
ds
cmp
in
adc
popf
lret
imul
daa
mov
rolb
xor
sbb
rorl
fidivl
in
mov
mov
mov
bound
sub
mov
les
addps
dec
fcomp
xchg
dec
jns
sub
jmp
imulb
cmp
stc
or
or
fld
mov
into
dec
pop
out
jae
push
addr16
xor
or
mov
hlt
imul
and
fsubr
ret
push
fs
jecxz
push
mov
mov
sbb
mov
cs
stos
cmpb
je
addr16
sub
push
shrl
mov
stos
jo
add
dec
in
dec
lret
out
sub
lahf
push
xor
pop
lds
mov
call
jg
lods
call
outsb
mov
rolb
rorb
add
pusha
lock
add
xor
cmp
imul
xchg
outsl
push
scas
cmpsl
lods
pop
xor
sub
movb
out
lret
aas
jne
sbb
cmc
test
sbb
xchg
das
aaa
push
and
icebp
aad
mov
mov
popf
mov
out
cltd
mov
int
adc
cmpb
out
shr
xor
pop
mov
xchg
pop
jo
mov
fisttpll
mov
and
mov
rolb
pushf
lret
add
jecxz
arpl
orb
ret
or
repz
out
adc
or
mov
fisttpll
sub
or
lea
ret
fisubrl
ret
mov
aam
cli
scas
sar
enter
int
dec
push
out
xor
scas
add
push
sub
pop
xor
sub
add
es
pop
jmp
dec
pop
mov
mov
jo
pop
xchg
ss
dec
cld
outsl
xchg
dec
js
jne
movl
pop
ret
sub
loopne
push
sub
repnz
cmp
sbb
cld
jbe
lcall
sub
test
push
jmp
out
fstps
ds
push
mov
call
loop
aam
xor
ljmp
cmp
cmp
fstps
andl
or
fidivrl
sbbl
push
inc
cli
mov
mov
imul
lcall
hlt
push
xchg
xorb
cmp
inc
aas
std
test
stos
outsb
lea
or
roll
cmp
mov
lock
or
lds
add
cli
xchg
inc
sahf
xchg
lods
ds
icebp
repnz
bound
psubd
push
repz
xchg
mov
mov
rolb
push
push
shrb
jecxz
or
cmp
sbb
adc
xor
imul
bound
subl
mov
jge
or
xchg
jo
jbe
lret
cs
addr16
or
pusha
leave
adc
cmp
mov
jns
cmp
pop
or
lods
psubusw
jo
jnp
in
inc
enter
push
leave
out
fcoml
daa
cmp
arpl
mov
xor
mov
or
pop
sbb
push
dec
jmp
xor
sbb
push
vpunpcklbw
test
xchg
stos
mov
mov
icebp
jl
cmp
in
push
popa
cmpsl
subl
adc
ret
cmc
jno
push
push
aad
ljmp
lahf
dec
fimuls
dec
jbe
test
hlt
fbstp
mov
or
sub
sub
addr16
clc
insl
sar
sub
repz
pop
fcoms
cmp
ljmp
stos
cmpsl
pusha
add
mov
pop
lds
pop
mov
cld
nop
fcmovne
or
mov
clc
and
inc
push
push
push
movsl
add
jp
pop
sub
fisttps
mov
xchg
out
stos
std
lds
lods
test
int3
aam
out
mov
mov
mov
sub
mov
ljmp
loop
jne
xor
aam
loope
rcr
and
push
mov
cmpsl
ret
and
xchg
jl
cmp
into
dec
jmp
add
sahf
fcmovb
emms
icebp
jno
xor
lock
lds
insb
xorb
movsb
cmp
and
jb
sub
xchg
push
dec
sub
cmp
dec
adc
popf
and
icebp
jle
sbb
repnz
pop
fwait
lods
mov
stc
jne
aaa
rcr
push
add
jne
push
mov
aas
or
daa
dec
mov
insl
sbb
lahf
cli
fsubrl
dec
repz
add
add
pop
pop
sbb
ret
add
or
out
xor
add
sub
jmp
add
sub
fldt
cmp
cmpsb
ljmp
pop
enter
gs
in
sbb
dec
mov
sbb
in
ss
add
out
pushf
lea
mov
push
jmp
fxch
add
pop
pop
xchg
leavew
or
add
lcall
mov
call
and
jb
sbb
imul
mov
out
in
enter
out
out
push
mov
out
fs
sbb
test
jle
ljmp
inc
pop
push
or
pushf
push
push
xchg
cmp
jns
lds
lods
jae
insb
jmp
lea
stos
mov
nop
insb
lret
mov
jo
cli
xor
push
xchg
les
jnp
jl
jp
test
sbb
pop
push
cmp
cltd
and
xchg
fwait
scas
loopne
sti
sub
sti
outsl
pop
int
shl
lcall
push
lds
mov
fiadds
inc
fistpll
or
rorb
out
lea
xchg
cmpsl
sbb
roll
mov
or
sub
pushf
cmpsb
jbe
outsb
mov
jno
int
movsl
adc
sbb
js
ret
cmc
lock
xor
or
cmp
aas
sub
adc
jb
cwtl
fidivrs
jmp
jae
lret
adc
and
nop
and
xor
idivl
sbbb
loopne
cmpb
sbb
pop
test
stos
outsl
cwtl
sbb
aam
clc
int3
into
inc
lods
mov
push
adc
sbb
jb
clc
and
imul
movsl
movsl
pop
andb
cwtl
jns
xor
jne
mov
stos
sub
mov
int
aas
ljmp
les
insl
aaa
push
frstor
aam
outsb
inc
and
fwait
insl
push
xchg
arpl
and
cmp
jno
daa
out
cmp
push
cwtl
cmp
lret
mov
mov
mov
sahf
fadds
sbb
mov
or
or
call
dec
and
test
das
pop
std
aas
inc
rcll
jge
sub
mov
iret
stc
mov
and
add
ljmp
je
add
cmp
inc
adc
cltd
mov
pop
aam
push
insb
sahf
xchg
dec
insl
jp
mov
cld
ret
out
data16
shll
lods
xlat
outsl
cmpsl
icebp
jmp
jnp
xchg
adc
and
lock
jl
pop
cmp
insl
in
mov
mov
jne
sbb
mov
paddq
push
push
sti
adc
pop
add
movsl
das
lods
in
jmp
stos
clc
xor
adc
jnp
jae
ljmp
ret
jle
repz
jg
inc
jle
mov
dec
in
mov
jae
mov
popa
xchg
mov
dec
mov
repnz
dec
repz
popf
cmp
stos
stos
xor
cmp
cmp
add
in
dec
push
sub
repnz
loope
call
std
cmpsb
popf
mov
mov
test
jnp
mov
in
mov
push
jnp
sub
xor
pop
push
icebp
xor
pop
sbb
scas
icebp
movsb
inc
sub
jns
iret
dec
add
pop
andb
insl
cmp
cmp
cmp
sub
push
dec
loop
mov
es
shl
sbb
sub
iret
sub
dec
or
cmp
mov
add
mov
add
push
fcoml
inc
call
test
jp
test
inc
rorb
dec
dec
sub
xchg
mov
sbb
mov
stos
inc
mov
test
and
cmp
push
jnp
push
scas
enter
adc
es
stc
mov
adc
aad
aam
pop
mov
jecxz
inc
lods
orl
xchg
cmp
adc
mov
pop
pop
hlt
mov
ret
add
ss
gs
inc
dec
pushfw
adc
push
test
sarb
divb
loop
push
stos
cmp
insl
cmpb
iret
cmp
loope
adc
inc
dec
lods
xor
xchg
into
xlat
adc
xlat
ret
lock
sub
xchg
push
in
push
int3
cmp
mov
inc
shlb
dec
push
fadd
dec
adc
xchg
shrb
sub
or
dec
pop
dec
add
fadds
movsb
ljmp
int
dec
es
sub
jp
xchg
cltd
roll
add
adc
inc
jns
jmp
mov
test
cli
sarl
mov
les
sub
aaa
dec
dec
imul
xorl
idivb
int
push
push
mov
lret
sbb
pushf
mov
push
fstl
popf
dec
cvtdq2ps
stc
or
cmpsb
incb
leave
ret
out
sti
xchg
dec
xor
and
inc
add
xchg
icebp
sti
int3
aas
insl
add
ljmp
push
rolb
pop
dec
pop
scas
stos
cmp
pushf
xor
lods
jno
daa
xor
lea
push
aas
mov
mov
test
aad
xchg
popf
icebp
jns
cmc
mov
push
movsl
sahf
mov
int
push
js
fs
adc
xchg
jne
mov
mov
fprem
jb
sub
xlat
aaa
pop
nop
push
js
popf
xor
dec
mov
cwtl
xor
rorl
js
xchg
jg
subl
repnz
lock
pop
push
iret
out
lret
movsl
jmp
sbb
pop
fcomps
mov
push
cltd
test
lds
adc
sub
nop
sbb
cmp
and
repz
sbb
push
mov
add
or
cld
mov
or
call
jge
pop
xor
pop
mov
mov
aas
cmpsb
test
push
mov
sub
adc
jl
mov
out
cmp
loopne
inc
jbe
mov
shrl
inc
repz
and
push
pop
nop
mov
mov
xor
inc
push
sub
sbb
mov
aas
push
jae
stos
in
rclb
imul
and
cld
enter
repnz
repnz
cmp
inc
sub
push
or
push
test
je
xchg
jg
cmp
push
push
aaa
cmp
or
sub
xchg
fnsetpm(287
in
sarb
dec
ficompl
push
movsl
xchg
hlt
ss
daa
ljmp
cmp
bound
adc
in
icebp
pop
add
mov
testb
or
and
push
ljmp
jmp
and
jmp
fbld
andb
and
dec
mov
mov
push
sbb
dec
ja
jl
imul
push
jl
push
pop
mov
lret
pop
gs
shll
dec
xchg
sub
cmp
pop
testl
lret
jp
adc
push
test
data16
test
je
movsl
adc
sbb
xchg
xor
cwtl
xchg
dec
mov
pop
inc
xor
mov
and
jns
or
mov
pop
cmp
stos
push
adc
xor
mov
testb
or
jbe
or
mov
adc
std
daa
cltd
sbb
jecxz
flds
mov
jb
mov
xchg
fsubrs
jne
mov
pop
pop
insb
out
fiaddl
or
hlt
pop
jle
incb
push
cmp
push
ret
fsubp
sbb
stc
insb
mov
in
xchg
sbb
adc
cmpsb
jnp
repnz
sbbl
push
cmp
pop
jmp
mov
sbb
mov
jae
pop
xchg
out
lret
arpl
mov
push
and
or
hlt
out
cmpsl
outsb
and
imul
jb
mov
es
xor
fsubs
imul
sbb
inc
or
jg
mov
leave
and
and
iret
add
les
sbb
sahf
sarl
mov
mov
mov
movsl
shl
test
jns
dec
fsubrs
jb
fimuls
repz
jns
jmp
daa
xor
mov
popf
pop
or
xchg
adc
mov
das
leave
flds
and
out
ret
icebp
mov
mulb
fadd
or
rorl
pop
sbb
movsl
sub
xor
mov
inc
and
xchg
pop
test
or
xchg
mov
jns
enter
les
rcll
and
and
inc
push
in
fs
incb
mov
pop
dec
mov
scas
movsl
push
cmp
cmp
mov
mov
pop
xchg
and
jg
inc
pop
enter
or
imul
loop
dec
test
inc
aaa
jp
clc
das
cmp
push
add
ss
imul
in
pop
cltd
dec
mov
mov
lock
ljmp
mov
cmp
adc
cmpsb
adc
add
pop
sarl
sti
sub
in
push
ss
int
mov
mov
js
xchg
add
xlat
lret
sbb
scas
xor
punpckldq
cmc
add
xchg
inc
orb
jb
popf
sbb
faddl
cmp
cli
xchg
pop
inc
or
push
popa
mov
jge
jecxz
scas
push
icebp
lods
inc
or
jns
aas
addr16
enter
fmull
cmp
ss
in
dec
test
insb
je
lods
xor
and
int3
iret
jmp
pop
ljmp
fisttpll
stc
sub
nop
call
test
mov
mov
popl
mov
loope
cld
fs
pop
mov
push
fimull
inc
cmovb
cld
push
jecxz
dec
int3
adc
pushf
insb
sti
mov
push
xor
jecxz
popf
mov
adc
lds
out
inc
fbstp
lahf
mov
or
in
daa
stos
xbegin
inc
pop
sarb
sub
jecxz
and
orl
shrl
and
jb
mov
and
pop
fstpl
mov
and
fbld
push
lds
ds
vmulpd
dec
movsl
and
notl
cmp
cs
jb
mov
mov
adcl
mov
ret
cmpsl
lds
int
scas
in
je
rcll
jge
xorb
fwait
jae
lods
sahf
out
lods
jnp
pop
cmp
movsb
add
js
pop
jge
ja
mov
test
in
cltd
out
dec
pop
push
adc
pop
pop
dec
mov
push
xchg
add
testl
xor
or
test
push
inc
mul
lcall
jge
shl
inc
xor
ret
and
xor
ljmp
cmp
xchg
es
push
jo
jbe
mov
lahf
push
jecxz
in
scas
pushf
cmc
test
fwait
hlt
shrl
lock
clc
jg
cltd
xchg
int3
lods
mov
xchg
arpl
jge
aaa
shlb
push
pushf
adc
inc
iret
jno
leave
les
inc
loope
fidivs
dec
ljmp
out
mov
test
sub
push
or
add
nop
test
or
movsl
push
addr16
mov
nop
mov
addr16
jb
fs
pop
fsubrl
pop
in
loop
test
fstpl
jge
fiadds
fisubrs
arpl
sbb
test
mov
stos
push
pop
xor
inc
mov
andb
sahf
imul
jns
add
jle
cwtl
add
mov
icebp
or
cld
mov
dec
or
mov
xchg
ficoms
dec
mov
dec
loop
sti
jecxz
imul
imul
addb
pusha
int
fldenv
mov
fistl
adc
int3
jp
loop
inc
dec
xor
fcomps
aas
inc
pop
xor
out
or
into
mov
dec
mov
stc
in
mov
testl
rcrb
roll
mov
mov
xchg
mov
adc
pusha
mov
jge
leave
or
outsb
mov
notb
sbbb
sbb
pop
mov
mov
mov
cmpb
jbe
popf
push
lods
adc
mov
add
ret
int3
cmpsl
jae
mov
aad
xchg
loopne
sub
jno
sar
jp
pop
cmp
dec
xor
imul
leave
sub
dec
cli
or
out
aaa
mov
dec
xchg
pop
loop
inc
sbb
js
mov
nop
out
cmpsb
bound
shlb
scas
xchg
push
ret
sub
ljmp
jecxz
loop
xor
dec
mov
inc
outsl
fwait
xchg
pop
mov
jg
arpl
xchg
sbb
into
sbbl
xchg
ret
jecxz
xchg
fwait
pop
jbe
dec
push
mov
test
in
xor
fldcw
ds
push
int
cltd
push
mov
sbb
pop
lds
movsb
xchg
nop
adc
mov
dec
ds
ret
mov
fcmovbe
xchg
dec
or
mov
insb
shrl
sub
push
aad
mov
enter
or
lahf
ret
xlat
loope
stos
fsub
sub
lock
inc
insl
mov
cmp
cltd
xchg
add
jae
das
addb
push
gs
shll
pop
lea
ffree
mov
ljmp
jp
cmp
fstpl
xchg
inc
lods
xchg
push
mov
jno
or
mov
les
mov
or
add
in
gs
lods
add
int
mov
inc
xchg
in
stos
dec
roll
in
cmp
faddp
fsubrs
nop
jge
jnp
mov
cmp
mov
iret
and
dec
mov
pop
sbb
sub
pop
pop
out
adc
jecxz
or
popa
xlat
cld
pop
mov
and
leave
push
cmp
int3
gs
ret
insl
xchg
push
ds
jle
and
insb
test
ss
adc
sub
xor
jp
mov
cmp
mov
xchg
movsb
adc
int
dec
cmp
mov
or
mov
dec
sbb
bound
incb
outsb
popf
dec
clc
dec
sbb
pop
inc
fstps
in
mov
or
and
jp
shrb
in
leave
fdivr
daa
jg
fadd
add
leave
dec
mov
aad
and
sahf
popf
and
dec
xlat
sub
xchg
push
inc
cmp
xlat
inc
aas
cmpb
out
inc
inc
jl
jne
mov
loop
push
inc
ficoms
dec
out
xchg
push
dec
inc
test
mov
pop
cmp
adc
jp
xor
push
jg
fwait
mov
insb
lret
lret
pop
aam
gs
jmp
iret
sbbl
icebp
sbb
in
outsb
add
push
mov
push
data16
push
pop
mov
jne
lds
fisubrs
ljmp
add
jb
data16
je
paddb
pop
int
test
add
jnp
in
dec
in
pushf
add
sbb
adc
xchg
jecxz
dec
lock
or
dec
arpl
dec
and
sbbl
aam
popa
mov
icebp
push
adc
sahf
enter
cwtl
in
mov
aaa
push
inc
data16
mov
pop
rep
adc
mov
push
imul
inc
lock
lret
and
cli
cltd
ss
jp
cmp
out
push
adc
and
mov
pusha
fnstsw
sub
jge
stos
ret
pusha
mov
pop
xchg
not
clc
mov
sahf
aaa
scas
mov
js
push
push
push
repz
jge
movsb
nop
cwtl
sub
inc
mov
mov
aaa
dec
leave
cmp
add
pop
bound
push
loop
mov
dec
in
mov
dec
outsb
in
xor
shlb
adc
adc
mov
add
mov
push
les
aas
insb
adc
aam
xchg
adcl
jg
adc
sti
or
popf
xchg
and
imul
jg
push
ljmp
cld
filds
adc
mov
mov
lods
dec
enter
lret
dec
aaa
push
and
in
lds
int
dec
pop
xorl
es
mov
inc
popf
lods
jb
xlat
or
push
pop
push
imul
sahf
enter
cmpl
inc
pop
jecxz
sti
imul
rolb
sbb
jne
insb
push
mov
push
mov
lret
mov
mov
sub
repnz
daa
dec
outsb
xchg
addl
ficomps
cmc
scas
xor
sub
adc
dec
xchg
and
xlat
pusha
outsl
mov
mov
sub
loop
mov
and
add
nop
push
sarl
pop
add
lods
ja
mov
xor
es
filds
ffree
xchg
pop
fsubs
sbb
sub
pop
rcr
sbb
jl
mov
mov
out
mov
loope
pop
inc
inc
sub
xchg
sbb
sbb
jnp
push
pusha
cli
gs
decb
roll
cmp
and
push
add
jg
push
or
fnstsw
adc
xor
ds
lahf
mov
mov
xlat
adc
jb
int3
add
arpl
jmp
leave
pop
inc
addr16
sub
sahf
loop
dec
jbe
xor
xchg
or
lret
cmpsl
test
push
xor
out
repz
jmp
cmp
cwtl
test
sub
js
outsb
fcomps
jl
push
divb
add
mov
stos
and
push
push
xor
out
lock
add
or
popf
mov
inc
adc
lock
enter
ds
arpl
or
xor
jmp
outsb
lea
adc
iret
mov
fisttpl
es
push
sbb
subb
xor
outsl
sub
lahf
sbb
push
inc
cmpl
sub
bound
and
mov
push
lret
jle
pusha
jle
movsl
sub
jns
aaa
cmp
mov
out
movsb
jb
sti
mov
iret
jo
insl
pop
lods
add
decb
and
fidivl
mov
mov
add
sahf
rorl
or
adc
pop
data16
dec
dec
fnstsw
jns
aaa
inc
xor
out
jmp
sahf
sub
jp
imul
sbb
dec
jno
pop
lds
imul
mov
ljmp
pop
mov
xchg
cmp
mov
hlt
ret
imul
lret
inc
or
mov
cwtl
int
lods
xchg
mov
mov
out
scas
out
leave
jp
lcall
popl
jbe
imull
add
rorl
mov
jb
inc
ja
dec
imul
lea
fwait
jl
imul
les
sbb
dec
push
sub
rcrb
inc
sbb
faddp
adcb
pop
stc
popa
push
call
pop
lret
cld
jge
loop
xchg
scas
xlat
mov
mov
inc
and
aas
lods
ficoms
mov
and
js
das
arpl
sbb
cmp
cmp
iret
adc
pusha
outsl
out
pop
loopne
je
pop
out
addb
lret
sarb
and
mov
and
push
dec
dec
or
jecxz
push
mov
xchg
ret
sbb
ficoml
int3
mov
mov
and
mov
shlb
dec
dec
leave
or
or
cmpsb
mov
jae
sub
push
adc
mov
mov
fistpll
out
cmp
sbb
jge
iret
ret
pop
adc
adc
loopne
sub
std
jo
divb
adc
push
dec
mov
mov
fs
out
lock
inc
xor
jmp
fstpt
lock
cmp
loop
iret
in
push
add
adc
rol
mov
insl
xor
jecxz
cmp
arpl
out
scas
lret
xchg
cmpsl
sub
mov
add
repz
dec
dec
popa
mov
mov
pop
fadd
ljmp
inc
xor
sbb
or
fmuls
mov
js
adc
xchg
lahf
fbld
push
jl
out
inc
cld
mov
xor
sub
push
mov
dec
ret
xor
adc
jae
pop
xchg
stos
inc
cmp
mov
stos
mov
dec
xchg
lea
and
notb
add
repnz
push
lods
pushf
inc
outsb
sbb
imul
gs
pop
dec
sbb
push
js
into
popfw
imul
jg
xlat
cmp
push
out
mov
insl
outsb
sbb
movsl
sub
ljmp
pusha
mov
mov
sub
sbb
xlat
jne
mov
push
cmpsb
lock
je
rol
push
mov
scas
lods
and
fisttps
adc
jmp
cli
mov
jl
aas
iret
inc
push
pop
mov
pusha
repz
std
test
jns
sbb
mov
imul
adc
mov
sbb
add
icebp
mov
and
xor
inc
sub
pop
sub
sbbl
cld
pop
inc
mov
fisttpl
and
aaa
scas
push
xchg
enter
mov
sbb
sub
and
je
jmp
inc
loope
and
repnz
aad
dec
test
pop
xor
mov
push
jne
mov
cli
push
popf
cmp
stc
arpl
sub
rclb
mov
lods
push
push
pop
repz
mov
fisubrs
mov
imul
lds
cld
jnp
push
insb
jge
dec
mov
and
enter
fwait
cmp
or
out
sbb
pop
rclb
add
arpl
neg
pop
iret
push
enter
enter
pop
sbb
outsl
outsl
sbb
xchg
cs
xchg
cmp
in
xchg
aad
cmp
movsb
fmuls
mov
arpl
jecxz
cld
sub
popf
or
in
je
stos
iret
fidivrl
xor
xchg
adc
sub
out
std
in
push
cmp
pop
imul
stc
xchg
arpl
mov
inc
xchg
outsb
cltd
jl
inc
fdivrs
mov
push
inc
lds
imul
imul
pop
jmp
and
cmpsl
in
stc
xor
or
icebp
ja
ret
lds
mov
scas
adc
push
adcl
repz
adc
cmp
pusha
pop
movsl
iret
mov
adc
hlt
fdivs
cmpsb
pop
arpl
xchg
icebp
movl
inc
mov
cld
jo
bound
add
cmpsl
testl
popf
ljmp
mov
sub
sub
jmp
pop
adc
jge
jecxz
jo
lcall
sub
arpl
lahf
mov
test
dec
adc
push
push
lahf
negb
cwtl
pop
bound
sbb
insb
add
dec
add
adc
iret
adc
mull
stc
mov
imul
out
xchg
das
jg
enter
push
or
scas
or
pop
cmp
mov
sbb
mov
adc
push
movsl
clc
bound
andb
outsl
sbb
imul
sub
mov
addr16
mov
in
mov
push
push
cld
push
xchg
adc
rolb
cld
lea
inc
fsubrs
gs
sbb
inc
js
in
lods
adc
push
and
push
fwait
fwait
pop
xchg
and
mov
mov
add
jmp
jae
inc
sbb
stc
imul
cmpsl
outsb
repz
mov
addl
mov
xlat
leave
push
cmp
arpl
out
inc
xor
jl
pop
xchg
pop
sbb
jge
aad
lods
decb
jno
aaa
xor
push
rcll
out
sub
pop
shll
test
xor
dec
inc
inc
pop
jecxz
in
cmp
adc
shlb
cmpsb
call
jg
dec
sbb
mov
repnz
rclb
mov
idivb
push
aam
sub
adc
jecxz
test
test
hlt
call
push
jecxz
outsb
cmpsb
dec
adc
repnz
xchg
xchg
clc
repnz
hlt
jo
jg
dec
mov
mov
push
sbb
test
enter
in
gs
jb
pop
mov
repnz
xor
aaa
mov
cwtl
xor
mov
mov
add
ja
lea
inc
xlat
ja
aaa
mov
rcr
div
scas
xchg
outsb
xchg
pop
inc
and
jle
push
popf
out
xchg
test
and
cmpsb
mov
cs
pop
shlb
stos
or
xchg
fisttpll
cli
fwait
mov
mov
jge
push
js
in
mov
test
dec
das
out
add
sub
or
push
subb
sarl
xchg
imul
bound
jns
adc
icebp
and
xchg
fsubrl
xchg
leave
sub
imul
ficoml
shll
shl
js
arpl
pop
imul
mov
adc
repz
xchg
push
out
mov
les
ss
loopne
push
es
lea
int
dec
dec
sbb
es
and
sti
into
inc
jbe
xchg
xchg
sub
and
dec
outsl
jne
mov
insb
push
loop
xor
inc
xchg
mov
stc
jg
add
xchg
fcoms
push
inc
adc
adc
pop
xchg
lock
test
pop
xor
cmpsb
shl
pop
pop
in
fstps
mov
sti
dec
pop
std
pop
out
xchg
into
je
and
dec
pop
fld
cs
push
add
jbe
lret
popa
xchg
push
arpl
fbld
jne
iret
repnz
rcrl
xor
gs
mov
inc
ja
or
xchg
subl
add
adc
cmc
push
idivl
add
xchg
xchg
icebp
ffreep
inc
lcall
sahf
dec
jl
sub
iret
inc
pop
aad
or
jns
sub
xchg
xor
xor
xor
jae
movsb
inc
push
rolb
cmpsb
sbb
or
aad
adc
in
and
jae
movsl
cs
sarl
cmp
fistps
mov
lock
adc
mov
xchg
pop
int
and
inc
out
ja
shl
popf
push
push
mov
mov
decl
inc
int
cmpsl
fsubr
cmp
aaa
inc
lcall
fwait
test
loope
dec
and
out
jo
fisubs
cmp
sbb
enter
clc
sarl
jns
sarl
dec
in
cmp
mov
sbb
or
gs
rolb
push
dec
pop
shr
inc
stos
mov
into
pop
xchg
mov
dec
fsubrl
sbb
out
xchg
push
pop
rclb
jb
xchg
fcoml
add
loope
test
cmp
outsl
repz
sahf
sub
or
shlb
inc
lods
fimull
sahf
lds
lds
lock
jno
lret
mov
or
xor
lock
test
nop
subb
cld
das
inc
mov
popf
call
xchg
shlb
inc
jb
mov
jae
dec
xor
ret
xchg
add
cs
push
dec
imul
jbe
cmp
lods
push
rcrl
lds
scas
ja
imul
adc
mov
jne
mov
push
mov
imul
push
fisttps
imul
inc
jl
repz
lahf
out
stos
cs
enter
xchg
or
xchg
sbb
mov
repz
fdivs
xor
adc
mov
gs
insl
xor
sub
mov
in
pop
out
cmp
lret
pop
lret
lods
jbe
mov
dec
pop
leave
mov
or
adc
xchg
andl
in
xchg
sbbb
xor
push
push
imul
sub
repnz
xchg
xor
dec
shlb
mov
cs
ficomps
adc
cmp
dec
inc
mov
jmp
fisttpl
dec
adc
push
sbb
push
lods
push
out
cs
cld
aas
fiaddl
sbb
sbb
cmp
mov
aam
sbb
addr16
pop
mov
inc
pop
leave
sub
xchg
sbb
ja
cmpl
ljmp
mov
addl
mov
mov
inc
mov
xchg
and
dec
sbbb
jmp
pop
pop
das
push
jp
outsb
rcll
inc
dec
rclb
movsl
icebp
ja
ljmp
pop
jne
call
out
outsl
lcall
mov
addr16
pusha
adc
dec
repz
cltd
push
sar
adcb
out
repz
fmulp
add
mov
add
jge
cmp
pop
outsl
in
pop
cmp
inc
repnz
aaa
enter
ds
clc
test
js
mov
call
cmp
dec
add
pop
push
jbe
cltd
cltd
sbb
cmp
shrl
fstpl
push
shlb
loop
jge
adc
dec
mov
mov
leave
jge
loope
sub
mov
sub
add
shlb
or
leave
dec
pop
sub
sub
mov
int3
pop
adc
dec
in
pop
or
ljmp
dec
hlt
lret
add
jge
sub
loopne
mov
lahf
push
ret
mov
sub
and
dec
and
dec
mulb
pushf
aas
hlt
ret
dec
mov
push
dec
cltd
add
mov
mov
add
adc
out
ja
inc
hlt
xor
aam
mov
mov
jg
add
xor
jno
jo
xchg
adc
loop
pop
sub
ret
das
pop
sbb
clc
std
es
jmp
andl
sbb
imul
cmp
jo
jmp
or
jle
mov
lock
xchg
push
rorb
sbb
dec
add
pusha
mov
insl
jmp
mov
jns
mov
push
addr16
subl
sbb
jbe
lods
adc
pop
insb
lods
call
data16
stc
int
pop
test
out
add
stos
xchg
dec
stos
insb
sbb
xor
fcoml
adc
push
pop
xchg
lea
mov
pop
into
clc
dec
jo
cmp
push
addr16
add
insl
enter
dec
push
mov
cmp
jnp
jge
add
sbbb
jne
jb
das
fistl
stc
jp
out
and
shll
mov
pop
dec
je
repz
push
sbb
clc
test
jl
jmp
adc
or
pop
pop
scas
ss
stos
aas
movsl
xchg
int
mov
je
popl
shll
sbb
sub
add
xor
enter
aas
out
mov
call
push
jle
lcall
nop
divl
xor
out
jae
loopne
cmp
inc
arpl
push
pop
cmp
pop
rorb
push
xchg
inc
mov
ret
pushf
mov
icebp
pop
fcmovne
pop
divl
push
cmpsl
push
cmp
xchg
cli
sub
push
leave
nop
dec
push
repnz
in
xchg
and
imul
clc
push
pop
aad
push
pop
popa
icebp
add
sub
clts
push
cmp
aaa
mov
add
push
std
mov
xor
add
xor
mov
pop
mov
mov
dec
xor
push
jp
cmp
nop
out
sub
jmp
stos
loop
mov
mov
fistpll
and
mov
lea
pop
mov
xor
mov
adc
pop
aaa
xor
mov
rcrb
subl
push
subb
sbb
and
push
incb
push
jp
push
jg
and
test
mov
pop
add
enter
inc
sub
dec
xchg
inc
sub
or
pop
lahf
cmpl
test
andb
dec
and
es
adc
nop
inc
ret
cmp
fwait
mov
inc
das
and
mov
mov
repz
sbb
xchg
cmp
push
mov
and
stos
sbb
addr16
nop
hlt
das
outsl
inc
repz
push
xlat
ffree
int3
dec
xor
call
mov
jl
mov
dec
pop
add
fldcw
mov
jg
fdivrl
jecxz
jmp
pushf
lcall
dec
imul
shl
negl
or
fimull
pop
sbb
dec
in
mov
fsts
adc
mov
xlat
call
popl
divb
fdivs
out
lds
enter
in
jne
lret
and
xor
clc
mov
rcrl
jle
loop
jp
jmp
mov
ljmp
mov
inc
mov
test
int3
dec
and
add
sub
or
jp
and
xor
push
push
pusha
inc
aaa
mov
sahf
jg
test
xor
mov
lods
mov
ret
lods
xchg
xor
loopne
push
xchg
xor
cs
and
nop
pop
cmp
call
sbb
inc
stc
jl
fs
stc
je
mov
or
pop
jmp
adcl
dec
and
inc
movsb
sub
add
xorb
inc
push
lret
fidivl
mov
cmp
shrl
out
stos
cmp
in
mov
shll
pushf
jbe
pushf
xchg
push
xchg
pop
shl
out
inc
xchg
rep
ljmp
stc
jno
push
fsubrs
cld
and
and
fiaddl
imull
pop
mov
mov
stos
push
fldcw
inc
jns
repz
sub
xchg
xor
es
pop
dec
rclb
lea
in
or
ret
mov
inc
inc
jge
daa
mov
pop
sub
and
xor
movsl
jmp
pushf
inc
dec
jnp
daa
jl
pop
jbe
inc
and
movsl
sahf
pop
orb
push
insl
mov
dec
mov
hlt
ss
mov
movb
push
or
sbb
xchg
mov
dec
js
and
loopne
arpl
popf
cmp
mov
stc
push
lea
jo
inc
cld
icebp
adc
sbb
mov
mov
jmp
cwtl
cmp
and
fdivr
shl
stc
je
repnz
movsb
and
ljmp
ret
dec
inc
and
jae
rorl
or
mov
fistpll
imul
loopne
jmp
sub
loopne
imul
cmp
aaa
mov
mov
mov
into
xor
or
aam
mulb
aaa
clc
cwtl
xor
mov
sti
jb
outsb
inc
fldenv
push
movsl
sahf
or
adc
and
movsb
sub
ljmp
dec
lds
iret
imull
fcompl
mov
outsb
sahf
daa
or
loop
jbe
test
pop
aas
pop
stos
mov
xor
aaa
push
dec
fldenv
in
sbb
loope
xchg
std
and
icebp
and
xchg
adc
pop
jecxz
clc
pandn
fimull
imul
pop
cmpsl
mov
jg
mov
push
fistpll
fistpll
out
andl
insl
fisttpl
dec
mov
dec
mov
mov
adc
dec
imul
inc
iretw
out
jns
pop
sub
push
in
or
lock
mov
popf
dec
sahf
jno
stc
xchg
jp
add
inc
mov
mov
outsb
lea
adc
sub
fsubrp
dec
push
fldl2t
jbe
mov
mov
mov
pop
cmp
cmp
xchg
or
in
int
jnp
insl
sub
stc
inc
bound
or
cld
fisubrl
pop
cmpb
jmp
lock
je
push
pushf
imul
addr16
sarb
aam
sbb
pop
repnz
cmp
xor
mov
cmp
sbb
sub
push
ljmp
popf
aaa
fcomps
sbb
jle
xorb
loope
idivl
inc
dec
aad
lahf
jns
les
push
jne
xchg
xchg
rdmsr
mov
movsl
add
movsl
jge
cmp
lahf
hlt
mov
std
inc
mov
push
pop
jge
mov
push
mov
cmp
push
mov
addr16
fs
adc
mov
enter
xchg
push
mov
pop
call
pushf
jb
int3
add
add
cmp
xchg
in
lods
dec
adc
dec
inc
add
pusha
test
cmp
mov
sbb
pop
adc
jmp
aad
add
jle
lea
jnp
xor
test
dec
pusha
scas
rcrb
mov
jnp
stos
lods
sbb
data16
nop
in
imul
pop
std
jmp
adc
inc
sbbl
sbb
ret
mov
loop
cmp
fdivl
jnp
jmp
pusha
xchg
jne
jno
fwait
add
into
lods
pushf
in
insb
or
leave
push
jns
sarb
fiaddl
je
jmp
sub
bound
subl
jne
jnp
addb
sub
or
popa
imul
adc
add
roll
std
pop
dec
xor
out
bound
loope
ficompl
inc
lcall
clc
or
rcll
jno
jge
sahf
and
sbb
popa
jmp
or
scas
xchg
in
mov
sbb
mov
imul
jnp
sub
in
idivl
cli
mov
pop
and
out
ret
loope
sub
aaa
cmpsb
xchg
dec
mov
inc
mov
insw
dec
xor
mov
insb
test
ret
push
ret
insb
daa
stos
inc
xor
push
int3
ljmp
dec
clc
es
lock
sbb
outsl
pop
stos
pop
mov
inc
or
cli
sub
scas
sti
hlt
add
out
ljmp
and
cmp
ret
jne
rclb
cmp
out
sbb
xor
ds
repz
cmp
fiadds
jecxz
bound
cmp
mov
mov
cli
or
add
mov
loopne
ficomps
ss
push
lea
and
popf
fdivrs
daa
cwtl
pop
jb
mulps
push
call
mov
adc
pop
pop
popf
hlt
xchg
repnz
std
xchg
adcl
movsl
shlb
or
mov
pop
nop
lods
movsl
adc
push
pop
inc
or
mov
out
test
mov
dec
sbb
push
jnp
js
adc
push
adc
cmpb
cmc
xchg
jne
dec
push
sub
mov
daa
add
dec
cli
les
adc
cmp
jmp
scas
test
ret
xor
outsl
cmpsb
icebp
push
or
cmpsl
and
mov
sub
sarb
push
in
xor
bound
mov
push
pop
pop
cli
dec
xchg
cmpsl
adc
add
sbb
lods
fistps
mov
vpaddusw
hlt
fldenv
scas
push
pop
add
inc
js
ret
aam
or
loopne
ss
sti
pop
adc
cmp
pop
les
push
xchg
mov
cmp
and
rcr
es
jg
adc
ss
add
scas
repz
outsl
ret
mov
lret
test
jne
xor
repz
mov
add
or
inc
icebp
fisttpl
aas
test
dec
sub
or
or
mov
or
cmp
rorb
setae
sti
ss
iret
lods
jmp
and
into
jno
fcomps
cld
inc
and
nop
sub
in
xor
or
fcoml
mov
pop
push
cmp
push
daa
stos
inc
scas
sub
push
mov
xchg
jge
inc
lret
jno
ds
xchg
pop
dec
movb
fnstcw
in
enter
xor
or
lods
add
dec
mov
nop
hlt
ds
push
ror
sub
sbb
inc
sbb
xorl
icebp
data16
mov
idivl
nop
fs
and
mov
push
enter
fiadds
movsl
jecxz
and
inc
mov
mov
or
xor
sbb
and
addb
push
shll
outsb
sub
mov
aam
or
stos
add
jbe
fsubrs
mov
daa
sbb
and
add
das
ss
inc
sub
shrl
push
lcall
pop
mov
xor
jb
pop
test
les
cmpsb
outsb
inc
std
loopne
or
mov
sbb
ja
sub
or
mov
das
cld
jg
push
insl
inc
ss
out
outsl
stos
test
testb
mov
inc
xorl
jmp
add
dec
push
push
xchg
enter
ja
mov
dec
lods
out
fs
pushf
jno
loopne
hlt
mov
and
mov
int3
add
lds
jno
cli
adc
jmp
scas
sbb
in
sub
leave
inc
xlat
movsb
xor
je
and
bnd
pop
stos
pushf
jne
shlb
xchg
fdivl
repz
mov
pop
mov
loopne
and
push
sbb
push
xor
enter
mov
icebp
xchg
loope
and
in
xchg
add
lcall
mov
adc
dec
mov
or
out
push
mov
cmpsb
mov
adc
dec
inc
imul
push
out
mov
dec
out
mov
dec
jns
jl
push
jl
inc
mov
xchg
xor
push
pop
jnp
call
jnp
xor
xor
jb
dec
and
test
sbb
xorl
jb
cmp
dec
pop
push
xchg
adc
xchg
cmpsl
adc
and
sub
leave
movsl
mov
jecxz
fnstsw
fucomip
mov
mov
mov
and
fstpt
fstp
mov
pop
xor
jge
mov
adc
and
or
shlb
cld
sub
int3
xchg
add
lret
mov
stos
mov
stos
lret
xchg
popf
jae
movntps
aam
sahf
adc
cmp
or
sahf
push
sahf
pop
mov
sbb
dec
sarb
inc
sub
push
dec
pop
sahf
pop
je
add
and
arpl
push
fcmovnb
or
movsb
and
scas
push
je
sbb
push
stos
shr
mov
xchg
jl
lret
fwait
mov
dec
sub
dec
mov
in
sub
movsl
dec
push
shl
sub
imul
jb
cld
add
lds
in
mov
xchg
ss
lods
push
jnp
sub
and
mov
dec
arpl
sub
stc
dec
push
stos
mov
sbb
dec
lods
out
and
in
filds
in
iret
push
mov
es
lret
cld
mov
int
loopne
push
push
mov
push
adc
test
mov
and
daa
imul
jns
cwtl
inc
dec
jne
out
pop
jmp
out
stc
mov
push
pop
sbb
dec
sbb
loop
adc
add
mov
aad
and
xor
jl
ret
jbe
xchg
fcompl
lret
insl
jmp
mov
daa
icebp
mov
das
push
jp
nop
cmc
xchg
out
jmp
rcrl
dec
mov
cmpsb
sbb
inc
cmpsb
aad
or
jae
mov
mov
out
adc
mov
xor
int
mov
rorb
loope
adc
jo
lock
bound
xor
add
sbb
push
or
je
fiadds
mov
sti
inc
push
pop
imul
jl
adc
test
mov
clc
mov
insb
cmp
jge
cmp
out
push
aaa
fidivrl
sbb
mov
push
jae
popa
stc
cltd
mov
cmpsl
int
mov
fcmovnb
sahf
movsl
push
movsl
adc
pop
icebp
pop
test
fwait
testb
push
push
scas
xchg
xchg
gs
test
pop
loopne
push
lret
mov
mov
adc
data16
jno
lds
dec
fsubrs
loope
shrl
inc
ss
push
mov
mov
cld
mov
xor
sbb
ljmp
imull
or
inc
pusha
xchg
cmpl
scas
mov
adc
dec
pushf
pop
jl
mov
sub
ja
pop
xchg
mov
in
jmp
and
push
in
push
cmp
cmc
fcmovnb
imul
mov
sbb
mov
hlt
in
jge
aas
stos
mov
js
negl
popf
and
stos
aad
rcr
ds
mov
pop
pop
xchg
mov
add
shrl
dec
shl
lret
cmpsl
xor
loop
movsl
add
adcl
jb
pop
loopne
scas
icebp
push
popa
fisttpl
in
out
push
mov
xor
daa
sub
insb
mov
mov
scas
cld
cmp
jg
cmpsl
pop
lock
fldenv
shlb
mov
out
push
ja
cmpsl
mov
cltd
cmpsb
jbe
fistl
pop
fisttpll
cld
cwtl
ja
decb
stos
ret
dec
andb
cmpsb
sarl
lahf
cmpb
js
out
dec
xor
pop
cwtl
dec
mov
adc
and
fwait
enter
cli
es
insb
lea
lcall
push
jl
xchg
pushf
movb
and
dec
shlb
mov
jns
ret
inc
cmp
push
repnz
fnstcw
rcr
es
mov
push
icebp
jnp
cmp
push
imul
dec
insl
pop
cmpsl
or
stos
mov
scas
pop
testb
js
jo
subb
ret
mov
addr16
cld
adc
xchg
popf
pop
out
shlb
movsl
mov
sahf
sti
das
cmp
mov
movb
mov
dec
aam
mov
inc
cld
movsw
adc
pop
push
cmp
push
dec
es
mov
cmp
and
sahf
shll
xor
adc
out
sub
add
gs
std
mov
xor
and
fisttpl
push
testb
mov
xchg
adc
jmp
test
jmp
xor
push
out
lds
aad
dec
mov
retw
or
xchg
in
mov
add
enter
jo,pn
cmp
out
js
in
dec
or
ljmp
lods
repz
sbb
jmp
or
shll
mov
jbe
jl
in
into
test
add
cwtl
sbb
mov
repnz
cmpsl
adc
pop
mov
pop
cmpsb
imul
xchg
loopne
pop
mov
push
ljmp
clc
sub
xlat
lret
les
jnp
fadd
mov
jge
push
xchg
fimull
dec
dec
push
and
jl
out
sbb
iret
pop
push
sbb
inc
insb
lds
push
sbb
sub
pop
mov
ss
sub
stos
mov
js
je
sbb
xor
cmp
lds
adc
test
bound
cmp
mov
xchg
push
pop
sub
sub
push
jge
inc
cmp
add
sarl
vmwrite
stc
pop
mov
push
xlat
icebp
inc
or
mov
mov
xchg
cmp
adc
xlat
sbb
sbb
stos
or
jmp
xchg
lea
pop
dec
lahf
sub
fiadds
test
push
pop
cmpl
or
dec
adc
nop
lds
cli
jb
pop
mov
pop
xor
test
decl
sbb
lret
xchg
jns
xchg
je
jg
loope
into
fwait
pop
xlat
jae
pop
rcr
jecxz
mov
jmp
pushf
mov
jae
xchg
movsl
xor
cmp
push
ljmp
stos
jb
push
or
add
mov
sub
scas
test
enter
mov
sub
rorb
mov
sbb
sub
test
enter
jae
aam
mov
sahf
push
scas
adc
xchg
scas
dec
xor
cmp
ljmp
pusha
daa
icebp
scas
loopne
jecxz
int
lea
mov
gs
lock
cmpsb
fcoml
les
sti
or
test
loop
pusha
mov
adc
aas
sub
scas
add
adc
fisttpll
ret
shlb
xor
xchg
push
add
xor
xchg
xor
sub
sub
fwait
cmp
test
sub
fadds
add
adc
lods
aad
xor
cltd
inc
xlat
hlt
loope
push
mov
xchg
test
dec
mov
inc
mov
stc
lods
xchg
push
pop
test
jl
subb
jnp
jg
push
and
pushf
jl
cmp
jae
int3
bound
lds
addr16
inc
test
dec
test
cmp
comiss
int
pusha
cs
pop
mov
orl
dec
fs
rolb
js
add
lret
push
sbb
loopne
and
iret
insl
pusha
xchg
fs
push
mov
sbb
subb
sbb
sub
xchg
inc
inc
daa
xchg
bound
std
aas
fstpt
mov
dec
adc
push
add
and
adc
in
cld
dec
cld
push
jl
xchg
aad
and
dec
int3
outsl
inc
adc
scas
sub
xor
xor
xchg
pop
fadd
rcrb
rorb
mov
lods
test
inc
mov
repz
insl
stc
test
dec
pop
mov
inc
dec
jecxz
dec
sub
push
lods
and
pusha
das
cmpsl
xchg
jp
or
mov
fsts
insl
test
fdivrp
dec
or
add
pop
sarl
shlb
inc
cwtl
push
cmp
push
js
outsl
push
jl
in
jb
inc
in
fisubs
jl
or
div
popa
test
push
cs
iret
adc
cltd
add
decb
jo
dec
mov
inc
mov
popa
aad
arpl
jge
add
push
dec
hlt
push
push
hlt
lock
inc
shrl
mov
mull
or
nop
inc
cmpsl
mov
pop
sub
or
popf
lret
mov
adc
dec
dec
pop
aad
int3
jbe
mov
push
cmpb
or
jno
shll
or
jne
adc
scas
insl
mov
out
psraw
pop
or
arpl
je
daa
push
out
stos
out
fbstp
scas
mov
jp
clc
fistpl
aad
insl
mov
inc
inc
mov
test
bound
adc
ja
push
adc
and
js
outsl
jno
es
sub
lcall
enter
icebp
jmp
xchg
nop
xchg
sbb
xor
clc
pop
mov
std
jae
and
mov
loop
les
dec
mov
xchg
add
loope
mov
je
mov
xchg
dec
test
sub
in
dec
dec
sbb
mov
jle
repz
stos
scas
cmpl
push
dec
xchg
or
inc
inc
mov
loope
shrl
imul
jg
inc
cmp
push
cmp
mov
cltd
pop
or
sbb
arpl
ljmp
xor
jo
aas
scas
xorl
fists
jl,pt
add
movsb
mov
mov
and
bnd
mov
fnstsw
cld
pop
sbb
movsb
stos
pop
sbb
pop
mov
lock
mov
dec
mov
jl
je
lock
in
ljmp
or
js
fistl
or
jl
mov
push
push
adc
xchg
pushf
loopne
adc
push
inc
int3
dec
sahf
dec
int
push
mov
pop
cmp
pop
mov
jae
adcl
pop
and
sub
push
cmpsb
in
xlat
fimuls
mov
jl
inc
adc
pop
loopne
jge
shr
add
dec
imul
ror
pop
jbe
ja
pushf
aam
sub
fwait
or
and
mov
push
and
mov
jmp
mov
cs
push
rorb
or
rcrl
clc
aam
lret
outsl
add
lahf
xlat
jg
loopne
or
inc
aaa
add
out
das
add
cltd
add
int3
lds
pop
and
aad
fisttps
pop
inc
in
test
push
push
call
ljmp
pushfw
nop
sbbl
xchg
inc
arpl
test
rclb
lds
mov
mov
jg
ja
mul
in
and
and
jno
pop
jp
mov
pop
clc
pop
enter
shl
fcmove
mov
in
dec
and
mov
lds
xlat
out
xchg
addl
cmp
mov
jg
pop
pop
push
dec
jno
ret
dec
icebp
xchg
mov
sub
shl
outsl
push
repnz
in
in
xorl
repnz
dec
pop
xchg
jns
mov
mov
lods
adc
mov
sub
sbb
mov
sub
in
hlt
lahf
jo
push
jge
jae
in
scas
mov
and
push
cmpsl
cld
mov
pop
fs
repz
pushf
dec
adc
xchg
out
add
sub
mov
arpl
sbb
dec
data16
data16
lds
add
ds
jge
aad
mov
or
lret
leave
sub
add
test
inc
icebp
or
mov
or
pop
dec
jle
and
push
fcmovbe
enter
xor
cmc
adc
out
lods
call
and
inc
cmp
pop
inc
push
arpl
push
xchg
insb
push
mov
popa
dec
loope
shrb
loopne
aam
sbb
mov
push
xchg
lods
pop
push
cmpsl
inc
xchg
rolb
push
pushf
pop
lret
mov
sbb
push
inc
add
cmp
and
loope
clc
xchg
push
outsb
movsl
inc
dec
dec
inc
loopne
in
aad
adc
lods
cli
ss
push
ds
sahf
js
mov
adc
jl
stc
sub
test
enter
cmp
pop
inc
lods
add
stos
ror
mov
int3
cmp
daa
bnd
mov
fildll
sub
out
and
shrl
xchg
cmpsb
in
jg
and
insb
xchg
je
scas
jmp
ret
xlat
inc
ljmpw
mov
jg
xchg
mov
mov
inc
mov
incb
dec
movsl
jecxz
les
jbe
and
mov
out
add
add
sub
pushf
insl
lock
pop
push
mov
in
out
lahf
mov
adc
xchg
mov
cmp
lods
push
subb
xor
or
sbb
ret
pop
inc
cmp
pop
xchg
gs
sbb
and
push
popf
popf
in
cmp
int3
or
jp
dec
push
add
cmp
mov
movsb
xor
out
xchg
and
insb
xchg
pop
das
adc
sbb
stc
inc
jo
test
jns
jge
outsl
inc
popa
fnstcw
mov
es
mov
int
test
xlat
lods
xacquire
sub
and
jbe
jecxz
cmpsl
dec
or
cmp
decl
dec
jns
and
jo
pop
jmp
inc
cmp
mov
jne
or
rcrl
dec
mov
pop
mov
cmp
and
outsl
out
leave
pop
bound
loope
sbb
adc
fdiv
enter
push
lret
sti
orb
fbstp
pop
pop
cmp
in
mov
cmp
cmc
dec
push
daa
pop
or
and
lods
cs
idivb
icebp
lahf
lea
mov
xor
xchg
add
adc
call
fisubl
fbstp
in
loope
lea
mov
mov
int3
add
push
test
outsb
lahf
test
in
test
pushf
inc
out
jo
jecxz
pop
pop
dec
pusha
arpl
lret
hlt
aaa
adc
and
aas
jno
mov
xchg
dec
mov
hlt
sahf
jl
pop
das
popa
fnstcw
inc
pop
pusha
scas
xor
in
lock
inc
sahf
fmuls
shl
xor
push
clc
repz
roll
nop
dec
bound
pop
dec
or
dec
push
cmp
inc
xchg
jae
sti
pop
adcl
mov
fidivl
mov
imul
mov
aam
cmpsl
leave
cli
add
mov
stos
pop
sub
inc
xchg
repz
xchg
mov
xor
jo
jmp
loop
dec
daa
pop
lds
xor
fldt
fdivl
jb
xor
jnp,pn
push
sbb
movsb
pop
sbbl
lods
icebp
mov
aas
jmp
popa
nop
cmp
sub
pop
out
es
cmp
add
ja
mov
fldl
push
out
xor
and
add
insl
subb
adc
les
push
sub
ds
fidivs
int3
pop
or
ror
sub
lods
add
pop
insl
mov
fdivs
lea
mov
sarl
imul
fisttpll
adc
stc
rcrb
clc
cmp
sar
add
fsubrl
xlat
lods
push
pop
in
aas
out
mov
dec
jg
popf
daa
roll
adc
enter
pushl
adc
xchg
subl
xlat
adc
hlt
mov
imul
enter
sbb
fsubs
adc
das
shr
push
dec
sbb
loope
push
out
mov
xchg
jge
jge
jg
fwait
mov
mov
data16
cwtl
repz
pusha
push
or
jecxz
pop
adc
pusha
mov
in
jb
or
bnd
cli
mov
push
jge
mov
mov
in
inc
jl
add
ret
rcll
sub
sbb
divb
mov
rolb
xchg
lock
mov
out
stc
xchg
out
fistpll
stos
jecxz
lods
cli
pop
sbb
cwtl
outsl
mov
jl
xor
insl
cmp
mov
aam
fldt
lds
sti
faddl
jne
imul
mov
mov
in
ficompl
or
mov
daa
push
mov
adc
cmpl
xor
addr16
sub
fstl
fs
mov
int3
clc
mov
out
lahf
fnstsw
add
cltd
push
stc
xchg
hlt
lahf
pop
sbb
mov
hlt
mov
adc
hlt
mov
inc
sub
xchg
test
pop
inc
inc
mov
std
and
daa
iret
sbb
fiadds
out
adc
movsl
pop
dec
pop
test
ret
addr16
push
movsl
xchg
mov
pop
sub
ret
lock
sbb
rcrl
data16
mov
mov
ljmp
rol
sub
push
cld
sub
mov
shll
jmp
xorb
xchg
loopne
mov
and
fsubs
popf
sub
mov
add
jl
ss
popa
mov
add
in
inc
push
fdivr
fs
daa
mov
movsl
jge
fidivrl
daa
int
add
mov
xchg
in
jo
insl
daa
dec
out
mov
leave
sbb
mov
das
dec
push
roll
push
pop
shrb
icebp
xchg
push
lret
imul
arpl
roll
lahf
test
rolb
mov
out
fcompl
mov
mov
lods
scas
imul
sbb
mov
ss
dec
mov
lret
jg
jo
sub
mov
test
bound
jmp
into
in
mov
movl
out
cmc
inc
xlat
xchg
inc
xor
add
pop
jbe
inc
add
mov
ficompl
mov
not
cmp
icebp
cwtl
fmulp
out
es
xor
dec
add
sar
sbbb
xchg
lcall
in
fldl
bound
mov
inc
leave
or
dec
push
jp
dec
sub
out
cmpsl
mov
fcmovne
in
inc
xchg
repnz
pop
dec
push
xor
mov
bnd
out
push
push
or
mov
leave
pushf
jmp
push
out
cmpsl
test
adc
gs
ljmp
dec
test
pop
cmp
ljmp
pusha
out
lea
shrb
mov
cmp
aad
inc
cmp
lahf
mov
imul
popa
mov
push
lahf
or
ss
scas
mov
and
call
or
aad
cli
jge
pop
imul
loop
rcll
std
xchg
mov
es
dec
fimuls
popl
scas
jle
fidivrs
ret
jmp
jbe
jno
rcl
and
scas
repz
sahf
outsb
scas
loope
cli
cmp
mov
adcb
mov
out
test
push
jo
xor
mov
push
sub
push
mov
push
pop
gs
mov
lods
lds
or
bound
out
xchg
in
cmp
dec
outsb
aam
push
scas
xchg
dec
out
out
xchg
ret
addb
pop
in
jmp
push
orl
add
ret
jmp
cmp
imul
xor
mov
or
mov
add
dec
stos
cmp
sahf
pop
decb
mov
lahf
shlb
or
fsubrp
sub
jmp
pop
and
je
rclb
and
pop
movsb
addr16
cmp
sub
rcl
loope
or
xor
add
shlb
xorb
mov
sbb
adc
add
packsswb
sti
mov
imul
pop
cmp
jge
and
sbb
aaa
inc
mov
or
enter
faddl
sbb
dec
dec
das
test
imul
push
enter
imul
push
adcb
dec
xor
push
cmp
push
loop
xchg
fimuls
dec
cmc
push
mov
mov
les
out
popa
lcall
and
das
mov
mov
inc
addr16
adcb
sub
sar
inc
jbe
fucomp
mov
xchg
es
ljmp
enter
lock
push
jb
xor
mov
lret
hlt
je
inc
push
push
inc
adc
sbb
jecxz
mov
lahf
test
jle
push
cmp
divl
mov
add
inc
push
xchg
adc
fldl
sbbb
outsl
in
sbb
loop
in
mov
mov
scas
iret
scas
add
mov
call
adcl
add
mov
js
lods
dec
es
xor
sbb
cwtl
call
js
enter
jp
or
out
mov
aad
mov
push
mov
in
pop
mov
addr16
iret
out
stos
shrl
add
test
dec
mov
inc
pop
add
sbb
jle
ss
add
adc
mov
pop
xchg
mov
add
adc
pusha
jle
sbb
and
mov
xchg
mov
xchg
jmp
and
dec
pushl
xchg
outsb
or
lcall
cld
scas
stos
insl
sbb
add
add
mov
arpl
es
addr16
sti
sbb
xchg
insl
xor
jmp
adc
jl
jno
jge
jne
mov
and
mov
inc
test
sbb
and
inc
lret
push
push
push
add
aad
mov
cli
add
pop
dec
enter
add
mov
mov
inc
fsubrp
dec
mov
mov
xchg
in
jne
add
inc
xor
inc
adc
or
push
xchg
cmp
test
mov
sub
or
adc
or
jle,pn
and
pop
cli
pop
dec
je
sbb
ficoml
ficompl
mov
or
jne
std
dec
jns
idivl
pop
enter
mov
push
in
pushf
insb
es
fstpl
bound
sbb
push
pop
inc
cwtl
mov
sbb
shlb
mov
mov
addr16
dec
cmp
xlat
sub
or
inc
dec
xor
sarl
sbb
jne
xor
fisubrl
pushl
ja
sbb
dec
and
pop
mov
cs
or
sub
inc
std
rol
out
sbb
fdivs
mov
fwait
lahf
enter
sbb
iret
psubq
cmp
xchg
mov
in
cmpsb
jg
iret
inc
cmp
add
cld
lcall
lret
push
loope
xor
in
jg
hlt
arpl
adc
lods
push
cld
adc
adc
mov
cmp
lcall
roll
or
repnz
sbb
adc
push
out
int
pop
fidivl
aam
fdivl
cmp
xchg
in
jno
push
xchg
push
pop
aam
cwtl
or
jl
into
pop
in
pop
out
jge
rcr
mov
adc
sbb
pop
rorl
aas
in
mov
stc
add
test
lds
stc
es
jb
jo
cmpsl
call
lds
xor
stc
test
mov
enter
sub
xlat
aam
out
lods
push
inc
into
incl
daa
loope
xor
mov
mov
pop
ljmp
push
test
xor
mov
push
mov
aas
das
repz
loope
popa
push
jbe
pop
push
mov
enter
cmpsl
sbbb
testb
adc
aaa
add
rol
test
mov
lret
cmp
lods
rol
inc
rolb
dec
and
mov
cli
xor
add
ret
jno
jle
sbb
inc
xchg
pop
mov
mov
pop
pop
ret
add
jne
scas
mov
add
call
sarl
jle
inc
xor
fdivrp
sbb
fs
cmp
add
lcall
jb
mov
outsl
mov
sbb
sub
jle
mov
mov
lcall
shl
cmp
mov
push
test
mov
mov
push
call
inc
daa
mov
sub
bound
jg
imul
test
scas
lahf
cmp
cli
mov
ss
inc
mov
push
lret
jo
mov
add
and
addr16
lods
sub
pop
cltd
add
in
stos
sub
and
fidivrs
xor
mov
mov
popf
and
js
in
int
cli
lret
outsl
jno
rolb
sbb
out
lret
ljmp
and
and
cmpsb
repnz
or
out
cmpl
fs
in
jne
neg
aam
mov
inc
mov
and
mov
push
adc
cmpb
xor
and
insl
adc
into
shll
in
ret
ds
sar
out
add
jmp
cmp
shrl
xchg
cwtl
pop
aaa
popf
fisubs
jns
loop
stos
adc
mov
fisubl
stc
sbb
iret
ljmp
sti
fnsave
push
in
jae
jb
in
pop
push
out
lret
add
loop
addr16
mov
loop
popf
push
inc
lods
sub
push
mov
int
push
imul
inc
adc
mov
sbb
loope
jae
nop
fdivl
push
sahf
out
mov
mov
ja
cmp
jg
les
int3
adc
mov
ficoml
xchg
mov
mov
xchg
popf
or
pop
ja
bound
outsl
pop
insb
addr16
sub
in
enter
dec
mov
and
cmpsl
les
mov
push
sub
jae
mov
scas
dec
in
mov
movsl
repnz
aad
cmpsb
data16
mov
scas
pcmpeqd
js
xchg
mov
sub
addr16
jb
mov
jo
pop
xchg
daa
pop
jl
dec
xchg
int3
inc
clc
adc
cmp
push
inc
push
notb
sub
into
call
testl
adc
pop
les
into
jns
xchg
jo
sti
inc
mov
mov
sub
pop
popa
lds
add
mov
push
pop
dec
pusha
scas
push
es
sub
fnsave
xchg
push
out
mov
scas
pusha
xchg
lods
jae
movsl
jp
jp
es
shll
ljmp
dec
cmp
jg
jnp
bswap
int
mov
cld
scas
dec
fldt
pusha
aam
cli
cmpsb
rcrb
jnp
fists
mov
bound
xchg
xlat
pop
ret
into
jne
mov
std
jns
data16
inc
or
imul
decb
scas
andb
push
dec
xchg
jae
ret
mov
add
clc
dec
lods
shlb
js
cmpsb
or
dec
out
popa
bound
xchg
pop
cmp
aaa
mov
push
daa
pusha
mov
and
push
cwtl
rcl
in
mov
pop
cmpsl
inc
mov
movsl
jecxz
popf
xor
stc
jb
sbb
fs
push
leave
hlt
mov
cltd
imul
lea
ljmp
mov
xchg
lock
rcr
int
jg
cmp
xchg
xorl
andl
in
jae
mov
lods
sub
popf
test
add
pop
insb
mov
cmp
jg
stos
movsl
jns
mov
scas
loopne
fildll
jmp
scas
mov
popf
lods
adc
add
mov
and
dec
testb
cmp
mov
in
or
test
dec
std
push
push
push
push
sbb
pop
lock
popf
stc
mov
cmpsl
das
scas
bound
jne
mov
xchg
inc
dec
pop
jl
cltd
shr
js
lods
fisttps
lcall
data16
inc
mov
mov
add
mov
jmp
out
push
dec
repz
loope
and
or
les
mov
fs
in
inc
mov
pop
push
inc
mov
jle
addr16
in
jecxz
mov
dec
sbb
lods
in
cmp
jl
inc
mov
ja
cmp
and
in
adc
or
add
lret
inc
mov
push
mov
jmp
sbb
mov
arpl
push
scas
xchg
xchg
mov
dec
and
inc
xchg
mov
sbb
sub
stos
mov
sub
mov
mov
sub
xor
out
dec
clc
in
mov
dec
add
int3
in
pop
sbb
out
jbe
sub
aad
or
pop
mov
ret
sti
test
sub
jl
pushf
cmc
dec
push
je
xor
mov
aaa
jge
pop
mov
pop
push
jge
test
jb
scas
mov
scas
and
push
jle
jns
pop
cmc
sahf
sub
push
sbb
insl
ret
sub
ss
sub
mov
into
sti
sbb
ret
aaa
jmp
or
negl
out
enter
arpl
ror
sub
push
fs
dec
outsb
mov
pop
call
push
jle
add
pop
mov
lds
mov
push
and
pusha
push
dec
inc
je
xchg
sti
insl
xor
lcall
dec
mov
lock
fisttpl
mulb
movsb
pop
xchg
xchg
adc
addb
pop
int
or
mov
arpl
test
bound
iret
push
lahf
mov
mov
jg
jnp
or
lret
add
mov
push
rorl
leave
flds
push
adc
cmpsb
jecxz
int
xchg
sub
in
loope
adc
dec
push
cmp
inc
stc
pusha
mov
popa
adc
adc
push
test
push
pop
shrb
je
push
int3
mov
je
push
stos
jbe
gs
pop
mov
xor
sub
test
ror
xchg
cmp
or
inc
sbb
loop
clc
jp
scas
pop
xor
add
mov
clc
sti
decb
pop
test
pop
xor
shll
xchg
mov
jmp
out
xchg
mov
pop
ds
gs
sbb
dec
into
rcrl
add
push
aas
xor
lds
xor
hlt
rorb
shr
ret
mov
xchg
sub
fs
fdiv
lods
enter
nop
jne
loopne
adc
push
shlb
ja
fsubrs
or
loop
insl
push
in
dec
cld
mov
repnz
scas
jnp
cld
push
mov
xor
js
lock
xchg
pushf
fwait
mov
loop
xchg
add
mov
xchg
arpl
pop
jno
sub
push
pop
pop
imul
jmp
push
arpl
cld
cmp
enter
inc
pop
and
cmc
jp
xchg
repnz
add
fdivl
adc
arpl
jnp
fldl
aaa
int3
out
mov
andb
sub
jmp
push
test
fistl
sbb
xor
test
aas
sbb
adc
test
add
cmp
and
jae
and
dec
sbb
inc
repz
pop
mov
push
and
popf
and
inc
jne
and
xor
push
sbb
std
imul
pop
mov
jb
push
cmpsl
shrb
stos
or
lret
mov
cmpsl
ss
scas
test
or
xor
test
pop
dec
cltd
mov
in
ja
shl
inc
lods
push
mov
aam
mov
bound
data16
add
mov
add
jno
test
mov
xchg
jle,pt
repz
ds
and
arpl
dec
outsl
mov
movsl
mov
outsl
pop
dec
aaa
inc
mov
dec
or
xor
adc
cmp
lods
dec
dec
sub
testl
ret
ret
mov
lret
into
jecxz
xchg
and
es
pop
fadds
mov
dec
xchg
cmpl
mov
cwtl
out
pop
xor
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
xor
push
push
jmp
or
mov
pusha
decl
cmpsb
mul
subb
pusha
lds
or
dec
jl
lds
or
dec
jl
lds
or
inc
arpl
lret
push
pop
test
dec
loop
in
sub
lods
daa
enter
xchg
xchg
jecxz
insl
pop
add
les
pop
or
xchg
jno
iret
jo
decl
cmpsb
mul
adcb
out
sti
cli
nop
and
or
mov
frstor
cli
nop
ret
into
mov
jnp
dec
cli
cmc
sbb
mov
outsl
inc
xchg
xchg
and
pop
pop
jecxz
mov
sub
mov
mov
push
xor
shrl
nop
pop
push
adc
rcl
pusha
cmc
jb
sbb
jno
sbb
cltd
pop
fwait
pop
jp
pop
or
cli
nop
and
cmpsb
mul
subb
jl
lds
or
dec
jl
lds
or
sub
sub
or
dec
jle
into
push
loop
or
subb
mov
xchg
sub
pusha
rclb
cmpsb
div
subb
jle
lds
decb
cmpsb
mul
subb
call
jecxz
sub
jl
cmp
std
or
ja
cmpb
jl
lds
sbb
dec
jl
lds
or
dec
jl
rcll
movsl
mul
sub
jl
cli
push
call
jecxz
sub
pusha
lds
or
push
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
jge
mov
ror
push
call
test
lds
jecxz
sub
pusha
in
call
xchg
loope
dec
jl
movsl
push
call
jecxz
sub
or
push
call
jecxz
sub
pusha
lds
jmp
inc
jl,pn
lds
decl
xchg
jecxz
sub
pusha
jns
call
jecxz
sub
pusha
lds
or
jecxz
sub
pusha
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
dec
jl
lds
or
inc
jl
lds
or
dec
jb
outsl
aad
mov
fsts
add
and
and
fisubl
mov
ljmp
cld
ja
je
dec
movsb
mov
xor
mov
pop
mov
mov
insb
pushl
in
or
into
insb
jmp
and
iret
lods
cmp
mov
movsb
dec
lock
sbb
jne
out
sti
xchg
dec
out
testb
fs
add
aaa
leave
lcall
outsl
les
mov
push
push
cmp
or
ss
push
pop
sub
adc
dec
aad
and
sahf
push
push
lds
pop
mov
jae
jg
push
rcl
aas
mov
mov
shl
xchg
sti
mov
cmpsb
dec
add
pop
cld
add
mov
mov
jmp
sbb
int
sbb
js
jae
mov
xor
and
xchg
push
mov
or
repz
mov
lock
aaa
and
inc
call
xor
in
hlt
fnstsw
xorl
add
jg
dec
push
push
pop
pop
push
push
in
or
xchg
in
mov
imul
mov
mov
pop
add
movsl
inc
add
mov
sbb
dec
jno
leave
mov
mov
rclb
sbb
pop
loope
aaa
cli
cmpsl
add
add
mov
sub
pop
sbb
dec
loopne
loop
lods
sub
shrb
insl
les
jb
fimuls
xchg
insl
out
orl
popf
and
fmull
cltd
ss
aas
mov
sbb
loop
mov
cmp
and
and
out
loope
ljmp
jae
dec
jb
push
xchg
adc
and
push
idivl
push
adc
das
nop
pop
filds
cmp
xchg
push
les
add
push
push
mov
dec
mov
push
inc
mov
cmpsl
hlt
lods
in
mov
leave
aad
push
xchg
xor
jle
or
jne
mov
or
jbe
push
bound
xor
mov
fstpt
cltd
mov
jg
roll
sub
adc
mov
inc
and
cmp
sub
pop
inc
data16
popa
mov
pop
insb
loop
iret
ret
inc
out
mov
cmpsl
mov
ss
notl
std
shlb
pop
mov
into
push
mov
lods
roll
cmp
fistpll
xchg
jmp
outsl
das
adc
jnp
shlb
cmp
pop
xchg
sub
inc
push
mov
cltd
or
xabort
pusha
movsb
adc
lods
push
push
pop
dec
sahf
sbb
leave
in
cmpl
xchg
mov
outsl
inc
sbb
mov
popf
lcall
inc
das
adc
xchg
sub
dec
jnp
push
pop
push
nop
push
cli
fisubl
adc
lret
push
loopne
clc
call
adc
jns
cmpsb
fldt
sbb
pop
mov
shlb
dec
inc
jecxz
pop
scas
phaddsw
mov
sbb
and
mov
and
loop
pop
add
sarl
bound
loop
jecxz
push
mov
cs
adc
arpl
or
outsl
xchg
lret
cmpl
sbb
sbb
jl
jmp
loopne
aad
sbb
and
pop
mov
pop
or
xor
mov
add
sub
cld
ret
or
jbe,pn
xchg
mov
add
shl
loop
and
dec
hlt
testb
or
pushf
mov
ljmp
mov
loop
movsl
bswap
inc
cmpsb
into
mov
inc
xchg
mov
push
mov
inc
push
cmp
mov
fildll
cmp
daa
push
jl
ss
int
int
jg
aas
outsl
js
imul
in
jno
ja
xor
xchg
test
or
icebp
loope
decl
outsb
inc
mov
iret
icebp
push
iret
fisttpll
scas
xchg
push
xchg
je
flds
or
ja
jo
inc
sub
pop
in
mov
mov
jno
shlb
negb
mov
jg
das
in
mov
je
dec
shlb
repz
push
ja
add
out
outsl
ret
cmp
lods
push
adc
xchg
jp
sti
sub
dec
cwtl
mov
xchg
dec
xchg
mov
fldenv
adc
cmc
ja
mov
lret
sarb
cmp
push
inc
dec
or
inc
mov
xchg
cmp
rdpmc
aad
mov
cmpb
or
mov
enter
imul
sbb
insb
lret
in
hlt
add
sbb
sbb
xchg
dec
xor
dec
out
or
outsb
stos
cltd
lds
xchg
lds
add
leave
bound
adc
or
xor
shrl
jo
test
sbb
cmp
fisubl
std
test
push
sbb
les
bound
jle
cltd
jle
imul
in
cwtl
pushf
lods
out
xchg
push
or
jge
push
out
adc
mov
rcrb
popf
scas
lret
xchg
sub
mov
hlt
mov
xchg
rcl
fmuls
mov
jno
pop
mov
or
call
pushf
dec
cmpb
outsb
stos
mov
xchg
sub
movl
adc
xor
push
repz
push
movsl
in
dec
in
bound
movhps
out
mov
cmp
pop
xlat
orl
or
cltd
mov
jge
adc
pop
jge
insl
test
std
leave
gs
jo
jno
jp
adc
iret
inc
dec
dec
inc
push
call
fs
mov
stos
lods
xchg
aad
adcl
jb
sub
mov
push
dec
out
imul
jp
cld
pop
push
pop
in
scas
mov
cmc
jno
mov
jne
inc
idiv
and
push
popf
add
lds
jne
push
lret
shlb
cmp
mov
aaa
jge
sub
jno
popf
sarb
mov
inc
and
arpl
addl
daa
sub
sub
mov
popa
push
pop
imul
mov
lret
xor
into
mov
xchg
xor
fwait
mov
out
fs
mov
push
push
enter
dec
sbb
cld
cmp
daa
jnp
ljmp
mov
loope
sbb
daa
les
aaa
push
sahf
mov
call
xchg
mov
mov
xor
jo
dec
cltd
mov
test
adc
and
pop
mov
jecxz
out
cmp
movsb
add
nop
sub
mov
addr16
xor
mov
lcall
pop
or
lock
out
jo
fsubrl
daa
and
es
fwait
jbe
push
mov
ljmp
push
adc
pop
std
or
dec
mov
daa
push
sbb
push
test
popf
sbb
lods
js
sub
cmpl
les
mov
rorl
loope
stos
cld
inc
in
push
adc
cmpsl
adc
addr16
push
popf
mov
push
adc
sub
out
adcb
repz
inc
pop
call
add
fcmovne
sbb
leave
mov
lds
push
xchg
xor
inc
and
lret
xor
ret
movsb
in
pop
jno
int3
push
inc
pusha
in
cmp
clc
and
xchg
dec
shlb
mov
push
pusha
push
or
fs
repz
clc
sbb
xchg
cmp
sub
in
clc
mov
aam
dec
jae
enter
aas
inc
int3
inc
cmp
cmp
lret
sub
dec
add
cmpsb
push
pop
pop
dec
gs
in
nop
das
lea
pop
inc
clc
addr16
sub
dec
fsubs
pop
xlat
out
pushf
and
ja
es
sub
enter
test
in
mov
push
fcmovnu
mov
xchg
mov
inc
mov
jge
sub
push
out
repz
aas
add
jmp
das
nop
pushf
jb
int
ret
pop
loope
adc
stos
daa
pop
add
xor
outsb
push
mov
sub
in
shlb
pop
jbe
inc
aas
jns
inc
pop
jmp
es
adc
xchg
idivb
inc
addl
int3
sbb
xor
sbb
call
mov
push
mov
pop
fwait
dec
jge
imull
aas
sub
rorl
rcll
scas
and
and
fwait
dec
xchg
dec
loop
cmp
inc
outsl
js
lods
call
mov
cs
adc
xchg
mov
xchg
nop
fldenv
push
lcall
xor
adc
fucomip
mov
popf
sub
rorl
push
push
push
xchg
push
or
dec
xchg
xchg
shrb
std
mov
repz
jecxz
xorl
shlb
pushf
pop
adc
or
dec
out
in
ja
pushf
mov
sti
and
pop
fcom
push
cmpsl
inc
jecxz
scas
mov
jae
les
or
dec
xchg
arpl
mov
mov
ds
and
sbb
stc
cld
nop
pusha
pop
adcb
adc
popa
dec
movb
sbb
or
add
sub
popf
movsl
inc
popf
push
lods
push
xlat
push
xorl
mov
add
jmp
sbb
out
ljmp
add
std
mov
mov
xchg
in
add
pop
out
xor
lcall
push
xchg
movl
scas
rcl
out
sahf
cmpsl
sbb
bound
adc
mov
out
lcall
fs
pop
lock
shld
and
in
out
mov
inc
test
add
hlt
rolb
or
aam
dec
dec
dec
stos
mov
sahf
adc
out
jnp
lcall
mov
leave
xor
fisubrs
cs
mull
flds
daa
add
stc
lock
jae
sub
aaa
xor
je
in
mov
pop
lods
fcomps
divb
push
cmp
or
sub
pop
cmp
mov
mov
js
push
or
insb
hlt
and
fsubs
sbb
sub
mov
int
andl
add
add
out
mov
xchg
mov
mov
rcl
sub
ss
out
bound
xchg
xor
jo
xchg
add
xor
jns
xchg
and
mov
test
insl
fnstcw
push
mov
mov
cltd
pop
cmp
jnp
jae
mov
aam
stos
xchg
mov
jne
mov
sbb
sub
push
lahf
mov
inc
je
sub
push
mov
test
pusha
fsubrs
jne
or
mov
je
out
data16
scas
jp
xor
fsubrs
xchg
hlt
push
movsl
mov
adc
sbb
jle
inc
sbb
push
mov
and
aaa
stos
xor
xor
pop
out
ror
aaa
int3
push
add
loopne
mov
xor
pop
inc
cmc
inc
and
mov
loopne
cmp
icebp
and
and
iret
mov
sub
inc
xchg
test
popa
fcmovb
xor
mov
jle
fimuls
call
iret
mov
add
push
stos
lds
aas
jecxz
inc
cmpsl
pop
mov
loopne
pop
arpl
jle
pop
jno
mov
mov
push
push
sbb
rcrl
or
les
dec
jno
mov
xor
lock
dec
pop
das
sub
test
loopne
or
sbb
test
or
xchg
fdivrs
lcall
push
adc
jmp
mov
push
inc
cmp
call
sub
sbbl
add
stos
fsubs
out
xchg
lahf
pop
pop
pop
xchg
mov
dec
xor
sbb
sub
mulb
sub
mov
lcall
loop
inc
add
xchg
in
adc
pop
in
push
pop
loop
push
xchg
fnstsw
insb
xor
inc
cmp
nop
jnp
push
mov
fucompp
rol
shrl
mov
cmp
lcall
dec
shl
or
ss
add
cmp
cwtl
nop/reserved
pxor
mov
out
mov
inc
inc
pop
xchg
cmpsb
mov
mov
add
mov
xor
xor
loope
std
inc
shlb
xchg
inc
xor
mov
movsb
dec
lret
pop
cmp
inc
pop
fldenv
outsl
sub
xor
add
daa
jo
push
scas
mov
adc
jbe
iret
cmp
xchg
mov
outsl
jne
push
sbb
jbe
rcl
or
movsl
push
mov
rorb
lret
add
pusha
neg
fwait
daa
aas
adc
cmc
push
adc
dec
call
inc
pop
sarb
xor
mov
add
imul
inc
sub
cmpsl
mov
sub
sbb
cmp
or
push
cmc
adc
gs
mov
test
rcrl
xchg
gs
mov
aaa
out
sbb
and
jns
rclb
ret
fcos
or
jae
sbb
loopne
or
stos
jns
add
scas
push
ja
mov
adc
pop
push
mov
xchg
sbb
dec
arpl
dec
sub
stos
arpl
xor
popf
dec
pusha
lods
leave
xor
scas
xchg
or
push
inc
jb
lea
addr16
mov
icebp
push
insb
ret
int
pop
mov
ret
lahf
stc
xor
and
push
and
dec
and
cwtl
sub
cmp
in
pop
mov
mov
mov
xchg
arpl
xchg
inc
repz
mov
inc
fildl
std
sbb
out
adc
push
inc
add
cmp
and
jns
add
lea
or
sahf
in
and
xor
in
pop
insl
sbb
loopne
out
xor
pop
cltd
mov
mov
out
ljmp
out
fcomps
pusha
sbb
cmpsb
sub
int3
pop
ret
fldcw
push
bound
mov
add
pop
jbe
pop
lahf
cmp
adc
mov
popf
es
cmc
jl
add
lods
sbb
aas
ficoml
xchg
xor
cwtl
aas
push
ja
xor
mov
sub
into
loope
add
xor
fwait
test
sahf
lcall
ja
roll
popf
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
