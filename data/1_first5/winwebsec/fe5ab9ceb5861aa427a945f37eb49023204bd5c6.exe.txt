or
fisttpll
xchg
test
fcoms
and
xchg
mov
lret
in
imul
mov
jp
cmpsl
mov
pop
inc
pop
test
inc
adc
ret
call
push
test
dec
cmp
dec
xor
dec
daa
lods
pop
aas
pop
andl
rcll
sahf
xor
movsl
in
sbb
inc
ret
int
scas
pop
or
inc
jmp
in
pop
xchg
out
xor
repnz
ljmp
in
repnz
addl
xchg
into
pop
jbe
sbb
inc
mov
inc
xlat
jbe
add
ss
sbb
movsb
sahf
pushf
xor
negl
repz
dec
aam
imul
sti
xor
in
test
pushf
lahf
clc
movsb
movsl
and
ds
jmp
int
or
sbb
sub
pop
sub
lret
aam
cs
xchg
std
pushf
lahf
out
stos
lods
repz
icebp
mov
jb
adc
add
in
push
sbb
scas
gs
push
enter
fbld
pop
subl
aad
push
cmp
divl
xor
mov
jg
mov
scas
or
add
int
xor
shrb
aam
xchg
jb
adc
push
js
repz
mov
ret
adc
push
cmp
scas
jns
roll
lods
mov
clc
sbb
dec
sti
shl
outsl
xor
testl
mov
inc
jecxz
sub
out
daa
push
xchg
inc
fs
lfs
push
gs
bound
add
jo
cld
sbb
cmp
xlat
ljmp
notl
ja
stos
xlat
add
mov
neg
and
cli
mov
add
cwtl
sub
ficoms
outsb
cmc
loopne
push
push
adc
dec
push
xor
mov
mov
sbb
scas
in
jb
jmp
mov
mov
push
push
xchg
push
bound
movsl
ja
stos
add
iret
out
jne
jnp
or
jle
mov
pusha
or
leave
xor
xor
xchg
in
fcomps
push
cld
cld
jge
inc
lods
dec
mov
sbb
sahf
dec
ljmp
inc
mov
arpl
pminsw
xor
ja
cld
mov
push
and
ljmp
cmp
sbb
push
mov
idivb
push
movsb
sub
ds
ljmp
gs
enter
or
and
sub
pop
cmp
fucomp
fidivs
sub
movsb
outsb
pop
in
adc
cmp
pop
cmp
mov
das
repz
fld
cs
dec
scas
imul
stc
jp
push
xchg
cmp
push
jns
sbb
ja
lods
les
mov
loopne
xlat
jle
or
outsl
jnp
adc
dec
sbb
mov
cltd
mov
sarb
xor
xor
cmpsl
xchg
inc
daa
std
cltd
jns
add
pop
or
test
pop
push
inc
jno
xchg
lahf
cld
xchg
addr16
sub
dec
mov
pop
movsl
inc
jo
dec
dec
gs
cmpsb
fadd
mov
ffree
add
jecxz
into
hlt
fcompl
add
mov
jno
cmp
leave
nop
retw
pop
mov
outsb
cld
pop
fisubs
into
je
or
adc
mov
xor
lods
adc
pop
push
push
out
cli
loop
xchg
jl
or
dec
pop
in
leave
les
fisttps
jb
cmp
dec
lods
lds
js
loop
jne
mov
jle
into
or
inc
scas
stos
xor
jmp
leave
push
xchg
push
xchg
inc
mov
ljmp
jno
inc
scas
sti
test
and
imul
sbb
je
loop
jg
aaa
loopne
jae
iret
daa
adc
dec
cmp
inc
shl
bound
mov
inc
and
sbb
test
pop
adc
or
pop
sbb
push
mov
add
push
jmp
inc
scas
shrb
adc
push
loopne
rcr
add
jmp
jecxz
xchg
mov
int3
stos
lods
sbb
pop
ja
sub
fwait
daa
addb
cmp
shlb
mov
jp
jb
aaa
jmp
mov
and
aaa
stos
pop
shrl
and
or
adc
sti
jo
icebp
pop
add
notb
fsubrs
sti
imul
push
mov
add
test
pop
jns
jnp
shl
pop
mov
inc
mov
pop
jns
sarb
sahf
inc
dec
fs
arpl
mov
mov
jae
cli
hlt
lock
xchg
sbb
lea
insl
andl
in
dec
mov
push
scas
and
inc
and
xchg
popf
push
movb
fwait
test
dec
fisubrl
dec
cmp
dec
adc
loope
mov
adc
add
mov
mov
adc
sbb
cs
sub
adcb
sub
outsl
push
lock
mov
stc
aam
fildl
mov
jne
movsl
sarb
cmpsl
jo
scas
dec
mov
mov
das
jl
stos
out
jno
daa
outsl
cmpsl
test
mov
dec
sbb
inc
adc
nop
roll
mov
add
cmpsl
imul
inc
into
and
sub
movb
cwtl
or
inc
stc
lahf
mov
pop
addr16
repnz
xchg
pop
mov
test
mov
add
outsl
cmp
jmp
les
cmp
jb
pop
es
stos
bnd
pop
adc
sti
pop
pop
sub
cld
out
cmp
jmp
das
jo
push
xchg
mov
push
icebp
xchg
test
push
outsb
dec
dec
cmp
cld
or
leave
xchg
add
and
add
ljmp
cmpsb
sbb
or
sub
into
push
push
ret
xchg
jp
pop
imul
xchg
mov
mov
sbb
pop
or
push
xorb
int3
and
sbb
mov
or
mov
mov
cmpsl
scas
add
das
stos
pop
inc
pop
shrl
xor
arpl
jae
xchg
xor
out
sbbl
mov
mov
sbb
sbb
fimull
std
cwtl
push
mov
pop
mov
icebp
mov
rep
outsl
outsb
hlt
in
in
fs
dec
addr16
imul
fcomp
sahf
mov
pop
hlt
push
jne
push
enter
sbb
or
pushf
pop
jb
lahf
hlt
mov
mov
dec
and
shl
pop
sub
stc
lock
js
je
jbe
scas
mov
mov
insl
adc
and
in
ret
in
push
or
dec
lret
nop
outsb
out
fnstcw
xor
sbb
dec
aaa
nop
adcb
cmp
cmp
and
popa
jl
rcll
lret
roll
addl
jmp
leave
cld
les
sub
xchg
cs
mov
pushf
push
or
fnstcw
ss
outsl
lods
jae
mov
sbb
xchg
lcall
push
loope
gs
lds
pop
mov
xchg
sub
shlb
andb
push
insb
push
adc
and
sbb
in
sub
dec
repz
negb
sbb
adc
push
fdivrl
adc
mov
mov
jne
xchg
pop
in
push
cltd
xor
jge
aam
rorb
and
mov
pop
fisubrs
repnz
inc
push
or
outsl
xchg
mov
into
rcrl
dec
ljmp
pop
xor
sub
in
push
enter
movb
inc
rcrl
data16
stos
inc
inc
ja
push
addl
mov
xor
mov
scas
clc
push
mov
mov
mov
mov
and
or
test
mov
shlb
jge
dec
cli
sub
js
xor
pop
and
mov
das
jle
test
stc
lds
jmp
or
pop
sbb
bnd
xchg
sti
popa
repnz
xorb
mov
mov
loopne
cmp
push
mov
insl
leave
test
xchg
cmpsb
and
jl
cmpb
mov
ljmp
leave
mov
xchg
or
cmp
mov
cmp
xchg
cmp
test
or
mov
inc
jae
lods
xchg
stos
stc
sbb
into
cmpl
test
call
loopne
xchg
jecxz
add
cmpsl
mov
lock
lea
push
push
inc
stos
sbb
sub
or
and
inc
pushf
fwait
push
cmp
jp
movsl
into
imul
stc
mov
mov
ds
ffree
push
fdivrs
and
jnp
int
xchg
jg
sub
inc
psubusb
cmp
xchg
es
add
push
jl
pop
ja
dec
je
pop
sti
insl
stos
sub
pusha
pushf
jecxz
pop
lcall
xor
sbb
test
adc
mov
or
and
or
daa
xor
mov
adc
iret
jo
test
fcmovne
push
fsubr
sarl
pop
jb
push
ret
out
ss
fbld
popa
cmp
cmp
adc
pop
mov
mov
cld
sti
xchg
cmc
or
pop
dec
iret
push
mov
cwtl
test
mov
test
iret
nop
xor
pusha
push
inc
fnstcw
enter
std
xor
sbb
sub
push
and
lods
push
loopne
cmpsl
inc
xor
adc
xor
push
and
subl
les
aas
add
cmpsl
xor
pusha
xchg
out
jg
stos
icebp
pop
mov
fbstp
test
pop
in
mov
clc
shrb
cmpsb
mov
fistpl
insb
sub
mov
ss
mov
out
mov
cltd
mov
sti
test
adc
call
out
out
pop
loopne
push
mov
and
sub
je
int
loopne
aaa
mov
jb
or
aaa
int3
adc
push
pop
lods
jbe
adc
pop
adc
lds
mov
int
pushf
jp
shrl
scas
xor
fistl
fnstsw
sbbl
xor
mov
mov
xchg
fdivl
inc
cmp
adc
inc
push
cmp
dec
jl
imull
movsb
mov
or
icebp
shlb
sub
xor
mov
dec
mov
mov
icebp
lds
sbb
mov
pop
dec
test
adc
out
test
adcb
adc
cs
adc
xchg
or
inc
xor
add
sti
sbb
xchg
call
ret
xlat
jecxz
sbb
aaa
xchg
int3
psubusw
rorb
pop
orb
sbb
or
xor
scas
dec
jg
aam
jl
pushf
mov
and
pminsw
dec
lahf
call
dec
fnsave
or
pop
dec
vmaxps
fwait
xchg
int3
test
jmp
shl
icebp
jp
dec
mov
subb
cmp
xchg
idivl
mov
cli
es
out
insb
in
rcll
in
adc
mov
xchg
sbbb
std
outsb
je
inc
jg
jbe
mov
adc
shll
cmp
inc
sbb
adc
outsb
outsb
push
dec
filds
push
adc
scas
xorb
outsl
iret
push
jns
lcall
xchg
pop
add
and
pop
icebp
in
jmp
pop
xchg
inc
mov
in
test
cmp
lods
ficoml
lds
or
adc
dec
jg
and
ret
push
pop
mov
rolb
stos
sub
div
rep
sub
lea
jo
mov
jmp
mov
sbb
push
mov
add
dec
adc
popa
cs
les
add
xchg
pop
pop
inc
pop
or
xor
jl
cmpsl
sarl
sub
int
andb
inc
enter
mov
adc
nop
adc
mov
test
mov
adc
sub
fidivrl
push
into
gs
pushf
adc
popa
xchg
nop
test
sbb
xsha256
cmpsb
push
adc
scas
ret
xchg
mov
test
add
xchg
inc
xchg
or
sub
mov
hlt
inc
ret
std
rcl
xor
fcompl
mov
mov
loopne
jmp
int3
cmc
dec
or
out
mov
dec
js
adc
mov
push
jo
cltd
dec
add
pop
mov
ljmp
es
sbb
mov
aam
aam
rorb
or
pusha
cli
not
out
outsb
pop
cli
jbe
addl
decl
jge
in
mov
inc
inc
lret
mov
mov
xchg
lds
adc
imul
loop
imul
icebp
sti
sbb
enter
fwait
ret
xor
sbb
mov
jge
and
rolb
mov
fdivl
sub
dec
pop
test
sbb
hlt
pushf
fwait
shrb
push
test
lahf
or
nop
mov
nop
xor
jp
xchg
out
dec
je
or
test
add
shll
add
jp
jns
rcll
add
fisubl
gs
popf
mov
xor
sub
lea
fbstp
inc
inc
jae
daa
sbb
int3
stos
pop
jno
lods
ljmp
mov
stc
push
repnz
mov
add
or
mov
fcomps
mov
int
repz
adc
ret
add
sub
pop
push
xchg
pop
cmc
aam
jge
sub
shlb
pop
push
adc
cmp
dec
ret
mov
cmp
ret
dec
mov
mov
push
pushl
jmp
sub
mov
push
rclb
imul
pushf
shll
test
xor
aaa
test
cmpsb
incb
cs
in
inc
aam
mov
lret
pop
fsubrp
and
int3
pop
mov
and
cld
clc
mov
nop
and
fldenv
in
fisubs
jg
mov
cwtl
cmpsl
je
jae
push
cli
movsb
inc
fcomi
adcl
ja
addb
outsb
xor
push
dec
mov
pop
in
cmp
andb
mov
fisubrs
lea
repnz
mov
cmp
insl
jnp
pop
inc
xchg
mov
ficompl
inc
movsb
stc
inc
lods
or
repnz
dec
mov
aas
mov
jnp
xchg
pop
xchg
push
jle
mov
inc
sub
fmuls
and
sbb
sbb
lods
std
popa
dec
dec
or
or
push
jmp
imul
pop
jno
and
cwtl
stc
jmp
xchg
sbb
bswap
ret
xlat
jle
xor
or
or
jmp
push
fst
imul
mov
and
adc
cmc
inc
iret
fdivr
fstps
rclb
outsb
xchg
lods
lea
test
adc
shrb
inc
lods
imul
orb
into
notb
xchg
loope
rol
int
aas
and
pop
iret
icebp
adc
xor
inc
bound
and
sub
pop
mov
dec
aam
mov
out
mulb
add
ss
lret
adc
push
js
loopne
mov
xor
stc
or
and
add
lahf
stos
mov
in
stos
jge
adcb
cs
adc
dec
push
and
push
aad
movb
loop
sub
repz
movb
test
push
push
cmp
leave
ja
imul
flds
cmp
call
fistpll
loop
or
pop
cltd
push
movsb
pop
mov
mov
sti
adc
scas
int
fsubrp
outsb
and
add
cwtl
or
shrl
rorl
sbb
mov
push
push
shlb
cmp
loopne
add
mov
js
jge
lods
aas
sbb
js
xchg
leave
jnp,pt
cmp
xchg
js
cmp
mov
mov
mov
xchg
scas
imul
push
fbld
jp
mov
pusha
fidivs
pop
pop
jmp
movsb
les
push
push
inc
pop
js
adc
pop
std
lods
or
dec
sti
mov
push
inc
into
scas
cld
dec
mov
pushf
or
pop
stc
ljmp
scas
lods
jge
mov
loop
aas
xchg
jns
cmp
sub
leave
jl
hlt
mov
daa
dec
outsb
inc
pusha
and
popa
pusha
xlat
and
stc
out
cmpsl
xchg
mov
and
add
cltd
jle
mov
addr16
and
or
jg
sbbb
push
lea
gs
adc
sbb
leave
mov
or
xchg
xor
arpl
jno
cmp
sbb
xbegin
inc
insl
cmpsl
das
icebp
movsb
orl
mov
gs
aad
push
imul
sbb
icebp
insl
aam
mov
jmp
jno
cmc
pushf
pop
xchg
add
mov
lock
mov
scas
fcomps
adc
jg
push
int
xchg
subl
lds
add
popa
or
pop
fildl
or
fisttps
push
inc
lock
das
mov
jnp
cmpsl
inc
dec
fwait
xor
inc
pop
sbb
movsb
pop
pop
dec
loop
jecxz
sub
aaa
mov
xchg
icebp
addr16
in
push
xchg
out
data16
pop
mov
xchg
into
sbb
push
pushf
cli
ja
xchg
xchg
xchg
scas
xor
inc
add
mov
shll
jno
and
jno,pn
cwtl
jg
das
int3
mov
subl
sub
call
sub
pop
dec
xchg
cmp
stos
push
adc
and
lods
insb
cmp
sbb
shlb
repz
sub
das
je
sbbb
push
lods
xchg
movsb
push
add
cwtl
rcl
dec
push
push
imul
push
lods
mov
xchg
mov
iret
arpl
jmp
enter
leave
testb
inc
push
adc
out
sub
daa
sub
push
sub
divb
jo
std
std
stos
loop
dec
mov
lcall
or
adc
push
push
xlat
lock
aaa
lds
jb
push
pop
cwtl
cmc
push
mov
fldt
xchg
popa
pop
es
mov
xchg
repnz
scas
enter
xlat
mov
movsl
cltd
lods
adc
cmp
cmp
xchg
jmp
add
lods
pop
das
inc
pushw
mov
xchg
int3
std
ljmp
cmp
in
jl
addb
pop
das
scas
outsl
imul
inc
sbb
jl
mov
xchg
subb
cld
repz
pop
and
sbb
pop
jns
test
adc
aam
enter
mov
fsubl
sti
mov
cmpb
enter
pop
pop
dec
fistpll
push
outsb
jg
pop
ja
lahf
in
inc
jmp
xor
xlat
or
xchg
xor
mov
sbb
jmp
pop
mov
shrl
dec
or
icebp
mov
and
or
ljmp
aaa
shl
iret
fs
rcrl
push
aaa
xor
jecxz
lock
adc
sub
test
imul
mov
insb
mul
in
mov
or
xchg
mov
and
cmc
dec
out
arpl
aaa
adc
pop
aaa
mov
pop
sbb
pop
push
ljmp
std
xor
adc
cmpsl
inc
outsl
sub
test
inc
push
mov
cmp
cmpsb
pop
test
mov
inc
lahf
cli
mov
aas
push
sub
inc
xor
imulb
imul
dec
inc
mov
stos
es
lds
jecxz
test
mov
or
addb
hlt
sbb
and
jmp
jle
hlt
and
loopne
inc
call
dec
popf
rorl
sub
lahf
push
and
jno
push
fnstcw
in
mov
mov
pop
mov
mov
pop
rcrl
les
xor
pop
and
xchg
dec
inc
xor
gs
out
cmpsl
jmp
jnp
or
push
sub
lcall
inc
jo
adc
sub
ret
lret
data16
daa
hlt
sub
xchg
jo
push
movsl
xor
dec
movl
cmc
cmpl
sbb
popf
ret
xchg
pop
dec
xor
mov
les
sbb
sub
cmp
shll
rclb
sub
add
fldenv
aam
rcl
outsb
sti
pop
mov
add
in
test
jecxz
repz
inc
sbb
cmp
push
faddp
mov
inc
sti
in
pop
rorb
push
cmp
mov
push
adc
xor
icebp
mov
shlb
mov
cli
es
cltd
inc
fbld
int3
test
andb
sub
add
adc
iret
cmp
mov
sbbb
ret
jmp
xchg
mov
add
push
jecxz
adc
jo
mov
mov
aad
mov
add
mov
jp
dec
xchg
mov
dec
xchg
cs
outsl
sub
mov
adc
cmp
gs
leave
out
mov
in
lret
cmp
clc
mov
mov
loopne
jbe
ljmp
das
fadds
cld
add
das
fidivs
lret
lds
xchg
icebp
addr16
fistpll
insb
inc
xchg
lock
sbb
rorb
mov
out
mov
sahf
out
int
in
mov
jns
jmp
fwait
rol
cmp
pop
mov
sub
dec
cltd
xor
hlt
leave
imul
xchg
mov
in
push
mov
repz
xlat
dec
sub
xor
jle
mov
mov
and
jo
nop
jecxz
and
js
das
jle
leave
push
stos
sbb
ljmp
xchg
sbb
mov
jmp
or
enter
leave
inc
or
adc
mov
es
mov
in
out
pop
and
in
sti
scas
cmp
and
mov
jo
ficoms
outsl
adc
xchg
or
cmpsb
iret
add
cmp
mov
inc
sub
lods
subl
push
sub
mov
sbbb
push
or
rcll
popf
adc
pushf
out
clc
loope
pop
cmp
pop
push
cmpsl
mov
or
inc
lock
sahf
stos
arpl
test
mov
std
cltd
sti
cli
push
xor
and
daa
rol
aaa
push
xor
jecxz
jne
mov
bound
sbb
movsl
pop
addr16
insl
mov
in
mov
fs
xor
iret
jmp
push
lahf
jne
fstpt
les
int3
jp
pop
sub
cmp
cmp
imul
inc
cmp
and
enter
cmc
out
jnp
repnz
mov
xor
aas
and
imul
daa
cli
push
les
adc
cmpl
adc
sub
popa
jmp
test
mov
in
sahf
dec
sbb
jb
es
sub
repnz
test
sub
inc
negb
roll
xor
jg
int3
aam
mov
mov
repnz
scas
lds
mov
aas
adc
mov
mov
insb
stos
leave
insb
subb
add
aaa
aaa
sbb
add
daa
das
xchg
aas
leave
insl
jecxz
or
daa
mov
lock
mov
or
dec
test
rcrb
mov
or
dec
mov
sub
and
adcl
ss
fs
jnp
scas
out
fsubs
lahf
mov
subb
push
call
xchg
aas
xchg
rcl
jmp
mov
inc
jo
mov
xchg
sub
inc
sbb
mov
mov
xor
ret
jbe
jbe
fcoml
mov
cwtl
insl
fwait
dec
sub
mov
in
xor
cmp
pop
sub
mov
dec
inc
int
xor
loopne
add
push
mov
movsl
mov
mov
ret
xor
pop
jo
jmp
xchg
out
aad
xchg
cmp
cli
xchg
scas
mov
stos
arpl
mov
sbbb
hlt
popa
ret
in
in
wrmsr
mov
in
rorb
xchg
and
into
xorb
idiv
xor
mov
cmp
dec
or
xor
lds
adc
sbb
stc
jns
shll
jne
aam
xor
push
pop
fisubl
es
xor
adc
imul
outsl
jb
push
sub
xor
lcall
into
out
mov
adc
inc
clc
or
add
lods
cmp
or
test
mov
mov
insl
or
shll
pusha
outsl
and
in
cltd
ficoml
cmp
xor
push
push
adc
inc
jmp
subl
iret
jmp
mov
xchg
sbb
call
inc
cmp
andl
lock
out
sbb
leave
loopne
addr16
xchg
jg
mov
ret
aam
mov
push
addl
lods
mov
mov
pop
or
das
sub
out
lea
or
push
fsts
jp
lret
leave
rep
insl
sbb
data16
cltd
cmp
aad
in
xor
pop
pop
call
xchg
lods
inc
push
push
shlb
fldt
in
jg
jbe
aas
out
xchg
jae
aad
pop
jno
jmp
filds
xor
daa
inc
cmpsl
aam
adc
cpuid
sbb
xchg
bound
mov
xor
movsl
sbb
jmp
mov
out
lcall
sub
enter
jo
xor
jns
out
fsub
or
pop
mov
in
in
xor
frstor
dec
icebp
subb
repz
mov
xor
xlat
lods
int3
jno
imul
jl
xor
inc
enter
mov
sti
addr16
jg
cli
mov
ljmp
jle
mov
adc
pop
pushf
dec
xchg
or
sarl
sub
dec
xor
add
in
xlat
sbb
std
fwait
addr16
jnp
jmp
cmpsl
outsl
fisttpl
into
push
jne
sub
xor
jb
adc
dec
sub
faddp
sbbb
jg
fs
or
cmp
test
sbb
cmp
je
clc
mov
pop
xchg
fwait
arpl
dec
call
sub
pop
adc
gs
jle
les
push
cmpsl
adc
es
out
ret
aaa
rorl
mov
imull
aad
mov
and
shll
push
les
arpl
or
push
pop
mov
adc
mov
and
push
jp
std
cmp
cs
inc
push
jo
rorb
frstor
or
rcr
pop
fsincos
fisttpll
cltd
std
sbb
scas
push
jo
insb
es
xchg
push
sbb
dec
addr16
imull
pop
sbb
stos
insb
xor
xor
out
cmc
lods
fldenv
push
setb
ret
xchg
shlb
push
test
mov
push
das
add
out
sbb
shll
dec
sbb
adc
insb
jle
sub
ret
cmp
pop
test
and
adc
fsubr
enter
testb
and
jmp
and
cmp
dec
repnz
pushf
in
push
add
mov
arpl
cmp
sbb
lods
cmpsb
cmpsl
popf
jmp
scas
incl
pop
ret
xchg
xor
arpl
cli
dec
jae
fwait
stc
sub
inc
or
xor
adc
scas
xchg
lret
add
out
lret
inc
or
cmpsl
xorb
ss
cmp
lret
ss
je
push
jmp
xor
cmc
and
adc
aad
mov
jb
sbb
aas
jnp
mov
mov
aas
and
push
setbe
mov
sub
dec
sahf
lret
sbb
in
push
xrelease
daa
jo
in
test
dec
dec
or
mov
xorl
mov
cmp
mov
andl
rorb
data16
insl
jmp
jbe
sti
inc
or
mov
mov
mov
add
fldz
push
je
or
mov
adc
and
movsl
add
or
push
rolb
lret
sarb
lods
movsb
xchg
js
jns
ljmp
sbb
xor
orl
shl
ds
jge
clc
out
inc
bound
nop
xchg
ret
out
sbb
add
pop
mov
dec
stc
flds
cmp
lret
push
add
lock
repz
lods
sub
fcoml
psubd
and
loopne
sbb
fsubl
lock
rolb
mov
rorb
jl
cli
fs
mov
sub
ja
mov
lret
mov
mov
jl
ret
mov
mov
and
loope
sbb
push
fwait
test
mov
scas
mov
data16
inc
idivb
sbb
push
leave
insl
mov
aaa
mov
or
jp
in
add
lea
or
sub
addr16
xchg
xchg
fldt
rclb
jno
clc
jnp
push
lret
ficoms
adc
lret
aaa
lret
mov
pop
jne
cmpsb
jle
insb
mov
pop
mov
rcll
or
or
daa
imul
or
ljmp
inc
xchg
xchg
or
or
push
xchg
or
lea
loopne
inc
pusha
cltd
or
jno
adc
adc
stos
mov
add
jmp
std
out
mov
repnz
pop
add
or
test
and
lahf
xchg
mov
adc
and
loop
xorb
cli
mov
out
aas
and
dec
fnsave
mov
xor
push
pop
ss
popa
ret
mov
movsb
loop
rcl
mov
cmp
mov
fidivrs
mov
push
rolb
ljmp
ret
mov
cld
xorl
push
pusha
mov
cli
sub
shlb
cs
mov
aad
sti
lret
outsl
ret
sbb
fldcw
mov
in
mov
adc
sub
jne
cmpsl
int
push
dec
jns
stos
mov
shlb
mov
daa
xchg
sti
addb
or
mov
mov
repz
loopne
cmp
out
or
enter
notl
and
mov
add
push
in
in
in
fiadds
sbb
es
bnd
mov
or
cmc
mov
inc
mov
xchg
movsb
adc
psubsb
inc
pushf
xchg
push
push
cwtl
xor
push
jbe
adc
jg
cmpsl
cmp
dec
lahf
pop
shll
notb
mov
arpl
mov
push
lret
outsb
dec
inc
jae
jmp
testb
push
lods
loop
les
es
test
int3
clc
ss
in
repnz
aam
and
imul
sarl
sub
mov
fcompl
xchg
xor
mov
negb
shrb
dec
dec
in
enter
lret
xchg
ljmp
out
and
mov
cmp
dec
into
lahf
jmp
sbb
cmp
ja
insl
mov
sub
es
arpl
push
addb
cmp
test
sbb
jmp
sub
repnz
rcrl
adc
sbb
jl
ja
push
push
jne
xlat
lret
lahf
jns
xchg
jae
adc
ret
jne
lret
push
pop
mov
in
and
leave
mov
pop
test
iret
addr16
sub
adc
mov
sahf
test
sub
dec
stos
cmp
xor
sti
out
and
mov
lods
test
pusha
adc
loope
cmp
mov
ss
shrl
scas
xchg
mov
call
popf
insl
mov
pusha
leave
add
loopne
mov
daa
enter
imul
xlat
out
add
adc
clc
addr16
ret
outsb
dec
xor
dec
add
xchg
or
jb
inc
mov
out
loope
rcll
push
adc
rcl
loop
pop
mov
mov
add
mov
fildll
fwait
push
sub
lcall
mov
sti
scas
nop
decl
sub
xchg
test
adc
fcmovu
testl
in
mov
mov
ret
sub
mov
rolb
xor
xchg
fisubs
ret
sbb
loopne
jne
nop
lahf
sbb
imul
dec
add
ds
push
not
pop
es
fs
sub
cld
push
mov
mov
push
scas
sbb
test
push
or
adc
fistps
mov
xchg
fsub
outsb
xlat
mov
pop
xor
outsb
in
cltd
ja
cmp
lret
lea
cmp
pop
sbbl
lcall
dec
xor
or
je
inc
sub
cmc
daa
inc
sbb
out
mov
mov
cmp
outsl
movsl
test
add
jae
pusha
mov
pop
push
das
xor
lock
cwtl
lcall
add
test
scas
ljmp
mov
sub
call
adcl
fdivl
cmp
ficoms
push
js
dec
test
iret
xchg
pop
adc
push
rorb
cmpsl
pusha
pop
mov
lods
xor
bound
icebp
and
sbb
loop
mov
movsb
jmp
push
movsb
lods
mov
outsb
mov
jl
jo
mov
push
sbb
scas
jb
or
sub
xchg
mov
loope
xchg
push
lret
in
mov
inc
rcll
pusha
inc
cmp
xchg
lahf
repz
ss
imulb
push
fildl
jecxz
int
insb
cs
orb
daa
out
inc
iret
loopne
nop
mov
fists
ss
test
cmpb
cli
sub
imul
out
dec
rol
mov
movsb
shl
pop
mov
mov
xor
mov
leave
es
dec
adc
rcrb
rcl
jns
addr16
movsl
fidivs
add
jg
mov
sbb
into
popa
iret
or
xchg
inc
pop
mov
xchg
cmp
packsswb
sub
fyl2x
jmp
aam
push
ret
fldt
roll
int
jp
sub
aam
mov
push
xlat
cmp
fs
out
pop
fcomps
cmp
inc
testl
and
lea
fcomps
mov
mov
out
out
and
stc
pop
mov
push
mov
in
dec
push
pop
jmp
pushf
add
jle
fidivl
xor
lods
push
es
decl
sub
push
jbe
iret
cmp
ljmp
rcrl
sbb
push
add
fnstsw
mov
lods
lock
add
mov
xchg
xlat
sub
pop
or
or
imulb
inc
arpl
dec
imul
mov
rorb
adc
xchg
mov
dec
mov
fs
or
sbb
push
imul
in
sbb
jb
mov
xor
push
cwtl
jo
stc
fs
push
sub
clc
lea
push
inc
mov
lock
lock
xor
and
aad
add
lods
neg
push
lcall
pusha
outsl
push
outsb
jp
sub
stos
lcall
jmp
xchg
inc
pushf
mov
push
cmp
sti
call
lcall
push
sbb
push
js
or
je
lds
data16
popa
jmp
inc
xor
pop
es
fbstp
std
mov
pop
icebp
jp
xchg
jns
pop
push
sub
sub
sbb
xchg
loope
sbbb
imul
cli
xchg
adc
out
dec
mov
dec
pop
mov
in
push
push
outsl
lds
adc
add
cmpsl
mov
mov
sbb
xchg
int3
js
enter
inc
cltd
stos
push
push
lret
xchg
sahf
adc
ds
sub
jb
hlt
inc
mov
out
je
sbb
push
mov
ret
ud1
pop
adcl
mov
jo
add
mov
sbb
inc
add
or
dec
nop
mulb
push
subl
outsl
jecxz
into
test
repnz
jo
test
test
repz
fstl
cltd
cli
adcl
in
out
popa
aas
mov
and
mov
jg
movsl
ret
fwait
lock
scas
dec
xor
xlat
pop
push
mov
push
pushf
ficompl
loopne
lahf
cmp
fnsave
int
in
jl
xchg
dec
movl
mov
pop
inc
cltd
sbb
and
jge
or
inc
mov
stos
pop
push
push
mov
pop
fistpl
cli
cmp
cs
adc
add
lahf
in
pop
stos
arpl
data16
mov
stos
std
pop
xor
lahf
pop
daa
and
psraw
iret
mov
out
push
cs
lods
sub
inc
add
sub
jge
jns
push
imul
test
cmp
push
mov
mov
dec
adc
pushf
test
push
ljmp
jnp
mov
fdiv
mulb
mov
cltd
jg
cmp
inc
cmpl
mov
ja
aam
test
lcall
imul
push
inc
enter
add
lahf
adc
xor
mov
pextrw
popf
sub
and
enter
jmp
out
or
ret
out
jmp
ret
movsl
pop
aam
inc
idivb
imul
es
mov
xor
push
jmp
sbb
enter
fadds
push
jae
push
dec
add
and
call
jmp
xchg
ja
jno
in
xor
insb
xor
mov
pop
ja
jbe
xor
mov
fwait
lahf
sub
xor
pop
int3
jg
sar
cmp
pop
aaa
lcall
and
xchg
imul
leave
pop
mov
aad
out
jbe
enter
lcall
push
push
rcl
push
pop
add
pop
mov
cmpsl
and
dec
test
mov
lds
push
cs
cmc
dec
fadds
scas
cmp
dec
rcll
fstpl
int
lea
les
outsb
int3
add
cmp
dec
ja
lret
es
sbb
adc
push
mov
into
pop
cmpsl
or
es
cli
adc
mov
sbb
xchg
jns
stc
gs
mov
xor
dec
mov
in
lock
mov
sbbl
adc
and
sbb
aad
mov
cwtl
sub
ds
inc
jno
pushf
jno
mov
jae
mov
push
fimull
in
adc
cmc
rcr
jns
mov
mov
aas
adc
adc
fcoms
xor
dec
in
test
test
dec
push
popa
stos
popa
adc
arpl
nop
adc
repz
dec
in
psubsw
mov
inc
pushf
stos
push
ss
sbb
ds
jo
cld
mov
mov
mov
imul
lret
incl
mov
push
push
sub
mov
imull
push
faddl
fwait
js
mov
clc
mov
call
out
and
loopne
pop
data16
push
mov
mov
jns
xchg
mov
cmp
aaa
ret
repz
jmp
lods
lret
hlt
scas
inc
or
sub
dec
xchg
xor
jbe
mov
pop
jl
push
jg
movsb
and
adc
push
mov
sub
cwtl
arpl
mov
dec
cmp
stos
outsb
push
movsb
mov
inc
sub
xchg
cmp
or
mov
xor
jge
inc
sbb
jmp
cld
outsl
aas
in
jns
jns
cmp
xor
ds
popf
mov
and
test
or
out
lcall
clc
mov
pop
or
scas
pop
mov
cwtl
or
dec
mov
ds
mov
or
int3
mov
fs
popf
fmulp
mov
data16
cmp
cmpsb
cs
and
repnz
scas
leave
in
add
jmp
pusha
mov
mov
mov
out
dec
xlat
and
xchg
int
dec
clc
sbb
jb
out
outsl
sbb
aad
scas
ljmp
jne
mov
out
scas
mov
mov
les
push
xor
xchg
out
je
test
or
mov
push
mov
les
sahf
dec
movsb
mov
lods
xchg
or
mov
and
xchg
out
fldcw
das
cmp
jle
shlb
cltd
out
sub
ja
jle
push
push
add
lods
mov
mov
int3
or
inc
out
mov
adc
jo
xchg
lea
or
fstpl
int3
aas
out
jne
lahf
icebp
mov
jbe
enter
adc
fsubrp
popa
call
xor
fisubrl
lea
and
daa
rcl
insl
cmp
inc
lea
jp
popf
pop
xor
add
ljmp
inc
push
daa
iret
dec
push
sbb
sbb
or
es
dec
gs
out
into
stos
into
idivb
push
cmp
out
insb
inc
adc
push
in
mov
fsts
mov
loop
shll
pushf
lods
sbb
xchg
stos
ret
imul
cmp
mov
fwait
stc
les
dec
mov
cmp
sbb
lahf
pop
lret
mov
jecxz
ljmp
leave
push
cs
xchg
inc
push
andl
insb
jecxz
jae
aaa
daa
add
push
das
push
jno
popf
inc
mov
dec
sbb
in
jo
scas
pop
jmp
aam
cmpsb
jbe
pop
je
repnz
xchg
testl
adcb
fwait
test
loope
mov
jg
cmc
mov
repz
iret
mov
push
xchg
mov
push
loope
aaa
aaa
jge
fstpl
js
inc
fld
pusha
xor
clc
mov
push
sbb
jno
push
ds
inc
iret
movsb
jae
lock
jno
fadds
rclb
popa
imul
jo
jecxz
jae
sub
icebp
addr16
dec
enter
mov
add
ja
xchg
stc
sbb
mov
inc
pushl
add
dec
sbb
call
shlb
outsl
inc
repnz
mov
push
aad
nop
icebp
dec
int
mov
jne
add
mov
and
push
jecxz
mov
pop
movsb
out
fs
add
ret
gs
sbbl
xlat
mov
faddl
flds
sbb
xor
fs
adc
addr16
jl
inc
push
add
pop
stos
stos
ljmp
cli
dec
sub
scas
sub
sbb
fsub
xor
adc
mov
cmp
jno
test
xor
sahf
mov
mov
sub
fmuls
ret
ljmp
adc
adc
push
mov
int
imulb
loopne
test
sbb
inc
sub
ja
sbb
fisttpl
mov
and
shll
xchg
mov
or
sub
leave
sub
pop
mov
push
push
rolb
sbb
adc
dec
xchg
mov
xchg
mov
iret
mov
sar
sbb
sbb
mov
adc
dec
pop
or
pop
cld
jmp
pop
icebp
push
xchg
cmp
pop
outsb
sbb
in
scas
mov
xchg
in
scas
pusha
or
push
push
ret
dec
imul
xor
ret
pop
dec
fs
in
lcallw
dec
pop
mov
push
dec
inc
pop
imulb
dec
cmp
pop
imulb
shl
push
sti
inc
xchg
jmp
sbb
jne
mov
imul
gs
mov
lods
push
clc
out
nop
subb
test
inc
test
movsb
aaa
dec
jns
mov
neg
ret
stos
inc
fistl
xchg
cmp
mov
lcall
jge
rorl
push
jp
push
js
out
adc
jne
arpl
xchg
dec
sbb
nop
adc
shll
mov
shlb
dec
mov
clc
sub
and
pushf
cmpl
inc
pop
rolb
mov
mov
lds
jl
or
adc
insb
mov
pop
pop
jae
lea
insb
pop
sbb
cmp
lock
sbb
push
imul
in
xor
xchg
fstpt
sub
cmc
push
outsb
loop
out
test
jne
jmp
sbb
ret
jbe
outsl
fst
stos
push
cs
inc
aas
push
addl
inc
outsl
jns
cli
rolb
test
ds
cmp
stc
mov
scas
repnz
xchg
cmp
mov
mov
int
inc
cmp
aas
mov
fldl
popa
and
imul
fst
and
sahf
xchg
mov
test
lods
fwait
mov
lods
movsl
sar
std
je
roll
movl
sbb
lock
je
lods
jno
es
mov
test
dec
pop
add
sti
std
arpl
inc
cmc
in
out
sbb
dec
in
mov
das
out
push
sarb
xor
xchg
incl
cs
stos
inc
dec
dec
lahf
into
cs
mov
out
bt
mov
insb
mov
dec
jb
xor
push
xor
sub
cmpsl
in
mov
scas
pop
pop
and
sbb
pop
mov
jge
dec
push
sbb
in
shl
fcoml
and
aad
std
jl
dec
dec
dec
sbb
cmp
std
inc
jnp
mov
in
arpl
idivb
mov
ljmp
ficompl
add
adc
mov
pop
loopne
rcr
mov
fpatan
mov
mov
jnp
int
jnp
inc
cmp
sub
sbb
call
jmp
movsl
jbe
sti
or
or
ljmp
sbb
push
lea
rcrb
pop
jo
or
add
sar
dec
and
rorl
xchg
xchg
jmp
repnz
inc
lret
push
adc
lea
cmpsl
sub
outsb
jmp
ss
aam
pop
lret
jno
subl
imul
adc
out
cli
push
mov
xor
cmp
adc
mov
pushf
cmp
jnp
call
pop
fstpl
sub
sbbb
adc
jmp
jp
dec
movsb
aad
std
test
dec
orb
dec
jnp
mov
xchg
add
shll
icebp
dec
pop
aad
dec
lcall
pop
lock
and
push
test
ret
or
out
xchg
dec
mov
imul
mov
and
xor
or
adc
and
sub
stc
dec
mov
inc
pop
ja
jo
pop
aaa
lock
push
pop
sub
jmp
lods
jl
cmp
mov
test
mov
pop
in
adc
sub
mov
cmp
scas
frndint
std
mov
and
jo
pop
outsb
outsl
sub
inc
inc
mov
and
lods
dec
xor
addr16
dec
int
push
dec
jb
sub
xchg
adc
outsb
push
movsl
fisubrl
sbb
cli
mov
mov
pushf
movsb
push
daa
lods
xchg
pusha
out
cltd
bound
xchg
mov
arpl
add
inc
push
fs
pop
pop
cmp
inc
addr16
icebp
mov
adc
pop
mov
imulb
clc
jg
adc
xor
stc
mov
sahf
or
dec
jns
jmp
movsb
arpl
jbe
inc
in
and
loope
jle
add
cmp
cmc
test
dec
sub
lea
lahf
mov
sub
mov
lds
or
sahf
lods
pop
test
inc
xchg
lret
test
pusha
repz
jnp
fidivrs
mov
inc
in
in
fsubl
scas
pop
push
jns
jne
outsl
inc
push
inc
lea
ret
inc
mov
jno,pn
test
popa
loope
sahf
imul
test
jno
call
pushf
lahf
rcrb
fadds
sub
hlt
jo
test
fisubrl
or
add
mov
out
push
lock
pop
fldcw
cltd
out
stos
leave
sbb
jl
xchg
xor
cli
sar
lahf
cmp
bound
fnstsw
jmp
cmp
add
andl
jecxz
pop
inc
subl
dec
pushw
xchg
cld
and
pop
mov
jge
adc
stos
loopne
mov
inc
stos
cli
inc
mov
ror
inc
adc
dec
push
daa
fisubl
cmp
lea
or
sbb
push
test
mov
jo
mov
add
addr16
scas
mov
cmpsl
add
mov
pop
lretw
mov
add
stc
xchg
dec
or
fdivr
mov
clc
jae
pop
out
cltd
add
test
mov
out
dec
cli
sub
mov
lahf
je
into
out
cwtl
dec
into
push
nop
add
call
sub
sbb
fisttpl
sbb
test
loop
jge
mov
add
push
mov
loop
cmp
xchg
lahf
xor
jle
mov
sbb
repz
xchg
push
add
dec
out
mov
push
sub
add
dec
sti
cltd
js
cmp
int3
mov
das
lock
inc
enter
frstor
in
fdivr
scas
mov
dec
push
pop
jne
add
xlat
popf
outsb
fistl
adc
clc
lods
xor
sub
stos
imul
es
or
pop
push
loope
add
jnp
mov
repz
pop
push
stc
popf
dec
ret
sbb
enter
fwait
test
clc
out
sti
hlt
bound
mov
into
into
stos
enter
or
test
push
push
pop
sarl
jb
insl
add
cli
leave
cmc
dec
cli
fisubl
popf
int
andl
mov
sub
ja
pop
repnz
ret
mov
xchg
fistpll
mov
dec
ds
cmpsl
outsl
inc
cmpsl
xchg
adc
je
das
mov
arpl
dec
scas
xor
lods
push
lods
outsl
fldt
aad
rcrb
sbb
pop
sbb
add
out
and
inc
push
push
ret
fs
dec
pop
add
movsb
jge
inc
fwait
or
mov
add
jo
cmpsb
and
aad
jp
dec
jne
cmp
arpl
lret
mov
jo
fldenv
cmp
mov
leave
std
sub
lock
ud0
cwtl
ret
jae
sbb
lea
sub
insb
pop
ret
es
rol
scas
cmp
movsl
sbb
adc
jle
scas
stos
imulb
int3
jmp
push
fnstcw
hlt
add
push
jne
movaps
ss
ds
push
and
fxch
repz
push
movsb
cwtl
add
add
dec
dec
sahf
push
lods
test
cmp
sub
fisubrl
int
jne
insb
mov
cwtl
push
std
pop
loopne
pop
pushf
inc
inc
inc
int
sbb
push
add
mov
pushf
mov
out
fcoms
popa
mov
mov
mov
test
inc
sbb
and
lods
hlt
in
pushf
imul
out
gs
and
imul
xlat
sarl
and
xchg
leave
xor
das
dec
rorb
je
and
mov
sbb
mov
sub
jmp
sti
xchg
adc
sbb
and
jbe
and
test
cmp
sahf
push
cmp
adc
bound
dec
lcall
xchg
out
dec
int3
jae
sbb
loopne
addr16
mov
jbe
dec
xor
sbb
pushf
mov
sub
lcall
std
or
inc
shlb
hlt
loop
cld
fincstp
in
mov
clc
repz
push
test
xchg
int3
rclb
inc
adc
jge
push
jne
jmp
sbb
xor
fbld
mov
add
or
jmp
lret
mov
jns
arpl
ror
call
mov
cli
jo
test
xor
stos
push
mov
mov
pusha
aaa
add
xor
cltd
lahf
loop
add
sub
aas
cli
out
adc
out
mov
mov
les
rcr
lds
ds
sub
lcall
mul
int
js
push
std
orl
adc
shrl
mov
mov
cmc
pop
mov
shll
popf
adc
int
mov
outsl
pop
push
mov
push
icebp
pop
mov
mov
xchg
popf
jmp
movsb
in
ret
popf
mov
pop
fstpt
test
cmp
test
sub
push
in
sub
xor
mov
jns
mov
add
inc
cwtl
aaa
out
mov
dec
cli
xchg
aaa
sbb
mov
mov
mov
aas
pop
jb
or
jg
or
pop
aam
push
sub
pop
mov
stos
and
sahf
mov
mov
stc
mov
fimull
jge
jns
mov
sti
pop
sub
inc
and
in
inc
adc
aaa
fldenv
in
jge
sbb
xchg
mov
dec
cmp
fisttps
loope
dec
call
inc
test
lods
mov
adc
mov
insb
hlt
add
sbb
std
or
xor
pop
incl
mov
aad
inc
int
or
xchg
fisubl
dec
adc
or
imul
mov
es
and
jns
hlt
jnp
pop
dec
adc
fmuls
inc
mov
ja
sub
cld
and
push
adc
loope
or
rcll
push
repz
xor
ds
jns
cmp
mov
xor
popa
sbb
rorl
in
rcrl
and
lret
js
shrd
fisttpll
pop
pop
inc
iret
icebp
jp
push
mov
and
daa
ja
fwait
mov
int
xchg
jbe
int
movsl
dec
pushf
jge
xchg
mov
es
or
jge
cmp
shll
inc
sbb
or
inc
add
dec
mov
test
mulb
xchg
cmp
pop
cmpl
sbb
mov
sti
push
inc
out
fildll
negl
stc
xor
rorb
sub
call
arpl
inc
mov
xchg
arpl
jg
iret
pop
inc
cmp
sahf
ret
pop
fistps
cmpsl
das
sbb
jbe
push
xor
ja
inc
es
imul
push
fwait
es
rclb
loope
xchg
xchg
or
loop
ficoms
add
data16
cmp
push
stc
lds
hlt
push
cmc
xor
rcrb
push
xchg
jge
jbe
fisubl
sub
lret
sbb
xor
sbb
hlt
jle
cmp
adc
imull
insb
sbb
add
cmpsl
jno
sbb
das
loope
xchg
push
push
bnd
scas
rol
jo
mov
nop
dec
lret
push
push
mov
push
mov
mov
rcll
mov
dec
sbb
xchg
pusha
push
dec
jl
mov
push
stos
sub
fwait
jle
push
fcmove
adc
adc
addb
mov
dec
push
inc
mov
xchg
jbe
jmp
xor
or
mov
js
fs
jg
mov
sub
lea
fistps
test
xor
test
pop
addr16
idivb
fcmovnb
xchg
das
pop
add
int3
cs
adc
adc
es
add
stos
xlat
sub
mov
mov
or
xor
or
or
pop
cmpsb
push
loop
mov
fnstenv
loopne
int3
adc
ja
call
pop
xor
push
push
cmp
icebp
je
pop
stc
lahf
mov
fs
mov
mov
cmpsb
ret
cmpsl
out
xor
push
pop
pop
push
rorl
xorb
in
cmp
cmpsl
lret
int
and
aad
cmp
and
sbb
or
mov
pop
cmovns
bound
cmpsb
add
sbb
fdivrs
adc
adc
rcrl
sti
aaa
arpl
mov
sub
jb
jbe
out
xchg
insb
stc
push
aam
xchg
lods
icebp
rolb
or
ja
cmpsl
pop
pop
lds
dec
cmp
fists
insb
sbb
fimull
mov
or
fwait
pop
insb
add
jbe
ficompl
pusha
xchg
aaa
xor
xchg
xor
push
fwait
jge
jne
xchg
lods
lea
loopne
add
fisttpl
jae
add
sti
xchg
loope
jnp
shrl
jno
push
sarb
sti
pop
call
sub
popa
cmpsl
in
pop
enter
scas
jge
movsb
adc
xor
les
dec
cmp
dec
jns
push
mov
out
outsb
clc
dec
or
jb
pop
negl
lea
aas
out
mov
call
mov
sarl
stos
inc
sbb
popa
adc
ret
jbe
stos
xchg
sbb
inc
xor
pop
das
and
jl
fadds
push
out
pop
addr16
mov
outsl
push
popf
das
rclb
inc
push
jecxz
push
lret
sub
insl
sub
daa
in
popa
mov
testb
addl
jmp
jp
bound
test
mov
adc
xchg
mov
into
into
icebp
push
loop,pt
push
loopne
pop
dec
stos
sarb
insb
leave
aam
xlat
aam
inc
scas
inc
in
mov
rolb
mov
sahf
into
and
dec
das
addr16
pop
mov
pop
enter
xchg
jns
cmpsb
out
inc
dec
or
adc
xchg
sbb
xchg
js
lock
pusha
ret
jo
in
and
sbb
popf
jno
pop
jmp
dec
js
xchg
test
repz
pop
push
lret
push
and
cmp
mov
push
mov
cmc
popf
mov
sbb
pop
aam
pop
push
les
data16
sub
or
or
jecxz
cmp
hlt
out
mov
jmp
test
xor
jb
mov
lods
addr16
push
push
push
das
loopne
inc
or
or
mov
xchg
mov
pop
ja
push
jnp
dec
aas
adc
roll
test
dec
add
insb
fcompl
insb
ret
mov
xchg
out
or
jbe
adc
sub
loope
scas
movsl
cs
nop
loopne
scas
jge
jo
in
lahf
push
inc
mov
jbe
or
push
lret
sti
pop
and
data16
aam
pop
fisttpll
outsb
push
lret
pop
sahf
mov
pop
jl
mov
xor
cmp
cmp
jmp
int3
sub
ret
stos
imul
sbb
mov
mov
jmp
mov
jnp,pt
or
and
rolb
lcall
mov
data16
mov
lods
testb
sbb
je
enter
adcl
and
dec
fldpi
push
or
add
cmp
adc
into
lock
push
pop
dec
mov
or
and
out
mov
mov
mov
hlt
cmp
pop
jnp
das
cmp
int3
inc
loope
inc
jns
stc
mov
fistpll
loop
pop
fs
add
ficoms
dec
pusha
jecxz
popf
mov
mov
out
out
sti
pop
and
jmp
paddusb
sub
and
pop
inc
sbb
xor
and
subl
fmull
cmc
dec
sbb
stc
pop
aaa
push
insb
cmp
cmc
js
aad
or
orb
fcmovnbe
add
add
in
div
arpl
add
lcall
pop
and
ss
dec
mov
push
outsb
lods
jp
repnz
mov
cmc
mulb
lock
push
js
in
inc
ss
lret
pop
sbb
call
jecxz
cmp
add
jae
xchg
inc
std
mov
xlat
ret
aas
cmp
mov
jnp
dec
push
dec
shlb
ds
imul
ja
lahf
push
outsl
scas
cwtl
push
jno
into
imul
movb
pop
sbb
outsl
sub
pop
mov
jae,pt
ds
xor
cmc
jb
icebp
repz
dec
movsl
cwtl
aam
mov
pop
sahf
mov
out
mov
inc
in
xor
fistpll
dec
ret
mov
xlat
sbb
enter
clc
xor
mov
fidivl
movsl
pop
dec
mov
dec
ror
mov
jbe
out
int3
and
dec
scas
sbb
jb
xchg
sbb
in
xor
mov
mov
pushf
sub
cltd
ret
pop
and
dec
notb
aam
add
ret
hlt
push
scas
es
out
lds
push
inc
cwtl
adc
or
sbb
or
mov
and
stos
pusha
inc
incb
dec
test
add
bound
mov
adc
mov
mov
and
cmp
push
cmp
mov
pop
add
adcb
pop
fisttpll
es
js
mov
adc
xchg
dec
andb
xor
fistl
xorl
inc
test
leave
pop
or
jmp
mov
push
pop
xchg
xor
jbe
mov
test
std
sbb
fwait
mov
sbb
mov
clc
cmp
loopne
xchg
cmp
pop
das
arpl
inc
mov
cmp
and
in
dec
sub
push
loop
loop
mov
sbb
pop
mov
jl
and
mov
inc
cmp
les
sub
ss
dec
cmp
xchg
sub
mov
mov
lret
fsubl
addb
lcall
pop
mov
xor
lcall
cs
cs
jl
push
cmp
push
and
movsb
mov
cld
push
dec
dec
pop
scas
mov
jae
aam
adc
inc
inc
mov
jb
movsb
jmp
xchg
or
outsb
jns
pusha
lods
inc
and
out
out
orl
adc
pushf
dec
cmpsb
mov
dec
add
ja
add
ret
sbb
incl
and
repnz
pop
sarl
xchg
orb
popa
xchg
or
and
orl
jecxz
mov
clc
cwtl
add
fadds
xor
inc
sub
aam
push
lcall
fcmovnbe
add
pop
push
mov
mov
dec
and
cmp
or
mov
dec
sahf
test
mov
es
inc
mov
rclb
xchg
dec
cmpb
sbb
fwait
add
mov
fcmovb
fildll
pop
repnz
jp
sbb
mov
pusha
popa
push
or
jg
clc
mov
cwtl
adcl
test
test
lcall
scas
mov
pop
cmp
shll
jg
fnstcw
and
movsl
out
cmp
shrb
pop
pop
lahf
add
sub
gs
in
adcb
mov
add
add
roll
mov
inc
clc
fs
mov
bound
stc
nop
push
js
adc
iret
cmp
ret
mov
or
sahf
adcl
bound
cs
sub
fs
outsb
xor
inc
movsb
lods
jl
jle
adc
sub
add
add
out
test
out
sub
test
fcompl
bound
outsl
imul
insb
ret
push
xor
fistpll
lret
xchg
add
fwait
cmpsb
push
fisttpll
iret
xchg
lods
test
es
es
das
rcll
xchg
ret
add
sub
push
mov
iret
push
or
xor
repz
int3
jle
push
leave
dec
lret
cs
xchg
fucomi
jnp
xchg
imul
jle
rclb
push
enter
nop
in
es
push
in
or
pop
jl
daa
mov
pop
ljmp
mov
aas
inc
in
sbb
nop
jg
mov
inc
testb
dec
xchg
les
movsl
inc
add
xor
dec
ret
jg
lahf
jl
outsb
add
mov
mov
test
sahf
pop
xor
inc
xchg
push
addl
mov
inc
cmp
inc
fiaddl
add
jbe
push
mov
sbb
test
lret
hlt
xchg
sbb
mov
cmp
xor
xchg
push
cmpsl
xchg
and
aam
test
xchg
insl
scas
add
adc
es
mov
or
inc
jp
cmp
xchg
jge
xor
subb
mov
mov
idivb
scas
cmp
cmp
ds
rorl
xchg
and
sti
sbb
mov
sbb
push
arpl
shlb
xchg
cs
xchg
bound
mov
jl
jne
mov
sub
jecxz
fcmove
adc
daa
outsl
scas
push
icebp
stos
xchg
jns
ret
cmc
loopne
lret
call
cmp
pusha
push
cmp
sub
xor
sbb
cld
and
pop
repz
out
into
mov
ljmp
out
push
xchg
hlt
jbe
pop
push
jbe
nop
push
cmp
adc
jl
mov
inc
push
shr
sbb
ret
add
sbb
daa
lods
dec
fs
ds
into
je
call
push
add
rolb
roll
push
inc
push
push
xchg
sub
mov
sbb
pop
mov
xor
ljmp
jecxz
xor
sbb
enter
add
test
xor
lods
mov
pop
js
sbb
lret
or
cmp
rolb
ffree
mov
xor
sub
lcall
repz
and
loop
mov
mov
fildl
mov
xchg
popf
pop
movsl
loopne
js
mov
mov
ljmp
mov
push
adc
jecxz
mov
pop
cmp
mov
stos
mov
inc
pop
pusha
lea
sar
cmp
and
mulb
xor
int
cmp
or
ret
mov
xchg
ret
adc
out
inc
jb
add
cltd
jp
repz
imul
mov
and
mov
fwait
push
xor
push
lcall
and
lcall
mov
jnp
ds
sbb
xchg
and
mov
notl
ret
mov
lods
aas
stos
inc
in
push
das
ja
cmpl
pop
jo
dec
xchg
mov
push
jge
pop
sub
call
aam
xlat
xlat
sbb
jne
mov
aas
jbe
add
leave
pop
add
cmp
xchg
sub
cld
sub
jb
movsb
out
pop
mov
pop
clc
jmp
insb
psraw
push
repz
push
sbb
es
sbb
xor
rorb
dec
fadds
fbstp
xor
lock
add
sbb
mov
pop
les
int
mov
pop
jnp
dec
mov
mov
fdivrs
xor
iret
or
push
mov
bound
cltd
imul
dec
repnz
mov
es
xor
jecxz
je
lret
es
push
pop
and
cld
scas
sub
sarb
xor
cli
iret
adc
mov
rclb
jle
lea
xor
adc
imul
pop
xchg
cmpsb
fs
es
xchg
insb
aaa
adc
enter
push
fsub
in
and
jg
lods
test
ret
fwait
test
test
xor
arpl
imul
sub
mov
mov
sti
mov
pushf
int3
push
mov
and
push
aam
push
adc
in
lahf
jmp
sub
dec
pop
aaa
dec
sub
clc
adc
rcll
mov
add
cmp
sbb
pusha
and
loopne
data16
test
cmp
hlt
outsl
jge
add
xchg
shrl
movsb
lahf
adc
and
xchg
mov
push
fidivl
das
add
pop
imul
xchg
addr16
and
lods
bound
mov
add
rcrl
addb
ja
jnp
hlt
imul
cmc
xadd
scas
cli
pop
mov
mov
or
dec
cmp
inc
dec
in
jp
push
sbb
stos
inc
fdivrp
movsl
add
xor
and
jp
mov
and
pop
rcrl
negb
out
xor
cwtl
lock
call
jae
pop
ja
lret
mov
mov
or
mov
dec
add
inc
stc
scas
mov
cmp
adc
out
adc
and
dec
ja
xchg
jp
outsb
xorl
xchg
mov
loopne
push
js
sbb
xor
xchg
jecxz
gs
jg
subb
add
add
rcrl
shlb
aas
ret
push
fdivrs
ret
sbb
cmp
push
enter
and
jbe
clc
mov
xor
jno
mov
jae
int
pop
adc
lock
push
bound
movb
push
popa
lahf
sub
push
loop
gs
jo
push
pop
mov
push
out
aas
mov
imul
int
fdivl
jecxz
jle
test
inc
inc
or
push
mov
sahf
fsts
repz
or
dec
sub
jnp
mov
push
lods
push
in
fadds
mov
push
cltd
inc
ret
lcall
jo
cli
das
not
jp
shrb
pop
lahf
pop
jecxz
daa
divb
jbe
out
out
push
pushf
pop
xchg
add
sub
mov
ret
mov
cmpsl
ja
mov
in
cs
aas
cld
xchg
stc
idivl
ret
sbb
jge
jno
xchg
stc
fsubl
int3
jmp
cmp
pop
add
sbb
testb
and
fmulp
insb
fwait
outsl
push
adc
pop
push
mov
sub
pop
sub
inc
jp
ret
push
mov
test
add
fmuls
popa
loopne
adc
cld
imul
test
jecxz
inc
mov
nop
mov
mov
mov
jns
cmp
fisttpl
ret
push
hlt
lds
mov
xchg
xchg
adc
nop
les
shlb
mov
std
jbe
pop
dec
lret
insb
or
jl
mov
xchg
pushf
jo
in
pop
jg
jnp
aaa
sbb
cltd
xor
xlat
jg
stos
ljmp
xchg
out
es
jbe
sbbb
fbld
inc
push
xor
mov
out
and
push
imul
outsl
sahf
push
outsl
sbb
mov
icebp
pop
xchg
stos
xchg
dec
icebp
sub
fstpt
sub
jne
mov
xchg
js
jp
rolb
aas
scas
and
push
xorl
in
sbb
ljmp
jge
and
mov
ret
rorl
call
xchg
cld
pop
inc
pop
sbb
sbb
dec
cld
jno
xchg
cmp
and
push
sbb
adc
and
enter
cmp
mov
inc
and
xor
stos
or
jecxz
mov
xchg
or
inc
xchg
lock
cwtl
fstl
and
inc
enter
filds
lahf
jg
outsl
add
fistl
daa
inc
cmp
add
cmp
dec
pop
sbb
sbb
add
ja
pop
mov
mov
outsb
lds
fsub
jo
in
nop
clc
mov
mov
js
lods
sbb
mov
leave
jge
orl
xor
sbb
jmp
inc
add
test
outsb
push
add
lds
lret
mov
mov
push
shrl
ret
push
inc
cs
cmpsl
cli
xor
testl
das
mov
fiadds
mov
xchg
add
ds
xor
and
cs
jb
cltd
iret
jmp
scas
lods
cmc
rclb
xchg
ret
xchg
push
int3
aaa
daa
testb
sbbb
dec
in
dec
scas
out
jae
push
adc
xchg
cmc
adc
inc
outsl
imul
js
cmp
xchg
out
jmp
pop
mov
ss
pop
lock
mov
xor
mov
xchg
addr16
sub
sbb
mov
jno
cmp
push
xor
decb
int3
in
in
cmp
int3
mov
ja
rcl
bound
rol
bound
mov
push
push
iret
fimull
adc
loopne
aas
add
mov
xor
xor
lret
add
dec
and
lret
cmp
xchg
jns
arpl
jg,pn
addr16
cmp
lcall
mov
pop
adc
mov
cmp
lods
mov
sbb
mov
divb
adcb
add
push
loope
insl
pop
add
adc
adc
rclb
mov
xor
leave
sbb
loopne
roll
pop
andl
jnp,pt
sub
mov
sahf
jns
popf
addb
outsl
dec
notl
dec
cmp
cmp
mov
add
bound
ret
or
lret
icebp
cld
std
sbb
pop
jp
jg
fimuls
std
sarb
mov
jge
cld
mov
xchg
pop
mov
add
push
sub
jbe
mov
adc
mov
dec
data16
in
test
test
pop
loopne
insl
mov
test
scas
in
push
sbb
mov
sbbb
cld
xor
ljmp
std
or
pop
push
cwtl
mov
dec
push
dec
out
push
fdiv
out
ss
es
out
fcmovnu
inc
imul
mov
sbb
fiaddl
xor
mov
jmp
add
push
jo
cmp
movsb
push
xor
in
pop
cwtl
push
mov
push
pop
pop
cmp
jg
jb
daa
inc
mov
or
mov
test
jns
gs
shrb
lods
push
dec
jl
imul
fsts
in
notl
std
add
pushf
sarl
ljmp
sbb
sarl
inc
xor
mov
jb
sub
dec
jmp
ljmp
adc
jge
hlt
enterw
enter
pop
add
ficomps
cmpsb
cmpsb
test
icebp
inc
xor
dec
mov
outsl
mov
sub
mov
jg
push
mov
dec
mov
cmp
jnp
lock
pusha
andl
fadds
cmpsb
add
call
call
clc
int3
inc
icebp
mov
mov
jo
insl
add
fidivrl
orl
jge
sbb
jge
add
dec
or
int3
in
adc
imul
inc
xlat
xor
clc
and
and
pop
hlt
lds
ret
adc
xchg
nop
mov
inc
js
adc
movsb
lret
xchg
data16
iret
insb
inc
xchg
lea
fcoms
loop
shl
adc
lock
mov
pop
sub
xor
xor
mov
sub
lock
stos
imul
add
stos
mov
or
addr16
cmpl
xor
pop
push
cmpsb
adc
lahf
pop
pop
or
in
dec
aad
xorl
dec
cmc
popa
xor
addr16
mov
ret
push
or
xchg
stos
cltd
lahf
sbb
sub
rcll
xchg
lds
es
jle
lds
jmp
out
and
pmulhw
jmp
mov
movsl
lods
xor
das
jnp
pushf
orl
adc
dec
dec
cli
dec
iret
mov
mov
jnp
or
hlt
xchg
fmuls
mov
ljmp
rcll
insb
push
mov
add
rolb
jbe
xor
add
nop
dec
in
add
lret
clc
call
mov
in
cs
inc
cmp
iret
movsb
test
outsl
fistl
leave
fistl
push
sub
pusha
in
pop
adc
faddl
mov
jecxz
pop
fidivrl
fadd
repz
mov
cltd
stos
call
jecxz
and
adc
arpl
call
adc
dec
gs
loopne
xlat
movsb
jo
cmp
lock
mov
inc
mov
fisttpl
fcmovnbe
pop
fsubr
jo
adc
jae
and
mov
add
fdivrs
lret
test
sbb
roll
mov
stos
insb
xor
inc
dec
aad
insb
mov
xor
mov
inc
jp
into
mov
jns
xor
mov
ret
sbb
jno
les
in
mov
mov
fwait
fwait
push
repnz
sbb
add
aam
mov
lret
pop
out
fsubrl
ficomps
sbb
lds
vmread
frstor
test
jb
das
adc
dec
and
jno
ss
fs
lock
lret
or
pusha
mov
mov
pop
enter
add
les
fsincos
xorl
test
jb
dec
js
in
ret
scas
sub
pop
add
dec
jl
xchg
daa
xor
pop
punpckhdq
inc
or
loop
bnd
and
push
mov
sub
inc
cmp
mov
nop
ja
dec
stos
addl
pop
jle
jmp
cmpsb
jbe
mov
inc
test
insl
sub
cmp
adc
addr16
xchg
mov
and
stos
pop
rcr
sub
pop
in
test
fdivl
insl
addb
mov
loopne
mov
rol
push
adc
fst
sbb
lods
es
imul
fmulp
mov
adc
or
lods
inc
mov
adc
adc
enter
sub
and
inc
sub
inc
cmp
fmull
mov
test
add
leave
pop
loop
sub
lret
push
mov
xchg
adc
lahf
lcall
fcoms
mov
popf
rcrb
test
push
cmp
add
inc
and
push
lock
loop
ljmp
jne
push
mov
mov
push
push
cltd
adc
sub
add
daa
push
in
inc
fldt
int3
cmc
mov
pop
int3
rorb
mov
mov
mov
push
xchg
or
lods
stos
pop
outsb
add
sub
das
cmpsb
js
inc
xor
bound
shrb
push
mov
outsb
xchg
xchg
push
scas
mov
sbb
test
mov
mov
fildl
leave
fwait
mov
js
test
test
mov
mov
add
out
dec
imul
jmp
mov
adc
test
nop
lcall
xchg
fndisi(8087
add
fildll
and
xor
out
jmp
in
outsl
in
je
addr16
sbb
pop
test
pop
pop
sbbb
dec
test
cmpsb
ss
xor
dec
mov
lea
cs
insl
cmpsb
fs
add
insl
xchg
or
add
cmc
jl
fbstp
xchg
xchg
mov
xor
adc
and
sbb
xor
test
dec
mov
jge
bound
mov
lcall
bound
sbb
cmc
cmp
mov
subb
jb
shrl
xor
mov
push
push
sub
std
pop
pushf
jle
cltd
test
push
push
insl
push
ret
rorl
out
sbb
cltd
repz
and
js
and
jne
push
imul
sti
pop
in
push
pop
sbb
aas
in
adc
or
jb
add
jnp
xor
jbe
lret
aas
dec
or
pop
mov
mov
push
mov
movsb
insl
cmc
push
mov
dec
ret
jp
xchg
outsl
push
mov
scas
fstl
mov
in
push
pop
sub
popf
dec
jnp
pop
maskmovq
idivl
inc
scas
adc
gs
aad
add
roll
xor
sub
out
push
lods
pop
int
scas
jle
or
xchg
hlt
sbbl
subl
cld
repz
dec
je
pushf
scas
cmc
inc
aaa
cmpsb
stc
lods
adc
mov
pop
addl
dec
aad
adc
arpl
popl
mulb
mov
and
rcrb
pop
outsb
aas
jecxz
sbb
cmc
jb
loop
mov
pop
js
iret
adc
and
mov
adc
ja
daa
test
shl
jnp
adc
mov
int3
imul
pop
es
jnp
push
and
je
push
jne
cmpsb
nop
in
rorb
jmp
mov
xor
cmp
xor
sub
int3
sub
cmp
mov
inc
imul
pop
cld
mov
sbb
jno
movsb
fwait
rcll
mov
sub
loop
out
cwtl
int
or
lcall
mov
lret
repnz
and
pop
mov
mov
cli
das
push
pop
lods
ja
pusha
sub
dec
mov
mov
fwait
xchg
sub
or
sub
shll
xchg
iret
and
sbb
mov
sbb
xlat
or
or
lahf
aad
clc
leave
pop
sbb
cli
mov
ret
hlt
in
call
subl
push
in
pop
scas
adc
into
rorl
lods
mov
push
pop
mov
sub
imulb
lret
clc
add
cmpsb
ss
dec
cmp
inc
inc
popf
subb
sub
push
out
xchg
mov
adc
push
fcomps
lock
and
rcrb
lret
or
inc
mov
mov
shrb
jge
mov
enter
or
popa
jge
fldt
sub
aad
cltd
adc
ss
jne
int3
fidivl
jg
test
adc
jge
mov
xlat
add
loop
or
ss
leave
mov
xor
pop
inc
mov
add
fcomip
fwait
repz
notl
mov
mov
jg
jg
lret
cmp
adc
sub
sub
outsl
fldenv
push
pushf
mov
inc
and
lea
pop
lcall
dec
dec
sbb
xlat
in
pop
add
lret
and
in
mov
cmc
cmp
cmp
in
push
dec
jae
movsb
pushl
jno
push
stc
push
add
jb
jmp
jle
pop
cmp
ss
pop
pop
cmp
pop
adc
pop
cs
aam
ret
std
mov
ffree
and
inc
inc
lds
xchg
lahf
push
pop
mov
and
cmp
dec
xchg
push
movsl
adc
psubsb
jmp
pop
mov
out
arpl
mov
mov
aas
hlt
sti
pop
fisttpl
negb
mov
es
pop
rcll
dec
cmp
je
dec
insl
test
push
inc
test
push
pop
mov
jno
add
pop
loop
stos
jnp
kmovb
pop
adc
cmp
and
cmp
cmp
cwtl
push
jnp
push
fstl
gs
shlb
out
or
push
fdivs
icebp
test
cmp
out
lret
repnz
xor
and
andl
push
inc
cmp
push
cld
adc
or
jo
sbb
jl
or
shrl
fstps
nop
push
push
or
mov
sub
rcrl
fsubrs
out
js
cmp
sub
mov
lods
inc
loopne
push
fildl
cltd
fwait
add
arpl
call
dec
xor
push
aam
pop
scas
or
inc
mov
mov
sub
add
pop
xlat
popa
or
jnp
add
inc
xchg
jbe
fdivs
and
and
jne
sahf
lds
push
and
repnz
dec
mov
lods
mov
sub
xor
les
mov
push
pop
add
add
xchg
ja
mov
xor
lods
icebp
pusha
push
je
push
add
test
push
jae
jl
adc
insl
pop
sbbl
or
cmp
pop
rorl
repnz
ds
or
cmp
fidivs
add
xchg
lret
lret
cmp
pop
push
ret
dec
add
es
adc
mov
out
inc
xchg
inc
into
xor
add
cmp
es
lcall
aam
and
xchg
mov
inc
clc
pop
stc
pop
subl
mov
inc
test
shrb
clc
xchg
pop
dec
sbbb
inc
outsl
inc
out
adc
stc
inc
in
adc
out
jle
cld
insb
push
cmp
enter
cmc
adc
stos
inc
sub
out
pop
mov
in
jecxz
xchg
mov
pusha
and
div
iret
repz
out
das
xchg
je
fwait
sub
adc
sbb
pop
fs
and
in
in
ljmp
mov
fisubrl
aas
pop
mov
cmp
in
cmp
movsb
sbb
insb
je
cmpsb
inc
daa
lahf
push
mov
jmp
insl
pusha
addb
adc
or
lock
fadds
push
out
inc
out
mov
mov
push
xor
jae
cmp
lcall
int3
dec
lea
push
fs
inc
shll
cltd
insb
xchg
test
dec
pop
negb
pushf
adc
into
inc
mov
and
shll
pop
dec
and
adc
das
xchg
push
inc
and
lahf
xor
popa
jnp
loopne
add
xor
imul
cmp
fidivl
inc
fists
imul
pop
jg
ret
or
push
ds
int3
loope
sub
popa
pop
fcoml
jl
shl
cmp
lret
lods
mov
or
mov
jae
imul
inc
rolb
insl
movsb
sub
pop
xchg
jnp
and
shl
popa
loop
sahf
xchg
adc
jge
orl
int
adc
in
popa
dec
lret
push
pop
in
icebp
mov
cmp
push
inc
insb
movsl
cltd
enter
mov
icebp
js
sbb
add
mov
lcall
dec
ljmp
pop
or
lods
jmp
and
mov
push
pop
outsl
cmp
fsub
cmpsb
or
sub
push
loope
in
adc
xchg
clc
adc
cmc
xchg
pop
xor
pop
cmpsl
push
orb
icebp
scas
sub
aam
cmp
fldenv
xchg
dec
loop
inc
les
xor
loope
andb
push
data16
idivl
jmp
pusha
jmp
dec
inc
popf
aad
xor
loope
test
cmpsl
and
mov
pushf
sub
inc
in
icebp
stc
out
sar
mov
adc
mov
inc
mov
sbb
ljmp
push
scas
pop
sahf
lret
adc
push
jb
mov
sbb
xchg
iret
sub
aas
push
or
mov
jbe
add
lret
outsb
adc
fistps
fisubrl
xchg
pop
punpckldq
dec
xchg
lret
and
fwait
xor
test
pop
push
imul
rolb
mov
xlat
jmp
jecxz
das
xor
mov
enter
in
data16
jb
xlat
outsb
pop
mov
xor
dec
jmp
and
pop
test
shrl
and
pop
loope
sbb
cmpsl
in
xchg
push
pop
jae
lea
jge
mov
ffreep
adc
repnz
jno
les
mov
cmp
adc
addr16
lods
and
pop
loope
sub
push
and
mov
icebp
leave
sbb
lds
xchg
adc
daa
test
std
inc
dec
je
pop
mov
jbe
pushf
repnz
sbb
inc
notl
mov
sub
test
cmpsb
mov
mov
xor
mov
jge
loope
adc
xchg
xchg
xchg
pop
sub
add
nop
cmp
in
sbb
aaa
adc
jno
mov
jbe
xlat
ficomps
pop
faddl
rcll
shlb
movsb
sub
cmpsl
sub
push
jecxz
inc
ja
cmc
pop
xchg
push
fst
cmovne
cs
fiaddl
pop
fs
mov
int3
or
add
bound
adc
aaa
std
xor
addr16
mov
inc
test
dec
stos
adc
cmp
inc
pop
lods
into
mov
push
fnsave
scas
push
pop
cwtl
or
xor
sub
dec
mov
fcmovnb
je
mov
pop
mov
push
inc
insb
mov
repz
and
jle
mov
les
imul
out
js
pop
dec
xchg
mov
jnp
lahf
jno
lods
xor
add
icebp
les
mov
out
cmp
adc
mov
sarl
pop
test
popa
and
jns
or
decl
fisubrl
pop
ljmp
or
lcall
jno
incl
adc
nop
mov
daa
icebp
stos
lret
jle
push
rorb
and
ljmp
movsl
call
sbb
adc
inc
testl
sub
and
lods
fisttpll
ret
push
push
xchg
mov
lea
jo
push
loope
mov
mov
mov
push
call
cmc
xor
mov
xchg
adc
mov
xchg
push
loop
loopne
cwtl
pop
cmp
pop
loope
in
xchg
test
lea
xchg
jae
adc
xchg
or
mov
mov
push
aad
pop
sub
movsl
inc
xchg
aas
push
dec
or
jne
push
mov
cmp
test
cli
jmp
in
das
imul
mov
ja
inc
jnp
adc
addb
adc
arpl
cmp
push
sub
cmc
sbb
adc
xchg
or
xor
in
xchg
adc
shl
and
loop
add
rcll
cmc
xor
movsb
jb
ja
xor
add
xchg
pop
cmp
push
hlt
in
scas
lret
pop
scas
fimuls
and
loope
adc
fldl
cwtl
jge
jg
cmp
out
xchg
stos
stos
ss
insb
mov
test
mov
dec
pop
mov
xor
and
es
mov
cltd
clc
out
out
adc
jb
sbb
and
subb
pop
insl
imul
push
jmp
int3
push
por
or
pusha
negl
inc
aad
mov
or
push
daa
push
lret
jge
jnp
sbb
dec
sub
or
fsubrl
lahf
dec
cltd
mov
rol
idivl
xchg
adc
aad
shl
inc
add
sbb
push
mov
lret
sub
das
ficompl
out
sbb
jno
inc
fs
fiaddl
inc
dec
xchg
mov
ret
dec
out
push
ja
sbb
mov
adc
dec
ss
mov
sar
mov
jmp
mov
in
sub
cmpl
lods
in
fmuls
out
dec
cwtl
pop
fwait
movsb
xor
jnp
sub
xchg
sbb
mov
cmpsl
cmpsl
mov
add
sti
push
addr16
test
lods
xchg
and
lods
aam
lods
sub
xchg
push
adc
lret
lret
movsb
add
out
adc
or
push
mov
cmp
int3
inc
cltd
insb
mov
cmp
push
jb
add
mov
leave
adc
ljmp
xlat
mov
std
pop
mov
lea
cld
or
add
cmpsl
xor
sub
mov
cwtl
insb
loope
lock
inc
pop
xor
push
dec
add
in
pop
lcall
xor
cmpsb
inc
outsl
incl
ds
push
cmc
mov
push
dec
filds
push
mov
lcall
mov
or
pop
push
test
and
movsb
fisubl
push
ljmp
and
mov
loope
dec
jbe
and
pushf
fwait
pop
jae
fwait
adc
repz
movsl
mov
xchg
imul
mov
lods
push
jp
mov
adc
int3
stc
decb
pop
xchg
mov
in
ficompl
loope
cmp
adc
movsl
pop
insb
adc
push
jp
mov
sub
ss
fadds
test
imul
inc
mov
lods
xchg
xchg
jg
or
pop
rorl
add
cmp
push
jmp
jbe
jmp
and
cld
or
out
leave
xchg
and
jmp
sub
add
pop
xchg
pop
xlat
xchg
dec
test
add
out
cmp
xor
cltd
or
loopne
test
movsl
jnp
mov
push
hlt
push
es
pop
push
or
xor
imul
jl
mov
mov
inc
add
out
lods
dec
lcall
xor
fstps
jg
jp
lock
add
test
mov
notb
outsl
repnz
lods
push
push
xchg
pop
popf
ja
in
mov
inc
mov
hlt
mov
fbld
sub
fldenv
cmpsb
cmpsb
pop
xchg
in
xor
cmp
mov
pop
inc
rorl
and
or
test
data16
cli
out
fcmovnu
xchg
pusha
inc
iret
ret
rclb
jb
inc
fsubrs
pop
mov
sahf
adc
outsl
mov
cmp
mov
mov
dec
les
jnp
in
or
cmpb
mov
xor
jle,pt
jns
mov
inc
sbb
dec
cmp
gs
xchg
xchg
out
and
test
jg
shll
negw
sub
mov
popa
jb
aaa
mov
lods
dec
push
xlat
loop
adc
jne
jnp
out
xchg
xchg
stc
dec
jp
and
adc
stc
xor
fsts
scas
mov
inc
fwait
jl
aad
push
stos
mov
cwtl
xchg
push
out
push
stc
push
inc
movntq
push
add
in
sbb
iret
or
iret
add
out
mov
je
aaa
nop
jp
fadds
imul
xchg
loopne
adc
scas
lret
int3
or
cmp
ss
in
push
xchg
jae
add
shl
pusha
incb
pop
movsb
lea
lret
in
push
add
rorb
dec
add
lcall
add
add
xchg
pushf
pusha
bound
stos
sahf
mov
and
jle
jmp
in
test
int
insb
out
push
cld
dec
pop
outsl
bound
mov
mov
testb
gs
pop
imul
pop
mov
enter
sub
sbb
push
call
and
pop
jb,pt
leave
pop
cmpsb
cld
inc
ljmp
dec
jge
sub
jno
fisubrs
xchg
jne
ja
cli
bound
outsl
in
pusha
sub
insl
out
add
cwtl
mov
xor
fcmovu
cltd
lods
adc
push
pop
xchg
clc
mov
push
mov
and
testl
cmpsb
clc
push
push
pushf
insb
es
fisttpl
testb
xor
imul
mov
test
stos
clc
cmp
pop
mov
in
subl
mov
jecxz
pop
insb
ja
push
jp
mov
lock
jae
imul
jmp
sbb
or
xor
push
imul
stc
ja
imul
and
rol
inc
mov
jge
sub
inc
sbb
out
outsb
sbbl
jmp
daa
test
add
movsb
leave
ffreep
sbb
pop
imul
inc
xor
into
cmpsl
loope
mov
enter
aad
dec
dec
add
ss
cs
dec
stos
arpl
aaa
adc
in
popf
add
and
movsl
pushf
sbb
pushf
cmovs
and
xchg
jb
xchg
xchg
sub
idivl
in
jb
sbb
cmpsb
dec
fisubl
movsb
push
jp
sub
fildl
lahf
mov
mov
hlt
mov
fxch
and
daa
aas
xor
adc
out
ret
lods
push
lea
bound
inc
cmp
repz
aaa
hlt
sub
jnp
out
ds
cmp
sbb
xchg
xchg
out
pushf
sbb
add
dec
icebp
push
vpackuswb
mov
mov
sahf
push
daa
scas
into
arpl
mov
les
jae
jnp
leave
add
add
pop
arpl
push
inc
fldl
lret
dec
pop
push
inc
cli
sub
add
inc
cmp
push
adc
jbe
adc
loope
mov
mov
mov
loopne,pn
mov
push
dec
cmp
mov
mov
rclb
add
in
add
lods
xor
or
insb
dec
pop
cmp
and
loop
fldcw
dec
sub
xor
test
or
das
or
das
mov
lods
shlb
test
pop
xor
movsl
jb
sub
lahf
jg
jecxz
sbb
outsl
xchg
loope
rcll
mov
frstor
mov
cmp
addr16
movsl
sbb
inc
loopne
xchg
scas
push
add
mov
xor
mov
clc
sbb
sbb
adc
fdivp
sbb
sti
cmp
xchg
addr16
call
dec
dec
pushl
cmp
scas
push
dec
mov
adc
pop
push
mov
sub
popf
stc
lods
inc
or
popf
pop
icebp
cmpsl
mov
ret
test
std
and
add
daa
fbstp
sti
mov
sub
mov
xchg
cwtl
xor
and
inc
mov
imul
sbb
cmp
aam
mov
mov
add
scas
mov
in
mov
jno
push
pop
or
push
and
iret
mov
sahf
scas
cmc
dec
in
in
push
adc
sar
insb
jecxz
out
lcall
call
cld
data16
arpl
pusha
xchg
out
ljmp
jno
shr
mov
mov
inc
lret
mov
mov
das
jnp
test
js
aas
mov
mov
gs
cmpb
jns
jmp
testb
call
int
dec
add
and
lock
arpl
test
inc
xor
lock
insl
sub
cmp
jle
pop
ret
loope
lret
loop
insl
xor
hlt
cld
mov
jmp
psrad
out
fnstsw
mov
add
sbb
pop
mov
sub
mov
push
insl
xor
or
inc
cmp
movsl
loopne
push
dec
or
add
insb
inc
add
imul
push
sub
setnp
vmovntps
out
mov
add
or
xor
data16
sti
aas
lret
loopne
scas
sbb
cmpsb
out
dec
shl
pop
jnp
pop
xor
jno
rcrb
test
lahf
pop
data16
push
hlt
cmpl
jae
add
mov
add
jno
cmp
pop
insl
scas
pushf
mov
fwait
mov
sbb
or
call
pop
outsb
pop
sbb
jge
dec
repz
std
repz
pop
dec
roll
add
add
xchg
jge
xchg
out
xor
xlat
jb
add
push
lret
call
push
sub
jg
insl
das
ja
adcb
sbb
mov
ljmp
sub
cmp
cmp
ret
cmp
or
mov
rclb
lds
fisubrl
cli
lret
or
add
fwait
mov
jnp
into
jg
mull
fucomi
pop
pop
cmp
mov
cs
jbe
bound
fisttpl
jecxz
cmp
rcrb
lcall
inc
and
rcl
fs
sarb
ljmp
inc
js
or
pusha
adc
cltd
xchg
ret
lcall
jge
clc
test
popa
jnp
loopne
sarl
xor
rcll
push
pop
sub
dec
push
sub
sub
fstl
dec
sbb
lds
adc
jnp
push
push
mov
push
cmp
daa
jle
push
out
mov
add
add
ret
mov
cmp
sbb
sahf
cli
loope
add
ds
jp
movsl
pop
mov
out
adc
adc
popl
clc
imul
cmp
adc
arpl
loop
push
push
pop
sbb
popf
and
dec
in
mov
lret
push
cwtl
lahf
jnp
adcb
lret
or
into
dec
stos
aas
dec
in
movsb
adc
rorl
scas
inc
sub
pop
jmp
sbb
dec
addb
bound
or
xlat
push
inc
lret
inc
dec
dec
add
adc
jb
or
jle
or
scas
add
mov
inc
mov
and
xor
pop
xchg
je
nop
out
dec
lock
and
les
in
scas
mov
fisttps
ret
lcall
dec
loope
push
daa
and
out
xchg
cmp
fstps
in
loopne
xchg
callw
pop
bound
dec
xchg
push
cmp
iret
aaa
mov
or
aam
pop
je
leave
clc
mov
pop
hlt
xor
xchg
arpl
cmp
add
stc
xchg
cld
sti
mov
bound
inc
sar
dec
add
testb
std
pusha
mov
pop
fidivrs
jns
popf
scas
dec
mov
stos
inc
aaa
xchg
pop
sbbb
inc
xor
sbb
scas
mov
enter
hlt
or
iret
ss
add
jmp
push
xlat
pop
xchg
int
bound
xlat
std
in
cmp
lods
icebp
mov
xchg
dec
andb
pop
adc
add
xor
inc
xchg
rcr
adc
pop
imul
cmp
xor
imul
cld
cmp
xchg
cmp
sub
push
xchg
inc
cmp
mov
repz
sarl
sub
inc
sub
pop
xchg
and
jmp
inc
sub
cmp
aas
shrb
icebp
fiadds
adc
ss
mov
pop
mov
jge
das
aas
int
adcb
adc
pop
rcll
test
pop
ss
dec
pop
and
jb
fbld
xchg
testb
js
mov
inc
cmp
movswl
ficoms
ficompl
in
pop
jnp
mov
pop
pop
mov
mov
mov
jge
aam
bound
ret
fwait
inc
neg
sahf
or
sub
and
pop
rcrb
dec
ss
cli
xchg
mov
cmpsb
mov
lea
and
ret
aad
push
je
mov
call
adc
jmp
or
sub
inc
xor
ret
fs
out
es
insb
pop
push
mov
fs
push
xor
cltd
inc
and
lret
push
scas
out
test
inc
sub
std
mov
or
xlat
into
fidivrs
fucomip
pushf
pop
cltd
dec
mov
jno
hlt
int3
mov
adc
dec
cmp
js
push
adc
adc
fiaddl
xor
jmp
xor
dec
insl
lahf
inc
mov
or
aaa
xchg
iret
cmp
add
popa
xchg
popa
sbb
jle
xchg
insl
jmp
push
imulb
jbe
sahf
pop
sbb
fs
mov
in
pop
int
lea
inc
int
js
lret
add
gs
aad
jo
cli
or
cmpsb
dec
sbb
xor
xchg
sub
sbb
mov
ljmp
clc
pop
gs
cmp
pop
cmp
sbb
dec
mov
cmp
fstl
out
fwait
mov
ret
orl
pushf
mov
push
mov
dec
jne
push
adc
xor
in
gs
adc
into
mov
popa
bound
cmp
scas
xchg
sbb
in
cmp
jp
sbb
sbb
mov
jp
or
adc
fnstenv
sti
sub
stc
adc
outsb
xchg
insb
ljmp
cmc
movsb
loopne
sti
aas
pop
xor
and
and
sarl
cmpb
or
sti
test
cmpsb
mov
lret
pop
jle
fwait
xor
pop
pop
out
aas
xchg
mov
dec
and
testl
aad
cs
cmp
insb
repnz
jl
ficoml
pop
aaa
icebp
jmp
fnsave
mov
dec
add
xchg
dec
push
bound
in
gs
mov
lods
jge
inc
mull
jge
sub
xlat
ret
and
mov
sahf
push
dec
fidivs
sbb
out
les
aad
bound
mov
outsb
jle
test
in
push
out
rorb
int3
xchg
enter
in
fldl
push
nop
fs
out
sarl
xor
push
movsb
add
mov
and
pop
mov
popa
inc
xchg
sbb
cmp
call
dec
stos
xchg
inc
lods
cwtl
inc
pop
jmp
test
xor
jb
jle
inc
sub
mov
and
mov
cmp
push
leave
imul
mov
mov
adc
sbb
sub
add
and
add
outsl
or
in
rclb
lret
mov
bound
jge
inc
cs
pop
lret
fcompl
aad
or
lret
arpl
clc
xchg
scas
test
inc
mov
movsl
nop
les
and
cld
jmp
add
clc
and
rcrw
sahf
dec
xchg
cld
add
sti
xchg
mov
mov
in
and
sub
inc
mov
pop
repz
in
mov
and
lret
dec
out
mov
sub
sbb
negb
xchg
mov
adc
mov
loop
shll
push
adc
outsl
mov
add
sbb
rcrl
mov
xchg
ja
adc
enter
loope
xlat
inc
mov
test
mov
scas
rcrl
jns
inc
mov
pop
jo
or
or
xor
xor
rolb
stc
into
insb
adc
mov
ljmp
mov
rcr
les
test
movsl
and
int3
lods
inc
in
ds
xchg
insl
xlat
test
mov
or
sarb
inc
sub
pushfw
fs
xchg
fwait
adc
mov
pop
sub
cli
in
push
and
rolb
xor
or
imul
and
xor
fisubs
or
dec
inc
push
imul
shr
xchg
test
mov
sub
inc
xchg
and
not
in
aas
cmp
sub
rclb
dec
sbb
sbb
fsubs
mov
adc
insl
and
mov
dec
mov
pop
insl
in
push
push
push
stos
mov
mov
fbld
xor
and
fstps
loopne
jmp
push
idivl
fisttpl
xchg
mov
and
sub
xchg
js
fbld
mov
int3
adc
shll
add
dec
xor
rcrb
pop
add
pop
out
adc
sbb
mov
imul
sahf
xchg
gs
and
jne
inc
enter
sub
ja
fisttpll
out
mov
sbb
mov
push
stc
cmp
lea
scas
sar
jb
adc
mov
push
xlat
xchg
iret
jns
jb
or
sbb
mov
push
aam
push
dec
mov
es
mov
das
sbb
pop
sub
mov
xor
sbb
push
add
pop
repnz
mov
sub
lret
sbb
inc
leave
leave
outsl
lods
mov
jp
in
push
mov
scas
lcall
jne
pop
and
add
subb
mov
call
push
aam
fimull
sbb
ret
sbbl
pop
mov
test
es
and
xor
adc
jnp
ja
inc
inc
stos
cmpsl
leave
aas
pop
add
push
adc
hlt
sbb
adc
loop
jnp
mov
lret
push
and
scas
sahf
repz
lock
out
loopne
pop
lcall
xchg
hlt
add
xlat
ss
mov
dec
cmp
lds
and
clc
adc
pop
stos
jecxz
pushf
rdpmc
les
jb
divb
fnstenv
lcall
sub
sub
fildll
jmp
xor
sbb
jp
jns
pusha
adc
mov
mov
scas
or
cmp
insl
pusha
or
adc
jns
sti
add
dec
xchg
je
pop
jg
sbb
sti
lock
insb
push
xchg
and
hlt
ror
out
into
loop
inc
xchg
pop
adc
sbb
cmp
lods
lods
ljmp
cmpsb
in
add
imul
jge
mov
sbb
mov
mov
fsubrp
adc
and
jge
adc
mov
enter
cld
out
or
add
aas
cmp
and
cld
clc
les
out
mov
mov
mov
shl
add
lods
jno
arpl
inc
cmpsl
bound
sub
jl
mov
cmp
xchg
sbb
aad
enter
rcl
mov
pop
enter
test
cmp
lahf
fs
push
jmp
sar
lods
aam
mov
push
and
je
sbb
movsl
xor
hlt
ss
mov
add
inc
mov
test
adcb
pop
mov
cmp
jae
mov
imul
stos
call
leave
mov
std
fsubrs
das
adc
ljmp
mov
xorb
out
pushf
xlat
pop
sbb
xchg
lea
dec
adc
inc
adc
ljmp
sbb
mov
icebp
ja
ret
pusha
mov
inc
mov
jns
aad
in
fstl
inc
sti
mov
adc
adc
hlt
xor
insb
pop
inc
lea
pop
adc
mov
and
sbb
or
push
mov
sbb
in
stc
out
mov
dec
sti
jnp
jbe
xchg
ja
stos
dec
imul
add
xchg
mov
mov
or
fstl
dec
and
enter
xor
outsl
mov
int3
jl
mov
roll
xchg
cmc
mov
jmp
cmc
xchg
push
cmp
jae
cmpsl
or
in
or
packssdw
push
push
ds
lret
dec
out
fnstsw
push
jmp
mov
xor
jae
clc
lcall
mov
or
ljmp
sbb
fadds
xor
ja
or
std
aam
dec
sti
out
fsubrl
cli
iret
or
mov
cmc
adc
mov
jmp
mov
xchg
inc
mov
mov
stos
int
loope
and
or
mov
imul
pusha
stos
mov
lret
jmp
xchg
stos
xchg
insl
xchg
jge
cld
sbb
lcall
pop
ljmp
sub
xchg
xor
xorl
outsl
push
push
shll
mov
mov
mov
loopne
rcrl
jmp
jmp
adcb
cmp
pop
int
push
mov
sbb
push
popa
mov
notb
sahf
xlat
cmpsl
sub
leave
inc
daa
add
scas
fwait
or
jnp
stc
inc
stos
jns
hlt
add
jmp
aaa
je
cmpsb
mov
dec
int3
cli
ja
pop
loopne
out
pop
mov
adc
sub
bound
clc
jle
xchg
jne
pop
adc
jp
mov
test
cmp
ds
mov
dec
iret
fs
mov
sbb
pop
daa
je
sbb
adc
cmpsl
jo
sub
mov
cmp
outsl
jne
jne,pt
sbb
pop
cs
imul
inc
nop
in
add
sbb
xor
mov
sbb
pop
repnz
lcall
shll
xchg
add
test
out
jg
popl
mov
xor
testl
sub
jo
jp
aam
std
xor
adc
pop
lods
sbb
lock
push
imul
mov
loop
movsb
das
dec
add
sbb
cld
xchg
ljmp
sti
jo
cwtl
ss
nop
xchg
xchg
int3
mov
add
fdivrl
iret
subb
mov
stos
push
cwtl
test
popf
outsl
leave
lret
xor
jp
sbb
clc
xlat
fistps
pushw
mov
jmp
ficoms
sbb
sub
test
sbb
insl
ret
in
jns
ds
int
xchg
jnp
fucom
rclb
imul
movsb
sbb
xchg
popa
es
lods
and
jnp
cmp
mov
in
pop
add
mov
mov
adc
push
push
push
pusha
jle
int
cli
mov
push
sti
add
adc
into
fisttpll
dec
xchg
adc
ficoms
outsb
mov
jmp
add
daa
sarl
call
sub
int
fisubrs
and
mov
xlat
jmp
add
sub
and
mov
push
jns
in
out
mov
jns
pop
pop
ljmp
std
les
dec
push
mov
pop
out
es
sub
jae
pop
outsl
jl
pop
pop
push
repz
aas
dec
loop
jne
push
sahf
js
add
cmp
inc
xor
jmp
dec
inc
inc
sbb
jge
std
pop
js,pn
jecxz
dec
fnstcw
dec
cs
mov
and
sub
adc
fs
lahf
insb
xchg
shlb
scas
xlat
loop
test
inc
mov
jne
icebp
cwtl
xchg
sbb
scas
mov
hlt
int3
test
or
jge
jns
mov
imul
inc
xchg
jmp
leave
lods
or
jecxz
lods
repz
divl
lods
adc
adc
pop
addr16
mov
aas
ljmp
add
jbe
sub
mov
in
addb
mov
cmp
push
jb
jecxz
outsb
movsl
es
in
xchg
ss
popf
test
iret
push
cmp
cmp
out
mov
add
mov
mov
add
out
and
repz
ja
daa
out
lods
fld
sbb
dec
mov
jp
fs
mov
int
adc
inc
popa
int
inc
hlt
or
push
ret
and
fisttpl
lret
push
imull
sahf
icebp
scas
in
cmp
sbb
rcr
inc
inc
cmp
sub
adc
mov
adc
roll
cmp
push
aam
add
sbb
ja
movsl
icebp
add
sub
add
sbb
gs
push
in
mov
xor
add
cltd
push
repnz
lea
les
ds
mov
sub
testl
add
popf
repz
jbe
adc
call
in
pop
gs
mov
iret
mov
pop
roll
faddl
mov
xchg
mov
cmp
mov
fwait
push
lock
mov
pop
xchg
xchg
jne
icebp
lock
add
xchg
lahf
xorl
loopne
inc
enter
out
and
jge
sbbb
inc
fildll
mov
pop
clc
leave
sub
fnsave
add
mov
xchg
push
mov
pop
push
adc
mov
psubusb
repnz
js
jne
xor
mov
push
lcall
adc
jne
xchg
jecxz
jbe
or
pop
mov
sti
loop
daa
rcrl
pop
inc
loop
ljmp
xor
lock
xor
stos
jp
pusha
lea
dec
cmp
test
pop
nop
cld
aaa
sbb
lods
cltd
or
mov
adcb
scas
outsb
scas
sbb
dec
sarb
data16
cmp
shlb
test
mov
mov
les
pop
pusha
lds
in
pushf
xchg
mov
call
mov
dec
mov
adc
mov
pop
pop
cmp
xchg
test
jnp
movsl
dec
clc
jmp
inc
inc
adc
sti
pop
or
jg
or
testl
add
xchg
sbb
daa
int3
insb
mov
push
sbb
iret
scas
mov
icebp
popf
push
in
rorl
lcall
xchg
push
mov
inc
outsl
pusha
dec
std
mov
mov
fisttpl
mov
xchg
inc
cltd
dec
mov
orl
subb
jno
push
movsb
pop
cli
adc
lods
jge
in
int
jb
ljmp
mov
push
dec
test
fadds
addl
sub
jnp
movsb
int
jge
mov
mov
dec
cmp
loopne
push
rcr
push
jle
add
sbb
pop
popf
mov
sbb
lock
push
arpl
inc
or
jns
popl
mov
pop
lods
adc
push
mov
stos
sub
sbb
je
imul
pop
mov
jbe
xlat
cmp
pop
mov
mov
shrl
outsb
test
lret
jp
ret
outsb
fs
pop
in
xchg
aaa
pop
ljmp
xchg
int
cmp
daa
adc
mov
int
outsl
or
push
fisubrs
sbb
push
jp
jne
or
add
or
je
popf
adc
lods
push
mov
ljmp
lea
outsb
add
fldl2t
outsl
mov
inc
mov
and
insl
ss
inc
mov
les
inc
cmp
pop
mov
out
je
mov
or
movsb
pop
bound
pop
test
dec
add
cli
push
adc
fdivrs
subb
pop
adc
fldl
cmp
mov
sbb
out
mov
fcompl
xchg
adcb
jne
cmpb
pushf
ret
andb
or
addr16
pop
inc
dec
cs
popf
mov
arpl
inc
mulb
insb
cmc
and
xor
jbe
xor
push
leave
cmp
adc
sub
lcall
sub
ret
icebp
adc
mov
pop
repnz
adcl
xor
jbe
inc
mov
adc
cli
dec
jecxz
mov
jecxz
inc
js
add
push
es
dec
out
sbb
decl
ljmp
ljmp
sub
js
aas
xchg
mov
imul
mov
lret
mov
test
scas
les
out
aas
sbb
mov
adc
xor
fdivrl
cmpsb
pusha
or
xchg
and
cvtdq2ps
add
les
nop
lahf
pusha
js
dec
leave
stos
add
fs
inc
push
out
outsl
cmpsl
ja
adc
loop
mov
lds
xor
pop
out
cmp
sahf
add
push
je
push
cltd
sbb
push
dec
dec
sbb
sub
xor
je
mov
lcall
cmpsl
xchg
mov
inc
cmp
fisubrs
xor
inc
fnsave
mov
xor
int
outsl
int
lods
xchg
fs
repz
and
repz
adc
fistl
sub
pop
fnstenv
loope
cmp
jl
mov
lods
cmpsb
pop
xchg
pop
stc
sbb
aas
pop
mov
iret
jno
jmp
lea
and
sbb
insl
fadds
fwait
popa
cmp
jg
xor
fistps
test
push
add
push
adc
pop
mov
cmpsl
add
dec
sbb
dec
sub
mov
es
ljmp
jbe
mov
push
les
in
adc
std
and
enter
lods
daa
sbb
je
adc
mov
stos
bnd
and
aaa
xchg
inc
std
clc
mov
test
std
jnp
pop
fs
notb
movsl
test
mov
call
sbbl
shrb
gs
sti
and
inc
mov
sub
test
js
jp
or
inc
xchg
sti
adc
inc
mov
repnz
sub
lret
loopne
and
stos
lcall
lret
mov
stc
cld
xchg
gs
xor
stos
adc
mov
lret
sbb
push
insl
mov
jl
in
xchg
pop
dec
jnp
pop
dec
ret
adc
add
xor
and
sub
fsubs
inc
push
test
out
lods
xchg
sti
loop
lods
out
xchg
or
out
daa
push
jae
or
xchg
outsl
sti
fiadds
fwait
fists
jns
cmpsb
dec
jmp
or
mov
cmp
mov
daa
pop
popa
jo
aaa
push
sbb
xchg
mov
leave
std
lret
mov
lcall
mov
cmc
dec
push
mov
icebp
jbe
mov
sub
test
inc
rorb
shll
cld
mov
ret
loope
addl
jns
in
jns
je
sbb
pop
pop
pop
push
rclb
sub
fs
xchg
in
js
out
inc
adc
je
stc
test
or
lret
jne
mov
inc
fs
sub
lret
ss
pop
cmc
mov
pop
mov
hlt
sti
sub
in
xchg
dec
in
cltd
pop
scas
lods
cmp
cmp
sbb
and
stos
out
scas
enter
cmp
jno
mov
mov
insl
dec
mov
addr16
and
loopne
lods
pop
ljmp
sub
pop
fldl
aam
xchg
jnp
pop
ficompl
mov
jmp
and
mov
sbb
dec
jle
nop
mov
ret
loopne
add
sub
mov
stos
mov
cmp
dec
les
mov
fsubrs
sbb
ret
in
fwait
mov
push
sbb
mov
push
aaa
cmp
sbb
dec
mov
lods
in
mov
push
push
lds
fisubs
xor
cmpsl
jb
incb
xchg
sub
aad
sub
das
xlat
mov
add
enter
sub
dec
gs
cmp
bound
or
lret
pusha
mov
adc
out
test
nop
sub
sub
inc
insb
jb
out
imul
jbe
insl
adc
aaa
iret
lcall
out
dec
ret
ret
jge
mov
mov
xlat
add
fstps
pop
mov
out
or
sbb
jp
sub
jmp
mov
adc
and
rcrl
rorl
ja
aas
pushf
into
mov
inc
ret
pop
sbb
imul
scas
loop,pt
cmpsl
out
xchg
test
lock
call
js
loope
pop
stos
jge
mov
insl
pop
das
and
dec
xlat
in
std
mov
shrl
xchg
sarl
call
adc
arpl
cltd
clc
pop
pop
push
mov
scas
mov
lret
push
mov
es
cwtl
xchg
jle
push
sbb
jecxz
push
and
test
push
dec
dec
cmc
dec
fdivp
bound
or
outsb
cwtl
sbb
inc
stos
rcl
je
lret
std
stos
mov
fwait
lods
insb
int
push
pop
mov
addb
jp
movsb
enter
pushf
pop
repz
popa
and
fcoms
jo
mov
sub
leave
and
fbld
stos
push
sbb
and
clc
aaa
icebp
imul
adc
loopne
adc
fldenv
push
fsubrl
cmp
pop
jno
lret
jg
lock
es
popf
add
sbb
sub
add
xchg
xlat
mov
mov
ret
pop
hlt
popa
mov
das
mov
push
xlat
gs
scas
dec
mov
loopne
adc
pop
mov
inc
pop
xchg
loop
mov
xchg
clc
lock
jb
lods
xchg
clc
out
lret
push
mov
aaa
mov
adc
outsb
sbb
add
loopne
jmp
lcall
js
test
loopne
aam
call
out
push
jp
inc
or
mov
mov
add
inc
ficoml
add
test
add
fs
xchg
pop
mov
orl
mov
rcr
inc
cmpsl
lret
inc
pushf
cmp
push
fwait
out
pop
scas
inc
adc
leave
pop
test
imul
repz
fcoms
fdivp
pop
nop
sti
in
pop
mov
push
jmp
test
adc
xchg
imul
movsl
arpl
mov
imul
out
fwait
ret
outsb
xchg
outsb
push
sub
push
fcoml
repnz
mov
pop
mov
lret
in
lret
mov
les
loopne
pushf
xchg
iret
rcrb
jo
adc
dec
call
rol
incb
pop
inc
cvttps2pi
add
xlat
pop
inc
push
imul
adc
sbb
or
lahf
enter
mov
jo
pop
stc
pop
ds
ret
das
jg
cli
dec
orl
mov
jge
rcr
stos
cmp
inc
jns
dec
arpl
js
test
pop
adc
cmp
and
ja
jl
out
insb
test
insb
jmp
xchg
mov
sub
dec
mov
xchg
lock
pop
add
mov
js
inc
repz
hlt
lcall
lods
pop
aad
dec
out
inc
dec
ret
js
xlat
cmp
pop
popf
push
cltd
jge
mov
push
mov
out
inc
icebp
dec
fisubs
mov
lea
shlb
and
jl
or
lock
mov
loope
in
lock
cwtl
pop
cltd
int3
xchg
xchg
faddp
scas
gs
dec
inc
cmpsb
jecxz
addr16
inc
sarl
ja
insb
dec
push
sahf
cld
test
inc
xor
sbb
fucomip
add
stos
sahf
iret
aam
sbb
repz
leave
mov
pop
adc
and
adc
mov
jmp
or
cmpsb
xchg
push
shr
fbld
std
xchg
add
push
bound
cmp
adc
cmp
adc
rcl
rclb
xchg
ret
test
dec
push
push
data16
xchg
dec
lcall
sbb
ja
aad
adc
xchg
pop
add
insb
mov
fsts
push
and
aaa
pop
mov
mov
sub
fadds
cs
adc
test
pop
rcrb
cmp
cmpsl
cwtl
scas
jb
adc
movsl
ja
adc
imul
push
mov
pop
push
inc
mov
daa
popf
outsb
inc
scas
inc
js
xchg
mov
push
or
sub
jle
xchg
insb
out
insl
xchg
and
outsb
add
test
mov
adc
pop
mov
xor
movsb
mov
inc
pop
sarb
sub
sbb
inc
repz
xchg
or
icebp
or
cmp
adc
lods
and
stos
les
fcompp
dec
pop
pop
stos
hlt
fistps
xchg
mov
jae
cmp
mov
dec
or
iret
and
call
xor
jge
das
arpl
cwtl
into
cltd
sub
je
movsb
mov
pushf
sub
rclb
aaa
xchg
scas
out
mov
or
mov
out
loop
out
cwtl
xlat
loope
inc
xchg
push
test
dec
jnp
in
jbe
fildl
xchg
popa
inc
xor
adc
lahf
mov
test
add
insl
xchg
in
sti
stos
add
mov
loope
add
sub
jl
outsl
cmc
shlb
shlb
jbe
add
pop
push
clc
mov
js
imul
pop
or
or
pushf
cltd
ret
jecxz
push
jne
mov
add
cmp
sub
dec
cmpsl
fcompp
mov
mov
dec
scas
sub
pop
mov
lods
jp
dec
in
fbstp
inc
cmpl
and
negl
dec
out
in
xchg
in
fiaddl
xor
shll
icebp
jle
push
nop
lods
mov
fcmove
xchg
test
inc
pop
fimuls
xorl
xchg
dec
test
imul
jg
inc
roll
inc
add
fldl
ss
pop
sbb
mov
push
jge
clc
adc
insb
lahf
jbe
aaa
xor
mov
loope
pusha
js
out
fldenv
cmp
push
and
mov
pusha
push
std
cmp
cmp
jo
leave
jmp
dec
mov
xchg
cmc
sub
jle
mov
sbb
and
fidivrs
pop
lock
jne
and
test
or
add
inc
sub
sbb
stc
cs
push
into
cs
add
aam
pop
out
clc
inc
popa
sbb
test
mov
and
push
ljmp
fdivrl
mov
or
into
xchg
aaa
imul
sbb
and
jns
lods
dec
or
adc
xchg
push
lds
lret
out
jne
jecxz
xchg
movq
sbb
dec
sub
outsb
cmp
gs
pop
inc
jns
les
mov
jno
scas
imul
into
xor
nop
hlt
adc
mov
and
push
filds
inc
mov
sbb
adc
dec
dec
adc
fs
adc
add
stc
jecxz
push
add
in
clc
je
mov
pusha
jnp
jmp
jno
lret
mov
les
pop
jmp
test
xor
push
jae
xor
push
lea
sub
arpl
scas
lock
xor
xor
mov
sbb
loope
cmp
xor
jle
cmp
dec
and
mov
jb
mov
in
sub
sahf
popa
jae
out
imulb
add
push
adc
inc
rcrb
movsb
xchg
and
sbb
cli
clc
rclb
mov
or
or
int3
repz
lods
int
mov
push
ror
loope
jl
cli
mov
xor
mov
test
or
sbb
mov
xor
cmp
mov
add
ds
cmc
jg
insl
pop
add
push
cmc
xchg
jae
cld
jnp
sbb
scas
rcrl
pop
sbb
and
ret
jmp
loopne
jmp
mov
push
test
push
xor
and
push
test
sbb
pop
aaa
cld
xchg
scas
push
xor
loopne
aam
jb
jb
andl
pop
mov
mov
inc
cmp
mov
aad
cmp
cltd
lret
jb
sub
mov
or
sbb
cwtl
nop
shll
fadds
fnsave
clc
xchg
fists
add
mov
add
pop
sbbb
pop
ret
adc
int3
fldcw
mov
ds
push
xor
sub
enter
dec
adc
inc
jb
mov
cli
jnp
sbbb
cmp
lcall
pop
or
mov
xor
or
loop
inc
fbld
icebp
mov
adc
scas
cmp
setle
sahf
mov
jecxz
push
and
xchg
lods
les
hlt
dec
mov
push
out
sbb
es
adc
push
mov
jbe
data16
incb
mov
xor
adc
xchg
data16
test
in
jge
pop
mov
scas
fldl
mov
push
movsl
dec
stos
aad
addr16
xor
mov
cmp
test
enter
roll
shrl
jp
test
xor
and
mov
cmpb
push
mov
push
aas
mov
clc
in
inc
dec
push
into
jne
jae
fstps
push
pop
gs
xor
lret
data16
icebp
fcmovnbe
std
pop
and
jl
jecxz
decb
insl
fwait
push
or
daa
ja
pop
ja
in
aas
adc
pop
xor
mov
jmp
sub
and
imul
inc
xor
jno
testl
push
jb
push
std
insl
outsl
test
rcrl
mov
fnsave
add
or
pop
call
popf
fiaddl
adc
loop
mov
sub
add
cwtl
lret
js
mov
jo
adc
mov
mov
xor
loopne
inc
enter
stc
sbb
mov
jb
and
je
jne
movsb
mov
dec
ret
xchg
or
inc
lcall
fwait
hlt
loop
shl
inc
push
loope
scas
popa
adc
js
add
jl
or
cmp
adc
das
xor
call
cld
int
lret
jge
daa
xor
mov
arpl
push
pop
sbb
insb
lea
pop
fwait
hlt
insb
fdivrs
lcall
mov
mov
gs
xchg
sbb
test
xlat
mov
mov
leave
mov
or
jo
adc
xor
cmpb
xor
sub
lock
xchg
xchg
ss
sbbb
or
pop
sub
stos
neg
iret
mov
divb
aaa
ljmp
pop
ljmp
pop
pushf
add
call
pop
mov
loope,pt
sti
xchg
into
sub
add
pop
sbb
sub
xchg
rcll
inc
sub
inc
mov
or
adc
in
lea
out
push
sarb
daa
adc
hlt
sbb
push
xchg
mov
mov
cmpsb
ds
pop
loop
jge
pop
shrl
int
push
and
jmp
popf
aaa
in
insl
mov
repz
clc
ror
cmp
push
lret
stos
mov
fisttps
dec
daa
je
mov
dec
xchg
hlt
push
adc
sbb
arpl
cmpl
pop
inc
pop
ret
fildl
xor
ret
add
push
dec
cmp
stc
cmc
dec
adc
mov
test
ficoml
sti
mov
push
repz
xor
test
enter
cmc
bndstx
rorl
stc
add
mov
movsl
xchg
imul
mov
or
cs
lds
or
add
jb
inc
out
dec
jbe
shll
shll
jge
jge
sub
cmp
sub
cmp
lahf
test
mov
or
fiaddl
stc
je
jns
in
out
ret
mov
adc
in
add
cmpsb
pushf
hlt
bnd
jl
mov
mov
push
es
cmpl
cmc
push
lret
int3
clc
jg
cmpsb
test
mov
sahf
sahf
nop
push
xor
add
int3
add
lock
ja
nop
por
inc
push
lret
push
out
test
inc
dec
insb
jo
pop
ret
testb
aad
mov
xlat
adc
insb
repnz
sti
jnp
sbb
iret
rorb
fistl
cli
je
pop
adc
push
ret
pop
stos
and
shlb
sbb
add
test
leave
insb
mov
jne
scas
fadds
inc
pushf
and
push
jns
lods
icebp
xchg
aaa
arpl
insl
pop
jno
sub
xor
lds
jae
xchg
inc
add
call
xor
in
fcmovbe
push
cmp
xlat
pop
lcall
fimull
je
ret
push
repz
fisttpl
and
popa
shrb
lcall
inc
ljmp
pop
aas
or
mov
jle
adc
dec
add
sbb
inc
rorb
sahf
daa
cmpsb
push
sub
aam
push
push
loopne
ret
mov
pop
out
pextrw
pop
xchg
xchg
jb
push
xchg
xor
mov
inc
decl
shll
std
cli
push
sub
lret
fcomp
pop
sbb
push
roll
fcmovbe
mov
jge
gs
and
mov
nop
mov
adc
fnstsw
pop
sbb
cmp
leave
pop
mov
icebp
mov
jb
add
pop
stos
loope
scas
push
lds
mov
mov
inc
dec
pop
jo
add
bnd
and
fisubrs
adc
out
lcall
xchg
jge,pt
insb
push
xor
repnz
or
out
sbb
ss
lret
enter
mov
insb
test
sbb
loopne
mov
pop
lock
mov
sub
pop
or
repz
pop
out
test
hlt
in
std
xor
adc
cmc
cmpsb
lods
dec
pop
stos
cmp
and
jnp
pop
out
mov
out
xchg
rcll
pop
and
in
mov
xlat
mov
repnz
adc
scas
xchg
push
fwait
or
stos
push
push
pop
in
insl
xor
sub
push
mov
pusha
stos
adc
push
repnz
xlat
and
rclb
mov
fsubrl
ljmp
loop
mov
movsl
lahf
sbb
call
inc
and
adc
sub
stos
ret
adc
add
loop
lret
or
sbb
mov
add
addr16
iret
mov
inc
mov
mov
xchg
add
mov
jmp
mov
mov
test
mov
xchg
in
dec
inc
hlt
lock
scas
orl
in
inc
pop
inc
aam
in
ffree
das
dec
push
inc
pop
xor
sub
sub
xor
or
xor
lahf
inc
jmp
scas
andb
add
icebp
int3
or
xchg
jb
mov
aam
and
dec
outsl
push
jle
xchg
in
cmp
jl
leave
stos
in
lods
and
cli
mov
jle
push
inc
jbe
xchg
rol
xchg
adc
mov
sbb
mov
js
xchg
jb
and
aas
mov
test
push
test
pop
xchg
lahf
cmp
push
dec
inc
fiadds
scas
enter
jp
xor
pop
jge
lock
leave
fs
sbb
cltd
in
mov
and
cmp
out
out
inc
push
jns
mov
jo
jecxz
scas
push
cmp
stos
sub
les
mov
adc
push
push
dec
ret
test
dec
push
inc
cs
dec
pop
push
push
jnp
sbb
clc
mov
enter
mov
fsub
sbb
divps
xor
lret
aas
sub
push
imul
and
adc
sbb
dec
push
insl
out
mov
repz
mov
cmc
or
xchg
jle
ja
pop
mov
and
sti
mov
fdivrl
insl
pushf
stos
add
fnstcw
out
mov
add
mov
and
pop
in
into
xchg
mov
insl
fs
mov
test
int3
dec
xchg
mov
aam
dec
push
fcomp
xchg
xchg
fists
xor
mov
int3
jmp
cs
push
or
push
push
iret
sti
push
jae
in
or
imul
and
leave
mov
pushf
dec
xor
repz
dec
data16
xchg
dec
out
mov
fs
arpl
cmp
add
mov
or
push
and
cli
test
or
jns
cmp
xchg
enter
and
pop
sbb
dec
dec
cmp
pop
xchg
pusha
mov
jo
pop
and
mov
gs
ret
rclw
jo
dec
mov
sbb
call
js
adc
sub
add
pop
in
ds
add
aaa
loope
adc
sbb
jno
ret
out
icebp
dec
rcrl
lahf
mov
jge
inc
and
dec
lock
jl
push
xchg
aas
out
xor
repz
cmpsl
mov
aas
dec
jne
mov
and
inc
pop
pop
push
sbb
cmc
sub
outsl
inc
xor
in
jge
xchg
jp
fldt
cmp
mov
in
sub
add
mov
les
inc
cwtl
adc
pop
xchg
dec
xchg
sub
sbb
js
stos
orl
jle
pop
jbe
loope
es
add
mov
out
rcll
push
shlb
gs
das
sbb
dec
cld
and
insl
scas
pop
inc
pop
sub
jne
pop
cmp
sbb
dec
cwtl
gs
mov
push
inc
inc
call
mov
pop
sbb
push
inc
lods
test
push
test
mov
cltd
and
dec
mov
pop
lea
rcrb
jne
pop
rcl
outsb
mov
jne
or
sub
je
roll
dec
mov
and
jns
inc
lahf
or
or
push
pop
fidivs
add
jae
mov
push
pop
leave
into
adc
cli
pop
adc
scas
mov
jo
ds
outsb
dec
dec
sbb
adc
mov
add
sbb
sbb
punpckhdq
or
push
inc
dec
sbb
lahf
fimuls
jp
aam
mov
cmp
xchg
fs
push
iret
xor
dec
test
xchg
and
insb
mov
js
mov
cmpsb
sub
mov
mov
leave
sbb
in
or
cltd
dec
xchg
mov
adc
sbb
cmp
mov
xor
aaa
scas
fisubrs
mov
pop
adc
xchg
nop
push
les
sbb
add
test
pop
loope
int3
pop
in
lock
in
movsb
sbb
into
xor
mov
jb
mov
es
rorb
into
js
xchg
loop
les
xor
stc
xchg
jb
repnz
pop
mov
or
add
inc
pop
sub
imul
std
adc
adc
das
mov
xchg
sub
test
add
fwait
add
dec
jg,pt
push
mov
or
push
jae
test
lahf
or
call
jns
inc
or
or
dec
stos
or
jp
push
jnp
lods
mul
push
xchg
ret
xor
mov
movsl
mov
mov
stos
mov
ret
sahf
movsl
fiadds
stc
jl
rcl
out
xchg
pop
mov
les
testb
add
lahf
xor
pop
arpl
dec
pop
mov
push
add
cmp
testb
jmp
cwtl
daa
dec
fiaddl
mov
sub
lds
in
lcall
repz
xchg
pop
push
std
divb
jne
sti
into
int3
inc
jnp
pop
sbb
dec
ds
or
stc
ljmp
movsl
sbb
xor
popf
lahf
xchg
dec
repz
jns
push
cmp
adc
popa
out
cmp
icebp
imul
inc
iret
xchg
lahf
hlt
cmp
dec
mov
adc
xor
jne
mull
pusha
into
popf
popf
outsl
xchg
pushf
pop
call
in
notb
sbb
inc
cmp
call
popa
and
call
loop
jecxz
dec
push
cmp
daa
loop
out
gs
js
addr16
or
mov
ss
scas
in
fistpll
push
loop
sbb
dec
in
stos
jno
jmp
pop
or
enter
stos
mov
stos
pop
aaa
push
push
loope
lea
pusha
xchg
aam
push
mov
in
dec
dec
js
push
dec
add
insl
or
xor
and
jle
cmpl
adc
mov
stos
cmp
dec
sbb
inc
pop
lds
popf
stos
imul
adc
sub
adc
lcall
in
rol
mov
push
add
mov
pop
shlb
and
fsubl
repnz
jle
xor
inc
jmp
dec
mov
push
movsl
mov
adc
cmp
jnp
jg
repz
xchg
mov
sbb
and
xlat
ljmp
adc
mov
pop
push
lds
adc
dec
adcl
push
loope
jmp
aas
addr16
arpl
xchg
pop
pop
adc
push
shrb
fdivl
push
or
push
insb
cmp
movsl
jae
outsb
je
popf
dec
pop
mov
push
imul
iret
ljmp
xchg
stc
lods
inc
mov
sub
lret
pushf
push
pop
dec
jb
fistpl
jns
add
dec
dec
lea
mov
iret
nop
or
or
inc
mov
aad
inc
sbb
fnstsw
hlt
fisubrl
js
mov
gs
insb
sub
les
daa
ljmp
xchg
hlt
fsubrl
mov
imul
adc
adc
aad
arpl
add
loopne
fcompl
dec
adc
mov
mull
mov
xchg
unpckhps
fadd
inc
arpl
lods
push
shl
xchg
int3
or
xlat
icebp
ds
syscall
pushf
sub
push
jge
fwait
shll
cmp
mov
sarl
es
jne
push
push
outsb
mov
or
fdivrl
xchg
sbb
mov
sbb
dec
cmp
sub
out
xchg
aas
loopne
out
push
jge
repz
push
push
outsl
rolb
xchg
aad
clc
add
push
lock
mov
stos
pop
fs
fcomps
sbb
lea
dec
cwtl
jmp
insl
loope
insl
or
ljmp
or
ds
xor
jge
mov
mov
bound
fdivrs
and
nop
dec
jge
popf
lret
and
int3
repnz
pop
addr16
outsb
mov
jo
popf
out
pop
jmp
push
faddl
lds
dec
ret
ja
xchg
xorl
push
add
inc
mov
decl
push
mov
aas
lock
add
sub
in
int3
xor
push
loopne
lahf
jbe
sub
ds
ss
lds
sbb
daa
sub
mov
lcall
sub
cmp
add
add
stc
and
lock
leave
les
test
sub
ss
repz
push
ret
outsb
xchg
pop
mov
inc
out
int
adc
mov
stos
out
insb
add
xor
mov
xchg
mov
xor
mov
aam
cmpl
sbb
mov
cmp
mov
notl
movsb
mov
enter
mov
mov
mov
test
sarb
xchg
stos
inc
andb
out
mov
push
cwtl
lret
jp
lcall
mov
call
adc
out
int
pop
arpl
rorl
lods
ret
and
sbb
insb
mov
xchg
repz
ljmp
mov
not
cltd
inc
mov
in
mov
das
fcompl
jns
cld
fs
scas
push
subb
cmp
pushf
jo
fisttpl
fbstp
pop
mov
pusha
fisttps
ds
cmp
xor
iret
pop
push
lods
testb
mov
mov
push
pop
mov
fmuls
arpl
mov
mov
jl
pusha
xchg
pusha
pop
nop
std
in
mov
cwtl
xor
mov
in
push
pop
loope
adc
loopne
inc
jae
je
cld
inc
in
or
jno
pop
fyl2x
aam
fistpll
mov
fwait
jge
movsl
xchg
mov
or
fiadds
cmp
jnp
out
sahf
icebp
out
push
hlt
imul
andl
mov
xor
add
jge
mov
sar
and
sbb
lock
scas
inc
jp
into
push
inc
jne
jno
push
testl
lods
xchg
push
aas
lock
jne
inc
into
hlt
fs
les
add
ret
aas
xlat
std
jne
mov
ja
dec
test
aas
inc
xchg
repz
imul
scas
sarb
pop
clc
lea
pop
mov
push
push
negl
outsl
sub
mov
xchg
or
jno
add
or
cmp
repnz
push
mov
and
les
xlat
push
repnz
xchg
xchg
mov
arpl
out
add
adc
cmp
pop
jp
insb
insb
cmpsl
and
jb
jnp
outsb
jne
iret
sub
into
sub
mov
push
mov
push
push
rolb
jb
sahf
shll
mov
call
mov
shr
movsb
shll
add
popf
ret
das
rcrb
dec
loopne
sub
mov
dec
test
add
fsubp
mov
iret
cmp
leave
lret
out
in
lret
sbb
arpl
test
arpl
int
repz
iret
jge
xchg
imul
dec
jmp
ja
mov
ds
out
stc
frstor
cwtl
pop
addl
ficomps
fbld
mov
sub
addr16
adc
into
js
jmp
popa
xchg
sar
pop
sbb
and
in
ss
test
xchg
ret
cmp
mov
pop
mov
js
subb
or
shll
lods
imul
pop
mov
xchg
scas
and
dec
pop
push
aam
pop
cld
daa
int3
pop
jnp
divl
or
mov
hlt
mov
xchg
mov
movsb
pusha
and
out
btc
mov
fisubl
push
in
fldl
popf
gs
ds
cmp
adc
int
pop
sbb
mov
mov
adc
xor
jmp
jle
pop
xchg
jne
mov
inc
adc
mov
push
inc
jne
aad
loopne
in
pop
mov
aad
cmpsb
fmull
dec
mov
or
sub
test
sbb
outsl
push
mov
push
icebp
mov
lds
xchg
nop
push
fstpt
loopne
mov
add
xor
jmp
push
out
je
mov
dec
mov
mov
in
xchg
jns
lods
out
xchg
mov
in
stos
js
push
pop
orb
enter
ljmp
cwtl
into
les
jbe
and
ja
in
mov
cmp
andnps
or
sub
mov
aas
push
fsubs
mov
jl
nop
mov
dec
out
and
add
lods
mov
fidivrl
inc
in
pop
push
mov
jp
lahf
sub
inc
xor
mov
movsl
pop
cmpsl
mov
or
adc
fmulp
or
int
xlat
push
in
cltd
cmc
add
pop
add
dec
cmp
xchg
imul
mov
xchg
mov
sti
adc
rcrl
mov
sub
clc
and
lret
lods
and
rorl
mov
jnp
inc
mov
or
gs
inc
dec
push
dec
outsb
inc
sub
mov
out
psubsb
xchg
ret
cmc
lahf
jnp
push
lds
push
push
out
jno
incl
cmp
push
xor
fdivs
push
rcr
in
fisttps
in
inc
cmp
mov
or
adcb
outsb
pop
je
xchg
adc
fdivrp
mov
test
cmpsl
cmpsb
ss
pop
clc
pop
flds
lock
cltd
aad
jns
sbb
cmp
lret
sbb
adc
cwtl
bound
loopne
sbb
xor
or
lcall
mov
cmp
pop
sub
movsb
adc
test
inc
xchg
mov
out
imul
aam
cmp
addr16
sub
out
sahf
cmp
inc
pop
sub
jge
push
mov
out
in
dec
jns
and
cmpsl
sbb
adc
pushf
pop
adc
fsubrl
cmpsl
in
cmp
or
add
repnz
sbb
lret
mov
nop
sbb
in
mov
pop
enter
xor
pusha
mov
dec
rorb
lea
mov
mov
xchg
lea
lret
pop
xor
loop
loope
and
out
movsb
shl
dec
fisttpl
fwait
adc
adcl
xor
adc
cmp
fmuls
ds
jno
lahf
loop
xchg
hlt
push
mov
shrl
fdiv
xor
popf
mov
or
inc
lods
inc
orl
push
not
or
inc
test
bound
aas
adc
ret
out
mov
insl
or
add
ss
cmp
lods
and
aas
dec
shll
and
daa
loop
inc
call
dec
and
outsl
push
lea
jge
cmc
sarl
nop
sbb
lock
add
iret
frstor
xchg
shll
sahf
inc
xor
jno
orl
adc
shrb
into
out
cmp
inc
add
fisttps
pop
rcll
dec
mov
je
je
stos
pop
aas
jle
stos
mov
and
cld
sbb
sub
mov
push
shrl
cmp
lret
flds
push
shlb
xchg
loopne
dec
pop
jns
hlt
dec
and
or
stos
jecxz
repz
std
rcl
shll
movsl
insb
push
pop
cmp
mull
insb
inc
jmp
push
mov
retw
or
and
or
fistps
ret
adcb
fsubrp
pop
sbb
or
push
mov
or
loope
stos
pop
popa
rorl
jbe
push
pop
push
pop
imul
cmp
add
mov
pop
mov
arpl
out
nop
mov
cld
mov
and
add
lock
dec
lahf
std
repnz
sub
pusha
add
out
loope
add
test
xchg
adc
movzbl
js
loop
add
fdivs
pop
inc
cmp
sub
push
dec
mov
popa
scas
jg
pop
pop
adc
aas
pop
scas
jne
mov
stos
in
mov
sub
xor
push
ljmp
ja
mov
clc
scas
and
or
cmp
xlat
test
push
cmpsl
jnp
sbb
xchg
inc
and
adc
pop
mov
cmp
xchg
ds
sti
loop
sbb
mov
push
clc
jae
gs
xlat
dec
mov
arpl
inc
nop
nop
xchg
jne
mov
sub
imul
mov
or
fisubrs
dec
inc
mov
arpl
sub
dec
adc
test
out
pop
dec
sti
lret
pop
add
mov
cli
aaa
jle
incl
push
fadd
ja
stc
cmp
lods
stos
or
pop
adc
das
cmpsb
cmp
mov
cmpsl
sub
xor
pop
push
aaa
cmp
cmp
js
loope
loope
jb
pop
ret
push
xor
jmp
shlb
iret
pop
ss
pop
ss
sbb
das
mov
inc
inc
mov
nop
inc
push
add
pop
out
push
ret
sub
add
orb
mov
mov
jo
pop
adc
ret
stos
and
dec
push
sti
rcll
and
mov
imul
ja
shr
mov
xchg
ss
loope
ret
lcall
jo
xchg
leave
inc
insb
sbb
sbb
lcall
dec
add
mov
imul
sbb
jp
xchg
stos
push
xchg
xor
push
imul
sub
js
call
push
sarb
xor
aam
or
sub
lock
stos
nop
inc
icebp
test
rcrb
insb
cmpsb
mov
add
and
dec
fcompl
push
push
sub
cmc
pop
fwait
int3
xor
cmp
jge
arpl
fdivrl
cltd
jmp
jns
daa
jge
push
into
leave
addr16
orb
aam
add
xchg
cli
sub
mov
fcom
add
popf
add
pop
lret
shrb
addr16
fcomps
inc
cmp
stc
movl
outsb
fisttps
movsb
push
cmp
cld
jns
mov
sahf
mov
mov
into
xor
xchg
fdivr
xchg
xor
mov
lret
mov
push
scas
in
call
cld
out
sbb
lahf
or
nop
pop
insb
andb
mov
out
push
inc
adc
push
jl
lret
mov
jnp
push
pop
mov
cmp
pop
addb
sub
pushf
lea
out
bound
jp
jp
fsubrl
and
sti
adc
mov
mov
mov
hlt
dec
pop
pop
push
jb
shlb
xor
pop
push
ds
pusha
mov
lcall
pop
pop
jg
push
fnstsw
dec
jle
shrl
push
out
insb
push
xchg
xchg
insl
mov
sbb
rcl
fbstp
lods
int
loopne
lea
cmp
cwtl
and
jl
mov
in
int3
sub
popa
imul
pop
push
fidivrs
imulb
lcall
mov
adc
js
add
loop
pop
mov
mov
push
dec
xchg
in
lock
imul
fstp
pop
shll
sub
mov
push
mov
cld
mov
lods
scas
cltd
shll
out
mov
mov
mov
mov
and
fmull
inc
dec
pop
pop
sbb
sbb
sub
fnstcw
loop
mov
or
push
mov
hlt
xchg
jnp
xorb
ficomps
lds
scas
les
sbb
xchg
in
pop
or
dec
adc
push
push
jbe
in
cs
pop
daa
xchg
int
data16
push
push
in
hlt
test
jno
pusha
int3
rcrl
movsl
push
mov
and
adc
push
mov
adc
lea
and
aas
mov
cmp
repz
dec
in
ret
in
xor
cmp
xchg
fwait
xor
xchg
addr16
inc
sbb
out
and
mov
inc
sub
adc
cmpl
lcall
mov
in
or
out
sub
adcb
cmpsl
lds
dec
pop
cs
jle
sbb
push
mov
fcoml
cs
fistps
and
rclb
roll
hlt
push
sbb
jmp
push
daa
mulb
rorb
inc
ljmp
pushf
gs
inc
or
dec
sub
xor
fistpl
or
pop
lods
mov
jecxz
adc
pop
das
dec
fdivl
push
lds
xchg
sbb
syscall
ss
shll
mov
fsubr
mov
mov
test
cli
dec
mov
xor
nop
das
pop
push
or
imul
jge
enter
inc
mov
add
xchg
mov
xchg
fnsave
add
cmpl
inc
add
pop
adc
add
dec
std
rorb
jge
push
push
fistps
hlt
xchg
sbb
ss
aad
ss
icebp
jg
movsb
and
pop
ret
and
sbb
jmp
aam
jl
popf
adc
cltd
xchg
jno
int
jl
cmpsl
pop
jge
mov
xor
push
pop
mov
in
cmp
jnp
sbb
in
xchg
cmpsl
adc
push
adc
jne
sarl
mov
pop
popf
sub
push
rclb
stc
mov
sahf
dec
mov
sarl
lcall
imul
pop
pop
sub
push
mov
add
insl
scas
dec
pop
outsb
pop
out
jl
fdivrs
incl
pop
mov
sahf
data16
push
add
jb
mov
sbb
fimull
mov
lret
jnp
mov
shl
mov
enter
sbb
sbb
or
mov
jo
dec
or
sub
and
dec
cmp
sub
pop
jmp
scas
aad
and
jg
cwtl
insl
cmp
bound
dec
outsl
jns
les
inc
cli
add
xor
pop
mov
add
scas
insl
shrl
inc
sbb
cmp
lods
dec
cmp
add
add
pop
call
gs
xchg
xor
icebp
mov
leave
mov
int3
cmp
jae
or
or
mov
jp
jle
mov
push
cli
and
imul
stos
scas
xchg
int
aas
add
clc
mov
add
xchg
cmc
clc
inc
xchg
es
js
jle
push
or
dec
pop
jmp
fsub
das
dec
in
ljmp
inc
orb
push
enter
test
push
jns
leave
push
sbb
fiaddl
or
insl
addb
in
push
pop
dec
aam
hlt
call
push
push
mov
insl
xchg
add
loope
push
in
imul
shrb
movsb
jno
stos
sub
daa
pop
mov
push
mov
addr16
js
nop
jmp
push
sti
lods
or
rcll
cmpsb
add
imul
insl
inc
sub
dec
leave
or
jae
fisttpl
in
in
xchg
sub
jne
cmc
add
and
jmp
cmp
jmp
mov
sbb
outsb
dec
mov
int
xbegin
add
or
fiadds
cmp
sub
ss
out
or
mov
mov
sbb
mov
shll
push
xor
aas
jnp
call
int
imul
jl
in
shlb
mov
fldcw
out
loop
fimull
stos
insl
shl
or
fldpi
pop
sarb
loopne
cs
cld
int
and
xchg
xor
xor
push
lods
psadbw
sbb
xchg
mov
ds
jecxz
nop
in
add
inc
push
std
jmp
mov
mov
ret
dec
scas
sahf
lds
push
pop
imul
rolb
hlt
rorb
sti
push
xor
adc
push
rorb
sbb
pusha
jnp
popf
faddl
jle
mov
push
sbb
lahf
out
or
jmp
imul
sbb
pop
jne
push
test
jl
inc
push
mov
mov
ds
std
adc
iret
ret
sbb
sbb
test
stc
mov
ds
dec
dec
jno
mov
mov
jmp
ss
push
jge
ja
sub
mov
addr16
scas
mov
jecxz
or
cmpb
push
mov
jl
aas
inc
mov
pop
ret
pop
xchg
push
test
std
add
mov
sub
adc
jnp
push
daa
stos
adc
out
mov
jo
jno
xchg
gs
movsl
mov
loop
ds
popf
fldl
mov
leave
andl
subl
cmc
js
hlt
ss
jb
adc
lret
pop
cmp
push
les
push
fwait
pop
sub
cmpsl
adc
scas
lcall
xchg
lea
adc
lret
aas
mov
xchg
jae
shll
rol
dec
fst
fimuls
in
and
mov
popa
addr16
sub
fstp
lret
mov
mov
xchg
cmc
insl
pop
jl
cmpsl
add
jnp
ds
add
inc
pop
sub
call
bound
add
sahf
sub
dec
addr16
and
ljmp
push
sti
daa
add
add
out
ljmp
add
inc
add
xchg
or
mov
out
add
daa
loop
pop
cmp
dec
mov
lret
adc
xlat
movsl
out
les
pop
xor
nop
into
ss
add
mov
jg
ret
push
outsl
fisttps
sbb
das
into
lea
sti
add
inc
mov
xchg
mov
mov
lock
pop
xchg
sub
pop
das
push
cmp
push
pusha
iret
mov
leave
xlat
cmc
aam
pop
enter
add
icebp
stc
push
mov
xchg
mov
test
cmpsl
pop
pop
xchg
lahf
mov
cltd
push
stos
loopne
movsb
push
aam
es
addr16
or
shll
adc
pushf
test
cltd
das
daa
testb
inc
cmpsb
push
jp
fldl
pop
lods
push
sub
negb
sub
or
jo
jae
loopne
mul
dec
call
jnp
sub
push
mov
imul
imul
push
arpl
mov
fisubrl
sbb
fstpl
in
hlt
loopne
pushf
adc
test
enter
pop
xor
fdivrl
fldcw
dec
int
in
scas
adc
jns
mov
sbbl
test
jmp
or
aaa
mov
push
inc
cmpl
sub
imulb
leave
das
ja
dec
adc
inc
sub
adc
cmp
xor
push
inc
nop
ficoms
pop
fs
stc
sub
jecxz
dec
dec
dec
adc
mov
addr16
dec
pop
ja
mov
or
sub
shlb
test
in
jge
adc
jb
lds
sub
into
loope
sbb
repnz
enter
mov
mov
dec
scas
push
push
sub
ljmp
mov
stos
fisubrs
cmp
dec
dec
xchg
mov
mov
or
ds
test
fisubrs
loopne
shlb
in
cwtl
add
jmp
adc
sbb
pop
les
sar
leave
jns
mov
popl
xor
ficomps
and
mov
inc
jmp
jno
sbb
xor
in
outsb
push
loop
ret
push
push
add
ja
cmpl
jnp
push
ja
jnp
cmp
pop
or
lret
sub
pop
lock
cmp
les
int
xor
sti
adc
cmp
testl
scas
std
addr16
add
stc
rcl
and
nop
movsl
ficoms
dec
push
jbe
cmpsl
fistpll
enter
ljmp
movsb
addr16
subl
jg
dec
cmp
push
fiadds
rcll
in
int
in
xchg
sbb
leave
push
dec
mov
pushf
pop
mov
out
imul
jmp
or
pushf
repz
mov
mov
sarl
cmp
inc
stc
out
icebp
test
cmpsl
push
ds
inc
dec
add
loop
into
out
sub
movsl
push
push
add
imull
je
jge
lock
mov
inc
mov
fstpt
mov
cwtl
adcl
cmp
or
stos
es
xor
test
jae,pt
jg
shrl
ss
mov
cltd
jecxz
mov
push
mov
sbb
inc
cmp
fisttps
jae
xlat
out
cs
mov
xor
cmpsb
adcl
adc
and
jle
inc
pop
push
hlt
insb
mov
addr16
mov
and
inc
clc
pop
in
adc
cltd
or
pop
sub
lcall
xchg
mov
xchg
je
xlat
ds
lods
into
outsb
mov
orb
xchg
fisubrl
sub
sub
dec
aad
ljmp
pop
sarb
in
inc
std
push
bound
enter
ficoml
jne
or
pop
test
pop
in
mov
sub
jmp
xor
or
ljmp
dec
inc
inc
js
mov
mov
mov
movsl
dec
xchg
jnp
pop
xor
jmp
cmp
loopne
and
fldlg2
mov
jb
out
dec
sbb
adc
orb
inc
jle
inc
inc
stos
mov
fs
jae
loopne
mov
fimuls
scas
mov
cmc
enter
xor
mov
int3
inc
mov
fidivl
incl
es
lods
lds
mov
cli
and
dec
or
mov
cld
sbb
aas
inc
push
dec
rcr
jl
scas
in
sub
cmpsl
fildll
cmp
mov
subl
adc
out
lea
jg
pop
and
xor
sub
insb
push
fbstp
ljmp
rol
jb
add
push
int
hlt
jl
inc
test
shr
add
mov
outsl
fidivrs
rolb
int3
addr16
adc
push
mov
cwtl
push
imul
and
imul
mov
jae
lods
loop
out
or
aas
cmp
adc
scas
dec
cmp
sub
rorb
int3
add
sub
sbbl
inc
push
jge
jno
lea
les
mov
insb
sti
jno
sub
xor
inc
pop
dec
rorb
mov
jecxz
jo
sub
dec
mov
mov
jb
xor
gs
xlat
adcl
add
movsl
or
push
notl
jno
sbb
or
and
aas
in
adc
xor
mov
mov
das
mov
pop
push
jg
dec
pop
pop
dec
push
out
repnz
inc
lods
ljmp
sbb
inc
es
and
add
jne
xor
f2xm1
popf
call
lret
cld
xlat
jmp
dec
xor
testb
repz
pushf
pop
xchg
nop
sub
xchg
je
mov
dec
push
pop
fwait
lods
sbb
xchg
inc
jo
cmp
jo
push
inc
mov
lcall
push
adc
in
mov
aad
outsl
cltd
jp
sbb
push
shrb
xor
xor
fildl
in
lock
ret
mov
jae
out
iret
and
cmp
ja
pop
adc
pop
cmpsb
sub
sub
adc
cld
jbe
dec
movsb
mov
cmp
sub
mov
mov
mov
dec
and
sarl
add
xchg
cwtl
mov
cld
mov
xor
push
mov
pop
cmp
shrl
sbb
inc
push
call
pop
arpl
clc
cmpsl
aad
out
lret
dec
cmp
vmovdqu
ret
inc
in
jb
pop
movsb
and
mov
sbb
scas
iret
sub
inc
pop
call
inc
push
mov
dec
in
mov
fbstp
insb
sub
sahf
jp
fisttps
adc
lods
sub
aam
dec
cmpb
popa
jp
ds
push
sub
xor
mov
adc
bound
and
aam
fisttpll
mov
xchg
jge
xor
pop
iret
inc
pop
pop
add
and
cmp
cld
lods
mov
cwtl
mov
test
jge
cmp
dec
aaa
sbb
sar
or
mov
jb
jp
ljmp
xchg
mov
jo
adc
and
or
in
fcomps
dec
aas
mov
cmpsl
in
orb
adc
fildll
cltd
addl
push
xor
cmp
test
ss
ja
cltd
mov
rolb
or
xchg
std
adc
mov
mov
fwait
sub
dec
mov
fcmovne
in
mov
add
cmpsl
arpl
jne
leave
shrb
movsb
inc
add
imul
xor
aas
add
adc
dec
clc
into
mov
daa
ds
stos
bound
icebp
mov
rol
loopne
cmp
jno
ret
xor
mov
dec
jo
cmpsl
add
pop
loopne
mov
imul
inc
out
jle
or
pusha
lods
les
ljmp
jno
popf
xor
mov
mov
xor
hlt
sbb
push
rclb
jmp
sub
dec
mov
jno
dec
pop
mov
mov
sahf
faddp
fwait
push
inc
hlt
cmp
in
scas
adc
mov
xchg
mov
xorl
sti
icebp
dec
in
test
scas
inc
lds
pop
data16
idivb
arpl
and
dec
push
mov
push
dec
addr16
cmp
test
stc
jae
adc
es
jnp
push
push
popa
sub
jmp
lds
icebp
sahf
push
addr16
vmsave
jo
loop
js
js
lahf
es
divl
test
std
adc
cwtl
ret
mov
leave
mov
lcall
xchg
push
repnz
jecxz
or
cld
ret
movsl
sub
popf
repnz
inc
fmull
aaa
push
xor
push
lret
mov
in
je
push
mov
dec
add
out
push
or
stc
mov
pop
test
jmp
mov
popf
fs
dec
sub
in
cmp
stc
adc
jg
pop
dec
sbb
mov
jne
arpl
icebp
push
xor
mov
gs
jo
inc
outsl
or
jmp
cltd
scas
sbb
clc
les
push
xor
sub
add
call
or
ficoms
mov
and
cltd
fwait
in
repz
enter
sub
xchg
cmpsl
push
lock
test
out
das
ljmp
mov
mov
mov
inc
sub
fdivrl
rorb
xchg
pop
mov
push
fstps
xchg
and
outsb
mov
rorl
or
sbb
pop
sbb
and
popa
pop
or
mov
jne
inc
fcoms
mov
std
xor
js
adc
fldt
divl
cmpsb
dec
scas
push
pop
sbb
push
add
imul
fcoml
movsl
dec
add
aad
lcall
mov
inc
push
xor
cltd
lods
xlat
xorl
lock
dec
arpl
push
shrl
in
push
popf
pop
leave
loope
jmp
outsl
and
jb
adc
mov
jmp
mov
in
loop
outsb
cmp
repz
cmovnp
adc
or
inc
insb
push
or
xchg
stos
cmp
cmp
inc
inc
ret
out
cld
scas
loop
pop
sahf
test
rorb
dec
inc
sbb
inc
loope
sbb
ja
mov
mull
jns
enter
dec
das
sbb
inc
cwtl
dec
fwait
sarl
int
jp
push
mov
lret
into
jecxz
xchg
push
cmp
loop
addr16
out
push
xchg
aaa
cltd
lea
push
inc
jno
dec
pop
in
mov
push
xchg
and
mov
popf
xor
push
adc
insb
ds
in
sub
pop
or
push
mov
arpl
pop
mov
add
xchg
inc
add
int
test
jne
and
fidivrl
mov
dec
xchg
add
mov
adc
mov
shr
mov
jl
sbb
pop
loopne
mov
xor
pop
mov
cltd
insb
add
in
movsb
cmpsl
inc
cmp
add
mov
sbb
test
mov
mov
into
pop
imul
jl
rcll
pop
in
outsl
pop
mov
jmp
std
add
mov
cltd
add
and
shrl
dec
adc
add
sub
cmp
adc
jbe
fcoml
xor
jl
imul
negl
insb
mov
bound
mov
push
push
mov
or
sar
inc
xchg
and
dec
ret
cwtl
lods
pop
decl
push
ja
movsb
lea
aad
daa
pop
loope
and
add
mov
xorl
or
or
in
bound
leave
push
gs
test
ret
push
and
and
movsl
pop
sub
sub
inc
repz
mov
mulb
loop
inc
iret
xchg
inc
xlat
jle
movsl
std
push
out
cmp
xchg
insb
xlat
je
pop
movsl
push
call
addr16
push
data16
inc
xchg
jno,pt
test
and
inc
inc
dec
and
or
gs
into
popa
dec
dec
or
scas
sub
push
daa
xor
lret
push
add
push
idivb
out
dec
and
sub
cmp
mov
cltd
ds
loope
daa
decw
xlat
out
push
push
jno
repz
js
dec
dec
mov
sti
push
and
and
xchg
add
leave
sub
jo
movsl
and
xchg
sti
lock
movl
push
cmp
enter
mov
fcomps
sbb
sbb
xor
mov
dec
and
lret
aad
or
or
add
addr16
shlb
push
jne
cltd
lret
pop
xor
xor
and
push
call
idivl
ret
dec
xchg
ja
inc
pop
arpl
aam
sub
or
loop
fadds
shl
sbb
js
orl
push
push
in
pop
and
jge
int
lds
in
cmp
ds
lret
mov
icebp
clc
sbb
arpl
lret
js
jbe
subl
dec
pop
pop
int3
mov
dec
push
enter
test
arpl
test
les
mov
inc
mov
repnz
in
loop
repz
enter
sub
test
test
adc
xchg
fs
sub
xor
out
arpl
scas
push
mov
movsb
inc
adcb
testl
loopne
outsb
push
js
stos
jno
xlat
xor
aas
or
jae
iret
out
cmp
and
add
cmpsl
jne
sbb
jbe
daa
mov
sub
push
mov
shlb
loop
inc
sbb
ja
inc
in
push
xor
inc
das
jg
fucomi
cs
mov
jle
pop
mov
ficoms
mov
nop
or
mov
inc
idivl
cmp
enter
je
xor
mov
add
das
xchg
mov
clc
fst
adc
lds
lret
pop
arpl
leave
jae
cmp
mov
mov
inc
mov
mov
xchg
sub
in
cmpsl
stos
xor
js
cmp
dec
inc
or
pop
push
cwtl
fmuls
cmp
adc
out
inc
lea
fists
loopne
repnz
loop
jne
int
jle
sub
inc
jmp
jae
jge
add
stos
aam
je
lret
repz
jl
ja
outsb
frstor
mov
fists
push
aaa
sbb
mov
clc
cmp
push
or
sbb
enter
inc
mov
xchg
push
cmpsl
movsl
xor
push
gs
int
mov
mov
jbe
pop
xor
decb
jp
cmp
cs
es
inc
jns
adc
mov
jb
mov
push
inc
mov
xchg
xchg
adc
mov
es
push
and
and
outsb
inc
jle
pop
mov
jne
or
mov
or
mov
push
or
test
xchg
test
testl
xchg
push
es
js
jae
fwait
mov
jbe
mov
push
rol
loop
out
fsts
pop
mov
jne
repnz
push
inc
mov
and
mov
cmc
xor
add
stos
dec
cmp
adc
mov
in
jmp
fxch
stc
sbb
cmpsb
jnp
jb
sbb
sbb
mov
inc
inc
shrb
push
rcrb
mov
push
xor
rcl
fmull
cmp
test
lret
loopne
test
dec
add
scas
lods
dec
outsl
jmp
pop
cs
mov
dec
out
push
mov
repnz
cld
sbb
shrl
jno
and
pop
pop
xor
daa
mov
leave
je
dec
mov
pop
shlb
mov
mov
movb
cs
fidivl
ss
cmp
push
inc
add
jo
xchg
mov
imul
mov
rorl
dec
mov
dec
movsb
mov
xchg
mov
inc
add
repnz
sbb
dec
mov
and
hlt
xlat
in
xor
pop
hlt
mov
xor
fs
sbb
adc
jno
dec
or
jg
pushf
xchg
stc
or
ss
add
push
je
cli
adc
orl
push
stc
std
cmp
pop
iret
ja
popf
les
cmc
test
cmc
push
and
lds
fidivrl
add
mov
aad
loop
lods
add
loopne
out
or
int3
xor
xor
test
mov
gs
imul
sub
int
int3
pop
sub
push
shlb
pop
dec
cmp
pop
xchg
pop
and
xlat
notl
dec
push
mov
cld
xlat
shrl
mov
xor
lret
out
mov
js
rcrl
iret
mov
ja
jp
mov
or
cmc
jnp
xchg
adc
in
dec
xor
xor
sub
pop
lds
push
jmp
mov
into
add
xchg
lods
jge
lahf
mov
shl
cmc
dec
pusha
rcll
lods
imul
cmp
stc
adc
std
jg
pusha
mov
in
push
rcl
test
inc
adc
or
hlt
shll
cmp
mov
mov
xchg
jb
pop
ds
fwait
cmp
sub
loop
popf
mov
inc
mov
stos
in
cmpl
fwait
add
dec
xchg
cmp
fstps
mov
pop
mov
pop
dec
aaa
jno
shll
out
push
lahf
xchg
dec
dec
jmp
ss
mov
xor
push
repz
mov
je
mov
and
outsl
repz
or
sbb
push
addr16
xchg
mov
pop
test
mov
je
lcall
fs
dec
push
mov
mov
cmp
adc
and
shll
sbb
std
mov
jbe
jb
push
sbb
cmpsl
sbbb
testb
lret
mov
out
inc
into
mov
adc
mov
add
shlb
inc
data16
clc
loop
scas
and
into
cmp
fwait
adc
cltd
test
popa
mov
clc
inc
daa
shlb
mov
sbb
dec
jmp
pusha
scas
pushf
mov
sbb
mov
idivb
in
cmp
out
cmp
mov
xchg
xchg
push
mov
outsl
mov
and
mov
cmp
pop
dec
pusha
out
ss
call
sar
loopne
aas
pop
int
leave
test
idiv
mov
cmp
pop
loope
dec
mov
leave
popf
adc
in
cmp
cmpsb
mov
into
push
in
pop
cmp
sarb
test
std
fwait
std
scas
push
nop
movsb
aam
mov
jb
and
mov
jne
in
sti
push
mov
adc
stos
cwtl
rol
adc
push
mov
add
cltd
cmpsl
outsl
sbb
outsb
outsl
insb
outsl
and
inc
out
dec
clc
cmpsl
fcoms
std
and
mov
test
shlb
pusha
pop
dec
push
data16
sbb
push
jb
test
pop
lods
movsl
push
mov
pop
jle
jnp
aad
add
dec
mov
sbb
adc
cs
mov
orl
or
mov
lahf
fisubl
loope
inc
sbb
push
pop
out
int
inc
pop
or
adc
out
gs
ds
push
ja
jecxz
ss
mov
je
pop
cli
add
sub
icebp
movsl
adc
xchg
lea
or
sub
mov
cmpsb
fmull
mov
into
xchg
jge
jge
add
dec
cmp
fs
bound
ja
sub
adcb
ficoml
pop
jle
mov
mov
xchg
jmp
mov
les
dec
lock
cltd
cmc
test
xor
bound
push
lret
icebp
popa
sbb
mov
pop
or
les
sub
xor
ficompl
aam
jo
gs
mov
rcrl
xor
push
fs
cmp
push
gs
sub
shl
adc
jmp
mov
cmp
dec
xor
fisttps
shrb
fsubr
lds
push
movsl
add
jl
xchg
pop
push
fidivrl
or
filds
dec
in
movsb
scas
rcr
cmp
mov
outsl
pop
pusha
iret
adc
xor
fstl
add
pusha
xlat
in
stos
scas
jge
rorl
add
addl
mov
jb
je
ret
cli
mov
xlat
gs
cmc
adc
fimuls
push
sbb
jbe
lret
mov
xlat
fmuls
mov
cmpsb
aaa
movsb
pushf
cmc
push
add
pop
jo
imul
mull
mov
ficompl
jmp
sbb
inc
push
mov
notb
mov
pop
bound
jge
loope
mov
push
aas
inc
mov
in
xor
outsb
popl
out
call
cmp
cmp
cmc
or
push
or
fnsave
jne
add
mov
inc
jl
lods
pusha
cmpsb
pop
jle
jno
data16
push
mov
or
aaa
dec
xchg
int
fstpl
mov
xor
inc
sbb
stos
cmp
pop
sarl
adc
test
imul
push
pop
inc
jle
mov
xchg
cmp
jle
orl
out
cmp
daa
lcall
mul
mov
mov
popa
add
pop
insl
and
in
scas
sub
push
or
fsubp
mov
clc
jg
fidivrl
es
xor
das
dec
cmpsl
inc
in
push
mov
sub
imul
fimull
adc
enter
cmp
xor
insb
pop
push
xchg
lods
push
cmp
cmpl
int
xchg
mov
xor
fidivl
inc
icebp
adc
inc
lahf
add
jb
pop
adc
cmp
pop
xor
mov
mov
movl
out
aam
pushf
mov
and
pop
adc
gs
inc
stc
cmp
inc
idivb
ret
mov
repnz
mov
sar
subb
jne
mov
cmp
out
inc
push
lods
in
inc
xor
aas
mov
adcl
push
icebp
lods
int
pop
fsts
add
jno
mov
mov
lock
mov
inc
push
adc
pop
cmpb
rol
mov
sub
test
or
cmp
jo
mov
push
shll
imul
fsubl
push
jns
arpl
imul
dec
popa
in
in
push
or
sbb
mov
in
pop
adc
xchg
push
les
pop
dec
adc
leave
ja
inc
xchg
cmc
mov
in
mov
jbe
or
sub
jno
dec
pop
clc
lret
movsl
test
cmp
mov
cli
xor
xchg
mov
xor
in
push
repz
xor
xor
hlt
outsb
fdivl
out
xchg
sub
sar
sub
arpl
push
lods
pop
cmp
das
pop
mov
enter
add
and
adc
dec
mov
stc
mov
jae
jmp
shrb
inc
imul
fdivrl
addl
sub
add
imul
popa
stos
ret
pop
lret
fcompl
fimull
cmp
scas
xchg
sbb
les
daa
jl
pop
mov
pop
push
js
sub
daa
andl
mov
dec
stc
dec
scas
cld
pop
mov
or
pop
cmp
mov
movsb
scas
stc
mov
imul
gs
fmull
scas
pushl
arpl
sarb
jg
push
aad
mov
in
mov
pop
add
arpl
push
inc
mov
cmp
xchg
adc
pushf
mov
jl
push
push
enter
sahf
cmp
cmpsl
cmp
rcll
repz
nop
aaa
or
or
cli
int
xor
adc
xchg
out
adc
jl
mov
pop
inc
in
adc
add
int3
jecxz
mov
dec
andb
or
xchg
test
in
pop
jecxz
jmp
pop
test
dec
dec
push
jg
or
xchg
gs
mov
jnp
in
je
movsl
fisubs
daa
pop
gs
paddb
les
int
dec
cmp
outsl
mov
cmp
lret
push
out
jne
mov
jmp
cmp
xchg
aad
sahf
fisttpl
and
cmp
shr
loopne
and
cmpsb
jg
cltd
or
in
mov
sub
scas
out
jbe
nop
and
popf
imul
jge
xchg
jnp
outsb
or
mov
mov
outsl
ret
in
cwtl
push
test
xchg
enter
mov
frstor
adc
lea
push
add
jp
imul
jns
sbb
push
mov
pop
inc
and
xchg
dec
loop
insb
push
test
add
pushf
and
test
jge
int3
inc
cmp
xor
sub
push
pop
xchg
pusha
pop
cmpsb
xchg
cmp
xchg
pop
js
xchg
pusha
stos
lahf
pop
adc
dec
mov
mov
in
push
test
push
mov
xor
sti
sub
aas
das
lahf
and
pop
cmp
mov
out
push
addr16
inc
stc
jnp
hlt
scas
xchg
mov
daa
mov
mov
push
jo
and
xchg
ja
mov
push
adc
mov
jne
mov
mov
jbe
inc
pop
xchg
xor
push
add
add
into
stc
scas
outsl
imull
xchg
imull
sbb
pop
ds
push
nopl
pop
cmp
mov
and
pop
jno
inc
leave
xor
or
cltd
xchg
popa
test
xlat
bound
lcall
mov
add
pop
push
pop
mov
sub
and
in
stos
outsb
xcrypt-cbc
cmpsl
xchg
repz
jno
cwtl
adc
shll
mov
test
into
in
push
push
jl
xchg
lds
div
cltd
cs
lret
add
int3
ficompl
sbb
adc
sbb
out
insb
out
insb
adc
mov
jnp
xchg
pop
pop
pop
sbb
das
shll
xchg
nop
sbb
mov
out
nop
mov
add
xchg
sbb
xlat
jg
push
lret
sbb
incb
lock
stos
daa
sbb
inc
ljmp
add
std
fsubs
rcll
push
cld
adc
add
dec
cmpb
fnsave
sub
dec
lea
cmp
cmp
pop
mov
js
fists
imul
dec
stos
pushf
jmp
rorl
aaa
cmp
in
outsl
sbb
cmp
out
inc
clc
xor
adc
outsb
jle
shrl
add
inc
orb
outsb
inc
xor
outsl
daa
pop
mov
mov
dec
and
mov
inc
ss
push
push
mov
insb
sbb
mov
outsl
ret
repz
imul
xor
jp
stc
cmp
js
cld
mov
cmp
mov
inc
fistpl
dec
pop
dec
sub
icebp
cwtl
ss
mov
mov
stos
loopne
cli
dec
push
adc
pop
imul
fmuls
push
inc
dec
pop
dec
jmp
lret
cmc
int3
or
push
lock
adc
test
cli
or
add
ret
hlt
sbb
lods
pop
and
ds
mov
popa
into
push
jb
jp
cmpb
push
cmp
cmpsb
popf
cmp
mov
enter
mov
cwtl
sbb
push
xchg
in
xchg
xchg
insb
sub
push
adc
imul
popf
cmc
sbb
and
sub
or
and
add
stos
frstor
jo
mov
and
sbb
push
push
inc
lcall
push
xchg
out
dec
ja
dec
imul
js
in
stos
arpl
dec
pop
inc
and
sbb
cmp
xchg
xchg
mov
ret
pop
cmp
fsubrl
and
sti
es
pop
jp
dec
inc
mov
jmp
and
mov
or
int3
std
pop
dec
decl
mov
stc
lret
xor
mov
xchg
sub
dec
or
idiv
roll
cmp
movsl
fwait
insl
pusha
enter
cmp
and
lret
jmp
cltd
xor
sbb
dec
sub
int
sub
push
or
into
mov
xchg
lea
inc
cmp
cltd
push
sbb
mov
mov
and
test
in
push
imul
jg
popl
mov
bnd
popf
arpl
jge
mov
jno
mov
adc
loopne
jp
popf
adc
dec
hlt
mov
call
int
xor
idiv
cmp
dec
add
adc
push
push
lea
sbb
jnp
xchg
shrl
or
aam
mov
dec
fcmovb
sbb
cs
stos
pop
adc
je
mov
xor
ret
mov
add
jmp
inc
cmp
in
add
sub
mov
sbb
sarl
dec
jo
sahf
or
cmp
xorb
mov
push
sub
out
pop
dec
inc
shr
fcmovb
cwtl
les
dec
mov
xlat
mov
aam
cli
adc
int
repnz
imul
mov
fistpl
andl
and
mov
jmp
inc
rorl
add
push
mov
test
mov
mov
dec
and
mov
aas
movsb
sub
std
sbb
cwtl
jbe
gs
fs
push
imul
scas
push
and
xor
lahf
insb
repz
cmp
arpl
cmp
in
rorl
loope
fld
js
rcr
aam
mov
mov
cli
std
lea
call
orb
iret
cli
fwait
and
cli
sbb
decb
js
cs
mov
cmp
push
loopne
scas
rorb
mov
je
or
out
lcall
iret
test
out
mov
lahf
cmp
adc
adc
add
insb
icebp
ljmp
mov
je
popf
jmp
ret
dec
sti
shl
ss
repz
xor
push
shll
mov
das
sbb
addr16
dec
call
pop
icebp
lret
or
pushf
out
mov
pop
lret
movsl
mov
gs
cmp
ja
stc
mov
adc
lods
sbb
subl
inc
cmc
adc
nop
push
and
out
sub
stos
les
shll
pop
sub
iret
jmp
xlat
test
stc
xchg
data16
jl
scas
js
subb
dec
dec
in
mov
emms
push
sbb
loop
jae
and
or
in
insb
fcomps
ja
dec
xchg
add
xor
mov
test
or
shrl
or
pop
push
jg
dec
scas
sub
shlb
lock
lods
scas
push
jne
add
pop
std
adc
rclb
xor
mov
pmulhw
mov
push
mov
pop
mov
xchg
pop
add
sbb
cmp
mov
mov
aad
cmpsl
pop
xchg
push
fidivs
pop
jmp
data16
add
cmp
fcomps
lea
sub
xchg
cmp
out
lahf
sub
xchg
hlt
in
leave
mov
jecxz
or
xor
xlat
sub
addr16
sub
aas
lods
and
mov
fmul
mov
mov
dec
int3
bound
jle
sub
out
mov
hlt
gs
mov
xchg
or
xchg
dec
ja
pushf
jb
pop
bound
rcrl
mov
inc
cli
stos
xor
rol
xor
lahf
outsb
sbb
jo
pop
xor
std
pop
dec
and
adc
mov
and
aad
ja
push
add
dec
lcall
es
pushf
inc
sbb
jle
stos
loop
sbb
out
mull
push
in
add
bound
dec
ret
mov
out
mov
std
jo
repnz
icebp
jb
push
insl
cmpsb
mov
call
adc
mov
add
jp
push
add
fistpl
lock
dec
xchg
dec
push
mov
xor
add
and
or
test
fsts
pop
fwait
ja
in
rorb
je
xlat
mov
or
fistpll
je
or
adc
jl
hlt
inc
mov
gs
lret
and
ds
dec
sahf
or
sarl
sub
insl
sbb
aaa
and
inc
adc
ds
or
adcb
jl
xor
pop
clc
cmpsb
cmp
push
std
push
aad
shlb
cmp
sub
rolb
loop
pop
cmp
dec
or
mov
lret
repz
and
push
push
sub
adc
and
in
cmc
sub
rcrl
icebp
dec
and
rcll
sub
adc
push
or
jae
pushf
nop
lret
fisttpl
dec
xor
cmp
icebp
idivl
push
daa
jbe
test
push
repnz
mov
roll
sbb
in
add
rep
jbe
pop
add
popf
repnz
into
inc
mov
xchg
push
dec
mov
insb
jle
sti
les
popa
mov
rcrl
fstpt
cwtl
repnz
sub
bnd
jnp
xchg
or
cmpb
lahf
mov
adc
dec
stos
sub
mov
out
add
cmp
les
mov
out
jl
jnp
out
in
xor
insl
rclb
fs
adc
in
pop
lds
dec
dec
ljmp
add
arpl
xorl
xchg
jmp
xlat
into
sbb
ja
mov
hlt
stos
sub
test
ljmp
push
loope
jns
stos
and
imul
adc
and
cmpsl
adc
xor
outsl
or
aas
mov
shrl
nop
adc
inc
sar
cli
fistpll
and
daa
fstpt
add
rcll
lcall
insl
inc
jae
lods
push
lcall
aas
xchg
popf
sub
jmp
inc
ds
add
and
cmp
jl
outsl
xor
push
lods
je
addr16
out
popa
adc
mov
ljmp
xchg
and
pop
mov
mov
into
ret
pop
jmp
je
adc
adc
xor
pop
and
cs
inc
adc
adc
daa
xorl
imul
xor
adc
jne
xchg
and
xchg
adc
aam
add
arpl
popa
pop
lods
add
jb
lret
mov
scas
sub
mov
jb
jle
int
gs
dec
sahf
ret
adc
cmc
jp
pop
bnd
push
jle
aam
mov
lret
adc
int
push
inc
sub
adc
push
pusha
dec
inc
mov
pusha
fadd
add
adc
mov
sub
push
mov
ret
mov
sahf
test
les
pop
loope
mov
sbb
mov
sub
push
sbb
mov
in
jge
adc
lods
dec
xor
or
mov
jns
mov
cs
es
jb
fwait
enter
hlt
and
out
movsl
scas
lock
fldt
data16
test
je
xchg
inc
rclb
mov
leave
push
and
idivb
pop
test
sub
test
out
shll
out
cmp
cmp
mov
adc
inc
iret
mov
mov
ret
dec
xor
in
mov
xlat
ret
cli
movsl
stos
pop
ja
subb
mov
dec
cmc
loop
jmp
adc
fidivrl
jl
ficompl
dec
fs
fcomps
shrb
dec
cmpsl
jmp
stos
jge
pop
lods
sbb
mov
in
lret
jmp
into
arpl
loop
fsub
cli
jns
and
xor
mov
rclb
movsl
sti
mov
lods
rcrl
mov
xchg
addr16
pop
mov
dec
mov
es
lret
outsl
cmpsl
popa
lods
jp
sub
dec
pop
enter
inc
jns
mov
stc
jl
rolb
lret
mov
mov
cmp
or
movsl
jno
sbb
or
popa
jle
in
outsl
and
ret
push
loopne
int3
xor
in
mov
sbb
popa
js
loope
es
js
test
sbb
inc
xor
adc
cs
std
pop
fsubrl
push
cmp
sub
inc
mov
gs
add
fisubs
xor
aad
lahf
or
loop
movsl
lods
lahf
in
cmp
ss
xor
daa
mov
lods
out
and
jg
fcmovb
in
mov
cwtl
mov
mov
mov
push
jp
sub
and
mov
pop
add
in
lcall
mov
pusha
gs
mov
pop
adc
popa
movaps
dec
lret
mov
dec
aam
inc
cld
jecxz
inc
push
sub
dec
test
cli
or
pop
xor
lods
andl
cmp
pop
pushf
inc
pop
iret
mov
pusha
and
inc
test
cmp
lock
sti
roll
test
sar
aaa
cmp
pop
frndint
mov
add
pop
fldl
rcr
sahf
adc
cld
fisubs
inc
dec
rol
dec
and
mov
aam
push
fiaddl
cmpl
jmp
int3
scas
mov
dec
fidivl
cltd
xchg
fisubrs
loope
push
movl
insb
scas
addb
xor
and
clc
xor
sahf
flds
jo
loope
pop
mov
jmp
neg
test
arpl
movsb
xor
fadds
mov
xchg
aas
xor
or
shlb
mov
cmp
or
inc
jge
fs
pop
jl
dec
dec
ret
test
pop
test
sbb
dec
enter
mov
stos
dec
or
xor
or
jmp
in
xchg
dec
push
mov
jns
push
int
iret
shll
hlt
add
idivb
jge
mov
mov
test
sub
hlt
mov
xor
adc
stos
outsb
and
push
cld
and
sbb
cmp
pop
rol
outsl
pop
mov
call
bound
fnstsw
imul
jae
repz
and
sahf
mov
pop
test
lret
xor
lcall
fdivl
pop
imul
fdivl
or
adc
inc
xor
cs
mov
movl
loope
jne
dec
imul
loopne
xchg
in
mov
inc
jnp
movsb
dec
cli
jge
mov
mov
mov
mov
das
gs
das
xchg
nop
call
xchg
nop
xchg
pop
push
icebp
mov
jne
js
subl
jl
jge
subb
addr16
ret
adc
xlat
cmp
jno
cmp
push
orb
push
jno
cmp
lods
loope
shll
mov
cmp
sbb
mov
and
mov
cmp
repnz
jg
jno
push
mov
mov
adcb
mov
rcrb
xor
aaa
rcll
mov
iret
fstps
ja
sub
ljmp
test
push
dec
jle
ficompl
dec
sarb
aad
fwait
sbb
push
jl
xor
insb
pop
sahf
xchg
cmp
shr
arpl
int
mov
xor
mov
ljmp
push
leave
push
and
xor
cli
out
or
rcll
test
add
mov
loop
popa
and
shll
mov
mov
call
pop
and
cmp
jo
adc
ds
pop
mov
pusha
pushf
sub
addl
js
fisttps
cmp
jns
cld
cmp
les
movsl
aaa
adc
cmp
mov
xchg
sbb
xor
push
jg
pusha
fwait
test
repnz
ss
mov
jecxz
iret
jge
imul
sub
les
jno
adc
and
jbe
jl
inc
lea
addr16
sbb
or
insl
dec
inc
stc
lret
dec
leave
movsb
xchg
inc
lret
xchg
dec
cmp
loop
adc
lods
imul
clc
sbb
mov
lods
sbb
stos
out
in
or
mov
xlat
mov
fwait
cmp
aaa
je
mov
insl
jge
enter
xor
sbb
jmp
fwait
sbb
xchg
lahf
call
push
mov
cmp
in
jnp
nop
cmpsl
fdivl
mov
push
into
and
xchg
push
call
fdivrs
out
fsubs
sub
aam
rcr
push
xchg
adc
in
int3
rorb
jle
sub
push
cmc
cmp
jbe
out
jmp
aad
and
lods
xchg
cmp
insb
shlb
add
mov
cmp
ljmp
lods
loope
lret
mov
lods
or
loop
fstps
mov
and
add
sub
hlt
jnp
insl
jnp
int3
xchg
mov
movsl
dec
dec
je
mov
lock
push
test
xchg
add
and
inc
ss
fmull
xchg
mov
fcomps
xchg
lahf
or
sub
cmp
inc
jbe
lcall
fstps
sahf
mov
mov
in
imul
pop
imulb
jp
in
jo
scas
add
or
outsb
imul
dec
int3
cld
mov
xor
mov
jnp
mov
rcll
pop
inc
enter
in
aad
adc
leave
cmp
lret
jl,pn
push
shlb
or
pop
cmc
xor
cs
xchg
insb
shrb
notb
jecxz
inc
push
loopne
jbe
jmp
cmp
mov
cmp
adc
repnz
xor
mov
xchg
out
int3
lahf
adc
push
out
les
stos
mov
dec
or
or
jne
in
xor
dec
jecxz
jle
add
and
inc
psrad
dec
stc
jno
xchg
pusha
inc
add
or
out
fiadds
lds
push
mov
lret
insl
clc
cmp
mov
aam
stc
and
xchg
pop
mov
popl
jno
repnz
push
mov
fs
in
out
mov
inc
and
lods
rcrl
jne
mov
lret
ret
imul
push
jecxz
push
mov
in
ret
push
jns
bnd
inc
mov
xchg
mov
and
xchg
mov
mov
pop
std
je
sbb
por
mov
xchg
inc
xchg
xor
xchg
lock
push
fchs
xor
ja
daa
xor
lock
mov
jno
jecxz
scas
xchg
sub
fldl2e
xchg
cmp
cltd
sahf
decb
xchg
push
and
aaa
xchg
icebp
and
xchg
leave
lcall
nop
jmp
or
push
pop
adc
add
pop
mov
in
lds
dec
xchg
sahf
and
xor
scas
inc
fwait
aaa
in
fucomi
adc
adc
adc
pop
addr16
fidivl
pushf
push
mov
pop
cmpsl
loopne
shr
push
adc
sbb
fdivl
daa
push
xchg
shrl
sbb
sub
scas
xchg
xchg
push
sub
jne
inc
cld
mov
leave
adc
add
popl
les
js
xor
je
or
push
insl
cli
adc
and
mov
mov
sti
les
cmp
cmp
cs
push
pop
and
sbb
dec
mov
mov
sbbb
inc
idivb
ds
dec
sbb
cmpsb
sbb
call
push
and
cmp
sub
xchg
mov
loopne
sub
fldln2
and
adc
cli
lock
ret
ljmp
pop
in
mov
mov
bound
sub
mov
scas
loope
dec
into
xor
push
pop
push
jge
sbbl
jo
ljmp
and
cmpsb
jns
push
push
fsub
mov
cmpsb
sbb
cmp
daa
jns
xlat
sub
jl
xchg
rcrb
je
inc
js
xor
ljmp
loope
xchg
fnsave
jmp
or
ficoms
adc
inc
and
test
aam
lods
mov
xor
jl
and
inc
sarl
mov
dec
leave
mov
leave
adc
lahf
incl
add
add
cwtl
cmc
jne
inc
loop
dec
push
inc
pushl
xchg
sub
test
or
mov
mov
dec
cmpb
addr16
add
and
dec
jmp
fdivp
jecxz
data16
sbbb
sbb
sub
pushf
push
mov
lahf
sbb
sub
inc
jbe
jns
or
inc
adc
sub
sahf
push
inc
andl
mov
pop
xchg
fcompl
mov
or
xchg
mov
mov
push
movsl
out
mov
imul
imul
mov
lock
push
andl
dec
add
sbb
ds
addr16
dec
pop
clc
lods
int3
lds
fsubs
inc
and
fstl
roll
xor
gs
or
enter
pushf
in
cmp
dec
loopne
adc
ja
iret
push
xor
ljmp
loopne
out
mov
rorl
add
lods
ss
mov
stc
and
pop
xchg
mov
dec
xor
cmpsb
popa
rcrb
iret
push
xor
sub
aas
jns
mov
lcall
icebp
in
shr
adc
insl
add
sbbl
test
mov
int3
ret
mov
xchg
jge
mov
and
pop
call
mov
dec
ds
fs
fldcw
jns
dec
inc
imul
loope
cmp
push
aad
xchg
pop
dec
jmp
add
out
sub
dec
int
lcall
loop
mov
or
fcmovnu
rcr
mov
xor
int3
lret
sub
movl
pusha
and
ret
jno
incl
test
push
cmp
xchg
xchg
mov
fcomip
sbb
in
sub
nop
add
xor
mov
lods
adc
andb
pop
add
xorl
sbb
lret
push
xchg
lock
cmc
ja
or
iret
lahf
mov
enter
daa
je
into
cmp
dec
mov
xor
xor
popf
cmp
rol
hlt
imul
testl
das
jae
mov
in
jb
mov
clc
das
cli
push
mov
sbb
fdivr
fcmovnu
data16
sbb
lds
pop
xchg
lods
push
pop
jecxz
insb
movlps
cmp
xor
fbstp
insl
fildl
movsb
sub
addr16
inc
imul
hlt
mov
fs
inc
sar
lcall
cmp
aaa
push
pusha
insl
out
fwait
pushf
cli
insl
neg
mov
sbb
aaa
cmpsb
pop
enter
cwtl
xlat
inc
test
stos
pop
repnz
xlat
dec
mov
inc
xlat
xor
dec
mov
es
pop
mov
jb
mov
ficompl
add
in
ja,pn
mov
jg
jbe
sbb
std
sti
pop
xchg
jmp
movsl
in
mov
sub
pop
and
clc
out
sbbl
cmp
sub
call
push
pop
inc
scas
lcall
xchg
mov
add
lahf
mov
fdiv
or
pop
clc
scas
daa
push
clc
mov
add
jnp
or
fnstsw
lods
mov
mov
fwait
shlw
or
mov
movsl
pushf
cmp
cmpsl
fstl
jb
andb
shlb
loope
rorb
outsl
push
push
scas
pop
inc
cmpsb
imul
push
and
test
sub
clc
xor
add
mov
jl
jo
add
xor
arpl
or
xor
out
xchg
xor
mov
cltd
xor
jl
aam
pop
sahf
sbb
hlt
jbe
repnz
dec
jl
movsb
jp
inc
ret
out
sub
push
and
or
sub
sub
or
mov
xchg
sti
push
add
mov
dec
xchg
rcr
lret
pop
mov
addr16
das
hlt
shrb
and
adc
pusha
fs
mov
xor
lret
xchg
jg
lock
and
push
mull
xor
lods
mov
in
mov
xchg
lcall
push
outsl
ja
jae
or
lock
out
shll
inc
or
stos
jmp
cmpxchg
repz
stos
sub
inc
inc
jne
pop
xor
xchg
test
dec
xchg
mov
cmpsl
push
repnz
sbb
pop
cli
arpl
cmpsb
adc
scas
jmp
cs
js
xchg
daa
es
shr
add
pop
insb
ret
add
dec
dec
lods
dec
or
dec
xchg
ret
pop
pop
lret
scas
xchg
inc
mov
sbb
daa
out
xchg
and
loope
fwait
xchg
shrl
loope
inc
xchg
push
xchg
push
cwtl
repnz
bound
mov
scas
xor
xorb
add
adc
mov
scas
push
nop
loop
lret
rol
iret
sub
movsb
push
add
pusha
and
and
rolb
imul
add
and
adc
mov
jne
push
push
adc
sbb
notb
cmpsl
jbe
imul
sbb
add
outsl
outsl
call
adc
mov
mov
mov
inc
pop
ds
push
mov
roll
cmpsb
mov
outsb
cmp
out
sahf
cmp
mov
xor
sbb
and
gs
out
and
lock
mov
pop
loopne
fisttps
xchg
bound
cmc
mov
lods
pop
cmc
mov
scas
mov
mov
dec
and
push
mov
mov
push
add
ljmp
push
inc
cs
mov
fs
leave
mov
mov
jnp
add
mov
scas
int
fidivs
and
ljmp
add
push
int3
loopne
mov
jnp
cmp
stos
adc
mov
mov
gs
adc
mov
and
pushf
fbstp
or
jmp
data16
cmp
mov
push
push
mov
mov
int
dec
add
and
adc
mov
lds
mov
pop
mov
push
in
push
stc
int3
into
add
jno
bound
inc
mov
repz
xor
pop
cli
cli
loope
mov
inc
jbe
hlt
adc
jge
pushf
push
jb
shlb
lds
mov
flds
sbb
sbb
jbe
xor
sbb
and
mov
mov
pop
or
jb
sarb
in
dec
mov
dec
shll
push
cmpsl
xor
sub
xorb
fs
out
ljmp
sbb
xchg
pmaxsw
mov
cld
xchg
push
int
xor
lcall
mov
cs
mov
xor
negb
xchg
mov
stos
push
jg
call
aas
push
ja
ja
iret
subb
and
sarl
lods
sbb
fbld
fwait
adc
lahf
into
andb
dec
sbb
dec
cwtl
xor
pusha
daa
mov
add
pop
negb
movsl
jno
add
mov
clc
cwtl
int
xchg
push
push
aas
aad
sbb
fs
call
and
xchg
sub
test
loope
jg
ret
add
loopne
in
mov
stos
test
mov
push
shl
stc
loopne
push
xchg
notb
ja
adc
push
mov
push
dec
add
gs
mov
xor
pop
sub
call
aas
data16
fwait
cld
leave
in
jmp
xchg
jle
aad
xor
mov
xchg
push
mov
xchg
dec
enter
lea
mov
pop
in
sti
sbb
imul
mulb
push
push
dec
xor
mov
loope
cmp
clc
shl
jnp
inc
mov
je
xchg
cmp
je
out
adc
jbe
popa
mov
mov
mov
mov
rolb
in
push
cmp
or
sub
dec
lahf
jmp
mov
mov
nop
inc
cmp
loop
cld
into
mov
lods
movsb
jnp
pop
shl
inc
jo
jp
add
cli
data16
lods
mov
push
mov
lahf
push
or
loope
xor
sub
push
icebp
fdivl
cmp
mov
lds
out
push
arpl
mov
cmp
inc
pop
iret
popa
pop
movsl
shl
pop
dec
inc
sub
and
dec
mov
jecxz
xchg
sub
nop
push
xchg
mov
xchg
ret
or
mov
cmp
cmp
push
outsb
lret
scas
mov
fbstp
scas
push
pushf
pop
jecxz
scas
jp
jo
mov
xchg
or
xchg
lock
ss
lretw
push
sub
fldenv
xchg
ja
clc
loop
shll
mov
sbb
ss
xor
gs
fstpl
imul
lcall
clc
inc
call
lods
xor
in
dec
lcall
add
fs
pop
push
sbb
inc
aaa
cmp
sahf
inc
scas
xor
insl
mov
jge
add
jg
outsl
mov
cmp
sbb
lea
insl
xlat
negb
inc
xchg
mov
xlat
add
xchg
arpl
cmp
push
ja
push
cli
cld
jnp
sbb
jecxz
cmp
pop
inc
nop
push
inc
jge
sub
mov
xor
fbstp
ds
insl
sbb
leave
insb
cmp
popf
cltd
in
cmc
mov
out
cmpsb
mov
fisttpll
push
js
xor
test
push
sbb
orl
dec
mov
sarb
sahf
into
out
es
sbb
or
and
sti
or
dec
divb
je
pusha
dec
add
jg
rolb
lret
adc
mull
aad
lret
enter
and
jle
aas
sbb
rorb
arpl
pop
push
mov
les
loopne
add
imul
xchg
xchg
adc
push
hlt
jno
dec
nop
and
cld
pop
dec
movsb
inc
das
cmpsl
mov
cwtl
lods
and
or
adc
dec
xor
insl
test
pop
nop
cmp
std
jnp
cmc
jns
xchg
fisttps
inc
sbb
fs
and
push
shrb
jge
popf
xchg
pop
test
ret
loop
shr
or
mov
das
cmp
push
dec
sahf
mov
scas
mov
add
mov
dec
data16
in
in
adcl
sub
jmp
lods
cmp
enter
nop
add
sarb
mov
lret
cs
jne
inc
adc
pushf
push
jg
dec
int
loop
loope
push
fistpll
mov
cmp
je
loopne
add
add
out
mov
add
dec
cmp
andl
mov
jmp
lods
cmp
test
cmp
inc
je
jl
push
fimull
sub
mov
lret
jecxz
mov
lret
out
push
sbb
lods
sub
jecxz
xchg
outsb
je
pushf
loop
inc
in
push
lret
mov
int
out
loope
dec
xchg
gs
sub
cmc
jg
add
int
jns
ljmp
add
std
lds
pop
and
mov
cli
subl
shlb
mov
pop
fnstenv
rcrl
push
mov
mov
jl
mov
cmpsl
dec
jnp
bnd
movsb
xchg
ret
sbb
loopne
pop
xor
inc
into
inc
and
xor
ja
pop
push
call
mov
xchg
sub
add
xor
aas
repz
bound
or
daa
dec
push
pop
out
xchg
xchg
xchg
xor
dec
shl
cmp
push
lock
rcl
out
mov
and
out
lods
xor
add
xorl
mov
mov
add
jno
lahf
add
jp
adc
pop
sbb
mov
mov
jmp
clc
daa
xchg
mov
ja
xchg
ret
gs
jle
jb
insl
push
mov
ficoml
xor
bound
rclb
sub
dec
push
aad
clc
and
mov
in
and
jne
fldcw
loopne
xchg
pushl
in
fldl
dec
loop
shlb
inc
dec
stos
push
lock
cmc
punpckldq
nop
jno
sbb
or
push
icebp
notb
jmp
mov
mov
scas
pop
or
insl
sbb
cmc
cmp
mov
sbb
es
cld
pop
lods
sbb
dec
sub
and
movsl
jg
scas
sbb
dec
mov
mov
es
adc
adc
stc
iret
inc
dec
int
push
inc
jge
fadd
sahf
insl
pop
sub
inc
lret
loope
pushf
outsb
or
outsb
mov
mov
movsb
adc
lods
sti
insb
dec
jmp
push
adc
xchg
repz
jp
push
xor
and
icebp
cli
das
xchg
in
add
cwtl
xchg
les
push
or
mov
cmp
movsl
jge
lahf
sbbb
leave
cmc
push
aas
jmp
mov
and
mov
sbb
aam
push
ret
jo,pn
fs
subps
sub
sbb
int
push
mov
aas
sbb
mov
pusha
repz
and
cltd
shll
pop
subl
mov
cmpsb
pop
nop
faddl
in
pop
xchg
cmc
or
xchg
mov
cmp
dec
out
nop
aad
mov
inc
or
mov
jb
ss
call
fdivs
ljmp
lock
ror
jmp
les
lods
roll
and
pop
pop
push
cs
mov
mov
mov
fidivs
mov
mov
insl
shlb
in
or
shrl
lcall
stos
push
idivl
and
jge
shr
repz
push
and
arpl
insw
jno
cmc
xor
bound
andb
adc
sub
and
cmc
lret
movl
dec
sub
or
insl
pusha
cmp
sub
sbb
mov
adc
lods
adc
ucomiss
xor
fists
scas
leave
mov
fbld
mov
sbb
sbb
pop
push
hlt
xchg
dec
cltd
push
jp
xor
adc
cmp
push
sub
aam
sbb
fdivs
pop
jmp
nop
adc
fcompl
pop
adc
add
das
mov
scas
jecxz
jae
cmova
mov
lcall
mov
xchg
jnp
daa
call
or
cs
rorl
cmp
pop
sbb
test
test
pop
cmpsl
out
mov
dec
or
in
call
jl
lods
in
mov
in
and
jne
inc
push
je
sbb
daa
arpl
in
xchg
scas
jecxz
sub
xchg
hlt
lock
and
cltd
fisttpll
pop
push
pop
mov
mov
test
popl
sbb
jns
xor
push
cmc
fwait
lret
jge
and
mov
nop
fcomi
cld
ljmp
negl
dec
insb
iret
jb
idiv
mov
and
lods
das
mov
rcrl
push
xchg
icebp
add
mov
jb
xchg
sti
mov
lods
aad
xchg
dec
xchg
jbe
out
push
xor
test
mov
or
je
mov
and
jbe
movl
fs
std
stos
xchg
rolb
or
pop
popa
and
cltd
adc
and
inc
jno
fstps
nop
sbb
push
mov
mov
jo
jp
sub
mov
add
xor
jecxz
adc
inc
cmpsl
add
jb
add
inc
outsl
out
xor
popa
push
mov
or
jmp
out
sbb
sarb
mov
ret
call
insl
std
addr16
xor
das
in
mov
add
imulb
jmp
sub
sarl
push
ret
sbb
lods
push
mov
shlb
sbb
mov
push
std
outsl
je
repz
or
sbb
mov
sub
mov
fisubrl
mov
mov
mov
push
mov
cmp
inc
mov
insl
js
and
push
and
pop
cs
cmp
sbb
mov
out
cwtl
add
repz
push
paddq
insl
jnp
addr16
lahf
sub
js
xor
out
imul
ss
ret
fmuls
adc
test
pop
pop
push
or
inc
ljmp
je
add
push
orl
xchg
add
mov
loop
es
loop
cmpsl
das
movsl
icebp
push
data16
jnp
nop
hlt
sbb
iret
sti
std
adc
xor
scas
jbe
mov
nop
dec
les
add
jl
mov
out
jae
adc
mov
push
out
mov
mov
in
mov
xchg
in
pop
mov
xor
inc
adc
fnsave
inc
or
daa
lcall
mov
push
fisubrl
dec
xor
and
faddl
and
ljmp
cmpsb
fildll
aas
dec
and
sbb
dec
jl
dec
test
cmpsl
pushf
loop
pusha
adc
mov
sbbb
add
fildll
jmp
xor
test
and
adc
pop
mov
inc
xchg
gs
lea
jl
xorb
idiv
pop
lahf
testb
sub
xlat
jnp
ds
jle
mov
jnp
add
xor
pusha
lds
fnsave
mov
cmpsb
xlat
cmp
dec
das
cmp
pop
mov
or
repz
or
mov
and
or
adc
mov
xor
adc
int3
adc
mov
inc
xor
stos
aad
dec
stos
pop
jge
dec
pusha
ds
gs
cmpsl
sub
add
bnd
cmpsl
xor
xchg
ljmp
add
inc
or
mov
dec
pushf
xor
fs
dec
loopne
xchg
pop
add
cs
aas
mov
fisttpl
in
add
lock
rcrl
xor
cmp
jnp
adc
cltd
fidivrs
xor
aas
dec
lret
dec
jl
and
pushl
lods
mov
mov
and
mov
sar
add
cmp
aad
inc
lds
pop
mov
adc
mov
in
adc
push
lret
jne
sti
xorb
mov
mov
ja
lods
xor
test
data16
addr16
pop
jbe
ret
push
mov
mov
xchg
negb
ffree
jnp
es
cli
sub
cmp
das
popa
movsl
movsl
imul
xor
push
push
sbb
mov
jmp
sub
fstps
jnp
or
aaa
sub
aas
mov
sub
and
pop
push
jne
out
inc
mov
arpl
fmuls
cwtl
leave
repz
pop
lods
fsincos
xchg
cmp
adcl
and
or
dec
mov
or
mov
push
scas
das
mov
lock
mov
sbb
cmc
inc
in
pop
and
ret
add
sbbl
call
fcompl
fs
adc
push
add
repz
fstps
stc
inc
imul
mov
int
pushf
xor
mov
mull
mov
mov
cmpsb
mov
je
aad
mov
test
shrb
mov
pop
lods
js
mov
jae
or
mov
adcb
xchg
xchg
clc
jnp
lahf
fs
or
sbb
inc
es
push
stos
inc
scas
in
sbb
mov
inc
mov
lods
dec
lcall
lcall
pop
test
sub
xchg
mov
xor
pop
cmpl
xor
arpl
scas
mov
in
daa
and
mov
popf
add
or
and
leave
jge
xor
push
xchg
jo
sbb
shrb
inc
and
loopne
int3
nop
repz
push
add
cld
decb
mov
push
lret
jecxz
pop
aas
fwait
fwait
cmovo
xchg
xor
cmp
rcrb
leave
add
sahf
jae
es
mov
shl
mov
js
insb
jp
out
sub
call
sbb
push
and
mov
push
cmpsl
fdivrl
dec
das
in
aam
pop
addr16
out
out
jmp
aad
js
sub
xchg
imul
clc
pop
popa
add
cmp
loope
jns,pn
cmp
aad
cmc
jmp
lock
jp
adc
xchg
fidivrs
add
aam
aad
gs
repnz
mov
mov
movsl
gs
sbbl
outsl
xchg
xchg
cmp
lea
cwtl
pop
enter
enter
loope
scas
xchg
shll
fildll
cmp
pop
or
cmp
cmp
les
ds
das
aad
nop
sarl
ljmp
ficomps
int3
add
push
jbe
or
dec
push
mov
test
adc
cmpl
jbe
es
jecxz
mov
or
push
pop
xchg
out
adc
loope
sbb
iret
aas
int3
icebp
clc
loope
sub
lahf
out
xlat
ffreep
mov
sbb
enter
fdivp
sub
rorb
outsb
insb
popf
stos
mov
push
test
aas
in
jno
sahf
ljmp
shlb
out
aam
bound
dec
int
loop
add
and
cmc
rcl
dec
mov
push
jne
mov
mov
mov
in
xchg
xchg
test
push
cmc
ss
dec
rorl
pop
push
sbb
push
pop
sahf
cltd
xchg
fidivs
mov
xor
jl
sbb
inc
lcall
mov
pop
jb
add
cld
negl
and
loope,pt
pop
test
add
paddb
sbb
inc
add
aad
cmpsb
sbb
stos
lcall
xchg
movsb
xor
aam
mov
movsb
sub
lahf
cld
mov
jmp
jmp
shlb
cmpsl
add
into
push
es
jno
out
in
jns
dec
out
or
pop
or
jecxz
cmp
lcall
or
pop
mov
pusha
arpl
xor
dec
jecxz
out
sahf
in
cs
jecxz
dec
fcoml
test
mov
or
mov
test
mov
lahf
sub
mov
decl
lahf
imul
repz
add
jg
fcoml
sahf
add
pop
jge
mov
scas
adcl
push
aam
popa
mov
and
mov
push
es
inc
test
pushf
push
cmp
into
adc
ret
mov
jb
adc
xchg
xorl
repnz
or
clts
sub
or
jecxz
dec
inc
loop
shlb
das
cmp
in
test
movsl
pop
int3
pop
pop
jbe
faddl
int
and
in
mov
sti
mov
xor
jo
sbb
pop
sbb
sub
jp
js
imul
cltd
push
addl
inc
mov
stc
jp
push
aaa
sbb
cmpl
clc
aad
add
jmp
cmp
stos
mov
jge
clc
cmp
xchg
xchg
jp
inc
inc
mov
fwait
jmp
mov
out
test
cld
dec
push
les
or
mov
push
rclb
scas
je
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
ljmp
lret
fiadds
sahf
movsl
popw
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
and
and
fidivs
xchg
sbb
mov
int3
lods
daa
mov
lret
test
lret
mov
mov
fldenv
inc
test
jl
jmp
xchg
scas
cli
pop
lret
fiaddl
out
xchg
sar
dec
mov
sub
or
fmulp
jmp
aam
scas
test
jle
fistpl
push
pop
mov
pop
xchg
mov
out
pop
push
shl
dec
mov
sub
jne
lret
push
inc
cmp
rdmsr
cs
and
or
xchg
mov
and
sbbl
out
xchg
sarb
out
loopne
pop
xchg
mov
fiadds
lret
cmp
xchg
movsl
fsubrp
into
mov
shll
out
mov
pop
lret
fiaddl
sahf
movsl
lahf
pop
lret
fiaddl
sahf
movsb
fiadds
lret
filds
sahf
movsl
ficoms
mov
rcl
jecxz
cmpsl
fiadds
dec
mov
shll
sahf
movsl
into
pop
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
xchg
movsl
mov
lret
sub
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
mov
fiaddl
sahf
mov
pop
lret
fiaddl
in
push
test
pop
out
inc
lock
into
aas
fiaddl
sahf
movsl
cs
mov
or
out
movsl
fiadds
lret
fiaddl
sahf
movsl
ds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
sahf
movsl
fiadds
lret
fiaddl
mov
ficoms
lret
js
fidivl
mov
cld
push
dec
outsb
adc
mov
imul
inc
test
xchg
mov
sahf
pop
std
and
test
aaa
xchg
jecxz
fimuls
push
xor
rclb
and
fcmovnu
cwtl
push
mov
pushf
scas
dec
mov
jl
push
stc
xlat
mov
push
inc
mov
mov
test
movsl
mov
data16
sar
dec
iret
and
push
cmc
ljmp
divl
data16
sub
cmpsb
aad
leave
mov
orl
xor
ljmp
adc
mov
ljmp
xor
ja
and
sbb
push
sub
inc
mov
jg
lock
cmp
inc
add
repz
pop
jl
pop
mov
dec
lods
ja
pop
fcomip
subps
jl
xchg
push
sbb
rorb
sbb
loopne
test
test
cmp
ror
aad
or
pushf
pop
fs
cld
inc
jp
fwait
testl
cmpsb
pusha
jb
lahf
sti
rorb
push
jns
lock
or
and
leave
jecxz
inc
or
mov
mov
mov
rep
mov
jecxz
popf
lahf
push
test
push
mov
push
or
push
rep
aad
test
push
ret
sar
cld
cmp
cmp
hlt
cmc
adc
inc
scas
loope
dec
dec
sahf
or
insb
xchg
xor
out
cld
rcll
push
mov
mov
sarl
dec
data16
push
mov
dec
mov
pop
lahf
aad
push
push
mov
imul
gs
ss
mov
ss
mov
push
lahf
jae
dec
fs
adc
dec
inc
imul
push
leave
sbb
cs
and
cmp
dec
adc
cltd
cwtl
pop
push
pushl
sbb
shrl
fstpt
push
cmp
in
test
adc
xchg
or
sarb
and
dec
jg
repnz
testl
lret
ljmp
addl
push
in
ss
inc
push
lret
jle
in
pop
inc
dec
jecxz
in
or
fldenv
mov
lea
lds
jae
sub
xchg
push
loope
bound
mov
dec
lock
out
or
rorb
fdivs
mov
sub
jle
xchg
jnp
cmpsl
bound
xor
lret
gs
fdivl
enter
pop
and
icebp
mov
cmp
sub
jne
ror
and
add
jmp
popa
pop
cs
inc
insb
jo
xchg
push
jbe
mov
xlat
mov
mulb
jnp
jle
pop
pop
filds
cld
adc
lret
adc
dec
xor
push
lret
cwtl
dec
mov
mov
mov
clc
or
pusha
sbb
jmp
repnz
or
mov
xchg
cs
cmp
out
cs
pop
jae
sarb
jnp
movsb
addr16
lods
add
insb
sbbl
dec
test
in
push
pusha
fsubrl
sbb
add
and
lock
jne
adc
out
lret
mov
mov
adc
lock
enter
iret
lods
arpl
in
in
push
es
mov
andl
js
pandn
out
pop
lods
lock
adc
test
inc
adcb
in
xchg
out
pop
or
push
xchg
and
mov
cmp
cwtl
or
mov
xchg
inc
in
ret
inc
shll
push
and
lea
add
pop
clc
lahf
dec
jmp
xor
push
adc
dec
xor
mov
aaa
pop
ds
adc
ficompl
bound
push
rol
out
mov
xor
cli
xor
shlb
and
arpl
fistpl
pop
mov
sarl
mov
lea
dec
dec
pop
popa
push
out
sahf
aaa
sbb
jno
inc
mov
test
dec
add
mov
aad
push
scas
shrl
jns
repnz
push
sub
stos
mov
push
mov
in
das
mov
fisttps
ficompl
mov
daa
lahf
pop
inc
aam
push
xlat
push
cmpsl
test
lret
or
push
es
ss
fistps
xchg
aad
inc
pushf
dec
movsl
fisubl
mov
jb
jnp
jle
or
xor
sub
subl
in
mov
push
add
fnsave
xor
inc
leave
xchg
push
sbb
add
shlb
call
fimuls
xor
fadd
js
mov
sub
into
pop
mov
sbb
in
ret
add
inc
push
repz
sub
jae
and
xchg
scas
or
out
mov
lods
js
sbb
xlat
xor
push
iret
dec
pop
mov
adc
enter
cwtl
and
sub
jmpw
data16
jb
jmp
cmp
or
pop
fidivl
jp
xor
sub
sbb
or
movsb
jmp
loop
xor
popa
insb
pop
add
jecxz
sub
sbb
sub
push
outsb
imul
add
xor
loope
jne
sub
push
and
leave
inc
stos
or
fadds
mov
xchg
push
add
or
mov
fsubs
lods
sub
inc
mov
shll
out
dec
jp
pop
pop
add
jne
cmp
in
sbb
add
jle
stos
scas
pop
pop
pop
pmulhuw
sbb
jge
mull
addr16
insb
push
inc
push
mov
lock
scas
sar
xchg
ret
mov
stc
mov
lret
movsb
cld
mov
mov
push
addb
popa
es
pop
add
popa
rcrb
adc
outsb
mov
add
sbb
xor
mov
add
push
push
fcoms
push
in
xor
xor
hlt
add
mov
adc
lret
push
mov
icebp
in
nop
lahf
hlt
xchg
fisubrs
add
xchg
nop
and
lea
popf
xor
xchg
outsb
mov
ja
or
leave
fst
mov
andl
jmp
int3
test
mov
fiadds
gs
inc
xchg
fistpll
shrl
gs
loop
xchg
adc
dec
xor
dec
insl
imul
cmp
ja
stos
and
mov
ss
lahf
test
mov
jae
test
cmp
sar
mov
sbb
jmp
inc
pop
into
repnz
mov
xor
dec
inc
or
fisttpl
decb
ja
in
add
inc
jae
pop
ret
imul
mov
jmp
mov
aas
dec
inc
sub
and
push
and
sub
scas
xor
sub
faddl
jnp
xor
jle
ja
xchg
adc
lods
or
aam
clc
xor
leave
nop
fld1
shll
inc
mov
cmp
or
inc
or
aad
add
sub
cmc
cmp
clc
inc
subb
dec
push
loop
fisubrs
inc
mov
in
xor
repnz
add
rcl
rorb
fs
sub
dec
pop
push
cmpsb
dec
xchg
repz
adc
rsqrtps
jecxz
ds
in
and
xor
xor
xor
cmpsl
mov
mov
mov
js
sahf
icebp
enter
andb
pop
pusha
inc
push
jg
bound
jp
adc
testb
mov
pop
jg
daa
inc
enter
fidivs
mov
xchg
sbb
mov
cmp
mov
gs
std
xchg
shlb
dec
das
mov
ret
mov
push
cmp
stos
jb
popa
pop
cltd
xor
adc
lret
mov
xchg
insl
mov
leave
jnp
mov
add
fcoms
dec
jnp
mov
nop
jg
les
cmp
aaa
inc
fwait
cmc
xchg
in
xchg
dec
mov
jno
push
icebp
xorl
adc
leave
fmul
jle
mov
sub
les
pop
sbb
jb
jnp
js
xlat
mov
clc
lock
adc
icebp
xchg
sbb
xor
xor
dec
mov
fwait
sub
fcmovnb
dec
sub
jno
cmp
in
mov
sarl
push
das
ret
in
setge
sti
pop
xchg
data16
fldenv
push
inc
cmpsl
xchg
ljmp
jno
jns
mov
daa
push
aas
fs
int3
adc
enter
loopne
or
movsb
test
sub
or
jl
sub
or
pop
ja
mov
pop
out
mov
pop
pop
clc
xlat
jg
sbb
cmc
seto
rclb
adc
jle
jnp
js
ss
mov
insb
int3
push
xchg
mov
mov
sarb
fs
jle
stos
js
pop
cltd
jg
cs
aas
push
das
pop
movsb
push
sub
sbb
mov
out
push
mov
subl
leave
scas
mov
mull
in
adc
aas
push
int3
sbb
sub
cmp
les
cltd
mov
mov
add
or
xchg
popa
jl
orb
mov
daa
addr16
mov
clc
cwtl
push
mov
les
cmc
jno
lret
in
jno
and
mov
int3
mov
jle
dec
push
push
cltd
frstor
fildll
adc
in
mov
sbb
push
jle
add
out
and
and
sub
sub
push
push
dec
mov
inc
inc
inc
out
add
ret
add
aas
mov
push
in
jns
add
repnz
rol
pop
sub
add
jbe
xchg
adcb
push
loopne
sbbl
push
xor
inc
stc
push
cltd
xchg
addr16
mull
mov
fdivl
mov
dec
test
test
mov
xorl
sbb
adc
jge
and
and
lret
pop
cmp
leave
mov
bound
test
mov
add
sub
ds
ret
sti
or
test
sbb
rcl
jns
sbb
push
out
mov
xchg
inc
arpl
jae
adc
pop
popa
dec
push
stc
sbbl
jbe
xchg
jne
call
stos
cmp
ret
inc
cmp
in
lock
inc
mov
stos
add
ret
pop
dec
mov
popa
insl
addr16
jge
aas
sub
fucomi
pop
scas
mov
mov
leave
mov
push
lods
leave
jge
and
fwait
jbe
pushf
and
daa
popf
xor
shl
test
aaa
xor
in
mov
inc
cmpsb
jle
add
das
sbb
mov
je
in
dec
xchg
xor
jl
xchg
and
cltd
sbb
adc
and
sub
imul
push
mov
divb
mov
xor
repnz
aaa
les
roll
mov
mov
jno
aas
and
mov
mov
add
out
fisubs
mov
cwtl
and
lds
mov
sbb
sub
push
adc
out
rcrl
dec
sub
mov
push
jge
and
sti
dec
lea
xorb
xchg
in
xchg
ficomps
lods
lock
lcall
jle
jl
nop
imul
cmpsb
inc
add
hlt
loopne
loope
sub
jg
cmpsl
adc
inc
sbb
fsubl
adc
mov
push
xchg
outsl
add
inc
cmp
or
fldt
push
sti
in
dec
mov
pusha
add
rorb
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
