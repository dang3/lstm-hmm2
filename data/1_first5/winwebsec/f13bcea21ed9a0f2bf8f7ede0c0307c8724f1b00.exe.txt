sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
call
mov
push
call
lea
push
lea
push
call
test
jne
push
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
add
mov
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
push
push
push
call
movl
jmp
movb
movb
movb
push
call
pushl
pop
mov
mov
push
call
movl
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
mov
push
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
push
mov
push
call
aam
stos
xchg
call
sub
mov
mov
and
jns
inc
in
cwtl
scas
test
les
sub
inc
mov
lahf
shl
cmp
sbb
inc
inc
jle
jo
or
sbb
mov
aaa
mov
loope
cs
sbb
sbb
dec
lods
jo
fcoms
ret
fldt
cs
pop
popf
popa
inc
xor
fdivs
call
vmwrite
or
pop
les
jo
cmp
shll
mov
push
int
in
mov
sbb
cmp
filds
add
mov
jbe
lret
dec
xchg
push
repnz
xchg
das
stos
adcl
lahf
xchg
push
pop
mov
imul
mov
js
mov
push
push
scas
pop
pusha
jae
push
mov
notl
mov
cmp
mov
icebp
jge
sub
outsb
and
inc
xor
add
dec
xchg
insl
pop
xchg
cmpsl
icebp
testb
inc
or
jge
scas
arpl
mov
push
lods
inc
pusha
cmp
and
cli
into
loopne
and
shll
xor
lret
mov
ret
jecxz
inc
mov
scas
scas
test
jae
ds
pop
fisubrs
xor
shlb
mov
outsb
inc
pop
jecxz
clc
lcall
sbb
cs
sub
mov
push
mov
jl
mov
scas
dec
les
pop
add
mov
sbb
ret
or
fdivrl
cmp
test
loope
xor
lea
stos
ljmp
lea
pop
dec
mov
or
aas
and
and
fiaddl
outsl
mov
test
pusha
jo
sbb
push
popa
sub
gs
adc
cwtl
mov
aam
cmpsl
pop
ljmp
xor
or
mov
cmp
jle
inc
test
mov
or
push
xor
scas
mov
idivb
mov
cmp
or
cmp
sbb
mov
leave
mov
aad
cmpsb
gs
cmpl
addr16
cmc
push
fcomip
daa
xor
pusha
add
addb
ljmp
fisttpl
decb
xchg
repz
mov
pop
pop
mov
xor
mov
addl
sub
and
adc
sbb
adc
cmp
push
sub
mov
cmp
xchg
dec
out
out
xchg
cwtl
push
leave
out
scas
testl
or
loope
sbb
mov
call
stos
xor
stc
adc
mov
sar
pop
aam
insl
mov
pushf
sarb
bound
inc
xor
mov
jne
and
addb
les
sub
das
or
push
pushf
mov
loope
in
inc
xchg
pop
popf
jo
out
xchg
sub
jnp
mov
cmc
aam
lret
std
fidivrs
mov
fptan
or
aaa
or
dec
push
pop
jmp
jp
sub
je
das
into
out
mov
ret
aaa
popf
push
std
imul
sub
popf
fistl
test
sahf
or
mov
enter
dec
mov
cmp
cld
lea
xchg
arpl
push
push
push
mov
lods
fbld
cmpsl
lods
ljmp
mov
sub
xchg
and
in
lret
test
movsb
imul
pushf
push
rcrl
mov
mov
cmc
jo
push
fsts
pusha
sbb
or
syscall
out
and
inc
mov
jg
arpl
mov
jns
negl
lahf
jnp
addr16
dec
out
mov
lods
sbb
or
mov
push
mov
sbb
lcall
rclb
aaa
inc
dec
and
xchg
sbb
or
mov
jle
es
xchg
aaa
jmp
fisttps
push
lahf
in
or
jle
pusha
dec
sahf
subb
dec
ret
popa
cmpps
inc
ret
push
dec
dec
cltd
cmpsb
cltd
mov
fxch
inc
adc
add
dec
mov
lahf
mov
jl
jecxz
lahf
inc
push
jns
pushf
push
sub
xor
push
pushf
arpl
jmp
xorb
jmp
ja
subl
scas
lcall
and
pop
inc
cld
call
int3
outsl
lret
inc
mov
out
adc
pop
mov
fsub
adc
mov
mov
aaa
int
pop
popf
sub
and
sub
lret
rorb
outsb
mov
iret
cmp
adc
dec
jge
mov
and
jmp
fdivl
lret
push
imul
jmp
icebp
xor
sbb
pop
and
call
pop
je
outsb
mov
out
jb
jle
ficoms
ja
int3
subb
ss
or
scas
push
mov
cmp
and
mov
xor
add
jmp
dec
les
out
jle
xchg
mov
out
jb
lds
inc
mov
insb
insb
insl
pop
mov
test
gs
or
xor
popa
ret
pop
mov
jbe
jmp
mov
or
lods
stos
ficomps
fisttpll
test
scas
dec
faddp
pop
mov
dec
inc
sbb
pop
cmc
lds
aad
jnp
enter
sub
ret
pop
inc
fcmovb
out
pop
jno
dec
jae
in
loope
ret
push
cmp
mov
adc
lods
in
xor
mov
lds
xor
pop
cld
call
adc
push
xchg
test
in
cmp
js
mov
stos
adc
pop
sub
cwtl
mov
mov
addr16
xor
sub
cmpsl
jecxz
jle
push
stos
mov
jecxz
out
lea
mov
add
xchg
xchg
insb
test
int
sbb
jb
lahf
lds
mov
arpl
fstpl
ficoml
and
push
dec
xchg
rorl
popf
movsl
sub
mov
rcrb
fs
hlt
dec
rcl
dec
lock
mov
xor
or
lret
jb
rcrl
mov
add
push
lahf
shll
inc
xor
out
outsl
pusha
out
xor
sub
xchg
cltd
dec
sti
cwtl
pushf
test
xchg
add
pusha
mov
fwait
mov
and
test
mov
xchg
xchg
dec
flds
mov
mov
fwait
adc
clc
sbb
mov
insl
ret
cli
xchg
fadds
push
gs
movsb
imul
jle
jl
cmpsb
jae
sbb
popf
xchg
sub
mov
inc
and
xchg
jp
jo
mov
punpckhdq
movsl
std
sub
or
cmp
clc
fsubl
subl
sbb
mov
stos
in
jnp
inc
jbe
add
repnz
movsb
cmp
notb
mov
enter
or
inc
out
mov
push
cmpb
pop
outsb
jp
mov
sub
mov
add
rolb
inc
pop
xchg
jg
or
int3
in
outsb
and
testl
jno
xor
mov
ja
xchg
lret
mov
push
pop
lds
nop
adc
adc
outsb
mov
and
or
sti
pop
mov
mov
push
call
repnz
lods
xlat
inc
dec
mov
fldenv
pop
das
pushf
or
fistpl
adc
pop
daa
lds
pop
pusha
cli
movsl
cwtl
push
adc
clc
insb
repnz
dec
cmpsl
lock
test
js
aad
mov
cmp
mov
dec
aad
out
dec
or
mov
xchg
sub
mov
xchg
add
test
enter
int
sbb
xlat
adc
xor
popf
daa
popl
xchg
add
roll
mov
lahf
imul
sahf
sbbb
daa
enter
adc
adc
xor
adc
rorl
jmp
xor
and
push
fdivrl
es
mov
in
rcrb
adc
jae
or
int3
ret
fs
rcrb
movsl
ret
mov
dec
jb
test
xor
scas
mov
fnstsw
push
fsubr
loopne
int3
cmp
dec
lahf
sub
add
push
pusha
out
push
mov
cmpsb
popa
pusha
xor
outsb
sub
out
push
mov
std
sub
xchg
jae
mov
xchg
jg
jge
stc
sbb
ret
fwait
and
nop
out
adc
in
mov
test
in
and
test
fmuls
adc
jae
mov
or
stos
mov
testl
imul
fwait
push
xchg
shrl
cmp
into
jne
or
xchg
pop
dec
cltd
test
jne
adc
lods
jmp
pop
and
push
stos
push
adc
cmpsl
mov
sar
add
and
cmp
insl
dec
or
add
jbe
ss
cmp
fnsave
adc
aad
dec
adc
jg
pop
push
push
stc
pop
test
roll
pop
pop
enter
jecxz
lcall
in
push
mov
incl
add
push
cwtl
in
add
mov
aad
divb
jge
jp
das
cli
and
xchg
cli
sub
imull
dec
imul
lods
cmpsl
jne
push
aaa
or
xor
dec
scas
sub
or
push
hlt
cmp
testl
mov
subl
pop
int3
cmp
mov
add
popa
sbb
lret
cmp
jg
sbb
or
aaa
mov
ficoms
mov
les
cmp
mov
and
jns
push
in
addr16
and
sbb
stc
inc
mov
in
inc
and
cmp
leave
inc
sub
pop
subb
sbb
push
cmp
loopne
or
rcrb
xchg
ljmp
xchg
in
cmpsl
xlat
lods
mov
mov
popa
cld
test
inc
insb
addl
sti
std
sti
inc
push
cmpsb
mov
dec
push
pop
in
jle
ss
adc
dec
inc
adc
loopne
pop
shr
popf
mov
pop
decl
xor
fmull
xor
and
dec
test
mov
mov
mov
test
dec
ds
movsl
mov
jnp
push
jno
inc
pop
dec
jle
jge
inc
out
lods
cmp
cmpsl
sub
or
clc
adc
xchg
sarl
push
pop
js
leave
pop
call
mov
popf
sahf
dec
jb
xor
loope
cmp
add
mov
push
jnp
std
push
out
pushf
ljmp
test
fstpt
add
out
aas
xor
mov
mov
pop
mov
jnp
xor
and
inc
aaa
lock
jnp
cmpsb
add
orb
sahf
or
mov
push
sahf
and
insl
pop
outsb
or
jnp
sub
test
sbbl
cmp
sbb
ja
enter
mov
jb
in
in
mov
fiaddl
xor
xchg
mov
sahf
inc
jg
les
cmpsb
aaa
rcrb
push
in
mov
dec
cltd
test
rcrb
or
sbb
frstor
ror
adc
es
pop
lods
fbstp
adc
sbb
mov
lds
pop
popf
mov
xchg
testl
cs
movsb
lcall
repnz
push
adc
js
ljmp
dec
in
test
or
adc
iret
push
mov
or
lods
fdivs
jl
xlat
cltd
adc
or
cmp
sub
lds
add
sbb
frstor
push
push
or
adc
inc
imul
sub
mov
fistl
repz
push
enter
adc
fs
and
aas
jp
mulb
dec
lods
push
shlb
lret
mov
lock
push
xor
push
test
es
stc
jne
jg
out
shl
andb
jp
shll
lret
mov
enter
test
iret
fs
int3
dec
jecxz
mov
push
xchg
shll
mov
out
sbb
in
mov
push
sub
pop
shr
lock
iret
adc
jge
lret
jg
sbb
mov
loopne
cmp
push
xchg
arpl
pop
jmp
dec
ds
arpl
sbb
dec
cmp
out
mov
insb
mov
inc
repz
scas
push
xchg
std
push
lods
aad
xor
movsb
xor
lcall
sub
push
pop
lock
lcall
lds
xchg
and
push
dec
push
lret
rclb
mov
xor
arpl
imul
in
xor
cmpsb
in
inc
mov
rolb
push
adc
rorl
pop
clc
ja
enter
xor
xchg
daa
ret
arpl
mov
inc
push
cmc
sbb
inc
shll
rolb
push
hlt
dec
in
mov
inc
sub
in
add
fsub
mov
sub
push
or
sbb
add
jmp
mov
add
push
xor
imul
and
jae
pusha
sahf
and
mov
lods
outsl
sbb
pop
sbb
xchg
adc
or
push
ret
pop
cld
mov
push
les
aad
pop
pop
push
sbb
shrl
out
lret
lds
pop
jne
movsb
out
add
loopne
inc
scas
in
inc
cmp
dec
lcall
ss
xor
mov
out
lock
dec
dec
cltd
dec
xchg
cmp
loopne
inc
cmp
xchg
inc
dec
div
test
pop
jne
push
mov
xchg
jns
sti
cmc
add
fwait
lret
push
pop
or
adc
je
insb
sbb
mov
xchg
fiaddl
out
clc
fwait
out
movsb
fiadds
imul
aad
xchg
inc
data16
faddl
jb
movsl
xchg
ss
ljmp
rcrb
repz
mov
inc
xor
jl
outsl
or
mov
inc
ja
or
mov
push
out
sarb
fadds
mov
mov
inc
or
insb
addr16
pushw
enter
xlat
push
and
adcb
sbb
mov
and
cmpsb
push
shll
pushf
mov
fwait
loopne
push
ret
mov
inc
in
test
push
sub
push
inc
mov
js
mov
mov
dec
pop
mov
insl
mov
mov
push
pop
cmp
movsb
ja
and
negw
clc
ret
xchg
cmpl
notl
sahf
xor
aad
pop
cmp
or
xchg
out
mov
rorl
xor
in
push
push
adc
pop
lret
lea
rolb
push
js
test
mov
xor
dec
cmp
lahf
stc
push
add
mov
jae
fdivrs
popa
incw
jmp
scas
mov
dec
gs
inc
incl
dec
jecxz
push
gs
jp
push
movsb
mov
adc
jo
dec
mov
add
xchg
je
jmp
rcrl
sub
and
test
mov
aam
insb
mov
shl
xor
mov
pop
cmp
call
sbb
ficoms
ss
jl
pop
data16
lahf
inc
mov
and
int
dec
add
dec
int3
jae
popa
repz
hlt
aad
and
repnz
jecxz
push
xlat
nop
lds
inc
fsubrp
lods
xchg
sub
add
or
mov
loop
push
xor
lret
daa
xor
fldcw
mov
mov
jmp
cmpsb
lods
or
pop
mov
xchg
lea
orb
add
arpl
inc
jge
mov
jecxz
pop
out
xor
ss
mov
pop
fistpl
xlat
cmp
pop
jl
sub
and
mov
ret
add
fmuls
xor
cmp
pop
mov
fwait
aas
xchg
fimull
dec
xchg
inc
xchg
ss
cmp
xorl
adc
fsubs
movsl
jns
je
xor
sub
inc
jl
negl
shll
xor
call
jmp
insl
adc
loopne
mov
in
jo
insb
fmul
imul
loope
pop
inc
in
jmp
xchg
add
sub
pop
sti
xor
shrb
adc
push
mov
mov
sahf
push
mov
mov
cli
sub
or
aaa
xor
jmp
das
pop
pop
xor
frstor
cmp
cltd
add
js
hlt
sub
inc
gs
mov
test
orl
fildl
int3
push
outsb
mov
inc
and
ds
sbb
dec
out
xor
stos
push
xchg
jle
jecxz
aas
rol
sbb
ret
sub
cs
mov
mov
mov
out
fnstcw
lods
sbb
pop
stos
adc
mov
sbb
pop
gs
sbb
mov
cmp
pop
lea
xchg
pushf
cs
js
add
sti
xor
int
negb
lods
jnp
or
outsl
stc
inc
pusha
push
mov
xchg
xchg
nop
pop
xchg
pop
xchg
out
loop
jg
sbb
call
repz
in
addl
xor
mov
lret
and
mov
cltd
mov
dec
push
addr16
lret
xlat
icebp
sub
mov
adc
xchg
sub
jno
aam
out
jmp
pop
js
js
aam
or
fsubs
ret
lea
inc
mov
ficoml
or
int
imul
movsl
lea
inc
or
cmc
les
repz
and
out
jno
jnp
jmp
and
ja
mov
in
sbb
mov
ljmp
inc
ds
dec
xchg
loop
mov
push
ret
adc
fisubl
nop
pushf
adc
push
fidivs
dec
cmp
ja
adc
aad
insb
loope
movsb
jecxz
xchg
ret
aam
sbbl
or
bound
mov
fs
clc
or
push
scas
dec
jb
loope
jnp
add
dec
jne
or
jle
mov
lret
xor
lock
pop
adc
in
aas
leave
in
sub
icebp
add
lcall
xor
pop
addr16
aad
loop
and
xor
push
mov
jbe
cli
sbb
repz
mov
sub
lods
dec
loop
xor
cli
cwtl
mov
xchg
leave
jns
cmpsl
mov
jne
xchg
mov
fs
rcl
cli
stc
adc
jno
shll
dec
or
xor
mov
fists
dec
cli
lds
push
leave
std
add
mov
sbbb
repnz
fwait
in
rcrl
sub
xchg
jmp
fbstp
mov
sbb
clc
mov
and
lcall
and
sub
out
cmp
jmp
jae
hlt
iret
push
pop
add
mov
sarb
bound
adc
imul
push
mov
adc
add
into
or
jo
cmova
aaa
xor
mov
adc
dec
push
lcall
xchg
pop
orb
pushf
fsubs
and
add
jne
sbb
in
jp
or
fisubrs
jne
rorb
mulb
cmp
or
adc
aam
int3
test
and
mov
mov
ja
and
inc
ret
call
cmc
mov
in
jge
mov
lds
jns
push
mov
sarb
push
inc
stos
imul
gs
lret
dec
pop
add
and
sub
loopne
insb
into
pop
int3
ljmp
xchg
inc
or
lahf
sbb
pop
sub
je
add
lods
sub
cmp
shrb
xchg
xchg
push
dec
dec
sbb
dec
aas
xor
std
xor
shr
mov
lods
lods
xchg
dec
sbb
dec
mov
sbbb
sbb
push
dec
subl
hlt
adc
xchg
andb
das
add
push
fwait
push
loope
jo
xchg
jb
stos
jmp
inc
sub
lret
or
cmp
lods
out
mov
mov
mov
cmp
daa
nop
fucomi
fsubr
sbb
imul
test
cmp
adcl
sbb
in
ffree
sbbl
xlat
sub
push
es
jp
call
pop
lods
push
xor
aad
mov
es
cwtl
push
push
dec
inc
add
mov
xor
sub
aad
adc
leave
das
lock
add
push
les
insl
and
stos
fdivr
mov
aam
ljmp
lock
ret
push
mov
sub
mov
popf
fimuls
sahf
cmp
in
xor
pop
cmp
ljmp
and
push
push
pushf
cmpsb
push
pop
stc
xor
fsubp
and
mov
or
insl
lcall
push
cmpb
std
push
test
cmp
pop
cmp
lret
shll
addl
daa
cmpsb
shrb
cltd
push
lds
and
scas
gs
and
mov
mov
jecxz
dec
mov
or
stos
add
pop
inc
push
outsb
insl
sahf
mov
dec
sbb
adc
cmp
int3
cli
xchg
scas
icebp
pusha
sbb
insl
push
pop
and
adc
dec
pop
mov
push
shrl
fnsave
movb
push
stos
fstpl
lahf
inc
jl
and
jo
int3
xchg
pop
ja
jbe
movsb
icebp
nop
dec
fdivrs
mov
mov
pop
pop
add
les
imul
or
sbb
xchg
ret
ja
or
fs
aaa
sub
or
xchg
and
push
mov
or
mov
lcallw
js
test
xor
mov
cmp
mov
testb
test
ret
and
cmc
mov
testb
fldcw
adc
xor
adc
js
mov
leave
mov
push
mulb
and
add
mov
xchg
adc
int3
pop
repnz
mov
xchg
cmp
sub
cmc
dec
xchg
mov
jns,pn
test
hlt
insl
stc
addr16
sub
mov
cmp
rol
and
mov
xor
dec
or
les
loop
or
push
rcll
and
mov
mov
pop
pop
frstor
std
aaa
test
cmpsl
adc
jno
mov
movsb
xchg
mov
lods
mov
mov
notl
mov
andl
lret
or
cmp
arpl
adc
mov
insb
inc
cmc
stos
ficomps
or
jge
mov
les
fnstsw
push
movsl
push
dec
mov
shll
sbb
sub
adc
clc
adc
xchg
test
pop
fs
xchg
xchg
lret
inc
outsb
adcb
cmpsl
js
cmc
or
out
fists
add
stos
pop
sub
dec
test
sbbl
leave
mov
jecxz
cmp
mov
stos
and
push
xor
insb
or
mov
jne
jmp
push
push
cmp
pusha
xchg
js
cmp
loopne
mov
or
shrd
or
mov
cmpsl
xor
sub
outsb
xchg
pop
pop
orl
int
incb
int3
outsb
scas
lahf
fwait
loope
xchg
mov
mov
test
add
movsb
insl
gs
add
and
pop
popa
mov
scas
stos
cltd
and
mov
push
pop
sti
cmpsb
adc
cmp
iret
cmp
push
int3
xchg
nop
jl
xchg
cmp
scas
xor
data16
cmp
imul
or
mov
clc
and
mov
or
fisttpl
mul
and
rcll
push
outsb
jo
jo
mov
and
mov
lret
loop
push
gs
cmc
xor
push
rcl
in
cs
sbbb
fwait
sbb
fdivrl
rclb
orb
ja
adc
inc
andb
inc
and
jecxz
add
and
push
sbb
mov
addr16
popa
lcall
iret
mov
clc
cltd
or
and
inc
daa
nop
mov
inc
int
jp
movsl
push
test
insb
xor
inc
jge
das
loope
scas
lock
je
ljmp
loope
xchg
jo
dec
jns
mov
dec
mov
add
cs
cmp
adc
mov
mov
add
lods
lahf
sub
cld
js
test
out
rcll
add
mov
aad
outsl
jmp
pushf
scas
adc
mov
push
outsb
lea
popa
dec
push
mov
pop
xor
cmp
xchg
xor
pop
bound
les
sbb
mov
out
mov
les
mov
pop
das
pop
mov
xchg
jp
mov
aas
out
inc
pop
loope
das
sub
ss
inc
rcll
lds
pusha
outsl
lcall
enter
test
inc
scas
mov
push
loope
test
outsl
fwait
mov
push
adc
int3
fwait
mov
mov
cmp
xchg
lds
lods
arpl
scas
test
push
mov
test
rolb
mov
pusha
orb
dec
mov
fiaddl
test
cmpl
insb
mov
xchg
fiaddl
stc
jl
rcrl
mov
adc
xor
call
and
mov
popa
jnp
loop
lods
adc
test
pop
loope
or
push
xor
sbb
loope
fwait
rolb
repnz
in
xchg
or
sub
push
test
fmulp
push
movsb
cld
sbb
pop
push
dec
sub
popf
or
mov
xchg
xlat
add
dec
sbb
pop
mov
sub
xor
adc
xor
cwtl
cmp
push
mov
mov
rolb
dec
cmc
sbb
lcall
sbb
sub
dec
aam
stc
xchg
cmpsl
sub
or
rcrl
sub
dec
jne
jecxz
dec
mov
das
sbb
xchg
jnp
xchg
popa
mov
add
add
gs
mov
cld
out
cmp
fcomp
pop
popa
lock
adc
sbb
popa
jnp
lcall
jns
xlat
movsb
pop
jp
loope
sarb
xchg
fcoms
clc
jg
clc
lret
movsb
xor
cli
insb
dec
and
jge
mov
cwtl
jge
jns
and
dec
inc
mov
or
pushf
inc
in
pop
push
loopne
pop
mov
ror
out
adc
jg
and
fldpi
mov
int
xchg
xchg
into
jnp
call
and
ss
push
and
cli
cmpsb
lret
mov
mov
adc
mov
sub
hlt
xchg
shlb
dec
aaa
mov
or
lahf
sbb
jmp
repz
out
les
dec
jge
and
mov
shlb
fldcw
push
out
mov
aaa
cltd
cs
dec
cmp
adc
imul
mov
test
incb
pop
icebp
sub
pop
sbb
cmp
add
ret
inc
cld
mov
pushf
push
aaa
push
jae
adc
cwtl
cli
mov
mov
sbb
or
in
sub
mov
xchg
shrl
cmp
gs
in
jp
inc
jp
dec
push
icebp
dec
pop
add
and
inc
sub
adc
cmp
jmp
jmp
stos
sub
add
pop
loope
sub
and
mov
push
fldt
lock
jns
sbb
mov
pop
pop
ljmp
jb
test
pop
jo
cmovb
dec
or
cmp
cmp
aaa
pop
pushf
xchg
mov
mov
mov
sarb
nop
sub
mov
mull
es
inc
xor
xchg
xor
addr16
lds
sbb
xor
mov
out
pop
fstpl
cmp
jae
jp
out
shll
mov
mov
sub
outsl
pop
stos
inc
xor
loop
cmp
out
in
pop
sbb
scas
in
push
sahf
xchg
jb
xor
sbb
mov
clc
and
insl
nop
in
pop
mov
mov
loopne
jmp
sbb
shrb
in
dec
jge
in
in
push
ljmp
xchg
jp
push
shll
xor
push
loope
adc
sbb
adc
adc
mov
and
pushf
xchg
mov
into
jb
pop
cmp
popf
and
jb
mov
dec
mov
fcomip
push
mov
cmp
rol
push
mov
xchg
fdivp
inc
icebp
andb
imul
push
add
push
les
or
push
je
push
pextrw
pop
fs
mov
pushf
rclb
or
pushf
andb
push
mov
xchg
repz
pop
outsb
testl
mov
repz
sbb
dec
push
mov
call
sub
jae
adc
add
lock
stos
mov
inc
ss
daa
sub
inc
enter
andb
pop
xor
sub
adc
scas
lahf
rcrl
sbb
jl
lcall
add
or
arpl
movsb
sub
cltd
push
int3
decb
add
imul
daa
je
iret
sub
jl
mov
ljmp
add
lret
inc
inc
pop
mov
fisubrs
cmp
mov
xchg
sub
movsb
cltd
xor
fnclex
xor
rcrl
shll
lock
and
in
xor
mov
clc
addr16
mov
push
repnz
popf
fcmovnbe
or
addr16
cli
imul
jo
aas
aad
hlt
xchg
sbb
jno
daa
xchg
imul
in
ficomps
dec
pop
into
decb
or
mov
mov
jmp
mov
add
dec
xor
dec
sub
dec
inc
movaps
push
pop
xchg
cmc
push
jne
fsubrs
clc
je
in
push
jns
jbe
cmp
iret
call
fidivrl
lcall
js
aas
mov
xor
mov
shll
test
push
inc
out
out
mov
lods
ficompl
cmp
stos
cmp
popa
cld
popa
xchg
mov
sub
arpl
cmp
mov
insb
mov
rorb
pusha
out
fsubl
shrl
xchg
and
out
pop
cmp
inc
iret
and
xchg
mov
cli
xor
inc
pop
dec
out
jo
pushf
xchg
lock
in
mov
fwait
push
push
mov
aam
mov
movsb
popa
ret
call
cmp
arpl
test
inc
push
pop
ljmp
or
fstpt
idiv
and
xchg
push
cmp
out
repnz
xor
movsl
push
pop
mulb
scas
lret
add
es
xchg
inc
rcrl
outsl
in
into
movsl
adc
rcrb
push
lahf
std
add
lret
sbb
repnz
loope
xchg
adc
addr16
test
adc
dec
xlat
dec
jbe
mov
fisttpll
xor
cwtl
sub
sub
clc
in
jecxz
call
sbb
pop
mov
loopne
in
mov
addr16
and
fsubs
jb
cmc
mov
rclb
in
sub
clc
push
xchg
mov
jge
icebp
sbb
roll
push
sbb
out
cli
dec
mov
push
idiv
fidivrl
imul
sub
and
fs
ljmp
inc
push
xchg
lea
fnsave
adc
scas
cmp
fsubrp
fstpl
xchg
clc
jbe
inc
lret
stc
pop
mov
lock
mov
push
pop
dec
sub
push
in
cmpb
cmpsb
insb
mov
fistpl
mov
xchg
rolb
jle
testb
repnz
jnp
inc
inc
mov
xor
out
jg
mov
mov
stos
and
xchg
sbb
mov
sbbb
aaa
add
mov
jle
rorl
pop
cmpsl
add
arpl
mov
bound
sahf
push
pop
in
dec
mov
icebp
xchg
into
mov
mov
lods
pushf
xchg
jecxz
sbb
xlat
fsubrl
or
aad
and
xlat
pusha
imul
cmp
out
push
pop
add
or
pop
scas
or
inc
adcl
in
cli
sbb
dec
xchg
xchg
xchg
arpl
icebp
je
jg
and
popf
dec
lds
mov
lcall
gs
dec
pushf
mov
movsl
push
inc
pop
xchg
mov
sub
push
bound
xchg
leave
sbb
pop
fcmovu
ljmp
inc
push
xchg
ret
sbb
scas
adc
adc
addl
scas
inc
test
bound
push
mov
inc
fdivrs
push
pop
cli
movsl
lret
sub
mov
push
dec
scas
xor
ljmp
mov
imul
sub
aas
or
and
push
stc
dec
inc
inc
dec
xor
ds
outsb
lret
popa
or
sbbl
inc
mov
push
mov
adc
pop
sub
dec
add
pop
insl
imul
out
test
fistps
pop
jl
push
add
jg
movsb
insb
pop
push
int
mov
mov
fildl
stos
xor
jno
and
add
cmp
push
mov
or
mov
loop
mov
jle
sub
xchg
aam
lea
xchg
andl
mov
xor
out
dec
andl
inc
lcall
xchg
adc
out
inc
inc
aam
es
cld
sbb
adc
dec
pop
movb
and
ficompl
jns
mov
cmc
ja
out
hlt
xchg
mov
sub
mov
movsb
sbb
mov
fsubrs
dec
test
pop
mov
mov
pop
stos
push
popa
mov
shlb
pop
and
push
arpl
add
mov
inc
sub
sbb
cmpl
mov
rclb
inc
mov
inc
cld
jno
jne
dec
pusha
add
inc
xchg
clc
adc
and
jp
dec
and
pushf
mov
xor
cs
repz
sub
add
inc
arpl
lahf
movsl
pop
jno
mov
pop
mov
mov
and
mov
shll
sub
mov
shrl
push
aaa
in
mov
add
cmp
movsb
dec
cltd
jne
adc
push
aad
hlt
jno
cmp
fadds
pop
dec
adc
mov
xchg
std
outsl
pop
add
sub
fs
nop
jns
movsb
hlt
jecxz
mov
mov
iret
sar
and
aaa
fsubrs
aaa
orl
mov
std
repnz
jecxz
rcrl
movsb
enter
fwait
xchg
xlat
sti
in
cmp
sub
mov
scas
enter
aas
push
jecxz
and
push
movsl
or
mov
or
sbb
imul
mov
push
sub
push
and
inc
nop
add
mov
in
inc
cltd
and
iret
gs
pmaxsw
popa
imul
les
je
push
and
das
pusha
mov
scas
push
rcll
jae
inc
cltd
ds
push
add
xchg
fmull
add
fcoms
idiv
mov
sub
sbb
mov
in
and
pop
jl
call
mov
lahf
xchg
sbb
fcom
aas
dec
ret
fucomip
nop
imul
add
fxtract
push
fucompp
aam
push
and
xchg
lret
dec
in
xchg
dec
loopne
jge
add
loope
mov
sub
hlt
je
les
or
fcmove
push
or
jns
js
jg
mov
xchg
pushf
pop
adc
stos
out
pop
and
dec
cmp
xor
mov
lret
outsl
add
cmpsb
xchg
imul
daa
inc
jne
and
mov
sbb
hlt
cmp
cmpsb
and
ret
adc
xchg
lods
and
mov
outsb
sub
xor
mov
pop
xlat
mov
xchg
xchg
mov
scas
loopne
repnz
stos
push
inc
int
bnd
and
out
xlat
mov
add
mov
imul
shll
sub
sti
fdivl
jp
cltd
rclb
scas
xchg
push
stos
cmp
repnz
sbb
mov
fsubl
mov
jo
cmp
lcall
add
sbb
adc
xor
mov
jg
pop
js
bsr
divl
clc
leave
addr16
int
xor
iret
xchg
movd
cmp
dec
xchg
repnz
std
sbb
scas
loop
sbb
dec
xorb
popa
mov
pushf
filds
movsl
and
mov
cs
insb
or
stos
sbb
add
xor
lock
jne
movsl
cmpsl
cmp
pop
in
inc
mov
inc
pop
mov
out
out
cmp
mov
or
gs
mov
iret
pop
or
push
lods
sub
jbe
push
add
push
scas
aaa
mov
imul
loop
dec
or
jnp
pusha
sub
mov
ss
add
xchg
repnz
arpl
mov
idivl
fcmovbe
sbb
cmc
push
repnz
jae
cwtl
int3
sub
insb
negb
stc
cmp
movb
push
xor
xchg
int3
mov
sbb
sbb
in
push
mov
in
pop
and
clc
sub
cmp
xchg
jnp
ficomps
inc
mov
cmp
leave
push
cmp
mov
jge
fcmove
or
push
insb
ret
push
outsl
aas
and
mov
enter
fiadds
pop
jmp
stc
and
pop
stos
mov
xchg
sbb
pop
popa
mov
mov
push
cmp
lahf
mov
cs
arpl
cmp
lret
fwait
jnp
scas
bound
imul
cmp
je
pop
mov
dec
add
adcl
cmp
ljmp
pop
jb
pop
push
xchg
mov
fdivrs
jb
jnp
fsubl
jae
dec
fcompl
aaa
rol
fcmovnb
cmc
das
mov
inc
xor
add
out
push
ret
add
mov
in
sbb
into
shlb
inc
rclb
mov
ret
lret
lea
fisubl
jb
mov
mov
dec
loope
xchg
and
add
xchg
pusha
mov
lcall
dec
fnstsw
xlat
sbb
lock
out
aas
jne
mov
shlb
ja
das
pusha
or
mov
dec
jle
adc
fmul
and
stc
insl
adc
fs
mov
cmp
mov
xor
aas
movsl
aam
bound
out
mov
data16
sub
js
out
jb
mov
sub
jbe
nop
out
sub
mov
ja
cmp
js
sub
and
and
xchg
push
shll
xor
out
inc
mov
mov
xor
call
or
cmpsl
movsb
mov
dec
jg
sbb
mov
pop
dec
das
jle
push
fsub
adc
mov
mov
jb
cmpsb
aad
xor
jecxz
cli
notb
je
jp
mov
stos
scas
xchg
dec
or
pop
in
in
xor
mov
add
sub
adc
loop
jl
jo
insl
fwait
push
rcr
pushf
xchg
xlat
push
out
sbb
je
dec
neg
push
insl
mov
sub
call
sbb
insb
test
enter
adcb
std
lods
mov
jnp
inc
xchg
xlat
jg
iret
or
popa
outsb
shlb
stc
sub
cmp
gs
rolb
pop
xchg
cmp
mov
cmp
or
out
sbb
dec
fbstp
pop
sub
sbb
lods
xor
lods
clc
and
or
pop
pop
shlb
push
push
cmp
pop
fdivrl
loopne
pop
adc
jbe
ljmp
mov
ror
lods
push
dec
and
shrb
inc
loopne
sbb
imul
jns
imul
jp
add
test
sarl
jl
mov
adc
add
push
adcl
fwait
or
jns
bound
rolb
mov
int
xor
cmp
and
xor
js
jbe
test
addr16
push
mov
inc
jnp
xlat
rcll
cmp
fstpt
mov
jle
or
imul
cli
insb
xor
sbb
xor
cli
test
xor
mov
xlat
pop
loop
int
aam
push
mov
mov
lock
push
mov
pusha
push
fwait
clc
mov
cmp
mov
xor
dec
dec
and
mov
in
add
add
rcl
arpl
mov
sub
cmp
mov
imul
sub
test
adc
pop
lcall
enter
filds
pusha
je
shrb
clc
xor
mov
cmp
sbb
pop
add
sbb
mov
popf
mov
mov
clc
sub
xchg
xor
mov
pop
push
popa
scas
lea
mov
lea
sahf
fidivl
mov
iret
mov
popa
push
xchg
sub
add
rorb
aam
mov
jb
jg
or
loope
push
ljmp
mov
push
out
xlat
sub
and
lea
adc
test
mov
out
andl
jecxz
xchg
adc
imul
or
les
xchg
in
arpl
xor
arpl
push
shlb
clc
cmc
ds
jnp
cld
jno
or
out
xor
stos
sbb
and
xchg
push
dec
sub
rolb
cmp
mov
ljmp
pop
cltd
jmp
js
inc
mov
hlt
rcrb
cmp
cmpsl
jns
sub
mov
and
aaa
std
inc
je
fildl
adc
mov
adc
loope
mov
jae
sbb
pop
xlat
je
data16
xchg
jle
sti
fldenv
inc
setbe
push
in
inc
test
adc
cmpsb
and
jno
stc
out
jbe
in
sub
mov
scas
fs
jg
ljmp
sbb
mov
arpl
mov
and
in
cld
lock
mov
fdivp
shr
iret
aaa
loopne
add
sbb
in
cmp
cmc
and
push
popf
imul
std
lods
push
sbb
xchg
and
sbb
inc
popf
push
mov
cltd
add
pop
adc
pop
xchg
jo
iret
in
cs
in
xchg
bound
scas
mov
ret
popf
test
push
or
cmp
ds
adc
clc
sub
or
dec
mov
and
fsubl
xchg
push
mov
and
dec
cmp
hlt
sbb
or
jmp
sub
sti
imul
repnz
or
and
jle
fsubl
mov
test
addr16
push
xorb
fstpl
xor
adc
jnp
mov
sbbb
sub
rorb
ds
adc
mov
mov
js
mov
movswl
icebp
jecxz
ret
mov
dec
and
rol
add
jecxz
insb
bound
inc
add
dec
xchg
lret
jge
daa
stc
and
int
mov
sbbl
and
adc
pop
push
loopne
mov
fbstp
frstor
and
add
call
insl
mov
fwait
push
pop
cmp
jle
jae
in
and
jle
mov
adc
daa
insl
lret
out
pop
push
push
nop
shlb
xchg
jle
dec
and
lock
cmp
cmp
jnp
ja
outsb
in
outsw
ficoms
lret
aam
cld
lods
sbb
and
inc
out
cmp
out
std
jl
scas
call
add
cmp
inc
inc
mov
imul
sahf
outsb
loop
scas
xor
xlat
mov
mov
scas
mov
adc
mov
push
xchg
push
repnz
xor
dec
idiv
arpl
cmpsl
fdivr
negl
xchg
subb
mov
out
inc
xchg
daa
jno
xlat
and
cmpsb
adc
add
jnp
je
insl
sub
imul
mov
or
adc
or
fnop
mov
sbb
jecxz
scas
jo
insb
mov
mulb
notl
movsl
sti
lret
aas
scas
inc
inc
mov
clc
rcrl
cmpsl
daa
mov
push
dec
mov
cltd
cmp
ja
div
and
jns
pop
fwait
sbb
icebp
sub
xchg
mov
xchg
aad
aas
cmpsl
std
xchg
pushf
or
hlt
lods
mov
pop
int3
or
and
arpl
mov
shrb
hlt
aam
out
shrb
cwtl
lods
dec
inc
sub
or
icebp
mov
fcomi
mov
negl
and
xor
dec
mov
inc
or
xchg
adc
cmovp
jnp
and
scas
rorb
pop
mov
imul
scas
xchg
lock
push
std
shrl
repz
and
aas
and
push
sbb
lods
sub
mov
sub
lds
subl
jge
mov
in
push
mov
pop
out
popa
mov
inc
fstps
push
ja
pop
pop
inc
inc
subb
icebp
push
add
imul
push
outsl
int3
cmpsb
scas
or
pop
js
sbb
jp
lret
pop
inc
fdivs
scas
cmp
popf
adc
jbe
pop
aam
mov
sub
icebp
movsb
add
lret
fwait
enter
pop
jbe
int3
adc
shrl
mov
jb
xor
mov
xor
fdivs
insb
je
xchg
cmc
int3
add
out
insb
cmp
sbb
pop
or
mov
mov
pop
and
mov
cld
flds
clc
test
or
clc
ret
and
ss
jg
mov
push
into
arpl
mov
in
cltd
sub
mov
xchg
cmpsb
call
into
call
jp
xchg
ret
ja
push
jl
popa
jbe
pop
in
ss
out
sbb
mov
jmp
sbb
mov
and
push
test
out
fidivrl
inc
dec
lods
mov
pop
jecxz
ja
repnz
and
insl
nop
dec
lods
es
test
outsb
ljmp
pop
int
stos
push
jb
sub
add
out
js
nop
jnp
xlat
cltd
mov
cld
jnp
push
add
push
mov
stos
and
adc
rcr
popf
cmp
es
outsl
dec
popa
xor
add
inc
jecxz
or
adc
in
imul
adc
fiadds
push
mov
imul
jnp
test
jns
inc
jl
pop
lods
sbb
call
fstpt
clc
cmc
notl
jge
jne
movsb
je
mov
mov
cmpsl
test
mov
mov
out
xchg
in
inc
or
adc
push
fs
lods
in
pop
push
pusha
mov
pop
mov
test
mov
jge
ret
mov
or
jecxz
xor
pop
pop
lods
sbbl
hlt
fs
fimull
stos
mov
inc
das
pop
pop
in
xchg
addr16
imul
push
paddusw
shll
pop
pop
int3
call
arpl
pandn
pop
mov
adc
int3
mov
sahf
jb
out
xchg
cmp
scas
stos
pop
xchg
int
dec
mov
ret
int
leave
rolb
inc
mov
xchg
popa
test
imul
xor
leave
dec
mov
and
ret
decl
mov
cmp
jg
stc
out
push
lret
jmp
pop
pop
notl
jmp
incb
in
sbb
les
sub
xor
popf
add
jno
push
es
adc
daa
push
lds
mov
and
lret
lods
addr16
mov
inc
dec
sub
rcr
xchg
or
push
cmpsb
mov
orl
sub
lcall
sti
jae
sbb
mov
jbe
nop
repz
subl
test
call
je
ljmp
test
xchg
cltd
sub
sub
cwtl
push
aam
pusha
loope
ss
inc
leave
and
adc
jmp
xchg
push
outsb
lods
insl
xor
and
iret
inc
ror
xchg
or
into
ds
jle
or
jmp
aam
push
pusha
push
dec
sar
sahf
stos
mull
faddp
dec
arpl
outsl
int3
fmuls
mov
cltd
stc
jp
pop
push
jle
mov
dec
ret
arpl
and
loope
jno
jmp
insb
mov
iret
les
xor
sub
iret
cmpsb
pop
adc
jg
int3
cmc
push
and
lods
xchg
and
jne
movsb
addr16
pushf
clc
cmpsb
push
loope
es
push
inc
pop
push
jnp
pop
jo
clc
in
pop
mov
loop
mov
jle
jbe
inc
jp
xchg
inc
push
aaa
jae
dec
loopne
es
cld
insb
xchg
popa
sub
jecxz
xor
imul
mov
add
jl
std
xlat
andb
lods
xor
push
int
dec
call
inc
movsl
or
loopne
jnp
mov
jb
inc
mov
cmpsb
sub
pusha
dec
push
jns
xchg
lret
mov
das
pop
pusha
pop
bound
imul
mov
fadd
pushl
andb
es
aad
fmuls
testb
sar
inc
imul
mov
jnp
shl
push
xchg
ret
dec
idiv
xorl
rcrb
xor
adc
mov
lea
and
mov
xlat
repz
xor
xchg
jbe
push
sar
jne
push
aam
add
jmp
jo
cs
mov
shlb
mov
clc
sbb
jg
sub
sahf
out
aas
repz
jp
imul
mov
bound
sbb
adc
sbb
sub
mov
ror
add
call
jl
mov
pop
fdivrs
or
push
movsl
cmc
pop
cmc
jno
cmp
daa
push
sti
clc
shrl
in
mov
push
adc
mov
test
xchg
lcall
icebp
mov
mov
out
aad
mov
or
pop
push
mov
das
popf
mov
jmp
pop
and
in
sbb
mov
pop
jecxz
sub
xor
pop
imul
push
test
jns
jo
movsl
sbb
add
cltd
xchg
sub
push
addr16
mov
loopne
in
cltd
dec
mov
call
add
orb
push
cmc
int3
mov
add
std
fimuls
pop
icebp
sbb
sti
pusha
lahf
fistpll
xor
adc
pop
xchg
and
stos
xor
pop
push
jmp
add
int3
inc
stos
mov
xor
sbb
dec
scas
push
xlat
pop
xchg
das
in
xchg
mov
dec
in
shrb
dec
xor
push
inc
xor
jecxz
rcrl
mov
mov
mov
sahf
jo
push
mov
add
add
outsl
push
movsl
cwtl
popf
pop
mov
xchg
ret
das
insb
es
mov
mov
push
dec
and
mov
aaa
or
repz
fwait
je
pusha
negl
cmpsl
adc
lret
lods
fwait
mov
icebp
sbb
stos
shlb
mov
push
pop
sahf
adc
stos
es
ljmp
jmp
pop
lret
ds
aam
jp
fildl
xchg
adc
rcll
inc
daa
fstpt
iret
imul
ror
mov
sub
cmp
mov
std
cltd
mov
inc
aaa
xchg
mov
mul
add
and
mov
xor
mov
pop
inc
fnsave
cmpb
add
sahf
jbe
xchg
lcall
scas
sub
dec
cwtl
mov
fwait
mov
or
dec
insl
loop
fs
aam
ret
fbstp
scas
dec
xabort
filds
sbb
sub
rorl
mov
xchg
cmpsb
aad
jne
lods
xor
bound
mov
ss
mov
lods
hlt
sub
je
dec
cli
cltd
inc
adc
xor
cltd
cs
aaa
arpl
xchg
fistpl
inc
or
mov
sbb
cmpsb
ja
cli
in
dec
sub
jno
js
add
cltd
push
daa
test
inc
jmp
incb
add
repz
je
idivl
repz
xlat
int3
dec
ret
sbb
cmp
mov
maxps
out
cmpsl
icebp
repnz
pop
mov
loopne
loope
pop
loop
das
lock
jecxz
test
inc
arpl
mov
and
sarb
loopne
cli
std
out
dec
mov
out
adc
arpl
aas
loopne
push
dec
inc
xchg
outsb
cwtl
mov
lcall
inc
insb
mov
and
fistl
push
mov
in
xchg
or
sub
cmpsb
mov
movb
iret
aas
rcrb
inc
or
pushf
or
mov
sbb
xchg
push
dec
idivl
nop
dec
fstpt
mov
mov
stos
movl
mov
dec
mov
xchg
xor
sbb
add
into
jno
dec
cli
pop
cmp
movsb
pushf
repz
sub
ss
cli
xlat
out
jecxz
cmp
es
dec
pop
mov
dec
ret
dec
shlb
xchg
dec
xchg
push
xchg
add
movsl
scas
push
aas
push
inc
lods
inc
shr
repz
out
scas
pushf
jbe
int
aad
fstps
shl
dec
mov
stos
inc
bound
shll
mov
jl
pop
and
lret
mov
hlt
testl
jae
mov
ret
mov
inc
jmp
pop
push
mov
xchg
sub
jmp
push
fiadds
sbb
sbb
cmp
xor
daa
cmp
mov
daa
test
pop
pusha
mov
xchg
push
fisttpl
push
xor
xchg
mov
adc
aaa
pop
cmc
repz
push
mov
jl
mov
or
int3
jge
fisubrs
jbe
inc
adcl
cmp
mov
sbb
pop
push
xorb
push
outsb
mov
dec
aad
cmp
test
inc
jne
test
push
into
imul
inc
push
mov
mov
lods
xchg
insl
andl
mov
imulb
in
jl
pusha
fs
jecxz
cmc
jns
pushf
push
pop
xchg
cmp
loopne
movsb
in
stc
imul
sbb
imul
and
jl
jb
fsubl
fildll
sub
test
mov
pop
cmc
cmp
pop
pop
insl
fiaddl
cmp
test
jl
xor
lea
outsl
or
pop
fbld
mov
add
repnz
cmp
aam
sub
jb
sub
mov
dec
es
das
sub
cltd
sbbb
add
jecxz
aas
out
mov
sarl
mov
dec
bound
mov
dec
fists
call
dec
aas
mov
push
sti
test
and
push
inc
mov
in
aad
notl
cmp
aas
inc
push
dec
stc
mov
and
ljmp
mov
dec
xchg
jmp
lret
mov
jle
sahf
cmp
addr16
sbb
push
flds
cmp
sub
mov
out
cld
andnps
inc
jne
push
fmuls
ljmp
stos
inc
add
pusha
xchg
cmp
aaa
sub
mov
inc
mov
mov
cmp
sub
inc
fidivl
scas
or
cmpsl
jp
dec
mov
in
and
mov
stos
push
stos
shr
push
adc
or
or
insl
int3
cmp
in
and
pop
sbb
pop
pusha
pop
mov
xor
inc
jge
clc
gs
sbb
jmp
inc
cmpsb
jmp
les
mov
inc
lods
mov
outsb
aam
mov
push
sbb
mov
pop
and
push
mov
sbb
and
mov
adc
sub
sti
imul
push
xchg
jle
mov
pop
pop
cltd
std
cmc
pop
popf
hlt
mov
lret
mov
out
push
ret
xor
pop
push
aad
cs
cld
cltd
and
mov
fimull
cmc
cmp
loopne
mov
add
cmp
adc
js
sub
arpl
sbb
jge
xor
mov
pop
dec
mov
xchg
enter
push
test
repnz
decl
test
movsl
push
stos
adc
lods
lret
jg
sbb
pop
sti
cld
scas
cmp
xchg
xor
rclb
jl
daa
mov
adcl
leave
call
cmp
int3
jp
cli
xchg
jo
add
dec
pop
add
mov
inc
mov
and
in
mov
jp
sbb
icebp
test
sbb
in
adc
push
mov
sub
mov
and
xchg
mov
xor
inc
popa
out
call
popf
aam
jecxz
sub
adc
inc
insb
jo
adc
imul
ror
or
mov
cmc
cmp
sbb
mov
adc
das
cmp
dec
xchg
imul
add
cwtl
xchg
mov
push
scas
jbe
push
dec
jg
pop
push
fwait
pop
inc
pop
mov
cld
nop
lods
outsl
sbb
and
inc
jecxz
lret
dec
notb
das
mov
cld
dec
test
mov
jl
fldenv
push
ds
add
mov
repnz
ror
cmp
into
and
leave
add
shrb
cmpsb
jmp
lret
ja
xchg
lret
test
cmp
loopne
push
in
aas
pop
push
push
xchg
push
in
xlat
jge
daa
insl
add
push
arpl
or
or
dec
out
inc
xchg
insb
mov
cwtl
stos
sub
push
aad
and
push
divb
and
sbb
sbb
lcall
mov
jno
jns
sbb
mov
cmp
add
mov
mov
ret
pushf
addr16
push
clc
sub
mov
mov
jg
fs
lcall
fsubs
imul
mov
jl
test
mov
outsb
js
fldcw
shll
inc
sub
adc
cmp
cmp
mov
or
xchg
repz
or
stos
pushf
sahf
pop
cmpsb
mov
ds
adc
xlat
mov
or
mull
insb
inc
aaa
lret
mov
out
jne
adc
mov
ljmp
dec
loope
lods
pop
push
cld
btc
sbb
call
fnstsw
in
push
aad
mov
mov
inc
jl
call
out
js
aas
clc
jg
pop
insb
mov
jbe
and
or
inc
into
xor
ds
stos
mov
das
dec
int
es
stos
das
ja
jnp
fiadds
fwait
cwtl
mov
jge
pop
scas
das
push
rclb
inc
sub
addr16
mov
fistpl
inc
js
xor
sbb
dec
movsl
fucomp
push
test
nop
sub
hlt
pop
jl
mov
lret
loope
jnp
sahf
cmp
in
call
sub
mov
cmpsb
mov
jg
mov
cmc
ds
push
pop
push
or
aaa
fnstenv
push
mov
outsb
add
into
daa
inc
mov
repnz
push
xlat
mov
pop
mov
outsl
in
sbbb
push
rolb
xor
lds
rorl
shlb
jmp
in
pop
in
dec
pop
hlt
push
movsb
or
cld
and
push
and
lock
mov
push
enter
in
jl
cltd
adc
sahf
inc
pop
negb
data16
test
std
js
or
or
mov
fdivl
xor
repz
mov
rcrb
enter
test
sub
mov
xchg
out
jmp
aas
push
das
xchg
iret
rol
mov
xor
inc
mov
sub
mov
aas
mov
not
arpl
xor
jnp
mov
jmp
jno
sbb
gs
andb
scas
or
cmp
mov
or
sbbl
dec
fists
inc
test
mov
pop
loopne
cmp
mov
icebp
in
aaa
cltd
sbb
aas
jnp
push
loope
hlt
popf
aaa
loop
ljmp
fwait
lods
lods
pusha
mov
adc
jo
mov
out
movsb
cmp
push
push
aas
add
dec
outsb
jne
js
mov
mov
inc
push
mov
testb
subb
push
add
fisttps
jecxz
hlt
cmp
mov
mov
pop
xchg
pop
pop
int
push
into
or
and
popa
in
in
cwtl
xor
or
mov
loope
inc
imul
add
adc
xchg
mov
push
adc
add
cmp
mov
leave
sub
or
fisubl
lods
int
or
dec
and
cmp
pop
push
into
cmp
clc
xor
add
xor
arpl
inc
mov
pusha
imul
daa
mov
ljmp
in
scas
les
lods
aad
cmovae
jecxz
mov
movsl
or
sbb
jno
hlt
sbb
fcoms
pop
pop
shrl
mov
outsb
lea
sti
dec
std
sahf
mov
movsb
data16
mov
jbe
ret
jp
test
addr16
sarl
enter
pop
dec
loope
xchg
inc
inc
mov
loop
sbb
aad
sahf
subl
dec
rcrb
jl
jne
add
les
js
mov
adc
fwait
push
dec
fsubrp
mov
push
xchg
push
lret
dec
ss
ret
enter
insb
xor
loope,pt
aas
xor
mov
lahf
and
leave
pop
mov
ljmp
cmpsb
flds
and
call
or
cwtl
cltd
jp
jb
ljmp
cld
or
dec
int
cld
cmp
mov
mov
movsl
mov
adc
fwait
jne
test
sarb
sub
add
fwait
pop
mov
movsl
jns
cmp
inc
pushf
push
cmc
mov
push
fiaddl
arpl
or
mov
push
mov
sub
pop
push
inc
loopne
dec
sbb
xlat
pushf
dec
jg
ss
mov
jmp
xchg
out
ficomps
icebp
stc
data16
loopne
subl
jg
jge
mov
xchg
jmp
or
out
les
iret
cmc
xchg
sub
outsl
loop
jns
push
or
mov
leave
bound
mov
add
test
cli
test
push
fwait
lock
xchg
sub
out
jnp
mov
mov
jg
mov
je
fndisi(8087
or
jp,pt
adc
xchg
inc
mov
inc
xchg
out
and
xchg
or
push
sbb
xor
rcrb
mov
jns
inc
daa
sub
lret
cmp
leave
and
push
xorb
mov
sbb
dec
add
mov
xor
push
xor
pop
mov
js
pop
jbe
scas
dec
sbb
cld
pop
mov
mov
push
ret
jbe
xor
jmp
std
arpl
cmp
jp
xor
sub
sti
je
cmp
out
aaa
insb
or
xchg
xchg
addr16
ret
jle
xchg
add
loopne
dec
cmc
adc
push
sub
je
add
outsb
test
into
call
mov
out
lahf
xlat
dec
std
bound
cmp
iret
mov
xor
loop
push
push
sub
rcrl
pop
push
or
mov
aam
int
nop
xchg
fdivp
ja
adc
add
xor
inc
mov
movsb
jno
add
xchg
mov
and
push
cmpsl
call
inc
popf
push
lea
lret
cmp
inc
std
adc
bound
insb
ds
fsubl
xchg
lods
push
lret
pop
jae
imul
push
scas
cmp
in
ljmp
adc
mov
push
mov
add
xchg
jp
into
pop
add
lock
pop
jb
jno
mov
push
xchg
or
cmp
xchg
pop
pushf
lret
mov
xchg
xchg
jns
mov
or
xchg
inc
xor
dec
popf
push
or
cmc
jbe
lahf
sbb
bound
enter
push
repz
mov
int
iret
je
test
mov
dec
inc
cltd
xchg
push
inc
popf
cmpsb
scas
fs
xchg
push
mov
ret
xlat
lcall
out
sbb
push
mov
mov
cli
add
xor
loope,pn
dec
idivl
mov
inc
pop
enter
mov
jne
fnstcw
mov
inc
icebp
pusha
push
stos
lcall
daa
jb
inc
inc
xchg
scas
movb
lea
lods
cs
push
imul
xchg
xor
fucomip
ret
enter
sbb
test
aad
enter
mov
pop
inc
lods
repnz
shrl
cmp
jno
lahf
jge
inc
arpl
and
mov
lret
stos
jnp
subl
add
ljmp
adc
ljmp
inc
jmp
pushf
xor
mov
aam
cmp
dec
mov
mov
lcall
or
lock
scas
mov
daa
fs
fdiv
jp
inc
aaa
loop
sti
push
xchg
push
lret
and
pop
fmull
dec
pushf
ret
lods
movsl
out
mov
lret
or
bound
imul
into
mov
es
adc
ljmp
mov
das
add
neg
jle
js
mov
imul
pop
pop
imul
ljmp
mov
cld
mov
xchg
out
jle
js
adc
lock
out
xchg
out
movl
pop
sahf
and
aaa
mov
pop
and
ds
ljmp
mov
jp
fsub
roll
jecxz
rorb
mov
push
in
int3
mov
decl
lea
xorb
sbb
std
adc
mov
in
mov
adc
andl
ficoms
sbb
xor
punpcklbw
ja
pop
cmc
sbb
cmp
enter
in
pop
sbb
add
stos
and
mov
pusha
jo
pop
pushf
scas
sbb
adc
cmpsb
xchg
add
or
sbb
sti
and
cmovae
pop
les
icebp
jae
shrb
cmc
or
mov
pop
movsl
push
movsl
adc
xchg
notb
xchg
push
arpl
xchg
xchg
xorl
addr16
loopne
cld
sub
xchg
cmpsb
test
les
push
mov
sbb
mov
adc
and
push
jb
jecxz
add
cmpsb
adc
mov
mov
punpcklbw
repz
pop
mov
inc
push
aaa
push
xchg
add
mov
pop
mov
outsl
cmp
test
pop
xor
aad
stc
inc
mov
dec
pop
xor
ficomps
mov
es
jge
or
pop
repnz
rcl
adc
or
out
fdivrs
and
mov
repnz
cmpsb
mov
mov
fisubrs
push
jp
jp
popf
cmpb
push
and
or
popf
and
jno
xor
mov
jne
push
dec
cwtl
cmp
xchg
arpl
add
mov
aad
push
xchg
daa
sbb
leave
or
sbb
push
lcallw
lahf
sub
push
fwait
xchg
inc
mov
inc
mov
mov
mov
add
insb
push
iret
mov
adc
xabort
add
mov
mov
jp
lods
and
sub
cmp
mov
mov
jg
xor
jle
or
cs
lock
es
shrl
getsec
aam
aam
or
or
test
dec
mov
mov
in
mov
or
lret
push
cwtl
nop
jge
adc
cmp
push
inc
xchg
aas
adc
push
pop
out
mov
sub
fstpt
mov
pop
jb
xchg
cmp
jl
hlt
jle
ret
adc
lods
mov
xchg
repz
data16
jo
shll
mov
lcall
push
cmp
notrack
fucomip
decl
stos
movl
or
adc
aad
mov
mov
lret
mov
mov
inc
inc
push
jae
jbe
mov
add
xor
cmp
ret
add
dec
pop
pop
jge
pop
out
clc
dec
mov
mov
mov
inc
inc
xchg
add
adc
rcl
lcall
lret
int3
pop
hlt
sti
andb
movsb
adc
xchg
repz
arpl
lcall
add
pop
xlat
dec
sbb
ret
aaa
mov
fdivrs
mov
in
adc
rcll
mov
push
xchg
sub
and
mov
xor
dec
lret
dec
add
aas
outsl
xchg
and
push
icebp
loop
mov
mov
xlat
pusha
push
push
adc
nop
testl
push
rorb
xchg
rcll
loope
xor
mov
jae
in
inc
mov
aam
cmpsb
adc
mov
out
lret
mov
jmp
mov
push
mov
stos
orb
xor
cld
inc
icebp
cmp
fwait
or
adc
push
scas
mov
call
divl
ljmp
mov
add
cvtpi2ps
and
stos
in
add
jbe
cmc
pop
jecxz
dec
mov
ds
inc
cwtl
sub
xchg
push
sbb
dec
sub
test
cmp
sar
mov
cmp
mov
push
cmp
lea
fmul
insb
ret
test
inc
lret
fiaddl
popf
mov
push
lcall
sbb
jp
decb
jp
push
cmp
cmc
pop
mov
mov
js
cmpb
push
sub
iret
lods
xchg
aas
xor
push
jnp
jmp
cmp
repz
xor
and
lcall
into
aas
sbb
outsl
adc
fwait
sbb
push
mov
jne
std
push
cmp
cli
push
lods
lahf
adc
mov
hlt
mov
ror
pop
mov
pop
test
xlat
std
add
add
mov
jg
jne
fwait
enter
pop
and
dec
mov
ret
aam
inc
mov
push
xchg
mov
faddl
je
lods
testb
test
push
mov
je,pn
aaa
mov
stos
ret
mov
jl
mov
sbb
inc
xchg
push
xlat
pushf
jnp
icebp
dec
add
pop
shrl
pop
fisubrl
hlt
push
push
xchg
inc
fisttpll
lds
call
mov
loop
jp
or
sbb
les
mov
ss
mov
fstps
movb
enter
nop
ds
cmovno
loope
inc
das
mov
mov
stos
rolb
out
cld
cs
mov
cmp
int
push
xor
push
mov
jbe
es
sti
repnz
and
orl
jecxz
fucom
pop
hlt
ret
clc
mov
pop
dec
in
sbb
pop
inc
xchg
daa
cmpsb
pop
stos
clc
mov
jno
cmpsb
cmp
mov
inc
jmp
mov
mov
or
pop
pop
and
jo
inc
in
imul
leave
imul
cmp
mov
insb
adc
mov
repnz
jecxz
adc
pop
mov
xlat
hlt
push
pushf
sub
pop
mov
sub
xchg
int
fcompl
mov
push
add
fs
push
sahf
addr16
lea
xchg
dec
inc
aam
mov
in
cltd
push
pushf
aad
push
roll
testl
adc
es
imul
cmpsb
jns
idiv
jbe
cmp
adc
cli
movsb
or
mov
cmp
inc
mov
or
in
ret
inc
ret
jp
into
test
sbb
movl
addr16
cmp
testb
sete
or
in
dec
mov
ret
int
js
data16
movsb
dec
push
fidivl
fbstp
mov
sbb
or
test
inc
mov
push
mov
pop
cmc
jle
and
dec
in
or
out
mov
sahf
mov
cmpl
xchg
hlt
mov
mov
inc
pop
in
repz
aas
in
stos
jne
mov
int
daa
mov
scas
xchg
mov
mov
roll
xor
in
or
cmp
jge
inc
inc
and
mov
jne
test
push
cli
push
mov
inc
adc
test
jp
fidivl
xchg
jge
dec
movsl
sarb
scas
xchg
pop
or
pushf
int
jge
ljmp
addr16
mov
and
in
les
or
xor
dec
or
jns
cmp
icebp
inc
clc
notb
sub
nop
mov
xchg
xchg
bound
jo
xlat
sbb
xchg
lret
inc
jl
cmp
jle
or
and
dec
loopne
mov
dec
out
subl
dec
xorb
insl
imul
test
cmp
pop
imul
mov
cwtl
xor
iret
push
gs
les
mov
adc
adc
push
cmpsl
sbb
pop
jnp
fimull
push
stc
cwtl
dec
in
imul
sti
push
cli
inc
sub
or
stos
xchg
dec
icebp
mov
daa
sub
xlat
dec
rdtsc
mov
cmp
xchg
mov
fwait
loop
insb
cmp
shrb
ja
xchg
gs
inc
push
xor
fmul
call
sahf
nop
data16
in
mov
movsl
test
aam
testl
or
pop
dec
int3
mov
sarb
xor
jmp
mov
sub
cwtl
scas
xchg
push
cmc
jmp
and
sarl
scas
rolb
add
aam
bound
addr16
fwait
loope
dec
out
or
mov
jecxz
outsl
xor
outsb
dec
loope
xor
and
inc
push
push
adc
inc
sub
fistps
cmp
mov
adc
data16
sub
push
push
mov
out
inc
mov
nop
fiaddl
lods
out
gs
mov
out
adc
sub
lods
and
xor
inc
jbe
fiaddl
scas
xchg
clc
stos
sti
js
dec
or
adc
pusha
nop
inc
or
mov
jb
inc
cs
sbb
cmp
int
shll
mov
mov
stc
or
loopne
mov
inc
mov
fwait
aaa
mov
rorl
and
data16
and
push
push
xor
fs
loopne
sub
mov
movsl
add
xor
mov
out
inc
inc
nop
js
imul
jb
push
pop
add
mov
xor
adc
dec
pushf
or
adcb
int
and
pop
adc
mov
insb
fidivrs
pusha
mov
mov
lods
in
loopne
xor
ds
and
ficomps
mov
pop
inc
mov
dec
mov
lcall
arpl
nop
push
dec
out
pop
sti
mov
add
sub
inc
dec
ret
lock
mov
lock
add
inc
jo
cmpsl
pop
sbb
shl
jae
addr16
mov
xchg
and
movb
mov
sahf
loopne
out
fsubrs
mull
es
push
mov
subb
xor
and
fisttpll
ss
ret
clc
mov
cltd
in
fiadds
vandps
lods
push
shll
mov
int
cmp
adc
inc
xchg
or
adc
adc
lds
mov
inc
icebp
mov
data16
mov
dec
xchg
in
ss
jbe
rcrl
aaa
scas
andb
inc
pushf
xchg
cltd
mov
sub
fwait
cmpsb
mov
and
dec
jo
mov
push
xchg
sbb
jl
cld
push
stos
enter
xor
inc
push
adc
popf
sub
cmp
jo
jle
jmp
enter
out
cmp
stos
pusha
mov
pop
fnstcw
popa
pusha
jp
fbstp
inc
frstor
aas
push
lds
xchg
decb
dec
jp
mov
cld
mov
ret
les
mov
dec
and
call
jb
out
in
jp
pop
sbb
sbb
gs
dec
andb
js
sub
enter
mov
movsl
xor
push
cmc
test
sti
popf
fisubrs
dec
cltd
pop
mov
js
scas
out
cmp
jge
sbb
and
mov
fmul
lret
mov
iret
pop
int3
ja
repnz
mov
dec
and
pop
or
jne
pop
mov
rorb
ret
inc
or
in
mov
mov
push
jbe
mov
xchg
hlt
mov
xor
ss
xchg
cmp
lret
push
xor
xchg
push
js
jb
mov
jge
fiaddl
call
adc
sarl
lcall
cli
stos
aas
xchg
pop
fbld
or
rcrb
lea
aam
daa
stos
xchg
ljmp
cmp
xchg
jmp
sbb
call
or
daa
dec
add
pop
mov
fnsetpm(287
stos
stos
sahf
dec
pop
daa
clc
fisttps
xor
lret
cmpsl
pop
clc
mov
pop
js
or
sub
hlt
push
mov
pusha
and
dec
mov
addr16
pop
push
add
mov
je
push
sbb
rorl
xor
jmp
xchg
test
popa
or
scas
add
sbb
cmpsl
xor
mov
daa
adc
int
ret
cmp
xchg
cmpsb
mov
sahf
mov
movsb
mov
or
cli
mov
cmp
nop
lret
mov
push
sbb
les
stc
cmpsl
jecxz
mov
pop
decl
iret
xor
pop
or
dec
in
dec
in
push
clc
insb
pop
and
mov
jmp
fdivl
sub
mov
lret
sub
data16
jl
gs
bound
mov
cli
iret
gs
test
adc
cmp
mov
sbb
std
xchg
rolb
ja
push
leave
jnp
cmc
pushf
jecxz
pop
lret
gs
jns
sar
clc
mov
sahf
xchg
sarl
mov
or
dec
sub
xor
lahf
iret
into
fucomp
pop
mov
lock
dec
dec
inc
cmpsb
loop
arpl
or
or
inc
sarb
loope
lret
mov
push
imul
pop
mov
push
inc
repnz
test
movsl
enter
add
data16
pop
jns
mov
push
mov
pop
lds
repnz
out
dec
add
test
pushf
repz
and
mov
xlat
or
bound
inc
jmp
dec
mov
das
push
sarb
jbe
in
repz
or
jb
leave
shlb
cmp
or
mov
jg
fs
in
push
lret
enter
sbb
fcmovbe
mov
shlw
jae
or
mov
xor
imul
pushw
into
mov
stos
mov
gs
adc
jg
test
sub
incb
xor
cltd
mov
movsb
xorb
rorb
lds
das
and
mov
fisttpl
popf
jp
pop
sbb
aad
stos
pop
add
mov
pop
or
imul
iret
lret
call
in
mov
mov
pop
gs
xchg
jge
xor
repnz
adc
sub
mov
movsl
mov
dec
fildll
into
jge
lahf
jmp
or
xor
aad
rcll
into
loopne
jns
inc
out
or
fists
add
xor
and
mov
ds
dec
out
pop
or
dec
or
in
rcl
xor
fisubl
sbb
add
pop
adc
and
fwait
mov
cmp
xor
jecxz
and
mov
aaa
and
addl
movsb
and
push
mov
outsl
mov
jmp
ret
pusha
mov
fisubrs
xchg
scas
shll
adc
bound
xchg
loop
sbb
jmp
mov
mov
sbb
mov
ljmp
sub
loope
sbb
in
call
mov
and
lcall
fstl
iret
add
daa
jae
inc
ret
popf
mov
in
or
jnp
dec
lahf
or
int
out
test
pop
pushf
xor
jno
aam
lods
movsb
pop
imul
mov
bound
add
mov
sbb
test
loope
adc
push
lds
loopne
cwtl
ficoml
clc
comiss
mov
adc
pop
fistl
mov
ror
jnp
imul
das
shll
mov
xchg
xchg
mov
cmp
jo
imul
ljmp
sbb
rcrl
xor
inc
loope
jl
sub
arpl
dec
xlat
add
or
lahf
pop
mov
and
call
jne
mov
push
cmp
cmp
scas
cli
sbb
cmp
and
mov
out
dec
xor
add
enter
enter
je
flds
mov
outsl
popf
mov
fsubl
sahf
leave
iret
or
pop
mov
pcmpeqb
cs
nop
add
mov
fldl
inc
imulb
loope
and
pop
in
add
lret
sbb
inc
push
aaa
movsl
xchg
cmp
dec
xchg
sub
ret
daa
jbe
jp
cld
dec
lcall
push
subb
push
fs
jno
sub
jb
das
lcall
ja
bnd
add
test
hlt
lods
xor
mov
xchg
loopne
pop
mov
mov
ret
leave
int3
int3
jns
pop
pop
push
stc
cmc
push
or
push
sbb
sub
or
mov
adc
std
pop
scas
xchg
or
out
mov
mov
push
fdivs
dec
mov
mov
enter
cmpsl
mov
ret
in
mov
aaa
dec
pop
sbb
and
roll
mov
js
ds
adc
iret
or
icebp
in
repz
outsb
cmpb
mov
xor
xchg
int3
shl
movsl
mov
pop
dec
shlb
jg
dec
stos
clc
faddp
push
cmp
inc
push
ljmp
pop
sarb
sub
inc
add
adc
pop
mov
jae
dec
or
push
das
leave
in
arpl
cltd
mov
lret
add
roll
ja
clc
test
cmc
icebp
cmpsb
xchg
rol
stos
scas
in
fstpt
xchg
loope
jl
les
sub
aaa
xchg
clc
mov
add
testl
and
mov
mov
cmpsb
xorl
push
xlat
mov
js
xor
insl
and
leave
pop
repz
lods
cld
dec
adc
int3
inc
mov
daa
xchg
pop
int3
movsl
xor
fcomps
loope
or
xor
and
fwait
mov
imul
decl
sbb
add
ja
repnz
sub
out
lret
dec
sub
and
xchg
int3
outsl
out
inc
rcrl
call
divb
arpl
inc
aas
bound
shr
fcmovu
cmp
js
sti
out
out
push
out
movsl
lret
movsb
inc
lods
sbb
cmpsb
cmp
ljmp
mov
movsl
lret
or
inc
and
idiv
xlat
ret
cwtl
lock
mov
in
push
std
sub
ja
mov
rcrb
jno
inc
ja
notb
jl
push
imul
push
sbb
loope
enter
test
push
pusha
dec
in
mov
aad
cmp
sub
pusha
jns
dec
ret
mov
mov
test
in
loopne
fstl
adcl
std
or
mov
pop
cmp
jae
push
loop
shl
std
in
jle
stc
push
add
pop
sub
mov
fsubl
test
lcall
xor
cmp
mov
loope
adc
or
mov
in
add
mov
or
lahf
dec
xchg
adc
cmpsb
or
mov
sbb
cmp
in
lcall
sub
cld
xchg
negb
xchg
test
imul
sarb
lock
adc
lret
xlat
pop
mov
lahf
cmp
add
add
leave
lods
sarl
dec
inc
jne
loope
rol
mov
lea
dec
fidivl
je
or
sbb
cmc
js
dec
lcall
push
icebp
mov
test
mov
cmc
stos
mov
jmp
sar
dec
push
mov
rcll
jae
or
in
cmp
testb
push
repnz
and
mov
jl
sbbl
lahf
lds
dec
push
mov
sbbb
and
call
test
mov
popl
mov
mov
out
loope
xchg
stos
fbld
loop
jmp
xlat
inc
adc
inc
test
and
fs
dec
and
pop
push
jl
or
xor
fisubrl
ss
iret
lods
sbb
test
xchg
xor
and
mov
movsb
mov
and
sti
mov
out
addb
push
add
push
mov
fcomps
imul
repz
fs
aam
mov
cmc
push
ficompl
pushf
push
ja
sub
andb
fimuls
adc
jae
dec
aam
sbb
pop
sarl
mov
cmpb
ds
adc
in
push
mov
icebp
pushf
fmull
lods
sub
push
nop
push
sbb
arpl
lahf
cmpsb
pop
imul
scas
adc
mov
mov
in
cld
clc
cs
jnp
addr16
push
test
jnp
popa
adc
dec
scas
dec
mov
popa
and
leave
add
dec
push
out
mov
jge
cmp
and
dec
sti
add
mov
xchg
insl
push
and
xchg
out
testb
fstps
in
inc
dec
pop
mov
outsl
loopne
mov
imul
jo
inc
adc
cltd
dec
add
out
test
packssdw
pop
mov
push
mov
add
mov
mov
cli
or
sub
adc
arpl
adc
scas
addr16
mov
fistl
dec
ret
mov
test
daa
adc
out
mov
fdivs
movsb
and
mov
xor
add
xchg
jbe
stc
fimull
or
sbb
or
jg
mov
aaa
inc
inc
xchg
repnz
dec
gs
loope
push
jbe
xor
pushf
in
loop
jecxz
daa
stos
test
adc
sbb
mov
outsl
nop
mov
jp
in
ja
scas
xchg
aas
sbb
pop
popa
add
adc
outsl
and
xchg
shrb
and
cmp
mov
inc
pop
sbb
lea
aam
adc
dec
adc
gs
lods
clc
pop
mov
daa
sub
sub
mov
test
shll
mov
pop
jno
add
mov
mov
cmp
dec
push
fildll
call
cmp
add
cs
gs
lret
and
push
dec
lret
scas
jg
add
lods
test
or
outsl
push
jo
mov
and
iret
cmpsb
lahf
adc
pop
enter
inc
inc
mov
mov
mov
push
pop
xor
add
pop
xor
xchg
pextrw
add
mov
xchg
inc
icebp
xor
stos
mov
pop
mov
xchg
fiaddl
inc
imul
mov
jl
add
adc
dec
ljmp
popf
shll
lret
and
outsl
xor
sbb
sub
clc
icebp
mov
dec
sub
sbbb
inc
int
notl
dec
stos
and
xor
push
inc
cld
jmp
lcall
shrl
sub
sbb
hlt
pop
into
mov
inc
mov
mov
jae
adc
sahf
sbb
xorb
loopne
out
ret
les
aaa
xchg
dec
jnp
lcall
insl
xchg
mov
adc
lods
leave
mov
outsl
mov
mov
pop
out
rcrl
or
or
pop
jae
xor
or
push
fidivrs
ret
adc
sbb
sub
es
jl
call
sbb
sbb
fistps
mov
pusha
mov
ds
pop
imul
adc
xchg
cmpsb
sbb
mov
insl
flds
lret
outsb
pop
jae
lret
rcll
sub
mov
mov
mov
arpl
push
aaa
dec
ja
jge
or
cmp
inc
and
int3
mov
in
mov
pop
adc
clc
aad
xor
or
jnp
fidivl
pop
loop
dec
mov
push
mov
jnp
jno
ljmp
cmp
out
or
pop
test
pop
add
adc
mov
sub
imul
aam
push
jbe
ljmp
out
mov
push
arpl
xor
jo
mov
xchg
mov
add
lods
gs
or
cmp
or
and
lds
pop
int3
inc
mov
ret
mov
lret
mov
sahf
mov
inc
fdivrs
test
pop
dec
sbb
inc
push
pop
fcomps
das
or
loope
loopne
adc
pop
les
movsl
aam
mov
jno
push
repnz
insl
cs
cmpsb
jne
call
pop
ja
xor
addr16
sbb
cmc
xchg
pop
or
data16
test
sub
ret
cli
xor
or
imul
xorl
xor
xchg
inc
out
jnp
jecxz
jbe
fsubr
push
inc
orb
enter
ret
jo
shl
xchg
jle
jns
inc
adc
cmp
and
push
xchg
mov
mov
cmp
xor
gs
dec
data16
ja
out
adc
in
pusha
stc
inc
in
out
mov
inc
sub
test
outsl
adc
repnz
xchg
mov
sti
loop
rol
jbe
xchg
cld
bnd
je
fadd
adc
pushf
fwait
jne
dec
inc
loopne
push
addr16
lods
dec
xchg
mov
nop
xchg
lret
add
inc
xchg
sahf
les
aad
jl
cmp
pop
mov
jo
sub
inc
jo
xchg
adc
sbb
push
jo
into
mov
dec
test
pop
outsb
mov
out
lods
aas
cmp
or
imul
pop
pop
inc
ficoml
mov
flds
jle
frstor
and
aas
xor
dec
inc
daa
xor
push
or
push
mov
cmp
pop
cwtl
adc
cli
mulb
sub
push
pop
aam
gs
std
mov
jge
xchg
sub
or
loope
insl
cmp
push
push
leave
pop
jno
add
movsl
shll
add
fisttpll
sbb
out
push
hlt
mov
dec
xor
mov
adc
rcrb
push
pop
xchg
je
cmp
push
pop
xchg
jp
iret
dec
dec
push
or
add
repnz
call
and
dec
sub
sbb
or
xor
int3
fidivl
stos
mov
jnp
mov
push
push
and
outsl
std
js
lock
in
repz
les
sub
daa
push
fs
sub
push
adc
rolb
pop
xorb
xor
mov
outsb
das
nop
pushf
in
jb
push
push
shr
jne
out
outsb
nop
cmpsb
sbb
decb
pusha
jnp
movb
lods
dec
in
adc
push
adc
mov
out
or
clc
mov
fidivs
jl
add
jmp
out
fdivrl
sbbl
rcll
sbb
mov
inc
stos
mov
push
mov
adc
out
lods
add
fbld
movsb
sahf
dec
stos
mov
into
push
cmp
mov
addr16
cwtl
and
cmpsb
mov
lea
add
test
xor
cmp
cmp
int3
pop
jl
sub
and
ja
cmp
mov
mul
out
push
test
cmpsb
loope
jne
arpl
clc
xor
jle
pop
mov
hlt
sub
pop
dec
es
sub
ficoms
scas
push
lods
mov
mov
sub
mov
shl
cltd
mov
leave
stc
xchg
subb
and
pop
inc
push
ss
pop
mov
sub
mov
jno
pop
jg
into
lds
push
out
mov
push
in
stc
out
popl
decb
cwtl
cmpsb
lock
sahf
push
mov
or
aam
aas
mov
movsb
dec
add
dec
movsb
sbb
jbe
lret
xor
dec
insl
add
pop
adc
mov
push
aas
xchg
les
cmp
movsl
or
dec
inc
test
jo
jmp
outsl
insb
jmp
imul
jnp
sahf
sbb
lcall
sub
xchg
out
stos
jmp
and
mov
push
leave
fildl
xor
dec
js
mov
das
dec
xor
mov
rcrl
dec
out
ret
pop
fabs
sub
test
lods
pop
mov
and
push
mov
ret
icebp
adc
pop
aas
mov
iret
cmc
jp
sti
or
scas
cmc
negl
adc
in
gs
cli
pop
mov
test
jae
aas
leave
addl
cld
xor
push
ret
stc
iret
out
inc
mov
call
adc
jl
jmp
mov
roll
in
imul
insb
cwtl
jp
out
sbb
inc
cwtl
shr
dec
mov
cmp
sub
fdivrs
xrelease
lahf
cmpsl
xchg
jae
aas
mov
or
imul
inc
push
out
lcall
dec
pushl
jmp
sbb
inc
adc
jnp
or
sub
das
and
jmp
sahf
xchg
mov
rorb
jb
pushf
or
mov
jle
cltd
cmp
gs
imul
push
push
fildll
imull
mov
pop
xchg
and
gs
sbb
stc
mov
imul
cltd
mov
pop
daa
faddl
or
mov
push
jnp
cmp
cmpsl
mov
repnz
shrb
dec
adc
sbb
lds
mov
xchg
out
pop
das
lds
pop
fwait
add
push
mov
dec
test
adc
adc
push
push
outsl
inc
lcall
das
scas
dec
lcall
rcl
incb
sbb
and
sbb
movsb
cmp
std
xchg
and
pop
sbb
test
inc
mov
lret
shll
and
jno
pop
mov
mov
aam
mov
cmp
mov
adc
pop
cmp
cmc
mov
icebp
mov
out
dec
jl
add
pushf
push
fmuls
inc
mov
xchg
jl
jo
out
mov
gs
adc
fidivs
bound
outsl
lret
or
pusha
sub
pop
dec
jl
aas
sub
xor
ds
sbb
cmpsb
pusha
icebp
push
pop
adc
icebp
imul
sti
cmc
mov
inc
bound
data16
in
nop
lret
pop
bound
iret
pop
sub
adc
data16
push
sbb
int
mov
mov
loope
cld
or
js
test
sub
fisttps
enter
jnp
and
addr16
fwait
mov
xchg
adc
mov
mov
pop
jno
add
xor
sub
cwtl
push
loope
sahf
cmc
out
lods
lret
cmp
iret
inc
daa
outsl
fwait
lret
gs
jbe
rcr
aad
jl
cmp
xchg
pop
adc
or
lock
test
pop
clc
into
nop
subl
cmp
fwait
loopne
es
js
sub
fcoml
cs
mov
int
cltd
xlat
sbb
adc
movsb
fists
pop
adcb
rcll
xchg
lock
sti
xor
out
cmp
iret
aam
fsubr
mov
flds
xor
jno
fildl
and
or
adc
add
lcall
adc
les
xor
pop
mov
stos
fistpll
jle
pop
sbb
pop
xchg
dec
mov
jnp
mov
and
cli
sbb
shrb
cmp
mov
cmp
scas
sub
cmpsb
and
mov
xchg
cmp
clc
hlt
sbb
jecxz
cmp
and
mov
leave
jecxz
lods
push
jle
pushf
jmp
and
dec
dec
out
pop
aaa
or
insb
repnz
jl
bound
frstor
dec
psubusb
pop
cpuid
fstps
inc
jmp
lcall
sahf
xlat
or
cmp
sahf
lock
fdivrl
ficomps
aad
inc
lret
xchg
cmp
and
jmp
mov
cmp
xchg
insl
sub
stos
jp
mov
xchg
cmp
ja
mov
out
mov
push
inc
jle
mov
adc
inc
orl
out
jne
mov
sbb
sbb
pop
loop
cltd
arpl
xchg
dec
sbb
ficomps
cmpl
sbb
xor
mov
cmpl
mov
popa
sub
in
cmpsl
fsubp
jl
pop
addr16
xchg
cmp
sub
mov
sub
mov
or
push
xchg
movsb
xor
jmp
sub
lahf
inc
and
mov
ret
or
push
jge
in
sbb
outsl
push
jne
lods
out
push
sub
int
push
mov
ret
xchg
adcb
adc
rol
jmp
lahf
cwtl
sbb
mov
xlat
int3
dec
in
jo
gs
mov
adc
jg
loope
imul
int
mov
inc
rcll
mov
test
in
lea
and
add
ss
arpl
xor
dec
addl
lea
jge
jmp
lcall
scas
fdivrl
gs
pop
lods
mov
lds
popa
inc
fcoms
test
rcrl
js
push
sarl
push
test
nop
pop
sarl
cmp
stos
loopne
lret
iret
aas
mov
mov
call
xorl
push
cmp
hlt
pop
jae
call
ret
sbb
nop
shrl
add
lds
imul
xlat
dec
inc
pop
push
adc
push
cmp
dec
jecxz
ret
and
imul
sub
mov
sbb
ficoms
clc
ret
rcll
cmp
xchg
leave
inc
jne
cmpl
out
and
test
sub
inc
jecxz
push
sub
pushf
lds
popf
lahf
push
or
and
xor
dec
test
shrb
fwait
das
mov
add
push
mov
aad
cmpl
inc
stos
js
push
mov
andl
shll
aaa
aaa
insl
mov
add
mov
mov
in
clc
cmp
xchg
call
pop
add
outsl
fbld
int
dec
mov
adcl
popaw
pop
xchg
iret
ret
push
pop
inc
pop
xchg
fisubs
pusha
or
and
sub
hlt
xor
mov
pop
add
fnstcw
lods
stc
imul
push
pop
jns
jmp
add
popf
orb
jmp
cmp
mov
popf
das
mov
pop
lock
inc
cmpsl
mov
add
pop
fadd
popa
hlt
mov
push
fstl
and
xchg
mov
popa
pop
sbb
out
int
std
fisubl
es
jnp
movsb
adc
orl
pop
sbb
push
fld
mov
adc
into
in
and
sbb
lret
test
push
sahf
push
mov
mov
lret
int
stos
int3
in
pop
mov
rolb
aaa
add
sbb
mov
lods
lods
sbb
xor
push
icebp
fwait
push
fisubl
mov
xchg
pop
inc
mov
push
mov
jge
or
frstor
mov
add
movsl
adc
test
and
lods
xchg
xchg
jbe
mov
shufps
mov
xor
xor
jmp
or
test
xchg
jno
test
mov
sbb
fiaddl
mov
mov
push
sub
in
jbe
lcall
mov
fistpll
mov
xchg
jno
xlat
popa
adc
stos
clc
cld
dec
enter
das
popa
popa
cmpsb
test
lret
mov
das
push
repz
mov
add
fldt
ret
ds
fs
fnstenv
jge
and
mov
or
flds
shlb
fiadds
push
cmp
dec
jae
and
ret
shll
rol
cld
xchg
nop
iret
pop
cmp
scas
push
pusha
adc
xchg
leave
dec
push
mov
push
mov
inc
les
cmpl
push
int
dec
xchg
cmp
dec
dec
imul
xor
pop
dec
shlb
cmp
lret
iret
mov
sub
pop
stc
frstor
inc
push
ror
cmp
les
shrl
jb,pt
dec
mov
or
jl
mov
stc
pop
stos
push
pop
cld
dec
cmpb
pop
xor
push
mov
inc
fnstsw
or
imul
int3
and
ja
sub
add
in
loope
jge
pushf
push
or
dec
lds
out
bound
mov
add
push
mov
bound
mov
lods
cmp
pop
in
or
repz
mov
mov
imul
aaa
cmc
dec
addr16
insl
jmp
cmp
cli
xor
cmp
pop
cwtl
xor
jl
adc
xor
shl
scas
arpl
jo
mov
or
ljmp
sub
xchg
sub
or
push
mov
jne
out
leave
or
cltd
mov
clc
push
popl
add
sub
xchg
ja
test
lods
pop
mov
pop
ja
shlb
es
xchg
and
sub
imul
ds
mov
mov
push
jbe
or
inc
flds
sub
sbb
sbb
imulb
clc
outsl
adc
int3
movsb
lods
or
adc
jmp
fadds
adc
gs
pop
dec
call
xchg
sbb
data16
test
add
fcomp
sbb
je
add
popa
jmp
push
scas
int3
mov
lea
push
pop
lods
mov
sbb
xor
mov
dec
or
xchg
pop
mov
ficoml
xchg
push
mov
mov
mov
mov
bound
sbb
inc
lcall
inc
movsl
jnp
inc
ja
popf
jg
sub
lcall
div
std
and
sbbb
clc
out
dec
into
xchg
mov
add
pop
cmp
xor
jne
or
jl
fistl
cmpsl
in
test
fnstcw
int
clc
sarb
iret
ja
push
mov
mov
pop
imul
jne
std
xor
mov
cmp
fs
inc
jg
push
pop
pushf
lea
add
push
inc
test
pop
jl
xacquire
push
adc
int3
gs
mov
std
lds
inc
or
repz
faddp
adc
subl
cmp
fstl
and
cmp
mulb
test
hlt
push
ret
rcrl
mov
outsb
sbb
repnz
mov
mov
push
loop
push
jae
adc
push
sub
adc
stos
fstps
or
xchg
imul
mov
ja
fdivl
add
xchg
cs
jg
sub
jmp
sbb
and
xchg
and
or
pop
stc
pop
movsb
repz
adc
ds
jno
xchg
xlat
movsb
sub
cmc
jp
dec
or
adc
outsl
sbb
dec
jne
push
add
movsl
nop
fildll
std
pop
xchg
mov
cmpl
cmpsb
stos
cmpsb
cmp
pop
dec
out
sti
fs
repnz
ficomps
add
dec
and
cli
or
inc
dec
push
xor
xor
insl
jmp
cmp
mov
add
cmc
btc
movsb
sub
jg
inc
cmp
bound
jp
in
insb
lret
xorl
inc
cwtl
jl
inc
ret
arpl
cmp
jo
int3
subb
into
mov
push
movsl
or
ret
sub
in
fwait
fs
movsb
inc
popf
lret
in
adc
test
insb
subb
pop
cmc
cmp
movsb
bound
scas
pushf
in
je
add
daa
shlb
cmp
sbb
pop
cmpsl
mov
adc
jno
push
cmp
imul
cmpsl
xor
outsl
in
adc
inc
movsl
push
int3
or
sbb
mov
rcr
fincstp
fidivrl
push
mov
pop
hlt
dec
movsl
out
ljmp
sbb
xor
js
out
adc
or
inc
leave
cmpb
jo
rorl
jnp
adc
shrl
push
push
push
loope
mov
inc
hlt
push
imull
fisttps
enter
dec
pop
daa
imul
enter
imulb
add
loope
fsubs
jp
mov
xchg
push
dec
dec
sbb
lock
test
fnstsw
cmp
adc
xchg
scas
xchg
fcomi
cmc
push
scas
in
test
fstl
mov
inc
hlt
and
jecxz
jmp
jno
dec
aad
pop
das
or
xlat
out
in
mov
movsb
hlt
cmp
xchg
and
fstpt
imul
clc
imul
cmp
in
cmp
add
xchg
jge
sub
mov
jg
mov
mov
jmp
js
xchg
or
jns
in
stos
mov
inc
in
movsb
adc
cwtl
xor
mov
adc
das
pop
and
fbld
das
jne
scas
mov
fucom
mov
lret
xchg
loopne
jbe
lea
out
jl
mov
dec
jnp
jae
addb
jno
fmuls
inc
ret
jno
sub
cmp
fmul
std
mov
rcrb
mov
push
movsl
push
je
xchg
int
xor
dec
xchg
inc
aas
push
fisubs
jno
das
loopne
cmp
pop
dec
adc
adc
push
out
mov
rorb
inc
sub
bound
sahf
loope
test
jl
ljmp
ljmp
std
push
dec
aad
jp
test
movsl
es
jb
dec
addl
pop
adc
jl
outsb
data16
gs
ja
lcall
lods
adc
incb
inc
or
push
lea
xchg
xlat
daa
adc
xchg
insb
aam
push
cmpb
dec
dec
lock
lahf
pop
les
sub
test
imul
or
mov
jb
aas
jp
test
addr16
mov
adc
xchg
out
mov
xchg
aas
rcrl
call
insl
add
mov
mov
sarb
inc
and
jo
sbb
mov
and
jbe
xor
cmp
out
leave
xchg
cld
popa
mov
jne
mov
inc
ljmp
xchg
push
cmpsl
cmp
lea
mov
dec
ljmp
fidivl
bound
push
or
fsubrs
push
mov
inc
sahf
pop
loopne
loop
sub
cmp
adc
fstpt
mov
clc
test
psrlw
insl
jp
in
sub
es
out
xor
jge
popf
sarb
ds
cld
dec
dec
lret
jbe
mov
add
movsl
sub
jns
testl
ljmp
aas
push
mov
sbb
xchg
push
mov
pop
lods
ret
cld
out
jle
cmpsb
pusha
stos
lods
dec
imul
push
mov
hlt
clc
test
mov
cwtl
movsl
push
fisttpl
xor
and
mov
pop
mov
pop
lock
loopne
push
pop
shll
pushf
out
fxch
add
mov
ficoms
cmp
stos
inc
sbbb
xchg
mov
int
aad
mov
mov
adc
jbe
loope
cmpl
push
sbb
fdivp
or
mov
xor
jmp
adc
sbb
mov
or
in
and
jmp
mov
or
push
inc
pop
dec
into
mov
addr16
push
in
jp
jae
movsb
push
fildl
call
xchg
shlb
test
in
test
in
inc
mov
in
cmp
jecxz
rorb
imul
icebp
mov
sub
xchg
inc
testl
fsubrl
adc
gs
test
inc
fldenv
call
sbb
dec
dec
xchg
int3
xor
inc
xchg
push
xlat
lret
jae
jne
push
push
lock
pop
fdivrl
out
inc
lret
roll
popf
sti
add
jne
idivl
outsl
imul
mov
shrb
cmp
xchg
lea
and
leave
jge
xchg
jmp
cmpb
mov
inc
in
xorl
std
lock
cmc
pop
jp
mov
pop
in
das
add
push
lods
and
js
repz
cltd
test
mov
fs
pop
fdiv
cmp
outsl
fcomip
mov
sub
dec
imul
adc
and
xchg
push
jmp
aad
and
pop
and
out
mov
or
int3
add
ds
lret
cld
mov
xor
fadds
mov
mov
inc
or
pushf
in
loop
nop
cmpsl
xor
inc
mov
mov
pop
dec
mov
in
xor
and
int3
lcall
mov
aam
add
and
pusha
and
mov
mov
fiaddl
lods
fbld
lret
cwtl
mov
sahf
push
xchg
fdivs
fwait
js
mov
fidivrl
sarl
mov
js
and
cld
mov
mov
add
in
jle
xor
xor
push
leave
incb
dec
mov
les
xor
aad
andl
sarb
add
jmp
lock
mov
push
loop
add
lcall
adc
mov
sub
mov
test
push
push
popa
mov
aaa
push
int3
sti
cmp
hlt
mov
sub
pop
xor
jmp
in
test
sub
or
push
dec
jns
aad
stos
addb
lcall
adc
jl
pop
push
fldenv
mov
gs
inc
mov
xchg
jmp
jbe
jb
jns
sub
xor
add
mov
out
mov
test
dec
sbb
mov
add
sub
sub
xchg
jle
dec
and
pop
int
xchg
or
mov
shrl
cli
jmp
subps
test
insl
loopne
xor
xchg
sub
scas
int
dec
sti
pop
inc
mov
add
xor
add
xor
jo
xchg
mov
stc
adc
push
jmp
pop
mov
inc
sarb
xorl
adc
mov
imul
xchg
jg
or
and
ljmp
pop
mov
jae
cmpsl
lcall
cld
or
rcl
add
out
cmpsl
push
pop
mov
mov
push
lock
cmpsl
aad
hlt
ret
push
xorb
xor
xchg
mov
jns
xor
std
lods
add
adc
xchg
sbb
push
xchg
out
mov
pop
addr16
add
mov
mov
stos
push
in
xchg
add
pop
mov
lock
xchg
mov
mov
sti
sbb
sbb
push
stos
fbld
adc
lods
es
and
xchg
pop
cmp
fiaddl
lcall
xor
xor
arpl
sarb
cmc
jmp
lcall
clc
gs
sti
xor
in
dec
sub
inc
outsb
inc
xchg
cmp
push
movsl
jmp
stos
into
xchg
lods
lahf
lods
sub
jp
add
xchg
xorb
fnstenv
das
jbe
or
adc
sbb
movsl
fstpl
dec
mov
fwait
sbb
stc
sub
cmp
icebp
nop
imul
dec
mov
pushf
cwtl
mov
incl
jbe
jns
xor
add
push
je
ret
fwait
into
mov
jmp
outsb
mov
dec
sbb
shrl
in
or
xchg
or
add
push
popf
cwtl
xor
ret
sub
pop
std
mov
or
adc
xor
sbbl
testl
outsb
cmc
cmpsl
lock
fnstcw
jmp
inc
mov
into
ja
vcomiss
cmp
mov
pop
push
mov
cmp
jecxz
shll
push
xor
out
negb
mov
or
jmp
dec
sub
adc
pop
inc
popf
lret
mov
inc
or
mov
neg
imul
jo
je
data16
aas
jne
repz
jne
and
mov
aaa
jecxz
cmpsb
or
test
arpl
sub
in
pop
mov
leave
fimull
popa
sub
and
stos
xor
pop
cmp
adc
fsubrs
push
pop
popf
lock
mov
adc
jne
int
push
lods
rcll
cmp
hlt
sub
cmp
lcall
cmp
shl
and
shl
ds
xchg
cld
jg
push
aas
xchg
inc
dec
dec
mov
add
xchg
or
mov
sub
xchg
dec
daa
sub
cmp
cmpsb
add
mov
mov
dec
push
das
repz
add
cmp
mov
xor
in
rep
mov
lahf
jnp
jle
jmp
mov
fcmovnb
and
pop
test
xchg
imul
test
lea
jb
sahf
pop
in
mov
leave
gs
pop
and
mov
loopne
mov
ljmp
or
and
and
lret
cmp
stos
pop
cmp
cld
gs
add
pusha
xchg
daa
xor
std
ss
data16
sub
fildl
inc
popa
jmp
sbb
xchg
sbb
in
adc
sbb
jmp
mov
push
pop
mov
test
mov
mov
mov
shlb
fdivl
iret
pop
imul
aam
jo
movb
xchg
sbb
xor
outsl
inc
pop
arpl
sbb
icebp
jle
divb
cmp
mov
push
movsb
push
pop
js
jge
dec
xor
mov
and
mov
ds
rorl
and
lds
ret
inc
add
push
mov
sub
dec
jne
jmp
or
js
cli
gs
jno
mov
mov
ret
pusha
and
rcll
or
repnz
push
push
xor
push
fldt
popf
jns
pop
stc
pop
mov
dec
mov
aaa
or
aam
filds
cmpsl
test
jo
inc
mov
push
jecxz
cmpl
mov
cmp
dec
int
enter
out
stos
bound
jns
lret
mull
add
cmp
cmc
xchg
inc
pop
mov
repz
fs
mov
adc
out
add
test
or
and
inc
sbb
sub
adc
adc
in
push
lcall
fidivrs
xchg
cmpsl
jno
ret
inc
insl
test
lahf
call
fwait
adc
fiadds
and
lock
enter
lcall
repnz
sub
xor
mov
in
push
or
xchg
std
data16
sub
push
pop
inc
cmpsb
or
mov
ficompl
inc
push
insl
or
clc
mov
cltd
inc
aam
inc
fists
repnz
add
xchg
test
fcmovnu
shlb
push
shll
xchg
mov
outsl
xor
mov
addb
or
mov
dec
jnp
pusha
add
add
arpl
mov
jbe
lea
popa
sbbl
pop
mov
and
push
insl
arpl
aaa
imul
test
jo
add
or
sarl
lret
or
jl
lds
mov
mov
jle
daa
int
fcoms
or
sbb
imul
mov
shr
add
dec
lods
pop
test
jns
je
sub
insl
dec
mov
xchg
outsb
mov
xchg
push
cwtl
out
lds
rolb
inc
jp
cltd
aas
mov
daa
pop
out
mov
cmp
pop
iret
inc
mov
and
and
lods
inc
sbb
addr16
in
and
sub
and
fld
je
imul
xchg
fcomps
sbbl
mov
adc
mov
nop
test
jno
adc
xlat
mov
cmp
pop
pusha
comiss
stc
pop
xchg
jecxz
je
icebp
adc
sarl
nop
std
push
and
sub
pop
push
dec
mov
or
push
in
add
stos
mov
xchg
ds
mov
imul
test
cs
push
cld
and
inc
test
popa
aaa
mov
cmp
pop
add
or
push
push
aaa
js
mov
fcmovb
mov
pop
mov
aaa
insl
lahf
jmp
xor
mov
jg
push
loope
jo
or
fisubrs
sub
mov
jnp
gs
lea
out
repnz
xchg
fdivl
adc
out
test
in
mov
fisubs
adc
jbe
xchg
dec
stos
add
data16
fmul
mov
cmpsl
pop
mov
or
jo
push
test
cmp
mov
pop
dec
rorl
sub
cmpsb
xor
adc
repnz
sub
add
jne
mov
fmuls
sahf
mov
lret
imul
dec
call
dec
xchg
mov
add
push
sbb
adc
and
sub
mov
sbb
scas
sbb
dec
sub
stos
push
jo
cmc
in
movsb
mov
add
lds
adc
pop
dec
test
stos
dec
sbb
sub
jne
and
push
xor
and
push
fsts
push
pop
xor
mov
bound
xchg
add
testb
mov
sbb
dec
stos
fcompl
jmp
cmp
icebp
push
scas
sub
or
pop
lahf
mov
in
int
and
adc
lret
mov
adc
pop
cld
jns
xor
pop
inc
repnz
fs
cmp
cmc
addr16
push
pop
loop
outsb
popf
mov
push
mov
mov
push
jb
shl
jecxz
push
rolb
lds
imul
fcmove
rcrl
push
cmp
pop
int3
xchg
and
sub
mov
pop
sahf
cs
mov
inc
fcmovne
cmp
icebp
and
ss
add
sbb
pop
or
push
repnz
orl
jae
cmpsb
pop
jmp
fcompl
loope
pop
dec
cmpsb
lahf
push
out
das
dec
fsubrl
inc
and
push
lret
xchg
jecxz
lea
lds
out
insl
lock
int3
and
pop
xchg
xor
cwtl
dec
xchg
adc
cs
mov
xchg
mov
mov
ja
xchg
ja
add
push
and
add
insb
jb
mov
xlat
std
xlat
rorb
xchg
fidivs
orb
mov
mov
push
mov
pop
jl
add
and
aas
lret
or
mov
push
xor
push
loopne
hlt
fsub
sbb
xor
jl
hlt
aad
repnz
les
out
sub
mov
cltd
mov
dec
mov
int
mov
lahf
jns
rcr
jmp
subl
and
dec
in
inc
out
mov
cmp
adc
sbb
arpl
out
lcall
movsb
xor
and
jl
scas
jne
sar
and
and
push
xor
xlat
jb
sti
fwait
xor
inc
out
inc
aad
cmpsl
popf
insb
push
mov
fnsave
mov
cltd
jmp
dec
mov
inc
inc
stos
popa
enter
cmc
inc
mov
or
test
sub
mov
scas
or
enter
idivb
inc
cmpsl
sbb
movsl
shrb
lods
outsb
xor
xchg
xchg
cmp
fidivrs
xor
xchg
scas
cltd
fs
cli
notl
cmp
cmp
add
cmpsb
aaa
fisttpl
dec
fisttpl
xlat
pop
cmp
jmp
jge
ret
cmpsl
add
in
mov
mov
jmp
cmp
les
rorb
lods
sbb
dec
cmpsl
es
ret
mov
pop
test
push
dec
jge
js
fsts
jmp
push
inc
cmp
jp
adc
xchg
pop
add
leave
and
push
cmp
inc
es
in
stc
inc
adc
ret
cmp
fldl
sub
cwtl
push
sub
movsl
inc
test
out
mov
xchg
daa
mov
js
imul
push
hlt
mov
xor
push
cmp
xchg
loopne
mov
dec
dec
pusha
gs
xlat
push
pop
out
cmp
push
andl
or
out
sub
dec
mov
pop
mov
mov
xchg
outsb
mov
hlt
sub
push
push
test
bound
popf
xlat
int3
mov
inc
dec
xor
dec
sti
mov
mov
xor
sbb
push
iret
sti
add
dec
shll
mov
cmp
and
fdivs
push
lods
pop
ror
sub
or
dec
std
or
mov
ss
mov
out
xchg
outsl
jae
cli
sbb
sbb
push
dec
in
mov
insl
sbb
sub
and
in
stos
mov
mov
iret
sub
xchg
insl
dec
lahf
fidivl
xchg
mov
aad
dec
xor
cmp
das
out
loop
shll
xor
lods
sarl
sub
pop
cli
ljmp
cmp
mov
inc
add
mov
cmp
inc
adc
cmp
shrb
mov
mov
and
lds
xor
popf
scas
lods
xchg
ret
pop
loope
jge
aaa
pushf
push
push
inc
jnp
inc
ljmp
dec
jge
sbb
cli
push
jmp
scas
aad
sbb
xchg
test
addl
pop
pusha
dec
push
mov
xor
dec
add
push
sub
popa
lret
xchg
repnz
stc
lods
daa
cmp
pop
adc
push
imul
push
jo
fistpl
stc
bts
xchg
jl
xchg
pushf
adcl
cld
or
int
push
xchg
cmp
sbb
sti
inc
xchg
and
jecxz
pop
in
and
mov
cmp
pushf
ds
or
cmp
lods
mov
clc
loop
dec
lret
mov
imul
stos
hlt
insb
jb
cmp
fistpl
xchg
mov
rcrl
inc
pop
mov
pop
xor
jl
mov
insb
in
mov
cmpb
mov
add
or
add
fldt
sub
mov
mov
push
scas
xor
insb
leave
xorb
cmpsl
roll
pop
andb
aam
scas
or
inc
leave
out
sahf
int3
out
sbb
cmovge
mov
xchg
pop
insb
subb
pop
out
fldt
push
lahf
into
mov
sub
xchg
push
imul
add
cmp
std
lret
stos
jnp
addl
push
cmpsl
cwtl
rcl
mov
push
mov
aas
cmp
lock
enter
ja
lahf
push
ljmp
ljmp
pop
fnstcw
jge
push
pop
push
lea
fstpl
xchg
jle
data16
shll
jbe
sbb
jo
jne
ljmp
lods
mov
add
out
add
fadd
cmp
loope
in
into
jecxz
inc
sub
dec
or
ret
pop
or
fists
fmuls
add
or
mov
dec
jp
xor
dec
je
std
inc
out
inc
jbe
adc
jp
add
dec
outsl
lcall
sahf
inc
adc
pop
mov
xchg
sub
xchg
jmp
clc
inc
ss
lods
pusha
cmp
flds
daa
adc
fiaddl
leave
rol
insl
out
scas
fs
arpl
push
sbb
push
dec
pop
mov
scas
les
rclb
sbb
mov
inc
mov
stos
mov
or
movsl
loope
add
jge
lods
aaa
mov
ret
xor
aas
xor
inc
lods
bnd
addr16
pop
mov
push
ja
gs
sub
pop
xchg
cld
sub
add
les
lret
add
add
ret
incl
jecxz
jnp
ds
les
push
cmpsl
dec
in
xchg
mov
pop
pop
test
dec
mov
mov
cmp
gs
push
jl
or
call
push
mov
adc
mov
gs
test
ss
gs
adc
adc
add
scas
adc
stos
mov
pop
test
dec
int3
loop,pn
or
enter
inc
dec
and
cmp
push
mov
cmp
add
mov
in
cmp
stos
popf
sti
mov
sti
mov
add
insb
mov
leave
js
cld
jns
scas
inc
sbb
inc
shrb
rcrl
insb
test
mov
fsubrs
jb
lock
push
xor
outsb
das
mov
dec
dec
add
inc
loop
fsubp
inc
insl
into
leave
bswap
imul
stos
out
int3
int3
xor
push
mov
mov
push
addb
insl
and
mov
outsl
sub
orl
call
in
int3
test
adc
lahf
fadd
movsl
imul
cmp
sub
adc
jne
cmp
cmpb
push
pop
push
and
jp
and
cmpsb
sub
jne
mov
inc
ljmp
mov
je
push
dec
decb
inc
sahf
lds
add
hlt
aaa
jae
clc
stos
imul
dec
lock
aaa
mov
cmpsb
mov
insl
inc
clc
out
in
dec
cmp
repz
scas
dec
push
inc
sbb
mov
lea
ret
xchg
dec
sbb
cli
lret
xor
mov
dec
fsts
icebp
addr16
iret
fcomps
lcall
fidivrs
mov
sub
aas
mov
pop
sub
mov
cs
add
ljmp
add
ljmp
and
ret
loop
outsb
xchg
mov
jne
cld
std
ret
std
mov
and
bnd
mov
xor
test
out
and
xor
inc
mov
test
lahf
dec
fnstenv
push
js
xor
push
jae
cmpl
mov
jecxz
pop
mov
fidivrl
and
fbstp
daa
stos
jle
out
adc
out
jp
xor
bswap
movsb
fwait
mov
jmp
pop
notl
icebp
ret
mov
lock
scas
cmp
outsb
cmp
xor
push
jae
sahf
daa
lret
lret
push
dec
dec
fldt
shlb
fsubrs
xor
push
in
xor
sub
loop
andl
push
es
loope
cwtl
jecxz
loopne
clc
xchg
mov
lea
dec
imul
pop
loopne
cltd
xor
insb
xchg
int
xchg
fisttps
jns
in
xchg
xchg
adc
ficoms
stos
nop
daa
xchg
mov
loop,pn
addr16
inc
idivb
mov
pop
jge
cmp
insl
or
dec
aad
nop
sar
jno
cmp
std
add
stos
pop
test
outsl
cmp
sbb
lock
ret
sbb
jecxz
mov
ljmp
jb
call
nop
mov
jnp
icebp
aas
jecxz
jecxz
xor
clc
inc
push
fnstenv
push
or
std
je
testb
cmp
arpl
movsl
push
mov
popf
loop
lret
jae,pt
outsl
fcompl
adc
sub
loope
sbb
popf
push
adc
cmpl
cmpsl
movsb
sub
pop
lcall
xchg
push
xor
xchg
cmpsb
xchg
xchg
arpl
outsl
out
cld
fildll
cli
add
ucomiss
leave
pop
pop
sub
jle
out
add
jne
int
mov
and
sbb
mov
add
pop
sub
aas
xchg
inc
or
jae
test
dec
mov
or
xchg
cmpsl
outsl
jo
clc
std
pop
push
cs
mov
les
pop
mov
xor
add
pop
shr
xchg
sub
popa
adc
inc
test
lret
lods
loopne
insb
xor
mov
stc
aam
dec
fcmovb
in
pop
jb
pop
push
repnz
mov
call
add
aad
popf
mov
inc
int
sub
jne
jl
add
insb
shrl
cmp
add
or
ret
or
adc
jnp
mov
lock
psubsb
pop
push
push
mov
lds
call
test
push
movsl
fildll
jle
movsb
or
dec
test
ja
lea
insl
xchg
mov
mov
and
bound
popa
fists
lock
dec
add
add
mov
push
inc
and
sbb
lock
cmp
cmp
jne
jg
in
aam
push
sbb
mov
cmpsb
sahf
loopne
mov
push
mov
imulb
sub
gs
xchg
mov
mov
mov
arpl
mov
jg
repz
mov
pop
scas
and
sbb
adc
ds
icebp
fstpl
fildll
sbb
addr16
inc
sub
pop
pop
mulb
jae
or
sbb
rcll
ja
scas
movzbl
xchg
xchg
js
ret
int
inc
and
sub
enter
pop
mov
jbe
cmp
cmp
inc
js
cmp
leave
into
lcall
mov
and
data16
ss
daa
xor
pop
cmc
es
or
adc
stc
push
xchg
loope
loopne
sub
adc
jo
aam
popa
mov
ret
pmaxsw
sub
addr16
in
xor
sub
test
dec
cltd
push
cld
insl
mov
mov
int3
mov
sti
inc
xchg
fiadds
out
jae
pop
repnz
mov
ss
aad
scas
insl
mov
sbb
xor
sbb
into
enter
sbb
call
add
xor
cld
push
pop
lods
or
mov
fsubrp
adc
popa
mov
sbb
push
inc
and
enter
mov
rcrb
mov
repz
js
add
insb
ret
pop
add
lahf
aam
call
or
push
repnz
popa
cmc
js
push
mov
cld
ja
das
loop
pop
iret
clc
jg
ror
xchg
add
and
rol
mov
mov
cli
xor
cmp
rcll
movw
fildll
xchg
and
xor
pop
ss
pop
push
ret
sarb
jno
mov
outsl
mov
mov
test
sbb
aad
iret
adc
in
lds
add
fists
insb
dec
xchg
push
jg
sbb
std
add
add
dec
inc
out
iret
pop
mov
movl
in
and
inc
add
jp
adc
ljmp
in
arpl
lahf
aad
sub
cmp
sbb
inc
or
cmp
jnp
pmullw
js
sub
push
sub
icebp
inc
je
sti
loope
int
outsb
cs
mov
pop
and
jp
jne
and
sbb
sbb
ljmp
push
bound
test
lret
mov
sbb
jp
lcall
hlt
mov
mov
mov
add
les
mov
adc
cs
mov
xor
addb
pop
fildll
addb
sub
add
inc
pop
inc
mov
and
je
aas
lret
lods
inc
inc
inc
xchg
mov
jecxz
mov
andb
mov
or
sbb
aam
and
or
in
dec
sti
mov
push
iret
dec
daa
bound
sub
in
mov
jne
les
mov
into
fisubs
enter
fwait
push
fisubrl
mov
shrb
mov
or
dec
lret
jnp
out
mov
jecxz
ljmp
enter
inc
sub
and
cmp
sbb
in
lret
cmp
lret
xchg
inc
jb
mov
nop
sbb
test
mov
dec
pop
daa
push
sbbb
mov
sbb
inc
outsb
outsl
mov
push
movsl
addb
sbb
pop
pop
pop
ficomps
dec
aam
sub
jle
jno
and
std
daa
movsb
push
dec
add
repnz
pop
xchg
cmp
jge
cmpsl
xor
lahf
or
pop
mov
xchg
sti
aad
in
ffreep
fsubrs
push
pop
dec
sub
jl
aaa
push
arpl
mov
jo
js
jb
cld
ret
or
mov
fucomi
negl
in
pop
jo
ret
stos
mov
roll
cltd
sbb
mov
repz
fidivrs
mov
push
leave
fadds
popf
movsb
and
dec
add
xor
sub
daa
bound
sbbl
xor
sbb
mov
outsl
rep
sub
out
int
loop
hlt
jl
in
or
xchg
mov
xor
mov
cs
mov
popa
sbb
cld
dec
lods
outsl
mov
cmpsb
push
sbb
pop
cs
pop
aas
lret
sub
je
xchg
dec
hlt
xor
outsl
cld
lahf
adc
lds
mov
inc
push
jl
out
cmc
test
lahf
sub
gs
jae
bound
popf
xorb
sbb
jns
or
outsl
arpl
int
incb
out
rcrb
insl
pop
lods
add
je
push
mov
fsubr
scas
test
cli
pop
in
mov
adc
jb
sub
outsl
test
pushf
cmp
sub
insb
sub
fcmovne
in
or
inc
xchg
cmpsb
idivl
rolb
fs
imul
add
and
jnp
inc
stos
cmc
mov
fwait
pop
jle
cmp
mov
sbb
ret
pop
adc
out
mov
in
imul
outsb
lret
xlat
mov
xchg
mov
fcmovu
scas
push
mov
and
pop
mov
or
repnz
mov
aad
and
pushf
ret
xlat
pop
cmp
in
popa
pop
movsl
pop
in
mov
mov
pop
outsb
xchg
mov
lahf
mov
jl
pop
inc
pop
and
repnz
outsl
lahf
mov
test
jl
test
loop
push
popf
nop
insl
repz
cli
mov
shll
push
mov
inc
mov
rcll
mov
sub
loop
lds
movsb
pushf
and
fwait
movsb
push
pop
adc
or
mov
fbld
aad
mov
into
cmp
adc
inc
es
cmp
in
loope
cmp
sub
sbb
jg
push
and
fistl
fnstenv
push
addr16
movl
adc
popa
and
in
xchg
popa
jno
stos
mov
pop
and
push
mov
sbb
in
sub
popa
jg
sahf
and
ljmp
sti
adc
nop
xor
cmp
inc
sub
stos
dec
repnz
xchg
mov
movsb
stos
lahf
je
out
mov
inc
filds
mov
jmp
push
cli
or
decl
loop
mov
mov
sub
loope
mov
bsf
sbb
cmp
int3
inc
jp
cmp
xchg
fmul
inc
xor
bound
stos
push
pusha
scas
pop
outsb
fdivl
imul
shlb
dec
sub
js
out
jb
add
mov
mov
inc
mov
cs
scas
xorb
sub
cwtl
mov
rolb
cld
mov
frstor
ficoms
mov
fdivrl
xchg
push
cmp
jge
jae
lods
mov
addb
ljmp
rclb
lods
stos
out
mov
xor
push
out
pushf
adc
xchg
in
in
sub
push
movsl
push
xor
cmpsb
lods
jns
xchg
in
push
adc
pop
xchg
push
pop
xor
pop
jb
rclb
inc
sbb
cmp
insb
xor
or
mov
sub
and
shrb
daa
jmp
imul
repz
sub
xor
std
jle
adc
dec
xchg
jne
or
push
movsl
jbe
rorl
add
das
out
add
add
clc
es
sub
in
xchg
mov
push
andl
or
xchg
pop
pop
mov
xor
pop
mov
hlt
sbb
aam
pop
mov
mov
ds
and
mov
sub
pop
sbbb
cmc
cltd
push
sub
out
push
popa
add
jge
cmp
xor
xor
lret
lods
fcmovbe
xor
pop
not
cmpl
mov
movsl
jnp
jmp
or
mov
test
ret
aaa
sub
add
push
jae
mov
push
js
gs
dec
lcall
xor
decb
xchg
outsb
mov
fcoms
cmp
lods
xchg
aad
xor
nop
imul
xor
xchg
jmp
xorw
daa
adc
mov
or
pop
out
pop
es
push
flds
pop
rcpps
andb
jo
inc
test
lods
call
or
push
xor
out
scas
sbb
jecxz
adc
and
or
stos
movsl
ret
and
fsubrs
lds
add
mov
pushf
pusha
mov
shlb
nop
pop
xchg
xchg
cmc
in
push
push
jbe
push
inc
xor
mov
enter
and
call
jmp
cmc
inc
scas
mov
les
aaa
mov
lods
push
push
mov
outsl
jp
push
sti
dec
out
inc
andb
jle
cwtl
das
mulb
mov
inc
or
pop
xor
add
xor
sahf
jbe
out
and
push
jnp
pop
fistl
dec
sbbl
cmp
push
and
dec
pop
mov
lea
sbb
sbb
and
cmc
ds
and
dec
dec
push
test
rcrl
dec
mov
push
dec
sub
mov
jnp
sub
idivl
jns
sub
sub
in
inc
dec
mov
or
movsb
call
xchg
jns
cli
call
clc
mov
lcall
and
jecxz
test
rorb
ret
mov
pop
xor
inc
sbb
pop
cmp
lock
hlt
je
shl
push
xor
sbb
ja
xchg
xchg
or
jp
outsb
sub
sbb
jno
cmp
xor
jb
xchg
jl
fcmovb
aad
into
pop
push
out
fdivrs
in
loopne
or
and
mov
insl
mov
cmp
fwait
repnz
lods
dec
bnd
aam
in
lret
scas
in
add
clc
jmp
inc
fnstenv
daa
loop
repz
sbb
mov
pushf
cwtl
mov
xchg
sbb
push
pop
out
shll
or
out
add
xlat
cmp
jno
arpl
fcoml
mov
cmp
inc
fcoml
push
xor
in
xor
fldcw
pop
data16
clc
daa
add
imul
insb
inc
sbb
push
pop
xor
arpl
mov
adc
cwtl
notl
ficomps
jmp
in
ds
popa
pop
clc
insl
pop
dec
mov
sub
aaa
cltd
lods
sub
sbb
sbb
xchg
xor
pop
sbb
push
idivb
mov
inc
or
imul
mov
cs
pop
cld
hlt
mov
leave
mov
popf
outsl
cmp
mov
pop
gs
jno
xor
cmc
lret
lea
nop
clc
jbe
hlt
mov
push
xor
js
loopne
test
pushf
xor
pop
in
sbb
push
js
push
lods
or
xchg
cmpsl
adc
out
sti
inc
dec
movsl
pop
add
pop
dec
je
xchg
and
sbb
fs
mov
sub
add
adc
or
int3
repz
mov
mov
or
mov
dec
sub
leavew
fisubrs
pop
sbb
gs
arpl
and
fcomps
mov
mov
or
stc
and
add
pop
xchg
frstor
dec
mov
mov
cmp
pop
adc
cmp
mov
add
mov
cmp
idivl
or
daa
es
fsubrl
xchg
cwtl
divl
cwtl
gs
rolb
sub
shlb
stos
into
cmpsl
xchg
call
icebp
adc
les
cmc
xor
mov
mov
out
scas
add
xchg
lahf
mov
ss
mov
jle
push
movsl
dec
iret
hlt
push
add
movw
pop
dec
pop
lods
out
cs
add
fcompl
cli
inc
and
mov
rcrb
popa
pusha
roll
stc
or
cli
mov
iret
mov
mov
push
cltd
mov
test
mov
lret
ficomps
scas
mov
js
cltd
pop
inc
movsl
pop
pop
add
dec
adc
push
cmc
mov
loope
lods
imul
pop
push
push
lahf
lahf
icebp
and
adc
rcrb
adc
and
mov
mov
inc
pusha
adc
sbb
sbb
fmulp
test
fsubrl
mov
lods
insb
cmp
shll
fidivrs
icebp
inc
add
dec
jb
jmp
das
test
pop
test
es
pop
int
int
dec
mov
and
mull
lock
mov
inc
or
mov
pushf
orb
lret
add
insl
sub
dec
push
int
movsl
lahf
sub
lcall
sbb
fwait
jl
jp
push
data16
movsb
in
int3
cs
or
push
add
ljmp
dec
dec
jge
in
ss
sub
xchg
dec
ret
mov
dec
stos
xchg
mov
aam
or
push
push
dec
movsb
adc
mov
push
ljmp
push
frstor
xchg
rorl
jae
loope
dec
push
out
fstpl
mov
sub
sub
jp
shll
test
daa
into
arpl
fnsave
out
jns
fidivrs
mov
into
pop
dec
adc
aam
mov
scas
sbb
js
repz
stos
es
ljmp
outsb
xchg
sub
push
cmp
mov
call
mov
push
cwtl
insb
sub
sub
sti
roll
cwtl
js
repz
cmp
test
xchg
mov
cmpsl
nop
sbb
nop
clc
mov
orl
jg
inc
cmc
clc
movsl
or
lea
cmp
push
push
repnz
fdivl
xchg
ret
out
addr16
push
pop
add
scas
mov
fnsave
inc
out
push
movsl
stos
ja
jmp
xchg
ret
xchg
inc
lea
xor
scas
popf
iret
pop
pop
fadds
stc
cltd
clc
jg
xor
push
je
sarl
pop
sub
enter
xchg
dec
mov
adc
jnp
pushf
test
lods
push
mov
push
ss
ljmp
stos
call
jg
cmp
lret
rcrb
stos
ret
cmpsl
stos
loope
popa
mov
mov
mov
sbb
sub
pop
subb
lcall
insl
push
inc
inc
stos
enter
cmp
jge
fiadds
pusha
es
sub
adc
lds
iret
mov
in
sbb
jl
popa
mov
pop
shlb
sbb
xor
sbb
in
add
out
lods
lds
out
adc
js
rorb
cs
mov
ret
std
bound
jle
div
cmp
sti
pop
xor
and
cmc
ljmp
daa
ljmp
jne
insb
adc
sub
xchg
sahf
aaa
aaa
gs
jle
mov
flds
and
jns,pn
sahf
jl
xor
int
pop
rclb
pop
int
out
add
push
sbb
stc
and
cli
je
insl
adc
fs
stos
xchg
mov
sbb
inc
in
ss
inc
xchg
cltd
scas
mov
xchg
or
cwtl
xor
jle
fsts
dec
mov
push
test
jae
ret
dec
aaa
xchg
sub
negb
sub
dec
std
daa
xor
shl
mov
mov
push
cli
jmp
cmpsl
fdiv
mov
int
andl
cltd
sub
jp
adc
mov
xorl
lock
out
stos
orb
mov
xchg
dec
arpl
sub
pop
cltd
cmpsb
cwtl
inc
vmovdqa
sub
mov
js
jb
sub
dec
test
jbe
lahf
mov
lret
imul
rclb
pop
pusha
mov
addb
stos
cmp
lods
nop
xchg
jl
stc
mov
loope
mov
or
in
hlt
dec
pop
test
dec
add
int
push
ljmp
movl
lahf
mov
jno
lods
xor
jae
mov
cmp
push
std
popa
outsb
dec
jle
mov
mov
in
dec
mov
das
dec
or
ja
fs
and
fsts
pusha
test
lods
mov
shl
lea
inc
jg
mov
incl
jnp
dec
insl
or
test
lods
push
daa
outsl
xlat
scas
sbb
out
mov
stos
sub
jnp
adc
aad
leave
or
jbe
lcall
xchg
cmp
pop
cwtl
sbb
pop
pushf
int
hlt
nop
jne
into
jnp
insl
in
ret
leave
adc
sbbb
shrl
ja
inc
jno
pop
mov
shlb
ficomps
aam
repz
lret
inc
sbb
ja
mov
mov
fwait
divl
jl
mov
sub
pop
lcall
mov
pop
jae
mov
cmpsl
ja
pusha
cmp
dec
aam
cld
leave
mov
inc
jbe
lods
push
enter
loope
sub
sbb
test
out
inc
idivb
dec
pop
mov
enter
sub
mov
pop
xlat
in
out
adc
adc
dec
push
xorl
mov
scas
dec
inc
test
fcompl
fsubrl
mov
or
gs
xchg
orl
mov
std
mov
mov
or
adc
mov
sbb
mov
loope
cmp
mov
cmp
mov
sti
clc
sub
push
xor
dec
and
dec
and
jle
mov
in
jle
jle
test
shrb
pusha
mulb
les
ret
dec
les
inc
in
fistpl
mov
sbb
add
roll
mov
jo
jmp
sub
in
cmp
jo
leave
mov
das
cli
std
cmpsb
sbb
mov
paddb
and
xor
int
add
sub
js
fdivrl
sub
sbb
inc
movsb
jne,pt
loope
push
mov
mov
dec
subb
push
push
push
ret
cli
inc
stos
pop
cmc
gs
test
fdivrl
inc
xor
pop
addr16
test
into
add
jge
aam
imul
jnp
in
outsb
push
jae
xchg
lods
cmp
lods
push
or
mov
dec
jbe
test
mov
jp
sub
mov
adc
xchg
cmpsl
mov
js
jg
jle
and
adc
adc
and
sti
and
movsl
mov
jg
lahf
sbb
inc
cmc
jnp
mov
push
push
clc
das
add
pop
out
pop
mov
xlat
jle
cmp
lahf
fisubrl
stos
enter
ds
mov
add
repnz
or
imul
adc
dec
ret
pop
je
xchg
mov
arpl
stos
ss
mov
mov
pop
mov
and
icebp
ja
dec
push
dec
mov
cli
popl
sbb
mov
enter
pop
xor
add
repz
add
das
pusha
sbb
cmpsb
adc
jno
sbb
dec
sbb
addb
movsl
movsb
into
add
push
mov
pop
mov
push
push
pop
cmpsl
in
outsb
push
stos
sbb
gs
push
adc
rolb
in
insl
push
xchg
push
lds
jnp
mov
imul
mov
sbb
aas
xor
insb
mov
inc
gs
in
rorb
push
sbb
adc
fsts
loop
nop
and
lods
insb
lods
ja
pop
push
scas
dec
pop
jo
add
popf
mov
and
out
adc
cmp
daa
jno
cs
adc
sbb
dec
pop
cmpsl
or
out
ss
js
scas
cmp
icebp
sbb
int3
pop
xchg
pop
jno
stos
aas
cmp
lret
cmp
push
dec
aas
or
es
sbb
xchg
ja
jae
and
call
fmul
in
outsb
jg
and
test
mov
negb
fdivrl
add
ss
out
pop
stc
int
call
push
mov
daa
mov
hlt
sti
outsl
dec
sarb
xchg
xchg
dec
mov
cwtl
sahf
jl
je
in
xlat
cli
xchg
jecxz
inc
orb
test
rclb
imul
stos
or
fisttpl
push
movb
int
cs
fcmovne
push
cmc
or
not
mov
dec
insb
scas
inc
push
xchg
loopne
push
cltd
add
fdivrp
inc
mov
mov
pop
mov
jae
fsts
inc
test
in
push
in
jne
xchg
out
cmp
movsl
notb
insl
dec
lret
sub
inc
bound
rcrb
cwtl
mov
inc
js
hlt
add
loop
ljmp
xchg
cli
je
out
mov
ds
lea
aas
jbe
gs
jecxz
inc
dec
sbb
mov
scas
lock
test
nop
push
cltd
sub
mov
fcompl
sti
add
push
aas
ja
rcr
aad
add
sahf
mov
or
jne
jge
add
xor
outsl
inc
cld
mov
ds
fnsave
pusha
jmp
mov
mov
fistl
mov
adc
inc
outsl
jnp
mov
adc
shrb
inc
push
xchg
pop
mov
aad
mov
lods
sub
fcmovnbe
mov
sub
out
clc
pop
xchg
sarl
movsl
scas
dec
test
xchg
mov
xor
mov
cmp
xlat
xchg
pop
shr
xchg
mov
push
inc
pop
pop
addr16
sti
aad
mov
shll
jo,pt
call
adc
int3
aas
xor
jns
sbb
sub
pop
push
mov
dec
pop
and
xor
and
mov
shlb
xor
imul
and
enter
shll
mov
mov
test
stos
xor
mov
pop
imul
add
sbbb
dec
aad
test
into
sbb
movsb
inc
cmc
lcall
jmp
lret
fldcw
jl
arpl
push
icebp
dec
and
inc
mov
jmp
mov
rcl
cmp
cmpsb
cwtl
adc
repz
ret
sub
xor
in
or
jno
and
pop
jecxz
lods
xchg
cmp
jns
lret
sub
out
add
pushf
cltd
test
imul
xor
out
sbb
xor
add
es
pop
cmp
xor
cmpxchg
fsubr
fidivrl
push
leave
xchg
je
hlt
cmp
xchg
add
xchg
es
jge
incb
jle
xor
pop
cmc
test
fildll
gs
pop
loope
repz
jnp
mov
cltd
push
push
fimuls
dec
push
jns
pop
add
adc
adc
xchg
ret
leave
lahf
popa
lds
jle
dec
sti
in
aad
push
cmpsb
aas
inc
push
pop
push
hlt
lahf
shll
pop
popa
into
loop
mov
mov
push
lock
inc
pop
pop
lret
mov
lea
xchg
push
iret
leave
mov
adc
sbb
dec
mov
mov
pop
cmpsb
add
bndldx
jbe
out
inc
aam
mov
mov
jmp
add
and
jle
stc
or
mov
pop
mov
js
fstpt
mov
xchg
sbb
push
inc
mov
pop
pop
sahf
aad
imul
cmc
clc
call
cmp
fst
adc
ss
jp
pop
out
xchg
jo
lcall
aad
hlt
xchg
jae
pushf
stos
fstpt
mov
pop
aam
in
leave
xchg
push
dec
lcall
jle
xchg
out
jg
mov
ljmp
mov
mov
in
jnp
sar
mov
and
mov
or
adc
aas
lea
outsb
pop
adc
push
pop
xchg
lret
push
xor
imul
push
sbbl
mov
xchg
out
icebp
and
std
cmp
lock
js
jp
xchg
stos
in
lock
stc
inc
inc
cli
daa
repz
push
push
lcall
cmp
mov
pop
fwait
repnz
mov
xor
xchg
jns
mov
jle
sub
fimuls
stos
das
pop
jecxz
or
outsb
cmp
jg
nop
rol
rcll
xlat
scas
push
loopne
pop
lcall
mov
push
adc
shlb
popa
in
or
jns
lret
mov
pop
scas
push
jnp
mov
cmpsl
bound
mov
mov
pop
xchg
push
dec
scas
insb
cmp
cmpsb
cs
push
hlt
addb
or
push
dec
into
pop
mov
in
in
mov
inc
or
pop
jg
movsl
call
data16
cmp
mov
inc
test
mov
jg
fidivrl
in
pop
stos
in
ret
and
jge
stos
sbb
mov
xchg
jecxz
gs
lea
aad
rsqrtps
mov
dec
or
inc
aad
fsubs
nop
in
inc
mov
xchg
ds
dec
fnstsw
cltd
ja
gs
sub
mov
add
add
mov
pop
mov
xor
rorb
insb
xchg
outsb
sub
enter
das
test
dec
mov
scas
clc
stos
sub
test
test
insl
stos
push
xlat
mov
mov
jb
mov
mov
push
scas
jge
xor
idivl
mov
es
sbb
jo
push
test
test
cmpsb
push
jno
sub
loope
dec
in
ror
fists
scas
testb
mov
rorl
mov
pop
pop
and
mov
stc
mov
rolb
sbb
inc
movsb
mov
dec
xor
pop
dec
adc
test
dec
and
dec
stos
cmp
fisttpl
inc
mov
rcll
lahf
out
add
adc
std
sbb
inc
sub
gs
scas
rolb
cmpsl
cli
pop
jmp
inc
mov
std
cmp
add
cmp
and
pop
push
mov
ss
sbb
xchg
or
es
movsl
push
stos
or
mov
jp
inc
inc
inc
push
sub
mov
stos
pop
iret
aam
pushf
loop
call
mov
hlt
push
dec
repnz
add
adc
sbb
and
ljmp
pop
or
mov
loop
scas
mov
popl
adc
dec
mov
pop
popa
call
jns
fdivl
xlat
gs
stos
sub
sbb
or
imul
sub
scas
out
vmwrite
sub
sbb
scas
and
push
adc
add
mov
outsb
inc
inc
mov
pop
dec
sahf
les
pop
ds
cmc
xchg
clc
mov
pusha
xchg
notb
pop
inc
dec
or
jns
mov
leave
adc
test
cmp
dec
fnstcw
xchg
lahf
add
sub
jnp
pop
pop
notb
int
insl
mov
add
fs
je
and
jg
mov
outsb
ror
loopne
add
cs
jo
fucomip
xor
js
cmp
mov
mov
inc
add
aas
nop
add
pop
enter
cli
das
mov
imul
mov
fnstcw
mov
xlat
dec
outsb
inc
sbb
testb
lahf
das
inc
add
nop
ret
shlb
in
or
or
pop
sbb
jge
add
xor
leave
imul
insb
ret
xchg
push
push
movsl
loope
fisubs
cmp
adc
pop
fs
and
pushf
lret
imul
clc
cmc
xchg
in
mov
adc
cld
xchg
cmp
cmp
lods
fwait
loopne
test
lea
jns
fildl
or
ret
xchg
xor
xchg
addr16
jle
std
rcrb
mov
adc
push
insb
fnsave
add
xchg
and
pop
subl
gs
inc
int3
scas
imul
in
xor
addr16
fistps
add
call
test
jae
out
mov
cmp
loope
xor
lret
ret
ljmp
pop
mov
inc
inc
insl
in
mov
shl
xchg
cltd
cmpsl
fidivs
addb
push
aad
test
testl
mov
add
pop
jg
scas
mov
ficoml
jecxz
mov
pusha
fcmovnbe
rol
cltd
inc
dec
cmp
mov
sbb
outsb
div
orl
cmp
je
call
stc
jne
stos
jbe
fldt
mov
mov
je
add
iret
insb
mov
inc
jns
int
arpl
jecxz
or
mov
ds
jb
adc
idivl
sub
or
jae
bnd
sbb
cld
lcall
pusha
insb
xchg
mov
dec
outsb
add
push
push
jmp
cmpsl
push
jecxz
mov
cmc
popf
cmpsl
or
notb
mov
test
std
imul
inc
leave
mov
push
lds
sbb
mov
insb
out
push
mov
fisubrl
aam
jl
or
or
mov
pushf
dec
push
int
dec
mov
mov
insb
in
push
sbb
shlb
test
movsb
lret
adc
xor
sub
push
movsb
test
and
in
repz
sbb
into
fsubp
call
mov
xchg
jmp
andb
jbe
cltd
movsb
stos
and
jbe
int3
mov
fs
sti
stos
push
jp
mov
stos
mov
shlb
and
stos
jb
call
rcll
repnz
adc
add
sbb
pop
daa
pop
lock
mov
bound
lcall
push
or
adc
lods
popf
sub
fldcw
das
xchg
or
or
xor
mov
push
push
dec
in
sbb
push
mov
push
or
inc
add
mov
pop
lret
lret
imul
mov
les
iret
xor
cmp
nop
pop
sbb
add
push
cmp
mov
push
cmp
loopne
push
jecxz
add
and
pop
jecxz
sbb
call
ss
and
sub
out
pop
lea
xchg
test
xor
and
icebp
out
xor
mov
data16
pushf
jecxz
mov
cld
xchg
pop
aas
movsb
into
mov
or
inc
sbb
push
fcmove
sub
push
xchg
push
div
and
xchg
sub
fisubl
cmp
inc
pop
sbb
sub
push
adc
pop
fcompl
lock
in
int
push
add
rorl
mov
jo
sub
dec
sbb
ja
adc
lods
rcl
mov
test
pop
out
addb
cmp
out
mov
sar
mov
push
push
push
sbbb
jno
out
xchg
mov
testl
jae
inc
inc
cmp
sarl
sarb
frstor
subl
sti
shll
stos
andb
pop
cmp
lods
xor
xchg
loopne
mov
sub
mov
cld
out
add
insl
lods
lods
out
cmc
sub
mov
and
sub
xorl
add
in
lds
icebp
mov
jo
jbe
lret
push
mov
lret
inc
jp
mov
ja
adc
sti
rcll
sahf
mov
test
cs
mov
imul
lahf
adc
cld
lock
ljmp
inc
je
sub
lret
out
arpl
out
stos
stos
jbe
jo
pusha
push
loop
jbe
xchg
xor
add
xchg
jg
xchg
bound
aam
jns
jnp
jo
addr16
jno
push
stc
notb
stc
jbe
cmp
flds
mov
lret
mov
cmc
in
xlat
stc
jle
ja
pop
int3
adc
mov
add
addl
xor
js
repz
sbb
jp
pop
mov
xchg
sbb
mov
insb
push
iret
dec
jbe
add
fsubl
into
cmp
adcb
sub
inc
nop
je
add
in
sbb
mov
mov
mov
clc
gs
mov
sbb
das
cld
pop
and
jb
or
mov
jbe
fbstp
lret
push
pop
movsb
push
stos
push
mov
fsubr
and
sbb
dec
sub
js
outsl
and
xchg
sub
jne
cmp
movsl
mov
dec
addr16
push
call
cli
fwait
cmp
xchg
xor
jae
outsl
or
push
inc
loop
aam
fiadds
sahf
idivb
xchg
frstor
pushf
pop
and
mov
or
mov
cmp
jnp
push
leave
je
shl
xchg
jnp
lret
ja
stos
enter
movsl
add
aaa
xchg
xor
lahf
xlat
insl
cmp
int
cmpsb
stos
sbb
or
cs
or
in
jae
pop
pusha
mov
fimull
sub
sbb
fucomi
mov
xor
jmp
sub
push
aas
hlt
roll
shl
ficoms
fninit
pop
inc
pop
adc
aas
pop
xlat
sbb
insl
mull
insb
fwait
and
fnstenv
push
or
dec
jo
jecxz
out
and
leave
leave
xor
rclb
aas
pushw
es
mov
sti
mov
mov
mov
lret
push
mov
push
pop
push
push
push
pop
inc
mov
lret
xchg
ror
shlb
jno
ret
or
mov
dec
imulb
rorl
fcoml
rolb
xor
xchg
and
or
jno
xchg
adc
inc
jo
loop
dec
ret
jb
fimull
mov
in
imul
std
add
pop
or
cmpsb
or
sar
or
fimull
pop
or
dec
jne
pop
mov
sbb
nop
or
and
sbb
dec
jbe
push
lea
sbb
push
outsb
scas
inc
mov
lds
and
sub
ret
loopne
mov
cmp
test
cli
lds
mov
sub
into
mov
test
nop
out
jb
mov
jg
jecxz
enter
loope
cwtl
sub
push
mov
dec
out
fwait
enter
in
imul
cmp
sub
mov
fsubl
adc
sub
mov
mov
push
ds
jnp
and
mov
movsl
int
dec
js
jns
lcall
cmpsl
push
cmpsl
push
jecxz
fxtract
or
and
mov
into
mov
dec
stos
cmp
xchg
pop
sbb
popa
cmovle
ljmp
sub
lods
or
ds
add
cli
enter
pop
xor
xchg
jp
push
push
in
jns
mov
aam
sarl
pop
inc
jecxz
add
jg
mov
add
or
mov
mov
pop
daa
mov
pop
lods
imul
xchg
pop
fwait
push
jp
push
insb
mov
jmp
inc
xchg
cmp
ds
inc
lahf
inc
shll
cmp
or
ljmp
and
xchg
movsb
ja
add
out
mov
mov
ret
cwtl
cs
cmp
addl
add
mov
lods
hlt
sbb
sbb
mov
mov
xchg
inc
insb
movsl
pop
sbb
adc
push
stos
mov
fwait
add
mov
cltd
lds
and
xchg
mov
fisttpl
lods
mov
mov
pop
loop
sub
repnz
ss
fwait
xor
out
int3
sti
fs
dec
jne
fnstsw
inc
mov
enter
push
mov
or
nop
dec
imull
or
scas
insb
pop
sbb
sbb
inc
pop
test
or
data16
mov
or
xchg
inc
rclb
or
pop
bnd
stc
cmc
sbb
jnp
jg
xchg
dec
pop
or
nop
mov
mov
js
imul
js
cld
jmp
pop
pop
mov
pop
or
jg
and
mov
icebp
jo
iret
scas
sti
mov
dec
add
add
dec
pop
sti
or
mov
dec
xor
xchg
aaa
loop
push
lock
cmp
insl
push
cmpsb
lods
stos
adc
add
inc
fstpt
mov
add
sub
out
stc
cs
into
lods
js
add
push
ljmp
xchg
pop
push
ja
inc
fstpl
xor
sahf
mov
loopne
stos
mov
sahf
mov
stc
mov
imul
shll
lret
cmc
adc
or
movsb
mov
lods
mov
xchg
mov
mov
xchg
xor
mov
loopne
test
int
jp
repz
xor
fwait
inc
lods
imul
and
mov
push
pushf
decl
mov
push
iret
jge
sbb
push
pop
stos
in
mov
cmp
cltd
movaps
in
inc
rorb
jg
push
mov
dec
inc
lods
ficoms
cmpsb
lods
jb
mov
inc
sbb
loopne
cmp
fdivr
mov
mov
jl
lcall
nop
sub
ljmp
pushf
out
lods
or
jl
in
cmp
or
fwait
jl
sbb
xor
js
fisubl
je
cltd
shrb
popf
mov
sbb
add
insl
jne
mov
or
adc
fwait
cmp
inc
sbb
js
std
fsub
push
iret
stos
pop
faddp
lcall
push
sbb
sub
shll
aam
loope
cli
xchg
jl
pop
adc
pop
bound
lds
fidivrl
aad
loop
dec
mov
dec
and
sub
inc
negl
cli
lods
es
ljmp
cmp
cli
scas
scas
inc
dec
jne
in
dec
sub
mov
shll
mov
mov
push
mov
add
test
dec
jge
mov
sbb
popa
in
insl
rcr
add
push
jg
rcl
popf
and
jp
inc
out
int
adc
sbb
nop
enter
inc
and
sbb
imulb
add
popa
xchg
xlat
or
xchg
jle
mov
xchg
scas
mov
sub
mov
scas
adc
lds
jge
bound
cltd
les
and
and
cltd
push
sub
adc
fsubrl
sarl
enter
or
mov
and
mov
test
cltd
dec
mov
add
test
push
sbb
inc
mov
mov
mov
pop
ss
or
mov
pop
test
pop
xor
jecxz
das
xchg
std
jp
out
add
es
or
enter
mov
sub
inc
lahf
das
add
cld
in
addr16
std
xchg
fmuls
xchg
xlat
or
repnz
push
lret
jp
cwtl
fs
mov
out
in
pop
sbb
stos
fisubrs
idivl
pop
in
adc
and
lret
or
adc
ficoms
andl
push
scas
push
mov
imul
and
adc
add
popf
or
mov
bound
scas
jle
loopne
out
shll
dec
sahf
scas
jl
ja
xor
test
dec
add
dec
jecxz
pop
popa
and
mov
inc
adc
xchg
xchg
sub
sahf
jmp
loope
dec
add
std
push
sub
jno
arpl
int
sub
xor
adc
xchg
lods
fisttpl
int3
jae
ja
repnz
jl
mov
mov
gs
adc
aad
mov
xor
stos
out
adc
aad
xchg
xchg
outsl
fstpt
pop
lcall
loopne
icebp
shlb
add
cld
pusha
movsb
add
fs
mov
mov
inc
push
xor
ret
int
inc
xchg
adc
mov
mov
xchg
sti
inc
lds
aad
ja
aas
inc
dec
add
arpl
adc
adc
jge
mov
mov
pop
adc
test
jns
xchg
jno
into
repz
jg
push
es
pop
adc
dec
xchg
mov
movsl
xchg
pop
js
add
mov
dec
xor
test
dec
jo
aam
in
pop
cmpsb
out
pop
pop
jbe
insb
enter
mov
add
out
xchg
cmp
clc
xchg
xor
insl
or
cmc
movsb
stos
leave
xor
sbbb
dec
mov
cmpsl
adc
clc
dec
hlt
subb
mov
cmpsb
jns
inc
mov
jb
jne
mov
sbb
idivb
stc
cmp
ret
jns
pop
xor
mov
cld
xlat
fistps
pushf
sbb
push
push
dec
outsl
cld
mov
or
dec
in
bound
and
test
call
nop
imul
add
ret
pop
pop
xchg
add
scas
imul
or
pop
push
mov
fsubrl
leave
ja
dec
mov
sub
mov
and
pop
pop
mov
mov
mov
dec
inc
cmpsl
and
movsb
ljmp
cmp
add
add
dec
adc
mov
popf
gs
pop
nopl
outsb
pop
xor
out
sub
sbb
es
clc
cmp
or
pop
sarb
scas
add
push
pop
inc
popf
sub
pop
cmp
out
sub
push
dec
sahf
inc
rcrl
movsb
and
push
sbbl
push
cld
xor
stos
outsb
push
jne
js
and
in
dec
data16
sbb
arpl
push
popf
loop
cmp
dec
rolb
cmp
jmp
xchg
push
ret
sub
push
dec
cmpsb
or
das
ret
push
cmp
jno
popa
xchg
fadd
aad
mull
pop
roll
insl
adc
insb
rolb
sti
jmp
in
cmp
fcoms
xchg
add
add
inc
inc
sti
or
cmpsw
es
inc
push
pop
outsb
and
pushf
test
ds
sbb
outsb
add
dec
adc
repz
sbbl
cli
adc
pop
xor
call
fcompl
add
cmp
push
inc
inc
add
xor
xchg
es
mov
cmp
mov
pop
sub
pop
test
mov
mov
or
mov
nop/reserved
movsb
push
loope
dec
hlt
in
fbld
jbe
cmpsb
leave
imul
data16
cmp
sbb
test
insl
lods
cmp
inc
testl
cmp
cmpsb
inc
sbb
lret
add
mov
adc
ret
cmovp
int
iret
gs
xchg
bound
push
mov
enter
fcoms
jecxz
loope
sbb
das
cs
fldt
lea
push
xchg
jne
outsb
icebp
idivb
les
call
pop
jno
adcb
push
mov
mov
push
push
push
mov
outsl
mov
jae
fs
pop
xchg
jno
inc
call
lahf
xor
iret
xor
and
dec
ficoml
mov
movsl
xlat
stc
lcall
int
inc
rcl
xchg
cmpsb
adc
iret
dec
testb
ljmp
les
pusha
push
jp
push
leave
lret
popa
or
push
or
mov
movups
mov
outsl
jmp
adc
pusha
sbb
cmp
push
scas
mov
jmp
enter
movsb
stos
or
mov
addr16
sub
pop
xchg
mov
or
fisubrs
lcall
inc
loop
xchg
lds
push
pop
mov
fsubl
push
shlb
clc
adc
push
pop
rcrb
push
xor
cmpl
insl
repz
lcall
loopne,pt
in
mov
adc
cmpsl
in
in
add
push
ja
inc
mov
cmpsl
fisttps
in
subl
out
mov
mov
call
scas
lret
pusha
jl
push
cld
adc
andl
out
mov
or
xor
jge
adc
sub
xchg
dec
data16
pop
dec
cmp
kunpckwd
jne
ds
fstps
cmp
inc
loope
es
add
cwtl
pop
lds
mov
mov
adc
lods
jge
dec
pop
mov
in
and
subl
jns
sbb
jle
push
add
inc
psrlq
loopne
add
cwtl
sub
push
mov
lahf
xor
or
push
jecxz
jns
imul
mov
daa
jo
mov
and
sub
push
insl
lret
cmpsb
push
mov
dec
aas
xorb
jecxz
fs
gs
cmc
mov
add
aam
xor
jl
lcall
js
sub
popf
arpl
js
lock
or
adc
es
rcll
pop
out
jae
mov
mov
jnp
xor
insl
and
sbb
js
stos
stc
push
mov
jns
iret
cs
inc
mov
in
jbe
mov
cmpsb
ret
sub
out
jp
and
pop
push
or
cs
pusha
sahf
dec
orl
mov
mov
loop
pop
dec
js
fnstenv
sarl
and
sbb
sub
jb
divb
fnstenv
and
iret
mov
inc
mov
icebp
pop
bound
enter
lahf
je
mov
adc
fldcw
outsb
je
xor
sbb
lahf
aas
dec
pop
cltd
lcall
xchg
and
hlt
insl
int3
jge
sbb
push
dec
lods
cmpsb
dec
pop
imul
pop
xchg
gs
subb
and
dec
lods
cld
sbb
fistpl
mov
rol
out
or
xor
mov
or
aam
outsl
adc
inc
pop
shlb
pushf
jl
and
insl
rcrl
addr16
cmpsb
inc
and
inc
mov
ss
sahf
test
or
pop
add
sti
repz
mov
add
jge
aam
out
pop
xchg
arpl
mov
popl
sub
out
int
mov
popa
sbb
fdivs
cmp
js
mov
fwait
test
mov
ja
fistpl
shr
pop
shrb
xchg
dec
mov
mov
popa
scas
inc
cmc
outsl
jno
jl
push
out
lock
shrl
ds
dec
mov
dec
repz
movsl
dec
fsubl
jmp
dec
or
test
outsb
pop
cmp
insb
mov
outsb
movl
mov
xchg
imul
ljmp
or
sub
repz
push
in
xchg
push
enter
push
or
adc
cmp
stos
leave
jp
lret
sahf
les
roll
sub
in
sub
nop
std
enter
adc
mov
aam
or
lahf
dec
xor
mov
jae
int
and
out
ds
out
jg
pop
inc
push
ljmp
fnstenv
mov
mov
adc
outsb
pusha
cmp
insl
mov
jnp
pushf
js
cs
ss
mov
fisttps
and
push
imul
jnp
sub
xor
notb
movsl
leave
mov
sahf
xchg
dec
lret
es
mov
fsubrs
jmp
jl
out
mov
cmc
or
loop
and
xchg
das
push
jge
mov
xchg
repnz
and
shll
in
pushf
ljmp
cld
mov
insl
push
fadd
xor
mov
dec
shll
movsb
mov
mov
loopne
xchg
mov
repz
add
gs
mov
jae
mov
push
push
popf
clc
cmpsl
mov
repz
stos
popf
cmpsl
scas
and
fisubrs
imul
cmp
add
and
push
dec
loop
pop
ret
dec
pop
jb,pn
or
cmpl
stc
pop
xor
loope
mov
push
mov
fcomp
ljmp
inc
push
xchg
lock
fadds
pop
or
pop
add
cltd
iret
sub
push
call
mov
sti
and
xchg
rcll
scas
dec
inc
insl
mov
jge
mov
jge
push
or
pop
push
imul
and
stc
pop
imul
test
loop
inc
jp
test
enter
push
fbld
cpuid
aas
mov
sti
out
mov
into
test
stos
add
inc
xchg
add
and
lea
dec
adc
aaa
dec
pop
stc
movsl
ja
push
in
lds
scas
ret
stos
cltd
insb
lods
divl
cmp
xchg
xchg
enter
jae
es
sbb
push
cld
sbb
push
push
bound
in
or
aas
les
xchg
loopne
lret
sub
mov
and
push
stc
cmp
stos
jmp
fcoms
shl
mov
pop
xor
adcl
ret
stos
sub
mull
inc
sti
test
xchg
mov
loope
and
aam
into
push
lock
sbb
add
sub
lock
add
add
mov
stc
dec
fs
jno
mov
sbb
sub
rcl
add
pushl
fisttpl
inc
sbb
call
andl
call
adc
and
jb
cli
and
push
mov
rorl
or
mov
mov
js
jg
mov
rclb
sarl
mov
in
aas
int
mov
enter
addr16
je
sub
loope
loope
dec
nop
scas
or
iret
fwait
jle
xchg
push
hlt
mov
mov
push
add
imul
out
mov
inc
sub
popa
ja
test
sub
dec
aam
xchg
push
sbb
out
sub
mov
test
jae
mov
outsl
stos
push
pop
mov
xlat
xor
xchg
fstpt
adc
test
insb
inc
out
lods
and
ja
jbe
ljmp
andb
pop
xor
filds
popf
sbb
push
pop
adc
lock
negb
add
jecxz
xor
pop
dec
cmp
testl
sbb
clc
ljmp
pop
dec
int3
sti
push
or
mov
sbb
out
ja
inc
and
dec
scas
and
lret
lret
jns
xor
push
in
jns
add
std
xchg
pop
jmp
sbb
test
and
sub
and
mov
dec
xlat
mov
dec
repz
test
jno
fnstcw
push
xor
stos
mov
sarl
xor
popf
xor
and
fimull
dec
pushf
jae
xchg
fs
test
mov
pminsw
cmp
subl
popa
lea
dec
lcall
add
xchg
or
sub
std
jnp
stos
sub
inc
andb
or
cs
lds
test
pop
movsb
cmp
mov
sbb
fdivrs
xchg
in
adc
sti
mov
jg
jle
roll
push
bound
mov
mov
cmc
jge
sahf
push
and
push
icebp
push
aam
in
shll
out
dec
icebp
mov
test
sub
mov
addr16
aas
mov
es
pop
hlt
sub
leave
cld
imul
bound
sarb
jle
xchg
std
pop
popa
xor
add
pushf
outsb
int
pop
pop
into
xchg
and
mov
imul
nop
insl
push
test
sub
insl
push
adc
cmpsb
mov
jp
pusha
lock
dec
rorl
cs
xorb
xchg
call
movsl
mov
into
pop
pop
scas
xor
cli
mov
pop
sub
cmp
dec
andl
adc
ja
push
add
std
pop
pop
xchg
ret
pushf
jge
push
or
movsb
xchg
add
sbb
xor
fs
mov
repz
mov
xchg
and
ljmp
mov
fidivrl
dec
and
push
out
stc
or
in
mov
pop
cltd
xor
dec
gs
cs
pop
notb
add
arpl
in
aam
mov
repnz
stos
add
mov
and
outsb
inc
idivb
es
mov
add
pop
mov
cltd
adc
out
fwait
mov
cli
outsl
pop
pand
jb
pop
cmp
inc
mov
jno
jl
adc
cmpsb
or
mov
dec
hlt
pop
cs
pop
hlt
xchg
inc
hlt
lret
ret
inc
test
push
jo
je
nop
sbb
pop
mov
fists
out
loope
cli
mov
out
cltd
push
add
daa
dec
shll
fwait
lods
cwtl
mov
stos
jae
sub
cmp
int3
mov
add
movsl
cmc
aad
xchg
xchg
jo
mov
testb
stos
jge
call
and
cli
and
movsl
cmp
pop
mov
in
sahf
mov
divb
insl
dec
push
stos
pop
mov
ja
test
std
jmp
sbb
mov
cs
inc
nop
pop
aaa
loope
cmpsb
sub
outsl
or
xchg
xor
mov
cmpsl
xchg
cmp
adc
pop
aaa
push
decl
or
in
decl
in
out
jno
shrb
push
add
cmpsb
mov
push
adc
outsl
stos
cmp
push
add
imul
xor
mov
adcb
sbb
fucom
mov
dec
in
lods
stos
ljmp
call
xor
xchg
scas
xchg
pop
rcrl
mov
ljmp
mov
add
mov
jl
mov
and
push
xchg
xor
add
stos
ror
sarb
or
call
mov
shl
int3
push
enter
cmp
mov
popa
mov
sub
dec
sbb
xchg
adc
mov
jbe
fwait
or
subb
daa
int
shlb
xor
pop
sbb
rcrb
jbe
xor
cmpsl
and
xor
dec
aas
mov
hlt
lea
xor
cmp
roll
sbb
mov
pop
mov
cli
jbe
jge
mov
lea
into
mov
insl
cmp
jl
xchg
push
xlat
std
outsl
mov
ret
out
sahf
sahf
outsb
fdivrs
jns
pusha
adc
mov
imul
mov
fstpl
push
je
iret
cmp
aas
mov
test
int
pop
jae
sub
add
aam
repnz
ret
mov
mov
sub
shlb
test
int
cli
push
std
lea
push
jae
push
mov
pushf
and
daa
repnz
sub
cmp
ljmp
inc
sub
xor
sbb
ret
cmpsl
sub
lret
scas
cmp
inc
mov
mov
hlt
ret
adc
pop
jnp
add
aam
add
jnp
and
cli
daa
pop
movsl
lret
add
dec
mov
std
and
mov
imul
je
xorb
sbb
push
xchg
push
xor
or
mov
fld
jo
repz
or
test
insb
mov
ja
sub
cmp
pop
dec
dec
pop
sub
gs
mov
les
inc
sbb
xlat
scas
scas
pop
or
cwtl
nop
jo
push
rcll
cmp
pop
sarl
scas
cmp
push
insl
push
mov
ds
ror
adc
pop
xor
data16
mov
sysret
inc
out
insl
and
mov
adc
das
xchg
cmpsb
stos
mov
pusha
cmc
add
orb
sub
push
stos
add
inc
ja
jbe
outsb
xor
pop
jp
fcomip
pop
les
and
lcall
pushf
jbe
sbbb
xchg
jle
adc
adc
mov
movntps
dec
dec
sti
xchg
movl
xor
out
imul
imul
xchg
movsl
fdivp
shlb
shrl
movsl
inc
mov
mov
inc
das
aaa
add
pop
sti
push
mov
add
mov
or
icebp
xchg
adc
pusha
cmpb
mov
cmp
jmp
lahf
xor
fucomi
stc
aad
or
xrelease
cmp
ljmp
stc
xchg
sub
pop
ja
sti
arpl
cmp
loope
ljmp
les
insb
shrl
iret
insl
jecxz
add
jmp
mov
out
scas
call
shll
andl
mov
xor
or
lock
mov
push
unpcklps
and
pop
jns
sahf
loop
xor
ljmp
fdivrp
mov
mov
scas
dec
inc
add
hlt
inc
gs
adc
cmp
repnz
mov
inc
out
jnp
test
push
arpl
fldenv
pop
test
push
mov
addr16
ds
cmc
xchg
push
cwtl
mov
fdivr
mov
test
mov
xlat
lahf
jmp
xchg
or
mov
filds
enter
dec
imul
push
fsub
pop
in
push
fimuls
cmc
iret
idivl
lret
adc
mov
and
stos
xor
int
in
push
lret
sub
adc
push
xchg
in
lea
loop
ds
mov
push
inc
int3
pop
fcoms
stos
outsb
adcb
imull
shlb
dec
loopne
cli
cmp
xchg
and
xor
mov
adc
xchg
ss
xor
js
sbb
add
cmp
jl
push
in
xlat
dec
cmp
rcr
in
push
rol
xor
sbb
fldenv
and
jb
sbb
popf
inc
test
dec
inc
xchg
movsb
sbb
test
sbb
sbb
dec
sbbl
pop
mov
and
fucomi
dec
out
rcr
mov
aam
lcall
movsl
add
insb
or
mov
push
inc
shll
push
aaa
add
mov
lret
xor
fidivrl
gs
pop
or
mov
sbb
fiaddl
dec
loop
sub
aam
and
fwait
imul
cmp
mul
imul
sub
mov
out
sbb
jp
xor
pop
add
xchg
enter
test
inc
pop
jp
add
ficoms
xchg
push
push
out
lea
adc
xor
adc
filds
in
arpl
repz
or
ret
xchg
stos
data16
sub
and
push
popa
pop
mov
jno
mov
push
push
cmp
sbb
push
stos
negb
loopne
leave
test
xchg
imul
and
aam
je
les
sbb
pop
notl
leave
sub
imul
xor
fidivl
lret
mov
jns
jmp
iret
sbb
rcll
jl
or
rcrb
mov
xor
je
inc
addb
dec
xchg
jg
push
sbb
sub
sub
ljmp
and
movsl
xlat
jl
mov
jp
fwait
bnd
fs
cltd
cwtl
pop
inc
shll
adc
jg
inc
stos
xchg
mov
xchg
xchg
inc
ds
add
lahf
in
dec
sbb
ljmp
dec
dec
ficoml
or
daa
test
inc
call
fimuls
sbb
lea
jp
aad
outsl
in
jp
mov
cwtl
adc
cld
or
divl
out
cli
cmp
mov
sarb
rolb
mov
jno
mov
movups
and
arpl
cwtl
stc
cmp
pop
enter
iret
sbb
sbbl
pop
in
xchg
add
ljmp
mov
or
sbb
je
or
xchg
mov
sub
add
int
stc
dec
negl
pop
xor
add
mov
ja
loop
cmpsl
push
mov
push
push
gs
cmc
out
int
or
pop
pop
add
lret
movsl
adc
dec
mov
inc
and
adc
in
js
xor
pusha
dec
jle
andl
push
pusha
push
mov
fsubr
aaa
mov
negl
fisttpll
fldl
and
and
and
pushf
addr16
jo
fcmovu
ret
mov
fld
lock
inc
aad
inc
adc
test
push
fisubrs
leave
mov
xchg
sahf
jle
mov
jnp
ret
addr16
jp
push
jae
test
jnp
aad
dec
int
aas
mov
cwtl
xlat
gs
sbb
jne
adc
sti
clc
push
ja
mov
and
jge
xchg
into
push
push
les
inc
mov
lret
in
sub
pop
ja
add
jecxz
sar
inc
cmp
sbb
dec
xor
cli
fwait
cmp
sbb
lahf
dec
pop
push
aam
push
jne
adc
ljmp
int
sarl
add
jno
mov
pop
shrb
insb
or
pop
ret
mull
push
movsl
mov
sub
orb
lods
mov
insl
sub
clc
add
movsl
jmp
pop
fists
in
sbb
fildll
mov
andl
imul
sub
pop
std
hlt
push
fstpt
cltd
dec
and
call
mov
test
sarl
jecxz
adc
xchg
cmpsl
fsubs
sar
test
push
jmp
arpl
pop
xchg
inc
test
ret
xor
mov
sbb
in
jl
test
es
jae
bound
and
cmp
in
divb
cs
jne
inc
mov
pop
dec
stc
daa
inc
inc
jae
mov
mov
cld
fidivl
mov
lcall
sbbl
mov
fmull
sti
dec
fwait
jnp
je
xor
sub
pop
popa
fmulp
cld
fdivr
ficompl
sub
sub
pop
add
jo
out
dec
data16
loopne
adc
jmp
sbb
nop
lret
mov
ror
jo
adc
filds
repz
lret
add
adc
sbbl
cwtl
jnp
gs
mov
sbbl
movl
insb
mov
jle
mov
lret
orl
stos
aaa
mov
out
and
inc
ja
mov
mov
movsl
cmp
roll
xchg
loopnew
aam
int
add
xchg
add
pop
jno,pn
dec
or
arpl
xchg
xchg
xor
int
out
shll
loopne
rcrl
inc
fidivl
scas
add
aam
mov
stc
ret
cmp
in
lds
mov
xchg
je
sbb
pusha
into
jl
punpckhbw
sbbb
dec
fwait
mov
pop
or
push
ja
lahf
ds
insl
movsb
xchg
clc
xchg
scas
scas
push
mov
addr16
jecxz
test
mov
jno
and
mov
inc
test
je
insb
lahf
jae
xchg
or
dec
cld
push
xlat
dec
push
pop
sbbb
mov
loop
or
mov
pushl
popa
das
mov
and
ret
scas
lods
adc
shl
xchg
dec
lret
aas
add
pop
push
sbb
mov
xchg
loopne
movsb
mov
mov
inc
push
jle
pop
inc
imul
out
inc
and
lea
fbld
adc
in
adc
mov
pop
and
imul
cmpsl
and
jp
jno
or
jl
jl
arpl
das
shll
scas
arpl
daa
movb
mov
out
push
mov
aam
stos
push
inc
mov
imulb
xor
mov
adc
or
jne
scas
push
xchg
orb
add
cmpsl
sbb
inc
pop
sbb
xchg
aam
push
pushf
xchg
hlt
out
test
sbb
xchg
and
jle
cmpsb
icebp
cmp
adc
lods
shrb
inc
popa
pop
les
cli
das
pop
iret
jp
cmp
xor
cmc
or
jae
sbb
cmp
cmp
int
mov
xor
test
lahf
int3
inc
loopne
sbb
popf
xchg
sarl
rcrb
inc
add
jne
test
mov
jo
data16
jle
xchg
rcrl
dec
xor
rolb
add
dec
aas
loopne
push
add
sbb
jle
cmp
adc
sub
pop
mov
call
cmp
xchg
mov
test
xlat
hlt
add
xchg
cmpsb
pop
cmp
and
mov
setge
mov
push
inc
dec
cmpsl
push
in
cmp
in
insb
dec
das
fldl2e
mov
add
adc
scas
jbe
xchg
addr16
cld
push
push
ja
sti
je
push
pop
push
repz
outsb
fcoms
cmp
cmp
fdivrp
mov
es
or
inc
and
push
scas
dec
loop
mov
pop
sbb
mov
aas
icebp
pusha
fucomp
popa
jecxz
add
and
sbb
mov
insl
sub
hlt
in
shl
je
in
insl
inc
and
sbb
mov
jp
xorl
cmp
and
call
lcall
adc
add
mov
sbb
dec
arpl
push
popa
add
mov
pop
shlb
and
fwait
enter
dec
and
aas
fnstsw
adc
jmp
add
jo
loop
mov
inc
fidivs
mov
insl
aad
cld
dec
mov
loop
or
popa
and
mov
pop
inc
fimull
test
mov
dec
sti
add
push
iret
add
pop
xchg
sbbl
leave
pop
insl
push
lea
insb
dec
cmp
test
push
adc
xchg
xchg
jle
xor
popf
in
imul
xchg
mov
push
xlat
pop
in
cmpsb
icebp
fwait
hlt
shr
pusha
push
inc
jne
mov
mov
mov
sbb
scas
mov
ret
lock
ds
movsl
les
pop
rorl
sbbl
lahf
lods
iret
xor
hlt
and
icebp
cmpsb
jbe
xchg
inc
aas
lock
jp
push
std
push
ljmp
jmp
push
popf
xchg
test
jecxz,pt
mov
xchg
lds
daa
mov
stos
cli
in
sbb
cmp
scas
das
imul
loopnew
into
sub
outsl
test
add
sbb
jno
mov
xlat
in
pop
orb
push
icebp
sbb
cli
or
push
fs
ss
add
pop
out
ss
dec
in
and
adc
push
mov
pop
test
stos
setne
dec
mov
mov
lds
popf
loope
mov
dec
scas
imul
ja
jno
enter
xor
pop
out
fstl
outsl
dec
enter
pushf
sub
sbb
xchg
out
add
les
stos
sub
or
mov
mov
fcmovnb
xchg
dec
sub
hlt
fidivl
sbb
loop
ja
bound
jmp
iret
inc
adcb
mov
bound
mov
lret
cwtl
cmpsb
mov
int
push
xor
sbb
clc
jecxz
jge
das
or
cli
jno
xchg
mov
xchg
dec
dec
std
test
loop
das
mov
mov
das
xchg
jns
in
cmp
inc
lods
in
mov
daa
dec
mov
lret
xchg
dec
mov
adc
cmpsb
mov
cltd
inc
fwait
xchg
dec
dec
ss
jns
aaa
mov
in
inc
lods
jo
sbb
sbb
mov
xchg
mov
int3
and
scas
pop
and
and
dec
out
or
test
cmp
js
xchg
roll
jmp
dec
in
xor
lock
fndisi(8087
jg
in
mov
enter
mov
sahf
mov
adc
in
fimull
or
insb
ss
shlb
mov
jle
or
cmp
cmp
ds
outsl
add
fldl
dec
insl
fsubl
push
iret
xchg
sbb
adcb
xor
or
xchg
sti
idiv
ficoms
mov
xor
push
testl
add
stos
ret
test
loop
ds
mov
xchg
mov
stos
sti
loopne
xor
lock
dec
ja
dec
xor
lret
loop
ret
xchg
ret
gs
pop
stc
inc
notl
add
mov
cmpsb
pushf
cwtl
or
arpl
idivb
sub
in
fucom
pop
push
fldlg2
in
sbb
test
jmp
cmp
ljmp
in
inc
xor
jmp
and
rorb
jle
and
shll
test
cmp
mull
push
sbb
into
push
dec
add
aad
sub
xor
and
pop
mov
test
cmpsl
inc
pop
mov
leave
aad
dec
pushf
lock
lock
mov
adc
adcb
lea
sub
dec
sbb
fwait
pop
adc
jp
hlt
xchg
dec
aaa
push
or
loope
dec
enter
push
xor
dec
js
stc
in
push
push
mov
sbb
hlt
mov
lcall
cld
jae
jne
dec
xorb
cmp
sub
stos
and
scas
mov
lahf
inc
loop
roll
fcomps
pop
shl
lahf
and
mov
sbb
push
xchg
cmp
and
xor
and
mov
push
xor
lret
push
mov
sbb
mov
int3
dec
cmp
pusha
and
mov
pop
lret
push
adc
pop
ss
cmc
popf
add
fwait
rcr
mov
ja
and
lods
addl
imul
scas
cmp
xor
fdivp
and
push
adc
aam
ret
jo
out
ss
xchg
out
nopl
out
bound
test
and
fisttps
lahf
xor
mov
sub
xchg
cmpsb
inc
mov
jl
icebp
jle
popa
push
mov
add
incl
push
pop
outsb
jg
dec
shll
and
sub
bound
push
sahf
lods
into
dec
mov
mov
in
inc
popa
pop
jbe
mov
je
push
in
mov
jg
pop
test
clc
cmpl
sti
popf
out
mov
imul
std
jbe
mov
or
mov
test
nop
test
inc
les
pop
fisubs
es
inc
and
shlb
cwtl
adc
movl
push
fadds
mov
pusha
xchg
dec
jnp
aam
punpcklbw
das
dec
add
pop
cld
mov
test
int
sbb
out
sub
test
outsb
leave
push
icebp
iret
xor
addr16
adc
es
mov
pop
inc
bound
rorb
sbb
rol
inc
xlat
ja
fwait
jg
cmp
mov
rcll
test
sub
inc
inc
xor
inc
or
es
dec
in
xlat
das
push
xchg
lods
inc
ret
test
mov
mov
aas
arpl
pop
pop
in
aas
jnp
and
mov
inc
clc
mov
movsb
adc
cmp
mov
popf
popf
mov
test
xor
lods
sbb
popf
push
mov
push
loop
ret
xchg
out
mov
jne
scas
cwtl
popf
mov
jl
xchg
mov
dec
xchg
aaa
in
pop
pop
cmpsl
mov
lock
push
lea
ja
inc
jne
mov
dec
push
pop
sbb
or
push
mul
adc
aam
or
cmpsb
ss
into
pop
sar
mov
popa
fwait
xor
cmpsb
cmpsb
mov
loopne
xlat
adc
push
mov
add
scas
rcrb
or
repnz
xchg
sub
jmp
out
out
stos
cmp
dec
xor
cmpsb
int3
add
es
mov
jle
sub
xchg
mov
xor
pop
push
pushf
or
pop
pop
push
movsl
mov
stos
pop
cmp
lock
jle
pop
int3
rol
in
jle
inc
pop
inc
sbb
pop
push
dec
mov
aaa
rcll
mov
mov
jns
hlt
jns
jb
dec
pop
push
jbe
nop
push
mov
imul
jno
out
mov
mov
sbb
cmp
push
lret
inc
inc
fldt
jle
mov
push
fwait
jmp
repz
mov
int
inc
add
dec
arpl
arpl
dec
and
or
adc
sbb
pop
ljmp
and
std
mov
in
jae
or
mov
inc
xchg
push
fildl
xchg
mov
sub
movsb
push
push
sub
dec
bound
aam
pop
adc
sub
sbb
int
movsb
mov
and
inc
adc
ss
ficompl
pop
clc
cld
pop
loop
scas
clc
iret
stc
out
adc
dec
push
adc
mov
bound
cwtl
aas
shlb
inc
mov
adc
stos
rorb
and
add
insb
and
push
rcr
dec
in
or
xor
add
aaa
dec
jbe
jle
scas
cmp
add
mov
jg
mov
shlb
in
jne
or
mov
jo
insb
or
les
or
jo
xor
adc
aas
test
lock
hlt
sbb
loopne
xlat
arpl
mov
xchg
mov
dec
mov
mov
loop
sub
cmp
xlat
sahf
rcl
dec
mov
push
imul
add
out
mov
adc
mov
sub
jp
leave
repnz
inc
mov
pop
mov
jmp
mov
jnp
xor
pop
rcrl
sub
jmp
push
insb
lock
adc
sahf
sbb
lret
ja
insl
mov
ljmp
mov
sub
dec
push
dec
shr
mov
mov
jb
js
mov
mov
adc
xlat
xchg
enter
jnp
popf
dec
dec
jecxz
leave
push
mul
dec
lods
ficompl
leave
inc
inc
clc
shll
sbb
or
lds
cs
dec
out
int
ret
or
movsl
arpl
adc
sti
divb
int3
in
mov
adc
fwait
cmp
loopne
insl
adc
int3
in
and
mov
jo
cwtl
or
inc
adc
clc
movl
mov
int3
ret
xchg
lock
std
call
push
mov
inc
lods
pusha
mov
sti
cmp
add
lret
in
into
push
adc
or
dec
mov
rcll
sbb
cmpsb
inc
xchg
js
pushf
pop
stc
aad
and
in
je
xor
lret
clc
sbb
mov
movsl
test
sub
insb
xchg
lods
fistl
shr
mov
dec
in
sub
dec
icebp
xor
test
push
pushw
test
and
push
sub
andb
pusha
adc
xor
ja
popa
ret
dec
lret
xchg
push
out
cmc
sbb
lods
aad
lock
jecxz
stos
add
adc
mov
icebp
pop
or
loope
xchg
and
mov
psubsb
jmp
jecxz
sbb
cmpsb
daa
mov
popa
sbbl
ljmp
inc
nop
lahf
sarl
push
mov
mov
sbb
mov
sub
aaa
add
push
test
idiv
cmp
clc
inc
sarl
sub
addr16
cmp
popa
jmp
mov
rorb
mov
mov
movb
ja
jne
mov
idivl
adc
out
adc
insl
lock
dec
adc
clc
int3
nop
mov
push
mov
jg
scas
mov
inc
push
push
pop
or
push
mov
xor
int
ror
fxch
gs
sbb
pop
push
je
dec
test
xchg
mov
pop
mov
or
ret
add
rcll
adc
arpl
mov
mov
stos
sub
and
dec
je
rcrl
dec
mov
push
adc
mov
faddl
and
or
lret
pusha
adc
inc
xor
in
xchg
fdivrl
dec
dec
popf
jl
and
in
pusha
and
pop
stos
dec
ja
test
inc
cmp
cltd
lods
or
aam
mov
out
popa
and
and
add
out
cmp
add
sub
mov
pop
xchg
sub
scas
aas
cmc
xor
movsb
imul
imull
orb
inc
setae
push
test
mov
xchg
inc
xor
adc
sti
imul
adcl
sub
cmp
mov
pop
jae
jge
push
pop
pop
dec
sub
add
mov
xchg
movsl
cli
rol
and
adc
daa
sub
mov
or
fnstcw
jne
mov
mov
xchg
lcall
inc
mov
adc
inc
ds
add
fs
stos
sub
cwtl
and
mov
and
adc
mov
fcoms
cld
and
cmp
sub
push
xor
jae
jge
pop
mov
pop
inc
js
dec
popa
test
jg
je
in
ret
jle
push
jbe
mov
aas
or
subl
into
into
sub
adc
jl
movsb
push
cwtl
shrb
mov
decl
xor
lret
in
mov
in
aad
sbb
inc
popa
pop
xchg
jp
sub
pushf
pop
mov
fistpl
add
sub
hlt
mov
test
push
inc
mov
inc
dec
adc
mov
mov
stos
lods
mov
jno
cmp
out
jg
pushf
push
negl
nop
mov
inc
bound
cmp
mov
cwtl
sub
mov
inc
dec
mov
jo
push
sub
fwait
mov
adc
sbb
addr16
ja
jmp
xor
lea
rorl
fmull
push
inc
mov
cmc
push
adc
iret
loop
mov
xor
jg
cwtl
lods
mov
cmpsl
inc
in
sbb
and
xlat
ss
adc
push
mov
daa
stc
push
xor
mov
mov
sub
outsb
lcall
test
inc
enter
and
inc
lods
jb
repnz
mov
jmp
fsts
jmp
inc
mov
ds
sbb
cmp
pop
inc
and
cmp
fmuls
sub
hlt
sbb
out
jno
pop
imul
movsl
les
idiv
dec
sbb
sbb
ret
mov
data16
xchg
dec
sbbb
lods
adc
sbb
mov
cld
in
pop
shrb
lods
loope
and
sub
adc
lahf
data16
mov
adc
js
test
mov
push
lret
and
sahf
lds
pusha
orb
aad
sahf
and
shll
test
push
movsl
in
xchg
sbb
subl
or
pop
fwait
rcrb
cmpb
xchg
in
aam
fstpt
ret
fnstsw
dec
movb
es
out
add
mov
stos
sub
sub
shrl
inc
fcom
adc
adc
mov
xor
adc
jno
jmp
inc
dec
les
add
mov
sbb
ja
bnd
cmpsl
sub
adc
outsl
icebp
pop
push
in
push
xchg
les
leave
xor
or
mov
gs
out
lret
in
test
inc
pop
xchg
xchg
cltd
lock
pop
adc
int3
cwtl
inc
mov
jno
dec
xor
sub
adc
dec
orb
and
popf
aaa
sbb
js
stos
lahf
add
xchg
andl
shl
nop
ds
jo
jbe
loope
sub
lock
lods
sti
dec
sahf
and
ret
fdivrl
jns
cmp
push
cwtl
dec
test
xchg
lcall
stc
and
mov
mov
push
dec
int3
cmp
je
hlt
pop
add
push
lock
pop
xchg
xchg
aad
push
sub
popa
and
sahf
icebp
push
daa
ja
divl
mov
xor
xchg
jno
mov
adc
fmuls
sbb
adc
mov
imul
out
fbstp
data16
pop
test
stc
outsl
ret
pushf
inc
add
mov
fldenv
ss
cmp
adc
mov
insb
enter
jge
push
js
add
jecxz
int3
sarb
daa
push
dec
xchg
mov
mov
inc
scas
addb
push
stos
sbbb
mov
dec
popa
push
sbb
faddl
movsl
sub
out
loope
add
popf
and
loop
cld
addb
icebp
dec
stos
add
test
cltd
das
fbld
xchg
sub
mov
xchg
add
push
test
scas
pop
push
inc
std
jno
int3
std
mov
mov
cmp
mov
or
pushf
sub
mov
pop
fsubrs
cmpsb
push
movsl
test
cwtl
iret
cwtl
inc
pop
cwtl
mov
rcrl
jl
in
mov
sub
mov
aas
rcr
mov
enter
call
mov
inc
sbb
pop
or
sub
mov
mov
fnstsw
jmp
jg
jnp
stos
jle
jb
fstps
dec
scas
repnz
mov
cli
lea
push
movb
add
xchg
aaa
jno
add
cmp
add
xorl
mov
xchg
lret
dec
iret
hlt
and
fistpll
decb
cli
scas
movsb
pop
out
mov
es
adc
adc
sarb
cmp
inc
jl
xchg
movsb
sbb
popa
fwait
mov
inc
clc
push
mov
pop
fnop
xor
xchg
push
mov
outsb
mov
ds
fiadds
loop
push
lods
js
sbb
or
fldt
lret
jecxz
iret
jl
iret
aas
lea
rorl
mov
fsubs
test
cmp
popa
int3
cmpb
jle
xor
fisubrl
sahf
shr
sub
ds
gs
add
lahf
xor
and
fisubs
mov
xor
mov
fstpt
rcrb
fwait
loope
cmp
stos
das
addl
add
js
pushf
xor
dec
mov
std
das
das
idivl
repz
pop
cld
sbb
insb
and
cmp
sub
sub
dec
sbb
xorl
pop
sbb
dec
sub
pop
mov
push
outsb
dec
hlt
cmp
imul
dec
xchg
test
add
mov
stos
gs
scas
cmp
push
sahf
sti
negl
or
xor
cmp
cs
xchg
cmp
mov
add
push
gs
inc
enter
and
mov
cld
repz
xchg
cld
cmc
mov
movsl
mov
mov
cmpsb
repnz
cltd
repz
loope
jbe
out
sub
sub
push
jno
mov
xor
mov
repnz
inc
mov
mov
dec
movsb
imul
push
lods
inc
push
or
pop
filds
mov
sub
push
js
ret
imul
mov
js
insl
shl
mov
inc
iret
jbe
dec
lret
and
xor
rcrb
hlt
mov
dec
sub
mov
sbb
insb
cld
jnp
test
xor
add
xor
or
mov
dec
xor
pop
pop
movsl
sub
xchg
mov
pop
loope
inc
sbb
lods
insb
call
inc
mov
sarb
fwait
popf
adc
insl
fisttps
cld
xlat
ret
leave
cmp
xor
out
lahf
cmp
cmp
jmp
mov
gs
mov
out
cmpl
loopne
mov
jle
inc
jne
pop
ds
lahf
sarb
xchg
adc
outsb
int3
cwtl
xor
lret
and
adc
or
adcl
cmp
jle
xchg
test
ja
xor
shlb
dec
push
jp
sub
and
add
adc
jecxz
cmp
inc
stos
sarb
out
mov
cmp
jnp
xchg
add
add
aam
xor
sbb
call
pop
lcall
adc
orb
call
xchg
rorb
js
in
pop
aaa
inc
xchg
aaa
jp
jne
or
fwait
push
add
repz
xchg
jb
xor
adc
and
mov
in
orl
adc
pop
std
xor
xchg
mov
sbb
xor
out
shlb
pop
je
inc
pop
pop
or
cmpsb
insb
pop
scas
enter
test
add
fistpll
setl
aam
popf
dec
mov
lret
les
test
fisttps
addr16
aad
daa
in
sahf
add
out
dec
or
sbb
mov
mov
sarl
out
aam
stos
cld
add
jae
xchg
stc
aad
push
clc
mov
push
dec
aaa
adc
ret
mov
push
xor
lds
mov
or
repnz
aas
std
jle
lods
dec
jmp
cmc
mov
pop
bound
jae
sub
xchg
mov
iret
xor
movsl
add
and
enter
add
or
stos
pop
out
rorl
lods
daa
jae
cmpsl
sub
ficomps
fadds
adc
mov
sbb
or
mov
mov
icebp
sub
leave
fisubl
mov
and
enter
ja
or
cs
jns
and
add
test
push
in
jmp
std
in
xchg
jb
rcrl
ret
in
xchg
mov
dec
jnp
ja
ret
mov
lock
out
lea
movsl
inc
xchg
push
daa
jb
sti
pop
mov
scas
cmp
mov
sub
jbe
dec
and
xchg
and
das
jl
arpl
sbb
lret
repz
pop
shlb
push
pop
lret
mov
add
inc
rorl
arpl
cmpsl
sbb
sbb
pop
mov
xor
packuswb
inc
out
ds
cmpsb
adc
loop
xorb
add
inc
jecxz
repnz
push
xor
hlt
mov
adc
sbb
das
mov
push
sbb
mov
sub
xchg
add
lea
pop
push
je
push
gs
or
aad
rorl
jge
fadds
sbb
push
jo
mov
mov
add
or
inc
ss
pusha
mov
lahf
fbld
xchg
cmp
not
adc
push
imul
lods
ret
outsl
out
fwait
rcr
lds
stos
sub
lock
lea
cmp
pop
xorl
add
or
jp
mov
cmp
mov
cmp
int3
mov
or
jns
mov
loopne
movsl
and
mov
and
aas
jl
push
inc
cltd
stc
adc
repnz
pop
xor
fistpll
pop
xchg
out
xchg
push
in
jbe
mov
cmp
les
add
sbb
dec
mov
sub
add
insl
int
xchg
call
push
adc
sbb
xchg
outsl
aaa
jb
xor
into
idiv
pop
addr16
je
dec
jae
inc
jmp
mov
sahf
cltd
xchg
out
ret
sbb
xchg
push
mov
mov
mov
lock
jecxz
shll
inc
pop
fwait
movsb
jnp
lods
xchg
add
mov
jp
adc
push
orb
adc
clc
push
addb
dec
sub
sub
lea
sub
or
dec
dec
iret
scas
in
enter
je
imul
rorb
or
pop
mov
fs
bound
out
mulb
sahf
dec
insl
jns
test
sti
out
cmp
movb
mov
cmp
and
pop
or
test
and
ret
xor
pop
mov
sarb
xlat
push
repnz
lahf
stc
movsb
mov
sbb
xchg
xchg
pop
fimull
test
fiadds
imul
push
fxch
movl
adc
je
cli
mov
add
or
sarb
add
mov
into
cmp
dec
xchg
popa
dec
dec
xchg
pop
stos
xchg
sbb
mov
cmpl
pop
sub
cmc
lahf
in
jae
dec
cld
test
dec
jne
loope
mov
cmp
sub
cld
cwtl
sbb
gs
imul
pop
lods
lret
pop
outsb
xor
sbb
ficoml
mov
cmp
sbb
enter
sub
jmp
sub
and
cwtl
cmp
jne
push
lds
cli
mov
sub
dec
jecxz
push
ljmp
stos
jmp
jb
loope
int3
imul
flds
push
adc
popa
in
push
adc
push
insl
pop
les
lret
jmp
inc
ja
iret
sub
bound
mov
cmp
aas
push
jge
jno
jl
pop
adc
pop
push
sub
push
mov
ret
mov
fnstsw
daa
xor
ljmp
xorl
sub
or
insb
cli
stos
sub
mull
jns
push
xchg
add
push
inc
inc
iret
es
pop
stos
loop
shll
inc
insb
pop
sub
mov
out
jnp
hlt
pop
adc
inc
mov
or
ret
insl
dec
jecxz
imul
cmp
popf
subb
or
jle
dec
adc
lods
jg
dec
xchg
orl
lahf
fldl
mov
push
push
imulb
lods
and
and
out
xchg
fldl
daa
rorl
cltd
and
mov
test
jle
insb
push
test
cmpsl
push
mov
sahf
addr16
cs
fcmovbe
xchg
scas
adc
loope
out
dec
sahf
add
decl
aam
mov
xor
xchg
jo
addb
inc
dec
cmp
movsb
stc
xchg
mov
nop
jbe
ja
xchg
cltd
ss
gs
repz
roll
mov
aaa
ljmp
arpl
scas
scas
mov
sbb
out
fs
aam
pop
push
dec
lret
sub
jp
push
inc
push
mov
adc
fnstcw
pop
fs
push
sub
dec
pushf
add
sahf
cld
jns
rcll
jo
add
gs
sub
in
fcmovnu
push
mov
test
pop
hlt
sbb
adc
lods
into
imul
fdiv
jbe
lret
jg
pop
mov
idivb
xchg
iret
xchg
sbb
push
int3
cmp
push
jp
ret
or
xlat
fmulp
or
cmpsl
jno
mov
adc
es
inc
stos
and
aas
imul
test
loope
rorl
enter
sbb
adc
cmp
and
imul
aam
test
out
push
mov
popf
out
and
add
pusha
cmp
xchg
pusha
loope
inc
cltd
cmp
xchg
popa
enter
mov
mov
repnz
loopne
mov
mov
and
cmpsb
repz
xchg
out
mov
mov
xchg
aad
rcll
in
jmp
fs
inc
push
xor
fldt
adc
out
cmp
adc
testb
mov
repnz
cli
outsl
sbb
cltd
jno
xchg
int3
mov
dec
xor
jmp
jo
sub
in
push
cmp
mov
es
push
push
mov
es
rol
mov
push
adc
int
or
xor
inc
lcall
mov
lret
jl
lds
adc
das
loop
mov
mov
out
movsl
add
cld
je
pop
int3
xor
popa
adc
cltd
daa
and
imul
das
mov
dec
push
push
out
push
mov
xor
nop
cmp
dec
cmpsb
ret
daa
adcl
scas
sub
inc
mov
lahf
lods
adc
ffreep
cmp
sub
lea
push
mov
clc
cmp
in
cld
cs
dec
dec
imul
lods
lret
cmc
sub
push
je
ljmp
arpl
stc
cmp
aaa
sub
mov
sub
jne
movl
dec
dec
xchg
rcll
push
adc
scas
fistl
xchg
adc
mov
std
mov
aaa
aas
sahf
fdivr
pop
inc
mov
sub
lcall
les
addr16
subb
out
insb
pop
xor
add
inc
loop
xor
test
cltd
lcall
int
pop
inc
pop
outsl
je
loopne
aad
adc
scas
imul
es
push
jae
dec
stc
ljmp
mov
std
ja
int3
pop
jae
lock
and
in
fsubrs
pushf
cmp
call
add
lock
int
and
cmp
aam
or
data16
adc
aas
sub
or
xchg
cmpsb
mov
mov
xor
std
dec
movsb
or
iret
pop
jp
mov
push
pop
push
jnp
aas
xor
dec
add
rolb
andb
out
fdivl
mov
jg
sahf
movsb
jp
and
flds
out
dec
adc
or
out
mov
stc
sbb
pop
scas
pop
in
xor
repnz
int3
std
push
xor
or
nop
inc
or
pop
adc
cmp
cmp
dec
js
adc
mov
fisttpll
fiaddl
jg
jae
les
jbe
jnp
jmp
push
xorb
xchg
pop
rcrl
sub
jge
jnp
and
mov
negl
fs
ja
sbb
cmp
imul
add
or
pushf
mov
in
ret
sbb
test
loope
lret
rsqrtps
or
push
mov
in
inc
inc
mov
xchg
add
cmp
pop
out
movsb
outsl
sbb
sub
jo
inc
icebp
popf
repz
cs
xor
cmp
sbb
inc
mov
push
push
aas
and
add
jae
jae
jno
sub
scas
into
add
jecxz
mov
and
imul
repnz
xchg
mov
cld
mov
add
cmp
aad
mov
dec
fstp
add
stc
or
add
jae
pop
xor
es
cmp
js
int
in
jno
out
out
pusha
and
pop
xor
add
xchg
sti
mov
shl
xchg
cmp
add
adc
int3
jmp
xorl
mov
dec
scas
out
arpl
insl
rol
inc
mov
jns
sarb
xchg
xchg
ret
inc
divb
lret
lret
outsl
imul
ds
rolb
add
cld
ret
xor
cmp
out
fwait
shlb
mov
je
mov
cs
testb
pop
clc
notb
cmpsb
dec
and
add
pop
add
outsb
inc
cmpsl
data16
rolb
repz
xor
fcomi
mov
sbb
and
insb
add
lea
sub
jbe
test
mov
dec
pop
pop
inc
jg
bnd
and
ret
fildl
push
test
cmp
sti
gs
dec
sbb
movsl
jg
xor
and
nop
jnp
mov
lret
sbb
fistpll
push
fnsave
or
jmp
test
mov
pop
cmc
fildll
dec
icebp
cmpsl
xor
stc
and
pop
push
and
pop
mov
adc
mov
xchg
push
sbb
jmp
sub
les
or
inc
jg
mov
inc
mov
inc
pop
insb
andnps
push
nop
subb
add
minps
and
cltd
pop
in
sbb
pop
out
push
jbe
push
sub
insb
call
sti
inc
fdivrs
ret
scas
mov
inc
push
into
imul
mov
cmpsb
repz
or
insb
stos
pop
sbb
lahf
gs
or
mov
sarb
mov
xchg
out
out
filds
rcrl
jmp
insb
pop
pop
push
cmpsl
adc
insl
mov
inc
sub
xchg
pop
nop
into
repnz
dec
jl
sbbb
jg
scas
fldl2t
sbb
jae
aad
push
dec
mov
mov
jle
sti
sbb
dec
xchg
les
insb
jns,pn
cld
and
jmp
out
out
loope
movsb
arpl
add
addb
mov
dec
xlat
movsl
mov
std
clc
mov
icebp
enter
or
jle
daa
insl
sub
pop
lds
loop
fidivrl
les
dec
inc
repz
test
xor
cmp
add
and
out
jg
adc
mov
xor
add
daa
fldl
add
outsb
mov
mov
mov
jo
push
inc
xchg
dec
jl
push
xchg
test
mov
mov
mov
pushf
push
or
sti
ret
mov
addb
fdivs
test
push
inc
enter
mov
mov
adc
jp
fistps
fmulp
imul
out
ss
jno
lahf
dec
out
fs
mov
jnp
or
sahf
call
push
test
dec
sbb
stos
or
mov
insl
push
mov
lahf
outsl
test
shlb
sbb
sbb
movsb
imulb
jnp
mov
inc
movsl
pop
or
add
add
sbb
mov
sbb
mov
icebp
test
push
jg
aas
jl
mov
incb
in
jp
jb
mov
es
add
or
sbb
ret
lahf
cli
sub
jns
pop
movsb
cmp
sbb
pushf
jp,pn
mov
or
pop
repnz
push
mov
xlat
stos
jl
arpl
xchg
pop
js
leave
push
push
imul
adc
jmp
xchg
inc
inc
dec
imul
xor
test
xor
and
pop
fs
sbb
fldt
dec
pop
dec
ds
in
inc
ficoml
movsb
outsb
and
ljmp
movsl
in
mov
xor
popf
jmp
dec
jno
pushw
js
xor
out
ja
stc
insb
xchg
arpl
mov
das
mov
fs
inc
xlat
dec
pushf
push
mulb
sbb
cmc
cmpsl
jle
fwait
cmpsb
sub
pop
and
jle
test
mov
mov
mov
pop
in
push
and
leave
enter
mov
testb
outsb
mov
xchg
mov
movsl
aad
push
mov
mov
and
test
xchg
ror
in
dec
lods
aam
sbb
cli
adc
aad
sub
loopne
aas
dec
add
add
add
jmp
bound
jno
stos
inc
cmpsb
lret
dec
jg
push
lahf
inc
out
loopne
lods
in
shl
and
mov
sbb
dec
push
xchg
imul
arpl
cmp
sti
pop
in
pop
xlat
subb
movsl
nop
mov
inc
sbb
nop
dec
xorl
xchg
push
lds
push
stos
mov
sbb
lea
js
out
cmp
cmp
fldcw
daa
stos
jno
pop
xchg
cs
push
inc
sbb
popa
pushf
xlat
mov
dec
mov
aad
add
shll
roll
sti
ror
stos
xchg
xor
sub
mov
cwtl
int
scas
andb
mov
inc
shll
test
xchg
test
es
push
push
inc
adc
ficomps
add
cmpsl
mov
fildl
movsl
or
jbe
iret
popf
aad
leave
pop
or
test
xor
xchg
mov
jp
arpl
sbb
nop
aad
xchg
jae
in
xor
clc
int
mov
arpl
pop
inc
sbb
ret
dec
cs
and
mov
sahf
in
jns
push
mov
cmp
add
rorb
gs
mov
sbb
and
pushf
dec
test
mov
gs
dec
je
inc
jns
lea
es
xchg
sub
loop
stos
imulb
addr16
push
xor
inc
je
inc
out
ja
and
mov
in
jmp
sbb
mov
mov
and
imul
imul
pop
pop
jnp
addr16
sbb
shl
sbb
ss
cmp
mov
cmpsb
push
inc
ss
negl
nop
sub
ja
or
je
in
fwait
in
les
dec
push
popf
mov
sbb
iret
push
xchg
add
cmp
leave
int3
cmpsb
sti
xor
in
and
or
mov
inc
pop
xchg
insb
push
outsl
mov
cwtl
lds
insb
int3
mov
stc
xchg
and
pusha
adc
sahf
fwait
pop
jno
adc
leave
push
jb
mov
push
pop
pop
test
cmp
fiaddl
adc
lret
and
fsubrl
incb
das
dec
xchg
push
mov
pop
insl
jbe
sahf
pop
js
xchg
push
jns
jno
xor
xor
aam
sub
sbb
add
mov
int3
adc
mov
adc
negb
mov
mov
xchg
or
ds
jp
mov
pop
imulb
cmpb
adc
mov
les
jne
addr16
inc
xchg
and
dec
xor
sub
inc
mov
or
in
push
or
int3
rcll
adc
adc
mov
add
add
jae
inc
adc
inc
adc
lahf
xor
and
adcl
jle
mov
loope
xchg
movntq
cmpsb
nop
ret
cmpsb
ja
mov
icebp
mov
cmp
into
mov
xchg
mov
adc
jp
mov
sub
fidivs
aaa
dec
cmpb
cltd
inc
or
pop
adc
inc
xchg
fsubrs
data16
pop
xorb
xchg
ret
inc
mov
ss
lock
fwait
insl
jecxz
outsl
scas
icebp
int3
xor
and
testb
adc
adc
ja
or
jg
xor
mov
inc
mov
cmp
mov
xchg
les
in
pop
jae
je
jno
sahf
sbb
mov
std
dec
test
inc
std
lret
stos
xor
mov
push
scas
sbb
jbe
clc
cmp
div
repz
ja
and
mov
mov
push
ja
out
imul
lds
push
lcall
adc
pop
xchg
adc
fmuls
out
xor
jns
mov
fisubs
test
imul
sarl
sti
and
sarl
dec
xor
addr16
repz
mov
add
jae,pn
add
out
addr16
lret
into
and
shlb
subb
fs
jmp
dec
decl
bound
sub
cmp
or
inc
imul
jae
stos
aad
into
lret
daa
pop
fidivl
outsb
and
mov
cmpsb
xchg
pop
test
sbb
cwtl
inc
xor
inc
jnp,pn
inc
push
mov
into
adc
inc
or
mov
imul
xchg
or
cmp
xor
sbb
dec
xchg
loopne
fidivrl
aas
xchg
cli
mov
outsb
jne
dec
mov
aad
out
and
sti
dec
xchg
dec
push
jns
mov
push
adc
mov
das
xchg
sub
cmpsb
and
pushf
sti
inc
push
aam
leave
cmc
mov
mov
hlt
inc
lret
insl
jg
sbb
jmp
xor
pop
aas
push
cmp
cli
dec
xlat
cs
sub
addb
mov
mov
pop
sbb
xchg
fs
adc
ss
and
pop
cmp
and
xor
int3
and
jecxz
inc
popf
inc
arpl
clc
inc
xchg
test
mov
sbb
xchg
sbb
pop
cmp
adc
and
add
or
mov
mov
leave
pop
shrl
mov
test
mov
mov
in
push
sbb
pushf
jg
in
push
int
push
adc
sbb
or
xchg
dec
jl
sbb
popf
sbb
push
mov
adc
outsl
rolb
push
out
das
arpl
sub
dec
icebp
push
into
inc
mov
in
test
adc
leave
xor
jne
fidivl
pushf
stos
shll
push
cmc
sub
test
fs
and
jne
mov
cmp
dec
lods
mov
mov
sbb
mov
les
pop
cmpb
std
mov
mov
aad
in
and
es
lcall
mov
ds
xor
aad
add
aaa
lret
pop
outsb
leave
dec
and
add
mov
adc
in
pop
ret
sub
lods
ret
sbb
cwtl
dec
mov
sub
negl
cmc
sbb
sbb
insl
xor
dec
in
xchg
cltd
rclb
js
data16
xchg
dec
jbe
fwait
pop
pop
xor
lahf
mov
jecxz
jns
lods
sti
pop
jae
cmp
adc
leave
fists
in
mov
inc
mov
lea
push
cmp
mov
rcr
cli
dec
repnz
jbe
mov
sbb
dec
cmp
sub
xor
and
xor
flds
mov
cli
lock
test
je
mov
cmpsl
repnz
inc
dec
cmp
adc
pop
cltd
xchg
dec
jo
and
lea
jmp
sarb
loopne
cld
cmp
aad
jne
mov
and
adc
mov
mov
lock
test
xchg
dec
mov
add
dec
jg
xchg
cld
xchg
movsb
or
test
sub
pop
popa
shr
inc
negb
ja
pop
cmp
mov
je
loop
lock
inc
push
cmp
add
sbb
cli
add
and
sub
jns
mov
bound
and
inc
rclb
and
xchg
icebp
jno
dec
pop
mov
pop
fsub
or
clc
lock
mov
test
shlb
mov
xor
dec
sar
xchg
insb
sub
sub
cltd
mov
and
pushf
add
rcrl
jge
lods
scas
push
xor
test
into
je,pn
pop
inc
xor
xchg
pop
sub
mov
sbb
shrb
pop
inc
out
jbe
cmpsl
mov
mov
mov
jmp
repz
push
dec
mov
mov
or
or
nop
dec
inc
pop
addl
push
mov
icebp
adc
in
xlat
outsl
jae
jle
imul
push
and
popa
pop
cmc
int3
xor
adc
cs
rorl
xor
shlb
rcll
mov
out
call
add
lea
sbb
and
jg
dec
push
or
push
adc
and
into
leave
cmp
nop
loopne
aaa
negb
mov
push
imul
stos
and
inc
xchg
push
lods
pop
stos
int
jmp
xor
push
mov
jle
lret
mov
repz
pop
jecxz
shlb
outsl
add
outsl
icebp
div
inc
lret
dec
sbb
adc
cwtl
cmc
aam
addr16
clc
cmp
je
mov
mov
jge
fistl
rorb
movsl
mov
sbb
aad
mov
out
push
loopne
leave
xlat
adc
in
hlt
imul
pop
xchg
test
shlb
mov
xchg
add
out
jle
push
fsub
fdivl
add
test
insl
pop
cwtl
dec
push
mov
push
add
xchg
xor
push
incl
pop
adc
test
imul
fidivrl
pop
mov
das
adc
pop
inc
inc
sub
or
inc
movsb
add
add
popf
enter
dec
sub
es
mov
das
mov
and
dec
repnz
xchg
push
fneni(8087
cwtl
mov
cwtl
andb
mov
in
outsl
xor
xchg
icebp
lcall
mov
jns
pop
in
mov
xor
sbb
js
xor
xchg
in
psubw
cmp
sbb
fadd
sbb
push
sbbb
push
mov
jl
enter
outsl
inc
and
sub
sub
stos
insl
jnp
mov
push
cmpsb
ss
pop
push
cmp
daa
loopne
lock
xlat
xor
push
xor
int3
int3
test
push
lods
out
int
popf
cwtl
mov
pop
cmp
push
es
xchg
dec
jmp
dec
stos
sti
dec
xor
pop
rol
movsl
divb
out
out
or
xchg
iret
pushf
or
out
jl
mov
jne
data16
iret
imul
mov
lret
adc
testb
out
adc
mov
sbb
dec
jle
push
aad
xchg
jo
loopne
push
bound
movsl
cmp
out
scas
outsl
push
and
outsb
cs
fs
clc
lods
xchg
scas
in
add
dec
mov
jle
stc
pop
repnz
push
in
and
mov
or
addr16
dec
xchg
jle
es
mov
enter
cltd
push
jae
xor
jl
jecxz
mov
adc
sub
sbb
sysret
push
or
mov
repnz
les
jne
negl
nop
jmp
xchg
sub
gs
je
adc
stos
in
imul
test
je
cmp
jae
cmp
xchg
xchg
xchg
imul
cmp
or
or
push
cwtl
xor
cltd
sub
xor
pushf
lods
aas
outsl
xor
pop
fidivl
and
insb
xchg
push
jmp
rolb
or
aas
xchg
hlt
dec
mov
call
xlat
es
fnstenv
scas
sub
mov
out
and
mov
xchg
pop
cmpsl
out
adc
mov
sbb
insb
lret
lcall
mov
lock
jmp
sti
or
adc
mov
cmp
jge
or
lds
imul
or
jo
cmpsb
fisubrl
push
mov
push
lcall
ja
insl
int3
dec
jne
gs
outsl
and
testb
loop
cltd
cmp
or
ret
xchg
and
ja
insl
mov
sub
push
mov
or
jmp
lahf
xor
out
and
loope
push
inc
hlt
out
imul
xor
fdivrs
outsb
adc
cld
mov
dec
cmp
mov
inc
lcall
add
dec
out
in
cmp
cmp
push
in
mov
and
or
mov
push
mov
addr16
or
rcrl
and
nop
movsb
out
pushf
xchg
and
pop
push
jmp
sub
sti
xchg
mov
addr16
loope
loopne
sub
xchg
xchg
jl
mov
jmp
inc
dec
sub
and
dec
mov
and
add
add
mov
outsb
xlat
lret
adc
out
jns
adc
xchg
out
les
and
and
add
and
dec
jnp
gs
or
sbb
pusha
cmp
add
cmp
xchg
icebp
fnstenv
push
xorl
inc
dec
pop
aas
xor
inc
mov
adc
adc
jp
cs
out
push
push
popa
dec
adc
or
loope
or
fcmove
mov
lea
outsl
insb
dec
add
mov
cs
jno
js
mov
nop
cmp
in
lds
imul
fimull
push
adc
fmuls
ds
sub
add
in
sub
mov
cmpsl
xchg
ret
xchg
cmp
aad
fsubrl
push
cltd
mov
stc
pop
aad
cmpsl
sub
inc
dec
daa
lcall
cmp
fnstcw
push
add
arpl
push
cs
out
test
mov
push
dec
ret
push
aam
inc
or
xchg
sub
mov
and
dec
loopne
ss
pop
dec
pop
xchg
and
outsb
loope
lret
and
imul
sub
iret
cmp
sbb
dec
sub
cmp
mov
ds
xor
push
aad
aas
ficoml
push
cli
xor
ss
or
xor
cmp
pop
stc
out
fidivl
ja
cwtl
mov
jnp
andl
sarb
inc
mov
scas
push
mov
sbb
dec
loop
jg
mov
repnz
mov
mov
aaa
or
inc
cmp
sbb
cld
dec
cs
push
gs
mov
add
shrl
pop
xchg
int3
and
xchg
jle
lods
repnz
mov
js
lret
mov
inc
loopne
je
add
andl
sub
rol
pop
jmp
push
jno
push
push
cmpb
sub
les
rcrb
and
mov
fwait
cwtl
mov
sub
push
mov
ficoml
and
orl
pop
sbb
aas
dec
lret
leave
movsl
jno
pop
je
dec
out
leave
push
popa
ljmp
push
pop
js
push
xchg
or
cld
das
inc
cli
cmp
ret
adc
or
call
das
and
jmp
cmp
push
dec
fiadds
dec
icebp
mov
and
mov
cmp
nop
bound
lds
dec
mov
nop
aad
mov
movsb
dec
pop
cmpsl
mov
sbb
sub
xor
jne
loope
jns
in
adc
xor
sarb
jmp
or
jmp
jne
mov
xor
pop
cmp
xchg
lods
dec
fcoms
or
into
in
bound
divl
jnp
sub
scas
int3
push
aam
push
loope
mov
pop
dec
imul
xor
in
or
or
and
movsb
cmp
popf
pop
iret
fbstp
gs
mov
push
xor
ret
push
push
mov
aam
pop
clc
subb
rorb
fnstenv
adc
sbb
int3
movsl
and
push
inc
push
jmp
mov
pop
mov
jno
mov
sbb
sti
dec
mov
sub
stos
add
in
dec
inc
in
mov
adc
cmp
ds
pop
xlat
jns
leave
mov
xchg
jp
in
nop
mov
and
adc
mov
sti
leave
das
pop
cmc
pop
pop
sbb
push
lds
arpl
ffree
or
mov
mov
andl
in
jae
loop
cltd
cmpsl
pop
lahf
cli
cltd
popf
int3
loopnew
adc
push
mov
pusha
push
out
sbb
aas
jne
push
xor
int
aas
sbb
call
add
lret
dec
pop
iret
ss
pop
inc
not
aaa
add
xchg
pusha
push
adc
or
pop
stos
iret
add
mov
mov
lea
adc
xor
mov
jge
sub
lret
cmp
aad
inc
inc
push
test
mov
iret
dec
gs
aas
add
and
inc
dec
pop
movsb
dec
fwait
push
mov
and
lret
mov
jne
push
insl
ja
add
cs
cmc
imul
xor
aas
push
or
ret
xor
sar
add
iret
rcl
xlat
cmpsb
jge
das
pop
or
xor
ljmp
clc
jae
mov
mov
lds
into
js
push
add
pop
mov
pusha
xchg
sarl
xchg
dec
test
popa
jge
cwtl
cmpsb
xchg
sub
add
popf
inc
cmp
adc
mov
insl
inc
lahf
mov
sub
testl
and
aas
popf
adc
loop
mov
mov
lret
mov
push
mov
aas
mov
xor
sub
inc
ja
in
cmc
pusha
sub
mov
add
daa
pop
jne
fdivrl
inc
scas
call
imul
jmp
popl
adc
out
xor
je
inc
cmp
cmpl
cwtl
ret
ret
mov
add
xor
mov
inc
repnz
inc
jp
ror
cwtl
scas
dec
or
mov
mov
mov
adc
mov
enter
sub
add
adc
or
fs
xor
jo
xchg
je
dec
out
movl
cs
jo
and
scas
sbbb
xchg
inc
pop
sbb
or
mov
add
mov
movsb
cmp
xchg
and
rcl
negl
push
fisttpl
int
push
fimuls
push
das
clc
shr
call
pop
xor
push
jbe
enter
and
xchg
mov
divb
lea
std
mov
mov
jmp
ds
adc
xor
push
push
test
dec
mov
imul
mov
aam
jns
iret
sbbl
ret
mov
and
fmulp
or
pop
mov
mov
stc
orb
mov
mov
mov
sahf
push
xor
inc
sub
inc
shrb
mov
push
shll
es
mov
fdiv
fmull
aaa
roll
dec
xchg
add
sub
push
loopne
std
jmp
pop
cwtl
cli
nop
insl
movsl
jb
xchg
xchg
mov
push
cs
sub
sub
scas
pop
mov
mov
mov
fsts
sarl
sub
cli
stos
mov
add
pop
sti
daa
sub
das
movb
mov
and
sub
les
lods
add
int3
ret
pop
or
jo
mov
xor
sub
push
inc
data16
int
jbe
xor
sbb
and
inc
cmp
repnz
cmp
cmc
sbb
dec
pop
xchg
add
jp
ljmp
inc
repnz
std
sub
bound
rcl
xlat
adc
push
mov
cmp
scas
adc
push
clc
xchg
jl
repnz
test
les
mov
pop
arpl
mov
fidivrl
adc
xor
inc
pop
push
inc
mov
in
int
sub
daa
adc
mov
dec
and
jl
inc
adc
adc
test
lds
bnd
ret
adc
mov
mov
js
sti
add
cmp
in
push
sbb
sar
cmp
add
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
push
push
call
push
push
push
push
call
test
je
push
call
mov
call
mov
mov
cmp
jne
push
call
add
push
call
push
push
call
xor
pop
mov
pop
ret
nop
nop
sub
push
push
push
call
push
push
call
lea
push
call
call
push
push
push
call
cmpw
push
je
push
call
push
call
add
jmp
push
push
push
call
lcall
pushf
shrl
xor
ljmp
xor
arpl
les
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
or
add
lahf
dec
or
mov
inc
repnz
aaa
mov
jle
mov
bound
jl
stos
or
outsl
or
sbb
sbb
xor
arpl
jns
jmp
dec
test
mov
xchg
ret
and
mov
into
xlat
bound
cmp
dec
je
fwait
mov
int3
jp
jb
xor
xchg
sahf
enter
xchg
mov
push
and
push
mov
cs
into
dec
pushl
lret
and
shlb
or
cltd
dec
dec
int3
jb
icebp
shrb
mov
arpl
jle
adc
or
xor
cmp
mov
inc
xor
arpl
jg
adc
or
movl
jle
adc
inc
and
arpl
jle
adc
inc
xor
arpl
jle
adc
xor
fnstcw
adc
dec
xor
adc
xor
arpl
outsb
les
inc
xor
arpl
jle
add
inc
xor
arpl
jle
jnp
or
sub
xor
push
lcall
sbb
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
aas
mov
sbb
pop
iret
adc
inc
cld
xor
arpl
jle
inc
fisttps
jg
xor
arpl
jle
adc
xor
push
sbb
jle
adc
inc
pusha
sbb
inc
rclb
xor
arpl
jle
xor
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
jle
adc
inc
xor
arpl
or
cmp
sbb
cmp
xchg
jno
and
dec
mov
mov
push
sub
in
les
xchg
js
ds
notb
push
or
outsl
sub
es
imul
dec
popf
out
push
or
mov
iret
push
add
xchg
cmp
mov
jl
cld
and
nop
xchg
std
sbb
adc
call
mov
dec
js
das
sahf
add
and
xor
or
dec
shlb
nop
test
test
repnz
xor
gs
std
dec
std
mov
stc
ds
sub
cmovg
and
lahf
sti
loop
xor
movsl
enter
xchg
leave
mov
iret
inc
xlat
std
pop
jne
push
test
outsb
into
fcoms
dec
hlt
pop
mov
mov
dec
ljmp
push
js
shrl
inc
inc
jle
cli
mov
daa
push
add
jg
xchg
sbbb
mov
subl
test
and
pop
jno
out
xor
jg
loopne
mov
in
pop
ja
cmp
dec
xchg
subb
ds
cli
pop
cltd
pop
pusha
mov
dec
mov
cmpsl
pop
push
push
cld
andl
jp
xchg
sub
test
jmp
scas
jl
add
cmp
das
inc
stc
in
cmpsl
cmp
mov
mov
in
add
push
imul
push
sahf
stos
sub
jae
xchg
add
push
pop
cltd
jle
sub
inc
cwtl
sbb
mov
fucomip
mov
outsb
mov
cld
xor
les
cld
sbb
pusha
lahf
fisubrl
push
jae
iret
outsl
ds
push
mov
test
imul
sbb
leave
pcmpgtb
add
inc
movsl
pop
push
mov
pop
mov
out
mov
in
dec
sbb
mov
nop
add
add
xchg
sub
mov
adc
push
mov
leave
adc
push
leave
mov
std
movd
bound
and
imul
lea
pop
in
insl
hlt
inc
repnz
call
cli
repnz
stos
repnz
xor
mov
fs
jg
in
jb
pop
icebp
test
subb
and
pop
rcrb
mov
in
push
mov
mov
cmp
jge
cld
adc
xchg
daa
dec
popf
mov
push
jnp
mov
call
mov
dec
inc
sbb
xor
xchg
push
les
xor
sbb
cld
mov
sub
out
mov
dec
sub
dec
outsb
sub
mov
xchg
cmp
std
sbb
rol
cmp
mov
or
and
mov
mov
or
test
xor
pop
ds
rcll
cmp
inc
mov
xor
and
dec
pop
pushf
mov
pop
int
mov
sub
cwtl
and
fmulp
inc
fistpll
ss
pop
xchg
xlat
pushf
outsl
shr
mov
enter
xor
or
pop
cmp
ss
sbbl
mov
jp
add
das
inc
add
fcomps
xchg
ds
mov
jecxz
sahf
inc
shll
xchg
sahf
inc
dec
outsb
in
pusha
rorl
and
shl
mov
adc
rcrb
stos
popl
sahf
movsb
daa
pop
loopne
jbe
repnz
ja
gs
jne
ror
lcall
in
jne
fs
mov
jecxz
add
rcl
inc
xchg
fsubrp
shr
aad
into
cmp
xor
mov
pop
cmp
and
jmp
into
pop
push
jnp
repz
aaa
pop
and
stos
fisubrl
or
jp
rolb
xchg
mov
stc
pop
out
bound
mov
cld
aam
sbb
incb
cmp
btr
adc
and
jl
inc
insb
add
int3
outsb
dec
popf
mov
fcoml
inc
fldl
pop
fmul
imul
test
inc
pop
or
sbb
inc
addr16
icebp
sub
mov
testb
and
inc
fbld
ljmp
movsl
in
jp
cmp
adc
and
xor
cmp
push
inc
lods
jle
adc
xlat
or
cmpsl
jge
adc
xchg
leave
and
or
aam
sahf
fs
cmp
decl
test
mov
jbe,pn
mov
dec
jle
sahf
and
cmp
aad
rorb
dec
fmull
or
ret
js
mov
das
mov
mov
dec
pop
mov
mov
add
push
into
mov
xor
inc
es
add
xchg
or
jae
es
jmp
adc
repz
imul
cli
xchg
cli
or
mov
popf
jb
xor
jo
lahf
lcall
xor
dec
sub
xor
push
or
jmp
jno
test
int3
es
or
mov
fxch
in
mov
lods
pop
and
aaa
xor
mov
and
rorb
test
pop
outsb
fbld
loopne
cmp
xor
lock
add
or
out
adc
mov
dec
jb
outsl
enter
xchg
adc
jmp
wbinvd
cmc
push
mov
jne
push
test
sarb
xor
xchg
das
mov
rcrb
add
std
js
in
test
pop
cmp
std
cli
mov
xchg
mov
arpl
test
add
pop
adc
adc
les
add
aaa
insl
xor
adc
and
sub
movsb
xchg
scas
mov
fs
xor
rolb
mov
mov
pusha
cli
push
cwtl
xchg
push
rclb
rcll
xchg
pminsw
fnstsw
mov
in
sub
sbb
imul
in
mov
jmp
inc
push
cmpsb
sbb
repnz
jp
xor
push
cmc
or
and
jbe
icebp
push
mov
into
jle
movsl
dec
cltd
or
pusha
dec
inc
or
mov
dec
or
inc
cmp
lahf
cmp
sub
insb
repz
xlat
loope
icebp
test
loope
jno
jo
mov
sbb
ss
add
repnz
inc
arpl
fs
xlat
enter
xchg
inc
cltd
mov
pop
dec
sbb
cli
addr16
mov
and
lods
mov
into
lret
call
pop
jmp
dec
push
xchg
rcll
inc
decl
pop
and
mov
jne
daa
dec
cltd
mov
in
cmp
mov
fadd
jmp
mov
push
arpl
arpl
mov
cwtl
scas
cs
nop
jns
pop
es
sbb
rorl
sub
inc
fildl
js
repnz
fnsave
jne
add
fiadds
mov
enter
add
bound
or
daa
sahf
pop
outsb
out
test
cmp
js
leave
cmp
out
mov
pushf
subb
cmp
clc
adc
sbb
fdivrs
in
xchg
jge
mov
addr16
pop
dec
mov
mov
inc
pop
mov
cmc
int3
int
outsl
mov
testl
movl
out
adc
repz
std
out
repz
fldenv
push
mov
xchg
inc
lods
inc
push
xchg
aaa
jmp
dec
fcompl
pushf
dec
mov
std
push
mov
and
in
int
aaa
or
stos
inc
cwtl
jb
add
mov
mov
fwait
mov
into
xchg
xchg
jae
cs
xorl
sbb
jle
cmp
jl
popa
daa
lds
push
and
xor
dec
data16
stos
push
mov
loopne
bound
add
push
dec
jmp
xchg
pusha
jmp
cmp
mov
pop
jl,pt
fnstcw
xchg
cmp
and
rcll
sti
xchg
pop
mov
cmp
mov
sbb
cltd
aas
adc
sbb
push
out
cwtl
out
mov
bound
imul
xchg
add
fs
ds
adc
shrb
xlat
dec
shr
hlt
add
pop
mov
jmp
orb
or
jo
inc
popl
aaa
loopne
mov
arpl
imul
xchg
jno
cmp
mov
je
shrd
sbb
sbb
je
pusha
rol
jge
xchg
cmp
cmp
jns
sbb
das
xchg
imulb
dec
mov
jge
popf
adc
arpl
lcall
fidivrl
jp
cltd
in
pop
std
fwait
inc
lds
pop
lock
gs
sub
filds
adc
and
int
stc
inc
fdivr
cld
fstl
fistl
push
lods
lea
mov
inc
dec
dec
xchg
scas
pop
jns
and
xchg
fcompl
mov
imul
rorl
sub
sahf
mov
dec
dec
push
in
jae
mov
mov
inc
adc
repnz
or
push
pop
jge
cmc
in
mov
ljmp
push
push
ret
jg
shl
sbb
and
cltd
cmpsb
pop
test
jb
mov
jns
mov
mov
xor
inc
xchg
mov
adc
dec
cmp
in
js
add
std
mov
cmp
adcb
pushf
sbb
pop
dec
pop
xor
orb
adc
fisubrl
mov
aad
xchg
shr
movsb
fsubl
scas
xor
jno
and
mov
inc
jns
es
daa
fwait
mov
push
sbb
xor
xchg
test
sbb
outsb
mov
cwtl
or
add
jno
and
enter
sub
mov
icebp
sbb
movsb
aaa
sbb
or
aam
dec
subb
sub
mov
pop
xor
jbe
iret
mov
sbb
out
sti
test
call
adc
dec
xchg
push
sbb
cmp
xor
mov
add
push
loope
fsts
arpl
mov
adc
aad
test
call
test
cmpsl
in
mov
inc
lret
lock
je
out
mov
out
dec
testl
sub
inc
insl
xchg
cmp
shll
push
jmp
adc
shll
adc
loopne
jle
sub
out
popa
hlt
push
fcmovnu
or
jbe
std
in
push
adc
pop
std
adc
mov
xchg
fdivr
es
or
incl
sbb
jp
das
cmpsb
inc
out
lcall
fstpl
lods
and
cmpsl
lock
fcoml
push
add
mov
ds
fists
jo
sbb
add
dec
cmp
rcrb
and
inc
fbstp
jge
out
pushf
cmp
cltd
mov
cmp
push
movsb
outsl
je
cld
fisubrl
fidivl
test
inc
lidtl
mov
outsb
mov
iret
adc
pop
jmp
xchg
xorb
lcall
add
push
cs
popf
nop
mov
inc
mov
add
sbb
pop
add
jg
inc
mov
mov
push
push
add
iret
imul
adc
push
pop
mov
xchg
mov
lods
outsl
pop
pop
mov
jo
pusha
mov
cmp
imul
push
xchg
adc
imul
and
jno
mov
mov
add
and
mov
adc
mov
xchg
adcb
es
sarb
fwait
out
std
mov
lcall
pop
fimull
pop
adcb
arpl
sub
xor
adc
pop
xor
cwtl
cltd
sub
lods
jne
cmc
into
loope
cld
mov
dec
lock
ret
cwtl
xor
popf
cmp
or
lea
in
inc
arpl
jl
shll
js
mov
jns
movsl
adc
inc
jle
mov
lods
push
mov
adc
and
jne
in
sbb
jmp
sbb
dec
cs
sub
and
lods
cmc
shll
lods
popa
mov
push
stc
or
out
cs
mov
push
cmpsb
push
dec
adc
sahf
cmpsl
inc
cli
ja
in
daa
fnstsw
mov
push
int
mov
mov
inc
mov
imul
enter
or
sbb
add
ljmp
pop
fwait
das
js
dec
mov
arpl
mov
adcb
sub
and
addr16
mov
and
sbb
cmp
nop
pop
iret
mov
and
loopne
mov
mov
mov
aam
out
xchg
mov
jmp
mov
js
ror
jge
dec
cltd
push
xchg
popf
lods
mov
mov
stc
nop
roll
jl
loopne
inc
cld
inc
in
jns
xorb
cmp
daa
js
out
mov
cmp
xchg
iret
adc
mov
popa
sub
loopne
inc
test
cmp
jp
add
imul
lahf
sub
xor
int
cltd
xorb
pusha
jg
xchg
ror
mov
leave
in
pop
mov
int
test
rolb
and
xor
call
mov
out
inc
sbb
sbb
sahf
add
pop
jbe
push
test
push
adc
in
xor
xchg
jmp
sub
lcall
add
mov
daa
xor
and
loope
call
ds
mov
xor
arpl
shlb
mov
jno
fptan
dec
in
push
sub
mov
fnstenv
cmp
push
dec
dec
negl
add
flds
mov
jnp
xchg
pop
enter
out
add
dec
fcoms
hlt
out
daa
loop
les
je
pop
mov
sbb
or
hlt
dec
loope
jnp
imul
mov
sahf
das
fcoms
inc
rcr
idivb
cli
sbb
xor
mov
add
add
add
call
push
push
call
xor
add
ret
nop
jmp
jmp
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
pusha
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
popa
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
popa
inc
add
popa
inc
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
bound
je
inc
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shlb
add
bound
hlt
bound
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addb
addb
addb
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
inc
add
addb
addb
addb
addb
addb
addb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
addl
addl
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
test
je
inc
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
