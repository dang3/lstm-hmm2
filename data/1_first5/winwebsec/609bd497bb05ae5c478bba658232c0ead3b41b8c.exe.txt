adc
pop
xchg
outsb
cli
sub
xchg
add
xchg
mov
mov
sbb
testl
in
lret
mov
mov
fisttpll
push
into
aas
and
notl
shl
sub
xchg
add
add
ds
bound
ret
loopne
shlb
jmp
mov
mov
mov
mov
cld
and
mov
sbb
xchg
xchg
and
scas
pusha
movsl
add
push
clc
jge
mov
pop
dec
repnz
inc
inc
sahf
and
jb
incb
jecxz
outsl
or
mov
test
mov
or
out
mov
lea
and
testl
jg
cmc
pushf
sub
cmp
mov
jl
xchg
aam
ds
into
ret
push
add
jb
adc
and
jecxz
mov
loopne
int
xlat
sub
mov
inc
add
pop
push
jno
fstpl
jnp
inc
enter
pop
jmp
jne
mov
mov
mov
mov
pop
xchg
dec
repz
lock
push
imul
clc
daa
mov
and
inc
lret
int
mov
bound
mov
and
stos
push
out
sbbb
sbb
jmp
adc
fstpl
mov
push
inc
mov
lahf
lcall
enter
aam
aaa
arpl
xchg
sbb
out
xor
cmp
push
aaa
mov
loop
icebp
and
xor
daa
shlb
adc
out
push
cmpsl
push
xor
dec
adc
sbb
jecxz
lahf
arpl
test
jp
mov
fiaddl
insb
xchg
inc
movsb
ret
enter
or
dec
mov
push
cmpsl
test
mov
or
sbb
jle
std
inc
push
in
in
sbb
add
xchg
mov
sub
jle
dec
scas
ljmp
js
jp
ds
test
in
xchg
and
in
xor
in
add
push
xor
test
lahf
fwait
pop
call
test
sub
rcl
or
pop
aas
cwtl
test
sub
jb
fs
xchg
aam
dec
jne
pop
cmc
pop
cmp
movsl
sub
mov
jae
movsb
push
sub
cmp
cltd
test
mov
js
movsl
jb
not
cmp
clc
sti
mov
cmp
lret
xor
push
push
or
mov
rorb
dec
sbb
pop
fstl
push
add
aaa
stos
add
adc
popf
jne
jge
int
outsl
mov
das
insb
ljmp
cmc
cmp
cmp
push
xchg
add
inc
rolb
fwait
div
mov
jnp
dec
imul
hlt
mov
fdivrl
cmp
aam
icebp
ffreep
lret
loopne
jmp
std
pop
mov
enter
inc
push
lea
cli
out
jae
outsb
clc
test
mov
stos
jbe
sahf
dec
and
adc
dec
cmp
mov
lea
xchg
and
mov
inc
sarl
pop
call
cltd
popf
aas
fnsave
cld
xchg
mov
inc
sbb
xchg
add
lods
popa
push
adc
add
or
clc
insl
les
cltd
add
lahf
mov
das
cwtl
icebp
and
pusha
sub
sbb
loope
adcl
test
xor
and
mov
out
push
aad
pop
in
leave
cmc
jecxz
nop
add
mov
movsb
inc
idiv
push
idivl
loope
mov
xor
int3
adc
xor
lret
push
xor
jbe
jnp
sub
xchg
mov
xchg
add
test
jecxz
xchg
cvtpi2ps
push
mov
cmp
lods
fnstcw
pop
in
dec
stos
test
cmp
fucomi
jnp
sahf
cmp
sahf
pop
and
mov
inc
mov
aaa
xor
xchg
nop
fmull
xor
aas
stos
cltd
dec
cmpsb
pop
push
push
push
cwtl
dec
arpl
std
mov
sbb
mov
sub
cmp
nop
stc
dec
and
loopne
ja
inc
jl
sbb
pop
hlt
jmp
fdivrl
mov
inc
enter
xor
int
mov
add
iret
fsubl
inc
push
xor
sbb
sbb
xor
inc
xor
mov
bound
pop
outsl
out
sbb
repz
rcrl
ja
mov
fnstsw
sub
sahf
std
stos
shl
mov
lods
inc
ret
loopne
ror
pop
subl
test
pop
arpl
mov
jle
clc
call
push
mov
data16
sbb
jle
sub
test
das
not
and
pop
cmpsl
movsl
add
mulb
je
or
cmpsl
sub
rorb
addr16
pop
adc
pop
add
mov
lods
pop
xchg
pop
cmp
mov
imul
nop
pop
js
scas
or
xchg
dec
cld
nop
insb
inc
adc
rol
add
les
fsubrp
and
push
out
stos
cs
add
bound
fisubl
sbb
add
data16
das
lods
push
sub
in
repnz
sub
sahf
mov
adc
shr
mov
and
arpl
mov
pop
push
sub
jmp
mov
jbe
mov
adc
push
xor
pop
jae
adc
iret
push
sti
loope
aaa
adc
lret
inc
test
sub
cmpsl
lret
outsl
fs
push
out
dec
or
daa
and
mov
jecxz
pop
push
call
fiaddl
insl
pop
sbb
imul
movsb
xchg
mov
mov
sbb
mov
bswap
jecxz
jle
and
jb
lds
inc
sbb
xorl
hlt
rcr
cs
push
fisubs
adc
test
ljmp
xchg
ljmp
daa
cmp
inc
test
mov
mov
dec
adc
in
into
add
jp
ds
pushf
jns
cmp
lods
jnp
dec
adc
xchg
mov
xchg
dec
push
aaa
mov
inc
mov
lock
arpl
scas
jnp
xchg
out
and
and
add
inc
xor
jg
outsb
pop
rcrl
and
xchg
idiv
ss
shll
cmp
inc
cltd
test
jnp
movsl
jae
lods
inc
or
shrb
mov
add
stos
es
inc
inc
mov
imul
into
aam
popa
push
pop
xor
push
dec
xchg
mov
add
cwtl
dec
cwtl
mov
cmpsl
pusha
push
icebp
add
out
das
or
push
cmp
lods
xor
xor
mov
inc
insb
movsl
mov
repz
aam
ja
test
bound
cmp
pop
dec
xor
cmc
xchg
jns
lods
pop
andb
sub
xor
sbbb
jne
dec
mov
aam
ret
and
pop
xorb
aad
pop
dec
sahf
mov
inc
stos
xchg
imul
adc
dec
lods
fdivs
mov
mov
cmc
popf
in
push
sbb
outsb
jb
fsubl
hlt
pusha
imull
fdivrl
dec
lret
sti
sub
pop
sbb
mov
or
fwait
inc
add
add
cmp
inc
mov
pop
mov
cltd
movsl
das
test
insl
add
shll
mov
dec
or
in
mov
int
outsl
sbb
out
mov
test
jg
jg
jle
jo
ja
add
pop
cmp
ret
negb
push
fildl
rcr
fs
adc
xchg
int
sub
mov
adc
lcall
jg
in
test
push
cmp
pop
pusha
xchg
dec
fidivs
loop
xor
faddl
imul
and
ss
inc
loop
pop
xor
ret
sarb
xlat
lret
repnz
dec
inc
jo
mov
inc
or
into
ret
mov
data16
mov
add
fstcw
pop
gs
stos
loop
cmp
dec
icebp
cltd
test
mov
in
cvtdq2ps
xchg
gs
imul
mov
test
adc
xor
and
hlt
pop
mov
mov
movsb
sbbl
mov
mov
pop
inc
adc
cmp
and
int
sub
pop
sub
ds
stos
and
mov
lret
movsb
je
aas
sub
or
sti
rclb
iret
xor
ficomps
test
mov
fs
lock
mov
mov
insb
jl
cmp
movsl
sbb
fstp
dec
les
pop
jg
sarl
sbb
or
fs
stc
lock
or
adcl
cmp
pop
mov
xchg
imul
hlt
mov
jb
fcoml
scas
or
int3
push
inc
mov
pushf
mov
adc
mov
inc
inc
jae
or
push
mov
fnsave
das
nop
loop
pusha
daa
es
fwait
jo
fcomps
shlb
or
cmp
push
pop
sub
shll
les
inc
xor
ss
aam
test
pop
imul
mov
popf
inc
mov
and
pop
hlt
lret
shl
mov
enter
add
cltd
mov
push
jnp
and
int
pop
mov
jo
pop
sti
xchg
pop
dec
push
dec
cmp
shl
inc
add
push
sub
adc
mov
mov
ja
sub
stc
jge
adc
dec
fcomps
xchg
fimuls
hlt
or
dec
adc
sub
jle
enter
adc
mov
in
out
and
test
das
xchg
enter
and
mov
mov
jae
xor
popa
insl
push
shrb
dec
imul
fld
shr
ss
and
cmp
shlb
mov
pushf
nop
xchg
jmp
adc
mov
fisubl
lods
stos
push
popf
test
loopne
mov
xchg
push
mov
ffree
pop
ret
in
repnz
repz
add
xchg
sub
mov
scas
pop
jmp
inc
out
push
sub
fs
lcall
inc
jmp
jbe
mov
ljmp
jb
mov
bound
jbe
popl
dec
or
lret
out
sub
int
outsl
and
jae
pop
fsubl
lret
cli
ret
push
flds
jecxz
mov
sub
loop
or
dec
addr16
fnsave
jbe
sub
stc
mov
stos
in
out
ret
add
aas
pop
or
inc
push
xchg
scas
test
imul
jecxz
lods
jmp
std
leave
sub
adc
sub
cs
lret
xor
pop
cmpsb
mov
sub
cmpsb
call
inc
cmc
push
aam
push
add
jge
dec
aad
mov
aas
xchg
push
jae
mov
loopne
cld
orb
imul
cmpsb
push
in
ficoml
sub
insl
aad
sbb
enter
jl
outsl
and
add
adc
mov
mov
cmp
jns
jge
sbb
jge
cmp
xchg
sub
aaa
lahf
push
lret
xchg
test
or
fnstsw
test
mov
jl
and
repz
sub
dec
and
jno
daa
mov
cmp
cld
cmp
pop
lock
add
mov
mov
xchg
inc
adc
out
sbb
loop
inc
popa
push
jl
or
lret
cld
inc
mov
fimull
data16
dec
jle
daa
xor
dec
mov
or
in
xchg
mov
mov
xchg
fisubs
cmp
ljmp
mov
or
subb
mov
mov
mul
nop
mov
pop
lods
iret
jle
test
lahf
add
pop
scas
dec
push
lods
mov
xchg
cltd
into
rol
aas
cmp
mov
inc
pop
add
lods
pushf
in
mov
xor
fsubrs
inc
jl
das
test
sti
adc
fcmovnu
pop
ja
ret
stos
sub
adc
jnp
cmp
scas
sub
cwtl
xchg
stos
arpl
movsl
mov
jbe
ss
jle
jne
stos
das
pop
pushf
rorb
mov
xchg
lcall
mov
rcrl
test
lods
je
lahf
scas
jb
outsb
ss
rcrb
mov
mov
mov
iret
clc
loop
outsl
int
in
cmp
jns
inc
mov
jo
lret
inc
subl
mov
push
pop
scas
inc
jg
mov
mov
push
sub
cmp
inc
add
xlat
shll
les
call
dec
xor
push
rcrb
lret
push
fstl
insb
in
dec
mov
bound
jnp
lret
and
aas
pop
incb
test
and
sub
xchg
lcall
call
into
mov
pop
cmp
push
lret
loop
addr16
mov
lods
push
cmp
xchg
xchg
push
sub
mov
cmp
in
int3
sbb
das
mov
mov
popf
imul
pop
xor
xlat
call
add
pop
adc
inc
ret
pop
leave
sub
mov
inc
dec
mov
ljmp
push
out
lret
fildl
dec
int
dec
jle
mov
sarb
mov
mov
inc
push
out
jmp
insl
stc
lods
push
cmp
call
test
cli
mov
jb
test
push
pop
or
cmpsl
dec
shlb
push
add
jnp
adc
adc
in
and
rclb
das
movsb
test
mov
arpl
rclb
cmc
xor
or
mov
leave
out
lods
inc
jge
scas
push
mov
adc
outsl
dec
and
addl
sahf
xchg
jp
cltd
fsubrs
jge
inc
fldenv
aaa
mov
and
sbb
xchg
insb
test
cmp
cmpsb
cmpsl
aaa
mov
loope
movsl
lods
mov
popa
sub
push
mov
adc
or
mov
push
inc
push
lock
out
push
dec
dec
repnz
bound
dec
mov
aam
sti
cmp
mov
cld
in
adc
lods
out
cmpsl
xchg
mov
movb
fisubrs
sbb
or
je
sub
test
cld
cmp
adc
insb
les
and
sub
mov
dec
lret
roll
stos
jne
iret
mov
repz
ret
cmp
push
in
out
popf
in
mov
cmp
mov
dec
inc
mov
dec
sub
dec
loope
jb
lods
xchg
mov
mov
jb
movsb
outsl
shrb
or
jmp
lret
mov
fwait
dec
mov
mov
jp
cmp
repz
js
push
insl
in
mov
fs
sub
jle
adc
sahf
fdivrs
repz
scas
mov
or
nop
outsl
or
std
mov
sub
ficoms
cmp
xor
and
test
jno
pop
xor
push
stos
jnp
jb
imul
sub
mov
test
ljmp
xorl
jmp
cld
cvtps2pd
mov
stos
lods
cs
sub
add
cmp
adc
gs
push
sbb
sbb
jo
sahf
lahf
mov
mov
inc
ret
pusha
xchg
mov
pop
lret
and
add
sbb
stos
xor
lock
loopne
xor
add
bound
sahf
xchg
cmpsb
mov
cld
fdiv
movsb
sarb
mov
pop
mov
xchg
shrl
subl
daa
in
ss
mov
xor
in
insl
icebp
repnz
inc
dec
cmp
lods
xor
inc
add
cmpl
pop
loop
nop
in
mov
mov
jecxz
call
stos
aam
es
aaa
ret
and
in
xchg
cmp
icebp
pop
mov
notl
sbb
sbb
aas
lods
fnstcw
jecxz
cmpsb
xor
pop
and
push
xchg
negl
pop
inc
push
bound
iret
xor
or
mov
add
or
stc
lret
and
jo
jg
cli
push
loope
stc
sub
cmp
scas
cmp
inc
mov
jne
jo
sub
lds
mov
ja
jp
loop
dec
pop
jle
add
insl
divl
adc
in
or
pmuludq
jp
xchg
jp
je
sbb
adc
push
xchg
aad
shlb
adc
imul
or
das
scas
xchg
add
mov
lret
xlat
xlat
and
cmpsb
jnp
mov
je
xor
int
mov
xchg
pop
aas
dec
fidivl
cmp
scas
mov
mov
int
adcb
pop
in
xchg
xor
pushf
dec
fisttpl
add
or
push
sub
loope
dec
das
dec
mov
aas
inc
cmpsb
sub
lret
mov
movsl
jns
sub
gs
jno
dec
and
adc
and
sub
test
popf
lods
push
mov
addr16
xlat
jne
mov
fistpl
fucomp
testb
fidivrl
pop
push
outsl
and
test
and
pusha
mov
and
lds
xchg
cmp
das
pop
loope
dec
pop
fidivs
xor
xlat
mov
imul
cmp
push
cmp
loope
ret
mov
push
std
outsl
dec
ljmp
inc
xchg
cli
shl
mov
and
faddl
dec
and
add
xor
jg
clc
sbb
fdiv
jnp
add
test
mov
in
iret
movsl
pop
lahf
jnp
dec
js
sub
fidivl
add
adc
xchg
xorl
push
mov
adc
mov
or
in
popa
add
jne
and
shr
xchg
lgs
loope
ja
jl
push
nop
dec
push
mov
aas
int
jecxz
adc
fstps
mov
insl
cmp
adc
arpl
test
xor
fldl
cwtl
sub
imulb
loope
add
sub
sti
data16
dec
stos
jmp
adc
add
test
lret
xchg
inc
test
and
ret
inc
mov
rclb
pop
je
jmp
daa
adc
mov
call
int
pop
jge
mov
jmp
inc
cmp
inc
push
or
xchg
lret
adc
cmpsl
or
enter
sbb
xor
sahf
xor
jnp
jg
mov
bnd
je
pop
and
cmp
ss
or
or
ds
mov
mov
mov
and
sub
hlt
mov
pushl
sbb
sub
fwait
shrl
xchg
outsb
into
xchg
cmp
js
add
sbb
xchg
addr16
mov
js
sub
sbb
les
and
test
adc
jle
sbb
sub
mov
inc
lock
mov
insl
dec
int
dec
xlat
hlt
cwtl
push
mov
push
jecxz
xchg
in
in
mov
pop
sbbb
cmpsl
lahf
and
sbb
pop
cmp
xlat
test
sub
mov
push
arpl
daa
inc
imul
repz
jmp
shrl
jae
sub
mov
cli
fldlg2
add
adc
daa
les
mov
enter
dec
leave
pushl
or
jl
mov
ljmp
fistps
call
in
adc
fists
jb
lds
fs
lahf
repz
push
sbb
adc
xchg
cmp
in
out
mov
test
cmpb
call
adc
xchg
mov
add
push
gs
add
sbb
daa
scas
fisubs
inc
insl
jns
cs
test
into
push
cmp
add
jnp
push
mov
push
cmp
pushf
cwtl
lret
repnz
xor
ret
adc
in
pop
add
ja
xchg
cmp
dec
aad
xchg
mov
inc
jecxz
rolb
mov
ret
jmp
cmp
mov
push
mov
lds
cmp
jne
fcoml
sub
lret
cld
add
push
cmp
mov
shlb
xor
jne
lds
cwtl
aad
push
test
lods
fildll
push
test
insl
iret
notb
add
and
xor
or
test
das
adc
xchg
jne
shrl
jle
mov
nop
mulb
lods
into
lahf
enter
iret
add
lahf
sti
mov
jge
cmp
add
out
sti
gs
xchg
imul
xchg
inc
pop
or
test
fbld
fcmovu
ror
inc
mov
outsl
inc
icebp
pop
sub
mov
cltd
dec
mov
loop
dec
aad
xlat
xchg
in
pop
pop
pop
jo
mov
jmp
aas
scas
sbb
stc
adc
fisubrs
push
imul
cmp
shrl
movsb
cld
mov
or
out
dec
orb
cmp
ds
cs
dec
push
call
int
mov
pop
xor
sbb
lods
pop
jno
ds
adc
cmp
test
dec
inc
cltd
cli
ds
add
adc
fninit
popa
rcrl
or
xor
mov
mov
cmpsb
ljmp
xchg
add
push
data16
mov
add
or
cmp
cmp
pushf
mov
sub
mov
mov
sub
je
aad
ss
cmpl
aam
enter
sahf
sbb
xchg
sbbb
shll
mov
push
push
repnz
cmpsl
aas
aas
xchg
or
shlb
xchg
fisubrs
popa
or
xchg
stos
push
enter
sub
shlb
xor
sahf
xchg
xor
push
cwtl
inc
lods
int
mov
loop
cmp
out
cs
jns
cmp
icebp
inc
push
lock
push
and
xchg
addl
xchg
dec
add
mov
jl
add
rorb
iret
test
arpl
popa
push
stc
outsl
jmp
and
clc
fidivrs
arpl
and
test
ret
mov
imul
push
cld
pop
or
std
pop
add
int
mov
adc
and
xchg
mov
dec
mov
popf
dec
dec
repz
test
jnp
or
pop
jae
pop
jns
sub
fcomi
enter
mov
rolb
mov
fwait
inc
lahf
xlat
cmp
fidivrs
xor
pop
push
dec
cli
frstor
add
push
cld
mov
hlt
loop
sub
das
xchg
aad
in
sub
shr
scas
lret
push
lods
push
xor
mov
adc
lcall
aaa
lods
ret
push
lods
mov
imul
test
mov
test
adc
popf
cmp
add
xchg
lock
movsb
push
std
dec
je
ret
jo
sahf
xor
adc
icebp
les
dec
and
int
jecxz
ljmp
fisubrl
dec
and
adc
cmp
xor
mov
adc
push
aam
jb
cld
or
mov
cwtl
adc
jg
add
sarl
shlb
jp
pop
or
xor
test
lahf
inc
clc
stc
aad
icebp
push
or
mov
push
repnz
lcall
nop
dec
push
cmove
add
std
rclb
aas
adc
mov
xchg
dec
loopne
out
and
push
inc
ss
xor
dec
cwtl
into
cwtl
jb
mov
add
lret
xor
xor
sti
xchg
push
cmp
lahf
fisubrl
cmc
cwtl
orb
outsb
and
sbb
dec
je
mov
pop
jae
jno
sbb
adc
cli
aam
push
or
xchg
mov
movsl
cmp
iret
cltd
daa
or
fnstenv
mov
stos
jecxz
int3
imul
sti
or
clc
jne
xchg
dec
dec
outsl
mov
je
cmp
es
xchg
test
lds
xchg
scas
into
push
nop
hlt
jg
push
inc
out
std
mov
incl
and
add
movsl
jbe
scas
inc
lret
inc
in
add
adc
outsb
dec
cmpl
aam
repnz
mov
mov
test
and
test
xchg
hlt
mov
out
mov
push
inc
push
adc
aaa
std
push
in
and
movsb
cli
jl
adc
ja
ja
xchg
sub
dec
incb
stos
iret
out
repz
ljmp
cmp
shl
pop
push
adc
push
pop
xchg
cmp
call
std
inc
sarb
mov
out
out
dec
push
sbb
sahf
shlb
mov
jge
fcompl
add
xchg
xlat
lods
sbb
jnp
jnp
xchg
dec
or
test
in
inc
pop
out
add
cmpsb
or
or
insb
test
jp
dec
mov
mov
pop
aam
je
push
lods
and
mov
mov
adc
mov
jne
data16
aad
xchg
popa
pop
int3
mov
loopne
mov
sub
and
sub
adc
cli
and
mov
mov
outsb
xchg
sbb
int
fbld
test
movsl
arpl
cld
jp
xor
in
and
ljmp
nop
adc
cmpsl
lock
sub
sub
jno
xchg
test
push
mov
adc
dec
push
jl
jmp
rclb
cmpsb
insl
out
or
gs
movsb
xor
sub
adc
mov
cld
lods
mov
fidivrs
jne
cld
cli
mov
cmp
mov
insb
cmp
daa
insb
sbb
outsb
pop
int
out
imul
xchg
pop
mov
dec
inc
mov
sub
push
or
loop
cs
mov
jo
xor
push
orb
hlt
jb
cmc
test
adc
test
cmp
xchg
cwtl
add
packuswb
popf
ret
fsubl
lock
pop
int
xchg
push
addr16
into
jno
inc
sub
stos
and
lahf
lods
add
popf
push
sbb
jo
mov
push
jo
cmp
sub
test
xchg
push
cmp
or
mov
xor
in
inc
mov
push
add
or
cmp
es
and
mov
push
mul
mov
or
jge
scas
sub
enter
es
cmc
dec
push
jnp
icebp
cmp
out
mov
out
gs
xchg
pop
into
xchg
jno
out
dec
sub
call
mov
push
jecxz
or
in
ds
cmp
jno
dec
xchg
jmp
or
push
xchg
mov
ret
clc
inc
or
nop
ja
pop
sbb
cmc
mov
push
fildl
cld
shlb
jno
xor
stc
xchg
dec
sbb
inc
hlt
pop
call
dec
pop
sbb
js
inc
fcom
mov
adc
sti
add
jo
and
ljmp
in
sub
jns
ja
orb
mov
xchg
cmp
lret
or
and
outsb
movsl
mov
cs
in
mov
scas
cmpsb
push
incb
lret
les
outsb
add
addr16
fcmovu
dec
pop
iret
pop
sbb
mov
stos
xchg
pop
iret
shll
dec
xor
xlat
insb
mov
jl
int3
pop
push
and
fildl
fbstp
or
adc
push
lret
add
test
in
or
add
mov
adc
out
push
push
jg
adc
scas
stos
sbb
sbb
sub
mov
mov
and
push
xchg
das
dec
and
jge
fs
add
add
push
sub
adc
lods
pushl
outsb
xor
jge
imul
mov
iret
add
mov
movsl
and
out
mov
int3
xor
mov
push
dec
pop
mov
and
adc
bound
test
dec
sbb
arpl
aam
cmp
xorb
aad
bound
xchg
cmp
insb
inc
sbb
insl
test
push
hlt
loopne
mov
xor
test
sbb
add
les
sqrtps
or
mov
xchg
inc
xor
xor
inc
out
fldcw
daa
movsb
or
imull
add
push
mov
pop
pop
loope
in
sub
jb
pop
negl
mov
mov
int
add
mov
xchg
sbb
jmp
xor
pop
mov
inc
mov
mov
or
dec
js
imul
dec
ss
jmp
and
ljmp
xor
inc
les
fsubp
in
inc
repnz
pop
push
cmp
lret
nop
jg
jecxz
xchg
pop
adc
xor
add
inc
out
or
pop
cli
xchg
sti
xor
gs
pushf
scas
in
sbb
or
add
outsb
and
jmp
cmp
cmp
shrb
lahf
xchg
sbb
mov
cmp
xor
or
loopne
xor
lock
mov
gs
jle
in
xchg
loopne
mov
xlat
mov
stos
mov
fs
jno
pop
sbb
add
hlt
or
cs
adc
aam
cli
clc
shr
push
std
aam
loopne
scas
int
in
push
mov
gs
push
icebp
aaa
adc
cwtl
repnz
inc
fbld
and
mov
popf
movl
or
ss
adc
cmp
lea
inc
sahf
mov
pop
shll
fs
test
push
clc
sbb
or
mov
aam
cmp
enter
mov
int3
aaa
jp
sahf
pushf
ds
and
loope
xlat
fdivl
mov
inc
leave
jno
cmc
call
pop
fidivrl
xchg
xor
dec
dec
sbb
add
cltd
shlb
hlt
mov
dec
orl
pop
xchg
addr16
lahf
pop
pushf
cwtl
adc
and
cltd
fsubl
jb
dec
test
cmpsb
dec
inc
dec
xchg
jmp
fdivrl
ret
fidivrl
mov
xchg
ja
pusha
mov
in
orl
jmp
jbe
ljmp
out
fcmovnbe
xor
mov
int
push
cmp
pop
push
xor
inc
xor
xlat
and
inc
sub
xor
arpl
es
xchg
fsubrp
xor
loop
movsl
and
pop
pop
cmp
shrl
cwtl
and
cmp
lea
cmp
mov
insb
mov
inc
or
pop
inc
cmpsl
rolb
shl
repz
mov
xchg
mov
sti
je
je
rorl
shrb
loop
and
mov
jo
dec
lea
test
mov
sub
jl
jo
xor
push
sbb
stc
shl
add
dec
hlt
mov
ja
imul
xor
cwtl
aaa
popa
sbb
jmp
jle
pop
sub
addb
out
ja
jmp
js
dec
dec
jmp
jnp
insb
test
mov
enter
dec
lahf
iret
xorb
adc
jle
mov
dec
sub
sbb
decb
in
dec
inc
testl
mov
add
jle
mov
addr16
mov
push
push
jno
push
xlat
aam
fsubs
icebp
or
in
mov
jo
jno
mov
xor
dec
push
xor
and
adc
cli
adc
push
mov
cmp
lods
hlt
jge
das
scas
xchg
adc
jno
mov
outsl
adc
mov
in
cli
hlt
jge
jno
imul
test
in
xchg
ret
mov
icebp
pop
push
mov
test
test
mov
js
inc
mov
xlat
pop
push
arpl
or
cmpxchg
jp
fwait
pop
pop
fstl
sbb
mov
ss
pop
inc
pop
insb
divl
sub
loop
sub
js
jne
out
mov
imul
in
movb
leave
fwait
shl
ja
xorl
cmp
add
sbb
call
test
ss
out
push
repnz
cmp
inc
test
xor
rorb
fistps
cld
cmp
adc
dec
fisubl
movsl
lock
lock
data16
in
jge
in
sahf
mov
lock
mov
xor
fidivrl
out
add
pop
leave
add
mov
cmp
ret
lds
out
ss
push
mov
fisubrl
addr16
nop
sub
mov
xchg
xchg
in
shll
mov
xchg
out
addl
lret
pop
or
sub
fcoms
rorl
push
movsb
pop
xor
mov
aas
add
or
xor
sub
in
stc
rol
pop
mov
jmp
push
lds
sti
shll
das
mov
push
push
nop
fwait
sbb
xor
push
fistps
lcall
mov
dec
jg
sbb
in
std
or
sbb
xor
cmpsl
or
pop
in
cmp
data16
rcrb
ja
dec
fimuls
lods
jle
sbb
pop
negb
mov
cmp
pop
pop
fsubp
pushf
enter
into
pop
movsb
pop
cmp
inc
aas
shrl
test
pop
adc
add
xchg
jecxz
clc
cwtl
dec
lret
lcall
insb
mov
fs
sub
cmc
inc
add
loop
pop
mov
pop
lret
and
fcoms
sbb
jmp
les
push
outsl
gs
cltd
test
insb
xchg
fsubr
xlat
inc
inc
mov
jns
adc
inc
jecxz
cli
and
add
sbb
sbb
mov
jo
faddl
outsb
xor
mov
dec
push
mov
call
jle
sub
outsb
outsl
pusha
movsb
sti
mov
mov
ficompl
fs
js
sub
fcomp
dec
in
adc
lea
xchg
insl
cmp
dec
enter
lock
int3
aad
loopne
scas
imull
xchg
sbb
or
fisttpl
jle
ds
pop
out
std
test
insl
ljmp
ja
xchg
cmp
scas
jmp
xor
jg
push
jecxz
fnstcw
jb
ja
dec
adc
imul
cli
dec
push
scas
add
rcrl
stos
push
inc
push
repnz
xchg
push
int
ja
stos
out
lock
jne
popa
aas
sbb
repnz
outsb
addr16
xor
cs
cmpsl
gs
mov
outsl
repnz
inc
adc
ja
and
stos
mov
imul
lds
out
movsb
mov
fsubs
ffreep
and
dec
fwait
pop
mov
bound
aad
or
dec
das
pusha
dec
jecxz
dec
push
stos
and
cmp
out
insl
push
pop
inc
iret
push
or
push
sti
mov
and
mov
dec
inc
cltd
mov
test
cmc
xor
les
out
dec
inc
push
mov
cs
in
jp
dec
aaa
dec
jnp
mov
test
push
jecxz
inc
daa
test
int
inc
pop
mov
test
add
out
jmp
mov
mov
mov
sbb
lret
jno
hlt
push
aad
sarb
mov
cmpl
jmp
lods
ficompl
mov
insb
divl
sbb
mov
dec
adc
sub
ss
mov
or
movsb
sub
inc
push
xchg
ss
lret
popa
pop
insb
or
jb
inc
mov
data16
xchg
fcompl
popa
arpl
mov
cli
push
fdivr
movsb
jmp
xchg
in
add
mov
adc
stc
and
lods
sbb
mov
inc
addr16
in
push
test
addb
mov
lods
dec
cmpsl
setno
pushf
mov
imull
cld
out
rclb
mov
cmp
movsl
movsl
or
jmp
addb
push
jne
and
gs
jb
fsubl
mov
jecxz
ja
jecxz
inc
movsb
pop
xchg
mov
addr16
das
jae
repnz
movsl
sbb
push
xor
icebp
test
lock
push
daa
mov
imul
roll
xchg
outsl
daa
and
mov
add
call
imul
int
rol
or
and
jbe
mov
inc
sub
movsl
dec
pop
sbb
icebp
push
outsl
sbb
fnsave
lds
pop
dec
mov
cmc
aaa
ljmp
dec
jae
xlat
idiv
xchg
mov
sbb
loop
ljmp
add
out
add
fs
xorl
mov
xchg
es
imul
pop
mov
mov
and
xchg
add
xchg
add
daa
ficoml
adc
push
std
pop
out
mov
jno
mov
mov
subl
in
sub
bound
add
cmp
andl
push
jno
dec
xor
xor
xchg
sbb
add
and
ja
adc
lods
dec
mov
in
or
pop
movsl
lret
mov
sbb
fwait
std
loopne
stc
ficoml
and
and
in
scas
lcall
lret
or
mov
inc
insb
test
lcall
adc
push
pop
or
sbb
nop
mov
or
out
mov
and
jnp
mov
add
xor
mov
cmc
jae
je
xchg
or
xor
push
ljmp
movsb
out
sub
cmc
into
sbb
popa
loopne
sbb
sub
hlt
xchg
xchg
jne
xchg
mov
rolb
mov
sub
mov
ljmp
sbb
inc
jl
aam
lods
jg
inc
outsl
inc
stos
or
movsl
and
dec
mov
leave
lods
jecxz
in
xor
push
scas
pop
aaa
jno
dec
xor
lret
adc
jl
add
or
xchg
call
and
mov
fcomp
sub
ja
mov
cltd
fcmovnbe
aad
sub
sti
push
cmp
jmp
xchg
in
or
cs
lret
lock
xchg
push
je
mov
xor
add
sahf
iret
add
inc
xchg
add
jbe
jo
jmp
andb
xor
sahf
lahf
sbb
iret
imul
sahf
or
sub
pop
iret
sub
mov
andl
cmpl
jge,pn
sbb
out
dec
push
movsb
in
xor
popf
aas
mov
ficomps
lea
lds
mov
out
cmp
or
sub
stos
pop
xchg
gs
lret
fs
inc
xor
pop
jbe
xchg
imul
mov
jecxz
sbb
jb
das
add
jecxz
add
stc
in
mov
dec
lret
fldt
inc
jbe
mov
ljmp
into
daa
xor
sbb
dec
arpl
cmp
test
lea
aas
lods
sti
inc
lea
aad
in
push
shll
push
cmc
xor
leave
dec
fwait
hlt
fbstp
cld
xchg
cmpl
insl
lods
leave
mov
lds
adc
rorb
pop
xor
or
hlt
push
cmp
push
or
lea
push
pop
loopne
xchg
sub
pop
cli
fdiv
dec
popf
cld
jle
out
xchg
rcrl
xchg
mov
fxch
inc
sub
ficompl
sbb
push
lea
mov
mov
insl
dec
inc
cmp
adc
fstps
lcall
mov
js
in
rorl
pusha
lods
imul
push
add
cmc
fbld
ja
hlt
int
sti
xchg
or
sub
sub
sub
insb
int3
inc
dec
pause
sbb
mov
ss
and
mov
je
daa
rol
add
jae
xchg
mov
pop
mov
inc
mov
fildl
adc
cmp
outsb
shlb
jb
stc
jo
mov
dec
xor
addl
mov
adc
shlb
ja
clc
sbbl
inc
or
mov
shll
mov
add
jmp
in
movsb
jns
dec
push
jle
xchg
test
pushf
cmpxchg
fldcw
push
and
rolb
in
shll
mov
pushf
adc
shlb
lret
aam
or
adc
push
mov
mov
inc
fnstsw
add
insb
daa
add
xchg
mov
mov
mov
fs
or
dec
jno
lahf
sub
mov
add
jno
pop
inc
mov
xor
fsubrs
ret
movsb
das
sbb
jmp
test
lret
pop
or
test
mov
dec
lock
adc
cmpsb
addb
cmpsl
insb
pop
mov
sbb
dec
adc
insb
xchg
push
sub
and
cs
lock
test
mov
repnz
ficomps
or
jge
ja
mov
push
fmull
fwait
leave
in
test
stos
stos
add
sbb
outsl
jl
push
jae
test
insl
cmp
mov
movsb
test
rolb
shl
mov
scas
xor
adc
cs
arpl
push
lods
insb
dec
jbe
jo
fnstenv
mov
cld
test
in
dec
dec
out
or
jp
cmc
sbb
adc
dec
stos
nop
mov
jl
sub
xchg
sbb
popl
mov
dec
les
ror
pop
test
flds
lret
sub
inc
dec
mov
clc
movsl
xor
sbb
adc
leave
sub
or
aam
stc
rcrl
push
jnp
mov
jl
inc
mov
loop
scas
add
jnp
imull
pop
or
clc
dec
lcall
jns
sarl
lret
lcall
adc
stc
lcall
cmp
daa
and
xchg
inc
cmp
jl
aas
and
adc
insl
lcall
ds
pop
je
dec
rcll
adc
dec
lret
inc
push
in
adc
bound
gs
in
cltd
les
cmp
out
aaa
cld
inc
fcomip
xor
rorl
in
mov
jmp
fs
aaa
add
insl
or
imul
out
fistl
ljmp
dec
or
lcall
mov
adcb
cwtl
push
jb
cmp
push
lock
mov
jecxz
ror
outsb
ret
dec
pop
jecxz
cmp
lods
daa
dec
fildl
in
iret
jle
or
sbb
mov
movsb
cmc
rclb
dec
cmp
aas
hlt
pop
ret
cltd
movsl
add
xchg
pop
mov
jmp
sti
js
jb
push
mov
aad
push
fldt
fwait
imul
adc
loop
ljmp
mov
mov
mov
sahf
push
scas
cmc
stos
inc
and
sub
pop
icebp
cs
loopne
xchg
cmp
jns
adc
sbb
push
fiaddl
mov
add
jno
add
jne
lds
repnz
jmp
xor
fidivl
repz
lcall
arpl
int
and
lea
cmp
xlat
push
mov
sbb
and
pop
add
fcomps
mov
mov
adc
add
push
das
imul
xchg
pop
and
mov
movsl
jns
and
jmp
push
fnsave
out
ret
jo
into
mov
cpuid
push
cmp
pop
aad
subl
subb
neg
scas
dec
mov
mov
and
sbb
stos
pop
adc
push
add
mov
dec
data16
pop
loope
repnz
or
mov
mov
fmulp
push
dec
mull
push
imul
rclb
pop
mov
xchg
mov
hlt
xchg
cwtl
mov
pop
pop
cmp
add
fwait
push
stos
lcall
ljmp
mov
andl
insb
adc
add
sarb
cwtl
and
sahf
sub
inc
xchg
jns,pn
dec
xchg
add
cmp
sbb
test
test
dec
push
out
or
fiaddl
adc
sub
fdivs
sub
rorl
cmp
stc
mov
xchg
lret
cli
lret
in
loopne
xchg
test
lret
sti
lea
addr16
aaa
inc
pop
pop
popf
cmp
dec
xchg
out
addr16
lcall
sti
push
sahf
pop
xor
cmp
pop
sbb
cltd
and
push
or
or
cli
gs
pop
and
ja
sub
gs
inc
mov
stos
push
lock
gs
arpl
adc
fbld
out
cld
lahf
inc
mov
and
out
xlat
filds
cmc
cmp
mov
push
cltd
push
xchg
gs
xchg
sbb
sbb
cmpsl
lret
mov
insl
mov
jge
mov
mov
sub
adc
and
fsubs
stc
mov
repnz
or
in
scas
out
ret
les
dec
cli
arpl
jp
mov
pop
and
mov
mov
not
pop
sub
stos
xor
arpl
scas
insb
and
inc
pop
mov
jl
sub
and
mov
imul
int
fs
inc
sbb
iret
add
aaa
ret
sub
xchg
popf
mov
insb
rdpmc
mov
insl
ljmp
adc
add
mov
mov
adc
mov
repz
fbld
inc
stos
or
inc
and
push
add
jmp
pushf
cwtl
jmp
inc
adc
and
ds
out
shrb
adc
mov
cmpsl
cmp
inc
in
mov
cmp
ds
movb
movsb
fwait
jle
daa
xor
dec
js
xchg
cmp
aam
fadds
cmpsb
aas
imul
arpl
mov
mov
les
mov
outsl
ljmp
or
int
sub
movsl
gs
movsl
outsb
pop
loop
or
mov
jmp
rcr
pusha
jo
jb
insl
sub
pushf
ret
mov
shll
cmp
jne
fcmovb
dec
jl
lods
mov
mov
inc
repnz
add
icebp
mov
cltd
push
lahf
aas
add
sbb
adc
js
sbb
lock
mov
mov
popf
out
adc
shl
in
push
adc
arpl
pop
jg
add
rolb
lret
les
mov
inc
mov
je
lods
gs
clc
cli
std
cmp
ja
ds
aad
popa
repnz
out
lahf
rcrb
in
lahf
aaa
in
es
insb
jno
pop
mov
dec
mov
mov
xchg
rcrl
xchg
xor
fcmovnu
gs
or
adc
aam
inc
adc
aad
push
pop
mov
neg
sub
sbb
push
and
xor
dec
fcomps
test
js
adc
xchg
mov
andb
inc
inc
fimuls
and
in
stos
jg
and
in
fidivrl
movsl
xor
daa
mov
iret
aaa
scas
leave
ds
sub
mov
xchg
mov
push
notb
sub
add
pop
adc
aad
mov
ret
incb
outsb
sub
icebp
and
push
and
je
fdiv
out
fwait
stos
dec
push
stc
imul
js
hlt
cmpsl
mov
or
sub
and
test
pushf
mov
sbb
mov
cmpsl
enter
dec
stc
adc
or
dec
xor
adc
pop
and
mov
xchg
fmull
cmpsb
xor
mov
push
or
rolb
cmp
hlt
popa
cmpsb
mov
cmpsb
inc
pushf
std
movsb
xlat
mov
out
aas
and
dec
ret
xchg
mov
cmp
imul
je
mov
cltd
xchg
out
pop
mov
jbe
ds
dec
es
addb
sbb
in
arpl
movsl
xor
cmp
mov
cs
adc
fcmove
les
adc
repnz
ret
inc
cmp
adc
adc
jbe
fwait
lea
and
pop
xchg
lods
fadds
lret
pop
inc
pop
inc
sbb
loop
jecxz
lcall
xorl
fcoml
fdivs
add
inc
jno
push
aad
arpl
adc
or
lods
aam
mov
shl
mov
fcompl
inc
lret
mov
xor
pop
outsl
ss
pop
or
ja
mov
inc
push
adc
aas
xchg
xlat
fildl
cmp
shrb
insb
repnz
shlb
scas
out
jbe
inc
in
dec
cli
and
pop
scas
inc
sub
mov
jns
lds
mov
outsl
ret
imull
dec
dec
mov
imul
sti
inc
daa
dec
push
cli
jno
push
sbbb
jle
repz
adc
jb
jecxz
mov
add
imul
dec
cld
xor
pop
cmp
and
xorb
pop
insl
add
or
push
sbb
inc
mov
adc
nop
inc
test
jg
xchg
cmp
mov
mov
xor
insb
movl
xchg
int
adcb
sahf
add
subl
mov
inc
int
out
inc
dec
aam
lock
aas
cmp
loopne
add
add
pop
and
mov
arpl
jnp
push
pop
push
xchg
pop
mov
lock
mov
in
pop
ret
sbb
lock
xor
push
faddl
push
xorl
enter
loopne
adc
pop
ss
out
out
shl
lods
mov
iret
hlt
arpl
into
enter
scas
cltd
lret
leave
mov
mov
or
icebp
inc
jbe
hlt
pusha
adcl
out
or
xor
inc
mov
hlt
adc
xchg
cmpsb
mov
and
jae
scas
xlat
push
js
jnp
xchg
dec
xchg
jmp
sbb
ret
mov
mov
enter
xchg
mov
pop
adc
xchg
sbb
int
or
clc
xchg
inc
add
mov
ret
push
mov
cmc
pop
cmp
and
push
test
jns
rcll
mov
adc
cli
dec
aas
sti
inc
mov
pusha
ficompl
lds
nop
pop
jmp
or
xor
es
mov
not
and
stc
fldenv
cmp
dec
inc
xorb
mov
jo
in
aaa
in
inc
add
xchg
lock
rorb
mov
loop
in
dec
jg
and
push
aad
int
mov
cld
cld
sub
inc
adc
lods
cmc
imul
notb
dec
outsb
adc
jo
stos
pusha
ds
mov
jnp
cwtl
xchg
jnp
xchg
inc
pushf
jo
rol
push
or
lea
lods
in
xchg
jle
mov
addr16
xor
lret
jb
xchg
adc
jp
imul
movsl
adcl
push
xor
sbb
jmp
cs
jb
rorl
lret
push
test
test
ss
mov
seto
or
repnz
imulb
out
out
ret
insb
inc
xchg
jns
sbb
jnp
push
rcrb
and
cwtl
sub
in
push
lods
fs
ljmp
pop
jbe
insb
orb
or
mov
arpl
notb
aas
movsl
jmp
or
cmpsl
mov
push
push
insb
aaa
push
inc
test
cld
push
mov
dec
jge
jge
dec
mov
in
cwtl
cmp
faddl
push
outsl
imul
adc
es
dec
ficomps
and
mov
inc
test
push
iret
aad
xchg
in
loope
gs
cmp
hlt
sub
rcll
cwtl
arpl
sub
loopne
pushf
js
add
mov
xor
jo
push
insl
mov
xchg
out
mov
fisubs
lods
sub
arpl
sub
mov
into
adc
xchg
sbb
xchg
mov
xor
jg
xchg
or
repz
sbb
push
fisttpl
mov
jns
mov
adc
iret
xor
pop
aaa
jp
pushf
faddl
adc
in
push
ret
xor
imul
inc
repz
sbb
sub
inc
aam
movsb
adc
mov
sub
clc
push
pushf
sub
mov
jmp
cmp
xchg
stc
les
jp
xchg
jbe
subb
push
sbb
jmp
mov
jns
cwtl
xor
pusha
sub
mov
xchg
bound
dec
sbb
dec
fwait
or
xor
adc
mov
cmp
xorb
jo
dec
popa
jae
out
xor
nop
xchg
leave
lcall
int3
jle
in
xchg
lds
lock
fbstp
lret
fld
cs
dec
or
sarb
cmp
shr
dec
xorb
cli
jg
scas
insb
mov
lds
mov
cmp
out
cmpsb
mov
leave
imulb
inc
or
sti
push
rol
mov
lahf
cmp
repz
sub
or
gs
je
orl
out
push
movsl
ret
int3
in
les
xorb
fistps
mov
inc
jo
push
pop
stc
mov
inc
cmpxchg
mov
out
xlat
mov
pop
inc
cmp
cmc
fcoml
mov
adc
popf
mov
dec
cwtl
xchg
pop
std
adc
sbb
and
imul
das
ja
or
mov
lods
imul
or
mov
loope
xor
repz
fstl
fldl
push
pop
movsl
sbb
mov
or
xchg
cmpl
icebp
xor
xlat
add
adc
mov
jp
sub
adc
add
xchg
sahf
test
dec
test
rcrb
sub
jecxz
pop
fistps
repnz
dec
aam
adc
push
sbb
xchg
add
or
iret
pop
jmp
jae
pop
mov
fcomi
push
outsb
pop
mov
push
loope
sub
push
sbb
std
sbb
or
negb
dec
rclb
sti
sahf
or
outsb
xor
into
inc
aaa
cmpb
andb
pop
jge
xchg
mov
incb
push
lret
sub
sti
jne
or
mov
dec
pop
fcoms
into
jmp
add
mov
mov
aam
xor
hlt
js
das
mov
out
es
and
inc
loopne
push
inc
push
ret
sub
dec
sbb
cwtl
cltd
push
push
cmpb
nop
mov
push
push
and
lock
and
xchg
pop
je
hlt
push
cmpsb
or
loope
jae
mov
out
cmc
test
test
scas
test
cmc
out
movsb
dec
mov
add
mov
lods
lods
shl
repnz
adc
fdivrl
ficoms
add
test
or
adc
jns
popa
cs
fcoms
add
js
mov
lea
movb
repnz
ss
fs
push
sub
stos
lods
jo
mov
inc
cltd
mov
or
inc
lds
inc
js
jns
stos
cmpl
inc
sahf
and
outsl
out
jmp
add
jns
pop
sub
rcl
mov
add
sbb
pushf
inc
call
push
push
inc
out
add
int
int
push
lock
in
pop
cltd
inc
sub
push
out
popf
mov
int3
rcrl
sbb
xchg
rolb
xor
pop
mulb
pop
jnp
leave
iret
mull
shll
or
push
aaa
cld
aam
xchg
call
pop
sub
dec
pop
inc
roll
fwait
pushf
aaa
pop
sbb
add
sub
sub
scas
testb
addb
shrb
sub
movsb
xor
and
mov
pop
dec
hlt
int
sbb
inc
push
mov
and
ja
xchg
pushf
adc
dec
aas
cmp
mov
imul
jl
dec
dec
or
mov
dec
fs
insb
adc
pop
mov
lea
das
cmp
mov
sahf
mov
scas
nop
mov
ret
daa
pushf
enter
dec
rcrl
clc
mov
jns
jl
push
add
jbe
sbb
movsl
rorb
dec
pop
add
adc
dec
pop
stos
ljmp
jge
les
into
frstor
mov
push
in
mov
sbb
icebp
sbb
adc
sub
sbb
add
xchg
cmpsb
cwtl
test
jnp
mov
or
es
push
fistl
enter
cmc
jne
lea
daa
mov
and
jnp
adc
les
lea
adc
inc
xchg
cs
dec
cmp
adc
sbb
loope
pop
sub
xor
push
sbbb
lret
lahf
and
ja
xchg
adc
mov
jb
cmp
lea
mov
inc
daa
lret
add
js
cmpsb
mov
dec
call
daa
test
mov
loope
lahf
push
mov
pop
mov
sub
fs
inc
lods
mov
adc
xchg
sub
dec
mov
pop
pop
pop
aaa
addr16
adc
add
or
insb
js
cmp
xor
stos
js
jnp
popa
ret
mov
idivl
jmp
pop
loopne
xor
inc
lods
push
mov
fsubp
imul
xchg
cmp
and
out
bound
cmp
in
shrb
in
and
and
movsb
jmp
add
and
cmp
into
notb
nop
xlat
jle
fisubrl
inc
pop
cmp
pop
xchg
jnp
ror
fistpll
mov
cmp
mov
adc
jge
nop
les
cs
stc
gs
es
pop
fiaddl
add
in
and
sbb
insb
jbe
jle
rclb
push
add
cmp
lds
or
mov
cld
dec
pop
jge
and
pop
or
cmp
imul
mov
js
pop
pop
push
imul
scas
dec
jbe
and
cmp
add
jp
call
and
xor
inc
pop
stos
push
iret
ja
es
jecxz
les
mov
push
jmp
mov
shl
cltd
mov
dec
cmp
out
fbld
lods
nop
outsl
push
sbb
int3
mov
or
mov
hlt
dec
movsb
or
das
add
sbb
jnp
enter
addr16
push
or
dec
shrl
lret
insl
xchg
in
adc
xor
xor
fidivrs
push
fsubr
adc
outsb
lock
cmpb
out
push
mov
sbb
mov
push
jbe
cmp
addr16
jae
xorb
mov
gs
pop
stos
arpl
lods
mov
pop
xchg
arpl
adc
movsb
loopne
enter
das
fsubrs
mov
fwait
loope
in
int3
out
inc
loop
push
xor
jl
pop
xor
push
ljmp
cmp
and
stos
fs
and
mov
jns
enter
push
aam
jmp
movsb
inc
xchg
jg
sbb
cmp
inc
and
das
mov
cmp
insl
in
or
loop
mov
sarb
dec
sbb
and
mov
out
sahf
rcl
outsl
cli
push
pop
xor
test
mov
jge
mov
icebp
jno
loope
sub
adc
adc
imull
adc
pushf
out
pop
xorl
out
fcoml
dec
js
lock
cmp
xor
xorl
lods
inc
jo
inc
mov
ror
xchg
outsb
cmp
aas
icebp
push
or
pop
pushf
or
int
push
push
adc
cmp
mov
inc
mov
adc
dec
jae
sbb
dec
daa
mov
mov
jb
sar
pop
sub
xchg
pop
inc
call
push
lea
mov
sti
movsb
adc
test
stos
mov
xorb
lods
int
jne
pop
cmp
ret
cmpsl
imul
cmpl
dec
test
nop
add
sbb
add
xor
jmp
jge
sub
lcall
xchg
int3
lret
aas
sbb
push
jge
icebp
bound
push
repz
movsl
or
ja
inc
sarl
add
repnz
icebp
idivb
add
push
hlt
daa
jns
shl
and
outsl
mov
sbb
adc
inc
outsb
lods
mov
fcompl
mov
or
inc
and
repz
aas
movsl
xor
mov
sbb
stos
mov
add
add
adc
add
mov
stos
negb
jne
in
bsr
aaa
and
stc
push
push
out
xchg
outsl
std
or
test
inc
sbb
jns
or
inc
mov
pop
mov
mov
xor
aad
fucomp
leave
je
cmpsb
xchg
cmpsl
push
cmp
fidivrl
aas
aas
aaa
mov
lock
mov
outsl
sahf
sarl
inc
aad
iret
inc
pop
shlb
sub
and
nop
mov
shrl
loope
les
fistpll
add
dec
or
fs
test
mov
dec
pop
dec
add
jae
add
cmp
insb
cmc
js
mov
push
mov
mov
jecxz
mov
mov
mov
xchg
dec
and
js
popf
xchg
dec
outsb
adc
nop
xlat
mov
ljmp
mov
sub
out
ja
and
xchg
mov
cmpsl
inc
lret
fisubl
addr16
mov
flds
jge
out
movsl
lret
inc
cmp
inc
dec
in
push
add
pop
cmc
cld
repnz
inc
fwait
xor
rcrb
es
lea
lods
out
cmp
daa
js
js
mov
adc
cmp
fs
dec
repnz
les
int
pop
aaa
cli
clc
jle
bound
jl
jecxz
xchg
and
aam
insl
push
cmp
push
adc
inc
sbb
jne
mov
fisttps
les
fs
imul
sbb
push
sahf
push
mov
and
das
add
mov
jbe
dec
push
sbb
sti
bound
cmp
pop
shll
xchg
add
push
pop
fsubrs
les
pop
xchg
push
aad
iret
stos
xchg
inc
std
lds
idivl
mov
sub
hlt
or
pop
sub
sub
outsl
and
xchg
fstpt
test
add
stos
mov
imul
out
out
lret
adcw
testl
popa
in
inc
inc
rcl
fists
lret
lahf
mov
mov
inc
dec
hlt
xchg
sbb
push
aaa
ja
pop
subb
inc
and
mov
adc
mov
and
fistpll
rorl
sbb
in
cmp
in
and
sub
mov
dec
repz
inc
cmc
and
sbb
xor
add
lds
lahf
add
data16
push
cmpsl
xchg
sti
push
xchg
or
mov
adc
loope
mov
fisubrs
dec
and
push
loop
jnp
ja
dec
mov
test
lock
push
insl
orl
cs
pop
sub
dec
loopne
test
outsb
inc
xor
iret
daa
leave
sbb
pop
int
and
dec
subb
sub
mov
clc
mov
dec
test
leave
sbb
jbe
mov
jo
stos
sbb
jg
mov
loop
out
lcall
out
out
push
or
xor
aaa
ror
xchg
scas
fstpt
xchg
adc
es
inc
ret
sbb
sbb
inc
mov
mov
lea
adc
inc
popa
mov
jo
int3
adc
lods
xchg
stos
in
push
push
loopne
jae
scas
in
sbb
mov
leave
and
sbb
dec
jg
sti
sbb
outsl
mov
jg
outsb
adc
sub
jae
pusha
test
push
cmp
adc
sub
int
test
xchg
mov
push
fistps
xchg
or
imul
mov
lret
fcomps
sbb
fs
jnp
inc
icebp
or
pop
js
pop
adc
icebp
pop
cmp
jg
inc
sbb
insl
cmp
dec
imul
notl
test
ss
mov
subl
pop
scas
cmpsb
and
xor
insb
dec
push
into
lods
addl
jno
add
jb
int
lds
clc
jle
or
jmp
cmp
mov
pop
call
or
adc
std
int3
andl
hlt
andl
and
mov
cmp
or
scas
xchg
mov
and
jno
push
ja
repz
sbb
outsb
sub
sub
adc
sti
sbb
jns
popa
dec
xchg
add
xor
cmpsb
xor
cmp
lds
jecxz
sbb
fnstcw
cmp
dec
jns
arpl
out
jecxz
jg
dec
sbb
rcl
mov
test
xor
aam
shlb
jle
mov
adc
popf
dec
mov
xor
adc
fwait
xor
test
push
mov
xchg
jl
clc
and
and
dec
cs
push
xchg
dec
adc
ja
mov
adc
dec
mov
xchg
or
fcomi
sarl
add
cmp
popf
fcompl
xchg
sbb
stc
hlt
popa
xchg
cmp
pop
pop
xchg
xor
dec
sbb
popa
sbb
call
cmp
push
js
dec
out
loopne
es
inc
test
loop
fmul
test
mov
scas
dec
mov
fnstenv
loop
xor
add
xchg
int3
insl
push
mov
ja
adc
adc
mov
mov
mov
cmp
lret
clc
mov
mov
stos
shr
test
or
sub
fcmovnbe
fistpll
mov
xchg
sbb
cli
movsl
mov
int3
xchg
fstps
xchg
pop
pop
cmpsl
rorb
test
pop
mov
inc
lods
fisttps
adc
mov
mov
dec
lcall
lcall
dec
mov
enter
nop
xchg
jnp
fidivl
jae
cs
js
or
lahf
pop
mov
push
dec
in
sti
dec
dec
outsl
xor
shl
and
jae
in
push
jp
jp
xchg
loope
iret
daa
mov
cmp
out
lret
jle
jp
movsl
cmp
cmp
push
xor
jno
or
jl
fistps
loop
ljmp
xchg
sub
das
jge
bound
jmp
mov
insb
push
std
stc
rolb
sub
clc
divb
jnp
lcall
or
inc
loopne
mov
scas
adc
pop
xor
cld
push
out
stc
shll
cli
ljmp
pop
cmpsb
add
jl
dec
pop
jns
inc
int3
jle
fsubrs
shl
sarb
dec
loop
dec
adc
mov
sub
sbb
pop
cmp
lahf
es
fcoml
int3
loop
dec
jbe
fdiv
in
aaa
mov
pusha
push
lea
out
adc
int3
and
push
or
xchg
xor
jge
or
xor
xchg
fildl
xchg
or
fcmovbe
test
sbb
vmptrld
out
call
jge
vmovhpd
into
add
ja
push
sbb
fistl
add
cmp
int
stc
xor
stos
inc
cmp
mov
push
fsubrl
jno
push
or
mov
inc
fimuls
out
pop
inc
sahf
lahf
inc
mov
sbb
stos
in
cmp
sbb
jnp
mov
inc
int3
fcompl
mov
stos
sahf
mov
ss
push
pop
es
fcom
lcall
lcall
jl
ret
sbb
dec
lods
cmp
fs
in
dec
mov
lahf
enter
fistpl
inc
cmp
add
js
xchg
ljmp
xor
pop
mov
stos
movsb
dec
movsb
rcrl
bound
push
push
adc
out
xchg
pop
aam
pop
fwait
and
jp
jmp
dec
ja
stos
clc
imull
push
sbb
filds
fbld
data16
inc
add
sub
adc
cmpsl
out
adc
cmc
mov
mov
sbb
dec
sahf
inc
xchg
lcall
repz
rorb
fs
push
mov
fstl
cmp
lods
sbb
mov
iret
int3
pusha
mov
test
mov
fsubrp
in
ljmp
adc
sti
lea
cwtl
xchg
dec
jl
imul
and
mov
push
push
pop
cmp
mov
dec
add
ja
and
rorb
mov
xchg
ret
imul
enter
fildl
xchg
into
fscale
dec
sub
cmpsb
sti
mov
pop
xchg
mov
xor
mov
loope
xchg
rorl
leave
sbb
test
xchg
xchg
and
divl
cmp
lods
aad
cld
mov
inc
jno
mov
ret
mov
sub
mov
fwait
xor
cmpsb
pop
dec
and
insl
dec
jae
iret
aam
pushf
fcoms
stos
mov
mov
sti
es
data16
cmp
aam
add
dec
ja
clc
adc
test
inc
dec
mov
std
inc
mov
mov
jb
clc
das
popf
or
inc
push
xor
test
sbb
scas
mov
pop
and
mov
jl
mov
cld
loope
cmp
iret
cli
and
and
xlat
shrl
push
jmp
movl
mov
sub
add
movsb
mov
mov
pop
inc
test
aam
outsl
stc
das
fimuls
fldcw
and
mov
fldl
dec
xor
adc
and
hlt
xor
rol
outsb
mov
ficompl
fldenv
mov
xor
jns
lds
pop
das
aas
fs
mov
pusha
mov
xlat
pushf
or
addl
jge
mov
dec
inc
mov
push
adc
xor
pop
das
push
xchg
mov
adc
push
idiv
jl
push
and
cmp
pop
xor
gs
add
je
addr16
aad
lods
mov
or
loop
sub
sub
and
mov
pop
test
and
sub
and
xchg
ss
fists
imul
dec
adc
clc
pop
ret
out
rolb
shl
into
test
addb
cmpsb
push
mov
scas
jecxz
push
cmp
add
cwtl
lcall
cmpsb
pop
fimull
or
pop
pop
xor
mov
inc
lods
lahf
clc
daa
outsl
fimull
into
adc
pushf
test
dec
sbb
dec
push
cwtl
sarb
push
jg
stos
icebp
notl
test
lds
mov
imul
jecxz
mov
mov
xchg
and
dec
mov
mov
std
cmc
jg
jb
enter
faddl
jae,pn
and
arpl
outsl
js
cbtw
xchg
fisttpl
pop
adc
nop
sarl
or
pop
jle
call
cltd
lret
push
or
das
mov
cmp
jmp
sub
and
dec
pop
mov
lea
js
ds
push
dec
add
rcr
es
lret
out
fistpl
iret
push
loop
test
lahf
loop
jl
out
loope
xlat
push
jle
mov
push
mov
adc
repnz
jmp
pop
sbb
jp
adcl
icebp
cmp
cmp
int
push
jbe
fwait
adc
add
push
je
rcl
pop
mov
addr16
popa
add
push
and
int
dec
icebp
cmp
packsswb
push
inc
dec
popa
adc
jne
int
bound
les
mov
test
cmpsl
adc
sub
add
arpl
adc
mov
xor
scas
and
jg
mov
xchg
xorb
or
inc
fwait
shrb
or
dec
pop
int3
sub
out
xchg
pop
fadds
jne
push
pop
ss
mov
jmp
xor
inc
lea
dec
adcl
xor
outsb
jmp
test
xor
lods
sbb
leave
jbe
hlt
cli
sub
xchg
mov
inc
jae
nop
or
sar
jo
pop
cmp
push
jmp
popf
mov
jne
jo
addl
sub
rcll
lock
pop
sub
pusha
mov
out
dec
adc
mov
hlt
mov
popf
out
jns
mov
adc
push
rclb
sub
data16
aas
icebp
adc
aas
in
insb
cwtl
lods
jp
pop
xchg
inc
std
cmp
xchg
pop
sahf
push
sahf
lcall
idivl
jmp
xchg
cs
bound
mov
pop
test
cmpb
push
sbb
iret
pop
jo
into
jbe
je
cmpsb
fdivr
ret
sub
push
repnz
pop
ja
outsl
pop
pop
les
mov
jg
loop
ret
outsb
dec
out
or
insb
mov
jge
dec
je
xchg
add
test
insl
jb
test
popa
mov
je
sbb
stos
into
notl
hlt
test
inc
add
fisubl
sub
popa
push
fidivl
es
xchg
mov
lods
push
in
adcl
fs
add
adc
jge
mov
movsb
dec
icebp
cmp
xor
test
loopne
aaa
test
jg
test
aam
and
xor
mov
outsb
push
pop
inc
hlt
push
mov
sbb
clc
jl
gs
mov
xor
adc
iret
cmc
and
mov
cs
inc
jp
pop
fwait
add
adc
scas
pop
mov
imul
repnz
mov
in
fnstenv
push
xor
iret
mov
adc
int
mov
mov
xchg
push
clc
adc
mov
mov
dec
outsb
mov
push
push
andb
push
scas
cmp
test
sub
inc
xchg
push
mov
cmpsb
or
mov
mov
sti
xchg
sti
xor
cwtl
js
xchg
sub
xlat
jbe
cmp
adc
sbb
pop
adc
adc
mov
repz
sbb
ffree
adc
pop
dec
loopne
xchg
insl
hlt
push
lret
bound
test
xchg
inc
add
in
out
mov
inc
imul
cmp
dec
loope
xor
cmp
dec
pop
dec
push
push
pop
lock
sub
dec
iret
fucomp
or
mov
jg
iret
repz
test
jle
sbb
shl
loop
adc
fadds
clc
xchg
loop
scas
pop
mov
jae
adcl
xchg
dec
cmc
xor
sub
out
and
popf
mov
adc
data16
mov
xor
into
je
jmp
sbb
adc
mov
ret
aaa
dec
aas
ficomps
and
push
mov
mov
or
out
loop
in
push
subb
fwait
inc
mov
jl
imul
push
fistpl
cltd
jae
ss
fldcw
sub
mov
dec
xchg
fildl
fistps
fdivl
push
inc
stc
mov
loop
add
outsb
cmc
jae
ret
inc
sbb
inc
fisttpl
add
aam
or
mov
scas
mov
cmpsb
sub
inc
mov
or
sub
pop
movsl
jle
lcall
test
rclb
mov
aam
inc
jg
push
scas
mov
aam
in
mov
cmp
pop
jl
push
sub
sbb
adc
clc
or
icebp
call
dec
pusha
xor
cmc
sbb
ds
jg
or
mov
dec
or
xorl
jg
imul
ret
xor
xchg
pusha
aad
inc
mov
dec
mov
fsub
push
adc
outsb
xor
and
out
add
orb
inc
push
jae
bound
mov
int
xchg
and
mov
in
clc
push
hlt
cmp
pop
mov
hlt
jmp
outsb
xchg
xchg
in
xchg
loopne
jg
pusha
outsb
out
mov
addb
loop
nop
dec
lret
jns
mov
push
call
aam
xchg
pop
popa
push
jmp
loope
add
movl
or
test
pop
inc
cmpsl
cmp
sahf
aas
loope
lock
xor
jg
in
imul
push
cmp
aad
repz
push
sti
sub
test
out
cmp
pop
adc
loope
push
je
xchg
xor
mov
jg
cs
xchg
leave
outsl
rcrb
or
imul
inc
mov
aad
das
inc
and
mov
inc
outsl
cmpb
jnp
xchg
mov
lcall
cmp
test
add
fstpt
or
imul
sbb
and
or
pop
test
out
movsb
test
jo
sbb
popa
inc
por
jl
roll
dec
jmp
mov
arpl
adc
sbb
dec
in
mov
sub
sbb
jnp
jp
cli
sub
mov
inc
ret
mov
fsubl
pop
xchg
fucomp
inc
js
lahf
out
ret
sbb
push
repz
cmpsb
or
mov
cmp
pop
pop
or
cltd
push
and
sbb
lret
mov
scas
nop
pop
pop
cmc
cli
notl
stos
aam
inc
and
ljmp
xor
sti
jo
loope
stos
insl
inc
into
or
test
aas
das
data16
stos
test
popa
push
repz
enter
cmp
sub
ret
xor
popl
outsl
iret
addr16
stos
mov
mov
aam
jo
xor
jmp
cwtl
and
js
mov
mov
and
sub
add
mov
push
pop
nop
xchg
into
js
insb
push
xchg
inc
clc
repz
add
pop
rorl
sbb
rolb
fdivs
xor
je
dec
mov
jmp
add
fidivl
lods
dec
inc
mov
lods
xor
mov
push
pmulhuw
jae
stos
lret
andb
mov
dec
loopne
adc
movsb
mov
push
xor
shr
test
hlt
jo
clc
mov
and
fstl
or
mov
xchg
pop
mov
subb
sbb
push
gs
xchg
cmp
and
lret
test
arpl
xchg
or
cli
imul
xor
outsl
cli
sti
ss
adc
clc
mov
cld
sub
xchg
movsb
je
mov
fxch
data16
testl
add
pop
xor
dec
loopne
push
movsb
sub
or
shrb
mov
mov
mov
mov
cmp
adc
xchg
dec
int
je
inc
loopne
and
pop
loopne
inc
shlb
fwait
nop
stc
jns
xor
jns
ret
mov
and
stc
mov
push
movl
dec
or
jge
cmp
add
fisubrs
mov
xchg
cmp
ret
aam
add
into
xchg
addr16
inc
scas
int3
sbb
lahf
ss
sbb
add
push
adcb
pop
fnstenv
xchg
xor
mov
mov
mov
aad
and
xchg
andb
cmp
push
mov
cmc
add
dec
in
sbb
mov
cmp
cmp
jno
mov
mov
or
cmpl
jg
pushf
add
rcr
mov
stc
jg
in
mov
fsubrs
cltd
inc
mov
mov
in
mov
mov
sbb
mov
mov
xlat
xor
and
add
pop
and
xor
pop
in
int
das
lods
test
paddusw
sub
ret
or
xor
shlb
adc
and
addr16
test
push
push
andb
inc
mov
in
imul
and
sub
out
fucomp
and
lods
cmc
pop
mov
in
mov
sbb
xor
mov
adc
mov
xchg
shrb
mov
sub
outsl
notb
lock
ja
into
aas
mov
or
outsl
sti
mov
pop
mov
mov
mov
mov
cs
ret
adc
cmp
rorb
jl
sbb
pushf
ds
or
cmp
xchg
add
jo
xchg
sarl
or
ja
out
sub
movsl
add
mov
aam
rcr
cmovl
xor
test
push
repnz
in
mov
sahf
xor
out
scas
daa
adc
mov
ret
pop
loopne
jge
imull
push
das
lcall
or
les
aam
aam
and
cmp
sub
addb
packuswb
addr16
dec
cmpsb
nop
dec
push
xchg
cs
jo
scas
cmp
mov
jnp
mov
aas
data16
pmaddwd
sbb
dec
lcall
add
loope
ds
ret
scas
out
into
inc
push
mov
pusha
mov
sti
xchg
pop
mov
push
jnp
add
into
xchg
push
out
and
mov
xor
test
jecxz
xor
and
inc
lret
pop
call
cld
sub
adc
clc
add
sbb
mov
outsb
cmovge
int3
jmp
mov
add
xor
push
sti
loopne
jge
lods
dec
sub
scas
mov
xlat
cmp
movsb
mov
inc
xchg
divl
aam
and
std
xchg
xchg
xchg
cmp
cmp
jb
push
lea
push
shl
sub
push
push
ret
cmc
negl
sahf
pop
and
or
mov
cmp
or
testb
jge
mov
lret
and
cmp
mov
aad
hlt
lods
sbb
dec
pop
div
mov
pop
xchg
xor
pop
inc
add
inc
sbb
cs
xchg
cld
xor
jnp
mov
sbb
loop
outsb
aas
push
xchg
pushl
and
pop
push
inc
stos
je
fs
pop
jp
jge
rcrb
lret
in
xchg
in
pop
scas
fidivrl
cmp
sbbb
shrb
cmp
adc
lock
aaa
inc
cmp
mov
jl
pop
out
gs
imulb
jge
cmp
cltd
add
mov
femms
loop
xchg
cmpsb
mov
test
ljmp
lods
fstpt
loopne
pusha
shll
gs
cltd
inc
dec
mov
repz
push
testl
sbb
ds
sbb
pmaxsw
pop
pusha
add
push
xchg
jl
and
int
das
aaa
pop
js
xchg
sbb
std
add
sbb
push
aam
sbb
lret
arpl
lods
imul
test
cmpsb
mov
dec
dec
pusha
adc
push
sub
mov
sti
insl
pop
jecxz
cmp
mov
insl
cli
pushf
repz
pop
adc
xor
fisttps
test
jb
inc
in
xor
fs
aas
sub
movsb
cltd
testb
xchg
lcall
xor
lret
xor
cld
mov
aam
mov
cmp
dec
sbb
dec
lahf
adc
cld
repz
mov
aam
movsb
je
lret
hlt
push
jne
icebp
adc
mov
dec
adc
std
insl
sub
cmp
das
div
insl
out
pushf
inc
cmp
lds
dec
lahf
rorl
lahf
aad
dec
dec
scas
jl
ss
nop
outsl
pop
and
sub
pop
jg
aas
mov
scas
adc
inc
ljmp
sti
jge
test
inc
mov
ret
xchg
movsb
loop
adc
lds
ret
jae
daa
fimull
push
lods
sub
xor
movl
lahf
sbbl
inc
insb
add
cmpsb
sbb
bound
pop
xor
mov
into
rcll
shll
scas
cmpb
mov
dec
push
aas
stc
nop
fsubrs
pop
cmc
and
push
out
add
test
dec
and
ss
stc
jo
data16
pop
inc
cmp
adc
sub
lcall
lods
stos
hlt
jnp
push
pop
lret
and
xchg
sbb
outsb
fcomp
cmc
outsl
mov
jmp
mov
xchg
mov
imul
mov
test
push
fldl
cmp
mov
pop
add
jnp
xchg
aas
xor
jb
add
ss
jg
pop
xor
bound
jbe
aad
out
addr16
and
push
sbb
fisubs
mov
mov
add
inc
mov
dec
push
push
jae
hlt
fmull
aaa
jno
std
and
mov
popf
loopne
fwait
mov
inc
stos
cmp
call
mov
xchg
xor
in
cmpsl
nop
lcall
adc
pop
add
rorb
add
pop
push
pop
fucomi
jle
adc
sbb
push
jb
sahf
sbb
fadd
cmp
push
rol
mov
jns
int3
les
pop
and
aad
imul
sub
mov
cmpsl
jmp
sti
stc
shll
movsl
movsb
xchg
push
sub
dec
sub
mov
jge
pop
mov
repnz
cmpsl
xor
stc
cmpsl
out
daa
cmpsl
enter
push
mov
test
mov
adc
fwait
ss
mov
test
rorl
inc
cmp
pop
pop
outsl
xor
push
cmp
jo
pushf
pusha
int
or
push
add
mov
jge
aam
test
neg
xchg
clc
cmpsb
clc
ss
in
cmp
int
popf
lcall
xor
fdivs
inc
arpl
add
lret
pop
push
jne
popw
push
stos
testl
jmpw
cmp
sub
mov
dec
out
lods
dec
sbbb
ss
mov
push
and
sub
xor
stos
dec
sub
push
je
mov
addr16
xor
mov
subl
xor
and
aas
push
add
clc
enter
or
push
fists
repz
stc
mov
insl
add
xor
jb
dec
lds
repz
icebp
cli
stos
cwtl
scas
xorb
lcall
test
cmp
adc
pusha
add
cltd
inc
pusha
shrb
mov
or
enter
stos
inc
lea
outsl
pop
andb
int3
imul
mov
cmpsl
outsb
inc
les
add
push
shll
loop
in
out
mov
mov
jp
pop
xchg
jne
push
adc
mov
inc
mov
mov
or
insb
and
aas
cmpsl
jbe
cmp
ja
cmp
call
jg
lock
lock
sbb
add
mov
push
dec
ret
dec
xor
enter
and
xor
cmpb
clc
outsl
jecxz
shl
mov
pop
xchg
push
dec
sub
mov
popa
clc
in
imul
pop
fcmovbe
push
mov
adc
scas
push
adc
int
xchg
faddl
mov
ss
outsb
add
sbb
sbb
jecxz
je
fsts
push
xor
lods
cmp
fdivrs
dec
adc
xchg
push
loope
mov
fisubl
cmp
or
repz
div
xor
fstpl
pop
mov
popa
mov
and
inc
mov
jecxz
addl
xchg
test
insb
insl
sub
stos
pop
xchg
jno
push
sub
dec
mov
mov
aaa
mov
mov
and
mov
das
sbb
sbb
cmp
cmp
iret
cmp
minps
xchg
or
jae
cltd
je
and
fcomps
sbb
add
adc
in
or
cld
jecxz
inc
addl
inc
bound
es
divl
jecxz
enter
xchg
ss
dec
pop
add
stc
and
or
repnz
push
daa
push
xchg
iret
lcall
xchg
int3
mov
mov
inc
fidivrs
outsl
shll
mov
dec
testl
pushf
out
ret
mov
sub
out
dec
jae
jg
xor
fildl
sub
pop
leave
outsl
enter
fdivl
jecxz
mov
in
stos
call
jl
pop
jbe
mov
and
outsl
xor
xor
lret
xchg
stc
rorb
pushf
xor
addr16
in
add
add
cltd
sbb
test
jne
xor
lahf
mov
jb
lea
jecxz
mov
pop
or
push
mov
je
adc
popa
jbe
movsb
popf
jg
cmp
aaa
in
lock
icebp
lds
mov
loopne
adc
in
movnti
ds
pop
fdivl
cmp
shrd
rcrl
jg
sahf
shll
subb
pop
outsb
int
mov
xor
inc
add
movsb
jg
addr16
jae
lds
jo
cmp
lahf
int3
movsb
cmp
aad
fdivrl
cmp
rcrb
add
adc
dec
or
lock
lret
mov
jg
stos
push
pushf
dec
sub
clc
xchg
cwtl
sub
adc
xchg
movsl
icebp
jmp
lds
adc
ret
imul
dec
pop
lock
ds
int3
pusha
mov
dec
cmp
sahf
pop
mov
and
nop
cmp
cmpsl
popa
push
sub
mov
ss
add
jmp
fs
fimull
push
inc
data16
dec
add
xchg
iret
jae
cmpsb
arpl
popf
cmp
jo
hlt
sub
stc
mov
rolb
inc
ficompl
sub
adc
stos
mov
cmp
pop
xchg
cmp
mov
in
xchg
ret
jle
add
sahf
cmp
push
das
sbb
shl
inc
fistpll
pop
jp
adc
xchg
loopne
mov
dec
pop
insb
div
sti
or
cmp
xorl
mov
in
fwait
loope
push
sub
loop
stc
add
sbb
lds
loope
in
stos
cwtl
push
adc
and
add
js
push
and
js
lret
fadd
xor
jp
xchg
aad
and
out
leave
mov
push
and
push
cmp
inc
sbb
sbb
sbb
or
into
inc
mov
or
cs
mov
nop
pop
sbb
sahf
mov
sbb
out
mov
loopne
pop
movsb
jle
cwtl
push
add
push
xlat
push
cwtl
sarb
fcompl
add
jmp
push
lds
sarl
mov
xchg
scas
adc
lret
stc
enter
into
mov
je
xchg
scas
loop
xlat
dec
pushf
outsl
lea
test
in
pop
pop
es
mov
out
push
pop
ret
mov
outsb
negb
add
pop
repz
add
scas
cmpl
pop
mov
mov
data16
xchg
in
or
fldcw
mov
sbbl
inc
leave
pop
pusha
filds
out
inc
scas
cmpsb
sbb
les
sbb
dec
loopne
push
movsb
sarb
and
repz
push
pop
add
ret
cld
add
adc
imul
ret
dec
sub
fiadds
lods
add
mov
inc
jnp
mov
add
test
test
xchg
jge
add
jl
pop
out
mov
mov
nop
or
pushf
adc
es
xchg
push
mov
mov
mov
mov
pop
outsb
stos
jl
mov
loope
sbb
mov
imul
cmp
daa
xchg
inc
xlat
mov
lret
pop
jl
xchg
pop
in
mov
ljmp
xchg
nop
negb
sahf
xchg
mov
pop
jne
and
ljmp
and
jae
shll
stos
pop
jo
pop
aaa
fwait
jb
jne
cwtl
push
pop
push
cmpsb
ja
xchg
sbbb
mov
jae
sub
jmp
mov
shll
arpl
or
insb
rorb
push
mov
cmpb
adc
dec
push
stos
aad
scas
pop
mov
adc
ja
leave
mov
xor
stc
aam
or
xchg
mov
stos
xchg
es
dec
fiadds
lret
xor
pop
scas
pop
pop
fsubr
addb
adc
andb
add
call
add
imul
pop
hlt
push
xor
sub
jl
and
pop
cmp
mov
stos
sti
sahf
ret
or
repz
loopne
add
inc
jmp
ss
or
cld
sahf
mov
pop
dec
aam
push
or
add
mov
sub
clc
inc
xchg
pop
dec
xchg
dec
cmp
ljmp
scas
pop
add
adc
pop
inc
cmp
adc
mov
imull
xchg
mov
or
push
je
in
in
sbb
imul
cmp
aam
mov
js
pop
jae
ja
decb
push
jne
daa
and
into
mov
cmp
jp
imulb
and
in
jg
hlt
or
dec
adcb
mov
stos
adc
xchg
dec
daa
xor
enter
jne
adc
xor
leave
push
and
and
movl
push
xchg
xor
mov
mov
xchg
jmp
into
test
jnp
mov
add
cmp
pop
mov
mov
ds
mov
loope
fnsave
insl
xorl
jl
dec
lahf
push
ja
inc
mov
dec
call
ja
xorl
xchg
fldl
std
xchg
enter
les
fistl
pusha
iret
mov
jge
xchg
aas
or
stos
jno
popa
sub
add
mov
sbb
lock
sub
icebp
fmuls
movsb
cli
sub
jecxz
hlt
ret
adc
mov
sub
jmp
fld
ljmp
jnp
inc
ds
lret
inc
jno
in
stc
sub
mov
in
mov
mov
in
jb
fiaddl
jbe
fidivs
in
aad
cmp
out
inc
repz
inc
pop
pop
mov
sahf
andl
into
int3
mov
xchg
xor
int
xor
paddsw
and
cmp
mov
pop
adc
stc
push
fisttps
cli
mov
sbb
mov
pop
sahf
loopne
dec
test
sub
test
mov
mov
fwait
inc
fcmovbe
in
fcomps
imul
ljmp
movsb
jp
or
cmp
mov
xchg
ret
lock
rcl
dec
xor
inc
icebp
scas
pop
stos
adc
add
hlt
lods
es
jg
movsb
dec
cmp
sbb
ss
add
fs
inc
cmpb
mov
or
and
inc
xchg
jg
xor
stos
mov
push
pop
cli
loop
leave
dec
mov
xor
add
cmp
lret
call
jle
pushf
inc
fnstcw
xor
and
push
mov
ret
bound
mov
out
andl
sub
fists
rorl
add
in
and
mov
jbe
push
hlt
scas
das
or
pushf
clc
xor
xchg
aad
clc
or
cmc
sbb
pop
pop
adc
dec
adc
lods
push
xor
imul
shlb
in
inc
cmp
pop
je
into
mov
fisttpll
ficomps
cld
ljmp
outsb
ret
outsb
xchg
xchg
jp
ss
repz
cmp
incl
insb
sti
pop
mov
mul
mov
out
in
xchg
lods
mov
outsl
shll
mov
icebp
pop
dec
fcoms
movsl
bound
jl
cmpsl
lds
add
add
mov
popl
fdivl
mov
cs
pop
mov
push
push
pushf
rorb
xchg
aas
adc
mov
out
and
jp
jns
mov
out
xor
and
pop
dec
fwait
insl
cmp
mov
inc
popa
mov
mov
cmp
pop
jmp
andl
add
not
push
cmc
push
dec
popl
push
add
inc
cmp
enter
cs
sub
lods
in
jge
and
add
push
cld
push
sahf
test
mov
dec
xchg
ret
jmp
or
adc
stos
mov
lods
movsl
push
sbb
dec
mov
into
pushf
lcall
sar
enter
pusha
out
icebp
mov
nop
inc
cmp
rol
push
mov
mov
jge
je
in
mov
loope
adc
xor
jmp
cs
in
mov
in
iret
push
and
and
lret
nop
enter
jbe
pop
ret
inc
shlb
add
push
bnd
jae
cli
jmp
sub
aad
pop
or
xor
pop
xor
movsb
mov
dec
mov
xor
ds
and
fidivl
movb
imul
dec
in
jg
mov
jnp
in
mov
mov
adcb
inc
int3
or
rcrl
in
sahf
in
imul
xor
sbbl
jb
test
in
lahf
or
jmp
adc
cmp
or
cld
mov
xchg
pop
fwait
ds
inc
lods
mov
into
dec
orl
rcrb
add
pop
lds
movsb
mov
out
shlb
test
push
fsubr
push
dec
repz
jmp
inc
movsb
dec
push
adc
addr16
hlt
data16
xor
aaa
sub
push
mov
xor
lock
cmp
xchg
mov
mov
icebp
add
std
dec
fmulp
pop
xor
popf
jnp
cmp
jae
ret
sbb
jnp
cmpsl
jno
push
mov
xchg
or
mov
dec
pop
mov
clc
jecxz
pop
mov
bound
daa
subl
push
cmp
mov
xlat
push
mov
xchg
iret
pusha
out
fsin
xor
hlt
cld
ror
popa
add
rcrb
jnp
bound
add
insl
sub
arpl
andb
mov
or
lahf
shl
shrb
mov
out
stc
gs
push
ficomps
lret
popl
dec
lcall
es
jmp
mov
stos
out
std
pop
mov
ret
sub
add
xchg
in
enter
dec
dec
pop
sbb
dec
and
mov
jns
xor
dec
lock
sbb
cmp
arpl
mov
pusha
sbb
arpl
or
xor
jae
imul
lods
push
cmpsl
nop
mov
stc
xchg
into
shrb
or
fcmovbe
aas
fdivrp
ror
icebp
fs
int3
sbb
sbb
push
dec
push
mov
mov
fwait
shlb
mov
xor
leave
mov
shll
iret
pop
stos
pop
and
das
stos
mov
cli
inc
mov
adc
mov
push
jbe
cmpsl
testl
cmp
jbe
push
popa
out
arpl
cli
fucomp
pop
shrl
inc
push
imul
add
inc
mov
mov
add
dec
xchg
rcll
pop
pop
ret
andl
mov
insb
loop
mov
je
mov
shl
sahf
pop
mov
mov
or
int
sub
xchg
pop
stos
or
mov
xchg
loop
mov
in
mov
outsl
dec
jmp
push
cwtl
adc
pop
fildll
jle
fbld
clc
xor
cmpsl
movsl
cmp
jne
stc
fdivrs
call
xlat
add
testb
loop
mov
mov
jp
or
ja
mov
js
adc
push
push
in
sub
push
dec
stos
mov
jecxz
out
jg
repz
add
aad
add
dec
mov
int
adc
xor
cmc
sarl
in
test
cmpsb
das
jg
test
or
fcmovne
add
mov
push
jle
push
and
clc
sub
clc
daa
mov
movsl
mov
xchg
pop
scas
movsb
jg
insb
push
add
add
arpl
add
cmp
in
mov
cmp
int3
imul
dec
push
lret
imul
ficompl
outsb
das
hlt
into
jmp
in
fldcw
daa
leave
cli
into
sti
fcomps
xor
jae
dec
fadds
xor
outsb
data16
inc
stc
add
cmp
inc
push
add
jae
fmull
sbb
lds
les
dec
test
cmp
lcall
out
cli
icebp
cld
mov
push
jno
push
dec
insb
or
sbb
xchg
gs
cmc
stos
cltd
out
test
fists
pop
xor
dec
sbb
dec
pop
orl
stc
scas
mov
inc
clc
aad
jg
repnz
test
sbb
testb
lret
fimull
sub
or
pushf
lahf
and
rorb
mov
pop
pop
lds
imul
dec
mov
jae
mov
mov
popf
test
rorl
shrl
ret
adc
sahf
jbe
ljmp
sbb
outsb
add
or
inc
inc
and
jbe
cmpsb
imul
push
adc
or
adc
shll
movsb
cwtl
fwait
sub
aam
pop
mov
movl
jbe
sub
jns
sub
aas
into
pop
mov
jnp
sbb
xchg
leave
mov
mov
mov
pop
rorl
int3
dec
mov
sahf
testl
xchg
aas
cmp
popf
cld
jge
inc
add
xchg
push
iret
push
mov
lock
pop
jne
xor
xchg
sbb
ja
pop
ret
jle
xchg
adc
or
iret
fs
out
into
fs
scas
sbb
mov
fsubs
mov
lahf
mov
pop
in
fst
mov
inc
nop
jnp
cmp
sub
xchg
jmp
pop
out
mov
jnp
movsb
sar
shlb
jbe
jno
push
mov
push
xchg
orl
stos
sub
add
insl
jo
push
xchg
idivb
pop
int
adc
fdiv
in
int
ss
test
cltd
mov
adc
jmp
sahf
fsubrl
dec
jge
pushf
js
je
dec
fwait
call
insl
xor
push
es
dec
enter
ud0
dec
mov
cltd
push
ror
test
pop
and
mov
stos
mov
and
cltd
movl
pop
or
outsb
mov
or
mov
push
out
push
es
xor
test
imul
xchg
inc
push
ret
aas
add
push
loope
dec
pop
ret
rorl
jbe
hlt
adc
pushf
adcb
stos
jnp,pn
add
loop
pop
jb
inc
and
sub
dec
xchg
inc
daa
subl
push
icebp
xchg
sbb
mov
sahf
push
lea
jae
mov
icebp
pop
aad
cmpsl
adc
sub
jge
pop
shrb
mov
inc
push
ret
shll
cld
jecxz
and
hlt
movsb
add
mov
cmp
mov
mov
outsb
pop
pop
mov
fldt
cld
and
or
xchg
jno
mov
lock
jle
cwtl
add
je
lahf
in
add
mov
aad
ret
inc
addr16
js
mov
daa
and
scas
or
mov
lods
cmpsl
out
std
sub
sarl
cld
mov
shlb
pop
fisttpll
sub
pushf
sbb
or
mov
xor
xor
faddl
popa
mov
test
in
push
push
outsl
aad
dec
mov
jae
mov
sbb
ja
imull
pushf
in
outsb
cmp
xchg
add
dec
mov
pop
jbe
dec
and
inc
movsb
lds
adc
mov
and
int3
dec
cmpsl
dec
mov
or
in
or
push
cmp
scas
dec
xchg
and
aad
mov
out
add
rcr
or
sbb
jg
aaa
fnsave
leave
jecxz
xor
xor
dec
pop
mov
stc
dec
movsb
in
in
dec
nop
negl
fidivl
mov
ret
jecxz
adc
sub
mov
dec
arpl
xor
inc
and
stc
addb
sub
movsl
mov
pushf
add
jge
dec
into
pusha
mov
pop
push
loope
push
cli
arpl
jl
aad
or
jg
adc
xor
add
stos
push
push
inc
ljmp
mov
iret
loope
adc
mov
fldl
lea
arpl
dec
jne
addr16
dec
adc
jnp
push
test
mov
stos
mov
out
inc
and
xchg
or
into
fs
sti
and
mov
sahf
mov
fstl
popf
lds
cmc
psrlw
mov
xor
arpl
insl
ffreep
mov
xchg
push
cld
add
imul
push
mov
leave
shr
xchg
or
add
cmc
jns
lock
lret
sbb
and
lds
jae
dec
xlat
adc
mov
mov
pop
xchg
subl
dec
pop
pop
wbinvd
jae
xlat
loope
pcmpgtw
cmpsb
xchg
and
push
adc
sbb
inc
loopne
int
loop
mov
push
insl
fnstcw
sub
lods
insl
xchg
gs
mov
loopne
dec
and
std
inc
test
shrb
sub
mov
jo
fsubs
repnz
xlat
pop
or
adcb
hlt
aaa
lds
mov
pop
das
into
sub
jmp
or
or
test
mov
test
fwait
push
test
in
inc
mov
or
fdiv
xchg
aaa
pop
jp
or
mov
xlat
out
in
leave
out
jmp
incb
xor
les
and
sbb
adc
adc
sbbb
inc
scas
repz
pop
test
cmpsb
mov
push
mov
outsb
dec
test
outsl
adc
lret
ret
cmpsl
lret
mov
fiaddl
pop
mov
mov
mov
fsub
xchg
es
push
push
jge
imul
call
push
pop
sbb
outsl
sti
mov
add
out
divb
daa
shlb
repz
nop
and
lahf
ret
fadds
pop
cmp
lahf
fdivrp
sub
out
cmp
cld
push
push
mov
gs
lods
lods
pusha
jb
xchg
mov
nop
je
push
ret
xor
nop
inc
mov
sahf
xor
add
sbb
and
cs
insb
test
or
cmpsl
xor
push
iret
cmp
mov
dec
cwtl
xchg
jl
inc
dec
je
sub
bnd
mov
in
xchg
dec
adc
cmp
out
pop
fistpl
inc
or
ljmp
into
sbb
mov
and
insl
dec
aaa
xchg
xor
push
or
push
lcall
add
inc
pop
push
push
outsb
mov
adc
aaa
push
sti
outsb
mov
jg
adc
cltd
jp
cs
dec
jecxz
lods
ja
loopne
inc
push
fcoms
mov
xchg
adc
add
icebp
and
pop
and
ss
or
inc
dec
sbbb
dec
jecxz
fadds
scas
sbb
add
shll
adc
je
adc
push
xor
sbb
inc
loop
shrl
popl
cli
add
lock
sbb
cmp
in
insl
mov
dec
int
mov
mov
mov
popa
inc
sub
pop
out
in
mov
lods
jb
icebp
sub
jmp
sub
nop
cmp
loopne
lock
lods
leave
push
sub
cmp
pop
adc
cld
jmp
addr16
xchg
stc
repz
pop
pop
in
loope
or
sub
cli
mov
bsr
shrb
dec
movsb
sbb
sub
adc
test
aam
pop
lods
aaa
js
cwtl
jmp
std
xchg
or
push
push
mov
sbb
push
add
aad
leave
sub
jb
push
gs
iret
push
pop
cmpsl
xor
call
cmp
aas
sti
xor
mov
dec
inc
or
push
and
aas
test
dec
sbb
fdivrl
ljmp
push
arpl
mov
outsb
cwtl
dec
cmp
fdivrs
vmaxss
fimull
loop
sub
inc
jle
pop
das
dec
jp
or
mov
pop
mov
mov
cmp
or
ret
xchg
push
int3
push
push
jecxz
sbb
lds
gs
inc
or
outsb
adc
push
jecxz
mov
mov
int3
scas
push
mov
js
shlb
jp
test
sbb
xchg
mov
jl
pop
sti
fdiv
cmpsl
negb
push
cwtl
out
push
pusha
xchg
mov
adc
stos
dec
dec
dec
movsl
fidivl
mov
sub
cmpsb
jb
add
pop
pushf
stc
and
out
inc
pop
xor
or
ss
std
daa
add
cmc
sar
out
add
lret
mov
test
les
push
jg
push
addl
lret
or
push
bound
add
mov
inc
push
int3
or
je
cltd
popa
dec
push
icebp
push
or
push
mov
adc
pushf
pushl
adc
je
mov
lret
int3
add
paddsw
inc
inc
push
and
push
cli
rorb
ds
sbb
stc
mov
jmp
xor
jmp
xor
xlat
daa
imul
in
and
jecxz
inc
cmp
jo
ds
addr16
mov
ljmp
int3
sub
scas
nop
cltd
pop
pop
push
sub
test
cmp
pop
or
xchg
dec
es
cltd
outsb
stc
sbb
stos
out
lret
pop
pop
or
pop
data16
stc
or
sarl
in
mov
rclb
test
fwait
out
jl
je
sbb
pop
fwait
movsb
push
ds
pop
adc
aam
dec
leave
jmp
cmp
sbb
lahf
push
subb
push
or
inc
inc
xor
lahf
mov
iret
jle
sub
rcrl
sub
pop
mov
adc
clc
fdivp
sub
xchg
iret
pop
or
adc
in
cmpsl
in
sbb
outsl
pop
adc
add
push
dec
pushf
adc
xor
or
or
in
rcr
lcall
mov
ficoml
xchg
sub
stc
ret
xlat
dec
xchg
rcrl
hlt
das
and
mov
popf
addb
pop
ss
cmpsl
rcrb
int
add
imul
ret
movsl
dec
sub
inc
pop
test
push
popf
cmp
xchg
adc
std
pop
dec
mov
fadds
jno
loop
iret
aam
stos
repz
out
repz
lcall
jnp
in
mov
loope
inc
xchg
dec
out
cmc
in
sbb
xor
pop
adcl
pop
pop
cmc
push
ljmp
mov
int3
das
xorb
inc
pop
lcall
and
int
test
mov
pop
out
icebp
out
or
mov
into
and
loopne
xchg
mov
push
dec
pusha
repz
mov
cmp
loope
iret
lea
outsb
aam
push
fimuls
scas
loope
lahf
out
das
mov
inc
xlat
add
das
fstps
test
clc
cli
inc
push
test
fadds
cmp
jo
add
sub
xor
cltd
arpl
mov
cmp
adc
and
rcll
std
nop
leave
int3
addr16
add
and
sbb
es
insl
testb
push
and
mov
adc
movsl
push
jb
mov
pop
sbb
mov
mov
imul
adc
add
enter
repnz
ret
xchg
cwtl
shll
cmp
sub
push
into
jmp
mov
lea
outsl
iret
out
add
mov
fcmovbe
dec
arpl
push
fwait
inc
mov
scas
ss
hlt
push
nop
xor
ret
mov
push
cmpsl
outsb
mov
sbb
gs
mov
clc
pop
rol
lret
bound
rcll
inc
sub
arpl
ds
push
cmp
mov
mov
dec
sub
xchg
ficoms
cmp
adc
push
fisttpl
or
mov
daa
pop
add
xchg
inc
inc
fsts
sub
jbe
and
out
xor
sub
rcll
mov
sbb
xchg
mov
xchg
adc
shlb
jo
das
xor
aam
xlat
fcom
shlb
cmp
stc
jecxz
inc
adc
push
insl
fildll
lret
popa
push
push
int3
dec
les
hlt
dec
xlat
test
mov
mov
push
lods
dec
adc
xchg
pop
lock
out
ss
lea
rdmsr
ljmp
cmp
icebp
shl
and
mov
dec
jmp
std
movsb
ret
pusha
es
jl
inc
push
nop
int3
test
dec
popa
adc
xchg
mov
push
gs
stos
ljmp
lods
push
loope
cmp
je
xor
push
mov
cwtl
inc
ret
dec
xchg
pop
cmp
mov
dec
pop
xor
stc
mov
notb
fsubrl
pusha
xchg
sbb
imul
sbb
dec
jmp
xor
cmpsb
repz
test
cmpsl
je
cmc
and
xchg
and
cmp
loopne
sarb
mov
inc
cmc
xor
rcr
lret
movsl
adc
mov
jge
mov
or
lds
int3
outsl
mov
sub
lret
add
cmc
jle
xor
jbe
mov
push
sbb
fisttps
test
loope
out
repnz
sub
dec
mov
loope
pop
test
in
mov
sub
stc
jg
push
jle
cmp
inc
pop
inc
dec
in
fucomp
xor
push
pop
cmp
xchg
jne
out
push
fmuls
and
inc
lahf
and
adc
movl
add
xchg
call
cmc
aas
or
dec
aaa
mov
mov
pop
scas
in
int3
cwtl
jb
or
stos
cmp
xor
push
mov
cld
inc
sub
rclb
shrl
pop
sub
pop
lds
sub
xor
cmpsb
jg
leave
movsl
mov
repz
mov
jp
jo
fstpl
dec
sub
mov
sti
xchg
in
mov
sub
xor
aas
fstpl
movsb
lcall
icebp
popa
add
enter
and
scas
lcall
push
dec
mov
pop
lods
jl
xor
mov
mov
leave
mov
icebp
daa
dec
push
add
arpl
or
sub
push
push
inc
pusha
or
addr16
xchg
sbb
inc
push
xchg
loope
add
gs
inc
mov
xchg
pop
and
inc
jnp
sbb
pop
sbb
inc
repnz
out
jg
xor
fdivr
xchg
cwtl
arpl
test
nop
popf
cmp
inc
testl
fidivl
or
pop
outsl
and
mov
sar
jae
repnz
mov
pop
adc
inc
mov
push
push
add
mov
stos
test
fwait
sub
mov
or
pop
mov
xchg
lahf
into
push
movsb
push
in
into
movsb
cmp
fsts
xchg
mov
in
or
cld
sar
push
rclb
jmp
les
out
jbe
sub
std
das
dec
mov
frstor
aad
sbbl
movsl
mov
xchg
mov
push
imul
out
gs
push
or
push
adc
jle
mov
xchg
std
rcr
jg
data16
movsb
dec
add
in
cmp
icebp
or
push
mov
lret
lahf
ss
gs
ja
in
xor
mov
mov
jmp
jle
ljmp
inc
mov
mov
stc
rep
sub
sub
mov
or
and
bound
shl
pop
das
int3
ljmp
sahf
in
xor
push
ljmp
and
ljmp
add
out
mov
loopne
pop
lcall
xor
aad
cmc
mov
jb
fsubl
cmp
xchg
cs
or
cmpb
pop
xchg
shrl
xchg
pop
xchg
mov
call
xor
adc
dec
movsb
jae
adc
aaa
cmp
cltd
add
add
hlt
or
cs
ja
ret
stos
rorl
in
cmp
jmp
lret
mov
pop
mov
xor
cmovno
je
cmpsl
and
pop
dec
movsb
fyl2xp1
mov
jb
sbb
loop
jae
sbb
xlat
cmp
xchg
aaa
push
shlb
and
adc
lret
movsb
dec
dec
bnd
ret
adc
call
repz
cmp
pop
push
xchg
xchg
in
xchg
fildll
mov
sub
out
pop
enter
mov
std
inc
cld
cmpl
mov
mov
out
rcrl
ja
pop
push
in
pusha
jo
test
add
pop
gs
fldl
lcall
inc
mov
xor
ds
scas
or
jle
add
mov
and
stos
adc
lret
dec
aam
bound
sub
ret
pop
inc
or
test
aas
aam
rorl
fildl
adc
xor
aam
cmp
ficoml
push
jmp
cmp
add
adc
paddsw
add
ret
pop
dec
orb
xlat
pop
or
scas
je
jae
xor
jg
out
jg
mov
test
outsb
dec
jecxz
sub
cs
adc
xchg
dec
imul
into
push
adc
enter
in
add
insl
mov
jne
dec
mov
sbb
mov
iret
mov
movsl
adc
mov
lahf
mov
push
jno
inc
pop
mov
push
add
ljmp
enter
std
jg
mov
jo
pop
movsb
push
pop
fnstsw
inc
jns
mov
sub
mov
xchg
sbb
lret
add
das
mov
jmp
inc
pop
shl
cs
jo
inc
aad
mov
pop
sub
add
cli
andb
mov
jp
das
mov
loope
xchg
stos
cmp
mov
jle
cmp
lods
adcl
notl
ja
jl
test
inc
sbb
pop
pop
push
ds
or
ficoml
mov
arpl
push
fiaddl
clc
xchg
adc
jno
ret
pcmpeqw
dec
mov
pop
xchg
or
xchg
fstl
hlt
add
jo
enter
pop
inc
inc
cwtl
cmp
xchg
push
aas
cmp
cmp
jg
scas
leave
mov
shlb
maxps
in
out
mov
scas
fisttpl
push
xchg
mov
sub
or
stos
inc
and
push
daa
sub
out
push
movsl
push
mov
or
ret
mov
adc
stos
scas
je
cmp
enter
std
dec
jecxz
adcl
daa
mov
movq
or
fcmovu
clc
and
xor
cmp
loope
dec
mov
in
js
pop
sbb
mov
andl
arpl
pushf
xchg
sub
aas
inc
in
test
fildll
stos
push
les
add
pop
nop
inc
push
test
or
fwait
stos
popf
push
fs
sbb
dec
add
pop
cmp
rcrb
cmc
push
xor
mov
je
int
add
cmp
sub
aaa
sbb
xor
cmp
inc
xchg
adc
repz
jmp
loop
pusha
mov
add
in
les
loop
incl
jns
in
bswap
push
bound
les
inc
daa
xchg
mov
add
xor
loop
das
sti
ficoml
jno
xchg
add
loopne
add
xor
mov
adc
icebp
adc
add
std
inc
icebp
imul
jl
pop
insb
cmpsb
dec
inc
hlt
jmp
or
jge
pop
popa
push
pop
js
cmp
inc
cltd
push
nop
fcoml
jmp
mov
jae
mov
mov
popf
int3
enter
pushf
or
and
jne
cmp
ja
push
test
js
lock
mov
jecxz
les
leave
fld
movb
bound
cmp
aas
or
scas
cmp
test
or
mov
or
push
push
fcom
loopne
inc
sub
inc
rclb
jb
mov
mov
adc
in
pop
test
xchg
adc
sbb
subl
pop
lret
push
aas
repnz
pop
jnp
and
push
in
iret
fbld
push
bound
push
mov
fwait
pop
or
fistl
imul
lret
out
xor
xchg
inc
and
inc
daa
sub
adc
loopne
rol
rclb
fdivrl
in
repz
shrb
pop
mov
loope
into
andl
jecxz
xor
cmc
lret
scas
aas
ds
test
mov
shlb
jno
jecxz
and
daa
xchg
out
stc
fdivp
cmp
jno
fstpt
cmp
xor
sti
shrb
ret
xchg
dec
lea
dec
out
mov
xchg
test
sub
xchg
adc
mov
lds
adc
addl
dec
jbe
pop
out
mov
mov
lahf
push
test
out
jmp
xlat
fildl
push
cmpb
movsl
mov
test
sbb
sbbb
add
cmc
mov
add
pop
mov
dec
push
ror
xor
add
lahf
outsl
inc
dec
mov
or
adc
repz
mov
add
cli
mov
lret
mov
inc
lret
hlt
adc
dec
mov
insb
aaa
inc
sub
imul
push
or
and
scas
ret
jmp
fs
mov
add
ss
in
ret
into
cmpsb
rcl
mov
mov
loop
lcall
pop
rcr
movsb
cs
add
push
jns
jmp
test
movb
push
shll
dec
add
loop
and
imul
add
sbb
xchg
ret
cs
xchg
roll
scas
mov
mov
cmp
insl
stc
out
inc
xor
cmp
mov
loopne
rcrb
mov
xchg
or
pop
nop
popf
lret
lds
xchg
cmp
fildl
outsb
push
jl
jb
cli
pop
outsb
mov
enter
orb
mov
outsb
xchg
lock
outsl
inc
or
dec
mov
xor
cmp
push
ret
adc
in
jge
jnp
icebp
dec
daa
xor
jno
aad
fs
mov
and
xor
mov
push
xchg
cmpsl
jge
sar
mov
sti
jns
clc
mov
add
sbb
shll
test
xchg
and
mov
mov
add
loop
jl
inc
ds
push
and
jg
push
stc
pop
sbb
lret
mov
ja
push
je
mov
clc
sub
mov
popl
icebp
ds
mov
and
fstpt
outsb
xor
mov
les
clc
push
push
das
sbb
and
mov
in
inc
sbb
call
mov
dec
nop
add
inc
push
mov
bound
mov
cwtl
and
ror
cwtl
cmpsl
popa
mov
adc
pop
shll
push
dec
ljmp
and
jno
shll
test
pop
mov
aas
loop
fnstenv
repnz
in
add
fsubrs
inc
lods
into
sti
jnp
jbe
je
adc
xchg
test
inc
xchg
xlat
push
daa
lods
pop
jae
sub
pusha
mov
ja
push
fwait
pop
es
arpl
xor
mov
inc
push
and
pop
fdivs
sub
mov
divl
into
unpckhps
inc
sub
add
das
mov
std
pop
pop
aam
xchg
inc
mov
push
enter
inc
mov
jl
mov
pop
lahf
clc
mov
outsl
inc
testb
in
repz
lods
pop
das
and
push
ds
adcl
fsubrs
movsb
mov
sub
mov
xor
xchg
bound
xor
xlat
adc
ds
jle
xor
leave
and
mov
addr16
lret
pop
rcll
bound
inc
into
push
mov
outsl
cmc
std
cmp
aaa
push
iret
cmpsb
js
enter
jmp
jns
lahf
out
inc
scas
mov
or
rorl
in
ljmp
icebp
ret
pop
xchg
or
add
pusha
cmp
mov
insb
add
outsb
subb
mov
xchg
mov
aas
or
add
cli
repnz
or
out
clc
int3
je
xchg
xor
shrl
fldt
jne
push
out
sahf
push
sub
cmp
sub
sub
cmc
jno
ljmp
ljmp
add
pop
js
mov
cld
rorl
fs
adcl
imul
jmp
lahf
stc
fdivl
ljmp
jecxz
pop
xchg
mov
dec
clc
insl
ret
xchg
call
push
inc
push
loopne
mov
imul
leave
adc
pop
sbb
es
and
aas
adc
dec
push
cmp
mull
dec
data16
jecxz
jmp
jnp
and
stos
mov
aam
adc
xchg
push
lods
das
mov
lods
shrl
mov
data16
xchg
mov
pop
cmpsl
nop
pop
and
cli
xchg
mov
sbb
pop
imul
mov
aad
xor
mov
xor
arpl
cmp
pop
dec
popf
fsub
sldt
push
push
nop
out
rolb
fnstcw
push
fistpl
pop
dec
adcl
stos
loop
in
iret
shlb
or
add
movsl
jae
mov
lock
ljmp
repnz
jae
arpl
inc
push
mov
test
in
fsubr
adc
cmpsb
jecxz
fst
xchg
push
dec
xor
and
aaa
in
pop
jp
sub
call
mov
out
sti
and
decb
jbe
dec
movsl
dec
cmp
lods
sbb
inc
mov
fstpl
pop
leave
sahf
loop
mov
inc
dec
subl
cmpsb
in
jg
popa
sub
and
jnp
lret
cmovbe
mov
fadds
ds
mov
lahf
mov
push
and
sbb
pusha
xchg
outsl
adcl
pop
test
push
push
pusha
pop
cwtl
mov
sub
mov
push
mov
add
rcll
repz
imul
negb
adc
xor
dec
mov
dec
hlt
fdivrp
or
sub
cmpsl
cmp
lds
pop
outsb
out
shrl
aaa
iret
cmp
push
lock
ret
gs
or
sbb
stos
cmp
adc
cmp
out
xor
shrb
mov
out
stc
push
dec
stc
pusha
inc
mov
rolb
jl
sbb
lahf
lds
paddusb
fsubrs
sub
popf
xorl
pop
push
cmp
dec
sub
mov
push
sbb
cwtl
push
fcmovne
cmp
lret
lds
outsl
mov
mov
rcr
cmp
sbb
xchg
cmp
sub
ds
ds
pop
scas
dec
ret
cwtl
cld
scas
cli
pop
add
jns
pushf
pushf
mov
addb
outsl
and
or
xchg
dec
ss
sbb
ret
dec
pop
retw
mov
insl
in
mov
jmp
negl
call
repnz
sti
ljmp
fwait
jb
pop
das
ds
adc
and
fisttpll
fucomp
flds
testl
cld
mov
inc
lods
pop
mov
inc
pushf
sbb
testb
insl
jnp
out
xchg
insb
lret
stc
jnp
cmp
pop
fldl2e
or
jp
add
pop
push
mov
cltd
pop
fs
mov
cmp
sbb
sbb
subl
and
lret
push
aam
jbe
sub
aam
flds
mov
fnstsw
mov
out
enter
cli
push
mov
scas
mov
rcll
imul
sub
call
mov
mov
insl
out
loop
mov
ja
push
scas
mov
out
pusha
jecxz
sbb
pop
xchg
jp
xlat
cwtl
js
ret
inc
repz
adc
je
xchg
sub
mov
js
fadd
jb
in
cmp
jp
dec
push
pusha
dec
fildll
ss
push
outsl
and
cli
fwait
push
pushf
cmpsl
jae
sbb
loop
xor
jae
lret
jb
sub
jo
scas
movsb
jbe
mov
jecxz
notb
push
mov
dec
lret
notl
lods
cmp
in
adc
iret
ds
sub
fadd
mov
xchg
std
sub
pop
jecxz
jbe
out
ret
pop
add
or
xor
adc
sub
add
cmp
push
iret
sub
push
mov
xchg
shl
dec
jge
les
repnz
mov
loope
imul
inc
xlat
mov
clc
sub
inc
jns
loope
bnd
xchg
inc
test
movsb
cmpsl
lahf
inc
lret
mov
addr16
xor
xor
cmp
add
or
dec
jle
add
fs
inc
mov
push
pop
jl
test
lcall
sti
pop
lcall
out
cmpsl
and
mov
and
aaa
sarb
mov
ror
ljmp
out
pop
add
and
adc
rorb
push
dec
sub
js
mov
out
and
push
lret
pop
xorb
pop
mov
mov
clc
insl
rolb
jg
jo
mov
fsubl
test
stos
mov
dec
jp
int3
out
jae
lcall
loopne
lock
addr16
add
test
or
pop
cltd
adcl
add
addr16
xchg
cwtl
das
mov
mov
push
and
mov
ret
add
or
pop
sbb
cmp
xor
xor
dec
je
add
outsb
lods
clc
clc
fiaddl
ds
fldl
cmp
mov
sub
fidivrl
imul
aas
adcl
or
cmp
fwait
pushf
push
adc
or
into
stos
dec
push
stos
movsl
pop
push
or
sbb
decl
dec
pushf
movntq
hlt
xchg
js
add
push
cmp
xor
lret
rcrb
dec
lret
pop
add
and
xor
aas
pusha
addb
jae
iret
lcall
in
leave
out
xor
adc
pop
jb
in
imul
push
or
arpl
out
jne
fimuls
cmp
sub
cmp
pop
mov
or
jns
adc
adc
xchg
popf
into
out
clc
int3
addl
mov
xor
cmpsl
cmpsb
divl
adc
push
sti
xor
mov
adc
mov
xchg
gs
into
sbb
xchg
lds
rclb
cmp
mov
cli
mov
mov
adc
xchg
aam
pop
loop
dec
sarb
pop
outsb
sub
std
dec
shll
cmp
shr
push
add
mov
lock
jg
cs
std
pushf
aad
mov
push
orl
adc
adc
dec
pop
adc
jbe
mov
dec
adc
jg
xor
in
call
xchg
jae
sub
mov
cmc
scas
xor
mov
enter
mov
ds
dec
jmp
adc
adc
fs
ret
shlb
lock
fcmovnu
fcomip
jb
aas
dec
je
scas
xlat
jne
neg
sbb
mov
or
enter
insb
insb
dec
fisttps
ret
dec
ret
and
dec
lcall
mov
push
inc
ss
dec
int
in
mov
push
cwtl
lcall
sub
pop
sti
adc
pop
pop
jne
mov
mov
lock
push
cli
push
ror
dec
clc
cwtl
push
je
mov
push
test
in
dec
fstl
hlt
inc
int3
xchg
pop
cmp
in
and
jns
movsb
repz
adc
adc
fwait
into
gs
adc
xchg
ret
push
jmp
and
pop
push
je
outsl
loopne
fs
jb
icebp
or
and
mov
mov
dec
mov
stos
in
cmp
inc
filds
mov
jp
mov
int3
sbbb
fildl
xorb
jp
mov
aam
scas
pusha
xchg
int
popa
call
lock
ss
mov
icebp
mov
int
adc
push
aam
lcall
push
xor
adc
je
mov
jecxz
sbb
pusha
or
rcrb
inc
adc
adc
dec
fidivs
enter
inc
mov
icebp
mov
mov
xchg
cmpsl
and
stos
es
cwtl
das
out
roll
xor
aad
push
push
push
fs
mov
das
xchg
mov
daa
jnp
repnz
pop
push
pop
call
stos
inc
push
repnz
push
pop
gs
lock
aam
push
mov
loopne
pop
mov
adc
dec
and
jbe
clc
aaa
push
jbe
xor
repz
rcrb
js
push
add
je
out
addr16
int3
testl
scas
cwtl
das
fisubs
popf
xchg
lods
cli
shlb
xchg
fsubl
loope
mov
js
mov
mov
mov
leave
jne
jae
mov
sbb
or
ret
ss
mov
mov
ffreep
test
push
mov
push
push
jmp
push
jo
cmp
data16
sbb
loop
iret
cmp
push
mov
sbb
or
push
ret
cmp
bound
int3
repz
aas
jns
loope
std
daa
push
je
mov
imul
sub
ds
push
sub
pop
std
imul
insb
mov
or
in
dec
xchg
arpl
mov
out
and
jnp
xor
mov
pop
enter
xor
out
mov
lea
clc
outsl
push
rclb
pcmpgtd
add
lahf
xchg
mov
mov
pop
mov
lock
testb
xchg
test
jns
scas
sbbl
call
int
jns
scas
add
inc
cwtl
adc
std
in
aad
or
std
jno
jne,pn
push
aad
pop
sbb
and
fdivrp
xor
mov
out
or
lcall
leave
mov
add
add
pop
inc
inc
fsub
aaa
ljmp
cli
scas
add
frstor
clc
stos
adc
stos
ret
lcall
sub
lods
xor
cmp
mov
rclb
jb
cmc
pop
pop
movsb
inc
lock
fadd
adc
mov
adc
mov
mov
jb
cltd
imul
sbb
jne
mov
xchg
sarl
fistpll
sti
mov
dec
jo
mov
sub
sti
jns
int
cmp
pushf
mov
sarl
aad
cltd
sbb
pushf
ljmp
adc
iret
mov
cs
mov
iret
cmp
xor
icebp
add
dec
insl
xor
lea
inc
andb
adc
pop
dec
in
xchg
clc
sub
adc
and
btr
inc
jp
int3
add
jae
inc
mov
ret
inc
mov
iret
in
mov
repnz
int
xchg
cmpsb
pushf
ljmp
stos
test
fisubs
sti
nop
shrl
imul
cmp
mov
shrb
jg
xchg
adc
xor
movsl
xchg
mov
dec
add
lret
js
mov
icebp
mov
fstpt
test
add
shll
cmp
pop
sbb
mov
mov
pop
hlt
clc
lahf
xchg
inc
fcmovbe
push
pop
xor
push
in
dec
or
lret
xchg
dec
stc
mov
testb
outsb
or
es
pusha
or
jo
and
or
xchg
xlat
fs
xor
nop
out
jb
push
add
test
sbb
out
push
mov
or
aaa
repnz
pop
pop
cmpsb
mov
push
add
fidivs
mov
imul
test
cmp
or
add
out
or
cmp
xor
loopne
rep
adc
push
sub
xor
in
mov
cmp
pushf
sbb
mov
sub
xchg
and
pop
cmp
push
add
pop
adc
lock
mov
int
xchg
cmp
add
addr16
push
jge
add
mov
xchg
push
and
mov
mov
test
dec
outsb
jmp
push
jg
dec
inc
mov
push
inc
mov
push
aad
mov
push
push
out
dec
mov
repnz
add
inc
lock
leave
xor
sub
xchg
sti
dec
sbb
fwait
jmp
movsl
push
and
pop
inc
adc
cmpb
ret
mov
mov
adc
push
xchg
xor
pushl
cwtl
fcoml
dec
xor
shl
adc
cld
jbe
sbb
ja
mov
cmp
mov
test
icebp
and
xor
in
popa
or
pop
xchg
mov
sbb
pop
pop
rcrl
test
inc
xchg
rorl
sarl
pop
mov
jmp
sub
mov
lret
add
ds
mov
leave
fdivs
cmpsl
jb
out
and
cs
pop
push
pop
cmp
ja
cld
vphaddubq
push
insl
out
ret
push
mov
xlat
movsb
mov
test
daa
es
nop
xchg
jmp
cmpsl
mov
je
xchg
rol
add
sbb
push
xchg
push
sbb
cld
test
loopne
fnstcw
jns
mov
rorb
mov
jbe
push
dec
arpl
leave
sbb
xchg
loope
xor
xchg
push
sub
clc
lods
xchg
mov
mov
xchg
inc
outsl
stos
mov
iret
mov
push
cmpsb
xor
bound
jno
icebp
jl
mov
push
loope
mov
dec
mov
push
push
mov
inc
fcompl
xor
cmp
mov
push
mov
ja
jp
test
inc
jo
fwait
or
xor
sub
mov
into
ds
push
jae
insb
jb
test
or
xchg
or
rorb
cmp
pop
sbb
and
sar
popf
xchg
pop
cs
jno
sub
or
jmp
fidivrl
inc
pop
loop
push
xor
call
and
lods
xchg
push
dec
insl
dec
pop
pusha
mov
insl
out
ss
adc
js
fcomip
mov
fwait
aaa
loop
shll
fisttpll
xor
cs
popf
mul
mov
mov
into
push
les
fucom
mov
inc
sub
sbb
outsb
and
xchg
and
and
movsb
ffree
loope
xlat
insb
push
and
sub
loopne
out
add
mov
repnz
mov
aad
mov
mov
push
sbb
jmp
lods
out
xor
jae
ljmp
sub
push
js
test
lds
fidivrl
mov
and
mov
ds
and
pop
aad
in
pop
dec
outsl
sbb
paddusw
adc
sbb
sub
pop
mov
movsb
testb
jae
lret
loop
and
jl
mov
jmp
xlat
loope
push
mov
testb
out
loope
cmc
jno
mov
icebp
mov
lds
fimuls
sbb
aam
popa
push
test
mov
imul
mulb
movsl
inc
xor
movsb
dec
inc
push
mov
pop
repz
xchg
ja
rolb
into
or
mov
outsl
imul
pop
scas
je
js
add
cmc
mov
int
mov
adcl
or
adc
insl
xchg
xor
movnti
push
fnstsw
inc
jns
fcmovnb
jno
cwtl
test
jb
cmpsb
ret
pop
sub
leave
inc
out
fsubr
rcr
xor
cltd
daa
xor
dec
push
xor
andb
xchg
sub
enter
arpl
negb
add
adc
ds
mov
or
std
mov
ret
push
lock
es
or
dec
mov
stc
ljmp
mov
add
cmp
int
inc
mov
sarb
dec
xchg
arpl
in
ret
into
cmpsb
ljmp
push
adc
out
jl
into
inc
or
jmp
inc
mov
pop
and
fxch
xchg
pop
addr16
jae
cmp
jp
cmp
mov
fisubs
sub
pop
pop
je
fldenv
fldl
mov
rcl
jo
add
shlb
inc
jae
add
mov
push
inc
sub
aaa
sub
rorl
mov
pop
push
test
cld
in
xor
xchg
fimuls
adc
mov
gs
adc
add
push
add
inc
arpl
test
inc
jae
dec
or
xor
xchg
dec
in
mov
cmp
mov
mov
pop
xchg
in
aam
out
and
pushf
bound
adc
mov
add
mov
dec
out
xlat
dec
ret
push
xor
test
sbb
adc
call
inc
outsb
or
int
test
jo
fiadds
mov
movntps
data16
fwait
shl
fmull
lret
rcll
cmp
inc
or
jo
push
shrl
push
push
cwtl
in
xchg
mov
stc
xchg
sub
iret
sub
imul
lret
pop
mov
push
xlat
outsb
xchg
loop
dec
cmp
xchg
sbb
outsb
add
lods
xlat
sbb
inc
jae
sti
xchg
cmp
jo
test
outsl
and
pusha
xor
jecxz
fadd
or
rolb
bound
push
lret
data16
arpl
mov
pop
adc
dec
xchg
pop
fidivs
adc
inc
lahf
daa
or
xchg
inc
sub
sbb
xlat
sub
jbe
outsb
xor
iret
decl
and
ret
mov
fidivl
dec
mov
pop
mov
jge
dec
out
out
mov
insl
cmp
jg
adc
xor
in
mov
and
jbe
inc
shlb
mov
lret
jne
frstor
popa
push
jbe
aam
xchg
adc
bound
pop
shll
data16
jl
and
stos
repz
sub
and
mov
xchg
nop
mov
pop
rorb
call
fbld
in
adc
sub
pop
push
jo
pop
sub
mov
adc
popf
out
mov
decb
dec
push
lods
scas
mov
xchg
jl
fisttpll
mov
adc
daa
mov
into
mov
jnp
mov
dec
ss
imul
jo
xor
sbb
fdivr
stos
inc
ds
xor
inc
aaa
js
sub
sahf
in
das
cltd
add
pop
arpl
lret
mov
push
icebp
adc
jae
inc
stos
jo
repnz
repz
pop
jge
push
ds
in
cmpsb
sub
call
jmp
xchg
cmp
xor
xor
mov
and
lcall
les
xchg
push
lods
add
or
sbb
out
dec
test
daa
sbb
add
insl
enter
xchg
or
jo
mov
inc
lcall
cmp
cmp
sub
test
and
int3
xchg
inc
loop
negl
aam
push
loope
enter
into
mov
les
jmp
mov
pop
popa
inc
cmp
cs
xlat
xchg
dec
daa
or
xchg
loope
xchg
fwait
pop
mov
cmp
mov
xchg
cmc
pop
push
jne
insl
push
call
inc
add
jnp
clc
nop
stos
push
hlt
push
mov
sti
mull
mov
sti
scas
stos
dec
mov
dec
pop
cltd
lcall
mov
out
leave
dec
xor
mov
cmp
and
outsb
mov
mov
leave
jmp
sub
ret
xchg
pushf
push
mov
enter
mov
das
jbe
mov
popf
or
cmp
lahf
fwait
jecxz
add
out
pusha
cwtl
aad
push
push
jmp
gs
push
push
mov
jnp
cld
inc
dec
lret
add
pop
les
or
sub
sub
xor
adc
hlt
pusha
push
testb
and
jecxz
icebp
jb
lea
push
orb
test
js
inc
sti
out
mov
pop
and
loop
in
das
cmp
inc
jp
sbb
jle
adc
data16
xchg
fidivl
lahf
push
repnz
jmp
enter
inc
adc
mov
sbb
mov
dec
mov
mov
sbbb
repz
fxch
out
jmp
mov
loope
loope
sti
pop
shlb
icebp
mov
inc
adc
rcrl
push
std
into
insl
loope
test
add
add
cld
in
rorb
cmc
add
das
mov
mov
mov
in
xchg
clc
mov
jmp
fmuls
pop
mov
testl
and
lahf
push
icebp
gs
int
repnz
adc
fldcw
fsts
sub
cld
mov
inc
mov
mov
shr
iret
inc
repz
mov
inc
insl
mov
pushl
sbb
cltd
test
pop
adc
ficomps
jp
and
push
jo
adc
fsubr
pop
test
push
pusha
mov
loopne
jge
sub
dec
xchg
mov
jae
rcrl
adcl
je
mov
mov
cmp
or
out
push
sbb
je
icebp
dec
and
mov
cwtl
arpl
fisttpl
mov
sub
jge
cwtl
ja
test
insb
jp
ret
cmp
into
mov
data16
cmp
lret
out
sub
push
push
jg
dec
xor
cmp
pop
add
test
popa
pushf
jns
dec
xchg
jno
test
pop
xchg
mov
sub
xchg
int3
xor
push
add
jno
xor
or
imul
and
insb
push
into
mov
mulb
cmp
cmc
sbb
cmp
mov
cmp
adc
and
shl
leave
ljmp
lods
jg
xor
mov
scas
inc
gs
lret
insl
push
sub
loopne
aaa
push
arpl
push
movsb
sbb
inc
leave
cmp
std
loope
arpl
in
lcall
aam
xchg
jo
mov
sub
jmp
adc
nop
loop
outsb
cs
pop
daa
mov
cmp
push
enter
btc
out
popa
cmc
pop
mov
dec
add
sub
test
cmp
jbe
stos
int3
scas
das
lods
gs
adc
icebp
call
push
xor
cld
push
sbb
push
jecxz
aas
mov
cmp
or
in
lods
popa
roll
or
add
ds
subb
inc
mov
out
mov
imul
jns
lcall
sbb
xchg
ds
or
cmc
add
lret
mov
cltd
je
push
scas
sbb
sub
sbb
les
inc
std
fstpl
sbb
stos
lcall
cmc
sbb
stos
shr
in
push
leave
hlt
jmp
mov
je
daa
out
cs
mov
and
sub
lcall
ficompl
jge
fmuls
pop
pop
lret
push
mov
movsb
int3
sbb
inc
adc
push
mov
notb
pop
fldenv
push
test
stos
call
dec
dec
stos
nop
and
push
add
jmp
and
xchg
int
or
sbbl
pop
inc
mov
aaa
mov
push
sub
dec
sub
roll
dec
sbb
addl
mov
mov
addr16
sbb
xorl
mov
test
rcll
sub
fucomi
ds
imul
jb
inc
mov
push
mov
lods
pop
sbb
xchg
sbb
lcall
add
add
cmp
mov
arpl
mov
cmp
pop
scas
lret
jbe
or
mov
pusha
and
les
pop
imul
imul
xor
stc
in
inc
stos
clc
sbb
cmpsb
inc
inc
jge
ds
sbb
mov
sub
xor
xchg
lcall
cli
out
fcoms
sbb
inc
or
mov
cltd
jne
pop
xor
imul
std
outsb
pop
std
mov
bound
xchg
call
or
sub
imul
push
das
or
inc
rcl
inc
add
fsubr
outsb
test
mov
enter
lret
mov
jle
sahf
and
push
test
push
hlt
xchg
mov
loopne
or
out
mov
ret
jne
inc
lret
insl
mov
mov
aad
es
adc
inc
adcl
ror
sbb
mov
pop
sub
jmp
hlt
xchg
push
fdivr
mov
jne
mov
movsl
outsl
push
test
movb
je
daa
andl
gs
lret
adc
dec
adc
mov
and
out
divl
insb
jmp
iret
xor
js
or
sbb
adc
pop
push
fistps
sbb
or
sbb
repz
hlt
mov
movsl
or
mov
xchg
sub
cmp
dec
push
loop
sub
jae
or
push
ljmp
xchg
dec
pop
mov
fsubrl
push
test
loope
inc
mov
pop
sarl
mov
dec
or
jnp
test
ja
adc
lret
inc
popf
stos
sbb
lahf
and
test
sub
sub
ret
adc
xchg
sub
cmpsb
sbb
push
test
push
mov
xchg
icebp
adc
xor
data16
and
push
xor
push
jae
inc
xchg
mov
imul
jl
adc
xchg
fists
sarb
inc
push
in
pop
lret
adc
and
or
scas
fdivs
loop
xchg
fisubl
dec
sub
enter
mov
mov
xchg
xlat
or
sub
and
push
jmp
or
imul
inc
or
mov
push
js
dec
ret
jno
popf
loope
mov
les
xor
stos
mov
add
push
lret
test
rorb
fidivrs
scas
inc
popf
pusha
add
or
push
inc
jmp
lret
cmpsl
mov
add
xor
in
xchg
in
cwtl
arpl
push
sbb
ret
sub
adc
adc
cmp
lret
ret
out
cmp
push
pop
je
jbe
int
hlt
rcrl
mov
cmp
sub
ret
je
enter
jp
orb
popf
sbb
scas
lock
pusha
ret
xlat
push
cmp
xchg
jle
mov
inc
int3
xchg
sbb
and
pop
repz
enter
cmpb
mov
pop
push
repnz
ficoml
push
fs
ja
daa
test
mov
imul
pop
jne
sbb
lods
sbb
push
lret
mov
jb
ret
outsl
jno
inc
sti
dec
loop
mov
cld
push
push
pop
punpcklwd
inc
cmp
movntq
cmp
imul
inc
pusha
popf
loop
stc
dec
out
aaa
lahf
pushf
push
add
or
push
sub
mov
test
in
mov
xchg
mov
xchg
shll
rcrl
scas
push
jne
out
in
xchg
inc
loopne
add
pop
loop
and
in
jns
pop
adc
rcr
jge
mov
fwait
repz
je
adc
in
in
cwtl
pop
mov
inc
or
mov
and
in
outsl
popaw
ja
xor
or
push
test
scas
cmp
cltd
data16
or
push
into
insb
jg
adc
jmp
orb
leave
stos
aad
xlat
and
sub
lds
jecxz
sbb
sub
ds
unpcklps
repz
xchg
ja
inc
test
jnp
push
push
xor
imul
ds
push
inc
and
xchg
mov
cmc
fimull
mov
and
into
mov
adcl
jl
jb
dec
cmpl
dec
outsb
mov
pop
int
dec
lea
cmp
mov
aas
scas
sbb
sbb
mov
pop
bound
sbb
dec
js
ds
pop
popf
out
mov
dec
subl
pop
cld
xchg
out
sbb
inc
xor
mov
cmp
pop
mov
push
ss
adc
sti
jle
mov
sbb
movsl
jns
mov
jge
sub
mov
flds
rol
mov
pop
cmp
es
xchg
aad
out
xor
test
lods
mov
sbb
jae
in
jnp
cmc
aad
push
push
mov
clc
xor
lret
fistpll
clc
sub
rorb
pop
cmp
xchg
and
pop
jns
les
pop
loopne
rclb
sbbb
test
or
or
leave
cmp
mov
sahf
jbe
outsb
rolw
mov
inc
and
and
pop
sub
inc
pop
mov
push
sbb
xor
mov
cmpsl
mov
cmp
inc
xor
icebp
jl
push
cld
xor
or
pop
sbb
xor
mov
xor
cli
push
test
cwtl
xchg
inc
adc
imul
and
ret
aas
lock
mov
mov
and
cmp
mov
test
mov
lcall
out
out
xchg
inc
cmp
in
lret
test
sub
push
cli
notl
pop
dec
cwtl
adc
and
and
jbe
loope
adc
hlt
aam
fiaddl
mov
jg
cmpsb
jo
jbe
jns
push
cmp
push
jo
cmp
mov
adc
ret
sub
xor
in
jno
cs
dec
in
sbb
push
or
aas
pop
pushl
mov
stos
lods
neg
iret
pushf
add
or
imul
pushf
imul
je
into
jnp
dec
xor
and
movsl
divl
xchg
mov
xor
lds
scas
into
loop
mov
ljmp
das
loop
stc
push
cmc
pushf
pop
dec
mov
loopne
push
pusha
mov
sti
cli
cmpb
ret
sti
repnz
inc
inc
push
das
push
shlb
xor
adc
xor
lods
leave
add
push
in
jns
inc
clc
adc
inc
jmp
mov
cld
cmpb
rcrb
rcrb
jp
rorl
mov
push
or
lcall
jg
nop
xchg
xor
or
add
lret
xchg
leave
mov
cli
repz
ds
lea
iret
mov
inc
lods
sub
sbb
mov
mov
mov
push
xor
xor
fldcw
xor
jmp
dec
mov
add
aaa
psrlw
xchg
test
jge
loopne
mov
push
add
nop
xor
dec
sbb
cmpsl
jne
dec
enter
and
and
imull
test
and
jmp
jne
fwait
inc
adc
or
dec
cmp
sbb
jg
sti
sti
xor
mov
ret
xor
jno
enter
stos
cmp
lods
inc
test
adc
and
cmp
push
push
or
repnz
mov
sub
xchg
pop
lahf
jl
jg
mov
push
cmpsl
xor
rol
add
ret
sbb
sbb
shll
inc
addb
in
jecxz
mov
dec
repz
push
xor
inc
subb
xor
sbbb
add
jecxz
int3
pop
aad
mov
sarl
hlt
pushf
mov
dec
sbb
aas
test
out
rcrb
and
imul
call
inc
imul
push
mov
test
stc
sarb
gs
mov
loop
cmpsb
loope
stos
idiv
jo
mov
loope
sbb
and
outsl
rol
test
imul
mov
mov
or
ljmp
sub
repnz
dec
mov
xchg
sbbl
cmp
pop
loop
test
mov
repnz
cmp
cmp
outsl
stos
add
nop
neg
xchg
aad
sub
xor
mov
jge
xlat
sub
cmp
mov
adc
sbb
test
daa
ss
sbb
inc
or
xchg
cs
pop
in
add
fdivp
adc
mov
arpl
cmp
push
das
mov
daa
fwait
call
mov
push
dec
push
loope
mov
adc
xchg
andl
sub
jno
das
enter
mov
addl
stc
dec
cmp
cmpsl
sti
stc
adc
das
sub
mov
mov
mov
pusha
sbb
mov
push
fwait
lock
pop
js
cli
xorb
divl
into
popa
mov
cld
fwait
or
xor
test
cmp
in
lret
mov
mov
shll
seta
mov
in
xchg
cmp
es
aam
add
fidivrl
test
push
repz
dec
icebp
or
jge
lods
fadds
xor
dec
mov
out
ucomiss
sub
aad
xorb
pop
stos
bound
jle
call
sub
arpl
xor
mov
mov
mulb
xlat
mov
ret
shlb
es
xchg
enter
mov
mov
xlat
movsb
testb
or
xor
mov
push
mov
cmpb
sub
push
js
frstor
cltd
push
std
sub
into
out
dec
push
jne
pop
push
xorb
mov
ja
add
fsub
adc
je
add
out
inc
dec
stos
xchg
ss
and
xor
xchg
loop
inc
and
inc
rcr
jns
xor
xchg
repz
sub
mov
add
dec
mov
std
or
push
and
dec
mov
xchg
sub
mov
pushf
inc
inc
push
or
push
mov
jo
jb
add
nop
cmc
adcb
mov
cmp
lods
in
dec
gs
sbb
fbld
loop
es
lea
jo
mov
jo
scas
iret
mov
jge,pn
push
mov
cmpsb
jl
repnz
mov
jmp
imul
jae
cmpsl
inc
mov
out
sbb
out
pop
inc
xchg
adc
add
mov
lods
mov
fbstp
imul
int3
mov
sbb
lcall
jg
push
int
dec
pop
add
leave
push
push
add
pop
out
loopne
out
jmp
notl
addl
jo
ja
in
outsb
dec
rorb
std
enter
jo
mov
loopne
jg
nop
and
adc
cmpb
je
mov
mov
cmp
icebp
mov
out
xor
inc
inc
xchg
jecxz
insl
outsb
es
je
push
movsb
adc
in
ficomps
ja
mov
lret
hlt
ljmp
idivb
xchg
push
out
sub
std
outsl
cltd
xchg
leave
pop
incb
mov
insl
idivb
aam
aas
adc
sbb
scas
mov
inc
enter
lahf
loopne
test
sahf
dec
nop
lcall
pop
ja
and
adc
inc
and
out
jbe,pn
out
leave
jnp
dec
mov
shll
insb
mov
adc
cmc
test
loop
sbb
test
push
outsb
je
dec
inc
xor
mov
mov
mov
xor
mov
cmpl
mov
jb
loop
mov
insl
movsl
jg
jae
adc
xorl
imul
mov
jb
add
add
sbb
leave
dec
dec
xor
fucomip
sbb
in
jne
sub
mov
add
stos
push
push
shll
je
lods
xor
mov
jns
inc
lret
loope
arpl
inc
pop
sbb
mov
aas
jne
sti
sub
mov
inc
mov
jl
repz
mov
test
lret
mov
movsb
stos
imul
pop
mov
loope,pt
and
les
std
int
ds
adc
push
sub
add
and
jecxz
enter
dec
mov
xchg
test
nop
jnp
xor
push
dec
pop
push
cmp
pop
ja
cmc
jg
jecxz
sbb
jae
test
call
lock
in
repnz
dec
sbb
or
lods
nop
and
jmp
movsl
fildl
xchg
push
out
xchg
mov
fstpt
push
jae
adc
jae
dec
pushf
leave
fldcw
push
mov
les
aaa
sahf
shll
addl
inc
cmp
cli
inc
and
adc
xor
fs
lea
jmp
insl
inc
mov
test
pop
cmp
xor
hlt
dec
push
addb
iret
xor
int3
shlb
cmpsb
mov
sub
ffreep
jns
sbb
dec
out
psubusb
inc
sbb
mov
sti
jecxz
pop
pop
xchg
xor
adc
xchg
loop
shll
mov
inc
jp
lock
dec
and
out
aas
lock
outsb
adcb
inc
xchg
es
mov
mov
sub
sub
xor
mov
cmpl
xor
rcrb
inc
jne
cmp
cli
mov
pop
add
cmpsl
shlb
pop
loop
fldt
inc
xor
mov
xor
pop
mov
sub
stos
sbb
mov
xchg
aaa
call
das
or
xchg
cld
cmp
imul
or
push
mov
or
or
adc
ss
push
xchg
xor
mov
mov
outsl
push
mov
pushf
jnp
sbb
fs
rorl
ret
cmp
push
scas
in
enter
add
ja
jg
fs
call
es
in
stos
xor
stos
std
bound
fdivrs
sub
sub
xchg
loope
dec
inc
test
scas
cmp
frstor
xchg
pop
sahf
jbe
stos
or
ret
push
in
mov
jge
testb
fdivs
shll
aam
xchg
loop
shlb
lock
xchg
or
add
mov
js
push
lea
add
mov
imul
bound
stos
hlt
outsl
sbb
sbb
int
jle
gs
aam
add
fildll
lods
fdivr
aaa
addb
push
or
cmp
mov
movsl
or
mov
mov
sahf
push
push
add
xchg
jb
imul
test
jb
lret
mov
out
dec
shll
das
lret
sub
add
push
movsb
pop
mov
dec
inc
popa
orl
lcall
adc
xor
push
sbb
pop
adc
sbb
shrb
aas
insb
mov
movsl
pop
mov
cwtl
scas
in
in
xchg
jbe
sbb
mov
push
outsb
fstps
dec
ds
loope
pop
pop
add
cmp
ja
sbb
mov
inc
in
push
fildll
stc
jge
sub
cmp
aaa
add
inc
push
les
jne
aad
or
sarb
mov
sub
mov
repnz
scas
add
outsl
fs
mov
imul
add
xchg
subb
inc
push
mov
sub
movsb
inc
cwtl
dec
imul
je
sbb
jecxz
std
adc
imul
push
aad
out
xor
add
jmp
dec
fidivl
stc
sub
mov
inc
outsl
pop
stos
inc
dec
cmp
mov
xchg
movsl
dec
sbb
fildll
rorb
daa
cmp
push
nop
iret
inc
and
dec
jnp
jp
ret
pop
mov
es
lds
xchg
and
mov
cld
in
sbbb
dec
jae
xchg
and
xor
add
popf
inc
push
pop
lret
or
mov
shrb
xor
lods
mov
push
jno
fcomps
test
sub
xchg
out
adcl
xchg
cmpsb
in
push
add
cmp
cltd
out
push
mov
and
enter
leave
rcrb
leave
adc
pusha
outsb
std
in
inc
cmpsl
cmp
cs
data16
jp
imul
repnz
mov
pop
imul
lahf
jb
push
das
lods
sub
frstor
cld
in
jl
sahf
arpl
dec
nop
xorl
cli
pushf
popl
mov
or
out
jno
xchg
adc
lods
inc
xor
nop
divl
movsb
imul
inc
jecxz
ja
xor
pcmpgtb
sub
sbb
cmc
lahf
sub
cmpsl
pop
std
push
add
faddl
cmpsl
shrb
or
sbb
cmp
mov
int3
and
enter
jbe
lahf
or
push
mov
rclb
or
ret
sub
and
lret
mov
inc
andb
pop
loope
call
lret
scas
mov
outsl
mov
jno
mov
inc
pop
and
push
jecxz
dec
cmp
popa
mov
dec
bound
adc
imull
cwtl
pop
and
mov
sub
mov
adc
pop
stc
sahf
lods
out
addb
cmc
lods
addr16
adc
mov
xor
fsubl
jl
ret
in
sbb
adc
mov
xchg
aam
cmp
jo
sbb
lcallw
mov
repz
enter
enter
je
jmp
inc
call
sbb
sub
lock
xchg
pop
sub
orl
and
int
pop
jbe
mov
cmp
test
xlat
sub
add
clc
fstpl
dec
push
and
bound
jno
insb
lahf
pop
arpl
or
dec
jle
mov
adc
dec
ss
adc
push
push
mov
mov
pop
dec
mov
andl
jmp
push
cltd
and
sar
add
push
pop
push
mov
sub
dec
push
cltd
push
test
mov
fs
jo
cmp
adc
test
and
mov
push
jg
scas
ret
xchg
fdivrs
cmp
mov
xchg
ds
adc
push
dec
jnp
jae
nop
stc
mov
pop
loope
mov
sbb
ret
xor
adc
mov
cwtl
dec
xchg
imul
out
insb
add
jp
lret
fldl
mov
lods
adc
repz
repnz
mov
aam
push
mov
cmp
mov
sbbl
mov
movsl
shlb
in
fnstsw
and
in
mov
int3
imul
mov
cmp
shl
sbb
repnz
fmuls
inc
push
xchg
xchg
dec
mov
decl
adc
ss
xchg
frstor
push
pop
cmp
add
cli
jb
cmp
mov
dec
jl
cwtl
adc
xchg
xchg
jnp
dec
xchg
sahf
hlt
xor
outsl
jp
les
push
pop
call
cmp
ja
jno
jno
pop
lret
pop
xor
aaa
jo
cmc
jmp
sbb
pop
push
push
rcll
mov
in
mov
mov
pushf
pop
stos
jle
fists
imul
shl
push
sub
inc
imul
xor
and
and
cli
lcall
mov
jg
cmp
add
xor
cmp
scas
xchg
shlb
outsb
jne
movsl
fs
sbb
adc
xor
xor
dec
cltd
aad
das
inc
jmp
mov
mov
mov
fnstsw
pop
sbb
mov
push
xchg
repz
stos
xor
aas
jge
hlt
or
inc
inc
mov
xchg
xchg
sub
pop
aas
mov
nop
inc
bound
mov
mov
mov
pop
and
pop
in
mov
mov
imul
xchg
inc
jecxz
clc
stc
pusha
mov
movsl
jne
jge
fdivl
push
insl
mov
cli
inc
dec
pop
and
cmp
ja
cmpsb
or
sub
mov
push
popf
shrl
leave
jl
cwtl
add
mov
cli
test
imul
popa
fistpl
pop
cmp
insl
mov
in
mov
test
aam
adc
mov
dec
mov
shll
pop
xchg
mov
mov
fstpl
movsb
mov
inc
cmp
lock
stos
daa
hlt
mov
inc
gs
das
into
rorb
fidivl
or
out
mov
xor
push
cmp
jge
daa
mov
jp
or
pop
mov
sub
in
jmp
sahf
jb
add
inc
pop
dec
psrld
movsb
mov
push
fnsave
js
aas
mov
jnp
pop
cwtl
xor
sub
stc
adc
and
adc
mov
push
pop
cmpsb
jp
pop
aad
xor
repnz
es
int
cli
push
pop
insl
fwait
push
cmc
fdivrs
push
das
dec
xchg
icebp
and
jmp
sbb
lret
std
sub
jno
adc
outsl
ja
xchg
or
loop
sub
movsb
xchg
sbb
jg
in
inc
mov
sbb
cmp
add
movsl
test
xor
mov
dec
push
stc
inc
and
dec
notb
stos
sub
pop
adc
sub
stos
fnstsw
mov
adc
xor
imul
out
sub
std
add
push
sbb
jecxz
xchg
jns
pop
inc
stc
loope
cmp
and
int
mov
dec
lret
hlt
aas
xchg
xor
add
jecxz
jmp
cmp
fcomip
dec
push
out
adc
mov
adc
jl
mul
out
sbb
mov
pop
jg
push
pop
mov
adc
xchg
insb
pop
scas
fcmovnbe
push
xor
stc
cmpsl
stos
fdivrl
fwait
pusha
cmpb
shlb
popa
jmp
mov
pop
dec
jle
push
ljmp
xchg
sbb
mov
outsb
xor
into
fcomi
bnd
sbbl
adc
cmpsb
fisubrs
imulb
xchg
mov
jmp
repz
mov
clc
jo
imul
jo
or
or
cmp
mov
xchg
lock
sub
out
pop
xchg
xor
popf
insb
and
push
and
cld
in
test
jo
inc
inc
pusha
xchg
sub
xor
movsl
out
outsb
scas
inc
pop
dec
arpl
push
inc
mov
pushf
mov
pmaddwd
orb
xchg
fidivs
push
sub
and
push
ret
xchg
lret
insl
mov
pusha
mov
movsl
mov
mov
push
mov
bound
subb
dec
mov
or
repnz
aam
inc
fsubrp
lea
data16
insl
adc
pushf
lods
push
lea
mov
xchg
mov
xor
or
in
or
lea
lahf
loop
sahf
pop
cmp
out
fwait
ja
lcall
insl
and
insl
jle
jge
sub
shrb
pop
daa
xor
dec
pop
lahf
sbb
mov
out
pop
mov
or
adc
test
pushf
mov
lea
jl
icebp
push
ss
cmpsl
add
movsl
mov
mov
or
out
call
sahf
lcall
push
sub
out
outsl
ror
xchg
enter
lock
lret
outsb
ds
into
leave
sub
outsl
inc
jle
lret
pop
sarb
inc
inc
sbb
sub
mov
mov
cmp
xchg
sub
rorl
cmp
dec
jo
inc
fs
mov
dec
push
push
pushf
xchg
mov
jbe
lcall
dec
jle
jne
stc
push
pop
sbb
xor
add
ljmp
sahf
repz
adc
push
into
push
xor
cli
insl
adc
sar
rorl
jg
cmp
mov
bound
mov
dec
mov
test
xchg
add
test
jecxz
rcll
es
xor
cs
or
mov
test
sub
jg
aam
and
push
push
pop
je
arpl
js
jae
dec
lods
shlb
sub
fists
loop
mov
and
lcall
lret
dec
push
dec
xchg
push
push
sub
xchg
xor
dec
jo
popf
aaa
mov
scas
adc
loopne
cmp
or
popa
xchg
mov
stos
fisubrs
mov
jmp
push
fisttps
std
add
aam
inc
push
push
or
js
sbb
lcall
pop
out
fmull
inc
jle
into
pop
jl
fldl
in
sbb
es
inc
or
addb
aam
add
cmp
leave
inc
xor
insl
iret
or
add
icebp
xor
jo
movsl
adc
push
mov
xor
lods
neg
xor
xor
je
je
xor
repnz
push
push
sahf
xor
inc
aam
mov
adc
inc
dec
insb
sbb
sbb
fldln2
and
cmpsb
es
aaa
sub
enter
lea
test
fldcw
inc
clc
insb
or
inc
xchg
adc
xchg
addl
xor
adc
inc
enter
jo
insb
jmp
add
cli
adc
push
inc
fwait
xchg
jb
mov
push
fisubs
rcll
or
pop
into
mov
mov
adc
adc
adc
add
ss
dec
sub
cmc
mov
loop
dec
cmc
icebp
ret
aad
in
or
inc
sbb
shll
addb
adc
aam
mov
sub
lds
sbb
lods
sub
mov
nop
fcmovbe
and
mov
outsl
fwait
xchg
sub
imul
daa
add
add
lahf
popa
cwtl
mov
clc
adc
xchg
fdivr
rcl
and
lock
pop
test
daa
fcompl
in
ss
shrb
arpl
sub
cmpsl
push
inc
ret
pop
xorl
cmpsb
dec
testb
call
jl
jl
fs
or
popa
sti
not
xchg
sbb
sbb
in
xorb
in
leave
in
xchg
shrb
fcompl
lods
xor
gs
sub
icebp
xor
or
cmpsb
inc
mov
scas
int
rcll
adc
jns
pop
mov
xor
shlb
jb
push
jnp
mov
adcb
push
sti
and
add
imul
sub
dec
inc
sub
leave
notl
lods
dec
lods
push
cmc
insl
jl
mov
imul
pop
popa
xchg
rorb
mov
jnp
stc
jne
popf
jno
mov
mov
sbb
inc
fs
add
pop
xchg
pop
xchg
add
orl
adc
ficoms
mov
in
jg
cmp
mov
rclb
or
js
dec
ret
repnz
add
orb
arpl
sti
ret
mov
dec
data16
pop
int3
iret
icebp
add
dec
leave
xchg
or
lahf
addr16
xchg
sbb
jg
pop
xchg
xor
imul
xchg
iret
movsb
lds
xchg
mov
rclb
out
push
push
pop
dec
dec
inc
jecxz
sub
ljmp
xchg
xchg
cs
sub
les
and
out
jns
divl
or
negb
in
pop
stos
out
inc
cwtl
repnz
fwait
xchg
mov
inc
outsl
push
pop
call
sub
pop
or
incl
xlat
pushf
xor
arpl
or
popf
adc
jg
pop
xor
hlt
jbe
stos
popa
inc
dec
je
push
into
mov
mov
sbb
sbb
movsl
call
iret
in
hlt
bound
or
hlt
jb
sbb
fisubrl
mov
cltd
push
add
add
sub
pop
adc
pop
xor
dec
pop
fstps
aam
push
movsb
mov
xlat
faddl
callw
mov
aaa
cmp
pop
jmp
lcall
adc
mov
jg
aad
outsl
leave
jmp
and
loope
pop
add
xchg
filds
mov
add
push
daa
sub
je
ja
mov
push
and
jp
les
arpl
out
mov
leave
adc
mov
cmpsb
mov
push
jg
xchg
dec
lret
out
dec
pop
inc
lahf
sbb
pop
iret
in
pop
les
insl
dec
inc
mov
lahf
sbb
adc
push
adc
xor
fs
and
int
int3
insl
jno
mov
dec
xlat
cmp
lahf
cld
imulb
scas
sti
stc
add
sbb
sti
sarb
add
notl
fldl
mov
cmp
jae
cli
push
lea
or
or
lock
fiadds
cmpsb
lods
icebp
push
in
mov
out
sbb
hlt
mov
inc
push
enter
cli
lea
pop
lret
xchg
fs
out
xorl
add
sbb
hlt
ret
out
scas
pop
adcl
lahf
xchg
dec
fcompl
ret
inc
add
roll
insl
mov
push
and
js
xor
xchg
shl
ret
jb
popa
cmp
bound
testb
ja
out
in
scas
stos
ret
stos
loope
imul
mov
or
jno
adc
stc
or
mov
jecxz
mov
inc
push
pusha
and
jns
pop
nop
adc
int3
jno
test
ret
pusha
icebp
mov
mov
jbe
mov
lock
shll
add
inc
rcrl
icebp
mov
dec
inc
lds
inc
arpl
cwtl
pop
mov
adc
sub
sbb
jmp
scas
mov
in
xor
mov
int3
and
adc
dec
popa
outsl
imul
dec
xchg
stos
inc
movsb
lea
pop
mov
cmp
icebp
scas
es
adc
and
mov
jl
pop
push
cmp
jmp
pop
cli
cs
les
sbb
or
pushf
xchg
jg
or
pop
push
and
rcrl
call
cmp
mov
scas
nop
jle
fsub
sti
fmull
xchg
arpl
dec
fstpl
insl
or
sbb
shll
push
pop
aad
mov
sahf
pop
adc
popa
xchg
imul
mov
outsb
jns
adc
mov
and
mov
mov
cltd
xor
and
push
fidivs
mov
adc
fucomip
aas
sti
sahf
cmovle
mov
inc
cld
addb
xor
sub
insl
ret
cs
xchg
out
xchg
lret
ljmp
loope
dec
dec
std
mov
test
add
sahf
mov
aam
dec
mov
push
xor
mov
daa
mov
pop
dec
adcb
out
ret
andl
mov
pop
aam
arpl
in
bound
xchg
in
sub
add
sbb
aad
jnp
popf
fcompl
lcall
jnp
dec
mov
cld
outsb
cmp
pusha
ja
sub
push
repnz
lods
movsl
rclb
repz
lods
jae
shlb
ret
cmp
lods
imulb
xlat
inc
xor
mov
movsb
sbb
outsl
in
mov
out
in
mov
push
das
imul
push
xor
mov
mov
out
push
jno
lret
roll
mov
inc
xor
mov
lods
pop
mov
pop
cmpsb
les
mov
sub
sbb
add
inc
jae
mov
and
push
pop
xlat
pop
push
in
orb
lods
ret
ljmp
push
js
mov
xor
inc
roll
inc
xor
ljmp
adc
and
push
out
add
sbb
inc
mov
sbb
push
xlat
test
lcall
pusha
pop
sbb
test
push
ret
push
in
mov
pop
inc
dec
popf
dec
je
aam
push
std
push
dec
icebp
and
sbb
test
xor
jbe
adc
scas
and
sbb
fbld
mov
mov
cltd
inc
pop
jge
adc
xchg
mov
outsb
mov
push
and
jecxz
mov
sub
addr16
xor
lahf
adcl
add
xor
test
dec
or
aas
or
inc
sbb
sub
push
cli
outsb
or
out
lea
inc
lds
stos
sub
mov
mov
inc
xchg
repz
mov
pop
jnp
and
arpl
mov
leave
pop
dec
xchg
les
push
into
stos
int3
fsubr
jp
bound
jmp
jmp
stos
jno
jb
aad
loopne
sub
lahf
sarl
push
daa
cltd
push
and
js
sub
testb
aaa
out
repz
arpl
sub
jae
sar
mov
int
pop
iret
fldl
push
out
push
jmp
fwait
mov
ds
int3
dec
and
jl
pop
rcrb
add
fsubrl
xchg
fs
push
jno
mov
dec
jno
fsub
scas
inc
dec
xor
andb
inc
rcrb
fldl
mov
dec
test
jb
sbb
jo
das
scas
sub
jae
sahf
into
daa
pop
mov
xchg
cs
aaa
mov
mov
nop
lret
loop
pop
loope
ljmp
mov
popa
fidivl
mov
jp
ret
sbb
stos
test
into
xchg
bound
sbb
xchg
sub
scas
xchg
jle
adc
pusha
out
sub
rcrb
outsb
jp
xchg
mov
sub
stos
xor
cmpsl
jg
jne
scas
mov
xor
and
and
or
jno
mov
les
sub
add
and
push
fmull
push
pop
aaa
sbb
fsubrs
pop
imul
lds
mov
or
gs
or
sub
adc
scas
cwtl
push
int3
adc
sub
sarb
in
fs
lret
xor
stos
hlt
les
xor
xor
mov
ss
and
das
and
aad
or
push
loop
lods
push
enter
sarb
mov
push
leave
test
mov
adc
sysexit
sbb
lea
cmc
dec
add
add
ret
dec
push
or
mov
enter
ror
jl
mov
out
push
cli
adc
and
inc
mov
imul
fs
or
dec
cmc
sub
mov
mov
in
inc
mov
and
popf
jle
jb
lods
and
fcoms
sbb
push
xlat
pop
lock
sbb
or
ss
lahf
addr16
js
scas
or
xor
sub
mov
sub
mov
popf
jp
pusha
or
sahf
jnp
mov
fcmovnbe
out
scas
repnz
or
push
add
adc
mov
xor
testb
adc
clc
add
sbb
pushf
push
jecxz
sbb
push
and
mov
xor
xor
movsl
mov
and
int
aas
out
aas
lret
test
and
and
icebp
loope
loopne
pop
andl
dec
cmpsl
mov
outsb
or
xorb
push
sbb
push
xchg
jnp
gs
ljmp
inc
lods
jo
test
pusha
aad
add
orl
ret
js
xchg
mov
outsl
notl
xchg
sarl
mov
push
jne
sub
insl
jnp
js
adc
in
and
arpl
insl
shlb
inc
out
push
aas
pop
gs
inc
add
in
fcomp
mov
jae
xchg
push
imul
mov
test
sbb
ror
clc
rclb
mov
outsl
push
push
outsl
sbb
or
lret
xchg
ret
test
adc
dec
test
in
mov
jl
std
mov
xchg
xchg
in
test
in
mov
cmpsb
mov
pop
movsl
cmp
dec
int3
out
mov
jg
xchg
outsb
jmp
daa
jl
xchg
add
stos
pop
mov
mov
fwait
cmp
in
mov
xor
arpl
in
mov
in
sahf
movsl
iret
or
stc
mov
cs
mov
push
daa
xor
mov
mov
and
cltd
repz
sbb
xchg
xor
stos
dec
mov
das
hlt
jecxz
mov
cmpsb
inc
sar
loopne
inc
arpl
imul
dec
cmp
jmp
sbbb
ret
jb
inc
rolb
fucomi
xor
int3
push
es
dec
gs
outsl
icebp
ss
out
lea
divb
daa
sbb
pop
sar
dec
jnp
lahf
xor
movsb
push
es
sbb
xorl
in
shrl
pop
fcmove
dec
jle
and
fadd
inc
rcrb
jp
sub
pop
add
add
jb
pop
repnz
addr16
mov
lods
pop
sbb
subl
pop
sbb
mov
xlat
cmpsb
je
andb
call
icebp
sub
ds
rcll
sbb
call
dec
or
jmp
or
adc
hlt
xlat
dec
dec
movsl
pop
jae
mov
sahf
lods
arpl
mov
xlat
push
cmc
and
jno
mov
cs
pop
icebp
call
das
jbe
pop
lock
jp
data16
idivl
jp
xchg
cli
fidivrl
test
mov
jns
imul
hlt
mov
jle
mov
jecxz
lods
dec
adc
jo
cmp
pop
mov
xor
dec
hlt
pop
out
cs
fwait
sbb
adc
mov
jae
mov
stos
sti
test
lret
cmp
sbb
les
push
xchg
push
mov
out
fxch
aad
jmp
cltd
std
out
fs
cmp
sbb
mov
xorl
sti
cmc
movsb
int3
cld
add
sbb
xor
lcall
lcall
inc
lret
cmp
push
cs
inc
pop
mov
loopne
lds
inc
xor
xor
pop
clc
mov
testb
shrl
pop
pop
or
arpl
lret
lods
add
shrl
aaa
std
jbe
ret
les
jae
test
xor
jno
xor
push
pop
subb
jg
mov
fstl
jnp
pop
sub
mov
pop
and
add
ds
mov
push
aad
push
lds
repz
and
push
mov
add
adc
xchg
idivb
xchg
jno
sbb
mov
adc
add
xor
lock
pop
adcl
in
lea
adc
movsb
je
push
jbe
ret
lret
fdivrl
scas
insb
lret
inc
mov
clc
mov
pop
xor
ss
lcall
jecxz
out
cwtl
fwait
mov
jnp
rolb
xchg
outsb
add
xor
sarl
pushf
sbb
js
mov
xor
jmp
mov
add
call
stos
pop
mov
inc
mov
sub
cmp
adc
sub
daa
fbld
ja
js
out
mov
xor
cwtl
push
jo
inc
dec
es
in
jge
dec
xchg
test
int
xchg
push
shlb
nop
popf
pusha
imul
cmp
and
jl
nop
cmpsb
push
lret
adc
mov
fsts
repz
fs
and
pop
lea
shlb
in
mov
xor
cmpb
ljmp
dec
jno
sahf
jo
and
ficoml
push
xchg
cmpsl
fistpll
jg
jno
mov
cmp
loop
scas
insl
cmc
sub
fsubl
jns
pop
jbe
jbe
test
fstpl
xor
roll
jns
cs
jge
xor
jnp
dec
cmp
mov
xchg
movsl
pop
mov
mov
mov
ret
sbb
cmp
jb
ljmp
or
jl
iret
xor
xchg
stos
or
cmpsb
xchg
sahf
out
icebp
mov
lea
jae
cmp
mov
adc
dec
jbe
push
pop
fdivs
icebp
mov
lods
jecxz
or
inc
lock
jbe
add
cmp
popf
cmp
sub
out
lods
xor
popa
fidivrs
sub
sbb
push
add
scas
dec
push
fstps
mov
or
scas
out
mov
and
stos
cmp
mov
loop
cwtl
pusha
popf
jno
insb
and
xchg
pop
fsubr
push
push
pop
pusha
decb
mov
popf
mov
xor
lds
mov
cmp
adc
nop
out
sub
outsl
push
movsl
inc
mov
test
test
ja
imul
in
pop
insl
in
int3
iret
add
stc
icebp
mov
jne
rcl
push
popf
inc
jl
ss
lahf
loope
lds
push
leave
sub
loop,pn
ret
push
cmp
xor
jp
in
shlb
loop
test
mov
xlat
test
dec
in
test
test
or
ljmp
inc
add
jmp
sbb
outsl
loopne
push
pop
add
mov
pop
ret
adc
cwtl
imul
nopl
push
cmp
sbb
dec
add
jae
sbb
loope
xchg
xchg
out
adc
enter
stc
xlat
sub
and
cltd
in
and
dec
test
loope
rclb
jno
aad
addr16
and
ret
rcrl
test
pop
and
mull
pop
jns
ret
adc
out
sbb
outsb
shl
push
je
xor
aad
pusha
fdivrs
enter
push
pusha
repnz
cmp
insl
sub
pop
lods
and
mov
lahf
adc
or
xchg
or
inc
pop
xor
fimull
or
dec
xchg
jmp
sbb
ja
ljmp
jno
popf
push
into
sub
dec
dec
mov
nop
rorl
jns
xchg
rep
jns,pt
xchg
jb
loop
mov
fwait
jmp
mov
fidivl
andl
ljmp
push
push
repnz
mov
aas
cmpsb
loopne
dec
cltd
mov
or
adc
shlb
ret
jmp
inc
and
fstpl
or
into
xor
data16
mov
sub
stos
pusha
xchg
lahf
push
shlb
mov
fwait
adc
fiaddl
dec
out
out
aas
sub
jno
rcrl
andl
ret
mov
jle
mov
lahf
jle
out
adc
enter
sti
mov
stos
test
cmp
cmp
inc
xor
push
ret
ja
cltd
decl
push
dec
or
ja
jl
jmp
jge
shrl
lock
or
mov
push
push
jno
pop
dec
dec
cmc
push
daa
sub
add
shrl
mov
movsb
mov
cli
ja
xchg
xchg
jae
and
adc
mov
xchg
std
daa
fmull
add
xchg
pop
inc
pop
insb
and
cmp
pop
clc
jge
dec
dec
push
dec
cmp
popa
xlat
xchg
xor
imul
mov
ss
inc
aaa
push
bound
jo
or
inc
in
adc
jmp
stos
mov
cmp
adc
das
scas
scas
add
lock
and
pop
jae
and
xchg
fmul
add
clc
cmp
mov
call
imul
add
lret
or
mov
shrb
aaa
pusha
cli
inc
roll
and
xor
loop
lods
test
stos
cli
jno
out
mov
rdpmc
dec
xchg
fsubrl
pop
outsl
mov
sbb
adc
rcll
data16
popf
sub
ja
pop
mov
aaa
xchg
sbb
loope
cs
add
clc
fbld
arpl
xchg
nop
adc
aad
mov
js
in
int
jle
pop
adc
push
es
ja
push
push
in
sub
sbb
push
clc
lret
lret
ficomps
xchg
popa
repnz
push
cmp
pop
lahf
in
cmp
call
cmpsl
mov
int3
ljmp
push
cmpsb
fadds
ficoml
aam
int3
gs
push
or
not
push
es
pop
adc
fadds
inc
ss
push
sbb
xor
xor
pop
adc
push
loop
cmp
stos
sbb
cmp
push
xchg
pusha
dec
repz
push
call
cltd
jmp
lods
out
cli
push
xlat
pop
mov
notl
cmpsb
push
cmp
xchg
sbb
pop
sub
mov
inc
jg
fstpt
std
mov
mov
ljmp
push
imul
cmp
mov
ds
dec
loopne
xlat
call
push
ficoml
mov
les
sub
rolb
jnp
loop
and
shll
xor
dec
xor
push
xchg
sub
fstpt
repnz
or
out
js
aas
xchg
inc
jae
cwtl
adc
icebp
insl
cmpsb
adc
icebp
cwtl
and
sbb
sbb
xchg
and
pop
push
fldenv
or
aad
aad
mov
aam
popf
adc
sub
shll
push
nop
movsl
ret
out
xchg
aas
xorb
xor
rorb
adc
adc
lea
dec
adc
add
movsb
add
daa
xor
sub
popf
xor
sbb
xor
out
mov
or
incl
repz
push
xchg
mov
xor
jge
sbb
subl
pop
lret
adc
dec
pop
std
arpl
mov
jmp
or
popa
sub
xchg
lcall
mov
lret
pop
imul
lahf
icebp
push
adc
scas
dec
aaa
xchg
push
roll
sub
or
ficompl
jmp
outsl
push
and
mulb
movsb
or
xchg
in
mov
movsb
repz
fbstp
push
xorl
ja
fimuls
sbb
pusha
xor
popa
push
pop
flds
cmp
sbb
jne
adc
jp
mov
xor
add
sub
loopne
pop
inc
xor
add
cwtl
sub
or
sahf
mov
test
jno
lret
fsubl
dec
push
out
and
sub
rcrb
pop
fildll
stc
mov
mov
or
cmp
add
adcl
je
scas
cmp
push
scas
notb
xor
cmp
cmp
xchg
adc
outsb
xchg
movsb
or
aas
or
das
pop
pop
mov
sbb
dec
mov
mov
addr16
imul
cmp
sub
out
int
iret
jno
xchg
cmp
test
cmpsl
hlt
fdivs
adc
inc
arpl
cs
pop
xchg
jns
nop
stos
and
or
orl
sbb
xchg
mov
out
mov
cmp
fld
mov
adc
es
xorl
and
inc
xor
jmp
mov
xor
sbb
mov
mov
je
in
sub
fs
jns
mov
test
and
call
jnp
cmp
or
jns
daa
idivl
dec
lahf
dec
push
mov
in
insl
sbb
sti
movsb
or
fsubs
ds
lcall
repz
int
sub
push
sub
adc
lret
fdivrs
movb
stos
fdivrs
and
out
and
movsl
xchg
sbb
jo
int3
and
imul
in
mov
js
xor
dec
mov
ljmp
stos
push
sub
jne
adc
ljmp
notl
xchg
in
arpl
mov
pop
movsl
addr16
mov
jecxz
test
mov
mov
call
push
push
popf
xchg
push
int3
insl
pusha
sub
fs
inc
mov
orl
inc
test
sbb
ds
mov
lods
les
add
icebp
mov
fcomps
cmp
das
roll
jnp
dec
sub
movsb
mov
push
xchg
ljmp
inc
inc
hlt
inc
out
ja
fdivrl
test
fdivrl
inc
dec
cwtl
mov
in
aaa
pop
add
in
popf
pop
out
test
pop
push
jge
xor
sbb
imul
jns
outsl
sbb
xchg
or
sub
xor
nop
cltd
cld
or
iret
sbb
mov
xchg
push
mov
push
shll
xchg
mov
mov
repnz
mov
ret
aam
bound
scas
inc
inc
xor
push
xchg
push
dec
or
sarl
dec
pop
adc
xchg
mov
add
cmc
mov
js
movl
push
sar
mov
ds
daa
xor
lds
mov
test
mov
fiaddl
mov
clc
sahf
mov
mov
call
mov
sbbl
outsl
adc
or
xchg
sti
enter
pop
pop
call
xor
cmpsl
test
mov
xchg
rorb
xor
addr16
enter
cmp
in
pop
loope
fucomip
or
shufps
sbb
pop
push
sahf
gs
pop
test
xchg
cmp
dec
or
push
popf
loope
lret
aam
int3
cltd
sub
inc
pop
cmp
bound
fisttpl
jecxz
clc
imul
movsl
js
mov
push
out
mov
es
outsl
cmp
cmp
adc
lahf
mov
fcomps
pop
jg
adc
jg
cmp
xchg
sub
ss
inc
push
push
sub
ret
or
and
jmp
lahf
test
inc
inc
das
mov
or
les
ror
push
pop
hlt
out
cmpsb
mov
mov
data16
jo
jae
add
repnz
mov
std
mov
xlat
arpl
dec
inc
sbb
mov
inc
sbb
xchg
jnp
jg
test
sbb
push
iret
pusha
out
fbld
pop
jno
cld
dec
and
movsb
and
dec
adc
lahf
imul
ret
push
mov
gs
xor
inc
xor
aad
lock
ret
not
ficoml
cltd
out
sub
mov
sbb
or
loope
mov
xlat
mov
into
xor
test
jp
in
mov
sbb
ss
loopne
imul
xchg
jns
and
mov
sbb
insl
inc
xchg
mov
rcrl
insl
shll
sahf
int3
sub
jo
xchg
add
aad
jnp
into
push
imul
xchg
mov
cwtl
ds
push
sub
push
iret
iret
lret
cmp
out
loope
sbb
outsl
lret
xchg
lcall
aad
mov
mov
fwait
inc
into
or
mov
add
mov
out
mov
insb
push
sub
push
dec
pusha
add
movsl
cmp
mov
xor
adc
cltd
aam
out
inc
push
fcmovbe
sbb
mov
data16
cwtl
stos
fs
xchg
jno
das
repnz
and
mov
rcrb
dec
mov
or
cmp
cmp
and
int
jp
jnp
dec
pop
sahf
mov
add
jae
cli
pop
adc
cmp
icebp
cmp
lea
cmp
adc
pushf
in
jp
outsl
push
sub
ret
adc
movsb
inc
and
out
mov
in
fdivs
jp
mov
xchg
adc
mov
jecxz
sub
std
push
xlat
jno
pop
and
stos
mov
cmp
xor
or
lfs
aas
xchg
mov
je
stos
cmpb
popa
stos
xor
push
mov
sub
je
dec
out
das
add
int
lahf
pop
movsl
and
sub
cwtl
cmp
cld
arpl
lcall
pop
pop
push
dec
enter
scas
ljmp
dec
aaa
mov
out
loop
lods
icebp
icebp
fwait
mov
and
in
cld
imul
aad
cmpsl
fcmovbe
xchg
pushf
mov
ds
xchg
stc
pushf
jbe
inc
or
cwtl
rep
aas
cmp
jecxz
push
movsl
aam
pop
inc
sbb
push
test
cmc
push
mov
add
mov
cli
insb
pusha
pop
jne
in
fs
push
sub
lcall
cltd
push
push
or
lcall
cmp
sub
sub
mov
adc
sub
cli
jne
pop
scas
push
fsubrl
pusha
inc
push
or
jg
dec
cmpb
jnp
loope
jl
pusha
ja
inc
in
sub
xchg
movsl
jecxz
dec
push
into
sub
inc
add
sub
enter
int3
and
cltd
adc
icebp
and
push
and
ret
sbb
dec
dec
ret
popf
xchg
and
int3
shlb
in
xchg
mov
scas
jnp
mov
jnp
xor
inc
repz
or
jno
mov
jg
stc
imulb
mov
mov
out
outsl
push
les
lods
js
aaa
lea
popf
inc
jp
mov
es
les
lock
sub
bound
jge
orl
js
jle
cmpsl
mov
cld
test
adcb
jae
aad
cmpsb
fsubrp
inc
xchg
in
inc
mov
xchg
and
pop
fdivs
pop
aas
jb
sub
js
add
adc
xor
adc
ja
loop
add
sahf
mov
push
mov
xor
mov
iret
sar
ret
or
aad
push
add
call
call
jmp
cwtl
mov
mov
pop
cmp
add
je
dec
cli
pop
insb
push
xor
inc
mov
es
pushf
ljmp
repnz
jns
pop
fnstsw
mov
lods
bnd
push
xor
cli
rcrb
mov
ja
mov
pop
add
xor
fwait
dec
mov
push
test
cwtl
aam
mov
adc
ja
and
stos
mov
push
subb
jle
js
push
andl
cmc
inc
adc
inc
lods
call
mov
sahf
jmp
pop
and
push
mov
jns
xlat
aam
outsb
and
dec
mov
pop
in
or
repnz
lods
cmp
jae
pop
adcl
imul
bound
mov
adc
or
bndldx
xchg
jle
dec
mov
cmpsl
cmpsl
xor
jae
aad
inc
in
adc
jae
inc
in
mov
lcall
shlb
or
out
add
pusha
inc
jmp
mov
jg
push
and
dec
inc
pop
mov
and
cmp
dec
les
outsl
ljmp
mov
xorb
cmp
jbe
pushf
add
scas
je
dec
andb
sbb
fs
in
mov
lcall
push
popa
popa
push
out
push
push
test
push
mov
hlt
add
sub
xchg
loope
jg,pn
stos
adc
push
lahf
js
mov
mov
fiaddl
subb
sti
fdivl
cwtl
ss
pop
push
test
ljmp
dec
sub
jge
dec
push
push
and
adcb
jecxz
mov
bound
jle
cmp
adc
mov
xor
sbb
jle
shll
andl
mov
data16
repnz
pop
xchg
jp
pop
jge
hlt
enter
push
mov
sbb
push
test
inc
inc
cld
xor
push
inc
in
in
jnp
fsubrs
outsb
call
inc
pop
mov
pop
xor
shrl
mov
test
iret
sub
mov
xor
sub
mov
lods
pop
imul
mov
push
movsl
sbb
sar
in
lcall
test
dec
adc
je
int
jb
repnz
mov
call
add
jl
lea
pop
rcrb
lea
hlt
loopne
loopne
xchg
fwait
push
pop
call
push
rcl
cs
mov
stos
inc
icebp
lahf
decb
pop
pop
cmpsb
jle
adc
and
dec
or
sti
jmp
or
sbb
int
movsl
fistl
dec
adc
push
call
data16
call
sub
jecxz
stos
dec
push
add
enter
ja
inc
or
mov
sbb
dec
and
imul
filds
popf
xchg
add
std
mov
lock
push
sbb
or
dec
and
lahf
test
push
jl
stc
inc
push
cwtl
movb
add
adc
jle
insl
cltd
das
sti
mov
inc
arpl
mov
cmpsb
or
inc
pop
rcll
or
insb
jge
mov
das
add
jl
xchg
cmp
call
mov
push
test
jp
aam
mov
and
out
cmovb
mov
jo
xchg
fldcw
mov
xor
sbb
xor
mov
push
iret
popa
loope
fiaddl
movsb
daa
into
or
pop
pop
sbb
adc
lods
or
jno
aaa
bound
scas
jg
test
mov
scas
mov
pop
jnp
sbb
dec
add
mov
aam
cs
adc
pop
xorb
dec
into
pop
mov
fs
cmp
jmp
pop
mov
lods
ficompl
mov
sub
sub
aad
mov
lods
mov
push
lret
adc
out
add
cmc
xchg
fldl
sti
into
daa
push
dec
jnp
jmp
lret
and
int3
push
push
stc
shr
or
test
mov
fstl
fwait
jecxz
sbb
pushf
lea
pusha
aad
add
in
inc
mov
icebp
push
test
repz
into
ja
fdivs
loopne
or
cmp
jo
iret
fdivs
in
cmpl
je
ljmp
in
jbe
adc
and
xchg
pop
inc
into
cmp
xor
into
jge
call
and
sahf
jge
rcr
dec
mov
and
lods
jle
jp
dec
and
stc
cmp
scas
out
incb
jl
addr16
mov
push
sub
cmp
das
adc
pusha
inc
ljmp
les
stos
push
mov
lahf
sbb
and
pop
sub
bound
in
push
lret
lahf
lahf
frstor
sub
push
push
add
iret
cmp
mov
and
out
fucompp
es
inc
mov
pop
fnstenv
leave
or
pop
test
or
push
bnd
adc
and
rorl
dec
mov
mov
mov
pop
mov
mov
xchg
in
sbb
mov
rcrl
clc
movups
les
add
jmp
std
xchg
in
jns
mov
pushf
rorl
loop
test
rcr
sub
push
mov
jp
pop
fs
jno
dec
mov
push
pop
cmpsl
pop
mov
je
dec
sahf
xchg
jp
cmp
sub
sub
ret
dec
cmp
iret
js
add
pop
push
sub
sub
aaa
jge
mov
sub
xchg
aas
adc
xchg
inc
push
mov
jnp
mov
pushf
jl
rep
out
sub
jb
mov
sub
data16
into
inc
add
xchg
jae
and
and
push
icebp
mov
dec
jns
or
sbb
dec
or
incb
push
mov
jg
in
mov
sbb
inc
dec
jne
aas
insb
mov
inc
adc
outsl
flds
bound
adc
xchg
adc
out
movsl
xchg
jb
mov
fs
pop
in
movsl
xchg
jae
filds
push
fdiv
dec
fidivrs
inc
imul
rol
leave
jp
rorb
push
stc
inc
jge
cwtl
pushl
adc
out
pop
ret
mov
inc
cmp
lcall
call
push
push
ja
cmp
mov
inc
sub
push
add
fdivr
call
xor
fdivrl
pop
pop
insb
mov
in
pop
mov
jo
or
ret
jl
sbb
shld
out
mov
xor
ret
lds
jg
insl
addr16
fidivrs
ds
fisubrs
pop
mov
inc
push
int
dec
push
shlb
adc
jmp
loope
xchg
pop
push
pop
and
sub
imul
mov
pop
stc
inc
out
mov
decb
inc
flds
push
in
sub
push
jmp
decb
or
call
jne
cmp
sub
out
arpl
push
andl
pop
std
jl
insl
stos
dec
cwtl
xchg
pop
mov
into
in
sub
jg
imul
xchg
leave
cmpsl
nop
daa
gs
stc
dec
in
ljmp
sarb
rcll
xchg
dec
lods
sbbb
dec
stos
push
lret
dec
xchg
dec
xchg
daa
jmp
pop
test
mov
pop
ljmp
jno
mov
inc
fsub
movsb
sbb
test
cmp
clc
xchg
movaps
add
pop
cmpsl
xchg
cmp
dec
je
jbe
sub
call
mov
shlb
mov
enter
adc
loop
in
test
mov
into
loop
push
les
rorl
mov
cld
scas
add
pop
push
bound
push
sbb
out
pcmpgtd
test
hlt
push
jl
xor
popf
sbb
cs
xor
iret
jbe
cmp
in
shll
into
cmp
cmp
and
dec
push
mov
xchg
cmp
cmc
loope
jnp
cmp
inc
insb
jno
add
ja
sbb
into
jae
add
pop
mov
push
out
push
jns
hlt
sbb
rcl
inc
hlt
cwtl
mov
sub
inc
sti
sbb
sbb
inc
clc
mov
enter
mov
push
xchg
add
inc
mov
inc
mov
fwait
jns
fs
sbb
and
iret
shlb
and
add
pop
sub
sarl
pop
xchg
enter
push
repnz
dec
pop
cwtl
inc
jbe
negb
das
nop
lahf
test
pop
add
adc
sub
cmp
xchg
leave
lods
jne
test
scas
pop
fmulp
jb
xor
mov
add
outsl
cwtl
imull
cltd
mov
iret
pop
adc
out
inc
and
mov
mov
ljmp
mov
mov
and
rolb
cltd
cmpl
lods
lret
cmp
sarl
mov
enter
out
icebp
popf
or
inc
inc
inc
js
or
xor
mov
sarl
jp
push
pop
sub
in
es
cs
popa
test
pop
dec
ret
mov
clc
jl
mov
addl
mov
sbb
xchg
int
push
ds
cs
andl
fcmovne
test
ljmp
nop
adc
jns
pop
sbb
cltd
push
cmp
jmp
jno
decb
mov
sti
pop
cmp
mov
mov
sub
hlt
bound
add
push
notl
mov
mov
movsb
shl
or
adc
or
mov
lea
inc
jnp
pop
and
push
adc
imul
mov
loop
sbb
ret
or
dec
fcomi
movsl
pop
jg
sub
mov
or
sti
sbb
pushf
test
push
or
adc
pop
or
cmp
cmp
mov
xor
mov
js
and
jb
rcrl
pusha
mov
lcall
mov
leave
sahf
pop
call
adc
int
je
cli
stos
sub
aaa
xor
lds
pop
jns
outsb
push
pop
push
dec
xchg
push
ficoml
jnp
movsl
jae
pop
js
dec
push
rclb
sub
push
nop
clc
mov
jg
jle
enter
ljmp
pop
adc
enter
xor
jmp
cmp
mov
sbb
push
cmp
out
js
movsb
sub
xchg
les
cmpsl
data16
mov
xchg
xchg
inc
cmp
out
sub
jns
mov
lods
mov
lods
call
fwait
pusha
mov
add
dec
popf
and
lods
and
les
mov
idivl
cs
test
mov
scas
jl
int
adc
pop
cmp
loopne
not
mov
cmp
lahf
mov
xor
mov
xorl
cmp
push
pop
aas
outsl
int3
adc
push
in
jge
inc
je
insl
outsl
subb
mov
dec
fs
in
mov
mov
repnz
jp
das
iret
flds
cmp
fildll
dec
jo
dec
repnz
stc
push
mov
repnz
in
cli
mov
insb
fs
in
inc
mov
insl
ficoml
in
pop
xorb
ficomps
insb
popa
jb
fdiv
fildl
fcomip
pop
ljmp
mov
mov
mov
dec
mov
stos
inc
in
imul
jns
clc
push
je
test
int
pop
test
xor
dec
cs
daa
nop
push
out
mov
fisttpll
out
call
rol
push
jb
or
ret
mov
dec
dec
neg
dec
sahf
pusha
test
jmp
sbb
xor
jb
mov
push
push
or
movsl
mov
dec
sbb
cli
aas
pop
sahf
fstl
pop
mov
sti
and
mov
repnz
mov
jle
inc
js
mov
or
mov
inc
or
dec
inc
cmp
dec
fs
ljmp
mov
pop
lock
adc
ja
pop
push
dec
lods
adc
and
cmp
or
sub
adc
outsl
cmp
cli
fildl
cltd
roll
mov
nop
movsl
pushf
mov
xchg
js
ret
test
dec
std
int3
jns
ljmp
aaa
cli
push
mov
call
adc
push
js
fs
incl
jns
jp
adc
shll
stos
imul
fisubrs
mov
decb
adcb
mov
mov
xor
sub
mov
dec
and
std
popa
aam
in
mov
pop
dec
mov
and
add
pop
xor
mov
mov
arpl
test
push
popf
insl
rcll
jo
ret
les
test
sub
xorb
cltd
add
add
inc
mov
inc
xchg
jnp
push
dec
hlt
iret
xchg
dec
cmp
and
push
add
call
sbb
mov
arpl
jb
aaa
cs
gs
lahf
cmpb
imul
fwait
push
jbe
fadds
xchg
pop
sarb
mov
out
inc
ret
call
shr
and
push
xor
sub
sbb
pop
stos
in
xchg
call
arpl
pop
notb
imul
add
out
test
sub
jg
jg
imul
dec
das
movsl
rcll
mov
push
jl
push
aaa
dec
mov
fstps
push
out
outsl
dec
jle
push
mov
out
push
enter
push
pop
adc
pop
in
mov
jmp
jbe
mov
sub
rcrb
cmp
out
sub
or
hlt
daa
je
sbb
fisubrs
leave
push
fcoms
cmp
cmpsb
mov
repnz
mov
pushf
jbe
add
rorl
fs
lret
insl
movsl
push
inc
mov
jmp
cmpsb
leave
or
fiadds
adc
dec
aad
and
out
add
add
dec
mov
or
mov
push
cmpsb
adc
sarl
inc
dec
jmp
cld
scas
test
xlat
jmp
dec
stos
ljmp
xchg
push
xor
stos
fisttpll
cmp
mov
pop
xor
mov
push
popf
adc
pushf
xchg
cmp
mov
and
add
movsl
dec
insb
adc
mov
dec
aas
sub
fs
or
sub
sub
inc
into
push
shrb
aas
pop
cld
pop
jo
lret
xchg
xor
ficomps
push
inc
insl
fcompl
out
ficompl
dec
lea
popf
rcrl
and
imul
jecxz
lahf
pop
cmp
out
sub
inc
push
adc
and
fcom
outsb
mov
stos
dec
andl
pop
xchg
add
push
mov
fidivrs
jle
pop
push
movl
mov
pop
cli
lcall
pop
xchg
loopne
inc
or
js
insl
iret
leave
mov
cmp
cmc
pop
push
push
lcall
icebp
sbb
or
mov
fnstcw
add
loope
stos
lock
gs
imul
push
dec
sub
ror
adc
out
or
mov
cltd
shrl
outsl
mov
fldpi
imul
pop
jecxz
adc
mov
add
dec
inc
test
js
jns
inc
loopne
jg
cmp
in
pop
cmpsb
xor
xchg
test
imull
mov
sbb
fisubrs
adc
mov
pop
repz
xor
aad
adc
xorb
and
pushf
push
mov
test
pushf
test
test
sbb
data16
call
pop
test
pop
fnstsw
xor
mov
aas
pop
hlt
popa
bound
inc
orl
fsub
add
mov
xabort
test
jmp
lret
adc
inc
push
arpl
lds
insb
cmp
push
xlat
addr16
sub
outsb
pop
loopnew
test
or
test
aas
test
lcall
insl
gs
sub
mov
pop
xlat
pop
push
lods
mov
stos
outsl
aas
mov
mov
fsubrp
or
imul
pusha
push
jns
cmp
into
shlb
push
in
sti
mov
cwtl
orl
fistl
bound
aad
inc
or
sub
inc
clc
adc
ss
fsubl
jbe
sbb
idivl
sub
adc
mov
jmp
in
fldln2
xchg
jno
jno
loope,pn
dec
add
xchg
cltd
or
popf
test
imul
fsubs
push
nop
pop
ret
inc
jno
xchg
push
cld
and
fisubl
inc
jp
movsb
inc
xchg
jae
ficoml
repnz
xchg
jecxz
pusha
mov
dec
das
mov
rcrb
dec
push
cmp
out
cmp
ret
xor
js
jno
icebp
ss
push
out
ja
sub
sub
insl
test
jg
push
and
jge
mov
mov
sbb
xchg
sub
adc
jge
pop
test
xchg
ja
and
dec
pop
inc
sbb
subl
push
or
pop
push
in
mov
fstpl
cld
xchg
or
jne
gs
out
out
lret
push
in
push
lock
and
xor
dec
jo
lahf
inc
cmpsb
pop
repnz
and
sub
cmp
xchg
mov
test
into
pop
sarb
or
fs
addb
or
ret
js
mov
xchg
or
dec
imul
push
scas
or
es
xchg
jno
or
test
lahf
repz
push
jnp
sahf
clc
movsl
dec
out
inc
fstl
stc
xchg
in
fisubl
out
mov
adc
sub
xor
jbe
es
or
add
pusha
mov
scas
mov
xor
dec
fmuls
xlat
push
sub
jns
outsb
lret
inc
push
rorb
bound
cmp
test
sbb
xchg
test
aaa
add
gs
pop
push
std
xchg
jmp
out
pop
nop
inc
enter
shll
inc
sbb
aam
ret
sysret
jp
aaa
outsl
int3
push
jge
lret
add
aas
arpl
das
enter
enter
cmp
push
sub
lret
or
mov
pop
mov
adc
outsb
clc
adc
aas
xor
decb
pushf
or
imulb
mov
dec
and
cmc
sub
repz
lret
aas
inc
mov
pop
cmp
mov
lock
rcll
adc
loope
cmp
xchg
inc
outsb
pop
test
movsl
mov
lea
scas
mov
mov
sbb
cmp
dec
mov
frstor
sbb
pushl
push
into
addr16
lea
xchg
aas
fsubs
mov
adc
aad
xchg
adc
and
jge
cwtl
nop
shlb
dec
mov
leave
mov
and
inc
pop
and
cltd
dec
outsl
arpl
leave
pop
jg,pt
fisubs
lds
and
mov
xchg
adc
and
stos
fcomps
push
xchg
push
dec
std
xchg
sub
sub
hlt
and
cmp
addl
mulb
xchg
jg
pop
sahf
xor
xchg
and
ljmp
addr16
rorb
aaa
lds
jmp
js
int
fs
xor
in
or
in
test
fldenv
push
inc
add
adc
in
or
arpl
xlat
xor
xchg
incb
sahf
fldt
cmp
push
cmp
and
aas
push
sbb
lods
int
orb
mov
inc
jmp
jmp
or
movsl
sarb
das
in
cmp
test
add
stc
add
mov
dec
sahf
and
in
sbb
imul
je
mov
outsl
xchg
gs
adc
loopne
dec
cmp
pop
push
testb
inc
sbb
sub
mov
lahf
pop
shll
fisttpll
cmp
cmp
mov
jg
aaa
mov
and
js
xor
jnp
shlb
jo
sti
xchg
mov
lods
xor
pop
mov
jns
leave
pop
outsl
in
add
dec
rolb
xor
add
fwait
inc
ficoms
shlb
xchg
lahf
mov
mov
into
icebp
xor
repz
push
cmc
leave
xchg
dec
outsl
dec
xor
dec
pop
jge
cmpsl
xlat
mov
mov
xor
popf
lock
popa
jns
repnz
hlt
or
jnp
incl
aas
or
xchg
push
bound
lods
inc
roll
cmp
addl
or
mov
and
sbb
adcb
push
jo
iret
adc
je
adc
xchg
jmp
xchg
push
add
out
add
pop
add
gs
cmp
jg
inc
and
js
in
mov
cwtl
xor
lods
loopne
repz
fsubr
cltd
jnp
xchg
inc
leave
js
sub
xor
pop
rolb
es
sub
jae
mov
pop
popa
shl
jle
pop
in
adc
mov
je
sbb
sub
pop
insb
out
int
inc
pusha
ret
ss
and
mov
lods
mov
mov
and
or
sti
lock
xchg
lea
subl
lock
xchg
inc
jle
add
cmp
cwtl
cmpl
sbb
out
xor
xchg
pop
in
outsl
mov
sti
add
aas
das
shl
jp
mov
pop
int
sub
mov
mov
loopne
in
cmpsl
rolb
fists
or
insl
lea
mov
nop
pop
or
rcrb
xchg
fs
inc
arpl
xchg
clc
jecxz
stos
adc
movsb
sarb
and
jnp
xchg
mov
dec
hlt
push
insb
xchg
andl
ficomps
scas
xor
mov
pop
aad
lahf
lret
arpl
movsl
scas
mov
sub
and
inc
ret
and
mov
stos
bound
sub
push
pusha
sub
insb
sub
shl
shll
push
stc
mov
stc
pop
sub
xchg
movsl
xlat
je
aaa
jge
ret
cmovns
lods
rorb
rolb
div
test
fisubl
aad
pusha
jmp
mov
movsl
fildll
inc
or
push
pushf
mov
cmc
and
lcall
cwtl
mov
cmp
and
icebp
mov
repnz
clc
cmp
popf
mov
cmp
push
inc
aas
mov
rorl
or
aaa
das
push
sbb
adc
xchg
and
pushf
push
mov
int
ret
mov
lahf
repz
sub
cmp
mov
jmp
xchg
pusha
repz
mov
and
sbb
xchg
or
xchg
fsubl
test
subps
mov
and
and
mov
inc
sbb
fnsave
mov
ja,pn
or
dec
insb
test
fs
mov
sbb
aam
gs
addb
stos
imul
add
jp
mov
gs
xor
inc
pop
cmp
push
mov
pop
cli
ret
cmp
test
and
out
clc
pop
lahf
test
inc
lret
test
adc
xor
or
int
lock
jmp
iret
mov
insl
andb
outsl
outsb
xor
adc
and
cmpsl
cmp
xchg
lea
das
cli
hlt
mov
rclb
mov
out
mov
movsb
daa
xor
mov
mov
loope
pop
dec
add
stos
pop
cmpsb
jb
lcall
lret
pop
mov
in
sub
adc
repnz
and
add
iret
std
and
push
int3
xor
jne
dec
xor
pop
mov
mov
scas
rolb
imul
add
and
mov
je
dec
popa
jmp
inc
notb
jno
jp
lcall
pop
repz
pop
jg
pop
fwait
loope
insl
mov
shll
push
jae
sub
in
sbb
fcomp
clc
shll
push
rolb
mov
testb
xor
leave
in
loopne
sub
sahf
xchg
and
mov
popa
add
xor
mov
xor
cmpsb
aam
adc
data16
and
and
xor
pcmpgtb
add
add
das
hlt
pop
xor
push
cmp
add
stos
lret
push
cltd
jnp
inc
ljmp
fst
mov
clc
cmp
jecxz
xor
repnz
add
stos
mov
push
or
stc
popl
aaa
xor
push
sub
aam
inc
enter
dec
nop
cs
cmpsb
pop
inc
or
cltd
dec
lret
das
sub
push
xor
inc
jg
push
fs
ljmp
lret
add
and
mov
push
pop
sub
cmp
sbb
push
dec
stos
sub
sub
out
push
xor
or
aaa
movsb
ret
mov
sub
adcb
scas
adc
sbb
icebp
push
in
and
sbb
or
add
xchg
or
lret
fidivrl
sub
stos
and
add
movl
cld
outsl
inc
mov
aas
aam
aas
push
mov
ss
jg
mov
inc
sub
or
addr16
iret
push
inc
or
push
mov
jo
xor
popa
fiaddl
adc
sub
ret
getsec
lret
in
imul
xchg
cwtl
cmp
inc
movsl
and
sbb
cmp
faddl
arpl
mov
xchg
inc
add
xchg
or
stos
repnz
adc
subl
cmp
mov
fldl
sbb
or
out
out
xchg
cli
lods
idivl
or
mov
mov
jbe
pop
sub
mov
adc
jge
mov
push
cmp
addr16
dec
data16
sub
mov
inc
ss
and
xor
int
dec
fstp
inc
and
fstpt
sbb
fidivrl
sbb
loopne
xadd
xor
pop
cld
fwait
setb
fnstcw
cli
xchg
sub
pushf
xor
cs
cmp
inc
cmp
jecxz
push
cmpsl
add
mov
testb
jl
mov
cmp
aas
cmpb
sti
pop
xchg
imul
incl
or
push
fwait
pop
pop
loope
jp,pt
aam
add
shl
aam
loopne
pop
arpl
test
adc
mov
push
mov
push
and
xchg
out
pop
subl
xchg
insl
mov
cmp
nop
hlt
and
lea
jnp
pop
cld
pop
xchg
mov
dec
inc
aam
pop
cld
pop
sti
push
push
pop
sub
dec
js
or
xor
xor
inc
adc
adc
pushf
stos
outsb
pop
sbb
pop
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
decl
dec
sub
sub
lea
sub
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
lds
test
leave
mov
mov
jnp
out
fidivl
pop
shr
repnz
jb
sti
inc
fisubs
pop
cmp
shlb
push
into
jmp
mov
sub
lea
insl
mov
stos
into
addr16
dec
dec
fstps
aaa
stc
call
cs
jb
cmp
xchg
and
sarb
push
fdivrs
rcrb
notb
scas
stos
into
addr16
fcoml
aaa
in
jne
add
jbe
lahf
and
cwtl
les
mov
dec
movsl
push
rol
xor
ljmp
mov
lea
xchg
sub
add
hlt
inc
inc
adc
frstor
sbb
andl
stos
add
cmp
inc
adc
cmp
inc
adc
xchg
cmp
adc
cmp
adc
xchg
sub
inc
adc
cmp
push
adc
cmp
jnp
mov
xchg
int
rolb
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
xchg
cmp
inc
adc
cmp
adc
cmpsl
jle
add
cmp
inc
adc
fnstenv
cmp
inc
adc
cmp
inc
adc
cmp
bound
mov
xchg
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
adc
cmp
inc
cmp
xchg
cmp
cld
stc
imulb
cmp
pushf
in
orl
cmp
loopne
mov
jge
ficompl
push
add
mov
xor
and
xchg
xchg
insl
mov
jmp
sbb
outsl
push
sarl
lret
mov
add
test
outsl
jbe
push
in
adc
in
nop
jb
orb
add
add
add
sub
nop
inc
sub
sub
loop
pop
mov
add
push
push
xchg
pop
pop
mov
push
sbb
xchg
mov
test
mov
or
sub
or
mov
mov
xor
cmc
jnp
mov
push
cmp
dec
fwait
insl
pop
movsb
xorl
push
mov
iret
stc
lret
test
jbe
mov
jge
mov
push
repnz
aaa
sarl
xchg
push
mov
lcall
loope
sbb
mov
mov
es
leave
ljmp
jge
shll
ret
shrb
roll
mov
clc
rol
jbe
jmp
push
pop
dec
cmp
outsb
sbb
and
xor
push
jl
mov
push
aaa
pop
dec
inc
movsl
pop
add
jne
bswap
rclb
icebp
cmpb
and
outsb
jp
sbb
fnstenv
leave
cmpb
adc
xor
or
fs
mov
dec
rorl
or
dec
mov
scas
rolb
es
rcrb
repz
sub
insl
push
add
jae
pusha
pop
roll
mov
pushf
shrl
in
sub
insl
adc
ror
adc
dec
popf
mov
adc
jge
fmul
js
or
pop
jno
or
pop
dec
arpl
mov
dec
and
in
jg
mov
add
cmp
sub
lock
mov
mov
mov
lea
and
jle
dec
cmpsb
dec
mov
repz
mov
pop
lcall
das
out
sbb
inc
push
xor
xchg
add
jge
dec
pop
mov
push
dec
xor
sbb
mov
rclb
es
lock
ret
adcb
xchg
movsl
outsb
lds
shrb
ljmp
stos
cmp
fisubl
pop
inc
xchg
in
jbe
out
loopne
pushl
mov
test
daa
sub
je
imul
mov
stos
in
dec
fs
sub
inc
sbb
xchg
dec
scas
ret
adc
cmp
push
xor
push
add
call
or
inc
flds
out
repz
sub
adc
stos
sti
mov
in
dec
test
sbb
adc
cmp
cmpb
cmpl
lock
mov
or
cmpsl
ret
sub
pusha
mov
arpl
aad
es
inc
aam
push
jmp
mov
scas
xor
and
in
mov
dec
and
aad
ret
test
imul
inc
sbb
and
inc
xchg
push
adc
loopne
push
inc
push
or
loopne
dec
cmp
in
ret
mov
jnp
xlat
mov
repnz
icebp
leave
call
dec
ficoml
dec
insl
cmp
inc
gs
xchg
mov
jmp
outsl
xchg
adc
mov
sub
or
inc
push
inc
out
mov
mov
dec
ficoms
sahf
sub
sti
adcl
jmp
xlat
xchg
ljmp
inc
mov
mov
and
lds
out
fildll
inc
call
push
jmp
bound
fiadds
test
insb
dec
aas
pushf
icebp
sti
rol
daa
les
cmp
stos
mov
or
xchg
xor
mul
mov
add
mov
outsb
loopne
push
roll
sub
scas
jge
xchg
bound
mov
scas
mov
repz
cli
fdivp
ds
and
jnp
xchg
je
xchg
push
cmp
add
push
dec
leave
or
popf
add
arpl
jg
and
xor
loopne
mov
leave
mov
rorl
mov
push
mov
or
adc
mov
jnp
add
pop
pushf
jp
adc
aaa
mov
push
addr16
cmp
sbb
loopne
cld
repz
ds
cmp
add
push
cmc
scas
into
adc
sub
sub
cli
mov
leave
sarl
sub
lahf
cld
push
and
out
rcrl
icebp
out
mov
add
or
rorl
pop
jae
lds
fdivrp
mov
in
das
jp
jle
arpl
push
mov
dec
in
sbb
cwtl
testb
xor
jmp
mov
int3
jae
push
add
sbb
call
add
inc
lea
jg
lods
and
movsl
jmp
shlb
inc
nop
adc
sbb
jge
xchg
or
add
push
fldcw
push
loop
cltd
or
or
into
mov
lea
add
mov
or
inc
jecxz
out
aaa
dec
jo
mov
mov
insb
cwtl
jo
dec
test
and
sar
and
int
fadd
xchg
sub
sub
cs
xchg
scas
add
sbb
aas
mov
loop
cmp
jp
lea
push
jge
push
xor
loopne,pt
or
adc
repnz
test
jmp
or
cmp
stos
xchg
or
lahf
aad
sbb
lcall
push
daa
and
in
inc
xchg
push
pop
xchg
ja
mov
push
pushf
fdivs
xor
dec
mov
les
jl
cli
insb
sub
js
cld
mov
push
jns
jns
and
int
loop
pushf
push
xchg
mov
push
nop
jge
and
adc
sbb
add
adc
sbb
mov
aam
ret
lahf
test
xorl
xchg
int3
mov
imul
in
mov
mov
pop
or
loope
cmc
pop
sti
lcall
or
cmp
ds
pushf
loope
in
mov
or
mov
push
cltd
in
into
push
stos
mov
mov
test
in
dec
cmc
jo
inc
inc
cmc
out
iret
pop
test
xchg
and
push
mov
cmc
mov
dec
lahf
adc
mov
nop
dec
lea
xor
mov
mov
lods
movsb
sub
mov
cltd
jae
lea
mov
or
ljmp
push
jecxz
mov
jge
rol
pop
inc
popa
jle
adc
repz
test
leave
sub
mov
mov
je
inc
imul
sub
aam
icebp
test
push
push
bound
inc
jb
xor
jg
mov
es
pop
fdivrs
add
push
adc
divl
icebp
cwtl
sbb
loope
jne
and
jae
iret
lret
mov
xchg
lret
jno
xchg
dec
ss
xor
outsl
data16
scas
js
test
ret
insl
dec
xchg
fmull
aaa
setb
cmp
inc
ret
push
lea
into
mov
imull
sub
cmpsb
fs
ja
push
sub
fldl
lret
xchg
mov
rcll
roll
jns
ljmp
xchg
imul
adc
lea
or
repnz
dec
test
cmp
push
les
mov
add
scas
out
cwtl
xbegin
inc
cmpsb
stos
stc
frstor
cld
adcl
testb
stos
mov
std
lret
add
mov
or
sub
jnp
inc
dec
jae
adc
push
mov
jp
sbb
cmpsb
cmc
push
cmp
jno
ret
lods
repnz
bnd
push
add
xchg
add
fiadds
dec
jne
test
cmp
cmpsl
mov
les
sbb
ds
push
xorb
aas
ljmp
rolb
test
cmp
cwtl
push
and
int
jo
fnsave
jg
repz
fwait
or
mov
xor
add
xor
lret
hlt
and
popa
lock
pop
sbbl
dec
shrb
mov
out
daa
cmpl
ss
imul
jo
cmp
sbb
push
sbb
mov
adc
jno
push
cmp
mov
push
pushf
mov
ljmp
mov
mov
sarl
sti
xor
cmp
push
movd
jae
push
push
popa
pushf
mov
call
cmc
loope
pop
mov
adc
inc
add
aam
mov
xchg
add
cmp
pop
mov
add
push
mov
popa
pusha
add
xor
test
pop
jmp
xchg
mov
int
push
push
xchg
fistpl
add
push
add
push
fisttpl
fwait
pop
mov
mov
or
lods
xchg
xchg
int3
xor
popf
scas
sub
pop
jmp
cmp
mov
or
mov
pop
mov
add
or
add
dec
pop
jnp
push
sbb
gs
add
or
leave
arpl
dec
cld
fisttpll
add
pop
dec
fs
push
addr16
dec
adc
leave
inc
pop
insl
in
xor
mov
movsl
sub
lods
dec
xchg
mov
pusha
adc
je
cmp
pop
out
pop
stc
mov
mov
cmp
insl
fwait
sbb
movsb
mov
scas
pop
sbb
sbb
cmpsl
fidivs
lods
ret
lcall
add
movsb
test
rep
mov
or
xchg
fnstenv
push
lahf
mov
mov
add
push
outsl
cltd
mov
test
and
and
fdivrp
push
lods
ret
or
loopne
test
inc
sub
lds
cli
adc
aad
pop
pusha
cld
xor
cmpsb
sub
jne
lods
jecxz
pusha
mov
sahf
stos
in
inc
imul
lcall
push
rep
roll
iret
mov
dec
push
or
mov
sub
ficoml
sub
dec
das
push
ret
enter
dec
test
stc
push
sub
int
jecxz
inc
sub
shrl
sahf
inc
stos
push
xchg
mov
push
adcl
insb
incl
dec
jns
cmpsl
popa
lods
xchg
push
mov
repz
cmpsb
xchg
call
lcall
mov
sub
jno
xor
cmp
xor
push
xchg
mov
cmp
inc
je
cld
mov
push
mov
inc
add
or
cmpsl
mov
stos
punpckhbw
shl
dec
add
in
addr16
es
sbb
jb
xchg
rol
out
mov
es
popf
or
cwtl
movsl
repz
or
jb
xor
mov
movsl
out
or
fidivrl
popf
and
mov
mov
or
iret
pop
mov
popf
and
mov
push
push
lock
inc
dec
inc
imulb
pop
cmp
ds
int3
push
insl
or
cmpsb
mov
mov
fwait
das
mov
leave
dec
dec
xor
push
mov
cli
int3
inc
dec
push
mov
or
daa
xchg
ret
fsubrp
cs
cmp
fistpll
std
jae
pop
jbe
pushf
push
mov
push
push
mov
adc
pop
rcrb
imul
les
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
