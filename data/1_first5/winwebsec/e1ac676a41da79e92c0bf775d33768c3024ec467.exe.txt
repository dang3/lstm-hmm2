push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
inc
ja
mov
cs
fsubrs
shll
or
xchg
in
imul
sbb
xchg
fwait
xor
repnz
leave
stos
inc
mov
lods
jg
lds
fdivl
cmp
sti
dec
fldenv
in
xchg
xor
aam
call
xchg
lcall
aad
pop
push
movsl
cmp
jns
mov
add
add
cltd
and
sbb
les
mov
fnstcw
call
inc
sub
sbb
inc
xor
xchg
orl
fnstsw
subl
sbb
or
and
movsl
xorl
xbegin
movsl
mov
dec
test
push
dec
inc
xchg
sbb
jl
call
pop
js
push
add
mov
cmp
sub
daa
mov
mov
aaa
clc
psraw
movsl
pop
aas
push
jb
fsubp
jmp
orb
mov
mov
jns
adc
sti
pop
out
jg
xchg
mov
mov
pusha
pop
outsb
push
ja
or
push
adc
dec
fsubl
std
popa
xor
stc
int
cld
mov
sub
cltd
int
cwtl
jmp
out
sbb
xor
test
dec
adc
les
hlt
sbb
or
adc
jmp
in
sub
fwait
mov
sbb
pop
pop
jae
fs
adc
add
cmp
fwait
or
mov
xchg
mov
mov
pop
xor
push
xchg
outsl
mov
ss
or
dec
cwtl
outsb
test
popl
aas
xchg
clc
aas
mov
in
popf
loop
mov
pop
cmp
pop
scas
shrb
lea
adc
adcl
jnp
add
jo
mov
xor
xchg
aad
in
jns
xchg
sub
bound
xchg
pop
cld
jl
pop
mov
cmp
roll
mov
fadds
stos
dec
daa
jge
cwtl
lcall
jo
sarb
jp
dec
jge
pusha
add
lds
push
mov
xchg
jecxz
psubd
mov
mov
test
jo
xor
xor
dec
sub
or
out
adc
push
xor
mov
lods
sub
in
mov
mov
ret
inc
pop
jns
sub
sbb
push
lret
cmpsl
stos
jb
bound
jl
cmpsb
orb
xchg
popf
adc
cmc
addr16
xchg
out
sbb
scas
imul
filds
inc
sti
clc
jp
outsb
and
dec
or
inc
lods
stos
xor
stos
into
push
or
pop
or
pop
aam
in
pushf
dec
loope
jno
aad
int3
bound
filds
aad
xchg
stos
mov
test
scas
pop
inc
mov
jo
xchg
jne
in
ds
add
or
loop
loop
int3
enter
cmp
jns
inc
cmp
xlat
pminub
mov
movsb
push
adc
outsl
pop
mov
or
repnz
test
cmp
dec
inc
adc
cmp
out
into
nop
stos
add
daa
cwtl
repnz
iret
arpl
mov
mov
cs
and
enter
int
movsl
xchg
inc
pop
cli
inc
mov
popa
fsubrl
sub
mov
sbb
aad
dec
adc
push
mov
mov
ja
adc
pop
push
stos
ret
cs
or
rcrb
push
dec
jl
sub
or
arpl
push
mov
pop
xchg
and
addr16
jg,pt
je
jno
repz
in
push
mov
aad
inc
in
adcl
sbb
sbb
sbb
fdivrs
fisttpll
adc
dec
xchg
mov
lret
out
hlt
adc
dec
std
pusha
mov
xchg
aas
lods
shlb
push
adc
sti
xchg
out
add
add
dec
xor
cld
lods
mov
or
lcall
icebp
pushl
lock
pop
popa
mov
test
mov
sti
jg
jl
xchg
pop
jecxz
sbb
cli
or
outsb
jle
push
mov
and
mov
add
mov
lock
xor
stc
stos
popa
sub
fucomi
adc
jle
repz
sbb
repnz
mov
dec
ljmp
xor
xchg
sahf
mov
xor
inc
add
rolb
xor
lahf
cmp
lods
inc
pop
cmc
push
stos
ja
cmp
pop
shlb
jmp
repz
lds
sbb
adc
push
in
mov
xchg
mov
lea
daa
or
mov
repz
mov
call
out
jecxz
xchg
sub
xor
push
inc
mov
jne
pop
xchg
repz
pop
ljmp
and
or
mov
insb
pop
xchg
mov
dec
pop
adc
mov
imul
push
adc
dec
xchg
pop
cli
cmc
iret
lret
push
pop
imul
jmp
jp
mov
mov
jo
push
push
pushf
imul
pop
testl
jo
add
inc
mov
sbb
xor
sub
fdiv
hlt
mov
and
inc
fidivs
scas
pop
xchg
rcrb
sbb
pop
jne
ljmp
flds
push
dec
daa
push
movsb
test
xchg
call
add
ret
inc
sti
dec
mov
inc
aaa
pop
jle
xor
aas
arpl
mov
mov
dec
aad
xchg
movsb
lds
cltd
mov
lahf
jge
insl
jnp
inc
rorb
cmp
icebp
mov
and
or
dec
subb
inc
sbb
leave
out
and
repnz
stos
push
sub
hlt
aaa
lea
jmp
dec
mov
lods
dec
inc
add
and
inc
mov
or
pop
sub
outsl
shrb
ds
repnz
add
and
add
mov
lcall
outsl
daa
hlt
and
add
jge
test
push
xor
mov
mov
adc
jo
lea
push
mov
inc
mov
sti
out
lea
iret
xor
sub
ljmp
das
enter
sub
push
cmpsb
cmp
sbb
fnstsw
cs
cmpsl
xor
adc
shlb
sbb
iret
aaa
mov
dec
sbb
inc
in
push
dec
mov
insb
lret
imul
mov
pop
cs
jle
adc
dec
sarl
xor
xor
mov
cwtl
ljmp
fnstcw
push
int
imul
int
sbb
mov
divb
dec
adc
aam
cs
fcmovnb
lock
adc
xor
sub
dec
mov
outsl
xor
lods
pop
insl
fwait
scas
test
test
dec
lods
push
insl
push
pop
leave
or
lret
cs
pusha
pop
imul
pushf
dec
jne
jo
jbe
push
xor
cs
fmull
pop
lds
push
rcr
xlat
divb
mov
sbbl
addr16
stc
push
jp
dec
mov
xchg
adc
sub
std
jg
jmp
jle
test
cmp
pushf
jl
mov
push
js
mov
popa
dec
mov
ds
push
sar
push
addr16
movsl
dec
and
insl
outsl
testb
lcall
sub
jns
dec
pop
lahf
jecxz
in
into
fs
rorb
call
xchg
fnstcw
mov
in
iret
adc
sbb
mov
insb
xchg
in
or
mov
clc
outsl
and
pop
mov
push
cmp
hlt
add
or
jbe
push
aas
mov
insl
and
cmc
loop
lea
add
push
mov
inc
xchg
stc
data16
pop
enter
and
rep
int
mov
dec
mov
in
data16
xchg
jne
mov
mov
arpl
xor
aad
add
dec
cmpl
out
add
icebp
je
jmp
push
adc
dec
fidivl
pop
or
icebp
sub
mov
sarl
inc
mov
aas
repz
hlt
push
dec
and
test
std
adc
lock
fcmovnbe
jmp
xor
shll
mov
daa
addl
mov
aaa
push
cmp
shll
aam
data16
cmpsl
mov
or
in
movsb
jnp
pop
pop
out
and
pop
testl
movsl
dec
fcoms
jp
movsb
mov
arpl
testb
mov
pop
add
mov
int3
insl
mov
daa
and
roll
shlb
sbb
mov
rorl
inc
inc
mov
mov
xchg
gs
les
ljmp
xchg
sbb
mov
sti
pusha
jbe
fs
inc
xor
out
leave
lds
sbb
and
push
adc
mov
test
andb
lods
xor
pop
sbb
aaa
cmp
gs
cmpsb
pop
mov
or
sub
out
jb
lock
pop
addl
shlb
test
cltd
push
lahf
inc
add
xchg
and
or
pusha
ret
xchg
push
ror
cmp
out
fs
pop
jnp
enter
adc
inc
jge
std
or
mov
fistl
cltd
outsb
lahf
shlb
jo
jnp
inc
sbb
push
inc
add
jecxz
sbb
mov
dec
mov
imul
insl
or
add
jo
call
adc
pusha
pushf
add
fisubrs
xchg
cmp
aad
pop
pop
mov
dec
mov
and
pop
iret
lret
add
pusha
pop
test
inc
jo
sub
call
xlat
cli
dec
push
sub
add
xchg
je
movsb
out
adcb
orl
jmp
test
ja
mov
mov
lock
fnstsw
adc
negl
int
dec
ds
idivb
pop
push
sub
fdivl
js
sub
sbb
push
pop
insl
out
lods
add
negl
in
add
mov
mov
lret
add
cmpsb
je,pt
sti
xor
daa
pop
cmc
dec
add
cmp
out
xchg
mov
std
movsl
out
ret
sub
adc
push
pop
sbb
mov
ja
in
lock
imul
dec
fs
xchg
xchg
cltd
nop
xor
pop
inc
jae
sbbl
cs
in
xlat
icebp
sbb
pop
sbb
dec
loop
cmpb
adc
push
dec
mov
dec
and
cld
and
sbb
push
and
inc
xchg
cmp
mov
push
pop
pop
push
mov
or
push
adc
gs
filds
pushf
movsl
inc
add
leave
outsb
sbb
add
cmc
xchg
lret
es
fldl
adcl
rcr
psubsb
leave
cmpsl
inc
or
dec
call
loope
cmc
sbb
clc
popa
int
mov
jb
adc
xchg
mov
xor
pop
mov
jmp
sbbl
out
mov
into
test
adc
xor
movsl
jne
lret
fucomip
jle
aas
pop
push
sahf
cmpsl
cmp
xor
dec
nop
dec
xchg
cmp
inc
stc
les
and
mov
sbb
mov
xor
repnz
or
jo
cmp
ret
push
std
int
icebp
sub
add
inc
inc
aad
lock
sahf
jle
cmc
movsl
inc
addr16
int
adc
push
fwait
divb
bswap
jae
sbbl
sub
shrl
xchg
xchg
mov
fildl
ljmp
push
popa
in
jge
repnz
sbb
or
int
dec
dec
or
or
fstpt
sbb
and
add
add
add
daa
pop
stc
stos
xor
jae
fadds
sub
popf
dec
fiaddl
cli
or
fldt
jl
pusha
int
iret
lret
jecxz
popl
sbb
lahf
cmp
sbb
sarb
add
test
es
and
jl
sbb
xor
subl
add
mov
xchg
loopne
mov
mov
push
js
inc
xor
xor
xchg
test
jl
iret
jno
inc
loope
popa
sub
int
in
insl
push
sub
ds
or
jecxz
jg
hlt
mov
inc
push
shll
leave
popf
mov
push
mov
call
scas
daa
or
and
or
daa
cltd
mov
mov
push
push
cmp
mov
ret
lods
sub
pusha
push
add
mov
mov
in
and
cltd
icebp
je
and
mov
cli
adc
jle
pop
scas
movsl
sbb
bound
repz
push
lods
mov
xor
ret
cmpsb
pop
xchg
jbe
xchg
repz
push
adc
sbb
cmp
fstpl
idivb
shll
in
cmc
or
imul
inc
or
mov
aad
bound
into
mov
mov
std
jae
jmp
adc
fidivl
xchg
push
popf
fists
and
sbb
push
or
lea
lea
adc
mov
sbb
mov
testl
jbe
mov
loop
sbbl
cmpsb
mov
lret
fdivrs
and
loope
outsb
stos
add
gs
icebp
icebp
jb
or
inc
into
imul
pop
rcrb
movmskps
das
mov
out
xchg
sub
std
xchg
fdivr
rolb
cld
lods
inc
into
mov
cmp
aas
rol
pop
outsl
mov
fnop
pushf
mov
cmpb
pop
pop
push
popf
outsl
or
dec
inc
mov
out
jne
sbb
aaa
dec
call
out
sti
pop
cld
out
adc
jo
mov
mov
xchg
add
dec
js
test
out
iret
arpl
cs
mov
push
fs
out
mov
jg
vmaxps
scas
cmp
xchg
addr16
in
adc
xchg
pop
xchg
stos
and
add
dec
cld
out
je
fistl
sar
and
shl
dec
ja
fistpl
jae
dec
lahf
jmp
arpl
sbb
mov
fbstp
and
xor
arpl
xchg
xchg
push
mov
or
stos
das
sbbl
ret
mov
adc
jg
pop
rclb
popf
dec
pop
or
test
inc
mov
std
inc
cmp
xchg
in
or
testl
pop
test
stc
sub
or
or
jg
je
stc
out
jg
sub
hlt
insl
adc
cld
xor
xor
loopne
jp
repz
and
mov
cs
push
dec
gs
jmp
ret
lahf
imulb
popf
jl
cmp
xchg
sub
mov
lods
inc
ja
lret
xchg
scas
popf
and
inc
xchg
fstps
cmpsb
movsb
lods
and
lahf
xlat
mov
mov
push
mov
adc
fnstsw
dec
imul
xchg
push
pop
pop
pop
adc
das
ds
mov
mov
test
in
lcall
imul
in
sub
push
es
fsubrl
mov
and
fldenv
inc
inc
movsb
fwait
cmp
cmp
and
aas
int3
loop
int3
mov
pop
sbb
jmp
fwait
pop
and
inc
loopne
aam
cmp
loopne
mov
cwtl
cli
pop
dec
out
xchg
adc
pop
push
or
scas
cmp
cld
arpl
xchg
xor
xchg
in
loope
sbb
adc
notb
mov
xor
mov
inc
fidivrl
ret
mov
push
or
push
mov
rorb
add
sub
lcall
out
fldt
mov
in
mov
push
daa
repz
std
jbe
jo
ja
cmp
mov
ja
mov
mov
jno
or
jns
xchg
mov
int3
jb
lahf
loop
fwait
sbb
and
xchg
loope
inc
cld
xor
popf
fcomps
pop
xlat
mov
into
mov
push
lock
hlt
dec
adc
imul
or
sbb
jecxz
pop
pop
movsl
leave
xchg
aam
stos
or
push
aaa
jae
inc
icebp
jne
insl
and
xchg
xchg
scas
in
pop
cmp
arpl
hlt
aad
or
inc
out
dec
cmp
mov
lea
scas
inc
jecxz
shrb
repz
push
add
loopne
xor
push
mov
ficoms
ret
rorb
aaa
lret
mov
and
loop
cli
mov
add
jg
mov
jno
and
loop
insb
mov
lods
xchg
in
cmpsb
sub
loope
mov
mov
ud1
hlt
mov
mov
pop
js
push
and
dec
fisubrl
lea
push
aad
outsb
in
jmp
ss
xchg
or
ret
out
and
out
or
data16
sbb
pusha
push
adc
gs
add
pusha
xlat
rep
mov
mov
lahf
rclb
inc
lret
push
jge
int
lret
inc
cmp
notl
inc
aam
cmc
cmp
test
cli
cli
lret
sbb
cmp
repnz
push
icebp
push
push
leave
cmp
sbb
ret
and
xchg
fld
cld
lret
cmp
dec
mov
and
stos
xchg
adc
cli
push
nop
addb
filds
sub
jp
js
movsb
popa
mov
fisttpl
inc
mov
xlat
fsubr
clc
orb
inc
mov
xor
loopne
xchg
pushl
shl
dec
nop
out
test
mov
mov
add
fisttpl
jno
mov
test
imul
cmp
jno
dec
scas
je
icebp
push
mov
adc
add
test
int3
or
lret
and
jbe
std
decb
mov
mov
sub
mov
je
aam
notl
shrl
das
aas
dec
cmpb
or
mov
mov
push
shlb
adc
pop
into
inc
mov
aam
lahf
lds
jecxz
scas
icebp
out
stc
pop
es
add
cltd
std
aam
jg
or
int3
and
repnz
jns
jle
push
jo
shlb
add
add
and
push
das
mov
out
movsl
addr16
jge
adc
pop
mov
mov
dec
jne
fs
jae
sahf
cmp
cmp
addr16
cld
xor
js
je
out
xor
outsl
fmuls
test
ja
cld
inc
pop
imul
push
and
sub
ficompl
push
jecxz
ss
in
fs
xchg
add
leave
mov
rcrl
test
aam
mov
mov
sub
stos
ja
mov
or
sbb
fldl
add
add
add
pop
or
pop
out
ljmp
cmp
into
stos
lods
testb
int
imul
leave
xchg
hlt
jb
test
dec
dec
fisttpll
inc
mov
and
test
cwtl
out
or
dec
ret
mov
sbb
push
in
andl
shlb
pop
sbb
fsubrs
mov
movsb
in
mov
and
cwtl
test
or
movl
fsubl
mov
push
dec
js
ret
incb
cltd
in
fwait
fwait
push
adc
dec
out
insl
adc
mov
idivb
sbb
mov
rclb
sbb
fists
adc
jbe
ror
lret
cmp
outsl
mov
das
jae
pop
test
sub
xor
scas
lret
repnz
es
xor
ret
inc
in
cmp
cs
pushf
das
loope
mov
mov
movsb
daa
int
cmp
js
into
mov
in
mov
rclb
js
pop
jne
enter
jmp
push
xor
leave
jle
inc
push
push
add
jecxz
xor
pop
xchg
lcall
mov
push
shl
shll
das
test
pop
mov
or
push
xchg
pop
in
shlb
dec
mov
cli
movsl
xchg
jne
mov
cmpsl
jbe
adc
mov
jno
in
out
repnz
jae
bound
shll
xchg
lea
pop
add
cmpsl
xchg
inc
dec
sub
lock
icebp
mov
cmp
and
jno
dec
pop
fdiv
mov
adc
sbb
jmp
filds
sub
mov
mov
sbb
js
jnp
outsb
push
mov
xchg
add
lds
inc
xor
fldt
and
testb
into
push
jl
push
fldt
cmp
sahf
dec
and
mov
mov
dec
inc
scas
mov
roll
out
cmp
dec
push
mov
jns
sub
inc
mov
push
lret
or
cmp
in
iret
jp
rcrl
inc
cli
stos
or
pop
stc
pop
pop
hlt
dec
je
and
jecxz
mov
and
push
and
aad
int3
dec
test
fpatan
sub
adc
in
push
cmpsl
into
xor
mov
rorb
subb
cmp
out
sbb
xchg
int
mov
jmp
pop
push
cmp
mov
xchg
and
sbb
imul
dec
sub
int
lahf
xchg
dec
add
ret
outsl
pop
sub
inc
cmp
mov
stc
mov
stc
aas
mov
rol
pop
dec
imul
repz
repnz
cltd
mov
pop
adc
adc
js
mov
rcll
stos
movsl
xchg
pop
jl
dec
mov
xor
imul
sbb
cmp
sbb
paddq
add
in
dec
xchg
icebp
dec
inc
adc
test
aad
pop
dec
lret
pushf
xchg
mov
dec
xorb
out
test
xchg
jbe
dec
xchg
push
or
cmpsl
fimuls
or
add
cmp
shlb
fsubrp
jl
mov
mov
sahf
or
push
iret
mov
mov
lret
mov
sbb
mov
ds
pushf
add
out
in
and
jno
sbb
fisubl
mov
jae
cmp
orl
clc
jbe
xor
gs
xor
cmp
xor
hlt
lret
pushf
mov
lds
mulb
mov
andb
in
push
mov
xchg
mov
insl
pop
bound
add
push
rcrb
shll
ljmp
int3
push
ss
push
aas
mov
mov
mov
in
adc
mov
iret
dec
cmp
out
xchg
push
fabs
sarb
sbb
xor
sub
xor
mov
popf
lret
pusha
aad
mov
mov
notl
test
sbb
imul
push
mov
clc
pushf
push
rolb
push
sbb
movsb
addb
or
fsubrl
or
lahf
jno
pushf
sub
or
dec
mov
jmp
fisubs
jge
mov
xchg
mov
push
ss
push
loope
rcrl
stos
out
add
idiv
ljmp
jecxz
inc
repnz
cmp
test
pusha
sub
mov
xchg
and
pop
push
mov
je
or
mov
pop
into
gs
out
bound
or
add
xchg
jo
in
hlt
fnsave
dec
fistps
dec
and
pushf
ffreep
sbb
in
fdiv
roll
or
inc
adc
test
les
xor
ja
pushf
fstpt
ljmp
pop
pop
push
fisttps
int
adc
jle
arpl
fmull
push
dec
aad
dec
addr16
sbb
mov
sub
fwait
mov
js
jp
sub
faddp
imul
sbb
pop
aaa
cmp
sbb
imul
sbb
and
mov
stc
in
lcall
or
stos
push
cmpb
push
les
and
mov
mov
fcmove
push
dec
or
mov
xchg
int
pusha
cmpsb
adc
sbb
adc
repnz
lods
jg
mov
mov
and
pusha
add
or
mov
in
cmp
test
jae
push
pop
jl
mov
roll
cmp
jle
inc
sbb
sub
ret
sbb
in
mov
adc
std
les
jae
scas
pushf
int3
ljmp
mov
jmp
add
nop
dec
aam
scas
mov
mov
cmp
icebp
push
fwait
inc
adc
loop
sub
dec
insl
negb
pop
sub
jbe
lret
pop
clc
popf
rcll
outsl
push
cmp
rcrl
hlt
stc
out
or
mov
repnz
loope
ja
iret
xor
les
fsubs
jae
stos
outsb
mov
push
insl
mov
fsubr
stos
ljmp
mov
jl
or
mov
and
push
lcall
mov
out
leave
mov
roll
loop
je
int
cmpsl
aad
pop
jnp
mov
push
lea
add
or
pop
rcll
cmp
sbb
xchg
mov
mov
int3
rorl
pushf
mov
and
or
out
int3
push
xchg
test
bound
rorl
cmp
pushf
xor
cmp
pop
sbb
jl
or
cltd
dec
adc
pop
cmp
addr16
ret
out
popl
sub
sbb
es
fsubs
in
je
add
in
push
out
pop
movsl
pop
pushf
inc
mov
fstl
mov
imulb
in
scas
mov
jge
sbb
and
cmpsb
adc
lock
aas
outsb
popa
xchg
sub
lods
push
inc
cmpsb
pop
shll
push
mov
push
sbb
ja
js
xchg
inc
bound
xor
sarl
cmp
loop
pushf
dec
out
inc
xlat
xchg
mov
xorb
pop
popa
jp
lcall
test
xor
lret
add
mov
int3
mov
ret
xor
loope
xor
inc
sbb
les
and
bound
popf
pop
aam
movsl
mov
pop
mov
mov
rcrb
daa
xor
or
xchg
xchg
dec
or
jge
sbbl
mov
andl
jge
sbb
mov
pop
lcall
xorb
test
mov
push
pop
mov
jle
inc
stc
arpl
xor
xor
int
mov
push
fwait
add
in
fistl
outsl
lret
pop
dec
lcall
enter
adc
push
xchg
stos
adc
test
cmp
mov
cli
cmc
push
push
insb
sarl
mov
adc
and
mov
mov
fimuls
fs
adc
loop
and
jl
clc
sub
add
nop
push
mov
iret
or
add
pop
movsb
dec
pop
js
in
repz
fsubl
xor
popf
dec
sbb
jmp
lahf
and
arpl
icebp
stc
cwtl
mov
lea
ret
mov
jmp
inc
test
push
clc
les
lods
cmc
sub
xchg
xor
xor
add
imull
mov
dec
add
insl
add
cmp
or
sbb
adc
mulb
sbb
mov
pop
push
and
arpl
push
fidivrl
xlat
aaa
and
orl
xchg
jl
sbb
or
jae
sbb
cmp
shlb
aam
cmp
xchg
push
adc
dec
int3
arpl
pop
jbe
in
push
icebp
cmp
hlt
jo
cs
cwtl
jl
stos
pop
int3
cli
fs
out
mov
inc
jmp
pusha
mov
shlb
jae
lock
mov
mov
data16
xchg
adc
and
into
sti
dec
stos
movsl
comiss
mov
fisttpl
movsl
pop
lock
and
xchg
xchg
cmp
pop
addr16
dec
popf
icebp
ja
jge
push
mov
pop
ja
inc
jge
leave
mov
cmp
icebp
testl
sbb
into
jno
decb
sbb
push
arpl
fs
mov
int3
jge
js
push
ret
in
and
pop
out
ret
rcrl
out
icebp
cltd
fwait
aas
stos
shlb
xchg
shll
std
push
xchg
aas
rorl
sub
inc
dec
cmp
inc
inc
out
adc
and
mov
rolb
ffree
xor
cmp
push
daa
into
and
test
ja
enter
repnz
xor
gs
mov
push
adc
addl
xor
aad
xchg
jle
sbbb
or
cld
dec
mov
movb
xchg
xor
test
sahf
enter
mov
ret
pop
or
out
mov
cltd
mov
add
fwait
inc
decl
pop
add
add
mov
push
dec
cmpb
push
adc
ds
cmp
mov
jle
mov
cli
mov
pop
cmp
arpl
mov
sbb
aas
mov
push
enter
push
loop
lcall
ja
movsl
or
int
lods
xor
cld
mov
xchg
fldl
cmc
imul
xchg
outsl
fstpl
sbb
fidivrs
pop
or
sbb
mov
mov
outsl
out
mov
cmc
sub
lret
nop
dec
jns
scas
ror
int3
rolb
pop
jle
cmc
ds
test
sbb
je
mov
xchg
lock
add
sbb
add
imul
or
mov
repnz
lods
ret
mov
push
mov
jmp
decb
clc
inc
jecxz
lcall
mov
jge
rcrl
fimull
lcall
sti
adc
mov
and
pop
testb
call
js
inc
push
and
outsb
mov
inc
scas
loope
xchg
pop
jge
dec
mov
or
imul
pop
inc
jl
mov
sub
icebp
idivb
add
aad
fists
jge
mov
inc
adc
jg
mov
and
cltd
pop
sub
daa
rcll
xlat
cs
lea
ret
dec
bound
addl
push
ljmp
pop
in
aam
mov
fs
aaa
icebp
push
mov
je
add
sub
into
jge
xor
cmp
pusha
mov
or
push
dec
pop
add
int3
mov
lret
jae
add
lret
mov
xchg
mov
fst
sbb
inc
dec
nop
fadd
and
push
ds
test
and
pusha
jl
pop
pusha
mov
xchg
shlb
push
dec
popf
jno
sub
and
cwtl
mov
push
or
arpl
mov
sbb
repnz
ljmp
pusha
push
ds
lahf
dec
aam
dec
xchg
xchg
dec
add
xorl
insl
fdivr
jp
xor
sub
jb
adc
sub
div
jle
lea
push
imul
les
aam
sbb
hlt
push
inc
push
stos
nop
test
les
mov
cwtl
cmp
sti
insb
in
adc
push
cmpsb
ja
jne
inc
mov
inc
mov
out
adc
mov
mov
mov
int
popf
cld
test
mov
aas
mov
adc
aas
sti
sbb
xchg
sti
jle
cs
xor
scas
or
lea
add
jl
cwtl
dec
jbe
jbe
jns,pt
pop
sbb
inc
sub
push
pop
test
xor
nopl
dec
xor
pop
add
pop
cmc
dec
push
loop
ja
stos
xchg
std
lds
gs
mov
icebp
or
xchg
clc
xor
inc
cltd
mov
cmp
stc
js
push
faddp
loopne
xor
cmp
inc
sarl
aas
push
cmc
inc
xor
daa
ds
fwait
outsl
icebp
in
and
sbb
es
cmp
mov
fnstcw
sub
fwait
push
pushaw
push
stos
add
out
ljmp
fstpt
sbb
int3
repz
daa
mov
lods
loopne
ljmp
popa
mov
dec
xor
sub
mov
push
mov
rorl
jb
mov
dec
cmpsb
lods
pushl
pop
xchg
mov
xor
jnp
inc
push
into
xchg
out
enter
pop
inc
jle
cmp
out
rcr
out
imul
jge
xlat
or
add
sub
sub
mov
fcmovne
dec
mov
imul
jne
sbb
xlat
into
nop
sub
sbb
pop
cwtl
mov
js
lods
pop
ret
pop
adc
mov
xor
imul
cmpb
iret
das
jb
sub
add
add
mov
xlat
pop
aaa
popf
clc
mov
jp
inc
xchg
out
leave
cmc
int
push
mov
jnp
out
add
inc
scas
mov
xor
repnz
mov
in
jae
push
push
addl
in
mov
mov
and
int
daa
nop
cmpsb
push
mov
adc
cmpsl
mov
add
or
mov
iret
repnz
rcl
repz
mov
dec
jns
cltd
pop
pop
subl
sub
out
stc
push
pop
les
mov
fs
lret
sahf
sbbl
adcb
sub
sahf
out
and
rcr
out
lock
test
aad
xor
push
xor
clc
or
addb
out
or
sahf
imull
out
and
repnz
bswap
rcr
pusha
mov
addr16
dec
out
dec
push
sti
out
dec
rolb
repz
inc
dec
mov
stos
and
xor
push
mov
addr16
jl
scas
ljmp
into
out
outsl
mov
mov
cltd
push
dec
in
inc
les
add
adc
jp
xor
cmp
clc
fisubrs
daa
int
jbe
test
mov
rorl
paddsb
out
repz
jle
divb
sbb
xchg
icebp
mov
mov
cmp
push
sub
mov
out
pop
into
mov
mov
div
ffree
dec
jmp
mov
faddp
push
pushf
cmpsb
push
push
lock
push
rorb
fcompl
addb
xchg
jbe
sub
inc
jno
sbb
aad
popl
call
in
pop
cmp
cwtl
xor
scas
lcall
jecxz
xchg
sub
aam
lret
icebp
mov
jmp
lahf
aam
mov
loopne
cmp
mov
dec
push
xchg
scas
cmp
in
imul
cmp
aaa
inc
push
lods
xlat
push
imul
mov
jge
mov
push
adc
jle
and
add
movsb
jne
cmpsl
pop
inc
mov
movsl
push
dec
out
lret
inc
cs
mov
or
arpl
ss
push
icebp
and
loope
xor
ss
adc
sbb
ret
subl
loop
cmpl
inc
mov
xchg
jb
sub
repnz
adc
lahf
lahf
sahf
dec
pop
dec
ficoml
or
into
icebp
and
inc
lret
push
repz
imul
xchg
mov
dec
cwtl
aaa
xchg
mov
sbb
popa
das
adc
add
cld
cmp
sahf
push
popa
add
std
leave
sbb
pop
adc
js
jge
mov
inc
cld
jg
inc
out
mov
push
jo
mov
fildl
add
push
and
icebp
dec
ficompl
pop
mov
dec
into
xchg
jl
sbb
mov
inc
outsb
mov
push
fcompl
stc
cli
push
pushl
aam
jle
stc
adc
mov
cmpsl
sarb
mov
shrl
inc
sub
pop
or
out
sahf
into
jb
mov
test
xchg
and
dec
daa
add
dec
mov
dec
stos
and
push
ds
cmp
nop
xchg
add
cmpl
shll
lcall
and
cmpsb
clc
add
rol
aaa
out
stos
push
jnp
ret
and
pop
in
and
repz
aaa
testl
subb
cmp
push
push
push
stc
push
inc
inc
movsb
dec
adc
test
andps
fcmovne
jmp
mov
inc
dec
fs
inc
int
cmp
bound
xlat
push
clc
sarb
fildll
clc
cmp
test
jmp
sub
pop
hlt
sar
stos
adc
rorl
push
addr16
mov
test
push
or
xchg
fcmovbe
fidivl
and
add
stos
cmpsl
mov
pop
inc
mov
xchg
cltd
ret
xor
lea
push
xchg
scas
andl
mov
mov
jl
leave
xor
outsl
scas
cmp
subb
sub
mov
jns
ror
xchg
scas
jmp
pop
daa
jno
popf
jl
mov
cmpxchg
add
push
jg
mov
xchg
push
push
cmpsl
in
sbb
out
ljmp
jp
out
pop
pminsw
xchg
or
lret
mov
dec
ret
cmp
cmp
or
and
mov
sbb
fmull
add
nop
jmp
aam
xchg
inc
fwait
shl
call
leave
xchg
popf
jmp
cmp
jg
test
movsl
dec
scas
add
jle
outsb
push
cmp
lahf
lcall
mov
lock
cmp
pop
inc
push
xor
das
xchg
sub
ret
xor
inc
xchg
xor
inc
fistpl
add
push
xchg
pop
mov
push
xlat
push
fs
dec
cld
sar
cmp
imul
sarb
dec
sub
pop
or
test
mov
sbb
cmp
ljmp
loop
add
sub
repz
in
jae
push
cmp
in
dec
imul
sbb
sbbl
sbb
movsb
lods
stos
push
push
fnstenv
in
jecxz
mov
flds
mov
jmp
jo
pop
mov
test
cld
add
int
lds
pop
mov
js
addr16
addr16
shrw
repz
in
add
repnz
mov
xchg
jbe
xor
in
sbb
jo
daa
mov
das
outsl
lahf
mov
sub
lock
and
das
inc
push
inc
pushf
clc
pop
cwtl
pusha
add
js
insl
cwtl
xlat
mov
push
fwait
xchg
or
pop
inc
jp
pop
pop
jl
cmp
mov
outsb
aam
cmp
arpl
andl
insl
imul
xchg
sarl
jae
nop
mov
add
fwait
mov
push
adc
sbb
pop
lea
or
inc
shlb
or
aad
cmpb
mov
jae
add
rorl
lock
dec
adc
out
iret
clc
xchg
nop
xchg
fisubl
int3
imul
insl
mov
call
sub
cmc
ds
mov
scas
mov
aad
pop
sub
imul
push
adc
adc
push
push
ror
fwait
push
icebp
jns
or
lds
mov
jbe
sub
in
shl
loopne
pusha
xchg
aaa
sbb
push
mov
test
inc
pop
xchg
jle
cld
scas
mov
arpl
jo
mov
outsb
ss
inc
stc
adc
adc
out
jecxz
call
ret
xchg
mov
lock
lock
les
inc
movzbl
stc
cmp
mov
mov
jp
jae
mov
xor
pop
add
pop
lret
mov
dec
ss
push
pusha
stc
and
movsb
out
mov
je
push
std
mov
ss
ret
sub
jns
mov
pop
scas
mov
mov
ja
or
sbb
out
aad
shlb
in
and
fcmovnb
cltd
insl
jno
sub
movsb
clc
adcb
xor
jmp
scas
shl
cmpsl
insl
mov
lcall
out
clc
aas
aas
jle
cmp
jne
rorb
inc
fnsave
adc
test
adc
mov
ret
jecxz
inc
push
enter
movsb
cmpsl
test
xor
or
inc
mov
push
ja
rorl
jne
out
dec
movsb
fwait
xorb
outsl
outsb
fs
stos
hlt
sbb
test
or
imul
aas
inc
lds
mov
lret
enter
ret
cmp
clc
push
std
call
stc
adc
frstor
dec
and
jg
ljmp
ss
scas
pop
xor
adc
sbb
cld
sub
mov
xchg
out
add
sbb
stos
outsb
outsl
push
test
and
hlt
xchg
or
out
scas
sahf
jbe
xor
movl
adc
mov
jecxz
incb
test
mov
add
and
ret
adc
sti
test
push
mov
call
pop
dec
cmc
pop
insb
lods
mov
pop
pop
mov
jns
out
add
dec
adc
mov
xor
lods
add
mov
xor
and
fdivr
fs
rcl
movsb
sbb
adc
aaa
lods
fistl
xor
xor
cli
fsubrl
sbb
cld
call
adc
aaa
pop
lods
pop
mov
in
inc
mov
pop
aas
pop
lds
cmpsl
lret
shrl
insl
nop
sub
xor
les
push
cmpsl
pop
xor
fisubl
fcomps
adc
leave
out
sbbl
stos
xchg
inc
mov
xlat
outsb
dec
stc
add
pop
mov
sbb
push
fsubrp
and
jb
rorb
dec
in
fnstcw
sub
inc
test
mov
jo
fsts
dec
push
xchg
fwait
cmpsl
adc
dec
xchg
rcrb
adc
or
adc
lea
lret
xlat
das
sub
popf
dec
and
addr16
rclb
mov
jecxz
ss
movsl
imul
adc
jl
out
out
inc
sub
jge
sarl
mov
fdivs
cwtl
xchg
fbstp
push
and
inc
cmp
inc
repnz
push
loope
cmp
lock
test
aad
adc
push
lods
mov
je
mov
cmc
mov
and
or
pusha
jns
cmpsl
sbb
cs
mov
dec
test
lret
or
arpl
xchg
xchg
incl
inc
test
fistpll
add
enter
jge
ja
aam
mov
scas
gs
es
pop
mov
xchg
mov
test
lahf
in
add
jmp
pop
stos
sbb
adc
push
pushf
movsl
ljmp
repz
jl
dec
fsubs
cmp
push
sub
mov
cmc
mov
fcmovbe
mov
mov
daa
xchg
popf
bound
lret
scas
addr16
add
std
fistpll
lea
xlat
jg
mov
cltd
outsb
xchg
iret
rcll
cld
arpl
movsb
loop
gs
adc
mov
push
clc
sub
repnz
fcompl
pushf
outsl
cmp
inc
in
mov
sub
xor
into
orb
leave
sub
and
mov
add
stc
stos
fwait
adc
fld
jae
fwait
add
inc
dec
nop
xchg
popa
shrl
das
pop
aad
push
push
push
push
jno
gs
aad
jecxz
xor
sti
clc
xchg
fcos
fcoms
pop
shrl
xor
jo
adc
aad
ja
jns
dec
pushf
xor
and
mov
fs
push
sahf
push
jbe
les
cli
scas
jecxz
sahf
sub
int
jmp
or
add
dec
repnz
popa
mov
mov
orl
fwait
mov
pop
cmp
into
lock
xor
mov
mov
out
jns
mov
inc
loope
je
in
xchg
les
ljmp
mov
and
inc
in
inc
mov
lcall
mov
pusha
mov
sub
incl
push
lcall
int
mov
sub
outsl
dec
adc
or
pop
xchg
mov
shll
aad
test
cmc
in
pushf
cmp
lea
loope
movsl
negb
mov
pop
addr16
mov
push
inc
es
notb
xchg
ljmp
inc
nop
xchg
lods
aaa
gs
fdivs
test
movsb
sbb
sbb
shlb
mov
inc
adc
adcb
pop
or
xor
fiadds
mov
in
push
xchg
push
xlat
fcomps
fincstp
push
adc
loop
jmp
mov
insl
mov
daa
sbb
mov
lret
jo
mov
xorb
mov
sti
dec
pop
adc
lods
mov
call
mov
fldlg2
cmp
xchg
xchg
dec
push
shll
jo
push
je
repnz
add
jg
push
fwait
xchg
ds
push
mov
out
cmp
sbb
pop
test
cltd
test
outsl
flds
lcall
pop
cld
cmp
push
out
mov
pop
aam
fsub
sub
in
pop
or
enter
xor
inc
jmp
mov
out
cmp
mov
add
jg
mov
adc
lods
adc
lock
loop
jnp
shrb
lea
aad
push
add
int3
pop
xchg
jl
mov
push
mov
dec
stos
rcrl
mov
das
fwait
sbb
aas
repnz
mov
cmp
shr
xchg
dec
dec
xor
scas
dec
xor
pop
imul
or
dec
shrl
daa
and
mov
cmp
xor
shrl
in
outsb
add
popa
add
mov
or
in
rcrb
scas
xchg
test
jl
daa
iret
and
xor
sahf
rol
fcomp
adc
xlat
popf
orl
and
pop
insl
fisubrs
bound
jl
xlat
fstpt
xchg
ja
ljmp
cmp
mov
and
jg
mov
nop
repz
imul
jmp
addb
nop
pop
mov
cld
out
jbe
mov
inc
out
cli
lcall
jg
lahf
push
xor
aaa
mov
cmp
and
rcrl
adc
sub
mov
push
jmp
or
outsb
inc
or
aam
jp
mov
iret
pop
subb
xchg
lret
movsb
mov
movl
int3
fmull
pusha
inc
int
lea
sti
sbb
sub
mov
adc
lods
and
shll
test
cmpsl
pop
xchg
mov
aad
outsb
jge
negl
in
cmovle
jnp
inc
out
push
xor
outsl
int
sub
data16
cmp
stos
fildll
inc
cmp
and
push
jle
push
pushf
add
pop
push
push
out
sub
arpl
fwait
jp
or
dec
sub
jge
sbb
aas
pop
lods
lods
mov
inc
in
in
scas
cmc
mov
shrb
imul
push
mov
pushf
lret
loopne
popa
dec
mov
stos
mov
hlt
or
lds
fbld
inc
daa
lcall
les
addr16
fwait
dec
push
outsb
lea
or
jle
jp
or
imul
jl
out
dec
xchg
jmp
push
xor
dec
mov
mov
push
mov
jecxz
jb
mov
outsb
js
sti
pcmpeqb
push
pusha
or
mov
xor
mov
push
out
sub
les
inc
lcall
or
stc
std
aad
or
xchg
add
or
icebp
adc
xchg
mov
jmp
cwtl
mov
int3
mov
push
jmp
pop
cmc
and
mov
mov
or
dec
cwtl
mov
adc
iret
loopne
fcomi
fstpt
lahf
aam
mov
out
fisubrl
test
and
test
and
mov
repz
mov
ljmp
and
in
mov
push
mov
rep
jge
mov
jmp
cld
jl
cmp
jns
push
cmp
jns
jns
je
hlt
imul
mov
push
cmp
rcll
data16
lods
add
gs
or
xor
das
or
pop
dec
test
iret
in
call
mov
sub
mov
push
and
ss
dec
sahf
sub
mov
and
js
loop
loop
lea
insb
add
sub
pop
mov
mov
test
xor
in
cmp
popa
and
sbb
mov
enter
adc
cwtl
fsubl
loopne
fldcw
inc
xchg
dec
sub
xchg
jp
lock
and
aaa
sub
dec
adc
xor
inc
mov
inc
lock
outsb
loopne
cmp
inc
mov
sbb
mov
movsl
outsl
push
or
stc
aad
and
rcrl
mov
mov
imul
shll
push
dec
mulb
mov
adc
int
cmpsl
cltd
jle
sarb
pop
adc
cli
cli
adc
pop
cmp
loopne
xchg
lds
js
inc
and
xor
cmp
sbb
mov
pop
iret
cmpsb
or
and
ret
sbb
lods
lock
lock
jbe
pop
fstpt
push
fistpl
xor
lea
and
adc
push
xchg
sub
adc
ds
xchg
lret
ss
push
daa
pushl
xor
inc
inc
flds
retw
dec
pushf
xor
inc
mov
jge
in
xchg
shrb
jle
push
add
imul
mov
sub
xlat
out
dec
jae
sbb
leave
je
enter
xchg
push
mov
dec
jmp
xor
pushf
or
inc
aad
loopne
xchg
and
adc
add
loop
pop
fnstenv
jnp
test
pop
sbb
xlat
jns
bt
ss
mov
jmp
jmp
pop
push
out
cmp
scas
decl
sub
or
lock
test
lods
jns
pushf
jne
fcmovu
sub
out
lcall
dec
into
repz
jle
push
sahf
call
insl
push
push
add
add
into
test
stos
jmp
adc
loope
push
pop
mov
in
xchg
xor
dec
inc
fidivrs
mov
fucomip
mov
scas
rclb
je
cltd
pushf
scas
bound
pop
adc
dec
inc
mov
stos
mov
out
jecxz
lock
or
and
outsb
jae
pushf
in
xchg
xor
push
lds
mov
mov
lods
dec
js
fnstcw
sar
or
jo
scas
mov
cmc
loope
jae
sbb
dec
loopne
cmp
push
mov
mov
inc
pop
or
cmp
outsl
mov
sti
add
jo
xchg
mov
leave
adc
lods
lahf
fstp
in
mov
lahf
adcl
cmp
jo
sub
cld
push
imul
sub
mov
outsl
push
sub
iret
mov
ret
cmc
fdivrs
push
fs
and
icebp
sub
outsl
and
cmp
mov
in
or
inc
push
xor
leave
jno
mov
mov
jns
cmp
jge
sbb
lds
testb
mov
int
mov
aad
insb
pop
jne
sub
std
mov
pusha
and
inc
mov
out
fldcw
mov
add
fsubr
jns
mov
scas
pop
mov
inc
imul
cli
not
lods
jb
sub
and
sbb
sbb
into
add
push
inc
sbb
sub
adc
jb
ret
fldenv
fbld
adcl
insl
mov
xchg
ret
int3
lret
lods
pminsw
fwait
outsl
out
cmp
xchg
xor
out
lcall
xchg
add
jnp
cld
sbb
dec
xchg
fwait
jge
test
je
mov
sti
and
or
dec
push
fdivrp
rolb
sub
andb
arpl
adc
dec
mulb
js
mov
jge
sbb
dec
and
jge
cmp
xchg
dec
sahf
enter
dec
into
jbe
ret
lock
sub
jnp
enter
push
inc
dec
pushl
lock
jp
xchg
lcall
lcall
push
mov
push
sarb
adc
insl
dec
adc
sbb
xchg
mov
push
fcompl
push
inc
sub
or
xchg
cmp
cmpsl
imul
lret
jg
dec
ja
lret
in
addr16
pop
int
pop
mov
and
add
gs
fs
popa
imul
push
xchg
arpl
cmpsb
cmp
and
stos
dec
dec
es
dec
fadds
pushf
add
fcomp
sbbl
cmp
lds
cmp
sti
jae
outsl
and
mov
sbb
cmp
sub
mov
xor
cmp
push
add
cmp
cwtl
nop
arpl
or
cwtl
mov
ficoml
jp
or
adc
adc
push
push
cmp
adc
sub
sbb
sbb
in
je
pop
int3
rcrl
jp
movsb
mov
lret
cmp
imul
and
and
xchg
push
inc
or
cmc
mov
cmp
testb
push
pop
push
movsl
enter
add
clc
nop
repnz
mov
jb
test
repz
out
or
aaa
test
mov
ds
sahf
arpl
test
ret
cmp
jb
insb
stos
mov
stos
loopne
jmp
sub
dec
pop
sub
fs
lret
mov
aad
sbb
push
jg
mov
repnz
inc
movb
xor
fstps
pop
imul
mulb
imul
add
enter
mov
pushf
and
cmp
mov
repnz
aas
fadds
jnp
xchg
call
xor
mov
jb
div
jmp
repnz
add
aaa
aam
data16
and
cmpsl
push
loope
mov
fldt
add
pop
loope
ljmp
dec
outsl
add
inc
dec
nop
enter
add
cmpsl
adc
orb
adc
push
mov
xchg
push
outsl
add
sbb
out
adc
dec
mov
adc
xchg
jge
nop
fiaddl
insb
sbb
ds
rcll
lret
inc
inc
pop
and
popf
jmp
shlb
push
or
out
cmp
popf
hlt
fnstcw
mov
and
pop
test
les
leave
into
sub
mov
jecxz
fsubrp
jno
add
scas
imul
adc
test
pop
sbb
dec
xchg
mov
test
mov
roll
dec
insl
xor
fs
ds
and
pop
push
add
push
cmc
jmp
cwtl
mov
mov
fnsave
xor
jl
das
mov
cmp
xor
push
call
scas
mov
dec
xor
push
and
fs
and
int3
loop
aaa
fnstcw
sub
stc
and
cmp
ds
push
or
xchg
jb
or
call
mov
jne
popf
adc
inc
loopne
cli
add
test
inc
dec
in
mov
mov
aam
lret
in
inc
fcoml
test
or
pop
mov
and
dec
fsubs
jbe
cmp
dec
mov
push
push
sahf
xchg
je
mov
loop
cltd
lret
repnz
imulb
mov
xchg
push
sub
test
call
aam
add
decb
mov
jbe
nop
sbb
xchg
push
jg
negl
mov
mov
xchg
jp
mov
in
mov
xchg
cmp
push
mov
cld
lods
inc
inc
push
dec
push
jp
fwait
aas
les
pop
mov
dec
into
rcrb
add
lret
mov
inc
repz
test
adc
repnz
scas
in
insb
mov
inc
xor
xchg
jecxz
pop
or
hlt
cmp
xchg
and
add
outsl
mov
movsl
movsb
xor
cmpb
sub
aaa
nop
incl
xchg
mov
xchg
arpl
or
lock
mov
cltd
les
mov
or
rcrb
clc
in
mov
xlat
or
xchg
stos
repnz
jmp
ds
test
jae
cld
in
mov
adc
pusha
mov
shlb
cltd
sahf
and
dec
adc
push
sbbl
insb
xor
sti
pusha
mov
mov
or
in
mov
pusha
xchg
fisttpll
scas
mov
and
and
ret
sbb
or
pop
push
jae
sahf
movsb
rclb
sbb
orb
dec
push
fstpt
scas
cltd
pop
mov
and
xor
xor
push
push
mov
xor
cmc
push
fs
xchg
push
pop
mov
gs
xor
xchg
jo
cltd
lods
mov
push
scas
xchg
inc
pop
rorb
xor
xchg
mov
out
cmpsb
pop
jge
out
inc
adc
add
pop
fs
adc
jmp
xor
jo
push
mov
mov
dec
dec
xchg
sbb
fwait
lods
dec
gs
pop
adc
mov
mov
data16
pop
pop
ja
cmp
cs
inc
mov
out
inc
mov
xchg
fmulp
xchg
insb
cli
movsl
xchg
sar
and
mov
addb
in
sarb
mov
shl
pop
mov
and
cmp
inc
mov
pop
and
sbb
push
xor
cmp
lds
insb
leave
cmp
lea
sub
push
aad
and
inc
dec
inc
adc
sbb
sbb
je
xor
and
xchg
inc
sub
push
mov
outsb
mov
lods
cmp
xchg
mov
cmp
into
push
mov
pop
mov
int3
icebp
into
or
je
test
clc
fsts
xchg
das
addr16
in
dec
sbb
hlt
mov
pop
xorb
insb
mov
daa
mov
out
adc
cmp
xor
adc
bound
lret
loope
and
daa
imul
jge,pn
cmp
es
inc
add
cs
mov
fdivrs
iret
int
pushf
cli
loopne
inc
push
shrl
xor
lods
mov
test
jl
cltd
into
js
das
lods
test
aam
mov
rcll
add
push
loope
mov
mov
es
addr16
repnz
je
sub
adcb
adc
idivl
insb
cmp
loope
imul
inc
xor
in
sbb
loope
mov
and
ja
mov
inc
sahf
and
int3
push
push
mov
push
pop
outsb
repz
sbb
pushf
mov
sahf
xor
mov
sbb
subl
into
add
ficompl
bound
fucomip
dec
mov
sub
adcb
mov
xchg
cs
or
cli
push
out
aad
mov
cvttps2pi
mul
cmc
loopne
mov
leave
pop
dec
sbb
sbb
xchg
sub
lock
and
inc
xchg
clc
mov
mov
mov
sar
sti
and
sub
clc
jle
dec
cmp
or
jb
jmp
inc
aas
jb
add
ja
lret
adc
sub
fildl
push
rcll
or
push
std
cmp
popf
cmp
mov
lahf
insl
outsl
mov
loopne
sti
movsl
xlat
out
xchg
in
std
jns
or
inc
inc
xchg
ret
cltd
loopne
mov
enter
xor
mov
imul
mov
fcmovne
sub
add
mov
ret
cmp
and
mov
inc
add
mov
push
ret
adc
iret
sti
jns
vpcmpgtw
mov
fstpl
orb
daa
mov
xchg
jbe
and
rorl
push
jae
fs
mov
push
pop
std
adc
ss
xor
adc
ss
push
mov
mov
dec
insb
sti
popa
xchg
or
mov
xor
ljmp
mov
outsb
loopne
fs
and
incl
inc
mov
les
pop
shrb
push
icebp
xlat
xor
pop
mov
jb
iret
jp
loopne
cltd
lds
loopne
jmp
mov
adc
lret
aam
stos
mov
push
and
outsl
add
repz
jle
xchg
out
arpl
add
and
lds
dec
inc
push
pop
scas
push
sahf
lods
pop
and
cmp
cmpsb
je
test
testl
stos
das
les
repz
xlat
cld
inc
xchg
out
je
sub
add
js,pt
into
repnz
cwtl
push
add
xor
push
je
fdivr
loopne
pop
jp
adc
jge
inc
shlb
into
mov
xor
add
inc
fildl
pop
arpl
hlt
sub
movsb
lock
xchg
inc
ret
iret
xchg
lods
mov
cs
ffree
orl
pusha
sbb
inc
xor
mov
lods
cwtl
or
out
cwtl
outsb
mov
push
and
mov
shlb
lret
pop
daa
mov
sbb
or
mov
pop
lods
push
loop
xchg
jnp
push
inc
dec
out
xor
sarb
sub
pop
in
jg
jae
insb
xor
jne
pop
lds
jo
push
pop
or
dec
mov
test
mov
cwtl
out
sbb
push
xchg
sub
cvtps2pd
fcomi
or
mov
lds
arpl
aaa
add
movsb
push
insl
ret
mov
cmpsb
pop
lods
push
test
loopne
cmc
mov
jae
stos
rcrb
dec
adc
jg
mov
mov
setge
loopne
and
mov
fldl
push
dec
inc
push
imul
sar
push
ss
rcr
sbb
sahf
cmp
arpl
insb
mov
fidivs
inc
jp
or
xor
das
or
xchg
shl
xchg
std
jns
loope
push
adc
jns
push
push
mov
sub
in
push
insl
push
aas
arpl
inc
data16
scas
sahf
fidivrl
lret
movzbl
xor
jp
xchg
pop
inc
add
fnstcw
pop
mov
or
jg
inc
out
bound
fisttpll
adc
cs
ljmp
std
or
xor
ret
adc
in
mov
mov
xor
cmp
aam
lods
sub
test
xchg
das
pop
xchg
push
rcrl
dec
and
mov
subl
mov
rcrb
fwait
ljmp
cmp
sub
fdiv
inc
mov
out
adc
and
pop
in
push
adc
or
stos
jge
inc
sahf
ss
add
or
aas
mov
loopne
std
pop
push
mov
fs
mov
stos
fists
fwait
push
xchg
mov
test
leave
fisttpll
inc
sbb
mov
test
push
xchg
dec
lds
mov
out
clc
or
add
faddl
fwait
dec
xchg
mov
leave
sub
outsb
inc
push
mov
cmp
leave
push
mov
out
lret
push
aas
divb
fisubrs
int3
dec
lret
xchg
int
inc
cmp
sub
std
inc
jbe
push
xorb
jbe
insb
dec
add
xchg
out
inc
inc
pop
jo
sbb
sahf
xor
cmp
push
ljmp
outsb
push
popa
stc
sbb
lock
push
mov
nop
fdivrs
enter
add
xchg
data16
jle
cmp
test
xlat
aaa
jb
sub
inc
fdivrl
aad
std
pop
insl
xor
rcll
arpl
cltd
mov
jmp
insb
movsb
divl
lret
adc
aaa
int
pop
mov
stos
jl
jno
adcl
jns
jecxz
mov
enter
lret
fwait
arpl
push
lret
js
pop
lret
and
leave
mov
add
mov
sti
popa
dec
dec
mov
sbb
mov
dec
test
mov
cltd
imul
pop
and
pop
shrl
arpl
test
clc
cmpl
jb
sbb
repz
fildl
pop
inc
outsl
add
jp
and
enter
addr16
in
mov
fcomp
scas
mov
mov
mov
lds
ds
cmc
jecxz
lods
pop
lods
aam
push
roll
fldenv
scas
loopne
jne
pop
enter
inc
fcom
add
push
push
icebp
mov
leave
inc
xchg
xchg
femms
ret
in
jne
inc
pop
imul
xchg
jae
pop
sbb
in
or
jmp
jl
repnz
cmp
in
mov
aas
fldl2t
or
mov
addr16
cltd
xor
test
nop
leave
cmp
mov
test
and
je
dec
into
xchg
iret
sbb
inc
imul
insb
mov
pop
push
lock
push
cltd
adc
test
lret
and
mov
roll
lea
leave
pop
roll
scas
mulb
pusha
call
jno
dec
mov
sbb
push
mov
es
xor
or
adc
inc
pop
mov
negb
dec
pop
out
adc
mov
cli
jne
out
xchg
adc
inc
testl
dec
dec
jno
imul
clc
mov
pop
addr16
aas
pop
call
enter
stc
inc
jb
mov
shll
int
rcl
mov
jmp
mov
inc
mov
mov
repnz
jmp
mov
add
fcomip
addr16
out
dec
out
mov
into
and
push
test
iret
push
es
loope
xlat
jno
movsb
mov
cmp
xlat
xchg
cmp
mov
stos
icebp
das
notb
mov
mov
les
sub
nop
pop
inc
bound
and
sbb
lods
cmp
sbb
lods
pop
addr16
mov
pop
add
jb
sub
fldt
divb
orl
mov
shlb
jg
jmp
std
mov
and
ja
cmpl
dec
or
xor
shll
and
ficompl
daa
mov
imul
test
loope
das
xchg
mov
sbb
test
shrl
or
arpl
or
xchg
sub
fs
cmp
fistpl
pop
sub
sbb
push
stc
icebp
repnz
mov
aad
call
push
mov
out
and
push
xchg
push
adc
jmp
mov
aad
xor
jecxz
cmc
in
add
jle
inc
cmp
adc
xor
add
cmp
push
xchg
notl
sbbl
jge
mov
adc
data16
test
out
stc
xchg
das
lock
inc
mov
repz
jmp
test
jne
adc
mov
push
popa
stos
sbb
mov
and
cltd
nop
push
inc
mov
out
jae
mov
shll
or
and
fldenv
push
loope
fstpl
sbb
in
mov
mov
std
dec
pop
lahf
ret
mov
dec
insb
jle
push
add
and
cmpsb
inc
testl
sbb
and
pop
fsts
call
jle
pop
mov
dec
test
jecxz
mov
pop
or
addb
add
mul
mov
neg
or
add
add
mov
shrl
add
test
cmp
mov
mov
jg
fdivrp
cld
jb
jo
pop
clc
frstor
in
jo
mov
test
xor
cld
clc
xchg
jbe
je
std
push
fsubrl
cmp
inc
int3
mov
jecxz
sub
cwtl
add
sub
in
fwait
test
data16
iret
lret
fisubl
mov
mov
inc
add
jb
add
cli
mov
add
pop
dec
fsub
ficomps
push
dec
dec
mov
mov
add
addr16
in
dec
and
adc
fstl
dec
adc
dec
pusha
dec
pop
xor
mov
add
addr16
rolb
push
dec
jnp
mov
stc
out
cs
push
sbb
outsl
adc
sahf
mov
push
std
cmp
and
aad
js
fdivl
cmc
mov
cmpsb
test
inc
sbb
adc
movsl
jns
ds
dec
dec
out
insl
ficomps
stos
push
mov
pop
bound
jb
cld
inc
inc
and
adc
hlt
lahf
jg
in
mov
dec
xchg
aaa
popf
pusha
adc
sbb
mov
es
sbb
add
mov
cltd
cmp
test
sub
add
jbe
sub
xchg
push
cwtl
int3
je
xchg
mov
push
and
xchg
int
aam
inc
ret
lcall
xchg
das
mov
inc
push
jge
jno
xor
lret
push
inc
mov
and
pop
aaa
movsl
fwait
dec
andl
call
lods
loope
xchg
imul
pushf
lcall
data16
push
adc
jnp
and
cmpsb
in
lea
pop
jge
adc
pop
add
dec
xor
jnp
arpl
push
mov
ja
cmp
ds
stc
sahf
pop
dec
lahf
mov
mov
xor
xchg
int3
and
fsubl
orl
xchg
inc
stos
pop
and
fistl
sub
xabort
mov
mov
xor
jle
test
mov
pop
cmc
or
divb
mov
addb
shl
pop
addl
pop
lret
dec
dec
sbb
shr
adc
sbb
mov
mov
loop
ss
adc
sbb
lods
dec
js
sbb
ret
push
lea
clc
mov
hlt
mov
jo
inc
leave
pop
add
jl
xlat
sub
push
push
popf
pop
adc
pop
pop
inc
cmp
mov
xlat
out
and
jg
mov
jae
sub
movl
add
cmp
fldcw
jno
into
aam
jb
pushf
push
sbb
test
dec
pop
push
adc
test
add
adc
mov
aam
xor
mov
mov
subl
fstl
pop
lahf
and
sbb
shlb
and
push
and
adc
mov
inc
mov
sub
test
addr16
ss
mov
fsubr
mov
pop
enter
iret
jecxz
dec
xchg
dec
mov
sar
or
imul
stc
add
or
ret
mov
and
test
push
push
adc
inc
sbb
lds
cli
mov
rorl
repz
dec
mov
sti
mov
lcall
push
sbb
jo
sub
leave
fs
inc
fldenv
cmpsb
xor
in
mov
mov
sbb
pop
testl
pusha
pop
mov
cmpsl
loopne
out
or
inc
cltd
stc
push
and
pop
cmp
cmp
xor
mov
fxch
mov
mov
pop
fcoml
xor
insl
adc
jmp
pusha
aam
mov
fnstenv
sub
fnstcw
jmp
ljmp
sbb
inc
xlat
xor
sub
ds
outsl
test
into
cmpsl
sbb
ljmp
outsl
add
mov
lods
aaa
out
pop
leave
cld
in
out
out
cltd
outsb
stos
mov
cld
les
or
sub
push
push
fnstenv
cmp
movsl
add
sub
cwtl
roll
daa
std
stos
ret
lcall
pop
and
inc
cmpsb
dec
jle
push
addr16
and
out
cld
rcrb
push
and
sub
cmp
insl
out
xchg
xor
out
add
dec
into
jbe
cs
aad
mov
fld
push
loope
sub
jecxz
cld
and
test
push
jg
sarl
push
mov
movsb
scas
je
seto
lcall
mov
cs
addr16
inc
and
pop
imul
outsl
mov
stos
jnp
cmp
sbb
adc
push
mov
cmp
or
jge
cmp
movsb
jne
and
movsl
pop
jl
fcoms
mov
andl
in
int3
fdivr
pop
adc
mov
pop
push
ljmp
iret
xor
outsb
js
fs
shrl
outsb
or
sub
lea
cmp
inc
mov
cltd
fld
ret
mov
addl
insl
stc
leave
push
subb
cmp
imul
cmpsb
adc
fnstenv
cmp
cs
cmpsb
out
test
push
cmpsb
jne
subb
or
arpl
int
test
mov
or
or
mov
lahf
sbb
stos
jge
ficoms
jne
xchg
mov
mov
mov
data16
ret
addr16
cwtl
in
sbb
push
movsb
pop
pop
sbb
sbbb
pusha
ret
mov
leave
frstor
ja
pop
mov
cltd
mov
mov
js
cld
clc
lahf
loope
inc
stos
inc
ss
push
das
stos
lahf
outsb
dec
call
mov
inc
bound
add
xor
nop
js
sbbl
loop
sbb
add
mov
jl
lock
call
fsubrl
lods
and
int
xor
ret
or
pop
and
nop
pop
fucom
mov
andb
sub
lret
comiss
gs
lcallw
rclb
hlt
sahf
adc
push
stos
ficompl
inc
cmc
xlat
daa
jno
dec
rclb
out
adc
rcrb
xchg
test
jb
jge
cmp
shr
xchg
xchg
mov
sub
icebp
lcall
fldl
fldt
cmp
scas
jae
pop
mov
js
mov
inc
outsl
push
imul
mov
sub
imul
xchg
negl
outsl
das
enter
mov
rorl
shlb
dec
loopne
addl
es
mov
out
adc
mov
les
xchg
cld
dec
pop
mov
jmp
in
xor
jns
jne
out
test
push
addr16
and
mov
push
mov
mov
cmpsb
push
jp
xchg
iret
loopne
adc
loope
data16
dec
pop
pop
or
dec
pusha
push
je
pop
and
push
nop
xchg
add
jl
mov
lcall
push
add
sub
mov
out
gs
fisubrs
movsb
roll
and
xor
inc
jp
out
mov
movsl
in
adc
aad
inc
pop
adc
jns
mov
js
faddl
jb
shrb
cmp
rcrl
mov
pushf
add
in
mul
push
shll
jg
pop
push
sub
stos
push
lds
ljmp
test
fdivrl
sbb
sub
cmp
mov
inc
add
sbb
roll
pushf
bound
dec
popa
and
ret
out
and
adc
jl
lock
cmc
push
fnsave
je
je
inc
jmp
jo
sub
or
inc
cmpsl
sti
fwait
andb
lods
mov
jnp
in
sbb
inc
mov
aas
mov
cli
push
jne
mov
fwait
fwait
pusha
repz
sarl
sbb
sub
sbb
movsl
jl
insl
pusha
sub
xchg
fisubs
lret
in
mov
jb
xchg
pop
jmp
add
lock
sub
dec
not
and
jp
mov
xchg
inc
mov
sahf
frndint
or
jle
mov
ret
loope
mov
xchg
andps
hlt
in
stos
adc
xlat
push
add
cmpsl
mov
jno
xchg
mov
cmp
pushf
arpl
push
jmp
inc
lcall
inc
cmp
xchg
push
xchg
out
inc
xchg
aas
push
inc
into
das
adc
dec
sbb
push
scas
jmp
or
inc
sub
xchg
pop
push
adc
mov
jo
mov
jmp
sub
mov
out
mov
popf
sti
aam
and
fs
loop
call
test
sub
outsl
cmc
sbb
mov
test
insb
mov
adc
push
xor
pop
gs
ret
std
pop
push
adcb
mov
mov
rclb
inc
je
mov
adc
sub
imul
shlb
cmp
or
loop
mov
pop
add
sahf
rcrb
push
cmp
lcall
mov
mov
sub
mov
jle
dec
lret
pop
mov
push
inc
rcll
verw
mov
xor
pop
xchg
jo
jns
adc
push
sbb
jo
adc
enter
inc
movsb
scas
outsl
mov
lods
jno
fs
push
add
ja
in
mov
xor
loopne
pop
pop
jns
mov
test
mov
jmp
ftst
dec
fdiv
repz
in
sbb
sbb
lods
ljmp
loope
adcb
mov
jecxz
cmp
movsb
lods
mov
xchg
mov
pop
fcmovbe
stos
jp
scas
sti
add
push
lods
out
adc
mov
inc
or
jg
insl
ds
mov
dec
cmp
pop
andb
xchg
cmpsb
out
frstor
dec
aam
mov
clc
arpl
add
lds
mov
xchg
jmp
std
rorl
xchg
push
test
adc
adc
xor
jecxz
xchg
pusha
movsb
out
or
push
xchg
cmpsb
mov
into
xor
sbb
int3
mov
xchg
pop
sahf
rol
out
mov
into
mov
pop
es
loopne
ds
cmp
cmp
loop
fisubs
and
insl
pop
cmp
xlat
mov
jnp
xchg
test
xchg
sbb
xor
aam
cmc
fs
mov
sbb
mov
out
jo
lods
add
adc
add
out
or
pop
aad
sahf
stos
adc
pop
push
orl
insl
xlat
mov
mov
lods
jns
cld
push
inc
mov
sub
mov
pop
rcl
push
aas
mov
aaa
movsl
das
or
pop
dec
out
dec
sbb
xchg
jo
push
xor
add
sbb
mov
jb
cmp
outsb
leave
pop
into
outsb
xchg
stos
lods
daa
push
or
movsb
in
adc
gs
pop
dec
cld
pop
shl
xorb
shl
mov
stc
mov
mov
push
adc
mov
push
in
xor
loop
adc
jmp
mov
pop
outsl
aas
jp
popa
cmpl
loope
dec
pop
pop
in
add
pusha
inc
aam
aad
mov
dec
add
and
sub
imul
cwtl
push
pop
gs
imul
sbb
xchg
xor
aas
jno
inc
and
lock
adc
ret
xor
fistps
clc
sbb
movsl
push
sub
inc
sub
jge
dec
sti
mov
jg
movl
cmp
push
and
imul
mov
mov
cmp
jb
sarl
mov
into
flds
rcr
xchg
cmp
pop
jmp
dec
sti
iret
ficoms
inc
call
mov
mov
sti
arpl
push
or
fstp
cmpsb
lret
inc
lock
cltd
adcb
cmpl
stos
cmp
jle
cmp
lcall
mov
iret
stc
cli
int
loopne
mov
and
cmpsl
pop
cmp
jae
xor
clc
mov
inc
add
push
push
shll
popa
mov
and
arpl
xor
fcoms
add
and
aas
xor
in
push
pop
inc
jecxz
xorb
mov
jmp
divps
add
xchg
das
adc
push
pusha
sub
mov
cmp
jnp
movsb
adc
pop
loop
mov
out
adc
ret
mov
mov
sahf
mov
cli
in
imul
dec
popa
mov
cld
add
orl
sbb
and
jae
dec
or
cmc
inc
fnstsw
sbb
out
sub
out
insl
cmpsb
mov
decl
in
shlb
xor
fcoml
fsubrp
cs
jg,pn
xor
mov
push
pusha
fidivs
sbb
mov
cld
push
jne
roll
andb
std
inc
scas
fdivrs
test
push
pop
add
jb
push
cmp
sbb
dec
cmp
ret
dec
mov
mov
ret
xchg
jecxz
push
push
jb
enter
clc
pop
mov
xchg
aaa
pop
jne
enter
or
sbb
push
inc
inc
daa
inc
fnstenv
cmp
scas
and
mov
cli
mov
dec
das
or
nop
sbb
ret
sahf
cmc
dec
nop
mov
outsl
aas
cmp
nop
mov
lods
in
lret
rorb
and
mov
add
xchg
cwtl
lahf
call
sbb
cmp
stc
repnz
ja
add
hlt
scas
sahf
in
mov
mov
dec
fidivrl
mov
stos
aaa
dec
outsb
xlat
pusha
int
cmp
adc
test
repz
cmp
fcompl
xchg
lcall
lock
out
add
pop
xor
mov
xchg
dec
sbb
je
pop
mov
mov
dec
xlat
dec
mov
and
xor
in
adc
dec
repz
adcb
das
aam
add
or
inc
movb
push
fs
cmpsb
sbb
icebp
imul
xchg
repz
jno
and
jl
clc
add
or
adc
stos
leave
inc
jecxz
test
mov
pop
pop
mov
stc
out
in
or
push
in
inc
imul
pop
cmp
jle
dec
leave
push
lods
mov
stos
cmp
jmp
xchg
sub
popa
mov
hlt
in
sbb
aam
mov
hlt
adc
fwait
mov
mov
xor
adc
xchg
xchg
or
jne
xchg
shlb
jge
mov
pop
subb
les
mov
es
xor
jmp
lcall
lcall
mov
data16
sti
mov
mov
xchg
xchg
repz
or
test
push
push
mov
mov
int3
pop
std
cmp
cmc
lcall
or
ret
out
movsb
aam
pusha
pop
sbb
out
cli
and
pop
in
pop
pop
shl
adc
fwait
fs
int3
add
jae
push
mov
xor
outsb
imul
inc
aad
push
lret
popa
mov
xlat
jne
call
mov
shll
push
pop
fs
js
xor
incl
push
add
inc
lods
add
ret
xor
jbe
js
add
jo
gs
jmp
mov
inc
orl
mov
push
popa
clc
dec
cmpsl
je
in
outsl
push
movsb
jle
and
mov
leave
sbb
call
sub
stos
mov
pop
aaa
mov
rcrb
push
xchg
sarl
iret
subb
add
repnz
xor
xlat
sub
ret
add
xor
sbb
pop
sbb
addb
sub
push
outsb
lcall
xchg
mov
xchg
xchg
cli
or
jge
add
leave
popa
test
sub
dec
popf
push
jns
mov
lret
mov
rorl
std
or
out
mov
mov
jbe
mov
add
push
in
into
aas
in
or
lea
iret
mov
insl
mov
in
add
shrl
pop
dec
and
testb
fwait
repnz
mov
js
mov
int3
clc
cmp
mov
xchg
and
cmpsb
rcrb
sub
mov
xlat
pop
mov
mov
mov
cmp
adc
ljmp
mov
rclb
cs
xor
and
mov
imul
cwtl
mov
sbb
mov
and
push
or
mov
cmp
sub
xchg
pushf
int
or
in
aaa
sbb
das
pop
mov
pop
or
adc
dec
repz
pusha
in
mov
dec
lea
shll
cltd
inc
sbb
jae
outsb
jno
cmp
or
mov
xchg
xchg
lahf
xchg
pop
and
mov
jns
mov
inc
jb
ja
push
cmp
push
pop
xor
cmp
mov
add
mov
add
mov
dec
cltd
dec
or
cmc
sbbl
push
enter
pusha
dec
jle
mov
insl
inc
push
xor
sarl
cmc
sbb
push
push
inc
jecxz
cltd
inc
xorl
sub
mov
sub
pop
js
lods
lea
xchg
jg
cmp
jecxz
push
jcxz
pop
adc
lea
push
jp
int3
push
jnp
out
mov
xor
scas
dec
in
mov
or
pop
cmpsb
mov
inc
int3
repnz
xchg
or
in
je
jns
sbb
or
lea
and
sub
mov
rcl
sahf
pop
fsubrp
xchg
and
imul
call
ret
jle
shrl
cmp
cld
sbb
pop
fwait
pop
lret
ja
and
cli
addr16
dec
pop
es
mov
ss
cwtl
mov
mov
xchg
stos
in
dec
ret
int3
cli
sbb
xchg
outsl
movsb
nop
outsl
in
mov
push
mov
mov
jbe
cmp
inc
mov
push
xor
divl
fs
cmp
sub
and
loopne,pn
cmp
mov
insl
and
into
mov
or
lods
out
sub
mov
push
sub
dec
mov
arpl
loop
daa
test
cmp
sub
addb
into
inc
xor
sub
jle
xchg
cwtl
out
inc
daa
and
mov
in
mov
stos
es
test
pop
push
popf
sub
xchg
push
fs
cwtl
and
xor
imul
imul
fstl
cmp
add
mov
sbb
jo
mov
cmc
jns
fldcw
inc
mov
testl
int3
mov
fcmovu
mov
xchg
in
add
pop
cmp
jno
lahf
push
pop
mov
in
cmp
rcrb
repz
loop
popa
adc
mov
push
sbb
insb
cli
inc
cs
gs
mov
mov
add
and
push
clc
jmp
cld
int
cmpsl
repnz
jb
rcrb
in
pop
mov
fsin
fs
sub
lret
sbb
dec
adc
push
stc
cmp
and
scas
jecxz
popf
sbb
adc
fldl
xor
dec
adc
push
rol
cwtl
xchg
lret
xor
mov
imull
aad
ficoms
dec
push
inc
fnstcw
xchg
fs
test
dec
repnz
dec
xor
pop
sub
out
mov
pop
sub
inc
jmp
sbbb
pop
inc
xor
jne
mov
mov
lret
lahf
dec
ret
xor
jmp
out
call
outsl
cmp
jns
mov
adc
fs
adc
xchg
pop
mov
mov
push
icebp
or
stos
sub
ljmp
sbb
aas
out
xor
lret
in
js
jecxz
test
or
loopne
pop
imul
pop
lret
lcall
repz
dec
dec
ret
inc
imul
mov
add
fmul
push
jge
mov
call
push
xor
xchg
xor
repnz
fcmove
push
jl
mov
aam
dec
aas
pop
aad
cmp
and
hlt
mov
ret
in
jns
fwait
loope
cld
test
add
movsb
jnp
mov
push
mov
push
stos
movsb
xchg
push
xor
lret
push
imul
cmp
push
pop
xchg
dec
filds
data16
xor
pusha
or
pop
pop
jb
clc
int
in
jns
in
mov
cmp
mov
xor
jns
sub
lret
and
mov
push
ficomps
mov
lea
leave
jbe
cli
pop
cmp
mov
pop
mov
dec
dec
jge
ret
dec
adc
scas
sub
loop
push
mov
jl
jns
pop
mov
xchg
cmpsb
mov
xchg
shlb
lods
outsl
mov
in
insb
inc
pop
roll
jg
lods
sbb
popa
outsl
add
jno
xchg
mov
jne
sti
pop
adc
int
mov
fcomps
das
or
mov
lret
xchg
inc
adc
cltd
stos
push
and
cmc
push
clc
inc
cmp
ret
fstpl
sbb
cmp
pusha
pusha
pop
xchg
xchg
stos
push
add
xlat
xchg
cs
in
jmp
outsb
cmp
je
cmp
add
pusha
repnz
jb
add
add
sarl
cmp
xlat
adc
or
pop
sbb
les
lret
sub
push
pop
mov
inc
repnz
cld
pusha
pop
cmpl
cmp
adc
cmp
mov
sub
lahf
lods
or
inc
dec
cmp
xor
shrl
inc
notl
or
sbb
rorb
adc
xchg
jge
mov
sub
cmp
push
mov
push
xlat
mov
push
cs
inc
mov
sub
adc
pop
jae
and
xchg
mov
ret
mov
test
mov
rolb
add
hlt
xchg
fmul
mov
cli
inc
stos
xchg
ds
ja
push
mov
gs
repz
push
imul
sub
icebp
add
fxch
mov
rolb
inc
sub
call
or
adc
or
in
daa
stos
mov
fnstcw
sbbl
cmp
gs
int
dec
cmpsl
or
insl
call
pop
imul
loop
cmp
cmp
sbb
inc
ja
mov
sbb
and
sbbl
std
mov
mov
xor
pop
pushf
jbe
mov
cli
dec
das
mov
dec
pop
fadds
leave
fcompl
shll
or
or
push
xorb
inc
xor
mov
es
sti
rcll
jne
cmp
andb
add
cltd
cmpsb
fcoml
mov
sbb
mov
ret
js
inc
adc
sbbb
pop
and
jle
push
mov
stos
and
aad
ja
cmpsl
popf
insl
mov
in
push
adc
daa
inc
fcompl
cli
push
mov
hlt
lods
adc
mov
testb
subl
mov
pop
pop
mov
div
pop
sbb
push
xchg
cltd
and
pop
icebp
lods
cmp
xor
xlat
ret
sub
xchg
adc
movsb
nop
pop
cld
dec
in
cs
pushf
xor
cmp
pop
mov
mov
loopne
mov
cmp
cmp
outsl
out
mov
inc
push
sbb
cmp
movsb
dec
jns
push
les
ljmp
sub
rcll
push
sbb
test
loopne
ss
sahf
push
pop
in
dec
mov
aad
int
mov
cmc
and
pop
insb
xor
sub
mov
mov
dec
jle
mov
mov
insl
les
jle
cs
or
jp
stos
push
sub
push
jmp
push
jl
jnp
xor
int
movsb
hlt
push
mov
out
xchg
fidivrs
push
iret
mov
xchg
outsb
mov
repnz
mov
into
call
cltd
xchg
mov
xor
mov
pop
sub
cwtl
add
inc
stos
jg
cmp
lods
inc
inc
in
scas
mov
cltd
pusha
lock
sbb
adc
lret
data16
xchg
insb
ret
cld
cld
pop
jl
ljmp
jmp
jno
jbe
out
lds
or
cld
jbe
in
fsubr
jmp
add
sbb
bound
hlt
dec
push
mov
gs
add
xchg
lds
sbb
ss
data16
mov
fisttpll
inc
inc
ss
inc
ror
xor
jmp
arpl
fucom
lret
xchg
cmp
sub
adc
cmc
daa
adc
dec
dec
das
cmpsl
fstps
pop
and
test
scas
cmpb
and
cld
pslld
mov
pop
push
nop
imul
stos
adc
jb
mov
int
shr
fldln2
or
popa
adc
arpl
aaa
je
fbstp
xchg
fisubrl
pop
mov
push
dec
addb
pop
sbb
pop
nop
inc
add
xchg
out
cmpl
enter
imulb
addr16
nop
mov
lahf
addl
lea
fwait
imul
ja
jae
add
push
scas
jle
out
out
inc
fcomi
shlb
rorl
cltd
cli
popf
lret
push
leave
and
test
jmp
push
adc
add
iret
cltd
mov
sti
stc
xorb
out
pushl
pushf
outsl
rolb
mov
data16
ficompl
mov
adc
inc
test
rcrl
dec
scas
shrl
mov
les
std
xor
jg
push
aad
das
ret
lret
lea
xor
stos
sub
dec
lds
mov
arpl
add
cmp
ficoms
push
dec
push
cltd
ffreep
mov
movsl
shrb
push
ds
iret
in
sbb
mov
push
mov
push
sub
push
xchg
adc
in
xchg
shr
push
xor
scas
in
add
mov
xor
aaa
dec
mov
push
aam
lret
mov
inc
ret
xor
cmc
add
or
lret
test
xchg
enter
lods
in
test
xor
jne
hlt
imul
aaa
orl
push
cltd
inc
cmpb
dec
lret
mull
stos
mov
sarb
xor
xchg
test
push
arpl
bound
mov
in
out
aas
out
lds
insl
leave
cmpsl
adc
dec
dec
push
out
hlt
incb
sub
cmpsl
pop
push
ret
dec
push
jb
sbb
sub
iret
in
xchg
pop
les
out
cmp
mov
or
iret
adc
std
mov
xchg
out
pop
jnp
jae
xchg
outsl
add
sub
add
xchg
inc
xchg
sub
out
ss
cmp
pop
repnz
pop
cmpsb
mov
ret
repnz
pop
push
lds
sbb
les
dec
mov
cmp
ds
rclb
sub
and
testb
loopne
mov
pop
subl
jmp
cmp
mov
lock
outsb
mov
andl
add
pusha
out
shlb
dec
dec
addr16
sub
or
cmp
push
lret
inc
std
scas
jnp
sbb
and
push
iret
inc
mov
add
xchg
adc
jbe
int
pop
or
nop
mov
enter
out
inc
push
das
mov
add
mov
mov
and
and
js
push
xchg
int
pushf
sbbl
pop
outsl
je
xor
lds
pop
shr
sbb
int3
repz
jmp
mov
mov
dec
jmp
lods
fs
int
arpl
stos
inc
dec
inc
mov
shrl
in
pop
mov
movsl
push
cmpsl
pusha
add
xchg
xchg
xor
sti
arpl
nop
cmpsl
xchg
mov
mov
aad
rcpps
icebp
adc
shrb
push
mov
inc
pop
cltd
inc
jle
dec
xor
test
repz
xchg
sub
mov
mov
sahf
inc
addr16
fiadds
cli
mov
xchg
jb
xchg
js
stos
jge
adc
popa
lahf
sub
in
out
push
cmp
dec
and
scas
push
rclb
jmp
lahf
inc
adc
cmp
fldl
clc
and
adc
add
adc
arpl
xor
mov
clc
imul
fnstcw
mov
add
mov
mov
cmpsl
push
or
push
dec
loopne
xchg
je
xor
or
lds
test
cld
push
mov
xor
je
sub
jo
call
jae
les
cmpsl
mov
xchg
sbb
in
or
loopne
call
pop
jns
inc
inc
dec
popf
add
aas
das
lret
inc
por
sbb
inc
or
add
sbbl
cltd
sub
cli
lahf
or
mov
ret
adc
sub
aam
pop
xchg
test
adc
cmp
in
inc
mov
lea
leave
mov
mov
js
and
ret
sti
clc
xor
pop
pop
stos
and
add
push
pop
out
xlat
roll
js
rorb
mov
mov
cmp
popa
push
cmp
sub
or
je
outsb
pop
cmpsb
push
mov
rcr
push
push
jecxz
mov
or
or
out
sub
popa
stos
sbb
xlat
and
push
js
mov
and
cmp
dec
cs
push
mov
cmp
sub
push
xor
pop
inc
dec
enter
mov
inc
in
push
xor
insl
in
mov
mov
cmp
sti
sub
or
test
xchg
fdivl
xchg
ret
subl
sbb
lret
xor
inc
cmpsl
lret
stos
imul
fimuls
fisttps
add
cmp
sub
rolb
sbb
mov
andnps
mov
js
enter
fsub
ficoml
pop
aaa
cmp
cmp
and
mov
push
pusha
aas
ljmp
pop
cwtl
test
sbb
xchg
mov
inc
std
in
jbe
loope
pop
loopne
clc
mov
sarl
mov
inc
stc
inc
cwtl
cmp
rcll
xchg
fcmove
outsb
out
pop
adc
adc
mov
ja
ss
inc
fwait
xchg
push
movsb
sub
lret
add
jae
push
cwtl
add
in
or
jo
iret
int3
mov
mov
push
pushf
cmpb
shlb
push
fdivr
push
fwait
lods
mov
lods
xchg
or
in
nopl
jl
mov
ret
dec
andl
push
inc
fwait
arpl
inc
adc
push
mov
fucomi
mov
adc
lods
jmp
adc
lret
imul
lahf
jecxz
cld
xor
lea
mov
outsl
pop
pop
pushf
cmp
jge
mov
fidivs
mov
subb
dec
out
add
loopne
xchg
jne
mov
pushf
and
ret
lahf
insb
sub
add
lea
sbb
inc
add
pop
stos
shlb
rorl
test
push
pop
in
mov
mov
sub
rcr
scas
sbb
mov
imul
stc
sbb
mov
push
xchg
xchg
mov
mov
sub
push
jo
xor
sbbl
xor
mov
push
icebp
int
pop
addl
dec
lahf
and
repz
sahf
ret
mov
add
gs
push
lret
jno
mov
pop
ficoms
lret
outsb
ljmp
push
call
pop
mov
inc
inc
and
push
and
int3
cltd
push
lcall
xchg
out
jns
bound
jns
mov
xchg
hlt
out
cmpsl
clc
pop
es
lock
fwait
idivl
clc
push
cmp
or
lret
pop
call
pop
push
outsl
xor
in
adc
sub
jne
or
sbb
cmp
imul
mov
jae
mov
pop
std
fs
ja
or
mov
sbb
sbb
add
testl
dec
ds
push
pop
dec
pop
fisubs
movsl
sub
jp
testb
pusha
pop
or
inc
jns
dec
mov
out
add
jns
loop
push
adc
and
adc
insb
pop
xchg
or
rcrl
or
loope
repnz
add
mov
lods
data16
js
dec
xchg
aaa
jmp
jns
push
jne
es
ret
outsl
lret
inc
adc
imulb
jge
push
lret
jb
rcll
adc
addl
in
pop
lods
inc
pop
cmpsb
jecxz
or
lods
mov
sahf
push
xchg
leave
data16
xchg
adcb
loope
testb
sbb
inc
test
fstl
mov
fidivl
scas
pop
ljmp
cmp
sbb
pop
call
mov
mov
arpl
dec
adc
pop
fstpl
bound
xor
mov
cmpsl
mov
icebp
hlt
dec
movsl
inc
or
xchg
mov
lods
xor
add
sbb
popa
or
test
pop
roll
or
gs
add
push
repz
aam
imul
scas
and
push
cld
xor
divl
jl
sti
pop
mov
int
sub
mov
dec
sbb
fscale
fiadds
cmp
mov
notl
int3
stos
aas
or
ljmp
hlt
jno
mov
pushf
jnp
pop
fdivp
cs
add
add
js
lret
frstor
and
aad
sbb
cmp
jns
xor
jle
sub
cmp
movsb
jle,pt
scas
es
nop
stc
insb
rcrb
lock
xor
out
lds
inc
imul
movsb
inc
add
jno
mov
push
out
es
rcll
pop
xchg
mov
sbb
rclb
sbb
inc
push
xor
ret
jbe
xchg
fcomp
ret
out
test
jge
xor
jg
or
add
jb
xchg
pop
out
cmpsl
xchg
test
adc
xor
inc
into
dec
ljmp
mov
and
push
xor
and
inc
mov
sub
pop
mov
enter
ja
push
lahf
int
out
out
clc
or
fsubl
mov
pop
mov
push
and
and
lahf
pop
sub
movsl
out
negb
jae
nop
cmp
imul
cmp
cmp
outsb
fisubl
outsb
dec
xor
pop
movsb
mov
push
cmp
or
adc
lea
push
movsb
and
dec
xor
xor
arpl
outsl
mov
adc
insb
jo
aam
fnstsw
sbb
pop
jecxz
push
sbb
inc
data16
add
bound
push
jnp
in
mov
xchg
jg
xchg
or
xor
cli
cmp
push
xchg
out
imulb
jnp
cld
mov
int
push
lret
adc
lahf
mov
insb
hlt
addr16
outsl
mov
repnz
xchg
xor
pushf
pop
cmc
popa
loop
jnp
and
cmp
inc
lods
lock
xchg
jae
jecxz
and
adc
stos
push
push
dec
aaa
inc
pop
ss
xor
sbb
xchg
push
in
xlat
adc
adc
dec
out
shl
test
popf
jne
push
in
push
cmp
mov
sbb
ret
stos
adc
ljmp
fs
xchg
dec
call
dec
ret
out
lock
in
push
ret
jmp
nop
mov
pop
leave
sbb
fadd
xchg
daa
jne
pop
adc
push
cs
fs
icebp
fisubrl
in
push
and
loope
push
icebp
lcall
push
inc
mov
and
testl
xchg
aas
and
in
pop
fdivrs
sar
je
dec
fadds
je
sub
shrb
sub
cmp
xor
arpl
stos
lahf
inc
ljmp
shrl
popf
push
xchg
int3
push
shll
cli
mov
lcall
sbb
lret
pusha
call
mov
cmpsb
std
cmpsl
out
sub
push
je
pusha
setg
imul
lret
leave
mov
les
ficoml
sar
mov
lret
pop
js
aam
dec
jg
mov
push
push
pop
test
pusha
and
pop
scas
insb
xlat
in
inc
loopne
sub
lea
gs
pop
dec
mov
outsl
lret
push
sahf
jle
cmp
inc
in
cmpsl
loop
mov
sub
pop
add
imul
rcrb
pop
inc
dec
inc
je
fwait
divb
mov
sbb
repz
bound
divb
and
mov
loop
mov
enter
lods
stos
mov
shlb
fwait
pop
xor
out
cmpb
push
inc
and
jns
or
clc
jae
mov
push
insb
jnp
xlat
dec
mov
mov
sbb
loop
mov
sbb
xlat
fsub
notl
cmpsl
dec
mov
jo
xchg
stc
xor
test
xchg
xor
fwait
arpl
add
enter
or
stc
cmpsl
mov
arpl
sub
fdivs
mov
jmp
loop
adc
cmp
mov
je
fs
fildl
dec
jo
ja
pop
lahf
js
subl
fistl
decl
jge
repz
ror
std
mov
jecxz
cwtl
sbbb
cmpsb
sbb
xchg
mov
mov
ljmp
add
sti
cmp
cmpsb
mov
mov
shll
sub
mov
pop
add
insb
sbb
add
dec
mov
ds
adc
roll
repnz
cmpsl
cwtl
clc
lcall
inc
xor
int3
lds
mov
shl
ds
jb
stc
cmpsl
dec
push
scas
insb
xchg
cmpsl
lahf
daa
mov
iret
ret
xchg
test
add
flds
sti
dec
lock
push
pop
adc
add
cwtl
mov
sub
cmp
jne
xor
ret
sub
jmp
shl
fwait
dec
pop
call
sbbb
cmp
fdivp
rcll
cwtl
xchg
sbb
xchg
loop
arpl
popa
mov
xor
sbb
or
dec
ja
sbb
js
cmp
into
aaa
sbb
pushf
mov
mov
fwait
or
arpl
outsb
jp
mov
sahf
punpckhwd
sbb
push
aaa
decl
sarb
cmp
into
push
pop
stc
or
cmp
incl
xorl
lcall
shlb
xchg
repnz
mov
loopne
add
loope
sbb
add
loope
or
jl
loop
adc
cmp
add
xchg
adc
je
loope
jle
push
jl
or
jmp
push
dec
sbb
and
lcall
mov
pop
stos
iret
insb
push
popf
mov
mov
outsb
pop
push
dec
je
orl
mov
cmp
and
mov
addb
int
pop
or
pop
nop
push
and
dec
lods
add
lcall
sbb
push
and
bound
mov
sub
sbb
sbb
hlt
push
add
cmc
mov
jg
imul
imul
xchg
mov
add
inc
dec
stos
mov
sbb
iret
mov
lahf
repnz
inc
daa
and
jmp
cmc
movl
mov
adc
xchg
push
daa
pusha
aas
inc
cmp
or
jo
ja
ret
push
scas
dec
nop
inc
push
ret
mov
push
pop
pop
xchg
mulb
and
mov
imul
nop
xor
aaa
dec
sti
xchg
das
jnp
dec
aad
adc
in
lret
jbe
push
jo
inc
jg
arpl
push
or
out
jb
dec
jnp
cmpsb
repnz
jno
icebp
dec
pop
xor
cmpsl
adc
jb
movsl
sub
mov
in
xor
push
mov
out
xchg
and
std
mov
sbb
jl
dec
sub
mov
jnp,pt
inc
iret
mov
fcmovu
aaa
mov
or
jl
xor
cltd
test
stc
inc
imul
add
ret
fcmovb
loope
xchg
mov
scas
mov
dec
jno
pushf
testb
lret
orb
sub
aam
push
notb
pop
jns
inc
aas
fucom
inc
in
fucomp
push
shll
and
cltd
jae
adc
mov
adc
ja
fwait
and
inc
out
push
aad
aad
out
sbb
cltd
push
mov
xchg
addl
popa
ljmp
add
mov
ret
pushw
xchg
add
fldcw
sub
jmp
insl
push
sub
popa
fstpl
adc
xchg
pop
lahf
fidivs
dec
out
imul
in
int
cltd
cmpsl
jle
push
mov
shl
mov
add
adc
xlat
aaa
mov
dec
ret
mov
mov
roll
jecxz
mov
xchg
scas
lods
fcompl
push
pusha
addr16
call
sbb
push
xlat
clc
lods
hlt
adc
addl
aaa
sbb
inc
inc
iret
add
jno
lcall
inc
adc
cmp
or
rcll
cmp
mov
gs
arpl
sbb
imul
jbe
xchg
mov
sbb
jl
test
test
cmpsb
mov
je
cmpsb
xchg
in
fcompl
cmpsb
and
pop
scas
pushf
mov
pop
stos
nop
lcall
pop
mov
inc
dec
xor
inc
arpl
jmp
fisttpll
and
pop
xchg
jbe
sub
cwtl
xchg
add
xor
mov
jo
push
xor
pusha
pop
xor
inc
xchg
fnstenv
sbb
rorb
rorl
shl
xchg
fiaddl
add
pop
gs
movsl
cmp
mov
out
or
out
jno
jecxz
fsts
hlt
scas
es
mov
sub
push
loop
outsl
jg
dec
or
mov
sbb
or
or
or
jno
mov
stc
add
ljmp
cwtl
gs
dec
shll
je
stos
cmp
leave
mov
lret
adc
sarb
pushf
cmc
sbb
jns
jge
movsl
add
daa
pop
xor
and
mov
mov
cmp
fs
or
jno
and
pushf
cmpsb
inc
lea
outsl
cltd
and
sbb
sahf
adc
iret
es
adc
lods
or
iret
inc
adc
sub
test
jb
shrb
loope
adc
cld
fisubrl
push
and
dec
cmp
lretw
xchg
cmp
xor
cmc
mov
popf
and
inc
pop
pop
ljmp
shrb
mov
js
pop
insb
fidivs
mov
pop
ffree
xor
xor
sbb
iret
sub
push
insb
ret
xor
xor
call
ja
fs
sub
jb
fcmovne
inc
cld
insb
pop
in
xchg
xchg
or
je
dec
movsl
adc
mov
rorl
gs
mov
or
mov
mov
add
pop
cli
inc
mov
inc
bound
ja
out
and
mov
xchg
fwait
mov
and
push
mov
add
xor
mov
xchg
andb
sub
in
jge
lea
sbb
mov
push
sti
mov
out
sbb
fisubl
and
jecxz
leave
pusha
mov
pop
add
lods
mul
cli
test
enter
dec
mov
mov
dec
lds
dec
xor
sahf
cs
or
mov
leave
cmc
enter
jmp
xor
lock
jnp
sub
lahf
jne
imul
inc
cmp
or
out
bound
cmpsb
aaa
sub
lret
push
cld
in
mov
and
shl
inc
call
mov
out
pop
fdivl
pushf
test
int3
popf
adc
and
mov
inc
movsb
add
int3
inc
ss
push
and
sahf
lock
dec
lods
aaa
aad
int
fldenv
lods
mov
xchg
repz
jo
mov
lods
xchg
data16
mov
jbe
cmp
xchg
fsts
push
or
lds
mov
sahf
incl
lret
ret
mov
mov
jl
es
fidivrl
dec
push
mov
jbe
sub
mov
adc
adc
ret
dec
rcll
aam
sub
in
jb
aaa
sbb
stc
sub
push
adc
jmp
jbe
pop
or
adc
xchg
xor
push
imul
clc
mov
adc
ficompl
push
dec
and
dec
ret
xchg
fwait
ljmp
cmp
imul
in
mov
repz
test
push
rcrb
add
push
sub
mov
arpl
mulb
xor
in
mov
jbe
enter
cli
inc
pop
dec
push
add
ja
push
cmc
mov
inc
xor
push
adc
mov
xchg
jge
stc
int
scas
pop
push
scas
scas
or
mov
pop
pushf
add
dec
sbb
adc
xor
push
mov
sbb
inc
je
iret
jg
pushf
cmpsl
cld
movsb
and
pop
xchg
and
dec
lret
or
aam
lret
lods
inc
insl
shr
pop
mov
fcomip
mov
imul
pop
cmp
mov
and
lods
xchg
hlt
xor
mov
mov
push
pusha
pop
psubd
mov
mov
mov
and
stc
xchg
adcl
jae
fdivrl
je
mov
and
lret
lret
and
pop
dec
cltd
test
jmp
test
pop
sti
push
jae
int3
cs
adc
inc
cwtl
jecxz
sbb
pop
xchg
push
adc
push
int3
jle
xchg
add
sub
in
std
sar
fucomip
cli
into
mov
pop
pusha
in
pushf
xor
xchg
adc
mov
clc
or
call
jnp
movsb
mov
jmp
add
and
in
inc
in
imul
and
dec
lock
mov
jae
jp
dec
iret
bound
call
ds
fisttps
enter
loope
push
jp,pn
imul
mov
mov
push
jmp
pop
add
or
jecxz
lds
int3
nop
outsb
int
cmpsb
push
mov
sbb
test
push
mov
adc
in
imul
jecxz
adc
dec
outsl
lcall
push
pusha
jns
out
lea
aam
inc
jmp
push
xchg
xor
sub
jns
pop
or
add
mov
sub
inc
ss
sbb
jb
adc
sub
dec
jo
out
mov
mov
xor
add
add
mov
into
xor
push
jmp
dec
lock
or
mov
cmp
cwtl
pop
inc
loope
mov
lock
sub
ljmp
stos
dec
add
jge
stos
fwait
mov
inc
pop
fisubl
xor
cmpsb
js
outsb
mov
sub
push
pushf
mov
psraw
incl
popf
jmp
fisubs
push
jp
xor
jns
stos
popa
iret
pop
dec
jl
fldpi
fwait
imul
fucom
mov
scas
push
ret
rcrl
inc
sbb
popa
xor
in
iret
int
dec
sbb
mov
aad
mov
pslld
js
jl
and
sti
xor
add
ss
xor
movsl
stos
adc
loopne
and
mov
inc
mov
mov
shll
jp
lret
les
cs
sbb
and
test
in
or
into
adc
adc
loopne
clc
subb
or
insl
out
dec
test
jb
subl
add
jo
add
add
mov
dec
xor
xor
add
nop
call
in
into
aam
sbb
lea
push
xchg
out
orl
aam
sub
xor
jns
push
aas
pop
push
cmp
int
add
stc
inc
roll
loop
push
enter
xchg
wbinvd
int3
pop
psubsb
push
and
jno
stos
popl
sub
mov
cmp
cwtl
aad
xor
push
lret
orl
mov
fldt
inc
xchg
imul
ret
sub
aas
or
repnz
add
icebp
jno
rcl
nop
dec
cmp
gs
xchg
mov
and
pop
and
dec
call
dec
mov
test
mov
pop
inc
cltd
adc
insb
stos
jle
inc
mov
push
or
movsb
xchg
mull
sbb
ja
mov
jp
mov
lock
test
dec
stos
fxch
test
inc
aad
popf
cmpb
les
sbb
enter
xchg
mov
cltd
popa
cwtl
dec
shl
adc
adc
out
sbb
not
mov
arpl
stos
pop
aaa
push
idivb
gs
pop
sub
popl
nop
out
xor
insb
cmp
jne
cwtl
jl
inc
mov
add
insl
mov
stos
lret
fdivrs
add
push
adc
jbe
inc
or
add
xchg
push
push
movsb
js
adc
add
xor
imull
or
test
pop
sbbb
call
push
mov
ss
lret
rclb
push
aaa
mov
pop
es
cmp
cmp
pop
inc
mov
jp
pop
stos
outsb
xor
orb
clc
mov
sub
pushf
pop
in
xchg
test
inc
jge
enter
xlat
sbb
sbb
addb
out
ss
lea
test
cmpsb
imull
mov
sbb
cmp
jb
aam
out
movsb
xor
int
ljmp
push
int3
mov
mov
ja
push
pop
jae
xchg
cmpsl
pop
push
imul
insl
lahf
inc
sysexit
ljmp
or
adc
xchg
testl
dec
pop
std
pop
push
xchg
add
mov
ret
movsbl
jns
xchg
negl
cmp
sbb
pop
mov
es
cld
mov
xchg
pusha
xchg
sub
enter
das
popf
aaa
jmp
xchg
jmp
outsl
mov
shll
cmp
fisttpl
add
xor
jecxz
adc
insl
dec
cmp
lret
cwtl
push
fdivrs
xor
adcb
sbb
pop
mov
aaa
cmp
jae
jmp
mov
out
inc
or
xchg
std
jle
dec
jp
mov
sbb
call
xor
ret
sbb
out
sahf
es
mov
ja
push
jmp
bound
arpl
jge
cmp
outsb
in
sub
fsubr
addr16
or
sbb
pop
xor
sbb
cmp
mov
in
xor
aaa
test
mov
nop
mov
mov
aad
adc
fidivl
js
jb
or
iret
popl
xchg
jae
push
pop
inc
push
aad
out
cmpsb
stc
dec
adc
cwtl
add
lds
push
sub
xchg
cmp
pushl
lret
test
add
pop
mov
push
mov
out
jne
jmp
daa
pop
mov
aas
sub
fmull
mov
mov
sti
repz
shlb
enter
add
lea
roll
call
jp
fcmovne
ja
xchg
jbe
pop
mov
mov
sbb
scas
stos
or
cmp
sbb
stc
push
icebp
clc
mov
in
jp
xchg
mov
lcall
popa
push
pop
sub
mov
dec
mov
mov
mov
cmpsl
pop
sub
dec
adc
loope
xchg
aas
ficoml
mov
loopne
or
inc
clc
dec
shll
sbb
in
clc
popf
push
sbb
xor
fneni(8087
je
fwait
int
xor
inc
xor
pop
sbb
mov
lcall
push
push
push
jmp
test
jmp
aam
or
fld
ret
inc
jne
inc
aas
lret
inc
movsl
cltd
lods
jle
add
leave
or
gs
sar
sub
outsb
scas
xlat
mov
stos
cwtl
pop
push
mov
mov
jecxz
xchg
jp
hlt
mov
jo
adc
xor
in
jmp
insb
call
cmp
ret
hlt
push
into
mov
push
pusha
sbb
ljmp
xor
inc
xchg
cmp
arpl
inc
cmc
or
sbb
hlt
inc
pushf
in
adc
stos
jmp
cmpsl
leave
shr
push
cmc
mov
fidivs
sbbb
out
xor
es
xor
imull
lcall
and
ljmp
jne
push
fs
rcll
mov
flds
imul
lds
jp
adc
fisubrs
mov
mov
iret
outsb
mov
lock
or
or
lret
inc
mov
xor
in
pop
inc
xor
mov
mov
in
xchg
inc
cmp
push
scas
in
in
out
push
sahf
and
xchg
mov
outsb
call
clc
jo
imul
push
mov
aas
test
cmp
mov
lahf
lock
pop
fdivrs
jno
lea
out
mov
cltd
push
xchg
mov
call
nopl
int3
mov
mov
dec
cmp
and
jge
jmp
mov
loopne
mull
mov
mov
and
mov
aaa
cmpsb
bound
stc
xchg
xchg
cltd
stos
push
fs
loope
cmp
pusha
sub
or
test
sbb
or
add
cltd
jge
cld
lods
std
push
and
clc
xchg
mov
mov
ljmp
fbstp
insl
inc
je
int
inc
int
aam
call
fs
xor
rcll
test
mull
int
jmp
mov
push
pop
jb
shrl
mov
and
inc
imul
test
mov
pop
cmp
iret
adc
mov
data16
xchg
dec
mov
stc
pop
or
std
add
out
sbb
add
mov
pop
sub
insb
fistps
add
aad
jb
fcos
int
cmc
orl
and
cwtl
fnstsw
mov
adc
test
into
inc
or
jge
xor
add
dec
xchg
lret
jae
neg
pop
dec
int3
subb
dec
cmp
mov
adc
push
mov
add
sbb
dec
out
in
or
pop
xor
xchg
xchg
out
jge
mov
fistps
xchg
xchg
jbe
pop
xor
imul
js
cs
fs
adc
sbb
test
std
pop
negb
andb
fsubrp
ss
xor
jns
xor
adc
movsb
dec
out
inc
lret
cmp
mov
jne
add
loope
aas
jp
mov
add
outsb
mov
sbb
imul
dec
mov
sbb
sbb
imul
xor
mov
loopne
jne
out
mov
jge
dec
lahf
dec
mov
mov
aam
mov
push
scas
lods
ljmp
fs
loope
and
xchg
sub
lret
xor
mov
fiadds
or
test
dec
aam
flds
mov
jle
xchg
sahf
mov
xchg
xor
jle
rcrl
pop
sub
sti
add
clc
mov
rcll
mov
cmpsl
inc
jl
jp
stos
nop
cld
push
sbb
lret
int3
xor
adc
mov
sarb
cmp
popa
mov
daa
je
and
jmp
outsl
adc
sub
pop
in
mov
shrb
and
mov
movl
push
inc
inc
push
bound
int3
lods
das
cli
mov
ja
imul
and
push
adc
insb
push
lods
dec
sbb
out
mov
cmp
faddl
and
push
stos
cltd
sbb
popl
mov
clc
cmpsb
sub
shll
jno
inc
aaa
xchg
cmc
arpl
adc
mov
cld
jns
jp
push
add
stos
fists
data16
into
pop
js
mov
pop
pop
cli
mov
jno
xor
jno
and
mov
inc
pop
notl
sub
adc
push
cmc
lcall
dec
sub
inc
jnp
mov
adc
or
clc
in
mov
loopne
push
xlat
notl
cmp
dec
or
shrl
mov
pop
or
adc
lock
js
ss
and
xor
aad
sbb
popf
jge
test
add
repz
pop
dec
xchg
or
popf
push
stos
mov
cmpsl
lcall
orb
mov
mov
lock
cmp
sbb
imul
jb
aad
repnz
push
sub
clc
pop
xchg
xchg
dec
dec
mov
popa
mov
pusha
jecxz
stos
jb
or
lret
xchg
xor
or
jae
out
lea
lahf
mov
push
popa
cmpsb
aad
das
cmp
xchg
cmp
enter
aad
and
cmpsb
pop
scas
xchg
jo
adcl
int
ds
sub
icebp
addr16
insl
lret
lods
mov
mov
test
pushf
je
inc
lock
scas
imul
out
outsb
mov
jl
mov
mov
mov
loopne
cmpsl
jno
int3
pushf
pop
xchg
je
das
pop
jmp
pop
int
inc
and
fsub
pop
lds
adc
ja
aad
xchg
lds
imul
rclb
cmp
in
outsb
xor
mov
mov
lret
cmpsl
or
dec
dec
push
sub
sbb
mov
add
adc
jno
cmp
sub
push
push
lahf
fcmovu
call
rcll
lret
movsb
and
adc
and
or
loopne
test
movsl
xor
test
push
and
jmp
aam
sub
mov
push
mov
mov
cmp
sbb
or
xor
lods
adc
jle
insl
push
les
jno
outsb
cli
call
test
out
shlb
pop
lret
push
loope
jecxz
adcb
sarb
jnp
into
jl
mov
lock
fld
leave
cltd
or
rcr
jge
icebp
jne
inc
jae
movsb
test
lods
pop
loope
ss
cltd
sbb
or
or
mov
inc
or
scas
adc
jno
jns
pop
stc
mov
mov
lret
xchg
push
cmp
ja
jl
jns
xchg
mov
sbb
mov
popa
andl
mov
or
stc
aaa
je
scas
jp
add
popf
cmpsl
dec
loop
out
add
fidivrl
adc
xchg
inc
pusha
mov
push
inc
rorb
dec
mov
es
dec
push
push
loope
movswl
in
mov
cli
mov
jp
adc
cmc
pushf
loopne
push
pushf
mov
inc
ja
push
sbb
inc
mov
dec
into
xor
jbe
lods
mov
mov
jecxz
inc
orb
cmp
jb
adc
aad
inc
lods
daa
xchg
mov
sahf
in
cwtl
pop
loopne
dec
or
jge
dec
sbb
sbb
pushf
mov
ret
jb
mov
sbb
add
dec
out
lea
adc
dec
jae
mov
sub
cmp
pop
ss
and
jmp
sub
fdiv
inc
cltd
mov
loop
lea
push
sub
cmovne
jb
jge
ficoml
xor
xchg
aas
dec
movsl
xchg
lcall
cmpb
lock
das
lahf
rclb
xlat
or
push
cmp
dec
inc
add
jle
enter
lcall
outsb
mov
cli
clc
mov
divb
rcll
out
push
testl
inc
mov
pushf
mov
cmp
jmp
mov
adc
out
cmp
mov
dec
sahf
mov
xchg
dec
xor
adc
loope
inc
in
lea
pop
cli
shr
cltd
adc
jbe
sub
icebp
mov
jbe
xchg
cmpsb
sahf
mov
mov
loopne
jae
test
mov
xchg
pop
std
and
enter
insb
lods
aaa
jb
add
jp
out
lahf
push
mov
or
les
fidivl
mov
dec
or
outsb
jno
roll
add
and
lret
sti
jle
jno
outsl
test
popf
fisttpll
sbb
subl
arpl
jmp
dec
pop
mov
push
sub
sbb
out
xor
jno
xor
jae
jmp
mov
test
sarl
xor
shlb
xor
xchg
mov
jnp
and
data16
or
cmp
pushl
pusha
pop
insb
shll
inc
test
cwtl
or
sti
pop
jb
fdivs
push
adc
bound
cmp
rcrb
jae
sti
and
imul
aaa
pop
into
lret
add
ss
and
pusha
int
cmpsl
lcall
inc
lods
nop
dec
ja
xchg
shll
inc
jnp
sub
sbb
iret
mov
repz
jnp
cmp
mov
stos
adc
cmc
aaa
std
cmpsb
sub
dec
sbbl
inc
add
mov
rorb
and
adc
pusha
jmp
addb
push
fsubrl
jp
xor
mov
out
stos
pushf
mov
loope
je
fsubl
mov
stos
movsb
lahf
mov
xlat
or
pusha
mov
dec
pop
pushf
add
xchg
add
dec
scas
xor
sub
push
stos
shll
push
cmp
dec
mov
ljmp
sbb
push
jle
cmp
repnz
jp
cmp
pop
cmp
cld
push
and
mov
mov
call
fdivrs
lea
jmp
ret
mov
xchg
or
xchg
jp
jmp
sbb
adc
or
in
ljmp
cmp
mov
xor
faddl
scas
int
jne
xchg
jle
cmpsl
in
push
cmc
pop
shl
iret
mov
xchg
mov
cmpsl
push
imulb
pop
fsubp
mov
jle
jecxz
out
cmc
out
push
dec
mov
fistl
inc
stos
in
ds
outsl
sub
inc
clc
lods
out
inc
dec
jle
jl
lods
mov
loope
mov
ret
cmp
aam
xlat
lret
sahf
clc
xchg
sub
cmpsl
outsl
sub
out
adc
add
scas
cwtl
and
mov
arpl
pop
xor
inc
dec
mov
fbld
test
pusha
adc
jecxz
imul
and
sbb
xchg
push
pop
xor
repz
inc
imul
xor
dec
fiadds
mov
pop
mov
out
loope
sbb
out
in
imul
pop
mov
testb
mov
into
aas
xchg
cmp
ret
mov
inc
imul
inc
fstpl
xchg
int3
inc
jns
fsubrs
mov
mov
mov
sub
sbb
push
pop
dec
push
pusha
rcrl
xchg
mov
push
jae
movsb
cmp
push
repz
sub
pop
xchg
imulb
inc
insl
jle
shrb
aam
sahf
daa
fs
movsb
in
in
into
repz
xchg
aad
andb
lods
or
xchg
cmp
xchg
xchg
adc
nop
add
movsb
std
loop
sbb
in
mov
sbb
adcl
aaa
test
aaa
jno
cmp
pop
pop
push
setae
add
stos
push
hlt
out
insl
fwait
xor
jg
jl
bound
and
mov
ja
stos
hlt
cmp
stc
push
in
arpl
sub
out
xchg
repnz
cltd
push
or
prefetcht1
pop
in
std
mov
clc
sbb
xchg
fiaddl
xor
aaa
jne
xchg
and
sub
sub
sub
das
mov
push
mov
add
inc
sahf
xor
xchg
test
sbbl
dec
andl
mov
stos
movsb
dec
dec
in
leave
aaa
or
add
int3
adc
xchg
ja
lahf
xchg
test
in
shlb
add
sub
xor
adc
jg
pop
in
push
leave
loop
dec
xchg
xor
lock
fisubrl
pop
aam
vphaddwd
cs
sub
in
inc
cld
stos
xorb
mov
jb
imul
sbb
lcall
jg
pop
push
inc
inc
sub
mov
cmp
sub
jno
add
mov
rol
out
lret
push
cmpsb
into
stos
rorl
push
inc
mov
call
mov
inc
daa
dec
in
sbb
adc
pushf
ss
dec
shl
addr16
pop
push
call
pop
or
dec
movsb
add
loope
fmull
mov
mov
aam
dec
aad
mov
or
shll
les
mov
cmp
add
data16
jno
fldcw
push
sbb
jp
fcompl
test
mov
sbb
add
pop
sub
pop
sub
addr16
push
cmp
icebp
shufps
sub
cmpsl
outsl
inc
xchg
mulb
xchg
test
xorl
and
mov
dec
xchg
dec
movsb
jmp
dec
repz
xor
lahf
adc
add
mov
outsl
push
in
xor
pushf
xor
fistps
jle
and
push
pop
mov
or
lahf
and
pop
scas
push
and
cmp
xchg
dec
sub
adc
add
insl
dec
mov
repz
and
add
cmpsl
xlat
mov
and
sbb
push
adc
mov
test
inc
cmpsl
hlt
daa
and
mov
mov
xor
leave
xor
push
rol
cmp
sub
add
mov
xchg
sbb
xorl
pop
aam
xchg
xchg
sub
lock
mov
mov
nop
outsb
or
mov
jno
arpl
out
stc
add
sbb
imul
pop
lock
test
pop
out
lret
push
jp
mov
aaa
lahf
daa
or
cld
mov
push
test
loop
mov
mov
loope
test
pop
push
pop
pusha
mov
inc
cmp
adc
insl
jb
fisttpl
subl
and
fidivrs
mov
sbb
or
out
sar
or
rcl
lods
mov
cmpsl
push
out
gs
pusha
xor
dec
jne
ljmp
xlat
outsb
gs
adc
xchg
push
repz
in
outsl
lea
inc
rorb
jne
cltd
pop
ss
test
mov
fbld
rolb
or
sub
repz
js
shll
dec
loop
rcl
jg
push
mov
dec
stc
das
sbb
aas
xchg
leave
xchg
pusha
fiadds
add
jecxz
adc
sbb
xor
shlb
ljmp
jg
dec
sti
cmp
pop
add
adc
or
mov
cmp
pop
add
mov
aas
sbb
push
xchg
hlt
sbb
call
push
data16
gs
enter
iret
sub
pop
pop
fldt
xchg
bound
aas
test
stc
mov
call
mul
mov
aaa
negl
add
sbb
sub
push
push
shl
test
js
hlt
sbb
arpl
in
scas
movsb
cmpsb
dec
hlt
outsl
cmp
sbb
cmpsl
outsb
dec
push
add
popfw
sub
data16
push
add
sbbl
lcall
xlat
jbe
cmp
test
cmpsb
and
lahf
inc
sbb
adc
mov
cli
sub
xchg
iret
insb
push
stos
lds
insb
fldl
in
in
dec
mov
pop
out
xchg
mov
add
sarl
sub
test
pop
loope
imul
dec
mov
lea
stos
cs
fcmovnbe
insl
or
test
or
mov
xchg
sub
imul
pop
int3
sub
add
add
ss
cmp
ds
inc
testl
icebp
or
inc
insb
fimuls
mov
repz
ja
jecxz
rcrl
add
lds
repz
push
pop
pop
dec
sbb
add
sarl
inc
mov
popa
icebp
sbb
cwtl
pusha
test
push
jg
mov
pop
add
fldcw
inc
xchg
inc
mov
hlt
aaa
js
je
or
pop
in
ja
push
xor
fistpll
jp
lahf
dec
fwait
movsb
xchg
out
dec
loope
nop
lret
mov
add
mov
add
insb
call
jmp
aam
mov
mov
push
daa
sbb
push
pop
data16
pop
jge
or
loop
out
sbb
inc
lock
nop
dec
in
mov
jne
adc
jle
and
ljmp
orl
sub
inc
mov
rclb
jae
mov
repnz
jnp
addr16
pushf
adcb
sub
cli
adc
pop
add
ja
dec
push
inc
fs
and
out
mov
adc
jl
jae
loopne
test
mov
xor
sub
hlt
pop
mov
jnp
fidivrs
enter
inc
xchg
clc
mov
xchg
push
roll
inc
repz
jbe
test
xchg
cmp
and
pop
jle
mov
popf
arpl
movsb
cmp
lcall
cmp
fwait
mov
lds
das
xchg
mov
movsb
popf
xorl
dec
enter
sub
into
test
sub
jg
pop
inc
mov
loop
ret
xchg
fmuls
pop
movsl
lahf
add
mov
jp
jecxz
fcomp
addl
mov
adc
int
inc
dec
push
es
add
dec
aaa
or
repnz
mov
pop
jg
cwtl
lea
int
lock
fwait
xor
enter
rolb
and
ficompl
jecxz
dec
daa
test
or
mov
push
outsb
les
jo
incl
shll
pop
addr16
test
pop
lret
rclb
mov
lcall
pop
popa
push
imulb
mov
imull
scas
add
jmp
pop
in
mov
jnp
clc
pop
push
sahf
ret
mov
je
mov
mov
lcall
nop
mov
jb
std
test
dec
sub
les
icebp
sub
adc
arpl
mov
ret
dec
pop
jle
xor
fs
jge
push
add
mov
sub
mov
lret
mov
stc
sbb
sub
fwait
jbe
rorb
cmpsl
sbb
pop
pop
adc
outsb
adc
andb
test
stc
gs
jl
minps
adc
rclb
mov
and
sub
sub
rcll
and
inc
lret
and
or
insb
fst
scas
out
dec
lock
mov
sub
insl
popa
pop
sub
ja
xchg
inc
testl
push
into
adc
in
push
sbb
pop
imulb
arpl
adc
lret
mov
lret
jle
sbb
out
push
imul
mov
movsl
js
push
push
sbbb
bound
lahf
lods
xor
add
aaa
cmpsl
add
pop
add
jne
mov
dec
notl
pop
pop
dec
adcb
mov
cwtl
push
adc
xchg
frstor
lock
sub
adc
mov
sub
jmp
imul
arpl
sub
push
out
in
mov
pop
jbe
add
mov
mov
cmp
stos
fsubrl
cmc
bound
push
xchg
jmp
mov
add
cmp
pop
daa
mov
std
test
shlb
imul
mov
stc
pop
cmc
mov
adc
pushf
test
sbb
add
xchg
cmp
jbe
push
mov
repnz
and
jp
fdivrs
popf
dec
dec
nop
rcr
popf
adc
xor
mov
mov
arpl
into
mov
xchg
aaa
xchg
xchg
stos
std
adc
scas
sub
mov
sbb
mov
add
pop
add
xor
add
jmp
rorl
cmp
lahf
mov
mov
addl
lret
in
repnz
or
cmpsb
cmp
sbb
std
cmp
insb
loope
add
lret
adc
pop
mov
daa
repz
mov
ja
in
cmc
insb
out
test
lret
jae
or
leave
adc
testb
test
divb
into
daa
inc
fildl
in
push
sahf
lcall
xchg
test
sub
loopne
xor
inc
lods
mov
dec
js
aam
sub
xchg
jp
sbb
lahf
testb
push
mov
decb
xchg
popa
pop
stos
jg
adc
mov
mov
roll
mov
fdivrp
iret
mov
aaa
arpl
mov
and
adc
jecxz
scas
ljmp
sub
inc
jp
cmp
imul
add
mov
test
pop
lret
push
mov
stos
sub
ret
and
lahf
rcll
insl
cmpsb
push
sub
add
insb
or
in
push
out
add
xchg
jecxz
fnstenv
xor
mov
enter
jmp
pop
push
push
mov
xor
negb
int3
jp
sub
mov
pop
ss
mov
mov
push
adcb
shrb
popf
jp
out
mov
mov
cmpsb
aam
in
push
inc
jecxz
hlt
push
adc
stos
cmp
push
push
gs
push
or
jge
dec
frstor
jbe
or
xchg
ds
into
cmp
push
adc
icebp
dec
out
icebp
repz
les
subb
ds
xor
cmc
xor
add
or
or
fnstenv
imul
adcb
and
in
lret
lock
insb
mov
add
sub
data16
jbe
inc
or
in
or
loope
xor
mov
pop
inc
test
mov
add
and
stos
jecxz
cmpsb
cmp
sub
popa
xor
aaa
mov
fsubp
xchg
lods
sub
inc
fisttpll
xchg
aas
sti
mov
out
cmp
movsb
xchg
pushf
movsb
movsl
adc
lahf
dec
adc
sub
sub
sbb
sti
lock
in
add
test
psubusb
xchg
arpl
jne
mov
test
add
pop
test
sub
fcomps
push
out
jl
aaa
inc
gs
nop
rcll
cmp
or
repnz
inc
stos
mov
sub
xor
push
fwait
clc
inc
rcr
mov
lret
adc
jbe
cwtl
imul
or
andl
jae
call
aad
mov
inc
dec
cmp
jb
mov
or
jg
jns
ljmp
push
mov
push
jp
lret
popf
jmp
icebp
ret
xor
push
fstpt
xor
cltd
inc
xchg
test
ja
xor
adc
mov
daa
icebp
push
dec
sbb
sbb
pop
loop
loopne
sbb
mov
sbb
out
ficoml
sub
clc
mov
push
mov
pop
mov
cmp
and
mov
and
jmp
jne
pop
scas
stc
inc
xchg
push
cmp
stos
mov
out
notb
test
adc
pop
xor
out
daa
xchg
popa
mov
dec
adc
insb
dec
test
jne
cmp
inc
xor
push
sub
and
clc
mov
cmp
cmp
inc
stos
xchg
mov
push
fcomi
orl
cltd
sub
xchg
loope
mov
daa
push
in
or
inc
and
cwtl
add
jg
gs
xor
daa
jge
or
push
add
mov
push
cmp
andl
pop
or
dec
icebp
mov
int
pop
call
jae
cli
hlt
outsb
or
test
outsl
push
pop
sub
add
shrl
dec
in
std
adc
mov
out
pushw
shrb
add
repnz
xor
cwtl
js
test
xor
ja
pop
inc
mov
lret
loop
jg
cs
mov
push
mov
jmp
inc
sahf
int
mov
imul
add
xchg
dec
xor
jecxz
dec
outsl
mov
and
and
fwait
add
cmpsl
scas
fdivrl
jne
cmp
adc
push
jl
xadd
pop
ds
aam
dec
cmp
mov
mov
jl
jne
enter
mov
in
insl
and
xchg
mov
scas
stos
cwtl
mov
filds
ret
stos
mov
fisubs
icebp
bound
mov
xor
dec
push
popf
inc
and
jo
bound
std
pop
and
into
fsin
ja
xchg
mov
in
pop
mov
orl
push
out
rclb
pop
mov
sbb
fdivr
sbb
or
aam
hlt
and
shlb
push
push
dec
xor
outsb
nop
je
les
fcmovnbe
icebp
enter
daa
loop
imul
dec
adcl
sub
sub
mov
das
les
leave
daa
push
push
and
loope
add
cwtl
outsl
ret
mov
out
cmp
cmpsl
in
lret
outsl
jne
push
repnz
jo
lret
lcall
pop
lret
xor
pusha
pop
sub
jnp
insb
mov
mov
add
push
pop
sbb
stc
cli
adc
aad
xchg
call
jae
lcall
mov
or
sarb
sbb
cmp
xor
mov
or
popa
mov
cmc
in
rclb
addr16
inc
movsb
aad
ja
addr16
je
repnz
dec
test
lea
cltd
mov
jo
shll
mov
pop
sti
mov
aad
imul
mov
mov
dec
lcall
inc
in
sub
popf
ds
sbb
popf
out
inc
mov
cmp
push
mov
and
int
or
xor
or
push
ds
adc
dec
movsb
mov
dec
jno
lea
pop
adc
into
dec
cmp
faddl
xchg
sub
out
push
jne
pop
ljmp
adc
fs
hlt
mov
insl
scas
ds
and
negl
mov
inc
mov
sbb
xchg
lret
aam
dec
dec
jo
icebp
and
xorl
mov
leave
dec
leave
arpl
lret
xchg
loope
mov
sahf
jns
push
mov
lds
jne
lds
xor
popa
xchg
aaa
sub
mov
xchg
sub
mov
pop
arpl
push
jno
cwtl
adc
cltd
dec
adc
xor
pop
and
xchg
mov
iret
sub
xchg
pop
aad
mov
jbe
dec
jae
ret
add
dec
fwait
aaa
rclb
mov
push
jg
sub
mov
inc
mov
jne
xchg
adc
popf
mov
mov
push
xchg
std
stc
or
pop
aas
mov
inc
pop
cmp
and
mov
sbbl
inc
repnz
int
cmp
rcr
push
leave
or
xor
lcall
lea
inc
dec
shrb
ljmp
iret
pushf
fucom
fisubrl
stc
in
loope
adc
test
pop
add
pusha
cmp
and
in
lods
sahf
outsb
adc
mov
jne
mov
push
test
scas
jge
mov
pop
and
or
jg
dec
adcl
adc
popf
mov
mov
lds
nop
pop
pop
dec
cli
dec
add
xchg
pop
jmp
and
push
pop
addb
jo
test
push
push
or
adc
lock
aas
outsl
mov
add
lcall
addr16
aam
push
pop
bnd
mov
pushf
adc
aad
push
add
jbe
or
ficompl
mov
sub
icebp
div
cmp
data16
stc
pop
cmp
mov
cmp
aaa
sub
xchg
mov
xchg
inc
push
pop
mov
mov
inc
add
call
or
and
pop
fisubs
push
xchg
js
mov
flds
xor
xor
push
adc
fbld
mov
xchg
das
xor
jbe
jp,pn
sub
ret
mov
push
cs
scas
insb
lods
dec
std
xor
mov
mov
je
ret
js
out
xlat
jnp
xchg
mov
mov
push
mov
mov
push
pop
mov
lods
movnti
mov
jae
cmp
ja
sti
incb
push
imull
push
in
jne
adc
sbb
jl
xor
leave
scas
add
or
sub
fdivrl
js
or
xor
mov
push
xchg
dec
sub
sbb
cli
push
lods
sbb
xchg
xor
fbld
lahf
and
pop
pop
into
or
es
or
add
clc
xor
loope
hlt
jecxz
xchg
push
pop
adc
out
jmp
sar
sti
push
mov
cmpsl
mov
sub
out
mov
in
sub
or
sti
cmp
xor
lret
or
pop
std
dec
js
fsub
gs
std
push
adc
fwait
sbb
test
mov
daa
insl
dec
aad
or
testb
adc
dec
subl
sbb
rol
mov
sub
cmpl
fldenv
inc
add
lret
sbb
xlat
dec
push
xchg
dec
lret
lahf
mov
or
fwait
loopne
mov
mov
sub
lods
aaa
iret
shr
add
gs
inc
rorb
or
movsl
dec
xchg
adc
sub
mov
push
loope
push
pop
adc
pop
jne
mov
mov
movsb
mov
or
sbb
xchg
mov
fiaddl
and
xor
adc
dec
adc
xlat
pop
pop
pop
dec
imul
add
repnz
mov
in
lahf
lcall
nop
idivb
mov
add
inc
int
push
leave
in
or
and
lret
mov
out
adc
jmp
orl
popa
adc
and
je
rolb
test
push
mov
call
sub
mov
push
push
lods
dec
dec
mov
xor
ret
xchg
ss
pop
aas
adc
xchg
mov
cld
out
push
mov
sahf
movsb
adc
popf
xlat
ret
or
pusha
dec
dec
xor
je
pop
cmpsl
imul
xchg
fsubs
mov
iret
dec
xor
mov
enter
cld
test
mov
out
ret
dec
mov
mov
sti
push
mov
push
inc
jae
ret
data16
or
repz
aad
call
push
enter
jl
or
dec
sub
fs
mov
icebp
pop
push
mov
push
cltd
lds
aam
ss
cmp
mov
sbb
and
cmp
xchg
ljmp
std
andl
and
ja
add
mov
test
xchg
decb
fstps
fidivrs
repz
clc
test
xchg
jbe
pop
ljmp
jnp
out
sbb
movb
out
lock
cmp
ss
inc
pop
cmc
pop
stc
popf
test
pop
jp
pop
pop
push
and
mov
es
push
xor
andl
mov
test
mov
xor
xor
or
pop
sub
fdivrl
stos
rorb
mov
sub
sbb
xchg
aam
pop
cmp
jmp
cmc
dec
leave
pop
out
xchg
clc
cmp
int
xchg
aad
push
sbb
mov
out
cmpsb
or
subl
xor
jae
inc
mov
mov
mov
cld
lret
pop
outsb
and
js
dec
adc
sub
insl
adc
xor
popa
das
jge
or
cmc
in
push
xchg
imull
inc
fdivrs
mov
sub
add
es
addl
aad
aad
xor
popf
xchg
mov
pop
inc
es
ud1
inc
inc
pop
xor
pushf
lea
mov
pop
shl
or
clc
mov
or
sbb
jns
stc
mov
insb
or
lock
jae
in
push
shrb
shlb
inc
or
jp
lcall
adcl
sbb
lea
push
pop
and
mov
inc
ja
push
sub
sti
ret
outsl
pop
outsb
stc
stc
mov
mov
push
or
mov
cs
cld
lahf
dec
ret
xchg
icebp
mov
sarb
in
mov
dec
fwait
pop
cmp
cmp
push
stc
jae
or
popa
xor
cmpsb
std
divb
add
sarb
fsubrl
jle
pushf
test
ss
and
jmp
xchg
in
fidivrl
inc
mov
repnz
ss
jmp
mov
xchg
stos
mov
and
fstpl
cmp
bound
inc
jl
ds
mov
lock
stos
xor
stos
aam
lock
scas
sti
movsb
sbb
mov
cmp
stos
xor
cld
pop
or
cli
scas
sarb
addb
aaa
mov
xor
fimuls
and
push
ss
test
call
mov
adcb
mov
insl
cmc
xchg
adc
test
mov
leave
out
mov
mov
aaa
lea
mov
leave
adc
dec
fildll
int
mov
loop
xor
lds
lgs
add
ljmp
scas
bound
inc
mov
mov
xrelease
xchg
mov
inc
or
mov
add
rolb
xchg
push
inc
inc
xor
rcr
enter
out
fisttpll
xchg
outsb
jle
adc
fdivl
xor
insb
mov
test
stos
daa
cli
pop
fdivrl
ja
aas
in
xor
aaa
pop
and
lea
fidivs
jo
ljmp
out
mov
mov
cmp
into
stos
xchg
pop
rorl
lods
out
adc
scas
aaa
adc
sub
pop
or
inc
cmpsb
push
nop
je
mov
roll
sbb
jp
mov
aas
outsb
ret
mov
enter
push
push
pop
inc
cmp
sahf
xchg
lea
fiaddl
push
insl
das
push
or
inc
push
movups
inc
xchg
or
shrl
pushf
and
xor
leave
push
xor
in
out
dec
push
mov
ja
lret
js
mov
leave
mov
pop
dec
or
lret
lea
mov
mov
adc
cs
leave
inc
xor
clc
jp
xor
pop
sbb
stc
sbb
jae
add
pop
or
cmpsb
roll
stos
mov
dec
sub
or
dec
and
xchg
pop
nop
notb
pop
into
imul
lock
mov
pop
xchg
cmpl
mov
sbb
adc
shlb
jo
in
sbb
xchg
je
mov
mov
or
pop
dec
ud0
xchg
repnz
xor
jmp
data16
mov
push
jne
cmp
push
je
push
jecxz
scas
ljmp
push
cltd
or
cmp
loope
mov
xchg
movsb
decl
xor
jae
imull
sbb
sub
imul
sbb
inc
in
push
subb
dec
lcall
das
ljmp
add
push
and
das
stc
inc
bound
sub
push
inc
test
xor
cmpsb
sbb
movsb
push
jle
icebp
dec
insl
test
xchg
xchg
pop
mov
adc
lods
cmp
mov
les
repnz
mov
jp
and
imul
sub
mov
in
addr16
inc
mov
add
or
sub
jno
pushf
mov
adc
xchg
cmp
sub
loopne
xchg
in
hlt
fsubs
in
fwait
lgs
aad
dec
add
pop
outsb
cmp
aad
testl
sbb
push
out
mov
xchg
jmp
inc
lcall
clc
repz
into
adc
mov
stos
xchg
cmc
xchg
or
add
fs
mov
cmp
or
out
sbb
push
scas
inc
jge
iret
mov
sti
lods
jns
mov
cld
cmp
stos
lods
cmpsb
mov
mov
lret
cmc
inc
pop
addr16
sysexit
in
sbb
and
push
fsubs
sbb
cli
out
frstor
ds
insb
imul
movb
inc
sbbb
imul
xchg
mov
cmp
cmp
pop
jecxz
xor
aam
mov
inc
mov
insl
mov
pop
pop
sub
add
out
pushf
add
lret
negb
loope
jno
aaa
icebp
mov
ja
sbb
mov
loop
push
cwtl
cs
mov
cs
ja
add
loop
pop
je
cltd
lock
ljmp
or
sbb
sbb
adc
push
rorl
in
or
rorb
sub
cmp
in
add
sbb
sub
je
push
pop
mov
and
xchg
insb
ds
sti
mov
jle
dec
mov
ds
and
ret
jne
data16
nop
std
mov
or
insl
pop
pop
lea
push
fimull
je
mov
shr
jl
sbb
movsl
pop
inc
adcb
push
or
sub
jb
int
mov
aam
xchg
iret
xchg
leave
cs
push
or
pushf
sbb
mov
cmc
lock
xchg
inc
ret
popa
sbb
and
push
sbb
mov
ret
stos
nop
push
popf
xchg
loop
jo
push
inc
decb
pusha
les
xor
test
push
enter
nop
mul
dec
mov
rcl
dec
mov
sub
mov
loopne
pushf
pushf
lds
push
arpl
mov
lcall
xorl
xchg
jl
in
insl
stos
inc
cltd
sub
sbb
cmpsb
adc
out
mov
loop
loop
in
repz
push
ss
in
stos
lret
xchg
mov
das
cmpsb
stc
pop
lea
mov
and
cmp
into
fimull
enter
into
pop
adc
fidivrl
jmp
mov
push
add
adc
push
ds
in
addl
dec
loop
xchg
lcall
inc
add
out
ja
gs
pop
mov
pusha
sbb
mov
lret
rclb
lods
add
ja
sub
inc
cmp
dec
sbb
pop
les
jp
push
xlat
lea
sarb
pop
adcb
and
rolb
test
inc
stc
test
shlb
daa
ret
sub
sbb
xchg
jmp
cmp
rorl
mov
xor
out
lds
mov
stos
fldl2t
rclb
mov
cld
push
mov
or
inc
push
cltd
stos
sbb
jae
arpl
loop
jge
jle
test
std
scas
pop
sarl
rcr
in
mov
enter
cld
ss
aam
mov
test
dec
and
mull
mov
popf
push
jge
add
lods
jno
mov
xchg
jge
loope
push
nop
pop
sbb
jg
and
ret
jbe
js
rorb
sbb
inc
ds
gs
popa
in
icebp
in
adc
jne
mov
push
out
sbb
ficompl
dec
cmc
pop
sbb
sbb
cltd
jb
rcrb
fsubl
xor
jecxz
xor
xchg
inc
sarb
xor
xor
add
dec
hlt
negb
inc
cmp
in
inc
jbe
sub
mov
add
fnstcw
in
test
xor
ja
xchg
sub
out
pushf
out
ret
gs
push
dec
xchg
insb
push
push
aaa
push
enter
and
test
and
adc
lock
jne
sbb
stos
add
movsl
fisubrs
pop
adc
pop
xorl
test
dec
and
aaa
movsl
out
je
lea
movhps
and
sbb
push
std
out
daa
xor
ss
mov
xorb
fstp
rorl
mov
fwait
mov
xor
inc
pop
mov
test
dec
inc
xor
mov
add
out
push
xchg
xchg
add
mov
adc
cld
dec
pop
xchg
lock
jmp
shll
mov
dec
subb
les
stos
xchg
jno
xor
adc
repz
dec
icebp
shll
xchg
hlt
push
adc
pop
pop
lcall
add
jne
xor
push
hlt
pop
das
mov
shll
cmp
test
cli
push
ret
or
cmpsb
lods
aas
mov
lret
rolb
push
cmc
push
rclb
lahf
cld
fnstcw
mov
adc
mov
out
int
xchg
xor
xor
orl
xor
add
xchg
mov
push
inc
or
lahf
cmpsl
push
xor
inc
outsl
in
jb
and
cmp
add
lea
leave
pop
or
das
into
push
add
pop
adc
cmp
test
cmpsl
lret
rolb
push
lods
mov
out
mov
jle
lods
pop
mov
mov
pop
dec
lret
cmpsb
add
fidivrl
les
scas
sar
pop
inc
and
scas
or
jp
mov
adc
shrl
orb
adc
xchg
adc
lret
test
ret
xchg
xchg
mov
adc
out
imul
out
aaa
mov
iret
xor
inc
imul
push
das
xor
sahf
test
xchg
dec
mov
movsb
pusha
aaa
add
inc
fnstsw
xchg
dec
out
shll
dec
pusha
scas
pop
mov
pusha
cmp
out
stc
sub
int
int3
imul
loop
into
mov
lods
shl
xor
mov
mov
pop
jb
jge
gs
pop
push
mov
rcll
outsb
cld
jbe
and
popa
js
aas
loop
pusha
fsincos
inc
and
lods
xchg
test
out
aas
outsl
daa
adc
ja
mov
mov
shlb
mov
ljmp
sub
and
jle
pushf
js
mov
jnp
push
mov
data16
fstl
std
sbb
jo
pop
mov
jne
mov
lret
jno
cs
jecxz
addb
or
dec
aaa
inc
sub
shll
imul
jg
pop
mov
int
jne
ret
into
and
test
pushf
std
imull
push
or
inc
add
xchg
or
iret
adc
push
push
xor
je
pop
hlt
lds
dec
stos
pop
xor
pop
shr
and
push
mov
out
aas
dec
pusha
inc
xor
jmp
in
cmpsl
rcr
mov
lds
dec
mov
sarb
inc
push
dec
sub
cmp
jnp
inc
add
ljmp
stos
mov
je
pop
lock
movaps
aaa
imul
add
or
cld
shl
and
add
inc
adc
jmp
gs
addl
sahf
fs
in
addb
mov
xchg
push
dec
pop
or
dec
fldcw
cmp
push
ficoms
adc
push
out
jecxz
clc
inc
mov
jne
push
cwtl
mov
xor
or
int3
test
rcr
inc
leave
clc
and
adc
movsb
fld
movsb
gs
cmp
jge
repnz
mov
mov
jge
cli
adc
jmp
push
hlt
and
sbb
and
ret
in
and
out
push
jmp
scas
movsl
cwtl
xor
jmp
push
sbb
lahf
sub
xchg
lret
xchg
mov
cwtl
jle
cld
out
xchg
inc
inc
dec
xchg
in
dec
ss
test
push
dec
xlat
iret
push
dec
inc
jns
cmp
mov
add
das
sub
push
into
roll
rorb
scas
and
add
jg
cmp
xchg
test
dec
sbb
jmp
and
add
dec
test
movsl
pusha
jae
mov
sti
push
stc
adc
xchg
xor
loope
xchg
ss
rol
jg
push
das
pop
addl
inc
jg
je
xchg
jbe
test
pop
inc
aad
repnz
pushf
roll
shlb
jmp
out
in
adc
push
test
mov
inc
inc
push
scas
or
clc
sbb
jecxz
jge
mov
out
jg
adc
fdiv
sub
fsubr
mov
fiaddl
push
sub
xor
xor
pop
pop
pop
adc
rorb
insb
imul
int3
jne
je
xor
xchg
pop
adc
push
mov
mov
pmaddwd
dec
call
hlt
fstpt
ret
imul
sbb
dec
push
cmp
scas
push
pushf
push
fisttpll
pop
rcl
data16
adc
jo
jns
xchg
cwtl
lock
sti
jno
jle
mov
or
inc
dec
bound
fwait
push
cmc
lea
adc
repz
movsl
mov
fildl
inc
pop
add
and
inc
or
lcall
imul
cmp
frstor
jnp
test
jbe
sbb
xor
or
imul
movsb
inc
test
xor
jmp
pop
cmp
cmpl
sar
inc
arpl
mov
sub
cmp
xor
mov
cmpb
xchg
cmc
jmp
lods
aas
inc
add
lods
addl
jmp
cld
add
andb
imul
adc
push
outsl
imul
mov
sub
jl
lret
mov
add
cmpb
dec
out
decb
pop
adc
lods
push
dec
push
pop
cmpsl
inc
adc
shrl
or
pop
pop
inc
mov
lret
push
fidivrl
outsl
fadds
call
and
in
stos
ror
std
mov
adc
push
sub
xchg
mov
sbb
loop
push
pop
aad
push
test
jg
jno
sbb
xor
into
pop
xchg
jge
pop
mov
xor
imul
in
mov
xchg
adcl
jns
hlt
or
mov
in
push
cs
fmul
inc
mov
add
or
shrb
loopne
or
leave
shrl
jp
jg
pop
mov
inc
lcall
mov
cmp
shl
out
jg
sbb
in
or
bound
add
mov
shll
je
mov
xchg
outsl
xchg
jge
push
aaa
cmp
dec
lods
test
dec
push
pop
mov
xor
push
sbb
dec
add
jg
ds
negl
lea
push
aad
and
push
test
adc
pop
inc
je
mov
mov
in
push
xor
mov
add
outsb
ret
ljmp
push
adc
sub
ret
or
out
ds
out
sbb
inc
ret
jge
mov
fninit
in
sbb
into
jle
mov
xlat
jo
jb
and
dec
lahf
movsl
xor
or
or
mov
ljmp
jo
pop
jl
jmp
cmp
and
lds
sahf
xor
cmc
in
aaa
jle,pn
daa
lret
stc
pushf
xor
dec
out
dec
push
fidivs
in
leave
pusha
inc
in
aas
fistps
cld
push
fdivs
test
rcrl
jnp
jmp
mov
cmpsb
sti
add
sub
mov
or
mov
popf
push
inc
pop
outsb
push
pop
jmp
xor
lret
mov
dec
and
lcall
sub
pop
jge
or
ja
lret
add
mov
js
jmp
cmp
adc
or
push
popf
int
adc
sub
aam
jl
loope
cltd
inc
inc
js
push
cmp
imul
outsb
xlat
fldl
push
or
or
pop
fwait
test
insb
repnz
cmc
jle
jle
adc
daa
stc
sub
daa
jmp
inc
out
mov
add
dec
adc
inc
pop
icebp
inc
repnz
pop
in
mov
dec
divl
arpl
sub
fstpt
nop
jle
mov
add
and
int3
outsb
inc
mov
pop
inc
sti
xchg
cmpsb
inc
mov
add
lods
int
rcrb
sub
push
and
inc
sub
imul
loop
pop
frstor
mov
sub
outsb
dec
movsl
sub
aam
pop
mov
xchg
out
sub
cmp
dec
ret
or
xchg
jae
sbb
je
jb
pop
pop
into
data16
jbe
stos
mov
dec
add
jbe
adc
jmp
jecxz
and
pop
jo
lock
pusha
inc
lods
mov
ds
lock
sbb
add
mov
insl
push
out
outsl
jg
mov
sbb
jno
pop
inc
icebp
aam
mov
leave
fldt
repnz
push
in
mov
mov
dec
pop
jmp
addr16
dec
add
xorb
cmpsl
repz
dec
xchg
cwtl
les
xor
rdtsc
testb
mov
outsl
jb
adc
orb
or
negb
lret
in
cld
mov
enter
outsb
clc
mov
in
jne
pop
lcall
popa
xor
cmpsl
jae
in
into
call
andb
jmp
popf
adc
icebp
mov
inc
and
ss
das
jno
pop
fucomip
in
inc
mov
cmp
xor
stc
lea
jns
cmpsb
ljmp
mov
imul
and
loope
dec
push
sub
mov
fnsave
dec
xorb
std
fdivrl
push
push
sarb
addl
adc
jge
jns
sbb
cld
pop
mov
bound
test
movl
adc
cli
pop
mov
mov
nop
shl
into
xchg
add
mov
push
loopne
pop
cmp
addr16
pop
push
cmp
lahf
sbb
mov
mov
cwtl
test
add
repz
lea
shll
sub
cmc
shlb
outsl
and
pop
inc
div
cmc
add
add
imul
adc
inc
xchg
xchg
mov
iret
push
clc
mov
sub
clc
jns
inc
imul
frstor
pushf
adc
push
mov
lcall
iret
jne
cmp
lahf
stos
xchg
mov
cs
js
pop
sbb
jl
lods
mov
aad
les
ficoml
and
les
inc
pop
int3
scas
loop
js
mov
dec
dec
xchg
mov
sub
jge
adc
call
dec
cmp
pop
jge
xor
insb
jo
fs
pop
push
lods
or
cs
adc
mov
cmpsl
add
pop
sub
int3
insb
cltd
arpl
out
or
ljmp
pop
rolb
inc
rcrl
and
in
bound
inc
pop
jmp
insl
jns
xorl
add
loop
orb
mov
pop
pop
pop
inc
pushf
sub
out
jecxz
popa
mov
mulb
xchg
lahf
test
imul
leave
in
insl
adc
iret
nop
jecxz
js
loope
mov
dec
sbb
inc
aas
cmp
jg
xor
dec
in
push
sahf
mov
movsb
pop
repz
addr16
mov
push
int3
adc
dec
iret
push
lds
pop
push
dec
aaa
and
pop
xor
mov
popf
in
shlb
je
jne
inc
add
add
sti
xlat
insl
xchg
pop
sarl
adc
xchg
xchg
and
sub
hlt
jmp
jno
and
or
lret
xor
gs
aas
fisttps
loop
in
adc
loopne
nopl
pop
adc
push
lods
adc
es
mov
jb
popl
push
push
jg
add
lret
xchg
cmp
lea
fldt
fadds
mov
pop
and
and
cmp
lea
in
lods
inc
inc
and
dec
das
pop
nop
push
fldl
or
lahf
sbb
test
paddsb
rolb
or
out
mov
aas
push
dec
sub
out
sub
inc
cmp
ss
inc
outsb
adc
stc
pop
stos
push
inc
in
movsl
sahf
ja
push
mov
icebp
inc
jle,pn
adc
lret
outsb
cmp
hlt
inc
add
push
xchg
adc
mov
movsb
inc
push
movsb
lret
pop
pop
popa
jne
push
ret
lret
sub
in
or
mov
iret
lock
imul
cmp
in
lret
shl
mov
jl
mov
notb
ds
adc
aad
mov
xor
aaa
adc
cld
pop
pop
cmp
cmpl
aaa
adc
xlat
add
jnp
stos
sub
inc
lret
xchg
fsts
cmp
pop
push
sbb
jne
xchg
test
js
mov
lahf
out
or
mov
xchg
sarl
inc
aam
adc
mov
test
cmp
xlat
sub
fldenv
gs
sbb
adc
sbb
stos
lds
js
pop
outsl
mov
scas
sub
pop
stos
daa
adc
mov
jae
push
nop
int3
mov
cmp
insb
int3
xchg
inc
jno
xchg
mov
jo
sub
mov
popf
out
xor
je
ja
xlat
push
or
shl
es
jbe
inc
les
div
outsl
and
sub
xor
xor
sbb
int3
add
int3
icebp
idiv
mov
mov
outsl
lea
dec
mov
pushf
jbe
push
fsubs
inc
mov
and
mov
or
dec
push
adc
jg
cmp
add
adc
out
xchg
stos
das
or
jbe
sbb
adc
mov
in
push
cmp
in
in
jge
pop
xor
loop
iret
in
test
or
add
cs
in
cmpsl
or
jecxz
dec
ja
push
mov
ljmp
test
sahf
lods
scas
test
xor
sbb
mov
adc
fnstsw
pop
aam
pop
dec
mov
out
jb
fimull
arpl
int3
inc
test
ret
lcall
push
das
cmpxchg
add
dec
inc
insl
xchg
sub
add
mov
stos
sbb
or
imul
and
fld
in
test
test
push
sub
inc
inc
push
lds
push
pop
fwait
dec
jns
aaa
repz
xor
mov
in
in
out
xchg
jmp
sub
loop
insb
inc
icebp
adc
pushf
stos
rcrb
iret
cmp
clc
adc
add
gs
jns
adc
cwtl
pop
dec
les
mov
filds
in
and
inc
push
and
pop
pop
add
int
inc
inc
leave
mov
sti
lods
lret
xor
out
das
imul
dec
movsl
adc
sahf
xor
cmp
jge
dec
mov
dec
popa
mov
testb
loop
mov
sub
stc
or
adc
mov
movl
fdivs
ret
rorb
add
ret
mov
push
out
loop
pop
xor
or
int3
lods
push
lods
adc
popa
test
mov
mov
repz
cmp
iret
inc
mov
sti
negb
pop
or
and
mov
jmp
xchg
cs
clc
andb
rolb
js
or
iret
movsl
jns
je
mov
ds
inc
and
aam
sti
jl
lods
call
int3
out
cmp
loopne
mov
pop
ret
stos
aad
scas
mov
lods
mov
mov
mov
mov
push
xchg
cmp
adc
addr16
sub
fmuls
dec
fidivrs
cmpsl
cld
dec
add
bound
mov
xor
sbb
jb
push
add
mov
add
cmp
mov
fldenv
movb
adc
mov
jnp
pop
movsb
or
jge
push
dec
bnd
fmul
test
push
dec
dec
cs
sahf
adc
sub
dec
push
mov
cmpsl
adc
add
adc
cmp
sub
sbb
cmp
cmp
or
mov
jae
cmp
aam
insb
outsl
loopne
out
add
imul
xchg
int
movsb
cmp
mov
jo
mov
jo
sti
sbb
jne
in
xchg
popf
repz
test
mov
push
cwtl
xchg
inc
sahf
pop
adc
jmp
mov
sti
sub
xchg
leave
push
out
cmovs
cmp
sub
std
sbb
mov
or
push
add
xchg
push
scas
stos
mov
sbb
mov
mov
andl
jge
ss
mov
pop
mov
in
scas
mov
xchg
push
sti
lret
cmp
out
xchg
pushf
sbb
push
cld
dec
aam
mov
out
lods
sbbb
push
jecxz
pop
cmp
hlt
adc
aad
sub
jmp
mov
xchg
xchg
cmp
fcmovb
out
insl
or
fmuls
out
cmp
int
ds
add
lds
dec
loop
inc
add
pop
xchg
push
sti
ret
xchg
fimull
enter
pop
xlat
andb
lret
mov
dec
inc
inc
jns
fcompp
enter
xchg
ss
sub
scas
pop
gs
cmp
jbe
in
xlat
scas
movsb
dec
filds
je
dec
jmp
mov
sub
loopne
xchg
push
xchg
clc
ss
mov
sbb
test
popa
loope
arpl
insb
ja
pop
push
adc
dec
cld
fs
xchg
popa
add
roll
lock
sub
jle
adcl
jge
jae
into
sbb
sbbl
adc
lcall
pop
imul
shld
pop
scas
and
push
test
mov
pop
mov
and
test
mov
inc
fcompl
pop
sbb
pop
out
bound
int3
repz
add
aad
outsb
sbb
lahf
jbe
xchg
int
aas
jae
inc
push
add
outsb
lods
loop
xchg
and
sub
add
push
aaa
repnz
push
xchg
sbb
daa
mov
push
push
popf
jnp
jb
std
mov
ret
andb
jns
dec
sti
stos
add
leave
xchg
cmpsl
cltd
sub
xlat
sub
ficompl
pushf
cmp
mov
jp
mov
jg
push
aas
xor
sub
ret
icebp
fwait
sbb
cmp
sbb
pop
imul
es
and
popf
loopne
mov
cmc
cmp
cli
mov
mov
loope
jg
sub
dec
cli
xchg
sub
sbb
mov
daa
push
mov
and
and
ljmp
jge
pushf
stos
mov
roll
movsl
pop
and
xor
push
mov
push
jl
jnp
lcall
push
mov
xor
aad
cmp
lds
push
ljmp
ror
xchg
fcoms
fisubl
cmp
popf
mov
bnd
dec
in
dec
daa
xor
adc
ficoml
je
fldt
sub
ja
std
add
ret
cmp
push
shlb
in
mov
mov
xchg
orb
rorl
pop
in
xor
add
imul
pop
sub
sub
clc
ja
pushf
fdivrl
push
mov
shrb
xchg
iret
add
jecxz
xchg
cmp
mov
push
and
xchg
inc
stos
mov
pop
mov
xor
cmp
jl
jge
xlat
sbb
mov
and
loope
add
int3
dec
lret
mov
out
pop
jne
inc
in
mov
jl
lret
stos
inc
push
fwait
jg
ss
sbb
add
mov
loop
testb
ret
leave
adc
and
pop
sbb
lods
movsb
adc
lods
ret
and
sahf
adc
push
jp
cmp
test
lret
lods
push
outsb
cmp
test
fs
inc
inc
fs
xchg
insb
ja
test
into
mov
dec
fnstsw
mov
adc
mov
and
mov
cmp
out
cmpb
andb
mov
jmp
xchg
ret
scas
leave
cs
push
iret
scas
push
mov
inc
add
inc
pop
imul
mov
and
fadds
add
cmpsb
dec
popf
addl
ljmp
ficoml
sub
jmp
data16
push
and
cmp
imul
pushf
lret
push
mov
dec
stos
cmpsl
inc
pop
dec
gs
lahf
inc
fsubrl
xchg
adc
push
dec
jno
fs
orb
mov
pop
jg
mov
cmpsb
int3
adc
ds
and
mov
adc
and
add
xchg
mov
pusha
sahf
loope
mov
stos
sbb
add
xlat
add
insl
out
jae
arpl
adc
mov
sbb
mov
mov
or
je
adc
pusha
out
insl
add
hlt
xor
inc
cmp
cld
incl
jle
shlb
std
or
pop
lcall
rorb
loop
cmpsb
jae
into
mov
loopne
cmp
imul
cmp
mov
sub
dec
arpl
scas
movsb
sbb
mov
mov
in
xor
mov
xchg
cmp
cli
ss
mov
pusha
sub
ficomps
aaa
cmp
sub
inc
scas
pop
xchg
sti
sub
loopne
out
jmp
addl
rol
mov
pop
sbb
repnz
rcrl
imul
jne
pusha
stos
ret
mov
xor
ja
xlat
and
cmp
jns
push
inc
xor
scas
sbb
or
in
test
out
mov
fadds
pop
fs
hlt
dec
sbb
or
push
xor
rolb
sbb
stos
js
add
pop
pop
push
jl
or
add
add
push
dec
cmp
mov
adc
imul
and
clc
or
movsb
js
push
add
fistpl
and
sub
push
and
sbbl
or
mov
popf
inc
shl
jle
cmc
mov
dec
lock
inc
xchg
sub
pop
push
inc
dec
lret
sbb
and
add
and
jecxz
inc
cmp
xor
mov
call
cwtl
sbb
jbe
mov
leave
or
push
lock
loope
xor
loopne
in
dec
pop
pop
les
repz
lcall
mov
aaa
shlb
inc
or
push
and
cmp
add
lods
stc
push
addl
icebp
stos
repz
add
mov
daa
lea
test
inc
into
mov
cmp
lods
int
mov
enter
daa
lock
cltd
pop
sub
push
out
dec
sbb
stc
int3
push
stos
mov
jg
xor
jg
inc
pop
gs
or
push
push
inc
dec
bt
add
adc
in
adc
push
push
cmp
jg
pop
mov
pushf
xor
out
imul
insb
shlb
shlb
movsb
cmp
aaa
inc
add
pop
lahf
stos
lret
add
data16
into
adc
js
lock
int
in
mov
pushf
test
pop
inc
mov
adc
mov
and
in
push
or
dec
mov
jmp
xchg
xchg
gs
shlb
rclb
or
mov
ja
jl,pn
lcall
adc
xor
ja
addr16
enter
lods
mov
cmp
icebp
cmp
lcall
in
xchg
aam
pop
dec
in
pop
bound
addr16
or
sti
mov
rcll
pop
mov
cmp
cmp
jmp
std
mov
cmp
xchg
out
mov
push
xor
sti
js
enter
push
sub
ds
adc
nop
into
pop
xchg
stos
ret
ficoml
cltd
or
and
imul
cs
xor
dec
cmp
inc
or
in
inc
ja
sbb
pop
add
insl
or
aas
sub
in
pop
mov
mov
jecxz
ficoml
jne
rcrl
add
cli
cwtl
stc
push
xor
sahf
div
gs
push
dec
shrl
pop
jecxz
jo
pop
add
lret
pop
imul
jae
push
aam
gs
ljmp
imul
test
sbb
cmp
ret
jl
mov
jbe
pop
xchg
cmp
cmp
mov
pusha
insl
cmp
xchg
cld
add
jno
arpl
push
addr16
cmpsl
fsts
push
je
insb
push
pop
jg
scas
pop
shll
sbb
add
mov
stc
sbb
outsb
add
inc
xchg
call
dec
orl
icebp
pop
xlat
enter
mov
mov
into
dec
lcall
and
pop
enter
cmp
scas
adcb
jne
ja
iret
subb
stos
mov
mov
rcll
pop
pop
fnstenv
mov
mov
mov
mov
test
aam
fxch
xchg
aas
jne
lock
mov
push
jl
scas
xchg
cmp
in
cli
stos
shlb
enter
lret
lea
scas
inc
cld
xlat
fs
lret
inc
push
jo
in
les
add
shrb
mov
pop
cmp
outsl
in
js
pop
out
sub
sub
mov
cmpsl
jg
pop
sub
out
cld
push
shll
and
addr16
fistpll
pop
sbb
adc
out
call
repnz
out
ret
rclb
inc
xor
jecxz
pop
or
je
push
xor
inc
gs
ficoms
add
ret
fistpll
xchg
mov
shl
int3
test
clc
xor
imulb
sbb
popf
or
lahf
in
mov
xchg
inc
ret
lds
mov
and
jmp
cmp
mov
xchg
fdivs
sbb
mov
es
cmpsl
jecxz
in
aaa
or
addb
outsb
or
mov
ss
enter
cmp
jp
ret
mov
popf
andl
ret
loope
xchg
add
adc
or
fistl
dec
sbb
cmp
fadds
mov
mov
mov
mov
mov
inc
jecxz
adc
jnp
test
jae
inc
pop
jnp
test
pusha
shll
ja
cli
mov
fldenv
in
cmp
lahf
cs
rcr
add
cmp
xchg
prefetch
xor
push
ljmp
outsl
cwtl
pop
out
push
sub
dec
jne
data16
pop
shrb
ret
mov
into
jae
outsb
lock
ja
rcl
stos
divl
mov
pop
xchg
sbb
aaa
popa
cwtl
sar
js
test
xor
cmp
hlt
or
pushf
popa
arpl
jg
cmp
push
cld
testb
test
lcall
mov
add
ss
mov
add
bound
add
imul
cmp
pop
jp
addr16
popf
ficoml
int3
inc
mov
cmp
xchg
subb
mov
mov
sub
loope
movb
loop
leave
das
lcall
push
cwtl
fs
sbb
bound
es
add
sub
ret
repz
loop
test
into
pop
dec
inc
mov
mov
xor
push
adc
popf
movsb
in
iret
jg
xchg
test
iret
or
pop
mov
das
adc
mov
mov
je
pop
cmc
xchg
roll
leave
fwait
int
mov
push
push
and
decl
cmp
orl
mov
out
int3
pop
call
mov
test
push
lock
sub
aas
hlt
imul
imul
sub
ret
mov
xor
lods
adc
int
cmp
fiaddl
add
jg
jne
arpl
xlat
jnp
fstp
mov
cmpsb
pop
dec
in
pop
cmp
push
push
fildll
inc
cmpsl
and
mov
sbb
and
loope
mov
xor
push
jae
out
imul
imul
jge
mov
inc
clc
and
decl
dec
aaa
sahf
and
adc
push
and
in
insb
push
mov
mov
jecxz
and
ljmp
clc
pop
mov
inc
int
cli
push
fistl
fs
inc
jle
in
pop
pop
das
scas
stos
cmp
stos
inc
imul
jbe
stos
sbb
inc
xchg
hlt
add
scas
scas
js
fbld
stos
stos
push
sbb
xchg
ret
stos
mov
jp
or
jns
dec
mov
push
out
pop
rcr
cltd
rcll
addb
and
xor
mov
jp
cmp
loope
mov
das
icebp
addl
pushf
sahf
lcall
sbb
mov
push
mov
pop
fsubp
jl
out
add
cwtl
pop
cmpsb
xchg
xchg
test
inc
cltd
aad
dec
jmp
xor
pop
scas
rclb
add
pop
adcl
pop
push
loopne
ret
inc
jg
xor
fistpl
aas
pop
into
popa
lock
mov
xchg
stc
dec
shl
lret
mov
fs
jo
sarl
cmp
sarl
add
jl
fs
xchg
mov
nop
cmp
icebp
cltd
imul
xchg
jae
lods
out
jno
pop
mov
adc
xor
xchg
inc
js
outsl
cld
loop
xor
sbb
stc
mov
xchg
push
inc
push
in
mov
xor
push
add
inc
out
sub
xor
mov
fs
movb
cmc
icebp
in
mov
hlt
enter
jb
scas
and
sub
xor
pop
enter
lahf
in
sahf
stos
out
dec
aad
sbb
xor
mov
inc
inc
or
in
inc
xor
pusha
inc
sub
lret
enter
pop
mov
fsubrp
lods
pop
sahf
mov
push
sbb
pop
popf
or
mov
popa
ss
mov
aas
ret
inc
lahf
leave
mov
ret
pop
mov
or
repnz
push
fldl
cli
aad
jl
pop
sbb
and
pop
and
test
mov
fst
dec
movd
leave
push
pop
jb
js
cmp
mov
jnp
mov
xchg
sbb
push
test
push
mov
mov
dec
pop
insb
out
insl
loope
addb
push
dec
mov
jmp
xchg
xchg
clc
mov
xchg
arpl
mov
out
aas
stos
js
fisubrl
jne
xchg
cmc
or
dec
xacquire
faddp
mov
and
imul
xor
aam
clc
inc
mov
les
mov
nop
and
cmp
lcall
mov
jp
sub
lods
push
push
adc
xchg
fwait
clc
xchg
and
push
inc
cltd
mov
nop
pop
push
adc
mov
aam
dec
data16
fs
test
adc
jno
push
out
add
add
lcall
lea
repz
outsl
mov
in
ljmp
les
pop
and
loope
int3
inc
popfw
insl
sarl
mov
xchg
mov
xor
emms
outsl
aam
call
xorb
icebp
aam
call
add
cmp
repnz
push
inc
mov
lods
pop
pop
test
enter
dec
scas
repz
sub
mov
lock
dec
ficoml
nop
sub
ret
xor
sarl
insb
pushf
mov
dec
iret
pop
mov
icebp
jecxz
jo
mov
mov
arpl
sahf
or
bnd
sbb
xor
loopne
push
and
les
push
and
xchg
test
out
bnd
push
jge,pt
cmc
mov
dec
xchg
or
inc
mov
mov
cmpsl
push
mov
shlb
or
aam
push
in
jl
ss
add
call
shrl
add
pusha
fwait
test
sti
push
pop
dec
orb
push
aaa
cmp
mov
add
lret
mov
add
sbb
loop
mov
cmpsl
lret
adc
mov
dec
sti
inc
out
mov
xchg
mov
inc
imul
js
push
outsb
pop
das
stos
insl
sbbb
bswap
add
je
cwtl
loope
sbb
insl
sbb
int
imul
sbb
cmpsl
stos
in
cmpsb
jno
sahf
pop
adc
push
jne
jge
or
mov
mov
clc
mov
sbb
ss
xchg
lock
stos
push
push
daa
gs
aas
or
roll
loop
xor
xchg
ret
pop
mov
and
out
shll
adc
xor
nop
mov
les
dec
mov
inc
jnp
into
sbb
pop
cs
xchg
or
xchg
es
and
popf
mov
cmpsl
and
pushf
dec
and
and
cmpsl
aaa
sbbb
cmp
fisttpll
mov
popa
cli
stos
fcomps
sub
cmpsl
dec
lods
fs
jo
pop
movsl
icebp
leave
cli
dec
or
imul
push
pop
xchg
lock
cs
push
mov
fmuls
mov
mov
or
sbb
sti
push
int3
pop
jbe
call
jp
mov
rolb
stos
mov
ret
cmp
lcall
push
fwait
push
mov
xchg
imul
shl
inc
jg
mov
mov
das
imul
fwait
pop
ficomps
call
pusha
sti
pop
andb
mov
loope
scas
pop
jl
or
imul
sbb
cmp
inc
and
shl
inc
fwait
pop
lods
xor
mov
sub
xor
jb
cmp
les
cmpsb
xor
cmp
jp
test
clc
jb
push
clc
outsl
mov
mov
jmp
add
das
mov
out
dec
cs
dec
sbb
push
sbb
shlb
inc
jno
inc
inc
sub
or
or
pop
jmp
adc
cmp
push
xchg
xor
ja
mov
js
ror
lods
mov
jb
into
lock
and
pop
jmp
outsb
daa
mov
jae
fnsave
insb
mov
bound
sub
lock
sti
rcll
add
out
mov
outsb
and
repnz
in
sahf
incl
stc
or
xchg
clc
mov
sub
xlat
push
fistpl
sub
gs
out
fistps
xor
lds
in
push
bound
loopne
jle
shrl
test
or
pop
ljmp
repnz
pop
mov
arpl
cmp
or
sub
in
sbb
push
mov
ljmp
mov
aam
sub
mov
ret
iret
out
inc
pop
jo
push
add
loop
inc
pushf
sti
jl
inc
repnz
cs
movl
enter
pushf
add
cmp
leave
jge
xchg
test
clc
xchg
jnp
mov
xor
out
imul
xor
dec
lods
cmp
into
mov
lock
inc
adc
sub
push
cs
outsb
pop
fistl
add
mov
mov
xchg
lds
xchg
movsb
scas
cmp
cmp
lock
addr16
xchg
jecxz
enter
xchg
icebp
push
mov
xchg
mov
xchg
scas
enter
jmp
fnstsw
dec
add
cs
mov
lcall
mov
add
mov
jo
jo
mov
cmp
inc
out
test
xor
or
pop
add
f2xm1
dec
mov
pop
loopne
push
inc
js
imul
aad
insl
call
xchg
cmp
sub
xchg
mov
rorb
arpl
repnz
loop
xchg
jg
leave
bswap
lcall
bound
dec
dec
and
xchg
and
push
arpl
ljmp
call
dec
ja
push
pop
dec
jae
pushf
inc
sbb
out
rclb
lret
jb
sbb
and
sbb
add
jae
test
sbb
mulb
pop
pop
dec
rcr
or
pop
add
bound
scas
ret
imul
pop
sub
out
or
cmp
add
dec
and
mov
or
mov
sub
aad
cs
push
jo
nop
push
and
xor
cmp
cmpsl
jge
push
dec
push
repnz
sub
xor
mov
out
jmp
out
addl
or
cmp
jecxz
ds
fmul
arpl
arpl
sbb
xor
pop
mov
fidivrs
aas
jge
adc
push
and
push
add
leave
lods
sub
add
fsub
lods
add
stc
lods
sbb
pop
dec
push
jne
inc
insl
imul
je
out
aad
and
cmp
and
in
sbb
arpl
xchg
in
in
mov
mov
int
cmp
add
pop
mov
aas
mov
loope
adc
and
in
inc
jo
or
cmp
adc
inc
dec
out
mov
dec
xor
fcmovu
mov
imul
iret
or
push
scas
jg
cwtl
adc
imul
bound
icebp
jle
cmp
xorb
adc
xlat
adc
push
xor
push
pop
arpl
stc
gs
push
repz
xchg
push
mov
sbb
imul
out
std
jo
psubb
or
cmp
outsb
aas
add
adc
jne
mov
sbb
add
mov
and
fnstcw
dec
xor
das
xor
addr16
push
fistps
xchg
inc
sti
test
sahf
sbb
adc
mov
cmp
mov
pop
xchg
inc
sbb
ss
int3
je
sub
jp
dec
xchg
mov
lahf
sub
movsb
or
dec
pushf
xchg
inc
jmp
and
adc
insb
cltd
lret
xor
pop
stos
and
mov
adc
rcll
fldl
push
lods
xchg
js
lcall
call
jno
clc
adc
arpl
push
cld
cmpsl
popa
int3
popa
dec
pop
test
and
xchg
fisttps
stc
iret
cmp
push
rolb
push
jecxz
cmp
or
dec
ja
mov
in
ret
sbb
das
pop
mov
sbb
xchg
jns
in
jge
outsl
xor
sub
ret
jns
jne
and
sar
jge
mov
cli
cmpb
out
fs
jno
test
sub
or
test
sti
inc
adc
dec
cmpl
int3
adc
fistpll
int3
mov
add
ljmp
vmread
scas
push
cmp
xchg
outsb
addr16
mov
pop
dec
pop
shll
lods
pop
cmp
jns
das
mov
movsb
imul
jecxz
mov
jb
cmp
push
lahf
xor
ljmp
sahf
repnz
or
mov
out
ret
fcomip
pop
push
sbb
cli
sub
jmp
mov
pop
mov
inc
popa
mov
ja
add
mov
testb
mov
pop
add
jno
xchg
pop
mov
jge
add
rclb
fucomi
mov
and
sahf
cmc
sarb
lret
idiv
shlb
mov
push
push
pop
call
in
or
sub
pop
int3
push
adc
dec
or
pop
dec
stos
repnz
rcll
jl
repz
sbb
mov
cmc
push
js
pop
and
cmp
pop
lret
shll
insl
jnp
incb
add
xor
xor
xchg
add
xor
push
incl
mov
xor
std
cwtl
or
pop
adc
stc
mov
cs
mov
push
cmc
out
daa
stos
loope
inc
lods
test
fidivrl
gs
out
push
cltd
repnz
test
inc
fsubl
and
clc
jo
inc
pusha
jne
push
arpl
out
in
cmp
mov
ja
mov
lret
lahf
xchg
adc
cwtl
push
aas
lods
push
fcom
in
sti
inc
aaa
dec
push
cmp
cmp
ret
dec
push
and
and
movsb
add
pusha
xchg
mov
dec
mov
mov
stc
jl
xor
sbb
pusha
mov
inc
roll
in
imul
jno
xor
xor
push
sub
nop
insl
or
inc
nop
xchg
push
popf
xchg
out
scas
add
xchg
lods
cmp
mov
pushf
mov
xchg
add
inc
dec
outsl
enter
jg
enter
lcall
mov
add
clc
sbb
fidivl
psubsw
cs
cs
cmp
out
fists
mov
jae
scas
dec
das
mov
popf
pusha
sub
fnsave
xchg
sub
dec
xor
in
sub
inc
and
dec
adc
add
lcall
xchg
jmp
sub
ds
or
mov
mov
clc
inc
inc
inc
test
es
into
lcall
fisttps
dec
aad
out
pop
push
shr
mov
sahf
sbb
add
adc
hlt
jbe
into
sbb
xor
imul
jmp
mov
lcall
jle
lea
incl
test
inc
push
iret
shll
push
insb
push
test
lods
pop
lea
imul
pop
orb
inc
adc
cmp
aas
lret
loop
sbb
or
mov
adc
mov
aas
imul
jmp
imul
pop
cmp
je
mov
and
insl
clc
lcall
cs
push
js
lcall
inc
adc
mov
repz
sub
ss
pushl
dec
inc
push
cmp
mov
pop
sti
mov
cltd
out
popf
dec
fbstp
in
add
jg
mov
jmp
inc
mov
xorl
jne
fs
dec
mov
cmp
cli
sub
xor
push
or
popf
adc
cmpsl
or
mov
std
clc
std
clc
rolb
ffree
sub
aam
daa
fwait
daa
mov
mov
jnp
mov
repz
and
jns
movsb
dec
fidivrs
xchg
jae
nop
and
xchg
sti
insb
out
out
sub
stos
ja
sub
mov
call
xor
roll
dec
sbb
leave
add
ss
mov
cmpxchg
jmp
mov
flds
cld
push
addr16
xchg
hlt
loop
mov
mov
nop
mov
cmp
aam
xor
sbb
test
enter
subb
fsubrs
loopne
sbb
sbb
cmp
cmp
or
push
aad
repz
jge
push
xchg
xchg
pusha
mov
test
cltd
in
mov
jno
xchg
ret
mov
adc
les
jnp
dec
negb
push
popa
lods
xor
in
adc
cmp
sub
sub
shl
loope
xor
jns
xchg
fdivr
inc
fs
lods
or
ds
filds
jb
mov
mov
rolb
rclb
xchg
flds
mov
lret
pop
sahf
scas
imull
fldenv
sub
jo
sub
fnstsw
push
pop
and
cmp
xchg
and
and
outsl
mov
mov
je
cmp
leave
xlat
xchg
insb
cmp
cmp
sbb
adc
sub
or
lret
addr16
xchg
shl
cs
mov
mov
mov
mov
ret
pop
pop
popa
mov
sbb
xchg
lods
lds
stc
imul
je
clc
sbb
dec
push
jns
fbstp
fadds
mov
clc
sub
xchg
push
sbb
nop
sbb
mov
mov
and
mov
icebp
push
dec
js
ja
pop
jge
sbb
lods
loope
sub
pop
gs
jb
ljmp
jecxz
adc
shl
inc
cld
or
pop
mov
out
call
movb
inc
dec
sub
pop
lock
repz
add
je
mov
mov
pop
add
mov
ljmp
pop
sub
mov
adc
stos
loope
xor
test
outsb
insb
ficoms
mov
data16
in
mov
or
fabs
jmp
or
inc
aas
mov
xchg
fcompl
push
stos
mov
push
nop
lea
xor
jle
fndisi(8087
push
and
mov
dec
sub
xor
scas
mov
das
in
jle
out
mov
loop
xor
inc
dec
mov
and
mov
xorl
shll
test
xchg
icebp
mov
pop
xor
popf
jnp
push
pop
mov
xor
or
and
mov
jae
cld
and
mov
pop
mov
pop
pop
mov
mov
ret
cmp
cli
std
pop
mov
scas
repz
cmp
add
lds
mov
cmp
arpl
cltd
rcr
or
insb
xor
adc
pop
fimuls
sti
pop
push
jnp
push
cmp
imul
dec
mov
lret
push
in
mov
iret
jns
outsl
stc
xor
mov
fwait
mov
sub
dec
push
add
and
cld
ret
lea
dec
in
aas
or
lea
mov
or
scas
mov
popa
sub
inc
and
movsb
push
leave
les
dec
decb
loop,pn
fimuls
dec
pop
nop
rclb
cmpsl
jecxz
test
cs
dec
and
push
or
pushf
sbb
mov
ret
loop,pn
clc
pop
daa
iret
les
fmuls
pop
push
push
imull
subl
xchg
ljmp
sbb
into
ljmp
lret
push
inc
out
ds
lods
sbb
inc
leave
stos
outsb
inc
loop
adc
sub
jb
push
pop
push
rcr
imul
inc
cmp
pop
inc
pop
push
xor
push
div
loopne
cmp
lahf
loop
mov
test
pop
add
mov
add
sub
jnp
daa
jl
test
mov
pop
or
dec
sbb
xchg
jmp
enter
pop
fxch
xor
ret
jb
test
js
xchg
shl
lcall
xchg
and
mov
hlt
jo
scas
into
sar
aad
daa
sbb
push
and
dec
push
inc
repz
jnp
inc
fucomp
call
fstl
cmp
push
cmp
mov
frstor
sti
mov
dec
add
pop
cld
adc
dec
sub
sub
sub
dec
mov
and
mov
cmp
xchg
icebp
inc
ljmp
pop
aas
fisttpl
test
cmp
push
imul
and
pop
nop
pop
test
lods
mov
jl
fldl
mov
jge
leave
xor
add
and
pop
mov
jne
iret
dec
adc
popf
or
or
sbb
xor
js
and
dec
in
lcall
push
xchg
xor
rclb
insl
add
lret
jge
adc
std
dec
add
stos
push
cmp
out
sub
fdivr
data16
cld
xor
repnz
jne
mov
inc
add
pop
movsb
lret
mov
lock
loopne
pop
fidivs
in
dec
mov
lods
sbb
cltd
jp
add
xor
pop
ret
enter
adc
addl
jne
cmp
pop
fcmovne
xchg
mov
js
pop
mov
test
sub
jmp
jecxz
pop
cmp
insl
pop
and
sahf
rcrl
dec
inc
addl
pop
push
scas
lahf
push
inc
mov
stos
xchg
mov
xor
pop
push
rcrb
sbb
push
insl
jge
push
lods
inc
mov
shrl
test
mov
and
mov
fistps
in
outsl
movsb
push
sub
jns
adc
pop
dec
mov
pop
add
movsl
adc
jmp
imul
lcall
or
arpl
cmp
sub
jecxz
mov
jg
popa
insb
mov
pop
repnz
xor
addr16
mov
orb
push
fsubrl
pop
push
sti
push
xor
ja
lock
mov
pop
inc
mov
out
daa
sbbb
ret
outsl
pop
and
push
sub
ret
inc
aam
sbb
test
mov
in
loope
xchg
lret
pop
mov
iret
and
cmp
clc
arpl
mov
jmp
into
or
adc
or
mov
aas
jns
aas
sti
or
fidivrl
repz
dec
dec
movl
ss
or
push
sti
call
add
sbb
cmp
insl
test
add
inc
loopne
addr16
imul
jle
mov
jp
jmp
mov
dec
stos
cltd
inc
scas
pop
ret
mov
lret
xchg
fsubl
push
ss
popf
jns
pop
enter
mov
mov
das
jno
enter
jne
pop
xor
adc
push
pop
jnp
sbb
adc
or
mov
cmp
push
lods
cmp
arpl
sub
stos
int
or
xor
mov
cs
loope
and
mov
xchg
or
mov
jbe
daa
aam
leave
mov
cmp
cld
fdivrl
push
push
in
mov
addl
mov
dec
mov
test
mov
or
xor
pop
jns
mov
xchg
push
or
rclb
es
scas
ja
xchg
adc
fstl
mov
shl
aaa
cld
stos
dec
popa
in
dec
sbb
pop
enter
les
pop
push
xchg
ja
fadds
out
into
cwtl
cmpsb
xlat
and
cmpsb
xchg
adc
sub
jge
subl
ds
pop
les
mov
sbb
sbb
jg
pop
paddw
sbb
dec
rol
ss
inc
pop
jecxz
push
xchg
rorl
xchg
mov
lds
mov
xchg
sub
ret
and
lahf
jle
xor
adc
das
xor
fstp
xchg
xchg
dec
xchg
sbb
aam
push
or
lcall
or
aad
fisttpll
or
inc
xor
xchg
test
es
cltd
mov
repz
mov
insb
jmp
rolb
andl
xchg
ret
aaa
lret
jl
pusha
rclb
mov
and
clc
or
mov
mov
sahf
loop
inc
add
pop
dec
or
icebp
xchg
repz
mov
sbb
out
ljmp
in
fdivrl
sbb
jg
push
sub
imul
xlat
imul
mov
mov
mov
adc
xor
ljmp
rcr
std
sub
ss
xchg
adc
nop
nop
into
movsb
cli
je
mov
rolb
fsubrs
test
xor
jo
cmp
xchg
push
ret
scas
inc
cmp
pushl
mov
cmp
fsubr
xor
push
pop
ret
push
stc
lods
cmp
nop
mov
lea
mov
xchg
rcll
test
lods
pop
es
fildll
push
bound
xchg
mov
fisttpl
add
mov
xchg
fwait
push
js
and
iret
adc
mov
dec
test
gs
inc
ret
hlt
popl
daa
push
jne
dec
shl
lock
movsl
xor
dec
add
sti
or
std
adc
jp
pop
cmpsb
lahf
dec
aaa
dec
xchg
rol
add
mov
dec
mov
data16
adc
xchg
jo
stos
in
sub
imul
mov
lcall
sub
sahf
out
jne
enter
xchg
inc
ficoms
lahf
xor
sub
lahf
push
and
pop
sub
add
mov
jmp
fidivs
and
ds
bound
cmc
ss
mov
push
pop
push
jmp
and
pop
cmp
imul
or
andb
dec
fimuls
dec
mov
call
inc
pusha
aaa
imul
insl
adc
fs
out
stos
sub
out
inc
and
ficoml
ret
testb
sbb
adc
imul
cmp
in
inc
hlt
mov
mov
int3
lds
stos
mov
repz
xchg
xchg
rcrl
xchg
lock
aas
imul
cld
add
lret
sbb
mov
pop
xchg
mov
inc
nop
jnp
inc
jae
jb
addb
jle
mov
negl
jecxz
xor
ficomps
xchg
dec
and
pop
test
imul
pop
scas
lret
add
mov
adc
dec
dec
sbb
inc
adc
addr16
adc
test
cwtl
mov
mov
test
scas
mov
cmp
jns
pop
xor
roll
shll
push
cmpsb
jns
in
clc
push
sub
push
inc
push
and
int3
cmp
push
ljmp
jg
dec
or
idiv
dec
addr16
test
repz
jae
ds
or
sahf
ja
lock
shlb
ret
pop
dec
pop
lods
je
adc
pop
mov
fsubrl
lret
rep
mov
sub
dec
divb
adc
cli
jp
mov
inc
sti
jl
mov
xchg
and
ret
adc
jae
sbb
stc
lods
jmp
mov
xchg
icebp
cmp
mov
dec
dec
push
pop
icebp
pop
fwait
adc
pushl
loop
dec
scas
add
fisubl
loop
xor
test
andl
int3
lea
lcall
rcrl
xor
pop
lret
or
movsl
ret
test
lcall
mov
pop
or
xchg
inc
cs
fcom
and
out
sbb
fisubrs
aam
xlat
int
enter
push
loopne
jns
mov
xor
insb
ds
cmc
fstps
repnz
adc
pop
imul
adc
jno
pop
lods
jnp
mov
pushf
sbb
imul
xchg
shlb
pop
shrb
mov
sarl
ds
es
push
fs
daa
scas
mov
test
xor
xchg
mov
jmp
in
sbb
adc
arpl
xorl
dec
hlt
jg
stc
dec
pop
cs
inc
jg
ja
fcoml
xchg
and
push
xchg
add
and
mov
clc
cs
or
pop
ljmp
mov
test
pop
adc
pop
daa
adc
fwait
push
xchg
call
daa
jne
xlat
jg
jge
and
mov
sbbb
fidivl
fwait
push
add
test
imul
iret
stos
fiaddl
fwait
stc
aas
inc
jmp
jno
inc
cmp
outsb
xor
or
sub
data16
aam
push
add
cmc
or
icebp
pushf
cmpsb
push
push
pop
xchg
adc
dec
mov
jno
add
sbb
pop
dec
movsb
adc
daa
push
insb
sbb
sbbl
inc
push
mov
rclb
aad
push
mov
xor
lock
pop
shlb
xor
cmp
dec
mov
cs
sbb
ja
xchg
push
dec
test
outsb
mov
insb
movnti
outsb
sub
loop
mov
add
rcr
pop
jge
jns
es
aas
insb
out
mov
push
fidivrl
pop
or
das
sub
test
and
test
lods
leave
sbb
ds
rcrl
test
inc
mov
or
lea
cmpsb
daa
dec
inc
mov
outsl
mov
mov
arpl
mov
pop
adc
xor
mov
test
rcl
mov
clc
or
repnz
pop
shlb
mov
lods
mov
cmpsb
mov
popf
sahf
sahf
mov
stc
in
pushf
jmp
test
fnsave
int3
mov
mov
and
add
sbb
pop
adc
sbb
jns
xchg
xchg
int3
leave
int
sub
lock
sub
mov
push
dec
mov
shlw
fwait
lahf
jg
rorb
or
inc
pop
cmc
xor
or
cmp
jl
divl
arpl
scas
jge
fcoml
clc
jle
inc
fdiv
adc
sub
cld
sbb
jbe
jmp
inc
cli
inc
fwait
pop
test
xchg
or
jae
jmp
sub
int
push
stos
fs
pop
scas
jp
ljmp
jo
jbe
lods
mov
std
loopne
mov
movsb
sbb
mov
fnsave
aam
xchg
jg
and
daa
inc
inc
loopne
add
insl
sbb
addl
adc
fmull
xchg
dec
cmc
mov
call
out
pop
xchg
pushf
mov
fwait
jnp
ljmp
sub
cmc
push
out
lret
repz
xor
mov
repnz
stos
leave
xchg
leave
mov
xchg
pop
and
xor
pop
mov
jnp
into
xor
or
test
dec
lock
inc
ja
nop
and
sub
addr16
push
mov
into
or
fucom
loop
pop
xor
ds
out
sub
cmp
fcoml
inc
stos
mov
inc
jns
jl
subb
aaa
sub
scas
jb
mov
inc
mov
xchg
imul
aad
mov
clc
pop
pop
test
cvtps2pi
or
pop
sub
imul
mov
mov
lcall
pop
out
push
rcr
mov
sub
inc
mov
sub
push
daa
clc
int3
mov
mov
shll
ds
jle
or
jne
mov
loopne
push
cmp
sub
cmp
xchg
pop
push
addr16
lret
mov
mov
movsl
mov
in
add
cmp
lret
fdivr
mov
add
into
sti
arpl
sub
aaa
nop
bound
sbb
push
add
sub
mov
add
fwait
outsb
or
push
mov
nop
lds
in
insb
test
scas
mov
dec
mov
dec
nop
dec
jl
adc
outsl
js
les
push
mov
sub
fidivs
inc
aaa
mov
mov
fwait
cli
stos
fildll
xchg
or
cmp
aam
push
inc
xchg
jae
repnz
cmp
aaa
pop
mov
or
or
adc
aaa
hlt
repz
jbe
sub
in
jno
add
sti
push
fsts
test
cmp
mov
adcl
or
pop
push
xchg
int
fwait
jecxz,pn
arpl
fcmovu
sarl
gs
cli
test
aam
mov
int
les
push
xlat
inc
push
adc
xchg
pop
jl
in
push
int3
xchg
ss
mov
jecxz
aaa
mov
xchg
push
pop
lds
fdivrl
xchg
push
pop
popf
popf
dec
arpl
outsl
and
push
dec
daa
nop
hlt
enter
mov
sbb
or
sub
leave
addr16
fsts
gs
ret
push
das
lahf
mov
inc
mov
push
mov
xorl
mov
scas
xlat
nop
pop
xor
pop
inc
aas
sbb
or
or
ss
pop
xlat
mov
mov
negl
inc
ror
cmp
repnz
jmp
jno
sbbl
sub
sub
lods
inc
inc
dec
push
repz
push
cld
dec
sub
mov
jns
xchg
cli
fidivl
xchg
inc
or
in
add
enter
lds
mov
aaa
cmp
bnd
loope
jmp
add
add
dec
or
sahf
lods
add
in
call
sub
in
add
push
in
int
sahf
pop
hlt
inc
pop
push
outsl
push
xchg
loop
mov
out
sti
jecxz
inc
push
out
outsl
mov
ret
fcomp
push
push
arpl
aas
loop
bts
add
sbb
or
je
jo
or
mov
std
ret
push
fildl
push
inc
push
and
int3
dec
sahf
aad
dec
adc
adc
sbb
enter
pop
jne
stos
push
pushf
addr16
imul
jge
push
shl
sbb
xor
sbb
in
test
push
pop
mov
test
imul
imul
lods
add
jecxz
lea
arpl
int3
dec
sbb
xchg
add
mov
sbb
mov
and
push
push
mov
add
cltd
mov
in
les
in
int3
inc
lret
or
aam
cmc
sub
cmpl
jecxz
movsl
aam
add
loopne
les
push
ret
in
pop
stc
pop
add
mov
inc
mov
shlb
xor
push
lahf
cli
sbb
lcall
mov
push
orb
ret
insb
inc
hlt
fcmovnbe
loope
scas
loop
jno
jns
adc
fsubrp
sub
dec
cmc
mov
mov
aaa
mov
das
cmp
test
xor
popa
scas
mov
xor
fwait
jno
mov
push
into
cmpsb
xor
jns
inc
or
pop
lret
scas
push
push
jb
xchg
mov
test
inc
and
pavgw
sbb
sub
fmulp
aad
scas
mov
inc
lock
into
sbb
and
xorl
or
xchg
stc
adc
xchg
sbb
jb
cmp
rol
mov
inc
push
sti
mov
fs
mov
out
faddl
push
rcll
jl
std
arpl
xor
sti
jp
mov
shlb
mov
js
hlt
out
leave
addl
sub
ja
cwtl
out
push
jo
test
mov
loope
daa
inc
loop
stos
adc
lea
aaa
lahf
pop
inc
nopl
dec
push
arpl
xorl
push
fxtract
xchg
fs
test
pop
jne
mov
or
out
pop
adc
or
push
sahf
xchg
aad
cmp
pop
decb
push
in
adc
pop
sub
scas
mov
mov
inc
leave
enter
pushf
lret
dec
rol
cmpl
sub
fildl
or
jp
insb
mov
jns
sbb
or
ja
push
aam
jle
jae
xor
sbb
ja
aam
lea
imul
lods
pop
sub
test
test
flds
cmpsb
fists
lcall
and
cmp
mov
lret
dec
add
mov
sar
cmp
mov
orb
scas
rorb
mov
push
cmp
lds
lcall
int
inc
cmp
xor
stc
cmpsl
cmpsl
aas
repz
scas
setb
dec
scas
xor
sahf
je
js
fs
out
notb
mov
mov
sbb
inc
inc
outsl
mov
jo
sbb
cmp
add
pop
mov
add
cmp
pop
enter
pop
jle
dec
shlb
mov
xchg
xchg
fwait
xchg
mov
sbb
mov
rcrb
addr16
dec
pop
subb
stos
popa
ss
test
test
cmp
in
jl
add
xor
jmp
stc
in
dec
dec
loope
outsl
imul
fisubl
aad
add
xlat
sbb
sub
dec
mov
shll
pop
mov
xchg
mov
add
mov
push
push
mov
cmpsl
fs
jno
cld
and
orb
mov
pop
sbb
fwait
call
fists
ja
ljmp
imul
negl
xchg
inc
inc
jno
mov
jmp
fptan
sbb
mov
mov
jg
add
dec
inc
imul
mov
ja
lea
sti
int
xchg
les
jl
enter
adc
push
push
in
xchg
outsl
push
dec
adc
out
xchg
enter
sub
sub
or
pop
xchg
sarl
call
pop
dec
into
ljmp
out
pop
xchg
xchg
pop
mov
dec
pop
mov
dec
lods
fbld
xchg
lds
or
je
jmp
call
xchg
les
cmp
push
sub
sub
aad
movsl
shlb
test
addr16
jmp
enter
stos
xor
jns
shll
jbe
xor
mov
hlt
mov
cld
pushf
enter
adc
cs
sub
cmc
and
iret
add
lahf
js
in
outsb
push
inc
jp
adc
scas
mov
sub
icebp
jno
adc
adc
push
sub
in
ja
mov
jbe
mov
int3
in
ja
mov
test
mov
sbb
mov
shrb
push
inc
pop
xlat
jae
bound
sub
jecxz
jle
aaa
cltd
sbb
vpacksswb
mov
xchg
out
cmp
push
andl
adc
xchg
fs
and
and
lcall
dec
adc
xchg
xchg
aad
mov
fsubr
out
add
mov
lds
pusha
ret
lods
ds
or
add
imull
gs
push
fistl
test
sbb
sub
push
or
xchg
mov
jge
fs
rcl
adc
sahf
dec
or
xor
daa
xor
stc
cmp
ror
ds
in
add
lret
insl
inc
push
jo
mov
js
mov
icebp
repnz
lcall
xlat
es
int3
mov
inc
cmp
dec
mov
adc
aad
rsm
ljmp
jae
enter
fidivs
add
stc
aam
mov
sbb
sub
dec
xor
stc
push
lret
repz
stos
cwtl
mov
jle
mov
mov
loope
jne
lahf
ret
imul
xchg
ljmp
pop
les
cmpsb
xchg
push
cmp
shll
into
inc
xchg
pop
scas
dec
jg
add
pop
pop
aad
sub
negb
inc
jno
call
notb
cmpsb
cmp
addr16
inc
or
sub
jmp
test
cmp
iret
jge
push
mov
rorb
ss
mov
mov
outsl
rcrb
mov
ja
shrl
jne
mov
hlt
xlat
jecxz
pop
ds
ljmp
hlt
sub
sti
push
add
pop
ja
daa
cli
into
mov
dec
rcrb
sbb
pushf
ja
lcall
dec
dec
sub
push
sbb
dec
push
push
hlt
lret
sti
loope
mov
inc
and
push
fnstenv
scas
mov
dec
mov
fisubrl
mov
xor
cmpsb
adc
lods
mov
jnp
pusha
mov
adc
daa
nop
xchg
dec
fwait
pop
mov
dec
and
iret
les
repz
jbe
mov
ja
int
fcoms
and
mov
fwait
jl
js
jne
mov
xlat
add
and
ds
ret
mov
and
pop
popf
lds
cs
int3
popf
cmp
dec
scas
xchg
push
fisttpl
sahf
loop
adc
out
cld
xor
popf
pop
pop
sub
ficompl
dec
jmp
outsb
xor
cmp
xchg
push
fsubrp
int
cld
dec
lock
rcr
sbb
inc
inc
xchg
push
mov
xchg
sbb
imul
daa
fistl
cmpsb
loopne
jmp
and
jo
call
cltd
lock
pop
pop
lods
or
repz
stc
outsl
out
cli
jne
movsl
mov
leave
inc
push
sahf
xchg
pop
sahf
cmp
aaa
mov
xor
movsl
fisttpll
fdivrp
test
icebp
add
mov
pop
inc
ss
iret
std
outsl
sbb
movsb
imul
jae
inc
test
mov
pop
push
gs
push
call
or
imul
sub
sbb
insb
cmp
inc
aam
mov
dec
dec
fsubr
xchg
and
repnz
aas
es
cmp
add
sub
mov
pop
add
mov
ss
std
cmp
add
inc
add
pop
mov
gs
cli
test
sub
out
hlt
stos
into
loope
push
sahf
push
subb
xchg
rclb
dec
sub
mov
sbb
cs
jnp
push
sahf
hlt
jno
aaa
mov
sub
andb
and
daa
mov
sbb
add
dec
clc
decb
fwait
push
add
outsb
pop
inc
add
jp
or
into
add
cwtl
sbb
adc
sbb
xchg
in
sti
inc
rorb
jbe
mov
ficompl
sahf
fiaddl
xor
mov
xchg
lret
es
imul
ja
sub
add
int
mov
cs
fmul
pop
enter
cmp
ret
ss
pop
jb
ret
inc
les
push
dec
pop
sub
mov
jmp
dec
xchg
fimull
dec
mov
cmp
mov
xchg
popf
lods
mov
nop
imul
dec
sarb
mov
js
add
test
mov
lcall
and
or
repz
clc
and
fcmovne
pushf
xchg
dec
mov
mov
les
andb
in
dec
push
jl
lods
aam
jbe
pushf
pop
cmp
cmpl
jnp
cltd
fimull
sti
xchg
mov
test
jae
outsl
popf
outsl
lahf
cmpsl
push
lods
inc
push
or
pop
jmp
and
cmp
adc
push
mov
mov
pop
sub
push
mov
in
addr16
push
mov
inc
push
dec
imul
xchg
dec
dec
outsb
dec
clc
jmp
pop
jmp
lods
sar
xchg
in
jg
pop
out
inc
ljmp
inc
or
jnp
push
pop
inc
mov
cwtl
bound
rcll
sbb
out
inc
mov
and
pop
rcl
dec
std
mov
loope
push
push
pop
into
push
sbbb
popa
jge
sbb
dec
mov
roll
cmp
pop
pop
ja
dec
push
push
xchg
dec
inc
xor
xchg
mov
mov
bound
hlt
xchg
sbb
cmp
mul
loopne
xchg
std
orl
mov
xchg
add
idivl
mov
sbb
cli
cwtl
and
push
xor
mov
dec
jp
scas
push
pusha
xor
fistpll
jbe
cmp
fdivl
js
sahf
out
stos
mov
dec
pop
xchg
fisubs
pushf
mov
movsb
enter
ljmp
push
jns
adc
inc
out
xor
arpl
addr16
pushf
adcb
orb
in
mov
mov
ja
sahf
push
or
mov
stos
fisubrs
mov
stc
sub
xor
shlb
add
xchg
sbb
and
cmpb
pop
mov
sbb
or
and
pop
cmp
frstor
sbb
dec
and
push
jae
fcompl
dec
lret
test
push
mov
sbb
dec
es
cmc
push
fsubr
mov
pop
mov
push
fstps
xchg
mov
add
clc
sub
stos
aas
xchg
pop
dec
addr16
fiadds
adc
pop
loope
and
and
xor
mov
and
push
outsb
mov
xchg
ret
pop
push
or
mov
test
mov
insb
sbb
sub
clc
jo
cmp
push
std
outsl
jecxz
or
icebp
jne
inc
inc
mov
mov
lock
jnp
sub
mov
movsl
adc
xor
rcrl
hlt
int
and
test
outsl
push
pusha
xchg
jl
data16
insb
inc
pop
push
test
add
std
xchg
into
adc
xchg
nop
jo
jge
or
add
cltd
mov
sub
inc
and
enter
sub
aad
mov
push
push
adc
add
icebp
mov
xlat
pop
bound
out
xchg
mov
jp
sub
pop
inc
and
outsl
adc
sbb
out
rcr
push
repz
int3
mov
popf
push
mov
xchg
and
sbb
sbb
jo
jmp
inc
jno
insb
mov
dec
sub
or
add
subl
and
int
xor
movsb
popa
insb
xchg
faddl
mov
xchg
mov
stos
pop
popf
outsl
fnstenv
icebp
cmp
dec
adc
jecxz
mov
repnz
xchg
cmp
xor
xchg
mov
xor
pop
and
testb
sub
adc
mov
pop
push
fs
or
js
push
pop
cmpl
add
loop
fwait
outsb
addb
divl
xchg
popa
xchg
pushf
stos
dec
ror
sub
add
xor
or
aas
stos
stc
and
mov
mov
mov
das
xchg
mov
mov
mov
mov
jmp
inc
in
push
push
idivb
xchg
sbb
imul
pop
jge
lret
cmpb
out
scas
xor
and
add
cmp
or
sbb
fcmovbe
add
icebp
jnp
je
inc
dec
push
xchg
call
in
repnz
fisubl
aas
jmp
mov
mov
push
test
sub
ret
test
and
mov
movsb
mov
cmc
lcall
or
sbb
incl
jecxz
pop
rorb
mov
mov
sbb
pop
sahf
push
jb
es
subl
cltd
pop
sbb
adc
and
ljmp
mov
sub
ret
iret
insl
cmp
add
mov
adc
in
incl
sarb
sbb
cmpsl
divl
inc
pop
rcll
dec
xchg
in
xor
or
inc
ret
pop
into
cli
mov
push
cld
push
add
xlat
inc
or
push
pop
push
add
dec
lods
adc
popa
push
insl
pushf
ret
sbb
push
dec
mov
sub
mov
int3
fisubs
sbb
add
sbb
movb
mov
icebp
inc
mov
js
scas
sbb
int3
fnstsw
cld
or
inc
rcr
ljmp
in
bswap
push
dec
insl
std
mov
push
int
lret
or
or
loopne
xor
mov
cmp
mov
dec
pop
and
xor
std
testl
repz
push
std
iret
pop
and
repz
mov
incb
adc
addr16
mov
mov
stc
adc
jecxz
call
sbb
in
xor
jns
movsl
sbb
fldenv
scas
loope
clc
out
jp
xchg
or
mov
sub
test
cwtl
in
pop
arpl
int
or
sub
stos
pushf
subl
fwait
sub
mov
xor
and
xlat
adc
push
repz
adc
sbb
loop
push
jae
popf
and
add
cli
inc
cmpsl
sub
sarb
insl
data16
jl
lret
out
enter
or
dec
sub
jp
or
pop
in
inc
into
mov
jne
and
adc
cmp
xchg
aas
sub
lock
pop
add
lahf
cwtl
jae
loop
dec
dec
ja
daa
inc
sub
push
pusha
pop
lods
or
insl
test
test
fwait
and
stos
aas
mov
sbb
paddusb
imul
adc
xchg
jbe
sbb
inc
cmp
ret
xchg
and
out
jno
lds
push
sbbb
in
xchg
ret
adc
stc
sub
out
movsb
out
xchg
call
jp
cmp
adc
mov
shl
dec
jp
jb
daa
cmp
inc
js
sub
sbb
mov
mov
idivl
dec
sub
iret
push
sbb
push
repz
jnp
add
faddl
iret
pop
out
into
scas
xor
arpl
movsl
pop
ss
mov
push
call
and
lret
cli
clc
jge
dec
and
jle
fstpl
in
sbb
pop
and
adc
push
sub
outsl
and
pop
sub
or
add
sti
es
adc
mov
lret
adc
negl
aas
sahf
clc
inc
cwtl
and
sub
inc
pop
arpl
ret
stc
insb
out
nop
xlat
out
fs
add
push
clc
fmull
xchg
cs
imul
mov
jp
loope
in
or
arpl
cltd
rcrb
pop
lods
mov
mov
pop
jp
or
repnz
cmp
cld
push
cmp
in
and
mov
jns
mov
cmp
xor
ljmp
pop
cmp
xor
or
xchg
aam
push
mov
push
xor
xor
pop
nop
jp
jmp
fwait
and
cmp
push
fs
hlt
arpl
pop
popa
jne
lods
cmp
lods
and
scas
jmp
mov
inc
aas
and
sti
mov
add
jno
ss
sti
mov
fcmovne
loope
int3
mov
mov
stc
or
addr16
mull
mov
test
in
outsb
push
push
sub
mov
mov
sub
sub
ficoms
js
push
test
sbb
outsl
je
jne
rcll
int3
pop
sbb
sbb
roll
or
mov
pop
in
add
push
lds
test
inc
adc
lds
pop
sbb
les
outsb
cmp
or
cwtl
dec
push
jge
aaa
sub
cmc
out
push
int3
inc
call
lods
std
or
pop
jns
repz
dec
or
adc
xor
mov
dec
mov
jmp
jg
push
ret
cmpsl
adc
outsl
cltd
cmpsb
mov
dec
xchg
lret
xorl
mov
inc
cmp
xchg
js
std
cmp
dec
subl
xor
in
out
lea
sub
mov
jnp
inc
inc
fadd
mov
mov
or
cs
or
inc
movsl
arpl
loopne
sub
test
sbb
int
and
stos
enter
jl
xchg
cltd
mov
jp
outsw
or
lods
int3
sbb
dec
mov
sub
fisubl
push
sbbl
and
mov
and
mov
xor
and
mov
mov
shlb
fwait
mov
mov
addr16
ja
rorl
loope
stc
loopne
ljmp
or
adc
sub
sahf
nop
mov
popa
jnp
jae
pop
jl
jno
arpl
rorb
lret
ds
pop
sub
mov
out
adc
sar
or
and
pop
nop
int
adc
fdivrs
out
inc
mov
sbb
jmp
and
mov
inc
sub
mov
cltd
lods
inc
and
push
xor
into
pop
scas
out
in
lea
enter
popa
jge
repz
fsubr
inc
jbe
jmp
pop
les
repz
insb
and
movsl
pop
sbb
outsb
push
loop
lds
negl
std
jns
sti
mov
fbstp
orl
push
daa
mov
and
inc
mov
sub
lret
loope
aam
test
mov
xor
ret
or
add
jmp
lahf
add
andl
je
mov
shrl
pop
mov
push
sbb
or
and
lock
mov
dec
popf
test
adc
pop
insl
xor
mov
xor
cmp
sub
sub
mov
bound
sbb
jnp
inc
inc
mov
enter
popa
adc
mov
dec
mov
inc
push
roll
ljmp
push
mov
pushf
fmul
sub
xchg
stos
movb
adc
popa
fiadds
stc
mov
jecxz
and
push
and
into
mov
mov
popf
aas
mov
xchg
sbb
xchg
aaa
in
lret
js
and
mov
test
jmp
mov
test
mov
es
int3
cmc
out
sbb
stos
mov
sbb
int
mov
push
mov
in
sbb
mull
inc
sub
aaa
push
scas
mov
daa
push
imul
cs
pop
jae
aaa
inc
push
xor
jg
mov
jge
leave
adc
mov
sub
sub
jg
icebp
cli
mov
lods
loop
movl
mov
mov
sub
inc
in
daa
ret
std
divl
sbb
fiadds
xor
int
jbe
fnsave
ret
xorb
call
fidivs
push
cmp
sti
push
subb
cmp
mov
aad
sub
in
sti
jg
xor
push
mov
aaa
add
or
into
dec
jl
xchg
stc
fdivl
lea
movsl
mov
and
xchg
pop
je
cld
aaa
outsb
mov
xchg
pop
out
mov
or
outsl
push
imul
cmp
and
shl
xor
outsb
andl
dec
test
jg
mov
mov
xchg
shl
shrl
shlb
and
dec
scas
lcall
mov
add
out
sbbl
sbb
or
and
mulb
mov
push
pop
xchg
rol
cmp
fstpl
pop
andps
add
cwtl
mov
lret
jle
push
dec
cld
notb
mov
arpl
mov
or
jne
out
andnps
jg
and
outsl
les
int3
mov
push
mov
insl
rclb
jl
orl
stos
inc
test
gs
xor
add
sti
lret
mov
jp
je
pop
lods
pop
das
xor
push
jns
addl
in
lahf
dec
push
in
andb
fs
mov
xor
fidivrs
gs
movsl
mov
sub
js
jbe
sbb
clc
icebp
in
sbb
inc
mov
aaa
push
adc
fidivrl
add
sub
aad
std
xchg
push
mov
inc
jne
stos
push
xchg
outsl
xchg
icebp
sub
mov
pop
shll
je
xchg
in
stos
push
lret
sbb
sahf
out
mov
pop
in
push
pop
inc
nop
bound
xchg
cwtl
mov
cmp
push
hlt
cmp
push
fldl
ficompl
push
pop
and
add
or
jmp
cmp
divl
jbe
jmp
add
stc
imul
jno
std
movsb
jmp
pop
jge
in
adc
fwait
xor
mov
xor
push
mov
sub
add
sbb
mov
cmp
push
sub
insb
call
loope
mov
mov
and
add
js
nop
mov
pop
jb
xor
clc
jb
mov
int
sbb
mov
jg
push
jge
pop
xor
test
movb
pop
sbb
jnp
mov
out
shrb
sub
xchg
rcr
lock
aaa
add
mov
out
xor
mov
xchg
ja
sbb
jmp
movsb
shrl
fwait
xchg
jo
mov
test
mov
imul
fsts
cmp
nop
push
mov
jmp
dec
and
mov
dec
push
pop
push
xor
into
push
out
sub
in
adc
insl
and
popf
ss
adc
or
mov
mov
pop
and
mov
jl
movsl
sti
pusha
dec
rorl
ja
int3
outsl
pop
or
and
xor
add
int3
push
jp
js
cwtl
rorl
lahf
pop
rcrb
cmpb
test
dec
mov
and
push
push
dec
pop
repz
cltd
mov
sbb
in
xor
dec
cli
in
cld
inc
pop
or
ljmp
scas
lret
push
pop
dec
mov
mov
loop
xchg
add
inc
shlb
jle
sbb
dec
pop
mov
lret
mov
xlat
jns
pop
push
repz
push
movsl
stc
mov
lahf
fcmovnu
inc
mov
mov
dec
ljmp
inc
outsl
roll
adc
shll
push
lock
cmpl
int3
inc
cmpsl
xor
icebp
rorl
xchg
mov
idivb
fwait
in
dec
mov
or
in
insl
leave
dec
daa
mov
cmpsb
push
test
insb
and
mov
es
arpl
sahf
adc
xchg
iret
arpl
mov
fstcw
adc
fistps
and
mov
pop
and
xorb
inc
iret
imull
bound
popf
sbb
push
dec
mov
xor
sub
aaa
cmp
push
push
fs
adcl
dec
pusha
inc
xor
cmp
jae
movsb
das
mov
mov
pop
scas
adc
fsubr
sbb
sub
scas
lcall
sub
mov
jnp
movsb
movsl
outsb
mov
cmpsb
mov
aad
rorb
imul
cmp
mov
jl
inc
cmp
jb
insl
nop
jnp
call
sarl
mov
xlat
adc
xchg
and
pop
out
push
inc
movsl
cmpsl
jne
in
mov
jbe
sbb
mov
adc
inc
sbb
inc
enter
divl
movsb
cmp
test
iret
dec
jnp
mulb
insl
and
loop
cmc
xor
loop
arpl
xchg
mov
pop
sub
lods
dec
daa
scas
data16
mov
pop
mov
ja
clc
jmp
xor
subl
insl
sub
xchg
adcl
cmp
pop
mov
shll
out
lcall
mov
stos
gs
sub
mov
clc
adc
adc
jp
xor
dec
addb
lcall
xchg
lods
fdivrs
dec
stc
cwtl
neg
in
lock
mov
xchg
aaa
jae
out
xor
pop
and
or
daa
xchg
mov
add
push
mov
cmp
outsb
sarl
mov
mov
xor
cmpsl
mov
pop
xor
lret
mov
add
pop
ss
push
jg
movsb
fstps
nop
push
xor
xchg
fs
fadd
xchg
shr
sti
stos
ja
cli
call
sub
jle
mov
in
scas
shrl
push
in
xor
mov
ljmp
sarl
mov
dec
or
ljmp
xchg
mov
in
jno
insl
nop
mov
xchg
mov
idivb
push
in
pusha
fisttpl
call
ss
sub
imul
jno
xor
stos
jl
int3
mov
mov
sub
aaa
push
inc
mov
cmc
das
out
lret
scas
cmc
ja
pop
push
cmp
and
dec
jmp
add
gs
jno
or
fwait
adc
xlat
jle
mov
out
fstl
aad
mov
clc
or
mov
jge
das
xchg
and
or
mov
call
icebp
ljmp
cmpsl
sub
pop
xchg
push
xchg
movsl
das
int3
xchg
cmp
xor
add
and
adc
and
mov
or
test
xchg
pop
sahf
mov
cld
xchg
fmull
inc
cmp
sahf
iret
inc
xchg
lock
sbb
sti
in
mov
dec
cmpsl
cmp
movsb
inc
xchg
aam
sbb
dec
in
dec
add
pop
mov
retw
outsl
dec
push
mov
cmpsb
ret
incl
dec
xor
dec
dec
adc
popa
js
xor
loope
push
jmp
jne
push
push
mov
xchg
mov
and
out
or
or
or
pop
in
out
mov
leave
mov
aas
stos
ds
sub
lcall
jns
jge
insl
inc
cmp
xchg
sbb
call
popf
ret
xchg
imul
stos
test
cmc
ja
insl
lcall
xchg
arpl
add
fwait
xlat
fistpl
and
and
dec
imul
out
ficoml
shrl
js
outsb
mov
out
ds
imul
test
lcall
mov
mov
mov
jne
es
sub
insb
es
pop
ret
jnp
repnz
push
insl
stc
jg
notl
xlat
mov
dec
pop
repz
push
push
xchg
adc
and
jb
popa
sbb
fidivrl
aas
cmpsl
movl
mov
xchg
cmp
and
stc
imul
inc
pop
sti
gs
sub
lock
lret
or
jg
data16
imul
imul
popf
stos
mov
mov
sbbl
mov
mov
xchg
or
adc
ljmp
jge
lods
sub
popf
lods
adc
add
mov
enter
jae
pop
clc
or
cs
xchg
pop
in
out
aam
adc
fwait
xchg
sub
pusha
nop
dec
leave
or
out
or
and
mov
xor
aas
mov
adc
sahf
xchg
push
push
push
in
inc
aaa
mov
jecxz
ds
aas
inc
inc
mov
push
in
imul
cmp
push
add
mov
inc
pop
dec
lods
sub
and
jecxz
out
mov
jecxz
xchg
jno
add
pop
xor
mov
xchg
testl
push
adc
sub
out
std
dec
sti
push
pop
ja
out
ss
dec
ds
dec
into
add
das
imull
jbe
pop
mov
jg
mov
mov
jmp
push
add
jle
push
lods
mov
out
imul
and
popa
imul
inc
scas
or
sbb
mov
enter
pop
or
ucomiss
push
sub
gs
cwtl
dec
mov
pop
inc
sbb
push
xchg
pop
addl
pop
movsl
ljmp
mov
roll
sbb
push
mov
xor
or
clc
jg
cwtl
xor
pop
jg
cli
or
outsb
push
out
orl
add
leave
lret
dec
andb
aam
push
scas
in
addb
push
sbb
sub
shlb
ja
mov
aaa
mov
xor
idivl
mov
pop
xlat
push
inc
inc
repz
adc
mov
pop
test
iret
aam
test
inc
mov
rcll
pop
test
dec
in
adc
push
lahf
shlb
xchg
imul
jae
fsubrs
int3
or
insb
in
pop
adc
inc
sub
test
add
adc
insb
pop
inc
cmp
aas
outsl
inc
push
push
mov
xchg
pop
test
xchg
mov
xlat
xor
test
cmc
arpl
mov
out
in
stc
jle
je
add
stos
adc
add
shlb
cltd
loope
js
std
test
ret
adc
cltd
sti
jno
push
inc
mov
sbb
xchg
add
mov
pop
stos
fcoms
cltd
rcrl
adc
xchg
jae
mov
mov
je
xchg
ja
dec
fisttpl
aas
push
test
call
rclb
mov
jnp
mov
mov
jnp
or
pusha
or
popl
sarl
aas
push
aad
loope
ss
lret
jo,pn
xor
cs
fs
dec
js
nop
fs
mov
push
pop
mov
sbb
sbb
xchg
xchg
jge
inc
jb
dec
add
mov
push
mov
cmp
pop
pop
adc
mov
sub
in
enter
sbb
mov
xchg
or
sbb
add
dec
outsb
adc
jno
jo
add
out
mov
pop
lret
scas
cli
cwtl
mov
inc
mov
pop
bound
cltd
mov
pop
jl
jmp
movsb
hlt
or
ret
stos
mov
mov
inc
dec
jmp
cmp
test
mov
aam
jno
jg
jl
mov
adc
lods
cmpb
pop
cmc
fisubl
xchg
mov
mov
dec
dec
or
inc
push
insl
pop
mov
mov
mov
mov
adc
inc
test
sbb
mov
pop
push
dec
icebp
pop
int3
add
xchg
cmpsl
adc
out
mov
sub
outsb
jmp
stos
pop
pop
mov
jnp
fsubp
or
aaa
adc
dec
mov
push
rol
out
popf
je
lret
iret
mov
pop
sbb
mov
mov
popa
outsb
xor
dec
dec
add
fnstsw
add
je
daa
cmpsl
mov
mov
sbb
insb
gs
jns
jae
push
mov
imul
rcrl
je
mov
les
shl
adc
insb
aad
jmp
and
shrb
daa
adc
cmp
sbb
mov
mov
lods
test
fadds
lods
or
hlt
mov
pop
sub
adc
or
push
add
fdivr
dec
or
imul
xchg
mov
inc
call
xor
xor
xlat
test
cld
cs
int
add
cmp
je
data16
neg
xchg
mov
xor
scas
sub
push
push
outsl
lret
jmp
push
or
cmp
xchg
mov
js
pop
add
sub
ficoms
mov
lea
mov
xor
jmp
pusha
add
jb
sbb
pop
jo
lods
xchg
pop
mov
mov
or
jns
jnp
jmp
mov
fldt
movsb
lahf
adc
xor
outsl
loopne
jno
add
jp
jnp
jp
jnp
xor
gs
or
in
xchg
out
dec
idiv
lods
in
inc
cmp
int
jns
and
xchg
fcoml
mov
mov
add
add
inc
lret
fcoml
pop
shll
push
bound
sbb
add
mov
xchg
loop
sbb
fidivl
and
aad
sub
adc
inc
sbb
or
xchg
out
mov
sbb
cld
frstor
pop
daa
xor
leave
in
pop
lahf
sti
sub
sub
mov
adc
inc
lret
popf
and
cmc
mov
sahf
jae
push
out
lahf
stos
jne
add
notb
and
jg
dec
push
int
jno
pop
sub
jae
or
jg
aas
mov
sbb
mov
repz
cmp
popf
sbb
insb
mov
movl
push
xor
cmpb
cwtl
pusha
jecxz
pop
sarl
adc
out
pop
out
and
imulb
sub
popl
test
push
lret
mov
insl
insb
fdivrl
insl
sub
sbb
jne
xchg
pushf
cmpl
fisubs
jnp
dec
push
jle
mov
dec
into
pop
notl
inc
ljmp
inc
mov
jmp
mov
jns
daa
xchg
and
cmp
mov
sub
push
lds
mov
pop
test
mov
pop
jmp
out
cmp
mov
inc
scas
pop
call
mov
cld
dec
xchg
clc
cmp
mov
clc
testl
ficomps
xorl
test
mov
outsl
daa
push
loope
mov
enter
ljmp
ret
shrb
sbb
scas
testb
cld
xchg
outsb
mov
insb
test
dec
and
std
jnp
mov
out
enter
fiaddl
into
mov
push
add
pop
lods
jbe
add
inc
daa
xor
sbb
xlat
repz
js
sub
mov
jp
pop
mov
add
xchg
mov
sbb
push
cmp
mov
sti
add
add
ret
fsubrl
scas
outsb
movsl
mov
jg
stos
pop
scas
inc
xchg
leave
push
cmc
fstpl
adc
stos
ja
scas
mov
aam
jg
mov
int
or
mov
fistpl
add
fwait
js
test
push
rorb
dec
sub
hlt
push
in
jne
nop
ret
or
js
lods
lods
xor
dec
lea
add
mov
xor
repnz
xor
push
dec
push
cltd
mov
mov
dec
out
movsl
jne
bound
mov
push
jge
pop
sbb
lds
xor
leave
xchg
inc
cli
imul
dec
sub
aad
ss
ret
lock
jmp
lahf
sub
das
mov
sti
hlt
clc
mov
xchg
daa
je
fmul
mov
push
lahf
xchg
scas
push
sbb
mov
imull
and
rorl
and
sbb
xchg
testl
jbe
mov
adc
out
xchg
in
xchg
fwait
pushl
cltd
bound
pop
rcrb
mov
sti
fstpl
aas
add
ja
adc
enter
and
es
arpl
cltd
in
cmp
cmp
cltd
jns
mov
or
jl
std
arpl
out
push
fwait
mov
or
popf
aas
test
out
repnz
and
mov
push
cmp
dec
mov
insb
cmpsl
xor
insl
mov
dec
adc
test
stc
subb
dec
adc
xor
rcr
lcall
jp
xlat
jecxz
sub
add
add
stos
loopne
out
dec
repz
fmull
test
jle
jl
sarb
mov
cmc
mov
xchg
fcomi
fldl
cmp
lcall
add
or
push
jb
neg
fwait
ret
pop
cmpsl
add
dec
adc
fistpl
xor
dec
pop
adc
gs
jo
jne
cs
xchg
out
or
shlb
leave
mov
out
rolb
push
and
shll
push
sbb
test
xlat
bound
xor
stc
sbbb
cmpsl
pusha
rcr
inc
mov
cmp
pop
fdivrl
push
ja
push
hlt
stc
cmp
cli
xchg
lret
or
ja
sub
divb
mov
dec
mov
imulb
adc
xchg
adc
pop
or
and
outsb
jg
cmp
or
cmp
movsl
sahf
mov
push
cmp
or
inc
push
dec
mov
pop
je
arpl
stos
movsl
loopne
fisubrl
aad
bound
jne
int
test
ljmp
sahf
and
cmp
movsb
jecxz
push
in
pop
pop
lcall
xchg
cmpb
jmp
fstps
jle
ja
mov
aad
aaa
out
movsb
cmpsl
icebp
cmc
cmp
dec
jo
int3
mov
stos
adc
aas
jae
arpl
sbb
stos
das
sub
movsb
mov
push
mov
out
mov
cmp
adc
imul
mov
test
and
push
movsl
pop
adc
clc
mov
insb
dec
adc
ret
pop
or
in
mov
push
fs
add
dec
imul
push
lds
std
mov
dec
inc
sti
js
sbb
or
or
dec
or
sbb
sbb
jo
cmp
inc
and
inc
jle
add
std
repnz
mov
mov
jmp
out
and
dec
and
loope
or
mov
sub
in
ja
scas
std
fs
xlat
mov
fcoms
jg
int
dec
and
repz
dec
mov
gs
mov
incl
mov
rcll
mov
out
sub
clc
sub
jbe
movsb
and
and
lds
pop
and
add
lret
inc
sbb
cmp
in
dec
sub
gs
sbb
sub
push
int3
cmpsl
lahf
das
mov
jecxz
inc
push
loopne
cmp
inc
sub
xchg
ret
and
adc
out
mov
pop
dec
fsts
dec
lret
cli
xlat
lock
sbb
xchg
mov
sbb
fbld
es
test
pop
ficompl
das
je
les
or
mov
lods
adc
not
clc
cmpsl
sub
iret
pop
sub
sbb
std
je
pop
outsb
std
fprem
sbbb
scas
mov
fisttpll
mov
lcall
outsb
and
mov
adc
repnz
pop
sbb
divl
lcall
lret
pushf
es
jo
ret
fstpt
jbe
jle
inc
es
xor
cwtl
cmp
repnz
stos
add
adc
fs
incl
push
lea
jns
imul
mov
std
adc
jecxz
lahf
xor
dec
cltd
and
inc
jb
cli
fdivs
push
insl
out
jp
jl
jmp
lods
aad
mov
pop
adc
insb
mov
mov
mov
insb
loop
lea
mov
dec
ds
pop
mov
lea
xor
xor
popa
sti
add
aaa
popa
in
aam
and
orb
xchg
or
sti
mov
jp
jae
repz
mov
mov
add
inc
sbb
add
fwait
sub
ljmp
xlat
aaa
push
mov
in
sbb
jp
mov
out
out
and
pop
pop
pop
sbb
cld
mov
je
shll
clc
jecxz
es
cltd
movsb
mov
cmp
sti
inc
repnz
lds
jl
je
mov
pop
sti
mov
and
pop
push
mov
mov
adc
jmp
pusha
outsl
in
mov
and
js
aaa
cs
inc
jne
sarb
sub
xor
inc
daa
sbb
rcr
xor
das
dec
push
std
add
add
lahf
mov
in
shr
jne
fldcw
arpl
divl
cmpsl
lods
je
mov
stc
inc
nop
push
sub
roll
adc
jg
mov
test
jno
dec
lods
sbb
push
and
jl
movsb
jmp
std
call
inc
xlat
xor
pop
insb
lret
rorb
clc
adc
nop
mov
and
jl
dec
test
outsb
xor
loopne
mov
push
adc
dec
cmpsb
movl
xchg
mov
xor
aas
xchg
jns
outsb
cmpsl
pop
push
test
cmc
mov
scas
popa
out
std
xchg
pusha
stos
sti
incb
mov
push
lods
repz
adcl
andb
pusha
dec
xor
inc
data16
aas
cmp
mov
outsb
pop
xor
jecxz
paddw
lods
int3
lcall
and
cli
xlat
and
push
push
scas
test
add
inc
dec
cmpsb
hlt
cmp
dec
adc
xchg
dec
fwait
push
outsb
sti
outsb
popa
push
mov
test
or
lock
pop
inc
push
in
or
cmp
aam
outsb
xchg
or
pop
cmp
inc
ret
xchg
push
jbe
sete
jae
cli
sub
mov
and
fsubrs
mull
and
hlt
movsl
xorb
push
cs
pop
mov
fs
loop
push
xor
test
push
sub
in
repnz
pop
into
jmp
mov
mov
repz
add
test
inc
inc
or
stos
xor
stos
scas
fdivl
mov
mov
mov
adc
out
lods
arpl
and
pop
jmp
out
clc
mov
hlt
cmpsb
inc
mov
xlat
adc
push
dec
mov
test
xor
push
jnp
bound
icebp
mov
xchg
imul
mov
call
jp
mov
stc
push
aam
test
ss
push
adc
sbb
adc
sub
jns
loope
mov
ss
popa
xor
mov
jl
stc
mov
pop
cmp
lea
dec
cmp
mov
les
sub
adc
lea
hlt
data16
mov
xchg
jae
lcall
mov
sarb
and
out
jl
add
add
inc
push
dec
jae
iret
adc
mov
sub
xchg
imulb
cli
cmpsb
mov
mov
lret
sbb
pop
add
add
sahf
sub
inc
fidivs
xlat
sub
std
ror
push
mov
mov
into
repnz
scas
pop
mov
stos
add
je
lcall
pop
jbe
jno
xor
or
je
mov
push
into
rcrl
ss
push
faddp
pop
sti
push
rorb
xor
push
or
pop
das
mov
xor
rolb
dec
xchg
pop
popf
frstor
jo
xchg
cmp
jns
fstps
adc
cwtl
inc
lds
fisubrs
ljmp
inc
or
push
in
rorb
fidivrl
cld
jb
mov
mov
cmpsb
lahf
xchg
mov
xor
cltd
xchg
inc
pop
into
fiaddl
test
int3
pushf
pop
cmp
pop
ljmp
mov
arpl
jp
add
fsubrl
xlat
xchg
xor
push
xchg
sbb
cmpsl
fcoms
sbb
fwait
sub
jmp
lcall
xlat
mov
icebp
repnz
mov
loope
jmp
aam
cmpsl
jecxz
inc
rcrl
push
mov
mov
xchg
repz
cld
incl
cwtl
lahf
rcrb
inc
mov
jmp
insl
xor
add
fstps
xor
mov
mov
sbb
popf
mov
lcall
pop
lods
push
add
test
daa
lock
arpl
fnsave
mulb
lea
lods
dec
out
and
outsl
push
notl
jno
jns
repnz
lret
addr16
mov
xchg
xor
sub
data16
mov
inc
lea
imulb
repnz
gs
scas
adc
scas
mov
sub
inc
cmpsb
test
shr
or
call
inc
iret
inc
test
push
data16
mov
jmp
cwtl
dec
jbe
aad
in
outsb
push
lods
popf
shll
cmp
xor
scas
xor
jg
mov
xchg
hlt
lock
stc
mov
xlat
cmpsb
ljmp
gs
imul
push
jle
loop
lds
or
push
add
pop
mov
push
pop
and
js
mov
dec
pop
push
lret
dec
pop
mov
loop
mov
xlat
cmpsb
jns
outsl
pop
add
jns
test
loope
cmp
inc
addl
pushf
stc
mov
repz
sub
pop
mov
aad
rcll
add
out
xor
xchg
pop
popl
lret
push
popf
push
xor
push
in
shrl
adc
popf
xchg
dec
lret
cs
aaa
sub
cmpsb
adc
ret
sbbl
push
int
mov
test
mov
inc
push
add
sbb
sbb
aad
fsubr
lods
and
push
icebp
adc
test
and
xlat
int
pushf
in
pop
mov
mov
jno
dec
jnp
jge
lock
subb
aaa
push
jp
in
mov
ret
addr16
call
and
fcmovu
pop
mov
shrb
mov
sub
push
pop
movl
push
lret
lods
inc
test
pusha
xchg
lret
repnz
iret
and
stos
inc
nop
dec
mov
mov
push
scas
mov
add
ss
cmc
jo
xchg
lock
stos
ljmp
insl
in
popa
leave
mov
mov
pop
lds
jns
mov
aaa
and
pop
pop
ljmp
lock
inc
inc
repnz
jle
and
into
pop
hlt
sar
mov
pop
adc
or
sub
dec
and
mov
arpl
mov
add
dec
cltd
sbb
push
fisubrs
in
dec
jmp
cltd
repnz
popa
xchg
push
xor
jp
jno
fistps
push
lock
mov
sarl
pop
in
lcall
out
int3
xorl
jae
in
ss
xlat
pop
aaa
aad
mov
mov
sbb
cld
cltd
mov
stc
adc
pop
jb
or
mov
push
cld
pop
sub
and
lret
sbb
mov
xchg
rol
in
xchg
xchg
dec
mov
lock
sub
sti
push
insl
pop
popf
dec
int
add
sub
sti
push
nop
add
mov
mov
repnz
push
iret
sub
cwtl
scas
sbb
scas
outsl
cmp
insl
call
mov
jb
pushaw
xor
jbe
mov
push
test
xchg
dec
xchg
lret
test
out
and
pop
cmp
fcoml
jb
div
cmp
add
jecxz
sbb
das
or
mov
into
sbb
lahf
hlt
fcomi
jecxz
adc
scas
test
xchg
int
jnp
lahf
mov
push
arpl
sahf
jmp
cmpsb
arpl
add
int
mov
and
mov
add
and
xchg
mov
pop
jecxz
iret
sahf
sub
in
push
pushf
xchg
xchg
pushf
test
insb
fldcw
xor
aad
dec
es
iret
inc
hlt
ror
mov
xor
popa
shrl
sbb
loope
sbb
or
shrb
sar
sbb
aam
fcmovne
jns
cs
adc
inc
stc
fimull
adcl
or
sbbb
xor
std
popa
cld
mov
test
jl
mov
pop
test
aaa
add
and
pop
adc
shll
xchg
fnstcw
xchg
mov
and
or
xchg
pusha
inc
aam
xchg
jne
dec
mov
ror
hlt
int3
sbb
mov
push
ret
dec
jmp
xchg
mov
jmp
idivb
lahf
jecxz
hlt
sarb
sbb
jb
mov
adc
inc
jae
jmp
mov
cmp
add
jne
dec
xor
xchg
sbb
fs
insl
push
jge
lcall
mov
add
adc
insb
cmp
mov
shr
icebp
push
cmpl
and
xchg
lods
pop
and
pop
fnstcw
adc
push
add
mov
pushw
sub
imull
sbb
dec
push
jbe
pusha
xchg
repz
or
ss
filds
imul
mov
cmp
loopne
mov
lock
aad
mov
add
sti
bnd
pop
push
mov
mov
hlt
pusha
sub
js
dec
mov
pop
or
sub
mov
add
stc
int3
sub
pop
mov
jns
dec
iret
cltd
incb
or
cmpsl
leave
adc
or
test
pop
pop
mov
xor
fidivl
loopne
inc
mov
xor
and
sbb
mov
adc
dec
and
add
insl
push
in
nop
pusha
cli
xor
sti
inc
andl
arpl
dec
push
int
outsl
paddusw
sahf
or
dec
inc
push
adc
add
mov
es
or
outsl
mov
ja
xlat
inc
ret
sub
cmpsl
stos
fwait
fs
pushf
push
sub
sbb
dec
inc
outsl
adc
sarl
mov
lret
or
push
xor
lods
out
and
lds
mov
add
in
pop
push
ret
cmp
push
test
dec
dec
mov
cwtl
lret
mov
ret
aaa
in
mov
cs
mov
mov
subb
jnp
mov
sub
fstp
cmp
inc
int
jl
adc
popa
mov
hlt
dec
and
mov
push
shl
repz
das
xorl
dec
sub
sub
shrb
rolb
xchg
xlat
jmp
push
dec
mov
jmp
xchg
mov
lcall
adc
cmp
xchg
lret
inc
stos
sbb
cmp
push
lods
or
push
pop
repnz
add
lahf
pop
shrb
and
insl
pop
loopne
dec
or
aas
xchg
xorb
dec
and
aad
popf
mov
shll
add
cmpb
dec
ljmp
mov
outsl
pop
outsl
push
sbb
cwtl
rcll
push
mov
inc
rol
xor
loope
data16
inc
and
stos
sub
loopne
add
out
inc
mov
mov
gs
in
lds
push
imul
mov
in
popa
add
ljmp
jno
adc
adcb
ficoms
mov
jp
shll
sub
inc
pop
popf
nop
repnz
mov
lret
mov
call
movsl
push
mov
mov
push
iret
cmp
insl
pop
into
pushf
push
add
frstor
inc
adc
popa
mov
pop
adc
movsl
incb
ret
loope
cltd
mov
inc
fsubl
shll
pop
xchg
fsubl
ret
insb
dec
pop
sbb
out
sbbb
scas
push
adc
hlt
and
push
inc
and
sub
or
push
add
push
push
jp
sub
out
sbb
and
outsb
arpl
pop
and
cmp
test
lcall
test
sbb
lock
sbb
shlb
mov
pop
sar
shll
negl
push
test
push
hlt
jecxz
or
push
aad
lods
push
jbe
stos
dec
nop
mov
xchg
daa
daa
leave
rcll
in
arpl
fs
adc
movb
add
sbb
mov
push
stos
mov
iret
stos
arpl
fmuls
mov
lock
mov
data16
lods
scas
stos
sbb
fidivs
add
nop
pop
xor
gs
xor
mov
lock
cltd
aad
ret
adc
ficomps
mov
imul
add
aas
jle
or
jl
aad
and
shll
jp
cmpsl
sti
xchg
imul
ror
xorb
mov
fwait
repz
xor
mov
loope
fwait
push
mov
mov
cmp
inc
ss
test
add
xlat
inc
cmp
sbb
inc
adc
stos
add
fsubl
mov
outsl
pop
mov
stos
stos
sub
sub
sarb
ret
mov
dec
out
mov
loope
lods
inc
rol
fisubrs
cmc
pop
push
vmread
sub
pop
nop
ja
jno
sbb
push
bound
xchg
pop
push
mov
dec
inc
fiadds
xchg
inc
push
fldt
orl
dec
cmp
fadd
in
or
clts
mov
mov
inc
add
xor
dec
sub
test
stos
into
jne
xor
dec
cmp
addr16
xchg
scas
xchg
js
mov
outsb
and
in
xchg
cmp
sahf
mov
cmpsl
xchg
inc
sbb
js
loopne
iret
aad
push
lretw
and
xchg
jmp
dec
mov
bound
and
cmp
xchg
jmp
das
dec
outsb
xchg
xchg
cmp
rcl
push
filds
or
sub
xor
dec
fwait
jno
mov
movsb
jb
mov
sub
aas
test
mov
mov
dec
pop
sti
cmp
xor
adc
fistpl
xor
jge
hlt
je
inc
addw
jne
mov
and
sahf
pushf
hlt
in
rcrl
clc
arpl
lahf
add
gs
jmp
xchg
adc
pop
shrl
rclb
fimull
push
xor
aad
mov
int3
divl
ljmp
jecxz
adc
clc
pusha
int3
adc
out
or
fs
xchg
pop
scas
clc
cwtl
sub
mov
add
lahf
cmpsl
mov
jnp
outsb
dec
in
hlt
fcoms
ret
mov
stos
in
mov
fs
leave
gs
push
mov
setle
push
mov
push
nop
loopne
jae
push
ret
out
lret
xchg
loopne
shlb
dec
jbe
ret
std
dec
stos
push
lcall
pushf
fcomps
sbb
or
js
dec
jno
add
aam
int
repz
mov
lret
leave
inc
shl
lods
insb
jne
push
loopne
sub
xchg
pop
pop
js
std
popa
adc
cmpsb
jmp
mov
int
pop
sub
push
lods
push
xchg
adc
mov
aas
in
cmp
nop
cmp
sbb
rol
popa
mov
jae
xchg
test
mov
sbb
fsts
decb
and
lea
xchg
stc
insl
add
inc
sbb
add
or
xchg
imul
jno
mov
jb
add
inc
punpckldq
int
mov
sub
sbb
insl
adc
hlt
dec
push
add
dec
xchg
push
and
push
push
js
mov
sbb
ds
jb
loop
dec
jnp
adc
cltd
movl
jecxz
outsb
jmp
or
add
nop
outsl
nop
lret
shll
cmc
dec
lret
or
push
lret
out
mov
mov
or
rcrl
out
jae
lcall
clc
pop
out
fcomp
dec
push
icebp
lret
push
jmp
outsl
inc
dec
push
push
jae
cmp
sub
push
adc
push
jbe
mov
cwtl
dec
add
pusha
sbb
inc
fsub
ds
ja
outsl
jp
cmp
ss
in
minps
pop
inc
mov
cmp
mov
and
jg
in
or
sbb
jecxz
lahf
xor
sbb
jge
fimull
lret
movsl
shlb
and
sbb
sar
out
mov
popf
adc
arpl
add
mov
loop
cmpsb
mov
push
add
inc
push
jae
nop
in
jno
movsb
movsl
inc
adc
mov
hlt
mov
pop
adc
movsb
rcll
jecxz
aas
xchg
lcall
cwtl
mov
lds
clc
sbb
out
mov
pop
dec
xchg
lret
mov
shll
sub
pop
jmp
dec
mov
jnp
xor
test
int3
imul
dec
dec
or
dec
test
outsb
and
xchg
pop
push
fcmovu
cwtl
jmp
jne
or
xor
aas
int3
or
shrb
cmp
cld
in
add
aam
push
or
test
cmp
pop
into
xchg
xchg
test
pusha
test
cltd
pop
mov
cmp
pop
mov
or
cmp
and
movb
mov
fldl
int
cmp
mull
lock
int
sahf
or
sbb
imul
outsb
cmpsl
fmul
outsb
mov
cmpsb
or
push
jno
mov
aaa
pop
xor
or
pop
push
fs
subl
enter
inc
arpl
lea
sub
and
pop
rorl
gs
and
jecxz
mov
push
push
js
mov
pop
fs
push
jmp
or
repz
pop
adc
stos
sbb
les
xor
ss
mov
je
in
and
and
rorb
jns
dec
lret
and
out
or
out
scas
clc
xor
xchg
repz
jecxz
xchg
jmp
int
xor
cmpsl
dec
inc
scas
and
and
fwait
xchg
mov
adc
push
ss
xor
movsb
mov
pop
mov
dec
int
popa
jp
mov
lret
mov
out
js
mov
loopne
push
jnp
cld
adc
lret
dec
and
and
mov
fdivrp
sbb
mov
in
mov
add
in
ja
das
nop
or
into
rcrl
push
ret
adc
jae
rorb
stos
xor
push
cld
je
stc
xchg
and
nop
dec
imul
xchg
cwtl
jno
fnstcw
xchg
mov
xor
jae
push
mov
push
nop
aam
notb
test
xor
stos
mov
push
lea
add
negl
test
stos
jecxz
add
mov
imul
test
test
mov
fisubs
div
and
fcomi
je
insb
lock
inc
leave
test
shrl
pop
push
mov
aam
fcomip
mov
and
push
pushf
dec
gs
or
mov
das
data16
je
adc
mov
pop
push
push
xchg
lods
xchg
hlt
mov
cmp
pop
sub
fs
cmc
mov
hlt
xchg
fisubrl
out
pop
lods
addr16
sbb
daa
jge
xorb
cmp
int
cltd
dec
mov
daa
fldcw
xlat
or
enter
mov
sti
mov
mov
dec
xchg
pop
roll
data16
and
and
xchg
mov
jae
enter
mov
ds
mov
mov
rcrl
fsts
dec
pop
mov
xchg
aaa
fdivr
inc
cli
ljmp
gs
loopne
sbb
pop
mov
push
fsubrl
cmpsb
mov
shlb
gs
add
in
filds
imul
cmp
cmp
xlat
daa
lock
out
mov
add
push
pop
pop
add
iret
jo
lret
sbb
xor
jle
fstps
ret
dec
xchg
in
add
jg
ret
mov
repz
sbb
insb
mov
test
insb
popf
push
or
outsb
xchg
push
js
fcmove
ja
mov
test
mov
mov
inc
inc
mov
add
mov
xor
movsl
xchg
rcrb
add
add
jno
xchg
or
xchg
incb
sub
mov
rclb
push
lret
dec
pushf
neg
pop
enter
ret
xchg
adc
jp
cmp
push
cmpb
adc
cmpsl
pop
add
lea
sarb
dec
pop
imul
jne
test
inc
nop
fnstenv
pop
out
cmp
xchg
adc
rorl
loop,pt
int
cmpsl
sbb
inc
dec
xchg
enter
mov
pusha
jecxz
das
jecxz
fs
sbb
lock
mov
sbb
mov
lcall
loope
jbe
push
xorl
mov
sub
aaa
lret
mov
and
xor
jmp
imul
jae
imul
adc
lods
pop
lret
pop
or
test
push
or
mov
push
mov
lock
add
pop
cld
mov
adc
in
and
add
loopne
rclb
adc
inc
das
mov
sbb
movsb
mov
cmc
sahf
aam
popf
mov
iret
add
lods
aaa
or
clc
sbb
outsb
or
mov
lods
mov
fidivrl
das
subb
mov
dec
cmpsl
xchg
jge
sub
ret
in
or
sbb
mov
dec
dec
lret
add
jb
aam
sub
push
sub
pusha
sbb
cmp
int
adc
ljmp
dec
jg
cmp
mov
mov
vmread
rclb
in
inc
mov
es
mov
mov
and
inc
mov
sbb
out
repz
sbb
insb
mov
lea
mov
lret
lret
xor
push
jnp
push
rcrb
mov
and
push
xor
inc
or
mov
shll
fsubrl
data16
dec
mov
adc
inc
jl
sti
sub
mov
sbbb
dec
mov
cmp
xchg
jb
sbb
xchg
out
aad
lcall
xchg
sub
mov
or
subb
sub
push
gs
cli
pop
cmp
push
mov
popa
push
push
dec
ret
movsb
sub
insl
add
cmp
scas
dec
ret
sub
xor
daa
fsubr
iret
addb
jae
inc
sbb
cli
lock
xchg
sbb
mov
mov
push
cmc
xchg
je
js
lods
push
xchg
or
cmpl
or
dec
nop
mov
mov
pop
loopne
sub
movsb
loopne
nop
add
arpl
lret
clc
adc
aaa
mov
fistpl
hlt
add
movsb
add
data16
lret
sbb
imul
outsb
test
mov
xchg
cli
inc
js
and
mov
inc
cmp
in
dec
adc
mov
pop
mov
push
mov
outsl
mov
inc
ja
mov
add
cwtl
sub
add
add
idivl
insb
push
ds
cmp
xchg
cmpl
or
imul
repnz
sarb
ret
push
adc
inc
adc
test
cmpsl
sub
push
ja
mov
stc
inc
data16
ret
inc
imul
imul
jnp
mov
sub
adc
xchg
insb
in
cmpsb
mov
xchg
mov
es
inc
sub
cli
jbe
jno
dec
sbb
jnp
jnp
aam
bound
and
jmp
cmpxchg8b
push
mov
inc
sbb
adc
lods
xchg
loope
xlat
outsl
push
sub
lea
sub
daa
loopne
pop
push
js
adc
aas
push
pop
sbb
insb
sbb
std
add
enter
mov
dec
push
push
cmp
add
mov
out
daa
dec
and
lcall
test
xchg
imull
push
cli
stos
sbb
cmp
ja,pn
mov
cld
fstpl
shll
fiadds
insb
movsl
sahf
aaa
ffreep
mov
lods
or
repz
mov
fs
jle
hlt
dec
imul
mov
mov
pop
push
and
pop
xor
mov
cmp
inc
push
and
xorb
aam
dec
adc
in
xor
fiadds
xor
adc
sbb
fisttps
sub
adc
adc
cltd
leave
orb
pop
test
movsb
xchg
xor
mov
addr16
mov
stos
adc
nop
push
shlb
dec
jl
jge
xor
clc
jle
jp
dec
fwait
pop
mov
mov
sub
push
jecxz
or
ret
jecxz
add
mov
xchg
insl
pop
xor
aam
sub
ss
xchg
pop
xchg
lods
lret
mov
or
inc
mov
jno
inc
popa
fstpl
add
pop
dec
jb
mov
lret
and
jecxz
pop
mov
outsl
jns
pushf
jge
inc
sbb
xchg
les
mov
mov
addr16
push
pop
dec
pop
and
sub
mov
mov
sarl
loope
lock
jbe
mov
xor
jmp
dec
add
inc
pop
repnz
pop
and
mov
aam
sahf
mov
fisubl
dec
iret
mov
fdivrl
movsl
push
addr16
push
cld
cmp
xchg
push
test
testb
ret
jns
dec
add
decb
dec
mov
out
movnti
push
fmul
mov
xor
in
test
fsts
call
shr
imul
fisubrs
adc
sbb
mov
fisubrl
movsl
push
and
xlat
popf
ds
or
jmp
inc
test
cmpsl
cltd
imul
pop
jb
cmp
inc
loop
adc
jae
iret
enter
daa
push
inc
ror
mov
rcrl
fistpl
jae
xchg
push
add
mov
mov
push
imulb
and
push
ret
mov
aaa
sbb
xor
inc
mov
sub
pop
sbb
xchg
mov
nop
in
in
mov
push
push
xorl
cmpsb
sahf
andb
lock
repz
sub
dec
ror
testl
sbb
in
pop
inc
mov
lret
push
aam
sub
fmull
daa
or
aaa
push
icebp
out
sbb
int
fmul
jg
pop
shrl
fwait
jl
xlat
mov
add
jecxz
aas
lret
hlt
mov
jmp
cmc
adc
jecxz
push
pop
sti
jo
mov
in
popa
xchg
xor
inc
testl
push
sbb
xor
mov
mov
and
push
sbb
and
cmp
mov
mov
mov
iret
xchg
sarb
stos
pushf
pop
or
push
jne
lret
lods
lock
dec
mov
xor
movsb
aam
and
mov
outsb
adc
or
mull
out
xchg
movsb
mov
cmp
or
pop
adc
shll
inc
mov
pop
loope
xchg
xchg
mov
dec
shll
jg
js
into
mov
add
cs
mov
jnp
dec
xlat
je
cmp
call
jbe
sbbl
or
je
leave
dec
sbb
xorl
jmp
mov
add
in
mov
adc
inc
xchg
sbb
dec
cmp
pop
jp
push
push
call
jecxz
sbb
out
sub
cmpsl
dec
push
test
pusha
or
shll
cmpsl
bound
sub
sti
xor
out
xchg
mov
imul
popa
jmp
out
out
int
andl
loop
aas
cmpsl
sub
mov
popa
outsb
insl
mov
sbb
lods
scas
out
jge
loope
xchg
mov
gs
lahf
mov
fdivrs
adc
sbbl
pop
fsubl
or
or
mov
push
test
xchg
loopne
aad
test
add
lahf
adcb
sbb
mov
popl
mov
dec
push
jp
inc
out
cltd
fwait
or
jb
fidivrl
push
jae
pop
lods
stos
xor
push
mov
popa
sbb
sbb
jecxz
cwtl
fcmove
lods
movsl
xlat
push
leave
dec
addr16
jmp
and
pop
push
stos
sub
xchg
dec
outsb
xchg
fsts
xchg
jb
dec
stc
mov
daa
das
pop
int
dec
aad
pop
and
mov
push
pushf
cmp
mov
xchg
aam
in
cs
xor
daa
daa
or
adc
mov
and
out
and
jmp
mov
sbb
mov
in
mov
lods
ljmp
aaa
cld
push
mov
sarl
mov
push
in
or
pop
loopne
push
mov
add
adc
cwtl
popf
in
jmp
movsb
test
dec
movsb
and
push
mov
inc
mov
outsl
xor
jge
or
in
test
in
cmpsb
mov
sbb
and
cmc
mov
jp
mov
push
into
addr16
push
out
push
push
push
int
cmp
in
mov
xchg
cmpsb
scas
ss
orl
inc
dec
push
pusha
sbb
lods
in
cwtl
mov
in
and
test
ss
add
aaa
sti
repz
mov
fisttpl
cmp
add
test
in
push
push
hlt
pusha
imul
xchg
outsl
jb
mov
sahf
jae
cli
xchg
and
loop
jle
inc
sbb
adc
sbb
pushf
shlb
stos
into
push
sbb
sbb
out
cli
push
ret
adc
int3
ret
out
inc
pop
xchg
lret
leave
xor
fscale
jnp
test
repnz
xchg
sub
mov
xchg
in
aad
pushf
inc
or
push
addl
sub
xchg
cmpb
in
gs
cmp
jnp
cld
je
and
mov
dec
mov
lea
pop
daa
mov
jno
nop
out
add
mov
sbb
adc
inc
movsl
jge
pushf
aas
shll
fisttpll
jle
inc
add
adc
ds
or
push
inc
fwait
or
xor
dec
stos
aam
lods
jge
push
jmp
xchg
shlb
mov
adc
sbb
xchg
shlb
push
aas
mov
loope
clc
filds
fisttps
daa
repnz
popa
pop
loope
rol
xchg
pop
mov
movsl
sahf
ret
sub
dec
sahf
dec
test
push
xor
in
cli
or
add
dec
inc
xorb
ret
fsub
wrmsr
push
fildll
add
jle
mov
xor
xor
lods
sbb
mov
push
inc
jns
addr16
int
mov
jne
sbb
aaa
iret
call
shl
ffree
addl
fisubrl
sbb
outsl
push
inc
cltd
in
inc
ljmp
cs
adc
jno
es
pop
sbb
dec
call
dec
out
or
add
lods
inc
jl
pop
pop
out
mov
jle
cmp
ss
into
mov
add
mov
or
mov
scas
scas
mov
pop
add
lcall
out
data16
jnp
mov
dec
rcrb
push
addl
cmp
gs
adc
into
push
cmp
inc
aas
add
hlt
lock
and
push
sahf
and
and
mov
jb
jmp
add
mov
test
mov
add
push
mov
jne
hlt
jmp
jmp
cmp
ds
push
sarb
loop
xchg
aad
mov
mov
add
jecxz
push
outsl
push
sbb
push
and
push
sti
fs
inc
pop
mov
sub
sub
inc
out
jg
ljmp
or
div
xchg
jo
adc
sub
xor
out
loop
push
jb
adc
shrb
ja
xchg
dec
dec
mov
sub
aam
pop
dec
mov
sub
xor
icebp
pop
fidivrl
dec
addb
mov
add
dec
and
push
stc
push
mov
xchg
dec
sub
arpl
dec
cmp
jl
add
pop
sti
in
mov
xchg
mov
mov
xchg
and
int
imul
mov
add
cmp
sbb
subb
xchg
mov
fisttps
into
and
lret
mov
or
subb
xchg
or
cmp
mov
lret
insb
fwait
cmp
clc
mov
xchg
insb
push
insb
xor
cltd
fildl
dec
out
out
xorl
out
out
dec
ss
or
inc
sti
addr16
aam
outsl
lea
test
je
push
mov
jb
jecxz
stc
aas
pop
sub
imul
mov
hlt
andl
mov
push
mov
lock
jecxz
shrl
sub
pop
or
add
fmul
cld
nop
sub
cmpb
push
cmpsb
adc
pushf
add
adc
ljmp
repz
ret
test
mov
xor
mov
fisubl
stos
mov
sub
jecxz
adc
inc
dec
cmp
mov
cld
sbb
pop
push
mov
pop
push
cmp
add
and
repz
cld
xchg
mov
ret
xor
cmp
gs
int3
fisttpll
cli
add
sbb
outsb
stc
mov
add
inc
xor
pop
in
mov
pop
jp
fs
imul
or
es
push
sbb
sub
fcomip
je
outsb
mov
fwait
icebp
aas
out
sub
mov
or
push
push
clc
mov
jge
das
inc
xchg
mov
aad
cmp
pusha
idivb
stos
xor
mov
cld
or
xor
repnz
cmp
mov
mov
sub
nop
adc
pusha
bound
inc
jmp
mov
cmc
or
mov
or
pop
sahf
test
cmp
jp
pop
rolb
add
insl
and
dec
dec
fbld
adc
jle
push
push
push
dec
mov
mov
pop
lods
jb
push
das
mov
stos
iret
dec
stos
movsb
xchg
lds
lods
ds
out
dec
and
sbb
xor
xchg
xorl
push
adc
sbb
push
pop
sub
clc
lret
jnp
dec
jge
mov
out
nop
shll
mov
xchg
lock
push
orl
adc
mov
stc
aam
cmp
jg
ret
arpl
outsl
dec
lcall
leave
xchg
cwtl
jnp
mov
sahf
loope
cmp
inc
pop
loop
mov
test
push
dec
outsb
fldl
stc
mov
lods
test
es
sahf
and
icebp
xor
xchg
xor
xor
xchg
std
add
data16
sub
mov
pop
mov
cmp
ds
pop
push
std
jnp
cmpsb
repnz
ds
cmp
ret
pop
neg
mov
add
mov
cmp
fldt
xchg
lds
inc
cs
dec
loope
shlb
xchg
aaa
xlat
stc
adc
xchg
fnsave
jle
jns
scas
xor
ss
cmpsb
stc
arpl
xchg
mov
cmp
pop
add
notl
in
stos
les
aas
sub
mov
cld
mov
aad
testl
mov
inc
sarl
inc
adc
xchg
pop
stos
xchg
sti
push
xchg
fisubrl
add
lods
sahf
cmpsb
mov
mov
mov
mov
fwait
lock
xor
mov
call
pop
push
or
pop
outsb
push
test
and
cmp
pop
rolb
lea
xchg
mov
and
das
sti
call
sbb
jle
sahf
and
sbb
icebp
mov
shr
push
dec
pop
jmp
fldcw
sub
mov
icebp
adc
or
cmp
dec
jg
pop
sahf
or
into
movsb
or
or
mov
hlt
xor
push
push
and
adc
in
cmp
cli
enter
hlt
cmp
or
adc
ret
ret
sbb
icebp
lods
movq
out
and
sbb
xchg
ss
sti
pusha
shlb
pop
dec
roll
leave
cmc
mov
pop
std
popf
xchg
pop
testl
shl
pushf
gs
push
out
inc
loop
jecxz
jp
mov
in
sahf
pop
imul
loope
dec
pop
lods
inc
sub
mov
sbb
and
hlt
lods
push
mov
daa
jg
imul
imul
dec
out
and
push
mov
push
and
pop
mulb
sbbb
adc
pusha
dec
push
ret
testb
mov
cmove
or
icebp
aad
inc
push
or
fnstcw
lret
ficoml
dec
mov
jns
mov
mov
sub
ret
lret
test
jne
add
inc
mov
sub
loope
aaa
or
aad
cwtl
scas
push
lock
inc
dec
popl
adc
js
bound
push
daa
add
jg
pop
or
jmp
movsb
std
cmpsl
mov
ljmp
or
in
sbb
mov
sahf
push
xchg
ja
out
xchg
cmp
xchg
mov
lret
das
jle
sub
jg
dec
jl
repnz
lahf
call
test
jae
inc
push
pop
or
mov
and
mov
sub
push
dec
sub
into
popf
pop
or
cmpsb
sbb
sub
sarl
pop
dec
add
test
inc
jle
dec
sahf
outsl
mov
decl
push
test
sarb
popf
test
cmp
orb
rorl
out
fcmovu
in
mov
lea
mov
mov
into
pop
and
ror
test
mov
mov
or
addr16
mov
aas
sti
mov
mov
ret
pop
mov
inc
or
sub
bound
mov
leave
stc
sahf
pushl
pop
daa
daa
jae
mov
sbb
dec
jg
sub
movsl
sarl
push
cmovg
mov
cmp
dec
mov
int
xchg
insl
movsb
dec
mov
and
sahf
scas
and
add
jmp
rorb
cmp
iret
mov
enter
and
pop
adc
ja
push
pop
into
lock
sub
and
xor
and
dec
cmp
and
push
addb
popf
pop
add
pop
sbb
cmp
mov
and
mov
addb
inc
aam
mov
aam
cmp
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
faddp
movsl
and
mov
lods
fwait
xor
cwtl
lea
in
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
test
lods
decb
pop
mov
rol
repz
push
dec
movntq
out
ljmp
pop
dec
add
mov
call
mov
pop
add
loopne
and
ficomps
jg
cwtl
lea
xlat
aas
test
stos
ss
xchg
jp
mov
push
ret
mov
cmp
push
outsl
ja
sub
dec
dec
inc
inc
cwtl
in
jo
dec
dec
call
scas
pop
mov
lcall
mov
jp
mov
lcall
jp
aad
mov
loop
adc
jns
jo
cmp
lcall
cltd
lock
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
rorl
xchg
fst
jp
insb
jg
cwtl
lea
dec
lock
lcall
mov
sub
xchg
fwait
xor
cwtl
lea
lods
lock
fwait
xor
lea
lods
lock
fwait
xor
cwtl
lea
test
xchg
fwait
xor
test
dec
inc
test
and
fmuls
inc
mov
and
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
lea
insl
sti
xchg
into
or
lea
lods
lock
fwait
xor
cwtl
lea
lods
call
insb
jg
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
std
cmc
ds
lods
lock
sub
and
lea
lods
lock
fwait
xor
int3
ret
lods
lock
fwait
adc
ljmp
fwait
push
and
lea
lods
lock
icebp
xor
lea
lods
lock
fwait
xor
mov
das
sub
xchg
xchg
fwait
xor
mov
lock
fwait
mov
insb
jg
cwtl
lea
lods
lock
fwait
xor
pop
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
lods
lock
fwait
xor
cwtl
lea
jecxz
xchg
mov
and
das
nop
xor
mov
push
nop
and
mov
sbb
jb
test
mov
loope
movlps
pop
outsl
pop
movsb
js
mov
add
rorl
xchg
cwtl
data16
sbb
xor
addl
jno
stos
dec
roll
aam
dec
sub
leave
dec
jl
or
leave
xchg
push
push
enter
push
mov
in
jecxz
test
xor
mov
adc
shr
jns
scas
or
jle
jno
ljmp
pop
imul
test
iret
out
hlt
cmp
mov
and
dec
push
dec
pop
fdivrs
inc
inc
int3
mov
out
inc
sbb
cmp
pop
clc
xchg
mov
scas
and
clc
in
fs
jge
and
and
mov
stc
push
cmp
push
aaa
in
das
add
jne
ljmp
sarb
xor
outsb
mov
in
cmp
ss
xor
jge
adc
inc
mov
adc
les
out
bound
dec
aaa
jno
xlat
js
aam
sub
push
xor
xchg
test
out
mov
ror
mov
jge
mov
jp
pop
dec
add
in
add
arpl
mov
xchg
leave
in
movsl
mov
xchg
or
pop
push
in
outsl
lcall
mov
and
jle
je
adc
mov
mov
xor
inc
shl
mov
or
leave
pop
imull
xchg
scas
add
addr16
xchg
aas
insl
push
dec
jg
jb
sub
les
shlb
jnp
roll
mov
movsl
outsb
or
adc
or
negb
mov
and
xchg
xchg
pop
mov
rorb
push
add
outsb
stc
shrl
shrb
sbbl
out
inc
push
dec
pushf
and
call
pop
ds
xchg
lcall
add
gs
stc
push
add
cmp
add
mov
dec
inc
mov
cmp
mov
inc
and
jb
push
ds
inc
stc
js
adcb
sub
xchg
rcrl
push
xor
sub
iret
daa
insb
fcoml
pop
sub
fdivp
data16
xchg
test
adc
subb
mov
icebp
lcall
inc
jecxz
ss
aad
xchg
stos
lods
inc
mov
lcall
mov
adc
lods
decl
out
aam
inc
xor
das
sbb
push
xor
sbb
mov
shll
dec
pop
mov
scas
call
shlb
xchg
mov
shr
and
daa
mov
sbb
lods
mov
repnz
clc
push
xlat
inc
mov
add
cld
scas
jge
sbb
cmp
cmp
xchg
inc
rclb
dec
sub
dec
fnsave
sbb
push
jmp
fdivl
outsl
sbb
enter
scas
fisttps
stc
fiaddl
jle
ret
jb
or
adc
icebp
addr16
cli
jnp
in
inc
pop
movsb
packssdw
stos
xchg
pop
arpl
outsl
ret
movups
mov
inc
out
enter
sbb
inc
shrb
cmp
mov
lea
stc
pop
push
jmpw
pusha
mov
mov
fcmovnb
test
push
cld
mov
sbb
scas
orl
mov
cs
xchg
incb
or
das
ret
jns
pop
arpl
ficompl
aaa
pop
outsb
int3
push
jae
mov
in
xor
jno
mov
push
mov
adc
and
dec
inc
cli
jns
nop
pusha
sub
ljmp
fcoml
cmpsb
leave
das
inc
ds
jae
int
testb
fs
rclb
rorl
call
insb
jne
dec
mov
mov
scas
inc
mov
sbb
sbb
pushf
fcomps
sub
out
popf
push
inc
out
faddp
cmc
mov
shlb
cmpsl
fwait
fs
push
insl
aaa
test
subl
loop
dec
outsl
push
sbb
push
pushl
push
and
cmp
repnz
add
cli
mov
pop
add
loope
xlat
loop
or
popa
fdivrl
mov
je
adc
and
cmp
pop
jo
rorb
sub
clc
mov
out
enter
mov
ret
sub
push
or
cmp
mov
lock
iret
mov
pop
aam
int
lahf
sub
push
fisubrl
out
imul
das
mov
outsl
nop
pop
adc
out
xor
sub
movntq
imul
adc
and
mov
cmp
mov
shll
call
mov
xchg
dec
psrlq
loop
adc
adc
shr
scas
lret
mul
lret
sti
lea
shrl
sahf
rcrb
jl
cmpsl
hlt
and
cs
lcall
sub
adc
lret
adcb
cmp
cld
cli
mov
adc
leave
clc
jno
pop
mov
jo
test
and
aaa
popf
insl
or
mov
sub
xor
push
outsb
fwait
pop
jl
in
sub
in
xor
jg
or
aam
pop
lret
pop
cmp
cmpsb
outsb
push
mov
fadds
lds
fcompl
fists
sbb
popf
mov
jmp
fistpl
cs
sub
cmp
into
mov
rorl
fdivs
push
ljmp
aas
xor
int3
fsubrl
push
loope
aam
test
dec
lret
aaa
xchg
out
jl
add
pop
out
into
fists
fmull
jno
loopne
dec
aad
cld
lods
enter
lods
out
out
subl
push
jbe
push
addl
dec
adc
or
sbb
ja
dec
and
movsb
hlt
ror
icebp
clc
hlt
mov
dec
orb
or
mov
dec
push
mov
xor
mov
mov
scas
lcall
adc
out
ret
xlat
into
inc
adc
cld
xorl
jl
inc
mov
push
pop
mov
mov
mov
addr16
cmp
mov
insb
icebp
and
jne
inc
push
adc
pushf
ja
sub
outsl
sbb
mov
dec
jge,pn
movsl
ja
es
nop
scas
bound
mov
and
loope
hlt
js
cmpsl
aas
in
mov
push
xchg
fistpl
xor
or
pop
and
sub
addr16
xchg
stc
divb
and
mov
ud0
jle
outsb
movsl
fs
call
in
mov
cmp
push
popf
add
jle
inc
cmpsl
mov
in
sub
sub
and
mov
xchg
cld
dec
ja
mov
out
idivb
lea
xor
push
movsb
bound
in
add
insb
adc
add
and
sub
and
sub
xor
lods
mov
push
cmc
sbb
out
adc
pushf
sub
xchg
sti
xlat
mov
es
mov
pop
or
and
jmp
jp
push
adcb
lcall
add
and
es
je
xor
inc
cmp
cs
or
in
fcmovb
popa
shlb
add
pop
sbb
cmp
leave
sub
loopne
inc
stos
mov
sub
fwait
lcall
scas
xor
xor
mov
inc
ds
sti
dec
es
movsl
jb
out
mov
mov
subb
mov
push
sub
out
jno
mov
data16
sti
pop
cwtl
adc
out
pushf
out
or
idiv
mov
std
dec
cs
adc
in
and
xor
mov
outsb
pop
mov
ds
cltd
aas
dec
subl
mov
sub
xor
in
push
fnsave
fs
xorb
mov
psubq
sbb
aad
or
or
jle
sbb
push
sbb
sbb
mov
subl
sbb
out
ret
mov
cmp
push
in
stos
lea
fiaddl
cmpl
and
dec
pop
add
adc
in
mov
sbb
sub
rcrl
ds
xor
inc
or
mov
lret
xchg
aad
jp
dec
movsl
xor
std
mov
cld
pop
mov
xchg
push
imulb
aaa
sub
inc
scas
gs
das
loopne
xor
push
rcrb
pop
xor
and
loope
lods
scas
fwait
sbb
lret
xor
xchg
and
enter
xlat
int
test
jmp
jae
sbb
push
idivb
arpl
shl
in
stos
pushf
pop
and
scas
adc
test
sbb
dec
lret
outsb
jno
xor
pop
or
fadds
push
andl
jno
call
loop
inc
bound
adc
in
lock
fiadds
sarl
xchg
cmpsb
fidivrl
jl
shl
lret
pop
mov
icebp
push
push
jns
dec
sti
aas
dec
into
in
ljmp
sub
jno
cmpsl
and
ret
outsl
push
enter
add
ss
test
sub
jae
pop
sahf
andl
loope
rclb
xchg
pop
stos
xchg
test
sbb
cltd
lea
cld
push
inc
ds
cmpb
aad
mov
push
jno
jmp
or
push
sbb
push
mov
xor
xchg
adc
and
lahf
cltd
enter
push
xor
add
int
dec
inc
push
dec
mov
hlt
jnp
xchg
out
dec
std
pop
int3
xor
out
mov
push
push
sub
pop
push
mov
popf
cmpl
aas
cmp
mov
pop
pop
leave
pop
jo
pop
pop
jb
xlat
jo
or
push
lods
push
ss
insb
movsl
rorl
test
push
jae
ffree
test
xlat
jb
aaa
gs
push
cmc
ja
sbb
xchg
scas
bound
shrb
cmp
sub
sbb
xor
adc
shl
shll
ljmp
jb
cmc
mov
inc
lods
in
popa
imul
loop
sbb
mov
adc
repz
mov
dec
lods
mov
push
dec
stos
leave
adc
push
mov
popf
fnstenv
xchg
std
sub
repnz
xchg
jge
sbb
movsl
cwtl
out
insb
pusha
outsb
shrl
imul
sbb
popf
aad
fistpll
or
testl
mov
add
dec
lods
ret
fists
loop
lcall
es
test
shll
pop
adc
mov
cmp
ret
adc
cld
out
faddl
push
cmp
xchg
hlt
dec
rcrb
xchg
cmp
sub
pop
mov
cwtl
xchg
loop
cmp
adc
cmpsl
xor
push
pop
mov
out
mov
arpl
fdivs
out
jne
pusha
jmp
push
cwtl
inc
idivl
dec
aaa
out
jno
dec
jge
sbb
call
mov
mov
sarb
add
pop
das
push
push
adcb
movsl
add
add
adc
pop
adc
inc
mov
pop
leave
loop
stos
je
cmp
roll
out
xchg
mov
sti
pusha
mov
sbb
push
popf
imul
cmp
xor
incb
mov
mov
dec
rorb
and
sti
xchg
adc
mov
and
sbb
mov
mov
or
mov
cmpsl
mov
push
mov
and
and
sub
mov
call
rcrl
add
cmp
dec
aam
sub
push
jmp
sub
mov
insl
lahf
js
cs
popa
out
push
cld
lret
mov
test
push
mov
lcall
cltd
mov
mov
adc
pusha
shrl
in
test
bound
jmp
sub
dec
mov
mov
rcll
push
fcmovnb
pop
iret
xlat
sub
out
push
repnz
mov
and
adc
ret
insl
push
and
imul
sbb
dec
dec
push
push
lea
in
cmpsl
push
cli
clc
pop
push
mov
sbb
enter
add
mov
dec
stos
push
out
mov
lea
out
mov
movl
fs
xchg
fsubl
pop
add
pusha
lcall
push
nop
fidivrl
xchg
in
push
cmp
push
icebp
sub
and
and
rorl
xchg
movsl
addr16
mov
mov
je
iret
popa
push
lret
add
loope
loop
mov
xchg
xchg
js
jnp
mov
dec
push
add
stc
addb
xor
xor
push
out
xchg
mov
mov
daa
js
mov
mov
jo
iret
sub
sbb
imul
push
xchg
or
adc
push
mov
xor
dec
shlb
cld
jmp
mov
stos
inc
pop
imul
aaa
inc
std
stos
inc
mov
mov
pop
sbb
xor
jnp
stos
dec
adc
push
inc
stos
pusha
pop
mov
pop
mov
subb
add
push
loope
mov
jb
nop
fmull
pop
lds
push
mov
sub
sbb
xor
mov
push
mov
and
inc
and
je
and
mov
and
mov
mov
pusha
pop
or
mov
adc
fisubs
jp
dec
xchg
jae
aaa
dec
dec
jb
mov
test
pop
mov
loop
mov
call
xchg
out
sub
les
outsb
mov
sarb
test
inc
jbe
dec
jle
mov
jo
adc
stos
jns
popf
movsb
inc
test
pusha
shll
pusha
pop
rorl
lcall
and
loop
mov
mov
outsb
push
add
das
or
mov
dec
ficomps
push
aad
repnz
test
mov
fcomi
insb
cmp
xchg
lock
adc
ret
cli
test
add
sbbl
fisttpl
sub
sbb
mov
inc
sbb
xchg
dec
repnz
sbb
vminss
shlb
fs
aaa
inc
mov
xor
sbb
xchg
mov
bound
dec
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
