push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
ljmp
mov
sub
out
ret
and
fs
frstor
and
push
std
rcll
fsubrp
and
pop
pop
sti
add
scas
mov
leave
popf
mov
cmp
mov
out
adc
popf
out
cld
and
push
adc
sbb
daa
pushf
jae
pop
push
xor
sub
in
lock
mov
je
movsb
pop
js
inc
outsb
dec
xchg
sub
test
pop
fsubrl
or
add
jb
cmp
inc
and
test
shrb
add
pop
cmp
cltd
cmp
sbb
jmp
movsb
ja
fistpl
inc
lsl
sbbl
cld
repz
imul
xrelease
loope
pushf
pop
sbbl
fdiv
cmp
or
inc
fs
iret
xor
popa
stos
cltd
cmp
push
push
sub
test
rcrb
aaa
cmc
add
xchg
jg
outsb
sarb
ret
shlb
push
out
aad
adc
js
cmovo
lock
push
repnz
aas
lock
inc
icebp
insl
sbb
pop
je
lock
mov
daa
mov
outsl
or
ret
dec
lock
sub
mov
xor
sbb
test
dec
dec
adc
data16
sub
pop
lds
sub
pushf
enter
in
jecxz
shlb
dec
push
push
mov
sbb
popf
sbb
or
xor
loopne
repz
sbb
xor
repnz
jae
aad
scas
scas
or
adc
rcrb
mov
jnp
fwait
push
or
shl
popf
shl
or
int
sarb
je
jmp
out
mov
xor
sarw
add
push
cmp
and
push
aas
cmpsb
out
loop
mull
pusha
or
mov
mov
push
cmp
pop
fwait
pop
fcoml
push
mov
or
jl
mov
push
add
fs
dec
sar
out
pop
or
add
mov
push
insb
test
in
test
imul
dec
movsb
fucomip
mov
test
sub
or
cs
loope
inc
xchg
or
inc
or
push
stc
aaa
dec
mov
hlt
outsb
push
pushf
pusha
popf
insb
dec
out
add
popf
ss
daa
call
pop
movsl
adc
lods
push
das
xor
fldl
or
mov
inc
insb
movb
aad
clc
loopne
fs
rcll
push
sub
movsb
or
cmpsb
push
jle
in
mov
out
imul
pop
mov
xlat
dec
adc
filds
pop
popw
lret
mov
das
dec
push
and
sub
pop
jle
in
xlat
jmp
add
mov
sbb
inc
test
or
or
ret
inc
and
jl
rcrl
aas
ret
js
in
jns
or
out
xchg
mov
insl
mov
mov
mov
orb
fs
dec
lods
cltd
test
in
frstor
lods
out
jns
std
sub
add
sbb
ljmp
stos
mov
cmp
jns
rcrb
in
dec
inc
jae
jg
lock
inc
mov
lret
mov
std
dec
fcmovbe
dec
jp
outsb
inc
enter
lds
aaa
cmp
fidivs
push
inc
pop
sahf
out
dec
mov
push
cld
pop
addr16
push
mov
mov
cmc
jnp
cli
inc
out
add
cmp
lret
repnz
das
xchg
xchg
and
out
pushf
push
outsl
or
mov
out
add
cmc
leave
jbe
pop
lods
pop
lds
fs
aam
test
jno
cs
divl
inc
hlt
mov
aam
push
cmp
inc
out
pop
pop
sbb
add
arpl
xchg
dec
repnz
xor
sub
in
add
adc
sbb
jg
les
dec
mov
aam
jbe
xor
fisubl
xor
iret
aad
ret
popa
push
mov
and
xor
and
push
dec
test
inc
ret
dec
popf
fwait
or
push
loope
movsl
je
sub
pushf
scas
mov
pop
lock
or
and
loope
ljmp
shll
dec
xchg
popf
jbe
xor
add
dec
cmp
push
add
mov
xchg
inc
arpl
mov
rolb
imul
repnz
xchg
sub
leave
pop
arpl
jg
add
out
mov
out
psubw
test
jae
insl
push
test
in
jmp
mov
in
or
fnstenv
out
hlt
ljmp
push
mov
pop
fcomip
jb
loope
xchg
and
pushf
gs
mov
jecxz
ficoms
mov
sub
loopne
sbb
sahf
inc
xlat
popl
enter
popf
jbe
xchg
sbb
sub
push
xor
adc
cmp
aam
inc
sbbb
pop
lea
xchg
dec
jno
mov
out
push
xchg
fadds
pop
push
cmp
sbb
sbb
mov
xor
dec
mov
std
sbb
mov
sbb
lahf
daa
cs
xchg
mov
out
stos
sbb
xchg
je
sbb
out
insb
or
sarb
inc
mov
lret
hlt
fs
repz
sbb
mov
imul
or
jno
movsl
in
cmp
xchg
mov
push
inc
adc
repz
dec
scas
sarl
ret
add
popf
mov
clc
icebp
lahf
arpl
sub
jae
iret
jge
shll
mov
xchg
mov
lock
mov
jg
outsb
xor
jo
xchg
cmc
filds
fisttpl
jl
cmp
push
loope
aam
aaa
aas
out
sbb
movsl
loop
clc
ret
out
jae
cmp
mov
scas
xor
rcrb
cmp
ret
xor
push
push
jno
orl
popa
dec
pop
or
pop
in
in
les
jns
icebp
les
loop
sub
inc
jo
or
call
fs
mov
hlt
sub
mov
pop
mov
bound
sub
jmp
jno
ljmp
dec
dec
fs
or
jnp
inc
sbb
faddp
in
xchg
pop
mov
xor
jl
mov
cmp
sahf
mov
inc
lret
test
sbb
fwait
gs
prefetcht0
inc
push
in
dec
lret
adc
pop
push
ja
mov
fistps
mov
dec
ljmp
daa
jmp
push
cmpsl
dec
push
jmp
inc
stos
push
aaa
aam
nop
inc
adc
mov
shl
sub
mov
stos
rcrl
mov
fstpt
sahf
xorl
push
cmpsl
or
add
das
dec
addr16
fldenv
mov
std
pop
add
sub
sbb
js
rcrl
dec
mov
or
xchg
imul
nop
loopne
and
into
mov
dec
outsl
outsb
adc
iret
lret
inc
add
lock
fidivs
sahf
popf
mov
test
adc
dec
cwtl
mov
pop
dec
pop
sbb
xchg
mov
jne
pop
mov
sbb
mov
mov
icebp
fs
mov
cld
dec
jb
sub
lods
out
mov
dec
and
or
pusha
cmp
mov
jo
mov
mov
sbb
outsb
push
movsb
lret
icebp
mov
pushf
cmp
ds
movsl
clc
xor
in
or
std
inc
movsb
scas
dec
stos
in
jne
out
iret
in
bound
es
in
cmp
mov
leave
dec
push
push
push
aam
out
add
xchg
push
daa
pop
in
lea
fwait
and
in
daa
or
das
insb
cs
pusha
xchg
mov
into
adc
lods
xchg
sbb
inc
outsb
or
das
xchg
ja
leave
cmp
sub
sub
lock
popa
test
fisubl
sub
in
pop
ljmp
xchg
insl
loopne
xchg
jle
notl
test
push
loope
imul
push
addr16
mov
add
mov
xor
sbb
gs
or
mov
out
testl
aas
clc
js
mov
push
cmp
inc
dec
and
mov
out
or
sbb
sub
imul
mov
out
cwtl
test
stc
cmpsb
cmc
and
movsb
push
lcall
sarl
mov
push
mov
loope
lret
movb
push
out
sbb
outsb
inc
repnz
sbb
pop
shlb
add
and
ja
xchg
movsl
add
out
popf
mov
sbb
idivb
in
mov
cmp
mov
add
sub
fsubrl
loopne
inc
jg
cmp
dec
fs
loope
cli
xchg
push
std
stos
xorb
rcrl
adc
loope
aam
js
sbb
flds
mov
repnz
mov
insb
fsubr
int3
sti
lds
mov
ja
sti
sbb
ljmp
or
dec
jb
and
jecxz
fcmovne
jne
out
cmp
mov
pusha
in
cmp
dec
jp
jg
ficoml
rolb
jb
rcl
lods
add
jbe
xor
mov
add
sbb
and
arpl
xlat
adc
jo
cmp
jmp
pop
fldl
lahf
pop
insl
inc
adc
xchg
cmpsl
repnz
inc
mov
ja
mov
sbb
cmp
jnp
fsubr
pop
inc
inc
and
repnz
xlat
lcall
fcomps
xchg
and
es
sbb
out
out
or
sub
cld
jmp
push
movsb
lds
jl
pop
inc
nop
dec
test
mov
aaa
xchg
inc
rcr
xchg
push
mov
xchg
stos
clc
fsubrs
sahf
xor
std
push
mov
push
stc
mov
bnd
push
es
jp
mov
dec
mov
dec
pop
imul
and
outsb
xor
pushf
mov
push
jmp
jmp
insb
jne
inc
fs
push
leave
ja
neg
mov
inc
dec
stos
test
dec
test
sub
es
pop
xorb
push
and
or
mov
pop
mov
sbb
pop
add
jae
std
sbb
pop
and
sbb
xor
ds
pop
fs
adc
ja
cmp
pop
test
jg
cmp
in
sub
popf
lds
cmp
icebp
jne
pop
mov
cmp
or
inc
xchg
test
daa
popl
push
call
sarb
movsl
stos
xor
inc
icebp
das
sub
jecxz
into
cmc
outsb
test
xchg
call
jmp
out
xchg
sbb
call
inc
add
pop
orb
mov
fisttps
jae
and
and
sub
and
mov
fistps
stos
jnp
cwtl
jb
js
pop
lret
mov
inc
push
ljmp
popa
push
and
lods
enter
aam
test
sub
movsb
mov
cmp
dec
adc
and
test
or
rolb
xchg
arpl
ficomps
add
xchg
ret
pushf
push
pop
cmp
subl
mov
xlat
sub
add
mov
xchg
inc
adc
jmp
push
xchg
fucomp
rcll
out
dec
ret
mov
loope
pop
les
ds
xchg
sbb
lods
out
mov
jo
fwait
xchg
repz
icebp
popa
dec
mov
lods
popa
fidivrs
and
mov
lret
cld
sbb
mov
push
cmpsl
andb
dec
data16
ret
call
sbb
mov
push
dec
inc
popf
xchg
fwait
cmp
dec
icebp
sbb
push
or
mov
sbb
add
stos
gs
nop
sub
rclb
pop
in
arpl
cmp
ss
icebp
pop
loop
loope
push
mov
push
dec
pop
mov
jmp
dec
aaa
cmp
xor
lea
sub
fs
inc
fldt
and
push
inc
dec
call
and
mov
adc
mov
jbe
push
and
mov
cmp
lods
aas
xor
xchg
and
jg
mov
or
out
mov
push
mov
cmp
inc
dec
and
fldcw
insl
stc
jg
push
sbb
iret
ljmp
mov
arpl
pushf
and
test
loopne
loope
into
es
loop
adc
pop
loopne
jmp
cmp
xchg
xor
ljmp
xor
inc
sub
cmp
shrl
or
daa
es
les
hlt
cli
jp
mov
pop
ror
xlat
mov
je
xchg
imul
lds
sub
gs
adc
dec
jnp
pop
mov
or
in
addl
pop
push
insb
mov
leave
pop
repz
jg
rol
adc
mulb
negl
add
push
sti
ds
cmp
aam
std
pop
imul
stc
in
cs
inc
jbe
adc
dec
push
int3
push
fcoml
jbe
jmp
jmp
add
call
cs
inc
cld
aaa
vmwrite
pushl
sbb
add
hlt
outsb
iret
push
add
mov
fstl
sub
int
sbb
and
jnp
or
mov
xchg
lcall
or
push
pusha
mov
adc
sbb
fdivrp
bnd
push
jns
dec
data16
ss
mov
or
dec
cmp
cmpsb
lret
cmp
out
addb
xchg
and
in
loopne
aam
mov
pop
inc
leave
mov
sbb
push
add
jne
sbb
dec
push
test
nop
pop
or
and
fmull
cmp
inc
cmpsl
lret
jmp
push
mov
inc
out
nop
lret
test
lret
push
jl
or
xorps
mov
aas
xor
or
mov
cmp
lods
push
cmpsb
cmpb
scas
cmpsl
inc
pushf
mov
setbe
lcall
clc
ss
adc
sahf
es
mov
test
dec
push
mov
outsb
and
push
xchg
push
xor
mov
sub
mov
fistpll
lret
nop
shrl
lods
hlt
je
jo
mov
xor
fs
adc
fs
inc
and
stos
mov
addr16
mov
push
je
clc
loop
sub
or
movsb
lds
icebp
lods
and
and
mov
sbb
adc
cmpsb
imul
out
push
psubw
enter
mov
sub
addl
mov
outsb
shrb
je
sbbb
add
push
push
loopne
pop
mov
jno
nop
mov
sub
test
inc
mov
scas
scas
push
sbb
cmp
jne
stc
push
out
pop
sbb
ja
icebp
fstpl
enter
aaa
movsb
dec
or
pop
or
mov
lods
mov
addr16
sbb
aaa
and
mov
imul
ret
mov
popa
test
mov
push
stos
mull
jb
test
mov
repz
repnz
into
loop
inc
xor
jmp
lea
push
scas
sbb
imul
mov
std
je
mov
cld
xor
inc
jl
lahf
scas
push
cmpsl
adc
dec
divl
add
jb
cld
dec
inc
and
fwait
loope
sbb
xchg
jle
outsl
push
out
repz
or
addl
stos
jmp
fldt
sbb
pop
inc
hlt
dec
dec
mov
xor
repnz
sbbl
jbe
popa
sbb
push
dec
frstor
bound
dec
call
sbb
fistl
mov
jge
cwtl
aam
add
inc
xlat
add
sbb
adc
fwait
inc
les
jp
enter
pop
cmc
mov
movsb
mov
jg
dec
mov
mov
add
and
cmpsl
dec
aaa
scas
mov
adc
mov
xchg
xchg
js
cmp
int
stc
xchg
cmp
sub
imul
outsl
pushfw
sbb
scas
add
int
adc
and
std
mov
pushf
in
mov
and
or
or
addr16
shl
jp
loop
mov
clc
and
add
adc
sub
pop
pop
mov
pop
pop
out
adc
cltd
xchg
in
pop
lret
jg
or
in
push
sarb
sub
shrl
xlat
out
int
cmp
xor
out
dec
push
mov
sbb
lea
mov
mov
je
addr16
adc
sbb
mov
int
and
dec
int
flds
sbb
adc
inc
mov
sub
inc
mov
dec
ljmp
mov
ljmp
add
push
inc
scas
sbbb
mov
fisubrl
push
mov
movsl
pop
packuswb
mov
mov
test
adc
sbb
sub
jb
dec
je
push
xchg
lahf
xor
ret
mov
arpl
sbb
jge
sub
scas
popf
or
cmp
les
test
mov
bound
mov
push
mov
push
xchg
stos
mov
in
sbbb
mov
jnp
aas
pop
aas
jl
push
int3
lods
pop
mov
mov
aad
push
push
cltd
hlt
push
ja
xchg
dec
cmc
add
les
adc
sub
inc
fwait
std
in
les
mov
cltd
xor
cli
adc
mov
das
in
rcrl
bound
pop
lods
js
inc
dec
test
fbstp
sbb
out
sub
shrl
jne
mov
lret
cwtl
or
ror
add
push
out
bnd
clc
decl
sub
ljmp
sarb
sub
imul
loopne
dec
sahf
dec
adc
mov
mov
stos
aaa
leave
ret
sti
dec
xor
enter
mov
dec
cmpsl
pop
adc
cs
mov
pop
inc
pop
fisttpl
ret
or
pop
bound
or
test
add
and
xchg
pop
and
lock
mov
in
cmp
pop
sti
mov
inc
xchg
ret
dec
pop
jno
test
imul
stc
inc
pop
loopne
outsl
aam
pop
data16
ret
xchg
bound
push
sub
xor
cltd
pop
or
add
cmp
cld
stos
add
lds
mov
stos
or
add
cmp
loopne
adc
ss
notl
imul
cmp
sbb
inc
xor
insl
mov
outsb
xchg
ret
cltd
mov
jnp
cmp
lahf
fwait
cs
cs
pop
inc
pop
xchg
les
pop
test
mov
mov
fs
sbb
cmp
jl
js
push
das
mov
das
push
inc
xor
pop
cmpl
dec
ss
clc
and
repnz
je
mov
adc
testl
push
lret
clc
pop
jge
test
push
mov
int3
sub
pop
push
add
cmpsb
ret
fs
mov
cmp
aam
mov
int
out
lcall
pop
mov
dec
pop
jp
sbb
lret
xorl
sarl
sbb
push
inc
adc
sub
andl
dec
decb
call
jmp
fidivrl
loopne
add
jno
pusha
add
add
cmp
les
push
pusha
add
cmpsb
mov
xor
and
insl
sub
xlat
dec
cmpl
pop
sub
hlt
xchg
push
pop
mov
fstp
lods
insl
mov
inc
lea
int3
xchg
mov
aad
loope
and
out
dec
xchg
inc
out
insl
mov
push
adc
out
mov
add
out
cmpsb
push
pop
mov
pop
jnp
cltd
mull
mov
push
jnp
or
xor
and
jmp
sub
push
adc
fmuls
xorl
stos
pop
aad
ret
iret
test
fadd
bound
pop
loop
xchg
and
rol
mull
sbb
inc
xor
clc
pop
das
dec
icebp
mov
rol
xlat
pusha
cmc
adc
lcall
sub
inc
les
push
das
or
sbb
push
dec
movsb
bound
push
mov
scas
xor
pusha
lds
in
in
jb
inc
pop
mov
mov
cmp
nop
mov
popf
xor
movsb
xchg
je
mov
jbe
ljmp
cmp
loop
in
mov
and
test
ret
scas
cmpsl
dec
sbb
xor
nop
lods
mulb
sahf
inc
cwtl
sbb
dec
inc
and
xlat
lods
mov
push
out
inc
cmp
out
jo
iret
lret
push
inc
hlt
stos
xor
push
xor
dec
inc
lahf
push
push
dec
pop
dec
push
test
hlt
loop
iret
mov
xchg
dec
movsl
xchg
push
xchg
imul
adc
outsb
jne
sbb
sbb
jmp
mov
or
add
push
xchg
sbb
iret
xchg
or
aam
loope
mov
jp
pop
jb
sahf
xor
or
repnz
sti
loop
xchg
int
iret
fwait
mov
pop
pop
sub
pop
pop
xor
icebp
jns
and
jge
sub
mov
inc
sbb
inc
sahf
idivb
cmp
mov
lods
push
js
jnp
testl
inc
jnp
out
call
or
cltd
mov
jle
inc
ljmp
add
cld
adc
xor
call
add
inc
in
dec
out
push
jae
inc
dec
fmull
cmpsb
push
fcoms
stos
sub
jo
sub
cmp
adcl
lcall
add
mov
push
xchg
fists
insb
cmp
cmp
or
lea
sbb
jb
add
leave
push
dec
mov
mov
push
fdivrl
mov
ja
addb
dec
or
imul
inc
ljmp
xchg
pop
into
call
test
mov
outsb
inc
loope,pn
mov
pusha
xor
cmovbe
ficompl
sti
or
xchg
lret
insl
xchg
pop
cmp
sti
mov
sti
fisubrl
push
push
rol
push
mov
and
jne
mov
data16
leave
push
jbe
mov
jnp
cltd
mov
jb
add
filds
jl
aas
adc
jmp
dec
int3
inc
rcl
mov
push
mov
dec
cld
mov
data16
daa
in
xchg
pop
jnp
enter
jp
or
in
sbb
sbbb
push
pusha
sub
clc
clc
push
rol
mov
icebp
inc
fmul
jbe
inc
stos
mov
out
inc
fwait
cltd
sti
cmp
loopne
or
mov
adc
ror
sub
fcompl
fwait
and
sahf
inc
and
mov
xchg
jg
fwait
jp
adc
nop
jge
mov
add
mov
gs
sub
xchg
shll
js
les
iret
or
dec
loopne,pn
sahf
ret
shlb
out
sbb
mov
cmp
and
sahf
push
push
int3
mov
jo
jno
xor
jg
scas
shrl
mov
scas
mov
sub
mov
push
insb
cmpl
rcr
sbb
iret
mov
inc
mov
pop
adc
call
xor
xchg
and
inc
inc
cmc
jmp
testl
or
mov
mov
inc
arpl
stos
adc
push
mov
sbb
fidivrl
jno
loop
das
lods
aaa
lods
loop
popw
sub
aas
sbb
imull
dec
sahf
stos
sub
loop
lods
push
mov
push
lahf
xor
or
clc
insl
stos
stc
gs
loope
lret
sti
sbb
jnp
mov
lcall
call
sbbb
shlb
mov
add
xchg
movsl
aaa
add
inc
mov
cmp
xchg
sub
addr16
test
xchg
mov
shll
stc
xor
insb
jne
lcall
cmpsl
and
push
cmpsl
cs
repnz
in
push
ljmp
lock
test
addl
test
mov
loope
xor
lods
lret
mov
push
xchg
mov
mov
fcoms
rol
sbb
mov
jecxz
mov
or
fdivr
ja
mov
mov
lods
push
repz
jns
xchg
fldt
test
pop
adc
sbb
inc
pop
pop
or
das
inc
nop
add
mov
pop
aas
rcll
mov
cmp
sbb
mov
adc
lds
loope
test
cmp
ret
adc
push
enter
outsl
arpl
clc
jmp
loop
jmp
scas
xlat
std
mov
sbb
pop
sub
cmp
mov
test
testb
cmc
repz
ret
adc
jmp
pop
cmpsb
mov
xorl
adc
add
mov
jnp
sbb
add
cmc
cmp
popf
push
mov
scas
in
repnz
or
imul
lret
cld
cmp
cmp
or
push
sub
jmp
leave
fwait
mov
pop
lahf
jnp
cmc
mov
xor
sub
mov
stos
cmpsb
roll
xchg
lcall
jmp
jae
cmpsb
or
pop
mov
gs
mov
mov
jle
push
mov
fincstp
int3
push
jecxz
cmp
lea
mov
ret
mov
cmp
adc
cmpsl
pop
dec
xchg
dec
sbb
cltd
sbb
xchg
pop
addr16
leave
pusha
pushf
jle
jne
cmpsb
mov
add
add
rorb
mov
ljmp
jmp
jmp
push
cmp
test
sbb
pop
ret
inc
call
aaa
fs
pop
cmc
out
addr16
xchg
test
sub
ret
fimull
and
nop
lret
orl
pop
bound
repz
clc
mov
aam
ljmp
xchg
jle
repz
clc
stos
fsubs
cmp
mov
rcrl
mov
outsl
pop
sub
xor
sub
xchg
adc
sarl
cmc
xchg
fidivs
inc
rcll
mov
dec
mov
pop
std
shll
cmp
clc
pop
pop
mov
pop
test
rcrb
insl
mov
lahf
cmpsb
pop
loop
mov
pop
adc
and
ljmp
mov
sbb
sbb
dec
or
sub
sarb
std
roll
out
pusha
or
inc
pushf
inc
inc
push
push
sbb
test
popf
jne
sbb
fsubl
jns
insb
cmp
xorb
push
xchg
out
mov
xchg
in
or
pop
inc
jbe
nop
xor
sbb
add
mov
xchg
les
xor
push
fxch
sub
dec
shl
adcb
rcrl
xchg
adc
push
cmp
jecxz
cmc
jb
push
repz
dec
mov
xchg
imul
test
push
out
movsb
sbb
adc
push
inc
xor
arpl
scas
in
jecxz
arpl
pop
mov
or
ret
cmp
pop
mov
movsb
mov
fidivrs
dec
sub
ret
mov
outsl
ret
dec
add
pusha
pop
pop
insl
cld
or
cmp
ljmp
fcmovbe
daa
pop
inc
lcall
je
xor
dec
push
jbe
jbe
add
xchg
insb
xor
inc
sub
dec
addr16
clc
clc
ja
sub
mov
pop
clc
jg
inc
dec
jb
jb
ja
sub
loop
mulb
leave
cmpsb
popf
addl
or
sbb
test
popf
lock
out
jle
sub
int3
mov
xor
loop
test
sub
xchg
dec
les
pop
adcb
lcall
and
dec
scas
jo
sbb
mov
pusha
push
xchg
lea
xchg
scas
in
push
jae
mov
outsb
mov
xor
xor
dec
adc
loopne
jg,pt
sub
inc
dec
ss
pop
pop
dec
and
outsl
lods
lcall
sub
pop
dec
xor
push
cmp
cmp
and
out
pop
mov
pop
idivl
sbb
mov
enter
icebp
movsb
js
sbb
xor
bound
inc
in
test
mov
ret
enter
mov
inc
pop
jb
jmp
jmp
sbb
cmp
add
loop
sbb
jae
call
mov
mov
inc
or
mov
mov
enter
addl
dec
cmpsl
hlt
pop
test
pop
pop
push
sbb
movsb
push
sub
movsl
xchg
sub
iret
xchg
jecxz
sub
inc
subl
pop
int
cld
cwtl
push
notb
push
and
mov
dec
push
loope
lock
daa
test
sub
cmc
fs
pop
fisttpll
sub
adc
mov
mov
cmp
and
pop
dec
fidivl
rorl
pop
push
cli
pop
and
into
xchg
fstpt
scas
dec
iret
sub
jbe
out
pop
xchg
pusha
ret
sbb
rorl
sbb
iret
fstpt
imul
pusha
iret
out
pop
fnstsw
fimull
push
and
aaa
adc
fabs
dec
rol
data16
push
and
lret
das
aad
cmc
sub
dec
cmpsl
mov
int3
sbb
clc
and
jne
mov
adc
rorb
dec
arpl
jmp
fcmovnb
jp
imul
lods
xor
inc
adc
lea
and
sbb
add
int
das
jg
adc
in
cmpl
pop
jbe
cmpsb
mov
sub
loopne
lret
or
and
jg
jmp
xchg
fsubr
out
jge
inc
cmp
in
cltd
xchg
xlat
fisubrs
push
out
cwtl
adc
sub
and
in
or
subl
jo
les
lds
in
jg
addl
arpl
xor
push
sbb
lcall
sub
push
cmp
aaa
push
aam
in
imul
or
leave
mov
mov
stc
inc
int
adc
jne
movsl
sbb
sbb
xchg
push
cmp
ret
mov
push
mov
xor
stc
xchg
in
rcrb
insl
push
aam
sub
jmp
lock
xor
adc
gs
fcmovu
xchg
xor
cs
xlat
mov
adc
movsl
adc
mov
cmp
fldl
lret
mov
jo
cli
dec
push
mov
sub
cmp
mov
jl
xchg
or
add
push
lods
xchg
jno
sahf
push
ljmp
aas
fists
je
imul
inc
mov
lods
stos
stos
sbb
xor
adc
shlb
pop
nop
cwtl
cmpsl
or
lods
adc
fs
lcall
loope
pmulhuw
outsl
jecxz
fcompl
xor
lcall
push
cmp
inc
push
cmp
iret
loope
pop
outsl
dec
insb
mov
daa
or
nop
cmpb
add
inc
pop
nop
inc
mov
bound
bound
loopne
lods
mov
mov
in
mov
dec
mov
in
rcl
arpl
dec
icebp
arpl
mov
test
mov
enter
xchg
sbb
mov
add
sar
and
sub
cmc
push
loop
lock
in
movsb
cmp
xlat
fbld
popf
push
bnd
sbb
mov
xor
lret
out
lea
xchg
loope
jmp
ja
cmp
fs
jecxz
lods
fistl
shll
popa
popf
mov
enter
add
sub
or
aaa
dec
cmp
into
std
cmp
movsl
inc
and
or
mov
in
lea
neg
out
popa
add
mov
sub
push
xchg
sub
mov
pushl
add
pop
loope
xor
add
pop
mov
arpl
scas
mov
sub
iret
xlat
js
iret
xchg
or
sbb
dec
icebp
push
pop
pop
xor
gs
js
ja
cwtl
jne
and
add
movsb
mov
arpl
ret
fsubp
jmp
xchg
rcr
sub
mov
outsb
jno
or
inc
adc
ja
outsl
cwtl
std
clc
repz
cmp
or
call
jae
add
add
fdivl
gs
inc
testl
xchg
into
mov
leave
in
inc
cmp
push
loope
test
scas
mov
jg
test
mov
sbb
add
out
movsl
or
test
test
dec
stos
xorl
push
insb
aam
inc
stos
xchg
out
clc
outsl
cli
and
or
xchg
cld
fistpll
test
lret
cld
cmp
loope
ds
aas
mov
mov
jns
xor
out
pushf
sub
dec
rcrl
js,pt
push
stc
fidivrl
cld
cld
insl
mov
fimuls
xchg
out
adc
test
test
scas
lcall
dec
ljmp
jmp
adc
cmp
mov
mov
push
sbb
sub
pop
and
pop
cmp
cmp
xchg
aas
cmp
sub
and
sub
int
mov
out
xor
iret
nop
aam
xor
jb
inc
into
sarb
jo
daa
pop
outsb
scas
cmpsb
sbb
lcall
movsb
leave
test
adcb
incl
sub
mov
mov
imul
adc
jne
inc
repz
fldl
out
xor
in
jnp
stos
mov
dec
lea
iret
push
pop
mov
and
bound
xlat
and
xor
fidivs
mov
fisubrs
inc
xor
and
xor
arpl
mov
cmpsl
test
mov
out
inc
movsb
or
bound
mov
test
stc
mov
mov
lods
fimuls
sahf
adc
jbe
cmp
cmpsl
cmp
push
lock
scas
pushf
outsl
mov
add
jno
sti
test
sbb
dec
inc
and
mov
insb
fs
and
lds
cmp
mov
cwtl
xchg
aad
movsb
shl
shl
and
in
pop
mov
push
mov
pop
mov
popf
sbbl
out
cld
clc
cmp
loope
and
addr16
test
dec
js
sbb
push
add
lcall
mov
jp
cmp
mov
ret
or
xor
mov
push
xor
push
sub
inc
inc
daa
bound
imulb
inc
mov
add
pushf
sub
jns
rcll
jl
inc
ret
movsl
mov
jae
mov
fs
dec
xchg
sbb
xchg
sub
cld
ja
mov
jp
pusha
popa
xor
sub
out
sbb
push
repz
adc
out
sbb
jmp
cwtl
out
stc
or
add
fbstp
mov
outsl
popa
nop
mov
je
xchg
sbb
adc
pop
icebp
lods
sbb
test
insw
daa
sbb
pop
add
shl
dec
jle
dec
push
push
notb
mov
push
popa
pushw
inc
roll
lret
jae
push
cld
xchg
pop
jb,pt
xor
cmp
roll
dec
fisubl
jbe
lcall
test
fstps
fcompl
notb
scas
xor
jg
jne
stos
incb
aaa
xor
jle
aaa
adc
scas
pushf
pop
pop
push
fs
aas
mov
dec
test
mov
cmc
inc
ja
shlb
pop
cmp
add
dec
cld
dec
push
ret
jecxz
mov
jle
mov
mov
repz
cmp
cmpsl
mov
out
outsb
repz
negb
and
out
mov
scas
das
call
aas
ljmp
inc
adcl
sbb
ret
push
aaa
loope
ja
fiadds
imul
ja
daa
pop
test
dec
xchg
add
and
jne
lea
mov
push
mov
sub
shrb
or
push
sarl
vunpcklps
jae
loope
add
stos
lret
adc
dec
mov
clc
insl
and
sbb
repz
sahf
repz
andb
xchg
sbb
inc
outsl
lods
mov
pop
add
sbb
aas
clc
pop
mov
cli
ds
adc
fiadds
repz
add
fistpl
bound
add
push
mov
cmpsb
movsb
outsb
les
sbb
cmp
xorb
stos
xchg
imul
jo
js
pop
dec
decb
outsl
into
mov
iret
insl
jno
cmp
fnstcw
mov
jmp
pop
hlt
shrl
xor
fiadds
or
push
xchg
pop
movsb
scas
adc
xor
outsl
aaa
test
adc
enter
pop
outsl
jl
jg
inc
push
ret
movsb
scas
outsb
mov
add
xchg
ret
mov
mov
pop
repnz
mov
mov
sti
insl
clc
cmp
mov
pop
ret
sti
pop
ss
xor
aaa
call
int
push
mov
mov
add
shlb
xchg
imul
mov
mov
inc
movsb
mov
jge
push
dec
mov
inc
push
fists
adc
shlb
sbb
rorl
sbb
jl
rorl
sub
ret
adc
rcll
jg
and
cld
roll
inc
shll
xor
ljmp
scas
sub
ja
mov
push
jbe
or
sub
dec
add
fadds
inc
push
inc
enter
inc
add
mov
popf
add
jb
mov
call
aaa
mov
int
jae
mov
cmp
nop
fidivl
aas
movsb
sbb
xchg
jecxz
cld
dec
xchg
enter
scas
popf
sbb
push
les
push
xchg
outsl
lods
in
scas
lret
insl
int3
mov
gs
test
jg
adc
and
mov
jno
mov
cmp
insb
rclb
stos
dec
lret
pop
pop
jbe
push
sub
or
xchg
xchg
lret
call
mov
jg
xchg
ds
imul
out
sub
cmpl
xchg
call
pop
sub
cltd
adc
ja
fs
push
arpl
adc
pop
adc
in
push
ret
or
and
sbbb
lock
cmpsb
dec
mov
or
xchg
mov
test
xor
aad
jo
bound
cvtdq2ps
pop
cld
inc
fildll
sahf
dec
in
mov
ret
jmp
push
sub
xorb
sub
mov
lahf
and
fs
cmp
xchg
ljmp
pop
lret
jo
mov
cmp
and
mov
sub
and
xorb
lods
lds
incl
outsb
ja
lods
lret
or
out
ficoms
shll
loop
mov
out
add
push
xchg
or
adc
icebp
cmp
mov
lcall
aam
sub
push
and
popf
or
insl
inc
xchg
mov
lcall
in
mull
mov
lock
push
sbb
dec
divl
mov
lds
mov
xchg
xor
dec
fcom
dec
xor
adc
add
and
adc
in
xor
push
shrl
popa
pop
jnp
enter
add
add
jecxz
sub
cwtl
repz
adc
sarl
subb
out
xor
mulb
xchg
push
pop
loopne
push
in
test
cmc
ds
leave
scas
loopne
add
mov
jmp
mov
ja
or
adc
jo
mov
xor
pop
mov
and
fwait
addr16
mov
push
nop
add
inc
inc
sbb
dec
mov
les
nop
sub
adc
ljmp
call
pop
xchg
and
ds
pop
cmp
fcmove
push
pop
dec
std
insl
sahf
insb
mov
inc
xor
xor
lcall
sbb
aam
rcll
adc
loope
arpl
inc
mov
push
mov
sbb
jp
lret
push
xchg
out
xor
shl
inc
dec
mov
aad
push
push
mov
push
jle
push
xor
pop
ljmp
bound
jle
fstpl
shrl
cmp
test
cmpsb
jbe
sub
mov
and
cmp
mov
jo
adc
fsubl
xchg
cltd
in
fists
mov
popa
xor
or
jb
adc
mov
out
mov
sahf
add
dec
jae
sbb
ja
lods
inc
dec
cmp
xchg
adc
add
call
sub
and
mov
xor
mov
aam
sarb
inc
mov
pop
xchg
inc
or
mov
xor
mov
fildll
lods
cmp
testl
dec
xchg
push
in
lea
mov
lds
jp
sbb
leave
jb
aas
mov
divb
mov
into
push
arpl
int
mov
cmp
movsl
loopne
mov
loop
mov
sub
jbe
jne
testl
or
push
lods
dec
pop
mov
ret
pop
out
aam
fcom
jns
add
mov
lock
mov
icebp
and
sub
daa
pop
insl
fwait
ret
stc
test
pop
push
mov
inc
jmp
sub
cmp
pop
gs
in
pushf
pop
xchg
jl
loope
ret
mov
out
loopne
and
mov
push
inc
cmp
jge
lods
xor
inc
pop
sbb
in
inc
adc
mov
add
fdivrl
fbstp
and
popl
loope
mov
enter
push
push
push
and
jle
sbb
sub
and
jns
push
xorl
mov
int
cmpsb
adc
jl
sub
test
adc
enter
repnz
negb
add
out
je
cmp
gs
sbb
lods
sub
push
push
leave
dec
push
push
stos
mov
mov
or
lea
mov
fdivrl
in
inc
loop
stc
mov
xlat
sti
pop
push
sub
pop
jne
push
orl
xchg
and
jmp
ds
jle
fdivrl
push
ljmp
addr16
out
jmp
sub
dec
push
mov
pop
nop
gs
add
pop
pop
dec
pop
and
jo
lret
shlb
lret
in
hlt
aam
sbb
or
sbb
mov
stos
push
data16
push
insl
sbb
cmp
dec
mov
xchg
imul
enter
or
cmp
mov
je
push
pop
xchg
mov
sbb
rcll
mov
mov
aas
pushf
pop
repz
fucom
adc
push
inc
xchg
jo
ljmp
inc
shl
mov
sbb
mov
dec
arpl
outsb
inc
dec
sbb
push
out
jne
fucomi
pusha
stos
ljmp
push
aas
mov
xchg
mov
int
fwait
ljmp
sub
cmp
mov
fadds
xchg
rcr
pop
lock
das
mov
imul
xchg
imul
repz
inc
pop
and
popa
ljmp
mov
test
pop
out
sar
xchg
sbb
ja
sbb
lds
in
cli
mov
pop
jnp
scas
xchg
mov
jno
xor
xchg
jno
pushf
pop
cltd
vdivsd
cwtl
enter
dec
out
ds
and
or
das
stos
mov
cmp
sub
sbb
adc
stos
outsl
cmc
jp
hlt
xchg
xchg
test
lret
icebp
popa
add
xchg
iret
inc
std
les
xchg
imul
lcall
sbb
and
dec
sub
xchg
test
push
mov
shrb
xchg
push
int
ds
imul
jmp
push
loope
dec
nop
test
mov
hlt
pop
or
rcll
mov
das
hlt
out
cmpsb
lock
jne
cli
push
pop
jecxz
and
out
mov
int
jp
pushw
add
imul
or
dec
pop
adc
lds
mov
inc
lcall
stos
rcrl
pusha
mov
fwait
sbb
dec
movsb
xchg
icebp
sbb
or
cmpsl
roll
mov
loop
jl
xchg
lea
shr
cmpl
sbb
pushl
adc
aaa
pop
adc
gs
in
gs
lea
popa
xor
iret
clc
fcomi
repz
mov
mov
sub
iret
mov
jle
mov
rolb
dec
cmp
stos
add
arpl
inc
repnz
pop
pop
xchg
lods
jb
push
mov
outsb
arpl
xchg
pop
and
test
cmpsl
imul
add
push
sbb
sub
cmp
leave
rclb
dec
push
les
fimull
inc
add
xor
and
gs
dec
pusha
std
sbb
push
xor
cmp
hlt
or
push
adc
jb
xchg
dec
sbb
pusha
repz
fwait
ljmp
mov
es
dec
adc
ja
sub
xor
adc
jnp
scas
mov
inc
jno
into
adc
mov
xchg
push
arpl
add
iret
inc
shl
movsl
ja
int3
inc
pop
or
add
std
pop
mov
nop
cmp
mov
mov
jp
xchg
in
out
xchg
jo
pop
mov
mov
sub
jno
fstl
jg
mov
out
mov
pop
loop
out
jns
cld
sub
or
cs
mov
mov
std
inc
sti
inc
sti
jno
iret
aam
xchg
in
leave
test
scas
xchg
add
inc
das
idivb
stos
jnp
xchg
cwtl
xadd
push
cmpsb
test
mov
movsl
js
dec
jge
mov
and
test
xchg
mov
jns
mov
sbb
mov
and
cmp
pop
hlt
mov
stos
mov
mov
xchg
lds
clc
and
aas
mov
mov
lods
or
rcl
push
fwait
ss
sbbl
mov
xor
fstps
test
pop
pushf
mov
sub
data16
frstor
jge
aad
and
stos
sbb
leave
loope
icebp
aad
mov
inc
inc
lods
das
sub
insl
adc
or
pushf
js
mov
dec
shll
push
or
dec
push
loopne
add
jb
aas
movsl
scas
push
mov
mov
pop
pop
fsubl
mov
rorb
mov
lahf
xor
std
mov
scas
push
in
sbb
xchg
pop
mov
sbb
fnsave
add
js
cmpb
xlat
or
ret
jmp
into
out
jns
jecxz
pop
add
in
push
jge
lahf
insb
inc
ficoms
sub
out
rorl
out
push
mov
xchg
sbb
icebp
jle
push
sbb
int
pop
in
push
leave
data16
inc
sbb
enter
pop
push
mov
pop
xchg
gs
pop
shl
push
xchg
rcll
jo
add
xor
mov
push
fdivrl
jns
in
fnstsw
mov
xchg
pop
pop
fnstcw
es
lds
xorl
in
outsl
adc
sbb
insb
out
xchg
aaa
lods
xlat
lods
push
cld
xor
xchg
aam
shll
sbb
cmpsb
inc
xor
mov
jns
and
test
sub
push
in
and
and
js
push
cli
int
or
stc
aaa
jmp
cld
lret
lods
lods
adc
pop
rclb
sub
push
jb,pt
jnp
aas
or
es
mov
js
sub
push
add
pop
int3
lods
out
sub
mov
hlt
pop
mov
jnp
divl
push
pop
dec
and
jnp
seto
or
inc
pop
outsl
insb
aaa
jne
mov
sti
insl
dec
cmp
outsl
clc
sbb
push
jecxz
sti
dec
scas
adc
adc
test
and
outsb
add
inc
adc
sahf
xchg
sbb
jo
test
mov
fcoml
pushf
mov
mov
dec
jmp
fwait
test
sarl
xchg
iret
and
mov
mov
das
mov
mov
cld
leave
xor
stc
outsb
xor
mov
mov
cmp
xchg
in
adc
xor
sbb
insb
jle
neg
adc
fisubrs
lods
test
subb
mov
ds
push
jns
fstpt
ret
add
jo
in
mov
cmp
shrb
cltd
jae
pushf
aad
testb
xor
dec
jno
jp
jmp
shrb
test
stc
out
call
imul
dec
loopne
jne
push
xor
in
mov
jecxz
pusha
mov
enter
push
or
and
sub
mov
aaa
ljmp
push
faddl
je
or
test
imul
mov
or
inc
sbbb
mov
fildl
push
cmc
mov
ss
ret
xor
fistpll
mov
inc
popa
push
insb
xlat
jbe
xchg
popa
out
lcall
cwtl
mov
mov
jbe
mov
fldenv
fisubrs
shr
pusha
arpl
nop
sub
fs
pop
add
shlb
movsl
aas
fs
pop
push
pop
pop
cltd
dec
fdivrl
test
cld
out
inc
cmp
fwait
shll
mov
mov
sub
test
bound
mov
fucomi
in
lds
push
xchg
mov
lret
in
test
mov
nop
call
sbb
sbb
nop
xor
inc
psllq
loop
and
add
insb
mov
and
sti
lods
and
and
push
sbb
sbb
inc
xchg
mov
outsl
mov
mov
call
sub
sbb
fdivrp
icebp
test
pop
mov
imul
mov
and
fiadds
or
pavgb
test
imul
xor
ret
mov
lods
xchg
xor
mov
dec
and
inc
jp
sbb
mov
add
xor
aam
cmp
add
mov
and
cmc
add
mov
cmp
sbb
or
sub
xchg
push
rcll
movsb
sub
ja
cmp
cmp
xchg
xchg
clc
sbb
out
push
repz
ja
dec
rcll
and
testb
push
dec
pop
sbb
add
testb
sbb
add
jns
mov
or
mov
add
icebp
movsl
bound
aas
enter
cmp
popa
ret
fsubrs
mov
mov
filds
cmpl
imul
repz
dec
or
lock
shrb
cld
mov
mov
mov
cmp
xchg
mov
and
or
pop
mov
push
inc
int
cmp
pop
push
lea
shrb
mov
add
rcll
push
cmp
dec
ret
repnz
mov
and
jne
dec
adc
cmp
jl
and
test
icebp
lods
out
js
fbld
stc
inc
xor
sti
mov
fnstsw
dec
popa
jl
mov
inc
or
loopne
cwtl
adc
adc
xchg
fmull
pusha
inc
stos
push
mov
dec
out
stos
mov
dec
mov
cs
out
rclb
ror
std
sarb
or
inc
fwait
push
pop
inc
cmp
xorl
lods
mov
add
dec
inc
cmp
test
dec
mov
inc
pop
push
lret
jmp
paddsb
pop
xchg
mov
andb
fxch
fbld
or
cmp
xchg
sub
jg
cmpsb
xchg
dec
repnz
movb
jnp,pt
popf
pop
decb
fs
and
dec
std
mov
in
sbbb
mov
lods
fstl
mov
into
mov
pop
sub
test
adc
inc
push
inc
fwait
pop
push
push
in
repz
pop
add
hlt
and
jle
xchg
jnp
xchg
sub
in
dec
pop
addr16
mov
pop
and
shll
pop
cld
shlb
pop
lret
sub
ret
jae
leave
js
mov
sub
cmp
xor
scas
mov
add
scas
outsb
pop
sub
xchg
getsec
push
push
or
int
inc
enter
push
xor
pop
aaa
jge
xor
sub
outsl
ja
dec
pop
and
mov
cwtl
push
adc
test
mov
sarl
les
sbbl
insl
sbb
cmp
idivl
xchg
mov
mov
pop
dec
pop
adc
movsb
jbe
mov
mov
sarb
nop/reserved
jmp
shll
pop
out
js
repnz
or
pop
cli
lock
mov
aaa
jecxz
or
pusha
iret
jbe
lret
fwait
xchg
leave
ss
jb
sub
call
lret
xor
pop
adc
lcall
jb
add
rol
dec
scas
xor
add
xchg
push
sbb
and
adc
fisubs
mov
addr16
push
inc
rorb
mov
idivl
test
push
sub
xchg
adc
stos
out
or
in
into
dec
jb
push
cltd
push
mov
push
addr16
or
incl
xor
or
jb
xchg
sbb
scas
mov
push
fucomi
out
scas
shrl
out
pushf
cmp
mov
daa
test
loop
sub
xchg
ljmp
arpl
sti
xor
and
sub
xchg
icebp
cli
pushf
add
shrb
jnp
int3
in
cmp
mov
adc
loope
inc
lcall
dec
add
inc
fcompl
test
rol
stos
out
jae
fwait
in
xchg
pop
rolb
jno
mov
cmp
push
fwait
mov
and
movaps
pop
or
scas
mov
loop
jge
cmpsb
ret
int3
sbb
dec
dec
dec
pop
xchg
push
and
push
inc
xor
pop
mov
mov
ds
loope
push
rcll
push
and
and
stc
sbb
adc
mov
ja
or
scas
jg
es
lahf
movsl
inc
cmc
inc
outsb
mov
sub
lahf
stos
lcall
mov
jg
mov
mov
adc
jmp
or
add
or
mov
push
or
jmp
aaa
outsb
jo
js
inc
imul
addr16
shlb
push
pusha
pop
add
rcll
pop
push
mov
ret
xchg
mov
lods
cmp
xchg
pop
pushf
inc
push
lahf
fdivrs
movsb
cltd
jge
cmpsb
jne
imul
or
jno
imul
daa
xchg
outsb
loope
xor
mov
lcall
ss
push
aam
enter
push
fidivrl
loopne
sub
fcomi
ret
push
mov
out
xor
sbb
jmp
ss
lods
fistpll
daa
cmpsl
sbb
pop
xor
sub
pop
out
push
jmp
fistpl
sarl
frstor
mov
jp
dec
jno
and
or
fcoms
xor
push
hlt
pusha
shl
add
add
push
je
jle
add
bound
jl
gs
loopne
in
add
add
sbb
fadds
ja
add
pushf
mov
cmp
jnp
ss
pop
pop
sbb
cwtl
adc
cmp
xor
cmp
dec
sub
pop
lahf
lahf
jmp
cwtl
xchg
adc
add
dec
jle
sub
sbb
add
in
and
pop
or
hlt
out
jmp
mov
push
jecxz
mov
xor
adc
or
pop
dec
cmp
push
sbb
mov
addr16
aas
and
mov
bound
leave
div
inc
ret
pop
mov
lcall
bound
js
mov
cld
out
xor
fs
dec
lds
sbbb
or
cmp
int
xor
dec
pop
pop
fwait
scas
mov
adc
test
outsl
mov
jecxz
fs
cmp
shrb
insb
sar
movsl
push
inc
pusha
lret
test
dec
mov
popa
adc
icebp
pop
stos
std
xor
movsb
jecxz
gs
dec
pop
or
xor
push
and
cmp
out
sbbb
std
ja
jmp
outsl
sbb
pop
shlb
push
in
sarl
inc
data16
mov
sahf
adc
repnz
lock
pop
jne
push
repz
imul
cmpsb
jb
adc
sub
add
sbb
ja
ja
fistps
imul
xor
movsl
mov
jle
imul
sub
inc
scas
and
pusha
xchg
sub
fldt
dec
rclb
lahf
movsb
popa
or
sbb
adc
nop
aad
sahf
fs
or
xchg
imulb
es
fldcw
xchg
xor
scas
data16
cmpsb
rolb
push
iret
fdivl
jne
ss
add
add
lock
lds
ror
int3
jnp
flds
mov
imul
enter
mov
inc
push
mov
out
pop
inc
into
mov
ds
pop
cwtl
and
lcall
cmp
inc
inc
pop
cs
cld
dec
cwtl
or
jae
inc
outsl
adc
mov
ror
adc
jbe
xor
enter
adc
les
xchg
in
out
add
adc
xchg
xor
jns
mov
xor
sbb
and
lds
xchg
lods
cmp
test
dec
add
js
cmp
add
jg
lret
push
idivb
inc
xor
fisttpl
push
lods
popa
sbb
mov
loope
push
in
enter
outsb
push
jns
jg
push
movsl
test
repz
shrb
out
lahf
mov
lods
in
cmc
sbb
xchg
mov
insb
dec
xchg
xchg
jno
inc
cmc
jns
jne
mov
pop
and
sub
xchg
or
and
daa
jmp
cmp
dec
mov
ja
mov
mov
lods
mov
js
scas
mov
mov
jns
ret
jne
inc
ja
sub
mov
addr16
fisubrs
pop
ljmp
sub
dec
pop
mov
pusha
xor
insl
addr16
or
insb
jle
insl
cli
pop
mov
jne
mov
add
xchg
mov
jmp
rorb
dec
repnz
mov
adc
in
aaa
cld
addr16
sub
jb
into
lock
addr16
xor
dec
add
arpl
imul
jbe
push
pop
jmp
mov
push
ficompl
pop
das
clc
subl
cmp
fsubrl
popa
or
lea
ljmp
lods
outsl
or
insl
jno
loop
inc
frstor
mov
mov
pushf
je
shl
ljmp
fistps
data16
mov
outsl
ficoml
push
add
push
or
mov
fsubrl
xlat
mov
std
xchg
enter
fldl
inc
and
mov
int
test
repnz
push
ljmp
jbe
push
inc
jae
mov
in
fwait
outsb
aaa
bound
sbb
jnp
insb
movsw
rcrb
das
lea
popf
aad
jle
test
inc
cmpsb
mov
inc
mov
adc
lahf
pop
sbb
adc
xchg
mull
movq
dec
dec
mov
and
push
dec
int
mov
int3
fisubrl
jecxz
cli
sbb
es
adc
sub
push
push
faddl
int3
sbb
or
popf
in
xor
pusha
insb
add
xchg
dec
pop
mov
scas
test
push
mov
mov
les
jmp
aas
stos
shrb
es
mov
and
scas
pop
rcll
in
adc
std
pop
das
sbb
pop
jge
mov
sbb
jb
or
cwtl
sti
mov
add
into
cli
into
and
movsl
adc
xor
dec
pop
enter
roll
push
scas
mov
cwtl
and
faddl
xchg
es
popf
aas
loop
inc
jae
es
rcr
and
outsl
inc
adc
into
push
popa
mov
rorl
mov
test
mov
shlb
iret
sub
test
lahf
pusha
fcmovnb
decl
rcrl
cmp
add
cmpsb
aaa
cmp
call
and
out
mov
inc
and
repnz
out
test
shll
in
and
mov
in
jne
gs
lret
aaa
fsubl
xchg
je
jo
jae
pop
insb
stos
inc
ljmp
ja
loope
lds
xchg
enter
lods
nop
test
xor
sbb
sub
push
scas
and
inc
sbb
dec
pop
mov
jbe
xlat
in
push
dec
xor
hlt
hlt
adc
and
mov
dec
roll
clc
ret
rol
jge
cmp
add
ljmp
or
imul
imul
mov
bound
aam
arpl
jle
int3
andb
jnp
jp
or
lret
jl
push
jmp
mov
fiaddl
shrl
cmpsl
pop
mov
call
loop
lcall
repz
adc
imulb
mov
fcompl
sbb
pop
fbstp
repz
mov
inc
cmp
nop
xor
jo
jmp
in
adc
scas
enter
fisubrs
pop
lahf
test
push
sub
das
mov
add
push
mov
test
inc
sbb
popf
ret
add
lahf
lret
and
jmp
mov
sbb
sub
lcall
rclb
mov
imul
incb
add
sub
out
movsb
lcall
sub
and
xchg
mov
aas
sbb
test
loopne
das
pop
or
repnz
popa
cld
push
das
pop
mov
push
or
dec
movsb
adc
cmpsl
mov
insb
fisubs
mov
xchg
push
inc
cwtl
and
sbb
outsb
pop
jle
pop
and
ret
add
clc
test
sti
cmp
mov
mov
repz
and
inc
add
repz
call
mov
insb
test
push
stos
xchg
push
fiadds
enter
and
lds
xchg
mov
cs
dec
out
xchg
adc
adc
std
inc
jno
repz
lret
incb
dec
fidivs
fs
loopne
mov
pop
test
or
jmp
scas
imul
lods
and
jns
push
sub
out
mov
movsb
xchg
jl
enter
in
nop
shl
fadds
cmp
popa
out
out
pop
loopne
movsb
fsubrl
inc
call
xor
or
out
dec
dec
fcompl
push
xor
or
push
bound
lret
pop
ja
sbb
inc
or
fwait
loopne
dec
push
mov
rol
mov
push
fadds
mov
outsl
cmc
sti
jge
iret
xlat
scas
pop
iret
icebp
xorb
pop
mov
sub
jl
inc
or
test
dec
repnz
ret
jnp
xchg
jle
cmp
mov
shl
mov
or
test
test
xor
pusha
jg
jnp
mov
gs
sub
bound
sbb
cmpsl
insb
and
mov
push
jae
push
into
sbb
test
mov
push
xchg
push
in
mov
shl
push
imull
xor
aad
push
scas
sub
movsl
in
pop
cmpsb
sub
sarb
push
xchg
sbb
int
dec
push
fiaddl
cmp
mov
roll
push
push
rolb
ja
imul
pushf
and
adc
push
xchg
fmull
xchg
iret
add
dec
cmc
dec
mov
dec
mov
mov
jns
mov
hlt
aas
jnp
popa
sub
aam
mov
push
cmp
add
fwait
xor
aas
rcr
xor
xlat
imul
xchg
movsl
test
adc
lahf
adcb
pop
or
cmpsl
out
in
jmp
enter
lock
loopne
xor
mov
pop
pusha
xchg
mov
mov
xchg
pop
iret
and
pop
lods
repz
and
push
inc
ja
dec
divb
pusha
jno
rcl
mov
test
mov
call
xchg
pop
test
leave
mov
cmovno
mov
test
ret
stos
xchg
xchg
dec
inc
dec
xlat
mov
hlt
adcb
cmpsb
push
adc
notb
jge
pusha
adc
cmp
sub
aam
test
cmp
shlb
lock
pop
or
xor
push
cmp
jmp
stos
out
mov
outsb
jne
popf
jae
jmp
push
add
pop
mov
out
movsl
push
mov
jp
mov
pop
or
ljmp
xchg
mov
test
dec
sub
in
cwtl
packssdw
add
rclb
or
addr16
pop
stos
das
sahf
dec
mov
adc
mov
stos
jb
mov
sub
aam
push
ss
pop
mov
pushl
mov
mov
out
sti
call
rcl
xchg
fwait
and
fadds
sbb
push
dec
test
dec
sub
mov
xor
movsl
lods
rclb
js
pop
push
out
test
add
insl
ret
call
or
sarb
testl
jbe
fdivs
lret
inc
jo
push
fstpt
push
push
mov
xor
bound
dec
insb
cmp
jmp
sub
dec
push
fstpt
cmpsl
nop
or
inc
jmp
xchg
aad
in
lds
out
inc
sahf
xor
mov
cs
or
and
mov
pop
cs
inc
jb
ret
mov
testl
mov
das
jno
sti
cmove
pop
add
mov
idiv
xchg
enter
js
mov
sub
add
mov
popf
aam
or
xchg
and
fidivrl
mov
sbb
or
dec
popa
into
pop
or
push
cli
mov
lahf
add
pop
not
aad
push
and
add
sub
add
adc
xchg
push
mov
jae
jbe
push
xchg
mov
fs
pop
lds
ret
in
or
push
shlb
mov
pop
out
push
scas
jp,pn
lea
and
in
xor
cltd
jbe
xor
pop
insl
mov
sbb
loop
push
adc
lods
push
pop
push
les
push
cmp
mov
dec
dec
lods
pusha
in
or
lret
adc
rorb
push
shl
push
xor
daa
inc
andl
dec
outsb
cmp
push
enter
cld
sahf
cmpsl
and
call
dec
and
sub
or
aaa
push
jl
loop
mov
and
push
in
sub
jmp
push
inc
lods
cli
insb
es
insl
xchg
fisubrs
dec
lea
lea
movsl
adc
jae
ret
push
mov
test
out
ror
jmp
pop
outsl
rcrb
fisttpl
imul
sub
sub
mov
mov
fstps
imull
sub
stos
cwtl
dec
pop
push
mov
ret
pusha
jmp
lods
mov
mov
iret
jns
cmpsb
test
dec
mov
sub
loop
dec
lcall
ss
leave
inc
adc
sbb
mov
rcrb
mov
fstpt
test
dec
idivl
test
test
in
xor
xor
sbb
pop
mov
lcall
pop
jg
adc
or
insl
jae
loope
cmp
bound
sub
loopne
jns
scas
mov
lea
mov
inc
adc
xor
push
jno
out
dec
into
nop
daa
cltd
and
js
inc
lods
pushl
and
cwtl
aas
out
scas
push
clc
decb
or
mov
jle
xchg
jge
push
popa
clc
mov
aad
cmp
push
xor
adc
push
jnp
jg
xchg
shrb
std
in
adc
sbbb
mov
cmp
mov
imulb
or
pusha
fsubrl
lret
ror
loopne
xchg
in
mov
sbb
mov
in
pop
jmp
cmc
fwait
mov
cltd
sti
xor
sub
dec
int3
mov
jp
in
xchg
in
mov
je
lret
xchg
cmp
roll
sub
fwait
rcrl
iret
inc
push
or
push
add
sub
add
das
insl
pop
xlat
repz
jb
cld
in
insb
xor
push
repnz
faddl
sub
jne
cwtl
or
arpl
in
scas
mov
sbb
lret
xor
adc
mov
sub
xchg
push
mov
adc
iret
jae
jae
in
jnp
xchg
sarb
rcl
sub
jmp
fadd
add
xchg
push
jno
mov
mov
fidivs
cli
push
sub
xchg
sub
cli
mov
in
mov
fnsave
imul
jmp
jle
mov
mov
in
ss
clc
std
hlt
fs
mov
fwait
add
outsb
insl
or
aam
xchg
mov
pop
mov
test
push
pop
adc
sbb
sub
outsb
movsl
ja
loope
inc
mov
and
mov
out
and
jg
lock
ds
movsl
hlt
xchg
lret
cmp
mov
sarl
das
jle
jp
xor
push
rol
mov
mov
stc
lret
aaa
mov
adc
sub
sbb
xchg
inc
and
iret
out
mov
fbld
mov
movsl
out
cmp
mov
insl
icebp
xchg
pop
pop
or
pushf
shrb
lds
jo
pop
sahf
ss
jmp
mov
add
xor
sub
jmp
jg
mov
mov
rcl
loopne
push
popf
push
push
fwait
pop
inc
jne
lock
arpl
clc
lods
sbb
push
or
fldcw
sub
xchg
dec
inc
mov
jnp
jne
dec
rep
mov
ficompl
ret
mov
movsb
negb
lret
cld
cmpsb
test
push
repnz
dec
inc
mov
ret
xor
test
aam
pop
jl
insb
jmp
std
xor
or
push
xchg
sub
mov
jnp
add
pop
push
ja
jmp
cltd
jmp
test
pop
xchg
movsl
cmpb
shrb
push
jae
dec
push
push
aam
push
mov
dec
divl
xchg
jg
cmp
cmp
adc
mov
add
arpl
or
pop
adcb
movsb
and
lret
cmp
adc
movsl
xchg
inc
dec
dec
imul
enter
adcb
push
jl
mov
adc
xor
xchg
loope
mov
jnp
jmp
imul
add
push
push
ja
outsb
sti
pushf
push
xchg
pusha
sbb
lahf
sub
test
outsl
hlt
mov
sub
add
xchg
push
or
lods
xchg
jbe
add
xor
pop
or
cmp
jns
insl
mov
fcmovb
loop
call
push
adc
ror
cmpsl
sbb
push
sbb
ret
inc
loopne
cli
sub
rclb
rcrb
pop
es
cmp
mov
cmp
lock
cs
out
jae
int
arpl
jmp
push
scas
cld
mov
ror
idivb
arpl
es
clc
add
jmp
push
dec
sbb
and
xchg
cmp
mov
in
xor
enter
flds
pop
push
stos
daa
mov
jnp
xchg
adc
pcmpgtw
add
or
lcall
lcall
xchg
inc
jae
inc
push
cmp
lock
mov
mov
das
loope
pop
ret
sbb
lods
test
add
es
xorl
push
fiadds
pushl
cmp
in
ud1
sbb
das
movsl
pusha
ja
inc
xor
or
gs
mov
mov
jo
call
jl
dec
les
pop
filds
adc
scas
or
mov
xchg
popa
out
pop
and
sbb
sbb
pusha
pop
mov
out
out
in
push
loop
and
nop
or
dec
push
ljmp
xor
jmp
add
test
or
and
pop
and
dec
int
jge
xlat
cmpl
dec
pop
sbb
or
add
mov
iret
das
test
and
adc
dec
push
inc
and
dec
scas
adcl
sub
push
pushf
sbb
mov
lcall
and
dec
pop
sbb
ds
mov
ret
fs
inc
loopne
push
push
ss
pop
jmp
das
rolb
sbb
das
inc
out
jmp
repnz
pop
lahf
stos
adc
xchg
and
xchg
adcl
mov
sub
insb
push
cmp
cmp
push
xchg
cmp
ljmp
repz
fldcw
and
nop
fisttps
shlb
imul
inc
das
push
adc
xchg
lods
xchg
sarl
or
sub
repnz
ss
inc
and
add
sbb
leave
movsb
jecxz
and
adc
out
aad
mov
mov
nop
int3
jge
mov
add
and
daa
push
mov
cmp
insb
dec
loop
out
test
mov
imul
mov
dec
addr16
es
mov
jecxz
sub
lahf
push
fisubrs
ljmp
fucomip
cmpsl
loope
js
fisttpl
jmp
hlt
fucom
xchg
mov
xor
mov
fdivl
lds
add
fucomi
aas
mov
jl
and
inc
xchg
and
fnop
add
in
xor
loope
jle
or
bound
iret
adc
mov
ja
cld
sbb
fidivrl
push
stc
jns
jo
int3
add
movsb
ret
sub
inc
jge
jnp
cmp
cltd
push
scas
and
add
xor
cmp
sub
ja
cmp
inc
addl
sub
clc
std
dec
out
push
pop
pop
add
push
and
fadds
cli
ffree
mov
adc
nop
repz
add
and
cwtl
adcl
cs
stc
iret
mov
or
jno
jne
insb
and
jbe
and
inc
jmp
int
lea
ljmp
fdivl
inc
out
mov
mull
in
jo
sahf
cmp
adc
add
fs
and
dec
xchg
out
pop
ja
lret
adc
xor
out
lods
test
jno
xor
rorl
ret
loop
out
lret
test
and
call
dec
and
in
mov
cmp
sahf
out
dec
ds
mov
out
cmp
push
jo
sbb
adc
imul
sbb
shrl
adc
pop
push
xor
outsb
inc
sbb
sahf
movsb
int
testl
jae
in
mov
cmc
popa
adc
mov
clc
cmpsb
cmp
leave
xor
jl
sbb
call
clc
stc
jae
cmp
leave
jnp
loope
sahf
mov
pop
mov
stos
cmp
mov
mov
mov
adc
lahf
pop
sbb
mov
mov
pop
add
inc
inc
push
mov
test
inc
lahf
inc
jmp
mov
cs
das
out
es
jne
dec
arpl
sub
scas
sbb
out
mov
lds
push
sbb
int3
jo
mov
push
pop
loop
call
pop
xchg
in
out
jbe
in
test
js
mov
in
cmc
lahf
test
add
xor
scas
mov
and
mov
lcall
and
jae
sub
cmpsl
adc
xchg
enter
inc
add
xchg
test
jmp
mov
insl
sbb
add
jbe
inc
subl
dec
add
add
test
movsl
out
jae
outsl
cld
mov
adc
insl
and
sbb
mov
lock
jnp
andl
sahf
insb
cmp
stc
mov
xor
fsubl
inc
js
arpl
js
dec
test
xor
lret
xchg
nop/reserved
or
dec
mov
ror
fildl
push
inc
out
or
stc
notl
xor
aaa
jae
mov
subl
fwait
mov
sub
or
mov
pop
jb
outsb
push
rcr
push
jbe
insl
mov
repz
fs
cmpsl
push
xor
mov
stc
add
repz
sub
pusha
or
pop
loop
dec
loopne
push
adc
jmp
repz
repnz
xor
ljmp
clc
xor
arpl
dec
jge
lret
xlat
les
adc
mov
lods
in
pop
loope
dec
mov
xchg
sbb
ja
push
or
cs
jge
jo
sub
jo
add
andl
lea
add
mov
movsb
sub
mov
add
jmp
fnsave
notb
rclb
jbe
mov
arpl
xor
lret
dec
lcall
lcall
dec
lock
sub
mov
mov
and
fwait
jmp
add
mov
gs
cld
push
add
ds
inc
shr
pop
mov
mov
jl
loop
cmp
or
rclb
lret
xor
mov
fwait
les
cmp
fs
push
or
inc
arpl
inc
lea
mov
shl
outsb
mov
popa
mov
dec
shrl
mov
pop
and
add
mov
xlat
sbb
stos
ret
ficompl
lret
daa
mov
push
test
cmc
std
xor
imul
xchg
push
mov
adc
dec
and
and
mov
mov
idivb
sub
stos
push
xor
pop
pop
push
mov
arpl
xor
mov
movsb
nop
sbb
insb
mov
sub
frstor
mov
lahf
out
jle
lea
aam
jge
and
xchg
es
xorb
mov
mov
roll
es
mov
ret
mov
or
fwait
pop
outsl
dec
inc
ds
pop
pop
adc
inc
pop
or
out
cmp
jne
faddl
or
add
push
ror
inc
fldenv
addr16
arpl
lea
or
sahf
push
movsl
mov
iret
mov
xor
lods
push
sbb
cmovnp
pop
fldcw
inc
mov
cmp
lods
sbbb
lcall
lret
push
pop
push
es
xor
add
adc
sub
testb
clc
clc
adc
lock
outsl
test
dec
pop
add
inc
imul
xchg
cmpsb
mov
adc
in
orl
js
cld
aas
xlat
outsl
imul
fsub
xchg
mov
out
jo
mov
cmc
dec
pushf
and
ret
lcall
cmp
imul
cmp
dec
xor
mov
inc
jo
mov
in
or
and
and
lea
mov
inc
jbe
and
pop
pop
adc
pop
popa
cmp
jl
sbb
jl
aas
mov
add
mov
in
dec
popf
out
orb
sbbl
mov
data16
jb
aad
stos
ror
sbb
push
nop
and
pop
ljmp
push
daa
leave
push
or
clc
loopne
push
leave
jnp
sbb
pop
dec
inc
ret
sub
cmp
push
enterw
andb
lret
movsl
adc
imul
mov
cli
clc
dec
das
or
push
jg
outsb
cmpl
cmc
sbbb
jl,pt
mov
cs
cmp
lahf
mov
xor
pop
jb
xchg
shl
negl
cmp
push
jp
ljmp
mov
fwait
clc
jo
push
jp
aam
ss
xchg
js
test
mov
pop
scas
leave
jp
mov
mov
adc
xchg
jle
hlt
mov
daa
cwtl
popf
push
test
pop
repnz
or
out
pop
jb
gs
cmc
jl
mov
sub
mov
and
push
rcrb
or
in
mov
les
lret
pop
lret
nop
inc
test
outsl
sub
mov
jge
clc
rolb
jmp
mov
rcll
push
lret
mov
add
jl
adc
aam
mov
adc
dec
jbe
lahf
cmp
or
repz
sub
xchg
icebp
ljmp
pushf
xor
mov
mov
push
ljmp
lcall
sbbb
sub
cltd
mov
push
mov
addb
dec
jl
dec
xchg
pusha
adc
push
frstor
es
test
sbb
out
fsts
adc
xchg
mov
daa
leave
gs
mov
push
xor
xchg
inc
xor
clc
scas
imul
pop
cmc
ja
enter
mov
jp
mov
jg
jne
imul
push
pop
es
mov
cmp
aad
xor
adc
and
cltd
and
mov
das
es
and
stc
xchg
pop
insl
stc
and
inc
jp
pop
pushf
testl
push
fldcw
mov
cmp
adc
fwait
mov
mov
imul
sub
fsubrl
inc
fcoml
lret
sbb
shlb
cwtl
jl
xchg
xor
mov
mov
pop
mov
xchg
mov
add
icebp
sbb
outsl
cmp
and
insb
fnstcw
test
jg
inc
sbb
push
cwtl
xor
mov
mov
mov
jae
fdivrl
cli
fcomps
leave
adc
jg
test
sub
inc
or
adc
xchg
mov
arpl
jecxz
das
cs
lods
das
jecxz
sbb
cltd
lret
push
cmp
or
cmp
aam
test
push
jle
int
xor
lcall
das
adc
popa
into
fnsave
xor
ljmp
push
jl
mov
mov
lods
xchg
push
cmp
push
fisubrl
jnp
arpl
je
jle
loope
and
cltd
movsl
xor
push
loopne
jbe
sbb
mov
jns
cmp
jge
mov
mov
jmp
lahf
lea
es
mov
inc
daa
xchg
cli
mov
add
push
cmpsl
cmp
mov
repz
mov
cmpsb
push
nop
cmpb
inc
dec
aad
fildl
cmp
cs
imul
cmp
and
test
lods
push
leave
daa
dec
clc
xlat
xorb
lds
rclb
mov
xchg
xchg
test
movsl
bnd
bnd
aaa
call
out
cwtl
imul
cld
loopne
inc
imul
idiv
lret
repz
dec
jge
mov
adc
sbb
or
and
loopnew
setp
cmp
popa
add
cs
bound
cmp
aam
movsb
insb
mov
jnp
mov
in
mov
nop
incb
test
fidivl
push
nop
lock
fcomps
lret
pushf
pop
shll
mov
and
cmp
lret
or
xchg
adc
negb
push
aad
mov
out
inc
adcl
addr16
mov
jg
je,pn
mov
mov
ficoms
or
rcl
shr
in
jg
or
fidivrs
hlt
cld
add
mov
mov
imul
pop
aas
insl
insl
mov
sarb
or
rol
mov
jg
addr16
pusha
imul
push
fwait
push
mov
fwait
cwtl
sti
movl
clc
clc
loop
mov
lds
adc
outsb
mov
cwtl
ret
jno
imul
inc
cwtl
fmull
stos
pop
sub
and
inc
mov
inc
sub
xchg
ficomps
or
jb
push
std
pop
or
pushf
mov
jmp
add
jp
flds
fisubrs
jbe
shll
enter
or
mov
or
jp
xchg
pusha
in
push
add
int3
test
jo
test
push
sbb
leave
scas
mov
push
mov
popa
int
xor
sub
or
or
mov
add
inc
daa
mov
sbb
dec
push
cmp
sub
and
mov
mov
adc
adc
and
or
xchg
and
cmp
sub
sti
cmp
mov
add
mov
cli
imul
insl
cmp
pop
pop
loopne
fcomps
xor
mov
sbb
pusha
sbb
adc
cltd
jecxz
cmp
hlt
add
sti
leave
out
or
mov
pop
jns
repz
mov
shrl
mov
cmp
inc
xchg
jbe
inc
adc
int3
mov
adc
or
ret
aas
in
dec
pop
aam
aaa
sub
es
jecxz
sub
adc
sti
test
cltd
jbe
adc
or
loopne
or
mov
pop
lcall
jmp
dec
fcoms
push
xchg
and
imul
fs
jg
out
add
lret
inc
enter
in
gs
and
xlat
sub
mov
or
sbb
cmpsb
jmp
lds
cli
scas
mov
xchg
clc
insb
inc
push
cld
sub
dec
push
mov
jecxz
push
daa
dec
jbe
repz
sbb
adc
push
out
cmp
jmp
mulps
jae
sub
mov
movsl
inc
fstl
sbb
cmp
sti
es
mov
stos
call
cmp
add
pop
xchg
sbb
push
mov
aam
mov
mov
es
sbb
sbb
fimuls
ret
dec
sub
dec
popa
mov
test
xor
or
shrb
inc
mov
dec
fcmovnbe
sub
shll
loop
jg
mov
mov
icebp
cmp
pop
cmpsb
inc
inc
aas
add
sub
cmp
pop
jg
pop
inc
sub
mov
mov
popf
dec
jmp
or
aaa
fidivl
fistpl
pop
sbb
scas
mov
imul
lock
xchg
cmp
mov
fs
jae
pop
int
adcb
xor
adc
dec
inc
cmp
into
int3
leave
mov
cmc
js
bound
xchg
ja
dec
mov
loop
inc
mov
xchg
cmp
adc
push
sub
sbb
pusha
sbb
stc
mov
test
adc
lret
sbb
ja
call
adc
inc
jae
pop
push
ret
fldt
cltd
mov
dec
adc
test
xor
or
cld
iret
xchg
std
sub
dec
jnp
insb
aad
test
mov
jecxz
mov
pop
fs
sahf
negl
push
and
sub
in
cli
fwait
mov
cmp
out
in
rcr
mov
jg
int3
lret
lods
and
mov
or
mov
jae,pn
outsl
xchg
ljmp
and
inc
push
or
subb
rorb
mov
in
mov
sarb
fdivl
jns
in
pop
adc
lret
push
bound
adc
pop
pushf
inc
pop
mov
push
cmp
push
sbb
movsb
jle
push
mov
adc
mov
or
cltd
mov
pop
inc
mov
dec
push
sub
push
inc
mov
ds
cmp
push
push
cmp
sahf
cmp
cmpsl
fisubrs
lds
into
aad
sbb
mov
cld
pop
mov
popa
jle
push
xchg
xchg
or
jns
dec
pop
and
xor
pop
into
or
leave
mov
mov
int
mov
sub
movsl
mov
test
shlb
or
icebp
nop
popa
xor
dec
sub
or
scas
movsb
mov
insl
or
push
data16
in
xor
mov
push
sub
cli
pop
xor
das
mov
cmp
jle
mov
stos
clc
xor
sub
jno
inc
test
push
jno
add
jl
fsts
in
sbb
cmc
and
lcall
inc
push
pop
xor
scas
ljmp
int
jns
les
sub
mov
add
dec
sub
rolb
aas
mov
sbb
dec
pop
insl
xlat
sub
cwtl
push
scas
push
or
in
inc
xor
xchg
xor
jbe
or
xchg
sbb
imul
mov
or
mov
bound
iret
xchg
pop
sahf
push
lea
inc
mov
js
test
adc
inc
sbb
dec
rorl
push
movsb
lret
pushf
adc
inc
std
and
cmp
pop
adc
push
xor
mov
mov
out
stos
or
xor
mov
lock
push
sbb
shl
pop
sub
jns
push
testb
movsb
mov
icebp
jne
test
adc
add
pusha
cmp
xor
dec
lods
jo
sbb
cmp
mov
inc
in
mov
bound
adc
and
pushf
xorb
loopne
xchg
lcall
mov
loope
dec
jecxz
rcll
adc
std
push
or
sti
and
mov
shrb
insb
test
adc
out
push
andb
es
and
ja
push
ret
xor
xchg
inc
cs
fdivrs
aad
mov
loop
loopne
sub
out
cltd
ret
decl
arpl
test
imull
mov
rclb
pop
jnp
fdivs
pop
push
xchg
pop
inc
leave
inc
and
addr16
push
pop
jle
aad
in
mov
inc
or
in
jo
pop
xchg
out
xor
xchg
in
sbb
push
gs
cmp
xchg
sbb
cltd
orb
mov
fsubr
sti
hlt
adc
cmp
xchg
sbb
xchg
xchg
jns
test
push
testb
not
mov
lds
lret
cmp
sbb
or
push
push
ja
lds
mov
push
adc
jl
scas
mov
lcall
dec
xor
int
xchg
mov
xchg
in
jmp
arpl
mov
mov
push
fcmovbe
dec
xor
int3
mov
mov
cmp
sub
test
lods
fdivr
gs
xchg
cmp
jle
faddl
sbb
pop
mov
cwtl
push
or
push
dec
mov
add
lea
cmc
popf
fistpl
pop
sub
dec
sbb
jmp
pop
jo
fidivrl
adc
push
mov
fisttpll
pop
ja
imul
mov
fcoml
cmp
cmp
ja
int
mov
mov
jge
xor
xchg
dec
mov
push
sbb
xor
rcll
shll
scas
xchg
hlt
mov
stc
scas
xor
int
imul
out
or
in
push
sub
hlt
test
lods
cmp
arpl
repnz
inc
mov
mov
aas
loop
or
in
arpl
jmp
scas
mov
pop
cld
mov
mov
mov
mov
adc
inc
sub
mov
outsl
add
ja
fnstcw
psubsb
push
pop
jae
mov
mov
lcall
cltd
sub
jne
xor
dec
xor
das
rcll
les
push
push
lcall
xor
inc
into
cmp
imul
std
and
test
daa
inc
xor
push
in
cli
cmp
dec
cmp
stc
stos
dec
push
scas
pop
push
inc
negl
and
rorl
xchg
push
iret
scas
jmp
pushf
out
push
inc
sub
test
fstps
out
and
movsb
inc
mov
jb
or
push
outsl
ss
aam
dec
rorl
dec
aam
pop
pop
std
xchg
push
dec
xor
jmp
fisttpl
mov
sub
sbb
jno
xchg
xor
pop
add
cmp
cmp
inc
shlb
mov
lock
mov
aas
inc
repnz
das
jne
imul
xor
jnp
lret
aad
adc
inc
mov
hlt
mov
cmpsb
pop
mov
cmpsl
shlb
clc
ret
sub
and
jns
pop
outsl
arpl
adc
jne
xorb
loop
and
inc
nop
mov
sub
jo
fidivrl
mov
sub
and
push
cmp
mov
inc
mov
mov
ficompl
lds
leave
shr
mov
xor
rorb
and
adc
xor
stos
sarb
pop
sub
ljmp
leave
rol
xor
mov
jl
loope
push
lret
push
in
or
outsl
mov
pop
enter
or
or
repz
nop
out
gs
xchg
lcall
je
pop
sbb
fdivl
pushl
or
mov
push
jp
mov
jb
sub
push
int3
into
shll
mov
push
pop
cmp
mov
aas
mov
xchg
jns
imul
mov
out
cli
dec
mov
mov
sbb
in
stos
rcr
mov
aam
test
pop
and
cmpl
nop
loope
fwait
mov
cmp
sub
sbb
ja
lods
icebp
ret
fmull
fwait
in
stc
cmc
out
cli
test
stos
xor
jne
pusha
movsb
dec
repnz
jecxz
mov
out
mov
or
dec
stc
pusha
cmp
popa
and
push
xor
int3
idivl
cltd
lds
out
push
adc
or
stos
cmc
sub
mov
mov
rol
pop
fists
add
xchg
imul
sti
mov
popa
repz
xchg
leave
jp
dec
std
mov
and
pop
mov
test
in
fdivr
lahf
addr16
add
xchg
fistps
int3
sahf
cwtl
fistpl
sbb
sbb
mov
mov
sbb
out
test
icebp
xchg
je
jo
in
inc
aad
inc
movsl
inc
vmptrst
mov
jl
jae
jg
sarb
or
push
push
dec
mov
push
push
add
scas
repnz
xor
sbb
clc
dec
or
lds
xor
dec
mov
sbb
push
mov
and
das
imul
adc
leave
in
push
cmp
cmpsl
fcmovnb
inc
mov
hlt
add
mov
imul
adc
and
cs
scas
jp
mov
mov
jge
push
dec
inc
outsb
shlb
dec
pushf
jmp
loopne
cld
push
sub
cmp
movsl
adc
mov
xchg
insl
pop
sbb
xchg
push
mov
lock
icebp
and
cld
pop
or
mov
dec
sub
jo
xor
cmpl
loope
inc
xlat
jl
sub
inc
or
or
rorl
aas
lcall
sub
push
lea
loop
mov
out
js
out
jae
lret
js
xchg
pop
fldt
sbb
int3
and
enter
rcrb
xchg
push
mov
pop
or
es
shlb
das
pop
fisttps
or
inc
lock
leave
pushf
jl
test
and
outsb
push
adc
jecxz
in
push
rcrb
dec
push
test
add
jp
pop
lods
jae
mov
mov
cmp
xchg
call
inc
enter
leave
or
fdivr
lret
cwtl
or
inc
and
fiaddl
pop
xchg
fnstcw
jnp
js
dec
das
jns
jae
mov
fucomp
cltd
xchg
add
push
add
lock
push
and
inc
ja
nop
fisubs
mov
or
out
mov
lods
xor
jne
dec
ljmp
and
stc
jbe
cli
pop
dec
loopne
push
sbb
int3
ljmp
jne
test
repz
popa
jb
ror
or
xchg
leave
cmp
xchg
cld
sti
or
sbb
aas
dec
mov
add
sbb
and
aas
or
sti
popf
push
mov
dec
jmp
push
popf
fstpt
es
lock
adc
mov
pop
add
lods
jnp
jns
add
repnz
mov
stc
mov
mov
test
xlat
mov
popf
jge
sbb
or
stos
adc
xchg
iret
ja
mov
and
mov
nop
mov
push
dec
mov
imul
mov
cs
xlat
fcomps
sahf
sarb
in
lahf
or
sub
mov
dec
daa
shl
sub
test
inc
imul
lahf
int3
mov
or
fldenv
aaa
adc
addr16
mov
xchg
mov
push
mov
mov
sbb
insl
lods
test
inc
sbb
dec
inc
or
clc
test
mov
adc
repnz
push
and
idivb
fs
and
add
add
ja
rdtsc
dec
cmp
or
stos
xor
mov
sbb
inc
jns
in
ja
sbb
out
sbb
arpl
test
cmp
xchg
inc
aaa
fsubl
mov
inc
stc
shr
mov
neg
fistpll
dec
or
sar
push
lret
shll
sbb
loopne
cmc
subl
ss
shl
pop
inc
and
dec
dec
sub
outsb
gs
sbb
sbb
outsl
bound
repnz
inc
sbb
js
out
mov
push
mov
mov
xor
mov
and
cmp
in
aas
adc
push
addr16
neg
lcall
out
push
pop
pop
adc
inc
js
lock
sub
fmul
mov
add
fistpll
cmp
aas
dec
jge
xlat
mov
pop
jae
imul
inc
rcll
scas
mov
xchg
cmp
jo
and
mov
stos
or
jnp
ljmp
mov
xor
cmp
push
adc
inc
dec
neg
xchg
jae
les
add
xchg
fadds
enter
add
movsb
shll
addr16
into
ja
les
lret
and
mov
pop
or
pusha
lahf
mov
out
xchg
js
jmp
jmp
lods
lret
lret
idivl
mov
repz
jmp
sbb
mov
sbb
add
push
stc
xchg
inc
in
add
sahf
jmp
inc
mov
loopne
xchg
mov
fisttpl
lahf
popa
imul
xchg
dec
aaa
adc
invd
ds
mov
repz
push
dec
dec
daa
in
xor
inc
lcall
dec
inc
sub
cltd
cmc
stc
shl
inc
out
cmp
lock
add
jmp
jg
cmp
das
xor
fs
cmpl
adc
stc
ds
adc
mov
add
pop
cmp
cmp
xchg
dec
ds
sahf
lods
sub
add
xchg
jecxz
pop
xchg
jl
in
xchg
mov
cmpsl
xor
loopne
es
shlb
xor
gs
daa
push
xchg
jp
clc
or
sbb
sub
pop
cli
nop
sbb
into
inc
enter
sahf
adc
mov
out
rolb
das
loope
mov
sbb
cwtl
cld
fistl
test
pop
or
dec
add
nop
sub
ret
xor
mov
jle
out
push
fnstenv
xchg
sub
loop
adc
lret
out
mov
icebp
loope
outsb
loop
lret
rcr
add
jge
adc
in
xchg
addb
cmp
add
test
inc
cmpsb
dec
xlat
or
mov
in
cmp
add
inc
cmp
cld
jecxz
cmp
adc
imul
popf
ljmp
mov
std
mov
mov
enter
mov
and
insl
mov
test
pop
ficomps
jae
sahf
daa
orb
divl
jle
inc
in
shll
dec
jbe
mov
push
mov
push
test
stos
ljmp
cmpsb
mov
add
fisttpll
fwait
adc
pop
stos
dec
push
push
adc
pop
leave
std
sbb
das
inc
sti
popa
jne
sub
dec
push
outsl
mov
pusha
adc
cmp
cmpsb
int3
arpl
addr16
enter
push
push
dec
jmp
das
hlt
andb
inc
enter
bnd
repz
movsl
into
push
or
push
sbb
cli
add
pop
ja
fwait
push
cmp
and
sub
pop
shll
popl
rorl
fdivs
mov
cmp
mov
jl
pop
mov
hlt
stos
sub
pusha
pop
push
mov
jp
sbb
dec
adc
mov
arpl
inc
inc
push
adcb
dec
mov
flds
dec
and
mov
bound
aas
pop
jmp
ja
ret
push
xor
flds
into
dec
stos
or
dec
xchg
xor
cmp
jecxz
dec
sbb
and
xor
mov
push
rcr
jno
test
mov
pop
push
xchg
dec
and
ret
pop
push
gs
mov
and
sahf
clc
adcb
push
in
fiadds
mov
lds
adc
pop
cli
add
xchg
cmp
out
jns
insb
jmp
ret
add
sbb
sbb
das
cmpsl
iret
mov
jp
jb
dec
dec
into
sbb
fcoml
stc
adc
sbb
pop
xor
fs
sbb
mov
xchg
add
adc
jb
rcl
push
add
int
push
imul
outsb
push
sub
fsubrs
push
pushf
je
popa
pushf
insb
push
and
addr16
in
add
push
int
lods
xchg
mov
push
inc
call
mov
add
adc
sub
js
addb
mov
adc
rorb
cli
testb
lret
push
mov
lret
shll
push
out
stos
xchg
cmc
pop
jno
and
mov
repz
mov
loope
pop
pop
aaa
fistps
fisubrs
dec
insl
sahf
or
jl
mov
sub
sbb
fistps
movsl
sub
int3
sub
xchg
pushf
xchg
sahf
mov
sbb
sbb
xor
insb
inc
push
das
out
sub
or
mov
sub
dec
mov
sti
or
pop
mov
mov
ss
sub
xor
sbbl
sub
jnp
mov
in
orl
nop
mov
rcrb
ja
pop
xor
or
mov
push
rclb
sahf
inc
mov
outsl
mov
js
pop
ja
mov
dec
imul
inc
mov
jp
in
mov
fcompl
push
fwait
cld
xor
mov
out
xorb
outsb
gs
mov
mov
xchg
in
test
leave
enter
fsubs
shld
pop
mov
mov
cmp
mov
push
mov
jae
gs
pop
add
adc
sub
icebp
xchg
jnp
jb
int
mov
jecxz
je
out
int3
inc
shlb
inc
push
push
or
sub
cltd
push
loope
ret
sti
adc
jo
int
pop
dec
sub
cmp
insb
adc
cmp
ret
dec
es
xor
mov
call
dec
inc
jmp
mov
aas
push
jns
mov
jl
push
cli
mov
adc
in
and
cmp
outsl
mov
in
stc
jae
xchg
cld
mov
sub
jmp
xor
cmp
daa
movsl
or
cmpsl
push
data16
dec
push
loop
addl
pop
jecxz
aad
mov
xchg
loope
xor
xor
sub
cltd
adc
scas
cltd
xor
stos
mov
jle
int
lret
inc
xchg
subb
test
add
jmp
inc
outsb
pop
flds
fwait
and
pusha
lds
pushl
mov
popf
lret
repz
in
addl
ljmp
arpl
pop
cmp
xor
sbb
xchg
lret
nop
jns
adc
shl
ret
fcoms
adc
cld
adc
lea
and
xchg
add
hlt
rclb
add
popf
test
lret
cmp
lock
repnz
sbb
xchg
scas
cmpl
nop
mov
movsl
cmp
mov
and
jns
jo
fisubrl
sbb
mov
and
pop
cmp
cmc
ror
push
dec
shrb
outsl
mov
pop
or
jmp
bound
scas
adc
push
pop
mov
test
aas
js
jo
lcall
or
or
hlt
push
push
orl
sqrtps
or
cmp
xlat
call
int
push
shrb
pop
shll
mov
cld
cmp
mov
or
imulb
inc
jo
mov
mov
loopne
or
movsb
negb
fisubrs
sbb
out
xor
or
inc
mov
push
adc
xchg
iret
fdivs
ret
cli
std
leave
cld
out
test
mov
or
pop
xor
xchg
cli
xchg
mov
lock
mov
pop
cmpsl
iret
pop
xlat
je
fstpl
cli
sbb
push
mov
xor
das
cmp
dec
das
shlb
lock
sub
aam
or
lcall
push
orb
rclb
jbe
pop
mov
insl
xchg
mov
jecxz
cmp
push
xor
in
into
adc
pop
fimull
movsb
test
call
dec
pop
lahf
pop
add
push
jbe
fstps
jae
inc
xchg
or
stos
jns
push
fadd
stc
and
jl
mov
mov
adc
arpl
push
cmp
cmp
pushf
test
xor
xlat
cmpsl
inc
fs
push
mov
es
xchg
cmp
pop
push
sbb
and
jg
and
sarl
hlt
mov
into
es
push
and
inc
icebp
mov
jno
adc
movsb
mov
sti
inc
mov
dec
mov
out
sbb
or
popf
popa
stos
cmp
cmc
sahf
je
add
push
lock
or
or
add
xor
xor
xchg
das
adcb
pop
aad
ljmp
mov
outsb
addr16
loop
fwait
daa
lods
push
xchg
enter
cmp
dec
xchg
popw
mov
scas
add
mov
jae
das
mov
pop
je
mov
mov
add
movsl
jb
out
orb
dec
setge
inc
fs
aas
cli
jbe
mov
nop
std
scas
inc
inc
dec
int
stc
push
rcll
movsb
fyl2xp1
stos
pop
lahf
cld
or
jno
cmp
je
mov
and
nop
push
cmpsb
dec
sub
ret
loopne
push
movsb
xchg
pop
inc
inc
lods
push
mov
xchg
in
notb
dec
push
lea
int
push
push
cli
movsl
jbe
rolb
mov
ljmp
adc
iret
repz
jp
lods
inc
mov
cmp
and
nop
mov
mov
fdivs
cltd
leave
cmpsb
fistpll
stos
loopne
das
or
jb
stc
or
or
loope
dec
notb
cmp
jb
add
xchg
mov
push
loope
into
xchg
cmp
and
les
aad
fs
pushf
and
test
sub
sub
pop
mov
mov
insb
jno
inc
test
test
cld
outsb
icebp
movhps
push
jbe
test
aad
rolb
mov
popf
xor
xchg
ret
cmc
dec
sbb
cs
add
xchg
int3
jns
mov
push
fdivs
add
roll
pop
xor
mov
aaa
cli
mov
sbb
fnstsw
pop
ret
add
xor
repz
in
add
sub
jne
sub
stos
push
in
dec
adc
ret
or
add
push
sub
sub
lds
in
or
das
int
dec
add
xchg
sti
add
add
cmp
xor
adcl
clc
and
mov
fmull
out
fstp
test
mov
fistps
pop
mov
push
cltd
test
push
xor
add
mov
call
cmpl
and
leave
aaa
or
push
jo
or
push
lahf
sti
repz
out
or
adc
jp
mov
mov
cli
push
jg
pop
jg
cmc
jle
jns
fnsave
mov
xor
mov
ret
dec
call
sbbb
add
mov
loop
int3
leave
mov
out
sbb
and
jbe
inc
insl
dec
icebp
lods
cmpsl
fsts
mov
xchg
lock
movsl
mov
imul
pop
sub
fwait
pop
shlb
dec
cmp
dec
jp
jl
jne
and
pop
cmpsl
arpl
inc
out
xchg
mov
lcall
int
mov
std
paddusw
mov
aaa
push
aad
int
inc
test
sub
addr16
les
cmp
add
daa
jmp
stos
jnp
cltd
jg
cmp
leave
rcrl
xor
jnp
data16
lahf
mov
mov
outsb
inc
mov
fbstp
inc
cbtw
cltd
jnp
pop
inc
xchg
sub
mov
sahf
jne
ljmp
in
mov
inc
push
dec
adc
out
sub
fistpll
xchg
outsb
mov
jns
inc
leave
rcrl
xchg
adcl
insl
bound
mov
xor
xchg
cmp
mov
lods
jae
js
call
pop
adc
dec
in
xor
lods
rorl
dec
out
rorl
jmp
or
loopne
div
and
xchg
sbb
into
lds
xlat
shll
in
dec
bound
cld
xor
addr16
arpl
jp
pop
loope
pusha
cmp
jnp
negb
and
push
dec
data16
and
dec
or
adc
mov
push
inc
ds
fsubrl
pushf
outsb
inc
ror
jle
mov
jecxz
mov
ss
iret
dec
mov
or
cld
lcall
repz
xchg
xchg
sub
in
aaa
jecxz
adc
lock
push
sub
push
xchg
addl
dec
fsubp
stos
test
lods
mov
xchg
movsb
ss
dec
xor
test
xor
xchg
sub
xchg
dec
push
sarb
ljmp
ret
or
mov
mov
jne
xlat
push
das
pop
repnz
push
icebp
out
mov
push
push
sbb
xor
xor
push
add
cmp
fs
cmpsl
pop
pusha
or
push
jo
int
lock
sub
and
fwait
movsb
or
fnstsw
push
loop
fwait
jns
stc
pop
bound
dec
and
cmc
movsl
sbb
sar
cmp
out
jge
aaa
sti
outsl
dec
jb
xchg
inc
xchg
adc
jb
test
push
xlat
or
lret
outsb
jecxz
or
sbb
xchg
push
xchg
movsb
sub
adc
xchg
ljmp
mov
fldl
push
ja
out
inc
cmpsl
xor
sbb
cmpsb
lret
push
loopne
popf
or
pushf
jle
mov
inc
aam
push
xchg
lret
cmp
mov
mov
inc
inc
inc
cmp
gs
adcl
sub
insl
shrl
popa
std
pop
pop
push
push
cwtl
add
or
push
and
stos
and
lods
out
sahf
adc
dec
push
pop
stc
mov
push
cmp
dec
sub
inc
xchg
ficoml
and
mov
dec
mov
jge
and
sub
gs
data16
jecxz
jae
push
pop
xchg
xchg
es
xlat
lret
adc
cmp
pop
subb
mov
sub
jmp
out
xor
lea
jne
dec
idivl
jo
aad
jmp
jae
pop
add
in
cs
push
push
inc
mov
mov
xor
mov
or
cmp
cmp
cmp
sahf
mov
mov
outsl
out
repnz
push
and
imul
movsl
xor
faddl
call
daa
lods
cmp
loope
out
cs
sub
movsl
pop
jnp
cmp
sbb
ret
jge,pn
subb
inc
sbb
leave
cltd
xlat
stos
mov
arpl
sub
adc
pop
mov
cmpsl
in
xchg
int3
inc
fbld
inc
testb
xchg
ss
add
mov
push
in
xor
decl
mov
test
mov
std
sbb
pop
pusha
sbb
mov
and
push
rolb
pop
enter
adc
mov
je
aas
out
mov
std
in
sbb
out
xchg
push
js
fldl
seto
mov
into
adc
sub
pop
dec
push
je
cmc
fcmove
pop
call
aas
sbb
fwait
shrl
sbb
mov
xchg
and
pop
jne
add
cld
dec
sub
out
jb
mov
outsl
stc
leave
sub
outsb
add
call
push
mov
lods
or
xor
xchg
jb
xchg
std
and
sub
inc
mov
loop
xor
mov
cmp
mov
mov
xlat
lods
cld
mov
jo
mov
dec
fwait
insb
mov
sub
sub
mov
inc
mov
adc
out
shrb
test
and
stos
mov
pop
pop
test
jp
jns
gs
es
scas
xor
fucomp
xor
test
mov
mov
sbb
dec
hlt
sub
sbb
inc
dec
push
jmp
sar
jnp
repz
into
jne
add
stos
xchg
jmp
mov
cmpsl
pop
pop
push
shrl
cwtl
das
and
add
lds
fwait
movsl
xchg
test
fiaddl
inc
mov
sbb
push
push
loop
ja
push
test
aad
dec
imul
push
lds
cs
xchg
sub
jp
mov
mov
int3
dec
xchg
pop
mov
sti
push
xor
sbb
add
jno
ret
lahf
rorb
call
xchg
aam
sub
stos
lds
fists
push
lods
dec
and
inc
fwait
cli
into
add
aas
push
mov
dec
inc
lea
xchg
in
cmpsb
inc
int
in
mov
sbb
rorb
add
xchg
mov
rclb
sub
repnz
sarl
mov
and
pop
cmp
cmp
inc
repz
jmp
clc
scas
sub
mov
mov
stc
popf
leave
inc
cmp
stc
fimull
push
cmp
cld
insl
pushf
mov
es
mov
lock
shlb
fistl
pop
inc
sub
adc
data16
call
mov
decl
jns
push
xor
jmp
in
jo
cmpsl
inc
pop
insb
stc
sub
mov
xchg
jg
fisttps
add
icebp
lods
filds
ret
test
lret
sub
and
sub
sub
push
jmp
xor
outsb
mov
add
xchg
xchg
cmp
lock
dec
negl
stos
cwtl
test
cmpsl
adc
jo
rclb
or
aas
sbb
jae
jge
jl
loopne
jp
popa
and
and
mov
dec
ja
mov
into
fdivrl
jns
or
les
sub
mov
inc
or
mov
add
jne
imul
jne
mov
std
orl
dec
sbb
das
sbb
scas
adc
pushf
pushf
in
pop
ret
lret
push
hlt
adc
int
xchg
flds
in
add
sbb
inc
js
sbb
xor
xchg
sarb
movsl
inc
subl
sbb
es
bound
mov
in
and
push
cmovno
fmul
cld
jle
add
int3
mov
imul
sub
pop
xchg
lret
push
dec
ret
mov
lods
cmpl
jns
shlb
lcall
jle
mov
add
mov
push
mov
cs
pop
dec
je
xor
data16
add
add
nop
pop
mov
mov
add
jb
add
push
jge
push
stc
dec
lds
mov
add
or
xchg
outsb
xor
jne
ss
adc
cmpsb
fwait
and
xor
ljmp
data16
out
push
sub
ret
sbb
jmp
jns
jecxz
test
in
jns
pop
push
rorl
pop
incl
mov
lea
sti
inc
cli
int
aad
jns
pop
lret
pop
jge
adc
jl
addr16
or
cmc
pop
sarb
loop
pop
pop
add
jnp
sbb
icebp
xchg
js
lcall
push
lret
adc
nop
push
mov
roll
add
and
mov
movsb
add
aas
lods
dec
repnz
jle
jns
cld
arpl
jb
sbb
mov
rcr
xor
enter
xchg
adc
sti
insb
mov
push
lret
shlb
adc
fistpl
dec
lods
mov
lock
push
inc
jmp
out
mov
outsb
jl
push
xchg
insl
orl
int3
dec
js
add
or
mov
lea
push
mov
mov
dec
shll
cmp
cmp
pop
add
aad
cwtl
cs
push
and
icebp
jp
mov
lds
loop
shr
pop
in
inc
cli
adc
ror
std
mov
jne
jno
push
jne
scas
loopne
ficoms
mov
lret
ss
push
cmove
out
sahf
ja
shrb
adc
lods
pop
fnstcw
mov
xorl
xor
jge
mov
xchg
mov
cld
sbb
rorl
adc
outsl
shlb
mov
and
inc
pop
mov
test
cmp
arpl
in
sbb
imul
push
and
push
stos
mov
adc
repnz
fildl
cli
jl
fsubrs
push
int
cltd
addb
cwtl
lock
xchg
cli
xor
dec
inc
pop
xchg
rorl
popa
jb
mov
mov
hlt
stos
adc
js
pop
and
lods
sub
mov
das
iret
aas
out
test
cmp
fsts
dec
push
pop
jge
adc
or
lret
sbb
sahf
mov
fsubr
lret
lods
gs
sti
out
sbb
lea
lds
lds
les
push
loope
xchg
jns
gs
jecxz
rcrl
enter
xor
aad
imul
sub
mov
xlat
outsl
fcomps
inc
lods
push
and
fs
popa
or
push
sbb
lods
loopne
xchg
lret
popf
xchg
jecxz
inc
les
mov
loope
sbb
cltd
stos
jb
adc
in
and
jne
shrb
cltd
cmp
mov
mov
lcall
loope
inc
mov
test
out
dec
xchg
ja
jnp
xchg
adc
leave
push
popa
cld
mov
stos
test
sbb
xchg
int
aas
je
add
cmp
ficomps
jle
add
fwait
lods
imul
jb
dec
ja
jg
cmc
dec
pop
movsb
xor
aam
test
aas
push
cmpsb
pushf
test
in
repz
xchg
int3
adc
inc
daa
jmp
cmpsb
roll
in
add
gs
sub
mov
push
outsl
popa
out
inc
jecxz
mov
jae
inc
and
cld
xor
mov
mov
lods
sbb
mov
in
fs
and
ljmp
repnz
int3
sbbl
divb
xor
ret
daa
xchg
mov
cmpsb
scas
mov
test
scas
inc
cmp
xchg
rclb
icebp
ret
in
mov
or
aas
xchg
fs
lods
lea
pop
xorl
imul
loop
jl
shr
imul
xor
fdiv
je
mov
pop
outsb
and
xor
std
lea
push
adc
add
test
call
gs
sbb
outsb
adc
in
lea
imul
mov
ja
xchg
mov
mov
lea
push
movsb
sub
jg
dec
inc
fdivl
mov
out
dec
nop
jnp
or
add
popf
xchg
sbb
lret
mov
lock
fisubs
add
loop
jnp
out
divl
inc
mov
out
mov
lea
sbb
sub
add
rolb
dec
and
jl
popa
or
fstpt
jo
push
inc
les
jne
enter
xorl
in
lcall
ret
mov
mov
xor
push
aam
mov
call
cmp
cmp
ds
sbb
push
sub
pop
out
xor
inc
fldenv
push
mov
mov
xor
mov
shlb
adc
dec
push
jmp
sub
dec
addl
pop
aas
jge
push
or
and
stos
test
cwtl
push
aam
xlat
data16
sahf
pushl
insl
add
jle
push
paddusw
mov
mov
stos
pxor
xchg
ss
xchg
loop
nop
fstpt
add
pushw
fwait
ret
loopne
fstpt
repz
mov
imul
outsl
cld
sbbb
mov
jne
adc
jecxz
xorl
pop
mov
iret
fsubl
jge
pop
sbbb
cmp
push
mov
outsl
xchg
stos
push
push
push
sub
aad
xor
push
cmp
jne
sbb
ds
adc
iret
stc
loop
loopne
sahf
mov
pop
pop
xchg
enter
movl
mov
outsb
sub
xor
jb
dec
sahf
xchg
mov
or
push
rolb
inc
movsb
ljmp
sub
mov
jecxz
test
ja
outsb
fcmovnb
add
aad
cltd
leave
orl
cmp
add
movsl
les
add
dec
jbe
push
ret
lds
into
mov
cwtl
inc
dec
scas
mov
outsb
jns
mov
sub
xchg
in
and
add
dec
xchg
jo
fnstsw
cmpsb
adc
mov
sbb
xchg
in
inc
fwait
add
pop
xchg
vhsubpd
adc
movsb
jge
addr16
mov
mov
fucom
int3
cmp
sbb
fldl
sub
add
lea
loop
fwait
mov
pop
or
sahf
pushf
aam
iret
movsb
pop
mov
jae
mov
arpl
test
in
xchg
cmp
fwait
inc
in
dec
mov
pop
push
sub
clc
dec
jns
stc
test
pop
jno
dec
enter
sarb
and
cwtl
sbb
shl
pop
adc
das
jl
gs
cmp
jae
mov
xchg
shlb
xchg
inc
jne
mov
stos
pop
dec
mov
xchg
gs
dec
pop
xor
add
xchg
add
fs
sbb
sahf
adc
hlt
inc
pop
mov
push
std
adc
cmp
mov
nop
out
lea
stos
ds
aam
xchg
mov
mov
push
cmpsb
fstl
insl
stc
add
aaa
dec
adc
jo
lods
fistpll
mov
loope
ret
and
ljmp
in
sub
mov
dec
in
inc
rorb
loop
movsl
push
and
pop
cmp
and
jg
stos
out
and
mov
mov
xchg
push
add
cmc
popa
lret
das
sub
push
test
imul
mov
mov
xor
xchg
fsubrp
mov
pop
out
call
jnp
push
xor
mov
mov
sbb
out
hlt
cs
push
dec
xchg
pop
cmp
popa
adc
test
test
insb
mov
cli
test
jo
in
lret
mov
sbb
mov
shl
shll
dec
and
faddl
shlb
fstps
xchg
adc
in
add
cmpsl
in
cmp
pushf
sbb
repnz
in
lea
fwait
add
shrb
dec
xchg
imul
sbb
ret
outsl
test
scas
outsb
push
inc
outsl
fdivrl
pop
into
cmp
ljmp
mov
mov
push
dec
mov
mov
xchg
pop
cmp
and
mov
andl
add
adc
xchg
pop
cmp
popa
jge
push
xor
fsubr
mov
push
cmp
push
cmc
imul
dec
mov
loopne
and
ds
and
mov
cltd
arpl
inc
pop
xor
insb
insb
jmp
push
cmp
mov
repz
lods
dec
loop
cltd
es
maxps
fyl2x
jns
jnp
es
and
xchg
pushf
dec
rcl
dec
mov
shlb
add
mov
sti
scas
test
xchg
mov
lcall
adc
ss
cmp
popf
xchg
lods
sbb
push
adc
push
int
stc
inc
into
and
push
popa
outsb
jb
cmc
and
cmpsl
mov
push
aad
dec
mov
sub
sbb
icebp
lret
mov
daa
test
sbb
lods
adc
dec
pop
xor
hlt
add
in
cli
adc
ret
rcrl
xchg
cltd
cmp
sahf
jmp
mov
loope
addr16
or
add
sub
mov
xor
xor
js
push
ret
divl
aas
or
mov
test
lret
jle
out
aam
pusha
mov
sbb
push
and
cmp
mov
stos
call
insb
cmp
sub
adc
push
int
das
nop
inc
jl
inc
push
inc
repnz
sbb
loopne
popf
jbe
xchg
sarl
adc
xchg
xchg
cmp
pop
es
inc
in
scas
das
popa
frstor
sarl
mov
sbb
fbstp
ror
inc
pop
or
loope
jle
popa
xlat
push
mov
stos
push
dec
push
adc
mov
mov
inc
jbe
not
shll
jmp
xchg
mov
leave
add
jl
xchg
fcmovbe
dec
cmp
bound
fistps
add
and
das
imul
dec
xchg
mov
pusha
adc
add
in
xchg
mov
lgs
ficoms
mov
xchg
pop
int
mov
mov
popa
add
inc
sbb
mov
jle
js
icebp
inc
negb
test
mov
sub
insb
sbb
ss
test
ret
xchg
pop
pop
mov
repnz
inc
call
pop
mov
out
in
fdivl
jae
outsb
xor
adc
jle
test
xchg
jb
movsb
cmpsb
cmp
shll
repnz
jno
call
in
es
sbb
pop
push
mov
stos
int3
xor
imul
jbe
jb
push
pop
xchg
loope
mov
ljmp
stos
push
sbb
cmp
in
cmp
xor
pusha
jne
popf
mov
lret
ljmp
push
ja
les
ret
mov
cmc
data16
lods
sub
push
adc
adc
push
aad
sarb
fidivrs
test
jg
mov
lret
mov
mov
int
popl
jnp
mov
adc
ljmp
adc
aad
push
xor
cmp
rol
das
or
fs
sbb
loop
xchg
jmp
fisubrl
std
into
les
and
std
add
int
cltd
or
fistpll
outsb
ss
pusha
dec
jae
mov
fwait
test
jns
push
and
push
push
jbe
pop
insb
loopne
sbb
and
jbe
scas
outsl
int
sub
out
out
mov
int3
call
xor
lea
jo
pop
inc
lods
scas
dec
inc
pop
or
push
movsl
sub
pushl
or
mov
adc
push
int
adc
bound
sti
add
sbb
and
mov
mov
mov
or
mov
xchg
fs
inc
mov
jmp
dec
faddl
stos
pop
add
ljmp
mov
out
mov
add
out
mov
imul
mov
and
pop
das
lret
jns
pop
shr
push
dec
fnstenv
jns
mov
insb
xchg
orb
fneni(8087
add
inc
adc
jle
neg
push
insl
arpl
push
pop
or
mov
add
xor
cmc
sti
pushf
cli
and
jnp
fistps
jbe
pop
xchg
dec
sbb
shll
ficoms
out
push
rolb
sbb
sbb
cmc
mov
in
mov
inc
aaa
outsb
dec
sub
adc
cmc
cmpsl
mov
sbb
cld
pop
leave
add
mov
sub
inc
xchg
pop
pop
inc
das
jb
cwtl
sub
push
add
cwtl
mov
in
andl
stos
mov
inc
cmp
pushf
mov
test
xor
test
xor
dec
icebp
lcall
scas
jmp
add
mov
insb
subl
jle
daa
ret
test
fwait
insb
cwtl
xchg
aad
lcall
push
lea
pop
mov
jle
loopne
cli
or
rcrl
lods
pop
dec
and
mov
fcmovnu
sub
jl
cmp
lods
sti
movsb
pop
arpl
mov
mov
fwait
add
jle
arpl
imul
jmp
and
add
lods
or
les
fwait
imul
pop
daa
imul
fisttpl
mov
inc
imul
sbb
dec
mov
mov
lret
mov
aas
mov
in
and
xchg
aaa
push
add
cmp
cmp
pusha
cwtl
call
xchg
dec
stos
cs
fiaddl
pop
dec
mov
out
js
adc
sarl
std
xor
or
jle
sub
xor
add
pop
sub
roll
out
mov
out
xor
push
mov
cmpsl
nop
xor
bound
add
jge
outsl
lock
sbb
lcall
pop
and
negb
jb
pushf
jle
test
mov
jno
insb
push
fisubl
lods
int3
xchg
jg
xor
pop
jae
push
push
dec
hlt
ja
dec
movsl
or
inc
and
lret
out
xchg
fists
ficoms
xchg
pop
sbb
daa
arpl
pop
sub
cmp
mov
lods
sbb
inc
enter
test
scas
jge
inc
and
inc
lock
jg
mov
in
cmpsb
hlt
rorb
ja
mov
dec
dec
es
lret
pop
push
in
insl
jno
cmp
clc
mov
jae
xchg
fucom
sbb
loopne
enter
insl
inc
ja
int3
xchg
popf
call
xchg
inc
fcomps
xchg
arpl
jge
jae
push
lret
roll
add
stos
xor
or
repnz
out
and
mov
add
cmpsl
pop
push
jno
fstps
and
mov
hlt
mov
popf
sub
inc
subl
pushf
out
and
pop
mov
mov
ficoms
xchg
sbb
jns
mov
jae
leave
shrb
adc
pop
arpl
aaa
pop
xchg
pop
dec
cmp
popf
les
dec
leave
addl
sti
mov
jae
daa
pushf
fs
cmp
faddl
pop
popf
jmp
cmp
lahf
divb
or
push
dec
call
sbb
mov
dec
and
pop
sub
outsl
int
inc
mov
mov
jae
sbbb
aas
sbb
sbb
mov
push
push
sub
mov
add
pop
dec
mov
jmp
push
ds
mov
or
stos
bound
cmc
movsl
mov
das
jns
ds
mov
or
xorl
sbbb
jno
sub
stos
cli
xchg
dec
movsl
mov
add
test
push
iret
and
scas
into
mov
xor
lahf
jne
stos
ret
test
dec
imul
adc
imul
jo
mov
mov
jp
out
out
xchg
jne
jecxz
inc
xchg
inc
xchg
xchg
xchg
jl
std
lret
ja
jl
scas
and
cmc
cld
lds
mov
imul
call
sti
cmpb
mov
pop
fwait
in
pop
add
cld
or
sub
xchg
in
rcrb
pushf
jae
test
addr16
sub
pop
cwtl
inc
mov
pushf
push
push
loopne
push
pop
jo
out
out
in
flds
stos
stos
or
mov
in
imul
or
stos
push
icebp
repnz
jns
sbb
xor
and
mov
iret
je
inc
test
mov
cld
jl
jb
stos
lcall
xlat
lret
pop
repz
cmpsl
hlt
push
mov
sbb
adc
daa
adc
dec
xor
jmp
negb
cmp
cmp
movsb
pop
jge
mov
mov
add
cmpsb
push
xchg
pop
decb
jo
in
out
mov
pop
push
sbb
shrb
inc
stc
push
ficoms
ficomps
xchg
xor
mov
adc
in
mov
js
jb
and
and
scas
sbb
add
mov
loope
cs
insl
sarl
enter
dec
add
lret
in
cmp
bound
sub
popf
sub
xor
testb
mov
in
pop
pop
pop
xchg
push
xchg
std
xor
insl
sahf
cmpsl
stc
fwait
jmp
mov
imul
filds
das
and
inc
cmp
test
loop
mov
sub
lods
xor
jno
loopne
test
sbb
in
mov
int3
arpl
int
notl
and
aad
call
mov
jbe
cmp
ret
mov
cmp
add
mov
int3
mov
cmpsl
cmp
ss
std
sbb
jne
mov
out
mov
repnz
insb
sbb
or
out
sbb
pop
cmpsb
sbb
mov
dec
push
jno
xchg
sub
out
iret
xchg
mov
popa
fdivl
cmp
out
jnp
mov
pop
fadd
xor
test
movsl
dec
mov
ljmp
push
mov
mov
push
jge
sub
jmp
enter
stc
sbb
cld
out
data16
std
test
inc
rorb
cmpsl
sub
dec
and
pop
loope
sbb
sbb
in
mov
stc
mov
jns
outsb
clc
ja
roll
xor
pushf
je
inc
xchg
lods
or
cs
and
mov
loope
inc
push
addb
mov
in
add
pop
fadds
testb
sub
jle
jmp
pop
stos
cmc
add
lret
pusha
push
jne
lea
enter
aas
arpl
pcmpgtw
pop
add
cmp
call
adc
aad
push
xor
inc
pusha
mov
int
dec
inc
dec
inc
cmp
or
ja
shrb
sub
xor
jnp
shlb
inc
dec
in
inc
negb
jbe
dec
cmp
sub
pop
cmp
sub
rcrl
dec
mov
out
mov
add
or
adc
lods
cli
sbb
push
rolb
xchg
mov
push
int3
cmpl
mov
mov
std
cli
jecxz
imul
mov
outsb
pop
mov
into
mov
fbstp
sub
lret
push
imul
jmp
dec
fldt
dec
or
inc
xchg
add
fldenv
test
test
and
push
pushf
sub
mov
into
ds
jle
pop
jnp
mov
or
add
mov
push
repz
lds
push
xchg
sbb
call
enter
sub
xchg
cs
call
or
xchg
fcmovnb
xchg
sarb
push
out
xlat
in
ja
ds
jle
movsb
dec
jp
sub
pop
jo
sub
sub
daa
mov
push
aaa
aam
mov
cld
fistpll
sbb
dec
xor
cli
cmc
push
push
sar
or
or
and
xlat
js
jo
cmp
divb
and
mov
dec
jecxz
sub
jnp
lds
ljmp
cmp
dec
test
clc
sub
aaa
mov
lds
xor
jmp
cli
pop
in
push
or
sbb
clc
addr16
inc
mov
jl
xor
lock
repnz
stos
and
test
clc
inc
and
xor
sbb
insb
inc
inc
and
lret
dec
xchg
sbb
xchg
jbe
mov
aam
xor
out
xchg
aas
and
dec
shr
stos
js
rcrb
mov
test
sbb
mov
pop
or
xchg
imul
stc
jl
out
sahf
xchg
inc
out
jnp
push
ret
jl
jnp
inc
jbe
push
cli
and
out
ret
iret
jns
mov
loop
cmpsb
dec
test
push
arpl
mov
ljmp
adc
cmpl
into
imul
int3
adc
xchg
jmp
pop
and
test
adc
xor
mov
cld
mov
or
add
fwait
jae
subl
pusha
mov
lods
xor
push
sub
imul
mov
fs
cmp
mov
mov
inc
jge
divl
bound
stos
sahf
aam
and
cltd
cwtl
adc
sahf
mov
pop
xchg
sub
jbe
lea
clc
sarl
sahf
roll
aas
imul
mov
xchg
xchg
ret
lock
lock
xchg
inc
sub
outsb
mov
pusha
cmc
bound
out
pop
or
negl
pop
mov
sbb
adc
adc
sub
inc
adc
scas
mov
fs
xor
das
hlt
gs
xchg
mov
pop
frstor
cltd
stos
xor
icebp
jb
xor
stc
rclb
xlat
stc
repz
pop
push
inc
sbb
cs
fisubs
icebp
in
and
xor
cmp
lret
lret
fucom
add
int3
sub
cmp
push
repnz
add
shrl
mov
cmpsl
bound
mov
jb
jbe
fiadds
jp
in
jne
mov
mov
sub
adc
lods
insl
aaa
lret
stos
fdivrs
add
or
lock
je
or
jae
lea
push
mov
sbb
lret
dec
cmp
leave
mov
adcb
mov
nopl
lcall
stos
mov
ljmp
cmpsb
mov
gs
xor
mov
add
nop
push
bound
rol
test
pop
mov
and
xchg
frndint
push
mov
sub
je
inc
stos
and
or
inc
lret
jecxz
in
lods
cmp
nop
bswap
jb
adc
mov
fimull
in
shll
repnz
jnp
lahf
inc
mov
icebp
out
rcll
bound
int
in
fstpt
pop
mov
lea
clc
dec
cmovae
and
ljmp
sbb
sub
imul
je
add
test
outsb
or
sbb
xchg
cwtl
xchg
test
and
sub
outsl
pop
mov
sbb
fstl
cmp
not
in
outsl
mov
sbb
adc
mov
cmc
movsl
in
lods
xor
pop
pop
je
ja
cmp
test
rcrb
cmp
jns
and
inc
int3
aaa
movsb
push
cmp
outsl
jb
sub
mov
in
sub
in
sub
mov
dec
aam
xchg
or
mov
fwait
loope
push
inc
popf
jp
sti
aas
imul
push
and
inc
jb
sar
add
mov
fldenv
hlt
mov
cli
sub
add
or
stos
dec
addr16
xchg
sti
mov
cli
mov
loop
xor
mov
xchg
bswap
fsubrs
je
insl
fbld
inc
stc
and
jge
dec
or
push
mov
cmpsb
subl
or
add
ss
pop
out
das
repz
dec
push
dec
out
or
in
push
jb
test
mov
inc
mov
mov
ds
aam
jnp
add
jl
sahf
pop
aas
ret
mov
and
jge
out
cmp
call
arpl
jns
push
push
cmp
lock
cs
fisubl
sahf
mov
loop
lock
pop
pop
xchg
pop
insl
inc
jns
sahf
mov
xchg
pop
adc
mov
pop
cwtl
xor
jge
sbb
out
fdiv
inc
jno
sbb
js
stos
mov
jae
out
xchg
pop
enter
xor
mov
sub
mov
mov
shl
mov
mov
adc
pushl
fildll
sub
hlt
mov
sub
push
add
xchg
add
inc
call
mov
jecxz
test
clc
dec
cwtl
xchg
in
fists
push
ja
es
push
addl
jl
sarl
ret
ja
aam
rcr
push
gs
push
fs
aad
pushf
outsl
xchg
andb
sbb
sbb
fimull
pop
aam
pop
fsubl
mov
ss
sub
bound
clc
fdivl
stc
and
in
movsb
adc
nop
xchg
xchg
push
push
xchg
cmc
add
ljmp
cmpsb
mov
jge
add
sbb
mov
or
lods
dec
xchg
mov
sbb
jne
inc
ror
sbb
inc
loope
insl
fisttpl
cmp
mov
adc
les
mov
and
dec
push
sti
push
sbb
bound
ret
and
and
addr16
fistps
dec
fisubrs
mov
outsb
nop
sbb
shlb
int
xchg
sub
fs
mov
fsts
lock
pop
inc
jmp
pushw
push
add
cmp
mov
aaa
div
aas
xor
testl
fldenv
mov
sbb
xor
adcb
cmpsl
xor
inc
cld
or
add
pop
mov
nop
in
scas
dec
iretw
imul
lods
mov
movl
in
or
lods
mov
xchg
les
mov
push
dec
popa
cmp
mov
sahf
jp
push
je
out
xor
aam
mov
jno
in
push
and
mulb
xchg
fistpll
leave
test
imul
xchg
mov
aas
nop
pop
pushf
dec
and
add
hlt
pop
cmp
ficoml
repnz
jle
nop
adc
mov
out
sahf
fcmove
cmp
and
pop
insl
punpckldq
pushf
fisttps
adc
mov
or
mov
mov
call
fdivp
scas
xor
mov
das
in
out
mov
inc
dec
rcll
push
xchg
mov
rcrl
jae
pop
outsl
cld
insl
jne
push
mull
call
dec
mov
jecxz
xchg
imul
dec
orb
xchg
inc
into
sbb
mov
mov
rolb
addr16
and
jl
or
or
dec
push
lds
stc
outsb
mov
xchg
leave
lret
or
and
iret
sbb
aas
mov
in
les
scas
mov
inc
arpl
pop
nop
imul
or
sbb
add
out
and
movsl
push
mov
cmpb
movsb
inc
out
add
push
loop
xchg
lret
fisttpl
test
jecxz
arpl
mov
inc
xor
jmp
push
mov
das
ja
aaa
xchg
js
data16
or
mov
push
shlb
pop
inc
cmp
lret
notb
inc
out
cltd
negl
push
mov
inc
pusha
mov
dec
mov
outsb
mov
xor
cmpsl
loope
loop
lahf
xchg
jnp
mov
xlat
mov
mov
xor
pop
sub
push
out
push
ljmp
push
iret
ljmp
scas
add
bound
cwtl
jge
sub
lcall
into
jbe
dec
movsl
repz
jecxz
lcall
push
fidivs
mov
js
das
icebp
sbb
fwait
mov
xor
mov
iret
es
add
cmpb
sub
push
pop
xchg
inc
push
add
mov
dec
dec
xchg
adc
cltd
stos
xchg
je
adc
cs
cmpb
pop
jmp
sarb
cld
pop
mov
in
push
jg
mov
jecxz
lahf
or
loope
insb
outsl
sbb
fcmovb
mov
movsl
cs
mov
pop
test
push
fnsave
lret
sub
dec
and
inc
test
aas
add
shll
sbb
pop
adc
pop
out
jg
loop
pop
and
mov
daa
jo
jne
sub
xor
les
add
dec
std
push
pshufw
lods
loopne
mov
lahf
les
pop
sahf
mov
stos
clc
scas
fbstp
sarl
nop
lcall
xchg
clc
dec
mov
push
inc
dec
ljmp
xchg
lcall
aaa
out
mov
into
inc
push
outsb
icebp
out
push
fisttpll
push
loop
cwtl
nop
cmp
sbbl
push
push
adc
in
push
push
inc
inc
cmp
jmp
sbb
xchg
inc
jae
addl
loop
popf
mov
or
daa
xor
jo
and
push
add
scas
in
jae
add
xor
xchg
cmp
cmp
popf
dec
cmp
and
jb
addr16
sbb
movb
xlat
jl
dec
icebp
adc
inc
incl
mov
arpl
aas
push
push
ficoml
sub
int
cmp
xchg
out
and
addr16
mov
lock
lea
dec
push
ds
xlat
lret
es
adc
insl
iret
int
int
mov
daa
loopne
lods
popa
adc
movsb
sub
pop
sub
inc
adc
push
mov
xor
and
jns
imul
cmpsb
jle
jb
sbb
push
add
enter
lea
sub
pop
jns
sbb
lahf
mov
testb
sbb
outsl
lea
clc
cwtl
sti
mov
shll
adc
mov
movq
push
mov
add
daa
mov
mov
cmovns
push
pop
cld
jbe
fldl
test
dec
push
jge
ss
lea
push
xor
rolb
xlat
lret
jo
inc
cld
sub
in
enter
pop
enter
popa
xorb
adc
mov
cmp
ja
push
adc
clc
xchg
popf
mov
push
cmp
mov
cmp
incl
rcrl
ljmp
nop
mov
dec
scas
mov
xor
icebp
cmpl
sahf
push
fwait
xchg
test
clc
mov
in
ret
mov
or
test
test
dec
pop
inc
sbb
mov
add
mov
xchg
push
jne
push
lahf
add
ss
mov
sub
pop
dec
push
and
nop
jae
adc
and
and
sbb
push
call
push
cmpsb
xor
or
sub
idivl
data16
cmp
cmp
insl
add
pop
xchg
xlat
scas
jo
cmp
dec
ret
pusha
xchg
xor
scas
adc
aad
fisubs
cs
sub
sarb
lret
lcall
lret
xlat
call
cmp
adcb
mov
mov
push
mov
jl
mov
test
stos
ret
mov
cwtl
pop
test
test
pop
xchg
pop
xor
jbe
cmp
sbb
mov
dec
adc
push
cmpsb
cmpsl
xchg
and
dec
adc
jg,pt
push
in
mov
inc
push
hlt
add
xchg
inc
jg
fiaddl
cmpsl
in
sub
push
aaa
xor
push
mov
pushf
test
movsl
gs
mov
fildl
lds
xchg
xor
jno
mov
jne
add
push
xor
xchg
cmpsb
lods
xor
icebp
inc
dec
lret
mov
mov
lods
push
mov
sbbl
addr16
fcoml
or
icebp
or
cli
fdivrs
sub
movsl
cmp
mov
sahf
pop
fldt
outsl
dec
push
push
int3
jecxz
addb
cli
rclb
add
idiv
sar
test
sbb
and
dec
mov
mov
sub
loop
pushf
sub
loop
xchg
inc
dec
outsl
cmp
outsb
or
in
imul
jnp
icebp
loope
inc
test
ror
dec
xchg
outsl
mov
adc
mov
mov
sub
data16
sbb
push
repnz
ret
clc
sbb
inc
push
sbb
dec
cld
mov
scas
ja
clc
outsb
mov
pop
in
and
lock
sub
mov
jmp
jge
mov
mov
fdivr
cwtl
ds
loopne
mov
cld
sbb
xchg
push
lret
out
test
inc
push
mov
cmp
xor
mov
scas
adc
dec
pop
sahf
insb
lods
jnp
fs
loop
test
cmp
in
cmp
inc
mov
hlt
pushf
fwait
es
or
cmp
dec
cmp
shr
out
adc
mov
not
mov
push
mov
lret
shrb
jp
lcall
jl
out
gs
mov
jns
add
pop
nop
int
mov
adc
cltd
add
inc
or
rcrb
shl
pop
jmp
push
sub
xchg
push
xor
add
leave
js
adc
mov
insb
lcall
add
lock
out
mov
pop
int3
aaa
movsb
sbb
mov
xchg
pop
jle
xchg
je
arpl
lea
imul
inc
add
movb
sub
pop
jne
mov
pop
test
imul
mov
movsl
pop
cltd
clc
pop
les
adc
push
clc
and
push
test
hlt
rcrl
inc
les
mov
sub
pop
cs
fyl2x
adcb
scas
rclb
cmp
and
push
mov
pop
push
enter
xchg
inc
jg
mov
xchg
xor
pop
sub
or
cwtl
aaa
sbb
das
xchg
push
mov
out
cmp
sbb
rclb
mov
sub
cwtl
xor
jl
int
cmp
fmull
inc
jno
mov
jo
call
inc
lret
adc
pop
fwait
inc
push
fimull
push
out
lret
inc
dec
cltd
in
mov
sub
notb
push
mov
cli
lahf
sbb
mov
jbe
add
push
mov
mov
int
mov
cs
cwtl
lds
xor
mov
mov
inc
adc
dec
push
cmpsl
push
mov
xor
test
cmc
faddl
ss
push
push
pop
ja
movsb
fldt
xor
xor
sbb
jle
cltd
xor
add
sub
out
xchg
xchg
call
mov
lods
ffree
jmp
adc
mov
cmpsb
jbe
fisttps
sbb
into
mov
add
push
mov
inc
insl
xorl
cwtl
cmp
loopne
ficomps
push
je
repz
cmpsl
xor
aad
and
and
mov
shrl
scas
test
pop
dec
movsl
lods
fucomp
jae
aas
inc
jnp
mov
aad
outsl
sub
jecxz
and
mov
adc
lahf
or
inc
fisubrs
jge
inc
jg
shrl
mov
scas
jno
and
lds
mov
rolb
leave
je
and
xchg
mov
es
mov
mov
jg
lods
or
imul
jne
or
and
aam
cmp
mov
push
mov
repz
int
mov
rcll
imul
cmc
in
pusha
stos
pop
mov
fstps
mov
xlat
dec
bound
push
cs
lods
jns
lods
lock
ja
lret
ljmp
test
shl
scas
sbb
cmpsb
fs
push
fisubl
push
mov
std
lds
int3
orb
mov
test
sbb
push
cld
lret
mov
jno
nop
sbb
and
and
dec
lret
jmp
imul
xor
aam
aad
in
insl
scas
loopne
or
and
sbb
repnz
ds
jbe
scas
daa
mov
inc
lret
jbe
inc
add
scas
in
dec
mov
stos
add
add
cmp
lcall
mov
mov
push
stos
adc
rcrb
xlat
push
mov
das
sbb
mov
push
gs
adc
nop
and
mov
cmc
int3
pushf
ss
sub
hlt
movsb
fidivrs
stc
cmp
popa
xchg
cwtl
outsl
scas
out
fisubs
test
xchg
xor
cmp
xor
iret
mov
nop
adcl
das
sahf
cmc
sub
dec
call
repnz
shlb
enter
daa
lods
leave
dec
repz
data16
jno
fidivs
lea
cmpsl
addb
and
xchg
adc
mov
push
push
or
or
je
popf
aad
outsb
mov
mov
pop
cmp
push
mov
rcrb
out
xor
ds
outsb
rclb
xchg
out
xor
outsb
and
ret
daa
jo
lock
idiv
test
das
das
cmpsb
or
imul
sub
es
push
dec
decl
mov
or
or
fwait
out
shr
cmp
rorl
mov
sahf
and
out
sbb
inc
push
xor
pop
aad
jl
cli
in
or
outsb
int3
push
repnz
cmc
pusha
cltd
es
xchg
cs
push
int
push
xor
pop
cmc
add
into
addb
sub
pop
addr16
lods
adc
stc
loop
lods
adc
jg
andl
add
add
lret
loope
rol
push
push
mov
jg
push
repnz
jecxz,pn
sub
repz
ds
xchg
mov
or
dec
lock
jp
js
xlat
mov
pushl
fsts
pop
push
sbb
mov
into
shll
xchg
insl
das
shrl
in
lcall
call
sub
leave
clc
jne
nop
pop
jecxz
jle
imul
mov
push
hlt
hlt
xrelease
jl
cltd
xchg
or
sbb
adc
nop
inc
dec
inc
xor
sbb
arpl
xchg
mov
mov
clc
fisttpll
cmpb
popa
test
pop
sbb
xchg
movsl
cltd
mov
push
aaa
mov
ds
dec
imul
pop
xchg
and
and
inc
jno
cld
iret
aam
sub
call
push
xor
lds
out
cmc
sar
mov
ficoms
cmp
into
inc
cli
jecxz
mov
insb
jecxz
sarb
inc
mov
mov
mov
out
mov
clc
xchg
vhsubps
mov
sar
cmp
int3
jecxz
sbbl
pop
sub
shll
push
push
inc
and
and
cmp
cmp
xor
inc
push
sbb
ds
and
popa
dec
mov
lret
pushf
scas
sahf
adc
mov
addb
sub
cmpsl
or
lcall
inc
jl
fwait
je
daa
pop
adc
jge
orl
stos
in
mov
mov
mov
fwait
pushf
in
mov
cwtl
jo
cmpsl
test
in
and
and
xor
shl
push
push
mov
pop
pusha
outsb
lcall
roll
popf
ret
push
nop
fistpll
dec
sbb
mov
and
inc
enter
jne
inc
jecxz
dec
xor
adc
sbb
pop
dec
cmc
cltd
outsb
jno
mov
in
std
fisttpll
xchg
inc
inc
insl
fmul
jmp
popf
enter
adc
mov
aad
insl
cmpb
jnp
pop
int
pusha
xchg
add
ret
xlat
outsb
shl
xchg
pushf
mov
or
ss
rorl
js
loope
add
xor
sub
sub
inc
dec
sbb
sbb
cld
das
mov
ljmp
iret
xor
das
lret
shrb
movsl
sub
inc
pop
dec
push
mov
adc
sbb
add
notb
push
and
push
mov
add
dec
mov
mov
sti
ljmp
xchg
and
push
xchg
test
push
ds
data16
mov
xchg
std
sub
repz
pop
loope
insb
popf
cmp
inc
dec
mov
sub
push
mov
cmp
popf
adc
adcl
adc
mov
adc
enter
dec
iret
and
scas
pop
ret
mov
add
enter
sub
inc
mull
dec
mov
stos
into
xorl
jbe
and
or
in
aas
insl
stc
imul
push
stos
jns
mov
ret
sub
cld
out
sub
sbb
ja
push
stos
add
add
dec
test
test
cmp
push
lods
int3
mov
imul
cld
jmp
mov
dec
push
sarb
in
ja
push
in
push
das
dec
aas
cmc
or
xchg
shll
or
mov
cmpsl
jecxz
mov
sbb
mov
mov
inc
test
ficoml
cmpsb
sbb
mov
ja
dec
stc
pop
cltd
mov
inc
je
xchg
xchg
xchg
push
rolb
push
out
stos
jge
add
sbb
dec
lret
testb
mov
mov
movsb
jecxz
and
xor
push
dec
or
mov
clc
adc
and
rorl
push
fildl
inc
sbb
xlat
xchg
or
mov
testl
dec
push
nop
int3
add
gs
loop
xor
sbb
and
insl
adc
sub
sbb
adc
jb
clc
inc
sbb
rorb
xor
jmp
pop
out
dec
or
cltd
jle
sub
push
push
cmp
mov
aas
mov
les
fwait
cmp
mov
scas
push
scas
out
call
lods
or
and
test
jbe
xchg
loope
pop
out
and
sar
adc
xchg
fwait
addr16
icebp
popf
ljmp
es
mov
ljmp
inc
mov
cmp
jnp
mov
xchg
mov
mov
or
stos
pushf
add
push
push
test
mov
xchg
mov
in
outsb
mov
xor
std
lret
popa
dec
icebp
mov
sub
jmp
cltd
cld
inc
lcall
or
mov
enter
pop
add
lcall
in
inc
aam
faddl
sub
pop
nop
or
push
and
je
repz
je
mov
rcr
aaa
xchg
pop
add
or
pushf
mov
jmp
out
cmp
xchg
inc
rorl
lock
test
daa
addb
subb
sti
jl
push
adc
movsb
jno
add
sti
xchg
push
sbb
ljmp
jno
push
and
int3
xor
push
mov
les
mov
hlt
je
mov
leave
mov
test
adc
sub
or
loope
test
js
ljmp
jecxz
sbb
cmp
repnz
jbe
xor
repz
xchg
ja
sub
loopne
stc
sub
fstps
fstpt
push
xor
inc
xchg
inc
fisttpll
loopne
sub
hlt
push
das
outsl
add
mov
and
cld
push
aaa
daa
iret
adc
int
jne
sbb
int3
inc
cmpsl
or
movsb
test
ja
mov
fisttps
cld
test
lods
mov
jno
mov
out
loop
lcall
mov
sub
mov
jl
aaa
add
std
adc
rcll
cmovge
int
insl
lahf
out
inc
imul
loop
xchg
stos
jne
shl
pop
aaa
and
std
mov
jmp
inc
bnd
lods
jns
and
sub
imull
or
movb
ficompl
fs
in
dec
jmp
mov
jb
repnz
sub
mov
xchg
mov
sbb
jae
lds
imul
nop
or
lock
dec
sub
popa
adc
test
add
fiaddl
movsl
roll
cld
mov
sahf
dec
scas
stos
dec
and
add
vshufps
add
xor
push
js
dec
sbb
mov
add
xchg
cmp
sub
pop
dec
adc
in
add
int
pop
gs
out
jo
aas
mov
scas
push
and
pusha
sbb
and
cmpb
sub
pop
sbb
movsl
or
mov
ret
mulb
stc
xchg
fsubrp
mov
push
push
jbe
push
pusha
xchg
adc
popf
loopne
test
mov
xchg
aaa
ds
dec
xor
insb
jnp
mov
inc
cmp
inc
sbb
add
jecxz
push
and
push
cmp
sbb
sbb
sub
clc
pop
je
xor
movsl
test
sub
sti
mov
in
xor
jb
xrelease
fdivrl
movsl
and
jl
mov
lods
sahf
int
xlat
aaa
mov
outsl
dec
pushf
jecxz
push
outsl
enter
mov
and
push
mov
cmovb
jp
movsb
dec
xor
aas
mov
andl
ja
lahf
fucom
or
push
fildll
dec
pop
fcompl
add
mov
xor
dec
dec
bnd
jne
ja
repnz
sar
in
push
cmp
mov
sbb
inc
into
add
mov
push
ja
pop
dec
das
addr16
pop
mov
test
xchg
push
jo
gs
test
mov
lock
out
push
lods
in
xor
inc
mov
mov
jbe
je
stc
add
xor
jbe
sbb
pop
lahf
lds
mov
fadd
mov
outsl
mov
jns
stos
adc
int
flds
xor
shll
xchg
push
arpl
push
imul
mov
inc
add
stos
sbb
add
sub
push
or
adc
add
push
jecxz
inc
mov
aam
repnz
insb
int3
pop
fs
mov
push
or
cmp
das
cmpsb
xor
mov
lcall
pop
js
xchg
imul
inc
outsl
and
dec
pop
ret
out
flds
andb
jbe
leave
out
xchg
sub
sbb
mov
js
push
in
movsb
pushf
std
outsl
js
cltd
repnz
das
xor
adc
fxam
ret
movb
into
xor
fsubrl
adc
push
int3
test
adcl
lgs
pop
push
test
lahf
jno
cld
or
fldenv
imul
int3
jnp
xor
inc
outsb
inc
aas
test
xlat
dec
mov
iret
mov
fwait
repz
mov
pop
inc
xor
insl
mov
xor
fs
sbbl
movsl
sub
xor
jp
mov
stos
xchg
int3
inc
out
movsb
xchg
push
push
xchg
adc
dec
add
shlb
cmp
lret
cmp
sub
and
push
mov
fistpl
dec
ja
xchg
cmp
sub
xchg
mov
ret
jne
pop
jecxz
fistps
dec
add
std
or
xchg
es
pop
inc
dec
sbb
imul
dec
mov
adc
push
push
lahf
outsb
xor
data16
inc
mov
lret
data16
adc
add
cmp
cld
orl
mov
mov
mov
dec
ss
mov
push
pushf
jne
xlat
repz
roll
scas
add
stos
dec
cltd
je
imul
mov
jae
jge
or
sar
jo
add
push
notl
adc
ljmp
pop
ss
and
add
sub
sub
xor
xor
push
scas
cmp
and
xchg
shll
lea
outsl
ja
mov
and
aaa
sbb
inc
je
out
dec
lahf
pop
push
subb
stc
or
adc
frstor
test
add
adc
inc
ss
cmp
and
and
pushf
in
popf
jmp
std
imul
cmp
xchg
cli
pop
or
mov
std
xor
jne
fmull
inc
or
testl
sarl
stos
adc
mov
cmp
add
add
add
cli
add
mov
out
hlt
inc
stos
and
sub
jb
orl
sub
fistps
mov
mov
cwtl
sbbb
negb
cwtl
rcll
arpl
movsl
jle
cmp
dec
jmp
outsl
loopne
or
les
rcll
bound
call
loopne
and
mov
xchg
push
loope
jp
out
sbb
mov
cmc
mov
scas
adc
xor
das
into
fs
sbb
cmc
jbe
pusha
jnp
mov
pop
sbb
incb
jp
mov
ret
das
pop
repz
cld
daa
adc
neg
popa
mov
std
ret
clc
shll
jg
sub
xor
dec
movsl
push
loop
std
mov
inc
jne
push
iret
xchg
adc
cmp
xchg
arpl
cmpsl
rcl
fnstenv
push
sub
pusha
jo
jecxz
cli
mov
mov
xchg
and
mov
sub
push
jne
dec
jg
lds
sub
shlb
lods
adc
ret
imul
lret
bound
inc
data16
outsb
sub
xchg
shrl
rcl
orl
insl
sbb
out
dec
or
jge
mov
cmp
popa
pop
cmp
sbb
cmp
pusha
push
sub
sub
loop
mov
movsl
ljmp
leave
push
mov
xor
fldenv
adc
push
jne
mov
and
stc
adc
ds
test
test
or
decb
push
or
jle
fstpt
insl
mov
mov
jns
mov
jae
push
sub
btc
cmp
mov
lock
inc
mov
dec
scas
daa
imul
mov
adcl
inc
mov
cmpsl
mov
dec
or
sub
jl
cs
ficomps
inc
sub
test
add
inc
xor
add
adc
ljmp
xor
jle
jb
lret
sbb
sbb
ret
mov
pushf
mov
pop
cmp
fxch
lahf
inc
cld
hlt
imul
sbb
std
mov
push
sub
lock
leave
or
mov
sbb
je
sarl
push
ret
inc
js
dec
push
mov
scas
cwtl
and
imul
pop
fstps
pop
fs
cpuid
sbb
or
ret
dec
sub
js
dec
pop
jecxz
call
add
retw
cmp
mov
lcall
imull
cmp
hlt
jp
cmpsl
les
inc
dec
or
lods
sbb
lods
popa
cmp
cmp
mov
rcrb
push
sbb
hlt
push
test
ljmp
sub
cld
js
xor
aam
sbbb
in
dec
mov
dec
xor
lret
push
mov
and
lods
pop
loopne
fidivrs
jecxz
sbb
mov
int3
sbb
mov
out
stos
in
not
outsl
xchg
mov
add
scas
inc
mov
insl
into
and
mov
push
xchg
lret
fwait
adc
sub
nop
cmpsl
mov
pop
jmp
xchg
ds
fwait
mov
xchg
icebp
adc
and
adc
shlb
mov
insb
imul
aam
mov
or
out
mov
insl
adc
pop
dec
arpl
mov
lods
lds
sbb
mov
bound
sbb
loope
divb
jp
xchg
push
gs
mov
or
xor
xchg
in
xchg
jns
sub
cmpsb
jno
hlt
inc
push
test
or
and
repnz
pop
xchg
fidivrs
push
test
jo
orl
sbb
nop
cltd
cmpsb
outsl
fwait
cld
shl
cmpsl
pop
jmp
pop
push
je
and
clc
mov
in
in
xchg
daa
dec
sbb
dec
test
push
xor
outsw
and
push
jno
push
shlb
out
fimuls
jge
scas
stc
cmpsl
in
mov
push
gs
imull
jno
push
scas
and
sbb
fwait
decl
mov
ret
xor
or
push
cmpb
xor
ljmp
pop
or
xchg
je
insl
ret
aam
cmc
mov
lret
sbb
xchg
cmp
push
sbb
xchg
inc
adc
cmp
into
aas
mov
dec
lds
xchg
repnz
shll
cmp
enter
lret
xchg
push
pop
stc
sub
jecxz
fstpt
mov
es
mov
xchg
dec
in
push
ss
lretw
ja
stos
xor
jle
and
and
add
and
xor
hlt
mov
test
vmwrite
xchg
add
jmp
inc
enter
xor
sarl
push
pop
icebp
cmpsb
mov
adc
stos
roll
mov
insb
xchg
aaa
push
out
xchg
in
daa
xor
ficoms
rcr
cmp
in
sbb
inc
lret
dec
iret
pop
jmp
sahf
mov
ret
sahf
fldcw
rorl
or
sbb
fadd
ds
fnsave
test
sub
shrb
sub
mov
clc
xchg
loope
mov
mov
cmpsl
sub
sti
paddusw
mov
adc
and
adc
dec
cmpsb
filds
jne
mov
les
lods
loope
mov
sahf
cmpb
jg
xchg
sbb
add
cmp
sub
popa
sbb
scas
out
stos
push
mov
ss
test
fisubrl
jne
lods
fwait
sbb
and
aam
xchg
mov
lods
xchg
xor
pusha
gs
testl
movl
cmp
movsb
sbb
lret
out
int
add
inc
outsl
push
jae
mov
divl
popf
xchg
popa
jecxz
aas
fsubr
and
pop
dec
in
aas
mov
mov
mov
mov
mov
fsubs
stos
inc
dec
pop
mov
mov
hlt
push
ds
sbb
pushw
mov
ss
inc
sbb
outsl
adc
lods
hlt
scas
push
cld
and
daa
jo
sbb
push
cmc
shrl
lea
jne
repz
fldcw
inc
cmp
mov
mov
cltd
sbb
pop
ds
loop
gs
dec
insl
ja
and
cs
and
dec
mov
aam
xor
dec
data16
mov
sbb
sub
lcall
aam
sub
sub
inc
imul
push
jecxz
repnz
add
repnz
leave
jecxz
int
and
imulb
fdivl
fs
jbe
lds
sbb
jl
mulb
mov
pop
jae
jg
mov
fistpl
sbb
xchg
inc
js
jge
sub
or
jb
inc
insb
mov
xchg
xor
xor
xchg
add
xchg
bound
mov
out
adc
adc
sbb
jle
cmp
dec
cld
clc
dec
test
stos
std
push
sti
mov
scas
pop
mov
push
mov
shll
test
xor
xchg
pop
mulb
pop
mov
pop
xchg
int3
mov
iret
push
dec
xor
ljmp
cmp
sub
inc
ja
divb
inc
call
dec
xchg
xchg
push
mov
or
jle
jle
iret
imul
inc
loop
sti
jmp
es
mov
push
add
cltd
inc
xchg
mov
ja
cmp
cmp
mov
and
xchg
mov
fmull
mov
xchg
mov
cmpsl
push
insl
pop
cld
nop
fnop
ret
pop
cmp
and
daa
jmp
dec
fcom
sub
push
shrl
xchg
inc
nop
ret
cld
add
lret
mov
jae
or
sbb
inc
dec
in
adc
cmp
cmp
or
ficoms
mov
cmpb
xchg
andb
ja
jne
loop
xchg
push
mov
jbe
test
pusha
adc
lds
gs
sbb
addr16
mov
cmp
xor
movd
loop
adc
repnz
rcrb
mov
scas
lods
push
iret
mov
jns
lret
out
push
stos
aaa
rcrb
lds
bound
inc
jb
movsl
dec
xchg
dec
push
into
fstps
idiv
enter
adc
mov
or
mov
jnp
mov
adc
sbb
mov
scas
and
cmp
mov
test
rep
out
jle
and
inc
sub
xor
and
stos
push
xchg
fdiv
ret
xchg
mov
out
add
les
jecxz
inc
addb
xchg
xor
loope
mov
pop
mov
loop
enter
cvtdq2ps
xchg
push
out
inc
repz
aam
aad
or
jne
lea
iret
sahf
xchg
fsubl
add
jp
jo
out
fwait
daa
xchg
push
add
xor
mov
mov
dec
adc
insb
sbb
int3
jge
inc
clc
in
push
or
adc
xchg
dec
clc
outsl
mov
jmp
stos
sub
repz
es
dec
jae
or
dec
pop
cmp
inc
jbe
or
sub
cmpb
sbb
cld
sbb
pop
popf
inc
push
rorl
loop
rcll
mov
fs
rcr
pop
aas
jae
and
mov
sti
addr16
xchg
xor
lock
mov
jnp
mov
xchg
cltd
mov
popa
or
mov
pop
enter
jne
dec
sahf
jle
imulb
aas
iret
adc
mov
popf
movsb
ficompl
mov
push
ljmp
repnz
or
pop
pop
inc
xchg
adc
in
lock
sarl
lds
lods
std
cltd
leave
mov
xor
sub
out
mov
sarl
mov
ret
pcmpgtd
inc
push
jle
sub
or
bound
je
data16
mov
adc
lock
aam
mov
mov
mov
out
jg
fsubrl
jmp
jns
movsl
cmc
mov
inc
sub
mov
mov
add
leave
inc
pop
ret
ret
add
scas
sub
bound
add
dec
aad
and
push
adc
mov
pop
nop
aaa
push
xchg
cmp
test
sbb
das
or
insl
mov
andb
adc
inc
mov
mov
out
xchg
mov
or
scas
pop
jbe
call
mov
aam
xchg
jne
pop
in
xchg
fucomip
mov
popf
mov
mov
addl
mov
mov
pop
or
pusha
mov
sbb
mov
or
cmp
fimull
sahf
xlat
icebp
xchg
jo
gs
hlt
iret
cmp
add
movsl
fisttpll
test
cmpsl
cmp
into
jnp
dec
xchg
mov
pop
pop
push
clc
add
xchg
jo
dec
xor
xorb
add
cli
js
jge
and
insl
lock
imul
aad
or
js
pushf
cmp
push
std
push
movsb
aad
lcall
lret
lret
mov
ret
std
jge
push
mov
inc
cmp
mov
sub
fstpl
pop
lahf
lcall
mov
push
fwait
jg
pop
inc
inc
pop
and
jae
lods
xor
inc
xchg
push
xor
add
fs
sbb
push
xchg
push
mov
mov
adc
dec
cmp
add
test
add
sarb
idivb
push
adc
loopne
adc
lret
xchg
mov
jne
dec
pop
addr16
add
pop
or
mov
aas
stos
inc
or
fisubs
out
and
inc
pusha
sub
mov
push
in
and
xchg
sub
into
nop
push
out
cmc
rclb
mov
xlat
hlt
or
pop
lret
mov
jmp
daa
add
sub
bound
out
add
movsl
cmc
gs
shl
lcall
adc
lret
mov
xor
jmp
movsb
int3
mov
inc
movsl
push
inc
mov
repnz
mov
popf
or
iret
fimuls
push
sar
inc
ret
mov
in
mov
push
inc
push
dec
faddl
fistpll
push
mov
cmpb
mov
ficoml
adc
mov
mov
aas
hlt
mov
repnz
adc
pop
sub
mov
shl
test
pop
imul
xor
xchg
push
jp
mov
fimull
test
mov
or
and
mov
test
lcall
and
in
xchg
fdivs
add
sub
int3
fcmovne
sub
dec
mov
pop
rol
fwait
mov
and
cs
push
popf
test
xchg
aas
leave
jnp
pop
in
lods
jnp
dec
jnp
mov
cs
inc
lods
test
movsl
mov
movsb
testb
cmp
leave
pop
les
xor
shrl
push
enter
jbe
sbb
cwtl
inc
aam
push
cmp
mov
lret
and
cli
pop
xor
ret
add
inc
mov
call
mov
jae
push
pop
repz
mov
adc
lea
fsts
std
mov
dec
cmp
testl
mov
cmc
cmp
ds
lods
out
pop
or
jle
and
inc
add
pop
sub
shrb
adc
into
xor
xchg
xchg
arpl
mov
xlat
das
add
jmp
xor
push
mov
shlb
jl
or
inc
imul
or
xchg
les
test
lahf
fs
loop
btrl
mov
and
je
cli
mov
xor
orb
push
movsb
cmpsb
or
mov
or
dec
scas
and
movsl
test
fsubs
lods
push
mov
ljmp
or
std
sbb
push
fsub
cmc
out
lret
jae
push
cs
mov
sub
push
sbb
pushf
mov
xchg
mov
add
mov
and
clc
mov
mov
cmc
andl
sub
jecxz
leave
add
push
jecxz
pop
sbb
subl
push
xchg
push
jne
imul
fwait
jge
sub
nop
fiaddl
pop
jle
in
outsb
xchg
jne
or
push
in
cmpsb
outsl
cwtl
outsl
mov
jbe
lcall
das
push
notb
jne
popf
mov
test
pop
lcall
and
imul
jp
leave
lahf
mov
gs
fidivrs
ljmp
add
les
in
jo
or
xor
ja
xchg
add
mov
jp
lds
push
int
add
cmp
arpl
addr16
mov
shl
inc
add
xchg
arpl
fstps
cltd
arpl
cltd
and
cmp
aaa
ret
sbb
int
lock
sbb
mov
insl
push
pushf
pop
in
mov
orl
mov
fistps
inc
inc
in
push
aam
jne
shl
or
sub
sti
repnz
jg
mov
xchg
dec
loope
push
cmpsb
dec
cmp
adcl
jl
mov
movb
imul
pop
sahf
mov
ficompl
cmp
movb
pop
leave
loope
loop
jle
sub
in
sbbl
and
fldt
adc
sub
inc
xchg
mov
and
jge
pusha
jge
add
ret
jg
icebp
jmp
jne
adc
mov
ljmp
push
jbe
fisttpll
push
mov
fcoml
ljmp
push
int3
mov
ret
pop
and
aam
mov
movsb
imull
push
sbb
pop
sub
stos
mov
negb
fcomps
loopne
sbb
popa
jg
aaa
jbe
dec
sub
adc
push
xchg
pop
popa
cmpsl
adc
mov
mov
cld
sub
push
push
fwait
add
ds
hlt
shl
sub
push
popf
outsb
mov
popf
aas
mov
nop
cmpsb
enter
mov
rorl
inc
cmp
daa
xlat
enter
push
sub
loop
imul
lods
rcrb
stc
add
pop
dec
mov
dec
fmull
push
hlt
mov
cld
jnp
inc
push
jns
in
adc
pop
pmaxsw
jns
cmp
das
sbb
add
push
pop
push
jbe
loopne
arpl
xlat
or
inc
std
jb
xchg
cmc
cli
or
sbb
push
push
lret
out
cld
xorb
sbb
add
sub
into
icebp
or
inc
sbb
ja
es
cmp
jecxz
cmp
xor
aad
sbb
mov
ret
arpl
dec
jno
xchg
lea
sbb
ret
push
cmp
iret
cs
dec
leave
pop
fidivrl
push
pop
lods
call
mov
repnz
rol
pusha
fs
push
insl
cmp
pop
mov
mov
push
or
mov
jae
jae
rcrl
lret
dec
filds
aad
loope
mov
lods
pop
dec
into
push
mov
push
cwtl
jne
sbb
dec
xchg
pop
lret
xchg
rep
pop
insb
xor
mov
les
xor
repz
jbe
mov
cmp
mov
xor
pop
sub
fdivs
imul
xlat
jae
cmp
imul
push
xchg
and
mov
aaa
repz
xchg
fisubrl
daa
andb
sub
or
outsl
sti
pop
loop
js
ljmp
cmpsb
movb
or
les
out
xchg
fldenv
loopne
pop
pop
mov
in
shrb
and
push
cwtl
sub
sbb
sarb
clc
or
push
imul
sub
mov
addb
lods
imul
sub
add
mov
lea
aam
lods
imul
dec
imul
lods
out
jle
aam
popf
or
lea
cmp
out
cmp
sahf
push
dec
sbb
dec
mov
mov
fisttpll
insl
loope
aad
aad
loope
dec
cmp
push
cmpsl
sub
cmpb
inc
stc
and
add
mov
mov
les
or
ljmp
push
gs
ja
in
add
xor
pop
call
repnz
test
sti
push
sub
setg
and
mov
pop
jnp
mov
add
inc
imul
cmp
xor
lods
mov
and
cmp
mov
js
xor
in
add
pop
pop
pushf
push
int
mov
pop
test
cmp
jle
stc
add
cmc
mov
aas
xor
js
pop
es
mov
cmp
xchg
sbb
jnp
cld
sub
and
jl
or
pop
movsl
mov
jnp
dec
clc
inc
ds
fildl
mov
mov
enter
aaa
shl
or
or
cmp
xchg
sbb
arpl
jns
inc
enter
jle
jp
gs
inc
inc
ds
std
mov
cmp
sub
adc
cmp
stos
inc
int3
int
rol
push
jns
enter
jno
insl
loopne
or
inc
mov
dec
repnz
call
cmp
xchg
idiv
mov
jle
sub
lea
push
mov
mov
push
fldenv
jne
inc
mov
xchg
add
in
and
mov
js
mov
addr16
jno
dec
push
mov
fiadds
ret
mov
xchg
fwait
sbb
pusha
sub
hlt
popa
mov
jno
push
jp
sbb
stc
sbb
adc
cmp
in
loope
sbb
xchg
shll
mov
jg
fildll
push
mov
div
loope
inc
test
jbe
out
test
dec
fdivrs
enter
lock
int3
negl
arpl
and
dec
addr16
fidivl
loopne
or
xchg
test
in
xchg
xor
jno
sub
pop
xor
sahf
and
adc
dec
ljmp
mov
aaa
enter
mov
aaa
shrl
jp
mov
pop
and
cmp
pop
or
fnsave
inc
cmp
pop
ljmp
movsb
sub
xchg
out
popl
cwtl
mov
imul
mov
dec
mov
or
jle
mov
or
imul
dec
nop
push
lcall
xchg
fidivrl
mov
loope
popa
mov
fists
adc
xchg
imul
ljmp
push
cmpl
cmp
lds
pop
mov
inc
ss
and
rol
xor
idivl
pop
repz
and
adc
mov
shll
jo
cmp
jg
and
cwtl
movsb
or
pop
popa
iret
jns
int3
mov
jb
pushf
mov
out
mov
push
out
lahf
sbb
outsb
jmp
sbb
cmpsb
pop
cmpsl
pop
xor
sub
movsl
in
inc
mov
sub
sahf
movsb
and
ss
dec
adc
inc
aam
adc
mov
inc
xor
mov
xor
hlt
daa
xchg
cmp
dec
inc
xor
js
xor
dec
mov
nop
stc
mov
xor
mov
in
cmp
inc
leave
xchg
in
adcl
sbb
scas
sbb
cmp
mov
mov
ds
xor
aad
pusha
pop
dec
popf
mov
hlt
jge
xchg
xor
and
ja
fimuls
lret
int
jns
cmpsb
add
cmp
addr16
es
js
jne
shll
pop
push
sti
or
mov
add
jno
ror
add
cmpsb
enter
shrl
std
fisubs
test
shl
jnp
push
push
fildl
jno
in
cmp
and
add
xor
sbb
push
iret
sbb
inc
movsl
sti
sub
shlb
cmp
cld
enter
dec
ds
bound
dec
loop
jns
xchg
dec
out
pop
mov
aad
sbb
adc
mov
dec
stos
cmp
mov
in
fdivl
xchg
jo
pushf
push
dec
mov
aas
push
jnp
cmp
lret
in
cmp
fs
mov
sub
cmp
les
incl
pusha
call
clc
fwait
sub
jb
mov
pop
nop
stc
jecxz
jne
cmp
push
cld
mov
pop
orl
lss
in
jne
aam
mov
xor
hlt
data16
mov
jnp
cs
je
fwait
jbe
and
imull
rclb
xor
std
aad
fdivrl
cmpsb
imul
add
lds
test
xor
jne
fs
enter
jno
int
shrb
loopne
aaa
into
mov
add
int3
inc
sarb
jo
int
in
icebp
or
and
mov
sub
or
push
call
cld
push
push
push
jecxz
push
iret
lret
popf
mov
mov
sub
rclb
inc
jne
shrb
or
loop
adcb
in
fucomi
mov
jae
jne
lods
inc
inc
clc
lret
ds
push
jecxz
mov
lods
pop
mov
pop
std
sbb
mov
push
int
lahf
ja
fucomi
and
push
repz
fwait
iret
repnz
adc
inc
cmp
pop
push
cs
dec
ljmp
xor
outsl
mov
pop
cmp
leave
inc
inc
test
pop
scas
insl
pop
in
jb
inc
lret
pop
adc
inc
xchg
add
push
pop
subl
movsl
dec
or
xor
jle
push
xchg
mov
sbb
xchg
int
les
dec
jno
and
popa
push
xor
push
dec
sub
nop
inc
and
xchg
xorb
jb
push
sbb
cmp
shlb
inc
out
lahf
js
inc
add
loope
adc
popa
movsl
ret
enter
test
rcll
pop
cld
xor
jno
cmc
daa
pop
lods
into
test
aam
add
jns
pop
cmp
mov
lods
add
pop
push
sarl
lock
push
mov
jno
xorl
xchg
int
and
sub
outsl
hlt
insl
or
mov
sbb
dec
mov
pop
sub
sbb
xchg
jle
popf
rclb
scas
sub
loope
xchg
test
cltd
inc
adc
push
ficompl
out
or
jp
push
push
mov
xchg
jae
iret
inc
fnstenv
or
cmpsb
movsb
jge
push
and
test
jmp
pop
or
adc
mov
mov
das
lock
inc
mov
icebp
inc
or
iret
popa
add
scas
mov
popl
pusha
dec
inc
xchg
je
jecxz
clc
or
push
lock
insl
loopne
push
sahf
jp
adc
mov
mov
pushf
imul
fxch
gs
popf
xlat
loop
jnp
stos
pop
roll
lods
mov
out
add
xchg
out
aad
xchg
andl
pop
lret
mov
jae
dec
int3
adc
push
or
movsb
xchg
out
xlat
je
mov
sub
push
inc
or
fdivl
and
outsb
adc
ljmp
mov
aad
add
pop
rclb
mov
dec
cmpsb
push
inc
inc
addb
or
testb
xchg
jecxz
dec
jne
mov
xchg
dec
test
sbb
mov
jge
sbb
std
mov
pop
jl
lods
lods
jnp
xor
adc
test
cmp
pop
sub
push
add
lods
mov
mov
jecxz
decb
in
push
sub
imul
inc
push
and
push
xchg
mov
pop
jp
mov
es
and
jmp
arpl
in
int3
adc
mov
sahf
ffree
inc
pop
mov
test
cmovnp
dec
dec
xor
push
mov
movsl
ret
icebp
push
push
shl
ret
pop
push
cmp
clc
pushf
lret
inc
add
in
std
pushf
loopne
or
push
dec
jp
scas
ret
cmp
mov
aad
cmp
popa
lea
lds
outsb
pusha
cmc
sbb
xor
inc
std
pop
les
je
cli
das
xchg
xor
jge
cld
mov
xor
into
xchg
clc
int
mov
into
fldcw
aaa
cltd
daa
mov
in
push
xor
and
adc
aaa
sub
sub
insb
jecxz
or
jno
flds
imul
jnp
pop
negb
xor
adcb
data16
sbb
shl
test
out
ja
inc
push
hlt
mov
test
iret
pusha
cmp
sbb
dec
cmc
sarb
jno
aad
ja
xchg
cmpsl
std
flds
jmp
lret
adc
fcoml
ds
fdivr
mov
pop
call
and
gs
mov
pop
xchg
sbb
mov
add
mov
ss
push
cmp
cmp
loope
adc
jmp
inc
adc
dec
and
fists
push
int
out
jb
fisubl
jle
dec
add
push
inc
bound
pushf
push
add
sub
cmp
xchg
pushf
mov
icebp
jmp
add
sub
lock
leave
ds
jnp
xchg
data16
xor
adc
aam
aaa
mov
adc
and
sarl
adc
aam
inc
cs
inc
push
push
adc
leave
cmp
push
aas
mov
pop
inc
aad
hlt
stos
xchg
in
sub
adc
and
leave
out
test
mov
adc
scas
xchg
hlt
jo
or
cmp
mov
xchg
insl
test
pop
push
lea
xchg
sub
mov
xchg
sahf
repnz
push
and
push
out
pushf
and
bound
pop
xor
jp
push
ja
add
test
pusha
rcrl
mov
pop
mov
insb
insl
sbb
xchg
std
sbb
sub
inc
mov
ficoms
cltd
ja
adc
in
fadd
pop
push
pop
adc
adc
mov
inc
faddl
sub
ret
adc
cwtl
aas
out
jl
xor
fimuls
mov
std
pop
xor
shl
and
xor
lds
xor
xor
cmp
inc
rcr
mov
sub
lcall
sahf
movsl
nop
cmpsb
ljmp
shll
stc
push
dec
cmpsl
jns
mov
add
dec
sbb
ret
out
shll
jo
sub
out
sub
sub
ret
and
cmp
jno
push
inc
add
xlat
xchg
inc
hlt
out
cwtl
repz
push
cmp
sub
hlt
mov
sbb
and
or
jae
jb
mov
dec
fsubp
aas
sahf
cmpsl
imul
mov
inc
cmp
mov
adc
test
cmc
xchg
lahf
pushf
jo
das
pop
jne
add
xchg
pop
in
push
cmpsl
mov
mov
mov
sbb
imul
push
push
add
cmp
push
cmp
pop
stos
adc
cmpsl
xor
ds
adcb
cmp
pop
push
inc
je
and
imul
jp
or
mov
add
dec
lods
shl
adc
addr16
push
sbb
repnz
aam
fadds
mov
adc
bnd
mov
add
orb
inc
or
xchg
mov
adc
xor
mov
call
test
mov
cmpsb
movb
adc
adc
sbb
xchg
xchg
lods
cld
stos
and
sub
pop
insl
rcll
fldl2e
sbb
push
test
and
xchg
daa
or
mov
rorl
popf
je
sub
lcall
add
ja
bound
and
jns
mov
mov
pop
loop
dec
je
fs
mov
inc
jnp
dec
xor
ja
or
jnp
jo
pop
iret
mov
xor
push
fnstcw
dec
cmp
push
adcb
mov
jmp
movsb
pop
push
jns
or
dec
jne
test
dec
call
xor
dec
mov
test
xchg
and
and
pop
jbe
sahf
out
mov
jo
test
mov
std
and
cltd
push
daa
cld
sbb
cmp
out
mov
gs
fnstsw
push
cmc
jnp
mov
push
inc
lcall
xchg
sbb
ret
les
mov
repz
xlat
and
das
cmpsb
movsl
or
int
jnp
int
or
cmp
popf
stc
cmp
mov
jp
mov
stos
fcomip
lahf
fs
jo
jge
iret
aaa
pop
out
sbb
sbb
out
je
mov
push
aam
lea
cmp
mov
inc
out
pop
or
push
dec
add
mov
mov
pop
pop
shrl
jbe
push
xchg
out
push
pop
mov
stc
movsb
xor
add
xor
push
cmp
lds
bound
test
pusha
bound
add
scas
hlt
cld
popf
mov
rorl
xchg
mov
cmp
push
push
lret
inc
pop
bt
cmp
data16
inc
dec
cmp
mov
out
or
pop
hlt
push
dec
cmp
cmpsb
mov
sub
inc
adc
xor
adc
rcrl
mov
popf
icebp
mov
and
push
cltd
shll
ds
xor
je
cmp
mov
xchg
jns
xchg
inc
cmpb
mov
dec
pop
subl
push
repz
scas
ret
xchg
insb
pusha
mov
inc
aam
adc
mov
mov
lret
cmpsl
decb
mov
out
loop
mov
mov
cmp
push
stos
pop
movsl
mov
icebp
aad
scas
mov
call
push
jns
lahf
xchg
lcall
into
mov
fisubrl
lock
add
push
cmp
es
or
gs
shlb
cmp
jmp
nop
dec
testb
mov
sub
aad
repnz
inc
lcall
cld
test
push
jge
rcrl
les
and
sbb
rolb
push
shrb
mov
jo
push
cmp
xor
scas
divl
lock
push
jecxz
fcomps
test
cmp
adc
ja
mov
mov
shl
or
test
popa
dec
lods
mov
mov
rolb
iret
cltd
movsb
fcmovbe
mov
cmp
mov
stos
test
pop
mov
repnz
push
adc
out
stc
loopne
test
mov
pop
mov
imul
lret
xchg
fldl
and
push
pushf
or
push
adc
mov
xchg
cli
dec
movsl
push
inc
xlat
pop
xor
enter
push
mov
and
les
movsb
aad
scas
mov
aad
or
mov
push
shlb
call
stc
push
outsb
jle
add
inc
mov
loope
leave
cmp
xchg
pop
mov
pop
pusha
icebp
arpl
add
aad
lds
fstpt
popf
mov
sbb
fisttpll
xchg
aad
das
incb
fs
pop
shll
inc
int3
dec
clc
push
in
shrb
sub
aam
adc
lcall
and
pop
leave
pop
push
mov
dec
movsl
lret
xchg
test
push
popf
daa
xor
jbe
lods
mov
mov
fisubs
dec
lods
xlat
push
aaa
mov
adc
xchg
inc
mov
popa
incl
jb
mov
stc
add
cmp
fsubr
stc
pop
dec
enter
out
jmp
add
lds
ret
popa
das
insb
or
add
mov
andb
sbb
imul
jge
dec
shlb
lret
je
nop
mov
fistpll
cmp
orb
ret
jp
xor
or
int
fstpt
mov
add
push
jmp
push
lahf
lahf
and
andl
cmp
pop
jle
sub
out
push
adc
mov
dec
mov
jb
aam
mov
xor
jbe
cmp
mov
jne
out
sbb
push
jns
mov
jmp
dec
lock
inc
add
xor
cld
xor
es
int3
adc
mov
pop
add
mov
xchg
mov
mov
loopne
lock
mov
cmpsb
cmpsb
mov
mov
ss
das
add
roll
mov
sbb
test
cmpsb
jne
daa
shl
adc
jge
sbb
mov
xchg
xchg
inc
mov
jb
gs
int
mov
xor
cmp
ftst
sarb
add
sub
mov
mov
scas
iret
bnd
xchg
out
push
jno
cli
add
add
lahf
jne
in
cmpsb
fidivrs
jo
icebp
ret
cmp
clc
inc
push
or
je
adc
imul
scas
inc
fs
lods
das
mov
push
push
loopne
int
rcll
push
fsubrs
bound
jnp
jbe
xor
dec
cmp
shll
jo
xchg
scas
imul
xchg
xchg
xchg
out
cmpsb
insb
push
test
movsl
movsb
jne
std
add
cmp
bound
fcompl
pop
int
xor
outsb
add
dec
mov
mov
jmp
and
lock
push
xchg
pop
das
dec
add
sbb
stos
sbb
pop
jb
in
in
int
and
add
dec
sahf
sbb
xchg
notl
call
movsl
test
lret
aad
jbe
pop
or
sub
inc
scas
ficomps
dec
inc
adc
dec
cmp
push
or
shrb
and
lret
repz
cwtl
mov
je
pop
aam
mov
adc
fwait
call
ret
jmp
mov
in
cmp
mov
add
cltd
rep
and
pop
jae
popa
stc
sbb
int
ja
xlat
aad
adc
mov
mov
mull
inc
pop
mov
push
aaa
out
jbe
stos
or
loop
pop
inc
jg
mov
push
and
les
sbb
jmp
adc
dec
jl
aas
insb
adc
dec
sbb
loop
cld
push
addb
sbb
cmpsl
jnp
into
cli
pop
pop
jbe
lahf
popa
ret
lods
mov
xchg
lcall
mov
pop
fcmovnb
cmp
add
ljmp
ss
or
add
pop
pop
add
xchg
dec
neg
fidivl
mov
sti
mov
sti
loop
jo
js
rcll
sbb
and
js
mov
stc
je
xor
ds
lds
dec
mov
arpl
add
rolb
or
inc
mov
fbstp
mov
sbb
mov
xchg
iret
mov
lcall
aam
stc
fmuls
sub
jle
xor
jno
loopne
gs
insb
rclb
lcall
pop
inc
scas
adc
leave
pop
js
daa
in
mov
cmp
testl
or
dec
iret
into
dec
mov
jle
push
mov
push
fmull
into
aad
jne
or
movsb
jecxz
mov
inc
mov
or
jo
aaa
test
xchg
lds
pop
and
into
in
fprem1
ds
jg
adc
mov
popf
jne
in
xchg
sub
mov
insl
stos
sbb
popa
fucomi
fbld
xchg
dec
stc
repz
fmull
stc
scas
fnstsw
and
stc
cmp
imul
cmp
roll
je
negl
mulb
inc
mov
mov
les
dec
cmp
dec
rolb
push
hlt
out
test
push
fisttps
jo
data16
mov
enter
push
dec
mov
inc
call
mov
adc
mov
cmpsl
call
fdivrl
pusha
mov
xchg
or
sub
cmc
inc
jne
dec
cmp
cmpsb
xor
xchg
movsl
push
mov
scas
fisubs
or
push
pop
ror
insl
add
dec
pop
cmpsl
pop
inc
fisttpl
fildl
fstps
les
mov
mov
sti
jecxz
pop
adc
jns
outsb
mov
es
jg
mov
xchg
jmp
xor
and
add
test
and
mov
adc
ret
daa
push
jle
repnz
es
int
mov
sub
push
push
sub
test
in
jae
cmp
rcrl
test
lock
add
adc
je
scas
adc
lret
cmp
sbb
mov
add
sbb
xor
jecxz
sub
pop
push
mov
push
and
popf
xchg
add
lret
mov
push
cwtl
xchg
add
pop
mov
xchg
shll
fmul
insl
sub
xchg
test
pop
push
aad
pop
daa
or
push
xchg
int3
test
sub
and
call
add
or
push
inc
mov
scas
xor
in
loope
cmp
inc
adc
jbe
add
cmp
std
pop
push
enter
and
dec
sbb
xor
and
adc
xor
sub
jle
leave
and
sbb
repz
nop
lea
inc
pusha
add
js
mov
jle
dec
jle
or
aam
pushf
bound
inc
fwait
xor
push
int3
scas
lcall
gs
mulb
adc
pop
std
stos
xlat
add
inc
adc
sub
xchg
mov
test
out
outsl
je
out
push
mov
repz
jecxz
or
popa
sarb
jb
movsl
lcall
xchg
or
jge
mov
cmpsb
fsubs
scas
add
pop
xchg
mov
lret
lock
pop
lds
sub
je
repnz
addb
adc
orl
push
mov
inc
mov
pop
lret
pop
mov
repnz
test
adc
lods
fld
popf
mov
cli
daa
sbb
add
pop
and
cwtl
rclb
fistl
jl
data16
in
lds
lea
xor
aad
cmp
stc
xchg
sub
iret
dec
lea
inc
js
ret
adc
imul
cmpsb
fwait
inc
aas
inc
hlt
jbe
fsub
lods
cwtl
fimuls
aad
stos
cmp
test
push
fs
shl
popf
sarb
cmp
es
jo
xchg
out
cmp
pop
cwtl
inc
dec
fldenv
and
popa
adc
aaa
and
aad
dec
hlt
test
bound
mov
and
xchg
pop
test
xchg
test
imul
push
sbb
inc
jmp
movntps
jbe
inc
and
clc
not
imul
fistl
dec
jl
loopne
jbe
jl
mov
push
imul
pushf
xchg
lock
cltd
mov
imul
xchg
lds
add
cwtl
push
or
cmpb
lcall
ljmp
out
frstor
bound
repnz
lods
nop
sbb
and
lret
fisttpl
adc
das
dec
sub
fldenv
loopne
cmp
insl
je
sti
and
dec
cld
jmp
in
ror
aad
xor
and
int3
fnstcw
jecxz
arpl
lea
mov
mov
push
cmp
fcmove
jno
ljmp
sbb
pop
inc
out
cmpsl
cltd
cli
jno
arpl
lock
adc
cmp
xchg
jo
jae
push
and
pop
outsl
bound
pop
inc
pop
cltd
xor
push
adc
add
lahf
out
mov
out
push
jg
push
lahf
jle
popf
das
negl
shl
jbe
sub
cmpsb
test
dec
xor
pop
push
movsb
dec
shrb
or
xchg
lods
andb
push
sarl
add
jnp
mov
lret
jl
lods
pop
pop
pop
andb
inc
negb
add
repz
xor
cmp
cmp
cwtl
loope
lock
inc
lret
jns
scas
add
xchg
jae
leave
ds
ds
dec
pop
popl
ret
adc
lret
dec
push
push
ds
push
outsl
test
sub
rorl
fstps
push
adc
sahf
adc
jo
xor
rolb
jg
pop
push
ret
and
leave
lds
inc
insb
es
nop
sub
fdivs
mov
lret
ret
sub
mov
ret
dec
or
test
jb
gs
sub
cwtl
sbb
movsb
inc
dec
js
clc
cwtl
cld
dec
lea
fs
je
mov
test
push
mov
and
or
out
cmpb
stos
cld
mov
fucomp
push
push
rcrl
cmp
outsb
shlb
adc
sub
lock
push
inc
orl
inc
push
movsb
clc
cwtl
leave
cmp
adc
lods
movsl
lcall
nop
mov
arpl
xchg
pushf
push
pusha
mov
dec
inc
pop
clc
pop
sarb
insl
lock
outsb
or
dec
test
jnp
fwait
mov
ret
rolb
xchg
addr16
std
repz
aam
test
lret
js
xchg
or
iret
push
xchg
cmc
jge
mov
pop
jmp
mov
jb
jno
jbe
cmp
adc
cwtl
repz
and
push
and
xor
mov
mov
dec
jecxz
push
xor
dec
sub
jmp
pushf
jae
out
stos
lods
push
test
pop
faddl
data16
repnz
lret
mov
or
mov
stos
dec
das
fistpl
push
test
sbb
test
fsubrl
sub
fistps
outsl
xchg
sub
inc
xlat
in
mov
push
dec
pop
out
in
rcrb
clc
aad
pusha
inc
inc
jp
movsl
fbstp
sub
pop
fistpll
jb
out
pop
adc
enter
xlat
push
lods
dec
or
ret
xlat
and
or
cmp
ljmp
pushf
fidivs
dec
sub
in
out
xor
adc
insb
or
imul
sbb
add
out
bound
lea
js
jge
js
in
sahf
adc
cmp
or
jne
out
xor
inc
loopne
aas
cwtl
lahf
inc
xor
sbb
lcall
pop
inc
adc
test
rolb
cmp
addr16
dec
lods
mov
xor
fnsave
or
in
movsl
neg
lahf
cmp
xchg
cs
int3
push
cmp
in
mov
mov
inc
insl
call
push
arpl
inc
loope
movsl
fnstsw
push
aad
inc
frstor
pushf
daa
cwtl
into
sub
scas
mov
and
rcrb
mov
testl
push
lahf
or
ficomps
or
push
mov
test
push
mov
mov
filds
or
push
pop
jmp
cltd
ud0
int
xor
les
sbb
or
setno
sbb
adcl
fs
mov
lea
pusha
popf
shrl
test
les
in
insb
xor
and
pop
sbb
push
jge
push
mov
lods
in
pop
mov
or
lret
mov
push
stc
out
stos
pusha
mov
push
or
or
lea
and
cld
cmovg
loop
sbb
add
jbe
into
push
mov
sbbb
mov
int
sub
add
xor
adc
sub
repnz
outsl
stos
adc
dec
sbb
call
mov
cmp
sbb
push
xchg
jecxz
and
gs
das
pop
xchg
in
popf
outsb
and
xchg
leave
test
outsb
das
sbb
inc
jl
mov
ret
mov
sub
std
xchg
mov
sarb
cmp
jno
icebp
mul
insb
cmp
in
stos
test
jge
iret
inc
sbb
stc
pop
out
int3
lahf
lock
in
xchg
pop
jp
shlb
es
adc
test
fdecstp
xchg
and
xchg
adc
ljmp
popf
sbbb
push
les
iret
sub
sbb
dec
pop
jb
fcmovu
and
js
push
add
dec
adc
push
mov
mov
loope
mov
imul
cmpb
mov
fsubr
fs
subl
les
outsl
lods
lock
rcrb
push
rol
popa
sbb
inc
mov
dec
dec
std
jge
xlat
pushf
out
cmpsb
lods
mov
rcrb
and
pop
xorb
fnstenv
in
icebp
stos
testl
inc
jmp
or
jecxz
std
out
lods
mov
xchg
push
mov
out
popa
lcall
jmp
pop
jecxz
addl
rcrb
xchg
jo
xchg
insb
mov
push
sub
scas
lcall
adc
xor
dec
inc
and
pop
outsl
fwait
jl
jae
and
ds
xor
cmp
test
cld
inc
xor
or
xchg
mov
hlt
jno
add
leave
addl
sub
imul
popa
sbb
test
bound
push
xchg
fsubrl
xchg
cs
gs
nop
pop
add
les
call
adc
mov
dec
push
mov
ljmp
fwait
iret
or
mov
aad
data16
and
incb
fmuls
xchg
mov
push
jb
adc
jl
inc
push
jle
mov
out
loop
sbb
xlat
xchg
outsb
rcr
sarb
in
bound
sbb
in
sbb
daa
mov
fnsave
rcl
and
push
aad
add
ret
lods
xchg
jg
sub
sbb
inc
sub
out
dec
jl
jmp
xchg
clc
xchg
pop
sub
adc
xchg
mov
out
adc
adc
xchg
pop
orb
ja
cmpsl
and
stos
adc
test
jp
in
popa
xchg
hlt
dec
test
sub
in
add
xchg
or
jns
cmovb
mov
xor
out
push
dec
fwait
cld
dec
lods
xor
scas
fdivrp
jecxz
add
daa
adc
leave
cmc
jno
mov
xchg
ret
mov
lock
push
dec
jg
jle
stos
jge
dec
sbb
lahf
pop
subl
cmp
add
fildll
movsb
and
add
sbb
js
fnstenv
xchg
inc
shrl
inc
mov
lcall
mov
hlt
daa
ret
imul
mov
mov
dec
std
mov
lods
cmp
jb
push
mov
pushf
pcmpgtb
data16
mov
jge
and
inc
lea
repnz
cmpsl
loop
jbe
enter
and
mov
fldl
data16
adc
push
cmc
ror
add
in
or
push
imul
jnp
hlt
mov
jae
adc
shlb
imul
sbb
inc
and
ret
je
ljmp
adcb
xchg
notb
in
push
sbbb
push
xchg
xchg
cli
xor
out
repnz
iret
repnz
addr16
popa
imul
push
lds
je
push
or
mov
xchg
or
jne
inc
loope
fcom
mov
jns
sti
xchg
push
cmp
ret
divb
cmp
aam
aas
adc
hlt
scas
pusha
cld
xchg
out
lock
dec
sbbb
adc
mov
sub
sbb
and
addr16
aaa
scas
push
jl
es
add
insl
ljmp
scas
enterw
cmp
mov
xor
add
and
addr16
neg
xchg
sub
pop
repnz
daa
jae
pop
mov
hlt
ss
mov
das
popf
sub
mov
testl
sub
adc
xorl
sahf
mov
push
xchg
dec
dec
add
lods
adc
out
adc
sahf
ss
cmpb
fisubs
or
frstor
sub
js
in
xor
call
in
ficomps
dec
jno
ret
cmp
mov
jg
xor
fistpl
jae
cmpsl
xchg
stos
clc
scas
push
xor
adc
cwtl
add
cmpb
pushf
ss
dec
pusha
insb
outsb
mov
clc
sub
fstl
mov
sahf
adc
dec
icebp
jmp
sub
mov
jae
or
lcall
push
popf
and
ljmp
jp
xchg
jge
sbb
dec
into
jns
mov
xor
pop
dec
adc
jl
enter
push
sbb
scas
mov
cmc
loopne
imul
mov
shll
je
popa
movsl
nop
sub
pop
rcr
jae
lds
fwait
push
dec
mov
jmp
int
xchg
inc
xor
dec
stos
fsin
inc
inc
out
outsl
mov
test
shrd
cmp
xor
dec
inc
mov
dec
mov
dec
in
aaa
call
les
std
add
ljmp
imul
cmc
sti
pop
or
lcall
and
cmp
mov
lock
fptan
cli
lds
out
leave
gs
aam
mov
mov
sub
jnp
sahf
out
inc
mov
mov
jmp
add
add
clc
vandps
rorb
jge
repnz
xorl
gs
push
cmp
sub
pop
cmp
push
inc
push
mov
cld
mov
xor
js
fnstsw
xor
ret
test
push
scas
push
bound
pop
add
test
push
mov
in
adc
scas
and
jae
sbb
ss
and
mov
sti
cmp
into
push
pop
sbb
stos
lret
inc
lds
cmp
add
mov
fbstp
mov
pop
mov
pop
lret
fdivs
arpl
std
je
adc
popf
add
push
aaa
or
fcompl
test
or
inc
imul
jge
pop
aad
repz
mov
pusha
mov
adc
push
mov
mov
mov
dec
icebp
and
pop
mov
xchg
aam
fwait
scas
cmp
jle
xchg
sub
je
clc
push
push
and
clc
jbe
pop
xchg
fistl
mov
mov
shll
dec
lods
and
xchg
lret
mov
dec
gs
bound
and
insl
lcall
dec
jb
inc
jmp
pushf
xchg
negb
or
jecxz
dec
andb
ficoms
push
and
hlt
push
push
push
pusha
mov
mov
mov
cs
cmp
js
mov
xor
mov
loop
enter
lret
mov
jg
sti
jl
daa
aas
and
pop
inc
hlt
and
outsl
pop
sbb
xchg
pop
jno
sbb
inc
jmp
push
cmp
enter
dec
cmp
add
ljmp
inc
xor
lcall
addr16
sub
in
addr16
mov
jmp
mov
add
push
dec
sub
adc
sbb
pop
fdivrl
push
push
testl
shll
daa
dec
addr16
aaa
ss
jl
lods
js
sub
dec
push
or
pop
inc
scas
cmpsl
das
adc
mov
pop
scas
jecxz
addr16
push
add
lea
mov
push
stos
xchg
pop
insl
arpl
adc
add
pop
shr
mov
jge
jle
push
cmp
fwait
sbb
imul
jg
inc
call
aam
mov
and
jle
sbb
jb
xorb
jmp
mov
in
ror
or
xchg
cmp
xchg
add
js
pop
lret
test
js
scas
cmp
mov
es
fimuls
sar
cmc
add
xchg
push
cwtl
mov
inc
mov
fiaddl
outsl
jnp
mov
test
pop
inc
xchg
call
dec
dec
mov
cmp
push
inc
mov
std
mov
loopne
pushf
insl
frstor
sbb
gs
outsl
mov
cmp
out
dec
pop
pop
push
xchg
add
push
hlt
and
movsl
or
lock
push
xor
fcmovnbe
mov
gs
fadds
data16
rorl
stos
mov
push
or
or
arpl
adcb
or
pusha
xlat
lret
or
out
xorl
mov
out
xchg
inc
adcb
inc
sbb
je
dec
push
lock
push
mov
add
jmp
addr16
xor
ficoms
dec
lods
xor
xor
pop
jmp
and
call
adc
loop
repz
add
xor
sti
subl
mov
xor
mov
add
mov
pop
jne
sbb
dec
push
jg
mov
in
cmpl
rorl
sbb
sbb
mov
cltd
xor
jecxz
pop
adc
test
mov
jnp
xchg
cmp
ljmp
dec
xor
mov
adc
repz
jmp
fucomip
pushf
inc
sub
add
aad
or
shl
arpl
leave
fidivl
jle
sbbl
incl
data16
pop
mov
cmp
jmp
test
gs
mov
stos
mov
cmp
adc
stos
and
pop
cmpsb
cmp
adc
icebp
sbb
cwtl
bound
mov
mov
sub
fdivrl
fisubrl
mov
das
inc
sbb
sbb
out
inc
mov
rorl
xchg
test
adc
jae
mov
lret
frstor
jbe
add
pushf
rcll
sahf
mov
push
into
outsb
mov
loope
jmp
push
ss
imul
dec
cmp
icebp
sub
sbb
std
add
mov
pop
push
das
sub
or
call
jmp
leave
mov
cmpsl
fcoms
sub
push
xchg
mov
fsubs
gs
dec
push
cwtl
lock
mov
inc
mov
jno
sub
sahf
arpl
ret
push
mov
mov
adc
js
imul
clc
jmp
xchg
popf
push
xchg
push
dec
mov
push
arpl
pop
cld
pop
xor
mov
jmp
sti
popf
mov
daa
and
je
cmpsb
jb
mov
sahf
pusha
pop
push
jl
cmp
ss
ds
jae
add
pop
pop
mov
cmp
shlb
and
shlb
cmp
imul
add
xchg
jle
xchg
mov
jns
xchg
daa
pop
insb
loop
sbb
das
jl
dec
push
pop
mov
fs
enter
aam
mov
pop
movsl
adc
mov
les
mov
icebp
cmpsb
xchg
push
loop
popf
cltd
imul
dec
dec
dec
add
lods
adc
push
lret
inc
fstl
mov
mov
pop
test
add
xchg
or
xor
push
pop
or
and
test
pop
repnz
cld
xchg
lcall
xor
movb
scas
ret
sub
popf
dec
xchg
xchg
inc
std
leave
pop
and
int3
xchg
bound
or
mov
rcpps
adc
popl
mov
mov
jle
pusha
iret
roll
pop
add
add
cmp
fwait
das
jnp
dec
cmpsl
adc
xchg
jp
cltd
les
xchg
lret
dec
ljmp
loop
cmp
push
mov
imul
push
push
movsl
data16
and
iret
es
daa
ret
sub
sar
add
nop
or
arpl
scas
lcall
cs
jle
sub
aas
xchg
jo
add
clc
outsl
test
iret
stos
sbb
push
sbb
adc
call
xor
fnstsw
insb
lock
inc
in
loope
addl
notb
mov
and
lahf
aas
and
push
aam
cmp
and
decl
lea
out
jno
mov
sub
sahf
lcall
rorb
inc
cld
xor
jne
xchg
sub
pop
xor
outsb
push
and
pushf
mov
ret
mov
mov
mov
push
jb
push
loopne
lcall
adc
jecxz
xor
add
int
addb
xchg
push
sbb
mov
xchg
jmp
ds
clc
or
lea
jb
jmp
shlb
and
rcrb
xor
pop
out
mull
mov
or
inc
sbb
icebp
xchg
mov
scas
out
sarl
fwait
aas
xchg
ja
push
mov
mov
sub
xchg
sti
fdivr
scas
mov
stos
pop
bound
jns
orb
out
nop
mov
cmp
push
inc
out
push
sbb
iret
fwait
in
sbb
sub
jl
repnz
lds
mov
jg
out
dec
adc
mov
fadds
inc
cmpsl
jmpw
lcall
or
xor
mov
cmp
cmp
sub
rorb
insb
repz
add
movb
insb
adc
xorl
aaa
ja
xchg
xchg
nop
pop
adc
jns
mov
push
sarl
clc
xor
loopne
push
imul
add
not
outsb
or
ja
sti
arpl
add
add
sub
xor
and
inc
scas
into
popa
les
push
insl
xchg
push
mov
mov
shrl
pop
rcrl
inc
dec
inc
mov
mov
jmp
pop
xor
clc
jnp
xor
data16
lret
lcall
idivb
inc
push
pop
cld
pop
daa
jae
push
mov
dec
pop
inc
fsubrs
xor
xchg
lea
mov
adc
push
mov
test
or
loope
xlat
fs
iret
push
cmp
fadds
mov
loopne
clc
fcomip
mov
cmpsl
imul
mov
push
roll
mov
push
mov
loope
cmp
or
nop
dec
xorl
mov
jp
pop
or
push
xor
sbb
iret
xor
pushf
dec
sbb
lds
scas
mov
rcrb
imul
xlat
into
pop
cs
push
pop
imul
jae
dec
inc
adcb
xchg
aad
ss
push
xor
jb
sub
push
mov
lahf
mov
ja
inc
sbb
out
in
push
movsl
sbb
ret
fs
jo
xor
scas
ds
shll
cmp
scas
fmull
movsl
scas
inc
jg
inc
pushl
rolb
cli
mov
push
nop
xor
das
popl
inc
frstor
clc
imul
add
or
xor
in
in
loop
fisubrs
std
clc
cld
dec
ja
inc
out
insb
and
dec
sbb
insl
inc
and
mov
mov
imul
fidivrs
das
inc
mov
xor
iret
hlt
sbb
insb
push
xchg
call
jns
popf
inc
outsb
icebp
push
and
add
movsb
cmp
xor
xchg
mov
or
dec
add
test
cmp
fiadds
cmpsb
rcl
imul
push
xchg
add
sub
scas
js
mov
or
std
xor
int
ja
push
jbe
das
xor
dec
adc
mov
test
fdivr
stos
push
mov
push
xchg
and
adc
test
jb
mov
aas
mov
shlb
inc
xchg
mov
fs
dec
scas
jecxz
inc
cmp
xchg
clc
or
adc
or
ljmp
adc
cmpsb
inc
test
sbbl
xorb
dec
cmp
mov
push
xchg
pop
pop
jg
xchg
and
lds
ljmp
test
popa
out
es
push
repz
pop
jmp
mov
cmp
out
cs
fdivr
scas
push
dec
test
in
jno
lret
mov
and
mov
cmp
repz
or
push
adc
and
or
jmp
lret
jmp
out
hlt
lret
jns
jae
sbb
in
sbb
repz
or
iret
pop
mov
inc
add
jae
push
lret
and
mov
sbb
test
js
and
clc
sahf
mov
int
mov
push
xor
pop
inc
inc
divb
xchg
inc
and
mov
sbb
hlt
xor
repz
arpl
out
loope
rcll
pop
xchg
lods
fcos
adc
xchg
cwtl
popa
and
movsb
leave
adc
add
fstpl
sub
push
mov
sub
xchg
mov
imul
call
fdivrl
in
mov
sti
jge
sbb
push
jg
lods
aaa
shl
jb
movsb
icebp
dec
dec
mov
jb
faddl
pop
daa
hlt
ja
call
push
addr16
loope
adc
repnz
or
jnp
out
fwait
in
leave
hlt
pop
stos
gs
and
pop
cltd
mov
lcall
ds
push
aad
js
into
insb
in
and
cmp
mov
rcr
or
dec
sahf
fildl
cmpl
push
clc
testl
test
out
das
or
popa
sub
sahf
lret
pushf
xchg
inc
test
popa
int
mov
notl
clc
xchg
stos
inc
aad
popf
cs
xchg
lahf
dec
loopne
lds
movsb
push
fdivl
sbb
adc
mov
xchg
andb
cmpsl
push
shll
pop
in
push
stos
clc
pop
nop
popf
xor
cmp
mov
imulb
in
jg
hlt
in
lahf
bound
pop
dec
push
xchg
cmc
ret
fldenv
push
je
inc
push
adc
push
or
inc
cmp
xlat
jmp
insl
push
fmul
push
jg
jbe
fwait
push
cmpl
mov
inc
fs
cmp
pusha
leave
jno
repz
cmp
sti
or
cld
mov
mov
stos
add
mov
dec
dec
and
pusha
mov
pop
add
push
inc
scas
pop
sub
adc
scas
stc
push
xchg
out
ret
jns
xor
cmp
cli
mov
lahf
inc
callw
adc
xchg
fs
into
ja
nop
xlat
jle
out
sub
cmp
dec
stc
xor
icebp
pop
push
add
lods
inc
cmpsb
out
inc
addb
push
or
mov
out
lock
sbb
lea
scas
mov
jnp
sbb
shll
jge
cmp
ret
xor
mov
mov
dec
mov
inc
shrl
add
and
cmp
cmp
imulb
xor
sub
in
das
mov
push
xlat
jne
jae
jl
adc
add
movsb
aaa
lea
cmpsl
pop
test
cld
jnp
in
nop
push
cmp
push
into
insl
push
insb
mov
mov
mov
dec
and
mov
psubsb
loop
in
jle
andl
ret
jge
xor
push
repz
push
fmull
mov
lcall
clc
cmp
pop
sub
mov
mov
jno
rorb
leave
pop
adc
cli
in
jns
xchg
cmp
xor
inc
popa
xor
in
outsl
in
rol
lods
mov
mov
scas
adc
pop
in
mov
imul
xchg
insb
dec
push
test
movsl
cmp
shlb
aas
jb
sub
dec
in
jno
pop
lahf
fmuls
pop
jg
outsl
fidivrs
sub
sub
jnp
aaa
push
insl
mov
cmpsb
movsb
pop
add
cmp
cmp
cmp
das
jl
xchg
cmp
testl
std
inc
jp
jnp
adc
mov
inc
int3
or
inc
js
push
lock
inc
sub
pushf
push
daa
sub
fdivs
cmp
arpl
mov
fildl
pop
ret
test
scas
mov
adc
inc
addb
shrb
jle
repnz
xor
les
cld
loop
dec
daa
jp
xchg
dec
outsl
inc
mov
insl
jns
mov
xchg
dec
push
sbbb
or
mov
dec
dec
stos
pushf
cltd
mov
pop
orl
shrd
cmpsb
xchg
inc
and
movsl
jl
scas
mov
mov
pop
xor
out
mov
xlat
test
fnstsw
es
fs
mov
push
daa
mov
xchg
cmp
add
sub
and
out
push
cmpsl
adc
add
loope
iret
fwait
sbb
mov
orb
jb
loopne
cs
sbb
mov
fs
inc
pop
adc
xor
lods
dec
or
mov
cmpsl
outsb
xchg
adc
rolb
leave
fstps
or
shrl
out
push
movsl
hlt
aam
mov
stos
shrl
pop
and
mov
bound
dec
xchg
mov
mov
mov
shrb
push
add
mov
xchg
icebp
mov
mov
xor
cmpb
shr
sub
icebp
les
jnp
cli
adc
mov
lds
repz
out
or
sbb
or
pop
ja
and
sub
and
pop
addb
jmp
fnop
mov
int
imul
shlb
sub
inc
sub
shlb
lods
dec
les
xor
jge
cmp
repz
mov
sub
cmc
shl
inc
sbb
mov
movsb
lods
mov
inc
fiadds
lret
call
in
lods
loop
std
movsb
and
imull
orb
in
rcl
fnstcw
jae
jae
dec
enter
cs
jge
outsl
push
pop
push
es
insl
push
out
stos
jnp
lds
ss
out
fcmovnu
jcxz
pop
es
cmp
sbb
xor
fwait
jl
js
push
arpl
pop
dec
cmp
mov
mov
dec
xor
sub
adc
pop
clc
mov
sbb
cmovnp
in
jns
jb
adc
push
adc
incl
popa
bound
add
pop
and
lock
stos
cwtl
xchg
dec
add
push
jnp
repnz
into
popf
das
lock
sarb
int
das
push
sbb
arpl
jmp
pop
adc
push
mov
sbb
shl
xor
loop
sbb
int
mov
push
sbb
inc
mov
xchg
pusha
pop
jecxz
movsl
call
jb
ret
fstpt
mov
mov
inc
pop
je
mov
mov
adc
gs
xchg
and
clc
mov
inc
cmp
sub
or
inc
cmp
imul
mov
cmp
pop
aam
pop
shrl
loopne
nop
insl
sub
insb
cmpsb
iret
lret
xchg
cld
out
neg
popf
fs
mov
je
test
fstps
mov
xor
sbb
icebp
lock
fistl
xchg
sub
ljmp
es
aad
mov
test
imul
add
cmp
rclb
jo
stos
insl
xchg
cs
ss
dec
push
mov
stc
cs
popf
inc
inc
ja
mov
or
sbb
loopne
sbb
ds
test
insb
dec
push
mov
dec
inc
sub
and
data16
loope
adc
mov
push
push
sbb
movsb
jnp
xchg
mov
pop
icebp
fiadds
sbb
pop
pop
fistl
jge
shll
xchg
jae
addr16
and
dec
ljmp
xchg
mov
popf
push
sbbl
mov
mov
mov
adc
adc
sub
sbb
xchg
xchg
nop
jle
dec
mov
add
stos
sbb
shl
icebp
jae
sub
in
loop
bound
inc
fldl
daa
test
sbb
inc
pop
push
adc
bnd
out
imul
and
mov
xchg
cmp
leave
rolb
pop
and
out
dec
push
rcll
jecxz
adc
add
or
sub
cli
les
jno
in
pushf
mov
fnstcw
fnsave
push
cmp
fwait
je
fistpl
or
lret
ret
aad
inc
decl
xchg
jb
push
aaa
rcrb
sub
inc
lret
xchg
push
push
mov
out
jmp
add
loop
mov
sub
das
jg
test
fwait
sbbb
in
stc
push
insb
sbb
popa
sbb
xorb
out
mov
fcompl
das
fimuls
sub
mov
dec
mov
out
sbb
daa
rorl
stos
andb
fistpl
stc
mov
stos
pop
inc
xchg
pop
pop
push
fnsave
mov
jecxz
in
jecxz
jg
adc
mov
pop
clc
or
mov
xchg
cmp
movsb
jp
sub
sub
lods
in
sub
jp
xchg
in
int
mov
imul
inc
test
push
mov
jne
scas
fiadds
mov
push
fnstcw
dec
mov
xchg
jmp
lcall
mov
cwtl
repnz
xchg
adc
cmpsb
std
cwtl
or
loop
push
mov
push
push
mov
fstl
jae
mov
push
mov
or
js
xchg
jne
jno
jns
mov
xchg
aas
into
push
popa
mov
inc
lret
out
movsb
mov
mov
fcoms
lret
arpl
jb
scas
lret
fisubrl
xchg
mov
and
jl
cmp
std
je
lea
sbb
push
enter
sbb
xchg
adc
cmp
jl
jnp
xchg
data16
xchg
and
outsl
fs
push
iret
sbb
std
mov
xchg
rolb
shr
lods
popa
out
call
pop
sub
loopne
jne
xchg
add
sub
xor
sub
pop
stc
and
xchg
cltd
jnp
cmp
jb
mov
jb
stos
push
stos
cmp
push
ja
imul
sti
pop
pusha
fwait
jmp
inc
movsl
lods
pushf
inc
inc
pop
jne
stc
xor
dec
imul
test
stc
ret
movsb
xchg
mov
pop
sbb
std
inc
dec
sub
inc
push
add
cmp
push
pop
loopne
les
call
mov
cmp
leave
cmp
mov
rorl
xor
into
or
push
pop
loope
dec
fucom
subl
adc
aad
xor
jns
jp
lret
pop
insl
cwtl
test
or
inc
stc
pop
jecxz
pop
cmp
pop
les
jmp
int3
scas
mov
xor
cmp
imul
icebp
cli
inc
push
mov
int
and
mov
mov
xor
cmp
fisubrl
or
xor
subb
add
xor
pop
idivl
icebp
outsb
cmpsb
mov
jecxz
outsl
push
rcl
mov
mov
xchg
mov
mov
mov
mov
mov
mov
das
hlt
arpl
add
mov
cld
cmp
cmp
cmp
push
aaa
and
and
aas
fstp
dec
clc
jnp
cmp
insl
aaa
mov
inc
dec
cmc
test
add
addr16
push
sarl
sub
js
or
inc
mov
push
sbb
xor
xor
sub
push
or
popa
pop
bound
xchg
js
or
movsl
sub
movsl
and
mov
int
test
gs
or
icebp
jmp
int
xor
mov
fists
aas
decl
outsl
jmp
pop
pusha
js
push
xchg
mov
shll
outsb
pop
pusha
xchg
stos
sbb
std
inc
jno
fidivrl
dec
mov
and
jo
cmpsl
push
sti
sub
popf
add
test
rol
xor
insb
into
stos
mov
mov
punpckhbw
add
and
jg
fnsave
iret
enter
rcrb
outsl
ljmp
jo
jae
test
add
cli
pop
lahf
call
cwtl
pop
xor
pop
mov
ja
arpl
xchg
int3
fstpl
rcll
movsb
sar
push
mov
mov
sbb
mov
xchg
stos
ja
xchg
adc
gs
stos
xchg
cmpsb
jecxz
dec
movsb
in
inc
test
jnp
in
int
xor
sub
mov
in
test
jmp
loope
fdivl
adc
and
repnz
sahf
mov
adc
mov
lods
sub
mov
pop
add
push
jmp
sbb
xchg
mov
ds
out
xchg
dec
sub
mov
std
test
int
jecxz
call
icebp
aas
lods
sbb
sahf
xlat
in
cmp
gs
ds
mov
jge
cmp
push
imul
xchg
mov
jge
mov
inc
ret
dec
stos
insl
popf
std
jae
iret
add
mov
pop
mov
push
and
inc
mov
imul
push
push
xchg
inc
jb
and
std
and
cmp
inc
sbb
shll
xorl
lods
inc
cmp
cs
scas
roll
push
xor
cmp
test
mov
scas
sbb
ret
scas
in
movsl
or
cwtl
movq
xor
pop
fcmovnb
and
sub
lret
loope
imul
mov
mov
cmp
shl
push
outsb
mov
fiadds
orl
cs
dec
int
inc
mov
outsl
or
in
mov
ss
lcall
add
jnp
in
jno
push
outsl
mov
scas
jecxz
negb
sbb
orb
jb
and
fstp
jmp
add
movsb
inc
imul
or
repnz
adc
in
adc
fidivrl
cltd
mov
dec
fiaddl
fwait
test
pop
js
sbb
jl
fmul
shlw
out
in
nop
sbb
mov
push
pop
leave
ficoms
jb
icebp
cmpsl
outsb
mov
mov
scas
mov
roll
sub
pop
aaa
rcr
cmp
icebp
lahf
aaa
imulb
add
and
xor
fcompl
lea
and
adc
fsubr
xchg
pop
rclb
loop
sub
inc
out
and
ljmp
pop
movsl
push
cmp
das
leave
add
push
fldenv
lret
pop
pop
pop
mov
shlb
or
sub
sub
inc
push
cmp
bound
cmpsb
clc
ja
mov
add
stc
sub
repnz
int3
mov
ret
fimuls
lret
test
xchg
jne
lods
inc
and
cwtl
jns
or
push
mov
and
into
frstor
stos
popa
jb
loope
idivb
gs
ss
dec
int
stos
clc
push
scas
test
scas
int
lcall
mov
cmp
mov
clc
lock
mov
dec
cmp
xchg
cmp
mov
das
into
cs
sub
xchg
pop
lcall
pop
shl
test
xchg
push
test
shlb
push
lret
or
xor
loop
xor
popa
sar
ret
ljmp
inc
cmp
das
rolb
jno
add
js
mov
push
xchg
push
or
jnp
dec
in
jle
pop
jp
sub
les
std
loope
ljmp
mov
cld
adc
dec
xchg
repnz
mov
mulb
jns
or
jnp
push
dec
mov
call
add
repz
mov
sub
jmp
pop
mov
pop
cmpsb
in
std
jne
push
mov
pop
repnz
adc
mov
mov
or
in
push
mov
cmpsb
popa
scas
xchg
mov
in
and
lea
pop
lret
and
sub
pop
sti
mov
add
repz
rclb
sub
shlb
ret
pusha
ss
les
ret
mov
cs
addb
mov
push
mov
hlt
imul
clc
idiv
pop
jle
mov
sub
test
std
pop
into
mov
cld
mov
add
mov
xchg
inc
int
sbb
aad
js
inc
icebp
mov
xchg
fmuls
or
inc
pop
cmpsl
shlb
aaa
and
scas
or
dec
sbb
push
adc
daa
mov
jo
out
lahf
in
clc
xor
add
mov
aas
loopne
and
sub
test
notl
inc
push
mov
je
mov
lret
pop
call
mov
mov
and
imul
xor
pop
scas
in
jbe
inc
mov
bound
fstl
es
pushf
jecxz
lret
jl
dec
xor
outsb
xorb
inc
or
mov
clc
and
pop
jl
stos
stc
push
stc
adcb
mov
icebp
lods
inc
rclb
jp
or
jg
or
push
adc
int3
xchg
sti
inc
jae
xchg
push
sbb
jb
icebp
ljmp
fisttpll
adc
push
mov
data16
stos
clc
sub
adc
mov
or
jno
add
mov
mov
loopne
jnp
lock
cli
pop
pusha
popa
dec
clc
and
pop
inc
loop
jne
lods
cmp
mov
icebp
mov
add
or
out
or
aam
ljmp
dec
fcmovu
stos
jb
ret
xchg
and
xchg
hlt
mov
call
jge
testb
push
int3
mov
mov
push
lods
pop
hlt
jle
mov
in
xchg
scas
fwait
out
sub
adc
sub
xchg
std
push
les
insb
mov
inc
ret
ja
mov
das
ret
pop
add
dec
sbb
mov
sbbb
mov
sbb
mov
mov
imulb
jecxz
notb
cli
mov
loop
or
int3
push
jmp
out
pop
jl
jnp
daa
testl
je
push
jnp
ror
mov
xchg
js
dec
insb
loop
or
lret
lods
add
sub
adc
lahf
sub
bound
cmp
repnz
ror
sub
aad
adc
insl
mov
mov
jl
js
fwait
jns
push
and
push
es
sbb
lret
out
push
mov
cld
test
add
rep
scas
adc
pop
push
mov
or
je
xor
lock
outsl
cli
cwtl
jno,pt
mov
sarb
push
xchg
dec
movl
enter
lea
rol
and
mov
inc
mov
dec
rcll
sub
or
push
inc
scas
sbb
sbb
test
aad
out
repnz
mov
pop
jns
ja
lcall
stos
sarl
lods
dec
jo
sbb
sub
lahf
xor
divb
out
mov
adc
xor
push
xor
mov
clc
aaa
aad
stos
push
mov
out
or
and
dec
std
adcb
xor
int3
adc
scas
push
jecxz
test
cmp
add
pushf
adc
pushf
imulb
xlat
push
dec
mov
xor
mov
ret
mov
pop
int
sbb
dec
push
arpl
dec
push
sti
mov
imul
ss
sub
cmpsb
imulb
test
mov
jns
dec
mov
jl
pop
out
shlb
pushf
pop
sub
jg
int
sarl
loope
xlat
enter
xchg
fisubrl
mov
fldl
jg
out
mov
outsb
sbb
mov
lcall
mov
loope
pop
pusha
sar
pop
pop
iret
cld
add
roll
mov
dec
fnstsw
arpl
rcrl
movsb
xchg
and
adcl
xchg
and
lock
popf
and
lret
orl
xchg
ss
scas
sub
fcmovu
cltd
mov
in
mov
vandps
lahf
popf
movsb
gs
mov
add
and
cmp
or
mov
jl
push
pop
sbb
adc
mov
cmp
test
popa
jl
ret
or
in
lcall
loopne
push
decb
mov
outsb
pop
sub
mov
icebp
roll
sti
inc
pop
mov
sub
and
movsb
pop
pop
es
xchg
xor
cmpsb
fwait
mov
das
jmp
dec
cmp
xor
test
outsl
mov
lds
out
add
lcall
lods
inc
cmp
adc
in
fadds
stos
data16
out
or
mov
stos
fldt
adc
int3
imul
sbb
aaa
cmp
dec
mov
jl
cmc
pop
aaa
roll
movsb
xchg
dec
or
mov
sub
pop
movsb
in
push
sbb
and
xchg
movsl
or
cmp
mov
scas
cmp
fildll
dec
or
jns
xor
jne
test
pop
and
leave
mov
mov
movsb
cmpsl
lahf
xor
cmp
loope
test
and
pop
or
in
sub
xor
push
das
lret
int3
jne
or
loopne
jmp
fildll
xchg
push
jae
mov
std
sub
inc
mov
rcrl
jge
clc
push
pop
lret
in
mov
sahf
dec
or
xchg
xchg
mov
faddl
fdivs
inc
add
push
gs
inc
scas
test
ds
sub
mov
outsl
mov
inc
mov
repz
mov
clc
lret
push
mov
cmp
pop
mov
and
push
lea
fdivrs
push
sub
popa
aad
pusha
push
shl
adc
sahf
pop
and
lret
fsubrs
sar
push
pop
inc
bound
dec
es
adc
ret
lret
pop
or
in
and
jmp
int3
ss
or
out
dec
sbb
jne
push
jns
jnp
push
adc
xchg
fldcw
sub
pop
and
mov
imulb
adc
push
pop
lods
adc
push
and
sbb
lds
push
sbbb
or
fldcw
hlt
fisubrl
jmp
pop
rep
popa
ror
xor
sbb
fisubrl
out
xchg
ja
lock
fildll
dec
adc
cs
aas
pop
lcall
jecxz
xor
arpl
insw
int3
iret
rcr
inc
out
cltd
hlt
js
push
and
addr16
add
in
push
push
popf
fmull
inc
xor
test
sarb
pop
xchg
in
dec
push
mov
pop
or
push
cmp
das
push
leave
jecxz
xchg
imul
xchg
sub
inc
mov
sahf
repnz
xchg
cli
lret
jnp
aad
int3
jne
leave
inc
lds
ret
dec
sub
clc
fnsave
xchg
sar
setne
movsb
imulb
ja
cmp
negb
sbb
std
into
loope
lock
pushf
pop
adcb
mov
mov
xchg
push
dec
popf
pop
sbb
in
adcb
or
ret
stos
sti
call
in
imul
ret
push
shl
fadds
inc
pop
adc
xchg
cld
jno
popa
sbb
push
inc
jnp
adc
std
jecxz
dec
sbb
mov
loop
pop
push
aas
stos
mov
adc
mov
inc
in
mov
int
and
repnz
jecxz
stos
cltd
push
out
xor
mov
fsubrs
push
mov
dec
pop
popf
addl
iret
xor
adc
icebp
incb
mov
and
negb
dec
jb
loop
push
ljmp
sbb
scas
fwait
pushf
xor
mov
sahf
mov
pusha
cmpsb
adcb
mov
sbb
test
enter
dec
xorb
out
or
cmp
pop
std
std
rcll
pop
in
add
cmp
push
movsl
daa
mov
inc
and
subb
pop
jns
sbb
push
insb
mov
push
jb
pop
sub
mov
movsl
test
sub
add
daa
or
cmpl
push
js
sbb
nop
adc
sarb
addb
mov
and
jle
aas
inc
dec
mov
aaa
outsb
dec
or
stc
cwtl
rol
into
fcomps
jb
sbb
loope
dec
inc
fs
mov
aam
arpl
add
push
sub
std
push
xor
daa
lods
jle
adc
add
and
cltd
mov
dec
sahf
adc
loop
jmp
cmp
shll
mov
rorb
xor
add
fsubp
aaa
icebp
mov
dec
mov
cmp
mov
xor
jnp
sbb
stos
ss
pop
insl
in
sahf
je
ja
aad
jb
lahf
cld
adcl
aaa
lret
sbb
stos
pushf
xor
or
fdivrs
ret
stos
xor
fwait
adc
rcrb
mov
lret
add
clc
inc
xchg
lcall
inc
mov
movsl
cmp
ss
or
ficoml
mov
andl
mov
sub
add
jns
jge
aaa
and
lahf
popf
push
dec
inc
dec
xor
fs
jle
cmp
fsub
scas
or
iret
xchg
in
enter
js
inc
test
or
inc
sub
jmp
sbb
shrl
pop
sbb
aam
ss
jmp
and
inc
pop
xchg
push
insl
jne
mov
stos
jl
or
data16
push
cmpsl
roll
sahf
push
push
stc
je
subb
insb
pop
scas
mov
jmp
lods
mov
jl
xchg
jo
push
jp
cmp
mov
add
stos
test
cmp
ja
popf
cmp
cmp
pop
push
xchg
dec
add
push
jns
out
mov
xchg
insl
xor
gs
xor
mov
mov
shl
or
mov
add
xor
dec
nop
pop
insb
sub
mov
cmp
popa
push
xchg
jg
mov
mov
mov
lods
andb
inc
adc
cmp
sub
dec
imul
test
stc
lea
outsl
mov
je
call
jl
jge
leave
daa
pusha
inc
insb
pop
bound
inc
dec
sub
insl
inc
dec
arpl
mov
pop
dec
cmp
test
dec
cmp
mov
lods
fdivs
fisubs
loop
aaa
xchg
hlt
outsb
divl
sub
ljmp
sub
mov
dec
mov
and
mov
push
dec
pop
mov
lret
jl
adc
pop
jp
mov
and
das
js
xchg
inc
imul
shl
sbb
push
sbb
cld
jg
xor
xchg
out
rcr
loopne
test
add
mov
push
and
mov
bound
mov
jb
stos
fidivrs
jmp
cltd
jle
dec
cmp
lret
sbb
shl
aam
inc
lret
xlat
pop
loop
test
adcb
and
cmp
push
and
lock
dec
sbb
sahf
xor
push
cmp
gs
popf
pop
cs
or
cltd
jns
inc
xor
inc
dec
xchg
cli
insl
jmp
out
das
repz
lcall
fwait
jg
jmp
mov
cltd
mov
hlt
dec
pop
outsl
jno
push
jno
pop
call
mov
mov
test
imul
adc
inc
sbb
mov
mov
jmp
sub
fsubrp
xor
pusha
adc
sub
mov
enter
mov
fstpl
pop
jb
es
fimuls
aam
mov
int
popf
inc
cmp
mov
add
fldenv
scas
rcll
add
xchg
int3
outsb
imul
roll
outsb
fstpt
sub
mov
adc
sti
or
jge
sbb
movsb
pushf
sbb
sti
mov
cld
mov
int
cmp
dec
and
aad
sti
dec
inc
adc
sbb
xor
test
push
pop
jns
adc
mov
ss
shl
push
push
dec
mov
adc
inc
nop
cmp
pop
push
sti
sub
jo
cmp
jmp
xor
subb
into
add
bound
inc
repnz
das
jbe
jge
lds
mov
pop
incl
ljmp
xchg
das
cwtl
icebp
cmc
pop
loop
xlat
test
repz
pushf
pop
mov
addl
movsb
xchg
ds
push
mov
push
test
xor
mov
lret
push
push
or
and
and
stos
jbe
xlat
enter
dec
mov
cmp
rcll
inc
pop
push
adc
push
pop
mov
xchg
sbb
mov
sahf
adc
sbb
sbb
sub
xchg
push
sub
xchg
std
popa
lcall
sub
imul
insb
in
mov
xchg
aaa
xchg
xchg
testl
ret
lods
and
add
dec
inc
cmp
clc
mov
cmp
jg
fistpl
push
cld
shl
dec
rorb
push
in
out
mov
stc
nop
hlt
mov
push
lds
cld
shlb
lds
cld
fidivrs
xchg
jmp
movsl
push
dec
mov
mov
std
sti
jl
shr
push
cmp
mov
mov
xchg
sbb
es
pop
scas
push
push
inc
and
dec
movsl
jecxz
daa
inc
or
mov
mov
mov
pop
daa
addr16
push
pusha
subl
rolb
xor
mov
cs
movhlps
es
cmp
and
and
xchg
inc
or
pop
dec
xchg
and
idivb
cmc
gs
fstpt
sahf
sbb
cwtl
pop
rcl
mov
jbe
jg
nop
or
adc
je
test
sbb
xchg
pop
pop
out
cli
push
addb
lret
sub
jge
out
mov
addr16
repnz
mov
inc
or
xor
xor
pop
sti
xchg
loop
sub
inc
jecxz
inc
jle
and
push
bound
xchg
dec
mov
aas
pop
neg
lahf
mov
subb
cmp
mov
inc
inc
sub
push
mov
nop
ret
mov
xlat
and
adc
iret
add
mov
sub
addr16
push
mov
xor
jo
ror
mov
pop
mov
jle
or
insb
fistpll
jge
aaa
iret
fdivrl
xchg
enter
or
ficoml
sub
or
xor
sbb
mov
addb
rcl
push
adc
les
mov
sti
xor
mov
stos
insb
cmp
xor
pop
adc
imul
dec
mov
adc
sub
mov
jl
fisubl
jbe
ja
mov
xor
popa
dec
cmp
shlb
mov
jbe
js
sti
pop
cmp
cmp
add
movb
mov
cmp
pop
in
or
popl
out
iret
pop
int3
out
mov
cwtl
jo
lods
mov
dec
cmp
ret
xchg
jecxz
xchg
mov
fmuls
daa
or
and
jge
adc
push
add
push
cmp
nop
xor
addr16
push
sbb
xlat
in
shl
jmp
mov
out
bound
mov
iret
xor
mov
inc
and
fcom
mov
xchg
in
jge
or
xchg
mov
jb
das
jl
add
and
cmp
adc
dec
mov
lahf
jecxz
xlat
xor
xor
cmpsb
pop
mov
mov
mov
ljmp
andb
scas
jmp
mov
lcall
lea
aad
scas
jno
movsb
push
dec
sbb
dec
in
xchg
cmpsl
dec
test
jae
pop
pop
sub
add
shrl
aad
out
lret
movsl
inc
nop
xchg
cwtl
xchg
xchg
rorl
push
mov
and
leave
in
and
push
inc
adcl
lcall
inc
out
adc
inc
push
mov
insl
repnz
push
pop
clts
push
mov
xchg
sub
shl
sub
inc
aas
cwtl
add
xchg
in
pop
in
cmp
push
test
mov
pop
addr16
mov
or
sbb
mov
leave
and
inc
push
add
mov
mov
clc
push
jecxz
cmp
push
call
sbb
repnz
mov
jecxz
push
int3
xorl
popa
js
push
sarl
jae
add
add
mov
into
ret
sbb
pop
rorb
push
mov
imul
pop
dec
sub
pushl
xor
faddl
pop
enter
sbb
dec
test
adc
dec
subb
das
or
clc
ljmp
mov
rorl
cmp
ljmp
jle
cmp
mov
sahf
test
inc
repnz
enter
imul
push
outsb
pop
or
fldl
jecxz
xor
jbe
lahf
mov
xor
es
sbb
in
or
mov
lds
aaa
mov
and
xor
movsl
vsubsd
ret
mov
arpl
adc
inc
jbe
aad
adc
push
xor
sub
push
or
adc
lret
outsb
lods
pop
addr16
fmuls
fadd
ret
mov
pusha
sbb
out
pop
pop
fsubrl
in
jp
sbb
and
cmpsb
jne
fnstsw
pusha
inc
outsb
xchg
xchg
jns
pop
and
inc
nop
add
fs
jb
xor
scas
mov
sbb
cmp
fimull
arpl
out
hlt
sub
or
pop
mov
xor
aad
jno
lret
push
ss
into
out
movsb
xchg
notl
jns
xchg
mov
movsb
and
push
sub
mov
sbb
push
ss
cmp
dec
xchg
enter
mov
sbb
xchg
cld
adc
jecxz
punpckhdq
pusha
mov
orb
mov
pop
test
loop
sarb
mov
insb
cmp
test
pop
xchg
pop
mov
andl
mov
hlt
sub
sub
pop
ret
lods
fwait
lahf
or
rcr
pop
push
push
xchg
cmp
in
sarb
hlt
cmp
push
inc
fwait
pop
fcomps
fistl
xor
xor
sub
adc
cmp
xor
adc
leave
mov
loopne
ds
pop
scas
popf
sahf
in
xor
into
push
push
adc
stos
adc
push
inc
je
mov
outsb
scas
lock
addb
fcmovnb
aaa
adc
repnz
sub
sub
fstpt
imul
mov
mov
jnp
out
out
roll
leave
add
xchg
gs
int3
rclb
mov
sbb
int
imul
jne
cmp
ja
xchg
es
rcll
inc
loop
lds
xchg
mov
cmc
mov
add
cltd
loopne
inc
cmp
stos
dec
mov
stos
lea
scas
pop
mov
adc
leave
xchg
scas
cmpsb
je
add
mov
std
stc
pop
mov
mov
and
ds
enter
fildl
dec
jmp
rcr
ja
xlat
mov
cmpsb
loop
in
jle
stos
stc
pop
call
jns
xor
rclb
push
scas
notb
imull
loop
daa
test
lahf
xor
mov
jecxz
mov
loope
lahf
repz
call
xbegin
mov
cwtl
pop
xchg
leave
into
add
mov
fimull
rclb
ret
clc
jne
cli
jae
stc
fisttpll
xor
sti
push
insb
stos
cmpsl
mov
jo
repnz
mov
sti
cmp
cmpsb
test
clc
jns
jns
mov
add
sbb
xchg
mov
inc
test
pushf
push
push
or
add
cmp
in
push
loopne
loop
and
dec
or
push
sbb
add
stos
cmp
pop
shr
mov
inc
jo
test
les
add
cmp
and
cmp
lods
mov
push
sub
sbb
jmp
xor
inc
xchg
mov
add
popf
mov
dec
popa
or
filds
dec
lods
push
jns
out
fadds
add
sbb
int
das
add
add
push
cli
or
movb
fcomps
or
xor
xchg
movsb
jnp
in
xchg
fwait
jg
push
int3
dec
pop
xchg
mov
adc
and
mov
ret
push
scas
outsb
add
iret
fwait
js
mov
mov
xchg
addr16
data16
imul
test
into
mov
sub
ret
repz
test
mov
rcrb
push
mull
sub
add
pop
add
fldcw
in
mov
pop
test
jnp
jae
outsl
xlat
sbb
shl
aaa
movsl
js
jle
loope
xor
shll
sbb
adcl
xchg
xchg
adc
mov
mov
cmp
scas
insb
sar
mov
outsl
mov
xchg
mov
ss
push
fmuls
shll
sbb
jl
pop
in
out
sbb
xlat
cld
out
mov
clc
sbb
ficompl
mov
out
pop
leave
jp
jns
popf
xor
pusha
arpl
sbb
jo
xchg
std
insl
jb
es
sub
fldt
jg
jle
aaa
sub
shr
imul
sbb
cld
int3
sbb
shll
pop
inc
mov
jle
pushf
xchg
sbb
xchg
lahf
in
jno
pop
xor
ret
in
jecxz
cmpsl
cmp
add
clc
mov
xchg
test
push
rcr
dec
jg
pop
cmp
das
xchg
rclb
repz
mov
ja
adc
and
push
adc
xlat
push
add
sub
jl
pop
imul
es
rcrb
mov
outsl
mov
fnsave
mov
jmp
xor
sbb
fwait
lret
call
dec
lcall
and
repz
jge
pushf
shlb
mov
adc
dec
xchg
cmp
shll
scas
sbb
sub
and
test
iret
jo
fldl
bound
pop
mov
dec
sbb
jp
jno
adc
adc
pop
sbb
pop
sbb
push
adc
pop
ret
xchg
andl
sub
xchg
mov
orb
or
push
add
movsb
jmp
insb
mov
fcomip
push
sub
shr
add
push
scas
movsb
pushf
mov
adc
test
scas
rorl
jb
icebp
insb
push
scas
js
movsb
sbb
ret
add
push
das
popa
jno
cmp
seta
inc
xchg
fcoml
sub
iret
bound
sbb
aad
divl
shll
lods
mov
inc
shrl
push
mov
adc
and
inc
xchg
adc
push
dec
and
daa
jecxz
xchg
loopne
pop
push
push
movsl
call
or
push
sub
int
xchg
lods
in
mov
stos
add
int3
xor
pop
movsb
cli
xchg
mov
dec
jno
repz
imulb
add
add
dec
ds
testb
fnstsw
fwait
pop
push
cmp
sbb
xor
pushf
fs
inc
repz
rcl
sbb
std
jne
cwtl
jnp
add
bnd
out
aad
push
out
shrl
mov
fs
jp
push
jb
sbbl
bound
loopne
loope
xor
das
jp
lds
add
push
jo
dec
jmp
mov
sti
pusha
imull
cmpsl
and
cld
add
inc
repz
mov
decl
repz
sahf
push
and
push
jp
mov
jbe
mov
inc
jo
sub
ret
leave
pop
or
mov
loope
int3
cmp
or
int
push
dec
xlat
push
jl
xor
mov
jg
pop
jno
jo
popa
incb
imul
scas
bound
aaa
pusha
xchg
int
insl
or
ljmp
outsl
jge
cld
xor
pop
in
data16
mov
mov
popf
insb
push
fdivr
popa
movl
xchg
in
lret
mov
rcl
xchg
subb
pop
hlt
int3
ret
rcpps
lahf
mov
xchg
lea
test
popf
sub
cltd
mov
push
xlat
dec
push
sbb
out
test
dec
fdivl
test
pusha
hlt
icebp
imul
mov
ljmp
sub
xchg
sarb
repnz
push
adc
push
insb
adc
das
cmpsl
hlt
ud1
inc
fwait
push
cwtl
dec
data16
arpl
jl
cmp
loopne
sub
cmp
popf
mov
xchg
xchg
mov
inc
enter
sub
or
ljmp
mov
shr
lret
stos
pop
sahf
pop
adc
inc
neg
int
and
pop
push
inc
push
add
adc
mov
jg
lea
adc
out
punpcklbw
sbb
div
iret
cwtl
in
push
jns
jl
pop
pop
cld
or
cld
rol
inc
mov
add
les
push
inc
movsb
into
pop
je
inc
add
aas
sub
cmc
jge
lret
es
lods
mov
std
mov
and
push
mov
addr16
push
icebp
fstl
in
insb
cmp
and
jae
pop
aam
mov
inc
data16
mov
lret
cmpsb
push
imul
adc
push
rcr
lret
and
add
arpl
sub
jmp
cmp
push
sahf
shlb
lahf
push
cmpsb
aas
test
iret
sbb
push
pop
fld1
push
fisttps
repz
inc
xor
or
jo
mov
add
mov
out
fstpl
mov
adc
clc
clc
sbb
mov
repz
incl
mov
int3
xchg
push
rcll
pop
push
lret
cli
ljmp
and
xchg
jge
imul
add
mov
out
fsts
fisttpll
dec
cli
or
adc
lock
sbb
mov
dec
mov
lods
pop
cmp
cmpb
mov
scas
leave
mov
inc
dec
push
adc
pop
mov
es
jbe
pusha
add
adc
jp
xchg
mov
outsb
hlt
jno
imul
mov
xor
sar
push
mov
idivb
mov
and
popf
mov
loopne
in
nop
lods
pop
or
test
dec
test
sbbl
int
mov
dec
mov
clc
cmc
imul
jne
data16
inc
add
add
and
sbb
mov
stc
pop
push
lds
jle
ds
xor
fldt
dec
imul
mov
enter
jg
inc
inc
sbb
xlat
mov
mov
shlb
aad
jl
data16
loope
jo
out
add
scas
in
sbb
movsl
push
pop
sarb
imul
jae
cmp
enter
lahf
xchg
xor
std
xchg
dec
call
mov
or
dec
clc
pop
inc
cld
mov
popf
fcomps
dec
jmp
je
jae
fs
lcall
std
sbb
enter
adc
out
lods
popf
adc
lea
add
lahf
inc
fsts
inc
or
mov
fs
mov
test
aam
sbb
pushf
dec
arpl
fdivr
loopne
js
inc
clc
hlt
test
imul
fists
xchg
cmp
gs
insl
ss
mov
fistpl
sub
push
ljmp
cmp
push
loopne
and
jae
repnz
and
push
test
mov
lret
fbld
int3
lock
sbb
jecxz
push
jmp
fsubrl
out
cs
mov
out
mov
lret
add
push
sub
adc
mov
sbb
sbb
xor
test
cmpsb
jne
lcall
push
or
fs
test
cltd
aas
push
mov
push
out
mov
in
enter
stc
idiv
cmp
out
sbb
movsl
jae
inc
popf
dec
lods
ret
add
arpl
imul
bnd
push
adc
lods
or
adc
mov
mov
pop
cmp
test
push
sbb
mov
aas
mov
cli
push
jbe
and
in
xor
sub
xor
imul
mov
xchg
sub
les
add
movsb
jae
das
leave
loopne
and
push
cmp
sub
insb
mov
lods
addl
inc
add
xchg
dec
sub
push
mov
sub
jp
out
out
cmp
lock
aad
sahf
inc
in
inc
push
sahf
push
jb
repz
pushf
cs
sbb
cmpsl
dec
sub
jne
inc
mov
xchg
sub
sub
dec
dec
cmpsb
mov
or
mov
fmuls
loop
and
mov
sub
push
lret
stc
movq
in
or
push
push
dec
or
out
and
jne
pop
xlat
add
popf
xchg
aas
xchg
jnp
mov
clc
jl
cmp
xor
jns
addr16
faddl
cmp
hlt
xchg
dec
inc
arpl
push
and
test
movsb
and
cmc
imul
mov
dec
das
adc
sbb
add
xchg
and
dec
mov
movsb
testl
daa
sub
jnp
or
sub
sub
push
sbb
sub
decb
jl
mov
sbb
sahf
shlb
and
rorl
sub
movsl
sbb
ja
inc
fcom
stc
sbb
adc
push
or
std
dec
aam
xor
inc
pop
jnp
cld
jge
xor
sbb
lods
daa
lds
movsb
cmpsb
and
sti
mov
rclb
fiaddl
imul
pusha
lret
sbb
mov
int3
inc
add
enter
mov
adc
lcall
mov
mov
and
ljmp
cmp
cli
cmpsb
out
or
repnz
xor
sub
dec
pop
ljmp
push
mov
mov
cwtl
in
stos
enter
lahf
fidivrs
test
repnz
imul
jno
fs
mov
push
les
js
fs
mov
divl
int
cmp
cmp
repz
sbb
cli
inc
arpl
and
je
rcll
or
movb
iret
sbb
mov
dec
popa
es
out
xchg
in
cmp
int
xchg
sub
jl
push
test
jl
ljmp
cltd
mov
hlt
enter
mov
icebp
lret
mov
pop
jno
icebp
clc
add
cmp
sub
push
or
add
pushf
sti
test
xchg
ds
lcall
out
inc
sub
dec
outsl
imul
adc
cwtl
jp
sub
jl
mov
mov
rol
push
adc
lret
out
not
mov
push
and
fdivrs
in
aam
jo
inc
mov
std
frstor
cmpsl
xor
sahf
aad
sbb
xchg
sub
mov
inc
xchg
pop
xchg
arpl
std
test
scas
mov
inc
or
out
out
movsl
adc
mov
je
bound
xor
loopne
sbb
mov
push
or
mov
outsb
aam
cwtl
cmpsl
int
scas
enter
xchg
lcall
or
sti
jecxz
mov
jo
notb
mov
test
mov
cmc
adc
xchg
mov
call
lcall
cmp
or
add
insl
dec
xlat
mov
push
mov
mov
test
pop
imul
jnp
pop
pop
aas
dec
jbe
cmpsb
test
jg
mov
cmpsl
fs
add
pop
lahf
push
jae
and
inc
data16
nop
cmp
jno
cmp
and
aaa
xor
jl
push
stos
pusha
adc
mov
adc
adc
jne
adc
insl
ja
sbb
shrb
mov
jmp
mov
or
inc
or
js
inc
ss
stos
stc
addr16
loope
adc
mov
jbe
idivb
push
push
fs
xorl
pop
adc
push
jmp
lahf
cmp
cmp
les
sbb
movsb
jle
movsb
cld
add
sahf
adc
push
push
sbbb
mov
stos
dec
cltd
subb
repnz
pop
aaa
or
push
xchg
xchg
movsl
cmpsl
js
xchg
mov
scas
cltd
dec
mov
jg
stc
or
inc
inc
pop
insl
push
fs
loope
push
mov
loop
sarl
cmc
lea
inc
adc
stos
pop
add
sub
mov
inc
adc
xchg
movsl
ss
jmp
repnz
sahf
pop
or
ljmp
test
or
inc
push
mov
faddl
pushf
mov
sub
sbb
inc
inc
mov
mov
aaa
fnstcw
push
or
jp
or
dec
ss
inc
dec
dec
mov
push
lods
lcall
push
add
test
push
jecxz
jae
or
roll
aaa
cltd
and
ror
hlt
pop
and
ror
aam
inc
idivb
ret
mov
pop
cmp
test
sbb
sbb
lcall
cld
push
int3
clc
inc
dec
adc
xlat
push
push
and
sahf
in
movsb
hlt
xor
pause
outsl
or
es
cmp
outsl
cmpsl
in
faddl
push
inc
lahf
fstpt
mov
shr
jge
rolb
add
cmpsl
add
jg
les
lahf
adc
jne
lret
xchg
test
push
xor
ja
ds
fsubr
xchg
mov
fmuls
push
dec
repz
popa
scas
repz
lret
fdiv
dec
int
jg
pop
ss
mov
pop
sti
js
out
cmc
or
movsb
xchg
mov
adc
dec
xchg
call
test
pop
aad
push
sub
pop
in
mov
sub
fsincos
outsl
inc
insb
insl
push
pop
or
jmp
ja
clc
dec
lea
aad
fdivl
enter
xchg
cmpl
pop
lds
arpl
dec
or
mov
inc
mov
cpuid
add
xor
cmp
negl
add
push
push
fmuls
xor
cmp
loopne
add
xor
incl
push
and
sub
jae
push
fst
pop
cmpsb
adc
cmp
sub
rol
mov
andb
in
in
sbb
ds
in
lret
sti
lcall
cmp
es
cmp
dec
iret
in
xor
ret
mov
jp
inc
adcl
popl
stos
orl
push
inc
xchg
mov
idivl
stos
mov
out
sbb
sub
icebp
push
in
push
daa
stc
sub
sbb
out
adc
or
loop
pop
push
xchg
push
xchg
jge
imul
addr16
and
push
jmp
ds
cmp
mov
inc
cld
xorl
movntq
push
movsl
cwtl
mov
mov
gs
popa
mov
rcr
pop
jno
ljmp
and
cwtl
movsb
aam
idiv
mov
push
es
cmp
xchg
jecxz
stos
int3
push
mov
sbb
xor
lock
jns
add
jg
icebp
push
mov
pusha
leave
sub
mov
lcall
push
xchg
sub
xor
popa
sahf
pop
into
jge
push
xchg
adc
aam
jmp
mov
ffree
pop
out
das
call
test
pop
add
je
xor
fwait
cmp
xlat
scas
imulb
push
pop
dec
sub
pop
loopne
les
push
test
idivb
fistpl
hlt
sbb
xchg
fisubrs
pop
daa
xchg
call
dec
pop
xchg
push
xchg
jns
data16
into
or
sahf
cmp
mov
push
ljmp
push
xchg
ja
or
or
xchg
jnp
mov
or
mov
jne
push
push
mov
jne
mov
test
sub
lcall
ret
mov
pop
ss
hlt
jmp
lret
cli
in
jecxz
mov
lods
js
insl
stos
daa
inc
xchg
mov
cmc
adc
pop
xchg
pop
mov
or
fdivrp
lret
pop
fcoms
imul
rcl
jns
pop
cmc
dec
and
push
sub
mul
aaa
jb
inc
mov
pop
jp
or
push
sub
push
push
sub
jp
xchg
and
mov
push
movsb
pushf
adc
pop
or
mov
repnz
push
enter
or
pop
movsl
sbbb
shr
adc
imul
jbe
enter
sub
inc
dec
mov
push
jl
add
lods
push
cld
dec
lcall
fnstcw
inc
xchg
mov
cmp
lods
dec
fcomps
fists
xor
jne
and
mov
sbb
cmpsb
int3
test
dec
fldt
test
sarb
shll
test
dec
mov
pop
push
imull
add
xor
xchg
pop
jae
repz
addl
or
nop
outsl
push
mov
enter
cmc
cmpsb
inc
sub
fistl
jbe
cs
in
inc
out
jnp
dec
jge
lcall
inc
mov
bound
mov
adc
sbb
pop
sbbb
shrl
mov
mov
xor
dec
sub
cmpsb
int3
inc
xor
ret
rcrl
dec
cmpl
testl
mov
dec
lods
daa
cmpsb
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
popf
inc
sbb
and
dec
xlat
mov
pop
mov
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
fisttpl
mov
sub
imul
jecxz
sub
and
stc
inc
xor
in
gs
shrl
stos
push
sub
lock
dec
dec
outsb
mov
mov
fstl
orb
loope
rorl
xchg
mov
jb
stos
push
sbb
or
ds
xor
scas
adc
mov
adc
xchg
and
enter
pop
cmp
add
test
mov
in
push
sbb
or
xlat
jecxz
and
mov
sub
jae
cltd
xchg
idivb
arpl
cmp
cmp
jge
decl
sbb
jb
loope
rorl
sbb
dec
rorl
sbb
dec
lahf
mov
pop
adc
and
dec
rorl
sbb
test
jb
sbb
dec
rorl
sbb
dec
rcrl
sbb
dec
rorl
sbb
jnp
mov
pop
je
adc
and
or
and
rorb
mov
and
dec
rcrl
sbb
dec
rorl
sbb
dec
rorl
dec
mov
or
loope
rorl
sbb
dec
shrl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
cs
jmp
pop
je
stos
subl
in
es
je
sbb
pop
pushf
mov
pop
je
sbb
cmp
rcrb
ljmp
mov
je
jno
outsb
or
loope
rorl
sbb
mov
rcrb
mov
loope
fisttps
sbb
push
and
dec
rorl
sbb
mov
mov
pop
je
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
sbb
dec
rorl
xor
outsb
sbb
loope
jno
push
loopne
jecxz
mov
ret
test
or
push
jecxz
push
mov
mov
pop
imul
cld
push
or
dec
xor
mov
shll
cmp
add
xchg
rolb
das
and
mov
cmc
sub
jle
cmp
aas
data16
mov
xchg
aaa
cmp
pop
aas
test
xor
push
mov
repz
sbb
std
sub
mov
nop
push
int
and
outsb
xchg
cmp
shr
mov
inc
mov
jae
in
loop
aas
lret
adc
xchg
jo
mov
les
mov
cmp
fistpl
sub
pop
dec
adc
in
lahf
out
push
das
jecxz
or
in
xor
aaa
addr16
test
dec
icebp
mov
fiadds
mov
jg
mov
outsb
sbbb
xlat
cltd
push
jge
cmp
sahf
mov
lds
mov
adc
xor
pushf
jg
sub
sub
and
out
xchg
xchg
repnz
pop
ljmp
repz
mov
sub
or
or
xor
and
xchg
cltd
jbe
shl
std
adc
cmc
fcoms
or
mov
xor
andb
js
inc
fcoml
test
cmc
lcall
add
ljmp
jle
fidivs
bound
rcl
mov
xor
test
cmp
fs
lock
mov
mov
int
sub
dec
arpl
popf
push
sahf
testl
imul
addl
xor
mov
push
sub
in
rolb
daa
push
adc
icebp
xlat
jno
int3
out
push
lret
out
scas
nop
xor
adcl
cmp
hlt
into
jp
jno
pushf
jmp
cmp
scas
sub
mov
fcompl
in
scas
pop
xor
xlat
test
adc
sbb
addr16
mov
loopne
js
test
pushf
pop
adc
test
cmpsl
bound
pop
jmp
stos
mov
jecxz
push
jae
divb
mov
fdivrs
mov
outsl
push
flds
insb
es
pushl
dec
mov
sbb
fidivl
sub
les
loopne
test
mov
fs
mov
jecxz
push
adc
xchg
cld
enter
je
mov
cmpsb
mov
pushf
mov
out
adc
and
jb
call
popa
sub
movsb
arpl
push
dec
insb
sahf
or
xor
sbbb
jge
xchg
jp
push
mov
fmuls
mov
dec
pop
outsb
pop
push
sub
xchg
pushf
xorl
push
hlt
mov
xchg
daa
cmp
ficoml
xchg
in
out
rcll
cmp
push
lcall
lock
cli
pushf
and
ret
push
and
cmp
into
jbe
aaa
add
fwait
scas
or
sti
inc
mov
mov
icebp
aas
dec
push
or
inc
out
lea
jne
into
or
pop
adc
push
adc
or
movsb
or
movsb
ficoml
push
call
ja
out
repnz
movsb
lea
adc
pop
adc
inc
jno
fstpt
sub
in
scas
stos
out
cmp
cmpsb
push
or
mov
push
push
sbb
addb
scas
andl
das
sub
out
pop
cs
dec
outsl
sbb
nop
xchg
je
mov
addl
inc
inc
call
mov
aaa
cmp
sub
dec
or
lret
xlat
ret
sbb
sbb
les
sub
jbe
jge
xchg
ds
xlat
mov
jg
dec
dec
sbb
ret
and
aaa
out
push
mov
std
cmp
mov
data16
or
mov
adc
ret
ret
shll
xor
mov
scas
test
test
aam
sub
fists
mov
test
aas
sbb
flds
loop
or
mov
cld
pop
out
mov
adc
jns
cmp
lock
iret
sub
sub
shlb
test
mov
inc
xchg
xor
into
pop
pop
and
call
popa
lods
outsb
icebp
mov
jge
stc
mov
mov
movsl
cvtpi2ps
sub
mov
cs
mov
cmp
cld
movsl
out
mov
pop
cli
outsl
cli
and
pop
adc
xchg
loop
pop
mov
pop
dec
dec
rcrl
inc
fistpl
pop
stos
popa
inc
push
push
cmp
or
xor
adc
inc
mov
xchg
aad
gs
fstl
stos
adc
inc
add
mov
jp
xor
dec
sahf
sahf
in
sub
jl
dec
imul
dec
pushf
stc
lea
mov
cmp
sbb
scas
out
clc
jns
xchg
mov
out
pusha
xchg
fidivs
dec
mov
aaa
mov
movsl
out
int
in
inc
dec
xor
dec
inc
scas
test
fists
jo
pop
pop
cld
jle
cmc
je
lods
mov
cli
faddp
fisubrs
mov
lret
cmp
xor
xor
sbb
sarl
sub
movsb
xlat
loop
and
loope
pop
js
test
nop
jnp
dec
mov
out
int
jno
popa
jno
sub
push
emms
mov
xchg
test
fidivrl
jo
dec
xchg
rcll
sub
push
hlt
test
data16
mov
mov
adc
and
repz
push
arpl
adc
mov
add
int3
pop
out
add
sbb
pop
mov
jg
sub
adc
lret
fdivr
adcb
pop
xchg
or
cmp
push
shll
mov
mov
sbb
mov
sub
cmp
push
dec
iret
roll
mov
sbb
xchg
xor
mov
add
cld
pop
sub
mov
xlat
test
xor
cld
mov
ljmp
adc
leave
insl
inc
repnz
push
mov
dec
mov
lds
mov
cli
or
dec
xor
jb
xchg
push
popa
cli
mov
icebp
test
in
cmp
mov
pop
xor
and
iret
imul
test
int
fs
cmp
fdivs
inc
inc
add
jge
hlt
fists
inc
push
rorb
sub
inc
sub
js
add
cmpsb
loop
or
bound
add
rcrb
dec
and
enter
pop
adc
mov
mov
lds
stc
mov
pop
jge
out
inc
jno
cld
ds
xor
out
and
jo
xchg
mov
insw
into
pop
push
not
in
sarl
aaa
mov
stos
frstor
xchg
xchg
test
jne
test
sahf
mov
jecxz
cwtl
mov
mov
jg
imul
cmp
leave
cmc
sahf
mov
mov
test
add
jp
lock
mov
jo
sub
jg
pop
jge
cmpsb
xor
adc
mov
jmp
or
push
pop
mov
pop
lcall
and
mov
outsb
push
add
test
testb
out
out
adc
fwait
adc
push
jmp
out
es
ljmp
dec
dec
push
clc
jb
leave
addr16
xlat
sbbb
test
fsubrs
jns
sbb
add
xchg
rcll
shl
out
mov
push
in
ds
in
in
push
inc
dec
mov
mov
fmuls
fmuls
loop
int
scas
push
pop
test
pop
inc
daa
sub
in
mov
inc
lcall
push
lods
insl
pop
cli
mov
stos
mov
and
inc
pop
ret
bound
test
push
push
add
cmp
xor
mov
push
movsb
sbb
lret
rcl
mov
int3
ds
pop
and
aaa
pop
in
int
andl
jecxz
sbb
mov
std
inc
cmpsl
nop
lea
mov
dec
pop
jns
frstor
inc
xchg
mov
push
sbb
cmp
cld
in
xchg
jbe
jge
push
lcall
pushf
and
mov
pushf
and
adc
lods
out
xchg
mov
jmp
sbb
fsubp
stc
mov
mov
icebp
out
lret
cli
test
int3
movsb
test
xor
mov
stos
shrl
bound
ss
dec
jle
mov
jne
stos
test
push
xorl
cld
dec
jecxz
or
pop
cmp
cwtl
test
adc
imul
aaa
iret
shr
mov
or
hlt
push
std
adc
fidivl
and
in
and
icebp
cmp
mov
jp
js
sub
ss
xor
rclb
adc
mov
adcl
mov
xor
jnp
hlt
jae
cmp
jmp
cmpl
push
xor
inc
mov
jnp
lods
movsl
xchg
test
cmp
adc
inc
in
xor
int3
das
js
push
popf
aad
mov
in
pop
inc
cmp
add
fidivl
adc
hlt
xor
push
pop
outsb
mov
xchg
inc
adc
jp
push
jbe
inc
push
out
ja
push
loopne
xchg
enter
mov
int3
mov
adc
push
pop
out
push
mov
or
stos
mov
lret
stos
insb
add
mov
adc
repnz
inc
cli
daa
ret
inc
sbb
dec
out
inc
cmp
xchg
adc
add
sbb
xor
push
xor
out
mov
xchg
xchg
ret
ret
pusha
orl
inc
cmp
punpckhbw
mov
mov
loope
test
iret
jo
leave
xchg
xor
ret
mov
jae
enter
add
imul
cmp
xchg
and
mov
dec
xor
inc
sbbb
or
mov
mov
pushf
popa
xor
pop
lea
sub
sti
mov
xchg
aam
repnz
hlt
ljmp
ret
sbb
out
push
xchg
sub
jnp
cld
xchg
loopne
sar
std
push
adc
ss
sti
pop
orb
out
outsb
loopne
xchg
pusha
push
mov
fiadds
mov
iret
mov
dec
das
rcrb
bound
adc
popf
push
jno
push
fsts
mov
xor
cmpsb
sbb
mov
loopne
cmpl
or
mov
cmp
inc
mov
test
mov
sbb
sbb
pop
lret
xchg
jne
jb
sbb
in
push
cmp
mov
lcall
lods
jb
divl
lods
fwait
mov
jle,pt
lahf
pop
or
or
ds
push
fnstcw
mov
pushf
fadds
add
push
push
les
mov
out
out
cs
cmp
fst
iret
mov
push
inc
pop
add
push
mov
mov
sub
nop
daa
lahf
ss
loope,pn
es
and
sarl
out
aad
jmp
xchg
pop
dec
cmc
jle
ljmp
loop
xor
hlt
cmc
pop
push
sbb
jo
mov
cmpsb
pushf
mov
xchg
jl
adc
mov
mov
jge
arpl
cmc
imul
out
stc
mov
add
js
mov
addr16
lcall
inc
xchg
lcall
das
and
outsb
mov
cmp
inc
test
and
mov
es
sub
test
xchg
mov
fistps
push
aam
ficompl
lret
sbb
push
movsb
xchg
cmp
mov
cld
push
mov
popf
adc
xor
stos
add
lahf
mov
mov
mov
sbb
arpl
je
in
js
cmpl
test
sti
lret
jns
sbb
mov
jo
lock
outsb
test
scas
xor
movsb
jns
out
sarb
add
mov
xor
sbb
mov
int3
lea
adc
mov
dec
push
inc
hlt
mov
sub
add
in
add
mov
mov
aaa
jo
jmp
lods
adc
out
loopne
adc
in
rcl
call
nop
push
fdivl
es
test
push
loopne
dec
cmp
jecxz
jo
ds
mov
xchg
ja
testb
iret
mov
mov
mov
and
sub
test
and
jne
and
pop
jo
or
mov
jecxz
outsb
xor
stos
jl
fwait
inc
xlat
paddq
test
outsb
push
mov
inc
popa
inc
cltd
mov
jo
aas
jg
andb
lcall
sbb
xchg
in
in
movsb
ja
pushf
and
push
mov
inc
arpl
aam
inc
cmp
inc
jne
inc
mov
out
xchg
int
fldcw
jbe
or
test
xchg
mov
mul
loopne
push
test
out
push
push
sub
pop
push
dec
xor
ds
leave
dec
mov
jmp
push
xor
das
xchg
sub
das
push
bound
loop
xchg
sbb
nop
mov
incl
dec
vminps
and
into
xor
fs
xchg
mov
push
hlt
jnp
ret
jmp
icebp
out
cmp
jp
insb
pushf
out
add
pop
stos
xchg
mov
push
adc
mov
nop
dec
mov
pop
and
outsb
pushf
xchg
stos
outsb
pop
push
fdivrl
xchg
sbb
mov
jo
push
adc
adc
push
div
add
push
clc
adc
cld
je
fucomp
stc
rcl
ret
xor
adc
push
dec
mov
pop
cld
in
test
and
dec
dec
inc
mov
push
ja
sbb
push
and
subb
test
jb
lock
jp
fiadds
ret
test
ljmp
push
jne
fstpl
mov
and
loope
mov
xchg
xor
push
jp
out
lods
pop
jp
inc
lods
fldl
adc
adcl
jbe
mov
or
inc
inc
push
adc
jge
mov
iret
lahf
mov
sub
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
