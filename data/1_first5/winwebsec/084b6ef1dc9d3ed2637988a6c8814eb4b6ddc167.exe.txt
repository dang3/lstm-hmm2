jg
mov
lea
std
outsb
rolb
int3
xlat
aaa
lock
mov
sub
and
jge
sub
dec
adc
jb
mov
pop
mov
out
push
inc
ljmp
les
push
cmpsb
jbe
std
movsl
fnstenv
popa
mov
fiadds
xor
mov
outsb
ret
mov
mov
imul
in
jl
negb
lods
lahf
xchg
sbb
dec
icebp
xchg
les
js
xor
push
inc
jns
sarb
popf
ja
add
inc
test
cmpsl
pop
sub
rclb
in
dec
dec
mov
sub
icebp
push
lcall
sub
repz
xchg
iret
stos
ljmp
mov
push
fs
scas
sbb
cmp
or
sbb
insl
push
or
push
ljmp
jne
repnz
inc
fnstenv
jne
ret
lds
out
ljmp
xorb
pop
loop
sbb
dec
hlt
sub
xchg
in
movb
inc
aas
mov
xor
inc
fwait
fwait
lods
inc
sub
call
mov
gs
adc
push
sbb
jnp
xor
adc
and
lods
mov
ss
repz
imul
and
js
insb
in
icebp
in
and
jge
xlat
ja
cmpsl
arpl
mov
pop
loopne
into
movsl
and
inc
adc
xchg
add
bound
dec
pop
pop
mov
adc
mov
lret
adc
cld
popf
imul
es
lock
fsubs
jg
fisubrl
mov
ficoml
mov
jo
xor
pop
mov
mov
in
sarl
rcll
insb
push
scas
and
pop
jle
enter
movsl
roll
and
call
pop
shrb
imul
inc
dec
daa
rcrl
push
push
cmp
ds
lret
adc
xchg
adc
into
sub
shr
in
mov
mov
push
mov
sbb
push
popl
adc
mov
jns
fstp
jg
add
into
pop
popa
aam
les
outsl
cwtl
stos
cmc
push
dec
nop
adc
pusha
adc
fldenv
or
pop
inc
cmp
js
jle
imul
mov
mov
int3
fldt
movsb
ficompl
int
xor
xor
mov
in
mov
mov
jb
cmc
cmp
pop
cmp
stc
mull
lods
lds
cmp
add
xchg
mov
fbstp
push
fmull
imul
adc
into
shrd
lods
push
or
inc
xchg
popa
xor
fs
lods
and
jmp
dec
dec
in
jle
xor
add
js
or
fimull
aaa
iret
test
jnp
sub
faddl
push
arpl
out
gs
in
rcrl
cltd
xchg
add
repnz
movsl
sbb
out
xor
add
adc
int3
xchg
int
push
je
loopne
movq
dec
andl
repz
fdivrs
xor
inc
push
mov
mov
test
xchg
push
inc
sahf
dec
pop
inc
ret
cmp
rorb
in
popl
jl
adc
dec
xor
fcmovnu
xchg
aam
pop
jnp
hlt
mov
and
jecxz
subb
test
imul
rcll
xor
lods
bound
iret
pop
mov
sub
push
pop
adcb
and
out
ja
push
iret
or
addr16
dec
nop
push
mov
sbb
dec
dec
popf
ficoml
scas
xor
sbb
test
sbb
xorb
sbb
fldenv
js
loope
push
popa
push
push
pop
push
andl
jmp
dec
popf
xchg
aas
std
dec
ljmp
addr16
arpl
xchg
scas
and
cs
stos
and
aam
cmc
add
out
pusha
sbb
pop
mov
pop
mov
cli
lahf
std
pop
sub
lret
cltd
clc
pushf
push
das
xor
lret
int3
jns
inc
cmp
arpl
and
clc
sbb
lods
outsb
xchg
or
mov
test
aam
xlat
ss
int
cmpsl
or
xor
jp
jbe
hlt
dec
into
dec
js
test
inc
push
push
mov
imull
push
outsl
xchg
mov
sbb
xchg
stc
pop
push
movsl
out
mov
movsl
je
xchg
sbb
sbb
add
inc
ss
xchg
mov
pop
cmc
fistl
fs
aad
push
jnp
mov
lods
or
mov
leave
dec
mov
sbb
jae
jg
sbb
je
dec
pop
insb
add
dec
sbb
and
lds
test
mov
aad
sbb
popf
push
push
loopne
inc
inc
ljmp
rcrb
jge
fsubs
inc
mov
movsb
mov
adc
cvtps2pd
pop
mov
ret
sub
and
pop
in
faddl
into
jo
adc
push
push
lods
dec
stc
sub
lds
fimull
xchg
les
push
mov
enter
mov
scas
add
out
es
ja
movsb
cmpsl
leave
pop
into
sub
jb
mov
cli
subl
mov
inc
pusha
pop
cmp
cmpsb
data16
pop
wbinvd
cmp
jbe
xchg
popa
sbb
bound
xchg
addl
xlat
cwtl
cld
fdivl
mov
fdivrp
mov
add
adc
add
jae
push
push
and
adc
cmp
sbb
inc
inc
cmp
ds
mov
jbe
fstl
in
cmpsb
push
dec
jne
jne
cwtl
es
pop
ja
and
arpl
cs
cmpsb
rcrb
int
cmp
aam
jecxz
mov
sbb
mov
pop
outsb
inc
xchg
fwait
loop
adc
sarb
jge
dec
repz
lds
fildl
cmp
sub
scas
ss
repz
call
aas
in
and
lods
negb
and
and
subl
xchg
imul
sbb
xchg
ror
stos
sub
add
xchg
fdivs
or
cmp
jb
lret
test
std
and
fildl
or
sti
movsb
pop
inc
or
out
loopne
lods
sbb
js
cmpb
jb
or
inc
ds
test
cmp
mov
xorb
es
call
xor
sub
mov
bound
nop
mov
in
in
xlat
testl
sbb
push
sbb
orl
je
lahf
and
outsl
cmp
mov
mov
pushf
nop
test
jmp
sub
xchg
sbb
mov
in
mov
cmp
mov
pop
adcl
pushf
lods
in
sub
arpl
mov
repnz
mov
add
mov
nop
test
sub
jno
and
aas
andl
jns
lock
sub
out
dec
cmpsb
adc
jnp
ds
xor
popa
lods
fs
xchg
orl
fdivs
jno
jne
push
enter
jae
sti
out
rcll
stc
mov
mov
fcoml
stos
xchg
push
push
sbb
shll
stc
fists
lahf
adc
mov
mov
fcompl
or
sbb
jbe
and
mov
push
test
repnz
and
jbe
mov
pop
and
in
ret
mov
xchg
lea
inc
out
rcrb
adc
sbb
stos
test
stos
and
addr16
push
ja
push
mov
test
lahf
dec
inc
jle
js
les
sbb
and
jb
lahf
jle
inc
dec
aaa
out
popa
cmp
add
in
xor
jnp
loop
out
call
rol
pop
mov
lahf
ljmp
or
xchg
push
mov
xchg
and
jmp
je
and
sbbw
movsl
mov
insl
ljmp
jae
sarb
hlt
fs
bsr
insb
aam
mov
repz
mov
xchg
imul
dec
and
mov
push
std
popf
pushf
notl
mov
stos
or
mov
out
movsb
dec
mov
lods
adc
insl
ljmp
test
pop
inc
push
cld
pop
sbb
push
fildll
or
inc
add
mov
std
ror
inc
fs
loopne
fdivl
js
inc
cli
adc
ret
pop
xchg
adc
int
mov
out
mov
test
aaa
adc
cmc
mov
jnp
jg
inc
mov
fldt
pop
jnp
scas
outsl
outsb
ror
push
adc
sub
rorb
push
push
sub
and
ret
outsl
outsb
aas
push
add
or
gs
fwait
inc
or
movsl
push
mov
and
inc
fcoms
pop
pushf
sub
xor
mov
push
call
fdivrs
mov
leave
push
dec
lret
and
adc
pop
pop
push
mov
aas
int3
iret
adc
sarb
mov
xor
adc
push
jns
outsb
pop
imul
repz
imul
int
ret
loop
pop
xor
and
es
jge
and
mov
xchg
insb
aas
xor
shlb
sbb
cwtl
rorb
ret
or
repz
clc
aad
mov
inc
and
mov
repnz
jbe
mov
aaa
dec
pushw
and
mov
inc
sub
mov
clc
clc
cld
xor
pop
xor
pop
std
lds
insl
out
enter
pop
jnp
aam
add
dec
and
ret
add
push
pop
bound
fcmovnu
pop
pop
adc
pop
xor
pushf
sbb
or
cmpsl
lea
decb
pop
mov
inc
fxch
or
imul
nop
jmp
out
mov
mov
mov
mov
mov
pushf
pop
xchg
mov
push
test
adc
fsubrp
nop
mov
and
sub
shlb
jae
pusha
or
cmp
mov
or
push
div
icebp
loopne
leave
cld
ficompl
add
data16
inc
jnp
mov
sbb
lret
jbe
mov
inc
cli
rol
adc
jnp
dec
out
pop
adc
push
movsbl
in
outsb
shrl
pop
adc
outsb
ffreep
pop
or
popa
or
nop
out
movsb
add
mov
insb
repnz
dec
xchg
out
or
mov
cmp
jecxz
ficompl
jg
jne
addb
iret
mov
rcrl
mov
aad
adc
clc
std
jo
dec
jbe
xchg
in
cmp
negl
push
test
fdivrs
repnz
sbb
add
movsl
ja
pop
jmp
mov
out
aam
cmp
push
jae
xchg
pop
inc
cmp
mov
pop
popf
adc
cmp
fwait
mov
add
rorl
lret
xor
enter
std
jb
xor
mov
addl
cmp
adc
xor
dec
push
fwait
movsl
fistps
test
out
and
cmp
sbb
jg
and
nop
or
dec
or
or
pop
rcrl
inc
cltd
std
repnz
adc
imul
es
mov
or
cli
jbe
inc
adc
icebp
push
addr16
fcomp
or
and
mov
sbb
dec
out
mov
mov
stos
sbb
pop
sub
mov
dec
daa
test
cld
insl
jne
pop
ds
subl
mov
pop
cmp
jae
mov
cmpsl
mov
jb
popf
loop
addr16
push
xor
pop
adc
jecxz
repz
dec
jb
sbb
fldt
test
add
cmp
and
mov
xor
std
ret
add
jnp
cmc
dec
sbb
hlt
jb
mov
loope
push
daa
jo
xchg
outsb
cld
jle
push
jl
fidivl
pop
lret
hlt
arpl
xor
dec
xchg
pop
pusha
or
out
das
in
mov
adc
jb
push
inc
out
std
jecxz
mov
loopne
roll
daa
fucom
adc
rorl
xchg
push
jmp
je
jle
mov
dec
push
mov
xor
jecxz
mov
imul
in
sar
sti
add
pop
in
or
dec
test
cmp
mov
mov
jnp
fadd
fs
aaa
mov
mov
fisubrs
fcomps
mov
push
hlt
mov
test
fsts
imul
inc
iret
jae
ret
enter
jl
scas
lcall
xchg
pop
sub
xor
cmp
fs
jo
mov
inc
push
add
fisttpll
mov
dec
popf
jnp
dec
xchg
fstpt
sub
orl
cs
jp
jge
xchg
cli
jmp
sub
push
dec
ja
cli
shll
sarl
or
ljmp
sarb
xchg
xor
push
mov
or
push
iret
addr16
add
pusha
in
sti
xor
insb
aaa
jns
iret
in
push
sub
addr16
jo
cmp
scas
lret
sbb
aas
dec
pop
sbb
outsb
xor
pop
or
xor
outsb
sub
mov
xor
repz
dec
les
xorb
ret
test
pop
or
addr16
push
dec
iret
and
mov
hlt
fmuls
daa
sbb
mov
mov
push
mov
lahf
ljmp
out
ds
frstor
xchg
mov
outsb
mov
adc
push
data16
iret
mov
jnp
iret
mov
dec
rorl
jbe
jmp
mov
mov
daa
dec
pop
push
inc
mov
or
insb
cld
inc
pop
dec
scas
mov
inc
or
pop
std
jne
inc
mov
push
xchg
rcll
out
and
and
rorl
scas
jl
dec
sbb
sub
xlat
cmc
jp
loop
dec
out
and
sbb
out
xchg
in
dec
and
inc
jbe
mov
ja
stc
push
dec
jle
push
pop
pop
sbbl
pop
jg
stos
jb
movsb
movsl
mov
pop
in
mov
les
data16
pop
lods
loopne
sbb
jmp
out
repnz
or
adc
sub
add
icebp
inc
xchg
leave
inc
mov
xchg
push
pop
mov
push
icebp
lcall
add
aas
mov
lahf
dec
mov
fdivr
clc
dec
jl
xchg
mov
jb
and
ljmp
pop
es
test
cmpb
xchg
into
out
call
mov
fimull
push
imul
mov
lcall
jb
test
cmp
ret
ljmp
mov
xchg
call
and
popf
leave
dec
mov
adc
lahf
loop
adc
mov
lcall
jmp
aad
add
inc
int
mov
nop
test
mov
or
sbb
out
test
mov
cmp
scas
inc
cmovb
lahf
jmp
cmp
ret
inc
je
mov
les
dec
cli
inc
stc
push
cmpsb
pop
and
test
jo
js
loope
mov
dec
push
sbb
scas
roll
in
test
mov
ret
jns
outsl
sarb
jo
loope
push
pushf
test
sbb
mov
divb
mov
stc
mov
pop
pop
into
outsl
inc
xor
mov
shl
push
iret
xchg
mov
inc
dec
adc
inc
xor
cmp
ja
push
subl
sti
mov
and
addr16
shlb
sbb
scas
pop
sub
push
hlt
lcall
dec
pop
xchg
imul
pop
push
sbb
inc
mov
sub
dec
pop
xor
int
and
mov
xor
xchg
lea
inc
enter
rclb
call
lret
pop
sarb
xor
mov
adc
mov
mov
inc
jno
add
mov
adc
pusha
icebp
int3
gs
mov
mov
push
clc
cmp
lahf
xchg
jno
mov
ja
or
in
rcll
push
aad
jo
or
movsb
inc
jl
adc
mov
movsb
inc
cmp
inc
pop
pusha
adc
add
xor
jecxz
adc
xchg
shl
mov
push
pop
insb
int
or
xchg
xor
lret
insb
pop
adc
pop
pusha
add
aad
insl
push
dec
pusha
mov
add
bound
outsl
xchg
lret
test
pop
jne
lahf
jle
cmp
sub
xor
sbb
mov
iret
js
out
int3
inc
hlt
adc
jge
pop
mov
xor
sti
mov
push
dec
or
lcall
push
pop
mov
movsb
call
pop
add
lds
cmc
dec
gs
scas
jns
xchg
imul
testb
insl
adc
mov
or
cwtl
int3
subl
aam
pop
dec
sub
push
xor
xor
sub
push
add
rol
in
aaa
xchg
test
ret
out
adc
loop
and
inc
out
xor
in
negb
xchg
push
adc
in
jp
test
fsts
cmpsb
dec
xchg
push
in
xor
mov
and
sbb
movsl
rclb
js
mov
popf
push
mov
adc
lods
stos
sbb
xor
mov
mov
addr16
ficomps
ds
jl
cltd
dec
stc
dec
and
jns
inc
movsl
daa
sbb
loop
add
mov
fidivrs
push
rorl
xor
xor
add
inc
dec
aas
pop
stos
push
mov
cmp
inc
fs
fnstenv
push
cmpsl
mov
xchg
add
andl
gs
dec
inc
aam
push
or
mov
cli
lds
pushf
mov
add
movb
lret
hlt
mov
adc
in
sahf
xchg
push
lds
mov
repz
or
jbe
sarb
aam
push
outsb
add
fnstcw
les
and
mov
arpl
cld
inc
sbb
out
outsb
mov
sahf
nop
int3
std
xor
clc
sub
out
inc
cmc
popa
cmp
lcall
or
rcll
xor
dec
daa
sub
cmpb
std
push
sbb
sub
popf
adc
mov
pushf
neg
in
add
mov
mov
nop
mov
ja
shlb
lods
neg
std
mov
pop
adc
pop
sahf
push
xor
es
test
adc
out
push
xchg
xor
pop
pop
mov
xchg
jp
mov
test
fwait
sbb
pop
push
pop
out
mov
jg
jmp
and
adc
dec
fcmovbe
loope
or
jge
xchg
mov
cli
push
jg
pop
or
xlat
mov
dec
aaa
pop
adc
push
pop
in
cli
sti
in
pop
cmp
aam
jo
sti
ds
lea
dec
mov
mov
cmpsb
hlt
push
sarb
out
pop
sbb
test
popa
xchg
mov
xlat
mov
push
adcb
test
cmpsl
in
rorl
stc
stc
jle
enter
sbb
adc
dec
jg
loope
sbb
push
movsb
pop
scas
add
jb
add
jb
sub
push
sub
jge
sbb
aaa
cmpl
push
jge
pushf
push
xor
xlat
mov
and
sub
cmc
or
mov
stos
clc
lods
addl
scas
xchg
popa
pop
lret
ds
fcompl
movsb
imul
adc
enter
cmpsb
pop
lcall
das
sbb
insb
pusha
lods
xchg
test
pop
jo
fistl
idivl
xchg
mov
xchg
inc
pop
or
or
push
call
out
out
jno
push
pop
mov
xchg
sub
jmp
cld
insl
movl
gs
push
std
ret
inc
pusha
sar
mov
sbb
or
loopne
xchg
shr
call
stc
xor
pop
mov
es
out
ret
mov
sbb
fucomi
add
mov
in
movsb
negb
or
pop
repnz
sbb
jne
call
cmp
out
mov
pop
popf
sahf
repz
push
jne
popf
inc
mov
aam
xchg
jne
mov
mov
push
sahf
subb
jle
dec
mov
or
mov
lock
xor
jno
push
icebp
mov
sbb
test
int3
ljmp
push
cli
push
cmp
stc
lahf
xor
lock
out
fucomp
stc
imul
jbe
jge
inc
cmp
adc
push
out
das
ret
stos
dec
pop
repnz
pop
addl
adc
dec
gs
adc
mov
test
jb
add
mov
imul
xorl
inc
inc
mov
cmp
mov
or
in
insl
jnp
icebp
jne
dec
push
ret
pop
and
mov
ss
pop
push
inc
out
mov
lahf
jmp
ret
mov
mov
shrb
mov
leave
enter
sub
mov
pop
mov
or
jl
inc
sub
cmpsb
out
pop
pusha
mov
cli
adc
push
sub
outsb
push
inc
into
pushf
mov
sarl
xchg
push
pop
mov
out
rcrb
adc
add
cwtl
mov
enter
adc
out
mov
inc
int
and
fcmove
jge
outsl
jae
inc
mov
aaa
jne
popa
int
jge
adc
lock
jns
cmp
push
sti
and
jnp
cltd
cld
pop
and
mov
cmp
lcall
mov
push
shr
inc
mov
adc
dec
shlb
pop
scas
push
mov
and
sti
mov
or
repz
out
bound
mov
adc
pop
add
pushf
pusha
aam
dec
jo
mov
js
pop
inc
and
push
dec
xor
std
repz
inc
mov
das
testb
ss
dec
leave
push
cmc
mov
lcall
push
xchg
lahf
jo
and
out
out
jbe
push
loopne
ret
push
and
sbb
lock
sbb
mov
jo
incb
dec
js
fmull
hlt
push
test
push
popa
arpl
mov
aam
lods
test
mov
fs
inc
out
ret
add
lahf
out
push
clc
out
cmpsl
popa
pop
fimull
movsb
mov
add
mov
sub
cmpl
mov
xor
andl
xchg
popa
mov
movsb
fldenv
call
sbb
jo
and
fisubrs
jp
test
sub
pop
mull
or
test
inc
scas
mov
andb
sbb
adc
int3
bound
push
stos
pusha
pop
jg
xchg
cltd
adcl
loope
dec
sbb
cmpsb
push
imul
outsb
or
jg
ss
scas
stos
pop
xchg
popf
imul
mov
xor
push
es
mov
aaa
in
sbb
push
dec
int
inc
add
lods
bnd
ret
pop
in
andl
out
cmp
loope
jae
mov
adc
jae
mov
insl
nop
mov
dec
sub
mov
pop
nop
push
hlt
enter
mov
fdivs
pop
adc
pop
xor
jae
jne
cwtl
arpl
scas
es
clc
dec
gs
or
aas
adc
neg
ret
outsl
mov
push
imulb
rorl
enter
rcl
mov
mov
lock
jno
and
nop
and
gs
insl
sbb
insl
inc
test
xchg
call
in
outsb
add
scas
aas
cmp
mov
out
xchg
cmp
push
add
mov
std
lds
mov
ret
stc
rcll
cmp
ljmp
ret
das
outsb
cmp
sbb
jae
out
sqrtps
mov
hlt
fldl
mov
jno
lea
outsb
lea
ds
iret
nop
jg
mov
mov
movsb
loope
jnp
jl
pop
addr16
dec
leave
xlat
mov
xchg
mov
cld
push
adc
lret
pusha
iret
insb
movsb
lea
push
loop
xchg
jg
mov
cs
sub
sbb
fmull
pop
cmpsb
je
fs
mov
or
arpl
ss
adc
or
xchg
and
mov
lahf
scas
out
cmp
mov
dec
leave
mov
sbb
or
mov
mov
clc
add
addr16
sbb
push
sahf
mov
movsl
mov
pop
push
pop
stc
into
dec
adc
xor
dec
add
das
cltd
or
ret
dec
push
xor
or
into
or
sub
jmp
jns
in
mov
xor
leave
sub
inc
mov
lds
sbb
hlt
in
adc
cmpsl
inc
mov
sti
ss
and
xchg
arpl
inc
jns
push
outsb
out
cltd
jae
imul
dec
lea
lcall
dec
push
adc
pop
push
lock
ds
dec
pop
xchg
inc
scas
ret
jle
cmp
in
and
or
inc
dec
pop
xchg
ljmp
fwait
xlat
subl
adc
clc
imul
es
sbb
and
jp
cmc
mov
lahf
testb
fisubs
mov
mov
movsl
into
and
jb
clc
mov
outsl
dec
sbb
jo
sti
test
in
inc
push
loop
mov
mov
test
or
test
repz
inc
roll
pop
add
mov
lahf
mov
xchg
lcall
sbbl
adc
xchg
push
xchg
fidivs
imul
dec
jp
nop
mov
xor
mov
std
lods
push
repz
mov
in
rcll
sbb
adc
cltd
inc
xchg
mov
and
mov
out
fwait
aam
lock
mov
lock
insb
movsb
mov
dec
jg
and
rorb
lods
jmp
imul
cs
pop
ror
pop
cmp
mov
aam
leave
inc
adc
add
ja
inc
pop
mov
lea
mov
xchg
push
adc
popf
fbld
xchg
into
xor
dec
pusha
rolb
test
daa
movsb
mov
pop
ja
js
or
sub
jmp
pop
mov
pusha
subb
xchg
xor
leave
jmp
mov
pop
and
enter
push
data16
pop
mov
insl
outsl
and
adc
push
lahf
cld
in
in
xor
testb
scas
push
add
cmpsb
gs
sub
shrb
sbb
add
xchg
inc
xchg
int
dec
cmp
push
xor
mov
notb
add
mov
int3
orps
shrl
sarl
mov
add
jg
cltd
jno
xchg
outsl
pop
xor
roll
jno
sarb
mov
divb
adc
inc
xchg
push
mov
inc
dec
jmp
xchg
fildll
inc
push
iret
mov
xlat
mov
imul
mov
test
sbb
and
mov
dec
pusha
cli
xor
push
movsb
enter
mov
inc
xor
imul
stc
dec
ret
jecxz
lret
clc
push
sbb
xchg
rcl
push
repz
das
popa
jge
pop
mov
jbe
daa
adc
jns
call
subb
cmpsl
mov
nopl
mov
jecxz
push
jbe
mov
inc
call
pop
cmp
jl
pop
lahf
add
jle
jle
adc
push
clc
int
lock
outsl
jb
push
xchg
and
push
shl
mov
cwtl
cli
xchg
mov
jae
push
insl
lock
inc
ds
dec
hlt
xor
mov
int3
or
test
add
subb
cltd
fs
mov
sahf
push
lea
or
mov
fbstp
add
aam
sub
cmc
cltd
push
cmp
mov
jb
cld
pop
sub
and
push
das
int
aam
mov
jbe
dec
sbb
mov
fstp
fldenv
ss
mov
mov
jp
imul
test
decl
insb
push
mov
fwait
stos
call
mov
pop
cmc
jae
inc
pop
xor
jmp
subl
mov
sbb
cmp
hlt
jl
lods
cmpsl
xchg
enter
adc
shr
push
cmpsb
out
or
movsl
call
lahf
and
jnp
shlb
in
stc
mov
mov
jge
ficomps
inc
jg
lods
in
inc
jno
in
inc
cmpsl
dec
ret
cmpsb
mov
push
or
in
jae
sbb
call
xor
das
or
je
add
addr16
and
mov
inc
mov
push
pushf
out
mov
clc
mov
fs
cmp
mov
mov
insb
arpl
xchg
iret
and
sbb
mov
out
inc
leave
jp
or
loopne
lods
les
pop
mov
ret
xorb
pop
mov
jno
js
pop
stc
arpl
mov
call
inc
sub
test
jg
mov
cwtl
ds
pop
adc
shll
or
dec
push
xchg
inc
ljmp
adc
mov
data16
ja
mov
dec
fidivrs
inc
push
sbb
fsubrl
mov
test
cmc
mov
repnz
or
lea
in
das
push
pop
aas
fisubrs
sarl
sbb
add
sbb
mov
add
rorl
sbb
xor
movsl
mov
mov
lock
out
lock
inc
insl
in
call
hlt
lahf
pushf
mov
mov
dec
scas
int3
sub
pushf
or
push
repnz
cwtl
lret
test
int3
les
jne
pop
xor
cmp
and
inc
test
loopne
sub
cmp
ficoml
in
jne
xor
xchg
adc
add
inc
scas
gs
in
xlat
insb
jne
out
in
xchg
bound
jmp
std
daa
das
xlat
cmp
loope
out
or
or
xor
jae
int3
les
insl
xor
or
jb
fwait
imul
push
js
aas
movsl
int
mov
xor
push
lock
loopne
stos
dec
mov
mov
dec
stos
popf
dec
inc
sub
push
mov
inc
mov
cmp
rcll
mov
jle
dec
inc
es
xchg
inc
cmpl
pop
gs
mov
enter
pusha
mov
dec
ffreep
mov
sbb
mov
sbb
sub
push
mov
divl
loope
int3
mov
mov
pop
push
dec
into
les
dec
movsb
mov
cmc
sbb
xchg
sub
cmc
xlat
mov
inc
jl
and
cmpsb
mov
loop
test
aas
add
cwtl
mov
or
out
dec
jne
add
call
cmp
push
inc
nop
icebp
mov
mov
shl
mov
negl
or
xor
negb
push
out
adc
mov
lea
mov
inc
add
pop
inc
aaa
jge
in
cmc
adc
push
jg
flds
sbb
jg
les
cmp
gs
adc
aaa
or
lret
test
sub
mov
or
ja
jmp
cmpsl
dec
out
sbb
cmp
jne
in
jnp
jb
gs
stos
cmp
ret
insl
jno
sbb
and
ja
into
fwait
cmp
cmp
push
pop
stos
add
inc
mov
pop
push
pop
notl
push
mov
mov
ror
push
lret
xchg
sub
xor
mulb
test
repnz
sub
fmul
inc
xor
ds
inc
jle
jno
repnz
add
leave
pusha
mov
jg
cmpsb
cmp
ljmp
dec
or
xchg
or
sbb
cltd
int
jmp
dec
sbb
clc
aaa
es
xchg
popf
mov
pop
adc
pop
sub
ret
add
ret
shlb
sbb
pop
jo
mov
scas
lea
push
shlb
mov
lock
xor
xchg
cmc
push
and
inc
jo
scas
bound
cltd
xchg
lcall
pop
push
mov
or
sbb
or
and
sub
or
call
jp
out
aam
push
loop
xchg
clc
fwait
aad
divl
test
jns
in
pop
fld
sbb
aaa
push
fsubrs
fwait
in
aaa
add
xchg
cmp
aam
sub
xchg
pusha
ja
cwtl
lods
lds
sahf
cli
lret
xchg
adc
xor
inc
pop
pop
xor
push
add
mov
mov
hlt
pop
sbb
jne
xor
popa
ljmp
pop
insl
push
das
inc
add
xchg
les
mov
ret
bound
in
push
xor
cs
xor
add
icebp
mov
ret
lea
inc
mov
inc
inc
mov
pushf
lock
cmp
and
scas
pop
push
gs
stc
jmp
dec
xor
mov
mov
jae
nop
adc
das
pusha
pop
cmpsb
lcall
mov
sub
gs
loope
adc
pop
addr16
xchg
out
in
pop
int
cs
xchg
jl
adc
cmpsb
xor
addr16
mov
adc
insl
es
mov
data16
test
sbb
ret
or
les
adc
loope
mov
sbb
xlat
scas
push
data16
mov
fisubrl
sub
es
faddp
int3
call
fildll
sbb
sub
stc
mov
inc
push
xor
mov
fcmovnbe
loope
jae
mov
daa
in
xor
iret
add
pop
mov
call
cltd
push
sbb
inc
xor
xor
test
jo
movsb
in
dec
sbb
dec
mov
sub
fwait
push
add
shll
test
mov
xchg
pop
mov
pop
ret
int3
mov
rcrl
out
dec
xchg
xor
shl
adc
repz
add
pop
les
lret
inc
scas
rolb
in
dec
push
lcall
lret
lds
loope
lret
fwait
mov
sub
add
pusha
push
push
movsb
inc
jmp
sahf
ss
or
inc
adc
les
sbb
aad
mov
int
ja
pop
out
rcll
insl
daa
call
insb
push
pop
mov
inc
mov
adc
data16
ss
mov
lds
popl
xor
mov
pop
es
lods
mov
jl
fldcw
inc
xlat
pop
dec
hlt
int
xor
shll
cmp
push
pop
ljmp
lcall
lds
adc
jae
dec
out
loop
outsb
iret
addl
mov
inc
adc
adc
jo
sbb
lret
sbb
arpl
loopne
jl
popf
xchg
rorb
mov
fdiv
dec
sub
fsubrl
mov
mov
shlb
jl
xor
stos
mov
adc
or
aad
lea
lret
dec
dec
xchg
pop
xlat
imul
push
imul
adc
xor
xor
mov
pop
lret
jns
cs
loope
scas
or
fisubl
aas
jp
lock
pop
and
test
pop
jo
lret
sbb
inc
sbb
or
adc
mov
jbe
out
cmp
repnz
subb
mov
js
cli
or
fwait
jno
add
mov
aas
or
xchg
pop
mov
out
xchg
jne
mov
cs
pop
int3
subb
nop
mov
mov
jae
fsubl
jp
std
jae
test
mov
add
push
test
cwtl
in
clc
mov
frstor
sub
sub
pushf
mov
inc
adc
sbb
movsb
in
incl
sbb
push
inc
loope
mov
sub
sub
xchg
je
add
pop
scas
popf
sarl
pop
xor
mov
int3
push
dec
xor
pushf
fidivs
jne
stos
popf
push
and
insl
xor
shl
jnp
addb
int
inc
add
adc
mov
repz
jns
fisubs
in
data16
js
hlt
dec
lds
inc
mov
xchg
sub
push
shll
and
or
jne
daa
sub
mov
or
es
sub
push
sub
aas
iret
stos
sbb
movsb
imul
mov
add
imul
cmpb
add
mov
icebp
cmp
shll
scas
dec
movl
daa
and
lret
cltd
jne
mov
shll
testl
sbb
addr16
jecxz
xchg
sbb
loop
fcomp
mov
into
loope
loope
xchg
xor
call
sbb
aad
bound
mov
jmp
adc
mov
bnd
dec
jle
in
adc
and
mov
iret
jne
jno
cltd
out
cmp
adc
and
les
sbb
xor
xorb
sbb
mov
pop
sti
jne
test
xchg
pop
adcl
push
movsb
adc
add
stos
je
xor
add
push
jne
test
cmpsb
push
sub
xor
push
rcr
cmp
dec
lods
jae
lret
es
movsb
cmp
push
xor
mov
cmpsl
pop
cmp
lods
ja
cs
out
cli
mov
sub
xlat
into
push
scas
sub
insb
pop
idivl
or
xchg
sti
inc
and
sub
sub
fmuls
into
pusha
cmp
xchg
and
int3
push
adc
and
dec
jo
push
xchg
xor
mov
mov
fildll
mov
cmp
push
call
push
movsb
and
inc
mov
pushf
and
sti
sbb
xchg
jnp
push
fdivr
insl
inc
push
xlat
jbe
xchg
mov
mov
jmp
xor
clc
fcomps
inc
mov
mov
dec
sub
mov
scas
adc
out
and
rolb
cmp
pop
nop
out
out
in
sti
cmc
das
jp
pop
fs
in
jmp
mov
adc
rorl
or
shlb
cltd
pop
inc
dec
jge
jne
mov
inc
bound
and
sbb
data16
setle
xchg
lret
aas
into
cwtl
jecxz
or
push
scas
mov
push
loop
stos
fadds
add
lock
shll
mov
adc
faddp
iret
mov
in
stos
pop
jge
popa
dec
inc
mov
aad
addr16
inc
cmpsb
sub
ss
es
jle
mov
push
inc
addl
insl
rclb
inc
xchg
sti
sti
gs
push
lock
jns
pop
adc
inc
jmp
addr16
loope
enter
jg
jnp
mov
xchg
lods
mov
movsl
xchg
in
repnz
movsb
add
cmc
ljmp
stos
imul
subb
arpl
cmp
repnz
cli
pop
out
or
adcl
dec
push
and
fiadds
add
incl
sti
cld
repnz
add
jb
sub
idiv
inc
test
jle
repz
or
mov
rcrl
cmp
icebp
sti
jns
jne
or
jle
mov
push
stc
lods
sub
mov
adc
dec
lea
out
jp
inc
test
mov
mov
mov
and
and
fdivr
lds
push
add
adc
clc
scas
fwait
pop
js
ljmp
mov
adc
mov
lret
out
push
mov
popf
dec
enter
insb
lds
insb
arpl
addr16
mov
adc
lods
xlat
jp
inc
movsb
frstor
sub
inc
ret
add
mov
fdivrl
test
adc
or
insb
add
aam
addl
xchg
xlat
sub
xchg
jge
imul
push
adc
arpl
iret
xor
jo
xchg
pop
in
mov
and
inc
faddl
adc
mov
xchg
cld
xor
pop
adc
lret
stc
and
inc
pushf
mov
mov
jbe
inc
jg
xor
cwtl
ret
add
mov
test
inc
and
add
jno
cwtl
lea
push
imul
xor
push
ret
out
push
aad
or
or
leave
int3
dec
call
pmaddwd
pop
jl
andb
xchg
xchg
dec
inc
or
dec
fs
sub
andl
shlb
sbb
cltd
cmp
and
pop
mov
sbbl
jp
pop
dec
pop
repnz
outsl
lret
clc
dec
cmc
push
xlat
pop
mov
ss
cmp
xchg
jecxz
inc
jmp
outsb
popa
adc
jne
fadds
dec
inc
push
daa
sbb
pusha
xor
sub
dec
ret
pushf
fnsave
stos
jg
pop
leave
pop
cmc
cld
mov
insb
and
add
jmp
push
add
xchg
ret
inc
and
ss
cltd
xor
loopne
sahf
dec
pop
and
pop
or
int3
cld
xchg
pushf
sub
xor
sub
cmpl
push
sbb
push
rorl
mov
xchg
lret
add
jno
mov
or
andb
sub
xchg
cmp
js
mov
xchg
mov
adc
xchg
cmc
pop
mov
lret
ret
mov
stos
add
add
jno
xor
cmp
sub
cmp
divl
bound
xor
add
lods
loope
stos
xchg
push
and
test
sarl
pop
mov
call
jle
mov
aaa
repz
divb
inc
popw
mov
jbe
push
pushf
inc
push
jmp
push
movsl
fistpll
dec
lock
fsubl
push
mov
mov
xchg
cwtl
fnstsw
pop
negl
mov
xchg
fs
jge
mov
out
sahf
enter
jp
pop
aad
lods
pop
xchg
lods
test
mov
sub
outsl
std
or
sbb
push
lret
test
jmp
mov
or
jmp
les
sbb
and
xor
in
stc
xchg
roll
outsl
jg
inc
ljmp
int3
test
mov
cmc
scas
sbb
pusha
ljmp
and
aad
cltd
adcl
push
fisubs
lret
xchg
push
clc
subb
or
stc
je
scas
inc
scas
movsl
mov
popa
xlat
fisubs
mov
mov
int3
mov
in
dec
pop
or
test
imul
cltd
inc
stc
test
fldenv
mov
scas
out
cmpsl
lds
mov
hlt
arpl
popa
imul
mov
lods
loope
adc
out
in
insb
pop
lds
or
or
inc
jecxz
out
movsl
push
add
jp
shll
push
repz
ja
mov
fstl
adc
xor
flds
enter
push
cld
pop
or
pop
cmp
ret
inc
in
pop
sub
sbb
mov
loop
jb
cwtl
shll
dec
lock
and
sub
out
mov
inc
imul
negl
xor
out
inc
mov
jmp
je
fiadds
shll
rcrl
push
test
lret
movsl
popf
sub
or
cmpsb
push
or
loope
gs
jg
insl
push
mov
mov
jmp
mov
lods
cld
push
mov
jbe
ljmp
xlat
pop
mov
enter
xor
repnz
pop
dec
adc
jmp
inc
in
sarl
dec
sub
out
cld
sahf
pop
push
sub
mov
add
je
xor
sub
mov
loop
mov
aas
jg
jae
and
mov
insb
out
xchg
inc
mov
mov
pushf
pop
xchg
call
lock
int
push
pop
inc
in
loop
or
and
lahf
shll
adc
jae
std
icebp
jne
xor
ret
push
jae
xchg
add
push
call
sub
addl
push
arpl
loop
inc
mov
lea
outsl
iret
int3
sbb
mov
mov
push
mov
xor
ja
lods
imul
dec
dec
jg
inc
xchg
dec
test
mov
rclb
sub
imul
push
cltd
or
sub
mov
sahf
clc
cmc
icebp
fcmovnbe
test
xor
pusha
sub
outsb
lcall
stos
popa
das
xor
xchg
xor
xchg
in
movsl
jns
dec
outsl
leave
popa
adc
push
xor
enter
and
mov
or
and
outsb
adcw
push
xor
sub
sbb
inc
add
sbb
imul
push
fmulp
das
or
ljmp
mov
data16
xor
and
and
mov
std
in
mov
jbe
loope
mov
adc
pop
shlb
in
dec
test
cltd
cmpsb
movsl
jmp
mov
shrb
push
ds
loopne
clc
and
sub
mov
mov
cmpsb
dec
mov
xchg
out
jl
clc
insl
dec
or
cltd
in
shl
ret
aam
data16
daa
add
stos
sub
xchg
rclb
iret
pop
nop
pop
jge
test
outsl
imul
or
add
outsb
rcrb
sbb
inc
enter
jo
shl
stos
adc
mov
push
icebp
or
push
sbb
mov
cmp
pop
daa
loope,pt
cmp
out
xor
and
add
push
push
ss
mov
xor
or
lahf
movsb
es
cwtl
test
xor
push
push
je
pop
cmp
ja
add
mov
int3
xchg
dec
test
dec
xlat
loope
push
push
out
sub
pminsw
push
push
sbb
add
imul
add
pop
jge
lds
and
scas
in
lahf
lcall
cmp
ret
dec
rcrl
lods
xsave
sub
sub
fisttpl
dec
adc
jae
mov
stc
sub
les
dec
bound
out
icebp
inc
dec
xlat
xorl
popf
push
sbb
das
push
lret
xor
test
pop
fidivs
ret
xchg
fcmovnu
gs
or
add
push
insb
mov
out
cmc
dec
jbe
pop
movsb
mov
cmp
pop
insl
push
dec
jmp
scas
repnz
fisubl
aad
test
scas
subb
repnz
and
shl
outsl
scas
mov
sbb
jle
cmpsl
int3
xchg
loop,pn
mov
push
in
jmp
test
iret
xchg
add
or
mov
sub
inc
mov
dec
ffree
dec
cmc
mov
jp
les
mov
pushl
in
pusha
aas
push
lods
sub
xchg
nop
inc
sar
dec
loopne
imul
stos
sub
repz
shlb
into
scas
adc
lret
fwait
mov
mov
push
lret
in
xchg
arpl
lret
fidivrl
push
pop
xchg
lock
iret
xchg
adc
pop
iret
test
inc
or
imul
xchg
push
ret
jmp
or
out
jl
pop
roll
aas
pop
aam
jbe
jp
ret
or
test
addr16
push
push
test
mov
add
sbb
mov
mov
adc
fnstsw
and
lahf
push
fnsaves
push
daa
xor
or
clc
imul
inc
push
les
pop
inc
in
aam
inc
jle
rcrb
jo
leave
sbb
mov
dec
jae
jg
xlat
test
mov
lods
and
xchg
ficomps
es
jmp
mov
xor
inc
fisubs
call
inc
add
enter
adc
int3
sbbb
sub
scas
rolb
inc
sub
loope
mov
sub
mov
lcall
xor
popl
inc
mov
inc
daa
or
pop
aad
lds
fidivs
popa
mov
insl
outsb
movsb
adc
mull
dec
xor
mov
sub
xor
movsl
cs
push
fisttps
push
jmp
xchg
adc
decl
fbld
mov
inc
inc
adc
push
lcall
adc
ret
pop
jle
pop
mov
push
ljmp
enter
fildll
xchg
xor
jns
push
int
or
mov
iret
fcmovne
add
jo
or
repz
sbb
dec
cmc
ret
xchg
add
mov
icebp
xchg
sarl
push
mov
mov
aaa
and
xchg
or
add
in
jnp
push
mov
pusha
or
push
dec
lods
imul
mov
push
aam
dec
inc
js
repnz
or
or
push
popa
pop
sbb
adc
enter
fcomp
dec
and
movsb
es
movsb
mov
notl
addl
sub
adc
cmc
rcrb
rcrl
fucomp
test
int3
cli
mov
mov
mov
push
lds
fmulp
push
mov
and
jbe
jns
les
imul
scas
and
test
mov
cltd
test
jae
cmc
ss
cmp
mov
pop
leave
test
shll
andl
movsb
outsb
xor
test
mov
xor
jg
mov
and
pusha
fsts
into
fisttpl
jecxz
pop
scas
imulb
adc
fcmovnu
imul
lret
mov
sub
inc
mov
inc
mov
in
adc
insb
fcompl
cmp
pop
out
lock
push
xor
popf
pop
repnz
dec
jne
lock
vmovq
jecxz
lret
add
dec
pusha
dec
dec
inc
jge
mov
mov
rcrb
les
dec
push
dec
add
adc
in
jg
mov
mov
jo
lods
cwtl
clc
lea
in
push
mov
inc
fcmovnbe
sub
mov
mov
add
ljmp
push
pop
push
dec
cld
movsl
or
mov
pop
ret
mov
xchg
bnd
and
cmp
cmc
fcmovb
hlt
or
lret
xchg
aas
xor
sub
daa
cmpsl
add
gs
adc
popa
cmp
into
sbb
aam
mov
pop
mov
mov
lods
add
cmc
push
int3
in
sub
inc
push
jecxz
call
adc
nop
addr16
mov
sti
xchg
pop
xchg
mov
bound
fs
mov
xchg
cmp
les
jb
fwait
cli
mov
lds
push
xchg
push
ficoms
fnstsw
ljmp
adc
in
popa
pop
shl
pusha
fs
ret
shr
lock
jno
cmp
andb
adc
fwait
sahf
sahf
bound
xchg
xchg
testl
xchg
lods
ret
mov
pop
aad
push
mov
pop
ljmp
push
cmpb
jecxz
movsb
jge
inc
sti
jge
scas
stos
inc
fildll
mov
push
pop
popf
leave
mov
pop
sbb
inc
sbb
mov
xlat
test
addr16
movsb
mov
jbe
push
push
pop
loopne
or
fadds
int
incl
outsb
call
test
imul
dec
pop
mov
insb
fidivs
adc
jg
loopne
mov
mov
lods
xor
pop
xor
lea
add
popa
add
in
in
push
sub
out
sbb
les
or
stos
jp
mov
inc
out
xor
ss
jno
test
arpl
leave
xchg
aad
dec
fisubl
outsl
xchg
loop
int
inc
sbb
imul
enter
aaa
pusha
push
divl
lret
sbb
mov
loope
sti
lret
mov
js
mov
sbb
divl
xor
data16
add
shlb
int
daa
dec
leave
fisubrl
mov
and
daa
adc
sub
adc
enter
sbb
dec
adc
jno
mov
sub
loop
push
psrad
lock
je
inc
inc
xchg
inc
mov
cli
mov
and
push
mov
xchg
js
ret
pop
xlat
dec
add
pop
cmpsl
loopw
push
enter
movnti
adc
jno
mov
jge
push
fwait
test
fnsave
sub
xor
mov
pop
popf
repz
mov
and
or
mov
lds
jno
xor
fsubl
xchg
cmpsl
pop
inc
lds
dec
out
jnp
mov
push
roll
dec
jno
xchg
inc
adc
push
adc
pushf
sbb
push
xchg
xor
sbb
jb
mov
mov
stos
lock
inc
or
ret
dec
add
xchg
mov
cli
jp
push
mov
scas
jg
scas
lock
outsl
fidivrl
push
mov
sarl
imul
ret
jne
jo
adc
or
cmp
jbe
sbbb
xor
mov
mov
jae
lea
out
fldenv
push
push
in
push
outsb
sahf
dec
mov
sub
and
mov
pop
stc
dec
daa
add
shlw
mov
dec
std
fwait
jb
add
push
cmp
xchg
out
fdivl
and
jmp
jb
ja
and
mov
es
jmp
cmp
jbe
xor
sahf
jns
in
mov
add
mov
mov
jne
mov
sbb
je
jge
aaa
xchg
loop
dec
sub
mov
test
mov
aaa
in
inc
sahf
jne
adc
outsl
out
cmp
outsl
or
sub
sub
xor
inc
js
jbe
jmp
fimull
lods
sub
push
mov
lods
fs
pop
shll
pop
mov
jmp
push
xchg
mov
mov
add
test
inc
stos
mov
xchg
xchg
clc
sti
scas
sub
sub
dec
fiaddl
dec
mov
repz
loope
imul
lock
xor
add
adc
cltd
repnz
mov
lods
cmp
ss
out
push
dec
jae
and
pop
js
outsb
sbb
push
data16
jo
mov
xorb
or
mov
fs
add
movsl
fistpll
and
fwait
lret
cld
test
cmp
test
inc
push
push
add
adc
loop
pop
xchg
int
inc
xor
test
sub
addb
push
inc
jns
inc
cwtl
mov
mov
lret
mov
mov
sahf
inc
test
gs
xchg
fists
xchg
out
cmp
push
repnz
push
xchg
pop
test
adc
out
hlt
clc
push
push
push
lds
cmpsb
ljmp
push
dec
mov
cltd
fbstp
mov
xchg
ret
pop
mov
cmc
adc
outsl
sbb
or
cmp
outsb
loopne
mov
or
insl
dec
mov
sahf
sbb
das
xor
dec
outsl
aas
scas
into
in
bound
mov
xchg
inc
out
or
xchg
and
lods
xor
and
pushf
jae
bound
arpl
ja
test
mov
outsb
sahf
addr16
dec
dec
xchg
dec
and
in
loope
mov
pop
testb
divl
push
mov
mov
pop
cmp
pop
mov
fiadds
test
repz
out
cmp
sub
data16
jo
decl
jno
jo
pop
push
test
aas
imull
mov
push
cmp
repz
mov
pop
pop
pop
push
shr
daa
mov
into
sti
sbb
xchg
out
mov
fsub
or
imul
bnd
fs
aas
daa
inc
cmpsb
stos
cmp
inc
mov
pop
mov
xor
adc
scas
jo
sub
xor
push
adc
dec
sbb
jae
ljmp
xchg
xlat
inc
dec
icebp
scas
lea
icebp
cmpsb
jae
sub
xor
mov
xchg
ret
inc
sbb
or
pop
cmc
imul
push
fildl
xchg
sbb
sbb
arpl
push
jg
mov
les
lock
or
lock
adc
std
push
ret
dec
mov
rorl
in
fildll
pop
cmp
jge
movsl
getsec
out
jl
fwait
adc
add
js
test
sbb
mov
sub
xor
outsl
xchg
outsb
adc
mov
pushl
mov
adc
aas
adc
and
aaa
call
pop
imul
cltd
in
xchg
outsl
mov
or
das
les
push
pop
sbb
inc
xor
mov
clc
fisubl
adc
or
jmp
in
mov
push
mov
mov
movsb
test
xabort
pop
dec
mov
ss
incl
int
js
pop
mov
movsl
xor
mov
es
xchg
sahf
dec
loopne
enter
mov
adc
pushf
aaa
xchg
test
int3
inc
add
xchg
add
repz
jbe
mov
push
sub
insb
rorl
divl
and
mov
les
lock
dec
movsb
pop
dec
inc
fbld
sub
iret
push
adc
push
test
mov
loopne
in
jmp
scas
xchg
insb
enter
jmp
out
jo
mov
daa
in
xor
pop
data16
cmpl
leave
mov
jg
loop
dec
mov
shr
cmc
popf
repnz
js
pop
cld
movsb
inc
shll
stos
cmp
dec
data16
lock
mov
fsubs
jl
shl
mov
outsl
mov
pop
and
out
stos
adc
inc
inc
sub
mov
inc
fcompl
xchg
es
cmp
test
scas
imul
cvtpi2ps
push
xchg
out
pop
aas
movsl
ds
cld
adc
lahf
or
sbb
push
ds
in
loop
fnstsw
es
mov
jmp
mov
pushf
mov
pop
mov
mov
out
mov
shlb
mov
push
pushw
dec
jbe
xor
scas
fdivs
lods
pop
stc
cmp
clc
lret
das
dec
xorl
inc
cmpsb
inc
sub
push
pop
add
push
hlt
sub
inc
xor
dec
aad
imul
movsb
movsl
bound
pop
sarb
ss
and
fcmovnbe
jle
cmp
xor
pop
test
inc
mov
sbb
xlat
repz
inc
cmp
aaa
pand
mov
mov
push
jo
stc
loop
jo
xchg
mov
daa
dec
fistl
mov
repnz
or
dec
sub
cmpsb
mov
mov
push
not
pusha
cwtl
imul
loope
push
insl
loopne
mov
movsl
xchg
jno
popf
jne
sbbb
adc
mov
push
into
scas
adcl
cmp
pop
pop
mov
cmp
fsubrl
lret
jae
movsb
push
and
fimull
shl
push
jnp
cmp
cmp
jo
stos
outsb
add
test
fwait
repnz
testl
or
jecxz
dec
mov
cld
scas
mov
add
and
push
mov
xchg
data16
loope
pop
cmc
imul
xchg
dec
mov
jno
lahf
add
and
pop
popa
ds
cmp
ljmp
mov
mov
pop
sub
repz
or
lods
insb
notb
ret
ficoms
inc
lret
mov
sbb
popf
dec
pop
inc
addr16
jecxz
push
loop
mov
sub
xor
cmp
cmp
cmp
sahf
nop
aaa
jne
push
push
mov
adc
jae
leave
or
out
stc
scas
ljmp
nop
ljmp
adc
mov
xchg
mov
ss
movsb
lea
adcb
xchg
cli
adc
push
ds
enter
jecxz
cmpsb
jns
call
jne
adc
pop
test
dec
fs
lret
dec
mov
push
pop
mov
mov
lds
mov
test
js
stos
jae
iret
push
sub
addr16
enter
pop
or
mov
xor
mov
jbe
mov
in
cli
push
adc
sub
or
push
lods
roll
adc
push
scas
int3
lds
mov
cmpsb
movsb
out
or
jb
sbb
iret
mov
popf
inc
or
jb
arpl
add
jnp
adc
aam
fadds
loope
lret
add
scas
cmp
cmc
stc
or
cwtl
mov
adc
pop
pusha
pop
repz
xchg
and
adc
stos
push
ljmp
mov
xor
js
imul
bnd
xchg
jmp
add
mov
pop
jp
push
mov
fwait
int3
sub
adcb
sbb
and
or
jae
stos
stos
pop
sbb
fbstp
ficoms
mov
imull
jnp
add
jbe
and
mov
out
lret
pop
add
adc
test
aas
fcomi
ss
scas
fidivs
rcl
xchg
xchg
mov
or
scas
push
dec
insb
inc
sub
jg
add
mov
xchg
mov
sub
inc
dec
in
sbb
jo
adc
add
push
jp
ret
add
clc
shrb
in
push
dec
outsl
in
sbb
lcall
mov
daa
loopne
inc
mov
xchg
mov
test
fldcw
xchg
push
aaa
daa
cmc
stos
scas
cmp
gs
out
insl
push
je
push
das
push
repnz
test
add
cmpsb
jp
retw
or
pop
inc
test
push
xor
movsb
in
stos
out
in
leave
push
dec
sbb
add
arpl
ja
adc
sub
sub
test
push
addr16
adc
leave
loop
test
mov
hlt
inc
jno
sarl
mov
mov
jg
xchg
repz
int
ss
jmp
loopne
push
pop
or
push
pop
jp
cmp
push
sub
int3
fistl
mov
cmp
les
stos
cmpsb
jg
mov
test
push
mov
pop
in
xor
jge
xchg
mov
shl
mov
sub
adc
lea
mov
mov
jb
pop
pop
loopne
push
pop
add
into
nop
into
js
lds
jle
sbb
jne
push
in
inc
out
pop
scas
lcall
lcall
or
lods
fisttps
cmpsb
add
xchg
test
fst
adc
sbb
fiaddl
pop
pop
ds
shll
mov
imulb
fcoml
mov
inc
stc
vunpckhpd
or
and
lea
push
lcall
data16
rolb
inc
sarl
jle
cmc
subb
jp
sub
cwtl
add
test
push
and
popa
shll
dec
movsl
push
fisubl
lcall
leave
push
jle
xchg
lret
adc
and
fstpl
pop
notb
mov
sahf
xor
je
leave
xchg
lahf
bound
mov
xchg
fstl
mov
clc
divl
stc
mov
testl
jmp
or
js
or
jl
popa
lcall
fildll
adc
adc
ja
cs
add
pusha
test
adc
gs
sbb
mov
pop
lods
mov
xchg
sbb
loope
scas
adc
aaa
mov
fs
jbe
lods
cmpb
fisttpll
ss
mov
or
nop
stos
int
cmc
inc
push
push
sbb
xchg
daa
xor
sbb
push
cwtl
aaa
lcall
popf
dec
mov
xor
xor
ljmp
arpl
or
clc
adcl
clc
cwtl
inc
inc
add
sbb
rclb
mov
fiaddl
mov
pop
mov
pop
sbb
ja
jo
dec
enter
scas
pop
sub
push
cmp
repz
incl
sbb
cld
dec
sbb
dec
les
pop
aaa
lods
or
xchg
vpcmpgtd
push
out
lds
mov
in
jb
es
insb
and
jl
push
sbb
xchg
icebp
mov
jl
sbb
mov
insb
dec
lret
pop
push
out
xor
xchg
cmpsl
out
xorl
popa
sub
adc
es
rorb
les
cmpsl
fcmovnb
sub
xchg
dec
icebp
out
jno
in
adc
jne
outsb
and
insb
cmc
lahf
or
fldenv
xor
adc
call
insb
jnp
movsl
sub
xchg
xchg
and
push
xor
lret
inc
adc
ja
mov
adc
sub
jb
push
lret
cwtl
dec
jecxz
aad
jp
pop
xchg
cmpsb
mov
data16
cmpsl
sbb
stos
adc
mov
mov
adc
cs
in
je
or
fwait
repnz
xchg
call
xor
adc
xchg
imul
xor
mov
add
aam
or
pop
cmp
cltd
or
ljmp
loopne
add
xlat
mov
sbb
mov
stos
or
pop
in
mov
or
sbb
stc
test
xchg
push
sbb
jne
jl
je
and
cltd
cmc
in
push
in
div
adc
xchg
dec
jno
xchg
loop
pop
sub
push
fstp
stos
jb
arpl
in
xlat
lret
pusha
test
xchg
enter
add
mov
ss
data16
cmp
orl
sbb
mov
jne
cmp
mov
in
jge
inc
scas
into
fimull
pusha
pop
mov
sub
sub
in
pushf
adc
pop
inc
pop
fisttps
stos
mov
jmp
and
pop
and
fnclex
dec
push
push
repnz
lods
push
test
mov
or
and
fisubl
fs
and
jp
and
neg
add
ds
push
idivb
fistpl
cmc
add
mov
cmp
int
jo
mov
out
inc
xor
popf
ss
adc
sub
inc
shlb
loopne
icebp
ss
data16
xchg
nop
sbb
jmp
inc
clc
push
int3
lret
imul
jbe
add
xor
test
scas
inc
adc
pop
jb
push
push
push
jne
adc
es
fdivp
sarb
mov
lock
movsb
jo
dec
adc
sub
aam
mov
sahf
cwtl
cmp
das
aas
mov
je
sub
leave
push
add
int
mov
push
outsl
push
shlb
jne
mov
sbb
insl
popa
add
sub
andb
repz
imul
jecxz
js
mov
add
jo
or
xchg
sti
pop
std
test
adc
divl
jo
les
mov
out
cmp
inc
outsl
cmp
add
pop
lret
gs
out
add
nop
xorb
imul
inc
dec
push
subb
push
mov
push
fdivl
push
jle
mov
out
cmp
stos
stos
sarb
or
out
andb
jae
lea
jne
ficoml
push
adc
add
and
movsb
mov
sub
in
ret
int3
das
add
add
fisttpll
push
jb
sbb
add
adc
testl
sti
adc
pushf
dec
mov
xor
dec
sub
xor
mov
mov
mov
vextractps
add
movl
pop
lcall
adc
sbb
call
adc
add
inc
rorb
aad
mov
xor
incl
mov
inc
out
xchg
orl
fnsave
cmc
ja
int3
or
divl
mov
nop
mov
cmc
push
cmp
adc
test
dec
pop
iret
add
lods
push
in
test
sub
dec
shll
lods
push
dec
push
mov
mov
lahf
or
lea
popf
mov
pop
xchg
jg
adcb
dec
fldt
and
jo
add
add
sub
add
in
jno
fwait
aas
adc
outsb
mov
shlb
std
push
xor
iret
aam
xor
data16
cmpsl
push
xor
xor
jns
outsl
xchg
xchg
scas
push
cmp
idivl
or
pop
mov
sbb
pop
mov
leave
imul
inc
sub
insb
pop
mov
nop
arpl
adc
mov
loopne
xchg
je
mov
addr16
test
and
or
adc
ss
mov
mov
cwtd
shrl
into
rcrl
roll
pop
pop
lea
adc
jecxz
adc
mov
insl
fsubl
lods
stos
lret
cmc
sub
push
sub
mov
sahf
xor
pop
pop
xor
xor
aad
out
mov
gs
sub
inc
in
outsb
outsl
les
cwtl
push
rcrl
inc
or
mov
test
sti
aad
mov
mov
insl
jae
les
pop
xor
dec
dec
mov
aam
ds
xor
in
pop
xchg
in
in
jg
aam
inc
repnz
mov
mov
stc
pop
jb
xchg
lock
pushf
jno
push
xchg
xor
xchg
inc
xor
bound
cltd
cmp
sarl
negl
push
scas
aad
sub
jge
dec
pushf
cmp
xchg
xchg
jnp
sub
pop
loop
nop
pop
inc
outsb
ret
and
daa
lcall
data16
ss
xor
pop
xor
xchg
cmpsb
fidivl
cmp
xchg
xchg
pop
adc
ljmp
xor
loopne
xor
sahf
jle
dec
mov
mov
dec
stc
mov
dec
clc
negb
pushf
mov
xor
adcb
cmp
daa
outsb
fdivp
test
sti
pop
imul
iret
mov
xor
xlat
sbb
push
mov
fidivs
mov
jmp
cmpsb
mov
js
sbb
mov
lds
scas
dec
jmp
xchg
sbb
sub
test
xchg
mov
movsl
xlat
repz
jae
or
lock
sbb
jae
mov
mov
stos
fwait
movsb
push
cmpl
cli
adc
test
xchg
pushf
out
out
div
test
addr16
push
sub
mov
test
mov
dec
add
mov
mov
xchg
sub
inc
mov
and
xchg
loop
pop
xchg
xchg
adc
scas
sub
jmp
xor
mov
loopne
hlt
pop
or
lea
inc
sbb
pop
mov
xor
inc
xor
fidivl
mov
or
leave
push
and
cwtl
cmp
xchg
loopne
lea
sbb
jge
mov
and
mov
dec
inc
lret
cmpsb
dec
outsb
mov
jge
leave
fimull
mov
aas
mov
cmp
dec
pop
gs
jmp
pop
mov
mov
addr16
lea
cli
dec
xchg
sti
test
xchg
add
loop
mov
sbb
clc
aad
lret
cli
cmp
inc
dec
sub
enter
mov
add
loop
inc
jecxz
out
cwtl
mov
jns
jmp
popf
popa
xchg
leave
jmp
xor
or
mov
jbe
pop
jecxz
mov
aaa
mov
sbb
push
mov
jo
sahf
push
incb
inc
jge
jge
lahf
cmpsb
imul
inc
xchg
push
xchg
pusha
sti
mov
pop
push
sub
cs
fcoml
test
adc
into
js
pop
into
inc
pop
cmp
and
cli
mov
add
dec
or
scas
ss
sbb
pusha
insb
cmp
out
orl
aas
mov
int
mov
pop
bound
jae
cltd
lods
mov
movsb
insl
lods
mov
push
mov
mov
dec
cld
jmp
imulb
add
push
inc
cmp
lret
test
jbe
lds
je
std
data16
xor
and
test
push
sbb
aad
je
cmpsb
out
frndint
pushl
int3
dec
or
jecxz
sahf
pop
mov
fs
cmp
pop
in
jle
cmp
push
mov
lcall
xlat
mov
lahf
xchg
clc
dec
aaa
jo
add
push
inc
sub
push
out
sbb
push
mov
push
scas
js
mov
inc
enter
sbb
mov
aas
insb
leave
imul
adc
xchg
imul
lock
sub
and
in
loop
test
mov
mov
xor
scas
cmp
inc
mov
mov
addl
cmp
mov
sub
jb
cmp
pop
aas
ss
in
cmp
stc
aas
pop
ds
cwtl
sbb
loop
rorl
arpl
adc
jl
les
vpsubsw
repnz
lahf
ja
dec
aaa
shll
sub
pop
int
sysret
stos
inc
and
mov
pop
rcl
jo
insl
movsl
mov
aas
call
lds
pmuludq
and
jp
divb
mov
dec
adc
mov
loopne
inc
fwait
mov
or
std
push
mov
jo
sbb
and
cmp
inc
sti
loope
jg
cmp
stc
dec
filds
and
mov
push
cmp
sub
aam
bnd
xor
std
push
nop
fisttpll
cmp
sub
lods
push
push
fldenv
and
inc
mov
cli
mov
adc
loopne
mov
pushf
pop
addr16
rcll
in
add
sub
push
je
lcall
add
jg
inc
fbld
cld
mov
js
es
movsb
iret
fwait
push
incb
dec
pop
push
mov
andl
mov
xor
bound
out
xchg
add
aad
push
ficompl
rcrb
or
xor
out
add
sub
rolb
cmpsl
repnz
or
test
les
loop
js
cmp
xor
ljmp
mov
push
sub
sub
daa
scas
shrb
das
xchg
mov
outsl
jl
and
jle
out
shrb
and
inc
xor
jo
or
pop
add
pushf
in
ljmp
or
pop
xor
mov
mov
xchg
dec
js
test
shlb
data16
repnz
dec
mov
fwait
cmp
pop
mul
or
add
gs
js
and
mov
movsl
dec
mov
ret
cwtl
xchg
bound
mov
pop
sub
aaa
push
or
push
or
outsl
xchg
bound
xchg
or
into
or
jne
xchg
push
or
addr16
mov
sub
mov
inc
or
push
push
inc
int
shlb
hlt
mov
data16
out
dec
scas
mov
int
pop
lret
dec
bound
into
push
inc
xor
adc
btr
xchg
mov
fisttpl
mov
int
xchg
xchg
jbe
jmp
sub
popf
es
push
addr16
pop
push
and
add
adc
push
xor
dec
and
or
mov
adcb
xorb
testw
add
fstl
repz
jae
cmpsb
pushf
push
sbb
pusha
out
cwtl
mov
out
cli
mov
or
push
dec
mov
jns
push
cltd
fdivr
sbb
mov
push
cmc
dec
adc
inc
sbb
dec
jg
pushf
inc
xlat
dec
add
test
lcall
xor
les
jp
xchg
push
xchg
adc
mov
add
mov
hlt
lods
xchg
sbb
xor
dec
cld
cmpsb
je
mov
inc
jl
push
shrl
sub
jb
cwtl
mov
test
cltd
out
add
fnstsw
cli
and
jecxz
push
ss
pop
add
lcall
push
aaa
xor
sbb
test
push
cmp
in
shr
andb
dec
sti
mov
pop
lret
fisubl
add
inc
testl
xchg
into
negl
push
push
aad
mov
jle
sub
mov
mov
std
call
push
cltd
mov
lds
loop
sbb
mov
inc
mov
iret
pop
cmpsl
jns
pusha
filds
xchg
or
add
adc
jnp
in
adc
mov
mov
aaa
push
mov
dec
mov
loop
insl
fists
or
pop
and
inc
cmc
inc
xchg
and
movl
ret
or
fldt
cwtl
lock
pusha
jmp
ja
cmpsb
xor
fldl
jecxz
les
mov
pop
pusha
dec
ljmp
sub
and
mov
xor
sahf
push
cmp
inc
mov
popa
ret
mov
mov
push
ror
das
out
jge
enter
fmuls
add
add
pop
add
mov
adc
add
push
frstor
and
jns
daa
sub
jne
aas
inc
sub
rorl
gs
pop
in
jae
push
pop
push
cmp
mov
fcom
pop
cmp
fwait
popl
loopne
sub
scas
das
sahf
jp
std
mov
push
sti
faddl
mov
pop
test
fwait
and
enter
mov
xchg
mov
lcall
pop
outsl
sub
int3
adc
xchg
movsl
addl
cmp
imul
rcrb
aam
sub
sbb
mov
ret
lret
mov
mov
pop
jno
repnz
sbb
insb
cltd
fsubs
bound
out
push
pop
inc
and
inc
hlt
lahf
and
mov
shll
jmp
lock
mov
stos
sahf
or
and
mov
add
aaa
bound
stos
in
icebp
jmp
jge
sbb
ds
lcall
es
mov
cli
mov
pop
jns
dec
sbb
outsb
pop
or
mov
adcb
sahf
popf
xor
adc
xchg
sub
adc
cmp
mov
mov
popa
sti
mov
mov
adc
xor
data16
add
inc
xor
or
xchg
pusha
add
add
push
mov
mov
sub
js
lock
cmp
pop
mov
and
cmp
inc
sub
pop
lock
push
or
daa
add
and
std
mov
in
sub
add
sub
push
outsl
and
lcall
sub
mov
out
outsb
and
pop
cmp
inc
mov
notb
inc
sbb
mov
lds
cmp
lret
or
ret
dec
les
movsb
or
aam
aad
nop
mov
or
lret
pop
roll
inc
jne
adc
sub
imul
adc
lods
mov
cmp
cmpsl
rep
push
aas
ss
mov
negl
jecxz
cmp
test
cmpsl
push
lret
orl
jl
jnp
mov
sub
in
std
outsl
incl
lock
neg
sub
movsl
ret
mov
cli
fcmovu
outsb
or
pop
iret
mov
xchg
mov
sahf
push
xor
cld
push
mov
xchg
cltd
push
cltd
xchg
or
cld
sbb
imul
cmp
cmp
jmp
dec
cli
sti
cmp
cli
adc
or
rcrl
fmuls
xchg
cmp
mov
mov
mov
sub
and
xchg
xchg
dec
sbb
clc
sahf
xchg
iret
repnz
aas
sub
add
or
add
jl
lret
stc
pop
insb
or
arpl
fistps
adc
aaa
pusha
pushf
push
loope
das
aaa
das
ret
dec
movsb
push
inc
xor
dec
jmp
inc
ret
outsl
ss
subl
loop
in
insl
cld
pop
jnp
stos
shlb
rcrb
add
aas
mov
enter
mov
pop
nop
stc
mov
dec
addr16
adc
pop
mov
push
in
rcll
cltd
pushf
sub
mov
ret
pop
push
pop
jo
lea
cs
push
inc
mov
and
sub
cld
hlt
xchg
movsl
fwait
clc
cs
imul
sahf
or
mov
push
jae
dec
iret
adc
aaa
stc
sub
loop
mov
leave
imulb
rcl
cltd
jmp
sbb
rcrb
pop
cli
inc
xorb
out
subl
jp
push
lahf
adc
inc
dec
mov
outsb
dec
jo
iret
subl
fcmovu
ja
pushf
pop
fstps
in
lods
lock
cli
add
push
daa
enter
sbb
fwait
add
shrl
jmp
dec
loope
dec
in
and
rcrl
mul
mov
jge
ret
jno
sub
das
mov
mov
test
inc
arpl
adc
pop
incb
adcl
icebp
cmp
enter
dec
push
jo
cli
imul
xor
mov
and
sub
lea
int3
leave
jle
inc
xor
xor
pop
jo
sahf
fwait
sub
inc
lods
es
lods
inc
mov
enter
pop
movsl
inc
lcall
mov
sbb
dec
cli
and
and
sbb
cltd
fwait
sub
ljmp
mov
jle
sub
mov
adc
and
pusha
lods
ja
je
push
jbe
inc
xor
iret
mov
jp
pop
enter
mov
test
mov
xor
push
sub
mov
push
mov
paddusw
dec
mov
jns
add
and
cltd
loope
push
out
sti
add
mov
loope
ja
rcpps
sub
mov
jl
mov
or
and
add
or
ds
cmpsl
sbb
pop
arpl
jp
outsb
xor
pushf
xor
xor
jmp
add
sar
xchg
test
insb
int3
adc
ja
pop
cmp
leave
das
and
and
jle
leave
mov
sbb
xor
add
loopne
out
xor
cs
imull
and
loope
xorb
adc
mov
sub
shll
xlat
mov
mov
aad
mov
mov
jno
and
das
inc
nop
push
jg
and
pop
xor
xchg
mov
mov
jmp
xchg
rorb
inc
mov
mov
stc
int
xchg
xchg
in
rcrl
enter
decl
jbe
adc
testl
xchg
and
fisttpl
mov
jmp
fwait
mov
movsb
fs
jno
fimull
stc
xadd
pop
fisubrs
loopne
jbe
xchg
scas
xchg
fsubrl
and
adc
push
dec
mov
pusha
popf
push
sub
xchg
jecxz
mov
cmp
xor
adc
out
dec
fidivs
push
bound
xchg
aam
sub
sti
or
mov
loop
add
push
aas
int3
sub
mov
stc
or
push
xchg
xchg
lea
inc
push
xor
add
jne
push
and
sahf
addr16
xor
cltd
dec
enter
dec
jo
xor
sbb
mov
mov
mov
imul
xchg
cmp
test
inc
push
in
xor
dec
jae
push
js
sub
cmpsb
mov
jmp
xor
lea
add
imul
std
sbb
popa
daa
fnstsw
jmp
xorb
sbb
adc
sbb
cmc
lods
arpl
clc
loope
cmp
mov
xchg
jg
pop
cwtl
cmovae
idiv
stc
xchg
nop
sbbl
stc
call
pop
sub
mov
mov
std
push
fs
loop
lds
push
xor
push
daa
je
ficoml
ret
inc
lods
shrl
fs
lret
into
dec
es
bound
pusha
roll
sub
ret
call
mov
popa
cmc
pop
clc
lret
hlt
dec
cltd
out
pop
outsb
roll
mov
mov
hlt
in
adc
xchg
ljmp
xchg
cltd
test
movsl
or
jle
icebp
push
mov
adc
out
lods
xchg
sub
and
jb
mov
testb
add
in
sbb
test
push
inc
and
adc
push
add
xor
fnsetpm(287
lods
out
pop
dec
adc
rcrb
adc
pop
ljmp
push
xchg
mov
in
or
inc
lods
sbb
jb
lods
pop
jmp
les
pop
loope
lods
jno
cmp
js
stos
mov
xor
movsb
lock
xchg
push
andl
jo
and
push
cld
cmc
mov
scas
nop
dec
xchg
mov
adc
shlb
mov
clc
push
arpl
js
inc
int
subl
mov
xchg
pop
sti
jmp
scas
nop
jecxz
decl
sbb
sti
les
out
loop
sbb
ret
les
std
bound
mov
xchg
out
add
jg
mov
pusha
fcmovnbe
or
push
dec
mov
mov
lea
test
add
outsl
pusha
xchg
shrb
cs
aaa
or
sbb
fwait
mov
enter
add
push
call
loopne
rcrl
mov
sti
insb
andb
adc
jl
or
mov
test
arpl
outsb
xor
pop
sub
mov
ficomps
pop
dec
fsubrs
push
ljmp
dec
fdivrs
ds
lods
shrl
or
mov
aaa
cmp
imull
xlat
sub
fiadds
lcall
insl
dec
adc
aaa
pop
dec
mov
into
rcr
pop
push
push
jmp
cmp
rol
ret
sub
fdivs
add
pop
scas
mov
cwtl
jl
push
sub
outsl
sti
mov
lcall
sub
bound
aam
cmp
loopne
mov
stos
pusha
sub
sbb
sar
xchg
mov
push
xor
fisubrs
loopne
in
push
xchg
and
xor
jno
popa
in
bound
cmp
out
sbb
add
es
and
adc
or
mov
ss
xchg
in
icebp
mov
repnz
ret
xor
mov
xor
jo
icebp
movsl
int
lods
sub
xor
push
push
cmp
push
into
jne
and
xlat
pop
sub
add
loop
inc
dec
insb
pop
pop
out
inc
js
ljmp
push
mov
mov
sub
push
cwtl
mov
cwtl
sub
les
imul
mov
js
xor
lock
shlb
faddl
les
lods
mov
mov
cmp
pop
jle
push
aas
addr16
outsl
pushf
popf
enter
and
and
push
pop
inc
fildll
cltd
aaa
lea
push
in
pusha
movb
aad
stos
repnz
jo
mov
jl
sub
mov
push
into
popa
adc
jno
popa
fisubrl
xchg
lret
jp
enter
lahf
add
inc
xor
lea
push
cmpsl
push
mov
inc
sub
dec
jns
push
cltd
imul
mov
insl
jle
add
xor
inc
inc
lock
push
or
int
xor
lock
cs
sub
mov
pop
xchg
and
cmp
cmpsb
cli
adc
xor
inc
cmpsb
mov
lret
jmp
fwait
xchg
stc
push
jg
cltd
cmpsb
loope
popf
xor
xchg
inc
das
loop
cli
add
into
jnp
lahf
cmpsl
jns
jbe
ret
testl
mov
xchg
shrl
push
jle
pop
mov
jmp
scas
test
push
lods
scas
das
jge
push
mov
cltd
cs
jnp
icebp
iret
add
movsb
test
jge
out
aas
dec
jae
fisttpll
lds
and
adc
pop
popa
mul
subb
test
lods
mov
lret
pop
mov
mov
scas
inc
cmp
int3
inc
sub
pop
cli
int3
ror
add
inc
fnstsw
jle
jp
fsubrl
cmp
fstps
adc
push
jno
cmpsl
sahf
or
aas
mov
fnstsw
bound
shlb
test
insl
xchg
lds
mov
loop
dec
data16
ljmp
mov
jl
rorb
test
loop
gs
out
lds
adc
dec
xchg
sub
xlat
loop
inc
int3
fmuls
xchg
xchg
stos
jecxz
xor
cwtl
sub
inc
cmc
enter
jmp
push
imul
jbe
inc
fcoms
xchg
cmc
mov
xchg
pop
mov
outsb
sub
xor
xchg
xchg
push
adc
aam
rcl
mov
insl
pop
adc
dec
call
mov
sub
movsl
sub
or
pop
bnd
test
xor
mov
mov
stos
or
std
test
jo
xlat
push
in
jl
pushf
xchg
scas
shll
and
xchg
fwait
inc
adc
mov
mov
in
pop
xchg
and
cmp
fwait
popf
insb
roll
push
xor
pop
addr16
jg
stc
mov
xor
jl
inc
lret
push
stc
aad
pop
aas
loop
push
sbb
dec
insb
cmp
imul
push
lret
mov
aaa
dec
dec
jno
addr16
or
addr16
mov
pop
mov
dec
ja
dec
push
mov
out
dec
dec
xchg
jo
std
rcrl
js
adc
pop
movsl
jecxz
push
pop
ret
mov
loopne
push
push
jb
lock
push
mov
dec
add
dec
mov
mov
xor
aaa
xorl
xchg
pop
movsb
clc
and
xor
lahf
sbb
out
lcall
sub
pusha
jecxz
dec
lret
xlat
jne
cmpsl
stos
mov
add
ret
pop
sbb
and
cmp
pop
aam
fs
jne
sub
cmpsb
mov
xlat
rcrb
scas
pop
xchg
mov
leave
stos
push
es
xor
and
xor
mov
cld
movsb
shll
rol
mov
mov
insb
pop
bound
cmp
imul
pop
aaa
xchg
lahf
xor
adc
mov
popa
scas
popa
sbb
aad
inc
clc
and
cltd
mov
dec
jno
lods
add
add
arpl
sbb
fwait
bound
push
xor
jns
jl
mov
mov
jo
adc
jbe
sub
mov
in
cmp
enter
mov
cmpsl
jns
andb
mov
fdivrl
psubb
xchg
mov
je
fwait
xchg
xchg
stos
jmp
insb
in
ljmp
repnz
dec
inc
inc
pop
insb
pop
das
lahf
add
icebp
in
inc
mov
xchg
ret
icebp
popl
mov
mov
and
mov
stos
mov
into
lock
jne
mov
pop
pop
call
out
cmp
cmp
ret
nop
in
inc
ja
stos
cltd
jae
adc
ljmpw
mov
mov
stc
mov
mov
and
dec
fisttpl
mov
dec
sub
adc
pop
mov
sbb
sub
mov
pop
loop
cmp
call
adc
jae
or
repz
fisttpl
ret
outsl
mov
arpl
loop
dec
xor
mov
test
mov
jle
add
outsl
xor
push
add
testl
rcll
or
xor
xchg
jbe
cmpl
xor
lret
xchg
out
adc
js
jmp
stc
jge
mov
rclb
and
sbb
imul
test
inc
mov
lea
daa
xchg
daa
rcrl
or
iret
push
aas
clc
shlb
sub
out
int
int
ret
scas
int
adc
ret
ret
ss
in
test
xchg
rcrb
or
adc
das
aaa
test
mov
pop
mov
lock
outsl
shlb
in
aad
dec
jne
fistpll
xchg
mov
xchg
cmpsb
pop
pushf
fisubrs
pop
ficomps
jmp
push
in
sarl
aas
dec
sub
inc
filds
out
orl
test
movsb
lret
inc
into
mov
mov
pop
jmp
and
mov
addl
jge
iret
cs
ret
pop
push
xlat
inc
je
lds
jno
out
jns
in
sbb
scas
adc
stos
std
cli
sub
mov
jcxz
inc
sbbl
add
loope
cmpsl
test
jo
mov
mov
cmpsl
mov
adc
es
sub
pusha
xchg
cwtl
test
adc
cwtl
in
push
cmp
out
xchg
xchg
enter
adc
cmp
arpl
pop
pop
lahf
dec
push
add
add
sub
add
loop
xorl
push
xchg
cmpsb
aam
jnp
jb
fisubl
sti
add
sub
cmp
jecxz
mov
push
xchg
mov
sbb
shlb
call
out
stos
fisttps
push
sbb
jmp
cltd
in
in
xor
add
jg
dec
or
mov
xchg
addb
xor
mov
mov
fchs
decb
add
cmpsl
test
mov
pop
add
mov
push
ret
lock
arpl
incb
les
push
icebp
fidivs
lret
mov
pop
imul
jle
lcall
pop
cmpsl
les
mov
icebp
or
in
add
mov
cmpsb
jnp
pop
jecxz
sti
iret
ret
mov
inc
lcall
enter
sar
rolb
mov
aaa
leave
cmpsl
and
xchg
popa
add
arpl
inc
cmc
jb
mov
xchg
int3
loope
repnz
data16
enter
movsb
xorb
xchg
lods
sti
gs
mov
mov
push
ret
jb
fists
adc
shll
repz
shll
iret
icebp
stos
pop
sbb
andb
cmp
sbb
addl
or
inc
scas
and
jmp
addb
data16
mov
lahf
mov
cmp
mov
fsubrs
pop
inc
and
in
xor
pop
xor
sub
pusha
int3
mov
mov
nop
dec
add
push
daa
xorl
pop
fnstsw
in
xchg
push
pop
dec
mov
cmpxchg
dec
rorb
xchg
xor
dec
loop
cmp
mov
data16
test
push
push
mov
in
out
shlb
pop
stos
add
loopne
push
les
in
jnp
shlb
pop
xchg
std
scas
in
dec
push
rclb
add
sbb
ljmp
xor
cld
lock
add
and
mov
lds
int
stos
pop
mov
dec
or
xorl
call
sub
js
cmc
push
mov
inc
push
xlat
push
out
stos
xchg
sub
out
mov
aaa
jb
mov
mov
sbb
lret
inc
push
imul
push
and
xor
ror
negl
sahf
fwait
inc
outsb
pop
or
pop
xlat
cwtl
mov
sbb
jne
mov
jmp
mov
ret
shrl
xchg
sbb
xchg
mov
jnp
fcoml
push
es
mov
xchg
jmp
xor
das
cmp
mov
aad
xchg
inc
dec
dec
mov
push
mull
std
and
fstp
xchg
sahf
lods
js
outsl
and
and
or
ret
cmp
push
pop
push
push
push
jg
shlb
fwait
jg
xchg
in
xchg
dec
or
repnz
sbb
int3
xchg
icebp
stos
clc
xor
inc
mov
inc
das
xor
add
dec
scas
in
icebp
outsb
ret
mov
cli
mov
or
adc
nop
movsb
sbb
clc
push
rorl
addr16
filds
dec
mov
stc
add
or
std
cmp
and
adc
sahf
add
push
mov
jge
jge
pop
mov
mov
add
dec
add
jae
pop
xor
push
fmul
ljmp
dec
ja
add
pop
cs
adc
loopne
add
mov
fwait
stos
cmp
dec
out
xchg
fisttpl
fldl
cmp
xchg
adc
adc
mov
cmp
or
dec
add
jns
out
insl
pop
out
les
mov
sub
loopne
cld
pop
sbb
add
mov
mov
popa
jle
rcll
mov
mov
cmpsl
push
mov
sbb
and
loopne
ja
call
or
les
loope
mov
cmpsl
out
xor
into
jo
xor
dec
popf
dec
cmc
dec
not
mov
fnstenv
dec
enter
inc
dec
sar
and
jl
mov
lret
jg
ljmp
cmp
mov
push
in
pusha
sbb
push
into
dec
leave
fwait
popa
pusha
roll
jns
call
fdivrl
sbb
xchg
adc
jnp
aam
cmc
inc
or
cmp
mov
das
fxch
jmp
ja
ss
xor
mov
and
adc
js
ljmp
cmp
push
lods
pop
dec
dec
cmp
mov
mov
mov
out
in
xchg
aad
mov
lods
mov
jg
aas
outsb
jp
js
stos
dec
sbbb
add
mov
testb
cmpsb
jl
inc
or
movsl
das
js
mov
push
ret
or
fistpll
std
out
xchg
popf
cwtl
sbb
fmul
sbb
hlt
jl
add
and
push
repz
xchg
aaa
sub
sub
inc
ja
adc
cwtl
ss
cltd
nop
jp
sbb
cld
push
mov
mov
lods
stc
inc
out
adc
cmpsb
inc
inc
mov
ja
jo
jae
mov
andb
mov
mov
pop
mov
and
add
sbb
jmp
les
and
ljmp
lcall
ret
dec
add
push
pop
inc
and
loope
sbb
mov
xor
incl
stos
shlb
xchg
cmp
out
pusha
xor
adcl
sub
ljmp
repnz
movsb
jl
insb
sub
scas
pmulhw
dec
mov
fisubrl
cld
lds
push
hlt
clc
shll
pop
or
push
aaa
jns
movb
mov
mov
repnz
add
push
mov
gs
xor
jle
dec
sub
lea
repz
call
push
or
addl
adc
xchg
popf
mov
xor
jge
adc
outsb
lea
aas
addb
in
xchg
jle
clc
pop
adc
cltd
into
mov
or
xor
pop
xor
out
sub
xchg
or
xor
adc
popf
arpl
je
xor
xorl
inc
fnstcw
int
jo
repz
xchg
enter
add
xchg
pop
bound
out
call
cltd
pop
or
ja
daa
sub
sbb
stos
movsl
mov
enter
outsl
mov
loop
cmp
pop
push
or
inc
inc
mov
mov
xchg
jnp
mov
jmp
das
mov
cwtl
js
enter
jne
inc
xchg
add
xchg
pop
shlb
je
add
rcr
pop
insb
rorb
inc
adc
push
imul
add
movsl
jp
mov
mov
xchg
sahf
mov
inc
lock
cmp
cmp
addb
and
repnz
insb
pop
out
push
decl
jecxz
xor
add
repz
fsubr
mov
jae
aas
jb
cmp
out
jg
dec
sub
mov
aaa
add
loope
dec
sub
sbb
add
jle
adc
out
cmp
gs
pop
dec
movsl
cmp
lahf
cld
je
js
adc
sub
push
addr16
movsb
fistps
fildll
push
mov
cltd
cmc
fwait
out
icebp
mov
sub
push
repnz
mov
push
test
pushf
data16
mov
and
rep
loope
divb
push
mov
mov
pop
call
movsb
jb
lahf
icebp
push
mov
in
imul
jae
inc
pop
pusha
cmp
ja
loop
push
cld
repz
arpl
inc
movsb
lods
fwait
mov
cmp
mov
jp
and
jno
and
cmp
test
adc
fs
xor
lret
leave
aas
nop
xor
cltd
popa
jecxz
xchg
cmpsb
les
inc
push
and
dec
mov
jge
push
jns
cmp
mov
mul
sbb
xchg
outsl
incb
addl
shll
and
aam
mov
push
dec
out
insl
or
mov
je
jae
cmp
addr16
aad
out
scas
cmpsl
aad
add
insl
fdivl
mov
aas
or
push
cli
xchg
adc
rol
mov
push
lret
mov
inc
sti
mov
arpl
fwait
loope
push
das
inc
pop
sub
or
cmc
stos
xchg
dec
pop
mov
movsb
and
push
popa
lods
xchg
out
pop
std
dec
rolb
leave
dec
adc
repz
dec
mov
inc
mov
pop
cltd
pop
add
in
xchg
pop
idivl
int
mov
jo
xchg
jge
leave
rol
lock
call
cmp
adcl
cld
popa
and
mov
xlat
jmp
out
outsb
push
repnz
xchg
add
fldl
jne
add
lahf
cs
sub
out
add
pop
mov
adc
pop
psraw
mov
push
sub
das
and
xchg
or
dec
loop
push
xor
lcall
jge
testb
jp
js
andl
cmp
dec
lea
and
pop
push
mov
mov
adc
movsb
cs
test
xor
loopne
sub
sub
cmpsb
jecxz
push
xchg
pop
inc
pop
insb
inc
and
rclb
mov
xchg
test
dec
cwtl
add
shll
mov
mov
and
or
adc
sub
loopne
cmpsb
call
gs
lret
xor
jmp
orl
mov
jns
scas
push
add
repnz
pop
leave
xchg
xsha256
ret
std
jno
mov
mov
dec
push
pop
cmc
fs
adc
adc
push
stos
xor
lods
testb
mov
lock
jge
js
dec
xlat
ss
test
xor
bound
dec
sub
xchg
arpl
jbe
cmpsb
pop
sbb
push
jmp
fdivl
lret
cwtl
xor
jae
mov
cmp
jbe
addr16
inc
adc
stos
pop
adc
jge
sub
pusha
or
roll
pushf
mov
addb
pop
jecxz
ds
adc
test
mov
popf
pop
fprem1
cmp
push
xlat
inc
test
mov
and
pop
cmp
cld
imul
addl
jle
pop
mov
insl
mov
add
mov
shll
push
or
sbb
stos
push
adc
lea
and
repz
cmpl
fdivs
loope
dec
stos
stos
aaa
mov
testb
out
out
pop
loop
iret
aad
mov
insl
lea
xchg
mov
jmp
xchg
pop
or
push
xor
outsb
ss
movsb
xchg
mov
out
out
fwait
dec
shll
std
das
xor
or
dec
hlt
lods
pop
pop
dec
rol
xchg
jb
pop
mov
repnz
mov
sub
daa
in
out
pop
mov
cmp
xchg
xchg
xchg
jne
dec
lahf
xor
inc
incl
dec
mov
or
adc
jo
aaa
stos
icebp
sub
lock
fnstcw
jae
mov
fs
dec
jle
xor
and
movl
adcb
gs
cs
cs
and
mov
xor
out
mov
xor
mov
xor
pop
pop
mov
pop
je
dec
xchg
dec
xchg
jmp
cmpsb
fsubrs
mov
adcb
aaa
aam
and
aas
pop
mov
or
xor
xchg
or
imul
rorb
add
xorb
or
xor
gs
push
stos
mov
lret
xchg
inc
loope
mov
aad
lods
pop
stc
incb
cltd
nop
daa
push
repz
cmpsl
je
pop
adc
xchg
fistl
mov
shl
push
pop
int3
ss
push
rcr
dec
push
lret
push
sub
leave
arpl
push
ret
nop
loopne
pop
jns
repnz
push
iret
jo
sub
cmpsl
mov
stos
dec
ds
out
inc
adc
hlt
js
xor
cld
cmpsb
out
or
sbb
insb
loopne
jle
aam
and
xor
add
loopne
icebp
int3
fisttpll
cmpsl
xchg
outsb
in
pusha
sub
cli
outsb
mov
push
test
sub
pop
xchg
test
fists
xchg
adc
hlt
mov
mov
inc
xlat
aad
fisubs
push
push
fs
ret
sahf
pop
mov
push
popf
and
shll
push
stc
sahf
dec
loop
test
pop
les
cmp
mov
cld
pop
fisubl
jg
xchg
fadd
jb
sub
inc
push
jmp
test
push
pop
out
mov
pop
mov
stos
jo
int
pop
sub
xchg
inc
xor
loop
or
shlb
stos
daa
std
inc
add
and
idiv
add
scas
negl
pop
adc
mov
pop
xchg
xor
xor
mov
pop
adc
mov
lock
daa
jg
out
jmp
push
daa
cmp
lret
insl
clc
cmp
in
xor
adc
fidivl
pop
adc
cmp
cmpl
xchg
mov
xor
mov
xor
cltd
gs
xchg
outsb
arpl
lods
mov
mov
mov
inc
push
test
fildll
in
cmpsl
inc
notb
arpl
xchg
push
mov
cmpsb
mov
mov
stos
daa
sbb
sub
cmp
fcomps
sbb
jne
pop
insb
inc
inc
sbb
popf
test
jns
fwait
mov
push
cmpb
xchg
sub
ret
sbb
push
leave
inc
cld
rclb
mov
iret
test
xlat
test
aad
faddl
aam
sbb
test
jns
rcrl
lods
inc
clc
lock
and
push
jp
pop
mov
int3
add
arpl
lods
push
pop
out
mov
xchg
divb
scas
subl
or
jecxz
xchg
aad
orb
cmp
jb
and
sbb
pop
test
sbb
shlb
loopne
jns
pop
sub
xchg
ljmp
scas
jns
movsb
add
faddl
push
adc
push
outsl
sbb
or
or
cmpsb
and
push
insb
jecxz
mov
push
dec
dec
aam
mov
lcall
mov
in
pushl
fwait
div
stc
push
bswap
stos
sar
mov
jne
jne
jnp
les
or
inc
push
shrb
lahf
jo
xor
and
int3
pushf
repnz
adcl
popa
cs
push
dec
gs
inc
fisubs
test
pop
lods
aad
cmp
inc
out
lods
addr16
movsl
daa
cmpsb
inc
dec
sub
mov
adc
cmp
mov
icebp
inc
movsl
stos
in
lock
mov
rorb
push
sub
cmpsl
pop
ret
mov
cmp
popf
aam
xlat
popf
push
pushf
leave
mov
ja
dec
push
mov
popf
push
dec
pusha
sbb
cmp
icebp
cmp
imul
loop
orl
loopne
push
fists
mov
mov
icebp
in
mov
pop
loop
rolb
cltd
fsubrl
jg
xchg
jg
jg
or
push
inc
shlb
insb
and
mov
xchg
xchg
mov
jge
mov
loopne
ss
in
stos
pop
cld
dec
and
cld
mov
shl
leave
xor
xchg
or
lds
cs
test
shll
mov
mov
sbb
dec
jne
and
jae
loopne
ret
or
xor
rep
dec
pop
sbb
fwait
xor
sub
and
movsb
pop
pop
inc
int3
jne
pop
push
xchg
out
cmp
test
push
cmp
loope
jnp
outsb
push
repz
sub
cmc
sbb
push
notb
mov
fldenv
cmp
and
or
bnd
ja
cld
imul
loopne
ret
jecxz
flds
pushf
add
jnp
aaa
stos
scas
in
and
sbb
sbb
cli
ljmp
and
pop
mov
insl
mov
test
rorl
adc
xorb
imul
les
push
lahf
ss
int
pop
test
pop
negb
mov
fldt
pop
mov
cmpsb
mul
adc
aam
fbstp
lds
insb
popf
out
cmpsl
adc
loopne
and
lea
cmp
aam
imull
push
push
fs
test
movsl
orb
test
stos
std
aad
movsl
xchg
dec
inc
push
movsb
cli
cmp
out
addr16
shrl
xor
out
out
mov
or
aam
mov
outsb
push
imul
inc
aaa
repnz
sub
cmc
mov
cmpsb
cmc
xchg
pusha
sub
cmp
cltd
or
fldcw
fisubrl
loopne
insl
pop
jl
mov
imul
call
cmc
dec
push
sub
push
test
loope
cltd
shrb
pop
in
ret
jno
dec
pop
mov
xchg
sbb
jl
sub
or
insl
mov
xor
cmpb
dec
push
dec
cmc
ss
mov
roll
lods
push
sbb
sub
cmp
xor
cmp
jo
push
mov
pop
enter
int3
std
add
sti
testb
jae
adc
and
std
in
and
pop
fildll
lea
sub
aas
jg
xor
xor
sub
mov
mov
mov
adc
add
das
add
mov
ljmp
fildll
jno
outsb
jge
pop
pop
cmp
dec
mov
push
mov
fnstsw
or
inc
repnz
jp
lods
mov
cs
dec
scas
push
dec
mov
fucomip
add
rorl
mov
xorb
movsb
rcrl
loope
jns
or
cmp
sahf
fnstsw
cmovle
cld
mov
add
mov
enter
inc
bound
in
imul
in
mov
dec
arpl
adc
sti
dec
imul
push
fs
jecxz
mov
imul
jns
insl
and
mov
jne
push
lock
icebp
addr16
out
loop
xchg
loop
pop
nop
cmp
pop
pop
fiaddl
lock
lret
fwait
das
ficomps
scas
dec
into
repnz
mov
dec
ret
sub
pushf
inc
sub
mov
ss
loope
lret
negb
data16
xor
sbb
out
imul
mov
mov
insb
jns
loopne
inc
cmpsb
sbb
ret
add
inc
mov
fs
push
arpl
add
xorl
out
and
mov
dec
sub
mov
push
xchg
or
xchg
dec
mov
or
sti
orb
in
mov
pop
add
loopne
rcr
repz
dec
enter
fwait
mov
or
sub
fisubrs
sub
sub
or
aas
push
fstpt
pop
rcll
add
out
outsb
mov
jae
sti
lds
lock
repz
or
lods
xlat
sbb
sbb
adc
and
sbb
dec
pusha
xor
hlt
pminsw
sbb
fisubrl
add
adc
inc
jbe
inc
sbb
lret
dec
les
lock
jp
add
add
ja
xchg
fdivrs
and
jmp
fsubr
xchg
cs
sti
std
add
pop
lock
push
into
outsl
loopne
mov
fcoml
jle
mov
pop
shlb
jmp
lods
xor
lret
movsb
bswap
dec
pop
repnz
fsubs
push
pop
mov
pop
call
dec
sbb
dec
lds
add
dec
gs
repz
shlb
adc
push
pop
mov
xchg
gs
inc
mov
cs
add
push
clc
fs
lcall
in
daa
hlt
cmc
outsl
add
notl
jo
in
pop
mov
stos
enter
jmp
out
or
xor
rorl
aaa
xor
push
cmp
gs
jno,pt
aad
outsb
hlt
cmp
fiadds
rorb
adcl
dec
fidivrl
dec
mov
mov
sahf
mov
and
loop
jae
adc
add
push
out
adc
cmpl
push
push
stc
dec
adc
mov
je
sub
lock
mov
fstpl
pop
inc
add
sbb
nop
pop
out
call
lds
inc
mov
mov
cmp
movsb
dec
push
inc
pop
xchg
and
xchg
xor
repz
lcall
fisubrl
dec
add
cli
call
movsb
pop
daa
sbb
mov
inc
push
sti
int3
cmp
sub
jae
scas
sub
xor
pop
out
mov
mov
das
pop
lds
test
leave
and
sub
stos
pop
jbe
fldcw
push
lea
fidivrs
jo
mov
inc
pushf
out
dec
jmp
jb
out
mov
aaa
inc
push
xchg
mov
or
push
mov
xorl
int
and
lods
push
pop
hlt
frstor
cmp
stos
inc
xchg
cmp
xor
scas
adc
xor
push
loop
cli
inc
and
or
fcmovu
lcall
mov
pop
int3
push
jb
negl
sahf
andb
lock
fimuls
xchg
cmpsl
dec
xchg
cmp
cmp
pop
mov
je
pushf
into
sbb
cmpsl
ret
nop
lret
test
cmpsl
adc
cmp
daa
inc
mov
int3
je
repz
mov
cmpsb
rorl
mov
adc
js
pop
xchg
jne
popf
aas
cmpsl
push
jae
aaa
outsb
mov
jle
orb
mov
insb
out
jp
out
pop
push
mov
loopne
xor
bnd
mov
aad
iret
mov
sub
data16
xchg
and
sbb
fmull
mov
fldt
jns
mov
leave
and
popl
in
dec
popf
mov
and
pop
push
jmp
adc
popf
hlt
inc
jne
inc
sbb
push
data16
jae
js
pop
add
push
fistpl
sub
jb
rorl
adc
pop
xor
jno
stos
cmpb
sub
pop
push
xlat
mov
test
dec
dec
lock
movsb
jmp
daa
mov
mov
pop
mov
cmc
xchg
ret
cmpsb
aas
outsl
jg
daa
mov
shll
stos
push
outsb
jns
cs
leave
stc
dec
movsl
imul
mov
fldl
mov
pop
es
xchg
mov
es
xor
push
jmp
ljmp
sbb
xchg
outsl
enter
dec
cmp
and
jb
or
cmpsb
out
mov
mov
inc
and
sub
leave
jb
rorb
push
imul
hlt
pop
mov
ja
arpl
loopne
out
jle
xchg
pop
movsl
loope
nop
ds
jae
push
or
mov
ds
xchg
xlat
cmpsb
inc
lret
mov
pop
nop
sub
arpl
mov
or
mov
mov
inc
rolb
std
or
jle
scas
push
idivl
div
adc
stos
test
leave
in
arpl
cmp
cmp
and
fdivrs
daa
addr16
pop
rcrl
jbe
inc
fdivrp
shrb
negl
xor
mov
loop
adc
mov
enter
ds
xor
mov
sti
add
or
stc
das
inc
rcrb
xor
inc
outsl
xchg
cmp
pop
in
lcall
loop
xor
adc
shrb
stos
fnstcw
lods
xor
pusha
mov
out
lahf
mov
and
ret
loopne
icebp
sbb
bound
lahf
add
push
rcl
mov
bndstx
test
pop
stos
ucomiss
xchg
add
into
lahf
jne
fs
mov
sbb
scas
mov
or
movsl
sbb
in
fbld
lahf
push
and
jns
mov
jmp
rcr
lock
adc
mov
imul
repz
lahf
adcb
movsb
repz
jno
fidivrl
ja
sahf
call
xor
xor
cli
rorl
add
pushf
outsb
mov
lea
mov
rol
add
push
jbe
mov
adc
inc
jnp
outsb
lods
dec
push
leave
js
rcll
or
xchg
cld
sbb
xchg
je
or
push
add
mov
push
adc
adc
and
xor
lcall
sub
pop
or
lock
or
inc
mov
cmc
adc
repz
dec
lret
mov
or
push
repz
lods
xchg
inc
outsb
and
aam
out
stc
subl
les
xchg
or
jae
fildll
adc
out
sub
add
add
ret
inc
jmp
addr16
sbb
pop
leave
cs
arpl
sub
jne
cmp
lock
sbb
push
sarb
xchg
mov
out
add
pusha
mov
pop
xchg
out
adc
lds
jecxz
stc
mov
les
imul
push
jmp
dec
cmp
rclb
push
aaa
mov
leave
push
cmpsb
cmp
in
or
mov
lods
repnz
out
inc
mov
pop
jmp
mov
scas
in
sub
pop
adc
in
or
push
mov
xor
loopne,pn
sub
je
es
es
jno
xchg
inc
lcall
push
cmp
xchg
test
js
dec
pop
inc
imul
scas
mov
outsb
cmpsb
adc
sbb
xchg
jbe
sub
int3
cmp
jmp
test
push
add
aam
xchg
cwtl
jmp
jp
mov
jo
mov
jge
insl
enter
lock
jns
insl
fnstcw
call
in
xchg
push
cs
mov
fildl
fstpl
mov
rorl
out
andl
int3
lods
cli
fbld
mov
push
cs
cmp
stos
pop
loope
shll
les
out
leave
gs
mov
pop
add
scas
xchg
xorb
inc
fs
cmp
fsubrs
rol
out
mov
fnstsw
fldenv
add
sub
out
daa
push
jno
dec
xor
mov
out
loopne
idivb
ret
rclb
pop
int
xchg
pop
push
push
test
mov
cli
jge
and
adc
lods
xchg
ja
dec
pop
pop
out
addl
aaa
int3
in
sbb
fildll
test
jb
insb
add
sub
adc
lock
jl
fmull
leave
cltd
js
lcall
dec
lahf
fs
sub
aaa
jle
mov
cli
push
sti
add
cmp
and
iret
inc
cmp
pop
sbb
fstl
dec
sub
sbb
dec
pusha
mov
lods
jnp
pop
movsl
jno
add
fcoml
jne
sub
pushf
and
xchg
or
scas
or
dec
push
movsl
or
push
pop
xchg
addr16
mov
cld
or
and
movsl
xchg
test
mov
pop
repnz
sbb
les
outsl
std
mov
lret
in
pop
pop
push
adc
outsl
xor
aad
aad
push
push
inc
ret
jns
scas
jne
cmp
pusha
lret
cmp
cmp
cmp
nop
jl
add
aas
cmp
out
and
imul
sub
mov
sbb
mov
xor
jl
mov
cmp
sbb
rclb
add
xchg
mov
dec
pop
sbb
and
in
bnd
add
mov
jecxz
scas
jns
outsb
dec
aad
sti
lods
mov
cmp
arpl
sub
jno
cltd
xlat
xor
mov
test
mov
jo
sub
sbb
or
pop
xor
fbstp
test
aas
dec
fstpt
movsb
pop
aad
add
push
nop
jbe
dec
push
sub
repnz
mov
lods
cmpsl
push
jle
add
fndisi(8087
cmpsb
sbb
shll
cld
sub
inc
repz
or
ja
jb
jne
dec
fs
popa
mov
mov
jo
mov
and
call
jl
xlat
sub
in
cld
pop
lds
in
sbb
ucomiss
and
push
iret
lods
pop
inc
mov
pop
mov
fnstenv
ja
xor
daa
scas
or
in
in
adc
movsb
sahf
cli
add
inc
repz
outsl
push
out
mov
push
jp
repz
imul
sub
inc
popa
cli
lahf
movb
shlb
test
ss
mov
push
add
clc
jno
mov
mov
pop
aad
movsl
sbb
add
mov
cmp
push
ja
xchg
sbb
sbb
xchg
dec
pop
push
inc
fwait
sbb
or
xorb
push
leave
addb
dec
lods
add
pop
mov
daa
mov
xor
mov
enter
fistl
or
je
fldcw
add
dec
and
mov
loopne
cmp
iret
repnz
rolb
xor
out
cltd
mov
enter
xlat
lcall
enter
inc
push
insl
ja
sti
pop
mov
xchg
or
loope
enter
mov
insb
test
jb
xchg
fwait
mov
xor
scas
andb
or
xchg
sbb
xor
lret
dec
ds
mov
out
push
outsb
arpl
pop
lock
push
adc
mov
add
stos
stos
test
arpl
test
add
or
in
mov
sbb
mov
pop
sbb
inc
xchg
fsubrl
xchg
bound
push
pop
mov
pop
les
xor
dec
pop
stc
jp
lret
inc
orb
mov
jo
and
sub
jp
inc
sbb
pop
leave
and
test
ja
loope
adc
sbb
xchg
out
add
and
loope
lods
mov
mov
scas
popl
movsb
and
jle
push
scas
push
push
and
and
mov
xchg
negl
and
inc
xchg
mov
pusha
call
pop
sbb
aad
adc
fwait
std
stos
jns
add
cmp
dec
ret
sbb
xor
in
xor
pop
mov
and
lret
dec
jbe,pt
loopne
sub
je
inc
xor
xchg
lret
sahf
or
pop
mov
cmpsb
rclb
es
dec
sbb
lahf
movsb
xchg
adc
and
or
stc
nop
cli
aad
jae
in
out
fnstenv
test
push
push
dec
testb
xchg
xor
pushf
ret
js
dec
lock
icebp
adc
clc
movsl
lret
ficoml
test
cltd
jmp
mov
popf
mov
insl
arpl
push
jecxz
test
inc
fimull
jmp
notb
xchg
daa
nop
pop
leave
pop
jp
lcall
notl
jo
shlb
add
into
push
cwtl
jnp
lods
xor
movl
ret
test
notl
sahf
cmp
imul
arpl
dec
push
je
push
push
cmovae
sahf
push
repz
pop
ret
inc
daa
mov
cwtl
hlt
cmpsb
pop
arpl
imul
push
mov
out
cmpsb
inc
aad
push
ds
xchg
outsl
mov
add
mov
mov
das
or
or
jl
mov
aam
bnd
std
mov
pop
xor
cltd
dec
push
push
fcmovnu
mov
popa
mov
ss
pop
test
pushw
test
mov
mov
ss
lcall
icebp
add
lret
xor
dec
cwtl
dec
aaa
and
adc
sbb
jp
sbb
sub
pop
sbb
mov
loope
push
pop
mov
cli
pop
mov
addr16
test
imul
push
sbb
push
orb
stos
fwait
negl
les
and
js
fwait
push
lea
cmpsl
aas
mov
mov
xchg
sub
xlat
add
test
add
mov
mov
gs
mov
jns
push
xchg
fistps
cmp
mov
lahf
enter
scas
rcl
mov
jo
idivb
lea
ret
jmp
fcmovnb
movsl
fdivs
nop
aam
stc
mov
mov
loop
notb
cmpsl
mov
int
cwtl
lcall
xor
pusha
adc
hlt
ja
and
rcrl
add
sahf
add
dec
fidivl
or
scas
sub
ret
lcall
gs
imul
dec
jbe
push
jnp
push
mov
scas
pop
sub
inc
mov
popa
lock
cli
imul
enter
jp
jbe
or
out
out
repz
jno
lahf
fistpl
mov
or
cld
cmp
jns
std
outsb
stos
pop
aam
or
leave
int3
sarl
mov
leave
xor
fisubl
mov
push
push
mov
jbe
jae
and
fsubs
fsts
pop
xchg
repz
sub
fdiv
lret
je
and
sub
or
adc
mov
scas
stos
test
int
adc
push
cmp
add
aaa
lods
mov
test
pop
adc
cmpsb
push
test
jo
outsl
push
rcl
frstor
arpl
jnp
push
mov
or
in
cmp
jle
adc
call
mov
inc
cmpsb
mov
stos
add
cmp
dec
out
jle
sti
or
mov
cld
jno
xchg
jmp
push
daa
shrb
fwait
mov
or
enter
test
out
jl
push
add
and
mov
call
xlat
push
fs
ret
add
dec
adc
push
aam
fidivs
pop
imull
mov
into
call
lret
test
push
in
fcompl
mov
addr16
and
sbb
lods
sub
jae
mov
lcall
addr16
add
in
in
adc
jns
jne
push
push
fstpt
sub
xor
test
mov
dec
push
push
ds
fldt
jnp
pop
ss
les
ja
adcl
add
jmp
dec
inc
mov
rclb
xor
jmp
into
cwtl
aas
cld
mov
xor
ds
xor
dec
popa
push
sub
and
push
sti
inc
insl
notb
loop
push
jne
les
xor
add
data16
mov
icebp
movsl
filds
inc
cmp
pop
imul
call
ret
mov
mov
aaa
xchg
sbb
mov
int
and
cmpsl
cli
daa
xor
mov
test
inc
loope
iret
subl
push
sbb
aad
call
in
ss
mov
inc
addr16
jecxz
aas
ret
inc
mov
mov
pop
cmpsb
cli
push
hlt
sbb
push
out
mov
aad
sahf
jne
popf
cwtl
xor
inc
test
dec
rcll
int
xchg
mov
mov
inc
cld
mov
fdivs
outsb
pop
lock
cltd
push
inc
outsb
les
popf
inc
shll
fbstp
or
fldt
ss
jle
out
adc
xchg
jecxz
in
mov
fmul
fldcw
jae
push
mov
xor
or
test
fcmovb
dec
cmp
and
add
push
test
hlt
cmpsl
adc
jmp
pop
mov
ds
lahf
cmpsl
lret
xor
retw
mov
arpl
dec
add
hlt
ljmp
lahf
fldt
pusha
pop
or
out
push
mov
ret
cmpsb
fwait
sbb
jb
xchg
push
lea
dec
repz
addl
pop
jge
cs
cmc
scas
mov
andb
mov
pop
cmp
arpl
addr16
xchg
rcrl
push
aas
mov
pop
jbe
mov
into
xlat
mov
lahf
add
scas
scas
lret
pop
sub
mov
subl
testb
in
cmp
sub
fstpl
loopne
dec
les
pop
mov
xchg
push
mov
ret
inc
out
fdivs
insl
sarl
adc
in
sbbl
dec
xchg
idivl
mov
jle
adc
mov
add
push
mov
push
mov
arpl
mov
stos
loope
arpl
loopne
stc
fldcw
mov
jnp
lret
push
jmp
fwait
addr16
dec
es
stc
ja
mov
int3
sti
test
shll
stos
pop
test
add
inc
stos
dec
vpunpcklwd
cmp
sarl
add
inc
pop
pushf
adc
int
aad
and
adc
data16
test
ss
pushf
shrb
and
scas
inc
fwait
arpl
and
roll
fwait
pop
out
std
xorl
xor
sarb
pop
xor
adc
ja
jl
in
or
fnstcw
popf
paddw
lock
push
test
cmp
cld
insb
xchg
mov
mov
mov
out
ss
ficomps
xchg
xchg
insl
notb
xbegin
and
add
ret
sbb
scas
pop
lret
fbld
inc
xchg
inc
pop
cwtl
mov
js
push
mov
adcb
jl
jno
xchg
pop
call
into
inc
inc
cmp
rorl
pop
jno
dec
aad
rorb
jne
out
sbb
sub
push
add
dec
xchg
dec
push
sbb
mov
xlat
dec
int3
pop
pop
js
aas
cltd
mov
outsb
cmp
subb
mov
jge
mov
arpl
inc
std
aad
inc
mov
ret
pop
add
lods
push
xchg
dec
xor
aad
xor
lea
int
jp
add
sbb
sub
pop
les
push
mov
jmp
jmp
mulb
jle
cmc
push
fisttpll
mov
xchg
inc
cmc
push
xchg
add
dec
test
js
add
or
fcomip
inc
jns
xbegin
jnp
inc
jmp
xor
add
jge
mov
push
jno
mov
jb
sbb
lods
icebp
cmpsb
rcrb
xchg
insb
jle
test
ja
and
daa
and
or
add
and
clc
add
xor
test
adc
arpl
test
movl
xor
xlat
insb
iret
in
mov
jae
dec
push
mov
mov
pushf
stos
push
xchg
call
test
ret
push
fdivrs
mov
mov
push
dec
movsl
pop
stc
add
sub
pop
pop
sub
jl
mov
or
int3
insb
dec
scas
inc
out
test
xchg
push
xor
inc
jae
mov
shlb
iret
mov
jge
imul
xor
scas
iret
mov
xor
pusha
lock
shll
cmp
pusha
mov
sti
sbb
cwtl
leave
gs
divl
fbstp
sbbl
cmp
sub
movsb
aas
xchg
dec
cmpsl
dec
sbb
scas
fcomps
add
cmpl
jmp
rcll
pop
into
mov
cltd
pop
mov
xor
xor
dec
jb
cmp
or
je
inc
sbb
sbb
jnp
test
lds
push
mov
push
je
ficoms
sbb
and
cmp
fidivl
sti
out
and
outsl
fiadds
jmp
or
push
rol
dec
mov
insl
in
mov
in
mov
imul
sti
je
xchg
clc
pusha
lahf
fiadds
sbb
jmp
aam
mov
rorb
fucomi
cwtl
sbb
push
aaa
dec
divb
repz
push
lret
xchg
sbb
pop
mov
push
movl
push
aad
mov
mov
jnp
and
imul
or
std
sti
mov
lock
call
mov
enter
xor
mov
les
popf
push
pop
test
cmpsb
icebp
outsl
xor
shrl
xor
fstps
and
mov
dec
pop
ss
lahf
inc
adc
xor
je
fldcw
iret
add
dec
ficomps
out
enter
pop
or
and
sub
test
push
xlat
cwtl
imul
cmp
jne
mov
inc
dec
cmp
push
push
adc
push
dec
jbe
add
loop
mov
fwait
ljmp
je
cltd
pop
pop
push
flds
mov
xchg
jmp
test
fadds
xchg
arpl
popl
test
lods
sbb
lret
insl
icebp
stc
cmp
xlat
daa
pop
out
sbb
xchg
ja
imul
mov
or
je
ljmp
scas
adc
push
out
test
sub
mov
mov
sub
and
mov
pop
sbb
pop
mov
lock
xchg
push
gs
in
into
xchg
or
addr16
adc
out
popaw
cmp
icebp
outsl
or
in
xchg
push
loope
js
movsl
pop
mov
or
lahf
imul
xchg
cmp
push
and
push
inc
xchg
dec
add
mov
in
xchg
mov
test
daa
xchg
stos
push
sbb
insb
adc
cmp
push
push
in
add
mov
add
and
mov
cld
and
cmp
jmp
negl
jo
outsb
loop
rorb
sub
pop
lock
mov
sub
adc
lods
mov
pop
mov
xor
cmpsl
push
sub
in
jle
add
jnp
xor
icebp
pop
insl
push
data16
dec
mov
cli
fstpl
xor
call
nop
mov
imul
dec
cwtl
test
aad
aaa
xchg
fs
aas
pop
xor
jnp
and
sub
in
jbe
cld
sbb
mov
repz
xchg
movsb
mov
js
lret
pop
ret
test
shll
in
sub
sbb
adc
repnz
shrl
arpl
movl
jp
cmc
imul
mov
fildl
xchg
js
mov
dec
std
sbb
and
push
lret
sbb
push
adc
nop
imul
insb
mov
stc
aaa
int3
je
pop
or
std
or
loop
mov
mov
cmc
or
out
sbb
jb
lahf
cmp
aas
fildll
cmpsb
mov
and
dec
add
jo
int
ljmp
mov
ss
js,pt
or
or
push
push
aaa
in
fcomps
cmp
or
push
pop
pop
xchg
dec
ret
add
sbb
ss
mov
test
mov
or
mov
aam
cmpsb
xchg
roll
aam
in
pop
cmp
pop
sbb
sbb
leave
movsl
or
and
rolb
adc
dec
es
jmp
push
xchg
and
dec
inc
jle
sbb
std
mov
iret
testl
jne
pop
pop
stc
mov
fadd
shll
int3
mov
add
sub
inc
pop
push
fidivrl
lods
pop
cld
sub
push
mov
bound
insl
fsub
lods
mov
popa
cmp
inc
gs
xchg
call
cs
or
cmp
mov
jge
stos
pop
mov
jg
daa
push
push
dec
roll
mov
push
fsubl
push
lods
cmp
ljmp
add
mov
gs
jg
sub
cs
mov
lods
mov
in
pop
push
sub
aad
std
xchg
in
aad
fbstp
mov
or
pop
mov
les
xchg
xor
cli
ret
out
aas
mov
mov
repz
adc
xor
push
adc
leave
stc
adc
mov
push
fstpl
cmpsl
dec
and
dec
or
test
movsb
popf
pop
int3
push
mov
inc
pop
in
andl
inc
mov
jecxz
lcall
stos
repnz
paddsw
mov
ja
dec
outsb
arpl
aam
test
leave
jb
jns
cmp
inc
mov
int
cs
or
cmpb
int3
outsl
adc
pop
inc
dec
fisubl
rorb
aas
lret
xchg
fcmovne
divb
jg
sub
xchg
jecxz
pop
sbb
fbstp
data16
icebp
add
mov
out
es
or
sub
gs
or
jge
scas
xchg
xor
lret
mov
lret
push
inc
scas
sub
jecxz
inc
data16
enter
mov
sub
ljmp
nop
add
cltd
cwtl
sbb
inc
lret
cs
inc
fistpl
mov
mov
sub
in
dec
xor
xchg
push
xchg
movl
out
test
loop
jl
sar
and
stos
xchg
jnp
mov
jno
lret
stos
pop
sub
inc
adc
repnz
dec
lods
gs
cmpsl
das
push
pop
xchg
jg
pop
xchg
sbb
ja
imul
into
adc
sub
in
xor
movsl
cmp
stos
xchg
mov
popa
add
jp
rcll
repnz
adc
out
xor
aas
repnz
in
sub
out
pop
xchg
iret
xor
jae
repz
das
loope
stos
ficoml
movsb
jge
nop
lock
out
and
sub
pop
aas
lcall
and
or
inc
ficoml
idiv
iret
mov
sbb
or
imul
push
push
push
cmp
jp
add
mov
mov
or
outsl
add
push
fsubrp
andb
dec
icebp
psrld
mov
add
gs
jo
pop
icebp
repz
call
ret
dec
fildll
push
and
sbb
lock
adc
add
add
push
cmp
mov
sti
mov
aam
and
sbb
inc
and
sbb
mov
int3
xor
repnz
sahf
jle
das
cmpsl
stos
xor
test
adc
pop
es
ljmp
in
mov
lret
cmp
adcl
or
jle
inc
test
mov
adc
or
aam
xchg
jecxz
pop
dec
and
jae
mov
shll
pop
lods
xor
popf
mov
cmc
popf
addr16
ja
mov
push
test
cmp
ret
pcmpeqd
push
adc
icebp
xchg
push
loope
jle
flds
jbe
mov
adc
int
loope
jp
mov
xchg
pop
test
pop
jo
cli
sub
push
nop
pop
pop
jecxz
aas
fnstenv
rorb
ss
mov
rcr
sahf
dec
mov
push
ljmp
push
push
add
insl
xor
insl
mov
lock
push
fnstenv
mov
mov
add
daa
dec
and
adc
std
mov
inc
ljmp
mov
xchg
cmp
movsb
pop
iret
popf
push
call
xorl
jns
and
dec
enter
aas
sarb
vmovd
dec
loope
cmp
mov
dec
push
sti
jp
mov
and
ja
xor
rclb
lcall
cli
push
cltd
popa
cmpsb
lds
sbb
imul
sbb
xchg
inc
ret
mov
xor
mov
insb
or
fimuls
pop
mov
inc
push
push
into
pop
push
das
inc
cld
pop
lea
inc
sub
out
sti
rcll
outsl
or
add
leave
jle
lock
cmp
daa
lods
je
mov
jecxz
stos
xor
jb
pop
arpl
out
ret
into
test
ljmp
pop
fs
mov
and
lret
mov
loope
ja
stc
mov
lds
imul
jo
scas
or
cld
test
inc
fistpll
mov
add
icebp
or
add
jmp
cmp
pop
bound
cmpsb
mov
fcomp
mov
add
and
pusha
mov
jmp
mov
pop
adc
shrb
icebp
ror
xor
adc
pop
movsl
or
and
xchg
leave
aad
cltd
xor
pop
ljmp
insb
adc
and
js
leave
bound
inc
dec
or
mov
pop
scas
mov
cmp
call
sbb
sbb
cmp
mov
pop
ss
gs
mov
mov
xor
movsb
jnp
sub
xlat
jmp
push
and
es
sti
ret
push
inc
cmp
sub
ret
cmp
ss
arpl
fdivr
mov
inc
es
loopne
xor
cmp
push
int
push
sahf
pop
add
mov
jmp
dec
xchg
mov
jae
sub
fs
ret
mov
cmp
xlat
dec
lahf
lcall
imul
dec
sub
jbe
fisubs
sub
daa
sub
add
dec
or
out
sbb
pop
mov
mov
sub
pop
sbbl
loope
daa
addr16
cli
jnp
out
sbb
push
lea
mov
lods
jp
movsl
repz
mov
testb
scas
leave
ja
sbb
aas
and
sbb
pushf
cltd
mov
and
sub
aas
popa
stc
dec
insl
int3
cmp
jecxz
mov
in
vunpcklps
sub
inc
and
cmp
leave
lods
mov
mov
test
xlat
popl
jo
inc
cmp
or
cmpsb
mov
data16
fdivr
push
leave
fsts
xor
dec
mov
test
call
shrb
sti
adc
out
adc
cmp
inc
mov
cmp
cmpsb
mov
sbb
inc
pop
dec
push
lods
push
incl
mov
insb
insl
testl
cmp
lcall
fdivrp
dec
xchg
sbb
lds
jmp
mov
push
hlt
push
insl
jae
outsl
sahf
pop
ss
cmp
subb
dec
mov
hlt
pop
dec
mov
push
push
imul
fildll
lcall
int3
xlat
pop
enter
test
inc
addr16
into
sahf
mov
and
sbb
pop
pop
call
sub
push
mov
jge
dec
or
insl
pop
fwait
sub
out
xlat
xlat
lcall
mov
dec
jmp
scas
fstpl
je
xchg
mov
sbb
std
mov
sbb
pop
lea
ss
mov
pusha
dec
and
or
or
push
sbb
xchg
in
push
lcall
jle
lret
jae
aad
out
sbb
cmp
movsb
aas
ret
cmp
cmp
je
mov
or
test
mov
sub
insb
imul
les
movsl
xlat
in
es
or
fsubrl
inc
lret
leave
inc
cli
sbb
out
and
scas
mov
ja
mov
cli
jb
dec
roll
sub
fwait
int3
push
lea
andl
faddl
fcomip
scas
mov
inc
outsb
sbb
sub
mov
ret
xor
dec
xchg
mov
ja
rcll
shlb
add
imul
aas
mov
mov
mov
mov
dec
psubw
fcmovnbe
mov
push
in
je
loop
push
adc
dec
rcll
mov
das
sub
xchg
mov
ljmp
lods
dec
popa
aad
inc
out
and
shll
nop
imul
out
es
in
enter
xor
pop
out
lret
mov
stos
xlat
jns
pop
loopne
nop
dec
les
push
xchg
fisubs
daa
ret
popl
rclb
jns
loope
mov
icebp
jbe
lock
inc
mov
test
div
push
hlt
dec
sbb
push
jl
bt
icebp
sub
mov
pop
nop
lret
imul
addr16
fidivs
inc
sub
test
fdivr
pop
or
jb
in
cmp
sti
or
cmpsl
jecxz
pop
test
cltd
push
dec
stc
cli
sub
rcl
or
sbb
rcll
mov
fcomps
mov
daa
jno
sub
es
lret
push
lods
dec
or
push
iret
add
adc
and
addr16
sub
jb
sbb
std
pop
pop
push
inc
cwtl
dec
xchg
xchg
mov
jo
imul
add
sub
jno
mov
int
jb
jp
test
daa
jp
push
fs
aad
cmp
jns
jne
sub
push
ror
jp
cmc
jne
inc
add
push
sahf
nop
mov
push
inc
lahf
ds
loop
pop
testl
aas
data16
and
lcall
jns
int
pop
jnp
pop
ds
inc
xlat
arpl
mov
xchg
shrb
dec
dec
push
aaa
sub
sub
out
dec
outsl
notb
xor
xchg
mov
in
inc
test
xchg
int3
in
pop
inc
test
das
nop
jmp
gs
imul
push
add
push
fmull
mov
pushf
pusha
mov
aam
insl
nop
dec
or
jbe
mov
dec
les
dec
or
popf
mov
push
andl
das
outsl
mov
repnz
sbb
dec
mov
lea
xor
fisttpl
jbe
scas
pop
jle
add
mov
subl
scas
lock
mov
pop
rclb
mov
ss
xlat
movsb
push
adc
rcll
rcll
ror
sbb
sbb
imull
or
push
insl
mov
dec
cmpl
andb
push
pushf
insb
and
pop
stos
aas
test
lock
jecxz
adc
loop
rcrb
out
jnp,pn
jb
das
loopne
sub
or
jb
pushf
aas
fsubs
adc
sahf
cmp
icebp
fdiv
and
movb
inc
and
mov
push
jle
xor
mov
das
out
test
mov
mov
orb
js
jmp
clc
mov
cwtl
xchg
or
inc
fnstsw
jmp
imul
push
cli
jns
xor
out
divb
outsl
adc
imul
icebp
movsb
sti
cli
and
inc
hlt
and
mov
dec
repz
push
test
insb
push
ret
mov
jo
xor
insl
xchg
stc
lret
les
mov
jge
jmp
pushf
sar
mov
add
not
nop
mov
push
pop
or
add
sub
cmp
rorl
add
sub
fbld
fmuls
lcall
jle
int
jnp
fidivl
dec
sub
xor
jg
adc
adc
cmp
inc
shlb
xchg
sbb
and
js
sub
cmp
sub
imul
mov
scas
sti
dec
loope
xor
aam
cwtl
pop
sbb
xchg
aas
fsubrl
sbb
pop
adc
das
mov
mov
in
push
sbbb
popa
popa
cwtl
mov
fs
in
pop
fldenv
fisubrl
cmp
jmp
pop
xor
xor
mov
inc
pop
mov
adc
jmp
cltd
icebp
pop
mov
or
adcb
jne
jle
mov
mov
mov
out
pop
test
and
pop
pushf
cmc
cwtl
fcoml
rorb
xchg
out
aaa
or
int3
sahf
mov
rcrb
jb
jb
and
ret
int
jmp
outsb
push
jno
ja
idivb
push
mov
lods
subb
push
sbb
add
stc
push
push
add
or
push
xchg
pusha
movsb
int3
jae
in
mov
cmp
and
fsub
inc
sar
rorb
movsl
xor
xchg
sbb
pop
and
xlat
loop
popa
mov
xor
fisttps
mov
imul
push
popa
jmp
push
outsb
and
mov
insb
in
mov
add
in
mov
lahf
mov
push
popf
and
lcall
or
bound
mov
out
hlt
pop
mov
ja
sahf
mov
xlat
mov
mov
iret
sbb
repz
in
dec
or
xchg
mov
dec
shlb
aas
rcll
sub
aaa
stos
scas
leave
jp
dec
pop
or
nop
pop
pushf
mov
addr16
pusha
mov
mov
fwait
cmpsl
dec
inc
lret
scas
mov
dec
scas
addr16
add
push
test
out
add
mov
hlt
jnp
xchg
lods
ss
xchg
fstps
imul
cmp
xorl
xchg
dec
loope
sbb
adc
sbb
loopne
roll
fwait
xlat
jl
mov
and
in
movsl
cmp
sti
movsb
jl
ja
popa
mov
sarb
inc
cmpsb
std
inc
shrl
enter
cld
lods
xchg
imul
inc
adc
xchg
mov
jge
fdivrl
clc
fldt
sbb
jb
jp
mov
push
pop
loopne
popa
xor
push
adc
call
call
pusha
sahf
scas
aas
or
pop
fiaddl
xchg
xor
push
int3
add
fildl
pop
mov
xchg
mov
dec
test
test
jo
out
lret
adc
push
jl
mov
cmp
frstor
pusha
dec
ficoms
pop
pusha
outsb
jne
sub
sbb
xchg
int3
jge
push
mov
push
pop
mov
clc
movsb
cmpsl
jg
cld
roll
or
jg
cmpsb
jne
sti
cmp
mov
adcb
cltd
movsl
cmp
leave
push
lcall
cs
adc
pop
sub
aam
sarb
pop
test
mov
dec
mov
add
cltd
push
mov
cli
rcrl
sub
dec
pop
lds
rcl
lahf
adc
sti
scas
or
xor
pslld
bound
cmp
xchg
shl
sahf
adc
mov
sub
inc
js
push
or
leave
xchg
loop
mov
pop
mov
fdivrl
xor
pop
lret
dec
push
std
loope
mov
xor
shll
scas
jne
fwait
shl
jp
repz
pop
mov
push
cmp
cmp
jno
jbe
pop
pop
mov
fisubrl
and
clc
jle
je
pop
movb
and
xchg
das
inc
in
ja
aad
cmp
ss
xor
mov
aad
test
push
lods
dec
mov
or
inc
mov
dec
loopne
les
inc
dec
sbb
fbld
cs
dec
sahf
bound
ret
idivb
adcb
dec
cld
cmp
xor
push
sub
mov
fbld
adc
cltd
dec
mov
lahf
cmp
xlat
dec
repz
add
in
icebp
pop
dec
fisttps
fadds
and
mov
aam
shrb
addr16
xchg
sbb
push
insb
push
movsb
jge
mov
aaa
adc
testl
add
mov
mov
cmp
jb
into
mov
ret
das
push
scas
sarb
out
imul
adc
insb
imul
and
dec
xchg
push
repz
cmpsl
and
cmpsb
test
fs
xchg
sub
cmp
pop
or
or
loopne
jns
bound
mov
xlat
jmp
sub
ror
or
fsubl
aad
cmp
jbe
sti
xchg
mov
mov
jnp
rcrl
movsb
iret
iretw
outsb
jb
cmp
loope
xchg
pop
subl
inc
and
jmp
repnz
adc
out
scas
sbb
push
outsl
inc
lods
sbb
cld
and
les
push
inc
dec
fnsave
mov
out
push
or
jge
jmp
pop
lea
push
imul
hlt
aad
push
pop
idivl
idiv
sbb
insl
mov
les
in
in
mov
lds
xchg
dec
repz
push
adc
push
cli
and
adc
jae
mov
push
mov
lret
add
movsl
jg
loope
and
and
lret
movsl
or
push
push
pushf
adcl
adc
or
shlb
push
pop
push
test
lods
sar
mov
call
mov
in
mov
and
mov
rcr
rorb
xchg
adc
movsl
hlt
or
push
push
pop
pop
roll
iret
xchg
jmp
scas
idivb
xchg
adc
cmpsb
sbb
mov
sub
xchg
xor
movsb
out
fwait
arpl
rorb
lods
jge
push
add
push
pop
ja
sub
lock
int
sarl
pop
pop
jo
cltd
mov
jg
jge
add
push
movsl
and
mov
add
dec
push
jmp
fwait
fwait
mov
push
leave
dec
push
sbb
push
and
push
mov
lea
stos
xchg
or
cmp
insl
stc
fsubrs
repnz
in
mov
mov
mov
movb
mov
rcll
push
out
add
pop
pop
inc
dec
loopne
sbbl
jns
add
mov
sbb
inc
cmpsl
dec
aas
jnp
add
into
dec
push
inc
clc
cmpsb
movsl
xor
fwait
mov
sub
cmpb
jecxz
out
stos
xlat
jmp
jmp
jp
fildl
mov
sti
insl
mov
mov
jbe
das
rcpps
frndint
and
add
jmp
ljmp
xchg
jmp
inc
fbld
mov
inc
call
outsl
stos
sbbl
pop
test
sarl
mov
mov
and
jnp
adc
lret
jle
data16
push
testb
ror
xchg
cmc
repnz
pop
into
mov
mov
popa
mov
loop
add
mov
lret
adc
sahf
or
add
push
jae
es
rorl
popa
jns
and
jnp
adc
bound
add
inc
push
and
jno
sub
cmp
aaa
or
test
adc
lret
or
sahf
fcoms
xchg
les
icebp
xor
lods
cmp
xor
sti
shll
xorb
es
out
stos
out
out
in
pop
ret
outsb
outsl
add
mov
lock
add
xor
mov
jg
mov
sbb
iret
ds
xor
and
push
sbbl
jp
pop
xor
jg
sub
xor
adc
mov
sbb
and
push
jnp
cmpsb
test
aad
fisubl
ss
jmp
xor
or
pop
inc
movsl
jge
xchg
dec
xchg
sbb
pop
sub
pop
jo
push
mov
push
data16
jle
or
cmpsl
and
push
jecxz
cmp
inc
pushf
cltd
sub
jge
pop
fwait
xor
mov
add
mov
jle
adc
arpl
xor
push
daa
adc
jp
or
push
imul
jmp
mov
scas
loope
pop
fstpl
je
mov
js
movsb
xchg
inc
ret
jmp
int3
pop
pop
inc
data16
push
mov
ret
mov
mov
int
mov
jle
add
sub
add
inc
adcb
or
in
push
push
lock
inc
cmc
fs
mov
popa
pop
bound
jb
push
ret
call
xchg
dec
sbb
mov
mov
and
mov
and
out
pop
clc
out
push
adc
inc
mov
pop
insb
mov
and
imul
int
scas
cmovl
jne
cld
or
sub
jmp
fucom
orb
cmpsb
mov
inc
fldt
mov
push
rcrl
lea
movb
xor
pop
rolb
jecxz
or
and
push
insl
push
fisttpll
dec
xchg
cmpsb
xchg
fucomp
pop
or
sub
add
ret
and
sub
shl
into
or
sbb
add
mov
outsb
sub
repnz
cmpsl
pop
xchg
sbb
jnp
fcmovne
arpl
cmp
push
jne
loop
pop
cmp
inc
cmp
sbb
mov
loope
ss
mov
sbb
std
ret
test
imul
xchg
int
in
jmp
popa
sahf
movsl
xor
ss
and
mov
fmuls
lea
cmpsl
dec
scas
int3
push
rcrb
in
mov
xor
stc
inc
push
andb
jecxz
popa
ljmp
dec
add
clc
or
ja
jbe
mov
sub
lds
jae
outsl
adc
in
fadd
xor
pop
mov
idiv
push
push
loope
jae
imul
mov
lcall
adc
sahf
fadds
lods
cmp
mov
mov
jbe
ret
arpl
xor
cltd
stos
dec
lock
stos
xchg
jae
pop
xor
sbb
mulb
sub
enter
sahf
movsb
loop
push
push
bound
daa
cmp
pushf
xor
lock
cltd
push
cmp
inc
sub
shl
xchg
push
or
pop
and
and
ja
ret
mov
and
and
ja
iret
and
stos
inc
mov
lret
mov
aad
jo
out
and
xor
and
pop
lods
push
push
mov
add
lods
idivb
or
inc
lea
cmp
jg
ss
xchg
or
inc
jg
mov
test
sub
add
sti
lcall
xchg
cmp
add
push
and
fwait
xchg
lods
mov
fcoms
std
adc
daa
fucomip
mov
push
push
aad
xor
cld
xchg
or
imul
sub
leave
mov
bound
js
cmp
mov
xlat
push
stos
mov
mov
push
cmp
in
mov
adc
imul
call
mov
dec
pop
pop
inc
cmp
iret
dec
mov
fsubs
stos
sbb
and
fcoms
arpl
or
ret
mov
fsubrs
dec
jge
cmp
cmpsb
mov
jne
ljmp
les
inc
outsl
inc
dec
shrl
or
fnstsw
loop
jae
cmp
mov
std
movsb
xchg
mov
leave
jmp
pop
jae
aas
ret
repz
sub
les
add
out
aam
xor
cmp
imul
inc
cmp
pop
iret
cmp
aaa
out
mov
out
int3
add
lret
push
sar
mov
sub
push
xor
clc
mov
mov
and
sub
push
test
iret
call
pop
mov
cmp
jns
mov
mov
loop
xor
fistpll
addb
stos
dec
hlt
xorb
jnp
inc
mov
fisubl
fs
arpl
in
adc
iret
ljmp
and
jecxz
lods
and
add
fimuls
jecxz
popf
repz
ja
sub
mov
adc
mov
pop
loopne
jno
push
movsb
pop
out
mov
shrb
stos
popa
ds
ds
rcll
sub
jecxz
push
cmp
fcoml
and
or
stos
adc
loopne
hlt
in
incb
push
shrl
push
mov
shlb
cwtl
aam
fwait
dec
popf
and
mov
aaa
ss
shlb
xor
mov
push
movsl
insl
pop
sbb
sbb
pop
jge
sub
xchg
fs
inc
lcall
arpl
addr16
pushf
or
cmp
jns
push
and
xor
daa
cli
add
sub
imul
call
xchg
rcrb
xor
scas
sub
pusha
loope
outsb
push
dec
add
dec
std
mov
mov
or
sub
cli
mov
sbb
loope
cmpl
insb
bound
and
pop
sti
or
pop
in
repz
jnp
push
jne
fdivp
fistpl
loope
dec
inc
push
movsl
xchg
cltd
pushf
adc
dec
pop
sub
inc
or
mov
and
ror
adc
inc
push
adc
mov
xlat
out
das
and
adc
jo
aaa
pop
or
and
cmpb
xchg
mov
sbb
testl
or
xlat
push
or
popf
in
mov
xorb
ljmp
sub
mov
jb
xchg
adc
add
dec
data16
mov
int3
iret
cmp
jmp
inc
stos
sub
pop
shlb
or
inc
mov
mov
sub
mov
cmp
jmp
stos
mov
gs
insb
cmp
xor
fwait
fs
fcomip
loope
dec
xlat
xchg
sahf
mov
dec
into
daa
or
dec
call
arpl
es
cmc
outsl
dec
jbe
sub
test
imull
sahf
out
in
nop
sbbl
add
int
jae
mov
iret
nop
lds
xchg
iret
mov
test
and
mov
movsb
and
std
mov
jne
mov
sbb
data16
gs
jnp
sbb
and
push
mov
mov
add
data16
pop
pop
push
mov
in
scas
ret
in
push
or
ret
sbb
push
sbb
pop
out
movsl
pop
cltd
jae
xchg
xor
lods
sahf
idivl
mov
adc
sub
rcrl
aaa
sbb
lods
mov
sbb
test
add
sub
mov
mov
test
mov
insb
bound
push
dec
xor
es
xchg
sbb
adc
stos
mov
adc
jg
lret
cmp
lds
dec
fisubrs
push
mov
loop
notl
dec
mov
push
or
pop
sahf
ljmp
add
sub
lret
mov
in
mov
lods
fsubrp
lahf
xor
or
inc
xor
test
lods
push
jg
sbb
lahf
sarl
xchg
stos
xchg
inc
pop
pop
inc
insb
inc
pop
sar
sub
mov
xor
or
cmpb
leave
add
sub
mov
in
cmp
lods
ret
int
test
xor
mov
pusha
pop
popf
xchg
fwait
cli
imul
push
sub
fsubr
mov
and
mov
or
stos
pop
mov
mov
icebp
mov
mov
mov
pushf
adc
aam
lret
push
push
pop
outsl
inc
xchg
aam
clc
negl
ret
add
aaa
lock
cmpsb
xor
xchg
out
pushl
lret
sarb
inc
xor
mov
xchg
cmp
or
and
and
or
sub
mov
icebp
leave
add
push
addr16
out
mov
test
push
stc
lds
jecxz
in
mov
les
cltd
das
cmp
adc
mov
popf
imul
stos
cmp
mov
pusha
insb
adc
jecxz
shlb
mov
daa
cmp
or
sbb
pop
dec
inc
fwait
loope
xchg
inc
jecxz
add
mov
xor
mov
mov
and
stos
pop
and
call
jmp
adc
aas
cmp
fiaddl
imul
jp
push
stos
add
test
xor
mov
add
mov
push
movsl
mov
and
pop
pop
ja
cltd
jo
push
pop
sbb
sbb
adc
cmp
scas
mov
add
ds
add
out
mov
stos
arpl
push
pop
daa
test
sbb
inc
dec
mov
or
add
or
and
mov
xchg
outsl
out
jb
notb
push
push
cmp
clc
addl
shrl
insl
mov
and
jb
sbbl
das
xor
jmp
in
adc
shll
jg
arpl
test
loope
adc
inc
imul
rolb
ja
and
fs
gs
pop
xchg
push
cmp
push
fisttpl
std
fcomps
jbe
add
lahf
cmp
orl
mov
das
adc
test
in
add
mov
js
xor
mov
lcall
or
push
loope
push
sahf
xchg
fcompl
or
add
outsl
inc
inc
pop
xor
sub
js
mov
call
jecxz
jnp
sahf
inc
hlt
mov
lahf
mov
jle
ds
adc
repz
xchg
push
sub
aas
pusha
or
data16
jg
push
ljmp
mov
aas
rcll
cmp
jle
dec
push
incl
mov
xor
pop
out
js
cmp
or
mov
leave
pop
je
xor
push
dec
pop
test
adc
or
dec
ljmp
popa
or
xchg
push
adcl
rcll
pop
test
jb
sar
mov
add
pop
rclb
mov
out
movsl
push
stos
dec
lcall
pop
mov
sub
or
xor
jno
out
or
in
call
cmpsl
gs
ret
sub
jns
dec
and
or
xchg
adc
imulb
stc
idiv
sub
sbb
movsb
dec
aas
imul
in
xor
mov
sub
dec
mov
inc
adc
mov
cmp
xor
push
fs
inc
add
insl
cs
add
inc
data16
jecxz
add
push
and
push
jl
pop
push
pop
mov
mov
inc
or
xor
and
mov
aad
cmp
push
lahf
mov
je
sahf
mov
jle
inc
lret
out
mov
hlt
iret
push
shrb
cmpsb
iret
hlt
divb
and
xchg
xchg
hlt
aam
cmp
insl
mov
xchg
and
mov
test
icebp
pop
adc
icebp
jg
sarb
ja
std
add
addr16
jecxz
fs
gs
jno
adc
pop
cmp
dec
mov
shll
inc
xchg
xor
out
push
lcall
and
or
pop
int3
adc
movsl
pop
sbbb
fxch
cmc
xchg
mov
adc
hlt
push
popa
movsb
and
out
sbb
sub
pop
xlat
jp
out
push
add
inc
xchg
test
outsb
add
dec
jae
pop
jecxz
idivb
push
and
dec
aad
in
mov
out
mov
sub
or
aaa
push
sbb
dec
dec
mov
cmpb
or
xchg
mov
popa
and
jle
push
inc
in
pop
or
inc
xchg
mov
inc
fcmovbe
push
addr16
mov
cwtl
and
outsl
inc
adc
pusha
xor
mov
fwait
sbb
iret
jns
cmp
add
jle
enter
leave
mov
lret
movsl
pop
xor
mull
je
sahf
cmp
xchg
int3
lds
cmp
scas
dec
movsl
xchg
iret
orl
pop
imul
push
into
addr16
inc
cwtl
pop
jmp
xchg
mov
adc
mov
lea
in
gs
xchg
dec
mov
inc
xor
inc
insb
mov
int
pop
lods
jae
ret
repnz
imul
pushf
sbb
jae
adc
pop
xchg
inc
jle
cld
sbb
gs
sbb
mov
pop
enter
mov
or
pop
sub
imul
push
inc
popa
xor
jecxz
sbb
pop
push
add
pop
push
andb
xchg
stos
sub
ja
xor
into
data16
inc
inc
rorb
test
jle
call
bound
cltd
inc
in
sub
push
or
shll
fbld
bound
sbb
movsl
jecxz
jnp
into
cld
in
popf
insl
cmpsl
scas
mov
xchg
dec
push
test
dec
mov
mov
push
sbb
add
fdivl
add
jmp
aaa
paddb
jp
jp
inc
nop
xchg
add
cmp
sbb
or
mov
aam
lret
mov
mov
jg
xor
pop
jns
mov
xchg
int
int
add
aad
push
jmp
pop
or
cli
xor
mov
ljmp
sbb
mov
movsb
imul
jnp
or
js
xor
mov
inc
rcrl
punpckhwd
leave
sub
adc
enter
in
mov
mov
aaa
addl
imul
insl
sbb
xor
lret
mov
jl
add
stos
mov
push
push
add
fisubrl
push
iret
lret
and
xchg
rcl
int3
shll
ret
xor
fists
add
shlb
sbb
test
sub
mov
out
push
data16
mov
out
jp
push
adc
test
pop
add
inc
jnp
inc
inc
sbbb
xor
test
sbb
jge
mov
aas
ja
or
mov
fiaddl
lahf
jp
mov
and
mov
jo,pt
xor
clc
lahf
push
fsubrs
mov
or
icebp
push
inc
push
jmp
repz
pop
testl
mov
pushf
sarl
mov
test
push
xlat
add
pop
repz
push
dec
sbb
mov
jne
mov
adc
cli
push
dec
pop
imul
mov
lds
or
add
fimuls
cmp
mov
aam
xchg
in
test
xchg
aas
daa
rcl
xor
dec
fbld
fucom
jg
fistps
call
in
inc
push
jmp
xchg
sahf
data16
jecxz
pop
jo
int
and
iret
nop
les
fcoml
sub
lcall
outsl
xchg
mov
adc
sub
push
jecxz
xor
repnz
mov
cmpl
in
lcall
sbb
add
sbb
test
lods
cmc
andb
in
ret
or
pop
sbb
xchg
mov
jecxz
xor
lret
loopne
inc
test
and
cwtl
arpl
pop
lods
pop
adc
std
loop
leave
xchg
push
ffreep
push
cmp
mov
sbb
mov
sbb
pushf
pop
ljmp
xor
or
pop
pop
lds
in
jnp
lods
insl
data16
push
cli
nop
fxch
mov
inc
mov
dec
jg
sub
xchg
sti
andb
cmpl
xchg
mov
in
clc
fwait
cmp
and
ret
je
or
sub
notb
iret
jle
je
or
push
mov
push
in
imul
pusha
xor
divl
xorl
les
mov
push
sub
cld
popa
insb
ret
sbb
ljmp
popf
flds
or
cs
cmpsb
xchg
ret
test
popa
xor
mov
xchg
clc
test
push
rcr
sbb
pop
aam
sbb
add
stc
roll
inc
lock
lea
pop
cmp
fcompl
mov
scas
int3
mov
mov
pop
cmp
icebp
inc
jl
inc
cmp
loope
sub
mov
push
pop
jbe
in
push
inc
xor
int
and
movsl
cmp
push
cmp
and
push
movsb
cmp
popa
sub
bound
cmc
push
sbb
pushl
in
test
andl
adc
shlb
in
mov
and
push
sbb
pop
xchg
sbb
in
mov
fcoms
add
sbb
cmp
insb
cmp
pushf
dec
or
jo
dec
in
clc
stc
lret
in
dec
mov
lods
hlt
and
sbb
jnp
cltd
movsl
aad
mov
cmp
xor
fisubl
scas
xor
jecxz
and
sarb
lahf
xchg
pusha
pop
ds
fidivs
xorl
cltd
mov
mov
sub
shrb
insb
xor
clc
imul
ret
mov
cmpsl
mov
ds
lods
pop
xor
lahf
test
out
lds
rclb
push
ret
pop
and
mov
addr16
sub
movsl
mov
pop
sub
add
sub
mul
faddl
gs
lods
adc
or
pop
push
insb
sbb
dec
mov
sbb
adc
xchg
adc
dec
les
stos
sti
loope
pop
xor
scas
int
fistpl
mov
mov
dec
pop
and
push
sbb
in
lahf
scas
mov
xchg
daa
hlt
rorl
loop
mov
daa
insb
outsl
push
lods
rorl
int3
imulb
push
sti
popf
cs
dec
fidivs
test
pop
pushf
lock
xor
mov
add
out
and
cmp
adc
xchg
mov
adc
push
dec
pop
and
pop
pop
sub
fimull
repz
leave
mov
cmp
inc
iret
jbe
or
pop
std
inc
sbb
mov
sbb
insb
rolb
mov
in
jp
add
movsl
ds
xor
mov
cmp
or
loopne
sar
and
lods
orl
mov
aaa
cmp
mov
stos
push
mov
es
ret
aam
inc
enter
stos
or
enter
pop
jge
shr
push
pusha
mov
ret
das
dec
in
loopne
mov
cli
out
fadd
sub
adc
pop
or
dec
shlb
sbb
leave
scas
loope
jne
sbb
setge
lods
loope
jb
ljmp
test
fwait
push
push
or
les
fcomps
dec
mov
push
ja
test
add
mov
dec
arpl
inc
js
out
gs
push
dec
mov
dec
adc
sub
mov
imul
inc
dec
pop
out
push
adc
hlt
fucomp
adc
or
inc
push
xorb
jnp
sub
jecxz
cmc
inc
jge
cli
in
or
mov
mov
mov
pop
popa
jbe
jns
inc
test
inc
cmp
mov
sar
mov
cwtl
pop
decb
addl
dec
repz
jmp
mov
adc
cmp
stc
insl
pop
nop
stos
jl
data16
aam
sub
loope
sbb
inc
push
inc
dec
clc
sti
in
mov
pcmpgtw
jbe
push
xchg
inc
aaa
jp
movsb
into
int
fmull
jl
xchg
cmp
push
enter
fnstsw
lahf
push
addl
push
push
dec
mov
inc
push
lea
mov
fadds
test
mov
pop
scas
loop
xchg
xchg
in
lock
scas
mov
mov
mov
testl
push
pusha
fucom
in
repnz
sahf
sub
jae
cmpsl
or
shll
cmpsl
int3
cmpsb
subl
xor
ja
daa
jge
sbb
mov
ret
sub
xlat
lea
call
push
pop
mov
outsl
pushf
and
pop
in
xchg
push
rcll
cmc
mov
scas
lods
cmc
jg
lret
dec
jb
gs
pop
dec
pusha
xor
mov
jl
cmpsb
popl
jbe
dec
call
sbb
jg
lcall
dec
testb
pop
mov
lcall
sub
sbb
xchg
push
mov
mov
pop
lcall
ja
ljmp
clc
ss
sti
cmpb
in
out
cmpsl
gs
and
into
ret
inc
cmpsb
jns
cmpl
movsb
push
dec
xor
jecxz
cmp
and
xor
pushf
and
shll
fwait
xor
add
imul
pop
mov
and
mov
out
mov
cli
cmc
in
rolb
push
jnp
repz
into
jns
das
lret
stos
lahf
mov
jle
mov
and
xchg
aam
jae
lods
xor
pop
push
sarl
shrb
jb
icebp
jnp
inc
call
or
mov
pop
or
push
rclb
push
dec
fldlg2
pop
ljmp
push
test
mov
add
mov
data16
cmc
bnd
pop
pushf
int
xchg
push
jecxz
sub
xor
mov
test
adc
rcrb
mov
fistpl
mov
add
ljmp
mov
out
mov
push
aas
imul
mov
mov
inc
jge
enter
sbb
sbb
cs
jmp
pushf
mov
mov
mov
cmpsl
or
fs
mov
push
add
dec
iret
rcrb
lret
adc
test
pop
sarl
xlat
pop
xlat
cwtl
ja
mov
mov
cmp
das
push
lods
das
loopne
push
jne
mov
in
xchg
push
jl
jl
movsb
pop
push
jae
icebp
jbe
mov
push
add
dec
adc
cwtl
mov
scas
lret
mov
pop
jo
xchg
xlat
insb
pushf
jmp
scas
int
jae
pop
pushf
mov
jbe
push
gs
adc
bound
mov
adc
sub
or
jg
rolb
xchg
js
cmpsb
sbb
mov
or
mov
fucomp
fwait
mov
sbb
dec
xor
les
out
incb
sahf
cwtl
idivl
insl
push
push
pop
sub
sub
stos
lock
in
add
lock
cwtl
push
gs
dec
or
jp
jne
fcoms
test
pop
sub
sub
push
add
push
mov
sbb
pop
cli
rcll
fistpll
std
or
inc
xor
adc
int
lods
mov
insb
shrb
scas
dec
dec
cmp
push
outsb
cld
inc
gs
push
sbb
mov
inc
in
loop
jo
mov
pop
pop
push
mov
dec
fwait
stos
das
dec
mov
mov
pop
pushf
sbb
add
stc
cmp
cltd
imul
fimuls
lret
push
add
adcl
idivb
pop
mov
lahf
int3
mov
xchg
xorl
enter
dec
adc
sub
dec
or
adc
mov
stc
pop
stos
mov
cld
fwait
inc
inc
and
mov
mov
sbb
iret
sbb
jno
xchg
jae
cmpsl
mov
adc
out
daa
mov
xor
mov
push
dec
imul
and
xchg
nop
popa
push
mov
in
adc
or
adc
push
movsl
popa
mov
mov
and
xchg
outsb
adc
mov
shll
sbb
daa
daa
dec
mull
inc
js
arpl
sbb
sub
test
test
xchg
lea
pusha
inc
sbb
dec
ds
fnstcw
adc
inc
jo
lret
inc
in
jmp
and
cmp
dec
xchg
lock
mov
cmc
adc
push
sahf
movsb
ja
in
js
call
test
adc
into
pop
xchg
push
dec
pop
jmp
and
cmp
and
and
push
xor
pop
adc
mov
push
cmpsb
sub
cmpsb
out
sahf
scas
jg
sbb
mov
daa
je
movsb
into
push
pop
and
aad
dec
dec
ret
jb
pop
nop
lret
subl
xchg
cmpsb
xchg
ret
call
sbb
pusha
bswap
push
sub
in
bound
je
inc
push
inc
shll
fimull
int3
mov
cli
pop
jns
scas
popa
add
adc
insl
push
mov
leave
jge
sub
push
mov
xor
push
cmp
xor
inc
jp
cld
sbb
imul
lods
sbb
push
aaa
jb
mov
push
data16
es
add
push
adc
adc
sub
xchg
sbb
adc
aas
out
cmp
outsl
jmp
rcr
insb
xchg
mov
fidivrl
gs
xor
out
cmc
inc
or
add
cmpl
mov
sub
adc
xchg
pusha
scas
push
adcl
cmpb
pop
mov
loop
mov
aaa
test
mov
div
jl
adc
gs
mov
pop
dec
sbb
fiadds
or
jge,pt
and
inc
aam
or
dec
adc
mov
push
jg
cmp
test
shlb
jg
pop
sub
or
test
cmp
lahf
fwait
and
repz
test
loop
mov
inc
inc
push
sub
mov
add
inc
sbb
push
test
or
sub
enter
aam
dec
ficompl
shl
adc
mov
imul
out
xor
fstl
into
imul
or
xor
pushf
mov
pop
notb
sub
stos
cltd
fmull
cmpsl
incb
adc
or
roll
sbb
data16
xchg
mov
adc
or
xor
popa
daa
sbb
daa
mov
ret
push
lods
jne
daa
lods
loopne
pop
or
xor
and
mov
pop
inc
scas
bound
pop
sbb
pop
push
lret
dec
xor
add
test
sbb
leave
fsubrp
dec
shll
cmp
jnp
in
scas
cmp
sub
gs
popa
adc
daa
rorb
jo
mov
dec
sbb
loopne
lds
xor
jns
or
add
movsl
fs
cmp
mov
js
xchg
es
dec
jo
jne
xor
shlb
xchg
fs
mov
mov
icebp
insl
mov
leave
xor
pop
lcall
arpl
xor
mov
xchg
mov
inc
mov
outsl
pop
sarb
sbb
adc
aaa
leave
stc
popf
cmc
pushf
sti
mov
cli
mov
aam
arpl
or
dec
in
dec
sub
ds
int3
mov
xchg
or
dec
rep
stc
sbb
cmp
and
jmp
test
add
pop
xchg
arpl
shrb
or
cld
aad
cmp
ret
out
pop
inc
daa
out
adc
mov
push
jl
jne
xchg
pusha
cmp
xchg
lcall
xchg
push
xor
fcmovu
lret
xor
cltd
dec
aas
dec
test
cmp
js
rol
js
ljmp
outsl
sbb
cmp
ret
add
mov
add
mov
mov
mov
test
push
test
pop
mov
xor
and
add
jbe
mov
int3
and
ljmp
mov
pusha
je
fsts
xchg
iret
out
sbb
push
sub
adc
ret
jb
or
sbb
xor
fwait
outsl
add
lcall
addb
dec
xchg
dec
faddp
xchg
in
lods
mov
adc
lods
push
dec
lahf
je
cmpsl
aad
push
jae
push
jg
out
cmp
jp
out
imul
test
mov
push
xchg
sub
and
dec
cmp
dec
leave
ficoml
or
in
cmp
lahf
test
fsubr
aas
push
les
mov
cli
adc
outsb
sbb
fildll
repz
cwtl
test
mov
lods
sbb
mov
imulb
xor
cmp
sbb
daa
jmp
xchg
std
sub
push
jl
push
sub
add
fs
mov
cmp
jo
mov
mov
adc
sbb
pop
xchg
lods
push
scas
out
jmp
ret
mov
push
orl
push
aaa
pushf
cmpsl
outsl
loopne
rcrl
jb
mov
test
jge
push
repz
mov
inc
int
dec
or
fstpl
pop
rorl
out
rclb
sbb
jle
jle
daa
adc
or
pop
push
test
xor
cmp
adc
xchg
dec
jb
xchg
and
cli
add
push
mov
scas
pop
push
rol
cmp
es
in
movsl
cmp
orl
in
sbb
pop
cli
mov
push
orl
nop
jo
xchg
jno
mov
addr16
dec
or
push
inc
sbbb
jno
mov
mov
mov
pop
push
mov
out
loop
push
mov
lock
jnp
mov
adc
test
xchg
ret
push
orl
mov
mov
and
outsb
aas
scas
sti
adc
ficomps
dec
adc
push
es
jmp
out
bound
xchg
dec
and
xchg
jo
cmp
and
pop
lea
test
adc
and
imul
sub
sbb
testb
daa
das
shr
xchg
movsb
mov
mov
imul
push
mov
ficomps
int3
or
arpl
dec
sub
xchg
push
cmc
cmp
or
or
or
jns
inc
fcomi
pop
adc
jno
cli
loopne
rorb
xchg
cmp
mov
adc
es
pop
push
js
test
sub
mov
jg
mov
repz
daa
iret
xchg
sub
adc
sahf
jo
aas
enter
sbbl
jns
cmpsl
cmpsb
dec
pop
mov
sbb
mov
cwtl
fs
and
mov
imul
cs
and
dec
inc
push
jbe
das
add
jge
sub
insb
push
pop
sbbl
lret
mov
sub
add
pop
loopne
add
out
sbb
jp
sar
nop
ds
in
push
jmp
push
xchg
cmp
gs
out
pop
aad
nop
into
pushf
repnz
xor
test
insl
inc
or
iret
inc
out
inc
outsl
mov
push
mov
movsl
xchg
pop
insb
sbb
icebp
data16
dec
mov
jo
nop
out
or
add
xor
mov
mov
lock
test
mov
pop
test
repz
add
sbb
mov
les
xor
ja
fs
sti
pop
and
pop
rolb
aad
fcompl
inc
cwtl
enter
or
movsb
aas
mov
shl
xlat
add
ds
mov
xor
adc
jmp
sbb
dec
cli
pop
xor
inc
xchg
cmp
inc
inc
rorl
sarl
rol
repz
mov
or
jne
cltd
insb
test
out
cwtl
shl
shr
push
aaa
fisubs
fistpl
or
mov
mov
lock
dec
jge
sbb
push
xchg
mov
sub
add
mov
cmp
icebp
mov
xor
mov
cmc
mov
es
mov
insl
sub
cmp
in
clc
lcall
lcall
test
inc
jno
xchg
mov
mov
mov
jns
cmpl
cli
mov
pop
data16
mov
push
arpl
nop
test
mov
inc
adc
pushf
in
ret
mov
or
sbb
nop
and
arpl
scas
aad
xor
xchg
int3
repnz
cmc
or
and
js
pop
js
cli
mov
or
jne
js
dec
test
or
dec
xlat
sub
mov
imul
mov
xchg
fmuls
xchg
pop
int3
add
out
stos
pop
ficompl
cs
out
fidivrs
call
xchg
cwtl
cmpsl
aad
and
das
in
xchg
xchg
push
pop
lgs
inc
cli
ret
in
or
cmp
repnz
lea
lock
pusha
jg
fdivs
enter
pop
mov
pop
cmp
adc
mov
pop
stos
inc
jle
jle
xchg
icebp
adc
push
mov
pushf
inc
xchg
pop
shrl
scas
pop
sarl
lcall
sub
clc
mov
scas
test
enter
and
mov
jl
outsl
dec
push
xor
insb
test
inc
test
mov
inc
les
test
jge
cwtl
loop
das
cwtl
mov
sahf
push
push
into
mov
repnz
scas
imul
sbb
mov
sub
jmp
jmp
or
xchg
out
stos
push
rol
popf
repnz
or
fisttps
scas
sub
shrb
aad
mov
pop
cmpb
sub
add
fs
jnp
inc
stc
inc
sbb
mov
mov
xor
mov
and
hlt
add
and
sti
mov
inc
adc
mov
cltd
jnp
cs
out
inc
into
mov
cmp
xchg
adc
and
test
push
test
loopne
cwtl
push
mov
std
mov
out
popf
jecxz
push
mov
dec
outsb
jne
js
xor
add
int
dec
lahf
test
dec
shll
testl
mov
jle
popf
cmp
xlat
dec
mov
roll
fdivrp
hlt
pop
pop
push
out
push
xorl
xchg
mov
push
pop
scas
je
fisubrs
gs
rcr
dec
push
inc
push
in
icebp
scas
xor
pop
imul
orb
and
cmpsl
outsl
xchg
sub
es
mov
idivb
movsl
dec
mov
shl
and
repz
repnz
fwait
out
pop
out
mov
or
repz
mov
shlb
cmpsl
xor
mov
ja
mov
lock
mov
rol
sub
push
in
mov
inc
sub
das
push
scas
cmp
mov
mov
dec
loop
jp
sbb
dec
aaa
outsl
dec
ja
cmpl
dec
xchg
mov
mov
addb
movl
in
adc
sub
fisttpll
aam
mov
or
xchg
outsl
push
add
jae
in
mov
push
inc
inc
mov
xchg
xor
inc
dec
out
sbb
jle
pop
and
loop
dec
mov
mov
aaa
shrb
shlb
mov
jmp
fwait
jns
mov
rclb
dec
mov
loop
es
ss
mov
ret
ret
popa
jae
daa
and
jbe
repz
mov
fisttps
test
icebp
sub
push
aam
lret
push
mov
insb
test
jns
mov
pop
mov
inc
pop
sbb
push
in
sbbb
mov
xchg
lods
leave
mov
rcrl
mov
filds
cmp
sahf
pop
jle
out
or
push
pop
sub
jp
adc
mov
sbb
mov
lods
int3
ret
jbe
or
and
outsb
jg
mov
pop
lcall
push
sub
arpl
imul
outsl
test
xlat
movsl
fcmovbe
and
jl
inc
cs
cli
rep
mov
shrb
mov
cmp
jns
mov
pushf
sbb
pop
movsb
popa
push
and
pushf
ja
lcall
mov
mov
addb
rcll
mov
das
push
js
dec
sub
sbbl
test
xor
es
imul
mov
dec
pop
sub
mov
push
mov
push
js
add
cmp
jmp
xchg
pop
test
std
fwait
xor
xor
push
movsb
xchg
and
popa
jae
test
rcr
repz
negb
pusha
in
loope
adcb
les
insb
add
or
inc
aad
mov
push
gs
push
mov
xor
movsl
xchg
xor
add
jne
in
pop
rolb
jnp
xchg
movsl
sbb
mov
mov
scas
or
sahf
aaa
pop
pop
test
adc
popa
cli
xchg
inc
popf
int3
cltd
pop
and
in
adc
stc
cmp
test
imul
jl
and
pusha
pop
cmpsl
scas
dec
int
ds
jae
xchg
inc
cmpsl
fucomi
fwait
shr
dec
fiadds
cli
ja
popa
xor
cmp
incb
sbb
int3
hlt
popf
ret
out
cld
ret
stos
shrl
imul
sti
sbb
testl
fistpl
mov
adc
sub
mov
idivb
in
mov
mov
lods
push
add
push
push
pop
cs
andl
adc
filds
and
mov
adcb
popf
insl
and
mov
mov
mov
sub
inc
pop
hlt
mov
sub
cmp
call
jo
sub
mov
cmp
outsb
mov
push
lcall
sbb
sub
cwtl
jp
fstl
xchg
hlt
jl
push
dec
push
mov
xor
negb
sub
cmp
pusha
cmc
mov
jecxz
push
dec
enter
jb
fsubs
clc
or
xchg
cmp
pushf
scas
orb
xchg
int3
ret
xor
aad
test
shlb
sbb
pop
xlat
shrb
xchg
mov
and
sub
outsl
xor
lcall
add
push
subl
out
lods
mov
push
jns
push
mov
fsts
push
imul
and
cmp
pop
jb
xchg
inc
sub
clc
mov
xor
loopne
push
sub
std
pop
sub
xorl
xlat
and
filds
fst
dec
inc
inc
pop
or
lea
xchg
pop
lods
xor
hlt
nop
adc
pop
stos
xchg
pop
or
scas
mov
xor
cmp
jl
gs
xor
outsl
mov
rolb
clc
call
in
hlt
aaa
in
add
push
or
arpl
pop
je
adc
in
pop
in
add
sbb
mov
adc
pop
lea
cmp
loop
out
stc
int
xor
cltd
idivb
push
sbb
xor
jle
jo
xchg
push
mov
pop
enter
cmp
and
scas
jg
sbb
xor
lods
jbe
daa
mov
ss
sbb
sbb
lcall
pop
clc
out
das
jno
xchg
hlt
inc
cltd
sub
push
add
xor
loope
jmp
scas
xchg
fcmove
leave
mov
push
pop
into
movsl
rcl
cmp
mov
sbb
fimull
add
fidivrl
pusha
leave
push
or
jne
repz
inc
pop
xchg
mov
test
adc
xor
xchg
mov
test
lea
adc
lds
and
xchg
mov
mov
pop
js
cmp
cld
xchg
inc
mov
les
dec
pop
push
cmp
ret
jecxz
push
jo
dec
out
test
scas
xlat
test
or
pop
push
cmp
out
dec
sbb
cmp
les
cmpb
mov
lret
add
jbe
mov
sbb
jle
repnz
cs
mov
ss
pop
xorl
pop
ja
fbstp
cli
dec
subl
jle
int
or
cli
inc
out
movsl
and
mov
push
xchg
xchg
int
outsl
or
jmp
sub
pop
gs
adcb
xchg
inc
nop
cmc
mov
sbbl
scas
cmpsb
xor
cli
mov
jnp
pop
pop
add
pop
mov
jnp
pusha
pop
dec
or
xor
sbb
aad
xor
dec
mov
mov
jp
sbb
inc
arpl
ljmp
cmp
mov
jge
dec
pushf
std
sti
add
sub
xchg
dec
inc
push
js
adc
and
adc
inc
mov
sub
dec
xchg
cmc
divb
jg
cmp
sub
test
mov
repz
popa
int
les
int
les
bound
rolb
mov
pushf
inc
loopne
cmp
mov
into
jb
pushl
xchg
push
ds
xor
aaa
dec
es
imul
jl
in
push
ret
xchg
bound
and
adc
in
add
stc
pusha
shrb
mov
add
jne
or
sub
dec
addr16
cmpl
sub
shrl
inc
mov
jmp
lods
sbb
cmp
aam
jbe
lret
scas
arpl
ljmp
int
cmpsb
xor
jmp
pop
cmp
or
and
sub
jge
pop
pop
xor
in
adc
xor
or
dec
sbb
pusha
pop
clc
mov
push
push
nop
loop
cwtl
jb
sbb
xor
mov
jo
jecxz
lds
xor
adc
lret
imul
pop
cmp
pop
lock
push
jmp
clc
sub
fsubrs
data16
add
cltd
xchg
mov
jbe
sar
je
pop
mov
xorb
jmp
jb
popa
stos
lret
jae
pop
pop
dec
push
inc
aad
push
out
repnz
mov
mov
xor
cld
scas
popf
mov
js
cld
mov
insl
cmp
pop
cli
mov
jecxz
dec
call
std
pop
inc
mov
xor
dec
inc
lret
sbb
mov
cwtl
xchg
addl
jbe
repz
xor
insb
sub
jae
xlat
inc
rolb
pop
mov
mov
cmp
js
fxch
out
sub
in
fldcw
insl
dec
popa
ljmp
sub
adc
jno
jb
and
cmpsl
je
cmp
loopne
insl
inc
mov
loope
lock
or
xchg
cmpsl
outsb
dec
adc
dec
push
stc
inc
jg
aad
out
pusha
cmp
jp
sbb
lock
lret
popa
mov
sub
sti
inc
cmp
fwait
mov
pushf
inc
fmull
stos
fsubp
dec
xchg
cs
xchg
mov
js
push
push
ja
or
push
dec
dec
clc
jae
or
loope
lahf
push
gs
cmpl
rcrb
insl
mov
or
add
xlat
decb
jbe
jbe
or
cld
repnz
mov
enter
imul
inc
rorb
sub
rcrl
pop
or
int
sbb
mov
adc
inc
aas
call
out
sbb
dec
jg
mov
outsl
les
hlt
subl
or
and
dec
icebp
mov
xchg
mov
cld
sahf
aaa
js
adc
xchg
jnp
jbe
cld
popf
stc
cli
mov
or
ffreep
cmp
fisubl
in
or
inc
cmpsl
dec
mov
xchg
sub
pop
fcmovb
popa
or
dec
add
add
int3
mov
shl
popa
mov
sub
pop
insl
push
sbb
jp
loop
popa
jg
adc
inc
push
cli
xchg
dec
imul
scas
test
jl
out
pop
out
dec
lods
lods
clc
call
inc
out
repz
jmp
bnd
xchg
hlt
mov
call
jp
sub
mov
add
push
not
loope
leave
ret
lret
sub
movsl
pop
add
jmp
push
addr16
cmp
aas
xchg
sbb
std
pushf
dec
dec
lret
std
mov
adc
xchg
inc
test
pop
ss
into
lahf
or
pop
loope
movsl
sub
lret
cmp
mov
push
cmp
pop
je
push
lret
cmp
add
ja
scas
lret
stos
cmpsb
dec
das
vpmacssww
xorl
mov
xchg
shlb
push
pusha
sbb
lcall
imul
ss
aas
stc
push
sarb
xor
ret
in
jo
popf
mov
pop
xchg
or
dec
mov
rorl
pop
test
repz
mov
ret
clc
loope
cmp
pop
mov
arpl
mov
lret
sbb
loopne
icebp
push
sbbb
mov
clc
jae
fcomps
imul
fbld
mov
ret
adc
hlt
adc
neg
pop
add
cmp
cmp
push
out
xchg
fidivrs
cmp
push
loopne
mov
scas
sbb
adc
pop
mov
mov
adc
mov
adc
loopne
adc
sub
icebp
jge
jne
inc
ja
outsl
sbb
sbb
xchg
push
in
mov
add
sub
jecxz
push
cmp
iret
imul
sahf
call
mov
iret
mov
orl
rcrb
ja
lods
mov
lds
or
mov
adcl
pmaxsw
ret
jb
fistpl
xor
js
rcrl
inc
les
jnp
cmpsb
inc
mov
test
adcl
movsb
push
push
xchg
loope
test
nop
lds
push
sbb
sub
out
push
lods
jbe
xchg
add
cmc
and
inc
xchg
sub
fcmovb
add
gs
mov
push
xchg
pushf
lea
adc
mov
inc
ret
clc
jns
lret
add
mov
pop
xorl
test
and
cs
shlb
pop
sub
mov
enter
in
das
insl
dec
xor
sub
xchg
push
mov
pop
sub
addr16
xchg
push
jnp
int3
insl
cltd
pushf
or
or
xchg
jno
sbb
hlt
pop
dec
in
jecxz
mov
test
fidivs
rol
out
lret
xor
and
ljmp
rcrl
add
mov
out
push
ret
das
pop
sbb
cwtl
js
sbb
cmp
lahf
xchg
jne
scas
je
inc
mov
jbe
scas
and
mov
and
ret
ds
add
xor
stc
mov
jg
sti
xchg
pop
int
in
pop
into
rcr
dec
fwait
mov
xchg
or
pop
insb
fisubrl
lret
xor
sbb
jbe
je
jno
lods
xchg
cmpsl
push
leave
mov
dec
or
jecxz
inc
xchg
orl
mov
outsb
push
sbb
ljmp
sbb
movsb
sub
cli
xchg
jb
add
mov
cmpsl
cwtl
push
or
cli
inc
inc
lahf
xchg
mov
idivb
shrb
dec
test
or
mov
inc
sti
xor
jl
test
push
dec
sub
arpl
mov
repz
popf
push
mov
loopne
jo
or
cmc
mov
ja
mov
daa
lods
mov
jbe
fdivs
jmp
adc
or
sub
hlt
or
push
aad
fldcw
nop
fisubl
push
inc
pop
cli
cmp
notb
push
fcomps
flds
sbb
pop
test
outsb
out
in
push
rcll
in
xchg
jne
hlt
js
leave
packssdw
pop
push
ficomps
addr16
cs
mov
mov
fdivl
mov
sbb
or
pop
lods
lret
jae
add
cwtl
scas
pop
pop
fwait
call
cmp
pop
pop
call
in
stos
pop
lds
test
dec
xchg
out
cmpsb
fnstsw
adc
or
cmp
or
pop
fcoml
jg
sahf
and
fldt
mull
pop
mov
pop
jo
shll
into
fwait
push
loope
mov
cwtl
sbb
sbb
adc
sahf
push
mov
lea
ret
jl
mov
mov
rorl
cwtl
sbb
mov
testl
dec
sub
or
push
mov
push
je
inc
outsl
lret
mov
push
pop
sub
mov
cmp
es
pop
enter
pop
out
ljmp
mov
outsl
push
jne
inc
loopne
adc
repz
fmuls
mov
stos
xchg
lret
lods
sar
shll
jae
and
nop
add
or
les
fisttpll
rcll
lret
test
xchg
add
xor
mov
xchg
and
dec
pop
sbb
jmp
xor
mov
ja
clc
pop
vpsrld
mov
ret
sti
adc
insl
or
sub
into
fstl
and
push
loop
xor
imul
or
loopne
les
adc
sub
mov
movsl
cld
xchg
xor
pop
cmc
or
dec
loope
jb
pushf
pushf
loop
or
subl
inc
xchg
dec
gs
cmc
jo
dec
jno
inc
pop
sbb
repz
xor
in
jp
out
lret
lods
repnz
mov
sbb
mov
pop
adc
andl
sub
add
cltd
adcb
cmp
mov
orl
jge
lahf
inc
jmp
outsl
and
xor
repnz
les
outsl
push
int3
in
pushf
push
daa
pop
jo
jmp
fidivs
push
or
ja
dec
cli
push
ret
dec
sar
gs
adc
rcrl
pop
xchg
call
add
cmp
iret
and
mov
test
add
xchg
pop
xlat
mov
and
push
fdivl
add
dec
cs
insb
test
push
adc
cmpsb
ljmp
adc
xchg
or
leave
push
cmpsl
mov
and
pop
xchg
je
jns
inc
mov
dec
pop
xchg
mov
insl
popa
xchg
add
or
mov
push
adc
clc
mov
iretw
das
aad
adc
lods
push
ficoms
repz
into
outsl
jae
xchg
mov
out
out
cmp
imul
inc
push
mov
test
out
subb
xchg
mov
or
mov
dec
fildl
sub
popw
adc
ds
mull
sti
mov
adc
lret
scas
in
arpl
out
sbb
sub
pop
pop
outsb
fcmovnb
movsb
add
adc
sbb
or
nop
add
in
fstl
pop
mov
and
fsubr
push
adcl
push
and
aam
xor
pop
out
lock
jno
xor
add
into
jb
std
xchg
fscale
shl
push
rclb
xchg
es
xor
mov
adcl
es
pop
pop
shl
out
or
adc
sbb
movsl
add
mov
mov
test
add
dec
inc
xchg
clc
sbb
negl
mov
push
mov
insl
cmpsl
xchg
push
mov
shl
pop
lahf
add
pop
jmp
pop
cmp
aas
ss
adc
lock
mov
ficomps
aaa
mov
push
mov
or
test
cmpsl
arpl
lods
jmp
mov
movsb
add
lock
dec
jns
push
cmpsb
sti
push
in
insl
or
outsb
sbb
cltd
adc
push
aam
xor
xor
mov
xchg
stos
hlt
and
lods
mov
or
loope
pop
mov
inc
xor
sub
inc
mov
scas
je
popa
int
ss
add
jno
dec
rolb
cmp
loop
ds
pop
fisubrl
enter
add
inc
add
shll
ret
sbb
xor
xor
movsb
insb
mov
shr
sub
scas
pop
sti
jo
sub
fwait
mov
sti
jbe
fcmovb
xlat
imul
xchg
pop
jle
xor
mov
aad
orl
out
rcrb
sub
sub
jbe
loop
mov
sti
insb
mov
push
pop
das
push
and
dec
cmpsb
fs
mov
add
sub
dec
scas
lods
ljmp
movl
xchg
out
adc
ds
cltd
or
mov
push
insl
pop
sbb
push
lock
cmp
sub
idivb
jle
sub
loope
out
sbb
stos
in
jae
mov
or
pop
incb
mov
lcall
add
in
movl
push
lds
sub
mov
scas
loop
inc
popf
fisttpll
push
sbb
arpl
shll
mov
dec
or
repz
push
mov
pusha
sub
mov
push
sbb
mov
pop
arpl
mov
les
push
in
movsb
push
dec
std
xor
dec
adc
push
xor
xor
mov
cvttps2pi
cmp
and
jo
mov
cltd
int3
inc
mov
pop
test
in
or
fs
inc
jl
ja
cmp
adc
cwtl
inc
shll
loopw
jne
xchg
pop
adcb
call
loope
dec
inc
fstps
add
jp
sub
stc
pushf
shlb
fiaddl
js
sub
bound
scas
sarl
push
push
lock
ficoml
dec
xorl
jb
shll
daa
out
ret
fdivs
gs
pop
xchg
lds
ds
orps
addr16
aas
cmp
xor
mov
adc
xchg
sbb
scas
andb
push
dec
cmpsl
cs
and
jmp
xor
mov
mov
jp
daa
shlb
xor
cmp
mov
dec
add
lea
popw
jnp
shr
call
imul
xor
jb
idivl
cmc
imul
mov
dec
andl
daa
shlb
ss
popf
clc
lret
pop
jge
jbe
aam
addb
pop
cmpsl
pop
aad
das
orl
mov
subb
loopne
adc
adc
mov
out
xchg
lods
or
pop
dec
and
les
cmpsb
gs
add
decb
pop
dec
sub
push
fisttpll
mov
dec
xor
and
cmp
test
sarb
into
push
push
cmpsb
pop
dec
inc
mov
fcoml
ret
in
xchg
adc
imul
mov
adc
dec
cli
mov
icebp
inc
and
cmc
mov
paddsw
xchg
mov
or
mov
outsl
sbb
push
das
test
shll
out
aaa
icebp
sbb
mov
xchg
mov
and
cmp
cmp
push
mov
and
inc
xor
mov
es
sarl
pop
cmpb
dec
cmp
push
mov
lock
sbb
and
loopne
pop
mov
repz
adc
adc
push
mov
arpl
inc
push
inc
out
cld
jbe
cld
shlb
jae
mov
jno
data16
mov
push
xlat
fs
outsl
subl
push
pop
add
cmp
xor
jp
push
add
arpl
sbb
test
lcall
cmp
or
jae
aam
mov
dec
pusha
inc
sub
subl
outsb
clc
loope
lds
jns
dec
or
fsubrl
fwait
xchg
jno
fwait
outsb
push
push
ficoms
pusha
mov
and
mov
push
test
roll
imul
cmp
inc
je
push
inc
clc
push
dec
loopne
shlb
cmp
jne
out
push
lds
mov
sub
adcl
cmpsb
sub
popf
lock
std
add
push
cmp
insb
out
shrb
mov
mov
ds
inc
sub
outsl
scas
daa
add
push
mov
ss
add
out
add
lahf
es
shrb
hlt
xchg
push
push
inc
mov
sbb
shll
jg
sbb
xlat
cmpsl
loope
xchg
iret
mov
enter
sbb
mov
push
mov
mov
xlat
jge
shrb
add
pop
loopne
rclb
dec
adc
hlt
popf
add
or
sbb
daa
ss
adc
xchg
lret
mov
popa
adc
sti
test
add
icebp
fldl
int3
fmull
pushf
xchg
push
cmp
lods
inc
test
sti
mov
mov
jbe
adc
imul
mov
pop
xor
into
inc
aad
ljmp
xor
iret
pusha
mov
push
aaa
mov
cwtl
ja
or
pop
cmp
fsubrl
pop
cmpsw
jp
push
fiaddl
xchg
rcll
pop
push
cld
clc
sbb
ljmp
adc
jg
stos
repnz
sti
jo
mov
mov
fs
insb
lods
mov
xchg
mov
pop
xor
loopne
and
push
jl
push
jle
hlt
in
add
inc
outsb
jne
aas
mov
sub
mov
fidivrl
pop
std
xor
dec
adc
data16
cmpsl
adc
push
push
cmpsb
in
xchg
xor
push
mov
lcall
outsl
push
pop
loopne
xor
mov
sub
fmull
or
aam
aas
mov
cmc
cmpsl
fs
rorl
fisttpl
and
jbe
xchg
aaa
int3
jno
out
cli
je
mov
lahf
daa
mov
sub
xchg
int3
fwait
ja
mov
push
neg
pop
cmp
jnp
push
add
call
xor
xlat
inc
mov
icebp
xchg
mov
push
movsl
aas
jmp
dec
mov
adc
sub
or
rclb
out
das
sub
test
mov
sub
pop
mov
or
push
xor
push
inc
cmp
fcmovu
sub
pop
mov
inc
leave
jo
pop
icebp
xor
adc
mov
push
lods
cmp
mov
jns
popl
xor
dec
imul
or
jecxz
ret
and
cltd
xchg
mov
inc
dec
mov
cmp
inc
sbb
fldl
das
outsb
sbbb
xchg
mov
loope
mov
push
lds
adc
movsl
cmp
pop
inc
xchg
ret
cmpsb
shll
jbe
and
cmc
and
mov
nop
icebp
cmp
add
popa
dec
outsl
push
rcrl
outsb
pop
sub
ret
outsb
out
fwait
pandn
mov
push
mov
icebp
cld
and
into
add
add
test
inc
mov
push
fwait
jae
ljmp
mov
jbe
mov
mov
cmp
pop
int
fwait
sub
pop
mov
sbb
pop
push
xchg
outsb
xor
rcrl
dec
lcall
fs
adcb
xor
addr16
add
pop
inc
xor
in
lods
shl
enter
fwait
mov
or
jl
and
arpl
or
imul
sbb
push
jg
lahf
mov
leave
mov
sbb
jge
add
data16
in
orl
cmp
jnp
shrl
inc
adc
out
cmpsl
push
vucomiss
icebp
cwtl
roll
add
sbb
lahf
pop
test
lock
scas
lods
and
adc
cmp
inc
jnp
sbb
fwait
mov
mov
xchg
int
dec
sahf
cmp
mov
jmp
inc
out
int3
test
push
jbe
xor
ret
cmp
push
jne
cmc
cmp
mov
xor
mov
mov
fld
and
aam
fimull
sbb
sub
stos
mov
xchg
add
push
or
or
push
inc
lcall
ljmp
imul
loopne
push
jbe
ss
les
push
lret
xchg
mov
fisubrl
hlt
push
xchg
jl
lcall
xchg
jl
es
lds
push
sub
mov
int3
push
mov
fsubr
push
pop
andl
jmp
insl
je
push
or
cmc
jb
cmp
mov
in
subb
xchg
lods
pop
adc
mov
push
aas
xor
loopne
outsb
pop
les
inc
daa
inc
sarl
and
mov
mov
test
fneni(8087
loope
pop
pop
daa
xchg
pop
das
inc
adc
mov
xor
iret
pop
sarl
repnz
jle
push
push
arpl
adc
mov
lods
mov
jl
das
mov
adc
test
outsl
or
mov
inc
and
jp
mov
aad
xchg
xchg
aam
xorb
cwtl
xor
mov
mov
movsl
jecxz
pop
loop
mov
js
imul
stc
std
ja
and
nop
rcll
fs
and
cld
in
aas
negl
in
or
ret
fimuls
movsl
and
cwtl
push
jo
pop
push
test
and
out
repz
loop
lret
sub
push
inc
inc
fsubl
mov
sahf
mov
insb
test
loope
dec
hlt
outsl
inc
sbb
imul
out
sub
aad
les
add
lds
test
inc
in
pop
mov
cmp
jo
push
sub
daa
mov
jno
rcr
mov
call
mov
stc
cwtl
je
jl
fs
mov
ret
add
inc
jl
pop
push
pop
and
das
mov
scas
stos
xor
add
dec
jne
xchg
pushl
xor
mov
hlt
loop
insb
jp
bound
push
testl
mov
push
adc
imulb
sbb
fsts
iret
adc
out
inc
jmp
fucomi
cmpb
cmpsl
adc
in
push
out
dec
push
jg
pop
daa
or
adc
ret
cmp
data16
adc
fistpl
jl
sbb
cld
adc
sti
mov
sbb
out
popa
mov
pop
out
fdivrs
mov
sub
add
ret
mov
jnp
mov
xor
pusha
push
es
and
adc
dec
mov
cmpsb
sub
in
js
pop
mov
cmpsl
or
pop
and
dec
lcall
sbb
push
push
dec
sbb
inc
mov
mov
fwait
addr16
pop
mov
adc
sub
mov
mov
cmp
dec
push
mov
es
jmp
jle
xchg
sbb
ret
ds
and
fisubl
pop
fwait
sub
lahf
hlt
in
icebp
sub
adc
adcl
sbb
aaa
cmpsb
leave
loop
int
push
js
xor
add
pop
sbb
ljmp
xchg
mov
jge
sub
xor
pop
cmp
int3
cmpsl
or
push
jae
imul
mov
cwtl
push
add
sbb
testb
dec
pop
mov
int3
and
push
xchg
dec
mov
aam
or
sub
aas
in
fcomps
lcall
imul
cmp
mov
pop
out
and
xchg
push
cmp
pusha
and
push
addr16
pusha
leave
xlat
mov
pop
xchg
jmp
arpl
lods
out
or
imul
xor
loopne
mov
push
fnsave
fisubs
sti
aam
or
mov
jo
lock
xchg
fmuls
inc
sti
xor
push
jno
inc
jns
push
fiadds
or
fsubrs
mov
push
daa
dec
mov
lea
repz
inc
jp
sbb
clc
sub
sahf
jl
cmp
ds
xor
insb
dec
inc
cmpsl
mov
xchg
push
pushf
stc
loope
leave
fyl2xp1
and
out
lods
lea
add
lret
sub
call
mov
jmp
sbb
xor
pop
pop
cmp
daa
xlat
cmc
repz
or
fisubrl
cmp
fwait
jle
push
dec
sub
push
in
adc
jg
jg
mov
popa
aad
push
dec
nop
or
and
jmp
orl
jg
adc
sub
mov
push
in
jmp
rorl
cmpsb
ja
push
or
imulb
in
fidivrl
mov
notl
jge
repnz
stos
and
aas
and
xor
xchg
adc
sbb
mov
xchg
xlat
mov
jl
cmc
out
mov
scas
icebp
shr
jmp
xchg
sub
xchg
imul
jle
std
add
gs
pop
fwait
leave
xchg
cmc
cld
cmp
cmc
dec
xchg
inc
rcrl
xchg
or
pop
in
mov
cld
sub
dec
stc
dec
push
jmp
insl
fstl
push
sahf
imul
sbb
out
sub
and
addr16
cmp
test
add
pop
xchg
hlt
int
adc
iret
and
cmp
mov
jecxz
inc
icebp
cmc
lret
cmp
mov
push
xlat
pop
fldl
repnz
add
cmp
jne
rol
das
mov
lahf
sti
aad
fwait
icebp
adc
adc
mov
jecxz
mov
jae
mov
fldt
dec
jg
push
bound
mov
or
inc
in
jae
mov
inc
pop
icebp
call
pop
mov
stos
and
mov
pushl
xor
xchg
test
xchg
pop
and
mov
imul
lea
dec
inc
loopne
cltd
xor
cmpsb
inc
je
xor
xchg
inc
out
dec
stos
fdivrl
orl
sbb
mov
cmp
mov
cmpsb
sti
cmpsl
sti
lcall
adc
sbb
dec
push
xchg
push
cli
dec
outsb
or
xchg
lret
mov
mov
dec
sbb
dec
mov
dec
mov
push
divb
dec
cmc
xor
jb
cmpsb
add
daa
cmp
mov
cmp
pop
stos
jno
and
dec
lret
cmp
outsb
mov
ss
rcr
sbb
fisttpll
push
add
rolb
jl
mov
into
addl
inc
sbb
adc
inc
mov
mov
stos
sub
mov
push
aaa
std
loop
inc
jecxz
pop
in
call
mov
xchg
fcmovnb
xor
scas
out
into
cmp
cli
and
xchg
add
sub
adc
lret
xor
outsl
cmp
xchg
sbb
jns
sub
imul
add
xchg
pop
push
outsb
mov
cmp
in
fidivs
mov
loop
lahf
cli
sub
and
jecxz
xor
adc
jecxz
add
pop
loop
decb
dec
and
mov
jae
or
dec
jae
push
mov
scas
fistpl
fdivrs
mov
add
sbb
dec
adc
pop
xchg
or
jmp
jmp
xchg
add
sbb
xor
outsl
sub
clc
enter
jne
or
iret
arpl
imul
leave
out
aaa
addr16
jecxz
rcll
pop
push
repnz
cmp
js
mov
mov
js
adc
inc
jo
jbe
push
cltd
ss
push
fisttpl
mov
enter
stc
mov
nop
inc
pop
xor
xor
addr16
mov
push
inc
xchg
stos
loopne
mov
mov
mov
sbb
mov
addb
cmpsl
add
push
fcomip
or
lods
sub
mov
cli
rcll
cmp
pop
pop
jcxz
xchg
xchg
mov
adc
outsl
sbb
dec
es
imul
mov
inc
lcall
test
cld
push
shll
cwtl
pop
fildll
sbbb
and
jge
and
and
lret
xchg
iret
ds
xchg
or
pop
jae
aaa
adc
xlat
jl
sbbb
and
mov
mov
mov
push
rcrb
or
aas
lret
pop
shlb
mov
dec
aas
scas
mov
add
adc
push
or
out
push
out
inc
sub
lret
imul
fsubr
jmp
inc
inc
ds
loopne
icebp
adc
sbb
add
mov
push
add
sub
outsl
mov
xchg
push
jg
jl
dec
ja
jmp
mov
add
test
pop
pop
cmpsb
sub
lea
lds
sbb
test
lret
sbb
jno
mov
fistps
enter
andl
jnp
vmptrld
cmp
sub
jb
inc
movsb
cmp
mov
mov
rorb
ljmp
inc
lcall
cmc
mov
xchg
arpl
mov
adc
js,pt
pop
subl
ja
leave
xchg
add
subl
or
or
std
and
or
fildll
or
imul
mov
shrl
fsts
repnz
lcall
xchg
dec
pop
sbb
imul
mov
or
je
jge
lods
xchg
xor
mov
out
aaa
push
aas
jne
dec
pushf
or
xchg
push
sub
sub
add
or
int3
jb
cmp
in
mov
mov
sbbb
push
xchg
adc
xchg
jns
shlb
out
sahf
cs
mov
pusha
aaa
ds
cmpl
pop
ljmp
mov
popa
jb
clc
push
pop
cltd
mov
xchg
sti
xchg
je
xor
lds
ret
loop
lahf
pop
ljmp
jecxz
addb
mov
mov
jl
out
call
mov
dec
dec
out
call
adc
cmpsl
addr16
mov
mov
out
push
adc
loop
loop
loope
neg
and
repnz
add
repnz
addr16
mov
jae
cs
aaa
and
fidivrl
mov
sbbb
stos
inc
mov
sahf
jns
inc
xchg
scas
lahf
xchg
pop
inc
lea
sub
gs
popa
pop
pop
push
stos
sbb
sbb
packssdw
sti
inc
mov
mov
rclb
jl
fs
jge
lret
add
jle
jge
clc
jae
xor
mov
enter
enter
mov
mull
jmp
fildll
flds
dec
xor
pop
inc
jecxz
subl
addb
fidivl
xchg
mov
ljmp
push
leave
fisttps
xor
out
adc
dec
arpl
xor
sbb
fstps
push
mov
lods
pushf
inc
jp
enter
xchg
push
idivl
push
push
adc
xor
insl
mov
or
ret
jle
sarb
jp
mov
dec
sub
xchg
mov
arpl
pop
shrb
xor
cmpsl
jmp
adc
add
test
jle
add
fisubrl
sahf
dec
xchg
and
sub
sub
sbb
push
fdivl
cld
popa
jo
ss
cmp
sti
and
jle
jo
incb
data16
in
sbb
sub
jnp
and
mov
mov
mov
push
shll
push
mov
adc
push
ds
push
sti
push
adc
ss
add
cmp
iret
in
stos
adc
dec
cmp
add
aas
adc
stos
gs
out
leave
jmp
xor
adc
into
aaa
push
rol
xchg
addr16
dec
mov
or
in
test
aaa
jb
mov
test
xchg
and
mov
das
jg
pop
or
popa
movsb
cwtl
lds
xor
in
push
pop
adc
dec
mov
jno
mov
jl
mov
adcb
rcrl
imulb
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
jmp
jmp
fstpl
mov
shlb
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
sub
or
std
fnstcw
inc
push
movsb
rorb
icebp
or
dec
push
not
xchg
push
mov
mov
or
lds
stc
sahf
jl
sub
mov
xchg
and
movsb
fsub
push
stos
mov
and
mov
xor
inc
xlat
sbb
and
xor
adc
data16
xor
mov
stos
lods
sarl
lcall
fsub
push
stos
mov
ret
out
cmp
pop
je
icebp
aam
xlat
xchg
test
jnp
and
test
jae
imul
stos
mov
lret
and
ss
mov
xchg
fstpl
jbe
lea
mov
fstpl
mov
rcr
jo
sub
test
jl
cmp
mov
rcrb
mov
rcr
sahf
jl
sub
mov
rcr
into
jo
sub
mov
rcr
sahf
cld
sub
mov
ror
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
shlb
frstor
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
test
ss
mov
rcr
jl
sub
cmp
hlt
xchg
out
lret
sub
mov
xor
in
cmovl
mov
shrb
ss
mov
rcr
sahf
jl
sub
mov
sarb
ss
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
mov
rcr
sahf
jl
sub
into
dec
xor
jl
add
das
push
lea
cmp
repz
fisubl
test
das
imul
jno
mov
les
loop
inc
push
test
jp
jmp
push
jne
pop
xchg
test
test
iret
aas
lock
jo
fdivrl
repz
xlat
imul
shrb
movsl
cld
cmp
jbe
mov
cmpsb
mov
adc
pop
out
push
ss
adc
in
mov
mov
and
push
mov
jb
mov
jbe
mov
stos
icebp
or
mov
dec
ret
jecxz
mov
and
sbb
lods
mov
pusha
sbb
rorl
cmp
stos
in
cmp
out
jb
shrb
dec
mov
and
cmp
push
fisttps
push
or
in
pop
inc
inc
or
adc
aad
mov
inc
mov
iret
je
push
xorb
test
popf
jg
in
dec
fisttpll
push
jb
daa
ss
in
gs
lods
ja
inc
enter
popa
and
insl
lock
and
test
popf
xchg
pop
pop
enter
int3
ja
nop
push
push
sbbl
xchg
xor
mov
aas
and
or
pusha
std
in
out
stos
aas
mov
cmc
lret
aaa
and
dec
xorl
into
dec
shrb
mov
inc
movsb
data16
std
gs
fnstenv
fistps
sub
lods
pop
ja
or
mov
lods
dec
jmp
daa
lret
js
stos
hlt
inc
movsl
sahf
sub
repnz
inc
pop
sub
mov
add
push
rorl
xor
jae
and
lcall
out
adc
into
inc
pop
mov
nop
js
cmp
leave
xchg
and
mov
int3
push
sbb
mov
xchg
out
dec
repz
sbb
xor
mov
xchg
pop
test
cmp
or
mov
ja
call
fildl
dec
jge
rorb
jae
fdivrl
cmc
cmp
lods
in
sahf
data16
rorb
scas
enter
cs
sbb
dec
loop
or
sbb
fwait
sarb
imul
push
jmp
subl
leave
inc
mov
mov
dec
mov
js
fwait
sbb
fnsave
xchg
dec
and
push
movsb
sti
mov
inc
and
jmp
das
xchg
dec
push
sub
mov
movsb
mov
dec
cmp
loope
into
cltd
xchg
ror
rcr
inc
pop
mov
cwtl
imul
mov
popa
and
ds
popa
push
loop
jge
pop
or
cmp
enter
add
sbb
or
mov
mov
gs
fdivp
pushf
or
nop
mov
outsb
stos
push
jecxz
in
testl
mov
push
push
cltd
pop
jbe
mov
adc
popa
fs
rcll
lret
fadds
sub
add
rcll
mov
icebp
into
cmp
add
push
gs
xor
mov
sub
mov
ss
xor
inc
xor
test
sub
lret
inc
pop
sarb
ljmp
mov
outsb
pop
stc
out
or
test
and
pop
aad
pop
lods
sub
std
xchg
popl
push
scas
and
mov
mov
and
setae
push
loopne
stos
xchg
fidivl
dec
lds
mov
xchg
test
pop
lret
xchg
out
inc
dec
arpl
xchg
lds
lock
scas
sub
sbb
sub
cmp
mov
mov
dec
lret
inc
sbb
inc
scas
out
mov
rolb
adc
lret
repnz
mov
dec
mov
loope
mov
push
sbb
adc
push
jle
cs
addr16
mov
adc
mov
lret
push
cmp
aaa
mov
shr
andl
inc
dec
out
mov
xor
push
shll
in
mov
fbld
movsl
icebp
das
ja
pop
mov
popf
xchg
cs
or
and
rol
inc
in
add
and
fwait
cmpsl
jae
into
adc
or
push
and
dec
sbbb
int
out
mov
sub
shlb
imull
ja
js
xor
int
or
pop
fs
aas
cltd
lods
cltd
mov
sbb
fildll
idivb
aam
icebp
ret
jecxz
sbb
nop
fnstsw
and
popa
or
fidivrs
mov
aaa
stos
out
das
push
cmp
leave
xor
pop
pop
cmc
xorl
mov
sbb
loope
and
test
push
and
daa
lods
xchg
iret
inc
xchg
mov
iret
orb
rolb
lds
out
mov
lock
mov
scas
sub
dec
mov
jae
cmp
and
testl
ss
addb
test
jb
mov
mov
sahf
jp
repnz
push
cmpsb
xor
insl
mov
call
icebp
add
fcmovu
jne
data16
pop
data16
lea
mov
dec
jae
push
jnp
insl
repnz
mov
test
pop
clc
jmp
adc
loopne
hlt
sub
mov
std
fdivrs
ficompl
sub
jmp
xlat
push
cs
lds
in
push
add
cli
pop
lret
sarl
test
fidivl
cmp
stos
out
andl
mov
or
jge
sbb
add
repz
or
std
adc
xchg
not
std
lcall
loopne
mov
jmp
or
in
add
xor
or
xor
xlat
and
sub
fsts
sub
mov
cmpsb
push
jl
pop
aad
mov
jmp
push
pop
push
rolb
mov
push
inc
in
and
js
adc
icebp
sbb
sub
repz
fldcw
push
mov
ljmp
lcall
or
mov
lcall
dec
dec
push
mov
ret
cmc
add
mov
in
dec
aad
mov
into
leave
je
popa
icebp
cmc
lods
sbb
mov
lods
jns
lret
pop
xor
mov
loop
imul
and
pop
inc
jl
jo
push
lods
iret
sbb
je
jg
jo
mov
fwait
cmp
jl
rcr
lds
iret
mov
enter
push
push
jno
mov
lods
stos
aam
bound
pop
mov
popf
hlt
sub
movsb
add
sbb
inc
xorl
fsubr
add
cmp
or
test
scas
idivb
ret
mov
add
xor
fimull
xor
repnz
dec
push
in
push
sbb
mov
cmpsb
outsl
add
mov
outsl
into
daa
daa
pop
fwait
js
push
inc
movsb
push
add
dec
int
inc
cs
inc
xor
cmp
je
mov
outsb
fcomip
popf
shrb
xchg
lods
or
enter
push
sbb
xor
out
jns
lcall
mov
inc
pop
lds
loope
cmc
add
sbb
in
mov
add
mov
add
pushf
mov
cmpsb
cmp
mov
popf
shlb
stc
jg
xchg
daa
imul
adc
jge
inc
dec
repz
push
cmpsb
lods
cmpl
sub
sti
dec
sub
and
mov
imulb
xchg
in
fmull
inc
fdivrs
fisttps
inc
ja
lcall
push
nop
push
dec
roll
out
sbb
int3
xor
sbb
cmc
inc
adc
mov
rorl
lods
pushf
idivl
insb
xchg
push
scas
ljmp
add
call
adc
scas
daa
mov
in
xor
iret
xchg
int
daa
jno
jecxz
sub
dec
push
enter
ret
cmp
lea
lahf
jne
cmpsl
jno
jmp
mov
lods
lret
jmp
dec
and
and
loope
mov
cmpsl
mov
sbb
lcall
pop
mov
js
into
adc
ss
aaa
push
loop
dec
pop
lahf
dec
and
or
lret
and
aad
popa
pop
dec
jle
aam
sub
out
shlb
ds
ror
inc
mov
clc
shlb
pushf
mov
rcll
or
loopne
sarb
mov
in
inc
iret
mov
mov
pop
adc
pop
push
cmpsl
movsl
mov
mov
roll
xchg
sti
iret
xchg
pop
je
loopne
packsswb
or
cmpsb
push
addb
pop
in
sahf
out
mov
push
sub
cwtl
push
cmp
aad
mov
jecxz
pop
mov
push
inc
insl
push
pop
scas
iret
movsb
xchg
data16
jbe
sbb
pusha
sub
mov
mov
jg
jno
mov
jp
aaa
dec
sub
test
pop
sbb
jl
mov
push
popa
jge
rorl
nop
xchg
fstl
or
and
mov
loope
or
xor
insl
mov
loope
shr
ret
lret
lret
jmp
push
push
mov
fsubs
negb
lea
mov
mov
add
sbb
xlat
jle
js
pop
scas
mov
cmc
xchg
ret
in
pop
adc
icebp
add
jb
pop
pushf
test
aaa
outsb
mov
dec
xor
lret
das
pop
adc
mov
jge
xor
inc
xor
or
cwtl
push
gs
int
sbb
push
jns
cmp
jmp
sub
fs
xchg
divb
cli
ret
xor
dec
mov
clc
call
mov
or
lcall
lock
inc
repnz
pop
xchg
sub
leave
iret
notl
pushf
pushf
xchg
xchg
jg
dec
jmp
push
test
and
pushf
sub
and
xchg
pop
inc
pusha
xor
jns
adc
icebp
adc
dec
addr16
cmc
adc
scas
inc
fldcw
ret
lods
xchg
ret
cs
adc
mov
dec
int
adc
jg
adc
xchg
xchg
jns
push
and
cmp
mov
mov
sub
pop
dec
inc
sub
popf
cli
or
adcb
imul
popa
pushf
or
ljmp
popa
test
out
fcoml
pop
jl
lcall
push
rolb
and
cwtl
repz
les
sbb
xchg
rol
cmp
in
push
arpl
push
nop
cmpsb
sahf
xchg
scas
pop
push
movsl
subb
fwait
mov
jns
fnstcw
pop
cmpl
rclb
and
push
sub
cmp
ficoms
cld
xor
test
test
cwtl
out
in
inc
fstpl
adc
xchg
sbb
add
or
and
fcomps
add
and
pop
xchg
int3
pop
daa
jp
test
je
sbb
fsts
fistl
or
popf
inc
xor
sti
mov
aam
dec
mov
inc
hlt
in
inc
rcr
mov
scas
pop
or
xlat
or
imul
in
adc
nop
scas
sbbl
out
mov
cmp
adc
add
push
jae
or
call
xchg
aad
cli
loop
aad
outsb
cmp
sub
cmpsl
addr16
cmpsl
jmp
mov
aas
sub
xor
fistl
jns
das
repnz
push
daa
cwtl
xor
imul
decl
xlat
test
mov
cmpsb
out
test
inc
jecxz
mov
movsb
imul
inc
orl
in
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
