hlt
push
jmp
add
sub
pushf
cmp
mov
jp
and
ljmp
iret
popa
sub
dec
scas
stos
jb
cli
test
ljmp
ret
lods
xor
jle
dec
lock
imul
xor
test
movsb
movsl
int
push
xchg
lcall
cmp
std
ret
cmp
clc
sbb
mov
stos
sahf
les
mov
or
jbe
push
ds
idivb
cmp
cli
push
sbb
mov
and
shll
insl
stos
out
nop
cmp
xchg
mov
imul
das
fsubrl
lock
in
lds
jb
cmpsb
stc
fnstcw
push
lret
pushf
add
cmpb
fisubrs
int
or
push
ss
inc
out
pushf
lods
fwait
out
jnp
adcb
adc
and
std
and
jle
xchg
pop
pop
lret
add
inc
adc
out
pop
adc
pop
loop
das
test
fs
inc
punpckldq
inc
out
movsl
push
jge
insl
mov
insb
mov
es
mov
or
jne
packuswb
push
cmpsb
mov
adc
dec
sarl
les
add
rclb
inc
pushf
pushf
dec
sbb
sti
sub
xchg
and
rcrl
lret
jmp
test
sub
fwait
mov
xchg
aaa
test
in
and
inc
add
cmp
push
mov
xlat
popl
fidivrl
or
sub
lcall
xchg
jno
das
xchg
jmp
jl
ljmp
push
mov
mov
jle
lods
cmpsb
addb
sub
xor
imul
mov
pop
test
add
arpl
icebp
lds
pop
shl
fidivrl
and
or
sbb
inc
inc
pop
xor
int
in
jmp
sub
loope
and
leave
lret
push
loopne
inc
lock
fisttpll
pop
dec
test
push
sub
dec
mov
inc
es
mov
add
jae
and
mov
insb
push
inc
dec
or
xchg
loope
std
and
faddl
and
iret
popa
je
jecxz
mov
jb
lock
cld
push
into
push
cwtl
or
ljmp
in
stos
push
imul
and
bound
adc
ss
jne
dec
sbb
sub
adc
out
mov
sub
add
loop
sub
adc
pop
sarb
mov
movsl
inc
aam
pop
or
imul
lcall
aam
daa
jb
ja
stos
test
jge
or
daa
pop
fimull
sar
mov
push
lock
ljmp
test
scas
loop
scas
cltd
imul
call
hlt
cmp
sbb
in
imul
jb
add
inc
jmp
test
mul
xchg
sbb
xor
and
fsubrp
or
sub
loopne
adc
jbe
sbb
inc
loop
fwait
stos
inc
das
and
outsb
enter
ja
mov
pop
and
sbb
cmp
dec
push
out
insl
sbb
adc
jne
push
inc
xlat
mov
leave
sub
test
pop
ret
push
in
push
mov
xchg
mov
cmpsl
jmp
push
rcll
mov
xor
and
cmp
sub
xlat
aas
mov
lea
cmp
lret
push
jnp
lgdtl
fdivrl
xchg
adc
pop
add
push
clc
sbb
jg
inc
cmpsl
jo
sbb
or
pop
int3
movsl
push
jp
adc
lret
movsl
inc
or
and
popf
and
cmp
inc
fsts
enter
loope
or
jl
jge
arpl
pusha
and
stc
imul
cld
mov
jp
int
adc
pop
or
cmovno
mov
pop
sbb
jns
das
adc
mov
dec
xor
ret
push
jge
mov
jmp
jle
pop
xlat
add
or
stc
xor
pop
popf
sub
pop
mov
jbe
pusha
int
push
lods
add
mov
lock
movsb
push
in
lock
popf
lea
mov
mov
lret
adc
mov
insb
imul
iret
adc
sub
push
pusha
test
pop
jb
inc
stc
test
xchg
stos
in
mov
jmp
fsubrl
repnz
mov
nop
jae
dec
and
and
jo
dec
xor
push
int
jae
pop
sub
divl
add
xchg
inc
leave
pop
movsl
out
loopne
shr
ja
inc
dec
mov
pop
cmp
lcall
icebp
pop
aam
dec
xchg
xor
bound
mov
jb
xchg
xorl
jae
fldt
mov
stc
lea
rcrb
push
dec
cmc
ds
mov
inc
test
jns
outsl
hlt
lock
add
mov
mov
ja
mov
or
out
nop
std
inc
mov
mov
mov
or
leave
inc
xor
mov
mov
jmp
test
add
jb
cmp
mov
loope
cld
arpl
dec
ljmp
pop
rolb
inc
sbb
in
rcl
xchg
cmc
inc
out
push
lret
mov
bound
cmpl
dec
dec
mov
inc
scas
loop
lods
dec
ret
sti
lret
jmp
and
sbb
mov
aaa
into
xlat
rcrl
cmpsb
hlt
push
mov
mov
or
sarb
sub
out
popf
ljmp
mov
lock
adcl
cs
loop
jmp
lock
dec
mov
pop
call
or
nop
mov
and
pushf
or
pop
cmpsl
inc
sub
repnz
imull
jae
out
sbb
or
mov
pusha
and
adc
inc
andl
roll
int3
cwtl
jns
push
pop
int
mov
outsl
xor
hlt
outsl
or
push
cmc
scas
fdivrp
fimull
rcrl
scas
enter
xchg
fsubrl
inc
shrb
scas
gs
call
data16
or
mov
mov
inc
popf
mov
cmp
shll
scas
in
and
or
jo
scas
push
pop
nop
enter
jle
jle
jb
popf
xchg
dec
mov
movsl
aam
fmuls
push
dec
inc
stos
cmp
xor
mov
cmp
mov
movsl
mov
outsl
or
pushf
aad
fs
lret
inc
add
sar
insb
add
cltd
les
xchg
subl
lods
test
and
mov
jo
outsb
push
lds
decl
jne
push
ficoml
cs
xchg
inc
fdivr
cmp
xlat
pop
mov
mov
push
or
lds
cli
lock
ljmp
cmpl
cmpsb
pushw
mov
testb
sub
mov
pop
and
jecxz
lock
ret
adc
lret
test
int3
sub
dec
dec
inc
int3
xor
outsb
stos
es
xchg
mov
sub
or
fsubs
popa
cmp
mov
out
pusha
addr16
test
pop
scas
aad
mov
sub
xor
add
js
mov
xor
adc
xor
scas
push
in
stos
stc
inc
jo
xchg
push
scas
loope
sbb
mov
jae
and
adc
sbb
fucomi
inc
repnz
in
jp
mov
sarb
pop
push
fisttpl
jl
fists
sub
scas
sub
mov
pop
insl
mov
adc
outsl
out
mov
mov
outsl
add
adc
xchg
dec
daa
stc
in
popa
and
inc
jb
js
mov
lods
xchg
test
fs
push
pop
out
fcomps
dec
lds
call
adc
rcl
lea
aam
dec
ss
popa
rclb
mov
inc
cmpsb
cmpb
dec
adc
popa
adc
xor
ret
dec
mov
inc
adc
inc
or
mov
inc
push
hlt
cmp
ficompl
add
stos
dec
arpl
dec
or
xchg
add
jmp
or
jmp
inc
in
inc
xor
push
les
mov
xor
xchg
mov
stc
pop
mov
lods
cs
and
mov
aam
sub
inc
je
incb
ret
arpl
hlt
jns
or
cs
cwtl
mov
sub
subb
adc
out
mov
push
push
imul
xchg
dec
jne
sbb
xorl
or
fwait
pop
cli
inc
push
cli
enter
data16
cmp
sbb
mov
mov
lock
rolb
shll
lcall
ljmp
cld
jo
pop
mov
addl
movsb
fs
movsl
push
dec
je
clc
insl
mov
lock
push
mov
dec
jmp
out
mov
sbb
mov
dec
cs
and
lahf
cmc
push
pop
daa
cmp
cmp
test
push
lock
inc
sahf
add
lret
inc
rcll
aam
fnsave
das
mov
sti
and
pop
push
cmpsb
in
dec
inc
shlb
faddl
cli
mov
jp
pop
and
mov
imul
cmc
cld
shll
mov
jno
clc
clc
xchg
cmpsl
or
cmp
and
loopne
fimull
cmp
mov
or
repz
outsb
cmpsl
mov
cmp
jnp
cli
lret
iret
inc
add
and
add
mov
mov
test
data16
outsb
sbb
jge
rcrb
cmc
cs
mov
xchg
subl
in
sbb
jbe
rorl
imul
scas
push
scas
fildll
popf
sarl
loope
push
pop
and
cwtl
ret
pusha
push
mov
sbb
or
ds
rcll
dec
mov
fldt
roll
arpl
dec
movsl
mov
push
sub
jnp
outsl
addr16
icebp
sub
repz
sbb
clc
shll
adc
jg
dec
loopne
xchg
test
xor
jns
pop
cmp
push
negb
neg
mov
mov
fwait
sub
pusha
xchg
out
into
pop
or
adc
sti
inc
inc
dec
ja
jl
mov
push
adc
sbb
movsb
adcl
sbb
push
scas
and
rolb
mov
shlb
xchg
push
divl
push
mov
xor
dec
in
fistpll
jnp
mov
pop
ljmp
push
cs
jmp
int3
or
call
sbbb
push
scas
add
adc
ljmp
icebp
or
fstps
js
sti
adc
and
shll
jae
sarb
pop
fnsave
fwait
sub
xor
push
fcomip
mov
cmp
sbb
inc
rcl
mov
adc
inc
mov
out
add
sbb
push
or
dec
pop
fidivs
fcmovnu
into
repz
insl
xchg
pop
int
repz
mov
mov
mov
sub
adc
push
iret
mov
xor
add
dec
mov
sub
xchg
push
sti
inc
or
cmp
loop
pusha
jle
insb
and
xchg
mov
push
ficompl
pop
addb
dec
jle
pop
and
loop
add
test
iret
dec
mov
fs
stos
push
jecxz
cmp
jle
sahf
out
repz
mov
insl
xchg
pop
aaa
pop
fnstenv
add
pusha
dec
into
push
outsl
shll
fwait
scas
repnz
mul
fcomps
cmp
gs
mov
or
aam
mov
sbb
jo
sbb
add
pop
push
sbb
movsl
subl
xchg
and
dec
adc
jmp
jl
jg
daa
sbb
or
js,pt
add
lret
ret
test
in
jns
xchg
jne
data16
jo
pop
dec
shrb
jns
je
add
ss
ret
mov
leave
sbb
xor
cs
mov
jnp
mov
or
fwait
and
in
sbb
sub
into
cltd
add
test
iret
rorb
pushf
jbe
sub
adc
dec
cmp
test
inc
cltd
daa
mov
mov
mov
lcall
aad
dec
imul
xor
sbb
jne
aaa
mov
cmp
in
pop
fwait
lret
fsub
sub
clc
ja
lret
and
jbe
in
addl
add
sub
cmp
push
fs
sub
jge
xchg
iret
and
mov
sbb
icebp
adc
pop
outsl
adc
mov
inc
push
mov
sahf
gs
dec
cmp
pusha
sti
aaa
daa
cmp
inc
adc
fidivs
sarl
xor
cmp
xlat
dec
sub
idivb
mulb
cmp
cmp
lods
add
mov
leave
test
add
movsl
sub
push
and
ret
dec
outsl
mov
mov
add
in
pop
cs
cmc
dec
jp
popa
fldcw
cmp
lret
repnz
aaa
sbb
inc
stos
dec
scas
repz
mov
pop
cmp
test
xor
stos
test
mov
in
push
jae
or
xlat
mov
lret
ljmp
movsl
mov
jne
push
stos
sbb
xchg
out
xchg
stos
iret
cmp
jnp
fwait
xchg
movsl
inc
fidivrl
addr16
subb
cmp
aad
in
aad
in
loop
lret
in
xchg
and
inc
testl
cmp
lods
iret
push
lds
pop
adc
pop
out
lods
pop
movl
pushf
paddsw
mov
jno
mov
jge
inc
and
xor
das
xchg
out
sbbl
faddl
subb
adc
jbe
insl
into
lock
and
das
jae
push
inc
pop
push
jp
shrb
cmp
pop
mov
out
fiaddl
mov
xor
mov
jb
and
xchg
pop
push
pop
daa
xor
mov
pop
inc
jmp
in
scas
repnz
scas
ficoms
into
xor
add
xchg
xor
test
cmp
xchg
push
rcrb
insb
adc
fst
sbb
out
push
add
jno
xchg
push
or
lcall
dec
addl
xchg
stos
shll
das
cmovge
aad
bound
pop
leave
or
pop
das
aaa
and
iret
mov
jo
and
pop
pusha
or
loope
call
pop
add
addr16
int
inc
jp
jbe
arpl
inc
push
sub
cmpsl
cmpsb
push
movsb
insb
jns
xor
int3
aam
jg
lods
shl
aam
push
lock
inc
mov
inc
repz
test
loopne
cmp
pushf
incb
xor
fwait
stc
pusha
dec
mov
lock
sub
pop
dec
cmp
add
ja
jg
and
pop
sbb
jbe
fs
lret
add
movl
sub
and
fsubp
pop
xchg
ficoml
mov
inc
int3
pop
daa
stc
insb
cmp
jge
ja
xlat
out
hlt
xchg
testb
pop
xorl
cmpsb
faddl
sbb
ljmp
push
push
xlat
jno
inc
xchg
mov
sbb
imul
xor
shl
xchg
rolb
adc
sbb
imul
fwait
dec
inc
dec
test
inc
xchg
hlt
sqrtps
mov
data16
sub
leave
icebp
scas
push
push
insb
mov
out
ficoms
inc
mov
or
aam
stos
clc
inc
mov
cltd
in
stc
pop
mov
push
push
jnp
movsl
mov
pop
inc
xor
push
jecxz
push
fwait
or
pop
add
and
xchg
out
gs
stos
mov
adc
leave
push
insb
pop
pop
cwtl
adc
add
cld
mov
pop
push
push
sub
test
and
movsl
iret
rclb
test
pop
xchg
push
xchg
loop
movsl
xchg
xor
push
lods
lret
scas
es
mov
bsf
inc
popf
pop
mov
pop
cmp
cld
ja
movsb
cmp
dec
cs
fwait
cli
xchg
stc
pop
icebp
and
jb
cltd
in
idivl
inc
aad
add
xchg
cmpsl
push
mov
mov
movsb
jecxz
push
cmp
lods
je
jmp
add
push
xchg
in
sbb
testb
aaa
lods
in
sbb
cmpsb
stos
lcall
mov
loop
mov
outsl
outsb
ss
xor
ret
inc
mov
loope
xor
cmp
clc
imulb
push
dec
ret
inc
mov
stos
sub
daa
in
fcom
les
sub
bswap
dec
sbb
in
push
js
mov
mov
pusha
rorl
ja
pxor
aad
test
pshufw
cmp
dec
inc
xchg
mov
sub
idivl
xchg
mov
addb
lret
es
mov
arpl
xchg
dec
iret
aas
loopne
sub
testb
dec
mov
punpcklbw
and
shlb
xchg
push
out
stos
loope
mov
addr16
mov
xor
int3
cmc
lds
arpl
xchg
shrb
dec
mov
lods
cmp
cmpsb
dec
xor
xor
iret
mov
fnstsw
mov
adc
lods
sbb
xor
shrb
pop
leave
ret
push
add
inc
and
das
push
out
repz
dec
imul
add
in
xorb
imul
fcmove
scas
mov
jg
inc
test
or
cs
idivb
jecxz
fs
xchg
data16
shll
scas
fiaddl
or
std
dec
xor
in
xor
fdivr
xor
push
mov
xchg
mov
clc
lcall
xchg
in
in
adc
shll
movsl
xor
pop
cld
insb
sub
push
mov
cs
stos
inc
mov
ret
repnz
add
mov
lea
lods
cmp
jns
outsb
adc
mov
sbb
outsl
pushf
xchg
cmc
mov
incl
jp
out
mov
fistpll
sbb
inc
loope
lods
mov
push
xchg
xchg
dec
sbb
xor
mov
push
ret
sub
popf
leave
in
adc
pushf
jbe
push
xor
icebp
jne
push
or
iret
xchg
xchg
inc
es
sub
enter
xor
xchg
mov
inc
repz
xchg
cltd
addb
lcall
scas
pusha
shl
mov
pushf
xchg
or
je
pop
cmp
cmp
mov
mov
or
cli
movsb
rcl
jle
test
out
inc
sti
dec
dec
inc
insb
xchg
in
cmp
dec
or
gs
sbb
xchg
sub
add
adc
mov
push
dec
ss
sbb
cmp
pop
aam
test
xchg
test
or
cmc
mov
aad
into
adc
push
test
arpl
pushl
add
add
xchg
mov
mov
jecxz
pop
push
les
pop
in
leave
mov
repnz
std
mov
cwtl
jno
xchg
xchg
mov
push
adc
pop
inc
insb
push
imul
dec
add
pushf
pop
jb
push
rcrb
divb
mov
dec
pop
cmc
test
jecxz
pop
push
fisttpll
lahf
aaa
repnz
cld
dec
shlb
sub
das
mov
pop
sbb
xchg
clc
dec
pop
js
cmp
inc
add
cmp
dec
pop
data16
cmp
and
pop
loope
dec
stos
jecxz
and
ret
andb
mov
les
cmp
and
push
dec
es
dec
loopne
jnp
mov
pop
jnp
sub
das
cmp
fistpl
sar
loopne
mov
mov
int
mov
mov
jge
mov
daa
cmpb
icebp
add
jno
xor
push
ficoms
jb
sub
xor
jmp
imul
out
dec
mov
jne
lods
rcl
fisttpll
inc
movsl
stos
insb
ds
add
movsb
faddp
pop
cs
cmpsb
push
pop
loopne
andl
mov
test
adc
pop
mov
dec
stc
mov
gs
pusha
mov
lea
mov
dec
fcoms
mov
push
push
aas
adc
imul
ror
lock
ds
adc
cli
mov
xchg
fld1
push
ss
sbb
cs
jp
int
imul
jno
sbb
add
addr16
lcall
pop
jmp
and
iret
add
and
or
sti
ljmp
fdivrs
push
test
inc
aam
fmull
cmp
xor
pop
popf
lods
sub
insb
cmp
cmp
pop
loopne
icebp
fcoml
add
mov
gs
xor
ja
subb
and
mov
push
pop
outsl
jmp
rol
and
out
std
inc
inc
bswap
mov
subl
push
add
aas
pop
mov
test
adc
fstpt
ds
and
popa
pop
add
cmpsb
icebp
flds
mov
aaa
shlb
sub
rol
sti
stc
shl
mov
xchg
scas
mov
xchg
out
notb
xor
dec
mov
clc
cmp
je
cmp
sub
inc
outsl
nop
in
jmp
dec
cmpsb
and
int3
adc
sbb
push
movzbl
jmp
dec
pop
and
cli
or
push
mull
mov
xchg
sub
lret
add
cmp
push
in
je
push
dec
cli
fsubs
int3
jecxz
jge
mov
sub
out
pusha
fsubrl
and
jne
ror
or
cwtl
fld
xchg
sarb
fidivrl
test
dec
rcll
jmp
jne
cmpsb
mov
popf
mov
add
leave
hlt
pop
cmp
loop
xchg
outsb
push
test
test
gs
mov
cs
in
fwait
daa
jns
sbb
pop
cmp
shr
sahf
cwtl
adc
xor
lcall
mov
push
in
scas
in
imul
sti
test
xlat
pop
cltd
adc
jecxz
mov
sti
enter
push
call
pop
inc
add
push
mov
imul
dec
out
inc
stos
cltd
rol
test
cmpsl
popf
scas
scas
outsl
int3
push
and
sub
aaa
jne
mov
pop
sub
adc
repnz
mov
pop
cmp
sbb
inc
mov
test
test
jl
mov
xchg
inc
sub
mov
sbb
into
cltd
xchg
adc
or
push
or
loopne
sub
jno
fnstenv
inc
cmpsl
adc
push
orl
fisubrl
push
in
jno
testl
in
dec
xchg
in
or
jne
insl
add
ds
jae
out
dec
xchg
insb
ljmp
inc
bound
mov
scas
add
push
sub
add
sub
in
fs
cltd
popf
ror
shlb
mov
shrb
test
daa
sbb
jnp
out
data16
dec
cwtl
push
xor
push
dec
pop
popf
loope
call
xchg
pop
xchg
fstpl
je
push
dec
and
cwtl
or
jge
xor
add
popf
ja
es
inc
xchg
push
call
ljmp
cmp
and
dec
leave
xchg
or
test
pop
leave
fs
fbld
jbe
adc
faddl
mov
cmp
xlat
test
sbb
icebp
jg
jo
jp
inc
and
popf
push
adc
aam
repnz
inc
fcompl
out
lds
xchg
ja
and
dec
imull
lcall
out
loope
cmp
push
add
mul
in
xchg
leave
enter
aam
adc
push
pop
cmp
lahf
pusha
out
xlat
dec
mov
cmpsl
xor
fldl
mov
mov
fisttpll
pop
jb
jo,pn
xor
ret
ds
fwait
pusha
movsl
xchg
addr16
movsl
lods
nop
into
lcall
aas
mov
ds
pushf
add
shr
lret
mov
dec
aad
cmp
dec
cmp
ja
stos
es
pop
and
jne
enter
mov
ss
xor
mov
mov
lods
add
jnp
lret
or
add
adc
dec
nop
in
out
scas
ret
loop
insl
lods
jg
cmp
outsb
out
cmp
incl
or
sub
mov
sahf
jne
imul
in
insb
xchg
mov
mov
add
mov
sbb
add
add
mov
cmp
jo
nop
xor
loope
jecxz
sbb
sahf
or
roll
dec
add
mov
cmpsb
imulb
mov
outsl
aas
notb
test
idivl
mov
or
add
xchg
xor
int
lods
cmp
pop
sub
ret
mov
stos
jmp
es
gs
and
mov
xor
or
dec
inc
mov
repz
cs
dec
xor
xchg
sti
sbb
scas
hlt
inc
or
fadds
inc
stc
sub
sahf
fnstsw
popa
loope
mov
xchg
mov
or
or
int3
outsb
insb
sahf
mov
dec
adc
sub
fldl
add
xchg
cli
add
dec
ljmp
je
gs
ror
mov
pop
xchg
sbb
cs
xchg
inc
mov
shll
jnp
and
add
clc
sbb
xchg
sub
lds
notb
xchg
into
pop
push
icebp
sbb
mov
mov
pop
or
pop
daa
clc
dec
neg
stos
xor
push
pusha
adc
stos
in
add
jae
divl
and
fmull
lock
aas
or
out
mov
out
sub
push
insb
dec
mov
pusha
in
sahf
push
fistl
in
jp
fcmovne
fadds
das
into
repnz
aad
push
cmc
clc
fwait
mov
mov
adc
int3
mov
mov
xor
mov
adc
inc
into
in
arpl
mov
pop
add
cmp
pop
sub
mov
lock
in
test
cwtl
ret
mov
test
mov
sub
mov
jbe
xor
mov
addr16
andw
and
mov
push
mov
xchg
clc
or
cmp
xchg
cmp
mov
pop
data16
dec
jg
imul
jl
ds
ficoms
push
or
jno
add
jmp
enter
mov
ds
lods
jbe
jbe
pop
add
pop
dec
je
out
bound
loop
mov
shll
cli
add
pop
cmp
and
ljmp
daa
mov
lret
data16
movsb
loope
sub
leave
stos
subb
inc
jbe
pop
dec
mov
shrb
in
testl
mov
inc
mov
push
popf
js
into
inc
test
and
dec
popa
es
mov
scas
cmp
imul
dec
cmp
fisttpll
jecxz
inc
cmpsl
inc
sub
loopne
dec
icebp
pop
push
jae
push
jno
pop
sbb
mov
jge
cli
sub
arpl
mov
xlat
push
loop
push
xchg
cmp
mov
jle,pn
inc
mov
cmp
and
jbe
pop
test
aad
filds
push
in
nop
call
jmp
jge
dec
shl
outsl
inc
or
sarb
or
mov
mov
lcall
or
mov
mov
lret
fs
aad
push
out
ret
repz
sahf
or
inc
jae
test
xor
jg
insl
sub
mov
gs
jno
mov
lcall
in
mov
cmp
mov
mov
hlt
pushf
cmp
xchg
js
in
lea
inc
xor
leave
cmpsb
fbstp
push
lods
sbb
js
add
mov
mov
jg
pushf
jecxz
inc
mov
xchg
jo
pop
int
imul
fstl
out
add
fmull
or
lods
in
pop
inc
xchg
sub
data16
cmpl
mov
xlat
fisttpll
dec
sbb
imul
mov
push
add
push
sub
xchg
ds
and
stc
jp
loop
stos
popa
push
jne
xchg
mov
icebp
std
fistpl
push
int3
dec
dec
aad
cmp
orl
cmpsb
icebp
dec
pop
sti
sub
sbb
aaa
int
orb
psubd
fimuls
xor
mov
jmp
sbb
mov
inc
in
aad
movsb
mov
sbb
jg
into
mov
movsl
xchg
pushf
repz
lea
jmp
mov
roll
xchg
sub
and
aaa
xor
xor
sbb
lods
xchg
sub
pop
mov
hlt
cmp
popf
dec
xchg
cmp
pop
push
pop
adc
in
xchg
cwtl
std
inc
scas
sbb
in
xor
adcl
icebp
push
out
pop
pop
repz
out
repz
xor
out
ljmp
adc
jae
aad
mov
lret
mov
mov
inc
xor
dec
xchg
shr
push
xchg
xlat
mov
movsl
leave
sbb
std
fs
add
addr16
aaa
ja
jae
ljmp
push
inc
adc
push
loope
xchg
and
jg
lods
leave
lea
xor
jns
pusha
out
fildll
jecxz
mov
ljmp
mov
fst
xor
addr16
imul
jbe
dec
std
in
sub
push
mov
je
cmp
mov
inc
jne
xor
enter
adc
lods
jmp
inc
or
mov
push
pusha
and
subb
mov
jecxz
insl
adc
je
daa
stos
out
mov
push
popf
imul
out
mov
paddsw
outsl
notl
jbe
and
pop
jnp
in
icebp
jbe
pop
adc
rolb
sbb
xchg
pop
push
fdivrl
inc
das
dec
pop
ficomps
in
in
push
sbbl
shlb
adc
xchg
ficoms
sub
jo
scas
dec
xor
and
and
into
in
hlt
and
popf
test
inc
fbld
adc
lcall
cmpsb
mov
pop
ret
inc
in
test
dec
add
out
aas
fnstsw
and
imul
lods
leave
aaa
adc
adc
fistpll
sub
out
testl
cmp
adc
ficompl
add
or
push
cwtl
sbb
sbb
or
jne
cmp
test
cmpsl
dec
push
out
jb
pop
or
ljmp
dec
xlat
xchg
hlt
aad
pop
dec
hlt
ror
cs
sahf
xlat
popf
and
dec
mov
xor
sub
shlb
insl
iret
rorl
inc
or
hlt
sbb
fsubs
inc
cmp
mov
add
fs
dec
adc
das
outsl
push
notb
lea
mov
adcl
lahf
dec
lret
jns
mov
pushf
xchg
mov
movsl
pop
in
push
fdecstp
repz
inc
add
pusha
nop
enter
test
jae
mov
jg
mov
add
cmp
mov
xchg
inc
sbb
pop
scas
jne
in
out
sub
push
fs
add
sub
push
mov
ja
dec
lret
popa
ror
sbb
lods
inc
jns
fstpl
xchg
notb
lods
jge
cmp
cld
mov
popf
repnz
xchg
popf
jae
sub
or
xchg
bound
add
inc
stos
add
outsl
dec
in
ret
enter
sub
mov
push
mov
movsb
pop
lds
inc
insl
lds
push
ret
lea
incl
xchg
mov
loopne
adc
repnz
pusha
mov
cli
jl
inc
dec
and
xor
cmpsb
push
jno
mov
loopne
jg
pop
xorl
mov
in
xchg
xchg
jmp
mov
leave
push
xchg
jbe
data16
mov
cmovle
cmp
outsl
lds
fldenv
andb
fnsave
fcomps
int
fs
out
cmp
push
outsl
jmp
les
jb
out
out
xchg
rolb
push
repz
shrl
pop
jae
xor
and
or
jns
jg
adc
cmp
mov
dec
es
stos
or
or
cltd
jb
dec
les
hlt
xchg
cli
dec
cli
movsl
and
jp
test
mov
test
fmulp
mov
mov
xlat
enter
push
xchg
int3
mov
jl
push
and
mov
or
pmullw
inc
scas
mov
test
sub
notl
or
movsl
sub
lar
pop
aam
jb
add
cmp
sbb
out
sbb
mov
jno
fcoml
rcrl
sbb
push
cld
mov
jl
repnz
cmpsl
xor
jecxz
rcll
sarl
in
push
mov
xor
ret
or
cwtl
lcall
sti
leave
inc
js
jmp
movsl
push
test
jmp
cmp
push
pop
aas
nop
sbb
popf
and
cmpsl
sub
aas
mov
xor
sti
push
mov
es
mov
mov
xlat
rorl
fnstsw
fwait
in
cmpsl
inc
out
addr16
enter
cwtl
add
pop
lret
pushf
push
mov
divb
adcb
mov
lret
push
mov
into
clc
add
dec
mov
test
insl
adc
popf
cs
mov
mov
mov
xor
dec
xor
pop
aas
sbb
test
lcall
add
sub
add
fsub
hlt
iret
cltd
loop
cmpsl
fadds
push
adc
cmovg
jl
cld
dec
into
sub
repnz
popa
inc
insl
sbb
ds
sub
push
sahf
xchg
jmp
pop
int3
inc
cld
pusha
mov
mov
xor
adc
sbb
add
mov
fnsave
xor
jle
pop
cmp
pop
fisubrl
mov
cwtl
jmp
inc
inc
lret
mov
rorb
negb
add
mov
add
mov
nop
adc
jmp
pop
mov
aad
adcl
or
out
lock
push
mov
pop
clc
xlat
fistps
in
cmp
lds
imul
xor
ljmp
test
ljmp
testb
sbb
push
adc
inc
xchg
xchg
in
mov
cmp
pop
cmpsb
arpl
in
sbb
dec
dec
test
bound
repz
packuswb
xchg
cmpsb
mov
repnz
cmp
jns
mov
arpl
gs
dec
leave
leave
dec
xor
mov
jmp
loop
fcoml
out
shrb
inc
mov
jecxz
imull
fsubrp
nop
and
pop
push
jmp
mov
std
and
dec
movsl
add
prefetch
add
daa
mov
mov
mov
jge
ja
test
push
and
popf
or
jns
cmp
fldenv
sbb
xor
adc
xchg
in
xchg
imul
rep
add
hlt
dec
and
mov
dec
pop
sbbb
in
in
lret
xchg
in
js
pop
xor
fldenv
cmpsb
pop
mov
xchg
mov
lods
popf
fwait
and
mov
pop
xor
lods
pop
add
adc
inc
xchg
pop
shlb
mov
stc
cmp
stos
into
bound
sarl
fwait
pop
xchg
sub
out
xor
jnp
jle
push
popl
std
js
mov
cmp
or
adc
mov
arpl
sbb
loope
inc
xchg
insl
test
jmp
bound
inc
psubw
adc
test
jnp
idivl
pop
jns
pop
out
stos
mov
xchg
jno
jo
cmp
mov
shll
pop
sub
adc
jno
faddl
out
sub
or
aam
and
mov
aam
and
test
movsl
sbb
pop
xor
dec
xchg
mov
push
xchg
stos
leave
xor
lcall
es
incb
cltd
pop
in
sbb
mov
lret
adc
mov
sub
hlt
test
mov
mov
notb
jge
fisubrs
aas
mov
dec
cmc
test
outsb
mov
cmp
stc
outsl
addr16
or
pusha
sbb
ja
dec
or
sbb
add
mov
xchg
pop
jno
addr16
push
xchg
cltd
mov
decl
mov
mov
nop
mov
pop
push
push
stos
lods
xchg
out
sbb
test
pop
aad
imul
jno
cmpsl
mov
xchg
push
stos
cmp
scas
push
mov
sahf
mov
andl
repnz
xor
pop
mov
arpl
or
or
lods
incb
mov
jmp
push
in
hlt
scas
test
mov
out
jnp
or
or
mov
jae
push
cwtl
arpl
mov
insb
xor
xor
sbb
ja
movsl
xor
rorb
jge
lds
or
dec
imul
out
test
ss
xchg
jl
nop
es
add
push
in
iret
jecxz
pop
sub
outsl
pop
xchg
outsl
xchg
xchg
push
or
aad
jne
xor
or
loope
sub
ret
in
mov
cmp
sbb
xchg
stos
push
pop
mov
pop
pop
cmp
pop
xlat
push
adc
push
clc
leave
add
rol
cmc
jb
or
mov
repnz
cs
js
rcr
test
or
call
and
ds
jo
ja
mov
mov
dec
mov
cmp
mov
dec
pop
in
xchg
and
pcmpgtb
int
or
aaa
pop
cwtl
mov
fbstp
daa
aaa
mov
outsb
mov
popf
mov
jb
scas
test
xchg
pop
jno
mulb
inc
pop
fmuls
xor
cltd
jns
and
fbstp
dec
frstor
sbb
dec
scas
out
cwtl
sbb
arpl
rolb
mov
andb
gs
sbb
mov
adc
ficoms
dec
jecxz
data16
sahf
test
or
jl
fcoms
jo
int
insl
mov
pushf
mov
into
fcompl
sbb
leave
sub
pushf
jg
dec
mov
push
negl
idivb
jae
int3
into
mov
shlb
push
int
lock
cmp
mov
xchg
stos
nop
mov
sbb
mov
sbb
addr16
mov
push
mov
lcall
jmp
out
mov
sbb
mov
repnz
mov
movsb
mov
or
mov
inc
shlb
adc
adc
lea
push
xor
add
incb
add
or
dec
or
inc
xchg
fwait
cmpsl
mov
out
imul
shr
inc
jae
pop
mov
out
jne
sbb
shll
xchg
stc
add
jg
jns
pop
dec
sbb
mov
mov
arpl
pusha
mov
mov
xchg
mov
mov
cmp
out
sbb
sub
repz
inc
push
sbb
orl
inc
in
jp
arpl
daa
js
adc
mov
mov
push
mov
jmp
and
ljmp
adc
jns
mov
std
in
in
dec
cwtl
pop
add
mov
sbb
cli
gs
mov
cli
mov
lret
rcrb
or
sahf
shll
mov
lods
outsb
stos
repz
inc
insb
je
inc
jne
out
xor
std
cmpb
xor
dec
push
push
es
loop
into
insb
mov
fwait
lds
push
lahf
mov
adc
out
cmpsl
mov
xchg
data16
dec
cmp
pushf
lea
leave
sbb
aaa
pop
jb
in
mov
loope
jo
imul
push
sbb
inc
in
lahf
jmp
inc
jecxz
lds
lock
mov
repz
jle
aaa
jecxz
cmpsl
push
dec
cli
sbb
cmc
mov
push
in
loope
loopne
fwait
sub
push
in
adc
aaa
pop
rcrl
mov
add
xor
and
cmc
inc
cmp
fs
dec
pop
testl
sbb
mov
ss
out
lods
andb
rcll
leave
fisubl
cmpsb
mov
xchg
sbb
sbb
movb
mov
inc
ja
insl
sarb
sbb
mov
cmc
xlat
or
inc
pop
repz
jno
fbld
dec
nop
mov
icebp
xchg
mov
shrb
mov
inc
or
mov
loop
or
sbb
dec
bnd
jge
adc
jl
jnp
aad
stc
and
xchg
push
cltd
mov
sbb
lds
call
pop
or
scas
xor
xor
sbbb
out
test
stos
loop
push
fisttpll
div
or
xchg
mov
in
stos
aam
call
subb
push
sub
dec
divb
test
mov
ret
xchg
xchg
lret
inc
sub
pusha
add
or
cs
ljmp
stc
and
cmpsb
dec
push
push
cmc
imul
jae
mov
lret
repz
jg
loope
and
shrb
stos
ss
mov
adc
arpl
dec
out
jg
rclb
sub
loope
mov
stos
or
dec
idivb
ds
loope
push
jns
sti
jmp
mov
sub
mov
jp
push
sub
enter
pop
mov
mov
aas
sbb
icebp
fidivl
xor
repz
fistpl
rep
mov
lahf
mov
sbb
xchg
mov
lods
and
xchg
mov
pop
push
mov
daa
sub
stos
cmp
inc
mov
test
fldcw
ror
and
cltd
cmp
adc
jbe
cli
mov
cmpsb
jmp
movsb
adc
cmp
adc
xchg
cs
fbstp
rol
push
add
mov
jbe
cmp
cmpl
add
lcall
aaa
adc
jb
lahf
je
push
jb
push
fnstsw
in
in
lcall
add
pop
fdivrl
mov
dec
inc
xchg
jle
daa
push
loopne
xor
loopne
jg
jmp
mov
cmc
jecxz
push
mov
inc
xchg
sbbl
and
jae
icebp
aaa
jp
add
mov
ret
jle
incb
lret
bound
sbb
leave
cld
push
rcrb
or
add
repz
daa
push
outsl
sysenter
jl
aaa
pop
ss
push
popf
push
jno
jb
jg
imul
inc
cmp
and
push
lcall
sbb
mov
push
mov
cltd
mov
movsl
jne
movsl
jb
test
xchg
jb
imul
mov
enter
popa
std
mov
ja
repz
addb
icebp
insl
sbb
mov
and
addr16
push
xor
imul
jge
dec
push
dec
ljmp
push
sub
push
enter
lds
mov
dec
aam
inc
and
in
cmp
fdivr
adc
xor
mov
xchg
or
jp
jae
jbe
fcoml
aaa
rorl
mov
mov
test
rcl
add
lret
cmp
cmp
daa
push
lcall
jno
inc
push
call
push
or
dec
push
shl
add
lahf
dec
cmc
es
jmp
test
push
lea
aam
out
cltd
xor
lods
shrl
scas
dec
cld
cmp
and
xrelease
sbb
push
sub
sbb
int
sbb
call
clc
cs
ret
add
jo
inc
dec
xchg
sub
int3
mov
cmp
mov
dec
adc
sbb
setbe
add
xor
pushf
pushf
bound
sahf
mov
movsl
mov
xchg
cli
dec
xor
xchg
dec
jmp
xchg
cmp
cmc
lcall
mov
lcall
int
and
test
dec
ljmp
and
cmp
mov
xchg
or
inc
mov
push
push
xlat
jle
push
jmp
ret
pop
jp
jmp
push
or
push
mov
push
xchg
mov
rorb
and
test
xchg
inc
push
xchg
jmp
ja
push
mov
sub
imul
fwait
hlt
fsubs
xchg
and
mov
popa
push
je
adc
sub
dec
movl
add
mov
push
out
add
push
jp
cltd
icebp
out
add
push
fisubs
lret
aaa
repnz
mov
ffree
movsb
out
add
jge
jb
testb
fimull
lea
mov
les
mov
mov
or
loope
push
mov
ja
popf
loopne
push
add
rcl
lea
and
mov
pop
dec
mov
pop
pusha
stos
mov
xchg
jnp
lcall
lock
xadd
lcall
mov
dec
sub
ljmp
lods
aas
movsl
mov
add
ficoml
hlt
out
mov
dec
jne
pop
andb
out
add
cmp
mov
sbb
mov
pop
aam
xlat
mov
fdivrs
std
imul
xlat
xchg
lret
jae
bound
mov
or
xor
mov
inc
arpl
pop
mov
cmp
out
shll
add
enter
loopne
clc
cs
jne
mov
inc
xor
sub
mov
aas
fnsave
insl
cli
pop
push
fincstp
fisubs
inc
stos
and
cld
rcrb
je
or
xchg
fs
jne
les
loop
sub
and
sbb
inc
xchg
xchg
push
mov
pop
cmpsl
pop
and
mov
xor
inc
outsl
push
add
pop
stos
js
jl
pushf
inc
fisubs
add
xchg
fists
int
pop
cmp
jg
inc
loop
sarl
mov
insb
dec
pushf
pop
std
stc
adc
lahf
push
add
add
and
outsb
sub
jp
adc
daa
adc
mov
and
push
dec
or
out
cltd
push
out
xor
add
mov
pop
clc
fcoms
cmpsb
out
and
sbb
cli
shll
mov
icebp
jge
fsubs
or
loope
add
mov
xchg
mov
lds
sarb
lahf
xor
sub
xlat
je
inc
cs
mov
sbb
cmp
sub
ss
cmc
scas
inc
adc
mov
shrl
fiaddl
pushf
adc
pop
sub
dec
xchg
scas
mov
sub
mov
aad
cmpsb
fsubs
test
inc
lret
pop
int
cmp
push
scas
dec
lret
cmp
stos
mov
adcl
test
jg
or
adc
and
ror
sub
test
cmp
aam
jne
lcall
jecxz
sub
cwtl
ficomps
int
inc
popf
mov
mov
hlt
sar
mov
std
scas
int3
and
je
push
dec
mov
in
dec
dec
fsubs
in
mov
pop
outsb
push
cwtl
xor
and
inc
and
pop
mov
jmp
fldl
scas
lea
ss
mov
xchg
shrb
xor
sarb
int
and
dec
int
cmpsl
enter
mov
adc
pop
add
cmc
fcmovu
jg
ss
inc
dec
dec
ds
shrl
imul
shlb
cmc
mov
inc
call
push
push
ljmp
push
cmc
sbb
push
dec
test
mov
mov
adc
int
leave
or
lret
xor
and
rorl
into
filds
subl
xchg
insl
inc
ds
sub
sub
int3
xlat
dec
lods
loopne
popa
aas
fidivl
into
xlat
and
add
sbb
xchg
aad
shll
push
stos
cmp
ror
xor
ss
in
push
jb
add
fisttpl
out
test
push
loopne
test
inc
pop
mov
rcll
dec
adc
push
dec
das
push
into
cmc
pop
jbe
mov
xchg
xchg
out
repnz
mov
cmp
fmuls
das
pop
cmp
add
outsb
fisttpl
loop
mov
fcomps
mov
mov
sbb
popa
movsl
mov
xor
sahf
or
xor
jg
into
call
and
fldenv
lods
imul
adc
test
xchg
xor
cmp
or
imull
ret
xchg
jb
lret
adc
in
shl
das
xchg
test
int3
shrb
ret
insl
je
addr16
sbbl
xor
push
jns
push
xchg
es
mov
push
adc
pop
repnz
dec
daa
push
xchg
pop
cmp
sarb
scas
inc
xchg
pushf
mov
lock
push
fwait
addr16
mov
or
xorb
fldz
push
jb
jbe
mov
sub
lahf
divl
add
fwait
cld
mov
or
inc
mov
scas
aam
add
testl
push
jge
std
stos
sbb
das
stos
arpl
je
jno
and
dec
and
fsubrl
test
leave
aas
and
jo
push
push
pop
repz
stos
cmc
add
dec
mov
mov
inc
and
pushf
pop
inc
xchg
sti
pop
in
push
int
inc
rorl
sbb
test
add
xchg
cmpb
dec
cmpsb
rep
cltd
movsl
out
lcall
test
fsubl
adc
ds
nop
inc
sub
mov
stos
xor
loop
mov
lret
jne
xchg
sbb
daa
xchg
repz
aad
lcall
mov
cmc
das
stos
push
mov
leave
dec
push
ljmp
push
cmp
cmp
pushf
pop
data16
lret
lcall
daa
pop
jbe
pop
sahf
mov
or
cmp
shrb
in
out
addr16
fsubs
ds
xor
adc
adc
xchg
mov
int
in
ret
adc
pop
cmp
pop
fs
sti
dec
arpl
sbb
out
aas
fiaddl
mov
aas
cmp
sbb
jle
into
push
sbb
roll
test
lods
jne
out
mov
or
mov
xchg
dec
xor
inc
js
icebp
and
dec
push
mov
or
vcmpsd
xor
or
push
out
jg
xchg
ret
shll
pop
xor
cmp
xchg
inc
sbb
out
fwait
push
push
fwait
mov
inc
lock
adc
outsl
popf
pop
jmp
rcrl
push
andb
test
imul
jg
mov
sub
rcrb
fcoms
cltd
mov
sub
dec
mov
dec
hlt
dec
push
hlt
xorb
xchg
cmp
sti
mov
xchg
sbb
cmpsl
nop
lret
xchg
push
pushf
pop
ljmp
xlat
scas
add
xchg
add
mov
pop
or
ja
mov
arpl
mov
ja
and
int
add
jno
cmpl
mov
and
iret
leave
lods
loop
shrl
nop
and
ficoms
sub
add
fs
dec
outsl
in
adc
mov
or
push
xlat
xor
jecxz
mov
adc
fnstcw
out
xlat
sub
js
ret
mov
dec
mov
mov
sbb
lret
pop
xor
ja
aam
lea
inc
pop
int3
pusha
notb
je
push
inc
push
insb
bound
push
mov
into
bound
cmp
loopne
jl
mov
push
xor
out
sub
xor
xchg
cmp
sub
jae
incb
xor
push
mov
mov
scas
inc
in
or
gs
outsb
fcmovb
cmp
mov
push
xor
es
xor
fisubs
inc
insb
add
loopne
adc
push
mov
data16
dec
dec
test
test
push
lods
or
jl
imul
fistl
pop
imul
add
into
mov
add
push
xor
xchg
fsubl
pop
sahf
xchg
and
xor
stos
xchg
outsb
daa
pop
sub
mov
adc
sub
mov
xchg
dec
scas
jg
rorb
dec
lahf
adc
pop
lods
push
dec
mov
xor
adc
shlb
mov
in
rsm
sti
and
sub
push
xor
cmp
mov
ret
sbb
arpl
jg
cmp
les
sub
sti
pop
inc
leave
or
pop
fmul
sbbl
in
loope
mov
cmp
out
push
mov
mov
ffree
daa
pusha
hlt
xor
test
test
pop
fwait
add
and
adc
ja
adc
push
mov
icebp
xchg
sbb
out
lcall
mov
sbb
add
sub
pop
xor
and
lret
shll
xor
mov
add
mov
cld
hlt
pop
pop
jns
push
je
pop
inc
lret
sbb
test
ffreep
push
or
jb
das
arpl
mov
andl
lea
xchg
push
incl
mov
sbb
cli
lret
jmp
adc
pop
ret
mov
rorb
rolb
gs
xchg
mov
or
mov
sbb
insb
xor
inc
outsb
dec
cmp
hlt
and
mov
lea
push
mov
and
jo
pushf
shll
jg
adc
mov
adc
cmp
xor
adc
imul
jo
int
les
clc
sbb
cwtl
cmp
sbb
push
out
mov
add
mov
fstpt
lock
je
rcrl
dec
mov
daa
push
rclb
pop
bound
outsl
popf
leave
mov
xor
mov
mov
lret
dec
mov
fcompl
out
js
aaa
xchg
test
stos
xor
xor
xlat
jne
sahf
aaa
pop
sbb
or
sbbl
pop
sub
xor
out
roll
push
add
mov
pop
sti
or
dec
xchg
dec
loopne
lods
movsb
pushf
jp
or
sbb
icebp
fisubrl
lods
nop
ds
xchg
mov
fimuls
mov
test
lods
out
jge
popl
sub
shr
dec
push
out
pop
lret
jbe
xchg
das
sub
loope
sbb
adc
aaa
out
rcrb
mov
add
in
int
jne
add
mov
xor
pop
inc
mov
pop
mov
dec
js
mov
and
imul
inc
mov
pop
and
adc
jbe
adc
fwait
in
xchg
or
inc
jns
inc
scas
push
push
clc
jmp
push
xchg
shlb
ljmp
add
and
aad
rolb
in
or
mov
pop
inc
shll
xchg
aaa
shll
repz
adc
or
pop
xor
xchg
out
add
jbe
notl
test
lret
and
movsb
loop
divl
cmp
movsb
mov
mov
loope
sti
pop
dec
in
sbb
cltd
scas
sahf
or
mov
decb
pop
push
cwtl
sti
jmp
movsl
add
adc
mov
pushf
and
dec
arpl
fisubrs
lret
pushf
lods
imul
jl
nop
mov
inc
repz
and
jae
cs
aas
fsubrl
push
push
xor
enter
and
dec
mov
add
add
and
das
sti
mov
pop
inc
jmp
mov
rol
loopne
push
notb
popf
sub
cmpsb
fwait
cmp
negb
mov
cmpb
mov
cmp
ds
test
fsubrs
mov
ret
outsl
pop
into
sbbb
fmul
out
xorl
xchg
mov
mov
rcrl
aam
cmpsl
sbb
jmp
jge
xlat
lods
pop
rcrb
jns
jl
inc
fadds
pop
pop
add
push
and
pop
jp
ret
mov
adc
xor
std
sub
call
out
sbb
dec
sbb
mov
cs
inc
xchg
xor
inc
addr16
pushf
shll
inc
popf
stos
or
ficoms
ss
mov
std
lcall
and
xor
gs
and
loope
xchg
insb
or
sbb
mov
cmp
and
stos
fisttps
sbb
in
inc
rclb
out
lods
mov
lds
gs
outsl
or
adc
bound
ror
mov
push
pop
in
ljmp
push
mov
in
jbe
cmpsb
sbb
enter
mov
inc
dec
add
mov
nop
mov
push
je
in
add
dec
add
push
hlt
mov
lods
mov
ljmp
mov
in
pop
icebp
and
mov
lret
jmp
push
les
loop
dec
xlat
cmp
stos
fadds
push
xor
push
cwtl
and
push
enter
xchg
push
inc
icebp
xor
sbb
and
add
jnp
push
sbb
cmpsb
imul
add
push
movsb
lods
test
and
mov
mov
roll
mov
mov
jb
cmp
push
or
add
sub
mov
cmp
xchg
scas
lcall
int
inc
lea
stos
adc
repz
sub
leave
stc
lea
popf
mov
sarl
das
xchg
fwait
imul
or
in
jb
clc
xor
mov
xchg
add
pop
mov
stos
frstor
pop
decl
xlat
lcall
outsb
test
rcr
mov
mov
repnz
loope
sub
insl
cmpsl
add
inc
les
add
xchg
loop
fidivrl
inc
ret
xor
test
inc
fsubrl
test
mov
test
inc
mov
cli
and
xchg
cld
bound
insb
loope
mov
inc
push
add
repnz
faddl
cs
sub
rclb
mov
pushf
fstpt
fistpl
movsb
pop
mov
push
sbb
xor
fcmovbe
lahf
popf
aaa
add
inc
pop
or
jbe
cmp
jecxz
popa
jp
test
xchg
mov
insl
sahf
ja
sbb
push
sbb
fcoml
jecxz
sbb
cmpsl
push
shrl
clc
inc
mov
imul
adcb
add
ret
sub
mov
xchg
aaa
dec
imul
outsl
gs
adc
or
fcomi
repnz
fdiv
test
je
fldcw
int
dec
xchg
loopne
test
lock
js
fimuls
and
pop
aas
inc
add
loop
cli
out
sub
les
pop
pop
mov
mov
loop
add
out
scas
adc
inc
pop
or
jb
mov
jo
aaa
pushf
mov
ret
clc
test
aas
lock
and
outsl
push
mov
sbb
repz
in
cmp
sbb
adc
push
adc
shll
in
sbb
jae
mov
mov
frstor
ret
ljmp
dec
loopne
repz
pop
in
cmp
inc
xchg
mov
insb
xorl
mov
mov
xchg
cmpsl
call
arpl
dec
cmp
and
adc
lods
xor
stc
aad
jo
fistl
sbb
adc
jne
in
pop
or
push
cltd
adc
push
jge
push
sub
jne
orl
sti
addr16
scas
pop
mov
pusha
dec
ds
ss
xchg
sub
dec
aad
sbb
ret
cmp
cmp
insb
mov
mov
mov
rol
dec
sub
dec
fildl
aam
xchg
mov
sub
xorl
das
jge
out
pop
scas
repnz
mov
fisttpll
fwait
sub
movsb
add
push
testl
insb
jbe
xorl
sbb
or
lods
jns
addl
in
add
mov
scas
inc
pusha
dec
popf
lea
mov
xor
add
fisubrs
mov
push
mov
xor
ss
ds
mov
push
xchg
jo
pop
push
lret
stos
cwtl
push
fwait
or
pusha
or
lea
out
mov
stc
fimull
or
mov
addr16
dec
or
cltd
inc
je
lock
imul
dec
mov
mov
enter
aas
xor
sub
popf
shr
pop
push
aas
mov
mov
mov
stos
or
sarb
and
cld
add
int
mov
sbb
cmp
iret
fsubrl
xor
mov
mov
jns
pushf
xchg
lock
sbb
imul
dec
lahf
and
call
call
dec
jns
push
jo
cmp
lods
aaa
inc
aaa
mov
mov
scas
hlt
jmp
sbb
ret
pop
mov
cs
jle
imul
insl
in
xchg
lods
pop
loop
cmp
xor
pop
inc
fucomi
test
sbb
mov
shrb
lods
or
rorl
mov
cmpsl
jae
sti
iret
lret
sub
or
and
jne
in
xor
push
imul
pop
xlat
stos
fidivrs
jl
push
sub
sub
add
xor
icebp
dec
push
pop
mov
in
lods
ret
xchg
ja
daa
cmp
ret
icebp
mov
dec
in
loopne
test
push
mov
pop
sub
fwait
rorb
push
testl
xor
xchg
les
aad
pop
mov
push
push
test
adc
icebp
data16
cltd
xchg
xor
shlb
jnp
aam
xchg
sti
popf
mov
xor
popa
xchg
mov
in
lea
aaa
xchg
aam
mov
or
pop
mov
add
fisubl
or
rcrl
pusha
mov
mov
jge
daa
inc
inc
loope
outsb
add
cmp
push
jne
outsb
cwtl
je
jmp
je
call
outsl
push
in
mull
xor
iret
cmpsb
and
pop
loop
pop
scas
scas
sbb
lea
cmp
push
sbb
into
lods
pop
in
addb
mov
adc
jae
cs
mov
mov
mov
push
sub
aas
test
xchg
jne
loope
cmpsl
ljmp
adc
mov
imul
ret
stos
dec
adc
dec
outsb
xchg
push
in
addr16
dec
sub
mov
arpl
xor
ja
and
xchg
sbb
imul
mov
inc
nop
push
pop
sbb
add
lret
push
pop
push
insl
scas
mov
jg
cmp
ror
fcompp
sti
lret
sbb
cli
or
dec
pop
pop
push
fildl
pop
movsb
sub
hlt
mov
jl
xchg
add
mov
out
cmpsl
push
push
add
add
cmp
pop
pusha
inc
call
and
adc
push
pop
push
orl
add
mulb
mov
or
clc
sbb
aaa
fsubrs
in
jecxz
dec
fiaddl
jb
out
sbb
sub
push
call
sub
imul
fcmovnbe
mov
xor
subl
xchg
icebp
repnz
xchg
clc
push
push
mov
int
adc
hlt
int3
fidivrs
data16
mov
repz
and
cmp
xchg
icebp
xchg
lods
jmp
movsb
data16
mov
inc
push
jne
scas
sbb
mov
ljmp
or
xor
sbb
std
gs
push
lods
addl
ljmp
pop
xor
call
lahf
adc
mov
cmpsb
in
or
pushl
sbbl
fildl
jl
test
dec
adc
and
mov
mov
inc
shrl
mov
fnstcw
in
cld
xchg
jb
push
and
mov
les
je
jp
add
jns
lret
jp
xchg
sub
popa
jo
ja
add
mov
sti
clc
roll
push
adc
mov
dec
mov
jne
cmp
out
dec
je
daa
aam
hlt
push
scas
add
lahf
pop
mov
adc
gs
mov
xchg
mov
pop
mov
xchg
ret
in
test
sub
leave
sub
mov
jmp
xchg
rcrl
aaa
hlt
bswap
push
sarl
stc
fs
add
or
icebp
jge
cmp
imul
mov
cmp
mov
adc
ret
outsl
mov
rorl
mov
mov
xchg
jl
or
pop
test
iret
ret
mov
ds
icebp
mov
xor
and
mov
adc
or
popl
push
sarl
cltd
xchg
cmp
mov
adc
add
aam
outsb
test
sub
mov
jns
dec
jecxz
mov
fincstp
cmp
fnstcw
jl
push
push
ja
mov
pushf
stc
jmp
rorb
dec
mov
pop
mov
xor
sbb
mov
cld
fisttpl
mov
sub
xor
or
stos
mov
xchg
fucomip
nop
sub
mov
hlt
scas
and
or
xchg
popf
fdivs
scas
cwtl
cmp
jne
xor
push
jo
jns
and
das
fistl
daa
pop
jmp
xor
gs
xorb
inc
jno
outsb
or
mov
sbb
mov
inc
leave
shrl
out
jecxz
rorl
sbb
aaa
inc
lcall
bound
push
sub
das
add
jns
mov
rcr
cmpl
les
mov
or
add
sub
stos
xor
rcll
scas
cmp
push
xchg
jb
inc
rolb
sti
push
jne
adc
cmp
push
xchg
mov
lahf
mov
fstpt
enter
addr16
nop
lcall
pop
inc
xor
enter
ss
mov
out
push
sbb
mov
push
mov
sbb
addr16
or
cltd
popa
test
or
icebp
inc
notl
andl
or
lret
andl
add
inc
mov
loop
jno
in
dec
mov
lock
iret
sahf
in
ret
push
mov
aam
or
in
fistps
fisttpl
or
adc
pusha
out
sub
push
push
cld
sbb
scas
out
cmp
cwtl
stos
sti
mov
jnp
repnz
cltd
sub
imul
das
lcall
popf
rolb
lret
xchg
leave
mov
cmp
lret
stos
mov
xor
jb
fldl
sub
lret
mov
adc
push
dec
mov
cmc
mov
movsb
mov
push
mov
sbb
cmp
pop
xor
mov
in
jno
xchg
mov
xor
pop
movsb
add
enter
xchg
sub
aaa
jmp
shlb
cli
fisttpl
push
and
dec
and
es
and
sbb
sarb
out
cmpsb
pushf
adcb
fmul
pop
stos
cmp
aaa
loope
and
or
lds
and
pop
adc
jle
je
int
repnz
sub
jl
test
xchg
or
or
int3
pop
or
add
inc
mov
mov
cld
movsl
add
scas
loope
sbb
je
jo
mov
and
pop
incl
lock
loope
inc
sbb
push
fs
ds
dec
enter
xchg
xor
cwtl
xor
mov
movsl
into
aas
push
jns
out
bound
scas
outsl
add
popa
cmp
cmp
loopne
hlt
stos
cmp
pop
or
sub
mov
stos
pop
cltd
ljmp
lea
daa
cmp
or
aad
imul
ss
dec
int3
add
flds
dec
jb
stos
jo
sbb
adc
mov
data16
push
mov
lods
jbe
inc
xchg
push
cmp
inc
roll
fwait
jne
pop
popf
rcll
in
test
out
out
ljmp
sahf
orb
pop
mov
dec
pusha
in
pop
out
lea
pop
mov
test
inc
stc
stos
mov
sub
and
sbb
mov
sub
mov
ja
mov
inc
incb
mov
aad
add
mov
mov
cmpsb
fnstenv
stos
dec
aaa
cli
scas
sbb
mov
adc
jl
rclb
lret
mov
aam
es
sub
dec
es
xlat
into
mov
dec
pop
test
mov
stc
xor
sbb
test
jmp
sub
lods
pop
mov
movsl
test
divl
sub
pop
sub
rcrl
icebp
sahf
pop
es
rorb
ss
push
inc
pushf
into
hlt
inc
adc
sbb
out
pop
xor
lret
aaa
sub
push
push
pop
ss
data16
push
jmp
movl
cmp
push
or
sbb
mov
into
mov
mov
sbb
add
jmp
cli
mov
inc
shl
push
fsubrl
out
push
ss
mov
enter
dec
lahf
inc
shlb
mov
aaa
mov
loopne
xchg
std
xor
pop
xchg
cmpb
push
arpl
les
dec
insb
lret
addl
inc
inc
jmp
pushf
aaa
push
int
lret
jle
xor
pop
sub
lock
aad
outsb
cld
mov
inc
xor
ss
jnp
jbe
jge
jns
sub
xor
lret
insl
aad
mov
cltd
rcll
dec
sbbb
and
movsl
jecxz
push
fildll
fcmovne
cltd
aam
jae
bound
pop
sbbl
daa
loopne
movsl
sub
aam
out
adc
dec
mov
pop
cltd
sub
scas
rorb
jle
jp
pushl
mov
pop
sbb
xchg
jae
adc
out
jle
pushl
sub
cs
stc
sub
lods
lods
push
enter
in
cmp
pop
cmp
mov
xchg
fadd
mov
xchg
mov
fadds
cld
shl
xchg
add
lret
fnstcw
mov
les
sbb
out
mov
aaa
cmc
adc
jecxz
pushw
and
idivb
out
sbb
test
sub
cmpsl
lret
repz
push
xchg
lcall
xor
sub
and
loope
push
xor
xchg
stc
fidivrl
leave
jmp
std
loop
cmpsb
adc
roll
jle
sahf
or
pop
cltd
mov
jns
sub
xlat
mov
push
outsb
add
out
arpl
mov
mov
inc
mov
dec
add
lea
rolb
or
test
ds
fmull
cld
push
xchg
mov
fbstp
pop
xchg
insb
cmp
mov
jle
jp
push
jbe
dec
mov
cmpsb
ja
mov
inc
imul
rcr
inc
aam
mov
mov
rol
push
xchg
pop
fcoml
iret
shll
inc
pop
popf
cwtl
sarl
sbb
push
pop
xchg
cli
mov
push
mov
and
cltd
xor
lds
shlb
fmull
mov
out
sub
roll
aas
fdivrl
push
lea
int3
xchg
ficompl
outsb
dec
inc
nop
inc
mov
pop
lret
push
mov
or
inc
or
in
mov
adc
rcl
lds
dec
cmp
fs
insl
mov
imul
sub
xchg
push
fs
addr16
popf
aam
jp
jmp
mov
xchg
sbb
popa
pop
andb
sbb
into
scas
dec
and
ljmp
mov
les
inc
int
test
pop
or
and
icebp
mov
in
gs
inc
stos
mov
std
dec
jb
push
and
rolb
jge
mov
mov
xchg
out
sti
xor
cmp
fistps
cmp
inc
and
dec
cltd
add
test
stc
push
xor
mov
mov
ds
imul
insl
jbe
loope
pop
push
ds
pusha
test
jae
pop
jns
jns
ljmp
cmpsb
fs
or
clc
scas
add
pop
sbb
aad
fcomip
and
sub
mov
adc
lds
mov
xor
adc
out
lcall
lea
cwtl
add
adc
lcall
jg
gs
loopne
nop
test
pop
imul
jl
xchg
jno
xchg
lock
mov
push
xor
adc
lock
add
jmp
xchg
fsubrs
dec
cltd
std
jno
mov
mov
idiv
insb
add
jle
aad
xor
repz
incl
repz
shrb
cs
pop
sbb
ret
xchg
cmpsl
daa
add
popf
jp
inc
adc
dec
mov
fwait
jmp
scas
repnz
in
jp
and
cmpl
mov
in
mov
push
inc
pop
aam
repz
push
xchg
dec
in
sub
sti
ja
std
fcmovnb
ficoml
sub
mov
push
inc
cmp
jmp
das
test
scas
ficompl
pop
lds
cmp
movsl
mov
ret
outsb
ljmp
pop
ret
and
cmpsl
jne
mov
in
pop
jmp
dec
jnp
sbbw
jno
insl
adc
or
test
sbb
adc
addr16
aam
jno
aad
mov
xchg
pushf
push
lcall
out
test
and
sbb
ds
in
or
inc
test
imul
xchg
imull
sbb
outsl
push
mov
mov
mov
xor
xor
mov
push
cmpsl
xlat
test
and
cmpsb
out
lds
mov
push
xchg
cmp
in
sbb
jmp
sbb
cltd
hlt
loope
lea
push
mov
gs
adc
dec
fdivrl
or
jg
dec
lds
lret
outsl
jb
jnp
jae
or
xor
pop
jns
pop
pop
push
mov
mov
sbb
loopne
mov
in
or
jmp
inc
orl
cld
and
popa
mov
fsubrs
jmp
push
ret
sub
jno
add
frstor
out
jb
fcoml
iret
jecxz
xchg
test
stos
lahf
and
shr
push
inc
xor
rep
leave
js
xchg
adc
mov
dec
push
inc
sbb
stos
ljmp
repnz
aas
int
cmc
dec
shlb
scas
adc
outsl
dec
mov
lods
jo
adc
mov
xor
xchg
sub
adc
pop
cld
out
and
inc
sub
in
adc
xlat
cmpsb
aas
dec
fsub
les
add
cwtl
orl
popa
push
int
cmpsl
into
fiadds
in
pop
mov
mov
sub
xchg
into
into
jno
gs
dec
lods
xchg
inc
int3
mov
push
imul
das
scas
jne
xchg
sti
xor
or
dec
mov
add
push
mov
push
ljmp
or
rep
xor
sub
dec
inc
xor
int3
push
dec
or
negb
pop
mov
hlt
into
cmpl
mov
lds
mov
lods
fisubl
sbb
mov
and
inc
ljmp
or
lahf
sub
gs
adc
decl
xchg
adc
loopne
add
add
add
push
xchg
sbb
fcmovu
pushf
bt
xor
out
or
in
jl
pop
sub
inc
cmovne
cmc
lahf
ljmp
outsb
inc
push
popa
jmp
sbb
ficomps
add
iret
xor
fistpll
in
repz
clc
mov
mov
outsb
jnp
int3
pop
movsb
into
pop
or
ss
jns
mull
out
mov
jno
int
icebp
into
sar
outsl
mov
xor
sbb
jb
mov
sbb
cltd
mov
jg
bound
insl
divl
les
repnz
out
str
les
sahf
ss
imul
push
stc
dec
or
mov
mov
cmp
pusha
xchg
cmpsb
mov
xchg
lahf
mov
add
into
movsb
aam
mov
xchg
das
insl
or
fidivrs
pop
and
inc
js
dec
inc
lods
jo
sbb
nop
pop
test
in
dec
add
xor
push
push
rorb
mov
mov
jo
adc
ljmp
std
cmc
rorb
lahf
sub
jae
lcall
in
push
fwait
jecxz
xchg
mov
lahf
fsubrl
xchg
fildll
inc
and
mov
adc
ja
cmpsl
xchg
xchg
scas
xor
scas
jbe
add
stos
arpl
pop
pop
jb
daa
mov
ljmp
dec
pop
xorb
lret
xorl
pusha
xlat
mov
adc
xor
mov
out
dec
nop
popa
or
je
mov
sub
cmpsl
and
mov
dec
dec
dec
xor
sbb
mov
ja
xchg
call
notl
call
repz
push
mov
test
push
les
lds
adc
fwait
xlat
rcll
sbb
aad
adcl
push
dec
pop
xor
jns
scas
jb
out
rol
out
add
sub
and
aad
mov
jno
xor
pop
ja
push
xchg
cmp
push
in
sbb
ljmp
and
mov
dec
mov
sub
pop
push
pop
test
lea
xchg
push
mov
xor
popa
push
mov
into
xchg
cmp
inc
add
pop
sbbl
pop
shlb
lret
xor
ds
push
test
nop
inc
sbb
out
or
in
or
mov
insl
loope
push
fs
xor
fimull
push
xchg
ds
sti
adcb
lods
push
bound
sub
int
ds
pushf
out
jecxz
mov
push
pop
arpl
data16
data16
das
adc
mov
fpatan
inc
cmp
adc
xor
xor
in
fsubrs
ljmp
fldt
dec
clc
push
bound
mov
add
outsl
out
lret
adc
mov
jo
sarb
dec
push
aad
mov
xchg
sub
out
xor
cmp
xor
fadd
std
stc
cltd
mov
mov
sub
pop
xchg
shlb
sub
jbe
pop
xor
push
movsl
cs
xchg
mov
jae
or
addr16
test
mov
push
icebp
in
ret
jl
xchg
aam
ds
add
sub
int3
subb
mov
fcmove
pop
dec
imul
or
sub
enter
xor
jne
mov
push
mov
dec
mov
test
push
push
and
inc
cmpl
scas
inc
fcoml
xor
rol
fildll
rolb
loope
into
mov
jg
inc
push
mov
jnp
jo
stc
shl
cmp
mov
call
ret
cmp
insb
loopne
mov
jp
push
imul
gs
sub
jae
or
add
xchg
cmpsl
sahf
test
outsb
dec
or
das
pop
jl
push
mov
in
jnp
jle
adc
mov
ret
pop
dec
pop
insl
sub
sbb
fmul
xorl
int
loop
loope
cltd
sahf
nop
out
xor
test
dec
imul
mov
mov
push
or
push
cmpsl
inc
mov
adc
push
les
xchg
insl
mov
xchg
cmp
adc
push
push
add
mov
mov
fwait
pop
sti
cltd
inc
add
pop
mov
or
cmp
das
jnp
mov
in
les
imul
movsl
xchg
sbb
test
mov
jnp
dec
mov
filds
xchg
mov
inc
sbb
adc
lds
pop
jmp
dec
adc
sbb
jmp
fwait
vcvtps2dq
or
in
adc
sti
in
sub
ret
hlt
add
in
lds
or
data16
xchg
xor
xor
fdivr
out
sub
add
test
xchg
fdivl
jb
data16
push
mov
jo
fidivrl
sub
test
loopne
xchg
jg
inc
andl
sub
sub
repz
mov
push
add
adcl
pop
mov
dec
or
mov
ficoms
psubb
cltd
call
xchg
xchg
xlat
mov
sbbl
push
fmuls
mov
xor
sbb
repnz
xor
popa
lret
icebp
mov
inc
pop
inc
shrl
jmp
imul
pop
cmp
adc
jno
insb
mov
mov
pop
push
adc
test
daa
cmc
push
mov
jp
enter
sbb
jmp
int
jl
jo
insb
jg
adc
cmp
iret
lds
ret
out
cmp
aam
sbb
xchg
and
movsl
adc
ret
jbe
test
sti
push
pop
fwait
xchg
sbb
xchg
hlt
push
adc
out
hlt
ret
add
pop
ss
inc
mov
std
cs
daa
xchg
or
enter
or
cmpsl
movsb
rcll
xchg
pop
push
add
pop
scas
cmpsl
cmp
jmp
inc
xchg
hlt
cmp
add
lock
add
xor
test
add
int
into
mov
pusha
sub
lock
sub
call
xor
sahf
ret
dec
add
inc
decl
insl
loop
mov
int3
cmp
inc
adc
push
adc
mov
inc
pop
pop
fs
dec
inc
repz
sbb
dec
push
loope
sub
sar
mov
or
fnstcw
test
test
push
iret
push
in
cmpb
push
or
xor
inc
jbe
sbb
out
shlb
dec
fdivl
sbb
mov
xlat
aad
in
mov
lock
les
sahf
mov
not
call
jp
xchg
jp
and
es
inc
iret
or
adc
mov
insl
mov
sbbb
repz
imul
pop
or
nop
leave
js
lahf
loope
movups
popf
mov
cmp
cli
jecxz
add
cmp
inc
pop
pop
lds
inc
pop
stos
ficoml
movsl
add
cmc
hlt
fldt
dec
jbe
imul
push
jecxz
xor
dec
xor
mov
pop
outsl
aaa
movsl
mov
xchg
mov
xor
mov
stc
arpl
fbld
xor
or
loop
fdivrs
insb
ret
inc
sahf
cmp
and
mov
or
out
push
dec
outsl
pop
loopne
pop
test
aas
pop
out
xchg
loopne
stos
subb
pushf
push
dec
mov
lds
sub
or
movsb
mov
movsl
lahf
jno
push
icebp
sahf
pop
xchg
icebp
test
adc
push
das
fidivrs
dec
bound
insl
push
push
dec
pushf
jnp
mov
cmp
jbe
lods
dec
aam
iret
pop
movsl
mov
inc
or
ret
mov
popl
xor
aas
sbb
xchg
push
and
addr16
jno
xor
psraw
pusha
mov
xor
push
push
add
and
aas
call
dec
cmpsl
test
push
mov
sbb
syscall
xchg
fsubrs
inc
pushf
and
inc
bound
movsl
push
push
ds
cmpsl
mov
pop
mov
adc
sub
clc
sub
adc
scas
xchg
and
mov
cld
push
test
sub
push
xor
stc
das
cmp
mov
push
test
push
imul
shll
sbb
ljmp
jl
mov
clc
stos
stc
xor
xchg
cmpsb
push
adc
cmpsl
sbb
arpl
bound
mov
or
in
adc
inc
cmpsb
aad
out
push
or
mov
mov
rorl
xchg
outsb
std
and
insb
mov
xchg
dec
inc
ss
fisttpl
xchg
divb
ljmp
push
xor
xchg
lods
mov
adc
in
adc
pop
dec
inc
stc
mov
mov
aas
pop
sbb
xchg
in
cmp
add
inc
lock
add
mov
loope
rcll
jp
stos
add
sahf
dec
rcrl
cli
xchg
xchg
dec
push
shrl
loop
scas
dec
jae
cmp
lret
fisubl
jb
mov
iret
arpl
mov
and
in
and
dec
nop
cmp
xchg
pop
and
add
xor
jne
inc
aam
jle
mov
in
lret
xlat
jmp
xor
ret
repnz
das
and
fisubs
aad
pop
jno
leave
cmc
add
push
pop
mov
xchg
aam
mov
insl
clc
sub
mov
rclb
fwait
les
popf
xchg
lcall
or
mov
or
popf
mov
or
mov
scas
daa
or
xor
stc
push
mov
cmpsb
mov
or
and
dec
lds
dec
mov
inc
in
shl
stos
lret
aad
cmp
ret
das
push
xchg
repz
push
cmpsl
ja
ss
loope
call
jl
pop
in
xor
or
in
lret
ffreep
lcall
lahf
div
sbb
fcompl
outsl
xchg
cmp
sub
cmp
jp
cmp
loopne
or
mov
mov
or
repnz
push
sbb
rcl
nop
jae
ret
and
jecxz
jmp
jmp
mov
jae
xchg
lret
adc
push
movsl
dec
dec
ret
dec
mov
mov
sub
sbbb
add
cmp
xchg
jae
sub
mov
in
xor
push
xor
push
mov
hlt
jne
mov
cmp
mov
cld
mov
mov
ss
int
jmp
das
adc
inc
xchg
xor
mov
out
dec
or
xorb
sub
fimuls
cwtl
movsb
mov
cmp
adcl
jbe
inc
incl
cmp
and
push
xchg
push
in
pusha
mov
scas
mov
add
mov
test
lcall
pop
push
test
mov
mov
rep
dec
xor
call
insb
mov
sahf
test
xor
xchg
adc
or
jae
xchg
in
xchg
fwait
test
fsincos
push
ss
jmp
insl
cmp
outsb
inc
insl
cltd
and
push
mov
out
test
and
and
cmp
dec
push
sub
cmp
mov
sarb
sub
mov
hlt
jmp
ds
mov
mov
jecxz
cmp
mov
cli
popf
or
add
jns
sub
mov
mov
xchg
aam
lock
jle
clc
add
mov
sub
push
fnstcw
or
enter
lret
subl
icebp
pop
push
dec
dec
aam
lea
cli
pusha
clc
sbb
adc
leave
out
adc
xchg
sbb
dec
pop
pop
dec
inc
sti
cmp
xorb
push
dec
xor
enter
sbb
cltd
and
push
xchg
pusha
imul
jecxz
dec
jmp
jmp
cmp
hlt
hlt
jbe
mov
pop
mov
jle
push
pop
jno
fistpll
push
rorb
mov
repz
sub
leave
into
imul
into
mov
sub
lea
dec
insl
pusha
into
cmpsl
pop
ljmp
and
into
mov
je
mov
bound
jno
fwait
cmc
int3
out
add
aad
lods
sub
pop
int3
imul
sbb
add
repnz
shrl
outsb
or
jle
add
pop
stos
lea
pop
and
xor
mov
fcoms
data16
out
repnz
mov
movsb
ljmp
inc
out
loopne
enter
mov
or
sahf
arpl
jmp
sahf
repz
jmp
mov
mov
jmp
stc
arpl
xor
cld
dec
in
jl
fs
mov
mov
movsl
mov
outsl
cmp
mov
inc
add
cmp
repz
out
leave
sbb
test
jle
pushf
xor
scas
and
xor
push
xor
mov
add
xchg
mov
mov
repz
stos
mov
lahf
fnsave
incl
or
inc
repnz
cmc
jno
sub
mov
sub
pop
pop
sahf
mov
xor
pop
lret
push
pop
movsl
cmpsb
xor
incl
or
fdivl
sahf
sbb
mov
or
sub
cmpsl
xor
out
cmp
out
dec
popf
sti
jns
fcmovnu
jge
fs
mov
inc
xlat
sub
std
dec
jae
andl
rorl
sbb
cli
arpl
xlat
hlt
mov
jl
in
lock
cmpsl
vpunpcklqdq
adc
add
pop
das
dec
push
xor
adc
sbb
stc
or
mov
mov
mov
adc
fdivs
push
xchg
cmpsb
pop
lods
sub
push
cs
xor
fiadds
add
mov
stos
lods
aas
xor
mov
mov
sbb
xchg
out
shlb
fldcw
fdivs
push
roll
aad
adc
add
sbb
test
sub
pop
mov
push
dec
or
aaa
sti
jp
mov
in
pop
adc
inc
aad
stos
pop
cmp
jo
imul
mov
or
mov
pop
lret
inc
dec
pop
mov
popa
ja
mov
pushf
and
das
sub
pushf
sbb
popl
jmp
ret
jb
push
sbbl
adc
enter
add
rcll
ret
sbb
in
cmpsb
jge
xchg
scas
or
jb
mov
mov
sub
fcmove
push
add
bound
mov
pop
sbb
cs
adc
test
jle
mov
dec
xchg
xchg
pop
insl
loope
push
arpl
mov
mov
pop
inc
xor
dec
adcb
jge
pop
mov
add
or
mov
pop
scas
dec
shr
aad
xchg
push
mov
mov
or
stc
add
sbb
int3
movsl
loope
pop
icebp
adc
adcl
pop
cmp
jp
xchg
stos
loop
in
mov
repz
dec
insb
scas
inc
enter
push
out
and
cmp
xchg
fidivs
out
shll
jb
jno
xor
fnsetpm(287
fistpl
add
and
jne
lea
inc
and
js
mov
repz
js
mov
mov
lret
push
sbb
movsb
dec
dec
mov
int3
xchg
mov
xor
out
or
push
xor
or
mov
push
insb
xrelease
sti
xchg
push
int3
push
or
push
rorb
subb
fwait
clc
int
mov
aad
shll
dec
cli
mov
ss
std
fdivrl
into
insl
sbb
add
test
adcl
daa
int
lret
pop
mov
mov
pop
cltd
bnd
lods
stos
add
push
mov
loop
daa
adc
imul
mov
repnz
cmp
or
inc
out
fmull
rolb
or
aam
cltd
sbbb
jnp
repnz
mov
fidivrl
stc
pop
mov
mov
incl
inc
nop
leave
xchg
imul
les
sub
adc
xor
mov
repz
jno
mov
pop
ret
inc
push
rorl
mov
sbb
mov
jns
inc
je
out
lds
pop
and
sub
push
aaa
mov
cmpsb
mov
inc
mov
shrl
xor
test
xor
sbb
test
je
std
into
in
outsb
rep
jae
adc
sbb
hlt
jnp
daa
mov
repz
ja
xchg
mov
and
mov
in
in
mov
ss
ja
loopne
mov
lcall
dec
adc
jp
add
cmp
and
sbbl
aam
rolb
and
dec
or
icebp
xchg
inc
aad
in
fstpl
add
in
push
mov
pop
mov
repnz
ror
dec
sub
xchg
icebp
popa
aas
mov
mov
jbe
sub
mov
in
sub
scas
pop
pop
sahf
stos
mov
lcall
mov
movsb
sub
lock
cli
test
roll
dec
lods
mov
jl
ret
cltd
and
orb
or
cli
xorb
adc
mull
cli
test
inc
dec
mov
rolb
xchg
adc
das
or
dec
ror
stos
xchg
pop
pusha
jne
sbb
xor
decl
bnd
ds
jno
sahf
jg
daa
arpl
mov
and
insl
pop
int3
rorl
cmp
shlb
jae
sbb
mov
xor
or
cltd
aad
jo
push
rorl
lods
pop
out
icebp
shll
mov
jb
aaa
iret
and
or
fldt
or
sbb
lret
add
out
sti
repz
xchg
adc
stos
or
add
xchg
or
sbb
out
sbb
aad
test
jae
cltd
movsb
xchg
aad
xor
lret
mov
repnz
out
pushf
push
push
or
mov
roll
mov
mov
push
xor
inc
mov
adc
jns
jp
fnstenv
arpl
pop
lret
adc
flds
pushf
lahf
movsb
inc
sub
dec
mov
mov
sbb
adc
in
or
jmp
push
jecxz
loopne
or
shlb
pop
daa
mov
cli
stos
mov
shll
sub
div
xchg
dec
pop
cmpsl
add
outsb
push
test
in
in
test
ror
decl
xorl
jle
xchg
stos
out
movsb
add
into
mov
sub
incb
rcr
in
dec
scas
into
das
adc
test
inc
cmp
test
adc
mov
and
adc
and
loopne
pop
fwait
push
and
mov
lcall
xchg
cmp
add
rorl
mov
and
call
icebp
insl
mov
adc
pop
testl
jnp
jnp
jbe
xchg
imulb
repnz
xchg
and
inc
ficompl
pushf
jo
lcall
mov
testl
shll
nop
iret
and
jbe
push
xor
cvtdq2ps
mov
sbb
flds
jp
dec
rorb
cmp
aas
push
lods
addb
inc
fstps
lcall
mov
clc
popa
ror
lcall
push
xchg
sbb
pop
mov
cltd
and
mov
aaa
or
in
ucomiss
fisubrs
ljmp
es
arpl
gs
stos
xchg
popf
add
popa
mov
pop
jp
add
int3
cli
shll
cmpsl
dec
sti
dec
rclb
adc
fbld
jp
and
push
bound
sbb
mov
add
icebp
cli
stos
xor
or
push
shrb
mov
ret
mov
fidivs
jmp
mov
loopne
les
adc
stos
push
or
mov
add
mov
pushl
mov
or
mov
jb
pop
ret
sahf
in
add
lcall
insb
cmpsl
inc
adc
aam
mov
mov
or
addr16
fiaddl
jle
ss
mov
adc
pusha
mov
push
js
sub
fdivr
jno
and
jmp
add
dec
popf
int
push
shrb
movsl
cltd
cwtl
adc
lds
pop
adc
ret
push
jg
movsl
push
mov
jg
xor
imulb
sub
jp
cmp
fcmovnbe
ret
movsb
movsl
out
lret
pop
test
dec
jmp
add
addl
stos
lea
mov
pop
push
enter
aaa
xor
jecxz
int3
jg
jns
jnp
cltd
aaa
push
popf
outsl
test
mov
dec
adcl
push
sub
dec
dec
adc
ljmp
xchg
stos
sbb
insl
xchg
jl
outsb
pop
inc
dec
cs
inc
pop
adc
inc
xchg
lods
add
ds
orb
out
sub
or
cmp
push
cmp
in
fmulp
add
or
mov
or
jecxz
sub
xor
dec
arpl
cmp
inc
scas
addr16
out
jecxz
lods
mov
xlat
jne
inc
ret
push
cltd
mov
inc
mov
mov
sub
mov
jne
repnz
push
roll
sti
sub
or
pusha
lahf
cltd
sbb
sarb
bound
mov
xor
xchg
mov
rcrb
cmp
jmp
mov
fists
hlt
cmp
mov
pop
xor
mov
pop
mov
mov
cld
cli
inc
icebp
cs
std
inc
inc
fists
or
jmp
repnz
loop
push
scas
rorl
cmp
add
nop
jno
adc
stc
dec
scas
xlat
cli
shl
or
xchg
repz
cmp
lahf
mov
out
cmp
pop
pop
jecxz
je
gs
in
ds
out
and
outsb
jmp
pop
das
adc
es
repnz
cmp
pop
fs
aad
jo
cmp
jge
scas
inc
pop
sbb
push
test
mov
js
cld
mov
mov
xchg
adc
popa
out
nop
mov
and
xor
push
mov
sub
push
xor
stos
les
pop
cmc
sub
jp
fstpl
sbb
mov
call
jp
lahf
xor
ja
xorb
lcall
andl
sub
add
mov
push
xor
inc
mov
lret
cmc
cmp
test
mov
leave
mov
xchg
cli
push
ljmp
adc
or
mov
xor
movb
mulb
add
or
call
call
fidivrl
push
sub
and
fs
adc
mov
out
cs
cli
ret
sbb
pop
adc
and
add
fadds
fdivs
pop
dec
xchg
test
mov
push
rclb
xor
mov
lods
scas
push
inc
aam
sarl
pop
lods
ljmp
ret
aad
inc
mov
mov
clc
ljmp
pop
sub
jnp
ja
inc
mov
or
int
outsl
mov
mov
xchg
pop
lret
push
cli
movl
xchg
pop
lea
gs
int
dec
sub
insl
push
je
repnz
add
add
pop
push
lret
lds
pop
outsl
add
fnstsw
loopne
pop
add
jge
xor
mov
mov
mov
xchg
call
icebp
mov
mov
std
push
push
mov
mov
jbe
add
push
and
stos
inc
in
loop
xchg
inc
add
repz
popf
fwait
out
add
mov
in
mov
call
inc
mov
xchg
add
imul
mov
out
fidivrs
pop
pop
mov
fisttpll
adc
sbb
aad
mov
sub
mov
lahf
xor
mov
imul
das
ds
adc
cwtl
push
xchg
xchg
sub
loopne
sbb
dec
sbb
mov
or
orb
js
je
outsl
ljmp
add
icebp
push
add
loop
aam
adc
push
cmp
sub
movsb
js
xor
mov
hlt
pop
add
arpl
xor
or
dec
jl
in
scas
jp
add
outsl
idiv
shrl
js
cmpsb
notb
sub
jge
jmp
xchg
adc
int
or
incb
je
push
pop
mov
xlat
xchg
rcrl
add
push
mov
in
enter
sbb
jmp
jmp
push
inc
loopne
int3
xor
clc
call
in
popf
popa
pop
pushf
sbb
mov
insb
sbb
push
faddl
and
pop
pop
cmp
in
lcall
mov
cli
loopne
outsl
clc
fsubr
push
in
sub
andl
mov
int3
mov
test
aad
cmpsb
mov
add
in
sbb
dec
push
pop
insb
xchg
in
cmc
repz
pop
cs
jge
xor
cwtl
push
mov
data16
icebp
fcoms
nopl
push
xchg
push
rol
out
cmp
lods
xlat
sub
test
fmulp
push
mov
mov
push
shll
lea
ljmp
iret
sub
mov
pop
unpcklps
pop
or
xchg
adc
or
xchg
insb
cli
rorb
push
fwait
insb
in
jno
pop
scas
nop
mov
add
es
sbb
cs
cmpsb
insb
sub
adc
and
mov
dec
pop
push
and
mov
mov
push
lahf
mov
ret
sbb
ja
xor
add
lods
pop
adc
in
jecxz
fidivs
or
pop
sub
out
jg
dec
sbb
pop
out
sti
jns
lret
sbb
cwtl
sbb
in
rcrb
jge
dec
mov
inc
xchg
mov
xor
shll
sbb
cmpsl
inc
inc
dec
xchg
xchg
sti
adc
dec
scas
lea
in
xor
aad
pop
xor
imul
mov
mov
xchg
iret
adc
jle
ss
and
mov
mov
ljmp
adc
icebp
jp
inc
mov
dec
stos
bound
arpl
mov
mov
cli
xchg
fistpl
cmpsl
pop
scas
dec
insl
nop
fs
insb
xlat
xchg
iret
in
xlat
cmpsl
dec
je
mov
imul
push
pop
rorl
jle
xor
shlb
lret
clc
fcomp
in
mov
or
movsb
mov
div
lock
jg
adc
mov
add
ret
xor
popf
add
mov
rcl
cmp
dec
lock
test
mov
imul
inc
sbb
shll
xchg
mov
push
xor
out
adc
insb
mov
fs
push
push
aas
mov
jno
push
jns
gs
xor
popf
lods
arpl
adc
sub
ret
and
jle
ss
push
dec
dec
xorb
and
fcomi
data16
mov
data16
inc
sub
push
pop
mov
popf
pop
add
faddp
test
adc
jnp
jecxz
sti
sub
sub
jne
test
bound
cmp
scas
sbb
push
xchg
sar
mov
sub
sti
mov
push
daa
repnz
add
ret
xchg
nop
movsb
or
frstor
xchg
sbb
push
pushl
sbb
xor
and
mov
sbb
xor
sar
or
repnz
push
notl
stos
cmp
movsb
xlat
or
xchg
idivl
lods
push
aam
lret
or
cmpsl
jecxz
cwtl
maxps
out
or
xor
in
aad
mov
fsubrl
mov
pop
xchg
mov
xor
sbb
fdivr
test
add
xchg
or
jbe
inc
es
das
push
dec
cmpsb
xor
sarl
call
fldl
push
lods
test
fistl
into
pop
bnd
dec
sub
or
jmp
mov
xchg
lret
jnp
fildll
imul
pushf
sahf
mov
mov
stos
lret
lods
cld
dec
xor
lret
push
pop
call
imul
xchg
mov
dec
hlt
mov
and
test
inc
movl
jb
nop
sti
jg
lret
add
insl
fistpll
imul
cmp
lods
les
mov
dec
in
and
pop
out
xchg
push
cmp
in
clc
jno
popa
dec
dec
int
adc
test
out
pop
icebp
aaa
rcr
out
das
dec
lahf
sbb
sub
cmp
sbb
out
pop
cwtl
clc
stos
gs
cld
dec
sub
or
mov
push
aam
or
or
push
or
arpl
and
adc
sbb
inc
push
or
les
out
sub
or
enter
fdivrl
stos
sar
pop
loopne
pop
push
movsb
jnp
xchg
nop
popa
subl
jge
repnz
adc
mov
popf
jg
push
repnz
stos
lds
sahf
in
xchg
pop
test
test
ret
inc
sbbl
js
add
sub
lcall
lods
sbbl
out
push
jecxz
jb
in
push
inc
inc
or
add
enter
dec
jl
data16
scas
sub
cmp
push
std
mov
scas
ja
int3
pop
flds
and
add
xchg
popf
xchg
jg
mov
jg
push
sbb
jb
jg
mov
add
pop
out
sarl
insl
sahf
xor
sbb
roll
xchg
inc
pop
push
adc
lock
mov
sar
js
xorb
sub
orl
add
and
xor
ss
test
insl
test
inc
loop
mov
pop
in
xchg
adc
sbb
fcomip
mov
cltd
ja
pop
xor
pop
xor
outsb
adc
mov
push
or
cmp
or
into
negl
or
or
or
cmp
lods
sahf
pop
fldl
jno
push
fsubp
cmp
jne
and
push
pushf
ret
int
jge
xor
andl
cmp
fbstp
xchg
loopne
aad
mov
adc
sti
jg
fbld
cmpb
popf
insl
aam
pop
pop
cmpsb
subl
fldenv
jo
sub
arpl
movsl
ficoms
lcall
pop
test
sahf
out
sbb
push
xchg
jno
mull
imul
push
push
popf
inc
sbb
lret
aad
scas
ror
xchg
cs
notl
bnd
or
out
ficoms
decb
dec
gs
adc
shlb
hlt
xor
jp
int3
push
dec
mov
mov
ja
fwait
aam
sub
cs
xchg
mov
shl
jge
js
arpl
jl
xor
cwtl
pop
in
lahf
das
pop
inc
and
mov
divl
pop
inc
hlt
dec
fst
es
or
mov
and
loopne
jl
pusha
out
or
out
shlb
mov
aam
push
xchg
pop
mov
fwait
insb
adc
out
adc
insl
test
sbb
jae
pmulhuw
jle
lods
inc
inc
and
xchg
pop
mov
leave
std
test
sbb
les
or
imul
inc
mov
mov
sti
call
iret
jmp
adcb
outsb
das
cmpsl
test
popa
shrb
add
rorb
or
pushf
sbb
pop
pop
pop
mov
add
xor
cmp
pop
add
lock
adc
inc
sarl
mov
lods
adc
movd
sarb
scas
dec
sbb
mov
dec
test
and
fidivrs
pop
cmpb
sarb
add
outsb
pop
jns,pt
in
aad
fidivrs
mov
cmp
inc
js
mov
mov
jmp
inc
sub
xlat
push
test
test
sti
jb
and
sarl
push
mov
xorb
fnstcw
or
pop
test
pushf
sub
incb
loopne
fisttps
inc
stos
in
vpsubq
inc
jns
fwait
out
adc
aas
pop
pop
inc
or
cmp
sti
jl
test
scas
enter
inc
push
jne
in
repnz
adc
cmp
add
pusha
cmp
jecxz
fs
or
mov
jmp
push
add
pop
nop
pushf
das
add
ret
outsb
cmc
jl
lcall
roll
test
sbb
pushf
inc
sbb
inc
push
mov
mov
fwait
aaa
repnz
leave
add
insl
or
sub
mul
xchg
push
lock
mov
pop
test
test
xchg
or
fldt
lods
push
adc
cmpb
cld
or
ljmp
sub
jb
jmp
jg
stos
fadd
movsb
mov
dec
mov
imul
scas
pop
pop
add
jg
pop
pusha
in
aam
adc
mov
rol
repz
imul
mov
lods
mov
sbb
ror
imul
imul
insb
pop
or
inc
xor
test
aas
ret
shll
push
pusha
cltd
leave
mov
fsub
adc
in
push
pusha
sbb
or
int
fyl2x
xchg
adcb
je
mov
and
or
ds
stos
lret
cld
and
movsb
cmpsl
rclb
xlat
xor
movsb
cld
and
fwait
xchg
lret
out
jo
jae
mov
xchg
sub
shrl
add
mov
and
mov
fcmovu
mov
sub
sbb
xor
nop
sub
mov
mov
fidivrs
lods
iret
jmp
neg
popf
push
add
push
jbe
adc
sti
push
push
mov
sbb
fs
ja
inc
mov
imul
xor
jae
in
sub
leave
pop
cmp
jmp
movsb
xchg
loope
sub
pop
repz
lods
dec
int3
mov
fstpl
cmp
jae
fucom
mov
scas
into
mov
mov
js
inc
xchg
inc
jle
mov
or
sahf
xchg
mov
js
insl
loop
outsl
lcall
pop
pop
xchg
or
popf
mov
xorl
clc
cmpsb
bound
mov
cmp
in
inc
loop
movsb
aas
pop
sbb
jmp
ds
lea
pop
push
jge
cmpsb
sub
mov
and
dec
cmp
add
insl
cmp
cmp
faddl
push
push
shll
or
out
mov
leave
jl
cmp
pushf
sbb
dec
jle
xchg
repz
pop
cmc
add
sub
xchg
dec
pop
stos
push
scas
arpl
sub
repnz
mov
aaa
xchg
aad
addr16
mov
mov
mov
adc
mov
mulb
pop
aad
in
stc
push
std
lds
addr16
lds
lock
cmpsb
scas
add
inc
adc
ljmp
mov
mov
stos
fisubl
insb
mov
sti
push
cmpsl
fs
jge
sub
loope
aaa
movsb
fwait
sbb
cli
loope
and
das
ret
int3
aas
imul
sti
aas
cmp
or
mov
jae
adc
es
cld
push
push
movsl
mov
fisttps
int
push
jp
xchg
xchg
lods
imul
movsb
ljmp
shlb
subl
stos
sbb
data16
xor
mov
hlt
dec
je
xchg
mov
imul
xchg
sub
mov
and
lahf
adc
fnstcw
daa
cmpsb
jg
sub
xor
push
scas
scas
out
sub
ret
push
xlat
mov
out
clc
push
fistl
adc
and
adc
and
mov
stos
in
mov
sahf
jne
add
mov
cmp
push
adc
mov
sub
cmpb
cmp
cmpsl
aam
sbb
test
jecxz
cmp
and
mov
lock
sub
inc
mov
adc
arpl
xor
addb
gs
adc
sti
outsl
ret
scas
aaa
xor
adc
sub
jp
jns,pn
push
aam
ret
scas
cli
repnz
andl
decb
pop
pop
iret
sbb
fs
arpl
test
xchg
stos
in
jl
add
mov
add
faddl
std
ret
rcrl
inc
dec
mov
sti
cmp
add
push
xchg
cwtl
aad
jmp
mov
sbb
enter
cmp
movsl
xor
rclb
lods
sbb
cmpsl
xchg
xor
out
xchg
out
sbb
ret
repz
xchg
pop
shr
jmp
pusha
lods
addr16
add
shrb
sub
mov
stc
addl
and
pop
jb
cs
adc
pop
mov
inc
sub
push
jb
dec
and
push
push
test
xor
inc
scas
and
sub
adc
sub
aad
pushf
ja
dec
jno
int
mov
stos
les
mov
sti
jns
add
sub
jl
clc
arpl
and
pop
or
sbb
test
mov
pop
in
adc
mov
jp
cmpsb
fs
or
movsb
test
test
nop
repnz
xor
nop
cmp
sbb
sti
sbb
or
aas
jg
hlt
addr16
or
mov
inc
cld
inc
and
sbbb
ret
clc
add
xorl
sidtl
xchg
mov
clc
outsl
xor
sbb
mov
jg
jo
jmp
pop
dec
add
sbb
adcb
adc
lahf
insb
fcmovbe
out
cmpsb
mov
into
ret
push
icebp
sub
iret
dec
pop
nop
das
lahf
dec
leave
arpl
int
cwtl
fnstcw
pop
xor
xor
gs
jle
ljmp
push
pop
mov
mov
push
pop
pop
shll
mov
bound
xchg
or
pop
lret
mov
mov
into
outsl
sti
sub
mov
or
jno
and
inc
in
lods
and
mov
cmp
into
jbe
jg
fidivrs
imul
adc
fsub
mov
jge
scas
xor
aas
xor
xchg
push
sbb
ja
in
jl
imul
fimuls
idivl
or
xor
mov
out
adc
xor
imul
fisubs
bnd
mov
sbb
cs
mov
cli
test
imul
add
mov
jmp
aas
push
gs
cld
xchg
js
fsubp
xor
in
sub
cmp
ja
jb
xor
sub
ret
inc
jge
jl
dec
jle
js
push
mov
inc
imulb
sub
push
ret
or
fimuls
lods
push
clc
aaa
arpl
add
pop
dec
push
jne
xor
das
ss
push
pop
shll
fsts
mov
in
leave
into
sub
jge
push
xchg
sbb
iret
lret
je
push
add
adc
faddl
push
mov
pusha
aad
in
call
lds
cmp
xor
and
push
test
stos
sbb
pop
dec
sub
inc
mov
into
aaa
ficompl
insl
aaa
scas
loope
push
stos
xor
cmp
lahf
pop
jp
jo
int
push
shlb
mov
sbb
inc
mov
dec
rorb
push
xlat
push
popf
aam
ret
roll
dec
in
aas
iret
xor
loop
add
ds
call
jb
fimull
push
jae
pop
into
sub
or
dec
lahf
jne
insl
shll
insl
mov
andl
add
cli
sub
xor
in
pushf
aam
xchg
ret
test
jmp
scas
rcpps
jne
push
mov
dec
mov
push
lds
addps
dec
leave
hlt
popf
outsl
jmp
stc
xchg
mov
mov
shl
iret
pop
int3
out
mov
or
test
pop
cltd
push
dec
mov
movsb
aad
ret
push
xor
fdivrs
into
pop
push
vmwrite
lea
iret
nop
jns
and
add
push
in
mov
cmp
imull
insl
sbb
shl
jp
mov
inc
inc
mov
aaa
je
jge
mov
xchg
shrl
mov
sar
jbe
mov
adc
mov
add
fsubs
pop
test
ret
cmp
rorl
jno
dec
inc
rcrb
lds
xchg
shl
inc
imul
jecxz
daa
seto
xchg
push
outsb
jle
add
std
mov
jmp
and
jp
jo
rclb
push
cli
jmp
inc
jmp
or
es
shrb
adc
enter
mov
mov
pop
xor
out
mov
mov
aas
fistl
mov
shlb
adc
lock
mov
pop
movsb
nop
lcall
and
xchg
aam
daa
lret
cld
mov
lea
in
fdivrl
sub
pop
mov
cmp
or
jo
cmp
cmpsb
rcrb
jns
inc
cmpsb
and
outsb
loopne
mov
jnp
sub
or
test
xchg
out
sub
pusha
inc
pop
jge
sbb
pop
mov
imul
mov
cmpsb
sarl
dec
mov
pop
cmp
icebp
fisubrs
jno
sub
aas
push
mov
out
and
add
add
testb
dec
outsb
xchg
pop
outsl
jns
pop
cltd
push
ljmp
pop
mov
jecxz
xor
pop
fcomps
pop
pop
dec
pop
inc
in
insb
push
sarb
pop
sub
dec
aam
jp
cmp
xor
shlb
rorb
sahf
fsubl
repz
out
dec
sbb
idiv
and
push
hlt
fidivrs
jl
pusha
aam
and
stos
pop
ficoms
shll
cmpsl
dec
pop
lock
sub
loopne
lcall
rcrb
xlat
fsubp
test
iret
mov
xchg
jecxz
bsr
insb
pop
push
test
mov
inc
pop
scas
push
adc
sbb
daa
ret
xchg
sbb
andl
test
cmc
pushf
sbb
out
cwtl
loop
sarb
aaa
lcall
add
mov
add
mov
orb
cwtl
xlat
fwait
and
push
mov
rcll
pushl
mov
jne
cmp
add
popa
or
dec
loop
mov
cmp
pop
sarl
scas
scas
jae
inc
pop
sub
or
aas
stos
add
fwait
jg
arpl
pop
loopne
out
or
pop
fucomi
je
lods
sahf
inc
pop
xchg
mov
stos
adc
clc
push
mov
pop
daa
or
xchg
jnp
push
icebp
adc
leave
dec
push
cmp
adc
das
mov
into
lods
dec
pop
popf
sub
jle
divb
mov
inc
pop
js
int
push
jle
fucom
out
sbb
mov
xor
jle
insb
test
out
sub
cld
test
inc
nop
mov
iret
andb
inc
adc
arpl
outsb
pop
test
or
push
xchg
jmp
dec
cwtl
sbb
and
jbe
fnstenv
push
or
fists
pop
mov
std
test
mov
mov
out
xchg
xchg
jae
cmp
sub
jbe
add
mov
loop,pt
sbb
cmp
fidivl
jb
inc
or
xor
add
jle
filds
outsl
fstp
or
pop
ftst
mov
lods
out
psrlq
sbbb
in
cltd
cmp
leave
inc
call
call
lret
adc
mov
fcomip
xor
mov
je
add
sub
jecxz
xchg
sbb
cmc
inc
iret
jecxz
std
test
inc
out
cmc
ficomps
mov
push
push
repnz
xchg
ds
sarl
insb
jmp
pop
adc
lret
ds
lock
cmp
adc
lahf
imul
dec
pop
xchg
cs
push
xchg
push
out
fildl
sbb
add
dec
into
xor
movsb
inc
pop
testl
mov
mov
stos
mov
jb
pop
mov
hlt
in
xor
scas
in
adc
jg
rcl
gs
fistl
jae
push
jg,pt
xchg
nop
and
pop
and
mov
loopne
push
mov
inc
cmc
mov
test
into
cmp
mov
pop
rcl
and
dec
mov
fstp
inc
xor
adc
dec
jecxz
jge
daa
pop
ja
and
mov
das
dec
jo
roll
pop
aas
sahf
jmp
adc
sbb
inc
shll
dec
and
inc
xor
inc
mov
nop
xchg
sbb
adc
outsb
es
sbb
mov
mov
xor
faddl
cmp
xlat
ljmp
mov
lock
jae
add
mov
cmp
xor
bound
je
shlb
and
clc
loop
or
mov
pop
xor
sti
xor
dec
xor
jbe
xor
mov
addr16
or
mov
mov
movl
pop
out
jo
scas
das
xorb
sarb
push
and
mov
xchg
cli
push
rorl
xor
push
int
nop
nop
and
rcrl
adc
fwait
inc
paddq
dec
pand
rcr
adc
sbb
pop
out
dec
and
xchg
hlt
pop
cld
mov
lock
push
or
imul
cli
out
adc
cmc
jns
adc
test
aam
rorb
sbbl
cmp
and
sub
pop
loop
data16
push
lock
orb
mov
mov
dec
cmpsl
push
divb
mov
loope
lods
pop
jb
ljmp
lds
in
into
pop
mov
mov
aas
mov
mov
lods
jl
mov
lret
call
mov
fimull
mov
push
adc
ds
or
js
and
add
gs
xor
jno
mov
dec
popf
jb
sbb
sub
mov
bnd
mov
insl
nop
mov
icebp
add
outsl
adc
ds
int3
aas
pushf
xor
adc
out
cwtl
loopne
pushf
xchg
mov
xchg
sbb
out
xlat
cmp
mov
scas
in
sub
out
test
lret
mov
jge
bound
push
lahf
mov
icebp
out
popf
pop
cmpsb
push
lcall
repz
loop
push
pop
in
pop
or
push
sub
aas
add
lods
xor
shl
test
adc
sbbl
mov
mov
nop
lret
stos
cli
out
xor
jb
movsl
mov
xor
and
ss
and
movsb
xor
shrb
cld
inc
inc
jl
hlt
enter
xchg
out
dec
pop
les
iret
xchg
xor
mov
dec
sbb
sahf
jbe
fnstcw
lods
movsl
jmp
lret
imul
in
adc
pushf
dec
xor
add
push
cmc
repnz
mov
inc
mov
xor
mov
sahf
lret
aas
mov
jo
lahf
xchg
movb
jp
inc
sub
inc
inc
mov
inc
lcall
imul
jb
subb
stos
loopne
fwait
inc
pop
enter
dec
cli
dec
push
dec
mov
xor
daa
sbbl
sbb
fwait
std
sub
push
xlat
and
jbe
mov
and
scas
push
jne
push
in
sub
loopne
sbb
pop
mov
aad
popf
ds
stos
mov
loope
aam
sti
mov
in
fldt
mov
cld
pop
stc
mov
push
lret
fcoml
push
cwtl
add
aad
cmpl
mov
loop
add
test
cli
dec
dec
stos
pop
mov
mov
and
jb
test
mulb
cld
movsb
inc
ljmp
jge
mov
mov
ss
dec
in
int
lods
inc
repz
es
lods
imull
xor
mov
lods
mov
push
imull
test
mov
mov
pop
test
hlt
jmp
inc
cmpb
push
sahf
loopne
push
adc
aaa
sbb
decb
mov
jg
xorb
leave
movhps
xor
out
adc
inc
insb
push
and
sub
insb
dec
mov
push
lahf
push
mov
scas
cmp
fstpl
lea
pusha
sub
pop
or
add
push
add
sub
xor
imul
imul
je
fwait
fs
lahf
int
incl
icebp
cmp
xor
fwait
mov
pop
adc
mov
dec
jmp
and
sbb
mov
test
stc
fs
jbe
lcall
push
fistl
loop
lds
jle
sbb
add
in
inc
inc
cmp
negb
mov
mov
add
jle
mov
imul
sahf
jbe
repnz
daa
aad
enter
and
leave
or
std
stos
cmp
inc
aam
mov
dec
jno
lods
pushf
in
mov
pushf
lret
jl
mov
cmpsb
add
mov
adc
iret
inc
adc
insl
gs
les
push
cmp
xor
dec
scas
and
imul
pop
test
jmp
or
sub
cmc
add
or
mov
add
les
ds
pop
ret
mov
test
movsl
lahf
xchg
sbb
popa
fldl
jae
cltd
aas
jge
mov
test
arpl
and
mov
out
imul
add
lret
and
out
jns
loopne
cmc
decb
xlat
and
dec
cmp
lods
adc
ja
stc
std
lret
ds
push
icebp
ljmp
shll
inc
and
lods
jbe
sub
pop
scas
jl
or
int3
dec
rcr
pushf
xchg
inc
mov
cli
sbb
sub
mov
aad
rcll
sbb
mov
jae
das
scas
jae
push
aam
imul
push
fmuls
xchg
dec
jne
scas
dec
lcall
popf
cs
fsubl
xchg
sti
mov
inc
pop
sub
mov
xchg
fsubr
mov
add
movsb
xor
mov
rcrl
xchg
repz
data16
ror
pusha
test
jmp
push
stos
fisubl
mov
inc
inc
adcl
mov
mov
stos
hlt
lods
dec
sbb
aas
mov
vmovlps
or
js
scas
dec
mov
ss
push
lret
loopne
fisubrl
loopne
incb
cmp
hlt
scas
jle
and
fmuls
dec
cmp
lods
negl
addr16
es
lock
jne
mov
lea
cmp
test
adc
mov
test
fwait
subb
test
push
push
stos
cmc
push
dec
pop
mov
iret
adc
movsb
xor
das
cmpl
adc
lods
vshufpd
dec
cmp
cmc
lcall
mov
dec
push
daa
and
iret
std
popa
setae
sub
jmp
fstps
adc
aas
push
scas
cmp
xchg
in
ja
jl
push
pop
xchg
or
dec
subb
mov
mov
int
and
popf
stos
test
pop
mov
aas
jle
pop
mov
adc
shlb
decl
ja
xor
or
jge
sti
cmc
push
test
iret
pop
stos
push
inc
push
cmp
into
push
fs
in
pop
orb
mov
shrl
sbb
ret
je
out
and
push
nop
inc
stos
call
lods
ja
out
dec
xchg
push
aam
fprem
lods
jp
xchg
ljmp
jnp
sub
push
xor
jae
xor
cld
mov
int
mul
mov
les
xor
in
xlat
cld
nop
xchg
mov
into
mov
idivb
mov
mov
jmp
jo
cld
xor
jb
mov
sbb
jns
adc
jo
inc
sti
jno
and
shll
xor
into
movsl
fisubrs
js
xor
nop
test
xor
mov
sub
nop
popf
pop
sub
sub
sbb
add
pop
es
jl
insl
jo
cmpb
nop
ss
xchg
rcll
rcrb
enter
outsb
inc
cmc
fdivrp
adc
xchg
jnp
pop
mov
inc
imul
xchg
jp
out
test
mov
std
aaa
cwtl
pop
push
into
xchg
lret
sbb
add
out
cs
jae
push
mov
jg
imul
push
inc
cmp
ja
das
and
mov
clc
fidivrs
inc
or
adc
and
daa
test
mov
sub
pop
and
movsl
jo
xor
jp
add
fdivrl
mov
pusha
rep
lahf
mov
test
test
jb
jbe
mov
sbb
xor
mov
out
add
sarb
fwait
mov
push
fcmovbe
jg
imul
dec
in
xchg
pop
sbb
jg
and
xchg
les
pop
adc
mov
jp
std
popa
jmp
xchg
movsl
mov
aas
xchg
jmp
xor
xchg
ret
stos
inc
pop
mov
add
dec
or
out
test
lret
bound
or
push
fidivs
or
movsl
jae
cli
repnz
test
sarb
cmc
mov
add
loopne
inc
and
jbe
imul
scas
mov
and
push
xchg
or
dec
push
cwtl
in
adc
ret
orb
jge
es
cmp
repnz
xlat
jle
push
sbb
mov
icebp
lcall
or
xlat
hlt
xchg
jno
push
pushf
shll
jnp
iret
cmp
loop
push
jg
shr
mov
inc
sbbb
sub
mov
bound
fiaddl
add
xchg
push
xor
loopne
push
fstpt
stos
out
mov
shl
jmp
aad
gs
cmp
or
xor
inc
stc
fldenv
lods
ret
dec
xchg
ljmp
mov
daa
mov
cltd
push
jle
and
loope
loop
pop
aad
inc
dec
mov
into
lock
dec
pop
adc
mov
addr16
ss
xchg
fcoml
pushf
cltd
push
hlt
scas
cmp
pop
out
popa
cmpsb
jl
mov
dec
std
test
cwtl
mov
loope
add
jge
mov
ljmp
xchg
fwait
jb
push
mov
push
mov
pop
stc
push
bound
jle
imul
stos
lock
sbb
mov
mov
add
pop
pop
gs
mov
pusha
or
sahf
sub
jno
mov
jg
lcall
sarl
repz
lods
jmp
sbbl
sub
repz
rcr
mov
sub
pop
fldl
sbb
and
push
jne
mov
imul
cld
fimull
mov
xchg
fs
cmpsb
not
push
pop
cmpsb
push
aam
stos
scas
lods
pop
or
jno
sub
mov
mov
sbb
sub
out
dec
cmp
cltd
cmc
loope
lcall
enter
das
std
ficomps
andl
out
push
mov
popa
push
or
out
sbb
or
in
fs
stos
cwtl
push
cmp
ret
pop
incb
pop
aam
leave
negb
jle
call
out
mov
std
inc
fwait
outsl
adc
adc
cld
push
cltd
das
cmp
mov
in
test
addr16
loop
dec
in
test
test
add
xor
lods
push
adc
incl
popf
test
in
pop
popa
lret
imul
in
mov
mov
shll
jl
mov
or
insb
pop
jns
fildll
or
lret
adc
adc
pop
popa
push
cmp
push
mov
lcall
aad
jne
or
sbb
pop
sti
notl
imul
mov
test
mov
out
and
scas
lret
mov
and
cld
ss
jl
inc
iret
cltd
repnz
stos
inc
cmp
and
faddp
out
pusha
fstpt
xor
inc
jmp
and
in
xchg
sub
mov
sub
mov
std
rcpps
cmp
pop
xchg
push
cmp
dec
xchg
repz
leave
cmp
inc
cli
mov
jge
mov
mov
stc
mov
lods
pop
xchg
or
mov
xlat
sbb
mov
xchg
aaa
sti
daa
add
loopne
insl
add
xchg
mov
cwtl
xchg
cmp
sub
cld
mov
dec
cmp
scas
ss
pop
insb
mov
mov
push
imul
or
bound
subb
cmc
mov
ss
sbb
pusha
dec
inc
clc
fldenv
inc
stos
pushf
pop
xchg
cltd
add
jecxz
aaa
inc
stc
push
mov
mull
dec
jmp
pop
arpl
scas
cli
sbb
dec
xchg
pop
inc
xor
adc
mov
lret
cwtl
and
fninit
adc
outsb
xchg
in
adc
pop
push
mov
aaa
xchg
ss
inc
jg
jp
movsl
cld
lret
add
push
sbb
xor
aaa
mov
dec
fisttps
xchg
ds
lock
mov
sub
lds
mov
out
je
js
push
inc
adcb
ror
stos
leave
jle
aas
push
cmc
jns
jg
sub
sbb
cmp
popf
adc
ja
in
leave
push
sti
cmc
push
pop
shlb
loope
inc
subb
sub
jle
adc
xchg
jae
lods
adc
sbb
das
pusha
and
mov
js
neg
ret
out
mov
in
cld
lcall
ret
cltd
frstor
pusha
pop
js
loopne
ret
sub
mov
cmpsb
pushf
push
inc
cld
insl
inc
mov
mov
lds
es
pop
cmpsl
arpl
in
mov
push
daa
into
int
mov
mov
add
add
mov
and
jle
inc
sbb
or
push
notl
je
mov
packsswb
pushf
xchg
pop
leave
hlt
imul
cmp
fs
dec
outsb
add
sti
add
jae
daa
out
mov
in
lds
cmpl
inc
sarb
in
adc
jns
je
lods
jmp
dec
daa
and
out
icebp
jl
inc
mov
push
sbbb
out
and
xor
dec
sahf
push
jmp
ret
test
xor
scas
push
mov
jge
lods
sub
xlat
loope
js
lods
rcr
hlt
xchg
sbb
inc
adc
stc
push
sbb
fdivrl
dec
xchg
fildl
lret
test
mov
cli
sbb
popa
scas
cmpl
sbb
mov
ss
leave
sub
jne
xor
aam
iret
pop
cmp
imul
adc
xor
mov
das
pop
pop
dec
push
inc
test
mov
mov
leave
int3
jne
cmp
lods
xor
lret
fidivl
add
xchg
ja
dec
mov
or
repnz
sub
xchg
pop
mov
sahf
and
add
movsl
inc
out
adc
roll
pop
push
inc
outsl
pop
ds
in
addr16
push
xor
das
imul
sbb
outsl
ds
inc
push
push
add
pop
lock
push
cmp
fwait
mov
jmp
pop
cli
sub
fcoms
mov
adc
test
lods
add
cmpsb
sub
enter
rcr
and
xchg
add
iret
or
mov
mov
sub
lods
daa
inc
mov
mov
pop
jno
rcl
ss
addr16
inc
ds
sbb
jne
fsubrs
add
mov
insb
out
addr16
mov
aad
inc
lret
mov
in
mov
xchg
mov
inc
and
int3
mov
xorl
push
out
loope
je
push
xchg
or
cld
push
in
push
mov
lds
mov
in
xchg
les
xor
inc
xor
jb
jno
push
cli
in
and
and
mulb
in
xchg
mov
sbb
push
pushf
mov
mov
pop
imul
dec
cmp
std
xchg
inc
pusha
dec
mov
inc
sbb
out
fisubs
inc
rolb
mov
mov
and
or
xor
pop
jae
mov
dec
aam
test
js
sbb
in
out
ss
inc
std
or
mov
rcl
arpl
mov
rcl
xchg
addr16
push
loope
adc
inc
insb
gs
orl
pushf
xchg
or
fwait
inc
addr16
dec
fstp
out
xchg
loopne
insb
inc
push
jge
mov
cli
mov
pop
shll
int3
lods
push
or
lods
sbbl
inc
int
and
xlat
push
xchg
mov
je
in
inc
pop
dec
mov
fneni(8087
scas
ret
sbb
push
stc
fnstcw
test
mov
clc
add
pushf
outsb
inc
jae
das
fidivl
add
aaa
mov
sahf
sub
ljmp
push
xor
pop
inc
xchg
test
das
aad
jge
ss
lret
cmp
xchg
xchg
cmp
sub
sub
insl
sbb
mov
mov
push
rol
aas
test
sub
mov
aad
scas
sbb
clc
push
in
clc
loopne
and
dec
push
test
push
in
mov
sarb
pop
inc
ss
fildll
aaa
pop
fists
xor
dec
sbbl
or
mov
push
mov
aaa
mov
mov
loopne
inc
and
je
sbb
repz
xchg
inc
stos
les
xor
mov
jb
mov
scas
cmp
xchg
jbe
add
push
cmc
fistl
and
xchg
and
push
rcll
dec
loop
jl
lret
lret
fmuls
sub
xor
imul
outsl
jmp
pop
js
das
das
xorl
or
shl
jmp
daa
in
nop
stc
shr
or
leave
dec
cwtl
mov
inc
fnstsw
pop
fcom
mov
in
add
dec
call
ja
testb
out
or
mov
xchg
test
jle
ja
pop
mov
pop
cmc
jmp
arpl
add
gs
popa
sbb
pushf
mov
cmc
or
mov
decb
xlat
ror
push
dec
dec
ficoms
cmp
xlat
leave
in
hlt
in
mov
subb
cld
ss
cmpsl
jp
add
rcll
jg
mov
and
ret
mov
jecxz
negb
stos
jb
mov
push
and
push
dec
push
fnstsw
inc
mov
dec
xor
push
rol
and
or
pop
gs
out
push
jbe
dec
jge
mov
or
arpl
xlat
xchg
add
test
sbb
subl
xor
mov
repnz
dec
cmpsb
insb
jnp
pushf
add
pop
xor
adc
push
cld
negl
mov
dec
adc
pop
lret
sbb
mov
movsb
sbb
or
adc
out
mov
jp
lahf
out
push
dec
pop
jno
fnsave
dec
inc
pcmpgtb
dec
inc
sti
insb
jp
mov
mov
div
xchg
push
je
mov
jns
mov
call
into
jnp
xor
das
pushf
out
lret
or
loopne
insb
fisubrl
adc
mov
sub
mov
in
dec
addr16
adc
cld
push
cmc
sub
xchg
stos
bound
scas
mov
out
cmc
mov
adc
xor
loope
xchg
push
cmc
push
loope
hlt
cltd
aam
jp
fildl
cmp
shlb
hlt
call
pop
ror
adc
adc
outsb
fisubl
jle
inc
xchg
pop
pop
pop
mov
arpl
shrl
or
cli
pop
pop
pop
xchg
mov
jl
das
adc
push
push
in
loope
fmull
mov
pop
stos
adc
cs
aam
loope
cmpsl
test
cmp
adc
mov
mov
arpl
loopne
xlat
cmpsb
popf
into
dec
inc
shr
lods
lahf
insl
jbe
adc
jmp
pop
pop
push
lea
pop
les
scas
js
and
pop
fmull
mov
movsb
inc
adc
shll
sbb
hlt
fistl
aaa
inc
pusha
mov
shlb
lds
sub
cwtl
and
lret
add
mov
mov
lret
pop
dec
and
dec
sub
lods
xchg
cwtl
xor
ja
sahf
adc
addr16
pop
js
lret
adc
pop
mov
arpl
fsubl
nop
cmp
xor
fsubrl
popa
ja
sbb
mov
inc
test
cltd
leave
cmp
inc
inc
movsb
and
or
test
loop
jns
jg
mov
rorl
pop
fisubrl
fcoml
or
add
xor
cmp
popf
xchg
out
stos
adc
mov
cmp
or
mov
movsl
mov
je
imul
jnp
xchg
loopne
xor
or
jecxz
push
popa
cld
popa
imul
sub
mov
xchg
jge
cmp
dec
inc
add
jge
les
cmp
movsb
insb
mov
pop
pop
inc
or
lcall
lock
js
and
iret
mov
insl
mov
jg
stos
cmpsl
cmp
mov
sbb
incl
mov
jne
test
cmp
cmp
cmp
add
lock
xchg
int3
out
repnz
pop
push
mov
xchg
js
out
stos
xchg
stos
das
pusha
mov
cmp
leave
pop
aas
das
inc
jne
mov
sbbb
daa
orb
movsl
std
mov
movsl
mov
adc
int3
bound
mov
sti
call
xchg
testb
sub
push
dec
imul
stos
push
aas
mov
arpl
sbb
mov
pop
mov
adc
mov
repz
xlat
ljmp
xor
xchg
mov
stos
pop
mov
test
shlb
call
shlb
xchg
cld
popa
cs
sub
xchg
scas
adc
xlat
lahf
jae
cli
aas
xor
mov
loope
sarl
jbe
std
jg
dec
sbb
and
pop
lock
inc
out
push
jmp
jne
add
loopne
insl
fs
addr16
inc
loope
add
or
push
xor
out
js
adc
inc
in
xchg
sbbl
shll
and
cmp
xchg
hlt
jmp
cmp
inc
ljmp
sti
dec
lods
bound
in
sbb
in
int3
sbb
clc
jle
jo
jp
in
dec
add
rcrb
icebp
add
ja
fcoms
aad
sbb
mov
jno
addl
sub
lods
fdivrl
sbb
sahf
aam
jnp
mov
sub
out
fisubs
and
jb
sub
and
xor
xor
xor
arpl
and
inc
je
sub
push
adcl
cmp
icebp
aaa
pop
adc
lock
cmpsb
es
jmp
and
dec
stc
mov
inc
jo
xchg
mov
sub
jnp
std
lock
insl
push
jecxz
mov
aaa
shll
es
adc
push
mov
mov
in
rolb
add
sub
or
cmp
lret
xchg
adc
pop
les
stos
and
mov
ss
jno
out
shll
pop
addr16
sbb
adc
call
adc
pop
mov
cmp
mov
sbb
ja
aas
xchg
das
sti
mov
jno
fmul
xrelease
sti
mov
pop
push
dec
inc
or
pop
jns
add
imul
das
rorl
mov
jge
mov
outsb
js
cmp
add
fwait
mov
or
enter
stos
pushf
mov
add
test
sub
mov
ror
pop
mov
arpl
repnz
sub
test
jg
push
mov
push
adc
data16
mov
movl
mov
fwait
xchg
pop
jno
lahf
jo
ljmpw
out
inc
test
sub
xor
incl
jp
pop
cmp
notl
push
push
je
es
js
xchg
pop
xchg
es
add
lea
adc
push
lods
xchg
mov
dec
push
and
push
insb
pop
imul
xorb
fnsave
inc
add
jnp
outsl
mov
jmp
loope
pop
cmp
inc
stos
or
dec
and
jg
subb
decb
cmc
bound
pop
movsl
es
sub
out
push
jo
sub
or
xchg
mov
add
pop
xor
pop
ret
inc
cmp
stc
or
mov
pop
cmp
fcoms
lods
mov
adc
sub
es
inc
roll
inc
outsb
adc
leave
pushf
cmpsl
sub
into
insb
push
std
call
cmpsl
dec
or
mov
mov
loopne
sbb
pop
push
lret
cmp
repz
fcoms
out
das
lcall
inc
repz
rclb
jae
jge
lcall
add
mov
xchg
sbb
sbb
jl
test
pop
repnz
adc
test
sarb
cmpsl
mov
sub
rcrb
jle
mov
int
adc
insl
int
in
jg
add
push
cmp
lcall
adcl
pop
jle
pop
xor
outsb
xor
pop
xchg
aam
xor
ret
aam
pop
or
jnp
ror
push
imul
lock
fiaddl
add
arpl
popf
mov
or
repz
jne
stos
pop
addb
xor
xabort
and
push
mov
outsl
outsl
cmpsl
mov
mov
jge
int
adc
ficompl
ret
xchg
push
cmp
jge
sub
pop
jp
or
cltd
push
pop
sbb
sbb
and
push
outsb
lock
sbb
mov
inc
adc
movsb
jns
jge
sub
test
add
movsl
sbb
lods
in
jg
pusha
adc
sbb
sub
outsl
jl
pop
jae
shlb
or
xchg
into
adc
push
push
les
pushf
push
cwtl
pop
in
out
xchg
xor
pop
mov
repz
mov
dec
ffree
lahf
and
inc
inc
dec
clc
ja
mov
jg
fcomps
push
sbb
out
push
jo
mov
xchg
sti
add
pop
jbe
and
aam
fcompl
fwait
sarb
pop
imul
add
lds
outsl
jae
jle
mov
imul
cmp
mov
and
jecxz
jb
hlt
push
mov
out
fisttps
movsl
ss
fs
dec
mov
pop
fcompl
lret
aaa
call
mov
jae
adc
sub
insb
push
scas
xor
pop
sbb
push
bound
adc
fcmovb
fists
push
mov
ss
les
jge
push
or
mov
fwait
jmp
jp
sub
stos
cltd
pop
cmc
les
in
push
repz
add
fsub
scas
cmpxchg
daa
ja
mov
adc
or
mov
bnd
xor
pop
loopne
or
jge
arpl
movsb
pop
inc
mov
rcll
dec
inc
insl
mov
push
xchg
xchg
adc
jae
add
les
sti
cmp
pop
enter
jae
lcall
jl
cmp
pop
das
jmp
in
push
call
mov
movsl
push
pop
inc
std
jmp
jmp
mov
addb
pop
mov
ds
sub
cmp
push
xlat
dec
jecxz
mov
in
andl
cli
jg
cmp
ljmp
std
je
sub
or
insb
jno
dec
fnsave
fiadds
mov
pop
dec
inc
and
cmp
out
mov
adc
mov
aam
xor
push
aam
xchg
sub
mov
fcmovb
sub
lret
out
xchg
aad
sbbb
sub
mov
inc
lret
mov
cmp
mov
out
out
cli
pop
addl
sbb
cmp
jge
xor
xor
xor
or
int3
sbb
iret
insb
ljmp
mov
sbb
push
adc
pop
stos
mov
sti
jae
xchg
inc
dec
lock
push
and
xchg
aad
push
aam
testl
push
arpl
sbb
inc
pop
scas
or
fcoml
mov
push
es
cmpsl
es
ror
and
xor
int3
and
sub
imul
lds
and
lock
sub
ret
aad
push
out
pop
sti
and
incl
inc
stos
xor
mov
arpl
sub
xchg
or
xor
pop
lods
inc
icebp
xchg
inc
pop
mov
jb
outsb
lock
dec
negl
loop
cmp
jns
mov
in
lret
test
adc
outsl
test
mov
inc
in
cmp
mov
inc
inc
into
push
stos
hlt
int
mov
push
ret
xchg
push
lock
icebp
and
inc
and
stos
mov
pop
jne
aam
daa
cld
and
mov
push
jle
and
xchg
int3
mov
xchg
or
int3
xor
xchg
pop
lods
inc
cmp
in
inc
dec
call
arpl
int3
into
ss
mov
fistl
jl
popa
out
push
or
adc
or
xchg
sbb
mov
js
mov
outsl
std
pop
dec
sahf
xor
mov
mov
mov
std
inc
lret
xchg
pop
das
scas
push
das
fmull
xchg
sbb
out
cmc
xor
int3
xor
sbb
idivb
sub
push
sarb
xlat
repz
fwait
inc
mov
sbb
mov
dec
sub
mov
jge
cmp
pop
clc
jp
aam
push
js
sbb
push
sahf
ljmp
sub
test
sub
dec
pop
xor
shrb
sahf
jg
push
test
mov
mov
not
std
lcall
cltd
push
mov
sbb
outsl
dec
mov
ljmp
jo
xor
sbb
fnsave
enter
pop
das
jne
cltd
xchg
jmp
dec
add
dec
lods
lret
cmp
mov
andb
lret
arpl
mov
and
repnz
test
enter
mov
mov
pop
insb
fdivs
iret
mov
arpl
das
cltd
ljmp
aam
push
dec
rcl
xor
inc
cmpsb
out
cmp
mov
lock
faddp
lea
or
aad
xchg
test
xchg
test
sahf
mov
push
mov
scas
mov
lea
xor
lods
adc
enter
push
mov
cmp
jbe
out
push
sbb
cmp
jne
mov
adcl
pop
popa
mov
adc
adc
mov
into
fisttps
push
or
cmp
xor
out
in
test
rcrl
inc
push
fnstsw
sub
pop
cwtl
dec
xor
jnp
bound
mull
stos
push
cmc
mov
testb
push
mov
cmp
xor
sub
jmp
dec
sub
inc
daa
es
mov
and
popl
movsb
push
push
mov
add
outsl
xor
mov
jl
jne
pusha
loopne
pop
jae
and
mov
push
aad
xchg
push
mov
mov
push
movsb
pop
inc
or
cmpsl
dec
loopne
sub
rolw
dec
inc
jns
sub
adc
scas
cld
adc
mov
push
sub
lahf
and
xchg
aad
shll
std
mov
or
xchg
push
fwait
pop
pop
jns
enter
xchg
or
mov
fcoml
add
insl
test
dec
fcoms
sbb
add
in
add
fistpl
cmp
es
mov
stos
and
addr16
scas
test
out
dec
jbe
cmpsb
aas
test
mov
mov
pop
xor
xchg
xlat
or
mov
rol
dec
mov
cmpsl
mov
cmpsb
icebp
add
fisttpl
aas
pop
ja
jbe
cmpsl
inc
xchg
jge
gs
push
and
jns
dec
daa
jle
push
dec
ret
mov
adc
push
sub
dec
aam
divl
xchg
mov
pop
dec
push
ds
test
das
adc
or
dec
cwtl
repz
sahf
and
sbb
aad
mov
mov
shlb
jmp
lods
mov
mov
mov
add
je
fbld
inc
int
pop
inc
and
out
arpl
adc
hlt
xchg
stos
mov
cmc
fwait
jo
jb
out
mov
ljmp
cld
mov
es
mov
xchg
leave
push
jg
xor
adc
and
lods
mov
pop
push
pop
pop
dec
xor
cmp
pop
mov
and
xchg
mov
add
or
arpl
insb
adc
push
test
or
xchg
daa
test
mov
rorb
in
lods
fs
scas
xchg
rcll
mov
push
cmp
cwtl
mov
pop
hlt
mov
mov
aad
inc
in
rorb
dec
sub
xchg
ficompl
pop
lods
jg
xchg
add
loopne
out
inc
movsl
and
jne
cmpsl
jno
lods
cltd
notb
jp
mov
inc
into
mov
leave
out
pop
scas
lods
xchg
and
mov
test
dec
ja
sahf
cmp
xlat
dec
arpl
mov
add
xchg
stos
push
repnz
mov
clc
out
dec
and
dec
push
es
and
fcoms
outsl
das
mov
mov
mov
addr16
shr
das
je
pop
adc
or
adc
mov
call
or
or
xlat
sub
push
add
sub
xor
add
sub
inc
pop
stc
xor
jle
dec
hlt
add
sti
jp
sbb
jge
inc
jge
jecxz
cmpl
test
subl
insl
xchg
out
mov
mov
jle
int
mov
cmp
int
sbb
adc
ret
sub
and
fucomip
clc
fbld
ss
add
dec
cmp
add
mov
pop
inc
mov
loopne
pop
or
sub
xor
arpl
xor
xchg
ret
test
adc
or
gs
sti
int
stos
cwtl
stos
dec
out
push
mov
stos
shrl
je
popf
data16
push
adc
lahf
dec
jg
inc
ds
jecxz
lahf
incl
pop
fdivl
pop
dec
pop
fbld
sub
enter
aaa
sbb
clc
fucomi
fldl
je
pop
and
or
fwait
fwait
add
sub
adc
out
ss
dec
lods
push
jg
incb
insl
xlat
mull
jmp
sbb
add
aam
sarl
int
inc
gs
mov
xchg
dec
and
in
ss
lret
pop
dec
jp
jnp
xchg
rcrb
sti
cs
aas
dec
cld
pop
ret
or
add
xchg
fwait
mov
pop
xor
cli
leave
mov
fs
testl
or
in
int
mov
jae
xchg
dec
insb
add
cmp
insb
xor
scas
mov
cs
arpl
sarb
xchg
add
push
mov
push
pop
lds
insb
inc
xchg
sbb
in
imull
cld
cmpsb
xor
sbb
mov
push
imul
hlt
xchg
dec
lods
clc
adc
jl
jle
scas
test
mov
and
cmp
fwait
sub
test
cmpb
lcall
add
mov
lods
xor
pusha
mov
and
dec
bound
cmp
jmp
jno
psrld
lret
push
add
push
xor
inc
or
fisubl
and
mov
xchg
sarl
mov
push
stos
jl
xchg
xchg
fsubs
push
push
clc
fldenv
mov
sbb
mov
mov
in
mov
push
sbb
and
jecxz
leave
fs
mov
sahf
pop
xor
adc
lock
clc
xchg
daa
fs
mov
jge
mov
iret
mov
mov
outsb
cmp
adc
jmp
inc
cwtl
mov
sti
jne
mov
idivl
imul
aaa
jmp
ss
fstpt
ljmp
enter
test
test
sahf
xchg
jp
add
rorb
les
es
lds
push
mov
mov
call
add
movsb
shll
sbb
pop
outsb
inc
mov
test
montmul
cmpsb
inc
pusha
jge
roll
adc
add
xor
mov
jp
mov
pop
lock
mov
in
or
mov
inc
cmpsb
pop
xchg
cmp
test
sbb
sub
push
xchg
push
xlat
out
into
pop
insb
ljmp
xchg
or
imul
cmp
dec
xchg
jmp
push
les
mov
or
add
mov
xchg
push
add
jae
cltd
pop
aad
scas
push
pop
loop
aaa
mov
mov
fimuls
scas
mov
rorb
lea
mov
push
sahf
movb
jb
add
jl
fmulp
sub
pop
in
aad
test
push
mov
push
pop
jp
jg
jne
rcll
into
sti
push
mov
daa
cmp
fstps
xchg
in
xchg
add
push
adc
adc
inc
xor
sub
fstl
daa
dec
and
addb
js
test
andb
addl
in
popf
daa
xchg
mov
cmp
stc
mov
cmp
clc
xlat
outsl
gs
cli
pushf
push
mov
cmp
testl
idivb
jne
sti
mull
mov
fisttpl
mov
cmp
sbb
test
shl
lea
cltd
ljmp
pop
rol
repnz
xchg
std
in
mov
adc
je
adc
jl
xor
cmc
sbb
or
insl
addr16
sbb
data16
js
mov
cmp
adc
bnd
stos
push
push
sbb
sub
dec
dec
push
hlt
mov
adc
enter
loopne
rcll
inc
icebp
insb
loope
enter
jg
adc
out
stos
pop
add
sti
fldcw
xchg
adc
je
adc
sbb
xor
das
pop
push
mov
fstl
out
insb
fcomi
pop
or
push
push
pop
sbb
and
adc
imul
aad
dec
xor
fsubrs
and
adc
insl
mov
mov
mov
iret
mov
jns
in
xor
call
or
cltd
inc
les
mov
add
inc
mov
hlt
sub
adc
imul
out
ds
std
js
push
or
sti
lock
pop
in
sbb
lds
es
aaa
sbb
les
pop
mov
into
cltd
add
sub
mov
push
sbb
adc
jecxz
in
lods
inc
loop
out
push
test
xchg
add
inc
mov
sub
cld
cli
xchg
lret
add
dec
sub
cmp
sbb
mov
or
jnp
mov
arpl
mov
test
xchg
rolb
test
sbb
aas
int
adc
push
fldenv
mov
add
mov
pop
lods
in
shrl
jg
loop
imul
je
cmp
clc
mov
and
rcrl
mov
ret
mov
xchg
sti
stc
sub
cmp
cmp
xor
rorb
push
jle
out
push
mov
and
jbe
or
sbb
mov
daa
cmpsl
inc
inc
mov
cmpsl
in
movd
out
sbb
dec
pop
cli
mov
jmp
dec
jl
imul
lds
xchg
sahf
push
and
inc
push
ja
sbb
xor
jp
add
loopne
dec
cmp
cwtl
xor
test
xchg
mov
fdivl
shlb
mov
mov
pop
scas
push
in
push
sbb
sub
jns
push
push
inc
imul
xchg
imul
lcall
pop
imul
out
push
idivl
sar
mov
mov
outsb
xchg
imul
mov
push
out
dec
cmp
xchg
ljmp
mov
inc
fcmovne
dec
out
add
dec
sbb
or
stos
adc
pusha
repz
add
shl
outsb
pop
dec
out
mov
and
mov
mov
sub
mov
mov
pop
lock
jp
mov
imul
xor
pop
lods
movsl
ror
mov
push
fs
mov
aaa
push
and
add
jno
xchg
outsb
sub
and
cmp
mov
out
cmp
daa
lods
movsb
adc
cld
push
fstpl
gs
fcmovb
sub
loopne
mull
jb
cmp
out
lcall
test
inc
or
xchg
lahf
mov
or
add
scas
icebp
sub
iret
imul
jb
ljmp
fbld
fucomip
movsb
and
mov
stos
add
out
sbb
in
jae
in
ljmp
push
fadd
or
iret
jb
outsb
mov
xlat
lret
mov
xor
aad
dec
lcall
outsb
scas
mov
je
sbb
ds
test
add
or
mov
in
inc
xchg
pop
pusha
xor
push
pop
les
scas
jg
aaa
cmpsb
pop
mov
xchg
adc
fwait
mov
sahf
push
out
or
push
push
add
test
push
cltd
sahf
cmpsl
clc
adcl
test
mov
xlat
push
shll
insb
or
cmp
jnp
add
ja
movsl
dec
pop
xor
negl
dec
icebp
push
inc
popa
outsb
fmull
lock
pop
loopne
outsb
cld
dec
clc
sbb
push
inc
outsl
rcll
xor
mov
xor
push
roll
je
and
aaa
mov
push
outsl
cmp
gs
and
ljmp
mov
mov
mov
push
shll
cmpsl
mov
test
push
cmp
xchg
shl
jmp
xor
pop
jg
repz
rol
cltd
mov
mov
out
stc
movsl
dec
in
rcll
dec
jb
lret
sbb
pop
dec
ret
lods
pop
xchg
jns
jns
mov
aam
cmp
mov
pop
lea
daa
gs
ljmp
fimuls
cmp
fdivrl
adc
inc
in
movsb
fnstcw
aam
pushf
push
test
sub
add
testb
stc
addb
fisttps
push
cmp
push
xlat
jbe
mov
xchg
insl
mov
scas
cmpsb
hlt
adc
cmc
add
arpl
cmc
je
mov
sub
push
das
std
int
or
mov
mov
movsl
jp
adc
gs
cmp
xor
xlat
jge
lahf
enterw
icebp
enter
jbe
aam
dec
loop
enter
pop
pop
aaa
fadd
pop
lods
lods
iret
mov
pop
movsl
cmp
mov
popa
xor
jmp
xchg
pop
inc
xchg
pop
and
mov
arpl
or
shll
or
repz
adc
scas
jp
scas
rcrb
push
push
cmp
pop
out
dec
aas
jae
mov
push
xchg
loopne
push
or
inc
mov
clc
jbe
push
jo
jge
shrl
mov
mov
push
insb
aam
inc
call
lock
and
mov
mov
pop
dec
pop
cli
xacquire
cmp
adc
leave
push
pop
xchg
movsb
jl
aas
jp
iret
fsubrs
movsl
out
arpl
shr
out
mov
dec
dec
sbb
das
loope
jns
sbb
ret
dec
sub
sub
push
and
in
mov
jp
xchg
inc
imul
fnstenv
or
inc
cwtl
jo
add
jns
stc
cpuid
mov
mov
dec
adc
sbb
lret
rorl
rolb
push
adc
mov
cmpl
orb
mov
fcoml
xchg
push
cmpsl
mov
fwait
sub
push
cmpsb
mov
icebp
pop
xlat
stos
xor
es
push
pusha
pop
adc
inc
pushl
iret
mov
cmp
fldcw
mov
mov
xchg
lods
ror
mov
loop
mov
xor
jle
xchg
lds
sub
icebp
and
insl
push
in
fs
mov
jae
or
jecxz
fs
cmp
shll
mov
push
jae
and
dec
xor
movsl
ja
out
mov
mov
stos
cmp
lds
push
imul
xchg
sahf
xchg
push
push
sub
repz
and
inc
push
popf
loopne
shll
mov
je
jp
jl
xor
icebp
movsb
bound
xlat
mov
scas
mov
jbe
add
pop
mov
repnz
jnp
fnstcw
lea
jl
idivb
jbe
push
out
bound
rolb
imul
and
clc
popf
and
popf
adcb
nop
mov
sub
push
ss
sub
test
lcall
test
mov
movsl
mov
popa
mov
xchg
rep
mov
lds
fbld
ljmp
je
stc
mov
mov
jg
lods
and
mov
dec
orl
fwait
add
mov
shrd
movsl
and
cmpsl
fistpl
sbbl
cltd
lret
test
sbb
ret
or
out
ja
arpl
push
jb
cmp
cwtl
mov
test
mov
xchg
sbb
testl
mov
mov
xchg
inc
sub
pop
cmp
lahf
mov
xchg
repnz
add
pop
je
addr16
outsb
clc
sarl
add
insb
cmc
lds
inc
mov
or
or
into
mov
xor
lcall
mov
ficompl
push
insb
xor
in
mov
and
fwait
xchg
pusha
xorl
jb
and
mov
dec
lret
clc
pop
pop
test
cmp
mov
test
xchg
xchg
mov
fisubs
icebp
imul
jno
sbb
or
std
adc
loopne
dec
push
lds
adc
ds
ljmp
sub
xor
mov
sub
adcb
push
aas
pop
sbb
mov
xor
jnp
jbe
into
jmp
jle
in
mov
mov
mov
daa
adc
fmull
rol
adc
test
sbbb
addr16
mov
in
lcall
out
into
adc
popa
push
fiadds
test
repnz
mov
js
add
and
popf
add
pop
mov
xor
test
add
fdivl
rolb
scas
lcall
add
pop
test
mov
les
mov
es
insl
out
into
jns
ret
mov
movb
out
sahf
stos
dec
cmp
push
push
icebp
mov
sbb
frstor
push
xlat
ret
test
mov
jecxz
test
bound
jle
pop
arpl
lcall
jl
xor
mov
es
mov
and
in
bound
pusha
andb
or
push
mov
cs
mov
out
xchg
sub
xor
mov
cs
in
int
stos
cmp
xor
icebp
jno
and
dec
add
pop
roll
cmp
mov
scas
xchg
fnstsw
je
adc
pop
xchg
rolb
orl
daa
js,pn
mov
faddp
or
test
sbb
mov
mov
mov
aaa
adc
das
or
xor
addr16
icebp
mov
and
xor
outsb
mov
mov
mov
stos
lock
ret
adc
xor
lahf
mov
cmp
push
mov
dec
jns
cmp
pop
inc
mov
inc
dec
ret
or
mov
sub
das
lcall
or
and
int3
sub
xor
mov
inc
cmpsl
mov
and
push
in
pop
xchg
adcl
push
lods
movsl
or
shrl
pop
mov
je
xchg
into
cmp
outsl
dec
jo
fists
cmp
andb
nop
xor
xchg
or
js
movsb
lea
js
insb
and
cwtl
sbb
adc
add
ret
iret
orb
push
icebp
cld
sub
cwtl
dec
sub
les
or
icebp
rorb
sahf
clc
mov
pop
cmpsb
scas
cmp
mov
xor
stc
adc
sbb
pop
xor
mov
inc
mov
cmp
xchg
pop
loopne
push
jle
jno
xchg
aam
push
cwtl
fs
lock
and
pushf
lret
ror
adc
les
icebp
dec
jle
sbb
xlat
jecxz
pop
xlat
mov
loop
mov
add
xor
imul
pop
movsl
jne
inc
sti
dec
mov
push
loopne
leave
fstl
fmuls
and
mov
inc
in
inc
arpl
mov
out
std
test
mov
mov
inc
mov
test
dec
and
xor
sti
cmp
rclb
mov
jo
mov
and
or
inc
adc
fs
icebp
cmovbe
lods
jbe
inc
xchg
lods
sub
jle
sahf
and
je
pop
fwait
dec
xchg
xor
mov
ds
pop
jmp
or
jnp
dec
gs
repnz
xlat
repnz
std
mov
iret
mov
mov
cmpsl
in
call
jbe
mov
insl
jns
call
sti
cmp
dec
jns
test
cmp
sub
inc
jnp
fmul
lds
push
and
fildll
and
popf
mov
sub
pop
orb
push
push
and
sbbl
dec
mov
inc
daa
neg
fimull
pop
inc
push
xchg
push
and
out
js
adc
push
ljmp
xor
scas
and
flds
xchg
add
rclb
mov
mov
ja
adc
add
mov
jae
jp
out
movsl
into
add
dec
sub
into
mov
xchg
pop
pop
sbb
mov
dec
push
stos
fldenv
mov
sahf
test
out
std
jl
lds
mov
je
dec
and
jg
push
or
cmc
scas
xchg
jo
or
daa
jp
ror
shrl
pushf
cmpsl
push
xchg
das
sbb
xchg
mov
int
repz
xor
or
test
sbb
cli
cltd
movsl
mov
adc
jl
mov
adc
dec
mov
ficoms
jns
and
jns
cmp
sarb
inc
bound
rcll
add
mov
call
mov
mov
pop
pop
mov
dec
xor
mov
cmc
mov
push
sub
push
xchg
addw
mov
sbb
push
insb
pop
adc
pusha
sub
jbe
mov
imul
push
cmp
mov
xor
xchg
lea
repnz
dec
arpl
out
sub
pop
stc
addl
mov
ljmp
adc
int3
sub
subl
xchg
aaa
lahf
jmp
stos
mov
clc
rcl
mov
xchg
lods
mov
jb
test
rol
push
pop
pop
push
jecxz
sbb
movsl
es
pushf
jnp
push
shlb
stos
mov
cld
xchg
pop
jno
mov
push
testl
mov
xchg
jne
mov
mov
lahf
bound
xor
pop
mov
lret
loop
xchg
js
nop
subb
aam
add
and
mov
nop
ret
mov
fwait
cmp
push
int3
adc
pop
and
jecxz
setl
sub
jb
pusha
push
mov
xor
push
ret
pop
pushf
je
aas
jmp
ficomps
outsl
popa
aad
push
jns
mov
or
test
jg
aad
xchg
mov
aam
arpl
xor
in
outsl
pop
mov
mov
in
inc
stos
mul
lods
dec
cltd
aaa
pusha
adc
cmp
lock
sar
mov
cltd
mov
rcll
and
mov
mov
ljmp
or
idivl
mov
xchg
dec
call
pop
loopne
int3
icebp
mov
clc
push
test
ljmp
outsl
sub
and
lcall
fcmovb
dec
out
sbb
sarl
rorl
mov
les
push
and
xchg
pop
dec
lret
sti
xchg
rclb
jb
mov
scas
mov
jnp
fwait
or
lods
push
test
sub
mulb
popa
cmpsl
jecxz
inc
dec
and
sbb
lahf
hlt
daa
push
das
lods
iret
cmpb
cmp
outsb
test
push
cmpsb
jns
jo
fsubp
inc
xlat
push
add
xor
jl
aad
cmp
lcall
xor
pop
dec
pop
out
push
hlt
xchg
sbb
sub
jp
sbb
push
inc
outsl
lods
test
xor
and
repnz
or
out
push
stc
sbb
adcb
clc
sbb
pop
hlt
fcomps
leave
sarl
xor
dec
insb
mov
mov
dec
jae
gs
das
sbb
popf
jne
jno
aam
adc
add
and
pop
push
fdivrs
adcb
xchg
test
jae
sbb
pop
mov
jp
xchg
push
jnp
and
sub
xor
cmp
loope
pop
sub
xor
fld
jb
mov
cmc
jmp
cmpsl
or
inc
negb
push
outsb
xchg
and
ret
sub
jle
daa
jp
pop
aas
xor
outsl
xchg
repnz
sub
or
fstpl
aad
data16
pop
adc
scas
pop
mov
iret
je
jmp
inc
out
cmp
stc
mov
lcall
icebp
xchg
cmc
xchg
or
aad
mov
pusha
fwait
sub
fstpl
lahf
popa
cwtl
fimuls
push
push
cs
pop
lock
cmpl
in
imul
lahf
cmpsl
test
xchg
adc
adc
cltd
pop
aad
pop
and
repnz
int
xchg
or
xor
sahf
stos
cmpb
and
dec
sub
adc
xchg
subb
out
sub
fisttpl
out
dec
fs
in
je
insb
sbb
scas
mov
fucom
and
cmp
jecxz
dec
xchg
leave
int
pop
xchg
movsl
xor
jae
shrl
and
sbb
xorb
fisttpll
ret
push
pusha
adc
sbb
or
adc
mov
push
into
mov
test
movl
jp
pop
loop
mov
in
xchg
push
inc
pop
mov
out
xor
push
out
xchg
idivl
cli
loopne
mov
cmc
sub
push
imul
es
sub
in
test
xor
sub
add
push
movsb
mov
jnp
or
xchg
in
aaa
dec
mov
insb
and
or
push
sub
js
stos
cmp
out
pop
sbb
shll
inc
pop
out
flds
mov
mov
cmc
xor
xchg
les
xor
push
sarb
cli
pop
sub
push
sbb
mov
mov
sub
outsb
xchg
icebp
jo
in
cmp
cld
sti
jb
mov
push
mov
xor
hlt
popf
push
mov
adc
mov
cmp
movsl
mov
xor
dec
sub
test
inc
mov
or
pusha
mov
lcall
stc
out
lods
cmp
lahf
ss
mov
nop
mov
xchg
pushf
cltd
pushf
mov
add
adc
loopne
std
push
insl
pushl
movsl
stc
mov
icebp
aaa
test
imul
sbb
loop
orb
inc
je
push
inc
lods
cmpl
sbb
mov
cmp
pusha
push
or
and
jbe
or
and
stos
pop
and
add
stos
mov
cwtl
fistpll
pop
test
cmpsb
push
popf
aad
and
rolb
or
sarl
mov
mov
push
cli
and
aaa
imul
int
movsb
les
add
jp
sbb
cmpl
xor
test
inc
pop
add
or
icebp
or
and
sbb
add
imul
test
lea
and
jns
es
cli
fistpll
sahf
cmc
jae
push
stc
push
lea
dec
sub
shrl
lcall
xchg
cmc
pop
mov
jno
out
mov
pop
imul
xchg
mov
mov
test
shl
pop
cld
rcr
sub
cmp
xor
push
dec
push
cli
dec
mov
pusha
mov
outsl
jns
call
test
repnz
inc
pop
push
pop
int
inc
shrl
mov
sbb
out
in
sub
push
pop
test
pop
faddl
js
cli
mov
js
aad
fucomp
pop
inc
mov
or
fsts
outsl
loop
int3
ljmp
lods
mov
pop
pop
shlb
icebp
enter
mov
dec
jmp
push
add
test
adc
stc
xchg
dec
sbb
sub
or
cmp
mov
fnstsw
jns
call
mov
inc
mov
loope
repnz
out
mov
xor
mov
lret
mov
mov
stc
add
jno
adc
gs
movsl
pop
adc
sub
popa
test
dec
lock
xchg
int
sbb
pop
adc
jecxz
mov
jp
xchg
mov
dec
adc
xlat
ret
scas
addr16
pusha
sti
data16
mov
cli
push
inc
add
fmuls
xchg
mov
sub
cltd
cmp
dec
fdivs
jle
in
sbb
mov
pusha
shll
xchg
and
imull
xor
loopne,pn
dec
aad
cmp
add
cmpsl
iret
repnz
repnz
lahf
xchg
fists
adc
out
and
push
push
dec
pop
jl
ss
outsl
xorb
mov
repz
and
and
loop
push
dec
sarb
popf
mov
mov
pop
aaa
sbb
imul
sub
sti
enter
fisttps
cli
inc
add
mov
push
xor
ja
jae
sbb
fstpt
add
leave
xor
sub
add
add
add
jne
push
sub
enter
cs
and
sbb
inc
aaa
in
pop
ret
data16
hlt
dec
loop
sbb
sbb
mov
les
add
xchg
aas
sub
push
sbb
aad
sub
mov
sbb
movsb
pop
or
cmpsb
pop
sbb
adc
adc
mov
sub
xor
jmp
mov
int3
pop
sbb
push
addb
out
jnp
int
sub
into
repz
stos
sub
ljmp
sbb
arpl
test
inc
jne
sbb
cmp
mov
inc
dec
push
or
test
pop
jecxz
pop
push
jne
cmpsl
shl
lods
out
push
ret
pop
leave
jae
xor
xor
or
enter
cmp
ljmp
cmp
mov
dec
and
negb
and
sub
push
aas
mov
neg
ds
cmp
movsl
lock
mov
repz
jl
sub
call
lock
cmp
and
jno
imul
adc
mov
insl
cmpsl
xchg
cmp
push
mov
jmp
cmp
dec
xor
repz
lahf
ret
lahf
mov
dec
mov
mov
jge
lret
dec
es
jno
pop
dec
into
mov
jmp
sti
test
add
cmpxchg
popa
mov
leave
adc
les
outsl
aas
jo
jns
xor
ret
mov
addl
and
in
in
cmp
xchg
lahf
aas
aas
mov
dec
leave
pop
outsb
inc
adc
jecxz
cmp
mov
in
iret
sti
fwait
add
ja
lea
in
mov
in
cmp
lret
pop
pextrw
mov
mov
imul
inc
sub
or
stc
cmpsl
jns
subl
mov
mov
lcall
mov
fstpl
lret
cmp
sub
mov
sub
dec
gs
cmp
rcrb
or
es
or
stc
sub
sahf
or
dec
cld
mov
and
and
cmp
and
or
adc
popf
push
insl
xchg
push
xchg
xlat
push
xor
scas
lock
mov
cld
and
or
popa
fimuls
pop
insb
ffree
dec
not
jbe
jmp
cmp
push
cld
mov
test
gs
mov
fistpll
mov
lods
loopne
mov
push
aam
int3
push
pop
push
stos
pop
stos
scas
loopne
out
mov
mov
adc
mov
into
sbb
mov
push
jo
xchg
sub
cmp
dec
imul
icebp
fidivrs
dec
out
stos
mov
mov
mov
cmp
mov
je
jno
stos
dec
mov
pop
add
cltd
push
push
lods
sub
clc
pushf
push
stc
cmpsb
adc
inc
adc
outsl
mov
push
push
icebp
aad
addr16
lods
into
idivl
pop
es
jmp
adc
sbb
jmp
andb
sub
scas
sub
sbbl
jle
cmpsl
js
xchg
rorb
xchg
mov
cmp
inc
add
call
mov
dec
push
cld
or
flds
push
sti
fdiv
adc
rorl
loop
and
mov
adc
lret
mov
frstor
inc
repz
stc
push
xchg
iret
xchg
mov
jg
daa
stos
aam
out
xor
adc
cmp
sub
sbbb
test
sub
dec
cltd
mov
jne
sbb
push
lods
insl
stc
mov
stos
jns
enter
into
aaa
jg
fbld
xchg
inc
sub
lods
hlt
rcll
xor
in
jecxz
movsl
ss
push
and
test
loope
icebp
push
vmread
add
and
clc
inc
pusha
and
popf
jg
test
dec
jns
jo
pop
clc
cli
or
stos
jne
dec
adcl
lea
adc
jnp
sub
add
repz
add
sbb
daa
dec
mov
mov
sahf
shrd
push
mov
lds
jbe
cwtl
adc
fcmovnu
hlt
adc
inc
in
je
push
dec
xor
lret
or
jae
test
test
int
int
bound
jp
dec
add
sbb
push
mov
insb
out
mov
or
jl
cmp
adcl
and
and
push
pop
pop
fwait
xchg
sbb
out
out
fildll
fwait
or
pop
das
adc
fnstcw
push
pop
mov
mov
bound
popa
repz
leave
mov
test
test
adc
out
jne
dec
mov
into
and
test
nop
xor
negl
push
jns
add
mov
mov
in
loope
inc
and
adc
pop
test
pop
ljmp
dec
popa
inc
adc
in
icebp
cmp
jle
push
sub
subl
pop
cmpsl
jae
xchg
jbe
fcmovnbe
es
and
in
rorb
inc
leave
js
mov
xchg
sub
scas
leave
adcb
out
lods
scas
ja
jbe
insl
aam
pop
mov
pop
and
push
add
sbb
sarb
js
in
fidivl
leave
pop
mov
outsl
data16
xchg
aam
cmp
mov
clc
sub
inc
icebp
and
mov
ret
inc
popf
in
incl
enter
loope
mov
xchg
int3
mov
rcll
and
mov
mov
test
test
cmp
push
push
and
cmp
or
inc
test
fnstsw
cmp
add
dec
stc
sti
test
lcall
insl
fs
popf
sub
adc
cltd
jno
dec
jo
je
xor
mov
dec
dec
lods
aas
movsb
std
push
mulb
push
jge
test
xor
inc
cmp
and
push
push
jne
jne
push
sbb
mov
inc
xchg
adc
jle
inc
xchg
shll
js
lods
mov
cmpsb
sahf
push
pop
xchg
dec
imul
imul
push
repz
add
call
ja
jno
stc
xchg
fcomps
or
cmp
mov
and
push
loopne
mov
adc
iret
fcomip
inc
xchg
adcl
insb
and
imul
adc
cs
aad
outsb
or
push
sahf
ja
shl
add
inc
loope
data16
inc
push
add
rcrb
mov
push
pop
xchg
sbb
aad
pop
fidivs
call
cli
stos
mov
sti
ss
mov
adc
int3
data16
ffree
jl
gs
insb
repz
stos
cmp
xchg
stos
xor
stos
push
mov
dec
fwait
testb
out
dec
lahf
and
dec
xor
popf
frstor
lock
cmpsb
scas
test
mov
divb
jg
mov
pcmpgtd
int3
sbb
lds
pop
test
daa
xchg
es
shrb
pop
insl
rcrl
rorl
cmp
aam
push
and
adc
das
xchg
dec
call
xchg
and
cmpsb
mov
repz
movsl
inc
adc
jns
xor
jge
push
push
adc
pop
adc
jmp
mov
push
lret
mov
ja
inc
enter
test
xor
inc
test
cmp
or
dec
mov
mov
mov
cmp
pop
add
js
inc
jg
dec
lcall
cmp
mov
sbb
sbb
pop
fst
xchg
or
fiaddl
add
out
or
aas
pop
cmp
popf
cmpsb
fldenvs
jp
xlat
insl
divb
mov
or
int
or
sub
ljmp
mov
sbb
pop
js
mov
fcmove
out
push
xchg
les
sarb
idivb
dec
inc
mov
jo
insb
adc
cli
mov
stos
cmp
das
mov
push
rorb
push
in
loopw
aaa
sbb
addr16
divl
xchg
cwtl
arpl
adcb
push
adc
cmp
jne
cltd
shlb
outsb
xor
mul
movsl
pusha
js
mov
cmp
outsl
sbb
mov
jge
cmp
ret
int3
push
in
in
xor
adc
nop
push
jecxz
mov
or
mov
xchg
push
mov
outsb
scas
cmpsb
mov
lock
adcl
inc
jge
or
and
mov
jg
and
sbb
insl
push
std
mov
in
nop
mov
nop
cmp
fwait
lds
mov
sti
jl
adc
add
mov
rorb
lcall
mov
ret
ret
xchg
mov
dec
ficomps
add
jg
test
xchg
incl
les
mov
int
dec
leave
insl
jecxz
les
mov
mov
fstpt
jmp
cmc
jl
fisttpl
incl
fucomp
push
decl
hlt
and
popf
shlb
aas
idivb
dec
cmpsl
into
and
popa
dec
or
test
sbb
popa
jmp
dec
add
xchg
loopne
push
mov
iret
mov
xchg
ret
jb
push
cli
bound
rclb
mov
cmpsb
rcrb
mov
mov
jae
repz
imul
sub
xor
cmp
xchg
dec
shlb
movsl
jno
push
pop
mov
push
cs
mov
fisubl
sbb
not
jmp
insl
push
test
cwtl
push
sub
fwait
sbb
xchg
pop
mov
imul
pop
jnp
add
je
sahf
cs
mov
popa
add
repnz
loop
push
or
adc
popa
rol
sti
daa
push
cmp
and
jmp
shll
xlat
mov
adc
inc
jge
scas
mull
inc
cli
std
shl
jecxz
or
push
mov
inc
lcall
and
jb
adc
mov
stos
push
in
push
sbb
and
and
dec
mov
and
xor
and
mov
or
adc
and
jge
xchg
shll
jmp
fiaddl
in
aas
mov
push
stos
or
ljmp
out
sbb
icebp
push
jb
push
insb
xor
xchg
pop
xchg
shrl
fs
and
sbb
jno
js
dec
jbe
xor
sub
int3
mov
pop
movb
ss
adc
mov
or
shrb
sbb
imul
jbe
fdivp
adc
sub
mov
pop
mov
jne
sub
fdivrs
fstps
or
rcrl
rcl
or
or
sahf
adc
pop
mov
dec
mov
pushf
test
int3
pop
mov
mov
imulb
mov
push
out
lds
pop
inc
in
mov
pop
hlt
xchg
push
or
in
imull
jmp
insl
ret
mov
call
fimull
pop
bound
aam
aas
adc
lock
sbb
jae
xchg
and
shl
adc
pop
xor
mov
in
lret
outsl
fdivs
daa
adc
mov
xor
cmp
pop
gs
add
mov
mov
fwait
jg
and
inc
push
negl
lcall
test
icebp
jmp
call
hlt
push
mov
out
das
loope
cs
aas
xacquire
je
cmc
imul
adc
mov
inc
mov
and
std
push
stc
out
repz
cwtl
clc
fbld
push
pop
pop
out
ret
mov
or
loopne
fcomps
cmpsl
les
pushl
xchg
dec
icebp
mov
or
test
and
js
lods
out
cmc
nop
shll
std
xchg
lods
sbb
movl
mov
js
test
cmp
sbb
fstl
push
and
outsb
xchg
push
xchg
mov
scas
test
push
xchg
cmp
and
sub
inc
loopne
cmovs
xchg
dec
sbb
inc
loope
test
test
cli
mov
mov
popf
pop
daa
aad
es
cltd
xor
pushf
scas
jp
fwait
repnz
push
sub
pop
jno
inc
or
fldcw
popa
cmp
mov
fildl
add
jp
sub
test
cmp
gs
loope
aaa
stc
fisttpl
push
mov
dec
xchg
std
loope
mov
mov
pop
enter
mov
es
jno
or
pop
lea
jns
cmpl
push
cli
mov
or
lret
inc
sub
push
es
push
inc
aaa
mov
dec
adc
test
into
std
dec
aas
je
cld
push
fcmovne
fiadds
mov
push
pop
adc
xlat
mov
roll
popf
and
pop
jb
pop
stc
mov
dec
fisttps
and
xchg
stos
or
mov
and
aas
int
xchg
imul
int
fdivs
mov
mov
notb
in
mov
loopne
int
int
aad
xchg
ljmp
push
sbb
gs
push
cmp
into
mov
mov
add
add
test
add
sbb
test
andl
cmp
int
rcrl
mov
jg
ret
xlat
cmp
mov
aaa
cs
push
add
int
lret
or
lods
jnp
xchg
shr
mov
cmovns
jl
sarl
nop
aad
icebp
aaa
test
push
leave
pop
mov
sahf
lock
inc
cmp
mov
xchg
mov
pushl
ret
lcall
pop
lods
add
dec
psadbw
sub
in
pop
jle
mov
push
cmp
lcall
repnz
shrb
jns
roll
xor
cmpsl
jge
xor
sbb
ret
aam
sub
push
icebp
fwait
lods
pop
fidivs
inc
push
jns
addl
imul
test
cmp
fwait
je
mov
bnd
jp
dec
fstps
xchg
mov
dec
mov
push
mov
inc
sarl
add
clc
sbb
inc
ret
and
in
mov
shl
sub
jns
mov
and
mov
adc
lret
and
gs
mov
sbb
out
push
cli
push
mov
adc
divl
sbb
or
mov
jle
jmp
ljmp
mov
call
or
add
xchg
aaa
mov
std
sub
mov
jp
fbstp
jge
loopne
into
insb
push
in
adc
lcall
jo
lods
pop
lock
std
jmp
inc
out
jno
sub
sbb
jl
scas
inc
mov
sub
adc
xlat
fadd
pop
ret
cmp
nop
repz
add
ficompl
push
js
ljmp
stc
pop
ficompl
inc
jno
add
jns
stc
mov
mov
imul
push
inc
xor
test
pop
lds
xchg
or
jmp
xchg
adc
sub
sbb
dec
jns
inc
mov
mov
mov
leave
xor
pop
scas
push
jl
fcoms
jne
loopne
stc
mov
movl
mov
movsl
jae
insb
stos
aam
or
inc
mov
fucomi
push
xchg
and
ret
push
mov
jl
add
mov
lret
shll
popf
pop
fwait
out
dec
xor
lods
testb
into
cld
mov
lret
shll
addr16
mov
pop
sbb
sub
loope
mov
daa
sti
test
shrb
int
mov
dec
loopne
mul
out
cltd
push
pop
inc
fs
fistpll
mov
mov
enter
pop
cmp
jecxz
neg
rorl
inc
sbb
stc
outsb
aas
iret
fstpl
and
mov
pop
add
outsb
out
mov
sub
ret
stos
testl
pop
and
cmpsl
jmp
mov
jmp
sbb
jl
jmp
sub
pop
lret
shrb
or
adcb
sar
sbb
rcll
push
cmp
adc
lods
cmp
add
gs
aam
mov
clc
push
lock
lock
cwtl
push
scas
dec
and
inc
ret
sbb
adc
mov
and
sbb
dec
and
std
fwait
mov
cwtl
in
xchg
pop
jb
test
and
dec
aaa
icebp
and
icebp
or
popa
mov
xor
lret
dec
outsb
fcmovb
pop
in
pushf
sub
and
outsb
xor
fs
frstor
inc
xchg
cs
shrb
lock
pop
daa
push
push
stos
jecxz
clc
rol
stc
add
scas
out
imul
jmp
leave
mov
xor
and
out
ror
leave
sarl
mov
stc
popf
mov
lea
aaa
jbe
pop
lds
sub
mov
pop
cmp
popa
in
xchg
pop
mov
inc
mov
or
inc
into
cmpsl
sar
adc
mov
mov
lds
xorb
mov
and
mov
mov
pop
xor
sahf
or
mov
jge
insb
leave
mov
push
cmpsl
aam
xor
lock
push
push
es
push
adc
stc
jb
inc
xor
push
ja
mov
pop
mov
xchg
cmp
mov
add
pop
xchg
test
push
adc
jbe
inc
or
inc
sbb
std
adc
xlat
movsl
jae
subb
cmpsw
xchg
jp
call
test
imul
lea
adc
or
pop
mov
fstpt
add
ret
js
pushf
add
mov
cli
jnp
popf
je
xchg
adc
daa
arpl
into
jo
xlat
imul
out
addr16
sarb
adc
pop
cwtl
xor
inc
loop
cmp
aad
push
imul
jge
push
outsl
adc
fwait
int3
add
mov
shrb
loop
testb
add
xchg
push
fildl
addr16
mull
out
mov
sub
cmp
cltd
push
test
ds
add
ror
movsb
fdivr
data16
lods
cmp
mov
sar
hlt
andb
sub
xor
pop
fstpl
inc
test
clc
fisubs
mov
pusha
mov
test
mov
push
shr
xchg
out
cwtl
jb
call
lret
sbb
mov
inc
es
mov
push
adc
sarb
adc
push
sbbl
adc
jmp
mov
or
and
ret
jle
push
sbb
arpl
mov
mov
cld
imul
outsl
xchg
das
movsl
dec
inc
mov
stos
sbb
jo
and
out
or
fists
cmp
test
jmp
cmp
sbb
adc
outsl
mov
lret
les
mov
jecxz
mov
scas
out
inc
lods
fwait
and
pushf
sub
fs
bound
mov
clc
and
sub
add
mov
notl
cmpl
push
pop
pop
je
movsl
ror
cmc
xor
push
push
lahf
mov
hlt
pop
or
ss
add
mov
dec
ljmp
push
dec
fdivrl
cwtl
iret
addr16
mov
pop
push
sbb
sbbl
test
scas
andl
mov
adc
mov
push
cmp
mov
xchg
sub
mov
sub
mov
cs
testw
pop
jns
ret
loopne
ja
loope
sarl
int
inc
popf
mov
int
cmpsl
cmp
jg
inc
adc
mov
imul
xchg
cmpl
aad
pushf
insb
add
lods
push
or
ja
sbb
lret
andb
sbb
fistpll
call
push
add
and
pop
nop
mov
pop
mov
mov
cmpsl
je
dec
cld
rorb
lds
insb
mov
xchg
fildll
cmp
lcall
ret
push
jno
inc
rcrl
lods
push
push
inc
mov
cmc
jge
mov
sarl
out
push
fs
push
pop
sbb
cmp
insb
sub
pop
jl
dec
repnz
mov
mov
mov
nopl
add
call
scas
mov
add
adc
jg
pop
mov
dec
or
or
mov
aas
pushf
out
mov
cmp
dec
bound
decb
ja
jmp
sahf
xchg
insb
aas
mov
sbb
pushf
add
fimull
inc
xor
jp
add
xor
xor
andl
je
loop
and
das
fimull
lret
into
cmp
xor
int3
scas
sbb
insb
mov
adc
sbb
js
das
repz
and
cmp
pushf
mov
pop
out
das
bound
lcall
mov
sub
pop
cltd
jb
les
mov
inc
hlt
adc
xchg
pop
adc
lea
cvttps2pi
xchg
outsb
insl
lret
xor
adc
daa
cmp
sub
dec
push
dec
loop
mov
inc
nop
and
inc
popf
and
je
addr16
inc
jb
popf
jle
out
stc
cmpsl
adc
lds
in
sbb
aad
and
xorb
in
cltd
imul
xchg
mov
mov
icebp
xor
push
or
inc
xchg
and
and
pop
xchg
sbb
sub
inc
sbb
add
lahf
jl
idivb
in
mov
mov
test
loopne
in
outsl
cmp
roll
mov
pop
xor
push
inc
imul
inc
pop
dec
jmp
mov
inc
jno
faddl
pop
lahf
mov
jbe
jg
xchg
adc
in
push
mov
lret
ret
arpl
inc
rcrb
push
mov
mov
push
xchg
add
jo
ficomps
or
ret
pop
jmp
pop
cmc
and
stc
scas
xchg
ret
adc
clc
dec
cmp
addr16
movsb
ds
icebp
lret
jae,pt
sub
inc
fs
jl
cld
mov
das
test
xlat
out
mov
imul
hlt
inc
mov
stc
pop
scas
push
repz
mov
xchg
dec
or
inc
pop
lods
and
mov
adc
xor
jo
inc
test
popf
cwtl
lcall
sbb
mov
mov
std
jl
inc
and
test
cmpsb
adc
pop
jmp
imul
mov
mov
xchg
daa
pop
dec
lea
bound
pusha
fildll
jns
outsb
mov
aad
sub
mov
in
fisttpll
loopne
leave
or
cmp
mov
rcll
cmpsb
in
daa
in
cmp
roll
add
je
sub
push
inc
cwtl
dec
jp
mov
lret
scas
rclb
gs
and
or
pop
flds
loope
rclb
addr16
popf
cmpsb
imul
or
jb
cmp
xchg
cmp
aad
imul
test
imul
ficoml
add
filds
push
jp
shlb
pop
sbb
and
xor
or
fisttpll
cmp
sub
test
test
inc
or
movups
push
cli
inc
xchg
sub
jne
jecxz
adc
pop
pop
pop
jb
push
loopne
jp
jno
or
jp
mov
sub
mov
push
gs
jle
inc
fists
rep
enter
xor
out
sub
popa
pusha
sbb
shrl
in
jmp
or
or
fstps
cmp
and
xchg
pop
cmp
hlt
in
xchg
mov
cmp
sbbl
mov
fidivrs
jb
fsubr
frstor
movsl
inc
xchg
jns
insb
cli
cmp
mov
aas
push
push
jecxz
cltd
pusha
jp
mov
clc
divb
rolb
ja
mov
mov
test
aas
repnz
mov
or
dec
push
sbb
enter
push
push
cmc
xor
cli
adc
inc
call
add
cmpl
daa
adc
mov
mov
insl
rcll
cli
or
mov
adc
int3
rcr
daa
and
mov
pop
in
sti
push
in
cmp
sarb
rcrb
addl
scas
scas
inc
adc
cmpsb
in
push
daa
cmp
lahf
mov
jne
subl
cmp
test
adc
rolb
mov
and
add
push
movb
outsb
mov
pop
aam
lea
cltd
sahf
inc
push
shrb
addr16
mov
shlb
cmp
pop
fs
cmp
mov
sahf
aas
push
pusha
rolb
daa
xchg
loope
imul
mov
outsb
int3
push
mov
xlat
mov
adc
mov
cmp
nop
les
add
lea
inc
icebp
adc
xor
jns
mov
and
ss
sbb
inc
mov
pop
pop
fldcw
vmptrld
fldl
xchg
orb
fistpl
sub
push
int
add
repz
dec
and
std
xlat
lods
mov
pop
leave
js
push
mov
xor
xlat
pop
lods
mov
push
cmp
fwait
ds
xchg
push
sar
into
cmp
push
push
push
or
shll
sub
je
test
cmove
test
clc
push
xchg
fisttpl
fs
loope
xchg
aaa
fucomp
adc
pop
dec
stos
mov
loopne
add
xor
push
and
and
xor
pusha
cli
arpl
add
sbbb
mov
into
and
imul
fnstenv
adcl
ljmp
mov
bound
mov
ljmp
cmc
scas
in
pusha
sub
pop
adc
ret
push
loop
sti
inc
pop
xchg
pop
pop
ud0
lock
fnsave
lea
scas
in
dec
push
push
out
adcl
std
sarl
mov
mov
stos
cmp
add
xor
mov
fs
stc
mov
sub
testl
test
cmpsb
mov
testb
pop
cmc
loop
sbb
add
fstl
jae
add
int3
out
or
fmulp
fadd
or
loop
setg
cmp
jns
loop
xchg
jo
mulb
scas
shlb
xchg
in
inc
dec
popf
test
mov
and
rcrb
push
and
push
add
mov
mov
adc
mov
rolb
inc
cmp
arpl
adc
mov
fs
dec
sti
mov
jl
add
add
in
sub
add
sub
fldt
xor
cmp
and
cmc
xor
push
push
icebp
push
mov
and
dec
stos
mov
pop
fbld
xchg
mov
and
hlt
mov
out
stos
dec
fadds
adc
cmp
push
das
cmp
add
jbe
xchg
adc
ja
cwtl
dec
mov
lcall
fcomps
mov
test
cwtd
in
push
inc
pusha
dec
fisubs
lea
arpl
lret
dec
mov
mov
mov
jb
loopne
xlat
ss
lahf
or
or
movsb
sub
sbb
or
mov
sbb
sub
xchg
loop
sahf
pop
mov
out
jne
fcoml
mov
sti
fstpt
ret
flds
xlat
pop
stos
jns
and
push
out
xor
xorl
in
or
sub
xchg
out
jns
nop
pusha
mov
and
outsl
dec
push
adc
mov
pop
jge
jae
cmp
mov
push
int3
sub
clc
mov
xlat
scas
mov
outsb
pop
ljmp
xchg
dec
cmc
mov
mov
and
sub
movsl
icebp
das
ja
aas
insb
jmp
faddp
loop
popa
scas
lahf
outsl
mov
mov
xor
neg
loop
int3
or
and
cmp
add
sbb
stc
das
xchg
ficompl
xor
push
pop
and
repz
add
lock
sub
sub
sti
mov
add
rcl
out
push
mov
lcall
add
mov
add
sbb
shrl
fnstsw
or
cli
pop
aas
hlt
push
lahf
cs
push
ja
mov
mov
ds
mov
xor
fcom
out
sub
in
inc
or
scas
sub
mov
or
loop
add
add
leave
std
stos
pop
loop
aam
xor
iret
gs
push
jno
outsl
ja
mov
mov
sub
and
ret
ret
je
shrl
fcmovnu
leave
scas
mov
jp
sbb
mulb
adc
xchg
adc
das
xchg
sbb
xor
dec
and
sbb
jnp
cld
xchg
push
lock
or
dec
aad
push
sahf
adc
cmp
mov
pop
add
mov
pushf
sub
addr16
rorl
mov
adc
or
adc
movl
rol
jnp
push
mov
push
cli
cmp
lret
push
push
or
jge
dec
or
cld
sub
jb
push
cltd
inc
cmp
xchg
push
pop
call
mov
xor
shll
cwtl
or
in
js
inc
pcmpeqd
xchg
sbb
dec
sbbb
clc
inc
outsb
sbb
stc
js
dec
dec
inc
je
adc
sbb
insb
mov
in
push
dec
mov
add
xor
xchg
bound
pusha
cmp
pop
mov
dec
xor
pop
loopne
jl
jge
or
scas
cmp
sbb
insl
fmull
push
xchg
dec
stc
sub
or
adc
pushl
lcall
ljmp
pop
popf
outsl
jecxz
sub
les
pushf
imul
addb
dec
sbb
data16
cmp
test
cs
push
inc
pop
adc
std
pop
dec
jle
jmp
test
andnps
adc
jl
movsl
ljmp
push
fsubs
scas
inc
xor
lret
gs
gs
loope
mov
dec
jmp
hlt
sub
fsubrl
cmc
cwtl
cmp
sbb
ret
xchg
add
and
ret
shlb
adc
pop
or
lea
loope
and
sbb
and
daa
test
out
mov
test
test
addl
push
mov
jbe
into
push
jnp
mov
xlat
lret
das
popf
sbb
lret
lahf
jns
nop
xchg
cmpsl
mov
cmp
and
add
aaa
daa
fsubp
add
or
cmp
sub
mov
mov
inc
pop
and
inc
stos
jmp
imul
test
enter
xchg
sahf
or
inc
popa
out
adc
mov
jne
fiadds
lds
jbe
sbb
loope
mov
daa
in
bound
push
out
ret
and
push
push
aaa
push
scas
xor
shl
stos
out
add
enter
popf
mov
fwait
cmp
mov
xchg
dec
jp
cmp
daa
inc
cli
inc
sub
movsl
sar
mov
out
mov
dec
add
sahf
fs
mov
lret
rcl
lret
scas
mov
lds
xor
outsb
lahf
outsb
dec
in
in
lods
shll
jo
out
push
push
pushf
jb
testb
pushf
add
xchg
fbstp
fs
jle
dec
inc
pushf
mov
scas
pop
test
or
orl
mov
repz
addl
cmpsl
movsb
push
dec
sbb
mov
clc
mov
mov
cltd
pop
xchg
push
push
aaa
jmp
leave
and
push
lcall
push
fcmovbe
cmp
mov
bound
shll
ret
add
cmp
lea
push
xlat
mov
jb
mov
incb
lock
fs
test
ljmp
and
sbb
pop
xchg
outsl
fstl
lret
jae
xchg
daa
loope
mov
mov
add
sub
jmp
out
imul
adc
mov
cmpsl
int3
pusha
pop
out
mov
push
cmp
push
pop
jecxz
jbe
nop
insl
cmpsb
adc
dec
cld
mov
inc
fstpt
shl
lcall
mov
push
jecxz
mov
testl
fldenv
inc
mov
into
pop
sti
push
hlt
sbb
mov
iret
pop
repz
int3
loop
dec
jecxz
sbb
xor
xchg
xor
sub
imul
mov
sub
adc
mov
fisubrl
imul
jae
jp
inc
stos
mov
mov
out
cmc
sub
add
mov
fcmovnu
daa
cmpb
push
in
fistl
or
lcall
jle
aad
mov
aad
rcll
jns
push
jg
mov
lret
addb
outsl
in
subl
mov
and
adc
jo
lea
inc
push
icebp
pusha
and
xor
stos
jmp
loopne
lds
outsb
xor
and
add
call
insb
push
add
inc
repz
cmc
jge
push
or
dec
popa
sbb
jg
mov
sub
mov
hlt
adc
daa
jmp
filds
push
xor
sub
xor
mov
add
ljmp
cmp
xor
ds
jge
dec
xchg
xor
cli
cmp
repz
shlb
cli
dec
pop
push
cmpsl
es
stos
add
loopne
out
mov
push
xchg
xchg
lret
dec
jecxz
xchg
pop
adc
lahf
jg
dec
ficomps
mov
pop
sbb
mov
mov
shlb
and
lea
lods
or
lahf
mov
add
in
adc
repnz
pop
adc
fidivrl
std
cmp
fisttpl
mov
loope
into
rclb
orb
cmp
das
roll
sahf
andb
pop
push
les
adc
movsl
rcrb
sub
xor
cmc
sub
testl
sbbl
push
mov
sbb
mov
mov
xor
sub
adc
xor
xchg
xorl
movsb
mov
sub
xor
dec
dec
lcall
in
cs
arpl
jl
cmp
fcompl
insl
rolb
fwait
mov
call
cmp
add
cs
rorb
xchg
sbb
mov
movl
test
push
dec
push
js
dec
das
push
in
adc
push
stc
outsb
sbb
test
inc
sub
jge
push
or
mov
add
pop
push
insb
lods
cmp
mov
out
mov
or
in
push
cltd
lock
das
dec
ja
test
mov
sbb
cs
cmc
subb
xchg
mov
push
cltd
sbb
adc
movsl
mov
xchg
jo
mov
mov
and
daa
insb
pop
loope
sub
mov
jne
ljmp
repz
sub
int3
scas
add
dec
ret
xchg
sub
jb
mov
mov
leave
jno
repz
mov
sbb
xor
mov
xor
shrl
add
mov
ljmp
lahf
lods
lds
sub
mov
movsb
jmp
push
dec
jecxz
popf
stc
sahf
rcr
das
jno
sbb
mov
test
adc
int
sub
lods
test
imul
mov
cmp
aam
inc
sbb
inc
test
stos
fstpt
fsub
push
jg
inc
add
lcall
outsb
pop
lret
outsl
sti
adc
jecxz
popf
test
jb
pshufw
cmp
test
call
addr16
push
xchg
sahf
bound
xchg
pop
jp
mov
das
movsb
rorb
sarb
ficompl
pop
fwait
dec
pop
lock
fadds
pop
out
or
cmp
ret
aas
fnstcw
or
mov
pop
inc
sarl
out
fisubrs
adc
mov
jl
xchg
hlt
cmp
lock
rcll
ret
xor
mov
clc
fcompl
ret
and
xorb
adc
and
xor
nop
movsl
cmpsl
jb
jecxz
inc
fbstp
mov
mov
sbb
or
das
das
and
adc
ret
fists
xor
in
sbb
mov
pushf
repz
outsb
mov
aaa
adc
and
dec
mov
scas
arpl
mov
jnp
add
ret
jbe
pop
or
jle
in
jg
mov
mulb
rcrb
dec
movsb
es
pop
mov
xchg
int
aas
or
push
sahf
cmpsb
incb
jecxz
pop
push
ret
clc
cmpsl
jbe
outsl
movsl
fiaddl
or
arpl
incb
aad
cwtl
mov
lret
mov
mov
jecxz
push
mov
fcmovnb
cmp
js
lds
xor
icebp
mov
push
mov
shl
fiaddl
inc
outsl
cmc
test
inc
jg
sti
insl
ret
xor
add
fwait
push
xchg
stos
sahf
jmp
sub
mov
add
movsb
insl
xlat
add
cmp
mov
insb
imul
enter
xchg
pop
pop
in
popf
push
cmp
fldt
int3
outsl
faddl
add
lea
out
push
ret
dec
mov
outsl
sub
movsl
movsb
jp
icebp
jne
cwtl
push
and
test
movsl
addr16
mov
in
sbb
test
add
add
or
xor
push
mov
push
cld
movsl
mov
and
es
or
mov
pop
xchg
mov
adc
adc
xor
push
lock
xor
cld
xchg
dec
or
adc
mov
adc
out
pop
push
scas
into
inc
inc
icebp
out
pop
pushl
cmp
and
push
push
incl
hlt
and
popf
xchg
ficoms
mov
int
imul
mov
lods
sub
sub
ret
cmp
cmp
fcmove
mov
jbe
jle
pop
cmp
enter
push
pop
cmpsl
sahf
xchg
fs
sub
repnz
inc
jmp
and
insb
xor
jne
inc
jbe
hlt
push
lret
sti
add
add
test
cmp
dec
lret
arpl
pop
push
push
fimuls
scas
imull
adc
popf
xchg
aad
popf
es
mov
mov
mov
mov
dec
enter
adc
rorl
mov
aad
and
pop
test
hlt
jmp
jg
fdivp
push
test
lahf
daa
aaa
cltd
add
andl
lcall
hlt
loope
lock
or
xchg
xorl
in
mov
sbb
repz
and
cmp
fsubrs
mov
jmp
and
fdiv
cmp
fstps
mov
or
push
dec
cltd
inc
addr16
xor
jno
stc
lea
sub
rolb
inc
mov
sbb
hlt
sbb
jmp
cmpsb
std
dec
insb
aaa
cmp
and
jecxz
ficoms
adc
xchg
mov
imul
cmp
push
cwtl
inc
rcl
testl
out
fwait
int
mov
mov
xor
outsl
push
popf
add
stc
add
adc
pop
push
mov
enter
pushf
dec
bound
faddl
lret
lods
fs
or
ja
daa
outsl
sahf
mov
mov
in
stos
mov
sahf
popf
xchg
sbb
dec
les
sub
ds
fisubrl
mov
hlt
ret
sarb
cmp
fxch
mov
adc
sub
stos
pop
sbb
mov
or
mov
inc
xchg
lock
fcmovbe
fs
inc
rcrb
mov
nop
or
sbb
add
dec
jb
lock
loop
loop
jnp
jle
lods
xchg
inc
pop
out
jg
in
aas
lods
enter
cmc
push
sbb
inc
lea
xor
popl
cmp
lock
dec
comiss
cld
push
mov
mov
rcl
jae
sub
clc
subb
jmp
cmp
push
xchg
icebp
xor
cmp
adc
adcl
push
icebp
movsl
mov
jp
loop
add
into
add
loop
jno
xor
mov
mov
jg
push
jno
add
imul
rcrb
or
lret
mov
lock
aad
in
xchg
pushf
hlt
mov
adcb
sbb
in
popf
popl
xchg
push
jecxz
lcall
cmp
andb
push
lret
loopne
pop
mov
lods
fwait
leave
shl
xchg
sub
mov
jnp
cli
adc
jecxz
ret
clc
push
push
or
lock
mov
mov
stc
or
sbb
test
jecxz
stc
jmp
pop
sub
jnp
bound
popa
push
movsl
out
fdivl
cmp
mov
aaa
jl
into
dec
push
lods
cmp
cmc
jp
cmp
or
leave
jns
xor
dec
fcmovu
add
daa
js
jge
lds
nop
pop
int
jecxz
call
xchg
jg
xchg
in
jl
cltd
test
repnz
and
push
jle
adc
popa
push
fdivrl
hlt
lds
out
add
getsec
mov
sub
xchg
mov
testl
out
dec
or
add
or
mov
xlat
add
iret
pop
addr16
out
jno
loop
sbb
dec
cmpsb
incl
mov
dec
movsb
mov
outsb
lods
mov
adc
pop
rolb
xchg
das
cmp
xor
mov
int
aas
mov
push
mov
sarb
add
cwtl
jmp
and
aad
dec
stos
add
push
mov
jne
dec
mov
dec
roll
pop
inc
shrl
aas
fwait
mov
decb
inc
outsl
filds
pop
test
adc
mov
inc
mov
mov
pop
ltr
mov
shlb
aas
and
mov
cmp
sbb
fwait
push
adc
or
test
fcoms
jg
mov
push
xor
dec
jns
into
push
sbb
out
popf
jecxz
adc
jbe
xchg
push
mov
add
ss
repnz
lahf
push
xchg
ja
mov
popa
mov
pushf
push
or
jmp
mov
out
mov
lock
or
out
push
rorl
fwait
jl
or
loope
cmp
sarl
mov
rorb
xchg
jge
cs
inc
in
jle
and
push
pop
xchg
pop
iret
jae
dec
aad
stos
push
rolb
sti
push
push
xor
push
shlb
loop
loope
jge
cld
aad
in
cltd
mov
cld
or
xchg
cmpsb
lds
mov
push
negb
mov
subb
out
xor
mov
mov
ljmp
mov
and
xchg
loop
mov
push
lods
jg
mov
sbb
inc
test
adc
arpl
xchg
xor
sbb
sub
xchg
jbe
loop
mov
sbb
xor
out
inc
jne
leave
mov
cmp
sbb
sbbb
loope
cmc
inc
outsl
sti
push
test
xor
cmp
mov
shlb
xchg
inc
inc
sahf
cmpsb
cmp
or
lock
gs
xor
jmp
aad
jecxz
les
add
lods
cwtl
xchg
mov
mov
sbbb
push
pop
scas
lahf
xor
sub
out
rcll
ja
into
cltd
lods
icebp
cmp
js
pop
adc
pusha
mov
sub
sub
imul
jns
daa
jo
shrb
cmp
aas
fs
test
int
cmpl
aad
mov
pop
ror
mov
push
mov
das
cltd
sub
xor
scas
movsb
sub
icebp
push
mov
adc
pop
es
mov
add
ss
aaa
adc
xor
addl
repnz
and
lods
mov
out
mov
mov
cs
jne
xor
shrl
testb
stc
jg
or
or
test
jle
dec
or
shlb
sbb
shlb
pop
scas
cld
out
arpl
sbb
aaa
jae
jb
gs
push
push
shlb
in
mov
insb
xchg
lea
out
pusha
pushf
jge
adc
call
push
dec
in
cwtl
sbb
in
inc
and
mov
das
inc
xlat
mov
push
xchg
das
xchg
into
cld
lcall
pop
stos
jnp
cli
imul
aam
dec
mov
jmp
cmp
dec
xor
imul
icebp
outsl
cli
inc
in
xchg
addr16
push
jo
adc
dec
mov
or
mov
dec
loop
mov
jg
mov
insl
sbb
mov
or
pop
lods
jmp
loope
subl
push
mov
lret
popf
lods
iret
stc
push
fisttps
pop
xchg
cltd
pop
push
inc
mov
das
jecxz
xor
push
mov
out
jne
push
dec
mov
or
loop
test
push
loop
and
mov
mov
fwait
sub
mov
ljmp
test
leave
es
sbb
mov
in
clc
inc
loope
mov
push
dec
xorl
pop
mov
sub
out
mov
push
push
pop
push
sub
fwait
shrl
shlb
nop
dec
and
mov
pop
xlat
call
adc
mov
stos
sub
scas
sbb
lock
xchg
jb
mov
aam
inc
das
jnp
lds
aam
push
std
add
jge
popl
cli
ljmp
dec
jb
xchg
das
pop
inc
cmp
inc
nop
cwtl
jnp
sbb
and
insl
cld
fstpt
xchg
les
int
jp
in
jecxz
inc
iret
cmpsb
sub
inc
cmp
in
mov
adc
and
xor
mov
dec
xor
dec
pushf
mov
pop
lds
outsl
push
sbb
jns
rcrl
outsb
cmpsl
lret
enter
sub
and
push
rcr
arpl
movsl
sub
cmpsb
lret
cmpsb
fwait
das
push
addb
xor
out
push
jl
testl
xchg
lds
jae
mov
xor
xchg
mov
push
ljmp
jecxz
arpl
add
sub
xlat
out
or
loopne
jb
cwtl
xor
mov
pop
sub
fs
hlt
sub
inc
inc
and
jbe
hlt
rcr
scas
pop
pop
lods
sbb
ret
xlat
sbb
nop
addr16
xor
test
mov
pop
and
out
into
pop
jl
inc
inc
lahf
or
push
sub
and
sbb
dec
stc
pop
cltd
sub
call
jb
dec
aad
sub
jo
ljmp
insl
rolb
loope
and
dec
inc
mov
xor
adc
sub
call
xchg
push
push
xchg
dec
adc
loop
sub
lock
ljmp
lods
xchg
lahf
cmpb
jo
push
fnstcw
mov
jp
fidivs
mov
je
xchg
xor
sbb
insb
stos
xorl
xchg
or
pop
nop
xor
pop
push
fs
notb
aad
imul
xor
dec
mov
enter
insl
inc
adc
int3
xchg
andb
mov
mov
cs
test
stos
mov
mov
mov
xchg
mov
jnp
in
ret
and
cmc
mov
repnz
sub
into
sub
adcl
insl
jae
mov
jp
adcl
jne
and
pushf
sbb
insl
push
pusha
mov
adc
pop
fcmovb
loope
jo
fiaddl
inc
sub
xor
movsb
pop
jmp
add
rcrb
rorl
cltd
jno
mov
nop
fimuls
or
xchg
scas
adc
js
jg
loope
mov
nop
push
dec
orb
aaa
cmp
lret
cmp
xchg
mov
lods
bound
or
jb
push
xchg
stc
push
ljmp
or
fsubl
jmp
jp
ja
add
cmp
mov
loope
aad
mov
inc
mov
data16
jne
lds
xlat
or
push
mov
popa
lods
dec
neg
call
jp
outsl
fdivp
pop
cli
push
fwait
inc
sahf
test
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
call
and
add
sub
insb
andb
pop
mov
and
add
sub
sub
fists
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jae
lods
push
punpckldq
mov
jl
push
and
mov
or
pop
mov
push
jbe
mov
sbb
adc
jle
das
xchg
imul
push
rcrb
push
sub
and
add
sub
imul
dec
sbb
inc
cs
xchg
out
aad
ds
jnp
xchg
fnstenv
ja
out
leave
add
mov
push
cs
dec
cs
dec
push
cmp
sbb
push
stc
inc
sub
fcompl
xchg
ja
jb
add
mov
data16
daa
test
mov
pop
inc
sub
jg
testl
insb
jge
inc
push
push
mov
pop
and
add
sub
insl
jbe
sbb
push
add
push
jge
pop
dec
mov
and
adc
sub
insb
js
pop
pop
dec
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
jbe
sub
insl
cltd
ficoml
pop
movsb
push
add
sub
jl
fists
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
mov
sbb
aad
push
add
daa
push
xor
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
jne
mov
and
shrl
mov
pop
dec
and
add
jge
push
sbb
shrl
insb
pop
fists
mov
sbb
frstor
pop
shrl
mov
fists
pop
and
add
sub
insb
jge
pop
pop
out
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
insb
jge
pop
pop
and
add
sub
les
cmp
and
sub
sbb
xor
fcompl
adc
sbb
mov
push
ljmp
inc
xor
hlt
mov
cmp
mov
out
fdiv
dec
xlat
xor
je
dec
cs
popf
xlat
repnz
and
addr16
mov
add
cmc
pop
mov
repnz
out
jns
ja
jge
sbb
xor
gs
out
jmp
loop
cmpsb
mov
mov
cs
inc
gs
sbb
arpl
daa
xchg
js
mov
sub
movsb
pop
mov
xchg
arpl
lret
xor
aad
imul
inc
imul
in
xor
std
fidivl
call
mov
or
fldcw
test
mov
push
sub
adc
xlat
sti
cmc
fmull
clc
scas
sbb
xor
push
data16
and
mov
mov
jae
add
pop
gs
push
inc
mov
icebp
adc
or
push
inc
fcomps
pusha
das
push
cmc
add
and
std
arpl
movsl
rcrl
test
cwtl
out
divb
cwtl
add
fcomps
and
test
sbb
inc
lock
xchg
fmuls
test
jne
mov
mov
xor
aam
leave
mov
mov
ljmp
loopne
push
idivl
inc
jae
mov
push
jl
pop
pop
std
pop
aad
or
cwtl
jo
or
std
outsb
lock
cmp
adc
adc
sbb
imul
std
pop
es
mov
adc
das
and
repnz
push
lret
ja
jno
xchg
cli
dec
repnz
push
adc
aad
xor
lcall
lods
xor
mov
pop
xchg
fldpi
repz
out
ljmp
out
adc
cli
movb
push
loop
xchg
ljmp
pop
stos
inc
mov
fnstcw
rclb
stc
sbb
jno
testl
pop
insl
aam
or
sahf
outsl
flds
or
shrl
lods
sbb
scas
xchg
sbb
push
test
sub
push
dec
clc
adc
and
sti
pop
xlat
mov
ficompl
enter
test
sbb
jecxz
ret
cmpsb
xor
fs
aad
daa
sarb
movsb
fstpt
jle
cld
and
leave
mov
lea
mov
mov
mov
movsb
push
xchg
sti
xchg
insl
in
push
xchg
repnz
jbe
ljmp
xchg
or
dec
pop
mov
inc
mov
xchg
aaa
ror
cld
sarb
cmp
ret
jle
inc
ds
int3
test
into
sbb
bound
mov
rolb
dec
mov
fdivl
incl
push
cmp
mov
bound
sub
ljmp
neg
bound
popf
dec
sbb
loop
sub
loop
sbbl
adc
faddl
mov
xchg
fsubr
mov
stos
sub
out
inc
out
imulb
shrb
fs
or
jae
mov
mov
mov
jb
fimull
pusha
lods
jmp
gs
cmp
xchg
js
or
aas
in
mov
mov
insl
imul
mov
aad
or
sahf
xorb
dec
movsl
mov
jns
sbb
leave
mov
scas
into
lods
test
cmpsb
xor
out
pmaddwd
cmpsl
and
dec
fisttps
mov
xlat
sbb
int3
xchg
js
scas
inc
call
inc
jns
movsb
test
xchg
lods
js
pop
pusha
sbb
pop
dec
jecxz
sbb
xor
daa
popa
push
fldt
add
stos
xor
call
inc
test
push
lret
lea
adc
dec
icebp
add
lret
xlat
ret
adc
aaa
lock
pusha
nop
out
aam
fidivrl
or
mov
arpl
js
add
jecxz
adc
cmp
jo
push
repz
leave
das
lea
inc
lock
pushw
or
addr16
push
push
inc
aas
add
ficoml
pop
ret
inc
push
out
pusha
out
sti
es
adc
mov
or
add
pop
mov
mov
jno
mov
nop
adc
addr16
mov
and
loopne
lods
outsb
stos
sub
out
or
ret
pop
pop
or
loope
in
add
push
xchg
and
jbe
daa
xchg
cmc
add
xor
fs
jmp
sub
jb
clc
rorl
cmp
and
mov
or
pop
push
inc
inc
testl
sbb
mov
sub
cmpsl
in
lret
daa
jnp
adc
sbb
jge
sub
addl
in
jl
pop
adc
rcll
gs
testl
fmull
outsl
jp
stc
imul
mov
pop
popf
xchg
mov
xchg
cs
ds
sub
lock
std
aad
rorb
add
push
lods
scas
add
push
add
pop
das
fdivrs
popf
mov
pop
out
push
jo
adc
or
imul
jnp
cmc
js
and
mov
stc
loop
and
mov
xorb
sbb
cmp
cwtl
inc
out
cli
push
aas
cmp
es
mov
mov
das
mov
out
jne
adc
lahf
in
in
out
scas
xor
lods
inc
push
jb,pt
or
aam
jns
cmp
inc
pop
andb
test
insl
xchg
mov
ret
stos
sub
and
xchg
inc
and
addr16
int3
mov
pop
jecxz
pop
lahf
aas
mov
mov
in
ret
xchg
sub
push
mov
pop
in
sbb
dec
leave
xchg
stos
push
je
ss
repz
out
mov
fildll
xor
adc
in
pop
xor
adc
subl
adc
ror
outsb
aaa
lret
subl
lret
out
popf
popa
mov
imull
sahf
notb
jae
insb
push
dec
lahf
pop
or
jnp
out
mov
ret
test
sub
adc
or
xor
jnp
mov
jmp
daa
mov
loop
pushf
xchg
outsl
cld
je
mov
inc
xor
pop
and
mov
pop
inc
or
nop
sbb
cmc
fstp
push
add
cmpsb
mov
jbe
je
in
xor
lahf
hlt
lods
imul
mov
outsl
xchg
mov
pop
cmp
and
xorl
mov
sub
add
pop
call
test
cmpsl
jecxz
into
movsb
push
xchg
xchg
lret
loopne
push
js
push
add
adc
iret
dec
hlt
cmpsl
xor
inc
lret
and
fidivrs
xlat
fiadds
shrb
pop
xor
mov
push
inc
mov
sub
cs
add
call
sub
lahf
out
addr16
cmpsb
pop
shlb
jmp
clc
and
fstps
or
movb
cmpsb
jmp
mov
stos
push
or
cmpsl
adc
in
pushf
pop
rclb
fs
pop
or
in
jmp
lods
cmc
push
ret
adc
mov
outsl
mov
xchg
xchg
add
aam
lret
lcall
xor
cmc
in
test
scas
push
xchg
insb
xchg
repz
add
jae
lret
mov
xorl
lods
push
sub
push
rclb
scas
dec
cmc
mov
adc
sub
xchg
out
loopne
fdivrs
fnstcw
cli
mov
mov
cmc
pop
lock
aaa
out
cltd
pop
or
add
pop
or
mov
sahf
lds
pop
mov
int
xor
testb
in
icebp
mov
pop
aad
orb
push
xchg
es
enter
mov
and
jae
and
enter
sub
test
inc
mov
xlat
mov
addr16
mov
iret
push
push
jge
sbb
xchg
test
cmpsl
imul
jns
addr16
dec
aam
xlat
loopnew
xchg
cli
in
fnstsw
push
es
loope
mov
stos
aad
sarb
out
sub
jae
shrb
dec
xor
fadd
imul
sbb
or
xchg
shll
xchg
icebp
or
jnp,pn
mov
imul
ja
fsts
cmp
in
jge
std
movsl
adc
cmp
bound
xor
outsb
xchg
cld
aad
ss
mov
add
in
div
jb
les
in
mov
mov
xor
sbb
and
mov
inc
jb
iret
pop
je
mov
pop
mov
mov
mov
mov
pop
iret
xor
les
jb
add
inc
add
imul
cmp
add
fisttpll
inc
ds
outsb
pop
mov
movsb
mov
out
divb
test
cmp
out
pop
mull
enter
xorl
cmp
pop
fldcw
adc
call
lock
out
mov
mov
nop
xchg
adc
fcmovbe
fs
or
sub
sbb
stos
ss
sub
sbb
ds
cmc
inc
push
pop
pop
sbb
movsb
jne
inc
out
or
clc
dec
mov
adc
fwait
lods
adc
jecxz
jo
dec
xor
mov
push
xlat
xor
or
popa
dec
push
mov
fcomps
push
add
cltd
inc
mulps
adc
lds
sub
mov
aam
fisttps
pop
cmp
mov
stos
in
cmova
mov
xorl
jmp
out
scas
stc
xchg
jo
xor
push
test
and
or
cwtl
dec
setae
std
addl
mov
dec
inc
rcrb
mov
aad
jecxz
jo
push
fdiv
xchg
jmp
add
movsb
leave
and
dec
out
loopne
cmp
lret
sbb
jne
hlt
mov
add
dec
dec
test
mov
xchg
and
pop
rorl
iretw
ss
leave
repnz
fs
inc
pusha
xorb
jg
mov
std
stos
test
in
push
repz
faddl
sub
or
aad
sarb
sahf
daa
pop
cmp
les
push
in
cmp
jmp
push
sahf
test
mov
adc
mov
sbb
es
inc
cmp
pop
xchg
or
mov
fdivrs
xchg
mov
lret
mov
mov
push
cmp
cmp
mov
push
sub
inc
loop
cli
mov
add
in
jecxz
sub
cmp
sbb
lea
test
daa
pop
int3
addl
sti
xchg
lods
outsb
or
cmp
mov
test
imul
pop
cltd
aad
adc
testb
inc
sbbl
dec
xchg
sbb
jle
mov
jo
mov
and
add
push
jnp
lahf
outsl
mov
mov
mov
jmp
mov
imul
push
mov
xor
xor
mov
cmp
outsb
scas
repnz
andb
or
fs
mov
ds
mov
mov
xchg
in
aas
jp
xchg
addl
add
stos
lcall
ja
lret
push
xchg
fldt
ret
pop
and
outsb
push
jbe
call
push
in
mov
pop
sub
mov
aas
jp
mov
inc
xor
push
push
mov
popa
and
and
pusha
inc
lock
test
test
mov
push
xchg
xor
cmp
pop
push
ds
pop
sbb
sbb
pop
imul
into
dec
nop
mov
enter
call
inc
mov
lret
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
