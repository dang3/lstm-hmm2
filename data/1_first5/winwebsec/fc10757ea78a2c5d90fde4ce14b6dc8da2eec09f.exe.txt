mov
lea
repz
and
sub
test
sbb
dec
pop
cmp
jp
push
add
loopne
push
test
or
jno,pt
sbb
lea
cmp
xor
cmpsb
xor
jns
shlb
mov
sbb
popa
push
cld
fisubrl
ret
dec
mov
cmc
push
movsb
out
jp
insl
push
push
ja
imul
loopne
push
push
push
sbb
mov
mov
mov
mov
out
or
add
and
jl
clc
fdivrl
xor
pop
push
lock
test
fisubrs
icebp
inc
mov
aaa
jecxz
stos
add
pop
ds
les
cltd
push
cmp
fcomi
or
inc
popf
xchg
je
mov
dec
jg
insb
jo
sbb
fs
std
push
clc
jns
aaa
insl
push
sub
sub
sahf
mov
xchg
sub
test
imul
jmp
dec
insl
cmp
or
sub
mov
nop
lea
mov
in
sub
nop
mov
mov
fwait
loop
lods
orb
mov
jle
mov
mov
lds
lret
inc
es
lods
push
sbbb
xchg
int
sti
xchg
cld
sub
mov
mov
pushf
cmp
mov
imul
sbb
in
mov
mov
clc
inc
push
ds
or
mov
dec
xchg
or
mov
bound
cld
inc
adc
ja
push
xchg
xlat
adcl
add
or
xchg
cmpsl
ret
pop
insb
mov
pop
push
enter
and
mov
ret
jmp
sub
rolb
sar
lcall
popa
fwait
mov
movsb
test
sub
lods
cmc
xor
jp
mov
int3
sbb
sub
pop
flds
lahf
sbb
dec
pusha
out
loop
xor
inc
jg
ret
push
push
inc
jne
mov
ja
sub
xor
loop
mov
pusha
insl
cmp
flds
bound
sbb
hlt
mov
push
lret
into
sbb
sub
nop
mov
repz
mov
and
into
fistps
sub
sub
repnz
lcall
add
bound
sub
sub
outsb
mov
inc
loope
aad
and
mov
jle
outsb
jmp
xchg
mov
or
mov
cmpsb
jmp
hlt
movsb
in
or
jno
pop
or
or
lock
outsl
faddl
data16
test
fwait
mov
daa
inc
lahf
mov
out
lea
ds
cli
jmp
mov
push
lahf
or
add
and
add
daa
jo
in
in
leave
mov
enter
sbb
fiadds
inc
lret
sahf
sub
sub
pop
cmp
int3
dec
mov
mov
ja
push
insb
jmp
pop
dec
rcll
xchg
and
xor
cmpsb
mov
push
sub
mov
in
inc
xor
jg
ljmp
out
rcrb
addr16
pop
mov
or
lcall
cmp
sarb
rclb
pop
orl
insl
add
push
popf
inc
jae
pushf
outsb
push
jmp
aas
lret
inc
lods
pop
cs
daa
jb
aam
aad
xchg
push
xor
scas
cmp
mov
push
loop
push
dec
insl
xor
mov
mov
sub
mov
sti
loopne
jle
in
leave
sub
lcall
adc
mov
mov
cmc
stos
jnp
testl
jmp
pushf
adc
aam
push
mov
ret
sub
dec
push
shll
imull
add
sub
jns
sub
mov
cmp
pop
xchg
mov
xor
lahf
and
pop
xchg
mov
add
mov
xchg
lret
loop
ficompl
and
pop
mov
int
pop
sub
adc
lret
pop
mov
in
mov
inc
icebp
out
add
out
imul
jne
cmp
pop
hlt
add
mov
mov
test
movsb
mov
stos
cltd
std
and
cmp
mov
mov
aad
mov
push
push
ret
stos
sub
rorl
jp
xchg
sub
pop
dec
pusha
rcll
jl
adc
xor
mov
sbb
addr16
sbb
jo
test
push
xor
ljmp
insb
test
loopne
ficoml
mov
loope
push
popa
dec
lds
int
sbb
clc
movsl
jne
mov
mov
mov
mov
test
xor
sbb
sbb
js
push
push
vhsubpd
mov
inc
lods
xchg
mov
fildl
ret
mov
and
mov
sub
test
scas
shlb
fiaddl
int3
cmp
nop
or
repz
add
adc
pop
ljmp
inc
mov
cmp
mov
mov
sbb
in
jo
mov
and
jne
test
or
jg
ss
lock
sbb
lock
adc
outsl
js
push
repz
pop
mov
in
inc
jle
sarl
mov
cmc
es
lds
xchg
xor
mov
dec
clc
aas
in
subb
xchg
adc
add
inc
in
or
adc
mov
mov
jp
icebp
pop
adc
xlat
dec
dec
stos
push
fcmovnu
mov
dec
mov
mov
out
lret
mov
pop
pop
sbb
popf
and
pop
arpl
mov
lret
pop
orl
xchg
jae
dec
cs
add
and
or
dec
mov
xchg
push
add
xchg
lods
cmp
cltd
dec
push
and
lret
into
test
cmp
dec
adc
bnd
hlt
ja
sti
arpl
inc
lcall
dec
idivl
dec
push
sbb
adc
in
mov
lock
sbb
sti
or
sarl
xchg
mov
pop
jbe
and
out
cltd
cwtl
rcrb
pop
dec
lret
jae
mov
test
add
jle
dec
push
scas
enter
shlb
inc
sub
and
ss
loope
cmp
adcl
out
lret
jbe,pt
jb
in
sbb
cmpsb
out
lea
dec
adc
pop
sbb
clc
and
push
sbb
dec
outsb
pop
insl
jl
pop
enter
add
jl
jle
push
je
mov
adcl
or
insl
mov
addr16
ret
outsl
push
jle
das
fsubl
mov
xor
dec
pusha
insl
xchg
pop
int3
add
ljmp
test
test
cmp
pop
jmp
mov
aas
pop
pop
popl
out
popf
lahf
add
popf
nop
jmp
push
in
aaa
lret
je
dec
or
ds
mov
pop
pop
addb
js
mov
dec
out
xchg
jmp
insb
shll
pop
mov
lret
pop
sti
xor
andb
rep
stc
mov
xchg
adc
push
jae
clc
aaa
mov
bound
cld
mov
or
cmp
les
sub
cmp
push
mov
cwtl
cli
mov
jp,pn
xchg
and
popf
cmp
into
mov
fidivl
push
arpl
mov
fidivl
imul
cmpsl
jae
arpl
clc
lds
or
aam
shrl
sub
xchg
jl
jae
test
stc
jne
cmp
xor
dec
fwait
pop
test
push
xchg
and
in
addr16
xor
out
in
push
pop
xor
add
xchg
lahf
fcoms
push
imul
push
jl
in
push
jo
ret
dec
sbb
xor
adc
sbb
mov
loopne
insb
insl
add
out
stos
gs
push
movsl
jns
sub
adc
mov
mov
dec
fstpl
pop
sahf
fsubr
fs
mov
orb
stos
rcrb
push
and
lret
insb
cld
xchg
fs
mov
push
addr16
xchg
movsb
xchg
enter
pop
or
mov
xor
outsl
dec
addr16
jbe
mov
inc
popl
and
idivl
cmp
sbb
imul
std
jmp
adc
sub
pushf
cmpl
es
sub
mov
add
data16
sbb
pop
jo
ljmp
ds
pop
js
mov
lods
cmpsb
and
pop
pop
inc
and
adc
nop
int3
mov
out
sbb
xchg
out
popfw
dec
push
add
decb
aad
mov
outsb
loopne
scas
mov
iret
mov
jne
outsl
jge
repnz
pushf
or
mov
leave
cmp
imul
inc
popf
aad
outsb
jmp
mov
or
cmp
ret
ja
mov
int
mov
mov
fimuls
iret
fbstp
mov
push
imul
rcrb
andb
push
add
xor
cmp
add
xlat
dec
or
cmp
mov
fs
lcall
push
sub
pop
inc
push
add
xchg
sti
loop
mov
sub
cmp
ret
sub
sti
loope
cld
jmp
outsl
xor
xchg
pop
loopne
or
adc
jle
out
mov
xchg
or
loop
daa
adcl
push
ljmp
test
insl
adc
cmp
mov
mov
ficomps
int
out
or
cmp
out
fmuls
cmp
mov
dec
jmp
jns
subl
insl
or
cvtps2pi
inc
mov
imul
out
js
dec
xor
and
stc
xchg
inc
mov
lahf
test
gs
movsb
push
fadd
stos
mov
addr16
and
push
adc
fnstenv
hlt
dec
lret
pusha
ljmp
cmp
inc
mov
js
jnp
push
sub
and
sub
test
lret
test
dec
cwtl
mov
imul
xor
rcrl
imul
shlb
sub
pusha
add
dec
lds
push
mov
or
mov
jno
in
mov
les
imul
push
add
or
cmc
outsb
jmp
loop
dec
ret
jecxz
mov
push
mov
and
xchg
idivb
push
lods
aad
imul
xchg
pop
xor
roll
push
push
in
fists
adc
ljmp
loop
repz
push
xchg
mov
push
inc
out
pop
jg
mov
in
dec
repnz
xor
mov
leave
mov
cmp
lret
in
mov
sbb
mov
clc
sub
mov
sbb
xchg
shrl
xor
ljmp
mov
pop
repz
into
data16
jecxz
cmp
push
cmp
push
testl
in
insl
jp
fisttpl
mov
ds
mov
pop
push
push
pop
mov
push
inc
jmp
xor
adc
lock
mov
xor
jns
pop
aad
aas
test
dec
sti
in
rcrb
int3
lea
dec
addr16
fcoms
or
jle
mov
fsubs
xor
pop
pusha
fsubr
mul
dec
fcomip
push
dec
lods
push
jl
ja
aad
je
pop
xchg
std
sbb
dec
mov
cmp
imul
and
sub
add
cltd
sub
xchg
inc
xchg
out
lret
outsb
pop
dec
dec
and
iret
sub
pop
mov
push
shrb
shll
cmp
lcall
icebp
outsl
push
loopne
mov
mov
adc
addr16
mov
aam
ja
fcoml
xchg
inc
idivb
and
pushf
outsb
rorl
fnstenv
cmp
mov
and
mov
in
or
pushl
push
pop
lret
aaa
push
dec
das
dec
test
fwait
jno
sub
mov
arpl
inc
sub
aad
sub
add
cmp
jge
scas
add
ret
pop
out
scas
push
std
dec
dec
rcr
dec
lcall
push
out
jmp
mov
mov
imul
je
cmp
sbb
gs
popf
movsb
pop
in
div
enter
ror
cli
cmpsb
cmpb
and
fs
ljmp
cwtl
xchg
mov
mov
shl
jnp
pop
pop
push
jo
js
ss
or
lret
and
sub
cmp
mov
jp
push
adc
test
ljmp
insb
call
lahf
leave
xchg
xlat
cmpsb
inc
jle
scas
lods
xchg
mov
cs
jp
in
lahf
inc
xchg
sub
push
decl
shr
jnp
fmull
lds
mov
and
loopne
aas
fstpl
pop
int3
push
test
into
cli
adc
loopne
inc
loope
movsb
jbe
push
aad
mov
cmpsl
dec
dec
adc
sbb
nop
xor
mov
in
lds
jge
daa
mov
push
mov
loope
or
movsb
or
arpl
inc
dec
cmp
clc
sbb
roll
loope
cs
and
cs
out
test
dec
push
ja
mov
push
add
addr16
pop
in
xor
fbld
fs
imul
adc
cmp
pop
aaa
mov
and
sti
and
rorl
addr16
rcl
push
fnstcw
mov
testb
aam
into
scas
cmp
inc
insb
sub
inc
dec
pusha
mov
and
add
push
fidivs
pop
cmp
dec
pop
sar
enter
sahf
scas
pop
int
jb
fisttpll
jge
fildl
add
mov
sbb
cmp
add
and
sub
mov
leave
jbe
push
dec
das
repz
xor
in
cmpsl
outsb
sbb
inc
loopne
shrl
imul
xchg
jmp
push
mov
push
cmp
cmp
aas
push
int3
mov
cltd
dec
xchg
push
mov
xor
inc
imul
and
xchg
adc
push
scas
inc
in
jb
stc
push
popa
std
adc
imul
sahf
mov
mov
fbstp
sbb
sbb
scas
xchg
sbb
fsubl
fs
inc
sarl
sbb
sub
dec
jbe
lods
orl
ja
cld
pop
add
mov
push
in
out
sti
mov
addr16
xchg
int3
dec
jmp
inc
jno
rol
pop
xor
out
mov
imul
jge
popa
xchg
mov
adc
xor
insb
in
xlat
dec
ds
dec
inc
stc
push
leave
cmpsl
fistps
popf
push
xor
push
mov
pop
int3
test
subb
push
push
cli
pushf
cmp
je
jo
sbb
mov
sarb
push
mov
xor
pop
cmp
push
dec
mov
cld
push
pop
cli
pusha
ftst
xchg
push
xchg
xor
sub
movsb
scas
mov
insl
in
add
popa
mov
stos
cmp
jp
adc
lret
xor
sbb
cmc
adc
adc
out
adc
mov
pop
iret
dec
shr
aas
xor
cltd
jno
je
xor
pop
pop
xchg
mov
push
imul
mov
sarl
iret
jbe
insl
jnp
subb
and
decl
hlt
pop
inc
cmp
push
pusha
jmp
lds
cli
jnp
mov
adcl
sarl
add
sbb
pop
scas
fidivrs
cmp
adc
cltd
roll
jno
xchg
and
shrl
or
jge
xor
inc
leave
sbb
daa
fsubrs
lcall
jbe
xchg
stos
fldl
sbb
addr16
lock
jle
out
ja
cmp
out
mov
imul
push
add
or
xor
or
testb
xchg
arpl
or
xchg
jo
sbb
sub
fsubrs
fdivs
jbe
sub
jns
sub
adc
ficomps
xchg
push
jle
lods
pop
xchg
repnz
dec
mov
mov
psadbw
sbb
jns
test
out
addr16
jecxz
xchg
jp
aas
ret
jmp
mov
fisttpl
pop
cmp
or
out
adc
pop
fildl
sbb
dec
jae
mov
insb
and
push
sti
adc
mov
mov
fsubs
fndisi(8087
pop
push
in
daa
lds
outsl
jmp
cmp
pusha
pop
lahf
icebp
loopne
mov
pop
and
clc
divl
push
pop
dec
clc
sub
jp
cmp
std
aaa
es
xchg
ret
test
inc
mov
sub
out
dec
cmp
add
cltd
dec
and
stc
inc
sbb
and
fistpll
lods
icebp
and
lret
and
addr16
xchg
aam
test
mulb
nop
out
sbb
pop
push
adc
mov
adc
into
aas
lds
data16
into
push
insb
xor
rcll
add
fidivrs
out
leave
shrb
test
add
scas
bnd
xlat
test
aam
outsb
xlat
fists
push
cmpsb
repnz
jle
fstps
shlb
inc
xchg
inc
repz
jns
jg
mov
xlat
cld
cmc
mov
fildl
mov
xchg
xchg
push
sub
xor
mov
adc
fstps
sub
fwait
outsb
mov
push
outsl
cmp
sub
fdivs
mov
push
popa
inc
pop
aad
fstl
and
fwait
dec
push
fisubs
js
push
stos
aam
or
ret
mov
xor
xchg
addr16
add
and
inc
leave
stc
stc
test
popf
mov
push
sbb
pop
les
arpl
test
rcl
sub
inc
ficompl
xor
xor
push
or
stc
out
cmp
stos
push
and
out
aas
jmp
xor
rol
pop
test
lods
repnz
das
cmpsb
js
xor
and
mov
dec
push
mov
cmc
outsb
inc
dec
push
je
jns
iret
lret
jne
aad
pop
sarl
jecxz
dec
sub
out
inc
ljmp
push
xor
test
mov
push
in
push
insl
push
sti
fiaddl
sahf
repz
xlat
xorw
xor
sbb
jge
rol
fisttpll
lea
xor
test
aaa
scas
adc
inc
add
cltd
addr16
xor
cli
xchg
shll
aas
stos
pop
pushf
sar
ret
jno
mov
fldenv
jo
push
or
dec
cmc
movsb
cld
sbb
clc
sbb
cmc
imulb
jp
fs
sbb
dec
outsl
jb
jmp
fsts
in
add
cmc
int
fs
mov
loopne
mov
sbb
cs
or
xor
pusha
int
std
pusha
cli
fisttpll
push
jnp
add
pop
mov
js
fdivrp
nop
scas
pushf
pop
loope
call
sbb
hlt
or
scas
cmp
push
pop
jge
in
inc
pop
add
jne
xlat
clc
test
in
repnz
adc
add
orb
xchg
dec
push
push
inc
jno
iret
xchg
out
dec
push
test
cmc
sbb
int3
aas
cs
sbb
jo
dec
test
lret
enter
out
mov
add
push
inc
mov
cmp
lahf
fisttpl
pop
pop
adc
sahf
cmpsl
out
divb
xchg
jmp
adc
pop
test
jae
push
jmp
jno
fdiv
adc
out
push
cld
mov
lods
sub
dec
and
movsb
aaa
out
mov
out
xchg
mov
or
mov
enter
into
add
cltd
adc
and
lahf
cli
jl
stc
jmp
repnz
mov
xchg
sub
movsl
pop
ret
inc
and
pushf
jne
inc
mov
sbb
mov
add
add
add
in
sbb
cwtl
sbb
sti
sahf
pop
jg
xchg
bound
xchg
push
insb
daa
roll
xchg
inc
mov
jb
cmp
mov
mov
mov
rcll
int3
and
jp
ret
dec
icebp
push
popf
pusha
jp
lods
fwait
sub
inc
jns
push
mov
cmp
xorb
jl
cmp
stc
mov
pop
mov
xor
mov
aad
lahf
add
out
data16
mov
ja
lcall
fcompl
shll
rcll
xchg
push
mov
or
insb
jns
cld
aam
in
mov
jbe
cmp
or
inc
sub
pop
mov
daa
and
inc
popf
lds
incb
jno
aam
dec
mov
and
sbb
call
xor
lahf
mov
mov
sbb
add
lea
out
int3
lcall
adc
inc
adc
int
dec
and
faddl
dec
add
mov
lds
in
sbb
stos
jnp
add
mov
mov
cmp
sub
pop
sbb
fs
outsl
cmpsl
imul
dec
mov
ret
addr16
jno
adc
stos
repnz
and
inc
jbe
push
sbb
loope
dec
in
cmp
loop
mov
jl
sub
aam
jmp
shll
dec
xor
movsl
lods
call
xchg
cltd
mov
sub
jmp
notb
pushf
mov
jle
stos
push
rclb
adc
xor
icebp
push
pushf
sahf
pop
call
xchg
out
jo
jno
inc
loopne
aas
fldenv
hlt
outsb
add
cmpsb
dec
jns
fstpl
js
and
add
mov
mov
xchg
js
outsl
or
rol
movsb
jb
movsl
pop
sarl
pop
push
js
and
jl
and
mov
fstps
inc
sbb
call
cmp
popa
jle
cmp
in
out
jp
push
shrl
outsl
out
inc
xchg
fs
sahf
divb
imul
cmpsl
inc
lcall
xor
imul
fbstp
xchg
sahf
enter
cld
insl
dec
fs
and
pushf
push
pop
or
lcall
in
mov
xor
outsb
hlt
jae
xor
sahf
rcrb
out
mov
xchg
stos
jb
int3
cld
pop
inc
xor
in
mov
push
stos
jo
add
jecxz
adc
fs
testl
dec
in
mov
mov
pop
add
lods
xchg
movsl
in
sgdtl
xchg
or
lock
pop
ret
sub
out
xchg
sti
or
jo
cwtl
mov
and
or
adc
faddl
test
jecxz
orl
jp
fldl
xor
je
or
roll
sbb
jne
sahf
fidivs
in
add
push
xchg
in
push
stc
stos
je
mov
push
adc
out
cli
sbb
mov
mov
or
push
int
cmp
pop
cmpl
pushf
lcall
and
mov
insb
mov
aaa
mov
nop
outsb
add
out
daa
lods
inc
ret
mov
mov
bound
jle
or
ja
jg
orb
add
fwait
mov
arpl
push
add
arpl
pop
or
stc
enter
xchg
scas
fldt
push
adc
pop
iret
cwtl
adc
test
xchg
mov
push
and
mov
cmpsb
outsb
fimull
addb
adc
jecxz
addr16
lret
jge
lcall
fcoml
fwait
push
out
loop
shll
pop
lods
xor
cmc
inc
or
xchg
scas
lsl
int3
sbb
mov
mov
push
mov
xchg
insb
scas
mov
pop
lods
repz
xchg
bswap
mov
jae
xchg
mov
adc
popf
test
adcb
lds
dec
in
std
dec
nop
pop
sbb
movsb
mov
pop
dec
loope
dec
push
out
aas
lcall
mov
fisttpll
push
mov
fimull
xchg
mov
jo
mov
dec
outsl
fistpl
ret
and
xchg
add
inc
push
stos
sbb
cmp
mov
pop
fistpll
push
add
mov
jl
stos
scas
lret
jle
flds
add
ss
pop
lock
fcompl
fisubs
jle
rclb
fdivp
cmp
pop
dec
mov
adc
push
leave
imul
rcrl
mov
push
xchg
test
pop
jnp
data16
js
pop
add
idivl
aad
stos
ret
jno
aad
ret
out
std
stos
push
test
lahf
hlt
fisubs
lock
xor
xorl
push
mov
or
mov
cmp
adc
addr16
loopne
jp
pop
pop
or
in
ret
push
cmp
or
aaa
adc
cmpsl
cwtl
lds
in
movsb
push
jg
dec
sbb
aam
mov
push
mov
dec
xchg
gs
sub
push
jecxz
mov
mov
xchg
or
rcr
das
mov
cmp
enter
outsb
test
lock
pushf
mov
jnp
mov
pop
dec
xchg
lock
add
lock
pop
jae
jp
sbb
hlt
cmc
data16
mov
mov
inc
imul
mov
stos
sbb
mov
lock
out
and
ja
inc
outsl
imul
iret
adc
mov
xchg
out
cltd
mov
or
inc
adc
rcrl
std
mov
icebp
repz
jge,pt
cs
in
inc
fucomi
movsl
jle
cmp
pop
mov
cmp
adc
adc
inc
das
xlat
xor
in
adc
inc
inc
mov
pop
fsts
cmp
jg
sti
add
xchg
lahf
pop
jbe
pop
std
xor
lahf
mov
dec
push
popf
addr16
pop
xchg
imul
mov
aam
dec
inc
lods
sub
mov
xchg
in
sub
mov
cmpsl
loopne
pushf
mov
push
stc
rcl
add
mov
cmp
cs
lock
xchg
sub
mov
addb
fldl
test
mov
cmp
pop
andb
fsts
cwtl
jecxz
cwtl
push
push
pusha
xor
sbb
rolb
push
insl
mov
mov
mov
push
cmp
frstor
sub
cwtl
xor
mov
lea
loop
sbb
sub
test
sub
jmp
cwtl
test
movsl
jns
int
push
out
xlat
mov
dec
ficoml
mov
jl
xchg
js
in
sub
outsb
xor
jge
xchg
je
bt
or
sbb
iret
shlb
leave
xor
fucomp
test
xchg
lcall
scas
lret
mov
setl
pushf
dec
cmp
orl
jae
sbb
inc
aaa
mov
add
add
stos
dec
rcr
mov
imul
pop
fidivrl
pop
lods
ss
test
push
out
mov
and
xor
jno
dec
adc
ret
cmp
xchg
mov
mov
lcall
xlat
push
push
pop
adc
push
mov
adc
add
pop
mov
dec
mov
and
xchg
cmp
cli
push
movsl
add
dec
sbb
jl
dec
xor
lret
mov
in
adcb
cmp
mov
cmpl
ret
shl
data16
lods
fstps
dec
pop
addb
outsl
outsb
pushf
xchg
fimuls
ficompl
dec
jbe
repz
je
inc
cmp
add
in
dec
bts
rcll
mov
mov
jnp
jbe
cli
sub
ljmp
xor
in
mov
xor
push
push
push
or
and
and
or
int3
mov
pop
out
sub
jno
movsl
mov
cld
jae
sub
sub
sbb
jge
push
pop
ficoms
loopne
jo
ds
or
int
and
int
repnz
jge
pop
pop
cmpsb
mov
mov
fdecstp
sub
int
pop
xchg
js
mov
std
cmp
movsl
cmp
push
fmul
fs
push
inc
or
add
rcl
dec
sbb
mov
add
fcoms
sbb
out
out
pop
adc
lock
dec
mov
mov
or
in
rcll
ja
xchg
divb
sqrtps
lods
loope
jb
repnz
lret
cmc
rolb
pop
test
jl
aam
pop
in
call
repz
jns
cmpsl
mov
or
dec
inc
push
xchg
add
sbb
add
pop
and
das
mov
adc
or
dec
aad
push
insb
mov
cmp
cmpsb
arpl
ds
jmp
cld
fwait
lods
loope
stc
sbb
add
fidivs
int3
push
mov
cwtl
push
pop
mov
xchg
shlb
pop
clc
cltd
add
push
inc
lahf
mov
shlb
jge
int
xchg
lock
adc
sbb
int
cld
pop
sub
ja
add
jmp
adc
xchg
out
mov
mov
outsl
and
mov
pop
arpl
dec
loope
push
setne
loopne
notb
mov
xchg
or
sub
dec
pop
leave
rorb
gs
sub
fstpl
gs
iret
dec
adc
insl
push
jno
inc
into
imul
mov
fwait
mov
fldt
imulb
dec
fdivrl
les
inc
pop
movsb
or
and
aam
lcall
outsb
test
orb
mov
int
and
imul
pop
loopne
add
add
jge
movb
jnp
shlb
sub
int
test
int3
xor
sarb
movsb
or
adc
dec
jle
insl
std
das
test
push
cmp
cmp
je
aaa
ds
dec
jg
jle
js
iret
scas
xchg
imul
adc
xor
mov
lds
mov
dec
negl
out
mov
and
fwait
xchg
fimuls
sub
dec
dec
pop
aas
inc
mov
sub
sahf
ror
cmp
subl
insb
inc
xor
arpl
pop
into
cmp
ss
mov
je
xchg
dec
mov
add
mov
adc
xchg
movsl
add
fwait
mov
mov
ja
ljmp
fdivr
sub
jge
cmp
push
mov
repz
jl
mov
add
jg
addl
loopne
sbb
pop
push
lahf
cmpsl
in
ja
in
leave
or
fucom
cwtl
jmp
xchg
fidivs
jno
xchg
inc
loope
ljmp
rorl
push
mov
mov
inc
dec
add
mov
xchg
jp
sub
xor
jnp
mov
ljmp
call
add
in
sahf
add
pop
je
js
sti
inc
jbe
int3
pop
loope
in
insb
xor
pushf
cwtl
push
mov
xchg
movsl
repnz
inc
push
aam
xchg
mov
mov
xor
les
lock
pop
push
pop
mov
aad
push
add
xchg
movsb
mov
das
sub
addr16
push
pop
pop
int
mov
mov
aaa
outsb
pop
aaa
mov
fcomps
mov
cld
mov
inc
mov
mov
aam
and
lock
je
lcall
test
call
mov
ret
loopne
les
in
outsb
mov
adc
mov
adc
dec
faddl
enter
insl
scas
xlat
mov
or
inc
push
in
inc
inc
dec
xor
xchg
mov
pop
popa
xor
lret
lds
int3
test
push
sbb
jg
jno
insb
inc
fnstenv
sub
shl
mov
jns
add
dec
stos
pusha
or
xor
xchg
lret
hlt
adc
aam
sti
pop
call
sub
and
push
and
sbb
mov
mov
jmp
add
push
sub
sbb
cmp
dec
sub
mov
inc
insb
shlb
push
loop
cmpsb
jo
or
sbb
sbb
aad
fsubrl
hlt
pushf
aam
jns
inc
mov
in
ds
int3
loopne
xchg
es
fs
in
inc
imul
pop
adc
mov
inc
xchg
js
adc
cmp
push
sbb
rcll
push
fs
sub
pushf
or
cli
sub
enter
sti
fisubrl
pop
sbb
test
sbb
dec
sti
adc
jg
popa
je
fisubl
cmp
out
inc
xor
fldcw
jns
sub
add
pop
push
push
sbb
mulb
int3
xor
sti
mov
mov
and
add
xchg
dec
das
ret
out
xchg
in
pop
cli
push
ret
xchg
xor
ja
repz
movl
fisubs
ss
sbb
ret
daa
mov
adc
or
xor
shlb
call
add
push
inc
pushf
leave
adcb
loopne
icebp
jbe
xlat
cmp
pop
lods
fs
cmpl
popa
das
push
nop
ljmp
fcmovne
jecxz
aad
cli
dec
jmp
push
xlat
dec
cs
sub
xorl
repz
mov
add
arpl
add
inc
jecxz
cmp
test
and
pop
xor
jle
pop
sub
cmpsb
js
lock
sub
pop
in
add
or
arpl
das
popf
ret
mov
push
jae
fldl
js
sub
leave
nopl
mov
aas
fcmove
jg
push
and
mov
in
adc
out
add
jbe
jl
iret
jle
ljmp
sub
sbbb
push
sbb
nop
fwait
in
fsubp
cltd
negl
add
addr16
mov
dec
fnsave
fldenv
jl
or
add
lods
adcb
push
push
push
sbb
mull
push
push
pop
test
and
cwtl
dec
gs
out
in
in
push
dec
inc
push
outsl
in
ja
mull
hlt
das
xchg
hlt
cmpb
clc
jp
mov
aaa
sub
int3
mov
or
mov
cld
cmp
loope
ja
popf
inc
les
popf
and
mov
iret
cmpsl
leave
push
cmp
in
mov
cmp
inc
movb
fisttpl
and
nop
hlt
int3
iret
sub
sbb
lret
and
mov
push
shl
jle
js
inc
into
pop
dec
inc
push
mov
not
jp
or
or
popf
pop
and
pop
inc
out
icebp
test
gs
jmp
or
ljmp
mov
jg
jb
push
add
adc
pop
sub
jns
lret
fcomip
push
jbe
flds
mov
dec
clc
imul
or
ficompl
mov
aam
mov
or
rcr
push
xacquire
fisubs
cmpsb
push
dec
sub
or
mov
mov
mov
inc
inc
popa
iret
push
or
popa
fcmovnbe
or
or
lret
scas
lahf
scas
repnz
js
int3
xchg
mov
dec
pushf
mov
jne
adcl
test
sbb
inc
imul
sbb
rol
scas
stc
std
in
or
fistpl
and
ret
jnp
jp
pop
mov
sarb
clc
jp
inc
add
sub
push
cmp
lcall
push
dec
pop
cmpsl
negl
mov
and
je
enter
xor
or
or
pop
jnp
xchg
das
stos
pop
dec
push
jb
mov
mov
or
das
xor
mov
in
push
jo
mov
das
cli
int
jmp
pusha
fnstsw
dec
insb
fwait
pop
mov
loope
int
aaa
adc
xlat
xor
loope
xorb
inc
mov
adc
mov
xor
jne
mov
xchg
pushf
ret
fistpll
lahf
cmpsb
xchg
test
mov
fimuls
dec
push
sub
ja
repnz
je
mov
aad
jne
ja
int
jmp
xor
ficompl
mov
mov
adc
aaa
inc
mov
xchg
xchg
jg
mov
push
inc
or
jbe
fcomps
and
out
push
lea
out
sub
outsb
push
rcrb
pop
mov
loop
ljmp
insl
jge
cmpsl
add
push
xchg
dec
dec
btr
cmp
lock
daa
ja
lcall
dec
push
push
repnz
xchg
lahf
pop
std
cmp
stos
pop
jno
inc
stc
mov
cs
adc
iret
xchg
in
pop
in
inc
pop
add
push
push
addb
fwait
pusha
jbe
sbb
enter
cli
sbb
cmpsl
pushf
mov
fs
pop
jae
push
enter
fwait
and
imul
insb
ret
cli
mov
add
cs
in
xchg
or
mov
mov
jno
iret
dec
addr16
jl
mov
pop
sar
xchg
mov
aam
pop
pop
pop
call
in
inc
xor
adc
orb
cmc
jb
scas
rcrl
loopne
mov
out
xchg
mov
je
mov
in
les
mov
fs
inc
data16
sti
xor
mov
sbb
out
pop
xchg
dec
idivl
fistpll
dec
xchg
shrd
cld
mov
cmpsl
adc
in
mov
in
xchg
and
pop
jns
cmpsb
inc
sti
or
sub
mov
xchg
jmp
pop
cmp
shl
mov
dec
pushf
in
lods
mov
ret
push
pop
and
xchg
dec
cmc
pop
mov
and
pop
and
add
hlt
mov
je
dec
lods
enter
or
test
mov
int3
xchg
xor
test
jp
stc
or
jno
sbb
int
out
or
sub
cmpsl
push
jno
into
js
xchg
out
jmp
xchg
and
jmp
lods
int
es
outsl
mov
test
ret
cmp
imul
cmp
outsl
out
psubd
dec
jnp
dec
int3
mov
icebp
sbb
insb
or
mov
mov
bound
jnp
jge
jnp
fnstenv
ljmp
imul
sysret
insl
dec
leave
cltd
and
dec
lahf
mov
repnz
inc
mov
cmp
push
sub
test
insl
lcall
xor
lock
mov
cltd
and
xchg
faddp
aam
cwtl
ds
pop
push
adc
es
sarb
addr16
int3
pusha
lret
les
sbb
xchg
inc
movsl
flds
dec
inc
inc
xchg
mov
lea
pop
int
add
xchg
cmp
push
call
sbbb
xor
lcall
pop
pop
cmp
pop
rcrb
iret
stos
xor
cwtl
outsl
out
inc
inc
pop
pop
gs
loop
pop
imul
je
mov
sub
jno
mov
addb
ficompl
bound
inc
movsl
lret
jmp
xchg
jg
cmp
jae
xor
scas
in
jo
jecxz
mov
adc
fiaddl
jge
sbb
mov
mov
jle
jbe
or
cld
stos
adc
xor
scas
xchg
mov
fwait
movsl
push
mov
js
rorb
push
fistps
pop
adc
and
sub
add
or
int
hlt
pop
jmp
xchg
loope
mov
shr
mov
test
jmp
imul
movsb
fidivrs
and
arpl
test
sti
lds
scas
mov
int3
popa
or
inc
sub
sbb
lds
xor
out
sti
jmp
pop
in
mov
xor
ds
imul
xor
cmp
pop
mov
mov
sbb
sahf
or
cmp
mov
cmpsl
push
adc
stos
lds
sbb
add
xor
lcall
es
push
enter
lret
inc
pop
push
lea
xor
xor
fnstcw
cmp
test
sti
into
fstpl
adcb
dec
push
loop
jmp
lods
je
push
movsb
mov
mov
jle
rcrb
stos
test
dec
ds
inc
or
shl
adc
lret
add
and
dec
loope
addr16
mov
nop
push
mov
dec
xchg
imul
shr
mov
movsl
ror
test
int
jno
loope
aas
pop
xor
inc
int
push
push
pop
repnz
sbb
cmpsl
arpl
xor
sbb
pop
and
fstps
out
xchg
push
jb,pt
shlb
leave
push
ret
pop
sar
push
xchg
sti
shrl
pusha
adc
or
dec
jp
stc
add
cmp
or
sbb
mov
fistl
pop
and
jnp
inc
mov
fildll
test
or
and
xor
sbb
mov
xor
in
aam
incb
jbe
inc
ja
lea
xor
cld
adc
dec
add
cs
popa
and
mov
xchg
jle
jle
outsb
rclb
ja
ds
or
fs
xchg
cwtl
es
pop
and
stos
lret
call
enter
mov
orb
mov
repnz
pop
push
push
pop
sbb
add
cmpsb
inc
mov
sbb
add
xchg
jmp
cli
aaa
sahf
nop
mov
mov
out
sbb
ret
into
dec
add
sub
gs
cmpsl
popa
insl
mov
clc
add
mov
mov
sti
adc
out
sbb
sbb
shlb
aam
push
gs
enter
jno
frstor
dec
stc
jbe
mul
fisttpll
iret
mov
mov
dec
or
push
jmp
jle
call
sarl
jp
mov
bound
and
or
lret
jbe
xor
jecxz
jl
inc
cltd
mov
es
les
aas
ja
push
fndisi(8087
repz
sub
mov
fs
xor
mov
nopl
test
out
sbb
mov
nop
shll
jecxz
aam
or
pop
mov
push
jnp
cmpsl
dec
ja
jg
jle
push
cmp
pushf
add
sti
push
adc
add
jno
ja
aas
enter
xchg
sti
cld
xor
inc
cmp
cmp
mov
fimuls
cwtl
jae
lcall
xchg
fistl
pop
icebp
jo
fidivrs
sub
sub
pand
dec
mov
or
adc
jp
daa
push
push
jno
mov
imul
cli
dec
into
dec
push
push
push
xchg
movsb
hlt
lret
call
mov
jmp
sbb
inc
push
push
arpl
xlat
inc
mov
lods
popa
sub
test
dec
das
outsb
adc
ds
sub
fistpl
mov
mov
sbb
jo
xor
movhps
fiadds
pop
sbb
cmp
lods
pop
push
scas
fcomps
push
cltd
cmp
neg
add
cli
sub
inc
adc
es
inc
adc
mov
int3
jb
or
pop
std
dec
mov
addr16
out
fistpl
aad
es
in
mov
sbb
sbb
subl
jne
fistps
fwait
and
adc
out
mov
mov
pusha
cmpsl
jge
inc
and
mov
jge
adcb
in
adc
jp
mov
pop
test
jne
push
jae
dec
fists
sbb
and
cmp
mov
cmp
pop
jecxz
insl
mov
nop
enter
xor
adc
xchg
and
push
push
rcll
rolb
xlat
inc
ljmp
repnz
adc
or
push
lock
mov
adc
add
inc
mov
cwtl
sbb
xchg
aam
sub
es
dec
aam
rclb
dec
ja
or
sbb
mov
cmpsb
sub
xor
fucom
decb
es
aas
cmp
xlat
sbb
rorb
jo
jne
aam
mov
cmp
jns
dec
sub
sub
inc
popf
rorb
js
cmp
xor
movsb
dec
or
mov
sub
and
xor
push
xchg
rcr
pop
jmp
pop
scas
sti
or
dec
int3
repz
pop
and
loope
cltd
sub
sub
pop
movsl
fs
jnp
pop
dec
xchg
lock
imul
push
cli
xchg
mov
adc
sti
sti
xor
in
cli
call
lods
std
cs
incl
jle
push
and
sub
push
mov
cmp
outsb
adc
loop
cmp
xchg
xchg
or
int3
les
ss
outsb
sub
push
leave
ljmp
dec
adc
or
sub
adcl
inc
mov
xchg
stos
mov
jb
pop
sti
pop
cltd
rolb
movsl
repz
jno
loope
mov
repz
xor
push
insb
pop
xchg
shll
mov
dec
sbb
xchg
ret
sbb
cs
imul
pushf
ds
xchg
dec
aad
rcrb
push
mov
mov
sbb
dec
mov
std
insb
jl
add
push
jmp
fists
sub
movl
jg
mov
push
call
lret
jge
xlat
sbb
sub
lds
mov
enter
movsb
dec
les
ds
adc
movl
int
aas
mov
jp
push
xor
into
stos
loope
or
mov
lock
sbbb
lods
je
mov
movsl
cmpsb
xchg
fcoms
je
jae
ss
loope
nop
jno
and
movsb
das
dec
sbb
hlt
pop
fmull
or
push
jns
pop
out
adc
daa
ds
push
xchg
adc
xchg
and
outsl
mov
push
mov
mov
jb
sub
test
push
adc
xchg
mov
jecxz
ljmp
fs
aam
cmc
inc
lods
add
jne
or
dec
sarb
xor
js
movsb
cmp
fwait
sbb
or
bound
xor
sbb
inc
imul
add
push
and
xlat
cmp
mov
push
stos
hlt
lods
push
push
stos
xlat
ret
xor
out
mov
fildl
push
testb
lahf
stc
lret
pop
sbb
inc
mov
pop
inc
jge
mov
sbb
sbb
mov
or
enter
add
mov
sbb
out
or
out
push
ds
add
or
or
imul
and
inc
pop
fwait
add
xchg
call
stc
out
push
mov
lods
push
pop
dec
lret
lcall
mov
mov
sub
dec
daa
jno
inc
mov
sbb
mov
stc
adc
hlt
cmp
ja
aaa
inc
mov
sub
push
cmp
lods
pop
bound
arpl
dec
pusha
jnp
sub
cmp
jge
aas
insl
leave
jle
fisubs
add
push
mov
adc
loop
or
xchg
fstl
push
dec
imul
cmp
sbb
jb
jg
jbe
xchg
into
cmc
and
adc
loope
shll
aad
jns
repz
sti
data16
addr16
mov
ss
pop
lcall
out
jno
jbe
adc
lret
add
cmp
not
popa
mov
add
adc
ds
rorb
mov
mov
fstl
pop
pushl
pop
cltd
addr16
mov
xchg
shlb
jb
mov
stc
jbe
add
or
dec
ljmp
iret
adc
daa
lret
fndisi(8087
mov
mov
lcall
mov
repz
mov
out
lods
icebp
mov
adcl
daa
mov
sub
rorl
mov
mov
aas
dec
lods
test
push
dec
push
frstor
jle
mov
addr16
dec
or
sbb
lods
xor
push
js
loope
insb
cpuid
dec
popf
cmpsl
or
js
imul
pop
loope
cwtl
jp
sbb
cmp
in
lods
in
int3
pop
and
pop
fimull
mov
aaa
xor
xchg
test
pushl
aad
imul
dec
xor
adc
orb
lcall
pop
je
aaa
pop
xlat
mov
jo
jge
mov
push
push
flds
dec
add
jno
xchg
hlt
jl
sbb
ficoms
ja
pop
mov
mov
inc
xchg
test
sbb
adc
pop
pop
out
mov
jo,pn
and
or
jecxz
jo
push
cmp
mov
xchg
lcall
xor
pop
xor
sub
stos
fwait
repz
sbb
dec
int
jae
jmp
cmp
mov
test
xchg
mov
sub
pop
ret
sahf
mov
aas
jg
jns
mov
movsb
es
movsl
sub
sub
ret
cmp
int3
sbb
std
int
push
subb
inc
clc
sub
aam
add
inc
jnp
xorb
aaa
add
cltd
mov
and
mov
fimull
sarl
mov
adc
inc
je
cmp
mov
fistl
cmp
sarb
aas
cmp
mov
and
push
aad
dec
stos
mov
mov
and
into
loope
jnp
lcall
xor
sbb
lods
mov
inc
adc
mov
jae
mov
loope
mov
jo
mov
pop
movl
test
pop
aam
mov
aad
pop
stos
mov
cmp
mov
ja
fucom
fsqrt
pshufw
sbb
hlt
fucom
gs
mov
sub
fdivrs
fdivrs
imul
iret
lods
sub
sbb
loop
insb
mov
add
cli
inc
adc
cmpsl
rcr
or
or
icebp
ss
out
xchg
js
xor
das
insl
in
sbb
xchg
add
stc
xchg
mov
nop
mov
xor
dec
nop
adc
cli
mov
int3
js
test
mov
jae
adc
paddd
or
xorb
xchg
shlb
pop
andb
jl
mov
imul
mov
pop
lods
outsb
pop
xor
repz
fmuls
btc
in
sbb
and
test
xchg
jg
sbb
mov
les
enter
dec
mov
add
lds
adc
mov
adc
insl
stc
js
mov
jo
fisubrs
scas
xchg
data16
popa
jecxz
pusha
shrl
scas
xor
jp
mov
pop
mov
arpl
fwait
lods
fisttps
int3
loopne
into
ljmp
lcall
ss
mov
cmpsb
popa
jge
aaa
jae
flds
mov
jo
xor
rorb
call
sti
mov
nopl
in
icebp
add
xchg
xchg
popa
filds
mov
sbb
adc
push
mov
jns
mov
cmp
and
ret
sub
and
cmc
stos
dec
jno
stc
fwait
inc
out
ljmp
cmpsb
ja
jp
jbe
orl
lock
adc
lea
fwait
push
mov
fisttpl
sbb
insb
push
or
scas
je
jno
sahf
pop
mov
inc
out
adc
push
ficoml
enter
dec
pop
fwait
bound
and
pop
jle
ja
or
cmp
inc
loopne
jno
daa
in
stos
outsb
les
and
mov
mov
xor
or
rolb
jne
push
aam
sbb
pop
mov
sub
gs
xchg
mov
push
dec
sti
stc
jae
xlat
loop
in
insl
pop
jae
jns
popa
nop
out
mov
in
xchg
jbe
mov
sahf
xchg
add
lods
es
js
je
or
jb
cwtl
push
lcall
sbb
jg
mov
sbb
push
fidivrl
xchg
push
or
cwtl
pop
sbb
pop
add
mov
adc
into
lcall
mov
sbb
int
pop
sbb
jb
mov
sar
push
jb
movsl
test
or
sbb
xor
scas
fucomp
incb
ret
pmulhuw
rep
lret
out
pop
mov
or
pop
mov
movsb
das
sbb
dec
lahf
and
lret
les
jp
or
add
cmc
mov
push
add
pop
cli
jl
push
jl
push
outsl
mov
inc
dec
mov
call
inc
adc
popa
rcrb
xchg
repz
orb
pop
loope
sub
or
or
xchg
mov
subb
jge
xor
std
pop
push
xor
roll
add
lea
shr
jno
pop
mov
subl
pop
adc
popa
popf
mov
jne
out
mov
dec
cmp
aad
xchg
add
data16
fildll
jle
rcr
jg
push
cld
andl
data16
lret
lret
orl
sub
cs
fsqrt
movsl
cmp
jns
bound
jbe
jecxz
std
ja
shrb
xor
outsb
jo
inc
xor
inc
mov
xor
dec
mov
push
movsb
and
ficomps
pop
or
lahf
dec
adc
das
stos
push
lods
je
test
add
lds
adc
aam
mov
mov
adc
jge
mov
mov
jecxz
dec
rcl
ror
divb
popa
jmp
inc
sub
cltd
inc
lds
jo
push
jecxz
cmp
or
movsb
adc
mov
out
pusha
push
and
mov
aas
shl
dec
lcall
in
and
cmp
cmpsb
fwait
dec
jle
int
jnp
pusha
cmp
cmpsl
ret
sahf
cld
or
bound
scas
mov
pop
ficomps
imul
or
or
insl
cwtl
ds
lods
jge
xchg
call
mov
sti
in
out
out
rol
je
daa
adc
xor
fildl
pushf
loope
xchg
cwtl
sub
daa
je
mov
lret
dec
mov
add
and
adc
daa
sbb
xchg
arpl
xor
mov
xlat
or
jge
sub
daa
cli
mov
xchg
daa
addb
xchg
mov
mov
cltd
fabs
imul
jnp
in
mov
dec
fcomps
inc
daa
add
test
mov
dec
ret
ss
dec
sbb
sarb
outsb
inc
js
pop
mov
mov
test
adc
xorl
imul
mov
aam
mov
pmaddwd
or
out
in
fisttpl
int3
pop
dec
inc
xor
mov
inc
cmp
xor
sub
std
icebp
sub
mov
int
ss
sbb
push
lret
adc
stos
hlt
pop
ret
in
and
cmp
mov
test
into
out
dec
adc
jle
push
test
data16
movsb
data16
xchg
mov
ss
sub
adc
mov
cmpsl
arpl
hlt
mov
xchg
test
sbb
and
shll
insl
pop
or
inc
xor
lahf
cmp
xlat
and
adc
shlb
push
jle
dec
andl
insb
lahf
sahf
pop
in
sbb
jae
pop
push
pusha
divb
testb
mov
les
pop
fcoml
pop
mov
add
in
push
out
push
es
repz
iret
or
fdivs
sti
int
push
fldt
sub
jbe
xor
int3
inc
je
popa
mov
pop
int
fldl
add
aad
mov
dec
js
enter
loop
out
cli
loope
lret
or
jge
inc
push
movsb
ljmp
test
adc
leave
fisubrs
leave
xchg
test
pop
fsubrs
or
pop
ret
add
sub
sti
movb
jae
aam
jmp
aas
jae
mov
cld
xchg
add
fs
inc
mov
loop
rorl
loope
xchg
popf
xchg
push
dec
ret
adc
jle
jp
xchg
cld
jle
sub
ds
add
cmp
push
lcall
mov
push
icebp
jno
mov
mov
nop
lods
mov
outsl
rcll
test
push
fldenv
push
icebp
lret
mov
jmp
cmc
sbb
sbb
mov
jg
int3
scas
push
xchg
push
data16
nop
jne
or
faddl
mov
mov
std
xchg
aaa
sbb
fisubrl
std
mov
aam
aaa
cmp
sbb
mov
cmp
push
push
jbe
mov
movsl
inc
shlb
rolb
xor
in
mov
pop
enter
push
xchg
les
stos
jmp
into
sti
xchg
inc
mov
bound
rolb
push
mov
in
mov
xchg
xor
movsb
loopne
rolb
fidivrl
shr
xor
xchg
cwtl
jbe
dec
jnp
int3
push
xchg
inc
and
arpl
dec
sub
mov
and
js
cli
loope
jno
and
mov
xchg
outsl
dec
xor
or
ljmpw
xchg
lock
jo
lods
adc
inc
in
cs
pop
fwait
bound
jb
lea
fbstp
imul
add
dec
inc
jle
jne
xchg
or
enter
scas
nop
cmpsl
das
sub
ss
dec
sbbl
repz
int3
jmp
push
pop
cmpsl
sbb
je
sbbb
inc
into
lcall
sub
mov
imul
push
cmc
xor
enterw
pop
xlat
in
lahf
jl
cmpsl
push
sahf
xor
sub
loop
aas
enter
push
push
stc
pop
sbb
cld
jnp
jge
xchg
or
inc
imul
lahf
lea
cld
mov
inc
inc
sub
orl
mov
mov
push
xor
shl
mov
outsb
pushf
enter
mov
mov
sbb
and
repz
in
stos
pushf
pusha
enter
dec
pop
adc
xor
in
fwait
sub
push
pusha
inc
hlt
adc
aam
push
push
pop
movsl
cmpsb
mov
xchg
test
jecxz
test
negb
mov
insl
adc
push
mov
sub
aas
aam
xor
xor
out
sbb
movsl
je
dec
mov
fisubs
mov
jl
xor
movsl
inc
shll
sbb
fdivs
lods
imul
test
pop
lea
ja
cmpsb
and
sub
xor
push
add
push
je
les
adc
shl
stos
in
hlt
lds
inc
pop
stc
push
js
xchg
jecxz
fwait
jns
xlat
fidivrs
scas
mov
rcrl
clc
mov
or
into
pop
xchg
pop
ja
lret
xor
add
pop
mov
adc
sub
stos
addr16
adc
pop
ja
aad
xadd
jns
in
jno
adc
dec
enter
movsl
jns
aam
scas
dec
xor
clc
outsb
xor
scas
or
jno
and
cmpb
lock
sbb
idivl
sub
pop
and
or
lods
add
cwtl
or
fdivs
nop
and
hlt
std
adc
mov
add
ds
push
out
das
jno
xchg
lods
hlt
inc
xchg
in
xor
sub
sbb
loope
push
fs
xchg
jmp
and
xchg
fnsave
aad
arpl
push
pop
loope
and
inc
mov
inc
mov
fisttpll
pop
push
sub
add
mov
and
pop
mov
and
lods
sbb
adc
int
lods
jle
loop
aas
adc
cli
mov
mov
das
pop
inc
push
push
cmc
mov
pop
push
out
mov
das
cltd
addb
mov
rorl
jle
push
cmc
aam
xchg
sub
add
mov
popa
xchg
adc
mov
sbb
je
xchg
or
mov
insb
scas
mov
ja
xor
cld
shrb
inc
adc
add
imul
pop
push
loope
cmp
mov
sub
stc
pop
xchg
lret
cmpsb
cmpsb
ret
inc
in
loopne
mulb
test
cmp
xor
push
mov
js
push
test
mov
mov
test
adc
push
push
test
test
int
xorl
rcl
inc
pop
xor
daa
sbb
push
fiaddl
popa
nop
push
xchg
imul
sub
ljmp
fmull
stmxcsr
mov
out
outsb
out
adcb
out
jno
mov
ds
or
mov
in
mov
sub
pop
jle
xchg
pop
ds
jbe
and
fnstenv
orb
test
lock
push
jne
dec
out
scas
mov
xor
xchg
popf
xchg
movsl
lds
adc
into
popf
leave
sub
jae
mov
mov
and
out
jl
lods
pop
popf
push
mov
sbb
mov
mov
int3
loope
jne
mov
dec
mov
adc
popa
not
mov
rolb
xor
cmp
or
shll
cmpb
test
ss
pop
pand
stos
sub
fs
mov
push
jge
push
inc
cmp
aas
sbb
jp
pop
mov
jmp
jnp
sarb
sti
cmp
inc
cmc
xchg
rcrl
xor
jecxz
out
cmpsb
mov
in
scas
ds
dec
inc
mov
fs
test
pop
xorl
sbb
push
cmp
in
or
and
mov
in
inc
jmp
gs
push
out
mov
aam
lods
xchg
dec
leave
xchg
bound
jp
push
inc
mov
dec
mov
xchg
pop
lods
int
lahf
movsl
or
jle
dec
int3
fimuls
sub
jecxz
std
outsl
enter
rol
or
data16
add
adcb
lea
sub
dec
xor
test
pushf
xor
adc
test
jge
scas
fcmovu
jne
jbe
shlb
xorl
addl
xchg
into
fsubs
inc
test
mov
roll
nop
inc
mov
data16
hlt
pop
test
psrld
sbb
push
push
stos
aas
push
xchg
and
mov
mov
call
xor
sub
push
pop
movsl
adc
jb
jb
je
sarl
fs
push
push
in
cwtl
pop
lods
and
out
lret
xchg
aam
and
mov
xchg
xchg
aas
sub
mov
out
in
shr
es
sbb
push
inc
cwtl
roll
xchg
adc
shl
scas
loope
js
mov
lods
les
xor
or
popf
rorb
fcoms
push
push
in
stos
popa
sub
jl
enter
adc
adc
xchg
jbe
test
daa
adc
push
xor
adc
aad
clc
mov
jbe
mov
int
pusha
icebp
sub
mov
xor
add
jecxz
cltd
push
jge
shl
xor
xchg
insb
pop
js
push
mov
cwtl
pop
and
aad
rep
add
push
mov
xorb
pop
dec
mov
push
add
ret
nop
mov
sub
sub
adc
imul
addr16
shll
fisttpl
push
cld
pop
test
mov
sub
xchg
mov
leave
rclb
cmpsb
out
sub
pop
xor
pop
mov
stos
int
inc
mov
add
sbbl
or
push
out
or
mov
xchg
lret
sbb
adc
push
push
dec
mov
xchg
mov
cmc
in
push
ds
jae
insb
mov
pushf
mov
mov
jecxz
jmp
jbe
scas
popf
mov
add
jle
mov
leave
dec
sbb
jge
fs
fistl
cltd
js
test
movsb
sbb
popa
pop
jae
ret
std
jb
stc
cmp
xlat
jmp
mov
xor
enter
sbb
sti
movsl
clc
inc
out
inc
and
or
loopne
popf
lock
and
and
aas
test
or
subl
pop
inc
ficomps
add
outsb
push
mov
jnp
lahf
ret
add
push
sarl
mov
sbbb
sbb
fs
mov
icebp
out
sahf
addr16
xchg
or
add
arpl
mov
push
jno
enter
push
mov
test
mov
out
jb
xchg
dec
jb
pop
mov
inc
out
sahf
jbe
outsb
and
pop
jb
icebp
dec
mov
mov
adc
mov
call
mov
mov
into
sar
or
popa
mov
sub
test
call
arpl
mov
call
and
sbb
dec
xor
insl
mov
mov
sbb
mov
xchg
aaa
pop
jae
rclb
test
sub
xchg
pop
cli
lods
sbb
mov
jp
into
flds
xchg
lcall
ja
xlat
mov
lods
scas
fs
jmp
mov
fildl
or
pop
idivb
cld
flds
movsb
mov
push
push
mov
call
cmp
fidivl
cmp
lret
jno
movsb
jp
es
xor
jns
push
cltd
ror
hlt
scas
xor
sub
fildl
mov
fisubrl
std
pushf
push
movsb
inc
jo
or
icebp
jae
std
ja
scas
je
mov
jne
add
mov
std
cmp
or
sub
or
or
mov
rdpmc
sbb
xor
data16
cld
loopne
dec
rcrb
jmp
cld
mov
xchg
pop
in
sub
inc
sub
flds
loop
into
repz
xor
frstor
cmp
testb
xchg
jns
jle
dec
mov
mov
hlt
mov
xlat
xchg
imul
mov
scas
inc
stos
jns
sub
nop
fbld
jne
cmpsb
or
lods
leave
std
pusha
jbe
xchg
cmpsl
push
stos
push
jno
add
or
cmp
dec
or
pop
cmp
sub
cmpsb
scas
pop
sbb
scas
pop
mul
mov
xor
repnz
jge
stc
mov
mov
mov
mov
push
ret
out
or
xchg
imul
sahf
loopne
mov
orb
out
jmp
mov
mov
xchg
aam
sub
xor
and
movsb
dec
aam
fimull
ret
jno
push
jb
jg
lahf
pop
addr16
sub
shlb
leave
cmp
mov
mov
inc
std
clc
outsb
pop
add
lds
scas
push
jp
fwait
xor
dec
enter
aas
jg
sbb
mov
rorb
mov
mov
fs
jmp
inc
lcall
shrl
mov
push
cs
xor
dec
outsl
xchg
and
rclb
mov
outsl
mov
mov
rcr
lock
movl
sub
arpl
xor
mov
mov
dec
push
add
and
fs
clc
lock
test
incb
mov
dec
mov
add
cmpsb
xor
mov
idiv
movb
push
inc
mov
pop
sti
jle
sub
call
cmp
mov
stos
adc
add
dec
cmpl
jl
into
mov
sbb
push
rorl
xor
mov
mov
add
jns
in
mov
inc
and
lea
shrb
movsl
add
dec
sbb
and
outsb
push
popa
cli
inc
pop
sub
bound
addb
dec
gs
mov
notl
mov
push
push
fs
and
fwait
jmp
add
arpl
jge
test
or
stos
mov
xchg
and
stos
inc
jo
lods
jg
inc
clc
icebp
sub
subl
out
sub
mov
les
fnstcw
stc
insb
or
rcrl
loopne
addr16
cmp
push
adc
adc
test
cltd
lock
js
push
pop
adc
addr16
dec
mov
lahf
lods
xor
xchg
mov
mov
mov
mov
or
cli
jno
dec
cld
je
and
lcall
mov
stc
cli
xchg
hlt
lods
test
pop
sbb
and
xlat
lcall
push
cltd
mov
or
fxch
mov
leave
xor
adc
jmp
mov
xchg
sub
pop
pop
insl
cmp
dec
mov
pop
sub
add
jge
pop
xor
sub
shlb
sub
shll
into
rorl
cmp
jecxz
cmp
mov
pop
sbbb
jns
ret
inc
xchg
outsb
popa
or
pop
iret
push
hlt
xchg
mov
mov
std
out
call
popa
imul
cs
icebp
mov
jmp
jb
test
jle
scas
test
xor
and
add
push
cld
and
adc
bound
jne
cmp
pop
sbb
in
sbb
push
lcall
out
pop
fiadds
out
jo
inc
stos
mov
lahf
mov
scas
push
ror
popf
push
and
push
and
std
xchg
std
daa
int3
push
xchg
out
push
int3
xlat
sbb
lea
sub
mov
push
jbe
ret
dec
das
fldcw
rcrb
mov
sub
loop
test
xchg
cmp
dec
lahf
push
iret
xor
mov
mov
jbe
fs
outsl
or
xchg
das
insb
nop
sbb
and
add
dec
aaa
mov
push
test
aam
bound
jg
fs
sub
and
and
pop
adc
xor
divb
pop
arpl
mov
jbe
movsb
adc
lea
cmp
inc
inc
mov
lea
or
jae
aad
pop
push
cwtl
jne
ja
pop
push
push
mov
in
repnz
call
sub
call
cwtl
pop
mov
lods
jmp
stc
popa
jl
xlat
rcll
dec
inc
jns
inc
pop
dec
test
fs
stc
imul
in
stos
sub
insl
cs
mov
inc
jle
pop
in
insl
pop
xchg
pop
rclb
inc
sub
or
outsb
daa
into
imul
jecxz
adc
or
sub
sub
inc
cmpsl
pushf
jno
subb
sub
lds
jb
iret
mov
inc
pop
mov
jl
lahf
adc
xchg
test
mov
or
lea
mov
xor
scas
adc
adc
fcoml
lret
daa
push
push
addr16
movsb
jecxz
loop
int
repnz
js
pop
movl
push
scas
orl
sub
add
sub
sub
stos
xchg
fwait
imul
ret
fcmove
hlt
mov
cmpsl
cmp
jb
lret
jb
in
fidivs
xor
xchg
test
js
xor
sub
dec
push
test
mov
stc
add
stos
scas
jns
call
mov
std
arpl
xor
push
jbe
hlt
sub
out
loopne
hlt
cltd
rcrl
cltd
jmp
mov
bound
iret
xor
in
out
push
cmp
mov
push
out
sbb
jmp
and
cs
lcall
ja
out
cwtl
fisubrs
or
out
test
outsl
gs
jno
lea
popa
xor
inc
add
jmp
xor
pop
cmpsb
cwtl
push
and
mov
addb
push
xchg
mov
or
aam
push
test
mov
dec
inc
and
shlb
lcall
cmc
push
ret
sahf
cmp
orl
add
mov
push
inc
mov
push
dec
sbb
add
in
outsl
shll
lds
enter
lock
jne
stos
or
adc
inc
xchg
call
cwtl
inc
cmp
pop
outsl
xchg
xor
sbb
dec
rorl
adc
jns
xchg
pop
and
inc
sbb
into
out
aas
push
stos
arpl
popf
or
subb
mov
pop
aas
push
lods
mov
or
sub
cmp
xor
pop
loope
mov
fildll
in
gs
adcb
sbb
pop
aam
sbb
vpcmpeqw
lods
sti
mov
sub
insb
push
dec
jge
fisubrl
mov
xchg
inc
popa
add
popa
pop
gs
movsb
push
or
adc
popa
fnstsw
adc
mov
daa
xor
or
outsb
xor
mov
add
cmp
jg
and
faddl
push
mov
add
and
mov
lcall
sarb
lea
dec
fwait
inc
push
cmp
pop
sbb
enter
pushf
insb
sub
out
outsl
int
pop
imul
addr16
jmp
mov
cli
sub
mov
mov
adc
test
fdivrl
mov
es
xchg
xchg
adc
inc
es
ja
test
sub
or
and
adc
add
dec
or
mov
jmp
sub
insl
mov
incl
mov
stos
sbb
add
mov
out
out
adc
lds
mov
fadd
outsl
lahf
and
js
lds
movsl
scas
mov
adc
shl
push
pop
dec
jnp
test
in
dec
fmull
enter
outsl
ret
pop
pop
fwait
popa
mov
xor
les
popf
lahf
push
in
bound
ljmp
or
mov
push
mov
or
divb
or
add
mov
sub
iret
dec
shl
or
jp
fidivs
and
fiadds
clc
sbb
aam
mov
call
mov
and
jne
inc
or
int
loopne
les
mov
cltd
lahf
mov
call
stos
jle
xor
pop
les
arpl
cmp
stos
pushf
or
push
add
pop
movsl
leave
leave
push
jbe
sti
and
inc
xor
adc
loope
adc
outsb
stos
fsubs
outsb
cmc
ret
cwtl
adc
daa
jge
sub
or
mov
mov
jg
adc
dec
dec
sub
out
xchg
pop
movsb
xlat
imul
mov
xchg
shlb
bound
lret
es
ljmp
add
jecxz
in
cmc
pop
mov
sbb
pop
cmpsl
xchg
lods
mov
push
lods
pushl
mov
and
roll
call
repnz
xchg
in
cld
mov
bound
lods
imul
mov
out
cli
inc
mov
sarb
cli
dec
pop
lcall
add
dec
arpl
sub
xchg
add
sti
add
mov
repz
jge,pt
orl
push
dec
or
add
loopne
outsl
xchg
add
add
mov
or
sub
dec
mov
mov
sub
mov
call
jecxz
lret
jge
gs
scas
dec
popf
sti
mov
inc
rorl
in
addr16
jns
mov
pop
xchg
push
es
daa
adc
out
bound
xchg
adc
and
scas
mov
xor
shl
into
mov
popa
in
lea
out
pop
mov
lods
sbb
sbb
cmp
stos
or
xor
adc
mov
inc
scas
sbb
pushf
sbb
repnz
nop
sub
scas
lcall
cmpl
pop
repnz
insb
mov
mov
xor
and
sub
aaa
not
pop
std
test
or
dec
inc
inc
mov
dec
les
and
dec
lret
jmp
jp
mov
or
inc
jnp
adc
jne
and
inc
xor
xchg
sub
or
inc
xchg
jo
lods
pop
fidivrl
mov
add
out
loopew
mov
les
inc
mov
out
mov
and
sub
rclb
mov
shll
in
fnsave
xor
das
fdivrs
push
lret
mov
xchg
daa
inc
pushf
ja
xlat
insb
fisttps
cs
popf
and
sbb
fisubs
mov
jl
bound
push
inc
lods
add
xor
mov
int3
sbb
enter
pusha
push
incb
fsubr
js
fistl
repz
xor
roll
lods
lds
cmc
cmc
jne
jge
js
das
sbb
loopne
push
jmp
jp
mov
cmp
jg
in
sbb
pusha
add
ss
or
arpl
lock
mov
ret
adc
outsl
push
adc
add
movsl
ret
ficomps
stos
xor
inc
shl
xor
scas
mov
and
sub
out
sbb
inc
sub
cmp
or
and
mov
shl
sti
push
pop
push
and
dec
mov
pop
cmp
xchg
mov
loope
sbb
call
cli
push
inc
and
cmp
mov
popf
jae
dec
out
mov
insb
out
inc
xor
mov
pop
call
or
pop
sahf
and
int
push
inc
mov
add
adc
cmp
pop
pop
icebp
sub
xchg
test
jns
rcl
adc
add
cmp
mov
xor
sub
sbb
in
mov
shll
xchg
ja
notl
sub
int3
adc
pop
rcl
inc
xor
js
add
xor
movsb
fwait
lods
pop
xchg
jl
or
sbb
ljmp
sahf
jle
inc
push
or
push
xor
or
mov
mov
pop
mov
hlt
mov
mov
and
pusha
js
stos
sti
stc
fwait
or
loope
adc
mov
out
sti
rcrl
and
add
fdivrl
jb
cltd
mov
pop
adc
test
cmp
sub
mov
mov
pushf
pop
sbb
jle
lock
cmpl
cwtl
cmp
adc
sbb
xchg
aam
cltd
cmp
cmp
push
icebp
hlt
les
inc
pop
pop
cli
add
sbb
popf
pop
inc
adc
mov
jle
push
aam
inc
lahf
cmp
inc
cmp
dec
je
and
out
ret
dec
pop
fidivrs
aaa
or
out
sub
mov
iret
inc
and
mov
sbb
dec
inc
out
insw
sbb
cwtl
mov
into
aam
add
sbb
xlat
rcll
pop
fsubr
fld1
addr16
testb
mov
stos
sti
ljmp
mov
and
pop
sbb
jl
add
jae
ret
out
lret
test
data16
push
rclb
sub
pop
pop
cmp
pop
imul
jge
stos
ds
push
sti
push
jnp
and
imulb
inc
cmp
insl
jl
and
and
int
shr
jge
or
enter
mov
out
push
fimull
rep
jp
adc
push
insl
mov
frstor
pop
popa
jmp
mov
adc
sbb
xchg
clc
adc
inc
stc
decl
jo
adc
aam
rcll
pop
inc
and
jg
aaa
arpl
mov
xchg
add
cmp
rolb
mov
mov
into
cs
mov
inc
push
mov
ficoml
into
push
push
mov
xlat
and
cld
push
push
or
push
adc
sub
rcll
push
out
ljmp
imul
xchg
inc
sub
pop
and
or
aam
mov
pop
aas
mov
dec
mov
jnp
subl
cmpsl
pop
adc
fcmovne
fwait
mov
stc
and
or
outsl
dec
mov
fwait
ljmp
pop
xchg
adc
cs
subb
loop
loop
or
pop
cwtl
outsb
cmp
imul
mov
std
xchg
dec
add
dec
or
dec
mov
push
and
mov
enter
mov
test
adc
sbb
cwtl
iret
daa
fisubrs
xor
rorl
mov
fcmovnu
mov
outsb
cmpsb
sti
push
sbb
sbb
es
mov
jns
jg
aad
cltd
les
mov
jb
int3
ffreep
es
push
imul
cmc
dec
aaa
push
andb
in
nop
and
xchg
sbb
pop
jge
push
add
shr
ja
sbb
sarb
jne
push
pop
or
mov
vpmacswd
dec
adc
cmpsl
movsb
cwtl
xchg
push
mov
call
dec
in
inc
adc
leave
sub
repnz
push
cvtps2pi
lcall
cmp
adc
jl
pop
adc
mov
mov
fldenv
lahf
xor
jmp
mov
icebp
aas
je
pop
js
dec
scas
mov
xor
adc
or
push
clc
mov
pusha
mov
sbb
movsl
iret
add
xchg
test
jge
adc
dec
lahf
pop
iret
inc
mov
mov
push
jg
jg
scas
insl
sarb
mulb
adc
fiadds
xchg
sbb
and
lods
orl
ljmp
arpl
cltd
add
cmp
imul
movsb
loope
mov
bsf
cli
and
mov
hlt
xor
push
push
xchg
xchg
xchg
fsubrl
pop
ds
jae
and
push
inc
sub
shrl
push
scas
pop
out
test
leave
arpl
in
inc
int3
popf
dec
out
in
nop
repnz
fwait
enter
je
test
or
mov
lret
in
icebp
cli
jmp
or
xchg
dec
pusha
xchg
cmp
mull
push
cltd
dec
sub
cmc
test
addr16
sbb
enter
imul
stos
lods
in
push
rcll
mov
jns
xchg
push
push
cmpsb
xorb
push
cmp
push
stc
ss
jmp
pusha
jnp
cmp
mov
or
loopne
adc
sti
fldt
xchg
int
xchg
and
xor
rclb
popa
mov
lods
and
arpl
je
out
nop
jg
stos
inc
into
sarb
and
pop
lahf
xor
push
and
popa
fstpt
test
mov
and
push
test
je
outsb
push
test
add
out
jnp
test
ja
adc
out
sub
nop
popf
stc
sub
mov
mov
xor
mov
dec
jae
sub
nop
test
mov
arpl
jp
pop
xchg
lret
dec
and
and
pop
xchg
inc
std
scas
push
ljmp
stos
addr16
push
sub
mov
jo
mov
xchg
or
mov
shl
rorl
jns
mov
pop
mov
lret
sbb
loope
addb
add
sbb
xchg
out
push
roll
sbb
pop
push
leave
cmp
mov
cld
mov
or
cwtl
rcrl
stc
mov
inc
mov
pop
stos
push
repz
pop
xchg
hlt
stos
loop
inc
sub
test
mov
cmpb
sbb
and
sub
xor
cmpsl
dec
sub
inc
sub
jl
call
lock
xor
test
subl
dec
dec
clc
mov
mov
jns
outsl
js
jecxz
mov
jo
dec
aad
jmp
aas
rcrl
pop
idivb
aas
inc
loopne
sbb
pop
sbb
pop
lods
and
sub
das
out
cmpsl
jle
push
pop
cli
xchg
push
xor
inc
insl
out
xchg
mov
mov
adcl
ja
pop
jg
pop
dec
lret
add
sbb
outsb
xchg
adc
pop
inc
mov
adc
add
fnstcw
testb
enter
es
mov
push
cmp
mov
xchg
out
push
mov
imul
sti
in
inc
push
jnp
aam
lea
jmp
pushf
int
sti
lea
mov
lds
in
icebp
icebp
mov
mov
ljmp
jnp
mov
inc
adc
dec
insb
push
aad
add
or
lods
mov
dec
sbb
adc
mov
int
push
jmp
insb
jns
adc
mov
cltd
cltd
cli
add
push
mul
test
dec
jp
into
or
les
in
cmp
test
mov
cwtl
sbb
mov
test
stos
mov
xchg
and
mov
lret
pusha
orb
aaa
loopew
adc
pusha
or
adc
decl
dec
imul
mov
imull
mov
icebp
movsb
in
mov
fs
mov
mov
mov
push
or
adc
sahf
xor
aaa
push
bnd
sub
mov
fstpt
out
mov
pop
or
movsb
mov
and
ds
cmc
lea
sti
loop
fs
jecxz
and
subl
push
leave
sbb
inc
or
lds
aam
lcall
adc
pop
or
push
mov
pop
jmp
jb
jb
aad
and
or
mov
cmp
mov
mov
add
sub
jnp
or
mov
dec
lret
cld
lcall
mov
daa
in
sbb
push
mov
mov
xorb
and
ret
cmpsl
jle
aaa
out
pop
pushf
push
sahf
dec
daa
pushf
xchg
mov
add
imul
fwait
lcall
fs
sar
mov
push
inc
sub
aad
sbb
dec
rcr
mov
xchg
jecxz
in
mov
ror
mov
pop
sahf
movsl
inc
jle
stos
negl
out
fdiv
sub
test
sahf
mov
cmpsb
pop
xchg
fdiv
cmpl
push
lret
test
fstps
andb
dec
sti
in
loop
pushf
ljmp
sub
sahf
mull
icebp
jg
ja
sub
sbb
or
sti
mov
iret
mov
test
push
popf
adc
jae
testl
xchg
xchg
xchg
jg
sbbb
xor
jnp
cmp
sbb
push
dec
pop
inc
nop
pop
orb
movsb
mov
xchg
std
push
inc
dec
addr16
cmpsb
xchg
adc
sbb
xchg
loop
aaa
fwait
lcall
mov
dec
data16
imul
mov
inc
test
or
adc
dec
or
push
sub
idivl
stos
mov
inc
pushf
scas
and
or
mov
out
mov
fimull
and
push
mov
jb
fdivrp
imul
adc
aas
shlb
in
sbb
flds
push
add
rclb
dec
push
or
shrb
sbb
cmp
aaa
fnstcw
mov
inc
fnstenv
jmp
xchg
lret
cmp
fnstsw
and
pusha
mov
push
inc
cs
jmp
inc
inc
jo
mov
pop
fbld
icebp
shr
push
push
inc
js
outsl
insl
push
jae
dec
into
stos
push
mov
or
ljmp
mov
or
ljmp
mov
ljmp
xchg
pop
push
pop
cmc
shll
or
loopne
push
sbb
movsb
adc
push
dec
jmp
clc
xor
fs
cmpsl
rcr
pop
out
icebp
add
jne
mov
hlt
dec
or
pop
pop
popf
adc
in
shl
lock
mov
scas
and
shlb
sti
imul
pop
jns
push
test
adc
mov
push
popa
enter
fstpt
shll
popa
jg
or
imul
mov
lcall
in
stc
pop
subb
xor
dec
mov
cmp
enter
push
dec
cld
inc
and
jle
push
rcrl
out
clc
jne
and
mov
adc
mov
clc
faddl
call
fiadds
pop
int3
cwtl
push
ret
cld
mov
xor
js
stos
push
mov
imul
xchg
cmc
inc
push
mov
mov
mov
xchg
adc
and
sub
ds
jae
fs
sti
sbb
std
pop
jae
sbb
cmpsl
cmpsb
cmp
inc
out
push
cltd
and
cwtl
imul
in
xchg
in
mov
repz
or
pop
dec
xchg
movsb
sbb
jo
enter
jo
shll
inc
sub
xchg
loope
dec
pop
jle
loopne
idivl
adc
mov
sub
pushf
outsb
and
xchg
sub
xor
inc
dec
fsts
lahf
fndisi(8087
ljmp
cmp
dec
int
aad
icebp
out
pop
mov
fidivrs
ljmp
aas
mov
rcll
jl
aaa
in
cmpsb
jl
dec
movsl
xorb
loopnew
js
test
adc
push
in
ja
push
fwait
aas
push
jae
dec
sub
mov
pushf
sub
jp
cli
pop
and
iret
js
mov
fwait
xchg
orb
sub
fisubl
daa
xchg
aas
mov
add
sbb
sub
leave
repnz
cmp
fistpl
push
and
por
adc
push
inc
push
pop
mov
add
add
shrl
xchg
sub
insb
xchg
sub
mov
ja
dec
pop
sub
in
cmp
and
push
sub
add
or
frstor
repnz
sub
insb
gs
push
jmp
inc
hlt
out
and
in
cld
addr16
stc
mov
xorl
push
adc
push
xor
dec
adc
dec
imul
sbb
sar
or
mov
add
mov
popf
xchg
mov
dec
dec
xlat
lret
ret
rcl
xchg
movsl
cmp
shll
aad
pop
test
add
inc
xor
cmp
cmp
mov
sub
inc
dec
aas
jnp
mov
jb
lea
cld
add
adc
xchg
lods
adc
inc
pop
xlat
test
push
mov
pop
in
pop
xchg
inc
cmp
sahf
adc
insb
cmp
cmpsb
cmp
push
sbb
sbb
or
sbb
daa
pop
mov
mov
loopne
lret
pop
mov
loopne
mov
fs
push
or
pop
lret
into
loopne
mov
shl
and
orl
sbb
sahf
clc
push
sarl
lret
mov
addl
lock
das
leave
cltd
cmp
fiadds
aad
and
cld
sub
add
mov
inc
out
sbb
and
aam
sbb
into
stc
push
sar
outsl
push
scas
jl
adcl
inc
sub
mov
sahf
or
and
fyl2xp1
xor
mov
cmc
mov
ljmp
sub
xchg
lret
pop
lret
sahf
outsb
cs
inc
dec
lods
adc
jb
push
jne
orb
rcrb
fs
arpl
pop
clc
sti
out
jns
test
jge
push
xor
sub
das
mov
xchg
mov
or
scas
sbb
test
imul
in
pop
iret
dec
inc
repnz
dec
inc
xchg
test
bound
stc
dec
andb
ror
sti
js
movsl
jb
mov
cwtl
fs
pop
pusha
lock
sub
jne
xchg
cmpsb
leave
sahf
push
push
adc
pop
sbb
pop
push
jmp
jne
lock
and
sub
inc
xchg
pop
pop
aam
or
daa
and
out
aas
xchg
and
in
inc
lock
roll
push
ror
add
js
scas
sbbl
and
adc
sahf
and
in
loope
mov
fiaddl
dec
dec
es
rolb
bound
rcrb
sti
add
in
dec
ja
mov
push
push
adc
xchg
into
gs
lea
xchg
fiaddl
mov
mov
or
out
mov
adc
cmp
lock
popf
out
insl
xor
xchg
sub
inc
push
sub
ja
jl
cmpsl
call
sub
mov
lahf
cld
fisubrl
ficoml
mov
mov
sub
sub
adc
or
ret
call
xchg
fwait
xor
inc
pop
inc
fimull
cltd
pop
jmp
out
cmp
pop
push
jge
inc
mov
fcomps
mov
in
or
rcrb
adc
push
pop
mov
and
adc
call
movsl
push
es
inc
jmp
repz
rcrb
sub
inc
leave
dec
inc
mov
inc
and
mov
mov
cmp
sbb
repz
mov
mov
pop
inc
push
imul
cmpsb
fsub
jo
add
and
shl
inc
in
cwtl
test
in
inc
pop
xor
test
dec
test
fadds
loop
jo
cmpb
mov
mov
ja
jp
ljmp
daa
xor
mov
dec
ffreep
lret
inc
popf
adc
insl
shrl
shll
leave
repz
sbb
lods
iret
lret
mov
sbb
cwtl
push
stc
push
mov
sarb
jle
shr
hlt
xlat
sub
rcl
mov
in
loope
sub
negb
or
testb
call
cwtl
and
mov
test
and
jne
xor
popf
ljmp
mov
movsb
lcall
rcrl
test
mov
leave
int
xchg
add
jle
push
or
out
or
sub
push
imulb
xor
psubq
mov
pop
aaa
daa
cli
sub
mov
pop
rcrl
or
xor
out
stc
arpl
fs
xchg
lcall
adc
xor
ror
hlt
decl
mov
or
ljmp
add
sbb
or
jae
nop
jle
cmp
mov
lods
lret
xor
adc
xor
bound
push
mov
or
jo,pn
and
adc
jge
xlat
and
das
adc
mov
in
cmp
push
add
fwait
xor
inc
inc
jp
icebp
ds
sbb
cmp
cli
lahf
mov
rcrl
push
inc
test
iret
lret
mov
mov
add
pop
xor
cmpb
pop
popa
inc
pop
dec
stos
adc
int
jl
and
sbb
out
cmp
nop
sub
sarl
mov
enter
mov
fisttps
in
xchg
and
sbb
mov
ret
dec
out
std
dec
xor
cs
fsubl
mov
scas
pop
push
adc
push
cmpsl
and
mov
push
or
test
sub
add
popf
xchg
cmp
mov
bnd
gs
loope
mov
scas
jno
sbb
jle
lea
mov
leave
pop
adc
add
cmp
nop
sbb
leave
out
pusha
push
jmp
sahf
lret
in
lods
loop
loope
or
loope
js
loopne
push
jmp
int3
inc
mov
sub
sbb
sahf
lods
lret
jo
loopne
mulb
test
ret
push
gs
and
xchg
push
xor
sub
lret
dec
mov
xchg
xchg
xor
dec
mov
je
or
inc
popf
cmpsb
mov
movsl
out
shrb
icebp
xchg
push
test
rorl
push
adcb
adc
push
xchg
sbbl
cld
sbb
addr16
int
push
cmp
sub
jl
in
xchg
iret
push
mov
sbb
xor
das
sub
xor
test
push
ret
clc
jnp
xor
test
jp
mov
sub
jb
or
jmp
sbb
or
and
cli
les
mov
mov
aaa
daa
jns
lahf
fwait
xchg
insb
icebp
xor
sbb
lds
jle
roll
sub
pop
daa
mov
in
sarl
pusha
lock
xor
cmp
lods
popl
sbb
inc
mov
mov
popf
push
push
or
xorl
xchg
xchg
mov
xor
data16
invd
scas
push
push
mov
js
cmp
inc
adc
jns
add
adc
aad
mov
test
or
cmp
loopne
cmp
cmp
pop
movsb
out
inc
dec
xchg
daa
jecxz
orl
inc
pop
scas
fs
jl
outsb
xor
mov
and
aam
pushf
in
mov
xor
fwait
and
or
aam
aaa
adc
js
dec
or
mov
sub
inc
rorl
andb
mov
inc
movsb
lock
jb
and
xor
mov
shr
push
pop
xlat
scas
in
stos
movsl
and
mov
cs
sub
shl
fldl
ds
mov
aas
notb
sub
mov
ja
arpl
pop
scas
pop
rol
pop
dec
dec
mov
ret
or
sub
jge
je
cmp
jo
sarl
inc
daa
pop
ss
test
outsb
scas
inc
aaa
xor
push
push
adc
out
add
ds
fwait
push
insl
enter
test
xor
insl
jle
arpl
dec
sahf
loop
adc
push
push
call
daa
mov
fidivl
subl
aam
decl
in
pop
ljmp
scas
idivl
inc
xor
jmp
xor
sub
xchg
subb
bound
push
shll
sbb
cmp
sbb
stos
xor
cmp
andl
aad
mov
into
xchg
mov
stos
dec
or
sbb
inc
xchg
test
adc
stos
jg
nop
mov
xor
scas
adc
jecxz
sbb
adc
jbe
jns
dec
dec
jle
out
sbb
rcrb
repz
cltd
sub
cmpsb
negl
xchg
cmp
push
cmp
or
sub
int3
and
xchg
jl
push
mov
jl
sbb
mov
fistl
inc
testb
xlat
aam
out
dec
push
orl
fwait
push
dec
or
mov
in
repz
enter
std
xor
xor
cmp
sbb
fldt
add
imul
fcomps
les
dec
stc
xchg
sub
pop
cwtl
loopne
mov
xorl
inc
sarb
cltd
dec
adc
ss
fidivl
or
lahf
or
js
mov
add
dec
lods
outsb
jp
jnp
and
push
xchg
pop
test
sub
mov
movl
and
adc
adc
sub
popa
insb
and
outsb
sub
lret
jle
mov
stos
adc
dec
shlb
adc
pop
xchg
loop
add
jecxz
sub
cwtl
push
repnz
cmpsl
inc
out
mov
cmpsl
call
jge,pt
lea
jbe
lahf
xor
mov
imul
sub
xchg
dec
hlt
daa
test
xchg
and
push
lcall
cmp
movsb
push
push
into
repnz
mov
mov
test
andb
imul
adc
dec
std
ret
mov
insl
push
out
loope
or
mov
loopne
sub
mov
lahf
mov
stos
xchg
test
push
sub
nop
mov
loopne
push
das
pop
sar
test
and
sbb
pop
idivb
in
sbb
ja
loop
aaa
mov
fucom
int
sarl
lock
cmp
sub
js
inc
lock
mov
mov
mov
bswap
int
ljmp
aaa
pop
push
push
mov
ds
xor
add
outsl
lret
aam
or
inc
ja
sub
sbb
jp
jne
in
shlb
jno
add
dec
xor
jecxz
jae
add
jmp
pop
add
xor
mov
hlt
pop
jnp
cld
cmp
jge
jne
roll
lea
lock
mov
pop
dec
xchg
mov
mov
inc
mov
sub
or
jne
sbb
and
inc
xor
hlt
out
mov
push
pop
xor
mov
jecxz
out
mov
dec
inc
lcall
add
sbb
pop
ss
xor
sbbl
jecxz
mov
faddl
stos
out
int
scas
push
sbb
inc
add
js
ljmp
dec
jno
mov
testl
popa
ror
mov
mov
addr16
jno
in
dec
mov
push
decl
jmp
imul
xchg
shr
dec
loope
xchg
fildl
test
popf
dec
imul
mov
push
or
addb
lea
fcomps
dec
cmp
jp
and
push
loope
push
adc
xchg
mov
rclb
mov
push
cwtl
daa
into
pop
add
aam
pushf
pop
subl
inc
fisttps
and
cmp
cmp
das
aaa
adc
dec
xchg
cmpl
push
push
in
jno
pop
orl
out
insb
insl
filds
scas
test
add
outsl
and
aas
dec
dec
cmp
outsl
jge
adc
jbe
jns
sbb
imul
in
sub
sub
pusha
mov
daa
adc
adc
adc
rorb
pop
adc
lret
mov
inc
movsl
int
fs
dec
xchg
mov
stos
xor
mov
or
cmp
mov
ficoms
and
jae
push
ret
cmpsl
lock
mov
popa
shrb
jne
cli
sub
aam
or
mov
pop
testb
pop
sti
jle
or
shrb
ja
inc
xchg
ret
dec
mov
xchg
fimull
out
mov
fisttpll
xchg
mov
sbb
xchg
fdivr
xchg
pop
out
cmpsb
insl
jg
mov
scas
cmp
push
fstps
jae
mov
inc
jno
xchg
test
rcrl
mov
pop
jne
cmp
xchg
cmp
je
or
scas
sbbl
in
jl
aad
cmp
sbb
out
pop
test
es
bound
adc
adc
push
sarb
testb
je
imul
jl
fbstp
mov
jl
outsl
nop
push
mov
sub
sti
jbe
cmp
mov
fs
add
ficompl
push
push
mov
and
dec
andl
pop
sub
lahf
jl
loope
xchg
sub
push
mov
ja
xchg
or
aas
and
xchg
fldt
add
in
inc
rclb
sbb
mov
int
mov
push
cmovl
addr16
cwtl
fnsave
inc
scas
ljmp
outsb
ret
iret
sahf
mov
lret
pushf
test
mov
sbbb
rolb
je
cwtl
cli
jb
packuswb
add
fs
lcall
ficompl
inc
add
in
in
leave
cmc
out
lcall
jge
push
imul
aas
aad
js
imul
xlat
push
push
xchg
add
jb
imul
sub
xor
adc
xchg
daa
fmuls
mov
cmp
adc
dec
gs
insb
arpl
paddsw
xchg
dec
out
xlat
stc
mov
pop
sbbl
movsl
jmp
insb
dec
pop
push
push
pop
int
pop
push
scas
mov
repz
outsl
sbb
xchg
push
stos
and
adc
mov
nop
outsb
lret
mov
inc
imul
fidivrl
xchg
outsb
inc
xor
cmc
cmp
add
or
pop
add
mov
dec
lock
lock
out
mov
and
push
addr16
fsubs
aaa
cs
mov
dec
inc
mov
cmp
inc
gs
add
loopne
int
mov
or
in
adc
movsl
sti
loopne
mov
in
adc
mov
je
and
fiaddl
inc
mov
sbb
dec
pop
jmp
mov
mov
push
cmc
push
push
test
popa
inc
js
inc
jg
sarb
push
imul
cld
and
enter
ja
scas
aam
pop
lahf
add
xchg
push
shrl
std
sti
lret
loopne
adc
loope
adcb
mov
scas
mov
jl
rcl
pop
and
sub
cmp
mulps
lock
or
jnp
jns
rorl
sbb
movb
mov
mov
cmp
ss
stos
mov
fstps
cmp
mov
sbb
scas
in
cmp
sbb
and
inc
imul
icebp
or
mov
loop
and
xor
push
out
push
adc
add
jb
dec
dec
xchg
xor
lret
xor
jl
enter
mov
and
add
sbb
test
cmpsb
pop
push
adc
iret
dec
les
je
xchg
aaa
or
cmp
xchg
outsl
in
clc
push
cvtps2pi
inc
call
dec
into
js
mov
xchg
imul
push
shrl
js
jo
adc
out
sub
js
pop
aas
int3
sub
pushf
pushl
pop
or
fwait
inc
adc
leave
adc
rcrb
in
in
test
dec
cwtl
ljmp
les
in
mov
sub
mov
xchg
stc
fwait
es
mov
cmpsb
iret
pop
loopne
fwait
sub
inc
lahf
repnz
scas
in
pop
xchg
pop
mov
cld
pop
jmp
jmp
xchg
mov
iret
dec
cmpsl
push
lahf
insb
aas
pop
push
mov
sbb
push
pop
push
mov
adc
dec
xor
cmp
inc
dec
sub
adc
inc
or
jne
xor
jle
adc
mov
fbld
cmpsb
int3
push
add
pushf
dec
push
cmp
mov
sahf
mov
or
inc
ficompl
push
push
bound
jo
and
in
pop
sbb
and
clc
in
mov
ss
inc
or
dec
mov
sub
decl
scas
sub
loope
out
cmp
xchg
mov
pop
cmc
jo
fwait
sbb
pop
adc
jbe
xchg
out
or
test
cmpsl
rcll
xchg
in
scas
stos
pop
push
pusha
add
sub
jge
clc
add
fwait
shlb
iret
clc
push
sub
and
cmp
mov
xor
adc
loop
jno
loop
test
mov
enter
sbb
push
jo
out
jp
pusha
loopne
push
clc
rorl
rcrl
rorl
inc
scas
mov
loope
and
pop
or
and
sbb
adc
xchg
sahf
push
daa
insl
xchg
add
xor
ja
jnp
je
leave
rcr
mov
adc
in
int3
pop
arpl
out
ret
pop
hlt
outsl
cmp
jmp
add
pop
mov
ljmp
std
fcomps
clc
mov
pop
xchg
adc
mov
enter
repz
shll
pop
hlt
in
enter
pusha
in
sti
dec
inc
insb
sbb
int3
lcall
cld
add
push
es
orb
pop
jp
outsb
adc
pop
inc
push
hlt
fs
add
cmp
call
out
mov
orb
bound
lcall
jno
cmp
cmp
lea
mov
jl
mov
ret
fldenv
mov
insl
outsb
sarb
mov
sbb
rorl
xchg
add
jns
push
push
es
sbb
shll
dec
insb
cmp
and
lcall
xchg
xchg
xchg
lcall
ja
mov
sarl
mov
sarl
cmpsb
xor
mov
mov
cltd
ljmp
int
lahf
scas
fstps
cmp
es
dec
jl
or
les
aaa
push
fnstenv
lret
test
inc
cmp
sbb
add
sbbl
div
inc
cmp
inc
cmc
push
cmp
data16
fisubrs
sub
and
adc
cs
test
rolb
inc
ret
push
fwait
xor
mov
test
pop
scas
xor
mov
pop
cmpsl
stos
jbe
outsb
pop
xchg
addr16
mov
lods
mov
mov
js
cmp
data16
incb
movsl
xchg
int3
add
mov
popf
scas
or
frstor
insb
and
jns
aaa
push
xchg
loopne
inc
pop
and
out
push
popa
and
ret
std
das
jmp
sbb
xchg
cltd
cmp
pop
jae
outsb
xchg
stos
mov
sti
sbb
adc
inc
std
dec
cmp
leave
pusha
cmp
stos
lock
dec
lea
sbb
add
lea
or
push
xor
push
mov
jmp
xchg
jne
pop
ret
std
pop
mov
xor
push
xor
mov
je
xchg
push
sbb
and
xor
push
add
pop
out
inc
pop
add
ds
dec
fcomps
daa
ljmp
mov
daa
in
mov
lret
lcall
lret
jnp
cmp
mov
xchg
dec
and
das
std
or
xchg
enter
shl
in
dec
lahf
mov
lret
fdivp
and
fs
je
cs
cltd
aad
fwait
sbb
mov
cs
pop
mov
insl
pusha
push
xor
fs
mov
inc
sbb
dec
lahf
inc
jnp
add
sbb
mov
rolb
mov
int
and
mov
ret
and
dec
fnstenv
popa
sbb
inc
cmpsb
sbb
xor
loop
popf
xor
mov
xor
inc
ds
lea
sbb
fbstp
sbb
outsl
or
ljmp
dec
lock
out
negb
mov
sbb
jb
mov
aad
cmp
imul
shll
and
cmovs
jne
mov
mov
pop
imul
call
out
xor
movsb
xor
fldcw
hlt
lret
in
xchg
mov
push
call
mov
jmp
xchg
sub
aad
jb
push
es
jnp
xor
dec
sub
mov
mov
mov
jb
stos
or
pop
push
pop
push
mov
stc
dec
scas
ds
call
sti
jecxz
int3
and
lcall
push
bound
pushf
jbe
hlt
loope
inc
test
jl
or
add
repz
add
jmp
add
lahf
fcoml
aas
mov
push
leave
into
aaa
adc
adc
pop
inc
aaa
enter
out
fcoms
lret
add
lret
mov
pop
mov
imul
outsl
in
loopne
pusha
fs
lret
shrl
push
dec
inc
mov
add
scas
je
scas
dec
shlb
sub
fldcw
ror
mov
mov
adc
mov
adc
das
mov
sbb
dec
loop
cltd
pop
xor
shll
adc
and
int
ficomps
ss
jnp
inc
pop
ret
xchg
mov
xchg
out
sbb
sbb
les
and
cmc
jecxz
adc
lods
out
jbe
in
push
les
int3
cli
and
lahf
in
lock
dec
mov
adc
fsts
dec
push
xchg
cmp
and
inc
mov
push
lcall
push
lahf
repz
jle
adc
mov
jno
lds
arpl
cmc
call
fcom
stos
cmp
sbb
push
fisubrs
and
fsubrs
ss
sti
pop
sbb
addb
push
ret
repz
mov
call
adcl
movb
mov
push
pop
sub
pusha
int
ret
xchg
in
call
cmpsb
push
fs
mov
push
ret
fstpt
sub
fldl
int
ds
mov
push
adc
pop
addr16
fadds
fs
pop
and
int3
sbb
nop
lret
cmpsl
sub
dec
in
push
sbb
int
push
sub
cmp
and
lds
jg
je
cwtl
and
push
fisttpll
repnz
cmp
pop
or
ja
xchg
repz
jnp
inc
inc
sti
cmp
mov
xor
cld
adc
xchg
adc
push
loopne
xor
aad
shr
mov
js
repnz
sarl
mov
and
fs
cmpl
dec
sarl
pushf
movlps
xor
jns
ret
mov
into
add
xchg
push
pop
xchg
pop
inc
mov
lds
pushf
lahf
andb
and
or
roll
mov
or
mov
fmul
pop
xor
xchg
and
jno
lcall
and
in
push
outsl
mov
out
or
dec
sub
sti
mov
test
mov
push
sub
imull
dec
mov
cmpsl
and
outsb
movsb
fdivrl
movsb
pop
cmp
sbb
lahf
and
mov
or
fisubrs
nop
or
add
out
mov
out
call
jbe
jecxz
mov
mov
imul
cmp
adc
push
jbe
cmp
mov
xorb
xchg
adc
sub
shrb
mov
insl
xor
pop
mov
dec
push
mov
int
xor
jnp
repnz
add
jecxz
lcall
sbb
movsl
outsl
decl
subb
mov
cmp
sbb
push
xor
das
inc
or
enter
push
imul
cli
iret
mov
xor
lret
call
in
jmp
jmp
adc
das
lock
movsb
xchg
outsl
jmp
mov
ret
mov
mov
or
adc
aas
data16
mov
push
setp
mov
xor
mov
xchg
iret
mov
pushl
loopne
out
hlt
fisttpl
xchg
scas
repz
sub
xor
aad
mov
in
or
push
sub
pop
pushf
push
lds
into
aam
jg
or
inc
or
pop
cmpsl
imul
into
lea
mov
xor
shll
ljmp
mov
cmpsl
lret
jb
mov
int
pop
in
idiv
ljmp
rcl
dec
mov
pop
fadds
nop
pushf
push
sbb
fisttpl
rcrl
fildll
dec
dec
fiaddl
jecxz
inc
lcall
aad
lods
aam
shlb
pop
sbb
lock
cmpsl
movsb
dec
or
aas
dec
rcrb
enter
mov
daa
ss
cs
insb
in
mov
leave
popf
divb
inc
pop
adc
push
mov
push
pop
fistpll
inc
jge
out
lret
js
and
adc
xchg
std
insb
pop
imul
jo
jb
lcall
lahf
adc
out
mov
mov
jne
cmp
pop
addr16
xchg
add
mov
pop
jae
cwtl
clc
cmp
rolb
cli
dec
jnp
out
push
xor
xchg
fistl
pop
add
rorl
cltd
test
call
lds
in
xchg
in
adc
mov
stc
cmp
push
in
add
scas
lods
sbb
sbb
loope
mov
cmp
in
lret
fidivrs
inc
addb
mov
and
imul
rclb
test
aad
scas
sub
or
jmp
push
pop
dec
aaa
fstl
sbb
pop
mov
mov
mov
sbb
pop
pusha
pop
icebp
and
add
aam
imul
jl
xchg
mov
daa
mov
inc
aam
stc
addb
mov
push
push
addr16
imul
aas
jb
cmp
and
out
cltd
mov
rorb
cmp
ficoms
loop
adc
ss
push
xchg
rcl
push
mov
fs
test
adc
jne
and
lock
movsl
fnstsw
hlt
add
in
jmp
add
in
push
cmpsb
mov
and
flds
pusha
ss
cmp
inc
inc
shll
flds
icebp
xor
insl
pusha
fisttps
arpl
cmp
jmp
adc
in
iret
xchg
je
imul
sbb
fwait
and
imul
pop
shlb
sbb
sbb
and
jae
xor
mov
pop
xchg
push
inc
aam
push
out
sti
mov
in
xor
pop
mov
cli
push
enter
xchg
imul
jl
xchg
push
iret
jmp
pop
adc
std
mov
lcall
push
dec
ret
iret
lods
jno
mov
stos
xor
inc
inc
pusha
outsb
mov
xchg
jnp
mov
inc
dec
repnz
xchg
data16
sbb
pop
xchg
in
sbb
push
xor
std
int
ja
jmp
pop
stos
insb
adc
dec
jnp
add
mov
inc
add
pop
xor
mov
sub
sbb
push
mov
add
enter
das
pop
dec
das
into
jo
ficoms
add
addr16
stos
sbb
or
dec
sub
inc
stc
aas
aad
mov
push
inc
mov
mov
gs
inc
inc
dec
repz
icebp
mov
lock
ja
or
loop
jns
rolb
lea
lods
inc
lds
pop
stos
data16
xor
sub
cmp
cmpsl
adc
out
pusha
and
ret
xchg
xchg
test
testl
pop
imulb
out
adc
loope
out
adc
and
add
fsts
in
inc
xorl
or
mov
clc
inc
imul
out
adc
dec
push
fwait
pop
xor
int
fwait
mov
arpl
movsl
inc
mov
and
push
fisttpll
shrb
ficomps
jle
pop
add
add
xchg
and
loope
js
sub
jl
mov
ret
push
mov
inc
mov
fwait
fwait
cmp
cmpsl
shrb
sbb
mov
push
fisttpl
lock
cmp
lret
jg
jg
nop
sub
xchg
fsubrl
xor
popa
cmp
xor
jno
cmp
adcb
pop
mov
xor
mov
or
jl
out
xchg
popl
js
sbb
pop
xchg
cli
mov
push
insb
push
push
push
jb
out
std
fst
stc
pop
sbbl
daa
rol
push
add
and
xchg
mov
aad
fs
imulb
xchg
adc
in
mov
jecxz
and
adcl
mov
sbb
fadds
je
cmp
jbe
movsl
xchg
in
pop
push
push
adc
pushf
fdecstp
ja
ds
shrl
xchg
lcall
in
sbb
mov
imul
test
pop
jecxz
cmp
fcoms
in
je
push
and
push
push
gs
mov
pop
sub
push
ficomps
xchg
cltd
pop
pushf
test
cmp
das
xlat
jbe
adc
shll
lcall
jne
inc
push
movsb
xor
pop
pop
jmp
das
inc
or
fisubrs
dec
xchg
fucom
fistpll
xchg
adc
loop
jo
aaa
pop
in
cmp
sub
mov
out
mov
jns
outsb
xchg
lret
cmpb
push
adc
mov
add
mov
in
or
push
add
ja
inc
ja
and
sar
add
or
arpl
les
adc
movsl
xorl
lods
mov
js
pop
test
cmc
rol
mov
repz
dec
push
adc
jb
add
rcrb
dec
out
jnp
popf
sbb
in
mov
pop
andl
sbb
lcall
xchg
cmpl
inc
add
and
sti
fisttpl
sbb
inc
in
not
leave
adc
mov
push
fldl
mov
mov
repz
add
sub
icebp
cmc
push
push
or
xorl
ds
cmpsl
lds
push
test
leave
into
jnp
call
jge
dec
rolb
inc
pop
sub
push
repnz
inc
lcall
mov
outsl
inc
sbb
sub
adc
push
pushf
mov
push
out
xor
jns
fcmovnu
adc
in
in
add
push
sub
lock
loopne
xor
mov
mov
fwait
or
mov
cwtl
jno
jge
and
mov
lret
mov
push
push
sub
insl
jle
mov
xchg
add
or
decb
jb
ljmp
pop
movsl
aas
cmp
xchg
pop
mov
jp
call
add
mov
imul
xchg
sbb
cld
fbld
lods
popa
sub
je
cmp
jbe
mov
or
daa
out
push
imul
dec
test
sbb
mov
mov
mov
mov
out
vmptrst
gs
jne
mov
xor
or
sub
mov
int
mov
orb
ret
mov
adc
lret
js
mov
pushf
inc
pop
movl
sbb
iret
xlat
mulb
lock
sub
fs
dec
int
aas
jmp
aas
inc
bound
jb
out
ja
sub
mov
xor
mov
jbe
jnp
pop
sub
xlat
movsb
sub
and
sahf
lock
enter
inc
mov
insb
mov
push
cli
sub
sbb
jg
scas
sub
out
outsl
pop
lahf
test
and
pop
xor
je
inc
mov
leave
cwtl
cmp
sbb
adc
scas
push
mov
aam
fdivl
xchg
push
mov
jmp
stc
jne
cwtl
xchg
call
jmp
xor
mov
ja
push
cld
add
loop
lods
fimull
sub
xchg
push
xchg
ret
test
aaa
adc
add
in
int3
push
insb
cmp
orb
lret
leave
mov
cmpsb
lret
add
xor
leave
inc
xlat
repnz
outsb
lret
dec
push
add
cltd
push
fwait
data16
dec
xor
cmp
xlat
inc
mov
lret
adc
mov
les
push
adc
int3
mov
mov
test
mov
addb
push
pop
clc
adc
ja
fidivl
cs
cwtl
push
xchg
add
push
cmpsb
cmp
and
rcll
addr16
or
mov
popa
repnz
push
shl
mov
aaa
scas
mov
xor
jecxz
cmpb
xchg
repz
jl
out
incb
xlat
jl
mov
movsl
icebp
add
popa
sahf
mov
fdiv
ljmp
jge
sub
les
sbb
lds
xor
jge
adc
call
insl
xlat
cltd
in
test
jbe
stc
mov
jno
or
push
ret
out
xchg
sbb
xchg
stos
in
popa
imul
sbb
ds
add
jle
jl
popa
aad
mov
push
mov
test
insl
adc
mov
pop
into
fimuls
test
add
repnz
xor
insl
into
and
js
inc
aad
stc
jle
mov
dec
stos
xchg
mov
add
sub
push
lret
inc
push
adc
inc
clc
sub
rorb
cmovnp
xchg
loopne
cmpsb
sbb
inc
sub
dec
mov
stc
mov
std
mov
adc
out
adc
iret
xor
xchg
out
pop
cmp
sub
orb
adc
dec
rcrl
lock
imull
push
push
imul
dec
lahf
jns
adc
mov
mov
pushf
insl
mov
lret
cli
lret
sbb
xor
ja
stos
loopne
and
fwait
add
cmpsb
test
dec
loope
jb
iret
and
jecxz
std
mov
mov
cmp
int3
xor
jo
popa
cmp
mov
jmp
pop
and
cmpsb
pusha
lret
call
sbb
orl
movsb
fldl
sti
pop
and
ficomps
xor
imul
add
mov
inc
pop
lds
jne
push
cmpl
repz
sarb
push
divb
add
dec
out
xchg
inc
popa
cmp
mov
push
repz
outsb
xor
xor
xlat
mov
ja
mov
stos
sbb
dec
in
push
stc
xchg
out
pop
adc
cmpsb
fistl
push
call
cmp
fsts
arpl
mov
dec
push
mov
sbb
nop
rcrb
das
jb
and
inc
or
fmul
sbb
sbb
push
jmp
push
iret
lcall
adc
push
imul
clc
cmp
cmpl
pop
mov
jl
add
cmpsl
in
mov
aad
fs
cmp
xor
shlb
leave
push
push
adc
daa
inc
mov
xor
mov
mov
jmp
pop
sbb
into
cmp
icebp
adc
push
xchg
xchg
mov
inc
push
jns
pop
mov
dec
out
inc
mov
sbb
adc
sbb
rol
mov
mov
fimuls
push
xchg
loope
cmp
cmpsb
lcall
stos
add
aaa
inc
xlat
pop
sbb
mov
outsb
adc
iret
mov
add
fdivp
fidivl
mov
shll
push
sbb
scas
aas
adc
mov
cwtl
ds
add
cltd
sbb
cmp
or
add
mov
pop
pop
push
jle
and
sbb
push
xor
adc
push
pop
cld
clc
in
push
or
lds
mov
or
push
mov
sub
je
xchg
mov
shl
mov
fwait
push
rcrb
push
and
push
sbb
xchg
jnp
sbb
mov
cmpsb
pop
mov
mov
cld
xchg
sbb
push
mov
ret
scas
pop
jmp
div
xchg
or
push
rclb
js
pop
mov
xor
sub
cmp
add
inc
mov
imul
lods
adc
addr16
in
imull
jno
lss
leave
in
lahf
je
dec
outsl
rolb
push
imul
dec
pop
mov
cli
popf
fwait
mov
dec
popf
and
sahf
stc
inc
jb
ds
cmp
in
test
xorb
or
mov
or
jb
and
xchg
lock
push
fnstenv
clc
mov
hlt
xchg
loopne
mov
lret
fwait
pusha
insb
jnp
push
cmc
cmp
push
dec
hlt
jge
in
xchg
pop
call
xchg
inc
xor
mov
shrb
cmp
or
mov
push
sbb
mov
mov
clc
pop
mov
shll
pop
push
pusha
xor
les
lods
jecxz
jg
sti
sbb
flds
jns
mov
das
lods
mov
and
call
out
jne
dec
push
ja
mov
sub
daa
xor
out
aam
es
push
jne
out
sbb
sbb
xlat
das
pop
mov
inc
fimull
popf
lea
push
adc
inc
cmp
test
fadd
pop
adc
mov
pop
add
pop
mov
lret
rolb
mov
xor
cmp
pusha
movsl
jbe
out
or
sahf
ret
sbb
jecxz
push
adc
insb
icebp
ret
push
xor
adc
xchg
xchg
push
inc
lret
mov
divb
dec
aaa
add
les
loop
ror
or
push
stos
fisubrl
inc
loop
sbb
ret
jl
lods
mov
pop
cmp
xor
fdivrl
std
mov
insl
andb
movsb
or
loope
cmp
lcall
xchg
test
mov
and
mov
pop
shll
mov
sbb
stc
pop
or
pop
ret
ss
icebp
int
outsb
stos
sub
pop
mov
scas
push
lret
bound
mov
es
sbb
aaa
arpl
stos
dec
xor
pop
mov
dec
enter
imul
xor
mov
hlt
mov
mov
jl
rcrl
stos
push
mov
mov
roll
daa
pop
mov
cmp
incb
daa
xchg
nop
mov
fisubs
fnstsw
push
cltd
sub
add
mov
int3
stos
stc
push
cmp
pop
ljmp
sub
mov
lea
repnz
xchg
loope
jle
lret
sbb
cmp
insb
data16
cmp
add
lret
or
mov
pop
xchg
dec
push
insl
fldcw
push
lret
pop
mov
push
out
call
and
lret
in
cmp
jno
in
xchg
jmp
cmp
pusha
jne
lods
jae
mov
in
cmp
and
jge
push
out
mov
mov
adc
xchg
inc
mov
aad
xchg
dec
arpl
stc
inc
jbe
sbb
outsb
dec
inc
adc
testl
adc
xor
inc
inc
stc
adc
mov
cli
lea
iret
popf
int3
dec
das
adc
cmp
mov
fistpll
jb
mov
ret
orb
push
jmp
shlb
sub
mov
stos
daa
andl
sub
and
xor
fsubs
cld
iret
gs
jne
mov
push
aam
cld
xchg
adc
repz
popf
test
lret
loopne
mov
or
test
mov
add
mov
xchg
push
sbb
sahf
mov
mov
push
mov
sbb
pop
sub
sbb
in
mov
in
or
mov
pop
fucomp
rcrl
test
pop
es
dec
ret
in
cmpsb
movsb
test
cmc
pop
pop
add
pop
in
jl
sti
adc
and
jecxz
mov
popf
lock
sbb
push
pop
pop
pop
in
gs
fimuls
mov
dec
adc
faddl
sbb
jmp
push
fnsave
arpl
inc
and
jns
xchg
and
dec
mov
repnz
loopne
aas
popa
loop
insl
sub
xor
inc
rcl
cmpsl
cmpw
jae
fadds
add
inc
lea
pop
dec
pop
iret
cmpsl
aas
jg
dec
icebp
sahf
mov
xor
jl
or
aas
and
and
push
cmc
adc
jp
mov
js
call
test
cltd
sbb
out
das
out
push
movb
jbe
xor
sub
xchg
push
lahf
in
jmp
jnp
mov
mov
inc
das
mov
and
mov
pop
fsubp
mov
and
mov
mov
in
iret
je
mov
imul
add
popa
xor
out
dec
lods
jne
dec
inc
cmp
sahf
add
fdivrl
cmpsb
daa
mov
push
aas
mov
cmp
xor
xchg
test
dec
pop
cmpsl
daa
mov
pop
in
add
sub
pushf
mov
movl
or
insb
js
bound
nop
pop
jle
andl
test
and
mov
sti
xor
bound
mov
xchg
jle
mov
add
jnp
das
mov
pop
jge
test
jg
jg
mov
inc
or
or
int3
jbe
pop
test
xchg
fisubl
sbb
mul
add
dec
add
xor
cld
cmc
lock
sbb
mov
dec
fldcw
lahf
ror
test
or
std
je
outsb
fldl
cwtl
pop
mov
lret
cli
dec
in
and
outsb
xchg
loope
movsl
push
mov
push
dec
push
fisttps
das
lock
jl
mov
push
aas
mov
mov
add
sbb
loopne
das
xor
stc
lea
mov
inc
dec
std
dec
lret
add
xor
jle
jb
pop
push
aad
cli
idivb
adc
cmpsb
incl
sahf
sub
addl
dec
loope
add
mov
fisttpll
into
js
aaa
cld
daa
imul
cli
cmp
jb
and
push
repnz
mov
das
push
sbb
xlat
jbe
out
cmp
adc
enter
cwtl
nop
hlt
outsb
repnz
dec
test
xchg
dec
dec
incl
pop
mov
rorl
xchg
iret
jge
push
ljmp
scas
push
shld
scas
push
or
inc
sbb
dec
mov
stc
lea
push
pop
mov
ja
orb
adc
ja
xor
cmpsl
push
movb
mov
push
mov
inc
sub
imul
adc
es
mov
bound
inc
iret
jbe
mov
aad
cmp
push
gs
aam
leave
sub
lret
sub
enter
pop
nop
movsl
stos
pop
notb
add
dec
leave
movsl
cwtl
sbb
xor
adcl
push
mov
mov
dec
divl
cmpsl
push
imul
sarb
rorb
adc
and
dec
mov
sub
aam
and
and
les
mov
mov
jbe
mov
pop
out
dec
test
mov
mov
ror
outsb
and
push
cmp
incb
rorl
fldt
sbb
adc
and
sarl
adc
pop
jo
jmp
clc
sbb
test
inc
cmp
mov
dec
fistl
imul
mov
xor
xchg
sub
mov
pop
sbb
mov
xchg
jo
out
inc
aam
sub
arpl
out
push
inc
stc
xlat
cmp
popf
divl
sub
js
and
pop
pop
push
jo
mov
xchg
push
or
jnp
cmpsl
sbb
lods
pop
cld
imul
sahf
and
out
pop
enter
mov
inc
stc
jle
je
push
or
add
adc
maxps
js
xor
mov
mov
xchg
jmp
xchg
sbb
in
sub
mov
jne
xchg
add
cmpl
out
iret
out
dec
lods
in
in
ljmp
cld
mov
mov
cmp
or
out
ds
bound
add
cmp
xorl
jl
add
icebp
cli
scas
fisttpl
lret
add
in
push
mov
fiaddl
notb
ret
adc
xchg
stos
pop
lahf
loope
xor
mov
cld
cld
sahf
push
push
test
lods
mov
xor
cld
inc
sbb
mov
nop
and
fsubp
outsl
lea
mul
add
jl
pusha
or
pop
jo
sbbb
sub
idiv
sub
lods
adc
or
stos
push
pop
lods
sbb
insl
mov
shlb
sub
inc
or
fiadds
popf
mov
enter
int
mov
test
movsb
ljmp
or
roll
inc
xor
push
or
xor
loope
hlt
fcom
mov
ficoml
leave
stc
cmpb
popa
test
scas
dec
push
into
mov
xchg
repnz
push
jge
in
out
lret
shll
jmp
push
push
int
pushf
mov
mov
data16
mov
add
add
std
jl
add
cmp
imul
pop
cld
mov
dec
push
dec
mov
pop
lea
fmul
mov
pusha
cmpb
test
adc
test
pop
inc
lahf
shlb
mov
clc
nop
cmp
and
mov
repz
mov
out
xor
mov
adc
mov
adcl
fcmovnb
pop
cs
out
leave
out
sahf
sbb
xor
in
inc
jne
pop
jle
sbb
dec
sahf
push
out
lods
cs
out
mov
pop
decb
add
fisttpll
jne
ret
or
sub
jle
inc
and
iret
mov
in
xchg
fcoml
or
push
push
andb
paddusb
xchg
and
fsubl
loopne
jo
mov
lcall
jne
call
lret
inc
sub
mov
ja
xor
mov
aam
das
dec
push
mov
adc
add
mov
lock
mov
repz
pop
stos
xlat
stos
xor
mov
je
orl
and
jo
lret
pop
in
or
xor
mov
cmpsl
call
and
mov
fsubp
inc
push
sub
inc
sub
clc
sub
xchg
lret
idivl
xchg
inc
push
bound
mov
imul
popa
sti
insb
mov
aad
gs
push
and
loop
outsb
ret
xor
jb,pn
xchg
add
add
jbe
das
aad
test
stc
shrb
call
out
decl
shl
inc
sub
cmpsb
ret
mov
jae
jae
and
in
dec
lret
jae
insl
mov
pop
cmp
lods
inc
pop
js
mov
stc
mov
add
xchg
lcall
dec
dec
sbb
pop
cmp
xor
dec
or
enter
cmpsl
movsb
fldcw
test
rcl
lds
xchg
pop
jp
test
and
inc
rorl
fbld
int3
dec
xchg
ss
test
in
and
test
out
ss
ja
mov
sbb
sar
lods
arpl
mov
push
jne
sbb
call
xchg
adcb
fisttps
outsb
insb
ja
mov
pop
out
jl
and
mov
arpl
push
hlt
cld
notl
push
jbe
mov
mov
dec
std
insb
stos
and
push
fstps
out
cmp
jecxz
es
push
cltd
lds
in
nop
frstor
call
dec
inc
add
jbe
test
cld
and
testl
enter
fiadds
adc
mov
adc
or
push
arpl
adc
shrb
out
mov
jmp
xchg
aad
in
jecxz
mov
faddl
ret
icebp
sbb
mov
inc
mov
fsubr
pop
icebp
clc
repz
fists
cmp
daa
jno
lahf
out
out
push
xchg
cmp
sbb
jmp
pop
ret
out
sbb
add
add
loop
dec
mov
cmpl
nop
das
sbb
sti
in
dec
jmp
inc
aam
movsl
ss
sbb
das
inc
add
outsl
adc
inc
or
adc
xor
and
mov
popf
stc
sub
mov
das
mov
aas
ja
mov
dec
lret
add
pop
sub
add
xchg
aaa
push
xor
jnp
in
js
sub
sbbl
scas
xor
lahf
mov
cmpsb
jmp
data16
divb
sbb
icebp
cmp
mov
loopne
adc
into
decb
subl
fisttpl
push
arpl
pusha
mov
pop
pop
ja
or
lret
stos
pop
xor
pushf
out
stc
xor
xlat
cmp
push
ret
add
lds
push
xchg
sarb
cmp
insl
push
sub
or
in
or
das
or
inc
push
cmp
push
inc
sbb
inc
lods
out
ret
addl
in
jle
test
adc
scas
sahf
xchg
sbbb
dec
sbb
sbb
adc
fstpl
or
mov
ret
ja
and
loopne
into
jae
das
fsubr
jo
int
sahf
adc
in
test
or
stc
hlt
cli
mov
mov
or
stc
cld
pmuludq
in
add
loop
xchg
mov
movsb
xor
adc
outsb
movl
ss
sbb
dec
test
adc
sbb
popa
mov
inc
cmp
adc
jb
xor
mov
in
not
ret
jge
outsl
aas
sub
test
fsubrl
push
in
dec
jp
pop
mov
mov
sbb
rcrb
rclb
dec
mov
xchg
mov
data16
repz
pop
and
add
sahf
adc
lret
mov
xor
mov
lock
daa
outsb
je
push
xor
cmpsb
push
adc
mov
iret
insb
jmp
push
mov
jle
repz
pop
insl
pop
xchg
lahf
mov
insb
jne
push
pop
cwtl
mov
adc
fisttpll
ss
aas
jge
test
pop
pop
and
dec
dec
jmp
mov
inc
out
out
cmpb
pop
inc
insl
sahf
push
mov
sbb
mov
and
dec
sbb
aam
mov
loopne
xor
xor
or
jno
fildll
jne
je
pop
mov
add
jl
mov
mov
in
cmp
mov
sub
mov
pop
cmp
mov
cmp
scas
aad
aas
mov
pop
sbb
push
push
push
inc
add
aaa
push
addb
xlat
lds
mov
inc
cltd
and
lret
icebp
lret
add
or
pop
xor
push
into
cmp
and
imul
mov
adc
decb
pop
in
imul
adcl
mov
push
or
add
dec
dec
nop
adc
xor
mov
adc
jns
out
lds
and
cmp
les
enter
push
in
pusha
icebp
jo
pop
xchg
jge
inc
jmp
fisubs
loope
aad
sub
aas
and
push
call
dec
dec
and
pop
pop
xor
cltd
movsb
out
dec
fisubl
loope
negb
in
icebp
cmpb
aam
imull
xor
aaa
aas
out
aas
sbbl
pop
jle
inc
fbld
pop
xchg
mov
cmp
sub
cli
rolb
xchg
sbb
mov
dec
imul
loope
sbb
cmp
push
fldl
jbe
cmpsl
push
mov
cli
pushf
out
xor
into
int3
add
insl
and
inc
sahf
xor
jnp
loope
hlt
or
and
add
andl
fisttpll
outsl
cmp
push
cmp
sbb
stos
mov
push
or
sbb
push
hlt
xchg
jb
mov
pop
sbb
mov
jae
in
and
xchg
cmp
addr16
aaa
pop
push
sbb
mov
cld
call
out
fisttps
mov
insl
adc
sub
xor
or
sub
data16
cwtl
mov
push
mov
fsubs
mov
jns
sub
adc
dec
jae
insb
xchg
pop
sbb
add
and
call
pop
cs
xchg
into
dec
dec
std
dec
jle
jb
pop
icebp
jb
shrb
sbb
pop
in
gs
cmp
aas
or
out
sbb
cmp
mov
pop
xchg
sub
sahf
ror
subb
sbb
pop
les
lahf
adc
sbb
push
xor
dec
call
dec
inc
sbb
mov
dec
pop
mov
ret
mov
sbb
pop
sti
mov
jecxz
ja
icebp
andl
imul
shl
adc
cmpsb
inc
enter
dec
sub
cmpsl
jle
sub
pusha
push
nop
and
sub
xchg
fisubs
repnz
jo
fdivrl
ror
mov
sub
push
xchg
fs
inc
push
push
mov
es
mov
test
mov
jae
pop
inc
jbe
add
adc
dec
leave
insb
das
xchg
sbb
sbb
dec
insb
ss
pusha
push
xor
cmp
adc
lds
orl
dec
dec
lcall
lcall
or
cmc
xor
jle
repnz
loopne
jmp
mov
cmc
je
cmc
inc
sbb
outsb
dec
push
lcall
in
add
mov
testb
outsl
sti
and
cwtl
cld
sub
adc
mov
add
xchg
hlt
and
xlat
and
movsl
lcall
loope
js
addl
fwait
das
insl
ret
fists
aaa
pop
ret
hlt
fucom
add
adc
jg
xchg
daa
and
into
cmp
mov
lret
loope
sbb
daa
pop
movsb
jmp
loop
into
mov
lods
mov
mov
fwait
mov
aas
push
out
xchg
xchg
jbe
mov
cmp
fsts
cmp
into
mov
dec
inc
leave
icebp
fistps
dec
or
ja
fistl
ds
adc
fcomps
push
fstpl
mov
iret
pop
push
mov
ja
in
inc
xor
or
jmp
adc
je
fwait
rcrl
mov
mov
mov
sub
adcb
push
pop
mov
adc
ds
add
mov
and
fidivrs
call
pop
jno
in
enter
andb
adc
sti
add
test
ret
xor
mov
mov
push
icebp
mov
mov
clc
leave
fcomps
add
xorl
inc
bound
mov
pop
dec
clc
sub
or
cs
lock
sub
data16
cli
mov
pop
idivb
mov
or
test
enter
inc
inc
sbb
mov
cmp
mov
pop
mov
jmp
xchg
mov
in
popf
stos
mov
fsubp
into
aam
imul
stos
imul
xor
xor
xlat
mov
scas
ds
pop
cwtl
xchg
call
or
fnstsw
cmp
fsts
lds
mov
sahf
adc
adc
sbb
ficoms
shl
add
adc
push
sub
inc
fistps
push
mov
out
and
lahf
loope
mov
jecxz
push
pushf
lods
xchg
stc
mov
push
add
xchg
scas
mov
cli
cmp
adc
scas
pusha
sub
out
mov
xchg
ficompl
lods
sbb
mov
mov
cmpsb
mov
xorl
shll
jp
push
xor
dec
pop
xchg
je
jno
mov
pushf
add
dec
jle
popa
cmp
lock
dec
add
and
aaa
inc
jg,pt
inc
ja
sbb
xchg
mov
fwait
lock
aad
xor
mov
mov
dec
js
mov
push
sbb
dec
rol
sbb
outsb
xchg
sbb
dec
sbb
or
jae
in
xchg
shll
and
mov
cmpps
arpl
lds
xchg
sbb
mov
sbb
lret
scas
addb
leave
adc
push
pop
mov
pushf
xchg
xlat
pop
nop
cmpsl
and
ror
daa
in
cwtl
pop
sti
inc
inc
fsub
andl
pop
mov
out
aad
pop
mov
mov
mov
popl
dec
divl
nop
pop
xchg
mov
xor
shlb
mov
ja
pop
loope
das
ss
insl
leave
sbb
lcall
adc
pop
cmp
popa
out
inc
mov
push
or
cmp
ds
ljmp
xor
inc
bound
js
packuswb
push
dec
cmc
adc
mov
popa
pop
icebp
adc
inc
lds
dec
jmp
pop
push
cmp
cmpsl
mov
dec
sahf
lea
push
and
add
and
xchg
push
or
lds
lods
inc
inc
pop
insl
xor
jmp
fstl
or
insb
xchg
add
sarl
fwait
lcall
imul
inc
rorb
mov
les
fwait
sub
arpl
fmulp
or
push
lcall
mov
pop
test
psubsw
insl
and
call
fdivrs
test
iret
cld
lock
outsb
fcom
repnz
les
adc
inc
imul
shlb
push
mov
push
cltd
js
mov
lret
insl
dec
mov
and
test
arpl
lods
stos
and
add
pop
xor
sub
aad
push
mov
outsb
pop
data16
mov
dec
xor
sti
divl
cwtl
imul
movsl
adc
xor
jns
jecxz
inc
das
imul
stc
xor
ds
xor
inc
add
sbb
push
popl
nop
mov
pop
push
pop
je
outsl
cmc
mov
sub
ja
fcoml
mov
rcrb
inc
in
push
mov
and
ror
jne
dec
cmp
out
enter
outsl
fdivs
icebp
pop
mov
cmp
bound
pushf
das
test
inc
movsl
mov
inc
push
adc
xor
cwtl
mov
add
ficomps
or
pop
insb
mov
mov
int
and
add
ret
hlt
into
stos
in
push
es
loope
iret
xor
push
insb
mov
xchg
mov
and
sbb
jg
pop
cmp
or
daa
mov
or
sahf
jecxz
lods
insb
xchg
xchg
test
jmp
sbb
outsl
nop
fistl
push
adc
movsb
mov
pop
popa
lcall
push
mov
add
mov
sbb
inc
xlat
fistps
mov
pop
mov
mov
shll
adc
ljmp
cli
nop
xlat
mov
mov
mov
cs
jns
arpl
inc
or
or
stos
mov
shufps
sarb
xor
sarb
and
xor
je
and
dec
stc
pop
cmp
out
inc
fbld
jae
scas
mov
cmp
add
mov
push
mov
cmp
pusha
into
sub
cmp
lds
mov
xor
pop
adc
sub
cmp
std
mov
cmp
aaa
xchg
into
sti
cmpsb
gs
leave
sbb
lock
jge
sti
jnp
loopne
cwtl
lods
push
mov
push
cmp
aaa
outsl
sbb
mov
adc
mov
icebp
lea
adc
dec
mov
bound
pop
mov
cmpsb
inc
clc
jg
loopne
sbb
outsb
adc
jb
cli
sahf
or
movsb
add
mov
shll
notl
lods
and
inc
inc
push
loopne
push
push
jmp
cmc
ret
lock
inc
push
andl
xchg
dec
cmp
pop
stos
fiadds
mov
dec
push
pop
out
add
movsl
sub
xchg
xlat
cmp
cmpsb
jno
nopl
mov
adc
and
bnd
xchg
jnp
rorl
rorb
js
mov
pop
fstps
out
mov
pop
cmpsb
fs
lods
dec
push
pop
lea
mov
mov
jns
aam
cmp
imul
icebp
mov
ret
int
vmptrst
loope
sub
or
jnp
or
jb
pop
shlb
pusha
mov
jg
ficoml
sbb
sbb
push
icebp
or
xor
loop
aad
shll
scas
outsl
sub
faddl
pop
in
cmp
cmpsb
lock
jnp,pt
push
dec
mov
loop
dec
fwait
pop
jl
xchg
pop
pop
xchg
lcall
lds
sbb
movsl
cmp
test
incb
adc
and
outsb
cmp
jg
or
out
mov
in
stc
add
jbe
outsb
testb
iret
divl
hlt
cmp
clc
mov
or
pop
xlat
inc
dec
mov
pop
add
movsb
js
mov
cwtl
pop
push
jl
dec
or
xlat
aad
rorb
rcrb
dec
or
cmp
sbb
andb
test
gs
imul
int3
sahf
sbb
xchg
ss
mov
jecxz
xor
pop
lret
insl
adc
ds
dec
push
push
test
inc
notb
and
bound
icebp
xorl
mov
popa
add
ljmp
mov
or
mov
dec
lock
sbb
dec
outsb
push
outsb
pushf
ficoms
mov
fnstsw
movsl
sub
and
ret
outsl
daa
and
insl
cmp
pop
sub
push
jnp
lock
xchg
pop
jecxz
sbb
cmp
push
popf
aas
pop
dec
lock
push
mov
add
xor
mov
inc
dec
push
xchg
xor
cwtl
ret
push
inc
repz
icebp
test
or
mov
repnz
arpl
clc
fs
fimuls
or
scas
test
addr16
inc
and
mov
movsl
iret
xor
mov
les
and
and
ja
or
rol
frstor
jecxz
xchg
cmc
lret
xchg
nop
or
cmp
xchg
in
jmp
fdivp
fwait
dec
mov
sbb
xor
imul
push
pop
add
xchg
daa
mov
loope
pushf
lret
adc
sarb
push
aad
jo
add
cltd
mov
aas
das
xchg
jae
adc
cmpsb
das
push
lea
cmp
xchg
xchg
sbb
ds
imul
sub
nop
in
sahf
mov
add
add
dec
jae
into
loope
lds
pop
stos
nop
mov
adcb
fistl
and
mov
rcrb
mov
sbb
outsb
pop
ja
int3
mov
or
inc
mov
and
inc
pop
dec
add
cltd
mov
popf
inc
cli
mov
sbb
cmpl
invd
ret
inc
and
pop
push
xchg
sti
adc
push
jle
and
aam
test
in
not
pop
adc
xchg
xor
mov
in
cmpb
call
and
xchg
adc
inc
fdivr
cmpl
pop
pop
idivb
adc
mov
lds
jnp
stc
dec
data16
jnp
pop
cmc
arpl
jno
mov
push
aam
push
inc
fsub
ret
aam
nop
dec
pop
and
inc
jecxz
dec
cwtl
fisubrs
push
mov
mov
int
adc
xorb
int
pop
addb
cmovno
jbe
movsb
xlat
cmp
jmp
mov
push
fwait
repnz
mov
out
rolb
fcoms
jge
andb
xor
jecxz
lock
push
jb
sarl
or
stc
loope
xchg
or
pop
pop
mov
or
jl
push
xor
addl
out
in
ret
in
cmp
outsl
imul
imul
out
outsl
xor
ja
fstps
fsubr
loop
xchg
ficomps
jnp
and
dec
mov
sbb
test
xchg
add
adc
insb
mov
mov
pop
ret
das
outsl
adc
int3
das
shrb
aad
cmc
xor
or
jge
sbb
push
pop
mov
push
dec
es
aaa
xchg
shrb
nop
push
fsubrs
sub
pop
mov
sub
jp
mov
or
cmpsb
mov
idivb
xchg
push
add
rorl
ds
pop
adc
aaa
cmp
mov
imul
fistps
push
sub
negl
mov
inc
clc
mov
sahf
addr16
or
call
pop
hlt
or
pop
mov
mov
aas
jno
xchg
stc
repz
aaa
mov
cld
repz
xchg
sub
sub
cmp
sahf
mov
test
sbb
mov
and
jmp
mov
push
imul
loop
fwait
mov
mov
pop
test
sub
sub
test
push
imul
sar
mov
call
ret
imul
xorl
les
and
sarl
ds
int3
jo
sti
loope
push
push
ss
pop
arpl
or
jg
push
push
mov
aas
jne
adc
jg
incl
gs
and
jns
das
je
lods
movsb
mov
xchg
sti
cli
mov
push
aas
jecxz
arpl
ja
sub
mov
fdiv
cmp
xor
out
popl
pop
iret
lea
aam
mov
or
mov
pop
xchg
and
test
adc
jg
add
add
nop
jle
loop
dec
into
mov
cmp
imul
adc
insl
out
inc
ja,pt
jmp
stos
jno
jb
adc
clc
xlat
andb
imul
out
ljmp
and
aad
xchg
xor
addb
cmpsl
and
xchg
jbe
cmp
lock
int
jg
and
mov
hlt
enter
out
adcl
movb
push
cld
or
mov
mov
arpl
xor
pushf
sbb
test
lds
out
adc
inc
lods
arpl
je
pop
push
add
movsb
xchg
fs
fs
lea
cmpsb
out
jbe
ret
cmp
adc
rorl
xchg
mov
xchg
in
and
test
ret
jno
push
pop
rcr
sahf
inc
sub
adc
xchg
cmp
fists
dec
es
and
mov
cmp
bound
int3
dec
imul
jge
add
add
push
in
mov
jb
and
add
mov
out
mov
int3
test
jl
mov
sub
cmp
inc
aad
cltd
ret
stc
mov
mov
lds
and
popa
scas
lret
mov
mov
subl
inc
mov
or
add
int
loopne
es
testb
mov
jb
aad
scas
adc
adc
outsb
enter
cmovl
iret
fsubs
lret
loope
or
movsl
in
pusha
cwtl
lods
dec
push
sarb
pop
xor
jge
or
int
outsb
xchg
pop
inc
or
push
jmp
xchg
cli
adc
and
addr16
xchg
sbb
xor
jnp
sub
mov
xor
shlb
push
jmp
mov
adcb
sbb
aam
xchg
punpcklwd
in
add
mov
push
jle
std
lsl
in
jo
rcrb
movsl
mov
daa
xor
sahf
xor
xchg
cmp
popa
sbb
mov
rolb
cmp
cld
subb
xor
mov
xchg
mov
adcb
jbe
shrb
bound
popf
out
insl
push
shll
scas
cmp
sbb
or
fmull
inc
jge
mov
jle
xor
adc
cmc
int3
shlb
mov
ljmp
xchg
mov
sbb
jo
inc
mov
movsb
sbb
sahf
dec
jmp
movsl
jge
push
push
shlb
dec
mov
inc
adc
aad
outsb
pop
mov
jnp
into
sbb
insl
xchg
sbb
orb
inc
jg
insb
cmp
and
mov
ret
adc
insl
popa
jl
pushf
cmp
add
jno
les
sub
aaa
jle
sub
fimuls
dec
lret
cli
icebp
push
fdivs
add
lds
outsb
sub
xor
lea
cmc
cs
pusha
lret
mov
pop
mov
aam
cld
dec
jae
movsl
inc
loope
cmp
iret
mov
arpl
sub
les
shlb
ja
push
pop
mov
mov
scas
cli
pusha
xchg
sub
xchg
lods
push
mov
dec
sub
loopne
in
adc
cmp
fwait
mov
xor
aad
hlt
cmpsl
sbb
sub
add
rorl
addr16
push
je
ds
and
push
insb
mov
pop
das
xchg
je
jl
ret
daa
shr
shrl
add
lock
push
fwait
pop
and
insb
and
int3
popa
push
mov
jbe
xchg
mov
lods
cld
or
mov
add
dec
sub
mov
sub
std
xchg
mov
dec
mov
iret
aad
cmp
adc
negb
les
popf
xor
and
out
arpl
stos
sub
xchg
jp
push
ds
clc
int3
xchg
int3
test
push
sub
hlt
lcall
push
or
xor
mov
aas
sub
pop
or
repz
push
sbb
andl
mov
jno,pt
sub
mov
and
sub
cmp
lahf
mov
aad
pop
mov
stc
push
popa
popa
cmp
pushf
push
fstps
mov
lock
inc
adc
in
push
inc
jecxz
push
inc
imul
jbe
cld
loope
push
mov
inc
faddl
sarb
adc
in
pop
repnz
cmp
inc
mov
xor
or
push
test
mov
out
push
addr16
scas
pop
push
mov
mov
aad
fidivs
jp
ja
cld
fmull
addr16
xchg
inc
lret
out
pop
daa
rorb
jo
push
imul
cli
push
stos
imul
push
push
sbb
out
push
sbb
outsl
mov
insl
andl
rcrl
push
sub
ret
rorl
jle
sub
adc
pop
push
add
jbe
dec
shrb
dec
lock
stos
in
ss
pushf
xor
or
out
arpl
dec
in
pusha
mov
int
pop
add
xlat
lret
pop
dec
lods
jns
daa
pop
incb
xor
cmp
mov
pop
enter
push
sbb
xchg
dec
pop
loop
mov
pushf
arpl
shl
fwait
jge
pop
cmp
mov
sbb
shll
xchg
movsl
pushf
into
jecxz
xlat
dec
ret
lods
mov
mov
scas
dec
test
cmp
cli
ret
inc
xor
shl
fbld
pop
push
jmp
xor
sub
ja
jns
add
and
mov
cmp
leave
cmpsb
icebp
fnsave
xchg
or
mov
add
add
cmp
mov
and
sar
sti
xor
pop
aad
dec
js,pn
lahf
pop
mov
mov
pop
lcall
xor
cmp
aaa
pop
aas
gs
and
jae
loopne
xor
test
shrb
inc
mov
les
mov
push
lds
adc
inc
outsl
or
idivb
fcoms
mul
lea
fistps
scas
pop
les
fidivl
gs
mov
xor
je
ljmp
out
pop
or
fcoms
or
sbb
add
icebp
ds
sbb
mov
stc
xor
mov
add
and
mov
sahf
pop
std
cmp
mov
mov
and
stos
inc
xchg
dec
adc
inc
jge
sbb
mov
popa
movsl
jns
lock
mov
jmp
sarb
mov
mov
sbb
push
jne
lret
xchg
xlat
jo
inc
mov
gs
aad
aaa
loop
outsb
imul
inc
scas
xchg
movsl
enter
mov
imul
push
jecxz
ljmp
repz
imul
popa
mov
lock
test
in
push
inc
cmp
aaa
lds
jns
xlat
pop
pusha
addr16
pop
pushf
jnp
jnp
or
cmp
out
addb
test
mov
ja
test
test
test
or
jne
imul
idivl
imul
lods
insb
inc
push
popa
lea
sbb
cs
sub
xor
push
mov
jg
jbe
inc
fcoms
ds
repz
std
pop
jle
repnz
jge
and
into
cltd
out
dec
mov
adc
inc
pusha
ss
xor
mov
add
ja
mov
inc
mov
jmp
out
inc
xchg
fwait
popa
inc
cld
dec
addr16
mov
inc
fistps
xor
outsl
cmc
outsb
pop
dec
push
nop
ret
xor
cltd
adc
cmp
pop
or
fsubrl
pushf
repnz
or
leave
les
mov
cmpsl
call
nop
icebp
dec
lret
fstp
int
mov
dec
xchg
cmp
ret
stos
je
jne
or
fdivrl
int3
add
xor
std
iret
cld
shr
sbb
lcall
adc
enter
and
jbe,pn
inc
fnstsw
sub
popa
push
decb
dec
fdivrl
mov
test
push
inc
sahf
lock
lock
fwait
lea
xchg
xor
mov
and
add
shlb
push
mov
cltd
icebp
sbb
sti
fidivrl
notl
adc
jle
xor
pusha
dec
loopne
sbb
nop
jle
test
jns
inc
das
xor
out
mov
ds
mov
sbb
push
xchg
frstor
add
outsb
mov
pop
xchg
adc
or
subl
sub
jb
mov
lock
imul
jnp
jge
fldenv
ud1
cmp
xor
mov
dec
adc
dec
roll
adc
test
outsb
ficompl
shll
and
cld
or
cmp
call
jg
icebp
imul
mov
push
sbb
push
dec
mov
adc
rclb
cwtl
fucom
icebp
push
mov
hlt
stos
mov
push
mov
lods
inc
hlt
mov
dec
cmc
push
movsb
sahf
dec
fidivs
ds
je
mov
sahf
subb
jle
pop
mov
aad
sub
cmpsl
xor
rolb
mov
and
inc
inc
and
push
mov
jno
cli
int3
dec
inc
push
inc
and
xchg
js,pn
xor
nop
sub
inc
arpl
cld
fyl2x
int
idiv
mov
pop
jp
sahf
mov
mov
lods
mov
and
jne
leave
add
jbe
pop
jns
insl
sti
pop
mov
hlt
inc
sbb
lds
sbb
lock
inc
xchg
xor
enter
jae
aas
mov
mov
ljmp
fstps
cmp
mov
inc
cmpsl
int
jae
inc
push
jnp
addr16
cmp
test
pop
push
push
sarb
std
pop
testb
xchg
out
mov
cmc
or
mov
push
xor
mov
adc
test
test
jmp
mov
push
push
push
and
xor
mov
add
ja
push
mov
jno
mov
lahf
or
lods
mov
shrl
es
repz
xlat
mov
les
and
and
je
into
repnz
bound
adc
dec
xchg
mov
movsl
pusha
mov
jle
dec
imul
jns
dec
adc
orb
push
fbstp
cli
ja
xchg
push
enter
or
inc
mov
leave
mov
fldenv
rol
dec
dec
jecxz
mov
fisubl
pop
lcall
cmpsl
hlt
xor
cmp
inc
das
sti
stc
sbbl
mov
xchg
loopne
mov
lret
add
in
fnstsw
into
add
push
scas
orb
je
jno
fisttpl
cmc
ret
cmp
lods
stos
dec
fwait
mov
pop
shll
pop
lcall
loope
and
jmp
enter
dec
jnp
adc
mov
inc
imul
insl
push
jb
test
jecxz,pt
ss
imulb
sti
mov
arpl
test
push
pop
xchg
cmpsl
inc
inc
ljmp
jg
adc
push
addb
lods
sbb
push
push
frstor
addr16
lcall
adc
xchg
pop
mov
clc
mov
pop
mov
sub
in
jnp
pavgb
mov
cmp
xlat
inc
test
xchg
inc
jbe
inc
addb
jbe
mov
add
sbb
push
inc
leave
mov
or
xchg
fiaddl
xor
adc
and
lds
pop
xchg
ja
ror
or
push
aam
add
ja
in
movsb
inc
jle
aad
xchg
or
xor
loop
incl
stc
outsl
inc
pop
sbb
cmpsl
test
mov
jp
psrld
inc
or
cmp
xor
mov
cmpsl
dec
addr16
lret
pop
push
or
or
or
std
and
mov
iret
lods
loop,pn
sub
mov
call
mov
ror
rcrb
inc
jo
pop
inc
jp
popf
ja
sub
in
in
mov
inc
cmp
jno
fcmove
test
ja
scas
repnz
out
or
movsb
mov
ficompl
cmp
jno
sbb
stos
jne
cltd
out
ds
outsb
divb
xchg
lds
loopne
or
icebp
mov
pop
adc
fucomi
fisttpl
mov
loope
loope
mov
scas
jmp
negl
inc
cmp
add
aam
mov
in
adc
add
out
inc
imul
repnz
push
sbb
mulb
pop
popa
sub
shrb
adc
lods
cmp
enter
loopne
call
mov
stos
adc
pusha
in
mov
jne
test
add
sbb
ds
in
cltd
lret
jp
out
mov
stc
push
and
div
mov
pop
nop
test
fs
stos
cli
scas
movsb
shll
leave
sarl
push
iret
adc
push
lret
mov
mov
addl
jnp
les
mov
pushf
inc
arpl
pop
loopne
int
push
or
inc
pop
imul
or
lret
daa
stc
fstps
xchg
icebp
sub
fs
cmp
sub
mov
cld
inc
jle
xchg
jo
add
repz
mov
mov
in
roll
ret
mov
jae
mov
jbe
mov
sub
loope
jle
xchg
dec
xchg
xor
mov
or
lds
mov
faddl
mov
or
mov
dec
das
dec
shll
int
addr16
loop
and
mov
mov
lret
adc
mov
ret
ficoml
into
aaa
push
mov
scas
mov
cmp
cld
lods
and
btr
jne
scas
xchg
nop
or
xlat
call
sarb
out
decb
and
pop
xlat
mov
xchg
les
sub
movsb
mov
pop
jle
cltd
inc
add
xchg
sbb
lahf
or
mov
jg
scas
in
fisttpl
mov
inc
fldcw
shrl
mov
cs
mov
push
and
xchg
push
aad
pop
add
xor
push
or
cmp
mov
xchg
ds
imul
mov
xor
add
xor
icebp
das
gs
repz
pusha
mov
cmp
dec
mov
pop
daa
mov
jne
fs
mov
mov
jecxz
lods
sub
push
mov
jns
ret
mov
pop
mov
pop
or
add
lods
mov
fwait
push
out
or
pop
jle
pop
into
scas
or
jg
push
jno
mov
push
dec
sbb
xchg
insl
inc
mov
sbbb
sub
adc
and
cmp
fmull
cmp
mov
sbb
idiv
int3
and
and
mov
cli
sub
stc
dec
inc
sbb
cmp
bound
test
or
das
adc
js
mov
cld
push
lret
das
cmp
stos
xor
dec
or
dec
mov
pop
fldenv
aas
xor
adc
ds
xchg
inc
inc
jbe
ds
out
mov
pop
daa
adc
pushf
pop
mov
aad
out
xor
mov
int
shlb
cli
cs
sbb
jb
loope
sub
cmp
push
addr16
stos
inc
mov
xor
js
sbb
dec
sub
aaa
cmpsb
arpl
imul
mov
jmp
data16
push
pop
cmc
add
mov
js
stos
arpl
lea
pop
iret
xchg
and
lret
jbe
stos
mov
stos
or
test
cmc
pop
cmp
or
enter
dec
xchg
iret
mov
mov
lods
mov
scas
das
inc
mov
mov
sub
frstor
cmp
fs
shl
mov
adc
imul
leave
jecxz
dec
add
cld
mov
dec
call
xor
imul
pushf
jns
mov
push
in
xor
arpl
inc
leave
pop
sbb
lea
es
arpl
stc
push
sti
add
and
dec
adc
cmp
shlb
test
fadd
sbb
cmp
mov
test
adc
ja
lret
sbb
sbbb
cmp
xor
dec
sahf
mov
cwtl
jne
cmp
cltd
pop
sub
lahf
dec
pop
pop
cmp
xchg
stos
push
pop
out
mov
int3
cmp
jmp
addr16
clc
iret
xchg
pushf
mov
mov
xor
sti
je
test
pop
jo
cmpsb
jge
lock
or
dec
jae
pop
mov
pop
aad
out
jbe
sub
insl
repz
xchg
btc
aad
mulb
fiaddl
movl
push
rcll
outsl
mov
bound
mov
insb
out
xor
lret
insb
add
dec
cmp
aaa
adc
jle
pop
add
or
ss
mov
movsb
push
aaa
outsl
stc
dec
xor
jae
jg
xor
add
xorb
ror
inc
shl
dec
pop
adc
push
lock
adc
pop
cmpsl
fwait
sahf
in
jl
adcl
push
mov
fisubrl
sahf
sub
in
data16
mov
jne
cmp
dec
cmp
mov
loop
adc
xlat
hlt
daa
push
jb
lahf
andb
mov
popa
jle
mov
cwtl
ja
pop
cli
sbb
jmp
xchg
in
mov
ja
fcoml
notb
pusha
flds
mov
sub
mov
mov
int
inc
or
mov
pushf
dec
push
into
jno
cld
xor
sub
mov
add
mov
sub
mov
das
scas
aad
push
xor
xorl
and
imul
and
daa
fcoms
mov
in
xchg
adc
lods
daa
mov
movb
shlb
int3
sub
xor
mov
mov
xchg
mov
sbb
jmp
cmp
mov
or
or
dec
leave
shld
cmpsl
lahf
mov
not
cli
loopne
or
outsb
cmp
into
add
jl
mov
cltd
mov
pop
and
stc
das
in
push
cmp
add
xchg
lahf
xlat
test
mov
roll
jge
roll
int3
fdivp
cli
cwtl
xchg
aad
daa
pop
jle
scas
shll
pop
xchg
pop
mov
popa
lret
and
push
pop
cmp
or
dec
les
and
sub
pop
xchg
sub
xchg
clc
stos
cltd
clc
daa
std
mov
and
into
pop
test
faddl
jne
fdivrl
pop
lds
incl
subl
cld
scas
xor
or
mov
popf
dec
pop
adc
lahf
pop
add
adc
or
jg
out
test
and
dec
xchg
sbb
in
mov
cmp
jg
push
mov
xor
fldl
mov
xorl
mov
fnsave
insl
ret
ret
push
pusha
push
and
fwait
aaa
aam
sbb
popf
jge
adc
orl
add
addr16
adc
std
jecxz
dec
mov
mov
ja
in
div
js
adc
or
and
popf
data16
inc
xor
std
pop
repnz
xchg
sub
mov
pop
push
sbb
gs
stc
pop
je
push
sbb
add
adc
mov
test
rcrb
jp
or
outsl
lea
add
loop
sahf
push
mov
out
mov
sbb
push
les
mov
gs
jecxz
pop
push
shll
adc
cmpsb
in
xor
xadd
mov
cwtl
outsb
mov
pop
lahf
jbe
push
mov
sbb
cmpsl
incl
aas
cmp
jl
inc
mov
sub
in
jbe
rorl
push
das
test
les
adc
add
xchg
push
sahf
imull
in
dec
imul
and
dec
cmpsl
adc
or
int3
jo
push
fdivs
pop
shl
xor
mov
sarb
adc
jp
adc
lea
mov
and
push
movl
mov
fisubrs
mov
lcall
mov
jp
in
sbb
pop
lea
jns
jmp
pop
pusha
stos
cmp
loope
sub
ljmp
dec
mov
push
push
addb
pop
orl
imul
xlat
xor
ret
stc
sbb
test
jp
lahf
shll
js
jb
push
into
insl
pop
inc
pop
push
jnp
mov
movsl
lods
mov
pop
arpl
pop
xor
and
push
lret
fstpl
mov
and
pusha
es
inc
mov
test
out
mov
pop
std
arpl
and
mov
dec
push
xchg
test
xchg
inc
and
cmp
fwait
add
inc
mov
in
hlt
jle
clc
push
insb
xchg
out
push
xor
loop
pushf
std
cmp
out
scas
and
call
xchg
xlat
pusha
cmp
push
mov
lret
iret
adc
or
adc
cs
mov
xchg
sub
xchg
lahf
add
jmp
rorb
xor
mov
loope
scas
imul
or
sti
dec
jg
inc
sub
cmc
loopne
fs
pop
adc
push
xorb
mov
xchg
js
sbb
mov
jecxz
push
cmp
outsb
fisttpl
bound
mov
mov
cmpl
jle
xor
xchg
pop
adc
jb
mov
pop
and
xor
cmpsl
mov
lcall
addb
std
stc
out
push
sahf
push
mov
sbb
push
jmp
and
push
inc
inc
sub
ds
or
pop
push
adcb
rcrb
pop
mov
inc
stc
push
sub
mov
fxch
adc
cmc
orb
mov
outsb
ficoms
sbb
pop
pushf
cmc
std
daa
aaa
fdivl
loopne
sub
adc
call
xlat
lea
add
mov
outsl
imul
mov
repnz
loope
mov
or
jge
loop
mov
fstpl
add
scas
adc
fstp
jae
push
cmc
xchg
jg
arpl
in
nop
inc
aam
or
div
cmp
mov
push
out
or
push
push
sbb
sbb
out
dec
popl
cld
and
pop
push
les
push
push
add
pop
push
loope
sbb
sub
xchg
movsb
add
test
mov
mov
in
dec
pop
nop
inc
cld
cs
lock
stos
adc
jns
sbb
repnz
sbb
pop
pop
call
dec
out
dec
xchg
add
dec
lock
dec
mov
add
pop
idivl
emms
xor
sbb
adc
faddl
out
in
jg
int3
add
popf
and
aam
mov
mov
in
add
shrb
xlat
outsb
movsb
rorb
ss
out
into
pop
xchg
or
adc
push
mov
lock
ljmp
xchg
mov
add
insl
push
cs
mov
pop
pop
sub
jae
test
sub
dec
xchg
dec
cmp
add
adc
xchg
nop
xchg
out
sub
shll
cli
lret
pop
lods
pushl
inc
into
pop
ss
sti
jnp
shlb
hlt
cmp
cmc
fcomps
mov
rclb
nop
roll
xchg
stos
mov
cmc
cwtl
adc
fldt
andl
testl
mov
xor
mov
mov
mov
in
dec
mov
pop
jns
insl
in
lock
test
fisubs
sbb
adc
cltd
ss
bnd
ret
xorb
repnz
fmulp
enter
pop
or
std
lods
push
push
and
or
push
and
push
cwtl
add
pusha
mov
sbb
pop
push
jmp
cmc
cld
sbb
popa
jb
stos
imul
cmp
mov
mov
jmp
mov
inc
xor
lds
pcmpeqw
push
pop
adc
out
movl
sub
fsubrp
mov
sahf
jnp
push
daa
push
outsl
or
btc
cmp
mov
testl
call
daa
pop
push
cmp
pop
stc
out
and
mov
cmpsb
push
fs
adc
ret
jns
push
fnsave
imul
push
xorl
je,pt
frstor
je
repnz
movsl
sub
mov
xlat
jo
mov
fisubs
jo
bound
push
orl
test
aas
xor
sbb
cmpsb
dec
and
pop
shrl
push
mov
pop
fs
rcrl
push
mov
sbb
mov
jge
push
sbb
outsl
sub
xchg
stc
test
jno
arpl
and
mov
pop
push
lds
pop
pop
inc
pop
daa
call
and
and
je
es
jl
scas
sbb
pop
ljmp
fld
xchg
scas
les
cmp
push
inc
mov
dec
aaa
test
test
decb
xor
lods
in
rclb
divb
leave
jecxz
jl
repnz
imul
movsl
mov
sub
popf
fsub
ret
push
je
dec
adc
fwait
and
dec
pusha
push
fldenv
ss
pop
mov
fnstcw
mov
adc
ret
ror
arpl
imul
cmp
xor
cmp
shll
scas
or
int3
xchg
mov
out
push
adc
lret
push
mov
in
je
ret
jge
sub
xchg
mov
mov
add
and
sub
push
push
jg
add
fdiv
jmp
push
ror
pop
push
cld
mov
and
mov
movsb
cs
mov
dec
pop
test
and
inc
dec
out
lcall
lahf
sub
inc
xchg
xor
outsl
cs
fcompl
popa
push
or
cmp
sub
jo
enter
adc
adc
dec
mov
pushf
and
inc
xchg
adc
cltd
add
and
divl
cmp
jle
push
push
dec
sbb
jbe
icebp
dec
les
pop
ljmp
popa
clc
gs
pushf
mov
xchg
lods
aas
int
rol
lock
shl
push
aam
int
xchg
insl
arpl
inc
push
mov
in
push
andb
add
insl
pop
add
and
outsl
fsubrl
inc
dec
mov
sub
mov
dec
cmp
mov
mov
jae
xchg
arpl
insb
mov
shll
das
lahf
adc
mov
dec
and
adc
imul
xchg
mov
insl
or
xor
xchg
scas
scas
outsb
inc
xchg
push
mov
gs
mov
test
cmp
mov
mov
inc
ljmp
outsb
pusha
xchg
xchg
cmpsl
andb
movsl
cmp
daa
aaa
push
xorb
mov
push
cmp
aam
int
mov
andb
mov
xchg
dec
nop
arpl
xchg
push
cmp
lods
push
movsl
repnz
aas
dec
sub
ja
push
and
xchg
lock
xchg
test
sub
cld
dec
dec
je
jno
mov
push
pop
lret
hlt
popa
popf
insb
cli
xchg
popa
lret
lahf
popf
nop
push
test
movsl
lods
addr16
bnd
jmp
inc
insl
ss
je
ret
ficoml
push
stos
in
mov
cmpsl
fnstsw
push
xchg
push
repz
and
in
arpl
adc
push
addr16
inc
fsubrs
mov
and
lret
lret
cs
lsl
lahf
xor
inc
aam
mov
repz
and
ljmp
pop
das
mov
and
or
push
xor
ss
icebp
cmpl
shl
arpl
mov
subb
mov
push
jle
mov
pop
push
jg
push
je
jbe
mov
add
dec
outsb
mov
pop
aam
xorb
and
lea
mov
int
or
test
loope
andl
jp
in
hlt
fbstp
je
in
inc
mov
test
ss
mov
mov
inc
lahf
jp
xor
daa
dec
jno
fistpll
aam
imul
test
xlat
xchg
out
inc
loope
fadds
dec
pop
neg
into
dec
inc
lcall
repnz
and
test
shrb
cli
sub
insb
cmp
mov
adc
sub
add
mov
inc
pop
outsb
jb
nop
imulb
xlat
sbb
jno
ret
mov
dec
mov
pop
xchg
lods
loop
dec
xor
sub
adc
or
fisubl
dec
dec
sbb
push
fstpt
sub
pop
mov
aam
xchg
jb
pop
jb
repz
sub
test
lahf
xchg
push
std
fistpll
xor
jle
pop
cmp
aas
fsubr
sub
jg
pop
rcl
fisttpl
sub
out
pop
pop
or
xchg
sbbb
divb
jo
push
gs
mov
and
outsl
adc
gs
push
mov
scas
mov
jne
inc
adc
into
pop
pop
adcl
icebp
add
mov
xchg
pop
addb
mov
fwait
iret
fisubs
inc
ljmp
sub
out
cmp
cmp
inc
ds
mov
in
data16
rolb
stos
shll
sub
cmp
xor
repnz
cmp
ret
pop
jmp
into
adc
inc
rclb
xlat
fcoml
test
mov
add
mov
iret
sbb
aaa
lea
stos
adc
imul
inc
mov
lret
jmp
jnp
out
or
std
out
add
xchg
test
cmc
popl
sub
mov
or
and
lods
repnz
lret
or
movsl
sbb
pop
mov
sbb
xchg
xchg
push
test
and
cld
xchg
sbb
adc
adc
js
rcrb
in
jns
cmp
jne
stos
jnp
out
stc
mov
mov
jne
lds
pop
je
pushf
cmc
pop
add
arpl
inc
mov
fdiv
int3
pop
mov
js
add
or
mov
push
in
cmp
mov
add
mov
jne
sub
xchg
ja
arpl
imul
adc
push
add
pop
je
repnz
addr16
movsb
xor
jle
sub
inc
ss
outsl
sbbb
xchg
scas
aad
sbb
call
imull
insb
lret
add
repnz
jbe
shlb
daa
das
xor
sub
inc
ljmp
xchg
stc
out
je
insl
xchg
and
fstps
sbb
sti
lret
mov
outsb
mov
dec
dec
mov
fdivrl
inc
aad
and
imul
pop
mov
dec
push
mov
jnp
loope
movsb
inc
int3
lcall
lcall
pusha
test
movsb
inc
add
popa
push
push
ds
into
xor
jns
pop
mov
dec
push
shlb
mov
jle
scas
lds
imul
gs
add
cli
or
cmpsb
add
xor
fs
daa
push
addr16
xor
shrb
cs
ds
repz
mov
inc
es
sbb
sbb
fldt
xor
xor
inc
adc
jl
add
dec
jo
test
js
sub
mov
jecxz
nop
add
cmp
pop
insb
les
les
add
pop
push
aam
cmc
push
outsb
inc
push
cmp
mov
dec
ret
or
out
loope
into
dec
inc
push
rorb
rcrb
out
dec
jg
push
icebp
mov
lcall
dec
fdivs
iret
aad
out
inc
scas
mov
shlb
push
mov
lods
rcrb
ficomps
iret
aaa
div
out
jmp
inc
inc
lods
adc
xchg
insb
das
push
jb
dec
mul
jns
lret
mov
and
cmp
xchg
incl
jnp
scas
cmp
push
xchg
xor
sbb
mov
cmpsb
sarb
cmp
pushf
clc
or
ret
adc
sbb
mov
test
data16
dec
adc
sbb
sub
xor
jmp
pop
xchg
jg
sbb
push
stos
lods
je
fidivl
nop
ds
jbe
push
out
cmpsl
xchg
and
hlt
jmp
and
incl
sub
mov
sbb
push
adc
xor
je
lods
pop
pusha
sbb
cmp
test
lock
shll
hlt
ljmp
loopne
sub
out
cmp
insb
inc
js
and
in
mov
mov
inc
add
push
push
popa
aaa
je
xchg
push
cmpsl
inc
stos
mov
jbe
subl
sub
shl
xor
jbe
pop
ljmp
inc
adc
dec
nop
cs
push
scas
popa
mov
and
dec
bound
push
scas
xchg
rcl
mov
inc
sub
jbe
sbb
push
ss
xchg
and
xlat
mov
fimuls
imul
ss
cmp
rorb
decl
mov
incb
pop
dec
rcrl
pop
jnp
int3
or
popa
pusha
test
imul
lret
pop
aas
xchg
sbb
sbb
xor
push
mov
xchg
sahf
mov
add
or
orb
mov
sub
mov
mov
jae
insb
xchg
into
jle
mov
inc
jecxz
push
clc
test
outsl
sub
int3
jl
dec
sbb
in
and
xlat
add
add
dec
adc
inc
imul
xor
cmc
pop
outsl
test
mov
cmp
and
fcmovnb
sbb
ss
iret
add
xchg
rorb
dec
push
adc
popa
jg
clc
outsb
mov
inc
pop
mov
arpl
stos
or
nop
mov
lret
xchg
xlat
mov
sbb
adc
xchg
out
ljmp
xchg
icebp
cltd
mov
cltd
mov
jecxz
jl
call
neg
sub
in
sti
int3
pop
sbb
and
rcrb
loop
xchg
lret
xchg
adcb
mov
xchg
addr16
sbb
mov
inc
xchg
adc
mov
xchg
or
jmp
xchg
pop
in
mov
pop
mov
jae
dec
in
fcompl
aad
testl
sti
sbb
xor
mov
mov
out
add
movsl
inc
pop
jp
cmp
fiadds
fcmove
add
sbb
in
push
sar
cmp
insb
dec
push
xlat
aam
mov
mov
test
push
xchg
mov
adc
lods
je
jo
push
inc
jmp
xor
cld
dec
dec
adcl
mov
addr16
sbbl
movsb
mov
xor
ret
in
andl
daa
mov
outsl
mov
xchg
mov
jb
xor
xchg
sub
into
xor
outsl
stc
sbb
out
dec
sbb
loopne
adc
clc
pop
cmp
dec
adc
adc
adc
jns
xorb
shrl
pop
popf
enter
jl
or
sbb
jge
pop
ret
les
mov
xchg
jbe
outsl
hlt
mov
int
mov
or
popf
xchg
scas
popf
sbb
mov
push
adc
sbb
jbe
mov
jge
into
mov
aad
jns
test
cli
push
mov
daa
addl
bound
cli
mov
push
test
lahf
imul
test
cmp
call
xlat
fsubrl
jnp
int3
shrl
xlat
jp
jnp
enter
mov
jge
cli
sub
and
addr16
movsl
mov
sbb
pop
lods
cs
stos
jnp
inc
sub
jb
mov
jae
test
inc
in
cmp
sahf
lret
jo
dec
inc
outsb
and
xor
add
mov
push
leave
mov
xor
cmp
xor
or
js
sahf
push
push
negl
in
sbb
cmpsb
mov
movntq
out
fwait
in
sbbb
test
or
sahf
lods
nop
jl
mov
mov
enter
jae
sti
fstpl
inc
into
test
push
jnp
scas
rcrl
sub
mov
jne
aam
dec
xchg
jl
js
xchg
jp
mov
inc
xor
mov
scas
popa
xlat
hlt
and
in
cmp
out
inc
pop
mov
push
inc
cmp
subb
movl
bound
movsl
cmp
sub
and
xchg
mov
pop
daa
pop
push
out
insl
mull
jg
pop
sub
cwtl
stos
sbb
add
and
imul
outsb
ror
cld
les
push
xchg
push
or
jae
add
or
mov
xor
mov
push
inc
sub
std
adc
dec
jne
in
imul
sahf
ljmp
lea
outsb
jno
fists
loop
jle
lret
adcl
jg
fsts
xchg
popf
scas
sbb
in
shll
push
ret
movsb
in
je
lods
je
and
mov
in
inc
jg
mov
xchg
mov
add
mov
fsub
jb,pt
lret
dec
xchg
mov
inc
lcall
movsb
xchg
rorb
xlat
mov
movsb
call
lea
push
popa
out
imul
and
dec
aaa
lea
aad
insl
popa
jbe
out
test
test
sbb
xor
xchg
xchg
mov
test
fists
pop
push
dec
push
jge
add
test
pop
add
cmp
cmp
stos
jnp
test
jno
xchg
mov
sbb
test
xchg
xor
fcomip
leave
mov
loop
lea
pop
xchg
sub
sub
dec
out
aam
in
lock
mov
xchg
jae
push
fsub
pop
stos
add
loopne
sbb
lods
fld1
mov
inc
push
fisttps
jnp
pop
lods
hlt
cmp
add
subl
pop
out
sub
mov
insl
cld
pop
inc
inc
adc
push
xchg
pop
aam
mov
arpl
pop
mov
and
dec
lcall
or
push
mov
in
mov
test
and
xchg
outsl
mov
and
mov
and
sti
jl
mov
mov
jge
fmul
add
xchg
mov
nop
clc
or
jle
popf
sbb
addr16
aas
add
inc
xchg
leave
push
out
jmp
mov
stos
cmpsb
daa
dec
imull
int3
lcall
xor
jmp
aaa
test
repz
mov
cs
lcall
and
sbb
cmp
inc
sbbl
mov
stos
jnp
sub
jb
cmp
mov
xchg
inc
push
and
outsb
jle
ss
dec
int3
xor
popa
out
and
add
call
mov
sub
cmp
clc
pop
xor
add
pop
sub
les
mov
sbb
notb
dec
ficoml
inc
jnp
leave
je
test
addr16
mov
popa
lds
push
ljmp
jb
loop
push
cmc
add
jg
stc
cmpl
in
mov
test
or
je
fldt
je
mov
sub
push
xchg
jb
and
push
imul
lahf
ret
jle
ljmp
dec
cmp
mov
aam
push
leave
add
imul
dec
shufps
mov
ret
lods
xchg
mov
jno
les
movsl
mov
les
fsubs
mov
shlb
test
aad
jne
gs
dec
xlat
sbb
jmp
mov
popf
divl
lahf
jle
mov
shrb
cmp
pop
test
xchg
sub
inc
cmp
push
adc
inc
inc
or
xchg
stos
add
dec
lret
shll
xchg
sar
data16
fldcw
push
xchg
pop
adc
scas
push
fistps
or
lock
loope
aad
jae
loope
decl
add
stos
je
in
mov
sbb
adc
dec
sbb
popf
sub
mov
iret
jns
test
js
pop
arpl
mov
rorl
pop
xor
push
gs
sbb
or
xor
lcall
nop
or
popf
rcrl
mov
repz
cmpsb
push
adc
pushf
je
out
jo
cld
rcrb
mov
cmp
int3
sbb
push
or
sbb
cmp
cld
fldl
sbb
add
inc
cmp
adc
scas
add
call
sbb
loopne
dec
inc
push
es
push
xchg
or
test
dec
ret
psrld
rcrl
cmp
push
in
or
mov
lods
jne
push
add
pop
loope
inc
inc
adc
sahf
jl
in
sahf
xchg
adc
cmp
push
jne
mull
jg
int
cmp
sbb
pop
jnp
adc
das
or
and
push
dec
add
lock
push
int
fistps
cmp
jno
insl
pop
out
adc
into
call
pop
lea
mov
nop
loope,pt
sub
and
stos
iret
jae
imul
and
andl
das
psrld
sahf
ss
push
ficoms
mov
stc
ret
push
mov
dec
adc
repz
stos
pushf
subb
push
dec
in
dec
mov
pop
jno
push
xor
push
loopne
adc
movsb
xchg
pop
pop
sbb
add
loope
mov
stos
mov
mov
sub
loopne
push
test
pop
in
jae
and
cmpl
stos
mov
loop
sbb
inc
out
out
mov
cmp
jo
and
jb
mov
insl
jecxz
cmc
xor
subl
jo
jmp
bound
xchg
push
inc
adc
outsl
inc
pop
int
jmp
cmp
dec
inc
push
inc
mov
lret
scas
cmp
fnsave
xlat
sahf
mov
sub
xchg
lahf
jno
scas
xor
pop
add
mov
cltd
fnstenv
dec
jne
mov
repz
and
xchg
mov
insl
js
loop
imull
mov
and
push
sti
jne
lahf
sub
or
xor
pop
inc
xchg
cmp
mov
push
and
bound
add
mov
cmp
push
jbe
mov
mov
xor
cmc
add
sub
push
mov
mov
mov
xlat
int
insl
sbbb
pop
jmp
jl
pop
ret
mov
cmp
adc
mov
fs
xchg
shrl
push
fbstp
imul
pop
orb
mov
movntq
insb
fsubs
int3
enter
mov
cmp
inc
cmp
arpl
int
arpl
sbb
jns
bound
inc
loopne
xor
jmp
push
mov
push
adcb
in
xorl
into
xor
test
pop
inc
add
mov
in
call
inc
jne
jb
cmc
in
addl
sti
js
mov
mov
fistl
xchg
ret
mov
js
stos
fbld
xor
sub
or
pushf
lods
mov
pop
stos
xchg
sbb
sti
xchg
cmp
mov
mov
shll
push
lds
outsl
ficompl
push
inc
mov
adc
inc
pop
in
jb
adc
dec
jg
mov
dec
inc
out
dec
and
in
cmp
sub
mov
cmp
imull
popf
iret
pop
pusha
lods
pop
testl
jbe
sbb
sbb
inc
xchg
mov
sub
imul
ret
sub
repz
and
or
add
insb
cld
sbb
mov
shll
xchg
sbb
pop
sbb
imul
sbb
out
push
mov
lret
bound
pop
loop
xor
cli
mov
pop
adc
inc
andl
mov
jl
xlat
push
das
push
icebp
push
dec
fcomps
jecxz
shrl
sarb
dec
ljmp
fsub
pop
inc
adc
or
in
mov
aas
adc
rcl
push
ss
sti
jle
xor
mov
xchg
scas
insb
aam
inc
xchg
shlb
call
inc
lock
pop
rcll
mov
lar
scas
push
sbb
dec
sti
adc
add
dec
dec
push
dec
adc
sbb
pop
outsl
loopne
mov
popa
jg
add
fadds
pop
xor
or
lock
fistpll
je
mov
int
mov
or
popa
stc
fbld
movsl
fwait
imul
xor
pop
out
in
jo
cmp
sub
mov
pop
push
lock
xlat
sbb
in
xchg
push
cld
xchg
mov
cmpsb
add
add
push
ljmp
mov
in
add
movsb
push
rclw
js
jecxz
cmp
aas
movsl
pop
negl
fildll
andl
loop
jg
and
icebp
repz
imul
call
or
push
inc
mov
shlb
dec
fnstenv
and
sub
pop
fstpl
mov
test
lods
add
push
and
mov
inc
loop
mov
mov
mov
inc
push
leave
fisttps
xchg
add
cmpsb
or
mov
cwtl
dec
jl
xor
sahf
js
xchg
jnp
and
mov
pop
jl
mov
ret
jl
arpl
mov
push
out
or
das
sar
aas
jp
inc
cmc
lret
mov
out
xor
inc
and
leave
adcb
in
add
mov
dec
out
or
out
pop
xchg
test
dec
mov
cmpb
arpl
mov
adc
fistl
jg
sarl
mov
scas
sub
dec
dec
add
loope
cmpsb
add
fwait
add
sarb
gs
addl
in
cmpsl
xor
sbb
fmuls
imul
pusha
dec
push
push
cs
xchg
or
gs
jmp
imul
mov
fwait
xor
xor
dec
sbb
or
filds
fwait
fs
fwait
loopne
int
xchg
repz
adc
pop
and
jno
xchg
inc
push
mov
cmp
cltd
mov
mov
adc
xchg
inc
jns
insb
aaa
ds
or
pop
addr16
jl
popf
mov
lcall
bound
out
pop
inc
cmp
sti
fildl
jae
imul
cmp
or
inc
jne
mov
sbb
test
adc
xchg
adc
mov
xor
push
test
out
sub
pop
mov
movsb
pop
and
inc
in
jae
imul
in
ret
add
mov
stc
insb
in
mov
sub
testb
addr16
or
cmc
mul
dec
les
loope
jne
loopne
cmp
cmc
fwait
cmc
movsb
and
icebp
jmp
sti
adc
pop
sbb
dec
dec
fmull
and
cmp
or
cltd
xor
cmp
mov
bound
rcrb
add
mov
mov
mov
cmpsb
pop
push
mov
mov
pop
pop
clc
and
push
mov
inc
or
sub
jg
jmp
add
jmp
loope
repnz
sub
repz
or
test
xchg
mov
cwtl
clc
mov
or
jmp
push
cmp
dec
rol
test
sub
fcmovu
insb
dec
jle
pop
mov
mov
and
jg
mov
sbb
hlt
sahf
pop
jl
lock
cmp
push
inc
ja
mov
sub
rep
mov
jge
imul
push
xchg
sbb
push
cmpsl
push
arpl
or
xchg
movsb
aad
pcmpeqb
cmp
add
dec
pop
sub
popa
pop
xchg
sub
pxor
ja
insl
andl
cli
out
ss
imulb
mov
pushf
xchg
in
mov
outsb
or
push
mov
push
adc
pop
jge
and
xchg
adc
xor
loopne
lret
nop
fisttps
add
enter
xor
and
out
ret
cld
es
dec
cmp
inc
adc
mov
pop
or
scas
aad
cwtl
bound
mov
clc
cmpl
or
mov
xchg
sbb
adc
mov
push
popf
into
sub
inc
pop
and
mov
xchg
mov
int3
push
mov
lahf
insl
inc
ja,pn
push
xchg
jl
dec
out
add
in
cmp
inc
in
xor
lods
push
ficompl
inc
jo
test
push
push
scas
enter
dec
jge
mov
jmp
inc
mov
sub
jle
addl
jl
cmp
popf
cmpb
loope
or
sub
pop
fadds
test
les
lahf
scas
fildll
jmp
xlat
lcallw
push
insl
and
push
cmp
sbb
jbe
adc
jbe
aas
leave
stos
js
cmpsb
imul
decl
push
xor
rsm
adc
call
aad
out
pop
sbb
cltd
inc
mov
testb
int3
and
leave
adc
pop
push
sarl
rorb
bound
sti
out
inc
sbb
push
xor
jne
xor
push
das
cmpsb
push
mov
xlat
cmp
dec
int
bound
jno
fmul
lret
fwait
mov
mov
or
cmpsl
inc
pop
dec
or
push
adc
sub
xchg
inc
or
mov
jl
popf
hlt
xchg
jge
lds
adc
dec
add
mov
or
sub
mov
shlb
stos
imul
xchg
xchg
insl
cmp
inc
and
add
aaa
dec
mov
and
dec
lret
dec
add
jecxz
fdivrs
add
rcrb
pop
mull
xchg
icebp
mov
xchg
popl
xlat
jnp
nop
cmpsb
mov
and
jbe
sbb
push
int
lcall
aad
loop
loopne
out
js
mov
push
bnd
into
ds
mov
and
xchg
lcall
adc
aaa
ja
cwtl
les
cmpsl
adcb
cs
popa
inc
jb
sahf
and
pop
bound
dec
jmp
imul
fcoms
or
aaa
mov
xor
lea
stos
xchg
mov
outsl
push
mov
dec
cmp
cmp
popl
mov
jb
add
mov
orl
int3
pop
dec
stos
popf
mov
xchg
cmp
mov
push
sbb
cmp
fsubrs
ja
jg
sarb
sbb
xchg
jnp
dec
cmp
rclb
add
lret
sbb
adc
inc
rcrl
es
mov
jno
arpl
pop
pop
push
add
jmp
movsl
test
xchg
lock
pop
cmpsl
call
xor
loop
pop
xchg
ret
movl
push
loopne
gs
xor
jl
dec
pop
jne
aam
ss
lret
test
fdivs
adc
fdivs
cmpl
cli
nop
dec
cmpsb
cmpsl
cmp
loope
rol
sub
xchg
push
lret
adc
mov
mov
loopne
sbb
iret
cmp
in
js
sbb
es
add
fdiv
das
push
movsl
les
xchg
adcb
xorb
xor
jle
dec
fistpll
in
adc
int3
out
repnz
cmpsl
push
lahf
leave
pushf
aad
les
in
sub
outsl
test
mov
cli
or
fimull
std
xor
mov
xchg
js
pop
rcll
out
imulb
inc
call
mov
mov
fildl
push
mov
sahf
or
and
adc
cmc
shrb
adc
jne
pop
mov
add
cmpsb
sbb
push
xchg
jp
in
cmp
sbb
rcr
ja
xchg
bts
int
add
sbb
xchg
mov
dec
dec
shl
bound
repnz
adc
stos
xor
cmp
divl
sub
aas
rcll
cmp
pop
pusha
and
mov
test
insb
mov
cmp
or
mov
sbb
scas
jno
pop
aaa
shlb
jmp
mov
mov
cltd
xchg
push
push
xor
pop
fnsave
gs
pop
ficomps
aam
stc
ret
sbb
mov
imul
sub
pop
cmp
fidivs
mov
mov
mov
je
jmp
std
les
jne
scas
pop
repz
and
cmp
jl
xor
aaa
rcrb
mov
popa
cld
call
int
scas
xchg
sub
xchg
mov
sbb
test
scas
adc
pushf
inc
fnstenv
loopne
jge
pop
negl
jmp
iret
les
sub
fcompl
insl
jmp
ds
mov
pushf
aad
movsl
dec
daa
dec
shrb
mov
mov
sub
insl
sub
js
stos
idivl
arpl
mov
sti
ljmp
rcll
push
repnz
jmp
adc
lods
xor
jb
push
pop
jne
jnp
jle
jle
add
lods
jmp
dec
jns
jns
inc
mov
sub
outsb
bound
les
xchg
arpl
push
xor
pop
push
imul
mov
push
out
lcall
add
sbb
mov
or
mov
hlt
xor
insl
in
and
xchg
stc
xor
push
jle
test
pop
or
lea
popf
mov
xchg
enter
push
icebp
cmp
jl
notb
arpl
outsb
lahf
pop
jg
fisttpll
jns
lret
xchg
das
pop
cli
sar
orb
int
loope
bound
cmp
xchg
dec
dec
test
sti
cmp
rcl
and
mov
sbb
scas
pusha
les
add
push
inc
push
pop
push
les
idivb
into
push
ss
fisttpl
ss
or
sub
lcall
xchg
fldcw
addr16
aam
hlt
pushf
push
push
insb
sub
pop
and
adc
xlat
mov
dec
cmc
xchg
movsb
out
or
mov
inc
call
pop
and
xchg
lea
inc
and
sbb
jne
in
rol
jle
push
mov
or
push
or
mov
xchg
add
xchg
mov
or
cmpsb
jmp
je
inc
test
les
or
loopne
and
and
jecxz
out
adc
inc
repnz
mov
inc
ss
lods
sbb
andb
mov
or
test
add
divb
lods
mov
push
dec
pop
faddl
lahf
pop
push
insb
arpl
adc
dec
jb
sbb
inc
data16
ror
pop
imul
jae
idivb
sahf
in
scas
mov
dec
adc
aad
test
icebp
popa
in
lahf
cwtl
nop
fcmovnb
stos
call
adc
lds
inc
in
fistpll
mov
adc
dec
int3
jecxz
inc
out
cmc
mov
push
inc
sub
outsb
xchg
mov
fcoms
insb
mov
cmovs
fstpt
push
hlt
mov
enter
or
jg
xor
adc
mov
mov
lock
dec
jns
dec
addr16
jl
popf
subl
inc
repz
lret
xchg
in
dec
in
subb
les
pop
lcall
pop
cmp
cltd
mov
cmc
adc
lret
iret
mov
rcl
lret
cmpl
fistl
add
mov
ljmp
scas
lahf
into
jge
mov
inc
nop
fldl
rolb
test
xchg
popf
loope
adc
popf
fdivr
or
and
fisubs
ficomps
mov
fistpll
mov
stos
cmp
arpl
call
sbb
mov
loop
jl
pushaw
movsl
push
jbe
dec
jnp
and
enter
push
xchg
je
pop
mov
mov
adc
inc
in
outsb
lcall
mov
inc
sahf
shl
insl
jp
mov
sub
stc
or
imul
repz
outsl
test
push
lcall
inc
and
sub
adc
dec
inc
mov
inc
adc
sub
xor
idivl
mov
nop
lea
cmc
hlt
ds
xor
cwtl
rcl
fcom
xlat
push
push
or
push
imul
mov
int3
shr
or
and
push
loopne
xor
popa
dec
je
pop
loop
xlat
mov
cmp
xchg
scas
dec
pop
outsl
push
jae
es
insb
jg
ret
in
int
dec
mov
ret
mov
das
roll
loopne
and
push
push
push
filds
sbb
cmpsb
lgs
cld
aas
mov
aaa
cmp
out
sub
xor
jge
aam
inc
leave
inc
add
inc
mov
cmp
fldenv
iret
clc
cs
ljmp
push
lcall
mov
popa
mov
in
mov
push
jmp
xchg
pop
and
xchg
pop
out
aad
jge
sti
cmp
xor
sti
mov
sahf
push
orb
adc
loope
loopne
ja
lret
add
xchg
or
lock
lcall
cmp
xor
add
adc
push
arpl
popf
inc
std
loop
push
cmp
cmp
lret
inc
push
ss
add
and
xchg
mov
jnp
fucomp
sub
gs
mov
push
das
imul
sub
xor
movsw
sub
push
outsl
cli
adc
cmp
insb
cmp
in
dec
pushl
gs
int3
adc
pop
rorl
rcll
push
lods
lahf
inc
nop
test
cmpsb
adc
mov
pop
mov
dec
jbe
push
mov
xlat
lea
stos
or
pusha
pop
aaa
movsb
dec
inc
orl
movsl
stos
sub
pop
sbbb
mov
push
sahf
fisttpl
cwtl
add
ret
inc
ljmp
bound
sbb
cmpsb
xlat
sbbb
shr
aaa
lcall
sbb
arpl
or
mov
mov
xor
pop
imul
imul
imul
sub
fidivs
push
sti
pop
lret
dec
in
test
mov
sbb
push
dec
pop
sahf
sti
call
loop
jb
lock
dec
jno
insl
mov
xor
push
adc
sub
xor
xor
shlb
cmp
sahf
mov
imul
push
lea
xor
jbe
cmc
incb
pop
xlat
jg
jno
jns
sbb
cmp
dec
les
jmp
or
adc
dec
xchg
mov
cmp
adc
pusha
or
dec
in
jmp
iret
out
jb
shll
sub
loope
or
jl
inc
mov
lods
hlt
push
sahf
in
movntps
and
dec
int3
jbe
lcall
jecxz
xchg
push
push
js
or
xor
and
jecxz
push
dec
pop
jne
or
mov
or
xor
adc
ret
les
inc
loopne
pop
dec
outsl
in
fistl
dec
ljmp
inc
inc
jmp
push
fwait
je
cmp
addl
xor
stc
jno
adc
dec
aaa
push
mov
int
fisttpl
pop
rclb
push
cmp
fdivl
rclb
cmc
pusha
jp
cmp
negb
jl
cmpsl
jbe
in
jle
faddp
dec
sub
ret
and
sub
in
mov
adc
pop
or
fnstcw
int
sarb
dec
inc
in
lahf
push
int
or
stos
cs
jne
daa
aam
mov
push
adc
mov
or
add
inc
aas
les
jge
dec
movsb
arpl
push
arpl
jg
sub
pop
cmp
add
stos
cltd
in
dec
sbb
sbb
mov
fbstp
add
and
mov
pop
jmp
gs
xor
add
out
fstl
movsl
mov
test
or
aam
mov
daa
test
leave
lods
fmull
mov
testb
sbb
imul
scas
or
inc
xchg
lock
mov
push
inc
call
mov
aas
test
fistl
lds
pop
popf
adc
out
in
imul
aam
das
pop
ret
jns
jnp
std
lea
jbe
shlb
stc
je
dec
xchg
xchg
repz
fwait
mov
cli
mov
add
adc
loop
dec
pop
mov
adc
dec
bsr
add
lret
fsub
and
jnp
adc
cmp
jbe
xchg
out
in
out
cmp
adc
je
dec
sbb
jecxz
daa
arpl
popf
sbb
ret
inc
out
js
cs
add
pop
in
lcall
ret
scas
jmp
mov
movsb
jg
cmpsb
lret
nop
and
push
add
cmp
fisubrl
dec
xor
mov
inc
mov
test
out
test
lret
mov
addr16
scas
lret
lods
mov
jne
mov
jno
xchg
ret
and
loop
sub
pushf
push
pop
dec
roll
out
push
cmc
lcall
out
pushf
nop
sub
sbbl
hlt
loop
jecxz
or
icebp
sub
sbbl
and
fisubl
cmp
inc
mov
jae
jg
ds
orb
scas
xor
int3
aas
aas
adc
cmpsl
or
jb
jo
negb
xor
aad
push
aam
mov
clc
or
popa
outsb
sbb
sub
adc
test
hlt
sub
into
scas
movd
rclb
xchg
jmp
hlt
xor
in
adcl
xlat
jns
lods
mov
xor
outsb
mov
das
mov
insl
es
cmpsl
aad
xchg
push
incl
jg
mov
int3
lret
pop
xor
jg
or
test
mov
aaa
imulb
fisubl
je
cmpl
mov
cmp
sbb
pop
jbe
fnstenv
imul
mov
in
aad
dec
jge
cmp
push
sarl
and
lock
mov
add
add
or
pop
jmp
in
ret
outsb
mov
inc
push
sbb
fbld
xchg
repnz
dec
scas
push
jbe
inc
fiaddl
out
inc
sbb
and
mov
push
nop
call
push
nop
ror
add
icebp
negb
jnp
js
dec
int3
pop
and
cmp
mov
loopne
in
mov
divb
orl
ss
std
clc
dec
out
insl
inc
cmp
jno
bound
jecxz
fdivrs
push
jne
inc
or
fistps
ret
outsb
mov
jns
adc
jo
cmp
sahf
and
add
stos
int3
lds
scas
fmull
test
ficoms
int3
dec
and
and
aam
xchg
push
pop
mov
test
adc
stc
push
sbb
in
cmp
das
inc
mov
in
mov
movsb
mov
fcoms
sub
or
push
push
inc
or
mov
mov
mov
pop
adc
pop
push
xchg
imul
pop
push
mov
mov
and
and
cmp
adc
mov
jae
inc
popa
dec
fcoms
mov
and
push
cmp
mov
sbb
loopne
fcompl
js
popa
imul
into
mov
mov
inc
mov
out
mulb
sub
or
jecxz
cmp
iret
cmp
pop
jns
fildll
bound
fidivl
add
sar
mov
push
mov
dec
and
xor
push
mov
sbb
sbb
test
mov
inc
imul
sbb
lret
insb
test
cmpsb
and
lret
mov
or
add
sahf
ret
out
push
xor
outsl
sub
sbb
idivb
push
dec
lahf
xchg
push
mov
imul
mov
ljmp
mov
inc
xchg
dec
out
mov
cmp
jp
hlt
mov
cmp
sub
cmc
in
mov
sbb
mov
add
stos
in
dec
dec
cmp
mov
xchg
sbb
hlt
jnp
inc
sbb
inc
xor
loopne
in
ret
xorb
add
imul
aam
mov
out
repnz
mov
mov
cmpsb
xchg
into
loop,pn
les
dec
mov
sub
in
pop
pop
imul
sbb
push
jl
fcoms
mov
ds
add
ret
es
sub
pop
popf
mov
andl
and
stos
out
sbb
jecxz
add
xor
cmp
push
cltd
pusha
add
cmp
sbb
pop
cmpsl
outsb
idivl
imul
xchg
cli
mov
inc
shll
nop
and
or
js
cmp
xor
xchg
frstor
insb
dec
push
cs
popa
or
mov
add
sarb
and
adc
pop
mov
or
mov
jle
mov
cmp
loopne
or
mov
mov
ss
pop
jle
ljmp
pop
aaa
push
popa
leave
lock
fmull
xor
dec
dec
sbb
aaa
mov
or
notl
mov
inc
lahf
xchg
xor
push
push
push
mov
popa
cmp
add
ja
gs
sbb
shll
lret
lret
cmpsl
cmpsl
xchg
dec
sub
mov
xchg
je
cltd
push
and
inc
lock
pop
adc
xchg
sarl
popa
leave
lret
xchg
jae
dec
ljmp
insb
jne
add
mov
jno
pop
jmp
add
mov
xchg
jmp
arpl
pop
pusha
push
call
sbbb
ss
xorb
aaa
into
xchg
icebp
push
fsubrp
dec
js
dec
jge
pop
gs
vxorps
add
leave
divl
mov
xchg
add
xor
cmp
inc
in
outsl
loop
frstor
and
roll
lock
outsb
shrl
xchg
sub
mov
out
popw
scas
adc
mov
inc
jp
xchg
test
ljmp
mov
inc
sub
hlt
cmpl
mov
jmp
pop
push
push
jae
sub
push
loop
xorl
mov
pinsrw
sub
call
call
shlb
jge
xor
inc
mov
cmc
loop
loope
sub
xor
xchg
xchg
add
or
mov
push
jnp
ret
repnz
sub
adc
mov
jae
adc
negb
popa
pop
fs
xchg
imul
xchg
jae
pop
jo
bswap
lcall
call
sarb
jmp
and
loopne
cs
in
loopne
andb
fcmovnu
fucomi
ja
out
mov
int
popa
fnstcw
addb
clc
push
dec
loope
dec
fstps
fisubl
mov
pusha
subb
jnp
lods
repz
and
stos
ss
stc
pop
test
dec
add
or
or
xchg
mov
movsl
aaa
inc
jae
pop
scas
cmp
je
adc
xchg
mov
xchg
adc
dec
imul
xor
in
or
in
and
jl
cs
icebp
xchg
or
push
shrl
test
mov
jmp
js
out
adc
xchg
jmp
test
lret
xchg
out
jo
das
xlat
mov
lahf
rcl
adc
mov
jo
or
fstps
or
push
xchg
loopne
pop
arpl
push
inc
int3
push
jg
movsb
jo
jbe
rolb
adc
lock
pop
dec
jecxz
cltd
ret
mov
push
and
adc
and
loope
dec
pop
fstp
sar
push
add
mov
test
adc
outsl
push
cmp
test
push
ja
xchg
jno
sarb
jb
jno
int3
andb
out
mov
pushf
jl
movsl
outsb
xchg
and
lret
test
xor
xor
xchg
movsb
inc
pop
scas
inc
int3
pop
push
sub
imul
cltd
xchg
pop
bound
mov
enter
xor
adc
outsl
and
sub
sbb
or
stos
mov
fwait
add
xchg
and
push
push
in
xor
jg
dec
test
jmp
sub
jns
mov
xchg
addr16
leave
dec
jl
add
cs
mov
mov
xchg
push
jg
loopne
push
fdivr
lods
sbb
std
nop
sbb
mov
arpl
cmp
add
fldt
ss
inc
xor
sbb
out
nop
mov
push
pop
repnz
scas
or
sub
add
xor
xor
sahf
int3
fldcw
mov
stos
jg
xchg
xchg
lret
mov
iret
lds
movsl
mov
and
push
js
add
pop
aam
push
outsb
into
std
adc
rclb
cs
pop
mov
jmp
ja
adc
daa
ja
push
sahf
add
mov
dec
or
lcall
push
fwait
xchg
push
je
out
and
cwtl
jecxz
stc
sub
daa
dec
mov
rclb
ret
xor
dec
xchg
xchg
inc
pop
xor
ret
imulb
js
xor
fdivrl
loop
cwtl
dec
js
cltd
add
mov
cmp
stos
push
in
mov
or
push
adc
repz
mov
ret
mov
cwtl
je
iret
cmp
adc
add
sub
into
out
mov
hlt
lcall
add
inc
push
je
cmp
outsb
testb
or
pop
mov
sbb
jmp
sbb
jnp
jae
rcrl
das
jg
xchg
mov
push
test
les
lods
xor
or
test
cmp
xchg
adc
mov
push
xchg
fldt
imul
or
shrb
mov
leave
add
pop
into
add
in
mov
out
ja
loopne
jp
lahf
push
test
adc
popf
push
lods
inc
cmp
mov
pop
scas
insl
gs
cmp
xchg
push
or
cwtl
cmpsl
inc
or
in
xor
std
addr16
pop
mov
test
call
test
push
jo
sbb
adc
outsb
popa
add
sti
icebp
loope
es
mov
stc
leave
jg
push
hlt
pop
xchg
into
xor
cmpsb
cmp
and
push
ror
iret
add
jns
sub
shrb
inc
and
xlat
or
xchg
test
mov
ret
cmpsb
jb
jp
daa
mov
cmp
xchg
push
and
mov
sub
movsb
cltd
dec
jno
jae
xchg
in
bnd
jb
sarl
loopne
ljmp
leave
imul
mov
jmp
je
cmpsb
jl
mov
dec
xchg
pusha
push
adc
arpl
in
ret
sahf
ret
and
fiaddl
sbb
adc
push
mov
es
jnp
cwtl
sub
lods
sti
or
jnp
and
cs
mov
mov
mov
xchg
xchg
subl
dec
push
pop
xlat
dec
iret
inc
ljmp
es
and
mov
mov
sub
push
ret
jmp
jb
les
jecxz
push
in
jmp
ljmp
pusha
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
std
jmp
movsb
xor
push
xchg
xor
push
dec
mov
shld
adc
rolb
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
or
movsb
test
sbb
imul
pusha
mov
rcl
popa
lret
xor
es
fsubs
je
inc
lds
mov
mov
in
add
adc
mov
push
adc
mov
jmp
xor
popf
scas
push
cld
ret
mov
scas
push
adc
mov
dec
sbb
fstpt
or
fmuls
adc
call
dec
sub
popa
pop
mov
dec
and
cmpsl
sub
mov
push
xchg
loope
movsb
xor
adc
shlb
shld
adc
xor
xchg
mov
adc
outsb
add
dec
mov
push
sbb
mov
cmc
rolb
xchg
mov
in
mov
in
add
xchg
mov
movsb
xor
push
xchg
mov
movsb
pusha
mov
push
xchg
ss
ret
xchg
dec
mov
lfs
mov
in
add
xchg
mov
movsb
xor
push
xchg
mov
in
movmskps
add
mov
in
add
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
rclb
in
add
inc
mov
pop
movsb
xor
push
xchg
hlt
dec
xchg
fs
adc
rolb
xchg
mov
mov
pusha
xchg
add
xchg
mov
andps
mov
mov
dec
mov
shld
adc
rolb
xchg
mov
inc
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
push
xchg
mov
movsb
xor
aas
cs
mov
shld
adc
jo
and
mov
das
mov
fldl
ss
es
outsl
push
ret
fmuls
mov
fcom
sbb
sbb
test
fidivl
arpl
scas
mov
pop
ja
popf
hlt
ja
popa
cmc
fcoml
sub
or
mov
jns
repz
xor
inc
fwait
sahf
pop
add
movsb
dec
fsqrt
or
mov
sbb
cmp
jecxz
pushf
xor
adc
sbb
dec
fbstp
mov
xchg
pop
push
pop
or
test
or
jp
or
dec
stos
pop
or
cmpsb
inc
popf
loop
jp
cmp
mov
sbb
inc
xchg
add
loopne
out
addr16
int
lret
pop
lret
stos
ja
mov
pop
test
in
out
dec
movsb
pop
divl
mov
in
les
lds
cli
pop
xor
call
push
aaa
movsl
mov
adc
sahf
and
adc
stos
mov
pop
insb
pop
xor
test
mov
int
jne
xchg
lret
cmp
pusha
xchg
jne
test
testl
loopne
lock
pop
je
inc
pop
dec
jecxz
cmp
int3
test
ds
and
mov
xchg
ljmp
sbb
jb
bound
mov
add
jb
mov
push
add
inc
cmp
xchg
clc
lcall
js
clc
into
mov
in
mov
xchg
enter
scas
cmp
cmp
xor
sbbb
movsl
sub
xchg
cli
jb
push
test
clc
sbb
mov
lahf
fdivl
jecxz
bound
shlb
xchg
cmp
mov
int
fmuls
gs
push
lret
icebp
rcrl
sbb
cmp
sub
mov
imul
js
inc
xor
out
pop
sbb
jno
sbb
addr16
popf
pop
fldcw
inc
xchg
out
hlt
xchg
mov
shll
jmp
adc
adc
out
in
lods
cmp
jb
imul
cltd
je
out
jne
adc
test
imul
inc
cmp
pop
shll
enter
leave
outsl
popa
mov
inc
jo
dec
dec
inc
loop
lret
sbb
xchg
pop
fnsave
mov
xorl
pminsw
adc
lcall
inc
jecxz
das
xor
popf
sbb
nopl
mov
or
push
jae
test
sub
fstl
lahf
mov
dec
sahf
add
push
mov
pop
test
cmpsl
xchg
xchg
popa
sbb
lahf
and
and
push
aaa
pop
in
add
add
and
mov
push
inc
addr16
out
mov
int3
mov
or
mov
sub
xor
in
jle
cmp
mov
jo
int
lret
sub
mov
rol
lcall
ficomps
mov
xchg
cld
negl
mov
or
ret
outsb
xchg
pop
lcall
js
fs
or
scas
aam
jae
pop
xor
xchg
scas
or
add
rolb
call
cltd
mov
mov
xor
jnp
sti
testb
fistl
lds
cld
dec
cmp
push
xor
stos
out
adc
test
xchg
call
jmp
jbe
loope
push
fwait
mov
gs
xor
xlat
dec
pop
pop
mov
rorl
not
mov
jle
cmpsb
pop
scas
sti
out
push
xchg
sub
or
mov
pushf
add
pop
imull
scas
jno
inc
sbb
xorl
hlt
sahf
pop
dec
mov
mov
mov
iret
jecxz
lock
call
jl
and
aas
addr16
ffree
sbb
and
into
mov
mov
push
mov
bound
xchg
xor
xchg
fsubl
inc
mov
pop
cmp
inc
fadd
mov
addr16
int3
lahf
lods
adc
data16
and
out
imul
shll
xor
nop
push
aad
push
push
dec
shrl
fucomp
stos
stc
scas
jle
jp
cmpl
cs
lds
pop
in
lret
push
mov
mov
shll
lods
lods
pusha
fildl
je
std
pushf
jbe
and
xlat
pop
fmull
shll
in
shlb
pushf
in
or
adc
mov
inc
divl
cmc
mov
out
mov
clc
mov
xchg
mov
jmp
adc
mov
sbb
mov
ss
mov
jb
dec
add
cmp
gs
pop
inc
inc
pushl
cmp
fdivrl
push
shrl
ja
rorl
cmp
cmp
adc
sub
xor
and
outsl
xchg
jno
movsb
or
or
test
push
pop
dec
scas
sub
xchg
cmp
int3
jb
cmp
inc
mov
mov
int3
mov
sti
add
rcr
add
imul
dec
cmpsb
out
popa
ret
jbe
sbb
dec
iret
mov
hlt
mov
jg,pn
push
xor
pop
mov
xchg
adc
incl
mov
inc
sbb
stos
xchg
sbb
cmc
jne
orb
ds
aas
pop
std
loop
sarl
xor
cmp
mov
repnz
sub
lcall
jns
cmp
and
lods
stos
adc
sub
idivb
out
jne
sub
loope
ret
jl
pop
xlat
add
sar
mov
out
mov
icebp
or
test
out
cmp
xor
or
test
aas
mov
icebp
cmp
sub
sub
loopne
xlat
not
add
in
sbb
jecxz
popa
test
sub
notl
cmp
movsb
sbb
inc
aad
mov
fstpt
rorl
mov
outsb
dec
xchg
add
ret
mov
sub
das
pop
call
dec
call
mov
int
xor
fdivs
aam
enter
xor
mov
sub
fwait
je
pop
iret
aaa
jmp
movsl
mov
xorb
sbb
sbb
fwait
fwait
test
push
mov
jnp
sbb
adc
js
sub
lret
fcompl
outsl
mov
mov
push
mov
aad
pop
mov
sti
insl
mov
mov
mov
cmp
gs
fs
jecxz
popa
aaa
js
test
cmpsb
jg
push
jne
aaa
xchg
mov
or
sbb
push
pop
sbb
xchg
sub
jg
or
out
dec
add
in
gs
mov
imul
jmp
bound
test
xor
pushf
out
mov
mov
stos
int3
sbb
insl
mov
enter
vmovhps
jbe
clc
pop
mov
push
add
je
and
jecxz
xor
inc
cmp
or
xor
testb
cmp
arpl
inc
pop
insb
and
cmc
cmpsl
inc
mov
add
sbb
cmp
jg
xor
jg
pop
ficoml
xchg
sub
xchg
mov
mov
sub
bound
jg
jge
jo
movsb
push
push
repz
xchg
add
in
imul
inc
adc
pop
insb
lahf
and
sbb
ss
pop
jae
fs
cwtl
xor
and
je
loope
fdivs
outsb
lock
repnz
or
pop
or
cli
pop
std
sub
push
dec
push
mov
and
mov
movsl
mov
je
cli
pop
inc
add
add
pushf
rcrl
popa
mov
and
push
test
cld
int3
rcrl
pusha
xor
jg
xchg
dec
jne
shrb
xor
inc
bound
call
cmp
and
dec
inc
add
cmpb
test
addr16
das
push
mov
jge
xor
inc
adc
jnp
aam
add
jmp
fdivs
sbb
shl
cmp
jb
outsl
mov
cmpsl
lods
fidivrl
rorb
jge
cmp
lahf
pop
lahf
subl
aas
add
outsb
subb
das
aad
dec
out
mov
movsb
push
sub
aaa
out
sbb
test
or
mov
xor
lret
mov
pop
mov
subl
and
or
jne
sub
push
sahf
push
sarb
or
add
cmpsl
dec
pop
push
adc
and
insl
mov
sahf
inc
mov
pop
iret
push
stc
push
adc
sub
repz
push
aas
push
mov
je
loop
push
pop
cmp
xor
inc
mov
adcl
dec
pop
adc
mov
mov
mov
and
icebp
sbb
sbb
adc
les
cmp
testl
sbb
cs
mul
dec
nop
subb
stos
js
bnd
iret
lahf
int3
dec
mov
add
lock
nop
xor
pop
xor
aam
lcall
insl
in
out
dec
inc
push
jecxz
cmc
in
or
cmp
ret
outsl
mov
nop
jge
push
sbb
test
jge
and
pop
pop
aam
sub
mov
jb
xchg
cs
xor
dec
sahf
outsl
dec
jb
xchg
jle
add
daa
arpl
outsb
mov
mov
test
xchg
daa
std
inc
jne
xchg
push
cmp
je
sub
jae
ljmp
stc
push
sarl
cmp
js
and
adc
dec
ss
dec
cmp
shr
jg
xor
add
inc
sub
xchg
sub
xor
insl
cli
ja
push
mov
sbb
sub
push
shll
xor
pop
dec
ljmp
popf
mov
and
ror
sub
xchg
push
mov
cmp
fs
aaa
push
jmp
cs
sub
jl
jnp
into
in
xor
pop
sbbb
test
enter
sbb
dec
mov
pop
dec
xchg
pusha
aad
lahf
mov
jo
fists
sub
nop
roll
sub
ss
popf
je
test
sbb
push
inc
bound
jns
mov
adc
push
inc
sahf
and
inc
sub
insl
lea
pushf
mov
xchg
test
ror
cs
mov
push
test
in
adc
inc
cmpb
xchg
mov
stos
pop
and
fadds
ljmp
jo
push
mov
insl
and
es
lret
pop
ret
aad
inc
dec
mov
movsb
ss
adc
push
jmp
jecxz
push
loopne
fcomps
cmc
jo
pop
lret
andl
pop
mov
jae
jno
fwait
pop
in
pop
gs
call
pop
mov
or
dec
sbb
fistpl
push
push
mov
les
aas
lcall
xor
retw
sub
lahf
push
rcrl
movsl
out
sub
hlt
mov
pop
rcr
lods
cmpsb
leave
jnp
movsb
add
jle
aas
inc
xchg
sbb
cmp
dec
outsl
jns
les
subb
lock
clc
cld
lods
push
pop
fdivr
inc
sub
jl
imul
add
mov
jnp
mov
lods
ds
xchg
imul
lods
popa
jge
push
adc
adc
mov
and
les
push
cmpl
adc
xchg
mov
or
clc
push
push
and
push
dec
cmpsl
xor
push
mov
inc
fcmovnu
dec
cmp
cmp
add
outsl
ds
out
lds
es
push
mov
mov
dec
mov
hlt
add
push
outsb
dec
cmpsl
rep
mov
pushl
das
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
