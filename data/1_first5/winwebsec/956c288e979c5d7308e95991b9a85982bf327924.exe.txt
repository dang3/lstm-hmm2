or
jno
call
mov
mov
xchg
repnz
stc
popa
jae
mov
repnz
jns
cmp
xor
pop
repnz
decl
and
lods
mov
mov
push
mov
out
xor
push
push
shll
lods
sub
aad
aaa
mov
sti
ret
cmpsb
mov
out
pop
ret
nop
push
int
jb
sub
push
xor
clc
fwait
xchg
sti
pushf
sbb
mov
outsb
xchg
nop
sub
addb
inc
lret
xor
into
subl
clc
and
ds
dec
mov
pop
fs
fptan
aam
aad
xor
mov
lahf
pop
insb
daa
cmp
add
test
pop
xchg
int
jo
addr16
mov
push
add
sub
fcomps
jmp
stc
sbb
ficomps
cmp
dec
adc
ss
outsb
orl
ret
jne
or
pop
int
sub
or
out
subb
orb
cli
xor
call
icebp
stos
decl
jno
add
rcrb
in
xor
dec
mov
dec
mov
xor
jnp
adc
mov
shlb
test
dec
add
loope
idiv
mov
and
xchg
scas
outsl
js
push
push
ja
jmp
inc
add
pop
mov
mov
dec
dec
cld
ss
sub
and
xor
inc
mov
pusha
fnstsw
das
push
pop
push
xchg
jns
js
leave
movsl
xchg
cmpsb
ljmp
pop
pop
inc
roll
lods
scas
cmpsb
pop
inc
int
std
jb
lock
ret
xor
imul
sbb
mov
shll
or
shrb
subb
icebp
sbb
jp
in
mov
int
adc
fwait
pop
dec
pop
shrb
adc
repnz
fdivrl
add
lahf
mov
test
jbe
stos
stos
fisubl
sbb
sbb
arpl
andl
movsb
jle
xlat
imul
pushf
stc
fistps
in
cltd
xor
push
cmpsl
out
arpl
jnp
mov
lds
cmc
fildll
xorl
test
fistps
dec
pop
int
and
ror
arpl
mov
icebp
ret
sub
mov
daa
mov
push
frstor
mov
sub
subb
adc
dec
bound
and
xchg
insb
pop
imul
mov
or
cmc
shl
cmp
andl
xor
arpl
pop
inc
scas
scas
or
jo
fdivs
inc
push
push
push
pop
movsb
ds
or
add
adc
jg
test
out
adc
std
inc
mov
ret
std
gs
mov
mov
sbb
dec
fnstsw
inc
mov
cmp
jmpw
pusha
ja
inc
imul
out
and
lahf
adc
rcr
xor
subl
mov
mov
mov
jne
testl
push
out
or
data16
xor
push
adcb
add
xchg
push
test
addl
mov
scas
push
into
mov
lret
orb
cmpsl
pop
fimuls
cmp
add
push
sbb
lods
out
jp
in
mov
push
outsl
xor
xchg
enter
aad
insl
test
movsb
sub
mov
dec
push
mov
cmc
xchg
cs
dec
adc
jecxz
xchg
iret
aaa
cwtl
xor
orb
aas
sbb
ss
xlat
xchg
dec
cli
pop
andb
out
popf
es
xchg
jno
sbb
and
jo
push
and
jecxz
into
cmp
adc
test
out
push
adc
pop
inc
jmp
dec
adc
mov
sbb
xor
outsl
jmp
mov
jmp
shl
rorb
dec
push
addb
in
test
push
sbb
push
lods
pusha
lds
dec
or
push
addps
pop
dec
jne
sbb
mov
mov
out
or
dec
adcb
add
aam
mov
cmp
inc
js
mov
aad
jb
add
stos
inc
pop
je
jmp
pop
cmp
mov
mov
add
xchg
xchg
pop
jo
sti
cmp
cmp
mov
sub
inc
jl
push
std
pop
jl
add
inc
int
xor
dec
fistpl
and
xor
cmp
popf
scas
lods
adc
mov
xor
jo
jns
cmp
mov
stos
jns
cwtl
mov
call
xor
pop
mov
ret
cmp
fsubrl
cmpsb
dec
lret
pop
loopne
xchg
loop
insl
sub
push
das
je
jg
mov
sbb
push
mov
cmpsl
mov
movsl
push
jl
data16
stc
sahf
negb
scas
out
daa
xchg
adc
add
bound
stos
mov
test
jno
xchg
test
movsl
imul
mov
cmpsb
test
int3
jb
movsl
outsb
mov
mov
jmp
jo
cmpb
and
dec
sti
imul
mov
repnz
pushl
jmp
je
cmp
leave
xor
lret
stos
aaa
es
out
mov
or
arpl
lods
mov
in
and
sbb
push
dec
mov
lcall
inc
cmp
mov
iret
fmull
je
cmp
decl
orl
xchg
jp
sub
push
popl
popf
out
fistpl
dec
or
mov
cmp
sbb
add
cmovb
jp
rcll
add
cmpsl
les
addr16
les
shrl
xor
ficomps
and
mov
xor
scas
pop
push
roll
icebp
scas
lcall
je
cmp
clc
lret
add
shrb
in
mov
xor
orb
popf
iret
out
mov
jns
cli
push
js
jmp
pop
push
mov
fwait
enter
and
jmp
pop
sub
or
xchg
inc
sub
mov
flds
std
fdivrl
popf
nop
cld
mov
mov
in
lahf
adc
xor
sub
aam
mov
xchg
xor
packssdw
mov
and
int3
dec
movsl
jl
sbb
xor
or
sub
jmp
adc
dec
mov
sbb
insl
xlat
adc
push
inc
mov
pushf
inc
xchg
pop
xlat
clc
fnsetpm(287
mov
es
arpl
add
adc
cmpsb
inc
inc
enter
mov
sub
imull
into
adc
cmp
pushf
ss
add
pop
sbb
or
insb
scas
pop
mov
mov
xor
ret
sbb
mov
subb
and
pop
mull
push
mov
push
and
test
repz
xor
mov
outsb
xchg
sub
add
jecxz
int
fs
cmc
dec
mov
cmp
aam
popa
lods
sti
notl
hlt
std
inc
mov
inc
stos
inc
sub
aaa
and
lret
vpsubusb
cmp
loop
ss
std
pop
lcall
nop
jno
pushf
dec
insl
ret
xor
movsb
cmp
int3
cmp
push
subb
add
dec
xor
xchg
in
jmp
jo
ret
leave
push
fs
lock
fs
adc
jnp
xchg
pop
sub
stc
sub
mov
sbb
call
rorb
and
cwtl
xadd
repnz
dec
pop
stos
lret
scas
mov
xchg
add
xchg
push
pop
lock
add
icebp
mov
adc
cmp
sub
push
mov
add
fldcw
xchg
cmp
stos
pop
jl
jecxz
mov
xchg
jg
xchg
jecxz
mov
push
cwtl
scas
and
mov
popf
mov
lock
loope
stos
out
pop
push
ljmp
push
mov
imul
adc
add
xchg
repnz
cld
sbb
test
sahf
pop
inc
dec
inc
or
cmp
xchg
add
or
aad
add
or
movsl
insl
sahf
inc
int3
xchg
int3
and
pop
sti
cmpsl
inc
push
jle
push
adc
aas
imull
or
sarb
mov
fidivs
jb
pop
daa
mov
mov
neg
cwtl
xchg
or
add
stc
outsl
loop
loopne
or
scas
cmpsl
cmpsl
mov
cmp
mov
push
xor
js
xchg
cwtl
lcall
das
ret
sbb
cmpsb
pop
cmp
jbe
rol
adc
jl
xchg
arpl
data16
daa
cmpsl
inc
push
pushf
add
sbb
xor
pop
insl
fmuls
and
clc
sub
ret
add
leave
or
lcall
aam
jne
xor
dec
shlb
into
fcomi
lret
shll
es
mov
pop
add
fists
aad
cld
pop
cmp
call
and
sbb
adc
add
dec
sti
andb
jg
mov
sub
mov
out
popf
or
dec
lods
xchg
dec
mov
fadds
mov
fsubrs
push
mov
out
push
insb
bound
dec
xchg
fsubrs
stos
push
mov
and
out
push
imul
xchg
pop
movsl
jbe
push
xchg
push
push
push
clc
test
adc
xchg
ljmp
and
push
cld
cmp
add
shlb
movsb
cli
outsl
mov
xchg
sbb
insl
shlb
leave
mov
dec
jg
popa
fwait
mov
jg
imul
shll
cwtl
aam
adc
pop
push
sbb
mov
test
xchg
xchg
out
xchg
sub
movsb
loop
jo
inc
es
ljmp
shll
andl
sahf
cmc
jmp
aad
push
enter
and
dec
scas
adc
fwait
push
shl
inc
in
ss
pushf
out
fstpt
std
xlat
mov
data16
repnz
sbb
les
out
sbb
fcmovne
popa
mov
and
jmp
mov
jns
mov
and
lds
rclb
and
adcl
repz
mov
ja
adc
test
mov
stos
sub
fstpt
imul
je
xchg
sub
das
shr
cmpsb
push
dec
gs
es
pop
xor
lahf
dec
fs
pusha
mov
mov
sarb
jecxz
popl
or
jns
fidivl
out
in
sti
scas
push
push
mov
das
xor
js
jb
xchg
and
shll
inc
jb
test
xor
mov
push
mov
sub
sub
xor
jle
push
or
idivb
cwtl
sub
das
fcmovnb
push
pop
cmpsb
and
int3
push
sub
or
and
cs
mov
lret
mov
pop
xor
pop
call
cli
pop
shlb
dec
cmp
push
ror
into
rcl
dec
mov
jmp
mov
push
cmc
xor
daa
stos
and
push
mov
lret
ror
push
dec
push
aas
pop
ja
or
fildll
es
pop
or
roll
loope
repnz
push
pusha
sub
add
mov
dec
cmp
fsubr
cmpsl
ljmp
addr16
sysenter
jle
rorb
and
push
sbb
in
gs
clc
mov
mov
sar
xor
icebp
mov
movsl
mov
out
lret
push
cmp
cmp
adc
das
xchg
sbb
shrb
cmc
pop
movsb
hlt
pop
daa
loop
icebp
xor
or
jl
fidivrl
in
clc
cmpsl
mov
xor
sub
inc
call
aas
mov
mov
push
sub
xchg
sahf
push
mov
mov
insl
mov
loopne
mov
ljmpw
push
fcmovbe
push
push
je
jmp
sub
lock
mov
in
lock
mov
fstl
sbb
incw
adc
sbb
ret
stos
mov
ss
mov
stc
dec
cltd
jl
mov
xor
addr16
clc
push
or
push
xchg
and
fwait
jo
mov
cli
pop
leave
loop,pn
xchg
mov
mov
aad
stc
sub
clc
rorb
outsl
jl
mov
lcall
and
int
pop
cmp
test
jmp
jb
mov
cmp
or
rolb
mov
mov
or
adc
add
lods
sbb
mov
sbb
cmp
or
pop
dec
aam
cltd
cld
data16
mov
ds
rcl
bound
dec
dec
out
shr
sahf
gs
icebp
mov
mov
xor
lret
lret
scas
push
nop
mov
scas
add
mov
mov
sub
mov
xor
mov
inc
aas
xor
push
les
xchg
in
subb
and
in
lahf
inc
push
push
test
xchg
loope
fiadds
aad
popa
inc
xor
mov
cmp
or
loope
clc
pop
inc
cmc
repz
insl
push
push
fwait
je
daa
jg
dec
inc
fsubrs
jnp
mov
pusha
int3
adc
mov
sbb
imulb
rclb
dec
inc
add
loopne
mov
outsl
add
outsl
shlb
pusha
fwait
ja
dec
mov
cmpl
into
jbe
nop
adc
and
jmp
mov
dec
xchg
gs
mov
mov
push
data16
jmp
fwait
dec
ret
or
loop
int3
xchg
mov
idivb
hlt
xchg
mov
mov
mov
or
cmpsb
adc
sbb
xchg
push
mov
out
scas
add
sub
mov
cmpsl
add
pop
mov
loope
jl
inc
rolb
repnz
mov
mov
push
dec
mov
xor
out
ja
xchg
scas
mov
mov
enter
imul
outsl
ds
aas
inc
jmp
stos
adc
mov
or
aas
pusha
movsl
repnz
ror
mov
inc
dec
fimull
in
clc
xchg
jns
int
push
js
test
repz
or
xchg
sub
gs
repz
gs
dec
icebp
xchg
aas
mov
dec
jo
into
inc
or
fnstsw
lods
imul
jae
push
push
rorl
ljmp
bound
add
sbb
mov
xchg
push
imul
popa
inc
mov
lods
push
mov
adc
das
scas
pop
imul
in
daa
push
ss
sbb
clc
bound
sbb
movsl
imul
sbb
imul
mov
sbbl
jns
mov
mov
push
xor
out
cmp
out
cmp
or
xor
ja
ror
lret
jbe
imul
popf
shll
fimuls
inc
push
je
mov
faddl
paddq
cmpsl
lea
xor
mov
or
lds
dec
push
clc
sbb
jnp
cmc
lcall
pop
or
pop
leave
mov
movsb
add
std
mov
dec
mov
outsl
jg
pop
push
add
sub
dec
ret
pushf
xchg
in
xchg
ficoms
xlat
mov
outsl
pop
fsubl
and
cmp
bound
loop
cmc
cmpsb
aaa
mov
icebp
xor
adc
clc
or
lods
mov
aaa
shrl
cld
mov
jo
ret
cmpsb
andb
inc
push
call
add
lret
test
sub
cmp
jmp
cmpl
cmp
mull
xlat
pop
push
sbb
dec
mov
icebp
sbbl
roll
mov
scas
popa
mov
sbb
sbb
push
fwait
cs
scas
pop
mov
xor
lods
jno
adc
je
das
push
pop
cltd
mov
cmp
inc
mov
hlt
mov
mov
pusha
inc
flds
pop
orb
or
or
jmp
pop
mov
loop
mov
pop
and
sub
movsb
into
lret
cmp
mov
adc
sbb
aaa
nop
sbb
roll
rclb
pusha
xchg
stc
sbb
stos
dec
mov
push
xor
test
mov
or
cs
sbb
lret
adc
pop
repz
sub
insw
xor
xor
add
add
dec
pusha
cli
dec
fs
test
adc
scas
inc
sbb
pop
mov
pop
lds
mov
mov
jg
mov
sbb
mov
push
cs
adc
add
stc
cmp
insb
pop
lahf
push
xadd
sbb
pop
xchg
lahf
neg
adc
push
stc
pop
cmp
pushf
lock
pop
in
inc
fnstsw
sbb
js
repnz
push
fstps
push
mov
xor
mov
mov
and
psllq
addr16
mov
rclb
inc
mov
ss
mov
xor
mov
inc
push
nop
push
loopne
mov
loopne
inc
xchg
xchg
out
cmp
sub
inc
xor
cld
cmp
mov
pushf
adc
adcb
imul
cmpsl
jbe
mov
std
push
les
hlt
jmp
int
ljmp
rolb
mov
cs
xchg
movsb
push
cmp
cmc
add
ss
push
fisttps
in
nop
jno
adc
in
mov
dec
bound
and
sbb
enter
adc
mov
sbb
jns
jle
mov
repnz
mov
xor
pop
push
mov
rcl
mov
nop
lock
nop
push
aam
push
pop
add
mov
adc
jo
ja
mov
add
je
movb
mov
dec
lcall
cmpsb
xchg
jbe
in
enter
dec
cld
enter
cmp
and
xchg
pop
shr
or
test
outsl
and
adc
cmp
cltd
cmp
jmp
ss
xchg
lds
dec
icebp
jns
or
fidivrs
or
in
in
nop
and
jle
jns
ja
fwait
dec
lds
pushf
cmp
xor
movsl
cmpsl
sbb
mov
mov
mov
inc
aaa
les
fists
pop
scas
lret
out
js
or
sub
mov
mov
loopne
sub
push
stc
mov
aad
mov
mov
scas
mov
rcrl
cltd
dec
pop
fiadds
pop
pop
mov
fstps
jnp
push
xor
lea
cmp
jmp
jae
push
stc
mov
xchg
outsl
sub
ret
push
adc
add
loope
mov
mov
stos
aas
pop
push
cmpsb
push
push
outsl
cmc
jp
or
data16
outsb
adc
arpl
shll
pop
movsl
jnp
mov
jp
in
sar
mov
in
fisubrl
pop
sbb
ja
xor
movsb
lret
sarl
adc
inc
das
aam
mov
testl
push
ljmp
sbb
jle
pop
scas
jo
mov
push
scas
rolb
pop
add
push
inc
les
mov
mov
xchg
daa
mov
mov
ljmp
stc
icebp
inc
out
mov
pop
ret
sub
into
stc
xchg
sub
popf
pop
mov
dec
xor
test
pop
and
cmp
hlt
adc
rcrb
push
sub
xor
sbbl
nop
out
add
pop
sbb
daa
and
dec
adc
mov
mov
push
inc
xchg
xchg
orb
inc
add
pshuflw
cmp
pop
lea
cwtl
test
cmp
sub
inc
dec
xchg
insl
aas
in
push
xor
movsl
mov
test
ljmp
outsl
inc
inc
jecxz
mov
cwtl
mov
mov
imul
mov
je
enter
adcl
push
sbb
inc
mov
jnp
xor
jecxz
fdivr
mov
lret
xor
dec
xchg
add
mov
js
xor
mov
out
cmp
sbb
cmpsl
jno
aam
aas
fsubrs
push
xchg
insb
push
pop
adc
out
adc
popf
mov
mov
or
popf
addr16
add
test
xchg
mov
aam
ret
jae
lret
stos
ror
and
pop
into
lock
rorb
pop
shl
mov
lock
mov
xchg
or
in
imul
jle
mov
xor
and
jl
inc
cmpsb
add
add
mov
imul
adc
aas
cmp
lret
push
out
xchg
push
insb
inc
xchg
mov
mov
repz
pop
test
adc
jecxz
sbb
xorb
mov
into
stc
add
jnp
mov
scas
jb
jns
imul
or
sub
or
xchg
pop
push
pop
jo
popa
xor
call
pop
cmp
pop
xchg
cltd
enter
movsl
test
pop
int
xlat
adc
shrb
adc
loopne
lahf
xchg
shlb
mov
scas
ror
mov
test
dec
arpl
loop
and
dec
outsb
lds
jbe
bound
sbb
sahf
add
scas
cmp
adc
xchg
insl
cltd
xchg
mov
pop
ljmp
scas
fisubs
dec
loopne
mov
inc
adc
lret
sub
dec
xchg
call
mov
sbb
push
and
testb
mov
push
aaa
cmp
dec
les
mov
cmc
call
inc
movsl
pop
xor
dec
jns
outsl
push
push
rcll
lahf
dec
loope
sub
xor
mov
and
outsb
sub
clc
pop
jns
push
jge
jge
xchg
sti
inc
mov
jl
ret
jo
cmp
mov
mov
cmp
dec
movsl
adc
add
daa
scas
xchg
cmp
sub
xchg
je
dec
mov
push
sbb
pop
adc
jb
mov
pop
mov
popa
inc
stos
cli
iret
hlt
rcrl
insb
mov
stc
decb
xor
mov
out
aam
pop
jne
adc
add
xor
mov
mov
or
cmp
mov
xchg
adc
adc
jb
push
mov
cmp
movsb
repz
mov
fs
rcrb
xchg
push
movsb
in
adc
adc
mov
in
cmp
fdivr
data16
scas
xlat
insb
cwtl
or
roll
test
scas
jge
cli
and
lds
xchg
lds
outsb
shr
mov
or
add
inc
sub
std
cmp
xor
cmc
ret
outsl
in
lods
in
inc
je
fstpt
test
test
xchg
pop
inc
mov
cmpsb
movsb
outsl
sbb
out
push
mov
les
mov
and
pop
andl
add
out
aad
push
push
aam
fsub
xchg
pop
xchg
jb
cmpsb
imul
sbb
je
sbb
add
fstpt
insl
imul
outsl
or
or
adc
aas
dec
xor
lds
pop
dec
xchg
aas
jecxz
and
inc
sub
mov
sbb
cld
ret
jecxz
add
test
outsl
xor
sub
ds
stc
sub
mov
mov
jl
mov
cmpsl
cld
aad
je
sbb
ja
add
push
jge
arpl
sarl
jle
in
lds
lds
aaa
subb
mov
jg
or
lods
pop
inc
dec
xchg
xchg
sahf
mov
les
and
pop
xorl
mov
not
aam
xor
pop
outsl
lods
cmp
ret
movsl
xor
mov
xor
imul
test
das
inc
ds
mov
imul
pop
aad
push
stos
adc
add
or
or
iret
gs
sub
test
in
sar
inc
fidivrl
rol
sub
cmp
lret
mov
fidivrl
mov
out
fwait
push
js
cli
out
jmp
decb
out
stos
gs
add
fnsave
imul
or
adcl
sbb
test
dec
popl
cltd
inc
xchg
fcoms
ja
rcr
pop
sahf
jp
or
or
scas
mov
cld
add
cmp
add
adc
jnp
push
sbb
push
movsl
test
sub
into
cmp
imul
mov
lret
add
jbe
aad
ret
iret
add
xor
xor
cmp
les
pop
xor
add
adc
and
xchg
lock
xor
out
je
test
jo
adc
cltd
inc
ret
pop
add
adc
popf
pop
das
inc
inc
sbb
or
fbld
mov
or
pop
pop
imul
shr
stos
data16
stos
mov
insl
mov
lds
sbb
iret
add
jb
js
xor
notb
push
adc
cld
jne
and
and
in
das
jmp
mov
mov
mov
adc
fdivl
rcrb
cmp
pop
and
adcb
movsl
mov
xchg
push
mov
ret
in
jl
mov
divl
icebp
movsb
in
repz
add
lods
mov
imul
mov
or
mov
cmc
xchg
mov
cmp
or
inc
mov
scas
loopne
mov
cli
add
fcoml
push
std
and
insl
mov
mov
mov
or
stos
xchg
xchg
out
daa
xlat
dec
outsb
add
dec
mov
scas
test
dec
loop
cld
call
add
xchg
xchg
inc
mov
add
ja
loop
sbb
sub
add
lret
imull
daa
iret
jbe
enter
filds
js
pop
stos
jle
cmp
lahf
movsb
mov
fcoms
lahf
testb
xchg
mov
pop
data16
fxch
ret
cmp
push
clc
mov
jl
in
xchg
push
and
test
je,pt
loop
mov
jns
jp
jg
jle
adc
xchg
pushf
in
add
push
enter
data16
pop
xchg
cld
sbb
test
or
jle
inc
or
mov
std
mov
std
pushf
popa
push
cmpsb
sahf
popf
ljmp
leave
xor
push
in
pop
adc
pop
jbe
shlb
loop
cli
cmpb
fmull
pop
mov
mov
jl
or
loop
out
xor
inc
mov
orl
inc
push
divl
add
pushf
cltd
lret
and
lds
out
mov
divl
cli
inc
sbb
jge
push
sti
mov
adc
and
hlt
add
or
push
je
fsubs
les
sub
int
or
xchg
leave
xor
pop
jns
xor
and
ret
outsl
inc
xor
push
xor
loope
jns
popa
inc
inc
insl
xchg
ftst
sahf
inc
push
jp
or
xchg
jns
scas
sub
mov
je
sbb
leave
lahf
adc
in
xlat
hlt
insl
cwtl
test
pusha
mov
ja
fidivrs
xchg
sbb
jmp
cltd
mov
jecxz
adc
push
rorb
mov
xchg
repz
pop
xchg
xor
mov
sbb
shrl
mov
dec
or
rcrb
in
gs
sub
add
arpl
mov
add
out
pop
inc
mov
sub
daa
push
sub
in
test
dec
mov
repz
jb
jno
dec
push
scas
inc
in
shll
or
jae
imul
dec
int
fcmovne
jmp
movhps
data16
cmp
mov
and
mov
enter
sub
sub
rcrl
sbb
inc
hlt
enter
scas
testl
xor
inc
jle
xor
push
inc
mov
lahf
fs
xorl
gs
cmp
and
push
push
test
lret
jns
adc
sub
jle
into
stc
fcoml
into
fmuls
xor
pop
dec
int3
pop
cmp
xor
stc
shll
push
cmp
and
inc
cmpsb
mov
mov
fcoms
out
out
sbb
cmp
ret
ror
repnz
fadds
imul
loope
sbb
jl
dec
jns
aaa
out
pop
aam
cmp
xchg
dec
jns
fsubrl
repnz
jp
pop
out
data16
int
xchg
xchg
xchg
lret
repz
sbb
fdivrp
cmp
sbbl
and
clc
inc
nop
rcpps
icebp
hlt
mov
sub
jp
lahf
cmp
es
jmp
inc
dec
jns
and
sub
test
xchg
shrb
add
push
repz
jbe
mov
push
test
or
sbb
and
lds
mov
movsl
lcall
lret
pusha
mov
out
out
mov
iret
out
jno
mov
arpl
pop
push
imul
adc
gs
lret
js
imul
ret
cmp
mov
por
repnz
fs
cwtl
gs
out
cmp
adc
cmp
ds
inc
fldcw
mov
push
lcall
mov
push
jno
mov
fnsave
pop
xor
mov
lret
jecxz
ljmp
mov
popf
lods
mov
sarb
orb
cld
ss
pusha
adc
fdivl
xchg
mov
inc
dec
ja
inc
mov
test
sbb
dec
sbb
push
push
aas
inc
adc
jae
pop
jmp
dec
pop
mov
sahf
adc
imull
or
mov
xchg
lret
jns
jl
sbb
xor
je
pushf
and
sbb
cli
mov
fimuls
or
jns
xorb
mov
pop
xchg
push
inc
jge
mov
jbe
in
jno
pop
xchg
cwtl
rcrb
xor
stc
cmp
adc
ja
sbb
out
cmpsl
xchg
mov
divl
sti
clc
aad
jle
mov
rcrb
insb
or
jne
mov
dec
dec
iret
mov
cmp
sbb
and
pop
cmpsl
int3
jmp
lcall
inc
pop
sbb
adc
xor
lods
bnd
sub
jbe
cmp
xchg
andb
fs
mov
les
inc
xchg
sub
sbb
stos
inc
mov
xor
dec
fisubl
mov
or
out
and
loop
js
andl
insl
or
adc
les
sbb
rol
adc
cmp
inc
add
fidivl
xchg
loopne
out
jbe
jbe
daa
mov
pop
fldl
lods
into
cld
popa
sub
add
cmp
daa
shlb
xor
loop
xor
ret
dec
pop
inc
pause
mov
or
mov
sbb
sbb
in
bound
and
loop
push
shr
add
std
cmp
roll
outsb
xor
mov
repnz
sub
popa
int
loope
loopne
movsl
mov
jae
ss
cmc
xchg
stos
idiv
cmpsl
sbb
sbb
dec
xor
insl
push
add
ret
fimuls
repz
inc
jmp
xor
int3
fisubl
xor
add
sub
and
or
shrb
cmp
xor
in
mov
jae
pause
lock
les
cmp
test
test
aaa
icebp
jo
negb
cmc
outsl
push
ljmp
xchg
popl
sbb
out
int3
and
pop
lods
push
decb
push
jg
fisubl
dec
lods
mov
shlb
push
lret
aad
out
loope
ja
jle
or
mov
repnz
push
xchg
pop
aaa
push
call
stc
sbb
in
jl
sub
add
add
std
jmp
aad
xchg
push
inc
test
and
andb
inc
out
mov
lea
adc
fcomps
test
lcall
into
xchg
push
popf
sub
and
dec
jp
cli
cmp
fbld
addr16
jmp
xchg
pop
repnz
stos
lahf
stos
jbe
sbb
or
imul
in
sbb
xor
jmp
xchg
xchg
sti
adcb
jb
into
insl
mov
rorb
mov
sub
jle
sahf
mov
mov
pop
push
lods
jb
push
pop
fmul
loopne
inc
mov
sub
inc
inc
add
and
push
js
mul
mov
jp
and
mov
mov
mov
jbe
adc
insl
ficoms
mov
pop
ret
push
lock
jecxz
lea
sbb
ret
and
push
in
push
jp
xor
sbb
pop
jno
or
loopne
mov
add
inc
out
inc
sbbl
sub
mov
and
push
jle
push
dec
dec
add
inc
mov
pop
pop
cld
aas
out
mov
outsb
push
insb
lds
fdivl
adc
clc
cmp
or
inc
mov
int
push
popa
fcompl
mov
xorb
pop
inc
aaa
cmp
popf
repz
cmc
xor
roll
idivl
or
or
fisttpll
xchg
out
xor
decb
and
cmpsl
push
bound
jp
or
xor
jmp
test
enter
xlat
mov
lds
sub
cwtl
lea
rolb
sub
mov
sub
adc
andb
mov
mov
stos
mov
movsl
mov
push
pop
or
stos
in
imulb
adc
jge
in
cld
cld
repz
sbb
cmc
movsb
call
sub
sbb
dec
in
cmp
test
mov
mov
mov
mov
push
sub
es
out
lahf
cmp
int
test
mov
ljmp
push
jg
cmp
inc
rcll
scas
adc
imul
inc
loope
xchg
stos
cmp
insb
test
cmp
js
jns
pusha
sub
sbb
aad
mov
add
subb
fdivrl
xor
mov
inc
loopne
sub
adc
dec
jo
inc
and
loop
or
ficoml
jmp
adc
fimuls
call
push
sub
jnp
add
dec
dec
xor
inc
fisubrs
push
lods
sbb
daa
lock
bound
pop
rcrl
and
mov
pusha
dec
pop
xchg
cmp
pushf
inc
movsb
inc
push
lahf
in
lods
lds
sub
mov
mov
dec
inc
nop
push
out
sbb
xchg
jl
jg
mov
xor
jl
sbb
popl
mov
xchg
xor
mov
xchg
jnp
sub
testb
mov
les
cltd
and
rclb
push
repz
cmp
in
pop
int3
xlat
push
push
mov
push
out
add
sar
sub
adc
mov
mov
mov
mov
pop
xor
sbb
pop
mov
jg
xlat
cmp
and
arpl
test
sahf
int
fsubl
inc
repz
xchg
nop
mov
cmp
pop
jno
or
ss
icebp
mov
lods
out
add
and
in
and
lahf
and
inc
in
ds
fstl
inc
xor
mov
push
pop
mov
dec
shrl
inc
pusha
movsb
fidivl
insl
inc
aam
aad
mov
cwtl
mov
in
xor
cmp
inc
xchg
jge
pop
add
dec
scas
imul
andl
mov
adc
mov
loopne
xchg
inc
or
mov
sbb
sub
ret
cmpsl
mov
mov
xor
sahf
sarb
fcomps
mov
mov
xchg
ret
pop
stos
aas
nop
push
jge
pop
je
jp
mov
mov
push
jns
pop
and
shll
fbstp
mov
pop
imul
in
jmp
or
fs
inc
inc
xor
jne
call
adc
sub
cmp
adc
andl
xchg
cmc
mov
sub
shrl
adc
pop
mov
xchg
mov
out
dec
cltd
inc
orl
pop
pop
xchg
popf
cmp
cmp
pop
jl
shll
out
daa
jb
jle
mov
in
push
rorl
mov
mov
jp
int3
cmp
dec
pop
cmp
adc
push
add
or
cltd
das
fidivl
sub
push
sarl
and
shl
iret
sbb
inc
push
loope
fbstp
pop
jecxz
test
fildll
sti
jp
outsb
pop
test
pop
mov
sub
cld
insl
out
imul
iret
xchg
nop
add
push
cmp
xor
pop
or
icebp
insb
jbe
loopne
jno
jo
or
cmp
lahf
mov
jmp
pop
jns
ljmp
ret
lahf
imul
cmp
lds
xchg
hlt
cmp
movsl
jg
loope
push
add
enter
push
xchg
ret
les
insl
orb
add
push
imul
jns
mov
test
js
scas
sahf
outsl
pop
iret
push
push
xchg
adc
jne
mov
ficomps
jp
int
xchg
adc
xchg
mov
push
mov
sbb
shrb
cmp
pop
sarb
popa
aad
ss
jns
sub
add
jl
mov
outsb
jo
repz
test
xor
push
pop
sahf
adc
popa
stos
xchg
mov
sbb
xlat
add
cs
jb
or
xchg
cwtl
aaa
xor
and
bound
xor
push
pop
mov
pop
mov
xchg
mov
daa
xor
xor
test
pop
cmpsb
xor
call
scas
fiadds
icebp
jge
out
jp
insl
arpl
jae
mov
fistl
push
call
das
mov
inc
adc
out
mov
outsl
out
mov
push
or
lock
jl
xlat
out
xchg
test
int
daa
pop
pushf
jo
insb
pusha
xchg
imul
je
mov
jb
nop
cmp
pop
sbb
sub
or
push
outsb
data16
xor
mov
pop
fnstenv
and
cmp
shll
sub
pop
jae
inc
inc
cmp
out
outsl
mov
ljmp
jmp
sub
pop
in
cmp
mov
pop
cmp
shl
shll
mov
xchg
callw
sti
push
push
inc
int3
and
add
or
not
cmp
cmp
sub
pushw
push
cltd
or
sbb
dec
xchg
test
xchg
jmp
std
and
out
xchg
xorb
ret
int3
mov
mov
and
xor
push
mov
pop
rorl
dec
xchg
or
das
daa
lcall
xlat
dec
std
and
pop
je
jg
add
push
nop
sub
mov
pop
or
mov
mov
adc
mov
int3
push
pop
sub
xchg
mov
pop
call
iret
in
add
jb
xchg
insb
sub
adc
scas
mov
and
push
add
xchg
test
push
jbe
daa
jnp,pt
lock
les
mov
add
cld
sbb
flds
jno
cmc
out
fmull
xchg
pusha
ror
pop
pop
dec
sahf
add
xchg
jnp
pop
lods
call
outsb
jae
or
dec
popa
out
icebp
cmp
daa
push
add
loope
cld
int3
scas
mov
scas
and
or
add
orb
pop
test
jecxz
mov
cli
notl
jne
or
pop
inc
cmp
dec
xlat
cmpsl
sbb
xchg
cmp
or
ror
sbb
sbb
dec
pcmpeqw
es
shll
jmp
mov
loope
test
adc
jmp
popa
add
mov
mov
inc
add
cmpsb
cmpsl
push
in
and
push
jbe
sbb
push
sbb
ror
ficomps
lcall
stos
adc
dec
cmc
jmp
cmp
sbb
adc
sub
jl
adc
or
cmpsl
outsl
mov
ret
fldl
movsl
inc
fucomi
dec
rcll
das
add
push
jns
data16
loope
pop
dec
pop
push
cmp
jns
test
cli
mov
call
or
jnp
subl
cmp
pop
dec
or
scas
jecxz
push
jp
xchg
pop
ja
aam
movsb
mov
aas
test
mov
outsb
dec
and
loopne
out
pop
inc
push
xchg
lret
out
ret
ja
xchg
andl
jno
enter
sbb
enter
mov
mov
scas
mov
sar
fistl
or
js
inc
cs
cmp
cmc
sbb
pop
arpl
add
mov
test
mov
or
aaa
add
adc
and
adc
cld
shrb
mov
add
out
and
xchg
popf
and
insl
ss
fmulp
lds
mov
xchg
push
xchg
out
mov
sahf
rcrb
dec
bound
aam
int3
into
or
insb
filds
test
push
push
addl
incb
inc
ss
les
xchg
aaa
dec
sbb
lret
std
inc
and
adc
push
aad
leave
out
inc
imull
in
faddl
jp
jmp
movups
dec
or
loopne
mov
shlb
xlat
filds
inc
repz
jecxz
cld
movsl
js
push
mov
add
mov
and
cmp
push
aam
stos
pop
xor
popf
daa
stos
add
dec
daa
cmp
cmp
int
pop
mov
adcb
jmp
inc
mov
adc
cmp
mov
inc
and
mov
xchg
mov
jmp
adc
lcall
adc
mov
stos
xlat
push
pushl
je
xor
ret
cmpb
sub
xor
jno
sahf
test
jmp
test
dec
inc
std
jbe
loopne
sarb
mov
call
hlt
dec
and
inc
xor
dec
cs
insl
sbb
daa
data16
push
sbb
movsb
cmp
mov
sbbl
add
lret
fs
fstp
ret
adc
fistpl
sub
fnstcw
fs
inc
jmp
adc
fcompl
outsb
aas
into
xchg
sbb
sbb
leave
in
push
unpckhps
inc
jb
cmp
out
int
xor
loopne
push
jo
in
mov
test
out
mov
mov
xchg
inc
adc
mov
mov
push
shl
negl
xchg
outsl
lcall
data16
and
sbb
subl
push
mov
pop
mov
xor
mov
fsub
push
xchg
or
gs
sbbl
cmp
out
cmc
addr16
push
inc
push
pop
push
adc
sbb
mov
mov
xlat
cwtl
out
sbb
xor
ljmp
sbb
out
ret
cmp
mov
add
hlt
adc
and
xchg
jns
cmp
adc
fidivrl
ljmp
and
mov
dec
adc
push
das
dec
and
xchg
pop
cmp
shl
lahf
bound
xor
push
or
mov
adc
pop
imulb
ss
lret
sbb
and
mov
mov
roll
in
aad
dec
add
fdivr
push
in
sub
jmp
enter
mov
mov
mov
and
xchg
jno
imul
ss
pop
cmc
adc
ja
cmp
add
adc
mov
mov
iret
in
pop
pop
nop
psubsw
data16
and
bound
cmp
imul
int3
mov
mov
and
lods
repnz
mov
ljmp
jnp
scas
mov
pusha
cmp
clc
cs
add
xor
test
ret
mov
sti
int
pop
hlt
popa
mov
push
cmpsl
push
xor
xor
or
shlb
scas
mov
add
pushf
add
cwtl
pushf
leave
push
push
bsr
imul
dec
xchg
dec
lds
cmpsl
xchg
jae
sub
bsf
sbb
jmp
ja
int3
cmp
dec
pop
mov
dec
pusha
dec
fcomi
sub
pop
movsb
enter
or
jns
scas
pop
jae
cmp
sbb
mov
insb
cs
push
scas
xchg
stos
sub
add
loop
cmp
scas
popf
scas
loopne
popf
cli
or
pop
adc
xchg
sar
gs
clc
add
cmp
ret
jp
les
daa
or
adc
bound
add
xchg
imull
loop
mov
add
cmp
mov
int
mov
add
imul
inc
xor
test
jg
dec
mov
loopne
dec
xor
aam
pop
pushf
push
std
popf
movsb
insl
movsb
jae
ss
and
fists
cld
add
and
test
lcall
inc
loope
sub
push
push
add
sbb
adc
xchg
aad
stos
pop
fldt
insb
les
insl
mov
sub
ljmp
xchg
bound
aaa
xor
adcl
loope
add
mov
stos
push
add
shrb
cld
loop
lods
insb
sti
movsl
inc
in
pop
gs
jp
loopne
adc
ffree
adc
cwtl
pop
popa
es
cmp
sub
mov
jle
bound
cmp
cmp
fs
mov
push
mov
cmp
dec
dec
mov
push
mov
dec
xor
pop
adc
push
mov
jbe
xchg
dec
dec
movl
dec
in
movsb
sbb
repz
sub
fbld
int
cld
pop
jmp
lods
enter
push
insl
adc
test
test
xlat
fidivrs
arpl
test
add
iret
jnp
dec
jo
fisubrl
xchg
mov
call
jnp
fdivrs
cmp
and
xor
add
fstl
inc
cmp
dec
add
mov
in
jo
add
pop
rcrb
inc
movsb
loopne
fwait
out
mov
js
clc
pop
push
pushf
les
xchg
mov
sbb
sub
decb
cs
sub
inc
fisttpl
ja
jae
xchg
fimull
inc
fwait
dec
ret
adc
mov
out
jl
xor
out
sahf
jmp
inc
sub
xor
push
imul
xchg
sbb
lods
xor
out
add
adc
int
pushf
mov
lea
mov
sbb
pusha
fldenv
mov
mov
lret
and
push
sbb
sub
test
sub
xchg
and
jne
sub
lock
testl
loope
inc
stos
out
out
push
sub
setnp
jecxz
cltd
movsl
lret
push
fstpl
sbb
mov
jmp
inc
xchg
cli
inc
cwtl
cmp
addr16
push
mov
jae
mov
mov
mov
out
adc
into
mov
adc
cmp
js
dec
jl
dec
ja
xchg
call
and
jae
imul
push
fbstp
lods
jns
ret
adc
lret
add
pop
mov
mov
adc
fldcw
or
rorb
cmpsl
sbb
push
inc
test
iret
adc
cmp
pop
mov
jecxz
sbbb
xor
andb
inc
or
into
addr16
aam
dec
sbb
outsl
rorb
ffree
in
add
pop
jle
or
xor
mov
xchg
or
push
mov
bound
lret
add
loop
mov
je
mov
push
and
cmp
aam
gs
mov
inc
push
xchg
dec
aas
std
mov
enter
cwtl
jbe
pop
mov
cwtl
bound
inc
pop
add
subb
outsl
xchg
negl
in
mov
lock
xchg
mov
arpl
and
fcompl
out
sbb
lds
xchg
add
xchg
mov
dec
ljmp
dec
inc
fstp
cltd
popf
faddl
pop
arpl
out
dec
xchg
cmc
xchg
rolb
xlat
repnz
sti
mov
xor
jbe
xorb
jbe
cwtl
xor
or
sub
outsl
ficomps
into
stos
mov
push
add
pop
fwait
mov
cwtl
gs
cmp
cli
add
mov
dec
nop
xchg
mov
xchg
dec
or
mov
xor
es
pop
pop
popf
xor
lods
stc
sahf
fwait
nop
mov
ljmp
add
insb
sarl
int3
xchg
nop
std
or
inc
xchg
jb
clc
fidivrl
jl
outsb
sti
ss
imul
and
fwait
gs
clc
cld
or
out
pop
or
cli
gs
adc
inc
inc
sbb
add
insl
push
repnz
dec
sub
jge
stc
dec
lahf
cwtl
mov
mov
cmp
mov
movsl
add
fistpl
mov
xor
lret
xchg
jnp
les
loop
mov
pusha
inc
mov
xchg
adc
addr16
pop
les
mov
scas
jae
inc
or
push
jb
add
dec
mov
decl
pop
adc
mull
clc
lret
add
adc
pusha
lock
mov
divb
mov
mov
and
subl
adc
xor
cld
dec
popf
fsubs
scas
add
rcrb
mov
cld
jo
mov
inc
or
icebp
mov
dec
movsl
in
add
stos
cli
add
ss
mov
xchg
popa
daa
sub
les
xchg
or
dec
xlat
ret
pushw
sub
and
push
imul
add
pushf
es
cmp
add
xor
sbb
adc
pop
jp
cmp
lret
push
les
ja
add
mov
dec
or
xor
push
pop
setle
dec
mov
pop
pop
adc
adc
aaa
stos
cli
push
jl
movsl
cmp
in
shll
jns
hlt
loop
outsl
aam
mov
cmc
and
sub
out
adc
jmp
jecxz
fdivp
insb
xchg
cld
in
add
mov
mov
mov
jp
cli
ljmp
or
xchg
out
ljmp
jns
jbe
sub
shll
dec
movsl
and
cmp
sbb
subl
jnp
jp
pop
xchg
inc
imul
mov
divl
daa
rorb
pusha
pusha
mov
leave
cmp
fwait
aas
loop
aaa
push
movsl
or
cs
pop
mov
lods
adc
mov
mov
mov
scas
rolb
inc
popa
pop
sub
cltd
dec
cmp
imul
call
lock
test
mov
lea
inc
aad
outsl
rol
outsl
cmp
and
add
jne
xchg
sub
adc
je
cmp
and
jp
jmp
fwait
mov
hlt
cmp
xor
inc
sub
out
ss
cwtl
aaa
sbb
pusha
xchg
jo
and
adc
fs
pop
jmp
sbb
sbb
fwait
out
dec
in
stc
aaa
lds
lret
fwait
hlt
faddl
or
outsl
inc
rol
in
psrld
pop
inc
jnp
outsb
iret
add
pop
outsb
mov
add
std
insb
fucomip
jbe
cmp
mov
decl
cmp
rorb
dec
and
jmp
pushf
lock
push
fimuls
jbe
aad
test
stos
jp
int3
out
mov
outsl
jo
out
and
jge
stos
fildll
mov
jg
das
and
icebp
hlt
push
stos
mov
jle
lds
sub
push
xchg
xor
jbe
repnz
cmp
mov
test
insb
mov
xchg
scas
fidivs
dec
insl
xchg
xlat
rolb
mov
iret
pop
fiadds
cs
mov
out
loop
or
jno
test
or
es
data16
stc
mov
mov
fidivl
push
pop
pop
mov
cmp
je
sahf
arpl
mov
sub
clc
rol
inc
sub
sbbb
shll
test
test
push
cmp
incb
out
and
cs
sahf
es
lahf
ljmp
repz
pop
sahf
xor
addl
mov
cmp
cmpsb
dec
dec
fstps
inc
sub
jnp
icebp
test
loop
inc
jae
loop
mov
add
call
mov
iret
jmp
decb
aaa
pop
push
push
pop
add
push
outsl
adc
mov
push
subb
lds
orl
testl
fildll
pop
ret
popf
les
xchg
push
jae
test
xor
arpl
jmp
inc
jae
adc
icebp
test
inc
es
ficoms
xor
jg
adc
mov
or
dec
xchg
pop
pop
cmpsb
cli
mov
inc
int3
sbb
xchg
fdivr
das
test
or
pop
repnz
orb
imul
mov
or
jno
rol
sub
mov
popf
je
sbb
mov
push
mov
sub
pop
lcall
xchg
decl
pop
mov
outsb
dec
or
xchg
mov
sub
push
mov
mov
addr16
inc
add
addr16
insb
inc
mov
sub
jns
dec
cwtl
inc
cmp
imul
mov
fwait
outsb
lods
imull
and
scas
pop
insb
scas
addr16
jge
dec
clc
cmp
sahf
cmp
repz
xchg
cs
xor
in
les
movsb
ss
aas
or
cld
leave
rorb
std
jae
aaa
cmp
sub
cmp
push
aaa
cltd
xchg
push
call
das
mov
xchg
daa
inc
stos
xchg
dec
lock
dec
cltd
and
mov
mov
lods
adc
dec
mov
inc
out
xor
lock
stos
or
sbb
pop
push
out
adc
sub
shrb
xchg
adc
data16
add
add
mov
mov
sbb
and
call
push
add
imull
int3
mov
div
aas
sub
xor
popf
ja
mov
mov
sub
jl
xchg
movsb
pop
or
sarb
incb
jmp
scas
mov
ret
add
inc
cmp
rcrl
and
sub
push
sbb
pop
or
shlb
push
movsl
sub
inc
in
insl
data16
daa
mov
in
ret
mov
mov
mov
xor
xor
xor
decb
cwtl
bnd
aam
and
enter
cmc
adc
cmp
mov
lea
lods
push
or
jne
xor
xchg
lods
pop
dec
mov
js
or
std
stos
iret
sbb
xor
dec
dec
sub
mov
test
out
lods
test
xor
mov
sbb
popf
ficoms
lcall
movsl
add
pop
repnz
pop
imul
cmpsl
fists
and
sbb
pop
jl
jmp
lret
sub
loop
dec
xor
fcoml
jle
mov
sahf
loop
cmp
jns
pop
ljmp
jbe
jnp
sbb
sbb
and
insl
pop
fildll
jne
bound
sbb
add
add
jg
cmp
popa
cmpsb
in
mov
out
stc
sahf
pushf
shll
int3
stos
shll
and
xor
aaa
or
in
sub
push
lods
hlt
cmc
mov
cmp
xor
inc
sbb
ret
lea
test
repnz
cmp
inc
or
sub
pop
inc
sub
mov
fs
jp
mov
push
sbb
inc
popa
mov
mov
pop
jp
repnz
jo
les
dec
adcl
jmp
stc
sub
dec
xor
std
lock
and
adc
jge
mov
cmp
inc
dec
out
add
mov
out
jecxz
xchg
jb
test
dec
scas
mov
out
stos
cld
out
mov
stos
fxch
lret
jg
jno
xor
in
test
addr16
adc
pop
push
add
in
shll
fnstenv
adc
orl
aas
or
xchg
lods
jbe
pop
and
in
xor
jle
mov
adc
xchg
enter
mov
push
testl
dec
pop
stc
add
arpl
fstpl
pusha
in
jmp
lea
cltd
scas
cld
push
sbb
fists
lods
leave
mov
xor
fstps
repz
push
addr16
fs
shl
inc
sub
xchg
add
jecxz
in
insl
and
pop
nop
icebp
loopne
in
pop
and
pop
push
orl
and
cmp
cltd
add
push
mov
bound
out
add
xor
dec
mov
xor
mov
xchg
mov
test
cmpsb
mov
push
sbb
data16
dec
insb
jo
inc
sbb
rol
xor
incl
push
gs
sub
dec
push
jae
inc
add
outsb
insl
js
loop
sub
add
or
in
insb
adc
pop
repnz
cmp
mov
jecxz
jns
fucom
stos
stos
mov
ret
cmpsb
negb
xor
pushaw
lea
imul
sub
cmp
adc
pop
lahf
xchg
pop
sub
mov
imul
orb
rclb
xchg
push
rsqrtps
mov
add
in
xchg
jbe
pusha
pop
mov
pusha
repz
in
pop
pushl
xorps
bound
jae
mov
inc
xchg
testl
jae
jp
cmpsb
roll
add
das
movsl
adc
shl
je
leave
xor
mov
fs
and
xchg
dec
or
inc
movsb
cmp
add
hlt
or
cmp
les
fisubl
fisubs
cmp
xor
data16
cmpsl
dec
lds
aaa
inc
mov
push
mov
or
mov
cmp
clc
push
mov
les
jmp
sbbb
xchg
pop
adc
mov
xchg
jmp
adc
mov
sub
and
jmp
sub
cmpsl
push
dec
push
call
mov
or
mov
dec
leave
pop
jbe
andl
jnp
sbb
mov
or
mov
lds
loop
mov
and
inc
adc
adc
cs
scas
js
push
test
lods
xchg
lods
xor
xchg
adc
jae
sbb
add
icebp
jno
outsb
insl
js
lods
orb
ret
fbld
xor
sub
jbe
or
cmc
cltd
pop
pop
lods
jecxz
cmp
sub
jle
in
jae
mov
pop
loopne
push
test
aam
pop
adc
imul
mov
dec
adc
stos
das
js
adc
movsb
push
jb
mov
lcall
xor
outsl
pop
jecxz
or
lods
aaa
mov
and
inc
aaa
adc
stos
pop
adc
mov
pop
mov
jl
aas
add
jbe
movsl
cmp
leave
and
jg
jecxz
lcall
pop
add
jb
pop
mov
bnd
cmp
inc
mov
and
test
jp
inc
dec
popa
roll
repnz
jne
aam
push
fs
fdivrl
jmp
add
mov
jne
and
addb
and
jnp
adc
jne
jb
adc
into
add
repz
ds
mov
nop
jno,pn
dec
ljmp
mov
imulb
dec
adc
adc
or
test
es
mov
mov
add
sbb
ja
jno
lret
add
inc
xor
test
fwait
mov
fidivrl
cmpsb
jbe
push
mov
xor
push
jmp
fidivl
jmp
pop
pop
cld
push
jbe
mull
imul
adc
dec
sbb
ret
dec
bound
add
or
inc
rcrl
sbbb
push
dec
cld
push
cld
cmp
dec
iret
pop
sub
fbld
mov
fwait
inc
cs
mov
jge
in
sbb
inc
rcrl
stc
push
inc
scas
jae
in
lar
add
push
pop
jno
push
xor
mov
loop
mov
rorb
sub
mov
shlb
pop
add
test
loop
cmpsb
stos
adc
je
push
sub
push
es
pop
cmp
out
jmp
pop
clc
cli
scas
dec
push
xorl
shll
aas
mov
fistl
cmp
and
je
rcll
xor
loopne
mov
xchg
xor
repz
mov
pop
jo
inc
std
push
sub
fstpt
test
sub
cs
mov
adc
iret
pop
mov
pop
enter
xor
cmp
out
fstpt
xor
mov
pop
cld
ds
js
lret
std
lds
push
shlb
pop
jae
adc
jecxz
jl
sarb
mov
fsub
sti
push
lret
shrl
and
push
pusha
jae
adc
add
ds
jmp
cmp
or
fdivrl
xchg
xchg
jns
and
fadd
mov
imul
sti
negb
pop
stos
lods
inc
xchg
ret
test
clc
sbb
dec
add
pop
pop
push
pop
sub
neg
into
push
std
add
cwtl
iret
dec
push
or
sbb
add
inc
and
push
aas
movsb
leave
sub
or
jg
mov
das
iret
loope
jmp
lock
jno
and
mov
leave
sbb
or
js
inc
fildll
push
add
orb
int3
ja
mov
js
sub
movsl
pop
mov
adc
enter
push
and
loope
out
out
push
xor
leave
fiadds
or
gs
stc
fnstsw
mov
sub
out
sbb
mov
aas
andb
dec
int
sti
sbb
inc
add
xchg
lods
sbb
bound
and
sbb
test
xchg
push
orl
fstpt
es
inc
cmp
mov
adc
lods
fs
popa
fcoms
sbb
push
aam
ficoms
insl
popf
test
rol
sub
or
in
mov
cmp
cmp
xchg
pop
insb
jl
daa
das
push
cmp
ret
cs
stos
das
adc
lock
es
and
andl
nop
lds
xchg
subl
dec
pop
cwtl
les
xchg
push
movsb
dec
dec
jl
jmp
pop
mov
jle
mov
xchg
ficomps
add
pop
rcl
imul
repz
lds
scas
dec
enter
and
xchg
out
or
stc
aam
mov
xor
dec
arpl
dec
aam
outsl
insl
xchg
pop
ss
sub
shlb
lret
mov
jl
outsl
fcomps
inc
out
jns
icebp
shll
ret
jmp
rcll
or
mov
xrelease
jb
lret
sbb
or
mov
xchg
cmpsl
hlt
jo
insb
lret
and
mov
cmp
inc
inc
loopne
sub
and
icebp
or
pusha
in
loopne
dec
out
and
or
aad
jle
and
pop
or
lahf
int
sub
sub
jp
xchg
in
insb
enter
sub
mov
cmp
pop
outsb
in
stc
cmp
add
insl
push
lods
paddb
add
pop
in
or
das
pop
loop
add
and
jae
xor
push
pop
mov
aad
stc
pusha
mov
push
jne
sub
punpckhbw
scas
xor
hlt
leave
psubusw
fdivrl
in
ds
sbb
stc
prefetch
pusha
shlb
notl
movsb
lcall
pop
dec
enter
pushl
insl
movsb
mov
or
mov
sub
fisttpl
push
inc
mov
cltd
push
cli
fstpl
jbe
jg
ficomps
jp
pop
inc
pop
stc
shrl
iret
sar
adc
jo
les
add
data16
jnp
sub
dec
jle
mov
test
cmpsb
xchg
icebp
int3
movsl
repz
ficomps
les
xchg
pushf
popf
mov
pop
ret
dec
jb
pop
pusha
jno
fsin
jns
adc
mov
test
dec
jae
push
lret
sub
pusha
into
and
cs
mov
addb
aad
insb
xchg
xor
xor
lods
push
jmp
das
into
pop
dec
xchg
in
test
shrb
cmpsb
adc
data16
push
xor
cmpsb
cmp
xor
mov
sarb
stc
imul
xchg
bound
shl
jnp
sub
dec
mov
xchg
sti
mov
push
lds
dec
adc
jns
aas
jo
cmp
fnstsw
imul
jne
das
inc
jmpw
shrl
mov
out
add
jbe
add
adc
in
ja
sbb
stos
mov
cmpsl
cmp
lds
mov
out
icebp
leave
xor
out
out
jp
fcoms
mov
inc
push
divl
mov
pop
fwait
imul
kmovb
dec
call
fwait
push
jne
iret
adc
fwait
mov
scas
aam
outsb
popf
in
dec
ljmp
adc
loope
lcall
fcomps
pop
mov
jb
mov
or
mov
xor
bound
or
mov
in
imul
mov
movsb
xlat
arpl
es
cld
insb
pop
xchg
xchg
ret
stc
shll
xchg
xchg
nop
stos
lea
cltd
rcrl
clc
sbb
jecxz
mov
test
sbb
je
rclb
andl
int3
test
cmp
leave
ss
clc
inc
or
cli
add
xor
out
daa
push
mov
xor
jae
stos
adc
sbb
cmp
les
xchg
mov
inc
or
into
cmpsw
or
or
popf
mulb
sbb
sub
loopne
leave
xchg
repnz
lods
loope
cltd
pop
leave
cs
add
mov
xor
hlt
sti
xor
aad
cli
stos
daa
sbbb
push
dec
mov
repz
int3
adc
repnz
arpl
sub
sub
cmp
push
mov
scas
or
ljmp
or
sub
into
test
inc
mov
pop
mov
outsb
pop
or
xchg
or
out
xor
sbb
inc
jae
insb
divl
and
xor
push
push
pop
push
out
addr16
call
ret
cmc
roll
add
sub
sbb
hlt
aam
leave
pop
lods
mov
xlat
cs
mov
jae
lret
loope
shll
insl
test
jmp
pushf
adc
imul
fmulp
insb
scas
out
xchg
xor
into
cmc
out
push
outsb
scas
cmp
sbb
mov
mov
mov
pop
pop
pop
ss
jmp
cli
cs
ljmp
jb
mov
dec
sahf
push
andb
fnstenv
mov
popf
pop
outsl
sbb
outsb
ljmp
xchg
add
cs
mov
pop
ds
mov
and
jle
aas
xchg
popa
call
lock
ret
movsl
push
xchg
test
xlat
adc
ljmp
dec
pusha
jl
cmp
and
mov
or
push
sub
and
loop
sbb
inc
out
shlb
jg
push
push
mov
insb
out
push
fdivs
push
aad
pop
scas
test
and
or
loop
pop
cmp
pop
das
sub
push
std
and
lea
dec
enter
sub
or
jnp
lods
aas
js
pop
ss
in
stos
or
and
mov
and
sub
sbb
xchg
mov
push
push
test
stos
fisubl
add
rol
mov
jnp
and
out
mov
or
inc
sbb
mov
sub
add
cmp
jb
jg
fcmovnb
pop
xchg
cmp
lea
out
xlat
fwait
inc
in
test
jnp
xchg
std
ds
push
js
and
in
dec
pop
pop
pushf
sbb
jg
mov
mov
xchg
cmpsb
mov
sbb
fldcw
add
aam
jecxz
cld
std
push
popa
cmp
mov
xor
mov
mov
sahf
push
mov
std
push
jo
cmc
cli
lret
and
xor
in
pop
fs
or
pop
insb
push
sbbl
test
push
daa
pop
movsb
inc
or
pop
fwait
stos
xchg
loop
loopne
xchg
or
pusha
lret
imul
addr16
mul
lds
cs
jle
push
stos
add
and
jae
cmp
add
mov
idivb
repz
cmp
sbb
push
rsm
cltd
jmp
mov
shll
insl
pop
cmp
xchg
sbb
popf
and
jecxz
sbb
inc
shl
add
rolb
insl
enter
mov
adc
paddd
sarl
pop
push
fsts
testb
nop
mov
xchg
lea
call
fisubl
cltd
hlt
imul
and
mov
lret
notl
add
ret
pop
fistpl
pop
les
andl
xchg
lock
daa
stc
push
sub
sbb
bound
sbb
fsubrl
sbb
push
inc
dec
jecxz
add
inc
and
ret
mov
adc
push
inc
pop
hlt
xor
mov
push
sbb
inc
or
sarb
fwait
shll
push
jle
pop
mov
rcll
inc
cmpsl
sub
push
movl
pop
jmp
mov
or
mov
leave
xchg
ss
lock
cmp
mov
loope
or
inc
iret
xchg
add
pop
outsl
and
loop
push
push
sahf
dec
jp
test
aas
cmp
imul
mov
adc
enter
scas
xor
push
pushf
xchg
daa
xor
int
lret
shlb
mov
ljmp
adc
ret
sbb
test
xor
xchg
ds
mov
rep
in
xchg
mov
rol
xor
xor
mov
sub
jp
inc
adc
lret
mov
shlb
jns
adc
xchg
sub
and
mov
xlat
mov
jae
fisubs
jb
push
push
inc
pop
mov
sub
add
mov
mov
jge
push
sub
daa
aas
int
loop
aam
cmp
cmp
inc
sub
cmp
or
cwtl
loopne
lods
inc
dec
add
sub
jmp
lods
gs
inc
aam
cmp
idivb
fldl
sbb
adc
add
stos
scas
jno
xchg
ja
jge
and
push
inc
movsb
loopne,pn
outsl
rolb
scas
cmpsl
sar
movsl
orl
mov
movsl
inc
outsl
repnz
out
fadds
out
adc
push
push
sbb
or
cmp
loop
cwtl
cmp
cmc
fnstsw
jle
mov
mov
outsl
or
int
sbb
loopne
mov
in
xchg
pop
cli
loop
push
rorl
and
jmp
out
dec
js
bound
xlat
dec
je
pop
sbb
cld
add
push
adc
icebp
jle
inc
and
lret
in
repnz
xchg
je
rcl
push
lret
dec
cmp
outsl
jl
scas
fisttps
loopne
pop
sarb
gs
ret
aas
dec
dec
mov
xor
fs
xor
adc
in
aad
inc
lcall
dec
and
xor
inc
shl
out
shr
sbb
sbb
mov
inc
stc
mov
mov
in
cmp
out
mov
push
iret
mov
xlat
daa
dec
adcb
test
pop
mov
negb
out
imul
popa
sub
pop
mov
inc
add
mov
xor
xlat
test
shll
sub
push
out
outsl
scas
or
pop
mov
iret
rcrb
je
insl
mov
cmp
jb
test
cs
add
pop
adc
jl
push
adc
lahf
nop
outsb
mov
cmp
xorb
gs
xchg
pop
adc
pop
cmp
jno
add
lret
pop
scas
adcb
hlt
dec
cmp
shl
and
jne
adcb
inc
cld
shlb
xchg
inc
sub
mov
and
cmp
xor
mov
test
mov
imul
add
inc
push
xchg
xchg
sub
dec
sub
lret
push
out
and
stos
jns
jmp
ret
cs
mov
sbb
mov
mov
jne
mov
dec
fcomi
and
or
dec
xchg
imul
loop
and
mov
nop
push
rorb
insl
into
in
popf
dec
xor
xchg
fwait
js
xor
les
mov
xchg
mov
notb
jnp
mov
inc
in
jbe
call
mov
cmpsl
in
sub
jbe
push
xor
mov
add
mov
rcl
jmp
insb
ds
out
or
orl
mov
cmpsl
int
xlat
mov
xchg
cmp
add
addl
into
test
push
pop
popf
rorl
inc
xchg
imulb
je
pop
jnp
push
jo
xchg
lock
ret
mov
jecxz
jno
in
mov
repnz
fnstenv
rolb
cmp
and
cmp
lret
inc
or
adc
rcr
ror
pop
das
inc
add
cld
pushf
std
xchg
addr16
lret
adc
jl
inc
jae
data16
jecxz
std
mov
jecxz
in
dec
leave
dec
adc
shll
in
inc
push
call
ja
sub
pusha
push
mov
jae
imul
jns
mov
cmc
lcall
or
mov
xor
popf
jmp
xchg
pushl
or
cmp
xchg
add
xor
or
sub
inc
dec
sub
lcall
and
xor
arpl
and
jnp
pusha
or
cld
aas
cltd
in
sbb
push
sahf
push
adc
int3
out
sarb
aam
loope
inc
xchg
xor
dec
enter
adc
pop
push
sbb
and
je
xor
test
mov
fwait
or
stos
mov
adc
mov
je
gs
fildl
out
pusha
inc
jg
rcl
cmp
std
pop
and
sbb
mov
push
cmpsb
cmp
out
push
or
jno
loop
scas
into
inc
xlat
into
movsb
lds
pop
push
repnz
popf
pop
sub
insb
push
stos
out
scas
loopne
aas
jo
inc
pop
push
int
jp
pop
or
mov
cmp
sahf
test
rolb
stos
jae
rorb
cltd
mov
dec
andl
adc
imul
cmp
js
add
cs
mov
or
push
mov
arpl
lret
js
xor
xor
jnp
push
jmp
dec
mov
mov
and
jp
inc
in
xchg
sbb
xchg
sbb
imul
into
mov
ret
push
jns
mov
xchg
outsb
daa
fidivrs
add
sbb
addr16
jmp
out
orb
push
add
mov
cmpsb
inc
inc
repz
dec
ljmp
push
and
cli
addr16
add
or
ja
mov
int
pop
ja
jo
push
in
xchg
add
mov
push
sub
repz
imul
sbb
push
sub
aam
outsl
out
in
insb
sub
movsb
mov
lods
jnp
sbbl
sbb
sahf
sub
dec
inc
inc
in
adc
xchg
leave
imul
mov
mov
dec
call
cmc
rolb
ds
sub
xor
cmp
push
push
ror
pop
lret
mov
jl
mov
adc
add
and
sub
js
cli
cs
xor
inc
sub
lcall
sbb
jle
push
add
pop
in
fwait
scas
insl
jg
jae
daa
push
cmpb
inc
fs
or
sbb
in
pop
ret
dec
rcrl
daa
jnp
mov
scas
push
and
jmp
push
sub
sarl
pop
jl
add
xchg
sbb
jge
jo
add
jb
cmpsl
xlat
xchg
faddl
cs
adc
je
cmpsl
lahf
in
pop
dec
and
mov
dec
stos
test
fbld
push
idivb
in
mov
and
iret
xchg
cmp
fcomp
push
test
push
mov
je
ljmp
lock
jmp
imul
movsb
mov
punpckhbw
in
adc
push
outsl
imul
flds
and
jge
addb
loop
mov
mov
mov
aad
das
data16
iret
fisubs
and
jmp
push
das
xor
test
mov
pop
sub
ja
jo
fldt
icebp
daa
jg
and
mov
inc
jge
mov
mov
cwtl
jl
lahf
daa
adc
mov
scas
pop
cld
out
xchg
aam
cmp
lahf
sbb
and
fcmovbe
jb
ss
lock
ljmp
lcall
ret
in
pop
add
jnp
mov
xchg
sub
addr16
adc
add
movb
ds
jge
push
out
jbe
adc
mov
mov
icebp
sahf
inc
mov
jp
dec
or
stos
repnz
shlb
imul
stc
push
leave
aam
jo
mov
sub
scas
mov
mov
data16
mov
aad
stos
insb
dec
dec
mov
add
mov
or
test
jle
test
sub
mov
mov
cmp
shll
sbb
loopne
pop
add
dec
inc
rolb
jne
sti
stos
cmp
mov
ret
adc
mov
push
or
inc
dec
xchg
add
xchg
inc
out
jecxz
idivl
sbb
imulb
xor
sub
mov
or
xchg
mov
sbb
call
mov
cmc
lcall
lea
insl
inc
mov
xlat
jmp
pusha
out
popl
dec
lret
adc
iret
sahf
pop
mov
mov
aam
fidivrl
ljmp
sub
lock
in
repz
inc
std
or
jg
sub
cmp
loopne
subb
rolb
mov
jne
mov
mov
mov
push
mov
jne
ja
movb
mull
push
pusha
test
mov
cmp
dec
mov
rdmsr
push
movsl
dec
out
in
fwait
insb
lods
or
pushf
mov
dec
push
scas
roll
mov
jmp
cld
adc
or
cmpsb
pop
inc
xor
mov
scas
cmpsl
xchg
add
xchg
arpl
leave
leave
inc
and
pop
dec
jno
push
dec
xchg
xor
and
cs
pushf
insb
fcmovnbe
cwtl
mov
loop
or
pusha
mov
or
push
cmp
push
mov
shll
inc
out
in
jae
imul
in
stos
lahf
push
mov
aam
pop
in
adc
add
stos
mov
dec
mov
jne
fstpt
mulb
jo
and
mov
push
xor
icebp
and
out
mov
sub
pusha
xchg
push
sar
sar
call
mov
sub
test
mov
outsl
sbb
push
xor
cmpsb
fadd
loope
pop
mov
enter
inc
mov
mov
sub
jne
insb
jp
cmp
mov
loopne
repnz
and
push
or
sar
sahf
fildl
sub
and
pop
mov
or
lahf
push
js
jb
sbb
lcall
mov
or
idivb
mov
ss
mov
dec
orl
dec
outsl
jno
dec
mov
les
sub
loop
xchg
mov
pop
mov
cmp
xchg
sbb
sub
rorl
imul
imul
pop
out
ret
push
mov
mov
add
in
iret
mov
cmpl
in
adc
push
inc
fisubs
push
mov
sbb
or
push
nop
add
mov
xchg
mov
xchg
daa
and
jl
sarl
imul
clc
imul
mov
ljmp
xchg
das
aad
xor
mov
inc
mov
inc
int3
adc
add
xchg
subl
mov
push
jge
sti
gs
push
mov
jo
aam
mov
sub
test
in
push
jecxz
aaa
or
mov
push
fstps
or
scas
fldt
arpl
adc
fidivl
bound
jecxz
push
push
mov
ret
lock
dec
xor
cmc
add
sub
pop
fsts
add
mov
push
or
adc
fidivrl
jne
out
nop
cld
jne
outsl
shlb
mov
aad
scas
jne
xor
scas
push
mov
xchg
das
push
jne
add
repz
sbb
std
xchg
adc
cmp
jns
popa
es
into
adc
je
xor
mov
push
sbb
rcr
ja
out
sub
push
cmp
cltd
lcall
sub
xchg
inc
dec
mov
testb
jno
xchg
add
out
popa
pop
sbb
sub
mov
mov
rol
fcmovnbe
pop
dec
lds
js,pn
test
std
ss
xor
pop
sti
mov
pop
mov
mov
jecxz
push
xor
aas
pop
inc
test
inc
js
rclb
adc
add
insb
das
mov
outsb
into
adc
fstps
inc
push
xor
imul
cwtl
sub
ds
stos
rcll
ljmp
loopne
dec
movsl
jbe
rcll
out
mov
and
mov
sub
push
fidivrs
lea
and
and
adc
out
mov
or
sahf
xchg
cs
in
popa
hlt
imul
rcrl
and
jecxz
sbb
out
cmp
dec
add
sbb
push
pop
or
inc
repnz
push
jl
or
cs
test
mov
stos
out
xor
adc
out
lahf
adc
js
jo
imul
mov
sti
loopne
push
dec
test
test
jmp
int3
arpl
cmp
xor
and
jb
inc
inc
xchg
jmp
xlat
in
sub
ret
jge
js
sub
dec
icebp
mov
xchg
push
or
sar
outsl
xchg
adc
fldlg2
mov
sub
sub
out
dec
inc
mov
test
mov
cmc
shr
push
insl
stc
xlat
xchg
sti
or
into
push
sahf
or
loop
add
mov
ss
cmp
cmp
lods
dec
sub
inc
lret
pop
ds
loope
xchg
movsb
ljmp
outsl
mov
add
mov
jo
mov
sub
mov
xchg
adc
and
test
cmpsb
bound
or
aad
xchg
xchg
shlb
jae
mov
xor
orb
jno
mov
inc
sti
inc
iret
negb
icebp
jl
pop
test
mov
inc
inc
mov
push
lods
inc
loopne
hlt
adc
cmp
es
sub
mov
mov
jmp
inc
cmovp
mov
test
inc
cmp
ret
mov
popa
lea
jae
dec
mov
adc
mov
xlat
repz
lods
sti
movsl
fs
and
xchg
movb
cmp
push
jmp
clc
fsubrs
insb
jae
out
clc
in
cmp
push
pop
inc
cmp
rcll
cmp
mov
cmpsl
insl
insb
mov
pop
xor
nop
mov
inc
sub
mov
in
xor
or
cmpsl
iret
outsl
notb
mov
push
jo
cmp
roll
inc
sbb
sbb
inc
adc
sti
pop
jns
xchg
xor
ret
or
mov
mov
lret
lahf
sbb
pop
jg
mov
sbb
pop
ret
mov
ror
nop
dec
jl
pushf
mov
add
mov
std
push
into
out
sbb
push
repnz
mov
and
mov
outsb
adc
test
mov
push
dec
subl
cmp
jecxz
push
lea
repnz
push
ss
imul
mov
out
ficompl
out
shll
mov
enter
ret
and
jne
xlat
jbe
mov
mov
out
push
push
push
fucomp
jp
dec
push
sahf
push
inc
push
or
sub
int3
add
cmpb
iret
sbb
dec
sbb
inc
fcoml
mov
andl
fisttpll
xlat
ljmp
mov
js
add
pop
sbb
fisttpll
stos
xchg
das
test
push
es
xor
push
int
and
stc
mov
mov
jnp
pop
loopne
scas
mov
bound
mov
sub
pop
cmp
cmpsb
sbb
mov
hlt
mov
xor
mov
lds
hlt
dec
dec
push
and
test
out
stc
pop
lret
cmc
out
sub
int
push
pop
std
sahf
cmp
ss
adc
pop
pop
and
xor
push
icebp
sub
incb
imulb
fs
lahf
mov
fiaddl
testb
sar
add
or
xchg
mov
sub
dec
arpl
fisubs
rcrb
fidivrs
pop
cld
fs
inc
push
mov
mov
mov
push
into
xchg
out
and
outsl
fstl
push
push
iret
js
sbb
mov
ficomps
pop
xchg
xor
arpl
out
and
xchg
cmp
mov
mov
call
or
shl
xchg
pop
sbb
jge
inc
sub
and
daa
jmp
mov
les
dec
sarb
popa
sbb
sarb
adc
filds
das
ss
xchg
xor
jns
or
leave
cwtl
cwtl
xor
lret
int
sub
pop
jg
pop
negb
sub
out
cmp
aaa
or
fcoml
push
fucomi
aam
aad
push
inc
add
xor
xlat
xor
push
pop
movsb
rcr
mov
movsl
mov
mov
mov
cmp
fsub
push
jg
pop
push
movsb
lea
pop
pop
adc
aaa
adc
lret
sahf
pushf
xchg
enter
cwtl
cltd
push
jle
jns
jmp
fsubl
inc
into
loop
pop
adc
je
sub
or
clc
push
in
bound
jns
add
add
sbb
bound
mov
shlb
add
loope
ss
adc
lret
insl
repnz
push
fldt
fsubrs
imul
pusha
adc
pop
inc
into
mov
stos
mov
sbb
jmp
pop
stc
cmp
inc
scas
cwtl
pop
dec
mov
sahf
mov
shll
cmc
test
adc
fcmovbe
testl
xor
mov
xchg
adc
lcall
pop
push
inc
into
jle
push
mov
cmp
xchg
mov
cmpl
sub
pop
insb
testb
inc
jno
idiv
cmp
jle
cmp
aas
ljmp
cmp
jb
adc
jns
sub
stc
mov
sbb
xlat
imul
iret
sti
sbbb
mov
fwait
jg
add
out
inc
or
ljmp
or
lods
mov
jge
test
lcall
xor
add
xchg
sub
sbb
bound
lods
push
adc
or
mov
sbb
das
cmpsb
mov
jg
cmc
mov
adc
dec
xchg
xchg
test
sbb
fdivs
dec
or
adc
xchg
fisubs
cld
xchg
sbb
inc
push
fstl
inc
lea
cli
mov
jns
add
pop
inc
aaa
scas
js
stc
arpl
ret
cmp
cmp
cmp
mov
stos
inc
pushf
neg
imul
frstor
jmp
mov
inc
push
pop
push
mov
jo
jmp
adc
xor
cmp
xor
xor
sub
jb
idivl
xbegin
mov
mov
and
and
stos
sbb
mov
adc
cmp
mov
call
or
push
mov
enter
out
pop
and
lcall
jns
outsl
test
adc
std
enter
gs
push
in
mov
xchg
and
movb
mov
out
pushf
jecxz
aaa
mov
in
sahf
pop
mov
adc
pop
mov
ror
and
nop
cli
inc
dec
push
or
jb
test
mov
outsb
adc
push
cli
rcr
repnz
xchg
pop
out
push
xchg
jo
test
mov
jns
pop
jbe
jp
sbb
push
dec
out
int
test
std
sahf
shrb
xchg
clc
sahf
cmp
sarb
push
aaa
sub
mov
sbb
mov
jne
push
and
mov
inc
push
nop
lods
lret
inc
inc
xor
mov
pop
lds
jae
fcmovnu
dec
outsl
dec
out
mov
daa
jb
dec
or
sahf
in
push
lahf
mov
sbb
fld
ffreep
cltd
testb
and
mov
mov
daa
jp
sub
push
nop
in
fstpt
sbb
dec
lods
fidivrl
push
adc
ret
push
inc
mov
jo
sbb
push
dec
dec
jbe
jns
and
adc
push
pushf
ds
icebp
and
add
mov
aad
call
aam
out
popf
in
mov
cwtl
mov
dec
and
sbb
mov
xchg
enter
xlat
lret
pop
out
das
add
ret
mov
xlat
push
mov
mov
and
and
lods
inc
sarb
dec
lret
rolb
call
jmp
div
in
jae
and
ds
mov
mov
mov
cmp
jecxz
mov
inc
mov
fldl
push
mov
out
adcl
dec
das
cltd
loope
pop
jl
mov
jecxz
adc
mov
add
mov
jmp
lock
pusha
jae
mov
xchg
add
sub
and
mov
jns
mov
es
js
push
in
push
lock
mov
ret
in
outsb
lret
pop
sub
xor
pusha
lret
dec
stos
mov
cmpsl
fwait
fs
stc
cld
test
rorl
mov
fbstp
stc
mov
arpl
mov
inc
fsubs
cmp
pop
add
rorl
out
push
mov
xor
out
sbb
mov
sub
xchg
and
or
out
push
outsb
inc
addr16
in
push
into
xchg
lret
repz
xchg
jne
push
mov
test
mov
js
dec
lcall
cli
mov
inc
push
test
lods
out
mov
sbb
xchg
dec
test
hlt
mov
inc
push
mov
mov
sarb
je
cmp
ror
arpl
test
iret
mov
nop
pop
pop
sub
insb
dec
notl
icebp
jns
jnp
arpl
ss
inc
fildll
xchg
testl
or
dec
dec
daa
popf
pop
adc
dec
sbb
push
jecxz
out
sub
sub
lret
jno
pushf
outsb
sarb
sub
ror
and
dec
dec
adc
pop
lret
lods
shll
inc
push
xor
mov
mov
mov
mov
push
jb
sbb
inc
les
icebp
jno
push
lods
leave
aaa
inc
arpl
and
xor
clc
push
push
pushf
in
xor
push
cli
mov
push
mov
push
lods
mov
fldcw
bound
repnz
sbb
test
test
inc
jb
into
xchg
sbb
test
inc
imul
dec
decl
lods
out
clc
fs
xor
mov
cmp
xchg
arpl
mov
xchg
xchg
pop
add
mov
clc
ret
ret
sbb
js
push
cmpsl
mov
iret
push
pop
cmc
mov
cmc
lcall
lcall
and
dec
in
les
ljmp
ret
or
add
js
or
xor
out
arpl
add
ljmp
jo
or
stos
push
xchg
inc
sbb
in
mov
cwtl
cld
xor
addr16
jge
inc
fistpll
ret
test
push
pop
sub
fsub
sbb
sbbl
mov
jbe
mov
imul
icebp
mov
aad
out
call
bound
push
hlt
addr16
addr16
push
gs
mov
or
lcall
or
jae
rorl
xor
and
xor
xor
pop
mov
inc
fidivs
xor
repnz
fstpl
sub
mov
adc
mov
xchg
cli
mov
jbe
inc
fists
adc
add
or
js
xlat
mov
or
mov
pushf
sar
jb
sbb
stc
pop
push
jno
inc
int3
lods
push
and
xlat
mov
fiadds
and
xchg
mov
jne
test
dec
sbbl
add
cmp
cmp
inc
mov
jmp
sub
jecxz
push
pop
rcr
cmpsl
xchg
out
cmp
out
clc
cmp
sub
push
adc
gs
pop
enter
rclb
add
rcrb
inc
and
outsb
sbb
sahf
cmp
and
dec
xchg
imul
sub
dec
ret
cmpsl
cmc
push
pop
sbb
xchg
inc
cmp
mov
movsb
int
add
inc
out
push
xchg
out
sbb
inc
jecxz
xchg
lret
jbe
pop
in
pop
mov
xor
jge
push
daa
outsb
sub
aam
aam
outsl
sbb
mov
icebp
cli
cmc
push
lods
pushf
adc
stos
scas
add
loop
mov
mov
arpl
int3
pusha
es
dec
xchg
cli
xchg
dec
push
xor
mov
mov
xor
xchg
dec
clc
add
enter
inc
jns
icebp
sub
es
cmp
repz
push
in
jg
dec
jecxz
sub
xor
xor
lret
aam
sub
stc
sub
dec
push
in
sub
mov
inc
xor
orl
test
das
cmp
mov
push
jmp
int3
push
dec
fbstp
daa
adc
add
jg
pop
cld
addr16
outsb
les
lret
negb
adc
negb
mov
ss
xor
sti
cmp
out
sub
movsb
push
pop
xor
and
cmp
add
cmp
es
fcoml
popf
call
rclb
jo
das
jnp
jmp
inc
and
inc
out
insb
jge
lea
out
cld
adc
popf
lock
xlat
mov
pop
push
pop
mov
data16
fdivrs
shr
out
cs
btc
adc
sub
fstl
mov
pop
and
mov
inc
xor
int3
shrl
jmp
repnz
xlat
push
xchg
or
outsl
outsl
xor
xchg
lret
pushf
pusha
push
xor
fldl
rorl
imul
push
xchg
pop
and
cmp
ret
mov
in
xchg
insb
inc
inc
arpl
lods
fnstsw
arpl
shlb
in
test
cltd
cmpsb
out
hlt
test
jno
mov
sarl
lea
shrl
int
mov
or
pop
and
push
mov
cmp
mov
inc
xchg
outsb
adc
stos
xlat
push
push
cmp
data16
out
jae
cmp
xchg
rclb
lahf
inc
dec
sub
aam
xchg
pusha
push
scas
test
lea
adc
xor
loope
mov
aaa
rorl
jns
mov
dec
mov
sahf
inc
ja
leave
lcall
addl
mov
inc
in
mulb
or
loope
sti
xor
mov
cmp
sub
jmp
push
int
xchg
aad
pop
inc
jo
xchg
iret
mov
js
pop
jge
xor
fnsave
ret
call
xor
mov
cmp
and
sub
lea
or
push
xchg
mov
sbb
lcall
mov
stos
or
gs
adc
adc
push
mov
sbb
pop
sub
das
and
adc
sbb
mov
fnstsw
and
fcmovnu
repz
jne
lods
or
or
or
fisubrs
dec
ret
in
lods
cld
jo
test
mov
pop
testl
adc
jb
inc
pushf
mov
mov
aad
repnz
in
and
mov
inc
mov
stc
ret
sar
mov
sti
pop
pop
inc
push
push
aas
out
and
pop
sub
loope
dec
outsl
adc
cmp
mov
mov
cmp
xor
aad
adc
sub
xlat
dec
int3
xor
adc
or
lahf
in
dec
push
in
addl
mov
inc
xorb
not
mov
jno
jae
in
popf
hlt
add
bound
sub
test
in
sahf
xor
int
cmp
roll
scas
clc
insl
in
xchg
and
push
or
leave
test
push
std
jp
xor
data16
aad
mov
jne
lods
and
xor
cs
sarl
xchg
xor
mov
pop
pop
std
shlb
push
sbb
mov
orb
push
cmp
dec
or
cmpsb
int
push
add
lea
ss
leave
jns
cltd
pop
lret
mov
insb
adc
mov
inc
adc
into
mov
in
push
cltd
xchg
pop
add
cmp
dec
popf
cld
xchg
xchg
in
push
daa
xchg
icebp
inc
jnp
ss
xorb
push
popa
outsl
add
dec
sub
adc
sub
mov
cmp
add
inc
scas
out
adc
movsb
cwtl
sub
mov
cmpsb
sub
mov
pop
mov
roll
xchg
mov
mov
in
sub
cli
jp
out
arpl
lods
je
push
repz
dec
push
leave
imulb
mov
jbe
mov
mov
stos
dec
mov
inc
enter
out
fistpll
cmc
pop
pop
xlat
in
push
inc
stos
jb
adc
js
jecxz
jp
mov
fmul
dec
adc
sti
loop
imul
daa
cli
xor
std
inc
mulb
fsin
sar
mov
fidivl
sbbl
lcall
cld
sub
fmul
scas
xchg
repnz
push
and
jae
xchg
sbb
lods
aas
dec
test
inc
mov
aaa
outsl
adc
lcall
pop
push
dec
xorb
sbb
ret
fucomi
xorl
adc
push
test
mov
imul
les
int
repnz
dec
jns
sbb
mov
test
or
sbb
mov
xchg
mov
jo
mov
mov
xor
jne
mov
js
clc
push
xor
jmp
mov
mov
stos
mov
jle
pusha
dec
inc
jae
fs
iret
lods
pusha
loope
mov
gs
push
xor
mov
cli
cwtl
add
sub
jno
outsb
ljmp
jno
adc
dec
mov
pop
xchg
pop
scas
dec
pop
sbb
mov
cmc
mov
lds
popa
add
movb
inc
mov
sub
arpl
xor
inc
jns
testl
dec
das
dec
inc
cmp
enter
push
cmp
cmpsl
int3
pop
in
addb
jp
test
mov
fcomps
xchg
or
stos
dec
in
mov
dec
dec
enter
divl
push
bound
jmp
in
jecxz
pop
out
movsl
jmp
sti
pop
dec
mov
push
inc
jnp
xchg
jg
addr16
bound
adc
ret
divb
lock
add
sbb
mov
sti
sbbb
mov
add
cmpsl
or
mov
mov
rolb
es
cmpl
or
aas
insl
xor
into
stc
inc
jno
inc
sbb
sarl
pop
dec
imul
mov
mov
jae
je
pop
loop
insb
outsl
jecxz
mov
add
inc
xor
mov
aaa
inc
jp
adc
popa
jp
aad
xchg
fimuls
push
jo
add
jne
add
mov
shlb
jmp
or
cmp
xchg
js
sub
mov
pop
mov
jbe
push
scas
cmpl
ja
mov
xchg
outsb
sub
cmp
xchg
sub
mov
cmp
jae
inc
mov
sub
cmc
or
andb
es
mov
add
cwtl
jne
jmp
sub
dec
sbb
jne
jns
adc
loope
in
rolb
jnp
push
jo
test
add
or
fisubs
int3
scas
xor
cmpsl
outsl
mov
mulb
xor
inc
loope
add
loop
jmp
push
push
cmp
out
in
pop
push
mov
push
cmpsl
xchg
rol
hlt
jl
clc
fisubl
jns
mov
adc
outsl
jecxz
es
cmp
negl
lods
icebp
and
mov
outsl
sbb
cltd
push
dec
movsl
xchg
mov
cmp
cs
jle
gs
out
inc
shlb
pusha
push
fadds
mov
mov
packsswb
push
mov
mov
mov
idiv
fisubl
or
and
call
xchg
bound
adc
mov
popl
int3
add
add
sbb
sbb
xchg
mov
push
sub
xorb
sbb
jbe
mul
or
adc
sub
imul
std
xchg
clc
iret
in
xor
add
ret
push
sub
shlb
sub
mov
inc
loopne
pcmpgtb
sub
mov
das
int3
test
in
test
insb
imul
jbe
xchg
in
push
shll
pop
ja
pop
inc
test
or
lea
push
mov
xchg
push
shlb
dec
rcll
lret
xchg
mov
rol
jne
ds
insb
push
in
cltd
addr16
stos
or
push
std
jmp
insl
xor
incb
gs
in
mov
mov
in
in
jae
push
xor
aas
inc
jp
push
xor
add
mov
in
mov
xchg
lcall
pop
inc
push
sti
push
mov
repnz
insb
mul
stos
or
inc
cmp
pop
mov
subl
xor
jge
mov
out
fistps
popf
cmp
jl
rclb
and
out
mov
xor
inc
out
adc
xlat
lcall
xchg
cs
push
notb
rcl
push
adcb
outsb
jg
mov
push
test
or
jae
sbb
cmp
xor
xchg
shll
je
loopne
stc
xor
js
lret
pop
stc
jae
cwtl
or
and
xchg
dec
xchg
sbb
add
mov
lock
mov
mov
mov
stos
mov
mov
inc
dec
xor
ja
cmp
ljmp
hlt
daa
ljmp
mov
pop
dec
sbb
jg
insl
mov
mov
inc
aam
dec
mov
fdivl
adc
fmul
mov
mov
xor
fsub
xchg
and
cli
lret
add
xchg
leave
js
sub
bnd
sahf
enter
fimull
sbb
insb
pop
jmp
inc
ss
lods
ficoml
in
rorl
jb
gs
jo
mov
and
push
pop
pop
xor
or
sub
nop
lds
mov
testb
pop
push
add
pop
sti
mov
mov
mov
add
sub
adc
flds
xchg
mov
inc
sarl
stc
aam
xchg
mov
inc
dec
cmp
or
sahf
push
loopne
fdivrs
inc
mov
xchg
mov
scas
mov
pop
ds
lods
out
mov
lea
and
pop
adc
push
aaa
cmpsl
mov
mov
scas
repnz
cs
mov
mov
movsl
clc
cmp
insb
cmc
sbb
cltd
adc
bswap
inc
out
out
dec
sbb
add
sbb
push
outsl
data16
push
pop
adc
mov
push
shll
enter
dec
loop
in
sub
mov
adc
pop
push
inc
mov
xchg
or
jg
push
insl
pop
repz
mov
mov
in
arpl
pop
mov
les
xlat
mov
rcl
jl
je
packuswb
xchg
xor
inc
push
xchg
push
ja
out
adc
mov
xor
push
mov
push
pop
mov
mov
push
lock
mov
sub
lea
jne
push
cmpsl
add
in
fisttpll
sti
lods
dec
cmp
popa
call
shrl
mov
sbb
xchg
pusha
sub
aas
fcoms
push
or
pop
gs
enter
inc
mov
push
and
push
inc
je
loope
sbb
inc
inc
jl
rcrl
popa
adc
popf
mov
fiadds
dec
push
test
nop
xchg
mov
pushf
in
and
jecxz
inc
sbbb
movsb
cltd
inc
mov
adc
dec
lret
out
fdivp
and
mov
pop
scas
push
dec
ja
stc
xchg
test
fcmovbe
in
cmpl
adc
jmp
xor
nop
push
push
mov
ss
pop
push
pop
jmp
and
jge
jb
push
pop
sub
push
jo
jnp
pusha
rcll
push
xchg
lock
icebp
or
push
xchg
orl
push
pop
in
push
aad
mov
stos
mov
addr16
test
aad
test
pushf
or
lcall
repz
dec
bound
mov
shlb
popa
push
sub
push
pop
mov
cmc
aaa
in
sub
popf
insb
add
cld
cli
lds
js
cmp
xchg
cwtl
push
fisttpll
jmp
push
xchg
push
scas
pop
bound
daa
xchg
clc
inc
fcoml
sub
repnz
xchg
or
or
data16
imul
push
pop
jbe
out
shrl
scas
sahf
loopne
dec
clc
mov
inc
ljmp
xchg
iret
or
pop
sbb
pop
inc
stos
out
mov
sbb
shll
arpl
fwait
data16
xchg
xor
push
imul
push
dec
xchg
mov
out
sub
ret
in
push
or
xchg
loope
sbb
pop
sub
test
es
xchg
and
push
outsb
jge
lcall
pop
adc
jle
xchg
jmp
rorl
imul
sub
lea
arpl
xchg
cmp
mov
lahf
jb
dec
mov
in
fwait
xchg
mov
adc
out
loop
pop
and
mov
pop
jp
in
mov
xor
js
jno
dec
dec
cltd
xrelease
mov
jecxz
roll
or
push
or
inc
mov
xor
rep
outsl
out
mov
xchg
inc
pop
call
and
mov
int
jmp
hlt
pushf
inc
adc
cs
ret
push
cmc
dec
iret
push
mov
repnz
dec
test
sahf
pop
push
fisubs
insb
and
imul
mov
outsb
pushf
cmp
inc
cmp
stos
push
aad
mov
mov
jno
mov
ret
shr
pop
cmp
xor
mov
fsts
icebp
xor
xchg
cmpb
jnp
jg
inc
mov
lret
outsl
out
inc
push
add
sbb
ja
popa
jmp
imull
fdivl
les
and
push
sbb
ret
jb
test
ficomps
scas
xchg
dec
ret
lock
add
pop
pop
loop
pop
add
call
sub
cmpsb
mov
and
mov
xor
loope
test
sbb
inc
dec
or
rorl
inc
jge
sbb
sbb
lea
jmp
push
call
adc
xchg
es
lock
mov
in
lahf
fst
outsl
mov
jle
jbe
cmp
jle
xchg
sbb
jle
lock
cld
sub
and
lret
xchg
add
lds
push
mov
add
fnsave
sub
popf
inc
subb
jmp
cmp
mov
lret
xor
xchg
clc
pop
xor
jb
mov
cmpb
repz
mov
lea
sub
cmp
add
adc
add
sarb
lods
xor
pop
add
dec
int3
in
je
push
and
insb
loopne
in
inc
das
imul
and
xchg
jnp
sbb
into
and
cmp
add
rorl
inc
out
push
xorl
inc
scas
jmp
test
pop
in
push
out
push
adc
clc
pop
lahf
jns
dec
and
mov
add
push
mov
jmp
outsl
mov
jmp
xchg
loopne
scas
fistpll
or
sub
adc
or
adc
outsl
mov
pop
push
insl
push
jo
lods
incb
loope
lcall
insl
push
repnz
cwtl
loope
sti
jl
or
mov
test
cmp
jmp
scas
ficoms
inc
xor
jb
inc
les
jecxz
imul
idivl
outsl
xor
adc
fcoml
mov
adc
enter
inc
ljmp
mov
in
jecxz
imul
fmull
sub
add
adc
inc
add
xchg
xor
repz
mov
jecxz
push
push
mov
lods
sbb
outsl
int3
pop
insb
cmp
gs
inc
xor
sub
inc
lods
out
xor
popa
dec
and
mov
icebp
dec
sbb
mov
dec
jno
jno
das
ret
pop
loop
adc
das
pop
hlt
fimuls
mov
push
scas
fidivs
jae
rolb
shlb
jae
int3
stc
jg
jnp
mov
fcmove
inc
mov
jbe
xchg
inc
fisubl
sub
lret
popf
jns
imul
mov
cli
cmp
in
nop
or
push
ljmp
jecxz
ds
cwtl
aaa
pop
pop
jle
mov
idivl
or
jno
pop
bound
sub
imul
movsb
pop
adc
lods
inc
fs
xchg
sub
mov
mov
inc
cmovns
xchg
scas
dec
or
das
cmpsl
out
jbe
and
mov
das
xchg
lret
jmp
xor
add
push
jne
test
adc
ds
xor
pushl
and
ret
testb
bound
cs
mov
or
pop
push
cli
and
repnz
pop
or
adc
inc
xchg
aam
sub
mov
push
ds
insb
adc
inc
nop
int3
js
inc
loope
cli
jo
mov
leave
or
xor
mov
mov
addr16
cmpsb
jle
cmp
add
push
adc
xor
add
sti
loop
aad
cmpl
pushf
mov
xchg
push
rolb
xlat
xchg
lahf
pop
fsubr
jne
pushf
fimuls
jecxz
sbb
xor
int3
stos
outsl
xchg
add
push
loopne
pop
xlat
xor
pushf
jbe
stos
pop
insb
cltd
stos
std
loope
cmp
cltd
cltd
inc
inc
scas
popl
sbb
inc
test
cltd
pop
inc
dec
xchg
scas
sub
out
imul
adc
mov
stos
or
pop
mov
imul
in
cmp
out
push
testl
mov
ja
out
jecxz
mov
inc
mov
xchg
or
jge
push
outsb
push
adc
mov
mov
add
dec
or
xor
mov
sbb
test
mov
filds
aas
cmp
test
pop
mov
adc
leave
je
sub
test
rorb
cmp
inc
orl
inc
push
pop
out
cmp
cmp
inc
xor
mov
mov
sub
dec
dec
mov
adc
out
xor
inc
shl
pop
adc
sbb
cli
and
push
and
lret
pop
arpl
pop
mov
xor
outsb
xchg
lahf
incb
mov
shll
stos
pop
xchg
js
insb
outsl
mov
ficomps
fmuls
xchg
test
stos
mov
les
ror
test
adc
mov
jno
mov
testl
andl
test
adc
pop
movsb
mov
lods
push
inc
push
xor
sar
pop
or
inc
xchg
pop
push
dec
imul
add
daa
xchg
or
cmp
lahf
lret
push
mov
or
sub
and
cmpsb
jg
neg
sbb
stc
sub
leave
out
mov
mov
das
out
cmpsb
push
or
xchg
daa
inc
inc
jle
xor
cmc
mov
adc
jl
or
jl
sarb
push
idivb
and
jne
and
sbb
push
pusha
sub
push
dec
sbb
test
shll
push
out
sub
dec
aam
xchg
std
mov
or
xchg
fbld
in
push
push
xor
popf
xchg
push
unpckhps
lock
pop
cmp
sub
or
xchg
mov
lods
call
cmp
lea
sub
xor
out
push
mov
xchg
push
sbb
repnz
or
stc
or
dec
rclb
loop
repz
cli
push
adc
add
jle
sub
adc
pop
jmp
sub
push
mov
fcmove
shrl
dec
mov
loopne
insb
out
pusha
pop
pop
sbb
push
pop
pop
movsb
lret
cmp
xchg
cmp
mov
jmp
clc
lods
jle
sub
cwtl
mov
or
loope
cmp
pop
jae
jbe
xchg
bound
pop
add
xchg
mov
push
or
push
cmp
inc
pop
scas
loopne
sub
sub
js
clc
mov
loop
shrl
subb
sarl
add
mov
enter
test
aas
cwtl
fcoms
stos
add
int3
pop
mov
lret
divl
out
js
les
pop
loopne
mov
loope
mov
insl
xchg
inc
xlat
xor
sbb
cmp
pop
mov
es
xor
mov
loopne
lcall
out
and
sbb
repz
ja
cmp
jno
fnstenv
fdivr
clc
aas
aad
sbb
movsl
pop
out
ja
aam
dec
cmp
mul
lock
pop
in
dec
pop
mov
ss
fs
or
inc
push
movb
insl
mov
aas
in
inc
stos
xor
cwtl
lret
iret
sar
loope
or
dec
fisubrl
hlt
mov
fldt
push
sbb
pop
in
sub
push
dec
into
jp
dec
lds
ret
aas
push
outsb
nop
xorb
test
sahf
frstor
popf
int3
call
popa
mov
jae
arpl
add
iret
andl
clc
lea
lds
mov
enter
mov
pop
xlat
adc
inc
sub
xchg
dec
push
mov
imul
rcll
xor
jle
sub
pop
push
fsub
inc
pop
jmp
mov
xor
pop
jne
push
sub
jmp
fcomip
jne
mov
hlt
jnp
cmpb
loop
fsubrs
scas
push
aam
repnz
pop
xor
test
fdivl
cmp
mov
cmpsl
lock
push
push
sub
lret
mov
or
sbb
cmp
sbb
push
cmc
pop
push
or
sub
mov
add
add
mov
xor
call
jg
push
clc
mov
aas
mov
in
shrl
popa
cmp
mov
ds
enter
jecxz
incl
cli
int3
inc
mov
pop
pop
inc
jle
jno
icebp
inc
out
add
int3
lods
lret
out
inc
cld
inc
idivb
add
lret
cmpsb
xchg
sbb
push
push
xor
ffreep
outsb
stos
sub
mov
add
inc
inc
push
and
adc
sub
gs
fwait
popf
into
pop
test
jmp
sbb
or
mov
pop
add
dec
cmp
or
sub
sub
add
aam
push
push
and
dec
neg
push
ret
push
scas
cmpsb
xchg
and
scas
add
mov
dec
cmp
mov
pop
mov
jbe
les
lahf
xchg
jmp
outsb
sbb
mov
fisubs
stos
xchg
mov
sbb
cmp
mov
xchg
or
and
push
aas
inc
sbb
aas
or
mov
mov
push
xchg
fidivs
lcall
add
sbb
inc
lret
fldt
mov
lds
add
xchg
call
dec
movsl
push
icebp
sub
lods
jle
pop
sbb
push
repnz
mov
icebp
shrb
hlt
jecxz
ffree
int3
or
ret
repz
mov
mov
movsb
adc
cwtl
gs
shrb
lret
out
dec
rolb
dec
xchg
cvtpi2ps
adc
and
mov
cli
out
xchg
ret
pushf
inc
shrl
push
and
dec
pop
faddp
jl
ss
fnstsw
je
push
pop
sarb
shlb
mov
sub
and
jmp
adc
rcrl
repz
mov
pop
mov
sbb
push
movsl
or
sahf
and
es
adc
xchg
in
fcmovnu
out
push
fs
push
mov
ret
ds
jmp
cmp
or
add
imul
pop
icebp
sub
pop
push
adc
pop
pusha
push
je
and
lcall
popf
cltd
pop
stos
gs
loopne
stos
xor
push
xlat
cmp
add
cmp
pop
inc
das
das
push
fnstsw
lahf
sub
rcrb
sbb
jne
outsb
imul
jge
sub
lret
sbb
nop
cwtl
jg
insl
cli
xor
mov
test
xchg
imul
and
cwtl
movsb
cmp
scas
mov
jno
stos
ljmp
lock
and
lcall
dec
and
adc
mov
call
scas
shlb
mov
mov
jmp
and
fstps
pop
mov
dec
mov
xchg
mov
fs
shrl
ss
pop
loope
and
in
lods
pop
iret
add
push
cmp
sahf
dec
adc
imul
mov
movsl
fidivrl
pop
movsb
out
push
stc
pop
push
mov
fnstcw
out
loopne
lcall
inc
aaa
push
aaa
rcrb
xchg
stos
push
sbb
adc
std
xchg
dec
inc
test
cmp
dec
stc
cmpsb
xor
pop
mov
mov
into
repnz
sbb
aam
jb
mov
adc
mov
dec
jb
jle
in
sub
cwtl
mov
mov
cmp
sbbl
pop
jns
adc
xor
sahf
mov
and
cld
push
sub
mov
jno
in
mov
sahf
mov
gs
or
test
mov
iret
sub
sbb
and
pusha
sbb
test
enter
jg
inc
jns
and
outsl
fwait
adcb
jae
push
mov
mov
loope
insl
sbb
mov
add
cmp
mov
enter
rolb
imul
out
cmp
cmp
fcomps
in
jl
mov
push
and
jae
jmp
cmpsl
mov
push
sbb
int
rcrl
sub
scas
pop
mov
hlt
mov
push
les
jb
jge
ret
push
jb
pop
jmp
nop
imul
cltd
xchg
fcmovnu
leave
in
shrb
push
nop
adc
sub
mov
xchg
jmp
out
sti
int3
cmp
jmp
test
fxch
out
adc
sbb
cmpsl
iret
xchg
int3
sbb
mov
loopne
push
dec
lahf
push
negl
movsb
jmp
or
bound
fcomps
mov
lret
xchg
lret
cld
add
shr
xchg
add
mov
jb
rcrb
pop
pop
das
pop
ss
lcall
cmp
je
jmp
out
aas
jae
leave
test
stc
adc
push
pushf
out
or
arpl
iret
push
push
jle
xbegin
and
jnp
das
sub
popf
bound
lea
roll
xorl
mov
push
xchg
dec
add
mov
rcll
mov
mov
adc
cmp
mov
fldenv
ss
inc
in
and
xchg
push
add
jne
sub
add
jge
push
pusha
je
rorb
lds
push
pop
mov
rcrb
fimuls
sub
adc
test
xchg
jo
aam
mov
jg
lds
add
popf
cmp
test
rorl
mov
jns
ljmp
add
pop
pop
pop
out
push
imul
pop
ds
incl
and
xchg
imul
data16
imul
sub
xor
cwtl
sbb
fbstp
call
pop
adc
ja
add
jbe
subl
loope
ja
out
scas
sub
mov
mov
loopne
test
mov
in
std
inc
fidivrs
fsts
test
orb
rorl
ss
jnp
jmp
sti
mov
push
stos
xor
subl
push
popa
push
fwait
mov
ret
movsl
adc
adc
push
adc
xchg
dec
cwtl
xorb
push
negl
sub
add
pop
and
push
jle
push
sti
or
mov
jae
ret
clc
out
inc
inc
mov
mov
outsl
mov
lods
push
repz
push
stos
call
test
jo
aad
ds
xlat
mov
sbb
decl
adc
sbb
mov
out
shl
pop
xor
adc
rclb
sub
icebp
enter
mov
pop
aad
add
ljmp
jb
je
stos
sbb
push
icebp
xor
sub
dec
mov
jecxz
or
nop
stos
jg
and
mov
dec
iret
or
inc
xor
movsl
setle
rcl
push
pop
mov
hlt
sbb
loope
push
jne
pop
or
mov
xor
jmp
lcall
mov
ds
pop
rclb
xor
lods
stos
adc
sbb
pop
aad
xchg
ja
test
lret
and
popl
cmc
pandn
jbe
mov
test
les
aaa
data16
xchg
lret
daa
ficoms
pop
mov
xchg
sub
pop
int3
xchg
insb
fbstp
test
inc
loop
xlat
repz
inc
mov
jle
mov
adc
dec
sti
jl
imul
push
outsl
shlb
push
cs
cmc
mov
cmp
cmp
pop
adc
mov
outsb
mov
inc
push
mov
cmp
fs
mov
mov
icebp
loopne
xchg
js
pusha
test
add
popf
cmp
addl
adc
aaa
xor
and
sub
inc
subb
sbb
push
jl
aam
je
push
hlt
icebp
mov
pop
inc
pushf
lret
jbe
xchg
mov
push
decl
mov
es
repz
or
iret
ss
push
pop
xor
dec
xchg
adc
sub
test
sub
xor
sbb
xor
mov
bound
arpl
out
xchg
sub
hlt
repnz
sub
and
mov
add
out
dec
clc
ret
ret
out
mov
cld
jae
cltd
and
and
add
jg
pop
jg
and
repz
jecxz
enter
hlt
xchg
popl
or
xor
or
jle
hlt
dec
lea
cld
ss
add
fs
pop
push
ret
dec
call
scas
int
cmpsl
mov
sub
cwtl
xchg
push
jns
js
jb
lcall
loop
sub
jns
notb
lea
push
sub
sarb
and
imul
insl
lahf
loopw
adc
push
mov
jae
mov
fcmovb
stc
dec
bound
inc
loop
mov
push
push
fwait
cli
into
xor
push
mov
xchg
mov
lods
sub
sbb
pop
mov
adc
dec
pop
adc
fsubrp
xor
dec
rcrb
mov
shll
mov
pop
cmp
lcall
cmpsl
and
add
push
xchg
xchg
fidivl
out
lahf
pop
sub
or
or
mov
and
rorl
daa
sbb
call
repz
mov
cmp
xchg
sub
das
xchg
mov
inc
js
xor
ret
out
cmpl
int3
popa
lcall
add
mov
std
cmp
and
mov
sub
movsl
test
xchg
mov
stos
mov
sbb
rcrb
ret
frstor
mov
sub
sahf
insl
addr16
xlat
outsb
xchg
sahf
push
fiaddl
push
xchg
test
cmc
pushf
out
xchg
pop
lcall
adc
and
scas
xchg
rcrb
je
inc
adc
je
das
xor
daa
outsb
sub
inc
xchg
cmpsl
rcll
test
ret
dec
test
add
or
dec
jl
ficoml
xor
or
jle
xor
fdiv
push
flds
push
push
jp
and
cmpsl
cmp
adc
jae
test
xchg
cmp
dec
and
stos
fldl
popf
inc
jl
in
je
cmp
jge
jnp
inc
pop
jmp
pop
in
popf
dec
inc
lea
out
pusha
scas
aas
inc
sub
cmpsb
adc
mov
aaa
xchg
or
inc
mov
jl
iret
and
lock
movsb
push
testb
bound
movsl
jle
xor
out
and
sbb
test
pop
incb
mov
repnz
push
orb
inc
xor
repnz
jnp
int3
shlb
pop
jl
push
pop
sbb
push
aaa
sub
aam
push
dec
xchg
jle
and
je
cmp
ret
or
imul
jo
push
test
cmp
sahf
cmp
jge
shrb
mov
dec
pop
sub
jge
int
ret
insl
and
mov
stc
cmp
and
ret
imul
hlt
jne
jecxz
and
es
mov
movsl
lcall
test
addb
adc
mov
push
mov
dec
movsl
fistl
ss
loope
pop
imul
inc
jmp
cmp
pop
std
incl
in
push
dec
ljmp
jge
add
stos
ds
in
xor
test
orl
fs
popa
and
lods
repnz
out
inc
mov
jo
add
sub
scas
loop
jl
xor
vpmulhw
push
imulb
inc
dec
mov
pop
enter
inc
int3
pop
adc
and
fwait
aas
adc
sbb
mov
and
shrb
sbb
in
test
fdiv
xchg
rclb
pop
pop
mov
sahf
add
test
int
push
outsb
fstl
jno
xor
fsubrs
dec
inc
data16
adc
negb
or
mov
mov
shl
ljmp
cmova
out
fwait
jo
dec
pop
imul
sub
and
xchg
hlt
in
iret
mov
stos
and
cltd
sti
push
xlat
mov
jbe
popa
into
mov
imul
in
xor
jb
lret
mov
add
loope
inc
adc
fdivl
mov
jmp
les
je
dec
mov
push
lock
gs
xchg
mov
dec
fidivl
inc
fdiv
in
std
in
jmp
jnp
ss
repnz
add
aaa
sub
bound
adc
std
insl
inc
sub
or
or
jge
cmpsb
sub
ret
cmp
cmp
inc
push
adc
loop
mov
sbbl
in
int3
je
pop
and
and
xchg
jge
push
mov
int
xlat
fistl
jle
lds
fbld
scas
mov
sub
add
fcmovbe
cmp
sti
out
cmp
icebp
inc
mov
inc
dec
xchg
add
xchg
pop
pop
arpl
stc
dec
pop
and
add
cmp
enter
adc
xchg
stos
roll
jo
or
xchg
jne
and
stos
fsubrs
fdivs
jbe
imull
push
jb
gs
push
jo
add
pop
ss
mov
adc
adc
cmp
cmc
jno
jl
and
daa
mov
add
mov
clc
and
adc
shl
scas
mulb
mov
adc
and
addb
push
pop
dec
stos
or
xchg
in
push
push
mov
repz
ret
insb
call
and
push
inc
push
out
cmc
add
fidivrl
fs
pushf
add
sub
and
stos
adc
clc
mov
push
ret
cmp
int3
xchg
fistl
mov
bound
sti
jmp
loop
shrb
mov
inc
in
jo
frstor
dec
inc
lret
loop
arpl
push
rorb
pop
leave
jo
loope
xchg
dec
mov
or
push
scas
mov
xchg
enter
test
inc
je
pop
dec
jae
cmp
cld
pop
push
dec
dec
mov
sub
add
xchg
mov
or
lods
aaa
mov
push
les
mov
jnp
pop
lcall
jnp
insb
adc
push
pushl
ljmp
icebp
cwtl
loope
ss
fistpl
pop
push
cmpsl
jnp
and
out
xchg
inc
scas
sti
pop
ret
xlat
push
or
and
push
adc
gs
mov
mov
mov
mov
lock
xchg
dec
lods
add
adc
lret
pusha
in
sub
pop
lahf
mov
push
orb
popf
xchg
test
cmp
dec
jne
ficoml
sbb
repz
adc
repz
movsl
cmpsb
lret
dec
mov
decl
cmpsl
or
inc
loop
ljmp
ret
adc
sbb
dec
and
movd
jae
push
cmpsb
fwait
and
dec
jp
add
ss
xor
and
mov
jp
cmpl
jae
subb
adc
push
loop
aam
add
sbb
xchg
imul
dec
dec
inc
lock
sbb
push
cmp
xchg
pop
dec
adc
mov
pushl
sub
lds
aaa
rclb
push
add
pop
out
xchg
mov
movntq
scas
aad
enter
jne
push
ja
sbb
sub
ds
or
adc
sarl
test
xor
icebp
add
xchg
lods
lret
mov
insl
sbb
sbb
mov
jg
mov
or
push
loopne
push
cmp
sub
inc
hlt
add
adc
adc
int
movsb
fwait
incb
add
add
xlat
and
mov
outsb
lock
cmpsb
xor
enter
pop
mov
push
das
les
push
ret
mov
add
cs
jmp
aaa
pushl
jne
outsb
jns
cs
push
mov
sub
clc
sub
jmp
xchg
in
in
sbbl
mov
test
ret
push
mov
cli
add
and
adc
loop
sub
mov
loope
call
jb
and
and
mov
flds
cmp
push
mov
ret
sub
jmp
jo
lds
jne
dec
das
inc
mov
jge
pop
test
push
sub
ljmp
pop
mov
xchg
or
mov
dec
rep
dec
sbb
lods
push
hlt
or
xchg
imul
outsl
mov
pop
test
fcomip
dec
adc
inc
jo
or
dec
jno
or
shll
jp
mov
repnz
test
mov
inc
out
shrl
je
loope
jo
sarb
mov
mov
repnz
sbb
mov
cmp
add
mov
cmp
sub
fsubl
icebp
or
rorb
jb
sub
mov
mov
fcmovnu
je
push
in
or
repnz
fcoml
popf
imul
mov
loope
and
mov
adc
jnp
iret
das
es
mov
stos
adc
mov
push
adc
mov
inc
sub
cmpb
mov
jae
mov
jne
outsl
mov
fcomp
sub
xchg
dec
fcomi
add
fldl
lret
sub
ficomps
ja
jge
lcall
jp
add
movsl
or
mov
cmp
ret
dec
or
cli
inc
inc
inc
xor
sbb
movsb
inc
cmc
imul
mov
outsl
ret
andl
outsl
inc
cmpsb
pop
or
jge
fcmove
mov
push
and
or
sbb
xchg
xor
gs
inc
mov
mov
dec
jp
mov
mov
mov
and
test
inc
mov
pushf
in
ss
in
inc
sbb
pop
mov
cmpsl
cmp
add
xchg
pop
dec
test
sub
cmc
mov
push
cli
or
pop
jle
lods
fistpl
push
push
mov
fwait
jmp
mov
movsl
into
xchg
hlt
pop
repnz
addr16
inc
call
ret
adc
xor
cld
out
mov
negl
push
push
aam
jp
dec
adc
jae
mov
lret
cli
andb
or
shrb
pop
sbb
adc
fcmovnbe
mov
imul
out
mov
mov
push
je
cmp
pop
cmp
mov
call
sub
or
or
ds
fistps
adc
cmp
mov
cmp
dec
fiaddl
outsl
mov
mov
sub
stos
sbb
and
rcl
cmp
mov
mov
test
pop
insl
lds
lds
or
lods
rcrl
or
cmp
xor
mov
jge
pusha
sbb
enter
adc
cmc
cli
jne
fwait
test
rclb
cli
call
adc
xchg
mov
mov
add
aaa
and
into
xchg
mov
adc
or
pop
xchg
pop
mov
sbb
xor
insl
jecxz
cmp
enter
inc
lea
fsubl
int
jecxz
mov
mov
lret
enter
push
lahf
aaa
divb
mov
push
mov
loop
mov
outsb
out
iret
roll
adc
inc
daa
xchg
inc
rclb
xchg
cmpsb
outsb
mov
xor
add
loop
or
and
and
cmp
js
inc
inc
lods
divb
addr16
bound
dec
push
hlt
jbe
mov
cmp
stos
lods
pushf
and
ss
mov
data16
xchg
add
out
mov
inc
std
pop
xor
sbb
daa
fsubrs
push
sbb
and
jmp
movsl
push
and
add
inc
dec
push
mov
push
or
jge
outsb
xorb
das
jg
mov
inc
out
cld
fdivr
insl
fwait
sahf
mov
loopne
lret
fwait
std
dec
mov
mov
xchg
dec
dec
lods
dec
je
mov
test
bnd
js
scas
lea
pop
jae
je
add
push
adc
in
lret
and
adc
xchg
push
xor
jb
mov
in
test
sub
lcall
pop
adc
jecxz
in
mov
shlb
jl
xor
jecxz
or
mov
orl
iret
sub
push
adc
movsl
dec
xor
jle
mov
pop
push
mov
arpl
jl
cmp
pop
lret
clc
into
movntq
add
jg
pop
sarb
push
cs
or
sub
pop
movsb
fiaddl
cmp
arpl
xchg
in
outsl
outsb
jge
into
psubusb
jl
jb
mov
pusha
or
nop
xlat
xchg
icebp
stos
fwait
inc
test
out
or
jmp
scas
aaa
cs
negb
and
adc
in
push
or
jmp
pop
sti
mov
add
xor
mov
adc
in
std
arpl
vcmpps
je
cli
sti
cmp
fsubrl
lods
cmp
movl
xchg
fidivrs
subl
xor
sub
dec
push
sub
push
lds
cmp
les
out
xchg
cmp
clc
fnsave
sub
ret
cmp
xchg
outsb
pop
in
xor
mov
add
xchg
loope
push
inc
cmp
adc
fldt
cld
dec
xchg
stc
hlt
cmp
push
xchg
sub
xchg
mov
mov
xchg
xor
xchg
faddp
jae
int
pop
mov
cmp
call
cmc
dec
inc
sbb
lcall
jge
cmpl
das
add
or
xor
adc
dec
imul
dec
sub
sbb
nop
pop
push
push
or
adc
sub
fisttps
mov
xor
mov
fcomp
mov
and
xor
lds
nop
btc
jo
dec
out
ficompl
jne
pop
dec
sbb
leave
cwtl
lret
sbb
xchg
stos
push
jecxz
mov
cltd
mov
jo
bound
pop
sbb
sub
loop
adc
and
jg
ja
jmp
icebp
cs
dec
addr16
loopne
fsubrs
cmp
mov
and
push
add
sbb
lret
push
dec
out
mov
stos
xor
sarl
pop
dec
loopne,pt
test
aas
jo
ja
inc
scas
sub
adc
sbb
inc
outsb
in
es
fisubl
inc
mov
sbb
cmp
add
adc
jno
xor
mov
xchg
cmp
call
in
jmp
xor
js
or
lods
sbb
scas
mov
push
mov
in
sbb
das
mov
pushf
fwait
out
xchg
cmp
inc
aam
dec
mov
xor
sub
out
icebp
lret
lcall
shll
ss
inc
imul
in
iret
push
xchg
outsl
and
adc
test
cld
mov
shrb
sbbl
push
mov
repz
shll
fwait
and
lcall
das
cmpsb
dec
cmp
add
in
loopne
jb
cld
jmp
dec
repnz
mov
rorl
fwait
clc
loopne
push
icebp
sbbb
sbb
push
out
sbb
add
add
lds
aam
or
out
push
or
movsb
pop
mov
clc
inc
cmpsl
clc
test
std
add
sub
xlat
out
pop
imull
std
pop
add
outsl
or
pop
cmp
inc
cwtl
dec
jnp
add
xchg
test
ret
and
pop
imul
or
iret
adc
lods
xchg
xchg
fs
lcall
jl
movsb
jge
mov
cmc
cwtl
dec
xor
imul
jne
inc
pop
mov
cmpsb
cmpsl
lret
sub
and
push
push
jmp
fwait
dec
fwait
jnp
je
adc
loopne
fwait
xabort
lcall
mov
clc
mov
adc
sbb
sbb
or
dec
and
mov
or
cmc
mov
adc
idiv
and
jl
jl
test
jno
mov
mov
xchg
out
fadd
shr
test
xchg
insl
push
jb
int3
cld
mov
xor
js
xor
sub
mov
les
adc
add
mov
out
icebp
es
cs
push
adc
xchg
pushf
imul
fbstp
xchg
push
or
mov
mov
stos
xchg
iret
aaa
test
lcall
lahf
sub
pop
xchg
pop
ret
ljmp
out
or
cltd
fistps
in
inc
sbb
js
add
fwait
jmp
ds
or
jb
test
xchg
in
push
jmp
mov
loope
repz
xor
mov
lods
sti
xor
lods
or
test
pop
clc
sbb
pop
cmp
push
cmp
dec
cmp
xor
dec
adc
mov
jp
pop
xchg
xor
and
pop
hlt
jge
inc
stos
and
mov
pop
je
test
shll
mov
movl
adc
cmp
hlt
jb
jecxz
xchg
dec
nop
jb
aad
das
movsb
cmp
loope
add
mov
xor
add
dec
adc
adc
xor
rol
call
xor
adc
out
or
jle
xor
inc
jle
push
sbb
out
rclb
out
addr16
int
cmp
arpl
sbb
sbb
fstps
nop
pop
pop
ret
pushf
inc
sbb
dec
cmp
mov
mov
scas
mov
sub
daa
jmp
pusha
and
inc
pop
or
sbb
adc
shll
mov
pop
xchg
inc
mov
or
mov
movsb
xor
xchg
mov
sbb
test
negl
mov
cli
push
jmp
push
add
cs
into
call
push
dec
fdivrs
mov
jae
mov
lahf
cwtl
jb
fstl
divb
test
fs
ret
push
bound
push
call
in
popf
push
jmp
fisubrs
movsl
lds
add
loop
jno
in
in
imul
jae
loopne
push
cltd
gs
lret
ljmp
js
aas
test
adc
cli
mov
xchg
jmp
and
ss
xchg
or
arpl
cmp
xor
arpl
aaa
mov
mov
pop
mov
xor
xor
dec
enter
mov
int3
xor
inc
push
pop
cmpsl
cld
sbb
cmpl
mov
jb
cltd
mov
xchg
xchg
aas
jg
das
xchg
inc
xlat
shr
icebp
aaa
push
push
mov
pop
jae
fdivs
sub
push
push
out
cmpxchg
mov
jno
lahf
xchg
test
ljmp
cld
in
pop
lret
xchg
leave
flds
cmp
jg
jp
sub
dec
popa
lods
jg
imul
aaa
xor
call
lret
mov
in
push
ret
mov
cmp
dec
cmp
adcl
cmpsl
lods
arpl
inc
js
mov
inc
push
jns
mov
mov
mov
popf
or
inc
push
ljmp
and
or
into
popa
les
sub
sahf
gs
pusha
std
pop
andl
cmp
cmc
sub
roll
jbe
mov
fisubrs
xor
imul
inc
xchg
push
repz
jb
push
pushf
mov
aad
cmp
inc
jno
and
cld
jl
mov
call
fdivr
add
fstl
inc
mov
mov
enter
inc
outsb
sub
jne
and
out
add
or
sahf
test
pop
mov
std
push
nop
shll
gs
lret
rol
std
loope
mov
adc
test
jmp
jmp
mov
sbb
dec
test
gs
jnp
jbe
xor
mov
rcll
adc
sarb
rep
cmp
scas
pop
addr16
lods
in
cmp
push
loope
adc
dec
jae
or
lds
mov
jp
call
fsubrp
movsb
clc
les
decl
mov
jp
xlat
and
push
adc
inc
xchg
lret
mov
notl
pushf
push
jge
cmpl
nop
inc
out
push
mov
mov
movsl
mov
popa
mov
in
xchg
xor
sub
push
insl
add
iret
ds
sub
cmp
insl
pop
dec
xchg
out
cmpsb
jecxz
dec
pop
dec
push
dec
ja
sbb
stos
movsb
dec
jbe
sbb
fs
push
push
pop
shlb
pop
fimull
mov
mov
lods
std
aad
xorb
mov
mov
test
test
enter
jno
test
jne
add
fcomps
iret
xchg
push
xchg
xor
inc
xchg
stos
mov
mov
or
xor
pop
scas
sub
test
cmpsl
xlat
hlt
sahf
int
xor
stos
add
clc
add
out
xor
mov
mov
push
xchg
jns
in
cmp
pop
mov
sub
sub
das
push
out
pop
bound
sub
jmp
dec
xor
xor
stc
add
jns
push
rorl
mov
mov
pop
pop
pop
jmp
cwtl
dec
dec
aad
ds
mov
sarl
mov
sti
and
jmp
dec
bound
idivl
popa
jmp
fnstenv
adc
pop
mov
movsl
push
imul
gs
adcl
movsl
scas
pop
loopne
ret
inc
pop
jbe
cmpsl
xor
andb
adc
filds
add
es
pop
nop
mull
xor
dec
popa
and
sbb
pop
aas
test
imul
and
ja
test
mov
lcall
pop
cmc
jecxz
scas
test
lods
cmc
and
stos
out
je,pt
push
insb
sub
nop
repnz
cmp
jecxz
mov
push
je
mov
mov
divl
jl
jle
xchg
ss
dec
insl
fisubrl
fcmovu
pushf
sbb
in
scas
cmp
arpl
push
shll
xchg
out
negb
pop
loopne
ss
xchg
dec
iret
mov
xchg
pop
lret
pop
xor
mov
in
ror
inc
adc
mov
test
jnp
xor
adc
mov
fisttpl
push
jp
popa
mov
xchg
jnp
pop
adc
add
jecxz
push
sub
sbb
jecxz
cmp
insl
add
jge
mov
push
sub
stc
and
or
rcrb
cmp
mov
fwait
pop
leave
xchg
call
adc
xchg
shl
inc
push
sub
in
lea
adc
or
adc
fldl
insb
push
test
cmp
out
add
ret
out
jb
push
fcmove
sbb
fwait
adc
rcll
filds
jmp
cwtl
dec
loopne
dec
inc
nop
movsl
cld
scas
sahf
jle
ja
mov
xor
jle
iret
ficoml
xor
jge
mov
pop
sub
add
inc
add
sbb
pop
sub
xchg
pop
xlat
adc
mov
pusha
jge
nop
push
cmp
push
push
popf
mov
push
repz
je
clc
or
dec
pop
push
and
mov
mov
loope
and
push
lea
movsl
scas
xchg
mov
xor
mov
jl
xchg
sub
movsl
fs
adcb
jnp
out
leave
ljmp
es
out
out
xor
or
es
xor
scas
out
cli
in
lahf
xor
cmc
mov
mov
ds
sti
cltd
lea
cmpsb
mov
test
dec
lods
cmpsl
addr16
sbb
hlt
in
sahf
pop
bound
fcmovnbe
push
xor
fnstenv
inc
or
int3
push
mov
lods
cmp
mov
mov
loopne
jae
dec
lret
adc
out
adc
rcr
xchg
bound
ds
dec
imul
jo
das
sub
inc
scas
lock
jg
dec
xlat
mov
push
aaa
sahf
adc
scas
mov
dec
lcall
out
andl
sbb
dec
mov
push
lds
daa
mov
es
out
data16
push
scas
or
adc
aaa
inc
repz
sbb
dec
mov
adc
ret
icebp
shrl
xchg
inc
dec
mov
insb
rsm
ret
jb
out
xchg
xor
push
adc
jmp
xor
sub
mov
call
daa
push
add
jae
xchg
outsl
mov
jne
mov
jbe
fidivl
lret
insl
jmp
jbe
pusha
sub
scas
int3
push
out
jb
les
cmc
lods
insl
outsl
or
pop
mov
pop
push
push
jae
enter
cmpsl
shl
les
sbb
movsb
cld
inc
outsl
fs
sbbl
aas
inc
ja
aaa
and
pop
fstpl
mov
fldt
mov
or
ret
fbld
sub
sbb
xor
push
aad
pop
lods
jg
xor
mov
or
fs
lds
mov
adc
in
xlat
aas
push
roll
jne
call
out
jge
or
mov
cli
mov
rorb
push
push
sbb
mov
cs
sbb
adcb
fdivs
js
or
outsl
jge
int3
out
xchg
or
arpl
xchg
sar
lock
and
pushf
mov
insb
mov
and
sbb
mov
stos
fildll
fbld
loope
xchg
dec
mov
mov
hlt
adc
xlat
fs
notb
call
mov
mov
daa
aaa
insb
nop
mov
rcll
cli
aaa
in
xor
cmp
flds
inc
cwtl
fs
push
sti
cld
ret
dec
push
add
lods
gs
cltd
sbb
cltd
popa
out
shrl
gs
daa
mov
pushf
mov
and
pop
je
frstor
mov
in
insb
cmpb
ss
rcrl
hlt
xchg
jne
shrb
xchg
pop
push
cmp
inc
lcall
icebp
sbb
mov
dec
vmovlps
stos
icebp
movsl
bound
xor
jnp
mov
add
nop
add
add
mov
ljmp
push
xor
ror
push
jecxz
ljmp
lods
cmp
push
leave
movsl
pop
pop
or
push
mov
popa
imul
subb
sub
add
and
push
jg
leave
out
loopne
inc
cmp
inc
add
adc
xchg
addr16
push
jb
sbb
and
repz
sbb
add
aas
dec
imull
pop
mov
adc
pop
popa
mov
fldenv
sub
jmp
fstpl
mov
or
mov
mov
enter
negb
roll
push
adc
cmpsl
xchg
pop
add
xor
jge
lods
mov
scas
or
jg
inc
inc
sti
mov
and
std
cli
mov
cmp
popa
xchg
loope
bound
push
repnz
xchg
popf
fldl
xchg
mov
adc
or
mov
in
or
mov
adc
cmp
stos
mov
dec
jnp
in
push
xor
outsb
fwait
fwait
je
pop
push
mov
popa
jge
xchg
incl
or
cmpsb
fcompp
lret
and
adc
dec
scas
jg
xchg
arpl
pusha
sbb
in
mov
jecxz
or
pop
push
outsb
out
imul
rcl
and
dec
add
outsl
add
shr
adc
loop
pop
repnz
pop
test
rolb
popa
ds
cmp
mov
mov
mov
sbb
jb
imul
lds
or
adc
xchg
sub
leave
jmp
stos
add
ficompl
adc
cltd
pop
xchg
loop
sti
rclb
mov
rcr
mov
pop
jns
out
push
out
clc
jb
jo
inc
push
fbstp
xorb
repnz
je
sub
inc
mov
scas
add
mov
in
test
pop
sbb
cltd
pop
adc
clc
cmp
loop
fucomip
push
xchg
cmp
loop
outsl
insb
jp
xor
push
jg
in
hlt
je
xor
rcrl
adc
xor
stos
sub
leave
sbb
mov
pop
stos
pop
mov
stc
push
cmp
movsl
cmpsb
xor
ud1
cmp
add
cli
ret
jnp
push
mov
xorb
cs
push
mov
pop
scas
ss
pop
mov
dec
int
mov
sbb
jg
cmc
push
mov
sub
dec
imul
mov
xchg
ja
xor
shlb
cmp
aaa
mov
scas
sub
mov
repnz
jmp
sbb
jge
push
popf
or
mov
je
jge
or
lods
sub
cmp
pop
call
cltd
mov
fwait
pop
rolb
push
test
inc
inc
add
aaa
call
cld
jb
pop
ret
xor
lods
add
imul
sbb
addr16
decb
jge
mov
mov
jl
inc
ja
ja
jp
lds
jmp
xor
and
push
cwtl
sti
jno
jmp
aam
adc
xchg
in
mov
mov
or
dec
ficoml
pop
xor
mov
not
lds
push
aaa
or
stos
inc
inc
adc
sbb
sbb
sbb
pop
addr16
mov
inc
xchg
testb
xor
mull
jb
shl
mov
add
push
iret
in
jp
jl
xor
cltd
fnsave
cmp
or
scas
sbb
sbb
dec
aad
push
enter
cmp
push
sub
aam
push
mov
mov
inc
test
cmp
jmp
cmp
xlat
and
push
pop
shrl
movsl
mov
xchg
mov
inc
xlat
out
push
xchg
les
punpckhdq
repnz
out
mov
lret
xlat
lods
jno
xor
fimull
mov
cmp
push
std
insb
pop
adc
dec
push
xlat
xchg
clc
aas
enter
shl
mov
cwtl
inc
xchg
fyl2xp1
lock
mov
push
add
sub
jne
cld
cs
fs
mov
pop
mov
xlat
iret
jns
lcall
hlt
in
std
ret
cmp
ja
aad
and
test
in
test
lea
xor
push
dec
not
shlb
mov
dec
jne
adc
outsl
xor
jmp
loope
mov
cmpsb
insb
or
lretw
jp
push
out
sbb
lret
push
aam
or
inc
sbb
push
lea
rorl
or
sti
cltd
arpl
xchg
out
push
sbb
xor
xchg
mov
leave
lods
aas
cmp
mov
cmp
in
ja
sub
cmp
ja
xor
dec
pop
mov
lods
cmpl
shrb
xlat
add
jle
sarl
fsubrl
test
mov
fstpl
lods
xchg
subl
jns
push
je
cmpsb
pop
imul
mov
test
addr16
sbb
aaa
jnp
mov
pushf
outsb
or
enter
jne
test
or
jg
xchg
cld
aaa
inc
push
inc
das
sub
push
testl
mov
out
shll
sbb
loope
jnp
cli
je
cmp
roll
shll
mov
sbb
fs
loop
rcr
lret
mov
xchg
mov
negb
mov
xor
and
sahf
adc
and
iret
mov
fwait
jb
cmp
into
push
data16
push
mov
ja
pop
iret
arpl
adc
or
cmpsl
push
pop
and
cmp
fdivs
and
inc
or
mov
xorb
cs
lock
and
jl
movsb
push
add
jne
pop
pop
test
push
ret
pop
daa
or
add
push
ja
iret
cmp
sub
in
data16
push
out
dec
push
cmp
xchg
mov
mov
sbb
pop
add
sbb
sub
lods
sub
mov
iret
rcl
xchg
push
aaa
add
push
dec
add
pop
insl
test
and
dec
mov
into
jp
adc
xorl
add
movb
fsubrs
mov
dec
and
bound
daa
mov
out
jo
lret
cwtl
fwait
sarb
mov
loope
fistps
lds
jp
dec
ret
push
cmpsl
mov
ja
jl
mov
je
push
push
repz
inc
cmp
or
std
mov
fsubs
xchg
sarb
sub
je
cmp
mov
aad
mov
pop
jae
jo
push
or
lds
pop
mov
pop
xor
mov
fidivrl
pop
popf
xchg
or
add
add
and
add
daa
test
icebp
dec
aam
lock
xor
paddb
fwait
cmp
lea
jae
mov
mov
adc
bnd
push
push
pop
rcl
sbb
mov
sub
xchg
ja
in
add
push
into
loope
lods
mov
xor
in
lods
sub
mov
loopne
icebp
outsl
jge
rorl
cmp
jecxz
lods
aad
test
repnz
sub
aad
jns
cmpsl
xchg
hlt
xlat
add
inc
pop
in
loope
outsb
xor
icebp
fisttpll
subl
js
mov
xor
into
push
sub
outsl
test
mov
or
xchg
icebp
movsl
dec
mov
aam
std
fwait
sub
fsubrs
inc
je
and
push
mov
jp
xchg
insl
cmpsb
pop
mov
and
xchg
mov
aaa
cli
flds
xor
xchg
daa
inc
xlat
in
push
test
jno
repz
jp
xor
cmpsl
lods
inc
hlt
mov
jmp
xor
loop
into
inc
out
pop
lret
out
repz
scas
lcall
int3
jbe
or
imul
cmp
mov
sub
aam
adc
inc
cmc
jmp
insb
xor
xor
sbb
and
cmp
stos
out
adc
rorl
daa
mov
sub
xlat
add
mov
into
or
pop
das
inc
shrb
into
aad
or
jp
arpl
fldl
addr16
dec
mov
iret
mov
xor
sub
outsl
rdtsc
pop
neg
divl
jmp
aam
pop
pop
or
xchg
out
jne
mov
out
jp
add
lcall
insl
pop
mov
in
xchg
mov
call
add
jl
jo
add
pop
push
ror
sub
call
xor
out
adc
mov
sarb
cltd
add
cmc
fimuls
inc
clc
jg
in
adc
les
mov
adc
mov
mov
mov
je
lret
out
or
inc
inc
js
jle
add
fstps
cmp
jmp
cmp
sbb
iret
add
int3
call
incl
push
in
mov
xchg
scas
mov
cmp
sbb
insl
push
mov
les
xchg
aas
dec
push
xchg
imul
fidivl
stc
jnp
stc
inc
jp
push
aam
pop
sub
call
push
bound
mov
jo
cmp
adc
imul
popf
stos
inc
jge
or
pushf
popl
cmc
sbb
xchg
enter
push
or
cmp
sub
mov
mov
mov
roll
pop
mov
idiv
jne
add
loope
dec
or
and
xchg
int3
dec
sub
test
stos
dec
repnz
fs
nop
outsl
pop
lcall
sbb
mov
xor
repnz
loope
divl
jb
push
jecxz
cli
jl
or
addr16
lahf
into
insl
lcall
and
sahf
test
add
xorb
jo
and
arpl
jnp
pop
fisttpll
jg
clc
lret
xchg
loope
idivl
nop
jp
and
push
adc
enter
bound
adc
fstps
sbb
lock
pop
cmpsb
xor
cmp
adc
gs
dec
cmc
dec
mov
in
aad
cmp
les
shll
xchg
xor
pushw
pop
bound
stc
sbb
lcall
inc
test
repnz
jnp
add
push
ret
jnp
data16
std
and
add
adc
arpl
mov
les
xor
dec
jmp
sub
xor
adc
aas
aaa
sub
into
insl
adc
repz
mov
mov
xor
xor
xchg
je
inc
inc
cmpsl
ret
insb
fstpt
adc
loope
add
in
push
xchg
pop
outsl
stc
push
mov
mov
rclb
repnz
dec
or
sbb
outsl
mov
pop
sub
mov
add
notl
repnz
rclb
fdivp
fwait
data16
mov
pop
fs
xor
lret
xchg
mov
outsb
test
xchg
mov
sbb
roll
fs
add
movsb
cmpsl
daa
add
data16
out
add
rcrb
inc
xchg
mov
js
mov
arpl
xchg
aad
dec
fdivs
mov
into
dec
xchg
push
imul
filds
add
dec
mov
cs
inc
and
or
aad
and
adc
xchg
adc
outsb
sti
inc
push
pop
inc
js
push
cs
in
sbb
insl
out
pop
fisttpll
cli
pop
cmc
add
call
movsl
push
adc
and
xor
xor
inc
xchg
movsl
lcall
mov
xchg
push
daa
dec
lods
sahf
mov
clc
mov
pop
push
movsb
mov
lods
xchg
testl
outsl
icebp
dec
jnp
sbb
into
sub
idiv
push
mov
icebp
lret
push
xchg
dec
imul
mulb
sub
mov
inc
cmp
data16
xchg
push
lcall
int3
xchg
sbb
adc
popa
imul
arpl
lcall
pop
scas
arpl
scas
pop
jge
jae
jmp
aam
aas
jg
pop
mov
stos
cmpsl
sbb
mov
hlt
push
pusha
sub
mov
jmp
outsb
hlt
jo
fdivl
subl
hlt
jmp
fsts
jmp
xchg
xor
lahf
aas
xchg
lock
in
mov
mov
fsts
sbb
push
lcall
mov
bound
int3
inc
sbb
roll
dec
jle
jb
outsb
jecxz
aaa
dec
pop
inc
cmp
inc
nop
in
mov
sahf
leave
pushf
insl
insl
inc
jg
jmp
cmc
ljmp
inc
pop
adc
fcompl
or
sub
sbb
ja
out
rolb
lcall
mov
pop
sbbl
je
dec
lret
lret
jne
into
stos
les
inc
add
out
cmpsb
pop
push
cs
test
push
ficomps
stos
push
popa
add
pop
psrlq
mov
lea
imul
scas
dec
out
repz
or
ret
adc
insb
sub
push
sbb
out
ret
aaa
jns
bound
in
jge
pop
inc
lcall
ficoms
xor
xchg
mov
jno,pn
cmp
dec
xchg
xchg
in
mov
test
enter
addr16
add
add
stos
into
in
xor
xor
inc
sti
inc
sbb
cmpsl
mov
push
hlt
aaa
std
cmpsl
subb
mov
xchg
fcmovnb
or
cmp
shrb
lods
cmp
aad
lcall
std
mov
inc
jg
xchg
push
adc
loope
xchg
pop
je
fnop
sub
jae
ret
and
bound
loope
jmp
lods
stos
mov
out
cmp
pop
fistps
mov
dec
jnp
jns
pop
push
popa
hlt
fs
dec
std
xor
pop
and
push
mov
pop
test
mov
std
mov
dec
pop
mov
inc
hlt
cmp
aas
imul
jmp
xor
sbb
jne
and
sub
lahf
fisttpll
dec
das
ss
adc
mov
adc
xlat
cmp
push
repz
sbb
sbb
and
sbb
add
xorb
pop
in
mov
xchg
icebp
rcrl
push
pop
jg
cmpl
icebp
push
in
mov
push
fwait
push
mov
cmpsl
add
shll
mov
mov
sbb
pop
push
jnp
mov
mov
andb
test
in
push
pusha
icebp
jo
movsl
sub
js
push
pop
lods
mov
in
cli
xor
lahf
xor
das
ljmp
cmp
adc
or
and
cmpsl
push
pop
or
mov
mov
or
cld
adc
pusha
mov
inc
lret
and
sub
hlt
lret
pop
add
xor
pop
inc
sub
enter
leave
fucomi
imul
dec
int
test
sbb
push
popf
mov
addr16
movsl
out
fs
pop
ja
imul
jns
lods
fistps
mov
rorl
or
arpl
cmpl
dec
out
cmp
lock
and
ljmp
nop
pop
into
and
push
pop
pop
test
and
stc
or
adc
lcall
sub
sbbb
xchg
add
or
pop
ljmp
lock
insb
pop
lods
into
mov
jle
mov
sar
xchg
outsl
mov
cmp
dec
lret
andps
jmp
push
or
xchg
into
leave
repnz
popf
and
and
jnp
jb
sub
inc
call
mov
or
call
mov
rorb
mov
jo
jg
dec
add
pop
out
adc
add
inc
repz
mov
sub
out
jns
das
sub
fiaddl
shrl
dec
out
pop
frstor
les
mov
push
adc
cmp
test
inc
cli
insl
loopne
insl
mov
call
inc
subl
or
fimuls
mov
mov
in
cmp
cmp
orl
cwtl
lock
add
dec
sub
insb
pop
lock
sub
sbb
push
inc
ror
sbb
jle
cmpsb
cli
movsl
xor
pop
cmp
push
cmp
xchg
adc
or
sub
mov
dec
mov
sub
jae
xchg
lods
ret
pushf
pop
sub
sub
cmp
divl
cmpsl
xchg
ret
push
pop
popa
xchg
add
shll
or
imul
push
pop
add
inc
or
bound
jne
dec
sub
mov
dec
insl
ud0
mov
or
inc
ret
jae
movb
int3
mov
push
and
cwtl
xor
jns
lods
add
cmp
maskmovq
idivl
int3
sub
mov
pop
jae
push
mov
test
and
adc
cmp
and
pop
mov
inc
sbb
inc
adc
xor
std
pop
sbb
popf
sarl
into
mul
int3
mov
icebp
rcrb
cmpsb
adc
adc
jl
sbb
adc
fsubrs
or
cli
mov
dec
adc
cmp
sbb
push
and
cmp
mov
push
jne
popa
repnz
mov
loopne
fadd
add
int
das
mov
fcmovnbe
dec
lds
inc
xchg
lret
sub
mov
jno
sti
aad
mov
mov
xor
sti
jne
or
in
cwtl
cwtl
push
addr16
mov
ret
jecxz
push
mov
adc
mov
and
inc
push
jp
dec
mov
pusha
lret
hlt
and
and
out
icebp
mov
ja
jecxz
cmpsb
or
dec
testb
bound
stos
cmp
jnp
jle
inc
adc
rolb
imul
ret
dec
arpl
jge
push
mov
cmp
icebp
popa
pusha
pop
std
arpl
xor
aad
push
daa
jge
cld
js
sub
push
jecxz
cmpsb
mov
dec
add
xchg
push
hlt
push
cmp
lds
sahf
or
pop
ss
test
pop
pop
jno
pop
mov
mov
mov
jmp
dec
xor
add
sbb
sub
lods
sbb
xchg
call
dec
call
add
fdivrs
mov
sbb
js
xor
xor
pop
mov
movsl
adc
lods
das
pusha
sub
imul
xchg
imul
mov
movsb
cltd
cmpsl
addr16
stos
jo
in
incb
sbb
jecxz
or
mov
jle
mov
sub
mov
inc
mov
dec
xchg
bsf
cld
popf
jp
xor
jge
ret
xorb
in
lea
mov
in
sbb
pusha
adc
xor
fsubl
jge
or
cs
and
add
orb
fiadds
adc
sub
mov
incb
nop
adc
dec
lods
dec
push
mov
inc
ret
mov
enter
shl
stos
mov
ja
xchg
xchg
in
jecxz
int3
rolb
push
lcall
pop
scas
xchg
sbbb
cmp
xchg
test
sti
dec
mov
push
pop
push
insl
scas
jb
jecxz
inc
adc
ds
xor
xor
jns
xchg
leave
in
dec
outsl
std
jg
add
mov
es
cmpsb
sbb
sbb
adc
xchg
rorb
cmpsb
in
roll
sbb
push
push
js
cli
inc
out
sub
mov
lods
fs
push
push
enter
adc
xor
xchg
ds
mov
sar
int
mov
push
jo
adc
insl
lea
pop
test
jns
das
adc
aad
lock
int3
push
test
in
cltd
test
test
sub
sub
xchg
mov
push
mov
sarb
pop
lds
enter
dec
xor
cld
push
loopne
pop
mov
loop
in
mov
jns
mov
xor
pop
sbb
push
mull
mov
aam
pop
push
lcall
cmp
adc
sbb
das
sbbb
lds
push
icebp
push
add
addb
ja
xor
ja
outsl
lds
popf
jle
dec
mov
sbb
jne
add
pusha
out
in
popa
and
add
jmp
fsubl
sub
adc
inc
shlb
push
fnstsw
add
es
sbb
push
mov
sbb
scas
xchg
lret
into
inc
movsb
or
xor
dec
popa
add
mov
add
and
sbb
sti
rcrl
push
out
sbb
nop
cmp
push
xchg
sub
adc
xchg
test
pushf
mov
mov
sbbl
and
mov
negl
sub
mov
or
inc
arpl
xorl
sbb
lret
out
jbe
add
add
mov
push
fmulp
dec
xor
pop
ret
mov
push
jecxz
add
fstpt
mov
mov
scas
aad
cmp
lahf
xor
push
mov
sbb
sbb
scas
mov
rclb
inc
lods
sub
xchg
xchg
ja
mov
mov
xchg
xor
in
xchg
add
call
sbb
push
out
sahf
data16
xchg
or
xor
es
arpl
mov
shl
mov
mov
sbb
and
mov
mov
xorb
loopne
aaa
mov
pusha
sub
mov
lea
push
je
sub
mov
mov
mov
pop
adc
mov
mov
xor
jle
cld
leave
out
pop
cmpsb
adc
aam
test
cmpsb
addr16
push
sub
xchg
push
mov
stc
sahf
xor
xchg
xchg
clc
sbb
mov
loop
xchg
xor
mov
lret
insb
pop
pop
pusha
popf
mov
mov
inc
inc
cmpsl
sbb
push
lahf
mov
mov
mov
lock
test
sub
out
pop
lcall
sbb
xlat
and
into
adc
inc
xchg
loop
push
lret
fidivs
gs
push
xor
es
out
out
push
xchg
jae
pop
cmp
out
clc
xchg
jp
mov
jne
fxtract
aaa
jbe
sbb
cmp
cmp
cld
dec
mov
popa
cltd
add
lods
mov
cmp
mov
push
dec
outsb
mov
fisubrs
je
mov
fnstsw
enter
or
xor
sub
push
stos
jae
nop
adc
sbb
lret
test
outsb
fs
inc
dec
jae
iret
or
pop
xor
xchg
ss
fs
pushf
mov
movsl
adc
je
mov
mov
movsl
mov
scas
xlat
fimuls
dec
jno
pushf
out
adc
pusha
fwait
jne
sbb
inc
cwtl
adc
xchg
jecxz
insb
add
xor
fists
jmp
out
dec
rcl
flds
push
jb
cld
jg
clc
fisttpl
ds
faddl
inc
orl
int
loopne
test
fnsave
test
push
jecxz
sub
cmp
enter
pop
add
mov
lock
cli
mov
push
push
and
testl
ja
sub
clc
lods
into
add
fcomps
dec
jo
iret
scas
mov
mov
inc
out
inc
adc
imul
dec
std
push
push
stos
sub
sbbb
stos
ss
xchg
sbbb
rcll
push
lods
popf
fisubrs
imul
and
lcall
cmpsb
loope
mull
mov
shl
and
ret
add
mov
hlt
xor
mov
das
sbb
push
mov
add
push
mov
cld
mov
call
nop
xor
push
dec
jae
dec
mov
cmpsb
fs
dec
cmpsb
std
js
js
pop
mov
push
and
mov
sbb
int
jbe
xor
mov
inc
fwait
call
leave
divl
add
mov
mov
aam
and
movsb
jmp
ja
pop
or
cli
push
push
mov
add
scas
out
mov
shl
dec
sub
xlat
test
cli
sub
push
mov
iret
int
xchg
loopne
or
push
orb
out
cmpsb
stos
test
out
push
sti
in
mov
test
stos
sbb
imul
ss
insl
push
sbbl
pop
pop
jg
cltd
dec
dec
pop
sub
adc
shrl
shlb
ret
mov
lods
mov
mov
adc
sub
movsl
lock
add
and
divb
in
fimull
mov
fsubl
add
xor
ljmp
xchg
cmp
pop
inc
loopne
insl
jl
data16
push
pop
rorl
filds
daa
jno
ss
pop
ret
pop
mov
clc
cmp
xchg
iret
xor
fbld
nop
call
or
cmpsl
imul
lcall
cmp
pushl
cld
and
push
int3
in
clc
das
mov
stos
xchg
sbb
or
xor
sbb
or
push
mov
jg
and
sub
dec
cs
push
cmp
jo
shll
mov
dec
rcr
sbb
sbb
loop
adc
aam
pop
lret
pop
fildl
push
outsl
cmpsb
imul
xchg
daa
xor
repz
pop
sbb
std
arpl
jbe
fmulp
decl
sarb
xchg
cld
sbb
inc
es
jbe
ficoml
xchg
adc
cs
dec
outsb
cmpsb
and
clc
mov
mov
pop
adc
movsl
and
lret
leave
je
lods
or
cli
push
pushf
popa
scas
jmp
xor
aaa
inc
mov
jno
out
add
lock
jb
xlat
test
data16
nop
imul
mov
test
fsubl
jge
jo
adc
and
sbb
mov
adc
pop
mov
out
ror
xchg
in
repz
adc
subb
ss
scas
push
and
movsl
jle
jecxz
outsl
xchg
inc
sarb
fstl
pusha
movups
dec
sbb
pop
lods
movups
clc
out
or
add
addr16
adc
lods
call
xor
mov
mov
lret
jne
adc
rep
add
mov
jl
jge
clc
mov
xor
into
hlt
mov
int
cwtl
test
jnp
or
scas
dec
xchg
pop
add
negb
jmp
insl
cmp
mov
xor
lods
out
and
popf
lret
add
xchg
ret
jns
imul
jne
ja
test
jae
pusha
fsubrl
shlb
daa
push
push
cmp
shlb
or
cmc
shrl
test
lahf
dec
hlt
call
xchg
insl
push
cmp
or
xor
add
mov
enter
sbb
movsl
xchg
dec
jmp
ss
daa
cltd
ds
and
data16
sub
xchg
mov
mov
lods
movsl
push
xchg
sbb
adc
sbb
loope
add
outsb
orb
sub
je
add
sub
mov
push
lods
jnp
pushf
mov
add
shlb
and
mov
in
pop
or
push
jae
mov
add
movsb
jae
or
lea
or
jne
not
fdivs
adc
int3
xlat
and
dec
lds
sbb
jle
xor
scas
sub
mov
in
test
push
pusha
cmp
push
sbb
or
sub
push
xor
cmp
repz
jae
sti
int3
pop
in
push
and
push
repz
push
rorb
fidivs
das
leave
dec
idivl
sbbb
mov
ret
cmc
push
pushf
sahf
pop
sbb
mov
nop
clc
jg
scas
mov
jb
fisubs
xor
mov
mov
leave
movsb
movsl
inc
jl
sub
repnz
fdivs
pop
adc
add
sahf
push
xchg
mov
mov
popf
pushf
mov
andb
cltd
mov
jo
notb
mov
movsl
test
jmp
pop
repnz
pushf
imul
aas
push
repz
push
inc
inc
sbb
xlat
cwtl
xchg
cld
loop
test
sbb
test
pavgb
pusha
mov
jg
icebp
aaa
adc
xor
stos
or
push
adc
inc
fimull
aad
lods
dec
pushf
inc
add
sub
jo
and
sarb
into
xor
std
repnz
call
das
pop
out
icebp
sub
inc
add
lock
cmp
or
sbb
or
sub
lods
xchg
ds
push
lods
jge
sub
push
fstpl
push
mov
inc
std
xchg
sub
loope
adc
nop
fisubrs
and
mov
daa
imul
mov
mov
add
fwait
push
cmp
or
stos
into
in
jno
mov
dec
in
ljmp
jmp
in
jge
mov
xchg
nop
fs
sub
dec
in
fistps
addl
insb
add
mov
or
sub
xchg
lds
xchg
xor
sbb
insb
jle
ret
and
jg
pop
fsubrl
push
cmpsl
arpl
lods
imul
add
lret
push
lret
jnp
xchg
xchg
xor
mov
fucomip
pop
std
xchg
mov
int
out
or
jns
xchg
fmuls
jbe
arpl
cmp
gs
mull
adc
mov
rolb
sub
jb
mov
jnp
inc
ret
je
clc
xchg
cmp
mov
adc
popf
daa
sti
movsb
ljmp
inc
jmp
sbb
xchg
imul
insl
mov
addr16
insl
out
movsl
xchg
clc
mov
push
inc
xor
push
int3
js
shll
push
std
scas
mov
pop
icebp
repz
xchg
hlt
test
ja
xor
sbb
aas
add
data16
icebp
mov
jne
mov
add
cmp
das
jne
xor
loopne
dec
sub
inc
shlb
loop
ret
pop
lea
xor
mov
scas
jl
cmp
or
ror
fdivrp
arpl
cmp
mov
sub
push
lahf
fildll
push
ds
lcall
dec
inc
xchg
inc
loope
fwait
and
nop
shlb
push
fcoml
notb
and
lods
xlat
lcall
sbb
int
daa
addr16
ret
shl
aam
lds
lods
scas
test
arpl
inc
insl
rclb
loopne
mov
mov
pop
insb
add
popf
jmp
inc
lock
xor
sub
rolb
fldl
xchg
fisttpll
or
dec
or
scas
cmpsb
mov
aad
cmp
dec
push
outsl
cmp
lods
cmp
dec
movsb
mov
testb
call
jge
xor
sti
mov
sbb
std
jmp
bound
cmp
adc
insl
test
mov
test
xor
mov
test
sbb
push
mov
sbb
mov
cld
subl
sbb
add
pop
fs
fucompp
in
test
inc
xchg
dec
jb
jne
add
push
mov
jae
add
pusha
mov
jns
icebp
push
sub
xchg
sarl
aaa
xchg
pop
test
addr16
jbe
inc
in
cli
push
lret
xor
or
push
pushf
repz
sub
addl
or
adc
push
sti
adc
pop
sbb
jmp
imul
inc
xor
fcoms
dec
mov
mov
xchg
into
sbb
push
mov
xor
stos
into
pop
add
adc
mov
adc
fisttpll
and
arpl
sub
sub
clc
out
test
push
pop
insl
repz
ja
mov
fildll
pop
rcl
xchg
push
fstpt
and
lods
sbb
jg
pushf
repnz
or
lock
in
outsb
push
and
push
pop
mov
xchg
call
push
movsl
cli
add
sub
and
dec
outsb
cltd
or
pop
ljmp
adc
cs
adc
sub
jb
data16
stos
jne
sub
insl
mov
inc
mov
pop
lret
xor
je
enter
mov
subl
push
jmp
xor
fsubrl
lret
addb
add
movsb
stos
xchg
loop
mov
xchg
sbb
into
je
icebp
icebp
and
iret
mov
mov
jmp
mov
idiv
mov
mov
dec
pop
adc
lods
fistpll
stos
push
push
jne,pt
jge
inc
mov
lock
fldlg2
enter
jmp
lea
push
cmp
add
adc
icebp
cmp
loop
fisubrl
fs
daa
jnp
add
iret
pop
insl
cwtl
inc
pop
cmp
loope
shrl
and
lret
add
ud2
lcall
in
sub
mov
jnp
sub
jg
lea
std
inc
cmpb
add
mov
psrad
adc
push
mov
sub
out
outsl
sahf
fwait
icebp
or
in
in
out
and
mov
mov
mov
xchg
or
mov
scas
je
jg
ss
into
aad
dec
mov
lock
lea
sub
xchg
jno
frstor
cmc
movsl
mov
mov
movsb
inc
push
push
fwait
out
lock
mov
sbb
adc
pop
ds
mov
jne
lret
mov
das
mov
test
ficoml
ja
dec
ret
xchg
loopne
in
cmpsb
fmull
jmp
pushf
sbb
jmp
and
xchg
xor
imul
repz
sbb
fwait
dec
pop
push
jbe
mov
mov
add
xchg
mov
push
jb
shrl
mov
mov
jo
cli
jbe
jp
push
lods
mov
ljmp
sarb
insl
aaa
jae
dec
and
insl
negl
jnp
or
call
push
cmp
sub
sti
push
in
push
cmpsl
mov
dec
pop
andb
pop
ret
cli
pop
int
or
jge
mov
mov
ret
mov
sub
push
or
negl
cmp
jno
jae
in
inc
cltd
out
imul
adc
jecxz
mov
cli
sbb
rolb
in
sub
pop
hlt
push
push
cmp
mov
in
mov
cmpl
or
cmp
xchg
sbb
mov
pop
jns
cmpsl
push
sbb
insb
in
lahf
mov
popa
mov
fidivrs
mov
dec
int
hlt
or
shlb
mov
stos
jno,pt
ror
adc
push
xchg
nop
lret
imul
sahf
xor
mov
sub
or
adc
jle
jecxz
xor
pusha
cmp
sbbl
jl
enter
in
jge
xchg
cli
aam
sar
lret
aas
shrl
cmp
or
imul
inc
jl
sub
js
mov
xor
xlat
arpl
std
jne
dec
add
popa
jl
aad
sbb
sub
jnp
sbb
xchg
and
pop
insb
je
inc
sbb
aam
fdivrl
sarl
sub
popf
xchg
test
into
mov
cmpsb
and
bound
idivl
lods
push
jp
sub
add
xchg
dec
sbbl
and
cmp
andb
shll
test
loop
popa
mov
cmp
inc
stc
push
cmp
stc
jae
std
hlt
fimuls
in
push
inc
repnz
mov
outsb
and
push
or
fcompl
add
jp
mov
insb
ret
adc
dec
ljmp
pusha
movsl
fstpl
xor
jecxz
mov
xchg
add
fs
repz
fwait
repnz
mov
xor
clc
cmp
fldt
bound
cld
call
in
adc
cmp
cld
lcall
sbb
inc
stc
xor
xchg
das
daa
into
dec
pop
xor
sbb
fildll
out
ret
popl
adc
cmp
mov
adc
jge
stos
in
mov
mov
add
jne
push
cmp
rcrl
iret
call
mov
ficoml
xor
gs
shll
mov
xchg
cmp
arpl
jg
jle
inc
mov
adc
fucomp
adc
leave
mov
push
cmpsb
cs
xor
lock
fs
int
xor
jmp
enter
jmp
cmpsl
push
cli
arpl
cmpl
jecxz
pop
mov
stc
addr16
xor
arpl
test
pop
loop
xchg
shlb
lahf
or
jg
imul
ret
hlt
jmp
mov
jbe
movnti
movsb
or
add
out
cmp
lods
movsl
xchg
pop
cld
cltd
jg
jns
mov
mov
mov
xchg
and
dec
pushf
test
adc
xchg
or
push
fsubrs
ret
pop
das
xor
jno
jae
pop
fdivs
ds
add
outsl
dec
sahf
ds
add
out
insl
bound
ficoml
mov
adc
pop
dec
and
outsb
xor
ljmp
inc
jae
ss
int3
ret
fs
or
sbb
dec
hlt
xchg
xor
daa
jo
sahf
rcpps
inc
ss
jge
pop
xor
dec
imul
call
mov
mov
out
addr16
test
and
les
jecxz
hlt
fsubl
or
das
aas
push
mov
lock
inc
push
repz
ja
mov
jmp
adc
mov
cmpb
int
pushf
push
xchg
popf
inc
daa
call
pop
ficoms
negb
into
adc
inc
test
pop
mov
lods
push
or
jb
mov
xchg
pop
mov
push
lods
add
scas
addr16
xchg
in
outsb
sti
jae
dec
mov
into
outsb
sbb
mov
jmp
rcll
scas
dec
push
jbe
adc
sbbb
xor
add
adc
aam
test
jmp
js
xchg
cs
js
loopne
lret
fs
out
xlat
shll
dec
mov
sbb
dec
xchg
and
sbb
jle
shlb
lods
sub
aas
cmpb
out
sub
jge,pn
lock
int
lret
loop
push
fsubrp
nop
stos
jne
xchg
add
out
rorb
leave
or
aad
nop
or
stos
rcr
cmc
cmc
sub
stos
cmpsl
outsl
mov
sbb
jge
fsubs
cmp
mov
mov
movsb
xchg
sub
lcall
and
mov
adc
mov
or
popa
sar
xchg
jg
add
push
push
push
push
out
loopne
enter
xor
mov
sbb
lahf
repz
xchg
lock
push
test
gs
bound
cmp
xchg
mov
clc
xchg
ss
stc
inc
cltd
hlt
xchg
mov
sbb
ret
adc
test
inc
push
mov
add
add
bound
add
les
bound
icebp
sbb
data16
cli
inc
mov
fnsave
in
ficoms
xor
fstl
push
adc
rcrb
jns
add
push
mov
movsl
lds
repnz
je
jg
lahf
jmp
imul
push
movb
mov
decl
aam
dec
loopne
add
xchg
loop,pn
push
sbb
fsts
out
jg
adc
pop
add
push
scas
adc
cs
inc
les
and
xchg
cs
call
mov
mov
push
push
shll
aam
or
adc
imul
rclb
pop
adc
mov
dec
fmul
bound
sub
jg
xor
movsl
pusha
sbb
inc
push
jg
aas
pop
cld
stc
pop
das
out
pop
cltd
lods
sar
inc
push
test
fnstsw
dec
cld
pop
inc
shr
cwtl
xchg
jl
aas
sub
inc
add
mov
pop
cmp
mov
mov
mov
pushf
dec
leave
mov
popf
xor
fildl
jb
dec
mov
enter
and
adc
sub
js
orb
mov
xor
cmp
dec
add
push
or
clc
or
mov
mov
mov
jae
stos
daa
sbb
jnp
inc
clc
enter
dec
or
push
mov
adcl
out
out
mov
pop
fnsave
jge
add
aas
outsb
lcall
cmpsb
jecxz
decl
test
push
in
sub
aad
ja
mov
into
imul
xor
pusha
imul
pop
cwtl
mov
sbb
pop
inc
test
add
lods
adc
jbe
mov
int3
andb
and
jns
mov
mov
loope
xlat
jmp
sbb
push
icebp
xlat
and
shl
hlt
or
cli
inc
mov
jns
iret
pop
rolb
cmp
call
fiaddl
push
sbb
xchg
out
pop
sbb
inc
popa
call
aas
scas
jg
sbb
pop
xchg
adc
inc
cli
imul
adc
pushf
mov
loop
dec
mov
aam
pusha
add
jge
add
fmuls
scas
ljmp
pop
daa
xchg
pop
loop
sub
ret
mov
stc
cwtl
adc
sub
cmp
adc
and
lods
rcrb
mov
sub
mov
push
cmpsl
xlat
push
movsb
fmull
pop
xor
and
inc
add
mov
fcmove
into
fisubrl
sub
mov
fisubl
sub
push
in
add
or
push
push
in
scas
mov
outsl
shl
mov
sub
mov
cmpl
adc
out
les
mov
xor
mov
and
push
pop
lcall
dec
fnstcw
mov
sub
roll
push
or
cmpsb
daa
mov
jge
insb
mulb
fildl
cmp
mov
mov
cld
stos
sbb
les
fwait
mov
push
sub
sti
enter
incl
push
sub
stos
jmp
cmpsl
mov
fiadds
adc
imul
mov
int
lret
rcrb
das
call
inc
je
hlt
leave
call
aam
scas
pop
push
gs
ljmp
fiadds
insb
fiaddl
add
sbb
imul
mov
mov
xchg
and
jo
pop
mov
and
scas
push
sub
loop
mov
dec
push
in
mov
stos
int3
and
or
push
dec
cmp
sub
cli
test
push
xorb
and
cmp
mov
insl
pop
sub
orl
xor
adc
add
or
xchg
std
lock
or
mov
adc
jecxz
fistl
fwait
popa
in
clc
xor
inc
decb
fsub
sub
jnp
dec
arpl
fmuls
rcr
fstps
daa
adc
mov
inc
adc
pop
xchg
xchg
adc
push
out
pusha
jmp
shlb
xchg
mov
inc
adc
add
pop
push
pop
shrb
cwtl
jmp
icebp
xchg
fiaddl
mov
and
jbe
lods
mov
loope
or
fdivrs
scas
outsl
sub
push
adc
repz
mov
test
adc
jecxz
ss
cmp
add
push
sahf
jbe
cs
nop
or
lea
loopne
cmpsb
cmc
nop
in
jl
ret
xchg
repz
push
loopne
rorb
data16
lahf
xchg
rolb
lahf
movsb
add
enter
mov
xchg
push
xor
and
dec
fldcw
push
inc
adc
pop
in
push
aaa
mov
adc
cmp
mov
push
lock
sti
out
or
ret
lds
divb
enter
jno
loopne
mov
inc
xchg
lods
push
das
mov
add
gs
sbb
sahf
fwait
lds
leave
das
mov
and
repz
jns
scas
out
push
imul
pop
mov
adc
or
mov
mov
pop
push
out
add
inc
or
sbb
hlt
or
hlt
test
out
mov
xchg
adc
shll
inc
js
cwtl
xorb
jl
sbb
scas
mulb
cmp
cmpsl
lods
jg
pop
sahf
fbld
dec
ja
jnp
leave
cmp
pop
ret
aaa
call
dec
imul
sbb
xlat
mov
imul
out
imul
inc
ja
mov
xor
shl
jne
cmp
push
es
jb
or
cmp
pop
dec
and
adc
sbb
arpl
dec
in
stos
sbb
inc
repz
xor
xorb
dec
xlat
cmp
and
mov
stos
jge
int3
add
das
mov
fincstp
int3
fiaddl
xor
jge
pop
movl
ja
push
ss
inc
icebp
stos
iret
cmp
cmp
push
test
insb
in
pop
popl
fisubrs
jo
mov
pop
mov
push
stos
bound
sub
push
loope
mov
mov
xor
ljmp
sbb
mov
sub
sbb
je
test
dec
sbb
xor
add
inc
push
insb
jl
jmp
pusha
lcall
pop
pop
stos
ret
jmp
lods
pop
mov
imul
jno
mov
lahf
gs
dec
punpckhdq
inc
mov
pop
shrb
fiadds
outsb
cmp
lods
mov
loop
adc
outsb
out
adc
mov
pushf
xchg
icebp
sbb
and
push
mov
and
xchg
add
push
arpl
cmp
sahf
jge
pop
jmp
sbb
dec
ja
insl
cmpsl
add
sbb
adc
cmp
out
dec
ds
mov
jp
clc
loopne
jne
stos
es
mov
mov
jmp
cmp
inc
xor
cmp
push
insb
pushf
dec
or
jmp
mov
sbb
cmp
pusha
or
leave
fs
scas
add
nop
mov
or
jbe
jl
or
sub
inc
xor
loop
pop
mov
pop
inc
pusha
mov
jne
and
add
bound
sahf
cmp
pop
mov
cmp
movsl
and
sbb
push
testl
adc
in
inc
aad
ljmp
adc
adc
gs
add
adc
xor
lret
xchg
inc
mov
xchg
pop
dec
mov
bound
neg
enter
cwtl
dec
cs
daa
shr
popf
jp
loop
jno
js
xchg
jb
sbb
imul
pop
movsl
mov
stc
scas
xchg
mov
pop
xchg
mov
xchg
into
rolb
gs
rolb
out
popf
icebp
pop
lods
mov
std
jmp
shlb
dec
sbb
out
jb
ficompl
lea
loopne
add
jnp
jmp
scas
scas
cmp
mov
decb
mov
add
iret
jl
lahf
push
jp
dec
data16
jae
jl
mov
mov
xor
mov
push
cld
jecxz
add
mov
sub
push
ds
add
cmp
cli
add
add
adc
scas
fiaddl
cmp
notl
and
push
sbb
lahf
and
dec
test
sub
inc
insl
in
call
fistpl
std
je
clc
push
jmp
dec
aaa
dec
xchg
mov
and
das
mov
mov
add
or
jg
push
rcrl
mov
scas
call
or
testb
iret
mov
bound
in
push
aas
xchg
xor
push
ss
mov
xchg
cmp
cmp
lods
mov
sbb
xor
cmp
in
cmp
lea
xchg
sub
jo
mov
in
pop
in
pop
xor
jg
xor
cli
cmp
lcall
into
or
sub
inc
in
cli
arpl
test
pop
shlb
repz
mov
int3
mov
scas
mov
lods
xor
jo
fbstp
mov
push
jmp
xchg
fdivr
sub
iret
adc
push
or
jg
hlt
jae
cwtl
mov
pop
popf
loope
dec
idiv
ret
adcl
outsl
nop
adc
jmp
adc
ret
jp
push
jo
scas
cmp
add
aam
subl
ficoms
dec
mov
out
inc
or
fistpl
iret
call
xor
stos
dec
xchg
xchg
pop
dec
add
mov
movsl
mov
dec
scas
dec
mov
call
std
mov
mov
fistpl
popl
rorb
cmp
ljmp
inc
ds
dec
sbb
jae
xor
mov
adc
sbb
or
pushf
dec
pop
std
aas
cld
ffreep
jb
fidivs
insb
pop
cmp
ss
jp
or
fisubl
sub
mov
call
pop
arpl
inc
dec
call
mov
inc
ret
add
dec
cmp
into
js
cmpsb
sbb
pop
xchg
icebp
es
inc
out
or
sbb
sbb
add
cmp
and
mov
lock
cmp
cmp
mov
push
loopne
pop
adc
cmp
xor
add
lods
mov
mov
xchg
jae
fidivrs
add
cmp
push
sbb
lods
push
bound
movsl
xor
and
mov
pop
js
push
xchg
loope
cmpsb
test
mov
or
clc
lret
or
ss
inc
aad
dec
pusha
xor
ret
push
mov
mov
pop
insl
adc
xchg
mov
adc
jne
into
das
push
jno
leave
imul
shl
xor
jae
sbb
ljmp
pop
adc
and
aaa
xor
mov
mov
pop
into
jg
cwtl
loopne
cltd
mov
rorb
cmp
jp
xchg
das
incb
icebp
jae
fmull
mov
sbb
dec
mov
xor
mov
popa
sub
adc
js
xchg
jg
shr
mov
cltd
int3
enter
lds
jmp
arpl
std
mov
aaa
movsb
test
imul
ficompl
scas
gs
rorl
add
pop
js
movsb
adc
icebp
xor
adc
xchg
xor
out
mov
pop
adc
arpl
gs
movsl
inc
sbb
sahf
push
xor
cmp
insb
rol
int
jg
out
inc
xor
adc
xorb
mov
inc
mov
jle
jo
mov
inc
out
sbb
std
out
clc
test
lcall
and
addl
fs
mov
call
sbb
ret
push
xchg
call
in
lcall
sbb
cmpl
or
pop
aam
pop
icebp
push
push
je
jns
cmp
dec
mov
mov
lods
fwait
jmp
inc
or
ret
mov
inc
ss
pop
xlat
rcll
xchg
ret
sub
jecxz
pop
inc
out
inc
js
cwtl
ss
or
adc
cmp
add
inc
scas
jp
xorb
decl
int
xor
add
les
movsb
popa
out
or
push
ret
into
dec
clc
or
push
mov
pop
or
sub
jne
mov
lea
sub
sub
gs
enter
cltd
notl
inc
xor
clc
lock
sub
jmp
sbb
pusha
loop
int
pop
push
jnp
and
push
push
xor
cld
inc
jnp
inc
movsl
imul
push
cltd
mov
jecxz
xchg
imul
ret
je
test
cmp
mov
pop
push
add
adc
sub
and
out
mov
mov
sub
dec
std
out
lret
ds
add
jnp
sub
push
je
xor
cmp
outsl
xor
rcrl
mov
or
xchg
adc
sti
mov
out
xchg
stc
daa
rcll
roll
ret
push
jp
pushf
jle
dec
enter
and
into
sbb
jp
sub
jae
aaa
fdivl
mov
xlat
into
insl
push
stc
aam
pxor
popf
sahf
leave
jge
pop
and
mov
mov
xlat
movsl
push
mov
arpl
jmp
call
shl
push
lea
xchg
adc
mov
inc
pop
inc
and
push
sub
xchg
pop
icebp
pop
imul
ja
xchg
inc
dec
outsl
enter
stc
inc
iret
mov
pop
adc
jno
in
imull
cwtl
rcll
cmc
add
add
shl
js
call
jp
sbb
scas
sbb
mov
sub
xchg
mov
mov
inc
jg
xchg
arpl
cmc
rorl
sahf
or
lods
loop
mov
add
sbb
cmpsb
dec
int
push
loop
sahf
in
push
inc
dec
mov
push
pop
imul
lds
insb
les
lahf
out
and
fiadds
flds
push
push
pop
jbe
jp
pop
in
mov
mov
ljmp
fildl
jl
fcoml
or
arpl
mov
call
call
popa
fadds
sbb
js
xchg
sarb
adc
jmp
aam
or
push
inc
repnz
les
in
dec
cmp
sbb
or
cltd
fimuls
ljmp
sarb
dec
out
mov
sub
es
test
mov
pushf
jmp
dec
lahf
sub
sub
outsb
les
sti
xchg
mov
mov
mov
mov
inc
movb
fwait
stos
pop
movsb
pop
imul
adc
sbb
in
notb
mov
jns
jne
or
aas
data16
test
pop
mov
jl
jecxz
iret
mov
repz
push
test
jns
ja
orb
pop
lods
mov
xlat
fwait
pop
cmp
daa
mov
enter
bnd
xor
or
adc
movsl
and
mov
in
pop
pop
jbe
pop
loop
mov
adc
test
push
xchg
mov
int3
and
jp
jp
cmp
popa
sahf
fbld
cmp
adc
fnstsw
fisubrs
gs
mov
mov
fs
into
sbb
lods
out
movsb
jbe
xchg
pop
es
xchg
push
inc
mov
jecxz
call
sub
insb
push
fcmovnu
stc
negb
push
sarb
add
push
notl
mov
jae
mov
mov
rcl
and
xor
cs
inc
mov
dec
dec
lds
pusha
ljmp
sahf
out
fwait
mov
popa
daa
mov
sbb
cmp
dec
in
mov
dec
fnstcw
into
mov
mov
cmc
or
dec
call
or
sbb
insb
mov
or
adc
pop
iret
add
or
ljmp
stos
nop
pop
arpl
outsl
pop
mov
int
and
mov
mov
push
sub
lret
mov
lahf
adc
movups
xor
fidivl
and
xor
stos
mov
repz
push
outsb
pushf
mov
push
int
pop
cmp
mov
leave
in
call
add
xor
lods
push
dec
les
in
or
mov
lret
lock
pop
pop
pop
jl
add
cmp
imul
xchg
pop
push
push
jns
push
test
adcl
lcall
pop
stc
push
hlt
push
out
addr16
sub
in
loopne
mov
int
ffreep
pop
add
mov
das
ret
xchg
mov
cld
add
jne
lret
pop
fists
lods
imul
arpl
jb
adc
push
dec
inc
xor
inc
or
and
idivb
in
dec
xchg
les
mov
jne
sti
inc
ja
fst
jno
repnz
ss
adc
loope
mov
sbb
mov
lods
mov
or
scas
xlat
cli
ret
xor
jg
sbbb
push
mov
inc
xchg
mov
jmp
test
fdivs
fisubrs
jecxz
mov
xor
out
mov
aad
mov
push
fs
mull
cmp
push
daa
jle
aaa
dec
or
sbb
popa
push
xchg
dec
insb
jnp
pop
test
cmp
or
imul
xchg
or
icebp
imul
and
pop
and
pop
add
enter
lret
lahf
mov
cmp
lods
adc
xchg
inc
daa
pushl
mov
bound
gs
aad
dec
pop
pop
push
pop
dec
in
loop
into
pop
daa
add
cmp
popa
sub
rcrl
dec
aas
jge
push
mov
push
popa
cmpsl
ss
dec
pop
outsb
or
add
stos
je
es
int3
push
adc
hlt
stos
mov
cltd
sahf
pop
bound
xchg
int3
pop
sahf
sub
cmpsl
jne
es
imul
mov
sbb
imul
jecxz
vpmullw
jecxz
lods
daa
push
sbb
pusha
mov
mov
idivl
add
std
cmp
adc
and
pop
and
cltd
mov
loop
mov
subb
je
push
jbe
sbb
movsb
cmpsb
fisubrl
xchg
cmpsl
test
or
push
mov
push
cs
add
pop
mov
popf
xor
je
shll
mov
pop
in
jbe
dec
mov
shr
dec
cmpsb
aaa
pop
dec
jge
mov
cmpsl
fnstsw
inc
addr16
vmread
or
mov
scas
in
jecxz
and
jge
pop
sub
shll
add
scas
add
pop
cmc
lea
add
xlat
pop
inc
mov
sub
xor
test
fmuls
mov
ljmp
mov
cmpb
lods
nop
lock
xchg
cmp
lret
xchg
mov
fbstp
fldcw
jno
jg
fs
add
inc
mov
loope
jle
lahf
dec
pop
out
add
inc
push
daa
icebp
pushf
jns
dec
adc
ficompl
mov
add
or
inc
mov
sub
stos
sbb
sti
imul
cmpsb
mov
mov
or
mov
push
pop
dec
fs
xlat
adc
sub
and
jecxz
das
and
aaa
scas
xor
mov
mov
js
push
out
mov
cmc
loope
lret
jne
les
fcmovnu
clc
pop
xor
loope
xchg
out
mov
imul
jp
stc
in
cwtl
push
fisttpll
imul
hlt
xor
sub
mov
xchg
xchg
rcl
sbb
mov
inc
shrl
mov
cmc
jns
iret
out
cmpsb
jg
add
lea
sbb
lcall
cld
jg
xor
fdivl
dec
push
lcall
xor
fcoms
cmp
add
aaa
xor
movsl
push
xlat
psrlw
add
repnz
inc
xor
imul
pop
mov
loop
add
aaa
xorb
cmp
mov
sbb
ror
stos
fs
shlb
jno
inc
outsl
ret
add
push
clc
push
jl
mulb
shll
mov
aas
lods
popa
lods
mov
int
aas
inc
sub
daa
hlt
aaa
pop
sub
addr16
add
icebp
sbb
outsl
cmp
scas
mov
shrl
mov
jo
imul
pop
mov
or
test
nop
mov
cmc
loop
xchg
aaa
inc
push
jne
push
repz
outsl
icebp
add
std
icebp
inc
jb
enter
push
dec
dec
cmpsb
scas
das
out
xchg
pop
pusha
cmpl
jne
fisttpl
mov
rclb
shll
mov
xchg
dec
adc
ror
and
adc
mov
pop
xchg
sti
or
mov
push
add
lods
int3
mov
mov
cltd
cmp
xchg
sbb
in
jmp
mov
out
rcrl
xchg
cmp
dec
pop
out
xor
sbb
mov
lods
xchg
mov
push
dec
imul
add
mov
jo
cmp
dec
mov
ja
cmpsb
xor
xor
cltd
repnz
push
jg
leave
pop
fs
imulb
sahf
jne
and
mov
inc
jbe
in
inc
es
cmp
daa
push
push
adc
jg
cld
mov
cmc
pusha
push
pop
jge
shrl
pusha
or
jnp
ss
push
push
push
cmp
dec
lock
lods
stos
or
fstps
mov
push
insl
dec
scas
pop
add
int
mov
mov
push
stos
mov
push
popl
pop
xchg
or
mov
and
cmp
mov
add
mov
mov
fbstp
outsl
xchg
iret
mov
rolb
int
je
jle
mov
ss
loopne
es
pushl
pop
sub
cmp
add
push
or
pop
sub
push
mov
sub
aad
dec
jge
clc
pop
push
xor
data16
cli
push
pop
lahf
add
stos
jl
add
jbe
jp
shll
push
cs
mov
and
cmpb
rdtsc
sbb
mov
dec
sahf
sahf
mov
dec
ds
mov
xchg
in
mov
xor
push
test
push
dec
xor
shl
xor
and
outsl
in
ja
push
cs
stos
es
cmp
js
in
sbb
das
dec
cmp
mov
jnp
or
push
xchg
sub
mov
push
ljmp
ret
addl
clc
fmull
cwtl
fnstsw
imul
out
and
push
jecxz
or
jb
push
mov
jns
cmpsl
es
xchg
jp
push
lock
int3
pop
dec
daa
test
ljmp
mov
inc
sub
arpl
outsb
je
jbe
mov
pop
movl
out
leave
jno
pushf
cmp
pop
mov
and
mov
and
add
test
dec
pushf
add
or
ja
mov
xchg
mov
mov
push
dec
in
xchg
movsl
sbb
mov
mov
aam
sbb
push
out
dec
dec
lahf
mov
fisubrs
out
xchg
jp
loop
dec
insb
ret
lock
aaa
scas
cmovo
icebp
out
rcl
das
imul
mov
in
icebp
push
rolb
ror
cmp
mov
adc
jo
popf
xor
jmp
fwait
int3
adc
fcompp
pop
sub
sarl
call
push
mov
xchg
cmp
ret
insl
jl
sti
fimull
jb
cmp
ret
inc
clc
bound
push
adc
inc
insb
mov
xsaves
outsl
pop
xor
dec
and
aam
in
subl
stc
es
fsubr
and
dec
dec
arpl
fcmovnbe
push
mov
cld
les
pop
rclb
shlb
mov
out
in
dec
xlat
or
rorl
daa
loopne
inc
mov
push
out
enter
imul
outsl
test
mov
sub
mov
mov
test
pop
jb
push
lods
int3
movsl
mov
into
lcall
sbb
or
loope
mov
repnz
mov
inc
jnp
shlb
push
inc
inc
add
test
mov
mov
and
or
xor
or
popa
adc
jmp
roll
call
mov
int
lcall
pop
push
push
xlat
popf
icebp
inc
pusha
pop
cs
sub
dec
or
mov
xor
xchg
jo
pop
or
or
push
adc
sub
mov
mov
mov
pushf
popa
cld
out
vcmppd
mov
sbb
gs
or
mov
and
mov
add
lret
int
sarb
adc
rorb
int
leave
cld
gs
imul
mov
adc
xchg
cmpps
sahf
and
scas
sub
add
mov
je
pop
rcll
cltd
cs
daa
inc
into
fmul
mov
rorl
xchg
add
inc
cltd
mov
push
xchg
xor
dec
fcomps
mov
insb
insb
ss
es
mov
ret
jo
lea
cmp
jns
cltd
adc
xchg
js
push
je
test
push
enter
mov
inc
dec
cmpsl
insb
out
xchg
push
addr16
jo
repz
inc
push
pop
sub
loope
dec
rcr
xchg
bound
aad
cmpb
popf
inc
out
loop
push
push
adc
ljmp
xor
mov
inc
mov
lret
insb
ljmp
mov
pop
dec
pop
sub
in
rorb
mov
pop
aaa
rol
fldcw
les
in
mov
aad
and
cld
push
xchg
cmp
outsl
sbb
std
pushf
adc
or
push
mov
cmp
push
add
ret
sbb
roll
imulb
pop
popf
adc
and
enter
push
or
dec
call
cld
jmp
jae
adc
notl
xor
pusha
loopne
int
inc
push
inc
dec
gs
xor
les
xor
dec
inc
push
leave
xchg
fiadds
xchg
or
addl
pushf
pusha
jecxz
ret
cmpsl
scas
dec
push
push
mov
insb
addl
pop
push
leave
stos
dec
jns
aad
jp
add
cmp
in
incb
pop
enter
fsub
sub
mov
push
in
aam
dec
xor
xorl
dec
imul
in
dec
sub
jo
adc
test
fisubrl
push
lret
ret
fimull
mov
ja
pop
adc
dec
pop
mov
xor
repnz
leave
shlb
add
jno
int3
lds
idiv
addl
and
cmp
jbe
xchg
push
shll
outsl
jo
pusha
mov
or
aam
aas
push
jmp
xor
xlat
scas
in
push
xor
jp
mov
cli
sub
bnd
add
adc
mov
cmp
jl
mov
cmp
cmpsb
jb
push
mov
push
pop
add
dec
pop
or
insl
sbb
das
mov
or
hlt
jbe
cmp
movsl
popa
ret
fs
sbb
push
pop
stc
dec
mov
inc
pop
in
add
sub
fidivs
fldenv
test
pushf
test
and
xlat
in
fsubl
mov
inc
mul
cs
fsubrl
ss
jge
xchg
lds
fimull
jns
mov
jnp
daa
jge
xchg
clc
fistpll
lds
jne
cld
add
pop
cwtl
jge
inc
add
pop
mov
scas
sub
movsb
ret
push
pop
lea
jo
fwait
in
sbb
fs
bndstx
xlat
iret
dec
and
mov
mov
inc
icebp
adc
pusha
pop
inc
dec
xlat
or
pop
mov
pop
icebp
xor
push
push
ss
fistpll
sub
test
push
andb
lret
sub
xorl
sbb
add
xchg
ret
aaa
and
cli
scas
pop
ja
add
ds
cwtl
add
ret
jo
add
xlat
arpl
stos
fistpll
lods
sbb
pop
mov
jns
into
rdpmc
xchg
mov
fildll
xchg
sbb
mov
outsl
gs
fdivl
test
int3
mov
adc
inc
cmp
push
cs
or
and
xchg
pop
pop
and
mov
scas
push
jecxz
ficoms
popa
mov
xor
jp
pop
dec
in
orb
repz
pop
enter
pop
arpl
mov
sub
jb
push
inc
nop
test
push
inc
imull
pop
rorb
push
push
mov
ret
xchg
std
push
push
cmp
and
push
sahf
adc
adc
pop
iret
rolb
std
stos
xchg
push
mov
sbb
mov
movups
rorl
jg
shrl
xchg
pop
hlt
scas
in
sahf
call
inc
jae
pop
or
in
xlat
movsl
jmp
shll
push
push
jecxz
adc
popa
xchg
xor
mov
mov
lret
aas
negl
aam
out
mov
leave
orb
sub
bnd
sub
push
out
jno
or
iret
adc
xor
aam
mov
stos
xchg
mov
lods
dec
outsl
mov
inc
fildl
pusha
cli
sbb
scas
push
imul
push
sti
push
add
cmp
and
sbb
rcrl
insb
jno
loopne
rorb
paddsw
sub
inc
pop
xor
out
sbb
xor
scas
scas
aad
lcall
xchg
rorb
shl
jecxz
dec
aaa
inc
push
mov
sbb
in
inc
fnstcw
test
orb
daa
add
inc
pop
mov
jl
arpl
mov
jmp
or
ljmp
inc
xor
xor
out
adc
mov
lock
cmpsl
dec
and
ret
sub
xchg
jecxz
inc
cmp
xchg
or
jge
jle
iret
enter
fwait
jne
mov
aaa
sbb
imul
jg
imul
repnz
cmp
push
lea
mov
or
int
gs
cld
fstps
xchg
pop
scas
push
ja
sbb
leave
movsl
and
inc
add
or
stos
out
int3
cmpsl
inc
xchg
mov
jae
outsb
jle
mov
push
jno
es
movsl
or
jmp
fidivl
arpl
data16
mov
cmpsl
addps
xchg
insl
test
gs
pop
inc
ss
pop
in
dec
popa
push
popa
add
push
lods
movsl
movsl
mov
sbb
sbb
cmp
insb
int3
loopne
mov
rorb
and
in
mov
mov
sbb
jne
inc
in
xchg
rcr
in
arpl
xor
inc
dec
push
sbb
and
movsl
movsb
xlat
push
es
hlt
lcall
sbb
gs
push
out
test
jle
fidivl
cmp
lea
pushl
push
add
pop
test
push
mov
pop
adc
call
sub
movsl
mov
bound
lea
and
addr16
dec
cwtl
js
xchg
add
or
insl
outsl
adc
pop
adc
cmp
push
mov
data16
call
data16
or
lods
xor
xor
adc
xor
jmp
fistps
sub
aas
dec
les
je
out
mov
sub
cld
mov
mov
ret
xchg
shlb
shlb
and
nop
sbb
idivl
dec
cld
pop
mov
notl
mov
sub
clc
sbb
jl
mov
fcoms
add
jno
testb
nop
into
aaa
ljmp
loop
mulb
jge
dec
scas
inc
sbbl
imul
mov
cmpsb
cmpsb
sbbl
mov
mov
out
xor
inc
cmp
popf
sbb
add
sarl
ficoms
ds
mov
jmp
lahf
adc
add
clc
and
pop
xchg
out
aad
aad
arpl
fdivrl
and
jae
out
bndldx
pop
leave
aam
sbb
imul
in
cltd
loopne
add
jae
outsl
jecxz
das
and
shrb
sub
iret
test
and
xchg
into
sbb
cmp
rolb
outsl
std
xchg
stc
cmp
incb
lahf
ds
fstps
sub
out
or
bound
xchg
test
xorb
sti
jle
hlt
sti
xchg
cmpsb
sub
ds
pop
insl
xor
add
mov
dec
jmp
lret
cmc
fcoms
sub
jo
adc
sub
cmp
pop
sti
hlt
cmp
outsb
xchg
hlt
ret
jl
fbstp
sbb
test
scas
adc
push
sbb
fdivs
js
dec
push
das
mov
ficomps
inc
push
mov
pop
jbe
xor
mov
mov
pop
jb
lahf
inc
push
movsb
xchg
enter
or
inc
pushw
sahf
mov
loopne
stos
cmp
aam
xchg
dec
daa
mov
or
movsb
pop
out
jnp
sbb
pop
imul
sarb
add
sub
dec
sahf
aas
or
push
push
sub
lea
hlt
stc
aam
mov
sbb
test
push
shld
sahf
testl
push
shrl
mov
pop
dec
dec
in
mov
arpl
xor
inc
jb
movsl
into
mov
sbb
aad
push
inc
mov
adc
mov
hlt
subb
cld
pusha
hlt
orb
ret
push
jns
mov
rolb
daa
fwait
nop
sbb
sbb
sbb
sub
lea
das
jo,pn
xor
cmp
pop
int3
jp
xor
xchg
adc
test
sbb
cmpsl
fcmove
mov
rorl
out
lret
out
cld
ljmp
mov
or
mov
mov
sbb
addl
arpl
pusha
mov
fdivrs
fists
dec
cmpl
cmp
das
idivb
mov
testb
add
xor
adc
testl
mov
pop
int3
cld
mov
mov
aam
dec
in
push
leave
pusha
mov
mov
dec
movsb
out
arpl
sub
add
test
aaa
mov
fbstp
mov
and
ficompl
adc
push
mov
outsl
pop
push
jo
cmp
sub
lret
inc
fsubp
pop
scas
or
mov
popa
scas
pop
popf
dec
mov
jge
fsubrp
inc
push
sbb
in
cltd
mov
add
ret
out
in
cltd
jne
lahf
and
push
push
dec
mov
fsubl
push
aad
inc
lahf
cmc
mov
pop
in
shll
fcomps
je
outsl
jne
add
xchg
jb
push
xor
mov
lcall
cli
mov
sti
xor
aam
mov
aas
adc
enter
push
xchg
sub
je
pushf
jbe
push
jge
in
lret
mov
incb
stos
outsb
mov
push
mov
cltd
or
cs
jne
les
push
stos
inc
sbbl
mov
ds
pop
nop
or
or
fsubs
sbb
cmp
sub
rcll
mov
xlat
cmp
and
xor
xchg
dec
or
in
lods
ss
leave
xor
rcrl
inc
sbb
cmovge
cltd
repnz
xor
xchg
or
or
inc
or
jbe
iret
xchg
pop
ds
sbb
adc
ret
cmp
ret
aam
ret
lahf
mov
fnsave
xor
aaa
fstps
xchg
pop
sarb
iret
push
mov
imul
fiadds
pop
bound
or
fstl
in
clc
lock
xchg
cmpsb
mov
cmpsl
mov
cwtl
push
std
sti
push
mov
mov
dec
jmp
push
inc
pop
mov
mov
xlat
call
dec
aaa
ror
mov
jecxz
push
loope
xorb
cli
movsb
in
dec
fucom
dec
fbld
fs
push
xor
dec
stc
sub
dec
scas
or
in
mov
push
cmp
mov
xor
mov
and
loopne
jb
cwtl
push
cmpsl
xor
pop
stos
sbb
fcoms
sbb
stos
jnp
shrl
xorb
jns
shrb
dec
xchg
xor
inc
pop
faddl
pop
xor
lods
sub
pop
xor
out
scas
inc
out
cmp
or
pop
andl
aad
xor
test
jb
jne
mov
ja
inc
and
popf
push
loope
popa
xchg
inc
lcall
jno
test
xlat
mov
mov
inc
sar
jno
mov
repz
sahf
mov
dec
sbb
adc
out
lds
or
popa
adc
push
in
rorl
xchg
test
out
addr16
in
dec
ss
cmp
popf
push
sbb
sbb
pop
clc
xor
cltd
jp
in
jmp
test
dec
lcall
lods
or
adcl
sub
dec
shlb
pushf
cmp
add
call
inc
shlb
mov
push
xchg
mov
adc
add
loopne
loope
mov
push
cs
clc
stos
mov
out
rcrb
sti
or
pop
sub
addr16
fsubrs
jae
out
insl
cmp
in
mov
or
test
testl
out
stos
lods
rclb
loop
cmp
dec
ret
jecxz
pop
insl
add
jnp
mov
fwait
aam
test
dec
cmp
pop
dec
cli
dec
popa
push
mov
stc
loope
add
orps
jno
jge
jns
lock
mov
add
dec
sbb
mov
imul
adc
sbb
sbb
gs
in
daa
xor
and
loop
add
push
mov
das
test
div
aas
push
sub
or
jg
mov
inc
test
popf
jge
ret
inc
repnz
stc
in
loope
add
icebp
mov
cmp
sub
or
fisubrl
out
pop
movsl
push
movl
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
jle
aaa
fwait
dec
test
and
jo
jmp
and
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
subl
jbe
les
or
insb
fmul
dec
sbb
xor
cmc
and
fwait
inc
sbb
or
or
call
andl
jl
push
jecxz
iret
mov
arpl
mov
adc
inc
testl
test
adc
das
adc
ret
out
mov
mov
mov
cld
lahf
pop
scas
ja
loope
sbb
jecxz
out
test
sbb
cmp
pop
or
arpl
test
lcall
jmp
out
int
jns
ret
sub
pop
mov
push
and
fisubs
push
in
xor
mov
pop
xor
cmpsl
fwait
dec
test
and
test
loope
fwait
mov
mov
xor
mov
dec
test
xor
mov
jmp
fimull
and
ss
fwait
dec
test
and
xor
cmpsl
fwait
sbb
mov
in
ss
fwait
dec
sub
hlt
xor
cmpsl
mov
and
and
cmpsl
fwait
dec
test
and
jnp
out
repnz
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
mov
sub
iret
and
test
jmp
fwait
dec
test
and
in
arpl
mov
in
xor
inc
mov
fcmovne
inc
jl
push
in
xor
cmpsl
imul
jg
mov
mov
jmp
fwait
dec
test
and
adc
cmpsl
jnp
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
xor
cmpsl
fwait
dec
test
and
test
les
pmaxub
jo
jne
lret
mov
sbb
xchg
or
push
sub
lds
std
dec
jg
pop
or
xchg
aam
mov
fnstenv
cmpsb
xchg
mov
jne
ret
loopne
mov
mov
pop
adc
fstpl
cmpsl
sub
push
imul
rol
pop
jle
outsl
out
xchg
decl
ret
dec
mov
loopne
ljmp
sbbb
es
mov
jmp
lahf
and
push
jl
push
xor
pop
mov
enter
fnsave
dec
fwait
jnp
cli
pop
sbb
movsl
fisubrs
fnstenv
shll
push
xchg
dec
xor
jns
or
cwtl
dec
push
xchg
or
mull
in
jae
xor
divl
lcall
dec
mov
push
dec
shl
add
jbe
loop
adc
xchg
test
popa
and
inc
ds
xchg
add
fcoml
iret
lea
repz
ds
cwtl
test
jmp
dec
das
data16
mov
jge
cmp
je
push
in
mov
and
inc
pop
ds
xor
dec
add
push
mov
xchg
add
inc
xchg
lock
jg
inc
inc
and
in
cmp
sub
inc
ret
adc
bound
mov
lds
flds
cmp
out
mov
push
std
out
sbb
jnp
adc
add
or
or
xchg
mov
mov
xchg
push
loopne
std
cmp
das
sub
pop
adc
sub
xor
shlb
push
mov
mov
int3
loopne
pop
push
int
push
aam
jg
jnp
jnp
add
push
xor
and
ljmp
push
cmp
cmpb
hlt
neg
sub
daa
jle
ret
mov
bound
mov
inc
mov
cltd
ja
inc
cmc
and
aas
mov
jne
adc
nop
mov
subl
sub
repz
out
xchg
bound
outsb
enter
idivl
mov
ret
mov
orb
in
stc
jo
rcl
push
negb
adc
outsb
add
pop
fmuls
in
sbb
flds
sub
inc
test
lock
cmp
pop
aaa
pop
sbb
push
das
mull
and
jge
es
int3
scas
pushw
push
in
into
fcmovnb
outsl
outsl
psraw
jbe
and
xchg
inc
push
mov
sub
dec
push
lahf
arpl
mov
sub
fiaddl
and
cmp
pop
mov
mov
inc
shll
sahf
shll
dec
in
cmpsl
in
mov
fildl
mov
push
pop
pop
ret
pop
lds
clc
pop
push
push
in
mov
pop
outsb
ds
jmp
in
dec
mov
and
jnp
inc
popa
addr16
or
cmp
lods
lock
push
rol
sub
xchg
shll
addl
xor
mov
jge
fldl
xchg
scas
inc
cli
and
int3
lret
mov
imul
dec
pop
lcall
mul
pop
xchg
imul
ja
pop
loop
clc
jp
xor
jne
aad
push
das
or
push
mov
imul
arpl
xor
and
or
xor
notl
dec
add
pop
and
pop
jmp
mov
jg
popa
xchg
cmc
push
shlb
orl
jns
adc
inc
inc
pop
stos
clc
pop
xchg
insb
in
ret
shrl
aas
imul
popf
ret
jecxz
gs
cmp
add
inc
bound
test
inc
jnp
jno
pop
mov
popa
xor
lret
add
pop
sahf
dec
dec
xchg
in
sti
mov
add
cmp
imul
shlb
xor
cld
lahf
push
add
int3
fnstcw
lock
cmp
sub
cwtl
xor
stos
fimull
mov
mov
xchg
mov
push
out
in
sbbl
out
popf
or
in
enter
data16
pusha
pushl
jb
ja
mov
jne
cmp
lret
mov
fsubrl
mov
xchg
enter
sbb
fwait
mov
bound
shlb
nop
mov
je
cli
xor
aad
xchg
or
movsb
adcl
gs
sbb
scas
pop
fisubl
cld
mov
jnp
popa
cwtl
push
fcoms
cmp
or
dec
fdivrl
jne
loop
inc
aaa
add
mov
test
enter
shl
fwait
hlt
rorb
insb
in
and
lcall
bts
sbb
jmp
lods
cmp
push
mov
mov
mov
mov
pop
inc
sbb
vpminub
popf
call
addl
lcall
jnp
adc
jmp
sbb
sahf
jmp
push
fdivrs
push
cmpsl
rorb
pop
xor
scas
mov
jno
mov
subl
mov
mov
std
fs
lret
jns
jp
fisubrs
mov
push
rorb
movsl
call
iret
cltd
in
out
aad
and
lock
inc
pop
mov
int
loop
dec
loopne
inc
sub
pop
jns
ds
jmp
fldcw
fidivrs
lret
sub
loope
push
adc
push
aaa
test
fisubs
mov
pop
push
add
push
cmpsb
andb
jae
sar
orb
fistpl
add
sub
mov
mov
push
xchg
aad
inc
pop
daa
int
mov
fwait
dec
aas
push
cmp
jl
arpl
int
dec
les
test
jg
aam
imul
outsb
clc
pop
cmc
rcll
jns
test
push
push
inc
jno
jnp
adc
sub
dec
sub
push
icebp
sarb
and
push
mov
adc
mov
or
inc
mov
mov
mov
ds
inc
fldt
faddl
outsl
lea
enter
test
cmpsl
lds
jb
mov
enter
adc
lret
xlat
mov
adc
and
adc
pop
xchg
add
push
das
scas
push
mov
lahf
lahf
js
jno
rcrb
dec
cmp
popf
mov
mov
push
dec
push
ja
enter
mov
xchg
into
push
sub
call
xor
jecxz
inc
sbb
inc
cld
gs
mov
outsb
and
out
pop
adc
scas
jb
cmpl
sti
stos
sub
int3
out
sbb
dec
outsb
ljmp
lret
dec
adc
pusha
js
sbb
into
hlt
push
dec
aad
or
mul
out
pop
pop
aam
dec
adc
mov
fimuls
dec
mov
bound
jmp
adc
leave
push
xchg
push
icebp
pop
sub
sub
mov
icebp
mov
mov
scas
ds
inc
pop
test
sbb
lods
mov
jl
mov
jne
jge
push
scas
sub
pop
and
clc
cmpsb
imul
add
sbb
cwtl
loopne
in
jmp
cmc
xchg
push
popa
int
std
lds
sbb
stc
jp
pop
lahf
sbb
inc
test
xor
push
lods
fwait
lock
insb
jno
lods
ljmp
into
pop
push
in
scas
int3
int
cmp
mov
mov
and
fiadds
xchg
inc
nop
out
pop
cmp
test
in
into
add
cld
aad
or
or
push
enter
fildl
jne
fucomip
lcall
and
inc
push
adc
and
in
pop
orl
sub
mov
pop
add
or
jp
mov
arpl
addr16
ja
push
and
cld
xor
cmp
incl
and
push
push
das
mov
fdiv
xchg
pop
mov
pop
push
add
pop
fidivs
in
xor
dec
push
rep
pop
leave
hlt
pusha
cmc
insb
cmc
neg
push
lock
lret
inc
add
jae
xchg
cmp
jg
inc
es
fwait
je
sbb
shr
sbb
sub
into
add
or
pop
mov
movsl
mov
test
xchg
cpuid
xor
imull
pop
jns
jecxz
and
jb
in
cmp
add
popa
pop
fsubl
ret
pop
mov
adc
mov
inc
sbb
or
push
jno
icebp
push
test
loopne
inc
call
jb
xchg
shl
arpl
cmp
push
lods
adc
arpl
mov
cwtl
xchg
ja
sbb
pushw
sarl
call
jbe
rclb
mov
xor
fidivs
loop
ja
sti
mov
shl
cmpsb
cs
test
push
xchg
mov
adc
aad
fsts
mov
xchg
mov
or
push
stos
out
mov
add
adcb
sub
or
sahf
xor
test
sbb
jnp
test
addl
sti
test
repnz
aaa
mov
sub
lods
adc
xor
sub
out
es
jecxz
in
mov
inc
lret
or
loopne
hlt
mov
mov
lods
inc
insb
ljmp
xchg
adc
clc
mov
mov
fisttpl
mov
fdivrl
gs
pop
jmp
je
mov
cmp
xchg
rol
faddl
and
ds
sub
leave
std
mov
je
and
negl
repnz
mov
je
fs
stos
cs
pop
sbb
ficompl
inc
xlat
aam
or
push
push
popa
mov
mov
in
dec
jl
dec
xchg
clc
xchg
adc
cmp
fldcw
out
and
popf
leave
xorl
in
sti
adc
mov
dec
cmpsl
dec
or
dec
jbe
mov
repnz
ret
add
mov
xchg
adcb
dec
sbb
lock
mov
jp
cmpsl
mov
sub
inc
fisttpl
imul
cmp
inc
xchg
stos
test
mull
mov
fdivp
mov
data16
xchg
adc
push
cmpb
mov
mov
repz
or
mov
jnp
cmp
lcall
loopne
mov
clc
scas
sbb
push
pop
mov
sbb
sub
pushf
adc
mov
mov
inc
push
ljmp
call
mov
outsb
rcr
or
out
jg
mov
and
mov
xchg
das
mov
push
aad
xor
je
push
mov
cwtl
pop
rol
stos
aas
pop
mov
add
fxch
cmp
inc
adc
adc
bnd
scas
movsl
xor
add
or
jns
cmpsb
sub
xlat
insl
repz
ss
sub
icebp
inc
inc
jnp
aaa
fists
cmp
pop
mov
sar
roll
jne
repz
test
mov
les
mov
fbstp
add
sbb
int3
or
xchg
jp
xchg
jmp
out
xlat
sbb
adc
movsb
fcoml
add
cli
cmp
jge
subl
imulb
stos
pop
ret
in
mov
pop
jbe
or
lds
iret
cmpsb
jge
aam
scas
xor
lcall
jecxz
dec
lcall
add
test
mov
sbb
lahf
movsb
or
test
sub
add
ror
std
pushf
push
inc
jnp
addr16
xchg
loop
stos
and
add
pop
mov
push
daa
xchg
test
insl
inc
imul
mov
mov
scas
test
addr16
in
cmpl
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
