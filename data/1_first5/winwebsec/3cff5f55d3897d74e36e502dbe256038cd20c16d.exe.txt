push
ljmp
pop
mov
xchg
mov
shll
shl
ss
cltd
stos
in
push
mov
dec
mov
mov
jmp
rorb
pop
mov
xchg
mov
pusha
scas
test
fistps
aas
insb
cmp
aaa
jns
stos
pushl
testb
pop
adc
mov
push
jl
mov
test
mov
mov
mov
out
pusha
scas
xchg
inc
sub
aad
mov
iret
dec
shlb
movsb
pop
jmp
rol
cmp
jl
push
pusha
imul
stc
add
and
fsub
sub
xchg
pop
stos
jp
es
lret
sub
xchg
mov
imulb
sbb
jnp
aas
ror
ret
jae
xchg
sarl
imul
dec
cli
xor
lods
aad
cltd
xchg
or
cmp
sub
xchg
test
lahf
push
sub
sub
mov
add
mov
push
sahf
inc
xchg
cmc
rclb
je
cwtl
mov
pop
adc
into
ss
imul
cltd
aad
js
imul
and
dec
fisubrs
mul
imul
lods
out
ljmp
dec
push
imul
jns
arpl
scas
pop
lock
lds
repz
ja
outsb
mov
mov
dec
pop
cmp
fs
clc
jg
ret
add
xchg
out
mov
sub
push
fmul
and
ds
cmp
hlt
inc
or
cmp
mov
jle
adcb
pop
ss
subl
mov
push
and
bound
add
mov
insb
shll
cmc
mov
push
mov
xchg
xor
rolb
int
hlt
mov
xor
cmp
fs
sbb
mov
cmp
pop
and
test
cwtl
sarb
stos
pop
adc
jne
cmp
jge
leave
xor
sbbl
jns
test
push
pop
scas
add
cmpsb
jmp
popa
jp
xchg
cmc
jecxz
insl
pop
mov
ret
repz
jecxz
adc
dec
movsb
xor
shll
test
adc
adc
dec
int
cmp
rorl
jnp
and
lods
or
mov
fstps
aad
out
mov
insl
lret
jmp
cmp
push
mov
xchg
clc
lds
pop
inc
les
fcmovu
jbe
roll
addb
sahf
add
pop
inc
enter
xor
scas
xor
into
imul
aad
notb
mov
sbb
sub
clc
jecxz
rclb
mov
push
sahf
adcl
push
es
inc
repz
inc
sbb
and
sbb
cltd
inc
xchg
inc
mov
fcoms
pop
mov
das
cmpsb
popa
mov
movsl
insl
sub
ret
les
js
pop
lods
sahf
icebp
and
js
inc
or
test
gs
call
out
push
insl
or
test
add
sub
test
in
mov
das
testb
out
out
stos
movsl
outsb
call
sub
mov
pop
cli
and
mov
xor
ds
into
mov
test
push
inc
xor
insb
cltd
inc
mov
and
inc
notl
ljmp
xlat
inc
popa
mulb
in
mov
xchg
movsl
pop
popf
sub
lods
rclb
xor
shlb
push
jne
icebp
sub
add
ficoml
mov
sbb
push
daa
inc
jno
push
out
leave
cmp
iret
cmpsl
mov
pop
outsb
ret
test
add
in
push
or
inc
dec
pop
outsb
add
ret
xor
or
loope
jnp
cld
dec
rorb
or
jge
call
mov
es
mov
movsl
std
mov
ret
inc
add
mov
aad
insb
push
push
cmc
mov
stc
bound
ficoml
pop
movsl
sub
jno
dec
mov
add
outsl
movl
push
pop
stc
pop
push
push
adcl
jl
sub
into
jne
and
add
fdivl
std
lcall
adc
test
adc
or
lret
pop
pop
mov
lcall
fxch
fmuls
loope
psrld
ret
dec
inc
aad
pop
in
pop
pop
negb
adc
fcmove
pusha
add
fs
mov
bound
and
cmp
mov
rolb
push
pop
cli
or
incl
fstps
jae
xchg
scas
jbe
sub
adc
mov
test
jl
or
mov
divl
jge
clc
out
inc
inc
xor
adc
cmp
sbb
mov
call
pop
shll
lods
mov
addl
pop
and
sbb
cmpsb
bound
cltd
mov
fisttps
lds
mov
pop
cmpsl
loope
mov
mov
dec
sub
dec
scas
jl
and
jno
lret
loop
into
stos
add
mov
test
inc
xchg
int3
dec
rolb
mov
stos
push
fisubl
addr16
xor
shr
and
aad
stos
testl
aam
aad
cmp
out
pop
adc
lock
stos
xchg
cmp
repnz
outsl
inc
xor
test
insb
or
jge
cmp
jp
test
dec
fiadds
imul
push
push
pusha
mov
or
pushf
inc
and
scas
mov
and
pushf
pop
lret
pop
xchg
lahf
out
xor
xchg
or
xor
add
jns
cmp
sbb
push
sub
push
scas
jl
mov
xor
stc
in
xchg
jno
push
mov
insb
scas
lahf
jo
xchg
or
mov
sbb
les
mov
repz
ljmp
push
mov
pop
and
dec
inc
jl
pop
mov
sarl
jmp
pop
cmp
fistpl
or
pop
ja
std
xchg
xchg
mov
jle
das
inc
cmpsl
lods
or
dec
mov
aaa
mov
pop
incl
mov
jmp
mov
es
pop
sub
jbe
dec
aas
cmp
add
mov
mov
pop
pop
sahf
jl
mov
clc
jnp
and
inc
shll
mov
int
inc
and
and
cmp
insb
pop
sti
je
lods
ja
cmpsb
popf
cmpsl
inc
out
subl
lret
out
pop
lock
out
lock
xchg
push
push
js
push
pop
lods
jno
sbb
xchg
arpl
pushf
in
int3
xchg
loopne
cs
mov
out
daa
inc
arpl
push
repnz
les
dec
push
adc
ss
inc
stc
mov
out
fmulp
jae
add
lret
mov
imul
add
jnp
and
fcmovnu
rolb
mov
dec
pop
mov
orl
shll
mov
loopne
add
mov
add
cmpsl
cmp
dec
pusha
pop
push
clc
stc
pop
repnz
inc
add
lret
xor
inc
jecxz
hlt
push
sbb
mov
sbb
lods
mov
pop
mov
in
jp
fistpll
fndisi(8087
daa
es
mov
out
adc
push
stc
aaa
stos
xor
bound
arpl
arpl
cmpsl
sub
dec
xor
cs
adc
add
cmc
jo
stos
pop
mov
inc
pop
test
adc
mov
outsl
push
jb
pop
das
ficoms
mov
sarb
aaa
cmpsb
outsl
push
dec
jecxz
push
enter
inc
cs
pushf
test
rcrl
or
mov
xor
jle
pop
push
mov
cmp
xchg
cli
xchg
cmp
je
ds
sbb
aas
mov
fs
arpl
push
fnsave
jo
out
bound
clc
inc
lods
test
call
sub
dec
fdivrl
jbe
mov
arpl
add
adc
pop
aam
out
pop
dec
add
hlt
lcall
jnp
or
cli
outsb
mov
cmp
loop
xchg
mov
push
inc
push
push
mov
popa
mulb
xlat
add
xor
jge
aad
sub
or
mov
jmp
andb
ret
sbb
mov
je
jns
fdivrl
cmp
out
insb
ljmp
test
nop
test
jp
sub
inc
pop
add
mov
inc
mov
sbb
loope
and
repnz
ja
insb
xchg
sbb
cmp
aad
into
repnz
sub
xchg
xchg
rcrl
pop
push
mov
xor
cwtl
dec
mov
ret
push
adc
pop
sub
in
and
jne
dec
lods
jae
mov
das
jns
mov
sbb
movsl
mov
mov
and
mov
arpl
cmp
shll
cmp
sahf
mov
call
cmp
lods
clc
mov
icebp
push
in
xor
jne
scas
stos
sbb
stos
sub
mov
push
loopne
and
adc
push
push
jecxz
ljmp
inc
mov
mov
mov
call
jnp
cld
jp
aad
dec
int
stc
movsb
sahf
in
lods
popa
sbb
adc
pop
push
cmovge
sarb
pop
pop
cmp
mov
cmp
daa
pop
dec
cli
or
mov
pop
adc
jbe
es
sbbb
sbb
popf
sahf
pop
std
outsl
js
rorl
hlt
lock
pushf
stos
stos
sar
out
mov
pop
add
imul
mov
adcl
or
and
push
test
lcall
dec
adc
mov
push
js
adc
int3
sbb
jle
shlb
push
pop
mov
rcrb
inc
ss
push
sarb
mov
dec
pop
cmp
xchg
movsl
jno
or
test
xchg
outsl
jbe
cs
mov
lea
inc
cli
movsl
imul
stos
or
adc
cmp
mov
and
mov
fisttps
sti
ret
push
lahf
sbb
std
jg
mov
mov
in
ljmp
mov
shrl
ret
jle
cmpsl
addr16
stos
inc
lahf
inc
inc
rcrb
loop
push
xchg
pop
in
enter
pop
movsl
sahf
and
repz
ret
mov
out
mov
out
rcr
fmulp
insb
and
divb
in
mov
mov
and
inc
jb
dec
je
aad
sbbl
ret
adc
stos
mov
out
sub
add
loope
push
test
inc
mov
or
pop
mov
mov
fisttps
add
xor
sahf
jbe
int3
mov
xor
fisttps
shrb
ret
clc
mov
push
or
out
sahf
push
dec
inc
and
jo
lock
pop
inc
xchg
mov
mov
cwtl
xchg
cmp
pusha
int3
int
inc
push
dec
scas
mov
stos
cs
movsl
outsl
sahf
in
jle
sbb
sarl
loop
aam
xor
mov
cli
pop
test
inc
in
inc
mov
adc
adc
imul
rcrl
daa
xchg
mov
out
inc
sahf
jne
subl
stos
mov
fwait
mov
stc
ja
stos
lahf
sub
repnz
jno
daa
mov
fldenv
lret
xor
out
shll
repz
pop
xor
cwtl
in
lahf
es
inc
pop
sbb
sub
out
or
mov
mov
int3
jl
dec
out
into
lahf
lahf
add
mov
inc
cmc
inc
out
mov
scas
sti
je
mov
push
sub
add
stos
rcl
ficompl
mov
xchg
adc
scas
cli
cmpsb
pop
and
fmul
xchg
fsubp
popw
mov
out
jp
int3
jle
cwtl
cmp
rorb
xchg
aas
ret
ror
mov
jne
or
cmpsl
add
mov
es
out
xor
pushf
jle
cld
out
in
xor
push
pop
jle
mov
lret
orl
and
adc
sbbb
push
scas
or
sub
aas
out
inc
imul
data16
and
sbbl
loopne
and
int3
pop
cs
popf
cmp
push
mov
and
mov
aaa
dec
jg
bound
lret
push
jmp
mov
in
cmp
dec
mov
jmp
mov
loope
push
mov
xor
loope
das
mov
mov
cli
sbb
sub
sub
pop
in
mov
mov
aaa
mov
fwait
jg
inc
in
repz
sbb
scas
xchg
inc
add
or
inc
adc
push
pop
mov
and
push
inc
imul
jmp
cmpsb
jp
rcrb
push
or
ret
fwait
imul
jmp
cmp
mov
gs
lea
mov
xchg
into
or
sti
stc
cs
mov
adc
pop
jo
lods
push
and
mov
jp
cld
orb
push
add
ficompl
lcall
lahf
lret
pop
sbb
js
ss
mov
jle
xchg
shrb
fdivrs
aad
mov
push
sub
inc
jnp
xor
stos
or
shr
das
inc
pop
jo
or
and
adc
sbb
push
push
ja
mov
mov
outsb
mov
adc
mov
pop
in
in
xor
int
movsl
int
std
jbe
daa
push
push
cmpsl
mov
rcrl
inc
nop
mov
les
sbb
dec
or
cmp
cmp
add
fidivl
mov
xor
nop
xor
fmuls
hlt
sbb
clc
adc
mov
or
push
ljmp
mov
scas
cwtl
cmp
jg
lret
clc
and
push
cmpsb
cmp
ror
ficomps
js
test
cld
ljmp
xor
data16
fsts
pop
arpl
into
scas
jmp
cmp
lds
jb
jecxz
aad
dec
out
xor
popa
adc
int3
in
cltd
fwait
lock
add
push
stos
jmp
popf
push
dec
push
lds
stos
out
out
pushf
pop
ja
pop
xor
add
jns
adc
loope
sahf
mov
sti
lret
and
lock
inc
pop
pop
mov
mov
push
roll
adc
add
loope
jge
stc
cmp
mov
cmpsl
js
cmp
inc
pop
sbb
out
std
mov
pop
xor
cwtl
inc
dec
ljmp
test
jge
mov
jbe
xchg
mov
call
sbb
add
mov
movsb
or
xor
or
jno
xchg
rcll
aaa
or
and
pushf
mov
push
push
pop
jne
cmp
xor
jmp
fs
and
adc
nop
or
sub
iret
cmp
cmp
sarb
inc
fidivrs
push
mov
aas
aam
icebp
mov
cld
or
outsl
fdivrs
adc
lds
adc
call
insw
dec
loope
push
jmp
sahf
movsl
mov
inc
mov
iret
xchg
orb
jbe
push
shll
sbb
sbb
xchg
inc
sahf
cltd
jle
fcmovnb
popf
sahf
loope
out
mov
mov
outsl
and
movsl
xor
inc
dec
mov
movsl
movsb
mov
je
adc
aam
fwait
mov
rcrb
xchg
and
push
divl
loop
lahf
mov
mov
lds
fisubl
inc
adc
add
je
mov
stos
daa
sbb
hlt
popa
cwtl
cmpsb
xor
sub
pop
sahf
frstor
push
aam
xor
pop
push
lret
jae
movsb
in
popa
ficoml
lods
push
stos
sbb
imul
sub
inc
inc
add
pop
mov
xlat
dec
xor
lods
jns
repnz
fs
fistpl
pop
outsl
mov
mov
jge
icebp
insb
loope
sbb
xchg
loop
pop
xchg
ret
xchg
xchg
popf
out
repnz
inc
mov
sub
mov
push
leave
adc
shl
mov
pop
dec
lds
in
mov
or
popa
pushf
dec
push
stc
jb
cmp
sub
lds
sarl
lahf
movl
push
lret
sub
sarb
pop
jl
jmp
fsubr
inc
inc
ss
xlat
pop
bound
push
loop
xchg
jae
sbb
mov
push
sbb
sbb
dec
imul
xor
jne
ljmp
ljmp
xor
imul
push
cmp
decl
push
and
mov
inc
dec
movsb
jns
jns
test
cmp
pop
sbb
repnz
mov
mov
stos
push
aad
stos
hlt
pop
stc
test
adc
mov
mov
std
or
clc
mov
sbb
push
dec
sti
mov
push
inc
add
sti
lds
test
shr
push
mov
mov
fnstsw
pop
je
in
xlat
lret
aam
inc
shll
pop
je
out
cmpb
xor
pop
adc
sub
mov
shl
dec
cmpsb
stos
jge
adc
xchg
or
mov
mov
rcrb
cli
shr
add
adc
dec
cs
push
dec
imulb
sbb
pop
in
xchg
adc
or
aam
mov
xor
xor
je
jge
icebp
std
inc
adc
adc
scas
mov
or
xchg
xchg
enter
jp
add
sbb
cmpsl
inc
pop
lcall
jnp
inc
out
scas
daa
push
out
cmc
push
mov
dec
cmc
sbb
inc
enter
mov
push
and
cmpsb
imul
xor
or
inc
add
mov
jl
pusha
xor
stos
cmc
aaa
enter
pop
dec
test
mulb
lret
lret
xchg
repz
ficompl
orl
fdivrp
and
xchg
add
mov
pandn
push
shlb
test
add
mov
cmpsl
les
stos
cmp
std
ljmp
jp
mov
jb
adc
jmp
add
dec
hlt
xchg
push
hlt
adc
shll
mov
mov
mov
test
shll
adc
push
cmpb
mov
hlt
fcomp
je
xchg
pop
inc
push
scas
inc
jns
pop
mov
ljmp
or
insb
cmpsb
pop
mov
pop
add
stos
and
pop
nop
test
out
jno
pusha
sbb
gs
xchg
and
mov
jo
daa
sbb
add
mov
cltd
in
imul
loope
or
mov
lcall
xchg
lret
jo
jnp
pop
and
and
sub
pop
jnp
stc
xchg
cmp
notl
push
add
cltd
pop
inc
mov
cli
xchg
aas
or
fdivr
stos
or
out
int
lahf
xor
inc
jecxz
dec
jns
mov
mov
iret
cltd
pushf
and
cmp
paddusw
mov
cmp
movsb
or
xor
xchg
in
pop
je
pop
outsb
fwait
dec
add
inc
mov
popa
sub
push
out
stos
lret
scas
mov
scas
mov
mov
scas
in
movsb
scas
cmp
or
in
push
pop
xchg
hlt
notl
lahf
fcmove
cs
xor
in
bound
push
adc
lret
ss
push
or
jne
ljmp
adc
das
lcall
mov
dec
lock
loop
push
sub
mov
ja
aas
add
xor
repz
je
fldenv
sub
sub
test
stc
in
jecxz
mov
loopne
movsb
cmp
test
fwait
jns
and
inc
jbe
movsl
cld
jae
pop
jnp
stos
das
mov
insb
pop
imul
mov
push
push
bound
adc
cld
add
insb
xchg
sbb
dec
and
pop
mov
push
inc
fwait
xor
in
xor
sub
std
ja
jns
fwait
pop
cwtl
lret
in
or
call
mov
data16
inc
mov
mov
psubq
les
xchg
lahf
pop
xor
and
pop
or
test
jle
mov
add
jnp
lret
push
and
repnz
or
adc
xchg
push
and
insl
cmp
sub
loopne
popa
sub
sarb
scas
fsubl
sbb
sarl
add
xchg
fisubs
stc
repnz
mov
push
clc
out
push
in
and
mov
mov
lock
out
lods
cltd
subb
cmp
xor
mov
and
cwtl
test
cltd
pop
test
dec
lods
xor
pop
adc
enter
icebp
out
cmp
or
cmpsb
lahf
cmp
mov
mov
test
xor
add
pop
xchg
add
outsl
sete
test
jle
incb
sub
jg
xor
xchg
sub
pop
test
sub
out
cmpl
aas
lcall
lods
shrl
sub
jmp
sbb
xor
stc
idiv
lcall
aam
rcrb
std
movsb
repz
std
or
addr16
mov
neg
gs
xor
inc
rcll
andb
sbb
adc
jl
inc
sbb
ljmp
and
lods
mov
rcrl
pop
xor
popa
cltd
int
dec
add
testb
dec
mov
pop
rclb
dec
add
jno
sbb
lock
je
ja
push
loopne
loope
adc
lods
and
mov
push
inc
or
movsl
pop
mov
inc
lret
inc
out
clc
pop
in
in
sub
nop
or
push
jp
xchg
lods
sbb
add
adc
or
push
mov
out
fwait
or
and
push
push
ret
flds
mov
sbb
mov
add
ret
mov
add
cmp
xchg
or
or
lods
pushf
jbe
sub
repnz
inc
les
jmp
clc
or
fdivs
xor
sub
sarl
stos
xor
xchg
out
pop
dec
push
cmp
mov
popf
cmp
xor
sbb
lods
lods
xchg
inc
fsub
or
or
and
pop
mov
inc
aad
popa
lahf
jg
xchg
xorb
xchg
inc
push
push
push
or
aam
out
outsb
stos
pop
sqrtps
out
aas
shlb
ja
fstpl
sub
dec
mov
ret
push
outsl
sub
leave
adc
out
in
jbe
and
xchg
jge
mov
cmp
inc
jle
stc
andl
mov
push
mov
dec
push
arpl
inc
aad
add
jecxz
test
lods
xor
out
in
shrl
je
mov
xor
fwait
xchg
dec
jge
add
pop
jmp
jbe
fs
mov
add
sub
mov
pop
ds
stos
xchg
mov
into
xchg
lock
cltd
jmp
nop
lea
fwait
sbb
xor
lock
pop
imul
jbe
das
adc
sub
xor
imul
jg
clc
inc
xlat
push
add
std
insb
push
or
sub
gs
scas
xor
or
mov
movsl
jns
lahf
and
xor
es
sti
pop
mov
jmp
imul
out
cmp
cmpsb
fwait
cli
push
testl
fnstenv
mov
std
repz
inc
hlt
mov
mov
int3
add
push
sub
jl
insl
sbb
adc
inc
mov
int3
outsb
jae
jno
les
jp
scas
cld
fildl
lcall
adc
ja
orb
sarb
dec
jae
arpl
repnz
pop
xchg
stos
jbe
lret
xor
imul
xor
aam
add
and
aam
or
out
scas
js
and
pop
scas
out
dec
shlb
shlb
loope
mov
fsubrl
repnz
mov
clc
nop
adc
popf
adc
adc
sub
mov
leave
mov
mov
aad
movsb
xchg
sub
push
dec
jge
leave
iret
mov
jae
jl
adc
cmpsb
and
mov
retw
fwait
repz
mov
sub
mov
sbb
sub
iret
add
mov
negb
jmp
mov
stos
push
cmp
clc
call
dec
addr16
jo
cmp
cmpsb
loope
movsl
add
dec
sub
jp
sbb
sub
mov
xor
jne
jle
pop
and
push
jb
fs
mov
lds
aaa
pop
into
fs
pop
xorb
inc
inc
inc
and
sbb
push
hlt
dec
push
pusha
shll
cmp
dec
stc
out
add
loopne
or
and
xchg
xchg
push
push
ss
and
test
cmp
inc
mov
insb
add
insb
mov
gs
dec
xor
add
mov
bnd
push
pop
fcoms
insb
repnz
fs
mov
in
gs
call
loope
jns
je
loop
jbe
and
push
cwtl
xor
ljmp
addl
bound
pop
xorl
push
mov
and
sub
int
mov
cltd
lret
adc
push
dec
pushf
or
js
pop
mov
test
adc
or
mov
js
cwtl
icebp
addb
into
fdivl
mov
ret
int3
cmp
pop
filds
xor
data16
lods
loopne
addb
adc
in
cltd
mov
mov
imul
lea
sub
xchg
lahf
jne
hlt
mov
or
es
pop
pop
cmp
cld
xor
subl
and
adc
rcll
ds
pop
xlat
push
fiadds
add
or
fisubl
xchg
in
rcrb
sbb
adc
adc
and
stos
xor
or
dec
int
arpl
or
mov
mull
repnz
inc
repz
mov
push
jne
pop
jge
mov
sbb
or
leave
jp
mov
repz
into
pop
inc
push
jne
jmp
jb
mov
and
pop
push
das
inc
fsubrs
sarl
ljmp
pop
add
aam
mov
xchg
dec
andb
mov
mov
out
xchg
sub
lret
xchg
sbb
fildl
out
leave
lret
mov
cs
dec
xor
sub
pop
jne
sti
inc
or
shr
xor
orb
mov
and
shrb
xchg
fldenv
in
rcrl
aas
mov
mov
dec
aas
test
iret
mov
rolb
add
mov
unpckhps
mov
sub
nop
dec
imul
mov
adc
mov
call
sub
ljmp
sub
sub
dec
pop
push
popf
mov
and
jl
or
addl
xchg
cmpsl
pusha
jmp
in
dec
push
sub
mov
push
xor
in
push
push
test
cli
inc
lods
movsb
pop
std
cwtl
jb
pop
push
dec
divl
les
jnp
lods
ja
sub
icebp
xorl
int3
jg
xlat
jmp
cmpsb
cmp
xchg
xchg
sbb
xchg
aam
imull
scas
inc
and
jecxz
xchg
mov
aad
pushf
pop
movsl
or
inc
bound
or
pop
lcall
add
jo
dec
fsts
mov
daa
lahf
rcll
loopne
js
mov
imul
loope
insb
xor
es
push
std
or
fsts
addr16
add
xorb
in
xlat
int
pop
push
imul
pop
mov
xlat
mov
jmp
shll
sub
sarb
lock
xchg
lea
sub
inc
fsts
or
loop
inc
pushf
add
or
xchg
lock
setae
frstor
push
in
dec
sub
out
sbb
mov
push
adc
jl
daa
inc
les
scas
dec
jl
sub
dec
jge
call
cmp
xchg
inc
inc
push
int3
cs
xchg
aad
pushf
xchg
mov
dec
mov
pop
dec
and
enter
inc
andl
pop
add
data16
xchg
xor
add
cmp
xchg
mov
bound
xchg
pop
aam
jmp
or
nop
faddp
fdiv
xor
cmpsl
arpl
sbb
or
dec
fistps
mov
call
xchg
mov
push
pop
mov
xor
mov
orl
mov
mov
jo
and
fs
pop
mov
cmpsb
repz
add
cmpsl
and
fstpl
inc
mov
dec
xor
jg
mov
inc
or
pop
mov
mov
push
dec
jmpw
pop
std
jnp
inc
dec
jbe
clc
mov
into
gs
std
mov
mov
pop
aad
add
and
jp
and
fsubrs
xlat
add
out
mov
out
xor
jle
pop
mov
ret
push
sbb
movsb
cmp
cld
pusha
jne
mov
je
mov
subb
lret
repz
int3
jp
xchg
pushf
mov
js
push
and
fdivrl
add
mov
sub
and
enter
dec
dec
push
mov
dec
add
int3
scas
push
outsb
xchg
in
mov
pop
xchg
ss
dec
mov
fwait
sub
push
aaa
add
mov
cmp
leave
fnstcw
test
jecxz
pushf
cmp
push
hlt
lahf
and
out
mov
ljmp
add
out
mov
ds
dec
enter
mov
add
subl
push
mov
lcall
adc
mov
jb
repnz
rorb
xor
fstps
mov
fildl
xor
test
pslld
out
jo
rclb
mov
add
insl
mov
in
or
jge
cmp
pop
sbb
mov
lret
fmuls
mov
mov
nop
testl
dec
gs
out
lret
adc
xlat
adc
cmp
sub
or
pusha
xor
cli
imul
decb
xor
push
pusha
fchs
addb
push
xchg
xor
push
int3
dec
sub
insl
pop
dec
testb
push
jl
into
push
test
mov
sub
push
notb
daa
xchg
loopne
jl
add
daa
adc
lods
bound
sub
add
scas
sti
arpl
or
cwtl
outsl
pop
or
push
jns
mov
fldenv
sahf
push
and
add
fdivrl
std
mov
and
scas
sub
and
xor
lret
popa
dec
and
inc
pushf
pop
xchg
fst
popa
inc
jmp
inc
jecxz
pusha
sahf
dec
push
lret
flds
mov
cmp
jp
mov
pop
xchg
push
adc
loopne
repz
int
gs
popa
add
jp
shll
jp
inc
inc
sbb
shl
sub
icebp
xor
lea
push
data16
adc
adc
das
out
leave
pop
pop
jbe
fcmovnu
push
push
xacquire
mov
cmp
mov
ficompl
inc
aad
test
xchg
push
dec
lea
ljmp
cmp
jge
dec
loope
jne
dec
push
xchg
test
push
repz
stos
aam
in
xchg
jns
shl
cmpsl
data16
lods
sbb
mov
pop
mov
mov
nop
mov
imul
xor
clc
sbb
cmp
mov
mov
ret
pop
mov
cmp
cltd
adc
push
cmpsl
outsl
mov
sbb
rorb
mov
or
add
repz
adc
nop
mov
or
cmpsb
movl
sub
xor
enter
dec
sub
sbb
insb
mov
or
or
mov
xchg
inc
andb
sbb
int
xchg
das
cmc
inc
insl
or
xlat
add
jle
in
inc
cld
repz
pop
jmp
mov
inc
sbbb
imulb
std
shrl
popa
cmp
stos
xor
sbb
cwtl
jmp
pop
cwtl
xchg
faddp
dec
sub
jge
mov
nop
jmp
sbb
sbb
gs
and
es
jle
push
js
fidivs
fwait
mov
fsubrs
dec
je
jo
sbb
adc
addl
adc
xlat
mov
aad
pop
into
ret
jmp
lcall
pop
adc
repnz
xor
dec
aam
pop
mov
add
in
push
cmpsb
mov
fcompl
push
in
movsl
dec
imul
fcomps
xlat
lods
mov
adc
jb
andl
cmc
cmc
xor
repz
pop
dec
shrl
inc
sub
mov
or
jo
insb
mov
dec
sbb
mov
pop
sub
orl
ret
pop
mov
pushf
cmp
insl
or
add
subl
ret
sub
jp
cmc
mov
push
and
ror
xor
and
or
adc
sub
out
movsl
and
int
mov
les
repz
mov
jle
addl
sub
in
and
push
mov
pop
cltd
ret
daa
enter
lock
pop
mov
cltd
cmpsl
pop
mov
fimuls
sbb
rolb
insb
loopne,pn
push
int3
repz
sub
cmp
or
call
add
into
mov
in
or
and
push
mov
pop
pop
xlat
into
hlt
or
adc
mov
sub
xlat
sbb
hlt
dec
xchg
hlt
push
fnstenv
mov
out
dec
in
inc
dec
lret
inc
sti
popa
ja
mov
shll
jge
fbstp
gs
int
lcall
dec
cld
mov
mov
xor
cs
pop
pop
adc
xchg
ror
adc
in
ret
jcxz
pop
add
xchg
and
mov
test
int3
jmp
push
mov
inc
inc
andb
enter
aas
int
jo
adc
adc
pop
test
fdivrs
sbb
dec
in
xchg
out
movsb
inc
mov
mov
pushf
adc
lahf
pop
inc
pop
shlb
jmp
cmpb
fsub
pop
or
or
and
cli
orl
pushf
nop
outsl
movsl
in
popa
mov
xor
push
push
inc
xor
push
divb
lods
mov
stc
fcmovnbe
imul
xor
push
lock
aad
pop
or
dec
sahf
shlb
xchg
or
mov
jb
sbb
sub
pop
push
cld
sbb
xchg
inc
inc
call
mov
push
sahf
mov
leave
pusha
scas
das
cmp
iret
sub
lea
addr16
cmp
inc
pushf
inc
into
ja
xchg
jnp
inc
sahf
loope
and
call
xor
scas
fidivrs
bound
rcll
and
mov
push
decl
cmpl
add
mov
xchg
push
mov
jno
daa
push
addl
jno
loopne
pop
out
aaa
xchg
mov
sbb
sahf
aas
jge
shlb
sbb
sbb
mov
hlt
je
rcll
jl
pop
sub
adc
jbe
adc
or
rcr
rcl
rclb
push
in
lahf
pop
mov
dec
jae
outsl
stos
xor
dec
or
je
popa
ret
mov
pop
mov
cltd
inc
bound
dec
aaa
test
jle
leave
push
loop
xchg
jne
lahf
out
iret
cmp
and
jb
ret
mov
xor
and
inc
cmpb
insl
inc
push
subl
or
xlat
jle
jae
mov
fimull
aam
test
outsb
xchg
xorb
sub
adc
mov
repnz
pop
roll
push
fsubrs
or
loop
icebp
loope
js
outsl
push
mov
xchg
pushf
int
loope
mov
nop
sub
mov
add
fadd
pushf
sub
arpl
jo
xor
or
repnz
call
jl
in
pop
scas
je
mov
iret
scas
push
add
xchg
cld
pop
dec
imul
or
test
test
or
sahf
cs
xlat
ffree
push
subl
push
shll
jb
xchg
xor
icebp
mov
sbb
cmpsl
or
out
or
nop
cmpsb
xchg
test
sub
xor
unpckhps
jp
out
adc
inc
testl
pop
pop
cmp
add
inc
jno,pn
stos
jbe
movsb
in
clc
xor
xor
xchg
iret
aad
ja
jns
cltd
xor
mov
adc
aaa
inc
fisubrs
aaa
stos
inc
jnp
ljmp
test
xor
cmp
fucom
cld
ljmp
mov
or
enter
adcl
mov
sbb
jo
fsub
fwait
jae
pop
outsl
pop
sbb
jne
cmpl
test
sbb
shrl
fisubrs
ret
das
or
out
and
nop
sahf
mov
sbb
xchg
addr16
test
or
xor
lea
mov
dec
iret
push
sbb
pusha
pop
jae
sbb
mov
sub
adc
mov
mov
ret
pushl
adc
enter
and
push
pop
inc
xchg
adc
hlt
leave
imul
sbb
dec
cmp
test
shrl
daa
fmull
mov
lcall
mov
adc
xor
pop
xor
andb
int
aas
push
dec
test
lret
hlt
and
sub
xchg
movsb
adc
lock
fimuls
imul
ss
mov
stos
stos
mov
pop
test
dec
rcrl
cltd
sbb
mov
xchg
fldcw
cmpsb
je,pn
dec
int
pop
jg
xor
in
lcall
or
inc
adc
jo
dec
cwtl
mov
dec
cltd
mov
arpl
hlt
lods
adc
push
jbe
mov
test
in
repnz
mov
lahf
mov
sbb
sbb
sbb
mov
jp
sub
lock
cmp
push
stos
lret
dec
lock
icebp
imul
xchg
stc
loopne
repnz
mull
jne
dec
daa
mov
ret
cmp
call
xor
and
dec
mov
dec
imul
ds
decl
scas
push
mov
scas
or
aas
out
sub
fucomip
lahf
adc
mov
and
and
out
mov
sub
lret
pop
mov
or
push
cmpsl
rolb
sub
jp
and
shll
daa
lahf
inc
leave
imul
shrb
mov
xor
mov
dec
pop
sub
rcll
in
or
sbb
orb
pop
inc
leave
aad
repnz
jmp
subl
aam
or
loope
and
sub
pop
push
mov
cld
xor
cld
in
daa
out
out
je
jns
push
jnp
cmpb
ja
cmp
sbb
sub
pop
dec
sar
aas
sbb
idivb
add
inc
and
mov
repz
lods
xchg
outsl
popa
test
fistps
add
pop
jbe
adc
imul
xchg
mov
call
bound
scas
movsl
loop
push
push
arpl
pusha
push
adc
sbb
sarl
jecxz
jns
sub
sbb
add
ret
inc
mov
xchg
or
adc
ret
and
inc
imul
dec
sahf
sbb
jbe
xchg
aad
cld
fcmovnbe
in
dec
add
mov
xchg
cmc
fsubrs
xor
jae
ds
sub
dec
clc
xchg
mov
rorl
call
es
mov
push
xor
mov
dec
push
mov
lods
lcall
adcl
lods
mov
xchg
xor
push
or
scas
popf
rcrb
sub
ret
adc
cmp
pop
insl
inc
or
lods
arpl
xchg
daa
push
cmpl
or
ret
ss
ret
leave
sbbb
and
popf
adc
lods
popa
adc
fildll
push
or
ret
push
push
mov
sbb
dec
sub
push
lods
sbb
js
or
mov
mov
mov
inc
mov
pop
nop
loop
inc
push
leave
loopne
mov
scas
sar
mov
push
pop
and
test
push
sub
push
cmp
outsl
adc
fbstp
mov
lds
jne
out
popf
nop
mov
sbb
int
and
ret
daa
mov
into
xor
in
jmp
int
pop
pop
iret
push
insl
rorl
movsl
add
xchg
mov
xchg
adc
shlb
loope,pt
mov
insb
out
fdivrs
das
mov
out
pop
notl
inc
cmp
jmp
cs
ljmp
jle
arpl
mov
xor
cmp
inc
lock
popf
inc
xor
out
ret
movsl
sahf
shll
or
in
ljmp
loopne
mov
xor
and
add
sub
push
pop
xor
daa
jle
sbb
fdivrl
add
adc
test
mov
shrb
inc
push
fwait
xchg
movsl
mov
jmp
pop
mov
decb
loope
outsb
outsl
loopne
xchg
cltd
cld
xchg
sbb
pop
add
xchg
stos
notl
fisubrl
sbb
outsl
adc
aad
daa
leave
into
sub
shlb
or
enter
cmp
out
cmp
sbb
adc
dec
mov
inc
cmp
in
dec
sub
out
dec
and
arpl
shlb
mov
rcrl
xor
jmp
mov
icebp
xchg
xchg
xchg
stos
sbb
daa
xchg
sub
or
shll
xor
sub
sub
outsb
mov
jo
lahf
cld
mov
out
in
dec
loope
jnp
push
insl
mov
lods
dec
aam
cld
push
cmp
mov
add
outsb
mov
out
dec
cmpsl
lea
xchg
fistl
pop
aad
xchg
xor
sub
add
sbb
or
jbe
add
jmp
movsl
sub
cmc
daa
lds
pop
push
sarb
into
pop
inc
cmp
shlb
lcall
out
sti
push
fdivs
mov
iret
push
cmpsl
je
sahf
add
cmp
dec
icebp
ja
jg
push
mov
inc
loope
mov
jle
push
push
mov
or
push
push
mov
mov
mov
sarl
sbb
sti
int
and
xor
jge
jb
pop
stos
adc
dec
sti
adc
jns
jp
repz
mov
outsb
jbe
lret
out
mov
je
fisubrl
jne
dec
lcall
pop
pop
xor
jno
fcmovbe
inc
jg
pop
mov
add
lret
mov
cmpsl
dec
nop
jnp
or
insl
cmp
jmp
ret
clc
mulb
in
and
pop
adc
cs
inc
lcall
jno
lods
mov
mov
loope
dec
add
cmp
cld
mov
lahf
or
inc
jne
jnp
loop
pop
or
add
fisubrs
jbe
outsl
and
cmp
cltd
add
into
xrelease
lea
clc
sbb
in
jmp
clc
lock
adc
out
stos
cs
scas
test
jne
mov
mov
nop
pushl
arpl
xchg
aad
enter
xlat
ds
and
and
lret
loopne
and
xchg
dec
mov
test
xchg
xchg
inc
cwtl
sub
fwait
adc
stos
stos
arpl
lock
and
jae
push
dec
push
xor
pop
jg
sbb
xor
out
jmp
bound
ds
inc
arpl
ret
adc
adc
popf
jno
mov
push
aas
ds
mov
xchg
test
cmp
and
pop
pop
mov
mov
mov
decb
int
out
fidivs
addr16
loope
and
call
loope
dec
jns
pop
jns
insl
xchg
ljmp
push
inc
mov
incb
dec
sbb
icebp
xchg
mov
call
std
stos
adc
fldcw
ret
and
mov
mov
cli
cmc
test
sbb
sub
xchg
jns
mov
mov
fs
and
jnp
je
push
cs
push
shll
or
mov
cmp
add
repnz
stc
cmpb
pop
add
lock
daa
into
mov
ja
pop
mov
popa
in
add
shlb
mov
mov
int3
mov
adc
mov
xor
mov
sub
shll
dec
xlat
hlt
jecxz
cmp
sbb
add
test
jae
jns
lds
stc
es
mov
dec
scas
bnd
nop
ja
into
push
ljmp
cmp
dec
dec
and
cmp
jge
adc
insb
jns
and
xor
adc
cwtl
dec
cli
je
adc
jecxz
mov
mov
jbe
jnp
test
imul
imul
push
js
mov
jge
adc
push
vpmaxub
xor
mov
stc
lds
popf
mov
gs
inc
dec
out
into
je
or
xor
jp,pn
and
ror
loopne
ja
popa
pop
mov
mov
jecxz
out
xor
pop
js
xchg
and
pop
mov
or
sub
int
jle
cwtl
jmp
adc
in
sbb
dec
arpl
adc
adc
mov
lcall
cltd
stos
icebp
or
jb
sbb
inc
fidivrl
pop
shrb
arpl
jne
fidivs
lcall
jno
mov
lods
pop
test
clc
and
popf
data16
js
fsubp
in
test
xchg
cmpsb
xor
mov
push
and
clc
sub
popf
cmovbe
push
enter
push
mov
add
mov
sbb
sbb
push
js
out
orl
jns
add
inc
arpl
aad
out
xor
fsubrs
xchg
ljmp
push
loop
int
aad
jbe
call
test
cmp
sbb
dec
je
sub
cli
jo
lcall
or
pop
les
push
sbb
fcmove
xor
mov
xchg
dec
cmp
sub
repz
jnp
jle
dec
push
aas
jns
in
cld
addr16
pop
dec
outsl
je
out
pop
and
jo
mov
mov
add
addl
mov
mov
mov
mov
or
xchg
dec
push
fimuls
mov
mov
outsl
lret
cmp
push
movhps
insb
pusha
or
cs
mov
fidivrs
inc
out
inc
push
subl
test
es
andl
mov
rcrb
mov
enter
xor
and
xor
fistps
push
clc
lahf
push
jno
cli
test
icebp
ja
mov
fldl
xor
mov
push
cmpsl
mov
mov
jno
mov
pop
jmp
das
xchg
jmp
pop
sub
jns
aam
cmpb
cmp
pop
pop
out
xchg
aaa
sub
jb
lods
add
add
sub
fdivrl
pop
and
lret
fwait
loope
push
lret
sbb
mov
adc
inc
pop
mov
and
sbbl
inc
inc
lahf
pop
or
fistps
cld
and
xchg
or
aaa
sbb
add
idivb
lods
outsb
dec
dec
push
pop
mov
jp
cltd
xchg
and
nop
cmp
push
scas
ljmp
test
push
rorb
adc
ss
movsb
mov
das
les
aam
in
xchg
clc
cmp
xchg
and
int
mov
and
inc
imulb
sub
ficoms
aad
ror
mov
add
clc
push
shll
movsb
add
add
lock
and
pusha
jmp
das
add
pop
ljmp
jmp
add
mov
aas
xor
iret
mov
test
es
mov
cli
loope
movsl
cltd
stos
dec
sbb
xchg
aad
es
and
pop
shlb
sub
push
mov
ret
insb
not
xrelease
das
aam
and
jmp
inc
in
mov
clc
sbb
and
adc
adc
lds
out
mov
pop
mov
lahf
and
and
sub
xchg
test
lds
pusha
jne
xchg
sbb
add
jno
pop
in
fprem1
popf
fstpl
out
inc
and
pop
fld
or
leave
mov
or
or
push
lret
jne
fcomi
outsb
cmp
and
cli
mov
movb
lods
ss
in
jb
jge
cltd
xor
jne
push
lock
rclb
cmp
cltd
and
pop
pop
and
inc
loopne
jo
cmpl
adc
hlt
lods
sarw
sbb
dec
mov
push
push
xchg
pop
adc
inc
std
jg
and
inc
test
outsl
mov
xchg
outsb
roll
cmpsl
cmpsb
adc
mov
cmp
adc
push
jmp
loop
bound
dec
inc
ljmp
test
inc
shr
xor
cmp
ficompl
xchg
dec
and
push
pop
fcmovbe
xchg
inc
imul
inc
mov
cld
enter
stos
imul
mov
or
js
xchg
jo
mov
jmp
xchg
xchg
and
rol
rol
sub
push
pop
sub
jl
bound
testl
add
fmul
outsl
cmp
arpl
pop
nop
mov
jnp
pop
sahf
inc
xchg
sbb
xlat
mov
stos
jno
push
scas
arpl
pop
add
mov
adc
out
loop
mov
push
and
sbb
sbb
or
je
sub
mov
fcomip
push
aas
fisubl
int3
loopne
or
orb
push
movl
mov
repnz
daa
test
jmp
jns
inc
fcomps
notb
rorl
mov
push
fldcw
inc
push
subb
fwait
dec
push
aam
cltd
pop
cmpsb
fistps
add
adcl
mov
push
shrb
sqrtps
sub
lds
xor
es
pop
adc
vmread
jns
and
orl
xchg
jp
inc
xchg
fs
xchg
outsb
addr16
test
and
out
pop
cvttps2pi
cmpb
fcmovne
cld
test
leave
movsl
ja
int3
arpl
jle
sub
xchg
mov
sbb
cmpsb
test
repz
sub
sbb
js
xchg
jecxz
outsb
mov
fldt
inc
js
push
sbb
adc
cmp
pop
xchg
sahf
sub
push
fisttpll
out
fs
sub
mov
mov
repnz
inc
mov
jns
lret
or
fisttps
test
iret
in
cltd
mov
in
ret
fcomi
mov
cmp
pop
dec
or
ficompl
ficoms
jle
add
repz
sti
jne
scas
pop
subb
mov
add
dec
jl
out
int
mov
call
ret
es
xchg
mov
scas
test
cmp
push
call
push
cmp
jae
aas
xchg
cmovge
loop
jns
mov
notl
or
jno
cmp
jb
mov
mov
push
pop
mov
push
fists
jle
mov
sarl
les
mov
pop
hlt
aam
pop
and
push
sbb
pop
jge
xor
fcoml
xor
sub
lcall
and
fstpt
jge
flds
roll
pop
pop
loopne
lahf
cmp
lods
pop
push
xchg
mov
mov
jp
rorl
jo
aas
into
pop
and
or
inc
in
pop
roll
or
xor
icebp
int
adc
or
push
mov
pop
fwait
and
repnz
sbb
push
adc
aaa
push
bound
mov
add
sbb
cltd
fists
xor
mov
xorb
and
sti
in
add
push
sbb
das
and
in
je
inc
xchg
inc
pushf
mov
push
xchg
int
fstpl
popf
outsb
lock
sub
aam
or
push
insb
sbb
xchg
test
in
mov
cmp
adc
xchg
sahf
fidivrl
imul
cmpsl
es
sbb
movb
shll
movsb
mov
add
inc
xchg
sub
js
ss
jecxz
sahf
gs
nop
sbb
lret
fstpl
sub
and
cmp
lods
in
aam
pop
inc
jp
sub
xor
ret
mov
and
push
aas
sub
mov
inc
jle
call
push
out
lods
loope
adc
pop
int3
rorl
pusha
int3
dec
data16
fstpt
cmp
js
sahf
js
push
sub
int3
mov
insl
sarl
xor
scas
or
rorb
addl
sbb
lea
xchg
xchg
inc
mov
jle
sbb
cmp
xchg
jge
enter
out
mov
jg
pop
xchg
mov
jg
mov
mov
nop
adc
pusha
mov
lds
inc
add
mov
push
add
loopne
das
sbb
sbb
mov
jmp
mov
xchg
push
out
out
mov
cwtl
pop
shll
call
xchg
or
inc
movsl
cs
xor
xor
dec
sbb
xor
clc
and
mov
xor
pop
scas
xor
xor
jne
cmc
mov
js
int
lds
incb
mov
movsl
mov
dec
lds
fidivrs
lret
je
retw
xchg
repz
adcl
push
push
xor
popf
lods
fyl2x
xchg
cwtl
test
adc
movsl
insl
imul
pop
fiadds
movsb
push
jl
movsl
inc
mov
mov
inc
leave
lea
movsl
sti
add
xor
inc
fs
outsb
push
jge
ret
loopne
xlat
lea
or
fisubrl
adc
inc
cmpsl
aaa
mov
jno
adc
js
or
add
mov
jmp
aaa
mov
push
mov
xor
push
icebp
mov
jo
xchg
xchg
adc
call
mov
sub
movsl
in
das
sbb
subps
adc
lret
push
add
cmpsl
popf
movsb
std
mov
lahf
add
pop
sbb
je
push
sbb
mov
sbb
xlat
es
leave
xlat
test
or
ret
cmpsl
mov
dec
and
idivb
or
jne
ret
jae
and
mov
jecxz
in
insb
cld
pop
les
test
int
add
pop
insb
ds
cmp
pop
insl
and
cmp
psrlw
inc
bound
insb
mov
push
mov
cmpsl
xor
add
je
jg
adc
std
sbb
xor
fidivl
pop
fsub
cmp
ds
push
cmp
movsb
mov
pop
ljmp
jl
inc
xchg
scas
in
mov
or
mov
mov
add
in
cmp
icebp
mov
xorb
adc
xchg
dec
add
sti
dec
hlt
push
or
pop
loop
mov
jae
inc
adc
jge
fisubrl
rol
outsl
xchg
jp
outsb
cmp
scas
and
push
jne
cmpsl
rorb
xchg
repz
shlb
cltd
addr16
add
push
pmaxsw
jp
xor
cmp
xor
cli
adcb
pop
sub
xchg
push
lret
xor
lea
lret
cwtl
pop
jmp
mov
inc
xchg
push
mov
mov
and
xchg
lret
aad
sub
loopne
pusha
cmp
aas
or
jae
arpl
scas
mov
fdivrl
lcall
push
sub
lea
sbb
push
ret
push
push
sarb
fistl
jle
pusha
in
mov
es
mov
sar
test
xchg
pop
pushl
cmpsl
jle
and
xor
ret
cmp
push
outsb
into
inc
lods
stos
and
push
sahf
mov
mov
js
ljmp
sub
or
jge
sbb
mov
mov
imul
add
mov
mov
loopne
cmp
cmpsb
jne
cmpsl
outsl
sbb
push
addr16
mov
cli
xchg
jae
stc
add
ss
or
push
out
ret
sub
in
adc
andl
cmpsb
popf
pop
sbb
and
inc
mov
lcall
mov
mov
call
and
ret
and
xchg
mov
or
js
xor
and
or
mov
fisttps
adc
lea
sub
mov
fdivr
ja
mov
pop
addr16
popa
movsb
subb
int3
push
cmp
xor
pusha
sub
lods
jg,pn
dec
in
jp
cmp
icebp
into
lret
bound
xchg
fnsave
inc
or
sub
mov
sub
xchg
fs
jmp
movsb
mov
jmp
shl
in
mov
aad
mov
rcll
mov
in
outsb
jb
mov
cmp
push
add
add
aaa
push
cli
hlt
add
sahf
rcrl
jb
hlt
mov
xchg
mov
fs
cltd
xor
call
inc
cmpb
test
dec
and
jge
pop
test
push
cmp
add
or
addr16
test
loopne
xlat
add
in
and
sbb
cmp
ficoml
push
mov
and
mov
jae
movsb
add
lods
inc
cmp
pop
dec
loope
and
loope
push
test
idivb
dec
adc
fimull
pop
notl
ficoms
lds
mov
sbb
mov
mov
arpl
out
pop
dec
mov
loop
rcrb
lods
xchg
mov
dec
push
outsl
out
inc
or
lods
dec
shll
js
adc
pop
out
push
xor
xchg
hlt
xor
aaa
movsb
xchg
or
int
in
or
jmp
lods
cmp
movsb
or
aas
jne
sbb
sahf
mov
adc
xchg
daa
mov
cmpsl
jmp
dec
xchg
bound
mov
xchg
ljmp
or
mov
sbb
lock
mov
inc
jl
lods
shlb
das
es
cmp
mov
sbb
pushf
jb
lcall
fwait
xchg
icebp
add
sbb
inc
leave
sbb
mov
popa
mov
pop
fsub
repz
popf
and
iret
or
std
sub
xchg
adc
outsl
out
inc
pop
push
fmulp
pop
inc
xor
aaa
jnp
inc
adcl
mov
mov
in
cmpsb
in
sbb
test
movlhps
push
push
fistpll
or
sbb
mov
adc
inc
scas
mov
das
and
dec
jnp
inc
sub
mov
nop
jp
and
push
lret
movsb
imul
cwtl
fisubrl
cmp
test
sbb
fidivs
pop
imul
loope
leave
outsl
and
insl
or
mov
or
or
push
lahf
ret
dec
cltd
mov
mov
xchg
in
sbb
cli
shll
adc
push
fptan
aas
xchg
in
mov
xor
test
aam
ss
test
subl
add
xchg
dec
movb
pop
scas
jle
dec
cmp
xchg
aaa
mov
lea
cld
jne
ljmp
inc
jge
sbb
dec
rcr
in
inc
frstor
loop
push
aas
push
fidivrl
add
inc
aam
add
jno
jnp
xlat
test
arpl
lods
jp
insb
cs
andl
inc
scas
pop
sub
aaa
add
leave
cmp
inc
mov
push
push
bound
and
xchg
add
xor
mov
xchg
mov
mov
sub
aam
mov
daa
pusha
loope
lods
add
inc
xor
out
inc
inc
test
mov
test
xchg
cmp
or
test
ret
outsl
xchg
ja
lock
jae
mov
sbbl
push
gs
jecxz
fldt
dec
add
add
dec
pop
pushl
loop
jecxz
jp
push
adc
popf
mov
mov
out
inc
add
cmp
inc
ret
and
push
test
or
adc
mov
sub
xor
ss
nop
ljmp
sub
sbb
lfs
adc
ret
sbb
in
iret
adc
ss
push
ss
data16
push
jg
loope
and
xchg
scas
pop
pop
and
ficomps
jmp
test
fs
push
fisubrl
adc
pop
dec
loopne
or
enter
lret
fs
fsubrl
lret
xchg
mov
mov
lahf
push
lcall
ret
push
test
and
push
push
cmpb
sahf
aad
daa
fs
dec
fidivrl
jle
mov
pop
xor
ret
inc
xor
call
sub
add
fdivrl
inc
test
gs
sti
push
cmp
loop
mov
push
dec
xor
test
rorb
fnstsw
mov
mov
pop
fs
mov
iret
pop
sub
sub
push
jmp
dec
add
mov
xor
outsl
dec
inc
mov
aad
cmp
cmp
sub
sbb
lods
mov
and
jecxz
jne
add
cmovle
lds
dec
stos
rol
mov
jb
and
pop
jg
add
mov
data16
lods
pop
mov
call
out
mov
jmp
mov
ja
jle
lret
dec
js
stos
loope
mov
call
fcmovu
mov
lock
movsb
jo
shlb
ror
and
cmp
fimull
xor
insl
and
jo
mov
xor
sar
push
inc
test
push
jle
sbb
sti
repz
sub
jo
lea
in
push
ficoms
movsl
xor
negl
aaa
add
jecxz
jno
outsl
add
jle
or
movsl
fildl
and
dec
xchg
mov
orb
push
xchg
lock
add
in
out
jne
dec
fstpl
adc
inc
push
into
sti
cltd
mov
xchg
lret
idiv
mov
ror
shr
int
jle
inc
dec
jbe
int3
lret
movsl
and
psubsb
in
push
in
pop
and
adc
cmp
outsl
nop
pop
adc
jne
popa
pop
cmp
fsubl
and
push
xchg
fdivrl
fwait
xor
and
adc
mov
push
imul
inc
mov
mov
dec
sub
mov
sbb
push
inc
xorb
popa
jmp
jle
arpl
fs
sbb
sub
xchg
mov
xlat
rcll
sti
test
mov
mov
cmp
arpl
pop
mov
dec
mov
lcall
lds
lds
push
lcall
adc
adc
sub
scas
mov
pop
mov
mov
add
pop
dec
xchg
pusha
out
mov
sbb
dec
pushf
pushf
jb
push
xor
sbb
std
ljmp
add
dec
dec
outsb
jmp
mov
lcall
in
int
push
jmp
adc
jnp
fsubp
jns
xchg
icebp
outsl
pop
xchg
ret
dec
jbe
in
in
and
iret
mov
mov
mov
scas
and
incb
aad
inc
data16
pop
lock
sbb
push
mov
pusha
out
call
dec
pop
fcompl
mov
sbb
mov
pop
xor
or
pushf
out
test
xchg
fldenv
push
das
addb
loop
xor
add
data16
psubd
test
adc
jp
cmp
push
pop
aaa
out
fldl
pusha
repz
shl
pop
insb
pop
dec
jge
xchg
mov
pop
add
mov
xchg
movsb
mov
stc
fstl
mov
sub
imul
mov
xchg
clc
pop
mov
movsl
les
out
imul
ss
jb
addr16
shl
push
push
iret
xchg
addr16
mov
mov
rol
push
mov
scas
inc
xor
jl
aad
rorl
xor
imul
negl
test
ret
mov
imulb
cmc
xchg
arpl
ja
add
jle
push
je
dec
aad
mov
xchg
dec
lock
lock
lods
fcoml
lret
cmp
mov
mov
lods
jge
xchg
xor
test
cmp
inc
dec
push
stos
stos
push
into
add
cmpsl
iret
lods
sub
fisubrs
push
push
int3
xchg
dec
sbb
jge
xchg
pop
cmp
jmp
dec
jle
adc
sub
gs
pop
and
insl
cmp
xchg
push
jecxz
dec
fwait
pop
pop
mov
test
out
push
sub
push
frstor
test
mov
mov
dec
andb
nop
aad
es
xor
rcrb
orl
cmp
sahf
push
or
lretw
mov
jb
movsl
mov
addr16
mov
test
in
cmpsl
out
push
sbb
inc
mov
addl
ret
ja
mov
dec
xor
inc
adc
jae
inc
insl
inc
lock
jecxz
jno
jmp
ret
scas
or
mov
andb
in
lock
je
dec
daa
jle
push
mov
test
push
dec
arpl
inc
mov
clc
lods
inc
push
jecxz
sbb
in
dec
cld
or
inc
ss
ja
xchg
fstps
fistpl
jbe
mov
in
and
cmp
jg
out
cmp
mov
mov
sbb
pop
add
es
adc
sub
pop
aaa
add
imul
mov
scas
imul
call
dec
dec
xchg
lar
int
decb
lods
repnz
int
loopne
pop
xor
repnz
dec
mov
pop
sub
push
mov
inc
mov
flds
or
fcom
lds
cwtl
pop
add
rcll
xchg
cmp
bnd
and
or
cmc
pop
sub
sbb
dec
dec
sti
int
adc
mov
in
mov
cltd
cmp
loope
cmpsb
jp
and
pushf
repz
pusha
xchg
out
cwtl
jne
jns
repz
jb
ror
mov
adc
mov
fbld
mov
out
add
icebp
cli
or
push
mov
bound
jns
and
sub
mov
cmpsb
push
dec
sub
ja
jmp
pop
lret
repz
sub
adc
divb
test
adc
scas
loope
push
cmp
pop
xor
int3
adc
je
mov
xchg
cmp
push
cmpsb
mov
inc
jne
jo
loop
xchg
test
nop
stc
es
mov
pop
sub
repz
cltd
dec
enter
stos
mov
in
popf
mov
test
orl
jno
jbe
fnstenv
stos
sbb
sbbl
mov
jb
xchg
xchg
jno
jno
cli
xor
pusha
xchg
nop
jb
int3
imul
xor
cmp
das
push
rclb
mov
xchg
jmp
pop
enter
push
lods
mov
sbb
mov
jns
push
fstps
adc
jbe
mov
sub
jmp
mov
jmp
inc
jne
cmp
cwtl
lea
inc
add
adc
mov
sub
int3
shrl
push
jecxz
dec
out
lods
ss
push
xchg
adc
jecxz
dec
nop
cld
mov
or
hlt
loopne
mov
bound
hlt
mov
inc
dec
int3
int
data16
push
sbbb
loope
sub
adc
mov
hlt
out
adc
cmp
outsl
lods
test
jle
jg
cmp
aaa
xchg
daa
mov
test
mov
int
ja
andl
sub
and
adc
decb
stos
jge
add
xlat
add
add
les
xchg
or
ljmp
lahf
inc
sbb
popa
fadd
in
push
sub
or
enter
popa
adc
scas
add
cs
gs
int3
ficomps
xorb
pop
mov
push
mov
push
in
adc
xor
mov
lea
inc
or
mov
mov
mov
add
pop
loope
xor
into
faddp
ds
mov
lahf
cmp
and
add
gs
cmpsb
mov
jo
jle
push
xor
xor
push
and
jnp
orl
mov
xlat
dec
jl
out
mov
hlt
jecxz
test
or
xchg
cltd
push
push
pop
das
jp
inc
jmp
popf
xchg
adc
icebp
stc
iret
cmp
loop
jmp
adc
sbbb
sbb
sbb
xchg
mov
stc
test
dec
pushf
in
movsl
sbb
out
imul
pushf
inc
mov
stos
test
stos
sti
inc
loopne
dec
mov
inc
mov
sbb
in
jecxz
mov
pop
ret
pop
xchg
xchg
ja
aaa
sarb
sahf
jmp
dec
mov
iret
jmp
mov
mov
cmp
push
or
add
ljmp
pop
scas
bound
mov
mov
mov
inc
ja
xchg
lcall
dec
out
mov
xchg
push
mov
stos
or
add
xor
jp
or
fmull
mov
loop
mov
movsl
fistpll
lods
xchg
and
test
adc
mov
cmc
dec
jns
add
andb
jns
push
adc
imul
jge
pop
aas
push
pop
mov
sub
or
lcall
sbb
mov
mov
sub
push
and
stos
dec
cs
sbb
mov
mov
mov
add
call
testl
jecxz,pt
push
icebp
bound
cmp
in
outsl
or
lock
insl
cmc
cwtl
push
push
xor
push
call
mov
sbb
daa
imul
cmp
mov
fs
jne
or
fwait
add
jo
xor
sub
call
es
lret
repz
jl
imulb
xor
inc
inc
movsb
push
ljmp
push
loopne
dec
jmp
dec
cltd
pop
divb
hlt
leave
and
scas
sub
aam
test
mov
inc
nop
xchg
dec
shll
sarb
pop
pop
paddsw
fisttpl
cmpsl
xchg
cmp
fistps
mov
out
jbe
ljmp
mov
clc
mov
shrl
mov
jb
stos
call
push
testl
lods
or
lods
jl
dec
inc
test
jne
mov
test
push
shrl
imulb
aas
or
sahf
pop
ds
xchg
stc
iret
or
push
lods
jne
imul
fisttpll
mov
ja
lds
and
loope
xchg
es
mov
dec
and
or
cwtl
mov
xchg
idiv
push
jge
aad
pop
xchg
int
push
icebp
rclb
out
mov
sbb
int
push
sub
push
cmp
adc
xchg
pop
in
push
loop
psubd
inc
in
and
aam
mov
or
and
dec
jbe
cmp
mov
xchg
jbe
mov
test
adc
mov
jp
and
push
stc
mov
cmpsl
push
xor
stos
fisubl
mov
add
loop
mov
fnsave
mov
cmp
mov
jno
aam
pop
cwtl
jae
or
and
pop
sbb
mov
cmp
popf
inc
cltd
mov
popa
mul
outsb
js
roll
cmp
pop
mov
sub
loopne
movups
sbbl
sub
xchg
xchg
sbb
shl
in
cmp
xor
rcll
inc
mov
push
cli
cmp
ljmp
nop
dec
test
pop
adc
dec
adc
pop
popf
mov
pop
add
into
xor
test
insb
jns
ror
fcoms
in
fildll
adc
int
out
das
and
mov
js
rcrl
add
fiadds
inc
mov
stos
ds
pop
fmul
les
and
ret
jne
subb
mulb
shlb
out
sar
push
and
iret
pop
jmp
cmpb
inc
out
cmp
loope
inc
jae
in
mov
into
cwtl
adc
push
sbb
iret
cmc
stos
push
lods
xor
scas
push
sub
cmc
and
xchg
dec
mov
and
loopne
jle
add
in
int3
mov
or
sub
les
popf
sbb
call
je
and
pop
inc
addr16
sbb
sub
and
xor
or
loop
hlt
and
mov
cmp
lret
les
mov
sub
enter
push
ficompl
stc
inc
loop
push
jo
jns
fstpl
mov
imul
sbb
cmp
and
sahf
outsl
push
js
xor
ja
sub
push
lret
mov
mov
pop
ret
sub
aam
shl
xchg
xchg
test
mov
dec
cmp
sbb
inc
lock
aas
mov
pushf
push
ret
xor
mov
adc
call
sahf
lock
jge
or
js
xor
popf
xchg
and
lahf
and
mov
insb
mov
into
or
xor
lock
jbe
mov
mov
add
jno
jno
add
es
mov
cmp
cld
mov
mov
jb
jns
sahf
out
pop
mov
push
sub
mov
push
inc
adc
mov
adc
push
sbb
adc
lods
into
cmp
cs
outsb
push
push
xchg
push
jo
and
js
push
aas
and
rcll
dec
cld
pop
loope
and
subb
mov
push
pop
clc
int
addr16
adc
add
sahf
orl
loopne
lods
ss
lock
mov
inc
inc
mov
leave
pushf
cli
xchg
dec
or
movl
sbb
xchg
outsb
in
mov
ja
mov
in
and
mov
neg
or
mov
mov
and
pop
jnp
scas
add
fwait
incl
test
fistpl
ret
sbb
pop
lock
rcrb
bound
and
mov
jae
mov
in
popa
sbb
call
xchg
lds
and
mov
icebp
gs
nop
cmpsl
mov
pusha
insl
out
and
in
nop
int3
sbb
out
dec
js
scas
jg
movsl
pop
icebp
cmpsb
repnz
jno
daa
jb
enter
dec
xor
imul
dec
int
rorb
cmp
push
insl
test
push
or
lock
sahf
repnz
jnp
loope
test
sbb
sub
push
jecxz
add
dec
jbe
loope
inc
aaa
add
lcall
loope
subl
mov
jne
adc
das
jecxz
je
xor
fcompp
sub
mov
rcll
jae
push
jbe
arpl
sahf
scas
and
imul
test
icebp
or
popa
push
jnp
or
out
and
lds
lret
jmp
xchg
cmpl
stos
cmpsb
ficompl
mov
jge
dec
jae
insl
cmp
mov
mov
push
adc
pop
mov
sub
or
lret
mov
cmpsb
sbb
arpl
mov
sub
mov
xor
push
jle
inc
pcmpeqb
cmp
movsl
xchg
or
clc
push
in
ljmp
push
push
leave
jg
gs
hlt
adc
in
and
mov
mov
mov
sub
push
cmc
sbb
sbb
cli
xchg
pop
push
scas
jmp
mov
imul
dec
xor
cmp
mov
mov
loope
pusha
jmp
stc
outsb
push
add
hlt
testl
or
sarl
and
add
fstps
jmp
mov
mov
pop
ja
push
jp
jns
out
insb
push
out
icebp
pop
insb
leave
inc
cld
pop
xor
mov
and
mov
xor
lock
cmp
lcall
sbbb
inc
inc
roll
xor
dec
xchg
dec
jle
fnstenv
inc
xchg
shl
sub
or
push
xchg
mov
sbb
aaa
lods
ja
lret
inc
and
mov
dec
lret
int3
push
movsb
inc
aad
movsl
mov
pop
sub
pop
jae
dec
push
xchg
adc
add
mov
andb
xchg
add
stos
loop
movsl
adc
inc
scas
in
sbb
shll
sbb
out
icebp
inc
aaa
rclb
cltd
add
into
addr16
mov
cwtl
lock
sbb
iret
sbb
rolb
cld
cmp
xlat
xor
sub
xor
xchg
in
xchg
push
es
sahf
xor
lret
sbb
dec
cmp
sbb
and
or
das
pusha
mov
mov
inc
fucomip
ljmp
and
lods
jecxz
test
out
pop
lods
or
movsl
shlb
das
lahf
roll
movsb
inc
fisttpl
mov
sbb
dec
nop
stos
mov
add
das
inc
add
nop
iret
add
jp
sbb
outsb
mov
rcl
dec
out
xchg
addr16
cld
pop
sbb
jl
int3
ljmp
leave
push
xchg
or
and
inc
jne
mov
sub
insl
dec
push
testb
fs
imul
popf
jmp
arpl
out
pushf
push
jnp
sbb
mov
and
xor
out
ret
ljmp
rorl
scas
jne
and
lods
xchg
xchg
shrb
and
mov
lahf
imul
inc
cwtl
xlat
lahf
fwait
addr16
and
lods
adc
xlat
sbb
mov
test
xor
ja
inc
insl
mov
push
or
mov
fprem1
push
or
and
cmpsb
xchg
mov
and
dec
adc
mov
mov
stos
xor
cmp
mov
pop
insl
or
mov
inc
cmpsl
and
lahf
ja,pn
rorb
and
cmp
lea
inc
dec
pushf
ja
lfence
mov
xchg
inc
aas
dec
pushf
test
and
dec
test
dec
mov
int3
pop
inc
mov
and
or
pop
add
test
aam
fcompl
mov
push
movb
fsubr
pop
popa
cmp
pop
jl
push
push
jb
mov
mov
bswap
rcrb
jbe
dec
dec
dec
clc
push
fistl
pop
adc
and
xchg
and
and
mov
or
xchg
dec
ror
mov
dec
lods
push
or
inc
fdivrs
int3
fcmovu
mov
fisubl
mov
push
scas
pop
jb
shll
sarb
and
shr
jmp
fwait
lock
sahf
outsb
imul
fisubl
cmc
ret
int
dec
mov
int3
push
int3
push
lea
mov
repz
movsb
fistpll
idiv
dec
sbb
add
push
mov
bound
js
sarb
sti
dec
out
pop
adc
stos
popa
imul
push
aas
jge
mov
add
shll
in
int
jb
fdivs
in
mov
dec
pop
int3
mov
les
iret
mov
adc
testb
enter
ficoml
loop
mov
pop
and
xor
ss
push
shrl
and
push
xchg
xchg
aaa
mov
mov
dec
lds
dec
jns
cmp
mov
ljmp
shll
fwait
sahf
mov
sbb
rclb
fwait
xor
push
shlb
dec
mov
mov
xchg
cmp
fisttpll
sub
rcr
pusha
xor
nop
xchg
xchg
shlb
push
popa
fsts
mov
in
jne
adc
pusha
jae
ja
pop
mov
adc
rcll
out
dec
xchg
imul
loopne
and
sbb
jmp
cli
mov
jne
push
subb
cli
pop
jmp
mov
sarb
cmpl
loope
pop
xchg
ja
dec
insb
add
dec
ljmp
pushf
push
jp
jo
clc
sbb
ljmp
ss
lea
addr16
mov
test
mov
into
neg
push
jbe
pop
cltd
mov
repnz
add
cmpl
or
add
flds
jno
pop
xchg
add
jnp
cmpsl
test
pop
cmp
pop
jmp
stos
mov
stos
cli
or
shll
out
pop
pop
push
insb
adc
lret
cmp
frstor
cmp
ljmp
adc
daa
test
lea
xchg
and
ret
out
jmp
jo
sbb
dec
lret
imul
jno
dec
push
xor
mov
lret
pop
fwait
aam
outsl
ja
fldenv
and
inc
xor
bswap
inc
pop
sbb
inc
mov
lss
push
repz
xchg
adc
xchg
mov
dec
push
sbb
into
std
xor
adc
inc
gs
mov
adc
xor
add
mov
shlb
icebp
aad
mov
dec
mov
sub
inc
dec
flds
das
sbb
movsb
clc
push
push
mov
gs
lret
lret
or
cmp
mov
jge
repnz
jl
mul
or
and
fwait
and
fsubrl
cmp
outsb
xor
pop
mov
jg
in
dec
daa
or
inc
icebp
pop
cmpsl
inc
add
add
repnz
ret
jge
fsubl
sbb
pop
jecxz
divb
cmp
or
mov
push
bound
nop
pop
push
lods
inc
hlt
sar
cli
out
mul
and
ret
ljmp
mov
push
mov
pop
mov
testl
push
mov
push
sarb
cli
push
pop
imul
int
in
clc
shrl
cwtl
pop
mov
pop
movsl
leave
leave
jecxz
addr16
xor
xor
cmc
mov
fs
out
jae
xchg
and
imul
or
xor
xchg
int3
lcall
push
popa
out
xchg
stc
loope
mov
add
bound
in
into
pop
inc
push
fcmovb
into
icebp
xchg
lret
mov
sbb
imul
or
cli
and
repnz
fs
enter
push
aas
cltd
in
aaa
scas
sbb
das
sbb
dec
dec
decl
adcb
push
mov
daa
rorb
fistl
sbbl
and
jp
int3
enter
pop
mov
push
test
and
insb
mov
mov
cmc
dec
rcl
mov
cmp
xor
inc
mov
aam
stos
mov
les
sbb
mov
sahf
pop
cmc
arpl
xor
push
and
inc
xor
lock
xor
mov
and
mov
push
loope
mov
add
test
repz
mov
pop
ljmp
enter
arpl
mov
push
in
sub
and
pop
dec
mov
loopne
imul
test
icebp
fmull
jae
push
sbb
cmc
dec
inc
cmp
and
push
out
jns
pop
dec
add
mov
int3
jmp
cmpsb
aaa
jecxz
push
inc
xor
cmpsb
mov
mov
dec
ljmp
push
lahf
add
xchg
mov
mov
in
xchg
cwtl
sbb
mov
mov
sub
mov
sub
jo
sbb
or
xor
dec
lock
aaa
bound
addl
pop
inc
push
fnstcw
push
lock
mov
dec
out
sub
stos
jne
lahf
sahf
gs
dec
jne
cli
fistpl
xchg
loopne
push
lcall
mov
int3
lea
push
pop
jp
movsl
enter
enter
sbb
bound
xchg
repz
jnp
sub
sub
inc
pusha
mov
mov
or
pop
lea
jnp
inc
xor
sub
sbb
push
icebp
xlat
pop
idivb
into
insl
mov
popa
dec
jl
jne
lret
dec
lss
push
xlat
cmp
add
test
addl
dec
push
movsl
xchg
cmp
adc
lock
aad
outsb
sub
in
scas
cli
rcrl
pusha
jmp
aas
adc
inc
mov
or
push
lret
fstpl
call
out
xchg
cs
pop
inc
les
loopne
mov
add
push
and
int
mov
inc
arpl
dec
xor
mov
push
inc
shl
out
inc
arpl
test
jmp
test
sahf
sbb
inc
scas
jae
xor
ffreep
xor
lahf
mov
mov
jle
fnstsw
sub
arpl
mov
inc
sti
mov
push
xor
push
hlt
cs
lds
sbb
fwait
addr16
mov
push
inc
loopne
aam
cmp
std
es
and
sbb
shl
mov
int3
negb
mov
lea
ja
cwtl
mov
add
xchg
adc
cmp
in
cltd
pusha
jle
mov
dec
jmp
and
pop
sti
adc
and
int3
int3
mov
lret
adc
xchg
jg
xor
out
cmp
outsb
lea
sub
lret
fcoml
stos
push
adc
aam
inc
mov
jp
fsub
in
pop
push
shll
jae
idivl
ret
cmp
cmpsl
call
out
dec
arpl
inc
mov
pop
add
cmp
scas
pop
ret
stc
mov
testl
push
sub
lock
push
cltd
xor
ljmp
iret
cmc
jmp
mov
jno
jle
mov
cmp
mov
adcb
inc
in
loope
mov
jns
xchg
negb
lock
fidivl
push
xchg
popa
sbb
mov
pop
inc
outsb
xchg
dec
lods
add
lea
pop
dec
call
jl
fwait
loope
std
sbb
push
jecxz
shrl
movsl
lods
je
in
outsb
subl
sub
pmuludq
out
dec
cli
out
sub
xchg
fsubrl
inc
fmuls
ljmp
into
lods
sbb
stos
aas
jle
pop
jnp
mov
xchg
add
inc
iret
sbb
mov
stos
jne
das
jo
cltd
dec
dec
sub
clc
out
cs
or
mov
add
orl
mov
cmp
adc
shrb
lods
cs
inc
lds
push
mov
cmp
or
pop
mov
enter
aam
mov
data16
mov
aaa
mov
addr16
xor
movsl
mov
add
push
sti
mov
enter
imul
add
push
dec
xor
imul
nop
pop
push
lret
movsl
pop
mov
or
lcall
adc
mov
inc
in
inc
pop
add
imulb
fstl
daa
aaa
push
cltd
mov
pop
jb
rolb
push
mov
push
cmp
jbe
nop
add
adc
push
arpl
cld
jnp
xor
movsb
pop
das
pop
ficoms
subl
sbb
mov
addr16
jp
sub
sbb
std
loope
clc
fstpl
and
dec
sarl
mov
mov
mov
arpl
inc
cmp
cmc
enter
mov
hlt
outsl
lods
or
sti
arpl
xor
das
fidivl
loopne
adcb
jbe
adc
gs
lea
stc
push
mov
pop
adc
jp
data16
out
pop
or
aas
mov
stos
push
xor
je
mov
ret
add
cmp
inc
push
pop
insb
push
jmp
in
mov
imul
dec
jp
mov
xor
cmp
popa
out
int3
loop
das
dec
jg
pusha
ds
adc
jmp
inc
cmpsb
data16
push
insb
push
jl
sti
xor
scas
arpl
enter
leave
dec
or
or
jbe
call
fidivrs
mov
inc
rorb
leave
test
lock
loope
mov
mov
push
imul
jae
ja
int3
xor
dec
insb
adc
fcoml
je
mov
xor
push
loope
stc
aad
fsts
into
sbb
mov
jl
out
pop
dec
pop
ljmp
out
dec
add
mov
sbb
rclb
mov
sbb
lahf
push
cli
iret
push
fisttpll
mov
pop
shlb
or
cli
jge
aad
mov
xchg
adc
add
stos
adc
outsb
xor
or
jnp
loop
cli
cmp
movsl
out
imul
adc
or
in
xor
xor
sub
push
push
inc
cmc
lods
outsl
insl
addr16
mov
fdivrs
int3
adc
push
leave
dec
imul
lret
pop
outsb
and
push
movsb
sub
pop
adc
mov
dec
insl
add
movsl
les
lcall
or
out
ljmpw
cmp
scas
mov
xchg
fcmovu
sub
mov
stc
xor
cmp
enter
jbe
pushf
push
std
jb
mov
pop
punpcklwd
mov
inc
loopne
add
fwait
and
ljmp
and
pop
xchg
xchg
arpl
imul
mov
or
pop
push
mov
loope
add
enter
test
lret
fs
int3
js
push
cmp
loope
in
cmp
pop
or
call
mov
mov
pop
insl
adc
ljmp
cmp
push
inc
jns
orb
xor
push
push
sub
push
jp
jle
outsb
testl
scas
orb
lea
out
inc
dec
mov
lret
jle
lock
cld
and
lock
pusha
daa
and
and
mov
ret
inc
dec
dec
pushf
out
cltd
jle
fidivs
add
push
aam
iret
mov
testb
xor
test
addr16
push
je
mov
in
or
mov
sub
ljmp
ret
shrb
jbe
or
dec
roll
push
call
mov
scas
mov
pop
inc
pop
test
adcl
jp
leave
notl
cmp
dec
decl
push
mov
cltd
or
add
inc
or
jg
jne
ljmp
shlb
test
lret
vucomisd
jge
iret
inc
or
push
or
push
cmp
scas
pusha
jle
adc
sub
xlat
outsl
les
sahf
dec
sbb
inc
pop
lret
xchg
roll
xor
jmp
cld
sub
fmulp
cmp
jle
jle
ja
rcll
xchg
rolb
out
push
mov
jb
inc
or
icebp
pop
in
fwait
jns
mov
or
and
push
push
xchg
xchg
arpl
inc
mov
in
cmp
mov
jle
push
pop
and
pop
ret
or
xlat
xchg
jg
sub
mov
filds
jae
xchg
pop
or
ljmp
lcall
dec
push
incb
mov
push
es
mov
mov
orl
xlat
sub
into
repz
fs
loop
lret
jg
jo
jb
aaa
push
add
or
frstor
pop
mov
jge
xor
cmp
push
cmp
cmp
or
mov
inc
loopne
sahf
notb
jnp
dec
mov
mov
cs
test
xchg
mov
xchg
or
sahf
call
cwtl
pop
cmp
jnp
icebp
lahf
pushl
sbb
push
or
mov
xlat
mov
icebp
jb
int
push
mov
movsb
pop
leave
mov
push
pushf
adc
jae
jns
incl
shl
and
sbb
xor
clc
pop
mov
inc
add
xlat
adc
pop
xor
jle
test
pusha
xlat
lods
aaa
out
fucomp
and
push
jno
add
mov
sbb
stos
mov
jg
lahf
mov
stos
cmc
adc
and
add
test
push
into
dec
cmc
movsb
ja
pop
cmp
mov
adc
mov
jmp
and
pop
hlt
sbb
lret
add
push
popa
in
pop
icebp
ret
insl
dec
sarb
jbe
out
es
mov
pop
add
mov
add
cmpsb
shlb
out
lea
cwtl
push
dec
push
xchg
or
fs
fadd
iret
stos
or
imulb
je
xorl
push
fisubl
es
test
dec
xchg
or
fdivrs
lock
xchg
subl
outsb
lods
xlat
dec
jns
pop
test
sbb
test
out
cmp
rorl
adcl
sbb
insl
xchg
dec
aaa
pop
stos
imul
nopl
push
pusha
inc
pop
inc
fnstsw
daa
push
cmp
push
test
adc
out
lahf
xchg
xor
hlt
push
xor
je
sub
cwtl
and
xchg
mov
test
lahf
jecxz
jo
stos
cli
mov
movsl
cmp
in
jmp
xchg
dec
dec
rorb
jge
and
popa
loopne
jge
sbb
dec
cmp
imul
arpl
pop
mov
push
jno
mov
repnz
jge
into
mov
jg
rcrl
outsb
jmp
pop
xchg
jbe
jo
les
add
dec
and
sahf
ja
scas
subl
loopne
jne
cmp
hlt
roll
push
lds
mov
sarl
stc
loope
inc
and
in
sbb
jl
repnz
add
das
test
pop
cwtl
or
mov
lahf
mov
lods
loop
jmp
dec
movsl
leave
test
jbe
or
decl
loop
dec
mov
insl
mov
popf
stos
add
inc
les
jle
cmp
outsl
push
mov
ja
std
lock
pop
mov
bound
test
ljmp
fsub
out
pop
jle
mov
or
gs
xchg
outsb
jl
gs
mov
xchg
fildl
xchg
stos
lods
frstor
shl
bound
fisubrs
in
xchg
iret
flds
sbb
cmp
inc
dec
push
ss
addr16
dec
adc
lahf
inc
nop
jae
jp
int3
mov
push
sbb
push
mov
lret
xchg
aaa
sub
sub
sub
push
lds
dec
call
inc
xchg
mov
mov
retw
lea
leave
imul
pop
popa
test
shl
sbb
mov
xchg
int3
push
test
addr16
fstl
repz
jl
inc
xor
repnz
cltd
addr16
dec
lods
mov
mov
fs
test
push
or
xlat
and
mov
mov
mov
cltd
ss
xchg
notl
ja
loope
das
shlb
pusha
jns
movsl
mov
aad
scas
jp
or
fstpt
lds
xor
pop
pop
sti
xchg
push
fwait
leave
in
in
add
add
jmp
mov
shlb
aad
and
adc
sub
mov
adc
or
movsl
das
inc
iret
xchg
les
lods
xchg
mov
xchg
fidivl
xor
and
push
or
push
lret
push
gs
clc
and
ret
push
cmp
push
es
fsubrs
sarb
push
push
je
cld
ror
mov
cmp
dec
add
dec
adc
and
lret
call
add
and
out
fsubs
lret
scas
aaa
icebp
dec
mov
push
push
xor
rcll
je
imul
stos
cmp
xchg
sub
fmull
dec
lcall
es
clc
mov
cmp
push
xlat
jecxz
pushf
gs
sbbl
sbb
mov
pop
subl
dec
cld
push
mov
xchg
xchg
fnstsw
repz
xor
ds
or
ja
mov
jg
and
movsb
in
xor
xchg
xchg
jp
cmpsb
push
call
jo
mov
ljmp
add
cltd
mov
in
mov
pop
ficoml
jno
ja
add
pop
iret
aam
dec
jp
push
shrb
push
orl
out
sti
xor
enter
ja
fists
sub
fldt
lahf
fstl
jl
xor
jle
faddp
jmp
lock
in
add
fbld
movsb
out
imul
icebp
pop
outsl
mov
jae
into
xchg
loop
daa
dec
dec
jne
setno
mov
inc
cmc
xor
imul
and
xor
adc
ds
loope
push
jnp
scas
inc
fldcw
in
sub
adc
ficompl
push
insb
adc
and
ds
jae
sub
sub
loop
cmpl
xchg
cmc
xchg
out
dec
imul
jecxz
or
inc
and
cmp
in
ret
cli
fmull
test
pop
fstps
dec
add
lea
dec
xchg
jmp
sub
and
and
sbb
notl
ja
stos
imul
adc
std
jmp
hlt
shr
divl
sbb
push
bnd
fistl
xor
mov
mov
mov
in
loope
gs
mov
in
ret
movl
dec
inc
fnstsw
pop
mov
mov
xchg
xchg
cwtl
mov
jne
jp
popa
add
lret
adc
and
iret
inc
iret
int3
aam
pop
insb
mov
jo
bound
mov
dec
inc
cmp
and
ret
loopne
inc
push
mov
stc
cld
cmc
push
xor
sarl
jp
lcall
decb
xlat
bound
fdivs
test
ss
mov
sti
clc
sub
lahf
mov
sbb
mov
mov
push
int3
mov
mov
xchg
outsl
sbb
enter
inc
sub
pop
adcl
fbstp
lret
jp
into
mov
cwtl
add
or
fdivs
mov
adc
pushf
je
lds
out
fwait
fwait
jne
adc
add
jl
push
leave
ja
xor
aad
not
jb
outsb
cmp
xchg
jecxz
cmpsb
jno
push
adc
lock
pusha
pop
xor
ss
xor
icebp
dec
mov
rcrb
mov
push
in
mov
out
insl
loopne
jl
mov
xor
mov
pop
ret
inc
lock
lsl
pushf
mov
aad
mov
adc
repnz
es
aaa
gs
loopne
mov
mov
pop
xor
mov
push
xor
jo
inc
out
pushf
lret
push
das
icebp
daa
loop
movsl
dec
movsl
fwait
push
xchg
sbb
arpl
pop
pop
jo
jbe
xchg
or
push
inc
xchg
insb
in
mov
pop
mov
add
adc
mov
test
dec
lock
or
mov
mov
out
dec
push
pop
sub
push
push
adc
pop
dec
clc
xlat
icebp
filds
lcall
ds
icebp
jbe
mov
insl
lea
sub
stos
popf
xor
test
mov
lock
pop
inc
mov
call
movsb
jl
push
insb
and
in
stos
or
fstpt
push
insl
mov
push
test
mov
jno
add
push
repnz
sub
xor
pop
xchg
add
sbb
pop
in
xor
out
movsb
inc
test
std
ret
pop
imul
jl
lods
sahf
jp
jb
outsb
mov
or
adc
popa
iret
cmp
fwait
je
test
or
xor
jns
incl
cli
sub
aas
loope
jbe
xor
imul
xor
dec
mov
mov
outsl
and
adc
fwait
push
adc
out
inc
dec
popa
sbb
in
push
mov
out
stos
sti
dec
dec
test
xor
popf
xor
js
mov
lods
lahf
dec
rcr
cli
sbb
lahf
adc
jne
jns
cmc
xor
adc
lods
loop
pop
xlat
add
adc
negl
rorb
and
orl
fs
rcrl
xor
insl
sbb
insb
arpl
jmp
arpl
sbbl
out
ljmp
test
icebp
push
jno
pushf
push
mov
adc
cmp
push
dec
push
dec
lret
fadd
das
mov
mov
clc
cld
inc
cwtl
jae
inc
sbb
cmpsb
jle
les
in
test
ja
test
out
xor
fadds
js
jecxz
xchg
dec
pushf
and
ds
stos
je
jmp
out
mov
dec
mov
idivb
popa
xor
dec
or
adc
in
cmpps
loopne
inc
data16
adc
cmc
movsl
mov
push
sbb
mov
inc
xchg
popa
cmp
push
mov
xchg
stos
and
fldenv
cmpb
shrl
popa
int3
cmp
sbb
daa
cs
jmp
lods
push
arpl
sbb
in
adc
pushf
shlb
dec
or
cmpsb
test
inc
inc
fcompl
adcl
jp
push
add
insl
jg
mov
inc
xor
call
or
loopne
xor
lea
dec
ret
push
push
pop
xchg
add
dec
mov
lret
clc
and
imul
jb
lock
jae
pop
mov
es
std
adc
jb
add
int3
push
mov
sbb
pop
sub
xchg
cwtl
test
dec
dec
mov
adc
imul
push
xchg
mov
mov
es
mov
cmpsb
ja
ret
inc
imul
adc
aas
xchg
das
pushf
lock
mov
scas
pop
and
mov
mov
sub
int3
inc
cld
inc
addr16
cmc
jg
dec
mov
mov
push
stc
lret
in
xor
push
mov
adc
jmp
loopne
pop
in
cli
jle
and
iret
mov
loope
jb
inc
adc
aaa
mov
sbb
outsl
cmp
unpcklps
xor
popa
fnstenv
js
push
inc
jg
adc
mov
fwait
mov
test
xchg
add
cmpb
ret
insl
inc
in
sub
scas
addr16
pushf
adc
jle
mov
int
enter
inc
fdivrs
in
dec
scas
cs
hlt
fst
fdivrs
pop
sbbl
jge
mov
mov
xor
std
ret
jne
cmp
mov
imul
adc
push
enter
and
mov
mov
rorb
dec
loop
dec
dec
jae
loopne
adc
es
les
pop
cmc
hlt
add
ja
jbe
pop
int
imul
mov
mov
stc
das
enter
hlt
loope
or
mov
sub
mov
inc
pop
aaa
dec
push
mov
jle
push
sub
add
aaa
addr16
in
or
or
xor
mov
mov
jno
push
xor
pop
ret
imulb
repz
lock
sub
cmpb
lods
pop
sar
xchg
daa
add
push
or
xchg
shlb
cmp
inc
mov
call
push
add
push
cs
loope
sbb
out
bound
pushl
gs
nop
fneni(8087
mov
lods
mov
shll
jae
aad
inc
lcall
sbb
outsl
mov
add
push
pop
jle
dec
scas
in
mov
xor
mov
cmp
push
xlat
mov
dec
insb
jnp
inc
sti
sub
mov
jmp
lods
pop
pusha
pusha
mov
jb
push
clc
call
or
cld
or
inc
out
pop
xchg
mov
push
sbb
in
dec
jo
xchg
mov
add
cltd
mov
int3
mov
pushf
and
jmp
add
push
cld
es
enter
xchg
mov
dec
and
and
lahf
push
add
test
and
dec
jp
xchg
jb
ret
mov
xchg
jp
data16
mov
out
dec
xchg
sub
shlb
das
sbb
orl
jo
mov
cltd
dec
mov
xchg
in
mov
mov
pop
jno
fists
aam
jns
loopne
movsb
lods
push
cltd
addl
inc
hlt
jmp
or
jmp
repnz
fs
dec
push
clc
imul
pop
inc
mov
cmpsl
dec
push
stc
mov
fisttpll
or
xlat
mov
jp
es
cmp
mov
cmpb
mov
mov
insl
ret
int
pop
mov
iret
in
mov
jecxz
add
or
int3
iret
sbb
les
mov
inc
jne
insb
sahf
or
sub
jp
xor
and
push
jo
xlat
pop
mov
ret
adc
or
ficompl
or
inc
add
andl
cld
pop
pop
test
xchg
dec
push
pop
adc
jp
xchg
incl
imul
and
out
jb
cld
cmp
adc
and
sub
mov
fldl
inc
hlt
insb
cmp
xchg
and
or
mov
fldenv
xchg
lock
and
dec
nop
or
stos
pop
and
and
mov
jecxz
clc
sub
jno
xchg
mov
pushf
cmpl
push
sub
lcall
icebp
add
icebp
sub
push
mov
pop
iret
inc
shrl
sbb
out
test
mov
jecxz
push
imul
push
xchg
cmp
filds
es
lods
cmp
shll
add
dec
jge
lahf
pop
cltd
xor
dec
test
test
xor
mov
movsl
sub
dec
int3
cwtl
inc
xor
dec
sbb
mov
outsl
js
int
mov
std
cmp
pop
add
mov
mov
push
shll
outsb
xor
ret
aam
mov
testb
adcb
out
lds
stos
pop
fbstp
and
mulb
cmp
stos
mov
or
in
fdivrl
mov
data16
sbb
jnp
test
cmp
adc
faddl
pop
pushf
or
mov
popf
jmp
movsl
mov
mov
imul
pop
push
lods
in
dec
and
jne
pop
imul
mov
cmp
lock
sub
hlt
jmp
xor
mov
nop
imul
cmc
add
jmp
dec
out
js
cmp
or
jae
scas
shld
andb
cmpb
adc
or
repz
sarl
and
fcomi
and
leave
jbe
int3
jne
adc
xchg
clc
sahf
sub
lahf
stos
in
imul
pop
and
dec
inc
lds
pop
aas
lret
and
pop
and
xchg
jo
ffree
push
aam
sbb
movsb
andb
pop
loope
cmpb
data16
mov
in
arpl
stc
adc
add
jbe
fildll
or
xchg
roll
out
dec
iret
jge
aam
push
mov
mov
or
pop
incb
fmuls
repnz
arpl
jecxz
adc
jl
loop
inc
imul
pop
cmp
lods
mov
aaa
mov
shll
cmpsb
sbb
ja
push
xchg
xor
sbb
loop
movsb
adcl
push
xor
test
lods
inc
inc
jg
mov
ss
aad
test
cli
mov
rcll
addr16
sbb
pop
mov
mov
test
dec
sub
out
push
mov
push
pop
fbstp
lods
test
push
jb
popa
or
test
inc
dec
mov
push
mov
clc
mov
dec
inc
shl
test
sti
scas
dec
mov
pop
das
or
gs
test
adc
xchg
arpl
mov
jecxz
test
mov
push
enter
pop
push
inc
dec
mov
mov
and
in
shl
jno
mov
cltd
iret
xorb
mov
in
cmp
pop
lods
sti
dec
xor
jg
jg
xchg
iret
cwtl
pop
es
pusha
sub
or
loope
daa
mov
outsl
icebp
test
xlat
dec
jno
jbe
out
outsl
adc
cmpsl
pop
scas
lock
cmpb
xor
loop
movsb
notb
dec
xor
inc
fcmovnu
sub
sbb
data16
incl
cmc
repz
dec
sahf
mov
inc
xchg
lret
fs
idiv
fnstsw
xor
jp
vmovhpd
sub
cli
mov
pop
push
mov
push
in
in
lods
fs
sub
mov
mov
pop
inc
dec
ss
out
lcall
gs
jo
jae
and
test
mov
inc
imul
imul
rcrb
sub
nop
inc
dec
arpl
xlat
xor
in
nop
dec
sbb
stos
jge
mov
ss
lret
lds
jl
sbb
push
test
xor
sti
notl
imul
add
inc
mov
fisttpll
movsl
jae
inc
lock
insl
mov
aad
test
cmp
xor
dec
pop
xchg
js
adc
push
les
stos
mov
push
cmp
dec
add
dec
shl
adc
mov
out
jge
sbb
push
jns
inc
pop
je
inc
mov
jbe
add
push
dec
lods
insb
jns
mov
in
andb
scas
sub
mov
dec
outsl
pop
push
inc
lods
dec
inc
cmp
push
dec
and
gs
mov
sbb
shll
pop
pushf
xor
stos
loop
in
fcomi
xor
pusha
or
in
sbb
xchg
mov
aam
cs
cmp
cmp
lcall
outsl
repnz
cmpsl
fdiv
popa
pop
out
xchg
repz
lods
dec
mov
jb
rcll
das
mov
insl
pop
lcall
sbb
mov
fidivrs
data16
data16
xlat
xchg
arpl
xchg
cmpsb
push
lahf
cs
inc
mov
mov
xlat
sub
lea
jmp
jecxz
cmp
inc
push
mov
test
xchg
psubb
dec
idiv
push
lcall
shrb
sub
icebp
pushf
adc
lea
xor
cli
xchg
adc
pop
aas
push
cld
mov
pop
pop
inc
dec
sub
les
cmp
ja
movsb
nop
pop
xor
in
lods
xor
push
push
imul
mov
loopne
mov
bound
jmp
push
mov
ja
jbe
sbb
push
mov
je
lahf
jae
ljmp
sbb
push
std
in
pusha
xor
mov
jge
push
xor
mov
imul
vpshlw
ret
add
ljmp
sub
and
xchg
pop
push
dec
and
shlb
fisttps
scas
mov
mov
fldenv
rol
popa
out
mov
in
sbb
aam
inc
xor
add
lret
xor
jnp
jmp
push
and
mov
jge
lret
mov
popa
outsl
rcrl
pop
stc
insb
cmpsb
push
cltd
push
sbb
popa
ja
je
cmp
push
adcl
pusha
jl
push
add
xchg
pop
and
rcll
movl
jge
fisttpl
adc
push
cmp
std
xchg
dec
pop
movb
sub
mov
pusha
adc
dec
mov
dec
inc
add
sarb
pop
mov
inc
in
lcall
xor
sub
leave
ljmp
add
fsubl
imul
fidivs
rorb
sub
mov
fldt
adcl
lcall
mov
aam
dec
xlat
enter
xchg
xchg
stos
pop
push
and
xlat
sbb
insl
add
aad
lahf
lret
pusha
dec
cmp
stc
gs
and
js
aad
das
mov
insb
xor
jmp
lcall
cmp
xchg
out
shlb
popf
call
call
pop
arpl
out
inc
data16
scas
dec
jns
jae
inc
stc
mov
push
jns
sbb
mov
fmul
lahf
adc
in
rolb
stos
sub
fnstenv
ss
js
lahf
scas
cmp
fstpl
hlt
dec
filds
stos
xor
imul
fwait
push
clc
test
push
push
in
cmp
es
mov
movsb
repz
aam
fists
ret
mov
and
flds
cwtl
push
jno
dec
cs
mov
lods
stos
popf
jns
jnp
enter
xorl
adc
pop
je
int
imul
data16
sub
imul
cmp
pop
mov
fcmovnu
pusha
loopne
fs
adc
sub
push
adc
loope
jb
ret
shlb
xor
hlt
cmpsl
hlt
mov
mov
mov
jae
je
stos
adc
push
cmp
mov
adc
push
jg
sbb
dec
imull
pop
movsl
xchg
sarl
cmp
or
mulb
fsubrs
pop
subl
cmp
push
mov
shll
pop
adc
pushf
jae
daa
cmp
rclb
pop
xor
loope
js
mov
jno
stos
ss
mov
fstps
repnz
enter
shlb
xor
cli
push
sub
mov
inc
stos
scas
add
cmpsl
xchg
pop
or
aaa
cmpsl
lret
mov
ret
clc
aad
sub
shlb
and
mov
pusha
bound
mov
lret
nop
fcomip
pushf
add
divl
aad
jmp
cmc
cmp
int
das
and
push
push
xchg
or
sbb
xor
jae
outsl
adc
push
test
popa
test
mov
fsubrl
cmp
jp
jle
pop
pop
xchg
iret
pop
aaa
or
cmc
mov
add
iret
std
add
adc
sub
mov
push
mov
lock
jno
aaa
or
mov
bound
mov
pop
out
cltd
pusha
mov
repz
pop
sub
stos
mov
lret
xor
sbb
pusha
jno
imul
mov
jecxz
cmp
cltd
mov
pop
push
jle
xchg
mov
jp
or
fstpt
aaa
clc
xlat
xor
jecxz
fbstp
mov
and
data16
jecxz
test
cld
sbb
push
ret
dec
in
out
fs
aaa
add
or
rorl
or
mov
xchg
movsb
shrl
and
ss
data16
jns
int
inc
xchg
inc
ss
sub
sbb
xor
mov
mov
cli
aas
mov
rcrl
xor
cmpsb
jmp
lods
mov
push
mov
sub
or
test
leave
and
adc
jl
add
js
leave
shrl
or
into
movsb
test
lea
popf
mov
insb
jle
pop
faddl
jmp
cs
cwtl
enter
mov
aam
fmuls
mov
inc
rorb
sub
pop
xlat
ja
pop
dec
sub
push
rcrb
insb
fucomip
jg
pop
or
mov
in
fs
inc
mov
ret
pusha
mov
dec
popf
or
scas
mov
or
lock
push
fcoms
cmp
mov
mov
inc
add
push
das
xchg
or
mov
xchg
es
add
sbb
inc
aas
jmp
adc
xor
push
inc
mov
pop
outsb
ret
mov
ds
and
cmp
pop
xor
sbb
scas
ret
pop
clc
les
jmp
movb
outsb
cmp
add
jb
lods
movsl
js
clc
and
aas
aas
cmpsl
out
rclb
jo
lds
loope
dec
mov
stos
sub
add
clc
pop
sahf
das
adc
aaa
mov
js
adc
cmpsb
into
add
ljmp
sub
fisubs
in
rorb
cmpsb
out
or
loop
push
sbb
xchg
sub
pop
push
sti
addr16
lret
int3
push
or
push
mov
add
mov
push
stos
stos
inc
sbb
xchg
dec
in
mov
lcall
xor
add
jg
lea
movsb
rcrl
xchg
pop
cmp
xor
xchg
imul
scas
cmp
cwtl
jle
aaa
int
cmc
push
cmp
je
and
pop
add
loope
sbb
cltd
and
lret
dec
push
enter
mov
cmpb
cmp
xchg
mov
cmpsb
popf
in
jae
cmp
mov
rcl
aas
and
cwtl
push
dec
xchg
aam
lds
cs
dec
icebp
jecxz
movb
xor
loopne
inc
cmpsb
ret
mov
xchg
pop
adc
mov
push
xchg
call
cltd
cld
pop
cmpsl
jbe
sub
pop
lret
lods
repz
cmp
ja
scas
int3
sub
jge
sub
pop
das
pushf
movsl
mov
and
lret
inc
mov
fidivl
push
je
lock
mov
shrb
adc
enter
or
xchg
pushf
bound
sbb
aaa
cmpsl
mov
mov
lcall
fsubrs
int3
sub
scas
pop
icebp
adc
push
fs
mov
shll
mov
fidivs
inc
sti
mov
fadds
mov
js
jnp
orb
push
push
mov
xchg
pushl
out
sti
shrb
dec
fmull
test
mov
or
mov
jmp
imul
call
out
mov
orb
jle
mov
xor
lock
test
je
mov
jno
in
mov
shrb
daa
lret
pop
lods
icebp
jae
add
outsl
aam
inc
lcall
cli
mov
jp
shll
xchg
mov
mov
test
stos
xor
scas
jecxz
add
ds
add
aam
int3
mov
or
dec
addb
cmp
int3
out
pusha
and
addr16
movsb
and
scas
testb
add
pusha
mov
lods
mov
inc
js
int
inc
mov
push
dec
out
insw
mov
movsb
push
cwtl
notl
cli
aas
inc
mov
sbb
fldt
test
in
mov
mov
aam
call
stos
adc
mov
or
movsl
xchg
add
jnp
loope
sahf
addr16
mov
dec
xchg
ficomps
pop
jecxz
cmp
lods
mov
pop
test
sub
dec
push
and
jecxz
in
das
icebp
mov
fwait
fs
imul
je
and
jb
mov
jbe
fs
inc
jge
ds
js
mov
push
subb
js
shll
xor
mov
popf
jns
jns
leave
shrb
mov
lods
cmc
ja
scas
in
mov
outsb
pop
aad
jle
xor
pop
pop
push
mov
es
lret
ljmp
les
and
and
das
mov
jmp
inc
or
shrl
sub
iret
xor
xchg
jae
dec
outsl
push
xchg
adc
shll
xchg
jl
pop
push
mov
jno
pop
jg
cmp
lfs
adc
std
inc
scas
outsl
jg
lds
mov
mov
leave
push
pop
or
xor
adc
test
dec
cmpsb
jbe
push
push
aaa
push
mov
scas
ret
jb
jne
xor
inc
xorb
mov
or
daa
lcall
ret
dec
out
lds
mov
nop
gs
out
or
xor
bt
les
sbb
loop
hlt
test
pushf
mov
sub
push
adc
les
roll
pop
negl
xchg
push
sub
push
jbe
add
or
out
jecxz
add
std
xor
add
xor
test
jno
jno
push
out
pop
inc
arpl
push
mulb
fildl
add
mov
dec
sub
imul
or
mov
aas
loopne
mov
xchg
xchg
cmp
cmp
jp
sub
lret
jp
pop
js
xor
inc
mov
imul
pop
or
negl
dec
jb
rclb
daa
js
adc
movsl
in
sbb
imul
test
pop
jb
sub
mov
lods
jecxz
and
mov
movsb
repnz
addr16
nop
sub
ds
fdivp
cmpsl
sti
mov
xlat
or
jle
jp
clc
int3
out
popf
das
cmpsb
test
ss
or
std
sbb
repz
outsb
cmp
andb
in
jge
adc
test
repz
add
jno
sbb
cmp
xor
mov
pop
out
xchg
test
pop
arpl
insl
fisttpll
lcall
frstor
aas
pusha
cmpsb
cmp
xor
das
stos
pop
adcl
inc
testl
xor
nop
mov
stc
imul
xor
xor
pop
mov
sbb
std
sbb
jle
scas
lret
loopne
pop
in
cmp
js
cmp
push
pop
xlat
dec
shll
cltd
adc
in
jo
std
mov
xchg
scas
into
shll
add
outsl
inc
insb
jg
sub
popa
pushf
aad
rcll
sub
mov
and
lds
add
pop
sbb
filds
imull
push
add
lahf
sahf
cmp
lods
and
sbb
js
dec
fldcw
addb
out
push
shl
add
and
mov
aad
mov
jp
sub
jae
shlb
insb
mov
sti
and
into
cmp
insb
lcall
fdivl
std
sub
mov
mov
cvtps2pd
idiv
or
add
aam
cmpsb
xchg
test
addb
jne
mov
test
cwtl
pop
in
and
lahf
mov
inc
bound
xlat
or
pop
aam
sbb
dec
sub
mov
pop
test
sub
shlb
movsb
rolb
dec
orb
jns
add
cmp
inc
in
xchg
lret
push
shrb
outsl
jne
pop
repnz
push
test
push
imul
lods
mov
cmpb
jno
add
call
jmp
mov
add
lock
rep
jge
mov
cmpsl
stos
testb
dec
xor
in
mov
movsb
inc
pop
lods
adc
arpl
and
push
sti
mov
sub
in
push
cwtl
popa
jnp
mov
lods
mov
pop
xchg
xor
loop
mov
out
clc
test
sub
pop
push
jnp
and
or
hlt
mov
insb
mov
in
xchg
cld
incb
xorl
stc
fcomip
or
adc
and
xchg
inc
pop
bound
pop
imul
adc
jnp
filds
lret
fadd
ljmp
in
mov
sub
or
les
or
sbb
loopne
ret
push
fxtract
mov
lcall
mov
adc
and
lods
and
mov
mov
or
fisttps
xor
lcall
sub
sarb
imul
mov
push
repz
inc
and
jg
dec
pusha
loopne
stc
xchg
dec
xchg
jle
fs
mov
dec
and
xor
or
in
int
xchg
rcl
test
xor
xor
adc
stc
push
scas
fdivl
les
mov
or
mov
jle
lret
std
sbb
inc
xchg
sbb
mov
mov
les
mov
out
nop
jg
sub
fsts
lcall
dec
cli
add
cmpsb
jmp
xor
mov
shlb
mov
ret
les
push
adcb
inc
sbb
sbb
std
divps
mov
dec
adc
int3
pop
imul
loopne
xchg
pop
out
push
jg
adc
movsl
ret
ret
mov
cmc
inc
gs
push
les
xchg
adcl
add
stos
or
add
stc
mov
add
inc
mov
js
dec
fwait
jno
testl
push
mov
int
xor
xor
inc
hlt
add
dec
pop
shlb
cmpsl
mov
inc
mov
push
test
push
push
mov
push
fbstp
and
pop
mov
sbb
shrl
mov
push
dec
xchg
and
xchg
stos
mov
mov
lahf
gs
imul
in
into
int3
xor
scas
mov
fldenv
dec
cltd
mov
movntq
sti
xor
and
jb
inc
iret
jo
clc
dec
push
mov
or
clc
ret
imul
or
sbb
imul
leave
cmpsl
adc
cmp
or
xor
out
push
arpl
sbb
scas
cmc
inc
movsb
bound
andl
cltd
out
adc
insb
repz
ret
sub
mov
push
dec
mov
jae
arpl
mov
inc
cmp
int
aaa
adc
mov
xchg
mov
mov
stos
sub
mov
in
scas
sub
dec
or
push
dec
cmpsb
mov
daa
dec
add
stos
popa
lret
jbe
ficompl
mov
ds
xchg
je
aam
int
bound
push
movsb
dec
cmp
lods
jg
inc
push
dec
outsl
pop
xor
ret
insb
push
and
mov
loopne
cmp
fwait
jecxz
nop
mov
xor
and
push
jbe
pop
push
ret
push
jae
inc
push
jl
imul
imul
in
addr16
aaa
mov
and
jmp
xchg
inc
push
imul
and
mov
add
mov
cmp
sub
mov
push
dec
test
lods
int
xor
push
test
push
mov
movsl
jb
jmp
arpl
les
dec
rol
lret
mov
fwait
xor
loop
fldt
fdivrl
fs
subl
ss
inc
inc
cld
jno
scas
and
enter
mov
xchg
push
pop
andl
mov
sbb
adc
jge
das
andl
add
pop
in
xchg
pop
xor
jnp
mov
mov
cmp
fdivrp
repnz
in
mov
push
das
xchg
pop
cld
imul
mov
push
pop
je
stos
add
xchg
pop
pop
pop
int
insb
mov
pop
cmpsb
mov
sahf
inc
push
jmp
movsl
jo
shrl
cs
aas
lds
je
cmpsb
or
adc
mov
jb
jecxz
push
jl
clc
movsl
out
push
addb
ljmp
cli
pop
cld
push
push
outsl
jle
ds
rcrb
mov
lods
mov
in
dec
dec
cmc
cmc
and
push
mov
sbb
lds
ja
xchg
push
cmpsl
pop
push
inc
rolb
pop
fmull
test
push
inc
xor
in
adc
ret
bound
pop
mov
cld
lea
add
mov
pop
inc
mov
mov
fnstenv
cmp
jg
jp
test
pop
jbe
push
in
std
xor
xor
iret
test
or
pop
xor
js
lods
les
mov
testl
pop
pop
or
xchg
fnstsw
sti
pop
inc
lret
mov
adc
mov
sti
pop
mov
sub
fcmovbe
repnz
fs
divb
push
inc
add
jne
ror
int
mov
shrb
test
sbb
int3
in
mov
sub
push
out
inc
je
push
mov
jp
mov
into
sub
cmpb
pop
pop
or
adc
shlb
push
scas
stos
imul
daa
imul
aad
inc
cli
fdivs
inc
inc
stc
sti
subb
or
adcl
add
jle
mov
iret
imul
lock
test
ss
sahf
dec
mov
ljmp
sbb
xlat
mov
lock
inc
sub
dec
jle
mov
and
repnz
popf
iret
pop
jge
pop
test
sbb
out
cmp
push
fcmovb
sbb
xor
cmp
les
aam
adc
mov
rolb
mov
rorl
push
cmp
and
dec
icebp
xchg
xlat
push
pcmpgtd
sub
scas
dec
mov
inc
dec
in
stos
push
xor
in
lahf
bound
mov
inc
out
addb
inc
push
jbe
iret
mov
mov
inc
aad
jbe
push
or
jmp
hlt
fiaddl
rcpps
inc
mov
icebp
mov
add
add
dec
in
loope
adc
and
mov
stc
test
stc
lods
imul
xor
sbb
jmpw
cs
xchg
sub
xorb
loop
sbb
js
popf
out
call
mov
loop
sbb
jle
imul
lods
inc
sbb
xchg
cmp
test
or
adc
sub
and
scas
xchg
pop
jg
xlat
adc
sbb
push
mov
rorl
pop
rcrb
test
insb
push
fwait
clc
dec
jae
in
ret
cwtl
movsb
mov
in
jmp
rcll
sbb
pusha
adc
sub
aad
pop
aas
addb
jle
cs
sub
cmpsb
lock
dec
jne
pop
fwait
xor
stos
mov
sbb
lock
xchg
xor
jae
roll
lret
fwait
outsl
add
or
dec
fstpl
stos
enter
cmpsl
inc
push
xor
fstl
pusha
call
fsub
daa
fucomp
sub
pop
pop
test
fcom
jno
adc
dec
xor
ret
jecxz
mov
out
mov
add
push
sbb
ljmp
lcall
mov
push
shr
jmp
mov
fwait
scas
dec
dec
sbb
mov
call
mov
mov
fldcw
outsl
xorl
mov
nop
out
push
out
add
aas
out
inc
aad
fcomps
mov
pop
jecxz
pop
sbb
adc
xor
mov
stos
sbb
xor
adc
cmp
es
sbb
pop
subl
xchg
aaa
pop
in
adc
stos
gs
cmp
or
scas
adc
call
ljmp
imul
pop
cmpsl
inc
imul
push
and
mov
js
adc
addb
out
sbb
jne
or
dec
stos
scas
inc
xor
fwait
xchg
xor
rcrl
mov
dec
popa
xchg
int
ja
push
inc
pop
popf
aaa
pop
xor
and
sbb
icebp
lds
inc
xor
and
jecxz
aad
sub
lret
loop
mov
sbb
addl
mov
lds
cltd
enter
xchg
mov
fisttpll
xchg
bound
add
pop
adc
and
fwait
pop
mov
pop
cmpsl
movsb
cmc
push
xchg
pushf
dec
outsb
gs
jecxz
cwtl
xor
push
cmp
push
cs
lret
push
cmp
fldln2
rorb
or
aad
mov
xor
bound
push
movsb
mov
and
xchg
cmpsl
push
mov
mov
lock
xor
daa
inc
push
into
push
cs
test
lock
jne
and
or
mov
stc
repz
pop
lods
sbb
sbb
sbb
lahf
xchg
mov
sahf
ljmp
sub
ret
xchg
mov
jge
sub
sbb
push
hlt
mov
sbb
mov
inc
xchg
sub
sub
inc
mov
and
mov
lds
arpl
addb
aas
dec
and
jmp
mov
popf
mov
outsb
jecxz
adc
mov
fwait
loop
xor
popa
mov
iret
add
cmp
mov
and
xor
push
xlat
jb
or
lcall
iret
sub
xchg
xchg
rcr
invd
dec
xchg
dec
pop
and
int3
insl
mov
dec
lahf
mov
aad
stc
jae
inc
push
aad
mov
cmpsl
mov
jge
imul
jbe
dec
push
pusha
scas
xchg
dec
jle
ss
mov
imul
mov
in
mov
dec
push
lds
stos
sbb
pop
push
mov
sti
cltd
or
loop
push
cmp
sub
jno
pop
dec
cltd
in
out
and
data16
jae
outsl
xorb
sub
rcr
xchg
mov
inc
jge
mov
es
xchg
arpl
or
ret
std
fmull
push
addr16
lods
sbb
leave
pusha
insl
push
mov
insl
shll
fs
jp
shr
fidivl
aaa
ljmp
out
rolb
imul
mov
stc
fs
pop
pop
fcompl
or
stos
sarl
push
stc
adc
push
in
cmpsl
inc
sbb
repnz
cmp
cmpsb
test
push
xlat
pushf
xor
inc
and
push
xor
lea
rolb
jmp
in
xchg
jno
push
iret
popa
cmpsl
sub
in
xor
shrd
inc
pop
add
mov
test
jle
jbe
jns
inc
pusha
mov
out
hlt
fcompl
shlb
adc
mov
cmp
insb
inc
xor
jle
add
sbb
mov
cld
mov
imul
mov
lret
scas
mov
arpl
mov
or
fwait
cmpsb
dec
in
filds
mov
jb
or
pop
sti
cmpsb
adc
filds
cs
xchg
ljmp
stos
add
call
out
movsb
lods
das
xchg
roll
popf
loopne
adc
add
pushf
cmpsb
jo
mov
sahf
mov
cmpsb
test
sbb
lret
pop
dec
sub
out
das
lret
inc
xchg
jne
push
pop
mov
mov
and
sub
sbb
inc
fs
add
les
mov
xchg
fs
lcall
cld
xchg
cmp
jns
into
call
mov
imul
xchg
push
mov
jbe
enter
nop
dec
neg
iret
jg
mov
xor
rclb
and
jo
or
out
inc
test
imul
xor
xchg
addb
inc
test
xchg
mov
pop
stos
and
lods
sbb
inc
lahf
jnp
add
xor
xchg
add
mov
mov
add
push
fwait
cmp
sbb
data16
push
or
es
jno
pop
divb
lahf
es
sbb
xchg
jne
jbe
xchg
inc
jo
jp
es
fistpll
jecxz
out
std
mov
dec
test
adc
xchg
je
lcall
lods
sbb
or
pop
and
fwait
stos
frstor
cmp
add
jmp
outsl
cmp
mov
inc
sbb
mov
into
pushf
arpl
scas
sub
or
sub
cs
inc
mov
aam
cmp
and
scas
xor
fucomp
sub
mov
sahf
ficompl
fistpl
jno
xorb
dec
scas
fs
mov
repz
mov
mov
cmp
sub
ds
cmp
ss
adc
cmp
sbb
sub
add
cmc
stos
mov
sarb
andl
loop
divl
sbbb
mov
jnp
rsm
xor
mov
jns
std
gs
pop
or
sarl
and
outsb
dec
push
sti
adc
fwait
dec
shlb
fwait
movsl
push
mov
scas
pop
std
jae
and
clc
stc
aad
mov
pushf
call
mov
xchg
scas
das
jns
pop
fs
dec
cmp
divb
pop
shll
add
inc
mov
cmp
adc
stos
jle
adc
aad
sbbl
popf
or
mov
fstpt
cmp
jo
add
fisttpll
mov
xor
pop
xchg
aad
pop
movsb
lcall
fsubrs
push
lea
cmp
adc
xlat
and
xor
dec
aaa
add
inc
rsqrtps
pop
repz
mov
hlt
mov
nop
xor
mov
leave
xor
xchg
fldcw
xor
push
repnz
aam
js
mov
iret
arpl
lcall
stos
pop
subb
pop
and
push
pop
sbb
mov
fdivrp
movsl
mov
jecxz
push
cmp
jnp
into
or
xlat
mov
cltd
xor
std
pop
pop
jecxz
push
lods
fsubrl
dec
add
or
push
ret
loopne
out
fimull
dec
xchg
push
push
mov
jbe
inc
arpl
inc
lds
adc
xchg
mov
add
dec
xchg
arpl
cmp
fildll
hlt
fistps
push
lods
movsl
add
sbb
jmp
nop
in
or
inc
jle
push
sti
insb
cmp
pop
mov
xlat
pop
lods
sbb
add
xchg
push
pop
outsb
jo
xchg
dec
mov
or
movsl
mov
add
loop
sarb
xlat
inc
ss
mov
push
mov
or
cmp
addb
and
test
sti
sub
and
test
imul
fdiv
adc
ss
dec
inc
std
cmp
ja
ret
clc
loopne
les
xchg
dec
xchg
inc
ficomps
out
int3
leave
scas
pop
addr16
movsl
stos
cmp
icebp
mov
loop
sub
add
inc
outsl
cltd
jle
sub
xchg
sbb
stc
xchg
jno
mov
mov
aam
adc
xor
fsubs
push
ja
cmp
faddp
jae
push
cmpsl
xchg
out
into
int
adc
mov
fildll
xlat
adcb
dec
adc
and
mov
pop
push
and
movsb
movsl
out
daa
lods
mov
out
push
lahf
cli
or
nop
xlat
pop
nop
xchg
cs
outsb
dec
dec
cmp
rcrb
movsl
jns
arpl
hlt
cmp
xchg
test
loope
mov
nop
push
jmp
dec
pop
jg
inc
stos
or
mov
inc
or
inc
sbb
jnp
loope
mov
insb
mov
xor
insl
pop
xlat
cwtl
aam
pop
test
add
mov
jl
cli
aam
int3
push
bound
push
sbb
gs
cwtl
addr16
sbb
mov
xchg
test
test
add
shlb
mov
fisubs
mov
mov
fbld
dec
pushf
pusha
rcll
jbe
out
inc
mov
pop
cmp
pop
iret
sub
pop
sub
rol
jno
fcoms
fs
mov
nop
hlt
xchg
jb
mov
jmp
lods
sub
negb
mov
sahf
mov
bound
aaa
movsl
fistpll
test
lods
adc
inc
xchg
in
pop
jecxz
stos
mov
fwait
daa
sub
push
add
add
les
test
jle
push
daa
xchg
outsl
daa
sub
and
pop
xchg
std
frndint
push
mov
or
and
ret
loop
mov
imul
and
and
cld
in
xchg
add
inc
cmpsl
mov
fsubr
lret
sub
imull
fcomps
mov
int3
adc
push
push
inc
xor
xchg
nop
add
mov
aaa
shll
inc
inc
push
push
xchg
mov
test
xor
repz
xlat
iret
in
cmpsb
pop
inc
int3
incb
data16
mov
xchg
jno
js
add
push
dec
repz
or
sub
cmp
mov
push
pop
out
mov
scas
test
aas
icebp
jle
jge
cmp
call
jl
test
mov
lcall
in
push
dec
arpl
leave
outsb
inc
mov
pop
hlt
es
cmp
sub
pop
leave
mov
jl
push
nop
mov
outsb
jbe
jmp
clc
xchg
dec
inc
dec
aam
push
mov
dec
pushf
nop
pop
scas
push
aaa
insb
sbb
xor
ss
inc
cmpsl
rorb
inc
nop
test
stc
xchg
hlt
xlat
mov
shrb
push
jge
stos
enter
lods
xchg
ret
insl
loopne
out
jg
xchg
test
jns
inc
out
add
jge
sbb
and
and
inc
and
push
cltd
xor
lods
insb
aad
scas
xor
jl
mov
pop
js
sub
cmp
bound
cmpl
lea
sbbb
stos
dec
gs
xchg
ljmp
xchg
jne
movsl
cmp
fldt
subb
inc
les
icebp
outsb
pop
push
les
gs
test
and
lret
and
cmp
or
mov
push
rol
xor
outsl
fwait
mov
pop
pusha
inc
imull
dec
adc
aaa
aad
mov
push
xchg
lahf
sar
divl
cmp
scas
mov
inc
adc
decl
loope
mov
das
negl
add
mov
loop
loopne
sub
add
cs
add
out
ljmp
out
xor
mov
add
lods
sti
mov
pop
lock
xchg
orb
sbb
sub
jge
sub
xlat
cltd
push
repz
jp
aam
sbb
adc
hlt
inc
and
in
xor
dec
cmp
push
jg
push
fwait
pop
add
insb
or
addr16
aaa
and
loope
add
push
mov
fisttpll
fisubl
orl
jnp,pn
pop
xrelease
in
sub
insl
xchg
icebp
and
js,pn
cmc
add
mov
xorb
in
lds
out
mov
jno
clc
lahf
lret
push
sti
rcrb
dec
lahf
outsl
shrl
out
pushf
mov
mov
lods
mov
lea
sub
mov
push
or
pop
pop
sahf
lahf
in
ljmp
mov
cltd
push
fcoms
pop
cmp
mov
rolb
inc
cmp
xor
inc
add
lea
mov
aas
sub
cmp
sti
les
sbb
and
add
mov
in
repnz
or
sbb
or
icebp
out
outsl
loop
cmp
loop
pop
ss
pushf
mov
cmpsl
adc
les
stos
mov
call
xor
sbb
pusha
inc
sahf
in
ret
arpl
jmp
xchg
clc
scas
xor
leave
mov
pop
enter
stos
lods
ja
scas
test
scas
mov
scas
adc
push
sub
gs
lods
test
and
push
fcoml
xorb
jns
out
sub
test
cmpsb
pop
sqrtps
mov
in
in
sbb
je
std
pop
ret
int
addr16
adc
push
out
jne
stos
sub
mov
mov
pop
arpl
pop
ss
int3
sbb
dec
mov
xor
mov
xchg
stos
std
mov
push
mov
pop
lods
xchg
inc
lcall
lods
ja
lahf
jo
jge
add
pop
xlat
and
or
mov
xor
clc
push
notb
leave
ss
movsl
lret
popf
les
add
lcall
outsb
add
sar
mov
stos
int3
inc
dec
and
inc
scas
push
mov
nop
cmpsb
dec
push
stos
int3
add
mov
mov
andb
enter
enter
and
mov
and
xchg
test
jmp
sbbl
xchg
repz
pop
pop
sbb
aam
push
adc
aad
stc
dec
jecxz
sbb
xorps
mov
mov
lcall
mov
sub
push
sahf
ds
cmp
rcrl
out
jno
mov
jbe
xlat
mov
sub
in
outsb
xchg
fidivs
adc
xchg
les
sbb
pop
sbb
in
dec
mov
es
sbb
mov
lods
sbb
sbb
out
lcall
jmp
rorb
sub
push
rcll
mov
xor
jnp
dec
add
fwait
aaa
inc
jmp
inc
les
inc
xor
aam
outsb
pop
insl
jg
and
lcall
es
mov
out
add
shrl
outsl
or
dec
pop
mov
adc
push
adc
dec
jae
dec
insb
jp
out
pushf
jns
pop
prefetchwt1
and
jo
cmpsb
push
bound
jmp
fiadds
loopne
enter
mov
xchg
scas
xor
pop
xchg
out
dec
sbb
mov
sbb
fdivs
pop
inc
lret
lods
push
jo
fs
mov
pop
lea
dec
inc
inc
dec
call
sub
mov
cmp
aam
jbe
imul
push
daa
xchg
cmp
popa
lock
fsubrp
mov
add
xor
xor
hlt
fistps
xorl
sahf
and
inc
mov
inc
in
pop
or
jb
cmc
xchg
je
repnz
adc
stos
lea
int3
push
shll
and
or
xor
mov
ret
sub
jmp
jne
pop
mov
push
call
dec
lods
jae
int
mov
cmpsb
jb
adc
xchg
mov
enter
cwtl
ret
mov
push
rcr
push
mov
push
dec
mov
inc
jb
sub
pop
dec
sbb
lcall
mov
xor
jl
loop,pt
xor
adc
mov
dec
leave
iret
loop
das
mov
jp
push
add
decb
outsl
ljmp
mov
adc
les
pusha
inc
fbld
mov
outsb
pop
or
in
push
test
movsl
dec
sbb
cmp
xor
imul
xchg
into
jne
arpl
outsl
mov
pop
test
push
je
out
mov
or
aad
movzwl
mov
inc
ja
jge
test
rcrl
subl
loopne
jmp
jo
arpl
div
mov
pop
cmpl
leave
mov
push
negb
sub
loop
out
je
pushf
fnstsw
les
or
mov
test
int
jnp
in
mov
lret
es
xlat
jg
jns
inc
test
loop
adc
adc
and
hlt
ss
cmp
in
mov
mov
sbb
outsl
sahf
hlt
xor
into
sbbb
mov
jle
loopne
insl
in
out
insl
xor
movsl
leave
push
call
adc
fdivr
loopne
nop
sahf
dec
stc
mov
dec
mov
push
divl
mov
mov
cmp
pop
fstpt
push
push
pop
lcall
outsl
mov
lahf
inc
cmp
int
sti
pop
dec
roll
cmp
lods
or
or
jecxz
jle
js
mov
ficoms
std
jmp
dec
fadds
lds
xor
dec
inc
push
dec
jbe
sbb
add
dec
popa
xor
mov
out
mov
loopne
cmp
pop
iret
aad
sahf
push
sbb
das
or
stc
sub
mov
bound
mov
in
movsl
imul
sub
pop
inc
loopne
scas
js
dec
aaa
jmp
fistpl
outsb
add
loopne
pop
lret
loopne
dec
ret
aad
das
pop
push
and
mov
cs
adc
sbb
loop
rorb
call
popa
dec
rol
test
out
into
in
inc
pushf
or
das
add
nop
sbb
arpl
pop
mov
jl
lahf
in
and
mov
cld
push
jl
jb
andl
pop
mov
fidivrs
xchg
jno
mov
cmc
inc
lahf
cmp
inc
test
inc
jp
loopne
daa
pusha
imul
loopne
dec
cs
add
sub
aad
inc
sarl
mov
pop
bound
enter
adc
cld
cmp
in
and
cmp
cld
pushf
roll
push
mov
xor
mov
mov
mov
in
or
std
xchg
in
aaa
sbb
out
lret
push
andl
xchg
cmp
inc
and
cmp
fdivr
jae
call
data16
jns
add
jmp
lcall
fildl
mov
push
inc
push
icebp
lock
imull
dec
out
aam
jl
cwtl
mov
fmull
into
adc
pop
jmp
cmp
iret
andl
add
sahf
xchg
fstl
sub
shlb
out
fdivrp
test
cltd
jno
push
inc
cmpsl
sbb
icebp
push
xchg
adc
cmp
fimuls
rcrb
bound
rorl
stos
xchg
outsb
lods
lea
jne
popa
mov
loop
daa
sbb
int3
mov
mov
push
clc
push
das
aaa
xchg
sbb
mov
jbe
jp
test
xor
js
mov
andl
cltd
sbb
aaa
mov
lcall
cli
xchg
arpl
cmp
inc
adc
ss
mov
fdivs
and
popa
in
and
fs
cmp
dec
cmpsb
jne
inc
std
mov
scas
sbb
and
sub
lcall
loope
jg
iret
inc
inc
inc
dec
sub
mov
test
lret
jmp
frstor
jecxz
ret
inc
jnp
push
inc
or
pushf
dec
xchg
xlat
push
or
jle
inc
mov
dec
adc
jb
jo
cli
loopne
addr16
adc
mov
pop
fisubrl
pushf
or
sub
loop
outsb
leave
dec
cwtl
sahf
adc
mov
cmp
gs
loopne
ja
subb
sub
cmpsb
pop
xlat
fs
test
testb
dec
add
jo
inc
push
push
test
adc
and
jecxz
stos
push
jp
sbb
stos
xor
mov
mov
fwait
shr
scas
shl
rolb
xor
inc
add
adc
sub
or
fs
enter
scas
push
and
rcrl
repz
aam
les
sub
gs
xor
and
test
jnp
pop
pop
imul
shll
int
mov
sahf
mov
iret
sbb
push
aam
out
jp
sar
int3
in
push
nop
mov
and
lahf
inc
test
jg
inc
mov
fcomip
stc
add
ret
stc
jne
mull
test
dec
decb
xor
sub
jnp
and
push
shr
pop
push
sub
js
mov
notl
sbb
loopne
js
mov
int
scas
scas
pop
add
push
push
cmp
inc
and
repz
adc
sti
adc
mov
pop
or
aad
jo
cmp
das
pop
iret
mov
jl
and
movsl
cmp
xor
fsub
pop
call
sahf
gs
push
orb
sbb
mov
call
std
cmpsl
add
pop
xlat
mov
add
or
pop
adc
mov
outsb
dec
mov
daa
adc
cmp
ljmp
jmp
mov
push
inc
repnz
jmp
jbe
and
sub
mov
cmpsl
out
call
lods
scas
jl
adc
dec
inc
xchg
idivb
push
xchg
mov
lahf
mov
enter
jl
jmp
dec
sub
lods
lcall
mov
std
jb
inc
int3
call
std
sahf
mov
mov
in
sbb
mov
mov
dec
cmc
and
mov
in
lock
dec
pop
loop
int3
fmul
sahf
divb
sub
lea
scas
cmp
inc
push
popa
sub
xchg
ljmp
orb
cmc
ja
aas
mov
mov
out
jns
in
int3
getsec
mov
in
imul
mov
inc
push
push
dec
inc
in
push
xchg
mov
lcall
sub
inc
stos
sub
int
mov
imul
cmp
repz
pusha
dec
adc
insl
clc
lods
lahf
out
pop
popa
lea
in
xchg
mov
inc
pop
inc
inc
daa
outsl
mov
test
dec
bound
hlt
and
add
add
cmp
inc
or
push
push
pop
xlat
int
mov
jns
mulb
test
xchg
mov
pop
idivl
jae
addl
cld
sbb
in
lock
mov
mov
pop
cld
insb
pop
adc
cltd
jae
lret
xor
sbb
dec
adc
xor
push
push
out
push
fs
sti
xor
mov
cmp
imul
pop
xorb
add
stc
vmovddup
sub
flds
mov
mov
jmp
ret
jne
xchg
push
fmuls
push
jb
pop
and
jae
inc
jle
ja
stos
fimuls
jecxz
mov
mov
es
movsl
mov
std
int
pop
cmp
pushf
stos
popl
das
push
pop
cmc
and
rolb
ret
das
dec
imul
cwtl
sahf
mov
jg
in
bnd
cmp
inc
shll
data16
lret
jecxz
sub
testb
sub
push
push
fnstsw
ret
insl
shr
ljmp
enter
mov
shl
mov
es
lahf
dec
xor
ret
and
mov
imul
sub
push
roll
mov
pop
clc
xchg
into
jecxz
cmp
xor
jne
dec
mov
cwtl
push
or
dec
mov
and
mov
out
adc
xchg
ss
pop
aas
xor
iret
fwait
add
push
dec
dec
ljmp
xchg
fistpl
mov
rcrl
dec
push
adc
push
inc
jge
stos
daa
dec
loope
stos
ss
imul
cmc
call
pop
push
sbb
aaa
xchg
mov
aam
push
mov
lret
mov
out
gs
pop
sbb
push
ds
or
jbe
lret
pop
fdivp
pop
mov
insl
aas
movsb
aas
pop
xlat
mov
in
sbb
fisubs
xchg
xchg
pushf
bound
fdivl
mov
in
ret
mov
jecxz
leave
sbb
and
mov
ja
lock
or
mulb
xchg
add
dec
mov
sbb
xchg
int3
enter
stos
roll
pop
fsubl
dec
sbb
jmp
mov
shrl
das
fdiv
movl
push
clc
dec
cwtl
pop
daa
bound
xlat
or
arpl
pop
sar
inc
push
or
in
mov
divl
push
rcll
xchg
push
lea
test
pop
jmp
int
adc
sub
mov
xchg
xchg
xor
aaa
pop
pop
sbb
cmp
fistpl
xchg
jle
dec
add
add
pop
repnz
testl
push
inc
xchg
or
iret
cs
mov
cltd
adc
or
enter
scas
out
daa
and
sub
ja
sub
outsl
jne
nop
cmpsb
arpl
repz
outsb
inc
xor
xchg
sti
test
xchg
scas
sub
push
xor
aas
and
push
xchg
xchg
inc
push
pushf
and
fs
ja
and
mov
addl
sbb
mov
sbb
and
push
cli
shrb
mov
push
sbbb
insl
xchg
mov
mov
jle
lea
nopl
lods
jge
lret
dec
mov
xor
push
int
push
cmp
adc
fcomps
sub
fwait
xchg
sbb
inc
inc
cltd
push
arpl
mov
push
int3
ficompl
xchg
fwait
inc
xlat
lret
dec
sub
mov
mov
xchg
xchg
sbb
mov
in
push
stos
aam
jne
nop
add
cmpsb
pushl
add
outsl
and
dec
xchg
add
push
shll
adc
jl
imul
into
cltd
out
cmpsb
jmp
call
and
std
repz
push
enter
pusha
out
sub
cmp
nop
push
pop
insb
jmp
js
je
idiv
mov
jle
in
aad
or
mov
mov
icebp
imul
cmpsb
cmpsl
insl
movsb
insl
sub
push
mov
out
sbb
xor
pop
adc
pop
mov
push
adc
outsl
and
popa
mov
or
push
pop
xchg
stc
mov
popa
jae
cmpsb
xor
xchg
adc
fs
mov
mov
cltd
lret
lock
sbb
or
jmp
jge
mov
lds
adc
cmp
sub
stos
jmp
inc
movsl
call
loopne
punpcklwd
xchg
cmp
push
cmp
gs
and
push
ljmp
xor
push
mov
lods
mov
mov
outsb
stc
sub
adc
xchg
cmpsl
enter
in
add
jl
push
repnz
push
das
xor
cmp
iret
and
ror
adc
loope
mov
xchg
popa
mov
dec
stc
fs
dec
mov
fs
inc
sub
sub
and
xchg
cmpl
mov
and
das
and
pop
stc
pop
fs
div
jns
scas
adc
xor
fs
mov
mov
popf
pop
sub
push
ja
sahf
and
xchg
adc
ds
adc
xlat
daa
jg
adc
rcll
sbb
add
push
mov
xor
fwait
loop
in
xor
shll
or
nop
push
fwait
jl
xor
xor
sub
rorb
pushf
inc
cld
aaa
inc
and
addr16
hlt
add
pop
adc
inc
out
rcl
dec
mov
ret
in
jmp
movsb
and
mov
cmp
lret
mov
xor
or
lods
cld
leave
cld
stos
or
dec
add
icebp
loop
decb
arpl
ret
fmul
push
sub
addr16
cltd
negl
cwtl
xchg
xchg
fldl
push
cmc
adc
fidivrs
cli
mov
jg
inc
fcmovnbe
scas
push
mov
stos
jbe
cmp
scas
pop
dec
adc
xchg
adc
sarb
rorb
popf
xor
out
sub
jmp
jmp
movsb
jae
pop
loop
enter
int3
pop
xchg
mov
in
inc
ss
mov
jbe
mov
fidivrl
movsl
sbb
push
jb
push
sub
add
add
pop
push
pop
shll
mov
pop
and
test
in
adc
data16
pop
popf
and
mov
sbb
scas
push
jmp
cmp
sub
fstpt
dec
push
cmp
cld
sub
lret
sarb
call
mov
jnp
xor
sbb
mov
stos
ret
test
pushf
cmp
flds
mov
add
push
push
shrl
mov
icebp
mov
or
jmp
cmp
add
xchg
bsf
scas
ds
jle
push
rolb
repz
lods
mov
sahf
scas
out
push
scas
lods
loope
or
mov
cs
int
addr16
dec
cmp
into
pushf
xchg
cli
leave
xchg
sub
mov
or
insl
imul
lahf
shll
mov
mov
or
jl
insb
lret
inc
ret
je
mov
and
sbb
outsb
lcall
mov
dec
aas
push
cmp
sub
mov
and
add
test
shlb
xor
mov
hlt
ljmp
jp
das
les
sbb
rolb
mov
lds
xchg
stc
adc
outsl
pop
dec
mov
call
mov
fidivs
ficoml
sub
ljmp
cld
in
aaa
mov
lods
aaa
dec
add
fcompl
cmp
cwtl
push
fcmovnb
fwait
in
mov
mov
jo
lods
ds
repnz
popf
inc
lds
movsb
and
sahf
addb
push
shlb
ret
inc
dec
pop
lret
lret
push
push
mov
test
dec
fmul
mov
aam
nop
jle
or
dec
cs
daa
or
daa
mov
adcl
fs
sub
shrl
jle
or
add
ljmp
ret
lret
adc
adc
jecxz
or
mov
push
xchg
inc
stos
jbe
mov
pop
pop
lock
mov
lahf
icebp
xor
or
pop
shll
jle
dec
cli
testb
or
jmp
lea
test
roll
adc
scas
cmpsl
cmp
sbb
fnstenv
mov
call
aaa
into
pop
cwtl
data16
cmp
mov
jle
cmp
mov
cmp
ret
inc
pop
xchg
xor
cmp
movsl
xchg
jns
jbe
inc
scas
push
dec
cmp
dec
add
or
jle
in
lods
pop
mov
js
mov
inc
or
xor
dec
shlb
xchg
outsb
or
jg
inc
call
push
xor
and
imul
dec
or
popa
mov
cmp
add
lcall
js
loope
jle
xor
adc
xor
xchg
xchg
jl
fistpll
shll
jl
shlb
fstpt
xchg
xchg
mov
daa
shll
cmpsb
lcall
dec
ljmp
and
cmp
sbb
cwtl
mov
sbb
punpckhdq
cwtl
adc
adc
pop
mov
stc
addb
in
and
ss
movsb
xchg
jmp
outsl
lret
push
inc
fnop
aas
add
mov
and
enter
sbb
mov
arpl
fildll
add
xchg
jge
pop
mov
pusha
pop
cmp
rorb
xlat
inc
mov
dec
or
push
loope
mov
sub
dec
xchg
dec
inc
cs
xlat
xchg
sub
lock
jno
add
lods
dec
adc
jno
test
mov
inc
push
xor
push
movsb
dec
imul
mov
cmc
inc
lea
xchg
repnz
mov
add
aas
test
jmp
add
lods
jae
nop
bound
mov
ljmp
push
lods
add
int3
daa
and
das
push
or
cmpsl
adc
pop
leave
inc
push
sub
pop
add
lds
aas
ret
sbbl
mov
stos
daa
or
lea
mov
aam
lds
ret
mov
sbb
sahf
fildl
pop
mov
xchg
enter
fs
xor
add
push
sub
and
fstl
in
mov
jmp
mov
jle
icebp
out
dec
das
sti
int
and
inc
inc
push
or
dec
or
or
int
mov
inc
add
jecxz
adc
jns
shll
lcall
jmp
inc
cmp
pop
outsl
dec
ljmp
mov
or
pop
mov
je
lcall
adc
pcmpgtb
pusha
push
ds
push
cltd
std
mov
mov
add
cmpsb
int3
jg
sbb
mov
clc
mov
pop
jle
add
shlb
jg
adc
mov
add
and
jg
inc
adc
pusha
fs
iret
adc
movups
inc
fmull
add
sahf
dec
xor
jbe
jb
insb
add
mov
cld
inc
mov
aam
pop
test
mov
pusha
mov
les
in
push
mov
add
aam
pop
cmp
fistpll
dec
add
rcrb
push
insl
push
je
rorl
or
rcrb
xchg
mov
fs
sub
aad
adc
lds
sub
pop
or
xchg
in
ss
loopne
pop
add
sahf
add
xor
jns
leave
aas
push
lds
in
cmp
jl
xchg
cmp
push
sbb
jae
mov
pop
sarl
hlt
fldcw
adc
push
ss
jo
cltd
jmp
test
in
shlb
cwtl
ss
dec
outsl
ffreep
or
dec
stos
sbb
mov
cmp
xor
push
inc
jg
jecxz
filds
outsb
mov
mov
ret
jne
add
mov
sub
repnz
ret
or
movsl
cmp
pop
loope
xchg
jmp
jb
pop
cmpl
push
mov
xor
popf
mov
adc
push
mov
out
or
rcll
push
scas
std
daa
shlb
in
or
pop
push
push
sahf
mov
insb
lods
inc
mov
mov
mov
fcompp
clc
jp
test
mov
roll
or
xor
dec
xchg
xchg
insb
rol
stos
aaa
push
xor
aad
sbb
sbb
pop
push
jo
call
test
std
or
faddl
ja
push
jl
fnstcw
clc
mov
add
lret
aas
ficomps
or
popf
push
mov
in
fwait
push
cmp
daa
jae
mov
dec
add
sti
or
mov
pushf
inc
enter
out
cmc
in
out
pop
imul
ret
mov
jno
je
sbb
fucom
or
repnz
aad
cmp
adc
shr
insl
push
inc
mov
mov
xchg
cmp
cmc
xor
jne
push
repnz
xlat
insl
xor
fisttpl
adc
mov
fsubl
lcall
fs
adc
xchg
test
int
sub
scas
std
mov
in
sbbl
xor
jg
mov
jp
xchg
andl
out
inc
int3
push
aas
ss
dec
jle
push
sub
dec
mov
jge
jge
mov
hlt
popa
sbb
sbb
rcll
stc
xchg
insl
cld
das
pop
push
arpl
lret
fmulp
jae
xchg
dec
jp
jp
or
mov
mov
cmc
jo
scas
insb
xchg
insl
js
orb
or
lcall
test
adcb
add
pop
rcrb
bound
xchg
xlat
inc
fidivl
inc
pop
lea
aaa
cmp
and
push
fcoms
mov
dec
out
int3
lock
leave
and
shll
ds
test
test
cmp
jg
dec
xchg
rcrl
ss
add
nop
cwtl
jmp
xchg
daa
push
loope
ret
mov
xor
add
popf
or
loop
jecxz
fdiv
nop
xchg
sbb
aas
mov
imul
xor
or
movsl
arpl
adc
or
push
inc
loopne
jp
out
sbb
fcoml
hlt
push
pop
jle
shrl
sub
das
mov
add
inc
xor
or
jae
jno
sbb
xchg
xchg
rorb
negb
push
push
or
out
jne
jl
adc
pop
arpl
mov
mov
pop
daa
cltd
fsubrl
sub
enter
cmp
cltd
inc
inc
dec
push
cmp
aad
out
mov
int
xchg
rcll
sub
stos
or
in
xor
loop
add
jbe
adc
sub
or
leave
ret
mov
or
xor
push
cs
mov
insl
mov
out
loopne
adc
jge
sbb
imull
mov
mov
push
pop
sbbb
into
sbb
inc
adc
add
popa
xor
mov
lret
pop
movsl
mov
cmpsb
mov
out
popl
test
shrl
fistl
sub
dec
mov
loope
mov
out
nop
xchg
xchg
subl
or
mov
pop
out
xchg
adc
orl
rclb
call
out
jl
jp
jno
outsb
and
push
mov
repnz
test
nop
cltd
or
add
cmpsb
dec
movsb
cmpsb
dec
jg
std
test
pop
mov
insl
js
sbb
insl
pop
push
adc
out
pusha
push
dec
xchg
mov
mov
mov
daa
out
push
es
inc
in
jb
or
add
push
or
push
mov
push
ficompl
mov
push
faddp
out
xchg
sbb
sbb
ret
aad
mov
pop
fldenv
icebp
mov
jle
insl
sbbl
outsl
push
lods
cwtl
lods
fisubl
ljmp
sbb
pusha
jbe
mov
insl
dec
ljmp
dec
icebp
xchg
jmp
cltd
test
jo
hlt
imul
das
mov
mov
xor
cmp
pop
rclb
xor
adc
xchg
call
cmp
sub
mov
push
in
jnp
incb
and
out
ljmp
pop
xor
or
pop
dec
and
push
dec
dec
inc
iret
or
cmpb
mov
sub
or
push
mov
in
fwait
out
out
stos
imul
movsb
lods
fmul
mov
xor
mov
orb
sahf
lea
jp
fucom
jecxz
inc
mov
int3
inc
pop
adc
jnp
lret
sub
test
cmpsl
out
mov
rclb
notl
mov
mov
mov
cli
stos
mov
and
clc
push
jp
stos
and
lcall
cmp
js
into
outsb
jb
in
xchg
adc
pusha
subl
movsb
out
jae
xchg
adc
movsb
mov
push
pop
call
mov
push
xor
push
xchg
xlat
add
lret
jle
xor
or
loop
pop
out
xchg
xchg
outsl
dec
mov
add
or
inc
outsl
inc
jno
not
xchg
mov
test
lcall
scas
jecxz
mov
out
mov
clc
icebp
push
mov
dec
xchg
inc
scas
das
lret
leave
gs
inc
sahf
lret
xor
popf
sub
mov
fwait
loope
lret
adc
mov
inc
movsb
inc
inc
movsl
jecxz
jmp
xlat
insb
cmp
js
add
dec
add
sub
jge
xchg
xor
adc
sbb
test
sbb
test
les
inc
mov
idiv
adc
repnz
xchg
popa
push
ljmp
fcoms
cmpsb
push
lock
test
dec
cmp
xchg
adc
imul
mov
jno
call
push
inc
shl
in
mul
inc
mov
push
push
mov
int
subl
pop
filds
push
cmp
xor
popa
sub
pop
lods
test
sbb
call
or
mov
fs
stos
push
push
les
gs
mov
inc
loopne
sti
jp
pushf
and
insb
mov
shl
jmp
mov
sub
std
mov
sahf
adc
sbb
lea
mov
inc
pop
stos
scas
xor
cmp
pop
shll
push
sahf
or
lods
clc
shlb
testb
add
push
mov
xchg
mov
ret
imul
aaa
or
sbb
xchg
fmull
aam
fisttps
add
aaa
or
sub
arpl
push
dec
into
lds
sbb
jle
inc
mov
adc
and
or
inc
and
out
ljmp
xor
cmpsb
loope
int3
fbstp
jle
mov
mov
orl
outsb
sub
mov
adc
and
stos
dec
mov
imull
xor
jae
and
les
sti
push
enter
pop
mov
lea
pusha
repnz
lret
cmc
das
imul
inc
and
cmp
les
pop
pop
pusha
std
repz
adc
push
add
mov
rcll
repz
cli
dec
cmp
xchg
incb
fists
addps
mov
jl
daa
cld
pop
mov
movsb
and
fnstsw
dec
sarl
sub
push
insl
mov
dec
fstp
xchg
mov
loop
xchg
popf
mov
fwait
repz
xor
cmp
mov
inc
mov
pop
add
fdivs
scas
push
test
out
pop
enter
push
int3
and
dec
incl
adc
xchg
out
int
outsl
pushl
sbb
dec
fs
loope
in
dec
mov
adc
cmpsl
icebp
cltd
pop
xchg
or
popf
xchg
sub
aad
sub
add
aaa
mul
dec
cs
movsb
xchg
ja
pop
pop
lret
aam
jo
xor
je
mov
subb
pop
push
xchg
mov
fucom
xchg
cmpsb
sbbl
shlb
push
dec
stos
fmulp
ljmp
sub
xchg
pop
pop
xchg
movsb
mov
inc
imul
cmp
inc
fwait
mov
clc
jg
xchg
into
inc
pop
outsl
mov
adc
push
lods
xor
or
ss
popa
ficomps
xchg
lret
adc
stos
in
popf
mov
cmc
and
fadd
push
cmp
jo
adc
loop
rcrb
aam
jno
pop
cmpsb
stc
gs
sub
adc
orb
ret
push
xor
inc
adc
add
int3
mov
add
jge
sbb
push
popa
cmp
in
jbe
out
shlb
aam
inc
xchg
add
jmp
cmp
mov
pop
int3
mov
lea
fimull
and
add
or
mov
jp
mov
int3
cwtl
add
and
xchg
adc
xor
cmp
jno
push
adc
insb
fistpl
adc
in
test
cmp
and
loope
lock
test
dec
push
cmpsb
cmpsl
imul
and
pop
sarl
xchg
cmp
out
rcrb
add
call
adcl
cmp
jb
imul
stos
cwtl
pop
push
aas
dec
movsb
xor
inc
cmp
in
lret
adc
int3
sbb
add
xorb
fcoml
int3
fbld
dec
ds
push
jb
jmp
dec
lcall
stos
cmc
fxch
dec
mov
imul
xor
sbb
xchg
outsb
pop
push
cmp
addr16
sub
aam
push
sbb
pop
inc
nop
cs
and
mov
sub
sbb
xchg
add
mov
out
jb
cmc
mov
loope
addr16
pop
jecxz
mov
vmread
adc
je
jmp
pushf
rorl
add
clc
jne
pop
in
cmp
xchg
arpl
adc
xor
les
fidivrs
dec
mov
jl
test
pop
mov
sbb
pop
or
cmp
std
jns,pt
cmp
scas
dec
inc
imul
aam
jbe
loopne
xor
andl
dec
pop
mov
dec
daa
out
cli
dec
inc
jmp
adc
sbb
fisubs
push
and
xchg
add
push
sub
and
adc
xchg
sarb
sub
das
das
inc
sub
pop
add
lock
movl
jmp
jne
fst
mov
icebp
je
lds
cmc
push
dec
pop
mov
std
lock
out
out
mov
loop
mov
xor
adc
frstor
test
or
fisubrs
sbb
lds
mov
push
cmpsb
mov
mov
loop
adc
icebp
or
pop
out
ret
sub
mov
cmp
dec
outsb
dec
add
test
sbb
sbb
add
jmp
iret
xor
ljmp
inc
sub
das
pop
mov
pop
lahf
lods
xor
mov
cwtl
dec
sti
stos
inc
jecxz
outsb
jecxz
adc
mov
jp
adc
or
popa
pop
idivb
lock
sbb
pusha
loope
jecxz
fcom
pop
xor
sti
clc
push
dec
mov
dec
movsl
xchg
inc
push
pop
mov
sbb
jge
fwait
push
stc
cld
lret
and
push
cld
out
cltd
pushf
fs
mov
jae
in
and
inc
shl
lcall
mov
push
xchg
push
dec
mov
push
adc
mov
test
leave
mov
sar
pop
pop
iret
and
repnz
mov
adc
mov
adc
lds
pop
pop
mov
aaa
shlb
dec
mov
pop
stos
out
inc
mov
and
ret
add
mov
insb
dec
call
mov
into
insb
and
les
or
sub
out
popa
mov
cwtl
mov
mov
fwait
push
ss
jb
cmp
and
movsl
push
insl
or
test
or
push
or
nop
xchg
flds
and
adc
mov
push
in
and
xchg
aad
imul
pop
cltd
cmp
inc
into
sub
push
imul
pop
jo
adc
mov
xorl
xchg
cltd
out
mul
xchg
sub
and
mov
pop
xchg
cmp
pop
mov
test
aam
jo
push
mov
adc
or
add
jnp
jle
jge
cmp
dec
aas
dec
cmp
aas
or
xor
mov
adc
in
jmp
flds
pop
arpl
mov
out
test
add
sub
call
enter
outsl
addb
in
dec
adc
jecxz
mov
xor
je
pushf
add
movb
mov
push
je
push
in
clc
scas
in
push
inc
sbb
lcall
mov
fstps
fwait
add
movsl
aad
addps
xor
sub
xchg
cltd
xchg
mov
mov
test
dec
call
call
fidivrl
dec
push
stos
scas
dec
lods
push
add
movsl
xor
out
pop
mov
mov
inc
test
outsb
mov
mov
and
cmp
dec
cmpsl
xchg
imul
sub
jle
xor
jo
inc
jmp
mov
stos
xchg
sbbl
cmp
and
sub
and
adc
sar
push
mov
cmc
imul
or
or
jmp
in
adc
aad
push
dec
sub
mov
xor
xchg
push
or
repnz
shll
outsb
fsub
popl
push
js
lret
inc
rcll
test
in
mov
int3
sub
aaa
loope
pusha
xchg
jmp
out
adc
mov
xchg
cmp
and
mov
fmull
xchg
and
sbb
push
and
and
adc
lds
mov
data16
lea
mov
bound
cmp
popa
mov
push
and
xlat
imul
cmp
cwtl
mov
fcoml
pop
mov
pop
jp
sbb
mov
dec
subl
cmp
clc
nop
xchg
adc
and
nopl
jo
add
sub
push
add
xchg
mov
mov
out
mov
xor
mov
adc
jnp
jg
stc
or
loope
int3
cmpsl
ja
ds
fwait
jo
push
jg
or
mov
pusha
and
push
icebp
fdivs
cmp
cmp
pop
insl
cmp
cmpsl
inc
insb
subl
cmpsl
dec
jae
in
xchg
mov
xor
mov
mov
ss
aas
jle
dec
call
stc
jl
mov
and
std
lret
lret
lret
dec
dec
test
jae
xchg
add
and
loope
dec
push
mov
and
xchg
cltd
xlat
xchg
loopne
cmp
jb
xor
mov
lret
scas
rdmsr
push
jmp
and
leave
popl
push
push
dec
cltd
xchg
mov
out
adc
cmp
sub
xchg
ficomps
mov
adc
int3
dec
mov
ret
fs
bound
enter
aam
pop
pushf
xchg
out
and
adc
jl
mov
fsubrs
mov
gs
mov
xchg
jnp
test
inc
xacquire
or
cwtl
mov
cmp
pop
sbb
mov
outsb
scas
jb
negb
leave
rcrb
mov
loopne
arpl
arpl
xchg
dec
push
pushf
jb
xchg
ds
shrl
ret
ret
pop
mov
fimull
cmp
mov
fildl
stos
cli
dec
repnz
cmpb
adc
hlt
push
pop
outsb
icebp
in
insb
jno
std
lods
xchg
xchg
pop
adc
iret
xchg
push
mov
cmovbe
mov
imul
lods
imul
xor
nop
fwait
mov
sbb
jbe
in
sti
push
cmp
scas
loop
fdivrs
cmpsl
sub
lcall
es
inc
or
xchg
loop
mov
lds
and
cltd
dec
sub
insb
rcr
ret
insb
out
sbb
repnz
jmp
cmp
rorb
mov
pop
inc
add
adc
iret
mov
outsb
lcall
stc
dec
pop
fadds
rolb
movsl
mov
and
xlat
jbe
sbb
faddl
mov
fmuls
stos
out
dec
or
mov
mov
xorb
into
inc
sbb
xadd
fcoms
ret
outsb
sbb
add
sarb
cmp
icebp
mov
mov
pop
inc
or
cltd
fstps
lcall
mov
pop
jo
mov
faddl
js
mov
cmpsb
movzwl
pop
push
sbb
pusha
jns
pop
inc
ror
movsb
inc
xchg
adc
push
mov
mov
jge
mov
ret
loope
stc
cmp
insl
or
fdivrl
sub
pop
sbb
jb
sbb
sub
and
loop
sti
xchg
in
repnz
dec
xor
jecxz
dec
xchg
xchg
scas
pop
bound
or
and
adc
cwtl
mov
mov
lret
push
add
xchg
fbld
push
cld
sbb
movsb
xor
jecxz
mov
mov
sub
popf
mov
movsl
movsb
or
add
out
aad
pop
rcrl
dec
sbb
sbbb
xchg
fsubl
xor
clc
test
mov
sbb
aas
lcall
lods
cltd
xor
cmp
xchg
cli
cvtdq2ps
inc
dec
test
sbb
test
pop
adc
dec
sbb
mov
call
mov
scas
adc
adcb
mov
pop
lahf
xchg
insl
mov
insw
adc
and
mov
dec
add
pop
mov
xor
inc
push
subb
mov
jg
fnstcw
mov
dec
mov
pop
fiadds
leave
xchg
push
in
push
adc
sarb
push
ja
mov
add
sub
sub
int3
inc
pusha
and
ja
mov
frstor
out
ffree
int
sub
in
dec
rclb
daa
sub
inc
jp,pn
aaa
mov
aas
inc
insl
fcmovnbe
mov
aaa
rorl
aas
jmp
adc
test
psrad
mov
and
out
pop
xor
and
pop
pop
pushf
push
mull
pop
pusha
fldt
or
and
out
adc
push
in
ret
shrl
mov
rorb
pop
xorl
sub
push
jle
mov
or
ja
push
pop
and
jmp
xchg
xor
inc
insb
xor
xchg
ficoms
sbb
push
pop
push
sbb
pop
std
cmp
mov
insl
imul
pop
sahf
mov
lcall
in
mov
push
and
out
ficoms
add
mov
fs
test
sbb
jle
dec
pop
jp
ret
xlat
dec
sbb
sub
adc
test
mov
mov
xor
les
inc
sbb
cmp
scas
xchg
mov
mov
pop
dec
adc
hlt
inc
mov
aas
outsl
pop
fnsave
repnz
xlat
sbb
loopne
jl
jae
pusha
sti
test
imul
popa
das
push
fldcw
jmp
mov
sub
xor
dec
ret
adcl
add
lea
shll
jae
aam
mov
pushf
ljmp
std
mov
push
and
xchg
xlat
fucomi
pushf
adc
test
xchg
addr16
ret
add
mov
into
push
pop
xor
mov
shrb
mov
ret
mov
jnp
ss
sbb
cmpb
push
imul
cmpl
out
mov
es
loop
pushl
mov
lds
stos
mov
lcall
xor
fldl
test
int
push
ljmp
mov
pop
xlat
or
into
xor
jg
rorl
in
out
push
and
das
mov
add
cmp
pop
lahf
fnstenv
sub
push
decl
ljmp
bound
xacquire
sbb
imul
lcall
es
sbb
mov
mov
inc
sbb
and
mov
mov
push
stos
popa
and
cmp
pusha
repnz
filds
adc
push
xor
add
pminsw
jbe
jae
cli
mov
bound
sub
iret
mov
popa
mov
pop
andl
dec
ss
clc
xor
push
adc
jge
and
mov
mov
fnstenv
movsb
mov
add
sub
xchg
push
rcrl
icebp
sbb
push
enter
ja
xor
gs
test
cmp
adc
loope
xor
cwtl
mov
mov
pusha
shll
add
xor
mov
push
xchg
pushf
cld
decb
lret
rcr
mov
push
cmp
stos
add
mov
xlat
sti
popf
add
xchg
jnp
jbe
mov
jmp
aam
mov
lret
adc
sahf
out
ret
cld
div
ror
xchg
in
push
or
mov
cmp
sbb
stos
xor
enter
xor
out
ds
adc
int
xor
xor
lret
pop
push
mov
inc
mov
aas
out
scas
insb
aad
faddp
iret
enter
mov
jmp
mov
loopne
mov
xchg
loope
lods
or
ret
add
sub
subb
inc
add
popf
mov
mov
flds
in
pop
loop
hlt
aad
mov
mov
sub
daa
and
xchg
cwtl
jno
fsubl
mov
inc
scas
ret
fwait
xchg
or
shll
mov
mov
cmp
aad
mull
stos
adc
loopne
lds
icebp
fnstsw
mov
pop
lahf
sbb
adc
flds
push
mov
push
mov
fistpl
and
sbbl
mov
or
jbe
xor
push
dec
pop
sub
sub
jmp
fs
xor
movsb
subb
movl
xchg
jl
push
dec
inc
pop
push
fildll
inc
insl
stos
icebp
push
push
add
add
loope
aam
es
sub
in
mov
or
test
popf
lahf
sbb
aam
sub
lds
pop
imul
xorl
mov
lcall
mov
data16
ret
xchg
cltd
push
fstl
xchg
add
je
mov
fmuls
inc
shrl
mov
cmp
test
sbb
jmp
xchg
adc
push
jmp
jmp
repnz
add
xor
rclb
cmpsb
add
or
mov
jp
and
or
or
xor
mov
adc
push
outsl
jp
out
adc
pop
test
stos
mov
subl
inc
push
dec
xor
mov
aad
and
mov
in
or
rol
add
insl
push
dec
test
or
and
test
stc
or
mov
popa
jmp
rcpps
daa
lods
gs
adc
test
cmp
mov
mov
mov
inc
cs
pop
inc
jp
mov
inc
xchg
les
jmp
data16
push
hlt
or
cmp
sbb
aas
or
sub
ja
out
adc
lea
jge,pn
mov
xor
fisttps
pushl
or
in
call
mov
xor
mov
daa
test
dec
jmp
dec
mov
dec
lds
mov
inc
sub
cmp
rcr
in
mov
cmp
outsl
sbb
aam
paddb
jno
das
inc
mov
inc
sar
xchg
jecxz
push
pop
cmp
js
cmpsl
jge
mov
jo
push
pop
cmp
fsubrs
dec
mov
ret
mov
pop
push
jnp
push
jge
sbb
mov
test
cmp
loope
mov
in
xchg
fcomip
dec
push
xchg
repz
mov
jmp
les
pop
fisubs
inc
pop
push
js
lds
js
and
aas
pop
add
pop
mov
enter
dec
fidivs
jecxz
cmp
in
sysret
fstps
mov
ja
mov
lcall
stos
push
test
cmc
int
inc
or
jae
jmp
into
inc
js
jge
cli
adc
push
inc
negl
xor
fnstenv
imull
or
mov
lret
jp
loop
in
stos
das
sub
scas
into
jp
or
push
inc
popa
sub
xchg
lods
jbe
cmp
jecxz
mov
in
insl
pusha
popf
cmp
shlb
scas
pop
add
daa
mov
mov
mov
pop
mov
icebp
jecxz
mov
loopne
call
jbe
shlb
and
imul
sub
and
fld
xchg
inc
bound
sub
pusha
imul
jne
sarb
mov
in
stos
xchg
dec
in
xchg
lret
sbb
call
clc
arpl
jecxz
pusha
lods
sub
pop
xlat
shll
in
pop
insb
or
mov
pop
in
add
sbb
dec
fistl
outsb
push
cmc
in
dec
gs
jne
inc
mov
addr16
adc
jnp
dec
pop
das
or
push
idivl
mov
ja
jmp
in
divl
adc
dec
aam
clc
hlt
inc
pusha
mov
addr16
xchg
test
push
in
dec
aam
mov
jmp
outsb
mov
sbb
ficoml
out
xor
and
notl
lahf
adc
push
popa
lock
orl
nop
jno
mov
sahf
aam
add
adc
inc
mov
dec
loope
push
cmpsl
adcb
jg
mov
xchg
and
fs
jbe
jae
xchg
mov
mov
rorl
cmc
cmp
xor
mov
mov
into
xchg
fisttpll
in
dec
iret
jne
jbe
sbb
rorl
xor
fdivl
cld
sti
inc
xor
iret
mov
xchg
cmpsb
mov
or
iret
cmp
push
sub
ret
inc
and
push
adc
jecxz
repz
xor
cwtl
mov
adc
ret
pop
cmc
popl
popf
int
dec
bound
jl
iret
dec
xor
in
test
mov
mov
and
mov
das
call
inc
pusha
and
jg
rolb
push
popa
test
stos
std
or
sub
fnstenv
cwtl
inc
dec
xchg
jb
adc
mov
push
mov
das
dec
hlt
mov
mov
jns
popa
push
orb
mov
repnz
das
loope
or
shll
hlt
jo
cmp
dec
aaa
repnz
insb
cmpsb
mov
aas
cmp
aaa
insb
xchg
xor
and
inc
push
inc
jmp
jo
push
aam
xor
jae
ret
sbb
xchg
test
cmp
push
cli
dec
jp
mov
stos
xchg
pop
or
fcompl
xor
fisubl
inc
pop
imul
sbb
negl
and
cmp
mov
ss
ret
sbb
in
push
dec
popa
mov
lods
test
mov
add
int3
xor
into
call
cmpl
sub
fmulp
xor
adc
xchg
mov
push
xchg
fisubs
sbb
dec
add
mov
jge
mov
insl
xchg
sbb
sub
and
sub
xchg
inc
add
cmp
iret
cmp
popf
pop
pop
jl
and
cmp
jle
loope
decb
sahf
dec
push
mull
or
or
jns
dec
mov
add
icebp
dec
sbb
push
fidivl
arpl
add
mov
and
pop
stc
push
sbb
mov
loope
scas
cli
leave
fcomps
sbb
pop
arpl
ret
lds
outsl
std
cmpsl
mov
lahf
loop
add
sub
sbb
loopne
xor
shll
xchg
push
sub
addr16
dec
in
inc
movsl
inc
jle
rcrb
jle
sti
scas
add
int
cli
adc
hlt
jecxz
mov
xchg
mov
outsb
je
data16
movsl
cmpsb
loope
stc
add
mov
adc
pusha
and
push
aas
lea
je
les
ret
bound
mov
std
push
shl
mov
xor
adc
push
inc
xor
xor
jbe
sub
int3
or
bswap
adc
sti
test
cld
pop
mov
out
mov
aaa
test
loopne
shll
shrl
dec
jge
sarb
sahf
cmpb
iret
mov
add
lds
scas
dec
push
dec
cltd
pop
das
loope
dec
dec
mov
cmp
sbb
push
inc
int
adc
or
bound
sub
not
data16
leave
sub
ljmp
ljmp
xlat
or
or
dec
pop
popa
xchg
dec
sbb
jns
push
aas
mov
addl
jle
pop
das
fs
arpl
add
inc
out
int
ret
lods
int
mov
daa
sbb
inc
std
xchg
test
pop
in
adc
subl
sbb
fdiv
imul
inc
sbb
pop
sarl
sahf
push
mov
ror
or
fcmovnu
fdivp
ljmp
es
insl
das
imul
sbb
mov
mov
push
mov
sarl
je
xchg
iret
sbb
mov
dec
pop
sbb
jle
pop
pushf
xor
or
xlat
fcompl
cwtl
mov
mov
sub
shr
add
dec
lods
or
mov
repnz
repz
and
sub
dec
jbe
dec
sbb
movsb
adc
or
mov
xchg
push
jle
pop
push
setae
inc
push
jns
insb
mov
and
sbb
mov
data16
sahf
push
xor
push
adc
lcall
mov
scas
std
aaa
cmp
cmpsl
mov
jecxz
aas
int
lcall
iret
aaa
out
scas
mov
pop
in
mov
or
int
xchg
adc
push
es
mov
jno
inc
aas
andb
imulb
mov
jp
jb
je
out
fbld
push
mov
xor
and
xor
xchg
lcall
xchg
outsb
mov
jecxz
mov
stc
cmpsl
cmp
imul
stos
mov
adc
repz
push
pop
jns
in
inc
pop
and
push
xchg
jmp
int
mov
pop
test
lret
jae
push
nop
adc
out
jae
mov
imull
cmp
push
push
icebp
lds
xchg
and
icebp
sti
and
outsb
push
sub
outsb
and
jle
shrl
es
or
cmp
jne
ss
and
jle
stc
sbb
and
in
xchg
arpl
xor
ret
je
cltd
ret
lods
push
dec
mov
insl
push
imul
loop
mov
dec
lods
mov
outsl
jae
nop
sbb
popa
mov
mov
loope
mov
pop
int
cmp
aad
in
mov
lcall
adc
push
xor
jge
xor
pop
push
sbb
test
cltd
inc
lcall
cmp
jo
jecxz
pop
cs
notb
sbb
daa
imul
inc
lcall
mov
inc
out
iret
mov
sahf
sti
imul
pop
push
insb
dec
into
lods
lahf
lods
jp
push
jnp
mov
out
repnz
roll
inc
mov
das
lret
je
repz
or
ds
lcall
movsl
les
push
lret
hlt
cli
adc
and
pop
ds
enter
xor
push
mov
xchg
pushf
xor
push
mov
inc
or
mov
insl
dec
sub
pop
adc
or
xor
jno
mov
push
clc
push
adc
mov
push
icebp
pop
push
dec
repnz
mov
pusha
and
out
or
add
add
es
stos
or
pandn
pop
dec
push
stos
mov
fldcw
scas
scas
pop
ss
into
outsl
push
outsl
push
repnz
mov
hlt
and
faddl
lock
push
jl
hlt
cmc
pushl
imul
icebp
xor
cs
cmpsb
pusha
sub
cmpsb
lea
jne
sahf
mov
adc
xchg
mov
pushf
ds
hlt
pop
clc
lods
pop
mov
or
jbe
push
push
pop
jp
or
or
cmp
dec
mov
lods
ss
addr16
ja
add
jmp
jl,pn
enter
sbb
insl
jns
addr16
addr16
ficomps
or
jnp
scas
mov
lcall
sbb
push
push
mov
addl
pop
icebp
jp
pop
test
les
fs
inc
and
loop
cmp
jecxz
xchg
out
mov
cwtl
iret
add
mov
mov
mov
frstor
aas
and
push
aad
fldenv
xor
lds
lret
clc
xlat
push
shr
mov
inc
cmp
cmpsb
add
aad
movsb
dec
sbb
sbb
mov
xor
xchg
fistpl
sbb
mov
push
fwait
jae
cmc
ret
mov
sbb
inc
aad
pop
lods
mov
std
ret
pop
mov
inc
fs
rorb
test
sti
imul
sbb
repz
lcall
push
movsb
push
push
mov
roll
xor
iret
fisubs
and
out
rcrl
adcl
insl
subl
outsl
xor
cmp
or
icebp
mov
lcall
bound
xlat
dec
subb
cmp
jo
movsl
fistps
rcrb
mov
sti
scas
aas
je
in
inc
lret
pop
lods
bound
hlt
stos
jge
mov
movsl
fidivrs
jp
mov
and
leave
aaa
add
cmp
lods
cltd
leave
push
mov
jb
sub
cli
hlt
xor
outsb
add
out
dec
push
js
dec
push
pop
and
adc
stos
sbb
jnp
scas
mov
pop
pop
xchg
mov
xor
inc
stos
xor
jb
add
in
shll
jo
adc
or
ss
jno
in
or
lea
push
dec
cmp
stos
xor
fcomps
cwtl
or
aad
cmp
iret
xchg
pop
int
xchg
movb
mov
cmpsl
popl
jb
dec
out
or
bound
out
orl
mov
sub
mul
mov
daa
sub
fstp
mov
jbe
popa
cmp
push
addl
dec
loop
add
push
scas
cmp
lods
scas
push
or
lock
test
aas
dec
je
pop
push
or
push
xor
jge
icebp
add
xchg
mov
movsl
mov
mov
sbb
cmp
sub
loope
add
in
jmp
pop
add
movsb
clc
sbb
es
dec
cmpsb
xchg
sub
push
lret
lds
enter
mov
stos
jb
sub
arpl
test
lahf
in
mov
push
inc
ljmp
out
mov
mov
pop
pop
xchg
mov
inc
insl
ret
idivb
mov
into
int
pop
imul
loope
xor
pop
adc
cmp
add
int3
rol
js
test
in
push
push
jmp
mov
mov
push
and
xchg
mov
in
mov
cmp
sbb
cmp
in
and
mov
dec
mov
gs
lds
aam
rcll
roll
fcompl
clc
lret
cmp
in
enter
or
lcall
fsubr
push
sbb
push
or
shlb
addr16
sahf
int3
int3
inc
add
sub
mov
push
and
inc
clc
std
jbe
jmp
mov
das
dec
aam
bound
pop
xchg
sbb
cmc
add
mov
leave
int3
sbb
add
jb
adc
sahf
popa
test
out
xorb
cltd
outsb
dec
sbb
lretw
add
shlb
insl
mov
or
xchg
xor
mov
es
push
and
add
icebp
mov
dec
mov
ja
inc
xor
mov
ret
pop
inc
cmc
je
test
sub
mov
pop
cmpsl
sub
jne
shl
jno
mov
data16
adc
in
and
inc
cmpsl
mov
movsb
cld
and
jo
pop
push
xchg
sbb
add
loopne
movsl
fmulp
popa
in
fisubl
push
fisubrs
or
iret
add
pusha
and
pop
pusha
sbb
jmp
push
lret
iret
xor
and
cmpsl
inc
xchg
push
xchg
outsl
sahf
stos
js
cli
stc
mov
xor
pusha
cmp
mov
adc
sbb
dec
repnz
mov
ljmp
xor
lods
push
test
adc
bound
aas
mov
ret
push
mov
aam
les
cwtl
outsb
jle
ror
std
das
roll
jmp
mov
clc
fwait
xchg
pop
es
cli
test
adc
mov
jbe
imul
mov
fstl
jp
inc
repnz
mov
shlb
hlt
mov
fwait
call
loope
add
sbb
sbb
cmp
inc
cmp
nop
aas
mov
pop
notl
stc
cmp
mulb
lods
pop
mov
mov
ss
imul
xor
push
push
std
fwait
mov
imul
xor
jg
dec
clc
lds
out
add
fisttpl
insb
bnd
lret
mov
mov
sub
rclb
dec
push
ret
jp
sahf
fidivrl
stos
cmp
shlb
xchg
lret
xor
pop
adc
xchg
mov
sbb
gs
sbb
add
out
lret
jg
sbb
jp
jns
leave
mov
out
mov
mov
popf
sbb
nop
call
add
cmp
imull
sbb
push
jo
and
xor
subl
push
aas
outsl
pop
xor
and
pop
jecxz
int3
xchg
jno
jae
mov
or
add
jg
maskmovq
notl
add
dec
out
in
in
sti
scas
lcall
movsb
or
pop
leave
ja
lret
shll
test
cs
adc
or
adc
stos
jne
iret
fwait
leave
imul
or
mov
call
push
xor
bnd
sub
lea
negb
enter
into
dec
mov
jo
dec
rclb
jno
mov
dec
jns
adc
mov
mov
sbb
into
jle
and
and
xchg
sub
roll
repz
mov
repz
icebp
stos
jbe
or
cmpsl
pop
jp
or
push
and
mov
call
jmp
ror
roll
jg
mov
jecxz
mov
dec
imul
push
dec
or
push
pop
pop
mov
call
pop
ret
decb
pop
pop
hlt
in
mov
xchg
sub
shl
dec
pop
jmp
sub
dec
xchg
fincstp
insb
mov
sbb
faddl
int3
xchg
popa
gs
dec
xchg
lods
jmp
lret
inc
fisttpll
fimull
rcll
mov
sha256msg1
out
js
insl
cltd
sub
fs
mov
les
ds
das
aad
test
aam
adc
fadd
dec
push
std
inc
insl
adc
jb
imul
jnp
js
sbb
and
xchg
ds
movsb
cmp
cmpsb
cli
push
adc
out
stos
mov
mov
xlat
clc
xchg
mull
into
inc
shrl
cld
fsubrs
jl
dec
inc
sub
subb
pop
add
iret
mov
test
mov
xor
aas
adc
mov
sbb
xchg
test
int
jle,pn
je
mov
repnz
fisttps
imul
sub
js
lret
adc
cmpsb
push
ds
stos
sub
call
loop
enter
pop
cmp
lock
xchg
das
cwtl
fistps
xor
out
nop
push
mov
es
mov
xchg
adc
dec
dec
jo
ret
ds
dec
adc
sbb
dec
jp
mov
ljmp
test
rorl
push
shr
int
cs
stc
xorb
push
es
sti
cmp
aad
and
inc
inc
inc
cmp
push
pop
jb
push
push
data16
and
pop
sub
mov
lcallw
pop
lret
cmp
into
repnz
lret
xor
test
stc
das
div
fnstcw
rorl
ss
push
stos
movsb
pop
cltd
lcall
mov
rcll
shl
dec
testl
mov
pop
insb
add
jg
mov
push
mov
push
ret
lret
data16
push
and
sti
push
inc
adc
add
or
jge
loop
inc
icebp
jo
out
jl
jo
xor
fdiv
adc
lea
fwait
adc
mov
jle
les
in
cmp
xchg
stc
fdivs
jl
jl
push
ds
dec
popf
repz
fcmovnu
mov
mov
push
addr16
inc
icebp
popa
in
mov
cld
pushf
fistps
jge
pop
adc
aam
cmpsl
ljmp
out
mov
cmpsb
mov
outsb
pop
divl
push
mov
jb
shll
pusha
popa
lret
fs
jae
sbb
mov
pop
hlt
enter
xor
mov
subb
in
xlat
insb
add
and
hlt
push
aam
jg
bound
mov
pop
mov
jg
mov
xchg
mov
inc
add
imulb
sbb
std
pop
cmp
sub
sahf
push
mov
xlat
sbb
lock
mov
fistps
jne
jp
test
fcomip
push
xchg
lods
fisttps
add
xchg
addr16
mov
cmp
insb
mov
xor
sahf
dec
push
call
test
xchg
mov
adc
jb
data16
xor
imul
ljmp
mov
pop
jns
adc
push
out
data16
out
push
sub
jae
sub
add
and
imul
jbe
mov
add
xor
push
mov
fisttps
xchg
sub
and
pop
xchg
adc
inc
sbb
int
scas
testb
push
popf
jnp
xchg
jp
jge
xor
adc
push
pop
test
adc
les
xorw
adc
mov
mov
adc
adc
loop
jl
xlat
lock
in
into
jl
addr16
pop
sbb
dec
adc
jb
mov
jo
or
inc
je
cld
pop
jno
jbe
push
xlat
or
push
adc
lods
push
xchg
insl
xor
fcompl
inc
xor
mov
popa
push
lahf
rcr
ret
sub
in
insb
lds
mov
xchg
jae
and
mov
iret
xor
add
mov
loopne
jp
xor
std
leave
pop
fisubl
pushf
mov
in
sti
lret
fwait
sbb
imul
lock
mov
int3
sahf
sbb
cmpl
jmp
or
lds
dec
sbbl
in
adc
push
imul
dec
or
sbb
stos
aam
inc
daa
leave
es
pop
mov
adc
or
push
fildl
idivb
sub
sbb
fcompl
subl
incb
mov
call
jbe
xchg
jp
cld
pushf
xchg
jne
iret
xchg
mov
into
or
add
mov
inc
cmp
scas
cltd
mov
nop
fldcw
popa
inc
cli
push
lret
and
mov
and
nop
pop
or
pop
cmp
and
lcall
les
cmpsl
fisttpll
icebp
iret
push
addr16
pop
xchg
sbb
movsb
xor
sbb
aad
adc
jp
push
loopne
lods
lods
inc
jne
cmp
ja
xor
xor
mov
loope
into
cmc
nop
mov
push
jecxz
jno
mov
aas
jl
or
jo
js
sub
lea
jl
sbb
adc
mov
xor
scas
xchg
lea
bound
push
add
jb
enter
stos
mov
int
add
mov
in
leave
rorb
or
add
mov
enter
push
or
insb
ljmp
add
mov
dec
lods
int
push
stc
in
mov
sub
sub
lahf
cmc
lret
mov
repz
add
push
or
cmpsl
push
fldcw
ljmp
sub
dec
and
push
test
mov
sbb
out
add
mov
inc
dec
mov
push
ljmp
dec
popa
repnz
repnz
xchg
js
jle
les
icebp
xchg
cmc
push
int3
mov
cmpsl
or
inc
roll
adc
inc
sub
pop
jle
push
mov
out
xor
sub
push
xchg
jb
pusha
cmp
sbb
jmp
loop
scas
sbbb
movl
xchg
cmpsl
dec
xchg
icebp
dec
popf
das
sub
insl
jmp
jl
jae
loope
outsb
or
idivl
popf
fildl
js
mov
pop
sbb
stc
ja
pop
mov
fidivrl
in
jg
lahf
mov
pop
jge
imul
xor
pusha
stos
cmp
in
pop
aam
scas
dec
loop
hlt
das
or
jbe
xor
add
jae
imul
adc
cmpsl
sbb
cmp
shll
lret
push
mov
and
inc
rcrl
fmull
repnz
popa
pop
mov
testb
mov
ret
push
fbstp
jg
ja
movsb
dec
inc
mov
into
add
xchg
cltd
iret
xchg
repnz
movl
xchg
test
jb
push
sbb
icebp
das
out
push
sub
jae
jl
xor
clc
sub
jle
xrelease
adc
pusha
or
mov
push
or
ds
mov
xor
dec
xchg
inc
ljmp
ret
out
adc
fsts
inc
push
fwait
and
loope
decl
fnsave
cmp
pusha
xor
notl
leave
mov
shlb
xlat
add
xchg
std
sarb
mov
and
and
cmp
sbb
pop
adc
xchg
inc
jp
in
mov
add
cli
sbb
ja
and
fldcw
sbb
in
sbb
mov
jnp
rcrl
xchg
dec
lcall
neg
inc
mov
or
add
pop
adc
dec
insb
xor
loop
ror
mov
movsl
scas
into
add
fwait
dec
jp
xor
push
call
je
jno
push
dec
or
mov
bound
cltd
pop
sbb
jecxz
inc
test
daa
sbb
imul
push
ret
sbb
popf
icebp
cli
notl
push
push
and
cli
fisubs
mov
xor
imulb
in
push
enter
sbb
ljmp
incb
stc
insb
in
mov
insl
imul
dec
bound
icebp
mov
lds
jmp
mov
lret
in
addb
mov
aam
cld
adc
push
insl
test
stos
xor
loope
jmp
cmp
jo
insl
ss
incb
pop
sub
sub
lods
add
in
leave
inc
fwait
inc
xor
les
fwait
call
adc
stos
cmp
push
sahf
lahf
or
push
sbb
inc
push
mov
mov
push
mov
mov
out
jbe
in
sub
std
out
dec
popw
xchg
dec
xlat
add
cmp
sbb
mov
repnz
rorl
mov
scas
int3
sub
imul
jno
adc
or
sub
insl
outsl
aas
in
jbe
enter
test
sub
outsb
je
xor
jne
iret
mov
or
and
cmp
pop
push
sub
push
adc
lret
cmp
pop
in
aaa
xor
xchg
jg
dec
aam
lret
sub
fldl
mov
into
seta
clc
iret
pop
call
xlat
inc
dec
movsl
mov
lcall
cmp
and
dec
ret
mov
leave
sarb
inc
insl
add
adc
jecxz
ss
inc
mov
out
sub
clc
sub
ss
mov
sarb
adc
dec
inc
mov
fstp
mov
push
pusha
mov
lds
dec
xchg
es
data16
sbb
cs
dec
mov
pop
jl
cld
lock
cmc
pop
dec
cmpsb
js
cmp
push
or
inc
rorl
push
fimull
es
stos
pusha
popa
or
sub
pop
popa
xlat
jp
cmp
dec
jmp
pop
jno
in
imul
je
neg
lcall
jecxz
jmp
and
cwtl
or
cmc
inc
lret
fcos
nop
xchg
inc
sub
dec
stc
call
jb
pop
cwtl
adc
add
pop
lods
adc
push
repnz
jnp
adc
inc
push
arpl
adcb
mov
enter
dec
sub
in
xchg
jle
mov
or
and
pop
mov
mov
sub
cwtl
int
mov
bound
lea
sub
je
xor
xchg
sti
mov
ds
mov
mov
shl
xor
push
pop
mov
dec
sub
or
es
and
jo
mov
jbe
cmp
jmp
fisubl
stc
movsl
shll
rcll
cs
inc
mov
dec
std
mov
shrb
pop
inc
je
mov
cltd
push
sbb
adc
pop
sub
icebp
adc
mov
push
movsb
aad
sbb
out
inc
xor
enter
bound
scas
mov
push
loopne
cmpsl
dec
jns
adc
and
stc
aaa
cltd
jecxz
out
or
xchg
dec
cld
std
std
jecxz
mul
push
fildll
sbb
mov
repnz
fcoms
movsl
test
scas
dec
int
fwait
in
inc
sbb
sti
adc
inc
sbbl
mov
push
call
and
mulb
out
adcb
mov
lahf
cmp
idiv
add
push
imul
pop
test
jl,pn
cs
fcmovbe
lods
adc
or
nop
and
or
stc
cs
mov
push
and
pop
mov
pop
out
dec
or
inc
cwtl
stos
aad
js
fisubs
fdivrs
dec
sahf
pushf
ljmp
dec
ror
mov
nop
inc
mov
dec
in
lea
movsb
aaa
and
pop
int
jle
jecxz
mov
outsb
push
repz
push
jg
outsb
loop
xchg
iret
aas
movsl
jp
scas
xchg
push
sbb
push
rcr
int3
fldenv
mov
pop
jnp
dec
in
loope
test
out
mov
xchg
cmp
leave
shl
outsl
mov
push
or
idivl
arpl
pop
adc
xlat
add
cmp
mov
lods
mov
hlt
adc
push
cltd
xchg
lods
scas
push
mov
aad
jle
jg
xchg
or
dec
popa
aaa
inc
repnz
xlat
xchg
or
pop
cltd
dec
push
sarl
lcall
jmp
pop
inc
lods
in
dec
test
daa
fwait
movsl
dec
repz
add
repz
sub
jns
add
xchg
test
inc
xchg
or
jp
lret
es
mov
pop
pop
sub
repnz
add
lods
mov
fwait
in
cld
test
mov
lds
insl
lods
pop
enter
xor
sahf
inc
test
sar
test
xchg
mov
mov
clc
pop
emms
inc
mov
push
cmp
ficoml
test
and
pusha
xchg
lret
mov
push
xchg
xchg
out
test
pop
movsl
cmp
mov
std
fistpll
xorw
mov
sbb
push
sub
popa
test
xor
mov
cmp
and
lret
and
or
fsts
dec
xchg
mov
cmp
incb
inc
push
out
inc
enter
push
sarl
xchg
fistl
cmpsb
in
mov
enter
dec
add
rorb
in
sbb
fucomi
jg
stc
xchg
sahf
mov
repz
pushf
leave
fsub
jne
mov
shl
mov
xlat
test
pop
out
or
jns
and
in
repz
xor
fldt
inc
xor
outsb
lret
int3
popf
mov
filds
rolb
fs
jp
int3
fisttpll
xchg
jge
adc
out
nop
jne
lock
in
dec
movl
shrb
stos
pop
inc
push
call
xchg
outsb
es
dec
pop
test
test
inc
add
or
sub
and
orb
or
cli
dec
fildll
jmp
fstpl
mov
mov
repz
jp
in
clc
call
jb
aas
mov
dec
lret
mov
loopne
inc
jp
dec
mov
out
pop
inc
or
test
test
push
sbb
jp
dec
icebp
test
mov
mov
add
fisubs
xchg
out
ret
lds
inc
jl
lea
jg
ss
repnz
and
sub
out
jnp
cmp
mov
mov
jecxz
or
in
cmp
inc
xchg
add
bnd
stos
sub
jmp
xchg
cmp
sbb
mov
mov
ljmp
sbb
xchg
sub
mov
xor
js
mov
popa
push
addb
out
jmp
xchg
xchg
pop
push
jle
daa
fdivrl
stos
clc
ret
movsl
hlt
shlb
or
add
inc
imul
je
bound
in
xlat
enter
insb
fisubl
cmp
xchg
hlt
sub
std
outsl
xchg
pop
adc
in
pop
call
imul
pushf
pusha
or
push
mov
imul
das
mov
lahf
add
jns
sub
jp
pop
and
or
lock
insl
xlat
jne
ror
lods
add
jae
in
xor
sub
out
dec
xchg
outsb
int3
mov
pop
mov
add
test
xor
inc
pop
lahf
inc
xchg
cmc
cmp
pop
sbb
or
xor
clc
jg
dec
mov
stos
xor
cs
add
imul
xchg
testl
in
cli
ljmp
xor
jg
sub
dec
ficompl
mov
inc
cmp
xor
cs
jno
mov
mov
fidivrs
adc
mov
jmp
ret
mov
jo
loop
mov
lods
fwait
imul
cltd
jb
cs
xchg
cwtl
xchg
sub
lcall
mov
push
jecxz
and
xchg
in
sub
or
inc
icebp
faddl
mov
cmc
lret
js
and
jno
mov
mov
jnp
or
sti
mov
fadds
xor
xor
int
xor
pop
dec
or
jb
repz
lds
push
fwait
test
addr16
xchg
and
pop
fidivrl
mov
pop
ret
fimull
aaa
dec
cmp
pop
push
repz
xlat
leave
icebp
fwait
pop
cmp
aaa
or
mov
arpl
out
xor
push
pop
pop
push
or
test
add
lods
stc
fisubl
out
std
movsb
testb
testl
push
adc
dec
sahf
je
cmp
pop
dec
xchg
insb
call
mov
push
leave
insb
lds
mov
in
outsl
scas
cmp
mov
fwait
nopl
xchg
push
mov
pop
out
add
mov
fs
sub
fwait
jp
fsubs
cmp
cmp
pop
sub
and
dec
in
add
lods
xchg
jbe
sub
out
scas
cmp
enter
sbb
test
scas
mov
pop
sarl
adc
dec
adc
data16
sbb
lcall
sub
mov
ja
sbb
test
es
push
xchg
push
das
stos
mov
sub
push
mov
shl
pop
repz
in
pop
scas
fistl
adc
insl
test
ja
fldcw
jmp
out
scas
repnz
add
loopne
adc
adcl
adc
call
cmp
sbb
jl
jmp
das
fwait
push
mov
sub
cmp
jmp
push
daa
in
mov
adc
jbe
jg
cmc
insl
sbb
fstpt
mov
stc
scas
sbb
sbb
pop
das
subl
mov
arpl
popa
jae
push
xchg
sbb
cmp
inc
push
xchg
mov
or
cld
adc
fucomi
xchg
and
stos
add
cltd
adc
insb
sbb
stc
mov
sbb
ror
inc
mov
dec
stos
xchg
and
mov
jo
inc
addl
loope
fdiv
test
push
jbe
mov
nop
inc
mov
lock
lahf
or
gs
ja
scas
mov
out
lods
mov
fcompl
push
xorl
push
pop
hlt
pop
sbb
scas
roll
xchg
or
test
sahf
mov
mov
aad
out
aam
mov
cmpsb
imul
mov
jbe
sbb
dec
loope
push
jb
and
jb
add
ret
jo
pushf
dec
outsb
addr16
and
add
roll
xchg
or
aam
das
out
push
hlt
sti
xchg
ret
cmp
push
and
mov
hlt
sti
fistl
jle
inc
mov
mov
mov
sub
xor
and
dec
aas
idiv
pushf
xchg
mov
stc
sub
inc
fucomp
cwtl
pop
jno
sbb
iret
sbb
inc
inc
aam
test
mov
inc
xor
xor
pop
or
push
aam
or
push
pop
mov
cmp
insl
mov
xchg
cltd
lret
stos
int3
or
xchg
cltd
sbb
fnsave
sti
pop
mov
std
cmc
daa
jb
push
pop
mov
cltd
xlat
sub
xlat
add
fbld
and
add
jle
push
mov
mov
jmp
add
inc
mov
and
dec
xchg
mov
call
cmp
add
pop
fsubl
pop
xor
stos
cmc
mov
lcall
jp
aam
in
pop
mov
arpl
cmp
mov
cmp
mov
arpl
jne
cwtl
add
outsl
mov
loop
cld
mov
aam
sub
daa
xor
xchg
and
out
test
pop
popf
inc
adc
jmp
pop
bound
fdivs
cmpsl
faddl
sub
pusha
mov
dec
cmp
mov
les
mov
push
sahf
jbe
ss
movsl
shrb
in
jb
dec
orb
push
lcall
adc
jl
xor
mov
pop
loope
orl
xor
sub
cmc
insl
insl
jg
jne,pn
jl
mov
mov
pop
test
cmp
adc
push
cld
pusha
mov
xor
or
sahf
mov
fst
stc
aam
mov
sti
xor
int3
fnstsw
dec
pop
ja
dec
mov
adc
int
or
add
stc
dec
cmp
test
jmp
mov
pop
lret
xorl
or
add
adc
mov
icebp
into
loope
push
cmp
jbe
push
fldt
adc
inc
fisttpl
dec
add
out
shr
mov
and
cmp
adc
pop
xchg
pop
test
arpl
or
loopne
test
es
sbb
movsb
mov
adc
fstpt
jle
xchg
xlat
ljmp
jbe
nop
mov
push
stos
int3
gs
icebp
add
inc
xchg
xor
xchg
stos
stc
adc
fisubs
clc
cwtl
mov
popa
aas
push
mov
push
hlt
mov
and
and
add
cmc
xchg
push
mov
test
data16
mov
shrb
xchg
add
leave
mov
sub
jo
push
push
xchg
mov
hlt
cmpb
adc
jge
cmp
test
jge
outsl
lea
jl
mov
sahf
hlt
faddl
mov
or
in
test
js
popa
lds
sub
and
pop
cli
outsl
popf
push
repnz
jne
mov
repnz
mov
sbb
add
cmc
jne
sub
xchg
movups
jbe
dec
jge
pop
scas
mov
mov
push
ja
fwait
mov
adc
data16
jg
pop
stc
pop
daa
push
in
mov
roll
push
jecxz
push
shll
subl
das
cmp
push
mov
mov
sub
pop
les
jno
push
jmp
mov
push
sbb
fwait
leave
rep
jmp
xor
mov
mov
cmp
sub
ret
sub
cmpb
mov
push
mov
jge
test
in
push
pushf
fcmovu
idiv
fsubrs
lcall
sub
cmp
mov
xor
movsl
pop
enter
dec
data16
push
jbe
pop
adc
std
ret
iret
push
jo
lock
push
push
lahf
out
imul
push
sub
inc
in
gs
sub
jne
mov
xor
and
mov
enter
lret
fwait
adc
test
pushf
adc
mov
mov
sub
rclb
pop
outsl
pop
leave
push
and
jae
imul
sbbb
adc
pop
stos
xor
xchg
jnp
sub
or
gs
add
in
sbb
ror
aaa
inc
mov
sbb
gs
jb
in
mov
in
repz
and
mov
rorl
dec
fptan
mov
adc
fcmovb
jbe
adc
loopne
movsb
es
mov
ss
add
push
stc
or
and
in
xchg
mov
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
incl
in
mov
cli
push
xor
fucomip
mov
mov
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
movsl
rcl
cmpsl
mov
in
and
mov
popf
shrl
mov
xchg
mov
cltd
andl
rorl
nop
fwait
mov
lahf
test
popa
mov
add
shlb
dec
dec
out
cld
and
loopne
cmp
xor
mov
mov
push
xchg
cmp
fidivrs
xor
xchg
mov
dec
shrl
jecxz
fsubp
sti
cld
and
loopne
cmp
inc
push
and
push
jnp
mov
xchg
or
out
movsl
stos
lock
mov
push
test
ljmp
shlb
mov
mov
jae
in
insb
test
add
shlb
mov
jmp
mov
mov
adc
shlb
icebp
fucomip
mov
mov
mov
test
fucomip
mov
cli
stos
int3
insb
test
add
shlb
mov
insl
mov
ljmp
in
mov
mov
mov
test
add
shlb
in
mov
mov
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
xchg
mov
shlb
mov
in
ja
mov
cmpsl
cli
stos
pushf
sub
orb
mov
dec
sahf
lods
sahf
shll
shlb
inc
aam
mov
and
fucomip
mov
cli
stos
in
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
shlb
mov
in
mov
cli
stos
int3
insb
test
add
ror
mov
iret
in
mov
pushf
push
loope
loopne,pn
fisttpl
add
mov
xchg
jg
pop
leave
addb
push
lea
ljmp
addl
mov
stc
adc
xchg
pop
test
dec
pusha
xchg
arpl
testb
fisubs
xchg
mov
loopne
xor
jno
push
test
mov
movsl
sbb
adc
sti
xchg
outsl
dec
movsb
mov
out
shlb
sub
iret
fistps
cs
popf
mov
mov
cli
aam
scas
pop
xchg
sbb
mov
rcrl
aad
std
fisubs
cs
cmp
dec
inc
pop
add
sub
push
jg
mov
cwtl
sbb
pop
cmp
iret
xor
cmpsl
out
push
push
ds
stos
pop
inc
sbb
inc
and
sbb
xchg
nop
push
xor
add
jbe
insl
pop
sbb
or
sbb
sbbl
pop
popa
xor
andl
inc
aam
mov
insl
add
mov
clc
mov
out
scas
xchg
xchg
jecxz
push
sub
ret
xchg
lods
fstpl
dec
dec
imul
pop
scas
lods
inc
scas
xorb
adc
pop
or
daa
xchg
jle
fstl
xchg
not
movsl
inc
int3
xor
jne
stos
add
test
pop
and
mov
mov
xchg
mov
fldl
dec
addr16
scas
imul
fbld
push
jge
daa
aam
mov
int
fs
sub
enter
xorl
fs
imul
push
push
ds
movsb
ret
pop
test
and
call
jbe
lds
fcmovbe
dec
roll
jbe
mov
movsl
sub
xchg
jnp
nop
cmp
aad
mov
pop
daa
sub
mov
subb
sahf
mov
out
xor
fiadds
cmpsl
xchg
mov
sbb
sbbl
cld
pop
movsb
xchg
jp
cmp
movsl
or
imul
fists
in
cmc
fdivrs
test
adc
sbb
movsl
cmpsb
adc
add
por
es
dec
arpl
sbb
or
pop
xor
adc
adcb
lahf
inc
fcmovb
push
cmp
inc
stos
push
cli
test
mov
inc
popa
inc
pushf
movsb
sbb
insb
xchg
push
mov
mov
imul
mov
inc
sub
fisttpl
divl
ret
push
test
cmp
mov
insb
fstpl
ficomps
fisttpll
orl
js
or
mov
pop
lock
fnstsw
cmp
loopne
lahf
sbb
hlt
popf
out
movsl
int
es
push
cmp
aad
xchg
sub
in
inc
jne
shll
inc
sub
es
sub
push
dec
das
or
sbb
or
rolb
pop
mov
sbb
pop
enter
ret
imul
in
add
adc
aam
adc
adcb
div
pushf
out
inc
outsl
mov
sub
ficompl
stc
fnstenv
xchg
int
pop
ss
sbb
push
sub
cmpsb
add
dec
xchg
shlb
pop
dec
int3
ds
out
dec
sti
repnz
push
push
and
dec
xlat
outsb
popf
int3
jno
ret
jns
jge
lea
imul
loope
cltd
insl
lods
mov
jb
incb
cmp
pop
jge
mov
mov
inc
ss
sub
push
mov
mov
xchg
jmp
scas
add
mov
xchg
sbb
movb
inc
loope
pop
pop
lret
jno
mov
cmp
lret
insl
pop
mov
lds
dec
mov
lret
jbe
mov
inc
inc
pop
push
xchg
leave
out
rol
jp
pop
adc
sub
popa
xchg
mov
sub
inc
lea
rcrb
push
fdivs
mov
xchg
test
jecxz
push
inc
or
cmc
sbb
pop
ret
scas
jne
jns
fimull
mov
cs
sbb
into
mov
mov
add
dec
jb
in
mov
psllq
pop
shll
push
daa
pushf
mov
mov
popf
in
movsl
popa
xchg
ja
jp
mov
adc
xchg
xor
sub
adc
mov
fldt
repnz
gs
cltd
mov
sub
sbb
pop
movsl
es
dec
data16
cld
jno
jecxz
mov
into
sub
loopne
pop
jno
push
jno
sarl
pushf
out
mov
ja
or
dec
pop
pusha
in
xchg
in
xchg
sub
aam
mov
cmp
test
idivb
jl
cwtl
inc
bound
xchg
or
xchg
pop
rcl
fstpt
call
push
adc
data16
mov
popf
cmp
nop
movsl
pusha
jae
mov
xor
cmpsb
test
jne
jp
pop
pushw
pop
dec
xor
rorb
dec
mov
xor
push
insb
jbe
in
mov
cmp
shlb
jnp
jne
sub
ljmp
mov
jo
enter
hlt
daa
dec
cs
pushl
dec
outsl
mov
cmpsb
xor
mov
divb
push
mov
rorb
js
push
or
xchg
pop
lea
gs
pop
sahf
push
sahf
outsl
mov
inc
mov
or
outsl
lds
or
insb
push
sub
fsubrp
inc
in
pop
div
sbb
adc
jns
pop
xchg
lret
ret
jbe
add
lcall
mov
iret
xor
pop
pop
push
adc
xchg
inc
add
addr16
rcrb
aaa
clc
cmp
stc
or
stos
xor
cli
mov
mov
adc
mov
jb
test
data16
repnz
pusha
cmpl
pop
imul
ret
adcl
and
pop
cmp
je
or
xchg
in
popf
int3
rcrl
mov
dec
loopne
mov
jb
xchg
or
mov
xchg
lcall
cwtl
push
insb
stos
lock
shrb
jns
cmp
or
sbb
lcall
and
fs
std
or
push
lods
test
jmp
lcall
sub
shll
pushf
hlt
es
or
insl
nop
inc
xchg
push
insl
pop
mov
imul
xor
in
adc
popa
xor
sub
sub
or
dec
dec
add
call
jl
shll
sub
out
mov
add
mov
mov
fmull
push
aad
push
popf
lret
mov
dec
xchg
cmp
and
js
push
aam
jnp
cmp
push
jge
and
fcompl
push
lods
mov
sarl
mov
imul
imul
adc
pop
or
in
push
cmpsb
sbb
or
subl
mov
das
jmp
jb
mov
addr16
subb
push
pop
mov
lock
xor
daa
subl
scas
inc
add
pop
aaa
mov
fs
jb
or
lock
sub
sub
pushf
dec
lret
mov
inc
fistpl
xchg
add
jmp
xor
and
jecxz
pop
or
les
jns
mov
jbe
xchg
scas
insb
jp
xchg
inc
and
in
mov
cmp
aas
cmp
dec
pop
xchg
jae
xlat
mov
lret
dec
fdivrl
inc
daa
les
jecxz
pusha
out
fstl
movl
sbb
addr16
pop
fdivrs
inc
rcl
stos
mov
pop
data16
outsb
xor
cwtl
test
data16
loopne
mov
das
xor
xchg
pop
test
pavgb
jae
push
cwtl
inc
lcall
int
sub
mov
mov
mov
int3
pop
sbb
mov
es
fnsave
adc
lret
jl
ja
and
daa
sbb
or
hlt
ret
fstpt
pop
lret
test
out
lock
pop
sub
scas
sub
out
pusha
mov
push
mov
and
inc
out
mov
dec
bound
xchg
and
ja
sub
iret
pop
and
mov
rorl
popa
test
lods
mov
popf
pop
add
sub
cmp
jp
push
nop
dec
pop
mov
sbb
adc
mov
in
int
xchg
adc
pushf
daa
popa
mov
sahf
xchg
sub
jg
mov
fs
lea
xchg
fldt
lods
arpl
pop
lods
pop
jnp
adc
push
ds
mov
jo
pop
in
les
push
aam
pusha
daa
add
lahf
sbb
sbb
data16
push
xchg
push
mull
jns
add
mov
cld
push
je
or
xchg
xchg
cltd
dec
clc
es
test
out
mov
mov
sub
adc
add
flds
xor
pop
adc
test
inc
mov
mov
lret
jns
xchg
les
mov
xchg
jg
lea
lods
adc
and
nop
fsubrp
add
outsb
jp
ret
ljmp
scas
or
repz
aam
bound
push
test
ret
cltd
cmp
xchg
pop
inc
cmp
test
ja
pusha
pop
mov
fld
clc
sbb
pushf
sbb
inc
inc
stos
push
mov
in
insb
cmp
sbb
cs
push
adc
mov
jmp
jne
out
stos
mov
enter
fistpll
lahf
xchg
in
shrb
pop
lret
lods
adc
mov
aam
ss
popf
sub
pop
mov
dec
mov
ret
outsl
loopne
cmp
ja
mov
out
mov
out
mov
cmp
aad
in
xchg
out
cmp
lret
out
sbb
test
lods
aas
push
sti
or
lret
fdivr
and
push
sti
inc
and
push
jno
in
push
test
mov
and
cltd
jo
mov
fstps
aaa
ja
daa
jne
rol
mov
push
insl
xchg
jne
stos
jnp
inc
jge
stos
insl
iret
mov
and
xchg
or
fiaddl
jg
call
sahf
andl
mov
lods
test
data16
dec
icebp
dec
mov
std
out
push
addl
inc
iret
cmp
xchg
int3
dec
ss
jp
lds
imul
add
mov
stc
cmp
scas
sub
mov
sbb
stc
sub
std
iret
je
pop
or
shr
lock
shlb
lcall
mov
jl
sub
or
cmc
mov
mov
lret
imul
mov
cli
add
leave
bound
pop
scas
fcomp
mov
fs
andb
imul
shrl
aaa
push
mov
repz
cltd
dec
sbb
aas
sbbb
popf
sarb
shlb
popf
repz
int
mov
pusha
roll
push
ljmp
andl
cmp
mov
sub
xchg
xchg
stos
mov
push
jecxz
roll
push
ljmp
in
mov
cmp
cmc
xor
std
stc
sbbl
mov
cmp
push
pop
cmp
mov
sti
cmp
sbb
cwtl
sarl
arpl
arpl
ret
inc
call
loope
clc
inc
xchg
stos
inc
lahf
sbb
repnz
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
