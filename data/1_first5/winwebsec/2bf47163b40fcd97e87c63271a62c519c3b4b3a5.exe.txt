arpl
xchg
mov
cmpsl
and
std
xchg
jecxz
iret
test
jb
inc
mov
jg
sub
inc
ficoms
je
fstpl
rol
into
push
dec
xor
xchg
mov
mov
pop
pop
mov
ljmp
adc
sbb
cmp
imul
fcomps
xchg
call
daa
and
mov
inc
popa
cmpb
pop
dec
push
je
xlat
pop
nop
inc
out
pop
pusha
push
rclb
fidivrs
mov
imul
mov
pop
pop
repnz
and
pushf
into
adc
or
aad
mov
int
sbb
pop
icebp
sub
xchg
out
jo
push
test
or
fnstcw
push
aaa
dec
std
add
add
pop
lods
pop
jae
mov
xchg
xor
cmp
xor
mov
outsb
sbb
daa
push
jle
fnstsw
and
enter
repnz
jecxz
push
fistl
xor
pop
add
pusha
out
sti
pusha
rorb
paddsb
cmp
pop
adc
scas
loop
jne
mov
xor
mov
xchg
addr16
fadds
ds
mov
cmp
pop
push
xchg
dec
bound
sub
cmpsb
xchg
popf
add
mov
xor
das
cmc
fwait
aas
xor
xchg
add
mov
in
lds
movsb
sbb
push
mov
and
out
fisttpll
or
dec
outsb
negb
loopne
repnz
inc
jae
sub
or
testb
insl
flds
sbb
xor
ljmp
fists
out
sub
aad
pop
jecxz
cmpsb
rcpps
xchg
or
aam
mov
imul
filds
mov
fwait
loop
xchg
pop
dec
or
aam
mov
lcall
in
jo
fs
and
dec
es
or
out
sbb
xor
jle
movsl
sub
inc
repz
mov
dec
xchg
mov
test
data16
add
loop
inc
arpl
sub
fwait
inc
dec
adc
push
out
dec
in
mov
pop
jnp
xor
out
stos
xor
add
or
push
decb
or
mov
mov
pop
mov
or
dec
aas
sub
mov
jae
push
jns
dec
mov
inc
mov
fs
aaa
and
add
or
bound
stc
xchg
jbe
and
push
xchg
or
pop
jne
push
imul
mov
nop
push
daa
jl
inc
rorl
dec
aam
jns
adc
stc
mov
or
iret
addr16
loop
xor
lahf
enter
shr
bound
sub
xor
add
mov
movhps
cmp
pop
add
sub
mov
sbb
push
int3
lahf
mov
lds
xchg
lea
push
sbb
xchg
mov
adc
jle
pop
adc
pop
fcmovb
mov
test
push
in
fimuls
inc
and
jbe
in
push
and
xor
xor
sarw
jmp
mov
testl
dec
or
cmp
inc
push
leave
and
jne
adc
aas
sub
sub
cwtl
mov
fildll
fldl
xchg
and
xchg
popa
sub
addr16
int
mov
cmp
add
in
xchg
adc
leave
push
hlt
mov
mov
mov
jmp
and
xchg
sbb
repz
mov
dec
into
sub
jnp
dec
jne
rorb
lret
push
shlb
addl
jns
jae,pt
cs
mov
arpl
and
rolb
mov
jnp
jmp
sti
rorb
mov
mov
pop
and
arpl
ret
push
cmpsb
ljmp
add
and
pop
jno
cwtl
sbb
push
cmpsb
fwait
or
stc
inc
rorb
xchg
loope
sbb
xchg
imul
push
mov
mov
pop
fistpl
sbb
pop
add
daa
repz
lods
or
cmpsb
xchg
leave
jnp
inc
and
or
mov
push
in
outsb
push
mov
fldenv
mov
call
popf
xorb
push
in
cli
ds
inc
push
jne
lods
lods
push
mov
jnp
sub
insb
stos
xchg
adc
cmp
sub
lahf
push
cmp
out
scas
push
sti
inc
mov
inc
divb
or
repnz
add
xor
loopne
inc
cld
shll
push
fldenv
inc
jo
cli
lods
xchg
shlb
lret
pusha
or
fstpl
cmp
dec
inc
jne
lahf
push
mov
jbe
inc
push
sqrtps
dec
add
jmp
icebp
leave
mov
push
jle
rclb
not
pop
xchg
dec
push
lcall
xchg
mov
mov
mov
loopne
cli
push
lret
pop
imul
jo
ljmp
and
sbb
sbb
mov
into
or
sahf
and
or
in
jnp
arpl
pusha
mov
jbe
xchg
mov
and
adc
mov
dec
or
and
push
xchg
pop
ret
ds
pushf
dec
jmp
roll
pop
cli
lea
adc
inc
sbbl
movsl
pop
mov
js
xchg
mov
mov
lds
scas
cmpsl
inc
pop
dec
fldt
aaa
push
insl
rorl
sbb
sbb
sbb
sub
cmp
xchg
mov
xor
adc
inc
pop
repnz
inc
imul
lods
vmovntdq
lock
gs
ds
hlt
aad
xchg
es
cld
jg
jbe
mov
xchg
jle
jecxz
test
pop
shr
push
jns
lcall
jl
xchg
jo
and
sbb
insl
jae
xchg
inc
add
push
jb
out
test
icebp
jno
xor
jge
rcrb
addr16
sub
xor
and
jns
cmp
xchg
aas
or
dec
ret
dec
dec
aam
out
add
aas
or
or
xor
push
in
int3
mov
sub
inc
xchg
adc
mov
cmpsl
hlt
jo
push
mov
std
cmp
rcrb
jmp
fidivrl
and
outsb
xor
inc
mov
and
adc
sub
fwait
dec
stos
sub
cmp
or
push
add
xor
push
jne
movsl
and
ret
pushf
rclb
jp
dec
outsb
and
jnp
xchg
insb
mov
mov
in
call
sbb
jp
jbe
inc
push
cmp
stos
cmp
imulb
popa
sub
pop
xchg
aaa
ljmp
mov
push
pop
inc
sarl
or
adc
dec
test
and
popa
or
aas
mov
xor
das
mov
roll
push
and
jns
call
jbe
in
hlt
mov
mov
push
or
mov
jg
push
and
jno
pushf
inc
dec
cmp
cmc
xlat
lods
mov
hlt
mov
jbe
js
sbb
fdivrs
lea
into
push
cltd
inc
daa
push
icebp
repnz
adc
xchg
pusha
in
mov
aam
lods
xor
mov
ret
adc
loope
push
pop
lock
inc
jnp
inc
push
leave
add
mov
pop
insb
xchg
push
inc
fldcw
mov
cmp
int3
ss
je
mov
sbb
ss
jl
fcmovne
inc
pop
push
mov
mov
aas
and
jb
mov
out
pushl
sub
and
in
mov
negl
mov
enter
push
cmp
mov
xor
add
jbe
js
sti
dec
int
lea
jo
mov
mov
stc
add
dec
push
jb
daa
movsb
neg
es
add
mov
decb
cmp
sub
xlat
jmp
f2xm1
adc
mov
dec
arpl
cmp
pop
xchg
mov
inc
pop
push
data16
push
mov
mov
jl
jecxz
out
aas
cmp
fsts
push
fidivs
cld
fdivrs
dec
repnz
sub
int3
pop
mov
push
mov
sub
outsl
or
sub
mov
scas
push
aad
inc
imul
dec
repnz
test
inc
test
and
dec
cwtl
imul
or
movsb
pop
jp
pop
jp
aaa
nop
sub
es
int3
test
out
jle
push
outsl
push
pop
sahf
daa
inc
je
aam
jne
or
es
mov
push
int3
addl
xchg
ret
icebp
and
inc
pop
and
xchg
loope
ret
push
cmpb
xor
jge
or
dec
jo
aam
mov
mov
sarb
inc
xchg
push
popf
fmul
int
pushf
pop
pop
inc
xchg
pop
push
and
pop
mov
sub
mov
and
xchg
cmp
sub
mov
dec
push
nop
and
faddl
out
push
mov
daa
je
dec
insb
subl
sbb
and
sbb
insb
es
push
nop
cmp
arpl
adc
push
dec
xor
andb
pop
cmc
mov
push
dec
imul
lahf
push
cmp
mov
cwtl
int3
or
mov
push
sub
lahf
sbb
test
xchg
icebp
loopne
aaa
and
xchg
out
dec
aas
hlt
sbb
adc
jne
out
jl
fmuls
les
sbb
add
and
inc
in
lret
in
into
fcomps
xor
cmp
xchg
inc
rcll
and
mov
and
lcall
inc
data16
sbb
fldl
inc
outsl
in
push
mov
add
scas
adc
dec
pop
dec
outsl
sub
dec
mov
mov
iret
xchg
lcall
test
insl
imul
add
mov
sub
pop
fbstp
addb
shll
jg
int3
and
outsb
mov
push
add
mov
test
sub
fs
jl
outsl
xchg
dec
pop
push
pop
jmp
ret
or
bound
push
mov
pushf
xchg
inc
in
xor
adc
or
rclb
ficoml
in
fcmovnu
jbe
cwtl
test
push
push
push
push
in
mov
xchg
mov
jecxz
pop
jge
or
idivb
test
in
xor
dec
es
mov
mov
hlt
dec
jmp
mov
add
or
movsl
insl
int
mov
lret
mov
sbb
repz
test
stos
pushf
lock
pop
jbe
adc
pop
cli
aaa
mov
fxam
and
call
clc
inc
xor
or
jge
mov
jle
sub
mov
ficoms
ja
out
jp
cmpsl
inc
stc
and
outsb
push
scas
pop
add
jmp
fildll
pop
xor
cmpsb
cli
cmc
das
pop
sti
in
or
in
add
fistps
cs
fsts
jo
xchg
dec
sbb
mov
insb
sbbl
fs
cmp
mov
arpl
clc
mov
enter
into
add
pop
pop
std
iret
sbb
adc
pop
push
dec
ret
fxch
cmp
xchg
pop
pop
mov
jl
and
test
mov
mov
mov
mov
movsb
sub
pop
mov
adc
cmp
rcrb
mov
xor
cmovo
mov
push
xchg
rcll
mov
hlt
jne
pop
and
lds
hlt
stos
pcmpeqb
pusha
pop
jo
jl
push
adc
les
jno
pop
js
jge
lret
mov
mov
mov
lret
xchg
mov
neg
rclw
jle
mov
mov
hlt
cmp
cwtl
dec
mov
adc
mov
faddl
jno
mov
dec
push
inc
mov
jp
dec
lods
mov
cmpl
xchg
repz
xor
and
adc
xor
xchg
add
pop
mov
push
xchg
repz
push
push
jne
negb
jns
lret
aam
popa
stc
popf
xchg
or
dec
mov
fidivs
jns
adc
inc
xor
jl
int
cmp
pop
sub
imul
dec
push
jae
call
dec
lds
pop
pop
icebp
cmp
sub
mov
jl
mov
andl
leave
enter
cmc
mov
mov
fistpl
outsl
inc
movsl
xor
dec
daa
dec
aam
inc
mov
cmc
test
inc
nop
out
rep
ret
int3
cwtl
in
mov
xor
outsb
xchg
nop
dec
sbb
lahf
and
fistl
xchg
sbb
mov
or
les
mov
scas
cld
outsb
ss
fcompl
add
jle
notb
mov
sbb
outsl
shrb
add
and
andl
sub
roll
push
sub
data16
mov
cmp
and
xchg
sub
test
dec
insb
mov
stos
sbb
stos
dec
cwtl
jmp
pop
pop
or
inc
int3
mov
xchg
cli
ret
insb
loope
lock
lock
arpl
jg
and
mov
rcll
sahf
ror
movsb
xchg
sbb
and
arpl
push
adc
aaa
scas
in
addb
inc
jg
dec
inc
mov
pusha
jbe
pop
nop
cmp
jbe
int
fwait
cs
add
je
leave
cmp
xor
mov
adc
adc
xchg
lahf
outsl
sub
xor
dec
or
xor
popf
out
sub
out
mov
xchg
outsl
shlb
lahf
dec
xor
push
push
sbb
inc
cltd
inc
sbb
gs
jnp
jle
xchg
dec
icebp
addr16
xor
jbe
fsts
imul
lcall
mov
andl
aad
in
sub
jle
and
test
ret
in
xchg
cld
sub
add
stos
jmp
cld
std
call
xchg
pop
js
loop
sbb
xor
fsubr
test
xchg
mull
sbb
add
pop
pop
cmpb
ljmp
add
aas
andl
inc
and
gs
lea
jb
dec
scas
mov
outsb
divl
or
out
xchg
sbb
pop
addr16
mov
sarl
jle
lods
cltd
aad
jno
mov
les
inc
or
mov
push
ja,pn
mov
cld
movsb
rclb
stos
sbb
add
dec
mov
loop
jno
inc
enter
cmpsl
js
pop
ja
inc
push
mov
loope
cmp
mov
inc
lods
insb
cmp
lock
add
push
xchg
outsl
mov
push
or
insb
lds
dec
aad
loope
mov
lret
cmc
test
popf
add
xor
fistpl
add
xchg
push
rcr
cmpsl
jmp
adc
dec
jle
lahf
das
xor
push
call
jbe
ds
addr16
dec
loop
mov
fsubrl
icebp
mov
inc
cli
push
add
inc
mov
xchg
mov
fimuls
test
iret
inc
jg
lock
popf
pusha
dec
and
xchg
dec
dec
nop
rolb
fwait
add
aaa
mov
xor
pop
inc
inc
cmc
or
cwtl
out
clc
mov
mov
popa
sti
vmread
addr16
fwait
std
and
mov
in
fwait
cld
xor
mov
adc
inc
fmull
jb
inc
dec
jp
nop
push
mov
lds
cmp
aad
push
push
push
aas
xor
push
add
icebp
xchg
je
fcomps
test
bnd
mov
mov
push
ds
mov
inc
or
js
mov
cs
mov
out
dec
jmp
in
dec
out
mov
enter
push
jnp
and
sarl
pop
fbld
mov
addl
xchg
leave
mov
add
stc
in
mov
shl
and
leave
jo
pop
adc
mov
mov
sahf
icebp
dec
lahf
pop
mov
or
push
sbb
insl
xchg
in
xchg
inc
mov
or
out
xor
dec
add
cmp
lret
movl
addr16
cltd
xchg
test
movsl
lods
imulb
sahf
mov
jmp
ret
pushf
adc
pop
mov
outsl
rorb
mov
clc
fmuls
test
ds
fwait
ret
es
daa
jl
cli
loop
cltd
pop
mov
test
xlat
inc
inc
dec
popa
mov
xor
shrl
fsubrs
fwait
xlat
push
lret
imul
xchg
sub
jl
nop
mov
dec
sub
in
and
dec
dec
mov
aad
out
adc
aam
dec
jmp
add
loope,pn
pop
aas
outsb
fmuls
out
fst
add
pop
out
iret
pushf
sti
repz
dec
sti
inc
and
outsb
int3
fwait
sbbb
cmp
and
idiv
jno
rclb
pop
mov
fisttpl
insl
mov
xchg
lods
mov
cmp
aad
fsts
test
out
repnz
mov
nop
jns
or
test
add
mov
sbb
mov
adc
dec
jg
test
push
xor
shrl
push
repz
cmp
pop
mov
fldcw
pop
xchg
xchg
jb
cli
roll
mov
rcr
iret
push
lahf
leave
cltd
repnz
xchg
xchg
in
mov
mov
sub
sbb
sub
icebp
sbb
sub
sbb
gs
jo
pop
fdivrl
add
outsb
addb
mov
fdivl
add
jo
pop
xchg
xchg
push
cmc
dec
push
pop
outsl
inc
das
jno
movsl
fiaddl
jae
inc
adc
mov
and
or
sub
jo
daa
outsl
gs
push
xchg
or
test
imul
cmpsb
int3
xchg
push
daa
inc
scas
pop
fmull
hlt
inc
dec
push
push
addb
xchg
ret
mov
stos
jo
stos
lock
push
dec
icebp
mov
xor
cmp
jo
and
bound
sbb
dec
pop
mov
mov
pop
mov
cwtl
jo
test
jo
cs
rcrb
cmp
imul
and
mov
pushf
and
adc
jne
mov
push
inc
sbb
cli
cli
jnp
cmc
lcall
mov
lea
push
pop
mov
or
call
xchg
sub
cmc
ljmp
xchg
mov
imul
xchg
loop
pop
push
inc
sbb
add
push
xor
cld
and
jns
add
push
lods
sbb
sub
and
adc
xor
mov
out
mov
test
notl
loope
xchg
into
inc
xchg
lds
adc
mov
sub
push
hlt
mov
push
adc
sbb
xchg
test
scas
repz
data16
ds
jae
mov
lcall
pop
paddb
push
out
pop
out
cld
sbb
xor
cmp
adc
sub
adc
lcall
or
xor
les
test
fsubl
rcl
fwait
insb
xchg
dec
push
pop
out
repz
cmc
and
xchg
jp
jno
sub
fwait
and
sub
aas
insl
dec
pop
mov
mov
lcall
lea
mov
push
subb
adc
repz
imul
sbb
clc
pop
bound
shrl
mov
in
into
mov
mov
in
or
inc
cmpb
test
adc
lock
mov
cli
lods
inc
cli
inc
lock
add
imul
repnz
nop
jne
daa
push
pop
sub
jo
lahf
jle
pop
mov
xchg
rorl
xchg
nop
push
mov
nop
lods
and
push
cmp
out
sbb
dec
mov
xchg
jno
or
xchg
add
mov
mov
jp
sbb
mov
cmp
mov
insl
mov
push
cwtl
mov
mov
in
mov
lret
jns
sub
repz
outsb
dec
cmp
cwtl
stc
leave
mov
faddl
int3
loop
pop
mov
or
arpl
sub
sub
xchg
stos
or
and
pop
mov
fldenv
sbb
or
test
push
aas
or
gs
mov
and
inc
xor
sub
xor
lods
leave
je
dec
xchg
fbld
loop
mov
xchg
repz
inc
sti
stos
jmp
xorb
dec
mov
xor
cmp
mulb
cmp
fmul
pop
insb
mov
repz
mov
addr16
sbbb
xchg
or
js
mov
pop
outsl
push
ja
xchg
lds
push
and
pop
cmp
movsb
inc
xor
xchg
jb
aaa
das
jle
xorb
dec
icebp
lds
aam
pop
fmul
push
adc
popl
push
jmp
mov
stc
leave
out
fsubrl
notl
jle
out
pop
fidivl
xchg
dec
jmp
mov
gs
dec
and
cmp
js
outsb
lahf
sbb
mov
dec
sbb
or
call
inc
and
or
in
inc
stos
add
stc
lock
orb
or
subb
add
or
mov
add
adc
cmp
dec
inc
and
stos
push
fildll
lret
movsb
sbb
dec
push
hlt
inc
sbb
jbe
cmpsb
cmp
in
jecxz
jp
cld
subb
fisttpl
repz
xchg
mov
stos
dec
xchg
adc
rol
stos
cmpsb
sub
push
mov
lret
es
loope
adc
mov
add
pop
ss
popf
and
add
ret
test
cmpsl
push
jle
inc
or
test
iret
mov
aam
lea
jl
xlat
sub
jae
std
lock
fwait
cmpsb
mov
fstps
dec
jno
jnp
lret
repnz
add
dec
sbb
lcall
mov
mov
cld
xchg
inc
insb
xor
dec
jne
mov
or
cmpl
filds
jae
leave
icebp
jp
sub
mov
cmp
fistps
call
dec
mov
cmc
or
cltd
ret
hlt
cmpsb
mov
dec
sahf
data16
sarl
lcall
fwait
xchg
mov
clc
outsb
je
push
inc
add
push
aas
lcall
and
xchg
push
call
cmp
addl
mov
cmpsb
mov
push
les
shll
out
xor
mov
and
mov
ret
movsl
dec
aaa
jecxz
stc
inc
fsubs
xchg
xor
inc
push
in
fs
or
pushf
mov
rorb
and
fs
leave
and
stc
lcall
fbld
insb
cltd
leave
insb
and
or
or
xchg
xlat
es
jp
mov
rolb
inc
popa
jl
retw
mov
loope
cwtl
in
mov
rcl
fldcw
das
adc
scas
cmp
jmp
push
dec
and
cmp
jl
mov
int3
push
je
stos
cmp
loop
cmp
pop
stc
push
mov
repz
add
sbb
mov
pop
mov
ss
ss
icebp
popa
fdivrs
and
sub
arpl
daa
push
into
scas
aad
loopne
repz
lods
sbb
shrb
xor
adc
or
inc
push
xchg
inc
jno
inc
push
mov
push
xor
cmp
aas
popf
inc
pushf
imul
pop
into
xor
ret
or
push
adc
aad
jmp
mov
int
sub
mov
mov
or
outsb
lea
test
sbb
push
addr16
mul
mov
inc
xor
hlt
pop
ljmp
dec
mov
pop
mov
xchg
call
adc
sti
ds
pop
bound
insb
rorb
mov
or
roll
decb
gs
mov
cmp
mov
test
roll
lock
cmp
pop
xchg
jg
lret
in
pop
cmpsb
into
sbb
inc
lcall
shrl
mov
sbb
imul
rcl
add
not
add
in
or
dec
sbb
mov
inc
lods
mov
xchg
mov
iret
mov
mov
scas
and
mov
adc
cli
mov
add
fistpll
arpl
cmpsb
dec
jecxz
or
push
jbe
xchg
push
loope
pushf
cmp
sbbb
testl
icebp
les
sti
stc
xor
inc
aad
dec
dec
xchg
xchg
testb
cmp
push
mov
mov
scas
mov
dec
negb
adc
jnp
sub
cs
mov
mov
pop
ds
or
and
lock
mov
cmp
imul
std
adc
mov
mov
pop
dec
mov
dec
sbb
xor
enter
dec
push
sarl
ds
or
ljmp
xor
mov
cmc
lods
pop
fcoms
sub
mov
mov
es
mov
int
mov
mov
js
lds
nop
fwait
sub
jl
add
inc
jp
sub
cmp
in
cwtl
cmp
push
jg
push
and
cld
aad
push
push
andl
imulb
push
mov
xor
cmp
cli
sub
cmc
cmpsl
pop
inc
nop
mov
inc
fcomi
hlt
cltd
push
sbb
dec
insl
scas
lret
clc
in
dec
push
xchg
pop
jo
sbb
sub
cmp
gs
rorb
out
fdivrs
xchg
pop
add
imul
out
loopne
push
fcmovnu
dec
mov
scas
push
and
lods
js
push
jl
cmp
stos
je
and
loopne
push
or
es
std
cld
push
or
xor
cvtps2pi
xor
fs
rcll
imul
mov
iret
lcall
or
adc
xchg
jp
push
cld
push
clc
int
popf
test
adc
inc
cmpsl
cld
stos
ss
icebp
rolb
jno
push
into
cmp
xchg
stc
ja
lret
sahf
add
scas
sub
fmuls
and
insb
cmp
cmp
cltd
movsl
ss
and
mov
xor
dec
jecxz
inc
or
xchg
cmp
xchg
fldl
dec
nop
mov
xor
inc
adc
cmpl
dec
mov
fcomi
iret
pop
or
divb
mov
out
mov
pushf
pushf
jo
add
outsb
roll
push
dec
jle
dec
aam
dec
dec
dec
hlt
mov
xor
enter
pop
lret
dec
push
stos
jae
rclb
or
popf
jp
cmp
mov
das
jle
jbe
das
fistpl
pop
jne
test
daa
in
xor
fdivs
shl
stos
rcl
mov
lea
cltd
pop
lock
cld
loop
inc
jno
aas
sub
add
lret
ss
popa
scas
hlt
cld
or
push
push
test
adc
cwtl
sbb
cltd
or
mov
push
or
dec
stc
jecxz
mov
int
popa
adc
loope
or
jae
mov
push
imul
loop
xor
imul
leave
and
pop
mov
mov
testb
hlt
subl
sub
lret
push
dec
sbb
jle
cmp
dec
lods
loop
addb
and
cmp
xchg
add
xlat
faddl
xor
icebp
loop
fildll
mov
lods
test
lea
sbb
imul
pop
jno
dec
xchg
pushf
sbb
xchg
mov
inc
jl
out
pop
cwtl
rcrl
dec
ss
ljmp
sbb
push
and
cmc
or
clc
push
cltd
gs
cmp
movsb
lret
sub
outsb
in
das
adc
mov
int
cld
sbb
push
int3
cs
pop
add
loop
jge
inc
call
lods
pop
sbb
fdivl
xlat
xchg
js
int
inc
xchg
or
je
add
add
cmp
jb
sbb
push
clc
xor
mov
sbb
cmpsb
cli
mov
movl
mov
xorb
test
cmp
push
pop
ljmp
and
sbb
ret
jp
stc
repz
cltd
or
sub
cmp
std
movsb
dec
jle
outsb
out
inc
mov
in
mov
and
jne
out
popa
adc
adc
or
jmp
in
ficomps
aam
ss
mov
leave
xchg
jge
mov
out
lods
xchg
pop
mov
popa
out
push
sub
aas
loop
pop
and
xchg
inc
sbb
push
jne
enter
mov
jae
and
inc
inc
pop
bound
pop
repnz
outsl
cld
das
fmuls
mov
sarb
cmovnp
sbb
lret
pop
in
xor
fxch
or
outsb
sti
push
pop
addb
mov
mov
std
or
sbb
outsb
and
stos
adc
push
leave
mov
jecxz
ja
and
mov
pop
lods
dec
dec
jbe
out
fs
nop
push
push
mov
push
in
fldenv
lds
cld
shll
ja
fimull
push
out
imul
fsubr
divl
int3
inc
push
and
insl
addl
arpl
push
jp
addb
ja
xor
aad
push
loopne
mov
aam
xchg
into
jp
inc
out
dec
mov
pop
aam
jno,pt
addr16
xor
mov
inc
push
mov
imul
cli
filds
jb
mov
push
and
lods
dec
popf
lahf
fs
popf
repz
jae
pushf
and
push
cld
xor
test
insl
sti
mov
mov
pop
pushf
xor
in
mov
inc
fs
hlt
jo
ficoml
jp
hlt
and
jne
xor
aas
jb
shlb
cmpsl
aad
das
mov
mov
jae
mov
negb
addr16
nop
mov
push
push
xor
sbb
xchg
jp
jmp
std
xchg
lea
rorb
push
cmp
js
xlat
sti
jg
push
xlat
jp
dec
push
ss
push
test
mov
cmp
repnz
das
pop
movsl
jnp
xor
and
sub
mov
sbb
movsl
cwtl
rcll
jno
lea
fldl
rolb
xchg
ja
and
add
cmp
outsl
or
insb
sbb
and
sub
cmovns
mov
leave
pop
dec
xor
fs
pusha
cmpl
xor
loope
lds
and
hlt
fildl
jle
inc
jge
mov
or
jg
mov
or
push
pop
sub
cs
jno
lcall
lock
dec
lock
jns
dec
xchg
add
scas
or
mov
fwait
add
enter
pop
jne
mov
loopne
imul
ret
je
ds
repz
sbb
out
sbb
lret
mov
cmc
dec
mov
push
jg
sti
push
push
aas
shl
xchg
xchg
xchg
mov
jae
mov
pop
pusha
or
std
adc
inc
in
gs
sub
xchg
or
sbb
xor
cltd
mov
push
sub
jp
pop
fincstp
insb
inc
pusha
loope
xor
mov
mov
push
jns
scas
jnp
mov
push
cmp
sarb
xchg
mov
popa
mov
nop
sbb
xor
arpl
push
xchg
scas
adc
xchg
sub
test
loop
mov
popa
andb
sub
inc
das
outsb
daa
test
adc
sbb
inc
cmpsb
pop
lock
xor
xchg
jo
insl
lret
pop
leave
mov
enter
les
popf
push
lds
adcl
xchg
leave
cmp
xchg
pop
sbb
xchg
xchg
pop
bound
jns
and
dec
scas
mov
jp
pop
decb
insb
cmp
sbb
sarb
sahf
dec
push
subb
adc
add
push
dec
xor
jl
mov
sub
out
jmp
js
loope
or
ja
rorl
lds
xchg
sbb
inc
out
pushf
add
or
xor
pop
xchg
lcall
inc
out
in
pusha
decb
dec
cmp
push
nop
push
pop
fwait
or
jno
push
in
int
lods
adc
and
lcall
xor
pop
adc
inc
sbb
lahf
or
sub
sbb
mov
mov
or
mov
out
push
int3
and
mov
jo
mov
icebp
xchg
enter
hlt
push
incb
sbb
mov
test
jg
dec
fisttpl
xor
sub
int
mov
dec
shlb
mov
ja
ljmp
push
movsl
shrl
cvttps2pi
ret
push
sbb
jl
rolb
xor
jecxz
shll
xchg
xchg
xor
fstpl
push
cmp
mov
imull
fcmovb
bound
xor
cmpsl
mov
pop
push
in
aad
sub
jmp
and
mov
dec
pop
aam
ja
in
add
xchg
inc
fnstenv
pop
inc
xor
ret
pop
imul
sub
fbstp
daa
mov
test
jbe
bound
mov
cltd
add
outsl
out
mov
inc
push
cltd
outsl
jmp
fwait
popa
jnp
adc
stc
push
jbe
or
add
lods
sub
push
and
mov
inc
mov
lock
mov
lods
cwtl
stc
adc
outsb
add
das
cmpsl
and
xchg
enter
cmc
cmp
and
or
mov
jne
movsl
dec
in
add
pop
hlt
pop
jb
push
dec
insb
cmp
jno
stos
stos
adc
sub
mov
jge
pusha
cmpsb
xchg
inc
mov
pop
outsb
push
or
xor
je
subl
popf
xchg
xor
decb
jnp
mov
adc
imul
sti
ss
mov
pop
xor
stc
loopne
sub
les
mov
das
dec
adc
mov
mov
inc
cld
fisubrs
dec
xorl
outsb
nop
iret
mov
mov
inc
orb
inc
adc
fwait
incb
out
adc
sahf
test
das
lea
add
jno
pusha
sbb
mov
movsb
and
mov
xchg
mov
loopne
add
stc
sbb
loopne
fstps
and
fmul
mov
dec
cli
iret
sahf
fdivl
rcll
dec
adc
xchg
aam
mov
cmc
data16
xchg
xchg
mov
dec
or
mov
xor
push
leave
test
ss
jg
jb
xor
xor
out
inc
jne
pushf
jnp
inc
movb
ja
ds
mov
cli
sbb
add
xchg
mov
rclb
sbb
cmp
ja
ret
mov
incl
cli
fs
roll
fsub
inc
loope
popf
inc
xor
cmp
xchg
xor
nop
icebp
adc
lea
jl
das
addb
sti
xor
repz
icebp
pop
fsubl
dec
xlat
push
jb
rorl
lods
outsl
inc
jle
dec
xchg
xchg
lea
adc
lock
push
push
mov
xchg
les
xchg
lret
mov
xlat
add
add
pop
adc
push
lret
cmc
fsubp
pusha
sub
mov
rcr
js
xor
pop
loopne
push
and
dec
mov
adc
and
imul
lods
out
add
mov
mov
inc
xchg
jmp
push
lds
lcall
jmp
lret
aas
mov
rcrl
in
popf
insl
lret
or
loope
adcb
out
inc
push
lods
fisubrs
fidivrs
mov
jp
add
jns
mov
push
popa
sbb
fwait
arpl
les
ja
cmp
or
mov
fildll
es
cwtl
rcr
data16
xchg
sub
mov
das
decb
stos
inc
inc
pusha
imul
or
mov
fimuls
andb
stos
mov
jmp
addr16
jnp
fs
popa
dec
imul
test
data16
lods
sbb
cmp
sbb
push
ljmp
pushf
or
jg
fstpt
sti
jno
testl
ja
mov
test
pop
push
imul
jno
jp
ljmp
lret
hlt
jae
or
inc
xor
imul
push
pop
jge
xchg
repz
or
mov
or
jne
push
and
into
push
sub
jecxz
sahf
pop
pusha
inc
test
ret
lcall
aaa
stos
jge
ret
sbb
sbb
stos
lret
test
js
mov
pop
cmp
dec
setno
adc
fsubs
pop
fstpt
inc
insl
jge
aaa
fldenv
xor
jb
cmpsl
or
jle
movsb
adc
out
int3
popa
les
fcomps
sbb
push
mov
jmp
fstl
std
inc
neg
and
roll
cmp
sti
in
lret
cmp
dec
jg
jnp
cltd
mov
shl
xor
les
push
inc
add
push
imul
lahf
cwtl
inc
popf
int3
mov
mov
hlt
sbb
ret
push
pop
cmc
mov
fidivrl
clc
outsl
jg
xchg
ret
sub
push
sub
adc
or
sbb
inc
jge
xor
cmp
mov
sarb
out
or
pop
xor
jbe
adc
aas
and
pusha
push
hlt
test
push
xor
not
jb
leave
xchg
and
repz
frstor
in
mov
mov
jns
push
jmp
daa
call
or
pusha
cmp
les
push
adc
cmc
out
mov
arpl
dec
mov
adc
add
hlt
gs
stc
cmpsl
adc
out
mov
test
iret
inc
rsm
push
rorb
and
sahf
fistpl
xchg
adc
xor
xchg
mov
mov
jg
cmpsb
aam
mov
dec
pop
jg
ljmp
sti
pop
aam
fsubp
adc
adc
out
mov
jg
xchg
in
rorb
popf
sbb
jl
pop
aad
xchg
push
jo
xchg
ss
xchg
xor
inc
lret
xchg
aas
pop
adc
mov
dec
pop
arpl
repnz
inc
sub
mov
dec
ret
xchg
pop
fdivs
jmp
scas
cwtl
pushl
push
or
imul
les
loopne
mov
mov
push
push
cltd
mov
lret
lcall
daa
test
ret
push
add
outsb
pop
mov
fs
std
lds
out
fst
ret
in
sub
hlt
cmp
sub
mov
or
add
mov
jo
mov
xchg
movb
jb
fwait
bound
mov
xchg
inc
sbb
fimull
addl
mov
mov
or
push
push
ljmp
lods
pop
repz
and
mov
and
sahf
pop
push
jo
jb
sbb
imul
jl
pop
push
clc
cmpsl
push
je
subl
dec
out
dec
mov
adc
mov
nop
pop
arpl
sbb
push
jecxz
adcb
fistpll
mov
mov
sbb
sbb
int3
clc
daa
add
push
pop
dec
sbb
mov
sbb
pushl
mov
push
pusha
sub
jl
loopne
add
ficoml
ret
push
mov
imul
pop
rcrl
in
iret
bound
out
xor
jp
jbe
sti
mov
daa
xchg
xor
pop
xchg
fidivrl
mov
push
mov
outsb
into
loope
or
mov
mov
xchg
inc
sub
cld
les
mov
cmc
fisttps
push
sbb
aas
pop
add
out
enter
shll
cmp
cld
or
dec
mov
push
push
cmp
adc
jmp
lcall
and
pop
cmpsl
clc
push
nop
sbb
push
adc
and
add
lds
and
imul
add
fdivrl
icebp
in
test
or
push
lret
pop
add
add
jg
or
sub
dec
sub
push
fcom
int3
aad
bound
rcll
xchg
sub
mov
lods
pop
jl
stc
cli
ret
push
nop
and
mov
es
data16
rclb
mulb
jns
dec
cmpsb
jp
xchg
xchg
shll
or
xor
daa
aaa
sub
std
loop
pop
loop
jge
dec
mov
in
or
add
bound
sub
inc
mov
xchg
pop
int
jb
inc
push
mov
pop
or
mov
inc
aaa
xchg
jo
test
inc
fstps
dec
clc
fldl
dec
adc
mov
ret
mov
cmpsb
lds
lea
idivl
sar
lock
xchg
jo
in
mov
and
daa
jb
xor
xor
inc
sub
fisubs
lahf
iret
les
jecxz
cmp
dec
insl
incl
mov
adc
adc
mov
loopne
imul
notb
idivl
jg
pop
pop
xchg
fmull
adcb
inc
out
andl
jbe
sub
sub
or
adc
rcr
mov
lcall
pop
das
lret
out
repnz
jg
mov
popa
dec
arpl
xchg
mov
push
and
cld
push
dec
out
cli
inc
jg
sbb
flds
test
cs
inc
shll
sub
xchg
popf
stos
lret
iret
scas
ret
xor
jmp
rclb
mov
inc
mov
jecxz
sub
es
and
adc
test
jge
and
popf
jo
lods
push
adc
enter
fldenv
lods
sbb
jbe
aas
out
pop
sahf
fwait
test
jmp
sbb
ret
cmpsl
or
andl
ja
fisubrs
jecxz
call
cmp
jp,pt
pop
sbb
dec
xchg
lea
fdiv
mov
inc
fisttpll
iret
out
lods
push
xchg
js
cmp
xchg
testl
add
adc
inc
rorl
nop
mov
repnz
or
stc
mov
inc
sub
jb
add
arpl
sbb
xchg
sbb
in
push
adc
shl
mov
push
mov
mov
push
stc
push
repz
aaa
sbb
clc
inc
lret
stc
rol
add
mov
sbb
lods
gs
in
rolb
mov
push
mov
mov
mov
mov
xlat
xchg
xor
lock
xor
pop
jecxz
pushl
ficompl
adc
or
and
addr16
filds
add
pop
xor
jge
in
lock
xor
inc
test
add
test
pop
jecxz
pop
mov
xchg
jo
jo
push
pop
pop
aad
or
movsl
push
sahf
mov
cmc
in
cmc
data16
jg
add
mov
xchg
jb
adc
loope
cmpsb
and
clc
test
pop
fistpl
and
icebp
stos
xchg
cwtl
sub
mov
call
aaa
rclb
mov
sub
dec
pop
mov
jbe
inc
in
testl
ja
sbb
add
sub
xchg
in
nop
ja
sub
inc
jae
test
pop
sbb
mov
add
dec
jne
mov
cwtl
sbb
cwtl
push
xor
mov
adc
rcll
add
cmp
and
scas
lock
jle
dec
clc
jmp
dec
roll
jae
xchg
mov
cmp
lods
push
icebp
mov
sbb
add
jmp
mov
jae
pop
lods
xor
sbb
xchg
cmp
insl
test
adc
pop
jp
shl
inc
and
repnz
mov
cmc
add
sti
jns
roll
ja
sbbl
inc
sub
mov
pop
push
setns
bound
mov
inc
jnp
pusha
mov
sbb
out
int
repnz
imul
adc
jp
pushf
daa
data16
sbb
sub
les
rorl
add
jo
mov
hlt
call
movl
cmp
movb
stos
push
and
sub
cli
pop
dec
shl
fcomps
jmp
and
add
sub
and
xchg
lods
loop
push
mov
lcall
pop
xchg
lret
in
mov
adc
xchg
xor
pushfw
mov
loopne
scas
js
pop
loope
imul
test
fdivl
adc
popa
std
mov
xor
in
popf
jbe
fidivs
pop
mov
jne
xchg
mov
pop
lock
pop
push
push
or
lods
adc
and
mov
add
pop
push
out
mov
sbb
mov
push
iret
gs
adc
mov
and
loop
in
movsb
dec
xchg
andb
and
enter
xor
sahf
clc
cmpsb
shl
lods
loope
push
std
inc
mov
enter
rcll
ret
dec
cmp
push
sbb
jmp
mov
popf
mov
jb
mov
stos
into
bound
lcall
pushf
lds
xchg
lret
stos
lods
push
vpsrlw
gs
jno
and
addr16
insb
addl
dec
push
mov
fidivs
add
pop
cld
xor
sbb
cmp
pop
rol
ret
ljmp
fcomp
push
push
es
test
xchg
test
or
xor
into
dec
xchg
aas
sbb
clc
mov
mov
ljmp
inc
pop
insb
sbb
mov
sub
jbe
mov
andb
dec
sbb
and
cmp
pusha
imul
add
mov
push
arpl
inc
pop
pop
out
xor
and
lods
xor
mov
daa
cld
cld
dec
sbb
dec
repnz
insl
jmp
in
mov
push
jo
fs
std
mov
dec
push
das
xchg
sbb
mov
adc
jle
ja
mov
xor
into
adc
inc
add
jmp
inc
sbb
pushf
dec
mov
sub
in
int
mov
inc
jmp
push
add
lea
pushf
dec
iret
inc
sbb
into
addb
lret
jmp
dec
push
mov
fdivrs
mov
inc
shlb
pop
inc
xchg
inc
push
popf
mov
enter
push
dec
dec
dec
or
imul
in
scas
mov
cld
fld
iret
ljmp
adc
in
js
dec
dec
xor
mov
inc
pop
imul
hlt
out
popf
adc
stos
xor
xor
cmc
ret
jp
mov
xor
enter
lea
scas
lret
and
mov
aad
xchg
scas
mov
inc
stos
xchg
pop
sbb
shrl
lret
xchg
xchg
into
ret
xor
jl
mov
je
das
pop
and
les
sub
lret
adc
es
icebp
movsl
xchg
and
int3
cmc
sub
pop
inc
stos
dec
mov
movsb
imul
mov
xchg
jb
mov
add
cld
in
xor
mov
psrlq
daa
fldl
rol
insl
sub
add
mov
outsl
repz
push
clc
pop
inc
lcall
pop
xchg
pop
mov
dec
add
xor
cmp
xchg
sub
scas
cmpsb
rcr
imul
rcrb
out
sub
or
cld
cs
fidivl
leave
push
jmp
dec
test
mov
sbb
mov
push
aam
xor
cmpsl
mov
int
mov
push
fldt
in
xorb
bound
repnz
cli
mov
push
mov
outsl
cwtl
dec
dec
lods
inc
mov
jno
ret
mov
mov
inc
call
leave
adc
mov
add
jo
lods
aaa
mov
lods
inc
pop
mov
xlat
daa
dec
xchg
jp
sbb
idivl
mov
mov
pushf
aas
jmp
push
shrb
ds
fwait
mov
cmp
mov
movsb
lock
int
insb
int
sbb
xor
xchg
and
cmp
lea
lods
mov
aad
test
test
insl
negl
mov
pop
rol
push
cltd
aaa
sub
mov
jb
fisubs
mov
and
jp
bound
or
movsl
dec
fs
out
cmp
sahf
rclb
pop
out
jp
inc
dec
mov
int3
cmp
adc
ret
scas
push
mov
fisttps
push
stos
test
xchg
xor
cmpsl
je
in
or
adc
xchg
push
push
xlat
push
loop
or
daa
or
adc
mov
mov
outsl
xor
fwait
int3
sbb
sbb
les
in
add
repz
aaa
xchg
jno
mov
negl
cld
jp
stos
and
aaa
scas
loop
jnp
orb
dec
cmp
and
or
lret
jge
fdivp
pop
inc
fs
inc
xor
in
dec
sub
sbb
mov
aas
jp
add
hlt
xchg
inc
adc
and
fbstp
pop
mov
push
divl
sub
roll
lock
sti
fidivrs
push
jp
enter
mov
test
push
shlb
test
cmp
jmp
lahf
inc
or
aam
inc
in
push
pop
and
xchg
jmp
scas
bound
mov
or
mov
fsubr
notl
scas
adc
mov
ss
xor
xchg
mov
inc
ret
repnz
cmp
xor
lret
shrl
mov
mov
mov
mov
lock
push
std
aaa
popa
into
cmc
mov
loope
or
repz
add
cld
mov
mov
int3
out
hlt
dec
inc
lret
xchg
aas
inc
jp
cs
cmp
lahf
in
arpl
repnz
jbe
mov
cmpsl
and
push
cmp
mov
data16
test
jno
dec
jb
inc
cmp
mov
rorb
jb
shl
bound
lcall
jl
jle
pop
jnp
pop
sbb
sub
cld
into
js
das
dec
mov
mov
jbe
xlat
xchg
add
mov
adc
inc
loop
mov
out
ss
out
xlat
ret
pop
xlat
mov
ds
cmp
lds
orl
dec
addr16
mov
cmp
pop
pop
arpl
jg
out
mov
andl
inc
enter
lock
mov
insb
xchg
stos
jp
ret
xor
jmp
stc
cld
lock
rcrb
cwtl
aam
cld
arpl
aas
and
mov
in
mov
sub
loopne
sub
add
mov
inc
xchg
mov
xchg
cltd
xor
movsb
mov
jp
or
and
testl
in
mov
add
adc
addb
jge
ret
shrl
xchg
push
lds
cld
push
movsl
ja
dec
cmpsl
jecxz
mov
fucomip
daa
mov
fidivs
out
xchg
pusha
notl
jmp
adc
adc
js
push
mov
xchg
pop
or
pop
loope
fistpll
arpl
adc
imul
or
pusha
jnp
loop
sub
movsb
mov
in
ror
outsb
test
xchg
aad
or
sub
inc
mov
pop
jg
push
ja
dec
insl
jne
jp
cmp
lret
and
jo
repz
insb
push
push
mov
test
jb
adc
shlb
pop
jmp
fmull
insl
jge
pop
xchg
cmp
das
jne
xchg
test
sub
xor
mov
fsubs
cmovs
loopne
cmpsl
inc
out
jmp
nop
jp
inc
cmpl
or
aad
push
lea
jge
fcoms
mov
push
inc
nop
mov
xchg
push
and
pushf
pop
cmp
xchg
mov
stos
nop
jl
dec
mov
adc
mov
xlat
push
push
mov
jp
lahf
pcmpeqd
xchg
fwait
xor
push
repnz
xchg
dec
nop
int3
leave
sbb
push
xor
or
mov
jns
fwait
scas
imul
xor
mov
movsl
sbb
shlb
fisttps
mov
in
movsb
inc
and
cmpsl
mov
add
andl
dec
mov
ja
sbb
mov
in
push
mov
popa
inc
je
adcb
lcall
scas
lret
ret
fistpll
in
jle
adc
lds
inc
into
aam
icebp
or
pop
movsl
insl
pop
jnp
jae
ss
pop
pop
mov
cmpsl
jne
jl
pop
js
cmp
les
jge
pop
add
test
stos
pushf
and
out
or
push
int
pushf
divl
test
and
aaa
sbb
xchg
cmp
sti
rorl
ret
test
push
mov
cli
inc
sub
dec
jne
shl
fstpl
int
mov
or
add
sub
mov
jge
inc
xlat
lock
hlt
push
adc
jb
js
and
push
push
fcmove
and
pushf
subl
fs
shll
jp
ja
test
cmp
iret
hlt
aam
push
enter
inc
cwtl
idivl
sub
or
sbb
jae
sbb
sbb
cmp
out
popa
sbb
pusha
push
stos
pop
sbbb
xchg
lods
neg
fimull
jecxz
sysexit
lret
mov
add
add
sbb
mov
and
pavgw
gs
fbld
cmp
xor
insl
cmc
sbb
int3
je
adc
add
gs
pop
rol
aaa
jns
push
inc
andb
enter
sbb
fnsave
jecxz
cs
push
jnp
xchg
adc
out
adc
aam
push
lcall
bts
sti
sbb
and
jl
imul
cmp
sub
sti
cli
adc
mov
call
rorb
stos
test
inc
jl
pop
pop
pop
mov
push
mov
das
sti
test
jno
pushf
mov
jb
fwait
pop
push
or
mov
outsl
mov
sbbl
stos
scas
pop
rcrb
jge
sbb
push
or
mul
ja
pop
mov
sub
lods
and
jecxz
dec
sub
cmp
xchg
aad
mov
sbb
or
xor
fimull
out
and
sbbb
mov
xlat
or
aas
out
stos
fidivrl
xor
jo
cmp
enter
cli
or
popf
push
pop
out
jns
and
js
lea
adc
adc
sbb
es
add
outsl
pop
pop
and
fnstsw
insl
or
inc
sbb
jo
ret
pop
cmc
xor
call
mov
pop
lods
shr
push
std
cld
mov
cs
andb
cmc
ja
sti
cli
add
and
or
adc
insb
aas
pushf
ret
jge
es
pushf
outsb
repnz
movsl
mov
scas
push
mov
cmp
das
mov
xchg
jbe
inc
les
lea
dec
push
add
pop
scas
sahf
test
test
fnstenv
out
test
dec
inc
je
push
pop
inc
and
mov
int
cli
fldz
arpl
mov
sub
adc
clc
add
mov
fisttpl
popa
inc
push
pop
push
ds
cmc
cld
xchg
loope
pusha
out
cwtl
adc
add
pop
aas
int3
sbb
std
mov
dec
or
mov
sub
ficompl
je
xor
shr
push
arpl
arpl
mov
sarl
enter
movsb
rol
in
lret
scas
xor
sub
loopne
sbb
lods
jmp
xor
add
popa
andb
jb
pop
inc
xor
xchg
cld
sar
mov
adc
push
cli
out
adc
xchg
push
and
enter
add
and
jp
cld
in
cld
outsb
roll
scas
jo
or
pop
adc
mov
sub
mov
jno
les
loopw
sub
jbe
sub
std
push
cwtl
mov
xor
dec
sub
rclb
mov
pop
sti
mov
sub
fdivl
mov
mov
cmpsb
rcrb
fnstenv
fprem
pop
mov
pushf
divb
xorl
testl
aaa
pop
mov
negb
xor
shll
das
rcrl
out
push
cld
pop
pushf
mov
adc
pop
call
sub
subl
cld
push
orl
xor
mov
and
sbb
loope
clc
pushf
fdivs
cmpsb
sti
jle
sbb
test
mov
js
jb
cmp
cmp
lret
mov
pop
jns
push
sub
aaa
sub
and
mov
or
pop
mov
in
cmc
mov
loope
cmp
mov
leave
mov
adcb
mov
lret
inc
lods
test
js
cmp
movsl
data16
xor
test
nop/reserved
addb
sub
mov
mov
scas
pusha
call
cmp
jnp
and
dec
movsb
call
xchg
mov
lea
bound
cmp
or
ret
jecxz
cmp
enter
xchg
cmp
ds
xchg
orl
jle
rorb
and
rorl
add
pushf
inc
jnp
push
adc
sbb
adc
cmpsb
fbld
xor
pop
mov
test
push
inc
mov
in
movsl
insl
roll
or
mov
loop
dec
inc
rclb
or
xor
imul
fwait
xor
dec
mov
jae
cmp
jnp
icebp
lahf
inc
mov
jb
fs
pop
sarb
jmp
jecxz
pop
hlt
mov
cli
gs
idivb
jmp
out
stos
ljmp
mov
adc
dec
adc
insb
mov
icebp
int
addl
lds
mov
bound
mov
ret
and
mov
xchg
mov
mov
add
clc
jle
xchg
push
jo
jp
jg
xchg
push
out
push
xchg
mov
jecxz
ja
ss
pop
add
pop
or
movsb
repz
adc
popf
into
push
push
inc
mull
pop
jp
jl
push
test
jp
shl
adc
inc
adc
cmc
shrl
push
jecxz
scas
inc
or
push
mov
ficoml
inc
sub
test
push
xchg
cmp
cmpsb
test
xchg
mov
movq
sub
xor
adc
mov
mov
mov
cmovbe
xor
iret
je
cmc
test
add
sub
test
and
jecxz
adc
mov
stos
pop
test
pop
adc
adc
arpl
dec
ret
repnz
pusha
mov
insl
mov
and
mov
xor
fwait
adc
lock
loop
fwait
aaa
mov
push
xor
jns
shr
sub
mov
push
scas
sahf
adc
sbb
sbb
push
movsb
sub
int3
insb
sub
add
popfw
cmp
fcomi
and
fwait
ds
cmpsb
push
cmp
sahf
test
outsl
pop
xchg
mov
arpl
inc
jno
pop
push
testl
push
lcall
or
jg
push
mov
mov
out
adc
into
inc
iret
popl
cmpsl
add
jg
push
lods
xor
xchg
pop
aaa
add
in
push
jmp
cmp
dec
or
cmp
les
pop
loop
mov
mov
pop
lcall
xchg
jle
push
jns
push
jl
loop
mov
pop
aaa
mulb
cld
xcrypt-ofb
cmpsl
in
mov
adc
dec
push
subl
in
mov
xchg
stos
and
in
in
inc
xchg
outsl
outsb
popl
int3
aas
loop
add
cmp
sub
mov
out
inc
jns,pn
lods
cmp
outsb
cmp
xor
mov
cmp
xchg
je
int
cld
mov
cmpsb
xchg
mov
and
adc
scas
fldl
scas
or
dec
xor
cld
mov
cmpsl
loop
pop
and
cmpsl
in
into
sahf
stos
mov
int3
mov
adc
lock
push
fbld
push
in
lahf
pop
mov
ja,pt
shll
and
in
jle
or
repnz
popf
ret
mov
ret
or
dec
jmp
into
dec
or
cmpsl
insb
in
add
and
int
cmc
adc
aam
mov
mov
adc
mov
or
movsb
fsubrs
add
mov
outsb
insb
xor
insl
cmp
push
cwtl
data16
ja
test
jl
xchg
mov
loope
imul
pop
ret
lahf
les
jbe
loop
fxch
mov
cmpsb
outsb
push
gs
cmp
cmpsl
add
sbb
xchg
mov
fmull
inc
adc
xchg
in
sbb
mov
pop
add
sub
lcall
and
and
shrb
rolb
loope
popa
xchg
std
clc
inc
mov
fbld
lods
and
push
sub
sub
sbb
iret
cwtl
mov
vpaddsb
pop
add
mov
xor
cmp
inc
xchg
cli
jmp
dec
jns
dec
or
daa
pop
cmp
dec
sbb
arpl
dec
cli
pop
jmp
pop
or
and
fxch
mulb
xor
sbb
jnp
mov
jns
mov
test
ja
shll
arpl
rol
mov
inc
add
addr16
pop
xchg
pop
inc
ss
cld
cmp
push
sub
fisubrl
jmp
iret
hlt
mov
adc
inc
and
andb
adc
adc
das
sub
xchg
mov
orb
loopne
jmp
xchg
and
cli
insb
fildll
in
sbb
shl
repnz
cwtl
pop
xor
push
mov
pop
sub
loope
push
gs
aad
inc
mov
push
sbb
and
jecxz
cmp
jl
int
addr16
sbb
shl
inc
xchg
sbb
rolb
push
jnp
mov
and
dec
pop
cmp
xor
push
movsl
mov
xor
shlb
mov
jb
push
insl
xchg
mov
cmc
fwait
xor
jns
dec
pop
add
sbb
pop
pop
nop
fs
mov
dec
pop
ret
insb
sub
xchg
or
and
mov
ja
jecxz
push
aam
dec
lret
fdivs
and
lock
sub
add
jp
sarb
dec
ljmp
pop
popf
mov
push
mov
fsub
xchg
lahf
gs
aad
nop
mov
or
es
pop
cld
ja
jno
mov
sub
ret
sahf
xor
bound
sub
fs
mov
sbb
jno
xlat
lea
fidivl
pop
cmp
cmc
pop
cltd
pushf
sbb
ljmp
adc
xorb
inc
addr16
inc
or
and
jb
and
stos
aad
leave
lcall
in
lods
mov
int3
jecxz
hlt
pop
sti
inc
dec
pushf
cld
test
push
xchg
xchg
mov
or
loopne
xchg
lret
ret
push
jo
inc
mov
int
cltd
cmp
jle
fsts
out
or
mov
pop
pop
aas
inc
sbb
or
fwait
dec
sbb
lock
xchg
in
pushf
sbb
cmp
or
lods
insl
push
sbb
in
and
lds
push
cltd
pop
aaa
ja
push
fdivrl
gs
cwtl
cli
sub
add
flds
bound
in
adc
test
xchg
pop
test
mov
mov
imul
loope
inc
cmp
popa
xchg
sub
lcall
sbb
rorb
jnp
sbb
inc
jg
sub
or
call
movsb
mov
cmc
nop
mov
add
cltd
es
xor
repz
out
lahf
or
int3
dec
aas
sbb
negb
arpl
adc
add
lods
xchg
jg
loopne
loope
jmp
dec
aaa
data16
mov
sbb
jle
cmpsb
lock
dec
jp
push
dec
sbb
push
push
inc
sub
mov
leave
lock
pop
daa
and
mov
les
out
dec
int3
pushf
sub
lret
insl
jnp
test
jno
stos
cmc
cwtl
int3
ds
jb
xor
adc
loopne
jnp
rcrl
xchg
leave
nop
jg
or
out
mov
shll
inc
mov
imull
and
js
inc
cs
out
cmp
mov
rcpps
test
repnz
or
rolb
pop
mov
insl
data16
mov
mov
aam
jecxz
cmc
insl
or
adc
mov
fmuls
or
jge
push
insl
addr16
in
and
inc
outsl
mov
xor
out
or
je
adc
cmp
cmp
jo
add
sbbl
stc
mov
sbbb
mov
push
xchg
sti
xor
inc
cmp
scas
jae
jmp
cmc
fbld
loopne
pusha
sub
rolb
inc
fcoml
xor
repnz
sbb
std
clc
insb
sub
inc
mov
insb
mov
cli
shlb
mov
mov
inc
in
aaa
mov
mov
adc
cmp
out
outsb
pop
and
jb
or
xor
adc
and
aaa
push
push
mov
pop
movsb
pusha
sbb
xor
cmpsb
shll
or
or
ret
push
out
aaa
lods
xchg
enter
xchg
test
xchg
out
push
mov
in
jmp
clc
jl
testb
dec
out
jg
sbb
and
sub
ja
repz
mov
adc
iret
and
sub
inc
or
and
movsb
pop
out
lahf
pop
rcll
sub
cmp
icebp
cli
in
add
mov
call
mov
repnz
jle
leave
mov
or
in
out
push
push
sti
xor
jmp
lock
mov
insb
pop
pop
ja
mov
out
lcall
adc
cmc
ja
ret
mov
scas
mov
mov
test
andb
gs
lret
and
cld
push
aad
inc
es
mov
cmpsb
mov
pop
pop
xor
mov
rorl
or
jl
xchg
sbb
ja
mov
testb
cwtl
mov
cld
daa
mov
shrl
xchg
sahf
lcall
push
loop
cltd
add
add
xchg
add
das
sbb
aas
add
push
roll
nop
ljmp
pusha
inc
pushf
add
jl
les
dec
sahf
push
xlat
jne
or
mull
stos
call
loopne
push
dec
jl
add
xor
xchg
mov
js
bound
outsl
push
popa
test
mov
fsubs
mov
jbe
push
loopne
dec
or
dec
mov
mov
and
and
cmp
push
xor
dec
mov
mov
dec
add
orl
xchg
mov
divl
ja
adc
dec
div
fldt
es
ret
subb
sahf
les
xchg
addr16
dec
and
data16
repz
loop
rorl
xor
out
leave
mov
xor
or
mov
lea
frstor
and
into
jne
subl
in
insl
adc
add
clc
push
add
int3
adc
xor
in
ljmp
sahf
mov
pop
sub
mov
gs
into
fadds
inc
xor
addr16
adc
sub
xor
mov
dec
pop
and
daa
addb
mov
inc
mov
add
dec
jmp
mov
xchg
push
and
push
aas
xchg
pop
fs
pop
push
push
iret
jecxz
sub
push
pop
ss
pop
shrl
mov
sbb
or
outsl
adc
ja
repnz
adc
out
and
push
divl
or
scas
mov
stc
fisubl
stc
cwtl
mov
shll
setg
mov
xor
add
repnz
mov
out
jecxz
and
jo
dec
jp
mov
pop
adc
adc
push
popf
pusha
mov
inc
or
mov
ret
push
mov
push
scas
inc
fsubl
adc
call
mov
lret
mov
popf
mov
test
inc
xchg
outsb
sub
addr16
inc
sub
scas
ljmp
push
movsl
inc
push
stos
imul
out
xchg
nop
mov
scas
xchg
xchg
movsl
xchg
jmp
fwait
sub
in
xchg
in
mov
movsb
dec
inc
or
stos
and
fwait
mov
sub
and
shll
jnp
decl
and
loope
pop
lret
ss
push
rolb
dec
insb
cmc
scas
ret
loop
push
mov
xor
xor
sbb
loope
daa
inc
leave
clc
sbb
mov
mov
push
repnz
fsubrp
ret
ja
jge
cmp
imul
shlb
push
movsb
popf
test
rorl
jp
mov
lds
mov
leave
cli
sbb
xor
jmp
dec
mov
mov
xorb
cmp
pop
shlb
mov
dec
push
xchg
loope
movsb
and
adc
inc
add
sti
push
mov
pop
and
jp
cmpsb
mov
mov
repnz
ljmp
in
nop
stos
imul
dec
push
sub
add
stos
xor
xor
fisubrl
roll
sarb
jae
pop
pop
fildll
and
lcall
mov
cs
xor
mov
pop
xchg
aam
testl
and
ljmp
out
inc
and
scas
pop
outsb
dec
cltd
stc
in
mov
loop
lods
mov
stc
dec
push
dec
insb
lods
and
es
lahf
in
jno
cmp
lcall
mov
insl
popa
xorl
mov
dec
dec
jecxz
inc
ja
sub
xchg
xchg
cs
jmp
mov
xor
jle
ja
das
scas
xlat
popa
push
subl
fsubl
pop
xchg
repnz
les
jb
adc
pop
pop
jb
lock
into
insb
cwtl
dec
add
push
mov
mov
leave
cmpb
js
int
stc
repz
add
in
fildl
and
inc
sub
xor
ja
sbbb
movsl
fcmovb
movsl
jno
xor
rep
mov
xchg
jecxz
ror
and
jo
jnp
imul
push
inc
pop
xor
mov
pusha
sub
fdiv
addl
push
sbb
lret
cmpl
push
pop
xchg
mov
dec
iret
out
jge
fdivrs
push
push
cmc
jle
mov
mov
add
sti
mov
fsubrp
mov
push
xchg
xorl
repnz
icebp
lret
pop
pop
push
sbb
imulb
bound
outsl
popf
cmp
add
lock
or
and
jo
and
add
out
jmp
not
iret
pop
or
mov
cmp
aaa
mov
popa
jne
mov
jp
stos
sahf
lcall
std
shrb
mov
jae
jecxz
or
jle
cmp
fildll
jbe
sbb
xchg
rclb
inc
scas
fdivrs
loopne
lret
test
xor
mov
dec
stos
fists
scas
sbbl
mov
shr
jmp
jnp
adc
stos
icebp
shrl
int
out
in
ljmp
mov
or
fcmovnu
xor
jbe
inc
cli
out
fidivl
mov
setnp
and
push
mov
into
mov
pop
and
sub
push
out
xchg
jl
adc
out
lods
les
aas
sbb
mov
pop
dec
pusha
movsb
push
jmp
shll
cmp
mov
pop
packssdw
and
add
and
sahf
outsl
adc
xor
add
test
out
adc
popa
pop
jae
arpl
lock
jge
pop
sbb
xchg
lds
cmc
xorl
sbbb
push
into
mov
cmp
xor
adc
es
popl
mov
jp
xor
ret
sbb
cmpb
inc
adc
ljmp
mov
push
sub
sub
xchg
mov
das
lret
add
lods
icebp
js
cmpsb
mov
pusha
imul
mov
fstl
test
push
push
pop
div
push
sarb
notb
lods
cli
dec
daa
nop
stc
sbb
addr16
dec
pop
dec
mull
mov
xlat
out
push
cmp
loopne
jnp
stos
movsb
fdivs
lock
xor
stos
xor
dec
hlt
mov
aaa
or
cltd
aas
loopne
push
cmpsb
cmp
test
cmp
icebp
or
push
out
cld
sub
cwtl
in
add
inc
stc
mov
lds
mov
out
dec
fimuls
jb
movl
push
push
stos
or
mov
push
leave
clc
sarb
pop
out
outsl
and
lods
mov
mov
push
and
xor
and
jmp
outsl
test
imul
lcall
inc
popf
sti
cmp
adcl
cmp
mov
xor
popf
xchg
push
call
pop
add
add
sbb
sbb
inc
push
xor
fsubp
movsl
cmpsl
daa
push
jge
pop
push
sbb
mov
leave
push
mov
cltd
xchg
add
inc
jge
mov
fsubrs
dec
leave
sub
pop
out
iret
and
mov
lret
bnd
add
inc
mov
cmc
mov
xchg
or
sub
das
lea
xchg
mov
int3
mov
ljmp
mov
andl
test
das
iret
shrl
inc
xor
push
sub
xorl
rcrb
stos
in
pop
leave
and
scas
xchg
jg
xchg
adc
call
cli
xor
ss
dec
scas
mov
inc
es
mov
push
int
fldl
test
pop
adc
fldcw
add
pop
lcall
pop
andb
jnp
inc
mov
lods
xor
pop
push
push
and
fwait
and
mov
add
es
mov
fwait
test
sbb
jmp
in
mov
repnz
pop
fidivs
stc
xor
mov
mov
pusha
jae
mov
fimuls
aad
mov
mov
jo
sbbb
inc
push
rorb
lds
mov
cltd
mov
hlt
cld
fld
pop
popf
mov
mov
cmp
mov
pop
xor
cs
adc
dec
cmpl
ret
loope
or
adc
dec
in
jl
outsb
jno
out
cmp
cmp
pop
xchg
lahf
sub
mov
bound
and
cmp
adc
mov
idivb
jo
movsb
mov
mov
sbb
sbb
jmp
mov
pop
add
mov
mov
fnstenv
cmp
adc
sbb
sbb
adcl
cmpsl
sbb
jbe
jns
out
add
and
add
cmpsl
ret
int3
subb
repz
stos
jecxz
icebp
mov
mov
sbb
lcall
pop
mov
xchg
mov
and
cmc
jecxz
jg
scas
fldl
add
sub
fwait
push
mov
push
jb
es
push
and
xorl
push
xor
repz
sub
lret
mov
insb
test
xchg
stc
sub
mov
pusha
and
js
pop
xchg
pop
dec
push
add
mov
jg
mov
popa
cmp
addl
shrb
push
mov
dec
mov
sahf
daa
jnp
xor
and
mov
mov
and
lea
outsb
mov
test
xor
ret
sub
ss
test
repnz
out
call
cmp
inc
popa
movsb
enter
lret
inc
dec
test
mov
or
jne
xchg
sbbb
dec
lret
sub
cli
inc
andb
sub
add
loope
or
fists
push
mov
sub
adc
sbb
pop
rclb
rorl
sub
jge
fdivl
loope
dec
pusha
pop
popa
cmp
or
je
in
test
out
mov
jecxz
xor
movsl
mov
aas
jge
shll
and
add
clc
add
xchg
mov
dec
pop
push
fbstp
mov
sub
mov
adc
xchg
jb
aam
xor
or
xor
fdivrs
push
fists
jo
or
repz
lea
test
or
bound
scas
imul
push
jo
arpl
test
aam
std
test
pushf
mov
enter
xchg
pop
pop
in
sub
and
out
mov
xorl
ljmp
lods
dec
shlb
sti
adc
sub
push
jl
out
mov
out
je
sti
mov
aas
lock
jmp
lods
pop
loop
hlt
jmp
test
mov
test
add
out
ret
out
inc
adc
dec
sahf
or
mov
pop
mov
je
push
xchg
xchg
mov
into
fdivs
dec
add
pop
lods
xorl
jp
cwtl
hlt
add
subb
add
fstl
rcrb
lods
xor
clc
xor
std
adc
lds
or
addb
movsl
popa
cli
mov
mov
cltd
xor
mov
push
and
sarl
rorl
jns
xor
mov
iret
fiadds
test
xor
loopne
dec
arpl
cmp
cltd
mov
fwait
pusha
aaa
std
xor
ss
inc
lods
mov
or
out
xor
adc
dec
test
pop
dec
xchg
shr
cmp
iret
test
ss
popa
test
clc
and
xorb
fdivp
xchg
into
jg
adc
jmp
dec
loopne
dec
jg
xchg
ret
and
lea
mov
insb
imul
push
testl
push
mov
sbb
movsl
pop
orb
jnp
push
mov
xor
mov
fdivs
adc
notb
rsm
xor
dec
add
xchg
adc
loopne
lret
int
pop
movsl
pop
sub
adc
mov
xor
dec
or
fcomps
dec
outsb
push
pop
sub
ja
lret
int3
xchg
adcl
out
scas
scas
adc
int3
push
mov
pop
xchg
dec
dec
jo
mov
pusha
loope
scas
add
xor
subl
or
push
divb
orl
loopne
movsb
xchg
test
clc
push
and
sbb
cmp
push
add
sub
mov
out
arpl
data16
push
aaa
jnp
pop
push
pop
mov
inc
divl
addr16
inc
clc
fdivrl
xchg
push
add
in
shlb
int
cmpsl
or
je
push
imul
pop
aas
add
cs
testb
mov
hlt
xchg
sbb
movsb
jo
or
dec
pop
ds
xor
cmp
scas
adc
push
xor
hlt
test
inc
int3
xchg
push
push
push
jg
ja
flds
movsb
mov
jmp
leave
mov
insl
int
imul
mov
xor
inc
imul
fwait
add
pop
adc
in
and
push
movntq
imul
xchg
xchg
in
adc
sbb
pop
inc
sbb
nop
lret
stos
pop
cld
inc
jnp
fistpl
clc
jmp
fs
out
sar
mov
cmp
fsub
cwtl
test
stos
js
and
xchg
xchg
clc
xor
pop
dec
add
cmp
sub
mov
cltd
xchg
rorb
dec
stos
mov
mov
xchg
mov
xchg
fs
mov
sub
xchg
xlat
mov
mov
int3
lcall
sti
sub
and
dec
out
or
sbb
flds
pop
daa
imul
je
mov
ret
and
dec
and
ja
mov
or
jno
cmp
and
cmpsb
sti
ds
test
xlat
mov
dec
adc
orb
sub
jl
es
xor
imul
jp
orb
push
jb
out
inc
mov
imul
shll
das
pop
push
ja
dec
pushf
mov
orl
cmpsb
sbb
xchg
xchg
cmp
jp
pop
shll
adc
adc
cmp
sbb
insl
rolb
out
dec
xchg
pop
cmp
popf
sbb
inc
inc
sahf
jecxz
ret
ljmp
popa
mov
sbb
pushf
cld
fldenv
bnd
lahf
push
lcall
pop
cld
outsb
push
pop
das
xchg
enter
lock
repnz
fmuls
or
pop
enter
sub
push
popf
imul
cwtl
add
lods
imul
sub
arpl
lea
out
push
cmp
mov
mov
test
mov
int3
lock
jge
rorl
lock
outsb
jb
and
xchg
jno
sbb
push
and
call
clc
push
aad
cli
mov
mov
inc
or
movsb
jae
mov
mov
xor
shr
arpl
mov
cmp
inc
les
nop
pop
mov
mov
psrld
lock
and
inc
stos
xchg
pop
dec
cli
cmp
jbe
cmp
js
dec
mov
mov
push
adc
push
fbld
cmp
dec
inc
cli
add
jle
mov
into
lods
ret
ss
jmp
lahf
add
xchg
ficoml
xor
sti
cld
sub
xchg
adc
sub
in
lcall
adc
jno
adc
push
mov
mov
clc
dec
dec
ret
fs
flds
mov
icebp
in
movsb
aaa
or
lods
dec
cmp
enter
add
adc
sti
pop
pop
mov
ret
pop
mov
add
icebp
sbb
mov
call
test
loope
inc
adc
jae
inc
scas
mov
jae
call
pop
jle
repz
or
aaa
sub
and
cmc
inc
jp
mov
call
pop
call
rcrl
xchg
mov
cmp
aaa
decl
sahf
pusha
pop
inc
pop
adc
push
out
push
cli
into
push
and
cmpsb
stos
iret
add
fdivrs
pop
lds
bound
sbb
loope
lods
aas
add
addr16
lcall
xchg
pop
cwtl
fstps
pushf
or
mov
jno
jle
dec
ds
inc
mov
push
shld
and
mov
mov
pop
arpl
popf
pop
lcall
mov
push
push
pop
push
mov
mov
pusha
sysenter
addr16
les
aam
jae
test
dec
jne
sbb
dec
sbb
push
sbb
mov
addr16
sub
ret
lret
and
xor
push
jo
adc
data16
insl
lret
in
add
inc
or
mov
call
std
ljmp
sub
daa
pop
orl
jmp
fldl
jbe
jmp
shrl
or
ljmp
data16
es
sbb
push
jne
std
loop
insl
scas
mov
pop
add
gs
jg
popf
xor
xchg
imul
sub
mov
mov
add
bound
adc
movb
movsb
jns
movb
out
jae
sub
push
dec
lods
mov
sbb
test
xchg
push
lods
sub
nop
cmp
mov
stos
xchg
xchg
xchg
push
fadd
repnz
jmp
xor
inc
pop
jmp
scas
mov
sub
test
and
mov
sbb
daa
bound
incb
dec
mov
mov
sub
add
jmp
dec
testl
stc
push
bnd
cmc
mov
or
mov
in
push
dec
sbb
fldl
loop
jg
lret
inc
stc
xor
fwait
sbb
in
mov
fwait
stc
sbb
jmp
lret
jl
inc
sbb
pop
jnp
hlt
or
adc
rorb
add
imul
lock
pcmpeqd
jo
je
dec
in
mov
or
adc
cmp
repz
cmc
xor
and
lods
aad
mov
ss
iret
daa
mov
test
fdivrs
fsubs
mov
inc
lahf
jecxz
test
hlt
sub
sahf
fwait
sbb
mov
scas
dec
push
in
std
sti
in
xlat
pop
mov
mov
enter
fs
xlat
out
xchg
andb
pushf
xchg
xor
in
repz
testl
aaa
dec
cmpl
addl
decl
inc
sub
adc
sub
and
push
jmp
rclb
icebp
xchg
sbb
js
inc
repz
mov
add
xchg
lahf
js
enter
add
lds
stc
lea
dec
mov
sbb
xchg
xchg
insl
xor
outsb
arpl
sub
xchg
test
inc
mov
mov
fcmovu
sbbb
add
xor
add
jmp
pushf
out
cmp
lahf
or
dec
daa
xchg
movsb
and
pop
cmp
jns
inc
movsl
mov
sbb
into
push
dec
fmull
mov
stos
in
xchg
dec
xchg
rorl
loope
sub
aam
in
in
sub
mov
insb
andl
mov
lret
adcl
inc
adc
rorb
jmp
stos
data16
push
sub
sbb
sbb
clflush
aam
mov
xchg
pushf
adc
push
or
sahf
sub
push
scas
and
dec
fs
mov
lcall
aaa
or
or
int3
enter
insb
inc
das
ljmp
sbb
adc
pop
or
add
xchg
faddl
scas
sub
mov
adc
xchg
nop
xlat
and
xchg
cmp
imul
pop
arpl
movsl
add
std
push
bound
pop
loop
fldenv
pusha
test
dec
lret
mov
lahf
movsb
fdivrp
movsl
addl
icebp
pop
aas
pushf
xchg
dec
jns
jae
nop
pop
xor
mov
cld
cmp
aas
idiv
insb
adc
mov
hlt
stos
cld
cwtl
mov
testl
in
test
mov
repnz
je
lahf
fwait
jb
and
mov
rolb
adc
pop
cwtl
into
push
adc
cli
ljmp
sub
fwait
xor
and
or
mov
std
lahf
shrb
movsl
push
mov
insb
pop
adcb
rcrb
mov
xchg
xchg
mov
mov
pusha
imul
and
xor
imul
rorb
xchg
lods
xor
sub
loopne
lahf
movzbl
aaa
push
and
test
push
push
pop
in
jl
xchg
stos
adc
aam
jmp
pop
cmpsl
sub
push
jle
lds
mov
fldenv
xchg
push
sub
jge
cli
cltd
push
outsb
add
xchg
sbb
mov
int
leave
xor
mov
cld
ret
xchg
enter
dec
inc
jecxz
mov
mov
fisubl
ds
outsl
hlt
leave
je
jo
mov
in
lret
iret
push
imul
jne
add
mov
jbe
xor
clc
subb
scas
push
leave
jmp
mov
pop
repz
or
repz
mov
xor
sub
cmp
dec
das
inc
aas
pop
mov
xor
cld
in
sti
inc
fists
inc
pop
jp
test
in
in
xchg
aam
jno
cs
and
scas
movl
aas
out
outsb
popf
sub
cmc
rcr
dec
cld
mov
pop
sbbw
lods
fsubl
lock
cmc
or
dec
je
xchg
addr16
fmull
fidivrs
les
adc
gs
lds
mov
mov
mov
sbb
xchg
test
imul
in
inc
ficoms
xchg
cmp
sbb
shlb
or
mov
dec
add
and
sar
ljmp
fmuls
jge
jmp
and
inc
lock
fs
push
or
sti
dec
in
pusha
pop
sbb
iret
pushf
pop
sar
pop
in
xchg
mov
sti
xor
jae
sbb
inc
push
rol
ror
adc
fstpt
popf
out
lret
repnz
imul
fcmovnu
shll
push
mov
inc
inc
fbld
shlb
mov
add
lea
sbb
xor
fstpl
cmp
test
and
xchg
popa
xchg
jmp
push
ret
cs
sub
xchg
mov
dec
cmp
fnsave
mov
rcl
call
sub
adc
lret
sub
insl
in
mov
insb
add
mov
or
in
in
imul
jge
jp
stos
bound
lods
popf
mov
int3
scas
and
ss
xor
cli
jae
fcmovu
addr16
jne
popf
sbb
lret
aam
push
pop
jge
mov
in
iret
cmp
out
adc
adcl
aaa
repz
sub
sbb
jb
adc
sbb
jae
pop
icebp
sbb
fs
test
add
insb
addr16
fiadds
adc
adc
add
sbb
int3
sub
cmp
cmpsl
mov
jmp
imul
stc
pop
cmp
xor
fistpll
orl
inc
out
dec
cmp
mov
lods
ret
pop
rcrb
sub
mov
xor
xor
jmp
adc
mov
sub
lds
mov
jg
js
ss
xor
pop
inc
sbb
insb
int3
iret
cmp
add
out
inc
rcl
sub
mov
pop
dec
push
jl
pushf
or
rcrl
pop
mov
xor
sub
mov
cmp
or
clc
dec
xor
das
push
mov
hlt
lods
and
adc
andl
xchg
xchg
ljmp
rcrl
daa
sub
push
bnd
cwtl
bound
lret
or
mov
xor
into
dec
jg
imul
add
cmp
inc
sub
add
fdivrs
icebp
aad
and
mov
mov
lods
inc
cmpsb
add
sub
cmp
sbb
loop
repnz
loopne
sbb
and
push
sbbb
or
adcl
inc
jp
sbb
push
cmpsl
add
sbb
adcb
push
repnz
stos
pop
mov
jno
sub
sbb
loopne
lods
pusha
xor
mov
clc
out
out
pop
cmpsb
loope
test
jo
mov
jecxz
or
loope
scas
or
dec
fsubrs
mov
xchg
scas
inc
bound
xor
cmc
jb
mov
and
inc
adc
leave
mov
data16
xchg
iret
sbbb
xchg
in
and
loopne
sbb
out
inc
xchg
dec
pop
or
loopne
inc
jnp
xor
xor
mov
jno
sbb
lcall
outsl
sub
loopne
jo
cmpsb
loope
stos
sbb
or
dec
test
movsb
push
jg
aad
mov
sub
int3
test
add
jge
aad
decl
push
cs
sahf
shrb
movsl
mov
into
push
and
out
pop
fimuls
and
mov
mov
xchg
test
push
and
cmp
sbb
lods
clc
mov
insl
clc
cmpsb
ficoms
incl
ja
mov
xchg
inc
jno
int3
pop
xchg
mov
or
mov
jne
jo
fucomi
clc
inc
xchg
test
add
mov
dec
out
and
push
pop
ret
imul
stos
xchg
push
xchg
cli
mov
push
cs
out
and
lods
jp
add
lods
or
popl
adc
lods
cmpsb
adc
cmp
sbb
jne
arpl
outsl
mov
out
cltd
ja
pop
test
adc
push
out
xchg
cmp
cmp
push
mov
and
fldl
fisttps
aam
sarl
es
cmp
bound
pop
rcr
mov
dec
fcomps
or
or
test
cli
pop
pop
lcall
dec
sti
adc
push
outsb
sbb
xchg
cmp
sbb
std
test
fadds
and
ret
into
mov
adc
push
loope
mov
sub
stc
scas
mov
xchg
cs
mov
mov
jp
mov
push
push
sbb
mov
push
inc
out
dec
jg
inc
xchg
dec
frstor
sub
cmp
sbb
lcall
dec
inc
jbe
add
into
mov
sub
add
mov
ja
push
insl
loop
xor
sbb
cld
xlat
or
adc
icebp
repz
mov
jmp
jg
outsb
mov
mov
sarl
cmpsb
fs
test
jge
jl
add
sub
pop
not
xor
mov
adc
adc
xchg
sbb
jns
call
ja
sbb
mov
mov
mov
jp
mov
push
lock
in
pusha
mov
jp
jne
mov
bound
mov
pop
mov
stos
push
lods
and
lret
repz
xor
call
pop
mov
in
fdivs
js
dec
jnp
sub
xor
and
and
out
jmp
int
mov
into
pusha
ret
xabort
je
cli
jge
push
arpl
movsb
mov
push
sbb
mov
ds
cmovnp
jae
add
addb
je
xchg
das
js
mov
push
mulb
orl
rcrb
and
jmp
lcall
push
and
shll
dec
xchg
shrb
cmp
fs
xor
push
add
xor
push
jmp
cmpsl
push
add
stos
sahf
sub
mov
push
jecxz
outsl
dec
aam
aaa
xor
inc
xor
das
scas
jb
jecxz
sbbb
xchg
cmp
leave
mov
pop
fisubrs
pop
cltd
or
adc
and
test
fsubrs
sbb
rcrl
mov
ljmp
add
addb
scas
lods
adc
mov
xchg
aam
popf
inc
push
xor
je
sub
out
lea
pop
iret
bound
repz
xchg
jg
daa
and
sahf
es
pop
xor
mov
xor
add
out
mov
std
add
xor
or
test
ss
and
or
adc
aam
or
push
or
shrl
jle
mov
jmp
sahf
add
and
enter
push
negb
imul
sar
sub
ljmp
jns
inc
inc
and
sahf
and
adc
rcpps
outsb
push
lahf
sahf
not
jne
dec
inc
pop
scas
jno
movsb
jp
leave
inc
jge
lret
scas
imul
inc
ret
stos
lret
rcl
mov
jmp
add
sbb
mov
test
jae
mov
ficompl
add
pusha
cmp
and
xor
call
pop
or
shlb
sbb
data16
pusha
data16
aas
mov
dec
lret
stos
insl
pop
lret
cmp
mov
sbb
repz
add
filds
stos
push
mov
sub
adc
dec
pop
sub
outsl
dec
sbb
mov
xchg
cmp
mov
insl
adc
sbb
sub
popf
leave
stos
jno
sub
xor
les
xor
insl
inc
das
push
lods
mov
hlt
xor
xor
jge
cmpsb
pop
sub
push
mov
jmp
adc
pop
pop
sarl
icebp
xchg
jne
add
cmpsl
or
add
add
int3
adc
xchg
jae
lret
xor
jle
mov
pop
dec
fwait
mov
sbb
cmp
test
cmpsb
leave
and
fistpl
mov
mov
test
or
in
stos
inc
push
adc
jb
dec
or
test
dec
incb
xchg
pop
mov
test
mov
int
lcall
outsl
cltd
leave
mov
cmp
cmpsb
outsl
pop
cltd
stos
jne
xor
adc
sub
inc
cmp
mov
shrl
pop
or
pop
scas
push
mov
loopne
inc
stc
idiv
in
jmp
and
pushf
and
mov
jo
cltd
rcr
xchg
fs
fwait
sub
mov
inc
push
sbb
add
add
inc
pop
sub
jnp
pop
outsl
fistpl
xor
push
cmp
lahf
mov
lds
ljmp
pop
and
movsl
adc
test
mov
sbb
xchg
jo
dec
add
adc
add
fwait
jle
into
push
xchg
add
loop
push
jnp
jno
pop
bnd
rcrl
sbb
bound
das
or
or
shlb
subl
shll
ror
mov
shrl
push
mov
mov
repnz
out
repz
or
mov
push
not
in
in
neg
movsb
rolb
ds
inc
aam
push
sbb
shl
inc
push
fwait
les
test
pushl
orb
sub
mov
sbb
jmp
pop
scas
cmpsb
repz
and
dec
push
sbb
push
and
push
rcrb
out
xchg
cli
and
lds
in
lock
std
lret
pop
pop
xor
jl
sub
jmp
xorb
ljmp
scas
xor
inc
stos
jl
fidivl
jmp
push
xchg
xchg
nop
pushf
xchg
xchg
scas
orb
pop
lods
sub
addl
lds
div
repz
jae
xor
push
mov
call
mov
rcrb
mov
nop
int3
fwait
mov
aaa
or
dec
xorb
iret
jno
cmp
std
mov
lret
add
adc
jne
xor
mov
ja
inc
mov
dec
shlb
mov
insb
cli
cbtw
cmp
jb
lahf
xor
fwait
mov
xor
leave
xchg
dec
ret
cmpsl
inc
cs
mov
inc
imull
push
lret
add
mov
sub
push
xchg
bnd
inc
adc
divl
in
push
popf
and
cltd
pop
add
scas
out
addr16
pop
xor
mov
gs
clc
std
lods
sub
test
es
cmp
pop
cmp
cmc
mov
xlat
mov
js
lcall
shl
lret
cmp
ds
in
adc
mov
arpl
fisubl
mov
insb
sub
sar
imul
mov
cwtl
mov
sbb
movsl
push
cmp
mov
jmp
cs
sbb
pmullw
and
in
pop
cmpsb
pushf
addl
and
popa
dec
and
cmp
stc
and
jo
push
and
or
jb
dec
push
adc
cld
dec
dec
daa
in
scas
dec
data16
pop
ds
mov
popa
call
lods
out
pushf
nop
fiadds
xchg
xchg
mov
adc
xchg
aad
gs
cmp
fidivrl
pop
mov
fwait
outsl
add
insl
loop
pushf
cmc
xor
mov
or
loopne
inc
in
inc
int
mov
pop
xchg
cmc
inc
xor
mov
jo
addr16
cmp
icebp
cmpsl
pop
aam
pusha
push
adc
sti
mov
aaa
jns
out
and
sbb
mov
pop
add
and
out
mov
dec
mov
jb
lods
call
fbstp
adc
jno
loope
hlt
mov
insl
push
jnp
arpl
jae
arpl
cwtl
dec
or
mov
mov
mov
leave
js
call
cli
mov
outsb
adc
xchg
sub
es
push
fwait
add
adc
mov
mov
test
add
call
gs
pop
push
shlb
in
mov
pop
pop
push
and
fwait
add
dec
or
push
pop
imul
add
adc
jg
jns
push
jmp
pop
notb
fmuls
mov
xor
sarl
imulb
shr
mov
scas
stc
aas
mov
inc
test
jecxz
popf
jns
jae
jecxz
and
xchg
inc
lods
add
movsl
cmp
sbb
xchg
scas
and
mov
stos
call
jle
bound
pop
lods
dec
sarb
sub
addr16
cli
push
lock
mov
jp
xchg
dec
xchg
enter
push
shlb
push
ss
icebp
ss
mov
pop
bound
mov
mov
repnz
and
jnp
inc
insl
mov
aad
mov
fdiv
jbe
jnp
inc
mov
mov
mov
rolb
dec
push
mov
jns
addr16
incl
sarl
mov
popa
push
lock
cmp
dec
jl
iret
in
filds
cmp
push
mov
loop
test
js
sbb
hlt
loope
testl
add
cmpsl
mov
mov
lret
cmc
out
pop
out
sbb
push
cwtl
adc
arpl
subl
test
mov
loopne
xchg
xor
mov
scas
or
fs
int3
movsl
adcb
mov
push
icebp
mov
cmpsl
incb
dec
inc
dec
add
fdecstp
sub
test
out
dec
into
fisubs
clc
test
add
iret
cmpsb
test
jmp
in
push
lds
or
inc
and
xchg
push
test
sbb
fwait
xchg
adcl
test
jbe
xor
cli
fcompp
fistl
jbe
jbe
push
xor
inc
push
jecxz
decl
dec
idivb
jno
leave
fst
ja
stc
push
in
and
xor
jo
add
or
pop
je
out
stos
inc
mov
sahf
out
aam
cmp
jg
xchg
dec
ret
popa
mov
mov
mov
mov
adc
daa
mov
aad
pop
test
into
shll
es
int
ror
lea
add
cmpsb
insl
pop
fs
mov
sar
rcl
das
or
mov
mov
pusha
jle
cmp
xchg
mov
lds
scas
xchg
xchg
mov
jp
jge
mov
roll
add
jbe
in
in
pop
push
rol
jns
sub
pop
in
add
inc
pop
xchg
push
sub
mov
push
imul
push
ret
jle
scas
imul
lcall
into
outsl
mov
add
and
in
sub
mov
pusha
mov
mov
adc
and
orb
push
dec
ljmp
sub
enter
jae
nop
jbe
xor
add
mov
loope
pushf
ret
dec
aaa
add
pop
jl
test
arpl
inc
lcall
fcom
pop
push
pop
outsl
das
ss
jge
bound
outsl
xor
mov
xchg
and
out
pop
adc
fcompl
repnz
or
int3
and
mov
lock
pop
mov
sahf
cmp
mov
adc
fs
jne
mov
xrelease
ja
sub
pop
add
dec
stos
jne,pn
cltd
jae
repz
sbb
hlt
mov
mov
lahf
cwtl
lret
daa
lds
adc
push
sbb
cli
mov
rorl
out
cli
cmc
fs
adc
stos
cmp
iret
cmp
stos
punpckhbw
imul
testl
int
add
jns
cmpl
dec
das
add
xchg
inc
test
fwait
xlat
stos
icebp
and
sub
mov
arpl
mov
or
cltd
mov
in
fidivrl
sarb
adc
mov
ja
js
or
cltd
adc
int
pop
sbb
and
aas
cmp
clc
test
mov
jns
insb
leave
xchg
js
fsubp
sbb
gs
pop
fldt
cmp
lods
sbb
adc
jge
cltd
adc
bound
test
mov
push
adc
mov
push
es
fstl
sbb
pop
and
jno
push
imul
cld
mov
jmp
enter
mov
inc
mov
pop
outsl
xchg
mulb
stos
dec
orl
outsb
nop
call
aaa
fwait
dec
rep
outsl
mov
mov
in
cld
push
sbb
dec
rorb
ror
jno,pt
std
test
scas
push
sbb
gs
aam
or
sbb
sbb
sub
ror
sbb
cmp
or
outsl
lods
imul
data16
dec
mov
xor
or
lea
lods
les
push
cltd
inc
es
cmp
inc
lahf
lea
das
lea
mov
loopne
dec
pop
xchg
imul
or
mov
add
mov
into
jns
lahf
aaa
xchg
and
xor
in
cmc
jle
xlat
bnd
test
dec
insb
cs
pop
loop
jnp
nop
cmc
add
cmc
push
xor
sbb
pop
es
in
ljmp
fwait
lret
rcll
pop
in
in
cmp
hlt
lahf
outsl
lret
lods
push
mov
xchg
les
jmp
mov
adc
jae
leave
out
lods
or
out
xchg
pusha
test
mov
dec
fld
xchg
mov
mov
jmp
mov
mov
jae
data16
inc
int3
xchg
rclb
sbb
mov
btc
notl
or
inc
cmp
add
add
imul
or
andb
add
dec
mov
inc
test
push
adc
xchg
jcxz
cmpsb
inc
jge
flds
add
ret
mov
popa
sbb
scas
pop
mov
pop
adc
mov
lret
jne
es
aaa
ja
repz
fadd
mov
clc
stos
pop
jp
or
mov
mov
push
cltd
sub
into
fldcw
mov
push
pop
jg
lock
sti
add
jmp
repnz
fimull
inc
dec
ljmp
push
mov
add
cmp
shll
fsubr
lcall
mov
mov
dec
push
or
fs
ret
adc
enter
lds
sbb
or
fsubl
xor
xlat
scas
pop
adc
jmp
mov
jle
popf
mov
jne
push
push
cld
xor
je
mov
lock
sbb
push
fildll
sarl
cmpsl
pop
push
pop
das
cmc
out
hlt
jecxz
subl
out
lret
sbb
inc
push
push
xor
cmp
aam
jmp
dec
ljmp
adc
out
cmp
jae
cmp
sub
es
repnz
push
sbb
sbb
pop
jg
fiadds
and
push
jo
jbe
hlt
gs
in
pop
std
xchg
sbb
js
filds
inc
xchg
aaa
sti
mov
sub
add
lods
ja
stos
xchg
pushf
pop
cmpsl
pop
hlt
ror
cld
int
inc
mov
ret
and
add
pop
lea
fnstsw
loope
xchg
outsb
insl
cmpsb
jnp
jo
jae
inc
push
push
cmpsb
push
cmpsl
xchg
sahf
in
insl
and
pop
fnstenv
fcoms
aam
push
mov
loopne
add
stos
shll
int3
jnp
dec
mov
mov
mov
jg
sbb
rol
les
cli
dec
pusha
fidivrl
rcrb
mov
mov
leave
stos
adc
fwait
adc
push
inc
cli
outsb
ret
aaa
ds
lret
pop
js
out
push
and
in
jnp
inc
jmpw
xlat
int3
nop
dec
shlb
push
popf
inc
lret
push
mov
cmpb
daa
dec
or
pop
test
lods
inc
add
lock
xlat
aam
xchg
jl
ds
cmp
call
add
outsb
push
cmpsb
mov
in
dec
push
in
stos
xchg
mov
push
movsl
cmp
movsb
lcall
sbb
sbb
dec
cli
mov
mov
cmp
mov
cltd
out
sti
loop
xchg
inc
sahf
and
xor
xchg
cmpsb
xchg
jle
js
sub
and
push
fwait
repz
enter
mov
pop
mov
scas
std
out
mov
pusha
push
push
jp
fucom
nop
dec
mov
inc
gs
inc
outsb
clc
cmp
mov
cmp
repnz
loop
mov
mov
inc
mov
mov
pusha
inc
xlat
dec
mov
sbb
jecxz
std
push
xchg
popf
jno
bswap
add
mov
leave
xor
dec
pop
push
add
ss
nop
push
xchg
push
cmp
popa
pop
in
xor
and
push
inc
insl
cmp
scas
lods
test
push
mov
or
sbb
adcb
addr16
jo
mov
lds
mov
sahf
dec
pop
jg
inc
pop
fmull
and
pop
test
push
lods
dec
dec
inc
pop
mov
cmp
jle
jo
out
rol
stos
shlb
movsb
pop
pusha
pop
ret
loop
and
repnz
push
stc
fsubl
push
insb
insb
sub
mov
add
mov
popa
iret
push
push
xchg
imul
xchg
arpl
cwtl
cltd
xchg
aaa
sahf
jmp
cli
add
fisttpll
add
jmp
rolb
mov
test
jl
popa
dec
mov
sub
cli
sub
jns
push
je
push
aad
js
adc
dec
push
mov
shlb
ja
adc
call
addb
imul
das
cmp
arpl
mov
sbb
cmp
mov
arpl
imul
inc
pop
fiadds
movsl
sbb
mov
ret
daa
les
mov
rorl
mov
adc
lret
mov
lea
or
int
icebp
xchg
xchg
inc
test
movsl
mov
mov
ds
nop
shl
aad
in
xor
and
lds
daa
ljmp
sub
sbb
mov
pop
in
cmpb
popa
cli
push
je
mov
pushf
mov
mov
xor
mov
jp
loop
jl
lcall
mov
or
test
dec
jl
xchg
cmp
idivb
push
jae
lret
and
xchg
scas
ret
int
movsb
mov
xor
sbb
jge
push
stos
xchg
mov
dec
sbb
loop
fistps
lods
testb
lahf
shrl
sub
repnz
pop
pop
xchg
inc
adc
pop
cmp
xchg
sbb
shrb
loop
mov
fistl
std
rcll
or
pushf
push
out
and
aas
lock
mov
cld
sbb
inc
fists
sahf
lods
daa
cmp
and
lahf
push
ret
dec
mov
mov
aas
je
cmp
mov
fdivrp
sahf
xchg
sub
push
iret
mov
inc
push
sbb
sub
lahf
cmp
je
xlat
test
fcomps
push
lods
mov
insl
push
pop
xchg
std
ret
add
pusha
test
push
push
jmp
inc
pop
mov
stos
mov
nop
das
jl
cmpsl
insl
xor
ljmp
cwtd
int3
mov
jno
mov
int
mov
jae
or
mov
pop
aaa
shll
sahf
clc
lret
movsl
fcoms
divps
shr
stc
xlat
inc
xor
pop
jle
mov
push
lods
sub
inc
sub
in
sbb
aaa
rcll
jl
pusha
inc
mov
shll
mov
adc
jmp
mov
leave
sti
imulb
sub
add
cmc
sbb
fidivs
rclb
push
cmp
cli
xchg
ret
mov
insb
ror
jp
sbb
pop
les
enter
repnz
leave
xor
test
loopne
and
jmp
pop
cmp
pop
rorl
mov
movsb
jge
in
lods
insb
fdivs
jge
xchg
insb
out
jecxz
dec
aaa
leave
sbb
lret
and
into
test
mov
xchg
pop
lock
cmp
or
rorl
cmpb
jbe
add
leave
jmp
cmp
addl
fstps
repz
xor
jae
cmpsl
pushf
outsl
push
sub
in
popa
popf
and
add
call
add
add
sti
or
sbb
mov
adc
fbstp
cmp
mov
das
pop
ljmp
iret
cmpsl
add
jae
push
mul
mov
push
and
das
adc
sbbb
sbb
jne
xchg
aad
jnp
mov
push
inc
inc
test
mov
sbb
cmp
mov
out
aad
and
popf
les
rcll
mov
dec
dec
push
inc
gs
xchg
dec
cli
jnp
idivb
cs
icebp
inc
xchg
fiadds
or
scas
pop
mov
mov
clc
aam
inc
int
push
lea
xor
pop
and
push
hlt
jecxz
xchg
scas
lea
movsb
push
sbb
pop
jmp
ss
mov
out
in
into
push
and
push
jg
ja
dec
stos
call
push
jp
cmp
pop
push
mov
incb
pop
out
cmpsl
nop
dec
stos
inc
dec
push
cwtl
ljmp
sub
cmpsl
movb
sub
fwait
outsb
push
popf
jmp
shrb
sbb
mov
aas
cwtl
mov
sbb
mov
inc
xor
jmp
fs
and
sahf
jl
pop
arpl
adcb
clc
or
insb
pop
mov
in
mov
jns
je
and
sbb
dec
icebp
orl
mov
aam
cs
icebp
shrl
daa
orb
push
pop
divb
shr
pop
xchg
loopne
shlb
das
sar
scas
lods
pop
fisubs
inc
cmpl
addr16
rolb
sub
ja
inc
movsb
arpl
push
jb
mov
in
or
cmp
push
inc
repnz
adc
aas
pop
push
pop
add
xor
inc
aas
mov
arpl
mov
or
pushf
movsl
xor
mov
daa
fwait
fs
aaa
and
and
iret
pop
mov
jb
daa
sub
or
xor
arpl
cmp
jl
andb
pop
ljmp
cwtl
test
gs
fimull
shl
xor
lret
test
icebp
ret
and
xchg
mov
inc
mov
pop
jne
push
add
je
hlt
fstps
sti
sbb
xor
add
aad
addr16
fdivr
addr16
add
and
rol
cmpsb
pusha
int3
xor
fisttpl
leave
inc
movsl
push
xchg
mov
mov
dec
or
mov
mov
add
cmp
ret
subb
push
aas
push
dec
mov
cmpsl
icebp
cmpsb
call
test
fimuls
rclb
adc
outsl
out
mov
jb
fildll
movsl
adc
mov
xchg
cmp
mov
mov
push
pop
pop
es
fstpl
jo
mov
mov
xchg
testl
fs
ret
stos
mov
ss
push
in
fwait
cmp
mov
fimuls
cmp
jle
cli
xor
dec
sub
jmp
fisubl
push
stc
mov
jp
push
mov
js
jne
icebp
test
and
lea
jne
fiaddl
adc
stos
mov
dec
sub
sbb
out
ret
and
or
movsb
xchg
mov
rcrb
jmp
xchg
and
dec
inc
jo
mov
lret
mov
xchg
add
aad
rcrl
mov
xor
sub
sub
iret
or
cmp
xor
mov
addr16
enter
mov
add
in
sub
mov
in
dec
ss
cmp
mov
inc
cmp
sbb
arpl
iret
inc
xchg
xorl
pop
ss
and
inc
iret
iret
mov
xchg
inc
stos
cmc
inc
lods
cli
stos
andl
mov
or
adc
jne
fistps
pop
clc
daa
rol
repnz
imul
add
fsubrl
dec
scas
std
shlb
stos
xor
mov
add
push
cmp
mov
dec
xlat
fistps
add
negb
mov
daa
adc
das
std
mov
pop
xor
xlat
cvttps2pi
cmpsl
cmp
and
cmp
std
mov
ds
push
xlat
ljmp
stc
ljmp
cmp
mov
jp
fdivs
insl
fidivrl
mov
call
fidivl
lds
cmp
lret
cmc
mov
lahf
subl
xor
pop
pushf
fsubs
mov
loop
outsl
lret
sbb
repz
loopne
lds
cmp
inc
inc
es
jns
fstpl
out
mov
pop
notb
pop
xchg
and
and
push
outsb
arpl
pusha
dec
push
xchg
fdivl
les
imul
dec
jl
imul
xlat
les
inc
das
insl
lea
jno,pt
push
adc
outsb
or
ljmp
pop
cli
popf
xor
add
dec
pusha
popa
jb
mov
adc
fbstp
pop
outsb
arpl
in
xor
xor
ja
and
pop
lret
ret
dec
dec
mov
mov
cmp
jnp
add
out
movb
jb
push
jno
xor
inc
in
push
xor
mov
dec
inc
xor
addl
into
jmp
repz
xor
xchg
mov
lods
pop
aaa
aad
movsl
insb
mov
cmpb
cs
ret
or
push
or
jno
out
mov
cwtl
sub
push
mov
xchg
adc
bound
xchg
and
mov
inc
sbb
cld
and
repnz
arpl
sub
or
xchg
add
cmp
push
pop
xlat
jmp
push
testb
xbegin
in
jno
jmp
out
xchg
cmc
jle
das
rclb
xor
mov
inc
out
popf
sub
sbb
xor
iret
testb
es
ret
lret
or
mov
pop
clc
es
xchg
mov
add
cmp
aad
inc
and
xchg
sbb
fadds
adc
ds
xlat
cmp
cli
idivb
lods
xchg
mov
xlat
jne
lea
sbb
push
jl
adc
popf
xchg
js
xchg
das
xor
mov
ja
pop
or
aas
and
xchg
mov
das
push
lret
mov
dec
sbb
cmc
dec
jns
adc
sbb
orb
mov
dec
add
repz
adc
mov
push
add
xchg
sbb
add
data16
stos
les
cld
add
adc
and
xor
lods
movsb
icebp
dec
mov
fidivs
add
add
xchg
movsb
or
maskmovq
mull
sbb
sar
push
jl
ja
imul
sub
and
cmpsb
jmp
add
sub
jp
rorb
int3
xor
leave
jle
mov
cmp
or
cmp
push
mov
xor
shrl
imul
cmp
xchg
cld
inc
and
pop
pop
xchg
js
sahf
call
mov
jp
jg
popf
jnp
iret
dec
sbb
dec
push
pop
sbb
idivb
mov
lea
mov
jl
or
and
das
inc
or
mov
mov
js
scas
jg
add
push
es
movsl
inc
daa
and
nop
adc
pop
dec
data16
rcrl
jns
inc
out
inc
xor
in
in
xor
mov
loopne
sbb
xchg
jge
pop
jmp
ja
xor
pusha
and
sub
sti
ss
lahf
pop
pop
mov
xchg
mov
icebp
pop
mulb
inc
jl
aas
decl
xor
call
or
in
mov
adc
dec
and
and
fdivp
dec
sbb
xchg
adc
pop
out
mov
mov
ljmp
cmp
mov
pop
popa
les
jns
dec
ret
mov
cmc
add
sbb
pushl
addb
daa
mov
push
out
in
scas
mov
inc
cmpsb
sbb
fstps
idiv
cmpsb
sarl
mov
and
pop
daa
mov
jmp
sbb
mov
or
aam
daa
pop
adc
notl
sub
gs
scas
mov
sbb
ret
pop
movsl
or
fsts
mov
js
movsb
movsb
dec
in
arpl
lea
dec
fimuls
inc
sbb
or
sti
scas
xchg
sbb
lret
inc
cld
inc
inc
inc
mov
xchg
stc
cmpsl
cltd
adc
adc
xchg
and
sti
aas
lds
lret
data16
and
js
mov
call
sub
dec
lock
and
ret
jg
sub
sub
push
js
testl
xor
and
mov
movsb
lock
dec
dec
jmp
clc
mov
stos
movsb
rolb
mov
and
mov
stos
cmp
push
inc
mov
mov
jl
jbe
xchg
and
and
js
out
ja
imul
cli
jne
ljmp
or
xchg
pop
mov
nop
xor
cwtl
pop
pop
xor
jb
xchg
xchg
repz
push
add
jns
repnz
aad
movsl
inc
ss
push
cmpsl
add
xchg
mov
jmp
int
adc
mov
lock
out
insb
and
pop
addr16
mov
outsl
rcr
js
shrl
jle
shrb
inc
xlat
in
pusha
aaa
or
lds
and
in
stc
out
inc
cmp
mov
xor
lret
push
and
lret
xchg
sub
mov
sbb
dec
inc
insl
mov
xchg
bound
xchg
fs
dec
ss
insl
movsl
out
and
sbb
nop
and
sti
hlt
scas
jp
scas
daa
xchg
bound
popa
sarl
sti
lods
or
bound
ja
icebp
or
pop
insb
mov
push
sbb
xchg
push
jp
das
in
fisttpll
jne
out
addl
dec
cmp
push
mov
pusha
and
inc
or
fadd
pop
cmpsb
sbb
mov
mov
and
pushf
std
mov
ret
movsl
pop
rorl
aam
jb
jae
ljmp
sub
daa
into
out
lcall
repnz
pop
clc
xchg
xchg
xchg
lret
roll
fincstp
leave
fldl
xchg
aad
scas
dec
mov
jge
dec
cld
fmull
push
inc
lods
pushf
ret
shrl
xchg
leave
clc
pushw
push
mov
lahf
pop
mov
daa
shlb
push
fs
push
outsl
bound
sub
push
fstpl
movsb
sub
lret
xchg
jmp
pop
test
jl
sbb
push
pop
mov
hlt
clc
mov
and
imul
cld
dec
movsl
out
scas
xor
ficomps
fistps
stos
sti
mov
mov
imul
xor
push
mov
testl
add
xor
dec
insl
lret
dec
sahf
sub
mov
and
pop
xor
xor
fistpll
cli
dec
jbe
ja
aaa
gs
call
xchg
in
add
xor
and
pushfw
push
mov
repz
int
push
sahf
pop
cmp
xor
xor
movsb
jno
mov
xor
or
lret
add
mov
jae
mov
dec
loop
in
cmp
add
ljmp
fbld
in
mov
cmp
xor
pop
fisubl
lret
or
pop
fcompp
jle
sbb
and
adc
or
call
bound
in
pop
shrb
ss
into
je
into
inc
dec
sub
adc
imul
lods
lret
mov
sbb
mov
scas
ret
in
adc
mov
sarl
xor
inc
jmp
repnz
jle
jmp
or
fistpl
daa
jns
imul
out
sbb
inc
test
sub
pop
ds
sub
loopne
cmpl
push
inc
repnz
sbb
xor
popf
adc
fwait
das
mov
cmpb
lods
mov
rolb
popa
outsl
inc
xchg
rcrb
rcrl
outsb
sub
xchg
push
xchg
and
mov
push
daa
pop
mov
mov
lret
mov
lret
hlt
in
adc
xchg
xlat
or
add
cmpsb
jnp
cmp
mov
cmp
add
cvtdq2ps
xchg
mov
and
ret
pop
adcb
movsb
pop
adc
mov
hlt
pop
stos
jl
mov
or
pop
data16
cmp
push
test
outsl
xor
les
lods
sbbb
inc
pusha
pop
mov
cli
cltd
ret
xor
and
ds
pop
popf
sub
les
mov
sbb
hlt
adc
in
negl
arpl
cmpsl
xchg
fidivs
ja
out
sbb
and
fst
mov
or
fs
aad
outsl
fisttpll
cmp
xor
shll
and
out
push
enter
imul
push
sub
subb
sbb
push
sbb
rcrb
call
test
in
or
mov
test
mov
mov
pop
js
int
andb
fcmovnu
and
xchg
jo
jmp
xor
fs
pop
ret
out
cmp
test
in
mov
xchg
rorl
incl
mov
xchg
xchg
fcomi
dec
xchg
cmpsb
fstpl
pop
loope
rol
mov
and
mov
and
push
sub
lods
out
outsb
out
push
pop
pushf
sahf
jae
cmp
inc
sub
adc
movsb
adc
mov
inc
pusha
fnstcw
daa
mov
and
add
inc
mov
jbe
mov
mov
popa
out
into
jl
pop
jge
enter
movsl
add
or
adc
fildll
pop
cmp
ret
cld
ljmp
jg
xchg
adc
jbe
push
test
dec
loop
push
or
stc
push
adc
lcall
int3
mov
movsl
popa
subb
push
adc
pop
dec
xlat
mov
sbb
mov
in
xchg
adc
das
sub
sbb
xor
popf
movsb
pop
jge
test
inc
push
iret
movsb
jp
pushf
hlt
xchg
pop
mov
stos
shll
sti
jns
pop
in
push
cmpsb
ss
test
xor
int
into
into
mov
cmpsl
mov
es
aad
enter
push
cmp
test
cld
mov
sub
add
and
pop
push
mov
repnz
mov
mov
add
push
xor
cmpxchg
loop
pop
mov
ret
dec
sar
fadd
xchg
mov
push
iret
xor
inc
arpl
fsubl
scas
jae
push
outsl
mov
or
sub
add
mov
stos
mov
loopne
xchg
xchg
mov
jno
aas
dec
sahf
test
pop
and
mov
pop
jae
fbld
movsl
mov
fwait
addr16
in
mov
xor
mov
or
loop
xor
xor
mov
repnz
jnp
xchg
jle
sar
ret
mov
leave
mov
sub
add
jb
aad
adc
jl
lahf
push
push
mov
in
rcl
pop
inc
shll
dec
mov
xor
lds
inc
mov
lock
push
push
ret
ret
xor
data16
pusha
mov
je
push
mov
dec
xchg
pop
jno
mov
add
rclb
jns
cld
jae
cmp
pop
cmp
nop
movsb
sbb
in
mov
dec
rorl
xchg
and
imul
xchg
dec
ljmp
lea
mov
push
clc
cmp
dec
and
and
cmpsl
popa
enter
push
stc
mov
mov
fsubr
fists
insb
mov
mov
and
and
out
pop
mov
into
insb
push
leave
mov
lds
imul
idiv
mov
and
scas
pop
out
mov
and
cmp
in
push
movsl
cmp
xchg
push
mov
xor
lahf
les
add
adc
cmp
cmp
cld
leave
andl
mov
roll
dec
add
pop
jmp
aad
or
lock
jb
mov
or
pop
out
fstpt
aas
movb
xor
mov
pusha
jns
testb
sbb
add
inc
lds
inc
test
int3
inc
or
cltd
rolb
iret
sub
int3
xchg
iret
and
movsb
or
mov
sbb
rcl
dec
fcompl
add
sbb
cmp
and
sbb
loop
popf
adc
bound
cmpsb
mov
push
adc
retw
mov
add
lock
popf
xchg
and
dec
cld
jmp
rcrb
out
push
daa
mov
into
or
jmp
jge
loope
in
data16
push
js
insl
std
ret
dec
rcrl
push
adc
adc
loope
push
push
xchg
cmpsl
orl
jne
orl
sbb
test
stos
mov
xlat
repnz
movsb
out
das
data16
sbb
popa
movsl
popa
negl
push
mov
sbb
sbb
ljmp
imul
fiadds
stc
shrb
test
out
add
ja
lret
xchg
jp
add
cs
rcpps
mov
pushf
daa
shrb
jmp
mov
fwait
shll
mov
movsb
loopne
out
xor
xchg
repz
out
pop
nop
leave
jbe
lds
gs
push
std
insl
mov
add
cltd
out
shll
xchg
das
scas
sbb
in
dec
xchg
jge
divl
out
cmp
jb
fwait
lds
lret
testb
xchg
js
cmp
or
xchg
into
imul
push
loopne
enter
test
xor
dec
jmp
mov
test
inc
orl
xor
sbb
ret
sub
mov
js
popf
lds
addr16
cmp
aam
and
das
js
lcall
repnz
imul
std
aad
fwait
xchg
pop
clc
das
out
dec
loope
das
mov
inc
add
jo
cmpsb
addr16
lahf
adc
fwait
pop
pushf
sub
push
adc
movsb
pop
add
add
addr16
or
xor
out
sub
sbb
rorb
add
pop
push
sbb
outsb
push
lds
pop
in
adc
fists
adc
push
ret
insb
rcll
cmc
int
pop
cmc
mov
jle
shrl
ret
sub
sahf
mov
data16
sbb
mov
add
lahf
mov
add
outsb
xlat
out
lret
cwtl
dec
push
fs
or
movsl
inc
out
jno,pt
stos
in
test
std
add
pop
repnz
mov
mov
aad
dec
cmp
test
out
mov
ret
shr
adc
outsl
push
cs
sub
stos
popa
adcl
pop
sbb
test
push
add
das
pop
push
xor
mov
push
stc
jg
fdivrs
adc
xchg
insl
inc
imul
push
fiadds
popf
les
jle
mov
ret
nop
jae
jo
mov
lcall
pop
jbe
xor
icebp
pop
sub
mov
es
mov
push
and
mov
dec
repnz
out
test
or
jns
push
imul
pushf
sub
imul
push
push
sub
cmp
aas
ljmp
pop
scas
es
loope
sar
adc
stc
shrl
push
and
push
xor
jle
jae
pusha
xor
test
iret
data16
mov
add
stos
fcoml
add
add
cli
and
loopne
mov
push
roll
push
inc
push
insl
mov
or
push
pusha
out
fcomp
mov
xchg
in
jmp
jnp
mov
fsubrl
inc
sub
xchg
stos
adc
xchg
loop
and
in
xchg
clc
ja
or
adc
jmp
xchg
inc
insl
aad
cmpsb
add
xor
in
jl
pop
test
stos
ja
add
test
hlt
and
push
pop
fwait
aas
push
imul
xor
scas
jmp
lret
cmc
repnz
gs
dec
outsb
imul
pusha
cmp
mov
sbb
ljmp
icebp
test
jmp
lret
jb
pusha
clc
inc
stos
xchg
or
cs
inc
lods
push
push
aam
adc
mov
inc
mov
cmp
fistpl
pop
dec
outsb
stc
scas
dec
push
pop
inc
sub
cmp
icebp
push
ljmp
in
xor
out
push
pop
mov
lahf
aam
pop
sbb
and
jns
idiv
cmp
into
mov
pop
mov
mov
pop
and
and
out
outsb
faddp
push
sbb
jmp
sub
movsl
sub
push
mov
or
ljmp
push
fstpl
ja
mov
and
adc
mov
ss
xchg
int3
movntps
push
cmpsl
mov
cmc
fdiv
dec
xor
fwait
add
push
push
mov
mov
in
lret
add
push
push
mov
mov
sbbb
inc
hlt
inc
test
and
imul
or
lcall
ss
outsl
test
cmpsl
lret
mov
pop
sbb
dec
xor
sub
stos
nop
lods
lea
cmp
xor
pop
pushl
pop
fists
mov
inc
mov
loope
mov
sub
rolb
addl
mov
sbb
add
imul
aad
dec
je
adc
pusha
lock
mov
jns
inc
or
add
adc
mov
ret
push
popf
jp
repnz
and
fstps
add
cmpsl
imul
ficomps
and
mov
mov
mov
fucomp
or
xchg
aas
pop
add
scas
sti
ljmp
loope
inc
test
mov
push
cwtl
aad
das
xorb
divl
push
das
pop
and
adc
adc
or
xor
cmpsl
jg
cli
push
jecxz
xor
dec
rcrb
jnp
or
imul
sub
mov
stos
or
mov
or
push
push
jno
pop
pop
mov
cmp
das
xor
mov
add
push
popa
aas
and
inc
mov
dec
adc
mov
outsb
lds
sarb
push
mov
nop
mul
jge
dec
mov
es
jmp
fcmove
idivb
xor
fsts
clc
push
imul
push
dec
pop
repz
cltd
clc
jb
mov
pop
ljmp
mov
clc
jb
mov
ret
mov
and
xlat
stos
and
loopne
xorl
mov
dec
push
mov
movsl
dec
addr16
add
fs
addr16
loop
sbb
jmp
aam
xor
mov
mov
in
mov
fsubrs
adc
adc
add
pop
xor
clc
jmp
test
cmp
push
fcom
mov
clts
shrb
mov
mov
cmpsb
stos
sbb
scas
dec
loope
mov
nop
fs
int
push
imul
int
test
mov
adc
inc
dec
or
cmpsl
xchg
or
and
sbb
push
mov
fidivrs
inc
sbb
push
outsl
arpl
mov
cmp
push
push
push
lock
cmp
adc
mov
out
sub
sbb
sub
dec
jns
aam
insl
inc
jecxz
xor
mov
sarl
iret
mov
repnz
pop
jecxz
repz
push
jg
pop
js,pt
or
ja
lock
push
or
mov
jo
fidivl
insl
enter
dec
xchg
jmp
pusha
push
fnstcw
and
ret
push
cmp
aas
inc
es
add
jp
test
scas
jbe
or
mov
mov
lahf
ds
out
invd
pop
inc
jge
movsl
pop
aam
xchg
aad
cmp
pop
dec
ss
push
push
mov
mov
iret
int3
lea
and
jecxz
push
push
arpl
in
pop
cmpsl
jno
jge
jbe,pn
test
or
sbb
xchg
xor
jmp
fimull
out
mov
push
fcoml
add
in
stos
dec
in
push
push
or
idiv
cmp
cltd
rorb
call
bound
sti
shr
xor
mov
cmpsb
movsl
sub
ds
loop
cmc
je
push
push
or
shr
xorb
rcrl
push
push
cmpsb
test
pop
xor
pop
jp
or
loope
dec
jl
test
out
aaa
adc
imul
iret
outsl
sbb
ret
mov
nop
shrl
enter
sbb
push
adc
adc
ffreep
cltd
mov
inc
xchg
or
fwait
aaa
repnz
addl
sub
shll
jns
lret
out
test
push
scas
sbb
dec
jo
and
rorl
pop
scas
adc
xlat
stos
pop
shll
dec
out
lret
out
mov
fildll
inc
clc
shlb
movsl
test
push
add
test
cmpsb
test
in
jns
push
or
lods
rcll
das
jae
pop
dec
lods
int
lret
push
mov
lcall
movsb
mov
sbb
jno,pt
mov
mov
xchg
xchg
xchg
icebp
xor
icebp
shll
inc
xchg
in
out
or
scas
mov
sahf
out
lods
jno
mov
outsl
std
lret
jb
loop
jmp
scas
add
repnz
push
mov
pop
push
xchg
sbb
ret
fstpt
fdivrl
mov
jnp
in
pop
nop
ret
mov
loop
push
mov
or
jecxz
jp
dec
cmp
dec
rolb
fldcw
cmpsb
dec
test
test
rol
rorb
vmread
inc
lds
test
loope
hlt
inc
jmp
repz
mov
mov
inc
cli
mov
cmp
pop
push
enter
jmp
xor
stc
dec
fwait
add
out
push
inc
lcall
out
mov
imul
insb
je
cs
in
dec
or
mov
jp
in
cmp
push
or
test
arpl
or
sub
leave
lods
in
and
mov
xchg
or
repz
mov
dec
jne
push
mov
testl
pop
lods
test
sub
or
iret
shll
sbb
fs
mov
nop
jmp
jge
xchg
cmp
add
lds
fldenv
lods
and
push
cltd
mov
adc
sarb
enter
adc
cmc
or
icebp
movsl
jnp
popa
or
adc
andl
mov
fidivrl
stos
dec
stos
mov
popa
iret
cltd
mov
icebp
insb
popf
sbb
and
lea
mov
xor
mov
mov
test
add
lock
into
scas
cmp
fwait
push
add
push
and
jno
fidivs
fwait
dec
add
cwtl
pop
pop
xchg
add
out
in
daa
call
mov
xchg
fisubl
dec
ret
mov
xlat
or
jo
imul
xor
xchg
jno
or
aam
out
or
xchg
aam
push
or
test
roll
jmp
fsubrp
scas
jb
add
popf
xchg
les
das
insl
ljmp
push
push
rclb
arpl
fwait
addb
mov
sbb
imul
pop
fcoml
test
enter
xor
add
fwait
mov
test
inc
daa
add
lret
lods
fcmovu
movsl
inc
or
push
notb
xchg
lock
inc
out
cmp
sbb
aam
lret
jnp
cltd
mov
dec
aad
push
push
cmp
cmpsl
inc
push
mov
cmp
pop
xor
and
cltd
xchg
cmp
cwtl
mov
and
into
pusha
sbb
call
push
fdivp
add
add
mov
lods
lods
inc
leave
sti
aam
or
sbb
rolb
insb
lds
cmpl
jne
std
cltd
pop
shrb
lock
std
push
dec
mov
mov
fstpt
or
add
mov
cmpsb
push
jo
les
xchg
mov
movsb
dec
aas
inc
inc
inc
or
lods
adc
push
push
sti
aam
push
int
cmp
fsub
stos
pusha
loopne
adc
movsl
and
mov
mov
popw
xor
mov
add
push
outsl
push
add
or
popa
adc
mov
out
loopne
pusha
cmp
mov
mov
cli
out
jb
jae
cmp
mov
imul
fisttps
mov
js
sbb
lret
inc
push
xchg
mov
loope
xchg
fisttpll
cli
aaa
or
jno
dec
ret
pop
mov
ds
imul
lods
notb
rclb
dec
push
iret
sub
inc
sbb
and
insl
ljmp
add
out
push
ret
nop
xchg
lds
xchg
jecxz
dec
sbbl
int3
cmp
adc
std
popf
inc
dec
aam
in
test
and
mov
shll
sbb
pop
adc
jae
shrb
pop
or
or
add
mov
fwait
fwait
dec
or
out
shlb
xchg
mov
dec
int3
sub
push
jne
lds
frndint
cmp
dec
add
sub
jne
push
ret
adc
test
sub
cs
std
test
adc
fnstenv
cmpb
and
xor
cld
sahf
push
sbb
push
push
or
popa
bound
sbb
lods
enter
sti
adc
jle
in
and
lds
dec
add
mov
add
sbb
aas
int
test
sbb
xchg
test
iret
add
dec
test
cmp
cs
out
popl
sub
sub
hlt
dec
leave
sub
aad
or
aad
sub
xchg
dec
insl
and
xor
cld
mov
sub
mov
xchg
push
clc
clc
mov
fldl
push
outsb
je
sbb
jne
lret
sti
pushf
sbb
insl
mulb
aam
movsl
mov
divl
mov
sub
call
pop
rcrb
or
jo
jnp
inc
mov
adc
out
push
test
test
std
sub
mov
fistps
outsb
sub
sub
in
out
sti
xor
divl
pop
jge
mov
xlat
outsl
stos
inc
pushf
shll
adc
js
int
cmp
std
mov
in
xchg
pop
pusha
pop
leave
mov
lods
mov
filds
push
push
push
aaa
lahf
mov
sbb
adc
mov
sub
jge
cmp
daa
mov
in
adc
mov
lahf
gs
std
and
pop
call
stos
cwtl
adcl
mov
je
aas
in
jge
nop
insl
mov
leave
ret
aad
mov
inc
into
test
dec
ret
outsl
xlat
in
pop
aaa
ret
xorb
push
cld
jne
sub
mov
sbb
stos
xchg
stos
lahf
rcl
roll
aam
xchg
adc
jae
jp
xchg
adcb
into
mov
mov
movsb
fcmovbe
jns
xor
loope
lret
push
dec
xchg
ds
sahf
aas
lcall
inc
cmp
pop
add
ljmp
push
sub
mov
inc
fstps
adc
or
insl
outsl
or
aaa
pushw
lods
mov
fiadds
add
jle
aam
inc
jg
jmp
push
arpl
orl
sti
mov
dec
inc
mov
add
lahf
test
repnz
dec
out
pushf
cld
xchg
and
scas
iret
xchg
ret
or
mov
inc
fs
ds
xorb
pop
inc
iret
and
movsb
int
sbb
mov
xchg
jbe
xchg
inc
aad
int3
lahf
jmp
icebp
xor
popf
jle
sub
popa
hlt
sub
adc
xchg
int
sub
jge
dec
jle
adc
or
in
cltd
dec
cmc
ficompl
sub
or
jae
in
out
lahf
push
imul
mov
aam
imul
test
pop
lret
dec
or
inc
jnp
inc
call
push
xor
fimull
xchg
or
cmp
ds
and
xchg
pusha
cmp
inc
repz
test
xchg
mov
lcall
stc
dec
sbb
push
or
push
push
cld
adc
jbe
or
adc
push
jecxz
adc
dec
shll
xor
fimuls
lea
lret
bound
stos
mov
and
adc
and
divl
or
and
punpcklwd
xchg
mov
lods
push
pop
scas
mov
jnp
sbb
or
clc
push
gs
test
hlt
mov
int
bound
lahf
enter
cmp
lret
mov
dec
fnstcw
mov
sbb
cld
jecxz
sbb
or
sahf
fs
or
jns
lret
mov
xlat
shr
or
daa
out
in
cmp
repnz
dec
cltd
jl
ret
arpl
faddl
push
xchg
push
cmc
cmpsl
mov
mov
jns
mov
jnp
popf
mov
repz
jbe
mov
scas
or
jl
or
jae
sbb
add
scas
mov
sti
sbb
xor
leave
in
ja
fmuls
inc
fs
jg
pop
add
jns
fdivl
jne
lods
aad
adc
clc
es
mov
js
mov
xor
inc
adc
imul
cmpsl
fisubrs
fld
mov
mov
lahf
and
xchg
aaa
mov
mov
xchg
out
in
dec
add
lret
cwtl
mov
cmp
jecxz
sarb
outsb
adc
or
xchg
inc
push
pop
cmp
adc
popf
or
push
xchg
push
mov
xor
jle
sub
jo
cld
jbe
cmp
xor
imul
sti
dec
aam
fsubrs
sub
leave
cmpsb
and
mov
test
cmp
in
out
clc
mov
in
pushf
cli
sub
enter
pop
jecxz
dec
lcall
movsl
inc
sbb
sbb
cltd
std
lret
icebp
sub
hlt
adc
ffreep
in
add
lods
dec
mov
add
dec
stos
repnz
inc
fld
mov
add
sbb
repz
in
test
out
cmp
and
mov
sahf
jbe
scas
xchg
pop
add
mov
ret
daa
aam
xchg
pusha
dec
adc
xchg
popa
mov
mov
push
jl
add
mov
add
sbbb
cmpsb
and
dec
mov
in
insb
adc
inc
imul
ja
mov
stos
rcrb
or
xor
std
xor
aam
pop
fs
fnsetpm(287
loope
shll
lods
int3
addb
push
les
xor
push
fbstp
outsb
jecxz
xchg
outsl
pop
cmp
mov
jmp
add
push
je
lea
dec
mov
icebp
in
in
ror
pop
lods
mov
push
add
pop
mov
dec
ljmp
shl
push
pusha
es
movsl
mov
add
jnp
sti
movsl
fadd
push
sub
nop
mov
mov
xchg
mov
jle
rol
cld
int3
hlt
xchg
or
cmpsb
insl
jl
xor
clc
or
dec
into
dec
in
mov
sbb
or
fistps
push
sub
out
in
pop
and
mov
cs
jecxz
inc
dec
dec
push
add
push
push
xor
mov
mov
adc
into
and
nop
mov
sub
pop
jmp
push
test
lods
call
aam
fmull
pushf
and
sbb
dec
and
scas
cmp
jb
rcl
dec
or
add
jb
mov
lds
xchg
std
pop
jne
push
or
shll
push
and
mov
loop
notl
cs
and
xchg
cmp
into
ret
das
push
shrb
je
pop
stc
mov
cmpsl
arpl
pop
outsl
inc
enter
fidivrl
mov
test
xor
inc
repz
aas
sar
mov
mov
es
inc
cmp
add
push
aas
imul
lcall
add
and
lret
cmpsl
sub
loop
in
pop
shl
rcrl
cwtl
jl
cwtl
das
sub
jno
add
mov
inc
inc
lds
xchg
fcmovne
jmp
loope
adc
lea
cltd
imul
ret
cmp
int
jno
mov
testl
std
mov
call
cmp
mov
push
mov
repnz
or
cmp
jbe
int3
aas
cmpsb
repnz
jmp
cmc
xchg
test
test
repnz
sbb
lock
push
call
xor
js
sbb
and
stos
pop
shl
stos
popl
add
inc
cwtl
mov
out
push
and
nop
inc
xchg
sub
fidivs
sub
loope
push
rol
cmp
cmp
and
jl
insl
lea
ret
js
mov
movsl
xchg
xor
aaa
pop
push
ds
or
jp
test
pop
push
mov
mov
outsb
jb
cmpb
mov
insb
mov
mov
out
cmpsl
fwait
sbbl
scas
inc
mov
jne
cs
lcall
imul
mov
cld
lahf
adc
hlt
icebp
mov
movsl
mov
jo
idivb
cmpsl
and
das
push
icebp
adc
jmp
jl
xchg
aam
xor
cmp
mov
inc
mov
add
mov
pop
dec
ljmp
mov
ss
js
out
sub
xor
aaa
mul
lret
adc
imul
sub
pusha
dec
bound
and
mov
add
mov
mov
pop
addr16
push
int3
or
fs
dec
dec
inc
rorb
xchg
inc
inc
mov
mov
push
mov
push
mov
repz
sbb
jg
mov
push
push
pop
cmp
repnz
add
pop
popa
mov
sbb
mov
xchg
cwtl
mov
sub
pop
mov
lods
pop
and
enterw
cmp
pop
jbe
mov
test
out
jp
fisubl
sbb
lock
nop
sub
std
sahf
repz
or
sarl
subb
pop
adc
pop
pop
adc
shr
movsl
push
jns
subb
out
cld
lea
cld
jg
xor
pusha
cmp
cwtl
test
cs
ret
inc
out
aad
in
ret
mov
mov
lret
aaa
in
jle
cli
dec
mov
sbb
loope
sbb
loope
les
mov
sbb
mov
hlt
add
and
stc
pop
test
sbb
push
mov
push
sbb
inc
loope
add
test
fptan
js
xchg
mov
xor
add
dec
je
add
in
filds
sbb
into
out
push
std
es
cmp
sbb
shll
aas
mov
jge
fdivrl
inc
push
cli
push
mov
pop
in
sub
inc
mov
jg
shrl
lahf
xlat
sbb
jo
dec
sub
test
adc
je
push
cli
sti
inc
sub
pop
test
nop
lock
mov
add
push
aas
pop
insl
xchg
lods
movsl
push
mov
and
cmp
xchg
push
aad
pop
ss
lea
mov
inc
mov
jl
pop
add
lds
fidivl
aaa
enter
or
es
insb
leave
xor
pushf
cmp
xor
mov
cmp
iret
mov
cmp
xchg
jno
jp
cmp
clc
addr16
mov
lret
add
inc
rcll
out
out
pop
sahf
xor
rol
xchg
rolb
into
test
xchg
inc
cmpsb
dec
loop
cmp
imul
jmp
repnz
mov
cmp
scas
loope
add
repnz
jb
iret
das
fildl
sar
mov
je
cwtl
jne
add
inc
out
inc
imul
xor
push
movsl
faddl
mov
jns
jmp
inc
dec
and
fldl
add
loope
dec
movsb
dec
fdivr
adc
stc
and
or
cli
fwait
sub
lret
inc
xor
push
loope
mov
jnp
dec
fisttpll
lcall
pop
outsl
push
leave
fsubs
mov
push
add
pop
scas
popa
push
ret
mov
xchg
or
gs
mov
test
and
mov
dec
cmpsl
mov
xchg
pop
dec
fsub
lret
pop
or
mov
jb
push
fs
add
xchg
mov
sbb
xchg
xchg
test
and
mov
sub
lret
aas
xchg
and
jmp
fdiv
push
mov
pop
pop
mov
adc
lret
or
mov
pop
sub
cwtl
popa
adc
add
dec
fisubrl
or
mov
mov
mov
adc
loop
aas
xchg
pop
jbe
push
lret
test
shl
stos
mov
xor
jb
and
or
cmp
pop
gs
xor
aaa
cs
insl
scas
bnd
imul
bound
leave
dec
daa
adc
add
push
loop
ffree
repnz
jp
jle
fiaddl
fstp
pop
repnz
cmp
cmp
in
xchg
jae
mov
shll
inc
scas
ds
xchg
pusha
cmpsl
xchg
popf
divl
popa
aaa
shl
pop
mov
adc
adc
mov
jo
aaa
xchg
mov
pop
xor
out
pop
adc
addr16
mov
ja
sbb
mov
push
fs
inc
jge
rolb
adc
pop
pop
repz
jbe
push
cmp
in
mov
mov
xchg
mov
mov
test
inc
sarb
arpl
popf
stc
and
jp
cmp
cmp
sub
mov
jb
insl
mov
ljmp
xchg
sti
imul
add
cmp
shrb
loop
negl
ffreep
and
and
mov
lahf
or
test
lods
push
dec
push
pop
subb
fstpt
push
in
lcall
inc
popa
xor
adc
dec
scas
pop
sbb
addl
mov
stc
add
cmp
and
fdivrs
les
sub
pop
mov
insb
ficomps
nop
dec
dec
cld
ret
inc
imull
jp
adc
pop
fwait
mov
jl
push
out
push
pop
cmp
dec
push
mov
mov
jae
inc
cmp
add
fstl
ja
dec
test
test
xchg
data16
dec
push
or
enter
lock
loop
mov
dec
mov
mov
mov
jge
pop
mov
mov
add
xrstor
xchg
imul
xchg
and
repnz
jae
inc
xor
jae
dec
mov
cmp
jb
sbb
add
out
jnp
xchg
push
xchg
xchg
imul
mov
xchg
cltd
mov
xor
shrb
add
lods
out
je
pop
popf
jle
mov
jl
cli
add
andb
jecxz
xchg
ret
fcmovnu
jnp
sub
sbb
repz
cmp
out
das
mov
xorl
popa
add
cmp
or
adc
test
pusha
cltd
xchg
shl
push
mov
rclb
mov
xchg
xchg
add
xchg
iret
loopne
in
sahf
rcll
ss
popf
pop
push
imul
popa
fsubrl
or
inc
fisubs
lcall
push
jb
add
adc
push
loope
cmc
ds
and
jns
ds
idiv
neg
inc
mov
loope
cmp
outsl
lahf
mov
leave
out
mov
xor
sbb
mov
adc
jnp
test
mov
jne
aas
dec
test
cmpsl
or
pop
pop
in
aad
into
mov
add
lcall
movsl
cli
imul
mov
int
push
mov
lock
lss
sbb
lds
push
xor
stc
mov
jb
out
push
stc
or
jmp
rcr
pop
scas
fildll
daa
test
push
cmpb
dec
mov
idivl
cli
sbb
adc
lock
mov
ss
shrd
mov
repz
leave
and
mov
mov
push
push
mov
jmp
cmp
in
test
mov
adc
jl
push
inc
in
mov
subb
and
fidivl
pop
mov
fildll
shlb
xchg
flds
cmp
loop
inc
shll
cmp
scas
mov
mov
insb
add
lods
push
cltd
mov
hlt
xor
push
cmc
cld
inc
pop
mov
jle
inc
cmpsb
push
pusha
sub
xor
ret
shl
xor
sub
xchg
scas
xor
sub
push
mov
mov
ljmp
das
jge
mov
pop
and
add
push
ffreep
das
and
jl
dec
xor
pop
push
es
pop
repnz
dec
jmp
int
into
insl
sahf
cmp
lret
lods
je
and
test
fsubs
test
fistpll
or
jmp
cmpl
add
in
shr
aam
shlb
icebp
test
mov
jnp
and
leave
jle
adc
aad
idivb
add
xlat
cld
push
and
dec
mov
sub
or
les
lret
jl
xor
mov
mov
sub
lret
je
repz
fisubl
inc
mov
dec
mov
cwtl
cmp
dec
inc
push
mov
jg
ds
mov
mov
adc
push
popa
mov
sub
sbb
fisttps
fstl
rcrb
pop
or
ret
ds
adc
mov
pop
mov
movsl
aad
fwait
xor
pop
mov
loop
fistpl
adc
lret
lahf
test
mov
lcall
mov
dec
imul
mov
mov
popf
enter
sub
cmpl
push
add
dec
and
mov
aaa
and
or
sub
aas
pushf
or
or
aam
pop
shr
adc
sbb
dec
xchg
sahf
dec
data16
and
pop
push
fmull
daa
loope
mov
rorb
scas
push
xor
xor
test
jmp
pop
sub
dec
dec
xchg
mov
pop
loopne
lret
mov
xchg
popf
add
lods
sarl
lds
push
dec
adc
sub
sbb
jp
lods
orb
mov
mov
sub
hlt
cmp
inc
push
insl
lret
jns
push
ljmp
pop
sbb
sub
sbb
popf
jle
or
pop
cwtl
lret
je
enter
sbb
xchg
bound
bound
testb
pop
fldl
pushf
push
in
dec
lcall
pop
xlat
or
cmp
and
dec
call
test
incb
or
cmp
adc
xlat
into
popf
pop
add
shlb
jbe
fs
and
sub
popf
clc
enter
inc
stos
cvtdq2ps
push
fsubrl
movb
daa
jp
push
sti
or
shlb
sbb
daa
bnd
andl
xor
pop
add
xor
cltd
or
inc
test
mov
jo
xchg
dec
int
pop
daa
push
leave
jbe
sbb
lcall
std
fisubl
shl
std
xchg
dec
test
int3
or
xchg
dec
mov
xor
insb
rcrl
fdivrl
push
add
or
loop
js
aas
cld
cmc
jo
push
in
push
stc
or
jnp
xor
cwtl
sbb
mov
xor
out
sub
jg
js
aad
pop
jns
and
out
imul
xchg
loop
outsl
addr16
jo
fisttpl
sbb
cltd
push
movsb
cmpsl
jp
dec
mov
pusha
std
pop
outsl
pmaxub
sub
in
cld
xchg
movb
test
arpl
push
leave
pop
test
loopne
mov
cmp
mov
inc
shll
mov
mov
dec
std
repnz
jl
icebp
xchg
fstpt
mov
pop
and
push
pushf
bnd
add
and
hlt
mov
addr16
pop
js
mov
hlt
gs
clc
dec
out
aam
xchg
aas
xchg
jbe
mov
add
xor
lea
xchg
dec
adc
ret
pop
lcall
xchg
mov
in
bound
addr16
ljmp
push
sub
pop
and
or
or
inc
mov
out
xchg
mov
call
pop
repnz
stc
popf
shrl
movsb
int3
xchg
sub
sub
fwait
push
dec
fdecstp
daa
lds
negb
lret
dec
sarb
inc
imul
mov
dec
testl
push
xchg
mov
ss
shr
and
push
in
call
inc
outsl
mov
mov
and
xchg
xchg
and
or
repnz
movsl
rcll
ret
lcall
lods
rorb
push
fistpll
xchg
mov
mov
shr
outsl
in
pusha
and
jnp
push
stos
js
insl
outsb
jno
push
mov
fldcw
movsl
sbb
xor
pop
cmpsl
scas
and
shrb
imul
adc
and
mov
jno
push
movsl
add
lds
mov
cmp
jmp
add
mov
mov
add
sbb
xchg
aaa
dec
mov
cli
cmp
sbb
sti
std
ja
cmp
pop
mov
in
dec
jae
cmp
in
ljmp
xor
push
xor
add
scas
mov
mov
imul
orb
daa
insl
jmp
or
test
jg
xor
nop
cli
rcl
adc
lahf
loope
js
clc
cmc
xor
pop
adc
and
pop
push
push
jg
or
fisubs
adc
rorb
popa
ljmp
mov
mov
push
cmp
mov
nop
xchg
push
add
loop
inc
adc
outsl
or
shr
shrl
sub
jne
mov
aad
or
mov
push
sub
cmp
adc
mov
xchg
jno
mov
xor
mov
pop
mov
and
inc
bound
data16
bound
aaa
sahf
imul
in
fstl
call
fdivs
sbb
nop
movsb
cmp
jb
push
ror
pop
mov
push
dec
cmp
mov
lret
ds
loop
movsb
lahf
imul
scas
xorl
dec
cmpb
sarb
ftst
cmp
dec
fdivl
jne
lods
sbbb
jns
mov
imul
pop
mov
icebp
sti
repz
push
lods
sbb
and
dec
push
pop
or
stos
bound
stos
movsb
add
ja
aad
adc
sub
cwtl
aad
pop
in
mov
mov
loope
loop
in
or
stc
test
aad
int3
test
dec
enter
sub
add
fisttps
pop
jmp
mov
in
push
push
jnp
sub
add
shl
add
fcmovnbe
mov
sub
add
imul
mov
jnp
inc
pop
hlt
enter
sub
push
aam
std
add
in
push
movsl
shlb
out
pop
lods
ret
ret
dec
fs
cmp
rcrb
sub
mov
pop
subl
mov
xor
xor
dec
out
pop
mov
xchg
out
xchg
cltd
sbb
xor
mov
push
mov
repz
adc
je
cltd
fists
cmpsl
arpl
sti
mov
push
pop
aas
sbbb
aas
das
inc
loop
push
xor
insb
repnz
inc
into
mov
fadds
repnz
dec
fstpt
arpl
jne
add
out
pop
les
nop
pusha
mov
dec
sbb
lahf
mov
das
fsubs
clc
jbe
pop
mov
xlat
jbe
imul
out
dec
adc
and
adc
in
mov
adc
test
out
and
or
aad
mov
cmp
mov
jecxz
xor
pop
fisttpl
push
mov
sub
add
mull
arpl
int
aad
aad
mov
mov
repz
push
sar
movsl
shrl
push
sbb
adc
inc
xor
lods
fldt
pop
jbe
imul
dec
ss
icebp
cmp
pushf
push
pop
shll
bound
jnp
inc
mov
push
sbb
dec
jecxz
or
cs
rorl
into
sub
or
inc
rcrb
jmp
stos
sbbb
js
into
ljmp
int3
lcall
ljmp
mov
fld
aad
adc
sbb
int
jmp
rorb
mov
icebp
popa
shl
shlb
test
ljmp
adc
leave
push
adc
in
fcmovb
inc
mov
stos
js
pop
popa
adc
cmp
jge
test
xchg
xor
jbe
cwtl
pushf
icebp
jmp
xor
call
sub
jbe
mov
ss
daa
aam
into
inc
out
les
jg
testb
and
subl
int
push
jnp
mov
xlat
xchg
test
mov
pop
jecxz
adcl
aaa
pop
jo
push
outsl
or
sahf
popf
imul
rcrl
fmuls
es
inc
iret
mov
aaa
cs
icebp
scas
lret
imul
in
aam
jmp
ret
xchg
add
lea
sub
movb
aaa
call
cmc
loop
stos
push
jo
or
in
sbb
lea
shrl
sub
es
sub
out
leave
mov
adc
mov
cmp
gs
push
leave
and
push
mov
dec
mov
addr16
jp
xchg
imul
scas
insl
mov
popa
push
js
push
lods
icebp
arpl
xchg
jmp
mov
xor
mov
lods
aas
xor
sub
cli
cmp
xor
add
sbb
xor
and
fs
lods
cmp
sub
call
mov
xchg
and
out
add
ds
lea
push
arpl
cmp
push
data16
loope
fistpl
in
in
jb
pop
push
out
inc
sub
adc
pop
dec
dec
ds
leave
testb
pushf
ficompl
negb
mov
aam
outsb
and
jecxz
outsb
std
adc
repz
pop
xor
ret
pop
pushf
fwait
push
xchg
mov
jmp
mov
js
movsb
sub
movsl
or
outsb
add
xchg
add
aas
jmp
insl
push
xchg
xchg
mov
mov
movq
add
adc
xchg
jo
jo
mov
testl
adc
loopne
pop
loop
xchg
adc
push
loopne
pop
xchg
icebp
dec
mov
jg
mov
xchg
cmp
aam
adc
mov
xor
push
mov
mov
ja
mov
adc
push
lret
push
mov
xchg
addl
ljmp
daa
mov
push
aam
and
pop
fisttps
xchg
lods
add
pop
jns
or
jl
shl
sbb
mov
stos
lea
adc
js
icebp
scas
data16
push
pop
iret
mov
out
pop
fidivrl
repz
mov
mov
pop
addb
ret
jae
pop
push
add
jl
stos
fdivl
inc
dec
sub
jg
cmpsb
in
ljmp
or
xchg
popf
and
sahf
push
dec
mov
and
movsb
and
xchg
daa
inc
daa
inc
arpl
in
xor
push
cmp
dec
xlat
pop
in
add
sbb
mov
jp
and
and
sbb
mov
jb
mov
jns
push
fsubs
lods
jmp
stos
shll
cmpsl
insl
pushf
sbb
xlat
cltd
push
icebp
loope
loop
xchg
imul
int
pop
sub
stc
loope
xchg
dec
push
rolb
fsub
sti
aad
dec
sbb
lret
inc
pop
add
adc
cli
cltd
jae
lods
push
out
inc
shrl
jl
or
movsl
xor
orb
inc
cltd
loopne
shlb
repz
lea
outsl
sub
lock
pusha
scas
sub
stos
inc
fidivl
push
adc
dec
js
jb
push
mov
push
lods
mov
inc
jp
jl
mull
adc
ja
mov
jae
inc
or
sbb
stc
cmp
hlt
movsb
addr16
cld
pop
lahf
fistpl
pop
mov
arpl
ret
ljmp
clc
cmp
dec
pop
cld
sub
popf
xchg
xor
lods
jle
insl
cmpsb
data16
ljmp
movl
cmp
dec
dec
cwtl
mov
jno
cmp
movd
scas
push
lret
ret
cltd
std
push
lds
ja
mov
inc
pop
stc
out
out
addr16
in
cld
or
add
nop
lea
cld
adc
test
adc
stc
pop
pop
cltd
mov
push
or
add
adc
jns
mov
mov
ljmp
ja
mov
xchg
xorl
fwait
test
out
and
aad
xchg
pushf
sarl
mov
push
inc
out
popa
push
imul
hlt
ds
movsl
sub
push
lock
insb
mov
sbb
xchg
push
in
mov
add
outsl
es
fnstcw
loopne
and
in
mov
xchg
push
sub
sub
cmp
inc
in
aam
lods
jge
pop
gs
ja
jecxz
cmp
sarl
stc
rcrb
scas
and
inc
ja
mov
fstl
sub
pop
das
xor
jp
lds
sbb
enter
cmp
mov
in
arpl
in
cs
inc
jbe
and
jne
jno
mov
and
sub
test
push
xchg
das
aas
scas
cwtl
push
outsl
push
xchg
sarl
stc
mov
cld
stos
mov
dec
test
loopne
inc
mov
mov
das
es
inc
xor
insl
jnp
in
xchg
stos
jle
and
or
push
sbb
das
out
jbe
mov
cmc
inc
call
lds
or
pop
outsl
sar
popf
and
ds
dec
inc
lds
dec
in
mov
sub
pop
dec
and
arpl
mov
push
jmp
sbb
mov
lock
ret
mov
push
fsubr
incb
sub
mov
je
inc
notb
jecxz
hlt
and
or
test
dec
andb
fldln2
inc
cmp
addr16
and
loope
push
sbb
je
and
subb
sahf
les
inc
mov
das
aaa
sbb
jg
pop
pusha
std
jno
push
xchg
mov
aas
mov
scas
push
jle
lds
xchg
xchg
les
xlat
push
shrl
dec
push
lods
fstl
sbb
sbb
sub
clc
mov
aam
mov
dec
and
xlat
cli
lcall
outsl
jbe
ret
andl
inc
mov
jecxz
fxam
clc
jp
lret
xor
jnp
or
push
mov
gs
mov
mov
in
xchg
test
call
push
loope
add
ror
inc
stc
jb
sbb
lds
inc
shlb
loopne
ds
daa
pop
dec
imul
jmp
inc
inc
xor
sub
es
test
or
dec
xchg
outsb
sub
idivb
lock
out
test
lcall
stos
popf
jp
testb
dec
in
pop
scas
lcall
dec
mov
ss
xchg
adc
cmp
outsb
pusha
imul
leave
push
xor
int
cltd
or
sub
jns
ss
or
mov
cmpsl
loopne
lret
adc
lret
mov
hlt
and
sub
mov
push
jbe
and
shrb
stos
mov
sbb
lret
push
movsb
pop
push
lds
push
jae
pop
mov
imul
xor
cmpsl
lret
test
pop
mov
imul
cmp
setb
lahf
in
and
fwait
xchg
mov
pop
lods
mov
xor
jle
mov
dec
std
fdivrs
fnstsw
push
int
cmc
sub
lahf
dec
mov
iret
sbb
jb
ss
jns
mov
and
scas
mov
cwtl
mov
inc
clc
test
sbb
jo
cmp
jne
add
fmuls
sbb
inc
shlb
out
stos
jno
lock
mov
inc
subl
mov
pop
clc
cltd
sbb
or
mov
mov
sahf
pop
shlb
adc
add
fcoml
jecxz
outsb
or
mov
pushf
pop
nop
xor
jbe
inc
ljmp
leave
adc
shrl
sbb
cmp
inc
test
cld
cmp
fnstcw
jmp
jp
aam
cmp
scas
enter
pop
lds
xchg
aas
jge
rorl
addr16
sub
or
popf
das
inc
dec
add
inc
mov
test
cmp
stos
dec
sub
scas
hlt
es
mov
out
clc
mov
mov
in
inc
push
add
mov
stos
nop
sub
mov
addr16
add
cltd
xor
pusha
mov
lock
add
mov
mov
movsl
loopne
mov
arpl
imull
ljmp
insl
jmp
outsl
scas
mov
out
sti
lods
mov
sti
pop
adc
add
and
add
mov
push
scas
pop
lods
adc
hlt
jge
adc
inc
xor
fldl
dec
ss
sar
and
sarb
stos
lahf
sahf
xchg
xchg
pop
stos
inc
jae,pt
cld
ficoml
sbb
ljmp
int3
sbb
inc
push
data16
orb
mov
icebp
sub
repnz
inc
loop
stc
leave
inc
imul
push
inc
and
inc
andb
add
js
lahf
les
popf
push
das
push
ret
jmp
jb
into
mov
push
int
fs
lock
mov
mov
into
stc
lea
sarl
push
movsl
aam
lock
inc
and
and
and
in
movsb
repnz
push
push
mov
jl
icebp
pop
xchg
push
in
das
dec
sbb
inc
out
mov
inc
iret
sarb
imul
push
pop
in
mov
popf
add
mov
and
mov
sbb
in
jb
daa
and
jecxz
repz
jecxz
dec
mov
inc
rolb
cmp
test
lahf
mov
mov
lods
clc
or
sub
sbb
inc
pop
call
mov
mov
xlat
mov
jmp
sub
pop
jnp
in
test
adc
push
jne
cmp
jno
pushf
jne
roll
out
repz
adc
imul
adc
data16
or
movsl
orb
addr16
cmpsb
das
adc
xchg
pop
add
dec
orl
dec
mov
jl
out
mov
loop
outsb
out
push
push
xchg
xor
jmp
xchg
xchg
pop
adc
cltd
xchg
hlt
xchg
fdiv
movhps
mov
adc
rcrl
adc
xchg
fs
cmpl
adc
scas
fs
punpckhwd
xor
cmpsb
xchg
scas
es
mov
imul
call
je
ficompl
sbb
in
dec
jo
lret
xchg
xor
jns
sbb
arpl
roll
shr
xchg
push
les
cmp
inc
dec
aam
cli
icebp
lods
inc
push
and
in
inc
sub
ss
repnz
dec
xchg
stos
xchg
movsl
adcw
out
pop
xchg
outsb
ficompl
call
mov
mov
mov
fnstcw
imul
jmp
rorl
dec
jbe
add
daa
adc
jecxz
xchg
sbb
and
les
mov
nop
out
je
nop
adc
dec
loop
adc
inc
cwtl
test
fnstenv
das
mov
ds
jmp
push
xchg
pop
out
test
jmp
push
mov
sub
push
cwtl
aas
mov
adc
jb
repnz
sub
pop
ds
pop
repnz
hlt
das
and
cs
dec
cmc
xor
sub
adc
mov
pop
leave
jecxz
cmpsl
insb
aas
mov
xchg
jl
int
loope
adc
jmp
mov
mov
dec
in
cld
aaa
fcmovbe
mov
jle
imul
push
mov
movsl
push
cmpsl
mov
push
loop
aas
divb
es
sub
sub
pop
int
push
gs
pop
inc
test
lahf
iret
cmp
fsubs
and
in
int
adc
mov
mov
dec
pop
mov
add
test
adc
cld
add
clc
sarl
rclb
add
dec
movsl
or
shrl
idiv
arpl
loopne
sti
call
inc
lret
outsl
pushf
loopne
dec
enter
pushf
in
push
jne
fwait
xor
sbb
and
div
fnstsw
sbb
push
mov
in
adc
push
popa
repz
mov
and
xchg
stos
and
mov
outsb
bound
pop
ljmp
jb
mov
adc
out
xor
or
bound
data16
push
out
aam
sub
fists
add
fwait
xchg
loope
pop
test
shrl
pop
sub
rorb
mov
push
int3
pusha
aam
jb
add
xchg
pop
mov
aad
cmp
sub
xor
jnp
repnz
mov
leave
rol
movsl
popa
arpl
call
mov
sbb
xchg
xchg
rolb
add
push
out
out
cld
or
mov
inc
cld
and
cs
jb
out
jno
xchg
and
fcoml
rolb
out
xor
or
sub
hlt
into
pusha
pushf
insl
aam
hlt
push
cmp
adc
imul
push
shrl
xchg
jns
popa
popf
or
ja
adc
dec
xor
pusha
movl
xor
rep
rorb
aas
xchg
cmpsb
cmp
icebp
in
outsl
pop
or
repnz
out
arpl
ds
cmp
xor
jmp
clc
jg
push
cmc
js
outsb
xor
stos
cli
test
ljmp
lods
mov
sub
lahf
cmp
lcall
arpl
mov
xchg
dec
cmp
xchg
inc
cmp
dec
dec
sub
loopne
into
loop
push
mov
lea
bnd
dec
xchg
std
mov
dec
pop
jg
enter
xchg
adc
iret
cwtl
pop
jbe
sub
xor
jne
insb
std
ret
lds
iret
mov
stos
roll
or
xchg
cmp
aas
xchg
push
aam
mov
push
jle
add
inc
mov
out
inc
and
dec
mov
out
daa
popa
popa
sbb
out
jp
not
lods
mov
fsubrl
daa
xchg
xor
mov
aas
cmc
mov
aad
xchg
pop
sub
xor
popl
in
movsl
mov
and
iret
test
adc
scas
outsl
cmp
test
mov
lods
adc
mov
dec
movsl
mov
mov
push
aam
mov
inc
jne
sbbl
and
inc
stos
push
sub
xchg
xchg
ret
push
cli
and
adc
ret
and
nop
adc
add
mov
dec
mov
xchg
pushl
sub
lock
jecxz
imul
pop
sbb
mov
mov
xchg
push
inc
adc
xor
jae
or
ss
pop
fsts
hlt
mov
flds
iret
cmpsl
sbb
mov
cs
or
in
inc
fmull
lea
pop
daa
das
jmp
icebp
mov
imulb
test
jecxz
or
shrb
cmc
xchg
mov
addr16
rolb
ret
outsb
cmp
and
inc
sbb
mov
inc
gs
ja
push
mov
mov
adc
cld
fsubp
lcall
xchg
cmp
ret
aad
insl
xchg
lods
sar
and
adc
lret
jmp
fists
aas
mov
push
inc
fwait
and
sahf
sbb
pop
cs
pushl
xchg
cmp
inc
loop
or
outsl
pusha
pop
xchg
insb
xlat
js
out
cwtl
push
mov
mov
lret
roll
lret
lods
pop
repz
sbb
aaa
jno
push
mov
ds
out
sub
pop
mov
cltd
lahf
add
aad
repz
das
fidivs
dec
cmp
js
fs
dec
mov
pushf
rorl
stos
xchg
xchg
adc
loopne
testl
int
leave
sub
dec
mov
cs
movups
rclb
loopnew
clc
adc
jl
cltd
add
xor
es
mov
sbb
sbb
lea
mov
ja
push
cmpsb
cs
xlat
popa
roll
das
xlat
sub
stos
popf
sbb
mov
mov
mov
mov
and
add
push
mov
es
outsl
xor
rcrl
xchg
enter
in
fldcw
daa
inc
xchg
push
or
ret
loopne
aad
jecxz
cmpsl
loopne
pfrcp
das
mov
sub
movsb
mov
daa
mul
mov
mov
mov
push
push
sub
popf
mov
stc
sub
lcall
les
ds
cmp
es
adc
ja
testb
test
jns
lods
in
inc
popa
adc
sarl
pusha
cwtl
cmp
aam
sub
pop
inc
inc
movsb
or
cmc
xchg
push
and
in
lret
bts
stos
pop
sbb
mov
adc
lock
and
in
mov
pusha
movsb
xchg
push
xor
das
sbb
inc
out
jecxz
jno
mov
lret
sbb
adc
imul
int3
lret
orb
mov
cmpsl
cld
shrb
nop
notl
push
addb
fimull
cmp
mov
cltd
mov
jl
dec
mov
cltd
shrb
add
sub
add
push
popa
ljmp
xor
imul
lea
xchg
sbb
insb
outsb
mov
mov
aaa
push
lock
dec
leave
push
push
gs
lahf
and
push
or
shlb
sub
jmp
ja
out
repnz
shll
add
cmp
push
xchg
jno
js
xor
add
std
sub
xor
pusha
enter
sti
fwait
push
pop
scas
std
loopne
gs
jae
fsubrp
data16
movsb
nop
mov
insl
add
ret
mov
aad
scas
push
out
mov
pop
ss
ret
dec
jg
dec
loopne
mov
jb
stos
dec
fimuls
push
or
js
in
sbb
or
shll
aaa
stos
addr16
push
insb
outsb
ret
mov
push
lcall
stos
and
stc
into
ds
cld
adc
sbb
add
mov
loop
pop
pusha
mov
test
adc
inc
loope
pop
icebp
pop
jmp
xor
fists
cmp
fldenv
dec
mov
or
sub
cltd
in
mov
out
jae
push
flds
rcrb
mov
imul
lds
fnstsw
loopne
push
outsl
push
pop
or
xor
cmp
or
pop
mov
shl
dec
jo
loopne
test
fwait
mov
cltd
ja
loope
arpl
add
jns
aaa
fwait
sub
pushf
add
fnstsw
test
testb
gs
sub
cmp
pushf
jmp
or
xchg
aam
fisubrs
mov
and
stos
and
adcb
leave
cmp
in
add
xchg
es
pop
jl
dec
jmp
mov
mov
xor
mov
push
xchg
and
push
je
ss
sub
lcall
nop
pop
add
test
or
cwtl
loope
or
push
in
lds
sub
sahf
test
cmpsb
lods
adc
mov
aam
xchg
aas
sbbb
mov
pop
movsb
mov
iret
fidivs
fnsave
mov
mov
jbe
roll
cmp
leave
cmc
or
cmp
adc
jl
lea
adcl
stos
mov
mov
sbb
mov
call
adc
jmp
jp
sbb
jmp
test
cmpsl
pop
sarl
pusha
mov
add
or
and
adc
cmp
xor
mov
sub
push
sbb
or
pop
cwtl
push
adc
inc
sub
xor
mov
jge
inc
or
xchg
mov
sbb
or
pop
push
hlt
loope
nop
sub
cmp
xchg
push
pop
insl
bound
and
movsb
pop
arpl
or
addr16
xchg
out
jg
and
lock
popf
add
adc
sbb
mov
jae
ret
in
fdivs
insl
push
enter
jecxz
int3
xor
mov
cld
fldenv
dec
xchg
mov
aad
pop
xor
test
lret
mov
aaa
dec
add
or
inc
cli
add
add
inc
and
insb
ss
sub
sbb
sahf
sbb
cwtl
insl
data16
pop
add
rorl
xchg
sub
lret
pop
pop
aam
jp
push
addr16
mov
ljmp
jae
adc
mov
into
push
incl
xchg
sbb
outsb
mov
xor
je
aas
mov
sbb
fimull
xor
xor
jmp
aaa
roll
sub
add
lret
push
push
inc
inc
stc
and
jle
or
add
xor
decl
pop
frstor
sbb
int3
mov
sub
loope
pop
mov
lods
std
pop
in
mov
push
xchg
mov
arpl
mov
add
push
pushf
jge
jle
dec
mov
inc
scas
sbb
dec
sub
and
mov
jp
xor
iret
sbb
test
call
mov
push
dec
aam
cmp
cmp
test
fstl
add
ficompl
xor
lock
fwait
out
mov
push
sub
xchg
mov
les
and
cs
cmp
adc
sub
gs
out
push
jo,pt
rcrl
jnp
fldt
jno
jno
cmp
insb
inc
mov
push
fisttpll
inc
test
inc
es
mov
iret
push
js
fnstsw
sub
pop
outsb
test
or
popa
inc
repnz
cmp
xchg
lock
jl
jmp
sub
aad
add
xlat
scas
and
outsb
xor
out
push
mov
sub
clc
insb
rorb
mov
and
xchg
aam
or
jl
xchg
pop
movsb
and
rcrb
mov
cmc
std
js
cmpsb
sbb
pop
out
push
jecxz
jo
lea
push
int3
out
lock
mov
mov
fadds
sub
mov
dec
fists
outsb
xchg
sub
push
jb
push
fistpl
lock
jns
rorl
es
or
add
and
sbb
pop
or
ja
inc
dec
stos
insl
adc
iret
fisubrl
add
in
ficoms
and
pop
adc
push
int
movsb
nop
jb
lods
xlat
in
scas
xchg
out
insb
cmpl
in
cmpsb
loop
inc
ret
lahf
fnstsw
mov
pop
add
mov
dec
je
nop
shrl
mov
repnz
lock
inc
jp
add
mov
repnz
push
es
rcrl
out
stc
xor
sbb
rcrl
test
out
xor
xor
mov
lret
ret
jle
pop
aaa
out
or
adc
xor
call
adc
inc
ja,pt
insb
cmp
popf
rcll
xor
jo
enter
push
cmp
jg
cwtl
fadd
test
ret
mov
scas
mov
fistpll
inc
inc
inc
push
sub
sbb
and
push
das
jle
mov
inc
dec
dec
xchg
jbe
push
mov
dec
adc
sub
pop
inc
pop
gs
push
mov
cmp
fs
mov
or
call
or
movsl
inc
mov
pop
dec
xchg
out
cmp
sub
xchg
or
cli
xchg
insb
nop
lods
cwtl
addr16
out
fdivrl
jno
imul
movsl
sub
ret
repnz
adc
xor
pop
faddp
nop
xchg
xorb
fsubrs
jo
call
icebp
sahf
and
cmp
inc
fnstenv
mov
dec
inc
and
cmp
fiadds
imul
sbb
dec
sub
inc
stc
rcrb
cs
jmp
cli
cmp
mov
sub
ds
out
mov
cmpsb
or
mov
andb
mov
cmp
inc
xchg
mov
stos
daa
mov
es
lahf
lahf
nop
pop
mov
mov
aad
sub
mov
jne
les
clc
xor
mov
je
aaa
jb
das
lcall
mov
loope
dec
and
jmp
lods
and
pop
cmc
mov
ret
cltd
cmp
lea
das
mov
lret
gs
ljmp
out
stos
pop
inc
outsl
popf
rolb
jecxz
scas
pop
jl
mov
pushw
out
push
mov
enter
jge
jb
jl
mov
or
sbb
lret
mov
mov
cmpsl
xchg
pop
cmc
call
and
sub
xlat
loopne
cmp
into
inc
std
dec
inc
in
adcb
inc
xchg
fstpt
push
jp
fdivr
dec
fnsave
fsubl
add
add
test
adc
ret
sbb
xchg
cmp
rclb
ret
jg
popf
mov
rol
sub
sbb
rcrb
xchg
ljmp
inc
test
cmc
push
jmp
dec
jno
addr16
inc
xchg
mov
pop
push
adc
adc
pop
mov
xor
in
inc
rorb
mov
out
dec
xchg
rcrb
in
aaa
sbb
mov
imul
dec
scas
push
lea
pop
mov
adc
popf
icebp
jecxz
xor
imul
or
rcll
testb
inc
rorb
imul
into
int3
xor
test
test
fidivrl
addr16
popf
bound
test
jle
rclb
sub
dec
sub
movsb
mov
cmp
in
lret
mov
adc
cmpsl
and
sbb
xor
adc
je
mov
sub
cmp
adc
insl
adc
sub
outsb
mov
shll
push
add
popa
in
lods
add
shrl
push
das
inc
or
addr16
stc
xor
popf
mov
mov
jno
es
jg
adc
xchg
adc
scas
icebp
das
inc
sar
sbb
imul
clc
push
add
push
aam
repz
sbb
frstor
stos
sub
lods
mov
xchg
push
cmpsl
jne
mov
or
leave
popa
pop
add
push
inc
shlb
xor
cmpsl
out
or
int
daa
jns
mov
mov
aaa
xchg
cs
and
mov
add
in
pop
jmp
lret
fwait
enter
aam
lcall
out
and
cli
mov
cs
and
dec
enter
clc
sbbb
and
sub
out
popf
adc
data16
fdivrs
inc
add
bound
jle
jmp
xchg
call
daa
xlat
pop
mov
sarb
dec
or
lods
inc
add
pop
fsts
enter
sti
flds
jns
ret
das
popf
add
arpl
movsb
lds
cmp
ret
inc
enter
jae
cmpsl
add
dec
xchg
sub
and
inc
jnp
push
shrb
ret
data16
test
test
fists
cmp
popa
inc
pop
xchg
rol
ja
cmp
pop
cmp
xchg
stos
movsb
mov
inc
cwtl
test
sbb
movsl
cld
sbb
fldcw
imul
and
test
and
in
dec
lods
fsub
pop
mov
imul
cmp
dec
push
je
dec
fdivrl
lock
mov
lret
mov
outsb
out
add
dec
inc
out
ja
dec
sub
popa
xchg
mov
mov
leave
aad
xchg
mov
sub
lods
dec
mov
loop
sbb
data16
icebp
sbb
or
popa
xor
and
cmp
jnp
das
je
ret
enter
fimull
sub
int3
pop
mov
push
mov
xchg
xor
sub
inc
arpl
mov
jne
pop
sbb
mov
les
adc
ss
and
mov
leave
jp
outsl
imul
jb
mov
out
pop
aas
out
mov
ja
push
fwait
mov
das
jnp,pn
inc
shrl
xchg
imul
lods
add
or
test
test
jo
mov
sbb
sahf
add
mov
lock
push
inc
xor
adc
shll
lcall
push
aad
loopne
mov
mov
dec
push
pop
mov
fwait
and
xchg
xlat
and
ja
mov
inc
or
jno
mov
shlb
jnp
out
shll
xchg
pop
lds
adc
push
dec
idiv
popf
rorl
in
mov
sbb
xchg
leave
cmp
pop
xchg
cmp
outsb
jnp
inc
add
je
hlt
out
mov
call
or
mull
adc
cmp
inc
push
outsb
jmp
arpl
pop
imul
lcall
dec
dec
shr
iret
mov
faddl
jle
lret
inc
and
mov
imul
cmc
mov
jmp
mov
sbb
push
dec
aas
cltd
jp
int3
mov
mov
lods
jmp
lea
jbe
mov
push
icebp
cs
lds
in
push
sbb
lock
sub
dec
insl
xchg
in
iret
test
stos
frstor
jg
pop
lret
lahf
pop
add
mov
jno
aaa
xchg
adc
sahf
pop
dec
repnz
cltd
push
int3
sub
mov
push
xor
add
lret
sbb
leave
repnz
test
fstpt
push
push
je
sub
pop
mov
and
mov
movsl
int3
ficompl
ficoms
mov
pcmpgtb
cmc
add
shrl
aas
lret
mov
or
int
out
mov
sub
jg
dec
cmp
or
mov
subl
pop
sbb
je
adc
inc
rclb
rcll
xchg
jl
jcxz
imul
in
sbb
insb
sub
jp
scas
loop
rorb
sti
or
popa
xor
xchg
sbb
daa
paddd
mov
and
mov
xor
js
ds
dec
inc
popa
adc
test
enter
loopne
mov
or
icebp
cmpsl
sar
das
mov
rorl
daa
jns
test
in
pop
into
loopne
repnz
mov
lahf
xchg
in
mov
aas
loope
scas
mov
mov
es
movsl
sbb
xchg
jl
and
mov
xchg
dec
frstor
fildl
push
push
imul
popf
call
adc
test
inc
jno
mov
jbe
mov
inc
or
outsl
cmp
ret
mov
add
out
xchg
sahf
es
push
push
pop
leave
xchg
fnsave
ja
hlt
insb
pop
les
jns
bound
add
bound
pop
push
aad
aas
and
add
lods
imul
insl
mov
lea
repnz
clc
mov
adc
cmpb
jno
in
lcall
ret
inc
mov
jmp
inc
xor
sub
aas
xor
arpl
xchg
cmp
sub
add
adc
subl
pop
jle
sub
out
adc
addb
or
aas
jp
loope
cmp
xchg
ja
test
adc
xchg
jne
xchg
ljmp
push
pop
daa
sub
xchg
cmpsl
popa
andb
adc
es
aad
adc
lods
mov
cmp
aam
test
sti
imulb
inc
pop
adc
xchg
xchg
lds
dec
mov
insb
lahf
xchg
pop
jno
loop
cmpsl
mov
lret
push
add
adc
jne
pop
mov
xor
xchg
xor
dec
jmp
xor
pop
mov
jns
in
mov
cltd
rcrb
sahf
stos
movsl
in
popf
daa
out
mov
rcl
pushf
mov
fisttpll
dec
ret
adc
mov
xchg
fsubl
and
mov
cwtl
loopne
mov
pop
jnp
pop
popa
mov
jb
mov
jecxz
test
shrl
andl
dec
and
pushf
mov
icebp
adc
das
mov
int
in
pop
jle
sbb
cltd
mov
nop
add
pushf
gs
ds
dec
mov
subb
scas
push
mov
ds
sbb
call
pop
insl
popf
jb
jmp
loopne
jl
movsl
lret
js
out
es
sbb
and
or
xor
jns
aas
imul
insb
cmpsb
clc
andl
xchg
dec
or
mov
mov
mov
ds
imul
and
fcomi
arpl
popa
dec
pop
loop
daa
jne
xchg
inc
cs
sbb
movsb
adc
sub
xchg
sbb
or
hlt
lret
in
or
add
repnz
movsb
xor
sub
mov
mov
adc
push
mov
shll
dec
decl
test
sbbb
push
fucomi
movsl
lock
addr16
and
repz
jp
das
in
adc
cmp
enter
movsl
cs
cmp
inc
ja
xor
dec
aaa
clc
sbb
outsb
decb
jle
mov
call
push
nop
cld
pop
call
add
pop
pop
mov
aam
pop
xchg
cmp
jb
aaa
fs
fmul
push
int
iret
lods
add
adc
aam
jg
sbb
fisubs
test
fcomip
xchg
ret
or
xchg
mov
or
hlt
push
int3
hlt
popf
cmp
test
imul
cwtl
mov
adc
jmp
mov
cs
pushf
and
mov
das
xlat
insl
int
jne
orl
cmp
insl
pop
dec
sub
mov
xor
xchg
stos
pop
das
fwait
sbb
cmp
jecxz
jae
gs
imul
mov
dec
inc
push
pop
jmp
sub
stc
mov
xchg
in
hlt
shr
xchg
in
sbb
xlat
aam
xlat
test
iret
enter
call
xchg
ret
shrl
lea
mov
imul
call
lahf
pop
ljmp
mov
test
xor
xlat
test
sub
pop
scas
lret
cmp
cld
sbb
push
or
push
or
pop
jbe
subb
xchg
mov
inc
dec
and
in
hlt
jne
jo
negl
jp
out
jbe
pop
mov
cmc
xor
lea
sarl
or
test
mov
push
mov
sbb
fwait
push
lea
dec
fdivl
add
inc
or
xchg
xorl
add
subb
and
inc
inc
and
pop
int3
lods
mov
push
cmp
std
add
xor
daa
lret
pop
out
sub
cmpsb
fldenvs
andl
cld
jg
add
or
xchg
bound
sub
pop
and
mov
scas
lea
dec
xchg
mov
pop
push
mov
orl
into
icebp
xchg
mov
aas
xor
sbbb
popf
sbb
cmp
cmpsb
and
shll
aas
ss
dec
popf
adc
je
add
push
fsts
outsl
inc
pop
xchg
inc
push
fwait
mov
sbb
pushf
rcr
inc
adc
add
leave
inc
inc
fstl
xchg
mov
cwtl
xor
or
test
rolb
jne
outsl
pop
fcmovnbe
sub
jnp
mov
iret
xchg
pop
jmp
push
fbld
mov
scas
icebp
inc
incb
xchg
rclb
mov
icebp
in
xchg
imul
int3
dec
enter
test
pushf
icebp
cvtps2pd
cld
or
or
test
insl
pminub
push
mov
sbb
sbb
or
or
shll
adc
adc
pop
push
or
loopne
sahf
insb
lods
hlt
sub
jb
cmp
adc
in
idivb
sahf
std
addb
push
xor
ret
stc
pop
je
arpl
movsb
movsb
je
or
mov
pop
andb
mov
cmp
fnstsw
test
addr16
mov
xchg
dec
push
xchg
mov
outsb
sbb
jno
fcomi
cmp
sbbb
fimull
fidivl
lahf
ljmp
in
roll
lds
ret
ljmp
mov
jp
lods
sahf
jmp
aam
cs
pop
loop
push
cld
jae
push
mov
inc
data16
jb
cmpsb
xchg
shlb
lret
das
mov
sub
sub
add
pop
sti
or
repz
cmp
ret
xchg
push
insb
jb
mov
push
iret
jb
dec
pshufw
pop
mov
outsl
jnp
inc
sub
push
fs
xlat
scas
addl
cmp
pop
sbb
ljmp
daa
pop
pop
lcall
adc
lcall
mov
jmp
sbb
fsubrs
xchg
ret
aad
hlt
and
mov
mov
bound
in
loop
arpl
lds
lahf
mov
inc
push
and
add
xchg
mov
adc
push
loope
sub
sub
movb
int3
and
sub
loopne
xchg
lock
out
jns
lahf
pop
addr16
gs
jns
sarb
cmp
outsl
and
add
adc
insb
sub
pop
push
jle
test
and
mov
ljmp
adcb
aas
aad
pop
add
mov
das
lock
pop
mov
or
inc
fwait
out
add
xchg
pushf
shld
add
sahf
mov
or
call
and
inc
rclb
mov
leave
cmp
jmp
imul
xchg
shrb
lahf
push
lea
push
jg
xchg
inc
sbb
jge
stos
shlb
leave
jg
repz
lock
ljmp
sti
in
pop
out
pop
mov
jmp
push
or
shll
hlt
call
pop
pop
mov
push
inc
sub
faddp
pop
pop
rclb
imul
iret
sbb
xor
cmp
cli
ljmp
movsb
fwait
cld
stc
ds
jp
mov
std
jg
ficoml
push
push
cmp
dec
push
mov
fwait
mov
push
mov
mov
je
popl
cld
pushf
mov
pop
stc
or
and
add
sub
shrb
call
dec
sbb
lcall
jl
pusha
aam
imul
aaa
imul
int3
mov
lea
sbb
xchg
dec
mov
mov
sbb
jle
push
rcl
enter
mov
xchg
jbe
jne
jg
out
jp
les
sub
jne
daa
cmp
jle
lret
push
add
jae
loop
jmp
orl
sbb
divl
push
add
daa
pop
and
test
jl
mov
and
mov
sub
cmp
fstpt
stc
jno
and
addl
xchg
xchg
negl
cs
add
test
aad
shrl
jbe
lcall
je
jne
mov
imul
out
sub
push
mov
or
inc
lods
in
xchg
bound
cltd
mov
iret
jg
jbe
dec
fdiv
sub
mov
mov
pop
xchg
lods
addr16
lcall
pop
inc
xor
cwtl
and
fs
sub
push
ret
xchg
mov
push
cmovle
and
mov
lcall
xor
jbe
arpl
rclb
jno
sbb
mov
xchg
cwtl
cmp
mov
jo
int3
insl
aad
mov
inc
lahf
jnp
push
cmpsl
pop
and
cwtl
fists
sub
mov
fisubs
push
xor
dec
sbb
out
pop
lahf
and
adc
test
enter
inc
xchg
add
sbb
in
outsl
lret
mov
dec
jns
cmp
sub
pop
shrb
push
lahf
mov
inc
addr16
divl
in
repnz
mov
pushf
jge
das
enter
dec
pop
pop
or
push
sbb
enter
adc
mov
aaa
push
mov
rol
sbb
inc
negb
inc
aad
sub
in
jge
cmp
pop
xor
out
mov
adc
sub
das
mov
cmp
push
lock
in
sti
push
xor
iret
push
arpl
xchg
lahf
sub
xchg
xchg
mov
fcoms
xchg
scas
orl
dec
mov
add
mov
pop
cmp
pop
add
loopne
insb
rorl
push
push
aam
add
cmpsb
aaa
cltd
sbb
cwtl
enter
sarb
lret
ss
test
je
arpl
lods
or
dec
bound
inc
xorl
and
jmp
add
jge
push
dec
in
inc
in
out
stos
shll
jp
and
jge
pushf
lahf
movsb
orl
ret
inc
lahf
mov
mov
pop
aas
pop
and
lcall
call
mov
mov
cld
cmc
rcl
mov
int3
jae
mov
cld
int3
dec
es
shl
push
cld
cwtl
nop
es
fsubrp
push
std
fs
jl
pop
rclb
fwait
jg
lcall
cli
push
rclb
inc
push
jmp
sti
dec
inc
xchg
push
cld
cltd
imul
jo
subl
fisttps
aad
xchg
fsub
hlt
adc
or
mov
lds
xchg
and
out
add
ret
outsb
std
xchg
outsb
hlt
or
cli
sub
push
add
xor
and
pop
lods
lret
cmpb
sahf
cltd
lcall
fisttpll
loope
jecxz
mov
fiaddl
xor
into
les
inc
test
insb
filds
fwait
std
pop
add
add
lea
push
xchg
pop
cmc
movb
shl
in
pusha
lahf
mov
rorl
sbbb
xor
xchg
mov
movmskps
push
cwtl
fmull
xor
mov
mov
xchg
arpl
add
sbb
scas
mov
mov
mov
mov
lods
push
mov
pop
jl
or
adc
loope
jb
sbb
out
pop
sarb
sbb
add
dec
dec
rcll
xor
int3
mov
aaa
aam
std
out
add
mov
mov
mov
hlt
rorb
inc
sahf
mov
div
ret
out
inc
sbb
and
mov
mov
xchg
push
mov
adc
mov
pusha
shr
lock
jb
out
filds
xchg
fsubl
push
mov
inc
mov
leave
mov
cmpsl
or
ret
mov
push
sbb
sub
xchg
es
ficoml
mov
mov
xchg
std
test
addl
pusha
xchg
fistpll
jge
in
mov
jo
cltd
push
sbb
push
loopne
stc
xchg
push
loop
movsl
daa
sbb
lahf
mov
mov
ret
mov
mov
cmp
add
xor
insb
adc
das
repnz
pop
ret
mov
mov
in
call
pop
out
and
aad
cwtl
into
stos
jns
cs
orb
pop
sbb
adc
and
into
add
int3
adc
daa
jp
jnp
shl
out
xor
fsubrl
sbb
pop
iret
dec
inc
or
data16
inc
out
cwtl
shrb
hlt
sbb
jmp
sahf
ret
xor
icebp
cmp
xchg
sbb
sbb
fdivr
cmp
daa
insb
adc
push
sti
adc
push
pusha
mov
cwtl
push
test
and
lock
mov
push
inc
loop
cmc
sbb
stos
outsb
sbb
into
xchg
inc
rclb
mov
or
outsb
popf
je
fwait
inc
dec
fistpll
mov
lods
dec
popa
test
adcb
jmp
lret
mov
cmp
cmp
and
loope
ud0
imul
nop
out
cmc
out
out
xchg
test
sbb
lret
inc
jle
gs
xor
mov
in
mov
jle
xor
sub
xor
cmp
popf
mov
push
fistps
mov
inc
mov
in
xor
add
sub
cld
sti
cmp
ds
cmp
mov
mul
cmpsl
decl
fiaddl
push
fs
data16
lcall
movsb
fidivrs
xchg
push
jmp
xchg
cmp
pop
mov
push
xor
popa
fcompl
xchg
xchg
push
or
xor
imul
xor
pop
dec
push
adc
popf
stos
adc
sbb
cmp
mov
cmp
sbb
push
iret
fists
js
xchg
test
out
inc
mov
pop
int
iret
shrb
sub
sub
push
mov
push
popf
sbb
add
jns
sbb
jns
clc
cmp
xor
cs
push
lret
fstpl
aaa
sbb
enter
xor
lock
loop
out
adc
dec
mov
in
and
dec
pop
and
pop
dec
xchg
or
aaa
outsb
hlt
les
dec
or
loop
push
cmp
stos
push
mov
js
aad
pop
inc
push
mov
gs
sbb
int
lock
mov
sbb
pop
pop
imul
lods
lret
add
mov
out
imull
adc
sub
mov
inc
nop
pop
mov
cmpsb
pop
xchg
lahf
jmp
add
ss
testb
sahf
add
ja
sub
push
sbb
mov
shrl
out
lods
out
jecxz
or
push
imul
sub
sub
or
sbb
xchg
mov
adc
xor
adc
ljmp
fstl
or
cli
dec
roll
daa
fidivs
jne
cmp
das
test
test
jbe
or
inc
jbe
rorl
mov
insl
stos
dec
pusha
pop
mov
push
mov
adc
leave
cmpsb
dec
mov
sarb
jmp
mov
in
in
aaa
jo
push
in
fs
andl
imul
testl
xchg
inc
pop
loope
push
nop
jl
xor
mov
stos
mov
or
pop
mov
cmp
imul
and
lock
lods
add
loop
add
inc
enter
pusha
mull
popf
and
es
out
push
sbb
add
xor
nop
jne
sub
outsl
imul
mov
sbb
xor
pop
inc
pop
shrb
add
leave
inc
out
sub
mov
inc
xchg
addl
push
xor
push
mov
mov
jns
repz
fsubrs
dec
add
lods
cmp
lea
dec
add
testl
mov
shlb
pop
push
mov
cmpsb
fmull
fnsave
shll
pop
loopne
push
repz
and
add
xlat
pop
and
dec
xchg
mov
push
in
mov
std
sbb
inc
shll
cmc
ret
ss
clc
inc
ljmp
loopne
xor
sbb
out
push
lods
test
nop
int3
mov
rolb
and
xor
push
dec
mov
shll
pop
lret
adc
loope
movsb
ss
sub
adc
pop
sbb
sub
xchg
rorb
into
pushf
inc
leave
pop
or
fadds
add
mov
hlt
mov
xlat
or
cmp
or
into
adc
popf
mov
xchg
repz
dec
sub
stc
sbb
sbb
repnz
call
cs
pop
xchg
stos
mov
add
mov
xor
add
rclb
verr
test
xor
mov
insl
or
aas
je
cmp
and
fisttpl
sbb
fisubs
mov
movsb
sbb
ljmp
mov
pop
pop
dec
ret
dec
std
push
and
sub
int
aaa
imul
sahf
repz
pop
in
fisubrs
xor
movb
out
inc
orb
adc
testl
cmp
in
mov
ds
mov
je
jno
mov
dec
aad
rcrb
pushf
cmp
aas
adc
push
imul
movsl
test
xchg
sbb
and
outsl
aas
jmp
std
pop
push
xor
or
mov
in
dec
push
outsb
sub
xorl
int3
cmp
xor
aad
aam
mov
jge
pop
pop
popa
ret
mov
fsubr
dec
pop
cmc
data16
or
pop
outsl
xchg
gs
cmpsb
test
inc
cmpsl
mov
inc
inc
sbb
add
mov
nop
or
aas
ds
push
xor
fistps
ljmp
test
mov
inc
orb
mov
fs
movb
mov
dec
push
cltd
les
pop
ljmp
xor
or
outsb
pop
cld
test
shlb
out
stos
xor
testl
ss
aad
sbb
xchg
push
out
repz
cmpsl
adc
jge
pop
in
stos
pop
jl
fmul
cmp
daa
pop
sbb
mov
cmpsb
iret
sbb
in
pop
aas
xor
outsb
add
movsb
xchg
test
inc
inc
fcomps
xchg
aad
mov
lcall
test
movsl
pop
out
sahf
add
bound
push
cmp
scas
int3
mov
je
or
movsl
cmpl
and
push
pop
push
xor
jns
inc
es
push
jge
sbb
mov
lea
add
test
jb
pop
in
push
es
push
sbb
pop
add
pushf
jp
adc
hlt
xchg
imul
mov
push
lret
sbb
dec
jne
fidivrs
xor
cmp
pop
fisttpl
push
adc
dec
push
in
dec
push
sbb
mov
jnp
or
xorb
mov
inc
jg
push
lds
enter
and
xchg
arpl
inc
lods
ret
mov
les
mov
or
insl
inc
xchg
add
push
idivb
or
aam
cmpsb
mov
das
mov
pop
push
dec
push
lods
aaa
dec
rcrl
mov
or
xor
jne
mov
mov
push
popa
sbbl
addr16
pop
aad
ljmp
and
jmp
dec
subb
and
push
xchg
add
sbb
out
add
adc
rcrl
lods
and
sbb
data16
loop
test
dec
xchg
popf
jo
jl
je
arpl
lods
push
xor
fs
das
loope
das
stos
mov
jle
fwait
test
call
nop
and
sahf
sbb
jno
push
rcll
jbe
mov
pushf
mov
cmp
inc
and
test
mov
mov
lret
out
jnp
mov
in
in
cli
iret
notb
push
mov
cmpsb
fcompl
imul
xor
xor
mov
push
sub
lcall
xor
fcompl
cs
push
xchg
inc
scas
ja
bound
mov
push
inc
inc
mov
int
and
sbb
cli
push
jmp
ror
mov
and
inc
xchg
push
dec
push
or
lods
mov
mov
jmp
lahf
loop
or
dec
cmp
imul
push
pop
test
orb
sub
xor
pop
and
cmp
aam
add
inc
pop
dec
jno
cmpsb
pop
jg
repz
fmulp
and
xor
aam
pop
aaa
mov
mov
jnp
mov
push
xor
sub
std
pop
enter
pop
push
jge
sbb
std
lods
mov
stc
pop
xchg
and
sbb
push
dec
rolb
in
pop
repnz
add
outsb
mov
jecxz
cmpsl
jl
int3
mov
adc
add
cli
mov
aaa
notl
xchg
mov
and
insl
and
mov
jp
or
xchg
sbb
ss
dec
mov
dec
jg
mulb
or
lea
sbb
hlt
jbe
add
lds
cmp
push
lcall
lret
mov
test
or
out
imul
inc
mul
divl
pop
mov
mov
loope
mov
adc
push
sti
mov
cmpsl
sub
fsubrs
ds
cltd
push
icebp
lret
sahf
and
pop
call
lods
jle
push
scas
in
fwait
and
lret
scas
mov
rcll
in
lea
and
shr
out
pop
xchg
sti
cmpsl
and
iret
dec
enter
arpl
int3
jbe
adc
in
mov
xor
fs
inc
and
mov
xlat
mov
xor
or
sub
xor
cmp
sbb
xchg
leave
xchg
test
js
mov
imul
cmp
int3
xchg
sub
test
clc
pop
mov
aam
pop
cmp
movsb
push
mov
in
icebp
sbb
adc
fnstsw
cmp
and
push
or
dec
jo
inc
cltd
and
cmc
adcb
dec
add
add
subl
xchg
jnp
loop
sarb
out
xchg
or
call
cmpsl
out
sbb
sub
or
push
xchg
rcl
and
test
jmp
jl
xchg
jae
test
and
sarb
cli
or
sbb
in
jecxz
push
test
mul
les
mov
ret
rorl
adc
mov
cmp
mov
dec
adc
cs
mov
xchg
lea
push
push
xor
movsl
mov
push
outsl
mov
mov
stos
insl
test
es
add
out
inc
sub
push
mov
outsb
cmpsb
bound
cmp
loop
fstps
dec
and
fbld
sahf
inc
push
stos
add
mov
sti
rolb
add
fs
in
inc
lock
in
cmp
inc
cmpl
lahf
daa
scas
test
jl
xor
sbb
cmp
popf
mov
ss
rorl
das
idiv
pop
insl
pop
daa
mov
negl
push
xlat
and
xchg
fldt
out
adc
mov
mov
lret
xchg
lea
pop
ljmp
stos
add
push
inc
out
jp
or
adc
scas
maskmovq
mull
data16
testl
pushf
sbb
sbb
repz
into
jns,pn
pop
std
imul
adcb
in
adc
jg
dec
out
das
pop
inc
insb
pop
xchg
imul
push
lods
xchg
dec
inc
pop
push
xor
add
scas
mov
xadd
aas
inc
in
mov
inc
cmp
jo
std
shl
or
sbbb
sub
sbb
adc
mov
push
dec
sbb
stc
leave
in
adc
sub
mov
push
mov
enter
les
ret
sub
push
pop
je
scas
out
sbb
out
and
gs
dec
dec
inc
pop
adc
mov
cwtl
xchg
xchg
add
push
cwtl
dec
lods
jmp
lods
jne
loop
ja
lahf
jnp,pt
ret
sub
add
xchg
sbb
insb
stos
div
and
pop
add
dec
shld
jg
pop
mov
sub
loop
loope
nop
imul
loop
mov
ja
mov
fdivrs
movsb
js
add
add
lret
mov
jg
push
mov
shll
cmc
fcoml
jp
xor
gs
in
stc
sbb
and
int3
pop
je
inc
push
out
js
push
push
icebp
inc
icebp
es
mov
sub
add
daa
push
ja
pop
std
daa
fidivrs
shl
jecxz
inc
fldl
xor
adc
mov
sub
cli
idivb
mov
leave
adc
icebp
leave
lock
sub
xchg
lods
cmpsl
inc
test
or
dec
enter
cmpsb
add
movsb
hlt
cs
ljmp
inc
out
jne
mov
and
mov
inc
pop
fcomp
pop
dec
pop
loopne
cmc
stos
sbb
sbb
pop
add
jb
inc
push
pop
mov
test
and
pushf
adc
jecxz
push
ljmp
jb
and
orb
cltd
aaa
add
js
jnp
jg
push
adc
aad
fwait
sub
cli
add
xchg
adc
aas
pushf
scas
or
sub
mov
enter
sahf
jo
fdivrs
xchg
add
cli
inc
cmp
push
add
call
rorb
lret
jmp
jmp
inc
hlt
inc
mov
pop
stos
add
jne
cmpsb
jnp
sub
sbb
arpl
repz
xor
adc
addl
xchg
push
jbe
movsb
push
pop
push
or
bnd
mov
int3
jecxz
lahf
loope
jl
mov
inc
xlat
adc
in
sbb
sub
mov
arpl
pusha
xchg
adc
push
cwtl
popl
int
mov
rcrl
inc
lahf
jno
xchg
mov
enter
lcall
adc
lcall
mov
outsl
scas
out
xchg
xchg
jecxz
and
sbb
jo
sub
fwait
shl
lods
mov
mov
inc
adc
mov
xor
sub
dec
jno
push
sbb
jge
mov
add
jmp
popa
push
int
fnsave
jle
mov
mov
mov
jle
pop
dec
iret
xor
les
andb
inc
inc
loop
cmp
adc
pop
jae
testl
les
mov
inc
pop
ret
lahf
cmp
lret
and
adc
and
leave
adc
scas
enter
or
repz
lds
xchg
add
or
lret
mov
mov
pop
sbb
cmp
xchg
jle
jp
adc
jecxz
push
lret
jns
int
divl
mov
add
lcall
lods
sub
loop
jnp
mov
in
rcl
sub
iret
fadd
das
adc
cmp
mov
cmp
pop
sbb
sbb
pop
inc
rcrl
or
jbe
sub
std
ds
lret
je
outsl
notl
add
and
push
mov
add
push
stos
rolb
push
xor
mov
or
in
pop
push
negb
ror
jmp
iret
lds
jb
sahf
mov
aam
out
mov
loop
add
xchg
mulb
fldcw
mov
xor
idivb
movsl
add
stos
xchg
xchg
push
mov
mov
lock
mov
fidivrl
leave
push
les
inc
lea
add
xchg
lds
xor
xor
xor
int
scas
ret
push
cmpsl
addb
sub
ret
and
adc
push
cmp
int
pop
addl
add
adc
jge
repz
movups
sub
pop
jbe
sti
push
dec
and
sarb
and
mov
bound
enter
lock
jge
cmp
jge
fwait
push
push
rcr
push
and
cmp
das
add
cwtl
adc
sub
cmp
ja
pop
cmc
mov
aam
mov
stc
arpl
inc
lret
insb
dec
adc
sub
pop
push
mov
mov
xor
mov
call
repnz
insl
xchg
out
lcall
je
pop
or
aas
mov
inc
js
ror
mov
xchg
leave
pushf
test
and
and
ret
mov
and
mov
mov
cltd
imul
mov
pop
ljmp
mov
dec
aas
cmpsb
xlat
fnstenv
fadd
adc
cmp
xor
xchg
add
loop
aad
test
jle
pusha
jbe
or
aas
cmp
scas
lea
mov
movups
mov
mov
sub
shrl
cmp
jle,pt
xchg
mov
mov
or
pop
mov
mov
lods
pop
add
xchg
loopne
pop
jo
dec
dec
sbb
fisubrl
inc
lock
ret
mov
loopne
or
xor
insb
jb
or
dec
icebp
mov
mov
pop
dec
js
mov
xchg
xchg
sbb
loop
jmp
imul
sbb
je
test
sub
jns
out
aaa
inc
push
mov
js
jbe
mov
shll
mov
jno
jno
call
test
pop
cwtl
xchg
out
push
pop
je
idivl
out
sub
jecxz
jmp
test
sbb
mov
mov
jne
test
jl
subl
enter
mov
fnstenv
sub
xchg
jmp
mov
dec
pop
mov
arpl
bound
dec
clc
xchg
daa
xchg
push
mov
push
push
inc
sub
mov
dec
incl
fnsave
cli
data16
add
jnp
pop
icebp
pop
and
cwtl
sub
into
add
lret
push
lds
or
iret
xchg
dec
sbb
fldl
xlat
mov
cli
clc
inc
and
mov
testb
or
outsl
pop
ss
or
mov
js
shrl
xor
xchg
mov
lret
cli
subl
es
xchg
mov
dec
and
pop
je
std
popa
es
push
fiadds
out
in
and
inc
test
fs
push
pop
push
pusha
sbb
imul
and
dec
or
cmpsb
dec
xchg
js
push
rorl
lret
cmp
inc
push
lret
sbb
jecxz
and
subl
pop
je
aaa
sbb
out
arpl
imul
inc
sbb
loopne
cmp
push
jae
xor
jbe
xchg
arpl
xor
cld
cwtl
cmpsl
loop
pop
xchg
cwtl
clc
je
dec
and
add
and
jl
in
stos
xchg
mov
pushf
push
mov
lret
mov
repz
push
or
mov
cli
xor
jns
add
mov
cmp
cli
mov
inc
push
test
push
int3
xchg
or
inc
sub
sbb
aam
xor
fistpl
add
ljmp
outsb
out
stos
sub
add
mov
leave
rcrb
sbbl
das
mov
sub
rolb
ret
mov
sbb
mov
inc
dec
mov
int
pusha
outsl
xchg
in
jmp
push
mov
into
xchg
cmc
insl
in
repz
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
push
loope
mov
xor
add
mov
inc
in
xor
and
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
enter
arpl
sahf
mov
mov
test
lret
adcb
or
fisubl
push
push
shlb
int
daa
add
mov
popf
lods
xchg
inc
in
xor
arpl
inc
loop
inc
ds
pop
adc
pushl
mov
pop
addr16
pop
mov
bnd
pop
mov
outsb
inc
xor
dec
cmpsl
mov
or
xchg
sub
xchg
lods
popf
sbb
mov
mov
xor
insl
cmp
fdivp
mov
outsl
out
sub
sub
loope
cwtl
dec
scas
enter
add
rorl
in
xor
fs
mov
fildl
xor
rorl
and
xchg
inc
in
rorb
gs
mov
mov
fs
mov
xchg
inc
std
xor
fs
lods
xchg
push
in
xor
fs
mov
xchg
inc
in
xor
mov
fwait
inc
in
xor
add
mov
pop
inc
in
and
je
mov
xchg
push
in
xor
fs
scas
mov
inc
in
xor
fs
xchg
inc
in
rolb
and
mov
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
out
xor
xor
test
mov
nop
jmp
insl
out
decb
in
xor
fs
mov
in
mov
dec
add
mov
inc
mov
dec
add
lods
xchg
inc
in
xor
fs
sahf
mov
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
fs
mov
xchg
inc
in
xor
int3
mov
mov
xchg
xchg
jb
xchg
xchg
and
lods
incb
test
push
mov
mov
push
sbb
out
mov
cmp
adc
test
cmc
lea
xchg
daa
fbld
insl
jle
inc
xor
or
xchg
mov
std
aam
pop
jbe
jle
in
in
lret
or
adc
scas
loopne
pop
mov
sbb
filds
push
add
shll
sbb
sub
lods
iret
dec
xchg
out
lret
ret
mov
or
push
out
pop
fs
sbb
push
add
xchg
pop
sub
aad
jl
ds
adc
push
andl
lds
fcomip
jp
xchg
mov
arpl
mov
mov
test
call
mov
xor
ss
pop
dec
movsl
int
xchg
sbb
hlt
push
lock
mov
leave
or
fisubrl
sbb
imul
dec
aas
std
adc
mov
js
sub
imul
jg
mov
subb
in
mov
dec
jge
or
mov
outsb
fwait
imul
les
push
xchg
imul
mov
sbb
test
les
sti
xor
js
jg
loopne
mov
repz
or
pop
push
dec
arpl
sbb
push
inc
dec
jmp
cmp
sub
ret
repz
cmp
and
ret
iret
mov
fildll
mov
adc
adc
jns
mov
int
add
int3
inc
stos
cli
out
pop
shrl
cli
mov
mov
adc
sahf
sahf
pusha
add
add
mov
mov
inc
jge
loopne
xchg
and
jp
mov
push
xor
mov
xchg
pop
scas
std
mov
std
push
xor
jp
pop
lret
push
cmp
ret
push
xchg
clc
dec
or
inc
push
loop
popa
in
rorb
mov
mov
clc
outsl
cmp
and
aad
mov
jmp
jecxz
inc
sbb
outsl
mov
cmp
xchg
push
dec
fldt
sub
xchg
sbb
imul
mov
xlat
mov
adc
aad
or
jo
lds
or
jnp
dec
sbb
cmp
shll
push
in
shlb
xor
rolb
sub
xchg
add
out
fdivrp
mov
jbe
pop
fcmovnb
leave
pop
leave
andb
int
xchg
fucomip
enter
dec
leave
mov
xchg
test
dec
rclb
sub
jg
or
dec
jge
or
adc
mov
push
rcl
sub
pop
lcall
gs
rclb
iret
sbb
xor
lods
mov
xchg
and
pop
call
fs
cmpsl
rclb
cwtl
stos
lods
iret
inc
mov
pop
cmp
test
lea
and
push
add
jecxz
jo
sub
adc
popl
rcrb
sbb
stc
add
dec
mov
daa
out
es
cmpsl
mov
enter
cmp
popw
fisubl
repz
dec
sbb
mov
sbb
mov
sbb
inc
ljmp
int
aad
scas
ja
test
inc
lods
inc
mov
ret
xlat
flds
inc
pop
sub
ja
pop
mov
sbbb
sbbl
cmp
xchg
mov
test
and
sub
cmp
or
mov
daa
push
and
mov
mov
mov
mov
mov
mov
ret
and
js
ret
adc
stos
push
sbb
mov
sub
mull
pushf
add
mov
aad
mov
cmpsb
mov
pop
imul
pusha
cmpsl
lret
xlat
out
sbb
inc
xchg
dec
dec
jg
ds
mov
imul
inc
mov
inc
push
jbe
ljmp
lods
mov
xchg
notl
dec
xor
repz
ret
sbb
test
dec
pusha
nop
in
out
jo
lret
insb
stc
push
fs
movsb
stc
sbb
sbb
fs
sub
andl
push
jbe
outsl
iret
mov
and
aaa
jmp
mov
cli
push
iret
xchg
in
jle
inc
sub
js
daa
pop
xor
mov
mov
xor
cmc
add
xchg
cs
aam
sub
cmpsb
test
sub
push
sbb
loope
outsl
add
scas
mov
pop
lret
test
pop
hlt
out
xchg
imul
mov
mov
lret
loope
dec
outsl
loope
aam
mov
and
mov
cmp
movsb
or
std
dec
adc
pushl
push
mov
inc
cmp
mov
jno
jbe
fmuls
das
test
cwtl
addr16
add
mov
jns
call
inc
lods
mov
je
inc
dec
fs
movq
sbb
mov
mov
fisubrl
test
in
hlt
insl
mov
popf
sbb
insb
mov
cmp
jo
inc
lods
sub
pop
push
aaa
adc
outsl
shll
mov
clc
adc
or
xchg
cmp
cmc
pop
jmp
push
or
ficoms
cwtl
pop
fiadds
mov
dec
pop
mov
pop
sub
cltd
jne
xchg
cld
mov
test
push
mov
test
scas
cmp
fcmovnb
and
cld
ljmp
mov
add
mov
test
mov
decb
or
mov
xchg
das
jmp
iret
cltd
lahf
mov
leave
mov
cmpsb
mov
cmpsl
push
cmc
hlt
mov
stc
mov
mov
xchg
jecxz
inc
and
cmp
movsl
xchg
pop
dec
fcoml
jne
mov
out
out
fs
inc
and
lods
pop
aas
fcmovu
cld
adc
cli
fistpll
orl
sbb
popa
je
idiv
inc
dec
filds
fisubrl
lea
testb
enter
add
int3
test
jno
mov
inc
loopne
out
xchg
imul
mov
insl
jge
mov
aaa
hlt
mov
mov
mov
xchg
ds
rcrl
stos
fsubs
xchg
ljmp
pushf
aad
ss
jnp
fdivl
mov
adc
xchg
jns
mov
enter
inc
leave
mov
push
imul
jbe
jmp
aam
mov
loopne
add
mov
pop
stos
int
xor
ja
cs
jmp
ficoms
mov
mov
cmpl
sub
arpl
fs
scas
popf
movsb
add
jo
xor
add
movsl
add
add
lahf
sub
ja
pop
mov
jno
enter
and
add
dec
mov
js,pn
scas
stc
negl
inc
dec
xchg
outsl
sub
inc
icebp
push
push
sub
stc
xchg
outsl
stos
ret
sub
xor
orb
mov
repz
sbb
push
js
cmp
jo
or
push
je
mov
jg
add
ret
cmp
push
push
push
xlat
ss
in
xchg
enter
fwait
sbb
push
mov
fs
sub
mov
loop
inc
sti
repnz
lock
mov
fmull
loope
xchg
push
rclb
push
push
js
into
test
outsb
mov
adc
jnp
dec
sub
xchg
in
pop
repnz
push
mov
adc
loop
scas
pop
mov
xchg
sub
add
pop
dec
aam
inc
xchg
dec
push
pop
sub
add
lsl
jns
jae
out
movsb
leave
cs
pop
jge
xchg
in
inc
xchg
inc
cwtl
repnz
loope
test
and
lods
rorb
movsl
into
inc
jmp
xor
or
dec
and
mov
or
mov
push
sbb
rorl
ss
xor
jne
jnp
add
popf
adc
cmp
or
loop
iret
xchg
aam
repnz
cmp
push
or
ljmp
lret
jl
xchg
xorb
shlb
ds
jmp
and
lds
popa
jp
stos
push
pop
and
mov
push
pushf
addr16
mov
cmpsb
sbb
xor
lahf
loope
xor
mov
jge
or
push
loopne
mov
and
mov
pop
into
loope
inc
inc
jp
push
adc
jo
or
popf
imul
sub
mov
sub
or
xchg
inc
out
sub
mov
mov
push
jno
sub
fimull
mov
neg
jbe
clc
push
ja
lret
or
or
or
jns
rclb
push
fists
jecxz
ja
popa
xchg
gs
adc
pop
cld
dec
cmp
cmp
out
lods
add
lock
mov
out
into
inc
in
clc
xor
and
clc
rol
and
adc
sbb
sbb
cli
adc
popa
xor
inc
xor
gs
icebp
stc
lcall
in
sbb
ret
lret
pushf
ljmp
ss
in
out
gs
fwait
gs
mov
jno
jno
fwait
xor
jb
inc
sahf
popa
mov
add
add
sbb
pop
push
les
cmc
mov
aaa
push
mov
in
subb
and
je
sbb
mov
jne
imul
sub
or
mov
movsl
fmul
mov
fcoml
pop
es
xor
or
xchg
dec
dec
pop
dec
xor
xor
shlb
pop
push
stos
mov
mov
daa
dec
fnstenv
bound
int3
mov
adc
adc
xchg
cltd
pop
xorl
add
adc
popa
sbb
cmp
or
or
movsl
cld
std
or
pop
mov
or
emms
out
fmuls
std
adc
fidivs
lcall
sub
aas
insl
sahf
inc
sbb
and
lods
fwait
sti
fiadds
xchg
push
mov
sbb
imul
xchg
gs
lds
xchg
dec
mov
and
lea
mov
cwtl
cli
adc
push
mov
sub
push
mov
nop
add
push
aad
shl
test
shlb
inc
sti
jecxz
pop
inc
adc
std
scas
out
mov
ret
shlb
stos
mov
push
inc
testl
jo
and
or
movsb
notl
inc
popl
rcl
aas
pusha
adc
xchg
jne
push
leave
pop
add
xchg
stos
iret
dec
add
sub
or
ljmp
jg
pop
inc
jns
push
insl
jg
rolb
in
sti
xchg
ljmp
cwtl
movb
mov
outsb
adc
pop
adc
loopne
xchg
jl
mov
sbb
or
inc
lret
jge
iret
adc
mov
in
test
push
cwtl
dec
sub
mov
dec
ljmp
jb
xor
fisttpll
cli
fwait
sbb
sbb
fcoml
out
inc
jecxz
hlt
dec
es
stc
lock
call
je
xor
mov
sarb
aaa
push
inc
mov
mov
scas
rorb
ja
jne
nop
cltd
stc
divb
inc
pop
or
jmp
mov
mov
or
nop
pushf
loope
push
inc
out
xlat
shlb
push
mov
movsb
push
shll
pusha
dec
ret
in
jae
iret
dec
mov
and
hlt
mov
mov
inc
fs
mov
dec
sbb
mov
dec
xor
fdivl
pop
or
fsubrl
scas
hlt
loopne
push
test
dec
pop
scas
adc
in
fidivrl
and
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
