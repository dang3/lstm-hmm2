and
inc
inc
test
inc
adc
inc
add
add
inc
add
addb
add
add
addb
and
loop
sub
or
test
lcall
inc
add
push
adc
sub
inc
add
adc
and
cwtl
adcb
add
and
mov
loopne
add
push
lds
or
and
adc
les
popa
xor
or
or
add
test
lcall
add
xchg
int
add
enter
add
and
addb
add
pusha
or
mov
mov
add
rclb
xchg
sbb
xchg
push
addb
inc
test
adc
adc
cwtl
add
and
mov
or
andb
dec
add
adc
adc
or
je
dec
add
dec
orb
adc
add
inc
add
push
sbb
add
add
add
out
and
adc
sbb
and
and
addb
rorb
adc
add
adcb
sub
and
add
subb
and
adc
jp
add
add
orl
dec
shrb
add
xor
xor
add
add
inc
cmp
mov
add
addb
inc
add
xor
inc
and
sbb
or
and
orb
inc
or
add
add
xchg
mov
xor
pop
push
jnp
nop
sbbb
cmp
and
add
mov
add
adc
addb
add
or
add
and
adc
adc
push
addb
push
sub
inc
add
test
pop
inc
xorb
dec
adc
or
fs
add
mov
rclb
jno
xor
add
and
add
add
loop
adc
and
and
les
add
xor
dec
and
push
mov
and
add
add
adc
dec
adc
or
push
add
or
loopne
and
add
dec
push
mov
add
dec
enter
or
add
add
add
add
push
add
adc
addb
inc
cmp
inc
adc
add
and
mov
adc
add
add
or
adc
xchg
lods
adc
adcb
adc
les
adcb
or
inc
or
mov
sub
bound
cmp
dec
or
or
and
mov
adc
adc
xorb
addb
add
inc
adc
adc
mov
in
xchg
inc
sub
push
xor
add
nop
sub
add
or
inc
xor
mov
mov
popa
add
adc
mov
add
addl
bound
mov
and
pusha
and
add
jno
orb
adc
sbb
loopne
or
and
add
or
add
and
and
add
sbb
add
add
push
and
les
and
adc
test
enter
mov
inc
add
or
add
push
mov
ret
add
roll
sub
and
addl
mov
nop
add
add
dec
and
or
add
adc
pop
mov
add
or
sub
add
test
adc
mov
test
add
nop
movl
addb
mov
dec
dec
sub
addb
xor
and
inc
and
inc
inc
cmp
push
add
test
add
inc
sub
push
inc
add
xor
nop
add
add
add
pop
adc
or
pop
xchg
inc
pop
xchg
inc
add
rolb
add
rcrb
and
or
or
push
mov
icebp
or
add
lock
adc
add
add
adc
add
addb
and
addb
cmp
add
inc
add
and
sbb
add
add
push
add
mov
movb
adc
addb
and
mov
popa
fsubs
les
and
nop
adc
test
or
shlb
es
push
addb
nop
or
and
or
xor
pop
adc
push
add
addb
mov
and
add
add
inc
add
movsb
add
add
pop
xchg
add
pop
and
leave
or
mov
or
adc
gs
add
add
add
inc
mov
or
or
nop
add
xchg
sub
xor
nop
dec
inc
xorl
dec
addl
push
or
bound
add
enter
or
add
test
jo
inc
inc
je
and
and
pusha
or
or
fwait
or
inc
and
or
push
inc
mov
push
add
les
or
adc
add
add
nop
pop
enter
rcll
add
inc
sub
push
inc
push
add
adc
mov
or
and
add
mov
and
add
adc
dec
inc
cmp
add
inc
fadds
or
add
pusha
inc
add
add
adc
dec
or
inc
add
and
adc
add
dec
scas
adc
and
push
or
orl
and
add
add
dec
rcrl
add
add
mov
add
adc
mov
or
add
mov
and
or
pusha
xor
push
xchg
push
add
inc
adc
add
inc
movsb
and
add
mov
cwtl
add
and
mov
sbb
inc
addb
test
or
add
xchg
mov
add
mov
push
add
mov
mov
sbb
pop
sbb
adc
add
adc
addb
inc
sub
inc
push
add
adc
and
add
add
or
andb
in
rolb
add
cmp
in
sbb
ret
sbb
les
add
push
xchg
add
or
xor
or
add
addb
nop
stos
roll
or
adc
popa
push
jo
xor
pusha
add
add
adcb
nop
in
push
rolb
add
add
mov
dec
ss
push
call
fs
mov
rolb
sub
add
add
push
adc
sub
cmp
mov
les
mov
add
add
adc
addl
pop
add
arpl
mov
addb
fists
lcall
mov
and
xor
add
mov
xor
pusha
add
xchg
add
test
loopne
add
add
add
and
add
adc
adc
mov
mov
adc
add
addb
sbb
or
adc
adc
or
addb
and
add
and
inc
loopne
orb
adc
add
addl
add
cwtl
sub
push
cmp
push
adc
mov
add
add
and
push
addl
sbb
xchg
adc
mov
push
js
push
add
lret
scas
imul
movsl
rcrb
and
add
orl
or
adc
xorl
mov
inc
pop
add
add
test
call
add
pusha
add
push
sbb
mov
or
adc
inc
adc
cmpsb
add
push
icebp
push
push
mov
adc
sub
add
and
push
push
and
add
test
sbb
mov
sbb
or
add
dec
or
addl
and
or
add
adc
pusha
rorb
xchg
addb
add
add
mov
and
add
and
add
xorb
bound
test
rolb
add
add
or
add
add
add
or
or
add
add
and
or
adc
lcall
insl
adc
and
or
or
es
inc
or
inc
addb
bound
add
test
push
js
shlb
adc
inc
sub
addb
add
or
inc
add
lret
mov
xor
xor
or
add
and
mov
mov
or
or
jo
push
adc
addb
inc
push
add
adc
aaa
inc
or
add
pop
pop
mov
push
sbb
fiaddl
add
add
push
add
inc
add
ss
es
xor
push
mov
inc
andb
test
push
inc
and
mov
add
xor
add
and
roll
add
add
adc
and
add
sbb
add
add
adc
add
inc
mov
inc
or
inc
sub
add
pusha
xor
add
add
xchg
test
dec
cmp
xchg
and
add
mov
add
imul
xchg
sub
sub
sbb
and
addb
and
mov
data16
nop
xor
add
and
or
add
and
inc
orb
sbb
mov
dec
inc
add
xchg
inc
add
xchg
insb
or
or
inc
dec
andb
sbb
add
repnz
inc
mov
adc
orb
add
xchg
adc
add
test
add
pusha
add
or
add
mov
adc
add
and
add
inc
mov
lret
add
push
and
add
add
loope
adc
adc
or
sub
add
mov
xor
sbb
or
inc
sarb
dec
or
and
inc
mov
add
addl
popa
rorb
or
add
add
and
and
mov
or
jle
and
enter
pusha
or
dec
mov
add
inc
xor
add
and
sbb
and
push
or
inc
pusha
add
cmp
add
add
insb
or
adc
add
add
popa
jo
and
mov
and
nop
add
adc
add
add
mov
add
dec
xor
and
or
test
add
adc
or
push
mov
addb
inc
adc
bound
add
add
adc
inc
add
add
add
xchg
inc
and
add
adcb
adc
add
or
xor
popa
addb
and
js
adc
stc
inc
loopne
add
or
mov
adc
and
or
adcb
mov
inc
pusha
adc
or
add
adc
adc
mov
adcb
add
adc
cmp
add
add
push
add
adc
or
mov
or
add
xor
adc
add
push
add
mov
add
push
sub
subb
loope
add
add
inc
adc
and
mov
push
and
add
push
add
inc
add
add
add
jo
inc
push
add
sub
add
dec
add
add
and
or
add
dec
add
and
leave
sbb
inc
push
add
jne
or
add
add
add
add
sub
mov
dec
and
and
xchg
add
add
xor
dec
add
or
adc
andb
xchg
and
lsl
add
and
rorb
add
addb
int3
inc
xchg
sub
sub
add
add
mov
movsb
insb
add
pop
flds
and
or
sbb
add
add
add
orl
movsb
xchg
add
adc
inc
or
inc
add
push
adc
add
add
add
add
dec
inc
or
dec
and
add
and
add
add
cmpb
or
jo
dec
mov
addl
inc
add
add
subl
or
adc
xor
adc
xchg
add
orb
adc
inc
rorl
add
add
lods
mov
dec
movsl
or
movsb
adc
test
rorb
add
sbb
inc
add
mov
nop
add
adc
enter
add
and
add
add
and
and
and
or
add
add
movsb
and
push
rolb
add
or
pushf
inc
and
push
add
mov
inc
or
add
adc
or
and
adc
xchg
add
push
add
inc
inc
sbb
xor
xorl
mov
cmp
adc
add
push
add
add
add
adc
or
add
and
imul
pop
or
add
add
nop
add
inc
xor
add
add
sub
add
push
add
pusha
or
adc
add
inc
or
inc
pop
add
adcb
push
xchg
sbb
cmp
add
rolb
or
add
inc
add
mov
addb
add
pusha
inc
or
ret
xchg
add
rorl
and
add
mov
and
adc
sub
add
mov
and
add
sub
xorb
add
or
add
mov
add
lods
push
subl
add
mov
rolb
inc
add
movb
loop
test
add
test
nop
dec
mov
inc
or
or
int3
adc
mov
or
add
xchg
sbb
inc
lcall
and
add
add
add
add
inc
and
sbb
xorb
push
and
add
adc
dec
inc
loopne
and
add
mov
add
adc
dec
adc
or
call
and
jo
or
adc
lods
add
cmp
add
or
add
adc
add
daa
adc
cmpsb
push
adc
bound
mov
adc
and
and
xchg
add
add
les
or
and
inc
andl
rolb
add
or
sbb
mov
sub
add
adcb
add
add
or
lods
adc
xor
jb
add
inc
push
add
sbbb
adc
xchg
and
or
add
xchg
adc
push
shlb
and
dec
and
push
repnz
inc
xchg
add
test
push
or
and
adc
or
and
push
and
daa
add
add
mov
pusha
dec
add
xchg
addl
add
add
sub
add
add
nop
inc
mov
and
add
test
dec
xor
test
inc
mov
addb
add
add
shll
push
mov
add
adcb
add
add
popa
pop
shrb
cmp
push
and
add
xorl
add
inc
adcb
add
adc
adc
sbb
adc
add
addb
cmp
mov
dec
rolb
dec
fldenvs
pop
add
or
fidivl
add
jle
sbb
inc
push
sub
into
adcb
and
addb
andl
inc
xchg
addl
add
add
loope
and
or
inc
add
add
push
movsb
adc
add
inc
inc
or
inc
or
push
test
sbb
pop
add
adc
xor
xchg
mov
and
add
pop
add
mov
add
or
daa
and
or
or
add
inc
xor
and
shlb
cmovo
mov
add
pusha
add
or
push
pusha
add
test
push
or
add
xorb
or
add
sub
add
test
push
add
add
or
and
add
cmp
inc
add
adc
or
or
sbb
andl
lock
xor
loopne
add
addl
orb
add
and
adc
add
inc
or
nop
and
inc
adc
or
add
mov
add
xor
push
and
adc
dec
addl
add
sub
popa
mov
sub
or
inc
add
add
push
or
xor
mov
inc
add
adc
or
test
push
add
test
mov
add
push
add
inc
add
xorb
dec
inc
xor
add
add
mov
pop
inc
add
mov
inc
add
push
add
les
add
add
add
sbb
test
dec
nop
add
or
or
mov
adc
or
cmp
and
ret
add
ret
add
addb
or
mov
add
add
add
inc
dec
insb
andb
add
call
sub
inc
add
push
or
adc
or
dec
add
and
nop
cmp
add
sbb
add
add
add
inc
inc
cmp
mov
and
mov
add
jno
dec
enter
or
add
leave
ret
xchg
xor
adc
xor
adc
or
adc
dec
fadds
add
add
loope
add
inc
mov
adcb
add
xor
sub
rorb
and
add
out
es
xchg
and
adc
or
and
push
add
add
add
sbb
add
or
add
or
and
add
mov
adc
sub
add
addl
scas
es
and
sbb
and
inc
or
push
nop
shlb
adc
pop
xchg
inc
adc
inc
adcb
add
adc
mov
adc
inc
adc
and
adc
and
and
or
bound
push
or
gs
sbb
adc
addl
pusha
adcl
fs
add
inc
add
inc
orb
fadds
add
cmc
xor
or
adc
cwtl
add
inc
and
or
add
push
fcoms
add
andb
and
call
adc
enter
stos
mov
push
inc
bound
add
bound
add
or
and
or
je
adc
mov
xor
and
add
adc
pusha
and
sbb
add
push
add
push
add
or
sbb
fs
orl
test
add
or
add
movsb
and
adc
add
add
mov
sbb
sub
xor
xorb
mov
movsb
lret
addl
and
add
push
inc
add
mov
addl
adc
bound
test
adc
jp
sbb
inc
adc
and
add
push
nop
add
or
ss
or
sub
mov
or
mov
addb
or
addb
add
mov
add
xchg
and
adc
mov
add
mov
add
and
adc
jo
xchg
add
icebp
add
dec
and
sbb
add
add
cwtl
rcl
add
imul
adc
or
loopne
andb
sbb
or
adc
dec
or
or
xor
add
enter
add
add
adc
inc
adc
add
add
adc
adc
xor
cs
stos
xor
and
add
orb
test
add
repnz
or
or
testb
add
fcoms
add
or
addb
lret
push
inc
cmp
inc
jne
add
add
push
mov
or
add
or
add
add
ret
addl
add
xor
mov
add
andb
add
cwtl
adc
in
mov
or
push
pop
adc
inc
xor
xchg
movsb
popa
add
adc
addb
ret
add
or
sub
int3
and
movsb
xor
add
add
mov
add
and
adc
push
int3
shrl
mov
ror
sub
add
lcall
push
push
or
or
dec
test
add
rorl
add
mov
shlb
nop
adc
dec
test
roll
shlb
orl
roll
push
adc
dec
and
adcb
popa
sbb
adc
and
xchg
or
xor
bound
add
mov
sub
lcall
dec
sub
add
add
addb
add
sbbb
and
add
push
or
cmp
add
inc
sbb
or
push
add
insb
mov
test
add
and
push
test
adc
adc
add
lods
add
gs
push
inc
add
adc
adcb
add
addb
inc
and
popa
xor
or
sbb
add
add
cmp
adc
dec
and
add
sbb
inc
mov
or
cmp
mov
adc
push
or
add
adc
add
add
add
stos
or
inc
rorb
and
add
test
and
adcb
adcb
and
inc
add
and
add
and
add
push
mov
xor
inc
and
add
add
and
inc
lea
rcll
and
test
inc
xor
orb
cmp
andb
add
adc
push
inc
rcrl
sbb
jo
test
inc
or
ds
add
sbb
addb
or
orb
push
bound
insb
adc
rorb
xchg
and
leave
add
xchg
mov
add
and
xchg
add
adc
sbb
movl
sbb
addl
add
loope
and
mov
adc
cmpsl
js
push
adc
and
add
add
and
add
and
sub
inc
add
and
cwtl
add
mov
sub
adc
and
inc
dec
add
and
add
and
xor
mov
mov
adc
dec
orb
and
aam
pushf
adc
add
test
ret
mov
add
mov
xor
push
rolb
add
addb
adc
nop
add
inc
dec
adc
add
sbb
xorb
es
adc
or
dec
add
andb
add
nop
mov
mov
jb
add
mov
xor
add
add
add
inc
bound
add
inc
or
loop
inc
add
and
mov
orb
inc
sbb
dec
mov
add
cltd
adc
and
adcb
sbb
adc
inc
inc
ret
mov
jo
adc
dec
or
sub
add
orb
add
adc
icebp
or
add
add
add
push
adc
pusha
sub
dec
mov
adc
push
add
mov
in
inc
cltd
add
add
or
and
mov
xor
xor
add
add
adc
vsqrtps
add
inc
test
add
add
add
inc
bound
ret
rcll
test
inc
ret
adc
inc
and
add
or
add
adc
sub
mov
adcl
and
dec
add
add
add
and
mov
and
add
mov
add
xchg
xor
test
mov
and
roll
and
add
add
adcb
fadds
inc
mov
add
add
adc
addl
push
inc
lods
add
ret
bound
adc
xor
add
sub
xorb
movsb
add
add
add
addb
dec
add
sbb
jb
or
andb
add
add
rolb
adcb
adc
enter
xchg
adc
pop
and
movsb
and
add
int3
add
es
xor
add
add
add
inc
mov
inc
sarb
add
shlb
adc
push
add
and
add
ret
inc
and
add
adc
inc
rorb
and
add
rcll
or
add
and
sub
xor
add
add
add
or
andb
add
enter
add
cmp
adc
sbbl
xorb
xor
add
inc
or
inc
and
add
add
inc
dec
inc
inc
add
add
add
and
and
js
nop
or
add
jo
add
les
and
loope
inc
inc
mov
addb
or
adcb
add
add
add
leave
sbb
inc
adc
add
add
add
add
push
test
orb
inc
inc
or
or
rorb
push
rcrb
push
add
test
cmp
add
add
adc
or
or
inc
adcb
cs
add
add
xor
push
loopne
add
add
inc
mov
outsb
adc
and
and
inc
inc
enter
add
add
add
xchg
add
inc
inc
adc
addb
leave
and
or
or
inc
or
enter
sbb
inc
and
push
nop
mov
mov
or
addb
sbb
or
inc
andb
and
jo
fs
dec
add
push
mov
nop
and
add
add
in
push
adc
pusha
add
add
and
add
add
inc
or
inc
add
adc
adc
add
xorb
push
inc
add
adc
inc
adc
or
adc
adc
movsb
mov
mov
and
or
push
xchg
or
ss
adc
add
adc
push
bound
add
inc
test
sbb
push
adc
or
sbb
and
addb
push
push
pop
adc
xor
cmp
inc
adcb
xchg
inc
add
addb
jl
and
add
add
add
sbb
shrb
shrb
inc
dec
mov
adc
add
cmpb
add
push
fldl
loopne
inc
add
add
adc
xor
mov
adc
push
addb
roll
adc
add
add
add
and
mov
add
mov
rclb
push
addb
or
sbb
inc
inc
add
movsb
addb
and
shlb
add
pop
add
in
adc
adc
add
inc
and
adc
add
add
inc
add
inc
inc
adc
add
stc
and
and
dec
sub
mov
inc
push
adc
adc
rclb
lock
roll
push
shlb
push
cwtl
push
mov
and
adc
shlb
addb
movsb
or
mov
xor
or
and
dec
sbbb
push
dec
add
add
or
add
adc
xor
push
add
sub
mov
outsb
add
mov
adc
sub
adc
orb
sub
or
test
or
cmp
adc
sbb
add
push
and
add
inc
dec
inc
orb
add
and
add
push
add
add
mov
and
hlt
and
add
cmp
inc
add
mov
add
add
call
add
adc
pusha
cmp
add
or
inc
add
xor
push
push
inc
add
add
inc
or
mov
test
add
add
inc
daa
and
add
mov
mov
add
inc
inc
xor
and
push
add
adc
inc
add
inc
add
adcl
push
adc
add
and
dec
dec
or
pushf
or
addb
add
addb
push
mov
or
dec
and
mov
adc
addb
and
add
and
cmp
push
xchg
adc
or
xchg
adc
adc
aad
add
lret
inc
add
inc
or
add
push
add
add
fwait
adc
push
add
test
or
or
xchg
push
add
pop
and
add
add
add
pusha
add
add
or
push
add
nop
mov
shll
add
or
andb
add
add
cmp
insb
inc
inc
and
dec
adc
mov
inc
add
roll
or
lar
push
push
adc
and
clc
push
test
add
xor
roll
push
add
and
add
mov
adc
add
sbb
and
or
nop
and
mov
add
add
imul
sbb
sub
dec
loop
add
nop
or
les
add
or
es
sbb
add
andb
add
popa
xor
nop
add
cmp
xchg
xor
mov
adc
add
mov
rcll
inc
add
inc
mov
add
add
add
rolb
and
sub
aam
adc
and
push
adc
sbb
add
add
or
lds
mov
mov
inc
add
aam
push
inc
adc
mov
add
xchg
jo
adc
add
inc
and
or
add
add
add
sub
or
inc
addb
add
inc
add
add
add
xchg
orb
andb
or
test
and
and
pop
or
push
or
inc
je
add
addb
pop
push
push
andb
addb
addb
add
addb
sbb
add
mov
adc
addl
xor
add
or
test
inc
jp
and
add
and
xor
addb
add
xor
pusha
jb
add
adcb
sub
xor
insb
push
addb
enter
and
and
rolb
test
dec
add
push
rolb
or
test
addb
sbbb
and
and
or
and
or
add
ret
sbb
push
nop
add
push
xchg
roll
ljmp
add
xchg
cltd
add
or
add
and
xor
add
add
add
or
mov
jl
mov
mov
orb
add
add
or
sub
or
add
addb
mov
add
add
add
adcb
or
add
add
adc
add
or
and
cwtl
adc
pop
insb
adc
add
or
add
dec
and
add
inc
add
cmpsb
inc
je
adc
add
sub
adc
and
inc
es
or
add
xor
addb
sub
or
push
andb
adc
or
dec
mov
add
or
add
push
and
dec
and
fsubl
test
add
mov
pusha
add
popa
add
add
and
push
add
xor
mov
push
add
add
orl
test
add
push
inc
add
inc
adc
add
stos
sbb
mov
or
andl
add
sbb
add
orb
add
addb
and
mov
add
adc
ret
and
inc
loope
or
or
push
add
mov
push
jp
push
imul
add
add
add
addb
addl
add
test
xor
push
mov
and
add
push
push
inc
add
add
add
dec
dec
and
and
or
inc
and
lcall
inc
xor
mov
inc
adc
nop
mov
push
or
adc
add
and
add
mov
and
pusha
inc
mov
add
add
inc
add
enter
add
add
adc
and
inc
and
mov
pop
and
adc
adcb
imul
adc
inc
and
pop
add
in
xorb
nop
mov
jo
or
add
and
add
mov
and
add
add
xchg
add
add
scas
orb
pop
addb
addb
sbb
bound
pop
addl
push
adc
push
and
inc
inc
lock
jno
and
add
push
cmp
orb
push
add
add
addb
andb
and
and
xor
addb
add
test
add
or
enter
test
mov
or
sbb
inc
leave
rolb
and
nop
loop
push
fwait
cmp
add
and
or
add
or
insb
add
add
and
cmp
cltd
or
inc
test
xor
mov
and
popa
cmpsb
add
sub
adc
push
add
movsl
adc
and
mov
les
add
dec
or
inc
inc
cwtl
and
lea
pusha
imul
add
inc
and
ret
add
dec
add
add
xor
les
shlb
addl
shrb
add
adcb
adc
subb
and
add
add
and
or
adc
or
sub
fs
add
add
and
xorb
addl
orb
data16
xor
adc
mov
add
cmpsb
push
inc
push
add
rclb
adcl
sub
or
and
inc
add
pusha
test
inc
and
adc
sbbb
nop
adc
add
inc
inc
add
pusha
orb
add
xor
add
add
lret
test
push
or
pusha
sbb
rolb
adc
adc
adc
rolb
xchg
add
and
in
add
inc
dec
adcb
sysret
sbbb
and
mov
and
and
add
add
push
push
and
cmp
addb
xor
and
add
jmp
push
call
mov
add
add
add
xor
add
xor
and
mov
sub
bound
adc
and
adc
adc
add
add
add
add
xor
mov
push
inc
jl
rclb
dec
add
les
and
inc
cmpsl
xchg
push
pop
popa
adc
add
dec
add
scas
andb
add
adc
mov
add
rorb
add
adcb
push
and
or
add
and
mov
inc
add
xchg
add
push
add
add
adc
add
stc
add
mov
clc
mov
les
push
addb
inc
add
or
loop
add
sbb
add
push
push
movsb
inc
loopne
adc
lcall
or
dec
push
add
inc
push
xchg
pusha
mov
mov
add
adc
sbb
pusha
xor
dec
adc
sbb
inc
and
pop
rcr
sub
add
add
sbb
add
inc
add
cmp
dec
add
add
adc
roll
adc
mov
mov
inc
addb
inc
add
add
add
shrb
adc
add
inc
and
or
adc
add
test
or
sub
sbb
and
push
daa
or
add
inc
add
add
rolb
adc
add
fs
push
inc
imul
adc
addb
add
orb
add
push
ret
nop
add
xchg
sub
loopne
fadds
xor
pop
and
add
and
and
push
and
loope
inc
cmp
cmpsb
pop
and
add
inc
xor
inc
nop
pop
nop
add
add
and
and
rolb
rorb
and
and
inc
add
adc
adc
or
xchg
push
and
shlb
mov
les
add
push
and
add
adc
and
or
adc
xor
mov
and
and
add
sub
cmp
movb
and
and
sbb
pop
dec
push
and
or
addb
dec
and
push
add
lea
shll
and
adc
add
nop
inc
inc
add
add
sbb
add
mov
bound
sbb
or
data16
pusha
adc
sub
adc
rcll
add
sub
dec
popa
enter
or
add
xor
adc
addb
and
sbb
call
add
push
jb
jbe
mov
pop
mov
or
and
mov
adc
or
add
and
add
inc
push
and
add
lcall
xor
and
es
orb
aam
mov
add
adc
inc
adc
jl
add
add
sub
push
inc
mov
mov
sub
push
inc
or
add
add
and
add
inc
jo
add
add
mov
inc
sbb
add
adc
add
sub
add
sbb
or
sub
aam
inc
addb
adc
sub
nop
adc
push
addb
andb
adcl
lahf
xchg
adcb
bound
adc
or
cmp
xor
push
inc
add
nop
inc
andb
and
adc
xor
add
movb
movsb
add
rolb
push
dec
or
push
push
adcb
rclb
mov
stos
or
nop
dec
andl
or
xor
adc
push
hlt
mov
add
sbb
orb
adc
add
add
or
mov
add
shlb
addl
rolb
xor
pusha
inc
and
nop
or
push
add
inc
adc
push
inc
push
add
sub
add
xor
or
add
dec
adc
and
and
add
ret
add
add
adcb
add
or
fadd
add
add
add
nop
lods
add
inc
or
adc
adc
inc
add
or
add
push
add
sbbb
add
add
stos
cwtl
loope
mov
add
rcll
adc
add
inc
xchg
adc
mov
push
mov
add
add
mov
xchg
pusha
push
movsb
or
andl
adc
xor
add
pop
addb
add
adc
and
xor
andb
subb
addl
and
mov
adc
and
xorb
add
add
add
inc
or
add
add
adc
add
add
add
movsl
test
push
push
xchg
add
add
push
mov
add
add
add
and
inc
add
adc
sub
and
adc
addl
adc
dec
add
or
popa
and
add
cwtl
stos
sbb
add
mov
add
inc
adc
and
addb
addb
pusha
add
add
push
add
adc
add
add
andb
or
inc
push
push
inc
sbb
pop
push
adc
inc
xor
adc
jb
add
adc
mov
add
adc
adc
xor
and
add
add
inc
aam
add
adc
add
sub
add
sbb
add
and
or
add
add
inc
add
add
or
sbb
rclb
add
adc
test
add
sahf
and
mov
ret
or
adc
inc
adc
add
or
add
andl
add
add
add
nop
add
and
add
dec
orb
orb
adc
nop
and
shll
inc
and
adcb
addb
add
and
or
push
dec
or
add
pusha
or
sbb
rcrl
orb
add
add
inc
add
test
sbb
and
adc
and
or
adc
sbb
adc
xor
or
fsubl
add
mov
adc
adc
leave
adc
and
add
or
and
push
dec
inc
sbb
add
push
adc
and
push
add
adc
inc
add
mov
adc
push
add
or
add
addb
dec
add
data16
mov
add
inc
adc
addb
push
add
and
or
sub
dec
addl
add
or
add
cltd
adc
pop
add
addb
inc
add
inc
push
rolb
sub
and
bound
or
inc
add
xorb
xor
inc
and
inc
add
and
cwtl
inc
add
or
es
call
add
rolb
dec
add
bound
jo
add
push
add
or
int3
mov
and
push
or
mov
add
add
addb
loopne
add
add
push
add
inc
or
je
add
and
mov
adc
add
xchg
repnz
sub
fs
and
dec
popa
addb
test
or
add
adc
adc
add
add
pop
and
xor
orb
and
arpl
inc
add
lea
and
add
add
add
add
sbb
mov
push
mov
add
adc
xorb
add
or
add
or
add
roll
adc
add
addb
cmp
add
push
add
sub
inc
icebp
or
inc
or
and
or
add
add
andb
sbb
add
or
xchg
lcall
dec
rclb
sbb
and
adc
mov
sbb
adcb
inc
add
push
add
push
ret
and
inc
and
add
mov
add
addb
addb
add
mov
nop
rclb
rorb
mov
mov
add
and
push
orb
inc
roll
xor
movsb
mov
add
inc
add
add
and
add
push
sub
jp
add
dec
adc
adc
adc
mov
add
xor
and
and
pusha
add
or
or
lret
or
sbb
or
pusha
cwtl
or
add
mov
and
adc
xlat
add
inc
or
jbe
adc
inc
add
add
add
add
inc
adc
xchg
inc
data16
and
pop
add
add
adc
add
sbb
mov
sbb
add
ret
and
mov
cwtl
add
and
inc
or
inc
data16
rolb
movsl
movsb
lods
add
and
add
adc
and
add
add
adc
mov
add
adc
leave
inc
enter
push
mov
add
add
add
movsb
sbb
add
push
add
popa
and
xor
sbb
addb
add
or
add
nop
addb
shlb
add
jmp
push
pusha
or
xor
andl
andl
add
adc
inc
add
add
sub
add
xchg
dec
pop
mov
leave
and
add
or
add
inc
sbb
inc
add
or
loopne
mov
sub
add
js
nop
mov
sbb
addl
inc
push
or
add
bound
orl
add
pop
or
dec
and
inc
nop
movsb
adc
loopne
addl
adc
inc
xor
and
dec
pusha
mov
and
andl
cmp
and
add
mov
pop
inc
bound
sbb
dec
and
inc
imul
adc
xor
pusha
andl
addl
sbb
andb
arpl
jo
sbb
sub
les
rolb
add
push
pusha
add
pusha
add
and
add
or
add
add
add
dec
and
add
add
adc
sbb
xchg
mov
lods
add
add
add
inc
add
inc
add
and
rolb
add
add
xor
add
adc
enter
call
movsb
add
push
adc
addb
les
adc
pusha
and
mov
sub
fwait
sbb
add
sub
dec
mov
push
or
xchg
xor
and
or
test
and
xchg
adc
popa
add
add
dec
cmp
sbb
xor
add
add
add
adc
or
adc
add
or
add
test
sbb
push
pop
add
dec
or
add
adc
add
andb
add
and
addb
add
popa
pusha
les
mov
lcall
bound
inc
add
cltd
or
lds
add
add
adc
mov
and
add
fs
add
sub
rcrb
test
sub
rorb
xchg
loop
sub
addb
sbb
adc
add
in
lea
dec
add
adc
add
test
or
and
xor
adc
push
add
sub
lea
add
pop
add
and
adc
xchg
push
add
dec
add
inc
data16
xor
add
add
enter
je
sbb
addb
inc
add
add
addl
dec
add
dec
lea
cwtl
and
inc
inc
adc
loopne
push
push
add
or
addl
add
add
bound
mov
add
or
sbb
inc
cmp
add
add
or
add
sub
addb
add
add
inc
xor
add
adc
or
or
add
or
and
xor
scas
and
and
and
mov
mov
and
movsb
and
pop
add
push
add
or
xchg
inc
add
dec
nop
adcb
or
and
loopne
andb
and
mov
test
or
test
inc
push
movsb
add
inc
lock
add
andl
xchg
and
add
test
add
inc
add
adc
mov
inc
adc
xchg
add
add
or
add
add
inc
push
add
sbb
push
ret
adc
inc
sbb
adc
ret
inc
push
test
adc
add
addl
mov
and
inc
cmpsl
rorb
add
add
or
adc
addb
mov
dec
rcrb
or
xor
add
sub
push
push
and
dec
and
add
add
push
inc
or
adc
inc
add
adc
inc
or
or
add
add
add
or
add
xchg
add
dec
add
dec
add
xchg
add
or
inc
xchg
inc
sbb
xchg
add
mov
inc
xchg
xchg
xchg
inc
lock
add
ret
jo
push
adc
xchg
cmpsl
inc
dec
add
inc
add
rorb
and
adc
add
add
add
and
inc
add
dec
add
add
add
add
add
add
and
daa
push
xchg
addw
or
pop
add
mov
inc
pushf
inc
push
adc
rclb
or
pusha
adc
adc
inc
or
add
adc
movsb
rclb
dec
add
add
adc
add
rcll
push
cmp
add
cltd
je
ret
mov
add
xor
int3
add
xor
or
sub
adc
add
push
mov
sub
mov
out
add
insb
or
add
inc
or
mov
sbb
add
test
add
adc
mov
adc
push
add
inc
rclb
adc
add
or
xor
and
gs
rolb
add
add
add
adc
inc
mov
jmp
mov
adc
and
and
or
andb
adc
and
andb
pusha
rolb
add
push
inc
loopne
jo
rolb
add
and
add
mov
xor
adc
inc
pushf
and
or
popa
xchg
add
cmp
rorb
push
adc
adc
add
add
adc
and
pusha
add
add
sbb
pop
adc
fwait
dec
sbbb
push
push
add
xorb
add
add
sbb
mov
andb
adc
xor
add
and
or
xor
mov
mov
add
test
add
mov
notb
and
test
cmp
mov
add
or
inc
rorl
orl
test
adc
add
dec
add
inc
addl
or
add
and
inc
adc
sbb
sbb
and
subb
inc
add
add
sbb
mov
addb
inc
les
add
push
pop
adc
inc
add
adc
mov
inc
inc
adc
mov
sbb
or
or
mov
push
and
inc
push
and
inc
adc
addb
dec
mov
add
rcrl
add
mov
adc
pusha
adc
add
and
and
and
adc
add
push
cwtl
adc
add
and
add
sbb
and
adc
and
orl
add
or
sub
add
mov
add
add
data16
dec
inc
dec
bound
push
addl
dec
cwtl
test
bound
push
inc
push
or
add
add
or
cmp
addb
sbb
and
and
and
inc
pusha
add
enter
jb
add
add
adc
or
push
xor
add
add
dec
sbb
adc
push
sbb
add
bound
inc
add
add
add
test
and
movsb
inc
and
sub
xchg
pusha
add
or
inc
add
data16
nop
rorl
add
loopne
mov
add
adc
add
xor
addb
xorl
or
push
add
outsb
or
inc
and
sbb
or
add
sbb
adc
add
pop
mov
and
jo
xor
add
push
scas
loop
insb
or
add
orb
orb
inc
xor
or
adc
xor
add
sbb
adc
addb
add
adc
or
add
and
or
add
add
xorb
and
mov
push
and
rol
add
cmp
and
and
xorl
add
shrb
push
mov
lods
adc
pop
addb
or
mov
xor
mov
inc
add
aam
inc
loopne
add
lret
or
mov
lds
lock
or
and
nop
or
inc
add
add
add
dec
push
and
push
or
ret
add
insb
mov
movsb
lcall
add
add
popf
add
inc
xor
sub
add
pusha
or
push
xor
or
add
addb
mov
sub
shlb
adc
test
addb
sub
and
add
rorb
add
lcall
or
adc
add
and
and
or
push
and
andb
add
adc
adc
enter
add
add
lret
test
sbb
add
push
xor
adc
or
and
inc
or
outsl
sub
loop
sub
xor
ss
sub
addb
rolb
test
addl
cwtl
add
push
and
sbb
and
addb
inc
stos
or
add
xchg
adc
add
add
xorb
mov
add
orb
mov
or
or
je
test
adc
or
sbb
adc
sbbb
add
or
and
enter
inc
and
inc
add
xor
addb
add
add
add
adc
cmpb
mov
push
sub
push
inc
add
adc
adc
add
inc
add
cmp
push
add
add
adc
inc
rolb
add
adc
and
xchg
sbb
test
add
adc
addb
inc
adc
mov
mov
add
sbb
mov
add
imul
jo
stos
add
nop
sub
mov
add
add
or
and
mov
or
sbb
or
test
shlb
add
add
adc
pusha
add
add
nop
or
adc
rcl
add
adc
xor
xor
mov
and
add
rorb
pop
inc
add
sbb
push
addb
add
mov
sub
add
push
push
or
add
add
add
adc
test
add
adc
es
add
add
xorl
popa
add
les
push
or
sub
add
and
addb
and
add
push
add
inc
movsb
inc
sbb
inc
inc
add
add
mov
add
addb
push
push
add
or
test
add
add
push
test
ret
or
nop
adc
or
andl
lods
add
lcall
mov
add
and
add
and
ds
mov
adc
lds
enter
arpl
xor
mov
mov
push
add
add
push
push
push
sub
add
nop
add
add
or
inc
add
inc
inc
pop
or
add
nop
or
inc
inc
add
dec
adc
push
dec
sbb
adc
adc
sub
pusha
and
sub
dec
add
rolb
adc
or
inc
pusha
add
add
addb
push
andb
or
sub
mov
xor
adc
mov
or
pusha
les
sbb
add
or
mov
movsb
add
sub
add
andb
inc
dec
add
and
sbb
mov
inc
or
add
and
add
add
and
shlb
add
add
or
aam
cwtl
add
adc
xor
add
scas
add
cmp
inc
add
add
or
add
mov
dec
mov
add
add
add
add
sbb
and
jnp
add
inc
add
adc
add
addb
add
add
xchg
add
or
test
add
adc
add
push
sub
add
and
or
addb
inc
add
add
sbb
rolb
or
out
addl
pop
and
add
addb
nop
addl
add
add
pusha
xor
adc
add
adcb
addb
add
add
mov
add
adc
pop
and
addb
adc
sbb
add
add
andb
add
add
xor
add
hlt
sbb
shlb
xor
dec
xor
add
add
add
inc
sub
xchg
add
and
and
and
mov
add
addl
and
add
rolb
or
add
pop
loope
add
inc
add
add
and
add
and
push
add
xchg
add
add
mov
add
movsb
add
mov
or
add
add
inc
inc
adc
and
sub
and
addb
or
dec
add
xchg
or
add
and
and
add
nop
adc
adc
add
and
add
and
or
and
adc
and
inc
add
dec
lock
add
add
enter
or
andb
andb
and
add
push
add
xor
add
add
inc
xchg
popl
add
xor
sub
add
sbb
andb
pop
sub
add
rolb
add
inc
pusha
add
add
add
cwtl
add
adc
ret
adc
adcb
add
and
or
add
add
or
add
and
addb
add
add
sub
or
and
xlat
dec
xor
inc
add
addl
dec
and
add
add
add
inc
add
add
add
push
or
push
sbb
loope
add
push
add
and
add
mov
inc
rcr
add
add
add
or
adc
int3
addb
add
test
add
and
adc
addb
add
inc
call
add
add
add
andb
sbb
add
xor
push
add
add
imul
and
add
sub
pusha
and
test
add
shrb
mov
add
and
add
add
add
add
cmpb
sahf
dec
adc
adc
mov
mov
add
and
add
pop
add
lcall
or
xchg
xchg
inc
inc
movsb
or
add
add
addb
add
test
add
add
adc
add
andl
inc
add
andb
add
add
dec
add
addb
add
popa
add
add
or
inc
add
adc
mov
adc
add
inc
andb
or
add
add
cwtl
sbb
add
addb
add
and
add
fsts
or
push
andl
add
add
inc
inc
add
and
sub
and
add
add
dec
inc
or
adc
push
inc
add
and
add
or
push
inc
add
adc
inc
add
and
add
inc
or
add
add
or
or
nop
push
pushf
adc
add
xor
dec
add
sub
mov
add
add
add
add
andl
and
roll
inc
sub
or
add
add
sub
inc
adc
add
mov
add
add
or
add
or
bound
add
add
or
adc
xor
add
test
and
add
orb
add
add
add
add
xor
dec
inc
add
and
add
or
add
and
nop
add
add
add
ret
nop
add
add
testb
mov
xchg
inc
sbb
add
push
and
mov
add
add
inc
adc
adc
inc
inc
mov
addb
lods
or
add
xor
inc
add
add
add
xchg
mov
add
sbb
add
and
add
and
add
add
test
addb
add
inc
and
add
adc
add
xchg
add
sbb
sbb
push
add
add
rolb
and
add
and
inc
add
adc
dec
add
adc
push
inc
inc
addb
dec
add
adc
push
add
lcall
push
and
js
adc
and
add
test
addb
mov
sbb
add
add
add
add
andb
push
xorb
push
add
and
adc
add
inc
and
add
add
inc
js
adcb
adc
inc
adc
add
push
adc
add
push
adc
add
add
add
add
mov
add
or
or
xchg
js
sub
add
add
inc
or
add
rolb
mov
mov
add
add
adcb
add
orl
and
addb
add
rcrb
add
add
or
addb
addb
and
add
dec
add
xor
add
mov
and
adc
add
jo
add
dec
inc
addb
add
addb
rcll
add
add
and
es
xchg
add
add
addb
addl
push
add
rolb
add
add
addr16
mov
push
mov
add
add
push
add
and
add
rolb
add
and
adc
adc
dec
ret
adc
add
add
addb
and
andb
sbb
or
inc
mov
popa
mov
add
inc
xchg
inc
addb
mov
add
adc
orb
adc
cwtl
or
adc
popa
nop
add
dec
adc
sbb
and
addl
addb
add
pusha
add
add
mov
add
inc
andb
les
adc
add
sbb
inc
addb
add
and
inc
add
sub
add
adc
inc
add
dec
mov
addb
orb
leave
add
adc
add
add
inc
and
adc
add
inc
or
roll
inc
add
and
add
add
add
adcb
addb
or
add
add
add
mov
and
inc
addb
add
add
nop
and
add
sub
add
inc
test
add
add
inc
inc
add
mov
inc
add
add
and
adc
and
add
pop
add
addb
adc
add
adc
inc
add
push
add
add
and
inc
bound
add
add
add
add
adc
sbb
rorb
add
addb
xchg
add
inc
and
and
adcb
add
add
adc
adc
add
and
add
add
loopne
xchg
add
dec
add
add
test
add
adc
addb
and
mov
add
or
add
add
adc
add
adc
add
add
sub
and
xchg
inc
push
inc
inc
or
rolb
push
add
add
or
add
add
add
add
cltd
lret
fs
and
test
addb
push
sbb
add
mov
inc
adcb
rorl
xor
sbb
add
dec
add
adc
mov
loop
lods
xchg
adc
mov
add
add
adc
add
xor
add
adc
add
add
add
add
inc
add
rolb
addb
add
and
pop
add
and
add
ret
and
inc
add
pushf
add
and
and
pop
and
nop
and
add
add
mov
add
add
or
add
push
add
and
add
mov
inc
inc
adc
inc
xchg
add
inc
adc
add
ret
adc
add
push
add
cmp
dec
inc
add
or
and
dec
xor
or
lret
enter
sbb
add
or
addb
add
add
pushf
inc
adc
push
add
add
add
add
add
add
inc
orb
inc
add
or
cmp
xchg
adc
mov
add
adc
es
or
add
mov
mov
sbb
add
xor
adc
mov
adc
adcb
add
ret
add
add
push
rolb
popa
mov
add
rol
or
addb
add
add
and
add
or
or
inc
and
xchg
and
xor
pop
mov
add
add
add
subb
push
push
mov
xchg
xchg
add
inc
adc
nop
inc
add
and
or
test
adc
addb
dec
xchg
add
add
add
add
add
rolb
dec
adc
lcall
add
add
add
andb
adc
or
add
ret
xor
add
add
and
pop
mov
add
mov
xchg
cwtl
test
mov
or
sbb
and
or
inc
add
lret
xor
daa
adcb
mov
push
push
adc
add
enter
add
push
add
adc
add
js
bound
push
mov
add
add
add
inc
add
addl
inc
add
add
xchg
add
add
xchg
pusha
sub
push
mov
add
or
add
add
inc
xor
push
inc
add
xchg
mov
add
inc
movsl
adc
or
inc
or
add
add
addb
adc
and
add
andb
add
add
or
add
or
add
or
pusha
dec
add
and
add
add
add
add
rolb
add
inc
add
add
add
adc
add
add
and
add
inc
adc
mov
add
add
addb
or
adc
add
push
nop
add
mov
addb
inc
dec
or
add
add
add
adcb
add
add
or
add
add
add
add
add
add
inc
add
add
push
inc
adcb
add
adc
in
cmp
push
adc
xchg
and
add
inc
or
inc
add
and
add
inc
or
add
addb
inc
adc
add
add
add
add
adc
andb
and
inc
add
add
fwait
mov
lret
add
add
add
xor
add
push
add
add
inc
add
inc
fsubs
xchg
or
add
ret
or
nop
and
push
inc
and
push
addb
movb
sub
inc
add
addb
add
mov
roll
adc
add
add
inc
pop
or
orb
or
inc
sub
add
adc
add
adc
dec
cmpsb
push
test
addb
add
or
inc
or
fs
nop
ret
sub
add
test
and
addl
adc
icebp
xor
add
dec
arpl
push
xor
sbb
add
or
inc
roll
adc
add
test
add
adc
inc
mov
add
add
addb
xor
and
add
adc
add
add
and
or
add
add
add
sub
or
xor
lock
inc
add
or
and
sahf
add
inc
add
jl
sub
dec
add
or
add
inc
add
push
inc
or
add
bound
add
inc
adc
addb
xchg
pop
dec
adc
xchg
add
add
add
and
popa
and
adc
add
dec
adcb
and
dec
or
inc
inc
add
add
adcb
xorb
add
addb
lcall
adc
add
jae
add
add
mov
add
and
jno
xchg
add
cmpl
and
add
push
add
or
xchg
dec
add
pop
add
orb
inc
and
and
adc
add
add
sub
push
add
and
add
add
inc
add
dec
add
orb
inc
add
add
lds
and
or
add
or
add
sub
add
add
inc
sub
adc
add
sub
adc
add
aam
adc
adc
adc
or
or
dec
or
add
pop
pop
adc
and
sbb
inc
inc
and
inc
sub
and
add
add
add
sub
add
inc
movsl
andb
inc
add
inc
xor
testb
addb
mov
adc
and
add
mov
imul
inc
add
add
jno
orb
mov
sbbb
add
or
add
mov
or
sbb
xorb
xchg
add
add
aaa
loopne
js
in
lods
dec
and
add
xor
add
inc
mov
es
mov
dec
dec
push
add
dec
icebp
lret
shr
pop
dec
setbe
rcrb
dec
sub
mov
ror
dec
out
cs
addr16
cs
pop
clc
dec
dec
es
ljmp
mov
dec
pusha
add
xchg
rclb
dec
dec
pop
jge
mov
shll
pop
mov
mov
sub
scas
fcompl
ljmp
inc
dec
rcrb
out
pop
inc
iret
jne
pop
dec
dec
mov
mov
mov
pop
push
rcrb
adc
pop
aaa
mov
inc
mov
add
rcrl
rorb
xlat
xchg
popa
mov
mov
mov
pop
das
jae
ds
dec
shlb
fsubp
insl
pop
dec
shr
sub
addl
dec
pop
fsubp
jp
fimuls
dec
sbb
pop
bound
pop
pop
pop
les
sbb
aam
adc
rorb
dec
dec
or
or
mov
shlb
dec
and
imul
aas
mov
inc
loopne
adc
aam
bound
shlb
xchg
pop
sub
scas
bound
fisttps
ljmp
sbb
dec
sub
mov
sub
insb
in
pop
push
and
xor
jno
into
mov
test
push
daa
push
inc
lcall
push
push
pop
push
ret
nop
inc
fcoml
jno
hlt
mov
dec
dec
daa
ljmp
lret
popa
mov
or
notb
dec
rolb
mov
dec
rcr
gs
pusha
inc
sbb
call
pop
sti
stos
fdivs
sub
add
cwtl
mov
mov
sbb
sub
dec
stos
test
popa
mov
sbb
dec
nop
mov
adc
lcall
ret
push
sub
dec
or
and
ljmp
mov
cmp
xor
les
add
or
pop
pop
dec
dec
xchg
lret
mov
sahf
sbb
jnp
ljmp
stc
test
in
jp
ja
push
jb
mov
jae
int
fsubp
ljmp
cld
lea
sti
and
mov
aad
push
mov
xor
dec
rolb
dec
push
dec
mov
mov
sub
pop
dec
inc
daa
mov
mov
adc
pop
dec
adcl
dec
rcrb
mov
dec
and
stos
jb
pop
pop
dec
jmp
xchg
pop
dec
rorb
mov
xor
mov
push
or
and
mov
fldenv
mov
dec
push
adc
stc
dec
arpl
icebp
pop
jle
push
stos
jmp
or
add
jo
ds
mov
dec
gs
mov
das
fidivrs
fisubrs
ljmp
mov
fsubs
setnp
lea
mov
mov
pop
sti
pop
mov
pop
dec
test
xor
fdivs
idivb
or
lcall
and
rorl
in
dec
rcrb
ficomps
test
cld
adc
sub
shlb
mov
ret
addr16
rorl
call
pop
fidivrs
cmp
pop
mov
and
xlat
push
lds
cmpsb
xlat
xorl
pop
stc
stos
lahf
mov
mov
fisubrl
popf
pop
push
push
jb
dec
sarb
or
popf
pop
std
adc
mov
ret
addr16
rorl
push
push
push
push
pop
dec
shr
mov
and
jae,pt
mov
sbb
shlb
cli
stos
inc
mov
mov
fidivl
popf
pop
push
push
sbb
shr
dec
push
dec
mov
pop
dec
sti
imul
inc
push
ret
push
ss
shll
outsl
jmp
mov
sbb
lret
pop
ljmp
popf
mov
and
dec
push
sub
dec
pop
stos
mov
lret
pop
dec
das
pop
adc
ljmp
lret
daa
int
add
out
aas
dec
mov
ret
push
aaa
push
dec
scas
inc
ficoms
add
es
xor
add
imul
out
dec
pop
mov
pop
xchg
jne
xchg
mov
pop
and
mov
cmp
dec
rcrb
std
dec
fcmovu
dec
rcrb
add
ljmp
shll
mov
mov
cltd
fnstsw
xchg
sarb
ja
inc
sub
mov
xchg
mov
xor
dec
bound
inc
push
ret
mov
in
xchg
mov
push
in
push
sbb
adc
mov
ds
ffreep
xor
adc
out
aam
daa
push
ret
push
adc
jmp
mov
lods
xor
in
shl
scas
rcrb
dec
inc
jle
push
or
cld
push
xor
dec
scas
pop
stos
push
test
mov
in
xor
cmp
shrb
push
idivl
inc
dec
rcrb
mov
ret
bswap
push
fisubrl
push
icebp
pop
dec
sarb
in
ljmp
lret
ds
push
stos
cmp
sbb
pop
pop
ficoms
imul
inc
dec
addb
inc
dec
pop
dec
pop
jo
fisubl
add
shrl
rclb
push
push
sub
pop
pop
dec
xor
sbb
sarb
dec
xchg
nop
imul
jno
dec
rcrb
hlt
mov
pop
dec
sub
xchg
gs
jl
inc
sub
mov
cli
fwait
jmp
dec
lret
lods
mov
jp
jmp
mov
sti
mov
xchg
jp
add
cld
inc
jge
fildl
ds
push
adc
cmp
insl
cs
add
pop
prefetch
cmp
pop
imulb
mov
adc
adc
aaa
imul
nop
jg
xor
push
xchg
add
push
dec
inc
adc
pop
jno
push
ret
mov
fstpl
lret
out
xchg
js
push
andl
sub
cmp
push
pop
dec
push
enter
or
imul
dec
push
ja
mov
cmc
leave
dec
jnp
xlat
pushf
std
push
and
push
mov
fldl
pop
inc
hlt
sbb
pop
aaa
jnp
gs
pop
outsb
xlat
es
daa
jmp
xchg
xor
add
daa
push
lret
in
mov
imul
and
cli
loop
jge
imul
inc
xor
jmp
std
xor
je
dec
push
xor
mov
adc
les
call
ds
xor
jo
xor
aaa
cs
fstps
dec
fcompl
in
mov
and
bound
popa
fisubrl
sar
enter
js
ds
mov
cmpsb
dec
sub
and
xlat
rolb
rcll
orb
jbe
inc
pop
pop
movsb
insb
push
roll
or
lods
dec
popf
add
es
mov
cltd
xchg
fistps
push
mov
mov
cmp
dec
fistps
dec
aad
stos
jp
mov
adc
jg
mov
mov
xor
scas
pop
cltd
stc
mov
movsl
shlb
mov
andl
addr16
sub
repz
lret
pop
jecxz
pop
push
leave
pop
jnp
pop
enter
cmpsl
das
inc
mov
or
xchg
dec
lcall
fwait
ror
push
jg
outsl
call
mov
rcrb
pop
ds
popf
movsb
shlb
dec
xor
ret
ret
loopne
out
bound
xor
pop
adc
out
dec
fsubrl
lods
out
test
stc
frstor
mov
xchg
in
arpl
mov
mov
inc
out
cmpsl
mov
test
inc
or
daa
fwait
js
popf
sub
mov
push
into
jns
or
or
mov
pop
jge
into
xor
repnz
shlb
cmpsb
mov
pop
pop
movsl
pop
sbbb
mov
xchg
jge
pop
fstpl
int
imul
mov
inc
sbb
mov
mov
in
mov
shrb
mov
adc
cmc
vpmadcswd
jne
and
mov
dec
push
in
call
sub
xor
lods
pop
test
insb
jno
dec
jmp
aad
aam
js
pop
or
inc
inc
jp
mov
movsl
aad
mov
daa
and
inc
jecxz
into
inc
psrld
into
xor
push
xchg
pop
add
stos
jle
cltd
cmp
jp
jg
dec
fistpll
ja
rolb
ds
xchg
mov
xchg
stos
lods
lret
repnz
xor
aas
cs
push
dec
js
push
insb
adc
fistpl
cmp
rcll
lahf
push
orb
test
inc
inc
adcb
mov
jl
and
mov
jbe
fstl
push
lahf
clc
inc
daa
mov
loope
xchg
aas
and
rol
arpl
sub
ss
popa
dec
mov
jge
xor
and
imul
mov
sbb
inc
pop
push
inc
insl
xor
mov
pop
rolb
scas
mov
push
repnz
dec
inc
ds
addps
mov
jge
test
mov
jbe
lret
sub
bound
inc
shrb
pop
mov
mov
sub
hlt
jo
cmc
jne
push
pop
les
fwait
insb
or
and
dec
mov
loope
inc
xlat
mov
push
sbb
aad
test
mov
mov
dec
in
xchg
or
movsl
lock
or
notl
lret
call
sbb
ret
sub
leave
aad
cmc
movb
insb
addr16
mov
jns
rcrb
mov
inc
push
mov
sub
inc
push
xlat
lods
mov
cmp
sti
neg
inc
lock
adc
pop
popl
sub
out
icebp
jo
mov
sbb
adc
mov
push
or
shll
inc
ret
sub
das
and
xor
mov
roll
inc
pop
xchg
ss
filds
fwait
sub
sahf
enter
sti
leave
icebp
shrl
mov
sub
arpl
pop
sti
fsubrs
mov
or
test
inc
stos
add
mov
arpl
inc
fwait
pop
stc
scas
inc
rcll
mov
mov
adc
daa
push
and
outsl
push
ret
sub
rol
fsubrl
jecxz
sub
push
iret
sbb
mov
add
dec
cmp
hlt
mov
fisttpl
gs
idivl
sbb
dec
lds
dec
xor
arpl
jae
xor
xchg
xor
neg
or
push
rorl
in
jmp
pop
mov
pop
movsb
jl
lods
or
rol
pop
xchg
inc
add
pop
dec
sbb
fistpll
jae
adc
shlb
negl
clc
xor
arpl
rorb
addl
cs
repz
jns
jno
pop
xchg
test
ficomps
adc
mov
stos
adc
pop
sbb
xchg
rcr
out
pop
mov
fistps
pop
xor
lea
or
cmp
int
dec
rorl
andb
cmp
pop
sar
push
inc
mov
fst
or
mov
push
sub
cmpsb
xchg
fildl
push
rcrb
in
repz
lods
add
repnz
xlat
arpl
cmp
inc
cs
jmp
adc
jbe
insb
daa
jle
mov
repz
adc
or
sbb
pop
into
mov
xorl
dec
movsb
xor
in
mov
imul
jmp
roll
xchg
sbb
pop
adcl
push
cli
xor
rolb
mov
outsl
das
sub
or
or
pushf
lcall
out
rcll
rorb
pushf
dec
les
xchg
jo
xrelease
and
cmp
mov
add
cmp
push
push
mov
pop
jmp
int
lods
dec
in
xlat
mov
fidivs
cmpsl
outsl
inc
mov
xchg
jo
lock
push
fidivs
pop
jae
push
push
mov
jp
or
aad
dec
pop
jecxz
fld
xchg
mov
ja
orl
pushf
rorl
std
sbb
in
mov
lret
nop
push
xor
fstp
nop
call
sbb
lret
mov
pop
addb
aaa
push
sbbb
insb
xchg
dec
test
out
adc
cmp
mov
rcrl
xchg
mov
xchg
int3
dec
fcomp
stc
push
repnz
icebp
rolb
dec
out
sub
out
lods
fsts
rcrb
mov
inc
pop
int3
mov
or
jl
lock
repnz
adc
stos
dec
dec
roll
cmp
push
mov
clc
sub
sub
xor
ljmp
pop
adc
lds
mov
xor
fcomi
je
stos
add
fistpll
movsl
dec
sbb
aad
push
dec
jno
lret
imul
mov
insb
repz
pop
enter
call
mov
roll
dec
mov
es
inc
fs
int
fwait
mov
pop
or
mov
mov
les
stos
mov
add
dec
cli
addr16
pop
mov
mov
xor
jl
pop
inc
cwtl
fs
cli
out
and
ficompl
mov
jecxz
cwtl
sbb
add
jle
pop
inc
lahf
enter
push
push
dec
dec
rorl
inc
ficoms
shl
jl
aaa
inc
and
pop
jne
or
mov
rcr
icebp
inc
xchg
push
hlt
lea
pop
push
jmp
mov
and
lds
push
push
cmp
or
dec
outsl
mov
loope
xchg
push
and
rorb
cmpl
insl
lret
lds
pop
cs
add
xchg
or
push
rorb
mov
dec
adc
popf
pop
and
and
popf
cltd
bound
push
outsb
fsin
adc
lahf
dec
cld
add
sub
insl
in
adc
pop
stc
inc
cmp
push
jl
in
and
pop
in
orb
cmc
lods
inc
xchg
or
mov
adc
pop
fimull
sub
pop
arpl
mov
sbb
fsubrs
aad
insb
jns
mov
xchg
popl
ficoms
sub
push
jmp
stos
jae
dec
clc
les
fcmovnu
jp
xchg
cmc
mov
ror
pop
pop
jno
in
ret
pop
clc
cmpsl
pop
jl
aam
sarl
lcall
ss
inc
adc
push
std
or
push
jmp
stc
insb
dec
aas
cmp
movsl
fisubl
xchg
loope
sbb
int
imul
pop
add
rolb
lret
fistpl
aas
pop
bsr
adc
movsl
cld
addl
jb
and
xor
push
or
pop
dec
pop
dec
xor
push
mov
and
push
sub
pop
cmp
nop
sbb
outsb
ja,pn
dec
mov
mov
cli
or
inc
xchg
pop
sub
add
in
inc
jno
gs
push
and
mov
inc
out
push
sbb
fmuls
push
je
in
mov
push
xchg
dec
movd
aaa
ss
mov
push
or
es
dec
push
sti
or
idivb
mov
lea
dec
lods
out
clc
dec
add
mov
cltd
stc
mov
sub
dec
aaa
shl
shr
mulb
jno
aas
div
push
ret
les
mov
lds
js
pop
mov
popa
mov
dec
xchg
and
pop
out
or
pop
sti
inc
pop
dec
cltd
mov
fcompl
push
fistl
xchg
fcom
pop
rorl
insb
out
test
sub
push
sarl
push
lock
out
sbb
dec
inc
xlat
jle
shll
sti
dec
mov
in
lret
lcall
clc
xor
fucom
xor
push
test
cmp
sbb
in
dec
inc
cmpsl
xchg
sbb
pop
int3
push
pop
sub
jecxz
jl
xor
rcrb
dec
and
xor
cmpsl
test
xchg
jbe
adc
pop
sti
push
movsb
add
inc
fsubrl
mov
xchg
dec
push
and
je
xor
push
sti
es
out
push
inc
push
fstenv
fsubrs
or
mov
lret
fsubrs
iret
cwtl
pop
inc
or
dec
not
lods
inc
pop
sub
js
adc
in
imul
cmp
jo
ss
dec
xchg
mov
push
lods
icebp
push
into
and
mov
mov
jp
insl
dec
inc
test
sbb
aad
lahf
repnz
push
popf
mov
cmp
cmp
pop
mov
xchg
sub
int
push
push
adc
mov
pop
insb
sub
add
mov
lea
fisttpl
lods
lea
movsb
push
mov
cs
or
lds
in
sbb
push
addr16
pop
roll
aaa
or
sub
pop
add
fdivs
fisubs
nop
jge
iret
pop
adc
fists
push
data16
fadd
jge
xor
idivb
lock
add
stc
imul
subb
jno
push
pop
xor
lods
pop
mov
sbb
roll
std
idivb
popa
out
pop
mov
aaa
into
mov
std
xchg
mov
dec
test
je
cmp
adc
pop
jmp
pop
mov
sub
pop
lods
decl
ljmp
jl
ficompl
cmp
std
xor
gs
dec
cltd
jle
mov
ja
inc
push
cmp
stos
scas
insl
mov
or
movsb
adc
lret
and
push
enter
fisubl
imul
rclb
popf
sbb
mov
jae
test
push
out
ret
adc
fs
push
hlt
xor
shrl
subl
dec
and
push
pop
jmp
cli
lock
add
dec
je
dec
out
std
mov
clc
xor
lds
pusha
in
sbb
xor
shrb
imul
sub
pop
push
fsubrs
xchg
push
jo
dec
pop
les
cmpsb
pop
mov
add
jge
jne
in
fdivrs
jp
out
cli
inc
mov
idivb
sahf
and
jl
mov
dec
push
xor
xchg
stos
xlat
aas
mov
pop
jl
scas
shl
xchg
fs
repz
pop
ja
jno
inc
insb
mov
cmp
pop
sbb
shl
mov
cmp
mov
inc
mov
rcrl
jae
cmc
xchg
and
stc
adc
inc
push
mov
pop
cwtl
xor
fistl
pop
ljmp
push
test
push
inc
xchg
cltd
adc
std
fs
cmp
xor
popf
pop
and
jb
ljmp
push
pop
decl
adc
jbe
sarb
pop
data16
push
jmp
js
cmpsl
popf
xor
mov
pop
sub
mov
inc
cmp
adcb
pop
fldt
jae
shl
xor
push
ret
cmp
ja
push
shlb
sbb
out
aam
pop
pop
dec
xor
mov
xchg
or
sub
ja
inc
imul
notb
fimull
mov
dec
pop
jg,pt
lret
das
out
es
inc
cmpb
in
inc
test
mull
stos
xchg
in
xchg
dec
imul
sub
loopne
fisttps
lahf
cld
push
jle
dec
mov
xor
roll
mov
mov
mov
adc
mov
add
int
clc
shll
dec
push
and
in
xor
hlt
pop
gs
shll
int3
repz
fscale
pop
popf
inc
movsl
push
in
imul
cmp
cmp
fcmovu
dec
or
pop
adc
add
outsl
jnp
mov
cwtl
lret
into
pushf
rcrb
adc
outsl
sahf
leave
dec
pop
shlb
js
sub
push
dec
mov
add
sarb
out
mov
pop
int
dec
lods
adc
lock
pop
pop
jle
pop
xchg
int3
les
out
js
xor
nop
lret
push
int3
rcrl
or
pop
inc
icebp
hlt
dec
test
xchg
pop
add
stc
dec
push
add
in
daa
push
fistps
sub
pop
add
shlb
lret
cltd
xor
jb
test
negb
pop
mov
mov
call
jbe
dec
repz
ja
imul
mov
movsl
or
stos
jo
imul
fdivrp
mov
lret
cwtl
add
and
dec
shlb
subl
jns
int
jge
nop
adc
lods
jns
ja
xor
mov
cmp
push
push
cmp
mov
cld
cltd
dec
push
in
into
jb
roll
adc
fisubs
mov
out
jbe
scas
outsl
outsb
fistps
push
std
jb
enter
jle
push
xchg
stos
jnp
mov
enter
mov
dec
mov
aas
or
ljmp
stc
adc
mov
fwait
movsl
into
dec
lahf
push
imul
xor
lcall
inc
push
mov
jl
jp
out
mov
xchg
jno
sarb
into
pop
shll
paddd
or
les
mov
push
aad
push
and
push
mov
gs
jbe
rorb
das
dec
mov
cmp
aas
notb
jle
xchg
xchg
jle
cmp
js
test
add
mov
rorb
or
pop
sarl
notb
mov
ss
int3
cli
ret
dec
inc
mov
sbbl
mov
repnz
cmp
in
pop
jmp
ret
mov
lcall
ret
push
das
dec
out
dec
in
sub
ss
pop
in
shrb
testl
addr16
dec
pop
adc
das
sbb
lods
rcl
stos
shlb
sub
clc
fwait
scas
mov
std
mov
insb
dec
cld
shlb
jbe
jno
clc
sbbb
fstpl
sub
push
pop
nop
sbb
mov
dec
jmp
inc
out
rolb
jp
iret
jne
negb
lahf
xchg
pop
push
orb
aas
fcoml
jae
adc
les
scas
push
pop
lods
cmpl
outsl
dec
stos
mov
mov
dec
and
dec
dec
or
ljmp
pop
push
mov
add
mov
lea
mov
mov
daa
addr16
xchg
sbb
ja
daa
fiaddl
fwait
pop
aad
push
sbbl
mov
je
fistpl
xchg
stc
shr
mov
push
daa
adcb
inc
fisubrl
fucomi
call
mov
add
jmp
mull
adc
pop
gs
aam
push
xchg
fcomps
jle
push
movsl
mov
ja
jae
jg
sbb
sub
test
jmp
pop
insb
test
out
sub
fs
sbb
sub
pop
in
sbb
aas
sahf
orl
and
mov
mov
pop
sbb
cmp
shlb
adc
cmpsl
fists
negb
pop
sbb
ds
iret
mov
ret
and
loope
add
push
mov
xchg
inc
popa
and
repz
mov
pop
xor
xchg
push
aas
mov
in
out
mov
dec
or
mov
fwait
daa
fists
xor
data16
push
nop
inc
stc
sbb
aad
enter
leave
fs
out
xor
shlb
push
dec
or
filds
mov
sub
and
mov
scas
add
rcrb
mov
pop
cmc
lret
adc
pop
dec
pop
mov
stos
mov
mov
jns
pop
cmp
pop
cld
scas
test
adc
and
sti
pop
in
mov
sub
cwtl
mov
jbe
inc
push
lret
sub
inc
xchg
mov
jp
repnz
test
scas
ljmp
sub
jae
iret
xor
andl
adc
add
push
xor
lret
jne
daa
push
cwtl
aam
lret
sti
add
aas
add
push
aas
popf
rcrb
xchg
js
je
outsl
pop
push
xchg
and
mov
add
jnp
pop
pop
fsubrs
cli
or
mov
fbstp
out
icebp
int
add
mov
shr
dec
pop
into
pop
xchg
xchg
xor
scas
xor
inc
out
jbe,pn
mov
pop
scas
and
cltd
and
test
add
xchg
pop
cltd
mov
xchg
insl
add
push
add
inc
add
push
jo
mov
cmpsb
inc
pop
nop
push
insl
pop
sbb
rorl
ret
pop
dec
lods
mov
fdivs
jle
inc
mov
pop
les
jo
dec
pushf
xor
add
mov
sub
and
adc
inc
xor
fs
xchg
les
cmovl
aad
std
imul
xorl
ds
jae
sub
test
jo
in
cmc
xorl
shll
or
lods
mov
pop
repnz
lret
rclb
push
aaa
sub
daa
xor
lea
adc
les
bound
jb
pop
insl
sahf
aam
faddl
pop
rclb
aas
incb
scas
or
inc
imul
mov
or
mov
push
mov
pop
repz
pop
js
mov
pop
cmc
out
adc
dec
ficomps
aaa
gs
arpl
pop
scas
iret
jo
pop
jns
jnp
mov
add
sbb
cmp
cltd
popa
rcr
dec
jecxz
divl
add
push
rolb
mov
lret
mov
mov
jnp
cmp
mov
in
icebp
loopne
mov
and
ret
cmp
roll
xor
test
xchg
mov
jmp
and
in
repz
pop
sbb
cmpsb
sbb
push
push
leave
dec
push
lcall
jp
daa
fwait
or
in
int
inc
scas
in
jmp
outsl
sbb
xor
dec
cmp
test
lcall
adc
addr16
xchg
loope
xchg
bound
nop
jne
mov
out
or
scas
sbb
inc
ret
iret
adc
inc
notl
push
mov
mov
mov
dec
rorb
hlt
int3
jbe
pop
jp
pop
lcall
mov
adc
pop
sbb
cmp
inc
je
dec
les
and
dec
jns
jne
push
pop
test
fsubr
or
cwtl
lods
loopne
test
push
xor
xchg
jb
adc
call
mov
inc
dec
pushf
aam
lret
xor
sbb
bound
lods
mov
pop
xlat
out
dec
and
push
inc
jo
xchg
sbb
aad
inc
icebp
dec
fcoml
xor
test
inc
sti
in
mov
xchg
and
and
or
mov
fcom
pop
xchg
or
jae
push
inc
adc
scas
jle
cwtl
in
push
dec
sub
int3
iret
cmp
jg
inc
es
test
outsl
dec
sahf
jns
mov
cli
iret
adc
arpl
inc
dec
adc
xchg
addr16
fs
xchg
scas
cmc
mov
cmp
mov
in
mov
or
gs
xchg
test
test
rol
int
inc
popa
xor
mov
fsub
or
or
leave
shll
or
arpl
xchg
rcll
add
adc
add
pop
sbb
push
icebp
mov
adc
push
cmc
mov
push
push
xor
ret
sarb
daa
lret
mov
and
data16
and
cmp
mov
dec
in
cmp
dec
mov
pop
cmpsl
mov
mov
dec
ds
xor
shlb
mov
sbb
stc
dec
cld
iret
and
ja
lds
inc
or
inc
fisttps
sarl
adc
and
out
fisubrl
jl
sub
insl
loope
dec
jnp
rorb
loopne
sub
and
pop
insl
jb
fnstsw
inc
adc
fdivs
mov
pop
mov
jb
lock
push
inc
mov
jg
stc
inc
pop
into
repnz
sub
jmp
sub
jnp
and
cmp
enter
daa
jae
iret
addr16
jnp
dec
scas
lea
es
xchg
mov
jle
inc
push
mov
insl
sub
mov
push
push
sub
sub
sbb
stos
push
jle
rorb
inc
in
xor
out
mov
stc
jne
inc
pop
xchg
push
mov
dec
xchg
cmpsb
cmp
mov
push
jbe
movsl
fbld
jge
push
cmp
pop
push
hlt
sbb
js
mov
add
scas
push
jmp
daa
jecxz
and
pop
xor
leave
xor
aad
push
sub
popa
push
out
loopne
out
pop
cwtl
inc
dec
sub
gs
and
dec
in
dec
aaa
inc
xor
shrb
aam
mov
mov
pop
rolb
push
pop
stc
js
jno
or
jmp
mov
xorl
inc
shlb
adc
mov
int3
or
andl
fldenv
lock
dec
mov
cli
lcall
lcall
pop
stos
hlt
mov
push
pop
adc
jae
xchg
sub
mov
fildll
shl
cwtl
mov
pusha
pop
rorb
push
pop
movsb
addr16
loop,pn
pop
jne
outsl
pop
xchg
adc
jmp
pop
mov
xchg
mov
ret
pop
fs
ja
inc
pop
mov
adc
sub
pop
das
incl
sub
movsb
inc
pop
mov
bound
jo
insb
in
adc
inc
mov
adc
subl
dec
dec
mov
xchg
repnz
and
sti
cltd
xchg
fbld
cmpsb
inc
xchg
mov
mov
push
scas
clc
jo
sbb
rcrb
mov
sarl
sbb
in
inc
mov
popa
jmp
pop
inc
rorb
adc
inc
mov
pop
pop
push
mov
std
dec
ret
cmp
imul
cmpsl
sub
push
shll
mov
rolb
arpl
mov
sbb
mov
push
int3
cmp
sbb
jge
mov
xchg
mov
pop
outsb
movsl
pop
mov
push
ret
and
push
icebp
cmp
inc
xchg
fcmovb
mov
cmp
loopne
mov
pop
push
test
cli
lods
getsec
xor
add
push
test
sarl
outsb
pop
mov
xchg
dec
loop
sbb
push
fnsave
movsl
inc
shl
pop
icebp
push
mov
sar
or
repz
add
add
dec
pop
sbb
dec
rorb
sub
xor
xchg
in
ljmp
pop
mov
add
pop
jle
xchg
pop
lods
icebp
enter
pop
push
rcll
sub
scas
fistpll
dec
or
js
adc
sub
mov
pop
fwait
pop
cld
test
add
xor
cmp
gs
cmp
outsl
mov
loop
icebp
jnp
or
fiadds
xor
ret
inc
sub
std
mov
stos
mov
mov
shlb
jns
into
jns
mov
adc
jecxz
aad
les
cmc
test
daa
push
inc
xor
bnd
xlat
pop
adcl
int
push
flds
notb
jb
adc
shlb
adc
mov
sub
fst
iret
pop
cmp
mov
lret
mov
les
sbb
in
fcomip
add
adc
mov
adc
pusha
adc
pop
jle
insb
pop
push
ds
xlat
xor
or
inc
cmp
jmp
lock
push
or
adc
sub
pop
mov
movsl
mov
dec
sub
inc
je
xor
sub
rclb
sub
xor
sub
adcb
inc
dec
dec
inc
inc
xchg
sub
fisttpl
inc
xchg
pop
cmpb
cmp
bnd
sbb
inc
sbb
insl
pop
out
out
cs
add
gs
mov
sbb
gs
or
mov
push
dec
push
xor
fimuls
mov
mov
imul
dec
sbb
or
sub
inc
iret
out
fucomp
repnz
push
mov
mov
xchg
lds
dec
ror
pusha
cmp
push
outsl
lods
shl
imul
stos
negb
dec
xchg
mov
mov
xor
add
jmp
jmp
icebp
pop
lods
negb
iret
sarb
fisttps
xor
dec
cmp
mov
or
jbe
adc
orb
imul
jmp
sub
mov
push
push
in
mov
xchg
adc
sti
jmp
leave
ret
dec
jecxz
push
pop
mov
mov
pop
fistps
rorb
or
add
dec
xchg
pop
xor
loop
adc
adc
lods
sub
std
shrb
std
inc
aad
xchg
mov
mov
sub
xlat
pop
push
push
aaa
aad
adc
lahf
jp
inc
out
add
lods
rclb
pop
sbb
jge
sbb
inc
pop
insl
xorl
dec
mov
imul
jno
outsb
mov
mov
lds
mov
pusha
cwtl
mov
push
cli
mov
add
daa
xchg
add
dec
mov
outsb
xchg
rcll
loope
xor
pop
ret
push
mov
rcr
sub
test
xlat
adc
shlb
outsb
adc
adc
in
pop
mov
hlt
outsb
pop
mov
xchg
lock
adc
lods
fsubrl
scas
jo
and
pop
inc
addr16
cmpsb
dec
jl
sbbb
repz
inc
cmp
push
push
inc
mov
sub
pop
in
and
pop
out
popa
aam
dec
push
loop
sti
adc
cld
std
int3
sar
mov
gs
adc
iret
dec
lret
or
pop
add
and
mov
stc
pop
xchg
inc
mov
pop
imul
fdivrs
gs
dec
leave
lock
rclb
cmp
push
ja
loope
push
mov
pop
fs
pop
mov
sti
test
fstp
mov
pop
stos
push
imul
outsl
pop
lahf
jb
test
jmp
adc
inc
fwait
mov
jp
in
cmpsb
pop
push
dec
pop
xchg
lcall
nop
pop
addb
int
scas
mov
inc
cmp
sub
lods
rcrl
jecxz
fnstenv
dec
in
into
cltd
std
push
sbb
leave
out
xchg
sbb
add
out
mov
mov
aas
push
and
push
or
scas
pop
jns
les
dec
jmp
and
sarb
loopne
jno
sbb
sub
subb
nop
pop
jno
sbb
pop
mov
dec
dec
inc
and
cwtl
xchg
icebp
ljmp
dec
insl
lods
jl
push
icebp
pop
stc
jae
jns
sub
jae
dec
das
lret
adc
jmp
repz
lea
and
dec
stc
into
sahf
insb
je
mov
mov
adc
or
xor
jmp
pop
cmp
cli
push
jne
leave
aam
inc
movsb
mov
mov
stc
sub
and
cmpsb
push
jg
cs
ds
push
dec
and
push
pop
xchg
ja
jge
int
mov
jecxz
int3
cmp
clc
mov
sahf
pop
int3
and
lods
mov
repnz
cmp
and
test
push
jge
jecxz
dec
ret
out
push
cmpsb
push
sar
pop
xlat
loop
sbb
xchg
shll
dec
sbb
rcrb
lods
test
pop
inc
out
cli
ss
sbbl
mov
lods
sub
and
pusha
inc
add
daa
xor
faddp
sub
mov
in
inc
enter
adc
pop
fidivrs
std
aad
into
popf
inc
jp
pop
imulb
test
rorl
pusha
adc
add
fisubs
xlat
sahf
dec
jne
pop
movsb
cmp
gs
shlb
sbb
pop
movsl
aam
push
dec
mov
addr16
pop
ds
cmp
aad
or
xor
or
lds
mov
sbb
sub
dec
and
pop
stos
popa
or
fiaddl
push
repz
or
pusha
mov
push
jae
xchg
sub
mov
xor
iret
scas
sarb
sub
or
es
outsl
addr16
jns
in
ds
jmp
adc
cmp
pop
cmp
pusha
xchg
push
mov
pop
dec
push
mov
ret
and
ror
test
imul
inc
pop
lea
imul
ljmp
inc
pop
mov
leave
dec
std
xlat
xchg
dec
xor
pop
push
pop
add
dec
cli
mov
dec
sbb
and
dec
cmp
iret
imul
out
outsb
inc
arpl
push
xchg
les
mov
sbb
add
inc
sahf
mov
stos
jbe
dec
xor
inc
fstpt
int3
or
cmp
popf
xchg
mov
add
fs
insl
sub
push
cli
pop
push
mov
fucomip
xor
into
scas
pop
cmc
testl
xor
xor
inc
inc
cs
ror
testl
out
fimull
aad
mov
cli
data16
pop
inc
clc
adc
pop
test
aad
mov
pop
sbb
mov
addl
push
or
aas
andb
sub
and
push
pop
insb
or
jno
push
dec
ja
push
mov
mov
rolb
and
clc
bound
push
scas
xor
call
loopne
xchg
imul
fs
ja
pop
xchg
push
mov
int3
inc
das
lea
rorl
mov
jo
mov
cwtl
xchg
push
pop
inc
call
xor
insl
ss
xor
imul
out
sbb
pop
push
in
mov
xor
clc
pop
icebp
test
or
mov
fwait
in
push
stos
iret
mov
les
xor
sti
rcl
fdivrl
xchg
mov
outsl
pop
xchg
or
roll
sub
pop
or
fs
shlb
lret
cwtl
pop
lea
mov
adc
or
sbb
or
inc
xor
mov
xor
dec
xchg
mov
adc
pop
inc
jecxz
jbe
mov
popa
imulb
mov
push
inc
aaa
jl
test
pop
mov
sbb
push
mov
arpl
adc
cwtl
loop
sub
mov
or
jae
dec
cmc
jb
cmpsb
xchg
cmp
mov
ja
mov
pusha
cmp
xlat
neg
ficomps
gs
dec
mov
mov
stos
stos
mov
rcrb
sahf
ljmp
or
popf
push
jl
xor
test
pop
add
stos
es
scas
sbb
jne
xchg
mov
mov
xor
cmp
daa
xchg
pop
push
clc
lods
inc
cld
dec
cmpb
rolb
aad
and
pop
sub
pop
shrl
jnp
xor
fsubl
xor
mov
int
cmp
mov
test
lret
jb
sbbb
ret
mov
push
outsl
hlt
cmp
movsl
pop
mov
fsubl
daa
fsubp
ficoms
jb
fmuls
scas
cltd
popf
fcomps
push
in
shlb
ret
xchg
and
jbe
fdivrl
inc
add
mov
ret
dec
mov
cmc
andl
nop
lods
pop
mov
mov
adc
mov
jns
icebp
jae
aam
shrl
push
xchg
adc
jno
bound
je
sbb
fstp
je
inc
xchg
and
jne
pop
cs
add
rorl
cmp
and
xor
shl
and
and
mov
aaa
pop
inc
jmp
aaa
fs
inc
adc
dec
mov
in
js
pop
aad
inc
flds
pop
add
pusha
rclb
int
dec
and
jmp
inc
pushf
fldcw
mov
dec
jnp
aam
je
xchg
loop
jl
xchg
sub
scas
inc
lea
jae
sbb
lods
pop
add
or
xor
and
sub
mov
pop
in
lahf
imul
jo
push
sbb
mov
iret
inc
xchg
inc
sub
pop
jo
loopne
in
push
lret
popf
test
push
sti
push
push
cmpsb
ret
mov
xchg
imulb
aad
faddl
inc
jge
jg
movsl
arpl
inc
or
and
inc
std
cld
mov
inc
cmc
cmp
and
aam
ret
xor
fsubl
loope
int
jno
test
inc
and
lcall
cmp
imul
xchg
in
call
pop
fnstcw
mov
inc
push
leave
orb
inc
insl
xchg
mov
mov
outsl
fildll
fstpl
bound
push
dec
dec
test
out
xor
sahf
daa
fcmovnbe
xchg
cmpsb
negl
outsl
mov
pop
dec
mov
jnp
icebp
ljmp
arpl
fnsave
and
pop
mov
sbb
roll
clc
or
je
mov
inc
pusha
xor
aad
test
jmp
sbb
cmpsb
ret
xor
mov
push
popa
je
sbbb
andl
xchg
jmp
stc
add
sti
inc
rolb
or
movsb
lcall
mov
mov
test
ja
inc
lcall
mov
xchg
test
cmp
pop
in
push
jmp
inc
adc
outsl
enter
lahf
pop
xor
push
mov
loope
pop
push
push
jae
jns
mov
pop
mov
lods
in
push
cwtl
cwtl
jle
fcmovnbe
icebp
aad
inc
xchg
dec
ss
aad
mov
fwait
pop
pop
jns
rcrb
pop
push
pop
jo
mov
rcl
arpl
jo
jbe
dec
cli
into
xchg
ret
sbb
hlt
jb
aam
rcl
loopne
inc
xchg
fstl
ja
daa
dec
xor
sarb
cwtl
add
or
mov
jbe
add
out
inc
fdivrs
nop
pop
pop
jbe
fmuls
inc
ja
fwait
sbb
cmp
sar
loope
int
mov
push
lock
pop
popf
jnp
or
jne,pn
add
test
mov
or
jnp
pop
cmp
test
fwait
mov
pop
and
sub
pop
cs
mov
dec
xchg
sub
out
scas
hlt
pop
cmp
mov
push
gs
mov
jmp
cmp
cmp
into
stos
mov
adc
lea
sub
shlb
inc
xchg
gs
pop
shrl
mov
rolb
arpl
fwait
pop
mov
and
sbb
pop
loope
inc
jb
and
repnz
mov
xchg
outsl
fbstp
xchg
mov
fidivrl
mull
add
jns
insl
mov
mov
and
jno
rcr
pop
push
or
jns
shr
out
xor
jp
call
xor
imul
inc
push
mov
pcmpeqb
pop
int3
mov
sbb
pop
repz
and
add
jmp
fimuls
in
push
pop
gs
test
dec
adc
fisubrs
rcr
adc
push
sbb
dec
sub
int3
xor
push
cmp
ss
cld
push
out
hlt
or
inc
leave
call
push
dec
fs
scas
pop
push
cmp
sub
dec
pop
sbb
lahf
shlb
fwait
sub
or
iret
lods
mov
dec
mov
jecxz
jo
icebp
aad
adc
sbb
push
adc
add
xchg
pop
rol
jmp
rcrl
cmp
xor
jp
out
ss
xor
sub
xchg
lea
dec
sbb
push
mov
inc
fistps
cltd
jbe
ret
ss
pop
xchg
push
call
lcall
push
lds
aas
mov
mov
aad
or
xchg
mov
or
lods
adcb
sub
inc
pop
imul
push
neg
pop
outsb
fdivrl
pushl
lret
mov
xor
into
jno
shr
inc
insb
push
stc
pop
xlat
popf
xor
stos
rcrl
and
stos
push
sbb
pop
push
es
cmpsb
and
add
adc
push
test
shrb
roll
pop
loope
mov
adc
out
popf
pop
rcrl
outsb
inc
ret
push
sbb
mov
lcall
in
xor
lret
pop
mov
mov
pop
jae
andl
jne
inc
dec
xlat
sbb
dec
cmp
sbb
test
push
clc
in
push
adc
int
cli
add
inc
push
dec
call
daa
adc
ficompl
xchg
cwtl
push
xchg
dec
inc
pop
ret
cli
dec
mov
shll
mov
fs
dec
adc
in
jbe
push
fstl
loop
cmpl
fcompl
negb
sti
dec
pop
or
sub
cmp
lcall
mov
dec
ret
scas
mov
stc
aaa
inc
dec
inc
jno
push
push
dec
dec
adc
pushf
rcl
mov
in
pop
fsub
mov
dec
out
pop
xor
imul
in
stc
or
add
loopne
dec
pop
mov
ss
pop
popa
divb
push
or
or
dec
fstps
sub
movsb
inc
nop
stos
repz
mov
shl
out
push
stc
xchg
aad
xor
test
out
cmpsb
ds
xor
pop
sbb
jg
cs
icebp
imul
popa
jns
sub
pop
mov
push
mov
mov
cld
mov
xor
or
ds
and
jg
push
enter
mov
aaa
sub
dec
scas
movsb
add
jne
scas
mov
jle
mov
enter
pop
mov
add
je
pop
out
xor
lcall
inc
or
mov
ss
dec
bnd
inc
xor
scas
in
mov
out
dec
sub
js
and
cli
stos
push
insl
roll
adc
pop
jnp
jge
mov
mov
ljmp
std
jbe
push
push
movsl
lret
leave
insb
js
test
xchg
shlb
je
xchg
inc
and
or
push
std
dec
lods
pop
sbb
pop
sub
mov
push
inc
sti
jg
pop
xchg
imull
mov
pop
jae
std
push
stos
lods
repnz
sarb
addl
shll
mov
sbb
pop
xchg
xlat
addl
jl
mov
mov
pop
imul
dec
daa
lret
push
push
sub
inc
pop
loop
inc
xor
pusha
test
xor
lcall
fimull
cmc
push
jle
mov
dec
jne
outsb
cmpsb
cmp
in
iret
call
dec
sbb
lea
loope
jnp
jns
sbb
dec
mov
inc
adc
cmp
enter
dec
pop
jle
xor
test
into
mov
mov
clc
insb
mov
adc
aad
or
sbb
mov
stos
notb
rorl
in
mov
rorl
xchg
mov
pop
push
adc
std
movsb
mov
inc
pop
jg
leave
mov
movsl
decb
pop
dec
xlat
pop
call
xchg
pop
inc
js
push
dec
inc
or
divl
pop
mov
mov
inc
jmp
ds
lods
icebp
xor
leave
xlat
mov
xor
xor
adc
in
bound
in
cmp
or
mov
popa
gs
lret
mov
clc
xchg
fldl
inc
adc
cmp
mov
and
xor
or
loopne
push
xchg
imul
in
sbb
sbb
fmull
sub
inc
or
or
imul
adc
jae
dec
sub
sub
rorb
outsb
mov
hlt
loope
cmp
sahf
pop
xchg
dec
push
arpl
fcmovbe
lea
insl
push
bound
movsb
dec
dec
sarb
xchg
xchg
jecxz
sti
lahf
add
xor
aas
dec
sbb
mov
push
inc
mov
out
repnz
test
mov
test
push
test
int
insl
rolb
ja
cmp
mov
imul
rcrb
bound
xor
cmp
subb
stc
jg
jbe
pusha
jbe
ljmp
push
adc
xor
push
test
sub
xorb
imul
insl
pop
aam
out
sti
push
outsl
lret
shl
outsb
inc
js
push
and
icebp
testl
divl
shll
fwait
stc
jge
cmp
test
mov
rcrl
mov
sub
icebp
lcall
in
pop
icebp
pop
jns
stos
addr16
mov
fnstsw
jae
and
pusha
push
xor
adc
pop
inc
std
fisttps
mov
inc
jnp
lods
pop
and
lret
test
mov
cltd
xor
bound
pop
sub
test
jp
ss
adc
call
cli
dec
dec
rorb
xchg
pop
mov
jmp
push
pop
into
inc
in
sbb
les
mov
xchg
cmp
std
inc
sarl
jb
movsb
aam
pop
lcall
sbb
outsl
lcall
pop
or
mov
add
xchg
pop
or
cmp
mov
jl
daa
clc
mov
aaa
stc
push
jnp
sbb
outsb
cli
pop
push
xlat
sub
inc
pop
fimuls
popf
jecxz
imul
dec
sarb
sahf
push
outsl
cmpsb
xchg
inc
out
gs
mov
fwait
sar
cmp
idivb
dec
imul
sbb
push
std
or
push
repnz
jb
cs
ret
mov
or
dec
mov
sub
mov
hlt
mov
or
mov
adc
push
ljmp
jne,pn
lcall
lods
push
insl
ret
lret
pop
adc
push
xor
mov
pop
mov
rorb
or
xchg
cmp
xchg
and
aaa
xchg
imul
and
sbb
xchg
cmp
dec
rol
jl
lahf
in
jge
cmpsb
das
push
dec
dec
stos
push
mov
rol
cltd
mov
jl
sbb
mov
push
scas
ror
cmpsb
sub
outsl
xor
push
xor
aam
jle
iret
pop
push
xchg
pop
ss
fcom
dec
mov
jge
jg
out
sarl
bound
sbb
add
pop
imul
pop
jecxz
add
adc
jmp
add
and
xor
out
mov
jnp
sbb
loope
negb
xor
lea
mov
in
mov
cmp
or
dec
aad
iret
inc
jne
cltd
lods
prefetchnta
lcall
mov
mov
outsl
or
sub
jo
je
dec
lock
into
shll
dec
inc
ljmp
out
fmull
rcrb
aas
xor
cmp
dec
lock
in
mov
sarb
inc
rolb
fucomip
mov
gs
lea
mov
sub
pop
xchg
mov
call
enter
fdivrs
fnsave
or
ret
daa
xor
rolb
mov
dec
mov
les
xchg
inc
rclb
jno
aaa
cmpsl
push
xchg
sub
mov
mov
add
or
mov
stos
sub
xlat
add
cwtl
int
movsb
push
dec
movsl
lods
mov
push
xchg
test
cmp
add
fwait
jo
push
pop
mov
add
push
xor
shlb
data16
xor
outsb
xor
test
pop
xchg
cmp
cmp
test
popa
mov
and
sbb
test
adc
ret
pop
mov
daa
jae
imul
inc
aad
inc
dec
loop
aas
xchg
xchg
mov
out
pushw
movsl
icebp
push
leave
imul
xor
mov
jl
std
orb
or
mov
in
outsl
jns
cs
fs
test
std
repnz
stc
sub
pushaw
sbb
sbb
mov
call
data16
dec
or
xor
sahf
mov
shrb
mov
mov
std
mov
pop
or
cmp
test
mov
addr16
cmp
add
pop
jns
repnz
dec
stc
mov
enter
int
shlb
dec
lcall
roll
das
aaa
pop
and
or
sbb
gs
cmpl
inc
popa
stos
fldl
mov
xor
jecxz
lcall
mov
out
pop
push
daa
xor
dec
into
cli
cld
mov
addl
sbb
sub
mov
ret
mov
mov
cltd
imul
pop
pop
cmp
fucom
rcrb
cmp
cmc
pop
adc
and
sbb
repnz
dec
mov
mov
xor
sub
add
adc
push
sbb
pop
cld
dec
xchg
xchg
ljmp
jp
jbe
enter
mov
and
adc
cmp
pop
push
push
sti
sbb
add
pop
mov
push
jne
dec
xor
sbb
jge
mov
out
je
data16
mov
das
push
mov
pop
pop
shrb
arpl
ficomps
jp
dec
inc
sub
pop
push
sbb
out
stos
popa
adc
mov
jnp
lcall
movsb
adc
mov
mov
jmp
adc
cmp
dec
pop
andl
mov
gs
ds
pop
pop
pop
fisubrs
inc
inc
mov
or
inc
subb
add
jge
in
mov
mov
xchg
cli
out
lret
lods
push
jae
xchg
dec
aam
mov
sarb
add
loop
fdiv
add
aas
mov
fstpl
sbb
ds
cmp
inc
hlt
bound
ficompl
mov
nop
xchg
pop
std
leave
adc
mov
mov
mov
dec
stc
and
jg
jae
dec
xchg
sub
icebp
jge
test
mov
add
scas
lds
ret
je
dec
gs
dec
inc
sub
sti
inc
mov
xchg
fs
ret
bound
pop
push
in
mov
cld
into
fs
test
shl
shrl
ljmp
mov
xchg
dec
add
push
call
mov
sbb
sbb
pushf
clc
sahf
cmp
aam
mov
stos
push
repnz
inc
imul
pop
add
and
out
and
dec
mov
lahf
in
pop
jno
lret
and
lds
sahf
fistps
xor
sbb
jnp
mov
dec
imul
pop
shll
cmp
std
outsl
dec
sbb
jns
mov
arpl
ds
pushf
std
push
and
sbb
sub
js
test
leave
cld
and
not
xchg
or
lahf
pushaw
pop
mov
cltd
mov
xchg
inc
mov
loope
rcll
adc
sbb
lods
pop
gs
inc
movsb
push
adc
fnstcw
orb
push
xchg
fdivrp
jbe
push
sbb
jns
inc
and
pop
mov
cli
mov
mov
je
or
inc
pop
ss
cmp
xchg
push
out
into
mov
nop
cmp
sub
cmpb
add
dec
xchg
lret
cmc
sbbb
mov
fstl
push
dec
dec
mov
std
jo
push
lock
mov
std
cmp
jecxz
or
insb
rclb
dec
imul
scas
fnsave
imul
and
rol
lods
movsl
js
mov
xchg
pop
aaa
sbb
and
cli
in
dec
pop
icebp
dec
xor
dec
inc
pop
es
into
push
stos
sarb
adc
sub
out
idivb
mov
and
or
mov
mov
cmp
and
decl
bound
inc
cmc
pop
cltd
ficoml
push
cltd
inc
adc
icebp
pop
stc
adc
mov
fwait
adc
jle
add
mov
std
mov
fisubs
add
xchg
or
or
or
pop
mov
pop
pop
and
mov
or
jge
jle
pop
sti
out
mov
xchg
rclb
mov
lods
xlat
test
jo
out
rcr
shlb
push
outsl
ljmp
adc
rcrb
adc
xlat
ljmp
sarb
hlt
in
mov
xchg
ret
stos
or
cltd
hlt
jmp
push
test
sahf
ficomps
into
cmp
mov
rorb
mov
out
arpl
cmp
pop
insl
dec
mov
inc
inc
daa
xchg
mov
jp
movsl
sar
cs
in
pop
mov
xorl
dec
jmp
mov
lret
test
pop
stos
pop
push
ret
fidivl
ret
pop
pop
add
cmp
inc
jnp
push
mov
rcrl
jb
movsb
push
shrb
sub
outsb
jge
inc
cmpl
das
sub
xchg
pop
ja
popa
jl
or
adc
and
mov
fcmovb
cmp
shrb
xorl
aad
push
push
and
pop
outsb
add
popf
fisttpll
cltd
movsl
xor
mov
stc
fcmovbe
scas
out
test
push
xor
dec
mov
enter
mov
sbb
xor
filds
adc
cmp
loop
hlt
leave
dec
lods
push
sti
push
push
mov
mov
xchg
ljmp
invd
cltd
mov
mov
rolb
sti
jge
pop
jb
pop
and
xchg
and
mov
hlt
mov
xor
jne
dec
int3
inc
add
fldl2e
sbb
add
jne
and
rcrl
mov
scas
push
mov
mov
js
lcall
outsl
lods
xchg
divl
xchg
not
aam
adc
jp
fwait
pop
dec
outsb
xor
mov
pop
test
in
daa
mov
test
mov
test
inc
or
cltd
loop
outsb
push
into
sub
mov
ret
test
aad
dec
push
test
scas
push
test
push
int3
das
push
negl
fmull
dec
jg
fimuls
scas
push
add
xchg
dec
faddl
and
jns
ljmp
insl
jno
inc
fstps
cld
inc
pop
js
jp
dec
dec
data16
xor
int
and
gs
mov
mov
shll
adc
fldt
jle
push
cld
add
out
fwait
pop
daa
call
push
mov
pop
pop
movb
and
push
pop
mov
inc
mov
dec
pop
mov
mov
rcrb
xlat
push
mov
add
repnz
and
xchg
int
sub
cmp
inc
cli
rcrl
or
and
and
pop
fucomp
mov
pop
inc
cwtl
pushf
cmp
movsl
cmova
mov
aam
or
imul
pop
jl
enter
pop
pop
inc
cwtl
sbb
jecxz
jl
jo
add
test
loop
lret
mov
cld
push
out
out
xchg
inc
fsubrs
in
pop
xor
jl
push
and
fwait
jne
ja
jmp
mov
xchg
inc
dec
es
popa
xor
pushf
lock
adc
pop
fdivrs
xchg
dec
dec
and
sbb
sti
cmp
aad
call
test
xchg
aam
cmp
jbe
insl
leave
enter
es
stos
bound
or
sbb
enter
ret
ljmp
pusha
lret
jp
adc
ja
mov
mov
jno
dec
out
call
in
xchg
jp
out
adcl
call
jge
imull
outsl
xor
xchg
pop
inc
dec
pop
mov
push
jb
fcmovnu
adc
daa
fbld
mov
and
add
pop
mov
push
addr16
push
dec
jnp
xchg
sub
cmp
enter
aaa
pushf
aas
mov
lods
cmpsl
jb
fistpl
pop
es
jmp
stc
or
push
in
shl
xchg
mov
sub
mov
mov
add
dec
loope
dec
mov
test
fst
inc
test
dec
jns
pop
push
xor
sub
cmp
rorb
or
and
fcomi
add
imul
mov
dec
adc
es
divb
in
out
in
push
mov
cmp
cwtl
mov
shlb
sbb
outsl
out
iret
lock
loope
pop
aad
es
fisubrs
loopne
cmp
inc
pop
loop
push
lret
sub
or
cmp
orl
push
inc
jmp
pop
int3
fidivl
insl
pop
cmp
cmpsb
fldt
adc
imul
scas
int3
mov
out
fiadds
fwait
pop
shr
icebp
push
adc
bound
inc
ficomps
mov
push
ret
fisubrs
fldl
cmp
jge
inc
sti
dec
cld
push
xchg
pop
scas
or
shrb
seto
pop
sub
mov
in
mov
aam
xchg
mov
fsubs
inc
aam
iret
lods
pop
jo
out
mov
push
cmc
adc
and
mov
lods
mov
bound
mov
into
dec
ja
pop
pop
imul
dec
adc
outsl
lods
shrb
cmp
subl
jmp
and
in
push
stc
rorl
or
jge
push
sub
mov
testl
or
jl
hlt
negl
xor
stos
mov
xchg
push
sahf
test
cmp
stos
cmc
dec
sbb
or
mov
xor
dec
test
cmp
xorl
adc
gs
sbb
mov
xlat
jb
push
mov
dec
mov
ud1
dec
cmp
jbe
outsb
xchg
fnsave
fnstenv
sub
dec
inc
rcl
dec
loop
pop
jnp
daa
sbb
pop
xor
hlt
pop
lds
dec
mov
divb
pop
frndint
jnp
cmpl
push
mov
lcall
fnstcw
xchg
jp
sti
jge
es
fcomip
push
aad
mov
inc
fisttpll
insb
mov
clc
cwtl
dec
dec
in
or
mov
push
sub
stc
xchg
in
and
and
or
sahf
mov
inc
jle
iret
dec
stos
xchg
push
push
sahf
and
or
add
cmp
shr
call
dec
push
dec
or
repz
xchg
stc
pop
xchg
mov
in
adc
leave
xor
rclb
jecxz
ficoms
mov
stos
sbb
insb
out
aam
rorb
les
je
dec
ss
jg
fists
sbb
push
popf
mov
sbb
pop
mov
and
pop
in
or
xlat
dec
fstl
push
xchg
push
lret
scas
sub
das
jecxz
shrl
pop
push
out
inc
xlat
xor
addb
mov
or
pop
mov
mov
dec
jo
adc
dec
mov
in
jp
pop
bound
or
repnz
lods
call
inc
push
scas
mov
aas
into
pushw
mov
pop
jb
jl
jge
pop
jl
mov
call
sbb
push
push
xchg
cmpsb
cwtl
pop
shl
popf
xchg
aad
js
lods
jns
or
mov
stos
xchg
repz
mov
sbb
test
mov
pop
pop
xor
mov
ret
fldt
mov
inc
or
pop
lock
or
aas
jno
mov
pushf
pop
in
jne
enter
divb
leave
dec
and
fnstcw
stos
rcrb
cmp
mov
push
fstpt
xor
sahf
mov
pop
mov
int3
and
clc
dec
lds
mov
or
add
cmpsb
push
rorl
pop
addr16
aad
mov
ja
sbb
or
sbb
sub
xchg
cld
int
cmp
or
addr16
lds
and
push
adc
fbstp
mov
cli
scas
pop
mov
pop
push
ret
iret
in
aaa
out
dec
mov
and
pop
pop
addr16
pop
ficoms
stos
cld
xchg
and
cmpsb
pop
lds
lret
ror
jno
pop
lods
les
insl
cmp
pushf
or
jl
sbb
outsb
aam
and
push
shr
dec
lret
out
cmp
inc
mov
pop
cld
test
fnstcw
mov
push
adc
mov
dec
jmp
xchg
icebp
dec
push
sarl
outsb
bound
dec
cmp
sbb
xlat
or
cmp
sarb
mov
push
pushf
pop
cmp
push
dec
icebp
inc
es
inc
mov
jo
or
cmp
xchg
mov
leave
ja
movsb
sub
mov
sbb
and
repnz
ja
stc
push
push
adc
mov
sbbl
jle
jp
pop
push
cli
ds
inc
loopne
call
rorb
fs
lods
addr16
test
cmp
das
pop
jb
xor
dec
mov
jg
mov
repz
pop
mov
arpl
push
sbb
fisubrl
sbb
pop
dec
xlat
jg
rcr
lods
xor
mov
pop
jmp
loop
xlat
sar
fnsave
dec
sub
cli
outsl
lods
rclb
push
mov
mov
mov
xor
dec
push
jno
add
jecxz
add
dec
adc
testl
sub
inc
push
pop
cmpsl
lret
cwtl
and
pop
adc
jns
rorl
mov
xchg
jmp
sub
mov
inc
ds
out
lret
pop
outsb
fidivs
mov
data16
mov
int3
pop
pop
mov
push
in
nop
xchg
pushf
sub
mov
mov
mov
jecxz
lret
clc
mov
js
dec
sub
and
fstl
push
pop
push
jp
gs
dec
xchg
sarl
fsubrp
xor
popf
push
and
push
pop
xor
pop
js
cmp
lods
fsubp
stos
fnstcw
pushf
mov
insl
aad
inc
outsl
mov
aas
std
sbb
pop
movsl
mov
xchg
xlat
rorl
out
mov
fwait
jg
inc
add
std
pop
and
dec
mov
xor
mov
jp
mov
js
scas
jb
shrb
dec
xchg
mov
jecxz
minps
testl
xor
cmp
scas
dec
leave
push
pop
cmp
dec
idiv
addr16
xor
iret
stc
jmp
push
outsl
out
pop
rorl
js
xlat
es
mov
fildll
inc
imul
testl
out
sbb
outsb
popa
jb
or
dec
sbb
sub
sar
movups
pop
inc
cld
push
xchg
mov
jge
add
mov
ja
insl
repnz
imul
scas
leave
xor
es
jbe
push
xchg
dec
mov
jo
out
inc
rorb
push
mov
imul
lods
scas
sub
mov
mov
cmp
add
xor
inc
pop
xchg
jg
pop
add
cmovno
pop
ret
rcl
xchg
mov
inc
bound
test
sub
adc
pop
popf
xor
fcompl
push
nop
mov
push
out
out
cmp
add
sbb
mov
dec
pop
rcr
jecxz
adc
push
xlat
mov
xor
xchg
in
mov
ja
ficompl
sar
inc
cmp
mov
xor
or
ss
and
iret
sbb
dec
mov
cwtl
rolb
fs
loope
aas
out
inc
popa
fcomp
shlb
xchg
dec
repnz
mov
xchg
push
add
shlb
idivb
aas
das
push
cmc
cwtl
shlb
mov
sbb
mov
mov
dec
add
pop
out
test
icebp
or
outsl
cltd
popa
dec
cmpsl
xchg
inc
sbb
in
inc
dec
inc
xor
push
pop
xorb
and
mov
push
insb
ficoms
sbbl
push
dec
lock
pop
sbb
jmp
pop
lcall
cmp
scas
pop
out
es
mov
mov
fistpll
push
push
or
cmpl
jl
dec
loopne
inc
mov
and
or
lea
jp
inc
inc
bound
hlt
adc
shrl
sub
rcll
jbe
push
stc
movsb
insb
mov
out
push
out
push
addb
aam
xorb
sahf
or
and
jnp
pop
daa
cwtl
pushl
pop
fiaddl
dec
lock
push
into
ret
and
sub
or
inc
push
inc
xlat
push
xchg
cltd
mov
adc
sub
pop
jnp
cli
sub
xchg
mov
inc
push
jbe
mov
lcall
fst
ds
into
pop
xchg
mov
pop
xchg
push
dec
add
xchg
insb
or
hlt
dec
js
ss
imul
push
aaa
dec
outsl
lds
fimuls
lahf
dec
lret
or
sub
fs
or
fucomi
and
sbb
hlt
sbb
pop
jnp
pop
das
std
mov
ret
test
cli
mov
ja
shr
cmp
mov
lret
dec
out
push
xor
mov
sbbb
pop
xor
xchg
icebp
mov
mov
incb
or
and
popa
lret
inc
cmp
clc
dec
icebp
ret
lahf
xor
sub
pop
aaa
aad
mov
sbb
mov
adc
mov
int3
ljmp
push
adc
lea
push
dec
xchg
adc
push
and
lahf
stc
xlat
and
out
repz
outsl
pop
jg
dec
jg
loope
loop
add
outsl
push
nop
fisubl
or
imul
pop
insb
mov
pop
dec
std
mov
rcrl
pop
pushf
xor
xor
xorb
dec
sbb
gs
xor
jns
add
xchg
pop
or
addr16
dec
push
mov
push
dec
rclb
cltd
int
sbb
push
jg
dec
push
adc
mov
das
into
mov
mov
xor
in
fists
test
movsb
ja
or
fndisi(8087
arpl
stos
jns
scas
push
dec
pop
mov
je
xchg
inc
icebp
gs
cwtl
sub
sbb
ds
out
mov
pop
inc
or
xor
xor
shl
pop
xchg
mull
pop
push
into
les
fs
fnsave
push
imul
pushaw
jns
shrb
mov
sbb
mov
xchg
testb
ja
arpl
xchg
fisubrs
mov
pop
pop
or
push
xor
ror
dec
mov
fwait
pop
and
push
mov
rclb
pusha
out
aaa
pop
mov
leave
int
inc
xchg
xor
xchg
mov
add
fnstcw
aas
daa
inc
jbe
mov
mov
pusha
ja
mov
lods
xchg
push
pop
mov
mov
push
dec
sbb
sahf
and
out
mov
jge
and
pusha
sahf
xchg
lods
test
adc
and
adc
sti
cld
or
stc
popf
dec
push
bound
dec
dec
jae
inc
inc
mov
rolb
loopne
loope
cmpsb
mov
mov
cmc
or
xchg
or
outsl
cmp
dec
add
out
nop
lahf
gs
in
pop
dec
add
sarb
dec
xor
loop
xor
int3
or
repnz
fwait
jmp
push
xchg
cmc
and
sbb
xor
add
or
push
pop
das
inc
gs
stos
aam
jecxz
out
rclb
sahf
neg
pop
cs
fisubs
cli
pushf
pop
inc
xchg
test
mov
iret
stc
lods
flds
lods
pop
nop
out
sbb
or
imul
movsb
repnz
xchg
shrl
adc
push
roll
adc
add
ret
notb
lea
in
xor
shr
jo
fists
cli
mov
jo
dec
mov
jns
icebp
lret
shr
imul
loope
dec
dec
mov
lret
pop
pop
stos
lcall
dec
cmp
cmpsb
inc
mov
fwait
enter
outsl
out
push
dec
cmp
pop
icebp
mov
inc
pop
fwait
adc
mov
fbld
shlb
jae
stos
add
inc
or
andb
dec
in
mov
lahf
sbb
inc
mov
sub
add
lds
jb
xor
sub
orl
and
fwait
std
stc
xchg
jae
aad
sbbl
shlb
mov
jne
xor
arpl
sar
add
lret
pop
dec
dec
pop
std
aas
pusha
icebp
dec
mov
push
hlt
sub
rorb
in
cmp
dec
jg
and
push
int3
lods
out
jl
icebp
shlb
mov
in
add
fcompl
dec
sbbl
add
inc
outsl
into
daa
mov
adc
clc
cmp
inc
stc
pop
mov
pop
pop
pop
enter
ljmp
cmp
push
ja
lcall
int
pusha
lea
mov
in
repnz
lret
or
lock
call
xchg
lods
pop
orl
mov
lret
hlt
and
pop
cltd
out
fs
inc
mov
ret
enter
pop
pusha
stos
pop
mov
dec
int
push
xchg
outsl
insl
cltd
or
rorb
jg
adc
iret
mov
ja
leave
pop
dec
jo
pop
orl
jo
add
aaa
shlb
sahf
mov
pop
or
mov
jmp
cwtl
pop
sbb
dec
and
pop
xor
outsl
add
aam
fists
hlt
imul
rorl
sub
xor
int
cli
xchg
or
cld
xchg
arpl
imul
mov
call
fidivrl
mov
pop
sub
inc
imul
insb
gs
mov
cmpsb
xchg
mov
ljmp
dec
dec
xor
xor
mov
mov
push
aaa
lods
sub
ljmp
pop
xor
xor
inc
outsl
test
dec
sub
imulb
push
jo
mov
das
popf
pushf
enter
mov
addr16
insl
dec
jns
out
aam
jp
mov
fisttpll
mov
dec
pusha
jns
and
aam
xor
lods
mov
jo
sub
aaa
scas
mov
int3
repnz
std
jns
xchg
inc
clc
dec
pop
cwtl
xlat
mov
mov
mov
out
std
or
jns
lea
cld
mov
fiadds
xchg
push
push
popf
out
notl
sarb
jmp
cli
dec
push
dec
push
js
in
nop
addr16
rclb
out
ret
pop
ss
jae
xchg
and
pop
xchg
jo
xchg
add
xor
xchg
ret
xor
add
fwait
jmp
cltd
js
das
rolb
mov
filds
and
dec
xchg
or
clc
xlat
ror
mov
dec
es
mov
dec
push
or
push
popf
xlat
fadd
test
adc
scas
dec
leave
mov
jle
pop
aad
jg
pop
add
movsb
pop
xor
addr16
ret
sahf
add
sub
ret
mov
movsl
std
pop
scas
dec
push
push
mov
loopne
fsubs
leave
in
out
lock
mov
xchg
adc
shll
push
shl
xchg
adc
in
mov
movsb
cmp
pushf
repnz
sbb
pop
adc
stos
push
cmp
xor
inc
mov
or
test
andb
shlb
push
sub
push
pushl
and
movsl
push
sbb
pop
inc
inc
jle
out
cmp
mov
out
cmpsl
dec
mov
dec
mov
pop
movsl
pop
packuswb
lcall
mov
pop
dec
sti
xor
fldl
or
ret
loopne
sarl
into
loope
test
inc
divl
sub
dec
jne
pop
adc
enter
lds
ljmp
mov
xchg
xlat
mov
and
in
inc
sbb
sub
mov
mov
sub
push
mov
shrl
test
stos
aaa
dec
imul
cmp
sbb
add
jle
dec
shll
sarl
cmp
mov
mov
in
add
popf
mov
sub
mov
jno
mov
pop
jge
dec
cwtl
mov
cltd
push
sti
js
dec
pop
jmp
add
lret
jge
jns
adc
dec
and
popf
xchg
dec
arpl
sahf
ret
rcrb
cmp
xchg
fsubrp
insb
pushf
dec
mov
out
push
into
mov
pop
xor
xchg
sub
sub
push
inc
stos
daa
cs
in
jae
ret
mov
mov
sbb
lods
sbb
lds
mov
lock
aad
cmp
int3
sub
inc
add
mov
rorb
out
sbbb
add
pop
fidivrl
xor
sar
cld
aas
adc
sarb
pop
pop
jmp
add
sar
push
pop
pop
aad
push
ss
xchg
out
std
shrb
sub
movsl
pop
test
pop
scas
je
mov
push
dec
add
sub
xadd
and
decb
mov
pop
lds
mov
je
mov
les
jb
pop
cmp
dec
outsl
xchg
fmuls
fimuls
xor
stos
push
pop
mov
push
push
inc
push
femms
mov
mov
xor
inc
fs
lea
outsl
icebp
pop
leave
xchg
mov
cmp
jg
loopne
out
push
push
dec
pop
in
or
dec
mov
xchg
dec
inc
cmp
pop
in
fdivr
push
in
outsb
xchg
cmovbe
ljmp
mov
js
jb
dec
jno
orl
jnp
sbb
or
pop
mov
cmp
cmp
shll
pop
dec
daa
iret
push
mov
rcrl
mov
cmp
mov
dec
push
cltd
out
mov
popf
jbe
xchg
pop
shlb
mov
jl
and
dec
shl
shr
jecxz
mov
repnz
xor
inc
push
pop
fmull
xlat
mov
mov
jecxz
pop
pop
iret
fs
xchg
std
push
loop
xchg
loope
sbb
data16
sbb
idiv
jge
popl
lret
jnp
pop
inc
mov
mov
fwait
mov
cmpb
push
mov
add
movsl
cli
leave
jmp
mov
add
xor
test
popf
pop
shll
mov
inc
mov
cld
or
incb
test
mov
mov
dec
pop
in
dec
imul
shlb
fcmove
mov
pop
mov
pushw
adc
fwait
push
call
cmp
jnp
pop
int
shrl
push
dec
fwait
ret
sbb
sbb
and
pop
xlat
cmpsb
inc
mov
xchg
in
mov
je
jbe
inc
push
inc
insb
clc
and
xlat
push
sti
fnstcw
xchg
sub
sbb
repnz
stos
loopne
movsb
xor
stos
jmp
sbb
addr16
mov
sub
pop
push
pop
push
pop
ds
mov
inc
push
iret
lods
push
pop
adc
cs
sub
sub
scas
jnp
sbb
push
xor
xor
or
cmp
sub
sarb
xchg
inc
scas
inc
call
lahf
inc
cmp
jno
push
ljmp
jle
mov
or
sbb
rorl
dec
xlat
mov
sbb
cmp
bound
push
testl
fcoml
push
dec
aam
mov
xor
adc
inc
hlt
insb
loopne
mov
sub
shrb
xchg
mov
and
stos
pop
xchg
mov
inc
jb
adcb
idiv
in
cmp
inc
dec
sub
divl
shll
out
cmp
outsl
int
mov
or
inc
shl
lret
inc
dec
icebp
insl
out
jecxz
fsubrl
shrb
int
pop
xchg
xlat
in
jge
dec
daa
fldl
dec
std
jbe
or
xor
add
rcrl
inc
lea
into
icebp
mov
inc
in
cld
in
inc
sub
pushl
dec
or
or
mov
rcl
pop
dec
mov
rcrb
pcmpgtd
stos
bound
lods
inc
out
mov
call
mov
xchg
sbb
lcall
mov
loopne
pop
inc
out
push
cld
fisttps
push
mov
cld
jne
pop
rorb
aam
data16
loop
lret
pop
mov
fcompl
and
sub
fimull
add
push
xor
jmp
jle
add
cmp
outsl
cwtl
lods
inc
and
push
out
aam
in
shlb
mov
dec
sbb
and
les
fsubrl
push
jp
mov
fiadds
int
jo
popa
out
adc
dec
out
js
inc
mov
adc
int3
xchg
fsubrl
mov
mov
push
pop
mov
jg
inc
mov
cmp
sub
jmp
fisttpll
mov
mov
das
push
pop
or
and
cmc
loop
adc
je
xor
sub
dec
xor
xor
arpl
shrb
shrl
mov
std
mov
pop
iret
dec
ds
jno
push
in
decl
jge
lret
enter
xorl
add
insb
jnp
outsb
adc
sbb
mov
add
test
outsb
mov
sbb
cmp
xchg
mov
inc
pusha
pop
js
cmp
push
push
dec
push
hlt
es
dec
jge
fists
jle
push
fneni(8087
xchg
pop
cld
dec
dec
dec
mov
cld
or
aad
sbb
push
rcl
pop
lock
mov
pop
call
insl
clc
push
jl
ficoml
lret
or
in
pop
fsubrl
aam
xor
mov
mov
mov
push
in
insb
pop
and
sbb
pop
fcmove
sbb
xor
pop
or
jp
mov
push
push
sub
fildll
jmp
dec
fisubrl
dec
psrld
pop
sbb
add
mov
imul
xchg
mov
pop
mov
xchg
test
mov
test
jmp
std
ret
xchg
int3
push
and
jmp
dec
test
insl
setb
jae
mov
mov
shl
das
gs
outsl
and
add
push
pop
cmp
mov
sbb
outsl
add
add
pop
or
dec
inc
shr
repnz
mov
sbb
jmp
inc
out
push
addr16
push
lahf
imul
mov
pop
stos
scas
fcompl
mov
jnp
jb
lock
cmp
sahf
pop
pop
cltd
fistl
cld
stos
leave
cld
xor
loope
fistpl
pop
test
testb
enter
insb
sub
adc
in
mov
mov
or
xor
outsb
or
mov
pop
adc
add
inc
jge
leave
xchg
adc
lahf
mov
sub
in
dec
scas
lods
setge
pop
dec
sbbb
jmp
ss
push
and
adc
cmp
ficomps
incb
xor
inc
test
js
xor
test
dec
ror
lcall
vaddsubps
mov
xor
jge
xor
stos
inc
push
fstp
cmc
repz
bound
jle
sub
aas
sub
pop
mov
aas
lods
movsl
pop
xor
aas
push
pop
push
cmp
dec
cld
or
push
sub
jne,pt
ss
xor
pop
dec
inc
cmp
cwtl
xlat
aam
xchg
rcr
push
push
loop
mov
pushf
pop
pop
push
mov
imul
pop
push
aad
push
xchg
jbe
or
sbb
jle
add
sbb
outsb
jo
fisttps
shll
in
add
jne
testb
sbb
jecxz
pop
pop
aam
test
mov
inc
mov
test
mov
mov
fld
jns
xlat
ja
pop
mov
sub
xchg
in
dec
pop
and
adc
repnz
pop
lcall
int
cs
inc
jmp
mov
lods
lds
cmp
stos
mov
rcll
sbb
in
sahf
lret
dec
sub
jae
mov
nop
fs
fwait
xchg
lods
mov
lock
popa
push
popf
jmp
push
repnz
es
xchg
in
cmp
lods
dec
and
in
adc
pop
shll
mov
mov
mov
pop
test
data16
or
adc
dec
into
mov
aam
jle
cmp
roll
outsl
ljmp
jb
daa
rcr
mov
pop
pop
cmp
bound
pushf
shrl
js
inc
dec
movsb
lcall
fmuls
sbb
add
iret
pop
sub
xor
ret
outsl
pop
mov
fst
mov
jl
pusha
push
hlt
imul
cmpsl
adc
and
sub
pop
mov
cmp
dec
pop
movsl
jl
pop
sbb
mov
outsb
pop
ja
fsubrl
mov
sub
mov
mov
dec
mov
pop
jg
mov
test
and
push
push
cmp
mov
pushf
cwtl
cmp
rcrb
cmp
icebp
lea
pop
sbb
pop
test
dec
or
sub
rorw
sub
fisubrl
inc
cmp
jns
rep
pop
or
rorb
pop
mov
pusha
and
fld
rclb
mov
movsb
xor
repnz
or
push
imul
pop
cmpsb
stc
inc
js
jmp
push
stos
popf
fldenv
mov
jae
int
test
push
ror
jge
cltd
pop
sbb
pusha
sbb
pop
jl
popa
sbb
adcl
jae
xor
orb
push
xchg
xchg
das
mov
mov
pop
test
dec
out
rolb
insl
push
dec
xor
mov
or
lods
iret
push
pop
cmpsb
mov
mov
dec
sub
movsl
jnp
mov
inc
fbstp
jns
lret
in
mov
rcl
aad
test
jle
enter
mov
fdivrs
rcrb
mov
fnsave
hlt
or
mov
lahf
std
cmp
pop
push
ds
xor
adc
xor
mov
outsl
or
lcall
dec
dec
jno
cmp
mov
rol
adc
sub
cmp
and
lock
nop
popf
popa
pop
int3
popf
testb
aaa
cltd
dec
insl
xchg
sbb
fsubl
rol
push
loope
inc
dec
mov
jle
mov
clc
xchg
lcall
add
pop
pusha
dec
movsb
arpl
pop
dec
rorl
flds
movsl
pop
rcrl
and
lock
cmp
pop
imul
jmp
push
dec
xlat
pop
daa
ds
push
jae
mov
movsb
add
lret
pop
repz
adc
mov
nop
scas
pop
fmul
inc
out
ret
test
xorb
repnz
xor
shlb
or
in
mov
fimuls
fwait
inc
mov
jb
fdecstp
sbb
dec
fisttps
les
int
mov
insb
mov
test
mov
fadds
adc
shll
mov
xor
xor
dec
xor
jo
add
xchg
sbb
xor
ret
data16
pop
pop
mov
dec
rclb
pushf
insl
cmp
mov
sbb
dec
or
into
aad
dec
fmuls
cmc
dec
outsl
int3
lret
test
shl
mov
int
movsb
mov
aam
sub
hlt
stos
push
pop
ret
push
leave
cmc
mov
iret
jnp
mov
add
cwtl
inc
mov
scas
lcall
jmp
aam
and
lds
mov
movsb
sbb
mov
adc
test
scas
shrl
jne
sahf
or
pop
xchg
pop
das
ret
arpl
cmp
push
ds
negl
mov
push
into
pop
dec
jl
xchg
xchg
xchg
mov
pop
push
and
fwait
and
sub
imul
out
psrld
outsb
mov
or
fisttps
sarl
insb
mov
fdivs
lea
insl
enter
mov
dec
outsb
add
call
or
mov
xchg
adc
xchg
pop
push
mov
lret
pop
xor
je
lods
adc
dec
pushf
dec
mov
lock
xor
es
push
dec
in
xorb
sub
or
fsts
fists
and
fisttps
fiadds
icebp
adc
in
jmp
outsl
cwtl
mov
popa
pop
lods
and
lret
loopne
out
adc
adc
jns
lods
in
out
stc
popl
pop
loopne
jo
in
rcrb
jb
adc
dec
sub
pop
and
ret
ss
mov
test
mov
inc
push
dec
and
shlb
mov
dec
mov
std
xchg
bound
lcall
int3
mov
push
fistps
imul
dec
add
pop
and
push
decl
cmp
pop
mov
js
cmpsb
jg
sbb
andb
adc
lods
push
ret
jmp
mov
test
mov
dec
scas
pop
repz
fisttps
aaa
fs
jnp
and
mov
xchg
sahf
or
lods
mov
mov
fdivr
popf
out
cmpsb
loop
in
jecxz
mov
mov
pop
and
std
test
out
ds
sub
push
ja
dec
scas
mov
clc
in
push
dec
pop
xor
or
shlb
jg
mov
rolb
shrb
loope
imul
jmp
ret
shrb
loopne
pop
jns
jb
pop
scas
icebp
test
ds
stos
repnz
hlt
sar
aas
scas
jne
aaa
mov
pop
popf
jo
jmp
fistpll
mov
outsb
cmp
repnz
lahf
dec
add
pop
cli
pop
mov
inc
cmc
dec
push
mov
and
ficomps
das
xchg
ret
cmp
sbb
fldenv
and
pusha
dec
jo
in
scas
and
iret
in
aas
test
jbe
mov
xchg
repz
in
pop
arpl
jge
xchg
scas
pop
cmp
jecxz
xchg
iret
addl
jne
lods
xor
lcall
and
mov
insl
pushf
mov
inc
push
push
or
mov
mov
push
jb
mov
push
cld
ljmp
xchg
dec
jmp
dec
call
xchg
sbb
dec
cmpsl
loope
jbe
push
sahf
jne
stc
or
xor
lahf
ret
dec
push
xchg
popa
sub
xchg
push
mov
lea
rcr
negl
test
dec
fstpl
cmpsl
shlb
adc
pop
in
xor
pop
mov
lahf
lret
stc
push
movhps
ss
inc
add
add
out
out
fld
fisubl
add
dec
push
xchg
dec
scas
mov
or
inc
arpl
mov
fnstcw
pushf
pop
dec
leave
in
fists
mov
xchg
frstor
hlt
dec
adc
dec
andl
jmp
lods
int
inc
xchg
sti
bound
call
dec
xor
mov
xchg
fimull
test
xchg
outsl
imul
xor
jbe
stc
cs
ret
dec
cmp
cmpsb
push
push
mov
fstps
adc
cmp
imul
jo
movsb
fs
mov
pop
and
divb
xchg
dec
fucomip
add
mov
and
fisttpl
pop
cwtl
or
sub
shr
loopne
scas
int
add
pop
jne
dec
es
leave
mov
push
int
rorb
mov
jns
and
into
sahf
dec
clc
mov
daa
inc
lds
mov
aaa
cmc
les
movsl
xor
rorl
rol
inc
mov
outsl
xor
sbb
mov
mov
xorb
pop
shll
push
or
sub
mov
pop
jl
fisttpll
mov
sbb
mov
jg
rclb
xchg
hlt
leave
inc
xor
out
lret
sub
mov
imul
orl
inc
xchg
mov
int
dec
push
lods
xlat
mov
jl
stc
cmc
mov
cmp
outsb
sbb
jbe
out
dec
xor
call
mov
int
xor
jae
addr16
sub
out
push
push
inc
movb
rorl
dec
adc
sbb
mov
dec
int
and
cltd
pop
jbe
das
into
js
pop
jmp
lods
insb
cmp
jns
sahf
xlat
repnz
rorl
loope
xor
dec
pop
insb
jae
cltd
or
xchg
in
mov
sbb
addr16
push
mov
and
add
js
lods
jecxz
xchg
ljmp
pop
fiadds
sahf
sub
shrb
mov
xor
in
push
jne
clc
test
push
dec
shlb
sbb
xchg
push
pop
jns
es
rcll
inc
ret
js
sbb
imul
mov
testl
sbb
call
fstl
cld
or
mov
aad
lock
push
clc
dec
xlat
jo
jmp
rorb
sub
stos
jno
int3
dec
pop
sbb
xor
mov
test
int
shlb
pop
imul
or
xlat
xchg
sbb
or
or
imul
pop
dec
lcall
lret
inc
pop
adc
cmp
cld
mov
lret
or
in
push
jb
pop
jae
daa
cmp
mov
stos
mov
dec
enter
fstps
daa
inc
and
sarb
or
mov
and
cs
fwait
sbb
imull
jmp
outsb
cld
sbb
sarl
cld
adc
cmp
cmc
dec
inc
mov
mov
dec
or
push
cmp
cmpsl
jnp
xchg
ds
gs
jb
xchg
xor
cltd
dec
inc
movsb
jnp
insb
xlat
xor
lcall
mov
sbb
pop
test
clc
pop
inc
dec
mov
movsb
orb
pop
das
in
aaa
pusha
add
jp
xor
pop
push
mov
inc
and
sbb
insl
pusha
sub
xchg
fwait
xor
insl
mov
sbb
or
sarl
aaa
sub
rcrl
mov
and
adcb
rcll
bound
or
sub
jne
jns
ficoml
loopne
jecxz
mov
fsubl
xchg
inc
aad
add
bound
and
icebp
xchg
add
sbb
sahf
fstpl
push
stos
pop
mov
or
inc
xchg
je
arpl
lret
adc
and
test
dec
je
mov
mov
fs
fcoms
shlb
ret
mov
mov
cmpsb
and
ds
cmp
xor
dec
and
cld
subb
rcrb
into
scas
data16
pop
lock
cmc
pop
lcall
test
pop
push
xor
dec
pop
xchg
in
out
add
icebp
push
xor
int
ja
hlt
xor
inc
inc
iret
dec
fcmove
or
mov
mov
and
push
test
mov
xchg
out
push
mov
pop
add
shrl
sbb
popa
push
mov
xchg
mov
sub
data16
jmp
pusha
xlat
pop
sbb
std
dec
inc
mov
shll
fnstsw
mov
push
fsubrl
jno
cmpsb
jno
les
rcll
fstpt
mov
sahf
sbb
cmp
imul
pop
cli
sarb
neg
xor
sub
pop
imul
or
xor
inc
mov
and
push
fcmovb
sub
xchg
les
mov
jae
dec
aam
cld
and
cmp
pop
pop
lods
dec
jp
cmpsl
add
cmp
xadd
sub
addr16
mov
enter
add
outsb
rorb
or
in
or
pop
xchg
push
lea
inc
pop
shr
loop
push
xchg
and
mov
std
dec
iret
jl
jecxz
jae
push
inc
pusha
add
andl
mov
je
mov
add
fst
jb
pop
ds
icebp
cltd
mov
dec
inc
rcr
xchg
stos
dec
push
pop
outsb
xor
daa
push
or
arpl
lahf
jg
or
ja
in
idiv
add
adc
xchg
xlat
mov
iret
loop
mov
scas
sub
lret
lret
and
cvtps2pi
jae
pop
ljmp
inc
jmp
inc
icebp
call
pop
rcll
imul
ljmp
xor
rorb
mov
pop
xchg
arpl
mov
out
pop
or
jmp
add
adc
in
in
enter
loopne
sbb
cmp
dec
mov
adc
add
mov
rol
mov
adc
xchg
int
dec
dec
and
dec
stc
cmc
pop
jo
nop
pop
mov
push
xlat
pop
stos
cmpsl
dec
loope
add
cmp
lock
mov
pop
sub
sub
outsl
sub
sbb
dec
xor
jl
pop
stos
mov
cmp
pusha
push
aam
inc
jns
sarb
jae
mov
sbb
add
mov
dec
push
sti
jge
or
fcmovbe
enter
add
and
cmp
or
ds
std
xchg
pushf
push
out
ja
add
stos
movsl
and
push
push
and
mov
ror
pop
add
js
adc
out
pushf
sbb
sbb
mov
jge
daa
ret
sbb
mov
jg
dec
mov
pop
xor
sub
lret
push
fiaddl
jo
cs
jge
cmp
sub
cmp
in
sub
push
insb
shrl
dec
push
push
cmp
xor
int
jb
jb
mov
das
inc
inc
insl
dec
xchg
adc
rcll
int3
rdmsr
sub
rcrl
ret
xor
sbb
test
in
popf
ss
fnsave
divb
mov
jne
dec
test
adcl
mov
imul
aas
dec
js
lea
clc
jmp
or
inc
add
shrl
subl
adc
dec
mov
inc
mov
cmp
sub
jo
adc
cmpsb
int
xor
xor
dec
inc
xor
shl
sahf
sti
out
scas
dec
xor
xchg
mov
call
push
mov
in
adc
fldt
xlat
push
and
push
mov
scas
fsqrt
outsb
cmpsl
cs
add
inc
out
sbb
stos
aam
push
pop
popa
jae
fxch
mov
repnz
mov
ret
hlt
shrl
mov
dec
cmp
xchg
icebp
fistpll
dec
shrb
dec
loopne
cmp
push
inc
fcmovnbe
loop
fwait
stc
xor
sbb
fdivrl
std
pop
in
cmpsl
sub
jge
fstl
xor
pop
cmp
les
sub
cs
pop
les
and
xchg
xchg
leave
inc
cmpsl
adc
aam
das
xor
mov
xchg
pop
in
dec
scas
imul
int3
pop
cli
out
les
mov
out
push
lods
test
add
sub
pusha
into
imul
mov
lret
xlat
data16
les
lcall
push
mov
mov
add
xor
push
cwtl
scas
pop
mov
pop
pop
cld
int
insl
add
cmp
into
mov
std
dec
mov
pop
sbb
push
xchg
adc
dec
sbb
lods
insl
ja
gs
mov
sub
pop
cmpsl
popf
lahf
xchg
pop
cmpsb
shr
fcompl
mov
dec
inc
push
add
js
pop
data16
movsb
dec
mov
jo
nop
xchg
ds
xorl
add
fldl2t
mov
lret
mov
ret
rclb
sub
shlb
idivl
sbb
leave
subb
aas
or
pop
or
outsb
inc
arpl
sub
jp
dec
rcll
dec
pop
mov
movsb
dec
push
addr16
dec
fisttpll
inc
pop
int
mov
mov
outsl
mov
aad
xor
sub
add
dec
popa
lret
fmul
in
cmp
inc
cmp
leave
xchg
xchg
in
inc
out
outsb
pop
in
idivb
sub
mov
data16
mov
rcrb
push
loop
push
sbb
orl
mov
xor
push
sbb
push
push
add
adc
jb
shll
mov
jo
mov
or
mov
jo
push
cli
je
xchg
dec
pop
or
repz
pop
push
or
adc
sbb
adc
mov
das
xor
push
mov
fldcw
cmp
daa
insl
rol
or
ja
cli
fstpl
mov
jne
cmpsl
mov
push
pop
bound
fsubl
into
je
push
pop
shll
loopne
insb
push
mov
lock
cmp
cmp
roll
mov
sub
add
rclb
out
inc
test
inc
orb
sub
jo
or
add
cld
xchg
in
and
jnp
adc
jle
das
mov
outsl
adc
cmp
pop
lret
xchg
imul
ret
pop
pop
test
pop
inc
jb
lods
pop
inc
rclb
lods
in
add
dec
xor
stos
lcall
cmp
movsl
sbb
pop
aaa
pop
js
aas
pop
jbe
cmp
mov
shrb
cltd
test
dec
call
dec
or
mov
xchg
icebp
repz
mov
sarb
add
mov
das
int3
repnz
ljmp
popa
ss
push
loope
data16
sbb
je
push
jbe
or
jmp
sub
mov
out
fistps
mov
pop
push
add
push
dec
stc
push
aas
mov
je
push
dec
mov
in
dec
in
imul
fldcw
inc
cltd
lods
rolb
mov
ret
jo
ja
jmp
ljmp
in
addr16
mov
xchg
pop
loopne
jns
push
pop
adc
lahf
cmp
xchg
jae
jle
push
pop
dec
or
cltd
pusha
test
add
mov
movl
aad
popf
andl
inc
push
icebp
data16
gs
sbb
jbe
stos
sbb
mov
shrb
iret
out
repnz
outsl
dec
jp
adc
xchg
jno
inc
pop
sub
push
imul
pop
or
jl
insb
xchg
sub
xchg
xor
jbe
and
in
xchg
mov
xchg
inc
loope
fnstenv
stos
xor
xorl
shll
inc
jl
cmp
cmc
shrb
fmuls
rcll
ret
pop
add
leave
loopne
cmp
sub
lods
pop
and
xchg
out
test
aaa
loop
aaa
fists
inc
cmc
pop
int
jp
add
cmp
dec
stc
roll
mov
mov
mov
adc
or
pop
mov
sbb
shlb
fs
test
pop
mov
psadbw
adc
dec
or
fwait
push
sub
ret
in
push
pop
aas
pop
mov
data16
emms
mov
xor
inc
jl
push
pushf
mov
pop
push
xor
insl
aas
mov
into
shrb
aad
cmpsb
std
pop
rclb
jns
lea
xor
scas
lods
pop
sbbl
inc
cltd
pushf
mov
jne
ja
ss
xor
nop
cmp
push
push
pop
movsl
pop
add
icebp
scas
rclb
leave
ret
pop
sub
mov
stc
pop
mov
xchg
jecxz
push
push
insb
pop
cs
sub
addb
out
loope
loopne
xchg
pop
fs
bound
outsb
cmpsl
sbb
adcl
leave
andb
pop
push
xchg
adc
or
ror
testl
or
arpl
mov
outsb
repnz
fisttps
xor
or
dec
shrb
bnd
mov
push
fs
jp
mov
lods
cs
inc
in
arpl
cmp
stc
scas
dec
mov
movl
dec
dec
pop
mov
bound
or
rolb
vmread
je
aas
add
jo
rcl
jecxz
mov
and
das
mov
inc
xor
ret
cmpsl
rcl
pop
mov
stos
inc
nop
xchg
pushf
pop
jns
add
paddb
or
push
sbb
imul
mov
mov
lcall
aam
mov
imul
mov
mov
jecxz
sbb
and
pop
dec
addr16
adc
ret
inc
mov
int3
mov
sub
fs
adc
lret
inc
cmp
xor
push
jae
xchg
into
mov
mov
push
pop
xchg
sbb
pop
addr16
mov
jl
xor
jecxz
pop
out
stc
fwait
jne
ljmp
aam
mov
mov
pop
xorb
adc
pop
inc
xorl
dec
adc
popa
add
rorb
push
mov
fs
int
cmp
adc
std
scas
sub
push
jnp
imul
mov
jg
je
xor
loopne
jne
stos
pop
fcomip
mov
pop
dec
pop
test
cmovs
lcall
rcll
dec
sub
push
pushf
shrb
test
into
pop
iret
cli
xchg
cmpsl
xor
popa
aad
xchg
adc
imul
repz
cmp
push
sbb
aas
pop
cmp
sub
pop
jmp
xchg
sub
sub
bound
cs
ljmp
ds
nop
xor
loopne
xor
cmp
mov
sub
push
add
jae,pt
or
adc
or
pop
pop
mov
lret
lcall
ds
pop
pop
popf
mov
jp
push
xchg
aam
sub
pop
stc
pop
jno
xchg
rol
cmp
jg
test
sbbl
jmp
push
imul
dec
sub
frstor
jno
pop
inc
rcrb
sti
push
leave
fcompl
sub
aad
cwtl
sub
mov
ds
rcrb
cmp
xchg
scas
cltd
add
cmpsl
dec
sbb
mov
roll
mov
hlt
fs
out
xchg
inc
pusha
mov
inc
enter
push
dec
dec
orb
das
inc
cmpsl
mov
pop
jae
dec
cltd
cmpsb
rolb
fcmovnu
cmp
addr16
arpl
inc
inc
push
bound
jbe
xor
ljmp
sub
jle
aam
in
dec
cmpsb
sahf
sub
adc
adc
in
test
dec
mov
lock
inc
notl
imul
add
pop
lods
adc
into
jnp
adc
jle
sahf
neg
mov
ja
or
mov
push
fldcw
push
in
push
jbe
imul
shll
and
or
outsl
or
fmuls
pop
mov
scas
jle
dec
gs
or
xchg
dec
or
jne
mov
lret
out
dec
inc
jl
testb
jne
dec
or
rcr
movsl
sub
sarb
jp
push
aas
lods
push
lods
fcoms
imul
shl
loopne
repz
inc
sbbb
dec
cmp
shlw
lahf
pop
add
repnz
sbb
incl
pop
fisubrs
or
scas
fdivs
cld
jmp
mov
pop
bound
in
mov
adc
dec
aad
xchg
std
sbb
inc
push
subl
pop
xchg
xchg
shrb
call
es
sub
mov
movsl
xor
in
scas
mov
imul
or
les
iret
or
aad
xor
mov
jb
ficompl
in
int3
mov
fildll
jl
inc
notl
lret
inc
push
inc
inc
js
inc
mov
xchg
mov
scas
sub
inc
inc
sub
pop
ds
sub
mov
flds
out
mov
fisttpll
cmpsl
jnp
xlat
xor
mov
sbb
lods
pop
sub
dec
xchg
dec
daa
lock
mov
fwait
inc
mov
scas
lcall
pusha
cmp
shrb
mov
inc
ja
into
outsb
cli
aas
insl
mov
pop
sbb
das
leave
std
adc
scas
pop
push
rcrl
sub
pop
nop
es
rclb
js
jp
add
aam
int3
test
aaa
ss
fs
je
mov
fwait
je
sub
or
arpl
adc
dec
push
test
or
push
rcrb
je
push
lret
aad
pop
jns
and
xchg
lret
aas
inc
push
loopne
push
dec
mov
test
shrb
in
out
test
sarb
jge
sbb
mov
mov
adc
orb
add
and
pushf
fwait
sub
xchg
imul
outsl
shrl
or
xchg
pop
dec
lods
inc
and
mov
mov
sbb
dec
fcoml
push
pop
xchg
sarb
mov
dec
outsb
addr16
fwait
pop
in
cmp
push
inc
clc
pop
pop
push
sub
add
int3
adc
repnz
xor
push
pop
jno
xchg
push
insb
xor
add
pop
pop
orl
dec
sbb
call
in
shrb
mov
insb
pop
mov
stc
rorb
or
jns
pop
inc
xor
xchg
push
in
adcb
mov
push
test
xor
iret
inc
pop
jnp
xor
mov
out
xchg
mov
jl
sbb
ret
xorb
mov
mov
jno
cmp
cmp
sub
int
popf
outsl
fcmovnb
inc
sub
shrb
lock
mov
cmpsb
lret
leave
and
inc
ds
divb
orl
sar
js
jne
pop
add
call
sahf
data16
push
arpl
mov
adc
mov
mov
sub
lret
mov
pop
and
fs
mov
fildl
xchg
out
andl
ficoms
test
sub
push
mov
push
mov
ljmp
jge
clc
mov
dec
cmp
jnp
dec
scas
push
rcrl
lret
inc
outsb
pop
and
or
pop
stc
mov
pushf
scas
gs
mov
leave
sbb
inc
jno
and
aas
mov
shr
mov
test
cwtl
ret
adc
pop
rol
aaa
cmpsb
imul
pop
cmp
adc
repz
call
sbb
inc
jmp
mov
push
mov
dec
push
int
add
cmp
and
neg
dec
xchg
and
xor
in
add
andl
fsubl
or
in
js
nop
pusha
push
cmp
out
inc
mov
jecxz
test
imul
inc
dec
jmp
xchg
add
xor
imul
lods
gs
push
repnz
push
push
out
pop
das
jg
sbb
pop
lret
rclb
xchg
xor
js
sub
adc
jo
jecxz
sbb
and
pop
mov
shrb
pop
ret
je
cwtl
or
repnz
pop
je
pushf
add
inc
adc
adc
adc
cmp
mov
cmc
cmp
push
dec
pop
fldl2e
push
push
fcmovnu
aad
mov
aas
jne
sub
sbb
inc
test
mov
inc
lods
dec
push
and
inc
das
inc
pop
mov
test
mov
sub
cli
jae
ljmp
jg
sub
xor
xchg
imul
xchg
sub
cmp
cmp
shr
push
jmp
push
in
dec
cld
push
adc
clc
cltd
push
add
cmp
inc
dec
mov
mov
cmpsl
shl
xchg
stc
js
xor
push
sub
xlat
dec
push
mov
cs
adc
je
outsb
movsb
mov
aas
adc
cmp
int3
cltd
out
mov
in
bound
xchg
xchg
ret
ds
or
cli
jns
lret
cmc
sti
pop
popf
inc
mov
mov
adc
add
and
sti
lods
fnstcw
dec
push
dec
inc
dec
outsb
push
fmull
out
mov
movsb
rcrb
and
adc
xor
je
insl
repnz
imul
dec
stos
jge
das
popa
mov
and
push
outsl
pop
sub
mov
or
mov
jne
in
hlt
sub
xor
push
pop
jo
fmull
mov
adc
aad
rcrb
incb
sub
pop
jo
push
cmpsl
dec
lock
inc
dec
sbb
ja
jl
pop
sub
jbe
sbb
xchg
orl
sub
clc
rcl
push
and
pop
pop
fs
xor
pop
jmp
cmp
and
fimull
inc
pop
arpl
arpl
fildl
pop
adc
jns
sahf
xchg
pop
pop
das
imul
push
popf
daa
cmp
mov
fs
pop
shll
pop
inc
and
jg
inc
into
dec
adc
jg
jbe
pop
mov
mov
mov
lods
out
xor
popa
inc
xchg
jno
sub
ror
movsb
push
ja
adc
andb
bound
rcll
xchg
arpl
icebp
nop
cwtl
inc
insb
cmp
mov
shlb
lods
mov
fsubl
mov
and
mov
dec
adc
sub
sub
push
scas
js
fstpl
adc
sbb
mov
sbb
loope
sbb
ds
dec
stos
cmp
mov
jb
xorb
psadbw
add
stos
loope
shl
aaa
shl
xor
jge
sahf
sub
or
dec
out
or
pop
sbb
cld
cmp
cmp
xchg
popf
push
pop
call
and
pop
jle
sub
dec
dec
aam
hlt
mov
or
mov
arpl
pop
out
aad
pop
mov
gs
sbbl
or
xor
or
xchg
sbb
mov
xor
jl
xchg
js
push
and
psubusb
rcll
imul
lcall
fdivrs
cmp
imul
adc
pop
xchg
mov
jbe
lds
ror
jge
shll
pop
sub
fsts
aas
ss
mov
mov
push
outsl
cmp
xchg
pop
daa
rolb
or
shrl
xchg
jl
xchg
sti
into
sub
mov
sbbl
outsb
push
xchg
dec
mov
mov
xor
shrb
mov
jbe
xcrypt-ctr
cmpsl
sbb
inc
cmpb
mov
inc
sub
ror
xchg
sbb
pop
in
lcall
pop
mov
sahf
add
negb
sti
pop
ret
test
pop
fildl
dec
jge
je
repz
adc
cltd
iret
ja
ljmp
inc
ss
enter
cmp
je
jmp
push
negb
imul
arpl
es
out
shlb
int
mov
and
mov
addr16
popa
lods
repz
hlt
enter
fisubl
cmpsb
stos
into
int3
das
mov
call
pop
rclb
jns
mov
ficomps
jb
outsl
and
mov
iret
xchg
int
adc
testl
push
mov
push
mov
pop
insl
mov
jmp
dec
popf
jg
xchg
lcall
push
int3
inc
enter
mov
shl
sbb
dec
inc
xchg
xchg
sar
mov
jbe
pop
xor
xor
cmc
sub
pop
ret
pushf
pop
jecxz
xor
loop
adc
jg
lock
xor
fcoms
mov
cmp
xchg
sbb
pop
shll
mov
mov
pop
or
repz
push
sbb
push
rol
adc
es
in
pop
and
cmc
faddl
shrl
jnp
std
mov
dec
pop
push
fisttps
cmpsl
pop
mov
push
in
mov
adc
xchg
jo
ds
sbb
cwtl
xor
pushf
icebp
pop
call
stos
lret
fsub
sbb
mov
adc
dec
cmp
or
pop
fdivrl
arpl
jne
inc
inc
pop
adc
fnstenv
push
jge
pusha
mov
jno
adc
dec
add
fdivr
jp
in
mov
icebp
push
cmpsb
scas
push
nop
pop
inc
lret
inc
test
lock
rolb
inc
fstpt
fnstenv
jnp
dec
cld
ljmp
es
out
lret
mov
loopne
pop
lahf
sub
adc
enter
aad
sbb
dec
mov
cmp
mov
mov
mov
sbb
test
call
lcall
inc
test
enter
xor
sub
or
int
dec
cmpsl
cmpsb
ret
lahf
loope
push
call
jo
sub
ret
arpl
aam
and
push
cmc
and
sbb
dec
adc
dec
push
popa
pop
cmpsl
daa
add
out
jp
arpl
pop
or
mov
inc
movsb
aad
bnd
into
dec
mov
fxch
or
nop
xchg
fildll
xchg
loop
mov
mov
sub
and
sbb
pop
xor
push
lods
and
pop
sbb
test
xchg
add
leave
pop
arpl
fimuls
jmp
sbb
sbb
and
inc
add
adc
ret
shrl
cmp
cmp
and
inc
add
jae
adc
dec
notl
cld
pop
jno
orl
ss
data16
ss
shlb
sarb
sub
jo
cmp
sub
pop
fdivrs
test
push
shl
xor
or
push
stos
call
pop
push
aaa
lock
xor
fnsave
cmp
jg
jnp
mov
mov
cld
ret
in
lret
or
dec
adcb
inc
rolb
jae
push
or
mov
rcrb
dec
data16
scas
push
cs
fnstcw
add
dec
push
xor
les
adc
jecxz
add
stos
push
addb
sbb
inc
rcrl
cmpsl
mov
mov
sbb
push
adc
ds
sbb
popa
repnz
rorl
jae
mov
rclb
gs
mov
pop
out
pop
loop
cmp
cli
xor
rcrl
adc
mov
aaa
ret
xor
repnz
leave
test
mov
dec
add
test
pop
rorb
or
pop
dec
mov
repz
xchg
mov
rclb
jecxz
sbb
popa
add
mov
es
mov
sarb
in
stos
push
int
mov
sbb
gs
fdivrl
seta
jmp
cltd
shrb
je
jp
aaa
push
dec
inc
stc
jle
sub
push
fcmovbe
or
ljmp
lahf
aaa
dec
es
jp
call
mov
xor
mov
lock
mov
sarb
or
jne
pop
mov
and
sub
std
sub
inc
les
push
in
cs
pop
call
dec
pop
inc
dec
es
pusha
ds
pop
lds
loop
adc
lahf
dec
mov
movsb
xor
push
int
dec
nop
stos
and
pop
jp
mov
pop
mov
adc
xchg
push
push
inc
lods
mov
mov
sarb
mull
pop
ja
jae
sub
and
push
stos
popa
pop
fnstenv
insl
popf
stos
and
mov
pop
and
pop
mov
fsubl
into
aaa
push
test
dec
push
bound
xchg
push
das
adc
and
push
ret
push
js
inc
pop
dec
inc
lret
clc
scas
xor
les
jle
stc
shrl
sub
sub
rclb
orb
decw
xchg
enter
das
data16
repnz
dec
in
inc
imull
lea
imul
lock
dec
mov
lcall
xchg
loope
pop
pop
cwtl
sub
push
or
inc
pop
adc
jmp
outsb
jbe
scas
daa
mov
xchg
subb
out
jecxz
jp
dec
mov
xor
sbb
pop
mov
insb
sbb
aad
mov
in
pop
mov
pop
jle
adc
lock
dec
xchg
sti
call
cmp
xlat
sub
cmc
sarb
pop
iret
dec
mov
test
push
rcl
xchg
sarb
mov
sahf
push
dec
push
mov
inc
adc
andb
lods
fs
mov
inc
jbe
pop
pushf
cmp
in
push
push
and
pop
lret
mul
jecxz
imul
inc
jge
xor
inc
clc
cwtl
idiv
cmp
call
xchg
adc
scas
dec
xchg
shll
xchg
sbb
cmp
jno
test
sbb
push
pushf
ja
shrb
fwait
fs
das
xchg
mov
jge
dec
mov
in
sbb
sbb
push
repnz
fs
ljmp
loope
add
and
push
lods
dec
mov
clc
cwtl
add
insl
mov
cli
sbb
xor
xchg
fmuls
push
sub
inc
adc
cmp
cmp
xchg
mov
int
pop
test
aas
iret
hlt
sar
dec
icebp
loopne
les
sbb
incb
sub
push
fmul
loope
imul
test
cmp
fstpt
cmp
xchg
mov
mov
fcoms
imul
pop
rcl
loop
test
in
xchg
add
mov
out
movb
xchg
fsubl
scas
adc
nop
neg
ret
sub
and
or
dec
jns
push
push
sarl
or
loope
push
jge
outsb
fwait
and
dec
add
dec
ss
sti
lcall
test
pop
pop
add
mov
and
push
pop
icebp
or
pop
dec
sub
testl
aam
flds
xchg
jg
push
sub
mov
inc
or
and
lret
dec
lret
xchg
sarl
dec
aas
cli
out
lret
mov
or
dec
sarl
sti
pusha
mov
jae
gs
shll
int
xchg
outsb
add
push
aaa
data16
push
test
or
mulb
jmp
dec
dec
jne
pop
cmpl
iret
dec
and
or
and
mov
mov
xor
popa
clc
sbb
sub
js
addr16
pop
or
push
cli
nop
pop
mov
fisttpll
sbb
xchg
push
mov
fcmovne
sarb
aas
dec
daa
mov
xchg
test
sbb
xchg
cmp
dec
adc
rol
xchg
rolb
fcoms
adc
scas
adc
in
xchg
xchg
lret
pop
jne
push
ljmp
pop
das
push
les
jmp
xor
cmp
inc
jno
cmp
and
sbb
push
int
movsb
dec
icebp
sbb
call
imul
mov
dec
movsl
std
sbb
sti
shrl
cmp
insb
push
dec
xchg
inc
loopne
pop
ror
or
es
mov
dec
loope
in
push
xor
js
js
mov
xor
push
xchg
cld
shrl
and
xlat
xor
mov
shrb
inc
sbb
pop
push
and
cmc
jle
out
shlb
xorb
mov
sar
movsl
testl
dec
clc
dec
test
jb
mov
mov
test
push
loope
dec
incl
sti
push
or
dec
test
cmc
shlb
and
sbb
jno
scas
pushl
mov
outsb
lock
lds
pop
jg
push
pop
scas
cltd
loop
pop
aaa
xor
repz
movsb
pop
pop
call
add
pop
adc
pop
lcall
push
jns
out
pop
repnz
mov
and
dec
inc
ret
adc
pop
dec
xchg
inc
lret
test
jo
loop
xor
or
hlt
pop
push
mov
push
scas
sbb
inc
adc
inc
in
sub
jg
jle
xor
roll
js
je
mov
mov
lods
rorb
mov
pop
mov
jo
imul
sbb
mov
dec
inc
mov
mov
add
pop
mov
inc
xchg
movsb
dec
push
inc
sbb
not
xchg
adc
repz
es
out
pop
int
lea
xchg
pop
or
push
sub
mov
mov
fs
jns
rcrl
lds
pop
js
mov
pop
xchg
fdivs
js
pop
push
insl
test
mov
fcoms
inc
je
push
je
nop
xor
pop
mov
leave
pop
inc
add
out
mov
xor
call
jge
sub
xor
inc
jno
addr16
push
cltd
int
rclb
pop
stos
testl
icebp
cmp
mov
push
sub
popf
sub
pop
sub
subb
fucomi
mov
push
push
cmp
xchg
sbb
jle
push
mov
pop
out
and
mov
xor
imul
mov
cmp
pop
and
inc
inc
pop
mov
lret
in
mov
xor
fcoms
push
rcrl
test
rcrb
pop
cmp
stos
sbb
xor
pop
cwtl
mov
pop
jl
and
movsl
jmp
testb
out
fimull
sub
xchg
push
dec
dec
jae
test
sbb
popf
pushf
jl
ds
dec
rol
clc
cmp
shlb
push
pop
ss
leave
test
cmp
push
popa
popa
push
pop
xchg
clc
xor
pop
pop
jp
add
sarb
mov
pop
repz
inc
lret
sti
shl
jle
jp
or
jecxz
adc
dec
mov
xchg
xchg
push
fisttpll
inc
push
insl
scas
dec
mov
jl
jo
push
pop
movsb
ja
mov
dec
or
jae
icebp
mov
and
cmp
adc
jmp
adc
or
add
shrb
lods
sar
scas
and
jno
mov
push
in
xchg
xor
pop
pop
lods
cmc
sbb
xchg
gs
mov
pop
xor
jp
inc
push
aam
fnstsw
rclb
sbb
xor
add
push
xor
lret
mov
dec
xchg
out
jge
js
lahf
mov
xlat
lcall
clc
iret
lods
add
hlt
test
adc
jecxz
xor
push
clc
mov
out
adc
ss
subb
push
xchg
in
push
fdivrp
fldl
push
js
dec
cmc
mov
jg
aam
mov
xchg
inc
and
outsb
ret
pop
xor
fsubs
cltd
pop
dec
repnz
test
add
sbb
mov
xchg
int3
orb
test
cmpsl
inc
and
fstpl
out
lods
push
add
fsubrs
push
fnstcw
rcl
mov
int3
pop
mov
cmp
pop
jg
jge
add
push
leave
push
xchg
das
push
xchg
dec
lods
shrl
sbb
add
mov
or
xor
pop
imul
sub
int3
aad
xor
movsb
movswl
mov
ja
sbb
push
dec
adcb
in
or
ja
inc
pop
sub
jle
cmc
xchg
hlt
xor
cmovl
adc
sbb
sbb
mov
dec
xor
fisttpl
stos
jg
ds
or
aaa
clc
cmpsb
jne
adc
cmp
cmp
sbb
dec
and
and
or
pop
rcrl
movsl
dec
pop
dec
fisubl
cmp
jae
mov
sbb
add
es
xor
test
jecxz
pop
xchg
inc
push
xchg
mov
add
jb
pop
add
fildl
pop
fadds
pop
and
mov
xchg
out
aas
arpl
add
push
mov
fcomp
dec
jmp
add
jo
lea
les
xchg
aad
addr16
or
ljmp
push
xchg
pusha
cmp
rcrb
hlt
xor
pop
adc
dec
adc
fisttps
adc
data16
std
call
dec
mov
mov
jnp
es
add
cwtl
fdivl
cmp
lret
fcmovnbe
push
shll
sub
loopne
inc
or
dec
dec
sub
addl
sub
push
xor
cmp
ds
adc
js
or
add
xchg
outsl
xchg
xchg
loop
mov
mov
repnz
subb
xor
inc
aaa
adc
add
pop
je
pop
icebp
fucomp
hlt
rcr
mov
outsl
push
jns
add
push
into
addl
adc
shlb
jge
popf
pop
xchg
sbb
pushf
les
push
ss
jmp
push
mov
data16
and
mov
dec
cs
mov
gs
shl
cli
lock
mov
adc
test
mov
aam
push
jb
fmull
lock
movsl
mov
xchg
ja
out
xor
push
cmpsb
xchg
imul
push
jmp
push
rcr
mov
stc
aaa
outsb
insl
jne
stc
pop
shll
outsl
and
xchg
popf
sarb
sti
ret
xchg
dec
cmc
imul
mov
shrl
jno
add
dec
out
inc
jmp
ljmp
dec
pop
sub
push
push
jle
gs
xchg
inc
sbb
inc
adc
sub
sub
lock
icebp
inc
loop
lahf
repnz
mov
lods
and
inc
cs
outsl
dec
daa
andl
jnp
cmpl
cmp
adc
call
xor
sub
fstpl
dec
mov
dec
stos
ret
ja
or
repnz
mov
pop
xchg
in
insl
jne
test
adc
hlt
jns
mov
jecxz
mov
into
popf
rclb
jl
in
cmc
test
inc
push
aam
inc
subl
imul
cmp
dec
mov
nop
nop
xchg
in
leave
fstpl
lds
movsl
ret
cltd
jb
bound
daa
cltd
imul
lds
addr16
jge
jg
lock
fs
jp
lahf
pop
pop
push
mov
ret
sti
xlat
mov
inc
cmp
arpl
shlb
test
jnp
xchg
cmp
in
dec
jne
and
inc
pop
cmp
fdivl
into
push
in
pop
jns
popa
stc
push
inc
mov
and
lret
sub
inc
dec
or
push
push
fisubs
sbb
inc
xlat
xchg
aad
pop
xlat
fiadds
out
pop
adcb
fstps
ljmp
push
test
cmc
push
push
scas
and
nop
cvtdq2ps
push
inc
sbb
pop
in
in
cmpsb
xor
sbb
adc
cld
int3
inc
push
cmp
movsl
xor
sub
or
outsb
shlb
pop
inc
sub
and
fsts
test
adc
icebp
enter
aad
stos
repnz
sub
lods
mov
dec
in
out
dec
cmp
loopne
xlat
mov
sub
sub
in
push
inc
jp
xor
adcl
jbe
xchg
sub
adc
push
out
or
mov
fcoml
and
sbb
mov
cmp
and
mov
or
idivb
lock
enter
popf
dec
pop
test
push
or
inc
jp
lahf
push
lcall
aaa
aas
es
sub
or
mov
mov
cmp
test
dec
mov
hlt
dec
out
int
jp
aad
xchg
pop
lahf
clc
jns
xchg
inc
inc
dec
call
movsl
jne
rorl
popf
adc
scas
mov
xchg
pop
arpl
mov
or
cmp
mov
aam
lods
lahf
fisubrl
pusha
rorl
iret
shl
sub
rcrl
cmp
xor
les
push
and
jnp
pop
sbb
sbb
dec
arpl
std
mov
mov
push
loope
jnp
inc
mov
pop
jo
cmp
lcall
jp
mov
and
push
lret
call
lahf
add
sarb
negb
sbb
mov
xchg
dec
fwait
jbe
adc
xchg
insl
cmpsb
shlb
dec
cmpb
pop
pop
movsl
cmp
int
aam
adc
cmpsb
and
jg
es
dec
cmp
loop
jmp
inc
nop
dec
mov
pop
xor
and
mov
sub
push
pop
lods
shll
stc
cmpsb
mov
imul
loope
loopne
movsb
fwait
rorb
pusha
push
mov
leave
mov
adc
mov
mov
jecxz
shl
xor
xchg
or
sub
imul
fdivl
or
push
icebp
cmc
mov
loope
insb
popf
push
loope
inc
scas
sub
stos
pop
dec
fdivrl
ret
inc
ljmp
xor
mov
call
insl
sarl
push
bound
pop
shll
lods
pop
push
inc
pop
mov
insb
rolb
jns
push
stc
cmp
movsl
push
fiaddl
repnz
adc
adc
insl
inc
sbb
mov
lret
cmpsl
mov
test
jecxz
or
into
mov
push
push
and
stos
adc
dec
sar
ljmp
pop
insl
mov
push
cmp
out
ljmp
cmp
pop
push
fists
jb
jle
xchg
or
dec
sbb
fistps
cmp
nop
cmp
pop
das
jbe
lds
test
mov
insb
jp
mov
mov
fidivl
ret
orb
sub
xorb
fs
sbb
out
fiaddl
inc
mov
sbb
or
push
jp
or
sahf
addr16
movsb
shrb
mov
stc
jns
jg
pop
fwait
daa
inc
stc
pop
loopne
xchg
sbb
xchg
mov
imul
int
jns
fistps
mov
xchg
pop
pop
ret
dec
into
sub
roll
mov
cmp
lcall
les
frstor
sti
push
sub
dec
mov
dec
jge
leave
enter
lahf
xchg
test
lock
mov
add
sbb
lea
lcall
xor
adc
xchg
sbb
sub
pop
arpl
shlb
in
dec
shrl
jnp
sbb
shr
fs
jmp
movsb
addr16
xlat
push
mov
inc
es
shlb
or
inc
add
xchg
fisttps
and
ficompl
push
pop
popa
data16
fsubr
fsubl
push
mov
mov
jge
jmp
bound
jl
and
repz
xor
lds
push
xchg
xor
adc
xor
cltd
inc
mov
pop
dec
shll
dec
cmp
or
fs
scas
out
shlb
xchg
cmpsl
add
pop
jbe
push
mov
jg
dec
pop
xor
lahf
sbb
xchg
xor
sub
hlt
dec
push
adc
xchg
sbb
out
mov
jnp
push
jp
roll
and
adc
pop
pop
incl
push
inc
scas
ljmp
sbb
inc
imul
or
lret
sbb
dec
pop
insb
add
mov
jo
sbb
sub
cmc
ljmp
mov
shl
sbb
inc
adc
push
out
gs
add
rorl
jecxz
lods
mov
and
sbb
in
or
pop
dec
fisubrl
pop
sub
push
pushf
jns
push
mov
sub
les
sahf
and
pop
inc
rclb
aas
push
pop
shll
push
xchg
add
jns
cmp
xchg
lret
cmp
lret
cli
inc
xor
mov
pop
xchg
sub
stos
dec
int
dec
mov
lds
lock
pop
dec
pop
jle
sub
popf
jg
pop
gs
dec
ljmp
out
aam
das
ds
adc
les
push
pop
inc
bound
pop
shrl
dec
daa
gs
int3
mov
adc
dec
pop
notb
mov
xchg
rcrb
aad
cmp
mov
pop
inc
dec
cmp
xchg
cli
xchg
cmp
mov
aam
int
flds
jmp
leave
icebp
idivb
push
pop
pop
xlat
jns
pop
movsb
xchg
inc
dec
mov
dec
cmp
xor
sarb
pop
out
sub
ret
pop
mov
cltd
pop
adc
pusha
movsb
pop
and
mov
enter
dec
or
insl
and
add
xor
je
push
shll
imul
push
pop
cmp
test
dec
sub
je
adc
cmc
in
add
pop
enter
mov
cmp
shlb
sti
sbb
xlat
cmc
mov
in
mov
jp
dec
inc
aam
pop
sbb
add
rorl
std
mov
fcompl
push
ficompl
testl
test
or
lahf
push
fs
sahf
shr
add
pop
dec
enter
dec
sub
sub
icebp
jbe
jle
pop
push
dec
inc
insl
and
adc
sub
movsl
add
mov
pop
adc
sbbl
repz
jo
inc
fcompl
aas
mov
cmpsb
mov
inc
add
popf
dec
fs
popl
cmpsb
push
pop
xor
mov
dec
xor
js
les
add
loopne
cmpsl
mov
sbb
pop
sbb
jmp
mov
rorl
jge
or
inc
pop
xchg
ljmp
cli
xchg
dec
sub
in
cwtl
and
in
cli
aad
loope
cli
imul
adc
dec
cwtl
dec
mov
lods
pop
arpl
adc
xchg
jp
jmp
or
add
push
in
sub
jnp
sbb
and
adcb
je
jne
inc
cwtl
xchg
shll
imul
jmp
cmpsb
fdivr
inc
adc
cld
xchg
int3
adc
sub
sahf
fnstcw
or
pop
cltd
xor
scas
stc
push
push
notl
shlb
inc
cmp
pop
sti
xlat
push
mov
dec
arpl
addr16
jg
jnp
rclb
mov
lahf
cltd
or
sarb
jne
inc
in
iret
shlb
shlb
push
jp
dec
mov
jp
lret
or
dec
push
int
mov
rcrb
data16
mov
fldl
addl
fmuls
adc
ljmp
adc
mov
adc
cld
aas
sbb
jp
test
adc
movsl
rcl
rolb
xor
adc
subps
add
push
mov
mov
addr16
pop
das
cld
inc
jl
ss
sbb
mov
dec
xchg
push
sarl
std
push
jns
mov
stos
pop
ja
push
fidivrl
xchg
xchg
cltd
cmpsb
pop
adc
dec
pusha
aaa
xchg
sbb
xchg
rcl
or
add
pop
pop
out
mov
pop
inc
jecxz
push
cmp
les
or
and
push
fwait
ds
pop
fs
or
cmc
dec
mov
scas
scas
in
adc
ljmp
sub
and
sub
test
xor
lds
bound
je
pop
cmpxchg
sbb
or
lds
rcrb
cmpsb
cmpl
and
adc
mov
or
rclb
push
xor
jbe
or
push
cmp
dec
mov
mov
dec
es
push
mov
into
cltd
sahf
pop
loopne
jnp
push
push
ja
push
cmp
jp
adc
jne
rolb
sbb
mov
dec
rorb
scas
and
dec
mov
mov
aas
pop
dec
cltd
mov
cmp
shlb
icebp
or
test
packssdw
call
inc
int3
imul
mov
mov
pop
dec
inc
fcoml
mov
pop
inc
cmp
cmpsb
push
dec
push
ds
and
int3
pop
test
cwtl
or
xchg
sbb
xchg
das
pop
mov
mov
pop
add
or
dec
dec
pop
test
out
cmc
push
es
mov
fidivl
pop
sbb
or
xchg
rorl
fnsetpm(287
jno
out
sahf
pop
ror
out
xchg
sbb
fucom
mov
jo
push
movsb
idiv
shl
adc
daa
std
push
aas
notl
jecxz
outsl
hlt
lahf
push
ficomps
mov
inc
lods
in
fcoml
sbb
aaa
pop
xchg
pop
jbe
stc
sti
leave
sarl
add
push
js
ffreep
into
lret
repnz
pop
test
cli
int
xchg
mov
vsubsd
clc
push
cmp
jle
shrb
pop
jbe
mov
fistl
mov
push
inc
fdivl
pop
add
testb
bound
pop
out
dec
cld
daa
dec
cmc
rcrb
aad
jnp
add
adc
pop
pop
clc
in
lea
rorb
mov
add
push
xchg
push
mov
inc
jno
fs
jne
lock
ljmp
mov
xchg
rorb
mov
enter
adc
mov
pop
push
cmc
adc
xchg
or
add
std
outsb
cltd
xor
shr
adc
inc
mov
scas
nop
mov
das
push
add
jo
cmc
and
jb
ljmp
jnp
mov
popa
sub
mov
pop
dec
pop
fmul
pushf
daa
cld
test
fwait
js
cmp
xor
jg
xor
hlt
mov
push
repz
fcomps
jo
ljmp
ja
dec
dec
out
fisubrl
out
fs
mov
adc
shlb
sahf
rcrb
aas
enter
adc
pop
jno
les
push
cld
dec
jle
in
out
add
fcmove
xchg
imul
std
lret
mov
enter
jns
mov
pop
addr16
adc
test
xchg
dec
xor
adc
lret
jae
and
rolb
xor
daa
rorb
push
es
loop
test
jb
sbb
mov
inc
sahf
xlat
outsb
push
popf
cld
dec
pop
adc
arpl
lods
adc
mov
sub
xor
ret
pop
lock
xchg
lods
imul
repnz
pop
pushf
add
shll
dec
mulb
push
and
jecxz
pop
std
aam
aaa
jp
int
xchg
xor
push
xchg
cwtl
arpl
lahf
inc
lock
repz
jae
stos
mov
pop
dec
dec
pushf
int3
pushl
clc
cmp
dec
mov
mov
sub
aaa
ret
fistpll
xchg
mov
jne
and
lock
outsl
ja
icebp
mov
xchg
mov
inc
repnz
mov
testl
ret
mov
aam
mov
jnp
mov
sub
dec
mov
pop
lret
add
fwait
cmp
icebp
xor
mov
stos
into
fwait
iret
sub
inc
xchg
pop
mov
outsl
ret
sub
and
mov
or
jns
test
fcmovnbe
ret
mov
shlb
jecxz
jno
addl
sbb
popa
dec
lds
xchg
sub
push
push
mov
js
inc
inc
lahf
pop
lock
push
dec
scas
pop
jg
fmul
stc
shr
mov
push
sarb
cli
loopne
testl
std
adc
fnstcw
fnstenv
lcall
das
and
test
xor
mov
rorb
xchg
lods
scas
mov
dec
cltd
dec
push
jbe
notl
or
arpl
test
inc
add
mov
repz
ret
mov
push
test
cmp
sbb
loope
rolb
ss
scas
pop
mov
cs
aaa
sti
fisttpl
cmp
jbe
pop
dec
outsl
cmp
test
pop
dec
fwait
jg
xor
mov
shrl
jmp
push
insb
gs
fsts
xchg
les
mov
sbb
int
in
out
adc
mov
mov
popf
lcall
icebp
out
in
push
pushf
push
lahf
xor
js
xchg
push
add
or
sar
lock
add
aas
repz
cmp
cmpsl
mov
scas
cld
shrb
ficoms
cmpsb
aad
fldenv
cmp
lods
push
push
push
or
jp
pop
xor
shll
mov
jnp
cmpsl
xchg
push
fmull
aaa
roll
test
inc
cwtl
clc
push
jl
test
sahf
mov
mov
aad
je
les
add
cwtl
pop
dec
and
pop
insb
scas
rol
outsb
rolb
jns
sahf
pop
or
int3
out
jle
fwait
dec
into
clc
jbe
lret
cwtl
fwait
jmp
cld
dec
pop
sub
adc
xchg
mov
jge
push
xor
cmp
xchg
inc
fs
cmp
mov
mov
push
rcrb
adc
imul
cmpsl
pop
sub
mov
inc
dec
or
fucomp
loop
inc
dec
jge
andl
mov
pop
orl
xchg
in
mov
jg
xchg
arpl
out
xchg
mov
mov
sarl
movsl
scas
cmc
add
shrl
adc
cmp
jb
orb
cmovbe
cld
xchg
or
fnsave
dec
in
fmull
fisubs
and
rcl
out
mov
cli
cmp
pop
lock
leave
idivl
int
push
push
stos
cmp
fnsave
outsl
push
cld
pop
rcrl
inc
fwait
sub
in
mov
dec
fidivrs
pop
xchg
dec
test
imul
add
xor
and
lds
mov
cmp
jnp
jno
lret
pop
pop
faddl
xchg
dec
jl
push
mov
xorb
mov
les
xchg
inc
or
ss
adc
stc
repnz
mov
sub
inc
xor
sub
dec
push
or
lods
cmp
mov
stos
mov
in
or
mov
scas
push
in
lock
in
insl
adc
add
mov
pop
pop
in
scas
movsb
xchg
pop
xchg
and
and
dec
push
fldenv
lds
pop
sbb
inc
lds
xchg
jl
nop
push
adc
jb
sbb
xchg
jecxz
out
cltd
and
ret
dec
cmp
xchg
shl
call
and
pop
imul
popa
mov
and
out
adc
cmp
nop
dec
lock
mov
shl
and
dec
fmuls
dec
into
sub
or
cmp
fs
sti
fldcw
fwait
cwtl
push
dec
cmp
call
rclb
add
enter
aaa
dec
pusha
adc
mov
mov
push
lea
outsl
scas
outsl
scas
fcoml
pop
jnp
cmp
insl
pop
xor
stc
push
mov
bound
and
pop
xor
insb
pop
aas
push
cmp
lods
sub
adc
push
xor
test
sub
cli
pop
mov
into
pop
in
out
push
dec
sysenter
dec
jl
outsl
inc
mov
leave
cmp
sub
pushf
dec
xchg
loop
stos
and
push
xchg
and
sti
xor
jle
sub
fldcw
int3
mov
push
and
test
mov
jecxz
jae
in
lock
pop
inc
test
in
rcr
pop
popf
fbld
mov
pop
lods
movsb
lahf
pop
push
cmpsb
pusha
pop
shlb
outsb
inc
mov
mov
les
inc
add
pinsrw
push
aam
lret
enter
dec
xchg
aad
nop
inc
inc
push
push
repz
mov
mov
sbb
rorb
add
clc
cmpsb
pop
loope
roll
dec
arpl
lret
push
sbb
add
mov
test
scas
dec
rcl
test
and
mov
repz
pop
dec
int
adc
sub
and
and
aas
ret
pop
das
testb
mul
pop
mov
and
lret
inc
pop
orl
mov
arpl
inc
sbb
pop
test
pop
gs
in
pop
adc
inc
mov
ret
push
jecxz
decb
xchg
jb
dec
out
rcrl
mov
fildll
xor
push
jno
dec
xor
bound
add
loope
clc
mov
push
cld
jg
inc
ficoms
jp
sbb
shlb
xor
xchg
jno
inc
pop
mov
mov
sub
pop
jb
add
xor
sarb
push
push
inc
mov
add
daa
cld
lods
frstor
pop
pop
pop
sbb
dec
lock
push
lret
push
ret
gs
add
cmp
mov
mov
mov
leave
lods
fsts
shl
into
stos
lahf
stos
mov
sbb
xchg
int3
mov
pop
jae
sarl
ljmp
into
push
jns
sbb
aad
push
fwait
add
push
xor
dec
es
pop
xor
sarb
or
push
dec
aaa
mov
lcall
addr16
push
in
outsl
and
addl
or
insl
sub
jmp
push
pop
cwtl
xchg
mov
loope
loope
rcl
mov
dec
lcall
in
mov
mov
sbb
push
jecxz
cmpb
cmp
cmp
movl
mov
mov
mov
push
iret
cs
push
or
movsb
out
sub
mov
sahf
cmpsb
ret
pop
xchg
push
jae
insb
sahf
jl
pop
and
lret
pop
pop
sarl
imul
call
jno
xchg
sub
pop
adc
fwait
pop
pop
aam
xor
sbb
cmc
daa
repnz
pop
jg
pushf
mov
dec
cltd
mov
dec
jnp
and
pop
xchg
adc
lret
adcb
int3
push
dec
mov
xchg
mov
loopne
scas
lret
shlb
or
or
jne
sbb
adc
outsl
repz
mov
push
mov
sahf
mov
sbbl
rcr
or
pop
test
std
rdtsc
sub
jne
cmpsb
sbb
xchg
test
rol
jae
add
sub
scas
div
dec
mov
shlb
pop
aas
xchg
pop
in
or
ja
sarb
cmpsb
cmp
inc
andl
pop
pop
push
push
or
fcomi
out
test
shrb
lcall
movsl
popa
cmpsl
xor
push
mov
sarl
pop
pop
or
cmp
fsubl
xor
int3
mov
ret
push
mov
ds
lods
mov
dec
pop
adc
rorb
lahf
int3
loopne
popa
mov
mov
dec
nop
rcrb
sahf
ja
in
stc
and
ret
pop
scas
mov
rcrb
outsb
imul
insl
pop
movsb
cltd
xchg
mov
push
cmp
pop
sbb
or
inc
pop
cmp
pop
push
or
arpl
pop
xchg
push
dec
add
in
test
dec
mov
ss
pop
fsubrl
and
rcl
mov
fucomp
test
jmp
rcll
adc
mov
add
or
pop
mov
adc
jg
das
mov
mov
cmp
loope
sub
mov
sub
pop
or
hlt
sbb
test
fsts
pop
in
dec
xchg
daa
and
pop
jg
cmp
mov
stos
pop
dec
js
pop
jmp
rolb
dec
mov
mov
mov
mov
pop
xor
mov
fcomi
test
inc
cmc
xchg
xor
mov
dec
dec
rclb
mov
sbb
mov
lds
sbb
sti
pop
ja
scas
mov
jecxz
pop
enter
sub
pop
xor
fst
add
lcall
dec
insl
lret
loop
mov
int3
enter
testb
mov
add
pop
xor
aaa
add
pop
inc
and
or
mov
in
push
lods
sarl
adc
jle
dec
cmc
mov
push
pop
shlb
loopne
mov
clc
inc
repnz
xchg
ffreep
cmc
insl
addl
jg
pop
push
inc
push
sub
stos
adc
sarb
or
pop
jae
pop
adc
cs
dec
fs
fs
outsb
push
mov
nop
push
repz
stc
adc
lret
jb
in
ljmp
mov
push
fwait
mov
cmp
ret
add
hlt
add
add
jae
mov
icebp
ljmp
shr
sbb
add
xchg
aas
and
mov
push
outsb
xchg
pop
sbb
gs
bound
imul
and
sbb
and
sarb
leave
std
inc
pop
jmp
inc
dec
fisubs
inc
push
pop
cwtl
std
sbb
cwtl
dec
push
mov
inc
push
sti
pop
pushf
rcrb
sub
mov
mov
sub
in
repz
adcb
shlb
adc
aad
and
mov
mov
mov
rolb
jo
jns
lret
adc
jb
jl
in
xchg
fstpl
inc
pop
popf
sti
or
test
cs
popf
scas
cmp
out
inc
sahf
pop
push
aad
daa
mov
bound
mov
or
mov
cmp
xchg
dec
xchg
pop
xor
dec
pop
in
add
pop
fmuls
ficoml
mov
imul
lret
pop
repnz
push
dec
je
and
fistpll
decl
vcvtpd2ps
pop
dec
repnz
jge
sti
or
icebp
stos
int3
insl
int
or
shll
insl
call
jo
mov
sti
mov
push
aaa
dec
mov
sti
pop
add
cmp
or
cltd
pop
and
andl
and
cld
fsubl
std
cltd
stc
dec
pop
mov
cmpb
mov
mov
shl
dec
mov
lret
shlb
adc
push
xlat
js
leave
mov
imul
imull
pop
add
aam
dec
inc
mov
test
rclb
in
loop
cmpsl
xchg
dec
or
jge
or
in
push
inc
ret
incb
gs
shll
jb
imulb
cmc
dec
lcall
mov
xor
xchg
mov
cmpsb
mov
pop
ljmp
cmp
xchg
mov
outsb
movsb
push
push
mov
xor
lods
rclb
or
subb
pop
mov
mov
int
cmpsb
mov
mov
dec
arpl
shl
fdivrl
rolb
pop
fucom
pop
dec
lods
dec
jae
pop
push
dec
movsb
pop
rorb
into
and
ret
push
mov
pushf
test
fmull
mov
shlb
shr
call
rcl
aas
mov
dec
cmp
push
cmp
rcl
insl
mov
xchg
repnz
pop
das
add
dec
leave
xchg
int
lea
cmp
or
mov
cmp
cmp
dec
dec
je
iret
fstpl
add
add
nop
dec
ficomps
mov
mov
mov
add
pop
lds
aaa
mov
jae
pop
rol
inc
or
pop
xor
lea
ret
pop
lods
mov
mov
mov
lahf
or
and
xchg
xchg
rcrl
add
cmp
and
and
sub
popf
xchg
ret
addb
inc
and
cmpl
jo
push
add
leave
cwtl
test
or
addr16
mov
scas
sbb
or
dec
inc
gs
outsl
movsb
vpsadbw
movsb
mov
pop
jb
cli
xchg
fwait
inc
je
pop
int3
out
aaa
mov
scas
loopne
aas
test
push
adc
outsb
es
jg
mov
jmp
enter
push
pop
dec
ret
test
mov
lea
pusha
daa
push
pop
lods
les
cmp
or
shlb
or
outsl
mov
push
insb
push
jae
aam
push
sbb
dec
loop
mov
mov
roll
shlb
out
stos
sub
add
pop
mov
scas
shrb
jae
popf
mull
sbb
pop
aas
pop
aad
pop
xchg
add
gs
xchg
stos
loop
jmp
fldl
push
mulb
add
arpl
aaa
cmp
hlt
lds
sub
scas
repnz
dec
sbbb
mov
rol
add
add
xchg
jmp
dec
sarl
fistpl
jge
inc
call
xchg
outsb
imul
jo
xchg
push
aaa
add
dec
lcall
inc
loope
daa
jnp
dec
sbb
jmp
or
icebp
sbbl
pop
or
mov
lds
sarb
dec
push
pushf
push
lahf
cmp
cwtl
push
sbb
pop
dec
out
addr16
aas
cmpsb
sbb
movb
rorb
lods
pop
xor
loop
jg
repnz
jge
inc
and
pop
add
lcall
xor
stos
and
xchg
inc
sub
mov
jmp
cmpsb
test
jnp
leave
in
popf
pop
fwait
jge
inc
add
in
andl
mull
push
fstpl
incb
xchg
fidivrl
adc
fildll
addr16
pop
das
add
fcmovne
xchg
outsb
push
dec
sbb
loope
push
xorb
out
sarb
and
loope
inc
push
jnp
lret
adc
outsb
mov
fldl
and
fs
dec
in
jno
pop
hlt
push
iret
out
push
imul
mov
int3
mov
repz
mov
push
sub
xchg
daa
lret
bound
ret
enter
fidivrl
xlat
mov
lret
loopne
stos
sub
mov
iret
jecxz
lea
xor
cmp
pop
mov
xor
gs
rorl
mov
pop
add
orl
sub
rorl
or
movsb
jge
pop
pop
lock
movsl
mov
aaa
or
jl
int
push
jecxz
adc
outsw
mov
lret
mov
lcall
leave
dec
out
popf
xchg
jmp
arpl
pop
arpl
out
add
loop
aas
imul
aam
repnz
lahf
dec
test
mov
rcr
inc
jb,pt
mov
pop
or
push
xchg
scas
sahf
pop
insl
out
mov
xchg
in
jge
mov
rcrl
xlat
push
mov
in
movsl
dec
push
push
push
in
inc
lea
scas
ror
in
xor
int
lcall
sub
dec
dec
sub
jmp
push
cltd
pop
shrb
pop
adc
ds
mov
pop
and
sti
mov
dec
je
sahf
dec
jge
xor
sarl
xlat
adc
outsl
mov
lods
or
inc
dec
mov
rorb
dec
add
jnp
stc
push
or
push
jno
mov
rorb
popa
sub
pop
push
scas
or
and
inc
mov
mov
or
cs
push
pop
ja
jnp
jo
cltd
jg
addr16
sbbl
mov
mov
mov
and
add
ljmp
and
jnp
sub
mov
aad
negl
inc
ss
je
pop
popf
decb
inc
jno
mov
jecxz
test
js
and
dec
pop
lahf
outsl
loop
cmp
ljmp
cmpsl
adc
test
jg
inc
divl
pop
fldl
mov
lods
and
sub
lahf
test
mov
inc
jbe
sub
pushf
mov
mov
mov
push
adc
enter
daa
lret
and
ja
push
cmp
pop
loop
int3
mov
dec
scas
fldenv
push
shrb
lret
jb
cli
lds
adc
call
mov
lea
imul
push
imul
pop
xchg
fwait
xchg
dec
mov
mov
daa
cmp
push
insb
rcr
aas
mov
imul
lods
leave
ficomps
ds
ljmp
ret
sub
es
jp
jne
lret
ror
lds
sub
fsubrs
inc
xor
stos
push
jecxz
lds
pop
lcall
xor
outsb
out
sub
fxsave
dec
xchg
fsubrs
pop
mov
sub
add
cwtl
andb
mov
rolb
sbb
cmpsb
and
rcrb
imul
testb
jle
pop
les
scas
jecxz
push
add
jmp
add
shrb
sub
loope
in
lods
sbb
cld
add
cmc
shlb
and
insb
lds
pop
push
inc
aad
mov
bound
inc
cmpsl
jg
mov
test
mov
test
int3
test
cltd
sbb
mov
cmp
lret
fldcw
push
inc
mov
jmp
push
mov
cltd
push
mov
cld
jmp
cmp
lods
push
xchg
repz
out
xor
out
js
jmp
jne
sahf
jecxz
nop
xor
shl
mov
pop
lcall
or
les
pop
xor
dec
adc
pop
jno
cmc
adcl
iret
mov
rol
and
push
outsl
add
inc
mov
lds
add
sub
or
dec
pop
or
sbb
ror
testb
js
out
addr16
xor
pop
adc
mov
pop
cmp
outsl
lret
add
std
divb
addr16
push
outsl
insb
cmp
repnz
cmp
rorb
add
mov
and
aaa
push
in
xor
pusha
test
fists
dec
jp
inc
jns
insb
pop
ret
push
mov
push
mov
pop
mov
dec
jmp
outsb
jmp
push
pop
test
daa
ja
shrl
inc
push
sbb
adc
xchg
pop
sti
jns
aas
xor
out
dec
sbb
push
adc
and
jo
xchg
push
sub
mov
pop
xchg
xchg
mov
inc
xchg
and
mov
sahf
mov
pop
inc
je
fst
sub
call
in
sbbb
pop
in
aas
xchg
pop
sbb
pop
dec
dec
mov
xlat
cwtl
jo
inc
test
jle
cli
add
dec
adc
test
mov
lret
call
dec
sub
sub
fiaddl
pop
repz
pop
xor
dec
daa
jnp
insl
jnp
pop
pop
inc
fistps
ficoml
sbb
or
mov
push
int
stos
cld
inc
jge
out
xor
out
pop
mov
push
ficompl
movsl
pop
mov
pop
orb
jl
jecxz
mov
movsb
push
inc
jle
daa
inc
mov
inc
sbb
shlb
pushl
movsb
mov
jb
adc
int3
pop
sbb
add
push
and
inc
clc
mov
jae
cs
fstl
pop
test
cmp
xchg
lods
adc
rclb
sbb
push
addr16
pushf
jbe
jmp
ds
mov
jno
xor
push
dec
stos
push
gs
pop
pop
push
pusha
leave
add
shrl
sbb
cmp
cmc
sbb
cmp
mov
sub
push
pop
shrd
jg
lods
add
xor
cmp
jg
add
cwtl
and
std
shrb
xor
fstpl
mov
mov
imul
and
jbe
in
bswap
pop
in
jbe
xlat
inc
je
fsts
dec
or
cmpsl
notb
sahf
jb
jns
lret
dec
pop
push
ljmp
popa
outsb
pop
push
inc
das
movsb
leave
mov
jmp
fucomip
nop
push
das
fmuls
pop
lcall
ret
imul
add
pop
dec
lds
int3
jnp
and
into
mov
bound
mov
push
mov
int3
out
mov
andl
setnp
jecxz
test
xor
cmc
cld
in
adc
cli
dec
jno
push
pop
jle
or
hlt
roll
pop
fldt
and
mov
cwtl
pop
pop
pop
mov
stc
inc
dec
popa
inc
push
and
adc
pushf
mov
popf
adc
fs
cmp
xchg
ja
push
mov
stos
js
pop
xchg
stc
xchg
rorb
scas
mov
fisubrl
aas
inc
lcall
xchg
mov
adc
mov
insb
mov
les
rcr
push
sbb
leave
xchg
aad
fidivl
call
pop
popa
xchg
lahf
push
cld
dec
into
or
fmull
dec
in
das
jae
repnz
lret
xchg
jg
dec
iret
pop
adc
mov
inc
cld
or
cmp
xchg
adc
mov
mov
lcall
mov
adc
out
out
lock
mov
pop
daa
sbb
loop
xchg
mov
fwait
stos
pop
clc
xchg
fimull
pop
sti
sarl
or
in
inc
adc
clc
jg
fidivrs
inc
push
hlt
sbb
out
jge
aam
mov
sarb
fwait
repnz
cmp
cmc
je
insb
xchg
js
ljmp
das
mov
xchg
or
in
out
mov
jmp
dec
and
fisttps
xor
ficoml
fs
push
fmul
cmpsb
arpl
jns
mov
cmpsl
insl
test
mov
add
mov
loope
in
dec
shrl
xchg
rolb
popa
mov
mov
repnz
lods
shlb
mov
popf
sub
fcoml
xor
pop
mov
jbe
push
inc
ficomps
loop
pop
xor
xchg
into
push
pop
mov
inc
movsl
add
pop
jne
mov
pop
xor
cs
cmpsb
jp
into
dec
sub
and
xchg
pop
int
xor
jge
test
fwait
in
dec
lock
les
hlt
add
dec
cmp
aas
fnstcw
jbe
jecxz
fucomip
cltd
mov
and
xor
pop
and
cmc
pusha
pop
pop
shlb
mov
pop
ficompl
cmpsb
sarl
call
ss
cld
inc
and
lods
xor
addr16
and
vmovdqa
decl
jmp
inc
or
les
fists
daa
lahf
inc
pop
push
ret
add
repz
jo
mov
push
pop
es
inc
ds
data16
sbb
js
imul
mov
pop
or
and
lock
shl
outsl
add
ja
dec
scas
sbb
shlb
rorb
inc
bound
mov
bound
mov
imul
addl
cld
ret
mov
push
adc
lods
mov
popa
fs
ss
insb
gs
sbb
daa
inc
jecxz
jle
push
rolb
pop
cli
mov
mov
cltd
arpl
popf
xchg
test
pop
inc
push
jle
adc
jg
inc
jle
pop
ret
test
jae
push
sahf
pop
add
push
mov
mov
leave
jo
int
inc
imul
dec
fistps
std
and
ds
xchg
mov
dec
leave
add
push
adc
dec
roll
sar
sub
sti
xchg
add
shlb
andl
ss
faddl
dec
inc
shll
insb
add
inc
rorb
lods
and
outsb
dec
rorl
aam
shlb
into
lods
les
cmp
addr16
testb
stc
mov
dec
scas
out
hlt
cmp
pop
rcrl
adc
sub
pop
shll
cmpsl
push
test
sub
sti
mov
testl
xchg
inc
adc
lods
push
pop
inc
inc
aaa
sahf
rcrb
stos
pop
fnstcw
pop
pop
cli
fmuls
jmp
ljmp
push
push
cmp
adc
xchg
aad
jmp
in
mov
and
dec
jb
movsb
pop
xchg
push
popf
lock
aad
sbb
mov
pop
pop
outsl
clc
lret
lds
push
fsubs
js
notl
inc
add
insl
aaa
shll
shr
lcall
mov
shlb
push
sbb
pop
rcll
sarl
jmp
pop
ret
xchg
xchg
jmp
jnp
xchg
pop
sbb
mov
leave
lods
shl
rorb
nop
jecxz
cmp
movsb
add
fs
in
xor
xchg
repnz
or
pop
dec
cmp
rclb
stos
pop
xor
pushl
dec
or
dec
lcall
je
push
cmp
out
push
and
dec
inc
decb
mov
mov
jg
or
pop
test
sub
adc
push
pop
dec
out
jno
out
sub
add
std
insb
rcll
cltd
sub
fwait
sbb
dec
pop
idivl
mov
jl
int
sbb
mov
jo
popf
mov
test
ret
ds
cltd
es
sti
and
sub
addr16
pop
std
cmc
sbb
hlt
aad
lods
pop
pop
push
aad
sahf
xor
jmp
ja
and
cmp
sbb
dec
movsl
jecxz
xchg
xchg
lea
sbb
pop
dec
js
mov
call
jl
push
fdivrp
pop
loope
es
insb
mov
pop
jnp
pushf
pop
mov
dec
dec
sbb
mov
rclb
or
xor
mov
mov
add
mov
hlt
pop
cmp
push
call
xor
int3
les
xchg
pop
and
xchg
leave
ret
sbb
lret
aas
dec
loop
sub
jmp
push
add
rorb
sub
enter
push
xor
fnstenv
push
xchg
adc
pop
or
and
and
shlb
sbb
sahf
pop
jne
push
sub
pop
test
iret
scas
int
mov
dec
popf
pop
cmpsl
xchg
push
inc
sub
or
or
dec
les
jne
pop
rcl
add
inc
jne
lahf
pushf
fcomps
inc
push
sub
iret
pop
push
fdivl
pop
icebp
lcall
xlat
mov
push
shlb
aad
pop
int
push
fnstsw
xor
adc
stc
dec
pop
push
inc
aam
clc
test
ret
aaa
push
rcl
pop
pop
xchg
test
dec
push
sahf
xchg
xchg
xchg
mov
loop
jne
sub
add
movsb
pop
pop
jg
das
inc
push
lahf
cmp
push
rorl
in
cltd
pop
adc
in
or
inc
das
scas
jo
sbb
or
jbe
int
pop
mov
andb
push
and
xlat
testb
je
dec
xchg
cmp
push
cmp
push
insb
mov
jl
es
movsl
mov
jp
inc
xchg
cmp
sahf
sbb
mov
inc
and
adc
xor
call
dec
aaa
pop
out
mov
fsubrl
and
xchg
rolb
iret
push
scas
sbb
cwtl
dec
xlat
aam
xchg
movsb
test
ror
jge
cmpsl
shll
sbb
push
push
or
inc
pop
push
xlat
jg
adc
sbb
in
mov
psrld
inc
mov
pop
sub
push
ljmp
adc
and
cwtl
rolb
push
pusha
shrl
nop
gs
cld
iret
enter
cmp
repnz
inc
adc
notl
push
pop
push
mov
inc
add
dec
mov
or
in
sti
mov
adc
jl
add
mov
or
fisubrs
adc
adc
jmp
dec
fistps
or
and
roll
sbb
int3
inc
dec
std
iret
push
adcl
aaa
push
adc
jns
mov
pop
mov
mov
xchg
not
sar
dec
cmpsb
cmp
fxam
ljmp
add
lahf
lea
out
xchg
inc
pop
aad
popf
not
test
pop
movb
pop
push
in
and
cmpsl
push
sub
out
pop
dec
daa
shl
test
stos
clc
loope
imul
jns
cmp
add
mov
ja
xchg
pop
pop
aam
ljmp
pop
cld
icebp
or
imul
sbb
mov
mov
ja
in
and
mov
mov
sbb
dec
inc
add
xchg
les
das
xchg
push
test
sub
outsb
mov
push
pop
sbb
bound
adc
pop
outsb
push
inc
out
jno
push
frstor
ret
mov
dec
push
mov
cmp
mov
ds
js
or
xchg
sub
je
out
pusha
shll
mov
inc
pop
jp
cmp
movsl
adc
addl
pop
and
in
les
ja
enter
xchg
ja
fwait
push
js
sub
gs
sbb
mov
pop
mov
enter
repnz
fadd
int
shlb
addb
and
or
cmpsb
xor
frstor
mov
mov
inc
cli
push
je
cs
push
sarb
jg,pn
xor
mov
repnz
and
imul
lds
mov
cmp
clc
inc
pop
mov
xor
inc
lds
push
mov
or
inc
pop
pop
xor
jns
xor
dec
lcall
icebp
rorb
je
mov
hlt
mov
pop
pusha
or
sbb
fcom
ss
mov
mov
iret
sbb
xchg
mov
repnz
mov
stos
les
int3
stc
fnstenv
mov
and
jp
mov
rcrl
sub
in
dec
imulb
stc
shr
movsl
add
and
cmp
sahf
ljmp
fmull
adc
movl
inc
mov
xorl
ret
or
or
add
popa
je
icebp
loopne
and
mov
mov
in
clc
in
fwait
lret
xor
punpckhdq
mov
mov
movl
xchg
test
dec
mov
insl
cld
push
push
idivb
xchg
mov
addr16
sbb
cwtl
aaa
inc
repz
in
jae
jl
fwait
mov
xlat
hlt
arpl
mov
rclb
lock
mov
cltd
dec
push
adc
pop
lds
daa
out
lret
movsl
or
push
jmp
popf
lret
cli
inc
shl
cmc
or
arpl
add
inc
and
sub
aas
dec
push
or
inc
adc
xor
cmpsl
jecxz
cmpsl
xchg
dec
sub
xor
lds
shlb
mov
mov
inc
inc
ljmp
inc
std
scas
xchg
shlb
fildll
pop
dec
aam
sub
inc
rcrb
or
lds
or
mov
ds
aam
add
sahf
mov
cld
jns
mov
dec
sbb
fwait
in
dec
dec
call
jp
inc
pop
dec
mov
mov
jle
cmp
hlt
pusha
rcl
xchg
aad
xchg
xchg
inc
hlt
lret
xchg
jne
cmpsl
pop
loopne
jl
in
dec
lods
test
mov
loop
leave
daa
idivb
ds
fld
aaa
mov
pop
push
mov
subl
dec
and
pop
mov
jns
scas
movsb
adc
xchg
mov
add
pop
out
xlat
ljmp
ljmp
cmp
repnz
and
or
loopne
pop
jl
fstp
xchg
pop
roll
adc
fiadds
enter
pop
push
push
cmpsb
inc
or
ja
jno
iret
mov
adc
jb
adc
mov
bound
jecxz
or
pop
sub
xchg
and
shll
adc
or
rcl
aam
pop
data16
loope
sbb
test
cmp
mov
jo
cmpsl
push
inc
jae
mov
pusha
jecxz
fsubl
xchg
stc
rcrb
data16
in
jge
shlb
rorl
test
jbe
enter
pop
add
sbb
pop
fcoml
add
aad
mov
and
flds
jmp
inc
das
xor
aad
in
push
loop
fwait
into
in
push
jp
test
push
push
sub
mov
aam
sub
cltd
pop
lret
pop
sub
adc
and
xor
js
xchg
dec
mov
fwait
pop
mov
in
lcall
sbb
loop
cmp
jecxz
mov
aam
xor
cmp
mov
idiv
dec
sbb
lcall
btl
jnp
insb
into
testl
jb
mov
push
ucomiss
invd
dec
inc
pop
xlat
mov
in
xchg
push
fstl
cmpsl
jnp
lret
dec
mov
jbe
inc
in
test
cmc
dec
push
fsubrs
loope
addr16
nop
fs
cmpsb
mov
or
mov
rorb
idivl
jns
outsl
jo
xor
ret
notl
xor
pop
rcll
cmp
shll
das
jecxz
pop
cmc
add
mov
mov
fidivrl
sub
xchg
dec
push
out
xor
push
add
and
push
cmp
pop
sub
cwtl
sub
test
xchg
mov
jns
jp
mov
in
int
pop
or
popf
adc
jmp
xor
insl
lods
dec
in
loopne
faddl
pusha
test
pop
sahf
sub
stos
outsb
lahf
push
sub
fistpl
rcr
dec
xor
lret
repnz
ret
push
xchg
rcr
dec
testl
pop
dec
incl
pop
fwait
sbb
rorb
xchg
push
repz
cmp
pop
ss
or
jle
pop
out
sbb
pop
int
jmp
push
out
ret
cmp
or
or
push
mov
mov
cmpsb
adcb
shlb
into
lea
adc
in
imul
push
test
nop
repz
pop
clc
inc
mov
adc
xor
pop
xchg
test
in
stos
pop
pop
dec
sbb
push
mov
cltd
sbb
stos
dec
push
add
jge
pushf
jns
jnp
dec
aad
sub
mov
xor
dec
mov
push
mov
clc
fcomi
pop
movsl
mov
cmp
and
pusha
fiadds
test
out
out
pop
dec
xchg
out
mov
push
cmp
shlb
out
jle
inc
sub
sub
push
les
sbb
scas
es
mov
sub
jle
sub
jmp
sbb
shlb
cmpsl
dec
dec
mov
int3
sub
pop
addl
dec
xor
jbe
scas
pop
xor
pop
in
aad
lahf
pop
pop
cmp
inc
push
gs
adc
out
shrb
in
call
flds
sti
into
pop
jno
adc
pop
test
inc
dec
sbb
dec
ss
mov
ret
sbb
mov
adc
push
rcrb
push
push
pop
pop
les
addb
movsb
pop
mov
dec
repnz
jae
lret
daa
pop
jp
pop
mov
int3
mov
out
pop
movsl
xchg
push
aad
dec
addl
cltd
fisttpl
mov
ljmp
inc
adc
xor
push
add
arpl
push
rclb
aas
xlat
data16
ds
sbb
lahf
jmp
call
push
adc
outsb
movsb
movsb
push
sbb
mov
xchg
imulb
xor
mov
pop
test
pop
int3
push
mov
xchg
ja
cltd
mov
push
xor
inc
mov
aad
pop
and
test
loopne
mov
xor
jns
jns
rcrl
pop
shlb
jns
xor
sti
dec
sub
rclb
mov
aad
not
aaa
or
pop
scas
jecxz
pop
hlt
sbb
cmp
inc
cli
dec
fidivl
jb
cli
jo
jb
pop
xor
rcrl
loop
inc
hlt
jb
dec
adcl
fldenvs
adc
loope
cs
sahf
inc
loop
push
sbb
or
scas
sbb
mov
xchg
pop
xor
pop
scas
cmpsl
je
inc
xchg
in
cmp
or
dec
or
adc
dec
mov
pusha
push
adc
inc
das
lahf
add
loop
sub
pop
je
in
hlt
sti
jo
push
leave
orb
mov
jle
sbb
sub
push
sti
pop
adc
adc
sbb
inc
sub
or
and
or
rclb
xlat
call
pop
push
andl
adc
shlb
int3
sbb
negl
scas
adc
out
test
loope
scas
jle
dec
xor
jb
sub
jnp
mov
cmpsb
jnp
incl
pop
daa
push
movsb
loope
testl
cmp
cli
xchg
test
pusha
sbb
jl
push
shr
push
cmp
pop
jns
jns
lods
sub
sbb
outsl
dec
lock
xchg
push
imul
add
rcrl
in
sub
pop
xor
mov
ds
sbbb
ljmp
cmc
jp
mov
mov
mov
loopne
sub
ss
fisubl
mov
pop
sub
or
sbb
jle
push
sbb
push
mov
orb
sbb
outsb
sarl
jge
adc
pop
fadds
or
mov
fmull
sbb
gs
push
mov
enter
rcrb
cltd
mov
mov
lea
adc
testl
pop
dec
push
mov
dec
ret
jge
sbb
xchg
pushf
push
pop
sbb
mov
nop
mov
rorb
into
jb
pop
mov
xchg
lahf
negl
adc
and
mov
jbe
cli
push
stos
out
popa
jmp
cltd
ret
adc
test
adcb
add
cmpsl
sub
imul
xchg
push
das
inc
inc
movsl
icebp
sbb
pop
jo
or
lods
lret
out
pop
and
out
test
std
int
loope
sub
dec
cld
shll
and
push
dec
cmp
xor
mov
xchg
rolb
push
mov
pop
iret
sbb
mov
mov
sahf
mov
mov
adc
or
inc
out
push
addr16
pop
pop
rorb
xchg
cmp
pop
push
cmp
and
or
and
cmpsb
mov
cmp
hlt
mov
mov
sub
jns
inc
outsb
fisubl
or
mov
mov
lret
lcall
or
stos
adc
inc
roll
and
in
pop
or
stos
sbb
into
push
push
pop
test
jb
mov
out
jo
fsubr
aas
jl
xchg
fidivrl
ret
shr
adcb
ds
jns
pop
pusha
sub
lret
std
sbb
faddl
divl
push
add
add
stos
xchg
add
fisubrl
mov
jb
cmc
mov
movl
icebp
das
inc
aad
mov
jne
mov
je
mov
aas
sbb
cltd
push
cmpsl
sarb
clc
dec
icebp
inc
xlat
not
jo
dec
sub
jns
aam
out
and
dec
cmc
xchg
jo
inc
int
scas
pop
xlat
jae
push
dec
out
jbe
pop
or
rolb
or
mov
std
dec
arpl
pop
test
cmp
jecxz
xorb
inc
rol
xor
test
mov
jo
mov
out
sub
pop
cwtl
xchg
mov
stc
pop
push
sub
adc
cli
sbb
lret
inc
mov
and
jmp
push
jae
rorb
test
out
add
inc
pop
mov
push
and
dec
sbb
adcl
xchg
movsl
dec
lea
xor
and
fs
xchg
lods
push
mov
mov
mov
mov
pop
les
mov
and
int
mov
fnsave
mov
minps
cld
outsl
pop
scas
out
lea
mov
inc
add
mov
sbb
test
stos
pop
inc
dec
in
dec
cmp
shrl
in
pop
cli
jbe
add
out
je
call
out
sub
mov
jg
jmp
jae
inc
cwtl
cmp
xlat
sub
aas
ja
push
mov
fstp
dec
pop
and
sti
dec
cmp
sarl
scas
pop
into
pop
rorb
push
mov
pop
push
inc
aad
pushf
testl
rcr
sbb
test
pop
xor
xor
inc
pop
mov
test
lds
jbe
adc
popa
pop
xor
shlb
dec
add
mov
cs
test
push
pusha
jle
test
pop
xor
stos
arpl
or
pop
mov
dec
dec
xchg
and
lods
jbe
push
jo
sbbb
lods
inc
sbb
imul
xor
pushf
xchg
xchg
jg
dec
int3
daa
inc
fcomps
lahf
fucomp
lods
pop
jmp
xor
pop
xchg
fwait
or
push
and
negl
insb
sub
dec
std
jecxz
lods
cmp
jg
in
mov
cltd
ror
dec
xchg
or
mov
pop
mov
jmp
cmpsl
fimuls
cltd
mov
push
lret
mov
sub
cwtl
loopne
mov
ja
aad
jne
xchg
shlb
into
rep
in
fmuls
push
and
jnp
add
insb
or
je
lcall
aas
push
mov
cmp
icebp
push
add
dec
lcall
stc
es
sub
mov
pop
or
stos
jl
xlat
jbe
xor
test
jae
mov
inc
sub
pop
push
cmpb
jnp
testl
cmp
adc
jo
push
lods
pop
popl
ds
ds
add
cmp
mov
inc
xor
sbb
pushf
xchg
push
and
cmpb
dec
jnp
stos
xchg
mov
jno
pop
mov
lahf
outsl
sub
je
ss
pop
adc
push
rcrl
call
arpl
xchg
and
stc
in
xchg
mov
decl
inc
and
pop
or
notb
gs
jnp
mov
or
insl
jo
pop
in
mov
pop
in
pop
push
stc
sbb
dec
loopne
outsb
pop
inc
stc
push
xchg
jb
mov
rcll
icebp
cmp
inc
and
jmp
inc
int
rol
mov
dec
loopne
nop
mov
inc
sbb
inc
inc
add
adc
xchg
es
inc
or
mov
add
xlat
and
jnp
lods
mov
repnz
sarb
ret
pop
mov
fcmovnu
lods
pop
mov
sbb
sub
mov
push
push
xorb
inc
sub
jnp
push
add
mov
mov
mov
push
inc
mov
les
pop
pop
out
outsb
pop
pusha
daa
cmpsb
xchg
jo
pop
mov
pop
es
roll
leave
mov
imul
push
paddsb
adc
fcomps
sbb
daa
xchg
dec
repnz
pop
movsb
inc
or
rorl
adcl
movsb
lret
out
jmp
cwtl
fucomi
pop
cmpb
sbb
sti
mull
jb
mov
pop
mov
adc
jl
jmp
jle
leave
movsl
push
mov
pop
clc
mov
xchg
and
push
nop
pop
inc
shlb
mov
pop
inc
in
push
lea
test
push
or
outsb
mov
js
add
sarb
push
mov
repz
fs
pop
fdivs
cmp
and
sub
jmp
xchg
xor
push
xchg
sub
mov
clc
out
stos
shlb
popa
negl
mov
cli
jecxz
lret
xchg
cmpb
dec
adc
or
cmp
inc
pusha
cmc
and
ds
jl
jmp
les
test
push
leave
jb
clc
jnp
jno
or
pop
popf
push
add
inc
push
pop
inc
pop
mov
adc
pop
cmp
mov
pop
mov
out
or
stos
rcrb
cmp
imul
cltd
je
and
mov
enter
push
pop
xchg
mov
or
inc
test
add
sbbb
sub
and
xchg
jb
mov
cmp
xor
push
inc
pop
inc
das
je
dec
dec
stos
adc
inc
popa
add
mov
outsl
lcall
bound
movsb
cmp
adc
adc
xor
sbb
jg
inc
cmpsb
cld
lea
inc
push
scas
jb
jmp
add
lds
cmc
jno
pop
jp
cmp
sbb
mov
fdivl
cmpsl
pop
insb
push
jl
push
test
cmp
mul
xor
mov
jle
cmp
icebp
rclb
adc
mov
cmpsb
adc
dec
or
rcl
stos
cwtl
push
or
ss
jae
sub
and
scas
sbb
mov
push
push
sub
lock
ret
ljmp
xor
in
push
pop
xor
inc
push
pop
or
repz
sbb
jb
jne
jne
mov
dec
mov
dec
sbb
inc
inc
out
lock
nop
adc
sbb
xchg
test
pop
xor
pop
in
test
rcrl
ljmp
push
aam
xor
mov
shll
stos
inc
xor
loop
lea
cmc
jno
fsub
push
adc
inc
xchg
sub
xchg
or
add
xchg
cmpsl
or
movsb
xor
sbbb
pop
jge
imull
add
sbb
jnp
add
inc
aad
insl
out
es
xorb
sub
cmp
and
sti
pop
mov
out
pop
lock
nop
int
sub
push
xor
and
in
loopne
sbb
cmp
cmp
push
imul
out
cmp
pop
jmp
adc
mov
mov
jae
aaa
pop
inc
adc
lds
lods
xor
adc
and
pusha
mov
mov
push
bound
cltd
sarl
ds
jg
cld
dec
push
std
jae
inc
inc
and
int3
push
inc
mov
nop
or
mov
out
pop
xchg
shlb
inc
push
mov
jo
push
cld
pop
imul
cmpb
mov
mov
push
popa
rcll
scas
jecxz
jecxz
lret
xor
push
movsl
mov
mov
mov
js
sub
push
shrl
sahf
mov
stos
fdiv
dec
xorb
dec
pop
sbb
outsb
pop
mov
push
dec
rorb
ss
negb
mov
insl
adc
jns
adc
insb
dec
push
cltd
loop
push
xor
nop
push
cltd
imul
into
stos
cmpsl
shl
test
lret
mov
mov
pop
cmpsb
fwait
sti
mov
add
dec
cld
ret
lock
pop
psrld
imul
sbb
out
repnz
or
leave
push
aas
push
ja
idivb
xchg
sub
cli
lock
pop
nop
dec
or
push
add
lcall
fidivrl
stc
cmpsl
out
fwait
sub
dec
faddl
loopne
xchg
jb
insb
mov
mov
lcall
mov
rorb
jecxz
mov
repz
and
xor
mov
push
loope
jmp
pop
jle
daa
into
inc
cmp
xchg
mov
dec
dec
dec
dec
xchg
test
mov
std
jg
dec
pcmpeqd
or
dec
repnz
jg
insl
sbb
adc
out
gs
flds
xchg
jecxz
sarb
add
ljmp
sahf
cmpsl
int3
arpl
add
imul
fsub
sbb
cmp
outsb
addr16
aas
orl
or
mov
xchg
fistps
les
push
push
mov
cmpsb
repnz
fnstcw
push
lcall
pop
in
pop
inc
mov
pusha
dec
sub
mov
sub
lcall
lcall
fcmovu
std
mov
pop
mov
js
xchg
ja
rorl
out
fdivr
lret
adc
notl
or
pop
leave
pop
lret
fs
daa
mov
mov
xor
mov
jg
fsubrl
jnp
xor
int
xor
cld
push
lds
cltd
cli
pop
xchg
in
pop
loop
xchg
pop
lcall
lods
je
outsb
adc
add
fldcw
and
pop
repnz
push
xchg
push
mov
mov
mov
add
ss
stos
mov
add
dec
push
out
sub
push
add
mov
in
lahf
in
cli
inc
pop
jge
sbb
xchg
es
es
push
scas
adcl
jge
test
lahf
icebp
mov
or
lret
or
inc
mov
testb
sbb
xor
jecxz
dec
sub
pop
push
or
sti
jmp
pop
cmp
xchg
push
mov
test
lcall
les
data16
sbb
jge
in
dec
inc
fsubl
and
negb
loope
jecxz
fnstsw
dec
cmp
and
test
inc
push
push
pushf
push
cmp
mov
cmc
sub
jecxz
std
sub
iret
mov
pop
push
jo
xchg
xor
dec
rcrb
ja
sbbb
mov
in
leave
cmp
bound
movsb
sub
shrb
ret
inc
sub
lea
sub
lea
xchg
mov
push
pop
dec
cmp
mov
pop
jne
inc
ljmp
clc
sbb
jmp
inc
pop
sub
jne
xor
imul
cltd
repz
frstor
mov
in
dec
hlt
jno
sub
pop
addb
pop
data16
test
jnp
jg
adc
or
push
aad
aad
dec
mov
jmp
adc
adc
test
test
inc
stc
xchg
jl
jae
jne
in
xchg
and
cmpsb
xor
arpl
adc
xor
in
sbb
ret
mov
pop
push
mov
push
xchg
pop
xor
insb
fildl
lds
cmp
jb
jle
mov
scas
xlat
dec
insb
inc
sbb
outsb
and
adc
mov
and
fcmovne
lret
cwtl
fildl
dec
xor
ss
mov
cltd
mov
jg
pop
cwtl
mov
add
test
je
push
repz
jp
ss
out
enter
rorb
rcl
std
imulb
xchg
dec
out
aad
sbb
adc
and
test
cmp
lock
push
cli
mov
into
dec
lods
and
repnz
cmp
pop
or
and
lcall
test
jae
dec
jle
insl
les
sub
iret
and
mov
das
adc
inc
movsb
decb
imul
mov
dec
lret
sbb
je
scas
pop
cmp
mov
jmp
mov
dec
and
imul
mov
push
pop
movsl
adc
push
clc
int3
jle
ret
aad
mov
adc
pop
imul
and
adc
les
ds
lret
mov
fcmovnbe
and
arpl
mov
sbb
push
pop
cmp
outsl
or
test
repz
or
xchg
mov
icebp
xor
scas
adc
shlb
pop
jbe
xchg
fnstsw
xor
mov
stos
fstpl
cli
lods
inc
rorb
outsb
add
stos
push
and
stc
xorl
lds
or
mov
inc
mov
cmp
pop
in
and
popf
push
lock
pushf
shlb
aaa
push
orl
pop
mov
daa
and
jns
shll
jnp
dec
push
lcall
rol
bnd
push
rclb
bound
incb
call
addr16
pop
aad
dec
and
int3
cltd
sbb
inc
ljmp
in
int
xchg
repz
and
xchg
mov
fninit
jne
add
mov
aaa
stos
cld
fnsave
jo
in
shl
mov
sbb
pop
add
mov
gs
imul
test
pop
adc
or
or
mov
dec
sub
push
inc
push
out
cli
shll
dec
cwtl
shrb
or
sub
sbb
enter
mov
add
imul
jle
ja
inc
jg
jno
or
cmpl
fists
or
sahf
test
pop
push
pop
outsb
int
test
lods
int
pop
cld
sub
fcoms
dec
inc
pop
loopne
mov
dec
shrb
adc
movsb
pop
cmpb
jge
jl
in
cmp
mov
dec
pminub
pop
push
sub
and
mov
mov
pop
push
faddl
jne
sbbl
cmp
imul
pop
push
xchg
mov
mov
out
cltd
loope
sbb
push
int
stos
cmp
js
mov
outsb
out
xor
bound
aaa
inc
pop
push
mov
add
stos
sbb
lds
jns
xor
aas
inc
adcl
adc
xchg
stos
leave
sbb
and
rcr
je
out
insl
lea
sub
rorb
jae
insb
xor
xchg
dec
pop
mov
incb
mov
fisttpll
xor
and
mov
aam
add
pop
push
push
adc
daa
inc
iret
in
outsl
pop
jg
gs
in
pushf
rcll
xchg
xor
call
mov
jl
jge
ror
inc
mov
cld
jge
in
push
dec
sbb
jp
insl
or
and
jp
jo
xchg
test
fstps
enter
jg
or
fsubl
mov
cmpsl
inc
pop
and
inc
dec
inc
clc
fdivrl
push
lret
or
insl
push
in
call
shll
loopne
push
pop
add
xchg
adc
iret
push
or
loope
sti
ror
ja
jge
cmp
jne
cmpsb
test
dec
repz
pop
sub
sar
aad
mov
pop
push
cli
nop
pop
cmp
ror
or
or
fmulp
adc
dec
jp
test
ror
push
roll
in
mov
jp
xchg
and
xchg
icebp
jb
push
lahf
pop
dec
jbe
sub
sub
dec
jo
push
mov
mov
xor
mov
test
sub
notl
adcb
repnz
mov
cli
js
xor
sub
imul
jmp
aas
mov
inc
outsb
push
test
stc
pop
insl
xchg
sahf
pop
rcrl
paddb
icebp
mov
pop
and
mov
pop
xchg
je
jle
inc
js
dec
and
stc
ljmp
sbb
rcrb
mov
jg
sbb
inc
cld
out
adc
push
and
aas
and
ficoml
mov
mov
ret
in
and
dec
jb
outsb
mov
pop
in
inc
pushf
push
bnd
inc
out
orl
cltd
dec
mov
push
dec
rcr
push
mov
roll
jl
pop
mov
fstps
cmp
loope
cmpsb
mov
xor
aaa
test
inc
subl
in
shrl
mov
dec
push
mov
xchg
pop
in
push
jp,pn
pop
movsl
push
xlat
jecxz
es
inc
ror
add
mov
data16
lret
pop
add
iret
pop
stc
and
cmpl
mov
adc
fidivs
loop
adc
cmpsl
jg
in
adc
inc
mov
xor
ljmp
cli
dec
fstps
loopne
xor
lock
lds
pop
push
repnz
push
sub
insb
inc
fisubrl
test
arpl
push
xchg
shl
mov
pushf
mov
xchg
adc
jp
jo
ret
pushf
push
movsl
xor
fnstenv
pop
jo
ret
pushf
adc
mov
ret
mov
lret
adc
push
fnstcw
rorb
add
dec
insb
rcrb
inc
xchg
rcll
sub
fldenv
mov
pop
mov
or
sti
nop
jecxz
popa
push
pop
lds
mov
mov
or
dec
pop
fnop
out
lret
jne
ds
xlat
jno
cwtl
pop
and
faddl
pop
sub
pushf
push
rolb
mov
stc
sub
fdivrl
fistl
push
pop
jg
inc
sbb
mov
add
dec
scas
xchg
xchg
mov
divb
jg
add
dec
mov
int3
aad
shl
mov
adc
xchg
pop
adc
into
andps
int
cmp
cmp
sti
dec
ljmp
adc
out
stc
test
or
std
dec
and
mov
inc
lret
sbbb
xchg
mov
in
pop
pop
sbb
enter
popa
dec
jle
int
xor
int3
orl
nopl
imul
gs
cmp
cs
loop
and
pop
mov
cmpl
outsl
dec
mov
pop
scas
inc
cmp
enter
fs
or
out
fsubr
insb
gs
pop
lahf
push
cld
addr16
and
jno
sbb
push
sub
push
pminsw
insl
int
std
lret
fcomps
cmpsb
add
dec
mov
leave
adc
inc
or
fbstp
cli
dec
subl
adc
sar
sbb
addr16
fnstsw
fsts
out
int
mov
inc
ja
call
test
inc
aad
in
ljmp
sbbl
xchg
jecxz
rcl
jae
fstps
pushf
jg
test
rolb
das
sub
je
dec
lret
add
pop
add
cmp
lret
addr16
inc
dec
xchg
outsl
mov
enter
mov
push
dec
inc
push
mov
scas
and
ret
pop
rorl
icebp
mov
pop
cld
in
jl
fcomps
lea
and
loop
out
pop
xor
inc
imul
pop
cmp
mov
out
hlt
mov
mov
arpl
rcl
adc
mov
pop
mov
dec
mov
push
push
sub
inc
mov
roll
jge
aad
icebp
lret
xchg
mov
add
mov
jle
xchg
sub
pop
sub
cltd
test
test
pop
push
dec
sbb
imul
hlt
push
hlt
xchg
mov
xchg
stc
popa
xchg
popa
pop
sub
jg
out
ret
dec
das
xchg
mov
mov
cmp
cwtl
adc
pushf
popf
mov
icebp
push
fbstp
cmpsb
aad
pop
xchg
jb
out
xchg
pop
xlat
movsl
insb
aad
popa
push
pop
inc
dec
cmp
enter
push
dec
xor
mov
mov
mov
dec
popa
lret
or
notb
jle
ja
leave
dec
dec
adc
cmp
shlb
jmp
pusha
pop
sub
pop
pop
arpl
into
dec
or
js
pop
inc
test
dec
push
and
enter
pop
inc
fmuls
pusha
pop
xor
test
jno
mov
stos
xchg
frstor
dec
or
daa
jg
shlb
test
sbb
jle
orb
popf
lret
fnstsw
push
xchg
jo
adc
or
dec
shl
out
jg
sub
into
rorb
sbb
shlb
push
sarl
imul
pop
insl
pop
pop
push
sub
cmp
dec
pop
jb
idiv
dec
pop
mov
loope
xor
jbe
xor
dec
xlat
mov
js
ficoms
in
adc
mov
jae
dec
pop
jne
mov
and
in
daa
repnz
add
insl
scas
add
sub
cmpsb
dec
and
cli
xchg
imul
mov
push
jns
fnstsw
mov
xchg
dec
sub
sbb
notb
shrb
imul
sahf
dec
fsubrp
repnz
mov
adc
aas
push
sub
rcrl
xchg
pusha
pop
xchg
in
pop
or
push
sub
xchg
pop
cs
aam
mov
xchg
hlt
aad
cmc
mov
fnstsw
cmpsb
js
mov
shlb
sbb
rcr
pop
push
cmp
lods
xor
enter
dec
ret
lods
insb
pop
dec
rorl
mov
popf
mov
and
xor
dec
or
scas
jge
sub
int
cmp
popf
sbb
and
dec
pop
inc
sti
jns
xor
rol
sbb
imul
mov
pop
pop
xor
outsl
adc
push
fs
ds
arpl
adc
pop
jecxz
dec
mov
dec
mov
hlt
imul
lret
adc
mov
and
cld
mov
lcall
data16
aaa
inc
scas
mov
hlt
pop
daa
test
dec
into
fldcw
xchg
sub
dec
mov
rcll
mov
arpl
mov
mov
stc
fnstsw
fnsave
mov
adc
jnp,pt
inc
and
js
leave
andl
push
pop
mov
fsubrp
cli
fs
dec
test
mov
inc
test
inc
mov
inc
mov
xor
in
pop
mov
fdivrs
cmp
dec
mov
inc
or
les
outsb
call
es
fcompl
jbe
fistps
loope
scas
outsb
sbb
cmp
cmp
insl
popf
add
mov
test
lds
js
shrb
cmpl
pop
push
push
in
inc
ret
jecxz
lods
lret
fs
and
leave
dec
dec
jmp
sarl
aad
bound
cmpsb
pop
push
clc
scas
mov
adc
sbb
or
adc
xchg
pop
fcoml
daa
neg
inc
ja
popf
insb
cltd
pop
rcrb
dec
dec
out
es
xchg
div
icebp
pop
push
mov
imul
fisttpll
add
xchg
xor
mov
lret
dec
xor
dec
cmp
dec
fstpt
jno
mov
mov
out
andb
mov
cmp
mov
mov
shrl
jno
jbe
mov
mov
je
or
shl
xchg
adc
mov
pop
lcall
pop
inc
or
ja
pusha
sbb
push
out
gs
mov
loopne
pop
dec
rcr
cmp
xchg
sti
sub
cmpsb
jo
mov
pop
addb
xchg
push
pop
inc
add
pop
xchg
mov
and
rorl
or
mov
jo
xor
rcrl
push
jbe
xchg
scas
inc
pop
nop
xchg
aam
icebp
fmul
sub
mov
mov
mov
mov
negb
sub
and
mov
popa
fs
stos
ss
shl
pop
add
xchg
aam
pop
popf
mov
lahf
pop
or
sbb
push
repz
stc
push
pop
jg
das
mov
outsl
mov
cmp
sbb
inc
adcb
out
sbb
pop
insl
arpl
add
xor
sbb
and
stos
add
mov
mov
imul
adc
inc
aam
iret
pop
add
pop
xorb
imul
xchg
and
jp
sub
jmp
rcr
pop
mov
sub
inc
jl
subl
stos
pop
gs
mov
push
sbb
daa
inc
div
dec
and
dec
mov
pop
sub
insb
or
xchg
ja
imul
test
fnop
cmp
mov
sbb
push
mov
aas
pop
sbb
out
sbb
sbb
dec
nop
cld
jecxz
sbb
pop
dec
push
xchg
iret
cltd
dec
lahf
dec
pop
das
enter
mov
popf
or
fldenv
in
jo
dec
incb
mov
or
pop
shlb
lods
testb
jg
mov
sahf
mov
xchg
cltd
push
lea
mov
scas
dec
jae
mov
sarb
jl
sbb
ja
pop
cmp
jmp
clc
sti
mov
pop
and
scas
push
sbb
ret
call
int3
mov
dec
aas
jo
push
jle
mov
movsl
cld
or
push
rolb
aad
shlb
test
pop
outsl
inc
scas
xchg
out
lods
or
fdivl
sbb
sbb
rolb
xchg
in
arpl
dec
mov
pop
add
dec
dec
sbb
sbb
mov
cmc
gs
mov
mov
fwait
repz
pusha
outsb
dec
cmp
frstor
mov
loop
mov
dec
and
out
jns
mov
data16
xor
ret
shl
pop
divl
test
push
mov
pop
cmp
add
and
nop
dec
ret
pusha
mov
rolb
mov
loope
mov
sbb
cmp
pop
push
mov
mov
mov
je
xlat
ret
shrb
flds
fdivrs
cmpsl
inc
pop
jge
inc
in
push
and
inc
jne
and
or
mov
scas
addr16
or
dec
add
xor
dec
lret
jmp
sbb
pushf
sarb
cld
sbb
xchg
aam
and
insl
aam
xchg
push
scas
outsb
fwait
rcrb
enter
sti
sbb
fs
outsl
fsubs
int3
pop
psubusw
rorb
fidivs
in
rclb
enter
stos
out
xor
xor
pop
mov
es
push
pop
insb
push
cmpsb
rol
mov
gs
scas
fs
fldcw
jmp
pop
mov
inc
imul
inc
test
dec
mov
adc
dec
jle
adc
out
jne
test
mov
dec
jo
fdivrs
ret
cmp
push
push
fcomps
jnp
pop
jecxz
sbb
inc
shl
lcall
movsl
mov
pop
jp
xchg
push
jo
shlb
inc
xchg
insb
mov
fyl2x
mov
xchg
add
je,pt
sub
fcmovne
pop
xchg
jmp
inc
mov
fldenv
adc
pop
lock
js
pop
cmp
movsl
gs
and
mov
push
ret
insl
xor
jmp
inc
shl
cmp
sbb
lock
repz
and
lret
mov
mov
dec
xor
leave
mov
and
pop
dec
add
mov
inc
outsb
adc
popa
mov
rcrl
popf
dec
pop
push
dec
cmc
add
out
insl
mov
mov
mov
dec
jmp
mov
inc
or
ffreep
push
dec
pop
movsb
xlat
rcrl
sbb
fwait
cmp
aad
xchg
mov
cmc
int
mov
in
push
in
fcmovnu
lret
xchg
and
rcr
cltd
das
jne
lahf
pop
jmp
call
push
out
dec
test
fstpt
pop
xchg
jle
frstor
xchg
sub
inc
xchg
sti
mov
rclb
bound
xchg
xchg
push
popa
adc
mov
mov
lea
add
or
mov
mov
mov
lret
lret
cltd
pop
or
sub
pop
int3
test
scas
fwait
inc
inc
lods
pop
xchg
fmuls
in
adc
cwtl
adc
dec
push
jns
and
clc
addr16
outsb
lret
int
lods
outsl
stos
sti
jecxz
dec
scas
mov
add
push
mov
sub
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
call
push
push
call
add
push
call
add
push
cmp
jne
test
je
push
push
push
call
add
push
push
call
add
push
call
add
call
push
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
call
xor
push
push
call
add
mov
mov
push
push
push
push
call
add
push
push
push
push
push
call
add
call
push
push
call
add
push
push
push
push
push
call
add
call
push
push
push
push
call
add
sub
cmp
je
mov
push
push
push
push
push
call
add
cmp
je
push
push
push
call
add
and
push
call
add
xor
push
push
push
call
add
mov
sub
call
sub
add
cmp
je
mov
push
push
call
add
xor
cmp
je
sub
mov
cmp
je
push
push
push
call
add
cmp
je
sub
push
push
push
push
push
call
add
add
sub
push
call
add
call
push
push
push
call
add
or
mov
sub
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
cmp
jne
test
je
call
cmp
jne
push
push
push
call
add
cmp
je
or
call
push
push
push
call
add
call
sub
mov
push
push
call
add
or
mov
cmp
jne
push
push
push
call
add
add
push
push
push
push
push
call
add
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
push
call
add
or
push
push
push
push
call
add
mov
add
push
push
push
push
call
add
sub
xor
mov
cmp
jne
push
push
push
push
push
call
add
push
call
add
push
push
call
add
cmp
jne
push
call
add
push
push
call
add
mov
add
add
xor
mov
sub
sub
sub
test
jne
mov
cmp
je
mov
or
cmp
jne
add
add
add
mov
mov
sub
mov
mov
mov
and
sub
cmp
jne
mov
add
add
mov
and
add
sub
add
add
add
and
sub
or
and
add
cmp
je
and
mov
cmp
je
mov
add
add
sub
test
je
cmp
jne
mov
mov
cmp
jne
add
sub
mov
mov
cmp
jne
sub
cmp
je
xor
cmp
jne
mov
sub
cmp
je
sub
add
test
je
add
test
jne
mov
mov
add
sub
sub
mov
cmp
je
cmp
jne
sub
mov
cmp
je
cmp
je
cmp
jne
mov
xor
add
add
sub
mov
add
sub
sub
add
and
add
mov
sub
sub
add
add
and
mov
or
sub
sub
sub
and
or
mov
add
sub
add
sub
or
mov
mov
add
cmp
jne
add
and
and
cmp
je
add
mov
cmp
jne
mov
add
add
mov
sub
add
sub
add
mov
mov
mov
sub
and
cmp
jne
sub
and
mov
and
mov
sub
sub
sub
mov
and
sub
test
je
mov
sub
mov
cmp
je
add
mov
and
cmp
je
and
xor
cmp
jne
mov
cmp
jne
xor
mov
add
add
sub
cmp
je
cmp
jne
xor
add
mov
test
jne
and
cmp
je
mov
cmp
je
sub
or
add
cmp
je
mov
sub
mov
mov
cmp
jne
mov
cmp
jne
add
sub
add
add
add
or
add
mov
mov
add
sub
mov
sub
mov
add
sub
test
je
mov
cmp
je
mov
mov
sub
xor
sub
sub
mov
xor
mov
sub
add
cmp
jne
mov
mov
add
add
add
sub
push
push
push
call
add
push
push
push
call
add
call
sub
call
call
add
and
mov
mov
push
push
push
push
push
call
add
push
push
push
push
call
add
push
call
mov
push
push
push
push
push
call
add
sub
call
call
xor
mov
add
push
call
add
xor
sub
push
push
call
add
push
push
call
add
mov
push
push
push
push
call
add
add
add
sub
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
sub
cmp
je
mov
push
push
push
push
push
call
add
add
push
push
push
push
call
add
sub
push
push
push
call
add
push
push
push
push
call
add
mov
call
push
push
call
add
add
mov
push
push
call
add
push
push
push
call
add
call
sub
push
call
add
mov
test
je
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
call
add
add
push
call
add
push
push
push
push
push
call
add
push
push
call
add
push
call
add
mov
or
push
call
add
add
mov
push
push
push
call
add
and
mov
mov
mov
cmp
jne
call
push
push
push
call
add
sub
push
push
call
add
and
push
push
call
add
xor
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
mov
push
push
push
push
call
add
push
push
push
call
add
push
push
call
add
call
add
add
or
cmp
jne
sub
push
call
add
mov
mov
cmp
jne
push
call
add
xor
mov
call
mov
push
push
push
push
push
call
add
add
sub
push
call
add
push
push
push
push
call
add
call
and
mov
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
mov
push
push
call
add
push
push
call
add
cmp
jne
push
push
call
add
add
lea
add
mov
add
xor
add
sub
or
and
sub
add
sub
cmp
je
cmp
jne
mov
mov
sub
cmp
je
sub
sub
mov
cmp
je
test
jne
xor
or
sub
push
push
call
add
push
push
call
add
push
mov
mov
push
push
call
add
sub
push
call
add
call
sub
test
je
push
push
push
push
push
call
add
push
push
push
push
push
call
add
sub
sub
call
add
call
mov
mov
push
push
push
push
push
call
add
add
push
push
push
push
push
call
add
push
push
call
add
cmp
jne
cmp
jne
mov
push
push
push
push
call
add
test
je
and
xor
sub
sub
mov
or
push
push
push
push
call
add
shr
call
push
push
call
add
cmp
jne
xor
add
call
push
call
add
sub
push
push
push
call
add
call
call
push
push
push
push
push
call
add
push
push
push
call
add
and
push
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
sub
push
push
push
push
push
call
add
call
push
push
call
add
add
mov
add
sub
cmp
je
add
sub
mov
cmp
jne
mov
sub
sub
mov
sub
sub
sub
call
mov
cmp
jne
mov
cmp
je
mov
sub
test
jne
mov
mov
sub
sub
test
je
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
add
mov
mov
cmp
jne
cmp
jne
or
mov
sub
sub
test
je
sub
cmp
jne
cmp
je
cmp
je
mov
mov
or
add
test
jne
and
mov
sub
mov
add
sub
add
sub
sub
mov
push
push
push
call
add
mov
xor
pushl
push
pushl
call
mov
add
push
push
push
push
call
add
addl
mov
push
call
add
and
and
test
jne
push
call
add
cmp
jne
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
mov
push
push
push
call
add
cmp
jne
add
mov
push
push
push
push
call
add
push
push
call
add
call
call
push
call
add
mov
mov
push
push
push
push
push
call
add
or
call
cmp
je
mov
push
call
add
mov
push
push
push
push
call
add
sub
cmp
je
mov
mov
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
or
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
sub
call
mov
push
push
push
call
add
call
push
push
push
call
add
push
call
add
push
push
push
call
add
push
push
push
push
call
add
call
pop
push
push
push
call
add
pop
push
call
add
pop
push
push
call
add
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
sub
push
push
push
call
add
push
push
push
push
push
call
add
push
add
mov
push
push
push
call
add
push
push
push
push
push
push
call
add
push
mov
add
sub
push
push
push
push
push
call
add
call
push
call
add
push
push
push
push
push
call
add
cmp
je
push
call
add
mov
sub
sub
mov
movl
push
push
call
add
call
sub
mov
call
call
cmp
je
and
cmp
jne
mov
cmp
je
mov
add
sub
cmp
jne
mov
add
add
cmp
jne
mov
sub
test
je
mov
mov
test
jne
mov
add
or
cmp
je
mov
or
mov
cmp
je
test
je
cmp
je
xor
mov
cmp
je
cmp
jne
mov
mov
cmp
jne
and
cmp
je
cmp
jne
cmp
jne
sub
add
mov
mov
sub
and
sub
mov
sub
and
add
or
add
mov
mov
sub
call
mov
sub
mov
call
push
push
push
push
call
add
mov
cmp
je
mov
mov
and
mov
sub
add
test
jne
cmp
jne
mov
or
add
mov
sub
cmp
jne
mov
sub
mov
add
add
sub
sub
or
sub
and
or
and
test
je
mov
xor
mov
sub
add
sub
mov
and
add
cmp
je
cmp
je
test
jne
mov
sub
test
jne
cmp
jne
sub
sub
mov
mov
cmp
jne
cmp
je
sub
mov
mov
add
add
cmp
jne
add
xor
cmp
jne
add
mov
sub
sub
sub
xor
xor
mov
test
je
mov
or
sub
mov
cmp
je
cmp
je
mov
cmp
jne
mov
or
mov
sub
xor
add
sub
add
and
cmp
je
add
add
or
cmp
je
push
push
push
push
push
call
add
mov
add
cmp
jne
cmp
je
sub
add
mov
mov
sub
mov
sub
add
add
cmp
je
sub
mov
or
xor
sub
cmp
jne
mov
cmp
je
sub
sub
cmp
jne
mov
sub
sub
xor
cmp
je
cmp
jne
add
sub
xor
add
mov
add
and
sub
add
add
cmp
je
mov
sub
add
and
cmp
je
cmp
je
sub
mov
mov
sub
sub
add
or
push
call
sub
mov
mov
sub
cmp
je
mov
sub
add
add
mov
add
sub
cmp
jne
mov
cmp
je
mov
add
cmp
je
cmp
jne
mov
cmp
je
mov
and
mov
mov
cmp
jne
sub
cmp
jne
mov
or
je
mov
mov
cmp
jne
sub
mov
or
or
addl
add
lea
mov
xor
xor
add
add
add
inc
mov
and
mov
cmp
je
add
add
and
mov
mov
add
test
jne
add
and
sub
and
add
mov
cmp
je
mov
add
cmp
jne
cmp
je
mov
sub
xor
cmp
je
add
cmp
jne
sub
add
add
sub
mov
add
and
add
cmp
jne
mov
mov
sub
or
mov
push
push
call
add
push
push
push
push
push
call
add
sub
mov
xor
push
push
push
call
add
push
push
call
add
sub
push
call
add
push
push
call
add
mov
push
push
push
push
call
add
push
call
add
mov
push
push
push
push
push
call
add
push
push
push
call
add
mov
add
mov
add
xor
push
call
add
sub
cmp
jne
cmp
je
push
push
push
call
add
cmp
jne
and
push
push
push
push
push
call
add
add
push
push
push
push
call
add
sub
push
call
add
pop
cmp
jne
push
push
push
call
add
pop
test
jne
add
push
push
push
push
call
add
pop
mov
push
push
push
push
push
call
add
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
mov
push
push
push
push
push
call
add
push
push
push
push
call
add
push
xor
mov
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
mov
push
xor
push
push
push
call
add
mov
push
push
call
add
rdtsc
add
or
mov
mov
sub
add
cmp
je
mov
sub
xor
add
sub
or
add
sub
cmp
jne
mov
cmp
je
xor
cmp
je
sub
mov
mov
or
cmp
jne
or
cmp
je
mov
sub
or
mov
add
mov
sub
sub
and
pop
mov
mov
cmp
je
mov
add
sub
sub
or
xor
sub
or
sub
sub
sub
cmp
jne
mov
mov
sub
sub
sub
or
cmp
je
or
cmp
jne
add
mov
cmp
jne
add
mov
add
test
jne
mov
and
mov
add
sub
test
je
mov
add
sub
mov
cmp
je
sub
cmp
je
mov
mov
and
sub
and
sub
pop
sub
pop
sub
xor
add
test
je
cmp
jne
sub
sub
mov
and
add
sub
cmp
je
add
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
push
call
add
push
mov
push
push
push
push
push
call
add
push
mov
push
push
push
push
push
call
add
call
mov
mov
sub
mov
cmp
jne
mov
cmp
je
mov
cmp
je
mov
xor
and
add
test
jne
sub
add
xor
cmp
je
sub
sub
sub
and
and
xor
mov
sub
add
add
add
sub
cmp
je
mov
decl
sub
xor
sub
addl
mov
add
mov
add
sub
add
cmp
je
and
add
cmp
jne
mov
mov
and
xor
add
add
and
test
je
cmp
jne
cmp
je
add
mov
mov
sub
cmp
je
add
sub
negl
sub
xorl
mov
add
add
add
or
jmp
mov
sub
call
xor
test
jne
push
push
push
push
push
call
add
pop
push
push
push
push
push
call
add
pop
push
call
add
pop
sub
push
push
push
push
call
add
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
push
push
call
add
push
mov
push
push
push
push
call
add
push
add
push
call
add
push
push
push
push
push
push
call
add
call
push
push
push
call
add
push
push
push
call
add
mov
mov
push
push
push
push
call
add
push
push
push
push
call
add
xor
sub
test
jne
call
mov
push
push
push
push
push
call
add
cmp
je
cmp
jne
xor
push
push
push
push
call
add
push
push
push
push
call
add
mov
push
push
push
push
call
add
add
push
push
push
call
add
cmp
jne
test
je
push
push
push
push
push
call
add
push
push
push
call
add
add
push
call
add
sub
and
call
push
push
call
add
mov
mov
mov
add
cmp
jne
mov
test
jne
mov
sub
and
mov
or
sub
sub
test
je
sub
sub
add
add
push
call
push
push
call
add
push
push
push
push
call
add
push
call
push
push
push
call
add
mov
xor
sub
and
sub
and
add
sub
or
call
add
mov
push
call
add
push
call
add
mov
push
call
add
add
mov
sub
push
call
add
push
push
push
push
call
add
sub
add
push
push
push
push
call
add
push
push
push
call
add
sub
call
push
push
call
add
push
call
add
push
push
push
call
add
sub
call
mov
push
call
add
push
push
call
add
mov
mov
sub
push
call
add
push
call
add
push
call
add
mov
push
push
push
call
add
call
mov
sub
mov
mov
sub
add
mov
add
add
or
je
test
je
cmp
je
mov
add
and
mov
add
cmp
jne
mov
sub
sub
and
add
sub
add
repnz
push
push
push
call
add
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
mov
push
push
push
push
call
add
cmp
je
cmp
jne
sub
sub
mov
push
push
push
call
add
mov
mov
push
push
push
call
add
push
push
push
push
push
call
add
cmp
je
mov
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
and
call
addl
push
push
push
push
call
add
push
call
add
jmp
mov
mov
mov
push
push
push
push
push
call
add
xor
sub
mov
and
xor
mov
sub
cmp
je
xor
xor
sub
sub
add
and
mov
pop
mov
mov
cmp
jne
cmp
jne
mov
mov
add
cmp
jne
mov
add
and
sub
mov
sub
and
mov
pop
xor
mov
add
add
add
sub
add
or
add
cmp
je
add
pop
cmp
jne
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
call
add
push
add
push
call
add
push
call
add
push
push
push
call
add
call
push
push
call
add
push
push
push
call
add
mov
push
call
add
push
push
push
push
call
add
mov
push
push
call
add
push
call
add
call
push
push
push
call
add
mov
push
call
add
push
push
push
push
call
add
pop
mov
add
cmp
jne
cmp
jne
sub
add
pop
add
pop
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
push
push
push
push
call
add
push
push
call
add
push
mov
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
mov
push
call
add
and
call
push
push
push
call
add
push
push
push
push
call
add
and
sub
push
push
push
push
call
add
add
pop
cmp
jne
push
push
push
push
push
call
add
push
push
push
push
push
call
add
pop
xor
push
call
add
pop
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
push
push
push
call
add
push
push
call
add
push
push
push
push
push
push
call
add
push
push
push
push
push
push
call
add
push
cmp
je
push
push
push
push
call
add
push
push
push
push
call
add
mov
mov
push
push
push
push
call
add
call
push
push
push
call
add
cmp
jne
call
push
push
push
push
push
call
add
pop
push
push
push
push
call
add
pop
sub
push
push
push
push
push
call
add
pop
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
push
call
add
push
test
jne
mov
call
push
push
call
add
push
push
push
push
call
add
push
cmp
je
push
call
add
push
push
push
call
add
add
cmp
jne
mov
add
sub
push
call
add
push
call
add
push
call
add
pop
push
push
push
push
push
call
add
pop
mov
push
push
push
push
call
add
pop
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
sub
mov
push
mov
mov
add
add
sub
add
push
sub
push
mov
mov
add
add
cmp
jne
sub
sub
sub
or
cmp
jne
mov
sub
sub
sub
and
add
sub
sub
sub
sub
pop
add
add
cmp
jne
add
cmp
je
mov
mov
sub
add
xor
pop
cmp
jne
mov
mov
mov
or
add
cmp
jne
sub
sub
pop
xor
sub
sub
mov
cmp
jne
sub
mov
sub
add
cmp
jne
test
je
cmp
jne
mov
and
cmp
jne
and
or
mov
and
cmp
je
sub
cmp
je
and
mov
mov
or
test
jne
add
mov
add
mov
or
cmp
jne
add
mov
cmp
jne
and
mov
sub
add
and
sub
xor
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
push
mov
or
cmp
je
add
mov
mov
add
add
sub
push
test
je
mov
cmp
jne
or
and
xor
push
sub
mov
mov
add
sub
mov
or
mov
sub
sub
or
test
jne
add
cmp
je
mov
mov
cmp
jne
add
xor
add
mov
mov
and
sub
sub
pop
mov
cmp
jne
add
cmp
jne
xor
mov
or
add
or
cmp
jne
mov
mov
sub
cmp
je
mov
sub
add
sub
mov
sub
cmp
jne
mov
add
add
mov
sub
add
sub
add
sub
and
add
mov
pop
cmp
je
sub
pop
mov
mov
cmp
je
cmp
je
mov
cmp
jne
cmp
jne
test
jne
sub
xor
mov
cmp
je
sub
mov
sub
add
sub
cmp
je
mov
mov
sub
add
cmp
je
mov
cmp
je
sub
mov
sub
cmp
jne
add
sub
mov
add
sub
add
sub
mov
sub
and
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
add
sub
add
sub
and
sub
mov
or
push
add
push
sub
mov
sub
cmp
je
mov
mov
mov
xor
cmp
jne
and
mov
xor
add
add
sub
test
je
mov
xor
sub
add
sub
mov
and
sub
add
add
cmp
je
cmp
jne
mov
test
jne
xor
mov
add
sub
cmp
je
sub
test
jne
mov
mov
and
cmp
je
sub
mov
sub
cmp
je
sub
push
sub
mov
sub
sub
or
or
or
add
test
je
cmp
je
mov
mov
sub
cmp
jne
mov
sub
sub
mov
sub
or
add
sub
add
add
sub
sub
cmp
je
sub
mov
cmp
jne
mov
mov
add
test
je
cmp
je
mov
sub
sub
test
je
mov
mov
mov
or
or
cmp
jne
cmp
jne
mov
add
mov
cmp
jne
add
mov
test
je
cmp
je
or
mov
add
mov
and
add
cmp
jne
cmp
je
sub
add
mov
xor
sub
cmp
je
add
or
cmp
je
mov
mov
cmp
je
add
cmp
je
and
xor
sub
add
add
and
sub
sub
test
jne
mov
sub
mov
mov
cmp
je
mov
sub
mov
xor
and
cmp
je
mov
mov
or
add
sub
cmp
jne
and
add
pop
cmp
je
cmp
jne
mov
mov
add
cmp
jne
mov
and
mov
add
add
sub
mov
or
add
and
and
cmp
jne
mov
sub
pop
cmp
je
and
cmp
je
xor
sub
mov
mov
xor
and
add
or
sub
cmp
je
mov
cmp
je
mov
xor
xor
add
or
sub
cmp
je
mov
or
add
or
pop
mov
mov
sub
add
add
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
add
mov
mov
push
and
push
mov
mov
add
sub
sub
push
and
sub
cmp
je
xor
and
sub
add
or
test
jne
mov
xor
sub
add
add
sub
sub
add
mov
sub
pop
mov
cmp
jne
mov
cmp
je
mov
mov
add
sub
add
sub
add
sub
cmp
je
add
mov
mov
cmp
je
mov
test
jne
or
add
cmp
je
mov
sub
add
mov
mov
test
jne
add
cmp
je
cmp
jne
mov
mov
add
cmp
je
cmp
je
mov
xor
or
cmp
je
xor
add
cmp
jne
sub
mov
mov
add
cmp
je
and
mov
sub
mov
sub
add
add
sub
sub
cmp
je
mov
add
cmp
jne
sub
mov
cmp
je
cmp
jne
add
add
cmp
jne
add
mov
sub
sub
pop
add
sub
cmp
je
add
pop
mov
sub
mov
xor
add
and
cmp
je
mov
mov
sub
sub
cmp
jne
mov
sub
mov
add
sub
and
sub
sub
sub
sub
leave
ret
