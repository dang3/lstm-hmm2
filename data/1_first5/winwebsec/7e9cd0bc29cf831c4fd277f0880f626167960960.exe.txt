mov
adc
leave
mov
push
xor
bound
das
push
jg
inc
aam
mov
fiadds
push
push
sub
pop
mov
sbb
in
cmp
fildll
cmp
cltd
mov
adc
cld
mov
sbb
jno
imul
popa
pop
arpl
mov
dec
inc
jnp
lret
push
pushf
out
mov
cltd
sub
adc
aam
cwtl
ficoml
inc
cmc
inc
das
pop
push
insb
je
nop
xor
xor
mov
cld
fdivl
lock
mov
and
int3
sub
jno
mov
xchg
mov
int3
mov
xor
pop
mov
lcall
mov
leave
fnstcw
xor
mov
cmp
test
xor
mov
push
sbbb
lcall
pusha
ja
cmp
fcomp
xor
mov
mov
dec
hlt
inc
pop
cmpsb
mov
xchg
rol
or
gs
sub
movsb
xchg
jmp
popa
cmp
lahf
fwait
loop
insb
inc
xlat
pop
jecxz
push
insl
hlt
cmp
cmc
test
in
shrb
cs
ljmp
outsb
push
mov
mov
cwtl
aad
enter
call
insl
arpl
test
jno
lods
sbb
jge
pop
in
cmp
jle
in
stos
leave
cmp
shll
das
movsl
popl
xchg
mov
enter
push
jl
sub
and
fldl
xchg
jl
les
adc
and
mov
push
adcl
stos
sub
bound
add
negb
rclb
push
and
mov
fists
sbb
lea
js
fists
lods
jge
into
cmpsl
clc
push
sub
loopne
dec
daa
dec
lcall
inc
dec
call
iret
fistps
xchg
movsb
aas
mov
xchg
stc
inc
scas
fiadds
in
mov
loope
sbb
xor
popf
daa
flds
fistpl
sub
xor
ficomps
jb
pop
sub
xor
sahf
mov
cmp
mov
idiv
lret
sbb
cmp
int
add
add
sub
xchg
sub
gs
fcmovne
rcll
testb
loope
lods
enter
pop
cltd
inc
mov
pop
push
jb
scas
jno
aas
or
mov
mov
dec
out
paddsb
xor
mov
cmp
cmp
and
sahf
mov
popf
mov
lret
rclb
scas
add
cmpsb
mov
mov
ficoml
cmp
jle
dec
shlb
push
movl
fisubs
lret
andl
push
stos
cmc
push
and
ja
xchg
push
push
cli
loope
pop
loop
das
fisubs
pop
jl
negl
mov
cltd
adc
in
or
adc
mov
not
and
pop
scas
mov
pop
xor
divl
arpl
inc
data16
xchg
xchg
xchg
xlat
cmp
jmp
loope
pop
cmpsb
fisubrs
imul
sub
xor
pavgw
sub
subl
fdivrp
loop
int3
imul
mov
jae
push
pop
pop
ja
in
xor
roll
enter
mov
or
xor
aam
cmp
cmp
fcomps
cmp
xchg
push
push
popa
rolb
shlb
call
mov
jmp
jecxz
cmpsl
out
cmp
pop
shrb
and
adc
dec
shlb
adc
aas
pusha
sub
mov
xor
mov
dec
addb
rclb
jmp
iret
scas
push
xchg
call
xchg
and
scas
mov
ds
js
cltd
cmp
sti
fisttpl
dec
mov
fwait
adc
jp
loop
sbb
dec
loope
jecxz
jg
pop
sub
les
jecxz
cmpsb
pop
push
sbb
push
mov
sub
in
ficoms
mov
mov
fwait
xchg
sub
and
lcall
lock
xlat
sbb
or
out
add
add
out
add
xor
imul
adc
ds
cld
adc
or
cmp
inc
das
iret
repnz
in
adc
jnp
cmpsl
into
test
mov
loopne
popf
arpl
sub
dec
inc
pushf
xchg
out
aas
mov
add
xchg
adc
mov
ds
and
xor
out
mov
inc
sub
adc
popa
bound
movsb
mov
lret
stos
mov
adc
lret
add
into
inc
add
cwtl
int
stos
mov
incl
shlb
mov
fcmovb
mov
sbb
xchg
push
dec
popf
loopne
xor
adc
push
mov
pop
dec
pushf
mov
mov
mov
sub
dec
out
mov
test
xlat
adc
mov
dec
js
out
lret
lock
sub
adc
fcompl
pop
enter
mov
push
scas
sub
cwtl
hlt
push
outsl
jb
xor
pop
cmp
mov
or
sub
xor
adc
push
sti
loop
xor
adc
flds
pop
setl
or
cmp
mov
adc
jecxz
add
xadd
and
lods
add
out
inc
pop
lock
xchg
int3
nop
cmp
add
test
inc
pop
test
movb
repnz
test
cmpsl
idivl
inc
cld
insl
mov
and
cmp
loope
stos
jb
cmp
aam
sarl
mov
scas
insl
out
dec
mov
call
call
mov
xor
mov
mov
sbb
jno
push
sbb
mov
inc
mov
fwait
pop
test
int3
cmpb
push
and
decl
inc
jmp
adc
lahf
stos
mov
jns
outsb
mov
out
test
in
or
pop
add
xchg
mov
jmp
xor
xor
and
xor
pop
cltd
inc
push
cmp
dec
unpcklps
dec
push
inc
fdivp
adc
push
in
pop
aas
add
pop
or
xorl
test
sub
mov
fdivrs
enter
mov
dec
aam
shl
and
mov
or
add
pop
adc
ret
loopne
pusha
test
pop
xchg
push
cmc
xchg
xchg
or
mov
cmp
mov
aad
jae
inc
test
pop
addl
movsb
sub
sub
ds
xchg
mov
push
dec
aad
jl
sti
mov
and
lea
stc
outsb
test
sbb
pushf
arpl
and
dec
es
ss
inc
dec
inc
jg
pop
leave
outsb
xor
adc
pop
xorb
add
or
scas
loope
dec
lock
jae
cwtl
and
adc
push
and
sti
aaa
imul
les
dec
dec
xchg
lret
mov
movsl
and
inc
lock
fs
mov
sub
fisttps
arpl
mov
mov
pushf
xchg
mov
popf
mov
inc
jae
fisttps
jl
sbb
outsb
xor
mov
mov
dec
push
sub
ja
pop
lods
mov
push
mov
fsubs
jnp
lods
push
js
js
dec
gs
adc
arpl
out
nopl
and
bound
ljmp
sbb
jge
nop
xor
mov
out
mov
jmp
lcall
in
je,pt
iret
and
inc
push
or
mov
adc
jbe
mov
sbb
shll
movlps
inc
or
ret
js
push
mov
mov
add
mov
mov
pop
pop
out
sbb
les
and
aaa
orl
fidivrs
loope
rcrb
inc
cmp
wrmsr
loop
pop
daa
rorb
or
xchg
push
cwtl
das
push
sub
mov
sahf
jns
out
inc
sub
sbb
mov
fcom
iret
sbb
jl
pop
rclb
rcll
xor
nop
push
mov
xlat
add
mov
arpl
mov
mov
movsl
inc
push
jp
je
stos
mov
and
sti
mov
inc
movsb
imul
sub
aad
leave
mov
push
mov
lahf
xchg
ljmp
add
mov
push
aam
sbb
pop
cmpsb
mulb
push
es
scas
mov
cmpsb
stos
mov
adc
out
sub
mov
lret
adc
shll
jnp
vphaddbq
scas
inc
repnz
bswap
xor
in
dec
inc
mov
repz
lret
sbb
xchg
push
xor
mov
incl
cltd
jg
sub
dec
mulb
cltd
adc
fsubrl
loop
inc
mov
and
or
jge
mov
mov
cwtl
inc
dec
mov
mov
jmp
pop
testl
or
pop
pushf
mov
cltd
or
iret
xchg
les
pop
dec
xchg
addr16
cmpsb
cltd
cld
push
lods
stos
mov
mov
jl
loope
decl
stos
inc
sbb
cli
arpl
loope
int
xor
pop
pop
loop
outsb
push
push
sbb
stos
or
mov
pop
lret
mov
outsl
push
xor
adc
and
popa
into
sbb
rcr
test
adc
loope
in
fldt
aam
in
sti
popf
out
in
jbe
push
lret
aad
sbb
push
jo
adc
test
inc
sbb
xchg
aas
or
aaa
xchg
dec
xor
mov
or
pop
or
mov
in
sub
movsb
jge
pop
or
or
dec
out
loopne
sbb
push
and
pop
and
popa
repz
cmp
mov
movsb
add
divb
aas
mov
cmp
push
bsf
mov
adc
inc
repz
inc
jbe
and
test
xor
adc
adc
repz
int3
shlb
ljmp
sub
sub
out
roll
jge
fmull
pop
clc
stc
jmp
out
push
mov
scas
sub
out
inc
add
les
fiaddl
aaa
orb
add
xchg
push
or
jne
repz
ficomps
cmp
or
ja
sarl
rclb
out
cld
and
and
jnp
mov
mov
xor
jno
inc
or
adc
leave
pusha
sub
popf
imulb
std
inc
aaa
jge
lock
push
rcrb
aas
test
test
jg
std
dec
add
shl
dec
sub
shld
ret
jp
test
mov
das
mov
out
inc
mov
push
icebp
cmp
jge
mov
sbbb
add
aas
xchg
lcall
rol
testb
std
test
cmp
xchg
in
int3
in
jge
ljmp
jae
sub
mov
or
jmp
sub
xor
cmp
or
test
mov
lret
dec
mov
add
add
testl
inc
aad
movsb
mov
addr16
cltd
int3
pop
and
ds
mov
mov
in
jns
rolb
pop
mov
mov
loop
scas
bnd
push
lods
and
xchg
in
insl
push
sahf
aas
bound
ljmp
testl
inc
nop
inc
ficoms
add
push
inc
mov
movsl
cmp
cmp
std
xchg
pushf
add
jp
andl
jb
es
mov
pushf
cltd
shrl
jnp
push
xchg
xchg
cmp
push
jge
jge
ss
push
pop
mov
mov
cmp
mov
mov
hlt
xchg
outsl
mov
jno
xchg
mov
in
push
pop
xor
or
mov
insb
inc
in
js
push
ret
outsl
icebp
mov
xor
push
icebp
das
fstpl
xchg
pop
stos
push
clc
push
xor
mov
fisttps
push
pop
call
xchg
mov
daa
popf
mov
pop
repnz
cltd
xchg
lea
sub
sub
mov
lret
dec
xlat
test
out
jl
insl
push
outsl
pop
loop
cs
xchg
xor
inc
scas
cli
mov
lret
pop
cmp
sbb
xchg
push
sbb
xlat
les
hlt
arpl
mov
push
jge
cmp
aam
mov
jmp
adc
fstpt
sahf
adc
hlt
mov
mov
ficoml
mov
push
mov
stc
xchg
pop
mov
out
push
adc
popf
mov
repnz
mov
stos
in
mov
sbb
jnp
sar
push
pop
jge
mov
and
dec
jnp
add
mov
stc
je
and
mov
scas
cmc
lcall
cmpsb
pop
ret
in
sti
push
mov
outsl
fucomi
lock
sbb
mov
daa
or
lds
shlb
rcr
push
aad
int3
in
or
mov
jae
cmpsb
js
sub
xor
call
dec
push
fdivs
js
leave
mov
insb
mov
test
jb
xchg
dec
jge
push
dec
idiv
sub
call
xorl
xor
adc
clc
xchg
mov
orb
addb
pop
jb
xchg
outsb
sub
jne
sarb
lods
adc
orb
jp
push
popa
inc
iret
lahf
mov
dec
stc
sbb
or
mov
mov
mov
out
and
xor
mov
call
scas
enter
inc
lret
mov
jbe
mov
leave
push
pusha
and
sbb
sbb
lods
adc
fwait
shlb
insl
inc
int3
insl
imul
aas
in
mov
call
ss
data16
iret
push
mov
lahf
and
push
je
pusha
or
add
fucomp
mov
int3
mov
inc
outsl
mov
pop
lods
mov
adc
mov
sub
jae
repnz
dec
pop
test
aad
xchg
aad
sarl
push
cld
inc
inc
insl
cs
adcl
jb
lock
fidivrs
incb
pop
xchg
dec
stc
dec
hlt
xchg
mov
imul
orl
xor
xor
lods
push
push
pop
das
stos
adc
daa
adc
lods
xor
sbb
cmp
movsb
pop
ret
pop
and
jnp
or
shrl
jle
xor
or
xor
xor
cmpl
cmc
mov
xor
cli
movsb
sub
xchg
into
insl
ficoml
xchg
lock
shll
sbb
cmp
mov
pop
add
sub
sub
mov
mov
pop
sub
dec
insb
add
or
lea
out
mov
pop
data16
or
pop
dec
fistl
addr16
fisubrl
and
jbe
lock
push
movsb
mov
mov
or
leave
popf
dec
call
je
sti
cmpsb
incl
mov
xchg
jbe
imul
ss
jno
insb
jbe
jle
dec
mov
rcrb
cmp
xchg
faddl
add
xor
cmovb
add
cmc
or
jo
mov
out
inc
idivb
pop
mov
xor
jnp
xor
jmp
mov
adc
je
sub
add
shl
xor
sbbl
fiadds
xchg
pushf
in
or
add
popf
mov
fs
dec
test
dec
outsl
jecxz
dec
in
movsl
jae
adc
mov
jnp
pop
pop
jae
inc
loope
jnp
mov
pop
dec
hlt
dec
roll
js
inc
xor
push
sbb
sbb
mov
popf
hlt
push
sar
sbb
mov
stc
mov
movsb
cwtl
data16
data16
mov
adc
jns
mov
and
add
ret
push
enter
push
sub
loopne
ja
xchg
pop
inc
sub
int3
aas
icebp
push
adc
adc
inc
mov
iret
insb
sub
xchg
pushf
dec
xor
or
mov
xlat
int
fsub
or
fadds
lcall
lahf
outsb
call
xchg
std
pop
jl
jge
pushf
outsb
aas
and
mov
mov
pop
icebp
pop
in
dec
inc
cmp
repz
fwait
lahf
arpl
pop
pop
or
fisubs
jae
jge
lahf
sub
cmc
adc
call
pop
das
or
cmp
pop
outsb
std
or
xchg
arpl
icebp
mov
jmp
xor
sbb
jle
imul
outsb
adc
pop
push
adc
dec
hlt
jb
add
rcr
jge
push
or
fidivrl
into
fwait
iret
int
mov
push
jle
xor
cmp
dec
in
outsl
xchg
out
mov
jmp
insb
mov
jne
and
std
aaa
loop
or
mov
in
cmpsl
mov
inc
jmp
es
pop
xor
test
xchg
xchg
sub
pop
and
imul
mov
or
idivb
mov
sub
mov
movsl
sub
fisttpl
pop
sbb
in
in
mov
fcmovnu
popa
ja
pop
ret
adc
test
jmp
pop
sub
xchg
mov
jmp
dec
mov
icebp
mov
push
pusha
inc
into
lret
popa
add
mov
shr
or
mov
lret
andl
mov
cmp
loopne
es
sbb
xor
fdivl
loopne
cld
mov
aad
popa
repz
sub
and
inc
push
push
nop
mov
push
jle
dec
ret
xchg
adc
pop
cmp
bound
mov
out
adc
pop
cwtl
adc
add
outsb
and
inc
jno
pop
or
adc
shrl
add
sarb
mov
fistpl
lea
lods
ja
out
das
lods
adc
mov
mov
xorl
dec
jne
jno
test
inc
addr16
dec
xor
lock
sti
sbb
or
test
add
jmp
out
mulb
sub
add
int3
push
out
mov
adc
mov
sbb
mov
jg
cmpsl
mov
xchg
or
mov
jae
sbb
cmp
xchg
mov
aas
out
data16
cmp
clc
sub
ss
pop
out
dec
cmp
test
rcll
push
scas
das
js
or
mov
xor
addb
cmpsl
push
lahf
push
cld
xlat
mull
hlt
shll
mov
fdivr
psubusb
out
outsl
jb
pop
dec
in
rclb
cmp
xchg
in
dec
cli
mov
orb
xlat
imul
mov
xlat
mov
dec
jecxz
dec
adc
cmc
sbb
mov
sub
aad
pop
iret
rclb
arpl
inc
adc
or
aad
mov
je
xchg
pop
insb
lods
out
mov
lods
arpl
pop
xor
jno
imul
add
cli
xor
adc
xorb
iret
fstp
loop
jl
inc
cmp
insb
test
mov
neg
mov
adc
xchg
incl
inc
dec
ljmp
int
rcl
jp
sbb
or
pop
cmc
fldt
mov
rcrb
mov
imul
push
out
add
sub
jne
cmpsb
bound
scas
mov
icebp
rcll
or
xchg
sub
in
lret
stos
adc
or
jns
test
push
ret
ror
jp
pop
pop
and
lcall
pop
fists
lcall
mov
adc
dec
cmp
mov
add
mov
inc
int3
sbb
test
dec
lock
and
sar
sbb
je
push
inc
test
out
movsl
ret
out
push
insl
push
fwait
test
shl
daa
lret
adc
jae
inc
outsb
imul
stos
pmullw
pop
xor
adc
push
jae
pusha
jmp
xchg
lods
xchg
cmp
stc
xchg
sarb
cmp
mov
inc
rorl
add
int
inc
mov
std
push
or
int
or
cld
jo
push
inc
push
imul
cld
mov
test
add
fwait
or
pop
orl
js
scas
divb
flds
ja
dec
sbb
xlat
jbe
fnstsw
fs
add
jmp
js
in
xor
movsb
push
or
cmc
mov
aas
sbb
mov
lret
scas
dec
sbb
jnp
sbb
js
jg
dec
fimuls
mov
sub
stc
std
stos
rcr
stc
push
pop
repnz
inc
jecxz
cmp
nop
adc
cwtl
icebp
out
lea
add
push
mov
js
mov
cmpsl
and
mov
xchg
add
les
jns
mov
test
popf
das
push
aad
xor
inc
add
jo
or
jne
adc
popa
xchg
fadd
iret
loopne
pop
fdiv
bnd
sub
add
inc
sbb
popf
iret
sbb
pop
sahf
xor
dec
ja
outsl
js
inc
movsb
cmpsb
sbb
movsb
out
xchg
hlt
testb
push
ja
iret
out
mov
push
subb
clc
and
adc
pop
repz
sub
add
mov
pop
adc
sti
xchg
icebp
xchg
push
aad
dec
sarl
fdiv
xor
xchg
cmp
fidivrs
xchg
outsb
adc
sti
cwtl
repz
pop
dec
mov
xchg
popf
sbb
repz
sub
ljmp
or
pop
lea
sbb
aam
sub
inc
mov
cmp
int
nop
xchg
int3
enter
push
pop
aad
js
pop
push
insb
pop
ds
xchg
lock
jl
or
xchg
cmp
lahf
adc
ss
add
sbb
sti
iret
aam
jb
mov
out
rcr
sub
sbb
dec
ret
mov
cmpsl
dec
pop
call
movsl
dec
fwait
enter
dec
adc
mov
cli
lods
sbb
add
push
inc
xor
jns
mov
xchg
aam
pop
dec
xchg
sbb
xchg
bound
jbe
inc
in
sub
dec
sub
cmp
push
mov
push
jp
popa
aam
add
xorl
mov
xor
jbe
mov
xchg
push
das
imul
ret
sub
fbld
and
dec
xchg
repnz
jecxz
cmp
repnz
negb
ret
scas
ret
pop
adcb
inc
add
je
and
hlt
xchg
jl
in
xchg
push
cmp
or
cmp
mov
ss
pop
das
mov
sbb
pop
adc
xchg
adc
and
adc
push
mov
pop
int3
iret
mov
adc
neg
and
sub
lahf
jmp
nop
lcall
call
sbb
data16
mov
das
jp
test
ljmp
cld
in
pop
ds
pop
pop
jl
cmpsb
mov
jp
add
jle
cli
sub
arpl
lret
mov
cwtl
cmp
gs
bswap
mov
inc
nop
pop
or
scas
jl
mov
rolb
fs
loopne
rclb
mov
sbb
sub
mov
or
ret
jo
repnz
mov
sub
pop
or
xchg
mov
xchg
mov
mov
sti
xchg
pop
ror
mov
lea
int3
sbbl
adc
rcrl
add
incb
mov
xor
leave
subl
out
cmp
aad
add
inc
xor
aad
or
jno
push
jno
mov
insb
mov
imul
push
test
or
push
icebp
dec
add
fmuls
push
dec
les
dec
or
push
adc
lcall
xchg
fsubrp
sub
aas
iret
push
inc
stc
iret
mov
out
movl
imul
mov
sub
push
mov
dec
mov
shrl
repz
push
orb
pop
add
mov
stc
dec
imul
mov
sbb
cwtl
cmp
ljmp
and
loop
push
jbe
add
bts
push
jnp
scas
shrb
mov
mov
mov
cmpsb
ljmp
insl
mov
je
repz
push
jl
sahf
stos
and
pop
jnp
mov
out
mov
pop
test
cmp
loopne
mov
test
outsb
loop
addr16
or
movsl
cmc
add
adc
cld
mov
push
fs
scas
push
cmp
push
inc
shrl
ds
jo
mov
rorl
xchg
jl
mov
push
push
xchg
cmp
dec
loopne
or
mov
xor
push
pop
lret
xor
dec
pop
icebp
call
adc
fadd
xlat
je
idivl
or
xchg
clc
dec
je
cld
mov
xchg
lds
add
dec
mov
mov
sbb
xor
popa
xchg
pop
sub
mov
mov
outsb
pop
aam
fidivrs
fmuls
sbb
inc
cld
mov
add
sgdtl
or
addr16
adc
mov
or
enter
inc
and
test
push
or
mov
jno
or
into
push
in
int3
outsb
xor
or
cmp
sub
inc
adc
push
mov
mov
cs
sbb
sbb
xchg
filds
cmpsl
mov
mov
daa
out
in
sub
repnz
and
push
inc
dec
jg
rolb
adc
mov
sbb
jae
xor
mov
push
test
push
ja
scas
movsl
cmp
xchg
mov
xor
lret
mov
mov
enter
loope
iret
inc
imul
sti
inc
movsb
xchg
xrstors
pop
in
push
jecxz
push
test
in
dec
rolb
popa
je
pusha
in
popf
iret
lds
sbb
lret
and
lret
push
inc
rolb
jno
mov
push
sub
out
mov
xor
or
popf
and
call
jmp
int
xlat
dec
add
xor
sbb
cmove
and
dec
inc
call
rcll
add
nop
std
cmp
and
push
pop
mov
aad
dec
inc
mov
inc
mov
std
xchg
sub
cld
cmp
shlb
sub
adc
push
out
cmpsl
cli
sbb
push
lea
mov
jge
pop
mov
jle
iret
mov
leave
add
cmpl
push
sbb
cmp
imul
mov
mov
arpl
adc
adc
stc
dec
and
enter
pop
enter
jmp
sbb
cmp
add
ret
adc
mov
adc
jl
icebp
je
inc
stos
stos
mov
mov
dec
int3
sbb
fsubs
adc
pop
addb
sbb
lock
subb
shl
pop
in
mov
ss
and
sbb
aad
orl
int
jo
lods
inc
pop
xor
sbb
scas
jmp
dec
sub
sub
dec
loope
cmp
dec
sub
jmp
mov
inc
mov
loope
jne
rcrl
test
outsl
pop
xchg
pop
sbb
repnz
decb
les
and
into
dec
jb
std
sub
xor
xor
outsb
div
jmp
sbb
stos
js
rolb
adc
lahf
ss
aad
leave
sbb
ss
fwait
inc
fsubp
movsb
cmp
ret
cwtl
mov
jmp
les
mov
inc
xchg
fisttps
pop
loop
js
add
in
lea
ljmp
add
dec
mov
notl
or
sub
add
jbe
xor
or
int3
mov
ja
adc
adc
mov
into
dec
pop
adc
jge
rolb
scas
scas
enter
stos
int3
xchg
sbb
imul
xor
mov
jge
xchg
sub
add
sbb
call
notb
push
fdivs
dec
std
lret
lock
lcall
cs
cmp
mov
adc
aam
jae
enter
rclb
push
pop
cmpsl
les
mov
push
lret
les
js
out
imul
lret
add
enter
mov
cmc
js
xchg
inc
mov
inc
mov
and
xor
inc
xchg
cmpsb
cmpsb
mov
push
lea
cmpsl
lods
jecxz
dec
or
aas
push
sahf
pmuludq
xchg
popa
pop
shlb
push
or
sarb
enter
repnz
int3
lea
es
jb
cmp
sub
mov
add
mov
inc
push
mov
push
xchg
addr16
fsubrl
mov
inc
test
stos
aas
icebp
ss
dec
mov
mov
movsb
loop
fcoml
lret
mov
outsl
and
adc
aam
test
cmpsl
or
add
ret
shlb
bound
mov
lock
add
mov
and
enter
or
inc
inc
cltd
rorb
orl
xchg
lock
or
ret
dec
out
outsl
sbb
popa
aas
js
mov
loope
stc
add
in
adc
push
movsl
test
lcall
mov
xor
enter
and
sub
cwtl
cld
jl
sub
fcmovu
mov
sub
js
loopne
cltd
repnz
dec
dec
ss
adc
test
addr16
jae
repz
orl
pop
push
pushf
sti
daa
adc
add
inc
fwait
or
push
jecxz
jbe
push
mov
xchg
push
stos
cmpsb
lods
xchg
cmpsb
mov
inc
sub
or
pop
and
sub
sti
mull
inc
imul
jp
data16
pop
in
hlt
addr16
clc
push
or
aam
cmpb
movsb
popa
mov
adc
push
sub
movsl
or
or
je
imul
movsb
shl
ret
je
gs
lock
cwtl
iret
jle
fs
pop
pusha
pop
cmp
mov
dec
sub
and
rcl
fstps
adc
leave
push
pop
popa
pusha
jae
aam
insb
ret
cmp
ret
pop
and
lea
sbb
push
adc
mov
push
inc
gs
fsubrp
mov
dec
or
les
cmp
stos
dec
test
xchg
shl
lods
add
mov
int3
cmc
xor
and
bound
mov
mov
xchg
jp,pn
outsl
push
mov
rcll
movsl
mov
test
pop
insb
shlb
rol
mov
loopne
filds
in
je,pt
rorl
sub
fdivs
inc
add
mov
xlat
leave
data16
jg
lods
loope
jle
repnz
xor
adc
add
sub
orl
imul
ja
jp
inc
sub
jg
out
mov
es
pop
pusha
mov
cmp
mov
dec
sbb
inc
mov
jmp
mov
enter
cmpsl
dec
cmovle
out
sbb
imulb
sub
mov
stos
loopne
fdivl
nopl
lret
sub
mov
test
push
stc
rcl
add
clc
mov
fsubp
mov
inc
mov
stos
pusha
sub
push
push
inc
or
mov
xor
gs
popf
mov
xlat
aad
xchg
mov
mov
out
inc
imul
lahf
pop
popf
fldl2t
fimuls
imulb
mov
sbb
hlt
mov
les
cmp
aas
jns
cs
pop
shlb
imul
sbb
or
shll
arpl
mov
in
adc
movsb
rorl
xor
cmp
testb
movsl
insl
mov
or
cli
mov
jge
aam
xchg
xchg
mov
int3
pusha
out
sbb
nop
and
sar
sub
mulb
hlt
xchg
mov
mov
mov
shll
pusha
loope
xor
push
stos
jo
push
jle
push
inc
jbe
mov
movsl
lahf
lret
xor
in
sbb
cs
ja
pushf
fucomp
enter
dec
mov
call
fsubrp
fs
pop
pmaxub
es
adc
xor
repz
ret
mov
clc
and
fsubl
pop
xor
shr
pushf
movsl
and
scas
rcrl
cmp
or
fcoms
mov
mov
or
cld
aad
jbe
lahf
stos
in
fwait
movsl
add
jl
push
pop
scas
add
ror
sbb
lcall
addr16
ficompl
lds
cmpsl
test
adc
mov
lahf
lcall
mov
test
mov
xor
iret
imul
push
xchg
pop
pusha
cmpsl
cmpsb
mov
inc
lahf
fdiv
push
dec
movsb
push
or
push
push
cmc
sti
mov
adc
xlat
mov
subb
xor
lods
cmp
or
int3
pop
lea
sub
mov
cmp
xchg
mov
decb
dec
notb
add
jns
test
pop
fdivrs
jno
jl
xor
sub
mov
imul
fcompl
mulb
dec
add
xchg
fsubrl
gs
scas
jecxz,pn
lea
mov
aaa
cmp
push
out
sbb
in
enter
sub
clc
xchg
push
xchg
xchg
repz
fsubl
int3
cli
push
pop
pop
daa
aam
dec
sbb
aam
xchg
ljmp
imul
gs
int
js
cltd
aam
dec
ret
hlt
nop
out
in
subb
pop
ret
adc
mov
xorl
popf
bt
mov
jb
mov
decl
jecxz
mov
jne
shll
sub
xlat
rcll
push
inc
cmp
mov
clc
ret
mov
je
push
push
lea
pop
jp
jb
leave
sub
sbb
jns
out
pop
fmul
pop
and
jg
lahf
aas
movsl
sbb
out
pop
lods
pop
mov
mov
jle
lock
mov
lods
iret
mov
dec
push
push
add
xchg
sbb
mov
jno
loope
cmpsl
test
out
push
insb
inc
cwtl
xchg
leave
ret
jns
cmp
rcr
or
jmp
mov
adc
dec
ss
fisubs
inc
enter
cmp
jmp
jb
sub
adc
mov
insb
pop
pushf
jae
test
cmpsb
mov
insl
pop
push
sarl
repz
fiadds
jae
ret
pop
shrb
and
pop
dec
movsb
and
push
adc
push
clc
fimuls
aam
lret
sahf
mov
es
cmp
mov
inc
out
xchg
xor
in
dec
sub
pop
push
inc
jne
mov
data16
aam
jns
ficoms
inc
call
jp
mov
mov
out
inc
and
xor
pop
cmp
outsl
arpl
jmp
insb
aad
shl
inc
mov
jp
xlat
outsb
or
inc
mov
or
inc
cmpsb
les
outsl
pop
add
in
daa
adc
int3
in
pop
jb
mov
push
xchg
out
cmc
and
test
mov
sub
icebp
push
shl
cltd
push
xor
stc
jp
jo
movsb
aaa
mov
and
pop
and
out
pop
inc
sbb
adc
mov
mov
xor
mov
pop
xchg
shrb
xor
mov
mov
adc
xor
loopne
subl
xchg
leave
stos
cld
insl
addr16
jge
push
fdivl
push
cmpsl
push
inc
es
pop
lods
addr16
lret
stos
mov
sub
dec
mov
leave
mov
push
jle
notb
pushf
xor
sarl
gs
sub
xchg
dec
push
in
hlt
lock
xor
pop
int3
mov
push
pop
adc
in
mov
mov
inc
pop
sbbl
pop
mov
mov
ret
insb
mov
out
gs
xor
aas
mov
xchg
insl
into
std
jp
mov
lret
ja
push
mov
pop
mov
fadds
xor
ja
lods
testl
in
out
pop
pop
psubsb
sbb
xor
xorb
imul
mov
std
jecxz
jmp
lret
cwtl
cmp
or
stc
pushf
enter
inc
xchg
pop
ret
loopne
jg
pop
nop
or
subl
out
int3
repnz
sbb
outsb
les
clc
cmp
js
test
mov
sbb
mov
into
std
pop
mov
mov
aad
jnp
pop
inc
outsb
dec
fstps
jb
lds
push
ret
pop
pop
mov
pop
push
out
sbb
mov
dec
mov
sbb
and
hlt
cmp
clc
js
fs
cmp
inc
jmp
add
dec
std
rol
jne
inc
fdiv
mov
mov
xchg
jbe
pusha
push
call
pop
andl
and
push
fs
xor
mov
test
dec
xor
iret
xlat
sub
fistps
fdivl
mov
setg
insl
data16
push
frstor
out
idiv
out
sbb
xor
pop
xor
xlat
roll
push
sub
mov
in
movsb
mov
and
mov
push
fninit
lret
xor
jmp
mov
fdivrs
ss
add
mov
mulb
std
shrl
hlt
xchg
movsl
sarl
ret
loopne
ficomps
inc
cmp
dec
xchg
dec
pop
insl
or
ja
loopne
dec
into
jnp
clc
mov
inc
dec
sub
es
in
sub
push
push
lods
shl
or
jbe
fiaddl
lea
mov
jo
sbb
xchg
add
xchg
inc
insl
and
mov
or
lods
icebp
inc
dec
dec
ficomps
cmp
cltd
cs
and
mov
mov
fcomi
jl
les
push
sbb
pop
push
pop
pop
adc
push
jno
pop
mov
add
inc
mov
movsb
repz
jp
sub
lret
mov
and
xor
aaa
jp
lock
insl
lods
rorb
sbb
push
jmp
sarb
ja
dec
dec
js
dec
adc
and
adc
sbb
cli
jp
cmp
cmp
mov
adc
inc
dec
mov
push
fcoml
fadds
shrl
add
pop
mov
add
xor
cmp
cmp
or
mov
sub
jbe
mov
add
filds
inc
pop
pop
pcmpeqw
mov
inc
mov
xor
push
xor
pop
insb
xchg
cmp
push
fstpl
fstpl
inc
imul
mov
push
inc
mul
into
mov
repnz
pop
mov
sub
inc
dec
imul
inc
in
jl
jl
dec
add
inc
aad
jmp
xchg
pop
add
cmp
pop
into
mov
dec
mulb
out
addr16
inc
mov
push
pop
sub
jle
pop
xchg
cmp
pop
out
je
xchg
test
xchg
cmc
sbb
ficomps
sbb
push
into
idivl
push
rorb
fwait
push
fidivs
mov
cld
xchg
sbb
add
addr16
ficomps
inc
fidivl
or
test
mov
test
cld
mov
jl
or
cltd
mov
mov
mov
dec
cs
mov
mov
adc
mov
xchg
js
push
pop
jg
addb
and
push
mov
mov
adc
lret
adc
push
repnz
pushf
add
fwait
lds
aam
add
js
mov
add
cmp
into
cwtl
aam
das
add
pop
popa
xlat
loope
scas
jle,pn
lahf
aam
pop
ljmp
and
movsl
adc
jmp
jp
inc
cmp
les
pop
xlat
test
xchg
sub
test
ljmp
rcr
pop
xchg
jle
and
xor
cmp
mov
and
mov
mov
jp,pt
mov
fidivl
addr16
mov
xchg
test
iret
cmp
inc
mov
sahf
cmpsb
stos
sti
icebp
or
ja
adc
cli
cmp
jmp
sbb
bound
mov
popf
test
adc
int
cmp
lret
ja
js
stos
fnstenv
add
jmp
jne
jns
mov
repz
jmp
inc
mov
cmp
aad
fdivs
subb
push
and
adc
faddl
dec
cmpsb
in
inc
ds
int
jae
outsb
pop
mov
mov
and
clc
mov
cmp
pop
lret
sbbb
mov
dec
les
nop
push
loop
fwait
mov
lret
dec
test
movsb
add
sbb
rorl
out
int
adc
mov
xchg
mov
mov
jecxz
dec
xlat
popf
imul
push
jge
fcmove
clc
sbb
lahf
int3
mov
cmpsb
mov
push
in
xor
fbld
pop
test
rcrb
lret
mov
xor
repz
push
fistps
fildll
xlat
pop
and
in
push
lods
out
shrl
aaa
lret
out
jbe
sbb
adc
repz
dec
xlat
repnz
out
cs
loope
lods
xchg
fcmovbe
inc
pop
cld
cmpsl
mov
mov
add
cmp
or
push
xchg
test
cmpsl
pop
sub
push
shrb
xchg
xchg
cltd
les
xchg
xchg
bound
jae
shlb
mov
aaa
les
or
movsb
fidivrl
xor
inc
in
es
das
dec
cmp
pop
lock
aad
mov
movsl
pop
push
mov
pop
jne
sub
cmp
int3
es
int
mov
mov
test
sbb
les
mov
xor
popf
xor
arpl
je
jp
xor
orb
dec
or
loopne
lods
and
mov
int3
imul
sbbl
rcrl
xchg
jecxz
cli
mov
cmp
pop
xor
rcrl
push
lret
dec
fdivrl
iret
sub
iret
xlat
add
out
cmp
cmp
or
pushw
jp
je
or
lret
mov
cmp
andl
adc
ret
sbb
xchg
daa
int3
ss
push
test
sbbl
ss
jl
add
push
ljmp
add
jmp
sbb
aas
sbb
jb
xor
std
pusha
dec
mov
mov
int
mov
add
sti
jae
fnstenv
push
ds
jns
test
dec
add
outsb
into
jb
mov
jae
xchg
xor
mov
push
out
mov
or
jge
divl
and
into
push
mov
mov
fdiv
jo
outsb
aam
add
and
mov
sbb
sti
enter
out
push
inc
fcompl
cmp
jle
pop
xor
push
clc
test
add
cmp
add
movsb
lret
add
lds
mov
divb
push
andl
sbb
jg
sub
mov
dec
adc
push
mov
out
cmp
inc
push
leave
jns
icebp
jno
inc
or
push
mov
shlb
faddl
jo
bound
lock
sbb
xor
adc
and
imul
pop
clc
rolb
fildll
and
lods
xchg
cmc
andb
in
insl
neg
push
insl
fistps
mov
and
sarb
inc
lcall
mov
sub
andl
ds
pop
xchg
inc
mov
fnstsw
outsb
pop
xchg
sbb
mov
pop
sub
mov
imul
push
xchg
cmp
jmp
lret
xchg
xlat
cltd
xor
push
adc
sub
push
sti
rcl
pop
iret
mov
out
cmp
rcrl
jb
dec
dec
add
mov
rol
iret
sub
aas
dec
xchg
cmp
lret
jecxz
aam
sub
cwtl
jbe
rcrl
push
mov
xchg
mov
sbb
pop
int
dec
std
mov
movsb
mov
insl
loope
adc
push
ret
mov
into
cmp
cmp
mov
scas
add
rcrl
or
les
mov
sbb
adc
pop
push
sub
sub
mov
and
xor
insl
dec
fimuls
mov
sub
adc
lds
pop
pop
imull
inc
jmp
loop
xor
mov
lock
inc
idivl
ret
iret
add
xchg
out
movsl
mov
loopne
data16
loopne
imul
iret
jo
add
mov
or
outsl
inc
adc
sti
data16
clc
insl
icebp
adc
cs
or
xor
adc
into
shll
fcompl
ja
mov
push
adc
mov
jno
aam
sbb
idivl
xchg
cmp
mov
xorb
or
cmp
sub
jmp
arpl
out
js
or
out
sbb
or
cmp
adc
xor
fldl
xor
xor
popf
cmp
movsb
in
jo
xchg
push
mov
jecxz
mov
dec
lods
pop
lcall
jbe
pop
and
sub
lcall
and
add
in
cmp
pop
pushf
mov
jp
mov
jno
enter
push
mov
js
fstl
pop
ret
push
sub
loopne
loopne
mov
push
adc
cvtps2pi
push
fisttps
jns
mov
mov
pop
adcl
mov
xor
and
xchg
jbe
inc
jmp
xlat
fcmovnu
lods
insb
cmp
mov
jo
xlat
fisttpl
call
sbb
inc
sub
add
dec
pop
shlb
fs
jnp
push
fsubr
sub
inc
and
inc
cltd
outsb
jno
out
aas
xchg
pop
sbb
sahf
shl
dec
or
xchg
xor
movsb
ret
inc
fisttpll
inc
adc
mov
jl
cltd
push
jb
imul
mov
dec
mov
or
mov
cmp
test
jmp
lock
mov
in
push
mov
scas
mov
sub
jg
jae
cmp
inc
cwtl
pop
cmc
mov
xor
js
sbb
es
jg
lods
push
or
and
outsl
test
dec
and
cltd
mov
xor
jns
sahf
notl
popf
push
icebp
or
clc
addb
mov
mov
out
jbe
aaa
xor
sbb
and
jmp
dec
leave
shll
cwtl
movsl
xor
out
add
les
movsl
dec
adc
test
xchg
dec
lret
push
or
dec
aam
pop
mov
adc
js
nop
pop
ficomps
lret
cmpsb
xor
jbe
cmp
cs
fadd
dec
or
dec
in
sub
aaa
and
std
test
out
fcompl
cmp
enter
out
adc
lea
fwait
dec
movsb
aaa
fstp
ficomps
push
jmp
movsb
into
lret
repz
mov
cmp
add
sbb
mov
mov
xchg
mov
pop
nop
pop
hlt
mov
pop
cli
repnz
in
push
and
inc
test
jg
jo
lea
clc
pushf
jl
aas
adc
cmpl
mov
dec
insb
mov
sub
ja
xor
aad
mov
roll
orb
pop
or
int3
mov
fmull
jl
subl
xor
test
jmp
add
stos
pop
je
cwtl
mov
jnp
dec
sbb
jno
orl
shll
cmpsb
and
mov
xchg
ficompl
jo
add
jbe
out
out
mov
push
adc
fcmovbe
jbe
push
inc
sub
dec
jecxz
lods
add
mov
mov
push
movsb
lcall
lahf
pop
faddl
shll
in
roll
aas
loope
pop
lret
aas
pop
lahf
icebp
das
mov
sub
mov
cli
mov
ror
and
sbb
jge
es
repz
mov
outsl
add
roll
add
aaa
daa
xchg
jns
dec
mov
imul
lret
or
xorl
fists
daa
lds
jbe
dec
sahf
imul
aaa
xor
ja
out
cmp
sete
leave
stos
aam
push
jne
in
fbstp
xor
adc
mov
xor
daa
sub
test
add
xor
inc
cli
mov
mov
add
sub
icebp
jae
cli
mov
imul
push
push
clc
sbb
add
repnz
push
xor
inc
mov
rol
lret
xchg
push
in
test
pop
pop
and
shrl
sub
je
insl
jb
pop
xlat
fwait
push
sub
xchg
fstl
mov
sub
adc
pop
pusha
push
stc
aaa
mov
notb
pop
sub
pusha
dec
mov
push
jl
mov
xor
shrb
mov
enter
fsubr
adc
popa
in
mov
jne
dec
insb
xlat
shll
fisttpl
or
cmp
mov
enter
push
dec
push
dec
push
mov
lds
outsl
lcall
stc
add
mov
out
ret
jg
ret
cltd
dec
lods
sub
adc
int
mov
outsl
jge
mov
cs
jo
mov
subb
jmp
pop
dec
mov
pusha
pushf
test
subl
jno
andb
sbb
xchg
stc
cmp
mov
adc
jns
jns
lock
js
sbb
sbb
nopl
fadds
rclb
loopne
hlt
std
sti
lret
adc
xchg
icebp
int3
dec
dec
inc
out
rol
cmp
xor
adc
xchg
or
push
xchg
push
lret
sub
xlat
mov
sbb
int3
adc
jae
js
mov
xor
call
int
enter
out
repz
test
adc
pop
push
or
daa
test
push
push
scas
iret
pop
inc
add
in
lea
fisttpl
out
pushf
mov
mov
test
mov
mov
jae
mov
push
lea
test
xor
push
mov
pop
in
pusha
in
inc
in
and
shl
xchg
ret
mov
fs
adc
fstpt
and
lahf
test
insl
lret
insb
jecxz
andnpd
test
jmp
mov
or
xor
test
nop
int3
push
push
cmc
shll
adc
xor
adc
inc
scas
push
imul
inc
and
adc
and
popf
lret
dec
pop
inc
scas
sbb
test
sub
in
sub
or
fldcw
sub
mov
jbe
push
enter
mov
jns
mov
mov
out
pop
mov
lds
mov
jle
sbb
das
inc
arpl
mov
add
xchg
repz
in
ja
sbb
dec
xor
cli
jno
or
adc
jp
jns
push
inc
cmp
pop
out
frstor
mov
lods
ds
scas
aam
sub
sub
fwait
test
xor
jecxz
inc
xor
push
scas
xchg
pusha
mov
mov
cmp
mov
je
push
dec
aad
dec
invd
sbb
jl
or
adc
cmpsb
out
push
or
stos
add
imul
add
rcll
cmp
loopne
outsl
xor
test
pop
arpl
jg
pusha
push
lds
sahf
lret
jge
test
mov
imul
cmp
jecxz
imul
inc
mov
in
in
jecxz
or
mov
jne
xor
ja
mov
insl
cmp
aas
pop
insb
pop
inc
push
jmp
cmp
or
ds
adc
inc
add
mov
enter
addr16
enter
cltd
ror
repz
pop
xchg
pop
ret
push
nop
and
cltd
outsb
loope
scas
xor
ss
xchg
adc
popf
jnp
pop
repz
lea
inc
shll
dec
sbb
cmp
divl
jnp
cmp
push
fildl
and
and
into
dec
test
pop
mov
inc
jge
push
les
jl
jbe
into
mov
mov
dec
out
adc
lahf
popa
push
subl
inc
outsb
scas
out
fnstenv
add
and
data16
andb
jp
ds
xchg
fsubp
scas
out
pop
xor
xorb
cmp
cmp
je
jp
xchg
jo
subb
out
mov
xor
or
mov
inc
adc
out
xchg
push
push
stc
bound
fmuls
sbbl
push
push
test
out
test
sahf
cli
lahf
sarl
cmp
fstps
addr16
push
outsl
lahf
inc
cmpsl
into
flds
jmp
iret
scas
and
xchg
push
mov
push
dec
test
xor
and
and
xchg
cmpsl
xor
jle
movd
sub
ret
xor
scas
push
xor
xchg
xchg
adc
sbb
mov
repz
push
mov
push
mov
mov
jg
mov
adc
mov
sub
scas
cmpsb
negb
inc
pop
test
jmp
dec
push
pop
push
mov
xchg
cwtl
mul
rcl
xchg
and
mov
ret
negl
or
lret
jmp
sub
xor
call
jnp
xchg
jae
bound
cwtl
test
mov
xor
xor
sub
ds
mov
or
mull
pusha
xor
and
xor
int3
mov
cs
jp
div
pop
gs
jecxz
ljmp
movsb
sti
push
cli
jbe
lock
dec
jmp
mov
mov
jnp
sahf
idiv
jp
push
rcl
mov
sbb
add
mov
pop
mov
daa
inc
lret
clc
xor
jb
add
jmp
test
lea
jl
add
jo
mov
pop
jle
mov
pop
stc
and
out
cmp
lret
aaa
cmpsl
daa
pusha
xchg
shll
pop
out
jecxz
out
in
in
aad
aaa
mov
es
lock
lret
cmp
push
add
or
adc
insb
or
pop
std
sbb
fdivrp
push
or
shll
dec
scas
mov
mov
insl
fprem1
jmp
mov
pusha
dec
pop
in
xchg
mov
add
dec
dec
pop
xchg
lret
add
adc
cmpsb
stc
mov
push
push
push
das
jae
inc
inc
dec
push
aas
sub
or
mov
cmp
jle
loopne
sahf
test
push
loopne
loop
mov
and
pop
dec
out
fidivl
out
aad
xchg
jns
int3
adcb
or
cli
cmpsl
stc
bound
dec
outsb
loope
add
std
or
push
aaa
arpl
out
mov
fwait
in
or
jae
inc
inc
jno
dec
nop
arpl
mov
push
adc
enter
outsb
pop
lret
ja
lret
and
push
movsl
and
lahf
inc
mov
loopne
dec
dec
cmp
pop
icebp
xchg
jge
ljmp
or
clc
jno
cmp
xchg
cmpsl
push
inc
ror
jl
push
loope
mov
xchg
loop
xchg
xor
outsl
outsl
xchg
imul
das
popa
push
outsl
ja
repnz
xchg
and
cmp
call
dec
push
mov
pop
ljmp
aam
mov
mov
cld
push
subb
sbb
int3
hlt
jecxz
xchg
mov
xchg
test
popa
out
mull
pop
pushf
xor
inc
cwtl
jno
test
mov
inc
movsl
lods
mov
mov
loope
adc
out
lret
les
ss
pop
mov
mov
and
mov
fidivs
sbb
ret
and
mov
insb
mov
ret
roll
or
inc
fmul
mov
mov
jmp
inc
jge
and
sub
mov
sub
popf
dec
sub
cmc
xor
out
test
mov
ja
loope
mov
call
mov
cmp
xor
loope
and
jmp
dec
pop
stos
mov
mov
xor
mov
pusha
pop
sbb
lea
push
pop
out
sahf
xchg
aam
stos
test
cld
es
or
loopne
jne
cltd
sub
addr16
outsl
dec
jb
adc
aaa
call
mov
push
rorl
dec
rorb
clc
out
es
xor
mov
scas
fsubs
cmpsb
xchg
inc
lds
das
bound
cmp
pop
dec
mov
ret
lea
lret
jecxz
jno
sub
imul
fnstenv
mov
mov
push
xchg
xchg
icebp
xor
ljmp
aas
cmp
cli
inc
or
outsl
test
incb
test
mov
leave
dec
mov
mov
rcrl
xchg
sti
push
pusha
in
icebp
inc
out
inc
nopl
inc
mov
jbe
xor
fdivs
or
sub
dec
dec
cmpsl
mov
jp
sub
mov
xlat
shrl
fisubl
ja
xor
into
cmpsl
xchg
jo
imul
xor
pop
xor
fmull
dec
mov
leave
insb
popf
push
pop
movsl
in
add
jmp
dec
pop
inc
jo
loopne
test
jg
cs
ficompl
in
test
jp
cli
sarl
add
mov
arpl
push
lds
xchg
mov
lcall
and
xchg
fcmovnbe
sub
es
js
fisttpl
loop
sub
shl
jecxz
or
cmp
dec
dec
cmpsb
or
fstl
push
mov
loopne
fwait
test
mov
xor
lock
mov
mov
pop
inc
cli
test
repz
jg
into
mov
repnz
addr16
in
mov
es
jge
addr16
jnp
push
adc
cs
fs
out
sbb
jb
mov
and
je
mov
repnz
bound
rorl
and
pop
cmp
mov
cmc
jns
cld
sbb
adc
clc
shlb
adc
add
int3
sbb
pusha
push
mov
mov
and
and
cli
out
or
xor
mov
movsb
out
or
mov
rcrl
pop
sbb
fbld
add
in
ret
add
jae
or
xchg
inc
mov
bsr
out
jno
cmp
inc
mov
imul
sbb
pop
es
adc
leave
outsb
xchg
stos
mov
mov
lock
push
push
jmp
fcoml
mov
jp
mov
jge
mov
iret
push
das
xchg
push
sub
aaa
ret
mov
lahf
mov
mov
outsl
push
imull
stos
mov
xor
in
hlt
mov
jb
pop
cmp
int
inc
cltd
xchg
pushf
leave
push
decl
int
lods
scas
adc
jne
cwtl
aam
fcompl
push
dec
fwait
in
xor
adc
jg
insb
je
mov
pop
or
fsubrl
or
push
test
call
xor
cmp
nop
pop
sub
sub
mov
pop
xor
cld
mov
das
mov
clc
push
jno
test
push
gs
mov
mov
sub
cli
jae
imul
aam
sub
dec
nop
fadd
jl
jle
jae
fdivs
mov
outsb
inc
das
xor
daa
fadd
pop
aaa
dec
pushf
cmp
add
cli
adc
icebp
shlb
adc
in
imul
int
xor
sub
xor
outsl
bound
xor
xchg
lahf
jne
mov
sbb
and
pop
mov
add
cmpsl
lahf
xchg
inc
lock
outsb
sarb
ret
xchg
adc
movsl
jbe
or
ja
and
cmp
pop
and
push
pop
push
xchg
cwtl
cmp
bound
ljmp
sti
xor
cmp
cmpsl
jbe
std
sub
mov
sub
xchg
popf
or
es
div
or
mov
xor
test
test
clc
pop
pop
sub
out
inc
sbb
cmp
or
jne
rorb
mov
xchg
or
cmc
mov
xchg
test
fwait
sbb
fldt
shrb
dec
cmpsb
push
je
out
mov
xchg
faddl
cwtl
adc
cmp
mov
and
pusha
neg
jo
movsl
xchg
jl
xchg
shlb
mov
sbb
mov
addr16
xchg
sbb
rcrb
lcall
dec
lds
int3
std
jg,pn
into
dec
fidivrs
pop
adc
std
sub
ljmp
mov
push
jbe
add
or
mov
test
sbb
jmp
int3
xchg
xorl
xchg
insl
movsl
js
sub
lret
mov
repnz
mov
aad
mov
sub
js
inc
das
cmp
rcrb
or
jmp
shrb
stos
sbb
dec
and
or
pop
pop
fisttpl
sbb
movsl
inc
pop
xchg
repz
cmp
fldt
imul
outsb
stos
pop
mov
fisubrs
out
jb
add
push
cmpsb
or
shrl
push
sub
jge
add
es
push
cmp
test
sbbb
dec
shlb
popf
sub
cmp
enter
add
sub
mov
jne
iret
pusha
pushf
inc
stos
fcoms
mov
ds
ds
sub
out
dec
dec
dec
lock
rorl
js
pop
mov
out
inc
mov
sbb
test
mov
add
aad
jno
int
inc
andb
cmp
in
xor
enter
mov
xlat
sub
mov
in
movsb
mov
ljmp
cmpsb
jmp
pop
push
add
dec
mov
dec
es
mov
lods
stos
cwtl
mov
adc
mov
scas
add
lret
or
push
push
adc
iret
sub
sahf
das
js
pushf
dec
clc
mov
loope
test
pop
ret
xchg
lret
pop
xor
cmpsb
test
jae
fadd
mov
jne
fdivl
imul
jle
imul
iret
push
dec
std
push
mov
repz
test
dec
mov
mov
pushf
adc
ret
pop
in
and
movsl
mov
fs
mov
imul
mov
adc
xchg
jae
push
sbbb
enter
mov
or
das
daa
repnz
push
cmp
in
dec
cltd
arpl
sub
inc
lods
cld
ficompl
adc
sbb
mov
cmp
ss
sbb
and
jle
icebp
add
sbb
jle
aad
jg
xchg
inc
mov
jb
mov
push
fcmovnb
lss
add
inc
test
das
jbe
and
push
nop
xlat
subl
popfw
mov
cmp
les
pop
xchg
popa
mov
fdivrl
fwait
adc
mov
xor
outsb
clc
scas
sub
ds
mov
mov
loopne
add
rol
aam
es
popa
jno
outsb
or
push
xchg
push
xor
lret
add
loopne
ret
pop
fsubr
inc
and
inc
xchg
rcl
push
and
lea
xchg
and
push
mov
cmpsb
ficoml
push
es
in
xchg
xor
daa
cmp
mov
or
sbb
pop
nop
insb
mov
dec
test
decb
aam
cwtl
or
and
lret
pop
or
incl
kmovb
scas
in
sub
sub
nop
xor
mov
add
or
lods
cli
sbb
adc
mov
xchg
pusha
inc
leave
fcomps
stc
std
out
clc
stos
sbb
sbb
test
addr16
sub
mov
scas
icebp
out
stos
mov
xor
and
inc
mov
inc
sti
mov
cld
int3
sub
mov
pop
push
stc
sub
jae
into
test
shl
dec
movsb
int
mov
adc
inc
lahf
loope
xor
sub
and
repnz
lcall
inc
cltd
mov
push
inc
data16
fnstsw
out
sub
pushf
rcll
mov
push
adc
rcrb
lods
push
jge
cmp
std
popf
pop
test
cltd
aam
les
mov
push
orb
in
mov
iret
push
jl
add
call
mov
mov
cmp
cli
jp
in
loopne
mov
dec
pop
inc
ret
inc
mov
xor
xchg
loopne
jns
jbe
mov
adc
movsb
xor
xor
mov
cmpsl
mov
cli
inc
lods
loope
out
into
push
pop
ljmp
rcll
leave
pop
mov
push
gs
push
jp
mov
xor
mov
add
push
fstpl
pop
fdivs
test
add
pushf
mov
jb
sub
stos
xchg
aad
pop
sub
fstps
push
lods
rorl
lahf
stos
faddl
addr16
adc
jbe
leave
jmp
jnp
sbb
jg
push
jp
test
fsts
mov
cmp
loope
std
xor
adc
and
aam
loope
push
test
mov
push
sbb
testb
push
jno
mov
and
xchg
mov
mov
mov
or
xchg
out
push
in
loop
loope
aad
sub
out
jge
sub
adc
inc
xchg
adc
dec
mov
pxor
push
jecxz
jg
out
sbb
cmp
sub
lds
cmp
mov
outsl
mov
adc
fcmovnu
movsl
pop
dec
pcmpeqd
js
imul
call
push
pop
inc
aas
fwait
push
and
cmp
das
mov
inc
xor
mov
repz
jae
sub
test
adc
adc
outsl
imul
fimull
adc
je
loopne
jg
inc
xor
mull
dec
push
mov
sbb
loope
jmp
enter
inc
push
out
in
repnz
mov
in
add
into
xor
test
push
test
repz
inc
fiadds
inc
shlb
adc
stos
and
notb
ficoms
xchg
pop
lret
push
jns
scas
mov
pop
fistps
test
sarl
fbld
incb
inc
mov
sbb
or
test
scas
and
shll
jg
fs
xor
cli
or
cld
or
pop
cld
mov
mov
sub
xlat
aaa
jns
clc
in
inc
jp
cmp
aaa
loopne
cwtl
xchg
add
mov
sbbb
in
add
gs
fisttpl
mov
out
in
outsl
jmp
int3
je
cld
cmc
les
mov
insl
xlat
mov
subb
subl
cmp
add
sti
out
pushf
jge
adc
cwtl
inc
xchg
outsl
dec
movsb
push
incb
test
and
out
xor
rcrl
fucomi
data16
repnz
pushf
icebp
or
ds
lahf
fnstenv
jae
iret
mov
pop
sbb
jo
dec
stos
mov
pushf
push
jo
xchg
and
dec
movsb
popa
gs
pop
push
lahf
je
lods
mov
cmp
dec
xor
push
inc
iret
es
stos
sbb
cmp
outsl
ret
xlat
xchg
and
xor
leave
cmc
ljmp
bound
or
dec
jle
lock
or
mov
ja
lods
jns
sbb
rcl
xor
movsb
lods
add
pop
leave
dec
dec
js
xor
pop
in
cmp
cs
aad
or
mulb
add
stos
shll
xor
js
hlt
test
xchg
stc
imul
and
xor
bound
sbb
xchg
mov
jmp
pop
pop
call
pop
push
nop
out
or
jbe
mov
push
out
push
dec
push
adc
jo
add
mov
or
xor
fisubs
int
notb
xchg
adc
outsl
jmp
xchg
popa
adc
ds
dec
test
adc
or
imul
push
in
rcrl
and
subb
push
movsb
icebp
cld
test
stos
notb
popf
rolb
xchg
add
and
jg
mov
testb
test
in
hlt
jb
add
push
aam
aas
inc
ds
jae
mov
xchg
and
les
lea
mov
add
jnp
jmp
xlat
jb
inc
out
cmp
fcompl
mov
cmpl
adc
iret
mov
mov
cmp
push
mov
add
sbb
push
xor
jmp
popl
repnz
in
mov
cmc
jp
sbb
cld
xchg
out
cli
lcall
mov
hlt
xor
sbb
pop
testl
aam
jmp
cmp
jne
dec
jo
popf
leave
and
xor
loop
jo
sub
das
scas
imul
jo
sub
push
push
std
mov
mov
sub
inc
inc
mov
roll
xlat
xchg
popa
pop
jo
mov
xchg
fwait
pop
pop
xor
dec
xchg
add
lahf
mov
into
gs
jl
add
mov
cmp
punpcklwd
mov
sahf
jns
out
lods
ljmp
test
out
adc
cmc
test
nop
xor
ds
out
addb
js
push
adc
push
push
test
adc
and
shrb
dec
mov
and
mov
ss
stc
je
push
enter
lahf
out
jg
xchg
sbb
sbb
cmp
test
jbe
pusha
dec
das
mov
pop
call
and
pop
lods
sbb
stos
lcall
sub
push
mov
mov
rcll
xlat
mov
adc
shrb
xchg
sbb
sbb
rol
outsl
mov
sbb
popa
mov
mov
data16
cmp
lock
fisubrs
cli
js
aad
test
pop
adc
sahf
xlat
xor
fcomps
pop
pop
fidivrs
fldenv
or
or
pop
in
or
sbbl
xor
icebp
mov
testb
jb
mov
in
outsl
in
push
and
or
sti
sub
inc
push
sub
and
inc
iret
rolb
and
clc
xchg
iret
xor
dec
xor
stos
push
jle
mov
cli
das
cmpsb
push
xchg
xchg
insl
inc
in
cmp
sahf
mov
lcall
sbb
mov
ret
incb
int3
lret
je
sbb
cli
les
into
or
inc
add
lock
pop
fwait
dec
or
int
xchg
xchg
ss
arpl
mov
mov
addr16
dec
mov
dec
mov
and
out
dec
add
sbb
cld
mov
cltd
jmp
flds
mov
cmpsb
xor
aam
cmp
lea
sti
out
inc
sbb
add
outsl
or
and
xor
pop
outsl
rcll
mov
mov
xor
pop
hlt
nop
mov
dec
cmp
pop
push
aad
das
loopne
mov
mov
inc
call
cmp
outsl
loop
cltd
pop
or
andb
rolb
fs
aad
enter
mov
add
pop
pop
inc
inc
test
dec
pop
jge
cld
cmp
fdivl
push
ret
sahf
sbb
jb
mov
xchg
mov
addl
add
jnp
jno
pop
lock
mov
fwait
xlat
aaa
lods
mov
push
push
sub
sbb
rclb
xchg
jge
mov
out
xor
inc
sub
mov
or
hlt
lahf
js
dec
les
pop
shll
or
out
mov
ljmp
mov
and
sbb
int3
subb
gs
ljmp
bound
push
xchg
jne
push
push
imul
scas
int
jmp
int
mov
and
arpl
loopne
add
test
mov
mov
enter
or
jge
or
leave
jmp
jl
movsl
and
pop
sbb
jbe
sub
jp
mov
testl
mov
cmp
pop
imul
loop
daa
imul
push
adc
in
aam
jo
jbe
mov
stc
xchg
add
pop
enter
push
ja
in
dec
lret
mov
pop
or
push
fisubrl
iret
imul
mov
iret
inc
sarl
and
repz
ror
repz
pop
cli
std
sbb
xor
pop
fldt
lods
aam
push
out
mov
push
sbb
push
imul
lock
fsubrs
adc
fdivr
ret
jno
cmp
inc
cmpb
and
xadd
clc
enter
je
ljmp
ss
ds
push
jmp
in
outsl
inc
aas
jmp
faddl
mov
push
notb
fwait
sbb
or
test
and
mov
adc
imul
lea
push
cmpsb
stc
test
or
xor
daa
ret
dec
sbb
das
enter
add
call
lea
cwtl
pop
lock
mov
push
out
and
fimuls
mov
das
insb
xor
or
mov
dec
sbb
lea
testl
or
out
pushl
pop
add
adc
imul
and
repnz
pop
and
adc
mov
xchg
shr
shlb
nop
pop
push
loope
mov
cwtl
pop
pop
pop
mov
dec
mov
sbb
xor
inc
fwait
test
dec
add
cli
mov
js
push
dec
cmp
andb
lea
stos
adc
das
pop
mov
push
sub
or
mov
jge
lret
push
out
fidivrs
addr16
pushf
sbb
out
pop
clc
cli
scas
jbe
test
jmp
sub
jo
popf
sub
cmp
sbb
adc
xchg
inc
sbb
jno
inc
test
xchg
movsl
push
push
dec
or
testl
mov
fs
stos
cwtl
addr16
cli
mov
pop
mov
push
ds
pop
push
dec
cmp
sbb
mov
pop
stos
out
subb
xor
sbb
or
out
daa
xor
push
movsb
jne
xor
mov
jo
mov
and
xchg
sbb
xchg
mov
into
add
mov
repnz
cmp
inc
lcall
push
sub
es
pop
scas
shl
in
xchg
mov
stos
xor
fchs
scas
cmp
jle
cmp
leave
push
and
dec
ja
mov
push
mov
enter
mov
xchg
add
push
dec
xor
jmp
jnp
outsl
fistps
lahf
push
mov
mov
loop
cwtl
add
add
sti
inc
mov
sub
xchg
pusha
jne
movsl
cmp
jns
cmp
sbb
lds
push
enter
mov
loop
cmp
dec
loopne
xor
inc
push
mov
jp
push
mov
sbb
jl
mov
test
sti
hlt
sbb
aad
mov
daa
mov
mov
stos
movl
ljmp
outsl
cld
xchg
adc
adc
iret
mov
xchg
lret
pop
mov
pushf
sti
int3
jae
xor
pushl
cli
and
sub
out
adc
mov
mov
sbb
sbb
outsb
repnz
fldcw
jno
mov
mov
out
mov
add
das
jnp
inc
adc
mov
shrl
pop
pusha
pop
and
divl
dec
mov
inc
cmc
push
cwtl
xchg
nop
or
xchg
hlt
iret
filds
gs
dec
pop
dec
into
xor
push
xchg
gs
fs
push
cmp
addr16
mov
cmp
dec
sarb
pop
sbb
popf
inc
sarb
xor
out
js
sub
mov
mov
frstor
scas
adc
sub
pop
push
mov
inc
int3
mov
movsl
mov
dec
jle
inc
push
mov
out
and
scas
mov
xchg
push
cltd
mov
mov
or
std
iret
lret
lea
sub
push
jb
or
xor
test
cmp
jecxz
je
ja
inc
icebp
pushf
dec
daa
test
data16
mov
lret
loop
iret
movsl
or
fsubrp
mov
punpckldq
push
arpl
and
sti
insl
int3
test
push
sub
mov
pop
daa
or
cmpsb
xor
xchg
and
in
add
jnp
inc
leave
jb
pop
sub
mov
fbstp
clc
cs
push
xor
mov
sbb
les
leave
and
add
in
adc
cmp
mov
js
push
adcl
pop
mov
sarb
jg
daa
sub
hlt
sbb
mov
pop
adc
popa
inc
sub
cld
insl
and
imul
xorl
xchg
mov
xchg
cwtl
mov
arpl
adc
lahf
cmpsb
add
jne
lret
pop
sbbb
fistl
sub
insb
dec
cmp
inc
adc
jo
stc
test
xchg
jb
and
jo
imul
jle
sahf
shlb
ja
repz
shlb
les
das
xchg
mov
int3
inc
test
jp
stos
xchg
outsl
je
mov
inc
aas
aad
or
mov
or
jno
pop
fucomip
mov
sbbb
lods
cmc
mov
jns
popa
inc
add
in
cmp
addr16
xchg
inc
aam
rcrb
into
sbb
xor
jb
lcall
sahf
int3
nop
mov
push
test
aad
rorl
push
push
in
fistpll
notl
pop
inc
adc
mov
lds
test
dec
test
lahf
out
mov
mov
add
fisubrl
aas
leave
cmc
pushl
pop
mov
sbb
push
mov
lret
jb
sti
push
fcomps
ret
lret
repz
xchg
fwait
xlat
call
mov
test
outsb
loopne
stos
call
push
inc
and
fiaddl
out
or
pushf
push
sub
bound
imul
stc
aas
xlat
dec
jno
push
jb
out
cmp
inc
sub
shl
dec
push
ret
xor
mov
mov
add
jno
push
lds
and
iret
mov
js
push
add
jbe
pop
mov
jle
or
insl
mov
mov
mov
xchg
cmp
push
lea
sub
fistpl
pushf
aaa
pushf
sbb
mov
mov
out
les
and
hlt
dec
into
cli
jge
xchg
arpl
inc
shl
pop
jne
dec
mov
inc
fwait
insb
stc
je
in
jns
sbb
lds
or
loope
sub
cmp
dec
sub
icebp
jge
and
jns
cmc
movsl
xor
fimuls
les
sub
loop
fs
not
push
leave
out
sbb
pop
jbe
pop
adc
pop
lods
xchg
cld
nop
movsb
pop
mov
outsl
adc
mov
in
jmp
enter
insl
sub
out
jg
mov
cld
and
inc
pop
mov
clc
inc
sub
mov
mov
aad
mov
inc
sbb
xlat
pop
rcrl
dec
pop
or
inc
mov
mov
cmp
mov
test
mov
push
sar
ret
push
lods
outsb
in
call
jnp
jl
aaa
mov
push
stos
rcr
dec
adc
mov
out
test
adc
test
mov
stos
push
js
shlb
push
jnp
lahf
push
mov
xorb
mov
outsb
mov
inc
sbb
xchg
sbb
subb
adc
cmpsb
rcll
cld
andl
mov
or
mov
je
arpl
clc
xchg
fwait
test
or
and
ret
adc
cmp
out
push
adc
mov
push
add
sbb
cmp
mov
dec
add
jnp
clc
xchg
sub
and
and
je
aaa
jecxz
loope
imul
pushw
cmp
jp
daa
mov
and
fcomi
mov
lods
pop
xchg
in
cmp
mov
push
jecxz
inc
mov
das
mov
roll
mov
mov
stc
dec
cwtl
xor
mov
outsb
cmp
scas
cmp
sub
cmp
dec
pop
sub
add
enter
pushf
mov
jae
test
clc
jns
std
imul
popf
cmc
adc
jbe
repz
clc
xchg
xor
cld
aaa
addb
pop
push
dec
cwtl
aas
aad
mov
arpl
fisubrs
int3
jp
mov
dec
movsb
mov
pusha
pop
lock
jp
jno
dec
js
arpl
and
out
pop
pop
stc
pop
adc
dec
std
push
or
hlt
or
flds
inc
inc
sbb
shll
shll
pop
loope
ds
loop
mov
dec
dec
icebp
pop
fwait
mov
in
pop
rorb
lea
sub
inc
in
xchg
jno
cltd
and
nopl
push
mov
dec
lahf
test
sub
rclb
hlt
in
les
sub
out
int
pushf
mov
sti
hlt
ret
xor
js
pop
arpl
pop
inc
xchg
js
or
or
loop
mov
cmp
xchg
rcr
and
imul
popa
test
mov
add
adcb
hlt
shrl
pop
pop
pop
dec
dec
add
jb
xor
fiaddl
ret
hlt
lret
outsb
pop
sahf
xchg
push
nop
iret
lods
stos
pop
jge
xchg
lcall
jmp
xchg
repz
xor
mov
popf
pusha
sbb
adc
xchg
xchg
or
xchg
fbld
add
lds
and
pop
aas
push
sti
mov
mov
scas
inc
rcrb
mov
lcall
movsb
scas
stc
mov
pushf
mov
nop
jo
repz
mov
mov
mov
lods
shrd
flds
decl
mov
call
pop
xor
jge
xchg
sub
pop
fsubr
inc
cwtl
add
lret
inc
call
push
call
ss
adcb
enter
mov
inc
dec
shrl
jecxz
push
sub
add
mov
add
mov
inc
cs
jl
cmp
or
mov
and
in
cmp
push
lret
aas
mov
mov
imul
dec
sahf
cs
aam
push
repnz
out
mov
jg
push
das
xchg
pop
sbb
sti
and
repz
xchg
mov
cmpb
fwait
repnz
popa
stos
jp
out
andl
inc
sub
xor
test
mov
or
or
addr16
mov
sbb
int3
jg
test
or
jae
mov
in
lds
adc
les
mov
jle
lods
ljmp
out
pop
lcall
gs
aam
vorpd
cltd
aaa
inc
add
add
into
sti
push
addl
jae
or
aad
shlb
pop
mov
jge
sub
into
dec
cli
pop
insl
push
cmp
fistps
or
ja
pop
and
xchg
inc
in
jp
fldenv
mov
cmp
cwtl
lods
sub
add
leave
mulb
cmp
fisubrl
shll
iret
iret
cs
sub
pop
cmp
mov
sbb
xor
out
iret
pop
adc
inc
cmc
push
mov
xchg
xchg
dec
jge
mov
pop
fcomps
notb
dec
movsb
loopne
add
ffree
pop
scas
sbb
or
push
rolb
cltd
insb
repnz
jmp
outsl
fadds
inc
int
add
cmp
sub
popa
mov
repnz
xor
mov
lahf
inc
lea
and
xorl
push
pop
lock
dec
test
push
xor
cmp
xor
pop
and
and
test
enter
xor
sub
jp
loop
outsl
inc
out
jo
test
sarl
push
adc
shrb
lret
insb
mov
insb
imul
aad
inc
fcmove
imul
andl
in
jg
jmp
pop
dec
mulb
mov
fldcw
push
or
scas
dec
xorb
xor
fdivr
mov
xor
add
sbb
jb
xor
inc
xchg
and
out
xchg
xchg
shrb
add
dec
mov
loope
mov
scas
popa
repnz
repnz
out
daa
and
jge
pop
mov
lret
mov
add
xlat
or
xchg
jl
notb
push
in
jne
add
pop
stos
shrl
iret
add
mov
insb
pop
pop
int
ds
push
pushf
inc
inc
sub
push
and
and
push
dec
out
xor
or
je
mov
mov
aas
fwait
repz
sbb
popa
orb
mov
mov
gs
pop
ficoms
ret
xor
jmp
inc
fstps
dec
and
loope
test
dec
push
add
pop
aas
cmp
out
add
test
aad
push
mov
inc
add
adcb
lea
adc
xchg
jl
test
xor
sbb
fldcw
cmpsb
fdivl
in
lock
loop
push
add
mov
inc
stos
ljmp
xchg
jae
jbe
dec
in
push
cmp
jo
xor
pop
dec
mov
hlt
fadds
loope
sti
adc
sahf
inc
push
pop
pop
push
add
fcmovb
bound
stos
icebp
repnz
push
xor
mov
xor
cmp
int
jmp
jns
sbb
and
insb
inc
mov
or
aaa
incl
sarb
leave
add
pop
loop
or
dec
jmp
inc
sbb
outsb
ljmp
or
in
testb
imul
and
adc
sub
or
and
jae
cmpsl
inc
fbld
popf
push
aad
aas
lods
cmc
es
std
xchg
ja
ret
lret
jno
out
xchg
or
movsl
mov
mov
or
mov
pop
mov
sbb
sahf
out
xlat
lcall
pop
sarl
push
and
popf
jbe
sbbl
xchg
test
xlat
cmpsb
jle
mov
push
jns
sub
sub
call
lahf
mov
inc
pop
in
sahf
fcompl
xchg
mov
inc
outsb
jle
call
mov
xor
roll
dec
sahf
aas
xchg
inc
adc
ljmp
loopne
xchg
push
mov
sahf
arpl
bound
iret
lods
sbb
inc
adc
xlat
and
out
scas
andb
and
push
dec
inc
shll
jg
mov
fisttpll
out
jns
xlat
repnz
jge
mov
cld
lock
push
add
pop
das
fwait
aaa
int3
icebp
ljmp
in
push
cmp
push
mov
ljmp
enter
mov
xor
das
ja
adc
push
out
fistpll
add
cmp
int3
fbstp
insl
pop
pusha
or
je
and
cmp
pop
dec
xchg
mov
inc
and
push
fildl
add
mov
push
dec
push
cs
xor
push
jge
cltd
mov
aam
push
sub
movsb
xorl
inc
push
mov
aad
jnp
ljmp
dec
gs
leave
adc
sub
sub
inc
into
out
ljmp
imul
inc
adc
inc
cmp
int
mov
mov
test
loope
mov
cli
add
les
dec
push
push
adc
sub
or
lahf
jl
icebp
or
jmp
cmp
adc
cmpsb
and
inc
sbbl
sti
dec
dec
test
cmp
jmp
pop
mov
cld
mov
push
jge
fiadds
push
into
adc
aad
scas
lock
outsb
mov
pop
std
fs
push
cmp
imul
add
jle
mov
dec
shlb
out
leave
mov
pop
xchg
hlt
gs
and
sub
aad
jb
add
icebp
fucomip
es
jg
jl
fistpl
stc
or
fucomi
xchg
pop
int
inc
inc
inc
ja
and
cmp
cmp
hlt
loopne
pop
pop
pop
cmp
cmpsb
xchg
push
shll
push
repz
push
xchg
jl
shr
or
jp
jo
mov
scas
inc
into
jo
adc
push
mov
lods
xchg
cmp
sub
mov
sub
in
cmp
add
fs
lahf
loope
cmp
out
scas
cmp
and
cltd
mov
sbb
cwtl
inc
pushf
pop
mov
pop
dec
xor
inc
in
imul
decl
mov
inc
jecxz
adc
pushf
loop
push
neg
aad
xchg
cmc
cmc
insb
test
in
or
jp
fstpt
jle
pop
pmuludq
xrelease
jecxz
push
push
repz
pushf
sti
push
jecxz
inc
mov
cmp
int
xchg
jno
loopne
mov
popa
mov
popa
cmp
sub
or
lods
insl
test
mov
sbb
and
pop
mov
dec
jl
or
into
push
pop
rcl
add
jns
cltd
sbb
mulb
aas
jae
jmp
mov
add
dec
fmuls
insb
and
imul
push
jl
pop
mov
ss
pushf
outsl
jl
lods
cltd
mov
add
push
lods
repnz
imul
repnz
loop
mov
jnp
add
xchg
cli
xor
cmp
and
daa
test
sbb
jp
sahf
sahf
jle
andb
xlat
inc
into
sub
jno
jno
sbb
std
cmp
in
jbe
test
push
pop
and
out
mov
mov
in
xchg
outsl
mov
and
mov
mov
or
insb
ss
jecxz
cmpsl
test
aaa
jmp
sub
xchg
faddl
mov
loope
fimull
cli
xchg
movsl
loope
xchg
mov
int3
mov
cmpsb
ret
push
nop
mov
add
rcr
pop
pop
sbb
and
sub
inc
mov
mov
into
mov
mov
mov
aaa
daa
mov
shlb
and
dec
enter
orb
sarb
dec
push
es
lret
sti
jp
mov
xchg
loopne
mov
jae
mov
xchg
jns
pop
dec
dec
leave
shlb
cmp
pop
xor
icebp
mov
dec
addl
jl
out
pop
adc
sub
and
out
aad
push
or
lds
insl
mov
mov
js
xchg
bound
dec
xor
xchg
push
mov
je
cs
jae
add
add
mov
push
bnd
sub
scas
call
mov
cmp
ret
movsb
xchg
and
lods
sti
mov
test
inc
out
iret
adc
dec
ljmp
mov
mov
and
int
addl
aad
dec
pop
xchg
gs
cmp
lret
das
nop/reserved
push
fcmovnu
mov
aam
add
ss
xchg
pop
pop
add
dec
aam
aaa
push
lret
pop
addb
mov
in
fisttpll
mov
xchg
sbb
dec
js
mov
add
sub
cmp
inc
xchg
mov
or
rolb
js
adc
pusha
add
cmpsl
xchg
inc
jno
ja
push
xchg
xchg
xor
mov
ljmp
fs
mov
push
pop
outsb
iret
and
lock
test
xor
fidivrs
in
test
push
popf
aas
sub
mov
rolb
test
jno
cmpl
fwait
or
insl
push
rcr
test
lock
stc
cs
xor
dec
sub
insw
or
in
dec
pusha
iret
js
dec
cmp
dec
orl
jb
test
mov
test
or
lods
jne
mov
jge
pop
ret
add
out
filds
pop
lods
jg
jmp
aad
int3
xchg
call
popl
sub
insl
mov
pop
mov
cmc
jbe
daa
push
call
and
and
out
sbb
repz
inc
and
fdivr
repz
loopne
mov
dec
mov
ret
dec
and
jnp
imulb
push
out
imul
sbb
daa
mov
mov
push
fcompl
pop
test
fdivr
inc
cmp
add
data16
shll
and
les
movsb
sahf
cwtl
lea
shrb
jbe
jne
push
rorb
dec
xor
lods
xor
push
push
stos
cs
gs
adc
cs
lcall
push
xchg
insb
mov
push
cwtl
mov
int3
xchg
leave
subl
in
mov
dec
pop
jmp
xor
pop
and
and
bound
mov
js
lret
cs
pop
or
sub
or
loope
cmp
out
mov
inc
or
std
add
dec
jns
sti
xchg
add
cld
mov
ret
fnsave
adc
xorb
test
xor
jecxz
mov
rclb
inc
xchg
into
or
sbbl
push
cli
jge
cmp
in
xor
xor
icebp
jl
cli
jl
mul
stc
rolb
push
jmp
jge,pn
inc
outsl
dec
and
dec
adc
lret
push
mov
pop
mov
es
insb
stos
jb
dec
push
xor
add
dec
lret
push
pop
pop
xchg
inc
xchg
push
rcr
mov
mov
dec
pop
pushf
imul
xchg
jbe
push
addr16
jo
rolb
rcrb
lds
xor
in
ljmp
inc
mov
or
lcall
pusha
inc
pop
outsb
lods
hlt
cmpsl
imul
in
xlat
push
push
xchg
adc
fidivrs
loopne
xor
gs
lret
mov
xor
inc
dec
or
add
repz
xor
fstpt
test
movsl
aad
in
pop
lret
ss
std
mov
sub
add
pushf
dec
test
mov
stc
pop
mov
pop
mov
gs
sub
sahf
in
ret
mov
cmpsl
or
outsw
mov
pushf
and
outsl
add
and
or
inc
int3
sbb
xor
stos
xor
vmwrite
jle
sub
add
xchg
cmp
xor
dec
xchg
fiadds
inc
lcall
add
inc
adc
outsl
int3
pop
scas
hlt
sbb
sub
fneni(8087
ss
orb
and
mov
mov
cld
mov
mov
xor
sub
xor
jle
fnstsw
jmp
sbb
out
mov
jo
mov
into
push
mov
cmpsb
pusha
jno
roll
test
ret
xchg
jp
cmc
inc
push
out
dec
stos
push
cmpl
cmp
push
mov
sbb
repz
push
rorb
mov
in
imul
push
sub
arpl
js
mov
divl
aam
and
and
sbb
test
push
test
pop
adc
mov
push
and
sbb
pop
lods
xchg
lods
xor
loop
xchg
jo
inc
ja
jnp
into
add
cmpb
pop
arpl
sub
sub
jmp
inc
push
cmc
push
repnz
outsb
xchg
pop
xchg
cmp
adc
and
sbb
pop
jns
inc
push
cmp
movb
jne
loope
arpl
gs
mov
aad
cmp
sti
mov
sti
lahf
cmp
js
xor
mov
jle
jb
xchg
xor
jg
add
mov
in
adc
mov
icebp
pop
sahf
test
leave
jl
and
add
popa
sub
test
mov
mov
aad
mov
fbld
pop
adc
xchg
fildl
aam
outsl
fmull
or
dec
jl
sbbl
rcll
or
ret
xchg
sub
ja
ret
xchg
pop
lahf
cwtl
mov
das
push
xchg
mov
cmc
mov
or
loop
ss
add
jecxz
int3
data16
jmp
push
inc
jg
cmpsb
cld
fwait
aam
lahf
mov
dec
and
fcmovb
sbb
shll
lret
adc
pop
mov
lcall
add
pushf
out
sub
lret
add
hlt
cmp
push
and
inc
jg
or
inc
pop
push
cli
sbb
lret
push
fcos
fucom
pusha
sbb
dec
jb
lock
jb
repnz
leave
push
gs
mov
sbb
jmp
xchg
adc
dec
sbb
mov
inc
aam
sbb
out
mov
sbbl
mov
inc
mov
mov
ljmp
cmpsl
repz
pop
movsb
lods
push
or
sbb
or
rol
add
mov
loope
test
data16
fldenv
sbb
sahf
pcmpgtd
and
ret
adc
jge
int3
pop
mov
jmp
arpl
in
mov
push
imul
inc
xchg
adc
cld
popf
lock
push
and
inc
pop
xchg
mov
and
cs
lcall
xor
pop
mov
xchg
dec
jmp
fists
mov
xor
push
imull
in
add
mov
sub
repnz
pop
dec
push
test
stc
repz
sbb
cltd
dec
cmp
mov
das
xlat
xchg
jno
addl
das
hlt
movsb
divb
cmpsb
cmpsb
sub
jg
ret
push
iret
int
test
imul
adc
pop
mov
popa
xchg
sbb
in
pop
les
sar
imul
shrb
lods
bound
mov
jmp
clc
mov
sbb
jl
xchg
lods
lahf
loop
or
mov
or
push
fidivrs
adc
add
popa
fs
push
sahf
les
loop
push
and
or
jecxz
into
jg
aaa
mov
sti
comiss
sub
or
dec
hlt
divb
sti
cmp
xlat
ds
jnp
jge
dec
xor
je
sahf
lret
or
cmp
nopl
ss
movsb
aas
lret
mov
mov
pop
inc
pop
xlat
mov
mov
cmp
lock
push
and
pop
jno
shl
cmpsb
mov
and
mov
pop
mov
sub
and
xchg
adc
mov
push
loop
imul
cld
je
or
and
pushf
xor
out
icebp
loope
lods
fwait
mov
cmpsb
stc
jbe
dec
adc
dec
insb
into
cmc
imulb
push
arpl
enter
repz
daa
dec
dec
adc
clc
test
or
pop
or
sub
je
pushf
ret
loope
in
xor
or
stos
mov
into
cmpsl
js
add
cmp
adc
icebp
out
es
dec
mov
in
mov
cli
mov
and
stos
fbld
sub
std
sbb
inc
push
adc
leave
mov
lds
add
cmp
dec
mov
jp
call
inc
jge
or
mov
inc
and
cmc
cmp
inc
mov
shr
dec
iret
inc
mov
test
cmpb
dec
or
jp
fldenv
xor
roll
cld
fwait
ret
mov
hlt
es
sbb
xchg
sti
adc
and
mov
aas
mov
arpl
xor
sahf
mov
push
aad
fistpll
subb
sub
les
scas
mov
fisttpll
aaa
int
sbb
insb
pop
dec
push
outsb
shlb
sti
pop
je
sbb
push
data16
xor
lcall
fs
aas
out
jne
cltd
cmpsb
add
outsb
push
movsb
mov
movsl
imul
sub
push
xchg
sbbl
stos
mov
push
jl
ret
out
xchg
pop
ret
rcrl
cmp
cmpsl
imul
rcr
scas
mov
push
pop
sub
push
jecxz
jno
pop
jmp
aaa
sub
pop
stos
sbb
or
mov
std
addl
test
dec
and
mov
or
addr16
jg
bound
or
fs
in
pop
pop
and
aam
mull
inc
popf
imul
adc
cmpsl
test
movl
xor
cmc
inc
fcmovnb
repz
imul
daa
fstp
sti
pusha
xor
inc
push
dec
in
sti
jo
mov
adcl
xchg
aad
push
pop
xchg
jne
mov
cwtl
std
cmp
add
int3
mov
ret
imul
cmpsb
mov
shr
or
cmp
add
mov
fcmovu
dec
mov
pop
stos
add
adcb
xor
adcb
fldcw
add
and
movsbl
out
in
imul
into
sub
cmpsl
fistpll
test
loopne
rep
test
mov
ja
xchg
push
insb
mov
xlat
push
stos
iret
data16
insl
cmpsb
hlt
mov
adc
in
or
in
pop
sbb
out
insb
hlt
and
adc
dec
mov
dec
lock
xchg
adc
lcall
mov
cmp
outsb
inc
mov
mov
add
jecxz
push
adc
xorb
adc
adc
rolb
jg
cmp
pushf
mov
ja
push
mov
push
out
lea
mov
lret
inc
cli
cmc
ljmp
mov
xor
sub
xor
pop
cmp
sub
andl
xchg
popa
outsb
mov
loop
jne
nop
scas
icebp
pusha
push
shll
cmp
sbb
and
clc
push
stos
stos
stos
mov
scas
pop
mov
push
int
pop
arpl
in
xor
pop
or
mov
jecxz
ss
bound
pop
icebp
jg
cmc
stos
mov
sub
mov
test
mov
in
lret
cmp
xchg
cli
pop
mov
sti
imul
push
dec
ret
inc
jns
ficoms
or
inc
dec
int3
lret
ret
enter
lcall
adc
call
cs
xchg
jo
jb
test
les
or
jo
or
aam
lock
and
outsl
mov
insl
icebp
jg,pt
sbb
push
pusha
jns
xchg
push
jno
add
shlb
mov
and
mov
mov
mov
xchg
pop
fwait
adc
jmp
std
mov
hlt
add
clc
fsubrs
mov
push
sbb
jmp
xlat
pop
movsb
pop
sbb
inc
into
jmp
xchg
jnp
dec
or
cmp
mov
and
mov
add
ja
out
je
sub
nop
cltd
stos
adc
stos
je
push
imul
sub
mov
xor
inc
mov
ja
lods
xchg
pushf
push
clc
icebp
mov
jmp
daa
nop
xor
ret
inc
push
mov
push
fs
aas
ret
push
daa
ja
inc
ret
sub
xor
imul
inc
out
lcall
xchg
dec
pop
shrb
mov
cli
mov
in
xor
scas
outsl
jmp
inc
stc
mov
xchg
and
fidivrs
aas
addr16
jle
loopne
jne
jmp
or
cs
cli
clc
sbb
mov
mov
lret
out
xor
insl
out
pop
push
fwait
push
rorb
xchg
add
rol
les
hlt
fs
jge
jl
jns
push
stos
inc
stc
cmpsb
inc
mov
iret
mov
or
inc
mov
mov
insb
inc
adc
push
push
mov
imul
test
cmp
jmp
cmp
inc
mul
fdivrl
int
xchg
popf
sub
cmpsb
jmp
cmp
js
fbstp
icebp
fwait
mov
ss
xchg
pop
loop
lahf
cld
jo
cmc
xor
leave
enter
shrl
and
mov
mov
sbb
xchg
idivl
mov
sbb
pop
bound
gs
leave
fwait
in
fisubrs
jo
sti
shrl
pop
mov
push
fisubrl
rcrb
mov
inc
cmp
repz
divb
aad
mov
sub
lahf
stos
dec
jb
adc
aam
xlat
push
lock
pop
sbb
push
push
inc
xlat
or
jnp
daa
dec
mov
lahf
icebp
jecxz
mov
add
jno
inc
push
shlb
fisttps
lds
push
mov
mov
and
imul
inc
jle
mov
addr16
imul
subl
cmp
xchg
add
push
mov
jns
push
lret
jbe
es
sahf
std
fwait
pop
mov
dec
jnp
mov
pop
insb
and
push
push
xchg
cmp
jne
cld
outsl
and
ss
popf
jae
fwait
adc
push
out
pop
addr16
inc
call
pop
test
dec
les
ds
cwtl
int3
push
sbb
mov
fsts
adc
sti
shll
pop
mov
cli
fstl
outsb
je
test
pop
mov
je
movsb
push
repnz
stos
mov
ret
addl
sub
cmp
lret
imul
push
inc
fcmovnb
out
mov
test
sbb
xchg
mov
sub
inc
jp
xchg
js
mov
mov
daa
pop
insl
mov
cli
in
fwait
aam
push
outsl
mov
add
adc
loopne
popa
rorl
add
fdivrp
mov
into
xor
imul
sub
cld
mov
or
jo
sahf
stos
mov
adc
sbb
jmp
jp
jb
aam
xor
add
mov
into
jecxz
xchg
or
fldcw
cmp
mov
mov
movsl
aas
mov
cmpsl
and
adc
mov
jae
test
jae
push
aad
xchg
pop
sub
scas
and
sarl
xchg
mov
sub
jbe
or
lret
xor
hlt
fstps
lods
repnz
ljmp
shll
pop
cmp
pop
add
adc
ret
jge
push
or
mov
mov
out
pop
jge
je
xor
lea
lret
idiv
mov
mov
jl
scas
stos
push
data16
fldt
xchg
lods
sahf
pop
add
out
xor
js
xlat
aam
sub
test
stos
aaa
orl
lahf
mov
pop
ret
cli
inc
mov
cltd
xchg
pushf
loop
pop
ja
jo
icebp
insl
popf
add
nop
cmpsl
mov
push
mov
cld
lcall
dec
sbb
in
jg
ss
sbb
push
pop
imul
jp
loope
cltd
stos
inc
aad
addr16
or
jecxz,pn
ja
dec
jg
sub
aas
cmp
mov
in
aad
movsb
pop
xchg
les
jno
enter
lcall
cs
sub
rolb
cld
or
mov
or
fstl
movsb
std
sbb
push
mov
stos
loop
hlt
inc
push
mov
ss
orl
les
mov
mov
test
adc
adc
pop
fmuls
mov
lods
pop
popa
cmc
jmp
sahf
cltd
in
add
inc
xchg
add
pop
pop
xor
ss
add
push
lods
mov
loop
pushf
movb
or
lahf
cltd
orl
adc
inc
jl
arpl
iret
pop
xchg
xchg
xor
fmull
mov
push
idivl
inc
push
sub
bound
push
bound
xchg
mov
dec
inc
bound
insl
sub
sub
enter
stos
pop
mov
and
inc
pop
or
cmp
stos
xchg
lcall
xor
push
gs
cmpsb
gs
movsb
lret
or
movsl
xchg
enter
aam
xchg
je
xchg
xor
pop
xchg
xchg
jae
mov
pusha
inc
repz
sbb
xchg
xor
or
mov
dec
inc
push
movsb
mull
ret
mov
fidivs
icebp
int
es
test
sub
movsl
dec
pusha
push
inc
xchg
mov
and
dec
out
sahf
call
xchg
lahf
std
pop
fldt
testb
jae,pt
xchg
into
sub
outsb
dec
mov
and
cltd
popf
loop
or
xchg
add
bound
cmp
jnp
int3
adc
cmp
cmp
fildll
inc
std
mov
inc
or
shr
jbe
mov
sbb
dec
sub
fwait
addr16
loop
lods
jp
fcmovnu
adc
mov
out
and
aas
mov
push
popf
test
add
lret
lret
test
inc
xchg
and
fadds
mov
rcr
jle
mov
scas
xor
ja
and
iret
cmp
sub
push
mov
fs
fcomps
std
jecxz
inc
push
and
cmpsb
sub
adcb
jmp
inc
sbb
pop
ficompl
push
int3
icebp
mov
jne
enter
add
cmp
push
xchg
or
sti
jle
add
hlt
jo
je
inc
outsb
xorl
cmpsl
roll
testl
cwtl
iret
mov
lret
sub
xor
pop
mov
push
jno
jbe
cmp
ja
xchg
xchg
add
add
pop
scas
inc
pop
cmp
adc
fucom
cmc
jle
xlat
sti
orl
inc
fiaddl
out
push
ja
pop
int
arpl
pop
add
jmp
popa
pushaw
mov
cmpsl
aam
xor
scas
lea
js
daa
push
fwait
hlt
sub
leave
daa
ret
rcr
mov
mov
pushf
lds
and
jne
lea
ja
mov
ljmp
add
inc
push
cwtl
aas
xchg
mov
mov
outsl
or
adcb
sbb
ficoml
mulb
xor
aas
xlat
fnstsw
dec
pop
sti
data16
pop
es
movsb
nop
adc
stos
call
push
cli
cmpsl
dec
mov
push
jae
or
inc
cli
and
repnz
sub
in
repnz
push
into
aad
pop
mov
repnz
les
ljmp
inc
jb
pop
fnstsw
pop
mov
xchg
sub
movsl
jnp
sarl
add
lods
cltd
arpl
push
push
add
xor
xchg
add
xchg
mov
xchg
mov
insl
mov
testb
int3
add
and
jl
mov
aam
push
dec
sti
int
add
cmp
je
xlat
adc
stos
and
gs
cmp
dec
mov
mov
jnp
shrb
gs
mov
sub
in
push
sub
cld
push
adcb
loopne
mov
mov
sub
cmp
jmp
hlt
jno
add
push
jns
dec
add
xor
lds
xlat
stos
je
in
push
insl
or
inc
push
sub
fstpl
cli
mov
cmpl
inc
int3
ss
xor
pop
mov
or
outsl
add
jecxz
das
inc
test
mov
arpl
test
inc
xor
and
jb
or
repz
sub
push
and
xchg
jns
mov
hlt
movsl
test
push
pop
shrb
or
rclb
or
lret
stos
jmp
or
and
adc
push
push
aaa
push
jbe
xchg
mov
inc
in
sbb
mov
xor
push
sbb
cltd
cmp
jl
in
jmp
test
or
sub
dec
adc
ret
pop
movsb
inc
cltd
icebp
div
xor
dec
in
push
aas
mov
outsb
inc
inc
std
std
cwtl
xlat
imul
pop
push
gs
cld
sbb
inc
mov
push
ds
ret
sahf
dec
and
test
jb
sbb
sbb
mov
fwait
repnz
jb
mov
xor
insl
mov
pop
out
mov
push
mov
inc
mov
or
pop
xlat
imul
shll
pop
pop
push
xchg
sub
jmp
cmpsl
mov
mov
leave
mov
jb
test
ja
dec
or
fmul
cs
fsts
push
sarb
jns
lea
or
gs
cmp
fistpl
sbb
jg
rcr
ds
cltd
cmp
inc
pop
in
xchg
imul
filds
lcall
mov
xchg
adc
lahf
xchg
out
xchg
icebp
dec
sub
ss
jp
movsl
add
cltd
movsl
ret
movsl
not
sub
push
lcall
lds
xor
jns
sub
dec
nop
cli
dec
mov
repnz
jge
ja
xchg
insb
mov
aas
mov
jno
mov
add
mov
or
pop
xor
jno
pushf
arpl
filds
sbb
dec
xchg
and
inc
mov
mov
sbb
xor
imul
outsl
mov
add
stos
test
aas
push
pop
or
cltd
in
mov
cld
inc
push
mov
pop
pop
xchg
mov
out
lods
lahf
loope
pop
xor
xor
sub
mov
sub
outsb
popf
aam
cmpl
push
test
es
call
rcll
mulb
pop
xchg
repz
ret
data16
lcall
mov
mov
xchg
adc
xlat
cmpsl
pusha
jecxz
xor
movsb
push
punpckhdq
xchg
incl
push
sub
dec
pop
sbbb
dec
sbbl
push
in
mov
out
pop
adc
jle
pusha
leave
pop
pop
ja
sbb
and
int3
lods
sub
fistpll
or
mov
mov
xchg
stos
pop
mov
test
xchg
rol
cmc
orb
jno
out
or
inc
movsl
xchg
dec
sbb
mov
mov
adc
xor
pop
push
mov
loopne
mov
or
or
int3
push
aas
xchg
daa
add
pushf
out
jae
push
adc
cld
dec
sub
ret
and
xchg
sbb
movsl
pop
mov
daa
add
pop
pushf
jae,pn
add
xchg
cmc
xchg
mov
das
nop
fwait
dec
int
dec
jmp
push
leave
mov
ss
mov
add
mov
fdivp
push
xor
daa
mov
dec
sub
inc
addr16
hlt
icebp
pusha
jl
fistpll
mov
or
lahf
lock
pop
pop
inc
xchg
dec
stos
iret
dec
jg
adc
mov
outsb
push
push
frstor
cli
push
icebp
cmp
sub
and
xchg
xchg
xor
jp
sbb
in
sub
lcall
pusha
mov
dec
inc
pop
cli
sub
mov
sub
mov
in
lds
fcmovne
movsb
xor
sbbb
push
scas
jb
fstpl
lods
or
jae
sbb
lret
cmp
lcall
jne
in
inc
scas
jo
xchg
xor
inc
das
jecxz
inc
stos
sbb
adc
jns
movsl
in
mov
push
shl
les
fcoms
add
add
pop
jne
in
sbb
out
jg
xor
notb
std
pushf
xorb
pop
fsubs
les
jnp
push
scas
or
and
cli
sarb
sub
cld
icebp
sbb
mov
iret
lock
adc
pushf
sub
jns
sub
ds
mov
mov
cmc
inc
jbe
jno
cs
and
lods
sti
mov
es
enter
jo
mov
dec
jae
popl
sahf
jmp
adc
push
stc
inc
sub
and
call
mov
inc
fisttps
jp
jae
daa
cs
jb
inc
sub
fs
je
add
dec
adc
out
jns
cmp
loopne
sub
test
aaa
xlat
adc
mov
push
inc
pop
mov
idiv
mov
fstl
pop
jo
test
dec
add
hlt
scas
loope
jmp
ss
popa
sahf
cmp
jne
faddl
mov
fadds
push
mov
pop
adcb
sub
jg
cli
arpl
mov
int
jb
ja
jle
pop
cltd
cmp
push
out
ret
sti
cltd
out
das
loop
test
negb
cmp
adc
xchg
pop
push
inc
pop
addb
mov
sar
fldenv
leave
fwait
xchg
adc
imul
outsb
xchg
xor
dec
lds
call
mov
pop
scas
dec
enter
enter
addb
or
adc
test
add
jl
sub
mov
sub
bound
filds
push
jmp
sbb
sub
pop
lock
pusha
xchg
pop
lods
out
xchg
jo
jecxz
in
insb
js
mov
jbe
lock
push
xor
add
sbb
mov
imul
jne
mov
sahf
test
test
mov
jge
mov
xchg
in
int3
pop
jmp
push
cmpsb
dec
aaa
xchg
test
or
dec
shlb
lds
jg
mov
jecxz
mov
hlt
sbb
imul
pop
lock
inc
repnz
mov
outsl
popf
cld
jno
dec
mov
inc
adc
ja
ja
xchg
xor
scas
jno
movsl
cli
xchg
cld
adc
inc
gs
aas
ss
js
icebp
xchg
shlb
sbb
sbb
jecxz
pop
push
adc
mov
xchg
movsb
sar
sub
lods
ret
jecxz
outsb
pusha
jg
xchg
add
xchg
sub
jnp
cld
lock
loope
or
dec
dec
fs
test
and
js
lods
in
stos
in
mov
xorb
xorb
push
scas
insb
jae
std
sub
push
push
sti
into
fisttps
or
cmp
or
add
movsb
lods
adc
imul
cmp
sbb
inc
insl
inc
clc
inc
sbb
mov
aam
jg
adc
jmp
dec
aaa
imul
or
lds
sub
pop
push
inc
inc
adc
xchg
test
sub
or
popa
and
and
jge
mov
jno
dec
out
sti
fisubs
push
pop
sbb
inc
push
adc
xor
xchg
jmp
adc
mov
dec
mov
pushf
mov
dec
mov
mov
iret
fwait
repnz
and
sbb
lock
inc
test
sub
mov
xor
lret
clc
hlt
in
xlat
lret
dec
and
fistpll
sub
inc
ja
jae
adc
jno
in
push
mov
xor
mov
or
out
push
mov
test
and
fidivrl
pop
in
testl
xchg
push
xchg
sbb
xor
movsl
and
adc
adc
pop
mov
iret
icebp
add
fildll
fs
out
sub
mov
sub
sub
or
or
hlt
hlt
mov
push
dec
and
addb
test
adc
pusha
enter
movsl
icebp
sbb
add
imul
jns
mov
ja
cmp
jns
movsl
xor
pop
shrb
xor
out
or
int3
xchg
jbe
mov
bound
dec
test
and
fwait
aad
sub
cmpsl
pop
push
mov
insl
andl
pop
mov
push
xchg
sbb
push
into
jl
cmpsl
dec
mov
lods
movb
sub
xchg
lahf
std
pop
jns
lret
popf
mov
mov
fnsave
ljmp
repnz
cmpl
ja
dec
loop
aas
sbb
decl
push
pop
popf
xchg
mov
shl
out
jno
cmp
adc
popf
mov
arpl
mov
sub
jp
sub
aad
lret
cmp
lcall
xchg
cmp
repnz
dec
arpl
sub
je
xor
into
add
cmp
fbstp
add
push
push
lret
cs
out
mov
adc
mov
mov
out
mov
mov
dec
fsubrs
into
inc
sub
out
sbb
test
js
push
into
mov
xor
std
adc
insb
inc
ds
dec
cmpsb
or
or
adc
adc
lcall
enter
xchg
sbb
setb
xchg
mov
mov
cmp
sbb
pusha
jno
or
mov
push
push
add
mov
and
mov
arpl
cmpb
pop
and
aam
out
ja
or
jmp
repz
cmc
hlt
test
popa
stc
jecxz
cli
mov
mov
test
call
inc
xchg
and
adc
cld
pop
les
add
je
popf
jge
push
cmp
and
add
sub
or
pop
push
push
dec
fimull
push
mov
ja
cmp
in
test
and
jmp
add
mov
add
repz
arpl
mov
cmc
mov
adc
cmp
in
lds
stc
cmp
cld
stc
add
pop
jnp
add
loope
sub
shrb
push
pusha
cmp
fsubrs
mov
push
push
inc
sbbb
mov
sar
std
mov
lea
pop
int3
inc
mov
mov
aaa
stc
int3
arpl
pop
clc
lret
pushf
inc
mov
lret
mov
negb
int3
shl
lods
mov
add
aaa
data16
sbb
ja
pop
jl
sar
pop
sbb
or
sahf
push
cmp
fcmovnu
mov
roll
jge
iret
adc
xchg
lret
es
cmp
out
jne
decb
lods
ret
push
inc
mov
clc
or
pop
repnz
js
mov
cmp
jne
jb
movsb
add
lret
lock
stc
inc
xor
test
dec
xchg
or
mov
push
sbb
jnp
fldcw
dec
xor
ss
movsb
push
cmpl
insl
push
cs
ljmp
xchg
xor
sub
push
mov
jae
testb
add
jge
and
insl
inc
stc
lods
ss
dec
lods
repz
dec
pop
push
outsb
lock
test
pop
mov
xchg
pop
mov
ds
and
out
adc
clc
rcll
loop
in
mov
pushl
or
aas
iret
cltd
adc
and
sbb
out
leave
sub
xchg
mov
jge
data16
inc
adc
mov
sbb
stos
mov
adc
xor
pop
test
xchg
sti
mov
or
pop
pop
mov
cmp
sbb
out
and
sbb
jge
mov
mov
ret
in
jmp
mov
arpl
sbb
nop
sti
jg
out
cmpsb
call
jno
icebp
jmp
pop
sbb
int3
dec
fisubrl
cmc
adc
dec
inc
test
test
adc
xchg
flds
mov
icebp
sbb
scas
rcl
xchg
pop
rcrb
xor
mov
mov
sbb
add
push
jbe
push
sub
hlt
pop
xchg
xchg
or
xchg
push
dec
sbb
hlt
in
jg
rorl
cmp
jne
mov
hlt
stos
push
push
xlat
xor
scas
divb
push
ja
in
pop
push
dec
mov
sub
ficompl
ss
jle
mov
inc
addr16
fbld
iret
andb
push
loope
imul
adc
sub
out
fldt
push
dec
add
out
lds
and
dec
lock
sub
inc
into
jg
sub
fprem1
pop
add
cmpb
lahf
js
mov
pop
aaa
repz
add
or
adc
lret
shlb
dec
jmp
and
xchg
jp
mov
or
xchg
cld
cmp
sub
sub
cmp
sub
push
pause
test
ja
mov
out
add
mov
fimuls
jns
stc
sbb
out
jae
mov
pushl
push
xor
sahf
pop
push
mov
pushl
jb
in
lret
push
push
divl
lret
or
sbb
js
lea
cmp
mov
movsb
shr
sub
or
cmp
and
xor
jmp
pop
cli
daa
sbb
jmp
cmpsb
add
fidivl
sbb
inc
jne
cwtl
jl
rol
xor
mov
push
jl
xchg
dec
add
cmp
rcl
dec
fiadds
lea
fstps
jo
ss
jmp
pop
mov
outsb
push
int
or
repnz
mov
sub
xor
jb
loope
in
push
sbb
int
lock
cs
xchg
mov
jnp
or
mov
ss
mov
cwtl
test
lock
jge
mov
popf
cmp
lds
mov
in
pop
adc
cltd
add
sbb
jo
cli
int
lock
cmp
pop
mov
data16
es
push
xchg
shr
sbb
mov
adc
adc
rorb
sub
insl
mov
push
leave
ja
xchg
and
adc
test
pop
dec
std
shll
loopne
fdivrs
inc
adc
cmp
jp
sub
adc
cwtl
orl
pmullw
dec
fwait
jnp
push
jp
sbb
sar
ja
mov
outsb
pusha
rolb
out
pop
or
mov
int
ret
ret
outsl
fnsave
pop
inc
jb
gs
cmpl
xorb
sbb
xchg
aaa
cmp
ret
sbb
jl
pop
lods
xchg
ss
jo
mov
xchg
mov
shl
pop
adc
sti
in
and
and
std
jp
inc
mov
push
lds
lea
in
lock
stc
stos
inc
lahf
jnp
lds
loopne
insb
iret
push
mov
push
in
arpl
inc
cmp
jmp
mov
mov
mov
push
and
push
cmpsl
jecxz
push
andb
lret
mov
or
fnstsw
scas
jge
shl
sahf
mov
mov
push
lret
pop
pop
hlt
and
adc
push
and
sbb
aad
shl
cmp
or
or
sbb
jb
xor
cmp
aad
lcall
mov
jge
dec
lds
stc
in
and
pop
fldt
clc
cwtl
dec
popa
outsb
cmp
jno
xor
insb
push
mov
out
fdivrl
hlt
aad
cmp
adcl
push
in
sub
stos
dec
xor
outsl
les
pushf
aaa
fstl
xchg
mov
fdivs
outsl
sti
loop
bound
aad
dec
and
sub
leave
je
je
jle
icebp
adc
pop
std
repnz
inc
xor
aad
jno
dec
pop
pop
sub
push
jge
cmp
mov
xchg
jecxz
mov
jg
lock
push
push
outsb
call
sbb
lret
mov
push
bound
xchg
adc
inc
jge
lock
fcmovnbe
pop
jo
jnp
mov
ror
out
dec
mov
imul
dec
xlat
stc
or
dec
sub
sahf
mov
stc
lcall
jecxz
and
adc
test
cltd
nop
cmc
imul
orb
xchg
cmpsb
out
mov
mov
fmuls
pop
aas
loop
sub
mov
pop
into
insb
xchg
scas
sbb
cs
bound
sbb
dec
sti
outsb
or
push
xchg
push
add
rclb
jae
mov
js
fxam
pop
lahf
and
loopne
pop
sub
inc
test
dec
shrl
arpl
subb
cs
sub
cs
xchg
jge
sar
jecxz
dec
shr
push
iret
loopne
push
pop
int3
push
pop
out
sahf
and
jne
loopne
xor
cltd
push
mov
push
sbbb
add
sti
leave
push
fmull
push
rorb
addr16
pop
mov
popl
mov
lahf
fwait
mov
mov
lock
into
dec
jecxz
push
je
aaa
adc
fsubl
fistpl
sti
ret
push
xchg
bound
test
paddd
xchg
xor
aaa
jo
push
add
add
in
push
pop
add
sbb
int
push
cmp
mov
ljmp
andb
pop
pop
adc
out
jmp
daa
gs
rol
int3
xor
sbb
jmp
sarl
sub
lods
sarb
cmpsl
add
mov
je
pusha
repnz
mov
fcomip
stc
fwait
and
cmp
cmp
into
xor
lret
ja
je
pop
stc
rclb
ret
sub
lods
aam
adc
pushf
push
mov
add
jae
lret
mov
in
push
pop
inc
fdivs
call
mov
leave
cltd
push
rcll
push
sti
clc
xchg
int3
fildl
lods
fsubr
xorb
add
sahf
xchg
push
out
mov
pop
jp
and
test
push
mov
stc
js
daa
add
pop
stc
adc
dec
add
mov
xchg
aad
sbb
arpl
mov
lea
ja
loope
lret
adc
imul
divl
cmp
lcall
gs
aas
pop
aad
cmpsb
js
ret
ror
adc
inc
je
mov
in
mov
push
xchg
shlb
out
dec
nop
stos
jne
pop
gs
jp
xbegin
cmc
scas
out
push
popf
aad
jo
movsb
jp
cmp
xchg
jns
pop
shll
repz
push
sbb
mov
or
loope
into
sbb
sbb
pop
push
into
sbb
xbegin
movl
movsl
xor
mov
jne
or
jmp
insl
enter
adc
cmp
cmp
sub
movsl
imul
xlat
mov
mov
xor
push
pop
cmp
stos
cmpsl
in
and
pop
adc
aaa
mov
loop
fwait
daa
sbb
push
stos
xchg
push
fdivrl
add
or
adc
lahf
sub
add
or
stc
inc
dec
loope
mov
sbb
call
xor
out
sbb
mov
stc
jge
and
jae
data16
cmpb
and
pop
out
test
adc
nop
xor
adc
mov
out
xchg
push
mov
fidivrl
movsl
gs
add
leave
out
lods
dec
rcll
jle
sub
out
xchg
sahf
aaa
mov
insb
and
push
stc
fdivr
sbb
pop
fiadds
iret
jae,pn
movb
adc
notb
movsb
ret
fwait
xor
pop
mov
lcall
mov
jbe
jo
xchg
shl
shrb
add
xchg
test
dec
movsb
in
dec
sbb
andb
dec
or
lahf
bnd
dec
ds
movsl
pop
push
mov
lcall
stc
mov
cmp
pushf
stc
fisttpll
mov
xchg
ret
lret
sbb
jns
mov
pushf
imul
jecxz
mov
mov
stos
test
rdseed
fisubrs
imul
movb
gs
aam
in
iret
add
ds
repnz
icebp
call
pop
and
pop
repz
or
pop
repnz
out
mov
enter
rorb
hlt
ljmp
inc
pusha
sbb
nop
sbb
loope
cmp
xor
cltd
pusha
fcompl
aas
not
popa
xchg
je
xchg
clc
popf
sbbb
dec
add
test
sub
jmp
test
ja
push
pop
adcl
out
mul
pop
add
arpl
sbb
das
ret
mov
add
push
shrl
mov
pop
push
jmp
lds
sub
sbb
scas
fildl
out
lcallw
repz
fiadds
push
shll
in
es
adc
les
sbb
sub
xor
nop
add
enter
dec
mov
xor
lods
pop
mov
add
test
and
xchg
movsl
adc
inc
bound
jge
xchg
xor
hlt
aad
je
push
pop
icebp
ret
sahf
pop
ret
jbe
lock
ret
and
add
mov
sbb
fwait
pushf
sbb
pop
rcll
mov
mov
movb
loop
out
idivb
cmpsb
push
test
inc
inc
and
mov
in
or
cmpl
push
mov
insl
sub
push
scas
xor
adc
idiv
inc
and
sti
sbb
scas
hlt
insl
add
jmp
into
xor
lods
jecxz
cmp
out
fwait
pop
aad
je
xor
ret
pop
xlat
filds
xor
push
or
sub
xrelease
out
cmp
imul
repz
test
test
ret
jg
add
inc
add
aas
pop
cmp
mov
jl
xor
scas
les
fstps
inc
cld
sahf
lea
sarb
js
or
jge
jp
lods
add
enter
cmpsl
pushf
mov
pushf
sub
fnstenv
call
adc
cli
fcomps
cli
and
push
dec
insl
sub
out
inc
iret
cmp
push
daa
jae
add
out
sahf
popf
jnp
cld
add
xor
mov
sub
cs
xor
mov
jb
adc
cmpsb
mov
push
outsb
push
repnz
sti
xchg
pop
inc
sahf
push
subl
ja
int3
push
cmp
inc
shl
pop
outsl
pusha
mov
sub
dec
enter
fldenvs
mov
cmp
mov
out
je
jl
dec
fcomip
and
ljmp
ljmp
jg
lahf
ret
and
mov
push
dec
dec
pushf
pop
dec
cli
mov
in
ss
xor
jecxz
test
popa
xchg
ret
push
pop
pop
mov
lcall
movsb
pushf
cwtl
sub
jmp
out
lock
cmp
repnz
cltd
fldl
testl
loopne
sbb
lock
int
push
jne
aam
das
fwait
adc
adc
aaa
dec
clc
xor
push
lods
mov
dec
or
xchg
push
sbb
sub
xor
mov
and
xor
push
mov
test
lds
sub
adc
cmp
or
xorl
sub
leave
add
inc
jo
dec
sbb
jns
mov
push
insl
test
faddl
enter
jp
xor
mov
leave
add
dec
in
xchg
cmp
jae
aaa
sub
aam
out
add
mov
mov
pop
mulps
iret
dec
in
cmpsb
mov
je
or
push
adc
sub
lds
pcmpeqb
gs
sub
cs
aas
and
imul
dec
add
ljmp
cmp
inc
mov
xchg
ficoms
inc
rolb
fldcw
mov
jmp
test
aad
dec
in
adc
es
xor
or
outsb
dec
push
adc
js
jne
dec
js
pop
adc
jns
sbb
jp
jo
mov
jns
mov
xchg
mov
cmp
mov
data16
dec
inc
cmp
add
pop
and
xchg
add
and
scas
je
lahf
xor
push
enter
dec
lods
lcall
subb
dec
clc
and
into
daa
mov
or
xor
les
sub
lods
leave
lea
movsl
xchg
sbb
adc
ljmp
ds
cmp
test
cmp
jmp
iret
mov
xor
pushl
fwait
nop
jb
dec
mov
and
out
push
into
mov
add
jae
mov
loopne
and
addl
test
fwait
mov
cmpl
push
nop
int3
dec
sub
jo
add
rorb
pop
pop
mov
xor
sbb
mov
add
repz
nop
punpckhwd
mov
dec
fwait
dec
adc
lock
sub
insl
frstor
js
mov
lret
arpl
mov
xchg
jle
jb
daa
sub
cmc
and
sbb
sub
js
in
sarl
aas
clc
push
xchg
call
mov
ds
loop
test
es
shlb
push
mov
std
xor
jle
add
stos
pop
adc
das
cmpsb
dec
or
mov
repz
xlat
lcall
leave
mov
sbb
xchg
and
push
test
or
daa
pop
in
loop
fnstcw
or
pop
xchg
sbb
insb
mov
fcomps
iret
pushf
mov
mov
fcmovu
mov
jnp
ss
nop
push
pop
mov
xor
and
mov
test
insb
pop
xchg
push
cmp
cs
jecxz
xchg
sub
sub
out
fldt
imul
mov
outsl
xchg
jo
dec
fsubr
inc
lods
test
sbb
push
adc
sub
int3
inc
xor
sbb
pop
cmp
test
jb
nop
addps
xor
dec
pop
stos
adc
mov
pop
popf
push
sub
pop
lret
adc
lcall
pop
fchs
das
pop
sub
das
divb
jle
push
adc
jno
cmc
mov
arpl
sbb
push
test
add
inc
push
xor
sub
xor
out
add
mov
das
dec
bound
jp
fstps
mov
lahf
sbb
mov
adc
imul
sub
icebp
out
pop
dec
mov
cld
scas
stos
lea
jmp
mov
outsb
cmpsl
ficompl
dec
jne
adc
int3
add
scas
pop
out
xchg
inc
xchg
adc
ror
ficomps
and
mov
mov
cmp
into
sbb
aas
sbb
bound
pop
sub
sub
es
pop
inc
out
into
fisubrs
hlt
dec
pop
sub
and
ss
call
test
and
jae
fldenv
and
mov
push
je
push
mov
or
xchg
rcl
ret
adc
sub
lods
xor
add
pushf
loopne
pop
rolb
adc
mov
mov
aaa
lahf
addr16
push
inc
cld
and
daa
push
ret
or
loope
jge
add
les
inc
mov
fistps
inc
sub
jmp
mov
les
mov
cmp
inc
dec
and
mov
xchg
xchg
mov
mov
xor
je
mov
pop
aam
sbb
aad
adc
mov
push
push
idivl
dec
je
mov
fidivl
jne
jo
stos
and
xchg
dec
adc
sub
add
sahf
xchg
and
andl
repnz
lods
cwtl
shr
into
dec
orl
mov
sub
mov
ror
fld
mov
addr16
jo
orb
incl
aas
pop
loope
jae
call
pusha
adc
inc
pop
add
in
push
fiadds
fidivl
icebp
or
push
inc
add
xor
push
out
inc
outsl
jae
scas
push
mov
int
mov
push
mov
ret
int3
xor
adc
bound
arpl
mov
sub
push
out
jbe
dec
cmp
cmp
sar
call
insb
lea
out
test
pop
adc
jle
mov
dec
jl
clc
xor
jp
call
dec
mov
mov
cltd
imul
leave
mov
add
imul
sarb
call
mov
movsb
mov
mov
push
adc
bound
add
and
in
mov
jp
mov
rcrl
sti
cmp
sub
and
xor
mov
push
xchg
jecxz
lcall
inc
stc
pushf
jg
and
jae
repnz
add
sti
repnz
mov
popa
adc
test
lcall
jp
aad
xchg
outsb
daa
out
outsl
faddl
sub
mov
popf
cmp
out
lret
daa
pop
mov
push
push
clc
xchg
stc
jge
adc
mov
imul
loop
leave
idivl
nop
fldt
rclb
or
add
xlat
dec
test
mov
push
call
jmp
push
sub
xchg
adc
mov
loope
and
cli
pusha
jnp
dec
push
subl
pusha
mov
or
repnz
scas
cmc
adc
dec
mov
push
jmp
scas
adc
out
fistpl
ficoms
aam
popa
js
inc
cmp
test
push
or
out
mov
cmp
push
fwait
stc
into
in
jno
jecxz
xchg
mov
andb
in
pop
scas
stos
sub
subb
mov
and
or
xchg
in
add
out
int
cmpsb
cli
lcall
ret
enter
out
push
xchg
dec
pop
dec
sub
jnp
pop
xchg
inc
push
inc
adc
aad
cmp
xor
push
iret
loopne
mov
mov
jnp
cmp
xchg
push
cmc
and
jg
or
push
out
mov
sahf
hlt
jmp
js
pop
ret
or
xor
cwtl
aas
lcall
sbb
xor
lods
ljmp
lret
std
inc
fldl
adc
sbb
sub
xchg
dec
push
or
jp
aad
std
jl
or
das
xchg
xchg
mov
sarl
adc
loopne
pop
popa
jnp
jns
call
sub
loope
cmpsb
loop
mov
cmp
loop
outsb
cs
or
cmc
mov
jmp
jne
loop
mov
ficoml
push
dec
inc
add
arpl
jle
push
mov
cltd
popa
fnstenv
xor
je
push
or
mov
andl
mov
mov
mov
pop
sbb
test
das
lock
out
mov
xchg
movsl
or
mov
out
sub
add
in
lods
loopne
mov
test
mov
stos
inc
cmp
fldt
rcrl
pop
pusha
mov
enter
or
dec
cmp
loop
nop
loopne
lret
inc
push
jl
mov
pop
cmpsb
xchg
in
mov
jns
mov
xchg
mov
dec
mov
cmp
mov
push
popa
inc
push
fcoml
push
or
lret
xchg
ret
call
xor
adc
cwtl
push
or
imul
inc
ficoms
test
push
push
jge
mov
inc
cmp
or
aam
mov
pop
jge
dec
insl
clc
int3
bswap
cli
and
or
jb
adc
in
cmp
pop
stos
push
movsl
imul
push
std
jg
jo
xlat
mov
or
or
adc
mov
jae
pop
pop
mov
subb
lret
sahf
jb
int
or
addr16
loope
shll
fsub
push
adcl
in
lret
jg
cs
xchg
push
inc
adc
mov
ds
pop
imul
adc
and
lds
testb
adc
add
push
sti
addl
push
mov
or
fdivrs
xchg
dec
scas
test
dec
faddl
pushf
adcb
cwtl
jge
jg
pushf
xor
mov
pop
mov
fwait
or
imul
loop
mov
cmpsb
push
sarb
or
sub
and
adc
stos
mov
pusha
cmpsl
cmp
popf
mov
xor
adc
in
dec
inc
orl
inc
shr
lds
jns
call
insb
and
sub
sub
mov
inc
lcall
mov
adc
sub
fwait
rorb
arpl
test
testb
xor
xlat
sbb
stos
test
adc
fiadds
adc
and
xor
mov
ficompl
fs
outsl
dec
push
adc
repz
jg
fldcw
ret
pusha
enter
xchg
gs
ret
or
mov
icebp
aad
sub
xchg
pcmpeqw
int3
bound
rcl
mov
and
sbb
sbb
mul
mov
jle
je
inc
test
jge
or
pop
in
test
loope
stos
xor
xchg
das
sbb
dec
inc
adc
pop
inc
push
icebp
mov
lea
pop
xor
pop
pop
cli
xchg
dec
lret
call
ds
xchg
sahf
movsb
pushf
inc
insb
sbb
cwtl
dec
imul
pushf
pop
mov
lahf
add
pushf
cmp
insb
and
jmp
jp
cltd
les
add
push
outsb
lahf
loopne
sti
daa
xchg
ficomps
sub
divl
iret
je
ret
lock
jecxz
es
pop
fwait
sbb
repnz
mov
fildll
pop
mov
inc
jmp
push
mov
sub
push
fld
clc
or
out
cltd
je
adc
jmp
faddp
lahf
cmpsl
mov
mov
loope
je
xchg
add
xor
mov
sub
cmp
xchg
xchg
adc
jl
cltd
adc
mov
mov
push
shufps
cld
cmc
inc
cmpsb
jmp
sbb
adc
fsubrl
iret
inc
sub
jecxz
iret
dec
in
adc
add
push
icebp
imul
sub
sub
adc
cmp
lods
arpl
sarl
mov
push
xor
dec
jnp
in
cmc
call
jns
lcall
aas
clc
mov
sbbb
mov
adcb
mov
call
push
lds
cmp
rcl
cmp
jp
pop
xor
test
mov
lret
inc
pop
pop
dec
dec
jge
mov
sti
jmp
pop
and
test
testl
lods
jmp
lcall
leave
mov
insl
push
stos
or
mov
ds
pushw
mov
movsl
aaa
xor
push
addr16
rcll
mov
xor
mov
sarl
mov
fidivl
jne
out
pusha
nop
adc
repz
or
inc
pop
or
outsb
dec
sbb
push
aaa
incb
mov
sbb
movsb
jae
or
sbb
and
sbb
xlat
pushf
pushf
jbe
mov
xor
call
imul
movsl
push
pop
popf
sub
mov
xchg
sub
imul
cmp
mov
lcall
enter
cli
cmp
pop
pop
cmpb
push
push
push
negl
jecxz
cmpsb
push
mov
mov
aas
stc
inc
test
mov
mov
sbb
lret
mull
and
outsl
mov
mov
test
and
fwait
mov
pop
or
rcll
dec
mov
cmp
dec
or
mov
addb
or
out
push
out
scas
jb
js
mov
xchg
mov
sub
sub
cmp
aad
inc
pusha
jmp
jl
inc
lea
lret
iret
dec
cld
mov
pop
inc
ja
sub
lret
aad
mov
push
sub
cli
jnp
sahf
addr16
push
outsb
shlb
cmp
ja
inc
mov
xchg
adc
les
cmp
sti
push
mov
cmp
mov
test
mov
or
imul
or
push
mov
mov
clc
mov
jmp
xlat
add
inc
test
imull
pop
sbbb
cmpsb
jle
pop
js
jmp
adc
cmp
loop
push
in
add
inc
sub
jno
popa
cs
sub
push
mov
jmp
lock
sbb
pop
jae
loopne
jne
lret
push
jbe
pop
push
and
int3
sbb
rcrb
es
dec
imul
pop
cli
sbb
ficompl
pop
das
mov
inc
mov
inc
aas
std
cmc
push
cld
addr16
aas
adc
mov
lret
pushl
stc
pushf
cmpsb
sub
scas
xor
cli
mov
push
mov
cmc
push
test
and
scas
xchg
and
add
or
popa
adc
mov
nop
dec
add
sarb
decl
fwait
out
jmp
ficompl
cltd
ss
sub
lcall
jg
xlat
gs
aam
loop
dec
rcl
dec
and
mov
jbe
pop
xchg
xor
mov
call
or
inc
or
pop
dec
push
int
xchg
or
adc
jb
or
int
sti
cwtl
push
inc
sub
sbb
sti
add
push
push
shlb
pop
test
dec
inc
push
push
xchg
fstpt
xor
sub
dec
and
adc
jne
sub
ja
cmc
push
insl
or
xor
imul
enter
add
lret
lock
push
push
mov
and
or
sbb
out
movsb
subb
loop
lret
inc
pop
hlt
sub
cmc
push
int3
stc
inc
dec
es
popa
test
mov
lods
jb
loope
clc
inc
pop
lret
xor
inc
inc
aad
cmp
xchg
ds
test
jns
mov
sbbl
shll
jmp
ficoms
xor
jle
fsubl
fists
push
loop
xchg
mov
cli
test
xor
pop
std
jno
jmp
push
inc
pushf
je
adc
jge
dec
jbe
arpl
push
mov
lret
and
inc
and
jo
cwtl
add
jo
out
lock
jae
or
cltd
jne
lods
lods
lcall
push
daa
sbb
mov
and
faddl
popa
mov
aam
nop
jno
mov
mov
and
loop
loope
fistps
cltd
negl
ret
mov
adc
jmp
mov
push
les
mov
mov
imul
aad
lret
loop
jns
mov
add
jmp
cmp
push
mov
imul
jle
movl
or
mov
je
inc
xchg
push
dec
mov
cmp
fwait
call
inc
cmp
mov
cmpsb
jecxz
jle
add
mov
pop
pop
in
in
adc
aad
sub
sarl
subl
cmp
xor
lcall
mov
packuswb
or
aam
pop
shrl
mov
xlat
pusha
lds
insl
nop
inc
test
rclb
lods
int3
push
jge
inc
jg
dec
cmpsb
lret
push
data16
std
jo
xlat
push
pop
mov
and
inc
iret
lock
jno
pop
mov
pushf
call
cwtl
xor
and
sbb
hlt
cmp
rolb
notb
aas
push
mov
adcl
ret
jl
pop
push
in
nop
stc
dec
in
divl
mov
or
dec
les
std
cwtl
mov
push
jae
lods
lret
dec
dec
jno
cmc
movsb
nop
test
ret
in
loop
ret
xlat
push
lods
mov
xchg
pop
jp
sub
adc
out
aas
bnd
mov
out
sub
xchg
add
sarl
std
cli
mov
mov
insb
and
test
in
inc
iret
pop
mov
frstor
insb
or
cwtl
fcoml
xchg
push
out
jmp
iret
cmp
inc
mov
insb
or
inc
pop
push
mov
pop
call
scas
rorl
cmp
fucomip
pop
sub
or
sbb
daa
lock
ss
or
aas
sbb
cmp
xor
pop
subl
dec
push
xchg
sbb
xchg
cmpsl
mov
inc
cmpsb
inc
jle
xchg
jmp
clc
sar
lcall
jmp
xchg
js
xchg
ficoms
jne
mov
xchg
pop
mov
in
xor
sub
les
ljmp
add
pop
call
imul
stc
push
push
sti
je
repz
xor
cmp
pop
mov
ror
jl
dec
out
xchg
add
inc
aas
pop
xchg
call
in
aam
xor
xchg
mov
jbe
or
test
jnp
mov
xchg
cli
add
jno
mov
sub
xor
outsl
lods
ret
out
insl
popa
stos
lods
mov
mov
push
adc
mov
orb
repnz
sub
push
rcl
cmp
push
in
sub
test
jp
add
stos
insl
push
mov
xor
or
pop
mov
jge
push
arpl
dec
xchg
dec
sbb
cmp
loopne
sub
and
iret
xchg
jns
imul
jns
dec
push
int
sub
push
arpl
push
call
ss
cmp
arpl
sbb
insb
xchg
pop
push
loopne
ljmp
mov
pusha
das
mov
dec
adc
sub
push
dec
nop
pop
and
insl
jns
les
lcall
adc
outsb
jge
std
pop
adc
sbb
into
out
dec
faddl
mov
mov
mov
in
enter
mov
and
and
rclb
xchg
xor
cmpsl
jmp
lret
ret
movsb
sbb
xor
das
or
loope
push
aam
pop
and
int3
stos
pusha
scas
sub
jnp
mov
dec
cmp
jl
in
inc
adc
insl
push
outsb
mov
sbb
dec
dec
push
dec
insl
bound
sub
in
es
jno
mov
sarl
cmovg
fdivrp
pop
cmpsl
xor
loope
iret
mov
movsb
js
mov
lcall
cld
sub
dec
or
push
cmc
cmp
and
or
je
in
jle
inc
mov
xchg
add
lds
insb
jnp
ret
cmp
pop
movsb
aad
movsb
pop
movsl
sti
push
shll
or
mov
push
cvtps2pd
pop
cltd
call
cmp
mov
shlb
dec
fsts
push
inc
jno
cwtl
sar
loopne
cmp
arpl
jecxz
ds
je
cwtl
cmp
insl
jns
xor
push
add
out
pop
inc
lret
ror
xchg
sub
dec
shlb
loop
sbb
ret
inc
mov
mov
cmp
xchg
jno
hlt
cmp
xchg
xlat
dec
int3
sbb
jg
xchg
and
dec
pop
xor
subl
and
adc
pop
sbb
xchg
addr16
dec
push
lahf
or
cmp
outsl
cmp
adc
pop
xor
test
std
cmpsl
cli
mov
rorl
jge
fwait
push
xlat
pusha
andb
test
pop
xor
inc
in
orb
ljmp
repnz
inc
jl
cli
jb
add
inc
icebp
pop
inc
or
bound
inc
sti
mov
test
and
mov
xchg
add
xchg
xchg
and
and
dec
pop
popa
sbb
imul
and
xchg
pop
mov
sarl
add
jnp
gs
jecxz
push
cmpsl
mull
add
les
icebp
push
iret
out
add
dec
flds
sahf
dec
jno
addr16
mov
mov
outsl
cltd
nop
cmc
enter
es
or
cli
mov
mov
add
xlat
repz
mov
push
mov
ss
lods
std
gs
enter
mov
clc
mov
nop
push
out
fdivrp
sbb
mov
fisubs
mov
in
push
xor
xor
roll
mov
divl
fisubrs
push
dec
mov
mov
leave
mov
mov
xor
int
xor
or
sbb
push
shll
std
test
fstps
sub
and
xchg
out
repz
cli
mov
cmc
add
movsb
mov
xor
inc
xchg
cmp
cmp
andb
mov
and
lret
stos
gs
shrl
andl
or
int
push
xor
xchg
test
leave
dec
rep
push
mov
push
mov
sbb
test
hlt
and
jge
ljmp
dec
jno
jb
or
mov
or
xorl
mov
mov
jb
popf
jg
bound
dec
mov
imul
mov
cmp
bound
ds
orb
int3
out
adc
subl
jmp
jae
inc
fisubrs
add
call
pop
sbb
push
cmpsl
push
pop
movsl
test
ljmp
call
cmp
mov
je
lahf
inc
jo
popa
jmp
rcll
je
mov
fildll
xchg
push
xor
lea
jbe
fnstsw
or
lds
inc
jle
test
jg
outsb
pop
aaa
jo
nop
nop
mov
xor
dec
pop
sub
mov
cld
jb
popa
out
loop
cltd
das
jecxz
sbb
and
sbb
mov
insl
jecxz
push
jae
mov
out
ds
pop
ljmp
inc
inc
fdivs
sub
or
or
sbb
xchg
cmpsb
popl
sar
clc
jp
push
ret
ds
inc
in
xchg
or
pop
mov
out
and
scas
sbbl
xor
xlat
cmpsl
mov
imul
inc
push
ret
imul
cwtl
out
outsl
push
mov
push
das
mov
cmpps
jno
cltd
sub
push
sarb
std
test
inc
fwait
dec
arpl
shll
mov
imul
test
dec
sub
fisubrl
jg
mov
pop
mov
sbbb
test
xchg
fst
add
inc
int3
cmp
xchg
hlt
adc
push
lcall
fildl
stc
or
in
out
sbb
jno
ret
jns
jbe
clc
js
cmpsb
loop
dec
cmpsl
imul
gs
and
inc
inc
jno
mov
sub
pop
add
adc
xchg
cmp
push
aas
mov
shrl
and
imul
or
mov
adc
out
movl
sbb
inc
scas
shlb
leave
or
lock
adc
ss
int3
xor
clc
jae
and
lret
cli
loope
pop
push
push
push
call
addr16
pop
cmpsl
sahf
xorl
push
or
lds
xor
push
add
push
pop
cmc
aas
jnp
add
xor
fisubrs
movsl
clc
pop
jns
stos
adc
pushf
inc
adc
add
mov
mov
jle
mov
mov
out
ljmp
outsl
xchg
arpl
mov
insb
mov
aad
cld
add
mov
jb
inc
aad
call
jnp
xchg
sbb
mov
inc
and
aaa
mov
inc
outsb
sbb
in
cli
mov
in
data16
xchg
out
insl
cmp
in
push
repnz
jp,pn
xchg
fwait
jns
in
and
mov
inc
inc
popl
dec
mov
mov
mov
in
sti
movsb
mov
popa
sti
push
fsubrp
xchg
dec
mov
jle
insl
lds
rcrb
icebp
jg
jbe
dec
in
or
cmp
mov
pop
in
ss
dec
pop
testb
jnp
pusha
sbb
bound
movsb
mov
filds
movsb
add
std
popa
push
outsl
jmp
push
adc
popl
jns
push
das
cmp
cmp
insb
mov
dec
leave
jmp
pop
mov
repnz
or
inc
je
nop
outsb
sbb
test
add
add
nop
add
dec
lods
iret
jl
add
dec
adc
xchg
pop
clc
std
sub
dec
sub
mov
in
repz
adc
and
aaa
pop
test
mov
pusha
push
lret
mov
push
cwtl
pop
jno
mov
fldl
push
in
xchg
fldt
repz
jb
js
arpl
and
xchg
cwtl
imul
lods
cli
mov
addr16
adc
jne
inc
sub
popf
inc
jmp
leave
loopne
mov
repnz
jnp
popa
mov
mov
push
mov
push
dec
inc
pop
push
lcall
jle
add
dec
fstps
xchg
jae
sbb
xchg
mov
popa
out
xadd
jge
pop
fabs
in
repnz
lods
sti
and
movsb
push
test
pop
shlb
mov
int3
and
inc
jns
movsl
jb
and
jecxz
fisubl
into
lret
and
dec
push
popf
dec
pop
push
jae
xchg
cmc
lods
xchg
hlt
jns
cs
add
jnp
std
das
out
roll
fnsave
or
pop
ljmp
xchg
ja
out
or
std
xor
fbld
loop
popa
and
leave
xchg
sub
xchg
rcl
push
notl
lods
pop
arpl
mov
fdivp
xor
loopne
mov
out
mov
inc
fucomi
xchg
xor
int3
mov
fsubrl
iret
pop
outsb
cmpsl
xor
inc
cmpsl
pop
sbb
fs
jb
aam
clc
xchg
pusha
and
sbb
es
add
adcb
push
add
mov
inc
and
cmp
jg
jmp
sahf
push
ret
iret
aaa
push
sahf
int
movsl
xor
xor
xor
mov
adc
scas
cli
jle
les
xchg
and
inc
jmp
cmpsb
das
or
out
in
lock
or
movsb
lds
out
lds
cmp
pop
and
mov
jmp
mov
or
scas
add
mov
adc
jae
pop
inc
dec
in
jl
je
repz
repnz
mov
into
shll
js,pn
rcll
push
ja
ja
subl
mov
or
fnstsw
mov
push
repnz
imul
fs
cli
inc
nop
mov
test
adc
pop
or
mov
cmpsb
lret
jne
cmp
stos
aas
add
xchg
andb
push
inc
movsl
add
xchg
mov
mov
rcr
mov
ficoms
imulb
stos
cs
adc
push
xchg
lcall
xchg
xchg
add
or
insl
mov
pop
and
aaa
out
loopne
sub
and
addr16
cwtl
jne
loop
sub
and
cwtl
aaa
inc
adc
pop
mov
aad
push
mov
xchg
jns
scas
sub
cmp
pop
jl
pushf
adc
sbb
and
repz
or
xchg
adc
mov
loopne
lods
ret
cltd
adc
je
test
outsb
ret
out
jbe
lds
cwtl
sbb
mov
and
dec
iret
cmp
jp
insl
mov
xor
cmpl
arpl
pop
mov
in
push
sbb
outsb
add
xchg
and
xor
ja
mov
add
aas
hlt
xor
fadds
scas
push
out
push
stos
ljmp
ljmp
sbb
jl
jne
mov
negl
jb
pushf
mov
js
cmpl
mov
mov
or
jmp
lret
movups
jecxz
mov
lods
xor
cmpsb
int3
subb
jecxz
ljmp
data16
or
add
jo
hlt
and
sti
cmp
mov
lods
mov
add
ljmp
ds
mov
push
cmp
xor
pop
js
aad
test
aam
rcrb
or
dec
gs
cmp
int
inc
cmp
test
incl
int3
testl
dec
dec
arpl
push
loope
into
add
enter
out
aas
pop
mov
cmp
in
orl
jo
sub
movsl
mov
xchg
pop
mov
cld
xchg
mov
testb
nop
out
lods
add
inc
iret
mov
pushf
sub
enter
arpl
mov
out
and
and
mov
lock
mov
test
shr
in
fwait
sbb
ret
ljmp
cmp
mov
mov
jns
test
jp
testb
pop
cmp
jnp
movaps
xor
push
xor
clc
fidivl
daa
cmp
xchg
mov
enter
sbb
hlt
in
xchg
test
std
mov
shll
stc
ret
ss
xchg
fisttps
sub
lods
add
or
stc
gs
and
test
xchg
xchg
and
ret
fimull
xchg
mov
sbb
push
jge
fwait
cmp
clc
or
mov
push
and
popl
pusha
and
dec
push
inc
stos
pop
fists
mov
xor
mov
lcall
lods
fucomip
les
jle
mov
mov
shll
icebp
or
aaa
shlb
push
out
mov
xchg
imul
cmp
pop
mov
dec
inc
cmp
pop
inc
cmp
js
int
subps
adc
xchg
mov
and
sbb
mov
inc
int3
xchg
or
in
dec
sbb
enter
cmp
push
sbb
sbb
xchg
sub
mov
lret
test
dec
push
inc
data16
cmp
insb
lret
adc
jl
jns
jg
shll
mov
sub
mov
cmp
addb
leave
and
iret
test
mov
pusha
and
cmp
leave
mov
andb
push
cld
mov
lahf
pop
inc
setg
lds
dec
jae
sub
cli
fdivrs
xchg
in
mov
call
in
xchg
imul
add
or
cwtl
pop
shrb
cmp
pop
mov
add
and
xchg
pop
fst
mov
xor
mov
in
popf
jne
mov
jg
loopne
sub
push
dec
clc
pop
sub
pop
and
test
fwait
iret
es
lods
sbb
sbb
popa
rolb
pop
push
mov
stc
and
test
push
xchg
ss
and
dec
iret
daa
mov
sbb
stc
jnp
adc
mov
sbb
dec
cmp
sub
or
dec
loopne
sbb
rol
cld
and
dec
bound
ret
adcl
out
call
xchg
xor
mov
out
in
or
shll
aas
shll
cmpl
lcall
sbb
data16
gs
sub
jp
int
movb
fmulp
sbb
ja
dec
fcoms
hlt
jns
fdivrs
mov
mov
push
clc
lcall
inc
rorb
ja
dec
rcl
xor
ja
push
xor
mov
pop
inc
frstor
movsb
repz
mov
bound
call
cmp
xchg
pop
dec
mov
dec
xchg
mov
mov
scas
aam
lock
leave
mov
push
mov
xchg
and
lock
leave
add
xchg
and
fisttps
push
pop
inc
mov
fiadds
pop
pop
cmp
xchg
aam
std
sbb
mov
lcall
add
fs
xor
ja
pop
addr16
pop
xchg
ss
sub
inc
mov
insl
ljmp
adc
push
sahf
push
stos
push
sub
sub
aaa
xorl
rclb
stc
dec
or
cmpsb
aaa
inc
aaa
shlb
pop
fisubl
mov
cwtl
dec
jo
cltd
das
and
jns
jb
test
flds
cmpsl
adc
cmp
scas
pop
sub
mov
andl
ds
in
icebp
dec
fstp
inc
pop
outsb
adc
bnd
iret
outsb
outsb
mov
cmpb
stc
rcl
push
hlt
dec
cmpsb
scas
fwait
rolb
es
sbb
xlat
cmc
popa
cmpsb
movl
adc
pusha
and
loopne
nop
adc
push
mov
imul
cwtl
arpl
mov
add
and
test
movsb
mov
jno
pop
call
jno
inc
pop
mov
lods
adc
daa
lret
cltd
call
sub
jle
aam
icebp
sbb
mov
pop
push
sub
iret
jle
and
dec
pop
mov
out
into
mov
aam
xchg
loop
sbb
mov
and
dec
jae
out
jmp
mov
popa
add
test
dec
push
lcall
bound
test
in
test
call
dec
out
pop
sub
push
dec
jmp
push
adcl
int3
cmpsl
jg
cli
clc
cmp
nop
cmp
nop
add
loop
add
popa
mov
jge
addr16
pop
fcomps
fsubl
loop
stc
mov
cmc
jo
mov
shrl
add
cmpsb
inc
nop
and
xorb
xchg
push
arpl
pop
ret
nop
mov
pop
xchg
lds
and
ret
mov
jns
mov
call
je
and
push
push
or
in
imul
mov
popa
mov
adc
pop
outsb
mov
lret
xchg
pop
adc
enter
jge
aaa
outsl
xlat
cmpsb
push
sbb
loope
sub
sub
pop
pop
subl
push
fstl
or
into
xchg
jl
cmp
movsb
jge
stos
jnp
dec
aad
or
sbb
jo
movsb
pop
xor
das
fdivrs
xlat
cmpsb
xor
jg
in
repz
pop
sbb
lea
cmpsl
in
cwtl
add
add
adc
xor
pop
and
push
jmp
add
mov
adc
cmpsl
fisttps
insl
clc
hlt
and
fldl
mov
jns
test
jp
lods
loop
loop
xchg
and
or
dec
jae
push
in
aam
lret
mov
mov
scas
int
mov
fs
jnp
push
les
mov
xor
mov
xor
inc
xchg
ljmp
fdivl
cld
mov
xor
sbb
mov
movsb
andl
sub
mov
cmp
movsl
shlb
gs
jge
xlat
subb
mov
cmp
add
jb
mov
jns
or
mov
or
dec
dec
outsb
push
and
inc
inc
repz
xorl
mov
stos
jns
mov
int3
dec
ret
rcrl
arpl
mov
lea
jns
mov
inc
insb
pop
push
pusha
ja
sarl
pop
fwait
mov
mov
pop
sbb
mov
add
jns
xchg
stos
adc
and
das
aas
inc
sbb
inc
incl
mov
mov
in
in
mov
push
int3
add
mov
adc
cmp
loopne
xchg
negb
dec
fidivs
add
mov
outsl
outsl
lods
fstpl
mov
pop
cli
jb
and
cwtl
mov
and
leave
inc
or
imul
push
ficomps
cmpsb
leave
sbb
cmc
sti
adcl
mov
out
insb
rcll
jne
lcall
out
shlb
push
push
mov
loop
dec
pop
jecxz
or
mov
or
sbb
xchg
pop
inc
jg
inc
and
imul
jns
int
scas
cmp
mov
pop
xor
xlat
push
xor
jb
and
cmp
ds
ret
sbb
mov
cltd
test
push
cmp
sub
imul
mov
adc
sbb
lods
js,pt
add
or
in
imul
jmp
push
cmp
cmp
cs
jno
jl
rorb
mov
pop
in
cmp
fdivl
cmp
inc
mov
aam
xor
sbbl
mov
sbb
mull
jecxz
out
repz
ds
sub
cltd
mov
lock
or
sbb
or
cmpb
daa
ja
inc
or
fnstenv
push
insb
mov
sub
push
adc
pop
es
push
sbb
test
outsl
popa
pop
inc
lret
xchg
test
xor
pop
bound
mov
arpl
aaa
filds
adcb
mov
pcmpgtb
inc
push
inc
outsl
ret
loope
xchg
push
les
push
push
xchg
add
pop
dec
dec
enter
mov
sbb
xchg
xchg
std
xchg
scas
mov
xor
daa
add
push
mov
jge
fcmovne
fistpll
and
testl
call
test
cmpsb
dec
decl
fstl
xchg
add
das
out
dec
pop
repnz
test
mov
jl
pop
dec
cmc
and
enter
outsl
sbb
out
pop
dec
or
xor
mov
mov
push
dec
push
pop
xor
sub
sub
adc
sti
push
adc
loop
mov
leave
insb
inc
out
inc
sub
insb
pop
aas
sbb
xchg
mov
lock
xor
xor
push
xor
xlat
cmpsl
ja
lret
jle
jae
nop
adc
icebp
sbb
xchg
ljmp
jae
push
gs
push
sub
adc
mov
inc
loopne
into
cld
rolb
jb
jne
mov
ret
in
adc
cmp
cmpl
push
movsb
xor
subb
jge
jmp
addb
mov
or
rsm
ds
nop
jp
outsl
inc
and
dec
fldcw
mov
movsl
mov
mov
addr16
pop
dec
adc
xchg
repnz
ret
outsl
das
fcmovbe
pop
cwtl
call
sbb
pop
adc
std
pop
cmpsb
out
jae
xchg
test
push
js
xchg
insl
aam
and
sbb
cmpsb
mov
pop
aam
inc
mov
and
in
nop
cmp
sbb
outsl
mov
mov
jns
xor
ret
fs
rorl
inc
cli
rcll
push
sub
fs
pop
movsl
pop
jno
lret
repnz
mov
cmp
adc
pop
into
xchg
xor
inc
loopne
aaa
dec
arpl
inc
xor
mov
push
pop
je
cltd
inc
jmp
roll
pop
pop
push
mov
std
push
inc
push
xchg
data16
mov
inc
dec
jns
xchg
push
pop
pop
dec
in
cmp
or
mov
je
shlb
iret
sub
ret
popa
and
das
imul
addb
mov
ret
lahf
insl
jne
push
fistl
sub
movl
orl
stc
inc
lock
pop
shl
js
and
xor
adc
fildll
lret
dec
fcoms
and
push
sub
jo
fistps
adc
sub
pop
mov
mov
xchg
push
inc
add
add
into
aad
das
pop
push
lahf
aam
out
fldl
cmp
cmc
je
mov
adc
lea
jl
push
cmp
daa
sub
jnp
pop
jno
mov
lods
ljmp
movmskps
jmp
pop
lcall
mov
pop
fcomps
mov
cmp
adc
mov
adc
inc
mov
mov
imul
mov
jge
aad
icebp
ja
aas
cwtl
push
sbb
pop
pop
sub
outsb
mov
out
jne
sbb
sahf
cld
cmp
lods
mov
fsubs
and
mov
mov
pop
loop
js
sbb
ret
mov
iret
nop
jl
mov
aad
xchg
loop
and
lock
out
clc
jne
das
int3
dec
jmp
and
in
xchg
out
jmp
mov
fwait
mov
fidivl
sbb
ret
mov
scas
mov
pop
call
aas
cmp
sbb
pop
push
inc
inc
add
sbb
ja
popf
jle
lods
jp
mov
xor
data16
js
inc
fnop
push
and
idivb
hlt
and
pop
or
sbb
cli
in
jecxz
loopne
scas
das
jns
shll
pop
and
mov
mov
notb
es
push
pop
in
loop
lds
sbb
subl
das
mov
dec
sbb
gs
sbb
mov
cmp
ret
push
pop
inc
add
call
dec
push
mov
jecxz
in
xchg
iret
ljmp
inc
ficoms
fs
jge
mov
das
mov
mov
addr16
movsl
loopne
cmpps
pop
xor
lcall
sub
adc
mov
pop
ds
icebp
mov
lcall
lods
pop
mov
cli
inc
loop
xchg
in
inc
rorb
sti
rcrl
or
insl
add
ss
cli
pusha
out
jne
xchg
out
adc
push
movlps
adc
loop
fiaddl
dec
sbb
sub
rolb
push
adc
addr16
decb
das
stos
das
or
mov
lret
jl
sahf
inc
jle
rcrb
aad
addr16
lods
inc
and
rcrb
push
jg
out
jbe
adc
push
mov
add
xchg
popa
cmpsb
mov
xor
rcll
fcomps
xchg
rclb
and
mov
mov
adc
ror
mov
fistps
push
js
into
leave
dec
int3
scas
dec
mov
movb
mov
and
in
adcl
cld
jmp
scas
lods
add
sahf
xchg
imul
xor
jmp
mov
and
pop
inc
mov
bound
cmp
adc
add
mov
mov
add
sti
cmp
fsubs
lods
push
xchg
loope
add
jp
sub
loop
lahf
push
pop
cmpsb
inc
loope
ds
movsb
lods
mov
fsubrp
repz
dec
ret
sbb
pop
dec
jge
inc
outsb
adc
out
push
bound
stos
popa
add
rclb
adc
xchg
dec
jae
dec
lods
cmp
mov
and
outsl
mov
clc
mov
xor
adc
mov
pusha
popf
xrelease
add
push
nop
inc
jbe
bound
push
test
mov
sbb
dec
mov
push
dec
pop
sbb
cmp
and
cld
fdivrs
stc
add
sbb
mov
xchg
leave
loope
call
les
ljmp
cmc
push
movsl
pop
xchg
pop
cli
stc
add
js
andl
xchg
cltd
mov
mov
jbe
xlat
divb
push
cmp
mov
cmp
mov
imull
mov
mov
mov
add
xor
fld1
jae
mov
dec
leave
mov
imul
out
inc
and
lds
jle
mov
pushf
inc
cld
sub
and
mov
mov
rcrl
xor
mov
xchg
xchg
int3
inc
cmp
lcall
jge
xor
jno
lds
cmp
mov
in
repz
xchg
pop
es
jle
xchg
pop
imul
push
xchg
add
insb
je
cmpsb
jns
pusha
aas
pushf
mov
add
mov
xchg
add
es
xchg
push
into
bound
xor
mov
out
fcomp
lahf
xsave
add
add
inc
les
jg
cmpsb
push
sti
push
jp
aam
jle
js
lods
andb
or
andl
in
stos
dec
lds
mov
lcall
pop
mov
pop
fsubrs
adc
push
inc
mov
loopne
xor
mov
xchg
or
stos
in
mov
push
aam
mov
push
jne
movsl
scas
mov
setno
sahf
mov
dec
gs
cld
jecxz
sbb
xor
sub
jno
movsl
data16
xchg
les
cli
jmp
mov
mov
mov
mov
sub
pop
adc
add
mov
lods
repnz
andb
xchg
insw
add
in
lcall
push
imul
cli
sub
jmp
mov
test
pop
xchg
jo
in
mov
nop
orb
out
loop
pusha
repz
in
popl
mov
fldt
shll
cltd
xchg
rcrl
jns
pop
cwtl
sub
push
iret
jge
fisubrl
jg
test
mov
mov
jae
daa
scas
mov
ficoml
int3
in
adc
lods
add
sbbb
mov
sub
xor
dec
rorl
sbbb
lcall
adc
add
pop
pop
gs
int3
repz
sub
cmp
rcr
insb
push
in
filds
adc
cli
dec
or
or
cmp
orb
jecxz
or
ja
outsl
push
das
or
mov
mov
xchg
testl
adc
je
out
dec
aas
dec
lret
jmp
add
ss
aam
fistps
sub
pop
popf
in
addr16
ret
rep
add
insl
push
push
stos
and
adc
mov
loopne
arpl
ret
cltd
shll
jns
lcall
int3
jo
scas
pusha
cmp
push
jbe
loope
mov
insl
mov
push
mov
pop
psubsb
inc
es
inc
jp
popf
pop
mov
or
and
xor
enter
adc
sub
fistps
adc
rclb
adcb
pop
mov
fsubs
mov
insl
push
xor
neg
out
adc
fdivl
sti
clc
pop
pop
nop
enter
cmp
adc
sbb
jge
testb
or
mov
ret
popf
sub
add
clc
and
insb
mov
pop
sarl
pop
or
mov
loop
cwtl
cmp
lcall
and
jg
mov
icebp
fldl
add
fdivrs
test
and
aaa
or
in
negb
adc
cmp
add
dec
ds
testb
outsb
xchg
add
in
test
and
dec
idivb
xor
or
xor
add
or
fucomip
or
sbb
dec
filds
ret
daa
movsb
pushf
les
movsl
mov
test
cmp
and
jg
iret
pop
gs
je
andb
fwait
insb
fwait
sbb
jae
adc
mov
push
out
cmpsl
cmpsb
ret
clc
fs
jg
popa
cmovnp
popl
pop
or
pop
jno
mov
xchg
inc
out
movsb
movsb
loopne
add
jmp
push
cltd
adc
dec
lret
cmpsl
adc
push
pop
push
cli
sahf
push
mov
dec
push
pop
cli
or
pop
stos
xorl
out
jo
js
lods
jns
pop
movhps
jp
lods
adc
jp
xchg
fbstp
mov
inc
cltd
pop
sub
xchg
dec
ja
xor
call
clc
push
xchg
cs
jae
pop
ret
clc
mov
add
idivb
lea
hlt
push
int3
inc
dec
mov
jnp
dec
and
lahf
and
aad
in
cmpl
pop
nop
sbb
mov
xor
or
mov
ret
testb
mov
cli
movsl
inc
push
out
scas
fisttpl
and
sub
adc
scas
adc
inc
dec
sub
repz
jo
adc
out
notb
cwtl
adc
adc
cli
aad
xchg
sub
jno
xor
jmp
jbe
aad
push
cmp
mov
cmp
arpl
xlat
adcb
sti
nop
cmp
sbb
adc
sbb
int3
mov
and
lcall
and
arpl
jns
push
xor
sub
repnz
and
jno
dec
sbb
movsb
xor
loope
sbb
mov
adc
test
sarl
iret
dec
in
jmp
mov
adc
push
ja
jo
fmull
mov
adc
sub
pop
inc
popf
adc
jmp
xlat
mov
sbb
lods
or
out
repz
jle
push
addr16
dec
push
mov
sub
push
lods
cltd
pop
push
push
pop
pop
mov
inc
adc
mov
daa
push
lds
push
into
aaa
pop
insb
sub
imulb
ja
lcall
stos
data16
push
mov
test
pop
xor
mov
in
out
icebp
add
shlb
inc
push
mov
jmp
sub
jl
adc
jb
mov
and
xor
add
or
adc
mov
sbb
loopne
cltd
sub
in
push
out
outsb
shll
mul
or
push
data16
cs
sub
loope
test
fcmovnu
and
je
data16
dec
je
jae
cmp
fistpll
mov
adc
lret
dec
xchg
jb
mov
les
out
ds
xchg
and
xchg
mov
jne
xchg
fldenv
or
xchg
mov
add
stos
jae
jno
xor
push
ljmp
dec
aad
jns
or
out
in
mov
outsl
dec
push
push
or
mov
jae
pop
es
inc
jmp
and
js
testl
in
or
enter
mov
enter
js
cltd
sti
mov
popa
idivb
xchg
mov
or
rolb
imul
cmp
imul
test
xor
ss
push
and
mov
add
sbbl
mov
into
sub
jo
lods
cmp
jg
and
mov
cmp
pop
out
sti
shrb
dec
pop
xor
and
dec
add
mov
loope
stos
or
pop
xor
data16
push
cltd
loopne
xlat
push
dec
les
jge
xchg
xor
imul
fdivs
fistpl
pop
int3
jae
and
pop
mov
aad
les
sahf
mov
aas
or
pop
jle
pusha
add
jmp
and
jmp
inc
mov
mov
je
lock
fs
icebp
jo
sahf
xchg
cmpsl
mov
shrb
out
cmpsl
lock
sub
jne
pop
mov
loop
dec
cmc
leave
enter
lock
into
shrl
aas
enter
scas
jmp
add
sub
out
jno
jp
or
dec
mov
sbb
lea
xor
loopne
jge
loope
sbb
fisttpll
ds
in
push
stos
push
jnp
sub
icebp
add
aaa
stos
lock
pop
jo
movsb
lock
and
pushf
jnp
dec
into
and
xchg
int
pop
std
iret
pop
test
ret
lret
adc
mov
iret
imul
nop
loopne
and
arpl
sub
shrb
inc
xor
mov
fucomi
loopne
or
std
lcall
jae
push
jp
test
adc
imul
dec
xor
pop
sbb
fcomps
mov
push
sub
loopne
adc
sbb
fisubrl
pop
cmp
inc
adc
out
fildl
arpl
sbb
mov
xor
ja
dec
js
cmc
ja
dec
cwtl
mov
mov
dec
jle
mov
leave
jno
shll
push
pop
xlat
popf
pop
sbb
stos
pop
gs
push
dec
cltd
movsl
inc
pop
insl
mov
jecxz
test
stos
inc
sub
add
xchg
push
xor
dec
jno
adc
mov
iret
cmc
or
je
mov
pop
push
dec
dec
mov
sub
jg
js
xchg
inc
aaa
xchg
stos
popf
sahf
inc
sbb
push
mov
adc
nop
jnp
push
mov
sub
mov
jp
aam
loopne
mov
xor
dec
sarb
dec
cltd
or
cltd
stos
rorb
fnstcw
cmp
sti
aaa
and
and
out
lods
push
xchg
mov
pop
lods
xchg
add
mov
out
pop
inc
push
imul
pushw
add
xor
push
add
pop
jge
sbb
adc
dec
jle
mov
and
or
xor
inc
scas
rcrl
lcall
push
xor
movsb
sti
in
in
outsl
lods
cmp
shlb
lock
fs
mov
adc
sub
sbb
xor
mov
adc
outsl
xchg
pop
dec
cmp
sbb
dec
stos
lods
fs
es
in
push
cwtl
fmul
cmp
aad
out
mov
mov
push
pop
cmc
or
enter
int3
pop
mov
cld
pushf
sahf
xchg
push
in
xchg
dec
dec
daa
mov
lock
shlb
js
testb
leave
into
std
fs
test
bound
iret
inc
pusha
xchg
mov
daa
dec
cmpsl
push
daa
aad
jp
push
dec
xchg
push
or
mov
sbbl
fnstcw
jb
sbb
xchg
hlt
lds
mov
andb
pop
adc
xorb
shl
inc
cmpsb
shll
pop
sbb
push
jnp
xor
jns
cwtl
ja
pop
lea
in
mov
mov
and
je
jp
or
inc
mov
sub
jno
or
scas
jo
fadd
push
pusha
dec
adc
xchg
dec
aam
dec
repz
rolb
les
lods
push
mov
xchg
addb
int3
fcmovnbe
movnti
mov
stc
jge
sub
mov
out
repz
fwait
movsl
cmp
mov
and
add
ret
pop
mov
movsb
cwtl
mov
xor
lret
inc
sub
fldt
mov
je
in
std
in
pop
ljmp
lret
rol
xor
in
std
ljmp
ds
jmp
iret
int
pop
mov
xor
xor
xchg
bound
push
sub
jb
pushf
test
xchg
stos
inc
jp
dec
xor
sbb
je
loop
pop
push
push
adc
mov
jnp
dec
frstor
in
aaa
pop
pop
fstpl
lods
inc
repz
lods
mov
lods
lahf
adc
sbb
test
stos
into
mov
aam
std
jmp
daa
push
jecxz
sahf
lock
pop
gs
xor
push
gs
stos
test
mov
shrl
jg
fwait
iret
mov
push
ss
or
add
add
jmp
sbb
and
sahf
popl
sub
es
std
andl
inc
in
das
xor
fmulp
sarl
and
std
adc
aam
dec
test
lret
jbe
push
fdivl
push
or
jle
mov
dec
mov
mov
lret
xor
ret
ljmp
adc
loop
pop
lods
je
adc
stos
xor
push
pop
push
loopne
add
pop
push
pop
and
lret
icebp
mov
push
inc
daa
ss
loope
xor
sahf
pushf
repz
inc
push
pop
xchg
dec
sub
or
sti
push
push
xchg
ret
movsl
pop
shl
or
das
in
cmp
dec
cs
insl
xor
test
mov
jg
ss
push
bound
aas
pop
lret
add
push
fs
inc
iret
stc
jg
add
ja
dec
lds
call
push
add
cltd
sub
xchg
test
xchg
push
pop
mov
scas
int
add
cmp
push
dec
insb
adc
das
lahf
fs
fistps
insb
xchg
shl
loopne
push
loopne
icebp
pop
xor
xchg
cld
dec
mov
scas
jb
mov
lock
fidivs
jnp
aad
mov
cmp
addb
ja
pusha
sarl
rcl
in
in
pop
movsl
movsl
aas
mov
mov
pop
adc
jg
push
jmp
mov
movsl
add
lcall
or
cwtl
dec
pop
inc
movsl
in
cmc
mov
aas
loop
mov
test
sbb
push
data16
mov
shlb
push
and
insb
add
out
mov
add
int3
mov
xchg
sbb
sbb
sub
jecxz
adc
testl
add
and
cmpsb
add
bound
sub
pop
repz
push
repz
xchg
or
lods
fnstcw
lods
push
push
lret
dec
add
mov
xchg
sub
movsb
jno
mov
push
fists
mov
fidivl
cmpsl
cmp
xchg
repz
pop
push
lahf
outsl
mov
push
cld
xchg
addb
jnp
or
scas
xor
mov
jmp
fwait
popf
stos
data16
lock
icebp
dec
cli
gs
mov
stc
push
inc
imul
jns
hlt
les
test
sbb
adc
fldl
and
mov
lahf
push
bnd
filds
pop
push
xchg
std
out
jno
xchg
iret
cwtl
xchg
popa
jno
jmp
andb
rcr
push
dec
mov
xor
sub
lret
in
divl
mov
ss
gs
mov
sbb
rcl
push
in
xor
pop
and
loope
out
adc
repz
xchg
jp
stos
xor
or
and
xchg
mov
mov
hlt
sub
out
and
test
insl
adc
out
sahf
hlt
xor
mov
loopne
sbb
stc
popa
popf
inc
ss
jnp
das
rorl
push
push
sub
cmp
push
jno
xchg
shll
push
rcrb
xchg
dec
in
jp
mov
popf
je
pop
and
in
cld
shrl
push
loopne
sub
cmp
mov
out
in
in
pop
dec
inc
imul
pushf
adc
enter
loopne
test
xlat
arpl
jmp
sbb
sub
ss
lods
fisttpll
lcall
nop
inc
ffree
jmp
push
add
mov
cmp
flds
ret
repz
into
mov
loop
test
xchg
mov
dec
mov
inc
push
xlat
popa
jno
lock
mov
fildll
dec
mov
rcrl
push
je
adc
xor
data16
pusha
xor
pop
cmp
xor
data16
jl
jb
movups
xor
rcll
addr16
dec
sbb
and
lds
add
push
lea
mov
mov
jmp
jl
inc
inc
cmp
stc
fildl
dec
insb
sub
int
arpl
cli
test
sub
mov
and
mov
push
nop
aas
cmp
bound
pushf
movsb
inc
mov
add
dec
pop
test
std
repz
lods
sbb
flds
mov
orb
add
xlat
sbb
aam
and
aam
ss
push
push
mov
xchg
fildl
mov
sbb
adc
je
push
into
mov
lods
and
mov
or
int3
aaa
adcl
mov
dec
sub
bound
or
xor
lds
addr16
test
ja
add
mov
or
int
enter
mov
cmp
push
push
and
imul
out
dec
mov
xor
and
mov
cmp
int
jmp
sbb
lret
mov
and
and
mov
xor
outsb
jb
add
mov
xor
xor
lods
stc
fisubl
int3
lcall
or
out
mov
enter
xchg
pop
inc
femms
xor
fdiv
sahf
enter
push
mov
daa
mov
jns
inc
adc
lea
dec
jle
push
scas
mov
out
popa
stos
sbb
rcll
cmp
js
and
fidivl
sbb
js
cwtl
pusha
sub
push
pop
push
fs
mov
dec
lods
insb
test
cmpsb
mov
cmc
pop
stos
or
inc
out
add
cmc
and
idiv
xlat
jbe
inc
bnd
andb
stos
ret
mov
add
mov
add
dec
mov
ret
mov
pop
pusha
enter
test
adc
fnstsw
adc
enter
inc
subl
add
jo
jb
ss
dec
jecxz
mov
cmpsb
fmull
jb
pop
popf
incl
and
test
int3
es
cmp
and
es
or
mulb
out
lods
pop
cmc
pop
xlat
mov
test
push
iret
test
cmp
xor
aas
push
andl
cli
icebp
popf
enter
ret
adc
xor
jo
notl
in
data16
iret
fldcw
pusha
testl
adcl
adc
cmp
push
outsl
lods
sbb
in
cwtl
add
push
jg
mov
ror
adc
dec
ret
fisubs
pop
daa
notb
test
rcrb
inc
cmp
roll
bnd
push
fidivrl
insl
add
push
sti
sti
mov
adc
lret
stos
fstps
sub
mov
and
call
lret
jnp
jnp
bound
mov
adc
push
xor
clc
loope
out
xor
jmp
sub
inc
call
add
fiadds
or
pop
jp
andl
pusha
cld
bound
dec
enter
ret
mov
rcrb
jp
mov
mov
fwait
scas
hlt
xor
dec
pop
and
sbb
jb
or
mov
inc
mov
les
and
cmp
cs
int
xor
push
bound
jo
cmpb
das
in
les
into
sub
shl
xor
lahf
lahf
pop
mov
pop
mov
mov
sub
adc
inc
rcr
lods
test
mov
xchg
xchg
or
cmp
imul
push
mov
dec
lock
sbb
ret
lcall
pusha
cmp
adc
dec
mov
rclb
orb
in
enter
shll
dec
sub
push
stos
ret
pop
jecxz
sub
adc
movsl
mov
imul
mov
mov
stos
cltd
or
dec
clc
push
pop
sub
push
cmpsl
push
jecxz
xor
mov
ror
adc
push
repnz
mov
add
andb
idivb
and
lock
mov
and
mov
hlt
xor
xchg
mov
sub
jno
mov
int3
loope
xor
jno
cmp
fiaddl
xor
mov
xlat
inc
sbb
add
add
sub
cld
pop
inc
and
cmovno
arpl
mov
shlb
sub
inc
xor
ret
aas
lods
ret
push
push
mov
ljmp
push
adc
sub
pushf
jbe
movsl
inc
testl
mul
lods
leave
fiaddl
push
cmp
fs
pushf
push
mov
stos
cmp
xor
xchg
sub
xor
lods
adc
dec
rcll
and
pop
pop
mov
sbb
push
xchg
inc
repz
mov
pop
inc
lods
jbe
and
push
push
inc
push
add
mov
xor
incb
mov
cmp
inc
pop
cmp
ret
mov
mov
pop
or
cwtl
sbb
push
arpl
scas
cmp
fdivrl
sarl
lcall
lock
jbe
and
and
out
push
in
movsb
fadd
xlat
fcoml
das
sub
dec
mov
daa
lret
aas
inc
jno
or
lcall
fmull
rclb
adc
into
mov
ss
popf
movsb
das
cwtl
dec
cld
xor
aas
repz
lods
imul
inc
pop
call
adc
mov
jle
scas
and
adcb
pushf
cmp
call
psubusb
repnz
xchg
mov
rcrl
mov
addl
xchg
daa
xchg
pop
incl
add
push
shlb
js
imulb
push
out
jno
xor
bound
shlb
pop
inc
add
xor
aas
or
cmp
fistpll
cmp
mov
iret
inc
xor
jle
aaa
int3
mov
ljmp
out
rcl
out
mov
test
cmc
cltd
cmp
push
and
fidivrs
sbb
ret
sub
jnp
aam
mov
sub
inc
xchg
insb
add
push
lods
mov
addr16
rcrb
rorb
ljmp
and
jg
sbb
jno
es
mov
add
inc
jecxz
xorl
test
insb
mov
push
es
xchg
aad
mov
add
pushf
mov
fiaddl
add
sbb
push
adc
pop
inc
stos
sub
sbb
mov
movsl
imul
pop
ret
std
stc
rorb
scas
shrl
xchg
cmp
movb
or
push
aaa
mov
mov
pop
or
jg
dec
jle
vcvtss2sd
fstps
inc
push
mov
xlat
pop
push
push
add
cli
cmp
adc
test
or
jae
mov
cmp
shlb
imul
in
mov
je
insl
mov
sbb
in
sub
push
insl
jnp
mov
out
xchg
mov
sbb
std
push
mov
add
xchg
and
icebp
popf
inc
inc
xchg
mov
cltd
mov
leave
mov
sbb
cmp
nop
push
outsl
cli
pop
mov
pop
xorl
inc
hlt
jnp
push
das
call
out
sub
cmp
into
sbb
cmp
cmp
jnp
mov
cli
clc
lods
les
adc
jb
punpckldq
xor
out
push
out
cmp
add
data16
mov
xchg
aaa
adc
pop
fcompl
push
push
push
pushl
lds
mov
jecxz
loopne
jmp
ljmp
inc
add
ret
test
stos
lods
sbb
das
ss
sbb
push
fs
push
and
mov
out
test
repnz
test
outsl
cld
fcmovnbe
dec
lahf
jne
push
mov
push
sub
pop
and
les
adc
ss
push
inc
pushf
dec
sub
lahf
and
icebp
cmp
jmp
inc
inc
inc
fstl
push
mov
inc
dec
bnd
jle
xor
mov
inc
out
mov
int
fwait
adc
lret
pop
mov
aam
insb
and
xchg
stc
inc
addr16
inc
das
sub
fcoml
and
sbb
push
adc
loop
sbb
inc
mov
test
jecxz
jmp
and
stc
cs
lret
inc
jg
or
sbb
jb
sahf
cli
push
push
jecxz
mov
push
fisubrs
fwait
test
leave
ret
call
mov
adc
push
and
clc
orl
xchg
push
xorl
popf
mov
ja
out
xchg
enter
cs
test
nop
repnz
push
mov
or
scas
movsl
orl
add
and
mov
push
dec
rcrb
cmp
jg
fstl
fwait
sub
xchg
or
pop
sub
pop
ret
pop
xor
xchg
or
cmc
mov
adc
xor
jo
xchg
inc
fidivrs
in
adc
and
add
in
cmp
mov
cli
jo
adc
push
es
mov
lods
push
adc
std
cmp
jns
push
repnz
movsb
int
pop
ss
xchg
stos
push
insb
mov
loopne
push
jp
movsb
mov
adc
lds
sub
jl
xchg
push
dec
jno
push
loope
imul
ret
cmp
rol
ficompl
in
ret
scas
xchg
mov
sub
xchg
xlat
outsb
sti
push
xor
cmp
outsb
pop
mov
int3
cmpsl
sbb
shlb
shlb
repnz
cmp
fmuls
pop
mov
call
pusha
mov
push
xchg
cmp
stos
dec
outsb
mov
adc
sti
repz
and
inc
sbb
icebp
jl
out
insb
lock
aam
cli
jmp
or
cltd
lea
sarb
push
adc
mov
test
xchg
divl
sub
repz
arpl
push
push
jne
push
jbe
jmp
ret
mov
sti
movsl
out
inc
int3
cmp
xor
pop
scas
cmp
rorb
inc
jns
cwtl
call
push
xor
in
loope
jp
cmp
pop
push
orb
sahf
cwtl
scas
jno
iret
fdivr
ds
jl
lcall
push
cmp
or
dec
stos
das
hlt
mov
pop
test
xor
xchg
pop
jmp
inc
jb
pop
shlb
add
fdivs
cmp
inc
cwtl
jbe
call
cmp
pop
add
ja
xchg
xchg
pop
iret
pop
jecxz
scas
sbb
scas
cld
fidivrl
cmp
push
subb
jmp
xor
mov
sub
or
and
dec
call
fwait
mov
iret
rcrl
aaa
xchg
scas
push
aam
cmp
ficoms
or
pop
in
jae
add
pop
push
pusha
imul
imul
mov
cld
bound
cmc
jbe
inc
and
faddl
leave
xor
arpl
insl
test
int3
fnstsw
pop
jb
imul
notl
mov
fdivl
adc
stos
pop
out
in
fidivrl
scas
andb
pop
cwtl
or
jno
push
sub
sti
xchg
pop
jl
outsb
push
jle
jb
xor
mov
xor
cmp
icebp
call
sub
adc
mov
push
add
mov
mov
popa
and
cmc
xchg
lret
or
sbb
xor
faddl
add
addr16
pop
loopne
sbb
insl
xor
loopne
push
mull
insb
pop
dec
mov
shrl
lahf
and
dec
dec
jae
and
mov
add
add
mov
or
adc
fs
or
pushf
add
dec
lods
xor
mov
mov
or
sub
enter
test
sarb
xor
dec
mov
push
add
jl
dec
popa
add
xchg
pop
pop
jg
push
int
cltd
fcoms
pop
lret
dec
cmpsl
and
in
scas
xchg
dec
mov
mov
repnz
adc
add
lods
cltd
cwtl
jle
mov
bnd
sbb
stc
aam
fimull
and
mov
mov
push
adc
sub
bnd
das
aas
jmp
into
data16
aas
loop
inc
addr16
aas
shlb
or
shll
sub
lret
sti
test
imul
mov
test
ret
mov
mov
and
aas
popa
mov
sub
outsb
ja
mov
inc
push
xchg
pushf
fninit
sbb
sub
xor
rcl
or
xor
fsubl
add
jmp
push
cli
fwait
adc
out
push
cmp
pop
daa
xor
pusha
fsub
es
sbb
sbb
pop
jl
fsubrl
inc
pop
add
jo
ja
mov
or
add
ret
push
cmp
mov
dec
jmp
aad
xchg
cmpsb
ljmp
test
cmpb
or
pop
in
xchg
int
aaa
ljmp
mov
fucomp
rcr
inc
addl
or
sub
stos
dec
les
ds
repnz
mov
nop
les
xchg
add
pop
mov
orb
repz
enter
std
or
faddl
icebp
cmp
cltd
sarl
arpl
jo
mov
cmp
rcrb
cli
inc
imul
int3
add
add
movsl
dec
xchg
or
inc
fdivs
jo
xor
mov
rorl
mov
inc
mov
test
arpl
or
cli
imul
sub
testl
dec
jae
mov
push
mov
push
lcall
pop
movsb
and
jo
das
sub
xchg
int3
pop
jl
cli
int3
in
movsb
mov
xlat
push
insb
jnp
pushf
add
test
lds
scas
nop
lds
pop
dec
adc
pop
test
pop
ret
fdivrl
and
dec
loopne
icebp
push
dec
cld
push
lds
rorb
out
shll
or
negl
mov
aas
cmpsl
pop
enter
cmpsl
xchg
nop
dec
cmpl
xchg
gs
cmp
out
mov
inc
cmp
xchg
sbb
xor
and
or
mov
inc
lods
es
shll
js
mov
aas
mov
addl
call
lahf
or
dec
mov
nopl
std
and
and
xchg
test
push
dec
cltd
pop
arpl
in
sahf
inc
xchg
fs
and
jne
xchg
cmpsl
and
or
pop
in
testb
gs
daa
hlt
movsl
add
shrb
and
jmp
haddpd
push
pop
and
push
sbb
pusha
add
roll
or
mov
mov
iret
lods
dec
jg
fiaddl
jae
call
add
test
sbb
or
idivb
testb
sub
ret
mov
mov
pop
js
test
or
jnp
or
addr16
loopne
call
sbb
push
pop
idiv
imul
aam
repnz
icebp
and
pop
mov
daa
mov
or
push
js
mov
mov
mov
std
mov
dec
lods
lock
divl
pusha
fsubrl
cli
outsb
add
mov
mov
clc
inc
or
xchg
inc
sub
fildll
pop
test
ss
mov
adc
in
mov
loop
dec
mov
ds
aad
stos
les
enter
call
mov
or
adc
jo
adc
mov
dec
arpl
mov
sub
xchg
mov
jo
mov
mov
stos
pop
shrl
jge
stos
mov
js
sbbl
inc
inc
or
push
adc
pop
int
mov
mov
adc
mov
icebp
jo
pop
push
xor
mov
push
ja
ss
jge
xchg
sbb
nop
xchg
jne
inc
fbstp
std
ficompl
orl
fsubr
outsb
mov
in
pop
arpl
pop
int
dec
clc
into
shr
shrb
pop
sbbl
pop
mov
add
movsl
out
add
subb
or
into
testl
xor
nopl
lods
lcall
test
mov
jne
xchg
mov
and
jp
jns
scas
adc
pop
fs
sbb
mov
dec
and
and
dec
rcrl
sub
rcll
jno
int3
sbb
test
fcompl
adc
or
lock
aad
in
daa
push
insl
xor
mov
cli
inc
mov
cs
jns
popf
lret
push
rcl
mov
push
leave
out
jl
pusha
movsl
jmp
sbbb
cmp
and
cs
fsubl
data16
mov
add
sub
fdivs
adc
mov
flds
int3
inc
cmp
repz
fistps
rolb
push
movl
addr16
ljmp
cmp
ret
jle
mov
mov
jnp
int3
pop
pop
call
xchg
jmp
push
outsl
sahf
outsl
sahf
gs
mull
pop
stos
rolb
jmp
arpl
test
dec
fadd
ljmp
push
daa
inc
out
or
xorl
lock
push
inc
mov
out
mov
jae
movsl
cmp
shll
pop
push
push
xor
rcl
mov
in
pop
repnz
pop
ret
cmpsb
push
pop
cmp
stc
mov
jecxz
and
scas
adc
push
std
push
call
sti
fistps
sahf
xchg
mov
popa
fdivl
push
test
xor
dec
ret
test
mov
paddusb
lcall
mov
push
outsb
jg
or
push
dec
loop
test
add
or
shr
lods
jecxz
add
jb
or
call
mov
pcmpeqw
fisubs
inc
imul
sahf
shl
test
sarl
adc
mov
stos
fsub
dec
mov
adc
adc
and
add
fcoms
out
pop
test
ret
or
dec
test
fwait
lahf
or
test
ljmp
fdivl
inc
fildl
jns
mov
sahf
enter
mov
xor
aad
push
leave
jae
dec
adc
inc
outsl
mov
jl
or
dec
into
adc
cmp
ret
or
call
and
nop
xor
mov
push
jge
aas
testb
dec
stc
push
repnz
in
mov
sub
xor
outsl
int3
xchg
cmp
lahf
adc
nop
repnz
sub
cmp
je
lods
push
rol
or
jnp
ja
ret
scas
fimull
mov
in
and
push
jae
ffreep
inc
movsl
and
out
xor
push
mov
push
or
push
idivb
xchg
adc
cltd
lret
lock
dec
enter
push
ret
adc
inc
fwait
dec
or
ljmp
loope
popa
mov
fwait
lahf
int
xchg
mov
xchg
or
sbb
adcb
ret
jnp
mov
cli
cmp
jno
lahf
in
test
sbb
aam
scas
jge
shrl
pusha
std
lds
les
icebp
out
push
inc
sti
mov
repz
pop
and
xchg
mov
rolb
pop
cmpsl
cmp
inc
pushl
xchg
notb
fstps
lcallw
aam
push
int3
dec
loope
jmp
cmp
cmp
mov
cs
repnz
lret
cmp
loopne
xchg
test
cmp
out
xchg
aam
fistps
cltd
lret
out
mov
mov
inc
push
sbb
popf
es
inc
or
mov
insl
add
and
mov
push
mov
ja
xchg
std
mov
imul
cmp
adc
in
xchg
lret
enter
cwtl
shrb
daa
adc
nop
test
push
mov
jne
add
mov
out
mov
pop
ds
jo
sub
xchg
mov
in
or
cmp
xor
scas
xor
cmc
mov
bound
mov
ljmp
mov
adc
js
jae
xchg
add
out
or
xor
push
adc
loop
pop
cli
bound
loopne
fdivrp
aas
and
ss
fst
int3
sub
xchg
sbb
lods
adc
sub
int3
or
scas
push
dec
gs
outsb
cmp
imul
mov
fistpll
out
mov
mov
test
lahf
pop
lcall
cmc
jmp
mov
and
add
cltd
cli
mov
mov
xlat
lret
inc
or
movsb
aaa
mov
or
push
faddp
mov
and
sub
push
lock
adcl
cmp
pop
sbb
pop
adc
insl
int3
mov
adc
test
fiaddl
out
inc
cmp
sarl
push
or
popa
jns
mov
jo
icebp
xor
sbb
sbb
push
mov
movsb
and
inc
xor
hlt
in
scas
jg
sub
andb
push
loope
cwtl
adc
xlat
mov
add
addr16
hlt
mov
or
fwait
inc
jg
lods
xchg
pop
xchg
mov
les
adcl
adc
repz
add
mov
in
jno
sub
stc
push
add
aam
pop
sub
inc
insb
or
adc
pop
iret
jnp
push
out
lret
cmpb
jle
push
stc
sbb
xor
ds
in
add
and
cmp
sti
mov
sbb
out
adcb
mov
pop
jnp
imul
ljmp
pushf
pop
and
ret
and
sbb
pop
cltd
inc
popa
push
js
xchg
loope
pop
dec
xchg
dec
pop
push
lock
je
popa
loopne
sub
and
imul
lea
sbb
pop
insb
pop
test
test
cmp
arpl
sbb
xchg
nop
aad
add
jmp
mov
sbb
ja
repz
xchg
lods
imul
dec
jecxz
inc
jmp
xchg
dec
and
iret
out
jg
lods
sub
pop
add
sub
mov
aaa
insb
push
imul
divb
daa
lock
fs
push
addr16
sub
mov
add
iret
rorb
add
jb
inc
dec
es
push
fdiv
out
mov
add
pusha
or
mov
test
int3
dec
stos
aas
cmp
jmp
fldt
and
lds
add
jae
xor
and
push
push
imul
sub
xchg
pop
cmp
mull
insl
addr16
cli
push
inc
test
imul
or
dec
shll
clc
fucomip
push
mov
jae
mov
addr16
mov
int3
pop
or
outsb
mov
dec
add
sbb
mov
pushf
mov
dec
pop
push
xor
jns
push
inc
xchg
scas
push
nop
scas
in
test
or
call
adc
jecxz
dec
jmp
cmp
cmp
mov
loope
out
daa
lcall
lahf
push
mov
mov
jge
cwtl
mov
andl
sub
jb
inc
ror
mov
cmovae
test
sub
or
hlt
jnp
insl
rolb
cmp
xor
jno
push
andb
jecxz
out
xchg
mov
xor
and
mov
into
add
adc
push
jmp
lret
inc
ss
add
jnp
xor
icebp
sub
fnstcw
mov
imul
testl
lods
jp
mov
xor
pop
mov
repz
pop
insl
mul
xlat
xchg
div
adc
mov
and
mulb
bound
sub
add
fsubrl
and
ficomps
fdivs
dec
subb
je
cmp
xor
adc
fisubrl
and
scas
jle
out
loopne
push
sti
jecxz
enter
in
add
add
imul
incl
hlt
xchg
sbb
push
and
pushf
pop
or
add
imul
or
cli
xchg
popf
pop
out
mov
mov
push
fwait
lods
mov
dec
xchg
sbb
inc
xor
dec
nop
or
enter
out
arpl
cmp
int
lret
std
add
jno
imul
in
or
mov
push
cmp
and
sbb
lcall
dec
push
jecxz
out
leave
icebp
aas
fdiv
cltd
sub
hlt
dec
decb
sub
dec
rcll
mov
jp
sub
in
scas
jle
std
pop
pop
mov
fmuls
cmp
data16
cmp
push
bound
and
dec
dec
pop
inc
or
scas
push
hlt
xchg
aas
out
dec
add
push
add
scas
mov
outsb
mov
fcmovb
xchg
and
push
outsl
sub
test
hlt
sti
xchg
cmp
dec
in
loopne
in
lea
mov
arpl
scas
mul
roll
add
push
or
mov
sbb
stos
mov
iret
leave
pop
xchg
mov
and
jp
xchg
push
scas
dec
mov
in
cmpsb
jl
popa
andb
mov
cmp
aad
lret
xchg
aad
sbb
dec
lods
jbe
jmp
int3
cwtl
jne
push
leave
dec
fistpl
test
pop
clc
sub
lods
or
xchg
das
das
cmp
pop
pop
into
cmp
sub
pop
xchg
imul
and
movsl
jmp
outsl
and
clc
ret
dec
imul
cs
ficoms
aam
xchg
fwait
movsl
gs
fsubs
pop
push
jl
jbe
stos
stc
jp
sbb
jmp
sbb
or
pop
aas
push
pop
push
jge
ljmp
dec
ds
fisubs
xorl
out
and
mov
xchg
cli
hlt
in
dec
fs
repz
adc
or
rorb
inc
fidivrl
or
rcll
ljmp
cmpsl
jecxz
cmp
ja
scas
add
mov
lds
pop
bswap
push
adc
jle
loop
vpavgw
xor
incl
rolb
mov
pop
mov
in
push
mov
mov
in
lahf
stos
pop
inc
sahf
orl
out
int
mov
adc
sub
sti
test
inc
outsl
add
xor
popf
cltd
or
scas
cmp
cwtl
add
xchg
mov
pop
cs
stos
mov
push
inc
xchg
jb
sbb
dec
scas
mov
pop
addr16
push
dec
pop
xchg
shl
shlb
dec
dec
pushf
ja
fsub
iret
divb
movsb
or
or
inc
and
inc
mov
rolb
bnd
fstps
loop
movsb
insb
xor
incb
lds
rclb
shrl
imul
hlt
sarl
data16
mov
mov
ljmp
pop
sbb
cmc
ja
inc
cmpsl
jp
mov
sbb
sub
xchg
dec
mov
pushf
add
add
nop
mov
mov
in
std
in
fcom
jg
add
pop
xor
dec
dec
sbb
pushf
xchg
loope
pop
jae
cmp
xchg
sti
mov
pop
lods
mov
add
jmp
jns
lods
or
mov
cmc
mov
fdivrs
fstl
insl
pushf
sub
inc
jmp
mov
repnz
enter
sub
mov
flds
rorl
mov
add
sbb
aas
xlat
into
adc
test
enter
and
pop
mov
ret
test
or
mov
xchg
xor
jne
fsubrp
xor
cmp
push
lock
xchg
sbb
mov
mov
push
test
pop
filds
cli
mov
cmp
adcl
insl
adc
mov
push
out
xchg
scas
mov
pop
shrl
scas
add
lret
inc
pop
test
in
mov
jae
int3
hlt
aad
cmp
cmp
add
xchg
fdiv
jp
and
in
shlb
add
lock
adc
das
sbb
dec
andb
dec
movsl
adc
adcb
dec
leave
into
stc
push
mov
maxps
fisubl
or
inc
ss
xor
sub
dec
mov
xchg
mov
daa
lods
scas
fisttpl
out
xchg
loop
mov
mov
or
fsub
ljmp
sbb
loope
mov
rolb
scas
dec
mov
mov
fxch
lcall
bound
push
xor
push
sahf
push
xchg
in
arpl
mov
mov
out
addb
sbbb
xchg
aad
gs
dec
popa
mov
hlt
divb
mov
test
daa
xor
sbb
xchg
pop
jne
mov
cmp
mov
fsubrl
addr16
loope
sub
pusha
mov
rcrb
push
dec
sete
sbb
mov
cmp
and
sahf
aas
in
push
enter
out
cmp
int
int3
mov
ljmp
loopne
push
cmp
fnsave
icebp
mov
rcll
pop
mov
xchg
outsb
push
xchg
test
or
cmp
jg
push
jmp
sti
gs
and
mov
cmp
xchg
sarb
xor
dec
sub
inc
out
sub
cmp
jb
loopne
ja
int3
xchg
xchg
or
leave
adc
jnp
btr
cmp
test
push
test
adc
or
adc
cmpb
fidivrs
lahf
sbb
dec
fs
sbb
clc
mov
cmp
mov
dec
cmp
dec
mov
sbb
mov
xchg
mov
adc
jecxz
cmp
dec
jnp
mov
bswap
cwtl
sbb
mov
xor
fninit
mov
lods
add
stc
or
dec
mov
mov
repz
push
push
daa
mov
movsl
orl
or
mov
stos
lahf
rolb
dec
mov
faddl
je
movb
cmp
sbb
lods
mov
push
sbb
inc
ss
xchg
sbbb
sub
stc
or
icebp
cmp
jae
jecxz
js
xorl
loop
cmp
mov
mov
std
xor
popa
mov
cmp
test
xchg
xor
sub
pop
jo
pop
xor
jb
loop
jl
ljmp
ret
lea
add
enter
insb
push
sub
lods
les
dec
add
mov
pop
je
fcomps
mov
or
cmpsl
and
jg
dec
xor
cltd
adc
cli
fistpl
add
outsl
push
push
repnz
mov
fwait
out
imul
mov
pop
outsb
add
lcall
mov
push
jae
jo
xchg
pop
xlat
cmp
sub
adc
fwait
out
iret
popf
adc
jl
xor
pop
jbe
negb
clts
dec
cmp
fists
mov
stc
call
cwtl
cmp
pop
sub
push
notb
xor
dec
xchg
fwait
les
xor
and
mov
mov
mov
iret
outsl
mov
rolw
add
inc
js,pt
fstp
test
loope
sub
dec
mov
pop
mov
popa
mov
cmp
arpl
inc
mov
push
mov
xchg
sti
movb
push
xor
mov
aaa
gs
lahf
xor
or
inc
jno
pop
pop
xor
cmpsl
push
mov
xchg
outsl
inc
mov
in
sub
lods
sub
jmp
loope
xor
pop
dec
mov
insb
pusha
adcb
cs
test
shlb
push
cmp
inc
sub
pusha
frstor
test
test
hlt
push
mov
inc
mov
ret
fadds
sbb
mov
or
jp
inc
xor
popa
repz
das
cmp
repnz
jno
mov
test
mov
jo
cmc
lcall
ret
inc
xor
adc
jb
cs
inc
stc
lcall
out
sub
mov
shrb
jne
inc
xor
cltd
pop
mov
inc
inc
pop
inc
add
push
ret
addr16
sub
neg
int3
daa
test
pop
add
in
adc
mov
mov
push
xchg
pop
sub
adc
pop
pop
sub
orl
sub
lds
stos
fwait
out
push
fistps
cmpsl
jae
bound
leave
jnp
push
mov
lods
add
jle
mov
lods
push
xchg
mov
cmc
lcall
mov
cmp
xchg
paddq
iret
rcll
in
xchg
daa
cmpsb
outsl
xor
jp
push
cmpsl
icebp
fidivs
jae
lods
xchg
xchg
sub
repz
lds
dec
insb
xchg
mov
stos
dec
pushf
in
popl
fwait
push
stos
repz
sbb
mov
or
adc
sbb
outsl
xor
push
cmp
pop
fistpll
in
dec
mov
out
fisubrs
push
shr
xor
fwait
loop
data16
out
sbb
cmp
xchg
mov
cmpsl
jl
insb
or
dec
mov
pop
dec
fcmovu
jns
pop
test
repz
inc
xor
shll
sub
sub
sub
pop
adc
mov
inc
sub
adc
lret
enter
je
mov
or
mov
push
clc
mov
xchg
push
sbb
or
xlat
mov
mov
mov
jo
out
rclb
cmpsb
cli
filds
sub
gs
call
fs
pop
ja
add
in
xor
or
cmp
test
push
je
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
dec
and
mov
jp
mov
bound
pop
push
sub
arpl
pop
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
xchg
lcall
orb
hlt
mov
or
adc
push
mov
inc
push
pushf
ret
xchg
inc
jmp
rep
pop
jno
imul
jae
xchg
sub
arpl
pop
dec
mov
imul
jp
daa
and
cld
add
jne
test
mov
inc
adc
jmp
jb
jae
pop
je
ss
in
bound
rorl
push
out
daa
lds
cs
stos
xchg
fstpl
and
push
xchg
xor
jge
adc
jecxz
icebp
xchg
imul
push
pop
dec
mov
arpl
pop
mov
ss
push
rolb
jp
mov
xchg
test
ret
jle
mov
popf
test
or
arpl
pop
imull
arpl
push
mov
jp
mov
popf
test
mov
jbe
mov
jns
jle
mov
cli
mov
sub
sub
arpl
pop
mov
jp
mov
imul
cltd
jbe
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
ret
enter
cltd
fsts
sub
arpl
pop
test
mov
cmp
pop
or
ret
cltd
cmp
test
inc
es
sti
lock
pop
mov
jp
mov
popf
movsl
jle
push
sub
arpl
pop
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
popf
test
mov
jp
mov
xchg
test
mov
jp
mov
call
cwtl
out
dec
push
mov
idiv
dec
sbb
insl
scas
add
pop
pop
sub
mov
or
pushf
insl
sahf
mov
int3
call
outsb
or
adc
mov
push
xchg
enter
addr16
jb
mov
in
sbb
pushf
sbb
scas
dec
xlat
inc
rcll
push
push
xchg
inc
iret
ret
andb
cmp
pop
rcll
xchg
jmp
inc
or
jo
gs
or
xchg
or
sbb
xchg
xchg
mov
popf
int
sbb
cmpsb
sub
outsl
gs
mov
call
mov
jge
sti
inc
xor
sbb
stos
xor
mov
inc
jmp
mov
into
and
adc
push
push
jbe
insl
or
cmpsb
pop
adcl
cmc
inc
bnd
dec
into
cmp
clc
mov
data16
loopne
inc
push
sahf
sub
add
mov
loope
dec
xchg
daa
xchg
push
ss
mov
jp
mov
jle
inc
ret
dec
mov
movsb
dec
xchg
in
ja
mov
dec
push
mov
or
out
lock
movsl
stos
add
or
leave
pop
cli
insl
inc
jne
xor
or
or
mov
rorb
adc
or
sub
stos
mov
ficoms
es
in
int
test
test
cltd
cmpsl
pop
mov
dec
arpl
xor
jne
rcrb
pop
cltd
ret
dec
cmpsl
xor
stc
scas
or
xor
into
sub
mov
cmpsl
inc
or
insb
lcall
cmp
pop
ja
fs
mov
sbb
sbb
andl
cmpb
stos
sarl
adc
mov
push
adc
cmp
pushf
aam
jne
mov
sbb
xor
cmp
xchg
cmpl
xchg
ficomps
test
jmp
mov
and
das
notb
push
enter
pop
es
jge
cmp
or
loopne
and
aad
mov
jmp
cmpsb
fisubs
pusha
mov
push
outsl
adc
xchg
cmp
sub
add
sub
mov
add
lock
mov
call
lret
sub
jmp
xor
insl
push
xlat
inc
outsb
xor
repnz
iret
test
or
dec
mov
int3
out
push
mov
loope
js
sbb
xchg
pop
test
mov
stc
xchg
sahf
push
jp,pn
sub
out
sti
xchg
or
jae
jmp
push
insl
xchg
add
lods
addr16
mov
scas
ds
stc
incl
stos
lahf
hlt
or
xor
js
rcr
add
incb
push
jmp
ret
nop
and
frstpm(287
inc
leave
cmp
mov
insl
and
ja
orl
pushl
jecxz
shlb
dec
push
imul
insl
fwait
repz
sub
fldl
cmc
shll
or
xor
aad
repnz
xchg
iret
ss
jl
xor
fs
fisttps
in
xchg
adc
adc
mov
xchg
or
ss
jmp
xchg
xchg
rorb
ljmp
fisubrl
ja
and
jmp
adc
enter
mov
mov
mov
adc
push
subb
jp
push
sti
dec
and
imul
mov
subl
inc
std
lahf
imul
pop
add
nop
xchg
iret
outsb
cmp
sbb
sub
and
sbb
cmc
pop
or
mov
rcrb
inc
xor
sub
pop
loope
xor
mov
lea
or
push
xor
push
adc
fiadds
jo
push
mov
mov
in
std
dec
loop
lea
call
pop
xor
inc
sahf
in
ret
insb
xorb
sub
jge
cmpb
enter
xor
arpl
dec
cltd
push
pushf
jno
xlat
sbb
lea
mov
jae
sbb
lods
sbb
sbb
lock
jmp
push
test
and
stc
xchg
adc
js
xor
mov
outsl
ret
imul
lock
adc
sbb
mov
je
mov
push
in
push
test
or
push
aaa
ja
outsl
inc
mov
jns
lods
xor
xor
jp
jb
les
mov
and
pop
mov
iret
mov
pop
sahf
xchg
mov
jmp
mov
xor
pop
pop
jnp
xchg
scas
enter
call
sbb
loop
fsubp
dec
ret
jne
leave
adc
std
movsl
lock
jp
fwait
lret
mov
dec
jo
cmp
cltd
mov
mov
push
add
or
mov
jge
pop
stc
cmpsl
xor
or
jae
pop
inc
push
jle
enter
push
pop
iret
push
sub
jae
mov
sarb
lahf
cli
jne
push
outsb
rorl
inc
and
jo
lods
cmpl
aam
cmc
fwait
ljmp
lds
lret
xchg
mov
repnz
negl
hlt
mov
mov
xchg
or
in
mov
sbb
popf
push
inc
and
inc
and
cmc
rorl
fs
adc
out
pop
clc
rorb
test
and
dec
mov
or
push
or
scas
ljmp
jne
divb
int3
inc
cmc
push
xchg
popf
xchg
add
lock
jne
xchg
ret
mov
das
stos
adc
int3
aam
cmc
sub
outsl
xacquire
adc
inc
pop
in
adc
jge
in
in
icebp
popa
sub
mov
sbb
aad
adc
das
insl
mov
push
jle
movsl
jae
sub
out
jge
sarl
repnz
lods
iret
int
iret
fst
pop
fwait
ds
add
inc
add
daa
mov
in
ss
mov
ja
jo
pushf
mov
jb
int
jecxz
inc
in
push
xor
mov
or
xor
xchg
cmp
or
pop
dec
cld
push
cmp
sbbl
aas
mov
dec
ds
xlat
push
jmp
aaa
adc
sbb
pushf
adcl
mov
sbb
jnp
jbe
stos
dec
nop
inc
push
mov
ficompl
mov
ret
mov
pop
cltd
lret
pop
mov
jae
ss
fnstsw
sub
sahf
roll
dec
jb
mov
dec
sbb
int3
sub
repz
in
add
mov
data16
or
mov
popf
call
add
scas
sbbl
stos
inc
pop
mov
jnp
int
add
ret
sbb
dec
lods
popf
cli
inc
xchg
negb
sub
lret
sahf
int
fwait
int3
lahf
xchg
bnd
sub
sbb
cmp
sbb
mov
shl
in
mov
lods
pop
jae
and
cmpsb
add
and
stos
or
shlb
orl
dec
mov
xchg
sub
cmp
ffree
dec
push
insl
lcall
cmp
arpl
shll
ficoml
add
fmulp
mov
inc
test
rclb
pop
sbb
mov
pop
test
jnp
and
and
dec
push
scas
pusha
mov
xor
popa
jp
push
sahf
adc
aaa
popf
jl
test
pop
addb
cmc
fs
xchg
call
pop
dec
in
and
out
mov
push
insl
fsubr
fmulp
aad
jo
sbb
cmp
stc
das
je
es
cwtl
xchg
rol
adc
xchg
mov
xor
mov
adc
xchg
dec
add
push
sub
cltd
add
xchg
outsb
out
mov
es
mov
js
cmp
mov
jg
xchg
sub
xchg
arpl
test
repnz
push
hlt
mov
movsb
xchg
xor
and
xchg
sub
sbb
scas
pop
sbb
imul
push
and
int
sbb
jno
scas
xchg
and
rcll
add
inc
fdivl
and
call
insb
jge
xchg
jae
jno
dec
jnp
dec
fnstsw
xor
out
pop
mov
dec
sbb
xor
icebp
outsb
repz
xor
mov
mov
das
outsl
add
in
in
mov
dec
mov
mov
adc
pop
movsl
fs
sub
sub
int
notl
lahf
hlt
jae
dec
or
xor
sub
rorl
rol
or
ja
mov
sbb
mov
cltd
mov
sbb
sub
arpl
hlt
mov
fldl
data16
dec
xor
pop
and
cmpl
imul
inc
arpl
iret
andl
mov
jl
pop
or
pop
jns
andb
pop
shl
outsl
test
jmp
dec
inc
sbb
dec
cltd
inc
push
lea
sub
loope
dec
cs
sbb
lods
pop
sub
sbb
jl
push
jae
lods
aas
cmpl
cmp
in
xor
sbb
sub
popf
enter
sbb
sbb
inc
into
mov
jg
pop
pop
popf
xchg
pop
ffreep
pop
sub
or
cli
hlt
inc
pop
cltd
stos
pop
mov
sub
sub
inc
mov
imul
aas
pop
rorb
mov
popf
ret
xor
movsb
lock
cltd
repnz
iret
ds
cltd
and
add
sahf
std
in
cmp
mov
lods
mov
cmp
in
cmp
gs
add
dec
dec
popf
xchg
fmul
cmpsb
xchg
cmpsb
cs
pop
mov
js
sub
fisubs
push
cs
cmc
cwtl
ds
pop
jge
or
mov
mov
dec
pop
aaa
jl
mov
mov
icebp
mov
rcl
push
sub
push
dec
daa
in
push
push
jge
subb
cltd
lahf
sti
jge
inc
mov
ret
fbstp
push
push
sbb
and
ret
xchg
pop
dec
adc
cmp
loop
jns
inc
call
inc
push
ds
outsl
insb
cmpb
sbb
push
cwtl
jae
mov
xchg
jl
popa
mov
std
mov
mov
add
sti
adc
loop
pop
mov
push
jns
lret
xor
call
dec
jae
cltd
xchg
adc
jne
int3
xor
clc
push
test
fistps
insl
push
jle
sub
sbb
dec
leave
xchg
inc
test
jecxz
rol
inc
push
or
and
lret
in
or
sub
and
hlt
xlat
int
xchg
and
dec
push
sbb
add
cwtl
xchg
lret
lods
rcrl
jl
fisubl
cmp
sub
or
xor
lds
push
mov
or
lea
xchg
aam
cmp
sti
ret
mov
sbb
sbb
mov
dec
test
mov
mov
jp
jge
mov
pop
fdivrl
mov
int
cmp
mov
out
xlat
xor
inc
xchg
pusha
cmp
dec
push
stos
test
ret
stc
out
ljmp
push
js
jns
and
or
inc
decl
out
adc
das
lret
imull
icebp
sbb
push
je
insb
and
cmp
jb
insl
or
and
outsb
fistpll
mov
adc
jg
sub
loopne
rorb
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
