rorl
cli
xor
pop
push
mov
jns
insl
push
xor
repnz
and
xchg
or
unpcklps
push
lcall
call
or
pop
cltd
fimuls
add
ret
std
cmp
in
and
test
clc
or
mov
mov
dec
push
int3
leave
push
loopne
xchg
inc
faddp
lahf
or
fcomps
inc
and
mov
out
icebp
and
add
aad
push
cmp
cmp
sbb
cmpsb
push
ret
test
or
lret
addr16
mov
xchg
sbb
pop
or
insl
and
add
lret
inc
test
mov
dec
movsl
inc
cmove
ljmp
adc
je
std
mov
add
dec
daa
shrb
add
xchg
xchg
adc
daa
pop
mov
and
cmp
jns
and
sub
xor
pop
mov
stos
cmpsl
xor
aad
mov
pushf
aam
sub
fdivr
orb
pop
pop
fiadds
in
ds
pop
mov
js
push
int3
pusha
xchg
loopne
jge
imul
push
mov
and
push
or
sub
faddp
enter
push
mov
insb
lret
inc
sub
adc
push
jae
movsb
pop
stos
addr16
lcall
inc
in
xor
sarl
lock
sbb
out
inc
xchg
in
icebp
sub
stc
lcall
pushf
mov
aaa
push
mov
imul
imul
int
or
mov
push
lcall
mov
jno
sbb
or
aam
xchg
adc
mov
push
lds
in
fmuls
mov
cmpsl
dec
std
repnz
test
fs
pop
out
jp
xchg
xchg
nop
xor
mov
sbb
pop
cmc
pop
sahf
sub
mov
xchg
aad
jge
loop
cli
popa
mov
ret
jns
jnp
in
pushf
sub
mov
jmp
push
mov
in
xor
xor
dec
push
add
mov
push
cmc
adc
push
add
mov
mov
add
sub
insb
fwait
lock
icebp
pushf
int3
push
push
inc
pop
cld
mov
mov
mov
insb
sub
mov
testl
mov
insb
adc
cmp
or
adc
shr
icebp
daa
loope
xchg
aad
addr16
mov
shl
scas
mov
lods
ret
call
sbb
mov
xchg
add
nop
sub
jl
test
jge
xlat
pop
test
add
xchg
movb
xchg
inc
in
push
adc
jae
hlt
mov
mov
test
lcall
mov
fwait
nop
cli
in
call
daa
mov
outsl
xchg
pop
sar
call
lret
sub
dec
inc
rclb
mov
xchg
inc
mov
nop
dec
dec
insl
cmp
jo
xor
add
sbb
push
jg
popf
test
cmp
dec
rol
xchg
cmp
pop
loopne
sbbb
std
mov
jae
rorl
clc
pop
pop
lods
mov
mov
mov
lcall
xchg
pop
jns
or
push
hlt
mov
cmp
pop
xchg
fadds
push
movsl
cmpb
mov
mov
ljmp
cld
xor
cmp
fs
mov
xor
frstor
xchg
addr16
mov
jecxz
cmp
mov
fs
cmpsb
xchg
lcall
call
inc
mov
imul
addl
mov
xchg
mov
enter
cmp
test
mov
sbb
cli
pushf
xor
fstpl
fst
cltd
outsb
ss
ret
xchg
pop
stos
add
fistpl
inc
jecxz
and
pop
cmp
jb
movsb
dec
adcb
pushf
pop
lret
xor
xor
adc
sbb
mov
les
ds
jns
jle
es
cmp
pusha
nop
ret
mov
dec
inc
fstpl
push
xor
push
cmp
movsb
mov
push
push
test
mov
xchg
popf
iret
jmp
mov
data16
sbb
lcall
mov
frstor
jno
int3
mov
mov
imul
lock
je
and
stos
push
xor
movsb
aas
movsl
loopne
js
ja
rcpps
lahf
mov
std
test
sahf
adc
daa
repnz
and
int
and
cmp
ja
cmc
iret
pusha
sub
out
imul
pop
stc
repz
lret
aad
xchg
out
xor
movsl
sub
xor
imul
decb
shrl
mov
mov
adc
mov
and
add
ret
xor
test
out
sarl
out
mov
jno
rorb
push
jbe
icebp
loopne
scas
add
pop
push
scas
mov
fiadds
xor
lock
cmp
xor
mov
pop
inc
dec
mov
scas
xchg
nop
xchg
dec
sbb
dec
adc
sub
jp
rolb
push
in
mov
clc
push
in
stos
jp
bound
xlat
jne
sub
fnsave
mov
daa
into
xchg
xchg
cmp
stc
cli
cli
bound
xor
ret
orl
mov
movb
xor
lea
or
xchg
mov
test
jns
aaa
sbb
dec
ficompl
sub
js
mov
les
std
push
or
dec
jo
sbb
or
mov
push
test
popf
mov
fldenv
mov
dec
pmaddwd
movsl
aas
jae
cli
sbb
insb
mov
inc
and
rcrb
jle
int
xor
nop
jmp
cli
add
ljmp
sbb
mov
and
aaa
loop
lds
add
dec
faddp
dec
push
fs
loope
xchg
leave
jnp
jl
and
dec
je
cmpsl
shll
and
scas
fdivrl
push
test
add
sub
das
jo
adc
push
cmp
jns
dec
rclb
pop
sub
push
inc
movsl
inc
mov
xor
shlb
ficomps
loopne
xchg
sbbl
mov
and
mov
push
jl
adc
or
jge
dec
ret
cmp
cltd
mov
xchg
add
or
sub
cmp
push
lods
xor
dec
stos
test
insb
nop
or
lock
xor
inc
jl
aam
fldl
jp
or
daa
scas
je
dec
sbb
sbb
lock
push
lock
push
rcrl
adc
push
call
test
xchg
cmpsb
mov
sub
les
aas
pop
mov
sbb
pop
or
cmp
xchg
pop
fdivl
insb
pop
mov
lods
adc
mov
push
addr16
outsb
inc
nop
inc
stos
xor
sbb
mov
movsl
imul
mov
sub
js
bound
xor
scas
dec
ret
nop
test
in
notb
into
lods
or
loop
pop
scas
cmpsl
mov
sub
push
jo
idivb
lret
mov
rcll
in
scas
push
lock
xchg
xor
jne
out
jg
aad
push
pop
shrl
mov
xchg
dec
cmp
push
outsb
mov
cmp
mov
decl
adc
fwait
mov
decl
add
adc
je
inc
xchg
fstps
cld
fadds
gs
sub
stc
adc
mov
pop
mov
pusha
cmpsb
dec
shll
jo
rclb
push
jo
sbb
inc
int
mov
and
cli
cmc
test
stc
push
pop
lea
repnz
aam
sahf
js
cmpsl
daa
push
mov
pop
loope
sub
pushf
add
sbb
int3
cmp
incb
enter
pop
mov
imul
cmp
jae
aam
fnstsw
aaa
fisttps
pushf
mov
sbb
inc
outsl
cld
push
stc
cwtl
imul
sub
xchg
xlat
ljmp
jecxz
addr16
cmpsl
inc
mov
sarb
fiadds
sbb
xchg
sub
cmp
lods
aas
daa
and
xor
push
in
pop
pop
dec
sub
mov
jle
sbb
pop
ds
push
mov
ss
ret
xchg
mov
lock
cmpsl
lret
xchg
add
iret
mov
fidivrs
out
xor
pop
push
and
pop
incl
ss
add
or
cmpsb
bound
sbbb
scas
fisttpll
rcrb
add
scas
mov
lods
xor
inc
sbbl
mov
cmp
fisubs
repnz
mov
add
and
xchg
xor
daa
cwtl
xchg
les
mov
mov
insl
call
or
sarb
out
adc
push
daa
adc
add
mov
int3
cld
mov
adc
shl
ljmp
div
lahf
push
sub
stos
add
xor
xor
fdivr
adcb
pop
arpl
xchg
pusha
mov
pop
ret
dec
sti
jnp
int3
sbb
sub
push
pop
mov
loopne
fs
cltd
repz
xchg
stos
je
clc
pop
sub
loop
int3
das
adc
pushf
xor
hlt
dec
fnstenv
out
add
cs
loopne
in
sub
jae
in
dec
dec
sbb
mov
pop
or
inc
mov
inc
mov
lcall
pop
mov
sub
je
mov
push
xor
cwtl
jnp
or
or
push
outsb
cmc
das
mov
xorb
outsl
icebp
inc
cli
push
xor
ds
in
stos
push
int3
xor
stos
stc
mov
mov
vminss
mov
push
imul
pop
dec
pop
adc
xchg
sbb
aam
bound
mov
test
jle
cmp
dec
inc
enter
repz
xchg
cmpsb
scas
jno
shlb
and
mov
inc
pop
xor
movsl
jns
js
mov
jl
xor
xchg
cmp
mov
cmp
aam
movsl
pop
ds
dec
jp
clc
and
fst
insb
dec
add
jg
sub
add
or
cmp
push
notb
mov
push
dec
fsubs
popl
movsb
loop
out
cmp
addr16
xor
push
xchg
int
nop
lret
dec
push
dec
pop
lods
popf
jmp
mov
or
lcall
mov
cmpsb
cs
adc
in
into
mov
xchg
popa
push
rorl
push
std
and
fcoms
push
mov
dec
movsl
lret
or
mov
sub
loope
xchg
push
push
jae
dec
xor
bound
or
inc
icebp
push
inc
inc
cmp
cmp
and
imulb
das
or
sti
pop
hlt
push
xor
jo
pop
inc
lock
stc
sub
cmp
or
ret
scas
sbb
mov
inc
dec
dec
mov
idiv
inc
push
jno
imul
dec
sub
or
mov
imul
sub
pop
mov
sti
imul
jp
pop
push
mov
push
jno
lea
pusha
rolb
test
insl
int3
lea
sarl
mov
dec
lea
mov
bnd
sub
dec
lods
xor
lret
lret
adc
roll
gs
jmp
adc
in
mov
push
push
xchg
ds
outsl
jae
mov
and
xchg
repz
es
pusha
mov
or
imul
mov
add
nop
int3
popf
adc
scas
cld
ds
stc
add
nop
xchg
shlb
cld
decb
sbb
ljmp
dec
jb
imul
inc
lods
inc
imul
das
cs
jmp
ss
clc
pop
insb
pop
add
cmc
add
fcomps
in
rorl
cmp
inc
and
jg
flds
scas
ss
cwtl
scas
int3
push
sub
and
nop
sbb
push
stc
xchg
push
mov
das
outsl
ss
jge
ss
insb
sti
in
femms
xchg
xor
jae
outsb
mov
and
dec
shl
das
out
stc
scas
inc
aas
testl
or
adc
dec
bound
in
cmp
jle
loopw
aam
shll
add
inc
lea
and
rcll
adc
movsl
pop
decl
or
sub
add
test
sbb
test
mov
popf
jb
lods
mov
into
and
sbb
jnp
ljmp
jno
enter
mov
and
iret
mov
iret
and
rcrl
lret
xlat
mov
cmp
test
subb
mov
clc
mov
xchg
xchg
mov
mov
inc
or
sbb
push
xlat
inc
rolb
sub
sbbl
dec
das
jbe
stos
sbb
test
sub
xchg
mov
setge
dec
cmp
fs
adc
mov
push
sbb
cmp
adc
popf
in
repnz
lcall
fsubr
dec
insl
jns
sahf
mov
xchg
lahf
sbb
jle
movsb
cmp
fnsetpm(287
mov
and
xor
int
pop
xor
in
rep
or
mov
push
std
push
add
cmp
pushf
mov
fdivrs
fmuls
xor
mov
add
sub
enter
das
xchg
adc
dec
or
ret
fisttps
pushf
push
movsl
mov
adc
mov
xor
push
insl
out
push
mov
ss
or
insl
mov
clc
mov
mov
jo
cs
sbb
sbb
je
cmp
pushf
inc
sbb
aaa
push
pop
sbb
int
cmc
cmc
mov
aaa
std
pop
jb
jg
xchg
popf
and
cld
andl
sti
adc
pusha
add
pop
stc
mov
sub
js
jnp
rolb
push
jne
imul
stc
sub
sti
ja
sbb
mov
into
xchg
jmp
sbbb
fimull
pop
push
ficomps
adcb
mov
mov
das
push
mov
fldl
daa
mov
mov
push
pusha
jg
cmp
xchg
insl
jge
pop
repz
mov
mov
iret
mov
push
cmpsl
movb
pop
and
jl
or
ds
cli
stc
in
adc
push
xchg
jg
pop
add
ret
clc
inc
mov
int3
test
incl
cmp
push
jb
sub
out
aad
shlb
cli
push
pop
test
fsts
push
add
xor
push
add
test
push
or
and
pop
or
in
jne
and
inc
out
fcompl
repz
cwtl
mov
mov
add
mov
inc
fmuls
mov
cli
mov
sub
sahf
mov
push
dec
adc
pop
dec
or
cmpsl
insb
and
lock
shll
ret
mov
das
mov
or
out
loop
inc
data16
rcrl
outsb
out
jmp
fmul
cmc
add
xor
add
stos
or
pop
fucomp
mov
sub
daa
ret
push
cmp
mov
push
mov
cmp
sbb
fisubrs
mov
jbe
test
xlat
sbb
fcmovnu
pop
sub
lock
clc
fcmovnu
dec
mov
loopne
adc
in
sbb
push
push
add
lahf
gs
cmp
jae,pt
mov
xor
test
pop
addr16
sub
mov
mov
and
add
jb
push
call
mov
aam
mov
or
lret
dec
into
push
or
jge
xor
cmp
mov
movsb
sbb
cmc
aas
inc
push
stc
jne
aad
gs
pop
sbb
dec
cmpxchg
and
mov
fdivrl
mov
push
popa
stc
decb
jbe
mov
aam
pusha
pop
jl
int
fisubrs
cmp
dec
addb
inc
fucomp
jp
shlb
ja
rolb
xchg
and
add
xchg
mov
popf
push
mov
xorb
stos
das
add
jbe
ret
xchg
sub
fcompl
sub
pop
sub
jbe
adc
jle
aad
push
dec
mov
test
mov
pushf
fisubrl
call
movsl
push
xlat
repz
adc
loope
stc
dec
movl
imul
and
not
imul
mov
mov
pop
xor
fld
mov
ss
in
rdmsr
mov
cmpsb
in
mov
rcrb
cmpsb
mov
pusha
mov
mov
mov
and
cli
push
shrb
mov
mov
mov
jl
push
add
push
inc
fdivrp
mov
push
mov
sub
out
fisttps
mov
xor
sub
nop
nop
inc
imul
mov
add
fadd
adc
call
sbb
pop
sarb
popa
jnp
cltd
mov
or
sbb
loop,pt
pop
sbb
in
push
lds
mov
inc
movb
mov
adcl
pop
xchg
cmp
pop
aas
hlt
cli
out
and
xor
pop
dec
jp
and
xchg
mov
add
sub
fmuls
and
mov
sub
nop
loop
mov
stos
sar
cmp
dec
int3
test
sar
movb
xor
inc
jne
cmp
pusha
gs
jnp
test
mov
stos
std
test
xchg
movl
adc
or
jo
stos
mov
cmc
jp
or
movsl
out
int
sub
idivb
and
adc
pop
fisttpll
cmp
js
aad
imul
arpl
sbb
sbb
daa
mov
mov
sbb
fcomi
add
test
xchg
cmpsb
cs
xor
fbld
cli
push
inc
push
jmp
test
pusha
inc
ret
jnp
std
xchg
jo
je
inc
dec
push
loope
push
lods
lods
xor
pop
divl
sahf
adc
xchg
jo
gs
pop
dec
mov
movsl
sti
pop
sub
test
cmp
and
ror
push
movsb
popa
lea
pop
mov
scas
or
lret
subb
xor
in
or
and
adc
xor
aam
inc
inc
inc
aam
ss
jne
out
and
lcall
or
cmpsl
gs
stos
push
sub
inc
int
pop
clc
inc
mov
movl
sbb
mov
push
cmp
add
sub
idivl
btc
mov
mov
jecxz
hlt
dec
mov
jns
enter
sahf
xor
mov
les
mov
inc
sbb
and
orb
mov
divb
xor
orl
sub
test
fadd
ljmp
setl
lods
out
or
jno
popa
subb
out
lret
push
out
ljmp
jge
add
int3
jnp
sbb
cmp
enter
xchg
mov
fcmovbe
mov
rcrb
xchg
les
lock
lea
pop
add
mov
adc
scas
sub
lret
jnp
sub
xchg
inc
or
aad
jns
mov
inc
mov
dec
and
jmp
and
movsb
dec
or
pushf
push
sub
inc
add
lea
cmp
dec
mov
pop
inc
notl
int
and
xchg
idivb
insb
sub
push
mov
ds
daa
lcall
cld
lods
rcl
mov
or
push
xchg
push
jg
sbb
mov
add
or
test
and
gs
dec
dec
cltd
mov
and
inc
xor
or
in
cmp
jmp
call
xchg
jle
pushf
xchg
ret
fadd
scas
add
lcall
xchg
shll
cwtl
mov
and
xor
pop
mov
test
push
test
add
push
push
andb
sbb
mov
sbb
imul
inc
add
or
dec
jle
hlt
hlt
loopne
and
sbb
insb
push
loop
push
jbe
mov
dec
push
shrb
xchg
mov
sub
sbb
cmp
popf
stc
cltd
xlat
mov
sbb
sbb
pop
in
ljmp
test
les
or
mov
mov
data16
xor
lea
add
call
xor
pop
and
sub
test
push
or
adc
stos
orl
jl
xchg
out
inc
shl
jl
arpl
sahf
or
pop
lret
jg
movsl
and
xor
dec
or
dec
mov
sub
mov
movsl
mov
fdivs
mov
push
pop
call
sti
add
int3
fsubrs
and
lods
cmp
loope
cmp
inc
xor
jl
and
sbb
bound
bound
jae
scas
push
and
xchg
lds
sub
pop
mov
pop
ss
xchg
dec
sub
mov
sbb
or
or
cmp
insl
pushf
jnp
insl
cltd
aaa
adc
pop
inc
insl
adc
push
inc
roll
and
test
jns
imul
xchg
push
jecxz
cmpsb
dec
jns
sub
or
repz
nop
jecxz
xchg
data16
pop
xor
outsb
cltd
or
hlt
pop
fwait
mov
inc
mov
lret
add
add
mov
xor
and
insl
mov
xchg
push
subl
mov
movsb
notl
mov
cltd
xor
sub
push
ja
xor
ss
cltd
jp
inc
mov
repnz
loopne
hlt
lods
scas
imul
popa
scas
xchg
cmp
stos
stc
dec
ret
mov
icebp
sub
enter
outsl
and
or
negl
push
mov
xchg
push
mov
jns
outsl
bound
dec
mov
das
cmp
sbb
dec
imul
popf
loopne
jns
mov
push
pushf
sub
pop
fiadds
mov
dec
notb
xchg
daa
out
lahf
loop
mov
sub
or
in
cs
shrl
mov
add
push
leave
sbb
test
out
mov
shlb
sbb
pop
cli
movsb
push
cltd
mov
push
push
and
adc
es
add
push
adc
cld
mov
in
addb
push
mov
scas
jae
push
push
push
sub
lds
jmp
push
outsb
jno
icebp
popf
aam
sub
and
sbb
in
adcb
dec
pop
pop
cmc
pusha
test
and
pop
or
cmp
and
loopne
scas
cltd
call
cmpb
hlt
lds
cwtl
movsb
clc
pop
bound
push
jp
divl
lods
cmp
mov
pop
call
cmpsb
mov
std
and
mov
mov
nop
es
in
cmpsb
arpl
cmp
and
icebp
dec
aad
jbe
xor
rcll
push
add
shr
and
es
or
adc
shr
scas
idivl
mov
xchg
push
or
push
stos
sbb
add
popf
add
jns
clc
popf
addr16
inc
scas
jl,pn
rclb
mov
inc
mov
sbb
add
add
leave
ror
cmp
out
sbb
ret
jae
sub
cwtl
test
or
insb
mov
add
push
fs
scas
and
sbb
inc
pop
mov
inc
movsb
and
outsl
cs
call
pop
sub
hlt
dec
sbb
xor
pop
cmc
mov
xchg
push
cltd
add
pop
inc
aad
in
enter
inc
xor
mov
xor
js
mov
xor
ja
xor
nop
sbb
inc
dec
out
fs
or
jl
shrl
jmp
lahf
xor
mov
cmp
outsb
pop
dec
in
adc
mov
ljmp
jge
in
lock
jbe
xor
push
ret
mov
inc
xor
mov
lret
dec
call
and
lea
push
imulb
jbe
xor
loop
insl
subl
out
or
inc
push
ret
rclb
mov
loopne
xchg
call
cmp
fcompp
in
xchg
jno
int3
sub
mov
pop
aas
sbb
cmp
in
inc
rolb
dec
ljmp
jecxz
mov
or
aas
pop
or
pop
in
inc
scas
nop
jno
movsl
jne
int3
xor
pushf
dec
and
mov
nop
mov
int3
xor
adcl
lahf
imulb
lea
adc
cld
add
lahf
fldl
aaa
int
faddl
pop
pop
mov
addl
gs
sbbl
mov
ror
jae
hlt
stos
push
jmp
add
cmpsl
int
fnstcw
test
push
fcmovnu
out
cmp
jo
notl
daa
xchg
lds
or
aas
mov
xor
aam
imul
xchg
jle
fiaddl
sbb
pop
jno
out
xor
loope
fwait
add
call
ficomps
ljmp
mov
pushf
leave
iret
dec
mov
out
ror
xor
aas
xchg
mov
adc
das
jge
inc
popf
cli
sahf
push
aas
js
sub
cmp
push
jl
les
mov
loopne
mov
rcrl
push
or
adc
cli
xor
xchg
xchg
mov
cld
hlt
in
pop
jecxz
aas
add
inc
hlt
mov
inc
cmp
push
jmp
mov
outsb
dec
imul
cmp
shll
fsubr
or
loopne
push
sub
cmp
push
shll
jg
out
out
push
sahf
push
imul
cmp
inc
or
mov
pop
idivb
lahf
mov
cmp
push
movsl
pop
les
dec
ljmp
outsb
rol
nop
jecxz
xchg
lret
test
movsb
mov
adc
int
rcrb
inc
imul
or
push
or
stos
lcall
stc
dec
mov
sub
jns
pop
sbb
jae
and
subb
sbb
adc
stos
dec
jnp
ret
int3
or
dec
sbb
cmp
int3
mov
test
fisubs
sbb
mov
push
mov
pop
pop
xchg
loop,pn
cmp
pop
sarb
sahf
lcall
fadd
fxtract
pop
jle
or
mov
cwtl
les
cmp
cmp
sbb
inc
jno
dec
fcmovnu
stc
rcrb
or
jno
sahf
and
mov
out
loope
test
inc
gs
xorl
ret
lcall
jne
ljmp
adc
sbb
dec
sbb
iret
mov
neg
clc
pop
mov
ficompl
jmp
ret
hlt
test
loope
mov
xchg
xchg
fisttps
ljmp
jno
fwait
mov
stc
loop
iret
out
enter
sbb
icebp
data16
xchg
sbb
xchg
push
arpl
mov
lods
ss
imul
jns
cmp
sbbb
bound
xchg
imul
pusha
ds
sub
int3
mov
and
mov
adc
dec
add
mov
leave
mov
sub
cltd
push
pushw
ror
lods
call
push
stos
in
orb
and
addb
or
out
loope
dec
sbb
mov
test
ds
and
cli
out
mov
das
mov
test
jg
cmpsb
movsb
lahf
cltd
adc
cmpsb
push
jmp
les
mov
mov
and
cmc
aaa
divl
adc
shlb
jns
dec
lods
and
inc
mov
mov
jb
sub
and
ss
xor
xchg
push
std
lret
inc
sub
sub
or
pushf
pusha
xorl
or
lea
fld
test
mov
sbb
les
js
or
sbb
and
popa
add
mov
addr16
jae
and
cmp
mov
sbb
cmpsb
addb
xor
mov
dec
dec
or
adc
add
fstl
stc
lock
jmp
xchg
adc
jge
fwait
andl
jle
sahf
fidivl
sub
xchg
into
xor
or
in
sbb
sub
sub
xlat
xlat
movsl
mov
jns
inc
fisubl
scas
push
jns
addr16
mov
or
addr16
cmp
imulb
in
push
pop
inc
jmp
aam
insl
fists
cwtl
insl
movb
mov
mov
xchg
dec
outsb
sbb
mov
jne
jl
jo
shlb
fiadds
iret
and
push
sbb
loope
data16
push
cmc
out
add
icebp
cld
xor
stos
pop
mov
test
add
sbb
push
push
push
mov
lods
adc
xorb
dec
dec
add
lods
cmc
aad
dec
pop
int
fnstenv
cmp
inc
lret
or
push
aas
dec
adc
xchg
psrlq
fcoms
pop
xor
adc
movl
xchg
std
pop
dec
or
sbb
xchg
iret
clc
sub
or
xor
cmpsb
mov
subl
rcll
or
ljmp
xor
aas
mov
jg
cmp
mov
in
push
add
push
stos
xchg
adc
cmpsl
pop
xchg
xchg
ja
into
mov
xor
mov
lods
inc
hlt
mov
sub
pop
fs
or
mov
addb
and
xor
pushf
and
xor
cmp
daa
out
ja
lret
add
fldcw
xor
lds
ljmp
in
cmpsb
push
sahf
xor
outsl
mov
out
pop
lret
lret
test
dec
jne
add
outsl
pop
pop
movsb
and
ret
xor
push
repz
lahf
pop
fidivs
mov
push
xchg
insb
dec
cs
lahf
into
add
dec
movsb
cwtl
pop
in
xor
push
lock
or
adc
or
lods
scas
insl
mov
add
adcl
sahf
mov
movsl
lods
mov
cmp
push
cmp
sbb
xadd
mov
mov
push
jno
inc
cld
xchg
jmp
repnz
mov
popa
ja
add
imul
sbb
inc
test
push
mov
push
xchg
out
xor
mov
pop
repnz
clc
outsb
in
cmp
scas
adc
icebp
xchg
sub
push
or
stos
outsb
es
cmp
popf
inc
inc
or
call
jmp
push
shrb
mov
sub
mov
lahf
sbb
lret
or
ret
sub
mov
cmpb
adc
aas
xchg
test
inc
sub
int
es
divl
push
ss
cmpsl
into
sbb
xchg
movsb
mov
jbe
fadds
pop
push
push
movsl
ret
mov
cltd
pop
test
pop
inc
dec
ficompl
sbb
cmp
fs
fwait
xchg
sub
test
iret
push
call
out
pop
ds
pop
in
rorl
test
incb
int3
inc
mov
fcomip
dec
lret
fisubs
mov
cli
xchg
adc
sbb
add
cmp
push
fldenv
xchg
scas
xchg
xchg
adc
ds
popa
push
push
fs
jl
lods
in
clc
push
out
divl
sbb
cmp
fildll
test
rcll
push
push
or
sub
ret
in
decb
outsl
es
xor
mov
andb
add
mov
fcoml
mov
sti
js
jae
cli
push
sarl
mov
cmp
inc
in
insl
aas
int3
jle
aam
sbb
arpl
outsb
mov
insl
cmpsl
das
xor
pop
dec
push
pop
xor
xor
repz
pop
popf
xchg
push
mov
and
stc
dec
sub
push
dec
movl
jne
dec
push
outsb
fcompl
imul
cmc
add
mov
push
push
repz
mov
cld
mov
mov
cmpsl
dec
das
mov
adc
loope
cwtl
mov
add
push
or
mov
fldt
xlat
aaa
daa
push
loope
and
js
jae
shrb
movb
sub
in
imul
out
cmp
jae
push
movsl
xor
adc
mov
sahf
xor
ss
add
sbbl
les
sub
pop
xor
mov
std
cmp
repz
jo
cltd
out
cmc
int3
mov
mov
frstor
test
mov
enter
push
lea
push
pushf
std
mov
lock
mov
or
aas
inc
add
rcll
xor
out
jp
aaa
lods
xchg
cmp
mov
iret
xchg
scas
out
and
mov
loopne
push
mov
adc
lahf
xchg
cmp
sahf
fistps
mov
mov
xchg
in
int
mov
or
and
jne
add
lcall
mov
leave
mov
imul
mov
sahf
js
shr
push
cmp
test
push
sub
bound
daa
insb
mov
or
fs
sahf
repz
sbb
stos
jb
pop
mov
pop
dec
jle
ret
pop
jmp
pop
dec
xor
mov
cmp
add
jno
push
push
mov
push
sub
pusha
int3
loopne
jns
inc
push
aas
test
xor
cmp
push
js
fwait
xor
sub
add
insl
sahf
insl
outsb
clc
xchg
mov
ljmp
or
cltd
ficoms
dec
int3
repnz
mov
inc
or
shll
outsb
imul
cmp
or
mov
movsl
pop
inc
leave
mov
pushf
xchg
gs
fisttpl
mov
pop
aas
sub
les
icebp
or
push
nop
add
idivl
adc
lds
jmp
add
cmc
jne
sub
cmp
xor
xor
xor
jmp
cld
push
jno
outsl
mull
mov
movsl
shl
sbb
scas
sub
pop
mov
push
dec
inc
shll
jg
dec
outsl
insb
aas
vmaxpd
ret
mov
or
stos
mov
out
shlb
cli
stc
xchg
adc
test
and
adc
mov
xor
pushf
add
push
and
lock
jle
jbe
lods
movsl
in
lods
movsl
mov
in
shlb
jo
cmp
mov
icebp
push
movsb
add
pop
iret
or
adcl
and
or
pop
pop
xor
add
les
mov
shlb
cmpsb
jle
mov
mov
leave
in
xchg
fsubl
mov
ds
mov
cmpsl
fdivrs
adcl
lods
ss
cltd
mov
lcall
out
clc
and
xchg
sahf
inc
jo
and
or
mov
enter
add
int3
or
mov
outsb
mov
pop
mov
xor
add
and
movsb
inc
das
push
test
jge
dec
mov
sbb
daa
cli
and
lds
cld
int
lret
xlat
loope
cmpsl
pop
xor
into
iret
xor
testb
dec
mov
rcll
adc
fsubrs
lret
inc
sub
test
adc
gs
fdivs
adc
xchg
sub
loopne
clc
dec
int
and
outsl
test
lret
lret
xor
adc
mov
add
cmp
xor
divl
mov
aaa
and
sbb
test
fwait
out
test
decb
mov
sbb
dec
fmul
addr16
aas
iret
lock
xchg
add
cltd
addr16
xor
shl
jl
daa
fbld
jge
pop
pop
lahf
pop
hlt
mov
mov
mov
adc
and
pop
les
mov
mov
push
cltd
cmc
jmp
mov
and
jae
pop
fimull
mov
loop
inc
dec
jnp
dec
cmpl
add
std
jl
and
cli
fbstp
orb
imul
mov
adc
mov
push
pop
lods
test
mov
mov
mov
sahf
fistl
push
add
lea
xor
xorb
insl
mov
jno
mov
in
cld
cli
and
mull
jge,pt
or
aas
in
sbb
cmp
mov
daa
mov
mov
mov
sub
xchg
add
mov
int
and
cmp
dec
pop
jmp
mov
idivl
test
push
xchg
inc
pop
loop
daa
inc
lock
cli
ss
mov
pop
cmp
enter
pop
call
fstpl
and
xlat
mov
imul
stos
les
es
out
adc
or
stc
jle
mov
cmp
sbb
pop
out
mov
aam
popf
xchg
inc
adc
in
scas
loop
test
insb
aad
push
cs
cmp
mov
sub
fnstenv
push
cmp
sti
ficompl
xor
mov
lret
insb
xchg
test
push
mov
gs
and
cld
jo
sub
cs
or
loop
test
and
shrl
or
mov
push
sahf
jbe
data16
or
jo
addl
adc
movsb
lods
mov
cld
mov
add
jecxz
faddp
cmp
xchg
sbb
sub
push
push
add
mov
dec
push
push
dec
inc
pop
adc
jle
push
push
mov
pop
cltd
aad
bound
aam
mov
push
sbb
mov
cmp
jae
lret
mov
sub
stos
repnz
add
in
sbb
loopne
ret
or
mov
lock
clc
lahf
sub
aas
push
xlat
mov
cmpsb
inc
pop
push
mov
jmp
sub
idivl
test
inc
jl
dec
roll
ljmp
add
push
orl
dec
and
lea
outsl
mov
mov
xor
mov
or
lock
pop
repnz
in
movl
cmp
cmp
loop
ror
fistl
test
imul
jmp
sub
push
jge
push
or
fucomp
sbb
inc
adc
xchg
and
fs
jb
mov
and
push
push
mov
test
mov
fs
lock
push
sbb
fcompl
push
push
jne,pt
mov
stos
outsl
jmp
hlt
fsubl
das
mov
mov
sbbl
rorb
ss
jg
repz
and
jnp
mov
inc
or
xchg
push
inc
xchg
jge
mov
leave
test
pop
je
dec
mov
les
aaa
stos
jbe
pop
xchg
pop
mov
pop
sti
cmp
inc
mov
shlb
int3
dec
dec
adc
fsubrs
mov
mov
mov
sbb
jb
mov
test
dec
scas
push
mov
mov
les
pop
xchg
jg
or
xor
pop
mov
fs
movsb
jl
mov
pop
pop
cmpsl
ret
addl
ss
frstor
movsb
and
push
push
loop
subl
mull
jnp
or
mov
fadd
inc
lds
push
jle
cmpsl
adc
push
mov
rcl
jb
adc
inc
adc
jno
loope
stc
fadds
xor
mov
push
pop
mov
andb
aad
fs
mov
xor
sub
aaa
xchg
push
pushf
int3
dec
add
les
into
jne
ds
roll
mov
pop
lahf
adc
jg
mov
clc
punpckhbw
js
pop
pop
jle
inc
js
pop
test
out
sbb
mov
dec
movsb
mov
or
pop
lret
pop
sbb
insb
adc
mov
jle
rclb
xchg
inc
psubsw
push
cmp
rolb
cmp
hlt
sti
sub
cmpsl
ss
lock
leave
cmp
test
pop
xchg
data16
push
jl
jle
ds
push
push
sbbb
adc
pop
inc
mov
ror
arpl
aas
repnz
loope
lods
popf
and
jge
jnp
in
dec
fmul
ret
scas
fiaddl
and
call
xchg
mov
es
mov
jmp
mov
mov
push
mov
mov
fstpl
fcompl
xchg
or
push
sub
jle
pop
jns
popf
leave
sarb
out
stos
sbb
mov
fcmovbe
inc
jno
shr
inc
sti
push
add
dec
xchg
sti
repz
xchg
dec
sti
push
cmpsl
push
push
xchg
adc
jo
xchg
inc
pop
or
push
cmp
int3
push
fxam
rclb
and
mov
scas
shlb
push
and
rorl
ljmp
adc
aam
push
and
dec
mov
mov
testl
or
cmp
pop
xor
enter
movsl
mov
xor
lcall
push
xorb
push
js
fs
lds
fildll
cmp
lahf
dec
cmp
ret
movsl
add
stc
cmp
push
push
dec
or
leave
or
mov
or
jo
jnp
inc
mov
add
mov
bswap
pop
and
stc
scas
sbb
imul
cld
mov
pop
pop
or
imul
mov
lahf
push
sbb
ds
icebp
in
xor
sbb
mov
in
aam
fnstsw
adc
imulb
pop
idivb
push
in
xor
lods
fcom
mov
leave
ljmp
mov
jmp
dec
hlt
mov
xor
loope
std
stc
and
or
inc
jl
repz
addr16
sbb
jno
sub
mov
dec
cmp
data16
mov
movsb
rolb
repnz
loope
pop
pop
gs
xor
add
adc
in
mov
out
les
scas
sub
mov
pop
mov
xor
jnp
pop
dec
sbb
xchg
pop
daa
xchg
mov
pop
mov
movb
push
xorl
popl
dec
aam
cld
aam
add
lods
fs
dec
test
push
mov
jno
xor
adc
lret
mov
rcll
mov
pop
xor
scas
rolb
push
sbb
push
push
and
cmc
push
mov
fwait
sbb
repz
sbb
inc
push
pop
xor
sbb
jns
inc
pop
in
aam
add
lcall
int
mov
or
pop
jp
mov
xlat
and
jno
inc
sbb
lret
pop
outsb
sbb
mov
mov
iretw
testb
xlat
fs
push
ljmp
pop
sbb
pop
fcoml
fisttps
inc
ficoms
jle
les
cmp
pop
dec
into
push
test
rorl
dec
loope
pop
in
mov
adc
push
sahf
cld
lcall
setae
cmp
insl
jecxz
cmc
mov
pusha
jge
and
pop
cmp
fsubl
inc
mov
xchg
orb
fimull
lahf
hlt
lea
ds
fisttps
gs
sub
push
cmpsb
stos
dec
sahf
daa
jl
pop
pop
jnp
fldt
mov
fcoml
nop
fildl
mov
push
cmp
js
test
repnz
pop
sarl
clc
jge
push
sahf
xor
add
and
push
idivb
mov
and
pop
xchg
xchg
inc
outsb
mov
int3
cld
mov
mov
repnz
loope
or
test
and
rcrb
pop
push
stc
mov
into
stos
sbb
imul
and
jbe
stos
pop
mov
mov
mov
mov
ljmp
imul
and
push
mov
sbb
adc
mov
imul
out
dec
mov
int
inc
lods
std
or
xchg
jbe
lods
cmp
push
cmp
sti
sub
inc
or
and
sti
xor
je
xchg
loope
insl
push
cld
jmp
xchg
mov
mov
out
adc
jl
cwtl
cmp
add
pusha
sub
insb
outsl
loop
mov
xor
xor
mov
fidivrl
xor
mov
nop
jg
add
inc
mov
pop
adc
add
xchg
sub
pop
mov
pop
xchg
cmp
shrl
xchg
cmp
repz
mov
dec
rcll
dec
out
push
inc
jb
popw
sub
outsb
fcoml
inc
xchg
and
sti
adc
jge
fs
mov
sub
xor
push
ret
sub
scas
jns
fiadds
lods
xchg
lea
lods
mov
pop
add
movsb
testb
aam
pop
sbb
cld
cmp
add
lock
push
and
push
push
mov
daa
imul
dec
out
pushf
dec
out
test
enter
into
stos
insb
insl
pop
jl
sub
mov
and
cmpsl
add
push
jle
sbb
incl
jmp
ret
cmp
jae
fstl
hlt
push
loope
fcoms
jb
stos
mov
jecxz
xchg
inc
cmpsb
shl
inc
pop
fstpt
mov
xchg
jbe
aaa
dec
cwtl
in
xchg
mov
and
leave
sbb
dec
stc
popf
cltd
movl
iret
push
fisttpll
ss
xor
les
sbb
sbb
pop
imul
shlb
cmp
pop
adc
mov
lods
pushf
out
addr16
ja
cld
xchg
jns
sbb
push
mov
fsubl
or
mov
insb
icebp
scas
fdivs
push
addb
das
jl
mov
insl
sbb
mov
jge
pop
cmc
dec
roll
mov
hlt
testl
xor
cmp
fiaddl
adc
js
xchg
pop
xor
xor
jg
or
and
loope
repz
inc
sbb
aaa
iret
mov
or
push
pop
xchg
inc
dec
push
shlb
ljmp
jmp
lods
les
mov
jge
mov
xchg
je
push
cld
rclb
jmp
and
adc
negl
out
cmp
mov
sbb
push
sbb
fstl
xor
inc
add
ja
inc
loopne
add
lock
adc
mov
jg
adc
dec
lcall
popa
popf
lret
test
shl
fdivrl
into
pop
pop
rolb
jnp
mov
sub
pop
xor
jb
push
ret
inc
insl
jmp
jb
mov
es
inc
repz
bound
in
fsubrl
enter
stos
dec
aad
add
inc
mov
int
nop
lcall
aas
xchg
jl
mov
popf
ss
es
xchg
push
pop
pop
push
xor
dec
or
aaa
mov
mov
or
ljmp
out
cmpsl
in
mov
sub
test
sahf
movsl
xchg
out
xor
cmp
and
or
push
repz
pusha
or
xchg
jge
jno
sub
xchg
leave
push
mov
popf
jb
mov
jmp
shlb
pop
inc
add
push
mov
or
push
lds
das
popf
push
jl
jae
xor
gs
push
cmp
cld
or
push
fbld
mov
jecxz
icebp
fldenv
cld
add
lods
aas
test
or
sub
cmp
jmp
jg
xor
or
lods
out
fmul
fs
jmp
ss
or
pop
dec
call
push
jle
rolb
in
mov
mov
out
and
adc
cmp
sbb
mov
jmp
loop
xchg
dec
imul
mov
sub
sahf
ja
xchg
pslld
xor
pop
lock
jp
xor
ret
ds
push
inc
jae
mov
call
scas
repz
outsl
sti
sbb
mov
sbb
xlat
ret
loop
xor
lcall
jo
mov
inc
cltd
jle
pop
sub
fsubrl
lock
rorb
sbb
xor
mov
bound
int3
jno
ja
push
icebp
xor
mov
call
hlt
jg
dec
sahf
pop
ds
push
mov
or
es
in
and
inc
in
push
outsl
mov
inc
mov
out
adc
fstpt
in
sub
xchg
jo
push
cmp
shlb
add
adc
movsl
loop
into
jmp
cmp
sub
stc
test
and
cmpsl
or
push
jmp
or
mov
ret
pop
push
insb
adc
mov
xor
pop
or
inc
testl
or
pop
mov
adc
test
pop
fst
or
jbe
xchg
outsl
in
and
int3
aad
in
sbb
mov
mov
fldt
mov
xchg
adc
lret
inc
xlat
sarl
add
flds
fcmovb
test
jae
xchg
inc
adcb
push
rclb
xchg
jp
shlw
lds
mov
pusha
xchg
insb
sbb
std
push
leave
pop
jb
ja
popa
ret
subl
push
orb
or
sub
and
and
fmuls
fdivr
in
imull
dec
push
subl
mov
movsl
es
mov
cmp
vmwrite
jbe
jl
enter
fbstp
popf
jle
scas
clc
stos
mov
lods
rcrb
mov
fldt
stos
mov
fs
mov
pop
push
insl
bound
sbb
lret
std
popf
call
dec
sbb
cmp
rcrl
pusha
mov
stc
adc
mov
test
stc
mov
cmc
xchg
mov
shrb
int3
subl
add
sbb
mov
scas
add
scas
outsl
outsb
cmc
outsl
xchg
mov
lret
cmpsb
sub
and
or
xor
xor
push
les
addr16
fs
xlat
int
pusha
out
hlt
insl
mov
mov
outsb
lret
pop
ds
mov
hlt
psllq
js
out
xchg
stos
outsb
jnp
sbb
inc
insb
movsl
in
icebp
jbe
roll
push
in
cmp
cmp
push
hlt
xchg
shll
xchg
nop
push
jmp
pop
mov
mov
dec
int
and
jl
test
lret
std
shrb
mull
jmp
inc
inc
mov
fcoms
testl
jmp
iret
mov
popf
jge
lret
je
hlt
inc
cwtl
sub
inc
mov
add
jp
rcll
and
jb
pcmpeqd
push
add
int3
in
push
imul
jmp
das
sub
lods
mov
js
movsb
push
mov
movsl
or
ljmp
iret
sub
push
lahf
sahf
or
xchg
or
lcall
mov
lret
and
jge
mov
push
int3
and
popa
or
sbb
inc
arpl
repnz
clc
sub
push
ljmp
imul
ds
scas
call
push
jno
bound
andl
dec
dec
jne
arpl
or
fdivl
cmp
inc
call
xorl
dec
loope
add
sbb
lahf
fcmovnbe
aam
pop
mov
in
and
xchg
or
or
add
cwtl
push
mov
adc
aam
add
outsb
idivl
push
in
gs
add
push
roll
sbb
and
adc
mov
jb
test
sbb
fmull
sbb
js
test
add
or
enter
cmp
filds
stos
jmp
std
inc
sti
stos
or
push
mov
fwait
xchg
imul
jl
sub
ljmp
push
push
idiv
cmp
mov
xchg
adc
xchg
inc
je
mov
sub
xchg
subl
xchg
add
sub
in
aaa
mov
addl
roll
lcall
or
scas
and
pop
mov
cmovne
push
sub
xor
std
lods
fwait
add
and
data16
stos
xchg
mov
js
xor
outsl
xchg
lock
dec
sub
jmp
pop
xor
dec
push
js
cs
lock
xchg
arpl
pop
jecxz
orl
repnz
les
pop
out
cwtl
pusha
inc
inc
mov
fstl
lea
sbb
pop
xor
aaa
adc
ret
out
adc
ja
aam
jp
dec
sbb
dec
jge
push
in
xchg
arpl
cmp
push
lret
fiaddl
jge
mov
fisttpl
shlb
push
stc
jecxz
test
push
mov
aaa
in
pop
pop
lods
jge
int3
mov
mov
rclb
cwtl
daa
sub
fnsave
movsl
mulb
mov
and
xchg
mov
stos
roll
push
popa
add
fdivrs
lret
inc
push
sub
iret
jge
dec
cmp
ffreep
stos
in
push
insb
lods
stc
sub
mov
and
out
into
or
jns
and
andl
je
push
adc
rclb
mov
ret
inc
out
stos
loopne
adc
inc
orb
push
pop
sbb
sbb
stos
enter
xchg
jne
cltd
sarb
repz
mov
mov
loop
add
mov
push
out
js
outsb
or
lret
shrl
xchg
push
sbb
or
test
cmp
mov
jnp
mov
jp
adc
mov
aam
mov
sbb
add
sub
and
imul
aaa
cld
inc
out
ret
sti
aaa
js
push
xchg
std
es
push
adc
jle
rorb
sti
fs
loop
scas
adc
ret
mov
mov
nop
pusha
adc
add
dec
filds
movsb
lcall
adc
fisubs
xor
je
and
sub
push
or
xchg
test
push
test
or
cmc
xlat
add
outsb
mulb
sarb
pushf
xchg
push
rcll
movsb
cmp
movsl
jae
shll
inc
jle
pop
movsl
inc
xor
insl
cmc
mov
lods
xor
mov
xchg
dec
xchg
add
dec
jg
movsl
push
dec
insl
pop
es
xchg
cmpsb
insl
lea
sub
xor
js
popf
jnp
outsl
dec
js
je
js
xor
pop
pushf
cmpsl
inc
sahf
fs
clc
rolb
fs
push
jo
in
adc
or
inc
jno
xor
ds
sub
imul
sub
dec
dec
jb
push
xor
loopne
lea
pop
pop
addl
lcall
sub
or
insb
cltd
popf
sbb
imulb
add
push
lret
into
je
ret
insl
repnz
es
push
jmp
cmpsl
mov
xchg
lds
mov
stos
mov
fidivl
jo
adc
test
adc
lahf
pushf
cmpsl
mov
cs
cwtl
pop
movsb
jmp
scas
scas
and
jle
enter
push
aas
adc
mov
fs
xchg
mov
pop
scas
js
je
cld
sub
jg
test
lcall
popf
outsl
xchg
incl
sub
jmp
fidivrl
xchg
dec
pop
mov
pop
xchg
ja
mov
mov
test
dec
pop
mov
fsubs
ljmp
inc
arpl
jmp
jb
out
mov
scas
ret
cmpsb
sbb
and
stos
fnsave
imul
xchg
mov
jle
insl
mov
rol
test
sti
scas
push
xchg
in
add
cli
adc
loope
dec
jl
rcll
jns
xchg
arpl
sarl
xchg
in
leave
imull
adc
repz
xor
dec
decl
and
jb
pop
and
nop
jae
lcall
add
pop
cli
enter
cmp
cld
dec
cmp
lds
pop
cmpsb
dec
pop
into
jae
aad
fidivl
jecxz
test
cmp
jbe
les
sbb
cwtl
mov
jne
insl
mov
outsl
out
mov
mov
lods
icebp
sub
dec
arpl
mov
adcb
pop
jbe
jg
imul
repnz
rorl
add
rcr
std
cmpsb
stc
jae
shlb
jmp
mov
daa
popa
ret
and
insb
ss
mov
cs
mov
cwtl
fwait
pop
pushf
mov
sbb
mov
and
aam
push
xchg
sub
or
xor
jle
mov
enter
ss
out
lock
out
decl
or
ret
adc
out
jne
adc
xchg
and
shrb
push
mov
cmp
xor
inc
pop
sahf
rcll
cmp
popf
xchg
movsb
sbb
popf
and
inc
mov
adc
fimull
cmpsl
sub
pusha
sub
jmp
sbb
sbb
fdiv
sub
ja
scas
pop
aad
test
test
dec
jno
dec
cwtl
or
pop
into
and
in
push
pop
ljmp
rcll
popa
push
cwtl
cmp
jl
or
sbbl
sbb
sub
push
mov
int3
call
gs
ret
sbb
fistl
add
dec
stc
movsb
mov
cmp
sub
sbb
mov
arpl
inc
test
jno
adc
or
rcll
sbb
or
jle
push
xor
or
xor
adcl
cld
jge
in
int3
jmp
fisttps
or
lock
int
add
sub
lahf
sub
mov
add
cltd
imul
pop
loopne
adc
sub
sti
push
pop
push
test
and
push
jbe
shll
roll
ja
aad
jnp
or
jl
adc
iret
cmp
les
xor
dec
scas
leave
movsl
addr16
cmp
loop
addb
sub
jnp
and
push
jbe
ja
push
cltd
test
xchg
les
mov
and
outsb
or
jo
inc
add
push
not
jns
out
push
adc
sbb
pusha
mov
sti
out
shlb
jmp
adc
jmp
adc
cmpsl
cli
add
xor
bsf
mov
xchg
mov
mov
scas
mov
dec
adc
call
cs
xchg
fldenv
xor
add
ret
fwait
add
pop
pop
sar
and
ss
test
pop
in
push
xor
cmp
cmp
lret
shlb
imul
cmp
test
cmp
mov
out
mov
fdivrl
cmp
xchg
enter
andb
push
jl
or
nop
sbb
js
pop
adc
xchg
fbstp
in
je
mov
lea
repz
pusha
sub
es
mov
outsb
dec
push
lret
inc
xchg
jge
in
aaa
mov
xchg
or
add
xchg
dec
fisubl
pusha
scas
add
adc
outsl
mov
rol
xor
je
pushl
mov
mov
test
lock
mov
push
and
ja
imul
inc
fmulp
loopne
jge
into
loop
shll
add
cli
cmc
push
add
xor
out
cmp
pop
mov
ljmp
add
jl
notl
xor
mov
in
pop
add
or
test
adc
sbb
daa
out
push
sbb
mov
fiadds
pop
lahf
icebp
into
or
pop
mov
push
adc
jbe
fwait
pop
sub
out
enter
or
xchg
jno
mov
mov
aad
iret
mov
sbb
push
jae
mov
inc
repz
pop
repz
nop
bound
or
jg
lret
mov
pop
jp
xchg
jbe
xchg
mov
icebp
repnz
adc
inc
inc
scas
jl
adc
stos
pop
mov
xor
es
or
inc
dec
pop
jge
movsb
pop
lods
stc
sub
push
sbb
in
adc
ret
cmp
pop
pop
fs
push
bound
aas
testl
sub
inc
jo
jle
pushf
arpl
dec
les
mov
push
rolb
inc
xor
mov
stos
jns
push
jno
std
or
fcoms
imul
aam
pop
cld
xor
push
adc
dec
inc
mov
lea
and
add
pop
pop
sbb
sub
mov
dec
cmc
jno
inc
ja
out
xor
jp
cmp
fs
mov
inc
test
cmc
inc
mov
mov
cld
adc
push
lock
adc
ret
or
rorb
jbe
dec
ret
xchg
test
inc
sbb
call
cmc
cld
pop
push
mov
imul
fists
daa
pop
cmp
mov
rorl
fldenv
xchg
clc
je
test
jmp
movsl
js
mov
mov
stc
mov
rorb
je
scas
dec
xchg
out
inc
or
sub
jg
fisttps
push
mov
jp
add
xchg
jne
ds
fistps
adc
mov
enter
xchg
ret
lcall
out
fiaddl
movsl
nop
outsl
ret
lea
lock
sahf
adc
clc
push
xchg
cmp
out
cmpb
imul
inc
fucompp
or
sahf
mov
data16
daa
repz
mov
out
aam
bound
push
sub
xchg
sbb
loopne
gs
mov
inc
aam
xchg
js
and
pop
clc
push
pop
dec
fnstenv
push
push
int3
ja
pop
mov
xchg
out
adc
movl
adc
out
and
in
adc
leave
icebp
ficoms
shr
fsubs
dec
xor
repnz
addr16
push
outsb
fstpl
and
inc
sub
jg
shlb
stos
ficoml
and
inc
fadd
lock
loopne
and
jae
pusha
fidivs
loope
xchg
mov
adcb
mov
mov
ror
sbb
fsts
xchg
lret
jo
insb
push
rorl
ds
mov
aas
push
adc
nop
or
push
out
into
or
add
cmp
push
jno
mov
xchg
in
pop
lcall
and
xchg
push
and
rclb
jg
jo
lret
push
call
pop
sbb
ret
lds
into
lcall
or
mov
test
mov
mov
shll
hlt
jbe
imul
mov
sbb
fdivr
jns
or
lret
fcomi
and
imul
xlat
dec
jg
je
movsl
out
or
jno
jnp
mov
mov
aaa
les
push
xchg
mov
inc
testl
sbb
mov
scas
pop
inc
movsl
xor
sbb
inc
outsl
fimull
mov
cwtl
icebp
push
pop
jno
inc
dec
mov
cmp
inc
sti
cltd
pop
negb
pop
mov
xchg
call
adc
sbb
mov
mov
cmp
cmpsl
adc
add
mov
pop
ljmp
push
out
pop
cmp
cmp
movsb
adc
fildll
stos
pop
movsl
pop
xor
adc
cli
cmpsb
mov
test
and
imul
fimuls
mov
adc
arpl
inc
and
loope
jmp
stos
and
hlt
pop
mov
inc
imul
sahf
xchg
movsb
ds
fxch
sbb
icebp
inc
btr
imul
mull
pop
fdivl
xor
mov
xchg
cmpsl
adc
clc
lods
pop
inc
push
fstl
gs
pop
jmp
movsb
hlt
or
bound
fs
hlt
sti
dec
xor
outsb
mov
daa
mov
xchg
and
mov
into
push
nop
es
sub
and
mov
idivl
sbb
cltd
inc
jns
pop
mov
inc
pop
adc
xchg
mov
sub
cmpsb
push
lret
xlat
out
mov
fstpl
push
jb
loopne
in
shll
into
out
sub
fildl
sbb
in
xchg
mov
add
out
pop
jl
xlat
pop
cmpsb
shlb
outsb
out
leave
mov
sbb
mov
cld
fs
fdivl
mov
cmc
inc
sub
sub
lds
mov
add
std
in
mov
pop
adc
mov
subl
sbb
sarl
es
inc
lods
cmc
call
das
icebp
or
in
fcompl
lea
inc
subb
inc
sub
dec
bound
xor
mov
and
pop
clc
in
fstpl
faddl
dec
insb
dec
sub
and
out
mov
repz
cmp
or
gs
nop
test
test
pop
stos
test
jmp
sub
jb
lret
adc
dec
xchg
aad
mov
lods
push
xor
pop
test
mov
sub
add
mov
pop
mov
shll
pushw
push
lods
int
das
test
lods
scas
rclb
inc
scas
hlt
fs
mov
jecxz
pop
jnp
sub
or
mov
mov
pop
out
xchg
mov
popw
hlt
xor
je
mov
aad
inc
jl
out
cmpsb
and
icebp
leave
popf
das
pop
mov
mov
lcall
into
cmpsl
inc
ret
mov
icebp
jns
jnp
sub
aaa
nop
mov
loopne
movsb
es
dec
mov
xchg
out
pop
pop
sbb
repz
aam
or
scas
lret
cld
dec
pop
rcl
mov
scas
dec
pop
mov
loope
gs
jbe
pop
out
jle
rolb
aam
cmp
inc
xchg
pop
adc
into
inc
mov
add
xchg
adc
sub
sub
push
std
cmc
and
pop
xchg
inc
sbb
cmp
jne
push
jbe
jnp
push
jecxz
push
rorb
pop
add
mov
jl
mov
jl
stos
lds
sub
sbbl
stos
jbe
jae
sbb
sti
pop
cmp
jle
jb
sbb
push
test
int3
jno
sub
and
xlat
popf
stos
sub
lahf
adc
jns
dec
jno
sub
je
inc
addl
repz
inc
mov
addr16
or
xchg
sub
mov
outsl
rorb
pop
leave
mov
hlt
xchg
inc
lahf
std
xor
out
out
rol
scas
daa
sbb
adc
out
aam
loope
bound
push
cs
dec
cs
test
ds
and
insl
int
outsl
mov
cmpl
stos
and
xorb
stos
or
sahf
ja
scas
cwtl
xor
push
xchg
sub
out
hlt
mov
in
adc
fidivrs
dec
push
sbbl
fimuls
leave
or
out
adc
in
test
and
pop
lret
add
mov
pop
xor
inc
mov
bswap
sub
test
xor
lahf
fs
movsl
fisttps
sbb
adc
loopne
jg
js
aas
jae
fadds
cmp
dec
jo
mov
push
daa
cmpb
std
subb
pop
aad
push
ds
dec
loopne
aaa
adc
gs
xlat
rorl
jne
cmp
es
mov
in
mov
cmpsb
or
mov
fs
pop
repz
xchg
cmpsb
cli
fwait
cld
ficomps
into
insb
pop
insb
sbb
push
in
push
das
test
cmpsl
cmp
sti
sarl
add
negb
ss
sub
aaa
fcoml
aas
ja
aam
inc
iret
cmp
stos
fdiv
xchg
inc
jb
pop
push
test
int3
push
cmp
sahf
in
xchg
push
push
mov
push
lret
mov
xor
jns
lds
lods
sub
test
or
testb
int
or
mov
outsb
xchg
out
pop
fstps
sarl
loope
push
inc
inc
mov
and
mov
hlt
mov
test
jb
push
jae
jp
lea
inc
fcomp
mov
mov
clc
lret
in
bound
inc
xchg
sbb
addb
dec
mov
lret
push
sti
jp
cmp
jo
rorb
mov
jns
add
ret
jb
xor
mov
mov
xchg
sub
add
mov
fsubs
mov
push
push
sahf
sahf
dec
mov
xchg
jmp
mov
dec
pop
into
pop
inc
into
sub
cmp
mov
adc
cmc
mov
mov
outsl
add
pop
inc
js
push
jne
lods
popf
imul
cmp
in
jno
movl
mov
adc
lods
push
test
dec
test
add
int
pop
loopne
out
add
sbb
dec
pop
pop
add
xchg
and
lock
mov
adc
fcmovbe
or
pusha
pop
xor
int3
sbb
into
and
xor
cltd
push
push
arpl
xchg
sub
push
and
fwait
dec
fadds
mov
pop
xchg
or
sti
cmpsb
mov
std
adcl
les
push
in
dec
in
in
gs
dec
ret
and
daa
jmp
dec
in
pop
push
xchg
pusha
dec
push
lods
xchg
arpl
jp
push
mov
repz
inc
decb
pop
rolb
xchg
clc
out
xor
inc
imul
pop
jno
pop
push
test
jae
pop
hlt
inc
mov
cmpl
daa
and
mov
push
adcb
adc
jnp
dec
jl
scas
jp
nop
sub
adc
add
cmpl
out
lahf
inc
jne
cmpsb
add
scas
add
lret
movsb
mov
jp
or
or
sub
cld
mov
lret
add
push
stos
es
mov
ficomps
adc
jno
xor
cmp
out
dec
jne
adc
aas
sarl
mov
cmp
mov
shrb
or
je
mov
pop
inc
insb
add
xor
or
enter
sbb
movsb
jo
into
and
mov
sbb
dec
mov
pop
adc
jmp
inc
fucomi
icebp
adc
arpl
mov
ret
sbb
inc
and
movsl
jns
mov
mov
mov
sub
mov
cmpsl
pop
xchg
fsubl
xor
cmpsl
mov
hlt
pop
mov
jp
pop
andl
bound
cs
dec
pop
fldt
or
fisttpl
dec
mov
test
mov
dec
and
mov
mov
inc
mull
outsb
inc
sbb
xchg
fwait
test
push
fistps
or
daa
addb
cmp
or
or
and
cltd
mov
sti
push
xor
mov
push
inc
out
fs
cmpsb
dec
sbb
das
adc
cmc
jnp
addr16
xchg
cmpsl
sbbl
popa
xor
int3
push
mov
lret
cmp
movsl
cli
push
mov
test
sbb
push
loopne
sarl
leave
outsl
int3
call
inc
dec
mov
jmp
mov
cmp
push
adc
mov
jns
in
push
popa
xor
add
loopne
adc
aas
mov
adc
out
push
add
iret
cmpsl
or
or
jl
mov
push
mov
les
jo
sahf
ds
sub
daa
mov
insl
xor
in
mov
lret
pop
inc
out
lcall
jecxz
cwtl
mov
mov
stos
fcoml
mov
ljmp
fwait
inc
test
sub
add
iret
lock
jne
fidivl
icebp
in
insl
jne
fcompl
in
and
in
mov
mov
iret
mov
out
cmp
roll
aaa
rcll
cmpsl
dec
jae
daa
sbb
outsl
in
jge
mov
pop
adc
pop
std
mov
push
jno
xor
andb
test
add
xchg
add
inc
mov
sbbb
mov
es
mov
ds
pop
xchg
testl
ljmp
pop
repnz
ljmp
fsub
insb
cmc
and
and
dec
in
adc
ret
xor
and
je
mov
stos
push
xchg
ret
lds
jg
sbb
orb
scas
int3
jge
xchg
insb
xchg
fs
adcl
add
pop
lcall
je
out
cmp
mov
mov
jp
adc
and
push
push
adc
jae
loopne
and
sub
clc
daa
xor
clc
dec
xor
pop
test
sbb
xlat
xchg
das
in
add
xor
cmp
mov
out
dec
imul
dec
lret
adc
mov
jne
fstp
inc
inc
aad
fadds
sbb
xor
and
push
loopne
adc
es
jle
xor
push
pop
in
mov
outsl
fsubr
xchg
add
mov
or
pop
pop
dec
mov
inc
xchg
test
xchg
mov
fwait
icebp
and
adc
stc
stos
popa
addr16
arpl
xchg
lret
sbbb
out
push
add
xor
dec
sub
sti
mov
cmp
or
and
mov
int
lcall
int
sub
lods
push
lahf
mov
jns
idiv
mov
adc
insb
fxch
xor
ss
push
pop
sarl
cmp
dec
call
inc
mov
xchg
push
std
xchg
lcall
mov
outsb
mov
jns
rep
scas
in
xor
fsubrs
mov
pop
jo
mov
adc
mov
jl
sti
cmp
push
jmp
dec
sahf
bound
stos
ja
inc
mov
frstor
sub
inc
pop
jl
es
mov
popa
scas
or
lret
ret
push
in
mov
mov
xchg
mov
movsl
in
pop
sbb
mov
mov
adc
icebp
mov
dec
pushf
sub
dec
dec
push
ret
push
pop
xor
xchg
outsb
mov
ljmp
adc
xlat
sub
ja
mov
int3
mov
jb
push
push
dec
mov
scas
mov
ja
icebp
es
mov
je
adc
mov
addb
dec
or
dec
or
adc
lock
mov
pop
mov
out
hlt
xchg
jmp
pop
cmp
sbb
sub
inc
inc
rcr
xor
jl
sbb
test
lahf
mov
dec
cld
jno
int
mov
push
jnp,pt
nop
cmc
rdtsc
xor
and
push
dec
xchg
loop
loope
sub
dec
or
xchg
lods
sub
test
pop
pcmpgtw
and
mov
addl
jns
divl
ljmp
movsl
mov
dec
mov
push
mov
outsb
lods
outsb
ret
nop
sub
sbb
adc
mov
and
jge
mov
adc
call
in
sbb
fmull
aaa
roll
js
test
cmc
add
clc
adc
push
pop
jnp
lcall
mov
in
fistps
sub
add
adc
popa
sub
decb
xor
mov
cmpl
mov
jbe
pop
add
lret
cmp
xor
dec
mov
push
mov
add
xor
and
sarb
scas
ret
xor
out
lock
shlb
or
mov
dec
inc
sub
popa
scas
push
mov
adc
mov
dec
xchg
lret
add
mov
mov
jmp
aam
jnp
and
pop
jl
daa
insb
cltd
xor
xor
or
adcb
cmc
mov
sub
jg
dec
rcrb
lret
std
test
or
fs
inc
movsl
dec
push
sub
sarb
mov
inc
mov
mov
xor
arpl
pop
mov
fists
unpckhps
adc
pop
call
xchg
or
mov
cmp
out
les
lahf
push
mov
test
pusha
repz
loope
sub
and
adc
push
mov
cli
scas
imulb
and
and
or
push
mov
add
pmaxub
pop
in
and
sti
push
xchg
xor
adc
xchg
jle
adc
out
scas
cmpsl
inc
xchg
jae
mov
rol
or
pop
jg
das
pop
xchg
daa
ret
cmp
mov
lcall
stos
jno
xchg
fadds
ds
adc
add
cmc
mov
pop
cmpsb
pop
or
mov
mov
mov
sbb
fidivrs
or
push
ffreep
push
outsb
and
stos
call
xlat
pop
inc
jle
rcl
sbb
cwtl
hlt
mov
xor
hlt
xor
stos
pushf
push
fstps
mov
jecxz
mov
enter
dec
ret
pop
xchg
xorb
mov
scas
fs
stos
in
js
mov
mov
pmulhw
fdivs
sbb
rcll
int
push
and
add
orb
xchg
pop
in
push
dec
iret
xchg
or
mov
fmul
sbb
popf
jo
outsl
fsubrl
pushf
xchg
in
lock
dec
loop
and
xor
and
add
clc
rcrb
movsb
test
fwait
jle
pusha
fadds
nop
and
idivb
cwtl
imul
add
mov
xchg
loopne
add
gs
test
in
je
mov
add
adc
jno
mov
cmp
mov
mov
enter
jmp
xchg
cmpsl
cmp
push
pop
mov
test
jle
repz
jbe
insl
sbb
repnz
mov
sahf
mov
push
or
test
jno
dec
cmp
lret
jle
frstor
leave
adc
sub
ret
dec
sarl
aam
repz
adc
xchg
inc
cmp
add
stos
test
shll
mov
pushf
stc
in
push
aaa
insb
xor
sub
jb
mov
jl
int3
shlb
dec
aad
enter
pop
inc
repz
mov
lahf
or
xchg
scas
mov
in
pusha
popf
sbb
dec
lcall
adc
aam
mov
rolb
cmp
xchg
push
int3
test
pop
in
xchg
pusha
or
dec
xchg
fadds
stos
fcompl
insl
xor
movsl
es
loope
or
ficoms
arpl
loope
jl
pop
subb
out
push
arpl
sbb
test
cmp
inc
mov
adc
inc
shrl
or
cli
dec
mov
adc
or
inc
loopne
ja
adc
dec
xor
imul
out
push
testb
and
lcall
lret
jge
mov
sbb
dec
jne
sbb
jle
stos
mov
jno
adc
and
popf
pop
sti
mov
sbb
cltd
jae
sub
mov
sub
mov
adc
mov
das
bound
xor
mov
fs
pushf
idivb
cltd
lods
mov
das
cltd
ficompl
jle
or
mov
push
icebp
jo
mov
fcoms
arpl
mov
clc
mov
ja
adc
pop
inc
out
dec
roll
xor
sub
and
gs
adc
xchg
xor
fs
mov
insb
addr16
inc
add
xor
xchg
sbb
cltd
lock
pop
mov
sahf
push
in
mov
dec
pop
push
mov
cmp
ret
bound
cmpsl
into
mov
pop
inc
les
xor
repz
pop
push
dec
xchg
mov
adc
adc
aas
gs
test
lret
dec
stos
ret
mov
data16
dec
clc
testl
xchg
scas
jp
mov
cmp
hlt
fld
add
out
push
jg
les
idivb
je
inc
dec
lods
loope
in
std
inc
aaa
push
pop
mov
andb
sub
jecxz
xor
insb
pop
jae
test
inc
inc
mov
movsl
adc
xor
sub
ret
lds
mov
ret
pop
je
inc
sbb
das
lcall
ss
adc
mov
pop
or
fisubl
lret
or
and
fwait
scas
mov
xor
nop
jle
push
pop
clc
rcll
push
lods
dec
push
cmp
mov
sbb
fdivrp
xchg
test
mov
imul
lock
das
lds
dec
xor
jecxz
push
mov
inc
orl
mov
stc
sbb
fwait
xor
sub
adc
mov
aad
scas
repz
aam
jne
nop
pop
ret
lcall
mov
insl
inc
mov
in
addl
xchg
mov
jb
psubw
rolb
inc
lret
dec
mov
or
add
leave
mov
cmp
scas
jb
jo
outsb
inc
cmp
jne
sub
hlt
or
div
sahf
mov
arpl
inc
add
mov
jmp
clc
daa
or
push
in
mov
mov
sarl
dec
jo
ja
mov
mov
clc
out
and
je
arpl
dec
jecxz
in
pop
mov
loop
lods
sbb
and
dec
lock
adc
lret
jle
outsl
test
or
mov
bound
add
call
lds
fidivs
sub
in
lods
jae
incl
sbbb
xor
sbb
jne
in
mov
out
jecxz
lcall
sbb
lret
sahf
fbstp
imul
or
in
ja
arpl
mov
sub
mov
cmpb
xor
sahf
mov
mov
test
icebp
push
ds
mov
lock
mov
std
sbb
fwait
mov
fisttpl
dec
pushf
adc
les
lcall
stc
jno
pusha
push
xor
jo
aas
jo
dec
dec
lea
jl
cmp
mov
repz
pop
and
neg
jmp
loope
sub
inc
lret
int
ret
sar
dec
or
inc
orb
sbb
sub
push
mov
push
push
rorb
mov
test
mov
es
aam
into
dec
and
xchg
cmpsl
div
add
jae
mov
insl
filds
sahf
call
in
jmp
adc
pop
sub
cmp
mov
or
dec
xchg
jl
inc
in
push
cli
mov
adc
pusha
mov
xchg
inc
lods
mov
mov
sbb
out
cmp
test
enter
or
jo
insl
fsubs
jge
or
outsb
fiadds
jb
adc
aad
and
or
js
push
xchg
negl
and
lods
fwait
in
and
mov
test
in
loope
test
dec
jg
inc
xchg
xchg
out
adc
daa
inc
push
sbb
mov
ud0
add
out
insb
lcall
jbe
fisubs
xor
dec
push
xchg
fistl
pop
data16
daa
xor
stos
cmpsb
mov
ss
xchg
repnz
ja
pop
idivb
inc
or
out
sbb
cmc
push
xchg
add
inc
fsubrs
cmpsl
dec
dec
inc
sub
ss
pop
fcomps
lds
xor
loope
ficomps
scas
test
jle
in
mov
imul
cmp
ss
jmp
leave
fcmovnbe
inc
pop
xchg
dec
test
pop
sti
or
out
int3
push
mov
mov
out
aas
xlat
cwtl
hlt
dec
push
xchg
pop
mov
push
sub
int3
loop
imul
dec
repnz
push
sbb
adcl
sbb
mov
pushl
popf
mov
clc
xor
mov
jle
negl
mov
push
jno
or
xchg
in
xor
stc
cli
in
daa
je
ficompl
ds
and
cmpsl
mov
dec
arpl
shll
push
out
addr16
mov
lods
fwait
and
sahf
sub
jae
rcrl
fidivrs
cmp
inc
dec
lock
testb
xchg
xor
inc
loopne,pt
pop
or
xchg
fisubl
pushf
sarl
rorb
cli
shrl
add
sbb
pushl
cmp
lock
push
xchg
jg
cltd
orb
mov
pop
adc
fcmove
orl
and
int3
imul
adc
out
daa
aaa
out
push
outsl
mov
mov
xlat
jae
pop
mov
dec
mov
push
dec
imul
jg
shl
dec
mov
or
in
pop
fdivr
mov
add
movsb
out
dec
std
popf
dec
icebp
pop
mov
cwtl
ljmp
test
scas
push
fs
addl
cmp
out
add
xchg
push
scas
push
ffree
test
data16
mov
push
jae
jno
add
mov
arpl
jnp
or
subb
mov
jne
push
fs
outsl
in
push
mov
add
xchg
dec
decl
subl
jecxz
sbb
das
aas
push
inc
pushf
cmc
les
sti
pop
sbb
pop
dec
stos
repnz
fists
and
mov
jecxz
leave
dec
popf
mov
outsl
mov
cmp
dec
movl
mov
clc
jp
lods
lret
push
loope,pt
jbe
hlt
nop
xor
push
xchg
xlat
mov
jl
jg
mov
shlb
cmpsb
xchg
arpl
jbe
repz
sbb
mov
in
scas
cmc
inc
dec
fs
inc
rorb
pop
repz
mov
es
adc
dec
inc
out
pop
stos
jb
jne,pn
inc
pushf
sbb
adcb
mov
mov
hlt
loope
sub
nop
testl
jns
mov
lock
testb
and
xchg
push
loopne
xor
jno
insb
adc
lret
mov
sbb
aam
pop
mov
sbb
adc
adc
push
cwtl
int3
in
jle
sbb
dec
push
in
dec
test
in
fdivl
xor
enter
popf
mov
mov
int3
mov
push
retw
or
out
jns
xchg
mov
roll
ds
lret
ja
iret
add
outsb
es
pop
nop
repz
popl
add
out
fistl
xor
mov
fs
xor
ds
pop
das
in
cmp
adc
inc
jmp
mov
cmpsl
shll
cmp
pop
mov
lods
or
sbb
cmpsl
xchg
mov
sub
adc
scas
pop
push
incb
fpatan
dec
sahf
or
mov
pop
aad
insb
pop
sbbl
sub
in
pop
xlat
xchg
cmpsb
pusha
sbb
xor
testb
insl
data16
stc
out
push
loopne
sbb
into
repz
negb
sbb
cli
xchg
sbb
popf
ds
sub
daa
hlt
sbb
cltd
inc
addr16
mov
mov
ud1
and
or
xchg
inc
addb
pop
stc
mov
dec
sbb
add
mov
jbe
push
enter
int3
mov
cli
dec
mov
push
adc
push
mov
add
mov
cmp
sub
pop
in
rorb
xchg
adc
imul
pop
fs
sub
pop
jns
inc
je
setp
ret
sub
lds
icebp
lods
add
xor
jno
ja
dec
and
test
inc
pop
enter
pop
push
cltd
jmp
fucom
repz
or
in
aam
push
xchg
push
stos
push
lock
nop
mov
movsb
push
in
jae
imul
int
pushf
in
fisubs
cli
sbb
addr16
mov
stos
and
jbe
rcll
xchg
mov
adc
in
push
lret
addl
jb
xlat
push
aad
push
and
in
xchg
mov
sbb
jnp
leave
lcall
not
outsb
aad
sbb
in
inc
xor
jmp
js
int3
je
aad
out
das
xchg
int
cld
paddusw
addr16
iret
jp
cwtl
push
mov
dec
or
jae
ja
xchg
mov
mov
movsl
xorl
cld
fldl
mov
mov
xchg
nop
xchg
movsb
test
sbb
arpl
jl
and
daa
popa
iret
cmp
jg
add
in
mov
or
adc
aas
cmp
pop
push
out
pushf
push
out
sti
and
sub
cli
adc
xlat
sub
ds
dec
repz
mov
insl
shll
sub
jecxz
mov
mov
testb
or
adc
scas
jl
or
cmpsl
lea
xchg
repnz
loop
pop
popf
sub
data16
ja
cmp
cmp
xor
aad
test
loop
pop
lahf
mov
int
pushf
insl
pop
and
cmp
and
pop
mov
dec
dec
ljmp
repz
xchg
pop
fcmovbe
and
adc
or
xchg
idivl
push
xlat
mov
das
dec
sbb
jae
xchg
and
lcall
ja
lcall
jns
lahf
movsb
inc
mov
and
sub
cmp
icebp
outsb
mov
test
inc
mov
cld
int3
hlt
outsl
cs
clc
inc
and
ja
int
push
decl
aaa
push
dec
js
movsl
or
addb
movsl
movsl
xor
xchg
adc
adc
movl
lds
cmpsl
fs
fnstenv
fwait
jne
shlb
lcall
fs
lahf
push
xchg
in
dec
dec
inc
imul
adc
jo
sbb
dec
dec
iret
xchg
add
jp
jle
xor
repnz
les
in
ds
pop
mov
pop
xchg
dec
pop
xchg
inc
xor
imul
jns
or
xchg
fwait
mov
lods
or
add
data16
xchg
xlat
in
push
sub
test
pusha
jne
or
adc
addl
and
inc
adcb
popf
leave
mov
jne
ss
rclb
and
cmp
adc
sbb
mov
adc
jp
ret
sub
ficoms
mov
or
inc
inc
mov
add
xchg
mov
inc
ret
adc
test
and
popa
add
sub
xchg
add
inc
fsubrl
push
mov
loope
dec
je
or
sub
insl
andl
aas
pop
and
imul
hlt
lds
sar
sbb
dec
xchg
dec
lea
clc
lret
push
push
xor
push
adc
cmp
mov
nop
push
sti
adc
jl
pop
mov
adc
pop
out
leave
xchg
gs
and
mov
imul
loop
jmp
mov
xor
test
push
and
popf
or
add
bound
out
pop
insl
jnp
std
sub
mov
arpl
and
cld
jl
mov
mov
cs
icebp
add
nop
xchg
add
jb
xchg
stos
push
cltd
ret
roll
cmp
ffree
jecxz
cli
inc
adc
xchg
push
call
rclb
nop
mov
leave
push
push
jl
dec
cmpsb
mov
rcrl
xchg
add
dec
ds
in
hlt
mov
fstpt
mov
mov
push
cli
sbb
dec
lahf
aam
cmpsl
pushf
aas
mov
imul
sbb
sbbb
xor
mov
mov
in
xor
cmp
jne
test
out
jmp
in
ss
in
test
int
pop
enter
cmp
mov
int3
mov
aas
and
push
and
sahf
push
pop
mov
mov
ljmp
loope
inc
out
jge
sub
pusha
sbb
ss
xchg
lahf
stc
mov
sbb
dec
fstpt
xchg
fsubs
mov
enter
pop
popa
nop
xor
sahf
inc
mov
dec
sub
fadds
mov
push
pop
and
ret
sbb
lea
jmp
clc
int3
shr
ret
rclb
mov
jnp
test
imul
or
rcrb
sahf
pop
das
dec
ja
push
stos
push
stc
lds
loopne
pop
or
sub
enter
fwait
xchg
jae
dec
pop
lret
mov
jae
jecxz
sbb
out
xchg
or
in
aam
inc
cmpsb
fistps
pop
xor
xor
fs
std
lret
fwait
cmp
imul
inc
push
push
sbb
sbbb
into
add
into
mov
icebp
jmp
jns
adc
push
sub
or
mov
out
dec
and
push
iret
scas
das
pop
xchg
mov
or
sti
xchg
pop
jle
sahf
push
ret
addl
out
sti
sub
aaa
jb
iret
lret
ret
repz
jo
push
lret
mov
mov
nop
out
pop
les
mov
pushf
pop
xlat
sub
cmp
sbb
aas
or
pop
sub
mov
aam
clc
push
cmp
pop
inc
jnp
pop
jge
shlb
mov
jmp
incb
hlt
jb
aaa
bound
mov
in
fisttpll
lods
inc
push
movsb
pop
cmp
mov
pushaw
pop
xor
addr16
adc
push
pop
xchg
inc
xor
lea
jg
sarl
inc
fiaddl
into
xlat
bound
mov
jo
xor
int
pop
or
push
or
repnz
cmp
or
daa
mov
pop
pop
lea
inc
jge
sub
movsb
xchg
xchg
dec
fs
movsl
mov
dec
xor
fs
mov
stc
cmp
nop
dec
jl
adc
or
or
out
adc
adc
sub
stc
iret
sbbl
mov
outsb
inc
lock
lods
and
sbbb
ja
sub
mov
and
cmp
add
movsb
and
xchg
pop
xchg
clc
out
aam
cmp
dec
fldcw
sub
push
fidivs
pop
scas
jg
push
xlat
dec
adc
mov
xor
adc
cmp
out
xor
stos
mov
scas
and
pop
lods
lcall
jnp
jns
jb
push
hlt
mov
fiadds
lret
hlt
lret
sarb
icebp
cmp
xchg
add
jo
stos
in
fisttpll
or
ret
inc
jbe
pop
fmuls
push
xchg
shr
jp
dec
adc
pop
ss
in
cmp
xchg
xchg
jg
mov
sub
jge
imul
fldt
popf
dec
test
mov
inc
sub
pop
inc
cmpsb
push
leave
test
xor
pop
fiaddl
pop
je
gs
adc
xchg
shlb
pusha
test
cmp
data16
cs
and
rcll
js
dec
jne
sbb
imull
int3
xchg
or
pop
les
ss
gs
xor
testb
xlat
sub
jg
lea
dec
pop
xor
and
bound
dec
call
cli
pusha
inc
jp
adc
and
mov
insl
push
or
sbb
xchg
mov
mov
inc
and
sbb
pop
lods
mov
mov
xchg
imul
jge
add
sbb
mov
into
insl
loopne
js
in
fsubrs
jb
xchg
popa
jns
lods
push
popf
or
test
imul
xchg
xor
cmp
out
faddl
fidivs
ss
leave
mov
sti
jno
mov
icebp
ret
fidivs
jne
sbb
lret
movsl
gs
pop
mov
sbb
xor
into
test
in
ret
inc
imul
aaa
mov
push
mull
mov
testb
cmc
mov
ds
jns
or
movsb
add
data16
lds
orl
ja
inc
lret
inc
jns
aad
cmovne
mov
daa
and
lods
and
faddl
dec
pop
adc
mul
jmp
fnstsw
dec
pop
xchg
sub
push
popa
sub
jg
sub
fildl
mov
lods
rolb
jle
mov
frstor
jno
and
das
imul
sbb
ljmp
pusha
or
dec
fmul
xor
std
repz
insl
fidivs
rclb
clc
in
pop
pop
pushf
clc
nop
cmpsl
addr16
add
subl
add
or
sub
jnp
inc
or
shlb
ja
test
int3
adc
and
adc
dec
hlt
addr16
insl
and
ljmp
xchg
jno
lds
and
fiadds
and
push
cmp
sub
fimuls
push
mov
pop
push
test
outsb
hlt
push
adc
mov
mov
dec
dec
sbb
nop
inc
jns
cld
lahf
movsb
arpl
icebp
or
or
pop
sub
dec
jmp
movb
das
cltd
mov
divb
and
cs
mov
jg
mov
pop
inc
js
push
mov
out
into
pusha
popa
mov
jp
inc
cmp
ljmp
out
mov
mov
xor
or
movsb
cmp
aas
inc
inc
pop
sbb
mov
nop
jecxz
or
cmc
mov
mov
lds
aad
ret
int3
test
mov
fcmovnbe
add
sbb
add
and
stos
imul
jno
loope
xchg
xor
push
rorb
adc
pushf
pop
repnz
inc
mov
jbe
inc
mov
ljmp
mov
mov
xor
subb
std
mov
mov
mov
adc
pop
mov
stos
sub
mov
ret
cmp
mov
mov
rcr
movsb
adc
movsl
inc
sti
rol
stos
push
mov
cmpsl
movsl
and
and
push
push
sub
dec
xor
mov
popa
int3
cs
stc
lods
jecxz
aas
rcr
sub
sbb
ror
and
or
in
cmpsl
dec
inc
add
scas
xor
mov
cli
lods
xor
jno
imul
mull
in
das
mov
js
jp
in
shl
sbb
pop
xchg
js
pop
push
out
jns
ret
adc
inc
mov
outsl
das
or
lahf
mov
and
in
icebp
inc
in
leave
cmpsb
cmpl
mov
push
fwait
jp
mov
leave
shll
ret
testl
loop
testl
sbb
repz
or
addr16
xor
push
or
and
lahf
add
enter
or
pop
jbe
mov
in
inc
mov
inc
fidivs
aam
pop
cld
je
rcll
stos
mov
pop
repz
sahf
fists
loop
fistps
ret
cmp
mov
pop
out
lret
stc
es
or
fstp
mov
cmpsl
nop
jmp
icebp
sbb
xor
aad
sbbl
cld
mov
cmp
cltd
jl
or
mov
pushl
dec
jg
cs
fwait
push
stos
int3
xchg
lret
mov
imul
mov
jne
lret
cmp
fimull
sub
std
jne
xor
cwtl
daa
xorb
lret
leave
sbb
movsl
add
dec
jg
lock
scas
lret
rorb
pop
nop
dec
cli
lock
mov
inc
xor
std
push
xchg
into
fcompl
stos
dec
mov
pushf
into
into
jb
out
and
jbe
dec
jnp
cli
pop
int3
add
pop
mov
sub
ret
mov
in
movsb
mov
push
imul
mov
arpl
sbb
adc
jge
add
je
xchg
pusha
jge
xchg
cld
mov
out
mov
sahf
in
xor
mov
out
mov
xor
test
xor
mov
pop
adc
enter
icebp
out
sbb
punpckhdq
inc
mov
pop
subl
xchg
push
cmpsl
fcmovne
inc
mov
xor
out
mov
stc
adc
dec
jge
xor
push
xor
mov
mov
test
notb
cmp
push
cwtl
std
loopne
lds
cmp
clc
jle
mov
sarl
jns
mov
pop
push
decl
sub
pop
dec
mov
or
loop
loopne
adc
push
sbb
mov
imul
xlat
pop
lret
or
fisttpl
iret
jmp
inc
jbe
mov
insl
fdivs
sub
adc
scas
jns
adc
dec
mov
cmp
out
popa
sahf
and
icebp
iret
jg
mov
loop
stc
loopne
add
push
pop
neg
or
jg
popl
cmp
cmpsl
mov
movsb
or
xchg
and
push
push
lcall
xchg
insl
or
imull
inc
nop
xchg
lcall
adc
inc
dec
das
dec
test
ss
inc
in
pop
hlt
lahf
shll
and
or
shll
mov
insl
mov
pop
lock
mov
sbb
jp
mov
dec
popf
movb
jg
dec
push
add
mov
xor
pop
std
jl
xchg
pop
or
stc
or
or
fadd
inc
push
mov
jecxz
mov
addr16
jne
mov
clc
fcompl
in
jb
adc
rcll
sbb
imul
jl
cmp
or
daa
pop
mov
mov
or
add
dec
mov
je
andl
xchg
std
xchg
or
pop
addb
je
pop
or
ljmp
push
jb
inc
adc
mov
xchg
inc
enter
cli
ljmp
inc
rolw
mov
icebp
mov
iret
enter
jnp
mov
mov
xchg
pop
hlt
xor
inc
push
adc
and
jo
xchg
sarb
lods
fsubr
and
adc
mulb
sub
cmpsb
aam
movsb
mov
sub
cmp
call
inc
jmp
cmpl
ds
dec
aam
cmp
dec
pop
dec
pop
mov
cmpsb
arpl
dec
insl
leave
or
pop
pop
and
inc
and
test
into
fistpl
mov
mov
mov
push
mov
jl
je
xor
xchg
pop
add
fwait
add
aad
add
mov
push
mov
leave
xorl
mov
or
xchg
push
jb
dec
push
sub
and
dec
jae
mov
jb
jp
insl
pop
ja
icebp
mov
sbb
jmp
rcl
cmp
lock
mov
and
arpl
mov
fs
cli
in
les
or
nop
shrb
pop
ror
inc
jnp
add
in
das
and
test
xchg
fisttpll
gs
sub
cwtl
lea
jg
je
or
cmp
lods
dec
mov
mov
andb
or
mov
insb
xchg
loopne
sbb
dec
pop
or
fs
shlb
dec
insb
adc
cltd
jo
lods
mov
jle
sub
pop
dec
xchg
push
add
mov
mov
adc
dec
stos
push
jl
jl
ljmp
shlb
mov
mov
aaa
add
nop
or
mov
pushf
enter
add
adc
or
pushf
arpl
in
cmp
stos
xor
adc
lds
cltd
outsl
xchg
adc
outsl
in
and
aaa
fadds
mov
cs
addr16
xor
sbb
nop
das
xor
scas
rol
cmp
cmpl
mov
inc
add
sbb
inc
adc
or
insl
xchg
movsb
loopne
pop
lock
xchg
jne
fildl
add
jg
test
mov
mov
jmp
loope
stc
sub
sub
mov
mov
scas
sub
xchg
and
jmp
cld
aaa
leave
jns
bound
push
xor
push
sub
sahf
stc
mov
scas
jmp
xchg
int
xor
mov
sti
pushf
add
loopne
sub
and
jb
pop
pop
hlt
leave
xor
xchg
inc
inc
adc
jae
jge
daa
loope
ret
in
fwait
inc
cmpsb
cmpsb
mov
xchg
push
fs
das
jne
pop
mov
out
adc
sbb
mov
pop
arpl
mov
mov
cmp
lahf
mov
dec
pop
loope
std
mov
enter
add
jnp
leave
jo
ja
pop
cmp
data16
add
addr16
mov
movsl
test
cmp
int
adc
push
out
pop
inc
jo
or
lea
rcr
sbb
stc
lcall
xchg
inc
lret
movsl
xchg
xchg
add
fidivl
in
cld
dec
cld
cltd
ds
aad
aad
push
in
icebp
lods
mov
in
inc
andb
adc
sbb
add
in
ja
rcll
sbbb
mov
ret
into
rorb
stc
into
lcall
and
push
add
pusha
repz
in
js
or
sbb
adc
jg
hlt
adc
loope
mov
movsb
popf
jnp
jge
ret
xor
int
add
sbb
mov
ret
into
fistps
jb
jo
cmp
out
jbe
test
cmpsl
cmp
mov
rcrl
mov
xor
pusha
pop
jns
test
iret
stc
add
negl
pop
push
add
push
stc
add
aaa
in
adc
negb
in
sbb
adc
stos
push
cmp
inc
dec
lods
jl
iret
in
ret
clc
pop
jns
test
lock
sub
decb
andl
jnp
jge
rcrb
push
and
es
repz
and
stos
sbb
and
outsl
pop
fbstp
loopne
xchg
push
pop
jno
inc
mov
int
cmp
push
cmp
lret
ljmp
push
addr16
sahf
sbb
not
std
fldl
pop
aaa
in
not
push
jg
mov
or
and
outsb
mov
les
xor
bound
adc
xchg
push
mov
imulb
js
ret
in
popa
out
mov
pop
pop
ja
sbb
ss
out
pusha
les
hlt
jnp
mov
push
lods
ja
xchg
cli
test
xchg
je
aas
test
out
scas
ljmp
arpl
sti
xchg
ja
out
int3
pop
cltd
movl
enter
or
sbb
sub
divb
pop
push
clc
mov
bound
jmp
push
mov
jle
sub
jmp
arpl
popf
insb
jo
aaa
inc
mov
mov
insl
xchg
hlt
and
stc
sub
mov
fstpl
adc
iret
aas
mov
into
cmp
inc
mov
inc
push
repnz
es
out
call
push
sub
xor
aas
bound
push
popa
call
xor
cmp
pop
mov
cld
xchg
lret
sbb
inc
and
sub
into
fwait
inc
into
jo
ds
shlb
dec
bound
in
pop
mov
sub
xor
lcall
jno
popa
add
shlb
adc
std
sbbb
push
jbe
mov
push
inc
daa
sbb
push
inc
dec
enter
fnstenv
int3
fsubrs
fstpl
sub
imul
cltd
sbb
jns
sub
rclb
pop
sub
jmp
clc
stos
test
sbb
fnstcw
mov
pop
data16
mov
aas
cli
pop
movsl
mov
or
int3
sub
fwait
cli
adc
fs
jecxz
pop
pushf
test
insl
jnp
push
or
add
xlat
sbb
push
push
xchg
sbb
adc
xor
incb
out
aad
aad
je
mov
test
pop
mov
lods
in
stos
popf
shr
mov
imul
adc
jp
xchg
sub
cmc
mov
mov
loop
out
sbb
mov
out
jmp
mov
mulb
add
rcll
mov
xor
insl
and
cld
pop
sti
imul
sub
ret
repnz
or
popa
push
jae
lods
mov
dec
inc
jo
mov
adc
and
mov
call
punpckhdq
jb
insl
pop
jo
cli
fimull
jp
fwait
xor
lds
pushf
das
fimuls
push
movl
insl
ds
int
mov
and
xor
stc
adcl
cmp
data16
stos
or
je
in
mov
fadd
cmp
cmpsb
mov
iret
ficoml
ja
sub
cli
cmp
sti
xlat
pop
out
adc
push
inc
adc
test
movl
and
cltd
xorb
pop
xchg
popf
cmp
andb
sbb
xchg
repz
aad
aad
jns
xorb
adc
inc
push
xor
outsb
sbb
fs
pop
mov
scas
or
out
xor
scas
nop
sarb
cwtl
cmpsl
fnstenv
cmp
dec
gs
fs
lahf
int3
xchg
cwtl
sub
ljmp
leave
mov
xor
insl
xor
sub
sbb
add
test
fwait
pop
mov
cltd
jnp
inc
gs
jbe
inc
ficoml
inc
pushf
xchg
movsl
ds
loopne
xor
jecxz
imul
jp
int
cmp
jns
shrb
pusha
push
mov
push
lahf
pop
dec
and
inc
xorl
or
add
cmpsl
add
mov
popf
dec
cli
popa
pushf
scas
inc
movsb
loopne
test
bound
lcall
mov
js
pusha
int3
loopne
xchg
mov
and
out
cwtl
and
dec
cmp
jecxz
xchg
jae
rolb
inc
inc
sbb
pusha
out
xchg
adcl
and
jns
ficompl
js
add
inc
aad
or
xchg
lods
push
mov
mov
pop
mov
mov
out
lea
int
inc
push
or
adc
mov
xchg
dec
mov
stos
je
imul
mov
push
push
pop
adc
inc
enter
lods
mov
push
mov
scas
ja
test
je
adc
lret
jb
call
cld
data16
push
jbe
jp
cmpl
and
xor
mov
sub
sbb
sbb
fdivs
inc
adc
add
fstpt
mov
lods
jecxz
pop
aam
xchg
ljmp
sub
xchg
jle
sbb
lcall
popa
xor
xchg
cmp
insl
xchg
push
fimuls
dec
inc
stos
cmp
aaa
mov
out
mov
inc
xchg
dec
adc
cmc
push
dec
dec
mov
mov
addr16
and
jge
push
loop
lods
push
movsb
xchg
add
push
rclb
mov
lock
xlat
test
cmpsl
mov
xor
inc
cmp
sarl
adc
sbb
aad
xor
call
into
insb
cmp
push
mov
loopne
cmp
stos
add
adc
pop
lds
add
add
out
push
add
push
es
mov
cmp
je
mulb
div
das
cld
mov
int3
mov
bound
pusha
cs
ror
aam
mov
enter
mov
mov
mov
push
fwait
mov
int
jo
and
scas
lds
test
pusha
or
repz
inc
stc
dec
mov
dec
scas
xchg
mov
popf
shrb
adc
aaa
push
xor
jne
push
into
mov
dec
stc
jecxz
cs
cmpsl
cmp
pop
pop
andb
pop
fsubp
negl
fiadds
out
out
movsb
and
and
jno
jecxz
outsb
adcb
push
ljmp
dec
imul
xor
lret
cltd
mov
aaa
mov
xor
mov
out
lds
mov
in
inc
sub
pop
xor
adc
test
push
sub
mov
push
push
mov
push
ja
sub
mov
aam
fdivrp
test
sbb
mov
cmc
xchg
jno
outsl
arpl
or
dec
shll
ret
push
popa
je
add
iret
sub
xor
je
push
pop
or
dec
or
or
jp
jl
mov
pop
push
pop
sub
in
test
repnz
in
xchg
push
cmp
jecxz
push
push
add
jnp
gs
scas
out
test
dec
jb
mov
and
mov
xchg
lea
xchg
imul
mov
and
inc
test
xadd
sub
or
cmp
push
jge
xor
in
xchg
jmp
movsb
popa
pop
jmp
insb
cli
add
or
out
cli
inc
cld
mov
aaa
pushf
cmp
adc
adc
notb
and
ljmp
popf
cmc
or
int3
adc
add
outsl
faddp
jecxz
fimuls
aam
pop
lock
jne
pop
or
imul
cmp
xor
movsb
cld
shl
pop
inc
scas
jle
push
ret
std
test
jmp
lock
int3
shrb
repnz
or
pop
daa
push
out
jno
ret
sti
adc
jmp
pop
repnz
cmp
mov
jno
push
popf
mov
ret
hlt
sub
mov
dec
pop
or
sbb
push
loopne
enter
test
cmp
clc
loop
push
in
mov
pop
push
mov
daa
add
jmp
dec
bound
cmp
mov
nop
xorl
pop
andb
add
pop
cmp
and
xchg
test
jle
ljmp
out
adc
fistpl
push
test
das
xchg
add
imul
cmp
adc
mov
cmp
negb
movsl
fisttpl
jg
cmpsl
xlat
mov
push
cld
cmp
out
insl
push
xchg
pushl
mov
popa
sub
or
ja
jmp
and
aam
jae
sub
mov
pop
push
sbb
out
sub
push
mov
ljmp
test
fisubs
mov
cmp
jp
in
sub
dec
mov
subl
iret
mov
jnp
mov
jb
in
dec
sub
adc
shr
pop
pop
mov
in
subl
pusha
mov
lea
das
insb
mul
xor
mov
xchg
mov
sub
jns
test
std
dec
sbb
lds
pop
push
shrb
mov
rcr
mov
popf
iret
pop
das
push
test
out
fcomps
cmp
jge
outsl
push
addr16
repnz
lahf
mov
add
fwait
jae,pt
or
ffree
cmpsl
add
pop
cld
test
test
dec
sbb
push
cltd
jo
out
cld
mov
and
mov
inc
inc
dec
stos
in
mov
sbb
int
insb
dec
and
popl
cmp
cmp
mov
mov
dec
les
je
dec
movsb
jl
test
test
inc
pop
add
pslld
inc
xor
inc
fwait
pushf
mov
or
mov
imul
sub
lret
cltd
roll
pop
mov
pop
mov
jmp
mov
and
inc
jnp
lahf
cmp
addb
cmpsb
outsb
aam
cmpsl
inc
push
add
aaa
push
sti
mov
jmp
mov
pop
xchg
push
xlat
cmpsl
dec
test
jge
aad
mov
jmp
and
push
dec
add
and
jmp
hlt
xlat
adc
cmpsb
mov
movsb
in
push
adc
jg
mov
cmc
mov
inc
rolb
mov
mov
outsb
mov
jae
jae
mov
xor
mov
mov
addr16
inc
decl
mov
pop
mov
add
repnz
addl
push
add
bound
sub
pop
cmp
rclb
push
jne
fadd
nop
push
jo
cs
jno
outsl
xchg
push
stos
jp
leave
call
mov
shl
rep
xor
xchg
cs
xor
sbb
sbb
test
mov
xchg
pusha
jae
pop
or
mov
mov
popa
mov
cmp
ljmp
inc
xchg
fnstenv
jns
adc
movsl
je
ljmp
in
out
xchg
jecxz
push
cmpl
push
sahf
xlat
cmovno
je
enter
jp
jp
lds
rorl
pop
adc
repz
ret
ret
inc
push
cmp
clc
gs
into
gs
ljmp
xor
gs
inc
lret
and
and
addr16
pushf
sahf
sub
subb
xlat
sub
xor
pop
ljmp
sbb
mov
testl
xor
mov
std
dec
and
cli
inc
cmp
jbe
push
and
push
push
and
in
adc
cmp
shll
inc
es
jle
xor
jbe
mov
or
xchg
sbb
nop
adc
mov
cmpsb
sbb
fbstp
data16
push
ss
arpl
inc
int3
and
add
xchg
das
imul
adcb
xchg
or
pmovmskb
clc
fs
mov
mov
pop
gs
cld
add
mov
cli
cli
or
shlb
movsb
pop
lret
add
jb
leave
jg
fldt
push
repz
mov
in
fmul
cmc
popa
jecxz
scas
sub
jno
xor
sbb
sub
fidivrl
mov
push
jmp
int3
cmp
and
jge
or
xchg
scas
out
and
mov
loope
inc
adc
xchg
rorb
test
stos
jne
or
psrld
jbe
movsl
push
repz
mull
cmp
fdivl
cmp
inc
xlat
and
mov
mov
push
insb
push
aad
pop
and
and
mov
popl
sahf
loop
pop
xchg
jo
mov
push
inc
sbb
aam
ror
test
add
daa
sti
mov
popf
clc
dec
cmp
gs
jnp
call
xor
inc
and
test
jl
in
mov
loopne
icebp
rolb
popf
cmp
sbb
sub
xchg
popf
lahf
fdivs
aas
bound
adc
arpl
and
jae
jnp
xchg
les
inc
adc
cmp
mov
fmul
xchg
adc
dec
mov
into
and
sbb
aam
aas
out
loop
push
fadd
xchg
insl
mov
lea
xor
jbe
std
jl
push
dec
lds
lcall
mov
push
push
sub
mov
adcl
mov
jb
sub
jae
mulb
enter
mov
xchg
mov
add
or
xor
dec
adc
inc
sbb
dec
les
xchg
xlat
mov
rep
outsl
loopne
xchg
adc
jns
cmpsb
xchg
int3
xorl
or
inc
out
jae
pushf
xchg
mov
adc
xlat
shlb
xchg
pop
loope
push
sbb
int
jecxz
outsb
and
adc
movsb
cmpsb
xor
sti
sub
cwtl
pop
aas
mov
ss
scas
int3
adc
fs
jmp
out
dec
scas
xchg
cs
inc
loope
out
addr16
jno
rolb
adc
loop
mov
dec
mov
es
movsl
add
mov
sub
dec
jle
xor
xchg
movd
sti
and
out
jne
push
out
or
jno
pop
test
xchg
jecxz
subb
sbb
sarb
and
pop
cmc
xor
inc
ja
inc
sbb
jecxz
aam
cmpsl
negb
scas
or
cli
sub
arpl
mov
and
push
add
cmp
add
xchg
cmpsl
adc
daa
or
pop
lods
inc
jno
dec
pop
push
sbbl
push
movsl
adc
pop
mov
jg
push
mov
test
add
fimuls
add
dec
mull
mov
repnz
xchg
jnp
sbb
add
addb
repnz
push
xlat
scas
push
into
xorl
fmull
pop
shll
xor
addr16
or
iret
mov
loopne
test
pop
xchg
dec
push
jecxz
sti
sbb
nop
imul
mov
inc
sti
or
jns
or
bnd
nop
sbb
ret
xchg
arpl
mov
test
fs
fstpl
mov
sarb
adc
das
movsb
add
xor
fists
jg
js
cltd
sub
cli
push
pusha
sub
push
add
scas
jns
and
jge
dec
shll
orl
out
pop
sbb
out
inc
data16
imul
sub
or
and
cmc
lock
xor
mov
std
test
inc
mov
inc
lods
bsr
push
call
xchg
test
jne
sahf
and
fidivrs
cmc
xchg
lods
inc
dec
xor
jnp
int
cmp
frstor
cmp
insl
push
sbb
nop
adc
sub
inc
or
dec
mov
sub
mov
jp
or
jnp
push
daa
xor
movsb
or
cmp
dec
mov
mov
pop
mov
nop
test
sbb
sub
push
push
loope
pop
das
out
in
xor
call
imul
mov
cmp
and
popf
test
sbb
jnp
shrb
and
adc
aam
outsl
lret
lods
insb
add
mov
inc
xor
lahf
enter
jne
fdivrl
xor
cltd
push
dec
add
mov
pop
movsl
shll
mov
jge
das
pop
sub
gs
test
divb
push
addr16
sub
cld
out
cmp
cmpsl
outsl
and
out
mov
ds
xchg
and
add
stos
pusha
stc
push
adc
les
fisubl
push
popf
jge
jge
fnstenv
lods
shll
mov
xor
jg
js
add
cmpsl
mov
imul
cmp
stc
dec
sbb
fadds
cmp
call
inc
add
sarb
pop
inc
push
cmpsl
inc
addb
je
dec
cmp
pop
in
popa
xchg
cwtl
mov
shll
sbb
cmp
pop
jbe
out
inc
push
inc
mov
inc
pushf
fldcw
sbbb
jb
imul
pusha
adc
cmpsl
adc
out
mov
subl
cld
imul
push
test
pop
xchg
sar
mov
int3
jae
dec
sbb
jp
movsl
ds
and
pop
xor
and
lret
std
add
cli
mov
pop
or
jae
or
dec
test
jb
pop
pop
add
push
into
cmp
mov
add
sbb
cmc
fwait
bound
loopne
adc
mov
xchg
dec
div
movl
jb
iret
loop
mov
jmp
xchg
arpl
and
sub
cmpl
xchg
push
test
stc
ds
cwtl
ret
cmpl
mov
add
sti
adc
dec
data16
cmpl
ds
aam
inc
call
cwtl
pop
cmp
and
add
inc
ret
push
mov
lea
je
loope
xchg
or
decb
cmc
enter
dec
jp
testl
stc
and
mov
inc
fwait
push
outsl
pop
lods
es
fsts
inc
mov
mov
negl
inc
icebp
aas
xchg
aas
jge
cmpsb
mov
ret
push
popa
mov
cmc
jno
mov
pop
or
push
pop
dec
mov
cmp
fwait
std
xchg
cmpsb
jns
mov
js
lock
in
outsb
xlat
outsb
mov
lcall
mov
inc
sbb
fs
xor
lods
aad
push
test
rcr
lcall
xchg
inc
ja
inc
stos
cli
in
xor
repz
push
pushf
cld
sub
lea
mov
pop
scas
fwait
popf
and
hlt
xchg
push
int
pushf
sbb
jne
dec
lret
cmp
sbb
icebp
inc
lcall
mov
popa
sbb
push
test
inc
gs
xchg
nop
xchg
sbb
out
adc
adc
loope
fcmovbe
mov
nop
mov
inc
rcrl
ja
ja
test
outsl
imul
insb
inc
mov
iret
fnsave
or
jecxz
xchg
xchg
jg
dec
ja
fdivr
stos
test
rcl
push
rcl
mov
inc
stc
mov
mov
mov
rcll
xor
sub
imul
sbbl
and
test
int
xchg
aam
mov
roll
jmp
pushf
jge
fs
dec
lahf
loopne
dec
test
mov
cwtl
int3
stos
jno
mov
jno
xor
xchg
pop
xor
es
jno
andl
jp
insl
jecxz
mov
in
xchg
jle
jae
pop
test
sbb
xchg
stos
jbe
cmp
sbb
daa
inc
loope
cmp
fxam
sbb
shrl
cmp
jae
call
dec
inc
push
sub
inc
mov
shl
ja
movsb
frstor
xchg
mov
add
sub
xorl
rcll
xor
and
ss
addb
out
pop
or
movsl
mov
pop
pusha
imul
fistpll
outsl
or
jecxz
dec
outsb
repnz
aas
xchg
mov
cli
mov
adc
loop
and
dec
iret
les
adc
cmp
in
mov
xor
mov
loope
mov
pusha
mov
mov
adc
xchg
daa
mov
xor
gs
add
pop
pusha
pop
out
addr16
xor
dec
sbb
lahf
sub
mov
sbb
mov
sbb
push
out
scas
push
stos
imul
jbe
pop
cmp
xchg
popa
mov
es
orb
cmp
insb
insb
sub
test
mov
mov
mov
fistps
add
mov
pop
jbe
xchg
stc
jecxz
mov
inc
cli
call
mov
in
mulb
and
jb,pn
test
push
push
adc
ljmp
cmpsb
popa
daa
push
pusha
sbb
xor
stos
and
test
dec
pop
leave
mov
cmc
ret
loop
mov
xor
jb
std
dec
dec
mov
sub
xor
clc
xor
mov
or
lcall
fisubrl
push
xor
test
sahf
mov
lcall
fsubrs
rcrl
ljmp
pushf
cmpsb
inc
or
mov
mov
shll
fdivrl
fsubrs
adc
lret
mov
rcrb
sub
mov
adc
and
xchg
jle
sbb
divl
out
sbb
ja
xlat
sarb
mov
lods
aas
dec
sub
idivb
pop
sbb
push
pushl
xchg
aaa
dec
xchg
leave
push
jmp
incb
loopne
test
cmp
clc
call
cmp
stos
jmp
aas
or
fstpt
push
fisttps
lret
dec
lods
push
loope
out
mov
pop
mov
iret
xchg
arpl
lods
push
mov
dec
inc
out
sub
daa
jbe
jae
insb
cmp
pop
pushf
enter
or
das
xor
pop
test
xchg
ljmp
stos
push
inc
dec
lock
mov
adc
dec
aas
loopne
das
pusha
cmp
xchg
mov
mov
sub
or
mov
negl
stos
hlt
movsb
sarb
idivl
inc
ss
xchg
adc
mov
push
add
insb
jmp
or
push
push
inc
or
mov
and
xlat
popf
mov
gs
xchg
test
add
cmpsb
in
movsb
jecxz
leave
movsb
inc
js
dec
or
daa
je
lret
outsb
gs
rclb
dec
in
and
push
dec
cmp
jge
pop
push
lds
hlt
add
mov
mov
ljmp
push
pop
cmpsb
int3
mov
xchg
mov
push
add
test
cmp
outsb
pop
insl
xor
js
cli
orb
pop
add
and
mov
cmp
mov
xchg
repnz
jecxz
int
mov
xchg
pop
cmpl
dec
sbb
test
call
ficoml
dec
add
xchg
dec
add
add
test
inc
push
lret
pop
fs
adc
or
dec
cld
insl
jg
cmp
adc
inc
adc
inc
push
int
fs
in
imul
test
movsl
ss
adc
or
repz
and
cmp
pop
mov
and
sub
fs
sub
push
push
and
cs
loop
push
mov
jae
and
cmp
pushf
popf
xor
push
ror
lret
sbb
xor
jmp
or
insb
sar
lcall
cmp
mov
jecxz
ficoml
sub
pop
mov
mov
mov
jmp
scas
adc
sbbb
popf
jecxz
pop
xor
xchg
push
sub
sti
test
insl
mov
outsl
mov
cmpsb
push
ret
dec
inc
sbb
sub
jne
push
jge
aam
es
push
xchg
xlat
pop
hlt
add
xchg
testb
es
ds
notl
pop
lods
sbb
lret
jle
fwait
or
cmc
shlb
subb
inc
iret
or
and
jmp
popa
xchg
mov
cltd
push
xchg
movsl
xchg
pop
cmp
xchg
lea
insl
inc
in
xor
lahf
mov
aam
loope
call
repz
mov
mov
outsl
lods
shrb
sarb
inc
mov
push
xor
rol
aam
cld
add
sub
dec
fstpl
cmp
arpl
mov
leave
sti
push
movl
stos
into
in
int
addr16
push
jle
or
aam
jbe
ret
cmp
xchg
enter
mov
mov
outsl
cmpb
jb
jge
or
inc
jl
icebp
ficomps
in
and
cmp
jl
mov
stos
inc
dec
add
pop
mov
out
movsb
bound
adc
out
xchg
push
out
insl
pop
popa
lea
xor
mov
fists
fidivrl
cli
xchg
cmpsl
sarl
jmp
clc
cmp
popf
loope
jl
push
ret
inc
mov
js
movsb
testb
imul
jmp
jge
push
xor
ja
pop
push
nopl
inc
push
bound
nop
enter
sar
loop
scas
dec
insl
mov
in
in
xchg
sub
out
fiadds
test
mov
or
sub
jae
data16
cmc
sub
xor
push
test
cmpsl
dec
rcl
lods
inc
inc
lret
std
pop
push
pusha
test
cltd
ljmp
push
shl
dec
out
leave
xlat
inc
dec
outsb
scas
repz
fisttpl
fmull
cwtl
push
iret
xchg
sub
call
sub
ds
popl
fucompp
fmuls
lods
xchg
mov
xchg
fsubrl
and
jae
popa
fldcw
lock
lods
andb
push
and
out
test
cmp
popa
jae
pushf
push
in
rorb
or
loop
int3
inc
adc
cmpsb
jle
xchg
jbe
cmp
push
daa
dec
dec
sub
movsb
movsb
push
andb
xchg
cli
pusha
adc
add
adc
cmp
cmp
lar
pop
xchg
push
cmpsl
mov
imull
push
cmp
jnp
mov
push
sub
movsl
mov
cmp
rcl
dec
push
pop
mov
and
nop
xchg
inc
sbb
sarb
mov
loope
adc
cltd
cmpsl
jecxz
mov
pop
add
inc
jns
out
stos
fs
xchg
mov
and
inc
or
ret
test
fdivr
pop
aas
add
add
dec
lahf
push
and
sbb
clc
rcrl
jnp
jae
mov
inc
daa
cwtl
mov
add
mov
cs
je
dec
int3
mov
int
int
imul
out
add
movsl
cwtl
sbb
xor
xchg
adcl
mov
es
push
cs
mov
loop
sbb
dec
sub
sub
pop
frstor
pusha
xchg
or
fidivs
sub
gs
pop
cld
je
ja
into
or
push
sub
mov
daa
push
int3
push
stc
scas
jae
and
aas
lret
mov
add
les
inc
push
xlat
clc
std
inc
out
mov
lahf
loope
mov
jge
jne
stc
pop
sahf
es
outsb
outsl
sbb
push
in
js
scas
adc
xchg
clc
xor
inc
call
cmpsl
and
out
xchg
arpl
roll
jne
shl
and
fs
std
fsubrs
sub
dec
sub
push
cmc
shr
pop
mov
sub
or
sub
daa
pop
adc
or
or
sub
lds
ss
or
fstpt
jne
push
notb
cwtl
xor
stc
sbbb
mov
jae
divb
sub
cmpsl
fimull
ret
cli
jg
dec
test
sbb
or
inc
xlat
jecxz
inc
in
sub
loop
ffreep
xchg
int3
mov
pop
out
or
xchg
clc
xchg
cs
sub
xor
notb
add
mov
sub
xor
cmp
sbb
rorl
push
mov
std
add
rol
test
pop
cs
loopne
mov
testl
adc
adc
sbb
or
std
fnstcw
js
pop
test
adc
jg
sub
fildl
loop
pusha
jb
fmulp
lcall
or
int3
dec
lock
xor
push
cmp
adc
aam
shlb
pop
jbe
mov
pop
mov
cli
rcll
sahf
stos
and
jo
sub
mov
icebp
rcrl
xchg
add
sub
cmp
push
ljmp
jecxz
aas
pop
cs
loop
mov
dec
mov
xchg
xchg
and
xchg
cmp
xchg
or
imul
mov
shrl
aas
dec
leave
push
adc
ja
test
shlb
mov
mov
inc
push
xchg
cli
clc
clc
mov
adc
cmpl
or
push
mov
cltd
jmp
pop
lret
outsb
ja,pn
cmpsl
in
pop
fwait
std
lods
scas
mov
push
lods
mov
fmulp
add
daa
mov
mov
cmp
adc
ret
mov
insl
adc
into
add
loope
ret
push
jp
cbtw
sbbb
mov
inc
mov
dec
fwait
sub
leave
dec
adc
push
jns
sahf
fsts
ret
add
out
dec
popf
nop
out
xchg
sbb
mov
sub
ret
jb
aad
inc
shll
jge
push
add
aam
leave
mov
das
add
pusha
sub
or
mov
xor
ret
sub
pushf
movsl
daa
push
lcall
or
shrl
scas
inc
aaa
das
int
pop
rcll
jg
sti
ret
cmpsl
mov
and
cmp
xlat
adcl
popa
shl
popl
ds
jns
test
push
lret
lds
xor
pop
cltd
xor
sub
inc
adc
push
ss
xor
repz
loopne
fnstsw
and
jmp
test
cmpsb
xchg
lret
jae
jge
jb
xchg
push
sbb
insb
pop
dec
mov
dec
fs
sahf
dec
lods
push
repz
pushf
loopne
pop
mull
push
mov
jg
push
les
outsl
cs
jns
push
insl
movsb
pop
dec
dec
push
mov
lods
add
and
mov
arpl
subl
mov
and
arpl
fldcw
dec
cmpsl
clc
leave
pop
cmpb
mov
loope
and
sbb
cmc
int3
std
xchg
icebp
jge
and
dec
jge
jo
fnstenv
test
adc
fiaddl
rep
or
push
dec
pop
popa
mov
xor
adc
mul
sbb
test
scas
mov
mov
aad
xchg
and
insb
ficompl
ljmp
nop
xchg
aas
mov
cmpb
mov
push
inc
je
fistl
pop
hlt
jle
jno
mov
mov
int3
inc
xchg
ljmp
jmp
ds
mov
pushf
mov
in
mov
test
cli
lds
ds
or
fidivs
bound
pop
add
test
aaa
and
xchg
mov
sbb
repnz
gs
lret
cmp
cltd
ljmp
cmp
jle
sub
push
stos
pushf
and
or
repz
cmc
jmp
or
dec
negb
jmp
repz
movsb
fwait
inc
sub
inc
pushf
clc
orb
fs
cltd
in
xchg
xor
adc
xchg
xchg
and
jmp
mov
les
add
outsl
daa
mov
lock
sahf
cmp
clc
mov
sbb
xchg
mov
js
inc
sub
lds
in
adc
pop
lods
add
mov
pop
in
push
out
jmp
pushf
sbb
stc
adc
sbb
test
test
les
lock
jp
cs
call
repnz
xlat
add
daa
pop
dec
mov
mov
xchg
iret
push
dec
mov
loope
iret
shlb
js
sbbl
add
mov
cmpsl
loopne
inc
test
xchg
push
and
push
addr16
mov
mov
lret
and
rcrl
jecxz
cwtl
push
mov
shl
push
movsb
into
sbb
insl
shl
scas
dec
lock
sbb
mov
insl
mov
inc
orl
sar
or
adc
mov
lods
mov
enter
sbb
push
sub
leave
ss
std
pop
add
rclb
sbb
les
mov
xchg
ja
xchg
enter
mov
lahf
xchg
nop
xchg
lret
xchg
adc
stos
imul
outsb
and
imul
pop
insl
rorb
jbe
lods
jae
das
mov
gs
adc
mov
lret
arpl
lret
add
push
pop
call
lret
adc
outsl
sub
xchg
lods
in
out
jbe
xlat
out
jg
loop
fbld
ret
dec
iret
fcmovu
nop
xchg
mov
adc
insb
es
jecxz
sub
inc
stos
inc
je
mov
xor
dec
sbb
mov
outsl
adc
imul
daa
pop
mov
mov
adc
pop
rolb
mov
je
fsubs
xor
push
aam
mov
hlt
mov
sbb
inc
das
mov
fsubrp
dec
lea
xchg
jp
je
rol
jo
push
jecxz
dec
aam
lods
sub
sbb
test
out
push
int
imul
mov
jae
lock
movsb
jl
divb
mov
jl
mov
push
fldt
sub
or
adc
outsb
les
pop
mov
pop
push
lods
mov
bound
dec
pop
rorb
inc
std
or
adc
gs
xchg
jb
pop
fisubrs
adc
in
jnp
adc
inc
jge
mov
fsubrp
mov
stc
orl
outsb
fldl
push
int3
jecxz
adc
xor
adc
arpl
lret
mov
or
xor
or
add
pushw
xor
mov
jge
jae
xchg
push
or
lcall
sarl
sbbb
call
inc
or
push
inc
or
dec
add
loop
or
je
inc
lret
xor
or
jecxz
mov
fidivrs
mov
inc
inc
cmpsb
sub
xorb
add
xor
push
mov
adc
pop
icebp
or
cs
xor
adc
sub
fiaddl
jnp
pop
mov
jp
lds
sub
out
mov
ret
xor
movsb
ljmp
idivb
xchg
fdivrs
mov
xchg
and
loope
gs
in
insl
xor
leave
cmp
cmp
xchg
xchg
mov
dec
xchg
int3
inc
and
pop
repz
jp
addb
sub
mov
sti
jo
je
jg
push
mov
lock
push
sbb
push
jmp
inc
sbbb
mov
push
arpl
xchg
and
or
or
test
cwtl
sarb
lods
inc
out
scas
dec
fdivrp
andb
lcall
addr16
push
jnp
xor
outsb
mov
subl
xlat
cs
fldl
sbb
push
mov
bound
cmp
sahf
add
ret
ficompl
lret
popl
sbb
lahf
inc
mov
pop
enter
push
cmpsl
xchg
dec
jmp
leave
aad
xor
xor
test
mov
and
daa
lahf
adc
shrb
out
jle
andl
je
mov
in
or
sub
int3
jae
add
outsb
sbb
pop
lods
outsl
adc
push
into
je
adcb
hlt
dec
xchg
faddl
mov
fmuls
addb
je
das
xor
or
mov
dec
pop
outsl
daa
pop
mov
and
xchg
add
xor
mov
bound
in
xchg
sbb
mov
xor
and
dec
loop
adc
jl
stc
testb
rcl
fldcw
push
dec
pop
xchg
cmp
cs
leave
mov
les
arpl
dec
leave
daa
inc
pop
adc
jb
add
lret
xchg
cs
mov
out
fdivrl
mov
call
sub
or
movsb
es
inc
pushl
mov
xchg
test
mov
push
repnz
pxor
test
ss
incl
clc
mov
add
dec
add
ja
push
ret
fdiv
and
lret
mov
inc
daa
aas
sarb
loope
imul
lods
push
sub
out
jb
mov
sbb
sub
das
lea
movsb
xchg
ss
mov
test
arpl
leave
mov
push
mov
pop
loope
adc
mov
or
mov
push
and
movsl
or
lods
cmp
stc
push
adc
xchg
test
stos
pop
mov
loope
filds
lds
xor
mov
je
mov
jo
dec
dec
mov
mov
xchg
std
mov
mov
adc
popf
push
fimuls
cmp
ret
adc
lea
cmp
fwait
xor
and
das
hlt
pop
test
xor
insb
sub
jnp
add
stos
jmp
das
mov
add
xor
xor
push
clc
lret
and
shlb
inc
call
in
scas
inc
jge
notl
sbb
sub
lods
jge
adc
aaa
scas
push
lea
cmpsl
sub
push
xchg
arpl
lds
and
loopne
push
push
rol
call
dec
jbe
sbb
in
loop
insb
sbb
or
jg
mov
cmpl
inc
sahf
cld
pop
loop
push
xchg
or
addr16
jae
push
jo
movsb
sub
into
cmpsl
insb
aas
mov
push
repz
in
je
push
sub
sbb
add
push
or
mov
xchg
mov
jo
jo
xchg
jb
daa
lods
jecxz
movsl
mov
cmpsb
int3
stos
push
rep
pop
mov
rorb
pushf
mov
stc
sub
rclb
xchg
sub
inc
push
xorb
push
push
hlt
rcll
dec
into
inc
mov
push
jle
xchg
cmp
imul
add
push
loopne
test
adc
out
mov
adc
sbb
jmp
mov
adc
in
faddp
xchg
pusha
in
fs
add
push
pushf
mov
inc
pop
sbb
jae
ror
xor
je
subb
punpckldq
add
fnstcw
test
gs
imul
mov
adc
and
fcoml
and
or
mov
pop
pop
fisubs
mov
cwtl
and
xor
sub
pushf
std
push
xor
jl
add
adc
inc
adcb
pop
xlat
int
mov
push
mov
cmp
jo
adc
pushl
iret
testl
aaa
jo
mov
std
xor
pusha
xchg
imull
addl
sub
jns
dec
mov
inc
and
andl
out
lock
out
xor
and
movsl
mov
dec
xor
cld
mov
cld
adc
aaa
mov
frstor
jecxz
pop
pop
mov
test
andb
inc
pop
fstps
sti
and
push
mov
daa
scas
lret
shll
leave
leave
mov
icebp
popf
js
ret
mov
xchg
inc
sbb
mov
int3
add
lret
jo
cmp
jno
imul
xchg
int3
add
pop
push
xchg
add
push
repz
push
add
test
sbb
jne
out
push
lcall
rcrb
loope
xchg
hlt
fsubp
sub
ret
negb
mov
push
in
xchg
loope
rclb
imulb
lahf
aam
into
adc
inc
pop
inc
adc
adc
inc
pop
dec
inc
jle
add
int
cmp
ret
pop
dec
clc
mov
sbb
jmp
inc
push
xor
push
rorb
cmp
aaa
ucomiss
or
inc
into
dec
aas
aaa
cmp
mov
mov
ror
push
popa
shlb
mov
adc
inc
daa
xchg
cmpsb
mov
insw
push
add
rorb
xchg
cmp
repnz
in
push
clc
mov
mov
test
or
pop
sbb
repz
dec
xlat
icebp
xlat
push
pavgw
aas
push
pop
adc
xor
shll
incb
loope
lods
xchg
loope
cmp
cmp
push
loope
sbb
je
clc
aaa
insl
aas
or
jl
jl
gs
test
loop
add
xlat
cmpb
ret
dec
sub
rolb
lret
repnz
test
imul
imul
mov
clc
pop
mov
orb
sub
mov
das
add
enter
mov
xor
push
and
lock
sbb
push
sbb
and
aam
into
movsb
loop
and
sub
js
or
push
outsl
and
cmp
push
sbb
scas
into
fsubl
insl
jae
sub
mov
in
mov
ror
xor
pop
pop
scas
adc
fcoml
shll
jmp
mov
dec
pop
mov
hlt
xor
xchg
push
ret
ja
sbb
pop
fsubl
adc
jmp
daa
lock
pop
push
out
sbb
outsl
xor
test
shl
fstp
imul
pop
xchg
or
lods
xor
into
movsl
sbb
scas
mov
pop
adc
sti
enter
arpl
das
push
aad
loop
sub
xlat
cmpsb
pop
shrl
adc
mov
imul
sbb
push
daa
mov
sti
shrb
add
jne
inc
jp
cmpsb
mov
test
cmpsl
and
mov
xchg
sub
xchg
push
or
stos
mov
pop
fstps
aam
mov
xor
pop
pop
pop
cmc
js
inc
xor
jne
mov
insl
sbb
pop
andb
lea
and
add
mov
cmc
push
jge
mov
loop
jo
inc
cmpsl
sub
mov
xchg
aas
lahf
push
sub
call
mov
clc
and
cmp
dec
bnd
out
sahf
push
push
int
adc
xor
xor
mov
dec
push
js
inc
ret
pusha
push
lahf
cs
push
lods
imul
loopne
movsb
cmpl
pop
mov
fiadds
dec
dec
gs
mov
divl
push
aam
add
jmp
pop
add
outsb
jmp
or
mov
jmp
inc
mov
push
dec
or
es
sbbb
lcall
mov
pusha
aam
aas
insb
pusha
xchg
fdivs
mov
loopne
mov
icebp
lods
call
mov
addr16
scas
dec
mov
pusha
je
pusha
mov
cmpl
mov
sub
popa
and
jbe
in
xlat
jle
sub
jbe
push
lret
cmp
pop
into
test
paddb
arpl
cmp
pop
hlt
xchg
mov
xlat
lret
push
jnp
add
xchg
sbb
lods
inc
test
andb
jns
dec
sub
xchg
mov
int3
jmp
xor
cs
insl
out
xchg
adc
faddl
sbb
jecxz
sbb
sub
mov
sub
add
rorb
mov
insb
xchg
xchg
in
jmp
rorb
xor
mov
mov
leave
add
in
mov
sarl
or
sbb
add
loopne
sub
stos
or
call
mov
and
pop
mov
adc
pop
aas
mov
sub
fdivrl
mov
ja
inc
in
lret
add
dec
shr
inc
cs
inc
test
push
add
adc
and
mov
insb
mov
fbstp
inc
out
mov
push
jb
pop
fwait
ljmp
nop
mov
pop
xchg
divb
in
cmpsb
dec
adc
lea
cmpsl
out
push
das
dec
sbb
pop
ret
lock
xchg
imul
push
les
push
test
and
pop
pop
xchg
shrl
sbb
mov
data16
sbb
insl
pop
push
jp
sub
insb
xlat
ds
imul
loope
mov
imulb
adc
adc
and
ret
pop
mov
out
fsubs
adc
insb
pushf
xchg
andb
fs
pop
stos
jp
mov
add
vpmulhuw
push
jns
cmp
sarl
jne
jmp
jle
sub
sbbb
pop
cmpsb
xlat
pop
rorb
lods
jmp
sub
xchg
scas
repz
and
sbb
repnz
js
jle
aam
aas
cmp
rcrl
rclb
rclb
cmpb
push
mov
addr16
sbb
out
out
push
push
out
jecxz
scas
cs
push
jle
cli
xchg
divl
xchg
mov
scas
cmpsb
addb
adc
xchg
push
shlb
mov
xchg
sub
in
iret
xor
cmp
ret
sub
xor
outsb
or
xchg
mov
add
sbb
push
cli
dec
mov
xchg
arpl
mov
sbb
and
push
push
mov
inc
ljmp
cld
add
je
mov
lds
jp
cmc
push
mov
cmpsl
xchg
or
stc
mov
inc
sbb
adc
arpl
fsubl
movsl
test
pusha
mov
push
cld
xor
and
dec
xchg
fidivrl
or
pop
xchg
and
mov
or
arpl
pop
mov
inc
and
rorb
dec
mov
lcall
inc
and
mov
daa
mov
sbb
test
lret
dec
inc
leave
sbb
sub
push
push
mov
pop
lock
dec
xor
in
dec
push
cmpsl
out
ds
dec
das
xchg
ljmp
adc
lahf
daa
fisttps
mov
jo
adc
int
adc
pop
sbb
idivb
pop
popf
jle
sbb
bound
cmp
mov
jle
shlb
jae
dec
mov
ss
sbb
mov
lods
std
jnp
inc
push
mov
imul
push
pop
test
xor
inc
movsl
popa
daa
mov
call
cli
aas
pop
testb
dec
clc
sbb
outsl
pop
in
leave
inc
scas
xchg
cld
push
lret
adc
push
les
mov
movsb
sti
mov
push
pop
push
fistps
sbb
imul
jbe
mov
cmpsb
mov
je
inc
mov
test
push
inc
ficoms
xlat
xor
scas
ljmp
sub
xor
dec
subb
cmp
jl
cmpsl
dec
shll
cli
or
lahf
lock
sub
popf
adcl
pop
test
push
sbb
lret
jmp
mov
loop
jne
xor
pusha
stc
mov
mov
lock
xor
stos
jns
into
adc
jl
dec
rorl
mov
cmp
out
sbb
pop
fcoms
push
jle
cs
xlat
pop
pop
filds
or
aam
mull
pop
cwtl
lret
push
pop
xchg
sbbb
outsl
mov
push
inc
arpl
hlt
loope
inc
xor
pop
mov
jbe
shl
sbb
mov
mov
push
je
outsb
pop
xor
push
inc
mov
jne
fisttpll
ss
cmp
nop
ret
test
mov
inc
shrl
mov
dec
mov
cs
in
jns
roll
mov
push
mov
xchg
push
mov
xchg
sbb
lods
fsubp
mov
iret
and
fistps
mov
shl
sbb
adc
shrl
lcall
push
test
call
adc
fsubr
pop
mov
out
hlt
push
pop
fmuls
arpl
repz
ds
jne
movsb
cmp
cltd
cmp
push
sbb
push
nop
pop
sbb
push
mov
dec
popf
je
outsl
std
pop
inc
cwtl
js
mov
call
imull
mov
jmp
pop
and
xchg
aad
loopne
stc
push
mov
jo
push
mov
cwtl
pop
and
shll
enter
fldenv
inc
sbb
mov
orl
cmp
adc
push
sbb
clc
notb
cwtl
push
test
mov
jmp
jmp
imul
fdivrp
and
repnz
cld
jb
pop
hlt
jbe
popa
lds
mov
mov
xchg
sub
das
jae
adc
roll
test
stc
fwait
jno
aam
jge
pop
lods
call
sub
pop
addr16
enter
inc
push
les
or
enter
fcmovbe
sub
and
fdivp
jno
sub
and
xchg
pop
sbb
or
mov
sub
jp
lret
mov
int3
and
ret
adc
cwtl
ret
addb
mov
in
jge
or
aas
sub
repz
test
push
jl
inc
lods
mov
mov
in
lret
mov
pop
sahf
dec
imul
mov
imull
test
inc
lods
clc
jns
fldt
adc
xchg
outsb
jnp
add
out
lock
cmpsl
sub
fwait
inc
add
mov
fisttpl
inc
mov
dec
inc
arpl
outsb
or
dec
insl
lret
mov
cmc
jnp
les
in
sub
ret
clc
testl
sahf
les
mov
in
shlb
xchg
push
add
jge
jmp
je
add
cmp
es
nop
ja
jbe
fisttps
pop
in
fisttpll
outsl
xchg
movsl
pop
inc
loop
movsl
js
mov
mov
cmp
push
inc
push
outsl
cmp
and
adc
pop
pop
push
sbb
add
fdivrs
pusha
fildl
loop
fstpt
test
cmpsb
lahf
pop
fldcw
arpl
pop
arpl
mov
leave
push
dec
mov
mov
lea
cwtl
sbb
outsb
pop
mov
shlb
mov
xchg
pop
jmp
mov
inc
shl
out
dec
je
das
mov
sub
clc
xlat
ficompl
mov
movsl
xchg
out
stos
jge
les
or
iret
int
push
scas
pop
sbb
lods
inc
push
in
int
jecxz
mov
loop
fldcw
dec
and
leave
xor
push
and
xchg
push
jno
mov
xlat
mov
xchg
mov
adc
ljmp
jo
mov
push
pop
adc
iret
stos
cmp
jbe
cmp
push
push
pop
enter
test
jnp
add
js
inc
cmp
mov
pop
nop
fldl
out
mov
imul
push
aas
pop
leave
mov
out
sbb
cli
sbb
es
or
mov
sbb
stos
les
jp
and
rcrb
movsb
or
scas
mov
andl
cmp
es
stos
add
mull
in
jmp
and
cmpsb
xlat
es
ds
hlt
call
jnp
mov
mov
in
mov
shlb
sar
mov
adc
cmp
sbb
and
es
sbb
jb
popa
rorl
fidivrl
xor
outsl
fidivrl
inc
xor
mov
sbb
push
or
adc
aad
in
loopne
fsubr
js
jno
push
movsb
mov
stos
add
repz
xor
scas
data16
mov
jo
adc
mov
shrb
mov
fcompl
sarb
push
pop
daa
add
inc
and
mov
ret
dec
and
dec
pushf
pop
push
xor
push
cmpl
dec
lds
adc
nop
sub
outsb
pop
push
jl
xor
adc
adc
mov
cmp
test
mov
out
or
rcrb
add
sub
jle
daa
and
sub
jg
mov
shll
sbb
clc
pushf
cwtl
and
mov
fnstcw
push
mov
sbb
aas
mov
mov
inc
sub
aam
adc
int
out
jno
push
push
mov
dec
int3
xchg
or
xor
rorl
cmp
jo
incl
xchg
aaa
arpl
ficompl
pop
push
inc
inc
scas
enter
push
enter
jno
sti
ja
jae
sbb
movsl
mov
push
shll
sarl
leave
sub
add
sub
fs
or
imul
insl
cmpsl
push
outsb
sbb
test
movsb
and
adc
pop
mov
inc
mov
popa
insl
lcall
mov
push
jge
cmp
call
or
push
rorb
xchg
add
hlt
xchg
ja
jmp
and
dec
imul
mov
subl
jae
jecxz
outsb
or
aas
jle
arpl
out
xchg
cmp
or
mov
lahf
mov
fidivl
jp
cmpb
jge
jp
push
test
adc
pop
xor
xchg
test
or
imul
mov
adc
inc
nop
fsub
mov
xchg
mov
adcb
es
xor
setl
mov
or
fnstcw
jno
ret
enter
mov
jp
mov
bswap
add
daa
repz
mov
mov
dec
add
inc
lahf
testl
xor
out
sub
xor
inc
lcall
bnd
ljmp
ror
pop
mov
xchg
in
xchg
andb
inc
andl
lcall
dec
mov
jmp
loopne
mulb
and
xlat
arpl
xor
test
pop
and
int3
pop
jg
imul
push
jg
mov
dec
flds
adc
imul
sub
xor
call
cs
in
xchg
jg
dec
das
imul
xor
sub
pop
sbb
jae
es
addr16
mov
lods
pop
stos
into
xor
leave
fmul
nop
adc
hlt
cmpsl
daa
out
inc
dec
cmp
pop
jp
sbb
cmp
rorb
pop
jecxz
aaa
cli
loop
sti
lret
mov
sub
sub
adc
popf
pop
mov
cmp
inc
mov
popa
fists
sbb
lea
sarl
mov
mov
inc
hlt
movsb
xor
mov
adc
lock
mov
movsb
inc
jbe
cmp
add
mov
insb
cmp
mov
jle
pop
and
rcl
daa
cmp
and
test
cli
int
and
inc
lret
cmp
daa
lret
jge
icebp
cmp
lea
clc
js
pop
lahf
adc
mov
add
pop
push
movsb
ja
fnstsw
xlat
jo
xchg
mov
dec
jl
mov
dec
test
xchg
cmc
hlt
xchg
dec
out
sub
out
mov
adc
dec
leave
xor
shrb
in
daa
shrb
cs
insl
cltd
pusha
cmp
mov
lods
dec
shrl
push
mov
subl
mov
push
call
shrl
pop
test
adc
sbb
or
cltd
push
addr16
add
lock
jae
dec
incl
icebp
shl
mov
lds
pop
icebp
cmp
aaa
test
push
jp
out
xchg
mov
xor
sti
and
lods
xor
mov
std
cmpsl
sbb
call
enter
sub
scas
ja
xchg
mov
cmp
out
sub
push
imul
and
xor
sbb
dec
into
lods
pop
push
movsb
or
mov
pushf
push
fcoms
mov
and
out
je
sbb
fadds
bound
push
loopne
test
adc
out
in
xchg
fiadds
lret
stos
movsb
xorl
ss
pop
dec
fldcw
int
vphaddwq
enter
icebp
push
int3
hlt
pop
mov
push
outsb
ret
mov
aam
stos
fbld
or
sarb
jbe
mov
jno
cmp
sub
outsl
pop
pop
fadd
or
and
arpl
das
mov
jae
insl
inc
loop
movd
addr16
fstl
mov
push
mov
mov
mov
dec
jl
mov
mov
out
jo
push
inc
pop
add
out
inc
int3
sub
xor
in
xchg
jp
pop
push
sub
pop
xor
mov
cmpsb
sbb
cltd
icebp
cwtl
or
lcall
mov
mov
xor
lock
lods
push
dec
outsb
hlt
cltd
adc
cmc
scas
data16
movsl
arpl
lret
call
ja
push
adc
test
daa
pop
stos
add
pop
nop
inc
loop
adc
loopne
xchg
loopne
ds
js
dec
and
inc
pop
inc
pop
int3
sub
and
add
push
inc
mov
ja
mov
popa
enter
xchg
jae
xor
loope
jb
mov
jecxz
add
and
sahf
pusha
sahf
mov
and
outsb
sub
lret
dec
ret
aad
inc
test
inc
push
out
push
sub
lods
ljmp
hlt
xor
cmpsl
fwait
sub
or
sub
mov
adc
fldcw
push
jno
sbb
xchg
mov
jl
pop
das
test
mov
mov
lret
es
inc
dec
bound
xchg
add
adc
push
nop
sbb
scas
outsl
nop
out
inc
inc
ds
in
daa
pusha
adc
stos
adc
mov
lcall
shll
or
add
js
in
mov
fstpl
add
jns
xchg
mov
in
jg
push
insb
adc
in
arpl
out
mov
data16
lea
decl
sub
xor
int
call
fwait
lret
mov
subb
aad
push
adc
test
iret
adc
jmp
das
cmovae
nop
out
sbb
push
rorl
lock
and
jno
fsts
fstl
xchg
mov
bound
jne
testb
pop
enter
frstor
mov
xchg
xor
and
pop
push
imul
call
lods
fs
sarb
loope
andl
cmp
arpl
cmp
mov
into
shlb
fsubrs
arpl
insl
xchg
mov
mov
shll
mov
mov
mov
imul
jnp
std
stc
or
sub
stos
aad
push
mov
lds
add
cmp
and
scas
dec
lahf
lcall
push
ficoms
pop
iret
mov
push
call
sahf
mov
jle
or
xor
ss
js
mov
sbb
cmp
xor
push
sub
and
cwtl
movsl
push
xlat
inc
mov
out
and
lahf
sahf
cwtl
dec
lock
sbb
in
mov
mov
in
add
or
mov
push
nop
mov
sub
in
add
or
xchg
xor
inc
into
sbb
sbb
sub
cmp
xor
xlat
into
sub
xchg
xor
push
cmp
scas
enter
sub
roll
aad
std
mov
in
outsb
push
cwtl
inc
in
xabort
add
jmp
ret
xchg
in
dec
push
enter
xor
jge
test
loopne
rcll
push
pop
xor
adc
sbb
adc
test
mov
insb
bound
pop
int
cli
inc
xchg
jle
rol
mov
sub
push
push
ds
sbb
xchg
sbb
loope
ja
add
insb
dec
addr16
fxam
push
cld
add
fcmovnu
mov
add
sahf
loope
fcoml
push
xor
lret
nop
pop
mov
sub
cld
out
inc
popa
xchg
movsb
add
cmpsl
test
dec
pop
pop
out
adc
std
rorl
lods
shlb
push
jnp
test
loope
sbb
xchg
fdivp
dec
cmp
and
xchg
das
sub
cmp
cmpsl
rol
roll
lods
xchg
gs
mov
and
xor
mov
pop
insl
and
dec
pop
dec
dec
loopne
and
icebp
test
into
and
sti
je
xchg
ja
loope
into
dec
mov
popa
filds
xor
sbbb
adc
push
xchg
roll
jb
cmpsl
stos
movsl
lds
fxch
repnz
cmp
fadds
lret
sbb
adc
and
insl
icebp
or
and
cmp
sbb
mov
jle
bnd
sbb
cli
mov
push
stc
jae
repnz
rcrl
scas
clc
repnz
push
add
pop
or
jno
mov
sbb
pusha
push
jecxz
xchg
jmp
mov
scas
adc
fimuls
pushf
mov
out
into
mov
frstor
pop
xchg
pmulhw
pop
cli
outsl
das
push
out
stos
aam
imul
xchg
xchg
jecxz
jnp
mov
adc
stos
cltd
xchg
sbb
leave
jg
xchg
add
pop
das
stos
rorb
jae
aam
stc
xchg
sub
lods
adc
xor
fwait
imul
lock
adc
cwtl
add
jnp
je
test
xchg
dec
lods
jg
pop
stos
dec
out
popf
xchg
repz
insl
mov
andb
imul
lods
jnp
fwait
inc
xor
cmpsl
pop
orl
mov
adc
in
dec
inc
rcll
repnz
sbb
add
stc
daa
test
and
cmp
adcb
popa
dec
or
lock
lds
out
rcrb
int
stos
inc
xor
jnp
lret
inc
aas
in
xor
cli
mov
hlt
rorl
sbb
jns
push
add
cwtd
pop
repnz
sti
mov
or
stos
cmc
sahf
pop
pop
push
aas
dec
xchg
ret
push
or
cmp
mov
arpl
sbb
mov
int
push
mov
push
mov
stos
mov
xchg
out
xor
inc
jecxz
dec
jns
cltd
mov
add
push
test
es
pop
add
jle
and
rcll
sahf
notl
das
xchg
mov
pop
lods
loop
out
scas
clc
xchg
ss
rolb
pop
es
out
xor
sub
cld
bound
mov
jbe,pt
ficompl
jp
mov
test
jl
ss
pusha
inc
lods
test
mov
xchg
mov
jo
pop
push
pop
or
xor
fidivrl
mov
fs
insl
pop
add
mov
imul
pop
xor
push
fimull
and
repz
cmc
lods
inc
mov
mov
fildl
adc
out
jnp
aas
push
popf
and
test
aad
cltd
gs
jb
dec
mov
lret
test
fwait
pop
out
leave
inc
in
xchg
and
jb
cmc
test
sbb
outsb
push
push
clc
mov
ljmp
cmp
stc
jnp
pop
xlat
pusha
jmp
mov
cmpsb
push
jbe
daa
mov
idiv
mov
repz
aas
mov
jnp
andb
mov
enter
sub
cmc
mov
cwtl
lcall
or
or
rol
sbb
aam
mov
pop
rcrl
pop
mov
mov
adc
and
push
dec
jg
imul
add
and
aam
sbb
cld
cwtl
shrb
pop
push
in
lahf
xor
push
dec
arpl
pop
inc
movsl
jb
inc
gs
and
test
cmpsl
hlt
mov
xchg
push
movsb
xor
ljmp
lods
xchg
out
pusha
test
sub
std
cmpsb
mov
push
inc
mov
push
out
lret
sarb
or
jnp
xlat
mov
xor
mov
push
push
mov
mov
mov
mov
stc
adc
jp
jle
and
or
mov
mov
sub
repz
xchg
and
xlat
cmp
std
pop
sbb
pop
sub
cmp
pop
divb
inc
pop
jns
clc
inc
pop
repnz
pop
rcll
insb
dec
and
test
add
xchg
pop
mov
adc
inc
iret
push
push
outsl
xchg
jecxz
and
fbstp
scas
ret
kmovw
add
mov
inc
sti
insb
ss
aas
lods
pop
lea
push
cmpb
ret
push
ss
das
je
jmp
adc
lods
dec
je
adc
sbb
fcomp
into
pop
insb
xor
lret
insb
jo
call
inc
leave
sti
push
and
jl
enter
popa
push
cmp
comiss
ljmp
inc
jne
aas
sub
dec
in
movsl
popa
xchg
in
idivl
mov
add
lock
pop
scas
cmp
clc
sbb
inc
iret
and
xchg
and
add
hlt
push
jmp
mov
cli
nop
movb
arpl
pushf
movsl
mov
mov
push
inc
je
popa
mov
test
adc
add
inc
in
pop
rcr
addr16
pop
jl
pop
popl
out
les
ss
xchg
pop
and
in
add
push
push
fwait
add
mov
mov
dec
add
cmp
push
addr16
shrb
dec
mov
pop
mov
cwtl
out
inc
and
pop
push
mov
adc
xchg
fldl
test
mov
mov
dec
stc
cmp
pop
mov
fcoms
addb
and
add
xor
xchg
into
outsb
jb
nop
jnp
fnstsw
test
xor
repnz
dec
lcall
push
lret
sahf
gs
dec
inc
pusha
add
dec
dec
fdivrs
movb
mov
push
mov
or
sub
shlb
adcb
mov
mov
pushf
lret
ret
jbe
sti
add
jns
pop
jge
add
dec
mov
cmpsl
js
mov
adc
stos
and
clc
out
aad
clc
and
xor
xor
jb
inc
loope
mov
mov
lock
aam
inc
arpl
adc
scas
daa
mov
pop
or
in
jl
repz
adc
xor
jge
mov
jle
outsb
es
stos
in
xor
in
imul
or
mov
enter
paddsw
inc
dec
cld
out
mov
xchg
adc
mov
and
cmp
and
jmp
cmp
int
xor
jle
or
cli
shlb
lcall
dec
daa
lds
mov
push
sbb
mov
cmpl
jb
fwait
leave
sbb
sub
adc
mov
imul
out
pop
je
add
push
lea
xchg
dec
mov
jne
xor
pop
aas
mov
outsl
xchg
nop
out
fdivrl
jbe
in
inc
loopne
sbbb
xchg
call
rolb
mov
xchg
ret
and
das
push
out
mov
or
inc
push
movb
mov
call
cs
inc
stc
scas
gs
in
pop
xchg
cmpsl
out
adcb
xchg
jbe
sub
call
cld
sahf
dec
gs
xchg
and
add
fldt
add
add
xor
dec
xor
adc
xchg
xor
mov
push
xorb
sbb
pop
jbe
add
or
inc
imul
or
icebp
fmuls
mov
or
sbb
test
pusha
orl
sbb
jb
inc
add
dec
cmp
mov
std
call
xlat
and
xchg
mov
dec
mov
jle
xchg
push
push
testl
out
pop
adc
push
adc
and
subb
repnz
push
mov
aas
jne
pop
add
lock
inc
push
add
rol
movsl
dec
in
push
mov
je
jge
cmp
jne
rcll
loope
filds
mov
out
lods
mov
mov
push
lock
cmp
out
jg
sub
jecxz
adc
repz
jg
mov
shrl
jge
jmp
pop
jmp
and
add
les
sub
cmp
jmp
and
leave
fistpll
dec
loope
pop
leave
mov
mov
jbe
push
sti
pop
and
mov
test
push
call
jl
lret
cmc
scas
loop
xor
outsb
xchg
mov
jbe
cmp
cld
pop
mov
movsl
cmp
add
leave
pop
std
xchg
lret
jmp
in
sub
xor
hlt
test
push
in
inc
jae
loop
xchg
cs
stos
data16
leave
test
loope
xorb
pop
cmpsb
test
adc
lods
pop
inc
lds
scas
inc
jecxz
adc
or
sub
inc
out
into
stos
jbe
inc
outsl
imul
clc
mov
mov
hlt
add
sub
loopne
lock
popf
ret
xorb
push
mov
inc
add
cli
pop
cltd
sub
popf
push
mov
add
mov
sbb
fimuls
cmc
xor
outsl
push
dec
mov
shll
cmpsl
enter
or
fidivs
push
and
je
addb
cmpsl
jecxz
add
gs
test
or
jne
out
aad
lods
mov
xor
jne
je
dec
ret
ss
mov
lea
cmp
out
cltd
jne
jmp
and
divl
jb
inc
jmp
pushl
dec
in
fdivr
shll
jp
stos
add
rcr
fwait
mov
setb
add
xor
sub
rorb
dec
enter
ret
call
and
mov
mov
dec
cld
mov
xchg
mov
ja
cwtl
les
incb
adc
mov
push
aam
lret
dec
dec
dec
insb
jae
sub
push
mov
stos
inc
inc
push
je
inc
je
cmp
data16
pop
sti
lds
cmp
xor
insw
pop
sbb
inc
subl
sub
inc
in
pop
xchg
inc
test
push
arpl
bound
jne
jns
adc
inc
xor
sbb
iret
and
cmc
push
lret
enter
int
int
add
sub
push
cli
jnp
sub
lret
push
rsm
xor
or
xchg
sub
jno
test
dec
ja
les
hlt
cmp
adc
jl
and
fs
xchg
insb
movsb
xchg
mov
mov
into
and
lods
vmwrite
outsl
popa
cmp
ss
sbb
sti
int3
stos
call
adc
lds
mov
cmpsl
push
leave
addl
fnstenv
adc
js
shrb
lea
stos
rcll
mov
aam
push
test
inc
mov
inc
neg
lret
das
sub
mov
imul
push
sub
sub
es
mov
dec
cltd
iret
xchg
xchg
ret
jle
inc
aad
ljmp
out
sub
xchg
ror
sub
mov
xchg
jno
and
push
sbb
sub
mov
call
or
out
imul
aad
jne
sbb
call
sbbl
or
add
jb
psubd
dec
xchg
dec
lods
fwait
adc
mov
scas
inc
popa
aas
aad
jl
mov
sbb
push
lods
push
call
inc
fimuls
mov
push
fbstp
cmc
or
cs
outsb
pop
outsl
jne
add
test
or
cs
imul
mov
jo
mov
int
mulb
sbb
push
and
shlb
in
movsl
in
inc
push
daa
mov
inc
outsl
je
and
pop
jno
jge
adc
test
sub
cwtl
imul
adc
cmp
sarl
mov
jns
out
fiadds
sub
fcoml
repnz
addr16
cwtl
lcall
insb
in
js
pushf
int
mov
sub
addr16
dec
das
ds
and
xchg
mov
aas
add
mov
shl
jle
jb
mov
jmp
push
loope
mov
fsts
lcall
ret
movsl
shrb
aam
xchg
pop
lahf
push
mov
inc
mov
outsb
jb
aad
or
mov
jno,pn
out
in
add
sub
xor
mov
and
dec
iret
inc
loop
xor
mov
mov
mulb
ror
stos
pop
aam
xor
xor
mov
andl
or
inc
pop
stc
jmp
jns
inc
fmul
lods
cmp
mov
xchg
iret
cmc
xor
cmp
test
in
and
addr16
or
dec
imul
jle
xlat
mov
andb
sahf
sub
addl
ret
rclb
jae
mov
push
mov
enter
cmp
addr16
push
stos
add
movsl
ret
fadds
pop
mov
pop
xorb
sbb
out
mov
adc
ret
pusha
dec
push
cmp
mov
jns
in
inc
xchg
inc
loop
in
pop
jmp
clc
bound
cmp
inc
push
jns
jecxz
test
cmp
lcall
imul
xor
sub
fiadds
or
pop
icebp
loope
pop
and
adc
and
fisttpll
push
adc
insb
test
aam
push
hlt
aas
mov
loop
in
sbb
pushf
lock
xor
iret
mov
outsl
cmp
inc
and
adc
lods
test
push
arpl
mov
lods
test
lods
jo
sbb
xor
and
cs
inc
sbb
popa
cli
add
mov
jl
sbb
sbb
mov
mov
inc
ds
js
stos
sub
test
test
pop
fmuls
xchg
aam
mov
jno
scas
loope
jnp
jae
adc
jmp
fmulp
adc
and
dec
mov
fmuls
jne
pushf
push
dec
or
shll
sbb
xchg
jbe
out
adc
mov
repz
xorl
and
insb
data16
lret
inc
pop
cli
or
sub
call
push
pusha
dec
push
dec
test
pop
movsb
stos
push
and
adcl
insb
lods
lock
inc
lock
pop
pop
pop
mov
les
arpl
add
push
out
jo
push
mov
lock
lret
dec
loop
jo
fisubl
stos
outsb
mov
popf
sbb
repz
xchg
mov
outsb
jmp
or
inc
add
sub
int3
jno
fdivs
orb
stos
jnp
lret
push
push
into
movsl
or
inc
push
repnz
adc
test
xchg
xchg
repnz
aaa
sbb
cld
in
and
outsb
push
cmp
inc
data16
jle
mov
mov
stos
sub
mov
mov
outsl
fucomip
pop
mov
and
mov
sbb
loop
rcrb
movsl
sbb
sbb
cmp
sub
sub
test
mov
lds
adc
push
leave
cmc
clc
fisubrs
pop
bound
idivb
jb
scas
sbb
cmpsl
lret
int3
rorb
ljmp
mov
cmp
lcall
inc
mov
pop
jae
sbb
push
into
or
or
xchg
add
sbb
xor
adc
cli
push
pop
xchg
outsl
cmpb
xor
cmp
xlat
fsubrl
mov
pop
lods
call
fs
push
xchg
push
lds
mov
mov
repz
mov
insb
test
lret
add
lcall
jecxz
jge
call
lret
in
daa
xchg
add
movsl
push
es
clc
inc
cmp
mov
mov
dec
mov
lea
pop
aam
cmp
dec
pop
mov
into
add
and
mov
jmp
outsl
cmc
nop
outsl
xchg
ljmp
subl
jmp
lods
pop
xor
addr16
in
mov
push
test
xchg
cltd
xchg
loop
mov
jo
test
fsubrl
and
or
push
movsl
lods
push
ja
pop
addr16
sub
mov
mov
cwtl
mov
leave
std
ret
sbb
pop
dec
jle
mov
xchg
mov
test
jle
negb
adc
lea
jl
mov
pop
aaa
divb
push
ja
adc
sub
pop
arpl
movsl
cmp
or
cmp
into
dec
cs
inc
inc
fadd
fwait
out
mov
ds
xchg
in
outsb
mov
sub
faddp
fldlg2
mov
push
andl
jecxz
dec
pusha
jmp
or
popf
dec
call
das
cltd
aas
les
sbb
ficomps
fs
push
xor
or
xlat
adc
outsl
add
xchg
test
jb
xchg
mov
dec
ret
push
ret
sahf
int
mov
divb
mov
subb
mov
ss
mov
mov
clc
xor
and
xorl
jns
mov
jo
loopne
xchg
adc
and
push
in
aam
and
in
mov
stos
sub
scas
jmp
mov
cmpl
xchg
mov
pushf
fsubs
mov
int
mov
sbb
int
or
xchg
xchg
sub
xchg
in
inc
and
cli
mov
outsb
hlt
imul
cld
cmpsb
ja
call
ret
rcrb
cltd
data16
push
mov
add
pop
jecxz
sub
push
jp
das
dec
mov
xor
jo
inc
jmp
nop
cmp
add
loopne
stc
cmpsb
insb
sbb
sub
movb
adcb
out
into
je
rcll
test
inc
aad
rorb
inc
fnstenv
out
imul
pop
sbb
movsb
stos
sti
pop
inc
movsb
imulb
jge
sarl
xchg
xor
adc
add
popa
cli
lods
or
in
addr16
ret
iret
cmp
cmp
mov
inc
pusha
and
fidivrs
icebp
or
xchg
inc
loope
repz
popa
shlb
loop
sub
xchg
cmp
out
mov
inc
jge
xor
dec
fistl
imul
cld
clc
test
mov
mov
push
mov
popa
les
lock
addb
or
xor
add
or
mov
cmp
movsl
in
mov
xchg
test
fcoms
gs
dec
js
inc
jg
mov
shll
jnp
dec
sub
pop
jo
test
jg
cmpsl
outsl
cld
jle
stos
and
sub
mov
sti
jb
ss
adc
std
mov
sbb
bound
pop
cmp
mov
sub
cmp
fstpl
jbe
pop
sub
mov
push
pop
and
out
daa
sarb
push
lahf
dec
mov
stos
xor
push
movsb
rol
stos
mov
imul
xor
pop
mov
or
dec
loopne
cmpsb
add
data16
fistpl
je
mov
lret
push
pusha
gs
cmp
addl
lock
ja
repz
inc
cs
lods
push
shrl
pop
sarb
push
mov
jbe
mov
dec
out
mov
sub
mov
mov
test
and
jp
inc
jmp
xlat
dec
pushf
mov
xchg
push
iret
push
ja
cli
daa
add
mov
icebp
jbe
pop
add
call
cmp
movsb
sbb
stos
into
add
mov
sub
ret
inc
rcrb
push
jo
test
fisubl
mov
ss
std
shlb
dec
mov
jo
aas
bound
mov
je
dec
mov
test
lea
xor
fwait
jp
cmp
pop
rol
ret
and
jp
xchg
vpcmpgtw
jns
sub
std
out
and
push
dec
pop
cli
mov
cmpsb
je
fwait
mov
xor
mov
pop
add
mov
dec
insb
sbbl
xor
mov
push
mov
sbb
push
xor
xor
lret
lea
xchg
sub
ja
push
pop
dec
jmp
call
loop
test
ja
ds
and
mov
inc
test
subl
aad
mov
les
arpl
testb
roll
sti
sub
inc
pop
xchg
pop
jl
xor
pop
sub
mov
inc
sbb
jg
fbld
push
pop
and
fisubs
mov
out
pushl
dec
mov
flds
int3
dec
or
add
lcall
jo
mov
mov
sub
call
mov
roll
cli
lods
add
pop
inc
sub
cmc
xor
mov
mov
int3
pop
mov
jecxz
cld
out
or
push
dec
mov
pop
addb
mov
sub
push
mov
xor
int
pop
shl
stos
and
shll
sub
adc
ret
addr16
arpl
int
loopne
imul
insl
dec
ret
sbb
divb
or
xor
xchg
dec
adcl
std
jbe
adc
notl
xchg
add
jg
dec
or
cmpsb
movsb
or
out
mov
or
and
mov
fs
fwait
xor
in
or
add
cmp
cmpsl
je
cmpsb
or
pushf
and
stc
or
mov
sarb
and
dec
push
push
xchg
xor
movsl
iret
push
lea
notb
orb
sahf
decl
mov
loope
cld
popa
sbb
jmp
xchg
addr16
movsb
and
mov
inc
add
insb
ret
xchg
ret
pop
xchg
xlat
icebp
js
faddl
jne
dec
xchg
xchg
sahf
mov
lret
sub
fisubrs
xchg
mov
stos
mov
cmpsb
cwtl
cmpsb
add
push
cwtl
dec
call
xor
in
add
mov
idivl
dec
sub
or
xchg
sub
data16
repnz
xlat
pop
adc
mov
dec
xor
iret
outsl
insl
movsb
push
mov
rorl
mov
mov
xchg
sub
pop
in
dec
pop
loop
or
insb
adc
sbb
pop
jns
xor
rcll
pop
dec
leave
je
mov
out
sub
xchg
sarb
out
cmpl
jecxz
xchg
std
rcrl
jmp
pop
jae
scas
dec
mov
or
xchg
xor
pop
add
pop
aad
push
stos
xor
push
or
idiv
movsb
mov
icebp
jo
dec
jp
dec
cmp
mov
stc
add
inc
sbb
std
stos
loop
jge
out
fdivs
pushf
pop
outsb
call
lods
lret
and
xchg
movsb
sbb
nop
and
lea
bound
sti
call
jns
dec
push
adc
or
leave
dec
sbb
and
lcall
shlb
adc
in
adc
loope
sub
dec
push
insb
xorl
cmpsl
pop
jge
js
addl
sub
cli
sub
push
and
or
push
add
jo
xchg
adc
dec
insb
mov
jge
push
gs
sub
mov
sub
or
pop
sbb
les
mov
pop
jle
aad
lret
lods
imul
xor
cltd
movsl
insl
orl
repz
decl
or
xchg
dec
cmpsl
test
outsl
mov
jb
xlat
sbb
pop
popa
push
ja
inc
push
stc
fdiv
fcomps
into
sbb
mov
into
jl
pop
repnz
cltd
rorl
lock
xor
pusha
push
mov
outsb
pop
sub
push
in
lahf
mov
mov
pusha
mov
lods
jmp
sub
mov
jmp
js
cmc
mov
adc
cmp
jge
scas
xchg
mov
negb
xor
hlt
sub
pop
enter
cmp
cmp
mov
jle
call
ret
inc
je
in
mov
aaa
in
in
sub
std
push
enter
mov
mov
inc
or
add
mov
push
push
test
pop
and
into
sbb
ficompl
fs
bound
sub
dec
icebp
dec
cmc
out
add
movb
pop
add
sub
fstl
ljmp
dec
scas
jo
int
dec
mov
mov
mov
dec
repz
sbb
dec
jge
repz
jae
fs
adc
sbb
mov
adc
arpl
add
and
or
push
pop
jge
and
dec
not
outsb
fstp
cwtl
jp
scas
enter
adc
mov
cld
or
decl
xor
adc
ss
add
flds
shll
sahf
dec
icebp
xlat
pop
ljmp
xchg
dec
rcrl
push
xchg
push
mov
mov
out
pop
push
ficoml
loopne
subl
adc
jmp
sbb
xchg
mov
cwtl
mov
mov
cmp
stos
adc
mov
add
lea
jmp
aaa
push
push
fldenv
mov
lahf
icebp
lods
pushf
push
mov
or
rcl
cmp
stos
lahf
in
sbb
mov
mov
aad
push
test
add
add
in
addb
outsl
popa
mov
fnstenv
dec
inc
roll
loope
test
jae
pop
mov
nop
and
test
jbe
jne
jmp
mov
adc
inc
sub
aad
movsb
pop
or
push
bound
fcmovne
lea
leave
jb
test
inc
pop
fcmovne
pop
cmpsl
mov
sbb
jle
and
adc
mov
daa
shlb
mov
xlat
pusha
mov
fcompl
movsb
aas
test
jns
add
mov
pop
pop
mov
push
xchg
pop
cmc
pop
imul
ret
movsl
sub
sub
mov
lock
push
and
inc
add
and
imul
fwait
inc
xor
je
mov
sti
jp
push
in
andl
sbb
jmp
inc
dec
scas
nop
push
int3
leave
lods
xchg
shrl
dec
mov
lahf
xor
mov
dec
imul
out
fisttpl
shrb
aas
lret
mov
sbb
xchg
jmp
enter
xchg
mov
and
jae
mov
test
std
and
push
add
fwait
or
mov
mov
lcall
xlat
add
incb
sbb
pop
adc
push
aas
mov
mov
xor
xor
pop
add
mov
lds
jp
lret
nop
pop
icebp
add
loopne
dec
add
fmull
adc
movl
cvtdq2ps
dec
xchg
push
mov
fimuls
inc
jae
sarl
stos
cpuid
mov
inc
mov
and
imul
push
jae
inc
leave
pop
add
sbb
jo
pop
jl
je
out
setg
loopne
loopne
lock
adcl
add
ljmp
insl
sub
imul
lods
adc
ja
fldt
cmp
mov
aad
jb
jbe
popa
sbb
int
and
inc
cld
fstpl
sub
and
nop
fs
push
sub
dec
sbbl
in
loope
jo
lret
mov
or
push
jb
xlat
loop
cmp
pop
xchg
xor
jmp
xchg
shlb
rorb
shll
leave
adc
push
dec
or
sub
and
push
or
add
loope
imul
ret
jp
inc
insb
xchg
jge
cmp
test
adc
adc
addr16
insb
xchg
fldcw
xchg
pop
cmp
pop
mov
cld
xor
sbb
mov
dec
stos
sbb
fldcw
or
repz
mov
loop
setnp
fs
je
pop
push
inc
mov
sti
ss
sub
pop
pop
arpl
lock
and
and
jbe
je
add
pop
mov
pop
stos
pop
cmp
inc
movsl
pop
aam
scas
fiadds
jmp
or
jecxz
test
mov
xchg
repz
mov
inc
ja
mov
and
pop
into
xchg
sub
jmp
xabort
push
add
sbb
out
pop
inc
shrb
loop
xchg
mov
add
inc
out
push
sti
in
int
mov
stc
dec
sub
inc
mov
inc
jae
cmc
push
and
pop
loopne
shrl
cmp
xor
ret
andb
stos
and
in
fs
and
lods
mov
push
push
aas
sub
sarl
in
xchg
sbbb
scas
lock
cwtl
sti
mov
mov
cs
cmpsl
inc
std
mov
mov
pushf
out
lods
xor
dec
fs
mov
out
mov
adc
jnp
add
popf
add
lea
or
mov
inc
mov
xor
cmp
lret
inc
dec
inc
adc
jnp
movsl
pop
and
jg
into
test
cmp
or
cmpb
dec
dec
add
ret
es
sbb
scas
add
add
outsb
int3
add
int
pop
pop
in
jl
mov
insb
into
add
pop
push
pop
mov
mov
and
dec
les
cmp
xor
mov
and
nop
pop
or
sub
or
and
xor
push
mov
cmp
sbb
inc
or
mov
pop
mov
gs
jg
fcomp
in
shlb
fbstp
mov
sbb
adc
stos
push
mov
aas
pop
stos
shll
jns
or
call
popf
add
and
lods
fistpl
inc
jae
fstps
pop
dec
mov
adc
jns
test
fcoms
dec
js
mov
ds
icebp
cltd
and
out
insb
xchg
enter
inc
adc
lods
sahf
and
in
push
xor
pop
jmp
insb
adc
loopne
test
ret
xchg
cmp
faddl
in
jns
loop
adc
xchg
mov
lret
add
aaa
mov
xor
jnp
add
pop
aas
outsb
lcall
div
test
mov
adc
or
leave
xlat
jns
mov
sbb
insb
sbbb
daa
shlb
or
sarb
xchg
and
sub
jmp
pop
push
adc
inc
or
and
xchg
xor
dec
dec
jp
stc
int
daa
packsswb
sub
xor
js
push
mov
or
orl
gs
popf
xor
notb
lods
aaa
or
outsb
leave
out
test
mov
sbb
mov
xchg
mov
mov
std
dec
xlat
dec
aad
mov
mov
imul
fbld
das
cmp
xor
xchg
or
sarb
lret
int
out
loopne
adc
jo
movsb
stc
outsl
int
push
aad
sbb
pop
inc
bound
or
xchg
mov
sbb
mov
mov
sbb
insb
adc
mov
push
cmp
xchg
xchg
cltd
mov
adc
icebp
fsubl
insl
mov
xor
mov
cmp
pop
jno
aaa
and
jge
cmc
xor
mov
cltd
cmp
outsb
ficomps
or
ficompl
pop
or
push
aaa
mov
ja
pop
mov
iret
test
js
ret
pushf
mov
xchg
sub
inc
aaa
ficomps
inc
nop
filds
shll
ret
mov
ficoml
push
sbb
fidivrs
sub
mov
repz
subl
jle
addl
stc
jmp
in
sub
jg
or
call
or
push
lods
lea
ret
loopne
popf
fwait
nop
sbb
mov
sub
add
add
jle
cmp
mov
mov
sbb
ja
or
dec
cld
jg
mov
lahf
fisttps
lods
and
in
or
les
imulb
xor
xchg
sbb
push
test
cmp
add
rclb
push
mov
inc
dec
icebp
jecxz
mov
mov
imul
mov
mov
scas
jp
inc
push
pop
movsl
adc
les
sub
test
les
xchg
adc
fisubl
cmc
xor
iret
add
push
test
push
add
lock
loop
dec
andb
push
adc
jno
mov
mov
inc
es
movsb
jle
or
das
cmp
xchg
mov
jmp
enter
sbb
enter
mov
in
loope
sbb
mov
out
or
lods
jg
jae
push
les
out
imul
cmp
arpl
xchg
dec
mov
ss
ret
dec
sarb
or
xchg
and
jb
cs
aaa
fsubl
add
and
cs
push
mov
sub
adc
push
lret
insb
push
loope
test
or
popf
mov
fwait
mov
mov
ss
mov
push
xor
or
stos
mov
mov
nop
or
lret
dec
pop
inc
aam
xchg
and
stos
bound
mov
pop
cmpsl
rcr
fadd
adc
movsl
pop
sbb
lret
adc
ret
and
cmp
mov
push
fs
lahf
pop
lods
les
enter
loop
cmp
test
insl
dec
sbb
aas
icebp
mov
xchg
jo
loope
sbb
xchg
mov
inc
scas
xchg
int3
ss
sti
stos
test
pop
jno
inc
pop
fst
xor
or
inc
rcrb
push
add
push
bound
loope
in
scas
lods
loop
or
outsl
into
push
mov
push
dec
test
and
pop
or
test
sbb
push
movsb
lret
into
jnp
in
bound
adc
add
aaa
dec
stos
addb
lods
inc
xor
cmp
jno
stos
fcompl
jnp
dec
lds
ja
dec
adc
js
fldenv
inc
fisubrl
test
mov
fldenv
jp
mov
je
mov
xor
divb
leave
push
mov
in
mov
or
mov
popa
mov
repz
mov
test
jp
jnp
ret
add
cmp
loopne
xor
lcall
inc
sbb
insl
cli
pushf
dec
mov
adc
and
inc
jnp
outsb
cmp
lods
mov
push
and
push
sub
push
pop
jbe
lret
add
pop
mov
fildl
mov
ror
add
or
aam
sub
nop
mov
xchg
je
xor
adc
stc
dec
xchg
pop
inc
shrb
sub
stc
insb
mov
adc
cltd
adc
mov
adc
ja
dec
inc
je
cmp
xchg
xor
ficoml
push
pop
mov
ror
imul
ss
fnsave
loope
pop
dec
sub
call
jo
dec
inc
mov
and
pushf
out
sub
leave
std
hlt
dec
leave
mov
pushf
scas
jle
or
add
sub
imul
lods
stos
fildll
sbb
aad
mov
xor
iret
js
leave
cmpsb
jle
xor
imul
idivb
xchg
out
mov
imul
add
pushf
jae
jecxz
sti
test
out
cmp
mov
jb
inc
inc
mov
jne
sar
pop
dec
aam
or
mov
cmp
ja
jno
test
cmpsb
push
cmp
stos
inc
cmp
int3
mov
jl
imull
jns
jge
jo
orb
leave
sub
test
sub
push
lcall
shl
loop
sbb
icebp
and
xchg
sub
and
sbb
xchg
or
cmp
mov
es
xor
mov
cs
mov
cmpsl
add
ljmp
subb
jae
out
je
stos
cmpsb
insl
jb
in
xchg
test
cmp
ja
and
xor
adc
fistps
lret
loopne
f2xm1
rol
xor
mov
xlat
jo
mov
js
push
jg
out
scas
push
sbb
insl
inc
hlt
repnz
pop
cmp
fmull
out
aaa
mov
mov
repnz
adc
mov
jp
lea
pop
jno
dec
sarb
ret
xor
clc
jg
loopne
adcb
shrl
ljmp
dec
sub
push
call
arpl
loop
sub
repz
sbb
dec
sti
inc
test
ss
int
adc
popf
xor
fdivrs
or
sub
inc
mov
ret
cmp
addl
lock
fstp
jnp
and
sbb
inc
sti
pusha
incb
bound
aam
dec
and
sbb
stos
inc
divb
add
sub
xor
cwtl
and
aaa
int3
inc
test
nopl
pop
rcrb
test
mov
and
lods
jp
das
stc
mov
cmpsb
push
adcl
or
sbbb
or
and
dec
xor
push
push
jmp
pop
lret
test
sub
xchg
cmp
js
sub
adc
pusha
cmp
and
mov
dec
adc
xchg
cld
jmp
xor
aad
or
int
fsubrs
cmpsb
and
dec
scas
cwtl
or
ja,pn
push
mov
add
nop
pusha
xor
xchg
fnstsw
mov
mov
cmc
xchg
cmpsl
fldcw
adc
sub
fdivs
xchg
mov
mov
ja
into
inc
xchg
and
fwait
xchg
mov
or
sbb
inc
mov
pop
jnp
mov
andb
cmpsb
mov
mov
cmp
insl
test
fstpl
or
sub
loope
ret
popf
mov
ret
push
jmp
mov
jmp
mov
mov
aad
mov
mov
jg
sahf
cmc
pop
pop
aad
mov
lock
out
fwait
lahf
inc
bound
pop
jb
cmpsl
and
dec
jecxz
jmp
cmp
fisubs
arpl
cmp
jecxz
data16
pop
mov
mov
pushl
jo
aaa
jno
lds
pop
test
mov
insb
lods
shrb
clc
mov
in
mov
int
adc
int3
pushf
aas
js
jne
test
jg
pop
ss
mov
sbb
ret
push
mov
dec
sbb
cmpsl
in
adc
insl
pop
fxch
cld
mov
pusha
out
pmullw
pop
sub
jno
popf
sti
sbb
inc
cli
mov
sbb
lds
add
xor
fbstp
push
lds
sahf
repnz
into
lea
pop
fisubrs
adc
cli
pop
xor
jnp
testb
cmp
fsubrl
lret
pop
push
cmp
mov
in
mov
inc
adc
sbb
outsb
sub
xor
test
in
mov
mov
xor
push
fdivl
inc
mov
inc
lds
int3
jns
jl
daa
mov
mov
iret
leave
cmp
cli
lea
xor
add
ffree
cmpl
dec
cmpl
data16
fwait
ss
push
inc
out
and
xchg
ds
dec
dec
cwtl
in
out
jecxz
test
pushf
outsl
faddl
adc
fcomip
mov
and
add
enter
loopne
sti
fldenv
sbb
xchg
and
push
stos
xlat
mov
mov
cltd
insl
jecxz
mov
jmp
mov
mov
push
inc
test
dec
cmpsl
stc
pop
cmc
xor
dec
mov
aam
jne
xchg
aaa
sbb
cmp
push
nop
arpl
repnz
pusha
push
sbb
pop
lret
push
cltd
mov
out
mov
pop
pop
gs
dec
and
in
sub
cmp
sbb
push
ss
and
cwtl
pop
jge
dec
stos
jge
adc
xor
sbb
sbb
mov
lock
shrb
ja
sahf
cmpsb
xchg
stc
divb
sub
mov
sub
lock
jmp
jno
in
rorb
aam
adc
test
lods
pop
pop
xor
mov
frstor
jle
sti
dec
in
mov
int3
jp
adc
push
int3
sahf
sahf
mov
or
mov
sbb
fs
fisubl
pop
bsf
xor
pop
inc
cs
les
into
into
das
inc
and
call
sub
push
sub
lret
fidivrl
mov
fisubrs
cmp
bound
ret
or
pop
mov
out
sti
sub
fistpl
dec
cld
sbb
jl
rcll
outsb
sbb
push
rcll
mov
pop
inc
subl
cs
push
mov
or
addr16
push
aas
loope
sub
jg
mov
and
jp
jmp
xchg
jns
loope
push
xor
sbb
inc
push
in
fdivs
xor
push
sbb
add
in
sbb
push
in
mov
lods
adc
bnd
adc
pop
rol
cwtl
bound
mov
mov
das
daa
dec
cmpsb
cmc
jb
sbb
adc
inc
or
jmp
sbb
aam
mov
mov
inc
pushf
pop
aaa
stc
je
ja
adc
inc
push
mov
int
nop
and
push
add
or
push
loop
cmc
stos
fs
loopne
and
mov
fsts
adc
lret
js
mov
cli
inc
mov
js
scas
inc
cmpsb
or
das
jbe
lods
mov
cmp
ja
in
lods
adc
xor
xchg
lcall
push
ficomps
jge
popf
adc
pop
pop
int
cmp
cwtl
push
adc
les
sub
scas
iret
rdtsc
dec
gs
pop
sahf
je
xchg
push
inc
pushf
mov
ja
mov
mov
pop
cld
lods
test
cwtl
or
sbb
inc
loop
test
int3
insb
pop
in
push
pop
int
xor
push
mov
fucomp
nop
xlat
inc
jg
add
add
cmpsl
clc
and
pop
adc
dec
jne
lea
or
ret
imul
flds
ljmp
int3
inc
or
jle
xor
push
lret
dec
cmp
mov
lret
sbb
sbb
pop
xor
dec
mov
xor
pushf
push
xchg
enter
pushf
sub
xchg
mov
mov
stos
inc
dec
outsl
je
sub
cmp
test
xchg
jmp
or
hlt
test
inc
sub
loop
adc
outsb
cmp
mov
sbb
insl
xchg
mov
mov
mov
xor
test
xchg
dec
mov
aas
mov
into
adc
sub
xor
xor
bswap
sub
jle
jb
ficomps
jmp
cmpsb
sahf
je
cwtl
xchg
insl
repnz
inc
dec
sub
or
mov
lods
push
fidivs
popa
cli
mov
xchg
cmp
push
clc
iret
nop
andl
daa
aam
frstor
inc
dec
popf
sbb
gs
adc
loopne
sbb
scas
mov
jno
add
andb
pop
stos
push
ds
sbb
mov
lods
add
cmp
lcall
daa
int3
in
mov
cmp
je
mov
sub
loopne
sub
out
mov
lods
adc
jns
mov
mov
adc
or
test
call
in
fldenv
incb
fldcw
shll
push
adc
lds
loopne
sub
cs
mov
test
mov
xor
outsl
pop
pushf
shll
lea
pop
mov
pop
inc
fwait
lahf
xchg
xor
inc
adc
lods
pop
and
stos
ljmp
jecxz
and
nop
dec
out
adc
cmp
sahf
cmpsl
addr16
mov
adc
xchg
mov
or
fnstsw
mov
xchg
push
insl
push
loope
xchg
mov
aas
cmp
fisttps
stos
into
sub
pop
mov
jge
adc
fldenv
stc
sbb
push
or
mov
movsb
loope
dec
mov
lret
sbb
pop
sub
pusha
popf
in
sub
mov
jl
mov
and
insl
mov
out
call
dec
push
push
mov
xchg
pop
roll
repz
mov
shl
inc
mov
pop
push
xchg
adc
cmp
out
mov
cmp
push
or
fdivrl
insl
mov
adc
and
sar
pop
icebp
cmp
fxch
push
mov
pop
push
sti
jl
add
sbb
mov
pop
mov
pop
fdivs
push
inc
cmp
mov
push
and
repnz
data16
xor
insb
std
xchg
enter
ret
shrd
int
or
bound
cmpsl
inc
mov
cmp
fst
inc
mov
icebp
scas
mov
inc
popa
or
push
cmp
into
or
mov
fisttpll
ss
int3
pop
push
mov
in
add
repz
out
lcall
in
dec
or
jecxz
icebp
aas
mov
fstps
add
mov
add
pushf
push
xchg
aaa
pop
push
sbb
aad
shrl
mov
lods
das
mov
pop
pop
fsubrs
gs
movsl
push
loopne
mov
mov
adc
sbb
dec
into
out
es
mov
daa
cmpl
repz
dec
test
mov
dec
xor
cmp
add
push
std
aaa
and
inc
cmp
shlb
stos
or
shrb
subb
mov
pushf
inc
sbb
rorb
jmp
sbb
in
jbe
ja
test
fst
xlat
push
jo
inc
pushf
lds
pop
lds
jns
dec
lods
pop
aam
cmpsl
adc
adc
rcr
cmp
out
mov
adc
adc
add
dec
xor
dec
xchg
mov
outsl
push
push
insl
sbb
xchg
movsl
pop
mov
subl
push
rcl
in
scas
xlat
xor
test
arpl
sbb
xor
dec
jle
dec
mov
pop
data16
mov
pop
ja
add
scas
inc
xchg
adc
xor
pop
jg
xor
jo
jle
cli
mov
xor
outsl
aad
cmp
hlt
stos
mov
adc
xchg
std
jmp
pop
aad
cmp
mov
jl
fwait
push
cmpsb
stos
add
add
sub
xchg
rorb
int
arpl
jge
outsl
mov
shrl
out
dec
push
loop
or
lock
fistl
daa
movsl
clc
jg
sarl
jl
dec
mov
mov
outsb
mov
cwtl
mov
dec
jns
jmp
sbb
or
ja
movsl
jge
sti
and
mov
push
jl
inc
jmp
dec
outsl
ret
adc
xchg
fisttps
daa
sub
arpl
cmp
enter
cmc
mov
xor
ja
and
mov
xchg
cltd
enter
add
insl
subb
iret
mov
push
lea
ds
pop
in
inc
adc
mov
push
cmc
inc
and
cltd
mov
cld
ja
push
ret
pop
push
mov
pop
adc
mov
stos
gs
shlb
sub
mov
adc
push
test
fwait
int3
dec
push
pop
sub
or
mov
fcmovnb
movsb
lods
inc
sub
aas
das
fiaddl
cwtl
adcb
in
pop
movsl
push
dec
push
adc
out
dec
inc
jnp
pop
sbb
sub
xlat
lock
jb
stos
xor
cltd
out
lock
fwait
popa
loope
jge
adc
mov
lret
in
mov
or
pop
loopne
enter
push
pop
mov
xchg
xorl
xor
push
shl
outsb
adc
dec
push
in
dec
lcall
addr16
sbb
sbb
xor
xchg
lret
loopne
mov
movsb
ja
into
mov
aaa
and
cwtl
adc
rcrb
push
pop
jmp
ljmp
sbb
testb
test
push
sub
sbb
adc
add
inc
xor
dec
lods
lea
inc
aam
inc
mov
fucomi
mov
iret
sahf
fistpl
mov
sub
push
jg
sbb
pop
das
sbb
and
jmp
pop
mov
cwtl
adc
stos
pop
add
mov
pop
mov
int3
mov
adc
mov
mov
aaa
sti
ficoms
imul
mov
pop
push
and
call
in
xchg
das
push
dec
sub
cwtd
cmp
inc
ret
cwtl
enter
fildll
lcall
mov
in
aas
jge
xor
insl
sbb
push
in
jae
pop
leave
aas
and
andb
sti
shl
jns
pushf
push
push
stos
movsb
int3
pop
adc
push
jae
or
xchg
dec
mov
pop
fidivs
mov
jne
mov
inc
ror
jb
pop
sbb
imul
daa
dec
mov
adc
ds
lods
mov
or
mov
fdivrl
mov
rorb
in
dec
movsl
out
mov
out
and
pop
add
pop
xchg
dec
icebp
ss
add
loopw
ret
mov
mov
fnstenv
stos
jne
nop
out
das
outsl
add
push
add
sbb
push
daa
sti
decl
insl
xchg
pushl
jo
pusha
mov
lods
fidivl
cmp
mov
mov
pop
mov
jmp
repnz
dec
call
mov
stos
dec
push
out
mov
andb
mov
call
sbb
les
stc
shll
cmp
lods
cs
xor
pop
dec
mov
decl
lret
mov
sbb
cmc
inc
nop
mov
les
aad
int3
ds
aad
fdivrs
inc
sti
or
iret
adc
adc
es
lret
lcall
movsl
fstps
push
jae
ss
hlt
in
and
push
xorl
jb
inc
xor
pop
cmp
sub
and
aas
scas
imul
mov
jae
mov
add
xchg
sahf
notb
adc
fsubs
push
ss
scas
lds
loopne
stos
inc
leave
mov
in
outsl
or
sbbb
negb
imulb
mov
scas
movsl
sub
les
dec
roll
pop
test
adc
sub
fmull
push
sub
pushl
jnp
and
ffree
call
aam
dec
add
dec
pushl
push
mov
scas
push
out
mov
lret
and
lret
xor
add
outsb
mov
je
insl
fldcw
jo
xor
lret
daa
sbb
lea
adc
and
es
add
test
pop
cmc
nop
lea
mov
call
daa
mov
mov
jnp
test
mov
adc
push
sarl
fsubl
ljmp
mov
je
jl
lret
mov
sub
mov
addr16
aas
push
dec
pop
mov
adc
jbe
push
xchg
and
dec
pop
pop
mov
dec
xchg
stos
stos
mov
scas
xlat
test
add
push
aad
fcmovbe
mov
movl
or
cmpsl
jne
mov
pop
into
sbb
cmp
in
adc
fwait
in
push
sub
leave
fcomp
adc
add
loop
hlt
push
leave
mov
mov
roll
inc
and
scas
fsubrp
test
push
adc
out
and
xor
sbb
pop
push
mov
lea
mov
sub
pop
in
mov
add
div
dec
sbb
aaa
mov
mov
xlat
push
into
mov
sti
jb
inc
sub
or
test
sbb
add
cmp
xchg
sbb
arpl
mov
push
cmpsl
cli
addb
mov
into
pop
outsl
add
es
sub
sti
je
fs
mov
cmpsl
jb
or
and
out
call
int
xor
aas
inc
mov
push
jmp
fidivl
out
lods
add
dec
sti
pushw
les
mov
mov
in
adc
jno
lret
dec
divl
sbb
push
std
adc
lock
and
imul
int3
mov
mov
xchg
inc
adcb
pop
add
xor
push
mov
dec
fucomi
inc
and
pop
sub
mov
mov
in
fwait
insb
out
dec
divl
mov
js
mov
aaa
push
mov
inc
pop
out
add
push
mov
gs
pop
stos
jo
or
mov
xchg
sub
or
lds
jb
cmp
sub
jmp
sub
adc
xchg
jo
push
mov
sub
dec
je
cmp
scas
jb
xchg
ret
sub
cmp
loope
xor
movsb
popa
fwait
jne
xchg
cwtl
mov
sbb
sbb
stos
jo
push
movsl
mov
es
bound
xchg
mov
push
inc
push
push
add
test
je
mov
js
push
xor
test
fs
call
and
sahf
stc
bound
mov
and
std
popa
std
dec
mov
mov
imul
icebp
je
push
or
cs
hlt
pusha
shl
jb
mov
dec
xor
or
jne
jno
aas
hlt
call
xchg
imull
mov
cmp
rolb
shrl
push
mov
mov
add
in
mov
jns
jg
dec
mov
test
mov
popa
jnp
in
sahf
push
test
pop
scas
pop
or
jmp
shlb
mov
mov
ds
sub
cmp
aaa
jl
scas
xchg
or
cltd
aad
aad
sti
int3
or
notb
aaa
sub
idivb
mov
lret
sti
insb
push
fisttpl
mov
xor
repnz
push
or
jmp
xchg
xor
add
add
jl
in
fs
pop
jecxz
sbbl
repz
mov
xor
ret
push
xor
mov
or
or
mov
mov
pop
add
mov
das
loop
frstor
dec
aam
sbb
hlt
jb
sub
add
out
ret
rorb
mov
aam
mov
adc
cmp
mov
mov
mov
fsubp
inc
inc
fnstenv
lahf
jp
addr16
mov
andl
mov
fcoms
imul
pop
shll
test
test
call
stc
pop
in
inc
cld
adc
add
xchg
adcl
repnz
and
xor
mov
and
popf
xchg
orb
inc
sahf
xlat
or
dec
jns
outsl
inc
sbb
clc
cmp
xchg
mov
ds
xchg
sub
and
and
push
sbb
shlb
adc
movsl
icebp
inc
pusha
rep
push
shlb
sub
add
loop
pop
shrb
or
mov
mov
in
fidivl
enter
sub
xlat
or
pop
push
decl
movsb
push
int
xchg
push
push
push
push
insl
cli
sti
dec
xchg
ss
xchg
mov
test
mov
inc
rcr
adc
in
mov
mov
push
sti
inc
movsb
in
pop
and
dec
movsl
mov
push
xor
shlb
lock
xlat
test
xchg
in
adc
xchg
push
mov
and
loopne
ljmp
subb
mov
into
sub
pop
stc
dec
jmp
leave
dec
jnp
lock
je
push
mov
and
enter
push
mov
mov
mov
test
cld
arpl
jns
sub
fimull
loop
out
adc
sub
mov
cmp
ret
scas
mov
mov
adc
xchg
ror
mov
gs
out
mov
cmp
pop
dec
jb
mov
push
mov
push
xor
sbb
sbb
fs
adc
shll
add
lds
or
xchg
dec
rcl
rclb
xchg
stos
push
aam
and
addr16
cmpsl
mov
xchg
rcl
fsubrl
push
jl,pt
int
daa
ret
pusha
insl
mov
out
adc
jne
add
cmp
imul
ds
cmp
pop
mov
sub
stos
fstpl
mov
jecxz
imul
add
add
xchg
push
pop
cmp
iret
adc
shll
int
push
push
xchg
mov
xlat
push
mov
scas
into
fmul
mov
mov
pop
out
dec
cmpl
stos
add
mov
negl
mov
xor
pop
out
dec
ret
xchg
pop
pop
test
mov
int3
divb
pop
testb
sbb
mulb
xchg
lea
outsb
xchg
or
inc
dec
fcoml
mov
in
xchg
adc
and
scas
cmpl
mov
popf
je
sub
mov
rcrb
jbe
jae
add
push
mov
pop
das
sub
push
inc
sti
mov
aam
pop
cmpb
mov
in
lods
imull
orl
out
aad
inc
xor
outsb
addb
mov
int
mov
mov
mov
cmp
mov
jg
insb
sbb
xsha1
cmpsb
lret
pop
jno
sbb
mov
nop
addr16
jae
add
mov
punpckhwd
push
ret
enter
in
mov
loop
and
aas
movsl
hlt
lahf
call
jle
shrb
adc
jge
into
add
mov
sarl
test
mov
xlat
add
lahf
ret
adc
std
cmc
xchg
cmp
arpl
jge
pop
movsl
cmpsl
ss
xor
add
mov
mov
dec
mull
packuswb
xlat
inc
popa
das
jno
mov
cltd
cmp
test
sti
push
dec
test
push
mov
scas
cltd
sbb
std
and
inc
jle
shll
orl
cmpsl
mov
int3
cmp
xchg
addl
addr16
jge
lds
push
arpl
mov
mov
stos
add
push
cmp
fistps
add
sti
test
mov
or
adc
pushf
in
into
cmp
gs
sbb
popf
fwait
outsl
bound
add
stos
movsl
repnz
or
sbb
xor
pusha
add
pop
cmc
cmp
gs
fidivrs
jecxz
mov
mov
iret
nop
fs
idivb
in
xor
int
ret
stc
rolb
inc
fldenv
push
and
repz
mov
sub
or
enter
pop
shl
jb
dec
lods
inc
test
mov
pop
imul
mov
adc
and
cld
sub
pop
sbb
movsb
mov
dec
sbbb
jecxz
sub
leave
jmp
fcomi
testb
lret
emms
dec
cwtl
cmp
and
add
gs
mov
aad
cmc
sbb
push
or
lock
fldl
bound
andl
rdpmc
mov
les
out
jbe
in
aas
adc
sahf
jns
inc
or
sbb
push
and
sbb
push
cmp
leave
adc
dec
push
push
sub
sbb
pop
jae
push
js
mov
push
push
cmp
cmp
sbb
or
push
xor
arpl
dec
adc
sub
sbb
sar
repnz
xchg
pop
sarb
mov
test
or
rcr
ret
xchg
dec
pop
fstpt
sarb
xchg
hlt
pop
mov
lcall
inc
adc
ja
lcall
pop
shll
inc
bound
mov
jp
cmpsl
jp
mov
push
inc
leave
dec
movsl
jge
scas
fwait
xlat
inc
fbstp
mov
je
or
enter
mov
xchg
dec
jp
jp
or
sbb
push
jae
lea
iret
xchg
jge
std
ror
faddl
sbb
and
insl
cmp
pop
loopne
sbb
sbb
cltd
add
xchg
xchg
sub
dec
aas
jae
adc
ja
xor
loopne
mov
adc
mov
inc
ljmp
pop
xor
je
and
sbb
rorl
push
popf
pop
fs
lock
and
sub
push
ja
push
ss
insb
jne
out
pop
dec
cmpsl
pop
subl
mov
mov
push
adc
sbb
out
xchg
out
jae
and
movsl
cmp
mov
rorl
icebp
mov
xchg
fwait
sub
xchg
fcmovbe
or
inc
adc
push
lcall
dec
in
out
jmp
iret
jb
jge
sahf
shll
pop
push
dec
dec
movl
in
jg
dec
dec
cmovg
push
sbb
outsl
cmp
test
std
jo,pt
sbb
mov
sbb
or
sub
mov
test
sub
repnz
adc
add
movsl
pop
mov
pop
aam
cmpsl
or
ja
ret
pusha
inc
mov
adc
jne
test
movsl
in
sbb
outsb
push
pop
dec
mov
les
xchg
shlb
test
rcr
test
or
shl
xor
repz
add
movsb
stc
inc
es
ja
cltd
jle
xchg
cmp
into
fisubl
cwtl
in
fdivr
xchg
sbb
jae
int3
pop
mov
fisttpll
mov
pop
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
ljmp
bound
sbb
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
jmp
or
or
mov
adc
std
outsl
jns
add
adc
mov
lcallw
aaa
std
cwtl
xor
leave
in
dec
jbe
mov
or
jle
push
aas
out
sub
and
add
jne
pop
sbb
mov
lcall
and
pop
cwtl
pusha
repz
lret
outsl
jle
push
inc
inc
push
movsl
pop
jae
ss
mov
add
je
outsl
test
add
jge
mov
das
lock
push
outsb
sbb
movsl
sbb
jbe
push
mov
out
sub
bound
out
pop
cmp
mov
stos
les
mov
or
out
in
loopne
jl
push
shll
mov
adc
out
inc
insl
stos
mov
or
loop
inc
jl
mov
or
out
out
inc
jge
mov
or
jl
jmp
or
add
inc
jle
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
adc
dec
jl
mov
add
scas
loope
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
push
arpl
scas
push
xchg
or
adc
in
loope
insb
pop
mov
or
out
out
add
and
or
adc
loope
pushf
cmp
movsb
adc
or
adc
xchg
inc
jl
mov
enter
aaa
jecxz
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
out
inc
jl
mov
or
in
loope
jl
test
shll
sbb
fsincos
inc
push
loope
cmpl
mov
cmp
pop
or
inc
xchg
das
lods
pushf
mov
sub
repnz
aad
push
stos
xor
imulb
test
push
dec
int3
add
call
and
mov
mov
sub
jne
xchg
push
lock
sub
stos
cmpxchg
add
insb
nop
xchg
dec
insl
cmp
fcomps
in
stos
xchg
frstor
push
popf
inc
faddl
sti
mov
das
and
stc
hlt
jp
repz
js
dec
inc
or
push
or
push
cmp
es
clc
cmp
ds
sub
adc
outsb
add
fs
mov
pop
lock
jp
sbb
and
addl
rol
sub
sti
mov
push
dec
or
lret
lcall
push
rorl
rcl
repnz
cld
ror
sub
cmp
dec
sub
insl
mov
lods
jb
pop
insl
or
and
fwait
cmpl
dec
jp
sarl
lods
xchg
mov
popa
mov
mov
xchg
cmp
mov
or
and
fdivrs
mov
rcl
mov
mov
inc
popa
sbb
sbb
sub
inc
ret
out
dec
adc
imul
cmp
xchg
adc
js
shrl
xor
out
push
mov
cmp
push
lock
popa
stos
outsb
add
ret
or
test
enter
push
mov
in
outsl
mov
fnsave
ljmp
fisttpll
push
jmp
stos
mov
jo
sarb
mov
jnp
insl
movl
xorb
sbb
mov
repnz
adc
sub
clc
in
pusha
aam
sbb
push
decb
add
cmp
or
cmpsb
jnp
cmc
lods
jmp
cmpsl
pusha
mov
xchg
mov
or
repnz
out
fs
jae
push
leave
xchg
cmp
fisttps
xor
add
test
dec
test
push
inc
sub
adc
or
inc
mov
add
sub
xchg
nop
les
or
add
add
add
sbb
inc
fistpl
pop
gs
jge
push
cs
adc
mov
stos
and
sbb
adcl
cmpsb
or
jecxz
sahf
fld
pop
cmpsl
and
cld
xchg
mov
out
lcall
inc
fisubrl
xor
outsl
inc
fst
jae
jae
lahf
dec
sbb
xchg
call
in
pop
sbb
aas
popf
jbe
or
dec
xor
xor
flds
scas
bound
lret
imul
enter
int
lds
and
mov
push
stos
adc
mov
or
nop
jb
test
dec
pop
mov
push
xor
mov
cmp
adc
lods
stos
adc
xchg
cmp
lret
outsl
and
jp
add
pop
adc
divps
jnp
or
mov
pusha
mov
shrl
mov
xchg
enter
xor
js
divl
cmp
pop
jne
add
out
stc
push
stos
jle
sahf
addb
xchg
add
mov
jle
int3
ds
xor
out
stos
add
inc
push
orl
add
mov
andb
loope
test
ret
ret
dec
cmp
inc
pop
mov
pop
sti
fldenv
pop
ds
aad
lahf
sub
cwtl
jmp
jge
sahf
add
outsb
jecxz
adc
mov
lahf
ja
dec
mov
cmp
adc
jle
xor
mov
cltd
aad
sub
frstor
xchg
hlt
scas
lods
iret
lods
loope
sti
in
mov
inc
mov
popf
mov
pop
out
daa
adc
pop
jle
popf
call
out
test
pop
push
mov
int
std
roll
dec
cmp
ss
popa
lcall
aaa
inc
lods
push
xchg
shll
fdivs
inc
movsb
or
cmp
ds
dec
xchg
cmpsl
push
jecxz
fdivl
cmp
sbb
fsubrl
dec
inc
add
out
nop
add
mov
mov
in
add
jbe
fimuls
mov
fcoms
pop
jnp
stos
and
rcll
push
jmp
cmpsl
mov
in
insl
sub
daa
or
aad
or
incl
sahf
jle
xor
mov
in
xchg
mov
inc
cmp
push
mov
addr16
fimull
mov
pop
cli
aam
lahf
leave
mov
dec
xor
fildll
fnstcw
or
insl
iret
push
ljmp
das
add
sub
sub
add
and
or
mov
sbb
popf
xor
movsb
xchg
mov
mov
push
loope
sbb
mov
addr16
je
cmp
insl
push
mov
into
hlt
incl
aad
xchg
lcall
push
mov
imul
sbb
rorb
adc
dec
pop
jmp
leave
fbstp
into
xchg
mov
push
imul
sbb
aaa
out
popf
push
cmp
adc
add
out
ss
jbe
mov
je
in
mov
add
mov
test
jecxz
mov
lcall
adc
lret
pop
jp
daa
jmp
xchg
mov
inc
xchg
cmp
and
movsb
mov
dec
lods
xor
jo
mov
dec
pop
push
cmpsb
popa
sahf
scas
decb
imul
pop
mov
cld
dec
sub
es
or
ss
add
sbb
pop
or
adc
out
lahf
pushf
insb
sbb
pop
fcoml
cwtl
pop
mov
jne
pop
and
enter
and
out
idivb
xchg
stos
sti
mov
mov
aaa
movsl
mov
loope
out
cmp
stos
jmp
push
cmp
inc
adc
fisttpl
mov
cmp
stc
sbb
sbb
xchg
and
add
adc
lret
mov
outsb
push
add
or
fwait
pop
pop
imul
mov
pop
or
adc
sub
pop
inc
mov
stos
or
loope
in
and
jo
jmp
fwait
sub
mov
sti
mov
xor
and
xchg
mov
mov
push
and
shll
popaw
rcr
out
call
cli
xor
clc
fs
fcomp
or
add
pop
js
inc
mov
inc
and
jo
fisttps
les
lcall
sub
inc
sbb
pop
push
fucomip
push
jmp
lds
sub
ret
pop
pop
ret
inc
insb
dec
test
xchg
jle
daa
cmp
jb
sahf
adc
fldt
add
stc
repz
dec
in
xchg
lret
adc
mov
xchg
add
sbb
dec
sbb
icebp
cmp
push
jo
rorb
int3
movsl
push
cli
xor
notb
sbb
loop
inc
pop
pop
in
aad
xor
pop
testl
mov
stc
sbb
sbb
mov
testl
dec
jbe
into
mov
in
rclb
xor
sub
mov
test
mov
adc
adc
sbb
addb
lea
mov
xor
pop
dec
add
sahf
lea
iret
xorl
dec
int3
pop
jp
cmp
jae
or
mov
subb
mov
test
jg
js
inc
adc
sub
in
jno
popf
mov
es
pop
or
loop
mov
xchg
dec
dec
xchg
into
fs
jbe
cli
sbb
test
imul
fisttps
pusha
inc
mov
pop
sbb
pop
stc
xchg
push
dec
test
addl
cld
cmpsl
call
or
or
pop
or
adc
aaa
int
push
xchg
stc
sbb
int
push
xchg
stos
push
mov
gs
sbb
inc
add
jle
int
dec
mov
outsb
jle
insl
jmp
add
xor
push
xchg
in
or
xchg
repnz
hlt
pop
imul
inc
sbb
jecxz
ficoml
or
out
scas
daa
mov
data16
cmpsl
sbb
dec
popf
imul
dec
mov
sbbl
mov
push
repz
add
push
or
jge
jo
bound
test
cmp
dec
in
enter
jnp
mov
add
cmp
pusha
movsl
out
sub
cmpsb
xchg
shl
loope
cmp
sbb
mov
fdivl
add
pop
lods
mov
out
movsb
stos
push
cli
mov
xchg
or
sub
fsubrl
jnp
mov
lock
mov
lods
cmp
cltd
dec
xchg
inc
xor
jo
mov
cmp
adc
jo
mov
daa
out
add
mov
lret
inc
addr16
pop
es
cmp
shlb
mov
pop
mov
into
mov
sub
scas
aas
jmp
sub
lock
das
adc
mov
inc
loope
jnp
scas
pushf
xor
push
aad
xchg
jns
xchg
fwait
in
test
scas
xor
sub
stos
and
dec
leave
ja
dec
out
aas
out
cld
mov
into
lods
sbb
xor
xchg
in
xor
outsb
pop
arpl
sub
mov
bound
shrl
inc
loope
cmp
push
add
loop
mov
cmp
icebp
jg
mov
hlt
out
cmp
sbb
pop
lcall
and
push
sbb
jle
xchg
je
cmpsl
inc
pusha
xchg
cs
or
stc
pop
out
mov
pop
in
pop
cld
aaa
aad
repz
adc
cld
iret
test
adc
lahf
push
stos
push
fwait
clc
lret
int
sti
lahf
xchg
icebp
mov
sbb
sbbb
aam
test
int
jno
jg
sbb
ret
xchg
mov
movsl
in
and
pop
inc
and
mov
imul
stos
addr16
lock
aad
mov
sub
in
push
xor
jecxz
in
in
lock
sbb
inc
subb
jb
mov
adc
imul
shll
out
push
jg
les
stos
jp
mov
or
push
fs
pop
mov
xorl
insl
sbb
inc
test
jb
andl
push
movsb
sbb
inc
call
adc
xlat
or
add
insb
adc
mov
nop
and
adc
lcall
jmp
in
mov
test
mov
les
cmp
inc
xchg
idivb
push
mov
aad
in
popf
adc
rcl
aas
mov
lea
loop
repz
cmp
repnz
shll
inc
inc
cmpsl
jnp
xchg
aas
sbb
rcr
push
inc
push
mov
mov
pop
daa
pusha
jns
or
jmp
ficomps
fwait
aaa
or
inc
lret
xor
fucom
mov
xlat
into
scas
mov
sarb
in
iret
dec
hlt
iret
fwait
cld
sbb
push
cmp
hlt
nop
jno
xchg
lds
sub
subb
dec
jmp
popf
ffreep
dec
fdivl
push
mov
icebp
fsubrl
pop
lahf
mov
lahf
iret
out
mov
test
shrb
aad
sar
rcl
lea
pushf
pop
cli
push
xchg
mov
ljmp
shrb
pusha
repnz
fnstenv
rorb
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
