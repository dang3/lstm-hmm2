sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
push
push
call
mov
mov
add
mov
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
rol
or
mov
inc
push
or
aaa
out
mov
or
int3
dec
ficomps
movsl
out
pop
xchg
std
lret
jns
loope
scas
imul
mov
push
mov
cltd
cmc
loopne
mov
test
test
mov
loope
dec
add
int3
int3
or
mov
or
out
imul
jbe
imull
icebp
jp
test
inc
mov
mov
leave
or
push
and
xor
test
sub
sub
fwait
loopne
xchg
and
test
jecxz
sarb
filds
testb
inc
sbb
into
call
adc
jbe
mov
mov
xchg
mov
sub
nop
fistps
aam
or
call
rcll
and
xor
sti
addr16
sbb
and
push
and
cmp
jp
mov
clc
loop
pop
jbe
rcr
je
repz
cmpsb
cmp
bound
mov
loop
and
stos
gs
ja
jmp
sbb
xchg
fwait
cmp
orl
bound
dec
dec
and
in
addb
xor
lock
shrb
loope
lds
jns
mov
inc
loopne
inc
testl
popf
push
imul
cmp
sub
or
and
jne
cmp
sbb
cmp
movsb
mov
aas
xchg
cmp
lsl
mov
out
push
adc
cmpl
daa
js
fildl
and
cmpsb
lods
jbe
mov
rorl
es
add
and
cmc
inc
and
sub
xor
pop
mov
cmp
xlat
or
fsubs
push
mov
popa
ret
cld
std
hlt
mov
push
pop
pop
rorl
xchg
xchg
fiadds
cmpsb
mov
cmpsb
outsl
pop
mov
clc
aad
test
inc
mov
mov
jmp
fcomps
xchg
and
rcll
jp
xchg
loope
mov
push
cmp
dec
dec
add
call
mov
in
sub
mov
push
call
push
mov
adc
aas
lea
popl
movsl
inc
pushf
fistps
fwait
xor
add
add
int3
ds
jo
lret
test
std
xchg
lret
std
mov
sahf
jne
add
mov
ljmp
dec
cmp
sbb
stc
sub
gs
out
pop
jl
or
cmc
js
pop
outsb
cmpsb
and
outsb
imul
and
cmp
mov
lods
loop
inc
mov
add
imul
xchg
push
jecxz
and
andb
das
sub
std
mov
rcrb
enter
lock
cwtl
xor
stc
iret
xchg
jb
cmp
pop
andb
add
mov
pop
xor
fwait
sbb
add
pushf
jl
xor
gs
xlat
les
adc
sbb
cwtl
mov
cltd
inc
pop
dec
adc
pop
dec
cmpb
sbb
mov
pusha
cmp
mov
dec
in
inc
cwtl
lods
sub
xchg
sbb
add
fs
sbbb
add
mov
push
mov
shlb
pop
popf
mov
mov
vmovdqu
lret
loope
and
mov
loopne
scas
adc
pusha
pop
or
xchg
jge
cmpsl
pand
sti
das
lret
mov
mov
mov
les
inc
pop
call
pop
inc
jmp
pop
mov
push
adc
aam
cmc
out
dec
sbb
adc
shll
movsl
enter
shlb
imulb
mov
into
mov
sub
push
sub
fsubp
loop
push
cmc
xor
pop
bound
lcall
sub
ljmp
test
push
cmpsb
jbe
mov
adc
sbb
inc
mov
leave
clc
and
in
add
xor
mul
and
pop
cmp
dec
ljmp
subl
jnp
xchg
cltd
aas
cmp
inc
jns
mov
enter
inc
or
push
fisttpll
adc
xor
push
inc
test
lret
cwtl
sub
enter
js
cmc
push
xchg
sbb
scas
xor
shl
jecxz
pop
xchg
add
xlat
daa
fmulp
xchg
dec
test
xchg
scas
sbb
xor
aas
mov
push
push
mov
mov
iret
lcall
adc
pop
mov
icebp
or
mov
in
and
push
imul
lock
mov
push
shll
shlb
ret
xchg
cwtl
push
lahf
imul
dec
dec
and
jle
inc
mov
shrb
lock
lods
fldcw
aad
dec
mov
and
lds
lret
imul
cmp
lds
and
rcrb
cmp
in
or
mov
rcrb
repz
mov
or
insb
cmp
push
mov
pusha
ret
aam
test
dec
adc
mov
xchg
mov
mov
mov
xchg
stos
or
cmpsb
push
in
insb
inc
push
lret
and
push
jge
push
fsub
mov
in
gs
mov
sahf
adcb
stos
adcl
ja
push
push
movl
mov
imull
or
in
dec
push
jl
cs
lock
je
push
mov
fldt
inc
push
inc
pop
lock
int
jne
adc
ret
in
lcall
inc
sub
dec
iret
rclb
lret
rorl
mov
lea
nop
add
mov
inc
inc
xchg
jge
mov
or
mov
push
sbb
dec
ret
or
icebp
sbb
add
movl
roll
xchg
dec
in
xlat
pop
aaa
aam
lock
scas
fsubr
into
mov
cmp
popa
imul
and
addr16
js
shl
mov
mov
mov
cmpb
jne
stc
xchg
add
cmp
cmp
fistl
ss
fwait
and
inc
add
cmpl
rorb
loop
out
gs
and
mov
idiv
es
or
lods
add
out
hlt
jo
dec
or
lock
mov
out
inc
xor
sbb
adc
push
not
mov
insb
jae
sub
pop
dec
mov
fdivs
cmp
repnz
push
mov
adc
add
iret
fwait
mov
mov
xchg
test
xorb
sub
ffree
aam
or
push
dec
xor
out
sbb
leave
mov
insb
dec
cmp
mov
shl
xor
mov
add
mov
ds
mov
leave
test
jbe
xchg
and
mov
shll
jne
xchg
push
adc
inc
jbe
in
insb
iret
stos
dec
inc
xorb
add
ds
xor
std
shlb
pop
repz
ret
ret
dec
pop
je
mov
ds
push
fisubrl
adc
das
dec
jl
sub
or
dec
mov
cmp
sahf
repz
jno
es
and
add
shll
imul
pop
sarl
fnstenv
outsb
pop
xorb
call
popf
or
sbb
mov
jns
mov
in
pop
xchg
dec
push
mov
mov
xor
jle
push
xchg
push
cwtl
lret
xchg
loop
insb
push
pop
ja
add
movsl
cmp
xor
pop
shlb
xor
iret
or
or
push
jno
xchg
mov
lods
sub
adc
jno
xchg
inc
lcall
loop
and
repnz
sbb
xor
movsb
jb
popf
or
jno
les
pop
xchg
test
mov
push
adc
gs
jge
push
mov
add
ljmp
fcmovb
push
sbb
movsb
push
jns
gs
loopne
push
jae
jp
test
dec
imul
int3
xchg
test
xor
jb
in
xor
mov
adc
and
jl
in
cmpsb
pop
xabort
xchg
int
shlb
xor
iret
gs
push
cmp
fidivrl
loop
mov
movl
ret
mov
add
inc
dec
push
es
mov
jle
lods
call
pop
cmpsb
iret
xchg
rolb
push
aaa
inc
pop
aam
fwait
gs
inc
xor
ret
cmpsl
cmp
xor
sub
pop
in
ret
push
lods
xor
pop
nop
cs
gs
fbstp
mov
fisttps
inc
or
lcall
idivb
jmp
mov
pop
dec
xchg
enter
jns
mov
enter
movsl
jg
fcomp
pusha
cmp
jle
adc
mov
push
stos
jns
test
jg
call
loope
aaa
into
mov
dec
outsl
call
xchg
xchg
pop
push
sub
jmp
fiadds
fnstsw
addl
adc
sbb
rcr
sub
push
fldt
je
call
and
dec
jg
pop
and
nop
movsb
lahf
lock
fs
sbb
add
loopne
sub
sbb
pop
xchg
mov
les
xor
fnstcw
cli
sub
popa
subl
pop
insb
lahf
mulb
xchg
dec
cmpl
mov
inc
inc
mov
test
jp
sbb
xchg
jle
fldcw
mov
xchg
xor
xor
test
insl
or
aas
xchg
jo
cld
pop
cmpsb
ljmp
sbb
adc
xchg
push
int3
out
repz
mov
inc
in
test
jmp
ret
rclb
ret
mov
xchg
dec
pop
sti
loop
and
xchg
push
mov
adc
daa
add
or
call
fadds
or
data16
sub
dec
daa
mov
stos
pop
pop
jo
testb
add
es
fadds
je
adcb
idiv
les
loopne
jae
cmp
fdivp
nop
sbb
call
pop
test
repnz
loop
xchg
movsb
dec
push
shlb
and
sbb
lret
ret
mov
das
in
sub
fwait
xor
dec
pop
insb
mov
in
sbb
pop
lret
les
jae
lea
xchg
outsb
and
fadds
sub
push
imul
mov
mov
pushf
push
shlb
mov
hlt
jp
mov
ret
mov
stc
add
cmpsb
popa
fimuls
pop
mov
pop
xchg
sub
mov
dec
jo
mulb
jnp
sbbb
push
stos
loopne
cmpsb
add
mov
xchg
into
jno
cmp
arpl
jne
fldcw
jnp
or
mov
fnstenv
adc
je
or
and
mov
mov
int3
or
push
add
negl
sub
or
push
jne
dec
addr16
dec
imulb
lret
add
test
les
pop
cltd
pop
mov
int
insl
xchg
scas
pusha
jo
mov
cmp
popa
sub
cmp
nop
jecxz
in
sbb
and
scas
nop
dec
aad
fiadds
daa
jle
aaa
das
mov
pusha
je
rclb
push
aas
jns
push
je
in
push
int
enter
clc
lret
inc
add
pushf
rclb
ja
fstpt
adc
je
fisttpl
fldcw
jns
test
ss
icebp
clc
and
mov
add
xchg
mov
fsts
enter
lea
hlt
int3
and
inc
test
inc
fldenv
cmp
or
fiaddl
pop
addl
xchg
mov
lods
cmpsb
bnd
mov
mov
pop
rcll
scas
mov
sbb
test
in
or
lret
jno
out
test
dec
inc
mov
cmp
or
mov
push
cmp
aas
lret
jo
fbld
test
sbb
jb
mov
jmp
je
pop
lret
aad
push
jbe
pop
cmp
aas
imulb
adc
pop
lds
pop
mov
gs
and
sub
jmp
pop
push
pop
lret
mov
pusha
dec
pop
pop
cmc
pminsw
push
gs
adcl
test
fldenv
dec
shrl
push
jo
push
icebp
pop
or
add
add
mov
es
mov
adc
addl
out
cmpsb
rclb
shlb
scas
pop
jl
dec
lahf
sub
jnp
mov
flds
jo
in
push
adc
imul
dec
mov
fwait
xor
int
sti
shl
add
outsl
ja
adc
push
in
cmpsb
mov
out
pop
out
mov
popf
addr16
lds
add
xor
adc
repnz
ss
cmp
inc
push
add
jnp
ss
iret
fdivrs
js
sahf
aam
jp
js
insl
pop
or
mov
jge
lds
out
mov
and
jmp
movsb
jle
lcall
rorl
pop
lds
jmp
test
inc
addr16
add
mov
mov
mov
sbb
daa
dec
nop
ficomps
cmp
dec
sahf
pop
dec
and
int3
cmp
pop
jecxz
push
dec
jecxz
das
xor
adc
dec
aas
adc
enter
push
rcr
and
andl
lea
jp
mov
test
hlt
xlat
inc
mov
xchg
lods
adc
xchg
dec
pop
mov
sub
push
sub
outsb
xchg
or
xchg
fisttps
adc
clc
cmp
addr16
push
cmpsl
lock
or
std
aas
ss
cld
jae
call
add
nop
loopne
jle
cmc
push
aam
aas
xchg
scas
cmpl
and
test
push
repz
fcomps
out
jg
dec
pop
inc
mov
shlb
ret
lret
inc
not
fwait
inc
mov
loop
push
mov
xor
xchg
fldcw
out
xchg
xchg
mov
lret
clc
jns
push
sbb
loope
dec
jo
aad
cmp
lret
push
test
jns
enter
arpl
push
inc
icebp
xchg
adc
mov
lahf
and
inc
fadd
repnz
movsb
or
xchg
jo
push
pop
rclb
out
cmp
into
jmp
mov
sbb
hlt
inc
dec
sub
dec
mov
pop
icebp
pop
jg
icebp
jnp
cmc
dec
loopne
mov
rol
pop
mov
dec
lahf
nop
je
ja
leave
mov
dec
or
push
test
mov
xchg
xor
stos
int3
scas
pop
shll
loop
outsl
mov
sbb
enter
xchg
pushf
push
pop
jle
aam
push
icebp
add
ds
jns
push
mov
out
fadds
lcall
popa
out
mov
mov
shlb
jmp
iret
scas
xchg
add
lods
imul
aas
add
jne
ror
xor
out
mov
fsubs
dec
and
stos
pusha
mov
aaa
es
xor
adc
aam
mov
sub
mov
mov
mov
loope
xor
cmp
lds
push
jg
cwtl
mov
les
fcom
shr
cmp
imul
mov
add
aad
and
icebp
in
stos
xchg
sbbl
aad
sub
and
fs
les
push
and
dec
jae
jge
xor
icebp
jae
sti
xsha1
cmpsb
dec
push
cmc
dec
jmp
push
repz
push
push
inc
bound
xlat
stos
pop
mov
inc
jge
and
mov
mov
xchg
pop
arpl
adc
xchg
vshufpd
dec
aas
cmp
movsb
or
mul
imul
repz
xchg
leave
inc
or
and
test
movsb
enter
aad
dec
in
xor
jne
mov
sar
in
call
shr
push
fldt
rcll
mov
test
bnd
daa
mov
cltd
mov
test
dec
test
imul
aam
adc
adcb
inc
clc
clc
arpl
sub
rcrb
orl
pop
ror
mov
std
jmp
cmp
push
movsl
xorl
xor
lret
rorb
fdivrl
dec
xchg
add
shr
movsb
dec
divb
inc
xchg
sahf
sbb
out
cs
adc
loopne
dec
out
aam
xor
add
ds
mov
push
sbb
pop
lods
add
lcall
jg
fcoms
jmp
dec
std
xlat
push
es
ret
enter
cmp
xorl
sub
loope
jnp
add
loopne
sar
xor
test
clc
in
movsb
inc
jne
push
loope
fmulp
push
jmp
mov
test
popa
shlb
add
inc
imul
mov
add
sti
cmp
fmulp
dec
jne
adc
fwait
std
adc
ds
into
es
add
adc
mov
mov
out
xlat
lds
ficomps
push
cmp
movsb
je
lods
ret
cmp
out
and
loop
out
jp
add
daa
cltd
scas
add
dec
ret
jo
pop
nop
mov
push
sbb
stc
icebp
outsl
mov
ret
pop
lea
outsb
push
lods
xor
or
shr
and
and
aas
rcl
nop
test
xchg
push
add
pop
dec
sub
mov
in
mov
scas
fiaddl
xor
mov
lds
mov
aaa
aaa
and
rorl
sub
aas
stc
pop
jne
aas
inc
stos
mov
test
movsb
jae
and
inc
cmp
cmp
shll
sbb
outsb
and
cmp
stc
stc
into
dec
fstps
fsubl
ret
and
das
mov
xor
shl
stc
enter
idiv
jle
es
mov
sbb
rclb
dec
shl
ss
in
pop
jae
adc
in
mov
test
jp
or
imul
out
or
in
or
adc
incl
pop
sub
outsb
les
push
ret
xchg
lahf
jp
sbb
push
enter
outsb
call
insl
cmpsb
xchg
dec
aam
mov
je
or
pop
filds
push
pop
test
or
inc
and
lahf
stc
je
mov
pop
and
push
add
andl
add
mov
push
dec
les
or
es
inc
sbb
int3
xlat
sub
xchg
rolb
and
mov
lret
sbb
mov
xchg
cmp
divb
mov
mov
jl
cwtl
mov
sbb
frstor
lods
mov
inc
add
fldt
dec
pop
push
xor
icebp
mov
fdivrs
sub
call
dec
outsl
das
pop
dec
negb
daa
pop
cmpsb
into
test
jbe
subl
mov
push
jae
inc
jp
js
push
inc
rcrl
sarb
mov
pop
dec
push
nop
sbb
cmp
xchg
lret
cmp
push
dec
cmp
inc
add
mov
shlb
jmp
test
insl
fidivs
or
aad
nop
cli
test
sub
add
jl
stos
dec
or
mov
mov
popa
loop
jb
sub
xorl
fs
enter
push
adc
adc
scas
xor
jmp
inc
hlt
call
loop
sbb
inc
push
bound
cli
out
sbb
ljmp
ljmp
add
cmp
jge
das
sbb
test
push
push
mov
movhps
out
out
xchg
jge
pusha
outsb
es
dec
hlt
or
cmp
mov
push
idivl
shrb
sub
sbb
adc
pop
cmp
adc
shlb
or
pusha
in
cmc
movsl
das
dec
jp
add
cli
jecxz
inc
inc
int3
adc
jb
in
xchg
or
lock
clc
sbb
or
arpl
dec
push
push
mov
outsb
push
fwait
movsb
xor
aas
cli
fcompl
xchg
bound
aam
out
or
or
ret
cmpsb
mov
push
adc
lahf
test
out
arpl
aad
jb
arpl
cld
jne
lods
adc
push
fsubr
adc
lods
sub
rclb
dec
test
ja
sub
clc
mov
das
add
imul
test
cmp
xor
adc
push
mov
test
lods
iret
bound
stc
xchg
cwtl
sbb
shl
out
daa
adc
cmc
fs
pushf
push
rcl
mov
leave
xchg
or
xchg
jle
sar
ljmp
xchg
or
mov
in
in
ljmp
push
popa
push
cltd
cmpl
mov
lea
push
jge
push
imul
lods
or
mov
cmpsb
mov
lahf
inc
pop
out
cli
cmpb
xor
jg
jge
hlt
xchg
mov
sub
jle
js
std
testb
jae
cmp
dec
dec
push
push
rolb
ss
mov
movsl
fsubs
into
push
inc
ss
imul
add
fnstenv
clc
outsl
mull
in
das
jno
mov
fs
push
jbe
dec
idivb
mov
pop
inc
lret
jb
shll
lods
jmp
add
loop
sbb
clc
icebp
inc
adc
pop
dec
in
sub
imul
cmp
int3
icebp
daa
test
leave
hlt
push
into
jmp
push
scas
push
jae
jo
fs
fistl
jne
pop
mov
insb
test
mov
lcall
aam
icebp
dec
in
aad
pop
stos
in
mov
cwtl
mov
mov
test
inc
sbb
pop
in
shlb
xor
mov
mov
loopne
inc
jmp
cs
sbb
insl
push
pop
xchg
mov
mov
pushf
aas
inc
dec
lcall
jo
xchg
cmpsl
push
les
add
in
sahf
lret
cmpsl
pop
jp
lret
ss
xlat
sbb
inc
mov
push
addr16
int3
aas
mov
data16
inc
loope
pop
repz
sub
dec
pop
mov
cwtl
inc
cmc
shlb
sub
packsswb
aad
add
adc
dec
dec
or
push
push
call
test
add
pop
jle
cs
xor
cmp
test
push
cmpsb
subb
pushf
fcoml
mov
jle
adc
sub
xor
pushf
sub
insb
sub
add
mov
mov
arpl
fstl
fstpl
fnstsw
stos
data16
scas
xchg
inc
aam
sbb
fmull
pop
add
fs
cmp
xchg
xor
xchg
sbb
outsl
nopl
or
adc
dec
in
ja
add
xchg
dec
ds
rcrl
test
push
cmp
outsl
ret
fisubs
push
push
adc
lods
inc
div
xchg
jle
fwait
repnz
imulb
inc
aad
iret
iret
imul
push
into
xchg
mov
sbb
sbb
push
enter
cmpsb
mov
mov
push
insb
ss
pop
mov
xchg
ja
mov
adc
xorb
mov
jnp
inc
data16
cld
cmpsb
fnstenv
or
pop
rorb
loop
mov
xor
xchg
stc
fnstenv
in
clc
xlat
addb
pop
push
cwtl
int
xlat
mov
and
adc
in
mov
mov
test
jg
aas
test
mov
inc
rclb
fnstsw
pushf
push
ljmp
mov
out
jae
int3
mov
scas
dec
sub
fcoml
cmp
fs
mov
test
popf
out
pop
push
mov
movsl
aaa
mov
and
mov
add
dec
sbb
out
gs
cmc
adc
push
or
ficoml
jmp
ljmp
fs
out
sbb
xchg
inc
inc
cmp
sbb
sahf
push
xchg
cmpb
push
jb
xchg
in
jg
movq
das
gs
inc
divb
jne
sub
cmpsb
xor
es
lods
jnp
enter
insb
insl
sub
dec
xchg
mov
sahf
scas
push
repnz
scas
and
in
jg
cmp
push
iret
dec
cwtl
ret
lods
in
fmul
dec
sarb
sub
rolb
inc
leave
mov
aad
sub
stos
adc
mov
jmp
cmp
int
jl
jg
and
push
inc
cmp
loope
test
pop
sub
cld
adc
ljmp
cmp
call
cmovne
pusha
mov
or
mul
fs
ficoms
lock
popf
js
dec
enter
cmp
push
cltd
mov
icebp
sti
and
daa
inc
pop
cmp
out
dec
insl
mov
and
and
inc
in
jle
xchg
cmpsb
jnp
sub
pop
mov
mov
js
jbe
in
jnp
outsl
sbb
lods
lock
ss
mov
jnp
lret
mov
cmp
rcl
xchg
xor
pop
cmc
mov
dec
pushf
mov
pop
es
leave
xchg
pop
xchg
pop
ja
jbe
icebp
jge
xchg
cmp
and
xchg
test
enter
icebp
mov
mov
xchg
repnz
xchg
ret
mov
xor
fdivp
rclb
movsb
imull
in
mov
divb
push
cwtl
lret
or
sbb
inc
ret
dec
dec
loope
clc
mov
or
mov
negl
mov
sub
jecxz
xor
cli
pusha
jns
add
fmuls
pop
push
test
mov
jge
test
imul
iret
fwait
aad
jmp
bnd
in
iret
cmp
bswap
jp
out
cmp
push
xchg
decl
inc
cltd
test
sub
push
ljmp
aad
or
imul
add
mov
stos
push
je
test
jne
cltd
shlb
jmp
jmp
sub
lahf
pusha
dec
mov
jp
jnp
and
lea
in
outsl
xchg
jno
jo
fmul
fldt
push
xor
pop
cmc
push
xchg
aas
subb
and
sahf
mov
popa
arpl
xlat
adc
sbb
test
or
xor
sbb
adc
je
ds
cmp
mov
rcll
sbb
filds
jns
and
and
les
add
je
cmpsl
add
ret
or
dec
js
and
bound
cmp
inc
rolb
inc
test
xor
cmpsb
or
pop
pop
sub
xor
into
cltd
cmp
leave
mov
sub
aas
gs
arpl
push
fwait
nop
pop
and
cld
or
movsl
ljmp
std
test
inc
push
mov
shrl
jnp
test
mov
jo
lahf
movsl
xchg
push
inc
sub
push
pusha
jp
inc
sbb
addr16
add
jecxz
dec
sti
hlt
test
sub
fcmovne
shll
sbb
lahf
aaa
adc
push
sarl
mov
mov
mov
fldcw
pop
popa
or
and
testl
imul
dec
ficoms
xchg
fcmovbe
mov
jbe
push
cs
lret
fnstcw
push
pop
fiadds
cmp
xchg
aaa
cld
loop,pt
pop
sbb
inc
add
push
scas
mov
mov
shll
in
push
dec
test
gs
into
xlat
push
pop
cli
jmp
mov
dec
out
pop
mov
inc
insl
mov
dec
hlt
aas
fwait
xchg
add
scas
aaa
jle
jmp
push
xor
dec
or
xchg
stos
punpcklwd
sysenter
inc
jns
cmp
pop
adc
loope
test
dec
lods
mov
lret
pop
fisttps
or
push
jle
insb
mov
movsb
push
adc
mov
inc
xchg
mov
pop
add
loop
hlt
repz
js
sbb
cmp
cld
xchg
push
in
out
out
pop
mov
or
fisttpl
lods
inc
jbe
inc
js
mov
addr16
mov
cwtl
shrl
data16
add
mov
aad
lret
push
out
ss
lret
push
test
xchg
push
cmp
das
or
adc
push
push
dec
arpl
push
lret
xorl
lcall
adc
clc
ja
cmp
js
test
andb
pop
cmp
pop
insl
leave
push
dec
lods
sbb
jae
jb
inc
adc
push
pusha
inc
shl
jecxz
and
in
imul
ret
mov
add
xor
xchg
mov
push
shlb
sub
push
xor
push
ja
movsb
add
sub
clc
adc
mov
mov
out
js
jae
cmp
aad
pop
testl
sti
ss
xor
pop
jp
icebp
push
sbb
lods
sub
mov
mov
pop
shlb
sub
out
fidivs
or
cmp
stc
je
sbb
mov
dec
add
fistl
arpl
data16
lret
push
add
mov
test
adc
data16
decb
dec
dec
test
jl
cmp
mov
and
mov
add
es
in
shl
fsts
pop
xor
fwait
outsb
push
lcall
jge
fcomps
mov
push
or
fstps
jge
jmp
clc
pop
int3
pop
mov
mov
enter
sbb
incb
stc
xor
addl
int3
adc
xlat
dec
sti
push
mov
dec
and
xchg
loopne
jg
dec
iret
pop
out
xlat
pop
nop
adc
out
push
push
popa
outsb
jbe
xchg
lea
sub
ret
addr16
mov
sbb
lods
lcall
jl
cwtl
or
sbb
stos
pop
or
je
lcall
test
inc
repnz
xchg
lds
add
cld
dec
or
outsl
repz
inc
idiv
push
movsl
pop
sbb
insl
int
mov
cmp
or
stos
push
popf
inc
fwait
jecxz
jnp
cmp
and
add
cmp
stc
fsubl
cwtl
mov
mov
push
xor
stos
add
insb
scas
add
adc
in
xchg
inc
or
nop
or
jo
or
pop
add
rcrl
aad
ds
jae
adc
xchg
in
pop
dec
mov
dec
fs
enter
push
rol
aam
jo
out
jp
add
ds
inc
push
push
pop
dec
aaa
cmp
jo
sbb
add
xor
mov
ljmp
adc
stos
pop
ss
xchg
ljmp
lea
in
dec
jg
rclb
sahf
loopne
cmpsb
cmp
mov
ret
jmp
push
push
loopne
mov
pushf
stos
cli
and
adc
out
push
push
imul
out
out
dec
pop
lcall
mov
mov
sub
ljmp
and
and
and
out
xchg
add
xchg
mov
nop
mov
rcll
pop
sbb
les
arpl
aam
test
and
divl
iretw
call
jmp
das
and
push
push
cmp
mov
mov
roll
sub
arpl
jg
cmp
mov
test
aas
test
lcall
insl
lahf
aaa
xchg
inc
mov
add
xor
adc
mov
andl
xlat
jnp
and
cmp
adc
dec
mov
popa
sub
lret
and
mov
scas
cmpsl
inc
mov
jp
pop
repz
inc
mov
cwtl
sbb
cli
sbb
cld
fadd
movsl
aam
pop
cmpl
xchg
pushl
popl
ja
jnp
xchg
in
adc
icebp
xchg
dec
stos
pop
icebp
mov
xor
mov
adc
es
jo
insl
mov
adc
int
dec
add
scas
pusha
stos
rorb
mov
jmp
push
ret
aam
jo
add
xor
or
push
addb
ror
push
rolb
sub
call
cli
mov
fistpl
test
in
push
lock
daa
dec
imul
popf
push
cs
popa
imul
and
add
comiss
sbb
mov
jmp
inc
call
cmc
fildll
jnp
mov
pop
cmp
test
adc
pop
push
inc
fisubl
fcomp
inc
rcrl
les
xchg
aam
dec
pop
js
cmpsl
rclb
inc
push
cltd
or
loope
xor
out
test
out
add
push
xor
test
fs
sahf
sub
mov
mov
pop
scas
js
aaa
pop
loopne
shll
jmp
push
xchg
fisubrl
jecxz
mov
and
faddl
rcl
arpl
mov
ds
jo
xchg
jb
inc
mov
in
push
cltd
sbb
sbb
and
inc
sbb
cwtl
out
mov
fldl
sub
and
cmpsl
cmp
push
and
mov
test
cmpsl
ret
jns
stc
cmp
sti
repz
fcomps
test
bound
inc
cltd
xor
mov
mov
push
js
dec
dec
popf
xchg
rorb
adc
xchg
nop
add
mov
lock
or
cmpsb
and
pushf
fdivp
sbb
movq
push
pop
or
out
jp
mov
fs
add
sahf
sub
push
pop
push
mov
xchg
mov
pop
pop
push
xchg
mov
std
stos
ja
mov
push
xchg
lret
fsubl
in
fwait
test
sbb
and
sub
addr16
push
jge
xchg
or
add
cmc
push
mov
fnstcw
sbb
cmp
scas
scas
in
pop
and
inc
out
pop
push
mov
jne
lods
shll
leave
mov
sti
add
pushf
push
mov
jp
sub
enter
mov
mov
and
andl
xchg
aam
repz
inc
lret
pushl
inc
nop
shrb
outsb
cmpsl
shlb
jmp
jmp
negb
addb
fidivl
xchg
jecxz
cs
push
mov
popl
inc
jmp
xchg
fwait
mov
int3
xlat
jne
xlat
or
cltd
leave
xor
andps
push
ret
out
mov
scas
fdivrl
out
cmp
sub
mov
mov
es
shrb
sbb
push
adc
jmp
inc
jb
jp
les
inc
push
jl
cmp
add
and
inc
push
imul
in
js
jo
lds
ficomps
mov
fidivl
cltd
scas
jnp
or
stos
lods
cmp
and
decl
cmp
push
insl
mov
mov
scas
movhlps
mull
insb
xchg
outsl
lods
lock
inc
sub
clc
pushf
arpl
pop
and
or
xor
sub
cmp
pop
pop
daa
pop
fnsave
cmp
bound
pushf
xor
js
mov
rcrb
pushf
jmp
cmp
pop
pop
imul
push
subb
out
ficomps
xor
sub
adc
imul
dec
mov
mov
xchg
and
push
mov
out
shll
loopne
xchg
mov
jl
jno
lds
movsl
dec
repz
mov
es
sub
adc
roll
sub
out
fnstsw
xlat
js
push
mov
sub
decb
aas
add
imul
aaa
fldcw
mov
cltd
sbb
imul
push
mov
shrb
int3
repnz
inc
jge
fistps
push
setne
lret
scas
cli
stc
cltd
aam
pop
test
inc
and
xor
cmp
into
xor
addr16
lcall
scas
push
pop
and
not
cmpsl
es
nop
roll
push
xor
cmpsl
mov
stos
dec
fsubs
mov
adc
inc
or
mov
lahf
sbb
push
and
popf
subl
ds
lret
popa
xchg
jle
jecxz
add
in
and
adcl
fmuls
xlat
cltd
and
pop
add
add
sbb
add
daa
mov
inc
sub
add
mov
sub
pop
xor
mov
gs
push
or
daa
repnz
in
dec
pop
mov
mov
add
mov
sub
xchg
fnsave
inc
mov
test
mov
call
pop
mov
leave
or
and
pop
add
hlt
push
mov
mov
outsb
mov
push
out
mov
rcl
push
jg
lret
aaa
and
push
int3
rcrb
dec
es
out
loop
pusha
sbb
loop
jl
repnz
add
arpl
mov
mov
subl
rorb
js
sub
inc
cmp
pushf
fnsave
mov
cmc
stc
pop
enter
sbb
nop
sahf
fidivl
rorl
mov
xlat
pop
gs
sbb
cmp
xchg
mov
cltd
push
in
cmp
push
std
test
stc
repz
xchg
out
fidivs
push
mov
rorl
adc
jle
nop
sub
xchg
dec
movsl
cli
pushf
fmuls
cmp
xor
imul
push
mov
pop
and
xor
roll
jecxz
xor
popa
inc
test
fimull
es
cs
fnsave
mov
icebp
sbb
pusha
lods
push
mov
mov
jae
mov
jns
mov
push
jns
add
lcall
popa
in
daa
inc
pop
mov
in
lods
or
int3
fstpt
repz
fsubrp
push
pop
push
push
inc
outsb
icebp
fimuls
notl
into
cmp
insl
pusha
test
dec
fcoms
cmpsb
cmp
test
xchg
arpl
jae
cltd
mov
sub
gs
loope
lods
int3
fdivs
push
or
or
jo
mov
mov
mov
aad
sahf
adc
dec
mov
xor
js
add
test
adc
xor
push
mov
jg
xor
ss
cmpl
lret
jo
test
stc
and
mov
mov
inc
or
fadds
push
fcmovu
mov
mov
dec
cmp
out
bound
mov
sub
out
repz
add
into
popa
iretw
mov
ss
sbb
lahf
dec
and
pusha
aaa
push
cwtl
mov
lcall
das
pop
mov
inc
lea
sub
popf
add
ds
or
xor
ja
je
icebp
rol
xor
popf
push
je
cli
mov
mov
sbb
push
jecxz
repnz
dec
rcll
outsb
or
pop
inc
and
lea
sbb
mov
or
sbbl
flds
push
aas
in
in
xor
mov
in
fisttpl
push
fisubs
mov
mov
aaa
rcrl
leave
add
roll
inc
cltd
repz
pop
in
cs
push
es
aam
or
inc
sub
pop
cmpb
out
fldt
jns
in
pop
push
pop
and
push
and
push
jns
xchg
push
cmp
loop
popa
mov
jecxz
push
outsb
imul
jge
ss
cmp
orb
push
subl
sahf
out
sbbl
push
testl
inc
aam
inc
pop
testb
fbstp
lods
dec
icebp
test
pop
push
push
movsl
lret
xor
movsb
or
mov
lahf
and
loop
insb
add
nop
roll
xor
fisttps
cmc
clc
inc
lcall
test
mov
scas
add
jnp
in
mov
es
and
add
xor
xchg
mov
jns
push
stos
sbb
out
inc
stos
mov
fdivs
push
std
push
xchg
icebp
push
movsl
hlt
mov
mov
insl
or
sub
outsb
mov
push
mov
add
mov
repz
ljmp
jmp
into
lcall
out
cmp
push
mov
mov
push
push
xchg
jg
iret
into
push
outsb
add
sbb
scas
dec
inc
fsts
fldt
pop
lea
mov
test
popf
mov
lahf
in
sbb
daa
inc
pop
push
ja
xchg
stc
ret
and
andl
cmpsl
repnz
sbb
push
push
mov
loop
inc
push
insl
arpl
ljmp
xor
or
sarb
and
pop
mov
sar
push
xchg
lock
xor
outsb
bound
inc
mov
xor
push
cmc
pushf
stos
inc
cmp
cmp
mov
jp
loop
loope
cmpsl
andl
sbb
cli
adcl
mov
mov
cwtl
push
pop
aam
into
sarl
sbb
mov
add
xchg
mov
les
cmp
ds
pop
mov
sub
push
jp
or
pop
jecxz
aaa
std
ljmp
addr16
pop
mov
pop
orl
xor
jo,pt
ja
test
pushf
int
lods
out
ja
rcl
jb
adc
and
stos
orb
sbb
jnp
xor
cmpsb
popf
cwtl
fbld
jp
lock
fsubrs
xor
push
xorl
inc
sub
out
subb
mov
cmp
sub
push
adc
addb
shrb
mov
xchg
fs
mov
add
xchg
mov
or
mov
sub
jae
shlb
repz
imul
jae
adc
sbb
mov
test
push
orl
mov
or
into
pop
mov
mov
and
xlat
pop
fs
or
jno
stc
lods
xchg
pop
push
fwait
xchg
fimuls
mov
dec
lret
shlb
dec
cmpb
enter
sahf
jg
mov
xchg
pop
popa
jl
adc
or
adc
mov
xchg
sti
sub
cmp
jne
dec
and
out
jbe
mov
gs
imul
mov
mov
xchg
mov
test
xchg
xlat
jns
test
ret
pop
xchg
daa
lea
sarl
xor
mov
jmp
jo
inc
fs
out
jbe
adc
gs
andl
imul
movsl
icebp
js
int3
mov
add
movsl
dec
inc
pushl
ficompl
fdivp
xor
ficomps
std
mov
or
cmpb
jbe
xorl
dec
sub
ljmp
lcall
lret
mov
mov
pop
dec
out
jb
xchg
inc
and
mov
int3
jg
cmpxchg
xchg
xchg
mov
push
mov
out
add
pop
inc
lret
dec
xchg
rcrl
sbb
test
lock
lds
mov
jl
push
ljmp
sti
imul
sbb
mov
xchg
add
jmp
and
push
cld
inc
jno
push
xchg
or
jbe
xchg
in
inc
mov
lret
data16
pushf
jmp
scas
cmp
adc
repnz
push
add
sub
sbb
pusha
and
mov
cli
add
push
xchg
push
cmp
addr16
jae
icebp
or
pop
lahf
fnop
ss
movsl
iret
adc
into
dec
fwait
pop
bound
mov
adcl
scas
push
hlt
mov
lret
movsl
xorl
lods
mov
sti
cltd
rcr
and
inc
and
test
repnz
into
cmp
rcr
stos
addr16
cmpsb
cmp
clc
enter
push
adc
sbb
xchg
loopne
test
test
add
aas
or
or
pop
sub
imull
fstpt
cwtl
lock
out
fsubs
push
inc
in
mov
gs
insl
xchg
mov
pop
je
into
dec
jne
nop
jge
xor
push
pop
call
xchg
cmpsl
lahf
fistps
push
cli
adc
sti
and
cmp
xor
ret
jle
add
fs
xor
stos
xor
sarl
pop
xchg
fcompl
and
imul
add
outsb
sahf
mov
cmp
in
data16
dec
ret
lock
mov
ds
mov
scas
jns
mov
gs
add
inc
subb
mul
into
stos
sahf
stc
pop
test
cmp
cwtl
mov
jbe
xchg
dec
sbb
ss
fbstp
loopne
bound
xchg
setl
dec
arpl
pop
mov
push
cmp
pop
and
scas
xchg
lods
dec
repnz
mov
mov
jmp
xchg
push
fstpt
jl
or
je
push
popf
pushf
hlt
jg
and
jo
xchg
sbb
mov
pop
fwait
rclb
sahf
cmp
data16
push
imul
cmp
rcll
pop
push
cmpsb
test
pop
shlb
fiadds
lds
xchg
mov
int3
or
xchg
imul
aaa
add
push
addr16
std
mov
aam
xor
movsb
leave
int
mov
out
dec
jnp
xchg
jmp
push
jl
jg
fsubs
sbb
cmp
rcll
idivb
sbb
cmp
push
push
cmp
rcrb
adc
inc
and
addl
outsl
dec
or
xor
int
out
ljmp
lods
cmpsl
rorb
cld
pop
push
out
dec
lods
insl
dec
jno
push
jno
pop
aad
loop
lret
sbbb
in
fucomp
iret
fldt
inc
movsb
pop
xchg
test
lods
push
scas
das
jecxz
mov
cmpsl
and
and
cmpsl
ljmp
das
sbb
mov
shrl
lock
mov
shll
dec
jo
cmc
ss
mov
mov
and
loope
jle
xor
out
adc
xchg
out
adc
lea
pop
mov
or
and
lcall
movsl
fcoms
push
cltd
dec
popf
loope
daa
aaa
dec
imul
ljmp
lcall
fistps
insl
mov
jle
push
cmp
in
or
jbe
mov
mov
mov
imul
and
aad
xchg
jmp
filds
or
ret
push
xchg
sub
and
mov
dec
adc
clc
ds
lret
mov
xor
ret
leave
add
fldenv
cli
and
xchg
pop
outsl
push
or
or
test
andl
mov
test
jmp
jo
repnz
rcr
daa
pop
cmpb
pop
xchg
subl
ret
add
aad
adcl
clc
add
neg
mov
add
or
sbb
inc
cmc
sbb
gs
pop
enter
cmp
cmc
scas
xchg
xchg
lock
push
xchg
xor
mov
call
xchg
pop
fcmovbe
mov
sarb
push
mov
ja
mov
add
ds
int3
add
in
adc
imul
test
dec
pop
mov
cld
adc
cmpsb
pop
cmp
pop
insl
dec
sub
sti
add
or
sbb
sub
push
int
mov
xchg
or
mov
stc
mov
xchg
in
daa
dec
insb
jbe
mov
shlb
pop
xchg
sbb
sub
cli
out
idivb
stos
adc
dec
fwait
jp
sub
mov
or
mov
pop
dec
push
das
vhaddpd
bound
outsb
decl
rcll
pop
sbb
adc
xor
test
test
in
inc
cmpsb
jl
aam
inc
adc
push
adc
cmp
mov
and
popa
push
into
test
int3
cmp
jmp
ja
push
mov
idivl
testb
hlt
lods
mov
nop
bound
dec
mov
mov
jo
sub
push
fwait
imul
or
jle
cmpl
insb
inc
dec
psrad
js
xchg
jg
test
test
pop
mov
adc
stos
dec
repz
int
js
je
loopne
add
andb
xchg
cwtl
aam
sbb
or
lods
cmpsl
divb
lret
push
ja
sbb
push
sahf
shrd
test
or
pop
xlat
fwait
sub
inc
mov
jns
dec
push
or
dec
ja
test
pop
mov
or
add
xchg
or
test
mov
out
jle
and
iret
add
shll
jge
push
push
lods
es
sbb
js
lods
lea
test
hlt
hlt
mov
jbe
sbb
jns
in
ror
loope
lahf
jne
lock
scas
stc
out
pop
arpl
test
cmpl
and
mov
xor
jge
rolb
imul
lods
out
xchg
push
testl
xchg
xchg
jne
sbb
add
and
rclb
add
pop
sub
add
rol
les
mov
popa
cmp
ja
call
cwtl
test
mov
sub
push
add
mov
rorl
iret
lret
imul
out
xchg
je
xlat
lss
outsb
xor
lcall
sbb
or
mov
std
popf
and
mov
test
fwait
jmp
in
mov
loopne
xlat
je
or
xchg
push
sub
stos
inc
add
std
xchg
and
repz
mov
sbb
or
mov
enter
mov
stos
pop
ja
xor
jo
lret
call
add
popa
insb
mov
outsl
xor
js
cmpsb
test
and
jmp
add
out
jo
push
jnp
xchg
andl
jp
mov
repnz
cli
inc
push
pop
xor
sbb
mov
sbb
out
inc
fidivl
pop
mov
jae
test
data16
lods
push
ret
mov
jmp
add
inc
sbb
imul
les
jno
xchg
inc
pop
icebp
dec
push
int3
jg
scas
cmp
cld
aad
cmpsb
fildll
addr16
xchg
inc
mov
fsts
jne
jae
and
pop
push
pop
in
fneni(8087
xor
mov
pushf
cs
dec
push
mov
xchg
sub
xchg
daa
shrl
mov
xchg
cmp
pop
mov
or
pop
pop
cli
pop
jo
cld
inc
push
adc
mov
add
xchg
push
jecxz
aas
mov
jecxz
jae
fstl
call
push
inc
xchg
cmc
pushf
dec
jmp
push
das
cmpl
inc
int3
je
lret
dec
mov
inc
push
jno
sub
pop
sqrtps
ficompl
loop
xlat
fldl
jg
cmp
sahf
sahf
adc
aad
inc
jg
mov
les
mov
and
jno
mov
add
ds
cmp
jg
imul
or
jle
rorb
sub
or
aam
sub
testl
call
mov
cmp
stc
lcall
cmp
add
push
clc
jns
lret
pusha
xchg
xlat
mov
test
sbb
insl
sbb
imul
movsb
lcall
adc
or
in
mov
subl
cmc
or
push
pop
push
hlt
sbbl
xchg
fdivs
and
xlat
push
jne
std
sarl
ffree
out
push
pop
cli
into
popf
lds
jnp
push
push
clc
jbe
pop
mov
mov
push
fisubrs
inc
lods
ja
mov
test
xchg
sub
xor
test
dec
mov
jge
outsb
xchg
cmpsb
lods
jae
inc
xor
aad
insl
xor
test
movsb
shl
inc
xchg
mov
subl
adc
pop
cmp
cmp
and
pop
dec
jne
fisubrs
pushf
or
sbb
js
aam
sub
xchg
imul
les
pop
jg
mov
enter
push
mov
addr16
mov
pop
shl
insl
sbb
incb
les
or
les
xor
cld
push
movsb
icebp
push
mov
push
xlat
add
ljmp
xor
and
sub
mov
pop
jae
pop
push
jmp
ja
jmp
jnp
mov
jg
mov
cld
adc
stos
insl
adc
fs
adc
dec
xchg
out
xchg
pop
pop
cs
bound
les
inc
daa
push
daa
or
outsb
std
add
mov
xchg
and
mov
mov
jmp
jno
add
mov
icebp
mov
jnp
dec
aam
out
sub
test
loope
push
sahf
pushf
gs
cmc
dec
push
rcll
inc
ret
outsl
aad
out
dec
cwtl
out
mov
imul
jl
inc
scas
mov
aas
lea
pop
push
xchg
sbb
xchg
lcall
out
ret
add
scas
pop
pop
jg
dec
inc
sbb
lcall
cmp
ss
inc
out
dec
mul
cmc
xor
scas
jl
pop
les
jbe
mov
cmp
je
test
pop
test
sbb
int
or
xchg
and
fs
out
jbe
mov
fcmovbe
dec
xor
inc
sbb
push
and
in
in
cmpsl
pop
punpckhwd
sbb
xchg
sub
jae
ficoms
xor
addr16
out
into
mov
jl
jmp
ss
les
or
dec
and
lea
sar
xor
stos
mov
xor
mov
sbb
mov
adc
and
addb
lea
jno
out
jp
sub
arpl
sub
fsts
cmp
xorb
and
dec
aas
icebp
cmpsl
push
xchg
sbb
data16
sub
sahf
push
into
lret
inc
jge
insb
sub
jecxz
xlat
sub
xchg
mov
add
shll
sbb
xchg
jge
and
mov
fcmovnu
adcl
inc
jb
mov
lods
inc
xchg
lds
jno
divl
stc
adc
mov
or
sbb
stos
lds
pop
sbb
pop
cli
dec
mov
pop
in
aam
ss
scas
and
rcrl
lret
test
push
jp
push
jae
xor
test
jle
push
shr
es
sbb
lea
push
shlb
add
push
fmuls
stos
cmpsb
mov
ja
stos
mov
pop
scas
ds
pop
popf
lret
inc
or
inc
sbb
pushf
pop
add
out
int3
xor
jae
mov
data16
lods
adc
push
sbb
pushf
mov
dec
inc
dec
jb
push
dec
lret
lock
pop
out
imul
xor
int
jno
mov
sbb
ret
and
std
das
and
pop
sub
and
cmpsl
push
inc
sub
in
xchg
cmpsb
addr16
sub
mov
or
jo
sub
jmp
sub
int3
pop
mov
jb
push
ljmp
or
or
shlb
stos
orb
fchs
xlat
xchg
ficomps
in
and
sti
cmp
fs
pushf
mov
push
insb
sbb
pop
test
out
sbb
dec
xchg
push
mov
dec
cltd
jae
movsl
and
ret
dec
xchg
adc
cs
nop
shrb
xchg
call
and
push
xchg
dec
popf
loopne
mov
push
mov
adcb
xor
lods
cld
dec
ljmp
aaa
loopne
movsb
xor
push
cmp
or
loop
jbe
clc
rclb
mov
mov
mov
out
stc
xchg
inc
cmp
jge
out
dec
lods
fwait
adc
mov
cltd
dec
fisubrs
pop
daa
inc
or
lret
je
add
cmp
repnz
adc
jns
pop
fadds
mov
dec
mov
sbb
mov
xchg
push
mov
or
cmp
mov
cmp
dec
xchg
hlt
and
mov
loopne
and
cmp
push
sbb
add
ss
push
fdivrs
sbb
mov
or
cmpsb
cltd
loopne
sub
sbb
mov
mov
mov
add
sub
adc
cmp
cmovo
pop
mov
enter
mov
cmc
out
ljmp
ffree
jg
mov
jo
adc
mov
mov
ljmp
sbb
mov
shrb
orl
mov
gs
fisttpll
popf
loope
out
repz
mov
xchg
inc
cmp
popf
adc
lods
int
dec
je
or
dec
cli
xor
fwait
push
mov
pop
adc
shl
dec
dec
cmpsl
loop
imul
pop
ds
fisttpll
inc
mov
fs
fdiv
xchg
cmp
arpl
minps
adc
ljmp
loope
stos
lahf
mov
push
cmp
xor
and
das
insb
add
sub
imul
push
lret
int
fcomps
test
inc
outsl
imul
scas
and
xchg
sarl
sub
push
adc
push
clc
cli
inc
fiaddl
jne
arpl
cmp
push
sbb
push
cltd
lahf
imul
and
rep
push
push
adc
insl
push
outsb
and
push
pop
dec
mov
fstl
push
aaa
insl
dec
lock
add
ret
add
dec
xor
int3
jle
idivb
add
jb
pusha
hlt
lcall
inc
dec
or
mov
push
loopne
fidivl
into
jmp
adc
adc
cwtl
je
clc
cwtl
mov
jg
stos
lods
and
dec
out
dec
std
xchg
imul
xchg
fstpt
mov
arpl
daa
inc
aad
js
inc
pop
fcmovb
cld
fsubp
and
push
xchg
in
jnp
rorb
mov
xchg
cmpsl
pop
in
dec
popf
jecxz
lret
xchg
sub
shrl
lods
inc
mov
bound
lret
pop
sahf
cmp
fmuls
pop
daa
pusha
roll
xor
push
pop
inc
pop
sub
lea
lock
scas
stc
fistl
das
cs
adc
outsb
not
mov
xchg
rcll
in
pop
cmp
pop
inc
call
xor
shll
daa
insl
adc
cmpsl
out
and
nop
ret
ret
fsub
dec
xchg
lds
adc
xchg
jge
lock
in
arpl
loop
push
mov
add
pop
adc
adc
sub
adc
pop
mov
int3
js
dec
and
ds
das
das
pusha
repnz
add
xchg
jle
inc
sti
repnz
mov
lea
adc
in
fidivl
push
add
cmp
cmpsb
adc
mov
inc
pop
lcall
addl
push
in
add
and
in
shrl
xchg
orb
inc
out
aad
repz
out
push
nop
ficoml
dec
fmul
int
pop
inc
scas
testb
adc
sub
jecxz
loope
in
rolb
push
mov
xchg
ds
dec
aad
loope
jle
loopne
xor
pusha
inc
add
mov
mov
mov
or
xor
dec
dec
mov
imul
or
fs
xchg
xor
sub
ja
inc
cmp
or
scas
sbb
out
jb
das
mov
add
arpl
movsb
mov
movsb
sbbb
adc
xchg
mov
push
push
shlb
bound
adc
aas
data16
ss
xchg
les
dec
and
dec
dec
push
in
sub
and
dec
outsb
cmc
out
mov
xchg
loop
xor
fildll
and
aad
sub
dec
icebp
cmp
xchg
cmp
xchg
loop
out
and
mov
jae
aam
xor
pop
lods
xchg
push
cmpsb
mov
jp
aaa
rcll
jo
cli
mov
mov
sbbl
cmp
int3
stos
inc
adc
jo
jmp
pop
stos
lods
add
pushf
sub
mov
loope
loope
sub
mov
aad
ret
mov
sbb
loop
out
inc
jle
movsb
ficoms
mov
out
mov
out
insb
add
gs
mov
xchg
fisubrl
call
xchg
fcmovbe
jae
jae
in
sub
cmp
test
in
outsl
push
jecxz
jno
cmp
push
outsb
dec
xchg
push
enter
das
adc
jne
pushf
int
jae
jne
shl
xor
mov
aad
jge
into
fidivrs
push
jmp
int
mov
nop
loop
mov
ret
movsl
adc
pop
xor
popf
xor
les
dec
pop
imul
outsl
push
iret
or
jo
aas
pop
divl
pop
bound
add
lret
shll
in
in
jmp
daa
jnp
sub
xor
loop
jno
lds
jb
sbb
jo
pop
pop
lods
push
mov
dec
push
cwtl
sub
in
pop
xchg
fdivrp
or
aad
pop
sbb
in
and
sub
push
mov
cwtl
push
push
sub
dec
out
inc
dec
outsl
les
add
cmp
rclb
popf
xchg
std
out
sub
fs
aad
mov
dec
inc
mov
sbb
sbb
jne
int3
popa
jp
lcall
lock
push
xchg
mov
loop
lea
dec
sbb
dec
int
cmpsb
jmp
popa
outsl
and
jns
xor
int3
pop
adc
leave
inc
lea
lcall
sub
stc
mov
in
mov
add
movsl
adc
jnp
sar
test
cs
scas
xor
push
push
lea
lret
mov
cmpsb
leave
sub
sti
inc
dec
cli
push
loopne
and
pop
testb
shrb
fcoml
pop
or
ret
cmpsl
inc
in
cli
mov
mov
lea
pushf
fisttpll
insl
adc
sub
sbb
lock
jg
inc
adc
and
clc
push
cmpb
ror
xchg
dec
mov
adc
scas
lods
mov
xor
jmp
or
push
mov
jp
mov
mov
lods
mov
fisttpll
in
sub
or
mull
mov
jmp
pop
fsubs
sbb
aas
lods
mov
out
imul
stc
xlat
hlt
out
cmp
inc
outsl
dec
iret
mov
dec
xchg
into
notl
negb
xor
in
imul
inc
shrl
enter
call
push
xor
xor
imul
mov
in
dec
orb
arpl
cmp
imul
out
pop
and
sbb
jo
mov
cmpsb
inc
jne
leave
mov
nop
loope
pop
cmp
subb
cmpsl
inc
mov
jge
loop
movsl
mov
mov
inc
scas
in
lret
xchg
xor
movsl
xchg
dec
inc
fists
cmpsl
mov
push
pop
xlat
xor
sub
into
iret
dec
ror
int3
pop
cmpb
cwtl
int3
ja
add
lds
adc
cmp
ds
push
es
pusha
sbb
scas
or
dec
mov
mov
push
push
mov
xor
outsb
jg
fucom
mov
mov
mov
rcr
in
push
out
pop
sub
dec
orb
mov
adc
xor
dec
sahf
pop
mov
ljmp
cltd
push
stc
cli
ret
jp
cmp
mov
stos
mov
nop
in
push
leave
adc
in
in
pop
mov
dec
fldenv
add
sub
mov
shrb
xchg
xor
lret
rol
xor
mov
inc
pop
mov
pop
fsts
movsl
enter
int3
adc
jl
adc
movsb
sbb
shrb
pop
or
cld
jmp
pop
lods
and
mov
pushf
fistps
shrb
dec
sbb
jnp
inc
in
xchg
dec
sti
or
jno
das
and
scas
jns
sub
repnz
in
rcr
pop
movsl
and
js
mov
and
out
and
rclb
aam
fs
nop
mov
repnz
add
rol
push
dec
mov
xchg
stc
mov
or
popf
pop
or
sbb
pusha
out
test
inc
out
add
icebp
cmp
jp
dec
scas
arpl
dec
add
dec
aad
mov
adc
pop
shlb
inc
mov
je
iret
mov
sub
pop
adc
mov
fsts
pop
jnp
xor
dec
add
add
dec
and
ljmp
pop
cmp
adcb
mov
jns
mov
push
into
cmp
fnstsw
mov
mov
push
popf
pop
clc
out
add
in
sbb
cmp
push
cwtl
mov
leave
sbb
jns
pushf
push
roll
xchg
mov
adc
pushf
and
arpl
xor
dec
jg
dec
jb
inc
lods
cs
jbe
test
leave
pop
jg
loope
aas
mov
lahf
es
dec
dec
mov
daa
jns
in
and
fimull
dec
fisttps
std
call
out
push
push
push
jns
xor
je
sbb
gs
stc
dec
xchg
dec
mov
rcrb
lea
divl
xor
out
in
mov
dec
incl
cmpb
lods
or
xchg
fstpt
js
ss
or
mov
ret
mov
cmp
jo
add
xor
xchg
mov
mov
loop
aas
aaa
xor
movsl
cli
push
xchg
push
pop
jecxz
loop
dec
pusha
add
adc
push
arpl
loop
jge
clc
shll
jmp
jb
dec
test
jl
adc
popf
int3
stc
in
lock
mov
dec
inc
test
ja
test
adc
and
in
rolb
pop
movsb
cmp
mov
ja
sti
pop
dec
pop
sub
int3
mov
lods
pop
pop
add
mov
testl
lcall
fstpl
sub
ret
dec
xor
fmuls
fldenv
cmpsl
insb
pusha
adc
xchg
test
sahf
add
cwtl
sbb
and
cld
mov
pop
lret
add
push
stos
mov
testb
test
push
xchg
in
mov
and
push
and
pop
mov
stc
cmpsl
mov
cwtl
aam
les
std
and
xlat
mov
fidivl
sbb
mov
cmp
pop
std
jns
cmp
pop
lea
mov
cmpsb
mov
into
jae
mov
fsub
and
icebp
arpl
mov
jle
push
sbb
inc
sub
and
jo
insl
sub
pop
dec
pushf
movntps
mov
jae
ds
in
das
int3
xchg
fstpt
mov
out
shlb
pop
cmp
ds
movl
cmp
xor
xchg
push
fadd
lret
lcall
filds
test
andb
decb
xchg
cwtl
movsl
xor
jns
dec
imul
fidivrs
stos
sub
cmp
nop
cmpb
sub
cld
xchg
jbe
test
jl
cmpb
sub
jno
inc
mov
push
pop
ret
push
mov
pop
test
jecxz
out
jl
test
pop
mov
cmp
fbld
mov
mov
scas
faddl
fidivl
sub
dec
fcmovnb
ret
in
jl
or
pusha
mov
fists
outsl
adc
xchg
pop
aad
jmp
scas
in
jle
jp
pop
xchg
pop
pop
sub
adc
lea
or
sub
nop
rolb
and
jbe
data16
mov
mov
add
xor
mov
sub
pushf
aaa
andb
pop
mov
fs
mov
cmp
leave
bnd
mov
or
sub
imul
push
inc
pop
mov
rorl
imul
sbb
leave
mov
scas
cmp
push
int3
or
xchg
pop
ljmp
cmp
std
pop
clc
dec
mov
cmpsl
fnstsw
sbb
dec
cmp
jbe
jg
fidivl
popf
fcoml
pop
push
test
push
jle
mov
jns
sbb
pop
inc
or
mov
lcallw
insb
inc
pop
cs
sbb
adc
or
sti
pop
outsb
push
dec
dec
mov
jae
outsb
sbb
sbb
and
jne
sti
insl
movsl
or
mov
jae
push
xchg
inc
push
repz
cmp
mov
loope
popf
or
les
dec
icebp
dec
dec
mov
cmpl
fsubrs
dec
cmc
mov
loope
lret
cmp
add
les
jl
ja
dec
or
iret
iret
fdivr
dec
jne
inc
xchg
add
testl
mov
insb
popa
jg
inc
fmulp
xchg
cmc
andl
cld
in
leave
ja
xchg
jbe
push
or
mov
in
enter
cmp
or
into
das
sahf
mov
adc
xlat
jo
dec
push
mov
movsb
icebp
pop
rorl
mov
test
push
in
push
into
push
cmp
add
rcrl
add
sbb
ja
add
push
adc
std
pop
sbbb
test
sbb
mov
adc
loop
mov
mov
cmpsl
sbb
or
or
xchg
or
add
test
dec
sub
jecxz
mov
outsb
xchg
dec
sub
stc
adc
cli
movsl
leave
xchg
imul
aas
popf
xor
loop
cli
shll
sub
push
lds
das
das
push
jmp
inc
stc
aad
mov
push
xchg
out
pop
add
mov
pop
sub
jbe
int3
outsb
rorl
cli
cmp
pop
les
push
in
and
bnd
divl
sarb
mov
sub
jb
push
ret
or
repnz
sub
fwait
pop
jnp
cmp
test
cmc
into
mov
fcomps
in
push
imul
jne
and
aaa
imul
push
and
shrd
scas
aas
mov
mov
enter
inc
imul
dec
mov
pop
roll
cmp
in
cld
sbb
popf
cmp
add
pop
in
movsl
testb
in
adc
or
ds
and
movsl
push
popa
loope
pop
cmp
notl
pop
fwait
pop
jmp
and
aam
daa
test
in
shlb
pop
sarb
jb
adc
icebp
js
das
fistl
mov
cmp
pop
mov
sbb
cmpsb
in
inc
jle
push
aas
push
lea
addb
movsb
adc
int3
or
mov
push
out
sbbb
dec
and
les
cmp
lea
outsb
push
fwait
push
pop
xchg
mov
jbe
sbb
mov
push
repnz
push
movsl
test
mov
mov
ss
data16
pop
pop
enter
sahf
jo
add
xchg
xor
or
int3
out
mov
mov
jne
adc
subl
popa
mov
out
mov
or
adc
dec
pop
repnz
xchg
push
push
jno
mov
push
xlat
test
xchg
push
mov
push
jbe
mov
mov
dec
leave
and
sahf
jno
lds
sahf
mov
shlb
jno
xchg
xchg
jno
mov
jmp
sub
scas
test
in
xchg
ja
lods
and
push
mov
ficoms
xchg
jmp
push
cmp
jo
mov
dec
lea
popf
imul
arpl
insl
xor
imul
pop
popf
or
push
xor
inc
rorl
sub
xor
call
and
addr16
or
adcb
pop
lret
xchg
icebp
mov
imul
in
push
inc
mov
mov
or
and
lret
movsb
lcall
addr16
fwait
adcl
adc
push
xor
insl
cld
scas
insb
cmc
insb
inc
insb
sbb
fs
mov
jae
dec
lcall
les
arpl
insb
clc
mov
jns
mov
xchg
mov
icebp
mov
adc
icebp
pop
movb
adc
or
outsb
inc
sub
inc
call
pop
clc
push
mov
imul
insl
orl
fnstsw
outsb
cmpsl
sbb
lock
jmp
cmp
sahf
mov
mov
neg
pop
das
into
test
scas
test
push
xchg
mov
jle
arpl
sbb
jno
and
mov
es
imul
shrb
call
scas
sub
data16
adc
sbb
mov
cwtl
sub
and
cmp
xor
shlb
enter
xchg
ljmp
sbb
aaa
pop
or
mov
insb
arpl
dec
mov
aam
inc
dec
lret
xorb
in
mov
push
cmpsb
inc
mov
jl
rorl
js
test
ss
xor
es
ljmp
into
nop
idivb
je
inc
xchg
sub
lahf
add
les
cltd
cli
cmp
and
and
dec
addr16
les
dec
lret
cmp
out
jmp
mov
dec
fcmovnbe
mov
mov
xchg
sahf
sbb
mov
add
scas
std
mov
pop
test
addr16
in
cmc
icebp
sbb
jne
xchg
scas
xchg
cmp
cli
ficoms
icebp
shlb
adc
push
add
sub
push
jne
xor
arpl
idivb
movl
cmpsl
and
lock
lods
or
xor
sub
hlt
sbb
loope
pop
xchg
leave
mov
fildl
mov
add
sbb
fcmovb
push
popa
mov
popa
lret
pop
out
sub
sti
pusha
dec
mov
push
mov
pop
int
lahf
push
in
dec
lods
daa
or
mov
push
fld
lahf
adc
frstor
inc
adc
mov
mov
push
pop
jb
sahf
cmp
dec
adc
pop
sbb
xchg
rcll
or
jmp
fcompl
fbld
and
cmp
inc
xchg
lods
inc
fs
adc
lcall
lds
cltd
pusha
mov
mov
and
testl
int3
sarl
dec
inc
je
lea
icebp
dec
shlb
pushf
cmp
push
add
pushf
add
jp
add
sub
add
mov
out
movsl
stos
pop
sub
push
mov
xlat
dec
cmp
mov
dec
movsl
cmp
push
mov
mov
inc
adc
mov
inc
repnz
sbb
mov
aad
sbb
ret
iret
jno
enter
out
push
jmp
mov
cmp
mov
clc
adc
add
sub
inc
cmpsb
sbb
notl
call
xchg
fiadds
mov
push
aad
jns
mov
test
add
lds
push
dec
mov
repnz
sub
lahf
jnp
cld
pop
test
adc
xchg
and
jp
ja
sub
cmp
xor
int3
cmpsb
cld
xor
out
fldenv
jns
mov
cmp
fimull
lahf
pop
stc
iret
enter
pushf
mov
inc
into
stos
lods
enter
data16
xchg
popa
cmp
stc
das
pop
pusha
sbb
jg
ficoml
lock
movsb
push
push
mov
sahf
int3
leave
jmp
sub
inc
push
xor
cld
mov
and
add
sahf
push
or
sbb
dec
lahf
lock
sahf
ret
and
int3
scas
push
lods
inc
pop
xchg
in
pop
les
cmp
mov
lea
popf
and
sbbl
add
int
test
scas
sahf
int
jns
and
loop
sbb
in
sub
sbb
mov
loop
dec
int
xor
sbb
test
sub
pusha
cli
xor
sbbb
mov
jne
mov
xchg
mov
movsb
div
and
repnz
sub
loopne
mulb
mov
jle
js
rorb
js
push
rcr
int3
or
divl
pop
insb
fbstp
jno
out
loop
hlt
ret
push
sbb
ror
cmpb
sub
or
fisubrl
test
sahf
add
push
inc
xor
movsb
rcr
popf
fbstp
movsl
lcall
scas
mov
mov
ss
mov
adc
iret
pop
xor
push
out
or
pop
movsl
sarb
inc
and
xor
scas
jne
stos
daa
or
mov
jmp
pop
mov
lret
jbe
jmp
je
cmpsl
jns
rcrl
push
subb
sbb
xchg
sbb
cmp
and
cs
jo
mov
insb
pop
iret
inc
imul
and
push
loope
inc
insb
cwtl
dec
inc
insb
adc
jno
daa
dec
int3
mov
jb
push
js
cmpl
out
inc
or
sub
adc
out
decl
roll
jns
loop
cld
xor
je
dec
int3
cmp
pop
movsb
xor
pop
sbb
pop
scas
mov
popf
sbb
pop
aad
inc
pushf
test
or
jno
cld
movsb
imul
in
fistpl
jo
lock
sbb
loop
cmp
jmp
xchg
lahf
sti
jl
cwtl
sbb
jmp
mov
cmp
rcll
jp
es
jb
adc
dec
mov
or
push
mov
hlt
cwtl
fsubs
dec
lret
push
out
mov
and
mov
out
es
xchg
mov
cwtl
test
test
sti
cmc
sti
aaa
sbb
lock
push
lods
inc
xor
into
inc
cmp
fidivs
subb
cmp
popf
loopne
sbb
pusha
out
push
es
cwtl
fistpl
hlt
push
xor
jbe
push
dec
leave
mov
mov
mov
lods
sbb
inc
out
or
sbb
xor
push
jbe
cmp
mov
sub
inc
xor
add
add
pop
mov
lods
or
mov
add
movsb
add
mov
packsswb
loopne
push
sub
shl
jbe
or
shrl
add
and
mov
cmp
int
scas
mov
xor
ret
addr16
outsb
xlat
rorl
mulb
sbb
inc
pop
sub
cli
jp
dec
mov
into
popl
aad
out
xor
or
testl
outsl
mov
movsb
gs
cmpsl
push
pop
dec
bound
lods
frstor
pop
mov
push
enter
movsb
and
sar
jmp
push
pop
cmp
dec
or
outsb
dec
mov
out
dec
mov
jbe
mov
cmpl
jno
cmp
ret
and
je
in
flds
cltd
cmp
imul
xchg
cmp
push
mov
call
cmp
out
push
jmp
cwtl
fstl
mov
inc
xor
add
aam
mov
imul
inc
jnp
dec
xorl
ds
inc
fimull
or
xchg
lods
cwtl
cmp
sbb
cmc
and
cmp
mov
xchg
cmp
cli
arpl
cmp
dec
mov
jge
add
cmp
faddl
cmp
sbb
jns
xchg
mov
outsl
ja
cmp
sahf
xlat
push
lcall
add
lret
inc
mov
loope
sbb
cwtl
mov
mov
leave
aad
push
inc
int
adc
xchg
jmp
jns
sahf
insb
ljmp
iret
xchg
adc
inc
test
js
mov
es
cltd
push
jp
inc
xlat
insb
pop
cmp
xor
jg
sub
idivl
xchg
and
lret
fisubl
push
roll
pop
sub
adc
push
sub
dec
pop
nop
pushf
jae
daa
jge
std
mov
js
push
sbb
lret
pop
fs
out
jg
mov
sub
mov
cmp
nop
push
mov
add
int
or
cmp
xor
mov
loop
mov
and
call
jp
inc
jge
outsb
xchg
outsl
xchg
jbe
pop
dec
scas
or
and
adc
jae
push
push
xor
fisttps
and
pop
sub
es
push
fmull
adc
scas
sub
push
out
jne
jae
and
pop
mov
jmp
into
sbb
mov
mov
sahf
inc
jo
mov
mov
aas
push
inc
out
pop
pop
pop
xchg
push
fwait
sbbb
lock
cmp
fisttpll
xor
fists
fcoms
fildl
int3
or
lods
incl
cmp
fwait
pop
sub
jmp
pop
je
int3
in
fisttpl
andl
shrb
aaa
jb
inc
mov
mov
pop
xor
mov
shll
push
or
subl
insb
fidivs
imull
cmp
into
sbb
repz
das
inc
dec
jge
jnp
into
jmp
xchg
int3
mov
fcmovnu
jecxz
pop
sub
nop
movsl
mov
test
rclb
sbb
daa
and
cmp
push
inc
stos
dec
hlt
jo
dec
movsb
xchg
sub
nop
sbb
ljmp
cli
add
scas
cmpb
notb
add
lock
adc
xchg
mov
les
mov
lcall
or
dec
fisttpl
data16
jbe
stos
pusha
inc
adc
push
bound
cmpsl
loopne
aam
jmp
scas
les
or
popa
loope
incl
sti
rol
movsl
cmp
adc
pop
xor
mov
push
js
sahf
mov
mov
ljmp
mov
mov
mov
rcrb
movl
fbld
pop
insl
mov
pop
sbb
call
je
cmp
imul
cmpsb
cmc
jp
dec
jae
jecxz
rcrl
pop
mov
or
xor
pop
loopne
jmp
xchg
push
out
cmpsb
inc
shlb
mov
scas
flds
sahf
lods
sub
pop
add
sub
add
jno
mov
push
repnz
lods
mov
hlt
add
jno
sub
or
xor
cmp
mov
sbb
add
nop
and
xchg
mov
dec
xchg
mov
or
mov
inc
es
and
or
jge
aad
ja
lods
pusha
sub
add
or
cmp
jo
icebp
push
mov
aaa
gs
arpl
cmp
jbe
and
adc
pop
mov
pop
mov
add
push
mov
ret
push
add
mov
scas
shll
call
mov
and
cmpsb
dec
inc
nop
xchg
inc
sbb
outsb
fwait
out
jecxz
loope
mov
loop
out
hlt
mov
mov
js
push
lods
cmpsl
or
movsb
adc
roll
jne
jmp
inc
pop
lret
jno
ret
xor
mov
pop
cwtl
push
push
gs
jl
inc
add
push
xlat
fbld
subl
mov
daa
jnp
sbb
loop
ficoms
cmc
imul
shrl
mov
pop
and
dec
add
cli
icebp
push
sub
sarl
das
in
and
mov
inc
je
mov
mov
mov
dec
push
adc
ret
fs
call
push
jmp
sarb
lods
ds
mov
or
mov
test
in
insl
or
addr16
in
mov
jne
jne
loopne
rorl
test
push
outsb
inc
sbb
add
les
cmpsb
hlt
and
jne
scas
dec
icebp
loope
inc
push
cmc
or
pusha
stc
push
imul
adc
xchg
xor
pop
or
ret
and
insb
std
addr16
insb
jg
pushf
outsb
jbe
test
cmp
pushf
mov
jnp
push
mov
fadd
xchg
push
mov
movsb
mov
mov
adc
mov
imul
push
fcomps
out
mov
shll
xor
outsl
sbbb
mov
add
inc
fistl
js
and
andb
or
dec
and
popf
adcb
mov
test
mov
pop
hlt
sub
and
test
mov
mov
fwait
inc
mov
sub
leave
lods
mov
nop
cmc
cwtl
insb
dec
inc
inc
repz
fimuls
jecxz
popf
cmpsb
shlb
or
shl
mov
jne
test
push
arpl
in
jo
dec
cltd
and
mov
push
xchg
sbb
pop
lods
shrb
aam
xchg
subl
loop
cmp
fwait
xchg
nop
in
daa
test
push
xchg
outsb
adc
ret
das
xor
push
shlb
dec
imul
clc
bound
push
pop
fwait
sub
mov
and
js
jle
push
mov
dec
pop
mov
mov
xor
out
inc
jo
sahf
xlat
enter
rclb
lahf
pop
das
pop
mov
or
xchg
fstpt
ficompl
push
push
mov
add
cmpsl
repz
repnz
mov
sbb
shr
adc
hlt
and
iret
addr16
loop
mov
adc
or
jmp
adc
xchg
cmpsb
test
das
push
scas
sbb
pop
int
push
test
pop
mov
rorl
dec
dec
popf
les
pop
mov
test
aad
xor
sub
or
inc
out
adc
shrb
lock
adc
inc
jecxz
ja
enter
and
xor
filds
ljmp
cld
mov
mov
fs
lret
pop
stos
scas
stos
adc
fiadds
dec
cmp
sub
xor
cltd
aam
jg
adc
add
mov
pop
aad
fstpt
enter
lods
popa
mov
sub
dec
inc
pop
push
aas
jne
fdivr
mov
adc
sbb
push
xchg
testl
pop
adc
push
aaa
icebp
test
xor
jae
imul
in
in
push
and
cmp
mov
mov
imul
ljmp
fcoml
negb
mov
cwtl
push
sub
cld
je
outsb
test
adc
or
in
fsubrs
or
jg
push
scas
loopne
ret
imul
subb
into
jge
push
lcall
mov
scas
mov
ret
dec
add
mov
rol
add
fistpll
pop
or
icebp
xor
cli
cmp
stos
xchg
dec
xor
das
jl
je
daa
fdivp
pop
xor
into
stc
scas
loop
jno
xor
mov
mov
popf
push
mov
movsb
cmc
into
int
insl
lods
mov
arpl
ror
adc
cmpsb
gs
test
and
leave
shrb
aam
mov
push
ljmp
je
jmp
movsb
xchg
xlat
mov
push
xor
xor
add
loope
dec
xchg
dec
sti
jb
cmp
sub
xchg
and
xor
rorl
or
fbstp
cmpsb
add
pop
gs
fmul
sub
aad
negl
mov
inc
in
jno
xchg
pop
rol
mov
inc
pop
inc
cmpl
mov
sti
adc
sub
jae
adc
sub
int3
outsl
sbb
or
fdivs
sarb
rcrb
aaa
shlb
mov
lret
stos
insl
loopne
loop
inc
in
mov
not
pop
mov
ljmp
adc
stc
dec
and
ljmp
adc
push
in
push
mov
syscall
pop
and
adc
pop
jle
in
fbld
jae
cli
jae
jmp
cmc
lahf
hlt
mov
adc
sbbb
mov
aad
in
outsb
out
dec
shrb
mov
js
sahf
inc
add
mov
jnp
int
jo
xchg
stos
lret
out
sbb
std
mov
aam
test
pop
mov
mov
xchg
or
sahf
dec
jl
cmp
cwtl
dec
sbb
test
sahf
or
ficompl
pushf
xchg
adc
out
out
mov
fmul
iret
mov
fstpl
pop
jg
adc
sbb
ja
dec
outsb
rorl
push
lcall
fwait
adcl
arpl
adc
push
or
fwait
outsb
dec
jae
mov
bound
and
xor
cmc
dec
pop
xchg
out
in
mov
pop
push
movsb
aaa
jl
arpl
sarb
cs
nop
scas
repz
lds
add
bound
flds
out
popf
mov
sbb
add
mov
add
inc
sub
pusha
ss
cmpsb
mov
push
and
lret
jp
push
push
mov
out
lret
out
pop
mov
sahf
jg
push
adc
push
das
dec
scas
popf
stos
sub
pop
loopne
cmc
test
movsb
push
call
xor
mov
stc
mov
insl
into
mov
icebp
mov
ret
popf
cmpb
into
jle
pop
adc
mov
sbb
insb
aam
xchg
test
jns
cmp
in
adc
jnp
adc
mov
adc
mov
out
adc
pop
sahf
xor
pop
cmpsl
int
stos
leave
aad
adc
subb
cmp
jp
loopne
xchg
inc
int3
cltd
cmp
mov
andl
xchg
test
les
mov
pavgw
dec
push
sub
out
shlb
mov
sub
adc
cmc
icebp
cmc
mov
xor
xchg
insl
cmp
xor
mov
xchg
addl
imul
sarl
mov
mov
add
lea
enter
adc
test
sbb
jb
pop
xchg
outsl
imul
inc
ja
test
insl
add
popf
lds
ret
subb
pop
mov
rorl
jae
mov
dec
pop
shll
adc
xchg
cmp
ja
mov
push
popa
push
sub
out
push
dec
cmpsl
add
ja
adc
enter
mov
lods
adc
dec
mov
imul
sbb
repnz
pusha
jno
jmp
outsb
cmp
lcall
sbb
adc
or
push
loope
adc
push
andb
push
pop
cs
imul
dec
cmpsb
mov
fs
ja
inc
dec
clc
xchg
xchg
in
xlat
jnp
jns
xor
xchg
mov
inc
dec
and
pop
and
cltd
lds
dec
mov
mov
sub
add
test
in
mov
rcll
rolb
mov
mov
imul
out
mov
dec
aas
test
dec
and
gs
shlb
sbb
sbb
outsb
es
pop
xchg
cli
mov
repnz
ljmp
imul
mov
jbe
out
jp
sub
repnz
pop
lods
fidivrs
lahf
movsl
ss
lods
mov
mov
jmp
jmp
pop
les
jp
rorb
push
scas
mov
lcall
stos
xor
sub
add
mov
lds
inc
dec
mov
xchg
push
add
dec
jecxz
inc
cld
mov
cs
cmp
scas
push
fcom
jne
clc
aam
jnp
int3
sbb
mov
fidivrs
pusha
in
add
aam
push
jno
arpl
pop
mov
stc
insb
lcall
pop
cmp
test
call
out
mov
test
inc
adc
cmp
int
std
mov
inc
jmp
mov
jne
sub
icebp
ds
repz
scas
mov
out
sti
pop
add
sahf
push
adc
fwait
cwtl
je
aam
dec
decb
repz
fwait
fwait
in
push
pop
ret
arpl
jp
xchg
repnz
popa
idiv
out
call
pop
push
inc
xlat
test
das
out
int3
cmp
sbb
ss
xor
insb
add
in
adc
inc
jb
dec
mov
xchg
mov
test
add
fcomps
insl
or
dec
mov
lods
sub
adc
insl
pop
mov
outsb
jne
outsb
dec
xchg
cmpsl
clc
and
cmpsl
mov
das
or
pop
loop
or
in
xor
xchg
adc
or
cwtl
xchg
out
lahf
xchg
jns
sub
lock
in
rorb
ds
dec
xchg
in
jp
inc
cmp
out
add
frstor
mov
jae
out
mov
push
mov
sub
ja
xor
add
or
or
int
ret
movb
pushf
mov
or
stos
cmp
iret
movsl
or
cli
pop
xor
popl
pushf
pop
cwtl
test
mov
dec
inc
pusha
inc
in
inc
cwtl
xor
je
out
loop
push
insl
xchg
jl
inc
or
jo
scas
rolb
cmpsb
stos
lods
das
and
popa
or
psrld
scas
inc
gs
imul
pop
lret
dec
mov
xor
leave
pop
imul
or
ret
ds
mov
andb
lea
int3
cmc
mov
sub
adc
sub
add
insl
add
cwtl
or
mov
iret
dec
jl
fnstcw
jp
iret
outsl
loop
or
push
jmp
push
int
jbe
aas
push
fnstsw
lods
jle
cmc
cmp
scas
mov
mov
sub
sub
dec
or
int3
out
xor
push
int3
bndldx
and
int3
fidivs
push
pop
imul
push
movsb
push
jle
fildl
lret
outsb
cmp
mov
iret
loopne
out
stc
stc
ret
addr16
shll
paddd
mov
mov
roll
sub
xlat
and
dec
lcall
repnz
push
outsb
mov
sti
or
push
mov
xchg
flds
lret
mov
adc
stc
js
xchg
fsubrl
xchg
stc
cltd
aas
or
cwtl
ss
daa
mov
repz
lea
jne
pop
or
jne
mov
lds
mov
sub
out
xor
je
mov
jg
jnp
mov
inc
xor
jns
cmp
xor
mov
cwtl
movsb
pop
cwtl
sbb
xchg
push
cmp
dec
mov
sbb
xor
shll
and
aad
jne
mov
cmp
sub
inc
push
call
je
lahf
jno
aas
cmp
xor
inc
lret
outsb
test
dec
inc
test
jle
mov
mov
xchg
enter
push
mov
shl
or
outsl
loope
sub
mov
fistpl
push
add
je
mov
adc
repnz
adc
jne
lahf
fiaddl
dec
fistl
in
xor
lds
nop
outsw
or
add
adc
jmp
out
cs
outsb
jb
repz
mov
jb
sub
sbb
mov
add
out
lcall
leave
xor
call
pushf
dec
nop
subl
cmp
push
lds
test
adc
div
mov
pop
dec
pop
xor
push
scas
leave
sbb
add
mov
imul
roll
adc
push
and
jg
rcrl
or
repnz
push
lods
or
cltd
mov
fwait
and
add
mov
imul
andb
cld
xor
ret
test
faddl
insb
stos
push
mov
insl
inc
push
xchg
pop
cld
imul
pop
stos
xor
cmc
out
adc
fwait
xor
xor
sbb
xchg
je
inc
adc
adc
aas
inc
aas
pop
rclb
je
jmp
pop
es
not
mov
daa
in
adc
int
and
jb
loop
sbbb
mov
repnz
adc
jp
xorb
fdivs
pop
stc
sbb
in
add
rorl
fcmovne
mov
sub
popa
cmpsl
pusha
cmp
imul
sbb
or
fstl
xchg
test
testb
add
stos
mov
push
mov
push
popl
movb
dec
je
adc
xchg
add
xor
xchg
xor
mov
jns
adc
xlat
int
xor
jg
dec
or
pop
or
cmc
loopne
jmp
cmpsl
out
fidivrl
mov
jmp
sub
or
sub
aam
push
outsl
dec
sarb
loopne
mov
mov
and
je
mov
arpl
inc
push
push
mov
out
mov
adc
sbb
cmp
cmp
ret
inc
sarl
scas
adc
fmul
and
scas
adc
push
mov
mov
jno
pop
out
or
lock
stc
xchg
in
sub
push
push
in
imull
cmp
sbb
jae
add
push
div
fadds
jle
xor
pop
test
push
ret
adc
push
push
dec
jg
lds
loope
lea
pop
das
out
insl
or
enter
test
pop
frstor
xlat
cmp
in
push
jle
or
mov
lcall
adc
lods
mov
mov
mov
sbb
test
mov
mov
pop
xchg
xlat
movl
out
jnp
sbb
dec
in
sarl
mov
shrb
stos
int
mov
out
ds
jns
out
mov
lret
mov
or
stos
adc
xlat
bound
adc
sub
xlat
leave
icebp
sbb
sahf
mov
mov
nop
test
rorl
mov
cmp
ror
or
xor
std
jb
pop
out
mov
sahf
cmp
jmp
int3
cmp
stc
mov
dec
jg
in
dec
mov
out
sti
ror
nop
xchg
mov
ret
in
sub
cmpsb
sbbb
lea
pop
cmp
push
and
dec
mov
sbb
xor
mov
imul
stos
in
mov
ss
jmp
call
cmc
cmp
xor
mov
jp
lock
stos
ret
ds
clc
loopne
neg
dec
push
mov
cmp
call
inc
popa
push
call
xor
jb
out
push
cmp
clc
push
fneni(8087
test
into
pop
movsb
xor
ret
outsb
xor
cmp
rclb
dec
jbe
sub
inc
push
cmc
test
insb
jb
jl
enter
push
lret
ljmp
mov
mov
test
xor
mov
pushf
aaa
push
fcmovnbe
mov
inc
mov
fdiv
or
lea
adc
mov
loop
les
out
loope
in
ljmp
cmp
lahf
das
or
mov
mov
jmp
xor
mov
and
cld
push
aam
es
adc
sti
test
sub
rcrb
je
push
mov
lret
out
sbb
in
push
add
shr
push
not
jnp
dec
cld
inc
mov
cmpsb
int
mul
addr16
inc
sub
lret
rol
xchg
rorb
in
or
popf
inc
mov
jmp
or
std
leave
push
in
push
mov
rcrb
fs
add
js
rorb
testb
fildll
aam
stos
xlat
pop
mov
mov
push
ds
ror
cwtl
cmpsl
mov
rol
loopne
insb
mov
sub
jo
lock
cwtl
dec
cmp
call
cmp
sub
xor
xor
fisttps
push
mov
lds
jmp
sbb
dec
lret
mov
and
push
outsl
sbbl
jmp
xor
and
test
nop
pusha
jo
out
inc
jle
cmp
add
sahf
fldcw
and
outsb
clc
emms
fstl
repnz
jo
ss
mov
fisubs
inc
jg
push
mov
jns
invd
jns
loope
push
test
pusha
movsl
dec
cli
mov
or
cmp
mov
sbb
sub
jns
popa
add
push
jmp
gs
dec
lock
jae
sti
sbb
pop
fs
jle
and
insl
pusha
mov
cmp
enter
xor
aaa
into
push
rorb
loope
cli
sub
cmpsb
mov
push
pop
cli
sub
fs
and
int3
jae
and
es
out
aad
mov
add
adc
dec
es
pop
sub
add
sti
push
jne
lea
sbb
stos
xchg
gs
push
fiaddl
push
outsb
popf
xor
stos
add
imul
add
xchg
fdivrs
mov
jns
pop
jl
dec
cmc
lods
sbb
cmp
insb
test
dec
shlb
mov
or
jle
xor
add
xchg
dec
roll
dec
mov
push
adc
add
add
and
push
arpl
add
inc
mov
cmp
jge
inc
xchg
pop
stc
outsb
mov
repz
sbb
addr16
mov
shll
arpl
push
cmp
into
fildl
and
mov
add
pop
sbb
cli
fs
in
mov
lods
and
add
pop
cld
sub
push
cmp
sbb
mov
clc
inc
jnp
lock
or
mov
mov
movsl
jne
push
aaa
gs
jnp
or
pushf
popa
push
int
mov
scas
into
ljmp
push
cmpsl
out
adc
movsl
out
fs
dec
jmp
xchg
scas
mov
rolb
movsb
jo
mov
push
xor
lock
dec
sbb
stos
jge
mov
test
add
push
xor
mov
into
mov
push
sbb
popa
dec
ja
lods
popl
data16
mov
icebp
pop
shlb
or
lret
iret
sub
add
fimull
in
push
movsb
shll
ljmp
push
sbb
mov
lret
pop
mov
call
fdivl
adc
cs
lahf
sbb
sbb
xor
inc
cld
and
dec
add
mov
add
pop
movsl
or
or
inc
mov
fstl
popf
pushf
mov
das
mov
jg
popf
mov
jmp
xor
mov
or
cmp
xchg
push
stos
xchg
add
push
pushf
mov
ljmp
sbbb
fisubs
dec
inc
pop
in
xor
xlat
pop
jno
stos
std
push
mov
icebp
jge
xchg
out
xchg
dec
insl
jno
aas
hlt
sub
cmc
mov
movsl
fidivrl
push
push
cld
pop
outsl
out
and
outsl
pop
sub
xchg
pop
mov
cmp
xlat
leave
aas
xchg
sbb
jl
ss
push
nop
mov
mov
in
inc
push
dec
fstpt
inc
sbb
push
popf
sbb
dec
sbb
gs
in
sarb
dec
dec
nop
popa
jl
aaa
mov
pusha
shll
nop
cmc
sbb
add
lahf
push
dec
jae
inc
gs
roll
in
inc
ffree
add
push
rol
and
sub
push
jo
mov
scas
mov
mov
jo
xor
loopne
arpl
fists
sbb
jecxz
adc
mov
push
lock
sbb
int
jbe
adc
inc
adc
fidivs
mov
aaa
or
into
ret
aaa
popa
mov
mov
lret
std
push
or
cmpl
arpl
and
sbb
push
icebp
jne
mov
cmp
mov
inc
dec
ficompl
mov
mov
push
bndstx
pop
aas
daa
mov
hlt
pop
inc
lcall
shl
rcll
fwait
lods
lods
cmp
test
inc
cwtl
or
dec
js
mov
es
int3
sub
sbb
mov
stos
dec
mov
lods
loop
stos
cmp
inc
out
in
jge
stos
mov
pop
mov
lea
mov
inc
adc
aam
cs
rcll
insb
and
lahf
movsb
sti
adc
and
mov
xlat
daa
lret
loope
or
fwait
js
xchg
ss
xchg
mov
mov
pop
sub
sti
jnp
imul
mov
fisubrs
jne
mov
pop
sub
pop
add
out
inc
xor
shr
adc
rcrb
nop
flds
mov
or
mov
mov
and
cld
in
cli
add
jle
sbb
adcl
add
xor
addr16
lahf
test
jno
cld
outsb
hlt
sbb
aaa
ficompl
adc
ss
in
insl
fs
scas
daa
sbb
aaa
dec
xor
add
or
aas
jecxz
push
test
jecxz
notb
sbb
mov
push
push
shll
mov
xchg
inc
push
pop
addr16
pop
sti
pop
jns
pop
int
jne
or
setge
lock
mov
imul
sbb
pop
push
int
mov
sbb
cmp
mov
jecxz
jns
subl
push
add
mov
adc
mov
iret
sub
pop
sub
add
prefetch
fsubrl
ret
adc
outsl
xchg
aam
andl
xchg
sbb
ljmp
int3
mov
inc
push
xor
call
insl
incb
js
sbb
call
dec
mov
aad
xor
inc
bound
popf
inc
jge
test
jmp
xor
stc
lods
icebp
rclb
and
sbb
shlb
filds
jmp
inc
jnp
xchg
pop
cmp
xor
inc
jne
push
mov
push
mov
xor
lock
subl
loope
sub
sbb
jg
xor
cmp
fisubrl
ljmp
sub
shrb
cltd
jecxz
jns
orl
xor
jno
je
jb
sbbb
loope
mov
aas
adcl
lods
fimuls
dec
imul
loopne
rorb
js
mov
mov
pop
mov
inc
stos
leave
mov
xchg
les
jne
jg
cld
mov
mov
sub
mov
lret
popf
dec
sbb
movsl
mov
js
cli
pusha
aaa
mov
mov
outsb
jae
test
pop
dec
pop
out
dec
ret
pop
and
dec
lock
mov
cwtl
cwtl
pop
dec
lret
adc
or
cmp
inc
out
addr16
ret
jle
js
pop
xchg
fs
cli
dec
sub
sub
test
push
pop
movsb
orl
and
bound
outsl
fmul
mov
mov
aas
jo
mov
jo
out
lret
sub
gs
inc
sub
jb
mov
aam
and
xchg
js
add
xchg
arpl
adc
ret
sti
push
cmp
sub
in
lea
and
movsb
daa
cmp
adc
or
imul
add
xchg
jg
fidivrl
xchg
sub
cmpsb
and
sarb
bound
shlb
pop
pop
add
ja
int3
ljmp
hlt
insb
xlat
sub
adc
pop
or
mov
jecxz
ds
adc
inc
and
add
enter
adc
mov
jnp
cmc
mov
stos
mov
jl
aaa
sub
mov
pop
jge
movsl
test
mov
test
mov
push
movsl
and
cmpsl
mov
popa
in
push
mov
in
mov
fdivs
xchg
dec
sub
dec
scas
pop
cmp
rcl
xchg
jle
dec
xchg
aam
inc
mov
mov
inc
fidivl
sbb
mov
xchg
mov
pop
insb
lret
xchg
inc
lcall
mov
push
mov
sub
sbb
lods
int3
cwtl
mov
sbb
cmpsl
dec
sbb
into
dec
jmp
out
fnstsw
leave
mov
dec
mov
fsubs
out
jbe
jne
popf
fsub
sbb
sti
and
lods
adc
dec
cmc
jb
xchg
lret
mov
jae
fistps
push
push
loopne
sbb
sub
in
ljmp
push
dec
je
adc
mov
fs
jbe
inc
ret
xchg
jno
pushf
sub
aad
mov
pop
shl
or
inc
scas
inc
mov
or
orb
testb
pop
mov
jg
xchg
add
arpl
dec
lret
sbb
clc
std
daa
cmpsl
push
adc
adcb
pop
pop
jle
insl
hlt
dec
insb
mov
mull
fnsetpm(287
jle
add
mov
inc
pop
jae
push
nop
daa
pop
pop
mov
andl
jl
and
stos
add
out
mov
imul
mov
das
popf
inc
cmpb
aas
cmp
dec
dec
popa
cmp
inc
shr
test
xor
test
aam
jle
jbe
add
mov
out
out
sbb
add
lods
and
lret
jp
lcall
pusha
or
jnp
xor
inc
jg
or
test
rcll
sbb
es
mov
push
lcall
mov
rolb
stos
mov
xor
jge
pop
pop
inc
dec
jae
ljmp
rcl
pop
clc
xor
mov
jns
ss
pop
sbb
inc
call
push
dec
ds
pop
push
andb
dec
loope
dec
js
and
mov
mov
fwait
out
or
mov
add
push
imul
xor
push
or
cmc
xor
stos
pop
mov
leave
fisubs
jp
jbe
sbb
mov
pop
mov
cmpb
and
pop
cmp
mov
add
jae
subb
inc
xchg
insb
push
inc
aas
or
xchg
pop
adc
sahf
popf
xor
mov
insb
rorl
clc
adc
fmul
mov
ret
xchg
push
nop
pushf
adc
jo
bound
imul
xor
gs
pusha
add
stos
push
ficoms
enter
or
lcall
cmpsb
jno
movsl
push
or
adc
pop
scas
lods
inc
loopne
mov
je
sahf
scas
and
add
adc
in
aaa
les
sub
js
fimull
sub
xor
push
aas
xchg
shlb
stos
pop
sbb
rcrl
sahf
stos
ret
loopne
mov
inc
push
pushf
imul
add
inc
dec
dec
xchg
and
dec
sbb
cmp
inc
mov
add
and
pop
test
lahf
jno
jge
cmp
in
fucomi
inc
lret
mov
into
outsb
call
push
sub
push
data16
xor
lds
dec
xchg
add
mull
sub
testl
rcrb
mov
mov
rclb
add
mov
push
jae
ret
scas
fdivrl
jno
pop
xchg
inc
jo
and
xlat
mov
inc
xchg
push
sti
fisubrl
sbb
andb
ret
sub
and
out
rcl
shrb
lahf
mov
push
sbbb
xchg
test
sbb
mov
mov
push
imul
sbb
jmp
addr16
jb
into
aam
cmc
mov
xor
sub
ss
arpl
cltd
push
xchg
xchg
wbinvd
pushf
in
enter
popa
sub
int
dec
mov
pusha
aaa
test
push
gs
fdivrs
xchg
pop
nop
cmp
ds
idivl
nop
pop
sub
sub
pop
mov
cmp
sub
jnp
dec
mov
jp
xchg
and
xor
daa
js
ffreep
scas
ja
pop
pop
fs
jne
jno
pop
lcall
xchg
arpl
jno
adc
gs
into
sbb
dec
out
imul
sbb
push
test
mov
js
outsl
ljmp
sbb
inc
xchg
jns
popf
add
and
repz
push
push
xchg
testl
lods
xchg
and
push
xchg
cmpl
loope
or
mov
dec
inc
or
ljmp
dec
jl
mull
push
inc
sub
leave
lcall
or
ret
icebp
push
sub
loope
fs
ss
adcl
cs
adc
xchg
stc
test
or
mov
jp
sub
scas
sub
xchg
ss
push
lret
and
loopne
pop
in
out
xor
aaa
pop
out
push
fisttpll
add
bound
icebp
loopne
adc
outsl
mov
pop
repz
mov
mov
sbb
out
inc
cmpsb
ss
popf
xor
stc
add
push
fistpll
punpckhdq
mov
neg
in
ret
xchg
cmpsl
pop
pop
rclb
cmpsb
in
sbb
cmpsb
jbe
xchg
push
movsb
adc
dec
xor
or
iret
ret
or
or
jp
inc
outsb
xor
das
sbb
outsb
and
hlt
jmp
std
addr16
or
jle
sbb
ret
fldt
jae
bound
cmp
daa
jmp
sbb
dec
testl
test
mov
es
enter
pop
and
sub
sub
cltd
xchg
or
cmp
xchg
mov
dec
inc
je
int
cs
cmp
push
out
add
push
jns
mov
and
lods
out
or
shlb
push
jl
jo
pop
pushf
nop
pop
sub
test
icebp
data16
test
mov
mov
dec
int
in
es
out
pop
sbb
lcall
xchg
pop
repz
int3
mov
mov
push
mov
xor
std
ss
mov
sti
subb
out
cmp
cld
mov
pushf
jae
mov
push
pop
or
idivl
lahf
sub
sub
scas
xlat
lods
add
mov
pushf
inc
in
dec
xor
ds
fsubs
call
nop
and
mov
imull
ret
jl
cli
fadds
cmp
aad
lea
xchg
pop
jae
ja
test
and
out
loopne
push
pop
ds
cli
add
gs
jl
scas
push
jbe
xchg
inc
lret
jg
cmpsl
cmp
cmp
sub
fistpll
js
adc
orl
ret
sarb
pop
scas
ficomps
js
jnp
sbb
jnp
xchg
xor
sbb
jg
je
mov
xor
dec
iret
and
mov
cmc
fstl
call
int
jb
xchg
hlt
sub
lds
jmp
sbb
adc
mov
and
mov
push
sub
mov
sbb
jb
movd
sbb
sbb
rolb
add
pop
add
inc
hlt
mov
mov
rcrb
cltd
dec
and
loope
jl
mov
jae
jle
push
std
fiadds
sbb
push
nop
daa
test
push
mov
mov
sti
adc
test
inc
cld
lds
mov
xor
pop
sbb
fwait
cmpsb
inc
sbbl
ljmp
jne
jle
leave
xchg
das
dec
clc
movsb
sti
push
movsb
movsl
jbe
sti
jl
jbe
pop
sbb
mov
or
dec
xchg
sub
add
adc
jmp
sbb
push
sbb
ss
jne
add
adc
and
mov
cmp
jmp
pop
mov
sbb
inc
cmp
push
mov
mov
lods
lahf
mov
cmc
and
mov
pop
push
sub
mov
mov
gs
pop
out
arpl
mov
jb
jl
push
stc
ud0
add
cmp
testb
and
mov
cwtl
jne
cmp
sbb
dec
shrb
fcmovnu
mov
data16
mull
jp
lds
cmp
mov
sub
or
inc
or
xor
cld
cmpl
xor
pop
movsb
dec
adc
pop
pop
mov
inc
mov
cli
push
dec
adcb
sbb
nop
cmp
push
dec
inc
mov
or
mov
test
xchg
jmp
dec
xchg
inc
mov
in
inc
jns
sbb
add
ret
js
fildl
repnz
mov
sbb
popa
mov
mov
das
sbb
sbbl
mov
insb
mov
in
add
imul
dec
repz
ret
fisttpl
fstl
mov
sub
decl
int
add
enter
sbb
cmp
shll
push
js
push
into
inc
or
sbb
test
dec
add
xchg
jbe
jb
arpl
js
stc
xor
adc
mov
lcall
cwtl
leave
out
pushf
jecxz
out
mov
pop
or
dec
mov
lea
into
jg
sbb
sub
adc
xchg
jp
insb
or
push
ffree
dec
sbb
jo
fwait
dec
lret
mov
mov
clc
pop
push
inc
sub
sbb
rorl
adc
push
mov
xchg
loop
out
push
daa
xor
cli
pop
or
cmpsb
inc
outsl
pop
imul
in
jl
cmp
mov
fwait
adc
arpl
sub
int3
sbb
xor
push
and
jmp
outsl
cmp
stos
out
les
cmp
add
push
test
push
outsb
ret
div
sub
js
je
repnz
icebp
cld
mov
sarl
outsb
dec
lahf
ss
inc
jg
adc
subb
mov
sub
rcll
jmp
test
popa
xor
push
fidivrl
mov
sbb
jbe
push
es
mov
cld
or
sub
inc
aas
sbb
mov
je
lods
mov
out
push
fidivs
push
dec
jo
outsl
add
xor
jl
sub
cmpl
push
inc
pop
push
sbb
mov
orl
and
scas
or
jb
sbb
shrb
int3
sbb
jae
cmp
push
lds
out
cmp
mov
inc
fcmove
sub
lcall
decb
imul
gs
insl
and
mov
or
sbb
add
aas
lds
ret
add
mov
rcll
repz
mov
fs
call
dec
arpl
fcmovnb
and
orl
mov
roll
cmp
mov
xlat
xchg
cmpsb
push
fnop
jle
sbb
leave
enter
fistps
fs
out
cwtl
or
and
leave
mov
push
fmuls
mov
mov
icebp
in
shl
inc
or
pop
das
dec
gs
stc
push
stos
push
jne
or
xor
cld
sbb
ljmp
jo
rclb
xor
jo
sbbl
cltd
scas
nop
adc
int
sub
jnp
hlt
iret
fstpl
xchg
popf
pop
popf
inc
push
mov
push
or
nop
loopne
loop
into
aas
aaa
add
jp
sbb
mov
dec
push
dec
in
mov
aad
mov
rcl
dec
sbb
popa
in
pushf
mov
xchg
testb
movswl
dec
inc
push
repz
or
or
ret
sub
dec
jmp
push
lea
xchg
fistpl
insl
test
dec
lods
push
lcall
outsb
test
daa
mov
adc
in
shll
arpl
xchg
pop
out
or
push
and
mov
mov
push
dec
in
test
daa
add
jne
shrb
sbb
addr16
inc
movsl
shl
dec
loope
dec
movsl
push
add
or
xchg
bound
jae
inc
push
mov
and
cmp
imul
insb
jno
jbe
shl
or
mov
das
jl
repz
stos
shl
dec
dec
dec
mov
mov
fistps
test
mov
add
movsl
leave
test
jb
or
dec
adc
xor
push
enter
insl
cwtl
add
xor
sbb
dec
loop
movsl
popa
insl
mov
aad
scas
fidivrs
lcall
jae
and
sbbl
mov
stos
popa
cmpb
inc
ds
sub
fpatan
sub
mov
pop
xlat
push
loope
sub
aam
lea
dec
xchg
insb
push
subb
xchg
mov
dec
mov
push
mov
mov
jo
push
loop
out
add
jmp
shlb
or
xchg
sub
xor
jl
adc
ja
lods
lret
inc
mov
inc
sub
dec
insb
mov
jecxz
push
xchg
sbb
pop
loop
cld
push
pop
inc
adc
add
xor
dec
lahf
out
ret
testb
mov
lods
test
rolb
lret
dec
cltd
push
dec
iret
lods
push
repz
and
xchg
lret
or
jg
pop
test
rol
add
rcrl
sub
add
cmp
push
sbb
sbb
jae
scas
mov
repz
fistpl
push
xchg
nop
int3
sub
mov
leave
notb
sbb
call
xor
mov
and
xlat
pop
mov
aas
inc
jmp
inc
cmp
push
std
push
mov
dec
repnz
mov
cmpb
and
andb
sbb
mov
xchg
nop
lods
mov
sub
jns
lods
lds
xor
sbb
ss
mov
out
imul
scas
repnz
cmc
outsb
dec
mov
jmp
fidivl
and
jb
jl
jbe
bound
sub
jbe
or
addr16
mov
out
push
std
daa
cmp
aas
pop
pop
sub
lock
mov
add
jl
cmc
mov
sub
jne
subl
jb
insb
dec
or
pop
imul
mov
inc
mov
mov
push
lea
or
dec
push
ret
push
mov
bound
inc
add
pop
idivl
sub
push
pushf
jg
dec
sbb
push
hlt
cmp
pop
dec
pop
addr16
shrl
imul
cltd
push
movsb
cmpsl
or
jo
ret
sti
sub
cld
inc
clc
loopne
das
pop
or
pop
dec
and
jl
xchg
fldcw
sbbl
repz
ret
cmp
repz
fstps
leave
scas
mov
push
xor
push
sarl
ljmp
loop
aad
lock
sub
imul
jge
push
lods
out
sub
cmpsb
xchg
pushf
sub
inc
out
ret
adc
inc
pushf
sub
cmp
and
cmp
push
dec
inc
imul
lods
pop
inc
incb
shrb
lret
inc
dec
sbb
inc
or
add
loopne
inc
adc
sub
pusha
lahf
xor
dec
push
ljmp
lea
mov
xchg
out
cmp
mov
test
int
scas
adc
test
cltd
rcl
inc
xlat
arpl
testb
mov
hlt
scas
fsubl
lock
das
in
pop
push
inc
inc
js
adc
lahf
mov
pop
sbb
dec
jne
repz
sbb
je
stc
sub
sub
out
jge
shlb
test
sahf
xchg
jg
jg
scas
adc
imul
into
mov
mov
mov
push
lock
adc
inc
dec
dec
mov
sbb
cmp
enter
lcall
stos
lret
adc
imul
scas
repnz
adc
dec
test
dec
mov
in
adc
call
sub
shll
icebp
cmpsb
or
mov
cmp
jno
fists
xchg
jno
inc
mov
lret
fildl
push
or
call
or
sbb
test
stc
push
adc
cmp
push
gs
scas
pop
add
sbb
lds
mov
sub
in
popa
or
push
stos
fdivs
scas
aam
clc
adc
and
pop
sbb
sub
or
dec
ljmp
inc
cld
push
mov
lea
mov
sbb
adc
or
pushf
dec
in
add
and
jns
sub
xor
loop
mov
sbb
push
movsl
dec
add
xchg
daa
pop
mov
out
adc
sti
vpackusdw
fucom
cwtl
push
in
sti
jae
dec
mov
jge
scas
lea
int3
clc
imul
cmpsl
loop
mov
sub
rorb
dec
push
cmc
push
push
inc
mov
bound
lcall
lods
add
mov
outsl
xchg
adc
bound
repz
jle
lods
ljmp
loope
in
out
or
mov
or
jno
mov
lock
xor
dec
and
jnp
aas
jmpw
mov
outsb
and
outsb
jge
pusha
mov
mov
sub
mov
mov
mov
push
rolb
jne
icebp
pop
xchg
sub
pop
jl
test
and
nop
movsb
stos
xor
loopne
aad
cmc
mov
in
inc
mov
repz
testl
fdivs
fsts
in
lahf
mov
pop
aad
add
inc
or
popf
xor
jno
cmpb
sub
jg
inc
fdivl
ret
loopne
sti
fildll
pushf
add
pop
or
inc
bound
adc
popa
repnz
jmp
test
add
in
or
push
sahf
jmp
jmp
xchg
aad
sahf
fmuls
pusha
shll
ss
push
dec
pop
dec
int3
loopne
and
cmp
xchg
lods
mov
adc
das
mov
or
stos
push
xlat
pop
and
mov
aas
jl
inc
outsb
mov
pop
or
fmull
pop
shrl
xlat
adc
xor
mov
inc
scas
sbb
insl
mov
int
ret
fwait
js
push
xchg
sub
je
loop
or
mov
decb
mov
movsb
mov
addb
ljmp
rolb
push
test
pop
xchg
xor
pop
popa
mov
jno
add
pop
ret
jnp
jno
int3
push
xchg
mov
dec
xchg
leave
into
pop
pop
rclb
push
jae
push
adc
retw
jmp
sbb
add
rclb
clc
inc
mov
xchg
sub
cmp
daa
test
jg
sub
jmp
mov
mov
jl
cmp
ja
arpl
sub
test
add
and
js
lahf
sbb
pop
xchg
jl
int3
ja
pop
push
out
imul
push
mov
xchg
fistpl
dec
jle
loope
pusha
daa
sub
or
xor
or
jp
xor
mov
mov
lods
or
and
ljmp
imul
or
lea
arpl
push
inc
or
push
inc
mov
lods
sub
clc
xchg
add
iret
es
dec
mov
jmp
cmc
and
sbb
jmp
rcll
mov
xlat
push
jo
xchg
xchg
mov
push
or
push
dec
inc
stc
mov
scas
mov
in
leave
xor
or
adc
inc
mov
in
daa
push
int
pop
fmuls
in
jl
xchg
mov
loop
mov
adc
mov
push
inc
ja
dec
sub
test
cmp
mov
repnz
je
sub
adc
fiadds
es
mov
aad
test
mov
dec
jb
jge
insb
bound
aaa
mov
jnp
in
cld
in
mov
add
or
xor
test
mov
push
xor
mov
mov
xor
clc
xchg
xor
out
xchg
add
addb
cmp
jecxz
jne
jmp
jb
adc
fiaddl
stos
clc
dec
jecxz
in
mov
repnz
adc
insl
adc
pop
loop
jnp
mov
out
pop
mov
iret
out
out
xor
fwait
sbb
cmp
aaa
lods
das
ret
sbb
jno
shlb
xor
imul
pushf
orps
mov
or
sbb
cwtl
or
lock
jmp
sti
dec
bound
into
lock
inc
dec
pop
jle
hlt
cmp
loope
ds
out
push
jno
dec
sbb
notl
imul
dec
test
repnz
icebp
sahf
insb
xor
jge
mov
test
aad
sbb
push
cmp
add
loopne
mov
cs
adc
mov
push
add
ds
int
gs
xchg
xlat
ret
sbb
cmp
iret
mov
and
sbb
jl
or
mov
push
imul
frstor
xchg
je
xchg
dec
xchg
mov
arpl
jmp
stos
xchg
out
hlt
gs
xlat
ja
push
test
xor
xchg
dec
popa
xchg
push
mov
jge
pop
loopne
mov
and
adc
sbb
inc
imul
sub
inc
or
and
out
add
pop
dec
push
mov
movsb
add
lods
out
add
insb
jae
mov
int
jle
xchg
jmp
inc
movsb
das
xor
xor
dec
cwtl
movsb
dec
and
adc
jge
xchg
cmp
jbe
test
jmp
imul
pop
lods
push
cmp
mov
xchg
xchg
fistl
dec
gs
das
pop
iret
faddl
in
xchg
mov
sbb
sbb
add
sbb
cmp
in
cld
pushf
test
or
jp
add
rcr
push
jp
sbb
je
stc
jge
in
mov
mov
or
push
mov
and
imul
fisttps
arpl
fwait
clc
rclb
add
test
mov
xchg
sbb
push
cmpsl
sbb
mov
nop
test
popa
adc
inc
daa
mov
nop
mov
xchg
mov
sarl
out
cltd
cmc
movsl
pmaddwd
cmp
pushf
cli
add
es
adc
mov
and
js
hlt
inc
bound
mov
imul
sub
lods
ja
push
sbb
mov
std
adc
aaa
lods
inc
je
leave
mov
notl
xchg
mov
inc
cmp
add
mov
cltd
cmp
fbld
jg
aad
sbb
push
xchg
call
mov
xor
xor
cmp
sub
push
lea
sub
pop
sub
mov
adc
outsb
jae
movsb
xchg
arpl
or
push
popf
xor
mov
mov
mov
pop
inc
std
ss
and
cmp
rcrl
inc
push
in
inc
ficompl
in
add
enter
fdivr
repz
adc
sbb
cmpsl
rolb
es
sub
scas
aaa
inc
lea
push
inc
aaa
pop
lea
inc
push
leave
sub
call
stos
pop
sti
or
mov
dec
adc
fdivl
out
stos
movsb
dec
cs
mov
jle
mov
or
push
add
add
sahf
mov
aas
lahf
jb
sbb
jbe
mov
aas
cvtps2pd
enter
or
les
int3
pop
pusha
pushf
scas
jnp
and
jg
ja
jnp
mov
dec
dec
int3
test
jne
insl
or
dec
imul
aaa
shll
popa
mov
xchg
stos
xchg
out
and
inc
fisubrs
add
daa
fimuls
xor
dec
aaa
stos
fistpl
sub
loope
add
fsts
and
in
xchg
shrl
aas
punpcklbw
adc
out
mov
enter
out
rorb
add
push
loope
sub
rcr
dec
icebp
out
add
lea
push
xor
movsl
xchg
ss
push
fcoml
push
and
sarb
adc
icebp
scas
and
jl
jmp
inc
cmp
andb
pop
lock
fisttps
rclb
lret
sbb
test
call
notb
or
insb
cld
repz
push
roll
jnp
mov
popf
sub
xchg
inc
mov
jmp
adc
gs
push
les
enter
test
pop
popa
loopne
and
enter
mov
inc
outsb
lea
pop
mov
sub
leave
rolb
int3
adc
ds
push
push
into
mov
in
inc
xor
and
daa
stc
dec
lds
xchg
jg
mov
jno
xchg
inc
or
aad
cmp
sbb
cmpsl
enter
das
mov
push
pop
js
ja
cs
push
imul
lods
push
xchg
test
jmp
fisttps
and
mov
roll
dec
hlt
jge
sbb
fcoms
dec
enter
fidivs
sbb
repnz
xor
sbb
dec
pushf
adc
xchg
enter
pushf
fprem1
pop
and
mov
pop
into
cs
test
jecxz
xchg
shl
fadds
in
fstps
xlat
push
sti
cmp
cmp
rcrl
lcall
shlb
loopne
xlat
sub
adc
aad
pop
xchg
pop
loope
das
ret
cmpsl
fimull
lods
and
cs
arpl
pop
decl
jo
fsubl
inc
sub
out
mov
repz
dec
mov
mov
dec
xor
imul
xchg
int
aaa
jmp
and
sub
in
ffree
mov
dec
jl
aad
jb
cltd
int
cwtl
test
push
mov
sub
scas
add
xchg
stc
in
inc
xlat
bound
das
or
mov
lret
jne,pt
mov
xchg
jl
dec
xor
fistl
or
dec
cmp
lods
dec
movsl
movsb
lret
sub
mov
lea
cmp
jg
mov
jb
add
xchg
cs
je
clc
pop
rol
out
sub
imul
sti
and
mov
pushf
push
imul
add
aad
cmc
push
jl
hlt
scas
xchg
mov
pusha
sub
les
popf
fiadds
repz
flds
push
mov
jg
sahf
sbb
das
data16
fs
out
xchg
cmp
lock
jmp
xchg
jbe
xor
repnz
pop
pusha
sub
movsb
push
xchg
insb
aam
ljmp
push
lods
test
xlat
push
cli
push
jae
xchg
and
shlb
in
mov
jp
jnp
xor
mov
js
cmp
cwtl
sub
add
clc
cmp
insl
pop
test
sub
test
fscale
loop
add
or
movsl
daa
cmp
mov
xlat
inc
xchg
mov
cmp
lock
pop
insb
mov
add
dec
pop
fs
movsb
mov
adc
sbb
mov
pop
cmp
fdivrp
xchg
jmp
xchg
gs
popa
stc
add
add
mov
mov
pop
cwtl
leave
sbb
repz
pop
jle
daa
xchg
adc
shrl
scas
adc
mov
cld
mov
imul
outsb
cmp
movsb
push
adc
add
ficoms
or
dec
pop
push
sbb
sbb
xchg
or
dec
add
lds
fistl
in
loop
movsl
and
pushf
jb
cmpl
cmc
jecxz
stos
lods
jno
adc
xor
shll
cmc
fst
mov
js
pop
outsl
in
fldl
out
xor
cli
stos
xchg
ds
sbb
jecxz
sbb
ss
pop
mov
out
dec
jno
daa
xchg
mov
fldenv
sahf
adc
imul
lahf
cmp
ja
inc
lcall
fidivl
mov
fmuls
or
pop
mov
in
push
aad
dec
xor
xchg
xchg
dec
je
dec
inc
scas
dec
sar
or
or
xchg
sub
push
mov
int
add
cmp
sub
jle
cmp
rorl
fidivl
cmc
es
mov
and
call
jecxz
orl
mov
into
sti
mov
xor
fisubrs
bnd
push
aam
out
js
in
xchg
mov
pop
pushf
sbb
inc
mov
xchg
aam
ret
xor
add
xor
jae
push
pop
repz
mov
or
enter
and
mov
or
outsb
hlt
pop
push
cltd
rcr
icebp
lock
xchg
out
cmp
cli
mov
inc
fdivl
ficoml
mov
mov
nop
pop
mov
mov
and
dec
push
ja
mov
and
add
loopne
inc
aas
movsb
fdivs
sti
pop
test
fidivrs
aas
or
shr
inc
dec
xor
ret
mov
call
aad
pop
pop
lock
lods
in
ror
push
mov
sub
js
divl
test
test
inc
cmp
adcb
shll
xchg
add
dec
sti
sbb
cmp
aas
jb
popf
aaa
mov
stos
lea
iret
aad
xchg
and
xor
imul
fimuls
xchg
gs
xchg
inc
cld
add
sbb
hlt
inc
test
pop
push
and
sbb
popa
insl
out
xor
mov
imul
xchg
mov
pop
inc
dec
test
addr16
out
sbb
stos
jecxz
outsl
sahf
mov
push
outsl
and
inc
adc
dec
fsubrl
enter
jmp
fadd
add
loopne
jne
popa
or
sub
adc
cmp
mov
popa
test
jae
imul
mov
std
xor
rclb
push
imull
test
sub
push
mov
cli
test
stos
sub
mov
sbb
mov
jae
in
test
add
insb
iret
cmp
mov
out
mov
inc
pusha
fs
push
int3
ljmp
add
das
and
ja
jp
aas
mov
stc
loopne
xor
push
xor
mov
mov
data16
jp
test
dec
cs
ficoms
sbb
adc
add
xchg
ja,pt
into
repz
loope
daa
lcall
pop
testb
push
push
xchg
mov
ja
enter
loopne
and
ja
mov
cmp
cwtl
push
push
jecxz
inc
push
faddl
mov
or
in
xchg
scas
jmp
cli
in
jmp
or
push
sub
inc
cmp
sbbb
mov
fcoml
pop
xchg
cmp
popf
and
jmp
mov
dec
add
std
fisttps
inc
xchg
loop
test
cmpsl
fmulp
insb
aaa
adc
xor
inc
cld
daa
test
lods
xchg
stos
imul
adc
cmpsb
pop
call
stos
fs
leave
rolb
aam
mov
aad
push
in
lret
push
jbe
sub
bound
pop
push
repz
cwtl
jo
scas
scas
es
ja
gs
pop
or
fidivs
and
pop
pop
add
icebp
sbb
in
jl
sub
out
cld
pop
sub
cmp
gs
adc
outsb
mov
adcb
dec
adc
cmp
push
cmp
dec
mov
cmp
js
mov
js
pop
scas
in
imul
inc
inc
pop
and
popf
sbb
add
dec
loopne
jge
into
fldt
or
ret
xor
fsubrl
pop
test
mov
lods
sub
into
arpl
in
iret
cmp
inc
or
insb
insb
rclb
xor
and
sub
js
dec
jecxz
loop
aas
sbb
in
push
mov
inc
stc
jge
js
or
popa
jbe
je
enter
xchg
mov
cmp
loopne
call
mov
lahf
mov
data16
dec
mov
std
loop
mov
fadds
inc
push
cmpsb
in
add
test
add
mov
xchg
push
or
fnstsw
inc
call
xor
aam
pop
lcall
mov
push
aam
mov
jg
mov
push
cmp
lods
jp
mov
in
or
mov
dec
push
stc
repnz
cs
pop
pop
pop
andb
or
bound
lahf
outsb
lcall
xchg
in
and
mov
in
jecxz
flds
xor
rcr
pop
xchg
pop
mov
cmpsb
jbe
rcrl
in
mov
ror
popf
rcll
cmp
push
adc
xchg
add
iret
mov
cmp
shrw
clc
inc
sub
movsbl
mov
jecxz
cltd
dec
popf
push
push
mov
clc
lret
pop
int
xor
leave
je
and
adcl
js
es
imul
inc
push
mov
inc
neg
movsl
js
enter
pop
outsl
aas
xchg
mov
pop
cli
rcll
ffreep
dec
stos
les
lret
lock
inc
mov
int3
scas
cmpsl
xor
fcom
repnz
inc
adc
lods
mov
ret
cs
push
sbb
and
les
idivl
or
sub
lret
testl
mov
pusha
pop
sti
aas
ret
popf
out
addr16
add
sbb
jnp
stos
cmc
or
clc
lods
mov
dec
cmp
stc
jle
popa
daa
inc
mov
and
dec
adc
scas
inc
mov
xor
popa
pop
iret
mov
add
and
test
xchg
sahf
add
and
xchg
out
ja
shll
and
loop
or
adc
repnz
fwait
movsl
xchg
mov
sub
push
mov
lret
loopne
mov
cmpsl
hlt
push
xchg
inc
mov
std
cmc
cltd
xor
mov
loop
popa
xchg
xor
pop
arpl
insl
push
push
addr16
lea
mov
rolb
inc
mov
imul
mov
pop
lret
mov
dec
pop
mov
mov
rol
movsl
pop
xor
or
add
jle
mov
dec
lods
sub
shll
in
or
or
ror
sbb
push
and
icebp
and
cmp
mov
mov
cmp
fstpt
inc
inc
stc
cmp
and
shll
sub
ror
cmp
sbb
mov
inc
in
add
addl
loope
cmp
jg
push
sub
cs
orl
or
daa
jl
dec
lods
cmp
xchg
mov
pop
push
out
push
stos
pop
cltd
xor
cmp
jmp
pop
pop
cwtl
pop
fwait
cmp
cmpsl
mov
cmp
in
add
mov
lods
lods
ds
jb
test
or
outsb
cmp
adc
in
int
sub
or
push
stos
jmp
repz
xorl
xchg
jg
sbb
inc
cwtl
push
nop
popf
add
pop
mov
inc
xchg
xchg
jne
inc
out
mov
ret
call
flds
mov
pop
mov
sub
cmpsl
push
add
ja
inc
in
lahf
cmpl
sub
fmul
ja
pusha
cli
mov
xchg
mov
frstor
fists
xchg
sub
mov
jb
call
mov
jle
scas
xor
push
std
sbbl
inc
shr
inc
lahf
outsl
xor
push
loop
jnp
mov
xor
and
lods
mov
out
cmp
or
int
fimull
mov
jne
inc
test
sub
daa
pusha
add
cmp
dec
push
stos
add
cs
xchg
add
mov
dec
subb
jnp
pusha
imul
and
add
pushf
out
cmpsb
mov
pop
and
push
punpcklbw
loope
gs
sbb
xlat
cmp
gs
idivb
dec
dec
xchg
sti
and
popa
sahf
mov
lea
icebp
xchg
push
imul
mov
loop
orl
jo
outsl
dec
scas
leave
inc
ja
jno
mov
mov
mov
cmp
hlt
out
jmp
pop
imul
dec
cmp
mov
aas
mov
mov
sub
sub
mov
mov
push
jmp
into
push
aam
mov
push
lods
stc
lret
scas
fcompl
xor
dec
mov
repz
fwait
mov
add
inc
das
inc
mov
imul
lret
lahf
and
shll
stos
mov
movsl
push
out
in
inc
jns
repnz
int3
cld
loopne
cmpsb
or
sub
es
adc
imulb
testl
mov
lds
stos
cmp
icebp
jl
nop
sub
or
mov
mov
data16
pop
arpl
push
das
mov
mov
sbb
dec
movsb
loop
test
mov
bsf
aas
mov
clc
and
fisttpl
test
fiadds
and
or
pusha
int3
rcrb
test
fsubr
test
fnstenv
adc
lods
xchg
sub
data16
rcrb
mov
push
dec
mov
cmp
in
mov
dec
inc
call
inc
jne
hlt
jbe
test
loope
into
into
push
or
dec
push
mov
jo
sub
mov
push
outsl
push
jmp
xchg
push
in
lcall
push
hlt
xchg
out
out
inc
call
lea
clc
jnp
mov
adc
mov
cli
or
test
aad
push
fyl2x
imul
sbb
mov
and
or
xchg
push
je
loop
mov
in
mov
mov
or
sbb
mov
add
xchg
ljmp
sub
dec
adc
xchg
out
inc
pusha
pop
es
xchg
push
test
cmp
push
call
cmp
jo
popf
sti
subl
std
push
jle
or
or
mov
into
cs
mov
stos
or
mov
pop
sub
xchg
jne
adc
aam
sbb
movsb
scas
fwait
pop
inc
sahf
stos
push
xchg
fldl
fisttpll
in
rorb
adc
adc
add
cmp
shrl
cmp
push
mov
or
sbb
adc
clc
dec
push
enter
mov
sbb
jge
icebp
outsl
cwtl
scas
dec
push
mov
mov
cld
jl
xchg
fsubrs
adc
out
xor
ret
or
add
add
movsl
mov
leave
imul
pop
xor
outsl
pop
rol
push
mov
or
xchg
out
cmc
ret
mov
and
je
mov
repnz
fs
stos
dec
push
jne
ret
lret
movsl
fdivs
stos
pop
in
push
inc
mov
cmp
or
or
push
ds
xchg
movsb
sub
cmp
jo
xor
push
push
ret
cmpl
loope
nop
xor
sbb
xchg
xor
notb
and
mov
mov
test
dec
cli
mov
mov
xlat
in
add
and
nop
mov
sarl
and
decl
mov
push
inc
pop
lods
and
outsb
insb
je
inc
daa
jp
mov
pusha
mov
mov
fcomps
push
push
in
xchg
and
adc
movsb
cmp
or
arpl
out
dec
in
addr16
add
mov
sub
inc
cltd
and
sahf
adc
mov
loopne
pop
xchg
dec
mov
xlat
mov
sbb
jl
push
mov
mov
test
out
jns
mov
out
dec
dec
test
jge
rcll
and
adc
movl
decl
int
jl
sub
mov
xlat
push
jl
push
cmp
iret
sub
xchg
lock
les
mov
aam
and
mov
adc
mov
pop
mov
add
icebp
mov
inc
mov
jae
test
cwtl
dec
add
xchg
aaa
inc
hlt
jg
cwtl
lahf
cmp
addr16
lods
push
sub
add
pop
aas
cmc
jne
mov
pushl
stos
jp
out
in
jbe
xlat
or
adc
jmp
or
xchg
fidivrs
mov
call
jae
add
push
out
sbb
pop
hlt
mov
shlb
mov
cmp
pusha
cs
xor
jp
aas
pop
imul
in
repz
test
fistps
test
imul
pop
xchg
in
dec
fs
mov
lret
jo
pushf
xchg
sub
outsl
stos
pusha
xchg
jmp
push
in
fsubr
push
xor
adc
or
push
cmp
mov
sbb
fxch
mov
scas
loop
ret
aam
mov
or
popf
pushf
jmp
mov
out
popf
fbld
or
add
sub
ss
mov
push
imul
test
xchg
jp
adc
adc
mov
fcoms
add
iret
lods
jnp
mov
push
fdivl
and
xchg
add
mov
loopne
cmp
xchg
dec
lret
out
xrelease
div
enter
push
mov
mov
sbb
loope
shlb
jp
mov
mov
mov
scas
inc
mov
jae
sbb
out
rcll
xchg
cmp
cmp
popf
mov
lods
jg
subl
xor
adc
inc
xor
cld
insl
xor
pushf
jl
scas
test
cmp
pop
repz
shlb
mov
roll
loop
imul
pop
enter
insl
aas
mov
icebp
xchg
mov
xor
fisubrl
test
sub
int3
std
adc
mov
stc
jge
arpl
jp
pop
mov
xor
sbb
sbb
push
xchg
fs
xchg
inc
in
jne
or
add
stos
jns
mov
pop
push
sbb
arpl
sub
adc
cmpsb
sbb
mov
cmpsb
or
adc
pushf
popa
xor
nop
jmp
into
jae
jo
xchg
xor
jbe
sub
fmuls
jnp
outsl
testl
aaa
or
aas
and
add
push
shll
xchg
pop
jge
es
ss
cmc
xchg
and
lds
std
aad
iret
imul
or
cwtl
in
cmpsl
lret
cmp
popf
adc
jae
jmp
jae
iret
gs
movsb
jle
loop
cli
adcb
repz
pop
or
adc
xor
subb
push
dec
xor
dec
push
pop
ss
sub
inc
mov
test
cmp
out
dec
mov
fmuls
add
popl
nop
or
cmc
cmp
mov
and
xor
ljmp
shrl
push
adc
inc
push
mov
push
dec
mov
pop
adc
dec
ret
nop
xor
stos
mov
mov
push
jno
fwait
or
enter
mov
mov
xchg
push
inc
mov
stos
cmp
sarl
add
sbb
shrl
push
outsl
xchg
xchg
jg
sub
js
sub
rcr
daa
push
xchg
dec
cmp
and
inc
xchg
dec
sarl
popf
jmp
ljmp
mov
sbb
xchg
repz
and
push
aam
xchg
push
cs
bound
stos
shrb
ja
adc
dec
jl
xchg
addb
jp
subl
dec
lret
lret
push
frstor
or
adc
and
pushf
cmpsb
and
fwait
scas
pop
mov
sbb
es
sub
ds
andl
adc
outsb
outsb
std
in
fnstcw
sub
push
movsl
mov
sahf
fisttps
dec
into
scas
cwtl
sub
inc
rcll
mov
iret
pop
mov
pop
inc
loope
cmp
into
sub
mov
lret
imul
stos
xor
push
sbb
scas
jecxz
xchg
shlb
loope
sub
xor
out
ss
testb
jl
mov
jg
xor
gs
sahf
cld
cmpl
jbe
adc
addb
in
mov
adc
out
sub
loope
jge
fiadds
repz
bound
stos
add
xchg
clc
xchg
aad
sbb
outsl
cmc
mov
mov
ficoml
out
inc
pop
xor
cmpps
xor
push
fstps
in
pop
loope
push
addr16
inc
xchg
mov
mov
lcall
sarb
aaa
ds
fistl
jmp
mov
xor
dec
insl
dec
add
fs
stos
mov
gs
stc
jb
mov
cmp
int
and
or
fisttpl
jo
jne
or
adc
into
xorl
aad
scas
ret
and
jbe
sbb
das
out
imul
faddl
lahf
imul
and
inc
nop
das
mov
mov
loope
clc
test
jg
loope
jno
in
xor
and
rcll
js
fldl
int3
lods
jmp
xor
rorb
sbb
mov
dec
mov
push
pop
shl
bound
je
jb,pn
mov
stos
dec
insl
add
cld
cld
adc
imul
lret
or
fsubl
gs
repnz
sub
sti
and
cmp
mov
stc
aad
dec
sub
loope
xchg
jne
pop
mov
test
orl
mov
test
repz
mov
mov
notl
mov
cwtl
imul
sub
adc
push
cmc
xchg
mov
js
arpl
shlb
call
mov
jbe
mov
add
hlt
cli
xor
jbe
mov
fnsave
xchg
mov
or
push
loope
pushf
cmp
lods
jb
push
je
daa
and
jmp
test
xor
pop
cmp
or
ret
mov
xchg
xchg
enter
adc
jle
ret
jmp
mov
mov
add
or
inc
inc
mov
sub
gs
inc
xorb
fdiv
out
cltd
in
xchg
sub
push
mov
cld
jmp
movsl
sahf
xchg
ret
movsl
mov
sub
sbb
xchg
push
adcl
fwait
pop
mov
lahf
in
and
fmulp
inc
push
dec
loop
pop
mov
cwtl
push
jmp
xor
sbb
jp,pt
pop
lea
mov
pop
or
mov
ret
push
xchg
push
mov
popf
mov
ficompl
mov
das
data16
dec
xor
sbb
in
pop
xchg
sbb
fs
jbe
jno
dec
mov
pop
rcr
xchg
sub
mov
cs
jbe
mov
xlat
test
pop
mov
aad
rclb
cmp
dec
sbb
cli
shrl
jmp
cmc
pop
cmp
sub
aam
lret
shrl
stos
cltd
cmc
fwait
push
aam
jbe
cmp
adc
hlt
add
mov
divl
insb
or
fnsave
leave
sub
xchg
xlat
sbb
out
addl
adc
inc
aaa
test
out
cmp
cltd
dec
popa
mov
loope
imul
mov
call
or
cmc
notl
repz
push
xchg
ss
jbe
pusha
cwtl
pop
mov
jp
jbe
sti
sbb
arpl
xlat
add
pop
push
gs
xchg
les
cmp
push
dec
pop
pop
mov
xchg
xor
xor
and
adc
iret
xor
movsl
add
inc
pop
cli
sub
xor
xor
icebp
xchg
dec
jmp
pop
or
fistpl
mov
mov
sbb
push
xchg
pop
jge
sub
jle
rolb
in
pop
out
mov
movsb
pop
cmp
cld
push
mov
xor
xchg
dec
shr
les
mov
stos
das
scas
mov
popa
insb
test
or
out
loop
in
outsl
or
mov
jmp
cwtl
fcmovnu
cmp
sbb
adc
add
rcl
xchg
test
pop
lcall
int
add
cwtl
idivb
push
in
inc
es
data16
imul
or
cwtl
test
cld
push
adc
cmc
jle
pushf
jb
sbb
je
ret
mov
or
push
cltd
bnd
pop
imul
cmp
mov
or
mov
adc
and
jb
loop
sub
sbb
ljmp
cmpsb
dec
and
jle
lods
stc
sbb
movsl
add
rcr
scas
aad
pop
or
push
mov
insl
call
sbb
lret
mov
inc
pop
stos
ret
testl
out
push
lods
jnp
test
mov
dec
test
lcall
jmp
push
push
repnz
xchg
push
mov
cmp
push
inc
mov
mov
test
add
push
clc
pop
je
js
or
xor
popf
test
push
sbb
repnz
add
xchg
pop
sub
jo
or
or
rcrl
in
mov
stos
cmp
mov
pop
mov
stos
jne
mov
xchg
mov
sub
orb
dec
mov
or
das
pop
add
mov
andb
je
mov
dec
lods
loopne
popl
sbb
push
xchg
xor
cli
jb
add
lods
imulb
and
sahf
xchg
add
lahf
mov
dec
xor
sub
xor
jg
popf
adc
lock
mov
test
jbe
adc
xchg
pop
xchg
iret
jge
jl
push
sarb
add
inc
lret
and
jae
adc
es
dec
mov
decb
dec
mov
iret
or
leave
mov
es
dec
es
inc
stos
push
ficomps
in
xchg
out
and
xchg
sbb
rcll
test
push
dec
daa
stos
dec
enter
xor
rcrb
sub
sub
xor
addr16
or
xchg
or
pusha
popf
add
out
sub
cmp
jecxz
test
in
pop
mov
or
test
inc
sub
pop
pop
jne
cmpsb
jb
rorb
cli
rorl
sbb
inc
popf
movsb
xchg
xor
push
add
xlat
dec
mov
mov
bound
sub
arpl
fwait
or
jnp
out
fs
shlb
and
movsl
scas
fs
sahf
inc
or
ret
ja
sub
sbb
xchg
mov
in
roll
sbb
rorb
mov
sti
mov
xchg
pop
mov
mov
mov
pop
sahf
pop
jae
outsb
xchg
dec
push
lods
adc
inc
adc
loopne
fidivrl
or
test
insl
not
add
xor
pop
mov
xor
fst
mov
pusha
jae
jne
push
push
repz
xor
test
adc
push
test
dec
mov
cmpsl
orl
sbb
push
xchg
dec
pop
jge
hlt
pop
mov
jle
cld
add
dec
push
into
adc
pop
push
or
sub
sahf
rcrl
int3
push
add
xor
dec
mov
out
rcrl
jecxz
fidivrl
sub
push
xor
notb
dec
les
or
mov
ret
addr16
das
test
xor
and
inc
add
xor
shll
das
jecxz
or
adc
aad
data16
outsb
push
test
pop
outsl
lods
ljmp
pusha
mov
jae
push
mov
aam
cmp
cltd
mov
push
cmpsl
or
push
or
rcrb
psrlw
subl
sbb
push
xchg
scas
dec
adc
xor
and
leave
lret
jbe
enter
fisubrs
mov
pop
popf
icebp
dec
iret
sub
sbb
and
es
call
ret
stc
mov
rolb
adc
testl
xchg
adc
push
test
mov
lahf
mov
cmp
add
das
lret
or
ljmp
push
enter
xchg
repnz
pop
inc
pop
xchg
pop
fimull
daa
pop
fbstp
inc
push
rcrb
repz
sub
daa
mov
push
sub
gs
outsl
xorb
xchg
movsb
xchg
cmp
cmp
out
xchg
cs
xchg
xchg
add
movsl
fmuls
xchg
cmp
leave
arpl
push
mov
mov
jg
jo
fnsave
cmp
shll
jae
insl
jmp
pop
jno
pushfw
in
cmp
jns
xor
stc
sub
repnz
loop
xor
flds
sbbb
inc
mov
cmpsl
imul
and
imul
lahf
clc
cmp
cmp
mov
sub
in
push
inc
ljmp
loopne
cmc
fcmovbe
icebp
cmp
push
jmp
mov
mov
xchg
out
push
xor
xor
jnp
push
leave
sub
inc
les
pushl
dec
movsb
mov
mov
mov
pop
mov
pusha
xchg
mov
scas
cmpsb
jp
sbb
adc
ljmp
push
inc
in
adc
sbb
scas
or
call
addl
mov
push
sahf
lea
jge
mov
cmp
jg
lock
push
xorb
xchg
jo
lods
mov
xchg
mov
mov
mov
repz
js
das
aam
in
cmpsb
adc
jl
dec
testl
jnp
xor
add
into
ret
scas
jg
pop
data16
adc
dec
stos
std
loop
inc
clc
aaa
pop
inc
sbb
popf
imul
or
jo
ja
orb
test
clc
mov
into
jg
pusha
pop
adc
out
lea
out
mov
and
fadd
cmp
into
pushf
daa
push
inc
loope
lods
and
sti
inc
or
push
fsub
repz
pop
sti
cmp
mov
pop
out
fiaddl
lret
mov
xchg
nop
int
or
cmp
insb
sub
inc
jbe
push
test
or
xchg
lret
loopne
repz
lret
das
mov
mov
inc
daa
fcmovnbe
ja
ret
gs
cmp
sahf
xor
xchg
incl
sub
ret
sahf
fsubrp
lock
shlb
fst
mov
stos
rol
nop
pop
and
arpl
in
fbstp
aas
xor
sub
mov
out
or
cmp
ja
adc
mov
fadd
out
das
push
dec
icebp
cmpsb
addr16
xor
clc
xor
fidivl
mov
or
inc
xor
outsl
jl
stc
ret
imul
test
or
pushf
inc
adc
insl
movsb
xchg
pop
adc
inc
cli
pop
ljmp
cs
cmpsl
out
pop
sahf
mov
fldenv
mov
xchg
rorl
inc
cmp
hlt
test
jmp
test
lods
popw
mov
push
fwait
out
movsl
and
mov
push
sub
adc
hlt
fdivrl
fcmovb
mov
mov
jno
adc
int
lods
dec
js
add
pusha
mov
push
inc
cmpsl
stc
lods
or
ret
xor
shlb
xchg
int
fidivs
push
in
lds
out
sbbb
sbb
insb
inc
sbb
push
cwtl
inc
or
icebp
and
loopne
push
jle
push
fisubl
push
outsb
inc
push
inc
dec
orl
and
mov
adc
cmc
xor
mulb
sub
loopne
xchg
int
sub
add
jg
and
jne
mov
mov
xchg
das
mov
pop
inc
lret
lahf
lcall
sbb
fdivr
or
in
enter
cltd
ficoml
fsubrl
cs
scas
mov
in
scas
mov
pushf
lds
roll
mov
fsubl
sbb
sbb
scas
mov
call
jle
out
bound
mov
sbb
sub
cmp
add
sbb
inc
outsb
cld
dec
shll
xor
push
dec
xor
negb
roll
and
mov
push
in
xchg
fwait
rcl
mov
cmp
mov
jge
sub
outsl
sbb
mov
and
sbb
cld
dec
out
mov
push
dec
loop
sbb
pop
leave
add
lds
movsb
addr16
push
lds
subps
jo
femms
lea
mov
in
mov
sahf
mov
lea
or
movsb
mov
sbb
mov
push
cmpsl
sub
inc
xchg
xchg
fsubr
fsubs
jmp
jne
dec
xor
inc
scas
add
xchg
scas
xor
cmp
popa
xchg
enter
lds
xor
dec
jecxz
sub
pop
xchg
adc
jmp
pop
sbb
xor
scas
inc
lds
push
push
cmp
inc
loope
mov
mov
xchg
icebp
cli
mov
mov
lret
fsubrl
xchg
int
pop
scas
dec
sub
je
sub
inc
push
andb
sarb
cmpsl
adc
dec
in
dec
adc
mov
rol
cwtl
les
pop
push
or
pop
and
fs
adc
notl
ss
inc
mov
or
bound
loope
adc
pop
mov
shr
push
xor
dec
shrl
cmc
cmp
xchg
insb
stos
dec
in
insl
sbb
or
push
arpl
jl
sub
js
mov
aad
and
repnz
or
fs
cld
mov
fstl
push
push
xchg
add
xor
inc
and
lahf
rcrl
popa
jns
add
pxor
cmc
jae
jge
add
repz
sbb
divl
mov
out
cmc
aas
jns
scas
mov
cmpsl
push
jp
lcall
stos
ret
push
dec
stc
fiadds
jb
xor
mov
jae
ja
and
lcall
int3
or
es
outsl
rcr
insl
enter
xchg
mov
fildll
es
xchg
push
jne
add
out
repnz
addr16
cmp
ds
xor
jne
jp
mov
aad
out
ret
mov
mov
fisttpl
push
pop
sub
stos
mov
movsb
dec
pusha
scas
add
lcall
jp
cmp
push
push
pop
hlt
sbbb
mov
inc
data16
shr
push
in
rdmsr
inc
pop
pop
aam
cltd
ss
in
fdivrl
shrb
jno
xchg
adc
loop
fwait
sbb
test
imul
imul
cmp
mov
adc
xor
test
mov
andb
fcomp
jp
mov
popa
jae
mov
cmpsl
mov
xchg
adc
out
or
sub
sbb
loop
aas
js
inc
adc
ja
and
out
cmp
pop
movsb
fs
imul
idivb
insl
and
inc
jno
sub
gs
into
testb
jmp
mov
jns
fs
lahf
sub
adc
adc
fdiv
hlt
jb
int3
mov
je
pop
mov
movsb
jp
mov
popa
incb
push
aas
rorb
add
enter
mov
ret
hlt
daa
adc
lret
sub
xor
cs
xor
out
loope
xchg
push
and
dec
ss
loopne
xor
mov
xorb
mov
aad
xchg
xor
daa
xchg
enter
adc
xorl
cmp
inc
clc
and
and
xor
imul
shlb
push
pop
cltd
cltd
ss
xor
inc
and
rcrl
mov
add
sub
mov
test
jae
push
pop
and
sub
outsl
call
jl
movsb
push
adc
jbe
addr16
mov
mov
push
push
adc
outsl
in
in
cld
mov
fistpl
ds
movsb
cltd
mov
sub
fsubl
dec
dec
ret
dec
ljmp
fldenv
adc
inc
jb
cwtl
inc
jl
jb
push
jg
mov
cmp
daa
or
push
and
push
pop
dec
pop
sbb
or
arpl
jne
cld
std
jb,pt
daa
dec
mov
add
loop
std
xchg
pop
outsl
lods
pushf
jecxz
mov
pop
movsb
xchg
dec
fcmove
int3
xchg
xchg
fs
rorl
inc
int3
jmp
pop
add
jbe
pusha
sub
dec
mov
pushf
sbb
dec
outsb
inc
and
aad
xlat
cmp
pushf
and
cltd
and
adc
aam
ja
mov
push
push
ljmp
test
outsl
shlb
xchg
stos
leave
xor
add
pop
shrl
jb
icebp
ret
adc
test
arpl
lods
push
dec
fbstp
inc
jne
sub
pop
cmp
repnz
adc
movsl
inc
push
xor
lahf
repnz
bound
loopne
dec
push
dec
pop
jbe
popf
sub
jmp
mov
mov
xlat
loop
mov
or
xor
fists
jp
dec
dec
popa
jno
sbb
xorb
or
mov
add
add
insl
and
pop
fbstp
in
add
and
mov
incb
xchg
fildll
cli
daa
and
lods
in
and
popf
or
cmpsb
cli
int
cmpsb
xor
outsl
bnd
lods
sub
int3
mov
inc
mov
push
testb
mov
sarb
faddl
bound
insb
push
movsl
xchg
out
loop
repz
mov
mov
lods
xchg
mov
fadd
mov
subl
cmc
adc
outsl
leave
and
enter
cmc
lret
mov
inc
ficoml
push
mov
out
into
push
sub
push
outsb
repnz
arpl
mov
daa
fsub
and
or
mov
and
inc
pop
sbb
jnp
in
sub
xchg
sub
call
out
loope
push
in
add
inc
lret
mov
and
test
inc
cmp
pop
cmpsb
mov
sbb
sbb
in
mov
outsb
imull
cmp
inc
adc
adc
sub
mov
sub
repnz
xlat
stos
stc
arpl
mov
enter
insb
int3
lds
cmpsb
call
jp
sub
cs
push
out
inc
push
sbb
mov
loope
imul
mov
xchg
dec
mov
mov
xchg
ret
ljmp
arpl
in
daa
mov
andb
in
test
push
stos
sub
in
sar
pop
mov
mov
xchg
btr
rcll
test
ret
adc
iret
sti
mov
xchg
mov
stos
test
pushf
cmp
lea
cmp
push
loope
cmpsl
xor
lret
sub
sti
test
fildl
fcompl
jle
hlt
adc
jle
inc
mov
push
cmpsl
cmp
pop
xor
or
cmpb
xor
lods
jno
fldcw
ja
insb
in
clc
pushf
ljmp
pop
ja
imul
mov
sub
or
mov
jecxz
xchg
adc
outsb
sub
mov
gs
pop
pop
mov
mov
cmpl
imul
push
sbb
dec
xchg
adc
push
pusha
popaw
jl
shlb
pop
inc
push
pop
mov
enter
cmc
xor
cli
shrl
insl
push
push
stos
test
mov
jle
movsl
fidivs
cmpsb
aam
in
jmp
sti
out
popa
lods
pop
ja
int
sbb
push
pop
push
add
cmp
popa
and
test
rcll
sbb
outsl
lock
mov
out
add
cmp
fcomps
pop
in
les
and
out
je
add
btr
xchg
scas
pushf
mov
fs
aas
subl
jbe
sbb
dec
and
shll
push
xchg
loop
imul
ret
jae
push
pop
lods
mov
cmp
add
js
and
sub
lahf
mov
leave
into
fsts
roll
sbb
leave
mov
icebp
addl
push
jmp
xchg
ds
pusha
xor
sub
mov
cld
daa
or
sub
int3
ds
jp
ds
inc
or
and
out
mov
push
out
outsb
scas
rol
mov
movsb
movb
push
andb
imul
push
cmpb
mov
mov
xor
push
cmpsb
aaa
imul
mov
sub
jno
adc
jge
push
shlb
je
sub
xchg
dec
xor
mov
push
jb
fs
add
sbb
je
sbb
pop
movsl
add
rcrb
xor
lahf
insl
add
xor
cmp
sbb
pop
dec
mov
movsl
stc
rcr
repz
mov
mov
or
shlb
jnp
mov
lock
fistl
icebp
rorb
cwtl
testl
pop
jmp
xor
inc
pop
mov
mov
imul
mov
jno
stos
leave
popa
sub
clc
repnz
pop
in
in
mov
cmp
int
xor
fidivrl
in
cmc
jnp
push
jecxz
lret
inc
call
cmpsl
mov
fidivrl
hlt
or
cmp
push
scas
repnz
or
shrl
sarl
das
in
in
mov
test
mov
jge
bnd
mov
dec
push
jo
scas
mov
lods
clc
add
cmp
xor
test
push
jge
mov
jecxz
stos
rorb
fadd
aaa
es
shll
shr
addr16
pop
pop
cltd
mov
lahf
pop
movsl
xchg
push
mov
mov
mov
out
cmpsb
mov
cmp
sub
or
cmpsl
movsl
add
in
daa
inc
add
js
push
push
and
lds
fistpl
into
stos
pop
mov
inc
cmp
inc
ljmp
push
out
inc
pop
mov
pop
xchg
sub
mov
fwait
sbbb
cld
pop
fisttps
dec
jge
pop
mov
and
xor
rorb
lods
loopne
dec
xor
scas
fbld
les
lock
adc
dec
in
dec
cmp
gs
insl
inc
xor
jp
sbb
scas
test
xor
jl
mov
mov
pop
sbb
test
sbb
pop
mov
jecxz
in
mov
into
je
cmp
cmpsb
fwait
pop
test
mov
subl
xchg
xor
mov
sbb
xchg
mov
sub
jle
cmp
pop
icebp
gs
jne
dec
fwait
outsb
cli
sti
in
ds
xchg
sub
jp
xchg
xor
fsubrl
and
rolb
testl
fildll
in
stos
pop
mov
loop
jbe
jecxz
mov
push
inc
jecxz
icebp
popf
mov
cmpsb
sub
mov
xchg
xor
shrl
jle
fists
cmpsb
cmpsw
and
lods
iret
add
mov
xchg
int3
cld
mov
cmpsl
movsl
push
pop
xor
enter
mov
xchg
push
movsb
pop
mov
push
daa
lock
cmpsl
mov
mov
mov
in
fildll
gs
xchg
repnz
test
dec
iret
dec
jp
sub
frstor
dec
add
ficoml
mov
ss
add
jae
xchg
stos
add
mov
inc
inc
cmpsl
cltd
mov
push
int
leave
mov
aad
jmp
shll
pop
push
repz
subb
sub
repz
mov
std
xchg
mov
in
in
pop
cld
sub
dec
xor
jmp
mov
inc
test
gs
test
scas
ja
lret
das
cmp
mov
pop
cmp
scas
scas
mov
mov
int
in
scas
cld
outsl
and
xor
push
fsts
jne
leave
add
inc
loopne
adc
js
icebp
sub
int3
mov
je
sub
sub
call
pushf
xchg
push
sbb
pop
add
sub
ja
dec
dec
push
test
inc
je
pop
pusha
push
jo
mov
pop
and
pop
push
mov
push
push
loopne
xor
imul
aaa
jle
xor
and
shrl
push
xchg
scas
fcmovnb
push
insl
mov
fucom
inc
push
mov
jns
ret
icebp
cwtl
andl
add
xor
cmp
and
inc
mov
pop
mov
lea
xchg
or
inc
sub
lret
push
mov
mov
mov
lea
jl
sbb
mov
test
shrl
lret
mov
push
adc
ret
in
mov
dec
sbb
ja
cmp
jle
mov
enter
outsb
pop
int3
mov
mov
push
in
mov
mov
or
gs
pop
insb
fwait
clc
adcb
cli
push
xlat
inc
decl
dec
and
and
aaa
xlat
and
aaa
test
lahf
pop
dec
pusha
mov
and
nop
xor
into
xor
enter
and
adc
sub
mov
cmpsb
arpl
lock
pop
je
xchg
cmp
pop
cmp
icebp
dec
mov
cli
pusha
push
push
xor
dec
in
mov
not
popa
sbb
pop
cmp
popf
clc
xchg
xor
mov
adc
cmc
sub
jge
mov
pusha
inc
sub
je
add
lcall
movsb
sub
mov
dec
push
dec
xchg
add
insb
pop
mov
mov
sbb
adc
and
adc
out
add
mov
int
popa
popa
lahf
mov
push
cmpl
pushl
sbb
je
mov
lcall
cwtl
imul
mov
sbb
push
ljmp
aam
xchg
push
add
call
or
sub
mov
cmp
cmpsb
sub
pop
pop
jns
icebp
cmp
jg
adc
adc
cld
outsl
imul
mov
cmp
adc
mov
xchg
or
xor
imul
adc
dec
test
rolb
cmp
mov
xorb
push
add
jne
outsb
sub
jle
xchg
outsl
mov
in
jbe
mov
jns
roll
sbb
outsb
dec
scas
sub
mov
paddq
cld
and
push
arpl
cmp
jbe
jnp
stos
in
jp
jmp
in
jecxz
cmpsb
mov
inc
aas
cmp
imul
scas
lea
aas
pop
pushf
es
sbb
movsl
pop
movsl
loope
inc
pop
xchg
xchg
mov
jle
mov
mov
les
xchg
shlb
gs
movsl
fsubrl
push
movsl
dec
sub
cli
inc
or
push
add
add
inc
icebp
int
adc
in
lahf
icebp
into
cmc
int3
mov
adc
in
outsl
iret
jmp
lahf
pop
inc
inc
insl
xchg
dec
xorb
inc
loop
add
mull
jge
jmp
mov
pop
mov
sbb
divl
dec
outsl
cltd
xchg
stos
mov
insl
cmc
lcall
dec
pop
dec
test
int
jp
pop
sbb
pushf
push
cmp
sub
fidivrs
insb
scas
fstpt
cmp
mov
out
imul
enter
ljmp
mov
loopne
pop
add
mov
enter
mov
sbb
insb
push
cmp
push
ds
push
and
and
shl
cmp
pop
imul
sahf
fwait
adc
and
xchg
mov
push
jg
andb
aam
mov
movsl
pop
pop
pushf
iret
iret
cmp
sub
popa
pop
pop
push
fisttps
test
aaa
lcall
scas
aam
std
lods
imul
es
push
stc
test
pop
adc
cmp
ss
adc
mov
insl
insl
pop
mov
rol
mov
fwait
or
inc
lret
sar
es
pop
insl
dec
mov
xor
sbb
pop
dec
lcall
setbe
fmul
add
test
shrl
testl
lea
mov
mov
sbb
in
fisttps
movsl
pop
xchg
jo
dec
dec
or
pop
fsts
sub
mov
cmc
pop
in
mov
adc
in
push
lahf
pop
xchg
data16
call
fdivl
loop
cmp
push
pmaxub
adcb
mov
xlat
mov
psubusw
cs
mov
and
aam
data16
push
insb
mov
lock
and
push
or
fcmovbe
add
add
push
fwait
stc
push
mov
iret
or
enter
loop
mov
jmp
sub
cmp
je
imul
fwait
int3
xchg
xchg
push
mov
pop
sub
fs
pop
lock
jle
fnstcw
sbb
cmp
xchg
aaa
add
cmp
inc
or
and
pop
mov
cli
xchg
dec
jmp
enter
lea
call
push
popf
insl
ljmp
stc
lret
jo
popf
test
jmp
xor
push
mov
aas
imul
fdivrl
shrl
xor
into
jl
idivl
leave
mov
lahf
test
in
pop
fdivs
add
out
lea
int
sahf
outsl
shl
xchg
xlat
cmp
pop
cltd
insl
cmpsl
gs
dec
cmpsb
nop
mov
dec
adc
stos
pusha
in
in
pop
cld
mov
sbbl
test
mov
sbb
fisubrs
repz
jns
data16
cli
out
in
push
stos
xchg
jns
mov
xchg
loope
lret
bsr
cmpsl
repnz
mov
scas
jp
lock
gs
cmp
scas
jmp
cmp
inc
test
stc
mov
or
lret
fcom
lret
cmp
inc
xchg
add
shlb
dec
jmp
repnz
es
or
into
repz
aad
xchg
repz
imul
outsl
mov
lea
xchg
mov
add
cltd
addr16
mov
sub
jnp
mov
pusha
xor
jo
dec
adc
xchg
sub
xchg
aam
dec
adc
in
or
cwtl
scas
scas
loopw
and
out
rcl
mov
mov
mov
out
mov
addb
imul
inc
in
jmp
or
push
sub
add
push
aaa
and
pop
stc
out
test
xlat
xchg
popa
pop
xor
xor
in
ljmp
fiadds
pop
cmpsb
clc
lret
subl
imul
inc
pusha
out
aad
mov
xor
scas
aad
jb
jo
adc
add
mov
and
popa
lods
mov
test
add
ds
ja
sbb
cmpsl
lcall
pop
mov
int
lahf
jge
pop
jge
std
jge
xor
mov
xchg
mov
loope
add
pop
lcall
or
push
dec
push
add
sub
adc
loopne
or
fs
cltd
pop
das
inc
push
ds
mov
rclb
pop
cmp
or
jae
js
push
scas
icebp
clc
das
ss
das
sub
xchg
push
pusha
fstpt
pop
pop
scas
fistps
xlat
int3
scas
lds
mov
jns
push
hlt
fwait
push
in
jns
push
add
push
mov
push
jno
add
enter
adc
jge
push
jp
lods
sub
dec
or
lods
xor
jmp
xlat
cmc
cmpsb
lods
lret
xchg
push
insb
cmp
adc
jge
sar
es
push
jle
mov
pop
or
jge
negb
push
cmpsb
iret
dec
inc
sti
mov
cltd
push
adc
fsubr
jo
loopne
xor
push
xchg
data16
shll
arpl
inc
xor
fwait
and
sub
or
inc
mov
ret
iret
push
cwtl
push
scas
sub
mov
xor
shrl
sub
dec
fstpl
sbb
adc
sbb
mov
out
cli
xchg
stos
inc
push
lods
sub
and
cmp
sbb
inc
loopne
cltd
pop
xchg
mov
lock
out
sbb
add
lods
jno
mov
add
inc
dec
loopne
or
push
cmp
inc
jb
mov
xchg
pusha
cwtl
aaa
mov
jl
lea
mov
lock
cmpb
pop
gs
ret
pop
cmp
into
push
sub
pop
lret
push
fnstcw
adc
push
in
pop
pusha
dec
sbb
add
lock
and
push
cmp
fwait
sbb
mov
in
in
xor
pop
les
dec
adc
dec
push
shl
loope
and
and
add
into
and
cmpsl
mov
test
les
icebp
andl
popf
pop
gs
mov
jb
mov
dec
fcoms
in
cli
mov
push
shll
sbb
repnz
push
arpl
mov
adc
sub
dec
and
mov
or
out
add
pop
pop
xchg
imul
add
cmpsl
or
jo
or
add
jecxz
sub
and
pop
ret
aam
cmp
test
cmp
jo
mov
leave
out
fnstcw
test
and
outsb
sub
xchg
mov
js
lock
out
push
pop
in
push
loop
xchg
adc
lcall
and
imul
imul
sub
push
sub
stc
and
pop
cmp
es
cli
mov
lds
mov
add
cmc
les
lods
jmp
aad
repnz
inc
lret
ss
sarl
dec
pop
shll
xor
or
jno
or
test
push
repz
mov
mov
pop
pop
loope
iret
or
outsl
mov
sbb
loopne
repz
scas
subl
push
jne
jns
add
ret
cmc
cmc
push
push
dec
sbb
lods
or
mov
cmpsb
xchg
adc
mov
sub
cmp
adc
lcall
loope
movsb
mov
lcall
shll
pusha
and
jg
xchg
les
jecxz
lea
mov
pavgb
pop
jns
add
arpl
shrl
push
mov
mov
jbe
lcall
and
mov
or
dec
testb
aaa
rol
push
das
arpl
push
subl
call
daa
cld
popf
jmp
sub
and
sub
std
mov
enter
cmp
adc
dec
push
lret
cmpsb
jne
cmc
pop
ss
or
push
in
mov
repz
insb
xchg
sbbb
dec
fbstp
inc
dec
jle
mov
sbb
std
sub
or
mov
data16
fnstcw
mov
scas
rcrl
mov
sbb
cmp
mov
jo
lds
cs
or
popa
pop
jns
loopne
push
leave
inc
sbbl
inc
mov
cmp
fdivl
adc
das
arpl
scas
mov
cmc
ret
add
in
std
cmp
jmp
lret
rcrl
js
roll
ret
inc
std
or
pop
cmp
mov
repnz
mov
data16
dec
push
and
out
inc
pop
sbb
out
idiv
inc
pop
mov
mov
mov
nop
fwait
mull
push
mov
es
xchg
fwait
in
es
add
mov
aaa
imul
sbb
add
lret
mov
mov
inc
jg
loope
rclb
jbe
xchg
incb
inc
mov
push
push
xchg
sbb
nop
out
or
jno
mov
xor
into
out
ret
push
mov
js
sbb
in
lahf
pop
test
mov
movl
divl
mov
out
das
leave
cmp
cwtl
mov
jo
jl
push
pop
xchg
pop
xchg
sarl
mov
orb
arpl
jno
or
add
test
xchg
mov
jbe
pop
and
jg
inc
aad
push
fisubs
push
imulb
adc
arpl
or
adcl
pop
call
mov
fcomps
or
icebp
cltd
and
push
fcoms
pusha
xchg
and
es
push
dec
or
mov
lea
aas
dec
iret
mov
fwait
mov
sub
aaa
dec
int3
adc
mov
and
adc
add
push
mov
xlat
das
lods
shll
stos
xlat
push
rclb
js
scas
add
jge
pop
adc
dec
pushf
cltd
rcll
push
mov
out
xchg
jns
in
jmp
pop
mov
adc
sar
cmc
rorl
cmpsl
shl
sub
adc
inc
sub
mov
adc
xchg
fwait
mov
test
push
or
ljmp
mov
jge
sub
int
test
jmp
push
shlb
mov
cltd
lcall
sarl
imul
repz
inc
in
mov
jbe
dec
fstp
pop
testb
push
jmp
push
adc
jp
mov
inc
push
es
les
stos
push
xchg
cmp
rclb
inc
js
inc
fldl2e
dec
je
and
lock
arpl
sub
lds
mov
mov
scas
pop
data16
daa
mov
mov
andl
repnz
out
xor
xchg
xor
push
lock
push
xchg
adc
sub
dec
out
fwait
mov
push
and
fistl
cli
and
sub
jg
sub
fld
push
pop
inc
push
dec
ja
test
mov
fcmovu
in
sub
divb
jg
test
inc
xor
sub
mov
push
push
push
sahf
mov
fucomp
inc
js
test
xchg
adc
ret
pop
mov
sbbl
movsl
pop
add
or
arpl
mov
fiadds
iret
push
gs
sbb
sbb
jecxz
or
cmp
or
jne
aad
cltd
lods
sar
pushf
aaa
int
xchg
dec
cmp
lret
xor
pop
loope
adc
push
or
outsl
bnd
inc
mov
enter
sbb
push
das
mov
lods
sbb
sbb
fisubs
pop
mov
outsb
mov
popf
movsl
ljmp
mov
out
mov
sub
scas
js
cmp
test
rcll
mov
push
mov
es
jmp
jmp
jo
add
mov
mov
inc
jae
mov
inc
and
inc
jae
fistpll
lret
adc
call
sti
pop
xor
notl
cltd
sub
sbb
in
ds
outsl
push
mov
sahf
cmpsb
mov
fadds
dec
int
push
pop
fwait
es
push
aas
insl
rclb
rolb
insb
pop
mov
mov
ret
frstor
push
adc
sti
ds
or
mov
in
stc
loopne
repz
cld
xor
xor
adcb
std
leave
jg
incb
jl
lcall
jl
stc
jge
cltd
insb
mov
mov
mov
sub
mov
hlt
dec
and
popa
mov
cmc
lock
cmp
xchg
sbb
jmp
mov
rcll
mov
pushf
lret
inc
mov
jle
int3
sub
loop
sahf
mov
enter
xchg
fnstenv
call
lahf
aaa
fisubrs
int
sbb
inc
mov
ss
fldl
dec
fsubr
cli
es
cmp
and
push
xchg
popf
push
dec
mov
in
push
mov
push
and
sti
add
mov
jecxz
sbb
mov
shlb
rorl
rcr
sub
or
mov
fwait
inc
rcrl
shr
or
loop
mov
push
loopne
mov
lcall
and
mov
loope
jbe
repnz
xchg
cmpsl
sbb
lret
dec
mov
enter
cwtl
xchg
and
mov
shl
bound
lahf
cli
jae
in
rolb
sahf
ds
xchg
jae
aas
lret
pusha
in
cmpsb
jae
add
leave
shlb
daa
out
loop
pushf
repnz
ja
cmp
testl
leave
sbb
ds
jns
mov
sahf
mov
mov
sub
je
fidivs
nop
inc
stc
add
leave
or
dec
cmpl
add
mov
das
shlb
cmc
dec
roll
mov
add
inc
lret
xor
shrb
sub
jo
pop
push
dec
xor
leave
cmp
mov
push
popa
rorl
mov
inc
or
decl
dec
divb
mov
nop
lret
push
mov
sub
ja
pop
sbb
mov
test
xor
add
dec
mov
mov
adc
fistl
dec
adc
cwtl
xor
adc
inc
hlt
cmp
mov
mov
outsb
xor
iret
in
xor
or
ret
adcb
mov
addb
loopne
pop
push
push
xchg
mov
adc
popa
xchg
aas
sub
mov
test
out
cwtl
cwtl
sbb
push
mov
push
pop
imul
push
stc
dec
leave
push
cltd
movsl
and
int
into
jno
clc
cmc
pop
mov
repz
sar
test
cmp
or
sbb
shlb
sub
shl
or
and
fcoms
das
inc
sbb
jp,pn
loopne
add
push
inc
mov
xchg
inc
jno
jp
lcall
jp
inc
cmp
mov
sarb
je
cmp
cmp
outsl
nop
outsb
or
nop
ljmp
or
mov
push
inc
or
sbb
enter
and
test
fcoml
pusha
jecxz
cltd
andb
xchg
movsl
out
aad
sub
inc
adc
push
pusha
lahf
adc
push
stc
cmc
sbb
add
loope
std
pop
movsb
mov
mov
lret
fmuls
push
xchg
pushl
invd
pop
cs
jae
iret
leave
jp
lcall
mov
fwait
das
fucom
and
lock
imul
mov
xchg
addb
cli
sbb
test
pop
push
sub
movsb
mov
mov
xor
sbb
insb
aaa
xchg
cli
sbb
stc
lret
cmc
mov
xchg
nop
ret
bound
sub
in
sub
out
dec
dec
push
movsb
pusha
jg
and
divb
xchg
adcb
pop
imul
dec
fwait
inc
xor
xchg
xor
lret
test
jecxz
mov
add
sar
xor
ljmp
test
pop
lods
jecxz
lahf
xchg
and
data16
repz
mov
lcall
inc
fnsave
clc
sbb
add
repz
fisubrs
jbe
inc
xlat
ds
xlat
pop
lea
xchg
fs
sub
jg
xor
in
stc
xorl
jbe
pop
mov
sbb
iret
or
outsb
out
pop
adcb
out
inc
sbb
dec
sbb
popf
add
xlat
add
mov
pop
jns
sahf
mov
jp
xlat
jmp
imul
sbb
dec
jne
sub
out
jmp
pusha
int3
int3
in
inc
into
out
hlt
es
out
dec
lea
dec
mov
inc
leave
idivl
mov
or
addr16
enter
sti
or
rol
repz
jmp
pop
push
call
scas
sarl
push
in
and
ljmp
inc
and
and
dec
sbb
xchg
mov
mov
pop
lahf
test
dec
cmp
mov
adc
aaa
mov
add
and
dec
mov
adc
or
daa
loope
pop
mov
xchg
dec
sub
bound
cs
push
mov
insb
gs
jae
push
sub
jne
adc
jbe
sub
out
pop
adc
and
subb
aas
loope
xchg
dec
mov
jb
xor
cmp
aad
sbb
and
mov
inc
mov
xchg
mov
add
loop
daa
loop
out
lods
mov
add
inc
adc
mov
into
mov
xchg
jge
adc
dec
repnz
mov
sub
out
jmp
cltd
dec
add
cmp
pop
mov
adc
adc
sub
pop
and
fnstsw
int3
rolb
push
xchg
call
fcoml
adc
pop
adc
sbb
rol
jne
stc
repnz
subl
xor
dec
push
movd
movsl
add
fdivrp
xlat
cmp
fwait
dec
push
jl
scas
pop
mov
fld
sbb
pusha
pop
xor
jne
xchg
lahf
push
jl
push
repnz
jbe
cmpb
push
push
push
fdivr
add
std
pop
sbb
out
test
ds
pop
sub
sbbb
sub
inc
mov
mov
mov
lds
arpl
movsl
test
aas
jg
idiv
xor
imul
scas
clc
jne
mov
adc
sahf
scas
mov
dec
mov
mov
cmp
add
cmpsb
fistps
adc
and
mov
mov
xor
aam
or
das
cmc
dec
addr16
lret
loop
cmp
xor
popa
insb
inc
push
cmp
jne
pop
inc
shlb
xlat
xchg
ja
pop
iret
inc
ret
aam
or
stos
xchg
and
imul
push
cmc
jnp
mov
outsb
jae
in
iret
xchg
xor
jne
push
cwtl
lahf
or
aad
lcall
mov
or
rorb
dec
adc
cmpb
mov
mov
sbb
lret
add
cmpsb
pop
fsubrl
jne
cwtl
mov
lret
jl
cmc
mov
aaa
cwtl
out
adc
add
cmp
or
leave
into
call
sbb
hlt
dec
lret
push
shr
movsb
mov
arpl
or
push
push
negl
pop
in
loopne
cltd
enter
xor
sbb
cmp
xor
gs
xchg
inc
daa
mov
cmp
sbb
adc
addr16
sub
hlt
fwait
aas
add
and
cs
inc
xlat
mov
into
inc
jae
sbb
fldcw
shll
jle
cs
dec
in
xchg
xor
xor
divb
nop
add
cs
popa
mov
adc
repnz
xchg
roll
or
cltd
addr16
out
dec
imul
adcb
sub
sbb
out
test
lret
cltd
pop
mov
out
add
sbb
test
test
push
out
lds
shll
out
loopne
sbb
push
test
sub
or
fdiv
lcall
mov
pop
rcrl
pop
cld
cmpsl
loop
adc
dec
pop
pop
adc
test
mov
or
jle
xchg
inc
mov
outsl
mov
jae
jl
xchg
addr16
loope
and
xorb
mov
jp
xchg
pop
fwait
push
je
xor
sbb
xor
pop
jnp
sbb
imul
push
xchg
call
or
aas
mov
mov
mov
xor
jns
scas
dec
pop
adc
nop
rol
pop
rcl
cmp
jp
movsb
dec
outsb
jmp
mov
and
icebp
mov
push
adc
sar
movsb
lods
xor
daa
pop
mov
inc
pop
insl
and
sub
jns
test
repnz
shlb
jge
or
test
mov
sarb
cmp
or
inc
add
aam
add
xchg
in
pop
dec
mov
xor
inc
jbe
mov
xchg
imul
push
sbb
in
outsb
dec
pop
lret
ja
mov
dec
mov
cmc
xlat
ret
outsl
mov
or
bound
fisubrl
out
movsl
dec
enter
clc
pushf
add
mov
nop
cld
mov
imul
fbld
xchg
pop
fmull
pop
jecxz
push
mov
or
sub
cmp
lahf
cmp
loop
fxch
cmp
mov
jp
jmp
fs
aad
mov
andb
cld
jb
outsl
push
jg
adc
add
xchg
hlt
xor
adcl
aam
test
and
cmc
mov
fistps
mov
mov
arpl
cs
aas
aad
xor
pop
ljmp
jle
je
call
shll
ja
jmp
add
xchg
pop
jo
mov
and
dec
test
inc
lds
adc
shlb
xchg
jno
mov
addr16
pop
sub
out
push
push
jge
inc
sbb
and
lret
cmp
and
jp
jle
sbb
inc
loope
pop
dec
add
jge
xor
cltd
int
stc
mov
or
pop
mov
arpl
xor
daa
int
movsl
xchg
lcall
loopne
cli
pop
int3
ret
dec
ficomps
add
es
pop
test
in
jo
mov
fists
push
aam
and
or
adc
mov
adc
in
inc
jns
add
aaa
scas
sti
add
mov
cmpsl
shrl
inc
repz
dec
sbbb
pop
or
lcall
inc
dec
adc
xchg
push
push
mov
cmpsb
push
mov
mov
add
sbb
cld
iret
and
loopne
es
xor
mov
add
flds
mov
add
insl
mov
xor
push
subps
loopne
mov
jle
lret
mov
fnstsw
xlat
ljmp
idivl
xor
fdivrs
or
xchg
mov
jecxz
imul
jge
sub
icebp
or
scas
xchg
or
cld
xchg
jo
inc
mov
dec
adc
movsl
sbb
int3
fmull
or
lret
xor
mov
aam
loope
aam
push
inc
dec
mov
add
fsubrp
mov
mov
sub
push
add
rolb
shrl
cmp
add
dec
orl
push
mov
xchg
insl
or
fisubs
push
pop
movsl
test
call
aad
movsb
test
adc
cmp
xor
stos
in
push
rcrb
dec
fwait
test
icebp
mov
les
mov
jo
subl
lret
dec
subb
in
xchg
scas
push
push
sti
xor
mov
mov
mov
andb
adc
xchg
xchg
stc
xchg
lock
out
es
sbb
ja
push
mov
inc
icebp
adc
lock
js
mov
or
dec
jmp
push
push
inc
mov
push
jns
shl
or
pop
cmpb
cmp
or
aas
jns
and
mov
dec
mov
lock
dec
mov
hlt
sbb
pop
mov
ljmp
js
jo
sub
ljmp
cwtl
out
sbb
adc
pushl
mov
dec
jbe
sub
inc
mov
ja
outsl
sbb
loop
or
mov
scas
and
sub
or
cli
movsb
push
jns
or
dec
mov
add
xor
sub
bound
lds
nop
jg
dec
insb
pop
add
sub
jp
mov
jge
imul
mov
mull
ss
dec
mov
mov
jns
adc
fdivp
push
jmp
or
xor
mov
sbb
mov
jg
sbb
lock
ljmp
sbbb
push
lret
cmp
subb
adc
test
pop
and
into
pop
incl
idivb
push
cmpsb
gs
sbb
cld
sahf
inc
lcall
cld
addb
imul
inc
fcompl
sarl
in
xor
jmp
push
in
int
loope
popf
xlat
mov
push
ljmp
and
adc
leave
pop
cmp
mov
movsb
add
mov
jbe
jbe
mov
addl
mov
adc
jb
cvtpi2ps
data16
jg
out
xchg
mov
or
mov
mov
pop
inc
in
push
cmp
pop
ret
inc
loop
leave
movsl
xchg
scas
jne
adc
or
sahf
or
inc
in
fcomip
clc
adc
ret
push
jns
aaa
or
std
xchg
insl
out
ficompl
inc
repz
daa
lcall
jae
xor
je
xchg
mov
ss
popf
cmp
mov
lret
out
les
xchg
push
or
sbb
pop
and
xor
push
sbb
addr16
roll
xor
cmp
dec
jnp
popa
clc
inc
cmp
dec
stos
lcall
lods
inc
jmp
xchg
insl
jnp
addr16
fnstenv
mov
les
dec
inc
cmpsb
je
inc
mov
incb
jnp
fdivl
mov
jnp
repz
inc
dec
icebp
pop
inc
dec
inc
jl
fst
in
pop
mov
test
and
push
loop
test
enter
pop
subl
les
bound
jns
add
xchg
pop
add
popf
pop
cmp
cs
icebp
jge
in
push
jns
adc
ja
int
imul
stos
xchg
pop
cmp
sbb
add
pop
dec
sbb
inc
xchg
jg
ror
adc
cmp
ret
fnstcw
adc
pop
je
xor
test
mov
aam
sub
insl
addr16
repz
imul
push
insb
xchg
test
add
lret
out
cld
test
mov
inc
xor
scas
adc
shlb
mov
pop
pop
xor
add
fiadds
sti
mov
es
out
or
fstl
imul
push
dec
mov
jns
fisttpl
ffreep
dec
xchg
pop
loopne
nop
push
nop
mov
cltd
inc
add
lcall
xchg
sub
push
dec
aas
gs
push
sbb
fidivrl
push
xchg
push
sub
test
js
es
mov
std
xchg
xor
or
aam
or
sbb
sti
jl
imul
xchg
into
fwait
mov
jb
push
lds
fwait
outsb
out
mov
lret
leave
mov
add
sbb
xor
out
push
xchg
mov
outsb
dec
jmp
call
cmp
aas
push
dec
pop
mov
and
sbb
aad
xchg
into
das
pusha
dec
pop
outsl
test
sub
lcall
dec
dec
add
cld
mov
data16
movsl
pop
mov
mov
cltd
mov
mov
imul
int3
aad
sbb
and
incl
ja
jecxz
test
movsb
fcmovnb
push
lea
les
push
stos
add
psrad
fnsave
leave
push
cs
mov
mov
cwtl
mov
dec
dec
mov
xor
repnz
shrl
inc
cmp
xor
dec
cmpsl
js
test
push
pop
bound
jmp
cmp
mov
xchg
loopne
pop
mov
mov
cmp
adc
std
xlat
xchg
loopne
xchg
lods
stos
mov
popf
hlt
xchg
dec
xlat
push
out
lods
addr16
mov
es
mov
pop
cmovbe
repz
ret
xor
add
and
adc
sub
movsb
icebp
push
aaa
mov
insl
jge
sub
lahf
stc
jge
sub
icebp
daa
outsb
inc
aas
xchg
es
xchg
repnz
les
out
mov
xchg
imul
daa
adc
cmc
push
add
add
lahf
inc
addr16
jnp
aas
adc
faddp
cmp
cld
or
std
fadds
push
push
and
mov
cmp
mov
outsl
push
pop
movsb
inc
lock
pop
hlt
or
lods
rcll
in
pop
addr16
popf
pop
cld
mov
mov
lret
ds
and
and
test
mov
pusha
fisttps
mov
inc
push
pop
push
lret
int
jnp
addl
shll
inc
shlb
mov
mov
push
adc
aam
mov
nop
dec
int3
in
mov
pusha
push
jle
jns
mov
cltd
shll
pop
or
cmc
insb
jmp
mov
scas
xchg
pop
and
imul
sbb
in
inc
jg
andb
mov
into
cmp
cmp
xchg
fisubrl
and
add
stos
lds
pop
lcall
cltd
fiadds
dec
mov
mov
adc
jecxz
data16
int3
jp,pt
inc
rcrb
and
pop
mov
mov
mov
mov
or
in
daa
test
pop
subb
xor
icebp
mov
cmp
imul
xchg
pop
cmp
mov
mov
fwait
pop
cmp
sahf
mov
mov
js
mov
lea
insl
xchg
dec
icebp
adc
stos
sti
stc
mov
mov
push
loop
mov
mov
lahf
mov
sbb
xchg
std
add
jle
imul
negb
into
fcompl
and
or
pop
sbb
xchg
xchg
fimuls
decb
mov
icebp
repz
mov
pop
sub
lods
jo
mov
loope
insb
ss
adc
cmpsb
in
inc
xor
mov
out
push
lods
sub
xchg
adc
test
pop
hlt
pop
or
test
pop
test
mov
les
lock
or
mov
dec
rcll
push
cmc
mov
lods
dec
rcrb
aam
xchg
fistps
push
push
push
loope
cli
jnp
mov
add
iret
scas
add
lods
push
iret
ds
mov
dec
sub
or
and
adc
xor
jo
adcb
xorl
add
stos
ror
pop
mov
pusha
out
and
xchg
test
jno
xchg
mov
add
jecxz
mov
pop
nop
int
ja
cmpsb
loop
inc
lods
xchg
clc
sub
xchg
pop
push
dec
cmc
int
push
inc
push
sti
pop
je
xchg
jb
sbb
sub
test
mov
fbstp
mov
inc
jmp
sub
and
addr16
fisubl
and
pop
and
add
mov
jnp
ror
sti
inc
les
jo
pop
test
pop
cmp
lods
mov
fstpt
out
shl
test
mov
int
xor
or
adc
add
test
popa
push
rcl
mov
int
push
pop
and
ljmp
loop
hlt
mov
int3
call
sbb
int3
std
mov
ror
dec
dec
mov
xchg
repnz
orb
push
mov
mov
adc
adc
outsl
shll
lea
arpl
mov
xchg
cmpl
mov
mov
nopl
adc
ret
test
fwait
cmp
jecxz
in
cmp
xchg
jbe
cmpsl
sbb
cmp
mov
int
nop
cli
xlat
mov
xchg
inc
mov
pop
insw
clc
ret
call
cmp
fxam
addr16
push
sbb
xchg
pop
push
inc
jg
in
cmp
xchg
xor
fcmovbe
jl
jns
std
push
aas
push
test
mov
in
shlb
in
dec
pop
shll
or
aam
loop
faddl
and
inc
cmpsl
dec
divb
xor
xor
sub
js
cld
addr16
cmp
cld
cmp
jecxz
insb
jmp
int
push
sub
cmpsl
add
popf
scas
pop
out
sub
cltd
in
inc
pop
lds
in
jmp
gs
dec
aas
add
inc
sub
fldcw
mov
inc
js
jne
mov
jbe
cmpsb
jne
shlb
fwait
and
loopne
add
mov
sbb
outsb
jbe
jnp
jge
out
and
scas
xor
xchg
loope
pop
leave
push
lock
dec
sbb
cmp
rep
imul
xchg
and
lcall
mov
add
leave
lea
enter
dec
loop
movsb
in
aas
rcl
bound
std
push
push
adcb
push
test
mov
jmp
xchg
cmpsb
lret
not
dec
and
or
add
cmp
sbb
and
jns
lret
loope
jmp
pushf
xchg
cs
std
shll
je
hlt
fcomps
add
arpl
push
cmpsl
imul
icebp
lcall
pop
xor
js
fidivl
pop
lahf
and
test
rcrl
aas
lret
mov
ret
sub
shrb
dec
pop
subb
stos
leave
and
xor
rcr
fsubrp
sbb
lods
adc
ds
cmp
enter
ljmp
add
xor
fdivs
xorb
xchg
dec
jmp
vpcmpeqd
mov
bound
add
or
shll
inc
cli
enter
and
mov
stc
sbb
xchg
push
aad
rclb
xor
in
call
lea
insb
jp
adc
pop
in
lcall
dec
adc
bound
jle
aas
dec
scas
outsb
add
int
popf
cltd
cli
mov
lahf
jae
push
mov
dec
and
lock
jno
push
add
ss
je
js
sbb
push
and
cmp
add
pop
push
cs
or
aaa
sahf
sbb
cmp
loop
into
stos
and
test
gs
sub
imul
cmp
lahf
push
push
movsl
mov
jle
mov
xchg
pop
out
dec
inc
mov
flds
pop
mov
mov
fistpl
sbb
call
mov
scas
sahf
enter
inc
arpl
mov
adc
xlat
or
xor
inc
dec
insl
andl
and
and
inc
clc
mov
add
out
gs
movsb
shll
mov
dec
out
pop
fdivrp
push
in
push
test
jno
outsb
mov
sbb
sbb
jl
mov
pop
pusha
inc
std
aad
insb
hlt
sarl
js
adc
sub
imul
push
push
data16
dec
mov
ss
mov
push
pop
adc
adc
es
mov
cmpsb
pushf
popf
rcll
imul
out
fcmovnu
sub
movsl
mov
test
call
pop
jb
clc
or
adcb
adc
fildl
sub
int
mov
or
orb
xor
jns
sbb
ja
push
jp
or
gs
nop
hlt
or
pop
ds
cmp
jg
mov
sahf
jecxz
lods
cltd
mov
das
sahf
outsb
hlt
enter
shrl
adc
inc
popa
cmp
mov
inc
push
push
movsl
out
dec
fmull
std
adc
push
dec
js
bound
movsb
inc
xchg
push
pop
cmp
ret
xor
jbe
or
jmp
leave
or
sbb
mov
cmp
test
pop
dec
xor
jbe
cmp
iret
dec
sbb
pop
xlat
scas
adc
lret
lock
das
dec
cld
push
or
jmp
adc
popf
adcb
stos
fisttps
mov
cmp
inc
or
push
push
inc
adc
cld
hlt
out
lock
add
out
pop
mov
fbstp
lea
sub
nop
movsl
lret
inc
insl
lds
add
add
mov
out
mov
test
stos
dec
mov
into
hlt
cmc
lods
mov
lahf
bound
test
mov
pusha
popf
adc
mov
aad
adc
hlt
icebp
les
push
scas
movsl
je
fadd
sub
jns
mov
leave
sbb
rcll
movsb
xchg
mov
lock
cmp
push
testb
mov
test
or
inc
mov
movsl
mov
adc
lcall
gs
xchg
jecxz
pop
push
push
in
adc
lods
mov
xchg
shrd
test
std
or
jg
mov
mov
std
dec
gs
jg
int
out
lcall
lock
ds
popa
dec
xchg
sub
call
mov
out
ds
notb
push
xor
or
ja
scas
stc
out
sarb
negb
jnp
pop
imul
rcrl
jge
lahf
popf
fsub
jecxz
cltd
js
in
dec
insl
dec
mov
cmp
jp
cld
xchg
xorl
aas
stc
outsb
ror
data16
fnsave
xlat
andl
inc
inc
cmpl
jns
mov
inc
iret
ja
lods
mov
add
add
dec
fcom
pop
pop
mov
sbb
mov
rolb
movsl
clc
jl
cmpsb
aad
fwait
loope
adc
loope
in
ficoml
shrl
loop
out
loopne
dec
adc
mov
push
sbb
out
gs
lret
stos
es
add
repz
pusha
mov
into
aas
push
fwait
outsl
sub
mov
fstl
popf
jle
test
mov
sbb
fisubrs
push
xchg
loop
orl
in
aam
cltd
shl
out
adc
popa
dec
pop
push
mov
aam
pop
out
sti
in
cmpsl
cltd
sbb
and
insl
xchg
fldenv
or
xchg
jge
and
push
shrb
mov
testb
or
jo
arpl
dec
cmp
xor
insb
aam
loopne
pop
lods
mov
cmp
hlt
dec
jl
les
add
mov
in
push
enter
sbbb
cmp
cli
cmp
adc
out
mov
push
xchg
iret
test
and
test
pushf
lahf
int3
mov
fwait
sbb
jge
addr16
repnz
movsl
repz
stos
sub
inc
inc
xchg
jl
sbb
jbe
js
std
js
dec
int
mov
or
fwait
dec
loopne
lahf
pop
lods
sbb
stos
adcl
fistpl
sbb
pushf
push
movsb
add
pop
sahf
or
add
push
loop
test
movsl
push
mov
mov
popf
mov
repz
bnd
sbb
xchg
push
outsl
test
orl
js
cmc
and
mov
inc
sub
cltd
rcll
je
xchg
push
popa
adc
notl
sbb
fbld
popf
roll
push
ud1
out
push
cmpsb
cld
ds
outsb
popa
jp
jp
icebp
mov
sahf
cmp
xchg
insb
and
andl
cmp
fisttps
mov
cld
mov
scas
sub
jae
sbb
sub
pop
or
nop
imul
mov
push
sti
jno
dec
push
mov
mov
xchg
cmp
out
test
fsts
cwtl
push
in
mov
xchg
shll
and
testl
mov
sbbl
push
dec
stos
test
std
jns
sbb
lds
cmp
into
ret
jmp
pop
mov
xor
mov
cmp
inc
lcall
test
in
in
xor
push
out
movsb
outsl
or
cmp
out
scas
movsl
sbb
adc
push
je
or
imul
and
adc
add
sub
push
push
sbb
adc
repnz
mov
stos
and
xor
xor
lods
loope
dec
fbstp
out
insl
cmc
shl
imul
cmp
sbb
movsl
out
sub
insb
sbb
insl
push
in
shl
out
adc
inc
mov
mov
jno
mov
mov
dec
dec
mov
xchg
cmp
cs
lcall
jbe
mov
xorb
movsb
pop
std
or
add
insb
idivb
pop
mov
xchg
in
fidivs
lret
loopne
out
sti
ret
cld
pop
das
jb
mov
mov
add
ret
lahf
fnstenv
sbbb
hlt
out
cmp
mov
es
and
push
into
loopne
ljmp
mov
repz
and
mov
into
imul
mov
sbb
mov
mov
clc
jecxz
gs
shll
jb
fs
jp
movsl
pop
mov
jle
gs
daa
ret
cmpsb
test
pop
jne
adc
cmc
inc
mov
cmp
jns
lret
sti
int3
dec
jae
cmp
outsl
cltd
mov
jle
mov
mov
out
inc
cs
cld
scas
xor
dec
test
loop
loope
pop
jne
repnz
add
nop
fnsave
jb
xchg
bound
dec
push
scas
jo
xor
push
outsb
xchg
mov
xchg
sbb
jbe
pop
ret
lea
mov
pop
mov
adc
clc
dec
jne
dec
aad
pop
sar
push
mov
xchg
fisubrs
mov
shl
adc
xor
mov
xor
insb
sub
sbb
ds
orb
or
xor
xchg
and
adc
loop
sarl
inc
rcr
repz
imul
xorb
addb
cmp
pushw
stc
mov
pop
pop
lock
movsl
add
or
or
xor
add
xchg
roll
setle
dec
dec
ss
aad
xchg
ss
imul
or
mov
push
jae
fiaddl
mov
push
mov
lret
insl
cmpsb
pop
inc
xchg
adcb
add
cmp
inc
pop
aas
sbbb
jno
mov
insl
mov
push
xor
sub
jns
inc
in
repz
and
rol
jnp
icebp
cmp
mov
imul
in
popf
mov
out
hlt
sar
push
xchg
lods
mov
decl
fs
ljmp
xchg
jns
xchg
xor
mov
jo
test
or
fadds
cmp
push
inc
pop
dec
push
mov
pushf
or
sub
pop
mov
sbb
adc
mov
loop
lret
loopne
pop
les
xchg
sub
or
lahf
mov
or
cli
inc
out
pop
jb
lret
cmp
pushf
cld
out
sbb
sarl
repz
clc
in
frstor
std
leave
sub
call
push
xchg
and
mov
es
xor
or
dec
sahf
into
dec
xor
arpl
push
cltd
data16
repnz
jb
add
iret
jp
in
aam
push
or
xor
jae
addr16
or
les
mov
popf
pop
or
mov
adc
iret
and
outsl
or
jge
inc
xlat
in
daa
fiaddl
push
cld
aad
mov
stc
xchg
inc
add
dec
nop
mov
jp
mov
jo
roll
pushf
adc
out
cmp
inc
incb
cmc
mov
push
push
daa
repnz
lods
out
sbbl
das
cmp
test
cmp
sub
jae
out
fiadds
or
mov
shl
pop
mov
xlat
adc
into
fcoms
ljmp
sbb
ficomps
cmp
push
ss
push
mov
jae
mov
lret
sti
ret
xchg
rcrb
enter
addr16
inc
inc
dec
jne
data16
pop
in
out
fildll
sub
ja
mov
pop
jbe
std
add
cmp
rclb
sbb
push
je
jecxz
adc
jl
lods
fcom
mov
hlt
push
repnz
inc
sub
cmp
sbb
jb
pushf
inc
arpl
das
push
lahf
mov
mov
mov
popf
jl
aaa
imulb
rcr
and
outsb
mov
aaa
aam
shl
jmp
inc
mov
out
mov
ficoms
inc
inc
test
call
xchg
mov
jbe
aam
decb
sub
arpl
mov
mov
jle
xor
jmp
test
cltd
cmpsl
sahf
xlat
xlat
push
test
mov
pop
jmp
out
mov
sub
push
mov
or
pop
bound
jae
push
inc
pushf
push
ljmp
jg,pt
rclb
xchg
sub
push
push
push
add
sti
stos
push
scas
mov
mov
cmp
adc
mov
data16
cmpsb
dec
inc
mov
cmp
cmc
test
lret
mov
or
xor
and
mov
cli
inc
js
mov
push
dec
xor
mov
mov
xor
arpl
test
ret
push
outsb
pop
dec
dec
cwtl
test
sbb
sub
mov
fstp
mov
inc
loopne
cmpsl
gs
fcmovb
cld
xchg
shlb
adc
mov
mov
repnz
or
std
icebp
xor
cmpl
xchg
inc
push
push
mov
pop
fbstp
add
lahf
enter
mov
xor
int3
mov
inc
xchg
outsl
repz
shrb
rolb
ret
and
inc
int3
push
cmpsb
push
xorb
sbb
addr16
xchg
nop
mov
iret
in
xchg
or
lea
clc
or
dec
imul
jl
xor
mov
jae
mov
stos
inc
jl
add
mov
inc
mov
les
and
xchg
xchg
lea
imulb
out
out
mov
int3
iret
fwait
jle
pop
cmpsb
jecxz
icebp
lret
stc
mov
mov
lret
push
add
aam
dec
imul
and
xchg
pop
rolb
int3
jae
jb
xor
test
rcl
lock
xchg
imul
test
jg
sub
std
fsubr
xorl
cltd
rorb
sub
adc
fldl
ret
adc
jmp
iret
push
shll
jae
inc
shl
push
xor
mov
js
daa
loop
pop
sbb
hlt
ja
jb
in
sub
or
and
sub
cmp
add
shlb
xchg
testl
mov
sbb
cmc
inc
sbb
ret
mov
inc
mov
sbb
fnstsw
in
xchg
addl
stos
mov
mov
and
fcoml
add
lahf
mov
pop
lods
mov
sub
js
jmp
test
push
dec
outsb
out
fcoms
cmp
xchg
dec
dec
jo
or
cmp
lahf
nop
mov
fnstenv
adc
xorl
xchg
cmc
cmpsl
aad
inc
inc
sub
sbb
js
imull
es
jns
and
shlb
push
leave
es
add
adc
jg
daa
in
cmpsl
test
push
clc
add
mov
hlt
jmp
lret
out
notb
das
movsl
idivb
pop
and
les
idivb
lods
int3
mov
jne
mov
fs
lock
jb
and
push
out
dec
jecxz
jge
cld
cmp
ljmp
jno
or
fidivl
xchg
fcompl
loopne
sub
fcoml
cmpsl
je
lods
cmp
and
pop
add
sbb
cwtl
cs
in
jno
js
add
mov
in
fnsave
loope
fstp
cld
std
in
dec
out
addr16
xor
lret
or
repz
inc
fisubrs
outsl
pop
shl
mov
out
mov
jmp
out
xchg
clc
dec
adc
add
or
jle
aam
loopne
popf
mov
jp
push
push
hlt
nop
jb
inc
cmp
iret
xor
lret
push
mov
push
push
and
mov
jb
mov
dec
mov
mov
cwtl
aam
adc
mov
xchg
outsl
mov
cmp
mov
push
fimuls
and
shll
push
lds
push
insl
jbe
inc
xchg
adc
jmp
in
ljmp
inc
mov
into
sub
xchg
cmp
add
xchg
cmpsb
mov
aas
jb
in
and
sub
sub
fisubs
mov
inc
insl
inc
mov
xlat
nop
ficoml
jo
lods
aas
loope
iret
fmull
jbe
rcrl
inc
inc
test
std
les
or
adc
loop
or
scas
sub
jo
and
movsb
shrb
or
sbb
movsl
dec
adc
push
ficompl
fidivrl
addr16
fnstsw
push
sub
out
outsb
sub
inc
mov
pop
adc
pop
stos
add
lds
lods
ret
adc
mov
testb
adc
or
xor
in
or
cs
xchg
xor
push
testb
or
into
ja
mov
sahf
and
stc
xor
ret
daa
pop
pop
cmpsl
aad
cmpsb
add
test
pusha
push
push
xchg
out
mov
movsb
shr
rcr
into
lret
push
sbb
inc
push
aam
push
popa
je
ljmp
adc
cld
out
jecxz
mov
aas
imul
mov
test
add
sub
push
dec
sahf
ja
cld
push
jno
stos
adc
sub
mov
dec
aas
push
and
ss
mov
adc
adc
xor
and
cwtl
inc
inc
jg
adc
shrb
in
mov
nop
sti
adc
mov
fs
mov
pop
dec
out
or
ds
mov
xor
dec
fstpt
push
fistpll
test
xchg
sbb
xchg
hlt
stos
insb
jmp
or
cmpb
jl
xor
shll
xchg
popf
mov
xor
stc
jle
ja
push
rorl
fdivrp
or
jae
adc
push
addr16
push
aaa
insl
push
in
push
mov
fidivrs
pop
mov
lcall
jno
or
jno
and
loope
xor
ret
mov
cld
popa
dec
jmp
test
adc
xchg
cmpsl
cmp
fiaddl
fidivrl
push
ret
xor
sti
imul
pop
mov
push
fsub
jmp
fcmovb
je
lcall
inc
dec
test
ds
cli
xchg
xor
andl
inc
mov
addr16
movsb
mov
cmp
aad
dec
and
mov
cmp
lret
cmp
test
rolb
lds
rcrl
ljmp
sub
jmp
inc
aas
sub
push
sub
fdiv
adc
pushf
shr
mov
aaa
inc
xchg
push
xchg
xor
push
loopne
mov
int3
out
popf
cmp
fwait
pop
dec
dec
clc
sbb
pop
mov
mov
gs
in
cltd
inc
pop
dec
addb
lcall
jmp
jne
mov
or
xor
aaa
loop
in
mov
fwait
hlt
mov
dec
mov
ljmp
add
fwait
jmp
cs
add
adc
adc
outsb
mov
pop
ljmp
iret
arpl
cmp
sub
daa
and
clc
or
add
out
jg
scas
push
leave
push
shlb
fidivl
pushf
xor
mov
orb
fisttps
call
sbb
or
int3
mov
loop
cmpsb
pop
les
mov
into
push
mov
jo
xchg
fs
inc
push
stos
push
in
test
push
sub
ret
test
xchg
insl
cld
jae
outsb
or
mov
push
addr16
outsb
ret
adc
push
jge
push
sbb
xchg
icebp
filds
inc
in
sub
subb
jl
and
mov
push
add
mov
and
aas
mov
cld
ds
into
xchg
cmpsb
cli
sbb
dec
dec
cmpsl
cmp
shll
jle
jns
dec
xchg
arpl
lret
movsb
lret
mull
ficomps
adc
les
ja
push
in
lods
lret
push
add
jge
cmp
popa
mov
xchg
cmp
mov
mov
lret
int3
or
add
sbb
push
dec
xchg
mov
jae
dec
or
maxps
adc
in
gs
mov
push
cmp
loop
jl
cmpsb
or
mov
insb
mov
mov
sbb
xchg
in
cmp
push
adc
addr16
xchg
rolb
jg
inc
rcrl
cmpsl
and
ljmp
sbb
or
int
add
test
push
xchg
or
sub
icebp
sub
fcomp
arpl
push
jno
mov
aas
xchg
lret
dec
aad
test
cltd
outsl
and
stos
sbb
je
imul
test
lret
xor
icebp
stos
cli
sbb
or
mov
push
ja
fistl
pop
mov
mov
push
sbb
dec
shrl
push
int3
jg
in
mov
push
mov
shl
pop
xchg
add
enter
test
das
mov
lret
cmp
imul
lcall
mov
out
mov
ret
mov
ds
sub
add
sub
nop
out
ret
and
push
std
out
mov
bnd
pusha
call
push
fwait
xchg
jmp
outsl
xchg
xchg
sbbb
mov
movsl
xchg
sbb
sub
pop
stc
mov
out
mov
xor
mov
mov
xchg
cmp
clc
cmp
xchg
arpl
or
inc
js
push
pusha
add
pop
shl
aaa
inc
sbb
flds
aad
scas
mov
jle
mov
mov
push
xor
inc
and
pop
adcl
adc
rorb
and
int3
pop
int
jp
pop
insb
push
sbb
xor
popf
scas
push
out
pop
adc
lret
lcall
inc
iret
rorb
cld
jne
lods
lcall
vmovdqu
inc
push
xor
mov
xchg
pop
in
push
xor
fsts
sahf
sarl
lret
cmp
mov
call
clc
jecxz
stos
xchg
outsl
sub
lods
repnz
push
movsb
mov
sbb
add
jmp
repnz
or
popa
mov
pop
addr16
inc
ja
push
lcall
in
in
jno
andl
cld
les
shl
nop
std
mov
and
mov
and
or
sub
negl
mov
sub
xor
in
cmp
adc
popf
into
out
mov
fldl
xchg
pusha
push
push
stos
daa
adc
pusha
lea
and
sbb
leave
and
fbstp
dec
shr
pop
sbb
aam
xor
mov
add
cmp
push
sbb
jmp
repz
mov
mov
cwtl
pop
xchg
lea
xchg
ret
push
pop
dec
bound
cltd
nop
push
sbbb
xor
inc
cltd
mov
xchg
bound
xchg
cmp
add
enter
lret
repz
mov
out
push
xchg
pop
xchg
adc
mov
push
dec
cmp
dec
out
inc
clc
arpl
pop
fsts
orl
mov
mov
out
clc
add
adc
scas
push
or
sti
rcrb
jno
cmp
aad
add
je
test
add
stos
adc
jnp
sub
cmp
adcb
sbb
add
rolb
movsl
les
mov
push
mov
jge
mov
bound
dec
shll
mov
xchg
icebp
mov
sbb
insl
cmp
dec
faddl
out
sbb
repz
cmp
push
or
nop
lahf
push
das
cld
loop
cltd
lea
adc
pop
xor
mov
adc
in
outsl
pop
aas
pop
push
push
or
push
iret
sbb
cltd
jecxz
ret
rorb
adc
jg
mov
jbe
lahf
les
iret
inc
push
jmp
icebp
sbb
mov
cmp
jmp
push
ja
aad
add
ds
dec
sbb
mov
aad
jns
jnp
dec
mov
loop
xchg
mov
ljmp
stc
mov
int3
insb
or
jge
movsb
shrb
xchg
lea
add
notb
mov
nop
cmp
mov
add
pop
and
test
arpl
push
pop
mov
pop
les
in
jne
adc
lahf
cwtl
dec
test
call
dec
and
mov
cmp
push
jbe
add
inc
das
jno
int
enter
cld
dec
inc
cli
inc
outsb
ffree
mov
stos
mov
add
sti
mov
stos
mov
jnp
cltd
fnstsw
mov
test
pop
mov
xchg
cwtl
sub
jle
mov
outsb
xchg
dec
mov
fwait
jne
mov
and
mov
push
jae
loope
sbb
repnz
lds
scas
xor
fs
pop
call
lea
mov
mov
pop
fsubp
xchg
cli
add
pop
mov
jne
out
out
popf
mov
mov
add
es
pop
fxch
jo
xchg
mov
mov
cmp
add
sbb
sbb
xchg
ds
jo
jb
adc
fnstenv
xor
or
xchg
je
ficoml
and
xor
cltd
fisubs
xchg
repz
lock
and
std
add
fildll
cmp
pop
lods
fdiv
jnp
xchg
jo
pop
inc
or
jns
and
fbld
out
jo
sub
push
cmc
add
pop
repnz
es
push
ss
dec
lods
push
pop
mov
dec
pusha
jno
insb
int3
repz
daa
pop
pop
push
in
dec
dec
cmp
mov
or
je
mull
add
mov
les
push
mov
and
arpl
mov
icebp
arpl
daa
popa
sbb
out
mov
and
adc
sahf
add
cmpl
hlt
cmp
jnp
sbb
xor
jae
push
add
sbb
repnz
fisubrl
adc
push
inc
and
inc
mov
pusha
jnp
cwtl
leave
sbb
out
jbe
sahf
icebp
scas
jns
push
cmp
ret
xchg
and
xchg
mov
sub
xor
bsr
and
ja
ret
lds
es
out
pushfw
lods
loopne
mov
add
negl
fadds
inc
cs
mov
aas
add
xor
dec
je
pop
mov
pop
les
js
ljmp
andl
loop
push
inc
loope
mov
fstpt
aaa
test
dec
mov
pop
mov
out
int3
mov
shl
add
mov
lea
fldcw
inc
bound
pop
div
mov
mov
mov
hlt
jbe
incl
or
sbb
shrb
cli
xchg
sub
inc
fldenv
ja
cli
jl
jmp
mov
mov
insb
xorb
pop
pop
adc
add
loop
cmpsb
pop
fldl
push
xor
mov
mov
bound
addr16
and
fildll
ds
cmpsb
jecxz
ja
xchg
fisubrl
jl
inc
fwait
cmp
mov
sub
pop
add
out
leave
cmc
sub
cld
sar
lods
fildll
inc
lret
in
mov
xorb
decl
in
mov
sbb
jmp
pop
mov
xchg
pop
mov
mov
mov
dec
cmpsl
adc
std
mov
mov
hlt
jae
xchg
loopne
add
mov
jo
scas
shr
addl
sbb
fld
movsl
popa
cmp
xchg
and
xor
mov
mov
mov
sbb
xor
or
mov
add
icebp
lods
push
fsubr
xchg
xor
sbb
pop
setge
test
push
cmpb
faddp
imul
xor
aaa
lret
mov
mov
xor
fdivs
int
adc
stos
and
pushf
pop
mov
enter
adc
mov
xor
jg
fs
cld
or
ss
lds
adc
lods
xor
xlat
adcl
enter
jge
call
cmc
pop
mov
aaa
ja
jo
and
push
pop
repnz
orl
pop
xor
dec
dec
in
mov
mov
xor
mov
sub
adc
push
mov
pop
cld
and
xor
or
lret
stos
hlt
sub
shr
mov
sbb
xchg
mov
and
jmp
xor
cltd
add
aas
cmpsb
in
push
aaa
push
in
cwtl
or
dec
mov
repnz
inc
xchg
mov
aam
sbb
test
and
xchg
jl
xchg
push
xchg
push
scas
in
arpl
addr16
add
daa
movzbl
cs
sub
mov
repz
jns
mov
mov
ss
sub
mov
adcb
mov
aas
out
sub
push
lea
mov
das
cmp
and
cwtl
aaa
aam
mov
and
shlb
pop
repnz
lods
pmaxub
fidivs
jl
cmc
gs
mov
jo
cld
push
enter
not
mov
push
dec
pop
xorb
push
mov
rol
iret
in
sub
cmpsl
aaa
aad
gs
sarl
imull
hlt
sub
dec
lret
sub
in
stos
inc
ficomps
mov
adc
sub
cmp
push
add
outsl
adcl
and
sbb
clc
mov
lahf
fdivrs
icebp
and
lods
pushf
popa
push
inc
jg
xlat
and
and
jnp
lcall
xchg
ret
push
cmc
xor
es
inc
cmp
dec
mov
jb
xor
lods
sub
mov
mov
add
inc
sbb
mov
sub
jmp
hlt
ret
dec
mov
nop
aaa
push
shrl
scas
mov
push
sbb
or
xchg
jmp
sbb
stos
aad
cwtl
add
dec
xor
jmp
fadd
and
mov
lock
hlt
jo
xor
testl
adc
rolb
fisttpll
jae
sarb
or
mov
std
addr16
enter
aam
clc
cli
jnp
movsb
subl
mov
mov
lcall
fdivrs
pop
push
cmpsl
loopne
pop
dec
cld
ljmp
inc
das
dec
fwait
xchg
hlt
cltd
aaa
out
imul
push
xchg
mov
mov
add
sub
insl
inc
jmp
dec
adc
or
sbb
subb
adcl
cli
popf
sub
and
out
stc
test
dec
shrl
je
daa
das
sbb
pop
jo
dec
sarb
pushf
mov
movsl
sub
mov
push
or
nop
mov
mov
add
mov
push
mov
stc
inc
rcll
jl
ficompl
pop
jne
mov
aaa
test
adc
fcoml
lahf
movsb
dec
mov
pop
xchg
int
pop
mov
insb
mov
xor
mov
adcl
jp
loop
cmc
jne
push
std
sbb
and
or
add
cmp
loopne
jmp
sbb
xor
test
sub
daa
jnp
imul
sbb
sti
fimull
mov
aam
mov
hlt
jae
sbbb
mov
stos
inc
outsb
sbb
int3
lods
outsl
imul
jno
sub
fwait
repnz
int3
ljmp
fldcw
emms
add
jns
outsl
pop
mov
jmp
jl
and
xor
pop
dec
gs
out
out
pusha
test
add
leave
pop
lods
mov
ljmp
mov
jmp
enter
mov
cli
mov
incb
inc
icebp
movsl
cld
xchg
int
cld
or
sbb
and
jno
pusha
mov
je
in
xchg
into
inc
out
imul
out
lds
inc
notb
jnp
xchg
adc
test
xchg
sahf
xor
or
push
ljmp
mov
dec
repz
out
cmp
mov
aas
test
inc
mov
push
and
cltd
nop
inc
js
adc
loop
xor
pop
sub
out
outsb
xchg
ds
pop
push
sbbl
sub
dec
or
mov
dec
xchg
mov
jo
bound
push
test
lods
scas
repz
ds
repz
jecxz
mov
adc
and
gs
cmpsb
sub
mov
and
or
sub
mov
add
clc
js
push
jnp
in
mov
mov
jl
psubb
fimull
into
xor
mov
mov
and
jne
cmc
lock
stc
ret
dec
fisubl
xchg
mov
and
jnp
repz
adc
sbb
jb
scas
xor
push
cld
xchg
shll
stc
sbb
dec
fstpt
popf
push
add
iret
push
insl
in
mov
inc
lea
dec
adc
mov
out
cmp
dec
fs
aaa
mov
sub
or
jg
adc
pop
lret
aam
lods
pop
insl
sbb
out
int3
fwait
sub
std
in
js
fs
lahf
pop
jecxz
mov
repnz
mov
sub
cmpsb
mov
add
aad
push
cmp
repz
andb
and
adc
mov
enter
data16
hlt
push
mov
jg
push
lea
jne
pop
daa
fistps
jb
shlb
cmp
jae
adc
dec
pushf
clc
and
pop
dec
mov
les
imul
pusha
cmp
push
xchg
out
mov
nop
dec
out
jecxz
movsb
jp
rcl
and
rclb
outsb
jnp
xchg
sbb
mov
ljmp
aaa
imul
jl
pop
fldl
push
fdivrs
add
jg
test
add
push
or
xchg
hlt
aam
inc
leave
dec
inc
outsb
imul
std
rorl
movsl
lea
imul
xor
xorb
jmp
divb
icebp
pop
or
adc
or
and
ret
and
inc
clc
popa
mov
imul
mulb
and
xor
adc
aad
fs
cltd
adc
das
cld
aas
push
cmp
push
and
ret
sub
mov
fcomps
adc
jae
sbb
out
adc
mov
iret
sub
cmp
mov
loopne
dec
movsb
aad
mov
xor
imul
aam
mov
pusha
mov
pop
jge
out
xor
pop
mov
ss
pop
push
repz
std
inc
pop
sub
scas
inc
push
bound
mov
and
pusha
test
test
icebp
add
dec
jp
dec
inc
jno
jae
popa
addb
mov
add
adc
nop
push
or
sbb
or
dec
sbb
cwtl
mov
mov
adc
cmp
ja
sub
adc
or
loop
inc
aas
data16
dec
sbb
enter
enter
or
and
in
pop
popa
jle
sub
testb
mov
mov
push
cmc
imul
cwtl
xchg
or
leave
xor
shrb
mov
in
jb
xchg
mov
push
pushf
arpl
mov
aaa
mov
and
or
mov
or
or
mov
arpl
ds
out
fmul
imul
cmp
sub
das
int
xor
aad
adc
xor
mov
movsl
add
push
leave
fst
je
sbb
dec
push
or
insl
jns
mov
or
fistpl
clc
jb
xchg
mov
loop
lahf
xchg
cmp
jl
pop
mov
mov
bound
popa
imul
sub
mov
loope
jbe
jl
test
imul
inc
outsl
adc
test
xchg
add
cmp
adc
mov
mov
xorb
jns
rcll
xchg
jl
int3
xor
dec
cmp
clc
push
movsl
or
cs
mov
mov
rolb
xor
or
ss
jle
or
fs
mov
testl
xchg
pop
mov
xchg
mov
push
ds
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
decl
cli
dec
sti
js
sbb
test
mov
dec
sti
jl
sbb
aad
cli
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
test
fildl
aad
repz
les
popa
cmpsb
lods
mov
xchg
sbb
xorb
mov
push
cwtl
cmp
or
enter
adc
mov
insb
add
mov
dec
sti
jl
sbb
iret
aas
cmp
push
lock
out
pop
pop
adc
flds
inc
jl
pop
add
jno
adc
mov
jp
pop
add
cld
or
cmpsl
scas
push
imul
lock
out
pop
pop
adc
inc
xchg
jnp
push
loope
pop
fwait
add
filds
adc
adc
repz
test
or
push
lock
sti
jl
sbb
push
ret
xor
mov
cli
mov
ret
popa
or
mov
dec
sti
pushf
sbb
imul
pusha
decb
js
sbb
push
ret
popa
or
cli
dec
jmp
sbb
popa
or
sbb
popa
or
mov
dec
sti
jns
sbb
push
ret
popa
or
or
dec
sti
js
sbb
popa
or
mov
sti
insb
sbb
popa
or
mov
pop
sti
jl
sbb
push
shll
aad
cli
dec
sti
jl
sbb
shrb
cli
dec
sti
dec
push
sbb
imul
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
mov
jl
sbb
pop
ret
popa
sbb
mov
jb
jl
sbb
dec
out
mov
sti
jl
sbb
jbe
popa
call
cwtl
jl
sbb
push
ret
popa
or
xchg
dec
stos
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
jecxz
or
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
sbb
push
ret
popa
or
mov
dec
sti
jl
pop
add
or
pushf
cli
dec
rcr
push
popl
enter
rcrb
xchg
lods
jno
pop
cld
pop
cmp
pop
mov
enter
out
stc
fwait
insb
inc
aas
cld
mov
ss
jbe
jecxz
popf
fwait
pop
arpl
les
add
clc
adc
rclb
adc
xchg
call
mov
mov
in
aaa
sub
js
ss
dec
aaa
pop
mov
push
into
leave
int3
xor
or
xchg
pop
icebp
aaa
pushf
add
and
xchg
pop
add
cmp
cli
ljmp
mov
mov
mov
pop
xor
pop
lods
leave
pop
dec
je
mov
movsb
cwtl
int3
jb
cmovnp
xlat
fadd
mov
dec
xlat
imul
xchg
cld
leave
mov
test
sub
out
and
mov
push
dec
jge
addr16
push
pop
bound
xor
mov
ret
pop
inc
mov
cmpsl
mov
and
jecxz
push
test
adc
stc
cli
lret
popf
inc
in
sbb
and
and
sti
sub
popf
add
or
sbb
mov
mov
mov
cmp
push
call
stc
adc
test
xchg
mov
in
pop
mov
xchg
inc
xchg
pushf
sti
aam
mov
cmp
xor
xchg
sub
mov
mov
jle
push
ss
mov
push
es
mov
aaa
push
xchg
add
mov
mov
add
push
addr16
loope
push
rcrb
hlt
insl
daa
hlt
cmp
clc
cmp
sub
push
cmpsl
jnp
ljmp
adc
and
iret
outsb
cmp
dec
xchg
pop
jg
sub
popa
and
bnd
xchg
mov
push
push
or
pop
xchg
sub
add
inc
push
and
lds
mov
and
xor
ss
les
dec
pushf
xchg
imul
inc
adc
inc
jne
and
jmp
mov
mov
aad
and
fwait
outsl
ljmp
pop
pop
push
pusha
dec
fdiv
arpl
lods
push
push
pop
or
and
add
cmpsl
aam
add
mov
stos
push
sub
mov
pushf
imul
cltd
imul
cs
pop
cmp
mov
filds
inc
mov
jo
pop
movsl
test
nop
out
xchg
xchg
pop
mov
adc
cmp
and
aaa
fistl
mov
sti
sbb
aaa
ljmp
and
jge
inc
xchg
xchg
loopne
xlat
pushf
in
test
je
dec
or
andb
mov
pop
popa
push
lods
test
mov
ret
lret
lods
pop
sub
std
pop
mov
leave
xchg
aam
scas
call
and
mov
push
jecxz
out
inc
or
jl
xchg
test
ret
cmp
pop
and
repz
das
dec
jecxz
js
dec
add
mov
sub
cmp
les
aad
mov
jg
mov
mov
jl
mov
ficomps
lret
loop
out
or
sub
mov
adc
ds
std
jbe
fwait
lds
mov
loop
add
pop
xchg
movb
dec
mov
sarl
fwait
and
cmp
lea
push
jb
push
aam
pop
push
and
and
inc
xor
pop
in
negl
sub
mov
insl
int
mov
xchg
xor
jo,pt
hlt
not
mov
mov
sub
outsb
aas
inc
notb
push
out
xor
ret
loope
daa
xchg
icebp
sahf
insl
fs
movsb
in
mov
ljmp
pop
mov
in
push
mov
ds
cltd
sub
dec
inc
pop
shlb
sbb
shlb
push
movl
leave
adc
ja
enter
fcmovb
cmp
xor
gs
mov
loopne
mov
push
mov
divl
mov
mov
in
in
dec
add
loopne
aaa
cwtl
clc
mulb
inc
lret
shr
mov
jno
push
mov
sbbb
mov
xor
aaa
mov
xor
test
lods
inc
mov
decb
inc
fwait
dec
out
stos
lcall
pop
cmc
idiv
or
scas
pop
addr16
in
sub
lods
lods
pop
push
jp
push
mov
sbb
or
in
lock
pop
shrl
pop
out
popa
add
sub
pop
xchg
pop
sbb
lea
mov
leave
movsb
sub
inc
inc
decl
inc
iret
in
imul
fnstsw
fcmovnbe
pop
mov
mov
sbb
clc
fsts
loopne
pusha
clc
mov
xor
test
sbb
hlt
mov
xor
clc
or
adc
mov
mov
mov
xchg
ljmp
in
jns
mov
mov
cwtl
jb
das
inc
fucomip
addr16
pop
stos
inc
pop
rcrb
sub
loop
out
sarl
dec
fnstcw
or
jno
mov
mov
push
lods
in
cmp
cltd
jp
fcoms
lods
mov
mov
std
push
mov
iret
jp
sbb
repnz
fisttps
push
stos
pop
mov
pop
loop
sub
lcall
ljmp
push
inc
mov
push
cmpw
add
xchg
lahf
movsl
mov
sub
adc
sbb
sti
mov
dec
jp
xor
pushf
xchg
loop
cltd
mull
dec
lods
cmpsl
daa
lds
and
pop
lret
negb
aas
mov
pusha
mov
inc
scas
hlt
imul
fwait
add
shrb
mov
xor
push
pushf
js
in
pop
lret
repnz
lret
push
insl
jbe
rcr
or
aam
push
outsb
scas
shlb
pusha
mov
fwait
out
cmovnp
xchg
aad
in
frstor
imul
test
cltd
lahf
stos
mov
jnp
push
sbb
push
out
repz
mov
mulb
inc
das
mov
mov
xchg
testl
jecxz
mov
jge
idivl
addr16
push
popl
pushf
movsl
roll
or
pop
xor
pop
ja
stos
outsb
cwtl
leave
sahf
loope
lock
jge
pop
pop
sahf
or
jb
int
les
fucomp
jmp
xor
dec
out
fidivl
mov
jl
pop
mov
xchg
and
sub
dec
shr
shr
mov
lret
icebp
mov
scas
cmp
pop
and
sub
ret
in
jge
arpl
movsb
dec
inc
inc
les
addr16
adc
out
test
out
mov
mov
or
or
lods
dec
sub
adc
mov
int3
jbe
shlb
add
call
outsl
inc
je
addr16
jg
adc
cwtl
gs
inc
in
mov
add
inc
lret
movsl
mov
mov
mov
imul
sbb
cmpsl
and
loope
cmp
push
in
or
lods
testl
orl
fsubrs
shl
hlt
fisttps
lds
cmp
lahf
ret
inc
rorl
or
insb
push
xchg
dec
hlt
mov
push
adc
clc
popa
out
or
and
dec
push
mov
cmpsl
in
arpl
andl
cmp
mov
imul
insb
ret
sbb
jg
jae
or
mov
sbb
jne
jge
add
adc
aad
out
or
lods
test
cmp
adc
and
inc
pop
out
loop
cmc
and
jno
and
inc
sub
lcall
loope
arpl
gs
lock
sub
and
sbb
mov
jnp
xor
cmp
pop
sub
xchg
inc
sbb
jmp
cmp
pop
lods
andl
jmp
js
pop
jne
cmp
mov
mov
js
mov
in
cmp
dec
sub
rorb
xor
mov
pop
cwtl
inc
push
dec
and
mov
es
js
sbb
in
pop
jge
adc
mov
lret
inc
mov
and
loop
js
fidivrl
roll
or
das
or
add
outsb
imul
lds
mov
sub
mov
js
mov
fsts
loop
dec
and
jecxz
inc
pop
jecxz
arpl
inc
pop
pop
pop
jg
sub
rcr
add
sbb
sbb
mov
xor
sbbb
std
push
test
push
xor
push
sbb
push
or
xorb
scas
lret
fstps
xor
mov
dec
in
or
push
push
loope
std
loop
shl
rcr
int3
adc
jns
or
out
jne
mov
cmp
push
filds
call
jne
addr16
xlat
dec
mov
rcrl
sub
adc
into
jnp
or
jmp
cmpsl
aas
sub
mov
sbb
jno
pusha
stos
rolb
fcomp
pop
or
jle
adc
pop
dec
and
shl
or
pop
insl
mov
lahf
test
add
push
lds
iret
addb
cmp
addr16
dec
xor
sbb
mov
mov
fs
int3
cld
dec
mov
push
mov
sbb
call
pop
xor
outsl
mov
inc
mov
outsl
enter
sub
sbb
cmp
jb
adc
adcl
pop
xchg
mov
inc
mov
mov
std
jbe
nop
sbb
std
cmp
insl
rcrl
fdivrs
mov
lret
dec
gs
inc
sbb
mov
sbb
cmp
lea
fs
hlt
sbb
icebp
push
loop
mov
bound
imul
insl
and
lock
xchg
cmpsl
xchg
repz
and
mov
xor
das
js
std
add
inc
ss
in
push
or
mov
xchg
xor
or
cmc
push
out
jp
or
pushw
mov
and
sub
mov
add
mov
imul
inc
dec
push
cmp
inc
in
enter
insb
jbe
cli
ja
jecxz
pop
popf
adc
cmp
mov
scas
mov
xchg
or
sbb
iret
jge
fwait
pushf
into
or
adc
ss
cmp
lea
inc
icebp
xor
in
mov
push
add
xor
out
xor
dec
nop
sub
insl
mov
add
push
ficoms
xlat
fisttpl
fcomip
push
mov
inc
sarb
rorl
dec
mov
push
adc
mov
dec
cmc
ds
in
sub
xchg
and
dec
sbb
pushf
xchg
mov
pop
movsl
jbe
fldcw
push
test
out
out
adc
stc
sbb
loop
or
lcall
mov
sbb
jb
scas
iret
inc
add
rcrb
push
scas
jns
cmpsb
or
lahf
arpl
mov
jns
outsl
imul
xchg
lret
and
push
test
sahf
and
cmpsb
add
stos
xor
xchg
pop
and
cli
add
outsb
fwait
outsb
aam
clc
pop
test
dec
cld
aam
fwait
leave
fcmovbe
mov
test
ss
adc
scas
pop
fstpl
add
xchg
pushf
dec
pop
popf
pushf
and
out
inc
and
inc
ror
dec
pop
dec
repnz
jne
xchg
cli
lahf
daa
fs
gs
cltd
test
lahf
or
ljmp
ja
nop
or
int3
stc
hlt
xchg
int
xor
mov
or
test
mov
stos
lahf
ja
sbb
mov
loope
push
sti
push
push
gs
test
cltd
mov
inc
lea
addl
mov
adc
jge
bound
outsb
jo
push
xchg
or
clc
leave
adc
sub
dec
lods
and
imul
hlt
jmp
adc
xchg
ds
pop
aas
jmp
enter
popf
dec
adc
scas
enter
imul
imul
fimull
jnp
xor
sub
xchg
clc
cmpb
aad
inc
pop
lods
inc
sbb
pop
dec
cmp
and
sbb
aad
js
clc
push
insb
fwait
ret
xchg
jo
hlt
sbb
lds
cmp
cmp
stos
lahf
es
xchg
push
mov
or
cmp
or
test
add
scas
mov
jge
cmp
mov
pushf
jecxz
sbb
pop
jo
lret
and
xchg
cs
sub
cmc
cld
adc
push
sbb
lods
cli
jae
jno
sbb
cmc
dec
xor
dec
test
cmp
hlt
mov
sbb
push
js
push
aas
data16
mov
xor
scas
les
or
iret
aaa
and
lea
lcall
jne
pop
shrl
mov
divl
jge
cmp
cmpsl
adcb
cmp
cli
hlt
loopne
dec
test
je
xor
mov
mov
or
loop
movsb
je
xchg
sbb
scas
movsb
xor
jmp
jmp
sbb
ss
and
and
cmp
xchg
call
lret
mov
in
or
movsl
and
dec
clc
pop
aaa
or
aaa
mov
or
in
xor
adc
pop
push
cmp
out
daa
cmp
mov
and
push
js
jmp
std
jb
adc
gs
mov
addr16
mov
daa
nop
sub
cmp
clc
sub
nop
wbinvd
dec
stc
jge
add
and
repz
pop
bound
fcompl
or
sbb
jns
cld
xor
inc
sub
das
xchg
push
lahf
and
loopne
lcall
jae
mov
add
frstor
fisttpl
test
lock
inc
mov
lret
das
push
mov
cmp
adc
mov
push
cmp
sub
push
aaa
dec
das
add
into
push
push
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shll
add
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
popa
inc
add
popa
inc
add
bound
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
arpl
mov
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
inc
add
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
addl
addl
test
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
