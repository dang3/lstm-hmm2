push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
or
mov
inc
push
dec
shll
arpl
or
xor
cwtl
cmc
arpl
xor
mov
fsubrs
mov
dec
mov
and
test
lds
rolb
adc
hlt
movsb
fsubr
aad
lods
push
push
rclb
jns
mov
call
pop
sub
mov
lea
push
pusha
dec
and
add
mov
jbe
mov
add
mov
aad
loopne
pop
data16
dec
into
data16
xchg
rorb
mov
test
xor
in
sti
shlb
cmc
jle
sub
lods
into
cmp
add
loopne
mov
and
jp
aaa
fs
mov
faddl
add
push
scas
fldcw
xchg
fiadds
xchg
push
bndstx
cmp
out
push
sbb
or
and
out
bound
dec
jp
push
es
mov
mov
mov
inc
fwait
jl
or
push
mov
sarl
add
enter
jecxz
in
dec
imul
inc
jns
sbb
jne
insl
sahf
or
loopne
xorl
aad
lods
addb
aaa
jg
into
icebp
xchg
xchg
add
shll
lea
adc
das
lret
inc
or
call
loopne
stos
fbstp
mov
inc
ret
stos
cmc
hlt
inc
and
fst
sbb
in
pop
jb
inc
xchg
adc
add
sbb
loope
es
mov
pop
mov
shll
je
repnz
xchg
pop
dec
cmpsl
cltd
push
cmc
sbb
aad
outsl
pusha
push
loope
ja
jo
es
mov
ja
xor
xor
fwait
lock
shrb
mov
and
adc
ja
jns
test
xor
repnz
bound
lock
daa
test
xor
push
sbb
hlt
repnz
lods
fs
pop
mov
test
ljmp
daa
cmp
jg
add
dec
stos
clc
add
icebp
fisubrs
adc
jge
popf
jno
outsl
jns
dec
jb
out
call
mov
xchg
and
push
xchg
fcompl
movsb
test
lret
mov
mov
stos
push
jl
js
rorb
sbb
dec
sti
int3
jbe
sbb
int3
xchg
push
stc
fcoml
xchg
pushf
inc
mov
push
in
lock
mov
aas
jmp
cmc
rcrb
int
mov
sbb
je
inc
jne
jo
pushf
mov
push
jne
outsb
aas
or
in
fcomip
lahf
xchg
andb
cmp
iret
add
bound
add
test
sub
pushf
and
cmp
xchg
add
ljmp
rcrl
cwtl
adc
aad
iret
and
xchg
loop
xchg
insb
adc
loope
push
dec
es
push
cmp
mov
mov
fisttpll
mov
outsl
xchg
sarl
loope
inc
push
pop
lea
dec
lds
sarb
xor
dec
popf
es
rcl
sahf
fwait
addb
pop
js
lret
sbbl
cltd
aaa
inc
or
shlb
push
out
dec
addl
arpl
pop
push
adc
sahf
lods
lret
inc
or
aam
sarl
push
add
daa
jl
mov
fidivrs
push
dec
fimuls
out
xchg
inc
or
and
or
cmc
xor
dec
mov
es
and
cmpsb
fisubl
lret
movsl
sbb
or
push
inc
pop
inc
xor
jmp
rcrl
jo
pop
decb
or
xchg
mov
daa
ja
std
jle
test
mov
fidivs
stos
xlat
cwtl
pop
xchg
lock
push
inc
fstps
sub
pop
mov
jecxz
adc
xchg
pop
mov
rcll
int3
add
std
cs
fisttpll
in
sbb
cwtl
pop
lcall
mov
add
lcall
xor
ljmp
and
addr16
sub
mov
sub
lret
sub
inc
imul
sarl
xor
das
jb
pop
movsl
ljmp
dec
or
aas
lahf
inc
or
stos
pop
std
stos
out
mov
aad
cmp
nop
mov
sub
mov
popa
jl
inc
xor
adcl
imul
ret
pop
vshufpd
jmp
stc
cwtl
mov
or
aas
pushf
shll
mov
xchg
loop
add
xor
ss
jp
xchg
or
fsubp
incb
loopne
inc
cmp
loop
sub
or
daa
fcomps
out
pop
mov
sbb
dec
ds
ds
cmp
mov
arpl
inc
test
xor
aam
out
pushf
push
push
cmc
add
sbb
test
mov
test
arpl
dec
dec
inc
popa
cmp
sub
ja
sbb
adc
rcll
dec
rclb
or
mov
cmc
dec
inc
orb
dec
sbb
inc
lahf
dec
sub
cmpsl
ror
rcrb
loop
mov
inc
cltd
orl
idiv
loopne
imul
or
lahf
cmp
lods
gs
outsb
js
mov
and
mov
mov
out
clc
cmpsb
fldl
push
mov
gs
sub
inc
sub
jecxz
aam
push
cmp
adc
mov
push
sub
loopne
leave
sarl
mov
cmp
push
popa
sbb
stc
cs
pop
repz
cmp
out
cmp
jno
mov
push
jmp
mov
pushf
sbb
jnp
int
pop
mov
xchg
mov
jns
jg
mov
in
pusha
inc
inc
popa
ljmp
lock
arpl
arpl
js
jb
jp
fmull
pop
orl
loop
mov
xchg
aad
and
jp
rolb
scas
mov
or
lcall
cmp
frstor
fwait
aaa
jmp
xor
out
ss
add
pop
jmp
fwait
cmp
inc
fsubrl
dec
cmp
iret
sbb
in
mov
fcomp
dec
hlt
xchg
mov
loopne,pt
push
icebp
xor
outsl
xlat
mov
testl
adc
scas
jne
lods
jbe
pop
imul
mov
dec
push
shr
test
cmc
lahf
ss
jp
or
mov
lods
or
cltd
adc
leave
cmp
out
and
jle
xlat
inc
or
movsb
lret
lret
xor
arpl
cmpb
mov
ret
dec
hlt
push
pop
xor
xor
mov
mov
int3
rorl
sub
ss
mov
inc
push
mov
dec
and
inc
arpl
mov
lock
inc
gs
dec
xor
pop
aam
es
je
or
mov
stos
int3
shlb
mov
adcb
bound
cmp
push
sbbb
in
mov
mov
test
test
cmp
leave
xchg
mov
mov
sbb
jge
xchg
and
cmpb
xor
sbb
sub
fcomip
sbb
add
adc
scas
or
and
jmp
sbb
push
sbb
jge
inc
push
xchg
loope
in
mov
mov
daa
ret
cmp
add
sub
xlat
movb
sub
in
int
jo
mov
inc
xchg
aad
sbb
fcom
imul
sub
and
ja
or
xor
pop
repz
jg
test
fistpl
rorb
jmp
add
ret
lcall
movsl
int3
adc
mov
pop
in
sbb
es
mov
pushf
pusha
mov
adc
push
push
inc
sbb
movsl
adc
pop
xchg
scas
pop
mov
in
xor
sub
cmp
dec
jbe
mov
adc
push
loop
and
sbb
scas
dec
fstl
mov
jecxz
in
outsb
cmp
in
or
xor
fs
inc
xchg
xor
inc
add
sbb
add
jbe
pop
fcmovb
test
push
or
in
in
mov
scas
xorb
mov
int3
sbb
adc
je
adc
ss
sbb
sub
lcall
add
mov
clc
xor
js
pop
pusha
cs
mov
flds
shl
in
clc
jae
add
insl
in
xlat
lret
pop
ret
and
aas
mov
lock
fs
int3
enter
in
dec
pop
or
sub
or
cmp
int
sub
data16
pushl
push
into
fs
test
sbb
cmpsl
int
cmc
or
xchg
pushf
sahf
inc
rcrl
cmp
outsl
clc
jp
push
xor
dec
pop
xchg
sub
dec
andl
mull
fwait
in
jle
clc
pop
jle
cli
mov
dec
jge
cmc
je
adc
mov
mov
cmp
jmp
mov
test
mov
inc
imul
jno
and
push
add
add
jge
xchg
pop
pop
cmp
aas
ljmp
mov
mov
dec
in
mov
mov
dec
push
ja
mov
add
or
adc
adc
sahf
cmp
cmp
lcall
dec
cld
sub
dec
or
ret
call
clc
add
cli
cli
daa
les
roll
fld
mov
pop
out
push
popa
ja
shrb
mov
sbb
mov
inc
xchg
jle
enter
sub
insl
stc
push
loopne
and
or
inc
and
shl
js
inc
mov
jp
lods
or
push
mov
or
data16
mov
aas
mov
je
cltd
jae
es
sub
pop
fwait
adc
call
mov
push
cmpsl
cmp
test
inc
addr16
or
pop
in
or
ret
mov
js
push
and
pop
mov
xor
add
in
push
aam
das
aam
sbb
inc
mov
sbb
aaa
jecxz
jg
adc
cwtl
and
mov
cmpsl
nop
mov
mov
xor
daa
cltd
mov
xor
sub
icebp
mov
and
rclb
out
xchg
mov
cmp
into
ret
call
call
int
sti
dec
adc
repz
mov
sarb
and
loopne
sub
dec
xor
lods
mov
jo
push
je
sub
dec
test
mov
int3
in
mov
jne
notb
mov
cmp
clc
push
test
xlat
dec
repnz
xor
pop
jnp
or
js
test
adc
push
adc
pushf
int
movsl
cmpsl
sbb
and
mov
cmp
outsb
das
ja
add
stc
mov
add
mov
in
and
scas
les
or
mov
lahf
aam
push
push
push
pop
ror
arpl
pop
lea
mov
nop
mov
cmc
lds
xchg
movsl
mov
adc
inc
jl
lahf
xchg
xlat
inc
popa
xchg
shr
push
pop
jns
pusha
dec
testl
cmp
pop
std
stc
add
mov
or
sub
push
adc
inc
inc
cmpsl
adc
and
mov
sar
imul
or
imul
sbb
idiv
mov
xor
jne
xor
jmp
insb
sub
sbb
shlb
xor
cmc
fisubrs
inc
pushf
cltd
testb
ret
les
adc
fsubl
enter
inc
loope
cli
jecxz
cmp
xchg
pop
add
adc
fs
ret
or
and
lret
cld
xchg
addr16
sub
cld
int3
or
hlt
or
insl
call
mov
mov
inc
inc
xchg
leave
mov
xlat
ss
call
and
xchg
sar
popa
in
stos
leave
mov
or
sub
repnz
push
sti
pop
ret
inc
movsb
stos
sub
adc
fidivrl
sub
push
mov
repz
stos
sbb
and
in
jmp
fwait
adc
inc
sahf
popa
push
rcrl
or
scas
es
fsubrs
xchg
push
pop
or
add
pop
jle
xor
add
mov
in
loope
clc
and
mov
xor
cli
stos
cmpb
xchg
or
xor
fnstcw
mov
sbb
stos
dec
icebp
inc
fucomi
stos
mov
jge
es
mov
cltd
test
adc
aam
test
stos
int3
hlt
aam
cs
add
sbb
jmp
std
adc
jno
in
aam
jnp
ret
xor
sub
out
jle,pn
leave
gs
xor
les
xchg
mov
hlt
jge
stc
frstor
sbb
dec
xor
dec
out
sbb
cmp
jg
clc
sub
cmp
mov
pop
xchg
mov
stc
inc
cmpsl
jnp
fiaddl
mov
pavgb
std
sbb
movsb
lret
loop
scas
pop
sbb
in
sub
push
loopne
dec
gs
and
insl
mov
dec
inc
pop
adc
mov
jecxz
iret
add
push
mov
rcr
or
stc
fwait
or
movb
adc
js
add
inc
fcmovb
les
pop
sub
push
testl
imul
add
jb
cmp
sbb
sub
cwtl
and
mov
pop
and
adc
lds
or
mov
mul
int3
dec
hlt
mov
mov
sub
mov
daa
test
faddl
xchg
or
sti
in
pop
lret
call
mov
mov
ss
lahf
adc
out
sub
fsubr
pop
ljmp
lods
out
lret
dec
jne,pt
fistl
aaa
lahf
dec
shl
jp
adc
faddl
call
cmpsb
push
add
jno
out
icebp
pop
fldl
rcll
clc
push
and
pop
and
ds
mov
addr16
jne
popl
fmull
xchg
insl
cmc
sub
mov
jge
stos
int3
jb
cmpsb
lds
fs
and
inc
cmp
idivl
jge
int
ret
dec
iret
mov
cmp
inc
in
cmp
lea
cltd
xor
in
push
jg
push
fsubr
adc
adc
imul
sub
mov
jp
xchg
repnz
mov
add
sub
cmpsb
inc
add
stc
cmp
cmpsb
out
lret
and
sti
pushf
mov
sub
pop
xchg
cli
dec
nop
mov
jmp
repnz
movsb
push
decl
movsb
inc
test
daa
push
lret
int3
mov
inc
movsb
js
icebp
mov
inc
mov
sbb
and
sub
or
push
sub
dec
nop
in
xchg
aad
jp
aam
movsb
cli
jae
shl
jne
jl
xchg
shrb
dec
dec
je
out
lock
lods
dec
fisttpl
lret
cmpsb
popf
lahf
mov
scas
add
jmp
lock
jmp
xchg
pusha
push
xchg
pop
hlt
out
jne
shll
shrl
push
pop
push
mov
mov
push
mov
mov
jae
pop
pushf
mulb
mov
mov
in
repz
xchg
scas
jne
gs
clc
mov
dec
mov
ret
aam
sub
jmp
loop
mov
sarl
add
push
mov
sbb
and
repnz
shl
push
bound
pop
jns
push
int
jne
daa
adc
loopne
je
xchg
or
pop
iret
loope
outsb
hlt
outsl
dec
loop
adc
jne
int3
jne
popf
cld
push
lods
add
mov
mov
or
mov
sub
sub
ror
imul
xchg
pop
adc
sbb
out
fiaddl
and
push
or
add
mov
jnp
andl
sub
inc
jne
jo
test
ret
sub
adc
popa
push
int
jp
push
and
add
js
and
aad
dec
and
in
testl
add
fs
iret
or
xchg
sti
xlat
xchg
mov
clc
pusha
in
xchg
or
push
loop
push
imul
pop
rcrl
adc
or
ficomps
cld
add
shl
icebp
daa
ret
adc
adcl
jg
jp
je
sub
rclb
in
sar
cmp
jne
sub
jmp
insl
fdivrs
out
aam
fidivl
push
jl
push
xor
ds
push
bound
dec
cli
popa
out
push
sub
lods
sub
stos
cmpsb
in
and
repnz
in
pushf
push
sbb
jmp
inc
out
cmp
or
ja
sub
lret
pop
push
out
push
fs
cmp
xor
enter
popf
and
push
fcoml
sub
pop
pop
jl
mov
xor
inc
sbb
mov
inc
jo
fsubp
je
imull
outsb
test
scas
gs
pop
jnp
loope
fbld
push
xchg
jns
push
pop
in
clc
jmp
sub
addr16
jl
std
in
cld
insb
pop
sbb
lahf
jae
sub
push
lcall
sbb
aaa
lahf
in
enter
ret
hlt
pop
add
lock
rolb
out
loope
mov
divb
in
or
scas
or
or
daa
outsb
in
adc
aaa
repnz
fiadds
sbb
leave
push
dec
stc
sbb
push
mov
sub
repnz
out
dec
mov
jae
inc
in
outsb
pop
aaa
xchg
inc
ficoml
sub
cmp
cmc
adc
pop
cli
inc
xchg
push
inc
xlat
cmpsb
push
fcomps
mov
lds
scas
mov
xor
or
nop
cli
adc
fcmovnb
out
or
mov
xor
sub
mov
outsl
mov
jmp
stc
adc
les
push
xchg
or
dec
sub
adc
dec
pusha
xchg
loop
mov
or
jo
insl
test
jno
sub
sbb
xchg
jecxz
pop
idivl
test
in
js
outsb
je
cs
adc
add
push
outsb
mov
test
jge
in
out
inc
sti
or
jecxz
xor
movsl
dec
scas
mov
add
ret
mov
dec
mov
aas
pop
fldcw
add
cmc
jl
mov
in
xchg
lret
inc
cs
push
cmpsl
data16
out
sti
jmpw
or
mov
lea
xor
jmp
mov
pop
aas
movsl
or
adc
fisttps
sahf
imul
xor
mov
mov
sar
fists
jnp
push
idiv
lret
mov
gs
cmp
loopne
mov
adc
movsb
daa
mov
sbb
jnp
jo
cmp
mov
rorb
imul
repz
push
cltd
xchg
adc
sti
cs
movsl
out
hlt
fcoms
push
aas
decb
adc
aam
mov
out
and
adc
fsubl
sbb
test
pop
or
addl
popl
cmp
aas
pop
adc
and
ret
add
rcrb
jp
mov
jno
pop
mov
lahf
fmull
sbb
aaa
lahf
push
lret
into
roll
mov
xchg
inc
pop
stc
dec
cmp
and
aas
cmp
daa
rcrb
in
popf
fiaddl
add
xor
bound
test
cmp
sti
adc
sbb
stc
fistps
adc
inc
in
mov
add
mov
xchg
mov
xchg
in
sub
lods
call
fldt
jae
cmovge
shll
jno
icebp
dec
push
xchg
jge
into
cmpsb
mov
and
adc
loope
mov
ds
lods
imul
cmp
xor
pop
mov
lods
jno
cmp
vpmovmskb
shll
jo
inc
and
adc
fcomp
xor
repz
repnz
cmp
xor
fdiv
jb
dec
sbb
ret
ljmp
add
daa
aas
cli
pop
fists
xor
mov
pop
xchg
popf
imul
arpl
cmpl
mov
push
hlt
enter
xlat
insb
mov
pop
lods
dec
lods
mov
cmp
jae
in
jne
call
lahf
sub
xchg
popf
cmp
jp
into
fsubr
dec
lahf
sbb
lret
fnstsw
sbb
push
push
dec
loop
jge
div
mov
cmp
daa
mov
xchg
cmp
xchg
loopne
pushf
enter
mov
or
sbb
push
mov
adc
mov
sub
jmp
push
imul
cmp
or
mov
add
inc
xor
movsl
mov
and
inc
test
out
mov
sti
xor
or
inc
cmpsl
adc
call
adc
mov
cmp
xor
and
push
or
add
aad
arpl
mov
mov
filds
popa
enter
negb
loopne
bound
in
outsb
add
fistpll
iret
fdivs
les
mov
mov
jecxz
ret
dec
lcall
sbb
and
dec
push
lods
mov
pop
int3
ss
loope
loopne
mov
aas
fmuls
mov
sub
jns
lods
lret
out
pop
ret
xor
pusha
jne
mov
ljmp
outsb
rclb
inc
jecxz
pop
sbb
lods
add
fimuls
mov
mov
cli
mov
rorb
pop
jmp
fstl
mov
ljmp
or
lret
adc
dec
adc
cmpsb
popa
fadd
icebp
adc
loope
nop
test
mov
mov
out
dec
mov
popa
stc
sub
sbbl
ret
sbb
popa
call
insb
rorb
in
cmpsl
les
daa
xorl
clc
mov
add
inc
in
jo
test
stos
jb
sbb
mov
mov
pop
cwtl
daa
push
inc
adc
sbb
and
push
test
call
je
cmp
cmp
cwtl
call
xor
stos
push
jmp
xchg
mov
js
xor
adc
loopne
add
dec
stc
xchg
xor
mov
sub
adc
sbb
sub
enter
dec
out
xchg
inc
add
inc
dec
pop
sub
in
cmpsl
stos
out
pop
ret
lea
into
cld
xchg
sub
push
dec
mov
movsb
ficompl
sbb
cld
cmp
push
and
shll
and
dec
push
nop
jno
es
call
popf
xchg
push
sub
je
pop
lahf
shll
push
leave
and
push
adc
add
dec
cmp
jno
cmp
test
jo
cmc
jae
push
push
xchg
pop
pop
adc
xor
mov
and
push
jno
dec
pusha
incb
cmp
mov
sub
mov
dec
sti
dec
xchg
lcall
mov
push
jo
xchg
ficoml
sbb
adc
test
sbb
data16
xor
push
pop
sub
fxch
testl
subb
push
aad
dec
loope
xor
inc
dec
lea
out
mov
ljmp
pop
inc
mov
pop
jnp
xchg
sub
jb
filds
xor
xor
sub
out
icebp
mov
and
adc
sbb
jge
jle
ja
adc
sub
adc
or
jecxz
xchg
test
push
ljmp
mov
popa
xor
xor
jmp
push
je
or
xchg
std
and
das
jge
scas
xor
dec
cmpsl
dec
cld
inc
cmp
inc
mov
fistl
test
aaa
dec
sahf
negb
mov
pusha
add
pop
mov
pcmpgtw
rcll
xchg
ficomps
or
lret
out
dec
sahf
inc
aam
push
andl
into
loope
jle
pop
or
push
int
rorb
fstps
push
and
adc
sub
add
pop
pop
hlt
pop
call
cwtl
es
loope
pop
mov
and
cmp
push
movhps
cmpsl
pop
fsts
or
shl
add
xchg
add
nop
call
mov
fiadds
xchg
mov
pop
sarl
sub
cmp
adc
add
sbb
pop
jg
adcl
inc
lods
jno
dec
lahf
stos
push
add
push
dec
test
lahf
out
stos
or
push
negb
int3
int
mov
or
outsb
or
and
insl
and
push
xor
mov
enter
fwait
stos
or
cmp
test
test
xor
sbb
cmp
in
and
xchg
loope
push
ficoml
fidivrl
inc
pop
dec
sub
mov
add
jbe
adc
dec
idivb
jl
dec
pusha
mov
mov
inc
cltd
imul
loope
aam
add
pop
jle
sub
or
mov
or
xor
or
ljmp
xchg
mov
dec
pushf
inc
dec
cld
mov
sub
leave
ljmp
jp
adc
punpcklbw
das
shr
stos
ficompl
inc
push
push
mov
dec
gs
inc
xor
jp
lds
jge
rcrb
dec
hlt
rorl
adc
or
pop
andl
inc
jp
dec
cmp
jg
fisubl
cmp
cmp
ret
pusha
xor
cltd
hlt
pop
jmp
in
mov
cmovo
movsl
es
ljmpw
jo
orl
cld
dec
mov
xor
add
mov
push
xchg
dec
roll
dec
ffree
aad
fsubs
push
in
push
sarl
mov
and
je
test
mov
adc
and
sub
add
pop
ljmp
cs
push
out
mov
inc
jnp
push
stos
pop
fwait
ds
stc
roll
jns
stc
aad
ret
arpl
push
jo
mov
scas
hlt
pop
xchg
fcoms
insb
pop
std
sub
rclb
xor
je
xlat
pop
cmp
mov
xchg
cmp
daa
xor
xor
fincstp
inc
cmp
in
std
pushf
icebp
jecxz
stos
pop
jb
cmpsl
jne
pop
add
ftst
aam
dec
cli
imul
jae
insb
xchg
insl
sbb
inc
mov
mov
pop
fwait
scas
pop
pop
sub
outsb
movsl
lret
repnz
jle
in
adc
jmp
sub
and
xor
or
mov
mov
test
inc
addr16
pop
cltd
out
push
pop
repz
test
rolb
xchg
mov
popa
andl
cwtl
into
in
mov
out
sbb
jns
je
jge
rorb
and
pop
dec
std
sub
pop
mov
test
pushf
repz
cmp
push
or
push
clc
mov
or
or
je
imul
insb
or
push
cmp
cltd
mov
xor
inc
aad
pop
addb
insb
lahf
repnz
dec
les
gs
mov
lcall
sbb
fnstenv
sub
popf
push
sarb
lcall
add
cmc
mov
ds
movl
insb
sub
inc
inc
jo
insb
add
sbb
fs
out
mov
fucomp
repnz
lret
cmp
ss
stos
sar
xchg
imul
rcl
pop
shrl
xchg
negl
lock
pop
shlb
pushw
lock
jb
mov
mov
cmp
jmp
ja
mov
iret
jle
std
addr16
or
xor
mov
xchg
out
imul
fs
into
or
xor
mov
and
aas
outsb
fldt
fcomp
cwtl
gs
push
mov
push
and
xchg
adc
out
scas
and
inc
movsb
fists
xchg
stc
push
cld
xchg
push
loop
add
clc
imul
test
sub
sub
mov
jo
add
xchg
lret
cmp
mov
out
xchg
cmp
outsb
dec
je
sbb
ret
out
enter
xor
mov
aaa
cmp
out
cmp
popf
outsb
into
mov
push
pop
jae
test
sarb
pop
movsb
push
inc
sbbb
pop
cmp
out
lods
divl
inc
xor
stc
mov
or
lret
inc
cmp
cmp
pop
adc
jp
insl
in
inc
jae
rorb
lret
insb
mov
fs
test
icebp
cwtl
push
xchg
aam
adcb
lds
mov
mov
push
movsb
sbb
enter
fcmove
and
je
aam
lcall
ret
repz
xor
clc
push
mov
mov
filds
fldl
in
das
pop
ficoml
out
shlb
jmp
lret
push
jmp
lcall
bound
popf
sbb
fcompl
int3
ret
lret
adc
outsb
mov
out
sbb
add
xlat
shrl
cltd
flds
pop
xor
por
mov
sbbl
xchg
cmpsl
test
inc
stc
testb
or
setno
jg
fidivrs
sti
rclb
or
adc
jns
push
ficoms
mov
in
xor
pop
fcom
insb
out
push
ret
pop
push
mov
pushf
lahf
sub
xor
mov
add
and
les
inc
test
sub
pop
cmp
sbb
cld
sahf
ss
cmpsb
sbb
ljmp
pop
sbb
xor
js
xchg
in
les
sbb
es
mov
xchg
push
sbb
ret
adc
push
cmp
cld
sub
or
xor
inc
inc
mov
ret
dec
pop
sub
inc
shr
mov
fsub
mov
fidivs
repnz
mov
cmp
sub
mov
mov
cmp
fists
rorb
leave
and
lods
loopne
cmp
cmp
and
sbb
aaa
push
push
jle
addr16
push
nop
in
mov
push
inc
jno
mov
xor
test
inc
mov
cmp
mov
loope
pop
jo
and
jo
lret
pop
adc
mov
mov
xor
pop
pop
scas
stos
in
push
fs
add
push
push
jns
cwtl
aam
clc
out
inc
lret
out
rcll
gs
xor
xchg
ljmp
imul
dec
loope
shrl
mov
pushl
push
jl
mov
push
fimull
cmp
pop
xchg
adc
sub
in
and
adc
fcomps
lea
test
lea
jmp
hlt
cmp
inc
xchg
xor
jge
push
jecxz
add
lock
in
inc
mov
cmp
fwait
out
inc
mov
inc
adc
mov
jmp
sub
pop
pop
push
push
dec
jmp
push
push
mov
fcmovnbe
js
xor
testl
int
fistl
xchg
dec
mov
xor
pop
jae
mov
lret
sbb
jns
mov
and
mov
inc
sar
clc
mov
inc
jle
cwtl
std
cli
push
addb
and
jnp
jno
clc
fs
mov
test
insb
lret
push
mov
push
out
iret
jb
mov
je
dec
pop
sbb
sbb
xchg
out
mov
lahf
lods
idivl
xchg
inc
add
stc
out
mov
inc
pop
loope
mov
loop
dec
std
ljmp
cmp
insl
mov
xchg
add
adc
pushf
test
rclb
and
jl
sub
or
fisubrs
aad
mov
leave
sub
push
pop
stos
jo
mov
loopne
mov
call
or
stc
hlt
cltd
test
out
mov
lods
shlb
add
shlb
pop
dec
fs
js
or
pusha
jb
xchg
into
fdivp
fmull
pop
leave
fs
ret
jno
movsl
es
pop
ret
push
adc
adc
sub
ljmp
dec
add
dec
jmp
aas
lcall
inc
push
push
sub
andnps
add
jp
dec
add
loopne
add
hlt
lods
dec
orb
test
mov
add
stc
pop
cmp
scas
stc
scas
movsb
lcall
out
imul
jmp
mov
shlb
fistps
es
repnz
cmpsl
leave
jb
jo
xchg
rorl
test
js
inc
mov
mov
test
orl
sub
dec
cmpsb
daa
fs
js
jb
lret
dec
nop
movsl
mov
mov
imulb
pop
mov
cmpb
jmp
jbe
lds
repz
dec
mov
or
leave
pop
push
pop
jbe
mov
sbb
mov
adc
jns
add
mov
push
mov
in
sub
sub
ljmp
bound
iret
push
or
jnp
cmp
push
jo
fcompl
cld
out
cmpb
cltd
sbb
ret
repnz
cli
jmp
xorl
xorb
jge
sub
mov
xchg
repz
repnz
jle
ds
push
mov
xchg
ds
pop
pop
lds
adc
or
addr16
cwtl
mov
movsb
mov
aaa
lret
adc
out
clc
push
fidivl
int3
push
jge
lods
inc
or
fs
movsb
sub
fneni(8087
in
sub
sarl
mov
test
int3
js
mov
xchg
stos
iret
sahf
lods
mov
add
ja
and
stos
xor
incl
dec
ret
cli
lock
sbb
loop
and
jns
es
xchg
inc
push
sub
push
sub
push
lods
jg
lock
cmpb
push
sub
stc
pop
xchg
jne
jb
sub
pop
mov
add
mov
pop
rclb
pop
cmc
pop
fisubl
jne
adc
out
or
xor
adc
scas
jp
shrb
cwtl
add
dec
imul
rclb
xor
pop
xor
leave
push
xor
push
mov
lock
pop
mov
mov
in
ja
jae
dec
lods
iret
mov
test
mov
inc
push
and
pop
xor
pop
cmpsb
inc
cli
bound
add
cmp
mov
and
mov
fldl
pop
int3
int3
mov
or
repz
sub
in
popa
sub
scas
adc
das
cmp
in
fisttpll
outsl
lahf
adc
mov
push
cli
outsb
iret
push
mov
stos
xor
pop
movsl
sahf
stos
call
push
aad
xchg
and
pop
xor
pop
xchg
mov
jo
mov
push
push
iret
inc
pop
lods
pop
insb
cld
pop
pop
lahf
add
out
jp
repnz
cmp
xor
inc
in
fsts
lds
loopne
xor
leave
aas
gs
inc
push
or
sahf
out
mov
js
and
sbb
imul
jo
push
scas
jo
add
pushf
sub
ds
out
addr16
mov
in
cmpsl
mov
push
and
inc
mov
lock
mov
push
and
psubd
jle
repnz
adc
lods
stos
aaa
clc
jge
out
pop
add
push
fwait
dec
xchg
or
xchg
mov
xchg
sbb
inc
leave
orl
mov
daa
add
fsubl
lods
out
inc
loop
fsub
adc
inc
xchg
inc
xor
sub
or
dec
mov
jle
andl
lret
loop
adc
lret
jmp
push
xlat
add
adc
rol
fcomps
rcll
ret
enterw
jle
xchg
enter
jl
add
adc
cwtl
xchg
pushf
xacquire
pop
adc
or
jne
pusha
inc
ss
cld
rol
add
test
out
lret
in
or
cmp
sub
cmc
idivb
dec
idivb
fs
stos
sub
or
xchg
sub
fnstenv
call
dec
fidivrs
ret
daa
xchg
dec
aas
jbe
xor
jnp
js
data16
dec
flds
or
add
jl
xlat
ds
iret
inc
sub
mov
pop
gs
or
or
sub
dec
mov
jo
push
adc
out
data16
pop
lea
fisubrl
xchg
fnstenv
mov
cmpb
rorl
ss
pop
sub
aas
jl
xor
ds
cmp
out
and
aas
enter
jge
into
les
test
jecxz
sub
sti
sbb
jns
dec
cli
sahf
add
pop
cvtps2pd
push
jmp
mov
call
dec
xor
add
in
adc
lcall
iret
call
and
push
mov
and
push
jp
int
loope
pop
andl
mov
aam
or
dec
jecxz
xchg
pop
jle
sbb
ret
adc
bound
push
push
inc
or
je
mov
ret
fisubrs
inc
dec
les
xor
stc
push
cmp
add
outsb
mov
xchg
push
push
pushf
push
fbld
inc
stc
push
sbb
subl
fwait
call
cmp
ja
aad
dec
inc
iret
and
dec
pop
inc
add
lret
xor
dec
cmpsb
xchg
gs
bound
jns
push
std
cmp
pop
popw
sti
and
je
and
add
ljmp
outsl
cmpsb
ss
adc
and
test
push
cltd
fnstcw
inc
fwait
and
mov
cmp
cmp
leave
fs
int
fmul
pop
dec
sub
pop
int
mov
loopne
pop
insl
pushaw
mov
or
flds
lret
inc
push
bound
lods
push
dec
add
mov
idivb
adc
mov
test
sub
bound
in
sub
mov
mov
mov
inc
push
stos
xor
mov
pop
sub
fadds
sti
shl
mov
mov
gs
sub
fisubs
iret
pop
mov
sarl
pop
stos
movsl
xchg
repnz
xchg
xchg
mov
push
mov
mov
fcomi
ljmp
repnz
or
cli
ds
loop
jmp
test
push
lods
gs
rorl
pop
sti
test
lret
rcll
xchg
cmpsl
ret
arpl
mov
stos
and
imul
test
mov
rolb
sbb
dec
mov
xabort
hlt
cmp
push
stos
scas
xor
add
mov
call
xchg
jmp
xchg
arpl
inc
mov
xchg
pop
fdivr
pusha
test
sbb
add
cmp
mov
sub
xchg
mov
mov
fldenv
pushf
lret
mov
push
xchg
mov
mov
dec
push
lret
pop
arpl
std
lock
cmp
je
lcall
cmc
dec
fisttpll
ret
mov
gs
scas
push
adc
call
dec
push
out
std
and
cs
mov
mov
lds
dec
movsb
jmp
imul
push
and
cwtl
stos
movsb
xor
jmp
push
ror
xchg
lcallw
jg
inc
scas
adc
movsb
pop
incl
cmpsl
xchg
or
lcall
insb
jns
ror
mov
mov
lahf
fstpl
scas
fidivrs
jae
inc
xor
dec
pusha
adc
in
mov
push
loop
test
sub
test
push
pop
cltd
aam
mov
dec
imul
xchg
sbb
mov
add
lods
fnsave
push
loopne
xor
hlt
out
adc
cmc
fsubrs
mov
push
aaa
out
pop
fs
mov
hlt
mov
jp
cmp
cbtw
jl
test
push
jb
mov
js
pop
mov
xlat
sbb
aam
test
mov
dec
out
mov
sbb
mov
pop
mov
or
sub
and
jnp
jnp
jo
mov
ja
xor
ret
dec
sbb
inc
shll
mov
sti
and
in
lahf
jmp
stos
push
cmp
scas
insl
stos
mov
add
jnp
out
outsl
stc
mov
sbb
dec
jno
test
sbb
adc
sbb
popf
aad
cmp
jg
push
and
rorb
mov
nop
sub
maxps
lea
push
jg
or
orl
fistl
rolb
sbbl
push
in
mov
das
cmp
xchg
call
in
xchg
ret
sub
and
cmpl
rcr
push
ret
negb
in
std
stc
pop
sarb
orb
fdivr
insb
pop
mull
push
inc
sbb
lret
gs
adc
cmp
out
push
sti
cmp
inc
lret
add
stc
mov
sti
push
arpl
in
daa
push
cmp
mov
ljmp
aaa
mov
mov
mov
xchg
std
push
add
add
pop
int3
jne
popl
xlat
outsl
rcrl
mov
or
addr16
or
push
push
stos
out
and
cmpsb
sbb
clc
mov
ds
ds
dec
pop
cmp
out
add
xor
lret
mov
js
fwait
xchg
or
xchg
scas
sub
lds
sub
cmp
sbb
repz
je
and
enter
mov
pop
roll
or
sbb
and
icebp
mov
sub
leave
xchg
fdivs
cmp
out
mov
popf
sbb
out
ficompl
aas
lds
and
sbb
int
icebp
cmp
gs
and
mov
imul
out
and
sahf
xlat
dec
mov
shl
push
fcompl
dec
lods
mov
push
mov
mov
mov
fwait
mov
es
push
outsb
jb
add
ret
dec
inc
xorb
cmpsl
stos
jl
test
push
sub
mov
imul
xor
sub
dec
xchg
push
mov
in
cmp
sti
cmp
sbb
mov
loop
mov
fldcw
push
jecxz
xlat
imul
shlb
push
adc
movsb
not
jp
cmp
push
push
dec
mov
test
mov
lahf
mov
adc
sbb
movsl
inc
ja
aam
and
pop
dec
js
cld
mov
adc
repz
dec
dec
arpl
mov
add
dec
std
dec
rol
fidivrs
mulb
push
pusha
adc
and
jne
shll
loop
in
fnstsw
xchg
popl
repnz
and
es
mov
leave
movsl
outsl
xor
inc
jecxz
adc
lods
mov
push
scas
cmp
xor
jbe
xchg
mov
enter
cmp
inc
push
outsb
ficomps
lret
cmc
dec
inc
sbb
stos
shlb
dec
loop
inc
xchg
ja
jno
and
ja
out
push
test
shrl
sub
call
mov
inc
pop
pop
lds
push
fucomi
push
insl
sub
sbb
into
mov
je
rcrb
cmp
mov
ds
adc
cmp
loope
call
out
adc
lahf
decb
shll
test
sub
mov
leave
xchg
ja
sbbb
and
sbb
test
mov
insl
int3
mov
and
shl
sti
mov
cmp
mov
sbb
enter
lds
fsubrs
and
das
pusha
lret
xchg
pop
cmc
cmc
mov
pop
loopne
inc
sbb
fisubl
dec
push
cwtl
fsubr
adc
jge
aad
adc
fabs
iret
pop
fildll
lcall
leave
mov
repz
push
or
and
into
subl
mov
repz
popf
jmp
insb
sub
xor
add
hlt
pop
rcr
mov
sbb
fcomps
or
xor
mov
xlat
sbb
mov
inc
icebp
inc
sub
lret
or
add
fcmovnbe
sti
mov
xchg
dec
add
mov
cmp
adc
dec
clc
fs
sub
sti
and
call
add
adcl
cmp
sbb
in
arpl
insb
lock
mov
pop
and
out
mov
push
xor
sbb
pusha
lods
xchg
push
adc
fucomp
pop
fildl
insb
push
fidivrl
in
test
mov
movsl
add
stc
test
in
pop
sub
ret
aad
out
iret
push
push
jle
fbstp
cli
xchg
pop
clc
les
in
pop
cs
ja
insl
int
add
xor
pcmpeqb
xor
mov
cmp
call
and
inc
mov
das
test
lods
pop
inc
mov
inc
mov
jb
out
inc
sbb
gs
cmc
lods
inc
adc
lahf
dec
fists
fs
or
call
push
pop
mov
icebp
sub
stc
xchg
gs
scas
fsubp
fcmovbe
imul
mov
inc
sub
mov
inc
add
jb
sarb
fldl
jmp
imul
loop
ss
arpl
pop
inc
into
popa
sub
cs
jnp
imul
mov
push
sbb
xor
add
loop
cmp
stos
mov
mov
adc
mov
push
push
loop
out
adc
fisttps
mov
adc
push
and
movsl
xor
inc
xchg
dec
push
sbb
sub
sbb
cmpsl
aaa
pop
rcrl
jnp
test
sub
xchg
sbb
movsl
pop
inc
aaa
cmpsb
or
jnp
lahf
enter
push
pop
inc
mov
jae
dec
sbb
push
fdivp
in
dec
subl
bound
aas
test
jae
lea
imul
decb
orb
push
loope
inc
adc
je
sub
loop
cmc
xor
push
cmp
push
imul
scas
mov
push
ds
gs
test
ljmp
nop
push
call
mov
xor
or
mov
rorl
xorl
imul
ret
cmp
dec
sbb
cli
push
jge
mov
push
pop
in
pop
shll
idivb
test
andb
inc
out
out
rcr
cmp
jo
int3
out
imul
add
mov
pop
sub
push
inc
sti
sub
loopne
dec
pop
stos
sbb
shrb
push
jne
xlat
mov
cmp
pop
test
jae
xchg
pop
mov
inc
mov
pop
ret
cmp
sahf
xchg
xlat
xchg
orb
cmpsb
add
cli
ss
bound
inc
lcall
add
lods
mov
fwait
cmpsb
roll
pop
jo
or
add
dec
cmpb
in
mul
inc
sub
inc
imul
sahf
lea
and
jle
fidivl
adc
pop
and
cs
jb
inc
ret
test
jp
cwtl
mov
or
loopne
or
xacquire
jg
jno
add
std
stos
or
adc
push
push
je
jnp
push
dec
rol
imul
outsl
sbb
fxch
inc
popa
push
mov
and
ljmp
jb
loopne
jne
xchg
sbb
pop
fsubr
rcrl
mov
nop
xor
xchg
rcr
mov
or
mov
nop
jae
cli
fwait
pop
push
xlat
in
jo
pop
jno
inc
fcomps
and
cld
xchg
lcall
xchg
sub
push
and
fsubs
into
popa
mov
repnz
fldcw
xchg
add
fldcw
aaa
cmp
fmul
inc
mov
push
mov
xchg
mov
jmp
pop
js
sarl
xor
cmpl
sub
dec
xchg
jae
dec
jge
and
repz
adc
pop
xor
les
jmp
adc
out
xchg
mov
incl
jp
bound
hlt
repz
nop
mov
add
call
dec
ljmp
mov
ss
ss
pop
inc
pop
cmpsb
mov
pop
cmpsb
fwait
popf
outsb
std
mov
outsb
jg
mov
loope
cmp
xchg
test
pop
mov
mov
push
aad
daa
sub
xchg
dec
inc
mov
dec
mov
cltd
jmp
sub
mov
inc
insl
shlb
inc
sarb
fscale
lock
aad
sub
cmp
into
mov
fs
xchg
dec
addl
jno
xchg
push
mov
clc
jo
and
sub
xor
add
xor
jne
pop
cmc
fnstcw
cltd
ret
push
or
decb
sahf
cmp
popf
sbb
popf
mov
xor
mov
aaa
mov
mov
pop
mov
fnstcw
stc
adc
sub
jo
imul
pop
call
sbb
and
enter
sub
mov
cmpsb
imul
outsl
inc
fdivp
sbb
cmp
pop
mov
push
cmpsb
xor
mov
push
pop
push
mov
mov
int
ljmp
lds
enter
or
jge
test
les
dec
ja
insl
mov
frstor
cwtl
es
es
mov
pushf
jle
out
xchg
fildll
lcall
rcrb
or
mov
ljmp
sub
or
in
adc
dec
out
test
shl
daa
jecxz
pop
push
shlb
fisubs
repnz
mov
int3
hlt
add
fstl
in
into
dec
mov
mov
iret
aas
addl
mov
sub
push
pop
ret
jge
inc
in
push
leave
lcall
or
sbb
lcall
sbb
sub
daa
mov
out
inc
rcll
sub
ret
mov
nop
sub
iret
ja
movsb
mov
fidivs
enter
or
cwtl
xlat
add
inc
push
addl
dec
cmp
xchg
outsl
mov
outsl
vpslld
rolb
or
lahf
roll
jmp
inc
movsb
out
mov
push
xchg
and
push
insl
add
les
mov
negb
cltd
mov
jb
cmp
aas
push
andl
push
pop
mov
jecxz
in
jne
pop
out
mov
sub
vcvtpd2dqx
sub
sub
test
xchg
add
daa
cmp
cmpsb
dec
push
stc
add
and
lcall
arpl
and
pop
insb
pop
push
dec
lock
jbe
ljmp
shr
xor
in
movsl
rol
stos
iret
mov
in
cmp
mov
jb
out
adc
push
mov
lods
gs
cmp
mov
pop
pop
popf
fadds
mov
jl
push
sti
scas
or
mov
inc
stc
ds
mov
add
fwait
out
popf
f2xm1
pop
pop
shll
jl
xchg
imul
in
push
mov
stos
enter
lods
cmp
pop
mov
jb
and
icebp
add
and
sar
out
mov
and
cmp
jecxz
fistps
test
add
push
mov
mov
pop
lods
mov
cwtl
popa
push
fstpl
cltd
stos
mov
mov
adc
cmc
mov
xchg
and
dec
loope
sub
inc
mov
sbb
scas
mov
mov
hlt
addb
inc
xchg
pop
pop
mov
push
and
xchg
cld
out
pop
mov
lret
insl
pop
cmpsl
popf
ret
mov
sbb
add
popf
or
cmp
pop
push
test
sbb
fwait
jo
sahf
and
addr16
movb
adc
cmpsl
jb
cmp
xchg
lds
movsl
mov
sub
xchg
jns
and
es
sbb
pop
sbb
adcl
mov
fiaddl
mov
inc
xor
jnp
inc
adcb
xchg
mov
fisttpl
int3
fidivs
adc
mov
outsl
push
push
add
int
mov
repnz
pop
cmc
cmp
dec
dec
push
mov
out
pop
call
ljmp
push
sub
mov
adc
aaa
push
xor
adc
xchg
jmp
popa
mov
andl
sub
inc
push
insb
stc
inc
cs
mov
push
add
orb
or
data16
pop
repz
mov
adc
dec
and
mov
lds
or
xor
bound
incb
sub
dec
mov
and
cmc
call
test
xchg
shll
je
push
scas
and
pop
dec
fstpl
push
jmp
jne
stos
push
cltd
aas
fsubrl
pop
push
imul
fsubs
ds
cmp
add
movsl
lret
dec
pusha
xchg
jno
mov
fwait
jb
in
and
push
lret
push
push
lcall
and
cs
ja
shll
pop
pop
and
cltd
xchg
cli
es
mov
jle
mov
and
test
push
pop
leave
dec
push
sti
in
popf
add
cmp
out
mov
movsb
cmpsl
or
orl
in
arpl
mov
stc
cli
mov
xor
push
cmp
pusha
stos
gs
fistps
cli
std
mov
jbe
add
cwtl
daa
aas
fdivr
jmp
xor
sub
push
shll
aaa
xor
sahf
jnp
jno
test
push
inc
sbbb
lcall
es
int3
rcrb
inc
ds
stos
in
test
jbe
lretw
xor
and
lods
cmp
insl
nop
xchg
push
jo
jnp
stc
inc
and
cmp
sub
mov
cmp
enter
imul
jb
pop
push
fldenv
push
movsl
pushaw
hlt
mov
jns
dec
repz
pop
fs
sub
mov
mov
push
adc
outsl
mov
jne
xchg
push
js
dec
ljmp
imul
data16
loopne
cmp
and
arpl
in
push
loope
xchg
call
faddl
movsl
inc
out
add
xor
adc
fadds
mov
and
loop
inc
push
popa
cmpsl
fisubs
lret
pop
das
adc
xchg
arpl
negl
add
inc
dec
adc
add
in
sbb
jnp
movsb
add
inc
test
lea
cmc
ljmp
sti
out
loope
or
sbb
inc
nop
repz
jo
cld
inc
in
jle
sbb
test
inc
pop
icebp
mov
cmp
faddl
jo
jae
mov
mov
outsl
shll
stos
adcl
ret
inc
or
cltd
inc
pop
aaa
roll
stos
push
imul
mov
xor
mov
testb
je
insb
inc
pop
pushf
ret
dec
xor
fimull
inc
cli
shrl
pop
int
sbbl
mov
xchg
notl
in
push
fcmovnbe
inc
movsb
data16
jo
fs
fidivrs
outsb
leave
or
dec
cmp
lret
je
adc
xchg
out
xor
movsl
clc
pop
lahf
dec
lret
stc
adc
and
jge
in
and
loopne
movsl
daa
push
inc
mov
jo
clc
test
mov
mov
cmp
push
mov
iret
outsb
stc
lock
loope
mov
pusha
loope
dec
and
out
pop
pop
aaa
hlt
addl
xchg
pop
in
sbb
mov
push
jecxz
and
in
mov
imul
jecxz
cltd
gs
stos
pop
enter
push
lock
loop
mov
cltd
jmp
mov
movsl
into
xor
imul
call
mov
fadds
aad
popf
test
add
into
cwtl
sub
mov
scas
mov
in
xchg
test
xlat
and
pop
cmp
outsl
mov
sbb
xor
adc
xchg
iret
popf
cmp
gs
adc
sbb
sbb
repz
in
and
mov
incl
adc
cli
sub
pop
jae
xor
jnp
ret
sub
ja
jle
cmp
jae
popf
addb
mov
sbb
mov
aas
xlat
xchg
cltd
ja
nop
cmp
push
stos
xchg
dec
pop
push
add
push
clc
popa
lcall
dec
shlb
xorl
or
or
push
xor
jl
leave
cmp
iret
mov
push
and
push
push
aaa
add
in
out
jne
sbb
cmp
fcomps
test
mov
and
mov
cwtl
mov
sti
or
add
sti
xor
pop
ds
nop
xchg
dec
hlt
pusha
test
dec
les
adc
pop
pop
int3
mov
nop
push
push
shl
in
xchg
xchg
cmp
hlt
mov
add
out
adcb
data16
jle
adcb
imul
mov
dec
xchg
ljmp
xor
push
sbb
jle
sub
mov
outsl
cmp
lods
adc
sbb
lods
xor
cmpsb
pop
aas
sbb
in
in
mov
jae
das
les
jg
lahf
mov
lods
xchg
add
js
mov
scas
xor
fnstsw
arpl
bound
sarb
ja
lcall
std
inc
xchg
enter
sti
xchg
jl
lds
xor
jb
cmp
jo
cmp
push
pusha
movsb
inc
out
aad
inc
jne
outsl
adc
enter
pusha
pop
rorb
movsb
mov
pop
xor
add
jnp
and
test
das
pop
aaa
xchg
add
lods
cmp
js
push
add
push
arpl
xor
adc
jp
or
pop
xchg
push
or
ret
icebp
jp
sahf
lcall
and
or
int
ljmp
inc
mov
xorb
lahf
jnp
push
mov
clc
inc
mov
mov
mov
lods
lods
dec
mov
push
xchg
dec
cmc
inc
push
mov
and
sahf
pop
xchg
aad
xor
jo
fwait
pop
add
push
rep
xorl
cmp
mov
and
dec
shrd
pop
mov
jns
dec
ss
dec
xor
push
daa
add
inc
xchg
adc
les
ss
and
aas
inc
scas
stos
dec
out
lods
adc
xchg
in
xchg
nop
push
movsb
out
fs
jge
mov
outsl
in
pop
shll
add
addl
pop
mov
movl
inc
repz
les
mov
jne
es
mov
in
fwait
pop
xchg
arpl
cmpsb
decl
aad
shrl
ljmp
icebp
mov
adc
negb
int3
xchg
dec
jae
push
push
orl
in
dec
cmpsl
cmp
outsb
mov
jo
xchg
xor
mov
add
rcr
add
loopne
push
inc
mov
repnz
mov
and
sub
sub
pop
inc
adc
or
lods
call
push
dec
sbb
jg
sub
push
jle
xor
arpl
mov
push
push
fwait
push
and
inc
or
and
adc
jecxz
scas
jl
negl
push
add
dec
or
mov
and
imul
xchg
pop
jae,pn
mov
jle
xchg
mov
fwait
pop
push
lock
xchg
or
push
mov
mov
xor
int
mov
ss
dec
xchg
lret
jae
fnstsw
or
add
adc
test
dec
fisttps
pop
in
mov
loop
in
insb
mov
daa
stos
xchg
add
shrb
xor
ret
pop
inc
popa
inc
and
andb
lock
mov
sarl
dec
or
jo
dec
into
jmp
mov
out
cmp
fnstcw
lret
pop
ret
out
mov
daa
in
sub
dec
xchg
push
mov
add
or
fcmovnbe
loop
lcall
xor
inc
dec
lock
pxor
dec
lcall
xor
in
pop
and
push
sbb
and
aas
fwait
inc
push
dec
ret
sbb
pop
push
jle
test
fcompl
dec
xor
pop
cmp
sbb
lods
lcall
popa
pop
mov
pop
xor
inc
sbb
lret
push
and
push
inc
or
xlat
fstl
inc
fadds
into
xor
imulb
leavew
dec
mov
pusha
push
sub
cmp
mov
clc
repnz
lds
loope
or
sub
push
out
scas
jno
sub
mov
mov
add
cmp
pop
std
cmpsb
xchg
sub
fistpll
pop
into
dec
cmp
ret
arpl
lods
in
dec
add
mov
in
ja
pop
jl
sbb
push
and
cltd
cwtl
insl
adc
fildll
pop
stos
and
add
cmp
loop
sbb
out
mov
scas
cmp
inc
pop
repnz
es
movsl
xchg
lret
inc
sub
and
aad
sub
pop
es
jne
lret
ljmp
cltd
shrl
dec
repnz
dec
mov
jbe
mov
xchg
sbbl
xor
fninit
ret
push
aaa
jle
inc
movsb
test
sub
addl
scas
jae
push
or
or
pop
test
mov
push
aam
add
dec
iret
push
idivb
pusha
pop
pop
or
movsl
fisubs
inc
mov
pop
aad
pop
or
aas
lock
dec
scas
sub
in
cmp
or
stos
dec
pop
cmc
push
fidivrl
pop
in
mov
cmp
insl
loopne
daa
or
or
pop
add
das
push
loopne
mov
push
fistl
iret
or
sbb
pop
xadd
mov
inc
data16
xor
adc
test
pushf
xchg
or
inc
sbb
mov
int
sbb
dec
adc
inc
cld
xlat
outsb
mov
mov
out
cmpsl
in
adc
imul
movsl
add
aam
and
loopne
adc
testb
aad
sbb
sub
inc
pop
gs
pop
mov
xchg
jo
jnp
nop
and
dec
das
cmpsl
lret
push
jecxz
aam
stos
adc
repz
movl
jbe
lods
sbb
mov
imul
and
pop
push
dec
daa
push
lods
adc
mov
cmpsb
into
sti
divl
lret
add
sub
xor
mov
push
cltd
jne
push
jo
pop
inc
insb
mov
out
cmp
push
pop
mov
add
clc
mov
mov
lret
pop
mov
jno
mov
insb
bnd
xor
scas
add
adc
jno
imul
mov
mov
cmp
shlb
push
dec
lods
xor
callw
movsl
shr
mov
test
fisubs
std
rolb
xor
sub
dec
enter
xchg
and
xor
xor
cmpsl
mov
and
jno
add
enter
inc
jl
out
inc
mov
dec
cmp
addr16
mov
jmp
and
fimull
xchg
inc
jmp
and
push
popa
mov
mov
mov
stos
xor
imul
dec
xor
and
push
mov
sub
mov
jge
imul
pop
cmp
add
or
sub
js
and
mov
cmpsl
iret
ficomps
mov
lea
sub
cmp
lea
mov
scas
inc
lret
fcoml
aam
xorb
data16
pop
push
mov
int
jmp
ret
xchg
movsb
das
push
aas
mov
add
dec
xchg
cmp
pop
xor
repnz
mov
dec
push
pop
mov
fwait
cld
mov
pop
push
inc
into
fldcw
fcomps
and
xchg
jns
jmp
adc
not
out
cli
and
ucomiss
xchg
and
in
pop
outsl
jecxz
les
add
loopne
pop
daa
pop
shlb
ret
fstpt
cwtl
push
loope
leave
in
mov
imul
jbe
cmp
cmp
movsb
jecxz
cld
sbb
shrb
and
adc
sbb
aaa
fwait
cmp
sbb
xor
jp
ret
dec
dec
sub
pop
js
in
xchg
lea
movsb
ficompl
xor
hlt
inc
insl
inc
ret
out
adc
inc
test
pop
or
repz
int
icebp
jo
ja
notb
sti
sub
cmp
fwait
jo
inc
fcmovbe
loop
dec
movb
cli
push
lods
imul
push
stos
mov
xchg
enter
ss
xchg
and
xchg
mov
arpl
pop
inc
dec
dec
push
mov
sub
imul
xchg
mov
sbb
mov
and
ss
imul
cmp
dec
fxch
stc
test
fdivrs
push
pop
mov
mov
and
sub
lea
push
sbb
push
push
ficoms
push
adc
mov
jns
sbb
cmc
daa
imul
nop
hlt
mov
rcrb
pop
dec
out
cmpb
and
or
pop
lret
inc
mov
imull
pop
jns
hlt
push
mov
sbb
push
fldt
cld
dec
movsb
fs
jmp
mov
loope
push
sbb
adc
negb
sub
js
lret
addr16
movsl
mov
sbb
adc
mov
and
jnp
adc
inc
iret
into
pop
daa
mov
cs
imul
or
imul
pop
cltd
int3
pop
shll
dec
ret
or
jae
cltd
xchg
sub
cli
push
jb
aam
cld
les
add
outsb
ljmp
xchg
pushf
rorl
jge
inc
rorb
out
jne
sub
and
lds
int
add
dec
icebp
jae
leave
addr16
in
fdivs
in
or
mov
gs
ret
pop
and
push
filds
and
pop
push
sti
lcall
pop
push
inc
or
sub
int
mov
xor
jmp
or
std
aaa
fnstsw
addr16
push
ret
std
fs
adc
adc
in
mov
xchg
imul
ljmp
adc
lock
loop
mov
jge
jns
cmp
aas
lahf
pusha
sbb
imul
push
fmull
sbb
lods
mov
fnstcw
fdiv
xor
cmp
pop
mov
inc
insl
push
fnstsw
push
mov
push
cmp
cmpsb
sbb
ss
out
xchg
inc
xor
cmp
leave
in
mov
mov
sub
inc
movsb
dec
cltd
sbb
sbb
lods
dec
loopne
adc
fiaddl
and
ret
mov
imul
mov
rcl
outsl
bound
mov
adc
xor
aaa
es
mov
mov
sarb
jp
sbb
cmp
addr16
call
ljmp
cmp
and
addr16
lds
pop
lahf
inc
nop
jle
sbb
addr16
mov
out
shrl
jnp
and
jne
jecxz
ror
mov
pop
test
sub
repz
repz
jecxz
and
adc
adc
dec
int
iret
mov
dec
adc
insl
addr16
or
sbb
xchg
push
mov
push
fs
jno
shr
fiaddl
pushf
test
xchg
pop
cmp
cli
push
mov
test
stos
adc
jl
std
cld
sbb
daa
jmp
loope
pop
or
fadd
js
push
mov
pop
clc
loop
loopne
adc
out
ds
sub
jecxz
fwait
ds
sub
or
jg
cmp
jecxz
pushf
pusha
bound
lcall
sti
popf
adc
fstpt
push
std
xor
xor
xchg
adc
icebp
in
vpmaddwd
and
mov
ss
outsb
leave
int3
mov
inc
hlt
sahf
jge
dec
out
sbb
std
cmp
das
cwtl
test
daa
jecxz
dec
popf
in
cmc
lahf
mov
push
inc
dec
cwtl
imulb
fisttps
push
pop
mov
pop
test
fcmovu
scas
loop
cmp
jecxz
dec
and
out
rolb
xchg
cs
mov
mov
dec
sub
ja
jge
mov
and
sub
cmp
xor
call
lret
in
sub
xor
fiaddl
add
add
push
arpl
mov
add
add
repnz
cmp
addr16
int3
sub
sub
into
mov
mov
xchg
outsb
shlb
scas
jae
mov
aas
and
and
cmpsl
dec
mov
std
sub
test
sbb
daa
mov
xchg
movsb
inc
je
orb
sbb
pop
sub
inc
adc
fidivs
jns
push
inc
sbb
dec
dec
jns
aaa
movsl
fisubl
imul
call
dec
lods
cmp
out
and
fldt
mov
pop
sti
pop
sbb
push
pushl
into
and
mov
mov
dec
dec
sbb
movsb
push
loop
shl
mov
jno
xchg
movsb
push
loope
or
inc
jecxz
and
lods
ret
popf
and
inc
jae
loopne
sbb
xchg
repz
pop
popa
nop
add
push
mov
lahf
xor
sub
idivl
jne,pn
jbe
adc
sub
xor
sub
cmp
jbe
cmp
pushf
pop
orl
dec
fdivs
scas
mov
daa
cmpsl
mov
sahf
aam
jmp
out
cwtl
mov
ja
jl
push
lret
add
sbb
sarb
mov
or
loopne
xor
pop
popf
into
inc
aas
imul
stos
jmp
int3
std
addr16
push
mov
aad
lods
in
jmp
xor
fcomp
xor
sbb
sahf
outsl
popf
sbb
jo
add
pop
sub
je
inc
push
test
mov
popa
lcall
or
out
xchg
inc
popa
jb
out
stos
xchg
cmpsb
ret
lods
hlt
mov
outsl
jns
fists
rcll
add
pop
mov
push
push
sbb
adc
cld
cmp
mov
out
neg
movsl
sub
mov
call
cld
ds
cmp
out
sbb
pop
add
es
or
fwait
loop
cmpsl
push
pop
add
pop
popa
shll
mov
aam
sub
sub
insb
in
bound
repnz
insb
xor
xchg
pusha
sbb
repnz
lahf
lods
aad
repnz
rorl
test
je
pushf
jmp
stos
mov
pusha
mov
psraw
xchg
ds
xchg
mull
daa
xlat
xchg
pop
cmc
cmp
cmova
out
sbb
jae
push
xorb
and
cmc
or
lods
icebp
dec
jle
dec
sbb
dec
mov
fcom
sbbl
orl
mov
inc
stos
push
mov
mov
filds
std
adc
add
and
dec
inc
ss
filds
shrl
or
cmc
mov
sub
push
bound
push
cmpsl
lds
aaa
pop
and
add
mov
and
jl
xor
xchg
xchg
repz
or
repnz
out
mov
jne
sahf
inc
dec
imul
sbb
scas
sub
leave
mov
inc
es
mov
movsb
push
mov
jb
xchg
movsl
cmp
ljmp
dec
jp
out
arpl
push
jle
mov
mov
roll
fisubrl
out
and
cmp
mov
mov
push
jne
out
push
es
test
dec
push
mov
mov
cmp
hlt
divps
std
push
insb
pop
jge
or
push
adc
out
les
sub
stc
mov
aam
fiadds
adc
or
je
lods
push
scas
push
mov
sub
jmp
push
loop
sbb
insl
addr16
mov
cltd
mov
add
adcl
inc
sub
push
mov
sub
add
sub
mov
mov
dec
sub
insb
inc
andb
jge
out
adc
repnz
aaa
mov
shl
imul
mov
ja
or
dec
or
inc
jnp
out
aaa
mov
sbb
sub
out
mov
enter
sub
jmp
mul
icebp
inc
sbb
xor
xorb
shll
mov
call
mov
lods
inc
outsl
mov
adcb
cld
sarb
roll
ja
rorl
add
jle
jno
fisubrs
dec
in
push
in
xchg
xchg
mov
imul
adc
pop
int3
dec
sbb
and
outsb
push
movsb
jmp
test
dec
mov
mov
push
insb
jo
inc
lahf
roll
cmpsl
aaa
lods
push
xchg
dec
fwait
pop
repnz
iret
add
xor
jecxz
nop
jno
sbb
scas
in
jne
test
xlat
sub
cld
cmp
adc
dec
aad
sub
xor
gs
pushf
xchg
pop
sub
and
fisubrs
cmp
push
add
mov
add
xor
add
jmp
push
push
jmp
xor
add
mov
xor
das
or
jmp
cltd
fcoms
fldcw
and
push
xorb
loopne
fs
addr16
xchg
into
pop
jg
mov
aam
and
mov
jnp
mov
add
and
mov
stos
pusha
sar
xchg
dec
pop
xor
inc
negl
push
mov
xor
fistl
jp
outsl
inc
jbe
lods
xchg
loope
mov
mov
cld
jmp
or
pop
divl
cmp
je
shl
inc
adc
iret
out
and
out
ss
sbb
movsb
in
push
xchg
adc
dec
jg
sbb
cli
add
sbb
pop
into
jge
fadd
cmp
mov
jae
int
lret
mov
cmovae
mov
sti
and
sbb
int3
and
jle
pop
push
mov
xchg
sbb
push
call
fs
push
gs
and
out
xor
pushf
dec
pop
mov
cmp
adc
xorb
sbbb
xor
mov
ss
stos
std
pop
and
mov
cs
push
fsubr
mov
cld
mov
mov
pop
sbb
jmp
test
inc
jns
std
insl
test
lahf
ret
outsl
lods
aas
xchg
push
test
sbb
inc
cli
mov
push
lods
lret
flds
fadds
stos
aaa
add
lea
int
arpl
jae
stc
cld
mov
arpl
push
mov
lahf
ds
cltd
sahf
xlat
xlat
test
adcl
or
mov
cs
cmpsb
lds
sti
and
daa
adc
dec
sub
aaa
jbe
inc
mov
or
int
dec
fstpt
cmp
cmp
xchg
mov
mov
inc
jno
sbb
mov
out
sti
cli
inc
movsb
push
mov
adc
xor
mov
xchg
and
insl
mov
movl
jecxz
inc
js
mov
mov
or
movsl
fsubl
mov
adc
cmp
std
dec
out
pop
and
sbb
push
xor
sbb
pushf
testl
cmp
in
test
xor
fsubrs
inc
push
out
lret
cmpsb
repnz
cld
xchg
sub
decb
lahf
enter
fisttps
xor
loope
in
lods
and
ret
out
in
stos
push
pop
and
in
push
pop
sbb
xchg
test
xchg
jno
cmp
in
cltd
xchg
xchg
inc
ficomps
jbe
mov
paddsb
dec
and
popa
xchg
add
in
mov
cmpsb
jle
push
jb
dec
push
inc
xor
inc
jmp
inc
popf
test
sub
push
lcall
and
fsubrl
shr
test
mov
xlat
ret
daa
enter
mov
test
push
enter
push
fsub
adc
cld
pop
jecxz
mov
aam
push
lahf
inc
cltd
nop
pop
push
dec
push
aas
lret
jl
xchg
xchg
mov
fnsave
xchg
ljmp
inc
sahf
inc
xor
rclb
sub
sub
call
cmp
inc
nop
into
es
sub
pop
cmp
pusha
mov
mov
cmp
mov
out
sub
pop
jns
cltd
hlt
xchg
xor
icebp
push
push
iret
sbb
dec
sub
lcall
sbbl
mov
stc
test
mov
jb
pop
pop
jo
sbb
and
xchg
jns
adcl
es
sbb
iret
mov
jp
add
xchg
test
test
or
cld
or
imul
push
sbbb
push
lock
mov
out
push
lods
stos
shll
mov
and
pop
popf
sub
adc
loope
lods
sub
rorl
ja
sbb
xchg
dec
mov
pushf
notb
mov
int3
jbe
movd
in
or
pop
cmp
jne
mov
mov
insl
jno
es
cmp
std
inc
xchg
jl
mov
or
xchg
addr16
je
scas
push
ror
mov
es
notl
scas
cmpsb
scas
mov
or
xchg
mov
pushf
or
push
call
fidivs
fwait
push
in
pop
or
sub
dec
mov
gs
sbb
pusha
rcll
stos
inc
or
push
and
inc
fstp
dec
xor
loope
dec
push
das
int
push
jns
std
insb
dec
jns
rclb
push
into
jno
xorl
scas
lods
push
sti
jge
ja
xor
pushfw
mov
popa
sub
adc
aad
xor
rolb
fwait
cwtl
fsin
sbb
inc
das
pop
jns
stc
scas
jae
mov
movsl
je
pop
in
cmp
and
cmp
pushf
mov
jo
add
mov
andb
or
push
imul
cmp
cmp
mov
or
lods
and
sub
push
and
aad
insl
mov
inc
mov
std
mov
add
sub
or
push
jo
sub
in
loope
fnstsw
jne
xor
push
or
jo
lahf
fisubs
mov
loopne
test
into
cmc
or
andl
inc
ficompl
lcall
add
out
scas
jg
cmp
adc
imulb
sarl
movsl
pushf
test
cmp
fnsave
jb
pop
lret
dec
push
and
and
pop
pop
or
push
xchg
std
sub
inc
mov
ja
mov
lcall
imul
sub
mov
out
addl
xchg
mov
jno
mov
in
lock
fstps
imul
mov
aas
cmp
ds
addr16
add
pop
sbb
jns
push
inc
push
push
test
es
stc
out
scas
mov
in
hlt
jp
xchg
push
mov
ds
or
arpl
fldt
dec
push
lcall
mov
sbb
pop
xlat
xlat
mov
mov
popf
mov
insb
and
sbb
aaa
xorl
sbb
mov
int3
or
sarl
in
mov
mov
idiv
add
cli
xor
roll
std
imul
xor
xlat
or
clc
xlat
ror
pop
or
lret
and
movsb
dec
das
adc
sub
pop
in
pop
loopne
and
call
mov
repnz
sub
and
int
sub
adc
sbb
scas
rorl
sbb
mov
rorb
cld
jbe
pop
filds
jb
stc
mov
jle
arpl
ret
mov
popf
ret
sub
mov
adc
mov
sbb
xor
insl
xchg
out
insl
lahf
movsb
icebp
xor
xor
rcrl
push
cmpsb
out
neg
xor
cs
sub
dec
cli
dec
int
bound
lret
mov
stos
test
fsubs
dec
push
lahf
mov
sub
stos
test
push
imul
aaa
mov
sbbb
adc
shl
dec
xorl
push
test
movsb
rol
and
cmp
cli
psrld
js
or
stc
pop
aad
nop
mov
in
aad
stos
test
mov
loop
cld
mov
pop
paddusw
inc
lea
and
adc
mov
sbb
xchg
imul
jns
push
sub
cld
adc
dec
add
or
fcoms
xor
xor
cld
int3
dec
insl
rdpmc
jo
add
sub
leave
lock
mov
icebp
jne
jp
mov
js
push
fstpt
fcomp
dec
push
aas
jne
xor
imull
mov
cltd
cs
cmp
dec
push
cmp
dec
dec
or
mov
fnstcw
cmpsl
insb
addr16
cmp
and
into
push
jle
in
jge
rorl
fdivrs
stos
mov
jbe
je
xchg
or
adc
xor
sub
cmp
decb
push
popf
call
mov
lahf
add
mov
outsb
lea
cmp
dec
outsl
jbe
jne
add
out
std
lea
fbld
jno
cmpsl
cs
and
push
adc
test
iret
mov
outsl
mov
scas
stos
and
mov
sbb
xor
sub
and
aaa
dec
mov
scas
jb
mov
or
faddp
frstor
jecxz
out
dec
stos
push
movsl
push
sub
mov
xchg
add
push
mov
lods
inc
cmp
or
xorl
mov
and
mov
bound
sahf
xchg
dec
mov
aaa
xchg
dec
fisttps
add
adc
movsb
sbb
mov
subb
cltd
ljmp
sub
and
fnstcw
mov
dec
ljmp
sub
aad
add
scas
adcl
pusha
push
xor
push
mov
sub
xor
cwtl
xor
movsb
jns
adc
cmpsb
adc
fsub
es
call
xchg
sti
push
mov
inc
ss
fs
pop
pop
fidivrl
push
cltd
or
mov
loop
loop
outsb
xor
insb
push
fistps
cmp
xor
js
addl
add
test
jns
sub
inc
jb
sbb
push
cmpl
ljmp
pop
mov
loop
repz
out
outsl
push
push
mov
inc
nop
xor
inc
dec
cmp
pop
push
adc
lock
xlat
imul
and
xchg
lret
stos
mov
xchg
in
movsb
loop
sub
xchg
fucomp
sbb
adc
inc
fwait
xchg
and
jmp
push
sub
mov
xor
daa
inc
adc
lock
xchg
jae
pop
mov
xor
lahf
mov
sbb
xor
add
je
sbbb
cmp
lret
cmc
adc
dec
push
je
or
jge
adc
adc
int3
mov
ficompl
pop
dec
ds
mov
repz
lods
pop
ret
inc
mov
hlt
mov
inc
daa
cmp
ret
cmpsb
push
sbb
add
das
mov
cmp
cmc
aas
pop
enter
leave
adc
rcrl
fldenv
sbb
inc
fcmove
jmp
cmp
xor
xchg
and
cmp
inc
fmulp
outsl
jb
and
mov
fldcw
enter
mov
movsb
ror
jo
mov
lods
scas
enter
hlt
cmp
push
xor
rcr
mov
sbb
mov
and
cmp
or
sub
out
dec
imul
lahf
in
jge
add
xor
ret
rcrb
push
push
test
lahf
sub
cmp
jg
mov
mov
mov
aam
fsubrs
push
test
adc
enter
jnp
mov
fiadds
jmp
repz
into
push
das
pop
das
inc
clc
es
test
fcomps
mov
mov
mov
adc
cli
and
lds
test
push
mov
mov
push
icebp
sbb
loope
cmp
pshufw
and
std
xchg
psubusb
dec
lahf
addr16
and
mov
out
pop
adc
ja
inc
aas
push
cmc
cmp
cmp
fs
add
fwait
shrb
inc
pop
lahf
fimuls
mov
push
mov
loop
jg
data16
xchg
shr
sbb
popa
xlat
jae
add
dec
cli
add
iret
ret
jmp
aaa
sub
jp
ljmp
or
and
push
imul
fwait
mov
in
rcll
inc
aam
inc
push
xor
cmp
mov
adc
jnp
pop
jne
lods
test
test
mov
cs
rcrl
into
push
movsb
ret
ss
stos
js
testb
out
shl
shll
je
movsb
shlb
inc
and
subb
fldenv
mov
mov
fidivrs
push
aam
pop
mov
xlat
cmp
xor
stos
cmpsb
les
insb
sahf
popa
and
aaa
push
jl
sub
pop
lret
mov
fsubl
xchg
xor
sbb
cmpsb
lock
mov
popa
sub
in
sub
aas
sahf
jno
push
ret
les
fidivl
pop
imul
adc
adc
inc
xor
mov
cwtl
outsb
cmpl
aas
pop
cmc
fidivs
lds
adc
fnsave
xor
push
cmc
div
add
lret
aas
dec
or
adc
jge
lret
mov
cltd
cmp
mov
int3
dec
int
xchg
je
cmp
inc
push
push
jmp
nop
cmpsl
sbb
and
je
or
mov
inc
dec
imulb
mov
call
dec
stc
sub
xor
dec
push
repz
mov
mov
ja
mov
mov
or
cmovne
sub
xlat
in
outsl
adc
xor
mov
ss
lret
add
popf
call
cli
jb
add
leave
xor
xor
mov
and
sbb
out
dec
jl
div
scas
ror
push
ljmp
mov
loop
jle
int3
jbe
popf
scas
inc
repnz
lahf
fsts
add
in
mov
in
loope
movsb
cmp
sub
ja
clc
pop
push
cmpsb
push
int3
inc
inc
push
jp
fnstcw
push
icebp
out
fwait
sarl
sbb
les
negb
and
lret
popa
cmc
xchg
mov
cs
sarl
cwtl
push
movsb
mov
aad
push
jae
mov
orl
stos
jmp
cmc
sti
xlat
pop
rclb
mov
not
adc
add
rol
fcoml
in
adc
insl
js
mov
jae
cmpsb
es
rclb
xor
popf
adcl
xchg
cltd
push
insl
inc
pop
pextrw
jo
jb
sub
mov
sub
pop
push
addr16
mov
inc
pop
pusha
les
fwait
adc
xor
ret
hlt
xchg
xor
bound
dec
test
fnstcw
mov
addl
cmp
lret
inc
dec
rclb
aas
mov
out
movsb
inc
fidivrl
icebp
in
in
cmp
in
cmp
fisubrs
dec
mov
push
in
loop
push
mov
push
movsb
jnp
aas
cmp
gs
pop
xor
add
mov
das
je
cmc
es
out
mov
das
jo
push
xor
out
mov
xlat
push
data16
js
adc
sub
ret
xlat
dec
mov
or
add
lret
test
xor
insl
shrb
xchg
sbb
add
addl
jle
push
ror
scas
cmp
cli
pop
mov
sbb
dec
cmp
fs
ljmp
out
shlb
lret
arpl
sbb
or
mov
xlat
jno
xchg
int3
sbb
sub
sahf
ja
jecxz
inc
mov
and
mov
mov
ds
je
cmpsl
cmp
ret
jo
pop
enter
and
xchg
clc
and
or
lds
ret
rcll
stos
adc
test
sahf
jne
incb
mov
xor
adc
xor
cmp
out
into
sbb
sub
xor
sbbl
ficoms
enter
sub
orb
es
cmp
jo
jno
sarl
out
sarb
popf
lods
shll
mov
lds
mov
jl
push
mov
pop
inc
push
and
mov
enter
inc
sbb
xchg
jbe
mov
jae
jne
sahf
movsb
stc
adc
add
jmp
testb
xchg
adc
xor
mov
ds
daa
mov
pop
js
mov
sub
xchg
add
mov
movsl
sub
andb
repnz
sbb
jmp
cmp
jo
sbb
outsl
pop
in
pop
es
jo
out
push
adc
clc
or
push
fstpt
call
lcall
lods
sub
push
adc
hlt
xorps
pop
cmp
popa
add
pusha
mov
mov
pushf
mov
arpl
pushf
rsqrtps
sbb
push
xor
mov
in
test
cs
mov
xchg
jne
mov
cmp
popf
xor
push
movb
aad
sbb
sub
sub
or
popf
xlat
or
imul
mov
adc
test
dec
in
jno
sbb
pop
jmp
mov
or
test
xor
dec
out
movsb
add
sub
push
imul
and
dec
test
cmovb
sarl
aas
mov
clc
lret
xor
fisttpl
jb
adcl
icebp
inc
cmp
inc
add
jecxz
dec
pop
in
push
aad
cmp
les
inc
push
in
xor
lret
lcall
jge
and
jge
in
js
sub
mov
daa
sub
mov
adc
dec
add
mov
mov
mov
cmpsb
dec
sbb
sub
pop
push
test
push
dec
pop
jne
or
clc
fiaddl
test
aam
jecxz
aas
pop
mov
push
das
pop
mov
cmpsb
enter
inc
mov
popf
out
mov
sub
and
loopne
jmp
xor
popa
push
lods
mov
add
cld
xchg
mov
inc
push
bsf
je
cwtl
out
mov
scas
shl
jne
pop
mov
out
icebp
sbb
lds
and
xchg
xor
in
movsb
pop
sub
add
jle
or
pop
jno
stc
push
pop
out
sbb
or
mov
insb
aam
and
stos
cli
or
adc
mov
out
dec
lret
test
push
mov
and
or
pusha
int3
testl
add
mov
scas
lcall
arpl
mov
rolb
mov
mov
xlat
add
mov
sub
scas
mov
hlt
sub
mov
mov
adcl
lds
dec
or
insb
add
push
mov
idivb
lahf
xor
xadd
sarb
mov
or
push
mov
push
inc
sub
cmp
inc
rorb
pop
mov
adc
push
icebp
and
inc
push
mov
mov
in
mov
xlat
xchg
push
insb
fwait
add
pop
mov
pop
int
shl
and
sbb
in
lea
and
pop
lcall
aaa
shlb
mov
clc
and
out
lea
inc
inc
aaa
aas
mov
cmp
in
cmc
scas
pusha
mov
mov
sahf
sbb
lock
sub
out
ljmp
add
fwait
jmp
ja
mov
cmp
adc
push
outsl
xchg
ss
xor
rcrl
inc
sbbb
fnstenv
xchg
movsb
fcoml
das
cmp
out
mov
outsl
out
mov
js
das
mov
xchg
sub
shl
outsl
aas
aad
inc
js
dec
pop
jbe
test
jo
cwtl
pop
mov
outsb
jbe
mov
adc
iret
rcll
sbb
push
mov
mov
push
repnz
pop
mov
dec
sbb
xchg
push
inc
mov
and
mov
js
jg
add
mov
in
fs
inc
bound
aas
cmp
stos
dec
mov
xchg
hlt
lods
xor
leave
xlat
pop
out
dec
cmc
push
incl
rclb
fnsave
jne
cmp
cmp
push
cmpl
rcrb
sbb
test
mov
cwtl
jecxz
cmp
pop
mov
mov
mov
fimuls
jnp
pop
dec
int3
cmovl
shll
in
jo
aaa
adc
rol
fdivrs
xchg
js
test
xchg
lods
movsl
mov
inc
sub
xor
mov
shl
jmp
adc
mov
nop
jl
cmpsl
mov
loopne
mov
fcmovnbe
pop
out
dec
mov
aas
cwtl
call
js
sahf
pop
fistpl
bound
fisttpll
cmpsb
sbb
cmp
das
and
je
lahf
fwait
and
scas
and
xlat
punpckldq
ja
mov
test
xchg
xchg
dec
dec
out
dec
shrb
test
dec
ret
data16
icebp
push
lods
int3
testl
cmp
pusha
lock
imul
cmp
fiaddl
xor
lods
iret
inc
subb
sbb
js
or
es
mov
loop
in
out
pop
outsl
mov
fnstsw
push
repz
add
mov
daa
mov
inc
comiss
push
repz
fists
jno
ret
sub
sbb
add
out
int
in
cmp
push
inc
push
push
stos
xorb
pop
in
dec
add
pop
mov
rorl
inc
lock
cmp
add
outsl
ret
ffree
fidivrs
xlat
mov
imul
ret
cltd
popf
jno
dec
icebp
or
push
mov
mov
bound
mov
ss
lcall
leave
pop
std
mov
pop
insl
inc
repnz
mov
cmp
cmpsb
push
in
fstl
stos
inc
int3
sbb
and
cmpl
jb
outsl
push
add
mov
dec
mov
inc
add
sbb
sub
jno
add
inc
push
outsl
arpl
in
push
cmp
inc
dec
xor
xor
cmp
fwait
mov
pop
pop
movsb
sub
push
lahf
pop
cmp
popf
pop
jmp
and
adc
sub
adc
sahf
in
pop
pusha
or
movsb
sub
or
cld
inc
bound
je
pop
jae
or
icebp
mov
es
xor
adc
mov
in
push
push
lock
dec
sti
pop
lahf
addr16
pop
mov
out
mov
into
ret
cmc
imul
push
movsb
or
aaa
pop
or
mov
xor
sub
mov
movl
pop
mov
push
cmp
leave
add
mov
adc
xor
fdivr
pop
lods
sti
dec
mov
shll
dec
inc
xchg
or
xchg
shr
mov
pop
ljmp
aam
add
aad
popa
outsb
hlt
push
lea
clc
popa
sbb
hlt
mov
and
aam
mov
fisubl
push
adc
cmp
add
jl
mov
xlat
repnz
lret
add
push
ret
inc
out
mov
sbbb
shrl
out
negl
sahf
mov
loope
loopne
dec
outsl
ret
test
loope
inc
bound
int
imul
jno
aad
repz
les
cltd
xchg
and
std
hlt
inc
adc
loopne
aam
clc
or
ret
xor
sub
push
jnp
xchg
sbb
cmc
xor
fiaddl
aad
and
pop
ror
jo
cmc
jne
and
test
inc
mov
jno
mov
lahf
pmaddwd
mov
push
hlt
fcomi
pop
jo
jno
mov
lea
jo
test
call
mov
xor
test
js
cli
sub
lret
mov
hlt
outsb
into
ds
mov
and
and
lds
dec
cmp
xor
jne
popa
mov
scas
pop
xlat
dec
jp
and
mov
mov
ss
xchg
ja
pop
test
jae
mov
xlat
aas
pop
mov
test
inc
movb
mov
adcl
mov
add
pop
movb
mov
inc
or
iret
mov
in
test
stos
popa
cmc
mov
int
dec
outsl
pop
test
stos
shlb
add
sbb
loope
imul
das
jp
mov
jl
addr16
add
sub
lret
pusha
push
cld
cld
cmp
je
les
nop
xchg
aam
jecxz
ror
or
add
pop
cmpsb
pop
sbb
sub
sbb
scas
shr
pushf
sahf
pop
scas
push
enter
xor
pop
jbe
loop
fidivl
sub
es
sub
rcrb
addr16
dec
adc
stos
and
sbb
repnz
pushf
adc
imul
ret
mov
inc
pop
fs
stos
shll
sahf
mov
fnstsw
xchg
xchg
pop
mov
pop
push
fmulp
mov
lods
jecxz
insl
mov
test
lahf
jmp
adc
xor
push
ljmp
les
mov
icebp
jae
and
jb
icebp
pushf
neg
insl
add
cmp
call
or
std
fiaddl
out
sti
stos
mov
or
setl
jno
loopne
mov
mov
inc
sbb
lret
inc
scas
sahf
push
xchg
dec
popf
pop
lret
mov
cmp
dec
push
or
je
mov
dec
sub
std
dec
ficompl
int
jbe
int
or
mov
dec
dec
adc
push
mov
cmp
pop
mov
aad
dec
out
jle
cli
mov
fstl
cmp
sub
mov
insl
stos
sbb
pop
int3
xchg
jecxz
jecxz
xor
pop
ret
js
repnz
test
push
xor
cmpsl
xchg
ret
jb
xor
aam
and
cwtl
push
mov
and
adc
xchg
xchg
paddusb
mov
scas
push
cmp
bound
ret
xchg
rcrb
jo
decb
cmpl
ja
sbb
rorl
stos
cli
jmp
bswap
das
jno
cmp
ficompl
push
mov
xchg
pop
inc
pop
lret
inc
inc
aaa
movsl
rcr
arpl
stc
fldl2t
imul
jge
cmp
cmp
fwait
addb
pop
test
xor
mov
lahf
jae
adcb
arpl
xchg
pop
sbb
sub
jecxz,pt
mov
and
or
es
push
sbbb
mov
xchg
add
scas
mov
jge
pop
xchg
outsb
es
imul
push
ret
pop
testb
jle
sbb
add
push
push
in
icebp
fists
arpl
movb
jp
iret
push
mov
mov
push
data16
pop
popa
out
lret
xchg
arpl
shrl
push
daa
leave
mov
dec
inc
push
jge
cmp
ret
mov
call
push
add
add
rclb
or
out
roll
cmp
icebp
or
dec
mov
mov
aad
jecxz
push
stos
popf
inc
jmp
leave
pop
or
pop
dec
inc
sbb
or
popf
cli
int
in
sbb
ret
jae
xor
mov
lods
add
rcl
cltd
fwait
sbb
jbe
fwait
outsl
in
jle
adc
fdivrp
add
pusha
xchg
and
loop,pt
sub
jmp
mov
popa
xor
mov
dec
fwait
or
mov
mov
enter
push
push
in
pop
movsl
adc
xor
in
gs
push
sbb
lret
lods
or
sub
inc
fmul
dec
je
add
insb
adc
leave
dec
jns
sub
jns
in
pop
or
cmpsb
mov
mov
lret
xor
inc
test
out
cmp
aad
lds
and
sahf
gs
cmp
fnsetpm(287
push
pop
aad
or
push
insl
sbb
call
sbb
and
lcall
incb
stos
loope
or
aaa
ljmp
xchg
jge
and
rcl
ljmp
fucomip
sbb
dec
sub
jl
inc
cmp
push
xchg
dec
sbb
dec
call
lahf
add
mov
and
inc
out
xorb
je
add
xchg
mov
ljmp
pop
cld
ds
sbb
mov
jle
imul
dec
jb
xor
xchg
pop
xor
cli
outsb
mov
fistps
in
cmpsb
jecxz
push
or
dec
sub
aad
inc
lret
jae
nop
adc
fldenv
cmp
in
shrb
mov
int
gs
pop
movb
mov
push
mov
popf
cmp
rcrl
fisttpll
dec
scas
mov
fldl
je
sbb
loopne
test
mov
scas
jl
push
mulb
mov
inc
xor
in
movl
imul
sub
sahf
mov
sbb
ljmp
dec
pop
jmp
popf
xor
mov
cmc
add
stos
xchg
je
clc
inc
lods
cmc
daa
outsl
pop
lret
or
xor
add
rcrl
shrd
inc
push
push
fmulp
cmpsl
or
imul
cmpsb
xchg
dec
dec
fdivs
add
and
or
adc
lahf
add
add
bound
cs
imul
fsubrs
mov
mov
or
push
out
jmp
loop
inc
pop
daa
push
add
leave
add
loop
shll
xor
popf
or
leave
pop
cwtl
sub
cli
cmp
sbb
and
dec
je
jecxz
fcomps
inc
xor
jnp
enter
cmpsl
leave
fwait
jae
scas
jmp
repnz
sbb
shll
int
jle
neg
mov
push
inc
bound
pop
cmc
pop
je
nop
xor
les
and
fisubl
cmp
mov
push
ds
scas
sub
js
mov
fs
xor
push
jb
ror
sbb
or
jecxz
lahf
jecxz
cld
adc
push
jno
icebp
adc
mov
xor
in
stc
xlat
xlat
pusha
movsl
pushf
stc
jl
xchg
imul
cs
sub
and
sub
test
clc
mov
ljmp
stos
xchg
loopne
push
ss
sbb
adc
sahf
pop
push
mov
jmp
cmp
mov
out
test
out
cmp
insb
aam
mov
addb
add
ljmp
es
outsl
or
adc
jae
xlat
sbb
push
pop
dec
jmp
pusha
jl
dec
mov
dec
jns
push
xchg
or
dec
ja
lock
sbb
jae
ret
mov
fwait
jecxz
mov
mov
cmp
xchg
adc
jp
pop
pop
push
jne
call
push
sbbl
lods
sbb
ja
inc
cmp
push
mov
inc
sbb
std
shrl
pusha
jns
fmuls
aas
push
dec
fstps
pop
sti
xchg
mov
inc
xor
cwtl
das
aam
jno
cli
sub
shlb
in
pop
dec
mov
stc
je
pop
stos
pop
mov
subl
test
adc
inc
xchg
xchg
mov
frstor
push
arpl
sbb
push
lea
mov
mov
fs
sbb
jb
ret
ljmp
leave
fs
mov
jb
mov
adc
xor
xchg
fdivs
dec
test
sbb
push
adc
push
ja
mov
cmpsb
fdivrp
les
push
pop
cmc
imul
fs
aas
outsl
fistps
mull
shrl
pop
imul
pop
pop
inc
jl
mov
enter
xchg
mov
cmc
jnp
push
shl
insl
sbb
dec
xlat
mov
movss
in
cmp
adcl
xor
add
sbb
test
ss
add
fstps
lods
lods
inc
push
xlat
sub
lcall
cwtl
aaa
es
mov
outsb
ljmp
inc
fists
mov
cmp
ret
fldcw
daa
sbb
xchg
cwtl
rcrl
sbb
xchg
sahf
lret
lahf
imul
in
dec
popf
inc
test
pop
xchg
push
jae
mov
ret
push
mov
inc
pop
add
dec
sti
inc
bound
mov
scas
stos
xchg
lock
sbb
stos
push
imul
cmpsb
cmp
sub
cmp
sbb
scas
inc
addr16
popa
daa
cld
sbb
mov
cmp
call
dec
jg
cmc
and
dec
test
push
inc
xchg
ljmp
and
arpl
call
jp
and
sahf
adcb
jae
js
test
sarl
icebp
out
outsb
rcll
jecxz
pop
testb
imul
pop
adc
aaa
mov
out
shlb
pop
nop
adc
xchg
xchg
inc
push
cmpb
inc
loopne
shlb
cs
mov
les
jne
rorb
pop
mov
rorl
mov
fnstcw
repz
movsl
inc
xchg
and
cmp
jmp
sbb
pop
shll
xchg
push
pusha
xorb
and
pop
out
mov
ror
mov
movsl
mov
inc
cmc
jl
cmp
push
adc
inc
out
pop
and
lcall
xchg
dec
pop
or
popa
cmpsl
fs
adc
pop
scas
imul
and
pop
inc
cmp
xchg
pop
inc
shr
shrb
mov
icebp
mov
xchg
or
aad
rcr
loopne
imul
daa
fnstenv
lods
add
cmp
fs
xchg
sbb
movsl
xor
sub
mov
lds
mov
fs
or
xor
lods
push
sti
cmc
jecxz
inc
push
pop
sub
fbstp
out
push
xlat
sub
inc
push
mov
sub
cli
bound
lret
cmp
xor
cmp
cmpsb
outsl
mov
adc
ds
inc
outsb
aas
test
mov
imul
dec
aaa
ds
jle
fidivrl
dec
xchg
xor
shl
enter
stc
mov
push
fnstsw
dec
jbe
popf
ss
ret
adc
je
jp
push
cmp
push
inc
lods
xor
idivl
lds
jp
inc
inc
cmp
sti
divl
hlt
sti
fisubs
popf
jmp
jecxz
mov
adc
icebp
sbb
test
jbe
xchg
mov
mov
gs
pop
fstl
xor
aad
ret
mov
lods
and
notl
icebp
sahf
imul
repnz
mov
cli
aam
sub
and
or
jnp
jo
in
inc
mov
outsl
adc
mov
lea
fxch
clc
inc
cmp
imul
mov
mov
sub
test
jo
out
mov
sbb
sbb
mov
xchg
and
adc
add
mov
mov
jno
or
sub
mov
addr16
push
cltd
xor
pusha
jo
mov
dec
jle
xchg
push
in
jg
lea
and
sub
push
test
mov
lods
in
flds
jle
xchg
lahf
jge
in
mov
mov
adcl
rorw
dec
and
aas
dec
test
les
fstpl
js
xchg
mov
xchg
xchg
je
syscall
idiv
xchg
sub
fcmovne
movsl
lock
jnp
mov
in
ret
mov
cli
ret
xchg
sub
fisubrl
cs
mov
shlb
cmp
aam
add
xor
mov
add
andb
pop
inc
movsl
clc
inc
test
incb
xchg
addr16
cli
int3
aaa
adc
stos
and
adc
cmc
lea
mov
sahf
push
xor
cmp
lods
enter
out
int
imul
lods
pusha
xchg
pushf
orl
cmpsb
stos
das
cmp
push
jp
cmp
or
dec
xchg
push
test
aad
xor
pop
pop
cmpb
int3
dec
pushl
mov
cltd
sbb
hlt
xor
scas
jns
addr16
pop
xor
mov
movsl
jae
test
daa
popf
les
mov
rorb
popf
gs
push
mov
dec
aas
stc
pushf
sbb
lds
dec
mov
xchg
sub
adc
or
mov
sbb
sbb
mov
adc
addl
test
or
fnsave
imul
jae
mov
roll
mov
xor
out
xchg
xor
lock
xchg
or
fisttpll
test
push
inc
mov
mov
push
cwtl
stos
cmp
mov
mov
cmp
ja
mov
add
pop
cmpsl
adc
cmpsb
push
ja
scas
inc
lds
cmpsl
popf
dec
xchg
movsl
dec
xchg
loopne
mov
and
mov
push
push
cltd
hlt
repnz
ret
pop
jno
xchg
adc
adc
ss
sti
jmp
fisubl
pusha
inc
adc
cmp
inc
xchg
fdivp
jbe
fimuls
sub
or
xlat
std
icebp
mov
jnp
push
out
push
dec
scas
rcll
stc
jg
je
mov
mull
gs
sub
mov
pop
xlat
and
push
scas
idiv
nop
push
lds
and
arpl
cmp
hlt
and
add
mov
scas
push
lods
pop
push
mov
adc
and
fadds
mov
stos
es
jge
out
xchg
jno
popa
dec
int3
int3
cmp
xchg
inc
repnz
mov
popf
lcall
and
adc
nop
mov
and
out
lock
push
dec
pop
sub
mov
nop
call
or
loope
mov
pop
enter
or
sub
dec
mov
cltd
xor
mov
mov
or
sub
shrb
cmp
fwait
xor
data16
mov
or
pop
mov
mov
les
stos
sub
iret
mov
ret
push
push
mov
xor
std
test
push
add
lret
jle
jae
mov
scas
xchg
sbb
lret
mov
mov
test
insl
fdivrl
lock
imul
and
lock
out
mov
mov
mov
add
jnp
pushf
mov
adc
test
in
or
lret
setae
sub
push
dec
add
dec
xchg
ds
pop
scas
test
mov
iret
and
push
or
pop
mov
sahf
int
insb
fsubl
int3
mov
aad
push
add
in
js
xor
fidivl
imul
test
adc
loop
cld
and
jl
lret
xor
cmpb
mov
in
sbb
adc
movb
mov
shlb
dec
mov
lds
scas
es
or
pop
and
ljmp
sub
fs
rcr
xlat
jle
aas
push
cmp
sti
adc
in
xchg
fisubs
into
xlat
mov
mov
adc
push
inc
ljmp
pop
push
sub
shll
fldt
nop
pop
sbb
movb
fcomip
in
inc
ficompl
imul
movsb
mov
mul
jno
or
add
mov
in
out
sub
xor
shl
in
sbb
mov
and
cli
mov
scas
cmc
sub
rcrl
iret
cmp
fistpll
in
shlb
jl
mov
push
out
xchg
mov
negl
sbb
orb
repnz
jo
test
pop
fwait
mov
or
cmp
sub
outsb
adc
and
es
popa
pushf
or
pushf
push
cmpsb
and
or
mov
xchg
xchg
scas
cwtl
push
out
gs
out
ret
push
mov
jp
addb
ds
jns
inc
lea
xchg
mov
inc
adc
mov
imull
push
loope
lods
iret
subl
pushl
jbe
mov
cmpsl
mov
sbb
inc
inc
aam
pop
jecxz
and
pop
jl
jge
lods
and
cli
daa
inc
gs
enter
sbb
cld
sub
movb
xchg
cld
cmp
adc
mov
adc
push
scas
pop
nop
scas
ljmp
inc
lcallw
push
mov
mov
sub
and
imul
cmc
lea
inc
aaa
lahf
pop
inc
pop
mov
jmp
sbb
or
ss
clc
fadds
hlt
pop
and
fstpt
pop
out
out
or
stc
in
pop
mov
in
roll
mov
lods
lea
xchg
das
xchg
push
testl
sbb
scas
mov
xor
repz
push
jbe
arpl
jle
xchg
outsl
ret
push
xchg
fists
xchg
imul
push
pop
add
das
add
push
xchg
sub
pushf
ja
ja
nop
cmp
cli
aam
and
mov
addr16
or
jle
loop
fidivrs
and
push
xlat
pop
mov
outsl
lret
les
js
shl
dec
mov
aad
mov
movsb
jno
sub
aaa
cmova
outsb
lahf
mov
shll
jnp
cmpsl
cmp
mov
loop
cs
mov
cmp
imull
loopne
fucomp
test
mov
pop
sub
sarl
sbb
dec
pop
push
test
pop
dec
aam
cltd
movsb
mov
pop
mov
jbe
push
xor
jne
adcb
clc
jg
adc
repnz
pop
and
nop
sub
out
xchg
xchg
inc
sbb
xor
dec
mov
lds
pushf
ss
push
mov
pop
das
jnp
jno
sarl
cmpsl
push
adc
jns
clc
roll
scas
lods
or
mov
loop
fs
adc
out
mov
inc
ror
push
xchg
sbb
lret
ret
xchg
pop
fcomi
movsb
pop
lahf
negb
or
js
push
sub
notb
out
sub
popa
xor
and
and
jae
mov
push
xchg
mov
pop
pop
nop
sub
stc
xor
stc
daa
cmpb
je
sub
pop
aam
aas
cmp
cmpsl
daa
call
addr16
mov
adc
lods
jbe
test
jl
dec
out
mov
pop
mov
scas
pop
mov
jo
into
aas
scas
or
mov
push
jmp
inc
leave
cltd
push
dec
stos
ret
adc
sarl
outsl
test
fdivs
mov
test
mov
push
sbb
lods
rcl
or
or
add
ret
push
dec
les
cltd
scas
test
add
inc
mov
jo
sbb
fiaddl
mov
mov
cmp
inc
pop
jno
or
push
imul
inc
mov
xchg
mov
lods
add
les
das
test
nop
sbbl
and
int
je
sbb
adc
jle
push
arpl
cmpsl
leave
popa
jge
pop
push
andb
dec
mov
adc
mov
ja
jge
iret
xchg
outsb
adc
inc
leave
imul
push
dec
inc
cmc
faddp
jge
imul
arpl
sbb
loopne
mov
pop
xchg
fimuls
dec
pop
insb
cmp
lcall
loopne
mov
insb
in
and
adcl
sbb
mov
lea
xor
pop
sub
es
and
adc
inc
cmp
inc
outsb
in
js
add
mov
ja
pop
aam
pop
mov
jle
sub
and
mov
jp
xor
sub
mov
inc
xchg
hlt
es
dec
cmc
jbe
push
dec
xchg
out
cmp
in
js
mov
and
je
xlat
push
cmp
test
test
sbb
nop
out
jnp
cli
sbb
aas
mov
aas
lret
sub
sub
xchg
rcrb
add
xchg
add
push
int
mov
daa
add
imul
or
clc
std
mov
clc
inc
lcall
fwait
and
dec
aas
ret
mov
int
jb
fnstcw
hlt
enter
jbe
out
shll
sbb
mov
leave
fs
push
ljmp
fdivp
sahf
testl
inc
cmp
lds
adc
and
mov
sbb
jmp
lret
call
out
pop
xchg
mov
ss
int3
pop
in
lods
in
push
push
fisttpll
mov
test
int
stos
sbb
lods
test
adc
and
int3
xlat
cmp
jb
mov
mov
push
jb
das
lea
gs
enter
ffree
cmc
pop
in
adc
pop
int
pop
dec
xchg
xchg
ds
push
pop
mov
pushf
enter
in
xchg
xchg
inc
loopne
jae
push
mov
das
jle
cmpsl
sbbb
imul
test
mov
loopne
flds
lods
mov
insb
pushf
push
sti
dec
dec
fidivs
inc
out
pop
lods
xor
nop
and
iret
ds
xor
gs
add
mov
addb
xchg
fmuls
mov
push
lock
lock
pop
shlb
imul
out
mov
dec
mov
negl
or
stos
out
sbb
mov
aam
or
mov
je
fwait
jmp
sub
lock
fmull
mov
test
cmp
push
pop
jno
xor
mov
add
pop
pop
aas
movsl
daa
in
imul
pusha
jae
xchg
stos
sbb
fmulp
cmp
mov
fcomip
pop
pop
shrb
addr16
div
inc
or
pop
xor
adc
and
mov
xchg
and
adc
lock
inc
xor
lea
mov
ret
stos
xor
idiv
fdiv
sbb
scas
cmp
int3
inc
fwait
int3
shll
rorb
orb
cltd
push
jle
cmp
fbld
push
stos
xchg
mov
xchg
sbbl
push
mov
dec
out
xchg
sbb
out
call
push
fwait
loopne
out
cmp
dec
scas
lcall
or
sub
nop
mov
ss
pushf
xor
outsb
cwtl
ficoms
xchg
push
popf
sub
lcall
lods
cld
outsb
mov
jmp
cmpsb
test
jbe
mov
call
fidivrs
fsub
movsl
scas
adc
or
int
jno
lods
add
ret
pop
sbb
insl
xchg
sub
push
adc
adc
cmpsb
sbb
push
fdivrl
sti
negb
inc
subb
and
clc
test
pop
pop
movsl
jmp
ret
outsl
lret
cmpsb
jmp
shrl
lcall
enter
fldcw
test
ret
push
mov
arpl
es
mov
jl
aad
xchg
and
lret
out
or
bound
bound
fisttps
or
js
loopne
in
mov
inc
repz
loopne
mov
or
mov
outsb
iret
add
stos
fdivl
xchg
xlat
add
mov
fidivrl
add
jl
xor
xor
jg
loope
inc
ljmp
ss
rcrl
mov
mov
nop
dec
xchg
data16
inc
das
mov
add
out
add
inc
add
loop
adc
in
push
outsb
and
dec
test
xchg
fdivl
add
in
mov
or
loope
mov
sbb
repnz
sbb
test
test
pop
lret
or
push
push
popf
fsub
dec
cmp
test
mov
sti
pop
test
dec
xlat
aas
xor
jl
jns
mov
nop
xor
fstp
in
xchg
push
icebp
sbb
push
shrl
sbb
mov
pop
lock
pop
daa
inc
ret
jecxz
nop
xchg
mov
fsubl
xorps
jge
test
aam
jl
filds
dec
lahf
sub
sbb
push
xor
mov
movsb
push
mov
aad
std
iret
in
inc
je
loop
addr16
jae
pop
ror
xchg
pop
test
gs
xor
xchg
rcrl
sub
cs
das
mov
pop
xchg
xor
mov
sti
lock
ja
loopne
mov
mov
mov
jno
hlt
loope
xchg
mov
test
mov
xchg
stc
mov
fstps
pop
dec
js
sahf
adc
xor
jge
add
xlat
popa
sub
es
hlt
adc
test
ljmp
push
lcall
jb,pn
mov
negl
rcl
pop
pop
popa
rorl
stos
popl
loop
jl
fimuls
loop
fstps
sub
lock
inc
scas
rcl
cltd
and
lahf
push
mov
jnp
int
cmp
in
mov
fistpll
xchg
or
mov
mov
popf
xchg
jne
in
push
jne
pop
stos
mov
shl
aam
mov
jns
mov
aad
pop
mov
leave
mov
or
and
jns
and
xor
aad
scas
jecxz
int
push
push
iret
out
in
xchg
pop
sub
inc
mov
gs
adc
std
lds
pop
int
mov
mov
sub
arpl
or
xor
xchg
sahf
not
aas
push
push
scas
outsl
enter
and
push
rclb
stos
adc
aam
insl
pop
outsl
insl
mov
mov
push
inc
aas
or
pop
jge
in
movsb
push
test
inc
mov
ror
mov
jb
outsl
adc
or
in
aam
ja
adc
addb
sarl
jae
xor
hlt
pop
fisttpl
jle
mov
cmp
push
mov
loop
ja
inc
and
mov
dec
xor
arpl
xchg
mov
int3
mov
add
push
lcall
mov
adc
add
jge
test
rol
add
mov
cs
iret
or
loop
sti
enter
push
out
mov
mov
or
ret
or
mov
stc
xchg
add
fisttpll
and
pop
mov
mov
pop
je
repz
xor
clc
dec
adc
or
push
lret
jmp
push
adc
jl
mov
xor
sti
cld
add
in
pop
mov
jl,pt
test
jo
or
popf
inc
adc
cmp
sub
push
movsb
cmp
repz
inc
dec
or
sar
pop
or
jl
xchg
stos
xlat
loopne
cmp
xchg
ja
lret
pop
mov
aam
xor
pusha
dec
movsb
add
test
insb
sub
insl
add
xchg
pop
jge
mov
cmpsl
adcb
mov
mov
cltd
fimull
pop
aas
fdivrl
lret
and
mov
hlt
xor
mov
jmp
xor
fadds
inc
push
scas
pop
test
and
fwait
mov
outsb
fsubr
and
dec
enter
sti
dec
cmp
movsb
mov
mov
pop
push
mov
andb
pop
xor
cltd
mov
ret
call
xor
push
xchg
hlt
pop
dec
inc
jge
stc
fnstenv
aam
int
adc
pushf
mov
pushf
lds
inc
cmp
out
inc
xchg
lahf
jmp
dec
xchg
fs
in
in
mov
fs
popl
inc
xor
pop
jae
add
inc
jl
jg
mov
pop
je
ljmp
cmpsb
clc
int
pop
out
mov
and
ficompl
loop
out
daa
and
lahf
ljmp
test
push
inc
std
sbb
pop
pop
fcomps
mov
outsb
or
test
call
xchg
xchg
scas
pop
pop
call
lods
dec
pop
mov
popa
mov
push
loopne
insb
cmp
or
add
lock
in
in
inc
xchg
mul
push
push
mov
add
clc
push
and
mov
mov
mov
ss
std
mov
daa
or
dec
jmp
je
lcall
in
lea
xor
in
push
or
lahf
push
cs
push
rcl
fcmovnbe
scas
aam
adc
adc
sub
rcr
cmpsb
sbb
push
popf
ret
push
ret
sbb
fstp
jle
enter
cmp
cmp
aaa
scas
aaa
cmc
push
popa
mov
sub
dec
int
cld
or
test
test
pop
ficomps
xchg
xchg
push
das
stc
fldl
adc
add
mov
iret
stc
mov
dec
inc
push
outsb
call
jb
hlt
push
sahf
or
mov
call
xor
scas
scas
adc
xor
push
clc
mov
das
dec
add
loopne
dec
cmc
or
incb
push
cs
aad
xor
psllq
jge
data16
push
or
fnstsw
sbb
fdivrl
sub
scas
xor
outsl
fisubrl
cli
sub
and
lret
test
mov
add
lret
xor
sbb
mov
mov
xchg
mov
daa
mov
adc
mov
jge
mov
fidivrl
push
mov
call
imul
xor
das
cmc
push
gs
clc
jne
icebp
xchg
int
and
pop
lahf
mov
inc
pop
pusha
xor
cmpl
mov
cmc
mov
inc
sub
lcall
dec
into
add
in
ret
pop
cmpsl
aaa
es
dec
inc
ret
jge
or
shlb
push
aad
sbb
mov
mov
bound
lret
inc
jae
mov
add
push
bound
sbb
fidivrl
std
stc
lds
ljmp
shll
ja
lcall
subb
or
insb
nop
movsl
cli
repz
dec
fisubrl
push
in
fisttpl
sti
jnp
pop
push
aas
and
pop
mov
xchg
scas
data16
das
cmp
add
or
mov
dec
imul
xchg
jne
add
cli
repz
xchg
test
pop
cmp
fprem1
icebp
inc
jno
adc
mov
cmpsl
mov
fidivrl
cmp
cmp
stc
push
out
pushf
fidivs
ja
xchg
stos
sti
fs
call
or
xchg
adc
outsb
dec
movsb
mov
or
mov
jb
addr16
test
and
ret
cltd
in
jg
shr
subl
rcr
jb
bound
jno
pushf
or
push
cltd
jbe
mov
inc
scas
dec
in
pop
icebp
push
jo
cwtl
insl
xor
cld
aaa
fidivl
rorb
sub
jno
enter
ja
mov
out
xor
enter
scas
int3
cmp
sbb
and
jbe
inc
out
mov
mov
inc
enter
stc
dec
out
jge
jecxz
fwait
mov
ss
nop
mov
pop
ffreep
repnz
pushf
ja
loop
jb
in
roll
ret
and
jp
and
jle
testb
jns
jmp
jp
mov
pcmpeqb
call
out
fnstsw
test
inc
dec
jae
ret
inc
aaa
sbb
inc
jne
jp
data16
das
add
add
loop
pop
icebp
lret
popa
lds
push
enter
repnz
shll
xor
ja
ss
inc
bnd
xor
ds
add
or
mov
fidivl
ret
es
xchg
clc
dec
je
ret
push
imul
je
inc
aaa
xor
push
dec
mov
fs
out
inc
ret
js
dec
ret
add
xor
adc
xchg
sbb
push
sub
test
mov
xchg
pop
cmp
cmp
jmp
stc
insb
lcall
jecxz
mov
push
aas
mov
push
cmp
pop
mov
pop
and
enter
inc
sbb
inc
xor
loop
aas
xor
out
mov
sub
movsl
mov
subl
push
stos
cli
fs
push
inc
jp
sbb
inc
movb
out
push
mov
cmpsb
xchg
mov
xchg
cmpsl
push
lahf
mov
lock
icebp
mov
adc
insb
cli
dec
adc
dec
ss
rorb
fdivrs
jnp
popf
lea
pop
mov
push
xor
mov
mov
and
in
cld
sti
jno
ja
pop
lcall
rorb
adc
ret
lea
inc
adc
filds
inc
roll
mov
push
lds
sub
pop
movsb
mov
cmpsl
cmp
cmp
jae
nop
sbb
lret
in
xchg
lret
xchg
and
mov
pop
ucomiss
test
lock
push
in
jp
xor
push
sbbl
repz
adc
fdiv
dec
sub
call
roll
jecxz
xchg
push
push
bound
repz
jbe
loope
cmp
sbb
es
mov
and
sub
or
pushf
test
cltd
es
out
outsl
insl
mov
loop
in
lods
fstl
movsl
rol
jb
scas
test
mov
sub
hlt
mov
adc
ret
push
jmp
in
clc
cmpl
push
mov
fwait
iret
jne
add
addr16
scas
inc
jecxz
rolb
xchg
fcoml
inc
xor
mov
push
fstpl
scas
mov
sbb
iret
and
or
add
lock
or
stos
addr16
mov
xor
stos
out
push
fcompl
push
xchg
cmp
movsb
stos
mov
pop
cmp
inc
cmp
cwtl
das
and
in
inc
hlt
aad
and
loop
adc
out
pushf
sti
outsb
jecxz
scas
mov
mov
sbb
lods
lret
test
or
daa
pop
pop
arpl
repnz
mov
fcoms
cmp
jecxz
aam
cld
arpl
lahf
adc
xchg
cwtl
pop
mov
ret
jne
add
dec
jo
mov
or
test
push
in
outsl
dec
and
sbb
sub
pop
sub
jnp
cmpsl
sar
inc
rorl
pusha
ret
js
scas
popf
aam
lret
stos
mov
ficomps
mov
cmp
mov
cli
mov
inc
leave
imul
sbb
das
push
add
ss
push
sub
cmp
jne
int3
or
dec
ss
ds
xchg
lods
aaa
xchg
pusha
lods
decb
fstpt
mov
sbb
add
fsubrl
sti
ds
icebp
sti
xlat
mov
or
aad
in
cmpsb
lea
mov
ja
lods
pop
mov
lock
mov
mov
lock
or
mov
inc
push
pusha
xorb
leave
jnp
pop
jmp
std
cmp
inc
jnp
mov
out
dec
fs
jmp
icebp
sbb
and
add
repnz
jmp
aam
lret
xor
sahf
push
or
mov
into
mov
jecxz
lods
pop
xor
mov
mov
adc
lock
xlat
adc
mov
adc
pusha
test
xchg
add
push
push
lcall
dec
popl
push
xor
ss
add
adc
mov
ss
aam
dec
adc
pusha
mov
data16
lock
sbb
test
dec
cli
jecxz
cmp
out
shll
cmpsb
jbe
adc
inc
xchg
test
aam
push
rorb
adc
ret
addr16
rcll
fcoml
idivl
dec
dec
and
and
and
cmp
inc
mov
jmp
jle
jecxz
adc
inc
push
push
push
jmp
fadds
cmp
bound
mov
mov
adc
std
addr16
movsb
lret
pop
sbb
ja
lock
xchg
sahf
fyl2x
xchg
popa
dec
dec
mov
shrl
jns
inc
cld
dec
push
inc
cmp
dec
cmpsl
cmp
rolb
lea
pop
mov
dec
pop
cmp
sbb
push
dec
push
adc
jge
dec
ljmp
adc
mov
mov
xor
lahf
or
shll
pop
iret
and
in
daa
jg
jmp
adc
stos
imul
push
dec
inc
movsl
pop
fsubrl
pop
sbb
xchg
xor
mov
pop
pop
jae
repnz
bound
stos
jbe
fstpt
sbb
xchg
mov
inc
dec
pop
xchg
loop
and
xchg
rorb
jne
int3
mov
lock
fistl
inc
in
fidivrs
inc
or
nop
mov
cmc
add
inc
cmpsb
stc
mov
sbb
sub
cwtl
test
popa
mov
cwtl
jmp
mov
outsb
pusha
sbb
push
cmpsl
sbb
hlt
stos
xor
sbb
mov
lock
sub
fs
std
nop
loopne
mov
cmp
stos
into
stos
pop
xor
cli
divl
mov
adc
popf
es
std
cmpsb
fs
movsl
jns
cmp
test
and
test
stc
add
fistpll
or
scas
pop
cmp
cmp
cmp
into
jge
jns
fildll
ds
sub
out
jl
popa
mov
jne
cmp
idivb
mov
in
mov
cmpb
outsb
sub
mov
pop
ret
mov
inc
sbb
jecxz
or
nop
das
lock
sti
scas
unpcklps
mov
xor
push
or
test
and
loope
shrl
mov
pusha
loop
in
imul
add
mov
outsl
popl
out
mov
in
push
mov
mov
or
mov
jb
cwtl
mov
stc
mov
shlb
xchg
push
fucom
add
pop
adc
mov
pushf
pop
ljmp
sub
test
lcall
sbb
dec
pop
js
lret
push
mov
je
aad
iret
pop
adc
std
daa
mov
ds
and
add
push
add
lea
incl
xor
push
jmp
sub
call
in
xlat
sub
mov
mov
icebp
bound
insb
repnz
insb
or
fsubrs
adc
sub
std
icebp
xchg
mov
js
jl
pop
pop
loope
inc
aaa
inc
inc
sbb
stos
pop
pop
or
test
push
daa
movsl
lock
aam
push
xor
rorl
sub
enter
sub
xchg
fdivs
enter
inc
iret
jnp
cmp
and
add
add
out
lock
mov
in
hlt
lahf
shlb
jle
and
and
sti
inc
decl
jae
push
clc
mov
sbb
pop
imul
je
cld
push
pop
movsb
clc
ljmp
jbe
add
or
stos
ds
push
mov
adc
in
in
cltd
mov
loope
fmuls
int3
imul
sub
insb
mov
push
pusha
js
inc
dec
sbb
popa
repz
imul
pop
dec
add
cmc
inc
out
out
jge
bound
lds
mov
adcb
inc
pop
and
mov
addl
fcomi
jae
push
clc
cltd
daa
addb
enter
rcr
or
lcall
adcb
fdivr
bound
es
pop
and
shlb
leave
movsb
lcall
iret
das
jbe
mov
mov
xor
mov
fwait
or
movsl
mov
ljmp
adc
cli
rorb
shlb
adc
aaa
mov
mov
addr16
lods
mov
enter
or
mov
bound
fdivrp
push
jle
int3
pusha
std
lock
icebp
pop
xchg
sarl
sarl
dec
inc
mov
in
ss
jnp
dec
fs
psubd
jo
jb
jb
push
mov
jge
jbe
jae
xor
mov
inc
enter
add
pushf
xchg
sarl
push
sbb
adc
adc
mov
clc
daa
stc
mov
inc
mul
outsb
pop
add
sbb
das
outsl
jmp
flds
aaa
imul
fwait
outsl
hlt
loopne
lea
dec
shlb
pop
sbb
xor
inc
mov
ficompl
sub
jmp
cld
addr16
movsl
mov
ret
hlt
mov
imul
bound
lea
lahf
push
and
add
popa
mov
pop
insb
jns
in
xchg
mov
xchg
cs
cmp
out
xchg
jo
xchg
fdivl
jns
cltd
ret
mov
in
push
mov
sbb
or
mov
cld
sbb
mov
pop
sti
or
je
pushf
adc
js
xchg
shlb
cltd
jnp
out
jb
mov
sub
inc
pop
add
cmpl
pop
push
mov
pop
cmp
mov
push
pop
cmpsb
mov
inc
mov
jo
inc
and
cmc
movsl
lahf
divl
jmp
cmpsb
push
leave
mov
pop
scas
sbb
into
xchg
push
mov
mov
jecxz
lea
mov
sub
enter
popf
das
les
sbb
lds
xchg
cmp
fldt
sbb
jb
testb
das
clc
pop
aaa
xor
int3
cltd
cli
mov
shl
pop
xchg
and
das
in
loop
jle
je
adc
and
jmp
lcall
cmp
cmpsl
jp
dec
cmp
aam
pop
int
ljmp
inc
sub
cli
dec
int
push
xor
rcll
cmp
cmpsb
jp
jle
fstl
jl
ja
lock
fistps
cltd
repnz
pop
adc
in
lar
xchg
hlt
aas
sbb
fcom
or
ror
int3
arpl
dec
int3
mov
rcll
inc
sbb
into
addl
jecxz
xchg
pushf
pusha
andb
movl
xor
imul
loopne
cmp
jmp
mov
test
out
sbb
adc
or
inc
popf
xor
aas
leave
aas
sub
mov
pop
dec
or
dec
repz
mov
sbb
pop
hlt
adc
cmp
pop
fwait
sub
or
dec
or
xchg
aam
jmp
or
nop
cmpsl
inc
push
pop
sbb
adc
scas
or
add
lods
add
outsb
jmp
call
into
call
push
in
outsl
stc
sbb
inc
jp
test
es
adc
bound
popa
mov
lea
movsl
add
out
add
push
sbb
fwait
pusha
stc
mov
or
cmp
insb
cmpsb
in
pop
cmpsl
int
sub
ss
cwtl
adc
mov
dec
cmp
mov
ror
hlt
pop
xchg
lret
fs
pop
call
xor
test
push
sub
jl
std
mov
arpl
loopne
mov
pushf
jmp
mov
push
mov
test
imul
mov
mov
add
stos
scas
rclb
xchg
ja
sub
shlb
shl
pushf
aad
add
dec
and
pop
mov
ds
mov
popf
xor
lods
das
lea
lcall
jp
pop
lcall
dec
mov
sub
bound
xchg
pop
out
jo
xor
mov
dec
jg
push
add
xchg
pop
adc
mov
xor
call
fildl
cmpsl
add
cmp
mov
test
mov
mov
imul
xchg
xor
xchg
sub
sti
inc
sbb
lock
int3
jl
pop
dec
loop
jl
ja
jo
push
sub
mov
insl
out
and
adc
push
mov
mov
push
outsb
add
and
imul
mov
pop
cwtl
mov
pop
mov
in
xchg
push
sub
sub
in
mov
mov
cmp
inc
mov
mov
fisttps
mov
test
rorl
es
xor
push
sub
out
js
aaa
pop
lods
jo
lret
js
in
in
xchg
out
add
jne
daa
out
lahf
js
out
aas
dec
lock
pop
mov
outsl
xchg
or
fadds
or
pop
mov
ja
out
push
sub
imul
pop
lcall
pop
xor
dec
ret
dec
aaa
sbb
call
sti
or
ss
ss
mov
mov
dec
cmc
nop
and
aas
aam
push
pop
cld
xchg
shlb
fisttpll
idivb
adc
cltd
cmp
fs
fimull
std
push
jae
sub
fisubrl
inc
test
mov
shrl
test
inc
aam
mov
inc
test
mov
inc
es
jge
lds
fdivp
cmp
dec
jl
inc
jmp
shl
nop
imul
test
dec
scas
mov
cmp
scas
push
cli
int
fisubl
test
outsb
jmp
inc
repz
push
cmc
lds
adcb
and
mov
lret
mov
cmp
pop
pusha
dec
fistl
jae
xor
sti
movsl
pop
lods
mov
mov
pusha
cmp
push
in
add
push
ljmp
pop
cltd
lahf
add
nop
sbb
icebp
lahf
outsl
clc
loopne
jg
in
mov
mov
jle
in
js
pushf
mov
xor
jmp
lods
and
loope
or
push
dec
leave
hlt
int3
adc
inc
imul
and
jg
sahf
jp
in
cmp
cmp
push
jo
push
add
add
scas
add
out
sub
sarb
dec
stc
xor
cs
inc
and
jne
xlat
pop
repz
sbb
pop
sahf
add
sbb
pop
sahf
lahf
daa
mov
mov
scas
pop
lods
xor
int3
sub
mov
add
add
jp
movsl
and
add
int3
cmpsl
mov
fistpl
inc
and
pusha
hlt
insb
test
daa
mov
push
sub
pop
sub
mov
push
movsb
incb
ficoml
test
pop
and
andl
or
mov
push
cmp
repnz
push
je
out
jno
sub
or
xchg
pop
adc
push
loope
pop
lock
out
mov
out
push
repz
out
mov
and
and
movsb
test
add
push
iret
push
pop
ret
mov
fmull
mov
push
sub
js
mov
out
lds
and
jmp
in
adc
and
stos
mov
xchg
ret
cltd
or
mov
sub
js
mov
and
outsb
stc
xor
push
pop
ljmp
mov
xor
and
gs
jmp
add
sbb
adcb
lret
addr16
xchg
push
sub
or
enter
push
mov
ss
cwtl
mov
push
jno
cmpsb
inc
sbb
adc
fwait
popa
dec
sub
push
dec
sub
lret
enter
add
negb
cmpsl
mov
pop
sub
andb
psllw
out
pop
fsubrs
add
frndint
adc
inc
sahf
mov
in
fsubrs
inc
and
or
sub
xchg
lcall
jae
push
cmp
add
ret
dec
adc
in
inc
subl
xor
adc
and
and
cmp
xchg
jns
sub
nop
mov
leave
inc
sub
pop
jecxz
loopne
into
push
xor
sahf
ficoms
stos
cmpsb
out
out
cmp
ljmp
lds
mov
ror
inc
ljmp
xor
dec
xchg
imul
xchg
es
jo
hlt
out
xor
sub
inc
inc
sbbl
jo
inc
lea
lret
dec
je
xchg
std
sbb
scas
gs
repz
pop
pop
pop
pop
enter
inc
xor
aam
push
out
adc
aaa
adc
ret
adc
mov
xchg
jl
pop
sbb
sahf
mov
push
repz
pop
xchg
mov
sbb
mov
lods
adc
push
int
mov
shrl
shr
xor
mov
mov
jae
xchg
pop
xchg
mov
add
xchg
xor
mov
add
divl
adc
out
addr16
jmp
fldt
inc
outsl
jns
or
sub
stos
jp
xchg
insl
jmp
jmp
enter
xorb
mov
xor
data16
jno
xlat
stc
jae
xor
cmp
cli
pop
mov
adc
das
scas
mov
fcmovnu
ret
roll
push
and
push
pop
outsb
push
sub
cmp
repnz
or
push
lea
mov
or
roll
sbb
mov
stos
loopne
mov
clc
pushf
ffreep
shlb
popa
xchg
imul
sub
xchg
jecxz
sti
pop
or
ljmp
repz
mov
lods
pusha
mov
adc
sub
shlb
subb
inc
cmp
cwtl
scas
mov
jp
xchg
in
out
clc
mov
inc
mov
loopne
mov
inc
int
and
mov
or
jbe
ss
cmp
dec
or
mov
orl
jl
je
stc
hlt
ficompl
mov
sub
and
pop
lods
dec
cmc
dec
push
inc
mov
shrb
data16
mov
sbb
xor
pop
movsb
rolb
push
xchg
sub
out
fsubl
push
bound
mov
and
hlt
gs
sbb
cmpsb
xor
jge
and
add
pop
mov
mov
xor
scas
idivl
sub
insl
xor
sbb
int3
adc
xchg
jnp
aam
gs
sub
sahf
xor
stos
cmp
out
repz
in
mov
mov
mov
gs
mov
mov
dec
mov
subl
xchg
dec
lret
popf
rorl
pop
test
xchg
adc
outsb
dec
adc
sub
test
loop
xchg
sarl
xor
shl
mov
push
insl
push
jmp
dec
iret
fdivl
push
mov
lods
or
push
mov
data16
pushf
enter
push
fnsave
data16
test
ret
pop
into
inc
jge
mov
aaa
mov
nop
dec
fcoml
mov
in
sub
shll
aam
push
push
imul
add
mov
test
xor
stos
pop
in
scas
das
dec
test
xlat
ljmp
cmp
mov
pop
subb
pusha
push
pushf
inc
decb
test
mov
loopne
jmp
subb
xchg
or
add
dec
mov
inc
mov
ds
add
repnz
xor
adc
jmp
cmp
mov
in
cltd
push
ret
xchg
adc
pop
sub
mov
bound
in
arpl
jbe
sub
or
movsb
cld
sub
sub
test
daa
sbb
mov
dec
mov
fcomps
jo
lea
dec
mov
mov
pushf
stos
pusha
push
push
repnz
jnp
add
int
data16
int3
jne
sbb
pop
pop
add
lcall
notl
fisubl
icebp
popa
leave
jns
mov
fisubrl
inc
jno
sub
push
lahf
sbb
jmp
pop
pop
out
and
push
add
in
pop
cmp
pop
icebp
dec
lret
xor
pop
jne
adc
jns
out
hlt
stos
icebp
push
in
test
pop
inc
mov
pop
sbb
jnp
sahf
xor
or
fcom
stc
enter
cli
cmp
xchg
sbb
mov
push
lods
mov
movntps
ficomps
cltd
cld
inc
mov
adc
add
cmpsl
mov
dec
das
xor
in
aam
push
insl
dec
jge
inc
insl
adc
mov
mov
mov
pop
adc
roll
dec
push
clc
mov
ret
or
inc
dec
xchg
dec
jns
mov
cmp
and
fnstsw
lahf
jo
pop
insb
mov
out
inc
sub
adc
in
fistl
adc
jbe
cld
jecxz
outsb
scas
lret
outsl
mov
enter
ljmp
or
sbb
mov
push
and
movsl
mov
adc
sub
inc
inc
mulb
add
pusha
push
stos
ret
cmp
pop
xchg
jae
lods
insb
push
or
mov
imul
sub
dec
ljmp
je
clc
outsb
cmp
clc
push
sub
xor
mull
inc
inc
mov
int3
add
shr
movsl
mov
jbe
fs
icebp
xor
dec
jmp
fcoms
fsincos
add
das
popa
cmp
arpl
test
es
jle
mov
xchg
pop
fmul
dec
aaa
jae
pop
cltd
mov
jns
int3
xor
inc
out
lea
inc
test
sti
xlat
lock
mov
xlat
repz
scas
enter
mov
xchg
pop
mov
push
push
jmp
sub
mov
mov
fiadds
xlat
dec
ja
rcl
inc
aaa
idivl
iret
jp
pop
out
mov
jo
imul
rcll
adc
mov
or
bound
mov
cmp
cmp
lahf
pop
bound
jb
iret
lea
in
inc
adc
std
imul
fiadds
cmpsl
sarl
sbb
cltd
jecxz
pop
adc
call
loopne
cld
daa
imul
push
sub
lcall
in
das
mov
pop
fistpl
outsl
pop
xchg
lea
fdivrs
xor
aaa
faddl
sbb
sar
int
stc
out
push
jnp
fdivl
fcmovne
shrb
lcall
xor
push
lods
pop
push
pop
dec
sbb
movsl
jge
insb
push
inc
js
cwtl
mov
adc
pushf
push
push
or
sbb
hlt
ja
or
cld
add
es
imul
ret
hlt
enter
jmp
push
stc
outsb
jne
mov
xor
mov
testl
popf
inc
negb
jnp
mov
and
sub
shll
dec
push
js
stc
xor
inc
xor
adc
iret
jmp
ficoms
push
pusha
mov
mov
xchg
faddl
or
add
mov
repnz
ret
inc
mov
add
mov
pushf
popf
in
and
mov
test
inc
xchg
mov
aas
cs
bound
mov
cltd
or
xchg
or
sbb
in
and
mov
gs
push
faddl
sar
lods
jp
lss
xor
daa
jb
inc
jmp
adc
pop
es
mov
mov
out
sub
mov
mov
ficomps
push
bound
mov
fidivl
or
lea
mov
fwait
outsl
pop
cmp
push
movsl
outsb
fidivrs
push
cmp
test
or
int
jge
adc
popf
push
fwait
jne
and
push
inc
std
push
inc
sarb
push
mov
mov
inc
push
cmp
cmp
jae
add
cmp
jae
and
jg
into
call
mov
pop
xchg
insl
inc
aaa
mov
add
test
push
pushw
lret
in
sbb
and
nop
popa
pop
jmp
mov
ret
cmpsb
das
insl
jp
call
dec
cmp
pop
lahf
mov
sub
push
jae
inc
mov
adc
xchg
jl
mov
mov
xor
dec
imul
or
aad
or
test
es
lret
pusha
add
or
cltd
outsl
and
jb
and
xchg
mov
push
aaa
mov
sub
or
out
das
mov
insb
push
test
lods
mov
lea
adc
sbb
mov
in
cmpsl
sbb
jecxz
js
sahf
inc
pop
jle
sbb
fs
cmp
xchg
jg
cmpsl
push
ret
lock
fs
mov
mov
subl
xchg
cmpsb
add
mov
fsubl
in
mov
cmp
inc
jp
sbb
loopne
clc
cltd
dec
jo
scas
rcr
aaa
aas
fidivrl
je
sub
cmpsb
testl
xor
fwait
xchg
sbb
arpl
insb
inc
sub
dec
mov
in
jns
dec
dec
negb
fcmovne
test
stos
jbe
cmpsb
inc
jg
insb
nop
lcall
out
in
inc
in
and
test
push
mov
inc
call
jns
fs
adc
mov
popa
dec
aaa
push
ja
xor
xor
mov
insb
mov
in
jae
pop
jecxz
adc
push
pop
adc
sahf
mov
and
das
cmp
push
xor
out
aad
or
inc
in
aam
jo
pop
xor
mov
sahf
pop
sub
mov
addr16
mov
fistps
and
scas
jp
popa
sub
sbb
inc
xchg
loop
push
cmpsl
rcrb
add
fmull
xchg
cwtl
cmp
pop
repz
mov
lret
aam
rcr
dec
cmc
cwtl
popa
mov
fsincos
pop
push
or
outsl
sbbl
xor
inc
imul
push
mov
dec
or
leave
ja
in
sbb
push
and
loopw
adc
inc
int
dec
enter
stos
adc
movsl
fdivl
and
mov
mov
out
fcmovne
push
mov
lahf
stos
inc
or
cmp
stc
push
fs
lret
fsubr
stos
add
jmp
outsb
repz
cld
cltd
xlat
mov
jne
adcl
ljmp
fs
inc
clc
comiss
outsl
dec
imul
mov
inc
or
clc
cmc
sbb
test
pop
into
ficoml
js
xchg
rcrb
in
mov
shl
inc
fidivs
xchg
adc
push
mov
fimull
mov
pop
test
inc
inc
add
xor
lret
or
push
mov
aad
pop
xchg
sahf
cmpsb
filds
xchg
repnz
sub
test
insb
sub
rorl
jge
mov
in
pop
inc
adc
jo
into
push
push
xchg
sti
xchg
jo
jmp
inc
stos
jne
sub
lcall
mov
cmpsl
iret
pop
inc
cmp
mov
les
arpl
aaa
and
or
xlat
push
mov
xchg
insl
sbb
sub
dec
sti
add
sub
adc
inc
fsts
pop
mov
fmull
sub
mov
es
in
insb
pop
imul
cmp
ja
cmp
addb
pusha
xor
lcall
test
xchg
fs
and
test
lods
outsl
ljmp
cmpsl
push
xor
in
arpl
lods
popa
ljmp
inc
cmp
xchg
hlt
dec
push
xchg
xor
scas
jp
lahf
mov
pop
andl
cmp
cli
ja
call
push
mov
jle
call
cmp
sbb
fiadds
xor
push
and
adc
mov
pop
jo
jae
cltd
cltd
mov
mov
test
add
lret
push
cs
or
aas
int3
js
jo
mov
adc
pop
test
push
fnsave
clc
stos
das
adc
cmp
xor
fisttpl
pop
mov
lea
fisttpll
xor
jae
clc
lret
repnz
adc
xor
fistps
cmp
add
iret
jecxz
pushf
mov
inc
push
inc
repz
shl
inc
mov
bound
outsl
cli
outsl
dec
mov
fnsave
cmp
push
xlat
adc
sub
mov
push
add
push
adc
jg
enter
in
sub
cmc
out
int3
jge
repz
push
xor
loop
in
sbbl
pop
jbe
pop
divl
loop
push
xchg
popf
mov
xor
addb
hlt
xchg
push
cmp
cmp
pop
pop
pop
shrl
mov
jbe
pusha
jo
fcoms
cwtl
pop
popa
stos
push
jle
adc
pop
mov
xor
mov
sbbl
inc
ljmp
mov
and
pusha
fcomp
sub
mov
cmp
popa
xchg
fistl
dec
lahf
mov
cmp
sbb
xor
repnz
pop
inc
ficoml
jge
aas
mov
js
out
testb
push
dec
std
mov
adc
jae
sbb
jb
cmp
fs
lods
sub
je
xor
adc
dec
or
dec
jl
xor
test
or
sbb
sbb
mov
pop
mov
jne
cmp
add
stc
or
and
sbb
mov
int3
inc
sbb
jae
jl
imul
mov
stc
jno
dec
insb
imul
xor
mov
mov
mov
pusha
in
test
iret
mov
dec
cmp
flds
xor
dec
lods
dec
add
repnz
cltd
inc
adc
cmpsb
push
aaa
lods
adc
inc
mov
xor
imul
loope
loop
testb
fdivl
sbb
push
adc
sub
xchg
mov
sub
mov
in
clc
fimull
out
ficompl
add
ljmp
fcmovnu
cmp
inc
movsb
inc
pop
jne
xor
or
xor
dec
inc
in
aas
push
lahf
decl
mov
add
adc
cld
push
dec
xchg
je
mov
add
mov
dec
and
test
movsl
or
mov
fldenv
out
test
enter
pop
adc
push
sahf
mov
jle
out
je
notb
dec
andb
sub
cmp
stos
js
cs
sub
cmp
jb
fistpll
rcll
push
icebp
cli
jecxz
mov
mov
imul
pop
fs
hlt
iret
loop
lods
aas
mov
shrb
fiaddl
repnz
xchg
sub
mov
or
mov
scas
pop
sub
sbb
mov
sbb
in
dec
push
and
int3
fs
mov
icebp
or
push
jo
ret
fwait
sub
mov
inc
pop
jge
scas
cvtps2pi
jge
lock
pop
iret
mov
scas
inc
mov
pop
inc
push
fs
jnp
bound
inc
je
ffreep
xor
push
aas
test
or
mov
inc
shrl
mov
lds
mov
cmp
jp
add
xor
ror
loopne
ljmp
xor
out
or
sbb
jmp
aam
mov
pop
or
decb
jp
cmc
lock
shlb
and
xchg
and
mov
inc
mov
pop
mov
pop
push
adcl
and
outsl
jge
je
lock
imul
mov
loop
jnp
out
or
xchg
clc
lds
movsb
cmp
popfw
sarb
js
jnp
pop
stc
xor
es
jno
jae
sub
or
xchg
cmpsl
push
aaa
dec
fdivl
les
daa
popa
and
icebp
jg
movsb
daa
insl
shr
sub
ret
cmpl
add
sbb
sub
mov
xor
ret
loopne
mov
aas
mov
loopne
out
insl
sbb
xlat
mov
jae
or
mov
notb
push
in
mov
mov
cmp
sub
push
jae
inc
xchg
fsubrs
sti
emms
xlat
xchg
xor
stos
sbb
xchg
clc
inc
mov
adc
outsb
xor
and
int
sub
sbb
scas
jbe
pusha
pop
pop
jp
bndstx
mov
mov
je
enter
mov
and
mov
dec
xor
inc
add
xor
or
adc
inc
push
scas
pop
sub
popf
cli
add
subb
out
lods
mov
xor
roll
jecxz
imul
dec
lods
push
mov
inc
cltd
mov
mov
fsubrp
push
addr16
cmp
xor
mov
xchg
and
sbb
cmovle
xchg
inc
cmp
test
pusha
pop
shl
or
shrb
pop
sub
xchg
fistpl
push
xchg
inc
cmpsl
lret
arpl
loope
or
cltd
cmpsl
inc
sub
jecxz
mov
int
mov
dec
xchg
xchg
ljmp
adc
lods
cmp
jns
cmp
xchg
xor
not
pushf
sub
jl
xorb
mov
and
add
push
gs
fsts
push
jb
hlt
sbb
jmp
push
mov
jmp
mov
inc
pushf
ljmp
ljmp
mov
jmp
imul
add
or
into
test
stos
jns
mov
or
addb
dec
mov
xor
stos
js
sbb
jno
jne
clc
or
shll
popa
aaa
and
adc
mov
mov
in
sub
icebp
addr16
jl
add
les
inc
mov
or
xchg
scas
ss
push
loope
lahf
jae
pop
add
cltd
lret
inc
add
jnp
pop
outsl
jecxz
jp
jge
cmp
add
rcr
in
push
aas
sahf
cmp
int
mov
jmp
loop
mov
push
xchg
loopne
cmp
mov
push
jo
lret
hlt
fldl
fidivl
sbb
shr
loop
movsl
enter
sub
bound
scas
fsubp
or
push
daa
js
icebp
jge
sti
adc
adc
push
shl
cmp
iret
sbb
imul
pusha
in
outsl
xchg
add
iret
add
xor
aam
and
pop
sbb
or
pop
push
ds
pop
dec
push
test
lahf
adc
aad
scas
movsb
jne
ret
stos
or
dec
lret
or
mov
xor
jns
add
daa
mov
mov
aas
mov
pop
outsb
ret
sub
outsl
fistpl
test
adc
sub
test
mov
fsubrp
push
add
jg
or
pop
add
insl
jecxz
dec
arpl
jecxz
and
and
cmp
jmp
add
test
lock
cmp
or
lcall
jns
test
mov
jne
xchg
cld
test
mov
data16
mov
fwait
mov
push
enter
outsb
jl
xor
sub
mov
out
stos
mov
shll
loop
inc
sub
gs
cli
loop
xchg
jbe
add
mov
jmp
sbb
mov
pop
stc
cli
jp
or
or
sub
in
xchg
cmpsb
scas
xor
popf
lahf
imul
pop
aaa
xor
popf
js
in
jp
or
ret
xchg
xchg
lret
pop
dec
rolb
std
sbb
lcall
mov
lret
cmp
inc
int
mov
movsl
push
in
test
mov
jg
sbb
rclb
ja
ja
jne
xor
mov
in
or
sbb
and
and
and
cmp
shll
subb
xchg
mov
jno
fmul
sbb
cld
ja
aad
lods
sub
or
lcall
dec
pop
pusha
sbb
lea
inc
jae
sbb
arpl
subb
test
mov
mov
dec
out
imul
xor
adc
push
push
dec
push
aad
lds
js
and
mov
fisubrs
adc
pop
push
xchg
mov
hlt
sbb
xor
std
inc
jnp
and
and
imul
fnstenv
mov
ljmp
pop
adc
fwait
out
loopne
sbb
sbb
xor
sub
pop
leave
cld
stos
xchg
ja
jbe
xor
inc
std
sbb
sbb
je
not
pop
and
sahf
pop
jg
test
stos
rcr
and
imul
sahf
jle
es
push
movsl
xchg
pop
into
cli
enter
xchg
mov
in
add
jecxz
ja
std
mov
scas
push
data16
gs
int3
cmc
mov
dec
test
sti
outsb
mov
xlat
inc
or
mov
adc
mov
into
fimull
add
lret
or
hlt
jnp
loope
jmp
insl
cmp
in
outsl
mov
ja
popf
movb
or
ljmp
addr16
jl
leave
and
cmp
jmp
pusha
mov
enter
mov
idiv
xchg
pop
int3
push
aad
das
std
xor
data16
dec
mov
sub
lahf
or
movsb
ret
inc
jge
or
xchg
cmp
dec
insb
icebp
mov
mov
int
sahf
rcr
xchg
xor
jae
nop
add
fisubs
bswap
sub
sbb
stc
mov
addr16
int
jg
cmp
mov
hlt
push
pusha
dec
push
push
adc
sub
daa
xchg
ljmp
xor
inc
or
mov
icebp
jp
jmp
cltd
mov
ffreep
and
sbb
es
jnp
mov
jg
int3
lret
lock
js
lahf
jge
or
in
gs
popa
push
test
pop
xor
and
int3
repnz
mov
sbb
jg
addr16
or
and
sbb
fnstsw
ret
mov
mov
out
pop
sbb
test
fidivrl
daa
nop
sbb
fistpll
repnz
sbb
fldl
in
fs
mov
dec
jnp
lock
fs
fwait
jbe
xchg
mov
arpl
add
movsl
sbb
nop
pushf
pop
ret
xchg
jle
fnsetpm(287
lret
push
xor
addr16
nop
incb
pop
sub
fists
aam
jns
call
fistpll
mov
std
addr16
pusha
bound
hlt
iret
sbb
xchg
sbb
imul
xlat
repnz
jns
and
cltd
dec
repz
pop
pop
adc
ds
add
cmp
js
int
adc
popa
mov
add
mov
popa
loop
jg
mov
fiadds
mov
or
clc
stc
cmpsb
movsb
imul
test
mov
ficoms
stc
xchg
pop
aam
es
jbe
arpl
mov
mov
ljmp
push
in
jb
jnp
mov
pop
xchg
mov
jno
daa
sbb
and
jbe
adc
cmpl
xlat
inc
sub
in
test
cmp
sahf
std
mov
jae
imul
fxtract
pop
int3
out
pop
xor
push
xchg
lods
push
movsl
enter
add
out
cmpb
pusha
in
pop
push
roll
pop
sbb
fisttps
or
rorb
loope
insb
shrl
push
add
lahf
inc
ljmp
cmpsl
inc
dec
cmp
dec
in
and
or
jnp
push
push
lret
cmpsl
push
inc
sub
mov
in
pop
test
in
cmp
push
addr16
push
ds
iret
fs
cli
or
cmp
cmc
jb
xchg
cmp
jmp
pop
test
inc
xchg
insb
call
imul
cs
in
hlt
sarb
enter
and
fidivs
jne
jmp
sbb
cmp
and
out
dec
out
hlt
sbb
es
sarl
add
icebp
imul
cmpsl
fdivl
dec
arpl
xchg
jecxz
or
sub
inc
pop
lock
push
jns
or
pop
stos
loop
stc
ret
mov
movsl
ss
cld
inc
add
jbe
xor
xor
pop
push
mov
sub
add
test
bound
adc
cmp
or
scas
add
cli
jg
or
add
mov
adc
push
jmp
mov
rcll
aam
pop
pop
in
gs
dec
xchg
pop
dec
xor
push
pop
lds
out
cmp
push
mov
mov
add
sbb
je
xlat
call
cli
cmpb
ja
fwait
inc
mov
scas
sub
lahf
mov
jl
mov
sub
andb
pop
push
mov
std
sub
aad
and
jae
mov
or
cs
mov
mov
mov
loope
push
out
jbe
divl
ja
testb
fnstsw
xlat
jo
lods
stos
pop
mov
dec
mov
jne
frstor
xorb
pop
into
jo
xor
inc
in
stos
push
stos
mov
icebp
shlb
imul
sub
test
or
adc
mov
xor
loopne
stc
push
jle
inc
mov
xor
mov
std
pop
jmp
pop
in
jp
mov
adc
xchg
cmp
jl
inc
pop
pushf
jb
jae
fcom
sub
pusha
icebp
pop
cltd
jmp
xchg
lods
jae
jns
lods
stos
jae
add
jge
shlb
or
dec
sbb
add
mov
mov
inc
mov
pop
and
stc
cltd
or
pop
lcall
pushf
cli
popf
push
xchg
jg
lds
out
pop
pusha
jmp
or
cmc
fwait
jns
mov
outsb
imul
das
dec
inc
fistps
frstor
std
xlat
push
outsb
aad
push
int
inc
push
mov
orb
push
lods
out
cs
mov
into
popa
mov
fnstsw
cli
in
jl
mov
xlat
ret
xor
cmc
stc
xor
loop
ds
mov
xchg
sub
cld
outsl
xor
mov
stc
mov
mul
or
cwtl
lock
ret
in
xchg
popa
jno
jg
mov
arpl
mov
inc
dec
and
js
inc
sbb
aas
push
mov
dec
pop
hlt
test
insl
and
daa
xchg
xchg
dec
mov
lea
sbb
jle
add
dec
imul
mov
in
sbb
popf
adc
xlat
mov
cmpsl
jle
inc
data16
rolb
mov
std
dec
and
jno
jle
push
xchg
inc
loope
cmp
fldl
or
iret
std
adc
push
cmp
ljmp
dec
pusha
adc
push
stc
leave
outsb
movsl
out
data16
addr16
or
mov
lea
dec
jbe
jnp
dec
lret
fldl
dec
fsubs
cld
lret
adc
test
mov
inc
adc
stos
fadd
es
mov
jge
sbb
nop
sub
dec
fldt
mov
iret
pop
sbb
mov
pop
jo
rcr
loopne
loopne
cmpl
adc
shr
mov
dec
add
add
add
push
push
addl
imul
jo
mov
hlt
push
pushf
add
pop
xlat
jae
fwait
es
aaa
inc
adc
aaa
scas
imul
fcomps
call
add
cmpb
outsb
orb
mov
xlat
push
jne
popl
out
push
dec
lds
add
ret
fldenv
call
fwait
inc
outsb
in
or
lock
insl
mov
lret
mov
in
mov
or
rclb
fdiv
insl
scas
xlat
mov
jno
decb
test
add
stos
out
and
sub
mov
inc
dec
jb
clc
in
push
sub
mov
sub
pop
jnp
jbe
insb
pop
addr16
repnz
fs
imul
ret
pop
int
cwtl
adc
mov
iret
test
pop
jge
dec
and
cmpsb
int3
sub
data16
fwait
and
inc
lret
sar
jecxz
sbb
push
enter
stos
lret
mov
divl
jo
adc
fisttps
ss
jge
inc
xor
push
add
stc
jb
int
int
test
or
loopne
xorb
sub
loope
outsl
pop
loop
mov
pop
dec
ja
mov
push
pop
pop
or
xchg
cld
mov
or
sub
cmpsl
and
out
addr16
iret
sub
cmp
and
sar
jle
enter
pushf
push
fimuls
call
std
xor
push
fistl
aas
lahf
adc
sti
mov
das
mov
cli
xchg
inc
mov
addr16
call
shr
aas
push
mov
fdivl
mov
test
mov
out
test
rorb
mov
icebp
stc
or
pop
xchg
pop
lret
clc
out
dec
fsts
sub
adc
xor
out
and
fwait
rorb
add
cmpsb
add
into
ret
push
sub
inc
lret
push
mov
push
jmp
sub
xchg
in
lret
sti
clc
in
push
bound
sbb
daa
pop
imul
mov
pop
add
mov
inc
lods
int3
and
push
push
xor
push
xor
or
int
or
repnz
xor
pop
shll
loop
and
adc
ror
lds
fildll
mov
outsb
sub
xchg
aam
mov
sahf
aaa
loope
push
push
xlat
sub
sub
cmpsl
dec
mov
xor
shr
and
inc
mov
push
add
mov
data16
mov
movsl
popa
fistl
dec
sbb
xchg
pop
daa
lea
adc
xchg
mov
and
sbb
and
push
pop
out
push
clc
and
divb
daa
loope
scas
lcall
mov
add
mov
shrb
test
dec
pop
and
push
inc
jne
jg
mul
xor
cli
and
mov
add
mov
dec
ljmp
pushf
insl
fadds
pop
scas
xchg
cmp
xor
stos
sub
and
sub
les
ja
inc
xor
or
mov
aaa
hlt
cmp
xor
jp
adc
mov
jg
pop
cld
inc
test
push
xor
pop
adc
or
sub
pop
mov
mov
stos
adc
scas
xchg
push
data16
sub
pushf
mov
xchg
pop
push
das
cmpsl
mov
adc
ss
mov
repnz
int
adc
hlt
loop
loope
stc
ja
das
ljmp
jnp
in
xchg
andl
mov
sbb
add
stos
sbb
test
sti
ds
lea
jmp
test
cmpb
aam
jae
or
xchg
or
stc
jbe
fbld
push
jle
sbb
pop
dec
sbb
fadds
cmp
cmc
cmp
or
push
mov
xor
cld
dec
stos
js
xorb
mov
mov
dec
in
push
jmp
in
test
loope
push
add
lock
mov
sbb
inc
fnstsw
insl
ja
mov
push
lods
lret
cmp
leave
cli
addr16
loop
adcl
shlb
lock
pop
sub
pop
repnz
sarl
cmp
rorb
fdivl
xchg
dec
mov
jb
fwait
shl
xchg
addr16
ds
or
aad
mov
jp
mov
xor
push
mov
sbb
iret
cmpsb
adc
lea
xchg
or
insl
iret
jnp
enter
dec
add
cmp
aam
or
les
adc
iret
sub
mov
adc
imul
mov
scas
lods
cmpsb
add
out
dec
hlt
fwait
sub
stc
mov
mov
aas
call
cmp
add
push
sub
jo
movsl
mov
push
push
aaa
pop
mov
adc
dec
lahf
pop
jb
ja
mov
mov
sub
mov
xor
aad
dec
das
andl
les
pop
pop
aaa
add
mov
fidivs
cltd
cmp
sub
xchg
mov
loop
sub
cli
xor
lock
xchg
or
inc
xchg
and
inc
jp
fisubl
std
dec
ja
pop
lahf
adc
mov
sbb
inc
movsl
xor
repz
insb
in
inc
outsl
adc
pop
movsl
imul
mov
dec
cmpsl
mov
adcb
je
shlb
gs
sti
gs
or
mov
hlt
fdivl
and
add
xlat
mov
cmc
inc
lods
std
jmp
outsb
dec
lock
push
jne
lods
mov
scas
stc
and
mov
adc
xor
cli
lea
imul
push
jns
in
lock
pop
push
mov
lret
pop
nop
lret
add
inc
int3
gs
inc
cmp
pop
jecxz
and
test
pop
mov
xchg
mov
mov
nop
ja
sub
sahf
push
test
into
fstps
mov
cmp
pusha
testl
cmp
dec
std
inc
mov
mov
xor
icebp
outsl
push
inc
leave
inc
mov
test
jb
pop
jmp
and
repz
mov
and
dec
hlt
pop
pop
adc
mov
cmpsl
sbb
add
stos
or
dec
mov
hlt
mov
xor
add
or
xor
jecxz
cli
out
orl
popf
jle
or
mov
and
jecxz
fcomps
dec
mov
repz
dec
pop
push
inc
pop
inc
jns
divl
mov
cwtl
sbb
and
repz
lods
arpl
mov
sub
dec
or
cmp
inc
insl
sub
mov
adc
fcmovne
cmpsb
jmp
inc
ficoml
xor
test
mov
insb
loop
pop
sub
rorb
movsl
push
fcomi
mov
insb
leave
xchg
test
jg
shrl
add
cltd
js
sbb
push
dec
jp
inc
xor
push
addr16
arpl
lret
jg
std
jne
cli
cmp
lds
into
ljmp
scas
outsb
and
cli
decl
cmp
aas
fstpl
pop
mov
cli
in
sub
inc
or
addb
les
inc
inc
outsb
inc
mov
gs
movsl
jmp
push
xchg
push
dec
aad
or
xchg
outsl
add
inc
int
stos
hlt
aad
sub
push
out
jns
divl
arpl
movsl
mov
leave
out
xchg
or
sub
daa
iret
clc
jmp
dec
sub
mov
pop
pop
inc
pop
mov
sbb
loop
dec
xlat
push
add
push
push
pop
jg
inc
scas
aam
push
int3
xchg
add
fldt
adc
xchg
testb
mov
rorb
and
sbb
sbb
out
xchg
shrl
push
lods
sbb
sub
pop
es
jno
sbb
push
fsubs
mov
lret
test
jecxz
cmp
flds
adc
leave
sub
jle
mov
out
int3
cmpsl
out
aaa
sbb
mov
test
sahf
int3
push
addb
or
pop
nop
daa
sbb
fs
mov
add
and
pop
mov
loop
decb
cmpsl
or
fistpl
mov
pusha
ret
xchg
fnsave
mov
mov
xor
adc
dec
das
sbb
push
in
scas
repnz
cmpsb
test
mov
lds
cmp
mov
xchg
into
into
mov
xor
xorb
cmc
leave
or
mov
clc
call
jl
fdivrl
outsb
mov
mov
lock
push
pop
adc
aas
push
inc
scas
addr16
lods
repz
aas
xor
pop
add
stc
pop
xchg
sub
or
xor
sti
xchg
and
pop
jb
or
cld
cwtl
mov
dec
jle
imul
insl
popf
cmp
inc
fwait
inc
lss
mov
mov
sbb
xchg
push
ds
xor
data16
jbe
fwait
pushf
mov
or
mov
jg
inc
mov
fidivl
movsl
cltd
pop
push
jnp
xchg
data16
jnp
mov
and
sub
jle
xchg
sub
cmp
sub
in
cmpsb
and
popa
and
mov
pop
sbb
rorb
cmp
xchg
xchg
or
daa
cmp
dec
pop
xor
jae
xchg
cmc
in
in
cmp
xchg
jmp
inc
or
mov
xchg
dec
testb
push
imul
xorl
in
fwait
out
push
adc
add
outsl
push
jne
loop
jg
inc
xor
xchg
ds
scas
fyl2xp1
movsb
jno
out
mov
dec
stos
hlt
xchg
pop
lods
in
mov
mov
fsubrs
sbb
jge
push
xchg
int3
mov
or
mov
cwtl
jmp
xor
inc
mov
add
xchg
fs
mov
mov
lret
fmull
arpl
dec
out
xchg
insb
cmp
cmp
lcall
stos
aam
jno
jge
insb
xchg
jno
adc
cmp
rorb
mov
xor
mov
mov
pop
and
mov
test
stos
out
jb
mov
inc
adc
sbb
stc
js
sbb
insl
xchg
adc
fwait
dec
and
pop
jp
fdivrl
add
dec
and
lahf
pop
or
cmp
lcall
xchg
mov
push
cmpsb
dec
stos
jl
push
les
leave
frstor
lods
add
je
dec
jge
inc
cwtl
pop
push
mov
out
mov
mov
cmp
pop
nop
cmp
repnz
stos
es
push
cmp
test
mov
and
inc
or
mov
sub
ljmp
add
push
add
pop
add
xor
or
imul
or
or
xlat
cmp
mov
and
inc
movsl
mov
mov
out
cwtl
or
adc
push
jmp
mov
xor
nop
push
jne
jo
inc
mov
jl
nop
stc
or
out
lcall
in
das
or
xor
push
lret
pop
or
sub
ret
jmp
stc
mov
ljmp
mov
mov
pop
pop
xor
movsb
clc
push
adc
pop
pop
icebp
push
decl
or
push
aas
out
inc
push
ret
test
sub
sbb
lahf
mov
mov
mov
pop
xchg
mov
mov
jns
mov
pop
pop
cld
inc
aaa
jae
dec
inc
sbb
jns
cmpsb
movsb
sbb
and
or
push
in
inc
push
add
cmpsb
jns
std
jbe
jl
fs
lret
lret
pop
popf
popa
jecxz
lret
pushf
sub
insl
inc
mov
xchg
jae
jle
das
lcall
popa
js
test
rolb
daa
mov
rcrl
cmp
cmpsb
jo
fimull
sub
test
xchg
or
testb
jae
scas
cmpsl
aas
mov
nop
xor
das
pop
xor
invd
jle
mov
push
push
sbb
push
mov
loop
ficompl
or
xchg
clc
jne
xlat
ss
sub
sarl
aaa
cld
xchg
punpckhbw
push
push
mov
test
jg
jecxz
xchg
mov
jns
ss
je
loope
pop
mov
xor
and
mov
xor
adc
daa
lods
ss
sub
sbb
push
div
xchg
cmpsb
jmp
popa
mov
xor
pop
das
sbb
cmp
lods
je
cmp
loopne
mov
fcoms
insb
push
fisttpll
adc
adc
mov
cmp
xchg
pop
cmp
mov
jge
shll
dec
les
or
adc
cld
xor
fadds
aam
pop
push
out
sub
jb
push
jg
jecxz
sbb
incb
mov
mov
xchg
push
jle
and
cmp
out
cmp
xchg
sbb
add
movsl
idivl
lret
inc
pop
xlat
cmp
adc
mov
std
inc
pop
adc
adc
mov
dec
fcmovbe
mov
dec
sub
inc
and
jne
and
and
sahf
push
inc
dec
and
aad
lods
or
sbb
jecxz
lods
hlt
adc
outsl
daa
cmp
mov
cmc
pop
mov
mov
aad
mov
push
sub
int
dec
cmpsl
adc
in
push
fadd
adc
sub
xchg
dec
sub
adc
mov
adc
inc
or
jne
xor
insb
mov
push
mov
test
fcoml
mov
sti
cmpsb
rcll
ss
sbb
jae
add
xchg
xlat
or
ret
movsl
mov
and
mov
movsl
lcall
pop
push
xchg
in
imul
mov
push
imul
mov
add
ss
xor
jns
mov
jle
repz
popf
mov
xor
dec
push
jecxz
push
jns
push
scas
xchg
sbb
sub
rcpps
push
imul
jmp
insl
push
jge
pop
jmp
sbb
or
stos
fidivl
push
lcall
jno
pop
test
movb
cs
sbb
inc
rcl
sub
ljmp
and
mov
scas
xor
inc
into
clc
loop
inc
mov
sbb
enter
jae
pop
lea
push
rorb
adc
sbb
mov
xorl
popf
mov
sub
lcall
mov
shll
mov
push
mov
lahf
lahf
sti
adc
mov
ret
aaa
pop
loope
call
sub
in
dec
mov
cmp
push
aad
inc
subl
jne
dec
push
pop
jns
cmp
push
push
pusha
call
rcr
outsl
jl
dec
out
sbb
leave
adc
ret
push
mov
or
cli
push
pop
test
out
out
xor
sbb
cmpsb
sbb
movsb
pusha
std
mov
iret
aaa
lret
arpl
ljmp
mov
push
int
int
xor
push
movq
mov
dec
mov
pusha
dec
popa
jg
sbb
inc
movsb
jmp
mov
push
scas
aam
aad
xchg
ljmp
sbb
push
ja
outsl
data16
xchg
bound
std
cli
sub
sahf
into
lods
jo
repz
sub
mov
stos
xchg
outsb
xchg
int3
sub
mov
inc
mov
inc
xor
pushl
repz
loopne
xor
mov
jae
rorl
jle
dec
sub
xchg
out
xor
pextrw
sub
aas
dec
movsb
pop
jmp
fwait
push
test
icebp
push
or
pop
cld
or
push
cmp
xor
xor
push
jmp
cld
or
popf
incl
push
pusha
sub
fldcw
repnz
arpl
in
sub
stc
pop
add
inc
enter
pop
arpl
add
mov
pusha
sbb
mov
push
lods
movsl
cwtl
or
xor
cmp
popf
jb
test
movsb
xchg
add
jge
enter
pushf
sbbb
pop
sahf
xor
out
int
aas
mov
inc
sbb
dec
pop
aad
mov
fwait
and
daa
mov
adc
lcall
daa
cmpsb
mov
lds
pop
mov
ret
sahf
mov
mov
adc
cmp
into
lcall
into
jl
stos
call
mov
mov
push
jmp
test
lds
xchg
adc
aaa
ret
addr16
and
push
loope
fadds
lods
outsl
clc
call
xchg
fistl
sub
inc
cli
sub
pop
andb
pop
dec
push
rep
sub
pop
xchg
jmp
repnz
aaa
stos
inc
int
data16
divb
addr16
xor
addr16
sub
or
ficomps
in
ss
push
lcall
dec
pop
or
add
add
push
adc
or
push
jne
lea
lods
xchg
imul
and
es
and
mov
sub
mov
inc
sti
adc
je
adc
pop
cmp
sub
xor
pop
mov
xchg
sbb
ret
jecxz
pop
adc
fwait
pop
jae
stos
mov
stos
and
push
fs
loope
pop
popa
jno
out
push
je
leave
iret
push
dec
rcrl
inc
mov
xchg
inc
mov
adc
je
cmp
jno
and
jle
mov
jno
mov
cld
ret
insl
mov
les
push
aas
shrl
mov
xlat
push
pop
movsl
mov
xchg
xor
mul
cmp
sbb
sub
in
pop
out
lds
jbe
fbld
call
xor
xchg
nop
xor
pop
sbb
fnstsw
xor
lahf
decl
or
in
or
sbb
jbe
cmp
sbb
mov
leave
xchg
mov
in
jnp
adc
sbb
push
and
mov
jo
ffree
xchg
pushf
push
sahf
das
adc
adc
push
sbb
hlt
push
inc
xor
inc
and
sub
sbb
mov
lcall
les
add
sub
and
cli
out
lea
repnz
fucomi
pop
pop
dec
jo
inc
scas
lret
or
sbb
jp
jns
int3
mov
dec
jecxz
imul
loop
rcrl
adc
stc
or
lret
mov
cmpsb
roll
cli
sub
pusha
das
insb
fiadds
push
loop
lds
sahf
imul
pop
push
lock
js
dec
jns
mov
jle
pop
jg
and
add
out
add
insb
mov
adc
fists
push
loope
pop
ljmp
adc
into
adc
leave
xor
lods
fwait
in
jo
out
jns
push
xchg
adc
test
sbb
add
fwait
lods
cmp
pop
pusha
sub
orb
int3
sahf
sub
dec
outsl
jo
fdivrl
jecxz
test
loopne
ljmp
in
xchg
push
add
mov
clc
rcll
shl
mov
ja
adc
sbb
dec
adc
mov
or
add
jle
int3
testl
push
inc
lahf
jl
dec
stos
pop
loope
xchg
int3
adc
data16
loopne
pop
cmp
aaa
xor
pop
adc
push
ror
pop
inc
mov
mov
and
dec
cmpsb
lods
andl
iret
pop
push
xlat
dec
in
stc
orl
or
mov
sbb
inc
lea
ja
sbb
and
mov
mov
cwtl
enter
and
jp
icebp
add
out
add
bound
push
jl
lods
xchg
bnd
push
dec
push
jmp
jbe
pusha
mulb
out
inc
cwtl
fs
xchg
movsb
and
add
xchg
push
cmp
ret
imul
mov
icebp
adc
imul
dec
dec
cmp
jnp
in
inc
pop
dec
ds
test
fsubrl
loopne
mov
mov
cmp
daa
pop
mov
fildll
dec
stc
nop
test
mov
frstor
push
mov
lret
testb
test
mov
outsb
or
hlt
pop
push
inc
cmc
and
mov
mov
mov
xlat
push
inc
inc
leave
dec
loope
cmp
aad
lds
pushf
mov
xchg
mov
push
nop
push
call
clc
mov
sub
jns
and
clc
adc
ljmp
ja
ds
pop
adc
pop
cmp
enter
dec
fsub
stc
cltd
mov
add
adcb
or
stos
jle
mov
pop
pop
mov
clc
sub
je
enter
xchg
js
add
xor
add
jle
gs
and
ficoml
mov
push
inc
xchg
rcr
sub
mov
cmc
adc
enter
inc
sahf
imulb
inc
out
lcall
push
cld
ss
adc
pusha
jge
rcr
mov
push
in
bound
push
mov
les
cmp
mull
add
push
adc
adc
dec
ss
xor
mov
mov
xor
xor
stos
shr
xchg
sbb
cmc
aas
xchg
fdivrs
shr
es
sub
int3
xchg
sub
lock
xor
and
mov
mov
rcl
push
stc
or
inc
scas
mov
sbb
pop
jecxz
lea
sbb
ret
sbb
into
dec
cs
and
and
dec
mov
insl
rclb
cmp
movsl
sub
mov
adc
je
xlat
sbb
ss
push
lahf
xor
mov
mov
add
sbb
adc
and
push
data16
cs
jbe
adc
popa
sub
pop
cmp
add
roll
gs
sahf
lret
jmp
mov
ds
push
imul
mov
jae
push
call
in
clc
aaa
inc
enter
div
cmp
fcomip
clc
pusha
mov
jle
sub
jle
pop
addb
adc
cmc
and
lcall
ret
jl
and
push
mov
xor
cmpsl
ljmp
outsb
mov
lret
pop
mov
in
mov
cmp
jl
mov
mov
es
jle
adc
aad
or
mov
sbb
xor
je
inc
jo
dec
push
mov
xchg
dec
aad
mov
pop
lcall
xorb
icebp
cmc
ret
rcl
add
insl
xor
cmpsl
jb
lret
out
rcll
and
repz
sbb
mov
mov
add
imul
push
ret
imul
fwait
int3
inc
imul
lea
ja
dec
sub
out
in
lcall
pop
mov
dec
stc
mov
es
rcrl
add
inc
ja
mov
popf
sub
inc
or
int3
in
push
cmpsl
adc
aad
loopne
push
mov
mov
addl
xchg
push
and
mov
stos
mull
push
jae
andl
xor
ret
mov
lods
xor
ss
negb
arpl
jo
fs
sub
scas
sub
idivl
stos
push
rolb
push
xchg
sbb
insl
bnd
insl
xor
iret
xorb
sbb
shrb
int3
or
dec
lcall
mov
mov
popa
rcrb
je
ljmp
mov
inc
add
fistpll
aad
push
mov
inc
jmp
pop
lock
psubusw
sbb
mov
std
fmull
jg
bound
and
jmp
fsub
lds
push
push
lea
ds
aam
pop
mov
clc
stos
and
outsb
push
call
or
push
xchg
mov
cwtl
pop
cmp
xor
mov
je
mov
or
and
in
push
pop
xchg
jb
arpl
dec
adc
mov
jo
out
idivb
jmp
lcall
shlb
hlt
out
push
mov
sbb
or
inc
jecxz
jmp
arpl
add
repz
cltd
xchg
dec
jge
and
sbb
inc
cltd
push
mov
pop
pop
into
mov
add
push
or
daa
xchg
jle
cmp
popf
out
fistpll
movsb
mov
pop
xor
sbb
in
jmp
xor
mov
jb
ret
and
xchg
push
sahf
xor
addr16
imul
xchg
xchg
in
mov
out
push
addr16
stc
adc
in
pusha
xchg
test
repz
jmp
cwtl
int3
fs
inc
pop
jo
ljmp
shrl
cld
sbb
and
add
jbe
sbb
sbb
xchg
mov
ret
sub
repnz
sbb
loopne
jmp
adc
stos
pop
out
xchg
and
inc
mov
mov
ss
and
ret
mov
mov
push
dec
dec
sarb
xor
xchg
push
fstpl
mov
lcall
fwait
ja
in
popf
dec
in
pusha
sub
popa
push
xor
push
xlat
into
adcl
cmp
popf
je
inc
push
es
fisttpll
cld
stos
loope
lahf
push
xchg
or
add
jne
pop
add
in
mov
pushf
pop
scas
mov
ss
inc
and
rorb
cmp
push
xchg
mov
stos
sbb
mov
subb
fnstenv
stos
xchg
arpl
rcl
mov
in
cmp
dec
loop
mov
movsb
popa
out
or
jle
outsl
imul
mov
out
stos
pushf
fimull
rolb
ficoml
and
xor
inc
stos
mov
cmp
mov
push
pop
jmp
cwtl
mov
stc
int
mov
fs
pusha
insb
jge
lahf
jbe
mov
popf
and
gs
outsb
mov
daa
sub
push
cs
test
js
jns
or
aaa
xor
shll
inc
mov
mov
popa
and
adc
mov
push
or
pusha
push
adc
mov
mov
cmp
xchg
aaa
in
jp
gs
lods
in
enter
ja
out
repz
ret
ss
hlt
imul
daa
dec
jle
inc
sbb
mov
jnp
cmp
aas
mov
negb
sbb
pop
cli
std
pusha
sub
adc
xchg
movsb
popa
mov
fdivrs
es
int
cmp
ss
and
xchg
mov
mov
and
sbb
cltd
in
rcrb
loop
xchg
push
jmp
push
cmc
dec
xor
add
xchg
stc
xor
das
xchg
ss
mov
sub
sbb
push
jne
stos
or
clc
addr16
pop
push
mov
cmp
lret
adc
cmp
adc
fiaddl
inc
pop
sbbl
int3
jno
lock
pop
mov
push
stos
and
mov
inc
les
xor
sub
cmc
cmp
or
mov
and
test
loop
pop
jbe
stos
inc
jg
in
pop
sbb
ffree
dec
and
outsb
popa
mov
jns
dec
mov
mov
xchg
cmp
jbe
inc
test
mov
push
pop
sub
scas
mov
pushf
test
daa
push
movsl
sets
jl
cltd
pushf
popf
and
fstps
jmp
arpl
ds
cwtl
jge
lock
xchg
movsb
mov
divl
js
adc
inc
imul
loopne
sbb
xlat
shrl
lcall
or
push
cmpsb
arpl
shrb
xor
inc
outsb
ds
subl
xchg
and
repz
xchg
inc
imulb
pop
test
inc
and
into
or
fs
stc
movsl
inc
add
mov
or
clc
cmp
lcall
push
imul
out
and
xor
pop
and
jle
jp
rorb
repnz
rcrl
js
das
and
cmp
jecxz
push
jb
stos
mov
imul
sub
xlat
js
inc
fs
jae
movsb
adc
sub
add
mov
rcr
xchg
inc
nop
jg
mov
arpl
scas
insb
stos
movsb
or
loop
mov
or
call
xchg
mov
outsb
fcomip
addr16
clc
out
inc
mov
mov
sbb
jns
movsb
jecxz
subl
cmpsl
movsb
cmp
jge
mov
hlt
lock
out
das
lods
icebp
jo
fs
dec
adc
dec
xchg
and
jo
xlat
hlt
stos
rcl
lods
test
sub
popa
into
sti
jb
add
movsl
lock
xchg
xchg
xchg
les
xor
mov
sbb
icebp
inc
xor
sub
adcl
mov
call
sbb
sub
testl
rolb
sub
sbbl
pop
inc
je
and
cltd
orps
sub
clc
and
sbb
or
pop
out
fwait
stc
scas
pusha
push
movsl
in
or
in
inc
add
mov
ret
es
add
adc
in
cs
loopne
call
push
cmpsl
pop
jg
out
adc
xor
lds
cli
push
in
dec
adc
jns
mov
adc
sub
mov
xor
js
pop
mov
or
out
inc
pop
fiaddl
test
push
jb
xchg
inc
push
add
jl
cmp
ja
cmpsl
cmpsb
lret
stc
popf
sahf
push
pop
outsl
dec
out
mov
cmp
push
push
sub
mov
in
nop
pushf
or
in
outsb
or
xor
inc
mov
shrl
pusha
sub
mov
mov
hlt
repz
xor
jmp
push
sub
dec
insb
cmpsb
mov
out
mov
dec
cmp
pop
cmpsl
sbb
xorl
pop
jns
fcomps
adc
lods
std
and
inc
mov
jo
push
pop
fcomip
sub
setno
mov
dec
and
loope
xchg
jmp
mov
rclb
and
repz
pop
sti
icebp
and
lahf
add
or
cmp
mov
das
pop
std
imul
mov
jae
addb
inc
mov
enter
mov
xlat
inc
movsb
mov
aaa
xor
xchg
dec
xchg
cmp
arpl
mov
test
add
iret
je
sub
movb
adc
cmp
mov
adc
mov
out
in
or
stos
jge
les
jg
lret
mov
shl
and
or
fisubs
jbe
add
inc
pop
mov
jb
cmp
push
sub
inc
push
addr16
in
jno
insb
leave
leave
jb
gs
jnp
mov
aaa
xchg
ficoml
js
testb
insl
lcall
es
les
xchg
loopne
xor
out
mov
xchg
sbb
and
pop
adc
xor
test
aam
cld
cmp
sub
mov
repnz
push
arpl
mov
bound
pushl
enter
and
mov
out
and
pop
loopne
pop
out
add
shll
fwait
sahf
push
daa
outsl
adc
imul
mov
and
lret
push
inc
in
xchg
push
insl
sub
dec
stos
mov
stc
add
mov
insb
nop
insl
mov
adc
jnp
in
divb
sub
scas
push
daa
sbb
repz
in
jae
shr
lds
cmc
mov
aas
dec
pop
ficompl
out
xor
pop
xchg
mov
inc
and
inc
xchg
xchg
arpl
or
mov
into
ja
dec
stos
jg
cwtl
insl
mov
pusha
mov
mov
pop
mov
iret
add
les
dec
cmp
adc
nop
jge
ss
cmp
sar
cmp
sub
mov
dec
mov
or
push
fisubrl
xchg
cwtl
shrl
jge
test
outsl
mov
mov
in
xchg
repz
mov
jge
xor
pop
sbb
jnp
sarb
jno
fidivrs
lods
pop
mov
jl
dec
nop
dec
or
movsl
mov
or
mov
aad
imulb
in
sbb
shrl
cmp
scas
cmp
mov
lret
pop
jnp
out
and
sbbb
addr16
push
inc
and
xchg
add
cwtl
adc
or
dec
cmp
cmpsl
push
mov
inc
mov
mov
das
cltd
inc
out
mov
cmpsb
xchg
clc
icebp
adc
inc
xchg
jecxz
stos
cmp
adc
movsb
mov
loopne
setl
sbb
dec
out
mov
cmp
or
mov
in
loope
insb
repnz
cmpsl
je
stos
cmp
cld
sbb
add
sub
sbb
and
mov
inc
fdivl
lret
adc
movsb
sub
repz
push
inc
imul
push
xchg
push
push
mov
cli
and
add
push
ljmp
aad
add
jne
ss
ds
add
sti
jmp
test
pop
aaa
push
test
xchg
sbb
mov
jae
sub
fs
xor
in
outsb
xchg
adc
js
mov
adc
inc
insl
sar
test
add
jne
lret
pop
and
inc
pop
cs
cmpsl
mulb
iret
leave
pop
lret
or
jmp
test
add
test
js
push
xchg
mov
fwait
sub
leave
mov
push
std
addb
dec
inc
inc
push
jbe
mov
inc
and
aaa
in
rclb
jl
pop
xorb
mulb
scas
lds
and
insl
push
cmp
ret
xor
aad
loope
sahf
sti
mov
fstl
es
pop
test
dec
mov
das
dec
mov
xchg
shrl
and
in
mov
out
pop
stos
adc
jno
xchg
dec
sbb
movsb
pushf
xor
xor
bound
out
fisubrl
and
dec
jecxz
fldcw
mov
mov
inc
fists
movsl
das
fnstcw
or
mov
adc
ret
call
jmp
add
and
inc
sbb
mov
std
pusha
push
aam
cltd
cltd
adc
fldlg2
jmp
and
mov
cwtl
daa
stos
jp
jae
enter
dec
mov
nop
push
scas
lods
ja
sub
jp
fwait
adc
inc
ret
imul
dec
inc
adc
movl
push
sbb
pop
mov
lock
lahf
sub
hlt
inc
jp
icebp
jns
dec
add
les
jno
and
lea
push
inc
push
aas
sub
add
fs
mov
xlat
fwait
test
mov
in
in
popa
outsl
mov
push
push
push
sahf
push
rcll
xor
jge
pop
lcall
adc
hlt
mov
sub
out
scas
mov
sub
int3
mov
jle
outsb
push
mov
xchg
arpl
inc
out
cmpsl
and
mov
fisttpll
mov
sbb
data16
imul
pusha
pop
mov
mov
jp
fidivrs
dec
cwtl
xchg
movsl
rol
mov
push
fcoms
iret
mov
inc
add
in
in
or
shrl
popa
xor
push
ret
dec
pusha
dec
inc
push
jns
scas
adc
fstpt
inc
in
and
enter
es
out
push
insl
fsubr
inc
xlat
fisubs
shll
loop
addb
movsb
push
pop
jp
addr16
cmp
dec
mov
jno
call
andl
inc
adc
repz
arpl
in
cmpsl
or
shll
aam
xor
ret
fisttpll
mov
inc
jae
or
sbb
and
rcll
push
call
in
sahf
ret
mov
mov
jns
pop
add
add
mov
lahf
xchg
ds
in
shlb
mov
nop
repz
adcl
bound
into
sbb
xor
xor
subl
jb
xchg
movsb
rol
and
sbb
movsl
stos
data16
ss
pop
cmc
pushf
inc
mov
pop
push
jmp
les
xor
push
scas
scas
popa
push
andb
pop
inc
mov
cmpsb
xor
int3
mov
cmp
jmp
mov
push
inc
sbb
lret
test
mov
sub
popa
sbb
adc
or
mov
mov
ret
rcrl
sbb
mov
insl
cltd
or
cmp
shrl
xchg
in
test
mov
js
pop
mov
clc
dec
cld
and
sti
test
cmpsb
in
jl
movl
inc
enter
mov
je
mov
fildl
stos
jo
mov
xor
hlt
scas
mov
les
mov
jp
push
stos
lret
jne
js
cmp
mov
add
jp
or
push
push
es
lea
fisubl
repz
cmpb
adc
pop
lea
test
frstpm(287
and
dec
jge
adc
mov
and
dec
mov
cmp
sbb
push
test
and
hlt
add
sbb
jge
sbb
aam
jl
div
rcl
in
xor
xchg
and
push
or
cmpsb
movsl
fs
add
cltd
out
jae
push
daa
sub
andb
fistl
call
sub
movsl
pop
jp
sarl
addb
inc
adc
scas
lds
in
into
imul
xchg
cmp
jl
and
int3
pusha
js
into
out
xor
mov
cmp
rorl
jmp
sub
add
cmp
push
xor
mov
fmulp
xchg
pop
add
loope
xor
sbb
cmc
add
sbb
xchg
ds
push
and
jb
lret
inc
cli
incl
push
dec
inc
push
scas
into
or
js,pt
adc
insb
sub
psllq
addr16
pushf
and
pop
and
aas
sbb
loop
in
jge
xchg
outsl
mov
mov
push
inc
out
lods
shrl
xor
sub
pop
adc
push
mov
sbb
dec
push
icebp
repnz
tzcnt
loopne
push
cltd
ds
adc
inc
xchg
pop
mov
mov
lret
nop
sarl
push
jns
shll
es
jmp
imul
repz
push
movsb
movhps
into
pop
aam
push
add
cmp
and
and
cld
mov
test
daa
jb
faddl
mov
out
cmp
or
sahf
lock
fcoml
inc
orw
out
and
dec
and
jb
pop
mov
xchg
mov
xchg
add
xor
sbb
insb
outsb
xor
enter
inc
jmp
sbb
aad
ljmp
sbb
jp
insb
sarb
xor
push
test
jg
sbb
dec
dec
rorl
out
inc
ret
inc
faddp
popf
fwait
or
pusha
mov
xchg
sbb
jbe
push
movl
cmpsb
jno
stos
and
jb
or
lock
lret
mulb
dec
sbb
dec
fcmovb
lods
pop
pop
scas
xor
pushf
inc
lods
mov
adc
pop
fildll
shrl
hlt
mov
movsb
and
add
sub
fwait
dec
and
popa
adc
mov
popf
mov
hlt
xor
dec
sub
out
mov
jmp
pop
mov
mov
push
fmull
xchg
adc
das
mov
and
dec
mov
push
subl
enter
jns
fdivrs
mov
sbb
hlt
adc
cmp
movsl
fldenv
pop
or
rorb
js
inc
cmp
push
adc
and
orl
xor
push
std
cmc
xchg
hlt
testl
push
push
or
pop
cmc
adc
sub
fs
jge
xchg
sarl
lcall
push
fbld
inc
sbb
mov
shlb
mov
repnz
xor
cwtl
subl
dec
test
or
cmp
mov
stc
mov
cmp
jl
sbb
clc
inc
mov
and
push
mov
mov
inc
adc
push
xchg
add
push
pop
fisubrl
cwtl
repz
add
call
dec
mov
mov
inc
xchg
popa
sub
data16
movsl
movsl
dec
aad
and
cmp
aam
imul
adc
adc
cmpsl
mov
mov
inc
out
jp
movsl
xor
mov
xchg
push
popf
xchg
pop
test
sbb
repnz
das
sbb
inc
aad
mov
push
mov
cli
cmc
sahf
cltd
jp
out
mov
pop
dec
mov
mov
or
lahf
inc
inc
pop
add
mov
adc
xor
push
mov
cltd
popf
jg
test
jmp
scas
jl
mov
ret
jne
and
cli
push
fwait
aad
dec
inc
inc
nop
fldl
mov
inc
mov
pop
repz
lret
push
xchg
test
push
icebp
shlb
sbb
pop
jno
pop
js
sub
aas
andl
and
sub
out
stc
jle
pop
mov
or
stos
jno
adc
cmp
push
repz
xor
push
aad
add
int
mov
lcall
and
inc
mov
jae
dec
mov
jb
ftst
xlat
fists
popa
hlt
xor
mov
sub
cwtl
arpl
mov
pop
into
push
data16
cld
push
lcall
xor
sahf
ja
mov
jg
es
mov
adc
leave
sbb
xor
cs
lret
sub
xor
push
push
sarb
sbb
inc
fstpt
dec
out
or
push
shrl
adc
es
pop
dec
repnz
add
jns
dec
sbb
stos
and
dec
mov
sti
mov
jns
bswap
mov
daa
faddl
nop
out
popa
xchg
lock
lds
movsb
jp
and
xor
pop
jnp
fwait
out
pop
lret
inc
push
adc
orb
mov
and
gs
je
mov
or
jbe
ror
cmp
shl
lahf
sub
rcr
sub
xchg
cmp
ret
insb
and
push
popf
jae
fcomip
add
dec
loop
mov
out
es
sub
mov
mov
cmp
push
jp
call
adc
sbb
imul
fcmovne
jg
sbb
push
mov
mov
pop
dec
cmp
icebp
cli
fldl2e
lods
lcall
push
xchg
xchg
cmpsl
out
cmpsb
jns
mov
out
mov
jle
jo
mov
xchg
jmp
dec
stc
ds
inc
jecxz
mov
lds
scas
sub
lcall
lods
cmpsl
mov
addr16
pop
popa
push
mov
mov
xchg
and
pop
pop
dec
mov
stos
in
push
pop
jb
jo
or
in
jns
sbb
fldcw
js
pop
mov
testl
and
mov
imul
lea
push
jle
test
in
adc
or
sbb
sbb
lods
roll
lods
xchg
or
out
sbb
mov
mov
mov
mov
inc
aad
sbbl
sub
xor
ds
aad
or
jne
in
iret
sub
xchg
push
dec
scas
push
sbb
xor
scas
jmp
mov
shl
sbb
aad
out
xchg
enter
call
jo
pop
loopne
cmpsl
and
xchg
ja
cmp
push
in
add
mov
xor
jecxz
xchg
filds
add
pop
movsb
xchg
and
xor
mov
imul
dec
loopne
adc
jp
imul
inc
or
aam
int3
mov
out
xor
mov
xchg
push
lret
mov
inc
xchg
test
mov
mov
push
enter
bound
das
hlt
shll
fmuls
imul
in
xchg
mov
inc
fwait
push
lahf
or
outsb
mov
addb
imul
add
push
into
into
inc
mov
pusha
inc
insb
inc
lcall
cmp
ljmp
xchg
push
or
jle
insl
call
lret
add
shl
sub
into
outsb
rclb
or
pop
sbb
add
or
mov
xchg
dec
pop
dec
mulb
test
out
dec
or
xchg
lahf
push
mov
mov
mov
inc
mov
xor
xchg
lret
sbb
mov
data16
out
cmp
cmpsl
jno
in
xor
bound
xchg
add
push
daa
sbb
cmp
cltd
pop
mov
sub
aad
push
xor
mov
xchg
aad
cmc
dec
shlb
int
sbb
loop
adc
add
mov
or
gs
repnz
mov
push
xchg
cli
jnp
loope
enter
and
jb
jmp
fistl
decl
addr16
push
add
inc
into
jno
iret
inc
into
lods
or
and
shlb
xchg
pop
in
out
add
fs
fnstcw
ja
fnsave
js
xchg
jl
lods
add
fcompl
inc
fimuls
loopne
shll
xor
mov
and
or
dec
insl
mov
xchg
fiaddl
mov
cmpsb
hlt
pop
inc
mov
push
adc
cmp
mov
repz
and
jo
inc
outsb
mov
dec
and
bound
add
xlat
dec
aas
xlat
loopne
or
into
adc
sub
cs
xchg
repz
jno
loop
mov
scas
xchg
shlb
cmp
adc
repnz
jae
add
aaa
dec
push
cmpsb
out
in
or
push
test
inc
data16
mov
mov
xor
pop
mov
jne
xchg
fistl
jmp
adc
sbb
fldl
sbb
pop
call
outsb
scas
mov
cwtl
dec
push
mov
inc
jmp
mov
rcl
nop
psubd
setno
pop
icebp
cs
lcall
mov
jmp
jae
arpl
repz
outsl
stc
jno
adc
hlt
jl
scas
sub
pop
leave
fcmovu
jl
dec
push
sub
cmp
scas
repnz
jge
xor
add
test
leave
push
pop
pusha
out
xchg
mov
cmp
cmp
icebp
test
push
clc
mov
mov
dec
inc
sbb
data16
lret
cmp
pop
repnz
movb
jl
int
iret
push
dec
xchg
cmp
enter
aaa
inc
js
push
push
add
test
nop
mov
add
pusha
mov
and
dec
cs
fwait
int
js
lea
test
jno
loopne
shrb
mov
loopne
lock
pop
aaa
adc
into
dec
les
pushf
xor
dec
lret
outsb
scas
fnstenv
popf
add
xor
mov
cli
mov
sbbb
notl
sub
push
mov
mov
outsb
xlat
fucom
arpl
add
adc
inc
pop
push
dec
jge
add
jnp
arpl
and
dec
or
shrb
fs
inc
jle
xchg
pop
and
test
movd
adc
incb
mov
lgs
dec
insb
ja
sahf
repz
adc
cs
das
sub
sub
loop
pop
dec
dec
ljmp
jge
ret
or
adc
movsb
sub
xchg
mov
adc
ficoms
or
add
insb
aas
dec
pop
mov
xorb
push
sbb
sbb
imul
or
or
jge
xor
xchg
test
and
jnp
mov
lods
or
xchg
roll
fnstsw
cmp
or
lock
sub
mov
adc
and
xchg
xchg
popa
inc
adc
cwtl
outsl
sbb
push
sub
or
cwtl
pop
stos
lret
rcrl
outsb
andb
xor
int
insl
jecxz
xor
cs
test
cmp
pop
addl
jne
js
popa
inc
sub
pop
sbbl
sbb
or
bound
movsb
das
cmp
sub
mov
clc
or
lcall
xor
fsubrs
test
dec
mov
mov
xor
sub
wrmsr
rcl
insl
sub
leave
idiv
sbb
xor
stc
dec
ret
movsl
in
dec
fwait
cmp
mov
repz
rcll
ficoml
xchg
sahf
andb
call
les
fisubrs
push
mov
push
push
inc
pop
xchg
or
xchg
test
xchg
dec
test
adc
xchg
sub
icebp
ja
mov
dec
pop
icebp
insl
cmp
mov
or
lods
mov
mov
add
push
and
jp
cld
jne
cltd
mov
mov
pop
push
shl
pushf
ljmp
imul
pop
cmp
ret
ss
jne
jmp
push
jno
imul
xchg
arpl
adc
xchg
lods
inc
mov
dec
lods
idivb
rclb
and
iret
ljmp
cmp
hlt
mov
cli
lock
mov
mov
popf
mov
lock
cmp
push
push
int3
mov
test
flds
cmp
mov
xchg
data16
push
and
push
int
adc
sbb
pop
lock
mov
sub
adc
lea
testl
mov
and
movnti
ror
mov
add
jne
sbb
gs
push
pop
enter
js
ret
popa
mov
sbb
cmp
fs
imul
dec
sub
cli
jmp
mov
mov
movsb
push
jae
cmp
jbe
testb
push
sahf
cwtl
fcomps
xor
ret
mov
and
push
test
mov
adc
idivl
push
cmc
inc
les
dec
in
mov
lea
mov
lcall
mov
cmp
xchg
pop
cmp
lret
push
bound
xchg
cmpsb
lds
mov
push
movsl
inc
mov
or
dec
xchg
mov
push
nop
iret
popf
out
xor
sub
stc
inc
loop
jge
mov
in
outsl
add
out
adc
lock
mov
inc
imul
and
outsb
bound
insl
cs
cmp
inc
negb
cmpsl
test
sub
addr16
mov
xchg
cmp
dec
push
mov
pop
pop
or
pusha
dec
or
push
mov
mov
shrl
cmp
xchg
jb
cmp
clc
sbbl
scas
in
popf
repnz
push
inc
fcmovbe
adc
scas
pusha
mov
sub
pop
sbb
pop
mov
dec
push
xor
mov
test
imul
xchg
mov
sbb
idiv
mov
sbb
cli
mov
andb
ljmp
add
jbe
insb
out
jl
mov
mov
xor
xor
jecxz
xchg
jle
mov
rep
inc
xchg
std
mov
inc
fdivl
lret
fidivrl
pop
ljmp
popa
enter
push
push
js
out
lock
mov
cmp
or
bound
repz
clc
add
outsl
add
jle
and
mov
mov
fwait
sbb
ljmp
dec
int
test
and
dec
lods
gs
fidivrs
xchg
jg
roll
ss
push
xchg
movsl
push
push
subb
fimull
ret
sbb
stos
pop
insl
ret
sbb
bound
sbb
cld
inc
testb
mov
mov
xchg
jle
ret
cmp
jle
inc
fsubrl
add
repnz
nop
cwtl
inc
xchg
xor
add
xlat
loopne
xchg
movsl
mov
lahf
cli
ret
dec
push
les
xchg
ret
ljmp
mov
arpl
lcall
sub
jge
add
sar
in
push
push
out
xor
lahf
fs
push
rcl
mov
lods
and
cmpps
xchg
dec
sub
mov
push
stos
cmp
mov
sahf
aad
lcall
and
dec
adc
fnsave
and
inc
adc
mov
and
mov
scas
outsb
push
inc
push
rol
out
lods
lcall
inc
imul
push
lods
xchg
mov
ret
cld
mov
mov
inc
mov
adc
inc
push
or
leave
outsb
xchg
sbb
lahf
xlat
or
fcomp
push
jge
add
out
mov
dec
rol
xlat
inc
push
jmp
movsl
insl
loope
mov
pop
mov
inc
in
insb
repz
sub
ja
xchg
inc
fnstsw
enter
scas
mov
xor
push
jl
icebp
mov
stos
jge
push
clc
adc
jmp
mov
mov
add
pushf
ret
in
xchg
out
add
dec
out
rorl
bound
xchg
or
pop
sahf
jne
into
sub
pop
push
out
sarl
and
test
clc
jb
fcmovu
pushl
popa
mov
sub
imul
cmp
sub
push
pusha
test
xor
and
imul
jbe
insb
aam
xor
dec
or
xchg
cmp
mov
jb
xchg
xor
sub
mov
shr
int
and
nop
jge
jp
outsb
popa
mov
push
push
movb
inc
insl
ficoms
cwtl
inc
mov
push
add
push
outsb
adc
insl
push
cmp
or
jg
mov
mov
flds
and
stc
sub
int3
insb
cmpsb
fisttpl
jb
sarl
dec
rorb
popf
fdivrp
pop
jne
fscale
jno
sbb
sti
int
mov
loop
mov
sub
push
mov
dec
push
or
cli
mulb
andl
call
mov
inc
sbb
ljmp
sub
out
add
or
sarb
lods
cmp
out
cltd
mov
mov
inc
js
lods
push
jno
dec
insb
mov
xor
aad
jecxz
jno
es
lret
lcall
shll
popf
push
in
push
or
inc
cld
leave
in
jns
jae
pop
dec
ja
add
inc
lods
test
or
push
movsb
das
mov
ja
dec
cld
stc
push
incb
sti
sub
ror
push
add
push
jae
int3
sbb
aad
jo
fs
dec
inc
addr16
adc
fwait
xchg
and
iret
sbb
xor
sub
pop
mov
test
jmp
push
repz
movsb
inc
scas
sub
xchg
xchg
mul
fiadds
adc
mov
mov
hlt
cmp
lcall
dec
aas
xchg
push
in
enter
inc
and
adc
or
lcall
mov
pushf
add
mov
jne
add
sub
in
dec
jo
dec
jae
sbb
mov
sti
xchg
pushf
cmc
int
ret
inc
in
adc
cmp
jo
push
loopne
arpl
nop
xchg
mov
in
shl
ja
push
mov
mov
push
xchg
movsl
sub
fisubl
pop
clc
push
fnsave
push
into
add
fnstsw
scas
pop
and
mov
or
xchg
fcomps
xor
test
inc
and
xor
xchg
das
jg
xchg
outsl
in
mov
inc
or
hlt
loopne
rcrl
mov
or
mov
test
mov
xchg
and
arpl
das
push
call
mov
mov
xchg
mov
paddsb
bound
xchg
insb
sbb
cltd
pop
stc
clc
xchg
inc
sbb
xor
sub
mov
pop
aas
testl
mov
adc
fadd
cmc
mov
mov
call
xlat
enter
or
test
cmp
xor
jge
and
push
xor
adc
std
xchg
mov
lea
fwait
loop
dec
mov
decl
mov
in
mov
jmp
das
and
adc
or
mov
jns
xchg
lock
das
jl
cwtl
fld
pop
ret
imul
mov
mov
xor
adc
dec
out
pop
dec
test
mov
fmull
test
lcall
cmp
xchg
mov
pop
mov
xchg
fcompl
testl
cmpl
sbb
fs
adc
rcrl
pop
jns
jo
xchg
mov
outsb
hlt
js
sbb
clc
leave
mov
ja
rcrl
stc
lahf
pop
push
or
std
jne
ss
pop
idivb
push
clc
lods
or
inc
jg
and
daa
hlt
pop
dec
fabs
lods
fmull
mov
pop
arpl
dec
push
mov
loopne
jno
jns
das
daa
xor
xor
inc
in
stc
aam
stos
popa
xlat
sahf
mov
mov
and
insb
ret
repnz
bound
popf
lods
shr
movsl
test
xchg
adc
lock
nop
lahf
and
sub
xchg
pop
lcall
pop
mov
dec
pop
mov
aad
je
xchg
stc
ds
inc
out
imul
loop
dec
cltd
arpl
jl
sbb
outsl
cmpsl
adc
fbld
scas
in
fisttps
mov
cltd
daa
dec
and
cmp
negl
jb
in
push
pop
add
or
movsb
aad
cmpsl
in
fs
adc
dec
dec
adc
cmpsb
test
fimuls
sahf
pusha
pop
repnz
push
stos
mov
in
jb
loopne
ljmp
cmp
aas
dec
fs
cmc
fisubl
inc
imulb
lods
sbb
in
hlt
cmc
fstpt
jae
adc
pushf
jmp
popa
iret
dec
gs
or
nop
icebp
jnp
lahf
push
dec
sub
adc
cmp
push
lock
lods
outsb
inc
iret
or
dec
dec
dec
mov
inc
dec
xchg
xlat
or
adc
out
add
iret
adc
push
sub
mov
jp
test
add
aas
cld
xchg
xchg
or
inc
outsb
xchg
sub
sti
mov
push
les
aam
and
aam
lds
inc
ljmp
lahf
jmp
jp
cmp
mov
fildll
stos
push
jae
cmpsb
push
xor
popf
je
pop
mov
ret
rolb
in
aam
outsb
lods
push
pop
ret
push
test
sbb
inc
enter
push
js
cmpsb
pushf
lcall
into
jge
xchg
mov
xchg
dec
mov
mov
outsb
or
jle
scas
sbb
outsb
xchg
dec
mov
enter
mov
pop
dec
sub
iret
lcall
mov
jl
dec
test
jp
push
pop
xor
mov
cmpsl
push
and
int3
cmc
pop
mov
xor
ret
xchg
hlt
sub
rep
mov
scas
cs
jo
movsb
stos
shld
dec
into
rclb
movsl
shlb
int
mov
jmp
and
fbstp
push
orb
sbbb
inc
lea
mov
jo
add
sbb
sbb
mov
dec
jg
pop
loop
push
inc
and
aas
jb
std
sbb
pusha
rcrb
fdivs
xor
sbb
call
insb
movsb
cltd
inc
xchg
push
push
add
add
in
es
push
add
mov
dec
pop
adc
sbb
or
sub
lods
leave
mov
pop
stos
mov
loop
loope
bound
jecxz
aam
cld
dec
test
out
ja
pop
mov
add
hlt
mov
stc
scas
mov
inc
nop
cmpl
add
mov
frstpm(287
mov
int3
shll
mov
scas
inc
cmpl
sub
push
mov
pop
ss
pop
cmp
scas
or
xor
jbe
jg
test
xor
xchg
adc
jl
in
add
cmp
push
push
ficoms
pop
arpl
inc
jl
les
cld
jbe
int3
mov
cmpsb
das
pop
out
mov
cmp
cmpsl
mov
pop
negb
sarl
jne
xor
mov
inc
jae
popa
lds
lret
clc
and
mov
adc
loope
ret
cmp
test
xor
jbe
jg
fimull
lret
cs
stos
mov
cmp
iret
mov
mov
ret
pop
pop
push
add
sti
call
fwait
test
lcall
imul
insb
dec
in
bound
add
xor
and
sub
lret
fnsave
inc
std
dec
push
cs
loop
xchg
lahf
shr
das
fcmovbe
mov
or
mov
rclb
sbb
push
lods
in
ja
loop
pop
lret
xchg
mov
rol
cwtl
lds
negl
or
into
mov
leave
xchg
repnz
icebp
insb
mov
pusha
add
push
sub
xchg
push
push
mov
js
insl
push
push
dec
testb
xchg
add
inc
push
inc
sub
sahf
or
and
push
gs
sahf
sub
sub
push
lods
test
sbb
pushf
insl
out
lods
mov
imul
repnz
dec
lods
jne
sub
shll
or
cmp
icebp
pop
das
jmp
jecxz
add
lods
test
add
lcall
jge
mov
cmp
pop
repz
add
lcall
jb
mov
sub
out
sub
mov
movsl
popf
or
or
incb
inc
mov
ss
loope
rcr
cli
in
out
in
rorb
xchg
call
push
jb
popf
pop
int
mov
lcall
xchg
xor
test
fdivrs
stos
es
lea
add
jmp
pop
dec
sahf
jb
jno
insb
popl
add
outsb
out
inc
adc
outsl
nop
dec
scas
jmp
xchg
push
test
ds
cmpsb
lock
fidivl
mov
js
frndint
popf
insb
mov
inc
fwait
ja
pop
pop
iret
fcoml
scas
xchg
lock
stc
ja
stos
pop
xor
loope
cmp
cmp
inc
sbb
push
lret
aad
mov
adc
dec
jge
popl
pop
hlt
or
dec
push
int3
xor
add
popf
or
or
loop
jns
mov
xchg
mov
cmp
cli
dec
stc
cmp
test
out
mov
pop
ds
inc
pop
clc
xor
inc
cmpsb
dec
sub
inc
shll
mov
nop
and
sub
mov
ljmp
movsb
insb
and
stos
ss
inc
imul
mov
add
cmp
cltd
adc
loop
enter
mov
mov
mov
outsl
je
sub
dec
pushf
dec
add
sbb
in
jmp
repnz
loope
inc
addl
pop
enter
stos
inc
push
push
add
inc
sub
inc
mov
xlat
pushf
adc
int
mov
andl
lcall
xchg
sbb
loopne
fsub
js
mov
xchg
jmp
mov
push
pop
xlat
sub
sbb
out
cld
add
pop
push
fwait
mov
fcmovb
and
xchg
inc
pop
clc
adc
sbb
mov
jge
mov
repnz
stos
rorl
pop
dec
inc
leave
pop
sahf
jmp
int
rolb
dec
or
ja
imul
or
pop
adcb
pusha
xlat
test
and
pop
xchg
fcmovb
outsb
or
rolb
movsl
pop
pop
cmpsb
icebp
lcall
push
subb
faddp
inc
not
mov
addb
adc
mov
pop
push
pop
ficompl
and
lret
out
push
xchg
sub
xor
add
adc
dec
mov
outsl
xchg
adc
xchg
push
push
ret
stos
push
mov
pop
loop
fcoml
lret
daa
add
jecxz
dec
jno
inc
inc
inc
sub
ljmp
mov
mov
call
mov
andl
pop
out
stos
pop
das
mov
outsl
lea
call
rcll
or
xlat
or
pusha
pop
call
ja
sbb
adc
inc
pop
fucomi
stc
xchg
mov
dec
mov
mov
pop
adc
filds
xor
in
xor
nop
cmpsl
jae
lods
adc
mov
insb
mov
or
inc
jp
mov
jns
sbb
xchg
insl
in
cltd
sub
jle
or
add
shl
jmp
shl
xlat
xchg
adc
daa
arpl
inc
aam
adc
sub
cmc
mov
insb
cmp
push
gs
and
loope
mov
clc
mov
xchg
fisubl
jnp
imul
xchg
adc
hlt
pop
sub
lahf
std
jnp
add
or
lcall
push
pusha
push
xchg
add
sub
cmp
mov
push
mov
mov
daa
push
pop
xor
sbb
and
sub
gs
xchg
mov
pop
sti
xchg
sbb
lahf
ljmp
js
mov
dec
enter
cli
out
jp
pop
lret
lea
sbb
cmpb
lret
adc
add
push
dec
cld
and
xor
mov
mov
cmp
push
push
movsb
push
and
bound
imul
sbb
and
xor
jo
jecxz
mov
fwait
pushf
repz
arpl
xchg
es
jmp
mov
add
add
sub
testl
cmp
sahf
add
push
lods
rorb
push
sbb
push
addr16
imul
jecxz
aas
xchg
pop
aad
adc
sub
icebp
rcrb
in
scas
xchg
cld
add
hlt
pop
nop
insb
repz
mov
scas
mov
mov
pop
std
mov
pushf
into
out
cmp
cwtl
std
dec
les
out
mov
scas
loop
inc
pop
testl
adc
shrb
sub
or
adc
mov
mov
mov
imul
test
stos
mov
pop
and
jns
lds
mov
cmp
sti
mov
or
jl
test
stos
test
adc
mov
mov
stos
aas
push
lahf
int
sbb
data16
repnz
xchg
cmpl
sbb
dec
pop
and
rcrb
jp
imul
outsl
cld
push
sub
outsl
aaa
in
xor
xchg
movsl
jl
inc
mov
addl
mov
cmp
in
insl
lods
dec
sahf
sbb
loopne
in
inc
out
movsl
cwtl
inc
mov
outsl
cmc
adc
sub
pop
xchg
cmp
test
add
call
sub
sbb
mov
stos
xor
call
sbb
test
sbb
cmp
mov
jge
pop
rolb
add
adc
fisubrs
xlat
mov
cmc
or
iret
scas
push
mov
xchg
xchg
mov
cli
mov
pop
rclb
push
mov
stc
xchg
jle
inc
subb
and
int3
sub
test
lret
pop
mov
sub
xor
mov
into
stos
xchg
or
sub
pushf
ja
mov
mov
fmull
fs
mov
out
push
ja
xchg
int
cmpsb
nop
mov
lods
lret
lods
nop
lock
ljmp
es
sub
test
in
mov
inc
cmc
popa
dec
cmp
lahf
jecxz
shlb
mov
andb
ficompl
mov
xor
push
sbb
push
fs
loopne
jecxz
std
rcll
jb
lods
outsl
scas
inc
inc
mov
mov
notl
inc
stc
ljmp
test
xchg
jae
into
xchg
mov
add
das
mov
and
pop
stos
and
mov
cli
sbb
push
imul
dec
mov
stc
push
fstpt
sub
rcrb
dec
xor
rcrl
js
sbb
inc
sahf
jg
pop
xor
mov
mov
fcoml
push
or
push
shrl
inc
add
je
cs
xor
cmp
mov
lcall
jne
cs
jle
adc
pop
cmp
test
dec
dec
pop
inc
outsb
lods
xchg
loope
out
mov
cmc
cmp
inc
test
dec
movsl
adc
lods
pop
inc
ljmp
cltd
jns
aaa
push
push
inc
int3
and
jmp
dec
rcll
xchg
mov
pop
lahf
xlat
xchg
cltd
sti
xor
js
jmp
jbe
rclb
sbb
cmp
push
dec
fimull
ljmp
call
fnstcw
scas
in
icebp
mov
scas
adc
fcom
mov
cmp
add
or
mov
adc
jge
ds
iret
or
into
stos
jnp
jmp
jmp
jb
pop
shlb
mov
cmc
stos
stos
fs
hlt
push
push
pusha
fiadds
orb
cmp
pop
xor
xchg
test
inc
mov
gs
jae
ljmp
stos
iret
mov
in
stc
jnp
sbb
adc
push
jnp
push
push
xchg
pushf
es
adc
sub
imul
xchg
mov
cwtl
adc
xor
xchg
dec
fstps
ret
jle
pop
push
lock
mov
es
mov
dec
dec
aad
mov
ret
scas
fnstenv
xchg
cld
cmp
mov
jle
pusha
push
cli
sbb
fwait
or
clc
sub
jecxz
out
ret
ja
lret
sub
mov
jl
mov
xchg
pop
lock
mov
movsl
xchg
outsb
in
xchg
pop
push
incb
or
jns
push
mov
pop
cmp
rcrl
mov
mov
mov
cmp
out
mov
cmpsb
cmc
add
cli
xor
stc
imul
mulb
pop
enter
jmp
xor
dec
scas
adc
leave
fimuls
jp
sbb
ss
mov
jae
pop
popa
add
jbe
mov
icebp
jbe
out
mov
or
add
hlt
jg
ds
mov
jno
test
in
test
sbb
or
cltd
ja
out
or
outsb
push
shrb
push
mov
shll
or
mov
jle
jecxz
and
and
push
hlt
cmc
and
and
adc
bound
iret
push
clc
sbb
lcall
aam
movb
ja
cld
js
or
sarb
sub
jp
jle
jmp
fnstsw
add
lret
mov
xchg
fdivrl
sub
mov
mov
int3
jne
fsubr
jae
roll
jae
and
adc
sub
pop
xor
mov
nopl
movsb
mov
test
das
push
popf
xor
cwtl
orl
pop
xchg
dec
cmp
into
xchg
xor
cmc
mov
in
and
rcrl
adc
dec
sbb
and
arpl
dec
rorb
jg
addr16
sbb
lock
mov
inc
mov
push
xor
shlb
adc
insb
test
xor
popf
lock
das
std
insb
in
mov
in
mov
push
lcall
ficompl
out
sub
jae
mov
lcall
pop
sub
or
and
outsb
or
fnstsw
inc
test
dec
and
divb
dec
inc
sbb
inc
pop
cwtl
popa
aam
xlat
repnz
inc
daa
ret
sub
mov
or
mov
scas
pop
xor
jl
call
sbb
xlat
loope
test
daa
and
xor
sbb
stc
xor
mov
ret
and
sahf
icebp
mov
fistl
dec
xchg
mov
fsubrs
repnz
dec
mov
scas
lock
sar
and
daa
jge
cld
cmp
test
mov
jp
cmpl
add
cltd
or
pusha
pop
ficompl
es
adc
cmp
add
jle
movsb
scas
cmpl
mov
sbb
mov
sbb
test
insl
pop
sarb
fs
mov
push
dec
in
cpuid
dec
mov
fildl
pop
and
lahf
ljmp
mov
out
ds
add
fbstp
sbb
pop
push
iret
subl
push
sub
test
movsb
or
sbb
xchg
sbb
adc
sbbl
fisttpl
xor
fstl
cltd
cs
mov
jl
movsl
mov
insl
mov
jo
dec
sub
imul
rorb
pop
aas
push
cmc
mov
popf
outsb
stos
push
ficomps
jo
roll
scas
jl
mov
outsb
sub
adcl
arpl
mov
jbe
sub
jmp
mov
stc
inc
sbb
stos
sahf
adc
pop
pop
cld
in
mov
mov
sub
xor
insl
inc
out
popf
out
cmpsw
sbb
mov
scas
aad
mov
mov
xor
std
and
inc
jae
in
sub
sub
jns
out
jne
sub
scas
rcr
xchg
movl
dec
in
in
shrl
or
xor
and
scas
cmp
aam
or
jp
lea
add
ds
mov
mov
loopne
out
sahf
add
mov
daa
jecxz
inc
inc
les
add
pop
lea
mov
cmpsl
mov
movsl
fidivl
xchg
stc
xchg
mov
inc
arpl
jo
frstor
arpl
lds
jge
andb
enter
sbb
xor
test
push
loop
pop
mov
in
push
mov
aad
ljmp
xor
mov
jbe
fnstenv
imul
mov
aas
stos
dec
mov
cmpsl
stos
mov
lcall
inc
and
insl
push
out
enter
stc
iret
pop
or
aam
dec
pop
pop
xchg
cmp
jbe
pop
in
jle
out
test
adc
bound
out
cltd
rcr
xchg
cmp
idiv
repnz
mov
push
les
daa
sti
push
loopne
cmp
cmp
jb
and
addr16
or
das
push
gs
xor
jge
xchg
lea
mov
inc
xchg
add
sbb
xor
mov
jge
and
mov
fistpll
mov
mov
xchg
jmp
or
jbe
leave
xor
and
cmc
insl
lds
dec
sub
jle
es
jge
or
loopne
loop
push
stos
ja
loopne
mov
cmc
out
inc
mov
scas
jecxz
lcall
or
dec
mov
pushaw
push
xchg
lea
mov
or
jp
xchg
das
xor
or
inc
rcrl
mov
mov
lahf
andl
enter
lcall
mov
xchg
cli
mov
pop
mov
sbbb
xchg
mov
push
mov
and
xchg
jmp
push
jb
mov
inc
test
xchg
out
insb
cmp
jb
in
aad
or
inc
mov
leave
aam
push
push
nop
jg
lds
daa
mov
mov
jge
or
mov
xlat
adc
add
xchg
in
pop
mov
jle
push
xor
mov
pop
test
test
xlat
ret
jmp
sbb
or
je
in
mov
ret
xchg
fs
mov
repnz
add
stos
sbb
sbb
mov
fsubl
scas
push
sub
dec
fwait
pop
stos
fwait
jno
test
xor
mov
xchg
movsl
sub
lea
mov
or
push
icebp
xor
pusha
xor
in
mov
rcl
rorb
mov
cmc
xchg
int
scas
push
inc
mov
mov
dec
sbb
loopne
mov
add
gs
ljmp
add
leave
cmp
hlt
int
jno
jae
faddl
xor
cmp
int
add
push
sbb
gs
arpl
add
sahf
mov
testl
mov
jg
adc
xchg
stos
mov
mov
das
pop
jns
ficomps
out
addr16
xchg
into
push
push
test
and
sbb
femms
jno
dec
daa
ds
xor
xorl
pop
enter
in
mull
lods
mov
mov
mov
cmp
fwait
into
loop
mov
int3
out
in
push
jecxz
mov
hlt
idivl
lcall
dec
lock
incb
and
inc
mov
inc
js
mov
subl
dec
lret
jne
cmpsb
push
mov
push
out
negb
jbe
fsubrl
mov
lahf
xchg
xchg
mov
sahf
stos
push
outsb
in
sub
dec
pop
outsb
push
pop
aad
dec
jle
ret
and
and
mov
pop
fnstsw
fsubr
mov
shlb
xchg
movsb
lods
sahf
pop
pop
fs
scas
rclb
or
add
sarb
adc
xchg
adc
fstps
cmp
fisubl
mov
mov
inc
sbb
xchg
loop
push
xor
clc
push
inc
pop
mov
sti
lcall
cmp
xchg
sub
sub
lods
dec
fnstenv
adc
stos
push
imul
jbe
sbb
ljmp
fistpll
jl
sahf
mov
mov
int
mov
mov
rcll
icebp
movsb
adc
mov
adc
pop
out
lcall
neg
loopne
pop
sbb
jbe
es
mov
jae
mov
mov
imul
xchg
incb
pusha
cmp
popa
mov
push
dec
mov
push
jl
or
ds
cmp
and
bound
idivl
push
cmp
mov
in
out
and
addr16
xchg
rol
dec
xchg
aas
out
inc
mov
int
inc
lods
enter
push
imul
jecxz
sub
or
cli
inc
inc
jecxz
fiadds
enter
in
test
push
xlat
and
iret
dec
push
adc
es
outsl
inc
mov
xchg
add
sbb
jl
fs
aaa
xor
cli
icebp
les
adc
pop
movsb
or
xchg
mov
fnstsw
and
jb
dec
fnsave
xchg
lock
sbb
mov
pop
jge
sub
scas
out
jecxz
push
rorb
jmp
sarl
into
jl
pop
out
leave
mov
pusha
shrb
shll
pop
add
push
adc
and
ficoms
clc
fmull
dec
stos
lahf
stos
jbe
adc
mov
or
in
xchg
add
pop
xlat
dec
cs
push
mov
in
push
add
dec
xchg
in
push
gs
pop
test
stos
mov
jbe
sub
icebp
cmp
scas
inc
cmpb
mov
xor
xchg
mov
fsub
mov
jl
and
dec
adc
sti
repz
cmp
sbb
fnsaves
js
adcl
lcall
in
push
sbbb
mov
push
dec
addr16
pop
test
jae
cmp
lahf
adc
xor
shl
mov
aas
add
fwait
lret
nop
test
insb
jle
divb
and
lret
outsl
push
test
cmp
push
jle
loop
fwait
pushf
lret
xlat
mov
inc
cmpsb
or
xor
jmp
mov
cmp
adc
cmc
jne
jb
mov
cltd
adc
fs
lock
xchg
pop
popf
jnp
cmpsl
add
lods
jno
cld
add
jae
repnz
fdivl
cmc
filds
dec
test
leave
push
adc
adc
push
loop
inc
push
mov
sub
aam
adc
insl
les
jnp
mov
dec
outsb
sub
fnsave
mov
sbb
jge
insb
mov
orb
push
aad
movsl
rolb
pop
jbe
jno
pop
sub
xchg
sbb
xchg
popa
adcb
and
mov
cmp
inc
fdivl
pop
and
bound
cmp
pop
bound
and
test
jg
pop
pop
pop
and
adc
out
mov
lret
out
sar
xor
mov
cwtl
xor
sub
jecxz
pop
into
cmp
outsb
movsl
cwtl
inc
jl
pop
inc
or
jge
or
inc
add
or
xchg
int3
xor
jle
addr16
cld
jno
inc
or
pop
ficoms
mov
sysexit
mov
ja
outsl
jecxz
or
jb
xchg
dec
lods
jb
fldl
xchg
repz
mov
sbb
cmp
aaa
test
leave
out
shl
jae
enter
push
shrb
adc
daa
jbe
add
sbbb
sbb
cmp
mov
mov
aaa
pop
sub
jecxz
cmc
hlt
mov
pop
pop
inc
mov
cmp
add
inc
dec
xor
cmp
push
sub
inc
cmpb
sbb
cmp
ret
mov
adc
inc
push
imul
and
insl
xchg
or
jne
mov
xor
xor
nop
bnd
dec
fisubs
sub
push
push
scas
pop
cmp
pop
shll
mov
stos
jmp
mov
mov
mov
pop
xchg
addr16
sub
add
out
filds
cmp
iret
mov
adc
insb
push
dec
movsl
insl
pop
fnsave
cmpsb
or
stos
rclb
push
cmp
aad
test
push
pop
adcb
into
push
cmpsl
and
mov
bound
mov
adc
pop
sub
pop
mov
sub
xchg
loopne
mov
adc
aas
pop
inc
mov
push
arpl
push
fsubrl
xor
dec
push
fidivl
dec
push
add
cmp
and
pop
push
ds
addr16
outsl
xchg
sub
out
or
jmp
popa
xchg
cli
push
stos
push
xchg
loope
cmp
mov
and
lds
outsl
and
mov
pop
fidivl
sbb
cs
jge
cli
fcoml
fdivl
enter
int
aam
adcl
and
lods
xchg
xchg
jp
enter
pop
fucom
cmp
cmc
dec
xchg
cld
repnz
adc
cmp
inc
ds
adc
xchg
sahf
inc
ret
jecxz
inc
adc
loop
lret
test
jge
ficompl
imull
mov
cmpb
fwait
loopne
in
pop
mov
jne
pop
xchg
outsl
stos
or
mov
test
xor
dec
insb
sub
nop/reserved
inc
gs
sbb
enter
cs
imul
mov
ds
sbb
insb
into
adc
push
test
je
xchg
jmp
rorb
scas
lock
arpl
mov
lahf
movsb
sbb
pop
and
ds
or
dec
or
into
leave
pop
mov
push
mov
idivb
int3
mov
push
push
das
sbb
fimuls
data16
adcb
cli
dec
mov
ret
dec
jp
push
add
cltd
shrl
js
inc
pop
inc
push
push
mov
les
pop
ja
mov
jecxz
or
mov
jne
mov
insb
lahf
push
adc
cmp
xchg
std
test
roll
or
lds
mov
ja
push
jnp
and
xchg
insl
icebp
ret
repz
outsl
test
addr16
xor
xchg
mov
loop
inc
ja
cld
jae
aam
cmp
fdivs
xor
and
gs
fildl
ljmp
push
lods
add
lods
rclb
pop
cmp
or
mov
sbb
xor
xor
and
xchg
dec
sbb
cwtd
jne
andl
inc
in
lret
out
and
mov
fmul
lret
and
pop
shll
xor
out
popa
xor
ret
ficoml
popf
rorl
stc
jg
in
iret
and
inc
rcll
loopne
fisubs
sbb
adc
fwait
cltd
jo
xchg
popf
and
dec
notb
jmp
out
cmp
add
sbb
fsubrs
xorl
and
loop
xchg
pop
mov
inc
lahf
push
enter
adc
and
cmp
sub
mov
movq
xchg
sub
lret
sub
js
add
hlt
lcall
pop
push
or
fcoms
mov
pop
hlt
das
call
fnstsw
jg
lods
nop
sbb
in
cmp
sub
xchg
adc
push
shlb
add
push
daa
inc
mov
push
cmc
push
fwait
cld
jp
arpl
push
sub
and
sbbl
lods
inc
out
add
sub
nop
xor
xchg
push
xchg
sahf
push
outsl
dec
dec
in
jmp
inc
movsb
iret
and
fucomi
jle
icebp
mov
adc
dec
push
xchg
inc
pusha
mov
aas
cli
xlat
imul
add
pushf
pop
inc
pop
sub
and
sti
sar
xchg
aam
xchg
lds
xchg
sahf
mov
add
sahf
xor
negb
into
out
pop
sbb
lret
sub
int
xor
dec
inc
adc
cmpsb
hlt
scas
adc
inc
pop
jae
rolb
leave
cli
mov
decl
and
mov
jg
adc
outsl
stc
inc
sahf
adc
mov
mov
jae
sahf
xor
jl
mov
imul
aam
sub
fnstenv
push
lods
shrl
bound
cld
rcr
add
add
push
mov
jns
push
or
lahf
sti
faddl
and
sbb
fsubs
out
xchg
inc
call
pop
mov
mov
das
cmp
pop
push
push
jb
pusha
stos
xchg
sbb
adc
daa
mov
sti
jb
insl
ljmp
loope
push
xchg
ja
mov
int3
out
jp
mov
lods
dec
mov
test
lods
xchg
aas
idivl
inc
push
jmp
repnz
in
jnp
addr16
add
arpl
mov
mov
mov
test
xlat
clc
cwtl
mov
fwait
jle,pn
ja
push
test
sub
xor
js
leave
aas
pop
hlt
scas
cwtl
mov
cmp
adc
add
jl
xchg
cld
fisubrl
mov
and
sbb
add
and
pusha
scas
mov
cmpsb
jle
inc
pop
das
adc
ret
ret
xor
leave
mov
jbe
sbb
xor
xchg
adc
adc
xor
in
jle
cld
xchg
out
outsb
mov
mov
orl
mov
jbe
cmc
orl
into
mov
sbb
or
stos
inc
sbb
dec
or
loop
cwtl
sbb
out
aad
dec
mov
adc
sub
sbb
cmc
push
bound
insl
sar
or
fimuls
pop
test
cmp
sahf
dec
lods
pop
cmc
ss
adc
scas
stos
and
xchg
dec
cli
mov
sub
ret
xlat
cs
mov
das
pop
movsl
lahf
dec
push
mov
mov
cmp
pop
repz
lds
or
je
mov
mov
testb
xor
pop
aas
int
mov
shrb
xchg
test
int3
mov
test
cltd
cld
sarl
data16
out
pop
loopne
pop
cmc
inc
scas
xor
cld
ds
fistps
sbb
inc
jmp
das
jle
je
inc
jl
ljmp
xchg
pop
lock
xchg
cwtl
xchg
xchg
cmp
cs
push
in
mov
inc
xchg
js
test
lcall
leave
arpl
insl
jge
mov
mov
gs
jns
push
xor
rcl
xchg
mov
cmpsb
out
pop
cmp
lods
ljmp
mov
push
shrb
stos
test
sti
sub
mov
ljmp
xor
inc
and
adc
pushf
enter
int
test
mov
sub
sbb
enter
leave
xlat
inc
push
enter
outsl
outsl
popa
notl
stc
adc
inc
cli
arpl
mov
push
roll
insb
lods
xchg
ret
rclb
pop
dec
int
cmpl
push
ja
mull
push
test
mov
add
mov
mov
sbb
or
popf
lcall
mov
adc
lcall
pop
repz
jne
test
cmp
cmp
and
jmp
hlt
outsb
fwait
jbe
jnp
cmpsl
mov
xchg
mov
push
test
testl
inc
lock
rcr
sbb
rolb
cmp
testl
repnz
lret
scas
data16
dec
loopne
dec
push
cmp
pop
std
ror
fists
cmp
or
sarl
loopne
fwait
ret
cmp
push
sub
cmp
subl
roll
mov
fs
pop
lods
lret
ljmp
dec
outsl
imul
or
and
enter
jge
sbb
fsts
clc
outsb
adc
inc
dec
jle
lcall
push
inc
pop
pop
push
shrb
pop
mov
adcb
adc
int3
fstpl
inc
inc
dec
nop
jne
sub
lock
jo
jo
popf
adc
mov
test
insl
es
mov
add
cmp
mov
mov
test
cld
adc
xlat
mov
or
lret
imul
pop
pop
mov
add
mov
push
rcl
ds
cmpsl
and
loopne
sub
xor
mov
push
cli
and
mov
lret
std
lods
mov
out
lahf
iret
pop
popf
dec
lcall
test
stos
enter
sti
or
inc
push
add
xlat
xchg
pushl
clc
fs
jo
lahf
jge
sbb
cwtl
repnz
div
cmpsl
or
inc
or
jecxz
and
cmp
lret
ss
fs
pop
push
mov
mov
ljmp
adc
jno
cmp
shlb
mov
mov
je
sahf
xchg
in
lret
imul
xor
cmp
fs
jg
sti
aam
int
mov
mov
sub
dec
or
jno
and
xlat
adc
adc
mov
nop
leave
fisubs
lret
aaa
xchg
dec
push
fcmovne
addb
cmp
sti
sub
insb
je
dec
and
and
daa
inc
mov
mov
imul
adcl
popa
pop
in
inc
push
cld
out
dec
ds
add
out
push
jmp
hlt
addr16
add
adc
mov
and
aam
addb
icebp
cmp
mov
and
faddp
cmp
lcall
xchg
pop
or
sub
jmp
xchg
and
fsubp
mov
icebp
and
testb
stos
fimull
mov
jns
jno
cmp
test
xor
outsb
jo
cmp
outsl
std
jge
inc
loope
lods
loope
inc
imul
movsl
mov
inc
iret
shll
fadds
cmc
daa
ficomps
inc
adc
pusha
xor
push
gs
sub
out
lods
xchg
jnp
and
mov
push
add
sbb
loopne
pop
cmp
out
rorl
inc
inc
bound
dec
lds
ljmp
jae
outsb
std
mov
mov
xor
inc
int
rcll
pop
push
arpl
test
inc
xchg
xor
inc
dec
and
movsb
push
pusha
mov
enter
pop
and
mov
cmpsb
lods
imul
push
sbb
pop
loop
aad
mov
shlb
testb
adc
push
shlb
stc
out
stos
rolb
movntps
pop
pop
test
lret
mov
mov
push
pop
pshufw
jl
add
inc
sbb
push
sub
in
out
add
bnd
popa
sti
cmp
mov
bound
out
rol
adc
sbb
mov
int3
insb
cmp
fs
aas
aas
xchg
sbb
pusha
inc
add
sub
sub
cmp
adcb
dec
inc
mov
and
paddb
je
addr16
add
jmp
popf
add
mov
dec
push
movsb
into
lahf
dec
sub
mov
clc
ret
jmp
jne
push
jne
stos
jo
mov
fiadds
outsl
ret
ljmp
dec
jae
jmp
adc
fnsave
cltd
pushf
js
sub
xor
test
pop
xor
test
and
sbb
fcompl
sbb
repz
fcoms
or
aad
adc
test
sub
dec
sub
adc
mov
fidivrl
mov
push
int3
scas
outsb
bound
outsl
push
test
sub
mov
xchg
dec
adc
jmp
fisubl
add
cmpl
movsl
xchg
lea
stos
hlt
or
es
add
int
add
adc
gs
dec
sahf
dec
fistl
jg
pop
xchg
jne
cmc
roll
or
shrl
ds
pop
shll
out
leave
stos
test
ret
fcomp
inc
push
shlb
xchg
cmp
stos
fwait
jecxz
aam
fs
enter
shrb
stos
bound
bound
dec
cmp
out
movsl
mov
shll
or
lar
sbb
lods
clc
and
inc
or
push
mov
pop
leave
add
mov
pushf
and
mov
add
cmc
add
fwait
mov
xchg
mov
clc
dec
pop
lock
cmp
mov
es
scas
dec
pop
push
sub
test
cmpsl
sub
mov
jl
push
push
test
pop
xchg
cmpl
add
cmp
cmpsl
fdivl
popf
movsb
lcall
cltd
cmp
and
mull
subb
clts
loop
jl
sahf
or
mov
inc
mov
lds
adc
dec
pop
mov
adc
scas
xchg
lahf
fstpl
mov
add
mov
cmp
test
sbb
dec
popf
bound
adc
fcmovb
repnz
pusha
js
daa
inc
insb
fimull
jb
dec
xchg
repz
les
add
cld
sub
cmp
dec
mov
jo
or
test
adc
stos
sti
aad
inc
stos
mov
adc
sbb
pop
sub
jecxz
lock
gs
loope
bound
stc
fmul
pop
ret
jp
nop
push
insl
call
jmp
sub
dec
add
dec
insl
pusha
es
and
pop
hlt
pop
daa
cmc
mov
mov
jp
adc
outsl
inc
mov
pop
in
mov
fistl
jo
shrl
pop
test
sbb
inc
mov
mov
repnz
push
jp
loopne
mov
fwait
stos
rorb
sti
pop
inc
pop
inc
push
out
ret
subb
icebp
mov
or
clc
inc
mov
add
cmp
es
dec
cmpsb
sub
je
les
push
inc
inc
pop
shll
mov
insb
xchg
cmp
dec
popf
fstpt
mov
xor
push
dec
ljmp
jecxz
push
cmp
clc
imul
adc
inc
inc
pop
xchg
mov
mov
mov
mov
lock
iret
test
pop
mov
in
out
jmp
lahf
stc
imul
push
mov
sahf
cmpsl
cwtl
cmc
and
mov
leave
or
inc
mov
dec
jp
mov
push
rcr
cmc
aaa
das
jns
mov
xor
sbb
and
shll
cmpsl
xor
out
dec
adc
or
idivl
in
jmp
adc
daa
inc
inc
cmpsl
sub
adc
lds
clc
lret
out
repz
add
cwtl
es
jno
inc
sbb
inc
lahf
add
sbb
add
push
and
pop
or
mov
jle
xchg
xchg
push
aam
mov
in
lock
xor
icebp
inc
xchg
loope
jge
jmp
idivl
in
sub
jg
sub
mov
fcomps
dec
sub
movsl
scas
gs
int3
out
shl
fwait
jnp
ret
mov
ljmp
pop
outsl
dec
xor
push
or
pusha
inc
lock
ja
mov
push
mov
xor
and
adc
outsl
mov
add
pop
push
stos
std
adc
mov
nop
ds
jp
cmc
pop
scas
loopne
popa
clc
pusha
pop
repz
cli
cmp
mov
push
cmpsl
mov
data16
pavgw
dec
pop
cli
dec
push
mov
sahf
mov
inc
cld
pushf
jbe
pop
mov
mov
push
inc
or
add
gs
inc
pop
mov
mov
push
or
inc
push
test
jnp
shl
fsubp
push
loope
xchg
mov
inc
pop
mov
out
aad
imul
push
std
jne
mov
cli
inc
push
add
arpl
pop
mov
inc
xchg
inc
movsl
dec
jne
stc
aaa
test
sahf
bound
mull
stc
out
das
mov
push
mov
push
cltd
or
int
and
pop
into
lea
loop
xor
mov
lret
and
mov
adc
insb
xor
pushf
dec
and
dec
fwait
add
mov
js
imul
popa
inc
xchg
add
dec
jecxz
shrb
data16
cs
aam
jmp
jg
or
push
jp
xchg
and
hlt
loope
lret
push
dec
inc
popa
icebp
sbb
nop
es
dec
subb
push
xorb
cld
sbb
inc
aas
jmp
mov
mov
lahf
sbb
outsb
sarb
mov
cmp
pop
fcomps
pop
mov
or
xlat
xchg
mov
jno
push
xchg
arpl
pop
pop
xchg
sbb
inc
sarl
shll
cmp
inc
inc
push
lea
aam
popf
nop
adc
das
mov
mov
cmp
push
mov
cmp
aad
mov
std
out
add
shll
push
imul
test
ja
add
adc
mov
aas
pop
or
dec
adc
pop
fbstp
adc
sahf
xchg
mov
jbe
lahf
jb
incl
divl
es
xlat
sbbb
push
xchg
sub
sub
mov
pop
pminsw
imul
add
lock
loope
enter
fwait
or
rorb
lds
or
push
jns
mov
gs
icebp
inc
cmp
dec
clc
xor
lods
fwait
jns
cltd
push
out
bound
das
data16
loope
leave
sarb
clc
mov
sub
adc
subl
xchg
dec
stos
or
out
out
cld
lahf
notb
popa
stos
xorb
jle
test
fisubrl
mov
nop
dec
lret
enter
adc
inc
sub
fistl
or
xor
adc
fisubl
mov
mov
mov
pop
cli
dec
mul
sub
dec
pop
jmp
call
je
jbe
sbb
adc
es
outsb
outsl
pop
dec
std
dec
cltd
mov
int3
and
fildll
je
in
ja
add
sti
dec
xchg
xchg
sub
loop
pop
insl
mov
mov
imul
sub
cmp
jb
in
cmp
dec
jne
stos
mov
mov
sbb
or
push
pop
addl
stc
ret
rorl
icebp
andl
push
push
aam
lds
sub
adc
or
lock
mov
cwtl
clc
mov
push
es
fs
push
fidivrs
loop
imulb
jecxz
cwtl
inc
or
jmp
mov
jo
inc
ja
and
mov
lcall
push
dec
mov
xchg
call
test
add
push
sub
lahf
inc
pop
pop
pop
mov
jne
jmp
arpl
subl
in
xor
pop
cmpsl
push
cmp
addl
rclb
lds
push
insb
xor
jge
inc
xor
cmp
mov
pop
sbb
aaa
jno
cmp
hlt
pop
sbb
push
loope
mov
pushf
fiadds
rorl
std
pop
popa
pop
orb
dec
or
xorl
ja
addr16
mov
nop
mov
add
call
xlat
ja
adcl
fs
add
popa
cld
add
stos
jbe
push
jmp
sbb
mov
jb
daa
push
mov
mov
adc
mov
pop
pop
lret
inc
push
rorb
inc
notl
add
and
filds
mov
call
dec
pop
jns
sbb
loope
push
loopne
adc
insb
xchg
popl
daa
push
mov
xor
mov
gs
clc
orl
nop
mov
into
das
push
lahf
sub
gs
imul
or
es
loopne
sbb
loope
cmpsb
jne
daa
addb
xchg
inc
and
jo
mov
push
imul
in
pop
push
push
mov
adc
ljmp
cli
push
ficompl
push
dec
outsl
shlb
ljmp
pop
dec
test
pop
mov
dec
cld
dec
mov
pop
pop
sub
pop
arpl
test
lahf
push
or
popf
xor
adc
loop
push
sbb
mov
dec
aaa
ret
rclb
loope
mov
jg
shlb
xchg
lahf
jp
outsl
leave
scas
addb
fwait
sbb
rolb
out
add
stos
inc
or
cli
sahf
xor
sbbb
or
ret
and
and
or
mov
and
test
sub
ds
sahf
lds
add
xchg
cld
das
insb
outsl
ja
pop
aam
pop
cmc
pop
xor
cltd
sti
stc
push
fs
jae
jle
movsb
sbb
xor
jnp
sbb
into
clc
mov
cmp
shlb
xor
clc
shl
aas
arpl
lahf
mov
mov
out
xchg
xchg
mov
sbb
sub
adc
xchg
xchg
pop
popf
insl
pusha
xlat
add
mov
repnz
jp
sub
mov
out
sti
sub
pop
and
push
in
call
xor
xor
fisubs
pop
inc
aaa
mov
mov
mov
add
enter
sbb
fisttps
das
insb
pop
clc
add
test
addr16
ret
or
jge
and
dec
js
add
dec
sbb
stos
test
bound
mov
icebp
out
lret
xor
fildll
out
scas
loope
xchg
lret
inc
xchg
test
mov
jae
outsl
sahf
shrb
or
ret
pop
xlat
cmp
call
imul
xchg
sbb
pop
clc
mov
arpl
push
lcall
das
xchg
testl
mov
fnstsw
pushf
sub
jne
add
adc
mov
jge
inc
mov
popa
out
sbb
or
or
nop
pop
or
add
lds
xor
loope
mov
xor
xchg
sub
enter
add
imul
outsl
xchg
xchg
and
mov
js
mov
xchg
cmp
sbb
push
clc
pop
loope
push
pop
pop
enter
stc
inc
bound
xor
cwtl
cmp
jns
je
pop
jnp
ror
divb
jno
xlat
pop
daa
fdivl
xchg
and
dec
lods
dec
dec
shll
popf
inc
roll
jg
hlt
aam
in
rolb
das
and
fstl
and
mov
jb
in
push
cwtl
or
push
add
add
inc
setae
out
mov
jmp
ret
and
clc
cs
push
ficompl
push
in
mov
sub
push
sub
hlt
add
xor
xchg
movsl
movsl
inc
int3
repnz
push
sbb
xor
cmp
xchg
lods
test
xchg
sbb
xor
and
cmp
je
jno
or
stc
and
mov
dec
lret
push
push
jne
pusha
cmp
dec
mov
mov
les
sub
rcll
loopne
enter
or
dec
jg
or
fsubrp
sbb
cs
jg
mov
jns
mov
mov
cltd
testl
and
pop
mov
movsl
aas
das
xchg
jecxz
sbb
sbb
xlat
mov
or
or
int3
sbb
jae
jno
out
je
add
pop
rorb
push
testb
push
fwait
daa
aas
add
jp
out
outsb
test
pop
cmpsb
sub
hlt
cld
xchg
cltd
add
jmp
nop
jmp
mov
lcall
aad
inc
sti
insb
lods
mov
cli
mov
lock
pop
fsubrs
mov
sbb
or
out
not
stc
imul
es
lock
test
jecxz
loope,pn
cmp
pop
or
xchg
adcl
xchg
push
cmp
dec
cmp
xor
and
gs
in
pop
mov
mov
int
sti
push
gs
pusha
lods
xchg
imul
aas
scas
negb
dec
sbb
pop
adcb
cmc
xor
daa
push
enter
sub
repnz
inc
mov
outsb
hlt
inc
enter
sbb
push
dec
stos
int3
std
test
je
hlt
cli
daa
mov
aas
testl
sub
testb
fcom
pop
daa
sbb
dec
aam
testb
sbb
push
in
push
pop
mov
mov
cmp
push
je
in
prefetch
test
sahf
xor
jns
rorl
ret
mov
cmp
mov
push
cmc
xor
sbb
in
sbb
sbb
flds
inc
rolb
iret
scas
sub
aad
sub
jo
mov
sahf
loop
mov
lods
aaa
push
mov
push
jl
mov
std
rol
loope
sub
mov
fsub
cmp
dec
mov
das
push
and
enter
std
lock
push
sbb
imul
nop
inc
fdivl
mov
lods
mov
pop
mov
pusha
or
mov
and
ret
sbb
movsb
aas
lods
sbb
push
xchg
xchg
sbb
add
jl
inc
leave
push
loop
cmpsb
out
stos
push
ds
xor
pop
jns
sbb
ljmp
jg
out
inc
scas
cli
scas
scas
les
mov
fimuls
cmp
dec
sbb
lret
or
sahf
dec
or
cmc
ds
lahf
xchg
and
sub
loope
mov
xchg
shrb
jge
add
push
and
adc
pushf
nop
loop
into
icebp
pop
arpl
pop
push
inc
hlt
mov
cmpsb
add
cmp
fwait
dec
jge
mov
pop
pop
ficoms
nop
inc
or
mov
sub
push
mov
mov
ja
loopne
insl
push
adc
sbb
frstor
adc
daa
cmc
push
out
mov
xor
dec
imul
add
in
sub
sub
pop
sbb
adc
pop
sub
mov
sahf
in
cmpsl
pop
fdivrp
lret
pop
adc
loopne
roll
dec
ret
pop
ljmp
les
jge
xchg
rcrl
lds
ss
std
js
or
movl
and
mov
xchg
pushf
jecxz
ja
push
das
lret
cld
mov
cwtl
mov
loop
aas
adc
jb
test
jge
int3
loop
vmread
test
cmpsl
push
hlt
adc
cs
cwtl
pop
or
cmpsb
mov
idivl
ss
testb
xor
xchg
sub
cmpsl
push
xor
jp
mov
nop
adc
mov
enter
mov
cmc
xor
aam
jg
enter
dec
or
jmp
sub
into
outsl
aas
gs
push
stos
inc
sub
fdivrl
pop
cmp
loopne
fs
jbe
cmpsb
push
jmp
mov
stos
or
outsb
in
cmpsl
aam
sbb
mov
nop
adc
pop
pop
pop
inc
cmpsl
cmpsl
inc
repz
mov
jnp
pop
sub
jne
or
push
movsb
add
push
jne
inc
push
mov
aaa
lret
push
cmp
in
mov
std
stc
decl
fnsave
stos
add
sahf
adc
jbe
cs
jle
addr16
orb
cmp
enter
pop
mov
mov
dec
push
pushf
push
popa
int
add
inc
pop
lahf
mov
xchg
testl
scas
or
sub
inc
subb
les
idiv
mov
sbb
jae
cmp
mov
xchg
cmpb
movsl
loop
dec
xchg
fnstcw
mov
outsl
adc
dec
insl
js
gs
lea
cmpsb
gs
pop
push
jno
adc
mov
and
stos
push
repnz
lods
das
xchg
mov
fstps
cs
imul
cmpl
add
lret
inc
xor
int3
test
sub
stc
fstpl
out
inc
enter
dec
test
dec
lods
or
cmp
add
iret
xchg
jno
fwait
mov
adc
inc
std
lock
lods
inc
sbb
ljmp
rorl
jno
mov
ror
aad
stos
cmp
cltd
xchg
push
mov
aad
dec
mov
fcmovnu
filds
sub
xchg
out
push
aaa
mov
mov
or
pushf
in
jae
inc
fisttpl
out
cld
mov
das
dec
xor
push
mov
iret
pop
mov
mov
mov
mov
cmc
mov
pushf
xchg
push
mov
or
in
mov
sbb
mov
adc
xchg
mov
out
stos
lods
ss
fdivrp
lcall
jecxz
mov
or
movsl
scas
mov
xor
xor
pop
pop
mov
or
leave
and
cmpb
pop
pop
adc
jno
fldl
add
dec
lods
movl
in
mov
stos
fcmovne
cmp
push
jg
fs
addb
mov
xor
sbb
int3
sti
xor
out
add
pop
icebp
pop
cwtl
mov
cltd
dec
jo
push
or
add
or
xchg
jg
enter
in
mov
sarl
and
popa
or
mov
lcall
cld
push
adc
mov
mov
xchg
data16
add
lods
icebp
stos
cmp
or
mov
pusha
or
push
iret
xor
data16
sbb
add
stos
or
enter
inc
inc
arpl
jnp
mov
jle
insl
mov
xchg
mov
or
lcall
adc
ret
aaa
loop
add
ljmp
add
inc
aam
cmp
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
mov
hlt
cmpsb
lock
jg
push
fs
mov
or
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
out
insb
mov
inc
scas
cmp
insb
enter
xchg
xlat
andb
push
int3
leave
clc
mov
mov
push
or
rol
mov
mov
xchg
or
jg
lea
dec
jnp
cmpsb
or
popl
test
scas
push
dec
jae
and
les
rclb
pop
jl
inc
add
sub
xchg
inc
jecxz
mov
jnp
cmpsb
or
adc
scas
inc
rcr
xor
in
aas
mov
mov
push
inc
popf
jl
xor
inc
sub
repz
orb
or
jg
jmp
mull
jg
jmp
cmpsl
jecxz
or
jo
mov
loop
cmpsb
lock
jg
jmp
std
cmpsb
lock
mov
or
outsl
mov
loop
cmpsb
mov
jb
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
mov
fwait
mov
or
jg
jmp
mull
jg
jmp
sti
cmpsb
test
popa
loop
addl
jb
jg
jmp
mull
jae
icebp
fwait
mov
or
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
testl
data16
divl
jnp
jmp
mov
ret
jno
mov
loop
inc
fidivrs
add
jmp
mull
sub
mov
or
jg
jmp
mull
adc
mov
cmpsb
lock
jg
jmp
mull
jg
jmp
mov
lock
mov
loop
cmpsb
lock
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
jg
jmp
mull
aam
loop
stc
mov
and
stos
or
test
xchg
fxch
dec
inc
lcall
push
jle
dec
add
or
xchg
lret
adc
popa
sbb
inc
ret
mov
ds
cmp
adc
mov
adc
dec
int
jne
mov
nop
inc
enter
jns
hlt
lds
test
push
je
test
push
push
dec
adc
lahf
jo
cmp
call
dec
jg
rcl
in
cmc
ljmp
insl
rcr
sbb
inc
mov
fdivrs
mov
popa
pop
add
push
rcll
lds
leave
sub
sub
and
xor
push
mov
data16
int
or
add
sbb
fisubrs
das
jno
cmp
lret
enter
and
arpl
and
orl
cmc
push
mov
xchg
fbld
faddl
inc
adc
push
dec
or
aaa
xchg
cmpsl
or
dec
xlat
mov
movsl
sub
or
jns
xor
xchg
into
shrb
pop
pop
xchg
insl
inc
ss
setle
xor
mov
incl
inc
inc
dec
es
inc
sbb
std
lcall
mov
movups
add
icebp
dec
mov
jl
push
cmp
mov
and
or
or
fmul
jb
imul
xor
imulb
lds
daa
adc
xor
jae
cwtl
repz
cltd
jb
xchg
xlat
cmpsb
and
mov
mov
movsl
jo
ja
fcmovne
shl
and
pop
mov
test
cmc
mov
stos
cli
inc
lods
les
lea
pop
sub
mov
xor
fnstenv
fs
imul
scas
jp
mov
int
stc
mov
les
stc
lods
dec
in
xor
pop
jge
or
xor
ret
push
xor
inc
ret
popa
js
jg
push
jbe
lods
mov
dec
cmp
lahf
mov
jle
cli
xchg
movsl
push
xchg
roll
inc
mov
das
pop
or
dec
sbb
lahf
das
pushf
rolb
hlt
sbb
lds
xlat
in
xchg
pop
xchg
dec
cs
aas
mov
fs
adc
sbb
stc
leave
add
dec
cli
push
jnp
jecxz
or
add
jnp
bound
mov
pop
mov
mov
test
mov
fisubl
mov
xchg
call
inc
push
jmp
sbb
dec
movsb
in
mov
inc
inc
mov
add
dec
ja
call
push
cmp
mov
mov
or
rcrb
adcl
arpl
push
leave
es
adc
int
subb
fwait
hlt
jae
cltd
sub
cli
jl
sti
lcall
icebp
sbb
dec
push
push
pop
aad
bound
call
jp
out
pop
daa
sbb
popa
cli
nop
aaa
ret
test
dec
mov
rorb
imul
pop
jbe
mov
lahf
add
out
and
mov
cld
stos
leave
movq
push
ljmp
pusha
jo
xor
sahf
mov
cmc
inc
push
sub
pop
mov
insl
xor
adc
lahf
sub
aas
lds
stos
mov
sbb
arpl
sbb
jecxz
add
inc
push
shr
dec
push
xchg
xchg
adc
lods
xcrypt-cfb
cmpsl
mov
ja
sbb
stos
mov
loope
mov
fwait
push
mov
pop
jne
jecxz
or
cmpsl
mov
lcall
shrl
cmpsb
sbb
add
xchg
jg
mov
pop
loop
jnp
flds
mov
dec
push
inc
cmc
rorl
cld
push
rcrb
out
or
or
mov
xlat
pop
and
pop
inc
inc
jg
xchg
test
mov
push
outsl
cmp
adc
adc
std
stc
stos
movsb
popf
mov
adc
imul
stos
or
int
sbb
fsts
lods
lea
rolb
das
sub
fdivr
iret
sub
jmp
xor
dec
sahf
cmp
jle
int
or
cmpsl
pop
and
sahf
out
sub
outsb
and
mov
fdivrl
int3
add
ror
add
cmp
call
fisttpll
repz
push
ss
mov
adc
add
and
ja
lcall
lock
insb
ljmp
mov
arpl
lods
std
imul
test
add
iret
ljmp
mov
mov
cmc
daa
pop
dec
repnz
movsb
mov
mov
scas
punpcklbw
je
and
and
loope
jno
scas
or
inc
lock
push
test
dec
rolb
inc
sbb
pushf
pushf
xchg
push
inc
adc
add
dec
mov
push
aas
fs
gs
ljmp
cmp
push
fs
aaa
mov
mov
mov
and
and
clc
shl
cmp
fcoms
mov
inc
sub
sti
sbb
push
or
xor
popa
mov
pushf
repz
dec
and
repz
sbb
notb
sahf
mov
movsb
lock
cmpsl
out
inc
jbe
cmp
jecxz
leave
lahf
push
push
jae
inc
inc
cs
mov
push
adc
adc
fwait
inc
test
iret
cmpsb
out
sbb
dec
pop
idiv
adc
lods
inc
dec
cmp
fdivrp
jecxz
repz
mov
in
rcr
or
and
adc
adc
or
inc
mov
dec
testb
jne
add
je
loope
mov
int3
and
inc
push
mov
pop
outsl
xchg
inc
or
popa
push
inc
push
out
into
push
sbb
cmp
out
pop
test
push
xor
hlt
sbb
std
les
adc
in
das
lret
inc
ds
and
inc
sbb
ret
mov
into
fiadds
push
cmpsb
xlat
adc
iret
hlt
jp
in
clc
fisttpll
fcmovu
or
aam
cltd
adc
cmc
mov
xchg
ret
dec
jl
call
jle
aam
loope
lret
aas
ja
mov
or
outsb
cmp
test
int3
and
mov
dec
test
out
mov
iret
call
cmc
ds
and
mov
mov
cmp
sbb
hlt
xorb
xchg
or
sahf
mov
sahf
jecxz
repz
loopne
pop
mov
cmp
lcall
int3
jb
callw
out
cmp
in
das
add
cmp
test
add
add
andb
lods
adc
lret
dec
mov
mov
push
mov
fwait
lods
or
stos
jnp
mov
xchg
out
xchg
mov
pop
imul
push
loope
fadds
je
cmp
loop
cli
mov
or
cmp
or
gs
pop
repnz
mov
hlt
adc
loope
fs
fistpl
pusha
pop
mov
xor
aad
imul
out
jb
fadds
sbb
pusha
cmpsb
loop
sahf
in
xorb
adc
js
add
rcll
xchg
dec
cmpsb
pop
jns
gs
aas
punpckldq
inc
xor
mov
pop
xchg
xchg
daa
push
cltd
into
sbb
push
lods
push
popa
loope
adc
adc
or
arpl
mov
adcb
xor
inc
imul
jmp
mov
cmp
int3
pusha
shlb
pop
das
jecxz
mov
and
out
lods
movsl
mov
subb
orl
pop
shll
or
cs
lods
push
mov
xor
push
ror
movsl
mov
scas
mov
pop
inc
scas
std
scas
sarb
adc
dec
xchg
and
fistpll
add
and
out
jmp
xchg
inc
test
scas
sbb
push
push
cmp
notb
cmpsb
addr16
push
popf
xor
ret
adcl
iret
out
lahf
mov
inc
push
xor
test
sub
sbbb
das
rcll
cmp
loope
mov
stos
xorb
push
cmovl
mov
fnstsw
inc
and
cwtl
mov
shrl
inc
mov
mov
or
fistpl
fisubrs
xor
jmp
mov
fldenv
xlat
add
pusha
mov
fdivl
mov
sub
xchg
dec
ret
cmp
jg
movsb
inc
xchg
mov
push
mov
dec
xor
into
xchg
mov
mov
lea
jl
idivb
shl
dec
test
mov
cmp
and
cs
test
and
cmpsl
fs
aam
in
int3
push
xchg
xor
mov
adc
jo
inc
add
add
jns
xor
cmp
das
insb
idivb
outsb
test
rorl
lret
xor
jno
pop
fnstenv
jp
xchg
add
js
popf
divl
insl
push
jle
aas
sub
ficomps
bound
sahf
scas
mov
out
jp
cmp
or
out
lcall
dec
test
and
jo
repz
out
jmp
lods
xchg
out
add
pop
adc
dec
pop
pop
sbb
pop
xor
push
fidivrl
imul
pop
cld
sbb
daa
aas
int
push
or
sub
dec
jns
bound
out
push
popf
int3
test
pop
xor
scas
mov
sbb
mov
ss
add
and
jmp
dec
into
movsl
mov
ret
xchg
aad
or
lcall
jmp
jp
les
bound
pop
nop
xchg
outsl
fstpl
in
out
inc
xchg
cltd
push
cmpsl
cwtl
xor
clc
push
inc
jp
pop
mov
aad
ret
or
xchg
adc
push
push
cmp
or
cmc
sub
cmp
popl
outsb
scas
jno
shrl
loope
jo
shrb
pop
mov
test
jne
cltd
ljmp
xchg
jno
and
xchg
loopne
jle
std
cli
cli
xorb
add
cmp
std
cli
jo
clc
sbb
mov
mov
xor
ss
or
jb
add
push
mov
cmp
push
leave
sbb
cltd
xor
fucomp
test
scas
pop
mov
and
mov
push
inc
mov
and
lods
or
adc
das
jle
mov
ds
mov
loop
xchg
push
cmp
enter
adc
lret
xchg
mov
pop
cmp
jb,pt
sub
and
dec
rcll
cltd
jbe
out
xorb
popf
or
inc
loop
daa
fimuls
loopne
pop
xlat
aaa
inc
push
mov
add
mov
loope
pop
pop
jp
test
fdiv
test
test
and
mov
inc
xor
jp
mov
mov
jl
and
outsb
icebp
ljmp
inc
icebp
int3
push
adc
and
test
pop
lds
cmp
lods
outsb
mov
sbb
lds
out
sub
lcall
cmp
jno
jns
fisubrs
and
sbb
xchg
addr16
cs
pusha
mov
and
fucomp
outsb
fcomps
fistpll
loop
cmp
das
and
subl
sbb
loop
pop
dec
fs
rcrl
and
push
es
adc
cmpsb
in
pusha
adc
daa
mov
aas
cli
pop
jecxz
cli
lods
mov
cmp
pop
lock
shl
dec
ret
cmpsb
jb
pop
and
mov
dec
cmpsl
data16
cs
or
xchg
loope
and
add
icebp
adc
lock
xor
mov
out
dec
jecxz
cmp
ror
movsl
sbb
sbb
push
pushf
mov
mov
ret
sub
inc
ljmp
je
jle
gs
cmp
loopne
adc
fbld
sub
push
push
push
scas
mov
jmp
push
pop
cmp
scas
pop
mov
and
jbe
dec
pop
arpl
jo
mov
stos
pop
repnz
sbb
adc
push
in
xchg
or
add
inc
xor
incb
xchg
pop
imul
ss
in
iret
adc
mov
sarl
fsts
cs
stc
mov
adcl
aaa
add
testl
insb
xor
push
lods
mov
jle
fdivrs
add
adc
lods
sub
pop
xor
inc
popf
jle
jl
inc
cmpsb
icebp
lods
scas
nop
xchg
or
cld
xchg
push
sbb
inc
mov
bound
out
xor
pop
mov
push
lods
or
daa
pop
xor
mov
das
cmp
push
xor
mov
stos
lods
mov
pop
sbb
hlt
sbb
sub
push
jle
std
aas
inc
fnstcw
dec
jne
insb
in
sbb
nop
dec
inc
popa
mov
push
xlat
add
sub
fdiv
cs
and
bound
and
ljmp
cmp
stos
fidivl
sbb
insb
ds
ret
test
push
scas
mov
sub
insl
aaa
je
jecxz
adc
adc
daa
fstps
iret
dec
cmp
cmp
aas
das
mov
cmp
xchg
dec
lahf
mov
mov
clc
pop
fidivs
inc
add
inc
insl
int
dec
push
mov
pop
sahf
xchg
sbb
xchg
fneni(8087
repnz
sbbl
call
test
int
add
testl
jmp
inc
inc
mov
sahf
int3
jb
call
pop
mov
mov
push
sarl
pop
mov
hlt
adc
out
mov
xchg
adc
roll
cmp
dec
xchg
add
sarl
jo
shlb
mov
inc
das
or
or
dec
cmp
jl
add
lods
hlt
and
add
xchg
out
aaa
pushf
adcl
push
test
fsubl
pop
ds
fwait
sub
cmp
repnz
xlat
movsl
adc
inc
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
