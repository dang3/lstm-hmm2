sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
push
pop
mov
mov
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
push
push
push
call
mov
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
cmc
push
cmp
add
xchg
jge
mov
aad
sbb
jecxz
mov
insb
out
mov
neg
leave
lea
xor
push
aas
call
cmc
test
cmc
int3
jb
ret
cmp
cltd
cmpsb
sub
gs
cmpsb
pop
jge
ret
jo
ja
shl
lods
and
xor
adc
bound
in
mov
or
int
mov
test
scas
xor
insl
lock
nop
icebp
xor
add
xor
xchg
xchg
sub
inc
pop
add
stos
cmp
sahf
cld
xor
mov
xchg
sbb
movsb
mov
push
test
nop
push
loope
sub
xchg
pop
or
in
mov
stos
pop
mov
lret
aad
imul
ljmp
xorb
dec
xor
cmpsl
or
inc
std
sub
test
in
xor
mov
jl
sbb
xlat
cli
es
add
jo
es
lods
jl
imul
jns
jb
push
mov
mov
pop
and
push
xor
xor
shl
sub
ja
scas
nop
lea
call
sbb
icebp
xchg
add
sar
xchg
popf
adc
jecxz
ljmp
cs
push
sti
out
push
jmp
inc
jecxz
stos
pop
insl
sbb
dec
or
loope
pop
jne
inc
loop
cmc
jae
jge
stc
imul
daa
lcall
jl
dec
loope
repnz
mov
ret
rorb
rorb
out
push
adc
out
mov
test
or
into
push
sbb
sub
xchg
movsb
xor
fnstenv
xchg
jp
pop
xor
rcrl
push
stos
and
and
push
add
fidivrl
imul
adcb
icebp
cwtl
lds
pop
rorb
inc
fbld
ds
lock
roll
in
das
lcall
leave
imul
inc
ja
sbb
aad
sub
ror
das
sti
sbb
outsb
jecxz
push
or
bound
in
enter
jle
cmc
stos
jg
pop
dec
popf
or
scas
sbb
lret
push
jns
jle
movl
pop
and
mov
mov
repz
mov
lods
js
add
push
rcr
out
in
fwait
mov
pusha
mov
pusha
push
mov
fstpt
push
or
rclb
inc
mov
jo
sbb
ds
sub
and
les
aas
jae
sub
sbb
add
mov
mov
in
fnstsw
in
add
lahf
addr16
and
inc
xchg
sub
xchg
leave
imul
out
insb
dec
in
mov
gs
mov
test
sub
push
test
js
xorb
mov
fsubrl
mov
les
mov
push
and
sar
std
sti
adc
cld
cmp
aam
testb
movsb
xor
xchg
movsb
adcb
push
push
sbb
lret
test
push
pop
mov
adc
push
jae
dec
mov
lock
push
inc
lock
xchg
mov
fstps
cmpsl
loop
cmp
adc
add
pop
outsb
movsl
js
add
jb
repz
xor
sbb
adc
js
movsl
mov
in
iret
xor
lret
jp
mov
icebp
mov
fcoms
inc
sub
mov
pusha
mov
jb
mov
cmp
xchg
add
mov
das
sbb
mov
sbb
loop
movsl
subb
js
mov
aaa
or
gs
ret
xchg
pusha
dec
test
ljmp
insl
out
repz
in
xchg
movsb
inc
jno
loopne
stos
jb
mov
idivl
cmp
fcompl
xor
add
mov
pop
scas
inc
and
popa
jb
lret
and
xor
pushf
shrl
mov
repnz
xchg
and
cmp
lock
repz
pop
and
loopne
in
dec
mov
inc
jge
mov
and
jno
popa
xchg
stos
push
out
lods
mov
rorw
xchg
and
cmpl
cld
pop
sub
es
add
inc
jmp
xor
test
cmp
ljmp
pop
out
inc
stos
mov
xchg
add
out
sub
insl
jae
das
jp
mov
pop
andl
dec
rcl
add
dec
adc
daa
mulb
push
outsb
stos
das
pop
outsb
int
pop
movsb
inc
out
iret
movsl
scas
test
ja
insl
xchg
cmp
mov
push
mov
adc
in
fdivr
dec
jae
repnz
sub
int
mov
push
cmp
sbb
mov
dec
lods
xchg
add
pop
lret
cld
xor
xorl
jge
jbe
xchg
mov
dec
pusha
leave
outsb
or
int
add
icebp
mov
rolb
sub
cmpsl
dec
or
pushf
test
mov
add
movsb
pop
imul
std
mov
iret
imul
jmp
mov
sub
mov
repnz
push
or
cmp
loopew
and
cmp
ret
sub
sbb
xor
scas
mov
ss
ds
jnp
jecxz
xchg
push
jge
jmp
pop
sub
daa
out
cltd
push
and
xor
lock
into
outsl
faddl
outsl
inc
rol
sbb
jecxz
imul
mov
adc
pop
and
stos
add
js
mov
sbb
cld
arpl
cmp
ret
adc
stos
jbe
mov
mov
pop
lret
mov
inc
adc
idivl
daa
push
pop
imul
shll
in
and
xlat
sti
xor
and
dec
pop
call
test
jns
push
adc
inc
add
data16
jl
mov
xchg
adc
inc
enter
repz
mov
jp
js
ror
xchg
inc
outsb
mov
fs
push
and
lahf
or
fists
xor
push
pop
inc
shll
mov
xor
adc
push
clc
and
lods
cwtl
mov
cmp
jl
mov
mov
icebp
pop
inc
ja
jns
mov
dec
divb
pop
push
movsb
jb
add
ss
mov
ss
xchg
sahf
test
xchg
sbb
pop
scas
js
xchg
xchg
xchg
popf
and
orl
xor
sub
imul
subb
mov
dec
rorl
adc
mov
shrl
notb
mov
add
xchg
js
mov
in
test
dec
push
mov
cwtl
aad
add
das
repz
or
jne
mov
xchg
or
out
adc
loop
pop
push
jne
cld
mov
pop
xchg
dec
stc
dec
sub
pop
cld
aaa
vmwrite
push
jp
movsl
cmpsb
pop
test
rol
into
out
lea
in
adc
or
daa
add
in
sysret
pop
xor
mov
sub
movsl
sti
push
mov
jecxz
pop
lret
aad
jae
test
jnp
cltd
popa
adc
test
mov
lret
icebp
out
es
mov
push
int3
popa
push
jne
push
xorb
outsl
scas
ljmp
xchg
sbb
daa
xchg
and
frstor
fs
les
stos
out
stos
in
add
jns
fnop
push
test
jl
inc
xchg
ss
push
xlat
jno
movsb
push
cmc
push
dec
mov
jp
sbb
dec
push
je
in
push
loopne
pop
fisubs
int
pop
lret
adc
xchg
add
clc
lea
xor
mov
adc
push
pop
hlt
and
dec
cs
test
jp
xor
scas
push
call
mov
mov
clc
fs
movsb
lock
jb
lret
movsl
out
cld
sbb
popl
cmpsl
loop
sub
call
ljmp
or
aad
into
and
cmp
enter
stos
push
mov
push
fmuls
imulb
xor
cmp
mov
aaa
add
movsb
inc
pushf
adc
sysret
clc
jecxz
adc
cld
dec
adc
jae
loop
shll
lock
push
xor
or
add
lds
sbbb
stos
in
cmpb
stos
int
sbb
sub
dec
or
mov
adc
cmp
push
adc
imul
ss
imul
push
int3
das
push
fwait
sbb
mov
hlt
outsb
sbb
sub
mov
push
and
push
jno
cmpsl
sbb
and
mov
jmp
pop
call
iret
repnz
push
fbstp
mov
push
lock
fs
sbb
fmull
mov
xlat
imul
shlb
inc
push
xchg
jae
cs
or
lods
sub
repnz
out
mov
mov
and
clc
ljmp
cmp
je
or
out
inc
es
pop
shlb
stos
pop
xor
mov
mov
jbe
pop
aad
sbb
cmp
pop
data16
lcall
mov
popf
arpl
cmp
pop
je
ret
outsl
subb
and
mov
or
ja
stc
push
daa
pop
jmp
rorl
and
xchg
pop
shrl
rorl
inc
add
sub
jns
insb
pop
and
jns
inc
loope
sub
fistpll
adc
dec
pop
jne
popf
stos
mov
pushf
add
push
jno
out
sbb
xchg
cmpsb
push
fstpl
xor
xchg
aas
cmp
hlt
xor
mov
add
push
aad
sub
ret
arpl
adc
lds
jp
pop
mov
mov
lcall
mov
test
stos
mov
leave
xchg
fcoms
mov
or
mov
jbe
or
test
imul
insl
cmp
out
xor
mov
inc
out
sbb
movsl
xor
test
inc
dec
dec
xor
inc
mov
sahf
and
sbb
sub
enter
sub
or
add
pop
xchg
adc
cmp
cld
mov
mov
jge
iret
pop
pop
je
pop
mov
jl
cld
out
int
sbb
mov
stos
ficomps
sub
xor
insb
add
pop
scas
pop
pop
ss
movsb
push
gs
scas
pusha
aaa
fwait
and
fincstp
lret
adc
lcall
popf
inc
ds
mov
mov
or
push
hlt
sbb
jns
add
pop
fstps
jb
pop
rcr
loop
loope
mulb
rolb
sbbl
xor
xor
lret
shlb
jb
mov
lods
ljmp
add
adc
mov
sub
fsubrl
cmpsl
push
repnz
xor
xor
mov
sub
xor
stos
xor
sbb
int3
flds
jnp
adc
popa
xchg
pop
call
aam
cmp
pop
ret
mov
out
mov
insb
mov
sub
jae
mov
loope
subb
cmp
pop
aaa
out
fisubs
loopne
mov
leave
repnz
mov
lock
shl
jg
xchg
mov
stos
push
insb
lea
mov
dec
jno
push
xchg
xchg
cwtl
stos
ret
out
int
push
sbb
push
std
mov
or
out
in
mov
mov
icebp
inc
bound
ss
push
ret
iret
adc
sub
adc
and
xchg
pop
in
dec
pop
mov
adcb
cltd
lcall
jne
sub
insl
pop
lahf
out
mov
mov
or
jecxz
cmp
imulb
mul
xchg
pop
adc
and
push
xchg
ds
inc
into
fidivs
pop
cld
jle
cmpsl
lock
pop
test
dec
xchg
roll
adc
xor
add
xorb
ds
jmp
and
sub
out
mov
xchg
mov
int
icebp
fistpll
cmp
lea
iret
jecxz
sub
js
or
daa
cmp
fwait
insl
cmp
jecxz
pushf
mov
ja
inc
aas
adc
sub
or
inc
sbb
sub
sub
je
hlt
push
dec
pop
dec
mov
arpl
mov
stc
cmp
dec
arpl
sub
and
imul
mov
inc
out
fmuls
stos
std
or
mov
xchg
jecxz
out
lret
cltd
fdivs
dec
lods
push
loopne
ja
sahf
lret
xor
push
sbb
lret
js
xchg
popf
jne
std
add
add
stos
adc
jmp
push
push
jo
out
popa
add
xorl
mov
js
insl
push
sbb
ja
sti
jne
out
or
imull
pusha
and
sub
sub
imulb
jecxz
lcall
add
cmpsb
add
arpl
jl
movsl
dec
aas
add
fs
sub
cld
popa
rorl
arpl
mov
inc
lcall
lahf
mov
mov
or
or
jge
xchg
lret
outsb
push
cltd
in
repz
leave
arpl
bound
cmp
add
and
and
icebp
jp
lahf
ficomps
shl
cmp
push
add
pop
subl
mov
jae
jg
mov
dec
mov
or
mov
push
inc
pop
inc
adcb
sbb
repz
pushf
lods
xor
cli
inc
jmp
and
shlb
xor
push
jmp
popa
outsl
xchg
sub
lahf
repz
mov
in
lcall
in
add
mov
pop
inc
xchg
and
cmpsb
jb
xchg
push
jl,pn
addr16
dec
or
jmp
outsb
cs
adc
pop
xchg
scas
pop
mov
icebp
insl
fsts
jno
gs
dec
and
sahf
push
adc
cwtl
pusha
sub
dec
sub
jmp
adc
movsb
mov
jmp
adc
inc
inc
faddl
es
shrl
xlat
js
xor
in
adc
cmp
mov
xorl
mov
mov
mov
rcrl
inc
mov
jb
mov
jb
leave
cltd
mov
xchg
dec
ja
mov
dec
jle
or
pop
mov
push
lret
das
push
sbb
mov
mov
pushf
lahf
xchg
lods
cmc
add
stos
hlt
xor
xchg
inc
mov
jbe
xchg
ds
xor
xor
pop
addr16
js
jbe
leave
push
ret
icebp
aad
cmp
iret
loopne
jmp
popl
cmp
pop
mov
push
sbb
rcrb
and
dec
adc
int3
in
sbb
inc
sahf
fldcw
xchg
inc
frstor
or
fdivrl
clc
or
xchg
aas
pop
fsubl
scas
sub
mov
dec
sub
mov
mov
enter
adc
mov
sbb
mov
mov
ljmp
loop
pop
popa
or
sahf
xchg
repnz
lret
mov
test
adc
and
cmp
cwtl
jl
mov
dec
leave
xchg
in
jmpw
sbb
dec
push
mov
xchg
movsl
pop
ret
incl
jle
mov
sbb
inc
mov
xor
cmpsb
mov
jns
pop
lds
sbb
lds
and
lods
or
dec
mov
nop
sub
add
pushf
in
mov
dec
in
sub
jae
push
mov
out
inc
push
add
fadds
pop
push
mov
dec
fiaddl
pop
cmp
inc
adc
adc
inc
push
test
jl
faddl
data16
fsubl
fldcw
lock
mov
mov
jmp
and
lret
mov
dec
ds
fwait
mulb
ret
es
int
add
xor
pusha
mov
test
outsb
add
addl
xor
in
mov
enter
roll
lret
inc
ret
bound
add
std
addb
adc
mov
daa
es
sbb
mov
jecxz
aad
jge
loope
adc
dec
popf
lods
outsb
fidivl
mov
jne
push
or
sub
pop
adcl
mov
fdivrl
push
sub
jb
jo
call
jo
push
lock
mov
jae
stos
adc
mov
and
or
adc
inc
jo
shll
out
sub
aam
jl
pop
xchg
paddsb
mov
push
test
popf
or
jle
or
add
mov
mov
imul
xor
ss
aaa
mov
cmpsl
stos
pushf
mov
and
fs
or
mov
ja
add
into
adc
lods
mov
xchg
mov
scas
and
notl
cld
nop
pop
out
arpl
cmp
jmp
xlat
mov
xchg
mov
push
xor
je
sbb
ja
ja
inc
je
call
test
mov
std
xchg
inc
ret
dec
mov
cmp
jno
and
ljmp
push
insl
imul
pushf
sbb
outsb
xorb
xchg
sub
shll
dec
xchg
mov
add
repz
xchg
and
jl
in
loopne
test
sub
xchg
popf
push
adc
xchg
jge
mov
inc
sub
add
jns
aaa
jmp
arpl
lcall
inc
lds
sbb
int3
aad
cmp
vandpd
and
ror
xchg
sub
add
mov
das
shll
xchg
jmp
and
jns
jg
fdivr
int
psrad
pop
ret
inc
les
fisubrs
insb
mov
mov
jnp
xchg
enter
lahf
mov
cmpsl
scas
and
jl
mov
loope
mov
and
cmpsb
mov
jns
push
aas
test
pop
pop
jmp
and
ja
scas
and
lret
cmpsb
in
int3
inc
sbb
ret
mov
inc
lret
cs
pusha
roll
and
push
adc
mov
sbb
shr
stc
sahf
inc
mov
addr16
mov
jmp
add
mov
cmp
jbe
rorb
inc
inc
clc
into
bound
fistpll
loopne
fstpl
inc
sub
aam
jno
mov
outsb
nop
mov
out
addr16
xchg
inc
push
lea
cmc
test
in
ss
or
xor
sbb
lret
add
push
in
xchg
in
push
pop
movsb
add
in
xchg
inc
shlb
mov
dec
xor
stos
test
lods
lea
loope
mov
lcall
pushf
daa
fxch
aam
in
mov
subl
jp
enter
sti
lods
in
repz
mov
mov
enter
add
ret
mov
sub
cmp
shrl
sub
mov
iret
fiadds
adc
int3
std
rclb
jnp
data16
bound
xor
cmp
xchg
xchg
bound
inc
aam
fildl
in
pmulhw
jae
je
arpl
push
jg
mov
cwtl
and
xchg
and
cmp
mov
adc
push
add
test
pusha
outsl
mov
test
andl
add
push
mov
gs
int3
cs
sub
sub
dec
lcall
adc
push
push
loop
cmp
or
in
mov
repnz
hlt
push
add
test
or
push
push
mov
outsl
jnp
xchg
mov
in
xchg
push
pop
sub
jle
cltd
nop
in
shl
xor
add
jl
sub
push
scas
or
sbb
jne
ja
and
stos
mov
mov
inc
je
pop
xchg
jl
enter
add
int
mov
cmc
std
in
aad
and
sub
sub
pop
stos
sti
test
and
or
mov
popf
fstpt
lret
sub
aaa
call
or
xor
les
xchg
and
lret
add
loopne
add
inc
inc
shrb
push
aad
or
or
lods
xor
stos
pushf
xor
inc
mov
or
sub
or
dec
in
push
in
testb
pushl
cmpsl
pop
mov
jno
roll
jbe
and
mov
into
fidivl
insb
imul
fs
sub
sbb
clc
into
aam
mov
data16
jg
and
les
mov
loop
jnp
mov
mov
out
ljmp
xor
test
lcall
bound
inc
pop
mov
test
pop
jp
add
mov
aam
lret
sbb
lods
push
cmpsb
out
pusha
sub
cmp
cmp
xchg
dec
mov
shll
cld
mov
pushf
outsl
mov
lret
cmp
into
inc
push
jno
rcrl
xchg
testl
popf
add
push
in
cltd
ss
inc
mov
shlb
movsl
mov
cmp
and
sarl
xchg
or
scas
insl
in
add
cmpsl
imul
push
test
nop
imul
dec
cmp
dec
push
or
int
gs
test
sbb
ficomps
cmp
xchg
cmp
dec
and
cmp
aam
insl
in
dec
adc
test
mov
fistl
in
xor
mov
negb
sbb
mov
std
fcomp
xor
pop
mov
mov
orl
lods
jge
movsl
aaa
pop
ljmp
nop
sbb
dec
cltd
or
pop
sbbb
fidivs
lock
js
mov
pop
fst
add
jg
sub
cmp
cmp
sbb
jle
adc
enter
jl
lods
add
pop
inc
jg
and
push
roll
daa
lods
das
xor
or
adcl
pop
dec
jp
into
cs
popf
xchg
sub
pushf
add
into
push
lahf
stc
or
cltd
adc
jb
sub
movsb
loope
cmpsl
loopne
subl
fs
and
int
fadd
cwtl
fs
mull
xchg
mov
cmpsb
ss
jnp
fs
arpl
sbb
push
dec
xor
xchg
lcall
addr16
lret
inc
insl
inc
push
call
jp
leave
cmp
int3
daa
jo
testb
pop
xchg
enter
jns
lods
dec
jmp
test
sbb
adc
orl
jnp
lods
pop
and
sbb
add
aas
sbbl
dec
add
out
shll
enter
cld
jp
js
sub
loop
in
pop
jb
leave
or
fsubp
cmp
out
lea
mov
and
ljmp
cmp
dec
inc
push
jno
out
dec
cld
xchg
adc
outsl
push
pop
push
jl
jp
jecxz
out
fldcw
jbe
xchg
ljmp
aas
push
sbb
cmp
outsl
stc
cmp
insb
mov
enter
dec
ljmp
cmpl
xchg
ror
lret
jo
push
ror
roll
cmp
fdiv
mov
lcall
movsb
cmp
ljmp
lods
dec
ror
inc
mov
in
mov
movsb
rcl
inc
repnz
xlat
xchg
clc
mov
repnz
int
mov
and
ljmp
jns
pop
push
sysexit
stc
mov
lea
mov
ficoml
aaa
push
leave
xchg
xor
lods
adc
dec
pop
inc
and
lcall
add
mov
in
call
pusha
push
adc
jecxz
nop
cmpsl
out
dec
repnz
das
aas
jg
fs
lret
imul
adc
dec
fwait
mov
mov
push
dec
xchg
and
mov
xor
cwtl
cmpsl
push
push
imul
ljmp
notl
dec
rep
stc
inc
mov
pushf
jno
xor
pop
mov
pop
adc
cmp
mov
and
lahf
sbb
push
mov
ljmp
repnz
xor
leave
sbb
xchg
enter
pop
pushf
addr16
call
cltd
add
jns
divb
mov
jg
repz
mov
add
repz
pop
imul
insb
xor
fs
insl
pop
ljmp
sbb
pop
add
mov
cmp
mov
lds
les
fwait
stos
xor
pushf
and
fs
shr
je
and
int
mov
and
mov
mov
cld
jne
das
out
adcl
test
pushf
inc
adc
push
pop
push
test
jge
clc
mov
push
xor
leave
movsb
sub
es
inc
shlb
scas
cmp
fcomi
movsl
push
sbb
or
mov
jp
xchg
cmp
adc
lock
push
mov
xchg
pop
xchg
xchg
sbb
les
cs
mov
xor
int3
jnp
fucom
iret
push
test
adc
outsl
int3
ret
mov
out
jp
xor
in
movl
fcomp
repz
je
ds
mov
cmpsb
rsqrtps
cmp
mov
test
xchg
sub
or
inc
stc
pushl
cmpsl
outsl
lret
mov
fs
add
sbb
sub
daa
mov
mov
ret
pop
divb
inc
in
mov
fmul
out
mov
jo
js
out
jns
sbb
xor
sbb
test
pop
push
push
lret
sahf
jbe
xor
mov
cmc
sub
gs
bound
and
and
mov
mov
jg
pop
scas
push
mov
dec
inc
ret
push
mov
mov
mov
push
movsl
loope
in
pop
adc
add
aam
scas
pop
insl
addl
into
or
repz
shll
lods
test
adc
xchg
xor
cmp
mov
sarb
inc
mov
ja
dec
cmp
data16
sub
push
shll
iret
inc
mov
into
fmuls
xor
xchg
jno,pn
fdivl
push
sti
bound
out
xchg
or
and
xchg
mov
push
imul
fs
xchg
andps
cmp
mov
adc
orb
out
or
cmpsb
or
inc
in
dec
xchg
cmp
push
into
test
or
pop
ja
push
outsl
ret
sti
pop
xlat
xor
mov
jns
loopne
loopne
cmp
outsb
push
pop
or
rolb
daa
and
add
xchg
or
mov
icebp
roll
pushf
dec
xchg
incb
jge
jp
arpl
mov
mov
shlb
sub
pop
ret
int
shl
pop
adc
inc
xor
xor
sub
push
mov
xlat
bound
push
fnstcw
pop
shrl
fsts
jecxz
mov
sbb
int3
lds
pop
or
daa
mov
imul
dec
or
dec
movsl
lcall
or
sahf
sbb
push
fdivrl
or
sbb
push
push
push
arpl
ss
addr16
ret
pop
ret
xor
or
jge
js
mov
jmp
push
or
shlb
xchg
xor
rcr
aad
fsubl
int3
fstl
fs
out
push
xchg
xor
movsb
fstpt
jg
cmp
fsubl
repnz
popa
movsb
aam
push
xlat
sbb
pop
fstl
out
push
das
cmp
adc
and
sbb
add
adc
xlat
gs
aas
and
in
mov
divb
int3
dec
xor
adc
cmp
hlt
xchg
mov
stos
mov
xor
lock
xor
cmpsb
mov
sub
out
or
dec
push
mov
mov
dec
cs
inc
bswap
and
jp
jmp
repnz
mov
sbb
mov
mov
test
lds
std
in
fidivs
mov
je
pop
jae
push
mov
insl
xchg
mov
dec
test
dec
adc
loopne
add
aaa
dec
mov
nop
mov
add
test
lretw
loop
add
add
repz
mov
sub
jl
inc
mov
inc
and
xchg
aas
sub
cmc
lret
out
and
xor
and
fldenv
es
add
aaa
out
cltd
notl
cmpsl
add
leave
sub
int
sbb
rol
rcll
imul
push
jle
pop
icebp
stc
outsl
ret
inc
mov
push
js
mov
pop
insb
in
xchg
lret
inc
icebp
test
sbb
rorb
cs
sbb
push
push
add
negl
int3
mov
mov
les
cltd
aaa
int3
cmp
mov
lods
dec
cwtl
xor
rcl
push
mov
nop
pop
add
in
push
inc
imulb
mov
andl
push
imul
xorb
out
and
sahf
into
test
pop
out
and
cmp
pop
sarl
dec
sbb
dec
arpl
neg
xchg
xchg
xchg
mov
shl
push
pop
sub
frstor
fsubl
repz
push
mov
push
xlat
mov
dec
sbb
pop
rcrl
add
dec
aaa
addr16
in
xor
std
movsl
outsl
scas
adc
loopne
jl
mov
gs
test
enter
push
or
mov
sti
sbb
popf
cmp
shr
inc
or
lds
xor
or
or
aaa
into
fiadds
divb
fsubl
aad
mov
movsb
orb
adc
push
and
insb
pop
rclb
inc
sbb
xchg
dec
mov
jl
adcl
xchg
scas
adc
lods
push
movl
test
pop
data16
mov
jae
dec
dec
dec
ljmp
pop
jae
bound
out
pop
push
in
mov
cs
cmp
mov
dec
xchg
cli
xor
arpl
repz
mov
mov
push
push
push
mov
or
outsl
mov
imul
stos
xchg
xor
loop
sarb
push
daa
mov
xor
and
das
add
mov
nop
int3
or
popf
lock
pushf
stos
dec
js
daa
adc
clc
notb
jmp
imul
aad
push
cmp
ja
addr16
cmp
fldt
mov
faddp
push
and
cmc
sbb
vorps
cltd
mov
cmp
repz
or
jp
nop
jne
push
pop
xchg
stc
rclb
push
adcl
arpl
lock
or
aad
pop
dec
out
sti
cwtl
jns
rol
pop
and
outsl
in
sub
inc
sub
sti
pop
out
xor
xor
add
in
adcb
or
xchg
sub
mov
or
popf
fs
cmp
and
pause
scas
add
pop
aaa
leave
nop
cwtl
data16
mov
jo
pop
enter
je
add
cmp
xchg
and
ficomps
and
jne
sarl
lcall
mov
pushl
movsb
xchg
les
sub
sbb
repz
out
cmpl
xor
cmp
fiadds
inc
or
xchg
lea
sbb
dec
push
daa
inc
and
cmp
aas
mov
mov
jne
add
mov
inc
jp
jns
xor
in
sarl
aas
movsl
subl
es
cmp
add
scas
mov
dec
ss
mov
jg
mov
inc
mov
leave
ret
mov
into
push
pop
cmp
dec
movsb
testl
mov
shlb
or
xchg
sbb
jle
adcl
and
pop
mov
push
sub
xchg
push
mov
fs
inc
or
in
push
dec
or
lcall
push
in
je
pop
into
mov
push
mov
js
xchg
jmp
mov
cltd
in
ljmp
mov
inc
jg
jno
gs
repnz
push
pushf
les
inc
and
in
ror
add
push
inc
imul
repz
cltd
stos
adc
fldcw
or
out
xor
cmp
dec
js
mov
lea
sbb
rcr
push
adc
fildl
call
pop
insb
cmpsl
push
call
xlat
mov
nop
je
lret
adcl
imulb
push
pop
andb
mov
inc
cmp
sub
popl
js
xchg
fs
xchg
or
fisubrs
pop
cld
scas
jge
sti
cmp
pusha
bound
push
aad
enter
bound
jg
jmp
inc
mov
aam
xor
in
loope
fildl
dec
fbld
mov
and
sbb
das
ds
cmc
aam
and
mov
call
adc
aaa
aad
aad
pop
das
scas
mov
xchg
push
jbe
jae
adc
in
lcall
mov
pop
inc
sub
inc
cmovp
icebp
loope
fucomip
cmp
popa
xor
dec
and
and
sbb
je
inc
mov
clc
mov
xor
insb
jne
jne
mov
jmp
jae
inc
addr16
push
ret
jb
inc
pop
jns
dec
lret
jmp
mov
loope
mov
incb
or
xchg
pusha
xchg
mov
and
ljmp
aad
out
push
xlat
mov
pop
xchg
lods
cs
dec
add
addb
push
mov
or
rcll
dec
and
shlb
and
inc
int
or
sbb
outsw
fidivrs
fldcw
inc
pop
aaa
andb
jp
movsl
pop
sahf
push
test
popf
or
fwait
test
lret
xor
mov
jecxz
cmp
adc
push
inc
add
push
mov
jb
cmc
mov
aas
inc
in
int3
cmpsb
inc
stos
pop
push
pop
in
mov
xor
xor
adc
xor
add
fbld
mov
fwait
out
cmpb
mulb
inc
scas
and
sub
mov
mov
pop
ror
jp
pushf
repz
inc
dec
in
sub
maxps
and
mov
pop
inc
pop
fldenv
or
pop
imul
sub
por
pop
inc
outsl
cmpsl
cmp
add
push
push
cmpsb
inc
insl
inc
test
push
dec
sub
or
xlat
shr
leave
ds
sahf
cmp
addr16
push
and
outsb
dec
jg
and
shl
daa
fsubrl
jg
inc
and
cmp
mov
and
popa
add
push
es
xchg
inc
hlt
sub
jne
scas
hlt
jl
aaa
cwtl
ss
dec
xchg
sarb
sub
xchg
lods
idivl
jns
mov
icebp
dec
cmc
mov
loop
cli
jo
sub
sbb
mov
pop
sub
xor
aam
enter
add
push
ss
mov
dec
dec
mov
loope
daa
xchg
push
ret
sub
daa
inc
sbb
xchg
pop
xchg
shr
popa
std
fwait
insb
popa
jg
push
cmp
fisttpl
jo
push
jbe
lcall
ljmp
pop
sbb
fidivrs
mov
and
lds
sbb
push
cld
inc
adc
std
scas
ja
andb
adcl
ror
pusha
je
mov
rcl
adc
xchg
lret
int
and
pop
mov
pop
rolb
ret
adc
es
aam
sbb
int3
into
add
ret
pop
mov
mov
cmp
test
sbb
mov
addr16
xchg
cmp
lcall
std
inc
and
ss
or
jge
sub
push
lret
xor
or
out
popa
idivb
sub
sbb
pop
adc
dec
pop
mov
push
jecxz
int
in
mov
in
mov
adc
mulb
mov
inc
sbb
cmp
xor
orb
dec
cmp
mov
iret
rorl
push
jns
pop
mov
ljmp
loope
xor
roll
mov
enter
inc
mov
cmpsb
and
dec
js
jbe
cmp
lods
xchg
insb
cmp
xor
mov
add
inc
icebp
add
adc
sbb
and
iret
mov
push
mov
dec
xchg
rcr
cli
cmp
push
mov
jae
in
cmp
aam
hlt
xor
movsb
xor
xchg
pop
add
pop
inc
rolb
mov
leave
xor
or
stc
push
imul
and
xchg
push
pushl
sub
pop
dec
add
xor
pop
or
xor
stos
aam
cs
out
testb
out
adc
imulb
arpl
sub
mov
inc
stos
hlt
addr16
sub
in
adc
popf
sub
mov
in
cmpsl
daa
rorl
dec
jo
fidivs
inc
sbb
mov
clc
int3
xorb
adc
mov
mov
mov
lret
jmp
negb
rcll
sahf
popa
jp
jne
push
jnp
pop
xchg
pop
dec
sbb
sbb
mov
std
adc
mov
pop
or
mov
insb
xchg
xchg
hlt
adc
xor
mov
push
pop
and
mov
mov
inc
cs
xor
scas
popa
hlt
test
inc
cld
mov
xchg
sahf
imul
mov
daa
xor
jg
aad
jle
rorl
loopne
inc
loopne
push
mov
outsl
inc
mov
push
adc
cmp
add
push
xchg
mov
outsb
insb
icebp
js
or
orb
leave
mov
xor
sub
repz
popa
testb
push
call
sub
mov
cld
lret
repnz
ret
inc
inc
adc
div
mov
xchg
outsb
xor
outsl
sarb
pop
inc
or
repnz
les
pop
in
test
out
imul
push
in
or
bound
dec
mov
out
call
xchg
inc
js
pushf
js
inc
enter
js
dec
clc
notl
jge
imul
pop
negb
pop
test
movsl
test
sbb
pushf
rclb
outsl
cmpsb
cmpl
mov
xchg
xchg
and
push
push
sbb
fcoms
enter
pop
mov
sbb
mulb
out
test
pop
stos
shll
out
sub
push
dec
shll
int3
enter
out
loop
dec
jb
pop
push
cmp
xor
inc
daa
mov
je
adc
sbb
jle
es
mov
inc
push
enter
std
dec
repz
js
inc
xchg
adc
aaa
push
mov
jb
loope
cmpsl
dec
jb
jmp
arpl
loopne
add
in
sub
dec
arpl
loope
repnz
and
fcoms
mov
or
in
xor
add
or
pop
mov
xor
pop
xor
jnp
addr16
push
mov
popf
pop
ret
add
repnz
test
inc
mov
cmp
cmpl
dec
out
dec
aad
push
cltd
pushl
pop
loop
stos
mov
mov
sbb
sbb
jmp
fcmovnu
push
sub
ret
xor
in
adc
inc
stos
insb
sub
jle
jp
jns
dec
lret
sti
bound
into
mov
fcoml
and
subl
mov
sbb
cmpsl
scas
xlat
ret
jb
inc
out
les
pop
icebp
jp
dec
bound
inc
into
das
push
push
aas
jl
in
popf
cmc
push
es
cltd
rolb
icebp
stc
xchg
pop
mov
adc
in
dec
dec
or
shrb
jmp
dec
js
jg
jb
mulb
pushf
repnz
testl
lock
mov
and
lods
jle
dec
push
ret
outsb
xchg
cmp
xchg
push
xlat
test
push
cmp
rorb
push
push
pop
fcmovnb
fcomps
adc
rcll
adc
ljmp
dec
mulb
aas
inc
mov
and
and
ret
jne
jbe
std
cwtl
push
pop
sub
push
mov
ljmp
mov
mov
popfw
enter
xchg
mov
fwait
mov
sar
aaa
inc
xchg
xorb
mov
add
jmp
out
ficoml
add
aas
fiadds
popf
inc
and
sbb
cltd
xor
fnstenv
mov
jbe
rorb
inc
sub
mov
and
insl
jg
arpl
sub
popf
negb
psubd
rorb
mov
sub
repnz
dec
push
lock
lret
cmp
push
pop
in
sbb
adcb
push
sub
ljmp
lcall
lret
pop
data16
decl
inc
das
fwait
adc
lds
mov
adcb
loope
shll
push
loopne
dec
sbb
sub
lds
out
shll
sarb
xor
dec
movsb
cli
sub
mov
xor
xchg
shll
lret
sbb
ret
dec
adc
pop
notl
ret
or
xchg
add
cld
aad
int3
ds
mov
ds
fists
int3
lahf
rorb
lods
ja
scas
adc
popa
insb
fwait
sub
ljmp
xor
jae
jl
test
adc
imul
es
add
jno
mov
xor
div
ss
sahf
in
dec
xor
imul
int3
cmp
push
je
imul
out
lea
jbe
rolb
cmp
rcrl
mov
insl
pop
jp
aaa
icebp
dec
sub
jnp
xchg
push
divl
jge
pop
jg
hlt
cwtl
or
lahf
sub
add
fimull
xchg
add
push
adc
fcomps
mov
dec
pop
enter
cmp
sahf
xchg
mov
xor
cmp
sub
test
jo
and
and
sbb
push
repnz
mov
fdivl
imul
jecxz
add
sbb
fbstp
movsl
mov
aam
and
push
mov
inc
stc
andb
add
xor
adc
mov
mov
mov
fs
cmp
mov
xchg
shrb
pusha
push
scas
loope
dec
add
sub
cld
or
mov
rcrl
leave
call
rol
hlt
lock
sub
leave
and
or
or
adc
or
adc
or
pop
adc
mov
xor
icebp
add
dec
loope
push
lea
mov
cli
fisubrs
jb
mov
sbb
ss
inc
push
mov
fsubs
loope
lock
add
dec
xor
dec
incb
nop
popf
hlt
lods
dec
add
or
test
sub
cmp
imul
cmc
jmp
gs
dec
int3
in
mov
mov
sub
fidivrl
pop
pop
mov
mov
mov
dec
push
rorl
stos
popa
pop
jge
jg,pn
sub
pop
jle
inc
adc
out
imul
and
mov
and
adc
mov
xlat
rorl
in
rcll
ficoms
andl
scas
mov
les
roll
pop
jp
iret
pop
aaa
adc
add
fwait
out
mov
adc
imul
pop
fs
leave
addr16
daa
adc
ficoms
adc
jp
ss
int
or
insl
loopne
andb
xchg
stc
test
jmp
cmpsb
pop
in
das
lods
cmc
dec
cli
adc
outsb
adc
cmp
lock
nop
push
pop
das
andb
or
dec
push
cmpsl
fldl
das
js
push
lods
dec
scas
int3
adc
pop
into
adc
xor
inc
mov
jne
rorb
popf
les
push
pop
add
mov
vpmovzxdq
jnp
movsb
xor
int
xor
xor
aad
stc
lcall
daa
in
push
fdivs
sbb
jle
xchg
test
test
cmpsl
cmpsb
loopne
es
xchg
fsubr
push
aad
testl
xor
arpl
les
mov
sub
clc
pop
sbb
clc
scas
mov
or
out
enter
sahf
push
fstl
stos
mov
mov
xor
jne
insb
push
inc
or
clc
rolb
fs
test
sub
push
push
lods
ret
sahf
xor
outsl
jno
jno
lea
mov
shl
int3
jecxz
scas
mov
sub
cmpsl
mov
hlt
jle
cltd
xor
adc
add
jp
sahf
std
xchg
jle
aaa
aas
fstl
fisubrl
js
cmp
rolb
add
adc
push
data16
jp
mov
push
or
es
sbb
fs
mov
cmc
xchg
push
dec
jmp
repnz
and
inc
mov
pop
sbb
sahf
test
stos
jae
out
insb
or
lea
inc
push
mov
pop
mov
pop
cli
mov
xchg
loope
cld
mov
jo
xchg
add
jo
fucomi
in
pop
or
repz
jmp
out
jl
inc
mov
lds
aad
stos
mov
lahf
out
jmp
stc
pop
dec
mov
pop
mov
adc
hlt
lret
mov
jbe
and
push
divl
mov
pop
fcomps
cmp
inc
int3
sti
adc
adc
insl
aad
and
or
in
je
push
sbb
insb
js
roll
cmp
jle
and
icebp
xchg
dec
pop
cmp
xchg
sub
or
fwait
dec
push
or
jmp
push
mov
into
lcall
cmp
push
jnp
push
jb
cwtl
push
and
lock
in
ds
les
lret
stos
inc
das
repz
testl
fcmovnb
mov
ror
mov
xchg
out
leave
hlt
inc
sub
cmpsl
fcoms
mov
mov
cwtl
xchg
add
lea
lcall
aad
cmp
jle
fildll
addr16
add
cmpsb
jae
add
push
cmc
lret
jne
movl
jb
fsubp
arpl
xchg
mov
adc
pusha
mov
loopne
xor
rorb
mov
add
add
insl
in
data16
mov
pop
sarb
scas
clc
add
cmp
mov
cmp
addr16
add
fucom
dec
adc
push
sbb
in
or
dec
jmp
mov
jle
mov
loopne
inc
sarb
jno
ljmp
or
pushf
and
mov
xlat
loope
cmpsl
cmp
push
pop
repz
xor
mov
icebp
shlb
in
sbb
jae
pop
inc
ficomps
cs
push
fs
fistpll
adc
ds
cmpsl
dec
cmp
push
lock
fnstenv
out
xchg
sub
stc
mov
fs
sbb
lock
pop
cmp
sbb
sub
push
adc
mov
xchg
xchg
aaa
std
inc
cmpsl
test
add
mov
push
inc
xchg
in
aam
xchg
popa
enter
outsb
mov
or
jno
add
jb
repz
mov
test
icebp
pop
icebp
sub
outsb
cmp
fistpl
mov
or
push
fisttps
mov
xchg
add
or
scas
push
push
ds
iret
lods
out
aaa
ror
xchg
lea
adc
inc
pop
mov
lods
jecxz
dec
inc
fdivl
sti
aaa
bound
sub
sub
xlat
sub
movsb
fsubp
push
mov
into
cmp
pop
mov
mov
icebp
in
mov
and
pop
repnz
popa
cmp
cmovae
jb
push
jnp
addr16
mov
xor
cmp
push
cltd
jp
out
in
sub
scas
outsb
je
push
adc
test
mov
lahf
jecxz
pop
aam
out
js
mov
mov
test
jb
test
adc
sti
xor
andb
cmp
xor
cld
dec
push
dec
push
mov
outsl
xor
dec
sbb
adc
dec
test
push
push
adc
mov
adc
call
daa
es
stos
addr16
mov
mov
out
fldt
inc
subl
mov
cmp
ror
mov
stos
xor
adc
test
aad
lahf
cmc
ljmp
adc
lret
push
enter
add
fidivrs
jo
cltd
mov
orl
mov
fnstcw
push
mov
dec
inc
subl
sti
ret
and
gs
jns
les
sbb
lret
in
out
xchg
pop
ss
pop
notb
mov
sti
sti
add
int3
mov
imul
cmp
xchg
pop
repz
das
sbb
mov
daa
add
fs
lret
pusha
inc
outsb
ds
push
hlt
jp
test
xchg
lods
andb
iret
xchg
clc
out
sub
and
pusha
add
icebp
mov
mov
sbb
mov
outsb
push
sbb
cld
and
cmp
xlat
push
mov
lock
aam
lret
jle
jl
lahf
push
jl
int3
cmp
cmp
clc
and
aad
dec
insb
dec
paddusw
repnz
imul
inc
or
inc
leave
add
lret
iret
jmp
inc
call
mov
adc
xlat
mov
scas
pop
sbb
clc
mov
loope
xor
rorl
nop
test
shl
cltd
push
outsb
push
sbb
lock
xor
mov
in
pusha
inc
nop
inc
je
inc
pop
push
lods
adc
lcall
adc
pusha
in
fsubs
mov
sti
pop
mov
pop
inc
and
pop
les
jmp
lods
andb
push
rcr
sbb
rcl
sub
lcall
or
xor
es
or
adc
xorb
nop
pusha
neg
cmpsl
dec
fwait
pop
dec
mov
mov
gs
xchg
or
pop
or
cld
adc
ljmp
xchg
cmp
lahf
out
mov
mov
ja
and
sbb
ljmp
mov
lods
in
repnz
rol
fmuls
shrb
pop
js
pop
inc
adc
or
pop
dec
inc
dec
ds
sbb
pop
xchg
lock
jnp
cmp
mov
jns
pop
test
repnz
lock
sub
aam
sub
jp
andl
pop
cltd
repnz
mov
xchg
aam
xchg
stos
sarl
add
aaa
dec
dec
and
xchg
imul
add
sub
lock
sbb
inc
bound
test
push
adc
pusha
scas
mov
std
addr16
xchg
dec
les
out
xorl
cmp
ret
addr16
or
loop
and
sbb
add
lds
cmpsb
adc
fwait
pop
pushf
pop
cmovo
and
cltd
cs
xor
add
sbb
sub
mov
ja
sti
xchg
dec
mov
fs
mov
fcomps
lods
xor
shll
loop
jecxz
arpl
lahf
pop
mov
or
jb
loope
lds
popf
xor
pop
out
scas
mov
adc
lcall
jg
add
idiv
pop
aaa
das
mov
add
pop
xchg
push
mov
and
xchg
mov
dec
sub
and
adc
arpl
mov
xchg
ret
js
arpl
lds
jmp
leave
into
nop
out
push
push
cmc
pusha
and
xchg
add
mov
loop
mov
fiaddl
sub
push
inc
inc
push
mov
movsb
cmp
mov
jnp
cmp
imul
ja
jne
jb
xchg
inc
adc
movb
mov
decl
int
cmp
sbb
and
cmc
mov
mov
and
and
pusha
mov
mov
lock
push
or
fucomip
sub
imul
call
inc
pop
popl
sub
bound
or
xor
in
add
or
call
sub
aam
pop
sub
mov
pop
rcll
mov
rcll
addr16
or
iret
scas
andl
rcl
rcrl
in
mov
sub
stc
nop
or
jmp
iret
or
pop
rcll
outsl
inc
cmp
rsqrtps
mov
fcmovnb
mov
dec
adc
cld
and
loopne
add
xchg
pop
and
stos
in
repz
or
imul
fs
fdivs
icebp
add
dec
shrb
pop
fwait
xor
lock
call
sub
das
dec
push
fcoml
mov
sub
stc
adc
mov
std
push
sbb
jb
add
jle
sarb
jne
in
lcall
jne
and
mov
popa
insb
iret
push
xor
push
jg
decl
outsb
xchg
stos
scas
popf
loope
call
push
movl
xchg
dec
mov
jg
pushf
xchg
mov
mov
pop
sarl
add
mov
fsubrs
lock
jbe
sbb
inc
pushl
daa
lds
adc
cmp
pop
aaa
mov
loopne
adcb
adc
pop
lods
push
push
cmp
jb
or
xchg
loope
jae
leave
rcll
aaa
incb
test
aam
jae
or
push
xorl
jp
push
xor
mov
fwait
jnp
mov
jno
fdivr
jg
pop
sub
idivb
dec
sarl
and
mov
mov
roll
in
pop
pop
dec
or
or
jg
dec
rcr
sbb
pop
mov
dec
sub
scas
pop
scas
dec
xchg
rorl
pop
in
cltd
mov
arpl
sub
mov
cmc
into
int3
imul
insb
dec
dec
fwait
call
jecxz
stc
stos
jne
xchg
out
mov
sti
mov
nop
and
push
and
in
pop
das
mov
movsw
pop
pop
and
xchg
in
rorl
cmpb
cmc
lods
add
pusha
aaa
fs
out
or
cmp
div
or
scas
inc
adc
jg
push
shlb
les
syscall
dec
mov
and
les
mov
test
ret
and
xchg
jle
mov
aaa
add
jns
int
in
or
ror
inc
out
dec
mov
aam
pop
mov
test
repnz
das
and
roll
out
sbb
xchg
addr16
add
cltd
adc
cmc
and
adcb
mov
mov
iret
aam
cld
fdivrs
js
gs
or
sub
cmc
js
test
sti
in
in
insl
rorl
or
xchg
les
push
push
push
jle
dec
int3
push
mov
jecxz
rorb
add
jg
mov
push
sahf
jmp
pusha
inc
cmpl
sub
cmc
test
push
and
int
gs
in
cmp
or
in
cltd
fbld
inc
out
push
sbbb
pop
ret
cmpb
xor
jmp
mov
outsl
xchg
mov
sahf
fdivrl
cmpsb
movsl
movsl
andl
dec
or
and
jae
push
inc
add
xor
jecxz
pop
pop
add
adc
adc
sahf
or
push
xor
aas
push
hlt
in
test
cmc
inc
jne
insl
dec
sub
mov
xor
adc
adc
orb
mov
pop
bound
add
ret
cmpsl
mov
adc
ja
jg
or
mov
mov
insl
ud2
pop
cld
mov
lods
cmpsb
aaa
enter
push
and
repnz
pop
pop
mov
inc
dec
jmp
mov
pop
push
and
in
pop
rcr
faddl
jp
adc
lds
stos
cli
cwtl
xchg
mov
ror
sbb
cwtl
add
mov
push
repnz
insb
rcl
pop
fldenv
sbb
xchg
push
scas
lea
push
mov
jecxz
fs
push
xchg
jmp
cmpsl
push
mov
cmp
clc
pop
and
xlat
mov
lods
and
and
jno
xchg
into
sbb
lret
ss
jecxz
dec
xor
and
mov
lods
pop
test
push
jne
sarl
loop
mov
pop
int
shlb
in
mov
mov
addr16
mov
gs
lahf
sti
xchg
and
add
xchg
fs
cmp
jo
cltd
enter
cmp
fimuls
aad
mov
rorl
dec
stc
mov
rcll
subb
and
les
fdivl
cmp
xlat
rcll
das
inc
jle
push
jle
ret
mov
inc
pushf
movsb
iret
outsl
andb
jnp
iret
in
jp
inc
inc
jo
rclb
mov
mov
and
les
and
sbb
mov
jecxz
or
jge
add
jmp
dec
push
fisubl
and
sbb
add
test
adc
out
cmp
pusha
daa
pop
xchg
sub
adc
adc
iret
out
cs
inc
jecxz
pop
stos
arpl
js
mov
inc
cmp
ficoml
popa
jo
and
shl
and
and
dec
sub
cmc
sti
les
sahf
mov
das
bound
xchg
lahf
jae
push
fstl
in
inc
inc
in
dec
adc
lods
xor
lcall
shll
cmp
mov
rcl
jecxz
enter
xchg
test
jbe
out
cmpsb
insl
addb
cmp
xor
ja
lcall
test
or
fcoml
dec
sub
cwtl
scas
lods
inc
lret
ret
push
dec
dec
cltd
lods
lds
dec
daa
enter
stc
dec
sub
sub
fidivl
mov
sbb
mov
sub
lret
repnz
sahf
or
sub
mov
addr16
lock
pop
sub
push
inc
lods
mov
jno
stc
push
xor
in
adc
and
inc
lods
xchg
ljmp
dec
inc
jns
inc
hlt
jg
ds
stos
popf
lahf
fadds
xchg
es
jp
test
pop
mov
inc
stc
mov
addb
bound
lods
lret
sbb
pop
dec
sbb
mov
out
jnp
imulb
nop
fidivrl
cmp
cltd
inc
incl
sub
xchg
lods
fwait
cmp
arpl
mov
imul
insb
fstl
pushf
pop
rorb
pop
sub
jle
push
lds
jp
fs
adc
pop
mov
out
out
and
out
outsl
inc
setg
cmpsl
pop
cltd
fwait
xchg
mov
pop
inc
mov
into
rcr
lods
hlt
jmp
or
scas
or
icebp
mov
or
mov
mov
jae
jno
add
subb
pop
cmp
mov
dec
or
mov
xor
dec
hlt
pop
out
add
insb
mov
cmpsb
mov
daa
xchg
je
jmp
in
leave
imul
jp
pop
mov
push
add
stc
xchg
mov
push
push
adc
aam
and
dec
stos
pusha
cmpsb
gs
jle
or
cli
in
lahf
das
xor
cs
cmp
and
or
xchg
add
push
mov
mov
inc
adc
add
mov
cmp
cmp
int3
cmc
fldcw
shl
jne
vphaddwd
dec
cmp
orb
jno
imul
push
jg
cmpl
jne
cmpsl
add
cmp
push
add
cs
cmc
xchg
mov
aam
nop
xchg
pop
nop
mov
push
sarl
scas
inc
xchg
pop
jl
pop
mov
lcall
mov
cmp
inc
addr16
clc
test
mov
clc
fisubrl
xchg
out
push
ds
ret
jb
or
std
sub
mov
or
lods
pop
or
mov
dec
sub
adc
adc
neg
cmc
jl
push
shll
push
inc
xchg
dec
repnz
pop
push
test
mov
lret
rclb
mov
jnp
mov
aaa
repz
pushf
icebp
daa
aas
inc
test
cmp
test
scas
jne
push
pop
or
mov
pop
test
ljmp
and
pop
sub
pop
test
lods
cld
nop
mov
nop
fdivrp
lock
mov
addr16
int
push
jb
push
rcrl
stc
or
cmp
lea
mov
icebp
cmp
stc
stc
decb
mov
push
jno
popa
push
adc
es
into
lea
fisubl
adcl
sti
cmp
cmp
inc
stos
imul
jae
fnstenv
push
xlat
mov
rolb
sub
rorb
stos
inc
movsb
pushf
jp
add
sub
fsubl
mov
fxch
repz
inc
imul
push
pop
mov
push
inc
icebp
xchg
sbb
ja
xchg
jle
adc
fnstenv
scas
or
loopne
das
in
lock
xchg
push
mov
stos
pop
xchg
cmpl
fnsave
pop
jge
sti
push
and
mov
ret
call
scas
mov
mov
shll
clc
cwtl
pop
jle
enter
or
jmp
clc
aad
or
mov
push
aaa
out
adc
bound
mov
pop
adc
sbb
dec
repz
sbb
dec
cmp
neg
lds
mov
leave
jmp
stos
sbb
cmp
pop
ffreep
div
jmp
push
les
xchg
mov
or
sub
adc
xchg
mov
inc
mov
jnp
aam
insl
push
loopne
adc
mov
mov
call
lret
and
xor
stos
push
dec
aam
add
pop
out
mov
aas
icebp
mov
jns
dec
or
sbbb
xor
push
xor
mov
in
mov
and
into
sub
mov
lret
mov
jge
nop
jo
jo
fsubrs
pop
in
movsl
les
rcrb
lcall
clc
daa
or
sub
insl
jno
jb
shl
sbb
push
sti
jb
mov
add
daa
inc
pop
nop
test
mov
das
jp
inc
xor
pop
and
push
lds
roll
int3
adc
jp
ljmp
push
mov
mov
nop
mov
int3
inc
clc
in
sbbl
rcrl
cmc
stc
leave
or
stc
bound
out
hlt
or
cmp
fildl
mov
xchg
inc
sub
and
aas
js
and
dec
xorl
sbb
and
push
xor
fbld
or
pushf
imul
dec
adc
push
inc
push
mov
addr16
xchg
xchg
or
test
test
lahf
pop
or
mov
outsb
push
loopne
push
pop
or
add
aam
in
outsb
xlat
mov
dec
mov
popf
mov
inc
daa
mov
aam
int
ja
push
icebp
push
cmpsb
lea
xor
repz
xor
icebp
shlb
enter
inc
dec
insb
mov
int
lods
test
mov
cmp
and
loop
sbb
mov
scas
jo
mov
push
and
add
mov
fucomp
cmp
lods
lock
lods
repz
dec
jb
push
xchg
mov
xor
fxch
frstor
or
and
imul
popf
adc
sbb
sbb
ret
pop
push
js
sub
jae
push
xchg
pusha
ja
mov
sbb
icebp
sub
daa
pushf
aam
ljmp
mov
add
notl
mov
jnp
pusha
sti
cmp
xchg
subl
fdivl
lods
mov
dec
fstp
cmp
ret
mov
pop
jmp
cltd
scas
cmpsb
ret
dec
fildl
xlat
or
cli
jge
sub
decb
mov
outsl
mov
lods
repz
lahf
pop
cmp
stos
adc
add
sub
push
ljmp
ds
add
nop
mov
out
sub
push
xor
mov
cli
roll
mov
cmc
outsl
xor
fcomps
push
arpl
mov
and
rcrb
pop
or
jp
stos
push
xor
rcll
mov
out
add
int
xor
ljmp
push
pop
push
or
push
jbe
pushf
scas
xchg
pop
pop
lret
testl
pusha
loopne
or
add
xor
in
cld
cwtl
push
lods
shr
pop
in
adc
jnp
mov
pop
and
adc
xchg
shlb
pop
push
pushf
add
jb
out
mov
xchg
jne
sahf
dec
mov
pushf
in
arpl
je
mov
xor
ds
shl
outsb
lahf
pop
fisubl
cmc
sbb
sahf
fs
lahf
sub
add
loop
mov
fs
push
daa
iret
stos
dec
ror
aad
sub
mov
or
gs
push
adcl
mov
pushf
les
aam
mov
clc
arpl
sub
push
stos
or
idivb
jne
or
test
jns
or
and
xchg
retw
jl
jne
out
les
dec
or
les
mov
and
lods
repz
loopne
stc
mov
in
pop
lret
mov
outsb
fisttpll
and
cmp
push
sbb
incb
cmc
test
cmpsb
mov
add
lahf
movsl
call
jg
jp
and
out
inc
loope
lret
in
add
push
sub
sub
xchg
push
push
jl
or
pop
loop
push
mov
ljmp
pop
push
leave
loopne
sub
jno
adcl
imul
test
inc
cltd
mov
lret
in
push
bnd
in
mov
out
cmp
loope
inc
in
sbbb
jecxz
fnstenv
dec
out
dec
idiv
sti
loopne
stos
shrl
or
xor
test
roll
jl
push
mov
adc
or
pop
imul
push
imul
pop
jge
sbb
test
ljmp
sub
dec
jl
les
dec
sub
xchg
sti
stos
and
jle
fsts
dec
fistpll
ja
aad
repz
mov
sarb
mov
fcoml
movsl
jge
lea
out
idivl
add
jle
pop
mov
add
lret
adc
jmp
inc
lret
adc
mov
cltd
pop
sbb
icebp
cmp
sub
mov
lock
jg
aas
addr16
inc
sub
out
xchg
sbb
jecxz
pop
adc
add
jne
add
mov
cwtl
rcr
cmpsb
push
sbb
cmp
out
push
repz
je
ja
fdivp
test
mov
cmp
nop
shll
pop
mov
push
mov
xor
and
or
cmpsb
jne
adc
pop
jno
outsb
test
adc
jecxz
mov
xor
sbb
test
iret
or
arpl
jmp
mov
push
and
xor
adc
ja
pop
push
pop
adc
inc
xchg
test
lds
lods
inc
in
mov
cmc
add
mov
out
pop
xchg
fucom
test
bnd
lret
clc
mov
adc
cmp
cltd
adcb
or
sub
lods
mov
xor
adc
inc
hlt
loope
inc
xchg
mov
sahf
stos
scas
clc
jp
mov
dec
mov
std
xor
insb
cmp
out
jp
and
into
jle
fbstp
lcall
push
sahf
in
data16
loope
inc
add
xor
sbb
push
mov
lock
mov
push
xchg
xchg
or
add
std
lret
out
rolb
je
xchg
xchg
pop
enter
inc
pusha
sub
jne
inc
and
xchg
ds
mov
inc
dec
sub
add
push
jbe
or
imul
lods
in
push
mov
add
loope
movsb
scas
dec
stos
sbb
xor
in
xchg
xor
adc
mov
movsl
mov
sub
js
aas
imul
clc
sahf
cmp
xor
cmp
je
mov
daa
stc
xor
mov
jge
lcall
arpl
dec
call
frstor
das
mov
out
or
je
lahf
aaa
fdiv
fwait
imul
gs
dec
icebp
sti
les
rclb
fsubs
ljmp
push
pop
popa
test
ds
lock
push
js
sbb
sbb
shl
dec
or
pusha
mov
lret
icebp
call
lret
cmp
add
add
loopne
adc
or
push
push
and
into
mov
test
fwait
ljmp
enter
repz
stos
xor
rcl
add
inc
mov
shlb
pushf
into
mov
loop
cli
in
pushaw
or
push
ret
jg
fimuls
aad
jo
pop
shr
cs
inc
push
sub
jb
gs
push
jno
sti
rcl
pop
stos
je
lcall
push
and
jl
outsl
and
mov
cmc
data16
cmp
pop
jecxz
andl
pushf
mov
push
fwait
or
jmp
addr16
mov
or
cmp
stos
mov
in
or
mov
aaa
mov
rcl
jl
fists
in
adc
aam
call
mov
lock
mov
shlb
hlt
mov
xchg
add
lahf
mov
cmpsl
mov
insb
bound
xchg
out
insl
mov
mov
mov
repnz
arpl
ja
pop
pop
js
ret
adc
cmp
stos
jg
mov
lret
das
inc
sarl
lods
gs
sti
mov
xor
push
insb
mov
scas
cmpsb
fwait
pop
adc
movsl
push
lods
xchg
ds
imul
repz
pushf
push
in
add
mov
add
adc
xchg
in
mov
clc
daa
lock
mov
fmulp
dec
test
cmp
inc
jbe
stos
dec
fcoml
iret
lret
mov
and
lret
mov
scas
movsl
or
je
jnp
jle
and
jmp
insl
jg
and
lea
out
lea
adc
sbb
js
push
call
jle
dec
repnz
imulb
repnz
out
outsl
mov
or
adc
and
stos
adc
mov
cltd
int3
aas
pop
dec
fdivl
dec
popa
push
sbb
jmp
fcmove
adc
add
loopne
cmp
std
mov
add
addl
rcll
fs
xchg
mov
cltd
icebp
add
push
sahf
adc
adc
xor
xchg
lret
aad
stc
bnd
inc
pop
out
bound
shr
lds
xor
aaa
push
pop
push
jp
das
push
jl
cmp
in
mov
jmp
adc
cmp
cmp
gs
pop
jne
sti
cmp
repnz
negl
cs
ret
arpl
jmp
pusha
aas
jns
lock
mov
sbb
in
push
xchg
xchg
jl
inc
fcoms
mov
mov
sbb
in
add
outsl
push
push
cmp
fisubs
dec
enter
mov
in
in
cs
les
fcompl
int
and
in
mov
lods
dec
adc
mov
or
mov
xchg
cmpb
mov
mov
cld
int3
jge
arpl
icebp
or
xor
mov
in
mov
vmread
adc
fldcw
mov
jo
xor
into
rcrl
xor
xor
fdivl
pop
outsb
xor
add
lss
dec
out
xchg
movb
and
pop
ss
insl
rcrl
mov
sarb
sub
xchg
inc
sarl
nop
cmp
lahf
popf
sar
scas
push
dec
adc
sahf
push
clc
cltd
cmp
test
push
cmp
aad
mov
push
mov
lret
mov
mov
xor
jne
push
push
outsb
pop
notb
pop
idivl
dec
xchg
test
cltd
push
lea
fsubs
or
aam
stos
xor
add
pop
jae
cltd
dec
jmp
insb
pop
or
aad
ja
cwtl
aam
push
icebp
xchg
push
stos
lds
mov
cmp
inc
std
out
in
dec
mov
xchg
xchg
xchg
mov
nopl
fmuls
divl
addr16
dec
pop
jmp
pusha
jnp
addr16
mov
sub
imul
xchg
adcb
jnp
or
sub
fs
mov
xchg
hlt
and
subb
mov
loope
mov
mov
andl
mov
repz
into
push
dec
push
push
add
clc
lahf
mov
roll
push
arpl
mov
shlb
pop
inc
push
push
dec
jl
notl
xchg
cmc
sahf
push
fwait
js
xor
mov
test
mov
xchg
jl
push
and
pop
or
xor
insl
mov
mov
dec
sbb
cltd
je
js
subb
mov
roll
int
push
sbb
add
nop
mov
dec
xchg
xor
fwait
es
pop
incb
sarl
inc
xchg
or
lret
rcrl
ljmp
pop
mov
xchg
xchg
call
and
mov
adc
sarb
orb
add
pop
sub
mov
xchg
dec
mov
mov
fs
loopne
cld
mov
gs
dec
cmp
dec
lcall
je
and
fsubr
xor
dec
sarb
aas
pop
cmp
xor
cmpsb
adc
xor
loope
push
push
and
mov
repnz
mov
mov
push
or
adc
xchg
mov
popf
arpl
xor
andb
jne
or
sbb
dec
add
jle
jb
xchg
iret
fbld
lods
movsb
push
mov
pop
inc
icebp
add
inc
jne
in
add
repnz
xchg
pop
into
ja
ljmp
fldt
mov
push
mov
and
pop
jne
pop
leave
int3
test
mov
jp
push
pop
fisubrs
dec
push
jle
idiv
imul
xchg
rcrb
insb
lret
mov
std
push
inc
mov
cmpsl
scas
js
push
cmp
imul
aas
pop
imul
cwtl
xorb
inc
inc
cltd
in
and
push
clc
push
pop
sbb
test
mov
xchg
add
in
bound
xchg
lret
es
int
fisttpll
inc
lret
pushf
pusha
mov
pop
outsb
ror
push
lea
push
orb
mov
aaa
loopne
jns
xchg
pop
mov
int3
and
subb
jns
mov
mov
stos
addr16
nop
hlt
cmp
rorl
push
scas
pusha
iret
mov
cmp
andb
repnz
inc
lods
fyl2xp1
ss
loope
repz
bound
jne
outsl
loop
inc
fs
hlt
push
adc
test
xchg
std
mov
jne
aam
gs
sub
xor
cld
leave
adc
cmc
rcl
xchg
pop
daa
pop
in
rcrb
mov
mov
dec
mov
lea
push
adc
fstps
xor
jns
ret
lahf
outsb
dec
mov
lcall
cmc
jecxz
out
rorl
shlb
jns
cmpsl
adc
out
push
adcl
mov
sub
out
jae
cli
mov
repz
xor
mov
hlt
push
adcb
sbb
sub
push
mov
pop
push
pop
sahf
sarl
add
inc
sahf
mov
inc
cmpsb
or
mov
cmp
fs
movsl
mov
lods
adc
fcomps
lock
jnp
lret
mov
int3
sbb
icebp
je
sub
xor
lock
inc
jns
mov
mov
movsl
out
cli
fidivl
jmp
leave
mov
pop
cmc
fnsave
cs
inc
mov
add
dec
xor
mov
mov
cmp
xchg
sbb
add
cld
fldl
inc
call
es
cltd
in
mov
stc
fcmovbe
icebp
fistpl
repz
push
jns
mov
ds
loope
cld
push
orb
adc
lahf
pop
cltd
sub
in
cmc
mov
xor
and
jne
jae
push
and
repz
cmp
jns
pop
pushf
mov
xor
lahf
push
adc
mull
out
popa
add
fwait
sar
sbb
fmul
sbb
pop
or
imul
repnz
notb
iret
div
aas
rcrl
or
mov
lods
sub
repnz
dec
or
jle
out
jmp
out
and
stc
cmpsb
mov
push
not
mov
xchg
les
xchg
cmc
jno
mov
bound
adc
cwtl
pop
cwtl
add
imul
cmpsb
cmp
stc
sbb
shll
or
mov
mov
mov
cmp
cs
mov
cli
out
inc
daa
leave
in
fistpll
jmp
inc
adc
push
aas
fwait
cs
fs
and
pop
ret
dec
les
jg
lea
enter
pop
imul
in
add
ficoms
sbbb
roll
call
jecxz
dec
push
test
pop
popf
jge
adc
jmp
lods
fs
mov
movsl
mov
push
mov
dec
je
dec
jno
popa
arpl
dec
push
cmc
mov
and
add
mov
xchg
jb
mov
mov
test
dec
fistl
mov
pop
test
mov
jmp
and
js
inc
sbb
adc
inc
push
jmp
stos
jp
dec
sbb
popa
sub
inc
mov
mov
popf
data16
dec
or
mov
into
dec
mov
movsb
push
or
je
sbb
jmp
xor
aad
in
int
insl
insb
push
rcl
or
lock
cmc
or
lds
cmpsb
loope
mov
push
cli
ret
cmpsb
in
mov
repz
jge
mov
ret
ja
adc
and
inc
ljmp
mov
in
inc
popa
dec
rcll
cltd
outsb
mov
add
mov
cmp
mov
cmc
push
dec
xor
inc
das
or
and
pop
xor
cmp
sub
aaa
sub
inc
lods
and
sbb
mov
add
lahf
ret
fistps
cmp
lahf
fcomps
in
lock
popf
outsb
movsb
dec
dec
jnp
call
mov
lock
insl
inc
and
push
nop
pushf
call
jp
mov
lret
iret
push
gs
xchg
push
dec
cmp
push
mov
pop
mov
dec
rorb
mov
cmp
stos
pop
lret
aam
clc
jp
pop
add
xor
hlt
idivl
shl
sub
aaa
out
or
pop
jle
mov
cmpsb
das
outsl
sub
and
or
mov
adc
aas
les
cmp
jb
mov
or
fnsave
lret
ja
dec
cmp
cmp
mov
aad
or
aam
iret
mov
xchg
push
dec
call
jo
lods
bound
in
sbb
dec
and
dec
xchg
push
xor
push
sbb
xor
cmp
mov
jle
lock
rorl
cmp
cmpsb
gs
inc
and
iret
int
test
into
xor
add
in
lock
mov
xchg
push
and
mov
cmp
popa
sti
push
inc
fbld
dec
dec
int3
pusha
add
jnp
dec
js
jle
xchg
test
jl
movsb
pop
xchg
es
mov
cmp
jb
roll
pop
aaa
push
jg
sti
mov
dec
out
jmp
fldt
int3
ljmp
push
in
add
shrb
pushl
push
cmp
push
mov
or
mov
push
jmp
shr
xchg
jns
inc
cmpsb
test
aaa
stc
shl
test
add
xchg
cs
xor
mov
pop
pop
outsl
mov
adc
ss
dec
jge
je
add
pop
xor
push
int
imul
mov
in
scas
mov
fbld
sbb
ljmp
lcall
or
sbb
xor
push
cld
cmp
push
sahf
gs
mov
scas
cmp
dec
sub
test
pop
mov
arpl
es
int
xchg
add
test
mov
scas
xor
xor
push
sti
aam
jmp
leave
insl
mov
test
mov
test
adc
xchg
decb
clc
mov
mov
pop
lods
fwait
or
push
out
dec
sub
jmp
pop
add
cltd
xchg
xchg
sub
incb
js
outsb
push
add
lcall
mov
add
cmp
inc
test
fistps
out
fcmovbe
jae
xlat
xchg
les
clc
xor
jbe
enter
loope
int
loope
rcll
fimuls
jg
mulb
int
insl
mov
sub
add
lcall
cmpsb
lret
dec
testb
les
mov
jae
and
mov
aad
mov
pushf
jge
pop
inc
lods
mov
data16
jne
lret
or
mov
dec
mov
out
xor
rolb
xchg
shl
into
call
fadds
sub
imul
push
sub
mov
lods
mov
dec
jge
sub
push
adc
pusha
mov
push
mov
repz
dec
shrb
dec
jge
lret
xor
push
sub
loop
mov
pop
jb
das
lret
sub
test
movsb
int3
movsb
bound
add
mov
js
out
xor
add
cmp
xchg
xlat
insb
dec
mov
movsb
fdivs
mov
xchg
push
shl
jo
pop
into
lahf
cmpb
ret
push
lods
insb
pop
imul
and
rorl
mov
xchg
inc
xchg
jo
dec
sbb
mov
jo
hlt
imul
jno
out
movsb
lds
clc
mov
daa
xlat
movsl
mov
insb
test
cld
jmp
xchg
cltd
or
adc
mov
or
mov
xchg
test
xor
int3
lods
pop
lds
das
imul
dec
or
sub
jmp
test
adc
shll
cmc
jnp
call
mov
inc
adc
rorb
xchg
outsb
xchg
bound
jecxz
stc
xchg
pusha
test
mov
cmpb
xchg
jl
mov
or
or
xchg
jge
mov
movsb
add
mov
jne
and
adc
jmp
stos
scas
popf
loop
push
mov
lea
mov
xlat
loope
aas
movsl
shll
ss
aaa
mov
mov
fs
push
gs
xor
dec
shlb
sub
lock
rol
std
push
mov
cwtl
pop
xchg
sub
push
ja
scas
xchg
inc
stc
and
les
adc
pusha
xchg
outsl
enter
cmpsb
out
aaa
das
clc
adc
idivb
sub
xchg
arpl
push
pop
pop
xchg
jl
xor
loope
cpuid
int3
aad
cmp
xchg
cmp
mov
clc
mov
subb
cmp
pop
mov
sbb
jne
fwait
jle
mov
mov
xchg
jnp
int
popf
adc
jle
sar
push
pop
popf
push
filds
ret
popf
adc
or
and
lahf
mov
lcall
ja
test
pop
dec
xor
ror
jns
ss
stos
es
loop
rcl
adc
nop
clc
mov
or
jnp
mov
pop
and
mov
std
cmp
lock
lds
sub
jnp
mov
in
jne
xchg
mov
mov
pop
jle
push
jge
into
out
xor
fiadds
pop
or
mov
out
mov
dec
dec
inc
push
fs
cmp
jmp
ss
out
and
les
outsb
call
cwtl
in
rcr
mov
imul
add
aam
cmp
adc
je
setb
in
je
and
arpl
mov
rcrb
out
inc
lret
fs
bound
jne
cli
movsb
subb
daa
add
push
lcall
cmpb
cltd
and
adc
add
push
cmpsl
pop
cmpsl
mov
ficoml
fdivrs
mov
pushf
stos
icebp
mov
int3
ja
ljmp
mov
jg
sti
rcll
add
dec
xchg
insb
out
pop
xor
loop
jp
aam
lcall
fsubrs
xchg
cmp
adc
lret
std
inc
jmp
outsb
sbb
mov
inc
push
stc
push
fcmovnbe
fwait
test
push
cmp
sti
cmpsb
ja
push
fs
lahf
aad
imul
jbe
jb
popf
repz
call
arpl
push
inc
je
hlt
inc
ljmp
adc
pop
mov
mov
xchg
mov
xchg
enter
loope
fcmove
or
adc
mov
mov
jnp
dec
mov
cmp
inc
adc
pop
into
lahf
cmp
notl
lods
out
cld
lods
mov
mov
inc
lds
xorb
mov
fidivrl
push
sub
loop
jmp
pusha
test
pop
movsb
push
ja
add
jb
gs
cs
add
cmp
mov
xchg
fidivs
cli
aas
and
lcall
dec
add
ret
sub
and
fimull
xorb
ja
jle
cld
and
inc
adc
shlb
mov
lahf
adc
add
or
xor
pop
inc
adc
sbb
aam
mov
stc
add
mov
inc
repnz
and
mov
test
jmp
mov
dec
lret
jp
push
ficoms
lds
pop
ja
or
stc
xchg
push
lds
out
mov
push
xor
daa
loop
pop
repnz
mov
xchg
and
cmp
inc
insb
xor
mov
test
dec
cmp
adc
rcrb
jmp
jo
clc
mov
imul
aam
pop
cwtl
call
es
mov
pop
sbb
out
pop
add
sbb
nop
imul
pop
jo
cmc
addr16
and
lahf
mov
in
test
insb
in
adc
fbstp
pop
pop
add
imul
addr16
mov
lea
int
add
shll
cwtl
jnp
shlb
adc
mov
sub
or
xorb
push
push
xchg
cmp
sahf
je
mov
inc
out
test
mov
xor
dec
test
repz
pop
adcl
ds
cs
hlt
cmp
jbe
jg
jmp
arpl
push
roll
fwait
xor
fidivs
addr16
scas
xor
jae
ss
fnstenv
pop
fistpl
cltd
cli
jp
pop
jle
test
xor
lcall
pop
dec
dec
aas
jb
repnz
rcrl
xchg
rol
nop
inc
inc
es
mov
add
pop
pop
push
loope
fisubl
cmpsl
js
sarl
stc
mov
and
pop
call
in
in
pop
mov
cmpsb
ds
mov
adc
out
cmpsb
hlt
jp
push
pushf
shll
hlt
add
int
js
mov
out
add
push
jo
and
icebp
mov
insb
lahf
scas
xor
jle
sub
cltd
push
adc
add
dec
cmc
adc
into
loopne
pop
jg
jecxz
dec
mov
stc
fistpl
mov
inc
xor
push
add
jp
jmp
test
fs
sub
insb
push
add
and
out
iret
sub
sbb
cmp
loopne
xchg
dec
add
adc
filds
mov
mov
push
pop
jp
adc
sbb
stos
ret
add
adc
dec
sub
ds
push
cld
rclb
cli
shlb
das
xlat
mov
jns
inc
mov
pop
arpl
xchg
sub
in
adc
sbb
ss
jle
inc
jb
adc
subl
adc
cmp
and
and
jb
xchg
jb
xchg
pmaxub
sbb
or
jge
cmp
andl
cmp
sub
dec
inc
sub
inc
push
and
and
bound
mov
imul
mov
loop
or
lds
inc
ljmp
xchg
cwtl
rclb
jb
mov
cmp
mov
fstps
fldl
pop
xor
daa
sbb
imul
pop
lock
rorl
inc
mov
push
ret
xor
push
into
fidivs
inc
les
addb
inc
dec
push
js
test
mov
std
sub
test
xorb
fptan
inc
jge
inc
cmp
or
call
and
mov
iret
sub
xor
xor
push
je
int3
lahf
lods
push
jne
lea
pop
ror
push
out
xchg
mov
or
pop
and
in
int
shlb
push
add
inc
icebp
sub
sbbb
cwtd
aas
cmp
lret
cmpl
xor
arpl
int
out
sbb
lret
mov
push
fstpt
testl
test
loopne
jl
insb
add
xchg
or
inc
lods
xchg
and
notw
dec
xchg
inc
shlb
je
cmc
sub
mov
mov
rcr
dec
inc
mov
scas
sbb
mov
mov
pop
push
pop
or
push
cltd
push
stos
xorb
mov
ret
ja
jl
loopne
sub
adc
xlat
movsl
sbb
jns
loope
sbb
out
int
lret
mov
or
daa
jae
xchg
leave
aas
sub
sub
mov
push
les
push
xor
inc
mov
push
clc
mov
jle
add
fstl
jle
cltd
pop
rclb
xchg
and
ds
lods
jne
sbb
fmull
inc
jne
jl
loop
jge
hlt
sub
jb
sbb
pop
outsl
push
push
rcrb
or
and
inc
stos
inc
or
mov
cmp
sahf
je
mov
iret
cmp
mov
fld
pop
push
imul
sub
lcall
iret
aaa
imul
add
aam
cmp
imulb
mov
fxch
jmp
icebp
push
movsl
fwait
dec
mov
sbb
out
add
or
rol
dec
mov
fstpt
popf
adc
inc
lret
ret
call
dec
cltd
or
cmp
jbe
mov
and
addl
mov
adc
mov
jecxz
or
pop
int
gs
shl
enter
outsl
pop
fwait
gs
scas
pop
cmc
lcall
jnp
and
test
mov
js
mov
inc
push
pop
sti
pop
stc
fmul
cmpsl
pop
fdivrs
dec
das
mov
sbb
outsb
jg
orl
jg
mov
xor
xor
cmp
add
mov
jnp
fwait
xor
pop
jno
test
shlb
or
stos
push
xchg
out
jecxz
inc
or
mov
push
lea
pop
into
cmp
mov
adc
stos
xchg
fnstcw
sti
inc
scas
shrb
fistl
adc
cmp
aad
loop
pop
fnsave
pop
popa
into
idivl
loopne
pop
js
jnp
idiv
sar
xor
cwtl
sub
pop
andl
or
or
xlat
mov
cli
ret
jp
dec
add
cwtl
mov
mov
mov
xchg
dec
fimull
pop
adc
jbe
mov
mov
push
fs
cltd
push
and
add
push
aam
ja
dec
mov
push
push
dec
in
sahf
lahf
sbb
insb
adc
dec
ljmp
jns
push
insb
aas
insl
push
and
shll
pop
lcall
sub
cmp
les
je
xchg
pop
jb
popa
into
mov
xor
cmpsb
jae
xchg
add
mov
or
je
sbb
push
push
insb
inc
sbb
xchg
sub
scas
js
dec
fmuls
xor
ja
pop
cs
fildl
je
or
xor
xor
cmpsl
mov
shll
fbld
xor
sub
imul
das
mov
jmp
jo
xchg
mov
jp
jecxz
inc
push
dec
xchg
mov
push
add
and
sahf
movsl
and
popa
in
mov
sar
adc
push
gs
cmpsl
loopne
adcb
sbb
idivb
jge
and
mov
adc
pop
or
in
test
scas
and
loop
cli
stos
andl
mov
push
mov
neg
loopne
push
push
stos
adc
loope
dec
xchg
iret
xchg
mov
pusha
pop
push
pushf
mov
into
cmpl
and
inc
mov
sbb
pop
fadd
xchg
sub
mov
adc
mov
test
cmp
xchg
adc
mov
xor
test
jae
xor
pop
addr16
and
test
jmp
push
cmp
lods
cwtl
repz
cmc
dec
cmp
adc
aas
and
iret
mov
xchg
xchg
test
popa
pushf
pop
arpl
pop
movsl
push
daa
add
mov
movsl
push
cmp
imul
inc
push
push
and
nop
or
fstps
iret
test
outsb
jge
push
iret
bnd
pop
popf
out
mov
pop
rcl
pop
ds
add
sub
loop
iret
push
rcr
fdivl
out
jg
xchg
jge
inc
xorb
popa
cmp
push
lret
fmull
repz
lods
icebp
pop
imulb
or
xchg
repz
mov
jmp
lods
xor
outsb
std
lock
rorb
test
mov
rclb
jb
fists
inc
clc
incb
repnz
xlat
aam
pop
test
pop
add
jae
jno
sahf
cltd
ret
aaa
sub
sarl
or
sbbl
add
mov
dec
sbb
cmp
jns
fcmovbe
jg
xchg
test
cmp
adc
into
and
jg
sub
ds
roll
ljmp
stos
pop
outsl
jmp
xor
cmc
jo
enter
gs
xchg
inc
andb
nop
dec
mov
insl
adc
mov
mov
into
stc
aaa
push
pop
test
add
inc
sarl
push
popa
add
roll
xchg
mov
jbe
call
mov
cmc
jecxz
mov
or
xor
dec
cmc
pop
mov
into
mov
xor
addr16
scas
and
pop
xchg
lock
lods
sub
enter
jb
sub
dec
dec
fisttpl
scas
jns
push
mov
in
daa
adc
adc
jge
mov
push
inc
pusha
cmp
lock
inc
lea
cmp
out
fwait
loope
or
inc
inc
sbb
push
les
inc
xor
dec
mov
sbb
mov
testb
adc
out
aam
jl
inc
rcrl
cmp
roll
push
inc
mov
or
sub
pop
mov
fcom
jne
sbb
inc
jp
cmp
xor
ss
mov
dec
mov
mov
jns
jbe
enter
cld
push
lcall
cmp
loop
sub
outsb
inc
and
aaa
jmp
xchg
out
insb
iret
test
inc
pusha
data16
loope
mov
push
jmp
jb
push
je
ret
dec
dec
xor
add
mov
fwait
mov
cmp
gs
fdivs
sahf
jge
mov
loop
mov
loop
outsl
jns
mov
fnstenv
loope
pop
sarb
xor
sub
gs
mov
ror
ds
mov
sarl
sbb
popa
icebp
ss
and
lret
popf
ret
sub
je
aas
call
je
sbb
smsw
call
aas
aaa
repnz
fistpl
pushf
cmp
enter
jmp
dec
icebp
dec
mov
cmpsl
scas
jmp
repz
cmp
cld
push
orl
jo
pop
sti
in
inc
movsb
jp
sahf
or
jmp
xor
inc
sub
mov
push
mov
popa
and
or
scas
or
adc
dec
test
xchg
out
jge
rclb
in
shlb
or
test
xchg
int
xchg
sbb
push
mov
or
dec
out
in
lcall
cmp
sahf
pop
push
testb
cmp
adc
add
dec
mov
mov
inc
jg
das
mov
sub
mov
mov
dec
pop
or
fdiv
xor
add
scas
movsl
jmp
testb
out
push
test
fst
and
and
pop
out
out
repz
jle
mov
rorb
fistps
mov
pop
push
setno
mov
or
cld
sti
push
imul
out
lds
sti
mov
stc
fwait
mov
or
xchg
cwtl
xchg
test
xorb
jmp
cld
js
sbb
bound
push
daa
popf
push
shll
xchg
push
jmp
nop
sbb
insb
aaa
enter
fwait
loop
inc
adc
pop
loope
int
sub
loope
jne
test
scas
xchg
shll
scas
stos
xor
mov
std
sbb
lods
push
lret
mov
jnp
or
add
inc
mov
mov
add
popf
adc
pop
lock
lret
or
sbb
movsb
fdivs
scas
mov
sub
jae
pop
sbb
jmp
shrb
je
push
cli
in
mov
mov
ss
mov
dec
aas
insb
in
push
cltd
push
xchg
scas
jmp
pop
sub
sub
xorb
enter
and
fidivs
mov
push
rolb
in
pop
mov
je
mov
jle
push
into
jne
jo
fucomi
adc
inc
inc
aam
movsl
fcomp
orb
mov
stos
cmpsl
fisttpl
test
mov
dec
push
or
push
jnp
xor
or
pop
pop
jecxz
add
mov
out
cmp
pushf
push
fldt
js
inc
mov
lock
push
outsb
inc
bound
loope
iret
jmp
xor
sbb
dec
or
and
fiadds
nop
out
or
pop
ret
roll
pop
cmp
in
push
sub
cld
fidivl
rcr
icebp
bound
stos
and
leave
popf
repz
cs
andb
cwtl
jb
add
jmp
or
push
lock
fs
cmp
repnz
push
jbe
inc
fchs
sti
add
mov
ds
pop
outsb
mov
lods
jno
dec
fcomp
test
sahf
enter
jl
rcll
sbb
mov
repz
cs
sub
in
lods
stos
xor
mov
inc
and
inc
mov
pop
cli
das
mov
andb
subb
lds
cmc
dec
sub
rolb
fcomps
shlb
gs
testb
inc
mov
push
cmp
add
inc
jns
jne
sti
fwait
push
mov
aad
cwtl
sub
cli
iret
push
testl
add
rcrl
pop
pop
leave
test
or
sbb
cmp
sbb
movsb
and
fldt
ficomps
dec
push
pop
shlb
iret
jge
pop
ja
orl
outsl
inc
or
lods
mov
sub
add
jne
sti
dec
add
sbb
cld
dec
lea
and
sub
lods
ja
push
insl
repnz
adc
xor
cmp
mov
fcoms
xor
add
xor
mov
out
jae
push
mov
mov
xor
xchg
ret
jecxz
lcall
outsl
mov
dec
pop
call
fbstp
and
cli
notl
add
fldl
dec
inc
jne
repnz
movsb
lret
cmpsl
cs
adc
mov
in
mov
dec
into
outsb
into
cmpsl
ret
sub
fldcw
mov
lods
loop
mov
das
arpl
xchg
mov
rolb
call
cs
xchg
lock
ror
ljmp
add
or
sahf
in
jp
mov
movsl
mov
or
addr16
pop
aam
lret
mov
push
not
xchg
pop
sti
xor
sbb
insb
outsl
push
rolb
xchg
ljmp
mov
push
xchg
mov
jb
xchg
pop
bound
inc
dec
jbe
mov
mov
add
adc
mov
scas
out
inc
jle
add
loop
or
and
insl
outsl
pop
bound
or
and
mov
ja
scas
mov
loop
jne
push
jno
aaa
and
and
movsb
pop
subb
outsl
adc
mov
mov
pcmpgtb
sbb
aaa
mov
addr16
jno
ds
pop
push
aas
pop
pushf
insl
stc
mov
jb
xchg
lds
clc
sbb
or
imul
and
pop
arpl
xchg
lea
int3
mov
gs
lods
mov
cli
jg
xor
lds
pmulhw
dec
rorb
add
sub
mov
mov
adc
in
mov
insl
cmp
mov
jecxz
incl
popf
jp
lods
push
imul
inc
add
inc
push
lahf
mov
cmp
pop
stos
bound
push
dec
adc
fwait
or
xor
dec
adc
movsl
jl
mov
mov
jae
pop
push
cmpsl
xor
push
push
data16
push
std
shrb
mov
cmp
add
jae
push
mov
icebp
ja
es
sub
sub
rcrb
xchg
std
push
fcompl
aaa
dec
jne
adc
sbb
rorb
cld
popf
cmp
lahf
enter
pop
adc
jne
cli
xchg
rcrl
adc
test
bound
inc
fsubp
rep
lds
fs
jnp
fistpll
mov
jg
gs
mov
push
add
lea
es
lods
mov
xor
add
mov
clc
mov
push
fildll
sub
jb
xchg
lret
inc
fs
insb
mov
sub
and
cmp
inc
add
xorl
add
xor
addb
sbb
mov
mov
shl
jne
pop
stos
mov
mov
add
std
pop
dec
test
fimuls
xor
or
repnz
je
xchg
das
int
mov
pop
pop
fnstenv
mov
sbb
into
dec
insl
push
jecxz
js
mov
or
mov
inc
cs
jg
in
mov
test
jge
dec
adc
cmp
jl
add
int3
xor
inc
cwtl
addr16
dec
fmull
pop
mov
mov
cld
cld
test
sbb
test
push
push
call
xchg
sub
lods
arpl
testl
mov
xor
add
in
and
lock
cs
out
add
sub
popf
lods
dec
dec
dec
pop
jbe
outsl
test
mov
mov
jmpw
fnsave
lret
rcrl
jge
lods
mov
out
mov
adc
jbe
popf
lcall
in
sbb
cli
push
insl
ss
xchg
popa
lds
int
sub
lods
rcl
push
popa
daa
fimuls
lahf
add
addb
cmovg
int3
movsb
loopne
test
mov
insl
loope
jmp
xlat
and
push
or
in
push
pop
insl
test
repnz
test
push
outsb
scas
or
xchg
mov
les
pop
daa
and
push
xchg
insl
stos
cmpsl
fldln2
lods
push
add
dec
pusha
xchg
ficoms
jg
xor
nopl
xchg
mov
jp
mov
cmpsb
call
and
lret
cs
or
inc
lods
jae
mov
jns
pop
pop
out
jg
xor
jge
lcall
loope
dec
mov
fst
xchg
xor
daa
add
sbbb
cli
out
int
add
mov
out
test
ret
mov
out
jp
dec
jl
cld
pop
mov
xchg
mov
mov
jl
in
mov
lods
and
inc
jns
fisubs
lahf
stc
cmp
xor
push
push
sarb
add
jecxz
add
adc
inc
xor
scas
fcoml
pop
cmp
ret
pop
mov
mov
into
jns
pop
mov
test
inc
setnp
std
add
mov
leave
xlat
xor
mov
rcl
cs
sub
int
movsl
xor
adc
lahf
test
cmp
and
and
lock
ljmp
movsl
xchg
xor
pop
dec
jns
icebp
cmp
addr16
outsb
push
xchg
int
lods
mov
jge
and
fdivrp
movl
push
rcrl
cmp
in
arpl
mov
in
and
sti
pushf
xchg
jbe
adc
push
repz
mov
mov
incl
inc
xchg
int3
pop
cmp
xchg
mov
movsl
fmull
ljmp
add
mov
lods
jge
out
xchg
lock
lret
repz
sbb
in
xor
jne
movsb
std
adc
in
push
in
in
inc
pop
rclb
out
xchg
lcall
xchg
adc
push
shll
sub
enter
ret
andb
mov
cwtl
or
add
pop
icebp
xchg
shll
xorb
iret
adc
movsb
stos
out
iret
pop
fdivrs
xor
repz
ljmp
dec
out
mov
sbb
and
mov
mov
jne
int
dec
and
sbb
and
aaa
push
pop
and
mov
loopne
or
jle
filds
jbe
xchg
repz
sub
sub
adc
mov
cmpsb
sbb
rcl
mov
mov
cmp
fstpt
or
mov
je
xchg
pusha
lahf
subb
std
add
push
mov
jnp
in
push
mov
inc
cs
shrl
lret
movsl
cwtl
sbb
ret
inc
shrb
cmp
mov
into
das
aad
add
mov
movsb
ja
mov
or
sahf
sbb
bound
cmpsl
sub
jmp
mov
push
jo
adc
hlt
fbstp
xlat
inc
lods
adc
sub
lods
cmc
and
mov
test
ret
ret
inc
cmpsb
pop
jo
mov
aad
xor
jo
adc
mov
or
mov
pop
cwtl
fnstcw
mov
inc
es
xor
or
mov
mov
cmpsb
arpl
mov
mov
mov
push
xchg
pop
mov
mov
sbb
or
mov
js
dec
push
xor
dec
mov
fwait
mov
orl
xor
mov
std
lcall
ss
sbb
mov
mov
lcall
leave
xchg
mov
jecxz
int3
test
negb
fstpt
and
cmc
sbb
add
lods
es
adc
aad
testl
jg
movsb
repnz
ljmp
push
rcrb
sbb
push
and
jb
jns
xor
ds
movsb
mov
and
stc
out
fdivrl
xchg
fldenv
dec
clc
lea
jle
inc
popf
xor
jnp
and
and
mov
push
stc
test
das
mov
xchg
add
pop
pop
inc
sbbl
xor
dec
popf
les
movl
pop
sub
insb
xchg
loopne
into
mov
roll
ret
mov
mov
lods
das
cmp
mov
insb
fstpl
cli
xor
fldl
arpl
adc
int3
xorb
sub
and
fisttpl
loop
insb
test
sbb
mov
xor
pop
sti
push
out
xor
sbb
or
push
mov
bound
ret
inc
push
cmpsb
and
mov
sahf
push
je
das
and
xchg
adc
bound
ds
insl
and
ficoml
push
addr16
ss
fs
mov
test
xchg
test
mov
dec
test
inc
lcall
adcb
cs
inc
push
or
xor
stc
add
into
addr16
or
mov
daa
cmp
movsl
xchg
jecxz
push
stc
and
inc
fcmovnb
sahf
divb
sub
mov
cmp
lret
or
outsb
sub
jmp
mov
sahf
xchg
xchg
popf
fwait
ja
ja
fnsave
lret
faddl
fcom
icebp
pop
sahf
loopne
lret
rcr
xchg
dec
add
int
out
aas
sbb
or
stc
enter
mov
fstpl
fsubrs
xchg
adc
loop
inc
movsb
push
mov
bound
mov
add
push
and
xchg
mov
into
ds
fisttpll
or
iret
notb
sbb
jle
push
or
add
inc
mov
and
lahf
popa
subb
and
lret
enter
sub
push
lock
mov
inc
mov
add
xchg
add
es
adcl
sbb
mov
repnz
inc
dec
dec
xor
push
movsl
repnz
rcll
fdivs
mov
fstpt
in
xor
imul
int3
cwtl
push
cmp
mov
test
stos
sar
mov
jp
mov
pop
das
fisubrl
mov
fs
inc
aaa
mov
cwtl
xchg
ret
mov
mov
pop
loope
mov
mov
xchg
in
ret
mov
cmc
cmp
popf
fimuls
es
cmp
pop
adc
sbb
mov
into
call
push
orb
jg
mov
xchg
pusha
nop
sub
ret
lret
add
pop
int
aaa
inc
cli
ljmp
rorb
push
fwait
jge
and
adc
jne
mov
mov
jne
push
cmp
jecxz
loop
fcoml
or
movsl
clc
fsubrs
and
jns
fldt
jl
aad
push
aad
mov
fimuls
mov
popf
cmpsb
daa
lea
pusha
outsb
dec
cwtl
fildl
ljmp
ror
mov
or
int3
out
sub
pop
mov
mov
xchg
and
bound
mov
pop
add
mov
stos
aaa
and
dec
adc
sub
pop
aad
dec
ret
inc
fwait
shll
sbbl
adcb
imul
into
lcall
scas
mov
ss
inc
les
add
pop
rcrb
fwait
pushf
lods
cli
jb
mov
dec
int3
inc
xchg
ds
pushf
inc
dec
cmp
inc
dec
out
cmp
int3
into
mov
shll
and
push
ror
out
xor
lret
dec
add
ret
xor
scas
sbb
adc
fstpt
xchg
cmp
add
dec
mov
add
arpl
adc
mov
decl
loope
and
gs
das
repz
mov
cs
jmp
js
push
sbb
test
mov
mov
scas
shrl
test
cmp
popf
sub
bound
popa
xor
and
leave
int
cmp
vmovdqu
adc
mov
mov
jo
add
jne
mov
jge
test
js
mov
add
mov
pop
jg
adc
inc
lock
fildll
sbb
xor
pusha
jp
clc
fistpll
daa
and
push
stc
icebp
lahf
lods
notl
fs
mov
adc
or
or
xlat
mov
jno
testb
sahf
std
sahf
add
inc
adc
cmp
hlt
mov
repnz
fidivs
inc
scas
push
fistl
fnsave
mov
mov
push
or
and
xor
stos
cs
pop
xor
push
sbb
xchg
clc
ds
mov
and
jo
fs
das
enter
mov
insl
add
sti
push
iret
insl
movsl
jae
pop
cmpsl
inc
mov
addb
and
imul
fs
imul
xorb
or
in
decb
sbb
js
cld
push
cmpsl
mov
orb
testb
push
sbb
xlat
mov
int
add
or
mov
mov
mov
cmp
inc
loopne
call
add
outsb
mov
outsb
loop
mov
sub
adc
sub
dec
scas
test
mov
cld
popa
xchg
dec
sbb
shll
push
inc
mov
pushf
jns
call
mov
jne
mov
lret
das
push
inc
inc
add
shrb
popa
inc
xchg
jg
and
mov
sbb
mov
add
inc
sbb
or
in
lret
mov
sub
jno
jne
jns
addr16
jbe
and
sbb
adc
out
shl
ds
insb
test
xorl
and
mov
mov
lods
inc
cmpsl
mov
test
jbe
xor
stos
pop
cmpsb
mov
adc
lret
add
xor
int
sbb
das
add
ret
inc
mov
cmp
mov
lahf
cmc
pusha
movsl
xchg
inc
or
adc
outsl
ljmp
jbe
scas
popf
xchg
test
ss
push
fsts
call
mov
out
xchg
and
les
sbb
adc
inc
dec
mov
ljmp
shrb
jnp
pop
push
push
pop
sub
adc
hlt
popa
sti
sbb
sub
incl
es
cmpl
mov
dec
jnp
sarb
mov
or
mov
idivl
ret
sbb
add
mov
je
mov
andl
ljmp
and
imul
inc
arpl
push
jp
sub
pop
loopne
fidivl
sub
js
jno
rolb
inc
sbb
adc
lods
jns
inc
inc
dec
fnstsw
out
enter
xlat
fsubl
pop
sub
cmpsb
sbb
or
lahf
mov
outsb
add
sub
fdivr
and
mov
xchg
mov
lcall
lods
dec
push
test
cmpsb
inc
dec
hlt
outsl
nop
lret
sub
leave
cmc
jecxz
jge
ret
adc
sbb
scas
pushf
aas
mov
push
fildl
dec
xchg
mov
cli
xchg
outsb
xor
push
lret
fs
daa
and
cmp
incb
ds
in
dec
xchg
pop
imul
arpl
add
lock
sbb
jb
mov
inc
add
lret
pop
lds
push
insb
add
and
cmp
inc
ret
into
hlt
outsb
mov
sbb
lock
loopne
dec
inc
mov
imul
adc
mov
idivl
dec
cmpsl
or
cmp
pushf
or
push
push
cmp
fbstp
mov
fildll
lock
jb
push
ja
outsb
aaa
repz
jb
cs
mov
push
push
mov
loope
pop
push
into
scas
ret
mov
loop
int
sub
addb
add
rol
inc
adc
cltd
add
dec
mov
inc
inc
filds
push
or
and
and
ret
inc
aad
inc
fidivrs
in
jge
movsl
call
int3
lret
sahf
and
jae
pop
out
popa
xor
sti
pop
test
dec
mov
pop
jmp
sbb
daa
xchg
shlb
ret
push
lock
lock
clc
xor
add
leave
inc
ss
xchg
jnp
add
stos
stc
jmp
outsl
dec
imul
mov
pop
aas
outsb
ss
jecxz
mov
cld
jbe
push
stos
cmp
mov
xor
test
mov
xor
in
mov
mov
test
xchg
xor
adc
stc
test
jo
or
mov
mov
out
mov
jae
insb
subl
aaa
ljmp
push
jle
jno
push
insl
jb
and
gs
xor
orl
stos
leave
mov
das
mov
sub
stc
mov
and
pop
call
jo
lock
mov
ja
jne
adc
lcall
sti
lods
aas
xlat
das
repz
sti
mov
out
cmp
xchg
push
push
push
dec
test
and
sti
andb
push
hlt
inc
mov
push
sub
mov
mov
mov
jp
add
xor
pop
loopne
loopne
push
and
push
cli
scas
ljmp
sub
imul
stos
adc
ret
add
adc
bound
cmp
sti
or
jp
mov
sbb
hlt
fcoms
scas
pop
shll
mov
int
in
pop
mov
jb
icebp
cltd
mov
xor
movsb
movsb
or
fbstp
shl
sbb
out
dec
js
mov
xlat
movsl
adc
inc
test
scas
mov
sub
or
cmc
dec
jo
in
jb
fisubl
orb
addr16
nopl
addr16
int
xchg
inc
repz
in
test
scas
loopne
jno
pop
lock
cmp
daa
mov
jmp
sub
lock
in
inc
lahf
mov
cltd
out
adc
lods
in
add
adc
pop
test
in
pop
outsl
mov
mov
sbb
test
cmp
sbb
inc
pop
sbb
cmp
shlb
push
stc
cmp
lret
jo
or
mov
cmp
outsb
je
mov
mov
push
sbb
out
xorl
add
and
inc
jb
mov
jl
loop
bound
cmp
inc
add
bound
cmpsb
sbb
outsl
add
mov
or
dec
lea
jo
mov
or
and
outsl
jge
jle
sub
ss
push
mov
stos
push
scas
out
hlt
pop
add
popa
rcrb
out
dec
cmpsl
xchg
test
mov
sub
cmp
outsb
push
sub
xchg
pop
and
xchg
scas
cmc
fwait
loop
movsl
and
lods
xchg
rorl
xchg
sub
call
and
pop
mov
ds
das
fstpl
jge
cmp
repnz
lods
and
ss
jl
mov
fstl
stc
lret
jnp
or
lahf
adc
xlat
fsubl
xorl
jb
loopne
xor
in
cs
mov
dec
fisubrs
mov
xchg
insb
js
jmp
or
mov
rcrl
scas
xor
fldl
fwait
int
inc
sub
imul
mov
and
mov
leave
shlb
mov
pop
jge
xor
xchg
daa
jno
ljmp
jp
in
repnz
pop
fsubrl
inc
test
data16
and
das
cli
rorb
mov
popf
ret
lahf
and
call
out
or
dec
cmp
hlt
and
dec
mov
test
cmovs
icebp
pop
pop
cli
int
push
fdivl
jbe
jne
cmc
cmp
pop
stos
adc
sub
pushf
push
out
movsl
mov
ss
icebp
jnp
fistpll
test
psubsb
and
mov
shrb
outsl
mov
mov
adc
jnp
adc
and
inc
push
mov
hlt
push
inc
jae
aaa
adc
mov
in
data16
jg
mov
adc
popf
mov
je
aas
or
xchg
xchg
iret
cmpsl
add
movsl
xchg
prefetcht0
cmp
daa
dec
aad
nop
push
or
shr
cmp
int3
sub
lret
movsb
cld
mov
inc
rcrl
or
test
imul
sahf
push
push
sbb
out
lock
pusha
pushf
mov
shll
push
movsb
inc
daa
jmp
and
mov
xor
cmp
jnp
lret
mov
pusha
sub
mov
cmp
mov
int3
cltd
jge
into
add
push
lret
jne
test
mov
addb
cwtl
sub
shlb
pop
aam
push
or
xor
outsb
sarb
add
push
movsl
arpl
mov
mov
cltd
addr16
push
fsub
cmpsb
add
push
push
xchg
repz
std
jmp
dec
into
add
loop,pn
add
mov
add
es
movsb
push
sbb
jnp
dec
dec
xorl
mov
xchg
leave
jne
adc
mov
cwtl
and
jg
and
xchg
ds
push
lret
adc
rolb
jecxz
rcl
test
dec
pop
dec
incl
inc
mov
adc
imul
mov
repnz
loop
loopne
ds
mov
pop
jmp
mov
mov
scas
stos
test
sti
mov
outsb
cld
aas
int3
sub
xor
aad
sub
mov
add
add
xchg
fbld
xchg
adc
push
arpl
fdivrl
xchg
or
push
insb
jecxz
shrl
lahf
mov
imul
je
sahf
inc
lret
pop
cmpsb
mov
push
mov
mov
mov
jb
sbb
loopne
pop
xchg
js
jle
cmc
push
popf
inc
xchg
or
push
outsb
jo
and
jb
repnz
inc
inc
cmp
fistpl
inc
out
hlt
jns
aas
jo
mov
insb
addr16
cmp
push
inc
icebp
xor
and
xor
leave
sub
rdtsc
cmpsl
mov
jle
xchg
and
rol
lret
outsb
pop
adc
inc
jne
push
xchg
or
push
enter
adc
cs
or
push
jb
ss
sub
cmp
push
pop
sub
xor
sbb
mov
into
notb
bound
xchg
cmp
push
xchg
mov
imul
lock
je
add
pop
fdivrs
jl
dec
mov
xchg
lret
jnp
adc
leave
xchg
jns
sub
fdivrl
movsb
add
jae
out
sbb
or
or
icebp
add
lcall
out
push
adc
jbe
in
fdivrs
mov
nop
adc
or
fisubl
push
push
mov
and
dec
xor
lds
sbb
das
mov
xor
dec
add
insb
insb
mov
push
pop
sub
xchg
pop
push
pop
xlat
js
push
inc
jmp
sub
iret
mov
push
add
divb
data16
es
sbb
jmp
add
push
add
xor
push
and
fmull
add
xor
fnstsw
mov
jg
mov
xor
aas
loope
lea
mov
xlat
imul
cmp
xchg
leave
pop
fnstenv
jge
jns
mov
mov
dec
xchg
imul
push
or
fcom
or
cmpl
adc
lock
leave
adc
nop
pop
cli
not
push
fisubs
aad
jp
cmpsb
mov
lods
inc
lcall
xor
clc
das
scas
fwait
insl
dec
adc
pushf
arpl
jge
push
das
xor
jnp
pushf
adc
cmp
fildl
pop
cmp
mov
push
negl
stc
cs
sub
mov
idivb
dec
mov
mov
imul
cs
imul
cmpsb
sbb
xchg
aas
sub
out
fmull
inc
addr16
inc
rorl
push
or
and
mov
add
loope
inc
add
or
shl
sti
mov
adc
sub
add
popf
enter
cmp
in
xchg
push
call
mov
dec
mov
pop
inc
push
insb
stos
xorl
out
mov
das
mov
or
xchg
lcall
scas
adc
fwait
lcall
jnp
mov
xchg
dec
sub
jl
stos
stos
scas
xlat
mov
js
scas
out
xor
fwait
out
hlt
popa
fstl
subl
daa
dec
mov
and
out
sbb
jmp
nop
enter
test
or
push
test
mov
popf
mov
sub
loopne
add
sbb
dec
add
mov
jl
cmp
lds
int3
inc
mov
or
jne
das
xor
mov
adc
sub
pusha
mov
pop
push
xchg
lods
fisubl
push
push
data16
out
popf
mov
out
inc
inc
fidivl
sub
cmp
add
xchg
rolb
insl
pop
cmpsl
sti
in
cmp
es
push
imul
adc
popf
and
jmp
jo
mov
addr16
inc
xchg
push
sub
dec
and
jb
sub
or
jmp
mov
cwtl
inc
xchg
in
js
jb
jp
andl
xchg
insl
hlt
fld
jmp
cmp
pop
aas
xor
sbb
outsl
xchg
jnp
mov
andl
out
shl
cmpsb
mov
dec
sbb
push
push
or
test
test
dec
scas
mov
ret
icebp
loop
or
aam
adcb
ljmp
inc
and
nop
stos
cmp
enter
test
rolb
add
sbb
lods
cmpsb
movw
mov
int
jmp
mov
movsb
jle
in
push
xor
test
rorl
fadds
push
lcall
dec
xchg
xchg
jp
mov
jecxz
dec
or
xchg
xor
add
loop
add
insl
repnz
sbb
ret
inc
jb
sbb
std
cwtl
rclb
imul
xchg
or
aaa
dec
mov
aaa
ja
dec
add
xor
sbb
fs
push
in
inc
mov
sbb
bound
test
cmp
mov
lret
jae
test
dec
mov
xchg
mov
jo
pop
sub
scas
mov
xchg
push
jl
sbb
xchg
insl
inc
and
jge
jg
mov
cmp
push
jge
scas
pushf
sti
pop
push
aaa
aam
and
imul
mov
data16
mov
inc
inc
jle
pusha
push
and
pop
lcall
cs
fstps
adc
xor
mov
or
int
popf
sbb
leave
xchg
pop
adc
stc
add
inc
push
out
xchg
push
mov
mov
sbb
pushf
pop
ss
shlb
call
sbb
repnz
bnd
cmpsl
sarb
add
aam
fdivs
in
in
dec
arpl
imul
inc
jo
sahf
addr16
lcall
pop
xchg
dec
adc
sub
rorb
mov
lahf
push
push
pop
fadds
and
incl
pop
in
mov
mov
fidivl
jmp
in
adc
fcmovbe
ss
push
xchg
in
jmp
aam
push
test
pop
jbe
cmc
and
fidivl
out
stos
insl
mov
clc
push
and
test
cmpsb
fadds
lahf
cltd
pop
lods
int
or
dec
fwait
dec
stc
lods
jg
push
dec
daa
push
sbb
lcall
inc
pop
repnz
sbb
sbb
adc
pop
into
mov
adc
stc
aad
cltd
mov
fadds
std
arpl
or
dec
out
sub
pop
and
clc
je
mov
clc
xchg
sti
ljmp
and
cs
je
cmp
daa
adc
aas
out
out
or
sbb
loop
adc
or
shrl
mulb
movsl
jnp
ret
lea
imul
nop
es
push
sub
enter
xor
mov
sub
bound
in
push
mov
mov
push
stc
mov
xchg
sbb
adc
and
xchg
xchg
test
sub
or
push
jp
mov
cmp
adc
les
jmp
dec
lods
push
fwait
or
mov
add
or
fdivs
mov
je
adc
cld
add
dec
and
dec
sub
enter
data16
les
inc
lods
cwtl
inc
leave
ret
xor
xchg
mov
mov
lcall
pop
xor
add
jne
or
ja
and
push
lods
js
or
mov
mov
ror
push
push
addr16
gs
pop
push
aas
inc
push
dec
lds
out
shl
xchg
or
test
out
sub
shll
repz
pop
bound
sti
out
or
lret
pop
scas
cmpsl
fmuls
aad
test
xchg
icebp
and
jecxz
add
repz
out
ljmp
idiv
fsubs
mov
loopne
mov
push
or
mov
inc
jno
dec
jmp
fwait
outsb
add
outsl
and
sub
or
inc
ds
jo
into
push
or
movsb
popa
add
mov
clc
pop
fst
inc
popa
mov
and
ljmp
and
test
pushf
mov
push
fsubrp
sub
cli
andb
and
in
out
adc
enter
lcall
pop
xchg
adc
loop
rolb
xchg
mov
je
pop
cmp
add
loope
cmp
mov
or
sbb
jno,pn
in
pop
std
mov
jecxz
jle
sub
add
cmp
out
les
mov
je
ss
jo
or
insb
lea
or
dec
pusha
or
sub
cltd
lret
sbb
jge
mov
enter
cmp
adc
jb
dec
loope
mov
mov
aam
xor
test
inc
divl
test
lds
jg
iret
pop
in
cmp
pop
mov
or
movsb
insb
jmp
inc
repz
out
dec
dec
push
xchg
inc
jb
pop
xchg
cmp
jl
sub
in
loopne
cmp
xor
cwtl
cmpsb
and
mov
jl
test
insb
jge
popf
pop
inc
dec
push
pushf
jb
jle
xor
popa
xor
pop
inc
ret
push
shrl
adc
inc
fs
sarl
mov
mov
mov
sbb
fs
in
push
sarl
jbe
pop
xlat
in
mov
mov
int
inc
clc
xchg
mov
shr
mov
repnz
roll
vrcpps
dec
pop
stc
mov
add
cld
sub
add
mov
xor
lcall
or
push
in
in
mov
mov
mov
xor
mov
xor
pop
push
insb
cwtl
xor
outsb
dec
mov
mov
jp
shrl
or
adc
scas
cmp
shlb
iret
cmp
sbb
adc
or
lds
arpl
mov
adc
xlat
mov
test
in
xchg
dec
xor
leave
inc
mov
inc
scas
orb
mov
add
dec
clc
fsqrt
dec
outsb
push
sarl
nop
pop
xor
addr16
add
mov
enter
aam
pusha
sbb
cmpsl
fimuls
mov
dec
mov
adc
xor
add
and
imul
xor
dec
and
fxch
rclb
mov
js
enter
jl
sub
jns
mov
mov
clc
lods
vmovntpd
mov
pop
rorb
sbb
jge
ss
in
mov
adc
aad
push
push
mov
aaa
inc
xchg
push
xor
stos
cmp
adc
fcoml
xor
jb
test
outsl
rcll
repz
mov
fs
sti
push
mov
and
shl
sbb
dec
aaa
fisubl
cltd
add
rol
push
mov
cmpsl
ret
ret
popf
mov
sbb
cmp
popf
pop
out
jge
sbb
lahf
add
aas
dec
xor
ficoml
sarb
push
repz
loopne
js
adc
mov
jecxz
imul
sbb
leave
dec
mov
jecxz
xchg
je
vdivpd
loopne
mov
les
fsubl
dec
fldt
cmp
mov
testb
cmp
mov
inc
scas
test
stc
push
daa
xor
aas
mov
dec
sub
jbe
sub
dec
fidivrl
in
xchg
add
jne
fmull
sub
ficoms
sbb
icebp
sub
pop
ja
in
jge
repz
mov
movl
fadds
adcl
cltd
les
pop
inc
outsl
stos
out
jg
sub
xchg
shr
xchg
fwait
es
aam
xchg
jno
dec
jne
popf
cmp
enter
cli
adcl
adcl
pusha
loop
jecxz,pn
imul
movsb
nop
or
out
movsb
jg
ret
movsl
mov
push
xchg
jge
mov
sarl
sub
push
pop
movsl
pop
jnp
stos
les
mov
push
test
sbb
cmp
scas
insb
mov
pop
mov
adc
push
lret
dec
rcll
cwtl
push
int
lret
bound
insl
clc
pop
pop
push
outsl
mov
jge
sbb
mov
mov
jge
sub
repnz
pmullw
mov
xlat
mov
mov
dec
jb
test
mov
xchg
inc
pop
push
jmp
fisttps
and
xchg
fwait
test
test
jne
xchg
sarl
aam
xor
into
aaa
dec
in
cmp
jns
fcomps
ja
sub
into
fisttpl
mov
addr16
fstl
dec
cmc
ret
inc
fiadds
cmpsl
or
dec
or
adc
mov
jle
cmp
inc
mov
xchg
inc
or
notb
fsubrl
mov
jp
add
cmp
mov
addl
das
shlb
jmp
push
and
xor
push
jp
arpl
icebp
push
jmp
xchg
and
jnp
out
arpl
shrl
pop
xchg
enter
jno
xor
jo
xchg
lret
xchg
daa
jae
aaa
repz
ficoms
repnz
inc
lea
out
inc
js
insb
les
jmp
or
popa
addb
orb
xor
jmp
xor
ss
cmp
pushf
xchg
mov
int
call
shl
shl
jns
mov
jg
dec
pop
ret
push
sahf
jne
loop
push
bound
into
sbb
imul
inc
sahf
pop
pop
sbb
mov
sbb
push
and
mov
bound
hlt
imul
orl
jo
in
cmp
jo
das
daa
daa
jg
pushf
fsubrp
xor
push
pop
imull
jo
cmc
out
ljmp
test
cmp
jmp
sbb
je
mov
push
jg
xchg
popf
jge
mov
rorb
test
cmp
ret
jne
ss
dec
lods
in
call
push
jae
mov
push
repz
or
xorl
fstps
into
cmp
lds
lret
lods
addr16
jl
aaa
cmpl
out
lds
and
xor
cmp
pusha
fcoms
bts
sub
stos
ljmp
jg
divb
in
mov
out
pop
push
adc
xchg
add
pop
mov
mov
dec
js
aam
push
out
jne
mov
jecxz
aad
inc
fdivs
into
out
mov
inc
iret
ja
hlt
jg
cs
cmp
push
pop
insb
or
inc
push
fldt
das
lahf
bound
mov
aas
cmc
std
ficoms
or
dec
repz
sbb
push
dec
add
int3
fbstp
movsb
xchg
pushf
mov
arpl
lahf
addb
xor
cld
push
cmc
mov
mov
mov
mov
loope
enter
xchg
or
movl
mov
movsl
jno
xor
subl
out
pop
dec
sbb
popa
in
es
pop
lea
mov
cltd
int3
aas
and
mov
mov
cs
xlat
loope
sub
cmpl
aas
adc
adc
sarb
div
jns
inc
test
pop
mov
lret
stos
pop
fwait
insl
std
outsb
sbb
adc
enter
xchg
mov
sbb
mov
popf
call
faddp
and
mov
cld
push
inc
stc
push
or
push
mov
leave
fwait
jb
pop
cmp
mov
pop
mov
and
pop
jns
mov
mov
dec
ret
jge
push
push
ss
sub
sub
lock
jecxz
ljmp
mov
dec
push
mov
jge
lock
xchg
stc
push
insb
mov
inc
lds
out
dec
out
jno
add
fdivr
pop
movsb
pop
xor
adcb
xor
popf
mov
mov
fistl
je
inc
sbb
hlt
xchg
and
inc
add
mov
jne
push
daa
arpl
dec
addr16
fstp
mov
rorb
xchg
sub
andb
mov
flds
adc
and
mov
out
jg
mov
inc
lds
jle
mov
mov
mov
inc
sahf
aad
sub
jmp
or
enter
jmp
and
cmp
and
cltd
sub
pop
mov
jg
inc
mov
mov
orl
pop
ljmp
jne
and
pop
subl
in
cmc
shrb
negb
inc
jb
mov
push
movsl
in
lds
cmp
inc
xor
sbb
adc
mov
loop
xchg
in
bound
jle
shl
outsl
sbb
subb
mov
mov
push
enter
and
mov
stos
sub
mov
out
daa
push
inc
mov
gs
nop
xchg
sub
mov
cmpsb
in
sarl
cmpsl
rcrl
sbb
jmp
push
xchg
sub
jmp
lcall
jmp
aaa
inc
jo
cli
inc
jl
out
das
cmp
lret
inc
jne
push
mov
or
push
dec
push
loop
push
xchg
dec
sub
xchg
pop
cld
xor
jge
add
jae
subl
out
mov
adc
dec
push
std
cs
mov
mov
dec
pop
test
inc
and
and
mov
mov
pop
jb
lock
fidivs
and
dec
add
scas
sbb
aaa
ret
mov
lahf
js
xchg
ret
lods
mov
jnp
es
and
dec
repz
std
sahf
pop
loope
movsl
push
xchg
test
test
cmp
adc
xor
dec
mov
test
scas
rorb
scas
push
or
out
dec
sbb
jle
add
mov
mov
ret
pop
xor
xor
inc
dec
aas
lcall
jmp
mov
push
sbb
sbb
jp
push
add
popa
sbb
out
and
pop
sub
subb
fwait
sub
leave
les
cmpl
dec
pop
subl
pop
dec
test
bound
rclb
xchg
aas
lahf
ret
sub
call
mov
sbb
jecxz
into
repz
or
cmp
cmp
sahf
insb
push
or
push
sbb
dec
inc
mov
dec
jns
inc
pop
jb
push
gs
lret
xchg
mov
inc
xorb
fldenv
mov
jmp
pop
nop
in
push
xor
addr16
or
es
mov
cs
mov
scas
ret
dec
xlat
sub
stc
push
or
push
incl
jl
mov
fdivs
stos
adcb
adc
mov
call
push
inc
sbb
sbb
mov
or
movsl
jg
push
xchg
mov
fadd
dec
dec
cmpsl
imul
mov
and
dec
mov
adc
pop
mov
popf
push
out
icebp
test
or
xorl
andl
loopne
ljmp
sbb
aaa
push
cmp
mov
xor
clc
dec
stos
test
and
pop
xor
push
add
cmp
int3
daa
inc
xchg
push
test
es
add
shll
dec
ret
pusha
hlt
add
push
fimull
dec
addr16
mov
or
jne
mov
imul
rolb
xchg
test
out
aaa
push
andl
adc
idivl
sbb
repnz
std
loop
dec
jp
ds
rcr
ja
lret
pop
mov
ret
mov
inc
cmpsl
jecxz
pop
and
xor
aas
inc
or
sub
repz
push
mov
loope
lret
mov
or
jbe
rolb
movsb
out
mov
jns
sahf
push
adc
and
popf
or
mov
movsb
fiaddl
cmpsl
dec
add
jo
xchg
shll
inc
inc
mov
or
mov
outsl
mov
xchg
out
xlat
xchg
sbb
mov
dec
pushf
in
int
sbb
test
or
sbb
rcrb
xchg
das
mov
xor
mov
xor
sahf
add
insb
sub
inc
outsb
jg
sub
cmpl
dec
sbb
lods
adc
mov
andl
mov
mov
pop
icebp
hlt
mov
mov
xchg
xlat
pop
aaa
mov
mov
pop
loop
mov
push
in
in
roll
lds
add
xor
daa
fists
fadds
cmp
adc
mov
inc
lret
xchg
add
dec
rolb
and
cmp
cltd
sub
mov
stos
and
and
adc
dec
leave
pop
insl
insb
stos
lret
push
mov
in
xchg
xchg
push
adc
mov
push
jmp
sti
imul
and
aaa
xchg
mov
add
ret
mov
pop
mov
xor
in
iret
hlt
stos
fwait
jbe
rolb
or
adcb
or
cmp
xchg
out
mov
decb
pop
movsl
fstpt
nop
push
cmp
scas
push
sbb
inc
ret
cmp
out
stc
jmp
mov
inc
or
pop
test
ds
dec
test
cmp
dec
adc
mov
jg
insb
insb
rcl
inc
mov
cmp
icebp
insb
cmp
dec
push
cmpsb
inc
mov
sarb
aas
and
mov
insb
ljmp
mov
mov
lret
ss
repz
iret
repnz
sbb
jge
pusha
inc
adc
jle
cli
int3
sbb
push
out
stc
sub
and
mov
lods
or
push
push
cld
jae
sbb
int3
pop
loop
dec
orl
loope
loop
and
pop
mov
sti
ja
mov
aam
mov
jno
leave
mov
aam
pop
pop
jecxz
or
jo
adc
imull
pop
push
and
andb
pop
cwtl
or
mov
pop
imul
lcall
jns
dec
fs
push
pop
pop
in
or
sub
stc
ret
jle
rorl
sub
imul
aam
cld
arpl
cmp
sub
int
sahf
add
insb
add
dec
in
mov
jbe
xor
addr16
ds
sub
aaa
fisttps
adc
xchg
nop
call
imul
lock
sbb
out
enter
mov
jae
arpl
sbb
out
add
jae
xchg
faddl
mov
push
ret
xlat
test
add
jp
roll
cmp
repnz
call
movsl
xor
push
lods
ljmp
or
push
das
lahf
fdivs
repz
arpl
ret
cmpsb
sub
imul
iret
test
rorl
lahf
nop
dec
inc
lods
jae
les
test
mov
mov
sti
addb
cmp
cmc
push
sub
or
sub
xchg
lret
mov
int3
push
iret
cmp
test
adc
mov
dec
orb
sar
cmc
mov
mov
les
fnstenv
inc
sti
hlt
cmpl
xlat
xchg
push
mov
xor
cltd
jge
lods
test
pop
popf
lcall
fistps
push
adc
add
fistps
jge
xchg
sbb
adc
inc
pop
pop
dec
dec
sarb
pop
outsl
cli
mov
xchg
mov
ret
or
hlt
out
sahf
cmp
fs
inc
test
push
inc
es
aaa
jecxz
hlt
mov
pushf
stos
xchg
push
push
inc
dec
aas
cmpsb
lret
test
outsb
cmp
sbb
mov
push
int
inc
imul
daa
into
fidivs
sub
outsl
add
adc
loop
jo
adc
mov
insl
iret
mov
push
repz
and
call
sbb
jbe
cmp
sub
adc
call
pop
sbb
sub
loope
in
dec
or
test
movsb
cli
fdiv
xchg
js
sbb
or
into
mov
lea
repnz
mov
mov
adc
shll
xchg
mov
fcom
mov
mov
mov
xlat
sub
movsb
arpl
popa
xchg
mov
cs
mov
add
cmp
cwtl
stos
lods
mov
jns
add
mov
jle
cmp
test
sti
and
cmp
pop
and
jno
mov
sahf
std
leave
mov
dec
popf
gs
fcompl
imul
popf
mov
pop
add
mov
movsb
jg
cmc
cmp
dec
mov
cmp
push
jge
sarb
push
push
sbb
shll
inc
mov
iret
fstp
mov
mov
stc
fwait
inc
test
stos
mov
add
xchg
add
dec
fstpt
inc
jl
insb
push
or
dec
mov
pop
pop
xorl
inc
cmp
sub
mov
push
std
popf
sahf
fwait
fwait
ds
jle
xor
pop
jp
mov
mov
cmp
popa
iret
adc
pop
insl
out
cltd
sarb
dec
rcrb
mov
ljmp
push
gs
fdivrl
mov
mov
mov
mov
movsl
es
mov
push
aad
in
jo
mov
jmp
cmpsl
popf
inc
adc
mov
mov
ss
sbb
mov
sbb
lods
inc
int
rcrb
aas
lret
pop
bound
and
cmpsl
in
jp
insb
data16
mov
pop
shr
dec
ds
and
jecxz
pop
in
lods
jbe
orl
jo
fwait
ja
cmp
sub
mov
push
les
das
sarl
fiaddl
dec
insl
sahf
cmp
jns
cmp
or
or
gs
xchg
test
jbe
inc
std
mov
in
dec
rolb
push
stos
fadds
in
adc
ret
adc
sub
push
shrb
mov
stos
adc
mov
mov
pop
inc
in
xlat
push
cmp
gs
push
test
aad
push
push
mov
cmp
jne
cmp
outsb
imul
inc
hlt
movsb
ret
aas
out
movl
daa
clc
pop
insl
ja
cmp
cli
add
jno
mov
test
push
xchg
fnstenv
sub
sbb
xlat
push
sub
rol
call
mov
adc
xbeginw
ror
inc
inc
mov
push
cmp
adc
inc
push
mov
unpckhps
loope
sub
inc
jae
test
in
cmp
fnstcw
pop
xor
int3
jecxz
sti
xchg
in
pop
insb
lcall
arpl
dec
das
xchg
inc
jl
subb
xchg
insl
fldl
xchg
cmp
cld
add
idivb
dec
push
push
mov
icebp
mov
out
loope
and
rolb
push
and
adc
imul
fstl
in
jl
cld
jmp
inc
loope
scas
lret
popf
cs
or
lods
jno
sbb
mov
xchg
inc
cli
popa
push
inc
inc
ja
sub
lods
adc
push
mov
ficoms
pop
jno
test
push
dec
pop
dec
xchg
stos
sti
or
push
fistl
jle
loope
pusha
test
mov
jnp
or
or
shlb
pushf
or
dec
rorl
push
cvtps2pd
jge
mov
mov
dec
scas
mov
pushf
into
call
sub
repnz
leave
jbe
hlt
push
sbb
add
dec
out
xchg
mov
adc
call
stc
mov
push
imul
cmp
and
cli
shrb
mov
ljmp
sub
sub
xor
test
and
cltd
addr16
adc
les
push
pop
xchg
xchg
push
pop
jmp
lcall
sub
push
dec
xchg
test
sbb
push
ljmp
inc
fs
shrb
adc
cmpb
icebp
mov
inc
jb
inc
adc
test
push
clc
ljmp
aaa
dec
sbb
mov
in
mov
loop
je
mov
ret
push
cmp
je
pop
shl
add
rep
stc
pop
mov
clc
out
xchg
adc
mov
lcall
inc
jbe
xor
lcall
pop
xchg
call
into
mov
pushl
sbb
add
xor
outsl
fmuls
jle
xor
jmp
sbb
or
mov
jb
push
add
cmp
sub
sub
mov
andb
mov
std
push
mov
push
cmpsb
fnstsw
cmp
ss
pusha
fistpll
xchg
jne
loopne
fs
in
sahf
clc
cmp
shrb
lahf
sti
cmc
xchg
fists
add
mov
inc
inc
and
xchg
daa
test
imul
inc
adc
lods
and
xor
lret
mov
arpl
outsl
xchg
push
inc
and
xor
mov
cmp
push
rcl
les
in
mov
decl
sahf
int3
add
mov
leave
mov
mov
jo
imul
rorb
sti
or
mov
fisubrl
dec
hlt
test
loop
mov
and
and
push
scas
fwait
sbb
stc
scas
or
xchg
pop
std
in
fwait
cmp
cli
xorb
pop
scas
xchg
mov
adc
inc
test
stc
xchg
ja
xchg
jg
mov
dec
ljmp
or
adc
movsb
push
xor
and
mov
xchg
adc
jmp
nop
sbb
pop
out
shll
mov
pop
addl
jl
movsl
stos
adc
inc
dec
aam
movsl
loope
push
mov
adc
or
cld
in
lcall
xchg
pop
jns
push
cmp
adc
xchg
inc
fsubrl
enter
sub
inc
pop
lds
test
cwtl
mov
fucom
cmp
arpl
inc
pop
ds
outsl
mov
push
dec
xchg
lds
divb
mov
lahf
cmp
leave
mov
shll
or
push
jmp
es
popf
inc
movaps
movsb
mov
push
sub
call
and
scas
cli
sar
std
loope
shlb
dec
mov
add
add
aaa
lcall
rcrb
pusha
xor
xchg
call
aad
mov
mov
dec
fdivs
xchg
pop
sbb
or
cmpsb
add
sub
push
mov
pop
sbb
sub
adc
sahf
mov
or
fwait
sti
in
pop
inc
xor
arpl
fsubl
mov
fcoml
nop
icebp
lcall
push
scas
fstpl
jnp
imul
cli
arpl
sub
mov
aad
stc
ss
and
pop
pop
jbe
call
pop
mov
pop
orl
and
jne
imul
mov
mov
or
stos
mov
xlat
jl
pop
lret
scas
mov
test
pop
ret
mov
jno
icebp
adc
xchg
ljmp
pusha
cmp
insl
pop
xchg
mov
rcr
push
jl
addr16
in
lahf
insb
call
or
jnp
sub
cmp
aaa
out
xchg
les
sub
in
inc
in
cli
jle
fistps
jl
aas
hlt
sub
popa
sub
mov
mov
xchg
adc
test
pushf
aam
ficompl
xor
push
inc
push
jns
in
push
dec
mov
in
jg
xchg
mov
ret
xor
or
sbb
cmp
sti
sti
loope
adc
lcall
xor
outsb
mov
mov
sub
mov
fnstsw
out
add
rdpmc
sarl
lahf
jmp
adc
jmp
andl
cmp
sti
push
jmp
sarb
push
mov
subb
cmp
repz
adc
pop
mov
pop
add
cmovns
mov
jp
mov
loop
inc
xor
inc
push
pop
sarl
sbb
xor
js
xlat
xchg
enter
push
cmpsl
mov
mov
fwait
mov
mov
mov
xchg
pop
mov
int
pop
mov
jle
insl
dec
adc
mov
test
out
add
push
pop
sbb
pop
sbb
mov
xlat
and
rorl
test
mov
popf
push
sub
test
testb
lods
rcr
movsl
xchg
pop
clc
pop
sahf
mov
cs
pop
int
cmovge
cmc
shlb
inc
lcall
cltd
cmp
aas
mov
rorl
pop
or
push
mov
fstl
push
cltd
ret
add
add
fsubl
add
xor
test
aam
dec
push
push
outsb
nop
filds
je
sbb
out
in
jg
or
xchg
jb
jae
add
mov
ret
adc
shll
adc
gs
pop
ret
repnz
mov
push
icebp
pop
cmpsb
add
nop
negb
and
ja
pop
popa
scas
dec
test
mov
cmp
sbb
pop
insb
inc
addl
push
cmp
icebp
mov
ljmp
popf
mov
pushf
xor
sbb
outsl
repz
insl
adc
jl
nop
aaa
and
stc
mov
loope
inc
nop
jg
fdivp
and
xor
dec
addr16
inc
mov
fwait
or
cmp
fwait
std
aas
jmp
enter
daa
xor
xchg
push
imul
cmp
xchg
inc
or
ret
subb
push
in
lods
cmpsl
rorb
icebp
cmpsl
dec
push
fldcw
out
gs
out
push
mov
xchg
xor
sti
cmc
shl
ficomps
ja
iret
inc
nop
add
popa
dec
cmp
xlat
mov
mov
ljmp
or
lods
xchg
dec
jo
cltd
das
jle
int3
ljmp
divl
test
and
sub
sub
mov
pop
mov
xchg
xchg
sbb
call
in
cmpb
push
cld
inc
clc
hlt
jg
inc
cld
das
cmp
inc
cmp
push
clc
fs
std
adc
loope
loop
leave
mov
lret
mov
addl
sbb
jl
cli
fisubrs
cmpsb
xchg
xchg
jecxz
sub
dec
pop
popf
pusha
in
pop
mov
jp
push
lods
jmp
cmp
sbb
mov
push
imul
inc
shll
in
repnz
and
scas
cmp
mov
movsl
pushf
sahf
fnstsw
les
pop
dec
dec
clc
out
cmc
or
rcr
dec
das
jo
lahf
mov
idivl
test
popa
push
stos
sbb
dec
sbb
dec
add
rcrb
fstl
das
inc
add
pop
div
movsl
je
mov
addr16
ficoms
sbb
movsb
pop
sub
daa
cmpb
dec
inc
jnp
ljmp
mov
hlt
dec
insb
mov
sbb
and
push
filds
push
test
roll
lea
add
mov
or
jl
cmp
cltd
ret
pop
ret
andb
popf
cli
fidivrl
ret
lret
mov
dec
cltd
xchg
mov
pop
les
xlat
or
push
gs
scas
and
push
pushf
pusha
adc
ja
jp
push
mov
movsl
or
pop
icebp
xchg
push
test
cmp
incb
jg
dec
dec
cmpsb
out
add
test
addb
fstps
mov
xchg
outsl
repz
cmp
inc
in
xor
dec
pusha
rcr
in
xlat
cli
jl
xchg
xor
sub
lret
lret
pusha
out
imul
cs
aaa
sbb
mov
push
xor
jns
ljmp
push
je
lret
ds
push
lret
movsb
sarl
add
mov
sub
jns
ljmp
mov
xor
cltd
add
mov
dec
outsb
popl
push
mov
push
fmulp
sahf
les
push
outsb
push
pop
dec
cmp
das
jns
ficoml
pop
fs
in
mov
fimuls
fcomps
aad
add
mov
add
xor
test
cwtl
in
pop
shlb
jae
scas
dec
jg
andps
fdivr
sbb
push
xlat
cmp
cmp
scas
sti
shlb
jns
and
mov
std
js
pop
xor
or
or
sbb
xchg
xchg
lods
dec
out
and
ss
inc
dec
push
push
add
repz
and
int3
sbb
dec
scas
mov
push
mov
mov
add
add
or
out
fldz
ret
repnz
flds
scas
repz
jno
pusha
mov
in
ret
inc
hlt
mov
out
stos
pop
rcrb
jb
mov
in
dec
lret
clc
sub
in
mov
scas
and
jae
mov
dec
dec
faddl
movsl
inc
sbb
and
sbb
push
or
mov
nop
and
inc
js
data16
mov
es
jp
sbb
cld
orb
stos
cmp
loopne
or
mov
iret
sbb
lock
fsub
or
clc
adc
push
imul
icebp
or
pop
loop
or
xorb
sbb
daa
xchg
xchg
test
mov
cmp
sbb
sti
xor
adc
call
mov
ret
mov
xchg
jne
mov
or
jecxz
loop
pop
shlb
lds
xchg
jg
test
and
xor
mov
inc
imul
andb
fcomps
ds
fnstcw
repnz
mov
pop
pop
pop
pop
lret
iret
insb
xchg
sbb
mulb
push
xor
mov
push
addb
sbb
dec
test
popf
and
xchg
mov
fs
outsb
roll
dec
mov
aaa
movsl
mov
adc
stos
idiv
es
out
int
sub
and
test
dec
es
lds
test
or
lahf
inc
fmuls
xor
mov
inc
mov
insl
movsl
popa
adc
inc
jmp
add
xorb
sub
notl
or
xor
cmp
xchg
lods
scas
cli
cmp
lods
jbe
mov
mov
outsb
lods
ret
xchg
push
xlat
inc
aad
out
stos
push
jmp
jg
in
ret
dec
mov
jg
insb
test
or
sub
xor
notl
xchg
lret
adc
js
mov
push
movsl
mov
inc
inc
enter
sbb
jg
imul
mov
int
xlat
mov
stos
cmp
push
cmc
sbb
call
das
pop
fcomp
lret
shll
cmp
aas
lret
adc
jp
shrl
pop
jne
repz
fmull
adc
mov
fists
cmp
shr
fadds
mov
push
lock
push
stos
xchg
jle
pop
xchg
mov
lret
cld
adc
sub
adc
loopne
push
pop
push
stc
add
aas
sub
and
pop
mov
adc
or
mov
xlat
xor
cmp
gs
jle
cmp
outsb
sub
pop
add
push
in
push
mov
mov
in
movsl
mov
jbe
jns
je
push
sbb
push
loop
in
roll
aas
sahf
pop
fistpll
inc
pop
test
sbb
sbb
aam
xchg
aam
jnp
mov
iret
dec
pop
fcompl
xlat
push
out
shlb
sahf
flds
repz
icebp
xchg
insb
in
xchg
pop
iret
loopne
xor
sbb
fildl
sbb
mov
jo
pop
bound
fucomip
mov
pop
ficompl
and
pushf
ret
loop
gs
fmuls
pop
scas
dec
dec
xchg
pop
mov
xlat
fbstp
xor
push
sbb
mov
add
mov
out
shlb
aaa
or
xchg
roll
mov
imul
push
adc
mov
mov
cmp
icebp
jns
xchg
sub
and
adc
jo
cmpsl
inc
and
scas
mov
mov
sbb
ljmp
pop
test
out
sub
pushf
push
pop
cmp
fucomip
add
scas
cmp
in
mov
and
mov
int3
out
mov
cmp
lcall
pusha
mov
pushf
mov
dec
test
jmp
push
jecxz
sbb
cmp
iret
in
pop
insb
sub
push
push
divl
sbbl
adc
fwait
aad
pusha
cmp
and
add
adc
xorb
xlat
nop
pop
sahf
mov
and
daa
fwait
add
push
loop
add
xor
ja
cmpb
pop
in
popf
push
fdivrs
aam
bound
cmpsb
mulb
stos
mov
movsb
lds
lret
lret
sub
ds
imull
pop
push
push
stos
mov
xor
sbb
hlt
push
or
mov
es
div
clc
lods
pop
addr16
fisttpl
xchg
mov
xchg
inc
jb
fs
std
movsbl
lea
cld
ljmp
jg
xor
pop
xchg
xchg
jmp
aam
dec
repz
and
xor
cmc
mov
jl
ret
sbb
je
mov
fs
and
mov
ss
mov
push
inc
imul
adc
addr16
scas
jp
jecxz
pusha
inc
ja
add
stos
xchg
test
sti
test
lds
outsb
jl
mov
xchg
rorl
pop
jne
addr16
nop
mov
pop
dec
add
push
pop
xchg
lret
arpl
stos
mov
popf
pop
movl
arpl
jne
mov
lea
sarl
in
xor
jno
add
lret
mov
push
push
jnp
mov
jmp
mov
adc
movb
push
add
mov
xchg
cmp
adc
js
mov
mov
ret
pop
add
aas
mov
pop
sbb
xor
cs
cli
mov
xchg
or
jle
inc
sti
shll
mov
ret
fs
js,pn
repz
sub
ds
add
lods
pop
cmp
sti
cmp
fsub
ret
and
pusha
xor
jecxz
cwtl
jecxz
movsl
dec
push
pusha
mov
in
lea
add
in
repz
inc
mov
outsb
les
mov
hlt
push
xor
js
cltd
jnp
push
xor
lods
adcl
jbe
pop
sub
push
pop
dec
es
sbb
push
mov
dec
jnp
push
aam
lret
push
lea
cmp
sbb
icebp
or
das
inc
xchg
inc
fdivr
cmp
dec
xchg
jmp
cltd
aam
icebp
rolb
or
sbb
lods
push
test
add
mov
shlb
bound
scas
loop
pop
lods
mov
shr
sbb
jne
je
ds
pop
cmp
test
pushf
push
xor
push
loope
sbb
and
fldcw
es
adc
lock
stos
sbb
mull
xchg
negl
mov
enter
and
or
pop
mov
jecxz
jae
subl
pusha
sbb
leave
aad
cmp
daa
adc
xor
int
ret
repz
push
cmp
stos
pop
dec
into
mov
cs
push
hlt
mov
popa
adc
add
push
enter
enter
dec
fnstsw
shrb
mov
fisttpl
aad
cmpsb
mov
inc
push
push
dec
add
out
mov
push
adc
sub
xor
push
outsb
dec
adc
stos
int
push
repz
sti
cwtl
out
leave
pop
add
cwtl
les
cmp
shr
dec
out
mov
push
and
add
dec
fdivrs
shrb
enter
push
jl
add
xchg
mov
das
pop
fdivrl
xchg
cmpsl
lret
jb
dec
fstpl
leave
stos
pop
cmpsl
je
test
dec
mov
push
data16
mov
sub
jp
sbb
jae
and
push
lds
lret
mov
or
ds
mov
clc
leave
sub
xchg
fstp
cmp
sub
out
test
cmp
test
inc
sahf
rcrb
cld
sub
mov
pop
dec
pop
fwait
pop
idivl
inc
mov
negl
addr16
push
je
inc
cmpsl
lret
dec
cmp
fadd
mov
jecxz
in
jbe
jge,pn
out
mov
test
mov
scas
inc
mov
pusha
xor
push
stos
and
sub
mov
fdiv
int
mov
outsb
lahf
or
int3
lods
dec
sub
ja
rclb
or
lock
lods
mov
ds
aad
adc
je
adc
mov
pop
pop
mov
rclb
jb
ds
push
fnsave
and
negl
push
xchg
or
mov
mov
loop
xchg
bound
jbe
push
rolb
or
popf
mov
push
push
or
mov
inc
xor
loope
dec
inc
into
pop
ja
loopne
mov
and
je
addr16
push
aad
push
sub
lea
push
dec
lods
mov
lahf
ss
je
fldenv
jl
mov
pop
rorl
cld
sbb
hlt
in
dec
iret
mov
clc
popa
gs
push
std
in
cmp
data16
call
sahf
pop
popf
outsb
in
jecxz
mov
push
daa
cmp
out
cld
insl
jle
scas
adc
mov
xor
fimuls
test
outsb
jl
shrb
rclb
pop
push
clc
pop
das
cmpsl
mov
push
vphaddubq
and
sbb
add
xchg
mov
pop
jo
jne
xchg
sub
cltd
inc
scas
into
insb
addr16
cmpsl
push
call
pop
cmc
jl
mov
sbb
notb
mov
in
xor
lods
std
cmp
jecxz
loop
xor
push
push
xchg
xchg
sbb
mov
loop
in
or
leave
test
dec
inc
cmc
xchg
test
orl
xchg
cmp
pusha
and
pusha
fucomp
lret
adc
jl
cmpsb
scas
aam
fadds
adc
jmp
mov
sub
mov
add
mov
xlat
jg
cli
mov
pop
repz
or
lret
push
int3
push
xor
mov
mov
cwtl
xchg
aad
add
xchg
pop
xorl
repz
je
and
xor
mov
shl
pop
xor
lret
out
adc
add
loop
xor
sub
insl
jb
insl
adc
jle
imul
push
cmp
lcall
mov
cmpsb
mov
in
into
aaa
mov
out
jbe
sub
cmp
add
jle
test
or
adcb
insl
jle
push
sub
mov
pop
pop
and
jecxz
mov
shl
cmp
dec
inc
sbb
add
or
jl
inc
shll
sub
mov
add
movsb
cmc
popf
shl
mov
and
fstp
inc
sub
cmp
cmpsb
ret
ja
or
ljmp
fisubrs
cmpsb
lods
push
sbb
js
adc
cli
cli
jmp
aas
pop
arpl
int
fdivl
inc
cmp
inc
inc
push
int
or
inc
mov
pop
and
or
jge
push
push
fldl
xchg
movsl
jo
sub
in
icebp
ljmp
inc
fs
adc
jo
mov
pop
inc
xor
fwait
xchg
mov
jne
jp
inc
pop
push
cltd
sti
add
pop
sti
adc
dec
or
push
mov
sbb
mov
and
mov
add
pop
arpl
outsb
mov
or
push
add
push
xor
push
mov
mov
xlat
out
cwtl
jecxz
cmp
sbb
aaa
mov
push
push
aam
insb
and
dec
pop
cmc
andb
cli
jae
adc
dec
add
lock
xor
inc
bound
popa
outsb
dec
jmp
addr16
adc
pop
scas
mul
mov
jne
lock
xchg
xchg
out
jns
xor
insb
dec
insb
mov
push
fadds
out
iret
loop
adc
cld
sbb
and
mov
mov
imulb
push
ss
ja
outsl
fmul
and
dec
fcoml
repnz
cmp
cwtl
cmp
dec
lods
push
lahf
sub
dec
btc
cmc
lods
add
test
cmp
or
inc
push
mov
pop
xchg
cmc
push
mov
push
shlb
cmp
mov
cmpsb
push
xchg
cwtl
clc
enter
and
xchg
pop
jb
add
js
mov
push
fldt
rcrb
push
cmpsb
bound
pop
cmpsb
jae
dec
cmpsb
fnstenv
out
jmp
adc
int3
adc
pop
loopne
push
jmp
sub
pop
add
scas
std
stc
mov
pop
repnz
les
js
adc
xor
xchg
mov
push
mov
mov
add
pusha
or
pop
jbe
sub
es
movsl
mov
fnstsw
outsb
sbb
jg
nop
and
cmp
mov
sarl
addr16
shlb
lret
test
inc
cli
add
hlt
lods
rorb
mov
sbb
inc
sub
lods
cwtl
sbb
pop
gs
loopne
pop
add
iret
mov
lret
in
pusha
gs
xor
mov
ljmp
imull
sub
fidivrs
stc
pushf
xchg
jle
push
or
xchg
push
repz
int3
bound
and
xchg
jmp
inc
mov
mov
and
inc
inc
jecxz
xchg
mov
sbb
dec
cltd
das
aaa
mov
ljmp
push
lret
test
xor
mov
adc
adc
lret
addb
aam
sbbb
int
and
pop
xchg
mov
sub
pop
jnp
imul
aaa
scas
sbb
push
pop
pop
and
push
test
xchg
insl
movsl
mov
aaa
data16
xor
lcall
shrl
jmp
cltd
and
ljmp
mov
jge
ret
sub
and
xchg
cli
pushf
imul
dec
sub
inc
icebp
icebp
test
imul
loope
and
aam
mov
ret
jecxz
dec
dec
clc
add
push
incl
xchg
dec
loopne
adc
cmpsb
push
outsb
mov
cmc
xchg
mov
movsl
icebp
fnsave
push
cmp
inc
sbb
jl
xchg
out
popf
ret
push
mov
insb
jbe
lods
jbe
and
mov
pop
popa
rorb
push
lea
sbb
mov
int
insl
pop
mov
mov
imul
dec
stc
cmpsl
rorb
in
push
mov
mov
test
dec
out
xor
pop
or
jnp
push
and
mov
cmpsl
out
dec
xchg
or
mov
lret
push
jecxz
jecxz
pusha
and
cmpsb
inc
xor
pusha
dec
imul
flds
jge
lcall
clc
hlt
mov
and
or
xchg
pop
jp
pop
shl
xlat
add
pop
xor
shrb
jbe
xchg
lcall
pusha
and
fnstcw
scas
aas
outsl
cmc
outsl
mov
inc
mov
xchg
cmp
or
sti
imul
jns
add
ja
inc
xchg
or
sub
into
mov
fs
icebp
ja
jecxz
aad
aaa
adc
int3
data16
push
mov
or
imul
loope
std
mov
xchg
insb
push
mov
xor
mov
cs
inc
xchg
cld
adc
hlt
xchg
mov
jecxz
ljmp
mov
lcall
lcall
xor
fildll
jge
loope
xchg
xchg
inc
jnp
jb
push
in
leave
xlat
lcall
mov
popa
sbb
ja
fimuls
push
sub
adc
out
inc
mov
jbe
mov
addl
notl
add
sbb
cmp
fs
shll
popa
push
es
jge
push
dec
xchg
lods
add
jbe
sub
inc
sub
or
and
mov
push
movsl
adc
jno
mov
pop
dec
mov
pop
dec
les
nop
push
mov
and
dec
mov
js
push
stc
fcomi
sub
cli
arpl
add
mov
jp
push
inc
add
cmpsl
sbb
and
aaa
xor
xor
nop
fnstenv
mov
inc
inc
jo
or
stos
xor
pop
inc
repz
imul
sbb
ret
mov
fisubl
mov
inc
movsb
enter
mov
or
dec
mov
jle
iret
push
xor
in
fistl
addr16
lock
mov
mov
ret
mov
push
add
jae
xchg
sarl
fimull
stos
std
aad
jge
xor
mov
cmp
dec
xor
xchg
enter
sbb
or
mov
ljmp
push
push
xchg
leave
out
pop
and
push
jbe
and
std
push
inc
cmp
jno
cmp
jns
sub
mov
xchg
mov
adc
dec
shr
jge
dec
sti
jmp
insb
inc
xchg
mov
mov
jo
test
call
sbb
pop
fstp
bound
xor
inc
out
inc
test
xlat
push
rclb
and
push
dec
dec
js
push
icebp
sbb
out
pop
les
in
dec
insl
je
sti
sub
pop
xchg
pop
out
mov
gs
jb
sbbl
sbb
mov
jg
loopne
lock
loopne
adc
sbbl
int3
cwtl
mull
outsl
int
cli
mov
roll
cltd
pop
rorb
xchg
imul
or
xchg
cld
rcl
adc
dec
jne
inc
mov
mov
loope
xor
mov
jno
stos
fcmovu
mov
adc
cmp
hlt
lock
dec
pop
mov
xor
movsb
ret
jecxz
mov
jnp
xchg
addl
ljmp
cmp
sub
xchg
jg
lahf
dec
lods
repz
mov
or
dec
clc
testl
mov
push
mov
pop
cmp
loope
jno
subb
push
das
testb
xor
leave
ja
aaa
mov
gs
lcall
mov
je
cmpsb
call
xchg
lods
pushf
jae
pop
adc
jbe
sbb
mov
sub
and
icebp
xor
dec
bound
adc
jp
orl
mov
mov
clc
bound
xchg
in
push
shlb
pusha
xlat
inc
pop
pop
add
lods
xchg
sahf
stos
fwait
jnp
mov
xlat
ljmp
cmp
jnp
push
mov
mov
outsl
iret
dec
adc
es
mov
out
lds
xchg
scas
add
iret
adc
gs
bnd
ss
pop
aaa
mov
clc
in
jns
das
repz
pop
das
xchg
jne
dec
cmpsb
insb
dec
popf
sub
jle
push
mov
xchg
cmpsl
inc
jmp
sbb
mov
cmpsl
sysexit
out
out
cmp
adc
int
or
and
imul
and
xor
and
mov
out
adc
adc
cmpsl
clc
pop
loope
mov
jo
scas
mov
inc
fs
cltd
sbb
or
repz
add
iret
pop
mov
rolb
rorb
xchg
mov
adc
fstpt
jg
pusha
sbb
push
cmp
lds
jg
add
aam
ss
aam
sbb
mov
inc
in
fisttpll
je
mov
fwait
push
icebp
and
xchg
inc
lcall
pop
cmpsl
aad
aad
or
pop
jno
mov
dec
jae
js
add
sub
dec
aas
or
adc
into
adc
test
and
sbb
mov
pop
fstpl
push
sbbb
pop
sbb
fnstenv
mov
push
adc
test
dec
mov
push
sbb
std
mov
mov
push
pop
or
fstl
fimuls
xor
mov
ret
int3
sub
test
sbb
jne
js
inc
aaa
clc
icebp
sbb
pop
push
scas
ds
adcb
jbe
sbb
pop
push
adc
ljmp
push
inc
inc
xchg
cs
addr16
test
rorl
xchg
out
fisubrl
mov
jo
adc
cmp
mov
nop
push
js
push
outsl
imul
bound
pushl
aam
sbb
lahf
dec
shll
push
and
insl
sbb
popf
lea
lea
cld
pop
xchg
and
loope
jp
sbb
sbb
ffree
dec
adc
inc
jno
pop
mov
fbstp
incl
adc
pop
xor
stos
or
mov
insb
adc
test
repnz
push
pushf
add
popa
push
in
insl
pop
inc
cltd
repz
les
fistps
sbb
ss
loopne
cmp
jne
call
icebp
lock
sub
sbb
shrl
sub
scas
adc
cmp
fsub
rcr
sbb
lods
repz
imul
nop
mov
lock
xor
adc
leave
add
fcoml
jae
in
add
in
rorb
mov
mov
out
das
scas
sti
sub
dec
mov
mov
scas
mov
shll
mov
push
adc
scas
cmp
adc
inc
scas
movsl
dec
stos
hlt
push
or
xchg
aad
mov
adc
fwait
add
push
cmpsb
cli
or
pusha
cld
in
push
add
jmp
mov
fwait
and
inc
xchg
cltd
sbb
cld
mov
inc
sbb
fisubl
pop
ja
int
inc
sub
repnz
movsb
sbbb
jecxz
push
sub
cmp
xor
sbb
sub
cmc
dec
ljmp
inc
adc
lret
mov
int3
xor
dec
aas
dec
or
jno
shll
outsl
ljmp
pop
mov
movsl
jle
mov
std
push
ret
add
ljmp
sub
adc
es
std
xor
cmp
jl
pop
sbb
imul
pop
mov
ja
inc
rcrb
and
xor
test
inc
fsub
in
or
adc
test
jp
xchg
dec
mov
sbbb
sub
adc
repz
pop
adc
movsb
cmp
xor
sub
or
cmp
sti
fists
lds
test
push
dec
out
push
cmpsl
sbb
lods
pop
sub
shll
pop
lock
icebp
or
xor
mov
ret
push
mov
leave
inc
lret
mul
push
gs
mov
gs
dec
jnp
arpl
std
and
or
insl
scas
cmp
popf
cmp
add
jle
call
jns
imul
jmp
push
inc
jle
into
stc
xor
xchg
xchg
mov
insl
mov
or
xor
gs
xchg
out
jb
mov
cwtl
xchg
ss
xchg
and
cmp
jg
aas
and
pop
xchg
jnp
ret
ret
pop
fstl
pop
xchg
mov
gs
sbb
or
iret
mov
jg
sbb
fisubl
pop
mov
or
or
pop
ret
repnz
ror
mov
sti
lret
fldl
inc
cmp
jae
cs
inc
jbe
ss
cmp
jo
jl
push
jnp
adc
pop
jno
outsb
xchg
xchg
or
call
sti
sbb
dec
add
shrb
ss
idivl
sub
jge
divb
inc
lods
xchg
fs
aad
dec
roll
cwtl
xor
nop
aad
pop
dec
fcom
arpl
outsb
clc
lods
push
lcall
dec
andl
test
jno
jo
xchg
loopne
pop
xchg
lock
push
jecxz
popf
xor
test
cmp
pop
daa
or
icebp
cld
xchg
xchg
stc
sub
subb
testb
sarb
pushf
cld
or
gs
pop
xlat
pushf
xor
cmp
test
cmp
mov
sbb
loopne
stos
pushf
or
cmp
push
add
into
in
adc
lods
cmpsl
cmp
pop
jae
cwtl
rcl
mov
mov
outsl
cmpl
xor
jp
into
lods
pusha
daa
arpl
out
mov
and
repnz
fisttps
rclb
cwtl
and
fs
hlt
adcl
jns
loope
add
adc
fwait
insb
loope
dec
int
fistl
pop
inc
jl
jg
mov
sub
adc
mov
aad
xchg
jle
jb
stos
lcall
push
mov
sbb
sub
jecxz
call
movsb
inc
dec
int
mov
xor
and
pop
arpl
lds
cli
xlat
push
jo
cld
push
adc
scas
mov
pop
popl
in
call
fildl
xor
jecxz
adc
push
mov
cmp
push
cltd
test
xchg
popa
pusha
cmpsb
js
test
scas
dec
cwtl
bnd
pop
push
xchg
dec
and
xor
loopne
inc
and
inc
ja
dec
add
mov
push
mov
frstor
fwait
outsb
jmp
xchg
js
mov
inc
fbstp
push
add
dec
cld
jns
jmp
or
ret
cs
jb
imul
adc
in
cli
and
xchg
out
dec
frstor
xor
fwait
aad
pop
mov
adc
movl
stc
cmpsb
mov
push
cmpsl
adc
jbe
inc
insb
xchg
mov
adc
test
fcoms
dec
mov
pop
mov
jmp
push
dec
xchg
outsl
push
cmpsb
inc
lds
imul
sbb
mov
cmp
fld
xchg
jne
stc
pop
aas
cmp
insb
sub
adc
movsl
hlt
test
fstps
aaa
lret
mov
adc
cs
cli
les
sbb
out
lret
int
and
pusha
out
lods
outsl
aaa
addb
sub
push
mov
data16
inc
gs
dec
adc
xchg
sbb
stos
push
xchg
loop
fistps
jne
lret
mov
fdivs
cwtl
loop
inc
jmp
cmp
cmpb
dec
and
jl
adc
cwtl
mov
pop
dec
mov
js
call
movsl
cmp
dec
xchg
mov
sub
jmp
push
fwait
roll
popa
out
mov
repz
mov
pop
pop
adc
mov
cmc
in
ret
dec
enter
cmp
or
jg
xchg
cwtl
fwait
or
clc
test
jg
or
lods
dec
hlt
inc
sub
xchg
inc
fiadds
cmp
sbb
jmp
push
pusha
adc
enter
and
push
mov
xchg
repnz
fdivl
and
cmc
jmp
add
lret
add
sub
inc
and
loope
or
sub
hlt
sbb
ss
jle,pn
push
mov
cld
mov
in
insl
fsubrp
adc
pop
mov
cmc
lods
mov
and
pop
adc
loopne
mov
pop
movsb
sub
sub
adc
les
cs
test
add
call
jae
cli
cmp
or
ds
icebp
dec
xchg
cltd
pop
sti
mov
or
mov
imul
push
sahf
fisubl
sub
pop
dec
sbb
sub
mov
test
iret
js
jp
shlb
mov
mov
pop
or
dec
mov
cli
mov
mov
test
mov
xchg
mull
sbb
ret
jmp
xchg
add
dec
ss
fldcw
push
lods
subl
cli
stos
pop
mov
pusha
inc
insb
cwtl
decl
repnz
xor
aas
xor
fst
sahf
into
lcall
jbe
pop
dec
mov
mov
mov
cli
and
cmp
sub
add
lea
or
outsl
add
cs
xchg
jne
sbb
pusha
cs
pop
mov
fst
cmp
dec
in
jg
xchg
xor
daa
cwtl
sub
mov
out
pop
shll
in
xchg
push
jp
sbb
sub
mov
outsl
sarl
jbe
mov
std
jg
addr16
jmp
push
add
sub
jmp
pushf
das
or
adc
cmp
enter
aas
test
add
lahf
movsb
dec
adc
jp
pop
divl
xchg
xchg
xor
mov
and
frstor
jns
rcl
lret
les
push
aaa
pop
subb
xor
insl
mov
jno
inc
sbbb
xchg
push
cs
lahf
movsb
aaa
pop
add
jmp
out
lock
dec
je
cmpsb
xchg
mov
xchg
movsl
pop
and
dec
imul
or
and
lea
cmp
adc
enter
mov
jno
pushf
sbb
cmpl
out
xchg
stos
inc
cmp
pushf
dec
lds
add
outsb
xor
int3
icebp
cwtl
inc
lds
inc
lret
and
or
icebp
lods
lods
incl
jp
cmp
lcall
dec
mov
mov
fsubs
jmp
es
push
sbb
push
mov
xor
xor
inc
mov
push
push
aaa
mov
gs
sti
sti
jmp
sbb
fmull
jnp
cmp
push
pop
shrb
std
ss
xchg
mov
sub
or
or
stos
jo
dec
movsb
cmp
ret
pop
cmp
push
or
fisttpll
jle
push
mov
push
out
mov
and
sub
in
addb
ret
push
ficomps
fs
lret
icebp
sub
inc
jb
lds
push
aaa
test
add
addr16
or
mov
mov
mov
in
fbstp
mov
nop
scas
xchg
xor
inc
push
mov
add
outsl
add
sarb
outsb
mov
icebp
rcrl
add
fcomps
mull
hlt
scas
xor
adc
cld
xchg
testb
es
cld
iret
lods
fisttpll
aaa
mov
clc
mov
roll
popa
int
das
add
arpl
dec
or
loop
or
pop
ficoms
xor
loope
loope
pop
mov
fcoml
xor
adc
fidivrl
rcr
add
dec
addr16
and
and
sbb
lds
lock
pop
int
push
mov
sub
je
enter
inc
insl
cmp
mov
push
cmpsl
ds
xor
inc
mov
fidivs
pushf
cmpsb
shlb
pop
rclb
lret
inc
and
aam
ret
cs
adcb
sahf
movsl
ss
pop
mov
inc
sub
stc
les
das
or
cltd
push
and
insl
lahf
or
dec
adc
mov
dec
dec
aam
xor
mov
xor
cmpsb
divb
adc
mov
jge
xlat
xchg
hlt
mov
test
repz
icebp
or
jl
jae,pn
insl
mov
inc
xchg
cmpsb
ss
loopne
adcb
mov
xchg
cmpb
xchg
push
pop
mov
and
pop
cmc
fnstsw
cmc
sbb
loop
test
adc
insb
fs
xor
fs
cmp
int3
imulb
xchg
ret
mov
mov
cld
xchg
sbb
sbb
ret
les
jmp
dec
and
cmp
and
lds
mov
cld
mov
popf
push
or
inc
fcomip
popf
ffree
insl
xchg
jg
inc
mov
inc
notb
xor
sub
or
ret
lahf
fbld
aas
jmp
and
cmp
imul
test
or
addl
int3
mov
and
int3
sahf
in
adc
leave
push
dec
leave
adc
xlat
push
ja
xor
gs
adc
lods
stos
fnsave
jne
mov
pushf
lcall
cltd
and
pop
ret
dec
jmp
dec
sbb
jns
test
out
mov
std
pop
popa
mov
loop
pushf
sub
insl
stos
leave
in
push
out
push
scas
or
cmp
inc
jbe
mov
aam
das
dec
rcrb
jmp
sub
inc
ret
mov
mov
jbe
ficompl
mov
imul
ljmp
pop
jb
or
nop
loop
push
mov
hlt
pop
js
pop
adc
stos
mov
mov
mov
pop
dec
ds
jl
cs
out
add
pop
adc
mov
testb
outsl
mov
xlat
lds
enterw
xchg
mov
pop
or
dec
mov
subps
jae,pn
xor
mov
addr16
rorb
mov
mov
je
adc
jle
out
xchg
sub
push
sbb
cmpsb
jae
push
mov
scas
mov
xchg
fimuls
repnz
adc
scas
xor
out
insl
xor
dec
mov
pop
dec
pop
add
jg
aas
js
imul
jp
loopne
fsubr
cmpsb
in
mov
je
xchg
ret
std
and
sarb
xchg
inc
insl
adc
lret
sub
push
ds
mov
sub
jne
mov
ja
mov
mov
sbb
mov
xchg
mov
and
mov
mov
rclb
lcall
xchg
push
or
mov
cmp
gs
ljmp
jnp
dec
sub
rcrl
sbb
mov
jmp
jae
dec
mov
sub
dec
out
lods
in
aaa
lret
stos
fiadds
adc
in
inc
xor
mov
rclb
flds
mov
addr16
and
pop
pusha
lea
aas
bound
xchg
mov
rorb
sub
jp
stc
push
or
cmp
mov
pop
mov
xor
neg
aam
push
dec
aaa
in
leave
mov
sub
fldt
outsl
dec
jo
push
xchg
push
lret
adc
inc
into
jecxz
pop
fs
push
aad
shl
adc
push
popf
xor
mov
imul
inc
ljmp
sbb
mov
imul
add
push
cmpsb
xchg
aad
jns
push
jnp
fwait
dec
jo
jns
sub
clc
or
decb
ret
loope
jle
dec
out
mov
popf
int3
fcoml
addl
lea
fadd
scas
ret
jne
es
lret
call
push
scas
cltd
mov
out
es
cmp
mov
nop
cwtl
lds
mov
lea
sbbl
ljmp
popa
test
int3
cmp
int
cwtl
cmp
mov
test
popl
fwait
jne
cmp
cmpsb
lcall
inc
ss
inc
sti
pop
cmp
fmuls
mov
sbb
pop
mov
aaa
jl
in
orl
push
push
mov
mov
mov
je,pn
inc
sbb
lea
push
or
mov
xor
mov
cmp
inc
cmp
dec
push
mov
movsl
hlt
mov
jae
sub
cmp
sti
dec
xchg
icebp
icebp
cmpsb
jg
movsl
push
popa
inc
xlat
lods
add
jle
lods
out
push
imul
inc
pop
xor
xchg
jge
mov
cmp
mov
lock
push
xchg
mov
sbb
add
xchg
sbb
dec
dec
pop
test
and
pop
aas
cmp
sub
repnz
xor
xchg
jns
ljmp
in
lahf
adc
into
nop
into
mov
pop
inc
mov
jb
nop
sub
add
mov
jle
mov
dec
pop
inc
jg
lods
cmp
aad
test
push
jle
in
movb
mov
into
cmp
sbb
sub
daa
mov
movsl
xchg
lods
push
movsl
cmp
push
cmp
and
inc
cmpsb
sbb
inc
sub
jp
jo
rol
xchg
mov
jl
adc
push
xorl
test
pop
sub
fcmovnu
hlt
dec
icebp
sub
pop
sub
test
xchg
pop
shr
jp
fisttpll
in
ret
pop
cmp
sarl
jmp
jecxz
out
fcmovne
call
xor
push
dec
pushw
pop
adc
into
or
mov
dec
jp
adc
mov
loop
imul
sarb
inc
mov
hlt
sbb
inc
push
xchg
sub
adc
rorl
push
mov
pop
cmpsl
lret
scas
inc
push
cmc
pop
ljmp
les
add
xchg
cmc
aam
in
stc
cmp
mov
lcall
sub
ja
push
mov
mov
sbb
pop
test
mov
jb
dec
xor
mulb
shlb
push
cmp
lret
lcall
push
nop
inc
fstps
pop
ss
lret
cltd
sub
sub
push
into
rorl
loop
das
aad
or
ss
and
pop
je
icebp
jne
sub
out
adc
cmp
inc
sti
pop
inc
and
in
mov
int
and
ror
dec
pop
push
inc
ljmp
add
ds
xor
sbb
fisttpll
es
xor
pop
xchg
sbb
add
outsb
int
daa
xchg
mov
mov
add
xlat
cmp
add
outsb
mov
or
js
sub
inc
std
nop
or
lds
in
push
sahf
jns
fldcw
mov
lods
jnp
or
sti
pop
sub
add
push
stos
xchg
das
arpl
sub
aaa
push
xor
stos
xchg
test
daa
popf
jno
or
pop
mov
pop
bound
sbb
mov
pop
aaa
fldcw
divl
push
imulb
stos
or
pusha
push
and
test
movsl
dec
inc
outsb
fs
sbb
adcb
cmpsb
mov
stos
iret
in
cmp
push
out
dec
adcb
data16
inc
mov
pop
xor
inc
xchg
gs
sbb
push
lahf
dec
inc
mov
scas
sub
push
fs
sti
aam
jmp
xor
movsb
mull
jne
mov
pop
sub
addr16
dec
or
insl
fs
jg
inc
repz
ficompl
es
sub
xchg
mov
cmpsl
sbbl
int
popa
cmc
lahf
imul
outsb
push
sub
mov
adc
add
jp
mov
stos
and
push
jb
mov
lcall
data16
lcall
mov
test
dec
xor
mov
mov
xchg
iret
inc
fucom
push
and
fcom
enter
scas
int
jne
jmp
xor
das
inc
imul
lahf
or
inc
dec
or
shrl
inc
xbegin
daa
in
enter
lret
ret
lods
shl
mov
pop
mov
push
movsl
sub
pop
pop
in
xor
mov
pop
xchg
ja
sbb
dec
mov
mov
or
loope
mov
adc
in
notb
lock
xchg
test
jbe
dec
inc
push
push
sbb
nopl
sub
jbe
js
jns
bound
idiv
into
jo
inc
cmp
lea
outsb
cltd
lret
xor
fldt
inc
jp
movsb
enter
push
aam
xchg
push
push
bound
outsl
mov
fidivrs
fildl
cmp
cmc
lahf
rcrl
jno
xchg
inc
rol
aas
sub
sbb
sub
xchg
rcr
add
or
pop
loopne
cli
test
mov
adc
xchg
in
test
inc
insb
pop
inc
gs
push
lods
out
xchg
addr16
mov
xchg
xchg
scas
jb
aam
mov
stos
pop
xor
or
int3
pop
addr16
mov
add
ret
mov
in
inc
add
repz
in
xor
xchg
mov
out
int
subb
test
inc
xchg
or
das
or
lea
or
xor
scas
xchg
and
jmp
and
pop
subl
popf
and
stc
out
sarb
and
mov
pop
lret
cld
cwtl
and
divl
xchg
aad
cmc
xchg
sbb
mov
jnp
ret
jg
mov
cmp
aas
pop
fisubs
jae
inc
dec
ficoms
fucomp
int
jmp
push
or
pop
jp
push
jb
or
jnp
sahf
jae
mov
scas
jae
incb
mov
push
or
addl
subl
mov
xchg
mov
or
test
jbe
mov
in
dec
inc
cwtl
jbe
jne
mov
dec
psubsw
pop
rorb
inc
push
js
sub
or
int
std
fsts
jne
imul
inc
jnp
push
adc
add
ja
imulb
scas
pop
cmc
out
testb
in
repnz
inc
pminsw
mov
bnd
mov
rorl
or
outsl
mul
call
hlt
adc
jmp
rcrb
xchg
sub
sahf
mov
or
outsb
scas
test
cmp
mov
sahf
jo
stos
push
xchg
sub
pusha
lahf
mov
addr16
js
pop
sbb
dec
or
ds
testb
js
jbe
int3
mov
pop
pop
xor
push
popf
pop
xor
jo
pop
les
xlat
add
mov
jle
dec
xchg
idiv
or
rcll
sub
dec
xor
movsl
pop
pop
mov
jae
insl
pop
cmp
clc
hlt
pop
ss
rolb
aam
inc
pop
addr16
cwtl
mov
push
sahf
cmpsl
mov
ja
cmp
cmp
pop
jp
jae
popf
xchg
jo
jae
repnz
push
shll
sahf
rorl
mov
mov
inc
ss
ljmp
es
or
pop
outsb
popa
push
in
push
xchg
mov
xor
push
cld
rorb
mov
cmpsl
enter
inc
jg
mov
sbb
push
xor
jecxz
add
fs
int3
push
pop
rcll
test
mov
push
lret
xchg
and
cwtl
cltd
test
mov
outsb
aam
pop
dec
inc
into
mov
dec
and
shll
xchg
cmp
push
sbb
mov
add
insl
adc
jnp
mov
mov
push
inc
lea
dec
loopne
in
mov
ret
and
mov
inc
cmpsb
and
push
or
jo
ret
jo
jecxz
das
ja
inc
in
notb
inc
cmp
xchg
aam
jl
clc
mov
arpl
pop
inc
pop
scas
test
adc
fstpt
inc
pop
inc
pop
insw
jge
js
add
inc
mov
jnp
gs
outsl
adc
jbe
xor
dec
mov
into
dec
out
aaa
pop
movsl
int3
les
cmp
cmp
and
shl
mov
cltd
xchg
shrb
mov
icebp
inc
mov
push
mov
psraw
mov
jl
test
xchg
inc
lods
js
cltd
sub
sbb
scas
lret
enter
into
jb
xchg
popa
iret
inc
jmp
rorb
gs
call
gs
adc
xchg
mov
adc
pop
or
xchg
jno
fdivrp
and
pop
aas
loope
jg
jp
sti
or
sbb
les
or
lret
xor
mov
adc
cmpsb
push
sbb
pop
add
sbb
ret
mov
sbb
mov
cld
lods
or
sub
cs
mov
mov
sbb
lret
out
mov
mov
cmp
repz
in
fisubs
in
test
scas
jecxz
rorl
lods
cltd
xlat
add
divl
lds
dec
push
pushf
fnstcw
push
call
lcall
push
adc
into
mov
jo
enter
pusha
flds
fs
pop
ds
dec
mov
fnstenv
cmpsl
push
es
rcl
pop
or
cmp
adc
fnstcw
ret
insl
sub
shll
sub
call
movsb
sbb
jecxz
sbb
cltd
xchg
loope
mov
rol
mull
inc
mov
xorl
mov
idivl
mov
mov
push
dec
push
shrb
pop
push
xchg
xor
cmp
push
xchg
fiaddl
in
int
jmp
xchg
aas
jo
mov
jo
test
mov
sbb
mov
sub
mov
jp
leave
fisubl
repz
sbb
jmp
mov
jecxz
lcall
pop
sub
cmp
or
in
sahf
imul
inc
sbb
mov
adc
lock
out
mov
std
scas
addr16
rorl
pop
out
outsl
xchg
jo
pop
and
repz
icebp
popf
cmpsb
sub
or
jb
test
fimuls
cmp
scas
stos
lods
ret
mov
fists
jns
mov
cmp
mov
xor
pop
mov
lret
fwait
lret
inc
popa
or
ss
in
loopne
fwait
rcll
loopne
addl
add
mov
fwait
jbe
jmp
aad
addr16
mov
les
xlat
xor
cmp
jp
or
or
sbb
lock
sbbl
pop
nop
xchg
xor
jle
mov
cmp
adc
fstps
pop
insb
mov
or
xor
icebp
push
jle
xchg
ss
imul
repnz
test
sub
rcrb
xchg
sub
pop
aas
adc
frstor
push
fwait
ds
rorb
dec
mov
scas
sbb
add
add
or
mov
sbb
testb
or
and
test
or
or
adc
mov
mov
aam
out
sbb
add
cmp
js
mov
iret
jecxz
xchg
add
idiv
xchg
test
inc
subb
bound
scas
mov
in
pop
sub
xor
icebp
inc
cmp
jbe
add
jg
add
repz
pop
inc
inc
movsb
sub
cltd
pushf
and
push
popf
push
sarl
jle
pushf
sub
arpl
lods
movsb
and
mov
mov
lock
stc
scas
sub
adcb
lret
out
mov
je
push
add
leave
cmpsl
orl
cltd
daa
ds
inc
or
xchg
lcall
cmpsb
clc
into
cld
add
sbb
cs
inc
jo
dec
outsl
mov
cmp
or
ljmp
inc
ljmp
ret
add
dec
xchg
jmp
mov
xchg
cmp
xchg
test
cmp
data16
frstor
ds
sbb
cmc
or
addr16
mov
cmp
int
fs
mov
adc
xorl
mov
add
add
inc
scas
pop
or
cmc
dec
test
iret
add
jb
adc
add
fsubrs
mov
add
js
pop
sub
push
jnp
mov
testb
push
aas
loopne
dec
xchg
xchg
movsb
mov
add
lods
or
pop
xor
scas
and
imul
jp
icebp
push
insb
cmp
stos
mov
sub
pop
jno
ret
cmp
mov
xchg
push
sti
xor
cmp
leave
jne
jmp
bound
jg
sub
fcmove
and
or
in
mov
mov
into
loopne
shlb
sbb
loope
xchg
mov
push
int3
roll
into
and
stos
push
int3
and
mov
fildll
lea
std
int3
cmp
jne
and
cmp
cmp
mov
bound
or
jl
jl
sti
xchg
xor
mov
adc
fs
add
ljmp
add
jae
push
and
add
out
mov
or
xor
lahf
push
jle
outsl
dec
xchg
sub
mov
jbe
dec
out
xchg
jecxz
cli
mov
lods
push
jmp
cmpl
xlat
or
rcrl
sbb
scas
mov
ljmp
jne
xor
or
out
xchg
nop
adc
xor
sub
in
test
xchg
data16
xchg
clc
dec
cmp
xchg
clc
mov
call
lods
imul
xchg
push
push
ja
mov
mov
jg
outsl
rclb
and
out
sbb
stos
insb
dec
pusha
ret
pop
cmp
mov
data16
enter
pop
shl
mov
push
sbb
pop
insb
out
push
imul
sbb
sub
mov
push
mov
shll
inc
pop
jge
inc
push
mov
push
xor
mov
mov
dec
rolb
andb
xchg
mov
insb
adc
push
mov
sti
add
lea
jae
roll
jae
pop
mov
xchg
and
fucomp
jle
or
imul
aad
out
lods
das
movsb
inc
push
mov
fistps
std
loopne
sub
mov
lock
loope
dec
outsb
fisubrs
jno
sub
out
in
aaa
push
dec
lret
repnz
xchg
xchg
mov
push
cli
and
add
push
ja
cli
call
call
or
mov
or
cmp
cld
jle
dec
dec
xor
jle
cmp
pop
loope
sbb
adc
scas
add
sub
popf
aaa
cmp
movsb
ja
jns
pop
jle
push
imul
repnz
mov
xor
sub
or
mov
and
scas
fnstsw
clc
cwtl
es
push
push
sub
inc
sarl
lahf
xor
push
adc
cmp
add
lods
cvtps2pd
sbb
out
lods
mov
call
mov
lds
or
insl
int3
in
xor
xchg
je
mov
adc
cmp
jmp
inc
mov
or
ja
mov
incl
setne
lods
ja
or
mov
or
lcall
add
mov
inc
xchg
sarl
mov
daa
dec
jmp
aas
dec
jbe
pop
ljmp
shrl
jecxz
mov
lods
popa
sahf
je
loopne
push
jo
dec
pop
or
cmpsl
faddp
push
fistl
xlat
daa
push
jo
test
jmp
adc
jne
inc
aas
jae
in
mov
jg
icebp
push
ljmp
ret
fnstsw
xchg
pop
andb
jb
or
jmp
sbb
aad
sub
repnz
push
stc
push
cmp
loopne
push
add
xchg
sbb
clc
lahf
dec
aas
xchg
aaa
lds
gs
fsts
sbb
ficoml
shlb
test
inc
orl
xchg
aad
inc
xlat
sti
sbb
push
mov
jo
xchg
das
sbb
outsl
aam
pop
fisttpll
jl
insl
pop
sub
xchg
mov
dec
mov
jecxz
shr
lods
xchg
stos
cmc
decl
stos
or
push
add
bound
pop
add
xlat
mov
das
jl
fistps
mov
xlat
sbb
aam
rcrl
jne
xchg
inc
fcompl
movsl
jmp
cmp
and
jp
ret
notl
xchg
or
mov
dec
mov
cmp
fnstsw
push
mov
inc
loope
icebp
jno
out
and
jbe
loop
mov
ret
cmpsl
cmp
das
repnz
das
or
pop
fcmovnb
inc
push
ret
pop
lds
cltd
mov
and
sarl
push
jo
inc
jle
and
jle
daa
sbb
cmp
xchg
jg
shll
ljmp
push
lods
and
sub
dec
jae
jnp
xor
addl
jl
dec
movsb
lods
ret
ret
into
call
sub
test
xor
outsl
dec
cs
jl
leave
jo
dec
cmp
jmp
arpl
dec
jno
add
fdivrl
inc
sbb
call
dec
xchg
pop
mov
out
xlat
cmp
subl
push
cmp
loopne
cmpsl
mov
adc
cmp
les
adc
sub
mov
ret
mov
test
movlps
arpl
ss
mov
pusha
nop
push
xlat
mov
and
and
xchg
call
xchg
adc
push
xchg
xchg
adc
data16
sbb
dec
cmpsl
lcall
sub
mov
or
jae
or
mov
cwtl
imul
and
or
fistl
enter
xchg
mov
ret
or
iret
sbb
xchg
fwait
loope
jg
push
addr16
mov
fcoms
push
and
in
je
pop
js
aad
or
sbb
mov
test
pop
mov
leave
xor
aad
cmp
clc
lret
inc
adc
mov
fildll
ds
xor
sar
sbb
out
xor
enter
ss
ficompl
bswap
cmp
mul
fwait
cmc
jne
in
add
mov
mov
mov
mov
movsb
stos
pop
add
mov
lods
adc
inc
pop
jl
int
or
lock
mov
test
popf
iret
fsubr
fs
pop
or
lahf
pop
jg
xchg
mov
add
out
jns
int
rorl
sbb
loopne
cli
or
fcoms
jb
cltd
stos
push
ss
jecxz
pop
insb
lods
mov
test
ficoml
into
fwait
and
xchg
sbb
popf
xchg
mov
inc
iret
out
ja
sub
and
jl
fcoms
fsub
jg
insb
xchg
fnstsw
pop
out
scas
pop
jbe
xlat
xchg
dec
cmpl
pushf
pushf
and
pop
ret
int
add
dec
dec
loopne
pushf
xor
mov
and
pop
jp
xor
in
icebp
and
jecxz
mov
cli
mov
or
psraw
out
cwtl
cmc
mov
adc
leave
sahf
mov
xor
inc
lahf
enter
adc
dec
in
lock
xchg
xchg
and
mov
add
cli
shrl
jle
insl
inc
lahf
add
and
jno
movsl
lods
mov
sub
fs
and
pusha
scas
sbb
mov
and
hlt
add
repnz
add
js
fiadds
pop
inc
xor
xchg
loopne
insb
call
jae
sarl
into
call
xor
xor
jo
xchg
std
add
data16
mov
push
add
das
mov
sub
sahf
in
mov
inc
inc
stc
pushf
adc
push
movsb
ljmp
or
rcrl
sarb
jp
call
xorb
sbb
add
or
ds
sarl
or
push
cli
mov
mov
xor
add
call
sbb
pusha
push
jg
mov
insb
inc
cmpsl
cmpsb
adc
jb
xor
dec
adc
inc
fmul
test
js
xchg
dec
ljmp
mov
lods
xorl
imul
push
shr
sahf
shr
jmp
dec
mov
mov
loope
in
pop
cmpsl
adc
dec
lock
popa
mov
dec
scas
pop
pop
sbb
ret
pop
jecxz
jno
rcrb
mov
mov
int
jns
xchg
out
fcomip
jns
mov
adcb
dec
les
push
mov
repnz
scas
int
out
xchg
out
addb
add
dec
and
pop
mov
fdivrl
or
push
mov
icebp
xor
add
add
mov
shlb
dec
stos
gs
mov
xchg
cmp
add
dec
xor
sub
inc
jnp
imul
lahf
repz
out
mov
push
out
in
cmp
mov
mov
pop
rcrb
int3
stos
jae
push
shlb
push
fistpll
sub
rcrl
shl
in
xchg
lods
popf
add
hlt
mov
xchg
adc
cs
fistl
mov
dec
xchg
ljmp
pop
jae
push
sbb
inc
int
adc
mov
or
mov
insb
add
movsb
cli
cmp
loop
and
mov
cmp
ret
mov
scas
ret
inc
cmp
lahf
in
jecxz
lcall
pusha
xchg
adc
dec
fstps
or
inc
das
mov
sbb
xchg
out
mov
int
or
sbb
pop
push
cmp
jmp
xchg
incb
push
mov
mov
int3
push
stos
cltd
jle
add
inc
or
call
inc
icebp
jbe
fisubs
mov
orb
sbb
mov
das
add
arpl
pop
push
stos
cmp
sbb
out
dec
xchg
push
xlat
out
shll
push
mov
lret
and
outsb
aaa
xor
mov
jb
add
dec
cmp
sub
push
or
push
mov
cmp
dec
es
add
xchg
and
insb
cmpsl
aas
hlt
jns
orl
insb
addr16
ja
lret
xor
notl
mov
cmp
jecxz
add
push
or
jnp
cmp
or
or
xchg
out
jmp
call
cmp
stc
cmc
xor
fwait
popf
mov
pushw
fs
push
cmpsl
aas
or
jl
movlps
jl
mov
cs
jb
jb
sub
push
pop
jge
pop
daa
test
imul
aad
daa
aas
jge
pop
repz
jl
mull
pop
pop
popf
es
add
aaa
jecxz
shl
mov
mov
add
and
jle
gs
pop
push
pop
or
xchg
jnp
daa
daa
mov
lds
mov
or
cltd
xor
jae
addl
ror
adc
jbe
xor
xor
std
xchg
test
mov
xor
mov
sub
xlat
in
fs
push
cltd
adc
aam
pop
int3
cmp
loopne
jl
cld
add
icebp
shrl
pop
push
add
xchg
inc
xor
pusha
push
ficompl
lret
mov
cmp
xlat
loopne
in
pusha
test
xlat
xchg
lock
mov
push
add
add
fdivr
arpl
or
push
mov
push
stc
mul
insb
sub
dec
stos
cmpb
aad
aad
cmp
push
arpl
jp
fwait
test
sbb
fwait
les
inc
mov
xchg
mov
das
loopne
dec
mov
test
cmp
jg
xlat
jecxz
popa
fldpi
pop
lods
cmp
xchg
and
loope
stc
movsl
subl
test
mov
scas
loop
push
or
pop
lock
cmc
mov
cmp
andb
je
jle
inc
cmp
aaa
loope
imul
test
in
jns
icebp
lcall
sbb
add
std
adc
pop
mov
repz
push
mov
mov
lods
push
xor
jnp
pop
mov
mov
inc
orl
mov
pushf
nop
cmp
lock
pop
daa
lcall
sbb
xor
stos
leave
mov
sub
mov
add
cmp
ret
jno
and
test
mov
or
mov
xchg
lret
inc
push
cs
cmp
mov
aas
mov
lahf
clc
jp
and
bound
movsl
pop
or
cwtl
xchg
outsl
pop
shlb
cvtps2pi
fmuls
sub
mov
push
cmpsb
adc
test
xchg
adc
add
fwait
int3
mov
add
test
movsb
cmp
pop
ss
inc
jb
cs
dec
dec
test
lods
jb
shlb
push
jb
mov
xchg
mov
jne
fcoms
scas
jns
jl
dec
mov
fidivs
push
xlat
push
xchg
mov
int
cmp
pop
dec
mov
cli
adc
fstps
enter
adcl
and
jo
sub
or
movl
mov
sub
jle
jecxz
adc
cmp
or
push
adcl
cmp
aas
inc
sbb
lods
aam
jo
cltd
xchg
dec
sub
test
mov
push
frstor
icebp
pop
mov
pop
or
sub
loopne
push
cmp
xchg
in
or
and
scas
pop
lret
mov
mov
cs
ljmp
mov
jmp
lock
jbe
jmp
repz
mov
das
add
icebp
dec
add
mov
cltd
xor
mov
mov
cli
repz
sbb
sub
aam
xchg
xor
stos
pop
lock
rol
in
loope
add
push
cmp
adc
pusha
fbld
cs
mov
mov
repnz
xor
ret
mov
fcmovnb
adc
push
mov
jle
int3
xchg
aaa
je
sbb
jp
xorl
nop
jecxz
repnz
push
ret
mov
call
stos
add
add
sbb
roll
and
mov
sub
mov
fchs
sbb
out
or
and
ret
jge
outsl
push
lods
lods
aam
jae
jle
dec
popa
adc
jne
es
movsl
add
and
fmull
adc
les
repnz
xor
dec
movsl
xor
cmp
out
jo
inc
xchg
push
cmp
dec
cli
imul
mov
jecxz
int3
adc
mov
les
rorb
xor
mov
lods
sahf
lea
rorl
aam
test
or
rolb
adc
inc
stos
sbb
lock
xorl
test
ljmp
clc
pop
movsl
and
pop
fsubrl
mov
hlt
sub
xchg
and
adc
imul
out
pop
pop
enter
mov
les
sub
mov
enter
data16
sti
cmp
call
add
clc
testl
test
push
mov
lret
imulb
mov
repz
bound
jnp
scas
jae
mov
add
push
add
popa
mov
icebp
add
mov
test
cltd
xchg
adc
rorl
or
push
push
mov
mov
mov
aad
loope
insb
dec
push
pop
cmp
xchg
sbb
cmp
pop
popf
nop
lea
pop
js
sub
pop
into
jae
ljmp
cmc
cwtl
aas
add
xchg
repnz
imulb
push
lds
fisubrl
and
in
mov
ja
dec
cmp
dec
jo
addr16
outsb
mov
push
daa
icebp
js
popf
inc
nop
mov
push
cld
repz
xchg
sbb
push
pop
jo
dec
mov
push
stos
xchg
insb
andnps
inc
test
jo
mov
loopne
aam
mov
outsl
sti
mov
jecxz
mov
mov
jge
insl
mov
sub
nop
or
aam
add
in
roll
add
sub
adc
ja
std
or
imul
cli
das
jg
mov
test
dec
mov
cmpsl
sub
inc
adc
outsb
push
mov
inc
lret
dec
jae
push
push
sub
xchg
call
cwtl
dec
push
and
in
sbb
dec
loop
out
test
jno
sbb
sarl
mov
test
xchg
pushf
mov
jecxz
lea
cs
mov
mov
aam
jne
mov
mov
ret
fcmovnu
or
xorl
push
inc
ljmp
sahf
fildl
xchg
test
mov
add
xchg
xchg
outsl
cmp
mov
out
scas
lret
mov
rclb
xchg
xchg
xchg
jle
mov
lahf
jmp
in
hlt
sbb
stos
adc
fldpi
outsb
je
nop
inc
jo
gs
inc
add
mov
enter
ljmp
push
test
pop
lret
jbe
inc
push
es
sbb
int3
lcall
inc
in
mov
xlat
xchg
dec
mov
push
sahf
fs
rcl
fwait
pop
adc
jg
fs
inc
jp
inc
xchg
pop
faddp
mov
popf
lcall
insl
dec
repnz
push
cmpsl
adc
add
adc
push
adc
mov
leave
popf
and
mov
fcoml
xchg
add
lock
es
jle
jecxz
popf
xlat
out
cmpsl
aas
addr16
cltd
in
jno
push
repnz
add
cmpsb
lahf
xor
cmp
outsl
xchg
fdivs
push
adc
mov
mov
add
imul
cld
pop
jge
mov
add
popf
lahf
sti
shll
repnz
int3
xlat
clc
sbb
fsts
mov
daa
out
das
mov
jp
jnp
xor
jb
arpl
nop
xchg
cwtl
hlt
mov
cmp
test
ljmp
push
repnz
popf
fnstenv
sti
sarl
stos
push
fadds
fisubl
mov
push
pop
sbb
out
and
inc
xlat
scas
cmp
or
call
in
fidivs
in
sbb
dec
cli
sub
sbb
jnp
bound
jo
mov
mov
fs
js
adc
sti
out
mov
insb
dec
mov
sbb
xchg
xchg
xchg
lds
sbb
cmp
cmp
imul
mov
sub
inc
mov
fcompl
push
mov
fcompl
mov
and
jbe,pt
movsl
iret
int
push
cli
sti
jle
jle
leave
jle
pop
rcrl
cmpsb
push
js
or
cmc
inc
push
mov
lds
inc
aam
mov
stc
pop
inc
mov
aas
enter
xchg
int
sbb
bound
mov
push
xlat
mov
xchg
mov
pop
in
pushf
mov
jo
push
and
rep
dec
int
dec
sbb
popf
and
mov
lret
push
sbb
das
test
xor
mov
loopne
mov
add
test
or
scas
sub
test
adc
mov
out
iret
fstps
xor
sti
or
cmp
popa
mov
sar
sbb
sbb
mov
mov
sbb
jg
addr16
pop
and
push
xor
inc
mov
mov
sbb
inc
test
test
push
gs
and
sti
daa
pop
adc
cs
daa
test
dec
mov
js
mov
pop
add
add
dec
sbb
and
lock
sahf
leave
ss
lods
ror
aad
dec
push
movsl
shll
rolb
andl
clc
xor
cmp
inc
inc
inc
ret
cmc
fsubl
test
in
lock
cmp
into
mov
pop
pop
sub
mov
jp
andb
nop
test
lds
jg
fisttpll
mov
data16
cwtl
hlt
hlt
mov
dec
add
mov
jl
popa
xlat
or
stos
ds
test
sub
loopne
movsb
or
lea
pusha
mov
lcall
dec
mov
cmpsl
xchg
sti
fidivrl
sbb
loop
xor
divl
dec
and
pop
out
push
cmp
add
popf
clc
cmp
jle
lea
sbb
sbb
pop
lret
lods
and
loope
mov
add
push
in
cwtl
jne
cmp
out
pop
cmpsb
loopne
and
stos
arpl
xlat
push
iret
ljmp
out
pop
out
mov
or
pop
cs
pop
jno
mov
lds
cltd
cmp
sub
pop
mov
jne
adc
ds
pop
add
sub
movsl
in
mov
and
cld
dec
inc
sti
fwait
inc
adc
dec
mov
fwait
or
xor
fists
daa
or
add
lahf
jb
imul
sar
add
mov
jns
imul
inc
mov
xchg
and
pop
sub
push
mov
ss
mov
jmp
adc
mov
xchg
adc
xchg
imul
pop
fs
faddl
in
loope
mov
jmp
bnd
lret
adc
dec
cmp
in
cmp
mov
and
mov
and
stos
pushf
ja
mov
mov
cwtl
mov
add
mov
mov
cwtl
cmp
out
popf
mov
stc
push
cmp
push
fwait
cmp
jmp
or
aaa
cmc
mov
cmp
xchg
out
xchg
xor
out
mov
push
insb
fsubrl
jg
subb
and
push
mov
push
repz
push
scas
jp
dec
jmp
inc
mov
add
pop
mov
aas
shrl
data16
loope
rcr
or
pop
cmpsl
mov
and
lahf
pop
push
sbb
push
repnz
xchg
shlb
pop
lcall
dec
aad
push
fisttps
rcrl
ja
jecxz
dec
mov
test
enter
cld
seta
add
mov
je
arpl
lahf
mov
ror
scas
leave
hlt
ljmp
mov
push
pop
loope
push
mov
or
lock
and
ficompl
dec
jae
insb
push
cmpsb
push
inc
popa
add
std
orb
cmpsl
adc
out
push
sahf
cli
inc
xlat
vunpcklps
pop
aaa
dec
mov
mov
mov
add
in
clc
push
xor
insl
mov
add
xor
clc
in
push
or
je
xor
mov
fwait
jo
lods
dec
mov
enter
lahf
jbe
icebp
sbb
iret
cmp
mov
mov
mov
xor
out
arpl
ljmp
mov
add
add
or
clc
nop
sti
mov
lret
lods
mov
xor
xchg
sbb
faddl
stc
adc
repz
xor
cmpsb
dec
and
cmp
sbb
out
pop
cmp
mov
stc
fisubrs
rcll
xchg
sbb
imull
mov
lds
add
add
and
cmpsl
xchg
subl
sbb
int
sub
pop
rclb
popa
fsts
outsl
cmpsb
sub
sti
loopne
pop
cld
cwtl
xor
inc
adc
cmp
pop
out
and
pop
cmp
xchg
cmp
xor
jb
lret
sbb
sub
inc
repnz
mov
inc
adc
xor
mull
inc
shlb
pusha
xor
mov
cs
dec
add
enter
pop
ret
inc
es
xlat
adc
mov
nop
test
mov
inc
xchg
aad
movb
xorb
add
jne
xchg
dec
movsb
jnp
aam
pop
inc
xor
mov
sub
xor
jns
cmp
fadd
dec
adc
cwtl
and
fdivrl
in
push
ja
xor
movsb
cld
daa
cmpsl
outsl
scas
lcall
sub
pushf
mov
movsb
daa
xor
jmp
hlt
pop
push
mov
dec
rolb
mov
mov
ret
loop
jb
xchg
inc
arpl
push
faddl
scas
mov
bound
lea
test
cmp
nop
call
and
inc
insb
das
add
daa
addr16
or
cmp
dec
cli
mov
test
fnstsw
test
push
lods
pop
jne
movsb
fldl
mov
aam
xchg
pushf
mov
ret
mov
adc
adc
mov
decl
dec
mov
sub
insl
mov
movsb
es
std
sbb
aam
xor
xchg
add
fs
es
jbe
push
jns
or
cltd
mov
xor
in
enter
mov
addb
mov
outsb
jb
jp
addl
sub
bound
push
insb
inc
loope
clc
xchg
cmp
jae
rorl
test
movsb
out
sub
das
insl
or
and
jmp
lahf
dec
mov
mov
add
leave
cld
xor
and
xchg
fs
enter
jbe
mov
add
es
arpl
pop
je
clc
sti
andl
rcrb
add
and
xorl
imul
push
mov
pop
idivb
xchg
ja
pop
imul
call
mov
sbb
and
jp
call
cmp
stos
push
dec
in
push
in
cmp
push
or
sbb
cmpsl
dec
xor
out
aaa
inc
int
cmp
mov
jae,pn
pushf
into
fldl2t
or
icebp
pop
ljmp
add
arpl
outsl
out
outsb
shll
mov
xor
cltd
push
xor
mov
add
jno
fmuls
adc
js
mov
push
or
pop
fcoml
sar
jle
bound
pop
js
loope
cld
ret
push
fs
bound
add
insl
mov
adc
stos
or
fwait
orb
mov
repnz
lods
outsl
jb
cld
dec
xchg
je
andb
add
test
mov
fwait
addl
xor
out
out
inc
sar
lock
sti
fs
movsb
mov
test
sti
imull
adc
negb
pop
clc
inc
stc
sti
xor
sub
or
push
addr16
jp
push
movsb
movsl
adc
pop
adc
das
inc
mov
pop
add
jl
mov
imull
ljmp
scas
shl
enterw
popa
or
rclb
dec
popa
loopne
fiaddl
push
mov
pop
xchg
jbe
jnp
andl
insl
mov
pop
push
dec
inc
xorl
pop
jo
inc
mov
pop
bound
mov
inc
sub
out
orl
or
cmp
adcb
or
in
out
jp
pop
incl
movsb
jnp
and
and
mov
mov
call
loopne
jno
adc
loopne
mov
lret
lcall
add
in
jnp
mov
xchg
rolb
fwait
dec
or
rcrl
pop
jmp
lods
mov
out
xchg
push
out
push
jmp
mov
out
pushf
mov
repz
xor
sub
push
jae
iret
inc
test
cmp
std
insb
pushf
sub
rcrb
jg
mov
ljmp
fisubl
lods
out
std
xchg
xchg
popf
sahf
fdivl
icebp
lret
dec
fucomip
fs
inc
je
mov
sub
jge
aam
ss
jnp
sbb
xor
mov
inc
loop
push
jle
adc
shrb
lea
imul
lret
or
cmp
loopne
rorl
popa
mov
outsl
adc
je
lods
filds
sbb
mov
adc
cs
add
add
andb
sub
push
dec
ret
mov
push
aas
push
mov
imul
scas
lods
ds
dec
aaa
jg
test
fsubrs
lods
stos
rcrb
inc
inc
and
jmp
fucomip
jnp
js
out
push
mov
and
mov
dec
int
or
pop
mov
dec
jne
loop
inc
mov
ret
push
adc
in
xor
in
jnp
mov
ss
xchg
in
xchg
adc
or
inc
add
mov
jae
les
mov
arpl
mov
orb
mov
jg
test
jp
mov
xor
cmp
dec
or
mov
adc
cmp
pop
dec
jg
and
push
stc
inc
icebp
cmp
int3
sar
mov
push
mov
inc
xorl
sub
xor
sbbl
mov
cmp
mov
mov
pop
add
f2xm1
sahf
push
flds
jg
xor
mov
push
sub
inc
pop
pop
xchg
or
sub
std
push
add
out
cltd
xchg
jno
sti
sarb
xchg
jecxz
out
cmpsb
or
loop
mov
rcl
aas
out
ret
sub
jae
lods
out
fsubl
int3
vhsubps
or
mov
stos
or
mov
mov
mov
mov
lret
daa
jp
jo
repz
or
in
and
sub
cmp
push
movsl
xchg
xchg
js
fucomip
cmpsb
cmc
inc
adc
andl
inc
movsl
or
movsb
inc
push
jo
mov
cmp
dec
lods
aam
cmp
sub
adc
scas
fcmovbe
lock
adc
mov
popa
cld
ljmp
inc
bound
into
mov
mov
adc
mov
in
in
lods
test
sbb
stos
ljmp
sbb
mov
add
shl
mov
pop
jmp
mov
lods
inc
dec
sbb
roll
mov
popf
push
hlt
pushf
sbb
inc
mov
push
xlat
xlat
dec
add
adc
aad
enter
popa
das
out
incb
jns
js
adc
clc
sbb
mov
into
es
mov
dec
je
dec
enter
cmp
sub
xchg
popf
xchg
mov
sbb
cltd
pop
dec
loopne
mov
xchg
push
imul
fdivrl
int
pop
addb
mov
and
bound
lock
lcall
add
fsubrs
dec
cmpsl
push
sbb
push
pop
shll
push
out
jae
shlb
sbb
mov
inc
sarb
or
adc
mov
add
stos
in
pop
adc
xorl
ficoms
inc
pop
add
hlt
xchg
nop
mov
mov
or
push
rorb
rclb
mov
pop
mov
sub
stc
mov
mov
xchg
insl
mov
mov
jge
ror
int
pushf
mov
dec
addb
in
cmp
sbb
in
xor
push
ret
and
fbstp
mov
ljmp
cmp
mov
add
push
mov
dec
sub
mov
nop
jecxz
js
movsl
jns
mov
jmp
jns
push
mov
inc
sarb
pop
addr16
cwtl
insl
inc
mov
fcmovbe
dec
fisttpll
pop
cmp
stc
cmpsb
bndstx
inc
bound
jno
test
pop
add
movsl
adc
pop
loopne
pop
sub
sbb
mov
cmpsl
mov
cmp
flds
mov
jmp
sar
sti
subl
nop
push
mov
push
inc
xchg
es
push
mov
xor
or
mov
pop
mov
pop
lea
int3
push
cmp
lcall
mov
or
stos
mov
dec
sub
loop
lret
repz
adc
loop
scas
adc
test
mov
shlb
or
lret
jg
ret
push
or
pop
xorb
bound
loope
rcr
fildl
das
test
aad
mov
out
dec
mov
aad
cltd
dec
loope
xor
sbb
and
shlb
stos
and
push
or
fisubl
mov
imul
ss
cmpsb
adc
std
into
and
and
pop
in
jne
xor
loopne
jbe
mov
arpl
pop
inc
add
push
notl
sti
xor
ss
mov
lods
mov
pop
mov
adc
sbb
ljmp
cmp
gs
mov
js
jmp
lret
jg
add
inc
mov
pusha
lods
mov
mov
pop
cmp
rorb
xor
xor
fcmovnb
mov
or
push
push
sub
add
xchg
cld
sahf
cs
stos
inc
jecxz
push
loopne
adc
scas
pop
fwait
mull
xor
mov
add
pop
cmpsb
sbbl
jp
push
xor
roll
arpl
mov
jl
loop
std
pushf
xchg
cmp
popa
out
mov
sub
adc
ljmp
jmp
in
or
adc
sub
rorl
cld
roll
cmpsl
or
adc
and
std
dec
mov
das
sbb
clc
jle
int3
scas
or
sub
shll
inc
fnstenv
and
iret
xchg
push
fisubl
je
jno
stc
jp
pop
ret
dec
popf
jns
xchg
jecxz
pushf
adc
fs
call
lret
adc
sub
shrb
repnz
adc
scas
pop
mov
sub
fiadds
iret
fdivrl
les
les
ja
jno
adc
pop
xchg
sti
shrb
inc
outsl
or
repz
dec
cmp
fwait
xor
bound
movsl
and
or
cld
clc
std
repz
ret
inc
adc
xchg
bound
test
or
mov
push
outsl
lret
xchg
inc
jno
lret
xor
lods
push
rclb
push
push
jmp
xchg
in
fs
loope
ret
jns
enter
pop
cmp
lea
xor
cmp
push
out
mov
mov
inc
mov
fbstp
hlt
lods
shl
sahf
push
movsl
outsb
xchg
mov
cmp
inc
nop
insb
movsl
or
test
dec
sub
sbb
inc
sahf
pop
lahf
out
imul
nop
out
push
sbb
inc
ret
pop
or
push
shrl
fdivrl
aad
inc
or
flds
mov
je
cmpsl
ficoml
in
ja
ss
enter
sub
test
cmp
stos
adc
cmpl
sub
sub
incl
fistpl
sahf
inc
sbb
or
testb
inc
lcall
sub
jno
sub
mov
xor
sbb
dec
xchg
repnz
sbb
inc
enter
dec
sbb
outsb
adc
or
hlt
push
push
jg
lods
nop
fbld
and
repnz
xchg
fistl
cwtl
into
stos
push
cld
mov
sbb
mov
hlt
jns
jp
mov
cltd
sub
imulb
add
push
cwtl
sti
je
sbb
aas
mov
xlat
adc
pop
mov
ret
or
dec
cmp
jecxz
into
mov
cs
xchg
mov
cs
ljmp
and
ret
repz
xchg
or
in
cmpsl
push
and
mov
mov
addr16
push
push
rorl
push
arpl
xor
mov
and
push
xchg
fimull
mov
ret
mov
push
aad
lret
xchg
movsb
lock
sbb
sbb
clc
addr16
les
ljmp
cmp
dec
mov
loop
sub
repz
icebp
sub
je
jno
push
filds
dec
jge
push
jno
in
sarl
jmp
jno
ja
dec
dec
dec
lret
mov
shrl
ja
loope
addr16
mov
jp
out
repz
xchg
sub
aas
xchg
mov
or
sub
xor
mov
mov
mov
fbld
dec
repz
inc
push
aam
add
dec
mov
insb
std
iret
sub
clc
xchg
bound
scas
pop
and
jno
push
imul
and
mov
push
adc
clc
sahf
test
push
jge
andb
stc
enter
inc
adc
xor
push
xor
outsb
xor
lea
aaa
jle
inc
pusha
push
shrb
push
jge
adc
std
pop
push
xchg
rcll
inc
in
popa
loopne
push
scas
push
sub
push
jecxz
fisttpll
xlat
stos
scas
out
les
fst
xchg
lea
rcl
pusha
xor
orl
pop
push
push
inc
movsl
xor
add
mov
mov
test
push
sbb
sbb
imul
and
mov
xchg
adcl
and
bound
loope
sbb
fcompl
xchg
std
xor
cmp
imul
xchg
jbe
decl
jbe
push
leave
jl
pop
jge
xor
jnp
idiv
cmpsl
stc
stos
outsl
jmp
dec
or
fcomip
xor
push
mov
dec
mov
pop
dec
test
dec
xchg
and
stos
adc
aam
jae
scas
or
aam
test
mov
mov
push
int
mov
fisubl
xchg
xchg
fs
fucomp
in
push
lahf
in
ss
jmp
mov
fisubrl
pop
inc
js
mov
cs
sbb
xchg
jnp
mov
test
mov
xchg
subb
iret
sti
dec
sub
sub
or
cmp
or
je
adc
mov
sbb
lods
xor
sub
xchg
fbstp
inc
in
cli
stos
xchg
mov
inc
dec
push
push
xor
mov
mov
push
sub
inc
pushf
pop
cmp
loopne
inc
imul
add
cmp
add
ret
jae
sub
sub
pop
xor
insl
cmp
inc
inc
notb
mov
stos
shr
dec
out
hlt
xor
pop
sbb
repnz
and
dec
dec
stc
stos
xor
fdivl
xchg
rcrb
arpl
stc
dec
pop
pop
test
jge
int
jno
push
addr16
sbb
pop
xchg
lock
pop
cmp
test
xchg
aaa
in
shlb
and
loop
lds
cmp
add
aas
lods
add
sahf
lock
out
outsb
data16
adc
bound
add
cmp
aad
subb
aad
movsb
enter
sahf
sbb
add
mov
push
negb
pop
int3
imul
adc
push
dec
adc
lods
cmp
sbb
mov
sbb
int3
sub
iret
jmp
lds
sbb
idiv
call
sub
dec
push
pop
repnz
xor
sub
push
int3
mov
sub
xchg
jge
mov
nop
movsl
add
int
int3
aaa
in
mov
mov
adcb
lods
mov
lcall
outsl
jl
inc
subl
dec
sbb
mov
sub
lcall
and
jae
xchg
xlat
xor
xchg
xchg
or
adc
sahf
jge
and
or
lock
mov
popf
lds
sbb
in
mov
es
mov
mov
dec
pop
jno
cmp
shl
ljmp
pop
hlt
cmp
ret
loope
shrl
cltd
add
mov
adc
pop
xor
mov
aam
pop
jp
lock
mov
jbe
hlt
std
xchg
inc
lods
sbb
cmpsl
adc
adc
ja
push
and
pop
ss
lahf
lcall
test
dec
dec
mov
pop
stos
xchg
push
sub
js
mov
js
and
sub
mov
mov
sbb
push
imul
adc
inc
push
fsubrl
push
inc
scas
inc
fisttpl
sub
lcall
push
icebp
inc
inc
ljmp
rorb
xor
adc
into
in
test
lods
xor
leave
repz
mov
jmp
xchg
mov
cmp
jae
es
mov
push
add
mov
mov
cmp
dec
mov
mov
cmp
enter
or
add
xchg
imul
aas
sub
ss
cmp
cld
jnp
stc
movsl
test
test
adc
std
iret
fistl
push
mov
ljmp
inc
dec
andb
idivl
pop
and
cmp
mov
std
cli
out
arpl
mov
not
int
scas
jl
jge
adcb
adc
sarl
shrl
test
cltd
push
adc
push
inc
or
jmp
pop
mov
gs
sbb
or
xchg
push
in
fbstp
adc
or
cmc
mov
ja
popf
cltd
cmpsb
xor
dec
pop
lret
aad
mov
cmp
jg
das
mov
and
icebp
ss
ss
xchg
push
daa
cmp
leave
loopne
cmp
mov
dec
callw
xor
es
pop
sub
jae
push
cli
mov
jecxz
iret
faddl
das
pop
sbb
sbb
push
lahf
popa
jo
pop
xchg
mov
sub
insb
mov
bound
cmp
jae
jle
cmp
mov
insb
bound
shr
jb
rol
pop
fistps
mov
lock
mov
movsb
sub
stos
cmp
jp
incl
lahf
xchg
sarl
imul
mov
outsl
push
mov
push
sahf
push
xor
xor
mov
flds
mov
lcall
loope
fs
pop
push
push
cmp
mov
int
xlat
sbb
sbb
jnp
call
sti
loope
sub
adc
subb
xchg
das
sti
andl
cmp
sub
test
push
ds
ds
xchg
setae
jb
inc
dec
pop
cwtl
jmp
sub
in
in
sbb
lods
dec
dec
notl
push
jp
sub
mov
into
stos
dec
mov
cwtl
push
pop
add
outsb
jle
add
pop
outsb
mov
dec
fmul
insb
push
add
inc
daa
xor
push
adc
jae
scas
loop
lock
movb
cwtl
adc
fbld
scas
and
ficoms
jmp
scas
shll
fstps
xchg
daa
stc
out
sub
cld
and
fmull
in
xchg
outsb
push
xchg
cmpsb
lcall
test
pop
mov
add
mov
and
ret
jns
sbb
fadds
mov
push
mov
out
arpl
dec
pop
daa
inc
ljmp
add
leave
mov
or
xchg
xchg
inc
shl
inc
ds
mov
test
stos
loop
push
stc
jo
mov
ds
shll
testl
and
aas
daa
in
pop
xchg
push
sbb
xor
cmp
hlt
daa
daa
xchg
cmp
cli
cli
popl
rcll
mov
mov
add
mov
fcomi
mov
push
aam
pop
ljmp
lods
ja
scas
test
jns
les
add
pop
int3
dec
ret
pusha
icebp
fsubrs
xlat
arpl
xchg
addr16
cmp
inc
and
xor
imul
into
jno
in
imul
sbb
repnz
adc
ret
mov
sbb
fldenv
loop
or
xor
mov
and
mov
push
xchg
dec
push
sub
adc
repz
fdivs
inc
dec
add
cmc
mov
in
loop
clc
mov
out
mov
adc
ja
xchg
sub
data16
dec
lcall
cs
push
hlt
mov
mov
adcb
test
pop
push
lahf
fsubl
mov
push
data16
push
mov
mov
cmpl
addr16
adc
pop
inc
cmp
leave
aam
jae
lcall
xchg
sbb
cltd
mov
ljmp
int3
sahf
push
int3
inc
push
dec
cli
ss
bound
pop
and
sahf
fistpll
and
dec
cmp
pop
lcall
in
push
mov
retw
loopne
jnp
dec
pop
frstor
mov
adc
cltd
mov
or
xchg
mov
and
aaa
pop
ror
push
test
lret
movsl
addr16
mov
xlat
sbb
aad
fstl
and
cmp
add
jae
aam
jp
nop
push
imul
dec
pushf
or
mov
gs
in
addr16
sahf
dec
repnz
xor
aam
pushf
and
dec
push
dec
jp
xor
inc
xor
sub
pop
push
sti
outsb
or
push
xor
ljmp
mov
mov
movsl
or
lds
xor
add
leave
sub
nop
jp
xchg
out
dec
and
inc
jns
out
adc
cmp
jecxz,pn
mov
jecxz
or
dec
jo
jecxz
setg
cmp
out
cli
cmp
es
sbb
jb
mov
cmp
shlb
inc
ret
lahf
xchg
test
jmp
cld
pop
sub
xor
ds
fcoml
xor
lds
fs
into
call
dec
mov
xlat
inc
inc
pop
mov
jbe
push
dec
loopne
popf
jae
outsb
jbe
and
out
xlat
loop
xlat
mov
mov
andb
dec
xchg
test
push
xchg
subb
mov
out
fcmovnb
sub
in
std
out
pop
stc
or
fimull
sub
mov
pop
cwtl
jle
sbb
jmp
in
sahf
jnp
arpl
icebp
outsl
sub
or
lods
data16
fnstcw
in
sbb
xor
inc
cmp
and
mov
stos
xor
dec
cld
sbb
es
je
sub
shrl
dec
mov
jle
lret
mov
pop
pop
mov
call
push
mov
lret
fsubrl
leave
cmp
ret
xor
pop
jns
imul
ror
mov
jecxz
jge
ds
aas
mov
push
sahf
in
xor
out
mov
out
push
sub
stc
ret
mov
dec
or
cmpsb
pop
or
pop
std
stos
cld
push
daa
push
lea
mov
cwtl
mov
push
mov
xchg
loope
pop
jmp
cwtl
adc
adc
push
dec
xchg
jb
push
sub
mulb
dec
jmp
push
mov
lret
rorl
pop
sbbl
pop
test
loope
imull
out
pusha
push
cmpl
push
push
aas
out
sub
jnp
out
push
add
icebp
nop
inc
push
cmpl
push
aas
ljmp
pop
sbb
adc
bound
lods
fwait
test
mov
pop
mov
and
mov
pop
sbb
push
stos
dec
loope
mov
sub
mov
cmp
in
test
cli
repz
cmpsb
movsl
sti
xchg
sarl
shrl
shll
mov
rcrb
bound
jae
lods
shrl
cmp
jp
cltd
jg
sarl
xchg
ljmp
enter
mov
loopne
outsl
sbb
cmp
mov
xor
push
nop
repnz
add
lds
fcomps
jecxz
cli
push
fwait
out
fs
adc
ja
icebp
xchg
mov
dec
mov
mov
pop
xor
movsb
or
lahf
xor
shrl
pusha
cmp
mov
ja
je
loopne
xchg
cmp
push
push
divps
cmp
std
hlt
clc
add
mov
push
xchg
mov
int3
adc
aaa
outsb
sub
mov
push
jecxz
push
dec
mov
popa
jl
imul
pop
mov
or
and
push
stos
scas
push
push
mull
mov
xchg
pushf
push
and
inc
outsb
mov
push
movsb
ds
pop
sbb
in
into
cmp
shlb
pop
xor
ret
cmp
pusha
push
xchg
daa
jae
and
bound
mov
ret
jmp
pop
idivl
popa
or
pop
xlat
fmull
test
ja
fcompl
aam
mov
in
shlb
cmpsl
ja
mov
movsl
out
insb
jge
icebp
fstpl
xlat
xchg
cltd
xchg
aam
mov
xchg
cs
je
test
arpl
popf
and
xchg
pop
ds
sti
arpl
test
jmp
and
stos
xchg
mov
xor
add
rclb
inc
cmc
enter
fwait
in
mov
fidivs
cmpsb
mov
dec
je
in
jnp
outsl
cmpsb
mov
ret
mov
adc
inc
in
clc
mov
xchg
jnp
test
xchg
repnz
mov
push
in
fwait
inc
push
push
lahf
add
xchg
adc
leave
or
xor
sub
cmpsb
pop
fwait
daa
not
mov
pop
popf
jnp
lds
jbe
dec
pop
lock
pop
pop
dec
push
mov
sbb
mov
lock
popf
push
jmp
out
pusha
cwtl
mov
shl
xchg
jecxz
push
int
add
add
dec
das
leave
stos
xor
adc
inc
fildl
cmp
dec
icebp
push
jle
fildl
jecxz
mov
inc
scas
mov
cmpsl
pop
dec
dec
and
push
xlat
push
test
ret
or
mov
test
xchg
lds
add
jo
incb
lods
outsb
rorb
cltd
test
mov
je
test
pop
mov
sub
repz
pusha
dec
js
mov
iret
out
leave
mov
aaa
pop
repz
inc
cmpsb
fimull
fs
aas
jmp
xchg
fnstsw
loop
mov
cld
pop
ljmp
subb
pop
scas
dec
lahf
int
mov
sbb
mov
pushf
addb
iret
mov
addl
jns
imul
mov
ret
push
lods
enter
dec
push
inc
add
adc
dec
mov
xor
mov
mov
std
xor
inc
data16
and
xchg
addl
ds
stos
push
mov
push
dec
cwtl
test
adc
lock
ret
cwtl
jnp
out
leave
adc
pop
push
cs
test
data16
out
nop
xchg
mov
outsb
cmp
adc
jecxz
sbb
cmp
mov
in
mov
das
inc
mov
adc
pop
dec
dec
pusha
hlt
xor
sbb
test
and
jg
mov
movsl
sbb
mov
fisubrs
mov
push
jp
clc
xlat
or
out
lret
rclb
xor
pop
daa
daa
fwait
sub
inc
add
or
data16
bound
cmpsb
sbb
rclb
popa
clc
push
es
mov
into
gs
lds
fbld
push
mov
cmp
adc
and
repz
xchg
pop
js
inc
cmp
sbb
fiaddl
xchg
loope
push
push
ds
pushf
out
int
mov
aad
pop
pop
ja
jo
lret
aad
pusha
or
ja
push
fcomps
test
ljmpw
and
shll
insl
shll
fwait
in
cmp
add
pusha
ljmp
push
int
aas
je
sub
shlb
dec
rorb
mov
mov
mov
repnz
sub
sub
xor
adc
mov
cmp
rorl
add
sti
push
test
imul
fidivrl
mov
jg
gs
mov
jb
cs
jge
out
add
and
out
cmpsl
and
imul
push
add
and
add
push
into
fimull
and
ret
inc
hlt
fstl
bound
push
sbb
mov
daa
inc
out
jp
sbb
mov
daa
lods
xchg
pop
imulb
xchg
testb
rcll
mov
shll
in
sub
or
jmp
mov
es
mov
mov
in
fcomp
cs
inc
jbe
sar
xchg
adc
testb
sbb
pushf
negb
fwait
cmpsb
push
xchg
sbb
outsb
dec
dec
imul
sub
jecxz
and
xlat
pop
cmp
xor
xorb
in
sub
clc
arpl
divb
and
testb
stos
cltd
movsl
push
fadds
adc
cltd
test
inc
fmull
js
test
icebp
push
sbb
mov
clc
int3
in
popf
xor
dec
jns
imul
dec
cs
filds
push
xor
xor
test
push
fldcw
hlt
or
xchg
fisubrs
push
mov
jnp
lahf
arpl
xchg
shr
mov
imul
bound
mov
aad
fadds
bound
cmp
sbb
ds
jnp
arpl
cwtl
inc
inc
les
ret
or
daa
sbb
cmp
sarl
sti
pusha
pushl
dec
mov
mov
jmp
pop
jle
xchg
cld
xor
call
clc
dec
push
mov
cmp
push
mov
dec
enter
pop
fnsave
cli
xchg
rcl
shll
pop
hlt
mov
in
leave
in
mov
outsl
mov
xlat
test
scas
leave
nop
lcall
lock
js
xor
lret
mov
orl
test
andb
sub
push
or
cmp
fdivrs
ja
pushf
fmull
stc
inc
mov
pop
mov
call
popa
mov
push
sub
incl
xchg
fsts
sti
pop
imul
cmp
sub
jp
xchg
mov
sbb
icebp
bswap
xchg
fnsave
mov
repnz
insb
mov
roll
mov
lret
or
xchg
pop
aad
subb
xor
hlt
mov
icebp
mov
subl
adc
movsl
xorl
xor
cltd
pop
in
test
push
sub
cli
sub
jae
add
sbb
or
fistps
and
sub
add
daa
and
fistpll
scas
imul
dec
jns
sbb
ljmp
dec
inc
mov
movsb
pop
daa
test
xchg
minps
or
outsl
psubusb
fnop
xchg
scas
dec
decl
insb
xor
ds
mov
mov
adc
add
test
cltd
pop
push
nop
lahf
jmp
outsb
sbb
ret
fcmove
test
cmpsb
test
js
lcall
add
jecxz
mov
sbb
cmp
lcall
push
cwtl
adcb
or
add
adc
loop
imul
and
cmp
mov
cltd
mov
or
jae
out
pop
sbb
sub
cmp
loopne
xchg
movsl
fwait
push
push
lcall
mov
xchg
sub
jp
mov
mov
jns
xlat
push
jmp
shll
repz
jp
mov
jb
sbb
std
int3
mov
xchg
add
sub
adc
inc
or
ret
and
jle
ret
loope
xchg
sbb
cs
push
das
xor
sbb
pop
jge
fadd
int3
pushl
test
xchg
dec
mov
xchg
jle
xor
inc
inc
mov
adc
inc
dec
and
lods
xchg
push
xchg
jg
punpcklbw
es
lds
xor
xor
sbb
pushf
pop
leave
leave
pop
loope
adc
aas
dec
dec
aad
cmpsl
xchg
ret
xor
pusha
lfs
punpckldq
int
aam
xchg
stc
dec
dec
mov
stos
ds
shrl
js
pop
out
icebp
xchg
stos
ja
mov
xor
clc
hlt
popf
add
repz
mov
data16
jns
add
xor
into
jnp
jnp
and
push
xchg
sbb
cli
add
movsb
inc
lahf
imul
in
ljmp
cmpsl
adc
push
scas
sub
sar
sbb
inc
adc
out
movsb
icebp
lahf
jne
fcmovbe
and
xchg
movsl
jb
sub
jmp
mov
fdivrs
negb
jg
ss
mov
cmp
insb
in
lret
in
out
or
add
iret
lret
in
imul
sbb
fistpl
push
push
cmpb
lcall
je
mov
insl
adc
inc
pop
adc
xor
jo
cli
pop
push
sub
dec
xor
lcall
mov
adc
push
leave
mov
mov
inc
add
insl
scas
int3
mov
mov
jnp
xor
adc
leave
jo
and
movsl
lods
jbe
xor
jmp
ss
sub
lea
push
stc
sbb
insl
add
mov
jnp
or
loopne
loope
jns,pt
daa
fdivrs
sarl
fldl
sub
mov
jg
jne
or
xchg
jg
xchg
cmp
xchg
loopne
ret
cmp
pushf
or
enter
mov
enter
lret
mov
jmp
call
aas
leave
sub
lret
or
push
lahf
subb
lods
lods
shrl
loop
jns
or
cwtl
cli
loopne
pop
cmpsb
and
jbe
push
jb
jle
bnd
aaa
mov
cltd
inc
pop
dec
mov
and
inc
data16
fwait
push
or
out
rcll
dec
sbb
rorb
jno
pop
mov
cmp
pop
dec
adc
fiaddl
add
xlat
sahf
mov
imul
push
pusha
dec
or
jne
pop
in
fisubs
enter
push
xchg
jne
aad
ja
pushf
dec
xchg
out
adc
cmp
stos
or
frstor
cmp
pop
xchg
iret
stos
pop
or
cs
pop
lret
cmpsl
out
inc
sub
in
notl
mul
dec
sahf
jae
jecxz
or
sub
aas
pop
push
shr
int
ror
ljmp
scas
mov
stc
add
pop
dec
push
push
ret
jno
test
jae
insl
les
xchg
test
push
add
dec
dec
xor
dec
bound
shlb
pop
mov
add
cmpl
jb
jb
ss
dec
subb
fstpt
clc
xor
addb
leave
subb
jbe
push
pushf
add
enter
mov
out
push
mov
loopew
mov
pop
sub
adc
je
test
or
pop
add
add
or
aaa
push
jb
cmp
fistps
pop
dec
clc
je
mov
xchg
sub
jne
mov
jae
enter
mov
daa
mov
sahf
xchg
lret
scas
pushf
inc
push
mov
out
jns
push
sub
sub
sbb
and
js
ss
push
xor
jbe
insb
rcrl
test
or
add
pop
loopne
mov
test
shrl
ror
int
mov
test
xchg
mov
js
lret
jecxz
dec
imulb
fisubrs
std
dec
iret
sbb
scas
xchg
push
lea
loopne
cmpsl
cmp
xor
lods
push
aad
inc
pop
sub
jle
lock
push
gs
pop
sti
add
js
mov
mov
inc
mov
out
xchg
jle
xchg
or
nop
xor
pop
jle
push
rolb
shll
sti
push
xchg
jno
adc
shll
int
js
adc
sub
xchg
std
xlat
push
arpl
test
testb
inc
test
rclb
mov
std
pop
clc
cltd
inc
and
xchg
adc
js
pop
sbb
adc
in
mov
adc
pop
out
rcll
xchg
mov
xor
sub
iret
fmuls
js
jl
lds
xchg
xor
or
push
fadds
popf
shl
insl
xor
pusha
add
xor
ja
push
pop
sub
into
xorb
cwtl
test
adc
fildll
inc
mov
mov
xchg
sub
and
leave
jne
sub
testl
dec
aaa
pop
lds
pop
sbb
outsl
lods
fiaddl
jnp
mov
mov
push
push
pop
lahf
ret
push
xorb
test
cltd
xchg
mov
subb
in
and
imul
and
xor
jns
mov
and
int
pop
cld
icebp
cmc
imul
rorb
cwtl
cltd
popa
mov
popa
out
cmp
stos
jg
adc
jae
fidivrl
xor
adc
mov
add
bound
int3
mov
ss
jecxz
jnp
or
adc
ljmp
mov
je
sbb
jmp
icebp
jno
call
push
push
jo
shlb
mov
xchg
dec
orb
cmp
pxor
push
mov
pop
lea
or
sti
cmp
mov
daa
pop
mov
dec
cltd
loopne
cmp
cltd
mov
test
sbb
jl
fst
jmp
arpl
sub
insl
addr16
testb
int3
inc
dec
adc
ljmp
xchg
cmp
mov
sbbb
jl
das
adc
shl
and
fsubl
stc
push
ret
dec
push
test
pop
lods
add
or
fsubrl
scas
test
sbb
pop
fdivl
cmpsb
inc
sbb
aas
fistl
mov
push
int3
scas
xor
mov
fadds
sahf
popf
xor
pop
loopne
mov
push
orb
sbb
xchg
pushf
repnz
jge
das
shll
out
aaa
inc
iret
xor
mov
outsb
enter
cmpl
jns
pop
add
mov
fs
out
xor
xchg
ficoml
dec
std
dec
jp
push
insl
jg
push
sbb
add
cmp
popa
cmpsl
mov
sar
adc
sub
jne
sub
dec
mov
mov
add
add
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
xor
add
ret
ljmp
repnz
fwait
push
iret
fidivl
xchg
mov
adc
and
mov
push
xor
mov
push
xor
mov
push
ds
insb
test
mov
mov
adc
or
mov
jo
pop
jmp
adc
and
pop
mov
sbb
push
mov
push
sub
mov
cmp
sub
inc
arpl
das
sub
mov
ret
fwait
insb
cmp
mov
mov
fnstcw
xchg
push
arpl
stos
dec
push
sarl
mov
sub
xchg
mov
fwait
push
sahf
add
sbb
push
cmp
pop
mov
negb
fucom
push
fld
or
push
pop
inc
sbb
jl
mov
fwait
cmp
and
test
sbb
bound
fwait
std
push
cmp
bound
popf
push
xor
mov
push
xor
xchg
mov
cld
push
xor
je
test
call
je
test
add
add
je
test
incb
je
xchg
xchg
mov
push
xor
mov
push
mov
jg
in
xchg
mov
fwait
or
xchg
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
les
cmp
je
test
cli
push
xor
and
cmp
je
stos
out
jo
cmp
je
mov
mov
push
and
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
push
xor
mov
mov
bound
inc
xor
or
in
jns
ljmp
jg
shll
adc
adc
sbb
lret
and
cmp
add
fstl
dec
test
sti
sub
fadds
dec
aad
arpl
nop
lds
outsb
gs
jbe
dec
nop
sub
es
jecxz
sahf
repnz
mov
xchg
push
and
fistl
push
sub
out
aaa
xchg
insb
dec
sbb
mov
push
fldt
into
and
jg
pop
aad
jo
dec
rcrl
and
mov
ficomps
shll
pop
push
scas
and
jl
jg
dec
out
nop
inc
mov
mov
sub
lret
lea
mov
icebp
adc
lods
mov
clc
mov
out
mov
pop
and
mov
jecxz
scas
and
sub
xor
es
add
das
mov
popf
dec
dec
es
dec
das
pop
stc
fsubrs
sbb
and
or
push
ljmp
cli
cltd
add
jne
movsl
mov
lods
or
jle
test
mov
fcmovnb
or
cmp
cmpsl
jmp
popf
lret
push
fisttps
in
push
mov
adc
rep
fistpll
push
mov
lahf
push
pop
xchg
cmpsb
mov
shrl
ret
fs
pop
push
or
jno
or
ljmp
mov
fsubrl
inc
sub
dec
out
lods
jnp
mov
ret
jno
dec
jmp
xor
loopne
js
shrb
hlt
je
inc
fsubr
inc
addl
push
adc
loop
sub
dec
dec
xor
ds
xor
xchg
cs
push
add
es
jg
in
sub
jle
cwtl
inc
pop
lods
addl
loope
bound
dec
jns
cmp
test
jl
xchg
icebp
repz
pop
sub
xchg
out
loope
movsl
je
jo
repz
xchg
sub
xor
bound
popf
stos
and
call
xor
dec
test
ror
jg
gs
sub
and
xor
xchg
and
pop
decb
inc
fsubrs
fbld
xor
test
negl
pop
ret
outsl
ja
ds
pop
jno
mov
sbb
lods
cmpsb
xlat
scas
lret
mov
ss
mov
xchg
mov
mov
clc
pop
in
or
push
orl
out
mov
and
cld
pop
jno
out
enter
hlt
test
adc
push
cmc
xchg
mov
loop
xchg
fstpl
jno,pn
loopne
push
popf
adc
adc
sbb
pop
mov
or
gs
cmp
jno
or
cmc
mov
sbb
repnz
imull
dec
sarl
mov
lods
fildl
call
test
shlb
mov
dec
loopne
sbb
data16
mov
fsubr
jb
lcall
inc
add
mov
and
push
inc
mov
add
adc
mov
jae
and
and
clc
cmp
mov
ds
sub
pop
xor
int
jp
test
mov
mov
pop
jle
add
ss
adc
ljmp
pop
sbb
adc
pop
fucomi
lea
push
cmp
pop
cmp
call
in
lcall
rorb
pop
inc
and
repz
add
insl
jl
lret
jno
jbe
orb
dec
xchg
push
ja
add
and
mov
jp
test
ja
ljmp
or
scas
fidivs
rcr
insl
mov
sub
lds
jne
push
ljmp
adc
adc
fdivrp
test
arpl
sbb
or
fsts
lret
xor
aad
movsl
pop
mov
ret
jmp
and
push
decb
ljmp
jp
scas
cmc
jg
and
add
dec
popa
aas
inc
mov
repnz
pop
adc
fwait
cmpsb
aam
xor
lret
fistpll
andb
in
adc
test
push
add
inc
mov
sub
add
jne
ret
pop
or
and
rolb
xchg
xchg
idivb
mov
cmp
out
cmpsb
loope
and
fsubrs
out
in
xchg
add
aas
or
sysenter
mov
lods
enter
aaa
out
ret
mov
rcl
mov
stos
repz
sbbb
ljmp
mov
ss
iret
push
loope
pop
or
in
xchg
push
jle,pn
xchg
bound
mov
in
mov
mov
dec
repz
int
inc
aam
jnp
or
jg
in
and
add
test
jl
push
sub
adc
test
test
push
lcall
std
or
mov
sahf
insl
xchg
adc
lea
add
movsl
add
mov
in
jnp
push
mov
mov
movsb
mov
dec
mov
daa
lcall
lahf
mov
mov
loop
fdivp
fcoml
pushf
jo
loope
sbb
jge
jb
repz
adc
inc
cltd
push
add
sbb
mov
repz
xor
stos
in
dec
adc
jle
and
mov
jl
aad
in
and
jnp
mov
je
hlt
mov
cli
fwait
clc
scas
sbbb
out
test
or
sbb
cli
xchg
push
cmc
outsb
push
in
scas
test
ds
cmp
inc
lahf
pop
insb
or
pop
pop
testl
adc
or
out
xor
and
dec
add
cmc
enter
call
jno
mov
pusha
out
push
add
repz
mov
iret
dec
push
inc
and
dec
dec
xchg
or
lea
adc
and
fmuls
mov
mov
enter
inc
add
mov
es
repnz
ljmp
push
xchg
clc
xor
mov
dec
mov
adc
mov
ret
aaa
sub
aaa
into
and
xchg
rorl
lock
jne
and
or
test
dec
xlat
inc
sbb
push
pop
lea
mov
jb
idiv
xor
call
mov
cmp
jle
fs
adc
mov
movsl
sbb
bound
jb
pop
test
sbb
cmpb
adc
das
xor
or
sbb
and
sbb
pop
scas
sub
hlt
mov
inc
sti
ret
js
jns
sahf
mov
push
and
loop
mov
iret
ss
xchg
and
cmp
hlt
aam
cltd
mov
arpl
pop
leave
scas
lcall
pop
movsl
idiv
and
inc
cli
sbb
test
add
add
mov
pop
sub
pop
xchg
into
repnz
fidivl
push
or
pop
adc
inc
cmp
test
negl
lods
inc
mov
clc
mov
arpl
jl
xchg
rorl
popa
sbb
aas
cmp
mov
xor
adc
inc
shrb
scas
mov
stos
pop
jnp
jecxz
adcb
neg
addr16
xor
and
loopne
int
int
repnz
add
pop
ret
mov
mov
jne
daa
loopne
jp
insl
call
aaa
or
jns
enter
or
shl
mov
sub
lcall
loope
push
or
mov
test
lret
pop
addr16
fs
jnp
in
jecxz
inc
mov
mov
je
dec
fstpl
add
xchg
fldenv
adc
cli
jl
jp
pusha
and
inc
cli
or
push
call
sbb
fildll
dec
push
push
bound
add
test
loopne
jle
jnp
adc
imul
les
jge
push
jb
mov
adc
mov
iret
and
fcompl
and
push
jns
mov
rcrb
pop
in
ficoms
aas
cmp
add
scas
arpl
and
mov
inc
mov
jb
mov
lcall
pushf
nop
add
mov
pop
cmp
out
aaa
cli
in
sub
ljmp
sub
imul
sar
not
mov
dec
inc
fimuls
xor
sub
lea
xor
sbb
mov
and
dec
sbb
lods
dec
and
mov
ret
dec
sahf
xorl
mov
push
repnz
pop
testb
mov
mov
movsl
pop
popf
pop
icebp
jmp
nop
insb
xor
repnz
mov
push
data16
mov
and
stos
int
sub
rcll
loop
mov
mov
pop
or
std
mov
sbb
sti
jg
jmp
pusha
jmp
call
jp
jecxz
pop
insb
jg
xor
xor
jno
icebp
xlat
pop
cmp
sbb
dec
xor
push
das
xchg
aas
mov
pusha
inc
in
jnp
sarl
jle
xorb
dec
cmp
mov
pop
icebp
in
enter
repz
pop
ret
dec
dec
dec
push
shlb
int
xor
enter
stos
rolb
fiaddl
xor
pop
cmp
ror
or
pop
fsubrs
fsincos
lret
mov
lret
jle
popa
mov
aad
mov
lcall
xorl
add
or
in
ljmp
das
loopne
or
into
jl
inc
push
mov
sbb
jo
cmp
ljmp
fimull
frstor
dec
jl
orb
lret
bound
cmp
push
mov
xchg
jns
push
lret
fstpt
aad
int
call
test
lds
mov
sbb
push
mov
inc
inc
mov
xor
std
jo
or
pop
pop
repz
push
enter
dec
idivb
and
xor
flds
int3
lcall
xor
out
dec
call
mov
daa
inc
js
into
mov
aam
loope
xchg
xchg
cmpsb
mov
in
cmc
and
sti
es
rcll
mov
frstor
or
pusha
insl
mov
and
jae
push
sbb
sbb
aaa
push
mov
pop
ret
mov
sbb
hlt
enter
add
stos
sbb
clc
sub
orl
js
cmpsl
cltd
into
mov
or
mov
stos
outsl
mov
testl
mov
sub
loope
mov
and
pop
xor
clc
sbb
pusha
sahf
gs
cld
mov
clc
jg
fisubs
cwtl
push
xor
fistl
cltd
sub
clc
sbb
dec
or
loope
aad
and
mov
mov
xor
out
lsl
pushf
in
dec
mov
mov
cmpsb
xor
loop
adcl
ss
sub
jns
cmp
push
cmp
adc
xchg
cli
popa
fwait
sti
scas
stos
loopne
xor
stos
pusha
les
lcall
mov
pop
sti
popa
and
test
jecxz
lds
sti
lea
or
jg
test
cmp
hlt
mov
cld
insb
jge
gs
aad
xchg
negl
repz
scas
add
mov
movsb
jmp
lahf
and
cld
out
aas
jb
inc
fs
aam
lods
dec
pop
dec
mov
adc
sti
jge
jb
sbb
repnz
frstor
xor
shr
jl
in
cmp
pop
lsl
pop
xor
dec
push
mov
or
filds
mov
sbb
fcmovnbe
inc
push
imul
xchg
out
shrl
xchg
repnz
stos
xchg
lods
and
outsl
and
ljmp
mov
pop
es
inc
movsb
mov
das
stos
and
jg
ret
xchg
call
cmp
outsl
in
sbb
sahf
mov
adc
adc
test
fwait
cmp
loop
leave
cmp
hlt
cmc
pop
pop
lcall
jp
cmp
fidivs
outsb
sti
jne
clc
cwtl
xchg
xchg
xchg
cmc
js
mov
or
inc
push
in
lret
add
rolb
mov
mov
add
leave
jge
in
or
test
dec
std
mov
sti
test
xchg
dec
sbb
dec
push
jae
pop
or
inc
decb
jg
xchg
arpl
sbb
cld
and
mov
test
mov
subl
cmp
mov
pop
arpl
out
sbb
mov
mov
call
fnsave
add
mov
fldcw
jg
imul
lcall
sub
or
stc
testl
and
pop
mov
push
mov
jb
sub
pop
fidivs
push
xchg
jae
jo
arpl
mov
add
xchg
push
and
sub
fidivl
in
mov
test
sbb
push
xor
cwtl
inc
lret
cmpb
popa
fistps
adc
dec
stos
cmp
lods
jns
aaa
xor
push
ret
and
stc
fcmovnb
cmp
cmpl
adc
sub
xchg
gs
mov
jbe
insb
into
and
jmp
or
out
or
pop
ljmp
cld
and
mov
cmp
shrb
sub
movl
mov
int
loopne
in
jl
xchg
sbb
push
mov
and
inc
jl
inc
or
mov
mov
adc
mov
push
loopne
mov
push
decb
xor
lahf
cmpb
imul
sbb
test
cmovnp
push
jle
addl
xchg
je
and
sub
jns
jb
mov
ja
sub
lods
sub
enter
ss
push
fsubl
outsb
out
jecxz
adc
xor
es
bound
lcall
repnz
push
inc
shll
pop
test
scas
fisubrs
call
loop
push
adc
rolb
nop
nop
nop
nop
jmp
