sbb
jns
mov
ds
daa
cltd
add
adc
jmp
imul
rcrb
mov
loop
insl
mov
adc
add
push
push
into
mov
loopne
lret
mov
hlt
movsb
or
lods
test
sub
fucomip
pop
scas
nop
inc
fcmovnb
shrl
push
and
cmp
lcall
test
lock
stos
pushf
mov
scas
mov
aad
cs
je
jae
ret
outsl
add
bound
mov
lock
jno
rorl
pop
push
inc
pusha
ret
pusha
xor
mov
cli
fwait
inc
push
shlb
in
pop
push
mov
jle
sbb
lcall
movsb
inc
jmp
in
mov
mov
inc
popf
popa
mov
lret
add
test
sub
in
rcl
mov
push
pop
out
lret
and
dec
shlb
jnp
inc
stos
outsl
jmp
out
xor
lock
add
dec
add
sbb
xchg
cli
popf
sarb
lods
sub
repnz
lahf
movsl
pop
sbb
sbb
dec
pop
pushf
inc
scas
jle
or
sbb
js
ss
leave
stos
xlat
ret
xor
push
jecxz
test
jns
mov
imul
in
cmp
xchg
jno
pushl
ret
in
inc
sarb
scas
pop
fsubrs
mull
mov
imul
stos
movsb
bound
and
aam
lds
mov
jno
repz
adc
cmovb
jmp
jno
mov
inc
std
xor
cld
xchg
notb
stos
inc
jge
sub
cmp
mov
lods
inc
cmc
loop
xor
inc
dec
fstp
pushl
out
mov
jp
mov
js
stos
or
lea
les
cltd
addr16
pop
xor
lcall
xor
push
loopne
add
hlt
xor
jmp
mov
jmp
shlb
jge
movsl
ja
adc
rcrb
mov
loop
ret
lods
mov
stos
mov
mov
pop
into
enter
flds
and
loope
xchg
mov
gs
scas
mov
sar
inc
xor
inc
jns
pop
jne
xor
dec
ja,pn
mov
ljmp
mov
bound
into
jno
and
push
movl
fs
sbb
sbb
jge
push
mov
sbb
subb
int3
sub
sub
or
imul
iret
inc
insl
jne
push
pop
cld
test
in
xor
pop
js
mov
or
mov
lods
cmp
xlat
sahf
push
cmp
mov
mov
cmpl
jnp
and
aad
mov
js
push
jbe
loopne
pop
push
sub
xchg
hlt
push
push
mov
jae
loop
shlb
xorb
mov
push
cmp
test
mov
fldl
add
fucom
push
es
mov
xor
lret
rclb
push
test
lret
jb
dec
mov
dec
inc
mov
pop
xchg
gs
das
add
cmpsb
mov
pop
cmc
push
ret
stos
pop
sub
mov
push
push
cld
pop
push
scas
lahf
cmpsl
sbb
pop
cmpsb
xchg
or
cmpsb
and
fsubs
data16
xchg
iret
out
test
ljmp
xor
jmp
lcall
sub
mov
lods
orb
jl
dec
idivb
jns
int3
push
das
mov
and
test
lret
jb
inc
mov
push
rorl
frstor
pop
xor
xchg
xchg
scas
rcll
fs
out
int3
int3
sbb
xchg
or
jge
push
fbstp
pop
mov
xchg
lahf
push
das
xchg
push
movntq
xchg
xchg
icebp
mov
je
cmp
jb
mov
push
subl
or
mov
xchg
loope
jge
cmp
aaa
mov
cld
and
jb
nop
push
add
mov
cmp
dec
sbb
push
loope
pop
push
shr
jo
movsl
loop
jae
in
pop
mov
js
mov
jae
adc
dec
sub
pop
adc
push
cmp
xchg
adc
out
clc
jl
les
xlat
in
xor
cmp
dec
out
ret
cmp
jne
sbb
pop
dec
push
and
in
ret
imul
loop
inc
sbb
xlat
dec
out
jne
pop
shlb
cmp
push
jmp
add
aad
xchg
call
out
movsb
out
ret
fisubs
mov
stos
lret
insb
xlat
into
ljmp
out
pop
fwait
lea
imul
jns
mov
mov
jecxz
mov
mov
ret
es
daa
in
ficomps
inc
scas
stc
outsl
jmp
loop
cmp
in
pop
jns
xchg
mov
cmpsb
loopne
cmpsb
sub
aas
inc
xor
daa
imul
push
scas
aad
in
cmp
int
data16
mov
sbb
mov
data16
jb
std
inc
inc
and
dec
ret
push
mov
mov
out
int3
sbb
cmp
pop
mov
pop
test
cld
cmpsb
mov
push
inc
enter
jl
insl
lret
cmpsl
push
mov
dec
and
xchg
ljmp
cmp
cld
mov
cmpsb
test
fildll
push
jb
loopne
add
fimull
adc
popa
imul
fwait
cmpsb
inc
loopne
cmc
pusha
scas
xor
ret
sbb
nop
dec
or
call
add
lcall
js
call
mov
roll
popa
addb
jl
mov
scas
out
push
mov
out
stc
cmp
add
lea
adc
jmp
fisubrl
cmp
or
dec
adc
xor
mov
jno
dec
jmp
sbb
repnz
pop
ds
nop
mov
notl
dec
push
fists
mov
sbb
pop
and
ss
add
icebp
jmp
pop
adc
add
sbb
push
fisttpll
mov
lret
shll
mov
add
test
mov
cmpsb
sbb
int
pop
aas
in
out
fs
pop
cwtl
mov
arpl
ficoms
pop
pop
xchg
in
pop
into
bound
int3
fs
mov
push
mov
scas
mov
xchg
in
cwtl
outsb
fdivl
adc
fcomps
cmp
cmp
xor
lea
dec
dec
pop
mov
je
int
xor
jle
adc
sbb
cmpsb
xchg
push
hlt
test
xchg
xor
ret
mov
imul
rolb
mov
mov
cmp
repnz
sbb
mov
rcrl
or
loopne
test
mov
fwait
mov
imull
cmp
mov
pop
mov
xchg
xorb
outsl
mov
xchg
inc
gs
sbb
sahf
aas
cmp
mov
sbb
mov
mov
mov
arpl
push
sti
stos
cltd
or
mov
popa
mov
xor
add
adc
xor
ljmp
fmulp
repnz
mov
lea
push
push
jl
mov
sbb
lea
stc
out
sbb
cmp
cmc
add
mov
lds
cld
xchg
mov
push
fwait
cltd
popf
bound
outsb
push
mov
lds
lods
fdivl
inc
inc
shll
outsl
aad
dec
scas
or
jns
add
adc
cmp
enter
pop
test
jns
lds
adc
xchg
ja
sbb
in
and
pop
pop
jecxz
into
push
shlb
xor
sub
pop
stos
push
loope
xor
jl
push
lea
shlb
lock
cld
fmull
lods
imul
cs
ss
sub
ss
scas
cmp
ja
aas
arpl
mov
cld
add
xor
sarb
adc
cli
jns
push
clc
fwait
dec
and
and
inc
cmp
mov
push
fwait
pop
cmp
jns
andb
jp
sbb
mov
test
mov
bound
aad
sbb
shr
xchg
push
sub
lcall
push
mov
and
adc
xchg
cmp
in
push
jo
in
jnp
fwait
push
mov
cld
mov
sub
mov
xchg
je
ja
ss
enter
mov
inc
push
rcr
sti
xor
ljmp
xor
out
add
fsubp
jg
xchg
imul
xchg
aas
out
cli
cmpsb
inc
in
pop
jle
and
pop
fisubrl
inc
xchg
scas
aaa
jmp
cmp
adc
imul
cs
scas
mov
das
inc
mov
mov
in
fnstcw
cltd
ss
jb
xchg
jp
xchg
test
mov
push
add
mov
pop
mov
xorl
pop
push
and
test
negl
mov
xor
mov
addl
ds
test
test
iret
push
push
pop
sbb
enter
jecxz
loopne
jns
add
mov
jo
xchg
loopne
je
xlat
iret
cmp
stos
dec
in
dec
ja
jmp
push
sbb
xlat
add
push
in
jl
mov
shl
sarl
inc
mov
rclb
mov
mov
jb
imul
sbb
jo
cld
dec
cwtl
nop
std
inc
adc
push
mov
imul
orl
cmp
xor
or
jecxz
and
std
jg
jp
rep
das
xchg
add
jae
xor
test
icebp
hlt
into
stc
test
int
loopne
aad
lret
sbb
mov
rcrl
fs
add
adcl
cmp
repnz
dec
pop
add
jmp
sahf
icebp
imul
xor
add
sub
addr16
jo
es
fldz
pusha
cmp
pushf
in
jbe
cwtl
cvtpi2ps
out
mov
fs
and
jmp
repz
mov
xor
pop
mov
popl
adc
pop
in
xchg
jbe
pop
repnz
fdivrl
inc
xchg
fwait
and
dec
mov
xor
mov
repz
cld
push
mov
les
outsl
movsl
nop
mov
sub
lea
inc
pop
fidivrs
push
lret
and
repnz
scas
mov
pop
je
inc
pop
inc
cmovb
mov
inc
jbe
ja
sbb
inc
lods
pop
call
daa
mov
outsb
and
mov
pop
rorl
in
dec
leave
sbb
add
cmp
movaps
out
inc
mov
add
inc
bound
sub
or
jmp
jmp
adc
dec
cwtl
sbb
xchg
jns
bound
lods
std
xchg
push
mov
mov
adc
pop
enter
je
movsl
int
mov
hlt
jno
or
push
dec
push
and
jmp
xor
add
stos
sub
aas
mov
xchg
and
push
push
push
and
pop
cwtl
lahf
inc
cmpb
pop
pop
jne
movq
mov
cs
repz
cmp
push
call
fdivr
or
loopne
and
adc
bound
cld
enter
cwtl
mov
cmpsl
cmp
mov
scas
push
andl
out
sbb
dec
cs
lods
movsl
inc
fdivp
into
xor
ja
mov
cmp
es
cltd
push
test
add
and
or
cltd
les
out
add
push
popa
fadds
aad
or
and
and
outsl
cmp
lods
xlat
bndstx
mov
shlb
xor
cs
mov
lds
inc
out
je
fimuls
push
sbb
shl
lods
add
jle
movsb
rorb
sub
std
pop
push
and
repnz
aaa
add
mov
aas
ja
incl
inc
xchg
jl
xchg
xlat
sub
loopne
sahf
popa
mov
push
cltd
xchg
cmp
sbb
inc
movsb
dec
sub
call
inc
xchg
cmpsl
test
lea
jg
mov
jae
mov
sub
loope
cwtl
ds
jno
arpl
andl
lock
xor
cmpsb
pop
xchg
and
adc
mov
cmpsl
mov
pop
inc
mov
popf
sbb
out
dec
sub
insl
out
mov
pop
lods
xor
lret
jmp
mov
out
jge
sbb
mov
test
xchg
adc
lock
subl
inc
inc
pushw
cmp
mov
lret
jae
push
dec
and
cld
nop
pusha
xchg
sbb
pop
hlt
inc
test
mov
fimull
fadd
xor
loopne
or
sub
adc
jecxz
or
mulb
xor
test
or
xchg
lcall
jmp
in
hlt
xchg
jp
bound
sti
cmp
cmp
cmpb
push
loope
mov
shl
ja
mov
aad
mov
add
imull
and
test
xlat
aam
jmp
jge
lods
push
ret
aaa
es
sbb
pop
test
dec
mov
sti
int3
push
imull
xchg
test
ret
inc
lahf
push
cmp
mov
push
add
je
jg
push
lahf
or
out
or
das
mov
pop
sahf
insb
aad
xor
mov
xchg
and
mov
fstps
js
movsl
nop
call
mov
fcoms
or
dec
pop
or
jg
add
fldenv
xchg
jg
pop
sbb
sub
cmp
insl
out
and
mov
data16
test
cs
mov
mov
sub
mov
cmp
jecxz
fsubrs
in
and
jecxz
xlat
loop
push
out
add
cmp
jecxz
lods
int3
repz
daa
pop
and
and
mov
push
jl
scas
shll
sbb
xlat
push
xor
int
xor
in
add
cmp
fbstp
pusha
sbb
sub
cmp
lds
lahf
aaa
int3
insl
sbbb
or
jp
xlat
test
sub
int3
rolb
pop
test
mov
dec
pop
push
sub
push
lahf
inc
mov
add
add
push
std
jbe
mov
pop
ror
data16
sahf
out
or
std
push
add
lds
pop
add
adc
inc
mov
imul
and
repnz
dec
mov
jb
xchg
sar
dec
xchg
push
jnp
std
orb
jnp
out
mov
movsb
mov
xchg
inc
jge
pop
in
aas
mov
xchg
add
and
mov
shlb
xorl
aad
pop
aas
mov
and
pop
pop
pop
repz
add
mov
mov
stos
inc
push
out
dec
sub
fcomps
mov
loope
test
inc
and
push
mov
sahf
xchg
movsb
jl
xlat
xchg
and
lret
fsubr
divb
sbb
in
out
adc
sbb
test
pop
in
imul
rorl
xchg
add
fnsave
xchg
lods
aas
adc
pop
mov
loopne
ret
loopne
in
lcall
dec
cld
add
cmp
sbb
inc
mov
sub
out
sti
insl
xor
pop
xor
inc
in
xchg
inc
mov
movsl
cmp
lret
xor
pop
test
mov
sbb
hlt
xchg
xchg
and
or
mov
andb
ja
scas
or
out
or
repnz
adc
fidivl
cmp
xlat
aas
test
add
stc
aaa
js
add
xchg
xor
adc
jb
nop
cwtl
pop
repnz
jg
adc
adc
lock
push
inc
mov
mov
push
in
inc
fs
lret
xchg
and
pop
push
movsl
fldln2
or
adc
sbb
test
dec
xchg
mov
mov
ds
icebp
or
jbe
outsl
jg
mov
xchg
or
sub
std
jle
call
mov
add
push
loope
adc
and
inc
mov
in
cmpsb
xchg
movsb
stc
mov
nop
test
mov
mov
pusha
mov
cld
sbb
and
dec
stc
aas
cltd
push
hlt
xor
js
psllq
cld
mov
dec
xchg
cs
movsb
repnz
xor
xor
hlt
pop
pop
lcall
push
push
push
scas
ret
cs
mov
push
cltd
loope
pop
xor
and
rclb
ljmp
push
mov
sbb
daa
pop
or
test
jnp
sbb
push
mov
js
fs
sbb
dec
jnp
fdivs
dec
push
nop
cmp
scas
mov
lret
push
push
sahf
ret
jle
enter
sub
cmp
sub
rclb
pop
adc
mov
add
aaa
stos
mov
icebp
add
cld
or
int
dec
nop
or
in
cmovnp
fxtract
outsl
mov
push
pandn
mov
cmpsl
test
cs
popa
pop
cmc
jae
fistl
ficoml
xchg
fisubrs
dec
mov
xlat
scas
push
mov
nop
and
xchg
mov
leave
push
out
test
enter
cwtl
push
repz
in
mov
or
jo
dec
nop
mov
rcr
call
add
sub
test
bound
cmc
mov
sarl
mov
xchg
popa
adc
mov
fistpl
lret
xchg
mov
call
inc
frstor
lds
inc
xchg
cmp
shlb
or
out
test
repz
rcrl
scas
mov
and
stos
mov
cmp
sub
into
insb
jb
daa
outsb
push
test
mov
clc
ret
mov
xor
adc
scas
add
in
sub
insb
test
fs
inc
addr16
sub
popa
mov
out
sbb
das
xchg
out
flds
in
push
jno
es
fidivrs
movsl
lock
push
addr16
test
xchg
pushf
pop
into
xchg
pop
jns
pop
outsb
inc
js
mov
test
jb
jmp
aam
cmp
sub
sub
daa
xor
ret
cmp
adc
outsl
pop
push
pop
mov
call
jecxz
rcll
call
scas
xchg
xchg
pop
xchg
pop
in
cmp
or
jns
mov
mov
mov
enter
hlt
inc
sub
or
cmp
pop
enter
movsb
std
jbe
or
nop
cmp
push
or
mov
mov
loope
ret
mov
jl
dec
movsb
inc
loope
bound
mov
xchg
push
mov
repnz
and
iret
jecxz
lds
and
adc
sbb
mov
xchg
addr16
mov
in
jl
jb
adc
arpl
cmp
xor
dec
adc
inc
sbb
out
fiadds
xor
movsl
pop
xor
and
pop
out
fidivs
inc
out
ret
out
adc
pusha
inc
imul
lcall
addr16
sub
icebp
pop
cltd
mov
ret
popf
push
mov
out
int
xor
imul
rclb
or
insb
xchg
jle
mov
js
sahf
data16
mov
add
int
mov
sbb
pop
mov
xchg
rcl
movsb
jo
mov
iret
jbe
jecxz
fstl
scas
dec
stc
psrad
jge
mov
andb
sub
sarl
push
sbbl
xchg
imul
or
inc
xor
pushf
lea
jle
imul
or
in
and
push
mov
icebp
adc
inc
fsts
leave
mov
repz
or
je
repnz
jae
scas
fidivs
dec
clc
fldl
mov
addr16
push
pop
sub
icebp
xchg
push
pushf
mov
faddl
fwait
mov
xchg
mov
mov
inc
sbb
or
dec
mov
sbb
ljmp
lods
cmpsb
inc
out
sbb
mov
addl
mov
outsl
inc
add
mov
push
jns
inc
mov
mov
and
test
adc
sbb
cmp
xchg
jo
popf
jb
movsl
adc
stos
in
mov
dec
aam
movl
push
lock
mov
jp
into
loopne
cltd
daa
mov
inc
ret
test
les
inc
or
jg
pop
movsl
fists
fcoms
lcall
cmp
and
dec
fldt
xchg
mov
jns
sbb
test
roll
sub
popa
outsl
xchg
std
shll
adc
fisttpl
cld
and
and
sub
rcll
in
jae
fstpl
in
hlt
out
test
shlb
mov
les
dec
xor
nop
push
push
inc
loope
fmull
stos
push
cmp
aaa
movsb
add
push
jge
shlb
mov
cmpsb
dec
negb
xorb
push
insb
cltd
rorl
adc
mov
xor
jae
pushw
out
mov
pop
pop
add
les
dec
xchg
test
cmpsb
push
in
lods
jp
xchg
or
fsubs
mov
add
mov
fadd
pop
mov
mov
cli
incl
sbb
mov
inc
dec
andl
mov
xchg
sbb
cmpsb
mov
push
std
lret
insb
data16
sub
ret
outsb
sub
mov
mov
jnp
and
bound
in
mov
lcall
bound
dec
xchg
jne
pop
mov
pushl
cwtl
aas
je
xchg
dec
adc
shll
jns
ror
mov
in
and
cmpsl
dec
cmp
jg
out
push
movsl
lds
rcr
mov
aam
js
sub
cmc
mov
sti
lahf
imul
pop
xchg
ds
aam
lods
pop
jo
inc
cmp
jno
push
cmc
jmp
pop
icebp
repnz
aam
jb
or
xchg
arpl
mov
fidivrl
mov
shll
dec
cmpsb
cli
pop
testl
popf
in
add
adc
xor
out
mov
repnz
jnp
fldcw
cmpsb
sub
mov
cli
sbb
push
dec
leave
xor
dec
das
iret
sub
pop
dec
inc
pop
lea
stos
mov
ja
add
aas
out
mov
call
jae,pn
adc
jecxz
cmp
movsb
aas
jae
jp
fcoms
stc
jp
xchg
shr
mov
jmp
test
aas
xchg
aas
inc
iret
push
sub
jg
mov
sahf
pop
mov
rcrb
mov
cmovg
mov
jge
ret
arpl
dec
mov
iret
imul
cwtl
shrb
movsl
loop,pt
and
bound
mov
clc
cmpb
imul
out
inc
push
add
sub
and
jp
insl
jp
jbe
mov
jae
fisubs
ret
pop
testl
lahf
std
jge
jne
rolb
dec
pusha
pop
leave
mov
das
mov
xchg
fidivrl
mov
jmp
movb
pusha
xor
pusha
cmp
les
add
jno
fnstsw
jne
xor
jg
jbe
pop
in
dec
mov
or
imul
rcll
inc
push
xchg
outsl
xor
fsubrs
dec
clc
lock
mov
leave
mov
jnp
or
mov
shll
mov
push
pusha
push
gs
push
mov
insl
mov
fmuls
add
sub
ss
mov
add
movsb
lds
mov
adc
mov
sbb
insb
movsl
in
sbb
outsl
repz
cmp
std
insl
aad
cs
mov
test
out
fstpt
scas
or
mov
adc
sbbl
jno
std
xchg
dec
xor
pop
push
jae
xchg
cmp
ret
lds
mov
sub
push
not
and
push
cmp
xchg
mov
stc
pop
sbb
mov
shl
faddp
add
fsubrl
shll
mov
or
inc
arpl
pop
push
mov
int3
imul
data16
pop
and
lret
int3
sbb
fwait
repnz
push
std
imul
add
cmp
popf
scas
call
cmpsb
and
addr16
insl
lods
mov
mov
lahf
pop
inc
lds
mov
mov
test
push
sbb
mov
fisubs
push
cmp
mov
sbb
or
jge
mulb
lret
movsl
bound
arpl
orl
in
mov
ss
stos
test
and
xor
mov
stc
jle
and
not
pop
in
xor
sbb
xor
sub
icebp
cwtl
pop
cmp
icebp
loope
jns
dec
jno
divl
jne
or
cmp
mov
mov
in
sbb
andl
bound
jns
pushf
sub
aad
inc
mov
adcb
jnp
loop
aas
loopne
addr16
aam
cmp
pop
dec
loopne
push
sub
add
sub
sbb
pop
out
mov
lods
pushf
or
xor
pop
insl
dec
fnclex
mov
ja
in
push
or
xor
push
fistps
bound
add
mov
sahf
sub
mov
addr16
call
pop
shlb
and
movsb
cmp
mov
xchg
jbe
out
dec
xor
or
sub
test
popa
dec
jnp
call
loopne
call
dec
push
inc
sub
pop
and
lds
dec
inc
push
sub
inc
addr16
out
mov
pop
push
nop
popf
jnp
jl
adc
mov
xor
pop
pop
and
mov
mov
out
inc
sub
clc
dec
jle
mov
loopne
clc
push
pop
pop
dec
mov
jbe
nop
call
push
cmp
jle
divl
inc
pop
aaa
sbb
movb
mov
test
sbb
cmp
lret
dec
push
hlt
ds
and
and
pop
mov
mov
addr16
cmp
fsubp
lods
add
enter
pop
jns
jnp
mov
lods
push
test
add
pop
cmp
xor
std
dec
test
inc
cli
mov
push
pushf
and
xor
push
fsubp
stos
xchg
popa
in
rcll
jb
mov
xchg
bound
inc
add
push
sbb
mov
adc
inc
sarb
out
jg
pop
adc
jmp
push
shlb
add
imul
mov
sarb
sbb
insb
dec
in
shrb
cmp
add
lret
adc
or
cltd
or
push
mov
call
outsl
jne
loope
dec
jne
dec
dec
in
add
lret
or
xchg
adc
jecxz
scas
pop
mov
dec
inc
xchg
push
testb
or
movsl
push
enter
cmp
push
sbbb
jb
iret
mov
movl
dec
xchg
data16
in
mov
mov
lret
xchg
mov
lods
cmp
out
adc
icebp
add
out
fcomps
xchg
lret
lahf
out
mov
lcall
cmp
enter
sbb
push
pop
push
xor
movsl
aas
orb
mov
cmp
out
adc
inc
ja
jle
dec
dec
xchg
add
sub
cmpsb
push
jp
in
enter
test
lds
add
cld
stos
dec
push
sbb
out
fs
insl
call
or
int3
inc
xlat
dec
xlat
xchg
jb
jmp
pop
xlat
pop
fisttpl
or
loopne
pusha
sub
icebp
ljmp
mov
mov
dec
inc
pop
inc
inc
push
xchg
mov
push
aad
lcall
ljmp
loope
push
push
inc
mov
or
sub
lret
ss
hlt
shrb
dec
adc
push
lds
cmpsl
lds
dec
test
push
out
mov
inc
aas
jae
cmpsl
out
mov
dec
call
xor
shrl
hlt
fidivrl
and
sub
es
stos
add
ret
out
icebp
push
out
jge
sub
jbe
add
lcall
pop
adc
or
faddl
hlt
and
addr16
mov
sub
mulb
jge
sbb
push
mov
jmp
insb
shll
and
mov
mov
out
xor
out
out
test
gs
mov
shl
aas
cmp
push
lds
fbld
jno
mov
jecxz
adc
mov
daa
std
mov
add
sti
frstor
insb
lret
arpl
popa
pop
push
in
sahf
jmp
fs
inc
push
enter
mov
sbb
int
out
inc
jge
cmp
out
mov
out
push
outsl
mov
xchg
jns
call
inc
fsubp
mov
fsub
cli
movsb
pop
xor
pop
in
daa
cmp
sbbb
mov
dec
scas
inc
push
test
loope
sbb
xor
scas
or
push
test
fisubl
sbb
dec
aam
pushf
fildl
mov
or
sub
ror
lea
addr16
push
enter
cmp
and
lea
jl
cli
add
dec
pusha
sbb
cltd
jmp
adc
cmp
adc
adc
into
aaa
out
jo
std
fdivrl
xchg
idivl
sbb
pop
pop
jno
rorl
sub
aas
inc
xchg
aaa
xchg
jae
push
nop
icebp
leave
jg
ficompl
scas
stos
flds
scas
call
inc
xchg
push
jg
lret
sub
pop
imul
enter
test
cmp
fidivrl
add
movsb
jo
outsl
push
repz
jns
test
and
icebp
cmp
pushl
inc
insb
faddl
fdivs
cmp
std
into
and
inc
leave
cltd
ljmp
mov
sbb
jnp
incl
decb
or
xor
mov
adc
enter
or
scas
lods
mov
sub
cmpsl
push
mov
sub
pop
push
leave
loope
cs
jge
push
int3
stc
and
xlat
daa
adc
hlt
mov
push
mov
stc
dec
sbb
pusha
test
sahf
cmpl
dec
inc
movsb
movsb
inc
bound
mov
push
jne
xchg
loopne
fs
pop
mov
insb
mov
xor
in
mov
xor
lret
ds
push
push
add
mov
movsb
push
in
adc
icebp
pop
rclb
aas
cli
and
loopne
std
sub
pushf
ret
nop
cltd
out
adc
push
out
out
push
and
loope
xchg
cmpsb
popa
into
test
in
lret
arpl
bndldx
iret
test
es
js
mov
fwait
repnz
mov
xchg
orb
subb
fcomps
test
dec
xchg
and
out
in
iret
add
sbb
mov
ja
sar
les
aam
inc
or
push
xchg
sarl
mov
pop
xchg
cmpsb
jns
lahf
fidivl
enter
mov
inc
aas
shlb
and
shl
ret
orb
pop
aam
iret
push
push
out
ficoms
int
sbb
sbb
icebp
xor
push
lret
jbe
stos
mov
inc
cmp
mov
test
jb
mov
sbb
shrl
mov
vmovddup
jmp
repz
mov
dec
pushf
xor
das
shl
cmp
imul
inc
sub
fcmovne
imul
pop
data16
or
jle
fiadds
sbb
xor
das
sbb
sub
xchg
mov
repz
add
push
add
ja
ss
mov
xchg
es
lock
xchg
es
nop
sti
dec
movsb
pop
jnp
orb
lcall
push
push
icebp
xchg
jp
shrl
cs
pop
stos
jmp
mov
mov
loopne
add
xchg
cmpsl
and
in
adc
jmp
xlat
roll
les
xor
sub
or
and
sbb
inc
lods
jg
andb
xchg
ficompl
data16
frstor
ret
adc
pop
ljmp
cmp
mov
mov
dec
xor
mov
inc
and
sub
arpl
vcmpsd
faddl
fsubl
dec
int3
push
mov
lea
xchg
sbb
out
scas
loopne
add
jo
jbe
add
fwait
test
add
aaa
lds
rcl
sub
repnz
add
jmp
daa
outsl
and
mov
cmp
xor
xchg
mov
sbb
sub
pop
fldenv
mov
int3
iret
jno,pn
stos
orl
xor
pop
pop
pop
jge
xchg
cmp
and
imulb
sbb
sub
pusha
cmpsb
fcomps
ss
pusha
jne
sbb
dec
into
jmp
cltd
shrl
mov
adc
out
pop
jp
aas
push
and
test
ret
add
mov
mov
xchg
arpl
and
std
stos
pop
mov
adcb
pop
or
sbb
mov
xor
rorb
pop
ss
test
adc
inc
pusha
sbb
pop
sti
ds
jbe
cmp
stos
xor
ret
daa
add
aas
mov
adc
jnp
sbb
imul
adc
push
push
movsl
pusha
jb
dec
cld
sub
mov
popa
shr
inc
les
push
je
sbb
pop
jne
mov
adc
push
push
xchg
ss
push
jnp
pusha
nop
cs
xor
and
sti
cmpsb
ljmp
std
sbb
sub
dec
aad
test
popf
insb
pushf
lahf
call
out
sub
dec
scas
cmp
cmp
fstl
mov
addb
adc
inc
jge
xchg
pop
inc
repnz
or
or
ds
push
push
sbb
lret
popf
mov
cmpl
adc
mov
pop
std
pop
pop
negb
fsubs
jo
int3
mov
dec
pop
lds
sub
jmp
movsl
out
shll
mov
lret
decl
scas
sub
push
lahf
adc
sti
jb
cmp
jecxz
xchg
out
dec
jns
sbb
arpl
dec
jmp
pop
push
dec
push
into
pop
mov
push
shrb
aas
and
addr16
scas
push
pop
rolb
stos
sbb
lds
mov
xchg
inc
ffree
pusha
dec
mov
and
push
inc
andl
mov
mov
cmpsb
jecxz
push
js
mov
int
cmc
xchg
dec
enter
std
pop
cmpsb
pop
jg
mov
fsubrl
jg
push
pushf
std
sti
lcall
or
mov
xor
xor
mov
push
aaa
out
shll
pushf
out
pop
repnz
mov
mov
loope
pop
cmp
mov
mov
and
sbb
aam
sbb
mov
addb
ret
mov
mov
decb
inc
xchg
outsb
test
xchg
cmp
pop
andl
cmpxchg
lret
dec
mov
iret
or
mul
xor
add
mov
pop
or
out
sbb
out
xchg
jnp
inc
inc
adc
into
cwtl
dec
scas
adc
sub
xchg
fsubl
lret
test
mov
pop
add
insb
lods
pop
pop
mov
call
pop
cmp
dec
push
xchg
loopne
daa
dec
outsb
aaa
mov
inc
int3
sbb
sbb
in
cmp
hlt
mov
loop
ja
inc
sbb
push
dec
lods
push
popaw
mov
inc
lret
push
adc
fnstcw
test
jnp
jecxz
out
fmul
aad
cmp
mov
adc
xor
outsl
and
in
jp
mov
xor
and
lahf
in
fiadds
cli
cmp
xchg
mov
lds
or
movsl
outsl
inc
sbb
push
jecxz
dec
mov
pop
jbe
out
mov
addr16
daa
xor
fisttps
insb
sub
mov
imul
outsl
mov
add
dec
mov
inc
fnclex
int3
sbb
pop
repnz
das
inc
mov
mov
lock
mov
jecxz
sbb
mov
ja
loopne
mov
insb
jbe
xor
dec
mov
cmp
dec
xchg
in
jle
scas
insb
in
lods
xchg
xchg
inc
cmp
in
inc
clc
mov
xchg
mov
and
jle
mov
and
flds
and
pushf
scas
lods
insb
inc
mov
insl
add
mov
sub
testl
lods
push
or
sbb
sbb
int3
out
sbb
iret
cli
pop
push
add
add
add
add
jno
jecxz
stc
push
push
xorb
mov
insl
add
js
sti
inc
cmp
addl
adc
sbb
clc
adc
push
in
test
dec
dec
adc
or
sbb
pop
xor
insl
adc
aam
cld
testb
xor
xlat
dec
fidivrs
jp
call
mov
cwtl
mul
jb
mov
cmp
mov
adcl
fprem1
pop
daa
outsb
sbb
mov
pop
mov
cmp
xor
lea
or
imul
adc
es
sbb
rcll
pushf
insl
xor
cltd
and
sbb
cmp
add
xchg
cmp
mov
mov
inc
aas
xchg
mov
dec
or
adc
out
dec
mov
fdivp
jo
mov
jns
das
ror
in
jb
clc
das
lcall
fs
jecxz
mov
out
lds
push
idiv
xchg
pop
mov
test
cmp
jo
or
cs
xchg
ja
lahf
pop
sub
movsb
mov
shll
mov
and
xor
int3
in
push
hlt
movsl
insb
lret
test
push
xchg
dec
and
ficoml
mov
lahf
push
xor
pop
fisttpl
jecxz
jns
mov
lock
and
jno
mov
clc
sub
and
ja
mov
add
out
lahf
mov
mov
mov
inc
fdivrl
jmp
push
lret
xchg
test
in
adc
sbb
pop
push
or
lods
ret
jle
lods
data16
ds
pop
mov
sub
mov
add
sbb
mov
ret
cmp
xchg
mov
idivb
popa
lret
fisubrl
add
enter
sbb
addr16
inc
fisttps
imul
sbb
in
pushf
lret
je
inc
cwtl
out
cmp
aam
dec
imul
mov
mov
adc
lods
mov
dec
mov
adc
mov
push
pop
adc
xchg
pushf
loope
outsb
cld
arpl
bound
mov
insl
movsb
add
mov
push
push
dec
sub
stc
xchg
sbb
stos
xor
adc
sbb
lret
aam
out
cwtl
aaa
adc
add
pushf
shrl
ret
cltd
movb
adc
and
pop
inc
and
in
cld
add
cmp
jle
bound
insl
jns
cmpsl
push
das
dec
mov
xchg
and
fdivrp
stos
jecxz,pt
mov
nop
sbb
pop
lret
push
cmpsl
mov
xor
xor
push
pop
ss
subb
fisttps
push
xchg
ret
sbb
and
dec
fs
test
push
push
mov
dec
scas
inc
cmp
movsb
jle
sbb
fwait
icebp
stos
mov
push
cmc
push
aaa
cmc
ljmp
popa
nop
ret
fisubrs
or
loop
sbb
add
test
stos
mov
xor
repz
inc
mov
movsl
cmc
jge
pushf
fadd
lea
mov
in
inc
mov
mov
mov
and
or
shrb
mov
int3
in
push
in
stos
push
addl
repnz
popa
mov
sbb
xchg
cmp
cmp
push
jne
dec
ss
xor
mov
sub
inc
adc
test
lock
pop
adc
sbb
ss
loop
jecxz
add
sbb
fbld
scas
mov
cmc
mov
rcr
orl
pop
js
ret
mov
push
add
push
sarl
arpl
call
mov
cltd
fsubrs
repz
cmpsb
stos
push
adc
push
pop
dec
push
inc
mov
enter
jnp
int3
push
mov
xchg
adc
push
fcomip
inc
cmpl
pop
mov
pop
pop
adc
jp
shlb
jge
push
pop
dec
mov
sti
loop
insb
xchg
int
pop
repz
nop
loop
std
incb
mov
mov
imul
xchg
and
jae,pt
movsl
pop
fdivrs
es
cs
or
repnz
je
inc
stos
sbb
add
add
rcrl
rolb
popa
push
ret
or
sti
jo
addr16
cmpsb
xor
sahf
cmpl
add
out
std
or
inc
lret
out
out
and
or
ret
fcomps
loopne
dec
push
or
push
mov
xor
hlt
xchg
popl
sub
bound
xor
or
cmp
rolb
add
scas
stos
lods
xor
dec
add
push
lods
les
or
pop
shrl
inc
ja
push
dec
out
out
fucomp
shll
jge
add
shl
clc
das
sbb
pop
das
cmp
jle
dec
in
xchg
or
jno
push
jns
xchg
mov
sbb
leave
add
mov
out
xchg
add
push
inc
and
lret
clc
shrl
sbb
call
data16
das
sti
pop
loopne
and
and
dec
pop
mov
jle
mov
jb
xchg
das
hlt
pop
push
addr16
les
pushf
inc
inc
sbb
push
cmp
pop
sbb
sti
mov
and
repz
pop
or
orb
xchg
sbb
aas
add
dec
jmp
mov
fcmovu
mov
xchg
outsl
insb
out
jl
popf
xchg
pop
mov
mov
push
jmp
cmpsl
sub
inc
jb
addr16
mov
lock
mov
cs
push
push
xor
imul
aam
cmpsb
in
enter
andb
outsb
push
and
sbb
rcr
addr16
movsl
add
sbb
idivb
pop
xchg
sahf
mov
inc
push
add
xchg
xor
popa
sbb
mov
xor
lahf
outsl
adc
xor
rclb
outsl
loope
jnp
add
jl
pop
and
cltd
imul
out
push
xchg
jne
movsb
das
enter
add
or
imul
mov
sbb
pop
inc
add
call
movsb
ds
adc
cmp
sbb
les
inc
mov
mov
lret
pop
in
movsl
mov
insb
jo
insb
ret
add
pop
or
leave
lds
push
test
cmp
add
mov
orl
sub
lahf
mov
adcb
imul
in
in
pop
lcall
daa
adc
jb
out
mov
sbb
out
pop
dec
mov
push
arpl
mull
jbe
mov
push
sbb
mov
imul
mov
dec
mov
out
out
ja
add
btr
in
sub
aaa
xor
mov
subl
dec
out
icebp
mov
pusha
movaps
mov
add
inc
sbb
clc
ja
inc
xor
dec
and
int3
lock
int3
mov
jl
jae
das
inc
aam
mov
and
mov
shrl
ljmp
mov
cmp
adc
pop
fidivrl
xchg
add
xlat
aas
jns
xchg
ljmp
lds
scas
inc
add
adc
shrb
inc
xchg
idivl
jge
pop
and
imul
push
ucomiss
in
xlat
jge
hlt
fildll
xchg
xchg
jns
pop
mov
cmc
dec
dec
sarb
leave
jb
ljmp
cmp
xor
les
cmc
in
xor
and
mov
shll
mov
das
push
leave
fstpt
pop
addr16
nop
sbb
outsb
jl
dec
add
pop
out
lea
pop
push
sbb
or
jecxz
movsl
cltd
dec
sbb
lods
fisttps
scas
sub
add
xchg
arpl
repz
mov
push
imul
jmp
dec
inc
test
jecxz
mov
mov
ds
out
repnz
mov
dec
adc
mov
jns
sub
int
imul
std
jno
into
mov
rcll
mov
rep
mov
std
lods
or
or
mov
mov
jo
andb
shr
mov
cmpsl
and
xor
lahf
sbb
imul
imul
js
dec
loop
jle,pn
lea
popa
fs
mov
inc
jge
ror
sbb
and
sub
outsl
shrl
imul
jne
cld
lds
in
xor
mov
lods
lods
fmull
test
fidivrs
push
or
mov
jecxz
sbb
or
mov
sarb
lods
xlat
in
shl
clc
insb
mov
orl
roll
or
lret
icebp
insl
cmp
xchg
outsb
ret
mov
add
and
loop
movsb
push
pop
sahf
jmp
sub
inc
push
mov
cmp
add
mov
mov
ljmp
jbe
jb
cmp
insl
test
xor
cmp
push
or
cmp
xchg
leave
or
sub
adc
arpl
jle
pop
or
inc
lods
addr16
xor
xchg
inc
xorl
add
or
mov
pop
push
xlat
mov
and
adc
pop
mov
dec
mov
rclb
adc
push
popa
mov
in
pusha
mov
bound
mov
js
pop
jp
idiv
sub
les
lods
dec
fadd
lods
xor
out
push
scas
pop
pop
out
sub
mov
ljmp
out
push
xor
ljmp
add
or
lahf
hlt
hlt
pop
test
inc
int3
xor
cmp
pop
xchg
lahf
lcall
xchg
jnp
adc
ret
push
rorb
xchg
js
leave
xchg
cli
ljmp
leave
cmp
and
xchg
xchg
wbinvd
not
jo
push
inc
and
push
fstpt
outsl
and
sub
stc
enter
enter
add
je
inc
insl
cltd
lret
mov
emms
stc
inc
fidivl
aaa
bound
xor
mov
test
push
stos
mov
mov
stc
push
insb
sub
scas
jns
jne
mov
lcall
lods
adc
shr
int3
popf
push
xor
rorl
pusha
or
inc
cmp
dec
add
mov
insl
cmpsb
pop
mov
pop
dec
cmpsb
mov
out
inc
clc
jl
fsubrs
mov
jmp
fwait
xor
das
dec
mov
mov
movb
jo
dec
movsl
xlat
clc
sti
stos
enter
and
jno
stos
sbb
cs
mov
fwait
jne
mov
hlt
sub
and
sbb
inc
inc
push
cmpb
adc
push
add
lea
pop
divb
fsubs
test
mov
or
lods
and
pop
and
shl
lea
repz
flds
ret
mov
fisubrs
jge
pop
push
int3
xor
sbb
xlat
mov
rep
sarl
in
hlt
mov
mov
aam
pop
and
mov
leave
add
sbb
mov
dec
addr16
into
mov
arpl
push
and
lods
sbb
mov
jb
sub
cld
frstor
pop
mov
gs
adc
dec
sbb
ret
adc
jmp
outsb
decb
stos
cli
mov
test
lret
psubusw
fsts
push
addr16
push
jae
mov
rol
ds
stos
aad
jae
cld
lock
push
ljmp
jle
cmp
or
push
pusha
out
lds
cld
xor
inc
fs
mov
inc
adc
pop
mov
pop
insb
js
sub
add
stc
test
movsb
mov
xor
jbe
hlt
cmp
inc
icebp
inc
enter
fsts
iret
out
adc
outsl
int3
xchg
lret
sub
out
push
dec
add
scas
call
mov
cs
mov
xor
xchg
in
xchg
into
jl
mov
sahf
and
out
repnz
xchg
sahf
sbb
lret
outsb
es
cmc
outsl
jl
loopne
divl
jnp
sbb
sbb
xchg
dec
mov
dec
adcb
mov
sti
icebp
xor
add
mov
nop
ret
and
fbld
push
icebp
mov
jmp
cltd
mov
aaa
cmp
and
test
aad
adc
and
xor
lcall
xchg
movsb
idiv
in
aas
sub
lcall
pusha
out
mov
sbb
xchg
push
les
adc
test
add
mov
add
rcll
sbb
inc
lods
es
mov
insb
js
inc
sbb
xor
and
add
xchg
mov
lods
push
and
fs
mov
push
xor
jle
mov
or
sub
int3
movsb
jmp
or
repnz
enter
icebp
js
push
xor
sub
inc
and
mov
jnp
inc
aad
fdivs
dec
out
loopne
out
xchg
jb
fninit
mov
mov
es
stos
sahf
ds
or
rolb
xchg
lods
or
cmp
adc
add
in
adc
mov
inc
or
cmc
mov
fistps
adc
rclb
add
mov
test
pop
data16
in
test
arpl
xor
fcomi
cmpsl
insb
dec
popa
push
pop
lret
xlat
pop
mov
xchg
fsts
lret
rorb
ljmp
xor
xchg
cmpl
lgs
sbb
mov
insb
dec
mov
popf
and
jbe
andb
aas
cmpsb
dec
jmp
fidivl
inc
or
and
ret
mov
cmpsb
mov
pop
push
faddl
or
and
inc
cmpsl
in
dec
mov
int
faddp
testl
test
stos
je
js
jne
inc
mov
xor
mov
push
mov
icebp
adc
xchg
addr16
addr16
adc
ret
add
lock
jp
and
xor
adc
push
out
cltd
ds
push
xor
sbb
mov
sub
jnp
insb
outsl
enter
pop
jmp
negb
adc
nop
roll
out
jae
jge
mov
iret
int3
outsl
pusha
cmc
inc
int
cwtl
test
add
xchg
sub
out
ljmp
les
adc
inc
int
orb
adc
cwtl
push
aaa
pop
out
pushf
repnz
das
mov
sbb
dec
popa
insl
jecxz
nop
adc
insb
jmp
scas
or
cmp
ja
push
or
leave
dec
fs
insb
lock
mov
cmpsl
pop
ljmp
xchg
mov
mov
cmpsl
and
rcrl
ret
outsb
aaa
xor
and
mov
outsb
sub
sbb
cmp
out
inc
add
mov
loopne
add
add
push
iret
fs
cmp
negl
daa
out
ss
sbb
movsl
lret
sbb
adc
popf
or
mov
dec
xchg
xchg
in
xchg
and
pop
cmp
sarb
clc
adc
mov
xchg
jbe
subl
outsl
out
aad
and
jle
mov
ret
jle
push
jp
sbb
adc
repz
bound
insb
cmp
in
dec
popf
pop
inc
stos
sbb
and
mov
adc
sbb
lds
sub
mov
pop
fimull
jns
jp
imul
push
xor
and
sub
sub
test
mov
dec
lcall
xchg
push
push
pop
push
push
mov
mov
dec
sub
xchg
shrd
mov
popf
push
test
aaa
ljmp
xlat
mov
sbb
movb
inc
pop
sahf
gs
ss
pop
imul
sarb
add
mov
jbe
int
and
popf
into
pop
xchg
xchg
cltd
fsubr
and
out
push
jmp
jmp
jmp
pop
fldl
adc
cld
dec
inc
cmp
mov
xor
test
scas
stos
xchg
mov
jbe
imulb
jb
orb
pop
sbb
aad
sahf
fsubs
jl
pop
jmp
sbb
test
pop
dec
sbb
add
push
sbb
push
rcrb
cmpsb
xchg
int3
mov
mov
ret
sub
in
or
mov
lods
dec
jno
sbb
inc
outsb
xor
pushf
push
push
sbb
jnp
data16
mov
es
fcompl
addr16
scas
or
je
dec
add
xchg
lea
aam
ret
push
outsb
pushf
imul
pop
dec
mov
jl
push
xor
in
jp
and
out
ja
hlt
out
outsb
repz
add
xor
cmp
inc
loope
clc
es
out
gs
out
clc
and
fldl
jo
and
gs
inc
fstl
rorl
xor
fwait
jns
fildll
cmpsb
outsb
push
mov
dec
fs
xorb
push
adc
push
or
or
bound
out
stos
sub
mov
dec
ret
fidivl
and
mov
jne
and
ret
loope
sub
push
push
adc
jns
pop
jb
clc
add
xchg
xchg
xor
mov
adc
testl
sahf
push
shll
hlt
xor
mov
fmulp
ss
pop
xor
adc
sbb
cltd
shr
mov
cltd
mov
in
adc
or
dec
push
or
aas
jmp
ret
pop
sbbl
rcrl
xor
adc
sti
in
loopne
xor
cmp
pop
into
dec
xor
dec
ret
cmp
adc
jp
lret
mov
push
mov
outsb
or
jbe
or
addr16
cmp
insl
pop
inc
fsubrp
aam
repz
inc
mov
mov
cltd
cmp
jl
cmpsl
imul
add
push
rorb
and
enter
dec
dec
or
clc
jne
or
mov
pop
xor
movsl
cmp
out
imul
movsl
test
out
xchg
push
scas
fiaddl
testl
or
push
sarb
int3
aas
xor
push
and
xchg
xor
or
jbe
sub
daa
popa
xor
adc
mov
insl
push
sbb
push
pop
std
xchg
cmc
add
jl
aaa
adc
adc
call
cmp
lret
into
mov
cmpsb
jne
loope
daa
and
test
mov
cmp
cmp
enter
pop
xchg
cmp
pop
inc
sub
cmp
xchg
outsb
push
fisubrl
mov
in
mov
mov
test
call
and
lods
repz
jmp
icebp
xorb
xchg
or
add
sti
sarb
dec
int
ret
inc
test
xchg
scas
sti
mov
testl
or
ljmp
mov
mov
pop
fisttps
ljmp
loope
pop
xchg
dec
mov
and
stos
aaa
fidivl
outsl
stos
cwtl
outsl
mov
inc
dec
cmp
or
fs
les
add
inc
mov
aaa
je
loop
aaa
call
mov
in
jecxz
bound
add
xchg
cltd
das
into
lods
cmp
or
iret
cs
cmp
repnz
mov
jmp
movsl
ss
lea
cmp
sarb
mov
add
add
jl
test
mov
shrb
dec
jne
mov
xchg
lods
enter
xchg
cs
fs
insb
aad
mov
gs
fsubrl
arpl
adc
imul
std
fists
xchg
adcb
inc
inc
fcoms
repz
cld
mov
push
push
pop
pop
lods
cwtl
adc
push
fstpl
sahf
push
add
pop
sar
out
jbe
or
push
sub
mov
pusha
push
and
mov
xchg
mov
daa
mov
jl
out
inc
add
sbb
push
sub
sti
add
ss
mov
rcrb
push
mov
inc
cmc
fistl
cld
push
int
push
mov
xor
xchg
jo
sub
and
add
mov
clc
shrl
jne
xchg
mov
fs
fnstcw
mov
ret
hlt
arpl
sbb
pusha
and
mov
and
sub
mov
cmc
mov
ja
idiv
aad
add
cmc
popa
jo
cmpsb
enter
divl
push
mov
jb
lods
aas
mov
sbb
mov
pop
ljmp
cld
sub
mov
loope
cmpsb
add
int3
mov
or
mov
sbb
pusha
or
and
aas
in
mov
pop
int3
and
pop
sub
sub
xchg
xchg
lret
push
in
xchg
stos
sub
inc
pop
adc
cmp
mov
and
cmc
mov
xor
dec
call
sbb
ljmp
imul
das
xchg
in
mov
into
int
int3
or
lods
xchg
je
push
pop
popa
fdivs
pop
mov
incl
subl
iret
sets
and
outsl
adc
es
inc
sti
jae
sub
xlat
sbb
aas
mov
fildl
call
sbb
jmp
or
sbb
in
test
mov
pusha
or
outsb
sbb
repnz
mov
nop
inc
lret
pusha
repnz
cmpsb
push
pop
jge
pop
ja
data16
mov
pop
movsb
enter
mov
shll
lret
sarb
and
jbe
outsl
xor
cmpl
xchg
pushf
sbb
cmc
sbbl
adc
mov
cmpb
add
dec
or
sbb
adc
xor
jne
adc
inc
sbb
lds
loopne
or
sarb
movsl
hlt
pop
ror
insb
dec
push
add
cmpsb
push
xor
push
xor
and
outsb
adc
sub
jle
cmp
and
shlb
es
popa
jnp
mov
popa
dec
fmull
jmp
pop
or
gs
pop
jg
das
pushf
mov
and
adc
sarl
mov
mov
and
cmpsb
cmpsl
lahf
loope
and
jb
sbb
inc
out
lods
rorb
adc
ljmp
jo
add
pushf
jno
dec
das
cli
add
dec
xorl
xchg
and
fwait
icebp
sbb
mov
or
stos
or
pop
sbb
addr16
cs
negl
cmpsl
rorb
push
aas
int
dec
rcrb
add
jecxz
push
cmpsl
cmpsb
and
out
shll
or
or
int
int
mov
shrl
xchg
push
jns
loopne
ds
movsb
jo
gs
or
cmp
dec
adc
xchg
cmpsb
stc
aam
sbb
xor
sbb
or
cmp
mov
or
add
daa
test
xor
add
sbb
xor
mov
sub
js
mov
mov
in
stos
xchg
test
mov
push
and
cwtl
stc
mov
es
jle
mov
sbb
jmp
nop
addl
add
pop
jo
adc
cmpsl
dec
pop
fldt
call
mov
test
and
pop
lahf
cld
pop
inc
movsb
adc
addb
in
popa
push
jmp
shrb
mov
cli
lds
daa
push
bound
sub
adc
cmp
test
cli
mov
and
ss
scas
or
jno
testb
add
bound
std
leave
int
add
xor
push
push
xchg
mov
out
push
add
cmp
sbb
xor
sbb
mov
inc
in
fistps
or
cmpsb
sub
int3
xor
mov
inc
dec
addr16
pop
movsl
or
xor
inc
movsb
jnp
inc
add
bound
pop
fimull
iret
sbb
jge
sbb
test
test
inc
insl
daa
insl
mov
dec
inc
cmp
imul
dec
outsl
movsl
xlat
enter
sbb
mov
fstpl
push
sub
lahf
pop
and
xor
push
mov
push
fs
repz
popa
pop
mov
out
ficoms
sbb
mov
or
aad
jns
pop
mov
cmc
xor
pop
mov
mov
or
mov
add
and
xor
fistpl
lock
fnstenv
adc
sbb
push
psrld
test
mov
out
cmc
cwtl
fdivl
out
je
fdivl
iret
aam
lret
aam
jns
out
xchg
or
fimull
push
sub
lret
sub
jnp
mov
jmp
fstps
fsubrs
out
inc
iret
or
mov
cmpb
movaps
jo
cmp
adc
xchg
mov
leave
and
sub
sbb
or
add
push
imul
mov
insl
repz
insl
cwtl
xor
sbb
faddl
outsl
div
hlt
aaa
clc
lret
ret
lahf
add
push
xchg
dec
jp
and
mov
adc
daa
dec
test
gs
fldl
cltd
push
mov
cs
insb
nop
daa
sarb
stos
idivl
cmp
shlb
push
push
lods
insl
sbb
lds
inc
jbe
add
sub
xchg
sbb
subb
sub
fdiv
and
in
lret
aam
les
hlt
lcall
cmpsl
add
xor
je
xor
or
adc
ds
dec
nopl
test
aas
repnz
enter
stos
orl
test
inc
mov
dec
call
cmpsl
loop
repz
sub
sub
mov
sahf
mov
mov
dec
ds
lock
add
cmp
rolb
outsl
arpl
dec
repz
push
scas
mov
in
inc
cmpsb
lock
or
inc
lock
xor
mov
fimuls
lcall
push
push
decb
add
mov
add
push
fildll
dec
push
push
sub
shlb
icebp
mov
pop
fstpt
mov
jl
rol
xchg
jnp
xlat
or
mov
fwait
shrl
or
mov
hlt
dec
dec
nop
pop
arpl
push
jne
test
jg
mov
cld
jnp
bound
cltd
xor
xor
fidivl
mov
es
addr16
in
inc
pop
push
or
jne
cwtl
jp
frstor
mov
scas
jae
daa
mov
adc
push
lds
enter
sub
shl
lret
add
int
sub
push
jl
hlt
div
lods
popa
fwait
icebp
inc
sahf
filds
sbb
mov
jns
mov
jp
fcoms
push
ja
addb
loop
jmp
loop
push
adc
hlt
fdivrl
add
jle
pushw
jle
outsb
sti
pushf
inc
fdivl
pop
add
cltd
cmp
outsl
pusha
mov
cmp
popa
aas
add
inc
xchg
in
outsl
lods
xchg
stos
xlat
fisubrs
je
jbe
scas
inc
xor
insl
xor
mov
pop
sbb
push
int3
sbb
arpl
xchg
dec
push
out
adc
dec
lds
add
or
jle
inc
sar
jae
imull
les
xchg
inc
testb
jb
lea
fisttps
mov
adc
ds
push
jns
notl
les
pop
rorl
cmp
jle
lahf
xchg
out
das
push
in
dec
push
lea
int
jg
inc
mov
xchg
std
stc
enter
lea
lea
and
cli
jmp
mov
jb
cld
cld
adcb
es
out
pushf
dec
pop
sahf
pop
mov
movsl
or
adc
xor
movsb
adc
out
subl
in
iret
adc
sbb
jmp
xor
shlb
aam
adc
adc
rorl
push
divl
int
sarb
and
addr16
push
push
fdivp
inc
std
pop
add
bound
jp
roll
mov
inc
ret
mov
repz
loop
jnp
jge
pusha
repz
test
push
add
mov
scas
cmp
sbb
mov
sub
inc
jb
imul
hlt
dec
or
imul
cmp
out
outsl
gs
xor
repz
int
stc
xor
pop
adc
dec
add
jl
cmp
jnp
push
insl
mov
add
cmpsb
xchg
nop
sub
jle
sahf
aad
mov
lahf
std
movsl
jb
mov
mov
and
ljmp
jp
imul
add
mov
aas
lahf
scas
xchg
imul
shlb
xchg
rclb
xchg
sbbl
jbe
inc
addl
lahf
pop
notl
adc
adc
jnp
pop
jg
push
cmp
mov
cmc
jle
imul
sahf
div
cmp
movsl
pusha
popf
mov
xchg
pop
fisubl
imul
add
pop
inc
sahf
in
int
lcall
pop
inc
out
add
xlat
adc
mov
rcrl
add
scas
sbb
adc
sub
sbb
sbbl
cmp
sbb
push
repz
xchg
pop
arpl
leave
jecxz
pop
xlat
mov
pop
cltd
mov
push
sbb
cmp
fimuls
test
mov
sbb
push
je
adc
das
imul
mov
std
push
shrb
ficoml
arpl
test
movl
outsl
je
inc
xchg
in
inc
push
dec
fbstp
jb
gs
inc
lcall
mov
lahf
mov
in
push
mov
dec
rol
stos
clc
pushf
and
in
jb
xchg
insb
xor
cmp
cmc
rorb
jbe
popf
test
stc
ja
cld
stos
ret
repnz
mov
addr16
sti
push
xor
pop
xchg
and
push
jp
inc
imul
and
mov
scas
push
lcall
dec
push
icebp
addr16
add
lods
sar
or
jbe
outsb
scas
xor
int
stos
adc
push
mov
hlt
cmp
sbb
pop
jnp
dec
xor
popl
xlat
aaa
std
insl
aaa
mov
test
xor
je
push
add
imul
sbb
clc
xchg
xchg
repz
cmp
cmp
xor
out
and
repz
pop
inc
sbb
xchg
loope
pop
divb
lods
mov
add
mov
cltd
mov
cmc
add
loop
adc
xchg
sbb
push
mov
xor
sbb
sub
test
jp
shrb
in
push
xchg
shlb
call
or
test
or
cmp
mov
adc
inc
or
adc
xchg
in
mov
push
lret
xor
pop
into
inc
push
or
add
cmp
dec
shll
rcrb
cmp
or
inc
jno
xchg
pop
xchg
jae
insb
cmp
jb
hlt
add
repz
mov
cmpsb
cmpsb
icebp
push
cmp
mov
aaa
adc
adc
fdivl
das
test
inc
lods
dec
add
dec
mov
adc
js
add
fdivrl
adc
cvtpi2ps
bound
jb
cli
inc
xchg
shll
test
push
push
sbb
out
xor
inc
jecxz
xchg
xor
jle
hlt
jmp
movsb
inc
xor
decl
sahf
sbb
in
pop
cmpsb
jns
adc
mov
fwait
inc
sub
push
dec
pushl
loopne
in
push
ret
fwait
mov
sti
fstpl
lahf
movsl
pop
popa
fsts
pop
nop
ret
pop
inc
movsb
outsl
into
add
add
add
nop
ja
sbb
test
fstpt
mov
aas
cmp
adc
data16
dec
xlat
scas
mov
push
out
dec
sbb
xchg
cmp
xor
or
scas
out
pop
into
test
ret
lods
inc
inc
mov
mull
pop
loopne
pop
push
mov
jp
or
inc
lea
popa
cltd
mov
adc
dec
das
fidivrl
adc
mov
mov
xchg
dec
add
loop
mov
jle
pop
fisttps
cmpsl
test
fs
stos
xor
shll
jecxz
xchg
pop
bound
das
in
dec
or
push
lcall
lods
pop
cmp
lcall
rcl
ds
rcll
ss
add
push
cwtl
ljmp
pop
sub
stos
xor
int
outsb
jecxz
pop
xchg
jp
shrb
xchg
xchg
in
rcr
add
imul
iret
jne
inc
in
aad
mov
outsb
in
andl
fstpt
sub
pop
push
lea
imul
inc
lret
iret
movsl
popf
jb
dec
fildll
sbb
testl
decb
stos
outsb
lretw
cmp
in
dec
mov
dec
scas
lods
ds
aad
mov
dec
mov
fwait
push
loope
xorb
lea
sub
jns
sub
std
cld
ds
mov
aad
nop
mov
mov
xchg
push
xchg
pop
addr16
lahf
mov
jb
sub
mov
jno
jb
and
jbe
popf
pop
mov
out
imul
xchg
inc
in
clc
pop
call
dec
jo
test
leave
lds
xlat
dec
mov
xor
fsubs
dec
cmc
cmp
arpl
cmp
xchg
ds
sub
out
js
fists
dec
jno
int
out
test
xchg
and
add
int
dec
jne
aam
mov
arpl
pop
and
inc
jno
xchg
mov
in
repz
aas
in
sti
rcrb
mov
pop
dec
idiv
pop
out
jae
fnsave
xchg
leave
fildll
mov
mov
pop
push
es
cs
daa
adc
push
adc
lea
sub
test
ret
push
test
or
nop
mov
addl
sti
jno
xchg
or
shlb
add
lahf
shrl
roll
out
mov
rcrb
paddsw
mov
icebp
ds
jae
jb
popa
aad
movsb
leave
mov
cmpsl
cld
sbb
sarb
fildl
aaa
push
mov
mov
push
outsb
fistpll
xor
jne
lahf
xor
adcl
std
cmp
dec
repz
xchg
jo
xchg
xor
mov
push
cs
pop
in
push
fcomps
cmpsb
lock
inc
pop
sti
fs
sbb
pop
arpl
inc
ret
jecxz
jmp
push
ja
xor
jns
shlb
jo
cmp
call
cmp
movsb
and
mov
inc
jg
lret
bound
cltd
es
fisttps
mov
cmc
loop
dec
js
mov
sub
sahf
in
push
mov
lods
cli
xor
sub
cmp
insb
pop
add
sahf
jno
imull
je
inc
sub
add
lock
sbb
in
adc
mov
xor
inc
movsl
xchg
out
ss
adc
lcall
and
xor
jge
shrl
fsubrl
mov
sub
inc
xchg
pop
jbe
add
jl
ss
out
lock
sahf
in
inc
loopne
cmp
sbb
inc
push
popl
inc
pusha
in
insb
or
cmp
es
in
std
jl
jl
jle
mov
ds
stos
hlt
and
lret
pushf
fbld
subb
out
mov
sub
leave
in
xchg
push
pop
sbb
xchg
pop
das
jno
insl
sti
cld
mov
dec
test
cmp
dec
in
mov
and
push
repnz
scas
scas
ljmp
jge
mov
pop
mov
jl
pop
and
cmpsb
nopl
sbb
mov
je
xchg
mov
scas
lea
lods
js
bound
pop
adc
mov
mov
cmp
popa
iret
mov
sub
sub
mov
pop
sti
sahf
fistl
leave
decl
lods
cmp
xor
mov
outsb
sub
iret
push
fiaddl
dec
rol
xchg
sahf
outsb
add
hlt
push
push
outsl
aad
dec
mov
xorl
mov
xlat
insb
adc
mov
fldenv
das
jp
adc
jnp
pop
rcll
mov
xbegin
cmpsb
clc
daa
and
mov
mov
mov
dec
push
or
cmp
sti
test
insb
data16
adc
sbb
push
fwait
mov
fsubrp
jne
andl
or
jecxz
inc
lahf
cmp
or
loopne
outsb
imul
cld
ljmp
loop
scas
popa
dec
xchg
arpl
mov
incb
push
sub
cld
rcrl
aad
inc
pop
jg
lods
loope
jns
cmp
mov
mov
push
bound
cmpsb
sub
aas
ret
sbb
xchg
sub
dec
pop
ljmp
test
pop
cmpsb
cmp
lahf
pusha
and
in
add
jg
std
in
push
cwtl
xor
dec
clc
decb
push
and
add
xchg
fsubp
popf
rcll
or
adc
sbb
rolb
popa
lcall
mov
mov
fidivs
xor
mov
out
mov
aas
xchg
call
mov
scas
inc
repz
mov
jae
aas
xchg
mov
scas
ljmp
loope
pop
aaa
push
clc
mov
or
std
loopne
dec
mov
inc
xor
cmc
pusha
pop
lcall
adc
mov
xor
lret
jl
xor
push
adc
xchg
xchg
or
push
xchg
iret
ret
xor
sti
js
pop
cmp
shl
std
sub
inc
lods
and
fsubs
dec
push
dec
popa
pop
es
xchg
shrb
movsl
push
pushf
pop
imul
lods
sub
stos
mov
mov
insl
pop
adcb
cld
pop
push
lret
sbb
mov
sahf
push
nop
pop
aam
aad
negl
inc
dec
int3
cmp
cld
add
mov
mov
imul
cmc
adc
test
cmpsb
aam
xchg
fwait
cmp
cmp
cmp
jnp
push
add
sahf
mov
lret
popf
cmp
movsb
lcall
test
xchg
cmpsl
enter
je
jno
xchg
push
in
std
inc
cmp
push
push
cmp
test
arpl
dec
das
sub
test
cltd
xchg
mov
icebp
mulb
jb
orb
push
data16
xor
sub
js
add
xchg
and
jns
lcall
fsts
add
mov
and
dec
js
hlt
cmp
dec
outsl
movsb
mov
icebp
hlt
push
cli
pop
and
shrl
fisttpl
hlt
ja
popf
ljmp
rcrl
out
jbe
outsb
xor
jns
and
mov
sbb
pop
adc
clc
pop
jo
hlt
or
decb
je
jecxz
inc
mov
push
arpl
xchg
or
mulb
and
mov
sti
sbb
mov
add
mov
in
lds
ficompl
dec
adc
and
int
loope
xchg
ss
fimull
mov
ret
fisubrs
xchg
lret
insl
sbbb
dec
dec
je
arpl
push
std
sub
shlb
and
xor
xchg
loope,pt
fs
xor
sbb
dec
test
jmp
cmp
js
dec
mov
inc
test
cli
cmp
out
pusha
xor
insb
insb
adc
and
or
xor
or
mov
in
lret
in
lahf
call
aaa
pusha
loopw
scas
dec
not
push
outsb
jns
psrlq
push
int
mov
fists
lret
pusha
sarb
lds
cli
roll
jno
cld
xchg
les
hlt
pop
fiaddl
cli
inc
inc
sub
dec
inc
mov
in
fistpl
sub
lret
jne
not
cmp
xchg
push
in
push
sbb
mov
mov
push
sub
and
stos
shlb
mov
and
push
mov
push
rcr
daa
xor
sub
jecxz
inc
lock
jae
lods
xor
add
inc
xchg
mov
push
mov
loope
cltd
jae
add
mov
test
mov
mov
inc
cmp
mov
pop
and
inc
imul
in
add
js
mov
cld
int
ljmp
push
mov
fisubrs
mov
cli
insl
mov
lock
xlat
int
inc
lea
movb
inc
js
loope
jl
sub
daa
cld
cmp
inc
data16
icebp
jp
movsl
mov
mov
jne
repz
into
sub
cltd
inc
lds
shlb
pop
out
les
loope
nop
out
mov
push
or
sbb
add
add
cltd
or
and
insb
pop
cmp
add
stos
xor
daa
push
pop
mov
fldenv
std
lcall
jo
xchg
cmp
or
inc
lcall
jb
adc
popa
movsl
gs
insl
pop
xchg
repz
xor
mov
sub
jno
add
icebp
adc
inc
add
adc
in
adc
push
push
mov
gs
add
fstps
or
sub
test
mov
dec
pushf
test
and
mov
jecxz
push
popf
mov
mov
adc
pop
sub
sarb
fcoml
or
and
mov
cs
jecxz
mov
rcll
add
or
sub
mov
std
scas
fwait
cmpsl
jmp
inc
add
in
cmp
sub
cmp
sbb
cmp
and
cmp
xor
and
jns
aad
inc
push
pusha
movsl
xor
jmp
add
xor
ljmp
mov
mov
dec
pop
xchg
cmp
mov
add
jae
sub
mov
fimuls
out
push
dec
call
mov
mov
adc
add
insb
shrl
add
iret
or
pop
mov
xlat
jae
cmp
inc
lret
cmp
mov
mov
in
call
into
and
inc
pop
test
inc
jb
fsubs
cwtl
mov
fldenv
fxch
aas
push
dec
xchg
mov
adc
int
cmp
ljmp
or
push
jle
out
sub
cld
add
loopne
inc
repnz
or
subl
enter
mov
int3
ret
xchg
es
sub
xlat
inc
fs
out
inc
neg
jmp
push
dec
int
sub
data16
jae
inc
cli
or
jmp
fistpl
pop
shll
mov
movsl
test
add
cmp
xor
pushf
shll
lea
and
dec
sub
call
bound
adc
jecxz
jnp
daa
add
mov
mov
lds
cmp
mov
call
jbe
es
mov
rclb
test
in
repnz
and
mov
cmp
out
loop
mov
or
xchg
rol
out
fcmovu
jno
repnz
fisttpl
inc
rolb
scas
js
add
lret
mov
dec
clc
push
mov
sbb
and
cmp
frstor
daa
push
adc
cwtl
inc
ret
xor
loope
adc
aaa
sub
mov
fs
or
sti
adc
and
test
lret
rorl
inc
aad
fstl
lea
je
mov
push
jnp
lods
dec
ja
jmp
daa
add
ficompl
pop
dec
push
js
push
loopne
jb
scas
inc
dec
pop
mov
jg
and
jp
push
mov
test
cmp
mov
inc
xchg
or
popf
ljmp
inc
dec
sbbl
xor
std
xlat
xlat
stos
imul
cli
leave
push
es
xlat
fwait
cmp
test
in
and
arpl
sar
push
sub
sbb
inc
xchg
ljmp
stos
ficoml
test
inc
sahf
fidivrs
dec
popa
les
outsl
in
out
fidivs
xchg
push
mov
lods
lahf
insl
and
aas
scas
rol
enter
xlat
sub
and
mov
mov
inc
pop
jmp
adc
ds
pop
repnz
repz
imul
ss
iret
movsb
push
das
jns
cmpsb
or
rcrb
into
adc
int
xchg
stos
push
sbb
sbb
or
adc
cmc
mov
daa
push
jns
xchg
lods
or
pop
mov
lock
and
adc
jnp
loop
sub
xor
movnti
dec
repz
test
pushf
insl
sub
or
ljmp
aad
sub
add
les
xor
shlb
inc
push
sub
test
mov
shrl
test
sub
mov
in
push
add
hlt
dec
push
pop
js
dec
jmp
scas
xor
iret
out
xor
xchg
push
std
imul
shr
xchg
fisttpll
jecxz
lahf
xor
lret
in
movsl
push
mov
cmp
cmovs
pop
and
test
stc
fbld
inc
inc
push
cmpsl
fstpt
inc
roll
sub
mov
jno
cmp
test
rcl
and
mov
rorl
movsb
xor
shll
fsubr
popl
hlt
xchg
dec
mov
cmp
sub
cmp
into
cmpsb
xor
xchg
push
mov
dec
sub
mov
inc
push
jp
adc
je
dec
inc
mov
fisttpl
push
out
mov
xchg
in
sbb
stc
xor
hlt
stos
nop
or
cmp
insb
or
adc
movsb
xor
sbb
vmwrite
movsl
stos
imul
ja
inc
test
pop
pop
push
push
test
jnp
fdivp
lcall
imul
mov
int
mov
clc
adc
mov
add
inc
test
pushf
adc
iret
inc
sub
aas
in
dec
mov
sbb
popf
mov
adc
xor
testl
jmp
sbb
out
addb
sbb
adc
shll
push
xchg
push
aas
dec
in
cmpsl
and
sub
mov
test
loop
pop
dec
xor
pop
xlat
sbb
push
cmpb
inc
das
scas
inc
nop
fiaddl
mov
clc
daa
sub
mov
jg
dec
stos
and
cmp
pop
jae
fsubl
filds
test
fisubrs
aas
lods
inc
inc
or
sbb
imull
rol
les
sub
push
jne
xor
loop
mov
shr
cli
adc
adc
sub
call
and
lds
mov
bswap
outsl
icebp
in
push
out
add
insb
push
add
dec
cwtl
pop
scas
icebp
enter
sub
adc
dec
and
jmp
in
cmp
xchg
mov
lock
mov
fwait
xchg
jl
pusha
inc
mov
pop
pusha
gs
xor
fidivrl
pop
adc
adc
daa
stc
mov
adc
mov
clc
movsl
jnp
inc
pushf
movsl
in
dec
loopne
rclb
xchg
pushf
fldt
je
mov
leave
jb
sahf
js
fidivs
repnz
jno
je
push
fidivl
add
push
out
fwait
popa
pop
shl
hlt
cli
insl
test
pop
out
rorb
mov
cmpsb
lock
sar
stos
negl
pop
scas
data16
mov
imul
jmp
jb
push
mov
lea
stos
cmpsb
hlt
xchg
fcmove
pop
out
dec
popa
fcmovnu
push
das
mov
xchg
mov
sbb
pop
xchg
testb
xchg
add
jns
pushf
popf
rorl
mov
shlb
adc
aam
in
mov
jae
ljmp
dec
add
mov
loopne
sbbb
xor
ja
pop
dec
mov
iret
dec
popf
xor
jno
int
cmp
aaa
xchg
test
in
inc
dec
in
ret
dec
movsl
cmp
mov
rcrl
mov
fidivl
push
loopne
and
fsts
test
pop
mov
add
addr16
push
adc
popa
and
pushf
cwtl
pop
les
lods
xor
adc
mov
ret
jo
adc
int
jo
pop
adc
cmpsb
lock
fistps
sti
and
mov
xchg
adc
lahf
aam
mov
out
shll
push
pop
dec
cld
and
jp
sbb
dec
mov
sahf
cmp
hlt
inc
mov
adc
andb
subb
pusha
lret
dec
out
rcll
add
andb
lar
cmp
aam
cmpsl
jb
mov
je
out
sub
aas
loope
in
imul
leave
add
sbb
lds
mov
in
js
jne
and
insl
mov
out
mov
in
scas
test
jl
sub
mov
test
ret
xchg
cld
ja
lea
pop
hlt
daa
adc
pop
inc
aad
in
popf
shlb
mov
pop
mov
das
add
lods
and
or
leave
lahf
shlb
mov
bound
rolb
sahf
lods
sub
mov
js
xor
or
cli
roll
jo
lcall
add
outsb
fwait
push
insl
scas
xchg
sbb
or
sub
in
repz
mov
test
pop
aam
leave
int3
pop
fwait
aad
or
lea
pop
push
mov
je
adc
and
pushf
fnstenv
into
xor
sub
jg
daa
pushf
xor
test
push
mov
xchg
js
jl
jo
test
jl
mov
loopne
mov
lahf
pop
inc
popf
jbe
bound
push
mov
ret
dec
jl
insb
and
lock
movsb
or
xor
es
inc
frstor
jbe
adc
shrb
arpl
bound
scas
and
outsl
cmp
lcall
push
or
add
and
mov
testb
into
dec
dec
test
mov
fstp
fsts
in
clc
cmpsb
pop
dec
pop
xchg
mov
fisubs
fwait
call
mov
test
ss
sub
mov
je
in
arpl
dec
adc
pushf
orl
cltd
mov
movsl
jl
xchg
lret
iret
mov
repnz
lcall
ds
mov
imul
stos
push
imul
pop
xchg
or
into
mov
and
std
fildll
pusha
mov
jmp
lea
xchg
mov
or
test
mov
adc
mov
sub
mov
xchg
mov
das
mov
sbb
stos
mov
leave
jecxz
lahf
sbb
xor
in
cltd
cmpl
add
sbb
lods
jl
ljmp
xlat
std
adc
sbb
in
fldt
mov
cld
cmp
ss
add
int3
lods
cmpsl
pop
mov
and
hlt
lret
enter
jmp
mov
push
aad
jge
pop
mov
out
test
push
mov
inc
push
out
jnp
mov
popa
into
mov
mov
mov
xor
mov
jae
cs
das
mov
mov
sub
lret
pop
cld
pop
in
push
ret
loopne
outsl
scas
xchg
or
pop
sbb
jns
rol
pop
testb
adc
sbb
jae
adc
xchg
jmp
pop
dec
mov
in
sti
mov
push
push
lcall
adc
dec
pusha
out
mov
addr16
jae
dec
int3
add
push
stos
dec
push
pop
aam
sahf
ret
pop
lahf
out
adc
push
push
fldt
and
clc
xor
push
ret
mov
pusha
jo
in
mov
scas
sub
sti
scas
sub
ja
adc
insl
push
push
push
inc
popa
xchg
in
sub
imul
dec
mov
dec
dec
xchg
into
sarl
push
xorl
fsubrl
xchg
add
shll
fwait
adc
jecxz
testb
nop
fsubrs
scas
xchg
cmp
js
adc
jb
add
outsb
mov
out
dec
in
cmp
lock
mov
and
mov
in
inc
test
jo
jae
je
shlb
and
data16
movsb
mov
enter
mov
sub
or
mov
xchg
jp
push
pop
mov
xchg
dec
stos
pop
dec
mov
rcll
subl
cmc
mov
rorl
mov
in
pop
popa
rol
loopne
in
fnstcw
add
cmpsb
in
andb
ss
xorb
lds
pop
push
dec
das
adc
daa
es
cmc
mov
adc
testb
cli
push
call
xor
push
push
push
pop
bswap
gs
xchg
ja
loop
in
ss
mov
in
jp
xchg
and
mov
fstl
in
movsl
lcall
fistpll
hlt
cmp
mov
aaa
mov
pop
ror
lea
fiadds
pop
or
xor
loopne
push
xor
fs
pop
push
out
daa
mov
cmp
push
or
jnp
popf
mov
xchg
fisttpll
mov
jl
dec
xor
int3
mov
or
jp
decl
push
pushf
stos
or
outsb
mov
push
nop
bound
fldcw
jmp
dec
jmp
imul
jnp
imul
inc
inc
sbb
inc
imul
bound
mov
push
ds
inc
mov
test
or
mov
push
aad
stos
movsb
sbb
jo
repnz
dec
jecxz
push
cld
push
xchg
jge
in
push
jge
add
movsl
in
pop
pop
push
dec
pop
idivl
or
mov
addr16
mov
xchg
sub
xor
jge
or
out
pop
mov
fisttpll
fcomps
mov
cmpsl
mov
ss
sbb
cwtl
jg
adc
mov
jno
sub
insl
pop
push
ljmp
mov
mov
mov
pop
jecxz
xor
aad
sub
mov
int
xchg
divb
fidivl
mov
fidivrs
push
pusha
mov
nop
sbb
lock
fadds
nop
sbb
fsubl
jns
test
dec
adc
in
out
mov
jge
out
inc
iretw
jl
fstp
mov
push
xchg
mov
mov
or
int
das
dec
adcb
movsb
stos
aad
repnz
sbb
filds
pop
push
xor
insb
mov
int3
cmpsb
leave
adc
shll
movsl
inc
inc
dec
inc
in
mov
inc
data16
or
xchg
adc
aam
lock
dec
sub
daa
lods
and
push
jae
push
aam
xor
xchg
popf
inc
pop
mov
cmp
rcr
xchg
decl
popa
dec
jnp
xchg
jle
insb
test
xlat
stos
or
push
clc
lds
scas
fmul
pushw
leave
xchg
add
inc
inc
pop
and
ljmp
mov
out
adc
mov
scas
es
fildl
lahf
and
aam
in
xchg
shlb
and
push
loope
mov
mov
sbb
cltd
cli
outsl
fnsave
dec
ljmp
push
in
clc
sub
pop
fnstcw
sub
mov
mov
xor
adc
call
pop
or
aam
mov
jnp
sub
arpl
cli
int
rorb
cmpsb
mov
cli
xor
push
int3
adc
xor
lret
je
jb
mov
mov
pop
mov
rol
sbb
push
xor
cmp
filds
out
into
cmp
jae
cmp
cmpl
mov
xlat
add
xor
orl
cmp
cmp
adc
shlb
xchg
cli
fs
ds
flds
in
and
fsubs
adc
sub
or
push
mov
cmp
test
or
jl
dec
or
movsl
xor
sbb
movsb
xchg
mov
xor
push
adc
test
cmp
adc
leave
inc
mov
pop
inc
repz
push
mov
push
icebp
fistpl
loop
lcall
jl
int
dec
cmp
add
xchg
pop
iret
ljmp
mov
add
xor
mov
pop
notb
ret
mov
sub
mov
in
dec
lock
jp
test
or
aam
cmp
dec
push
pop
cltd
sahf
or
or
jge
mov
fldcw
imul
xor
dec
mov
cmpb
push
sub
js
int
jae
stc
sub
rdtsc
jp
movb
mov
ds
adc
pop
fsubrl
insl
push
loope
movsb
mov
imul
jle
stos
mov
sub
or
loope
addr16
or
push
jae
gs
xlat
stc
lods
in
mov
out
push
lods
sbb
xlat
sbb
ds
hlt
sbb
notl
xor
lcall
jle
in
xor
mov
jl
mov
test
adc
and
mov
in
call
and
movl
into
inc
jns
xor
cmp
dec
orb
jp
or
popf
xor
inc
fldl
lds
and
rclb
das
cwtl
aaa
lret
mov
in
aam
push
lahf
push
movsb
insb
xor
inc
sbb
and
adc
movsl
sbb
sub
aam
outsb
dec
scas
movsb
mov
pushaw
adc
loopne
mov
aaa
sbb
pop
xor
gs
jl
pop
daa
pop
xor
push
in
lret
in
mov
fstp
and
push
mov
mov
testl
cmpsb
xchg
jle
pop
ja
push
pop
mov
jle
sub
int3
jg
lods
nop
rclb
jb
jbe
sbb
call
stos
test
outsl
jne
gs
loope
out
push
aaa
mov
xlat
adc
mov
dec
ljmp
aas
lock
movsb
or
fistps
dec
enter
pop
enter
popf
inc
push
xor
cmp
jae
fimull
mov
test
inc
or
push
inc
dec
adc
xor
xchg
ficoml
lods
ss
scas
scas
jge
sub
mov
hlt
andb
out
cld
je
out
fisubrl
mov
cltd
lock
das
xchg
call
jle
xchg
dec
out
jno
fisttpl
mov
mov
inc
jno
dec
nop
cli
sub
outsb
cmc
mov
popa
cmp
pop
dec
imul
cmp
mov
inc
loope
inc
cs
lods
cmp
dec
jns
mov
fldt
lea
or
adc
addr16
lds
scas
inc
dec
push
jle
sub
fldenv
ret
xor
push
test
cltd
pop
mov
dec
cld
pop
cmp
movsl
push
push
outsl
push
invd
xor
popf
dec
push
int
outsl
in
mov
lock
sahf
pop
or
leave
or
push
xchg
mov
das
push
or
mov
and
sub
dec
xor
shrl
addr16
ret
fstl
lret
mov
sbb
popf
mov
loop
notl
ret
jmp
adc
push
adc
sahf
filds
nop
add
lret
rorb
fwait
and
pop
nopl
jo
js
mov
push
jmp
sub
or
pop
xchg
or
loop
arpl
cmp
pop
push
cmp
mov
js
ss
hlt
imul
xlat
push
dec
xchg
sub
xor
pop
mov
or
jnp
mov
jns
sub
or
xchg
mov
fdivrs
enter
in
and
mov
sbb
jns
insl
dec
push
addr16
xchg
test
lcall
scas
lods
cmc
push
xchg
inc
cmp
in
sahf
cmp
pushf
addr16
dec
das
mov
ljmp
push
test
pop
sahf
pop
dec
insl
cltd
mov
scas
out
push
in
ja
adc
xor
std
jmp
cmp
lea
mov
into
scas
in
pop
dec
mov
dec
inc
xchg
mov
fwait
cmpsb
mov
push
dec
mov
mov
lods
mov
out
adcl
jmp
sbb
cmp
adc
test
outsl
in
jno
rorl
xchg
xor
in
ret
repnz
aas
mov
xchg
pop
fdivp
push
dec
subb
scas
jmp
pusha
mov
decl
lcall
out
jp
mov
jbe
mov
bound
aaa
stc
lret
or
fxch
mov
mov
or
aam
mov
test
cmc
data16
pop
inc
cmp
mov
jbe
sub
mov
lea
mov
adc
sar
or
adc
inc
jmp
insb
imul
adc
xchg
imul
mov
mov
aas
mov
push
aas
xor
jmp
add
cmp
stos
mov
sbb
jl
push
push
xchg
inc
inc
popf
ret
xor
rorl
ret
in
xor
repnz
pop
jmp
sub
insl
pop
cli
jmp
sub
jno
stos
fidivrs
fst
sub
lcall
mov
sbb
cld
mov
andl
jbe
inc
int
aas
mov
inc
xor
cmp
jg
xlat
arpl
jo
dec
fwait
push
cli
scas
flds
sub
cmp
test
xchg
rorl
sbbl
test
cld
cmp
dec
xchg
in
push
repnz
ficoml
adc
in
lods
mov
xor
adcl
je
add
call
xlat
test
ret
insb
loop
stos
insl
sbb
out
stc
xchg
push
sub
scas
loopne
hlt
jmp
or
mov
ret
mov
mov
pop
lods
sbb
mov
imull
mov
cmc
sarb
adc
xchg
hlt
int3
xor
push
shl
test
jnp
xor
decb
push
mov
inc
into
pop
jmp
and
leave
ds
adc
mov
mov
dec
mov
in
in
addl
push
stc
lea
aad
fnstcw
push
ds
dec
scas
jl
mov
adc
add
lods
sti
mov
push
push
dec
add
sbb
xchg
pushf
lahf
add
fs
dec
call
in
jae
push
mov
jno
cmpsb
shr
sub
jmp
je
dec
xchg
ret
leave
cmp
add
inc
or
imul
push
cmpsl
sbb
mov
test
fdivrl
dec
pop
sub
ret
pop
test
inc
cmpsb
arpl
xchg
stc
repz
popa
test
push
jbe
push
fiaddl
int3
clc
jmp
and
push
sbb
xchg
filds
inc
pop
imul
adc
shll
adc
out
adc
mov
sub
aas
and
push
roll
gs
inc
enter
sub
fnstenv
out
mov
add
xchg
push
sbb
dec
lds
repnz
scas
repz
pop
pop
arpl
fnstenv
mov
add
je
add
cmc
adcb
pop
das
je
mov
and
fsts
mov
fstpl
ret
loop
mov
dec
add
cmp
sub
dec
mov
and
mov
ja
movsb
call
mov
daa
repnz
inc
test
jle
dec
xchg
shll
jl
and
push
jnp
stos
jmp
ljmp
mov
add
mov
push
cmp
sub
push
xchg
dec
iret
xor
xchg
andl
lds
jle
xchg
jbe
lret
mov
ficoml
mov
fwait
dec
jg
pop
fsubl
and
sub
jp
dec
verr
add
cwtl
sub
sbb
ss
ret
pop
cli
mov
dec
mov
push
lods
dec
ds
and
icebp
adc
mov
or
jge
aaa
push
and
mov
dec
xor
push
pusha
lcall
mov
in
lea
cmp
mov
inc
push
cmp
jecxz
adc
ret
shrb
push
loop
js
sbb
cmp
xor
cmc
cmp
movsb
shlb
cmp
enter
pop
jnp
daa
mov
rorl
and
js
pop
leave
loop
cli
test
add
outsl
mov
outsb
and
dec
popf
jg
test
nop
or
mov
insl
movsb
jb
sbb
push
enter
mov
mov
inc
add
int
js
and
pop
pop
in
faddl
jnp
addl
in
inc
stos
aam
test
mov
cmp
jl
ror
std
mov
dec
pop
imul
mov
lret
push
push
sbb
sub
jg
rclb
into
xchg
lods
dec
ss
mov
jl
sbb
int3
mov
mov
lods
mov
adc
mov
jae
jle
fnstenv
les
clc
dec
mov
adc
jl
sahf
aad
mov
or
dec
mov
and
shrb
or
es
int
xchg
pop
push
cmp
daa
jno
jae
clc
push
cli
aaa
bound
jno
mulb
xor
mov
enter
mov
jb
xchg
push
aam
sti
dec
pop
fidivl
fs
imul
iret
cmp
fs
pop
aas
mov
sti
iret
jne
xchg
cwtl
fcoms
addr16
mov
nop
mov
sub
xor
and
scas
cmpsb
imul
js
icebp
jnp
lahf
mov
js
dec
add
or
test
jae
sbb
popf
neg
js
cltd
or
add
jne
out
ret
pop
insl
pushf
cmpsl
jg
or
es
nop
sbb
scas
lods
dec
movsl
and
adc
jecxz
fwait
or
sub
inc
insl
es
fldl
leave
xchg
cld
shrb
xor
xlat
sti
aad
popf
lock
xchg
mov
push
scas
sub
mov
and
icebp
xchg
test
sub
or
or
lods
in
outsb
or
sbb
lods
pop
aas
fwait
add
sahf
dec
rorb
hlt
and
iret
sahf
fadds
ja
ds
ljmp
xchg
xchg
sbb
push
pop
ret
adc
cmc
rolb
pop
push
jmp
mov
jo
call
decl
enter
and
std
jmp
fs
mov
dec
dec
stos
stos
shr
push
jp
push
mov
pusha
sub
cmc
in
pop
insl
push
mov
fcom
push
into
test
push
fs
inc
jg
orl
and
xor
and
imul
mov
mov
int
mov
cmp
repz
aad
sub
adc
mov
mov
test
test
mov
or
cmp
dec
fucomi
adc
mov
ja
rcll
cmpsb
fidivrl
lods
filds
mov
ljmp
aas
icebp
loop
adc
int3
movsb
int3
in
fstl
dec
sti
pushf
sbb
int3
pop
cmp
hlt
orb
inc
xchg
imul
push
mov
mov
enter
mov
pop
fldcw
push
jb
ret
nop/reserved
mov
jl
mov
sti
push
jmp
xchg
stc
nop
repnz
mov
mov
fiadds
call
cmp
cmp
sbb
and
mov
lcall
xor
inc
and
addr16
pop
scas
mov
in
sub
sbb
adc
cmp
adc
icebp
bswap
fcmovnu
or
sbb
scas
iret
andl
mov
push
rorb
jp
sbb
fstp
addr16
xchg
adc
and
and
jge
pop
fwait
push
stc
aaa
jnp
inc
lods
xor
cs
sbb
adc
insb
xlat
call
and
adc
movsb
and
outsb
in
inc
jg
sub
mov
xor
jmp
inc
adc
push
fisubl
jp
aas
mov
in
pusha
daa
mov
orb
repz
push
out
dec
dec
or
movsl
xchg
sahf
ja
ljmp
mov
lods
ret
adc
out
negl
mov
sub
repnz
inc
xor
rorb
repz
and
daa
mov
mov
mov
mov
jns
negb
test
dec
scas
lods
push
push
pop
dec
testb
mov
test
orl
in
fmul
mov
and
fwait
or
icebp
mov
push
clc
pop
repz
cld
iret
cmp
push
jnp
add
mov
aam
frstor
pushf
sti
sub
stc
inc
xor
rcll
cmp
aaa
or
jno
std
sti
adc
fstps
and
out
in
div
mov
mov
mov
cwtl
add
mov
cmp
lods
lods
sbb
pushf
fcompl
negl
add
pop
cld
push
stos
inc
imul
cmp
push
inc
or
mov
imul
xlat
inc
xchg
fnstenv
cmp
loopne
sub
into
pop
xor
js
mov
sub
xchg
jns
sbb
and
sub
enter
xchg
popa
adc
and
lock
in
mov
test
xor
cmp
arpl
ret
push
adc
cmpps
xlat
add
mov
xchg
or
addl
in
pop
or
lahf
or
orb
mov
adc
add
add
and
lret
roll
xchg
scas
sbb
jg
mov
jb
aaa
push
mov
xchg
pop
std
cmpsb
mov
arpl
add
icebp
ret
xlat
push
dec
loop
mov
or
mov
jnp
je
mov
jno
pop
iret
in
sbb
push
sub
inc
inc
in
mov
cltd
insl
add
and
push
jno
add
inc
inc
out
adc
in
pop
in
insb
sbb
push
movl
adc
movsb
nop
mov
sti
mov
notb
addb
mov
and
sub
sub
movsb
add
mov
mov
sub
pop
outsl
imul
mov
sub
or
in
lret
jp
nop
adcl
adc
call
add
call
mov
rep
xchg
jnp
mov
int3
mov
ret
push
divb
push
test
in
cli
adc
jmp
test
mov
ficoml
and
stos
out
pop
adc
push
cmc
mov
popf
inc
jg
xor
ljmp
add
iret
xchg
mov
jp
leave
and
std
inc
lock
push
push
inc
loope
stc
mov
jno
sub
cmpsl
sbbl
xchg
push
out
lcall
pop
hlt
add
test
leave
and
pop
and
jle
xabort
test
jle
push
mov
sub
shrl
xchg
je
inc
aam
aaa
in
jbe
cmp
daa
or
mov
xchg
mov
mov
loop
jns
sub
icebp
xchg
mov
in
mov
mov
daa
ss
das
shrb
mov
xchg
pushf
cli
cmp
inc
pop
dec
ds
add
and
test
sub
cli
push
pop
movl
inc
push
in
inc
xlat
jmp
cmp
fstpl
lea
mov
fsts
inc
out
adc
sub
or
mov
in
mov
iret
and
repnz
cmc
add
daa
dec
pushl
xor
je
cmpsl
pop
aad
in
xchg
sub
or
inc
xchg
outsb
cmp
pop
roll
push
sbb
xchg
cltd
scas
aaa
mov
sahf
gs
in
fcmovbe
add
aaa
mov
adc
adc
test
rcr
xchg
mov
push
shl
adcb
addr16
jae
fcomps
xor
leave
adc
xchg
jae
ficomps
mov
inc
clc
sub
and
xlat
add
gs
dec
cld
popa
outsb
jg
push
push
pop
outsb
xchg
sub
insl
pop
mov
and
pop
daa
mov
xor
xor
mov
mov
jb
shll
adc
testb
popa
lret
sub
cmpsb
ret
lods
inc
cmpsb
insl
sub
inc
xchg
mov
test
jne
stos
adc
pop
add
cmp
sub
out
cmp
mov
or
cld
pop
hlt
and
popl
sahf
je
aad
mov
shlb
cmp
adc
sub
jns
pop
xchg
and
mov
xor
xor
push
scas
inc
mov
test
push
push
sbb
insl
stos
ljmp
sub
push
xchg
hlt
jmp
and
gs
js
add
lret
xchg
icebp
insb
incb
in
xor
popa
dec
out
int
icebp
in
and
jecxz
outsl
cmp
inc
movsb
fbld
out
and
int3
mov
sub
leave
or
setne
push
lahf
adc
adcb
mov
push
into
shll
iret
subl
jmp
outsl
movsb
enter
rclb
pop
pop
dec
daa
hlt
ss
in
mov
dec
cmpsb
aaa
or
pop
cmp
cmp
push
idiv
jg
clc
out
sub
or
fdivrs
mov
xor
inc
add
xchg
sbb
and
cmp
out
fdivs
push
arpl
sub
or
imul
mov
mov
sbb
aam
cmp
mov
adc
ljmp
inc
jbe
jl
into
jl
push
mov
pop
mov
leave
push
mov
sub
xor
dec
nop
cmpsl
fdivl
and
in
push
outsl
aas
mov
mov
movsl
out
fildl
fstpt
push
gs
cld
dec
test
cmc
mov
cmp
ljmp
fnsave
jl
jnp
pop
daa
or
mov
jns
addr16
sahf
into
mov
xchg
std
int
lahf
xor
dec
sub
repnz
movsl
jg
push
mov
ljmp
jnp
sbb
pop
lods
sar
pop
dec
adc
dec
mov
rolb
ret
and
dec
or
jp
aam
shrb
dec
jge
test
call
js
cmc
ljmp
ds
in
lahf
cmp
aaa
call
cmp
orl
lods
cwtl
cli
loope
cmp
es
inc
popf
push
rcr
xlat
jl
and
jp
test
inc
lods
inc
mov
fildl
pusha
mov
jl
jns
lcall
pushf
lahf
mov
sub
rcll
das
mov
inc
je
cmpsb
enter
sbb
dec
inc
jmp
adc
lods
xchg
cmpl
stos
test
jmp
mov
sbb
imul
inc
xlat
jmp
mov
es
mov
or
add
out
shr
adc
outsb
call
int
mov
lock
fisttpl
mov
add
lcall
shll
push
pop
mov
rcll
or
and
data16
ret
pop
add
jb
xor
out
das
insl
sbb
mov
push
fcmovnbe
add
cmpb
fidivrl
cwtl
mov
push
es
test
mov
inc
inc
and
mov
addr16
mov
enter
stc
cmp
xchg
bound
jl
cmp
aaa
loopne
add
add
call
andps
xlat
stc
in
lock
enter
arpl
bound
enter
mov
add
and
push
lahf
sub
jns
popa
clc
into
mov
xor
insb
mul
insl
imul
fisubrl
jo
mov
dec
adc
ja
cmpsl
mov
push
lahf
add
jle
mov
test
test
popf
out
jecxz
call
xchg
mov
sub
inc
dec
pop
jb
push
pop
in
inc
adc
or
sub
dec
xchg
cld
int
xchg
inc
cmp
jmp
add
aaa
ja
pop
int3
jp
xor
lret
dec
scas
cmpl
fisttps
fs
mov
mov
stc
fwait
mov
xor
cltd
inc
push
sub
pop
xor
xchg
pop
sbb
lahf
inc
jmp
mov
sbb
xchg
lahf
scas
inc
adc
push
test
inc
jno
movsb
dec
imul
push
lods
mov
add
je
dec
mov
es
movb
and
mov
mov
or
loope
mov
lea
dec
sub
js
scas
sub
mov
dec
outsl
fmuls
rcll
scas
push
stos
cmpsl
call
shll
insb
adc
rclb
cmc
mulb
repnz
movsb
int3
jbe
pop
xor
jno
sub
ja
je
mov
xchg
adc
add
aaa
xor
mov
in
fidivl
pop
lsl
insl
inc
cmp
jl
pushf
jno
sub
mov
mov
jnp
jnp
jecxz
sub
pusha
ljmp
push
and
mov
les
lret
das
sub
push
test
jb
dec
sub
cmc
xchg
push
push
movsl
ret
and
loopne
xor
mov
orl
ret
mov
add
dec
hlt
or
mov
scas
idiv
add
sbb
mov
mov
xchg
dec
jecxz
in
fisttps
mov
mov
mov
inc
mov
inc
xchg
xchg
dec
push
pcmpgtb
hlt
cmc
rorb
mov
add
jle
sbb
mov
mov
in
push
cli
stos
sbb
test
outsb
or
sub
sub
data16
sti
push
sub
dec
sbb
sbb
cmp
pop
fs
insb
dec
out
rorl
in
xchg
inc
in
sub
insl
fldcw
cli
jp
mov
loope
inc
add
xor
faddl
xor
adc
push
out
push
ja
int
jge
adcb
mov
add
lock
fcompl
xchg
fildll
mov
mov
call
icebp
xchg
pushf
jle
adc
lods
or
lret
cmpps
pop
xchg
xor
pop
mov
std
inc
das
loope
xchg
xor
je
mov
push
stc
fidivrs
call
mov
jge
dec
adc
jmp
pop
inc
mov
sub
imul
lock
mov
js
lods
mov
ret
mov
cmc
pop
fldcw
lret
mov
imul
movsb
xor
cmpsb
das
enter
mov
adc
jge
out
sahf
cmp
sbbb
xor
cld
xchg
xor
es
leave
sti
inc
push
leave
xchg
mov
loop
enter
or
cmp
sbb
inc
push
mov
jns
mov
sar
orl
pop
mov
or
push
js
pushf
mov
dec
fildll
dec
fists
lret
mov
movsb
cltd
gs
push
or
push
je
lock
nop
cmp
mov
ds
in
and
movsl
ficoms
mov
mov
fcmovb
outsb
push
mov
sub
push
jno
imul
lret
add
aad
and
dec
dec
jae
sahf
xchg
push
cs
dec
rorb
imul
repnz
mov
jmp
fwait
aas
and
adc
pop
sbb
pop
stos
cmp
rclb
int
lret
and
pop
xor
pop
jno
push
bound
jae
push
sar
jne
sti
lcall
movsl
adc
pop
jbe
xchg
add
push
push
mov
jmp
pop
cmc
addb
cmpsb
sub
iret
lods
pop
jbe
jl
dec
nop
clc
mov
sub
scas
jb
imul
aam
jno
xor
dec
jle
xchg
sub
push
shlb
in
push
sbb
mov
and
dec
call
cmp
mov
fmuls
or
dec
mov
popf
loope,pn
negl
mov
enter
xchg
insb
xchg
cs
bound
mov
fildll
inc
jecxz
jbe
loope
xor
ja
out
in
les
dec
pop
test
cmp
movsb
stos
jns
or
mov
test
mov
decb
leave
pop
push
or
xchg
sbb
cltd
xor
cmp
cli
aas
mov
icebp
xlat
inc
mov
xchg
inc
out
aad
das
in
je
insb
outsl
leave
clc
imull
addr16
test
jle
lods
cs
inc
pop
add
mov
movsl
push
mov
fsub
inc
mov
xchg
cmpb
push
cwtl
mov
push
in
ret
jmp
mov
ds
jo
jl
les
mov
add
nop
movsb
loope
ficoml
daa
es
dec
mov
mov
mov
ret
scas
adc
roll
pop
hlt
insl
and
and
sub
rcrb
and
popa
and
cmp
cmp
xor
cs
or
movsl
aas
push
push
cli
adc
test
jmp
stc
push
shrl
out
cmc
push
out
lods
lods
addr16
shl
outsl
add
popa
shll
int3
jl
cli
lods
sbb
pop
inc
in
xor
cs
pop
mov
mov
shll
sbb
shlb
mov
adc
cmp
decl
outsb
mov
mov
xor
xor
in
cwtl
insl
ljmp
cmp
cltd
jle
xor
lcall
mov
je
lea
add
sub
mov
mov
and
movsl
jle
dec
push
ljmp
repz
jmp
stos
arpl
addr16
hlt
push
push
and
xchg
lds
insb
jno
mov
dec
cmpsl
cli
bound
in
pop
inc
fidivl
pusha
dec
xor
sub
cld
mov
stos
adc
push
fwait
push
mov
popa
sarb
stos
ljmp
sub
pop
mov
pop
mov
jge
sti
movsb
fiadds
jmp
mov
fsubrp
test
in
lods
lahf
jno
inc
mov
jg
clc
stos
scas
test
mov
pop
repnz
mov
leave
mov
xor
imul
into
mov
shrb
mov
js
cmp
int
ficoml
or
pop
xchg
inc
push
jo
push
fmull
cmpsl
clc
cs
adc
xlat
mov
cmc
addr16
sbb
imul
in
mov
add
and
repz
sbb
lea
or
mov
adc
add
icebp
pushf
or
das
out
jge
jge
mov
clc
mov
mov
lods
ds
je
push
divb
leave
cld
pop
inc
sub
in
dec
mov
mov
test
mov
loop
inc
mov
out
and
outsl
into
xchg
int3
cwtl
test
lods
lods
cmp
pop
cmc
xor
in
jnp
rorb
cmp
mov
cmp
icebp
sub
out
insl
test
push
ss
sbbl
cmpsb
jo
jmp
hlt
mov
imul
cli
xchg
push
je
inc
push
scas
popf
in
call
inc
mov
scas
loopne
mov
stc
test
sarl
pop
arpl
in
mov
call
mov
mov
mov
in
mov
pop
lock
bound
inc
or
push
cmp
push
pop
xlat
idivl
mov
cltd
icebp
aaa
inc
sub
jo
add
int3
fcoms
imul
pop
loope
pop
push
and
test
mov
mov
addb
int3
pop
push
adc
addr16
fcom
inc
ds
jmp
stos
sbb
adc
sub
pushf
test
cmpsl
adc
add
fldt
orl
cmp
cmpl
or
fldenv
mov
cmc
inc
insl
leave
or
dec
call
aas
ret
cmp
jge,pn
stos
loop
adc
mov
stos
sub
dec
jmp
int
cmp
mov
sarl
ffreep
insb
mov
mov
cmp
jb
mov
mov
lock
shrb
sahf
pop
int
push
pop
and
cmpsl
aas
lock
ret
adc
push
jno
xchg
lcall
clc
nop
push
pop
pop
lods
bt
addb
sub
adc
fisttpll
mov
bound
mov
mov
in
mov
cmp
lods
jno,pn
adc
adc
sbb
fistps
movsb
lret
mov
add
xchg
jge
xor
loop
mov
push
xchg
gs
dec
mov
arpl
cmp
das
pushf
lods
xor
push
sub
stc
nop
divb
insb
leave
mov
pop
xchg
scas
mov
push
mov
and
data16
pop
pop
push
imul
je
adc
fucomp
push
gs
xlat
outsb
in
xchg
mov
mov
and
ja
mov
mov
divb
dec
adc
daa
in
pusha
adc
scas
mov
pop
loope
mov
adc
call
jns
pop
add
fwait
cmp
sub
dec
js
rcl
xor
push
cmp
push
cmpsl
scas
xor
sbb
fs
pop
shlb
js
and
adc
negl
das
jae
test
into
in
gs
nop
idiv
orl
lcall
mov
fiaddl
pop
out
mov
add
movsl
mov
fwait
mov
add
or
lods
sarb
int3
popf
pusha
test
rcrb
bound
mov
sahf
adc
xor
call
mov
clc
loope
xlat
test
loopne
push
push
dec
data16
stc
rcll
ret
lret
mov
inc
push
bound
in
ret
js
test
inc
pop
sbb
lea
cltd
xchg
out
out
mov
mov
inc
xchg
andb
push
popf
mov
dec
insl
stos
inc
dec
push
roll
repz
fadds
movsl
xchg
jg
add
mov
mov
sti
mov
or
out
cltd
aam
test
cmp
fcomip
adc
add
lods
stc
ss
add
int
pop
hlt
aas
pop
insl
sbb
mov
fsubrl
les
add
nop
mov
cld
shr
mov
jmp
jle
lds
sub
ds
gs
pusha
or
rorl
or
push
cmp
test
scas
rcrb
cmp
push
mov
xor
cmp
bound
insb
in
dec
jbe
icebp
xor
mov
push
push
sub
mov
pop
decb
or
mov
sbb
xor
pop
test
mov
xchg
ljmp
jb
out
add
roll
les
jbe
xor
fdivl
pushf
lods
push
xor
or
push
sbb
jbe
movsl
jae
les
adc
pop
push
inc
pop
jle
outsb
mov
sbbl
mov
xor
leave
loope
mov
icebp
rsm
in
insb
sarl
cld
push
pop
xchg
jle
cmp
xchg
jle
pop
stos
out
push
jmp
nop
daa
jbe
pop
shrl
mov
mov
add
add
in
call
xor
shl
test
scas
std
dec
mov
jle
sahf
and
fwait
int
cmc
mov
and
dec
js
out
clc
jno,pn
int3
fcomps
repnz
sarl
fs
xor
addl
mov
xchg
dec
cmpsl
jmp
sbb
inc
jge
fldenv
stc
aad
push
xor
cmpb
test
mov
sbb
shrl
jno
movb
das
push
xor
dec
pop
xor
dec
sbb
cmp
loopne
pushf
repnz
dec
fistl
lcall
jle
in
sahf
rcrl
fistpl
dec
in
adc
popa
and
out
jnp
mov
int
int3
dec
sub
and
mov
lcall
cmp
insb
outsl
sbb
jnp
fstps
popa
mov
lods
fisubs
clc
daa
sub
imul
add
mov
and
adc
fadds
xchg
add
scas
lcall
leave
int3
js
or
push
or
pusha
leave
add
sub
mov
push
cmp
test
dec
ljmp
or
push
sysret
pop
mov
mov
testl
mov
icebp
push
sbb
xchg
xchg
inc
and
or
pop
cli
aad
sub
rep
stos
inc
adc
push
scas
in
xchg
add
mov
jecxz
sahf
mov
idivb
add
mov
aad
push
push
scas
out
les
hlt
mov
jecxz
jp
call
push
xor
int
add
pushf
mov
cli
test
lcall
adc
or
fs
ja
fs
mov
sub
cmpsb
mov
repnz
jbe
cmp
std
inc
cmp
in
daa
pop
mov
shll
mov
dec
and
xor
or
rcr
push
call
movsb
cmp
aad
sub
test
out
inc
cmp
and
xchg
movsl
dec
sbb
mov
xor
pop
sub
test
lret
into
gs
fdivl
add
loope
sbb
test
jbe
mov
outsb
leave
xchg
xor
or
popa
std
stos
mov
push
push
fsubp
pop
mov
jecxz
frstor
push
call
loope,pt
mov
mov
inc
xor
pop
gs
xor
or
nop
movsl
sarb
xor
mov
cmp
popf
jmp
jg
aaa
js
inc
cmp
cmp
inc
mov
and
scas
mov
sub
loopne
inc
xor
into
sarb
and
popf
popa
rorb
mov
cmpsb
push
das
pop
sbb
sbb
inc
leave
loopne
jno
inc
sti
roll
out
outsb
ss
adc
in
lret
gs
stos
addr16
xor
or
mov
jmp
push
fxch
adc
cmp
mov
aaa
sub
pop
cwtl
imul
enter
jb
push
pusha
sti
fcompl
ljmp
repz
fildl
sbb
jmp
xchg
in
mov
fnstsw
mov
clc
xchg
mov
cmp
jns
lcall
outsl
jns
adc
out
mov
push
xor
movsb
idiv
repnz
xchg
lds
add
pop
xchg
cmp
jae
lock
mov
addr16
pop
sub
fwait
loop
inc
sub
jge
push
popa
cmp
ds
cltd
or
or
fdivr
scas
jno
sub
lcall
cmp
mov
add
repnz
aaa
ds
mov
mov
and
mov
push
jp
lcall
repnz
add
jbe
xlat
iret
mov
push
mov
outsl
loopne
pop
outsl
lcall
dec
push
lods
jno
scas
sub
cli
add
inc
and
lahf
out
and
push
inc
inc
das
bound
fmul
mov
push
lcall
inc
lock
ret
add
xor
lret
call
xlat
shl
sub
push
bound
jge
mov
test
mov
fisttpll
aas
inc
out
cmc
xchg
movsl
adc
pop
fnstenv
es
and
ficomps
sub
or
xor
test
lods
push
jae
mov
jns
push
insl
jbe
cmpl
jp
xchg
mov
and
fld
xchg
sbb
mov
push
sbb
mov
dec
add
adc
imul
das
mov
add
ret
or
adc
sbbl
inc
out
leave
mov
xor
sub
sub
cltd
mov
mov
mov
xchg
mov
xor
je
out
mov
lahf
stc
idivb
ror
and
mov
pop
mov
inc
dec
adc
cwtl
and
aam
outsl
enter
call
dec
mov
mov
xchg
out
push
cmp
and
sbb
mov
mov
cmpsl
cmp
push
mov
test
mov
fildl
mov
popf
test
pop
jmp
das
sahf
shrl
das
and
inc
in
fxch
arpl
xchg
jae
sbb
jmp
xchg
jns
add
sbb
insb
add
stc
xor
mov
sarl
das
mov
pop
cmp
call
fnsave
jg
xorl
inc
mov
sbb
fcmovnb
xchg
and
push
cmpsl
adc
data16
icebp
outsl
pop
iret
lcall
cmpsb
adc
pop
jns
lahf
pop
mov
sbbl
in
enter
xor
mov
testb
clc
jns
or
jnp
xchg
fs
negb
xor
pop
xor
das
or
inc
prefetchw
fnstsw
adc
clc
aaa
or
mov
lfs
push
mov
cmp
popl
int
xchg
mov
jne
jecxz
mov
jb
pop
and
and
sbb
mov
mov
mov
or
ret
fldenv
iret
dec
lcall
push
imul
sbb
bound
or
int
adcb
add
js
or
inc
add
lea
jp
jnp
push
lcall
loope
mov
outsb
sbb
jnp
cwtl
das
or
sub
adc
xchg
popf
inc
daa
and
mov
in
mov
popf
dec
push
aam
ljmp
dec
int
int
sbb
mov
push
mov
pusha
pop
mov
daa
xor
data16
inc
inc
cmp
push
mov
xor
mov
xor
inc
xchg
xchg
sub
cmpsb
cltd
pop
xor
or
iret
lock
jne
aam
bound
jns
jbe
mov
mul
out
add
loop
stc
and
inc
fsubs
das
xchg
lret
push
mov
push
push
push
lret
jg
leave
nop
cs
test
fs
jnp
imul
lahf
mov
inc
pop
fs
inc
cmp
out
pop
or
mov
push
aaa
add
push
sbb
or
ds
ret
push
or
cli
mov
ja
and
mov
ljmp
xchg
test
mov
mov
mov
ljmp
mov
fadd
jnp
sbb
inc
mov
push
call
xor
or
sbb
mov
jecxz
push
loop
mov
xor
les
pop
add
jne
je
cmc
push
int
xor
add
mov
jne
out
je
push
mov
stc
inc
mov
pop
jmp
fwait
pop
jl
sbb
div
xor
jno
mov
xor
jb
mov
pop
imul
out
inc
pop
fdivrl
xor
push
jg
dec
rorl
test
xchg
inc
xchg
and
dec
cmpsb
fs
scas
pop
xor
inc
and
out
or
mov
fcmovnbe
lock
lahf
jno
aas
dec
jnp
pop
fiaddl
pop
shll
push
sbb
mov
ret
or
out
in
cmp
scas
xchg
into
add
push
sar
cmpsb
jb
pop
push
or
gs
mov
xor
inc
add
or
mov
add
sub
movsl
leave
fidivrl
aaa
lock
jne
sbb
cwtl
push
push
cmp
dec
add
push
ss
cmc
push
inc
pop
adc
sub
out
jae
shl
js
into
add
or
inc
pushf
push
inc
mov
sbb
add
mov
push
xor
xor
cwtl
mov
inc
jo
push
lahf
aaa
mov
mov
int
jl
das
jnp
addb
fldl
mov
mov
clc
movsl
ds
xchg
cmp
inc
out
in
clc
std
dec
dec
mov
sbb
dec
xlat
mov
cmpl
cmp
sub
lods
jb
pop
daa
faddp
es
es
dec
stos
rolb
test
sub
fcmovnbe
xchg
inc
lods
test
mov
xor
test
ret
pop
or
push
fadds
fisttps
mov
adc
ret
mov
push
pop
lock
loopne
sub
mov
cld
mov
out
leave
dec
add
adc
pop
mov
push
es
out
xor
in
ljmp
adc
sti
jbe
or
add
sbb
push
ret
sbb
fucom
jbe
ja
mov
rolb
cmp
pusha
mov
push
std
stos
cmp
cmc
push
out
mov
mov
xor
rcr
pop
out
sub
insb
adc
pop
sbb
lods
push
bound
push
out
xchg
xor
inc
ss
cmp
out
rorl
std
gs
in
pop
adc
jle
loope
fwait
testb
mov
add
ljmp
add
in
lds
sub
std
and
aas
jae
dec
and
out
mov
dec
push
mov
add
jg
cmp
xchg
pop
mov
sbb
add
daa
outsb
ds
mov
cmp
mov
sub
test
mov
repz
mov
inc
ljmp
mov
cli
or
insb
iret
xor
fidivrs
addr16
xchg
fadds
gs
ja
in
in
ja
icebp
and
int
movsb
leave
je
fs
xchg
pop
mov
pop
sub
ret
insb
dec
movsb
cld
daa
or
ficoml
mov
xor
mulb
jmp
aaa
movsl
gs
aaa
xor
xlat
repnz
add
lahf
aas
push
shll
push
or
xor
push
std
lahf
mov
sub
push
sti
jmp
cmp
jae
dec
dec
mov
out
scas
iret
cmc
mov
out
xor
adc
aam
scas
icebp
jl,pt
adc
shrd
int3
cwtl
sbb
es
add
loop
mov
push
cmp
test
push
mov
cmpsb
dec
scas
lea
or
adc
mov
hlt
and
dec
rcrl
or
clc
faddl
mov
xchg
xchg
arpl
mov
jp
fsts
mov
pop
sub
lods
repnz
aas
mov
mov
jecxz
rcr
jnp
fsubrp
leave
sub
movntq
shl
dec
sub
test
or
fiadds
test
pop
test
je
lahf
jl
or
mov
sbb
leave
jge
xchg
fucomi
lret
pushf
stos
gs
sahf
inc
xor
jmp
imul
and
adc
faddl
pop
adcl
lods
aaa
popa
test
xchg
xorl
rcr
clc
pop
inc
mov
jmp
out
xor
inc
push
sbb
mov
shrl
cmpb
arpl
adc
and
lock
sbb
cmp
inc
mov
test
lea
icebp
mov
sbb
add
jns
jl
xchg
aas
push
inc
call
inc
mov
mov
enter
sub
cmp
scas
out
lcall
std
mov
les
add
xor
or
leave
mov
push
mov
fucomip
push
leave
das
ljmp
test
enter
cmp
test
push
or
fcmove
ror
sub
stc
int3
nop
push
test
pushf
sar
cmpsl
adc
mov
call
cmpsb
lds
inc
rorl
lahf
inc
jge
in
add
sahf
std
mov
bound
fisttps
popf
add
lock
neg
xor
xchg
jnp
iret
fsts
repz
cld
loopne
dec
ret
mov
xor
jg
sbb
cmp
sbb
dec
adc
mov
xchg
add
cltd
inc
ret
fwait
cmp
mov
mov
nop
sub
sbb
es
xchg
int
sub
int
pop
loope
enter
scas
push
xchg
inc
lahf
mov
xlat
stc
leave
push
dec
insl
xchg
and
and
in
mov
mov
addb
mov
pop
fstl
call
fdivr
cmp
lods
shr
lahf
push
push
mov
pusha
lds
or
cmpb
or
imul
jne
lret
scas
sbb
imul
pop
mov
je
fstpt
add
lods
movsl
in
jns
cmp
sub
sbb
jne
inc
lods
jp
repz
jb
shlb
sbb
arpl
popf
mov
mov
mov
cmp
lahf
jecxz
test
cli
mov
fstl
cmp
xchg
push
fisttpll
and
push
xchg
mov
repz
pop
push
outsb
dec
sub
jnp
push
xor
cld
mov
icebp
shll
xchg
cmp
dec
mov
and
or
sar
jmp
mov
jnp
mov
cmpsb
sbb
inc
dec
adc
in
mov
clc
sub
pop
pop
mov
out
das
cs
sahf
pavgw
inc
int3
loop
cli
lods
outsl
pop
aam
insl
dec
mov
ret
dec
xchg
and
xor
jmp
lea
xor
push
push
stos
in
sbb
fdivs
push
movsb
fisttps
add
push
mov
push
or
rclb
xchg
loop
aad
sbb
pop
addl
lret
jno
jl
mov
xchg
jmp
nop
loopne
pop
mov
jmp
mov
jae
or
jo
jmp
popf
popa
daa
mov
or
or
fcompl
inc
je
and
sub
aad
mov
mov
push
adc
sub
bound
sub
repz
sbb
mov
clc
xchg
jmp
jmp
cmovnp
fimull
shlb
sti
into
adc
popf
cmpb
or
cmpsb
mov
or
push
mov
test
add
xor
xchg
les
call
jbe
or
cld
add
pop
mov
call
ret
lret
xchg
jle
out
pop
cmp
iret
rcl
jae
scas
test
mov
mov
jg
dec
inc
shl
cwtl
sarl
dec
test
mov
cmp
loop
cld
xchg
imul
insl
xchg
xor
mov
fxch
out
in
sbb
and
idivl
mov
inc
push
jae
push
mov
mov
dec
pusha
add
cmp
xchg
pushf
push
jecxz
sti
jge
and
sub
pop
out
mov
and
sub
cmp
stos
mov
mov
inc
mov
jge
dec
ret
cmp
mov
lretw
mov
in
in
push
jl
ja
fisttps
cmp
xchg
inc
in
xlat
movsl
lods
xor
pushf
pop
sbb
fnstenv
sub
adc
dec
jg
loope
stc
and
add
lret
pusha
xchg
add
stc
insb
loopne
ss
lods
cmpl
shlb
inc
pop
addr16
jl
mov
cld
push
and
clc
push
mov
and
push
or
sahf
jo
mov
xchg
sbb
aaa
stos
int3
testb
jge
inc
sbb
or
add
mov
aad
out
push
or
and
insb
imul
pusha
repnz
je
or
out
rcr
or
inc
mov
mov
xor
ror
inc
jns
fists
mov
adc
icebp
pop
insb
jns
data16
mov
es
or
jns
inc
das
scas
sahf
outsl
push
adc
mov
lods
mov
cld
fs
and
enter
add
sar
arpl
loope
xchg
mov
push
clc
push
mov
stc
aaa
push
sbb
ds
and
mov
jge
mov
mov
pop
dec
mov
out
xor
aas
sbb
mov
pop
ja
aam
jmp
lret
fsubrp
cmp
cmpsb
and
dec
lods
cld
push
popa
ffreep
sbb
loope
aam
push
test
clc
adc
cmpsl
and
fwait
in
scas
lcall
jae
aas
out
inc
xlat
bound
imull
pop
lods
cmp
aas
lods
cmp
inc
pop
or
xchg
ficoms
lcall
outsb
push
loopne,pn
dec
mov
xchg
addr16
subl
or
cmp
xor
mov
pop
add
mov
sar
xor
mov
hlt
or
jno
insl
sbb
push
scas
adc
mov
lcall
pop
sti
scas
mov
cmp
cmc
sbb
orb
icebp
xor
ljmp
pop
aas
pop
and
js
add
daa
dec
or
addb
or
cmpsl
sbb
push
xchg
or
add
xchg
std
in
lret
int3
lret
imul
pop
add
loop
add
lods
and
mov
mov
out
hlt
sbb
insb
into
xchg
xor
adc
xchg
dec
push
mov
gs
xor
flds
pop
jge
sbb
hlt
stc
fucomp
push
fwait
pushf
pushf
push
es
ret
shll
popf
inc
sbb
xor
push
dec
push
jg
hlt
fs
dec
sbb
fwait
pusha
xor
mov
sbb
aaa
dec
push
sub
subb
scas
pop
mov
inc
pusha
out
pop
inc
push
or
xorl
xchg
hlt
lods
cmpsb
std
jecxz
shrl
test
and
dec
hlt
stc
adc
cwtl
and
sub
jbe
ret
push
sub
mov
sbb
or
xchg
lock
push
imul
aad
test
das
add
in
dec
xor
xor
orb
aas
sub
xor
rorl
les
into
scas
aad
jb
jns
sbb
shl
mov
or
jecxz
shll
sub
jl
pushl
dec
imul
stc
orb
add
out
ja
frstor
push
mov
test
loope
and
aam
test
pop
test
scas
out
ds
test
jno
add
sub
leave
fidivl
mov
repnz
inc
out
cmp
pop
xchg
mov
repnz
jae
adc
add
loopne
imul
jg
cmpsl
faddl
repz
lahf
ret
addr16
decb
cmp
imul
stos
jp
cmp
int3
sub
andb
je
or
fs
call
mov
jno
cmpsl
test
mov
repz
jp
push
loop
mov
pop
fwait
add
fsubrp
into
sti
mov
jge
push
mov
sar
add
es
and
push
cmc
ret
mov
dec
jne
mov
cmp
int
arpl
pop
inc
mov
ja
cli
jle
in
ljmp
mov
pop
cmp
mov
xabort
sar
push
jbe
jbe
fimuls
push
add
cmp
xchg
rcr
shr
mov
stc
pop
cmp
sahf
inc
sub
mov
inc
mov
pushw
mov
cmpsl
fcompl
mov
add
ss
pop
push
cmp
xor
loopne
test
push
cltd
pushf
inc
mov
iret
add
sub
jmp
fdivl
xchg
jno
mov
dec
int3
pop
insl
std
insl
jb
in
adc
loope
mov
push
int
and
cmp
test
sub
lea
sahf
sbb
mov
test
sub
aam
aam
push
stc
jne
stos
addr16
mov
rcrl
xor
jo
and
lock
sub
into
into
mov
bound
and
scas
repz
insl
cld
fstps
clc
pop
dec
popf
xor
push
mov
jbe
xor
psrad
test
das
loop
dec
nop
pusha
ret
jl
pop
push
xor
mov
cld
mov
js
nop
sbb
adc
ds
jo
xor
jne
popf
dec
les
or
dec
clc
ja
jmp
mov
jne
dec
cmp
sti
jge
mov
cli
cltd
push
clc
jmp
in
inc
gs
or
adc
lcall
jle
or
sub
daa
push
cmp
subb
scas
sarl
call
push
mov
shlb
imul
xchg
cli
gs
inc
push
iret
push
cltd
rcrl
notb
and
mov
lea
mov
cmp
ret
sub
dec
jnp
inc
imull
arpl
sbbl
mov
scas
ret
pop
mov
sbb
cmp
scas
cmpsl
add
xchg
in
jae
dec
sti
lea
loope
outsl
leave
jmp
mov
mov
add
and
std
rcrb
clc
mov
imul
xor
lock
sub
dec
push
ret
pextrw
jg
scas
sbb
mov
dec
and
adc
inc
jl
pushf
or
test
dec
lock
xor
sbb
xchg
or
outsb
mov
cmpl
jae
cs
repz
mov
mov
mov
inc
sub
cmpsb
or
mov
imul
xchg
repnz
aas
imul
cmpsl
lea
cwtl
cmp
xchg
rolb
fbld
mov
dec
repz
jne
call
nop
xchg
sub
outsb
stos
sbb
ss
lds
cmp
dec
hlt
ljmp
subl
fldl
iret
or
pusha
add
lret
adc
dec
sbb
pop
mov
fwait
adcb
ss
rcr
sbb
and
stos
sbb
add
and
mov
sbb
sti
inc
sub
xor
fwait
hlt
cmpsl
inc
pop
test
inc
lods
or
ror
aad
jle
cmpsb
test
mov
inc
out
call
mov
and
pop
cmpsb
inc
cmp
jmp
mov
aas
loop
push
or
cli
faddp
push
or
adc
sahf
or
push
hlt
adc
mov
or
fcoms
lcall
dec
imul
xchg
mov
loopne
push
cmc
les
sar
push
mov
bound
add
or
in
cmc
xor
imul
jns
sub
mov
into
lahf
loopne
xchg
and
insl
push
cld
movsl
push
outsl
ret
cwtl
ret
js
je
add
mov
pop
sbb
pop
cmp
mov
adc
adc
gs
adc
fs
push
in
icebp
add
mov
jns
pop
jl
ret
popf
aad
mov
outsl
push
fisubl
push
test
jae
movl
mov
cltd
pop
jp
addb
add
adc
sbb
std
repz
push
sub
jb
mov
lods
out
xchg
loop
or
push
mov
movsb
cli
ficomps
mov
jmp
mov
xchg
mov
dec
pop
dec
mov
pop
add
into
lea
ret
sub
ljmp
int
xchg
xlat
pushf
pusha
cmp
into
sbb
repz
lcall
ja
outsb
scas
xchg
fsubrp
loop
mov
inc
sub
sbb
push
aaa
and
add
sub
int
ss
and
ja
mov
repz
out
rcl
add
fiaddl
xlat
test
xor
pusha
inc
lcall
cmp
push
jle
sub
bound
dec
ficoms
rol
daa
int3
bound
add
out
ljmp
inc
push
xor
iret
add
pushf
xor
repz
dec
xor
ret
cmp
es
test
mov
mov
je
jg
enter
test
popw
fidivrs
cmp
adc
clc
daa
sti
and
dec
mov
sub
xchg
xchg
lods
int3
pop
jae
ds
cmpsl
mov
into
lods
shl
aas
loopne
inc
adc
cld
inc
inc
stos
je
stc
add
xchg
outsl
xchg
add
mov
fistps
std
adc
sti
jmp
arpl
cli
mov
out
sahf
and
push
inc
dec
inc
and
pop
lods
sahf
movl
inc
popf
in
sbb
mov
pushl
and
ss
les
mov
orb
mov
xor
mov
inc
test
and
mov
dec
adc
filds
lret
xor
pushf
pop
cltd
pop
jnp
xor
xchg
mov
loop
xchg
stos
or
pop
mov
or
cmpsl
jg
cmp
xor
pop
rolb
mov
xor
leave
test
aad
clc
loopne
in
cli
cwtl
mov
xchg
andb
scas
dec
and
push
fadd
jl
xchg
loope
bswap
or
cli
adc
jmp
or
xor
jmp
shr
pop
lds
xchg
pusha
mov
add
pop
pop
lret
jecxz
rolb
out
and
int3
pop
add
xor
sti
outsb
int3
cld
test
sub
jne
cs
pop
popf
leave
sahf
sbb
lods
inc
and
fnstsw
and
push
cmp
jbe
sub
jecxz
rclb
sarl
mov
dec
xchg
fisubrs
push
je
sub
adc
or
xor
hlt
ljmp
lcall
movsl
ss
sbb
stc
adc
movsb
std
pop
push
mov
es
mov
leave
push
and
cmp
out
dec
xchg
dec
mov
dec
xchg
adc
nop
popf
test
mov
test
into
mov
dec
fsubrl
aas
mov
js
mov
enter
xor
jae
loope
lret
pop
mov
dec
mov
imulb
pushf
std
adc
movsl
pushf
std
sub
fsubl
adc
adc
mov
mov
fisubrs
lret
adc
ja
pusha
cs
jae
mov
fiaddl
in
inc
lcall
arpl
inc
out
add
push
pushl
test
popf
sbb
add
roll
mov
inc
icebp
repnz
xchg
cmpb
xor
pop
or
inc
sbb
negb
or
cld
aas
sbb
loopne
or
test
jns
out
mov
bound
sub
int
in
jo
xor
test
addr16
inc
out
mov
ret
sahf
mov
pop
inc
call
mov
sbb
in
cmp
fists
push
enter
shr
add
mov
ljmp
mov
out
xor
sahf
sbb
dec
cmp
mov
scas
lock
cmp
out
push
sahf
pop
sbb
adc
jno
fldln2
dec
dec
jbe
inc
mov
sub
jbe
or
mov
push
test
stos
or
js
cmp
fmuls
add
fnstenv
insb
xchg
xchg
xorl
aam
xor
mov
dec
je
insl
les
mov
jo
test
daa
mov
push
repnz
push
call
enter
mov
pop
inc
sbb
jmp
push
dec
cmp
jl
adc
clc
push
push
sub
pop
adcl
lahf
nop
cwtl
xchg
shll
push
push
mov
je
push
xor
push
lcall
mov
mov
push
fnstenv
adc
mov
or
pop
shll
outsl
jge
adc
loopne
imul
sub
add
jbe
push
inc
xor
es
subps
enter
fidivl
add
or
pop
add
cld
mov
cltd
ss
fs
out
sbb
sub
call
nop
cld
adc
inc
mov
dec
ljmp
repnz
insb
cltd
jns
out
add
xchg
dec
fwait
outsb
mov
push
jg
mov
fisubrs
adc
aad
pushw
xor
pop
pop
cmp
push
test
aam
dec
in
jae
pusha
fstp
testl
loope
shrb
ficoml
rolb
mov
rcll
cmp
std
mov
xor
icebp
and
add
div
sub
or
mov
mov
lds
clc
in
into
push
es
push
fdiv
rcrl
adc
cmp
jmp
out
xchg
loop
int3
fwait
xchg
push
loop
add
adc
inc
mov
or
fnstcw
fsubrs
lret
inc
or
adc
in
jg
imul
ljmp
fimull
icebp
lea
shrb
outsb
adc
lea
mov
movsb
pop
xchg
sbb
inc
inc
das
cmpsl
cmp
push
sti
push
loopne
cmc
xor
lret
inc
insb
js
mov
cmp
adc
shr
lahf
cmova
add
dec
call
inc
scas
jnp
nop
push
mov
int3
sub
push
cmp
xchg
ds
rorl
jle
cli
popf
jge
cmp
xchg
pop
loopne
pandn
xor
push
and
push
or
call
cmpsb
movsb
or
inc
sarb
dec
sub
icebp
movsl
add
dec
ja
dec
push
out
mov
inc
lahf
cli
cwtl
cmp
lods
adc
sti
test
xchg
xchg
xchg
push
dec
cmpsb
out
push
aad
dec
xchg
mov
stos
and
sbb
es
jmp
sbb
movsl
pop
xchg
insl
jno
cmp
jne
mov
xchg
fists
imul
jbe
xlat
xchg
jmp
in
insb
rcll
or
addl
test
jbe
push
push
aaa
mov
leave
addb
cld
cs
cmp
push
arpl
loope
inc
outsl
and
nop
mov
pop
iret
inc
adc
jecxz
out
adc
sub
mov
dec
sub
dec
and
pop
rcl
fwait
lea
js
jno
push
movsl
clc
pop
mov
cmp
jb
dec
lret
push
das
mov
cmp
sbb
or
or
loope
dec
adc
dec
cmpsb
aam
stos
and
movsl
rol
mov
mov
adc
out
lret
fdivs
dec
scas
out
jecxz
aam
pop
sub
adc
inc
pop
pop
addb
xchg
mov
or
adc
lods
pop
xor
mov
or
notl
leave
movsb
mov
cmpsb
js
loope
cltd
xchg
xor
in
adc
pop
jge
rorb
movsb
ret
dec
gs
jg
or
aad
lea
push
adc
push
movsb
icebp
dec
pushl
xchg
leave
cmp
xchg
mov
add
sub
loop
xchg
jecxz
pusha
sbb
sbb
xchg
shll
sub
sub
add
clc
push
loop
inc
jmp
shll
push
iret
mov
stos
add
dec
cmp
ret
mov
mov
mov
push
xchg
movsb
pop
jg
or
call
xor
mov
mov
adc
dec
data16
xchg
movsl
fistps
daa
dec
jecxz
mov
daa
addl
shl
cmp
sub
mov
cmp
test
scas
sbb
mov
sbb
ret
push
mov
test
addr16
mov
imul
sar
mov
adc
jle
adc
xor
js
jp
test
push
push
stc
xchg
cs
jl
dec
sub
sahf
in
inc
cmpsb
mov
leave
fldenv
pushf
popf
test
cmpsl
cmp
adc
aaa
mov
xchg
es
fbld
jecxz
xchg
dec
cmp
push
jl
adc
xchg
fisttpll
or
sub
xchg
or
xchg
dec
sub
icebp
sbb
mov
inc
insl
mov
lcall
pop
stos
or
fsubrp
popa
mov
add
push
push
mov
repnz
test
xchg
sub
xchg
int3
int3
andl
sub
push
scas
stc
enter
pop
into
call
negb
lods
lods
clc
repnz
frstor
rcrb
stc
cltd
xchg
xor
insl
scas
shl
lock
sbb
lods
push
xchg
sbb
pop
xor
fsubl
in
pop
sbb
or
stos
imulb
mov
fmul
mov
lcall
or
ljmp
es
mov
jge
mov
or
lods
or
dec
in
aas
mov
pop
cmp
imul
jnp
xor
xor
in
repz
xchg
xor
pop
negb
inc
idivb
push
cwtl
sbb
in
nop
mov
ds
cmp
imul
push
push
xchg
jno
sbb
imulb
jmp
aas
ss
enter
jecxz
cmp
shrl
sbb
or
mov
xor
jecxz
sub
mov
mov
std
adc
addr16
add
imul
outsl
jg
out
cwtl
pop
dec
push
adc
std
pop
fwait
mov
arpl
pop
add
out
fdivs
fdivl
jle
sub
ljmp
rolb
push
lret
xchg
ds
adc
xchg
test
sub
push
fcoml
xchg
lret
arpl
add
or
xchg
shll
push
add
outsb
out
inc
out
faddl
ret
mov
cmp
inc
and
push
mov
mov
pop
lcall
inc
ds
out
in
and
leave
les
pop
mov
push
loopne
iret
add
sti
gs
jp
xor
scas
stos
push
jecxz
dec
mov
xchg
xchg
or
popa
subb
std
in
popf
mov
pop
mov
mov
adc
in
lahf
xlat
aas
in
xor
xchg
or
and
movsl
cmp
outsb
sbb
sbb
or
adcb
inc
lret
pusha
repnz
add
cmp
fldcw
clc
clc
adc
push
enter
inc
mulps
xor
std
xor
jb
jg
xor
sub
jl
and
icebp
mov
sub
adc
jl
fwait
int
jno
incb
jbe
push
or
rorb
xlat
dec
adc
stos
mov
lret
mov
data16
pushf
ljmp
scas
das
adc
int3
test
jns
sub
push
aam
sbb
jge
add
sbb
push
out
in
xchg
inc
call
inc
cltd
fldl
pop
inc
ss
dec
cs
xchg
sub
fwait
int
xchg
cmpsb
mov
jae
mov
pop
mov
lcall
dec
dec
hlt
push
ret
xchg
hlt
popa
xchg
lahf
mov
inc
js
push
and
scas
inc
jl
push
inc
mov
xor
cmpsl
and
jp
mov
sub
arpl
pop
out
pop
mov
pop
ds
dec
out
jp
shl
add
mov
mov
pop
adc
rcl
std
jg
adc
imul
jmp
stos
inc
mov
popa
das
cwtl
mov
lahf
push
lret
outsb
loopne
lahf
xor
push
add
add
mov
ret
rorl
cmp
into
mov
imul
sub
filds
and
cltd
les
jge
jecxz
iret
mov
movsl
shl
mov
xchg
sbb
hlt
lock
add
mov
popa
inc
sbb
inc
xor
mov
outsb
add
ss
pop
clc
cmp
xor
inc
sbb
imul
push
leave
mov
or
mov
xor
aaa
and
or
lret
pop
mov
lock
adc
pop
xorl
jno
xchg
pop
hlt
sbb
ljmp
lods
mov
idiv
cmpsl
sub
scas
stos
jbe
in
lcall
dec
mov
in
cmp
insb
mov
adc
lock
sub
subb
add
dec
popa
idiv
jge
add
hlt
sub
mov
push
mov
mov
nop
mov
push
or
pushf
mov
cwtl
jae
xchg
jno
aam
in
in
addb
sub
aaa
mov
pop
fwait
in
mov
pop
insb
push
sti
xorl
test
add
mov
outsl
mov
negl
and
push
mov
mov
addr16
jecxz
xchg
mov
dec
dec
mov
inc
ljmp
xor
cmp
pop
ljmp
xor
mov
arpl
out
ds
mov
shll
fisttpl
mov
sahf
insb
or
adc
sahf
aad
int3
mov
or
aam
shrl
mov
mov
dec
xor
cwtl
mov
test
mov
lea
push
cltd
jbe
aam
mov
ljmp
add
mov
pop
inc
stos
arpl
lods
fsub
popa
pop
fldl
jae
pop
cmp
lock
fs
cltd
lret
add
movsl
pop
cmpsb
lret
mov
sub
cmp
loopne
jp
dec
out
cmp
xchg
pusha
inc
adc
adc
cld
or
and
rcll
xchg
mov
js
test
cmc
js
cmpsb
popa
ds
icebp
unpckhps
scas
xor
push
push
mov
push
fs
jle
in
adc
dec
adcb
repz
push
cmp
or
inc
jg
stos
push
inc
and
and
mov
mov
inc
inc
aas
push
push
mov
je
xor
jecxz
out
adc
insl
ds
push
loope
bound
dec
andl
pop
adc
jae
adc
mov
cld
push
mul
out
sbb
sbb
lret
jge
jecxz
mov
mov
add
xorb
iret
push
jnp,pt
pop
sub
add
jns
test
mov
repnz
push
movsl
and
xchg
rcll
popf
jle
push
mov
and
dec
mov
inc
icebp
adc
add
mov
ja
mov
imul
pinsrw
andb
cmp
cmpl
add
nop
or
daa
adc
leave
loopne
jnp
and
mov
or
call
xchg
push
pop
pop
test
jbe
daa
lock
outsb
int3
orb
test
dec
test
es
mov
test
dec
inc
movsl
or
or
xorl
adc
xchg
dec
imul
mov
pushf
scas
adc
iret
mov
ficoms
popf
ret
add
inc
mov
pop
aas
pop
mov
jecxz
shlb
mov
pop
pop
in
out
sahf
stos
add
jle
pop
cmpsl
arpl
aam
call
sub
bound
clc
and
shrl
scas
mov
adc
mov
xchg
fidivs
movsl
jae
inc
push
xchg
popf
test
or
xchg
mov
mov
outsb
add
cld
sahf
iret
and
shl
int3
outsb
adc
arpl
mov
pop
mov
dec
jge
xchg
lea
and
add
dec
inc
mov
adc
subl
or
decb
mov
stc
mov
mov
xor
and
mov
ss
inc
je
cmp
mov
je
xor
hlt
xchg
test
mov
mov
and
repz
aad
xlat
or
insl
push
stos
notb
dec
popa
inc
mov
jb
fs
sub
pop
cmpb
cmpl
lahf
xchg
pop
in
or
push
jo
dec
add
sub
or
jbe
cld
jbe
addb
xchg
les
jle
sti
xor
add
add
dec
xor
adc
sub
outsb
mov
cmpsl
inc
jo
testl
mov
jne
or
fdivr
imul
inc
cmp
in
ficoml
fcoms
add
jl
nop
mov
mov
add
cld
adc
dec
inc
sub
mov
stos
or
add
push
sub
leave
pusha
and
in
dec
xchg
jmp
add
add
les
ljmp
es
push
xor
dec
push
xor
lea
cmpl
movsl
jne
jmp
in
push
imul
pop
or
fwait
lds
popf
mov
jle
adc
push
ret
out
ljmp
pushf
loope
adc
shlb
fnsave
lods
int3
xor
divl
push
cmp
mov
jp
fidivrs
xchg
mov
push
add
mov
cmpsb
in
xchg
aas
sub
mov
insb
or
xor
cltd
xor
xchg
call
loope
sub
sbb
or
mov
sub
xchg
mov
dec
mov
sub
push
pop
xor
fsubrs
sti
test
lahf
test
jmp
adc
imul
inc
cld
xorb
cmpb
outsl
test
enter
mov
push
outsb
mov
dec
ja
dec
adc
fimuls
iret
pop
push
dec
lret
cmp
adc
dec
out
pushf
subl
ret
inc
sub
dec
and
lret
jbe
xorb
jne
sbb
xchg
jmp
mov
inc
pmaxub
inc
jbe
or
mov
das
fildll
dec
stc
push
and
adc
mov
push
fcomip
mov
inc
pop
into
cld
imul
mov
add
push
jmp
mov
lds
jbe
sbb
mov
or
arpl
ja
mov
jg
xor
xor
push
xchg
mov
xor
adc
shrl
mov
pop
pop
xchg
jge
outsb
xor
in
dec
pop
jno
pop
cmp
aad
sahf
xor
add
movsl
xchg
or
jge
setl
loope
je
aas
ja
sbb
and
xor
lea
je
movsb
and
jp
nop
int
scas
mov
push
xor
or
test
fsts
lods
xchg
mul
jge
push
and
pop
int3
xor
cltd
mov
imul
andb
arpl
mov
in
fisttpll
sub
mov
aad
jg
mov
push
add
pusha
enter
aad
dec
adc
cli
jle
pop
dec
add
or
shr
jecxz
negb
sub
sahf
jnp
xchg
inc
cli
jmp
scas
adc
sub
jl
sbb
fldcw
xchg
or
lock
jecxz
fucom
arpl
mov
add
popa
jecxz
rcrb
sahf
imul
lcall
mov
les
mov
xchg
cs
mov
lret
scas
ljmp
cmpsb
cmp
scas
pop
cmp
int3
push
imul
lcall
in
clc
sbb
leave
inc
sub
jmp
not
divb
inc
mov
orb
dec
jp
cmp
int3
mov
outsl
jns
stos
jmp
xchg
insl
pop
scas
add
push
popa
cmp
add
pop
pop
jp
loope
outsb
push
jnp
xor
xchg
imull
fs
mov
dec
dec
rolb
fadds
push
fldcw
xor
outsl
icebp
test
pop
adc
fcompl
xor
adc
dec
xchg
std
jl
std
jne
mov
xor
push
das
mov
inc
cli
movb
xchg
outsb
mov
cmpsl
iret
pop
int
fcoml
pop
std
test
dec
scas
cmc
jge
push
bound
push
cltd
dec
push
mov
fldl
cmp
loop
aam
into
mov
inc
scas
aas
push
jl
cmp
dec
scas
push
mov
push
mov
popf
push
dec
or
in
rcr
inc
test
xor
addr16
pushf
mov
cmp
icebp
shl
adc
pushf
inc
data16
shlb
sbb
or
shrb
aas
in
scas
sbb
xchg
addr16
loopne
sbb
outsl
loope
dec
mov
loop
mov
xchg
push
cmp
add
lock
fmul
sbb
idivl
cld
jae
xchg
fwait
aaa
or
out
loopne
sbb
adc
mov
pop
orl
add
loope
jbe
loopne
jl
out
repnz
and
pop
and
xor
shl
xchg
or
test
sub
mov
cwtl
fstp
ret
in
sbb
adc
xor
xchg
cmp
mov
ss
xchg
adc
mov
xor
adc
jnp
sbb
xor
fadds
xchg
pusha
sub
sbbb
movsl
roll
mov
jbe
pusha
xchg
xchg
adc
add
or
xor
filds
inc
jg
fcoms
fwait
inc
push
xlat
in
mov
xchg
imul
or
pop
jnp
jb
movsl
sbb
mov
mov
mov
sti
adc
xchg
cmp
out
push
sub
lods
inc
sub
cli
mov
jmp
mov
jg
mov
inc
adc
sbb
jp
pop
in
pop
push
or
stos
fmuls
popf
cmpsb
mov
cwtl
mov
leave
mov
xor
mov
pushf
xor
test
iret
ljmp
inc
inc
mov
aaa
add
fisttpll
addr16
mov
in
mov
sub
inc
mov
cmc
jle
adc
ss
lea
mov
jl,pt
dec
cmp
sbb
out
mov
dec
push
xor
loop
ret
sbb
sbb
and
jns
xorl
or
mov
int3
inc
xchg
cmp
pop
pop
aam
out
pop
jecxz
lods
dec
fwait
dec
xchg
xchg
int
ljmp
lea
fstps
dec
gs
cmc
repnz
mov
or
dec
sub
outsl
sti
cwtl
in
lds
jne
add
ds
jle
jae
arpl
loope
rorl
pop
dec
int
adc
and
push
fnstsw
jne
push
test
jge
sbb
jne
and
xlat
mov
outsl
xor
sbb
out
dec
inc
adc
test
ret
sar
cmp
jmp
orb
push
ret
repnz
arpl
jmp
pop
movsl
or
out
push
sbb
mov
lods
add
pop
jb
pushl
aaa
push
xor
inc
scas
jl
jp
inc
jbe
scas
push
in
sbb
sub
dec
or
loop
sahf
pop
cmpsl
cmp
dec
fcmovbe
pop
scas
sub
push
in
sub
mov
je
call
ffree
inc
mov
sbb
lcall
dec
testl
test
or
xchg
enter
or
loope
rcrl
mov
or
cmp
insl
push
sub
dec
scas
cmp
pop
dec
daa
jg
jg
and
adc
pop
cli
mov
stos
loop
xchg
push
add
or
dec
rolb
jb
push
rcrb
mov
pushf
jae
daa
xor
adc
popf
cmp
xchg
pop
lods
js
inc
int
lea
cld
loop
mov
fdivs
mov
inc
add
adc
out
shrb
call
push
popf
pop
add
repz
xor
jl
je
inc
scas
in
xor
jmp
mov
pop
jno
ds
dec
ret
and
sar
adc
ss
mov
jp
xchg
xchg
xor
cltd
jno
cmp
lea
lcall
inc
add
sbb
mov
gs
jl
cs
leave
lds
xchg
xorl
jnp
or
ret
clc
scas
xchg
jnp
mov
enter
fisttpll
jb
lahf
jp
xchg
xlat
push
and
add
mov
mov
lds
jl
inc
inc
mov
movsl
ret
loopne
in
inc
sahf
and
or
call
aas
lods
jmp
ret
out
pop
test
es
cmc
movsl
adc
iret
lock
lea
sub
jmp
inc
adc
mov
cmp
adc
cmp
mov
xor
outsl
lock
inc
jae
mov
jo
pop
popa
push
std
xor
cmp
xchg
nop
sti
mov
into
subl
lea
xor
scas
sub
cmpsl
mov
rolb
in
insb
inc
outsl
jnp
shrl
jecxz
divb
ret
mov
push
fisubrs
lcall
push
rcrb
inc
mov
mov
xchg
push
push
dec
add
jns
mov
jbe
hlt
or
dec
cmp
std
inc
push
add
in
test
jle
sbb
pop
mull
test
cld
inc
cmp
out
addb
pop
add
lods
inc
shlb
xchg
xchg
adcl
jecxz
mov
popl
xorb
ret
jge
loopew
inc
in
sub
jmp
js
sub
loope
cmpsb
lcall
inc
fs
loop
loopne
aam
xor
adc
cs
les
fs
test
jns
cmp
dec
sub
mov
mov
shrb
pusha
scas
js
fdiv
aam
ret
or
xor
aaa
iret
cs
xchg
mov
lret
sti
movnti
pop
inc
stc
xchg
lret
lret
movsb
mov
dec
lock
jle
fldl
and
jno
mov
jnp
pop
jnp
test
mov
dec
popf
xchg
imul
aas
jb
test
cmp
inc
sub
fists
dec
pop
test
shl
subl
icebp
cli
pop
into
testl
jge
cmp
or
iret
arpl
add
sbb
sbb
rclb
and
movsb
sbb
imul
loopne
sub
rol
arpl
push
push
cmc
pop
sbb
cs
jmp
mov
cmpsl
jle
xor
in
fs
lret
mov
pop
xor
jo
mov
shr
js
mov
inc
and
fadds
dec
popa
inc
jbe
aas
add
xor
shll
inc
jnp
mov
mov
aam
cli
or
test
lock
shlb
rorl
and
aad
insb
mov
jnp
xorb
lea
inc
mov
jbe
pop
dec
jo
jmp
pop
lret
and
add
aam
in
icebp
fs
test
xor
fwait
and
hlt
das
loope
or
orl
leave
enter
fiadds
mov
ret
mov
xchg
arpl
lods
jne
fimuls
push
popa
adc
inc
out
inc
ret
gs
mov
xor
popf
insb
bound
fimuls
mov
cmpsb
out
lods
arpl
lret
or
sub
arpl
mov
inc
lock
cltd
add
cmp
out
shlb
add
jecxz
iret
test
or
jp
inc
in
mov
mov
or
or
bound
mov
insb
out
inc
js
sbb
clc
push
clc
adc
sbb
cmpsl
cwtd
sub
aam
dec
pop
dec
bsf
icebp
testl
in
call
cmp
mov
add
hlt
mov
or
inc
mov
or
imul
push
sbb
add
adc
rorb
mov
push
pop
dec
lds
mov
outsb
rol
cmp
lea
pusha
mov
stc
adc
fisubl
dec
aad
test
lahf
push
sbb
xor
add
movsl
cmpsl
enter
test
pop
and
xchg
xor
or
outsl
xor
mov
lods
cmp
push
inc
jecxz
aaa
loope
or
dec
in
popa
jne
and
or
out
les
fcoms
cwtl
loopne
outsb
jp
lds
push
das
test
mov
mov
fsubrs
lret
hlt
inc
add
fsubl
iret
movsb
incb
out
nop
js
out
insl
or
xor
cli
movsl
jb
stc
mov
call
std
out
cmc
imul
fucom
inc
mov
push
lret
sti
xchg
fmuls
dec
fdivrs
fcomi
push
mov
in
pop
icebp
xlat
out
popf
lods
icebp
sbb
lcall
loope
pop
add
or
dec
outsb
mov
and
lods
arpl
std
js
mov
jo
lods
xchg
orb
shll
iret
sbb
call
popf
sbb
adc
cld
imul
inc
punpckhdq
lods
fisttps
not
pop
je
xchg
stc
lods
mov
imul
es
and
mov
xchg
pop
or
arpl
push
sbb
cltd
jae
cli
inc
mov
popa
jb
jno
aas
pop
or
dec
aaa
cli
jl
cli
and
loope
scas
ja
hlt
push
fsts
add
jne
int3
jecxz
jge
adc
pop
out
push
rcl
inc
pop
test
push
loope
or
subb
sub
mov
pushf
daa
shrl
lea
rcrl
and
pop
insb
and
jge
inc
add
mov
add
aam
cmpsl
cmp
jb
sbb
cmp
fsubrl
and
push
jle
pop
stos
mov
hlt
jno
mov
and
and
sahf
popf
xor
or
ret
dec
xorb
xchg
push
call
pop
push
shrb
in
jns
xchg
aam
decb
mov
fsubr
jo
out
or
push
sbb
int3
lcall
jnp
jle
pop
push
or
test
adc
add
adcb
shrb
loopne
xor
fstl
sbb
sub
sahf
pop
pop
dec
or
out
and
fistpl
je
jp
call
mov
ja
mov
out
jns
in
lahf
mov
iret
imul
sbb
in
xchg
mov
cld
pop
outsb
adc
and
xor
sbb
xor
nop
bound
test
int
ljmp
inc
aaa
fcmove
inc
jle
xchg
out
jae
mov
shlb
das
mov
xor
push
ss
lahf
ja
mov
or
adc
mov
loopne
out
jl
mov
clc
push
push
inc
inc
test
cld
shl
fldcw
or
mov
stos
dec
xor
xchg
or
or
outsb
push
mov
sbb
popl
lds
shll
jmp
sbb
xor
faddl
rolb
movsl
mov
jae
xor
xchg
xor
stos
pop
cmc
cmp
and
loop
rclb
or
or
icebp
icebp
jl
je
loop
cltd
jnp
in
mov
lods
imul
mov
push
add
cmc
test
int
mov
and
in
les
jb
gs
lods
add
xchg
sub
std
mov
jmp
in
sub
xadd
jae
aaa
cltd
mov
or
sbb
hlt
iret
movsl
lods
mov
shl
xlat
inc
jmp
sti
and
das
shll
or
inc
hlt
xchg
cmp
or
push
push
adc
and
or
int
out
or
clc
aas
jmp
js
xor
out
pcmpeqb
fiaddl
and
cmpsb
dec
sti
data16
jecxz
sbb
repz
push
xor
dec
das
adc
and
and
dec
syscall
cli
dec
nop
jae
adc
and
xchg
or
int3
xchg
xchg
sub
push
cmp
and
loop
add
int
imul
repz
xchg
cltd
mov
sub
add
adc
in
cmc
bound
lods
xchg
repnz
mov
out
push
lods
ror
sahf
push
into
pushf
adc
cmp
loopne
dec
out
dec
xor
lods
dec
sbbb
dec
ljmp
cmp
mov
aad
and
imul
andb
shll
adc
mov
or
int
sar
mov
cli
pop
ret
rorb
jecxz
pop
mov
pop
nop
rcll
divl
jecxz
enter
sbb
loopne
into
sbb
fisttps
jg
loope
imul
stos
inc
jb
xchg
xor
xor
inc
mov
cmp
or
int
popa
iret
ret
jae
imul
inc
dec
sub
mov
daa
adc
test
lahf
sahf
pop
sahf
pop
xchg
pop
mov
jns
das
shll
mov
aas
add
clc
test
push
xchg
dec
jmp
leave
orl
inc
dec
xchg
xor
sub
or
and
xor
lret
ret
movsb
cmp
add
and
pop
movlps
lretw
iret
xor
cltd
cmp
xchg
andl
into
xchg
fmulp
rcrl
and
cmp
or
rcrl
fcom
mov
scas
stos
mov
xor
push
and
jg
jl
loope
icebp
ja
out
jle
mov
lea
and
gs
jl
and
mov
sbb
dec
scas
push
xor
je
stc
sbb
test
pop
xchg
insl
dec
add
popf
lret
xor
and
dec
push
std
jb
ss
jmp
push
inc
add
fildl
in
mov
fstps
out
int
dec
add
mov
mov
or
in
cmp
fwait
and
mov
mov
lods
lods
jmp
jne
nop
inc
sub
and
fisubs
imul
lods
daa
mov
loop
cmp
ret
xor
std
sbb
and
out
push
push
call
filds
shlb
fnstenv
clc
and
xorl
cld
add
pop
mov
push
sub
les
dec
xchg
shl
jl
inc
cltd
xchg
sub
or
push
push
aas
rcrl
bound
aam
push
push
adc
mulb
mov
mov
ja
pop
mov
dec
mov
mov
cmp
sbb
push
mov
and
add
push
imul
in
in
jae
push
ja
jnp
test
pop
dec
fsubs
pop
push
jns
cmp
in
lahf
fdiv
adc
sti
shll
push
cs
stc
adc
fistpl
push
ds
sahf
jmp
outsl
pop
mov
cwtl
ret
lock
mov
lret
scas
sub
sub
movsb
cld
in
jl
sub
mov
iret
cli
sub
lock
push
push
jb
cmp
test
iret
cltd
ret
mov
orb
test
push
xchg
and
sub
mov
mov
sbb
pop
and
or
fbstp
jmp
mov
jmp
pop
scas
pop
inc
push
cltd
cmp
push
adcb
mov
das
pop
in
push
fsubl
sbb
into
test
inc
aas
mov
lods
insl
lock
loop
mov
or
out
out
push
into
add
xchg
mov
fadds
imul
and
mov
aas
inc
inc
inc
mov
sub
iret
iret
push
mov
pusha
pop
lods
shrl
fnstsw
leave
bound
cmp
xchg
xlat
lretw
mov
cmp
aaa
jp
in
enter
shl
inc
pop
mov
or
lret
popf
shll
ret
mov
mov
addb
inc
pop
repnz
lock
fdivl
inc
lods
mov
inc
sbb
outsl
dec
jne
xor
into
sbb
stos
pusha
fdivs
sbb
cmp
inc
shlb
xchg
or
mov
ucomiss
or
pop
ja
gs
dec
mov
ret
lret
xor
cmp
xchg
add
sbb
xor
mov
mov
adc
das
mov
mov
and
and
test
inc
xchg
in
dec
sub
pusha
cmp
add
jle
inc
nop
push
lret
nop
scas
fucomp
les
sub
mov
lret
or
loope
pushf
imul
stos
aas
in
call
fildll
mov
mov
push
mov
imull
pop
jg
sbb
mov
jecxz
xchg
sub
gs
pop
lea
dec
pop
lret
mov
mov
sub
and
insb
sbb
push
xchg
pop
add
rol
and
cmp
xor
jecxz
sub
repz
jl
mov
push
sbb
fldz
cld
sub
sahf
inc
lods
fimull
cmp
outsl
ss
call
inc
and
xchg
lret
pop
xor
aas
sub
subl
or
in
push
mov
jl
pop
orl
clc
mull
pop
imul
pop
lock
cld
xor
sub
adc
push
cmpl
cltd
push
push
dec
xchg
rcrb
loop
mov
lret
and
sub
in
pop
lret
cltd
dec
xchg
cmp
sbb
mov
es
jl
in
das
and
sbb
pop
push
adc
aaa
movsb
cmp
dec
fidivl
js
cmp
out
push
movsl
add
xor
fidivrl
jp
jbe
mov
push
jbe
in
outsl
sti
std
int3
adc
test
jmp
cld
xchg
imul
shl
pop
fisubrl
les
mov
movsl
inc
rcrl
fsubrs
testb
xchg
push
xchg
out
gs
scas
fsubl
lds
loopne
push
adc
cmp
jae,pn
cmc
ret
lea
push
outsb
call
mov
or
jne
mov
loope
movsb
lods
in
es
loopne
jge
adc
push
ss
test
dec
jo
iret
rcrb
cmpsl
aaa
insl
in
push
push
add
adc
clc
push
adc
mov
jns
push
rorb
pusha
aas
xlat
inc
leave
cmpsb
cwtl
stos
push
push
add
pop
sahf
or
jp
jl
test
imul
jo
mov
mov
popa
or
mov
jbe
or
inc
subb
xchg
dec
push
sub
cli
jp
and
fs
cmp
push
pusha
sbb
xchg
xor
andb
arpl
add
mov
add
out
insl
mov
ja
xchg
ss
cltd
sbb
xchg
and
in
dec
test
mov
or
scas
lret
cmp
rol
pop
sub
cbtw
int3
bswap
or
cmpsl
xchg
inc
aaa
xchg
cmp
lcall
mov
inc
addl
imull
inc
iret
mov
cmpsl
sub
dec
and
sub
mov
push
dec
xchg
shrb
cltd
pop
jge
pop
add
pop
dec
and
out
fcmovnb
or
aaa
add
push
xor
sahf
hlt
mov
fisttpll
mov
jg
mov
aad
nop
and
sahf
test
nop
es
xchg
and
cli
out
pop
sti
cld
fiadds
mov
out
mov
push
push
sub
xor
dec
sbb
push
jnp
jns
sbb
inc
lea
fistpll
aas
or
divl
push
mov
adc
mov
push
aam
cld
mov
ja,pn
aas
add
ds
sub
shrd
lds
lret
dec
xchg
mov
fucomp
and
adc
sbb
jg
loopne
aam
and
dec
test
push
jecxz
addb
dec
push
adc
pop
popf
mov
adc
ljmp
adc
mov
pop
lahf
push
adc
out
ret
mov
out
inc
xor
call
or
int
hlt
loopw
insl
in
inc
lds
imul
add
in
arpl
test
mov
push
jns
xor
xchg
and
add
out
cmp
pop
mov
or
test
mov
sbbl
push
fisubrs
std
ret
push
pop
aam
or
insb
rcrb
mov
cmpsb
mov
decl
andb
sti
fmull
or
ret
add
loopne
je
pop
ds
sub
mov
out
loop
loop
add
loop
ss
mov
cmp
xchg
push
adc
sub
push
push
add
push
pop
push
ret
dec
jno
adc
push
popa
add
arpl
cmp
sub
insb
dec
into
mov
cmp
push
mov
fsubr
dec
jo
ljmp
mov
pop
stos
mov
xchg
fildll
icebp
faddp
jb
insl
das
sub
push
jbe
andb
ds
pop
adc
cmp
pop
xchg
or
add
jb
lods
dec
xor
push
xor
into
iret
cmp
sub
call
jle
mov
aaa
jl
insl
mov
cmp
sbb
imul
add
xchg
addr16
shlb
mov
jae
outsb
cs
sub
pop
fisubs
jns
xor
imul
shrb
push
js
sbb
mov
les
push
addr16
push
dec
dec
jmp
jo
ret
leave
sub
or
push
mov
out
dec
xchg
pop
xor
add
out
cltd
push
sahf
and
pop
jp
sbb
nop
push
mov
cmp
mov
xchg
inc
fcmovu
push
xlat
fwait
sarb
sub
movsb
sbb
cmp
movsb
jno
or
shl
rcrb
inc
cmpsb
inc
arpl
pop
in
insb
mov
adc
movsl
adc
pop
or
rcrl
clc
enter
outsl
loop
call
div
adc
pop
test
gs
lods
sarl
xchg
pop
sbb
inc
jns
inc
pusha
push
repz
xchg
mov
adc
fldcw
xor
push
or
addr16
xor
xor
xor
rclb
mov
pop
jae
jns
sub
jb
jg
jmp
sub
call
sbb
fnsave
test
iret
inc
cmp
xchg
pushf
dec
imul
neg
gs
lea
pusha
in
xchg
lret
in
cwtl
cltd
mov
or
nopl
mov
arpl
les
or
mov
mov
ljmp
xchg
jns
xchg
mov
push
inc
sbb
inc
push
push
loope
xchg
repnz
mov
pop
in
les
aaa
dec
lret
scas
cwtl
push
xchg
fistps
inc
divl
pop
mov
std
js
aas
mov
daa
and
sub
arpl
jns
cmp
pop
cmc
testl
pop
xchg
jne
sub
repz
sub
mov
ret
into
ficoml
popf
mov
jmp
mov
add
mov
add
add
ds
fdivl
cmc
lds
cld
sub
cltd
test
sub
cmp
mov
push
jge
jns
mov
inc
out
sbb
cmp
testb
loop
or
std
into
popf
cltd
mov
arpl
movsb
dec
dec
sbb
jmp
add
mov
sahf
jmp
sbb
out
jl
add
out
in
cmp
add
into
outsb
mov
in
movsl
push
addr16
inc
pop
pushf
dec
shlb
stc
jns
push
cmc
adcl
and
jne
test
pop
psrlq
mull
fbstp
es
push
fwait
xchg
shl
out
addr16
shlb
aaa
dec
into
push
in
mov
jno
stc
push
push
jae
bound
pop
jno
xchg
fildl
add
loop
jle
popa
bound
shlb
es
inc
xchg
mov
aaa
cmp
ret
cmp
jae
popa
mov
inc
ja
scas
add
pop
sbb
mov
inc
repz
and
pop
xchg
xor
lea
icebp
sub
push
outsb
imul
je
xchg
xor
sti
sbbb
nop
ret
mov
jnp
xchg
push
pop
shll
cmp
or
mov
aaa
bsf
pop
jno
cs
mov
mov
scas
inc
cmp
fiaddl
das
lahf
clc
or
leave
movsl
in
fcmovnu
mov
pop
fdivs
stc
scas
cmpsl
enter
loopne
sub
push
rolb
das
cmp
inc
pop
adc
out
les
xchg
inc
fstpt
or
add
int
push
lcall
aad
add
cltd
cmc
in
xchg
in
cli
push
dec
aad
cmp
push
sub
add
push
push
insb
es
mov
lods
mov
or
dec
in
inc
sub
fdivp
mov
dec
aam
inc
pop
and
push
push
xchg
sbb
lahf
notb
xchg
sbb
mov
scas
lods
outsl
xor
jmp
xchg
mov
jg
cmp
aas
inc
xchg
xchg
inc
mov
test
jmp
add
push
cmp
inc
mov
imul
push
cmp
xor
push
sarl
inc
data16
push
lahf
aaa
std
outsl
mov
ds
sub
cltd
stos
ret
jns
bound
mov
mov
jge
adc
inc
out
les
add
dec
out
fstpl
push
cwtl
add
xor
mov
xchg
cmc
dec
cs
push
cltd
mov
sti
in
cld
out
lea
imull
dec
mov
cwtl
int3
sbb
jg,pn
push
punpcklwd
and
test
outsl
or
ret
out
cld
fsubrs
cwtl
lods
mov
addb
jmp
les
add
mov
int
mov
mov
stc
add
cmpsl
jns
lods
xlat
jne
mov
fbstp
sub
ret
test
fwait
sub
sbb
xchg
lods
fucom
insb
dec
out
and
push
mov
adc
xlat
mov
iret
adc
cmovs
and
jp
push
push
sub
dec
out
add
scas
or
fwait
mov
mov
mov
mov
xchg
xlat
repz
subl
jp
cmpsl
push
js
push
roll
mov
insl
push
out
xchg
stos
fnstenv
lea
movsb
xchg
pop
push
test
popf
mov
mov
stos
xchg
cli
aad
jmp
mov
test
shll
incb
add
xor
stos
testb
xor
cmp
outsb
scas
and
stos
xor
ret
sub
fbstp
jb
lods
sbb
or
cmp
andl
js
mov
xchg
and
in
orl
aas
add
repnz
add
jno
inc
push
cmp
aas
cmpsl
je
and
xchg
shlb
xchg
ret
cmc
xchg
sbb
movsb
enter
repnz
sbb
inc
push
push
insl
flds
stc
shrl
or
mov
push
sti
sarl
data16
fs
jg
add
push
push
fs
xor
sarb
dec
incl
cmp
jmp
les
fldl2e
sahf
sbb
pop
addl
jge
btc
icebp
xchg
jge
repnz
sbb
mov
and
inc
lret
cld
adc
cmp
or
out
mov
sub
jl
and
cld
adc
repz
mov
jecxz
inc
sub
adc
or
ror
adc
hlt
jg
loopne
cmp
fsubrp
sbb
scas
push
sbb
pop
insl
into
pop
xor
mov
and
jno
fmuls
mov
ret
mov
das
fwait
icebp
mov
pop
in
adc
inc
cmc
or
shlb
std
aam
pop
sub
mov
imul
js
or
mov
ss
stc
push
xchg
pop
mov
dec
idivb
mov
pop
imul
out
in
and
push
and
fwait
std
mov
mov
arpl
pop
stc
test
or
push
pusha
inc
mov
mov
xchg
or
aaa
test
out
jmp
fnsave
pop
pop
ljmp
lret
popf
lods
in
bound
into
lahf
cmpsl
lods
cmp
mov
mov
push
mov
rcr
ss
out
lock
dec
test
stos
call
mov
into
mov
jb
or
popa
push
imul
popa
xchg
ret
loopne
cmp
fdivl
xor
or
dec
jge
push
mov
mov
in
cmc
test
stos
out
jp
cltd
lcall
hlt
cmpsb
sbb
sti
fistl
es
notb
sbb
pusha
cld
adc
or
cmp
pop
mov
mov
xchg
ljmp
in
and
add
xor
sub
out
shlb
aam
add
xor
repnz
dec
mov
stos
mov
xchg
add
incl
cwtl
ret
add
jae
and
fidivrs
lea
pushl
adc
in
ds
xor
test
nop
lods
xor
pop
fcom
push
ficompl
mov
xor
cmp
xchg
fadds
clc
shll
adc
cmpsb
xlat
repz
test
push
lret
stos
imul
fucomip
stos
loop
adc
test
mov
rcll
popf
aam
mov
mov
imul
call
add
push
sbb
scas
cwtl
enter
mov
add
ds
mov
jnp
inc
jmp
int
inc
flds
mov
aaa
pop
inc
outsl
inc
jge
adc
test
daa
inc
int3
pop
push
shrl
ja
rcrl
orl
push
int3
rcrl
push
test
dec
std
test
xchg
mov
xchg
aas
loop
dec
cmp
shr
test
jbe
in
ret
push
add
stos
mov
imul
sarl
xchg
or
push
mov
and
lret
add
dec
xor
jae
in
xor
jp
mov
out
jl
rol
notb
stos
fisubrl
xor
fwait
xchg
mull
stos
pop
mov
xchg
adc
push
xchg
dec
xchg
adc
jnp
xchg
mov
aaa
lds
outsl
jne
out
fcomps
cmp
mov
sbb
mov
adc
cli
test
fs
or
fcmovnbe
mov
rcl
loop
mov
ss
push
jp
jecxz
add
test
cmp
mov
mov
enter
out
addr16
mov
inc
roll
sub
xchg
inc
cltd
lret
add
and
clc
test
idivl
and
mov
jns
lret
ret
cmp
shll
cwtl
inc
and
mov
push
popf
and
cmpl
outsl
add
aas
or
lea
lahf
pop
dec
out
pop
and
jae,pn
mov
jge
pop
cli
and
in
mov
sahf
cli
and
and
fnstcw
inc
add
stc
add
ret
cmp
in
jmp
rol
push
ds
hlt
push
mov
xchg
push
sub
out
mov
and
lret
sub
and
stos
shrb
ret
xchg
es
cs
lods
lahf
stos
sub
lcall
ret
ret
jle
push
je
push
clc
pop
sarb
sbb
sub
outsb
outsb
out
xchg
cmp
push
aam
repnz
out
jl
dec
gs
daa
arpl
xor
test
push
mov
or
je
mov
push
mov
sti
add
xchg
lods
push
out
js
adc
int3
xchg
cmp
nop
add
pop
or
stos
loop
jmp
mov
loop
fistpl
cmp
popa
test
outsb
xchg
aam
dec
adc
jmp
cltd
rorl
les
mov
daa
jb
cmpsl
cltd
divb
xor
xlat
and
mov
in
jmp
shrb
sbbl
pop
adc
enter
push
add
push
pop
sub
pushf
or
js
push
cwtl
in
insl
inc
insl
sub
pop
repz
sbb
std
mov
mov
in
je
incl
popa
push
sub
xchg
or
xchg
jne
fdivl
lock
je
fs
or
fwait
cmp
dec
arpl
cmp
xchg
dec
jno
leave
lods
mov
sbb
popf
xchg
rcrb
mov
pop
cmpsb
mov
add
lds
add
add
jnp
in
mov
adc
sub
pop
lds
cli
lods
scas
sbb
lock
cmp
jae
and
sahf
leave
mov
inc
push
sbb
and
jae
imul
or
stc
sub
movsl
pushf
push
popa
xchg
js
sahf
lods
push
adc
faddl
jg
mov
xchg
push
lods
mov
jno
into
and
and
filds
sbb
push
notl
mov
fwait
popf
adc
add
das
jmp
stos
pop
bound
jg
mov
pop
add
and
push
pop
fwait
xchg
cs
shlb
aam
jo
fbstp
cmpsl
repz
dec
pop
cli
movsb
pop
xchg
andb
mov
or
sub
fwait
incb
sbb
out
fnstenv
jns
ds
pop
adc
or
add
repnz
in
int3
inc
addl
mov
jmp
arpl
leave
not
fcoml
push
push
dec
mov
cwtl
cmp
int3
inc
adc
cwtl
scas
xor
xor
rcr
mov
mov
push
bt
testb
popf
xchg
outsb
hlt
loop
js
stc
popa
cmp
stos
movsb
pusha
movsl
outsl
test
cmp
add
jb
clc
hlt
pop
pop
outsl
call
leave
or
cltd
clc
pushf
aas
add
mov
mov
test
mov
cli
adcl
std
jle
pop
and
xchg
aas
fwait
cmp
sbb
mov
divl
je
ljmp
sbb
aas
stos
pop
aas
scas
les
xlat
mov
popa
jns
jns
lcall
jno
mov
inc
outsb
xchg
add
in
add
mov
inc
and
lret
aas
pop
inc
in
xor
sbb
movsl
sbb
lret
push
dec
mov
sub
mov
adc
idivb
cmpsl
int
lock
dec
or
fidivl
sti
mov
je
addr16
loop
jge
or
cltd
ret
cltd
xor
pop
cltd
sub
xchg
and
mov
testl
daa
into
fsubp
clc
mov
cmp
jns
and
add
xor
mov
sarb
jl
cmp
fdivs
rclb
std
pop
pop
aam
mov
sub
imul
repnz
jecxz
mov
or
mov
loopne
or
cmp
adc
xorb
cmpsl
jae
dec
divb
ret
inc
sahf
test
push
bound
lds
mov
jb
fisubrs
cmp
movsb
iret
mov
mov
loopne
add
fistps
xchg
int
pusha
shrl
add
inc
in
ficoml
test
mov
pop
xchg
imul
mov
cltd
jns
aas
push
sbb
stos
in
addl
aam
out
aaa
inc
ret
sbb
push
inc
jae
aam
arpl
nop
enter
jl
nop
ja
fnsave
lds
pop
mov
iret
shrl
and
fstpl
fildll
xchg
push
pop
jb
lret
cmp
data16
jle
cld
in
nop
les
mov
and
mov
les
jne
cs
outsl
into
push
lods
mov
lahf
inc
adc
ror
repz
cmp
int3
sub
lret
mov
pop
jnp
mov
arpl
xchg
mov
adc
pop
lret
jae
aas
jmp
cwtl
mov
jl
push
cmpsl
in
jno
subb
dec
lods
sub
iret
leave
cmc
ljmp
mov
pop
cltd
add
rol
push
sbb
cmp
push
test
cwtl
out
dec
cmc
gs
or
arpl
cmp
rolb
cltd
ljmp
mov
inc
aas
inc
aas
and
bound
sub
insl
out
add
or
xor
js
sub
rcrl
xor
fiadds
mov
test
cmp
mov
mov
sbb
adc
sarl
je
lcall
cmp
fists
inc
mov
pop
subb
mov
lahf
push
push
or
dec
js
xor
and
dec
jmp
aaa
lea
fimull
xor
sbb
shl
hlt
sub
sub
pop
add
xor
testl
cli
pop
mov
push
and
decb
or
repnz
push
aam
daa
push
or
imul
pop
jmp
loopne
xor
xchg
mov
mov
add
jb
cmp
lret
xchg
dec
leave
xchg
leave
and
arpl
inc
lods
pop
cs
out
inc
jle
push
repnz
pop
mov
sbb
movsb
fisttps
inc
and
stos
xchg
leave
repnz
out
popl
add
ljmp
rcrb
jbe
shlb
sahf
adc
lock
hlt
jno
push
dec
int
int
aaa
lock
lea
cmc
mov
leave
loopne
notb
mov
jne
jmp
inc
xchg
push
push
idivb
cltd
scas
adc
scas
popa
or
fsubrs
inc
or
lret
sbb
jno
scas
insb
aam
ljmp
ficoms
pcmpgtd
std
jb
shr
inc
into
mov
jl
push
xor
addr16
sub
mov
or
and
lods
cmp
stos
inc
hlt
mov
pop
fucomp
sbb
cld
out
aaa
add
jnp
repz
sub
sub
sar
pop
shrl
xchg
and
stos
ficompl
inc
jno
xchg
in
mov
test
pop
jo
xor
push
test
cmpsl
jno
mov
inc
lods
xor
out
xchg
dec
jo
xchg
cs
mov
rorl
mov
push
loop
jmp
push
mov
js
xlat
pusha
aaa
std
inc
sahf
inc
dec
in
xchg
scas
mov
lods
lock
or
out
jns
enter
or
sbb
ja
pop
test
xor
lds
in
roll
std
pop
in
or
mov
sbb
movsl
jno
jg
scas
ds
negl
push
popa
jb
xor
sbb
mov
push
imul
gs
fcoms
pop
jl
mov
and
daa
shl
jecxz
cmp
shll
mov
and
dec
cmc
fidivrl
xor
outsl
loope
decl
stos
push
jp
push
dec
pop
jns
mov
dec
pusha
adc
lcall
mov
mov
jge
add
testl
into
mov
cmp
mov
dec
sub
and
aaa
out
and
iret
or
mov
jge
pop
or
ret
cld
sbb
sbb
notb
sbb
sub
inc
sahf
std
ja
sub
arpl
iret
adc
imul
push
loopne
sbb
cmovns
push
add
and
ds
insl
push
ret
pusha
or
or
jbe
jo
insb
repnz
loope
aas
mov
popf
or
jns
ret
int
mov
mov
ds
adcb
cmpsb
ret
mov
stos
add
test
pop
mov
dec
sbb
cmp
xchg
repz
inc
sub
lock
adc
ror
dec
loop
rolb
dec
cmp
popf
mov
dec
and
jl
adcb
jbe
lods
shll
xor
aam
cmp
push
cmc
adc
shlb
cltd
mov
jg
mov
sbb
cmp
mov
shrl
push
and
test
cld
and
fs
gs
test
inc
std
lcall
outsb
aad
and
pop
and
lea
push
xchg
push
addr16
mov
insl
inc
or
push
push
movsb
les
xchg
pop
mov
jg
push
dec
push
xchg
push
cmc
mov
lods
push
notb
aas
addb
mov
mov
and
dec
mov
sub
and
loope
push
jmp
cli
es
pop
out
les
mov
loope
push
rolb
cmpsl
or
pop
aad
or
cmovb
out
repnz
dec
into
dec
sbb
sbb
mov
loop
mov
repnz
movsl
subps
sub
push
jb
shr
test
pop
fbld
movsb
inc
sub
jecxz
adc
cmpsb
xor
add
xchg
sbb
xchg
cs
mov
test
lcall
inc
bound
mov
fcompl
dec
mov
neg
negb
mov
pop
push
inc
sub
xchg
jecxz
bound
cmp
and
inc
add
mov
rorb
and
rep
aam
and
mov
mov
inc
push
xchg
test
inc
adc
pop
mov
push
loop
loopne
enter
loop
push
movsl
or
les
xchg
push
sub
addr16
inc
cli
add
and
mov
push
mov
ja
sbb
dec
jge
aad
mov
adc
outsb
adc
in
cmp
add
cwtl
addl
push
fidivrl
add
xor
insl
loopne
cmp
and
lods
aad
cli
xlat
stos
mov
daa
int3
lds
adc
mov
fwait
adc
ret
in
scas
xlat
cmpsl
add
xchg
jle
mov
ja
shl
popf
sbb
sbb
repz
sub
popf
cmp
xchg
or
fnsave
push
adc
mov
cmp
stc
jmp
add
shll
jo
data16
jb
mov
call
daa
loopne
mov
push
idiv
cmp
test
mov
jb
sub
sbb
lcall
or
sarl
xlat
pop
lahf
mov
mov
pop
pop
jge
jno
sti
and
jb
mull
ja
sub
imul
mov
movsl
cmp
sar
and
pop
jno
in
test
mov
xchg
xor
ljmp
cwtl
dec
mov
pop
repnz
adc
cmpsl
jp
mov
popa
cmp
fstpt
out
add
adc
mov
jns
xor
push
out
call
adc
iret
xchg
jo
inc
nop
dec
clc
jae
push
cwtl
push
pop
arpl
mov
jmp
test
jl
xor
dec
stc
xor
xor
cmp
pop
ret
int
or
push
cmpsl
fbstp
add
js
or
sti
les
adc
sbb
or
ficompl
dec
pop
dec
leave
inc
mov
add
push
jae
pop
insb
push
popl
mov
pop
scas
jne
and
xchg
test
jo
aam
adc
andl
xchg
scas
or
in
data16
xlat
aam
inc
jl
and
cmpl
add
dec
mov
daa
lods
aas
mov
fwait
dec
xor
push
aaa
imul
or
gs
mov
mov
out
pop
repz
xchg
cmp
xchg
push
jns
mov
mov
push
es
movsb
mov
icebp
inc
adc
daa
push
popa
cltd
shrl
inc
pop
mov
mov
adc
jge
xchg
jno
fs
and
aad
inc
xor
sahf
pop
push
imul
ret
nop
inc
mov
sbb
stos
pop
pop
mov
pop
insl
mov
pusha
push
jle
jmp
cmc
lret
enter
jns
movsl
in
mov
inc
jns
push
frstor
xchg
lds
loope
dec
lahf
cmpps
adc
sub
cld
in
sarl
xchg
sahf
pushf
pop
inc
push
sbb
fs
cmp
out
push
or
sahf
in
mov
aam
aas
js
clc
push
xchg
out
push
sbb
jae,pn
test
outsb
mov
xchg
outsl
push
dec
fwait
xor
push
and
cmc
in
xorb
stc
xchg
mov
or
mov
or
pop
leave
inc
sbb
pop
cmp
mov
ja
inc
mov
leave
lods
and
xor
ret
movb
mov
es
gs
sub
movsl
jmp
xor
inc
push
clc
insl
cmc
xor
dec
dec
pop
pop
lods
mov
mov
cmp
sti
sbb
mov
xchg
outsl
fidivl
xchg
lock
fidivl
pop
cmp
xchg
sbb
inc
jl
push
mov
cld
inc
cmp
ja
out
mov
mov
dec
ljmp
dec
js
pop
fs
and
lods
stos
roll
jne
pop
sar
mov
leave
xor
inc
xchg
push
cld
push
mov
mov
xlat
mov
or
dec
cmpsl
add
aad
cmc
adc
cmp
data16
sub
dec
pop
mov
das
pop
testl
dec
dec
int
pop
jns
leave
test
xchg
mov
mov
xchg
imulb
sarb
aas
in
push
ja
mov
cs
push
mov
pushf
ss
out
cld
adc
scas
out
jb
mov
subb
cmp
push
leave
lods
or
mov
vsqrtsd
mov
cltd
movsb
sub
test
test
pushf
and
inc
pop
push
or
cmpsl
jg
inc
lods
rcll
mov
mov
je
xchg
xchg
or
push
adc
lahf
das
fsts
icebp
in
je
add
movsl
mov
lcall
loop
cmp
jg
fdivrs
or
sarb
sahf
mov
sbb
or
fmull
fsub
mov
cwtl
mov
ljmp
pop
push
xlat
push
push
add
mov
add
aam
add
push
push
cmp
jg
orl
and
mov
mov
leave
mov
aam
mov
loop
pop
push
hlt
mov
adc
testb
add
loopne
add
js
mov
mov
mov
pop
and
inc
or
pop
aaa
aam
pop
add
dec
roll
jno
mov
pop
outsl
inc
mov
xchg
mov
and
mov
push
add
and
data16
inc
ret
add
popf
leave
and
and
fs
loope
in
cmp
add
jae
ret
arpl
xchg
pop
jecxz
test
push
and
insb
cmpsl
sub
push
pop
mov
cmp
call
pop
mov
adc
ret
cmp
mov
insl
fdiv
sub
xor
sbbl
sbb
mov
test
inc
pop
cmp
decl
adc
cmc
or
lahf
dec
and
jnp
push
aad
and
std
push
jb
inc
out
jge
in
xchg
out
pop
sub
xor
mov
outsl
cmp
scas
push
out
cmp
das
dec
fadd
mov
outsl
inc
pop
scas
jmp
test
xor
jp
pusha
lods
les
xchg
mov
mov
pop
lock
jno
cli
stc
adc
arpl
imul
jmp
push
jns
jo
enter
xor
xor
mov
xor
das
xlat
push
add
push
test
icebp
insl
or
repz
push
ret
add
sbb
and
insl
out
cmpsl
gs
jge
pop
nop
mov
icebp
mov
mov
mov
dec
and
jmp
xchg
aaa
jne
adc
mov
push
aad
dec
fldt
imul
out
call
je
pop
mov
sti
mov
je
mov
mov
mov
pop
add
sti
shl
movsl
dec
scas
sti
ja
xchg
sub
xchg
mov
ret
jg
rorl
sbb
daa
dec
imul
pop
in
addr16
push
xor
dec
cmp
or
mov
roll
in
push
data16
inc
pop
mov
xor
dec
dec
xchg
cmp
test
addr16
fstps
in
shrb
lea
lcall
cmc
mov
xor
sahf
cmc
ss
jmp
jle
popf
cmpl
and
testb
lret
jle
out
adc
and
addl
icebp
jecxz
fchs
lret
dec
rcll
std
mov
pusha
lret
cmp
rolb
mov
add
test
or
sub
divl
pop
push
fisubl
dec
mov
push
xchg
inc
cmp
outsb
pop
jmp
ret
mov
test
into
test
add
cmp
mov
cltd
fucomip
mulb
inc
ds
or
xchg
xchg
add
outsb
in
and
sub
jmp
imul
xchg
dec
cmpsl
lcall
imul
insl
ljmp
icebp
mov
pop
stos
lahf
inc
aas
push
lods
sub
mov
sub
out
in
psubb
xchg
push
push
xor
das
dec
out
pop
mov
xchg
movsl
aas
dec
push
pop
jne
lret
pop
bound
outsl
mov
pop
das
pop
out
mov
data16
mov
push
rclb
imul
shrl
and
jge
or
sub
fs
test
fadd
xorps
xchg
sub
xchg
or
jl
sbb
les
dec
stc
clc
int
pop
data16
jecxz
push
cs
or
iret
mov
inc
jmp
jmp
sbb
std
lcall
call
arpl
push
pause
sbb
lret
mov
outsb
popf
jbe
push
dec
loope
pop
mov
cmc
lods
pop
sub
dec
es
shrl
imul
enter
add
lock
dec
push
fisubs
rcrb
imul
jae
xor
ja
dec
pusha
idivl
imul
add
or
outsb
lret
or
fldl
dec
jnp
xor
faddl
in
sub
and
or
sbb
inc
sbb
mov
orl
das
inc
fidivs
dec
je
lock
push
push
loop
push
fadds
aas
nop
mov
movsb
push
and
adc
loope
shr
hlt
mov
imul
test
lret
adc
stos
test
jmp
cmpsl
idiv
cmpsb
sub
sahf
movsb
push
fs
mov
icebp
cmpsl
fbstp
pop
fdivr
es
adc
cmp
out
jb
inc
pop
cmp
orb
je
push
mov
add
lds
shrl
pop
mov
mov
inc
and
add
mov
loopne
or
or
js
mov
fdivrs
gs
sar
cmpsb
jo
movsb
cmp
mov
loope
aaa
jp
dec
and
mov
fisttpl
fmul
sub
xchg
mov
loopne
cmp
jmp
repz
sbb
push
out
fchs
aas
cmp
mov
inc
arpl
mov
ljmpw
jbe
mulb
add
fpatan
insl
mov
in
sbb
arpl
mov
mov
mov
orb
pop
jle
xor
fsubl
movsl
cmpl
stos
pop
loopne
aas
int
mov
jbe
fstpt
cmpsl
ficomps
dec
out
es
ret
lcall
cmp
or
mov
mov
mov
lcall
stos
divb
inc
movsl
or
iret
lds
or
por
mov
jmp
test
stc
mov
mov
sbb
outsb
push
mov
in
or
sub
push
jge
mov
arpl
lock
sbb
aad
xor
lods
xchg
push
mov
push
dec
bound
jnp
xchg
scas
cmpsb
pop
cmc
out
jecxz
scas
and
mov
insb
xchg
popa
add
cmc
mov
cmp
lods
mov
cli
ret
test
dec
xor
dec
icebp
rcr
or
out
out
pushf
push
push
or
mov
ret
sbb
pop
imul
cmpsl
pop
outsb
lods
xor
and
sbb
cli
xchg
jle
and
inc
mov
xlat
mov
lcall
dec
inc
imul
xlat
jns
adc
mov
nop
pop
sub
mov
bound
inc
inc
cmp
cmp
test
cmp
jno
rolb
pop
cmp
rcrb
cmpsl
mov
std
sbb
flds
adc
sbb
es
xlat
pop
cltd
inc
mov
inc
push
shl
jne
jecxz
jae
es
in
pop
nop
loop
rolb
fldenv
mov
fidivrs
push
rorl
xchg
push
idivb
ljmp
popf
scas
and
stos
inc
cmpsb
sub
cmc
sub
add
scas
roll
add
cmp
sbbb
sti
sahf
in
adc
ret
push
mov
jmp
push
inc
pop
xor
jmp
jb
outsb
mov
push
int
sub
ss
iret
lea
leave
jg
popf
mov
jl
jae
xor
mov
add
ja
cmpsl
icebp
fsts
repz
cmp
mov
test
cmp
adc
test
sbb
mov
popa
mov
enter
shlb
ss
pop
in
xor
mov
inc
imul
sar
jg
or
pushf
xor
or
sub
inc
inc
lret
lahf
fsubl
call
repnz
inc
nop
push
add
lcall
bnd
pop
je
mov
test
fcoml
add
cmp
jo
push
cmp
cmp
add
or
in
or
jnp
and
fwait
imul
mov
sub
subl
cltd
jnp
lods
pop
cmp
hlt
or
push
js
jns
outsb
sti
fisttps
cwtl
xor
push
rcrl
mov
pop
jecxz
lcall
arpl
inc
dec
sub
dec
pop
nop
movb
cli
xor
add
pop
xchg
pop
aaa
sub
mov
mov
cltd
scas
cltd
xlat
test
inc
and
scas
fstl
notb
or
sub
xchg
aam
subb
xchg
decl
cmpsb
rcll
sbb
jge
ss
add
xchg
hlt
mov
xor
push
push
lahf
fcompl
jmp
dec
testl
push
add
ds
cmpsb
mov
xor
rclb
mov
dec
mov
mov
jl
pop
adc
dec
pop
jge
jp
fistl
int
ljmp
sahf
cmpsl
jecxz
mov
xchg
adc
inc
into
inc
hlt
mov
xchg
inc
adc
mov
sbb
outsb
pop
pusha
adc
cwtl
lods
lret
cmp
pop
add
pusha
mov
fimuls
mov
gs
mov
shll
xor
and
cmp
pop
mov
sbb
les
xchg
inc
push
cmc
push
test
dec
xor
out
cmp
cmp
inc
mov
bound
bound
dec
sub
aaa
push
push
and
int
dec
scas
inc
cld
test
and
imul
xor
xchg
test
and
rolb
lcall
cmc
cmc
addr16
repnz
xor
pop
test
jge
mov
subb
sarb
scas
mov
xor
ja
test
arpl
cmp
mov
and
negb
das
inc
dec
and
cmp
mov
dec
sub
loop
fnstcw
cmpl
into
mov
sahf
xchg
lcall
out
lret
int
movsl
and
xchg
repnz
ja
pushl
mov
xor
test
clc
jae
fdiv
pop
dec
mov
sarl
pusha
and
lcall
adc
fwait
xchg
popf
out
ss
cmp
stos
mov
pop
push
in
leave
sarb
outsb
sub
push
sbb
jl
int
mov
adc
into
jno
popf
inc
jo
adc
scas
filds
ret
inc
dec
inc
and
imul
stos
in
pop
cmp
adc
jge
insb
inc
lods
push
jmp
pop
mov
sub
xchg
fildl
stc
int
sbb
icebp
cltd
mov
inc
fbld
nop
stos
adc
dec
ret
cmp
jge
fs
cli
shll
in
addr16
insl
shll
insl
cmp
jge
call
jge
cmp
cld
xchg
test
fstp
test
jno
arpl
out
rclb
sub
xchg
cwtl
sbb
pop
test
xchg
les
xlat
adc
push
pop
and
imul
mov
push
sub
jns
inc
std
push
scas
int
jae
sub
bound
xor
mov
pop
mov
xchg
xchg
push
adc
in
xor
jne
pop
inc
pop
xchg
aas
sub
testb
sbb
xchg
mov
inc
mov
into
negl
dec
mov
je
fwait
mov
leave
cmp
pop
inc
div
pop
ret
adc
mov
push
dec
push
xchg
add
lds
loope
enter
das
cmp
pop
and
sub
enter
xor
je
in
inc
mov
and
icebp
idiv
add
cmp
gs
test
cmp
dec
xor
xor
xor
sub
faddl
xchg
inc
mov
mov
fnstcw
dec
lock
pmaxsw
mov
pop
in
enter
int3
jmp
add
jp
and
repnz
outsl
pop
mov
xor
int3
push
adc
int3
test
cmp
adc
in
xchg
out
xchg
cmp
xor
push
iret
cmp
aaa
addl
sbb
scas
adc
push
mov
mov
or
imul
mov
mov
cld
test
mov
loope
fcmovnbe
mov
cmc
dec
xchg
cmp
iret
popa
xchg
push
lock
js
inc
mov
js
inc
cmp
rol
les
sub
pushf
aas
arpl
js
mov
xchg
js
mov
aam
mov
xchg
sub
push
cmp
fldt
sti
aas
add
mov
popf
movl
adc
in
dec
cld
out
int
ja
pop
pop
push
xchg
lahf
ret
cld
ss
xor
mov
mov
push
les
push
push
scas
jnp
cmp
xchg
sub
cs
idivb
test
loop
jbe
popf
push
mov
mov
test
test
repnz
aam
mov
dec
push
push
sbb
shrb
sbb
adc
push
cltd
out
stos
jne
into
lods
rorb
cs
addr16
adc
push
pop
pop
jne
mov
mov
dec
aad
adc
les
jmp
lahf
out
stos
or
mov
mov
data16
jnp
jecxz
enter
xchg
dec
add
cmp
ficomps
imulb
fs
jle
adc
js
subl
outsl
inc
sbb
lods
jp
mov
jge
sub
mov
jp
xchg
addb
lods
outsb
cmp
push
ss
mov
sti
xor
inc
dec
aas
fcoml
mov
sti
pop
call
addl
or
and
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
jmp
push
and
mov
sbb
adc
jp
push
btr
inc
mov
sbb
cmp
and
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
adc
jp
mov
mov
cmp
fisubrl
fs
cwtl
jbe
arpl
add
outsb
fnsave
sub
lret
xor
dec
data16
les
pop
or
inc
mov
sbb
cmp
push
push
lock
subl
push
dec
aam
mov
dec
pop
inc
sub
and
out
rcll
inc
jmp
ss
push
lods
add
xor
cmp
xorl
dec
int
xor
cltd
es
shr
imull
push
dec
jae
adc
jo
push
popf
mov
pop
aam
xor
dec
int3
lock
sub
jp
scas
pop
negb
jmp
sub
call
mov
inc
mov
sbb
adc
jnp
scas
add
ljmp
scas
cpuid
loop
mov
or
cmp
scas
btr
inc
mov
sbb
cmp
stos
lss
mov
sbb
adc
jp
scas
btr
xchg
sbb
adc
jnp
stos
cmpxchg
or
sbb
cmp
scas
btr
mov
sbb
cmp
mov
mov
sbb
cmp
xchg
add
sbb
sbb
xor
pop
inc
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
setge
and
sahf
sbb
cmp
pop
inc
mov
sbb
and
dec
lock
adc
ljmp
scas
rcpps
clc
cwtl
jp
adc
jp
scas
btr
sub
cmp
pop
inc
mov
sbb
cmp
btr
sub
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
cmp
scas
btr
mov
sbb
push
shrb
scas
and
xor
adcb
or
cmc
sbb
call
lods
xlat
push
sbb
cmc
pushf
enter
mov
jb
cmpsb
andl
iret
sbb
outsl
jl
pushf
cmpsl
fiaddl
aaa
mov
adc
cmp
mov
mov
pop
icebp
inc
or
lahf
mov
adc
dec
insl
leave
out
and
int
shrl
fnstsw
mov
xlat
insb
movsb
add
xor
jb
mov
lock
insb
pop
and
inc
mov
jae
jp
jae
add
jge
std
add
dec
and
and
sbb
lock
pop
xor
in
xor
xor
add
or
lods
push
pop
test
cltd
cmpsb
or
out
xlat
sub
daa
jle
dec
mov
or
dec
int
pop
pop
in
fcompl
out
lea
cmovb
aaa
neg
xchg
or
pop
add
lahf
adc
pop
loop
sub
mov
jne
aad
jb
mov
pusha
fists
incb
cmpsb
in
and
xchg
in
xor
cmp
mov
popf
push
mov
xorb
dec
movsl
fidivl
out
sub
sub
mov
imul
das
and
sub
pop
jp
lea
lea
in
xchg
dec
or
push
sub
out
pop
jecxz
add
test
jo
into
or
pop
adc
cmp
lea
jge
xchg
shlb
inc
ret
dec
sub
or
inc
xchg
cmc
lea
and
sbb
in
lods
dec
and
inc
fiadds
in
and
and
adcb
mov
mov
divl
inc
imul
testb
or
aas
pop
roll
shll
xchg
imul
xor
loope
or
ret
movsl
daa
cmp
dec
sub
push
cmpsl
sub
das
hlt
out
scas
jmp
mov
mov
xchg
ds
out
repnz
add
js
push
jbe
adc
mov
dec
mov
adc
das
aaa
jb
popf
fimull
int3
dec
cmp
fidivs
clc
inc
arpl
mov
push
sbb
aad
xor
shlw
sub
pop
xor
arpl
fildll
mov
and
jae
inc
and
push
dec
js
or
cmp
ljmp
cmp
enter
or
mov
mov
fnstcw
push
outsb
arpl
push
pop
aad
cmp
dec
inc
arpl
fadds
jp
loopne
outsl
mov
dec
addb
aaa
les
xor
pop
roll
xlat
cmp
test
je
mov
movsl
dec
push
dec
outsl
xor
fbld
pop
cmp
pop
inc
jmp
dec
inc
ss
mov
jp
jecxz
in
aam
sub
xchg
pop
cmpb
pop
shrb
in
cmpsb
dec
imul
mov
dec
repnz
sbb
int3
shll
add
lcall
pop
sub
pop
daa
sbb
repz
decl
push
mov
scas
mov
shll
shl
and
push
pop
xorb
dec
lahf
call
loopne
lock
pop
pusha
int3
je
pusha
jb
enter
pushl
sbb
adc
mov
xor
out
push
fcmove
or
inc
adc
lods
shlb
jl
leave
cli
push
popf
sbb
aad
adc
xor
shlb
inc
fisttpl
cmp
pop
and
push
dec
add
push
or
inc
repnz
pop
popa
adc
aaa
pop
test
fidivs
or
jne
adc
mov
mov
xchg
and
je
push
dec
fwait
test
call
inc
pushf
inc
push
outsb
pop
cmpsb
sbb
and
inc
and
or
cld
xor
mov
js
dec
aaa
jmp
jmp
push
or
push
or
pop
xchg
call
mov
out
and
fstl
sbb
out
mov
jg
and
adc
mov
std
ret
popa
call
push
outsl
sarb
inc
cmp
mov
mov
cltd
sbb
lock
mov
notl
sbb
push
adc
cmp
push
lahf
xor
sub
mov
xchg
fwait
push
ret
sub
fstpl
jmp
jle
push
repz
in
cmp
pushf
std
aaa
and
shr
out
mov
popf
dec
mov
mov
add
add
mov
adc
cmpsb
xchg
add
add
sub
std
movsb
mov
and
in
fucomi
mov
xchg
shll
mov
pop
bound
ret
dec
in
mov
into
repnz
das
dec
cmp
push
jge
test
out
jmp
push
imul
push
test
cmp
sbb
ret
inc
shl
sub
enter
pop
icebp
pop
cltd
scas
dec
cmpsb
pop
push
jbe
xchg
jmp
pop
push
sbb
mov
cltd
loope
push
jno
and
add
andl
mov
and
enter
loop
add
out
aas
push
lds
out
sub
mov
test
pusha
divl
insl
loop
popf
mov
mov
cld
dec
rorl
out
iret
pop
inc
daa
lds
test
pop
mov
hlt
mov
aas
cmp
xor
adcb
icebp
fdivrl
jg
sti
pop
pop
push
inc
sbb
push
mov
test
aaa
imul
sar
ljmp
mov
pop
cmp
fs
lods
mov
pop
in
dec
add
int
out
mov
inc
jp
jecxz
cvttps2pi
jb
pop
xchg
and
out
xlat
cs
cmp
xchg
enter
adc
adc
cmp
mov
ret
adc
xchg
push
pop
imul
loopne
inc
repz
sub
sbb
idiv
xchg
mov
inc
xlat
fwait
adc
adc
mov
cmpsl
divb
mov
sbb
xor
xor
orl
nop
shll
in
add
inc
fldl
add
or
cmpsb
arpl
andb
add
rcrb
leave
popf
sub
iret
data16
loopne
mov
jns
shl
push
rolb
loope
dec
xchg
cs
aad
je
stos
mov
dec
nop
call
notb
int3
in
or
xlat
inc
jo
outsl
rcrb
adc
lahf
and
fsubl
sbb
stos
js
pop
cmp
sub
xchg
sbb
pusha
cmc
add
cmp
mov
stos
out
addl
mov
adc
popl
add
mov
add
sbb
add
fistl
maxps
jge
jecxz
fnstenv
or
jae
stc
inc
push
cmp
lcall
mov
cmc
mov
mov
imul
stc
dec
test
lret
cmp
jne
jmp
addb
mov
repnz
dec
push
jae
call
nop
dec
into
dec
sbb
and
mov
pop
mov
filds
sub
outsl
rcr
stc
jo
cmpsb
dec
cmp
cld
leave
aad
push
jb
sahf
js
and
jae
inc
pop
xchg
daa
inc
fwait
iret
mov
add
mov
sbbb
mov
add
and
sub
sbb
xor
movsb
int
xchg
test
or
xchg
cmpsl
jg
ss
movsl
call
adc
cmp
outsl
inc
aam
sbb
push
or
pop
mov
arpl
addr16
sbb
into
loopne
lcall
test
aaa
movsl
and
enter
imul
cmp
or
add
lods
push
jl
jnp
lds
mov
cmp
mov
iret
mov
cmp
mov
sti
and
rcrb
stos
fcoms
jp
lret
mov
jp
jge
jb
or
cmp
lods
fadds
xchg
inc
out
jge
mov
push
imul
outsl
movsl
xchg
arpl
mov
inc
mov
lahf
cli
dec
cmp
xchg
jl
imul
mov
dec
in
sbb
es
mov
fimuls
or
js
mov
cmp
jg
jae
adc
push
jg
dec
push
stc
addr16
roll
or
lods
nop
or
arpl
pushf
mov
pop
adc
jmp
lock
cmp
cmpsl
or
xor
scas
jb
push
jno
xlat
mov
dec
xchg
inc
jno
add
lea
nopl
subl
push
sbb
xchg
inc
sbb
mov
sahf
out
pop
lcall
ret
sub
xchg
int
sbb
out
cmpsl
imul
cmpsb
cmp
scas
roll
push
and
in
out
xor
dec
sbb
ret
in
ret
jmp
mov
out
adc
or
fldt
mov
sub
cmp
pop
mov
xchg
adc
xorl
cltd
aaa
xor
pop
shlb
test
or
scas
out
xchg
and
inc
lcall
xchg
jmp
sub
cmpsl
sub
mov
xchg
pop
sbb
rol
mov
lds
pop
gs
pop
je
into
movsb
and
ret
push
mov
push
sarb
push
aaa
lret
adc
mov
cmpsl
in
inc
scas
cmpsl
inc
loope
in
insl
sti
fisubrs
jno
push
xlat
aam
mov
mov
xor
in
jns
mov
repnz
or
xchg
mov
dec
aaa
push
data16
imul
or
cmpsb
mov
jmp
insb
jno
mov
push
clc
fiadds
mov
inc
iret
jno
shl
imul
adc
jecxz
dec
push
mov
xorb
fabs
cmpsb
hlt
pusha
mov
hlt
mov
xchg
mov
mov
js
or
imul
mov
pop
popf
mov
insl
jae
lods
sub
xlat
int3
pop
mov
mov
and
cmp
aaa
pusha
inc
inc
dec
popa
xchg
mov
out
mov
xchg
push
inc
xor
inc
add
jbe
and
fdivl
ss
movsb
dec
mov
xchg
repnz
jnp
mov
fdivr
in
enter
sub
or
pushf
in
cmpb
imul
scas
mov
sti
jno
add
hlt
cmp
ss
mov
pop
or
jnp
and
lret
aam
adc
sahf
sbb
and
or
xchg
cmp
inc
fiadds
outsb
or
cmpsb
xchg
mov
sti
pushf
daa
dec
jge
pop
add
sub
testb
jno
mov
and
adc
jbe
pop
pushaw
push
test
popf
mov
inc
mov
pop
mov
popa
pop
sti
rcl
icebp
icebp
rorl
pop
cltd
sbb
cld
daa
sub
mov
mov
jns
push
std
in
or
mov
xchg
nop
cwtl
or
xchg
cmpsb
mov
cld
xchg
outsl
popf
and
xchg
sbb
mov
fcmovne
mov
pop
hlt
ljmp
outsl
xchg
idiv
push
or
ret
rclb
insl
jge
or
mov
call
lods
imul
int3
stc
mov
mov
sub
pop
leave
insb
aad
or
iret
cmp
add
and
cmp
lock
sbb
inc
push
clc
mov
sub
gs
push
jg
call
es
popf
mov
jb
in
dec
sbb
add
popa
add
fstpt
mov
push
mov
or
sub
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
