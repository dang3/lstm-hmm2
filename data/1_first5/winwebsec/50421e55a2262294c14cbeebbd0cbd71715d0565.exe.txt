push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
test
adc
xchg
and
or
roll
dec
loope
enter
test
int
cmp
jbe
push
cmovo
mov
aas
push
sbb
sub
call
popf
mov
cmp
xchg
push
mov
xorb
mov
jnp
xchg
cs
popf
inc
push
xor
divl
ror
in
psllw
push
add
cmc
adc
std
cld
test
js
inc
dec
lret
cmp
mov
into
xchg
add
shll
out
pop
add
movsb
pop
jge
or
lret
fisubl
mov
xchg
out
push
mov
ret
mov
cmpsb
decl
cmpsl
jae
fldl
cltd
or
xchg
push
mov
rorb
cmp
push
pushf
jb
int
ret
out
aaa
sbb
insb
mov
sbb
lods
pop
xchg
mov
or
int
xor
xchg
jbe
addb
xlat
xor
xor
mov
mulb
xlat
xchg
sub
leave
mov
movb
ror
mov
jmp
mov
mov
push
ja
push
or
pop
ret
sub
push
xor
inc
xor
addr16
cmp
ljmp
sub
pop
xchg
xchg
pop
pop
into
mov
addr16
sub
or
mov
mov
lds
mov
aaa
cmp
gs
stc
push
cs
shl
xor
shll
mov
jnp
es
add
mov
pop
out
inc
jns
and
fdivrs
adc
testl
cmp
popa
pop
insb
out
xchg
cmp
inc
add
les
ss
and
test
mov
pop
cwtl
pusha
sub
shrb
addb
or
stos
int3
dec
and
pop
or
nop
pop
ret
out
cs
cmp
mov
xor
sarb
push
and
ss
xchg
inc
mov
jl
fidivrl
loope
inc
sahf
xor
mov
cli
orl
mov
adc
pop
jnp
push
adc
xchg
mov
and
mov
jno
sub
scas
test
push
in
sbb
psubusw
scas
movsl
ja
movsl
lods
pop
les
xor
fmul
push
push
mov
xor
mov
or
fstps
pop
jl
faddl
mov
push
andb
lods
xchg
shlb
shrb
scas
xor
xor
lea
push
mov
je
mov
popa
and
push
mov
inc
les
inc
mov
fsubl
pop
xchg
jbe
adc
push
cmc
test
leave
cmp
pop
ret
lods
ret
push
xchg
push
pusha
mov
jmp
lds
mov
mov
stos
leave
arpl
mov
ss
pop
jge
lcall
enter
aaa
push
push
aas
xchg
push
jns
xchg
cmpsl
jge
nop
add
or
push
lock
cmp
fmull
fmull
repz
rcl
fsub
stc
test
mov
add
aam
addr16
shl
mov
mov
pop
sub
jmp
sarb
add
pop
mov
out
pop
adc
mov
inc
pop
jecxz
sbb
pop
fildl
stc
jb
leave
pop
push
sar
insb
gs
rcrb
cmpsl
rcl
das
xchg
jge
std
mov
mov
mov
fs
lods
mov
jl
ja
inc
aaa
shll
fwait
lahf
xchg
sarb
sbb
pop
loopne
mov
mov
addr16
js
ret
inc
shlb
cmp
shl
cmp
add
lea
pop
les
inc
std
jb
das
inc
jl
call
cmp
mov
ljmp
lock
cmp
cmpsb
push
cmc
je
push
mov
inc
lret
shll
shll
mov
insb
mov
sahf
lock
mov
imul
mov
mov
lods
pusha
fsubr
addb
cmp
imul
stos
xchg
insb
mov
bnd
push
movl
and
pop
sahf
into
in
cltd
repnz
mov
sub
cmpb
into
movsl
mov
and
pop
loopne
jle
imul
cmp
xor
addr16
lret
adc
sahf
sbb
hlt
sub
mov
mov
push
int3
add
xor
popf
xlat
cmpsb
adc
stc
leave
xchg
sbb
push
dec
bound
lret
and
sahf
pop
outsb
popf
and
sti
mov
add
imul
sahf
mov
inc
test
inc
inc
mov
leave
xlat
add
mulb
mov
sub
lock
jge
sbb
repnz
inc
or
cmc
mov
sbbl
imul
push
push
popa
jns
pop
xchg
sbb
je
pop
sbb
mov
ja
gs
xchg
and
xor
stos
adc
adc
push
loopne
xor
push
scas
leave
popf
in
mov
fdivrs
pop
cli
fidivs
insl
test
cwtl
pop
popa
testb
mov
push
jecxz
jmp
lock
fwait
call
sub
es
pop
mov
mov
testb
jmp
outsb
iret
inc
fwait
cmp
push
out
jb
push
xor
sub
outsl
xchg
imul
and
sub
xchg
test
add
xor
sti
sti
xor
inc
sub
lock
std
loop
lock
repz
jmp
mov
or
jl
pop
sbb
fiaddl
mov
push
cmpb
push
sti
rorl
push
inc
fists
inc
push
xor
sub
push
sbb
fwait
sub
cmp
aam
test
enter
fdivl
pop
push
xorb
push
dec
or
mov
cmp
jecxz
dec
inc
out
push
pushf
ljmp
mov
int
adc
cmpsb
int3
xor
mov
pop
and
add
jb
lret
cmp
xor
sub
mov
shll
and
fldt
clc
test
push
test
pop
int3
movsl
idivl
sti
mov
cld
or
add
push
sbb
xchg
xor
mov
sbb
test
int3
bnd
mov
lds
xchg
adc
arpl
stos
xchg
push
inc
jp
inc
dec
mov
xlat
and
jle
sub
xor
js
int
movsl
pop
xchg
mov
sbb
mov
fcomip
ljmp
icebp
cltd
cltd
xchg
add
lahf
push
lods
int3
jg
cmp
test
pop
inc
fbld
iret
mov
xor
outsb
mov
in
mov
fucomip
repz
divl
js
and
pop
adc
hlt
lods
loopne
jb
dec
lahf
mov
pop
adc
adc
mov
cltd
cltd
fsubrs
pop
mov
ds
mov
icebp
xchg
cmp
cli
sbb
dec
jl
mov
ret
cmp
cwtl
fisubrs
popa
cs
ss
push
cmpl
adc
mov
add
and
push
lods
cli
sub
aas
daa
fucomip
xchg
icebp
movsb
sbb
xor
stos
ret
cmp
dec
sahf
mov
xchg
cmp
xorl
fimull
xchg
out
stos
movsl
lds
jp
data16
sub
mov
nop
ds
mov
leave
mov
jmp
xor
or
add
sarl
adc
es
je
popf
dec
jge
clc
dec
stc
in
mov
mov
add
mov
jne
xchg
mov
xchg
mov
std
xchg
pop
fdivrp
sbb
or
push
aam
lret
call
cmp
stos
ljmp
push
and
test
pushf
jg
or
mov
pusha
iretw
inc
pop
xchg
xchg
hlt
jge
inc
cmpsb
jns
scas
xchg
and
loope
xchg
pushf
xchg
mov
add
sbb
add
mov
mov
scas
sub
push
xor
std
les
stc
adcl
xor
push
or
clc
int
sbb
sbb
and
sub
outsb
or
insb
xchg
mov
dec
nopl
fiadds
and
test
jno
dec
adc
fldenv
pop
dec
roll
mov
pop
or
ljmp
into
jnp
or
icebp
push
xchg
jns
cmpsl
xchg
inc
leave
ss
jno
xchg
bound
inc
lock
mov
es
out
cmp
pop
into
ljmp
fisttpl
adc
ja
or
call
add
test
xor
dec
daa
sti
aaa
movb
xchg
mov
decl
jge
inc
pop
sbb
ss
sub
mov
inc
ja
mov
jl
in
mov
jb
test
fstpl
loop
jns
in
add
jmp
aad
dec
mov
jmp
xor
cmpsl
out
dec
xor
sbb
push
leave
mov
nop
loopne
pop
mov
leave
test
cmp
pop
jle
push
and
mov
or
les
or
or
das
movsl
add
sbb
add
imul
ficoml
jp
loope
rclb
subl
sub
lahf
push
mov
jb
xchg
je
jp
out
jecxz
insb
mov
sahf
int
lods
push
aad
loop
rorl
sbb
lret
mov
xchg
roll
xchg
xor
push
out
dec
das
xchg
jnp
out
xchg
gs
stos
inc
insl
adc
mov
fwait
add
or
shlb
xor
push
mov
dec
dec
mov
das
push
jle
cmp
lret
in
inc
adcl
shl
or
nop
pusha
subb
lret
push
aam
mov
and
jb
push
mov
fiaddl
cld
or
mov
cs
cli
push
sub
add
bnd
mov
addr16
repz
jmp
ds
mov
mov
insb
dec
jbe
cltd
movsb
lret
pop
out
pop
xchg
inc
orb
xchg
push
mov
arpl
mov
xchg
inc
in
aam
cmp
mov
cli
mov
xlat
stos
mov
sbb
sub
aam
jns
pop
xor
stc
jb
xchg
mov
call
adc
lea
test
movb
xchg
xchg
ljmp
or
cmpb
jmp
mov
mov
cmp
les
ja
add
add
orl
cmp
or
les
jecxz
mov
push
popf
cmp
test
mov
loope
aam
sub
repz
sbb
addr16
fs
lcall
popa
mov
or
push
out
mov
mov
and
cmp
adc
dec
and
or
call
andl
pushf
sbb
jg
inc
lret
incl
push
cmpsb
and
addr16
cmp
mov
sub
dec
cmpsl
xlat
ds
cmp
es
xor
cmpsl
adc
sbb
pop
ret
mov
or
cwtl
fcomps
rcrb
call
andl
sub
mov
mov
das
add
jle
and
or
sbb
dec
cltd
mov
std
lods
jae
incb
mov
aas
pop
mov
aas
xchg
xlat
adc
adcl
inc
lret
push
lods
leave
mov
add
ret
daa
lock
cmp
mov
nop
jle
mov
out
sahf
mov
sub
add
mov
insl
xchg
pop
mov
loop
jmp
pop
mov
sbb
lea
hlt
push
add
js
sub
fdivrl
jns
cmp
int3
test
and
xlat
aaa
adc
inc
arpl
mov
push
adc
fs
ja
cltd
xor
in
sbb
je
fs
pop
xor
adc
outsl
adcb
stc
dec
in
aas
pushf
nop
inc
pop
add
and
bound
jne
daa
cwtl
cmpsl
stos
int3
jmp
and
inc
sbb
xchg
xor
dec
stos
cmp
xchg
aam
add
test
mov
xor
pop
jl
and
push
xor
or
enter
dec
mov
adc
xor
push
rclb
mov
sbb
pusha
add
xchg
inc
out
dec
mov
pop
xchg
jns
mov
xchg
sbb
fdivrl
out
testl
ret
ds
cwtl
mov
mov
int3
and
push
jns
mov
data16
push
scas
int3
pop
sti
ljmp
test
xor
ret
ja
xchg
add
pop
stc
jg
in
std
into
icebp
xor
jecxz
inc
test
jbe
cli
lea
mov
sub
sub
cmp
dec
sbb
cmp
test
mov
adc
xor
ljmp
cmp
insl
stos
inc
adcb
lret
popa
sub
xchg
imul
negl
addl
stos
subl
mov
les
inc
sub
add
subb
cmp
mov
mov
xchg
push
jbe
addr16
jo
push
and
mov
stos
in
jl
mov
push
mov
jg
ja
jae
pop
lock
push
cmp
xchg
push
inc
inc
popa
and
mov
cmp
repnz
in
or
ljmp
sbb
add
dec
jnp
aaa
xor
pop
cmp
insl
in
clc
sbb
adc
xchg
xabort
fs
xchg
aam
xor
fnstcw
jle
xchg
roll
popa
fcomip
pop
add
hlt
adc
loop
orl
daa
jb
mov
iret
mov
sbb
out
sub
cmpsl
insl
mov
push
xor
mov
or
dec
out
adc
cwtl
pusha
popf
mov
inc
cmp
and
mov
fcomps
sahf
scas
sbb
je
xorw
push
fstpl
stos
lcall
hlt
add
or
inc
and
adc
sub
std
movsl
rcr
inc
sub
js
stc
push
xchg
nop
mov
and
dec
sbb
add
cmpsb
lret
lea
xchg
jmp
push
dec
xor
popf
jecxz
repnz
ja
or
inc
das
push
imul
imul
push
imul
inc
lods
int
jp
adc
cmp
leave
dec
pushw
add
xchg
arpl
fsubrp
mov
pop
hlt
fadds
mov
repnz
xor
rcr
inc
ss
repz
sbb
pop
xchg
push
jg
scas
inc
inc
leave
mov
mov
insb
mov
push
lahf
stc
mov
dec
imul
xor
notl
icebp
mov
sbb
adc
stos
xor
std
fsubr
jno
outsl
mov
inc
xchg
scas
xchg
lea
call
xchg
in
out
jbe
jnp
adc
stos
sbb
pop
dec
add
inc
lahf
clc
jnp
mov
add
xor
fdivr
adc
or
sub
mov
imul
sub
stc
inc
cs
roll
loopne
xchg
loopne
shlb
test
and
sbb
les
repnz
mov
fcom
adc
addr16
cmp
cltd
dec
imulb
cmpsb
xchg
nop
xchg
mov
adc
cmpsl
add
dec
iret
push
xchg
dec
int
xor
mov
sub
push
es
hlt
and
int
mov
push
xchg
adc
pop
jns
icebp
inc
sub
mov
sti
cmpsl
ret
inc
mov
adc
outsb
in
jle
mov
fwait
mov
dec
lds
int3
adc
cmp
imul
stos
add
dec
push
in
notb
lret
outsl
adc
mov
push
lahf
enter
inc
or
call
mov
iret
push
adc
fwait
shll
adc
mov
add
pop
xchg
jecxz
ss
lods
and
adc
cmp
cmpsb
xor
rcr
je
pop
loopne
ds
pop
sbb
notb
mov
es
push
jo
push
pop
xor
pop
fisubrs
in
repnz
js
frstor
mov
jae
mov
test
lcall
cmp
jg
xor
dec
rclb
mov
add
cmp
mov
fs
mov
fucomi
ljmp
insb
jg
lds
test
add
lcall
mov
adc
push
std
cmp
xor
add
popa
inc
ret
in
and
xchg
pop
sub
in
pop
nop
xlat
xchg
sarb
fdivrl
ret
add
ljmp
adc
mov
and
pop
jp
divl
pop
jp
cli
adc
movsb
orb
mov
ja
test
les
scas
orl
les
repnz
push
rcrb
daa
aaa
cmp
idiv
test
movsb
mov
or
call
add
ja
fsubl
sti
dec
pslld
pop
adc
ds
nop
cmp
enter
jl
lods
fsubrs
adc
repz
insl
dec
xchg
fs
movl
scas
out
sub
sarb
jb
lods
push
cltd
cmp
push
ss
cmp
hlt
xchg
imulb
xchg
lea
sub
sbb
and
dec
jp
into
push
xchg
rorl
repnz
inc
ret
mov
enter
jmp
push
sbb
subb
setp
xchg
mov
push
in
test
enter
cld
insb
cmpsl
or
cmp
mov
jp
pop
sub
out
cmp
xchg
push
scas
lret
jne
xor
pop
mov
movsb
jl
sub
or
or
and
lock
pop
test
mov
lods
push
notl
pop
insb
jl
sub
pop
gs
bound
jmp
and
gs
mov
or
leave
sti
pop
pop
or
mov
cmc
data16
adc
mov
push
lret
enterw
roll
inc
mov
cmp
jp
movsl
es
dec
mov
cwtl
ljmp
mov
jg
jmp
je
ret
mov
add
je
pop
mov
jg
push
jmp
movsb
jecxz
xor
push
pop
arpl
fcmove
push
xor
sub
ret
push
repz
movsb
in
insl
push
mov
jbe
push
popf
xchg
cmc
add
stos
mov
shrl
test
xchg
cmp
inc
lahf
sub
xor
setae
lcall
lahf
dec
insb
mov
add
mov
imul
ja
out
xor
jne
sarl
idivb
inc
lds
xor
lds
shlb
xchg
and
push
test
sahf
mov
call
fistl
fldcw
adc
dec
jnp
mov
xor
movsb
xchg
ss
movsl
pop
scas
cltd
cmp
ret
shll
mov
jmp
cltd
xor
sub
ret
icebp
sbb
mov
jnp
cs
xchg
fisubs
icebp
gs
test
xor
jge
jns
jge
fistps
movsb
xor
jmp
icebp
dec
js
push
insl
jae
outsl
pop
ret
hlt
cmp
xor
sahf
test
lods
fucomi
call
mov
add
dec
xor
mov
stos
or
xchg
cmc
and
add
clc
cmp
push
xchg
jl
aaa
test
loop
pop
or
int
mov
push
and
xor
sbb
adc
fcoml
push
test
pop
repz
inc
movsl
idivl
inc
cli
inc
xchg
inc
pop
test
xor
jp
xorl
loope
ljmp
pop
clc
push
xchg
adc
sbbb
push
or
fidivrs
shr
jae
xor
sub
xchg
inc
mov
outsl
jns
int
daa
negl
pop
lods
or
pop
popf
push
loop
ljmp
fdivl
xchg
popl
pop
ror
push
ja
shrb
push
jns
in
testl
xor
xor
jns
dec
dec
cs
xchg
pop
dec
jnp
or
fisttpll
mov
mov
loope
push
lods
ja
push
test
sbb
test
movsb
jno
movsl
std
xchg
or
push
adc
ja,pt
mov
mov
sarl
pop
mov
lcall
cmp
push
clc
rorl
mov
xchg
arpl
arpl
xchg
sub
imul
fcomps
shrb
xchg
test
out
push
and
mov
pop
jb
stos
ljmp
lret
pop
lock
dec
sbb
lods
pop
rol
push
out
call
lods
adc
ljmp
and
fnclex
gs
adc
and
loope,pt
mov
lcall
sbb
adc
jns
inc
push
insl
sti
in
repnz
movsb
pop
adc
sub
fists
fstl
int3
div
in
pop
dec
popf
mov
lret
xor
sub
movsl
jmp
dec
fld
sarb
mov
leave
mov
and
scas
push
lcall
dec
inc
pop
loopne
dec
scas
out
xor
push
jecxz
hlt
xor
cmp
cs
arpl
xor
ljmp
sub
cmpsb
data16
test
dec
or
imul
inc
pop
inc
sub
or
add
mov
and
sahf
jmp
pop
inc
push
jl
stos
add
decb
sbb
xorl
mov
pop
dec
fidivs
push
dec
mov
loop
xor
movsl
or
cwtl
testb
jno
pop
jns
inc
or
mov
jb
das
in
mov
xor
stos
data16
cmc
popf
or
loop
into
or
fstl
add
mov
mov
aas
pop
lock
xchg
sti
adc
and
push
sbb
or
push
xchg
cli
das
add
aam
pushf
add
in
sub
in
lahf
jg
fildll
aas
enter
lock
in
ja
lods
pop
mov
test
mov
and
xchg
orb
lahf
xchg
repz
lret
sbb
fimull
mov
jb
inc
es
in
xor
mov
shll
out
jae
xor
test
jns
cmp
fisttpl
loop
push
dec
jb
inc
cmpl
lods
dec
jne
pop
dec
stos
jmp
xor
mov
mov
lock
sbb
jl
fistps
jecxz
mov
or
cmc
movd
or
pop
xchg
cli
mov
lea
dec
mov
ret
lock
mov
stc
pop
cwtl
xor
in
sbbb
and
pop
or
mov
scas
mov
adc
dec
arpl
sub
xor
dec
sarl
ret
push
aad
add
inc
pop
aas
sbb
lea
je
mov
mov
addl
lahf
xor
sti
lock
jbe
and
andb
jb
cs
out
test
inc
in
jle
inc
lods
sbb
jecxz
enter
mov
orl
sub
je
cmpsl
adc
xchg
dec
mov
mov
int
inc
ds
cmp
outsl
subb
mov
mov
movaps
jno
add
inc
test
cmp
rcll
or
cmp
ret
push
jg
loopne,pn
subb
cmpsb
adc
add
cmp
dec
and
in
sub
mov
inc
cmpsl
leave
push
jg
jmp
push
daa
pop
ret
pushf
sti
and
inc
js
roll
imull
sbb
pushf
dec
outsl
addr16
mov
cld
push
push
inc
jmp
mov
mov
fs
or
mov
orb
ds
or
lcall
inc
shr
sub
stos
lahf
data16
and
adcl
mov
test
pop
mov
pop
mov
in
mov
lea
lcall
in
push
loop
cmp
test
jns
and
jne
push
cwtl
cli
xchg
inc
adc
mov
sub
test
loope
lock
push
and
pop
out
jecxz
ja
je
inc
xchg
iret
scas
jne
sbb
call
out
adc
jge
jns
sbb
xchg
ficoml
pusha
xor
sub
adc
xor
sub
lea
sub
xchg
jg
filds
jns
mov
sub
add
mov
fwait
push
pusha
push
sub
xchg
mov
mov
lods
inc
push
mov
jg
rcll
xor
jp
inc
jbe
mov
in
cltd
fsub
pop
add
mov
fisubrs
adc
dec
inc
xchg
add
push
xor
push
inc
mov
in
push
xchg
push
pop
loopne
cmp
sbb
jge
les
ret
rolb
adc
xorb
push
pop
rclb
add
inc
repnz
lret
test
enter
lds
pushf
xlat
lret
gs
scas
rorl
pop
int3
dec
pop
in
aad
push
adc
cmp
ljmp
enter
in
jge
sub
mov
jle
cmp
pop
pop
shrl
imull
lret
push
mov
into
lret
loop
leave
xchg
gs
and
bound
pop
and
popa
test
dec
outsl
sbb
or
ds
cmp
mov
cmp
orb
or
or
and
pop
cmpb
int
adc
shlb
xor
mov
fnsave
inc
ret
int3
sarb
xlat
adc
sub
xor
dec
stos
cli
cmpl
movsl
cmp
movsl
jp
mov
jmp
xor
sbb
mov
outsl
jmp
mov
jns
nop
sub
jne
scas
aam
xor
xchg
push
ds
iret
mov
cmp
movsl
fstpl
xchg
ret
push
adc
mov
mov
push
inc
or
ds
test
lods
push
out
cmp
aam
in
jmp
adc
mov
jo
jmp
test
push
adc
add
movsb
jecxz
sbb
aad
mov
lret
sbb
lea
or
cs
divl
pop
ljmp
insl
adc
cmpsl
ds
js
jnp
jl
sbb
mov
fildl
or
or
xchg
fcmovnu
lahf
xor
push
aad
sub
inc
jp
cmp
icebp
cltd
fs
stos
pusha
insl
ja
push
mov
lock
imul
or
mov
jmp
xchg
xor
xor
enter
in
in
mov
ja
test
loop
xor
popl
aam
xchg
pushf
cmp
sbb
dec
fistl
cld
lea
dec
mov
sub
test
lret
sub
scas
sub
adc
mov
mov
inc
mov
je
std
dec
hlt
pop
cmp
insb
imul
mov
js
data16
jg
and
out
or
inc
push
sarb
cs
loop
lds
add
pusha
out
mov
xor
sub
and
mov
in
sbb
fchs
xchg
loopne
adc
jle
push
aas
xor
shlb
lcall
imul
push
loop
into
cmp
or
in
movsl
clc
test
sbb
jl
test
and
push
adc
and
push
ret
scas
leave
test
out
inc
add
bound
xor
mov
sbb
mov
sbb
xor
cltd
push
mov
fsubrl
lahf
lret
push
xor
je
arpl
fcoms
fisubrl
repz
mov
pop
imul
mov
push
mov
ds
rorb
add
icebp
mov
hlt
jno
jp
lcall
jns
loope
sub
push
cs
pop
xorb
lea
aaa
xchg
adcb
ret
xchg
in
jl
shlb
sahf
shlb
cmpsl
jmp
orb
insl
in
scas
cltd
scas
add
pushf
test
jge
push
push
scas
add
fldcw
out
inc
sti
jb
sbb
inc
push
push
neg
push
insb
mov
insl
mov
inc
and
pop
xchg
jo
push
es
add
mov
aas
xchg
cmpsl
xchg
in
fldl
mov
in
incb
lds
and
and
mov
add
filds
jae
jg
or
or
jno
lds
cmp
push
fwait
adc
lcall
gs
mov
loop
movl
and
sub
das
jb
lcall
in
push
push
dec
insl
and
mov
inc
cwtl
sub
pushf
shl
loop
dec
xor
pop
jmp
dec
mov
mov
fildl
push
xor
mov
mov
popf
lds
push
adc
mov
clc
cmpsl
mov
cmp
pop
dec
loop
movsb
aad
xchg
jl
push
arpl
and
and
jnp
mov
sarl
imul
arpl
daa
sub
shr
ss
mov
adc
xchg
adc
sub
bound
add
sbb
inc
leave
aaa
fiaddl
ja
iret
sbb
mov
pop
lret
inc
inc
push
jecxz
out
push
jl
xchg
ficompl
sub
push
xchg
push
add
pushf
stos
mov
mov
roll
mov
les
dec
sbb
pop
or
sbb
adc
fldenv
repz
pop
adc
ret
pushf
stos
fmuls
js
movsl
rorb
cmp
jo
xchg
jecxz
out
aaa
xor
add
adc
lret
jns
in
mov
mov
lcall
dec
inc
in
mov
cwtl
adc
andb
scas
sbb
sub
dec
orb
push
mov
sub
jo
xchg
jno
or
out
add
or
ud2
cmpsl
outsb
aam
mov
and
enter
jecxz
xchg
ljmp
data16
jmp
push
mov
call
insl
out
stos
popf
test
jnp
xor
or
mov
adc
in
ds
jmp
pop
scas
js
lret
xor
cmpsb
out
lcall
mov
outsb
rcrl
call
adc
xchg
repz
add
std
imul
mov
add
stos
add
lock
xchg
push
jmp
mov
inc
into
push
mov
xor
cmp
push
dec
xorb
rcrl
cmpb
xlat
ret
pop
lods
ljmp
sub
cmp
mov
cmp
test
addr16
int3
push
dec
inc
rolb
pop
push
and
lods
into
adc
sbb
xor
orb
in
mov
pusha
push
inc
cmp
clc
mulb
jne
sbb
sarb
and
push
shrl
idivb
and
jecxz
sub
into
fbld
xchg
outsb
inc
inc
popf
inc
sbb
push
lret
xor
cmp
sub
mov
push
stc
insl
adc
mov
push
cs
xchg
icebp
or
int
in
es
out
mov
sub
pop
je
test
into
data16
sbb
cli
mov
nop
pop
mov
dec
inc
cmp
call
jmp
xor
fcomp
loope
mov
rcr
xorl
sub
push
sbb
loope
pop
loop
jns
jnp
and
and
push
movsl
aam
xchg
pop
cmpsl
lock
testl
jmp
bound
push
test
and
in
scas
sarb
pop
inc
mov
scas
push
lcall
lahf
in
and
xchg
pushf
pop
andl
repz
mov
add
icebp
xchg
loope
pusha
push
ss
lds
icebp
cmp
mov
cmpsl
cld
sub
ret
jne
xchg
fst
pop
stos
cld
in
cmp
push
imul
sbb
sbb
or
xchg
scas
sbb
adc
lret
pop
sbb
in
cs
neg
sbb
inc
lret
stos
mov
shr
stc
dec
mov
rolb
pop
mov
jbe
js
out
pop
ljmp
ficoml
adc
mov
xchg
push
call
jno
xchg
imul
ret
dec
cmp
mov
sbbl
push
cltd
shlb
in
and
sbb
jbe
stos
sbb
in
cmc
add
pop
jno
cmp
mov
add
xchg
jne
xor
mov
xchg
push
inc
mov
fistps
ds
cld
out
cli
cmp
push
addb
imulb
clc
pop
loop
sbb
icebp
sub
outsl
inc
or
mov
hlt
jp
push
push
jge
insl
not
xchg
jno
mov
pop
xchg
out
or
pop
cmc
pop
mov
push
jle
sahf
std
call
push
sbb
outsl
add
lea
and
push
xchg
add
das
inc
sbb
mov
jno
cmp
les
jo
mov
scas
test
pop
mov
mov
add
xor
fadd
out
cwtl
ret
in
ljmp
xchg
mov
cld
pop
push
cmc
pop
sbb
in
mov
je
fists
fsubrl
xor
pop
cmpsl
subl
popa
and
and
xchg
pop
pop
mov
lods
mov
imul
dec
xor
add
movsl
push
leave
cmpxchg
loop
dec
pop
mov
mov
push
lds
ja
in
sarl
inc
xor
rclb
xchg
add
jp
jecxz
dec
dec
in
xor
rclb
pop
add
add
lret
inc
int
inc
cmpsl
or
nop
jnp
push
pop
mov
outsl
pop
loop
jae
out
in
in
popa
outsb
fsubs
arpl
dec
shll
imul
xchg
test
push
mov
repnz
icebp
or
inc
lret
repz
cmp
stos
xchg
cmp
push
push
bound
out
insb
mov
hlt
pop
jns
dec
lea
lds
push
lds
jne
fucomi
stc
shlb
xlat
xchg
inc
je
xchg
ljmp
jbe
push
int
sbb
push
mov
cmpsl
loop
das
lret
push
fwait
roll
jb
js
xorl
and
and
int3
pop
ss
push
mul
popf
cli
outsb
lods
scas
mov
xchg
dec
ficomps
cmp
scas
pop
mov
nop
out
push
ret
adc
mov
shr
mov
adcl
int
lret
mov
imul
xlat
iret
inc
mov
cwtl
mov
aam
pop
ss
inc
jle
pop
inc
and
enter
out
pop
ret
mov
push
push
and
repz
push
add
or
dec
mov
divl
adc
inc
mov
dec
mov
mov
adc
inc
dec
inc
jb
aam
mov
xchg
lods
aas
inc
add
mov
out
mov
push
inc
cmpsl
outsb
mov
pusha
les
sahf
shrl
lret
and
add
nop
cmpb
jmp
sub
mov
push
mov
js
cmp
add
mov
lret
and
inc
cs
pop
xor
adc
cmp
ret
fildl
popf
subb
idivl
sbb
pop
adc
cmp
mov
pop
sbb
lods
adc
xchg
add
ret
push
sub
push
add
dec
push
jl
push
push
push
ds
ret
js
push
call
test
mov
aas
je
leave
cltd
notb
adc
rorl
pop
cld
add
xor
repz
psubusw
addl
les
pushf
repnz
shrl
and
adc
fcmovne
mov
mov
fistpll
xor
xlat
cmp
dec
mov
gs
dec
mov
lods
mov
dec
inc
inc
xchg
add
test
cmp
adc
mov
jb
fiadds
push
xchg
add
insb
gs
faddp
or
scas
mov
sbb
out
add
xchg
mov
xlat
cmc
lds
int3
stos
subb
jl
push
xchg
movsb
sarl
add
mov
pop
mov
test
xchg
pushf
orl
lock
out
cmp
xor
xor
frstor
pop
pop
test
stos
or
loope
les
mov
xor
mov
loop
xchg
pop
pop
sub
mov
lret
call
mov
mov
mov
les
insb
fnstenv
push
dec
imul
add
loop
sarb
jl
mov
mov
aas
dec
addr16
pop
insl
sar
stos
sti
sub
cltd
xchg
ret
jmp
inc
sub
or
imul
fsubrs
lahf
sub
xor
sbb
jae
sbb
and
inc
or
adc
dec
lret
loop
daa
fwait
jb
jo
add
push
pop
sub
cwtl
dec
je
lret
jb
xchg
pusha
arpl
xchg
mov
lods
aad
hlt
mov
add
dec
xchg
xor
xor
cwtl
adc
ja
dec
jns
cmp
push
inc
add
xchg
jo
test
sub
sub
dec
sti
push
insb
hlt
out
lret
fbld
loope
fsubrs
push
roll
cmpsl
jle
les
add
pop
inc
cwtl
xchg
stos
or
sbb
dec
int3
pop
and
cmp
out
cli
ja
leave
push
insl
cmpb
jmp
fs
adc
dec
sbb
adc
pop
jns
repnz
pushf
lds
sbb
adc
pushf
mov
cmpsb
lahf
insb
jmp
call
lods
cwtl
push
aam
pop
mov
lods
ret
cmp
scas
ljmp
sbb
sbb
or
outsl
int
daa
jb
mov
cmc
push
into
push
pop
xor
movups
sub
in
mov
mov
sahf
sbb
aad
sub
dec
push
fmull
add
mov
aas
repnz
xchg
jb
outsb
dec
mov
and
mov
inc
cmp
in
sub
iret
fdiv
mov
iret
mov
xor
push
sbb
pop
cli
sti
adc
js
mov
shll
mov
pop
sub
sub
int
xchg
or
xor
clc
inc
call
mov
add
jl
adc
push
pop
cltd
cli
cld
xor
xor
push
cmp
lcall
pop
add
scas
imul
dec
jnp
outsl
jmp
sub
adc
stos
int3
test
fidivrl
inc
andl
mov
insl
cmp
or
int3
cmpb
xchg
imul
test
dec
xor
cmc
loop
mov
push
fnsave
scas
rorl
shl
insb
out
movl
outsb
push
adc
xchg
mov
jp
imul
push
stc
mov
push
mov
xor
imul
push
and
dec
fmuls
xlat
mov
sbb
ret
sub
push
push
mov
mov
jl
adc
sub
call
call
outsl
movsl
cmp
nop
std
mov
out
fisubl
mov
cli
jae
mov
iret
ret
inc
imul
pop
test
fstl
cmp
mov
jae
pop
xchg
insb
jp
adc
mov
fsubs
in
cmp
mov
aas
sbb
inc
lahf
movsb
dec
arpl
aam
sti
cs
push
clc
xchg
sbb
subb
jno
dec
pushf
loope
ret
dec
pop
add
lods
mov
jbe
lcall
mov
cwtl
in
pushf
pop
aas
lock
push
push
adc
lret
inc
push
nop
pop
int3
stc
push
mov
push
lret
sbbl
test
iret
dec
mov
dec
outsl
leave
insl
dec
lds
outsl
jmp
add
xlat
mov
xchg
xor
cmp
mov
xchg
jle
daa
sbb
push
outsb
pop
sbb
sbb
call
inc
ss
jmp
std
clc
out
loop
addb
shll
sub
adc
inc
int
push
push
adc
lret
jl
cmp
adc
fwait
cltd
pop
fnstcw
das
jg
jo
xlat
ljmp
xchg
mov
cld
xor
mov
aas
loop
lock
rorb
sbb
mov
push
mov
lret
mov
lock
scas
insb
stos
sahf
test
jo
xchg
xor
jl
dec
fistl
neg
or
sbbb
add
dec
or
xchg
gs
or
leave
rorl
sbb
dec
cmp
xor
js
fmull
cwtl
jle
imul
lret
nop
push
fbld
pop
adc
mov
leave
lret
je
lret
ret
cmp
loop
mov
imul
repnz
mov
jmp
jno
xchg
mov
xchg
sbb
mov
cmc
sbb
push
pop
jp
stos
push
pop
adc
lds
dec
int3
or
and
lret
add
push
sbb
push
js
stos
mov
outsb
inc
add
lret
outsb
int
movsl
mov
push
rorl
add
push
push
lods
mov
push
ja
add
sub
test
fidivrs
arpl
xor
aas
jo
cmp
inc
int
arpl
pop
pop
or
xchg
into
ljmp
adc
outsl
icebp
inc
cmp
cmpsl
and
mov
inc
pushf
xor
xlat
cmpsb
gs
jo
xchg
out
imul
sub
push
dec
bound
ljmp
pop
jbe
iret
loop
jbe
movl
movl
mov
loopne
cmp
sbb
fs
fidivs
mov
and
or
fimuls
loope
push
sub
sbb
aam
cwtl
lret
jns
inc
inc
cmp
lret
scas
mov
loop
push
push
or
jmp
inc
iret
xchg
das
outsb
mov
inc
adc
jo
outsb
aaa
lret
fisttpll
sahf
add
sub
subb
loopne
popa
cmp
push
pusha
rcrl
aaa
add
sub
lods
lcall
enter
enter
add
mov
sub
repz
push
pop
mov
jbe
mov
mov
and
mov
sub
and
in
repnz
xorb
mov
insl
pop
faddl
mov
pop
out
ret
jp
jge
xchg
or
cmp
pop
daa
and
mov
enter
cmp
push
adc
push
lret
sbb
scas
pextrw
dec
sub
fstl
lock
mov
mov
loope
popf
iret
adc
clc
andb
iret
dec
leave
arpl
sahf
or
movsb
or
ja
aaa
imul
repnz
out
aaa
in
daa
dec
mov
imul
or
in
pop
decb
add
sbb
test
scas
in
xor
xor
mov
jnp
daa
xchg
pop
mov
mov
cmp
mov
je
adc
jne
sarb
das
inc
movsl
and
aad
xchg
mov
iret
fs
xor
inc
in
dec
scas
pop
ret
jecxz
mov
jnp
mov
icebp
fldt
xor
outsl
roll
lahf
lahf
dec
je
jae
leave
scas
or
mov
movsb
adcb
inc
sub
dec
inc
or
adc
sub
pushf
mov
push
mov
mov
pop
ja
pop
xchg
fmuls
pop
adc
data16
inc
roll
shll
sub
mov
or
add
movsl
push
loopne
or
bound
cli
jle
cmc
sub
lahf
jb
fsts
inc
push
add
mov
sahf
cltd
pusha
ds
popf
jl
out
stos
and
inc
mov
dec
mov
ror
out
jecxz
jle
sbb
ret
insb
mov
cmp
leave
imul
pusha
cs
cli
mov
xchg
test
ljmp
pop
and
push
xor
hlt
pop
fsub
test
ss
jl
dec
pop
daa
lds
adc
xchg
shlb
es
or
rcr
pusha
aaa
aam
jle,pn
cltd
or
andb
sub
test
xchg
dec
outsb
jmp
gs
jecxz
cmpsb
mov
jl
xor
sti
out
pop
jmp
dec
xchg
je
pusha
pusha
sbb
jns
or
scas
popf
aad
call
jne
or
test
mov
ja
popa
cwtl
jmp
push
inc
xchg
into
subl
inc
jno
xor
jbe
das
stos
add
mov
xor
jae
push
and
cmp
or
dec
scas
cmp
mov
adc
adc
in
loope
pop
stos
or
test
pusha
cltd
mov
cmpsb
dec
outsl
cld
jge
andl
int
hlt
stc
and
insl
pop
ds
or
add
in
and
out
jg
jl
pop
out
pop
xchg
push
xlat
aas
ja
mov
dec
push
shll
pop
mov
cmp
ja
nop
pop
xchg
sub
ljmp
cmpsb
stos
sti
dec
xchg
or
xchg
mov
push
mov
insl
mov
cmp
ret
cmp
push
insl
fs
mov
xchg
dec
jl
push
xchg
jnp
mov
jmp
sbbb
inc
test
ret
adc
clc
mov
and
jo
push
jecxz
sahf
sub
or
add
jmp
hlt
and
fimull
popa
pop
sub
js
and
xor
cmpsl
movsw
cmpsl
ret
add
xchg
lods
push
movsl
lods
popf
jge
mov
xor
adc
cltd
xchg
lods
cmp
push
rolb
jg
push
mov
fidivl
mov
inc
adc
pop
mov
pusha
insl
mov
aas
add
dec
outsb
sbb
jmp
out
pop
into
push
in
repnz
ficoms
adc
clc
inc
xchg
mov
in
movb
inc
mov
jb
lds
clc
sbb
mov
pop
repnz
add
add
inc
adc
daa
jmp
aad
scas
into
fcomi
or
jecxz
mov
add
and
stos
xchg
push
xor
pop
and
scas
jmp
inc
mov
mov
jo
ds
call
sub
test
cmp
pop
test
aas
ficomps
js
test
leave
ss
jmp
mov
mov
jns
sub
jecxz
jo
pop
adc
or
mov
sbb
sub
and
mov
stc
outsb
mov
xor
and
daa
jo
mov
out
xor
dec
mov
cld
and
in
mov
pop
fidivl
jecxz
ficoms
imul
cltd
int
add
sub
les
pop
sbb
rcrb
pop
cmpsb
mov
mov
jmp
mov
mov
inc
mov
out
add
icebp
enter
add
hlt
and
in
lock
mov
mov
fnstcw
frstor
fcmovnu
or
into
jae
jecxz
cs
push
testl
out
shlb
popa
addr16
popf
lret
xchg
jmp
jns
push
xchg
or
dec
jb
fidivs
mov
cmp
fwait
lock
pop
jns
std
addr16
xchg
ret
aaa
out
push
dec
pop
ss
pop
out
fsubl
call
or
ficompl
rorl
clc
fwait
and
push
sub
das
hlt
mov
sbb
cmp
sbb
loopne
outsl
imul
or
xchg
fisubs
sub
push
cltd
and
xchg
lahf
push
mov
sub
clc
scas
or
repnz
mov
add
je
mov
imul
mov
push
mov
adc
movsb
mov
push
in
nop
aas
repz
dec
xor
sub
loope
adc
les
pop
jne
mov
jb
into
add
xlat
mov
je
nop
mov
leave
insb
adc
es
mov
push
push
jecxz
lock
outsb
add
mov
sbb
push
add
ret
inc
mov
fcmovb
dec
inc
out
add
jnp
sbb
aaa
xchg
test
addl
mov
in
and
imul
ret
xchg
lea
clc
pop
mov
int3
pop
and
pop
or
fs
shl
xchg
inc
test
sbb
inc
xor
sbb
outsl
insb
cmp
xchg
push
shr
and
ror
ret
ret
pop
test
xchg
clc
stos
xchg
jb
push
push
mov
jae
scas
xchg
sub
in
sub
nop
xchg
int3
in
movsl
xchg
int3
jo
fcomps
xchg
das
dec
leave
mov
add
dec
fcomi
adc
bound
jmp
shl
sbb
out
and
inc
test
dec
dec
jecxz
xlat
mov
shlb
xlat
mov
rol
bound
add
mov
jmp
mov
jp
ficomps
lahf
jb
pop
cli
mov
add
dec
adc
push
cltd
cmp
push
jle
and
sub
out
mov
faddl
and
jns
sub
dec
jns
mov
cmovs
stc
dec
popa
fsubl
xorl
sub
dec
jnp
lods
sbb
push
lcall
dec
sbb
imul
jmp
lods
fs
dec
inc
arpl
push
popf
imul
call
inc
cmp
gs
rorl
imul
rcrb
adc
pop
push
fwait
mov
mov
sbb
cmp
das
fsubl
jns
pop
push
sbb
test
ss
mov
out
fstl
imul
cltd
xchg
movsl
not
stc
lods
dec
aaa
lret
xchg
mov
adc
sub
mov
mov
and
out
mov
sti
jo
mov
stos
cmp
out
pop
sarl
mov
sub
sbb
cmp
cli
dec
xor
daa
adc
in
push
bound
loop
out
xchg
jmp
in
fcomp
add
cmp
cmc
fs
mov
repnz
loope
lret
jb
push
scas
mov
and
nop
aas
jle
push
adcb
sbb
sub
out
jbe
mov
sar
ja
sbb
push
pop
in
push
add
in
iret
and
pop
test
into
mov
mov
out
rcll
das
xchg
xchg
cltd
ljmp
pop
push
inc
int
repz
ds
jae
ds
insb
push
xchg
popf
loopne
into
scas
xchg
push
or
jg
enter
loop
adc
sub
das
jecxz
inc
movb
fistpl
jl
ret
insb
inc
fucomip
shll
and
bound
jecxz
cmp
movsl
inc
test
jae
cs
pusha
fmulp
mov
pop
out
mov
xchg
mov
je
fstpl
lock
and
inc
add
fs
pop
es
or
jb
in
movsl
sarb
std
sarb
and
pop
push
and
aaa
mov
xchg
repz
enter
loopne
aaa
xchg
xchg
add
inc
adc
mov
mov
int
xchg
add
or
cpuid
mov
fxch
jo
stos
repz
mov
xchg
rcr
sar
sbb
push
loope
loop
push
scas
stc
lret
sub
jb
jne
leave
xlat
lds
and
xor
add
cltd
and
cmpsl
movsb
cmp
movsl
mov
in
inc
dec
or
ss
jl
dec
js
hlt
xchg
and
arpl
xchg
popf
std
xor
mov
and
lret
insb
xchg
dec
out
adc
mov
and
in
ds
mov
xor
cmp
test
inc
jmp
xchg
mov
test
mov
cmp
or
jno
or
les
xlat
fcompl
xorb
sub
xchg
xor
les
and
shrl
mov
dec
js
add
sbb
data16
mov
pushf
dec
xchg
jecxz
push
adcb
dec
add
int
fsubl
nop
mulb
lods
xor
fs
jle
dec
aad
push
sti
add
add
repnz
sbb
lods
arpl
xor
lods
mov
push
scas
dec
aam
mov
outsb
add
dec
pop
pop
xor
mov
mov
xor
in
cmp
inc
mov
add
leave
dec
dec
test
dec
sub
or
mov
push
sub
in
in
mov
jl
or
inc
ret
push
or
orb
mov
insb
inc
inc
dec
dec
outsb
dec
push
testl
mov
mov
push
or
add
fsub
push
adc
and
push
and
insb
mov
test
hlt
out
outsl
or
sbb
fwait
pop
jl
mov
jno
movsl
shll
inc
pop
mov
stos
mov
or
or
xor
sub
xor
pop
jno
les
cld
lods
push
mov
jecxz
mov
xor
int
mov
jae
jae
mov
mov
out
lds
inc
jb
mov
mov
push
adc
jle
jp
jbe
jl
frstor
cltd
in
ficompl
push
jg
adc
leave
pop
aas
aaa
ss
leave
cmpsb
pushaw
popf
call
mov
pop
inc
lret
cwtl
lods
jmp
sbb
adc
inc
push
push
mov
cmpsl
inc
mov
repz
in
mov
push
sub
mov
int3
jle
ds
adc
lret
pop
mov
push
mov
outsb
loopne
outsb
mov
outsb
mov
ret
pop
cwtl
dec
into
scas
pop
lret
inc
das
leave
push
mov
shrl
xchg
in
push
and
cmp
cmp
jge
push
fwait
xor
movsb
int3
add
dec
jae
mov
shrb
sub
dec
inc
subl
and
push
dec
rcrl
and
mov
fmulp
pusha
mov
xor
inc
dec
testb
pushf
xor
lret
push
dec
xchg
les
mov
rol
jo
cwtl
mov
ss
fisubl
push
out
stos
sbbl
mov
andb
lret
jne
add
ret
and
dec
sub
dec
xchg
icebp
sbb
mov
push
jae
sbb
mov
dec
lret
fs
dec
aam
jp
inc
test
mov
cmp
jmp
pop
xchg
js
js
rcrb
adc
sub
mov
outsl
inc
dec
lret
cmpsl
into
pop
inc
cmpsb
pop
sbb
mov
adc
jge
add
mov
imul
jo
andl
push
xor
xor
inc
push
jmp
addl
cmp
add
inc
push
mov
and
push
outsl
loope
std
imulb
ret
data16
inc
dec
xchg
push
ja
xor
jns
lcall
filds
shl
sahf
arpl
and
push
insl
lahf
shrb
pop
add
nop
ficompl
nop
stos
jmp
add
cli
xchg
sub
negl
jno
lods
mov
ss
jmp
or
dec
xor
dec
cmp
mov
inc
inc
and
lret
sbb
jecxz
adc
test
add
push
stc
mov
imul
scas
shlb
adc
inc
mov
push
ret
mov
sarb
dec
jl
xchg
fwait
mov
cmp
out
jnp
lret
ja
adc
jecxz
xchg
cmc
jmp
fisttps
popf
and
repnz
fwait
ja
sbb
mov
mov
lcall
xor
pop
jp
int3
mov
dec
jnp
sbb
inc
gs
fldt
or
int
dec
cmp
xchg
mov
push
jmp
or
pop
dec
cmp
push
jnp
sub
add
mov
mov
dec
je
xchg
and
ja
enter
filds
push
push
mov
cli
pop
daa
mov
add
xchg
and
fistpl
xor
movsl
dec
cmpl
icebp
hlt
movsl
stos
imul
outsb
cmpb
sahf
fidivl
jno
mov
add
scas
sub
rol
in
or
push
mov
jmp
ljmp
jns
dec
pusha
lcall
pusha
push
push
in
stos
inc
jmp
lods
adc
jle
fs
out
loopne
fstp
lahf
lahf
jecxz
fimuls
negl
sbb
add
into
lock
dec
popf
mov
test
cmc
xor
decl
lahf
xchg
jmp
push
cmp
pusha
ret
inc
mov
rcr
mov
gs
in
nop
int3
mov
rcr
cmp
aas
and
fsubrs
xor
pop
or
cmpb
pmovmskb
js
adc
mov
jns
stc
scas
jg
mov
addb
inc
sub
sbbb
pop
push
imul
movsl
cld
out
push
pop
into
sahf
decb
push
cld
inc
testl
leave
shrb
xor
ljmp
cmpb
mov
es
adc
inc
sbb
dec
push
xor
pop
sbb
movl
dec
and
push
xchg
mov
lret
mov
lods
fimuls
or
das
xchg
icebp
std
mov
adc
mov
mov
daa
cmp
inc
arpl
cwtl
dec
push
lcall
out
push
pop
dec
pop
ret
sahf
mov
aas
xchg
in
sub
mov
mov
pop
pop
dec
sub
lea
jmp
out
dec
or
or
mov
pop
push
mov
fs
adcl
xchg
jae
xchg
sub
sbb
cld
sbb
jo
adc
mov
adc
movsb
xchg
fdivs
pop
mov
test
addr16
sbb
jl
dec
sbb
jne
jne
mov
dec
pop
shll
aam
adc
call
popa
cmp
out
addr16
add
clc
xchg
out
sbb
fisubl
pop
mov
rorb
rcrl
push
add
xor
insl
xchg
pop
or
inc
inc
sub
dec
jae
jp
sub
jnp
mov
stos
push
add
jge
mov
jb
xor
adc
es
or
movsb
aaa
aam
xchg
sbb
xor
inc
jp
stc
aas
add
dec
sub
pusha
imul
lods
push
lret
rcl
mov
sbb
cmp
pop
sbb
in
inc
js
hlt
xchg
sbb
adc
mov
cmp
decl
sbb
roll
loope
adc
jnp
shlb
insb
adc
out
lea
pop
sbb
rorb
clc
int3
sbb
outsb
cmpsl
or
push
xor
nop
popf
inc
pop
pop
pop
cmp
xor
adc
xor
daa
xor
icebp
mov
fcom
add
repnz
xor
jns
push
dec
push
cmp
push
xchg
adc
test
cli
xchg
das
stos
jl
jno
nop
popa
cmpl
xor
jl
jae
push
jo
test
xor
dec
mov
sub
xlat
lods
adc
mov
xor
jo
add
pop
aam
addr16
pop
dec
mov
ret
jno
outsb
outsb
add
mov
mov
aad
sahf
daa
inc
cmp
es
mov
mov
pop
adc
and
adc
les
xor
xor
xor
xor
or
xchg
flds
cmpsl
lods
jmp
loop
repnz
imul
mov
cs
xchg
adc
mov
push
scas
aas
jne
scas
nop
add
pop
or
mov
std
xchg
fsubs
sbb
lds
daa
jno
push
inc
aas
pop
lcall
push
dec
out
inc
mov
shll
or
hlt
mov
jmp
cs
sub
leave
mov
repnz
int3
and
scas
out
sbb
in
or
aas
popa
in
pop
test
and
aaa
leave
xor
mov
jmp
sbb
mov
ss
and
dec
hlt
call
insl
add
cmp
add
mov
dec
aaa
iret
jb
ljmp
cmp
xor
sbb
xor
sbb
inc
outsb
in
les
loopne
pushf
lock
mov
sbb
lea
fidivs
mov
test
les
cmpb
inc
xor
pop
cmpsb
mov
dec
lods
popa
sbb
cvtps2pd
fsubs
push
adc
push
mov
pop
lcall
lret
xor
dec
test
lret
push
dec
xor
dec
xlat
repz
xlat
jp
data16
mov
dec
fildll
hlt
push
mov
xchg
js
popa
jp
add
or
jecxz
xchg
sbb
or
insb
test
inc
inc
inc
fdivrs
icebp
hlt
test
push
add
lods
jl
scas
test
add
xor
outsl
adc
std
clc
icebp
lock
fbld
cmp
fildl
mov
imul
and
mov
cwtl
scas
cmp
mov
ret
aaa
mov
or
push
mov
adc
int
mov
mov
xor
inc
push
fcomi
cltd
mov
outsl
cmc
ja
jl
pop
sbb
clc
adcl
mov
or
out
and
fimull
cmp
xchg
inc
lock
test
jl
xlat
dec
mov
jb
lret
in
jns
cmp
inc
in
fs
cwtl
pop
mov
mov
sbb
or
inc
pop
or
mov
mov
cmp
popf
mov
std
ljmp
adcb
movsl
xor
jb
push
mov
fprem
jnp
test
hlt
and
pop
aas
or
jnp
mov
repz
jno
movsb
adc
lret
test
stos
dec
jl
sarl
in
adc
mov
inc
mov
data16
repnz
scas
mov
loopne
pushf
dec
imul
dec
hlt
and
dec
lods
push
push
flds
clc
sbb
dec
fadds
xchg
test
scas
sbb
cli
nop
push
jge
stos
nop
nop
add
fs
mov
aam
in
xchg
daa
fists
repz
dec
sti
inc
icebp
addb
ss
pop
jns
dec
pop
mov
mov
aas
jo
lods
ret
out
mov
pop
xchg
js
mov
pop
cli
scas
fwait
pushf
stos
and
ja
push
mov
fisubl
arpl
mov
fs
idivb
xor
mov
xor
shl
adc
xor
in
inc
push
into
jmp
rcll
lret
jb
inc
lea
in
mov
sub
les
add
lods
inc
test
testb
cmpsl
out
or
lds
push
sub
fcmovb
xchg
xor
shll
sti
fs
pop
push
xchg
pop
inc
insb
adc
lods
sub
clc
into
in
pop
sub
mov
inc
cs
in
xchg
or
push
mov
pop
aam
sub
mov
leave
push
mov
adc
std
mov
enter
jp
jecxz
cltd
and
push
mov
mov
xor
std
and
cmp
ljmp
jge
pop
bound
or
mov
xchg
mov
inc
imul
adc
xlat
sbb
lock
popf
mov
fmull
pop
loope
test
fcomps
dec
and
xchg
fwait
ss
push
aad
jle
and
push
fstl
push
jne
repz
mov
xor
xor
xorb
aas
inc
arpl
pop
or
movl
pop
leave
inc
cmp
nop
or
pop
inc
jnp
adc
jno
fldenv
sub
nop
lcall
ss
sbb
ljmp
aam
lret
into
xlat
xchg
scas
mov
out
fmuls
jecxz
or
xor
jge
dec
adc
clc
inc
inc
xchg
std
jle
push
dec
mov
aaa
mov
xor
addl
sub
lret
aas
adc
cmp
repnz
imul
pop
stc
cmp
adc
sbb
dec
mov
xchg
lcall
clc
insb
loopne
mov
movsl
add
sbb
sub
push
ret
cwtl
add
sbb
push
push
lock
in
or
push
mov
inc
cld
cmc
and
add
cmc
loopne
push
mov
mov
test
push
mov
mov
mov
cmc
repz
adc
jno
das
jle
cmpsb
jno
repnz
push
pop
push
pop
clc
test
or
mov
pop
test
addr16
fldenv
adc
mov
push
inc
fdivp
nop
jg
cld
or
insl
rorb
sub
mov
push
mov
or
lds
in
popa
xchg
arpl
inc
icebp
fcoms
and
fld
jno
jmp
push
xchg
jg
cld
push
fwait
cli
mov
sub
xor
movsb
imul
insl
dec
repnz
inc
arpl
sbb
or
scas
rcr
cmp
stos
cmc
popa
loop
or
shlb
stos
shlb
adc
mov
test
push
xchg
mull
popa
xor
nop
out
xor
aam
movb
mov
cmpsl
std
dec
fnsave
shrb
std
sbb
fs
call
loope
xchg
imul
lret
mov
dec
lods
push
and
xchg
mov
mov
jle
jbe
ljmp
shll
jl
jecxz
out
xchg
in
xchg
xchg
jb
fdivl
inc
je
sub
inc
aad
push
nop
push
fistl
xchg
js
loope
test
dec
call
jmp
push
lods
nop
in
repz
add
and
pop
loop
daa
loopne
pop
int3
stos
sbb
pop
sarl
sbb
mov
push
and
ja
sub
sbb
loop
sbb
push
in
sbbl
sub
push
sub
mov
aad
inc
add
fwait
int
cmpb
jmp
mov
xchg
js
cmp
xor
jb
aad
pop
shl
adc
cmp
pop
xor
nop
aaa
sub
addr16
cmp
aam
es
insl
push
aam
fistpll
sub
add
sbb
xor
sbb
mov
sbb
rolb
dec
or
adc
inc
and
dec
lods
dec
cmp
push
fs
repnz
push
pop
testb
mov
lret
push
psubq
mov
outsb
pop
pop
mov
pop
mov
sbb
aad
add
divl
dec
stc
les
nop
sub
stc
hlt
fistl
lret
dec
out
push
adc
cltd
mov
std
jle
out
arpl
pop
mov
decl
mov
jg
sub
mov
dec
mov
jmp
lock
xchg
fwait
xor
fwait
les
lock
dec
jb
jecxz
fldt
push
adc
out
and
scas
push
jbe
lahf
das
bound
push
das
mov
jge
mov
shrb
out
mov
dec
pusha
jge
insl
push
int3
cli
xor
and
scas
outsb
sti
dec
jmp
mov
or
xchg
rcrl
cmp
mov
jb
ret
mov
movsb
in
and
sbb
js
pop
clc
sub
mov
les
sub
adc
jg
sbb
push
mov
fcmovnbe
adc
loopne
inc
adc
sub
loopne
pop
sbbl
les
jno
mov
fs
cli
daa
sub
cmp
adc
pop
pop
repnz
adc
mov
rcr
stos
pop
jnp
dec
adc
gs
pop
enter
dec
lods
xchg
lds
mov
mov
jb
cli
insl
add
dec
lahf
lea
fcompl
in
mov
outsb
inc
mov
cmp
xchg
mov
adc
sahf
adc
xchg
cmpsb
daa
adcb
jl
sbb
xor
jno
push
jge
dec
mov
movsb
and
jnp
sub
adc
and
xor
sbb
push
in
push
push
loop
mov
push
aas
je
call
fcoml
push
xchg
sub
std
jmp
repz
pop
dec
ret
dec
jecxz
or
cmp
roll
rcl
pop
push
mov
inc
add
cmpsb
aas
mov
jle
gs
xchg
xchg
repz
add
sub
fmull
pop
loopne
and
cs
mov
mov
sub
test
out
push
xchg
movsb
repnz
mov
mov
lahf
sub
push
test
in
mov
mov
mov
sarb
cmp
xchg
int3
cmp
and
mov
test
loop
stos
loope
loope
jle
pop
xchg
or
sbb
sub
fbld
loope
xor
fwait
jne
mov
test
and
cmp
leave
mov
jl
outsb
mov
or
inc
fidivl
icebp
arpl
outsl
mov
sbb
outsl
aad
enter
lret
cmp
cmpsb
mov
pop
cmp
inc
push
lods
cli
mov
jp
out
fsubrl
es
fisubrl
dec
sti
cmp
mov
loop
mov
pushf
rcll
lea
xchg
cmp
inc
sub
mov
mov
fnstsw
stos
add
sub
jb
out
outsb
repnz
leave
popa
push
jl
iret
sahf
popa
and
pushf
mov
push
push
test
pushf
hlt
xchg
pop
jp
mov
out
shll
xlat
add
enter
inc
mov
pop
sub
inc
mov
sub
aam
sbb
adc
fidivs
lcall
mov
mov
sbb
and
push
xchg
xchg
icebp
inc
mov
call
lret
adc
xlat
loop
jg
aaa
addl
pushf
data16
arpl
push
lods
sub
sahf
sbb
dec
mov
mov
and
mov
mov
xchg
call
mov
push
in
jno
add
movsb
mov
mov
mov
push
test
movsl
push
adcb
js
pop
push
mov
xchg
adc
and
das
lcall
insl
sub
mov
adc
xchg
xor
stos
loopne
fwait
inc
into
cmp
insl
sarl
fdivrl
stos
pop
push
repz
fs
jg
add
xor
in
pusha
sub
jge
xchg
lret
jmp
or
sub
decb
push
rorb
jp
dec
cmp
mov
or
fldt
iret
mov
fisubl
ret
dec
pop
mov
ret
sbb
enter
xlat
mov
sbb
loopne
jno
add
jne
repz
int3
out
out
ss
jle
mov
lods
sub
push
xchg
dec
sbb
subb
sar
aad
sbb
mov
adc
cmp
mov
xor
push
xor
repnz
imul
aas
test
lret
sbb
mov
bound
ficompl
test
jo
repnz
sbb
inc
or
push
enter
mov
ficoms
fcoms
pop
push
adc
xchg
push
or
fwait
cld
or
xchg
pop
int
das
mov
dec
scas
mov
shlb
add
pop
pushf
add
pushl
mov
dec
adc
push
rclb
aad
repnz
hlt
mov
pop
bswap
xchg
in
push
loope
cmp
or
repz
clc
or
les
into
add
mov
shlb
nop
notb
in
imul
dec
or
inc
add
add
jne
addr16
jnp
push
cwtl
jecxz
scas
mov
iret
shll
sbb
ljmp
mov
xor
daa
jns
mov
rcrl
xchg
cmpxchg
lret
pop
mov
and
jae
cmc
lcall
xor
pop
ja
adc
stos
push
fstpl
lcall
add
jmp
jb
inc
add
test
js
icebp
cmp
mov
mov
cld
jne
test
push
negl
sbb
mov
loope
inc
push
fildll
mov
or
lods
ret
or
mov
jg
dec
mov
popf
rcrl
dec
adc
or
jae
sub
jb
mov
xchg
stc
add
pop
xor
loope
inc
into
lock
xor
insb
ret
incl
jae
testl
adc
and
mov
mov
push
stos
negl
rcr
imul
mov
jbe
lret
pop
mov
xor
scas
outsb
jae
sbb
inc
or
add
outsl
outsl
in
mov
shrl
pop
xchg
sbb
cmpb
push
test
fstl
add
das
fcmovne
inc
mov
mov
pusha
inc
add
das
imul
and
inc
xlat
push
fld
enter
testb
xor
addr16
fmuls
xor
cmc
arpl
rcrl
mov
inc
fwait
divl
inc
popf
mov
adc
loopne
call
iret
xchg
jl
xlat
fldt
lods
cmp
and
das
inc
loope
mov
xchg
shlb
mov
dec
push
aam
les
inc
mov
sub
addr16
shrl
xchg
jnp
jae
lds
mov
adc
inc
cld
push
aas
cmpsl
sbb
push
dec
fld
clc
das
dec
neg
pop
xor
js
ret
bound
cltd
pop
or
data16
mov
or
and
jno
xlat
aas
enter
stc
cs
jb
dec
adc
hlt
loope
cmpsb
in
lahf
mov
adc
xor
dec
cmp
mov
out
ds
xchg
push
adc
insb
push
rclb
xor
jnp
scas
add
mov
aas
push
add
cwtl
movsb
pop
cmp
jne
dec
mov
jmp
push
insb
xchg
aaa
dec
dec
cmp
daa
jo
in
mov
daa
lret
fs
cmp
lret
std
mov
ret
sarl
inc
imul
and
rcrl
int3
mov
hlt
pop
add
or
scas
popa
push
addr16
clc
pop
ljmp
pop
mov
push
inc
inc
xchg
inc
rcll
mov
test
fstps
ss
lret
je
sub
xor
push
mov
ret
bound
cmpb
fsubrs
icebp
mov
notb
ja
inc
xor
jmp
cmpb
xor
cmp
inc
aaa
pop
daa
fmuls
cmp
out
sbb
fidivs
push
cmpsl
fsubrp
fwait
pop
push
push
cltd
mov
xor
stc
dec
in
push
xchg
dec
bound
scas
gs
adcb
xor
push
add
adc
popa
adc
mov
or
or
aas
sbb
repz
jp
into
insl
rcrl
icebp
jle
lds
lea
movsl
stc
cmpb
pusha
in
mov
mov
in
mov
scas
clc
jno
orl
jecxz
mov
sub
gs
clc
ret
das
push
dec
fsubrs
jbe
pop
push
fs
push
mov
xor
cltd
mov
loop
jg
xor
popf
enter
cli
flds
sti
insl
xchg
fimull
cld
cwtl
xchg
jo
daa
inc
xchg
or
mov
lret
stos
js
iret
sahf
xchg
mov
js
inc
aam
cmp
in
sbbl
into
mov
lock
rorb
imul
jmp
je
in
fstps
adc
stos
adc
sbb
movsl
add
add
and
pop
insl
testl
xchg
jb
mov
adc
jnp
call
adc
adc
orb
es
hlt
cwtl
out
pusha
mov
xchg
icebp
adc
pop
push
daa
bound
mov
push
enter
mov
icebp
loopne
mov
pop
mov
test
sub
or
cmp
in
pop
jle
inc
aam
push
sub
jo
cmp
mov
roll
lcall
divl
cmp
push
movsb
sbb
xor
test
stos
xchg
stc
sysenter
jne
mov
xor
fwait
mov
ljmp
add
pop
sub
lret
jb
dec
pop
inc
jg
orl
into
movsl
xor
push
faddp
adc
movsb
loopne
ljmp
bound
sbb
loopne
pop
mov
lcall
mov
mov
mov
sar
in
fisttpll
int
repz
test
loopne
scas
shll
or
add
outsb
lret
cs
sub
pop
dec
in
fstps
sbb
xchg
xchg
fwait
sub
jle
arpl
lds
js
int3
test
mov
cmp
jg
pop
lods
jge
xchg
lods
push
and
xor
daa
jg
std
xchg
lods
mov
mov
repnz
pop
adc
jp
ss
pop
stos
aad
mov
xor
jge
nop
test
imul
sbb
int3
and
loope
test
jmp
lods
mull
jle
sahf
or
lea
fs
xchg
xchg
jns
mull
pop
outsb
ret
cmpsb
or
xchg
outsb
scas
and
clc
gs
and
outsl
adc
xchg
cmp
sbb
push
mov
adc
in
out
sbb
nop
test
cmpsb
dec
pop
andl
lds
and
in
adc
push
push
mov
cmpsb
sub
std
mov
repz
jne
test
stc
push
stos
cmp
mov
enter
add
cmc
bound
sahf
shl
test
and
into
aam
mov
sbb
mov
aas
dec
fsubrs
std
adc
mul
xlat
std
int3
push
ret
xchg
push
xor
sbb
daa
inc
jo
and
mov
mov
inc
push
sbb
aam
push
loope
mov
jg
daa
stos
dec
sub
jae
xlat
leave
shrl
es
js
lods
or
inc
push
cmp
push
pop
mov
fdivrs
out
arpl
shl
rol
cltd
xchg
jno
nop
test
pop
loop
data16
jae
xchg
push
orb
scas
mov
and
lret
in
mov
adcb
add
push
pop
dec
arpl
xchg
sti
or
or
mov
and
paddd
adc
fs
ss
cmp
mov
movsl
xchg
notl
imul
xor
test
ds
outsb
mov
xchg
ret
cmp
or
and
stc
dec
dec
das
cmp
es
je
mov
clc
pop
mov
xchg
fldl
fcomps
rorb
divb
aam
mov
jns
jmp
jg
xchg
mov
mov
xor
cwtl
xor
push
or
inc
and
sbb
mov
mov
mov
jne
into
mov
lret
pushf
ret
ret
sti
stos
fsub
loopne
pop
sub
add
pop
and
daa
mov
stos
pop
sbb
inc
ficoml
bound
and
push
dec
addb
mov
aaa
les
imul
test
fs
test
pop
or
fists
cmp
fildll
mov
dec
lcall
pop
dec
shlb
inc
mov
je
pop
dec
pusha
jo
lods
aas
xor
divb
mov
out
sbbb
dec
sub
cli
stc
jle
das
push
dec
out
movsb
cmp
or
push
cmpsb
dec
insl
nop
jmp
inc
mov
mov
fwait
xor
cmp
mov
int3
sbb
mov
test
mov
mov
nop
push
pop
clc
xchg
adc
insb
dec
mov
dec
out
and
add
mov
pusha
in
or
movl
stos
in
mov
stos
push
cmp
mov
mov
cld
clc
das
pop
jle,pn
or
pop
push
mov
gs
jo
cs
push
movsl
lret
out
int3
jbe
fimuls
add
pop
jns
popf
push
push
js
and
xchg
in
jae
xchg
sub
or
aas
xor
mov
mov
into
dec
outsl
pop
add
dec
push
mov
jp
fcomi
je
mov
or
jnp
add
jb
sbb
andl
divb
mov
stos
in
xor
aas
scas
sbb
mov
out
pcmpeqb
inc
pop
sub
js
inc
sub
aad
push
out
js
push
in
imul
sub
xchg
adc
popa
cmc
xchg
xchg
xor
pop
in
leave
dec
movsb
aam
imul
sbb
add
jl
jae
sti
pcmpeqb
cmp
xlat
and
or
pop
cmp
jns
out
lds
repnz
scas
inc
xor
int
pop
fimuls
imul
ss
je
pop
or
mov
and
inc
xchg
lret
xchg
arpl
jne
pop
mov
ret
mov
adc
sub
inc
rcll
push
data16
pop
loopne
xchg
push
addl
jle
hlt
rcrl
rcll
fwait
inc
push
mov
sbb
das
mov
test
mov
push
jae
push
loop
xor
aas
je
stc
ljmp
add
in
dec
fisttpll
and
mov
jp
sbb
cmpsl
sbb
jbe
adcb
push
adc
push
sbb
fstpt
push
lret
xor
cmpsb
into
test
pusha
jb
int
insb
jle
xchg
fcom
aaa
inc
test
xchg
adc
mov
rcrl
aam
or
mov
cmp
jae
and
xor
enter
push
into
fmul
jge
push
adc
mov
pushf
xchg
sub
icebp
adcb
loop
mov
mov
aad
pop
sbb
add
adc
popf
dec
push
adc
addr16
inc
xchg
mov
mov
fbstp
fsubrs
movsl
lds
or
fwait
pop
jne
out
in
xor
inc
cmc
pop
and
lock
pop
pop
xor
inc
dec
xor
add
fistpll
btc
idivl
add
push
aad
adc
sub
out
dec
lock
scas
aaa
xchg
sarb
push
pop
gs
repz
ror
cmpsl
jb
inc
xchg
mov
cmp
sbb
sub
inc
adcl
and
stos
into
cmc
scas
cmp
out
fwait
jb
push
jae
push
popa
sbbb
xchg
arpl
mov
stos
shrl
mov
pop
or
inc
ds
test
pop
sub
lods
push
add
pop
dec
lahf
or
dec
mov
stos
idivb
aad
test
ss
mov
cmpsb
jae
inc
mov
pop
mull
pop
push
sub
das
pop
stos
sahf
sub
push
pop
stos
pop
andl
and
popa
pop
add
pop
sub
push
mov
repz
test
push
or
mov
sar
movl
pop
arpl
adc
scas
mov
inc
mov
test
imul
sbb
jg
sub
sub
ret
pop
inc
mov
test
mov
xchg
ret
cmp
mov
adc
pop
sbb
data16
es
mov
lods
mov
mov
cltd
adc
in
mov
rorb
add
mov
sbb
test
xchg
icebp
inc
sub
or
mov
add
dec
sar
scas
popf
idivl
cmp
xchg
sarl
mov
std
sub
leave
into
adcb
clc
shlb
faddl
mov
adc
push
sbb
push
stos
jno
push
lret
aad
adc
mov
add
jnp
out
xor
imul
xchg
dec
mov
mov
out
gs
mov
ret
ret
fmull
bound
or
jb
mov
mov
push
mov
or
dec
xchg
in
pop
clc
pop
popf
jno
pop
inc
dec
sahf
and
mov
push
inc
pop
jp
jnp
ja
lahf
adc
add
mov
jb
pusha
ds
xor
imul
jne
cltd
xchg
push
aad
mov
je
arpl
mov
sbb
xor
cmc
repnz
or
mov
ds
dec
sub
int
and
push
sub
call
out
and
dec
insl
add
imul
inc
lods
or
mov
daa
rcrb
mov
cmpl
addb
inc
cld
cs
adc
xchg
xor
push
sbb
notb
out
add
jg
xor
dec
lret
push
add
gs
jmp
popa
movsb
inc
add
idiv
pushf
pop
sahf
int
pextrw
mov
call
or
ds
push
cld
in
xor
jnp
pushf
pop
in
inc
xlat
push
lods
lret
add
lea
adc
push
call
out
or
insb
add
push
insl
sbb
arpl
out
daa
add
xor
lret
lds
jl
dec
jmp
and
jb
inc
or
outsl
dec
ljmp
movsl
pop
int3
lods
js
jno
mov
or
fistpl
mov
cmp
inc
jg
lods
mov
mov
jl
cmc
adc
inc
sbb
adc
push
std
fcomps
mov
jp
or
cmp
pop
test
daa
leave
xorb
adc
inc
cmp
sbb
dec
loope
push
fidivrl
cld
cmp
loopne
mulb
cltd
mov
jle
push
mov
pop
push
mov
xor
lret
cld
mov
cmp
int3
aad
cltd
cmp
pop
dec
inc
andl
test
lret
into
jbe
ss
and
add
mov
cmp
push
addr16
lock
xor
sbbb
in
dec
and
fcmovnbe
and
push
shl
pop
or
xchg
jmp
push
jo
jge
sub
push
std
jne
pop
xchg
and
jo
ffreep
jp
mov
xchg
imul
inc
popf
aam
cwtl
cmpsl
lret
dec
push
movsl
leave
sti
das
cmc
lret
ljmp
out
mov
mov
insl
enter
push
shl
dec
add
cltd
dec
pop
push
adc
push
loopne
fcompl
fisubs
icebp
in
adc
inc
dec
push
lea
sub
shrl
inc
scas
scas
aam
inc
into
xchg
or
adc
jae
daa
mov
stos
hlt
bound
fmul
movsb
and
fidivl
in
mov
push
cmc
sti
lea
fs
out
xlat
in
push
sahf
xor
lret
adc
das
mov
movsl
xchg
and
mov
inc
add
je
pushf
push
sahf
adc
mov
subb
aam
xchg
rol
add
dec
sbb
inc
adc
lcall
stos
add
adc
xor
jae
test
sub
jp
lss
and
push
add
enter
lahf
lret
jge
cmp
adc
pop
movsb
xchg
jecxz
sub
and
mov
aam
inc
mov
sub
lret
ss
je
add
movsl
imul
imul
push
or
adc
call
sbb
in
inc
sub
fistpll
jmp
dec
pushf
pop
out
push
push
enter
push
stc
cmp
push
pop
sar
add
and
fucomp
ja
xor
mov
adc
xor
mov
clc
push
push
cmpsl
gs
xchg
push
or
jnp
mov
mulb
jp
xchg
cmp
xor
mov
lcall
inc
mov
jnp
mov
test
rorl
insb
jecxz
xchg
mov
adc
aad
or
aam
rcll
shlb
stos
ret
mov
ja
gs
dec
js
mov
and
sarb
pop
jne
push
add
addr16
notl
jb
xorl
add
xchg
xchg
inc
mov
subl
ljmp
sub
sbb
push
inc
dec
cmp
dec
or
pusha
jns
mov
mov
add
mov
adc
not
mov
jge
faddl
mov
in
dec
xchg
in
push
cld
add
pop
pop
xchg
xchg
mov
and
jno
shll
lret
in
mov
push
cmp
mov
sbb
sbb
movsb
cmp
jno
shll
or
xchg
jns
adc
add
xor
scas
rclb
and
adc
ficoml
rolb
stc
sbb
mov
ja
dec
inc
or
icebp
adc
dec
inc
inc
into
mov
outsb
inc
jmp
fdivrl
ljmp
mov
cmpsl
aam
pop
icebp
adc
shlb
push
popa
jbe
and
xchg
pop
hlt
adc
bound
out
mov
into
jmp
xchg
pop
mov
xchg
xor
aad
sti
in
sti
push
mov
cli
or
shlb
and
notb
push
ljmp
aad
adc
mov
xor
cmp
in
xchg
mov
adc
jg
es
xor
int3
dec
push
xchg
sahf
es
push
subl
cmp
movsb
dec
pop
std
rorl
xlat
dec
xchg
xor
push
add
outsb
pop
das
mov
mov
jo
adc
in
pushl
lods
stos
cmpb
aaa
jb
or
mov
loop
push
cmp
mov
cmp
decl
pop
aas
mov
and
push
aam
pop
push
loop
cwtl
pop
and
in
dec
orb
pop
push
sbb
ret
icebp
cli
mov
loop
iret
mov
fcompl
xor
cmp
sti
call
mov
xchg
cmpsb
ss
inc
mov
sbbb
cltd
xchg
in
mov
nop
push
popl
or
pushf
arpl
dec
stos
inc
mov
in
adc
mov
jmp
test
stc
test
mov
dec
xchg
fimuls
leave
out
idiv
mov
movsl
sbb
lds
push
int3
test
pop
pop
dec
mov
push
outsl
or
mov
xchg
jae
ror
or
push
rorb
cld
push
add
int
pop
or
adc
pop
xchg
daa
xchg
cld
xchg
xor
nop
ljmp
add
mov
gs
dec
inc
sub
iret
sbbl
imul
mov
push
dec
lods
call
sbb
pop
test
or
in
dec
icebp
call
imul
or
jnp
lds
pop
push
jle
in
lods
xor
push
into
pop
fmull
out
mov
xorl
sub
out
xor
ror
mov
cmp
out
aas
nop
adc
and
sub
push
je
or
enter
loopnew
negl
add
mov
adc
lock
jo
fbstp
inc
imul
data16
addb
scas
cmp
enter
jmp
out
inc
lds
aad
jno
sahf
mov
sbb
or
je
pop
ficoms
cmp
fcomps
loop
jbe
or
les
clc
rorl
mov
icebp
mov
cmpsl
pop
lods
sub
in
xchg
aad
or
btr
push
push
mov
mov
add
icebp
ret
xorl
xor
sbb
xor
sarb
add
xchg
adc
cwtl
std
xchg
sbb
popf
adc
movsb
adc
xchg
mov
sbb
cmp
pusha
out
mov
jo
ret
js
add
cltd
adc
sti
ffreep
test
push
pop
mov
dec
aaa
inc
jmp
orl
out
sub
loop
mov
mov
pop
push
push
inc
mov
mov
faddp
cld
test
mov
enter
nop
cli
sub
lret
sarb
mov
gs
popa
repz
cld
loope
icebp
sbb
lcall
fsubs
out
lds
loope
adc
push
sub
addr16
pop
sbb
cwtl
dec
inc
test
adc
xor
addr16
jno
les
mov
lret
dec
incl
lods
pushf
inc
pusha
dec
mov
mov
leave
inc
ds
push
jmp
fbld
sub
loope
not
stos
push
int3
sti
xor
push
inc
jge
and
dec
pop
and
shrl
addr16
dec
dec
sub
rcll
out
aam
jo
cltd
test
fbld
xchg
mov
jmp
test
lahf
rol
outsl
iret
push
int3
cli
push
sub
sub
push
loopne
rcll
mov
cmp
ficomps
push
bound
loope
andl
xor
or
shrb
shr
fnstsw
push
push
mov
mov
into
icebp
into
mov
icebp
insb
or
mov
jae
test
sbb
mov
aam
cld
jg
pop
sub
dec
pop
pop
jge
inc
sti
sub
lea
push
stc
scas
hlt
xchg
lret
aas
xlat
lods
mul
pusha
jl
fidivl
sub
lods
fnstenv
pop
fiadds
push
push
gs
ss
dec
sub
mov
inc
xchg
jno
mov
jecxz
jbe
insb
loope
mov
xadd
pop
in
pop
lret
lret
arpl
adc
xlat
pushf
fiadds
adc
mov
ja
aam
mov
call
enter
cmp
jge
and
lcall
cmpsl
lcall
dec
push
insl
je
push
push
xchg
add
andl
out
push
stos
and
test
nop
cli
mov
lahf
pop
fs
and
out
jb
nop
lods
dec
adc
mov
ljmp
icebp
sub
inc
stos
adc
cmp
jle
mov
fiadds
sti
sub
adc
cmc
xchg
cmp
add
sub
push
or
out
stos
fimuls
subps
jecxz
push
lods
xor
cmp
arpl
mov
pop
movsl
pop
adc
mov
mov
or
ss
dec
mov
inc
xor
mov
cmp
insl
jno
lods
scas
jmp
adc
ret
es
push
inc
cltd
cld
pushf
cs
lahf
imul
or
lret
pop
lea
fucomi
push
sub
push
data16
mov
fnstcw
jp
adc
add
sbb
sahf
nop
mov
sar
inc
fwait
mov
xchg
xchg
dec
lock
cli
pusha
lret
jb
gs
movsl
add
mov
les
inc
fldt
mov
popf
repnz
inc
insb
pop
xor
dec
adc
scas
sub
movsb
int
mov
push
mov
mov
mov
aaa
or
adc
stc
mov
dec
lahf
sbb
ja
and
out
sub
jo
cmpsb
decb
orl
addb
sbb
call
jne
out
in
ljmp
xchg
mov
cmp
mov
xor
xor
or
mov
or
push
insl
jmp
leave
pop
lcall
dec
aad
lahf
or
pop
jecxz
lea
lods
jle
popa
jbe
cli
jbe
pop
in
add
into
push
jecxz
in
add
faddl
je
notb
fcmovnu
push
addb
pop
testb
sub
or
xor
fisttpll
jle
rcrl
xor
dec
jmp
ret
inc
imul
lods
cmp
lret
xor
adc
adc
movsb
in
inc
push
adc
fsubrl
loop
jne
cltd
sahf
scas
add
jl
jle
cmpsl
fidivrl
cmp
sub
pop
outsb
add
loop
and
sbb
in
sub
sbb
and
sbb
out
jecxz
in
pop
ljmp
enter
mov
mov
pusha
push
pop
sub
sarl
ficoml
repz
cs
cmc
movl
fcomps
pop
sbbl
jmp
jnp
movsl
iret
jb
mov
lret
loope
rolb
lock
or
or
xlat
inc
cmp
lods
aaa
loopne
xor
dec
pop
lods
mov
test
cmc
cmp
es
push
inc
addr16
fs
add
push
sbb
push
stos
es
in
mov
lds
loop
push
sub
inc
dec
cmp
icebp
inc
dec
data16
jge
inc
loope
add
daa
pop
mov
cmc
dec
mov
sbb
aas
fsubs
pop
and
push
jge
sub
repz
loope
sahf
xchg
adc
sbb
out
lcall
push
xchg
jmp
mov
adc
push
pop
sub
and
dec
lock
sbb
out
dec
dec
mov
outsb
les
dec
xchg
jp
mov
scas
or
mov
cs
jns
out
out
mov
inc
enter
pop
sbb
stos
cmpsl
lret
jb
fidivl
mov
mov
sbb
push
and
inc
lock
cmp
loop
mov
enter
aaa
or
outsb
add
clc
rorl
sub
mov
in
roll
inc
dec
mov
xor
mov
out
dec
add
data16
xchg
shll
hlt
xchg
inc
xor
clc
roll
lcall
mov
or
or
or
arpl
mov
lahf
les
cltd
in
lea
call
cmp
arpl
cmp
pop
inc
and
push
std
dec
popa
insb
std
lea
mov
jle
mov
loopne
dec
xchg
pushf
std
jns
mov
xchg
mov
sbb
lcall
pop
rorb
adc
dec
xchg
xlat
pop
rcll
jnp
lahf
push
or
test
inc
cmp
inc
or
fcomps
test
xor
push
adc
xchg
xchg
and
arpl
es
xchg
in
lcall
cwtl
cmp
cmp
in
xchg
lret
iret
mov
insl
fnstenv
adc
mov
dec
sub
into
sub
cwtl
ret
xchg
or
add
inc
cwtl
aam
jl
mov
repnz
ds
mov
xor
test
xchg
sbb
in
in
jg
int
in
int
stc
in
bnd
xchg
lret
or
shlb
mov
mov
sbb
inc
adc
jno
pop
sarl
sti
iret
inc
pop
imul
fnsave
mov
cli
fcomip
mov
gs
cmp
rorb
or
dec
int
xchg
ljmp
adc
add
sbb
inc
test
inc
and
test
dec
xchg
ljmp
mov
addb
push
movsb
std
lret
mov
cmp
repnz
add
adc
call
xor
cmp
dec
jne
sahf
into
jnp
call
mov
dec
lods
adc
jge
lods
mov
and
adc
addr16
xor
jbe
cmpsb
push
mov
jb
cmc
sbb
divb
pop
push
sub
ret
xchg
mov
mov
jae
sub
cmp
mov
mov
mov
out
cmp
pop
jno
cmp
cmp
lcall
dec
in
out
adcl
mov
in
stc
stos
iret
enter
xsave
lret
bound
lret
fisubrl
sub
sub
jae
push
fimull
jnp
add
test
mov
inc
xchg
mov
jbe
fadds
xor
adc
lods
jo
mov
orb
jb
xor
icebp
mov
dec
mov
mov
mov
lcall
or
scas
inc
push
pop
cmc
adc
popl
addr16
pop
pop
push
and
out
cld
sahf
jg
mov
imul
or
mov
addr16
sub
sub
lods
negb
jns
and
in
xchg
sbb
movsl
repnz
jno
inc
xor
pop
push
outsl
cwtl
pop
inc
mov
xchg
loop
imul
dec
cmp
push
xchg
repz
insb
jne
roll
enter
mov
lahf
std
gs
repnz
jle
aad
jno
pushf
enter
mov
and
cld
clc
or
aaa
mov
pushf
imul
xchg
xchg
adc
jle
inc
push
aam
xor
mov
sub
hlt
add
mov
jl
movsl
push
dec
xor
pushf
rep
lret
xchg
add
jnp
dec
fidivrs
outsl
adc
add
or
jnp
adc
pushf
aas
xchg
xchg
adc
in
pop
xchg
mov
lahf
push
movsb
sub
mov
hlt
stos
loopne
dec
xor
push
mov
in
scas
sbb
int3
fdivl
lcall
cmc
xchg
mov
add
and
cmpsb
inc
and
aad
mov
jg
inc
mov
xor
int3
test
arpl
out
cmp
or
push
shr
dec
test
sbb
scas
or
jmp
mov
mov
cmp
add
mov
and
jae
movsl
sbb
mov
xchg
call
mov
dec
mov
mov
mov
sbb
test
sbb
mov
or
jns
pop
jl
sub
test
pop
popf
cwtl
rcll
push
cmpsb
fbstp
sbb
loope
aad
mov
es
add
xchg
mov
and
mov
and
xchg
dec
out
bound
mov
fmull
sbb
ret
xor
sti
popa
das
dec
fisubrs
out
popa
test
movsb
scas
jg
mov
jns
cmp
sahf
out
lods
pop
movsb
add
mov
fcoml
nop
pop
shlb
push
out
lcall
lods
outsb
scas
jge
cli
sub
pop
mov
imul
push
or
jbe
pop
sbb
cmp
fs
faddl
repnz
push
or
and
daa
mov
push
lahf
sbb
jo
push
cmpsb
pop
xchg
enter
addr16
push
clc
nop
add
and
jmp
pop
icebp
mov
ret
les
xchg
lret
inc
icebp
adc
in
xor
hlt
xlat
dec
loope
std
test
add
icebp
push
mov
testl
jl
inc
fildll
xor
sub
out
mov
sbb
inc
lret
xchg
btr
jmp
and
sub
sub
iret
addr16
clc
stc
sub
int
inc
test
mov
arpl
mul
fwait
pop
into
out
jns
lahf
and
in
cmp
jge
push
xor
push
mov
loopne
rol
mov
clc
sub
inc
mov
ret
mov
inc
stos
inc
pop
aad
mov
ret
pop
mov
or
jl
sub
movsl
bound
loope
mov
leave
pop
jl
inc
add
xlat
jmp
xchg
sub
sbb
outsl
rcll
dec
movsb
gs
xlat
imul
cmpsb
jno
xor
fsub
mov
mov
jmp
hlt
jg
push
pop
jl
inc
mov
out
repnz
fldt
das
loop
adc
in
push
in
sbb
fsubrl
sbb
stos
orb
mov
xchg
jno
mov
lcall
mov
sub
push
push
sbb
sbb
inc
push
add
lret
mov
imul
hlt
insl
adc
mov
pusha
push
sub
repz
lcall
aam
adc
xchg
fidivl
mov
mov
pusha
imul
lret
jecxz
xor
fucomi
sbb
data16
aaa
test
jb
pushf
cmp
clc
es
insb
stos
pop
mov
jl
sti
inc
dec
movsl
insb
stc
jecxz
mov
jle
in
out
or
mov
aam
dec
ja
cmpsb
fidivrl
push
fsubrs
jae
mov
out
dec
js
add
les
cltd
mov
call
int
inc
ffreep
arpl
sbb
xchg
jnp
aas
test
adc
inc
inc
adc
fwait
sub
pop
in
xor
jne
jae
mov
sub
mov
bound
mov
inc
pop
arpl
in
push
out
lret
xor
insl
dec
das
outsb
outsb
or
ret
xchg
scas
dec
inc
mov
xor
sti
or
js
jmp
add
dec
out
cwtl
cmpsl
push
popa
sbb
sub
aaa
mov
gs
mov
outsb
subb
icebp
or
out
inc
std
cmp
mov
aaa
clc
mov
loopne
and
repnz
jo
jbe
insl
mov
jecxz
cmp
popf
pop
and
int
hlt
in
int
out
in
mov
addr16
dec
scas
push
adc
call
push
stos
xor
xchg
mov
cmpsl
clc
rcl
mov
dec
sub
testb
or
xor
mov
je
sub
xchg
fwait
jge
je
hlt
test
mov
jo
inc
out
out
imul
sbb
xlat
int3
iret
inc
nop
mov
pop
faddl
pop
dec
inc
xlat
lea
mov
mov
jns
insl
mov
movsb
mov
int3
jp
mov
aaa
lea
mov
mov
jne
cmpsl
shll
iret
xchg
mov
xchg
xchg
sub
pop
mov
push
sbb
push
mov
andb
repz
ficomps
xchg
sub
or
adc
int
mov
icebp
adc
jne
mov
inc
jmp
push
lods
xchg
pop
int
imul
dec
sub
dec
pushf
js
push
pop
push
stos
dec
lock
lret
fistps
mov
adc
xor
and
sti
cld
fwait
or
out
test
push
repz
xor
cltd
mov
loope
jle,pt
adc
aaa
lret
std
push
and
inc
test
lods
leave
mov
cmp
pop
dec
test
das
popa
loope
das
js
pop
ret
add
adc
jle
push
ds
fstl
repnz
test
push
loop
add
inc
push
pop
pop
fisubl
sub
sub
mov
lret
leave
cmp
dec
push
jge
cmp
imul
mov
cwtl
mov
push
int3
sub
test
jb
sub
lods
cmp
pop
and
mov
jne
xchg
in
xchg
addl
or
xor
clc
lret
es
mov
scas
out
inc
test
cwtl
mov
shl
pop
push
mov
fadds
pop
sbb
inc
fdivr
pop
lea
cmp
sti
pop
xchg
shrl
mov
push
fsubs
fwait
lea
pushf
push
sbb
adc
inc
mov
fildll
mov
inc
or
sti
mov
movsl
sti
das
out
adc
push
aam
fistpll
or
fwait
cmpsl
dec
jb
ja
out
pop
add
js
loop
inc
dec
fsubrl
inc
mov
xor
xchg
jmp
sti
divl
add
and
add
rcl
idivl
faddp
and
jge
jl
out
mov
lods
xchg
ljmp
mov
or
xor
aad
inc
pop
pop
ljmp
sbb
lcall
mov
jmp
jp
loop
inc
dec
outsb
pop
jbe
out
orb
sub
sub
xor
enter
scas
add
xor
sbb
sub
inc
jns
fucomip
jb
ret
xor
sbb
push
orl
stc
adc
out
repz
call
sti
jno
and
jae
mov
fnsave
pop
cwtl
push
xchg
adc
sti
pop
adc
sub
add
repnz
adcb
jmp
lods
and
enter
popf
inc
cli
lods
rcrl
popf
lock
shrl
mov
cmp
loope
loopne
inc
jnp
xor
js
mov
jp
subl
pop
jno
shll
sbb
sti
jne
sub
cwtl
divl
add
push
clc
xchg
das
dec
push
fdivrs
sub
cltd
repz
psubusb
out
add
xor
call
incl
aad
adc
fcoms
pop
sbbl
aam
or
and
data16
jge
sti
je
sub
into
daa
mov
push
xchg
cmp
scas
jne
aam
das
cmp
aam
xor
imul
int3
push
mov
or
jmp
jge
rcl
fcmovne
movntq
popa
xlat
lods
jge
sub
negb
pop
andl
nop
xchg
and
lds
std
aas
push
cmc
adcb
xchg
push
fs
or
or
pop
mov
mov
scas
and
xchg
pop
in
aad
mov
repz
pop
and
pop
sarb
add
call
dec
dec
cmp
int
push
cmp
je
or
inc
sub
sbb
cmpsl
jecxz
fistl
cwtl
aam
push
and
int3
jg
int
cmpsb
xlat
stc
insb
push
dec
pop
xor
mov
movsb
sahf
js
push
test
fucomp
xor
fsubrl
js
jno
insb
fstp
stos
arpl
push
jecxz
popa
mov
or
add
out
leave
icebp
mov
xor
mov
dec
xor
jo
cmp
into
push
das
ds
cmc
mov
testl
inc
or
inc
movsl
pop
cmp
xchg
sbb
xchg
and
pop
sbb
rcll
ficomps
push
or
jb
mov
rcrb
pop
sbb
jnp
sbbb
push
sbb
mov
pop
cmp
xor
push
int
pop
pop
add
in
aad
ficompl
mov
add
popa
jmp
stc
add
aaa
mov
lea
arpl
push
fidivs
mov
sbbb
data16
hlt
in
and
fisttps
pop
dec
outsb
fsubrp
jbe
xchg
aad
je
mov
push
lret
jae
cli
lds
pusha
pop
scas
inc
jle
lahf
imul
movsl
ss
jl
lret
and
outsl
sbb
rcrl
xor
jmp
cmc
adc
loop
jecxz
mov
fwait
cmc
and
imul
cmpsl
pop
xor
jle
cld
mov
mov
in
sub
lret
test
loope
xor
ljmp
ror
stos
addr16
push
adc
rcl
imul
adc
xor
sbb
and
push
in
cmpsb
and
xor
shll
imul
dec
jnp
pop
addl
mov
pop
dec
cmpsb
movsl
sub
out
mov
leave
xor
lahf
cmp
mov
inc
mov
scas
insl
fcmovnbe
lahf
add
pop
jecxz
es
loop
jge
pusha
adc
lret
repnz
fwait
cmp
add
cwtl
in
dec
inc
and
mov
popf
leave
fcoms
mov
or
fdivrl
nop
cmpsl
sub
pop
loopw
lret
out
je
jo
cltd
pop
loop
xchg
jnp
adc
cmpsb
leave
adc
xchg
or
test
ficoml
add
call
fists
add
push
ss
inc
inc
repz
jne
push
int
xchg
pop
insl
call
push
sti
xor
pop
pop
mov
mov
sub
jb
or
pop
xor
stos
xchg
decl
cld
or
sbb
in
sub
std
sub
sahf
cmp
inc
lret
rcrb
enter
sahf
xchg
push
fs
pop
mov
inc
int
xor
push
adc
es
add
jge
sub
jnp
xorl
jp
mov
loopne
popa
fistpll
pop
pop
std
sub
inc
xor
sbbb
fwait
imul
imul
inc
outsl
jmp
mov
les
adc
orl
and
and
lds
gs
pop
out
into
add
xchg
idiv
and
arpl
sbb
sahf
push
lods
imul
cmc
fs
push
push
outsl
jl
push
inc
cmpsb
nop
aaa
push
mov
sub
cmp
and
pop
and
fistps
iret
pop
or
std
jl
gs
jmp
inc
add
enter
repnz
jnp
and
popa
in
jb
cmp
cld
stos
cld
dec
notb
nop
ret
fists
cmpsl
mov
xlat
ja
jg
xchg
add
loop
lods
and
into
sahf
ja
loope
cmp
mov
gs
sbb
adc
les
gs
xchg
lods
or
insl
fbstp
sub
movsl
nop
shll
mov
es
and
loope
in
add
filds
jb
icebp
loopne
test
pop
fwait
mov
insl
jecxz
jl
jns
icebp
sub
or
or
jne
dec
int
dec
sub
jle
sbb
roll
jmp
dec
mov
cmp
and
push
inc
and
outsb
mulb
scas
arpl
insb
loopne
xchg
out
and
inc
ljmp
inc
jmp
punpckhwd
xor
loopne
jp
sbb
adc
sub
lods
inc
add
push
addb
leave
lret
sub
ret
mov
test
xchg
fcmovu
xchg
mov
sub
inc
test
jbe
mov
or
pushf
sarb
lods
sbb
popa
or
icebp
push
mov
jb
pop
xchg
push
cmp
jl
jae
mov
jecxz
mov
mov
lea
push
cmp
push
sub
jl
call
ror
cmp
and
call
fcmovu
mov
add
or
adc
xchg
jge
imul
or
pop
push
fistps
repz
mov
fnstenv
cld
pusha
mov
mov
or
ret
int
or
add
push
xchg
fldt
fists
rcrb
push
mov
shlw
lret
das
sbb
je
xchg
aaa
subl
add
mov
adc
enter
or
mov
enter
or
pop
repz
sbb
mov
out
mov
dec
jae
inc
adc
adc
gs
ja
adc
orb
jmp
ljmp
sbb
imul
ljmp
pop
int
movsb
outsl
jecxz
dec
pop
sbb
cs
int3
mov
mov
pop
mov
icebp
pop
test
xor
xchg
jecxz
ds
xorb
stc
iret
xchg
mov
cmp
rcll
cmpsl
add
mov
movsb
xor
adc
push
fidivrl
lcall
aam
nop
iret
push
or
into
test
adc
out
pop
pushf
cltd
jns
mov
setno
jmp
aas
mov
jmp
and
movsb
cmp
mov
mov
dec
in
push
test
aad
or
pushf
mov
xchg
stos
push
imul
push
fmull
ficompl
es
push
fstp
mov
lret
mov
call
push
jl
pop
movsl
std
arpl
jno
rorb
int3
das
call
rcl
sbb
jbe
sbb
cltd
or
in
pop
sbb
addr16
mov
pop
xor
aas
testl
mov
jns
rcrb
and
sub
xchg
stc
mov
stos
mov
or
pop
pmaddwd
inc
xchg
stc
adc
mov
dec
imul
sbb
pop
aam
movsb
popa
jne
in
inc
mulb
push
fildll
mov
and
lcall
into
sub
mov
mov
ret
jb
sbbl
pop
xorl
fcmovnbe
cmp
and
fidivrl
jnp,pt
movsb
sub
sbb
pop
in
in
je
add
sbb
dec
xchg
adc
in
mov
mov
cmpsb
mov
jmp
jbe
fwait
pushl
jmp
insb
mov
insb
addr16
cmp
cmp
pushw
das
insl
pop
cmp
lahf
pop
lds
subl
cmpsb
cmove
rolb
jg
pop
jmp
ss
inc
lahf
lods
add
jo
lret
mov
call
adc
jg
loopne
or
pushf
stc
sahf
popf
ficoms
mov
push
jbe
in
hlt
fidivs
jnp
and
inc
push
pushf
dec
faddl
pop
clc
pop
stos
or
mov
data16
xchg
adc
cmp
adc
imul
out
mov
fcomps
cmp
outsb
lahf
stc
adc
dec
in
out
adc
push
lods
shlb
pop
pop
xchg
out
into
mov
push
scas
jle
inc
xlat
push
add
pop
sti
push
jmp
mov
lret
aam
ss
xchg
rcrb
sub
mov
pop
cmp
ljmp
pop
dec
jge
aam
xor
adc
xchg
rcr
or
inc
loop
xor
inc
add
cmp
jmp
jmp
xor
jbe
mov
mov
jbe
loope
mov
fists
mov
shll
mov
inc
daa
sub
sar
out
in
pusha
push
cmpb
mov
nop
test
loope,pt
push
or
push
xchg
mov
daa
movsl
jnp
and
bound
in
add
sub
sbb
inc
push
jae
dec
mov
je
mov
test
xor
data16
ret
adc
mov
sti
movsl
pop
fs
jne
lret
mov
adc
clc
inc
loope
pop
call
pop
sbb
push
or
mov
sahf
pop
mov
iret
test
test
stc
push
int
gs
or
int3
xchg
xor
jecxz
test
pushf
test
and
jns
int3
dec
wrmsr
adc
idivl
xor
mov
or
mov
add
daa
and
in
and
mov
adc
or
adc
icebp
adc
fisubrs
xchg
inc
or
or
inc
add
or
addr16
out
adc
movsb
lock
fwait
arpl
int
or
jns
push
cmp
mov
je
pop
loope
xor
imul
les
scas
jecxz
or
xor
subb
or
push
inc
mov
sbb
mov
pop
mov
mov
mov
dec
push
das
sbb
mov
fistps
or
pop
xchg
push
loope
js
mov
test
inc
inc
inc
push
aam
jmp
inc
test
sbb
mov
and
mov
or
test
rorl
inc
mov
mov
add
push
cmpsl
loopne
add
adc
pop
fwait
push
dec
adc
adcb
jmp
fnsave
inc
push
cmc
cmp
and
adc
pcmpeqb
ficoms
cmp
lock
inc
scas
push
rorl
xchg
dec
sbb
cmp
hlt
adc
xor
scas
xor
dec
fstpt
add
and
inc
xor
or
and
adc
sahf
outsb
fildll
fisttpl
jle
popf
sti
bound
xlat
push
or
sti
dec
pop
loop
ret
leave
std
push
jg
test
aas
xchg
pusha
in
jmp
pop
icebp
jle
xchg
stos
mov
inc
das
les
stos
int
arpl
popf
out
or
incb
jnp
clc
lods
adc
fwait
test
out
popf
mov
or
inc
out
jmp
je
mov
gs
ss
lret
iret
jo
inc
outsl
sti
insl
pop
bound
mov
jb
push
add
cmp
mov
std
cmp
mov
mov
push
stc
sahf
jg
add
or
dec
imul
iret
xchg
shlb
xor
fst
movsl
xor
sub
sbb
mov
ret
icebp
mov
cwtl
mov
jbe
mov
test
jbe
clc
jp
loopne
lds
sub
lock
js
movsl
or
popa
mov
add
aam
stos
push
sub
bound
push
test
push
std
dec
movsl
xchg
dec
inc
enter
pop
mov
aaa
insb
push
push
sbb
test
mov
or
out
daa
mov
sub
or
rorl
sbb
xor
ljmp
int
nop
aam
and
rcrl
aas
sti
test
sub
push
mov
gs
pop
shlb
mov
jl
and
jmp
jmp
leave
jmp
push
mov
pop
jb
mov
mov
stc
push
add
mov
lods
in
xor
or
mov
nop
rolb
inc
mov
outsb
sub
push
and
sub
in
adc
push
adc
push
out
pop
dec
iret
or
mov
popf
cmpxchg
les
repz
adc
je
xor
jp
ss
les
stos
add
stos
loope
loope
adc
stos
add
sub
pop
adc
adc
dec
pop
test
and
fdivs
mov
xorb
stos
adcl
test
pushf
dec
mov
pop
and
and
cmp
lock
ds
and
out
add
in
push
je
movsb
adc
xlat
sub
adc
fisttpll
jg,pt
pushf
add
lds
rcrb
arpl
out
mov
xchg
clc
pop
test
mov
xor
mov
mov
sahf
das
add
pop
mov
sub
sar
movsl
shrb
mov
pop
in
add
subl
mov
mov
movsl
xor
pusha
shrl
fisttps
cwtl
inc
sbbb
push
stc
int3
ret
jl
cmp
sub
pop
push
dec
int3
mov
mov
outsb
add
ds
orl
add
push
jge
pop
push
enter
sahf
push
xor
dec
stc
lock
adc
es
aad
push
mov
sub
pop
pop
cmp
cmp
in
sub
push
pop
mov
sub
inc
outsb
imul
shrb
ja
mov
mov
xor
lods
and
lock
insl
sub
dec
push
jle
stos
stos
ffreep
mov
push
pop
sub
lea
clc
stos
or
mov
xchg
lcall
lret
xchg
push
inc
mov
in
push
add
mov
sub
ret
push
jle
dec
fcomip
cmpsb
sbb
movsb
adc
cwtl
subl
cmp
sbb
movsb
push
or
mov
mov
pop
test
or
scas
pop
insb
push
into
rcrb
mov
stc
or
xchg
inc
cltd
xchg
js
jg
test
lret
mov
pop
dec
cmp
call
lret
lret
lahf
mov
stc
adc
lods
push
sub
and
or
adc
shlb
sbbl
jmp
xor
inc
cmp
inc
fwait
pop
cwtl
movl
push
sti
stos
sbb
push
aas
xorl
add
lods
loop
lahf
adc
test
add
test
add
fdiv
pop
pop
add
jno
mov
inc
fsubp
inc
xor
js
sub
or
cld
and
mov
pop
adc
test
jg
fwait
pop
xchg
pop
jp
aaa
cmp
in
jae
shlb
mov
add
fiadds
pop
and
mov
fstl
and
inc
add
aaa
dec
or
lock
test
lock
adc
inc
std
inc
push
sti
fsubl
xlat
jl
jo
jnp
or
cmp
das
dec
lods
adc
add
popa
mov
and
inc
cmc
aad
jo
pop
cmpb
test
pop
imul
stos
rclb
loopne
sbb
jno
push
or
dec
test
xchg
shll
sahf
jne
inc
mov
repz
mov
aad
add
jae
mov
jne
xchg
dec
scas
pop
push
sub
rcrb
cmp
adc
or
insb
ds
xchg
jmp
inc
test
jne
aas
xchg
xor
int3
lret
rep
xchg
mov
jbe
aas
out
cmc
in
andl
or
imul
pop
jns
lds
pop
cwtl
rcrb
mov
mov
aad
aas
cmp
xchg
loop
mov
xor
clc
jmp
pop
js
sbb
lea
lret
mov
push
cmpsl
dec
lds
dec
sub
push
push
mov
movsl
and
dec
and
mov
mov
faddl
pushf
cmc
jmp
cs
fnsave
mov
fdivrs
dec
mov
in
lahf
data16
adc
rcll
inc
int
sbb
inc
in
jge
int3
inc
or
ficoms
daa
ljmp
mov
pop
xchg
push
scas
test
inc
std
inc
mov
jl
cld
test
mov
pop
cmpsb
sahf
pusha
loop
and
imul
and
mov
jl
mov
cmc
adc
lods
rcll
cmp
adc
dec
mov
xor
imul
iret
or
xor
jmp
mov
mov
sub
sarl
push
adc
adc
or
mov
pop
subb
enter
in
mov
mov
xchg
insb
ja
mov
cmp
inc
inc
pop
add
lahf
mov
mov
notl
pop
lock
or
dec
jle
lahf
in
sub
push
addl
sbb
sti
jge
aas
inc
cmpsb
adc
push
dec
inc
adc
inc
mov
notb
mov
mov
pop
cld
inc
inc
mov
jg
les
inc
gs
aaa
or
sahf
pop
push
adc
outsb
mov
xchg
lock
test
lods
xor
pusha
mov
sbb
inc
adc
aam
in
xchg
imul
pop
aaa
sbbl
xor
dec
jne
add
cmovnp
ja
cmc
xchg
xchg
mov
pop
mov
cmp
push
out
xchg
xlat
pop
mov
sub
xchg
push
into
jmp
mull
mov
sub
ret
pop
rclb
add
in
pop
mov
push
das
cli
jl
sbb
ret
mov
test
inc
mov
lret
or
mov
inc
sub
jno
sti
sub
loope
sbb
mov
mov
cmpsl
push
add
or
lcall
cmp
stc
ret
cmc
and
sbb
cmpsl
in
or
mov
mov
movsb
lcall
jge
xor
adc
cwtl
outsb
mov
dec
cmp
sub
mov
sti
inc
mov
lea
lret
jnp
adc
jle
stos
or
push
mov
daa
lock
sbbl
out
lods
adc
dec
xor
iret
mov
mov
sbb
jo
cmpsl
mov
mov
mov
shll
xorl
and
gs
push
in
std
sarl
orl
mov
or
adc
cli
adc
mov
mov
js
std
jnp
out
ss
fistl
cld
adc
jo
jmp
sub
or
std
xchg
movsl
out
xor
clc
out
cli
push
imul
shr
test
cmpsb
notl
stos
negl
xchg
rcl
jno
shr
test
and
cmp
gs
push
xchg
scas
pop
loope
ret
inc
and
push
push
addr16
pushf
dec
mov
in
add
xor
leave
dec
jle
inc
jl
xlat
stos
lret
fldl
aas
aaa
repz
xor
dec
sbb
imul
subb
push
pushf
popl
sub
hlt
inc
push
enter
add
outsb
sbb
xchg
jge
repnz
dec
and
sbb
pop
adc
pop
push
pop
stc
into
flds
aas
inc
jle
pop
fdivr
fs
sub
fistpl
inc
outsl
adc
rcrb
and
repnz
dec
inc
sbb
cli
arpl
mov
movsb
aad
push
mov
out
fs
jne
ret
adcb
call
flds
pop
les
pop
and
shll
mov
mov
mov
jns
daa
std
jp
dec
jecxz
jne
std
idivl
sti
loope
push
out
out
lcall
cld
inc
or
cli
inc
pop
ss
int
scas
jecxz
test
in
arpl
jne
push
mov
mov
jecxz
add
stc
xchg
movsb
jle
clc
jb
inc
fildl
jb
js
lea
pop
jecxz
fstpt
cmpb
xor
xchg
imul
pop
cltd
imul
pop
and
mov
popa
push
ret
out
cmp
das
scas
out
dec
mov
leave
push
mov
jbe
ds
call
inc
aaa
pop
xchg
scas
dec
pop
jbe
test
in
loop
fs
fistps
lret
dec
loop
cltd
es
xchg
push
sbb
loop
xchg
xlat
cwtl
pop
imul
jne
adc
add
ficomps
adc
push
popf
out
ss
aam
cs
dec
nop
scas
mov
jns
or
int
fsubs
packsswb
and
push
movsb
jo
decb
sbb
mov
testb
outsb
fistpl
mov
int
push
test
mov
pop
mov
inc
sbb
sub
cmp
adc
and
adc
sbb
xchg
bswap
add
inc
pop
mov
int
bound
je
imull
in
and
ljmp
mov
jp
leave
jmp
dec
pushf
sahf
push
adcb
cmpsl
ret
jl
clc
enter
out
dec
dec
pop
push
xchg
or
repnz
in
sbb
cs
les
xchg
jmp
divb
test
lods
fwait
sbb
test
xchg
add
dec
out
mov
push
push
mov
push
cmp
shlb
pop
in
cmp
inc
sbb
int
and
push
jge
and
int3
icebp
fcomp
cmp
imul
dec
push
cmp
test
loopne
pop
std
pop
nop
mov
push
pop
lods
mov
pusha
sbb
bound
xchg
shrl
push
jmp
fadds
incb
mov
mov
mov
pop
outsb
popa
push
adc
push
daa
pop
and
mov
fwait
pushf
sub
xchg
xchg
cmp
insl
sbb
mov
pusha
idivb
shlb
das
pop
sbb
cs
ret
cmp
jge
inc
xchg
lcall
or
jns
sarl
cltd
in
jne
and
adc
sti
addr16
mov
js
cmpsb
outsl
or
or
gs
lret
int3
dec
add
and
sbb
lret
mov
cmpl
test
test
xchg
ds
addr16
cmp
inc
jmp
pusha
cmc
sub
mov
int3
xchg
pop
sub
jns
lcall
adc
pop
rcr
xchg
sbb
roll
jbe
mull
adc
and
in
xor
lods
aas
pop
jle,pt
int3
roll
ljmp
xor
sub
push
dec
sub
in
shlb
and
sbb
outsb
orl
inc
mov
fsubrl
inc
call
test
push
icebp
sbb
add
inc
in
jbe
adc
stc
les
xchg
std
cmp
roll
fwait
stos
out
pop
sub
aam
dec
cld
pop
mov
sub
inc
mov
mov
jno
mov
jmp
mov
insb
sbb
or
pop
popf
mov
je
and
xchg
inc
pop
ljmp
inc
cwtl
nop
loope
mov
push
daa
jb
cli
mov
in
in
loope
lock
adc
or
push
push
imul
repz
mov
fstpt
sub
mov
mov
lods
jo
cmp
aaa
jl
mov
cld
pusha
push
popf
push
dec
jg
outsb
adc
pop
xchg
in
movsb
xchg
aam
fcoms
lcall
int
jne
lods
imul
mull
inc
fiadds
test
lods
add
mov
push
fdivs
icebp
in
es
cmc
les
std
cmp
fistl
inc
mov
mov
adc
jle
cmp
jnp
mov
mov
pop
lock
jnp
mov
aaa
shrl
imul
dec
jp
ja
sti
cmpsb
pusha
into
inc
call
scas
and
nop
jl
ja
cmc
sub
aad
aaa
add
lahf
and
sarl
adc
sub
mov
push
sub
aam
jp
stos
mov
pop
adc
outsl
sbb
loope
outsl
push
xor
pop
and
loope
mov
inc
cmp
mov
sbb
gs
cmp
xchg
into
pusha
dec
lods
insl
xlat
aad
fdivrl
jne
mov
jnp
push
subb
add
and
es
js
rol
jns
jl
subb
into
cld
pop
push
push
aas
pop
cs
sahf
add
dec
inc
lret
adc
mov
and
mov
jo
rcrb
in
ficoml
mov
lods
jge
xchg
mov
hlt
addr16
xchg
xchg
stos
push
enter
fmull
pop
lods
xor
xor
add
shl
cmp
push
adc
pushf
clc
xchg
cmpsl
add
push
icebp
movl
jbe
push
arpl
out
imul
lret
dec
mov
add
insb
sahf
xchg
orb
dec
popa
leave
pusha
add
and
into
popa
push
mov
xor
mov
push
stos
add
jmp
jl
sub
cmp
int
nop
xchg
pushf
popa
push
cltd
xchg
mov
adc
imul
sbb
adc
movsb
jp
sub
mov
mov
mov
loop
fdivrl
fnstcw
lahf
and
icebp
arpl
cli
lods
xchg
mov
mov
sarb
jp
inc
xchg
mov
lods
enter
push
and
jp
mov
jb
sbb
jmp
movsl
cmp
add
xor
lcall
push
cmp
sbbb
mov
mov
aam
cld
mov
dec
stos
sub
in
movsb
scas
popa
jns
fimuls
xchg
jp
mov
xchg
mov
cmp
sarb
mov
iret
repz
cmpb
jecxz
mov
mov
loop
shlb
mov
jno
pop
sub
jmp
mov
nop
shr
jb
inc
shrl
ljmp
mov
loope
or
mov
mov
push
sbb
jle
gs
cltd
out
inc
icebp
scas
outsb
sub
pop
lret
and
xor
fs
aam
or
cmp
push
push
ret
and
and
ficoml
scas
dec
xchg
mov
vaddpd
adcb
ret
and
cmp
cwtl
aam
insl
push
inc
mov
adc
jb
sbb
mov
jl
mov
pop
aaa
xor
and
gs
jle
mov
jne
jne
inc
inc
pop
repnz
add
aam
fnstsw
lahf
lods
inc
ret
pop
insl
in
dec
out
sub
xchg
mov
loopne
jmp
pop
dec
inc
jmp
testb
jecxz
sbb
pop
inc
mov
cmc
stos
in
xchg
lahf
sub
aas
jp
pop
jmp
mov
daa
jle
les
lret
inc
pop
sti
push
movl
roll
fsubp
std
mov
daa
xchg
jmp
sbb
mov
lods
push
mov
cltd
jnp
pop
in
mov
jns
sbb
xorl
movsb
or
xor
aas
xor
insl
int3
fwait
xchg
sbb
addr16
pop
dec
stos
mov
sbb
xor
fwait
call
add
std
xchg
lahf
jnp
cmp
cwtl
outsl
xor
aam
sarb
or
fisttps
adc
or
es
inc
addl
fildll
jmp
inc
dec
test
jmp
cwtl
jae
jecxz
jecxz
add
lret
add
gs
jne
push
sbb
xor
pop
arpl
mov
jno
test
mov
int
sahf
jge
mov
dec
inc
ret
fidivl
and
andb
imul
popf
add
mov
mov
push
xor
add
adc
mov
int3
ljmp
xor
push
test
sub
imul
xlat
mov
je
lcall
test
lahf
cmc
adc
dec
add
rcll
lods
stos
jg
pushf
cltd
ja
out
mov
sbbb
sbb
jp
imul
scas
jge
jnp
sahf
neg
xor
inc
cltd
sbb
inc
clc
jl
mov
push
inc
push
cld
icebp
notb
iret
cmp
insb
gs
push
popf
pop
cmp
push
push
sub
jne
cli
xor
in
inc
std
jb
sbb
inc
mov
and
or
test
jl
xchg
jge
arpl
jnp
sti
inc
stos
xchg
xor
jecxz
mov
insb
adc
jl
loope
nop
aad
stos
sarb
mov
mov
or
adc
sub
out
scas
jbe
push
sbb
adc
rep
push
int3
adc
xchg
xor
dec
loope
fcompl
mov
test
mov
mov
stos
rcr
lret
jnp
inc
push
aas
add
mov
hlt
je
imul
xchg
and
dec
or
push
xchg
jge
jl
xor
inc
push
les
jnp
or
inc
aas
add
xchg
nop
push
xor
add
fidivs
or
and
jmp
jae
cmp
add
cli
sbb
call
addr16
inc
mov
xor
lea
test
or
and
int3
arpl
aaa
idivb
loop
rcrl
dec
xor
sti
push
ds
sub
enter
xchg
pop
insl
xlat
sbb
aas
fdivl
jmp
mov
leave
out
cmp
hlt
xor
leave
mov
not
inc
push
aas
repz
cmpsl
sahf
jno,pn
cmpsb
xchg
pop
movlps
mov
push
ja
cmpsb
lock
test
xchg
aas
shrb
ret
push
adc
and
and
adc
mov
or
lods
inc
imul
dec
mov
and
imul
sbb
js
jecxz
test
or
addb
daa
sub
push
fcoms
sbb
lret
les
mov
les
imul
or
pop
cmp
push
lahf
leave
ret
js
jno
jb
jb
fcoms
add
fadd
pop
popf
pop
adc
ljmp
inc
adcl
loopne
sub
push
lock
jge
pop
mov
aas
fisttps
mov
xor
sti
movsl
push
std
aas
cmp
jp
mov
pop
lea
outsl
xchg
xchg
mov
fdivp
sbb
into
scas
mov
in
out
push
mov
gs
outsl
adc
cli
lret
inc
aaa
bound
ljmp
jl
nop
push
outsl
aas
add
test
inc
xchg
jg
or
mov
roll
push
mov
and
std
pop
adc
hlt
jmp
aaa
push
xor
pop
jbe
fildl
test
xchg
xchg
pop
mov
add
cmp
xor
or
out
fnstcw
pop
sub
sbb
je
push
pop
mov
sahf
sahf
xchg
repz
push
stos
jp
test
addr16
stos
inc
js
mov
mov
cmp
push
inc
or
adc
and
push
dec
enter
notl
shrb
ret
jge
clc
mov
mov
int3
sub
sub
add
jg
push
cmp
add
add
shll
xchg
enter
mov
xor
adc
repz
mov
jge
push
mov
add
dec
scas
inc
fisttps
mov
add
pop
mov
jl
fsqrt
icebp
xlat
and
pop
das
hlt
clc
icebp
fisttps
ja
inc
xchg
addr16
mov
jbe
mov
mov
mov
notl
fcmovne
mov
xchg
push
ss
pop
pop
daa
stos
sahf
dec
lea
xor
push
mov
and
dec
out
sti
scas
cmp
mov
lods
sub
int3
insb
test
test
sub
repz
aas
mov
inc
push
iret
mov
mov
lods
fdivrp
jmp
cmpsb
movsb
cld
or
xchg
test
imul
inc
pop
pop
push
add
ret
inc
or
popf
hlt
sbb
push
clc
inc
and
shlb
push
pushf
xor
mov
push
xor
push
xchg
ficompl
sub
test
xor
cmc
mov
inc
loope
aaa
mov
push
jl
not
orl
add
fistl
sbb
add
mov
ljmp
test
test
lods
xchg
pop
jae
ja
add
into
cld
into
sub
testb
sbb
sbb
mov
fwait
cmp
out
adc
mov
jg
mov
push
and
jp
jnp
pop
xchg
xchg
pop
test
rcr
mov
sub
sbb
xchg
mov
mov
repz
lea
and
mov
in
test
jecxz
mov
mov
jge
and
out
sbb
aad
push
xor
sub
inc
int3
mov
mov
mov
add
outsb
cmpsl
pushf
mov
cmpsb
nop
lahf
out
scas
or
shrl
pop
movsl
jl
xchg
arpl
sbb
imul
pusha
sbb
mov
xlat
mov
adc
in
or
std
lret
stc
int3
lods
jo
pop
cwtl
lret
push
lods
dec
pop
sub
addr16
movsb
or
sub
adc
jae
xor
sub
sub
sbb
push
divb
sub
fldl
xor
in
je
push
aaa
push
mov
sub
rcrl
leave
xchg
adc
in
les
mov
pop
jmp
clc
daa
out
int
rolb
ljmp
add
or
xchg
xor
loope
pop
incb
and
iret
cmp
cld
jb
jns
stos
inc
inc
inc
push
stos
dec
ret
mov
aad
cmpsb
fwait
es
mov
pop
xor
mov
and
cmp
jmp
popf
dec
lcall
sub
hlt
imulb
jecxz
cld
testb
dec
in
lods
lahf
sbb
xchg
push
ljmp
sbbl
vfmsub213sd
add
ret
int3
dec
mov
sti
xor
test
or
push
gs
out
mov
fldln2
add
push
mov
push
loopne
and
fcmovnu
stos
enter
pop
movsl
add
xchg
jns
and
or
fmul
sub
pop
gs
cltd
in
xchg
adcb
push
ss
pop
fucomip
jecxz
in
dec
or
clc
addl
add
dec
and
das
jae
dec
enter
sti
fs
sbb
insl
lock
sub
sbb
and
and
call
xchg
xchg
jne
xor
pop
sub
and
mov
fimuls
mov
imul
pop
loope
push
add
sahf
movsl
je
cmpsb
rolb
in
negb
jg
add
mov
xchg
stc
and
ficoms
pop
and
jg
jle
pop
push
lock
push
and
out
cmp
jle
in
xchg
repz
ss
and
bound
dec
scas
add
mov
movb
push
ja
aas
pushf
mov
into
mov
jg
xchg
sub
popf
test
adc
cli
call
dec
ljmp
imul
or
sub
sbb
fdivrl
and
and
sub
and
push
dec
dec
cmc
in
cmpsb
scas
adc
xorb
jp
or
stos
mov
fisttpl
lea
xchg
inc
lret
push
mov
jae
mov
iret
lea
jb
stos
bound
fmuls
loop
xlat
icebp
cld
pop
sbb
push
shlb
shl
add
ret
es
in
sbb
xchg
out
sbb
fmull
hlt
and
mov
mov
fdivs
cmc
fdivl
push
test
xorl
lds
sti
xor
mov
aaa
decl
pusha
xor
mov
lods
push
sbb
lds
dec
jle
cmpsb
hlt
xor
mov
sub
mov
mov
ret
dec
push
mov
sbb
inc
sub
push
xor
push
push
cltd
push
mov
jle
push
mov
push
jl
sbb
movsb
cltd
and
mov
mov
cmp
call
jmp
ficomps
mov
sbb
mov
mov
loopne
dec
pop
jmp
add
and
inc
push
push
clc
rol
jbe
push
fidivrs
outsl
sbb
sbb
jmp
shll
pop
lea
mov
xorl
ss
movsb
sbb
repz
cmp
insb
stos
pop
sub
insl
add
jae
mov
sbb
in
xchg
and
cmpsl
fdiv
iret
sbb
dec
add
or
inc
or
stos
sbb
fcmovne
push
stos
jge
arpl
into
pop
lea
xor
mov
dec
pop
rolb
jnp
cmc
jbe
push
jo
nop
outsl
jl
adc
sbb
xor
inc
loope
scas
mov
cmp
mov
pusha
inc
mov
mov
sahf
jle
cmpsb
in
cmp
jl
sub
lret
mov
in
lods
mov
repnz
add
aaa
stos
pop
dec
inc
sub
jb
xchg
mov
jg
enter
push
clc
pop
cmp
fisubs
add
mov
sbb
pop
fimull
sub
jle
pop
and
popf
adc
shrb
sahf
pop
into
lods
jp
popf
inc
push
mov
lret
loop
mov
shl
push
imul
xchg
enter
push
add
neg
jmp
mov
add
sbb
std
add
enter
popa
repz
popa
mov
sub
mov
outsb
enter
lds
insb
sarb
in
std
jmp
ret
ss
cwtl
addr16
addr16
pop
mov
push
push
ss
inc
adc
cld
repnz
jmp
lea
sub
lods
push
xchg
and
mov
xor
ss
dec
mov
filds
xchg
dec
push
push
cmp
inc
pop
std
int
sti
jmp
push
mov
xchg
mov
popf
fmull
xchg
add
subl
hlt
repnz
sub
pop
and
dec
dec
rcll
sub
push
xchg
ret
and
fisubrl
cld
je
inc
or
mov
jmp
xorl
jbe
inc
lea
xchg
push
fsts
adc
mov
outsb
out
pop
inc
incl
push
jl
dec
test
inc
js
or
or
repnz
jg
bound
jge
rolb
push
cwtl
jb
add
ds
test
outsl
sbb
in
adc
push
sbb
outsb
mov
jbe
dec
inc
repz
dec
inc
lods
jo
bound
xor
cmpsl
push
jmp
frstor
lods
and
pop
pop
int3
adc
mov
push
lea
pop
sub
stos
jecxz
adc
aaa
or
pop
pop
fcomps
inc
call
sub
lods
cli
mov
rcrb
xor
inc
fsubs
or
in
dec
aad
jns
or
sub
sbb
sbb
stc
ret
jne
call
pop
push
repz
pop
adc
ja
outsl
es
fadd
cmpsl
mov
rorl
inc
adc
daa
cld
jle
push
pop
stos
daa
adc
xchg
mov
cmp
pushf
mov
xchg
adc
fisubl
pop
loopne
cmp
mov
popa
lods
jl
fildl
jmp
mov
sbb
into
pop
scas
dec
das
scas
je
loopne
add
xchg
mov
mov
mov
fincstp
jecxz
add
mov
push
mov
outsl
sub
fincstp
and
scas
loop
sub
mov
mov
sarb
jle
fwait
mov
jo
cmpsl
lods
out
pop
test
cli
nop
sub
sahf
fnstsw
lds
enter
repnz
enter
inc
pop
adc
pop
ss
insb
bound
sbb
sub
lods
std
push
xor
inc
imul
mov
rorb
or
out
jne
hlt
lods
push
inc
pop
cmpsl
dec
mov
xlat
ja
xchg
ds
aad
jecxz
xchg
test
lret
dec
push
lret
pusha
jmp
or
mov
xor
xchg
ret
dec
pop
mov
dec
xor
mov
cmp
rcl
pop
dec
push
pop
shl
ljmp
xor
adc
lcall
outsl
adc
pop
push
xchg
pop
jns
xor
shrl
dec
inc
xchg
mov
or
mov
idivb
push
adc
mov
in
and
inc
add
jne
js
pop
popa
jae
push
mov
mov
sar
out
nop
out
add
inc
or
mov
cltd
pop
outsl
loopne
je
adc
decl
fs
icebp
pop
daa
sbb
dec
fistps
pushf
mov
dec
and
jge
mov
xor
mov
ss
mov
fs
mov
fcompl
addb
ljmp
negl
mov
jae
dec
cwtl
mov
sbb
fldcw
push
pushf
pop
push
in
jae
sub
clc
int
mov
imul
nop
xor
stos
jmp
mov
std
lds
jns
fistpll
or
xor
pop
or
movsl
les
pop
popl
dec
outsb
fsubrl
mov
test
add
push
cwtl
scas
rcl
jb
xchg
lret
imul
test
pop
test
adc
scas
add
jmp
rorb
dec
repnz
push
cli
inc
int
aam
dec
pop
pop
xlat
pop
scas
loop
je
cli
add
mov
gs
into
jns
movsl
dec
jbe
dec
mov
cltd
or
fidivrs
mov
xlat
cld
cmp
into
push
js
fldl
push
pop
xor
xchg
hlt
xchg
fisubrs
adc
in
and
pop
imul
dec
pop
pop
xor
neg
pop
mov
arpl
imul
fcmovnu
lds
lods
ficomps
dec
std
jnp
ds
mov
jae
push
pop
mov
push
and
in
xchg
sub
lret
sbb
push
jno
jns
rol
scas
icebp
sti
enter
imul
fmul
sahf
es
mov
mov
mov
sbb
cld
xchg
adc
sbb
or
pushf
arpl
std
sti
lcall
sbb
cwtl
mov
mov
iret
aas
movb
fistpl
mov
sti
push
fildl
movsl
andl
or
push
fs
dec
leave
cmp
sub
repz
mov
inc
jae
adc
xor
or
cmp
push
sub
xlat
jno
push
mov
mov
stos
lcall
cmp
test
sbb
in
sti
mov
xor
cmp
inc
stc
sub
pop
mov
ret
xchg
pop
mov
in
inc
aam
rcrb
inc
dec
dec
mov
xor
adc
add
shll
mov
out
clc
xchg
dec
or
xor
or
cmp
repnz
sub
enter
adc
dec
push
hlt
lods
and
addl
dec
jecxz
sub
adc
adc
inc
and
mov
cli
cli
xor
mov
addr16
es
mov
push
lea
je
inc
or
ss
cmpsb
mov
clc
mov
cmpsl
pushf
pushl
adc
push
cltd
jo
sub
clc
cmpl
jne
or
pop
divb
outsb
rcll
and
dec
pop
push
jae
clc
push
sub
stc
pop
adc
sbb
int3
in
cwtl
pop
or
xchg
mov
xchg
xchg
add
adc
mov
mov
sub
jmp
test
fwait
or
push
push
mov
movsl
sbb
js
fwait
xchg
adc
cmp
jnp
add
xchg
push
lahf
cmp
cmp
stos
add
adc
add
xor
std
dec
fs
sub
hlt
and
mov
cmp
jns
out
jmp
push
fwait
sbb
andl
xchg
lock
push
xor
dec
xor
lcall
and
shrl
fidivrl
push
jno
jbe
enter
movsl
jmp
jno
imul
adc
pop
inc
sbb
sub
movsl
repz
sub
inc
and
mov
pushw
lcall
cmp
xor
jmp
mov
push
mov
sub
mov
xor
orb
mov
out
dec
jmp
je
ficoms
inc
outsl
cmp
sahf
xor
lock
imul
jne
mov
test
add
push
mov
jns
pop
and
xchg
into
shrb
ss
rcrl
dec
cmp
sub
xor
mov
adc
lcall
pop
push
and
push
cld
inc
imul
cwtl
push
fxam
add
inc
dec
int
pushf
sarl
pushf
mov
xlat
loopne
jg
arpl
cmp
dec
aaa
mov
jne
jne
mov
mov
pop
leave
loope
outsb
add
scas
mov
jge
xchg
cli
loope
fisubrl
xor
adc
cmp
cli
in
push
repnz
push
daa
outsb
pop
add
cmp
mov
jmp
adc
cmp
pop
ret
sub
jae
mov
inc
push
scas
insl
push
jge
shl
adc
or
repnz
ljmp
ja
add
cmp
pop
cmpsl
mov
mov
mov
std
fstps
stos
in
adc
fcoml
out
and
sahf
jbe
aad
stc
mov
sbb
mov
stos
mov
shll
mov
xchg
sub
in
or
mov
jo
push
xor
mov
dec
or
stos
scas
mov
inc
cmc
dec
iret
mov
stos
or
lret
fldcw
xor
jbe
push
mov
enter
loopne
sub
pop
adc
nop
push
pop
scas
lret
jnp
popf
std
sub
xor
jo
mov
popa
push
lret
adcl
sahf
adc
iret
rol
out
lods
les
data16
mov
push
fs
aad
push
and
outsl
cmc
fmull
inc
and
pop
cmpsl
sub
icebp
mov
inc
inc
sbb
stc
xchg
mov
and
cmp
mov
mov
mov
jb
rep
mov
cmpsl
je
arpl
fdivr
out
mov
mov
outsl
pusha
adc
inc
in
mov
sbbb
fadds
loopne
and
push
xor
sub
sti
cld
sub
jbe
test
add
ret
inc
outsb
hlt
iret
ja
clc
mov
inc
jnp
cmp
pop
aaa
dec
mov
push
insb
jnp
dec
xchg
lds
jae
and
xchg
paddusb
div
jno
xchg
lock
je
mov
imulw
push
fistpl
jo
and
sbbl
inc
out
mov
loopne
subb
stos
adc
nop
int
xlat
movsb
je
dec
repz
cltd
pop
flds
out
push
mov
mov
std
lahf
jecxz
inc
mov
add
jle
and
jns
cmp
pop
loopne
push
pusha
xchg
sub
in
shr
and
aad
push
mov
mov
dec
cmpsl
psadbw
fisttps
hlt
ljmp
fsubs
stc
scas
ljmp
and
adc
cmp
adc
aad
enter
gs
sub
jmp
mov
cmpsl
cs
sti
mov
dec
xchg
jb
xor
sub
sbb
out
addr16
sub
xorl
jecxz
xchg
xchg
xor
sbb
into
mov
cmc
xlat
mov
adc
les
cld
in
push
hlt
xor
sub
or
test
cmpsl
daa
fs
mov
test
cld
xchg
pushf
stc
push
das
out
fmull
mov
jg
jmp
lds
or
mov
mov
cmp
js
push
pop
sbb
daa
das
mov
xchg
add
in
jle
leave
mov
fsubs
clc
adc
xor
mov
testl
xor
sti
addl
insl
xchg
pop
ret
dec
mov
arpl
and
cmpsl
push
js
inc
mov
out
fildl
loop
mov
pop
test
das
push
push
in
inc
fists
sti
ror
shr
test
add
sbb
pop
mov
movsb
and
and
sbb
data16
jo
imull
sub
sti
int
js
in
cltd
dec
fnsave
aam
mov
loope
or
lret
adc
lods
nop
roll
xchg
add
jae
sub
outsb
ss
push
push
pop
shr
adc
movsb
rcrl
push
sub
and
sbb
es
inc
inc
jne
sbb
insl
orl
fstl
mov
cmp
xchg
push
scas
sar
lock
mov
and
jg
fcmovu
sbb
rol
jae
sti
pop
xor
das
daa
xchg
sub
cli
imul
xorb
or
rcrl
pop
lods
ficoms
mov
outsl
add
mov
inc
xor
mov
mov
loope
mov
cs
xor
outsb
and
clc
mov
mov
xlat
bound
ss
mov
mov
pop
cmp
add
push
xor
ljmp
inc
push
dec
ss
notb
xor
xchg
add
dec
ret
push
out
sbb
cli
jmp
and
cltd
add
xor
fisttps
mov
jp
adc
or
mov
por
icebp
inc
and
jns
sub
mov
test
dec
insl
cld
rorl
aad
out
fmul
xor
cld
jg
jbe
push
adc
pop
inc
push
test
mov
inc
mov
xchg
into
repz
ret
adc
or
add
inc
mov
movsl
mov
iret
push
call
mov
and
jne
add
test
mov
insb
inc
popa
mov
cmc
sub
or
xlat
fsubs
pop
fcoml
jp
mov
xchg
pop
xchg
imul
adc
xchg
fcomps
add
mov
loopne
bound
cmp
pop
stos
cmc
mov
lahf
dec
or
ljmp
and
sahf
xor
divb
gs
push
sub
popf
xchg
sbb
out
stc
mov
leave
lods
ss
pavgb
hlt
mov
jl
pop
pop
data16
ret
stos
out
or
ss
dec
fidivl
mov
and
clc
adc
jge
daa
xor
stos
loopne
dec
je
aam
sub
lea
lahf
les
mov
and
addr16
daa
dec
jmp
cmp
loop
jae
out
push
fldenv
das
pusha
lahf
aas
or
mov
cmpsl
push
add
aad
out
test
loopne
or
sub
dec
scas
inc
or
outsl
ret
sti
sub
ss
sub
jmp
jmp
je
sarb
inc
sub
lds
inc
pop
push
jmp
mov
daa
ds
jp
movsl
idivb
and
cwtl
les
popa
adc
mov
and
push
popa
inc
add
mov
xor
or
jecxz
mov
stc
dec
lods
lods
lcall
popf
popf
push
in
nop
notl
push
subb
cld
fs
cld
aad
ds
mov
fmull
adc
movsb
fistl
inc
sbb
push
inc
std
jg
mov
sub
dec
add
push
pmulhw
xchg
testl
xor
and
jo
fwait
negb
add
cmp
inc
lret
repnz
imul
shrb
sub
imul
inc
adc
xor
push
test
cmc
mov
xchg
sbb
jb
divl
inc
or
or
dec
jg
xchg
push
test
or
adc
cmpsb
mov
sub
mov
or
pop
adc
inc
jmp
jnp
jnp
push
jp
leave
es
aam
push
or
lret
mov
cmpsl
shlb
mov
push
inc
jno
adc
sub
or
insl
add
push
fisttpl
pop
nop
fucomi
pusha
in
xchg
xchg
adc
xchg
test
inc
jg
or
add
scas
mov
and
adc
push
mov
pop
sti
daa
in
xchg
xor
mov
aam
inc
adc
popf
mov
or
bound
mov
and
sub
dec
and
add
in
xor
push
adc
cmp
insb
xlat
sbb
outsb
pusha
xchg
push
imul
add
jl
cmp
insl
nop
outsb
adc
mov
ds
xchg
and
mov
xchg
inc
outsb
push
into
lret
cmpl
add
add
repnz
das
sar
negb
in
stc
xchg
sbb
test
out
iret
cltd
sub
cmp
lea
jecxz
imul
or
cmp
sti
scas
repz
xor
jne
outsl
hlt
imul
cmpsl
push
ror
adc
fmul
inc
orl
sub
test
stc
sub
scas
stos
sub
pushf
aam
cmp
xor
mov
in
out
mov
dec
lock
add
stos
push
cmpsb
inc
and
adc
jbe
sub
popf
push
roll
jge
or
pop
insl
je
icebp
or
ja,pn
xchg
test
add
and
sti
pop
add
int3
jmp
pop
icebp
push
in
jmp
or
sbb
or
shll
dec
mov
adc
ret
cmp
lret
push
xchg
xchg
sbbb
mov
jp
sub
push
jno
xchg
sub
push
sti
mov
push
jl
xor
add
jne
and
fs
cltd
jg
imul
sti
shl
pusha
xchg
sub
cmp
outsl
mov
dec
sub
jno
test
insb
xor
leave
insb
push
pop
nop
test
mov
push
hlt
add
icebp
fisubrl
xor
movb
xor
push
pop
fistps
xor
xor
inc
cs
repnz
mov
cmpsb
lea
dec
out
jno
pusha
mov
repz
cltd
call
pop
test
mov
push
in
fst
ja
aas
xor
cmpsl
filds
ret
jg
sub
mov
popf
gs
push
lea
push
or
xchg
mov
call
pop
lret
dec
popf
mov
push
cld
jae
nop
inc
mov
in
cs
or
imul
jle
mov
xor
xchg
cmp
sub
das
xor
mov
int
iret
cmp
mov
shll
mov
jecxz
faddl
sarl
jb
xchg
inc
clc
sub
movsb
sub
stos
mov
jmp
pop
cli
cld
cwtl
push
aad
cli
jle
adc
xchg
scas
daa
cwtl
hlt
dec
outsl
adc
xorb
in
fsubl
adc
xchg
and
jp
bound
lock
mov
lret
push
aaa
clc
xor
mov
jne
popa
insb
je
cmc
imul
push
outsb
adc
cli
scas
gs
stos
jg
shrl
sbb
es
push
insl
xor
lea
cld
inc
stos
jo
cmpsl
pushf
push
pushf
or
enter
jbe
add
jno
jnp
loop
cmp
incl
cmp
jmp
cwtl
daa
jbe
loop
pop
cmp
pop
stc
add
or
cmp
cmpsl
inc
xor
pop
faddl
sub
jnp
rcll
out
xchg
loopne
stos
sub
test
iret
inc
sbb
push
stos
int3
sbb
pop
sbb
fisubrs
push
push
xchg
dec
push
outsb
mov
xlat
test
fsubrs
dec
pop
cmp
stc
xlat
pop
push
xchg
push
lcall
adc
rsqrtps
cmp
out
das
pop
ds
cmp
adcl
inc
jne
aam
cmpsb
call
mov
or
sahf
and
imul
or
xor
jbe
push
cmp
sub
mov
sbb
test
xor
and
or
or
gs
inc
jle
push
insl
ja
shl
xor
add
adc
mov
xorl
fldenv
sub
sub
sub
cli
pop
mov
dec
or
sbb
pop
orl
push
xchg
pop
pop
test
sbb
cmpsb
out
jo
call
addr16
push
push
mov
cmc
pop
jno
pushf
xchg
icebp
cmp
pop
test
cmp
orb
and
pop
mov
xchg
dec
in
sar
jle
inc
aaa
out
and
jbe
xchg
xor
shr
inc
sbb
jge
addr16
pop
fisubrl
cmc
or
bnd
and
cmpl
dec
aaa
testl
test
aad
out
mov
mov
lods
mov
mov
mov
fisttpll
out
lds
iret
aaa
gs
mov
and
ret
xor
mov
loopne
and
hlt
sub
stos
cmp
and
cmp
sbb
rolb
insb
cmp
aam
push
mov
xchg
movsl
nop
leavew
cmpsl
fisubrs
aam
jecxz
push
cli
and
test
mov
adc
rcll
jns
inc
pop
pop
pop
jo
push
mov
ret
jge
mov
jg
add
add
mov
xchg
inc
dec
cmp
mov
loope
int
pop
xor
xchg
repz
ret
inc
mov
lret
push
xchg
sbb
mov
xlat
bound
and
fs
xchg
or
inc
aam
ljmp
jl
push
mov
mov
in
or
pop
cltd
sub
hlt
add
inc
das
dec
arpl
inc
outsb
fstl
adc
dec
pop
cmp
mov
jbe
cmp
sub
sbb
movsb
adc
negl
dec
rcrb
leave
and
insb
std
addr16
cmp
jbe
pushf
jecxz
imul
mov
rcll
outsl
add
lods
push
jle
sahf
pop
movsb
icebp
xor
dec
iret
mov
inc
movsl
and
dec
paddq
aam
lods
push
out
cmp
pop
adc
inc
rcll
push
xor
mov
xchg
xchg
icebp
fdiv
das
lods
pushf
mov
adc
sub
sarb
adc
filds
cmpsb
jbe
jg
mov
and
jle
and
lret
hlt
or
shll
rcrl
daa
fnstenv
lret
gs
jbe
pop
in
loop
popa
insb
push
out
inc
add
or
sbb
xor
pop
leave
bound
icebp
int
xor
mov
stos
out
or
mov
gs
stc
xchg
mov
sbb
cmc
mov
imul
push
cltd
sbb
sbb
or
add
icebp
fstl
hlt
push
mov
jmp
push
out
add
test
cltd
cmp
insb
mov
out
push
cmp
loope
dec
test
in
pop
xchg
cmp
mov
stos
in
test
dec
test
xor
test
sahf
push
test
pop
fistpll
or
shrb
mov
ret
cmp
iret
sbb
aad
lret
add
imulb
les
pop
lcall
add
fildll
sahf
mov
xchg
movsb
ret
dec
enter
and
jae
xchg
dec
mov
fldenv
dec
sub
pushf
push
sub
orb
dec
adc
mov
decb
xor
xor
fistpll
dec
pushf
mov
rcrb
je
or
or
or
pop
dec
mov
push
pop
dec
mov
adc
sbb
testb
jmp
cmp
cmp
loope
xchg
adc
aad
cltd
sbb
add
adc
dec
test
mov
stos
lahf
lcall
and
cmp
ret
or
jmp
out
xor
sarb
into
pusha
pop
icebp
test
and
in
adc
sub
loopne
cld
loopne
cmp
movl
mov
out
adc
in
clc
jne
xchg
sub
addr16
push
out
repz
xor
lret
push
inc
sbb
mov
mov
in
pop
std
ret
arpl
mov
shll
sbb
pop
test
imul
mov
mov
iret
rcpps
xchg
hlt
sbb
ds
cmp
and
push
mov
jne
xchg
adcl
fdivrl
jae
shrb
mov
inc
mov
leave
cmp
add
pop
xchg
ljmp
mov
cwtl
cwtl
movsl
sub
sbb
es
rol
loopne
and
mov
dec
fs
lock
push
jae
inc
push
int
sub
aam
or
sbb
fcompl
sub
adcl
imul
outsb
mov
mov
push
push
cmp
icebp
dec
les
inc
xchg
adc
dec
inc
andb
aas
dec
cmp
pop
test
pop
int
pop
xlat
xor
push
lods
mov
insl
mov
mov
clc
or
imul
icebp
outsb
adc
jmp
lods
aad
out
ret
cmp
xchg
leave
out
mov
lahf
iret
inc
jns
push
jns
xor
dec
mov
iret
and
mov
mov
sub
dec
jmp
xor
pop
divb
fidivrs
pop
or
xor
ja
push
sti
adc
xchg
cmc
and
neg
jle
xor
pop
and
outsl
cmp
jecxz
aas
cmp
dec
lds
pop
mov
add
arpl
jmp
jno
adc
int3
mov
popf
and
mov
pop
jle
call
call
in
push
lods
mov
repz
inc
or
ja
push
xchg
xchg
jnp
mov
mov
das
xorl
mov
mov
call
cmpsl
xor
adc
test
cwtl
jle
in
sub
in
cmc
or
pop
xchg
int3
jae
cltd
mov
and
outsb
sub
test
pop
aas
testl
addl
lea
jne
insb
out
outsl
iret
and
mov
int
aas
xlat
dec
sub
pop
pop
iret
inc
adc
or
push
or
stc
mov
in
xchg
jae
cmpsb
xchg
or
cli
and
add
fidivl
push
test
mov
and
inc
dec
or
xor
xor
nop
scas
mov
fsubrl
mov
enter
test
ja
stos
test
pop
inc
movsb
roll
fdivrs
add
pop
xor
popf
cmp
inc
inc
fnsave
jmp
lods
out
aas
push
push
push
ficompl
hlt
inc
pop
add
addr16
arpl
sbb
seto
xchg
sub
fdivrs
pop
inc
and
in
cli
mov
and
retw
inc
xchg
mov
push
fcompl
xchg
push
jl
in
insl
lret
pushf
sbb
mov
out
loopne
mov
sbbb
dec
jl
push
test
fcmovu
pop
mov
mov
in
pop
fwait
inc
cmp
lock
mov
arpl
jmp
add
or
fisubl
jl
jge
cmp
mov
xchg
sub
pop
mov
movntq
addl
mov
push
mov
inc
out
or
mov
insl
leave
pop
pop
je
iret
in
cmp
or
sbb
dec
or
mov
punpcklbw
test
cs
call
cmc
sub
and
dec
jb
pop
mov
out
outsb
mov
dec
inc
mov
inc
scas
daa
jg
scas
cmp
mov
pop
lahf
mov
out
lods
jge
repz
push
mov
gs
fimull
xor
push
shlb
ss
shll
iret
std
shrl
and
inc
cmpsb
ja
bound
loopne
mov
mov
jns
out
sub
mov
push
bound
aad
loopne
sub
and
mov
outsb
push
jle
inc
or
ljmp
test
mov
xor
rolb
mov
lcall
aad
and
mov
fcoms
mov
filds
lret
mov
xchg
xchg
push
adc
sub
dec
stc
mov
js
loopne
dec
push
call
fistpl
adc
sub
cmc
add
loop
ds
rolb
jo
sbb
and
out
add
xor
sub
dec
xor
test
jnp
in
popa
xor
adc
faddl
pop
push
loop
sub
in
adc
jne
ja
mov
lods
and
mov
clc
xchg
cmp
add
fcmovnb
pop
push
stos
andl
stos
out
fisubs
mov
ss
mov
aad
cmp
cmp
lret
jp
in
xorl
pop
xor
lcall
inc
fxam
cmpsb
scas
fisubrl
jne
iret
sub
fs
lahf
in
aam
or
sti
movsl
popa
mov
mov
and
adc
pop
lcall
imul
test
xchg
sbb
aas
xlat
or
jl
out
lock
js
mov
cmp
pop
jbe
mov
adc
inc
fdivr
or
lods
cmp
mov
xchg
jne
mov
int3
fbld
daa
imul
int
add
stos
jge
rolb
gs
repnz
inc
pop
mov
repz
repz
rcrl
push
add
xor
push
int3
fdivl
push
push
xlat
testb
fildll
jge
dec
pop
xchg
ficoml
lret
mov
xchg
push
xor
mov
ret
repnz
into
jmp
repnz
jecxz
mov
xchg
in
je
cwtl
or
jecxz
frstor
pop
mov
or
ret
and
jmp
dec
xor
int3
mov
imul
mov
inc
dec
sahf
addl
inc
jne
sahf
popf
jge
loopne
aas
aas
push
rcrb
pop
sbb
rcrb
icebp
adc
ret
pop
dec
outsb
and
mov
sub
lahf
jae
add
mov
scas
mov
push
mov
and
out
movsl
jl
or
and
cltd
cmc
push
lret
movsb
mov
ja
lret
jns
int
dec
mov
jnp
stc
sub
sbb
mov
dec
cmc
out
sbb
mov
insb
xchg
push
fcomps
push
pop
pop
pop
lock
movb
xchg
mov
sbb
or
clc
fstpl
std
in
imul
cmpsl
cwtl
fists
mov
rcrl
pop
jl
jns
js
mov
cmp
dec
in
jne
pop
jp
adc
orl
jae
es
mov
test
test
pop
mov
sti
mov
ljmp
mov
lahf
pop
xchg
test
sbb
fstpl
arpl
dec
out
dec
fdivl
lods
dec
lock
shrl
mov
and
popf
js
mov
mov
insb
cmpsb
es
in
push
fdivs
jg
and
lcallw
and
add
loopne
mov
mov
lds
negl
xchg
insb
cmp
cmpl
jecxz
jae
cld
xchg
inc
inc
dec
loope
movl
mov
ljmp
jle
add
add
rol
jecxz
push
scas
fdivrl
shr
push
mov
push
push
jl
mov
mov
roll
ret
push
lahf
lea
add
fsts
mov
inc
cli
stos
push
or
ret
out
call
in
shlb
mov
shll
in
outsb
xlat
in
mov
sub
sbb
fidivrs
sbb
add
adc
es
sbb
add
pop
test
iret
mov
inc
cmp
add
jno
inc
inc
testb
and
mov
push
dec
or
xchg
rorb
push
pop
notl
or
imul
push
xor
xchg
ss
dec
xor
loop
jae
inc
jle
adc
pushf
ds
cmp
imul
test
cmp
sub
push
dec
jle
xlat
out
aaa
mov
in
and
jne
sarl
stos
mov
jnp
movsl
pusha
std
inc
les
sub
and
xor
jg
sbb
iret
xor
fldl
cmp
cld
fdivs
xorb
aad
and
loopne
dec
xor
xor
push
and
jo
jmp
loope
std
cmp
sbb
or
in
and
stc
add
mov
fidivrs
fwait
inc
int
xchg
lret
clc
mov
pop
mov
fs
sahf
adc
sbb
push
dec
jge
test
test
out
loope
xor
mov
loopne
jno
js
mov
call
loope
xchg
js
inc
nop
fistl
test
insb
jo
shll
cmp
sar
xor
cmpsl
xchg
cltd
cli
je
mov
loope
jne
stc
lds
mov
adc
pop
add
cld
outsb
mov
add
fwait
mov
xchg
pop
loopne
or
mov
pop
inc
mull
push
scas
lds
pop
mov
cmpl
les
popf
inc
sbb
inc
sub
movsl
xchg
scas
ret
imul
imul
rcrl
sbb
sbb
lret
lret
jnp
jnp
movsb
push
into
adc
arpl
dec
dec
movsl
mov
outsb
xchg
xor
std
loope
imul
jae
jo
cmpsl
mov
in
in
stc
rolb
das
stos
aad
nop
xor
push
lahf
xchg
pushf
sub
cmp
and
sbb
bound
adc
lea
fisttpl
in
sbb
imul
je
out
rcpps
cld
jmp
push
pop
push
dec
loop
or
fucomip
test
into
pop
add
fldt
and
outsl
adc
fmulp
cwtl
cmp
iret
pop
clc
jb
dec
stos
jg
adcl
xchg
push
movsl
inc
dec
push
cmc
pushf
cmpsb
jb
jecxz
test
pop
ficompl
jo
push
int
or
mov
adc
jmp
aaa
cmp
sub
in
mov
xor
jne
aad
mov
xchg
mov
dec
aas
xchg
fbstp
lds
cwtl
mov
mov
scas
jg
in
sub
xor
enter
lock
arpl
mov
push
pop
fs
dec
loopne
cs
insl
dec
int3
fisubrl
sbb
inc
xor
mov
pop
out
loope
lret
aam
test
sarl
popa
mov
lret
mov
aas
xchg
push
mov
ret
xor
jnp
mov
ljmp
adc
pop
jae
aas
into
push
call
adc
xchg
cmp
inc
jo
jb
add
ret
into
jle
cmc
idiv
mov
pop
adc
js
test
xchg
sub
imul
mov
cmpl
stc
or
stc
dec
adc
sbb
adc
roll
and
pop
outsl
loop
push
jns
stc
push
xchg
jns
jmp
cmp
sbb
dec
mov
mov
pop
stos
rolb
insl
imul
push
cmp
scas
rolb
mov
pop
cmp
mov
into
movsl
jg
fdivl
hlt
mov
ud2
or
or
sub
ja
jp
cmp
fbstp
enter
jb
in
jg
rorb
ret
sub
xchg
cltd
sub
and
xor
movsl
test
out
les
inc
bound
scas
xchg
pop
roll
test
cwtl
or
pop
cmp
pusha
jne
sub
sbb
sub
orl
loopne
hlt
nop
in
sahf
xchg
scas
gs
fmul
imull
cmpsb
pop
pushf
xchg
pop
inc
decl
enter
inc
lahf
imul
js
mov
ud2
and
fildl
xchg
out
push
lods
nopl
mov
sub
push
jp
pushf
movsl
nop
imul
adc
aas
xchg
lods
sbb
fcoml
jae
inc
push
sti
mov
data16
jge
pop
clc
jo
scas
xor
das
fwait
cltd
mov
jge
addr16
pop
mov
arpl
ret
push
sbb
push
shrb
je
push
mov
xor
into
push
lea
ror
adc
or
sbb
mov
pop
pop
pop
cs
movsl
rclb
stos
xchg
pusha
mov
jne
jl
call
std
lock
push
shll
das
push
rep
add
pop
inc
adc
jle
test
cmp
and
lock
sbb
test
stc
fisubrs
dec
xor
loop
pop
mov
test
cwtl
dec
sub
sbb
sarl
repz
ret
pop
xchg
push
inc
icebp
lcall
dec
mov
andl
aaa
mov
gs
adc
iret
fwait
data16
ss
push
xlat
jle
repnz
mov
xchg
imul
lds
or
mov
cld
mov
sahf
mov
stc
popa
pop
xchg
dec
ja
imul
mov
adc
mov
push
lret
leave
jmp
imul
shrl
sbb
int3
add
or
and
sub
fcmovne
ljmp
movsl
loope
and
xor
jg
mov
xlat
stc
iret
xchg
nop
mov
dec
jns
jae
in
out
rorl
js
repnz
dec
jmp
daa
pop
sbb
add
lds
jp
gs
push
lds
popa
and
scas
push
sbb
orl
lret
adc
inc
adc
lea
fidivrl
cmp
dec
ffree
mov
mov
aam
test
mov
push
sti
mov
loopne
fistps
ja
dec
test
dec
fucomip
lock
jmp
jb
mov
pop
int
ljmp
or
rcr
push
cmp
cltd
stc
dec
sub
pop
pop
push
test
divb
std
enter
xor
cmpsl
jbe
pop
cld
adc
out
dec
adcl
push
fidivl
sbb
mov
mov
cli
clc
mov
pop
jl
sub
enter
inc
dec
rorl
cwtl
decl
pop
sti
mov
les
loopne
iret
rol
mov
imul
pop
or
xchg
sub
stos
push
push
sub
sub
mov
inc
movsl
fwait
jo
adc
mov
add
cli
aam
outsb
sbbb
bound
loopne
push
cs
mov
mov
xchg
loop
cltd
icebp
jns
xchg
mov
insl
mov
push
cltd
sbb
aad
jg
pop
pop
mov
xchg
sbb
xor
xchg
in
push
dec
adc
into
sub
cmp
xchg
shrl
push
push
mov
pop
mov
ss
or
out
std
push
clc
mov
movsb
xor
mov
aas
xchg
mov
dec
adc
incb
push
or
add
decb
popa
fs
or
test
bnd
mov
je
in
out
cmpsb
in
fistpl
add
cmp
push
sbb
test
dec
testl
lods
sbbl
clc
sbb
pop
mov
xor
and
mov
iret
add
jmp
loopne
das
dec
ja
push
jg
sub
push
bnd
rol
adc
dec
in
pop
push
dec
dec
inc
ja
dec
movsl
cltd
movsl
aaa
stos
notl
out
adc
dec
ljmp
lods
pop
jo
inc
mov
mov
icebp
or
aas
dec
mov
arpl
xchg
mov
sub
push
and
sbb
mov
lods
push
scas
adc
mov
stos
mov
sub
rcrl
push
orb
sbb
fwait
sub
jp
mov
push
fists
daa
loope
scas
mov
jne
add
in
hlt
movb
push
mov
stc
dec
add
push
loopne
and
or
pop
js
ret
jmp
aas
mov
out
and
lock
call
test
ljmp
push
dec
popf
lock
pop
clc
push
popa
xlat
jmp
lcall
jne
test
push
call
push
dec
push
pop
pop
mov
hlt
out
push
imul
lds
dec
jne
push
lods
int3
cmpsl
push
scas
cmp
sarb
test
dec
repz
popa
and
inc
stos
jns
leave
push
lahf
mov
fstl
imul
stos
rolb
sub
fucomp
negl
out
mov
sub
or
push
jns,pt
and
mov
stc
cmc
outsb
or
jo
das
xor
loop
pop
or
inc
adc
adc
mov
or
cmp
mov
inc
or
decb
inc
test
loop
data16
push
sub
leave
jmp
loope
jae
std
cmp
push
das
repz
rcrl
push
pop
ss
test
push
mov
xchg
clc
cmp
xchg
xor
int3
addb
sub
sub
xchg
push
dec
push
clc
inc
in
add
sbb
cmp
mov
nop
xchg
adc
mov
xor
fs
enter
lcall
arpl
xor
add
leave
jge
mov
dec
gs
mov
pop
sub
sbb
cld
subl
inc
out
cmp
fcompl
sub
adc
roll
xchg
cmp
or
inc
call
mov
rolb
mov
cmpsb
jle
sbb
sub
dec
adc
mov
xchg
sbb
fsubrp
inc
adc
punpckhdq
inc
hlt
sbb
xchg
sbb
and
dec
pop
lcall
adc
aaa
cmp
push
jle
filds
test
cmp
inc
mov
in
dec
sbb
gs
mov
cwtl
aad
or
fwait
and
sbb
add
inc
leave
arpl
ss
inc
loope
testl
mov
mov
je
xchg
lahf
push
adc
sub
sbb
cmp
inc
push
cli
xor
in
mov
pop
ret
jmp
xchg
pop
push
in
sbb
gs
das
xchg
add
sub
pop
subl
add
popa
out
jnp
pop
adc
add
popf
insb
aam
pushf
imul
sarb
xchg
aaa
fnsave
mov
and
lds
push
loopne
int
inc
pusha
add
sub
jg
push
div
rcl
adc
adc
inc
dec
sbb
repnz
jmp
inc
cmpsl
cmpsl
cld
fistl
je
insl
mov
push
inc
cli
jecxz
lods
sub
push
data16
dec
or
dec
pop
js
gs
or
and
stos
cltd
ds
test
and
pop
in
and
adc
outsl
sub
lcall
lcall
rorb
shlb
adc
adc
sti
push
sbb
mov
enter
in
dec
outsl
outsw
fdivr
mov
mov
and
test
clc
call
push
and
pop
stos
orb
push
dec
frstor
adc
sahf
aas
mov
rorb
mov
aaa
add
and
je
scas
daa
inc
dec
fwait
mov
mov
in
xrelease
push
mov
shrl
sahf
pop
push
in
aad
cmp
out
call
lret
cld
jo
push
inc
cmp
rcrb
mov
jmp
daa
test
ja
out
sub
testb
and
push
dec
mov
mov
mov
push
xor
stos
bound
stos
xchg
repnz
jno
ds
cmp
shrl
call
popf
es
or
sub
rcl
sti
and
push
nop
fnstcw
aaa
jp
aad
cmp
test
dec
and
push
cmp
push
lcall
iret
jo
cmp
add
xor
adc
mov
jl
sub
aas
inc
xor
pop
mov
jle
and
and
cmpsb
sti
jns
shlb
adc
mov
sub
fbstp
lcall
or
xor
mov
jp
or
adc
adcl
or
in
push
cwtl
and
jecxz
cld
dec
std
and
mov
jnp
add
sub
dec
dec
inc
pop
mov
into
es
push
loopne
dec
push
lcall
cmp
xor
lret
out
xchg
push
pusha
test
sti
sbb
dec
push
les
adc
jnp
sahf
mov
fildl
cwtl
movsb
cmp
sti
xchg
xor
inc
int3
xor
iret
or
pop
jnp
push
fsts
or
mov
cmpsb
mov
xor
adc
in
cmp
xor
pop
dec
fstps
in
out
jb
mov
adc
adc
cmp
fldcw
sub
fwait
fs
mov
js
jl
movb
nop
mov
cmp
decl
push
adc
mov
pusha
cmp
cltd
mov
xchg
out
jns
sar
dec
push
add
jg
insl
add
inc
cmp
mov
sbb
xor
arpl
lret
inc
cmp
mov
mul
aaa
mov
std
in
and
and
gs
in
xor
lahf
xchg
inc
mov
outsb
lahf
ror
or
mov
sub
and
pop
into
jg
mov
loopne
mov
in
cld
push
mov
hlt
add
and
xchg
mov
push
push
popf
sbb
pop
in
dec
ret
xchg
fcmovb
lea
pusha
mov
aas
jmp
xchg
jl
les
call
adc
jno
sahf
fisttpll
mov
cld
pop
pusha
push
xchg
add
cmpsb
in
pop
cmp
pop
push
sarl
or
xlat
test
test
pop
repz
add
pop
jmp
inc
stos
outsl
adc
sub
and
mov
mov
sbb
cli
cmpsb
int3
outsl
xor
xor
push
dec
xchg
lahf
pop
ds
out
push
loop
ljmp
shrl
or
jecxz
aas
jns
push
jmp
repz
std
in
sahf
and
scas
dec
dec
dec
push
jo
pusha
inc
outsl
iret
lahf
adc
std
scas
movsb
fists
rcrl
dec
aad
dec
das
jne
and
pop
or
stos
dec
xor
rcll
cwtl
fsubp
test
pop
fwait
test
insl
out
pand
push
pop
fdiv
ss
out
dec
add
cld
inc
inc
aam
xor
cmpsl
or
dec
cwtl
out
out
les
es
scas
ds
or
popa
shlb
lods
repz
call
jp
int
fcom
aad
mov
mov
arpl
or
mov
test
cmp
add
shlb
inc
pop
aad
jnp
push
sbb
cmp
inc
addl
clts
mov
pop
or
or
ss
bnd
rol
aaa
stos
mov
push
lods
test
sti
hlt
adc
mov
insb
fldenv
push
push
jb
dec
sbb
shlb
shl
out
sub
into
fisttpl
adc
aaa
jp
mov
push
fstpl
cmp
fstpt
push
std
imul
pop
cwtl
mov
mov
addb
hlt
xor
iret
out
jnp
add
sub
test
jb
movsb
cmpsb
dec
push
mov
cmp
call
pop
iret
pop
push
enter
and
pop
arpl
push
adc
sub
mov
xchg
cltd
cmp
mov
leave
lods
stc
dec
fidivrs
lahf
incb
adc
inc
mov
push
jecxz,pt
test
sbb
repnz
sub
pop
mov
mov
leave
adc
in
daa
iret
jmp
data16
mov
or
sub
cmp
jg
mov
and
dec
inc
xor
or
fildl
jl
stc
pop
and
jns
mov
xor
lock
push
lea
cmpsb
xor
dec
jno
sbb
jne
call
daa
jle
iret
fs
push
xchg
pop
push
in
in
mov
sbb
sub
mov
or
pop
orl
pusha
fnstcw
adc
out
rol
or
out
xchg
jno
hlt
add
sub
mov
insb
mov
adc
add
push
les
mov
in
loope
mov
cmp
xchg
sbb
loopne
lret
xchg
jecxz
shrl
add
mov
mov
cli
loopne
push
stc
mov
dec
jp
incb
mov
adc
or
rorb
adc
add
mov
pop
xor
pop
iret
pop
jecxz
jbe
cmp
dec
das
sbb
inc
ja
adc
push
jmp
sar
jo
xchg
fistpll
dec
pop
lahf
nop
in
pop
mov
sub
stc
xlat
fldl
adc
clc
jg
jmp
inc
ljmp
push
xor
les
pop
adc
cmovge
mov
mov
int3
xor
mov
xor
mov
mov
in
inc
lret
cvttps2pi
pop
xor
add
movsl
xor
inc
or
jecxz
mov
mov
jmp
std
or
adc
sbb
movsb
ds
fdivl
fs
fdivrl
dec
and
sbb
xchg
sub
dec
lea
jl
and
scas
aaa
and
xor
mov
movsl
push
lods
cmp
outsl
int
mov
addr16
je
push
bswap
xchg
xor
dec
addr16
fstps
sahf
outsl
jp
xchg
adc
and
xchg
mov
rcr
int
mov
stc
mov
out
or
loopne
xchg
mov
jae
popa
xchg
or
js
and
adc
mov
pop
call
pusha
sub
adc
or
pop
shl
add
repnz
cmpsl
add
std
push
sbb
in
dec
andl
and
sbb
insl
dec
inc
cmp
sbb
aas
aaa
adc
dec
or
xor
lcall
mov
inc
cld
sub
adc
clc
xlat
repz
or
roll
setns
in
out
enter
roll
mov
push
into
xchg
sub
mov
lock
and
out
xor
mov
hlt
arpl
scas
xor
pop
enter
mov
jno
scas
call
dec
xchg
mov
jle
sbb
insb
mov
and
xor
inc
xchg
ja
pop
rolb
adc
test
jo
jge
jns
call
push
jecxz
sbb
add
movsl
movsl
fcmovne
stos
mov
ljmp
out
mov
je
and
aaa
into
icebp
es
enter
push
ja
xchg
scas
adc
nop
fdiv
movsb
cmp
mov
adc
push
inc
jo
fstpt
fnstsw
jnp
inc
sub
cmp
jb
je
pop
cmp
jmp
pop
dec
mov
outsl
jno
call
or
add
imul
and
gs
sarl
inc
jl
fprem1
movsb
push
add
push
jmp
sbb
cmp
push
outsl
popf
lock
push
mov
inc
mov
adc
ss
jne
cltd
jle
ja
push
lret
fisttpl
popa
sbb
xchg
sbb
mov
sbb
jb
dec
mov
jb
aam
mov
iret
sbb
jge
scas
addr16
rcl
lret
loope
xor
mov
push
mov
and
je
ret
xchg
xor
or
loope
jbe
aaa
mov
xorl
aaa
sub
lret
fs
pop
pushf
lods
sub
mov
adc
cmc
push
or
shl
mov
jmp
xchg
add
jo
sti
daa
ss
cwtl
int
arpl
jle
xor
in
adc
jp
nop
lds
dec
add
aad
jge
cwtd
mov
out
fdivrl
ja
js
pop
mov
pop
enter
mov
adc
inc
jno
cmp
mov
jne
repnz
popa
jp
scas
rcr
mov
cwtl
test
mov
je
push
jb
jle
jmp
imul
std
fcomi
sbb
xor
mov
and
add
xchg
repz
js
loop,pt
xchg
fsub
xchg
stos
repnz
or
imul
jmp
cmp
out
cli
addr16
dec
mov
lods
mov
jae
fstpt
fs
jle
sti
ret
pop
rolb
push
gs
mov
lea
call
les
jnp
seta
xlat
in
scas
push
negl
push
or
mov
out
loope
dec
test
mov
xor
sub
into
iret
insl
mov
test
add
jge
sbb
add
or
jp
sub
xlat
dec
mov
popf
cmp
fs
sbb
mov
shrb
sub
lock
mov
inc
mov
mov
jae
je
cmpl
rcrb
add
out
or
add
pop
ret
jno
xchg
mov
and
pop
dec
fidivl
shrb
daa
cmpsb
xor
cmp
addr16
adc
inc
popf
in
jle
jl
in
arpl
pop
add
pop
sub
xorb
mov
pop
mov
pop
rorl
in
iret
imul
and
gs
fistps
cmpb
test
and
iret
and
pop
into
xor
gs
stos
test
aam
inc
sub
das
repz
sub
test
hlt
dec
adc
jmp
jg
mov
jne
mov
dec
adc
js
leave
int
mov
cwtl
mov
out
xchg
mov
mov
mov
jbe
mov
xor
jno
jmp
dec
in
arpl
rorl
cld
insb
fidivl
ja
in
mov
and
add
sbb
test
je
push
cmp
in
sub
addr16
mov
adc
lea
add
sub
iret
mov
mov
sub
and
rcl
push
je
bound
jg
dec
cs
inc
fbstp
cmp
mov
rorb
lret
sub
std
dec
loop
test
cltd
add
inc
out
and
mov
push
mov
add
pop
push
xor
movsb
mov
inc
ja
daa
or
repnz
jmp
push
ficoml
inc
mov
xchg
add
cwtl
fnstcw
adc
xchg
imul
xchg
std
in
and
mov
push
xchg
or
lea
imul
sbb
mov
mov
pop
aam
push
sub
mov
call
fiadds
aas
mov
inc
lods
push
js
shlb
fwait
dec
jecxz
cmp
popf
xchg
xchg
push
dec
pusha
mov
mov
add
mov
push
add
push
repz
dec
lret
xor
pop
cmp
stc
lret
decl
adc
cmp
cmp
mov
loop
sbb
sub
cmc
inc
push
mov
jcxz
sbb
add
sbb
mov
xlat
in
sbb
add
and
adc
xor
loopne
aad
test
ja
mov
out
mov
cli
add
fisttpll
mov
adc
xchg
test
shl
jae
ds
scas
out
test
or
call
mov
in
mov
and
dec
xchg
add
inc
xor
pop
test
pop
pushf
stos
push
xchg
pop
xor
jb
loopne
cmp
push
out
cmp
inc
xchg
daa
adc
cli
cmp
sar
sahf
inc
ret
mov
daa
cmc
and
adc
dec
test
out
fld
lock
push
cs
fidivrl
lods
fcomps
rorb
cmp
sub
loopne
and
pop
push
jg
iret
push
and
enter
ret
cmp
dec
aad
ret
les
adc
idivl
into
lret
cmpsb
repnz
add
jmp
sbb
enter
hlt
xor
shll
mov
cmpsl
lahf
cmp
adc
icebp
and
jnp
testb
xor
fisubrl
xchg
ja
dec
into
jl
fstpl
fsub
add
dec
cwtl
lahf
pop
mov
lods
inc
and
or
aaa
xchg
mov
pcmpgtd
pop
mov
or
lock
inc
dec
pop
mov
sbb
or
push
xchg
mov
cmpsb
mov
sbb
xor
xor
sub
and
dec
popa
ror
mov
dec
mov
mov
pop
mov
addr16
rcrb
pusha
in
jecxz
lret
test
mov
and
push
data16
jne
xchg
int3
lcall
iret
jge
loop
dec
xor
js
mov
or
mov
leave
mov
mov
sub
cmp
pop
aam
aad
push
lcall
loop
addr16
xchg
js
int
sahf
icebp
push
shlb
adc
xchg
cmp
push
inc
push
jl
adc
xchg
mov
pop
inc
out
aad
mov
repnz
repnz
mov
mov
sbb
mov
xlat
xchg
xorb
jecxz
or
adc
or
push
pop
lret
sbb
addl
cmp
divl
pop
mov
mov
and
and
cltd
insb
cli
dec
sub
mov
sub
fisttps
cwtl
notb
bound
fnstcw
cld
cmpsb
inc
test
aas
bound
xlat
adc
jb
popf
movsb
mov
xorb
sub
mov
fst
push
std
and
addr16
insl
sub
jnp
xorb
cli
cmpsb
push
or
pop
ja
mov
popl
ss
adc
push
xchg
pop
adc
pop
popf
mov
jmp
out
sub
lea
and
call
jae
das
xchg
push
cmp
mov
jb
push
sbb
pusha
lock
out
pop
pusha
hlt
rorb
bound
pop
rorb
lret
fs
outsb
mov
pop
test
cmp
cs
scas
inc
sarl
icebp
fidivs
sub
xchg
movsl
loope
dec
dec
or
sbb
jae
fistps
dec
clc
cs
cmpl
cmp
bound
pop
lret
push
add
dec
mov
daa
push
sbb
les
mov
adc
shrb
inc
pop
and
dec
or
mov
shll
sbb
into
fwait
jb
jno
lahf
fcomip
mov
pop
xor
loope
cli
repz
lcall
ja
adc
adc
dec
outsb
les
mov
pop
xchg
fisttpll
stos
dec
pop
imul
rcll
shlb
insb
in
inc
repnz
cmpsl
sti
pop
xchg
imul
mov
cmp
and
inc
ror
sbb
adc
repz
pop
mov
xor
fsub
lods
mov
cmp
bound
xchg
xor
add
into
mov
movsl
inc
jmp
xor
cmc
cs
ss
adc
loope
clc
adc
xlat
sub
scas
sbb
pop
cmp
mov
pushf
js
inc
div
pop
pop
mov
test
movsl
cli
fwait
jne
xor
jle
popf
cmp
sbb
ljmp
push
add
loop
mov
iret
pop
sub
mov
loopne
inc
cld
insb
mov
mov
sbb
or
subb
dec
push
imul
pop
dec
sbb
popf
cmp
adcl
mov
pop
add
mov
nop
popa
ficompl
pop
xchg
mov
fdivl
adc
sub
repnz
mov
es
stc
cmc
imul
dec
and
lods
in
add
mov
nop
in
push
shrb
frstor
dec
int
inc
pop
lds
xor
std
movsb
mov
mov
orb
or
push
hlt
push
fsubrl
mov
lahf
sti
roll
lcall
mov
out
and
xchg
dec
mov
push
imul
add
add
fninit
xor
decl
stc
adc
shr
xlat
xor
test
or
cmp
push
mov
mov
xchg
ret
sub
cli
not
sub
dec
fcmovnbe
jmp
hlt
push
cs
loop
sbb
xor
push
dec
jecxz
mov
mov
mov
pop
adc
test
dec
stos
dec
mov
push
pop
aas
inc
cmc
ret
loop
sti
fdivl
xchg
stc
mov
xchg
rcrb
sub
add
fs
out
test
mov
cwtl
js
fisttpl
stos
and
je
lods
push
test
stos
movsl
sub
out
jp
mov
in
scas
cmpsl
xor
push
sub
lahf
lret
imul
or
aad
inc
push
push
ja
xchg
sarb
sarb
in
std
stos
sub
jmp
push
rol
mov
or
fildl
xor
sub
inc
jns
jecxz
or
pop
addb
aam
cltd
test
popa
inc
popf
sbb
pop
pop
add
scas
sbb
lcall
sub
xchg
je
jns
les
repnz
les
outsl
mov
in
adc
iret
fcmove
test
pushf
and
jne
imul
or
and
sbb
dec
jns
jle
dec
sbb
testl
xor
rorl
mov
cmpsl
rol
inc
jo
sbb
out
dec
xchg
mov
stos
loop
adc
ja
test
test
sbb
stc
cmpsb
xor
push
jb
pusha
divl
cmp
rcr
test
sbb
push
cmpsb
call
mov
cwtl
jb
inc
mov
sub
aad
stc
pusha
incb
aad
loope
jp
ja
insl
sar
popf
adc
repz
outsl
push
dec
jg
lock
lret
addr16
pop
adc
idivb
mov
clc
leave
repz
sbb
and
rorl
rolb
pop
fwait
mov
cmp
std
imul
add
sub
jg
mov
lods
sub
dec
fimuls
inc
jge
lcall
sub
stc
xchg
fldt
test
rcrl
subb
test
repnz
dec
mov
lods
and
jmp
js
repz
dec
jns
mov
outsb
mov
insb
das
out
hlt
subl
pop
pushf
mov
popf
lods
dec
sub
stos
pop
dec
mov
push
flds
fs
pop
in
sbb
fisttpll
dec
out
pushf
dec
fisubl
mull
push
xchg
fwait
cmp
and
in
fimull
movsb
jno
repz
jecxz
mov
loopne
pushw
popa
ds
lds
jo
into
jle
cmpsb
ret
popa
or
pop
insl
jo
jge
lret
pcmpeqb
scas
rol
mov
jg
push
mov
push
cmp
xlat
jp
cli
push
imul
add
loope
add
repz
testb
lret
lea
testl
cmp
int3
ljmp
test
xchg
add
xchg
adc
push
cmp
add
popa
mov
adc
pop
inc
add
dec
cltd
clc
nop
xlat
pop
dec
ljmp
mov
xlat
adcb
mov
jge
adc
mov
mov
arpl
pop
inc
mov
popa
cmp
out
popa
or
rclb
mov
mov
mov
or
adc
pop
out
xchg
gs
clc
scas
sub
pop
pop
shl
arpl
mov
sbb
fsubl
je
ds
jge
arpl
push
pop
dec
rolb
in
sarl
ret
in
cmp
sbbl
push
jns
in
mov
dec
dec
data16
shrl
mov
sbb
mov
dec
lods
je
dec
adc
inc
sti
push
andl
out
xor
or
pop
adc
pop
dec
jbe
xor
gs
inc
ds
pop
push
mov
adc
aad
sbb
cmpb
and
sahf
adc
mov
fstl
pop
incb
add
mov
dec
lods
repz
adc
imul
jl
dec
mov
xchg
push
pop
rcll
int3
aam
fs
sub
lods
push
call
mov
inc
xchg
decl
pop
ret
rolb
std
mov
push
popf
mov
jne
subl
fcompl
test
fiadds
out
mov
mov
por
dec
or
push
inc
jbe
lods
or
mov
xor
adc
into
int
aam
jns
add
fistpl
adc
icebp
jne
xchg
in
in
into
push
enter
push
sub
testl
ret
scas
jae
inc
pop
or
jecxz
movsl
xor
mov
in
outsb
test
xchg
ds
pop
cmp
out
sti
mov
cli
xor
enter
mov
jmp
shrb
sub
test
jns
clc
shrb
cmc
stos
cmp
mov
or
das
imul
xor
inc
cmp
and
xchg
jns
sub
fistps
adc
jle
addb
lahf
sub
shl
pop
shl
pop
adc
repz
ss
call
jns
pop
add
aam
test
les
pop
fimull
adc
int
push
lcall
mov
dec
adc
add
inc
add
dec
das
test
jle,pt
out
add
xchg
mov
in
xor
fimuls
cmp
dec
in
out
mov
push
xor
test
jl
push
jmp
inc
rdtsc
ss
shrb
mov
xchg
frstor
or
mov
fbld
push
mov
push
or
repz
sbb
stos
mov
jb
pop
fcoml
bound
icebp
mov
sbb
xlat
cwtl
cmp
mov
aad
imul
dec
shlb
or
in
push
pop
pop
pop
popfw
pop
data16
neg
in
cld
rorl
out
bound
and
je
rcll
popf
xor
or
xchg
xchg
pop
lds
xlat
push
mov
aam
sarb
test
stos
xor
sub
movsl
iret
push
sub
mov
bound
loope
lock
mov
aas
fnstenv
xchg
dec
cmp
mov
fstp
mov
pop
mov
cmp
ss
fcmovnb
mov
jle
lcall
cmc
mov
pop
sub
and
sbbb
lret
mov
xchg
popf
daa
loope
pop
andb
mov
call
inc
pop
cmp
or
jae,pn
mov
scas
xor
sbbb
inc
aad
popf
jecxz
clc
incl
xchg
imul
inc
in
cmc
sub
into
jle
movsb
fistps
xchg
xorb
inc
and
movsl
flds
or
push
xor
jp
test
xchg
sbb
mov
sbb
cld
test
inc
dec
insl
adc
out
xor
fnstsw
mov
idiv
out
push
je
stos
repnz
lcall
push
cmp
sub
loope
push
clc
pop
mov
cmp
mull
mov
cmp
pop
ja
dec
push
in
add
cwtl
lock
cltd
xor
mov
push
btc
mov
mov
jmp
sub
pop
mov
mov
aam
into
mov
mov
leave
mov
lret
arpl
loop
icebp
jle
lods
test
jae
ret
push
pop
inc
imul
mov
fsubl
imul
or
pusha
and
mov
loopne
ljmp
lods
les
xchg
dec
and
cmpl
arpl
shll
pop
jae
jo
add
push
mov
sbb
dec
call
jbe
sbb
dec
mov
add
cmp
xlat
jecxz
xchg
xor
movsb
xchg
mov
and
or
and
mov
js
xor
xlat
jne
das
add
sti
push
mov
jno
pop
jns
fidivs
mov
fsubs
pop
aas
xchg
mov
and
inc
inc
sbb
sbb
fwait
mov
ret
push
je
push
and
and
xchg
and
popf
jb
adc
mov
add
lea
pop
faddl
push
sbbl
jmp
fstps
je
adc
add
adc
div
imul
jecxz
and
mov
xchg
xchg
sub
inc
sub
loope
sbb
mov
add
lea
mov
sbb
jmp
and
movsl
add
mov
test
cld
inc
clc
push
out
inc
ja
mov
stc
pop
addb
fisttpl
add
lret
outsl
mov
push
mov
loop
lds
sbb
xchg
sub
mov
lods
add
cwtl
xchg
shl
push
or
inc
sub
loop
xor
out
push
jne
movsl
pop
or
fucomp
sbb
xchg
icebp
sbb
cmp
std
sbb
and
jo
lahf
popf
xor
push
adc
xor
pop
in
add
lock
sub
cld
lcall
mov
pop
out
dec
cmpsb
outsl
fidivrl
test
mov
stc
flds
mov
xchg
shlb
pop
rolb
mov
test
cmp
jmp
gs
outsl
fwait
jl
cmpsb
or
jo
leave
jns
test
adc
jecxz
popf
js
pop
push
sbb
push
push
in
or
enter
jns
in
addr16
daa
es
lds
mov
movl
sub
pop
xor
xor
ljmp
mov
dec
sub
mov
test
pop
movsb
sub
lcall
mov
mov
std
ret
data16
sub
sbb
cmp
leave
aaa
push
jno
mov
xor
insl
insb
out
jmp
and
xchg
loope
add
hlt
test
shl
roll
sti
fldl
inc
mov
inc
xchg
inc
push
mov
lea
cmp
cmc
xor
cwtl
les
loop
adc
mov
js
mov
pop
std
out
cmp
add
out
movl
dec
movsl
shlb
rclb
movsb
ds
or
push
fistpll
cwtl
and
mov
jnp
add
push
clc
mov
jl
dec
icebp
sbb
leave
mov
nop
repnz
cld
mov
add
xor
subb
repz
fimuls
rcrb
mov
testb
jmp
ss
jae
dec
bound
bound
fs
sbb
sub
cli
fstl
sub
push
in
dec
call
imul
cmc
outsb
mov
jns
jbe,pn
cmp
xchg
inc
jmp
sub
out
xchg
leave
jl
cmp
inc
mul
add
mov
fildll
aad
add
dec
es
mov
in
inc
xchg
lret
add
dec
lods
mov
pushf
ret
mov
jp
cmp
imul
imul
mov
stc
mov
inc
sub
imul
ja
mov
rdtsc
adc
das
popa
cmpsb
daa
fdivrp
xchg
mov
int
push
mov
cs
rcrl
cmpsb
sub
int3
push
cmp
rcrl
lahf
inc
cmpl
dec
cmp
xlat
popa
arpl
popf
clc
jl
leave
lds
imul
andl
stos
enter
fisttpll
sbb
clc
mov
inc
xchg
mov
jp
adc
and
sub
push
cmc
mov
mov
loop
jbe
jecxz
les
sbb
mov
faddp
ret
into
add
cmp
pop
mov
dec
ds
jl
push
iretw
cmpsb
pop
sub
out
fsub
sbb
jp
imul
in
outsb
in
mov
mov
xchg
loope
arpl
and
dec
and
andl
pop
push
and
cmp
xchg
cmp
scas
xor
and
sbbl
inc
lock
add
in
dec
cli
push
stos
sti
dec
subl
bound
adc
jbe
es
sbb
fdivs
std
xor
cmpsl
idivb
inc
insb
ret
cmp
or
je
into
adc
js
lods
and
push
and
and
jl
sbbb
jle
fnsave
sub
mov
lret
mov
cmpsl
mov
repz
call
sbb
push
movsb
adc
bound
pop
fmul
push
in
imul
mov
xlat
std
and
cmp
aas
push
mov
sahf
ja
dec
or
icebp
pop
lods
dec
daa
inc
movb
push
nop
pop
pop
adc
mov
push
leave
les
inc
ds
xchg
mov
push
jl
sbb
insl
js
rcll
push
lahf
fwait
incb
jnp
mov
fs
jno
test
pushf
not
xchg
push
or
inc
cmp
mov
sbb
xlat
inc
pop
add
int3
lcall
and
test
cltd
nop
cld
jp
fbstp
push
jnp
add
jecxz
adc
and
cmp
and
mov
or
test
jle
shrb
mov
mov
cmp
xor
outsb
mov
mov
fstpl
pushf
movsb
lods
jo
or
je
push
cmc
int
add
fsubs
pop
std
jp
push
jl
push
cmpsl
mov
push
out
pop
mov
lret
jl
xchg
and
imul
pop
jle
fbld
mov
inc
mov
fcmove
hlt
push
adc
mov
push
push
push
lods
dec
mov
mov
add
scas
cmp
dec
test
mov
sub
jne
loop
das
loop
int
add
daa
pop
xchg
rcll
scas
enter
ljmp
movb
add
or
jl
stos
aad
xchg
ficomps
mov
jno
mov
mov
lahf
push
xchg
cmp
xor
jo
mov
sahf
shll
bound
outsb
push
inc
rclb
mov
popf
inc
sahf
jmp
pop
inc
sti
xor
jmp
repnz
out
mov
gs
les
xchg
out
bound
push
xorl
movsl
jmp
popf
mov
shll
cmpsb
out
stc
mov
bound
mov
pusha
imul
iret
push
mov
lcall
sub
leave
push
add
add
ret
cmpsb
push
fdivrs
in
push
into
adc
movsl
notl
mov
and
inc
leave
xor
cmpsl
js
lods
fsubrs
les
dec
pop
fucomip
sbbl
add
push
push
adc
ljmp
outsb
sub
or
xor
xchg
jbe
std
outsb
cld
sti
and
inc
aas
push
mov
or
mov
or
cmp
dec
adc
rorl
cmp
mov
add
cmp
inc
pop
push
mov
xor
dec
and
xor
jmp
sub
movsl
imul
ds
fiaddl
stos
push
jmp
jb
add
cmc
mov
nop
js
rorb
cmc
iret
sbb
fldt
ds
mov
sbb
xchg
fnsave
movsb
sub
scas
xor
mov
and
das
fwait
addr16
mov
mov
jnp
lahf
and
push
jb
mov
sbbl
in
loopne
hlt
popa
mov
lea
js
sbb
ret
push
mov
cmpsl
mov
mov
dec
icebp
sahf
sbb
scas
pushf
hlt
lcall
stc
pop
gs
and
rcrb
adc
push
addr16
xorb
ds
dec
pop
pop
sahf
sbb
or
lods
adcl
arpl
mov
mov
and
inc
mov
inc
loope
dec
fiaddl
fsubp
mov
sub
mov
lahf
jecxz
fmull
rol
in
xchg
imul
je
lret
leave
mov
lds
and
addb
test
test
addr16
pop
jp
ljmp
in
push
dec
int
pop
and
xchg
jb
ret
adc
fmulp
mov
add
dec
cmp
aaa
push
or
ret
adc
inc
or
ds
pop
popf
in
shlb
fwait
aad
fcmovb
imul
pushf
movl
jl
jle
or
mull
mov
out
inc
add
xor
adc
rcrl
call
cmpsl
mov
sti
dec
pushf
jg
mov
push
loopne
jg
mov
leave
jp
xor
push
clc
frstor
das
movsb
sti
sub
adc
mov
pop
dec
inc
in
shll
mov
aaa
es
cli
hlt
fnsave
jnp
push
inc
sub
or
aas
fs
aad
inc
addr16
mov
cmp
inc
inc
cmp
mov
jae
faddl
mov
and
pop
pop
cwtl
popf
sub
ljmp
int3
add
into
ret
add
sbb
and
jbe
mov
add
mov
inc
lods
daa
js
popa
popa
jg
dec
das
js
jb
sti
pop
lods
movl
aas
sub
xlat
lret
sbb
aaa
push
orl
mov
jmp
push
and
mov
daa
subb
jbe
cli
in
push
cmp
insb
ljmp
mov
leave
add
lea
mov
movsl
push
inc
xor
xor
pop
push
aad
cmp
pop
mov
in
addl
push
push
fst
js
icebp
jnp
mov
push
ret
mov
push
imul
jnp
mov
fldenv
rcpps
call
fiaddl
hlt
cmp
addb
mov
scas
cmpsl
push
fnsave
sub
std
cmp
mov
outsl
lcall
pop
cmpsl
inc
push
mov
dec
xor
cmp
int
dec
repnz
gs
push
fwait
rcll
mov
sub
lea
shll
push
jge
mov
loope
je
rcrb
and
lods
pop
add
xor
pop
jae
mov
aas
cmpsb
shll
mov
in
dec
jo
add
outsb
subl
or
scas
mov
mov
aas
cmp
cmp
dec
pcmpgtd
loop
and
dec
push
pusha
rcr
xchg
insb
push
and
cli
out
mov
dec
imul
cld
orb
fstps
push
insl
orb
dec
lret
sahf
mov
cmp
xor
mov
push
nop
sub
aam
jno
jo
in
aas
in
pop
scas
sub
out
mov
or
lahf
push
call
lahf
lods
inc
icebp
test
ljmp
mov
jmp
jg
pop
sarb
ljmp
or
daa
jp
mul
mov
xchg
scas
ss
pop
add
pop
sbb
je
and
rcll
cmpsl
leave
mov
fsubr
leave
pop
icebp
test
nop
jnp
inc
add
sbb
inc
in
xchg
loopne
nop
scas
ja
testl
aas
mov
dec
movsl
popa
orl
pop
loope
iret
dec
icebp
dec
lahf
push
shlb
xor
mov
leave
sub
mov
clc
sbb
jp
adc
jb
push
sbb
jge
jg
lds
pushf
jecxz
pop
add
les
shlb
pop
and
cwtl
mov
push
mov
sti
bound
xchg
or
scas
mov
jno
push
mov
mov
mov
add
sarb
mov
pushf
out
pop
lret
jg
shll
mov
je
mov
pop
xor
sub
int
jg
loopne
fldl
test
iret
sbb
mov
inc
mull
jle
inc
dec
xlat
clc
mov
mov
loopne
scas
dec
cli
inc
cmp
sbb
inc
push
lea
mov
faddl
addr16
mov
and
mov
pop
incb
push
sarl
mov
aam
aad
xor
xlat
adc
pusha
lds
iret
out
cmpsb
stos
sbb
rorb
dec
imul
pusha
int
adc
xchg
int3
sbb
mov
pop
jle
fadd
push
stos
push
sub
cmc
jl
rcll
clc
pop
adc
sti
arpl
jp
add
pusha
mov
dec
mov
mov
push
sub
cmpl
lods
sti
sub
sbb
sbb
xor
push
int
adc
movsl
fwait
sub
xchg
aad
add
cmp
sar
xchg
inc
int
in
sbb
cwtl
ds
out
push
xchg
dec
jecxz
repnz
out
sti
mov
xchg
mov
into
xor
xor
inc
adc
in
fcmove
test
and
jle
add
add
sbb
int
sti
sbb
fs
pop
hlt
add
xor
push
push
lods
inc
icebp
jnp
cli
in
fistpll
ret
jl
pop
movsb
test
push
inc
mov
pushf
imul
je
xchg
pop
mov
cmp
or
call
cs
dec
ds
pop
xchg
jg
in
fsub
out
lods
imul
mov
pop
lret
movsb
add
push
fs
shl
call
add
aas
xchg
ret
xor
sbb
adc
lahf
xchg
or
enter
enter
cli
or
sub
repz
stc
or
mov
lret
out
pusha
and
mov
or
lcall
xor
nop
sahf
call
push
scas
pusha
and
out
add
push
jns
negl
mov
pop
lahf
insl
pop
cmpb
xchg
enter
mul
cwtl
pop
mov
outsb
jnp
cmc
fwait
in
xor
decb
xchg
cltd
xor
or
mov
sbb
in
add
dec
pop
hlt
movsb
jl
push
or
inc
call
pushf
and
or
into
in
pop
fisubrs
xor
pop
repnz
sbb
dec
adc
lock
push
jecxz
lock
lea
dec
xlat
and
pop
dec
jne
inc
xchg
mov
sbb
pop
lock
cltd
dec
fs
ret
repnz
outsb
fiaddl
pop
hlt
push
xchg
adc
jbe
ja
pop
adc
js
pop
jbe
leave
gs
adc
add
aam
push
mov
leave
xchg
int3
mov
ret
mov
jns
test
fistpl
addr16
aad
int
jns
push
and
xchg
sub
loope
xor
xchg
shll
lret
rorl
int3
sub
test
jecxz
pushl
sub
aam
addr16
pop
jo
jl
lods
ret
mov
jns
js
add
iret
add
cmp
roll
cmc
sub
sbbl
cli
cwtl
push
lahf
xchg
fsubl
or
fidivl
mov
aas
sbb
mov
dec
cli
clc
fcompl
cmp
aam
idivl
jbe
nop
bound
sub
dec
cmp
mov
xor
ljmp
xlat
shr
mov
loope
stos
jno
shl
mov
jb
jp
sub
push
stos
mov
push
movsl
pop
jne
rcl
and
dec
xorl
inc
les
mov
int
inc
jb
shl
in
and
stos
xor
dec
nopl
subb
jle
xor
dec
push
fdivrs
cmpsl
loopne
and
imulb
xchg
mov
daa
cltd
add
mov
sbb
aas
call
bound
ljmp
and
mov
push
fs
movsl
repz
inc
add
bound
repnz
loope
sarb
mov
fisubrs
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
push
push
mov
push
call
lea
push
lea
push
lea
push
call
test
je
mov
push
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
mov
push
push
mov
push
push
push
call
movb
mov
add
mov
mov
movl
mov
push
call
call
pushl
pop
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
mov
call
test
jne
push
push
push
call
call
push
push
push
push
push
call
test
je
push
push
push
call
mov
mov
call
mov
cmpl
jne
push
call
add
push
push
push
call
xor
pop
mov
pop
ret
sub
push
push
call
lea
push
call
push
call
cmpw
je
push
push
push
push
call
push
call
add
jmp
incl
xor
loop
mov
mov
nop
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
dec
push
test
pushf
mov
pop
push
movl
cmp
int
push
rcrb
data16
stc
aad
sub
adc
lods
adc
lds
xor
add
mov
int3
add
add
pop
roll
lretw
cmp
adc
cwtl
dec
lret
cmp
enter
insb
mov
stos
outsl
xchg
movsb
jb
jo
testl
call
enter
push
push
cmpsb
lcall
xor
pop
xchg
ds
sbb
mov
subl
cmc
in
dec
cld
flds
in
int3
add
inc
mov
inc
or
xor
scas
inc
mov
or
ds
xor
loop
mov
dec
or
xor
out
mov
inc
or
scas
mov
dec
mov
jne
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
jmp
mov
xor
bound
adc
mov
and
loop
mov
inc
sbb
scas
xor
loop
mov
addr16
inc
mov
jle
ds
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
addb
xor
dec
or
mov
mov
inc
pop
jnp
push
les
mov
sbb
xchg
xor
add
mov
add
loop
in
add
mov
xor
loop
mov
inc
sub
scas
aam
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
inc
or
scas
xor
loop
mov
dec
or
scas
xor
loop
xchg
cmpsb
xchg
cli
mov
jge
scas
scas
mov
in
rol
push
sub
mov
ret
pop
popf
jnp
cmc
fs
adc
or
neg
adc
lods
mov
pusha
lahf
ret
into
xorl
mov
jne
sbbb
xchg
adc
fisubs
cmpxchg
add
or
aad
rclb
xor
movsb
test
mov
gs
es
jbe
adc
add
jp
lret
outsb
adcl
push
jge
loopne
xor
adc
adc
js
mov
sbbl
enter
mov
mov
mov
in
aam
xchg
add
or
lcall
add
test
packssdw
lret
jno
psadbw
cmp
or
addr16
repz
shr
mov
lahf
pop
cmpsl
pushf
bound
cmp
inc
jl
sub
addr16
xor
push
add
dec
ja
fisubrs
dec
call
push
fstps
in
xor
sbb
shlb
push
in
jle
sbb
out
cmp
sahf
in
out
cmp
fistl
mov
push
push
dec
mov
loope
xor
lret
lea
mov
pop
jp
fdivl
pushf
jb
pop
shll
add
hlt
fbstp
in
cltd
ja
push
add
lahf
fiaddl
lock
sub
jge
inc
stc
sbb
mov
adc
inc
cld
loope
pop
mov
xchg
test
sbb
jno
rclb
or
push
xor
ja
xacquire
mov
mov
mov
call
add
leave
mov
mov
aaa
mov
loopne
or
sub
loop
adcb
outsl
bound
icebp
out
mov
sbb
or
stos
subl
add
test
comiss
pop
xor
mov
pop
loope
mov
jp
cmp
jo
inc
push
es
test
shlb
sarb
cmp
hlt
loopne
movsb
or
fwait
add
call
mov
mov
sub
jae
jp
sub
dec
lods
out
insl
call
pushf
psubd
mov
shrl
cmpsb
clc
jb
push
push
mov
mov
lods
lds
cwtl
xorb
loope
xchg
inc
shl
xor
mov
mov
orb
stos
in
and
in
pop
mov
mov
mov
xchg
pop
loopne
push
loop
pusha
mov
gs
xor
mov
test
popa
js
enter
dec
ds
xor
mov
add
jp
mov
mov
pop
mov
arpl
icebp
repz
or
sbb
adc
mov
mov
xchg
jne
mov
out
adc
setbe
ret
mov
inc
ss
outsl
addr16
pop
movsl
fbstp
imul
pop
decl
mov
daa
lret
mov
aam
out
add
scas
das
sarl
and
mov
outsb
lret
dec
rcll
ljmp
fs
ret
push
xor
pop
insb
mov
push
add
cs
mov
push
add
mov
sbb
xchg
jmp
pop
mov
les
lahf
mov
sub
cmpsb
jo
adc
push
xor
pop
sbb
inc
notb
or
xor
stc
cwtl
cld
or
sub
adc
roll
jbe
rcl
das
clc
dec
sti
lahf
inc
push
jmp
pushf
nop
cmovno
clc
dec
mov
mov
sbb
ret
push
pop
push
pop
aam
xor
xchg
mov
xor
dec
lods
lahf
daa
pop
or
mov
jnp
sbb
iret
imul
mov
sub
xorl
bnd
lea
cmp
jno
push
cli
pop
iret
stos
jle
mov
xor
xchg
imul
push
pop
mov
inc
dec
pop
push
jg
dec
shll
lds
lahf
pop
outsl
mov
push
push
int
ds
xchg
push
subl
inc
pushf
mov
enter
in
dec
out
aaa
xlat
pusha
cmc
mov
loope
lods
test
jno
decl
jnp
dec
add
push
or
cwtl
xor
out
fdiv
push
mov
dec
sub
push
inc
js
bound
cmp
mov
lcall
lds
xchg
hlt
xchg
inc
or
xchg
std
lds
cmp
pop
loopne
movsb
stos
push
outsl
push
push
or
mov
or
push
and
scas
sbb
call
inc
out
leave
mov
popl
cmp
faddl
inc
inc
mov
pop
xchg
fistpl
push
xchg
aas
pop
testl
push
adc
mov
testb
ficomps
mov
sbb
negb
in
inc
int
mov
dec
leave
ja
rcrb
ja
std
or
sub
cmpsl
pop
jo
aam
push
cli
into
scas
push
mov
xchg
aaa
testb
insb
aad
pop
mov
mov
push
adc
inc
movsl
pop
and
mov
xchg
xchg
in
mov
or
ss
adc
sti
cmp
jb
xchg
sub
nop
or
mov
cli
xchg
cmp
call
cs
cmp
dec
mov
hlt
dec
xchg
inc
mov
push
aas
je
daa
cmp
add
mov
je,pt
pop
test
sub
loope
sahf
jne
out
es
ds
outsl
sti
sub
mov
sbb
cltd
fadd
das
xchg
popf
push
add
sbb
sub
push
mov
pop
ds
push
and
mov
enter
imul
mov
xchg
int
aad
loope
fiaddl
int3
pop
add
jge
inc
inc
adc
jbe
inc
add
shrl
mov
sub
cld
xchg
aad
ret
and
mov
int3
inc
adc
clc
inc
cmp
loope
sar
int
test
sbbl
inc
vmovdqa
or
jmp
xchg
outsb
test
add
adc
out
mov
dec
xor
mov
push
int
jno
into
mov
in
sti
not
xor
push
imul
test
dec
xor
add
sbb
pusha
xchg
push
sbb
jle
aaa
pushf
push
aam
jno
sub
std
cld
aad
push
mov
push
ja
sub
mov
lcall
movsb
shrb
push
push
incl
into
jno
ret
fucomi
jecxz
fs
insl
ret
jecxz
cmp
lret
pushf
pop
stos
cs
cmp
or
arpl
sub
ds
shlb
arpl
and
sbb
loope
fcoms
and
aam
push
cmp
sub
cmp
out
adc
frstor
out
adc
push
iret
insb
mov
incl
sub
ds
scas
inc
cmc
loop
jp
sub
xchg
addr16
mov
scas
mov
addb
pop
call
sbb
and
loopne
mov
fidivrl
add
jg
mov
jae
mov
mov
ss
and
xchg
inc
out
sbb
add
insb
push
les
cmp
dec
imul
or
push
cli
out
lods
int3
mov
fists
dec
loopne
lahf
movsb
mov
inc
daa
out
inc
sub
testl
xlat
and
adc
idivl
lret
addr16
sti
and
loope
jo
jo
or
arpl
xor
xchg
stos
fstl
in
incl
sub
mov
in
in
pushf
and
mov
pop
leave
push
xor
add
xchg
pop
hlt
ret
sbb
icebp
cmp
shrl
aaa
xor
mov
movsb
xor
jbe
dec
in
movsb
lds
mov
xlat
rcr
lahf
ret
fadds
inc
add
fimuls
sti
mov
jo
sahf
pop
scas
sub
jne
lret
mov
rclb
setl
or
mov
loope
insl
add
push
mov
pop
out
xor
fstps
sub
rclb
imul
adc
cmp
dec
lock
adc
inc
orb
rcll
pushf
arpl
mov
xchg
and
insl
and
push
mov
adc
scas
cmp
and
jg
mov
repnz
add
nop
fsqrt
movsb
ss
lock
pop
andl
sub
and
xor
int3
pop
cmc
xchg
add
inc
mov
mov
inc
mov
inc
xchg
clc
add
lret
loope
in
sbb
push
or
or
popf
dec
sbb
cld
xchg
shr
pop
mov
leave
pop
jb
push
mov
pop
ss
int3
push
and
outsb
adc
cmp
or
incl
xchg
pop
nop
cltd
pushf
outsl
scas
cmp
mov
imul
and
mov
add
xchg
push
push
mov
xchg
jl
pusha
xor
sbb
xchg
jb
loopne
jle
dec
out
mov
jne
jno
jnp
adc
loop
fidivs
xor
bound
inc
adc
mov
pop
and
leave
push
xor
fs
outsl
mov
or
in
sub
cmpsl
jecxz
into
clc
rcll
adc
imul
fnsave
mov
aad
pop
loope
inc
sahf
push
cmp
sub
mov
in
mov
xchg
pop
test
fisubs
mov
insl
sub
or
in
ret
adc
sub
cmp
mov
out
mov
in
jae
or
push
xchg
lahf
sbb
loope
or
andl
fisttpll
lret
sub
imul
fcmovnb
mov
pop
ret
and
mov
addb
repnz
repnz
pop
adc
scas
jae
adc
popa
jae
push
negl
out
addl
aas
cmp
or
cwtl
arpl
cmpsb
mov
jmp
mov
jbe
popf
sahf
fldcw
and
mov
std
pop
jnp
sub
inc
clc
xor
outsb
dec
add
mov
xchg
mov
mov
aas
xlat
bound
stos
cld
stos
mov
out
mov
stos
iret
cmpsb
outsl
push
mov
repz
push
jle
xchg
dec
mov
scas
cmpsb
sub
sbb
in
pop
daa
lret
cmpb
mov
stc
and
xchg
mov
scas
inc
fs
jnp
imul
xchg
fidivl
lock
mov
push
and
cs
das
jge
stos
leave
pop
mov
rcll
icebp
jl
repnz
scas
mov
sti
jo
sub
ljmp
aad
test
and
pop
and
out
leave
loope
into
or
pop
push
dec
sbb
les
stos
cwtl
test
mov
jle
aas
xchg
add
or
adc
xchg
add
mov
shll
xchg
scas
mov
push
cmp
mov
sub
mov
psubusw
ss
cmp
mov
fmuls
or
mov
sub
imul
dec
pop
xchg
fcmovbe
out
pop
xchg
dec
xor
or
jb
or
subl
xlat
es
mov
mov
cmp
jb
pusha
xchg
or
mov
jl
mov
inc
sti
jo
xchg
push
call
push
push
push
call
xor
add
ret
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
