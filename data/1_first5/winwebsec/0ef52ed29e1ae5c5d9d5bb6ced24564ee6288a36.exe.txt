sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
call
mov
push
call
lea
push
lea
push
call
test
jne
push
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
add
mov
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
push
push
push
call
movl
jmp
movb
movb
movb
push
call
pushl
pop
mov
mov
push
call
movl
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
mov
push
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
push
mov
push
call
es
add
or
and
mov
jb
mov
cmpsl
cmpsb
push
test
out
mov
dec
ja
and
push
in
sub
ljmp
xor
adc
addr16
call
xchg
cmp
movsb
sbb
xchg
sti
notl
dec
gs
out
add
mov
cmp
sbb
adc
mov
mov
int3
addr16
jns
test
ljmp
push
shrl
nop
cmpsl
je
pop
idivl
jge
push
sti
add
xchg
mov
mov
mov
rolb
dec
mov
jge
fwait
in
mov
ret
add
fists
add
jge,pn
out
test
mov
aaa
push
leave
jl
or
push
mov
les
in
dec
adc
ja
mov
in
mov
jnp
pop
cmp
aaa
cmpsl
or
push
or
pop
mov
inc
arpl
mov
cmp
inc
jle
ror
inc
add
dec
add
inc
add
or
cmc
adc
clc
add
fwait
lret
repnz
pop
pop
cmpsl
push
cwtl
xchg
mov
ja
jmp
pop
sbb
xor
fidivrl
inc
inc
lods
mov
imul
sub
ret
rcll
aaa
dec
jle
push
push
push
xchg
xchg
test
pop
mov
sbb
push
and
loope
mov
sbb
or
cwtl
les
mov
ja
gs
mov
fsubrp
pop
jle
dec
mov
add
cmp
add
pop
jmp
xchg
jge
pop
shl
sbb
jb
clc
cmc
fxch
or
scas
dec
hlt
cmpsb
push
sbb
cld
adc
sbb
cs
testb
inc
jb
push
lods
cwtl
ljmp
popa
in
pop
xchg
js
pop
xor
mov
iret
jmp
iret
cltd
popf
push
sub
cld
testl
ss
fs
dec
mov
mov
jg
js
add
xlat
in
sub
lahf
mov
lahf
xlat
inc
mov
push
repz
adc
add
cmc
loope
orb
dec
stos
adc
cmp
xchg
dec
adc
out
push
sub
cltd
mov
pop
adc
and
push
push
aam
mov
push
fistpll
mov
mov
xchg
sub
andl
pop
xchg
dec
shrb
inc
mov
fsubs
gs
cs
add
or
mov
jge
ret
pop
inc
mov
add
jbe
mov
and
outsl
pop
pop
lahf
daa
pop
movq
ja
mov
push
das
add
cld
adc
jno,pt
push
mov
push
cmpsb
test
adc
mov
dec
cmpsb
cltd
push
incb
outsl
bnd
gs
je
and
maxps
mov
sub
sub
aas
inc
outsl
sub
shrb
add
sub
out
stc
lods
pop
aad
sahf
cld
xchg
movsb
jnp
cwtl
dec
out
jns
xor
outsl
ret
insl
mov
inc
pop
and
push
insb
fwait
xchg
sub
jne
std
fstpt
inc
xchg
std
jmp
lods
sbb
pop
stos
dec
insl
aaa
pop
push
dec
lea
and
nop
inc
fstpt
inc
out
and
xchg
add
lea
adc
push
push
ljmp
fldl
out
hlt
inc
inc
popa
cli
push
jp
xchg
sbb
arpl
sti
and
inc
push
xor
std
dec
mov
into
stc
pop
adc
push
push
mov
loop
xchg
ljmp
mov
inc
out
hlt
stos
fstps
icebp
movntps
fnstenv
lcall
nop
shll
and
mov
mov
mov
in
mov
cmpsl
inc
int
fisubl
mov
je
idivl
dec
mov
nop
mov
inc
dec
add
iret
push
ljmp
or
jae
aaa
cmp
fdivrl
mov
fsubrs
xchg
pop
ss
mov
scas
push
inc
daa
addr16
jo
leave
ss
fldt
dec
mov
mov
push
mov
jns
fstl
std
stc
out
outsb
adc
testl
mov
jmp
jno
xchg
push
fsubl
cmp
or
mov
xchg
cmp
cmpl
int3
xor
icebp
mov
adc
mov
in
pop
enter
je
lcall
cmp
dec
sbb
cmp
aad
jmp
mov
test
mov
jno
lods
xchg
hlt
js
pop
shll
les
ret
mov
xor
adc
outsb
rolb
mov
icebp
sbb
xchg
ljmp
out
fnstenv
scas
lcall
int3
or
je
push
push
mov
cmpsb
xchg
popa
jecxz
sbb
notb
arpl
mov
imull
dec
jbe
cli
std
outsb
mov
push
test
shlb
lds
adcl
sbb
adc
call
dec
fsubrl
ja
call
iret
mov
sbb
int
mov
pop
leave
pop
push
ljmp
jno
add
pop
int3
repnz
std
xchg
cmc
xorl
dec
in
shll
movsl
sbb
inc
call
bound
mov
cmpsl
jmp
pop
ds
fadds
outsl
pop
repz
mov
xor
push
mov
pop
sub
cmp
sub
mov
cmc
add
lds
jb
adc
mov
aaa
fmuls
cmp
imul
mov
fidivrl
dec
out
fildll
push
fidivl
xor
mov
mov
jmp
or
dec
out
test
sahf
in
popf
arpl
mov
fistpll
xchg
test
das
in
test
sub
add
stos
lds
in
or
loope
xchg
das
cmp
jl
jbe
pusha
cmpsb
ja
rcrb
sbb
lcall
loop
pop
add
ficoms
jl
pop
xor
add
sbb
jg
mov
clc
adcl
jecxz
jne
cmpsl
les
and
inc
xchg
fdivl
shll
repz
lcall
mov
push
inc
push
movsb
dec
mov
aaa
les
push
das
loope
mov
cmp
pop
dec
popf
xchg
mov
add
pop
in
nop
divb
xchg
mov
enter
fisubrs
jne
stos
push
dec
loope
ret
mov
cs
testl
push
lret
or
std
mov
in
xchg
sub
es
push
gs
pop
lds
sahf
cld
aam
sbb
add
insl
out
sub
sbb
aad
cmp
or
push
or
scas
add
out
adc
popa
adc
rol
fs
push
jnp
dec
scas
mov
and
xor
mov
xchg
add
in
rcrl
lcall
mov
xor
clc
ret
inc
pop
lock
mov
in
leave
int
add
push
fdivrs
lods
xchg
call
adc
mov
jne
sti
inc
mov
jle
repz
or
push
pop
mov
adc
jns
mov
jl
adc
loopne
test
pop
lods
cmp
mov
test
push
aas
mov
push
sbb
xchg
sbb
sbb
addr16
adc
fimull
out
stos
sarl
xor
out
xor
xor
cmp
mov
mov
mov
jnp
daa
loope
and
cld
test
fbstp
aad
jbe
imul
inc
sbb
cwtl
mov
and
addb
mov
aam
sub
dec
pop
xchg
mov
lock
mov
mov
xchg
dec
hlt
dec
push
xchg
out
push
icebp
leave
movsb
jno
lret
dec
cmp
sti
pop
pop
mov
mov
sub
out
lods
shlb
adc
mov
lods
pop
jmp
sahf
fnstenv
cwtl
rclb
arpl
and
repnz
xor
cmp
jg
mov
xchg
imul
fdivl
jge
cmp
push
lea
repz
mov
xor
fldl
dec
jle
imul
sub
fwait
add
or
inc
and
xchg
je
sub
pop
dec
jle
mov
or
jne
push
in
xchg
push
outsb
or
dec
inc
repnz
xchg
jne
or
mov
xchg
xchg
or
and
shlb
mov
xchg
mov
jns
adc
icebp
push
test
mov
xor
fs
mov
das
loop
jb
cmpsl
aam
add
addr16
ljmp
mov
push
sub
lock
fldt
adc
lods
iret
mov
lock
jge
adc
cwtl
mov
sahf
jmp
add
xor
mov
pop
xorb
insb
scas
bound
flds
pop
push
jg
subb
std
dec
je
icebp
add
pop
ret
cmp
loop
pop
mov
pop
pop
push
js
nop
jno
aad
xor
shll
aam
push
repnz
push
adc
jge
repz
lret
cltd
mov
add
ret
jge
out
xor
push
add
xchg
scas
sbb
iret
in
push
pop
sub
pop
pop
insl
or
xchg
aaa
pop
scas
dec
jbe
lcall
clc
stos
mov
js
divl
scas
push
push
adc
mov
mov
adc
icebp
xchg
mov
movsl
sbb
popf
adc
std
add
je
in
inc
sbb
sbb
les
leave
adc
aad
orb
xor
cmp
mov
imul
call
xchg
sahf
lahf
xchg
adcb
jbe
leave
outsb
mov
xchg
xor
repnz
arpl
out
ljmp
aaa
inc
adc
jne
insl
sub
jbe
rcr
pop
sub
push
push
ja
stc
xchg
jbe
mov
push
xor
addps
call
lcall
daa
xor
rclb
aaa
shlb
lods
ss
call
insb
jecxz
stos
out
jns
icebp
mov
push
sbb
dec
loope
in
mov
scas
scas
nop
mulps
stos
ljmp
jmp
or
mov
jno
leave
push
sub
insl
jno
enter
aad
mov
sub
stos
adc
jle
and
popf
pop
imul
jp
sub
and
std
jne
xchg
scas
adc
jno
loop
sbb
pop
aam
lahf
push
or
and
aaa
cltd
xor
adc
lods
and
and
xchg
adc
mov
loope
pop
stos
inc
cmp
cld
adc
adc
inc
ror
xor
sbb
je
sub
jmp
mov
sub
call
repnz
movsl
and
out
xchg
pop
mov
inc
out
mov
push
pop
pop
int
cs
inc
cmp
lret
fmull
lock
mov
int
orl
mov
dec
jns
outsb
addr16
cmp
xor
mov
pop
mov
test
adc
cmpsb
inc
push
lods
daa
insb
stos
xor
fmuls
fcoml
mov
icebp
xchg
cmp
dec
add
mov
sbb
cmpsl
js
popa
push
sarl
cmpsl
stos
movsb
jnp
pop
inc
and
scas
xchg
rorb
scas
imul
adc
xchg
sub
popf
testl
gs
dec
sti
sahf
dec
iret
cltd
xchg
cwtl
mov
lahf
sbb
mov
mov
cmpsb
mov
repnz
xchg
loopne
es
cmp
or
inc
jno
rorb
mov
mov
out
push
popa
imul
roll
push
sbb
cmp
push
push
orl
loope
sahf
lahf
push
cmp
imul
sti
enter
add
dec
mov
dec
lds
arpl
add
mov
popf
and
mov
lcall
sub
iret
pusha
dec
jb
scas
mov
sub
inc
repz
scas
ljmp
push
sub
scas
jne
dec
arpl
mov
pop
das
and
push
pop
xor
jnp
iret
cmpsl
je
cmpsl
repnz
fs
jo
dec
lods
add
not
sub
add
or
and
cli
dec
mov
mov
or
and
mov
pop
jae
es
cmpb
ret
out
aas
push
and
dec
cs
jmp
sub
ja
aad
ds
mov
sahf
lods
addr16
and
inc
pop
outsb
pop
jecxz
push
aam
test
mov
nop
mov
dec
mov
and
stos
iret
sbb
mov
xchg
mov
inc
int
mov
ret
les
fists
sub
jg
xchg
mov
shrb
popa
mov
sahf
insl
xor
inc
jle
roll
push
pop
popa
add
pop
leave
xor
test
mov
cmp
sbbb
or
dec
popa
dec
into
push
sbb
lods
popf
repz
test
cwtl
pusha
cmc
outsb
jnp
test
mov
mov
jo
pop
xor
jb
rcl
jg
lock
sbb
push
and
add
xchg
divl
test
ds
inc
leave
mov
and
jmp
jns
data16
int
int3
sub
add
sbb
xchg
push
cmp
or
sub
xor
cmp
aad
push
pop
fwait
or
movsl
in
es
insl
cli
popa
add
mov
incb
out
push
arpl
imul
or
in
cwtl
pop
push
jbe
xchg
inc
pop
lds
add
or
roll
adc
loopne
xor
fcompl
roll
lods
sbb
mov
mov
jno
idivb
and
int3
out
mov
mov
sub
adc
jmp
aas
sbb
in
ret
xor
out
push
mov
inc
stc
jb
push
sahf
xchg
xchg
xchg
insl
mov
mov
outsl
xchg
stc
shr
and
xchg
lds
xor
add
inc
test
dec
mov
lret
insb
pop
int
lods
ljmp
sub
gs
xor
pop
cmp
lds
inc
cmp
out
enter
stos
jae
push
mov
push
arpl
push
adc
sahf
and
pop
add
push
inc
ljmp
inc
rcrl
xor
mov
outsl
xor
cwtl
outsl
cmpsl
mov
lock
mov
ss
pusha
out
test
adc
xor
jno
ret
mov
xor
ja
adc
sub
inc
mov
mulb
mov
test
rol
adc
ss
inc
fbstp
gs
cmpsl
mov
pusha
fisttpl
xchg
sbb
shll
mov
xchg
jl
and
inc
jo
cmpl
sbbb
mov
cmc
outsl
movsl
adc
sbb
cmc
ljmp
ret
jecxz
pop
dec
ljmp
sarb
xlat
sbb
ret
popf
fdivl
pop
paddb
movsl
xchg
nop
sub
jge
das
jo
push
mov
enter
ljmp
test
rcrb
scas
cmp
xchg
roll
sbbl
arpl
lock
mov
shll
clc
inc
shll
gs
and
and
jb
lcall
adc
hlt
xor
rcrb
pop
out
jp
ror
xor
orl
mov
mov
aam
xor
in
pusha
push
fisubl
jg
jbe
out
jno
jnp
mov
ljmp
sbb
and
int3
ficompl
adc
lock
add
bnd
and
add
inc
cli
inc
mov
mov
pop
int3
sarb
ss
imul
mov
fldl
popf
pop
imul
movsb
mov
mov
add
lea
fnstsw
and
inc
mov
frstor
mov
sub
mov
push
lcall
xchg
or
daa
pop
sbb
rcl
sub
addb
adc
movq
sub
lret
imul
sbb
and
mov
pop
ss
xor
shr
daa
jmp
lods
pop
cmpsb
fimull
dec
das
cmp
pop
add
sbb
sbb
lds
xchg
divl
mov
cmpsl
aad
mov
js
xchg
jge
sbb
cld
and
imul
divl
scas
fisttpll
arpl
movsb
mov
push
prefetcht2
cmpsl
lea
xor
pop
lret
outsl
aaa
pop
punpcklbw
dec
jmp
sub
jae
mov
ret
movsb
push
add
add
pop
inc
mov
stos
jb
pop
fs
dec
xchg
pop
pop
mov
or
movsb
xor
pop
pop
mov
adc
sbb
movl
jp
mov
addr16
jns
frstor
insb
cmpsb
or
cmp
xchg
add
pusha
adc
jmp
xlat
out
stos
or
rcll
and
mov
pushf
sbb
fwait
or
fdivrl
cmpsb
cwtl
cltd
xor
in
adc
jae
repnz
lcall
xlat
sti
mov
imul
xor
ja
mov
loope
jns
test
dec
inc
aas
lods
stos
test
mov
xchg
ds
pop
mov
pop
mov
roll
sub
aad
push
aam
cli
dec
mov
andb
pmulhw
xor
push
cmp
loop
adc
mov
jne
mov
xor
jg
push
mov
and
fcoms
in
or
nop
cli
push
mov
test
cmp
mov
insb
fwait
mov
daa
push
cmpsl
mov
sbb
or
rol
dec
sub
lret
cmp
xchg
ret
add
pop
jo
out
mov
loop
pop
lock
dec
push
mov
mov
ds
divb
movsb
add
stos
jno
data16
cmp
testl
out
inc
leave
cltd
aas
fucomip
js
enter
insb
fcoml
mov
pop
setae
mov
fisubrs
scas
lea
sar
jg
sbbb
push
mov
aaa
sarb
insb
pop
push
fsts
aas
subb
cltd
jl
push
push
push
iretw
cmp
js
xor
xchg
out
push
and
cmp
xchg
fnsave
sahf
popf
pop
jmp
mov
scas
inc
js
sbb
push
aaa
mov
rorb
mov
push
mov
out
inc
in
inc
xchg
mov
stos
loope
stos
popf
sbb
jne
push
int3
sub
inc
pop
push
add
loopne
and
movsb
or
popf
or
lods
into
mov
mov
in
leave
mov
cwtl
cli
popf
inc
mov
idivl
cmc
iret
jae
jb
fsubs
je
push
call
xchg
pop
movsl
inc
loope
js
pop
pushf
insl
push
xor
out
test
insl
adc
jbe
fcmovnb
dec
out
add
jg
shlb
stc
or
sbb
fsts
pop
add
cs
cmpsl
jne
rcrl
ljmp
xor
xor
add
shlb
fstpl
repz
xchg
pop
aas
cmpb
ds
sub
popa
vpmulhw
inc
jnp
mov
sti
push
sti
jp
lret
mov
and
sti
flds
lcall
xor
mov
lods
pop
icebp
sti
sbb
lcall
popf
jmp
jmp
lret
xchg
testb
cwtl
movsb
popf
dec
fists
cmpsb
inc
sub
adc
lcall
popf
inc
js
push
loop
mov
push
es
test
inc
jno
getsec
pop
ficoms
in
gs
mov
cld
cli
pop
sub
shll
push
xchg
pop
and
push
lods
enter
in
sbb
mov
sub
mov
jl
dec
jp
lds
pushf
mov
out
hlt
push
mov
mov
jbe
mov
test
mov
xorb
into
fnstenv
mov
jns
fstl
test
sbb
enter
iret
je
jmp
pop
scas
flds
inc
movsl
xchg
je
clc
je
cwtl
fwait
push
insb
ficoms
or
imulb
push
adc
dec
or
lea
adc
xor
into
xlat
cmp
test
imul
sbb
adc
gs
repnz
ficomps
pop
jecxz
jno
stc
mov
xchg
sbb
pop
pop
cmp
lret
jo
imul
call
mov
outsb
out
fidivrl
mov
cmpsb
sub
clc
and
repz
and
mov
mov
rorb
xor
inc
cli
pop
fstl
ds
out
cmp
in
jmp
mov
xchg
rorb
call
outsl
loope
imul
je
cmp
push
adc
iret
pop
jmp
movsl
call
pop
cli
loopne
inc
add
add
lock
insl
aam
cltd
jne
popf
les
fcmovnbe
fwait
sub
mov
faddl
push
bound
lds
push
pusha
aaa
cmpb
xor
dec
sbb
inc
icebp
jb
lret
mov
or
sti
shlb
scas
stc
add
js
fidivl
xchg
push
movsl
and
filds
sbb
arpl
inc
push
hlt
shll
sbb
andl
icebp
rolb
loop
je
jbe
fs
inc
mov
popa
xchg
out
jae
xchg
and
xchg
sbb
and
sub
dec
push
lods
mov
sahf
mov
ret
adc
adc
enter
cmp
sbb
hlt
adc
sub
mov
push
bound
push
movsb
mov
std
cmp
inc
je
lods
imul
mov
rorb
push
in
lret
cwtl
xor
pop
dec
in
js
mov
rorb
xchg
mov
dec
push
fisubl
jge
or
sub
push
jg
sub
mov
repnz
inc
cmp
shl
inc
aad
and
cmp
pushf
jnp
imul
mov
repz
and
ljmp
icebp
cmc
jmp
daa
push
repnz
aaa
mov
dec
adc
rclb
lods
aaa
ja
aas
sub
jecxz
push
bnd
stos
sub
dec
movsl
and
sub
arpl
inc
push
out
repz
or
jo
mov
in
loopne
lds
mov
sbb
repz
mov
cmp
pop
pop
cwtl
cli
arpl
pop
andl
test
sub
cld
adcl
repz
xor
scas
adc
mov
push
das
mov
movsl
add
pop
shrb
shl
cmc
bound
cld
fs
and
sbb
pushf
cmp
or
adc
aaa
stos
aaa
movsb
imul
jo
push
push
lods
out
repz
and
and
enter
in
rcr
not
fcmove
das
xor
cld
add
push
xchg
in
addr16
add
sub
xchg
add
hlt
shl
or
xchg
mov
cs
mov
jl
test
mov
mov
aas
sub
gs
adc
fimuls
stc
mov
lods
hlt
and
rol
cli
shrl
jecxz
or
pop
mov
loope
in
jge
cmpsl
shl
lret
pop
gs
sub
adc
cmp
adc
xchg
inc
xor
cmpsl
mov
adc
jmp
dec
stos
or
inc
mov
jne
movsl
loop
and
push
jbe
icebp
sbbb
aas
ja
sbb
pop
mov
fcmovb
out
bound
and
icebp
and
je
out
xchg
out
rcrl
xchg
mov
arpl
mov
mov
push
cld
cld
pop
in
sbb
add
dec
cmp
ja
cmp
jge
jle
dec
jbe
enter
xchg
decl
dec
dec
pop
sar
fcoms
mov
lods
call
jmp
es
std
aad
sbb
and
outsl
xlat
sub
cwtl
sar
inc
cmpsl
xor
or
inc
or
xor
push
inc
pop
stc
xchg
out
sbb
jne
xchg
mov
sti
pop
jmp
xor
or
repz
mov
mov
icebp
jl
jge
cmpl
jmp
adc
loop
dec
scas
pusha
pop
popa
xor
cmc
push
fildll
push
mov
xor
scas
mov
movb
xchg
xor
jne
adc
xor
movsb
inc
pop
cmp
loop
into
cmp
pop
std
repz
mov
dec
mov
cmp
fistpl
mov
je
das
stc
out
leave
push
popa
mov
sbb
inc
or
and
into
mov
mov
cltd
inc
push
inc
push
leave
fnstenv
push
mov
push
loopne
cmp
das
lods
mov
jl
xchg
inc
test
mov
clc
add
stc
fiaddl
add
scas
push
jecxz
sti
out
imul
cmpsl
lds
pop
jb
sbb
cmp
testl
js
adcb
adc
jp
test
ja
or
xchg
pop
push
cmpsb
pop
cmpsl
ds
adc
sahf
dec
cmp
fsubrs
sbb
mov
pop
or
fwait
jmp
cld
pop
adc
gs
jns
fs
pop
lahf
add
test
loope
stos
addb
je
mov
fwait
push
or
adcb
push
addr16
lahf
int3
ljmp
sub
mov
dec
and
je
jns
xchg
sbb
test
lret
cmpsl
mov
jo
sbb
adc
sahf
arpl
adc
pop
pop
inc
cmp
into
pop
popa
fidivrl
mov
sbb
jno
gs
stc
dec
mov
cli
fdiv
mov
out
jp
test
aam
out
out
sbb
mov
jge
mov
cmp
divb
dec
cmp
cmpsb
xchg
jle
xchg
push
xor
je
aam
mov
push
add
cmpl
dec
movsb
mov
shlb
or
dec
jge
mov
adc
sti
pop
cmp
jge
cmp
add
adc
mov
rcr
testb
movsl
js
out
test
dec
push
paddw
add
xor
out
push
ja
xchg
loope
stc
inc
mov
inc
push
rcrb
mov
adc
add
cmp
mov
enter
mov
test
ja
sbb
jge
xorl
pop
into
pusha
mov
mov
inc
push
xchg
shlb
aaa
in
mov
repz
xchg
cmp
enter
stos
test
jae
adc
mov
adc
mov
loopne
cmpsl
pop
scas
jmp
fists
mov
test
adc
mov
and
mov
cs
loop
push
dec
je
and
dec
jge
mov
push
daa
adc
mov
fisubrl
mov
jb
pop
jbe
in
nop
aad
xor
imul
lea
std
xchg
les
cs
jne
mov
or
add
jo
andb
mov
fldt
into
add
jno
movsb
mov
add
add
and
xchg
leave
loope
subb
adc
iret
push
xchg
xchg
das
lcall
dec
iret
xchg
mov
dec
or
inc
fsubs
and
arpl
test
cmp
lock
inc
push
push
mov
sub
loopne
jno
fidivs
adc
cmp
and
int3
aam
subb
shrb
sub
inc
pop
dec
pop
js
in
stos
sbbl
cmp
mov
xor
push
adc
lods
pop
ficomps
enter
lret
xchg
sub
stos
stc
mov
push
dec
mov
decb
pop
and
mov
mov
pop
xchg
xor
rcrb
dec
imul
push
stc
pop
sub
pushf
fists
mov
lods
out
hlt
sbb
pusha
nop
fcmovbe
mov
add
push
lock
sub
inc
jle
ret
jb
inc
sbb
std
push
popa
jmp
jmp
push
popa
lea
psubusb
scas
psrlw
lds
xchg
cmp
mov
pop
aaa
mov
xor
hlt
es
and
jo
push
aas
push
data16
and
push
and
movsl
stc
fisttps
and
jae
inc
sbb
sub
test
loopne
inc
jl
dec
pop
or
jb
rcrl
dec
dec
jne
lahf
lea
pusha
ret
pop
push
aad
add
imul
int
mov
popa
mov
lret
ljmp
push
add
inc
fldl
ret
add
fldt
pop
aas
add
mov
dec
jnp
shrb
insl
push
loope
push
lahf
sbb
jle
jae
fnstcw
sti
jno
je
xchg
dec
fiadds
sahf
add
movsb
push
xor
push
add
lods
ss
mov
pusha
cli
ja
xchg
jg
mov
sbb
insl
adc
bound
insl
or
push
fcmovnb
arpl
js
xchg
das
popf
push
aas
cmc
adc
sbb
add
mov
xor
mov
jge
pop
ds
and
cltd
test
arpl
adc
lahf
cmpsb
test
out
call
jne
and
stos
push
mov
sbb
adc
xchg
mov
adc
lcall
mov
inc
idivb
sub
movsb
adc
mov
xor
loopne
inc
mov
movsl
inc
xchg
lods
dec
adcb
lret
insb
inc
insb
sti
lahf
and
loope
push
fsubrl
sbb
cmp
out
mov
cmp
xchg
les
mov
shl
cmpl
fcoms
xchg
xor
cwtl
dec
mov
shrl
rcrl
xor
jecxz
sub
mov
dec
pop
pop
repnz
and
pusha
inc
popl
lar
mov
aaa
mov
add
mov
add
pop
paddq
sub
push
push
out
cld
dec
sbb
add
sbb
push
in
push
scas
xor
sbb
cmp
adc
push
xor
cmpsl
nop
sub
in
mov
jl
leave
aaa
fimuls
or
inc
cmp
rol
mov
test
ret
pop
cmp
leave
sbb
push
f2xm1
xchg
cmpsl
push
jns
test
and
mov
shl
dec
mov
lods
test
xor
ror
scas
jl
mov
shrb
inc
pcmpgtw
testl
stos
add
adc
inc
incl
pop
xchg
fcoml
add
stos
sbb
and
cli
les
sbb
pop
and
dec
test
daa
dec
and
dec
adc
ds
jecxz
dec
sub
push
icebp
enter
mov
int3
inc
xor
jno
cld
dec
jb
jmp
ret
or
or
clc
push
jle
insl
xchg
pop
xchg
jmp
jno
mov
inc
cwtl
xorl
icebp
fwait
and
hlt
adc
mov
int3
sub
adc
xchg
out
andb
jl
dec
mov
faddp
and
aad
in
jo
push
sub
aas
lds
out
mov
push
cs
gs
push
push
js
mov
mov
dec
or
les
adc
leave
xchg
push
xchg
pop
scas
push
dec
inc
mov
and
sbb
pop
or
test
jmp
ds
mov
add
cmp
push
cld
cmpsl
mov
adc
ret
mov
inc
jne
addr16
ljmp
cmp
xchg
lret
call
jns
nop
jecxz
scas
pop
sti
jne
sub
insl
mov
in
sbb
ret
pop
mov
pop
mov
sbb
adc
xchg
push
rcl
mov
jl
push
insb
out
cmc
pop
push
or
in
pop
ret
lods
jae
fsubl
lods
fwait
stos
rol
sbb
mov
mov
add
aam
dec
or
addr16
pop
ret
pop
dec
pop
loop
stos
pop
or
in
mov
inc
sbb
jb
sub
pop
cld
int3
jg
mov
add
call
daa
jne
dec
sub
cs
gs
cmp
in
dec
in
js
mov
lret
aas
adc
popf
mov
xchg
xchg
sbb
mov
inc
js
dec
mov
fldenv
icebp
pop
mov
xlat
dec
sub
jb
scas
lcall
lahf
hlt
add
call
gs
pextrw
push
mov
cmp
add
shr
pop
es
out
mov
in
fstps
leave
and
loope
sub
shrl
dec
out
inc
xor
jge
in
push
pop
lahf
es
xchg
fldt
lcall
or
imul
aas
mov
cld
cmp
repnz
jbe
popl
jo
cmp
ljmp
clc
push
mov
imul
dec
inc
xor
add
mov
incl
icebp
test
sub
adc
test
pop
and
mov
clc
stos
rorb
pop
fsubs
in
xchg
imul
int3
rcrb
imul
imul
sub
stc
pusha
repnz
pop
hlt
pusha
inc
xchg
push
adc
mov
nop
push
or
adc
mov
cmc
sub
fisubrs
repnz
mov
pop
mov
movsl
pushf
neg
cwtl
int
je
xor
add
adc
and
lock
lods
cmp
pop
repnz
es
push
adcl
mov
out
aaa
jb
and
mov
sub
push
push
outsb
stos
add
sar
loop
mov
sub
sbb
stc
ret
les
lock
mov
jmp
pop
ficoml
aas
sub
sar
cmp
rclb
andb
scas
std
xor
or
xchg
push
xchg
out
sbb
adc
subl
xchg
xor
lods
xor
xchg
sbb
lods
cmpsl
pusha
scas
pop
iret
adc
dec
int
arpl
inc
xchg
cmp
stos
lods
xchg
xor
jb
insl
xor
imul
push
iret
iret
xchg
insb
xor
and
inc
imul
inc
xorb
mov
lret
inc
fidivs
push
int
cld
jae
add
xchg
aaa
in
add
sub
inc
orb
cmp
daa
aad
xchg
jae
push
adc
lock
xor
outsl
popf
int3
jge
push
push
sub
jge
aas
das
sbb
sub
outsl
sub
stos
sub
popf
push
scas
ret
dec
adc
push
sbb
or
sbb
mov
clc
mov
jne
inc
mov
mov
push
inc
or
dec
xchg
mov
aam
xor
xchg
and
imul
push
inc
dec
adc
repz
stc
sbbb
mov
sbb
out
xlat
adc
push
dec
and
dec
adc
fdecstp
repz
mov
test
add
daa
push
int
dec
leave
xor
lret
stc
in
pop
insl
inc
test
std
insl
dec
add
pop
pop
fistl
push
stos
cli
pop
sbb
sbb
sbb
stc
and
mov
sbb
into
pop
mov
fisttpl
adc
jae
pop
fs
lcall
shl
pop
cmpsl
test
or
or
dec
jb
stos
adc
jmp
mov
inc
lds
push
mov
out
mov
xchg
jbe
jp
xor
jecxz
int3
mov
test
stos
mov
imul
nop
mov
sbbb
jge
inc
push
ja
mov
mov
mov
mov
add
shlb
fwait
mov
cmc
push
dec
add
push
test
inc
xchg
push
and
or
imul
std
jno
inc
repz
mov
sub
push
ss
insb
inc
jne
pop
cmpsb
cltd
imul
fistpl
clc
cmp
sbb
orl
in
pop
add
xor
je
and
adc
push
ficomps
movsl
call
xor
stos
or
les
mov
lahf
add
sub
dec
or
in
xchg
out
ret
cmp
sub
push
inc
iret
or
repnz
repnz
das
jecxz
outsl
inc
dec
rcrb
jmp
insb
mov
xchg
int
xchg
mov
repz
mov
iret
popf
dec
popa
mov
ljmp
dec
pop
cmp
cmpsb
mov
dec
movsl
scas
popf
pushf
out
test
aaa
jnp
mov
dec
in
add
and
cmp
push
shl
xchg
xchg
pop
dec
add
push
rol
jno
mov
add
and
and
jbe
cmp
fidivs
fldt
insl
std
jbe
das
and
push
inc
mov
in
and
cmp
movsl
lret
pop
loope
insb
or
cwtl
sarl
scas
insl
data16
mov
and
jl
inc
mov
rcrb
dec
mov
mov
repnz
pusha
xchg
test
in
push
sub
arpl
push
idivb
mov
and
push
in
cli
xchg
push
push
lret
cmp
dec
adc
out
inc
sbb
adcl
push
loopne
daa
cmp
xor
insb
mov
pop
jo
mov
mov
jbe
pop
sahf
aaa
imul
mov
xchg
xchg
xor
pop
add
pop
jno
fbld
lret
sub
lods
shlb
xlat
std
imul
mov
jnp
inc
ror
and
repz
cld
lea
sub
shlb
je
aad
sbb
jg
jno
cmpsb
jecxz
sar
mov
rclb
or
jns
psubsw
jp
pop
fwait
repz
cli
fildll
loop
xchg
cld
push
fwait
loop
mov
pop
xchg
or
int
cmp
push
sub
fdivl
sti
xchg
dec
test
mov
adc
repz
adc
sbbb
cs
sub
pop
lods
fdivrp
stos
dec
push
insl
in
scas
adc
lret
test
push
aam
pop
in
fs
shlb
jns
xchg
xchg
insl
jg
xlat
ss
mov
movsb
negl
jp
daa
adc
mov
or
mov
dec
enter
pusha
push
or
dec
dec
push
xchg
xchg
int3
pop
in
xchg
cmp
push
lods
mov
loope
lret
jo
cmpsl
mov
mov
cs
xchg
push
out
das
cmp
add
add
mul
ds
inc
dec
xor
and
lret
jle
sub
test
sub
pop
xorl
daa
add
stos
cmpl
hlt
ja
mov
sub
push
cmp
xor
mov
add
and
mov
cmpsb
cltd
and
mov
add
dec
popa
in
movsl
aam
ret
xchg
add
jge
lds
jecxz
sbb
adc
les
dec
sub
sub
add
lahf
jno
loopne
or
out
fwait
sti
xor
and
push
or
xchg
mov
in
in
or
addr16
lods
xchg
dec
shlb
jno
sbb
jb
inc
or
cs
aam
std
out
mov
out
jnp
call
loop
ja
mov
out
xor
mov
decl
add
out
inc
cld
dec
es
push
adc
sbb
dec
lock
dec
outsb
add
hlt
lods
int3
jg
dec
movsl
sti
enter
pop
sub
jg
fs
pusha
adc
jo
cmp
popf
mov
push
shrl
cwtl
jnp
mov
push
mov
dec
negl
add
mov
xchg
push
adc
movsb
inc
pop
pusha
dec
loopne
pop
jecxz
push
xor
aad
xchg
leave
repnz
js
push
adc
jnp
push
mov
mov
cmpsl
cmp
hlt
test
cmp
ljmp
xchg
lcall
add
inc
or
mov
pop
pop
push
push
pushf
cmpsb
jp
ja
and
adc
mov
xchg
pop
std
les
mov
mov
aad
pop
into
mov
cmc
in
push
ret
inc
cmpsb
aad
cmc
dec
or
cmp
and
das
lock
sub
test
mov
push
lcall
xchg
inc
sbb
sbb
lea
fsubl
add
sbbb
cmp
dec
sub
ret
push
outsb
add
push
pop
dec
fs
call
sbb
lock
in
pop
or
gs
jg
xor
cmp
out
or
pop
loope
cmp
pop
mov
jnp
jb
movsb
or
cmpsb
mov
movsb
add
jp
test
jmp
mov
aas
push
sti
xor
xlat
loop
hlt
xor
repz
jl
fiaddl
or
cld
jg
jmp
sbb
sub
test
xchg
fstpt
sub
mov
xor
sbb
repnz
xchg
cmc
mov
jle
pop
mov
jno
mov
cmpsl
gs
out
je
out
push
movsb
in
mov
sbb
iret
mov
jbe
bound
and
repz
or
dec
inc
adc
adc
cmp
and
mov
hlt
add
insb
dec
or
jmp
leave
leave
mov
cmp
sub
adcl
and
mov
push
and
pop
jns
cmp
bound
mov
push
jg
out
jl
mov
push
jmp
sbb
push
inc
fnsaves
pop
fs
sub
fbld
dec
mov
sub
or
in
outsb
popa
insb
jno
and
mov
incl
sub
push
xchg
outsb
mov
and
loopne
jecxz
fwait
movsl
push
mov
xchg
out
std
mov
cmp
int3
inc
mov
add
push
pop
scas
dec
in
ds
int
ror
enter
stc
sub
adc
js
out
outsl
or
jmp
dec
xor
fnstenv
clc
and
lds
sub
push
aas
das
and
clc
jb
jecxz
cmpsl
scas
popf
scas
cmpsb
cmpsl
test
xchg
jg
mov
dec
iret
xchg
aaa
fisttpl
or
ja
aad
pop
mov
and
mov
mov
xchg
in
mov
iret
xchg
scas
pop
repnz
push
push
je
add
mov
popa
imul
cmpsb
je
insl
dec
call
mov
dec
mov
push
in
mov
push
lock
stos
loopne
pop
repnz
stos
push
jns
fwait
add
fbstp
addr16
rorl
jns
sub
sub
cmpsl
shll
call
or
pop
adc
pop
int
dec
jmp
or
xor
jmp
fstpl
test
aam
mov
mov
rclb
sub
ds
leave
fiaddl
mov
movsb
int3
push
mov
pushl
fmuls
xor
scas
into
les
loope
and
mov
aam
jp
adc
adc
cmpsl
int
outsb
mov
or
mov
jge
nop
in
fst
add
cmpsb
adc
cmpsb
jb
inc
adc
hlt
cltd
fiadds
cld
hlt
pop
fsubrp
int3
mov
or
negl
xchg
in
loope
lods
out
pop
xor
xor
xchg
test
and
mov
je
push
fisttpl
inc
aaa
push
jno
cli
push
and
xchg
fbstp
out
inc
jno
push
cmp
xchg
int
sub
adc
jge
xor
or
mov
into
dec
add
sub
mov
mull
dec
xchg
or
pop
cmp
imul
push
divb
jns
add
pop
enter
xchg
sbb
cmp
inc
je
or
dec
push
push
sbb
fistps
imul
in
dec
in
cmp
push
les
mov
mov
ss
fwait
or
xor
xor
mov
jo
insb
js
sub
cmp
mov
stos
mov
jo
cmp
aaa
sbb
add
mov
mov
cmc
insl
sahf
lret
push
mov
inc
sub
cli
movsb
xor
addl
xchg
fisttpll
jae
jle
xchg
add
mov
cli
fs
pusha
ror
adc
mov
jge
jne
jb
stc
xor
imulb
fildl
jl
mov
mov
pop
jge
int3
aam
sbb
mov
movsl
inc
adc
punpckhdq
out
lcall
addb
gs
dec
xchg
pop
out
jbe
daa
jnp
mov
repz
in
fidivrl
scas
and
lock
jnp
iret
mov
cwtl
lods
or
cmp
sar
sub
shlb
sbbb
push
or
in
dec
bound
mov
ds
fnstsw
mov
jnp
out
js
neg
outsb
stos
je
leave
sbb
mov
or
mov
jecxz
mov
push
xor
push
mov
jg
adc
hlt
fs
inc
cmp
popf
mov
je
clc
mov
push
cmpl
mov
jbe
rcll
mov
sub
push
shl
test
mov
adc
dec
cmpb
in
cmp
mov
icebp
test
cmp
ljmp
stos
mov
adc
xor
or
je
dec
stos
adc
mov
jne
push
and
shlb
cmpsl
sbb
cmpsb
orl
mov
movsb
in
cmp
inc
into
lret
inc
and
xchg
dec
add
cld
mov
dec
sbb
mov
sbb
mov
outsl
subl
dec
mov
addb
idivb
loop
jns
adc
dec
pop
leave
fldenv
push
push
popf
repnz
ss
int3
into
ffree
inc
dec
adc
xchg
add
dec
jae
mov
jl
enter
imul
push
inc
stos
outsb
sbb
stos
lds
sub
or
cmp
mov
xchg
lods
dec
xchg
or
test
in
loope
shr
incl
pop
fisubl
mov
arpl
xchg
aad
sub
mov
push
xor
push
cli
mov
in
push
and
pusha
mov
rcrl
jge
push
sbb
inc
push
imul
xchg
dec
mov
lock
and
xor
push
push
ret
lret
andb
push
add
jg
in
jne
cmpsb
and
pushf
jl
inc
push
jns
mov
movb
jb
enter
add
dec
cmp
cmp
imul
cmpsb
push
dec
loopne
mov
mov
jecxz
inc
arpl
int3
jge
xchg
xlat
sbb
cli
pop
adc
mov
xor
aad
xor
add
das
imul
cld
out
stos
shrl
sub
xor
fst
sbb
sub
jno
hlt
push
in
in
imul
ja
jle
sbb
fcmovne
lahf
sub
sbb
mov
sub
lret
test
neg
in
cwtl
push
loopne
or
xor
notl
sti
pushf
dec
daa
scas
fwait
and
or
popf
call
jno
adc
repnz
in
add
push
sbb
cmp
sbb
repz
mov
push
add
push
push
pop
pop
adc
cmp
and
fs
pop
sbb
xchg
fildl
and
fcompl
mov
cli
cmp
in
je
sarb
popa
jecxz
xchg
lods
mov
cmp
push
lcall
push
jp
ljmp
call
mov
je
or
ret
std
adc
lea
xor
aam
icebp
push
es
clc
add
push
mov
ficoml
into
adc
out
iret
mov
in
insl
and
or
dec
jle
repz
cmpsb
jmp
bnd
stos
enter
inc
adc
clc
or
or
or
pop
jo
sub
fsubr
sub
mov
cld
mov
xor
jnp
mov
or
xchg
outsb
arpl
or
mov
loope
or
adc
stos
les
adc
or
pop
sbb
je
push
or
cmp
mov
cli
jnp
aas
fstl
and
bnd
mov
pop
adc
lods
int
lcall
mov
push
movl
in
incb
xor
fsubr
into
and
mov
pop
mov
stos
enter
std
outsb
push
xchg
call
mov
pusha
test
pop
cmp
pop
mov
notb
cmpl
or
fs
mov
push
jne
cmc
sbb
rcrb
push
cmpsl
repz
repnz
inc
bound
gs
aaa
out
jp
push
inc
stc
mov
aaa
inc
push
mov
mov
mov
xor
popa
adc
mov
push
sti
loope
mov
inc
aad
xchg
pop
loopne
or
xchg
idiv
mov
in
pop
or
es
sub
adcl
fisubrl
shrl
movsb
ds
mov
notl
popf
js
cmp
add
je
cltd
and
xor
repnz
or
in
mov
sub
push
repnz
nop
outsb
loope
sbb
rcr
cltd
adc
mov
ljmp
mov
stc
cs
insl
inc
adc
xor
repnz
add
pop
stc
jp
fsubrs
notb
in
mov
and
add
push
or
mov
out
enter
sbb
adc
aaa
push
scas
xor
cli
xchg
arpl
in
mov
rclb
fldenv
jnp
and
dec
jg
dec
jns
loope
hlt
outsl
sub
stos
pusha
jmp
arpl
mov
dec
push
jnp
jne
sbb
stc
in
fsubl
cli
aas
sbb
inc
push
sbb
ljmp
lahf
inc
sbb
or
scas
mov
scas
cmpsb
out
loop
jle
add
scas
enter
repnz
mov
scas
outsl
ljmp
sbb
sbb
call
movsb
jle
pop
inc
fisttpl
and
inc
mov
xchg
iret
movsb
ljmp
sbb
mov
pop
imul
imul
lock
xor
pusha
ret
cmove
xchg
test
xor
filds
std
mov
push
mov
pop
scas
fistps
ss
jmp
out
lcall
xor
fisttpll
int3
mov
movsl
call
mov
into
gs
mov
cld
fwait
mov
mov
popa
cmpsl
popa
mov
cltd
movsl
shrl
mov
xchg
xor
jle
pop
adcb
pop
jbe
ja
iret
sub
xchg
or
sbb
pop
pop
stc
push
xchg
push
jl
pop
ret
and
je
inc
cmp
dec
int3
pop
dec
int3
das
mov
aaa
add
popf
fwait
lea
xchg
test
sbb
pop
insl
pop
ja
jg
loop
fwait
lret
dec
nop
xchg
lcall
add
mov
jle
pop
es
cltd
faddl
adc
adc
ficompl
mov
clc
sbb
test
jne
inc
lock
lret
jae
in
movl
jecxz
pop
sti
data16
popf
ret
into
jmp
into
or
push
decl
push
dec
lds
sahf
mov
arpl
jle
insl
xor
jns
cs
xor
mov
mov
dec
cmp
mov
dec
cmpl
stc
cs
nop
in
pushf
pop
mov
fs
jl
fbstp
fisttpll
fbstp
ds
and
les
or
cld
cmp
mov
les
lea
mov
mov
or
mov
push
in
mov
test
fs
dec
push
jno
add
mov
jbe
jne
xorl
inc
sub
or
or
cwtl
add
pop
enter
sbb
arpl
das
mov
sti
adc
pop
je
lcall
sbb
adc
mov
mov
adc
fucomi
int3
add
and
sub
dec
je
push
loopne
push
inc
add
mov
in
xor
faddp
rorb
ret
add
pop
mov
and
je
adc
popf
in
cli
ss
or
insb
ljmp
je
adc
fwait
inc
aas
out
xor
out
lods
insl
xor
sub
test
jg
jl
movsl
enter
push
in
imul
cmp
jge
jp
inc
mov
mov
mov
push
rol
jge
pop
mov
loope
daa
gs
mov
ret
inc
dec
sub
ljmp
in
es
cmp
sub
pop
push
pop
jecxz
push
aad
imul
push
int3
or
and
mov
mov
cs
jle
push
or
add
mov
shr
std
aaa
dec
adc
jns
xor
adc
pop
cmpsb
xor
mov
mov
dec
jg
lcall
fs
xchg
mov
sub
inc
dec
fisttpl
mov
mov
popf
nop
pop
gs
xor
sahf
add
inc
mov
push
std
mov
dec
jl
arpl
andb
sbb
or
cmpsb
mov
dec
repnz
xchg
arpl
mov
sub
addr16
sub
add
stos
jp
mov
push
ret
les
hlt
pop
jl
addr16
adc
sub
imul
dec
mov
fistpll
nop
mov
cwtl
dec
enter
shll
lods
movsl
rcl
xlat
outsb
mov
pop
outsl
mov
push
out
push
ficoms
mov
jle
xor
mov
shll
divb
cmp
ficoml
add
mov
sub
mov
push
insb
mov
mov
or
sub
push
clc
fistps
mov
mov
cmp
jge
xor
dec
repnz
mov
das
int3
push
jecxz
jp
adc
mov
lret
xchg
dec
inc
aad
mov
push
mov
pop
dec
jmp
in
jg
cs
mov
ffree
mov
loope
sar
cmc
lods
inc
into
jbe
stc
lcall
xor
vucomiss
inc
icebp
dec
pop
mov
dec
repnz
arpl
outsl
fisubrl
clc
movb
fwait
or
or
pop
rcl
or
pop
mov
mov
out
ss
jg
cmp
push
iret
ror
pop
pop
or
mov
cmpb
repnz
add
outsl
sbb
aaa
dec
mov
xor
ljmp
fsts
xchg
out
cld
in
dec
mov
mov
enter
pop
out
push
jmp
in
add
insl
push
jl
cli
int
adc
loope
xchg
jge
or
jmp
lods
xor
std
dec
jnp
or
cmp
enter
dec
in
push
out
notl
xor
data16
xor
rcrb
xchg
gs
ja
sbb
adc
movsl
add
xor
lods
out
inc
push
jp
add
inc
mov
cmpsl
pop
int3
or
ss
bound
incl
push
push
push
mov
aad
xchg
push
mov
pop
inc
movsb
nop
adc
xor
test
inc
jnp
mov
loopne
cmp
subl
scas
outsl
icebp
and
cmp
out
int
jp
dec
mov
popa
inc
pop
fnstcw
sbb
mov
out
ret
push
xchg
mov
lcall
out
stos
lea
inc
lahf
inc
daa
add
inc
mov
das
test
lock
aam
and
jg
fcoml
fs
je
stos
icebp
push
mov
ds
jmp
mov
je
mov
popa
and
jl
cmpb
out
add
jge
push
mov
out
mulb
sub
ret
rorl
dec
mov
adc
lock
rcll
push
cmp
xor
sbbl
dec
sub
gs
out
ret
pop
xor
vpshad
or
xor
popf
bound
outsl
cmpxchg
and
iret
outsl
lret
add
pop
cli
sar
shll
hlt
mov
ficomps
and
nop
lcall
cmpsb
fisubrl
or
lds
inc
push
jle
dec
push
in
cli
dec
fnstsw
cld
pop
outsb
shld
iret
dec
test
iret
cs
adc
sbb
les
sub
jno
or
out
aas
fstpt
xchg
roll
pop
scas
or
ds
test
sub
imul
jae
loope
and
loopne
hlt
sub
repz
mov
xchg
pop
sbb
xor
jg
pop
push
pop
push
les
sbb
mov
int3
mov
sub
push
rcrl
sbb
jl
shl
mov
adc
add
sbb
push
jg
sbb
jp
ds
stc
fmull
dec
ljmp
sub
mov
push
pushf
lea
mov
jns
mov
xchg
jb
inc
mov
pop
stc
cwtl
es
xchg
rclb
jecxz
inc
dec
mov
mov
cmpsl
inc
aad
jg
or
pop
fwait
daa
mov
ret
jnp
test
cmp
in
pop
sbb
push
adc
cwtl
leave
arpl
cwtl
cmp
filds
cmp
xchg
xchg
xor
add
imul
push
call
cmc
mov
jg
test
test
in
sub
fwait
leave
sub
push
shrb
movsl
mov
sub
jno
xchg
stos
repz
inc
mov
jp
push
jecxz
orb
inc
fdivl
xchg
jg
sahf
lret
push
testb
cmp
cmp
imul
sbb
std
cmp
inc
fildll
hlt
aad
jl
cld
xor
dec
cmp
fimull
xor
lret
push
mov
xchg
in
xchg
rorl
pop
gs
icebp
ret
orl
ret
lahf
in
and
loop
das
or
ss
inc
int
push
mov
mov
sub
adc
push
or
push
adc
or
dec
xchg
push
adc
push
lahf
and
mov
ficomps
mov
lea
rcrb
add
aaa
cmp
push
inc
xlat
dec
lods
cld
or
sbb
mov
sbb
mov
popf
or
shlb
leave
dec
push
push
gs
rdtsc
or
call
outsl
xlat
out
push
pop
mov
scas
dec
sbb
mov
fstl
nop
outsb
cli
and
xlat
repz
in
sbbb
pop
popa
cmp
lods
push
dec
sarl
mov
cltd
aad
pop
pushf
out
push
arpl
mov
inc
imul
sub
mov
pushf
fimuls
mov
xchg
pop
mov
std
fwait
sub
push
testb
jo
sub
jb
inc
cmp
xor
pop
sub
push
hlt
adc
mov
rcrb
ja
rorl
xor
fdivrs
int
sub
mov
icebp
sbb
or
nop
mov
xchg
bound
ja
aaa
inc
loop
sub
popf
das
aam
ljmp
push
sbbb
mov
and
and
jp
out
and
dec
dec
dec
fisttpll
ja
add
and
push
cwtl
push
xchg
push
push
pop
icebp
jo
fs
lds
mov
rol
cmp
sahf
out
call
insb
inc
shlb
add
scas
mov
int3
or
xchg
mov
jp
test
push
mov
or
ret
sbbl
pop
inc
pop
jg
cwtl
outsl
xchg
jnp
ret
aad
loope
cmpsl
les
cmpb
jne,pn
mov
jmp
fldenv
rorl
and
xor
pop
or
push
push
ficoml
cmpsb
jle
mov
push
jge
repnz
lds
xor
repz
stc
dec
stc
clc
scas
cmp
sbb
sti
inc
mov
or
and
test
mov
cmp
ficomps
add
lret
mov
test
cmp
xchg
daa
inc
sbb
xchg
test
pop
aas
clc
es
iret
leave
push
xorl
data16
inc
push
insl
fs
notb
in
rol
dec
testl
xchg
test
mov
addl
fistps
push
outsb
jb
lods
sub
decb
xlat
xchg
jp
out
out
mov
movsb
mov
pushaw
hlt
fwait
imul
mov
mov
rclb
push
xor
daa
ss
imul
int3
imul
mov
pusha
xor
negl
test
sbb
lret
roll
cmp
inc
xorb
pusha
dec
fstl
sub
xchg
stos
jecxz
cmpb
xor
call
mov
dec
xor
xchg
jecxz
les
movd
scas
or
push
ja
loopne
repnz
aas
scas
add
mov
std
outsb
sbbl
ss
mov
or
cmp
xchg
adc
lock
test
scas
fs
daa
test
lds
sbb
dec
xchg
add
testl
clc
icebp
mov
lods
sub
push
mov
xor
mov
xchg
sub
push
nop
aaa
aad
fdiv
mov
test
mov
in
in
lahf
cmp
jl
xlat
call
sahf
in
pop
jae
adc
sub
nop
dec
add
pop
jo
frstor
lcall
popf
pop
outsb
mov
add
dec
mov
inc
in
lods
adc
out
insl
jb
mov
push
aad
jmp
clc
flds
shrl
xlat
lahf
das
push
es
cmpl
push
add
lock
and
add
mov
clts
fnstsw
into
push
fidivl
fisubs
mov
or
sub
jp
lods
sbb
pusha
adc
lret
mov
out
sbb
jmp
push
repz
aam
int3
xor
push
xchg
stos
jb
xchg
pop
xor
subl
jns
lcall
sbb
ljmp
pushf
in
fcoms
push
sbb
add
cmc
push
pop
pusha
lds
cmp
dec
leave
stos
lea
iret
out
nop
and
adc
fnstsw
xlat
pushf
dec
adc
pop
sub
mov
addb
lahf
in
mov
ret
mov
loopne
ret
sbb
cwtl
or
jno
das
stc
adc
mov
ljmp
jl
ss
in
xchg
and
lods
pop
lea
add
mov
out
adc
mov
adc
dec
adc
popa
xlat
mov
push
scas
adc
pop
jecxz
stc
xor
add
sti
dec
push
loopne
push
cs
mov
cmp
push
or
mov
or
movl
inc
and
sahf
lcall
push
adc
jl
push
sub
negl
add
ja
aam
push
mov
pop
mov
jno
jp
xor
push
add
jmp
pop
inc
cld
and
test
in
movsb
cmpsl
cld
jnp
and
sbb
std
aad
test
jno
inc
dec
add
sbb
insl
sbb
mov
xor
mov
jnp
mov
xlat
fistpl
mov
and
out
mov
ss
insl
inc
xor
jo
sbb
pop
jge
das
hlt
jle
popa
lcall
pop
ficompl
and
xor
outsb
adc
inc
out
pop
stos
loopne
sub
push
cltd
sub
scas
inc
inc
push
xchg
mov
leave
cs
dec
into
cmc
or
cmp
int3
jecxz
movl
push
jle
sarl
xor
mov
mov
inc
lds
test
jmp
push
iret
cmp
sbb
hlt
sub
add
add
shrl
test
out
sti
stc
dec
mov
shl
mov
les
pusha
stc
popa
in
ficomps
xor
sub
out
sub
mov
ds
scas
fcmovbe
xchg
lahf
cmp
call
ret
sub
jne
push
or
cmp
stc
ss
shlb
jnp
xchg
sahf
dec
data16
mov
ss
jbe
xor
mov
jp
inc
xchg
mov
pusha
and
lahf
cmpsb
js
mov
fildl
cmp
shrl
shl
xor
push
sub
adc
sbb
imul
sub
sub
movsb
mov
mov
ja
fstpl
mov
rol
imul
fiaddl
in
jp
cli
out
mov
sbb
add
mov
loopne
mov
aas
sarb
mov
pop
or
jg
sahf
sbb
hlt
fdivs
cmp
lds
inc
dec
mov
push
js
push
pop
js
xchg
leave
mull
out
adc
mov
test
pop
outsb
ds
aas
add
ss
dec
or
add
mov
aam
adc
ds
lock
and
add
push
es
sbb
sub
ss
sbb
stc
in
clc
leave
inc
shrb
imul
dec
ret
inc
sub
lea
xor
and
push
inc
lods
push
cwtl
popa
jecxz
mov
js
cmpsb
or
shr
lods
lcall
dec
cmc
pop
ja
jbe
dec
lods
es
inc
mov
popf
jae
push
mov
mov
leave
imul
les
rorl
jmp
cmp
sub
mov
aad
push
push
mov
shll
lret
clc
mov
cmp
fs
dec
arpl
cmpsl
test
fs
nop
or
aaa
push
ljmp
les
sub
cltd
sbb
mov
pop
scas
pop
ja
adc
mov
subl
ljmp
sub
dec
popa
loop
shrb
out
ficoms
ljmp
jl
cmp
mov
dec
stos
adc
jne
jns
xchg
mov
mov
jbe
mov
or
jne
imulb
enter
add
or
pop
mov
outsl
push
stos
or
insl
jns
ret
testb
inc
push
lods
test
xchg
rorl
xchg
adc
cmc
shll
and
xchg
push
cli
and
dec
loopne
nop
mov
mov
inc
sub
pop
mov
test
adc
mov
xchg
push
mov
roll
sidtl
sbb
push
lcall
and
es
jmp
push
sbb
sahf
nop
push
mov
push
jge
sub
push
or
pop
inc
repnz
push
cmp
dec
xchg
nop
adc
jecxz
push
ljmp
pushf
add
pop
inc
cmp
das
cmp
add
cmpl
cmp
test
xchg
add
add
mov
cli
and
aaa
mov
pop
das
xchg
testb
adc
arpl
sbb
fsubrp
sub
xor
rol
pop
inc
fimull
push
sub
push
push
mov
or
and
sub
int3
pop
mov
cmp
mov
add
repnz
dec
push
mov
test
pop
fstpl
xor
std
xchg
rol
dec
mov
imul
sub
shlb
pop
push
insb
push
lods
and
dec
pushf
fdivs
repz
dec
pop
cli
fsub
shlb
push
fbld
sub
mov
sub
in
lock
sub
shll
xchg
and
inc
sbb
adc
loop
sbb
mov
lods
cmp
cltd
xchg
jecxz
jp
out
inc
cwtl
and
ficomps
dec
cmp
mov
inc
sbb
add
rclb
stc
and
call
sti
ja
mov
jle
mov
ja
cli
lcall
mov
out
daa
add
xchg
out
clc
sahf
clc
sbb
mov
push
mov
jns
ficomps
popf
sub
jnp
mov
xorl
cmp
or
jg
adc
ljmp
sbb
in
out
mov
test
dec
pop
adc
fs
sub
mov
faddl
mov
packuswb
jle
rclb
cmc
mov
inc
push
repz
mov
call
jns
popa
dec
mov
subl
gs
loop
push
out
imul
push
clc
jno
cmp
inc
stc
xchg
test
nop
push
jg
fdivs
out
add
mov
clc
push
in
ss
mov
mov
sub
sbb
jns
cld
push
cli
mov
sub
sbb
pop
pusha
cmp
movsl
cmp
xchg
je
fsubl
adc
out
jb
xchg
sub
inc
jl
popf
mov
out
xchg
lahf
add
lea
inc
repz
jns
out
loope
imul
push
push
jge
stos
pop
addb
nop
cmc
pop
lret
mov
jmp
test
into
push
jp
incb
add
arpl
and
sub
pop
and
mov
les
push
movsl
mov
cmp
adc
shl
clc
adc
hlt
mov
ds
fildl
jl
sbb
lret
lea
lret
cwtl
imul
or
fmuls
cltd
aas
adc
mov
aas
mov
ja
insb
mov
test
sbb
lret
lret
fmull
dec
testb
inc
or
mov
cmp
lahf
jmp
scas
pop
fstpt
movsl
and
sbb
in
mov
and
movsl
inc
pop
xorb
pop
out
jle
xchg
enter
xor
pop
dec
jo
js
aam
push
xchg
fcomi
jl
mov
in
mov
mov
and
xchg
adc
dec
repnz
xchg
shrd
mov
stc
repz
cmpsb
mov
sub
dec
push
and
test
mov
dec
mov
insl
fnstcw
push
and
cld
fwait
dec
sub
ss
sbb
dec
out
movsb
les
stc
jp
jb
xchg
xor
mov
andl
arpl
xlat
popf
pusha
sti
into
add
das
outsl
in
repz
and
int
pop
ret
aam
popf
jle
dec
cli
mov
stc
sub
inc
xor
push
iret
sub
sub
clc
mov
and
aas
jne
sub
push
out
stos
and
and
pushf
fadd
ret
xor
push
cmp
xor
sarl
dec
test
push
pop
outsl
icebp
outsl
jle
cmpsl
jmp
pop
or
dec
dec
out
or
das
cmc
cmp
push
call
push
xchg
addr16
int
lcall
dec
cmp
jo
dec
jb
scas
jecxz
and
js
add
lock
insb
imul
jg
or
loop
jg
push
shl
push
dec
imul
loope
jmp
dec
or
push
mov
mov
lcall
cmp
mov
mov
sub
fcoml
enter
jo
mov
push
mov
sub
or
push
adc
xchg
cld
pop
mov
mov
sbb
cmpb
pop
sbb
dec
cmp
mov
cmp
mov
negl
in
scas
dec
fwait
das
xchg
dec
bound
fadds
sbb
dec
pop
cmp
cmp
mov
jo
mov
pop
sbb
or
jns
sbb
lret
add
xor
cmp
stos
sahf
and
je
fs
cld
mov
je
repnz
xor
ja
insb
sbb
in
popf
sbb
test
mov
sbb
mov
mov
movsl
aaa
xchg
cmp
and
enter
addr16
pop
cmp
pop
xchg
loopne,pn
clc
pop
xchg
sbb
imul
ret
stos
iret
sbb
loop
fmull
cmp
jle
mov
inc
and
xor
sub
in
gs
mov
add
xlat
xchg
mov
jo
aas
pop
adc
das
jmp
pusha
test
mov
stos
les
jge
add
jo
mov
inc
mov
xchg
push
arpl
xor
mov
dec
add
mov
pusha
push
cmp
xchg
and
mov
xor
xor
in
jo
mov
lcall
push
cs
add
cmp
fidivs
stos
loopne
cmp
pop
cltd
enter
aaa
mov
and
pusha
or
fists
bound
cmpsl
cwtl
lods
inc
lcall
sbb
fwait
push
pop
fists
lock
inc
rcl
jp
icebp
imul
cwtl
pop
jno
adc
roll
pop
push
lcall
call
mov
inc
mov
dec
imul
xchg
lret
mov
push
hlt
and
xchg
outsl
es
mov
clc
sub
jl
add
sub
or
inc
and
test
cmpsb
jne
sar
cmp
mov
lcall
xor
pop
in
icebp
fdivr
sbb
movsb
mov
movsb
push
insl
inc
ss
lcall
pop
lock
or
into
push
pop
xchg
lcallw
sarl
and
add
push
int
push
movsb
mov
rcrl
out
scas
outsl
rcrl
pop
lahf
pop
mov
stos
sti
fcmovne
lret
popf
xor
cmp
in
aaa
push
repnz
jle
mov
xlat
mov
mov
sub
adc
popf
gs
out
leave
arpl
aad
pusha
enter
into
fnstenv
in
cmp
cltd
and
scas
push
cmp
imul
dec
bound
pop
jnp
or
xor
test
jns
leave
ret
fwait
test
jae
icebp
push
cmp
cs
stos
mov
loope
fildl
pushf
sub
xchg
aad
and
cmp
call
pop
stos
fstpl
sbb
dec
sbb
imul
fists
loope
add
call
jl
mov
adc
aad
inc
push
push
inc
jno
pushf
fdivrl
pop
popa
loop
gs
js
push
sti
pop
inc
lret
xchg
dec
mov
mov
xchg
data16
movsl
push
andb
push
sub
push
pop
or
push
ljmp
pop
cld
mov
inc
inc
cmp
fnstsw
lock
ret
hlt
xor
incb
xadd
das
imul
dec
out
xor
lahf
cmp
push
fldl
std
push
xor
orb
out
cltd
addr16
mov
jmp
mov
into
bound
cmpsb
popa
fbstp
pop
insb
lods
mov
adc
adc
jne
jge
fs
lret
push
icebp
push
lods
add
jmp
sub
or
mov
into
and
push
fdivs
bound
mov
loop
sbb
jmp
hlt
add
mov
divl
dec
sbbl
cld
mov
jecxz
lea
jb
xor
test
cld
or
add
in
movsl
test
sub
cmp
bound
sbb
loop
fcmovnu
aad
mov
dec
add
mov
imul
stos
rcrb
testl
out
push
add
popa
xchg
into
sti
lret
mov
or
jle
inc
push
and
sub
out
xor
adc
dec
ret
push
xchg
nop
add
ficompl
mov
mov
mov
or
lret
mov
mov
cmc
cmpsl
add
and
xchg
or
xchg
cwtl
sbb
lods
jns
push
orl
loope
dec
test
xchg
and
jmp
fwait
and
add
mov
jae
jg
and
adc
adc
mov
jb
jns
cmp
or
cs
scas
sar
sbb
adc
sub
pop
idivl
dec
xor
cltd
push
adc
popf
or
nop
or
xor
addr16
out
push
test
push
mov
leave
repnz
mov
mov
adc
mov
and
dec
inc
fwait
dec
adc
or
shlb
xor
fisubrl
xchg
adc
pop
movsb
incl
pusha
mov
and
xchg
add
adc
insb
cmp
cmp
int
pop
cmp
mov
mov
lret
inc
shlb
out
mov
cli
sbb
pop
pop
stc
pop
inc
addr16
push
pand
jp
dec
rorl
test
jg
jg
aad
dec
fdivr
sub
xor
into
jbe
mov
movsb
test
call
jecxz
adc
daa
lods
cmpsb
push
add
sub
fidivrl
mov
decl
loope
or
scas
push
in
hlt
movsl
sbb
jbe
dec
sbb
xchg
popa
fwait
xor
pop
add
or
sub
lea
add
mov
subl
xchg
adc
pusha
insb
push
nop
pop
imul
mov
dec
stos
and
test
jle
daa
sbb
push
xchg
cmp
mov
jnp
inc
pop
xor
lods
aad
push
and
push
xor
push
loop
roll
les
ljmp
jmp
jmp
in
es
pop
in
mov
sub
xor
xchg
cmp
pop
fbstp
out
int3
loope
divb
insb
dec
mov
xchg
jp
jg
movb
repz
imul
push
int3
and
mov
push
test
icebp
sahf
cmp
fimull
sbb
arpl
sti
in
lret
pop
fstp
mov
jle
adc
inc
pop
sub
sbb
les
adc
pop
cmp
mov
sub
dec
push
cmpsb
outsl
xchg
mov
lea
es
xlat
hlt
jle
hlt
into
mov
ret
gs
cli
fstpl
jnp
enter
movl
mov
mov
pop
and
add
ret
or
outsl
jbe
inc
lret
lock
cmp
shrl
push
mov
jns
in
shlb
xchg
cmp
push
xchg
scas
xchg
pop
dec
mov
mov
cmpb
sti
xor
mov
ja
adc
inc
movsb
add
pop
imul
push
pop
add
shlb
scas
shll
clc
xor
test
mov
jbe
fimull
and
inc
pushf
xchg
out
dec
jnp
jmp
daa
add
dec
cmp
jmp
mov
push
dec
push
testl
sbb
out
stos
insb
mov
adc
mov
cwtl
ficoml
stos
loope
adc
adc
gs
cmpsb
insb
addl
push
push
gs
or
pop
mov
push
outsb
ret
and
lret
inc
mov
daa
rcrb
repz
mov
call
or
jmp
sbb
and
lcall
cmp
inc
mov
pop
iret
ss
rcrl
dec
xor
fisttpll
andl
fbld
cmp
daa
xchg
cmpsb
or
lcall
mov
or
jge
xor
or
xor
bnd
xchg
cli
popa
add
and
xor
inc
add
and
mov
adc
xchg
cmpsl
in
or
sub
sbb
push
and
adc
lea
jae
outsl
jo
out
cwtl
fnstcw
aas
divl
pop
fildl
pop
mov
stc
les
push
mov
out
or
jns
sbb
movsb
xchg
clc
notl
mov
pop
mov
lcall
jbe
pop
jge
sub
out
adc
and
adc
test
aaa
mov
mov
add
stos
dec
mov
or
or
popf
mov
mov
arpl
cmpl
pushf
cmpsl
or
in
pop
sub
shrb
into
fisttpl
pop
repnz
and
and
mov
and
sarl
cmp
dec
push
fsubs
orl
scas
leave
call
xchg
arpl
jg
inc
jecxz
push
out
dec
lds
in
xor
inc
int3
jne
icebp
ja
mov
loop
mov
fmull
mov
out
ljmp
lods
xor
clc
xchg
fistpl
jne
mov
mov
and
mov
imul
or
aas
mov
cmpsl
jnp
sbb
dec
mov
xlat
xlat
scas
call
pop
mov
arpl
sbb
mov
or
test
cmp
dec
notb
mov
adc
bound
cmp
sbb
xchg
repz
mov
insl
scas
mov
mov
mov
dec
fsubrl
xchg
lret
fcoms
aas
inc
test
mov
sbb
sbb
jge
dec
mov
mov
icebp
outsb
xchg
xor
in
testb
ficomps
nop
sbb
adc
mov
push
call
and
dec
add
sub
or
icebp
xchg
mov
fwait
mov
inc
ja
xor
addr16
xlat
jecxz
jbe
jb
pop
ja
mov
shl
sbb
mov
mov
add
mov
in
push
xchg
xchg
cld
ss
imul
inc
leave
cld
xchg
into
mov
pop
and
and
jp
mov
mov
inc
push
sahf
or
pop
lret
addb
jno
fimuls
push
scas
or
shlb
sbb
adc
jge
xchg
test
jne
xor
and
les
and
xor
nop
cmp
rolb
lcall
in
add
int3
xchg
jmp
stos
sub
add
fbstp
fisttpll
xchg
push
lret
cmp
pop
sbb
or
cmpsb
dec
mov
jmp
inc
dec
aam
mov
mov
push
movlps
mov
push
xor
mov
mov
xor
imul
pop
adc
fst
mov
xor
add
rcrl
mov
pop
iret
jno
cmpsb
mov
sarl
insb
mov
test
repz
push
cli
push
pusha
cli
and
icebp
ret
xchg
ret
test
jae
mov
push
in
mov
xchg
jae
ljmp
mov
xor
test
adc
mov
lea
adc
js
mov
sbb
cld
outsl
mov
lods
cwtl
das
mov
mov
mov
mov
mov
loope
lret
jl
aas
dec
mov
scas
xor
push
js
xlat
pop
inc
xchg
push
ja
dec
imul
pop
sbb
cmp
pop
xor
adc
xor
mov
divl
mov
dec
and
lods
xchg
xchg
insb
xchg
adc
push
mov
js
xchg
std
das
outsl
daa
gs
aas
sbb
jbe
sbb
cmp
clc
fisttpll
fcomps
mov
nop
mov
pop
dec
mov
int
test
sbb
xor
xchg
xor
repnz
movsl
and
fcomp
incb
mov
jmp
mov
mulps
jno
mov
cmc
cmp
fwait
push
sbb
sub
movsb
pop
push
pop
cmp
pop
dec
mov
es
inc
and
lea
xchg
shlb
repnz
mov
ja
xor
rclb
adc
push
cld
stc
add
mov
rcl
jge
or
add
lret
adc
push
repz
adc
cmpsb
mov
rcl
add
ss
mov
idivb
sbb
imul
int
xchg
addr16
icebp
push
or
inc
cmc
or
adc
cmpsl
outsl
gs
call
mov
inc
adc
inc
push
outsb
pusha
dec
lock
inc
cs
or
or
insb
out
jge
scas
or
push
js
jl
popf
rclb
adc
or
pop
mov
pop
fstl
inc
mov
imul
mov
aas
lock
push
insb
fldenv
mov
adc
enter
jmp
add
das
xchg
dec
mov
push
ja
and
rolb
fsts
imull
jl
cwtl
push
ret
mov
jg
add
sbbl
sbb
pop
cmp
rorl
jae
mov
mov
add
mov
int3
insl
sbb
add
mov
clc
lds
and
push
rorb
add
dec
loop
ss
popa
in
outsl
sub
test
jge
xor
scas
adc
lods
subl
cmp
xchg
sbb
imul
mov
push
or
pushf
add
adc
bound
ja
lods
icebp
jmp
pop
jp
inc
cmc
push
sahf
cs
cltd
sub
ret
add
daa
fcmovbe
dec
cmc
scas
test
lahf
call
and
xchg
test
out
pop
dec
aas
cmp
pop
nop
mov
inc
iret
cmpsl
or
rorb
aas
arpl
mov
ficomps
cmpsl
loop
lahf
fadds
mov
data16
inc
push
push
pop
jecxz
in
mov
mov
sub
lods
or
and
je
or
call
xor
adc
outsb
add
mov
jle
sbb
xchg
dec
les
bndldx
stos
in
in
pusha
cmp
cli
push
xchg
std
iret
xor
lock
mov
xchg
mov
push
les
hlt
push
and
aaa
pop
sbb
adc
ljmp
jo
mov
outsl
lods
sbb
adc
pusha
ret
cmp
pushf
les
jg
mov
ret
mov
push
fs
cmp
mov
idivl
cltd
popa
cmc
or
mov
push
shr
iret
stc
in
aas
call
fdivr
dec
mov
lods
insb
and
mov
jb
sbb
or
std
mov
popf
rorl
or
push
jbe
mov
out
lds
dec
or
mov
jnp
scas
sbb
mov
or
inc
loopne
lahf
js
add
roll
adc
push
pop
cmp
fidivrl
insl
jle
add
add
or
jbe
cli
mov
jg
test
xorb
push
dec
bound
das
pop
lret
adc
sub
sbb
aas
pop
push
out
or
and
popa
out
rorb
sub
dec
fstl
xor
fiadds
pop
call
add
xchg
shrb
adc
jg
insl
and
repnz
movsb
and
mov
call
push
inc
fisttps
xchg
shlb
xchg
cld
jns
dec
jmp
test
xchg
add
fwait
pop
add
push
leave
shll
in
sahf
mov
pop
xor
pop
test
movsb
cmp
cmpsb
or
sbb
jno
cmp
fwait
stos
push
dec
push
jl
xor
stos
mov
push
out
insb
int3
adcl
mov
push
stc
movsl
out
shl
lds
adcl
push
add
sub
add
fs
fldl
test
mov
adc
add
insb
jmp
ja
mov
movsl
xlat
xchg
inc
pop
fistpl
lcall
dec
je
dec
shrl
adc
rcr
shrb
int3
and
sarb
add
fstpt
lret
push
add
jb
out
fs
push
aad
clc
xchg
mov
lahf
pop
ret
mov
and
in
aad
leave
repz
loope
cmp
imul
iret
xchg
xchg
cmp
xor
insl
lea
aam
rcrb
ljmp
icebp
mov
mov
cmpsb
mov
push
scas
xor
adc
push
pop
adcb
xchg
mov
and
fisubrs
add
sbb
icebp
xchg
xchg
jae
mov
cmp
xchg
jae
sbb
rcr
dec
mov
out
lret
or
fbstp
das
sbb
add
fsts
popf
xor
scas
negb
pop
jmp
fcoms
mov
out
subb
jb
xchg
inc
jae
cmp
adc
push
iret
cmpsl
xchg
xlat
cmp
lahf
xchg
arpl
add
rcll
push
mov
mov
cld
xlat
out
sar
sbb
push
cmpsb
cwtl
or
pop
push
dec
jns
scas
fs
cli
rorl
jns
xor
pop
xor
push
scas
mull
inc
jge
sub
sbbl
iret
icebp
scas
je
push
sbb
movsb
lods
inc
add
fnsave
mov
jnp
jge
jg
clc
lret
mov
adc
daa
insl
push
push
mov
fs
pop
or
popa
inc
mov
pmulhuw
scas
test
and
fisttps
xor
imul
pop
mov
test
mov
jns
shrb
hlt
cmp
xchg
xchg
inc
mov
sbb
shr
loop
mov
sti
addl
jne
into
subl
jnp
mov
outsl
std
dec
inc
inc
insl
out
outsb
adc
fcomps
sbb
push
inc
popa
fstpt
pop
insl
mov
cmpsl
mov
movb
lods
fldl
sbb
das
mov
dec
jno
add
movsb
inc
or
arpl
cmp
pop
out
sub
cmp
fs
jno
insb
xor
ljmp
sub
dec
inc
sbb
jmp
imul
xor
mov
popf
cmp
aam
inc
push
push
test
lods
cltd
repnz
inc
mov
mov
out
daa
sarl
fsts
xor
stos
lock
mov
dec
push
cld
scas
xchg
sbb
mov
mov
fsubl
inc
mov
stc
popf
aas
pop
es
mov
cli
mov
icebp
mov
add
imul
add
xchg
adc
or
mov
push
sub
cwtl
js
dec
push
inc
lea
dec
xchg
clc
push
mov
inc
push
addl
rcrl
mov
xor
lock
repz
inc
pushf
add
cmp
rcrl
cmp
imul
push
mov
or
xchg
push
jnp
and
pop
scas
xchg
pop
adc
outsb
xchg
jo
loopne
rol
mov
or
xchg
or
stc
cmp
xchg
scas
mov
iret
dec
xchg
ret
jmp
mov
pop
or
sub
inc
pop
ds
rcll
sbb
xlat
mov
mov
xor
jo
sbb
loope
data16
idivl
mov
mov
push
icebp
jb
repz
adc
inc
stc
aas
xchg
aad
inc
xchg
in
adc
sub
in
adc
mov
or
imul
int
mov
cmp
or
xchg
push
adc
rorb
mov
mov
jle
push
add
mov
lds
xlat
cmp
xor
icebp
push
inc
ds
cltd
cs
stc
xlat
cmp
inc
shlb
pop
pop
int
adc
or
popa
in
lahf
pop
les
cld
inc
adc
mov
mov
stc
mov
adc
jbe
testl
or
pusha
push
btl
cmp
movsl
push
cmp
insl
pop
int3
arpl
mov
in
outsl
pop
pop
mov
jo
js
rcrb
mov
jnp
jae
scas
adc
cmpsb
adcl
mov
cmpsl
shll
jl
idivl
and
lods
out
sub
jmp
lds
mov
sahf
pop
cmpsl
popa
sbb
inc
add
mov
cmpsb
aaa
cmpsl
popf
xor
mov
repz
loop
lahf
xchg
aam
cmovne
xchg
out
fnsave
and
scas
dec
jnp
shr
fs
or
mov
jmp
jl
or
pop
pop
lds
popf
push
add
test
rorl
out
pop
pop
addr16
icebp
mov
pmaxsw
mov
or
push
xchg
and
subb
in
or
dec
ret
and
addr16
sbb
push
pop
in
mov
mov
push
fimull
mov
sbb
mov
pop
loop
sarl
xor
push
int3
xor
mov
cwtl
add
int
cmp
sub
insl
ja
cltd
sub
aam
outsl
mov
xchg
testl
and
mov
push
jp
and
mov
sbb
stos
and
adc
xchg
lods
cltd
stos
mov
pop
in
or
cmp
cs
scas
sbbl
mov
xchg
and
js
test
jge
mov
mov
lock
scas
cmp
test
fisttps
repz
mov
mov
mov
sbb
xchg
mov
pop
or
mov
sub
mov
lahf
scas
push
subl
or
pop
jnp
xor
mov
cwtl
xchg
aas
inc
push
testl
hlt
or
imul
sub
xchg
sbbb
xor
outsl
sbb
pop
xchg
lahf
inc
cs
cmc
inc
mov
pop
mov
sub
inc
mov
and
adc
mov
in
sub
mov
xor
inc
mov
mov
lea
cmp
aaa
lock
jmp
test
sbb
sbb
pop
mov
jge
mov
xchg
fcomp
scas
ficomps
js
pop
jns
mov
mov
pop
ljmp
adc
push
stos
insl
cltd
pop
jle
cmp
call
fsubrs
fstps
xchg
and
stos
loop
jg
pop
mov
mov
sbb
sbbb
lret
sbbb
cwtl
or
and
loope
jae
outsl
push
nop
push
adc
xlat
js
jbe
mov
push
movsl
pop
cmpsl
adc
xor
in
jge,pn
aad
push
pop
scas
jns
loope
cmp
inc
out
ret
cwtl
ss
push
stc
add
fistps
mov
inc
adc
into
mov
in
loopne
movsb
inc
fisubl
fiaddl
sbb
idiv
xor
call
popf
xchg
aam
fsubrl
sbb
outsb
ret
loop
add
xchg
lea
ss
jp
adc
mov
add
pop
lods
adc
cmp
pop
push
fistps
xchg
adc
aaa
sub
cmp
adc
shl
inc
inc
pop
shl
insl
push
fsubs
and
xchg
sub
inc
sbb
and
dec
push
insb
adc
fistpll
dec
lods
adc
xchg
in
cmp
xor
out
pop
cmp
stos
xchg
std
fildl
popa
jns
cwtl
cmp
xchg
insb
add
sbb
and
mov
outsb
fwait
adc
ja
jmp
cmpsl
scas
scas
mov
out
mov
repnz
jl
add
sbb
cmp
push
das
pop
jb
pop
popa
shrl
or
mov
mov
xor
int3
and
test
inc
fsubl
in
data16
adc
fs
movsl
fsubs
sbbb
cs
jnp
sub
add
cmp
stc
lahf
rorb
sbb
stos
ja
sar
lret
fstl
int3
xor
lret
subb
and
mov
jmp
in
cmp
lahf
inc
or
mov
les
dec
js
imul
decb
ss
lret
add
or
mov
pop
hlt
cmp
pop
pushf
mov
or
dec
pop
mov
out
enter
test
mov
sbb
daa
jno
lret
inc
in
andl
in
fcom
adc
inc
shr
add
sub
cli
movsb
stc
sbb
sub
cwtl
loope
adc
out
hlt
iret
and
mov
fucomi
mov
shrl
dec
mov
add
sahf
addr16
xor
xchg
add
add
or
test
sti
cmp
subl
nop
pop
out
sbb
outsb
adc
inc
enter
push
mov
jno
push
push
jno
cmc
mov
mov
mov
dec
shr
mov
adc
scas
flds
push
pop
add
push
mov
orl
ljmp
aad
sbb
test
or
adc
popf
shll
adcb
test
xor
dec
cltd
mov
xchg
sub
xlat
aam
pop
jo
ds
sbb
sbb
repz
lcall
dec
daa
mov
in
pop
aam
xchg
mov
push
xor
dec
or
out
imul
adc
enter
fwait
lahf
dec
push
lcall
cmc
test
gs
or
adc
sbb
loopne
aas
sub
cmp
push
inc
push
sbb
and
sbb
loop
in
idiv
push
xchg
xlat
and
lds
lcall
test
repz
or
enter
or
cmp
test
inc
lds
pushf
mov
nop
fildll
pop
pop
push
imul
mov
fimull
ret
sbb
xor
jmp
jecxz
mov
das
test
cld
jge
sub
sub
gs
scas
mov
movsl
mov
jecxz
mov
cmp
dec
inc
cmpsl
cmp
xor
mov
push
cltd
adc
rol
ror
call
sbb
mov
xchg
sub
repnz
mov
roll
aam
and
jae
daa
pop
cli
lock
call
pop
test
sbb
xor
enter
lcall
test
mov
loopne
int3
push
xor
sub
and
outsl
xchg
adc
repz
sarl
ds
dec
mov
mov
pop
leave
mov
push
add
push
pop
and
in
mov
mov
lret
dec
adc
push
and
inc
cli
and
out
sub
pop
jns
sub
adc
in
dec
mov
hlt
pop
cmp
dec
jl
mov
push
jmp
adc
in
sti
in
inc
xchg
fwait
or
mov
cs
mov
push
mov
mov
jge
or
adc
nop
insb
std
mov
push
outsl
call
xor
jge
xor
push
outsl
out
mov
adc
adc
pop
scas
pop
add
xlat
mov
jbe
rcrl
out
aaa
fwait
popfw
push
push
cli
mov
mov
pusha
clc
xchg
jb
push
xchg
push
jnp
mov
pop
or
push
push
mov
rcr
fnstcw
mov
inc
mov
cli
jmp
hlt
ss
je
cld
add
adc
mov
xchg
xor
sub
lods
add
cwtl
loope
fcompl
out
mulb
sbb
cwtl
sub
mov
shlb
xor
dec
sub
test
adc
in
xorb
imull
adc
mov
ficomps
mov
rcrl
jb
or
hlt
sbbb
out
mov
sub
repnz
xchg
xlat
and
adc
popf
in
inc
rcrb
das
sbb
sti
sti
ljmp
push
xchg
imul
or
or
or
mov
nop
loope
idivb
or
cld
insl
mov
popa
add
cwtl
push
mov
and
or
das
sbb
lea
dec
pop
push
test
adc
sub
inc
leave
inc
push
mov
inc
popa
mov
into
scas
cli
xor
mov
sbb
stc
lcall
xchg
iret
xchg
or
xchg
imul
jae
mov
outsb
xor
or
ret
inc
leave
in
stos
rol
cmp
aad
push
push
dec
dec
testb
mov
and
inc
mov
nop
jle
shlb
push
xor
xlat
dec
push
push
jmp
dec
test
cli
lods
add
sbb
sub
jge
imul
and
mov
mov
movsl
popa
loope
orb
stos
pop
sbb
jl
mov
xchg
aas
aad
sub
aad
sti
hlt
xchg
cmp
sarb
addr16
fstp
mov
push
jnp
mov
pushf
jp
and
mov
add
xchg
in
icebp
push
mov
stc
aaa
inc
das
into
icebp
popf
xor
pop
inc
pop
inc
repnz
insl
push
mov
in
lret
cmp
shll
and
or
mov
and
bound
adc
push
adc
out
xor
iret
cmpb
xlat
jle
test
dec
scas
pop
mov
jl
mov
aam
fcmovb
movsl
push
sbb
fs
xchg
xchg
cmpsb
jmp
mov
xor
xor
aam
cld
enter
or
inc
pop
push
cmp
jbe
bswap
lea
dec
aam
mov
xchg
pop
dec
push
mov
ja
cmp
ret
pop
adc
xor
xor
push
inc
sub
lret
fiadds
out
jns
pushf
scas
push
es
jl
inc
and
xlat
xchg
mov
cltd
cli
repz
sub
xchg
ret
out
out
sub
inc
jbe
xor
or
add
iret
inc
jg
sub
mov
xchg
aaa
jno
jp
xor
ljmp
push
sub
sbb
xchg
sti
out
js
sbb
add
subb
inc
inc
aas
and
aad
call
mov
and
push
add
lret
sti
popf
lahf
mov
jno
std
xor
xorb
movsl
lods
sbb
mov
cmpsl
mov
les
mov
xchg
out
xchg
pop
hlt
sub
ss
dec
movsl
rcll
xchg
adc
pop
jne
ror
sub
push
or
dec
cmc
xor
push
adc
lahf
lret
aam
aad
aas
cltd
sub
xchg
ret
cltd
fcomi
or
cmpsb
pop
sbb
stc
aas
add
xor
nop
sbb
in
pop
hlt
dec
mov
jbe
dec
mov
push
test
inc
xchg
inc
xchg
in
jg
cmc
scas
dec
cwtl
fs
aad
add
movsl
or
mov
xor
mov
jae
enter
ss
cmp
inc
inc
popf
sub
out
pop
push
lods
fnstsw
fists
pushf
add
pusha
xor
or
sub
lret
jb
imul
push
mov
mov
cs
xchg
xor
xor
dec
add
jmp
cltd
hlt
decl
sbb
xchg
inc
jp
mov
jg
dec
and
fstpl
xchg
cmp
push
bndstx
lds
jno
mov
test
and
mull
sbb
mov
lret
jbe
pop
sahf
lods
add
lds
push
es
push
lods
push
jmp
jle,pt
test
sbb
cmp
aas
lret
jae
cmp
jne
pop
xchg
jle
cmpsb
out
inc
lcall
lret
xor
adc
mov
insb
out
in
lea
jg
inc
lock
aas
mov
lret
add
jmp
in
inc
scas
jp
pop
jmp
lods
push
xchg
cmp
lret
lcall
jno
jae
in
adc
mov
pop
inc
xchg
test
mov
stos
es
jnp
aad
fidivrl
or
cltd
ljmp
test
sbb
xor
arpl
fcomp
in
mov
xchg
push
jo
or
xchg
outsb
or
fmul
scas
xchg
outsb
test
lret
jl
lea
push
jb
clc
daa
scas
fldt
imul
mov
mov
mov
adc
ljmp
test
jmp
rcll
xor
jg
add
sbb
dec
pop
pusha
test
jno
or
or
cmc
popa
int
imul
or
dec
xor
jne
jae
jmp
dec
aaa
inc
bound
addr16
nop
push
iret
jecxz
loopne
lea
cwtl
jecxz
mov
xchg
cmpsl
mov
xor
imul
push
mov
out
mov
repz
pop
pop
scas
mov
addr16
xor
mov
and
dec
daa
jns
into
fwait
inc
aas
xchg
ret
xlat
and
repz
neg
xorb
cmp
imul
nop
pop
lret
xchg
xlat
out
scas
fs
adc
xchg
push
pop
xlat
and
and
inc
stos
mov
cld
ret
cmp
stos
add
daa
or
stos
adc
or
imul
adc
sarl
and
add
mov
adc
xorl
pusha
jp
mov
mov
push
mov
dec
inc
subl
inc
leave
in
fdivrs
mov
sub
add
jle
fimull
push
jecxz
xchg
std
call
testl
xor
int3
mov
pop
sbb
mov
shrl
sti
shrl
mov
pusha
mov
add
dec
lods
jnp
or
call
and
ja
mov
cmpsb
jecxz
mov
push
lock
adc
xchg
mov
mov
das
push
mov
cmp
imul
xchg
jne
insl
sbb
pop
inc
stos
into
pop
inc
mov
xchg
mov
xor
mov
dec
or
jmp
dec
in
jb
mov
xchg
add
fiaddl
xor
shlb
ss
gs
sub
fcmovu
jo
scas
cmpsl
imul
jne
push
xor
in
test
lcall
mov
arpl
mov
and
mov
sub
mov
and
pop
push
xchg
sub
mov
pop
imul
sbb
or
lods
and
in
mov
dec
rol
dec
imul
sbb
inc
lcall
fwait
jb
xor
mov
ja
ss
lcall
mov
jecxz
shlb
test
notb
push
int
sbb
ds
clc
ja
inc
mov
dec
lods
sbb
add
enter
mov
loop
inc
testl
xchg
cmpsl
ss
lods
aas
std
xor
je
addr16
cli
pop
test
sbbl
add
in
fsts
loop
cmpsb
mov
in
xchg
pop
xor
dec
in
mov
fimull
movsl
jecxz
fwait
cmp
cmp
sbb
or
fwait
push
jb
fnstenv
or
mov
and
dec
pop
sarl
fcoms
movb
jge
mov
xor
out
sub
pop
test
mov
add
movsl
ja
mov
adc
mov
add
lea
ljmp
adc
inc
mov
mov
push
insb
xchg
lret
xchg
imull
repnz
test
sti
daa
fisttpll
sti
add
dec
jg
lods
imul
int3
rclb
jo
xchg
notb
cmpsb
popa
and
cmp
pop
ret
cli
int3
mov
push
mov
pushf
or
cmp
enter
jae
and
pop
shlb
cmc
mov
std
sbb
outsb
stos
mov
movsb
fstp
adc
shll
xchg
imul
dec
jno
mov
jne
in
xor
inc
mov
adc
mov
loopw
xor
mov
sbb
pushf
cltd
xchg
stc
mov
inc
pop
outsb
pop
add
add
sbb
push
clc
lds
pop
inc
addr16
adc
out
ds
je
mov
rolb
sti
call
fisttpl
mov
sar
xchg
mov
call
adcb
xchg
push
xchg
sarl
leave
call
cli
push
les
adc
addr16
test
or
sahf
add
sbb
mov
leave
sub
push
fidivs
sbb
inc
pushf
fdivr
xor
sti
dec
int
mov
jp
into
movsb
mov
fildl
out
addr16
and
lret
mov
push
xchg
sbb
ret
fwait
pop
or
lods
stos
in
ja
movsb
outsl
lahf
movsb
jae
lcall
mov
push
popa
popa
push
adc
adc
call
repz
rolb
int3
js
lds
mov
repnz
adc
ret
push
stos
cmc
push
mov
gs
xor
and
test
xchg
push
mov
xchg
lahf
cmp
push
ja
xor
arpl
or
ss
scas
inc
scas
hlt
lret
pop
outsl
dec
je
mov
jle
mov
pop
movsl
jns
aam
or
mov
xchg
mov
aaa
mov
out
pop
rol
sbb
test
push
out
jne
and
mov
mov
mov
sbb
push
sub
icebp
mov
xor
mov
inc
popf
jo
enter
xchg
xchg
mov
cmp
ja
mov
xchg
enter
jne
sub
jb
sub
hlt
fcomps
add
dec
add
pop
jge
pop
xchg
and
push
cmp
sahf
scas
sub
sub
inc
clc
outsb
mov
fadds
fidivl
add
jbe
imul
xor
subb
rcrb
pop
in
sub
xor
or
mov
mov
dec
adc
jecxz
sub
rorb
enter
in
ja
adc
fcomip
orl
andb
pop
pop
pop
pusha
imul
xchg
fdivrl
call
addl
pop
jne
inc
ret
fisubrl
xchg
inc
mov
lea
push
aas
adc
cmp
jp
mov
xchg
fimuls
push
and
xor
pop
mov
cmp
rcl
jp
jno
shl
aam
xchg
pop
bound
sub
pusha
push
mov
cmpsl
lret
ljmp
rorb
and
push
lret
add
add
or
imul
mov
popa
pop
lock
adc
fs
lds
xchg
adc
loop
cmpsl
jbe
dec
fadd
add
cmc
lock
inc
inc
jo
mov
daa
jge
scas
loop
mov
test
das
mov
mov
test
dec
out
push
data16
push
gs
popf
mov
and
aad
push
in
jp
pop
int3
insb
pop
std
jb
push
and
xchg
adc
inc
dec
shlb
shll
and
imul
mov
mov
mov
daa
negb
enter
sbb
cmp
adc
sbbl
mov
inc
jg
mov
addl
inc
push
cli
mov
adc
mov
inc
mov
psllw
imul
inc
mov
push
in
leave
jnp
sub
and
cmp
sahf
test
daa
push
mov
xor
gs
mov
xchg
mov
int
jnp
mov
cmpsl
add
cld
adc
mov
or
in
mov
sbb
jns
bnd
jg
js
aam
sub
lcall
adc
adc
or
dec
scas
add
mov
or
inc
add
mov
out
lret
mov
pop
std
leave
jl
mov
pop
mov
push
das
lret
aad
push
rol
xor
fiadds
xchg
sti
roll
mov
pop
sub
mov
outsb
sub
cmp
sbbb
mov
cmc
stos
mov
push
lcall
or
popf
cmpsb
into
outsb
push
insl
or
arpl
xor
popa
push
add
mov
jnp
scas
push
mov
mov
sub
push
cmc
int
fimull
lahf
ret
cmpsl
cwtl
push
repnz
dec
inc
xchg
xchg
in
adc
arpl
shrb
into
dec
sub
jb
xor
push
fildl
and
push
jno
xchg
mov
insl
daa
cmp
adc
mov
mov
sub
cmp
or
das
push
shrl
xchg
imul
popa
jmp
cwtl
inc
loope
mov
cwtl
out
popf
mov
add
jbe
dec
adc
fwait
push
cmp
push
cmp
loopne
fildll
dec
pusha
adcl
jg
std
cwtl
mov
sbb
insb
ficompl
mov
mov
lret
cmp
xor
outsl
repz
inc
cltd
and
jno
lock
lcall
jnp
ret
sub
inc
inc
mov
clc
jmp
xor
outsl
rorl
cs
lea
fldl
fs
shrb
aas
pop
jae
jb
inc
push
leave
xchg
lahf
test
iret
push
mov
adcb
xchg
and
fimull
push
rorb
jg
movb
push
push
call
movsl
shll
aaa
jl
xorl
lret
pop
or
jne
in
pusha
jo
les
and
or
out
mov
push
stos
sbb
mov
movsl
push
inc
push
cmp
mov
xor
and
dec
pushf
push
sbb
sbb
dec
fidivl
loope
xor
shrb
fisttpll
psrad
sub
add
lock
pop
push
pop
xchg
adc
cs
insb
sbb
fwait
jb
push
popl
cltd
std
stos
repnz
sub
mov
ja
daa
pop
pusha
push
and
int3
push
xchg
cld
pushf
mov
jb
jecxz
outsb
push
inc
inc
int3
arpl
imul
mov
arpl
mov
cmp
xchg
xor
mov
add
or
jge
idiv
bound
pop
testl
dec
enter
fucom
test
sarb
mov
aaa
das
enter
in
stos
and
cmp
xchg
pop
pop
aad
push
test
shl
sbb
jbe
ds
stos
inc
hlt
and
test
add
adc
push
fstpt
bound
pushf
and
fnstenv
movsb
ljmp
es
rcr
inc
push
add
push
and
jne
fidivrs
fimuls
jno
testl
mov
enter
mov
std
mov
ss
pop
test
andb
xor
les
rcr
push
aaa
pop
push
xchg
mov
pop
push
fldenv
aad
mov
or
stos
pop
movlhps
and
popa
scas
jo
js
sbb
aad
outsl
push
mov
outsb
fisubs
aad
mov
lret
dec
fwait
adc
out
lock
mov
inc
es
xor
stos
sbb
push
scas
push
dec
jo
lock
jno
push
cmp
loope
mov
cmp
cmp
into
jp
icebp
add
lds
mov
dec
pop
icebp
pushf
nop
iret
xchg
dec
push
shrb
xchg
lea
pop
mov
flds
jb
in
sbb
xchg
aam
and
push
pop
das
push
aad
inc
adc
or
mov
daa
mov
jle
push
inc
sbb
cs
mov
test
test
mov
inc
out
jl
push
inc
cmp
adc
dec
pop
daa
imul
cmc
lret
stos
stos
adc
cmp
scas
cmp
leave
jmp
xchg
clc
dec
bound
push
cmpsl
push
int
mov
and
mov
cmp
sub
mov
sti
cmp
fstpt
fwait
sbb
and
pop
sbb
dec
sub
mov
mov
ret
out
sub
mov
push
push
jmp
adc
xor
lahf
lret
add
xchg
lods
jg
inc
mov
je
lock
dec
cmp
aad
imul
adc
jmp
rorb
sub
or
mov
mov
mov
jmp
sub
ss
mov
push
sahf
lea
loopne
sbb
and
shll
inc
aad
mov
cltd
cs
inc
pop
out
push
lods
add
inc
rorl
es
lcall
cmpsl
outsl
outsl
cmpsl
ja
jmp
in
push
les
jmp
sub
dec
mov
lahf
lods
jns
jl
std
test
testl
test
add
lahf
fcompl
mov
sbb
push
xchg
mov
inc
or
mov
fs
sti
dec
daa
in
nop
in
and
push
xor
jnp
and
orb
inc
mov
and
push
adc
rorl
add
into
jo
xchg
mov
mov
mov
pop
sbb
sbb
mov
push
ljmp
shrl
stos
cmp
imul
add
movsl
adc
jmp
insb
insl
sti
loop
jne
push
sub
cmp
test
sahf
or
adc
rolb
aam
lret
push
lea
pop
xchg
aam
mov
xor
jl
sbb
outsb
pop
or
out
test
cmpsl
lods
mov
jmp
es
sbb
out
hlt
adc
out
ror
movsb
daa
std
push
push
sub
gs
sub
std
cs
popa
imul
mov
xchg
lods
jne
in
fsubrl
add
cmpsl
out
xlat
mov
scas
lret
xchg
test
shll
out
aas
dec
cmp
cmp
adc
iret
mov
out
ljmp
mov
cmp
popf
mov
int3
imul
adc
data16
xor
xchg
mov
pop
add
fstl
adc
popf
jecxz
push
lock
cmpsl
repz
call
and
in
insl
in
or
mov
mov
mov
and
test
lea
mov
cmp
mov
pop
sub
sub
pop
mov
int
add
cmp
pop
push
cmp
pop
test
add
cmp
xchg
cmp
sub
pop
out
and
ljmp
jg
fisubl
inc
sub
in
dec
enter
shl
mov
xchg
mov
jl
and
fdivrl
loope
insl
inc
rorb
mov
or
imul
cmp
into
inc
mov
push
fcmovnb
sbb
add
sub
add
xor
xor
mov
shrb
mov
mov
lahf
jb
bound
aam
cmp
movsl
push
xor
mov
pop
repz
mov
lea
dec
jnp
test
fistl
loope
jg
hlt
rcll
xor
jae
xchg
sbb
lea
fldcw
xor
imul
and
fsubl
lea
push
sbbl
mov
repz
loop
push
or
roll
sub
clc
push
xlat
test
faddl
inc
andb
dec
dec
and
dec
xor
das
mov
xor
test
shlb
dec
jbe
jno
inc
es
sbb
insb
out
pop
mov
add
inc
dec
push
cli
or
scas
mov
xchg
jae
repz
sti
xchg
adc
and
jae
ret
ret
mov
ret
pop
jge
clc
movsb
fstl
notb
and
test
or
shlb
mov
out
divb
mov
out
orb
mov
inc
aas
pop
aad
fwait
lods
les
fucomi
xor
pop
xchg
fisttpll
mov
inc
das
std
int
mov
inc
test
into
ror
sbb
cmp
repnz
repz
cs
insl
popf
lock
fisttpll
fucomi
jg
mov
iret
addb
mov
cld
pop
dec
cmp
or
mov
mov
pop
ror
and
shl
add
or
cs
popf
pop
xchg
xlat
push
mov
add
sarl
inc
cmp
cmp
addr16
ds
adc
adcb
fldl
dec
push
mov
loope
xor
add
imulb
repnz
cld
outsl
sub
cmp
xor
aad
mov
sbb
test
or
leave
sbb
mov
sbb
jl
in
push
push
sarl
xor
les
pop
cld
push
icebp
push
or
push
mov
or
ret
in
inc
scas
xchg
sbb
xchg
mov
xchg
sub
int
jnp
popa
adc
adc
lcall
rorb
jae
lret
xor
xchg
pop
push
into
mov
ret
sahf
lds
mov
dec
div
mov
js
je
dec
aad
into
ds
leave
mov
mov
outsl
and
mov
in
adc
pushf
push
push
stc
and
loope
call
mov
mov
imul
call
lds
sbb
xlat
adc
imul
test
test
stos
loope
test
pusha
mov
js
jbe
addr16
insl
adc
in
cmc
test
push
mov
mov
xchg
leave
xor
insl
outsl
out
adc
insb
cmp
mov
lock
and
aas
jo
and
mov
sub
mov
mov
jg
xor
or
movsl
lea
and
lock
mov
call
fwait
shll
test
pop
push
push
mov
xchg
jmp
scas
sub
imul
jb
push
push
cli
dec
adc
adc
lcall
or
xor
and
inc
iret
popf
negb
ret
sbb
sarb
cmp
sahf
mov
in
and
sub
cld
xchg
sub
mov
shl
mov
gs
or
pop
mov
dec
fs
in
sbb
dec
daa
and
mov
cwtl
adc
or
cmp
pop
stos
mov
jae,pn
repz
pusha
jg
in
cmp
outsb
imul
out
adc
rcl
jo
and
ss
and
mov
imul
scas
shrl
outsb
xchg
sub
notl
ds
ljmp
shll
enter
jecxz
jno
adc
iret
movsl
fistpll
shr
inc
pop
add
dec
xlat
andb
xor
dec
pop
or
imul
xchg
adc
xchg
incl
into
mov
or
insb
dec
insb
outsl
mov
cwtl
sbb
aad
cld
jle
jno
jo
sub
mov
xchg
add
out
xchg
add
stc
pop
add
test
and
popa
jmp
jne
test
test
imul
fcomp
mov
cwtl
int3
push
adc
or
loope
subb
inc
lods
cmp
scas
mov
test
xchg
sub
call
cmp
adc
ret
jno
push
aad
sbb
pop
insl
xchg
xchg
loopne
cmp
fsubl
repz
sbb
cld
in
mov
iret
dec
int
fistl
fdivrs
in
cmpsl
or
repnz
ror
outsb
fwait
sar
mov
xchg
fcomip
outsb
mov
sub
std
lcall
lcall
xor
or
mov
push
pop
jb
rol
cmp
rorl
sti
in
test
cmp
mov
add
pop
or
aaa
mov
mov
fidivs
daa
shll
mov
xlat
aam
push
xorb
mov
mov
sahf
mov
pop
jns
fisttps
mov
stos
testb
xor
testb
divb
lods
cmp
ret
stos
mov
or
fstps
push
idivb
test
cmc
out
and
mov
jb
inc
fildl
repz
or
sbb
popf
inc
shlb
inc
dec
mov
jl
out
lea
lahf
xchg
xor
les
jnp
push
daa
nop
and
cmp
ret
mov
xchg
lock
or
mov
insl
cmpl
pop
sub
cwtl
mov
pop
arpl
mov
lret
sub
or
and
jbe
pop
mov
je
out
rcrl
cli
ficoms
ds
inc
inc
jecxz
adc
ljmp
add
push
adc
hlt
add
rcrb
pop
jecxz
pop
xor
adc
push
jp
xor
das
in
mov
and
or
push
or
fidivrl
push
xchg
and
and
cli
push
aas
xchg
out
pop
out
push
in
push
out
cltd
rclb
pushf
lret
dec
sub
insb
in
push
lods
sbb
adc
popf
incl
mov
mov
hlt
in
or
xor
loopne
fnstenv
mov
jmp
dec
pop
filds
mov
cmp
sbb
inc
mov
and
cmp
sti
push
pop
sub
lcall
adc
pop
cmp
jge
add
ljmp
clc
pop
add
push
iret
je
dec
adc
stos
sbb
imul
jo
xchg
xor
mov
stc
stos
mov
or
sub
push
out
daa
sbb
lds
in
pop
xchg
fidivs
push
dec
addr16
mov
pop
test
rorb
test
pop
out
sar
fwait
verr
sub
push
adc
arpl
push
inc
idiv
and
popa
or
icebp
test
adc
int3
dec
mov
ja
lea
xchg
xchg
orb
shlb
jp
jo
adc
inc
fdivrp
stos
xchg
pop
pop
or
lock
das
jmp
lds
popf
xor
popf
lods
movsl
lret
int3
jge
loopne
xchg
sub
aam
mov
stc
out
rorb
jbe
ja
data16
and
push
imul
dec
sub
scas
xor
cmp
and
leave
in
dec
sub
xor
fwait
mov
push
sub
scas
xor
push
mov
ret
aam
mov
push
inc
jp
xor
les
mov
ret
push
std
and
jb
and
xor
pop
pop
mov
les
in
mov
cmp
mov
push
pop
addr16
mov
adc
fsubrs
mov
xor
mov
lret
sub
aad
jmp
imul
jle
fistpl
sub
mov
in
mov
lret
cmc
hlt
test
daa
gs
pop
out
jp
imul
jo
rorl
cmpsb
inc
lea
enter
xlat
mov
inc
pop
cmp
les
leave
es
xchg
inc
push
scas
sub
imul
xlat
xchg
jo
push
icebp
dec
cmp
mov
mov
ret
mov
lods
jp
adc
testl
in
jbe
xchg
and
pop
or
out
inc
sti
mov
push
enter
fnstsw
loopne
jno
out
push
cmp
dec
shlb
pusha
cmp
lret
xchg
scas
mov
sbb
mov
rcrb
mov
dec
cld
pop
test
pop
ds
jae
mov
popa
lahf
jnp
mov
cli
int
adc
mov
es
fwait
sbb
xchg
sub
pop
dec
imul
push
jnp
ret
out
fsubrl
aaa
and
pop
jge
jnp
fnstenv
mov
mov
pop
clc
cmpsl
pop
bound
mov
mov
cld
scas
push
adc
scas
or
testl
push
out
push
mov
es
xor
cmp
push
mov
xchg
mov
insb
cld
aad
push
xor
or
sbb
movsl
orl
jp
sub
fmuls
test
mov
cmp
mov
nop
add
cmp
ficoml
ret
sub
jbe
stos
fucomi
les
test
xor
pop
jl
mov
sbb
sbb
shlb
xchg
mov
cmc
lcall
or
int
andb
mov
mov
int3
xor
xor
mov
leave
out
aas
imul
test
aam
cld
popa
aaa
or
push
add
and
or
fwait
pop
push
pop
sub
nop
cmp
popf
dec
xchg
push
mov
data16
cmpsl
ret
push
lret
fsubl
test
sbb
mov
fiaddl
div
ljmp
out
sub
xchg
lods
sbb
scas
mov
and
pop
jo
cmpb
in
ds
mov
or
movsl
cmp
enter
bound
xlat
push
jns
and
rorl
cmp
pushf
stc
pop
mov
jae
jo
and
jp
stos
jg
scas
pop
shrl
mov
out
scas
mov
pop
xchg
and
dec
ret
loop
push
sub
jp
sbb
fcmovbe
stc
notb
adc
nop
cmp
push
push
jae
scas
repnz
insl
outsl
dec
iret
sbb
xchg
test
sti
mov
mov
sti
add
push
fldl
shl
arpl
lahf
xchg
inc
fiadds
xchg
inc
repnz
xor
jbe
sub
pushf
jb
repz
nop
push
mov
lods
stos
fsubrs
movsl
dec
mov
and
mov
rcrb
call
pusha
cmp
lds
pop
enter
scas
push
cltd
ret
xchg
jbe
cmc
in
jge
shll
pop
cmp
out
scas
dec
cmc
arpl
jne
dec
dec
mov
out
ficoms
aam
hlt
movsl
loop
add
adc
std
rolb
or
add
xchg
loope
icebp
pushf
insl
push
out
mov
dec
in
add
mov
fldt
fwait
pop
xchg
xchg
lock
lods
jne
lret
push
xchg
sub
mov
leave
xchg
stc
mov
pop
xor
jge
push
bound
pop
ret
test
fsubrl
repz
pop
cmp
xchg
xchg
or
shll
clc
mov
mov
mov
dec
ret
jnp
fstp
adc
jmp
push
leave
push
pop
lret
mov
mov
xchg
fidivrs
lahf
xchg
and
sbb
jl
je
cmp
sbb
fsubl
sbb
mov
inc
inc
lds
xchg
pop
leave
pop
push
or
iret
pushf
push
test
in
dec
xchg
mov
sub
push
pop
iret
stos
loope
fnstenv
and
sub
mov
shll
jg
mov
adc
adc
mov
ret
sbb
repnz
lahf
sub
xor
test
ret
and
test
call
clc
js
pop
js
faddl
dec
pop
push
lahf
mov
sti
push
in
ret
das
xor
in
mov
add
std
push
test
push
and
leave
int3
mov
je
inc
scas
in
loopne
dec
jl
outsb
std
dec
or
ljmp
mov
xchg
dec
adc
icebp
lods
aaa
stos
xchg
pusha
les
or
nop
jb
cld
out
mov
cmpsb
adc
ret
jecxz
in
arpl
nop
mov
lcall
rorb
repz
push
lea
push
mov
cmp
int3
pop
push
in
or
sub
inc
or
in
pop
pop
ja
psubsw
pop
outsl
inc
cmc
inc
mov
mov
or
sbb
rolb
xchg
mov
mov
arpl
out
pop
mov
jp
int
xchg
adc
mov
adc
jno
pop
fidivs
sub
or
std
stos
jae
jecxz
dec
cmc
fwait
das
out
scas
in
mov
xor
adc
lds
mov
dec
aas
dec
jno
lds
cs
jl
iret
cmp
xor
mov
push
xorb
xchg
dec
cmp
sbb
dec
aaa
int
jmp
mov
mov
xchg
mov
mov
rol
outsb
pop
fwait
push
popf
inc
cwtl
lret
lock
not
pop
adc
inc
and
sub
xchg
sub
test
adc
jl
or
sub
pop
inc
mov
xor
jge
cmp
inc
popa
sahf
mov
pop
insl
movsl
add
mov
inc
mov
xchg
or
addr16
es
cwtl
leave
lea
rcll
and
popa
imul
jne
icebp
adc
cmpsb
adc
ljmp
or
in
xor
lods
fldenv
je
data16
je
imul
jecxz
jno
or
inc
adc
popa
inc
mov
sub
movsl
add
out
mov
lock
test
xor
pop
dec
mov
clc
es
out
xchg
iret
mov
sahf
movsl
js
mov
xchg
adc
repnz
push
lret
pop
and
repnz
sbb
hlt
mov
lret
xchg
adc
push
cmpsb
jmp
jne
fiaddl
enter
imul
cs
lcall
mov
jp
in
sbb
loopne
stos
pop
xor
inc
in
shlb
stos
or
icebp
imul
sahf
fs
movsl
sub
dec
jle
dec
out
sub
xor
ror
mov
scas
push
mov
sbb
sbb
decl
add
push
push
sbb
outsb
rcll
push
iret
ffree
fcompl
dec
fidivl
mov
dec
std
ds
cmpsl
push
lods
xor
and
pop
xor
es
arpl
orl
loop
or
or
dec
jg
push
mov
sahf
dec
fiadds
xlat
insb
pop
insl
clc
mov
fcmovne
leave
mov
lea
adc
jno
push
mov
ret
push
xchg
aaa
mov
push
lock
in
fst
cmp
bound
mov
mov
dec
or
aas
or
rcrb
push
das
push
mov
cmp
jp
xor
ss
shr
pop
push
and
icebp
pop
or
mov
mov
sbb
lcall
ljmp
xchg
mov
icebp
xchg
xchg
lahf
dec
jg
lahf
mov
sbb
mov
sub
cmp
xchg
pop
inc
xchg
sbb
idivl
dec
sqrtps
daa
lahf
or
mov
inc
jbe
and
mov
add
mov
jo
shl
aaa
xlat
insb
aad
sub
ja
jg
aas
add
and
arpl
push
fwait
cmpsb
xor
je
push
popf
or
int3
popa
scas
sub
test
cmp
xchg
dec
push
adc
and
insb
mov
out
jae
icebp
mov
mov
xlat
adc
push
stc
and
xchg
mov
lea
imulb
js
mov
push
xchg
sub
faddl
push
pop
xchg
sbb
cld
js
mov
ljmp
lds
stos
sbb
cli
inc
dec
inc
xlat
pop
call
stos
sub
mov
push
push
loope
lret
mov
push
xlat
sub
mov
and
sbb
je
lds
mov
rcrl
fdivs
mov
scas
sub
mov
inc
add
nop
repnz
ljmp
popf
and
xor
mov
cmp
push
icebp
imul
repz
flds
out
insl
test
sub
fnstcw
jo
mov
leave
push
ljmp
mov
mov
stos
dec
push
sahf
psrad
jbe
jmp
lahf
adc
dec
xchg
fwait
addr16
mov
sub
sbb
shlb
xchg
lods
mov
fwait
mov
lahf
cmp
fcmovne
bound
xor
cmp
ljmp
xchg
out
loop
push
rolb
insl
xor
stos
je
sub
xchg
into
dec
mov
mov
add
adc
fisubl
je
mov
notb
push
sub
lcall
enter
scas
imul
mov
push
jecxz
jne
aaa
jg
sbb
mov
in
xor
mov
sbb
sbb
dec
pop
add
les
popf
lock
dec
lcall
dec
aam
xor
dec
cmpsb
daa
out
pop
xorl
pushf
mov
hlt
pop
aas
stos
repnz
sub
imul
add
adc
loop
test
xchg
jae
mov
adc
dec
push
dec
mov
out
xchg
aas
pop
insb
cmp
xor
push
push
adc
lods
aam
jns
lahf
pop
mov
ss
int3
push
cmp
jbe
outsb
ficoms
fcomi
jmp
jle
add
les
loopne
push
int
lret
push
cmpb
repnz
ja
xchg
pop
lret
sbb
xchg
sub
xchg
pushf
in
sbb
mov
or
iret
fstps
push
ret
mov
popa
dec
xchg
daa
out
je
movsb
adc
sbb
andl
sub
in
xchg
movsb
mov
insb
xchg
pop
repnz
sbb
hlt
lahf
pop
fwait
and
push
dec
gs
fstps
mov
jbe
fs
fisttpll
and
fmuls
dec
dec
sub
jge
test
repnz
idivb
popf
push
pop
sarl
xor
adc
cmc
mov
outsb
pop
adc
lods
lea
adc
cltd
popf
nop
or
mov
inc
arpl
push
fs
mov
dec
hlt
jb
adc
jb
push
es
pushf
dec
xchg
imul
xlat
ficomps
xor
mov
roll
pop
inc
in
rcll
fsubr
mov
inc
out
or
push
mov
sub
test
ja
nop
stos
inc
leave
mov
stos
xor
insb
loope
jecxz
dec
fs
repz
xchg
or
pop
sub
aas
jbe
mov
sbb
inc
data16
lcall
mov
xchg
pop
push
mov
cmp
es
add
jl
adc
mov
movsb
xor
out
add
pop
and
mov
jmp
jecxz
in
adc
or
mov
in
vmaskmovdqu
loope
mov
ja
add
and
aad
pop
mov
sbb
push
cltd
sbb
js
cmp
repnz
insb
add
aam
or
and
repnz
or
xchg
cmp
fsubrs
jl
push
jbe
lods
mov
fmul
imul
sbb
add
ja
add
mov
jge
xor
xchg
cmc
mov
fimuls
stos
sub
push
adcb
pusha
sarl
inc
dec
dec
jb
pop
cmc
rcrb
mov
sub
jae
adc
fisttps
ret
jb
fiaddl
inc
test
jle
lds
jecxz
rorl
fs
das
push
mov
sub
mov
xor
and
insl
aam
pop
jmp
insl
inc
lds
fistl
jp
mov
sbb
fstps
ret
jge
sbb
pop
pop
dec
call
push
movsb
xchg
dec
lods
out
mov
pop
roll
jp
inc
sbb
and
cli
fmuls
or
out
adc
inc
aad
xor
arpl
cmpsb
iret
test
and
fadds
mov
mov
xchg
call
xor
sub
mov
jl
sub
xor
jno
dec
clc
fs
shrb
outsl
fistpl
iret
or
xchg
xchg
inc
mov
pop
cld
imul
movb
sub
rcrl
int
sbb
ss
push
jne
sub
stc
push
add
jp
in
push
repz
xor
cmpsb
aad
popf
ljmp
jmp
sti
iret
jnp
ljmp
add
rcl
sbb
jle
int3
pop
inc
js
movsl
inc
inc
rol
lds
cmp
mov
jnp
stos
pop
push
sbb
les
pop
sub
sub
es
outsl
arpl
lea
adc
in
mov
dec
out
sub
insl
jo
pushf
cmp
fwait
add
adc
outsl
xchg
movsl
mov
out
in
push
fsubrp
lea
int
pop
aaa
mov
bnd
jae
dec
mov
fdivl
rolb
scas
add
lahf
insl
cmp
cmp
lret
int3
lds
lods
mov
leave
xlat
push
mov
clc
outsb
jno
push
sub
cmpsl
add
cld
jmp
jae
sbb
adcl
add
pop
push
mov
into
add
hlt
mov
icebp
movsl
fdivr
fsubrs
or
jo
dec
popf
cwtl
xor
scas
jb
imul
shrb
adc
jb
xchg
push
pop
cli
sub
inc
mov
lcall
les
dec
dec
sbbl
in
call
mov
nop
mov
outsb
push
sub
fbstp
mov
fucomip
cmpsb
cwtl
repnz
dec
jmp
add
popa
rclb
pop
fistps
imul
cltd
sbb
xor
sbb
fisttpll
jg
xchg
add
outsb
mov
inc
mov
xlat
pop
int
cmp
nop
and
getsec
testb
push
aaa
bound
test
addb
nop
mov
dec
xchg
in
pminsw
cmp
scas
scas
mov
subb
fcompl
xchg
jge
mov
inc
pusha
cmp
cmp
imul
mov
mov
mov
aad
dec
decl
and
mov
push
aaa
mov
adc
lea
mov
lods
loope
xor
test
rcl
mov
pop
mov
jg
stos
fwait
nop
xorl
add
xor
mov
ret
jae
xor
dec
lds
adc
ja
cmp
mov
cmp
or
cmp
or
and
mov
sbb
fisubs
jle
mov
lahf
aaa
addr16
push
mov
cmp
dec
jle
jno
dec
mov
in
ret
loope
inc
cmc
shr
sbb
push
call
push
in
fsubrp
call
xchg
inc
pusha
ljmp
imul
push
int3
js
test
add
dec
mov
out
pop
fsts
mov
popa
and
mov
flds
mov
leave
jo
arpl
ret
sbb
jnp
je
adc
pop
aaa
cmp
data16
cmpsb
xchg
adc
rcrl
int3
mov
std
add
subb
clc
jne
sub
inc
cmp
popf
iret
test
repnz
cmp
inc
nop
or
add
mov
adc
jg
mov
add
arpl
stos
mov
lcall
adc
lods
paddb
push
fldcw
jle
push
loope
imulb
cmp
fwait
hlt
pop
fnstcw
ficomps
jle
fimuls
xchg
add
sbb
arpl
scas
ljmp
insb
adc
rclb
fiadds
inc
lods
es
daa
dec
movsl
fbstp
pusha
sub
cmp
pop
push
mov
js
fstpt
test
mov
sbb
dec
mov
xor
jnp
mov
mov
test
daa
inc
nop
repnz
push
push
mov
test
xor
push
mov
pushf
popa
adc
dec
sbb
pop
imul
add
sub
cmp
in
imul
adc
cmp
jns
ret
ds
adc
sar
sub
mov
sub
cmpsl
push
xlat
xchg
xchg
std
cwtl
mov
ja
sub
outsl
jg
sub
sbb
mov
jo
jbe
ss
mov
mov
or
and
iret
sub
test
xchg
cmp
inc
mov
inc
or
mov
mul
addb
adc
push
push
mov
cmp
andl
insl
jge
adc
aam
out
imul
lret
dec
mov
mov
cli
xor
aam
aaa
insl
mov
mov
inc
out
adcl
es
push
mov
repnz
inc
adc
cwtl
mov
fcompl
dec
clc
sub
fcmovbe
xor
mov
push
jp
lret
dec
mov
popw
fbstp
adc
sbb
pusha
testl
fcmove
xchg
mov
out
push
cmpsl
in
lret
and
dec
or
pop
out
or
and
lret
loop
xchg
adc
fstpt
mov
xchg
lret
mov
cmc
mov
fldt
imul
das
sub
cmp
cmpsl
stos
loop
xor
lock
mov
pop
mov
jns
sbb
inc
and
pop
pop
mov
adc
cmp
and
ss
pusha
sbb
scas
dec
inc
mov
stos
mov
inc
push
dec
xchg
popa
sub
mov
pop
push
leave
sub
mov
iret
xchg
or
outsl
lea
into
cmp
pop
imulb
mov
jno
jo
fistpl
stos
int
out
mov
js
daa
inc
push
mov
pop
cmc
data16
sbb
inc
jg
ret
jne
movsl
iret
idivl
iret
repnz
faddl
jae
rclb
and
xlat
out
mov
mov
dec
aad
lret
mov
lret
je
ret
daa
mov
push
inc
jae
jg
sub
fwait
aam
push
mov
push
pusha
sbb
dec
cmp
sub
lahf
and
add
fidivs
xchg
xchg
fidivrs
daa
cltd
std
dec
lret
xlat
push
or
xchg
cmpb
xor
scas
dec
jecxz
repz
mov
push
add
mov
pop
pop
rcrb
outsl
shll
inc
pop
adc
lcall
adc
popa
xchg
push
dec
das
mov
lcall
mov
mov
aad
dec
mov
rcll
call
push
xchg
xchg
push
out
and
mov
pop
ds
lcall
xlat
lock
pop
lahf
push
mov
aam
sbb
jmp
lret
call
into
push
add
int3
rorb
adc
and
jae
in
outsb
xchg
rcrl
push
adc
repz
loope
push
jb
enter
neg
divl
dec
lods
in
scas
xor
in
jmp
or
bound
push
cmpsb
jnp
xchg
imul
jno
enter
mov
outsl
pop
ret
clc
lods
add
xchg
fs
sbb
rol
ret
push
jp
fisttps
nop
movsl
and
xor
sub
in
mov
stos
xchg
cwtl
or
insb
arpl
mov
int3
and
or
ret
ja
cmp
dec
stos
xchg
jg
mov
out
cmp
int
lret
inc
dec
out
cli
xchg
lahf
jb
push
test
jge
xor
mov
dec
inc
popf
jno
or
dec
repz
dec
sbb
adc
out
and
pop
fnstenv
adc
int3
push
xor
lahf
and
push
test
pop
mov
scas
int3
push
and
nop
mov
ds
dec
mov
mov
push
fldcw
and
mov
pushf
pop
iret
sahf
sbb
lahf
push
bound
insb
or
imul
adc
adc
dec
mov
fs
jnp
cmp
xor
stc
and
icebp
flds
mov
shlb
jnp
data16
shll
mov
cmp
fwait
cmpsl
xchg
mov
push
repz
cwtl
enter
mov
xor
dec
cld
sub
cmp
sub
js
es
jl
push
mov
and
sub
std
jne
xor
adcl
pop
and
dec
sahf
aaa
ljmp
jp
cmpsb
mov
inc
add
xor
xor
pop
in
inc
subb
sbb
imulb
push
hlt
into
popa
insl
push
mov
or
mov
mov
push
inc
popa
pop
mov
mov
inc
push
test
insb
xchg
test
insl
ss
divl
fistps
repnz
xor
inc
xchg
mov
addb
and
mov
push
rorl
imul
into
repnz
adc
jo
push
jle
outsl
cli
mov
adc
in
ss
dec
xchg
inc
loop
outsb
cmp
loop
gs
xor
test
test
aam
pop
sbb
push
sub
iret
pop
sbb
insb
aad
or
mov
inc
push
xor
xchg
mov
mov
sub
imul
adc
hlt
sbb
pop
and
sahf
scas
notb
loope
push
xchg
das
mov
mov
ja
adc
rorb
aam
movsl
mov
and
movsb
xchg
dec
ror
ret
mov
enter
push
jge
imul
in
scas
repnz
xchg
xchg
push
jle
lock
dec
mov
mov
stc
mov
in
imul
mov
rcll
mov
dec
fcomps
xor
xchg
adc
mov
mov
insb
xchg
flds
inc
call
lock
pop
sub
mov
xor
sbb
jp
mov
sbb
and
nop
inc
dec
pop
sub
mov
movsb
test
insl
and
nop
aam
push
adc
fidivs
movsb
jae
dec
adc
mov
push
insb
out
les
ljmp
mov
adc
clc
rol
push
xor
ret
in
jg
mov
aam
mov
in
pusha
and
xchg
aaa
xor
sar
sti
inc
pop
pop
cltd
push
call
mov
pop
cmp
nop
mov
sub
adcl
ljmp
or
mov
aad
aad
pop
jmp
pop
jbe
xchg
jge
loope
mov
cmp
pop
mov
test
pop
sub
divb
pop
stos
nop
loopne
aas
adc
dec
add
mov
insl
pop
inc
or
rcll
orb
jmp
and
pop
sub
cmp
push
xchg
mov
inc
or
cmp
clc
js
cmp
sbb
test
dec
cwtl
icebp
loope
lcall
xchg
sbb
lret
mov
sbb
push
xor
and
inc
popa
rorl
xchg
dec
movsl
mov
clc
scas
xor
ret
imul
div
sub
jg
jae
arpl
adc
cmpsl
add
sarl
sub
pop
mov
push
fiadds
arpl
add
movsb
pop
call
in
mov
pop
pop
int3
outsb
push
js
mul
sub
adc
test
sub
leave
loope
not
xchg
lods
xchg
sub
xchg
push
add
lret
adc
sbb
cwtl
sub
or
sub
sarl
fiadds
mov
mov
xchg
fwait
pop
push
sbb
add
xor
adc
dec
pop
arpl
jbe
xchg
and
fwait
test
jl
sbb
jmp
ljmp
fbstp
sbb
pop
dec
dec
mov
in
adc
sub
fsub
and
insb
setbe
sbb
inc
inc
imul
add
ljmp
decl
sbb
andl
xchg
sbb
fstp
int
mov
icebp
dec
es
icebp
repz
or
std
bnd
mov
or
dec
in
je
sahf
mov
xor
insl
push
push
mov
fs
roll
adc
dec
jg
test
movsb
xchg
lods
adc
sub
jo
pop
sub
loop
push
jne
cmp
xchg
stc
xor
shl
inc
xchg
push
xchg
cmp
push
in
rcrl
int3
psraw
jne
shrl
test
stos
incl
or
push
int3
dec
jl
cmpsl
cwtl
adc
mov
popa
push
sti
mov
test
enter
sbb
ds
adc
cmp
adc
push
imul
movsl
add
scas
jmp
lcall
xchg
les
add
pop
push
pusha
sub
ret
xor
push
jmp
mov
into
dec
pushf
arpl
add
and
in
mov
adc
xchg
cwtl
inc
mov
loopne
adc
dec
out
jo
and
xchg
inc
xor
jg
mov
add
dec
mov
jno
shlb
xlat
jbe
imul
or
pushf
ret
and
dec
mov
jbe
inc
ret
dec
mov
jbe
mov
or
sub
dec
fildl
push
pop
dec
imul
jmp
xchg
jmp
push
mov
fnstsw
mov
pop
mov
ret
adc
in
movsl
sub
or
popa
outsl
or
lret
into
std
mov
cmp
lret
dec
mov
icebp
out
push
jecxz
es
cmp
je
aaa
icebp
repnz
sbb
addl
xor
cmp
test
jbe
inc
cmp
cmp
lcall
shufps
loopne
jnp
inc
xchg
push
fimuls
xchg
ljmp
loop
lcall
fcmovbe
push
dec
ret
mov
iret
out
mov
cmpsl
dec
add
subb
add
sbb
pop
je
mov
fdivl
adc
gs
cmp
mov
andb
int
cmpl
mov
addr16
loopne
sub
sub
mov
out
inc
dec
filds
cmpl
pop
and
push
rol
or
ss
pop
inc
lret
fwait
dec
test
lods
rorb
lds
mov
jbe
fisttpl
pop
sub
mov
loopne
movsl
mov
xor
ljmp
inc
in
ret
inc
jo
call
mov
scas
js
leave
mov
jge
xchg
jne
loopne
xchg
mov
insl
into
mov
popa
dec
mov
les
add
xor
or
mov
adc
jl
jno
xor
inc
fsubl
mov
inc
rolb
into
clc
pop
mov
dec
jo
fsubr
mov
lret
popf
pop
mov
push
das
jns
mov
mov
fmul
imull
adc
push
push
ss
fcompl
aaa
mov
push
cmovs
fmull
jnp
xor
arpl
and
xlat
and
pop
mov
fistpl
mov
add
sub
sti
xchg
cmp
hlt
xchg
mov
mov
out
jmp
sbb
aas
push
push
sbb
addl
mov
sbb
sbbb
lods
fs
lock
pop
sarb
sub
jmp
add
inc
cmpsb
sbb
call
cmp
adc
pop
mov
aam
dec
add
repz
or
add
sub
mov
dec
loope
je
jo
rcr
orb
leave
pop
or
fimull
dec
roll
and
dec
out
int
mov
test
adc
jbe
xchg
inc
xchg
push
daa
cmp
jg
pop
mov
popf
add
pop
mov
mov
fistpl
or
add
jl
test
xchg
in
stos
rcrl
xchg
inc
inc
pop
hlt
cmp
outsl
xchg
icebp
dec
movsb
js
jg
or
xchg
mov
movsb
jne
push
in
adc
in
sub
jae
in
out
xchg
in
cmpsl
lret
lds
push
cld
aam
outsb
sti
push
sbb
and
das
or
into
xor
dec
popa
jnp
dec
inc
ljmp
or
les
push
imul
sti
add
sbb
scas
popa
ds
push
test
loope
cmpsl
fidivl
mov
dec
mov
sub
sub
test
sub
cli
sahf
cmpb
xor
ret
not
jp
xor
orb
cmp
ljmp
in
repnz
mov
inc
push
pusha
push
inc
pop
cwtl
pushf
add
cmc
ja
add
repz
jg
add
sbb
add
lock
cltd
in
mov
call
repz
jmp
or
pop
pop
out
lock
inc
daa
add
sar
mov
ret
enter
mov
or
push
xlat
pop
push
sti
xchg
ja
pop
xchg
xor
ljmp
mov
sub
xchg
mov
jno
add
cmc
mov
insb
push
out
cltd
aad
pop
push
pop
sarb
jg
aad
aaa
mov
popa
mov
mov
or
inc
sbb
mov
fbstp
xchg
add
add
xor
roll
dec
dec
iret
add
mov
hlt
insb
sub
sub
aaa
enter
xchg
cmc
repz
ret
aaa
fmull
dec
stc
cmp
lods
dec
arpl
push
das
stos
xchg
xor
imul
cmp
loop
and
and
and
push
sbb
fiadds
cmp
sub
xchg
sbb
xchg
sahf
sub
shlb
sub
icebp
jge
jno
fdivs
mov
popf
xor
pushl
dec
movsl
dec
shll
mov
push
cmp
mov
mov
leave
scas
mov
and
scas
std
nopl
ret
adc
call
or
xor
adc
jg
mov
sub
cmp
movb
push
xor
and
outsl
ljmp
push
mov
push
insb
daa
jp
test
int
imul
out
aas
and
sub
into
jns
and
push
or
and
pusha
aaa
leave
div
jbe
push
incl
mov
sub
inc
sub
ret
in
stos
jne
rcr
inc
das
stos
pop
push
fnstenv
stc
pop
push
outsb
je
jnp
push
mov
ret
add
push
scas
hlt
or
push
and
mov
mov
jmp
jecxz
test
lahf
aam
jns
push
mov
push
mov
xor
and
mov
inc
mov
mov
cmc
mov
je
pop
or
xchg
xor
je
xchg
jle
in
lret
fdivs
in
loop
aas
and
insb
test
pop
add
mov
mov
jo
xchg
les
xchg
inc
jne
pop
stc
pop
stos
xor
and
out
mul
or
adcb
icebp
lea
push
add
loope
aas
fdivp
mov
inc
call
in
inc
and
std
jge
xchg
sbb
repnz
outsb
orb
sub
mov
xor
xchg
lods
bound
sbb
push
lods
and
mov
inc
sbb
lods
fwait
mov
cwtl
cltd
cmc
sbb
or
mov
cwtl
sahf
addb
aaa
rorl
dec
sbb
test
hlt
je
jno
inc
sbb
dec
xchg
notb
dec
sbbb
dec
sbb
imul
push
ja
push
push
and
mov
loope
mov
mov
fdiv
cmp
jb
sub
adc
cmp
out
lods
out
stos
loope
lods
jb
daa
mov
xor
insl
push
test
mov
jge
dec
jno
mov
push
sub
or
movsb
imul
and
popa
sbb
sbb
mov
enter
fsubr
pop
mov
shlb
sahf
cmp
add
loop
loope
adc
push
pushf
mov
jge
arpl
ss
out
enter
inc
inc
int3
movsb
mov
loope
add
mov
jle
cmpsb
xor
xchg
pop
iret
mov
xchg
cltd
jmp
jo
adc
mov
inc
inc
mov
adc
mov
and
orb
push
sbb
and
fs
xchg
imul
aaa
mov
xor
lea
push
dec
jmp
js
ss
add
sarb
dec
xor
or
lret
dec
or
outsb
xchg
mov
inc
outsl
or
add
jno
shrl
push
sbb
mov
in
sub
inc
add
ljmp
push
inc
cmpsl
jmp
shlb
movsb
out
adc
mov
push
or
mov
add
sub
jle
lret
fcmovb
push
lret
aad
sbb
fisttpl
sub
xchg
andl
lret
pop
les
pop
xor
dec
push
aas
fs
inc
push
int3
pop
and
cmp
lock
adc
mov
inc
cli
mov
sbbb
cltd
mov
sbb
pop
jns
aaa
cli
repz
daa
xchg
cmp
jb
mov
pop
jl
and
in
movsl
loopne
dec
scas
cltd
roll
jecxz
push
adc
cmpsl
pop
jb
xor
jne
outsb
mov
pop
mov
sbb
iret
movsb
lahf
mov
xor
scas
in
ss
pop
dec
fnstenv
bound
mov
cmpsl
mov
mov
out
cli
mov
fcoms
xor
push
pop
inc
outsl
jb
jbe
and
icebp
out
sbb
jno
adc
nop
sbb
jno
and
xor
cmc
xlat
and
mov
test
addb
clc
mov
into
pushf
inc
js
stos
adcb
add
push
jge
fadd
mov
add
cwtl
xor
mov
pop
mov
dec
call
push
cmp
add
sbbl
lcall
jo
mov
inc
inc
push
outsl
push
out
stos
filds
and
fcoms
push
movsb
jecxz
das
stos
sbb
xor
stos
jecxz
scas
rorb
stc
cltd
and
out
and
xchg
ss
loop
mov
push
pop
outsb
aaa
fistpll
pop
cmpsl
adc
ja,pt
pusha
cmc
mov
cmpsb
xor
adc
call
dec
jo
xor
sbb
pop
out
imul
and
jo,pn
and
fadds
insb
enter
jo
mov
arpl
lret
lret
pop
cmp
cs
push
jbe
test
jg
popa
jg
loope
jg
lods
cmpsl
aam
mov
jns
push
add
inc
xor
jnp
xchg
int3
test
sahf
in
test
stc
push
inc
scas
jg
loope
testl
and
das
adc
mov
popf
cmpsl
clc
add
cli
inc
lret
add
repz
int3
ss
cmp
adc
xchg
in
daa
xchg
fldenv
test
push
push
jne
pusha
mov
fistps
mov
dec
cmp
imul
pop
xor
jae
out
clc
sarl
push
xlat
pop
cmp
ljmp
pop
out
aas
pop
jo
test
sbb
or
pop
cmpsb
mov
cli
dec
sbb
xor
dec
cmpsl
sbb
test
movsb
pop
lock
pop
in
sub
cmpsb
loop
dec
loope
ret
or
fcoms
or
inc
movsl
pop
loopne
xor
daa
movsl
add
push
mov
lods
lret
popf
mul
jb
std
popa
fidivs
inc
inc
sub
rdmsr
das
insl
pop
xor
add
hlt
lods
push
push
lock
mov
jle
lock
stc
js
rcrb
dec
add
and
ficoml
lock
mov
dec
fmull
inc
push
ret
or
push
stos
dec
out
add
mov
gs
imul
xchg
mov
sbb
sub
cltd
xchg
dec
or
imul
mov
jae
loopne
ja
inc
rorb
push
test
mov
sti
hlt
fcmovu
sbb
xchg
xor
and
jae
jp
clc
mov
jo
scas
inc
xchg
inc
lods
cld
xor
pop
int3
push
in
sub
fs
flds
lock
arpl
lods
cmp
add
outsl
cmc
jae
pusha
xchg
sbb
dec
rcr
sub
adc
rcrl
pop
and
rcrb
mov
jb
push
popf
lahf
fs
sbb
shlb
std
push
sbb
cltd
xchg
aaa
shrl
cld
jnp
xchg
and
stc
sbb
int3
adc
leave
mov
pop
pushf
loope
fsubrs
sti
pop
jb
dec
mov
lahf
fidivrs
or
test
push
stc
push
test
jae
xchg
bnd
add
call
imul
cmpsl
pop
fcomps
sbb
icebp
push
sub
push
shll
rolb
adc
fwait
es
sub
sbbl
das
cmp
dec
jbe
nop
or
ja
in
xchg
iret
jmp
in
sub
mov
les
mov
jge
mov
mov
push
scas
bound
decl
cmp
jb
and
jnp
js
jb
loope,pn
in
shll
cwtl
test
xlat
pop
int
in
lahf
mov
dec
and
mov
jmp
in
or
xor
and
sarb
scas
jns
repnz
pushf
mov
mov
hlt
mov
shlb
jnp
adc
jo
inc
xchg
ss
cmp
arpl
jae
sub
mov
jle
aas
cwtl
aad
outsb
sbb
jecxz
adc
stos
cltd
inc
clc
leave
xchg
mov
mov
pop
aad
mov
dec
dec
xchg
add
repz
mov
lahf
sbb
fisttpl
jge
lahf
xchg
fsubrp
les
mov
addb
pop
fidivrs
lds
mov
fwait
inc
test
xchg
imul
cmpsb
addl
xlat
enter
dec
jg
pop
mov
es
dec
std
jl
pop
mov
jo
jb
sub
dec
inc
cmp
insb
mov
jle
lods
mov
xchg
pop
or
ja
push
das
xchg
pop
ljmpw
aam
sbb
push
test
jb
into
pop
lcall
push
or
mov
inc
fs
insl
push
or
and
or
push
xchg
mov
lds
dec
stos
xor
push
xor
xchg
rcll
mov
ss
das
ja
ja
ret
pop
cmp
xor
xor
pop
push
notb
adc
clc
sbb
imul
cmp
insb
ret
out
inc
xchg
lret
push
jns
xchg
jmp
nop
pop
out
std
rcrl
out
xor
xor
orb
ds
cld
or
fs
test
cs
mov
add
xchg
insb
mulb
sbb
rcrb
sub
imul
testb
ds
mov
decb
rclb
test
jnp
adc
sbb
xchg
inc
xchg
inc
in
stos
inc
pushf
insl
mov
mov
inc
lock
lea
xchg
je
sub
push
es
int3
dec
or
sub
aaa
xor
sub
lods
add
jl
and
hlt
push
push
add
cmp
xor
add
aaa
das
stos
xlat
mov
mov
xor
mov
mov
cmp
aam
sbb
and
ud1
stc
cltd
mov
xor
or
je
and
aam
aaa
pushf
iret
mov
lret
pop
dec
aam
mov
int
xor
inc
sbb
imul
in
jg
xor
mov
jo
and
pop
roll
sbb
mov
cmp
lds
jp
jnp
inc
adc
mov
add
inc
mov
je
repnz
xor
aam
or
mov
push
and
bt
xchg
cld
fistl
add
jp
pop
daa
insb
rorl
jg
sub
xor
jno
lea
pop
push
in
jp
cmp
out
pop
add
sbb
pop
jle
in
fnsave
xor
lds
add
ljmp
mov
std
lock
loop
out
shrb
stos
std
and
inc
sarl
imul
push
fsubl
or
arpl
push
ret
imul
jno
push
mov
out
pushf
loopne
cwtl
jb
test
cli
adc
sub
lods
inc
cmp
enter
mov
js
cmpsb
fistpl
cmp
js
jge
bound
xchg
cmp
in
lock
popf
je
test
jnp
jne
addr16
aam
bound
xchg
xchg
or
pop
mov
mov
jl
xor
mov
dec
mov
and
ret
jb
fidivrl
pop
leave
mov
cwtl
xchg
or
mov
fsubr
sti
stos
rol
and
int
cmp
rcll
ret
jb
scas
xchg
dec
push
ljmp
rorb
enter
push
sbb
out
sbb
lahf
dec
aas
ret
fwait
cmpl
js
inc
or
mov
adc
loope
cs
push
jl
iret
cmp
xchg
add
scas
or
cmpsb
addr16
inc
push
out
ss
pop
cld
rcll
movsb
mov
add
popa
rol
jmp
shll
incb
dec
outsl
ja,pn
pop
add
and
shl
xor
pop
jl
adc
cmp
inc
push
jb
lods
in
sbb
ds
mov
dec
cmc
loope
dec
cli
icebp
dec
inc
inc
ljmp
sub
mov
leave
jl
into
lahf
jno
jae
aam
xchg
fs
lock
subb
sbb
fcmovnu
xchg
cltd
xchg
lods
jmp
cli
and
mov
cmpsb
xor
iret
adc
clc
sbb
out
repnz
aad
jmp
insb
pop
lahf
inc
mov
lret
negb
outsl
mov
sbb
fdivl
cwtl
scas
outsb
repnz
mov
repnz
mov
and
clc
xchg
mov
jle
cmpsl
inc
mov
mov
jmp
int
enter
mov
addr16
inc
inc
mov
rclb
in
adc
sbb
outsb
in
test
lds
int
std
bound
sub
push
mov
call
pop
scas
sub
loop
or
dec
mov
push
pop
ss
push
sub
cmp
dec
jle
fsubl
andl
xor
jmp
mull
fadds
out
rcll
sahf
xchg
sahf
pusha
xchg
fdiv
adc
repz
adc
push
mov
mov
cmp
dec
dec
sbb
pop
xchg
inc
les
cwtl
loop
sbb
cmpsb
adc
add
push
inc
cmp
mov
mov
addr16
jae
lret
jmp
mov
cmp
lret
cli
cmc
mov
push
scas
pop
clc
ljmp
enter
add
aad
repnz
pop
fsubl
sub
mov
clc
decl
mov
loopne
push
outsl
lret
sub
enter
int
adc
nop
icebp
nop
stc
or
push
ror
inc
aad
loop
rol
add
jmp
loopne
pop
mov
pushl
clc
iret
out
xor
sarl
test
jle
mov
dec
notl
jmp
mov
mov
addl
cltd
lret
xor
ljmp
div
sub
add
mov
inc
add
jmp
pop
std
sub
inc
cwtl
repnz
ret
and
jecxz
cmp
rorb
jp
sub
pop
inc
xor
xchg
es
ds
aad
cmpsl
mov
sbb
std
fcmovbe
enter
bswap
bound
push
rorb
mov
into
pop
pop
mov
sub
and
sar
iret
fcompl
xchg
and
and
push
repz
xchg
loopne
in
jecxz
pop
addr16
mov
or
out
and
repz
mov
xchg
andl
aas
int
jg
cli
jnp
xor
scas
cmp
mov
fcmovnb
dec
fsubr
pop
shrl
jae
pusha
stos
inc
out
jecxz
inc
jmp
pop
orl
pop
fildll
fiaddl
fildl
pop
das
pop
sbb
cmp
jb
movlps
insb
aam
lds
scas
cmpsb
xor
sahf
pop
dec
pop
mov
out
adc
out
icebp
int3
lcall
lods
loopne
push
dec
divb
call
mov
outsl
sbb
mov
inc
fsts
and
rorl
mov
xchg
inc
shrb
pop
inc
mov
js
add
bound
jl
xorb
shrl
gs
inc
int3
push
loope
iret
daa
sub
flds
dec
dec
rcl
or
cld
mov
imul
out
iret
test
xchg
movsb
fldt
and
inc
outsl
xchg
jae
jecxz
lret
mov
adc
jns
cmp
jle
cli
push
loopne
lods
stos
sub
or
cmp
mov
orps
outsb
enter
and
icebp
push
fildl
fidivl
pop
mov
shrl
fldt
push
mov
shrb
xchg
enter
outsb
ret
std
mov
mov
push
cltd
cmpsb
loope
pusha
push
sarl
sub
inc
jmp
dec
pop
pminub
jecxz
nop
out
mov
xchg
pop
push
test
in
scas
int
lock
cmp
out
repnz
roll
std
pop
dec
aam
fs
mov
jno
add
jg
in
sbbb
pop
je
jns
inc
sti
jo
arpl
ret
mov
xchg
jp
xchg
scas
mov
ret
and
mov
stos
or
pop
test
mov
mov
aam
mov
in
sbbl
cmc
mov
ret
mov
inc
repnz
fadds
inc
jp
test
das
jae
sub
xor
xor
jge
xor
xor
loope
movsb
int
mov
adc
ficoms
xchg
ret
xchg
popa
cmp
lret
pop
add
cmp
sti
sbb
xchg
pop
xchg
addr16
cs
mov
sub
cmp
dec
xlat
jne
pop
inc
imul
mov
leave
mov
call
pop
bound
add
scas
lret
xor
mov
or
jnp
and
inc
sub
repz
dec
and
adc
mov
sub
fbld
xor
push
adcb
popf
adc
test
aam
xchg
mov
cmp
mov
add
fmull
es
insb
xchg
imul
cmp
in
lods
inc
jbe
gs
rorl
adc
xlat
call
jmp
cmp
out
xchg
xor
icebp
fst
insl
movsb
inc
mov
sub
xor
fdivl
ss
out
popa
aaa
faddl
push
cltd
insb
mov
repnz
scas
add
inc
xchg
push
push
and
aad
cmp
adc
dec
call
in
lds
xor
divl
icebp
add
daa
fldenv
push
pop
cltd
insb
and
pop
bound
loope
and
std
outsb
adc
add
or
cltd
push
sbb
ss
fdivrl
int
inc
jb
cmc
mov
sarb
or
and
sbb
mov
mov
jmp
cld
inc
add
sarb
adc
mov
rcrb
cmpsb
sub
dec
or
in
xor
outsb
outsl
mov
xchg
rol
std
data16
lret
xchg
hlt
loopne
ja
mov
pusha
push
fucomp
cld
mov
int3
jbe
jg
fprem1
add
mov
sbb
push
outsl
les
fisttpl
cmc
push
hlt
mov
shl
sub
sahf
inc
loopne
pop
push
add
xchg
jge
clc
mov
adc
push
xchg
mov
fnstcw
loopne
shl
dec
popf
jle
add
pushf
sbb
sbb
dec
out
imul
push
aaa
dec
fcmovb
dec
xor
imul
xchg
and
adc
cmpsb
fildl
cmp
mov
bound
inc
sbb
jne
jae
into
push
xor
adc
sbb
adc
int
lret
fadd
dec
dec
xchg
ret
icebp
cmp
mov
push
dec
push
jb
xchg
inc
sbb
jnp
in
inc
mov
or
bound
jmp
std
rcl
ss
push
in
push
sti
call
and
gs
fisubl
cmp
xor
push
cmp
nop
aam
and
and
and
repz
sbb
push
xchg
stc
inc
pop
mov
out
add
outsb
bound
mov
push
scas
aad
cmp
mov
lcall
add
mov
test
cmp
sub
je
mov
popf
loope
ljmp
cmp
lcall
inc
mov
push
or
scas
jecxz
shll
cmpsb
xchg
mov
cwtl
xchg
popf
scas
sbb
push
jg
jecxz
lcall
xor
cmc
fwait
bswap
jle
dec
push
fcmovu
outsl
out
ss
sub
mov
in
cli
fcmovbe
add
data16
pop
test
and
pop
cmpsb
aaa
lods
cmpsb
jle
push
leave
pop
dec
push
mov
pop
adc
cmp
es
js
nop
and
mov
std
jne
inc
aas
test
mov
pop
std
bnd
fimull
pop
dec
jp
shlb
dec
push
push
or
fcomps
xor
mov
aas
jo
sub
rclb
mov
mov
cli
and
fwait
enter
mov
enter
popf
push
stos
call
in
in
icebp
sarl
les
out
mov
inc
movsl
dec
fdivrl
inc
or
pop
es
lcall
lock
aaa
fdivs
mov
cli
push
lret
pop
cmc
icebp
rolb
xchg
fiadds
push
in
and
mov
out
lcall
icebp
push
sub
in
mov
xor
push
fsubs
dec
jne
mov
daa
inc
add
xchg
sbb
movlps
ljmp
xlat
pop
test
loop
sub
and
aas
inc
jg
lds
cmc
arpl
pop
ss
adc
loopne
leave
es
cmp
insb
add
add
sahf
aaa
cmp
lcall
mov
pop
aas
dec
cld
mov
movsl
xchg
cmp
bnd
jp
sar
sbb
mov
jmp
dec
cmp
mov
ror
pop
push
iret
fs
sti
es
xchg
inc
mov
pop
nop
add
xchg
xor
xchg
push
test
filds
lods
sub
jg
jl
pop
scas
cmp
stc
dec
rcl
in
jl
out
mov
fdivs
xor
pop
cs
les
adc
fisubl
std
into
adc
ret
testw
loop
and
outsb
and
fstl
lods
cwtl
fistl
fwait
pop
sub
jno
fs
push
in
repz
mov
data16
sub
mov
mov
imul
je
mov
ret
pop
lret
xchg
or
mov
sub
dec
cwtl
push
xor
ja
dec
push
pusha
adc
sbb
fisubrl
xor
pop
xor
int3
negb
loopw
repnz
leave
ss
adc
mov
jb,pt
insb
int3
push
clc
add
sub
lods
xchg
add
andl
xor
fcomi
in
jb
dec
bound
xor
push
movl
cmc
ror
in
cltd
jae
push
xchg
int3
cmp
movsl
mov
sub
sub
dec
jne
pop
mov
aam
add
fimuls
btr
jge
fildl
mov
cmp
pop
add
outsb
jmp
das
jbe
xor
addl
and
pop
cmc
mov
and
cmp
pop
rorl
pop
shl
or
je
ja
popfw
push
test
pop
pop
and
stos
push
lcall
lds
sbb
push
sbb
push
push
push
push
push
jg
fildll
mov
inc
fwait
push
inc
iret
sub
outsb
nop
nop
hlt
push
ss
sub
in
add
and
adc
sub
cwtl
in
mov
outsl
cmp
mov
in
jns
mov
pop
lods
ss
repnz
mov
ss
inc
lea
mov
cmp
sub
or
xor
add
xlat
sub
lea
jno
fwait
out
inc
xchg
stc
inc
mov
xor
js
xor
xchg
and
int
stos
inc
sbbb
daa
dec
cmp
out
je
je
jl
ljmp
cld
insl
xchg
inc
jecxz
sub
into
dec
ret
dec
test
dec
movsl
decl
push
orb
jle
dec
test
dec
mov
jnp
out
adc
dec
jp
mov
stc
mov
fsts
mov
lret
cmc
pop
push
leave
fadd
cld
das
cmp
movsl
fcmovnbe
inc
mov
push
mov
div
dec
adc
andb
add
xchg
mov
test
sahf
ror
mov
iret
adc
mov
fwait
ja
jb
push
in
aad
stc
adc
ljmp
mov
fwait
cmp
push
push
std
pop
rcrb
jns
test
ffreep
into
pop
sbb
add
jno
sbb
sti
xor
es
ffree
push
sbb
sub
sbb
sbb
cmc
add
insl
popf
cmp
int
dec
fsts
add
div
cwtl
ds
push
das
imul
jge
jb
mov
subl
add
adc
outsb
adc
mov
cmc
jmp
push
ror
test
inc
loope
mov
daa
pop
mov
shl
add
sub
ret
pop
or
pop
jno
push
xchg
stc
andb
or
cltd
stos
popf
cmp
in
pop
lea
mov
fwait
out
adcb
shrl
hlt
lea
dec
data16
dec
push
pusha
adc
jle
inc
push
montmul
cmpsb
add
insb
xorl
add
movsl
mov
andl
js
jnp
aaa
push
pop
scas
mov
sbb
dec
jmp
dec
mov
dec
and
lret
jle
repnz
clc
adc
xor
xchg
lods
out
xchg
mov
push
add
add
cmp
out
lret
add
cmp
icebp
imul
add
pop
xchg
pop
loop
mov
pop
push
xchg
xchg
jmp
mov
xor
xchg
ficomps
jae
cmp
loope
lods
sti
push
dec
dec
pusha
int3
and
inc
loop
out
add
or
and
push
out
dec
bound
and
orb
loope
adc
std
loop
out
cmpsl
rorb
stos
mov
cmp
mov
pusha
sub
mov
jo
jne
jg
mov
inc
mov
out
inc
mov
sub
in
mov
push
loopne
bound
adc
xchg
addr16
xor
jmp
push
pop
cmp
xor
sbbb
leave
in
outsl
das
sbb
push
daa
sub
mov
pushf
fs
xor
addr16
jle
adcl
jle
repnz
pop
shrl
mov
pop
in
shlb
and
sbb
fsub
sbb
cmc
bswap
xchg
pop
addb
lret
shrb
mov
jl
jl
jge
test
jge
popf
jge
mov
pop
mov
ret
ffree
jp
stos
daa
cmpl
fdivl
rolb
inc
and
cmp
fisttpll
push
pop
mov
mov
xor
sbb
cmc
cmovge
push
push
cmp
into
add
adc
stos
inc
mov
cmp
out
adc
cli
dec
and
in
pusha
jle
rcrb
gs
fidivl
std
ljmp
cmp
divl
push
jp
add
adc
push
lcall
sub
adc
lcall
insb
in
lock
pusha
scas
sub
insb
mov
jp
mov
jb
sahf
push
pop
mov
jle
lods
fistps
add
jmp
xchg
cmpsb
mov
xor
popa
mov
push
mov
cmp
lret
faddl
insl
aam
mov
ret
pop
fnsave
inc
cmp
push
outsb
cld
push
dec
mov
shl
je
fisubrs
lahf
cmpsb
mov
add
cs
ret
aaa
enter
adc
dec
lret
bound
xor
dec
xor
xchg
mov
loopne
cmp
shll
jg
lods
ds
mov
dec
jg
lods
cmp
mov
lock
mov
das
mov
sub
and
inc
xor
lcall
xchg
insl
jp
fildl
rcrl
cmp
mov
or
inc
xchg
je
push
aas
and
push
xor
loopne
mulb
pop
and
pop
in
mov
arpl
das
xor
mov
pop
adc
frstor
mov
dec
fsts
jo
cmp
mov
aaa
push
hlt
popa
sub
or
in
adc
shll
imul
pop
cmp
and
pop
ret
sbbb
icebp
aas
mov
pop
int3
jno
inc
mov
movsl
pop
inc
mov
xchg
mov
aas
jl
and
repnz
sbb
in
xor
pop
mov
mov
pop
lret
jno
loopne
bound
je
mov
lods
sti
inc
enter
mov
mov
jge
mov
daa
js
push
mov
add
jg
icebp
imul
mov
adc
or
mov
sbb
bound
push
scas
gs
mov
out
push
clc
dec
and
and
shlb
sub
cwtl
es
das
or
xor
in
cmp
out
add
mov
arpl
cli
push
sbb
add
out
xchg
repz
or
and
je
sub
repz
leave
rol
or
jno
inc
jo
jb
ret
js
pop
and
les
in
mov
sub
clc
xor
sub
mov
into
icebp
cs
int3
fldcw
sbb
push
push
fbld
stos
and
aas
scas
outsb
mov
mov
fstps
jmp
jl
adc
dec
popf
mov
push
out
stc
test
xchg
sar
adc
mov
mov
adc
pusha
or
xchg
enter
mov
add
in
pop
xor
add
inc
mov
insb
pop
xchg
or
inc
insl
fidivrs
fs
mov
aas
sbb
js
call
mov
insb
mov
clc
mov
mov
add
xchg
inc
aam
stos
sbb
adc
ja
lods
lcall
add
test
push
bound
sbb
xchg
divb
icebp
mov
js
pop
mov
xorl
or
incl
mov
daa
xchg
lods
sub
pop
pop
mov
mov
mov
mov
adc
and
lock
inc
clc
xor
orl
mov
cli
add
pushf
test
fwait
mov
dec
imul
sarb
das
push
mov
subl
cmp
clc
and
in
pop
and
in
lock
pop
push
mov
shlb
mov
or
push
mov
pop
inc
lock
mov
adc
and
inc
stos
adcb
cli
jg
hlt
jnp
cld
lret
add
xlat
jns
cmp
int
pop
clc
jno
daa
aaa
add
out
sbb
loop
mov
stos
shll
into
mov
repz
fwait
pop
les
sbb
rorb
les
mov
jb
lods
and
xchg
add
pop
mov
out
repz
sub
int3
cmp
inc
dec
inc
push
cmpsb
ja
xchg
push
sarb
sub
sub
sar
lock
mov
or
push
xor
or
jns
xchg
repnz
sahf
inc
push
pop
push
cmp
sbb
mov
xor
cwtl
pop
jp
lea
jle
or
cwtl
inc
aam
dec
mov
dec
fmul
jbe
aas
dec
lcall
xor
cmpsl
sub
xchg
insb
je
mov
inc
insb
sub
or
dec
push
fnsave
jno
mov
repz
and
addb
es
cli
into
jge
cmp
sar
xor
jecxz
and
iret
aad
push
dec
aad
jns
push
lods
dec
stc
addl
or
xor
sub
gs
xor
test
xchg
jmp
mov
daa
loopne
jge
push
push
loopne
test
dec
dec
or
ljmp
jecxz
pop
int3
or
mov
ja
jle
fwait
jnp
inc
adc
ja
push
mov
mov
adc
rcrb
lods
mov
cmc
xchg
inc
bound
jo
fldenv
arpl
mov
cwtl
nop
jge
or
and
lods
mov
loopne
cmp
mov
cmp
out
incb
ret
jo
inc
stos
jne
sarb
loope
stos
dec
or
stos
jp
in
jp
push
mov
xlat
jmp
in
outsl
lret
xor
jne
ss
ret
clc
leave
mov
dec
cs
fnstenv
mov
mov
out
outsl
add
lret
aas
cmp
pop
jp
fimull
mov
inc
push
insb
mov
adc
addr16
shrl
mov
mov
dec
daa
insl
pop
cmp
xor
gs
push
mov
fwait
jp
xor
cmp
mov
mov
rorb
cmp
jg
fwait
xor
lock
aaa
add
push
sbb
int
repnz
jo
into
inc
inc
lahf
xor
cs
and
scas
adc
push
imul
xchg
lock
dec
ds
mov
fstpt
push
adc
les
and
cmpb
aas
inc
mov
and
push
lahf
lahf
push
lret
xor
scas
sub
push
jmp
leave
push
daa
incb
gs
lods
es
jmp
pop
xorl
mov
jge
std
orb
mov
je
add
mov
mov
addr16
mov
in
mov
and
xor
dec
iret
clc
and
ret
test
loopne
lret
mov
dec
dec
mov
jne
push
loopne
mov
cmc
outsl
push
enter
xor
adc
outsl
xor
jns
adc
pushf
fcoms
fwait
xchg
sbb
mov
xor
mov
jecxz
xchg
or
or
pop
in
sbb
add
mov
sub
inc
sbb
pop
stos
xchg
out
pop
sahf
xor
jne
lret
popf
sub
cmc
inc
mov
int
dec
cmp
jne
add
lods
sub
fdivr
push
sbbb
push
bnd
sbb
dec
cld
xor
aad
or
jno
outsl
adc
lods
cltd
sub
mov
test
notl
adc
mov
out
pusha
jae
xchg
add
inc
mov
or
outsl
push
lahf
int3
or
push
jo
ja
shlb
xor
stos
aad
out
movsl
mov
lcall
pop
adc
loope
daa
inc
xor
mov
push
mov
in
jle
or
pop
mov
addr16
jbe
mov
loop
orl
inc
mov
fwait
pop
fldl
sub
xor
inc
out
and
sub
add
scas
inc
int3
push
jbe
out
inc
cmpsb
xchg
adc
sbb
push
sub
mov
jmp
sub
outsl
add
imul
jb
mov
cmc
dec
int
jbe
call
push
dec
xor
mov
insl
cmp
push
lock
inc
and
mov
pop
cwtl
shll
jne
pop
dec
sbb
daa
in
sub
fisubrl
cmp
ret
iret
sbb
out
insb
add
outsl
pop
sahf
lods
xor
mov
cmp
das
and
inc
fcompl
push
scas
jl
stc
jae
jne
ss
jne
push
lcall
mov
repnz
and
dec
cld
jns
pop
mov
jne
mov
mov
mov
adc
pop
std
mov
sbb
out
call
fildll
and
or
in
int3
jnp
inc
stc
sbb
out
and
mov
sahf
fwait
mov
push
jo
shr
cmpsb
xor
mov
pop
mov
dec
dec
mov
jmp
insb
push
sbb
inc
mov
scas
jge
lock
xor
jmp
std
jbe
dec
jge
cmpsb
mov
aaa
jbe
sub
int
inc
mov
enter
aad
jnp
mov
test
bound
rcl
in
sahf
stc
daa
xor
and
jle
mov
sahf
call
vrsqrtss
pop
aaa
rcll
jnp
jmp
pop
inc
int
pop
inc
int3
lock
add
out
add
sti
loopne
push
lock
ja
push
pop
shll
cli
leave
ficomps
dec
sbb
repnz
cmpsb
das
cli
dec
nop
in
mov
in
in
lods
jnp
jg
fcoml
movsb
out
push
into
dec
cli
mov
outsl
pop
jmp
and
xchg
and
mov
jl
xchg
adc
test
cmc
inc
jle
ljmp
fstpt
insb
call
outsl
jne
mov
push
stos
mov
inc
or
loopne
jle
or
mov
cmpsb
inc
sub
adc
lret
mov
pop
lock
inc
sub
push
insl
les
jae
dec
roll
push
dec
mov
into
clc
sub
lahf
out
mov
lock
outsb
rclb
push
cwtl
cmp
bound
cmp
sbb
pusha
fwait
lock
inc
cmp
pop
sbb
in
dec
enter
xor
test
push
push
jno
mov
aas
push
js
cmp
div
dec
ret
fwait
sbb
jae
push
xor
out
xor
mov
inc
pop
jo
lods
cmpsl
data16
cmp
mov
adc
jne
sbbb
lock
xchg
sub
aad
jnp
out
fmul
pop
push
xchg
sbb
out
mov
mov
adc
movsl
jmp
or
inc
cmp
stos
and
adcl
sbb
lds
aaa
cmp
lea
and
xor
inc
pop
add
xor
rcll
dec
aam
sbb
add
mov
insl
and
xlat
sub
push
mov
inc
popa
pushf
xchg
fcoms
mov
xchg
cmp
call
push
or
and
pushf
adc
xor
xor
pop
loopne
movsb
pop
int
lcall
fwait
sti
dec
lret
xor
dec
scas
shlb
and
jmp
lcall
mov
rcl
sahf
fsubr
mov
xchg
sti
aaa
mov
jp
inc
adc
popf
inc
or
inc
mov
testb
push
jecxz
movsb
or
into
movsl
out
dec
icebp
out
sbb
pop
pop
incb
add
or
xlat
imul
roll
push
fwait
out
in
inc
push
in
dec
sbb
xor
sub
in
or
push
xchg
rol
cmp
jge
fsubs
bound
call
xchg
xor
inc
mov
loopne
pop
mov
movsb
lods
cmp
test
imul
jns
inc
add
jbe
into
ss
jns
push
jns
sbb
push
mov
rclb
outsb
paddsw
mov
mov
adc
les
mov
dec
sbb
sbb
mov
out
arpl
add
lret
insb
xchg
sbb
movsb
loope
mov
cmp
fadd
mov
xchg
int3
add
adc
inc
pop
inc
cmp
mov
lds
xchg
push
test
push
nop
mov
loop
mov
sahf
and
sbb
repz
push
mov
stos
add
lods
addr16
ret
imul
pop
cmpb
xor
sbb
aad
add
jecxz
es
or
cwtl
cmp
jnp
fildl
xchg
add
push
mov
out
ret
mov
mov
dec
jecxz
or
inc
imul
call
mov
ret
js
lcall
sahf
sbb
or
ja
xchg
sub
cs
cmp
cmpsl
adc
xor
aad
xchg
es
les
insl
or
addl
inc
add
adc
ret
inc
scas
mov
gs
mov
movsl
inc
fcmovb
xchg
movsb
sbb
mov
and
push
adcb
inc
sti
les
inc
popa
push
out
pop
fwait
mov
adc
and
outsl
mov
aaa
leave
cmp
test
sbb
fstps
popa
jnp
jmp
mov
xchg
inc
sahf
jne
test
jns
out
mov
or
jae
lds
out
or
jbe
sti
lret
into
jbe
jne
jne
xchg
test
jmp
xchg
jge
adc
mov
push
out
mov
mov
es
imul
frstor
xchg
inc
jmp
outsb
inc
mov
arpl
cmpsl
dec
insb
inc
dec
clc
and
xor
js
dec
dec
pop
jmp
adc
xchg
xor
xor
push
xchg
int
add
loop
mov
je
rsm
lods
clc
pop
inc
pop
lods
aam
jne
imul
mov
mov
out
jle
mov
pop
imul
and
fwait
mov
lods
dec
sub
jns
arpl
test
test
jp
inc
pop
lahf
sub
jecxz
inc
jo
jmp
xorb
mov
iret
std
add
mov
arpl
mov
ja
adc
test
jl
ss
mov
repnz
jne
out
aam
push
adc
adc
inc
push
or
bound
sub
jbe
xor
icebp
sbb
loope
movsb
dec
sbb
xor
lcall
mov
mov
pop
mov
fistpl
adc
pop
sub
sbb
mov
aaa
aam
cmp
adc
or
mov
enter
loopne
cmp
icebp
sahf
jns
sub
into
xchg
dec
std
or
fwait
adc
dec
push
fcomp
iret
mov
adc
push
nop
add
lret
xor
cs
movsl
xchg
and
jecxz
nopl
jp
mov
jne
jnp
inc
cmpsl
mov
mov
mov
fildll
mov
mov
das
in
and
movsl
and
push
pop
inc
inc
int3
adc
push
stc
adc
lcall
mov
test
mov
addb
sbb
sbb
xor
mov
add
add
or
mov
call
or
shrb
xor
cltd
jmp
dec
pop
movsl
push
pop
addb
xor
add
testb
cmp
push
push
pop
rcr
push
push
sbb
movsl
cltd
aam
shlb
jo
jp
enter
test
cld
pushf
fildll
in
leave
sbb
add
negb
cltd
loope
sub
sub
dec
popf
in
push
mov
iret
mov
rdtsc
testb
add
adc
cmp
flds
les
cmc
dec
loopne
stos
lea
push
lods
and
xchg
scas
or
sub
or
stos
add
push
xlat
pop
mov
jmp
jbe
cmpsl
or
ljmp
shll
popf
pop
add
or
push
movsl
pop
push
es
add
mov
icebp
arpl
ljmp
negb
dec
in
push
fisttps
inc
cmp
insl
pushf
mov
iret
inc
cmp
rcrb
jo
inc
push
add
cmp
lods
pop
cmp
mov
and
jae
mov
mov
xchg
out
gs
ss
fldl
insb
jmp
mov
shll
mov
or
inc
push
push
fstps
push
xor
and
xchg
inc
mov
mov
and
int
and
sub
xchg
push
fbld
mov
xor
xchg
fmuls
mov
subb
call
push
shufps
fs
test
mov
incb
mov
jp
lock
or
hlt
inc
sub
divb
les
enter
aaa
loop
scas
scas
xchg
out
aam
iret
mov
lret
iret
mov
jne
shl
mov
popf
push
out
ds
jge
stc
aam
xor
and
xchg
jp
sub
xor
mov
xchg
mov
mov
push
xchg
or
jmp
clc
out
inc
mov
dec
fistps
orb
cmc
hlt
popf
rorb
cmpsb
negb
or
and
in
xorb
sub
xor
adc
and
lock
sub
or
jbe
jl
mov
mov
mov
repnz
inc
or
aam
sarb
and
pop
pop
sbb
xchg
mov
in
das
cmp
mov
mov
pop
jmp
mov
lods
xor
lock
cli
fnstsw
mov
push
into
xchg
addr16
jbe
imul
stos
movsl
lret
mov
mov
push
cmpsl
inc
sub
les
repnz
sysenter
and
cltd
xchg
mov
mov
sbb
xor
cmp
mov
sub
iret
sub
mov
pop
icebp
roll
mov
inc
mov
in
cmc
cwtl
and
jns
dec
lcall
push
xor
sub
or
mov
sub
sbb
fcmovne
cli
xchg
push
movsl
push
sub
jmp
sub
or
insb
cmp
fldl
and
jle
mov
mov
rclb
nop
sub
fstps
adc
lcall
clc
mov
pop
cltd
mulb
jl
jno
mov
cmp
xchg
shufps
cmp
out
outsb
in
or
pop
in
or
out
pop
sub
daa
dec
cmp
or
xor
jae
mov
fadds
pop
test
jno
pop
mov
xchg
adc
pop
lret
fiaddl
call
bound
or
adcb
lahf
jle
add
xchg
jmp
pop
push
mov
ret
push
push
xor
and
cmp
mov
cli
push
ret
shll
bound
xchg
jnp
dec
push
aaa
or
add
jmp
push
mov
jmp
mov
sub
push
pushf
sub
sbb
jb
sub
mov
push
xor
int3
mov
jle
shll
cld
jecxz
cmp
js
dec
not
js
shl
dec
xor
jns
sbb
jb
add
jne
adc
into
sti
sti
jge
lea
pop
push
in
scas
pop
ret
stos
aam
fdiv
jp
or
cmp
push
fnsave
stos
push
xor
test
push
or
insb
jmp
jmp
xor
in
test
roll
pop
call
sub
testl
iret
movsl
or
jb
jge
notl
into
sub
es
fimuls
popa
xor
lds
push
pop
cmp
lods
out
or
cmp
hlt
inc
scas
sub
jecxz
rcll
int
jge
cmp
mov
test
jp
clc
ret
sti
ds
push
xchg
daa
push
cmp
push
mov
sub
mov
jecxz
std
leave
aad
cld
mov
ret
std
sbb
xor
rclb
outsb
xchg
mov
pop
inc
pop
push
lea
sbb
ror
lret
out
mov
push
mov
xchg
int3
cmpsl
mov
aaa
addr16
mov
popa
movl
sub
xchg
adc
rcr
xchg
adc
xchg
add
lret
jg
xchg
rol
scas
popf
fwait
push
and
cmc
int
xchg
and
loopne
push
in
lock
sti
or
push
pop
jecxz
shll
int
add
scas
sub
sbb
stc
test
and
imul
mov
dec
jbe
js
repnz
repnz
aaa
pop
mov
xor
out
pop
fwait
inc
mov
aaa
pushf
pop
dec
adc
outsl
sbb
ss
ja
mov
and
lret
lret
sti
dec
dec
lods
scas
in
sbbb
xchg
call
in
xchg
xorl
incl
sub
rolb
or
add
pop
insb
pop
or
cli
inc
lcall
repnz
dec
dec
or
leave
imulb
subb
pushf
jns
dec
fistl
mov
loope
out
sub
arpl
mov
jbe
int3
ss
ss
scas
sub
lods
inc
out
fidivl
mov
add
iret
xor
sarl
sub
sub
and
ficompl
add
lret
cmpsl
mov
test
pop
shrl
push
in
mov
adc
aam
enter
icebp
ljmp
push
cmp
rol
cwtl
add
inc
inc
loop
outsl
pop
test
loopne
out
subb
sahf
cmp
rclb
pop
inc
cmp
and
mov
mov
sub
mov
cmp
data16
lcall
and
fistpl
test
jl
pop
sahf
andl
xchg
xor
pop
loopne
out
mov
push
or
jle
pop
adc
pop
popa
andb
sarb
push
into
dec
xchg
or
xor
pop
leave
cli
dec
mov
imul
dec
int
mov
sub
cmp
lods
cli
divl
jmp
fs
mov
sub
fpatan
mov
dec
fistpll
lods
xchg
lcall
in
test
adc
mov
adc
mov
mov
cmp
xchg
insl
xor
push
jl
jecxz
aaa
xor
or
ret
rcr
lea
sub
je
xchg
mov
xor
aam
arpl
clc
cli
cmp
fdiv
faddp
loopne
dec
cmp
sbb
jns
push
mov
inc
iret
inc
pminsw
inc
js
xor
mov
loope
bound
sub
rclb
jle
stos
inc
add
daa
aaa
test
ljmp
jnp
outsb
xor
lcall
cmpl
cltd
xchg
push
inc
lods
out
popf
gs
xchg
push
mov
pop
into
xlat
push
jns
out
mov
sub
cmpsl
adc
pop
inc
mov
xor
int
cmp
popf
pop
mov
push
loop
rcrl
mov
jp
sub
inc
mov
push
pop
lods
mov
jmp
sub
fldcw
add
or
mov
and
inc
inc
in
stos
loope
out
out
adc
fwait
cmp
imul
pop
subb
hlt
btc
sub
dec
cmpsb
xor
imul
rorb
loopne
cmp
mov
lods
and
add
sarl
fwait
push
stos
or
inc
divl
push
add
xchg
das
mov
lret
inc
mov
and
and
xchg
jp
and
mov
sub
jae
pop
lods
pop
mov
sbb
test
xchg
sub
std
cmp
pop
mov
dec
daa
addr16
lds
vmread
pop
push
jle
mov
xchg
sbb
mov
add
ret
dec
inc
adc
push
mov
fisttpll
ret
aaa
out
negb
lcall
dec
fwait
sub
aaa
out
and
dec
xor
cmp
mov
out
pop
sub
test
mov
dec
dec
test
jne
mov
adc
dec
add
iret
pop
xchg
jge
testl
das
sbb
movsl
xchg
cli
test
cltd
pop
jmp
pop
enter
dec
adc
fildll
pop
aaa
shlb
xchg
loopne
xor
adc
es
dec
lods
cmc
sbb
test
fcomp
xchg
test
repz
xor
ds
xor
push
movaps
pop
xchg
aad
sbb
imul
push
dec
into
lcall
js
stc
xor
or
add
sbb
leave
and
xchg
adc
sub
cmp
inc
cmpsl
xchg
hlt
jbe
into
mov
xchg
adc
dec
mov
and
mov
dec
dec
or
push
or
fidivrs
mov
pop
jae
stos
jmp
int3
sbb
cs
mov
adc
push
out
mov
pop
cmpsl
outsb
popa
lcall
js
inc
lahf
mov
pop
adc
ret
pop
ficoml
rolb
push
push
dec
lods
test
test
cld
mul
pop
and
jle
ljmp
rep
cwtl
push
rclb
jge
mov
dec
adc
out
xor
jge
lahf
ss
mov
push
xor
int
and
xor
inc
in
xchg
lods
mov
lahf
inc
sub
movsl
pop
mov
jno
in
es
inc
and
sub
test
mov
add
mov
stos
into
pop
gs
ffreep
adc
fs
movsb
xor
push
js
mov
dec
or
sbb
mov
sbb
sub
fsubrl
mov
inc
cmpsl
mov
sahf
xor
mov
and
pop
xor
cmpsl
lea
aas
sbb
xchg
xor
sti
pop
imul
sub
cmp
dec
shl
and
add
mov
and
mov
call
xchg
ja
xor
jb
or
sahf
lret
adc
pop
xchg
push
loope
xor
add
les
imul
popa
aad
fbld
mov
cmp
and
rcrb
cmp
push
and
and
xchg
inc
and
int3
in
adc
xchg
loop
xrstor
mov
test
add
sub
xor
jno
lds
dec
jbe
pop
push
push
icebp
gs
or
sub
adc
arpl
add
cmp
or
popf
imul
loopne
sbb
lea
mov
orl
mov
mov
sbb
xorl
cmp
mov
fldt
mov
adc
bound
jecxz
aaa
pop
cmp
cwtl
mov
cmc
jg
mov
out
fdivs
movsl
cltd
sbb
mov
pop
into
adc
xchg
add
les
push
cs
aas
loopne
mov
hlt
mov
jbe
or
lret
adc
std
sbbl
outsl
insb
mov
ds
mov
cmp
sarl
mov
cmp
mov
pop
add
jo
fsubs
xchg
and
int3
ds
repz
fadds
and
ljmp
push
dec
lret
sahf
in
sub
jecxz
pop
icebp
jecxz
outsl
cmpl
inc
jg
test
dec
adc
sarl
roll
or
inc
cltd
in
scas
fnsave
repz
mov
adcb
das
stos
mov
cmp
push
mov
pop
and
lods
jp
push
xchg
xchg
inc
dec
mov
cmp
hlt
and
aaa
add
roll
sbb
negb
in
xor
or
sti
inc
shrb
out
add
sarb
fmull
push
cmp
xchg
mov
lods
addr16
xchg
frstor
adc
and
stc
xlat
sub
in
shlb
add
js
sbb
dec
mov
xchg
in
data16
das
lret
iret
xor
and
pop
andl
jo
js
adc
addb
out
test
xchg
jnp
sub
test
divb
mov
adc
insb
push
cmp
leave
xchg
ffreep
bound
int
out
stos
movsb
fsubrp
std
insl
das
dec
fmulp
adc
jae
sub
cmc
jl
sbb
adc
nop
add
scas
daa
int3
aaa
decb
mov
movsb
imul
cmp
mov
mov
test
fcoml
mov
and
fildll
cmp
ljmp
aam
outsb
jb
fcoml
xor
test
push
insl
or
movsl
iret
pop
or
pop
jbe
jne
push
xor
sbb
daa
pop
mov
gs
lret
push
aad
je
dec
pop
xorl
pop
xor
mov
inc
inc
je
xor
pop
scas
xor
xor
pop
push
in
sbb
insl
adc
inc
inc
and
loop
mov
loop
faddp
fists
or
dec
cmp
inc
js
cmpl
xor
aam
push
sub
xchg
cmp
add
pop
dec
aam
call
mov
stos
sbb
out
sub
scas
subl
loopne
dec
jecxz
mov
jmp
add
cltd
jnp
and
outsb
push
addr16
test
loop
adc
loopne
dec
int3
jno
loopne
mov
imul
mov
mov
mov
gs
jns
pop
lret
fidivl
imul
cmovbe
mov
mov
out
outsl
fsubp
lods
add
and
imul
jnp
add
push
lahf
xchg
lds
test
cmp
sbb
xchg
inc
clc
stos
mov
aaa
mov
dec
jbe
int
aaa
imul
fs
pop
push
mov
mov
mov
and
add
mov
mov
xchg
xchg
jb
mov
pusha
pop
lea
mov
push
dec
call
pushf
out
aam
jp
jbe
or
std
dec
in
xor
jae
mov
cmc
adc
dec
cmp
or
fstl
cvtps2pd
mov
in
lea
jmp
cmpsb
mov
inc
mov
pop
test
cltd
inc
pop
iret
cmp
cli
lods
xor
std
out
cmp
clc
shlb
cmp
test
imul
pop
xchg
pushf
fisttps
sti
mov
add
xor
pop
icebp
cmp
aam
imul
aaa
sub
roll
mov
mov
rcrb
js
inc
in
sbb
addb
idivb
adc
push
pusha
inc
xorl
outsb
pop
sbb
cmp
dec
daa
sbb
movsl
dec
xor
mov
mov
mov
bound
add
pop
rol
pop
mov
mov
jmp
aam
mov
aaa
les
add
xlat
sub
push
sti
sahf
and
jmp
scas
cmp
pop
xor
or
add
outsl
jmp
dec
add
ret
push
cld
pusha
into
pop
test
pop
aam
and
mov
dec
mov
leave
pop
push
sbb
lea
push
sub
std
repz
adc
jle
in
mov
dec
js
push
sar
adc
xchg
jns
push
xchg
adc
jns
fnstsw
xor
mov
adcb
and
mov
push
cmp
inc
clc
mov
mov
or
fwait
lahf
push
push
xor
scas
mov
ljmp
adc
push
cli
lods
cmp
lahf
lret
iret
inc
sub
inc
mov
arpl
inc
sub
mov
scas
mov
mov
inc
je
pop
cmp
adc
cmpsl
or
inc
rorb
push
hlt
adc
call
ss
in
mov
das
xchg
xchg
jae
je
test
mov
push
xor
cmpl
jmp
es
inc
xchg
clc
push
lds
adc
jmp
fimuls
je
mov
pop
aad
popa
jnp
mov
arpl
repz
xchg
inc
clc
cmp
sub
subb
jb
je
sbb
jg
lahf
inc
push
add
jecxz
jnp
pop
add
cmpsb
rorb
dec
push
out
imul
lahf
shl
dec
jge
lret
test
cmc
inc
push
cli
and
and
aas
dec
dec
ljmp
jle
mov
loope
pop
jbe
sbb
or
dec
add
pop
lcall
cmc
imul
dec
out
aad
imul
mov
mov
inc
mov
cmpsl
std
adc
outsb
iret
dec
cli
sbb
xor
sbb
int3
lcall
dec
mov
xchg
cmp
rcl
mov
mov
sbbl
lods
mov
sub
call
outsl
xor
mov
jns
sahf
inc
loope
sahf
fwait
cld
sub
or
push
insb
jno
mov
sub
out
jbe
push
je
orl
cmpsl
pop
loope
xlat
mov
pop
sub
push
and
jbe
arpl
cmpsb
mov
in
lcall
sti
sub
adc
iret
arpl
bound
outsl
test
inc
ret
imul
in
sti
adc
dec
out
in
push
leave
dec
pop
add
andb
xor
adc
add
push
jge
ss
push
stos
push
decl
mov
sub
sub
cmc
cli
mov
sbb
inc
test
xor
popa
pop
js
sub
and
sbb
pop
ficoms
pop
xchg
or
popf
movsl
lret
sahf
sub
nop
xchg
pushf
push
cmp
loope
repnz
sbb
mov
xchg
les
ficoml
inc
cmp
jno
or
push
into
jno
fs
int3
in
in
frstor
xor
gs
stos
jg
mov
add
mov
jg
xchg
sbb
aad
sub
subl
lods
add
push
bound
cmp
movb
jmp
dec
jmp
idivb
dec
adc
sbb
xchg
jne
out
pusha
sbb
insl
dec
fists
in
rcrl
std
push
xchg
cmpsb
out
mov
pop
lcall
push
cmp
jns
jg
subl
pop
rep
pop
repz
aad
enter
inc
mov
dec
pop
push
shrl
cltd
arpl
xor
xchg
inc
inc
cwtl
stc
cmp
ret
popa
fnstenv
jne
adc
push
int
stc
pop
push
in
sub
iret
in
movsl
dec
sarb
push
jbe
insb
cmp
mov
xchg
loope
ljmp
enter
loop
push
fsubrl
data16
iret
stos
push
in
movsl
jne
mov
pop
fs
jnp
dec
adc
mov
mov
mov
and
add
hlt
imul
mov
rcrl
int
xor
repz
ds
sub
out
or
dec
push
fimuls
jns
out
xorb
stos
cmp
or
sbb
cmp
jp
push
jp
movsl
push
cmp
jecxz
add
pop
pop
fists
fisubrl
addr16
adc
fs
adc
js
push
pop
cmc
arpl
mov
or
jle
adc
pop
or
cmp
mov
jecxz
jnp
sbb
rcr
jle
orl
clc
jl
lock
xchg
test
decl
mov
jbe
rorl
mov
repnz
into
call
mov
ficomps
push
push
fstps
inc
out
lret
dec
or
inc
iret
inc
das
popa
pop
or
push
push
imul
mov
or
fucomp
test
je
stos
xchg
iret
out
lahf
xor
fwait
outsb
and
in
and
add
xlat
insl
lcall
ljmp
jle
ds
cmp
add
dec
in
push
pusha
push
jmp
push
push
pop
xchg
jmp
push
cmc
xor
outsb
pop
add
lea
adcb
jp
popf
mov
xor
std
out
sbb
and
icebp
mov
inc
mov
inc
and
stos
jno
add
dec
pop
imul
mov
sti
push
pop
ficomps
insl
stos
mov
shrb
repz
lock
sarb
insb
push
out
std
jns
frstor
cmp
jmp
xor
ret
xchg
hlt
daa
ret
js
and
xor
cmp
in
in
bound
les
mov
outsl
les
inc
fsubrs
mov
dec
mov
jb
pop
cmp
and
dec
and
jmp
pop
scas
xor
add
cmc
fldcw
dec
add
das
movsl
mov
xchg
xchg
inc
push
imul
bound
fldt
push
mov
or
dec
dec
call
pop
mov
loop
insl
jmp
ret
call
xchg
cltd
dec
adc
scas
cmp
mov
mov
jmp
mov
push
xchg
xlat
fists
adc
pop
rclb
ficomps
les
adc
test
daa
jmp
push
ja
ret
mov
addl
mov
inc
xor
out
mov
mov
cmc
push
cmpsb
fistps
or
xchg
mov
xchg
add
shlb
repnz
shl
dec
xchg
sub
push
pop
xchg
hlt
jbe
mov
sub
ret
cmpsl
pop
pop
fistl
xchg
ljmp
fadd
cmpsb
inc
cmp
dec
jne
xor
push
push
and
cmpsl
pop
cs
jle
dec
sub
pop
add
add
pop
mov
lds
daa
jmp
adc
cmpsb
jmp
ss
mov
push
mov
inc
xor
insb
lods
dec
out
pop
ss
clc
fldt
inc
imul
mov
ficoml
repnz
sbb
out
add
cltd
lcall
das
enter
mov
xor
dec
and
jge
cmp
es
rorb
push
movsb
dec
les
fs
push
xlat
ljmpw
xchg
pop
jns
in
inc
mov
mov
mov
shl
addr16
in
mov
mov
rcll
pop
mov
pop
dec
cmp
xor
mov
sub
push
lods
cltd
fisubl
push
aam
xlat
cmpsl
push
cli
ds
xchg
hlt
outsl
inc
scas
addr16
inc
xchg
scas
sbb
faddl
pusha
mov
addr16
pusha
test
repz
cmpsl
repz
mov
lret
xchg
repnz
add
inc
xchg
aam
test
cmp
mov
out
xchg
fldcw
cltd
and
mov
daa
mov
cmp
dec
lret
push
mov
xor
or
pop
lods
rol
mov
pop
or
mov
int
mov
mov
ffree
add
and
jmp
je
jae
out
push
in
mov
push
outsl
dec
faddp
mov
les
mov
outsb
cmp
mov
jge
in
mov
mov
push
adc
and
cmp
lds
daa
fdivs
mov
inc
lods
int
or
mov
push
pushf
adc
mov
les
subb
xorl
rcrb
jne
repz
int
and
ror
mov
and
adc
push
lods
aam
sti
imul
fcmovnb
sbb
pop
pop
adc
cli
sbb
out
mov
pop
shll
fnstsw
jmp
and
sub
dec
mov
pop
xchg
jecxz
xor
int3
xorb
das
test
cmp
add
ffree
xor
fcompp
shrl
and
pop
mov
mov
cmp
sub
ret
outsl
inc
cwtl
cwtl
jnp
pop
fld1
mov
pop
mov
cwtl
pop
pop
push
or
outsb
add
fs
bound
popa
cltd
pushf
sub
sub
jecxz
jmp
pop
into
mov
das
mov
pop
push
xor
loope
je
imul
and
jmp
adc
adc
popf
ret
aad
or
sub
jl
pop
lods
sahf
xchg
mov
xchg
sub
dec
jb
inc
mov
fdivs
dec
or
xchg
mov
sub
sub
rdpmc
sub
inc
mov
mov
cltd
imul
and
aaa
jbe
fcompl
push
or
loopne
loop
fwait
add
or
mov
shrl
cli
xor
mov
and
push
xor
aas
outsl
aas
mov
pop
jmp
fdivs
orl
imul
in
lods
pushf
mov
sbb
adc
pop
fwait
int
popa
les
cmpsb
hlt
test
call
jbe
pop
cmp
clc
ljmp
iret
xchg
adc
test
sub
and
add
mov
in
fcmove
cli
jbe
mov
xor
inc
fwait
mov
aam
lods
hlt
push
pop
xor
jmp
fimull
jg
fnstcw
jne
push
push
mov
cmp
aas
and
ret
iret
add
xchg
mov
iret
lods
or
or
jmp
cmpsl
lret
movsb
cs
in
pop
test
scas
and
sub
popf
sub
repz
rolb
cwtl
push
xchg
push
mov
jae
pop
jae
ja
pop
subl
dec
shll
jmp
push
sbb
enter
cld
mov
int
dec
or
cmpl
imul
dec
cli
shr
in
add
stos
out
rcrb
adc
mov
in
sahf
dec
fdivl
push
sti
iret
pop
pop
jns
cs
sub
test
cli
icebp
inc
xor
pop
dec
repz
fisubs
stos
not
mov
mov
or
adc
dec
sub
arpl
pop
xor
push
xor
cwtl
mull
sbb
add
jb
imul
inc
imul
pop
add
xor
mov
mov
sub
inc
decl
jo
mov
sbb
xor
adc
adc
cmc
fldcw
loopne
cmp
ret
xchg
imul
sub
dec
adc
aad
int
pop
mov
pop
sbb
sbb
adc
pushf
andb
adc
jge
inc
stos
mov
pop
cmpsb
out
gs
leave
sub
dec
or
imul
loop
add
repnz
imul
cltd
jo
fucomip
xor
mov
gs
movsb
mov
test
pushf
rcr
cmc
xchg
shll
popa
jae
mov
out
lea
rcll
repz
addr16
xorb
cmp
iret
bound
cmp
or
fwait
mov
scas
xchg
push
sub
lcall
jae
cs
iret
push
fdiv
push
lods
adc
mov
dec
push
shrb
inc
lcall
in
sub
stc
ret
push
adc
cs
ss
dec
xchg
add
push
sub
pushf
jge
mov
mov
or
cmp
lret
cmpsb
xor
sbb
cwtl
adc
cltd
push
and
addl
push
jle
ljmp
mov
sbb
push
addl
xchg
cmpsb
loopne,pn
xchg
mov
dec
ljmp
arpl
jns
imul
test
cmp
repnz
dec
subl
iret
adc
ds
cmp
cli
push
adc
les
and
out
ss
pop
sbb
out
fisttps
fstpl
jle
push
push
lret
pop
push
nop
jp
rclb
cmp
dec
loope
lods
shll
mov
bound
nop
xor
xchg
push
shlb
pop
addl
jle
xor
pop
je
inc
out
xchg
xchg
xlat
cld
sbb
mov
and
je
add
clc
mov
add
push
in
pop
pop
faddp
dec
dec
and
jmp
int3
add
or
ja
fists
sub
xchg
bound
addl
push
pop
iret
movsb
xchg
fwait
mov
push
jns
addr16
ja
aaa
int3
pop
ja
pop
add
int3
int
jecxz
shll
clc
xor
outsl
or
pusha
inc
xor
sbb
ss
cmpl
add
and
lods
add
push
and
mov
or
push
js
repz
ror
int
jmp
pop
scas
xchg
push
gs
vmovaps
add
cmpsb
push
shll
mov
test
cltd
movsb
adc
dec
sbb
pop
mov
fdivl
frstor
mov
sub
pop
pop
cli
out
popa
push
test
push
mov
shll
mov
int3
mov
pop
pop
add
loope
mov
call
test
xchg
pop
cli
fs
cld
pop
push
iret
or
cmc
mov
mov
jecxz
or
je
xor
dec
addr16
jg
mov
jbe
lods
enter
lods
sub
fidivs
lods
popf
test
shlb
xlat
inc
jmp
lds
enter
add
fldln2
pop
sub
sub
xorl
loopne
into
lods
mov
cmp
cmpb
js
scas
mov
xchg
push
imul
mov
mov
loopne
push
aaa
sub
jns
push
pop
rolb
frstor
in
scas
ret
mov
fs
ljmp
movsl
mov
add
insl
leave
notl
call
jmp
rorl
inc
push
mov
and
add
sbb
sub
cmp
dec
or
adc
push
cs
mov
fistps
push
fisttpll
aam
xchg
stos
or
outsl
les
sub
jmp
mov
mov
pushf
cmp
enter
xor
pushf
mov
mov
cmp
and
sub
add
leave
sub
mov
pop
fcmovu
outsl
adc
jb
loope
push
fxam
ljmp
test
mov
cltd
push
jns
cli
push
cmp
cs
lock
js
or
jl
push
jl
pop
aad
inc
insl
popf
inc
data16
clc
sbb
das
in
add
int
test
mov
les
fcompl
sbb
and
jnp
scas
mov
ja
lret
and
das
rclb
daa
test
add
stc
add
push
xor
jg
cli
mov
or
inc
cmp
dec
mov
jmp
add
pop
sti
xchg
leave
xchg
push
inc
mov
xor
shl
test
popf
int3
xor
push
ret
sub
mov
mov
jle
push
sub
adc
mov
test
lret
scas
push
fidivrs
cmc
cmp
mov
inc
cld
cmp
les
in
jb
cld
dec
daa
mov
addb
inc
fbld
fwait
repz
cltd
loop
fldcw
dec
inc
lods
jns
jecxz
loope
pop
mov
push
sub
mov
mov
xchg
xchg
or
push
pop
cmp
inc
or
pushl
cmp
pop
xchg
dec
xor
cmp
mull
pop
add
pusha
js
shll
daa
or
add
mov
loopne
push
arpl
lahf
popf
mov
mov
lret
nop
shrl
inc
movsl
in
or
mov
push
scas
xlat
jl
inc
imul
pop
loope
outsb
lahf
sub
das
and
jmp
or
pop
push
in
je
fsubr
lock
mov
scas
popf
inc
in
sub
inc
and
or
cmpsl
mov
mov
sub
lock
inc
jp
pusha
or
pop
cmpb
push
xor
ja
out
mov
jne
mov
jmp
leave
fsubs
repnz
or
mov
dec
add
shll
adc
cmp
orb
shll
arpl
pusha
xchg
xchg
lret
xor
sub
dec
js
mov
pop
test
shlb
sub
repz
pop
push
inc
push
dec
mov
icebp
aad
dec
add
out
fists
dec
ret
add
cmp
mov
lcall
mov
cmc
pop
les
test
ljmp
dec
xor
cmp
rcl
bound
sub
lods
mov
push
pop
ljmp
ja
mov
sub
stos
cmovg
xor
cmpsl
and
dec
lods
push
xchg
xor
shl
jne
inc
in
mov
pop
cmp
push
xor
das
push
xor
scas
iret
inc
inc
dec
inc
cltd
inc
xchg
xchg
mov
pushw
push
int3
push
pop
pop
inc
xchg
test
mov
mov
push
cmp
mov
mov
cwtl
sbb
sbb
ret
cmp
enter
inc
sub
lods
das
negl
inc
ficompl
pop
cs
pushf
and
pop
mov
cmp
xor
mov
pushf
cwtl
or
jbe
add
inc
sarl
test
jmp
das
in
scas
or
call
mov
jecxz
hlt
xchg
mov
jg
pop
fisttps
addl
aam
mulb
xorb
xchg
adc
push
cmpsb
int3
adc
ja
fcompl
pop
loop
aaa
jmp
lock
rol
sub
adc
jb
sbbb
cmp
pop
std
jno
xor
jg
in
xor
adc
and
gs
adc
icebp
and
cld
orl
xor
aas
or
scas
sbb
xor
xchg
into
in
xchg
aam
inc
xchg
out
test
mov
mov
push
push
in
push
out
in
loop
jbe
aad
mov
adc
cmp
and
loopne
push
add
xchg
popl
and
push
cmc
cmc
and
xor
jne
mov
pop
loopne
xchg
lretw
vorps
pop
mov
test
fcmovnbe
loope
loop
loop
enter
stc
mov
push
push
pushf
pop
mov
aaa
in
xchg
movsl
lret
clc
insl
out
cld
into
mov
cmpsb
outsb
cmp
movsl
mov
mov
or
xor
sub
data16
inc
rorb
mov
xchg
jg
xor
imul
popa
or
lcall
outsl
mov
xchg
call
push
cmp
subb
inc
jle
cmp
jl
outsb
xchg
adc
rcl
daa
xchg
mov
dec
mov
push
inc
pop
sbb
mov
xchg
mov
in
in
rcrb
lret
cmp
push
mov
jo
jne
and
in
bound
push
pop
in
cmp
mov
scas
into
sub
xchg
std
jg
push
insb
mov
and
outsb
sti
push
jne
imul
fcmovbe
jmp
rorb
mov
jmp
ljmp
insb
push
adc
sbb
repnz
inc
addr16
ret
pop
lcall
dec
lahf
scas
push
nop
add
data16
sbb
dec
call
jo
sub
imul
adc
cli
pop
cli
insb
repnz
cmp
jle
jle
cmp
cmpsb
jb
cmp
dec
loop
or
sbb
mov
xchg
inc
push
mov
lahf
in
xchg
test
fdivrl
jo
imul
pop
mov
das
adc
and
fiadds
adc
jbe
cmp
xchg
and
inc
sbb
orl
sub
je
fidivrs
shlb
xchg
mov
fsubrl
sbb
xor
out
outsl
jmp
or
adc
lret
inc
popl
sub
ljmp
adc
and
add
jge
jmp
loop
ja
mov
nop
addr16
inc
stc
mov
add
dec
outsb
pop
shrl
rcll
out
fimuls
dec
sarb
sub
add
mov
pop
mov
jle
sub
lea
cli
test
jb
or
mov
push
mov
inc
test
lret
std
jmp
adc
fwait
lret
mov
sub
mov
ja
mov
xchg
addb
fsub
fisubrl
iret
enter
loopne
lret
cld
sub
sub
mov
out
push
xchg
aaa
sti
pop
dec
mov
push
jmp
sarb
mov
mov
aam
punpckhbw
std
popw
push
loop
sti
popa
add
push
sbb
mov
mov
jp
mov
dec
aaa
sbb
mov
es
mov
mov
mov
jle
bsf
cmpsb
xor
scas
mov
mov
or
adc
mov
in
scas
loope
neg
lret
dec
cmp
bound
adc
jmp
ficompl
lahf
jp
daa
cmpsb
adc
test
mov
and
inc
in
fs
fsin
clc
test
fldl
andl
outsb
clc
lods
add
or
movsl
and
xor
je
adc
neg
dec
or
pusha
lret
inc
cmp
xchg
dec
data16
mov
cmpb
in
xor
cmovp
and
aad
loopne
es
inc
ljmp
pop
stc
stc
add
popf
pop
loopne
and
add
sti
loopnew
push
fwait
stos
push
aaa
scas
bnd
push
das
in
sub
mov
lcall
into
and
sub
stos
pop
mov
inc
sbb
push
xor
in
xchg
pusha
fists
imulb
pop
repz
repnz
xchg
pop
ror
test
stc
mov
out
test
xor
cmp
pop
loop
sbb
fldt
ds
cmpsb
mov
and
cmp
out
in
add
cmp
push
movb
push
lds
outsl
std
jno
push
inc
in
cmp
pop
mov
and
loop
out
out
setnp
dec
adc
dec
jmp
xor
clc
cmpsl
out
leave
cmp
fsubs
push
lods
mov
movsb
std
test
ror
in
xor
jg
lcall
adc
stc
int3
xor
popf
je
sar
jp
jle
xchg
jnp
lock
fisttpll
sbb
sub
add
push
xor
cmc
xlat
xor
sbb
lds
pop
and
arpl
pop
std
xorl
fstpt
fcomp
xchg
mov
mull
data16
fstl
pop
jno
scas
xchg
push
inc
or
sub
or
shll
mov
adc
cmp
sahf
jl
jg
inc
popf
sbb
dec
mov
popa
outsl
xchg
cmpsb
mov
cmp
push
fs
movsl
mov
pop
mov
dec
cmpsl
ja
sarw
out
xchg
mov
add
pop
mov
dec
mov
stc
xchg
dec
out
inc
rolb
cmp
bound
jp
out
fiadds
mov
sub
xor
enter
icebp
mov
idivb
aaa
push
push
inc
adc
mov
jae
jmp
out
jmp
sub
jbe
dec
out
pusha
dec
in
dec
sbb
in
and
push
test
lret
jge
inc
mov
outsl
mov
jbe
pop
js
add
loopne
jne
lock
loop
call
or
jo
ds
dec
dec
lds
jne
out
in
jo
pop
sbb
or
add
mov
xchg
bound
or
adc
jbe
in
test
inc
pop
dec
pop
pushf
jge
in
rep
scas
ss
popa
inc
in
pop
aam
ss
lods
aas
mov
jge
pop
dec
jno
xchg
push
fbstp
fiadds
loop
jle
adc
mov
xor
mov
xor
cmp
test
jb
add
mov
or
mov
into
jbe
fisttps
sub
in
sub
mov
xchg
cli
cs
lea
punpckhwd
cltd
test
inc
outsl
cmp
mov
decb
movsl
or
stc
cmp
cmc
arpl
rcrl
xchg
jb
xlat
insl
loope
repz
nop
mov
and
inc
fwait
push
neg
push
ds
mov
in
jb
ds
sti
mov
push
cmp
dec
adc
pop
scas
stc
lahf
push
test
jle
push
add
cmp
insb
out
mov
mov
inc
mov
cmp
mov
and
pop
mov
dec
rorb
jecxz
aas
jge
add
push
xor
clc
out
dec
adc
nop
imul
movsl
jg
mov
cmp
adc
jge
das
xchg
mov
add
add
dec
loop
jbe
sti
ficomps
scas
sbb
out
xor
pop
mov
jp
adcb
cld
fmull
testl
mov
xor
test
pop
test
std
iret
aam
lcall
lock
or
je
bound
sbb
mov
daa
push
xchg
sub
or
in
mov
cmp
addb
mov
outsl
fst
andl
insl
mov
inc
sub
cmpsl
add
arpl
aaa
inc
pop
push
hlt
xchg
xchg
in
out
inc
jae
xor
pop
mov
inc
and
out
shl
push
mov
and
out
add
out
call
push
lcall
fs
ficoms
andb
mov
xlat
insl
sub
push
and
or
jg
mov
adc
lods
bound
sub
es
mov
push
aam
and
fs
add
jmp
mov
daa
mov
mov
xchg
outsl
gs
insl
call
lds
lret
inc
pop
xchg
cld
adc
and
outsb
imul
inc
cli
cmp
jmp
xchg
sahf
and
pop
or
cmp
es
pop
jp
xchg
and
and
movsb
cmp
out
cmp
test
bound
mov
xchg
lahf
pop
xor
add
xor
push
add
jne
in
sets
in
add
mov
cli
jmp
push
xor
mov
jp
dec
xor
inc
mov
fdivl
mov
jb
add
pop
sbb
lods
fildll
add
xchg
stos
in
xor
jge
pop
mov
pop
out
cmp
mov
adc
jl
jle
scas
sarb
int3
mov
ds
add
sbb
mov
mov
ss
xchg
jl
xchg
inc
add
bound
xchg
jbe
cltd
adc
adcb
ret
mov
adc
pop
sbb
out
sbb
sub
jne
aad
lds
jle
add
adc
xchg
mov
cld
lock
jbe
push
rorl
sbbl
pop
mov
add
popf
mov
sti
mov
test
xchg
jmp
mov
mov
loopne
push
pop
popl
test
cmpsb
ficoms
inc
loope
push
add
jle
lods
aam
xor
inc
out
xchg
ljmp
cli
mov
xchg
aam
stc
rorb
push
dec
js
sahf
std
sti
push
add
mov
out
cmc
jne
cmp
push
jmp
out
inc
out
mov
jbe
jg
push
pop
jl
es
hlt
sub
xor
stc
mov
orl
decb
or
push
clc
jmp
push
add
mov
cs
lret
push
push
fldt
mov
xor
ljmp
xchg
jbe
and
add
or
int
mov
sbb
addr16
outsb
mov
xchg
pop
scas
xchg
mov
enter
movsl
sbb
mov
mov
loop
jecxz
ret
enter
std
dec
leave
mov
adc
mov
clc
and
jne
test
push
xchg
mov
dec
pop
lcall
pop
sbb
mov
jno
pop
cltd
int
das
pop
mov
sbb
mov
sub
sbb
sub
insb
shrb
add
adc
dec
cmp
in
lods
popa
rcrl
jmp
test
add
bound
outsl
popa
sti
sbb
ljmp
mov
cmp
inc
xchg
sarl
sbb
mov
cs
pusha
inc
arpl
dec
clc
out
dec
aas
add
mov
mov
aam
mov
nop
cmp
inc
xchg
pop
mov
rol
ss
shl
dec
fstps
push
fisubrl
mov
imul
addr16
ja,pn
sub
out
dec
outsl
test
outsb
inc
and
push
or
adc
or
out
std
inc
aaa
orl
sbb
mov
std
or
cmp
and
cmpb
adc
lods
xor
sti
cli
xor
cmp
or
js
adc
neg
jnp
cmpsl
lds
into
dec
xor
push
push
pusha
sub
push
in
scas
iret
xor
filds
daa
mov
sbb
xchg
xchg
dec
daa
inc
lea
add
loope
or
push
popf
hlt
pop
dec
in
in
je
mov
jle
xor
mov
xchg
notb
aas
lea
ljmp
xor
inc
jle
pop
bound
xor
pop
jecxz
imull
scas
xor
and
outsb
rcl
add
xchg
leave
xor
into
std
mov
pop
jbe
popf
jbe
loopne
and
jge
jmp
or
lret
gs
rolb
pushl
dec
and
out
loop
int3
or
push
xchg
jnp
add
test
mov
insb
mov
xor
cmc
popa
rorl
int3
in
cmp
imul
insl
jmp
or
mov
aaa
mov
push
lret
sti
jg
adc
test
xchg
fucomp
mov
pop
xchg
pushf
pop
scas
jl
inc
inc
xchg
les
add
inc
jge
mov
cmp
dec
xor
ret
mov
dec
js
mov
inc
aaa
insl
mov
mull
mov
cmc
aaa
mov
mov
add
adcb
and
adc
in
pop
cmp
push
int
imul
ss
cmp
pop
jno
rorl
mov
mov
pusha
mov
lcall
jl
rorl
inc
mov
test
jnp
xchg
bound
pop
cmp
push
mov
jmp
repnz
pop
xchg
mov
xchg
nop
insb
sub
es
push
aad
sub
pop
icebp
adc
insl
mov
ja
outsl
mov
in
in
ja
xor
jb
push
movsb
or
mov
test
mov
mov
in
and
add
out
rcrb
and
popf
lret
gs
js
cld
dec
movsb
sti
or
mov
sub
cld
inc
imul
and
mov
xchg
xchg
mov
cmp
lock
fnstcw
jbe
or
sahf
inc
xchg
clc
xor
loope
and
sbb
pop
out
mov
pop
mov
xchg
test
les
fidivs
jmp
cmp
adc
cmp
xchg
jmp
or
rcr
cmp
jg
mov
push
jmp
seta
xlat
xor
xchg
call
pop
xchg
cld
icebp
aas
out
dec
jp
cmpsl
mov
test
xor
ss
cmpsl
add
jno
hlt
jmp
xchg
int
ds
push
sub
sti
add
dec
iretw
jle
push
bound
mov
mov
jbe
fcomp
inc
ljmp
xchg
out
out
aas
shr
out
adc
ja
cmp
xchg
jae
mov
ret
enter
mov
int3
ja
xchg
daa
mov
mov
gs
in
jnp
mov
rolb
lea
movsb
and
cmp
test
pop
outsl
notl
jmp
xchg
repnz
dec
incb
mov
gs
test
xchg
repz
xor
dec
mov
xor
hlt
dec
aaa
jmp
adc
lock
js
inc
icebp
mov
dec
xchg
jl
ss
cmpsb
pop
sub
or
jb
pop
or
adc
dec
bnd
movsl
dec
pop
adc
pop
mov
sti
scas
adc
cwtl
idivb
pusha
jp
mov
mov
scas
sar
and
cmp
dec
and
shrb
adc
outsl
popf
mov
xor
inc
enter
jg
mov
sbb
add
arpl
cwtl
hlt
pusha
xchg
push
and
data16
jmp
pop
std
lea
sbb
adc
mov
inc
call
fadds
and
mov
mov
add
cmp
pop
push
and
jnp
jns
leave
in
sbb
addr16
cwtl
mov
imul
pop
and
aaa
cmp
xor
sub
pop
mov
add
jle
xor
lods
std
in
mov
jl
sbb
cmp
pushf
dec
push
insl
push
push
in
decb
and
push
inc
das
dec
sub
inc
icebp
add
out
lods
mov
jb
mov
push
add
ret
lods
lods
jecxz
inc
movsl
shrl
mov
negl
xchg
pop
fdiv
push
fcmove
scas
mov
jo
cmp
sub
sbb
jae
push
dec
pop
jg
add
outsb
push
jp
mov
imul
negl
in
sbb
dec
add
test
cld
sub
nop
mov
test
cld
into
cli
mov
lods
xor
dec
or
xor
and
jo
mov
mov
testb
adc
pop
hlt
mov
sbb
ss
jge
push
xchg
ja
je
rorl
pop
out
push
sub
mov
and
data16
sub
pop
fstl
out
dec
push
jmp
and
pop
pop
jp
cld
test
mov
dec
mov
mov
sub
enter
jmp
sub
in
pushf
dec
imul
pusha
test
cltd
pop
pop
dec
jae
je
adc
cmp
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
push
push
call
push
push
push
push
call
test
je
push
call
mov
call
mov
mov
cmp
jne
push
call
add
push
call
push
push
call
xor
pop
mov
pop
ret
nop
nop
sub
push
push
push
call
push
push
call
lea
push
call
call
push
push
push
call
cmpw
push
je
push
call
push
call
add
jmp
push
push
push
call
call
push
outsb
push
push
aam
imul
out
push
aam
insw
mov
mov
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
xchg
mov
clc
cld
xorl
inc
aad
dec
xor
and
movsb
sbb
or
pusha
xchg
sar
imul
lea
fwait
cmp
fsubs
fcoml
aam
insw
mov
ljmp
push
mov
sahf
mov
push
fwait
pop
pop
mov
sar
lock
pop
cmpxchg
add
adc
hlt
adc
cmpsb
or
xlat
push
fidivs
sahf
mov
and
lds
mov
addr16
stc
push
les
pop
pop
sub
insb
xor
fs
xchg
and
pusha
mov
insw
mov
clc
repnz
pop
mov
fs
pop
loop
mov
push
aam
lea
add
push
mov
mov
clc
repnz
or
ljmp
add
negl
jns
insl
mov
clc
repnz
or
push
push
aam
pushw
clc
repnz
or
push
xlat
fildll
imul
push
imul
pushf
or
inc
push
aam
insw
mov
clc
repnz
push
push
aam
insw
mov
clc
jbe
add
ds
aam
pop
mov
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
and
lods
sbb
fdivr
pushf
or
push
push
aam
bound
add
mov
insw
mov
clc
rcrb
sbb
mov
pop
aam
ss
mov
negb
imul
mov
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
clc
repnz
or
push
push
aam
insw
mov
push
clc
pushf
daa
push
inc
aam
dec
iret
insl
jo
or
mov
and
jbe
sbb
inc
mov
das
lcall
ret
dec
dec
adc
int3
push
rcr
jge
daa
jmp
mov
clc
scas
jmp
dec
aaa
mov
add
inc
adc
ret
pop
dec
xchg
adc
or
out
or
mov
shrb
xlat
dec
sbb
mov
mov
mov
popa
inc
fs
xchg
movb
aam
sub
cmp
shll
bound
mov
mov
out
xchg
cmp
pusha
sarl
jmp
cmp
xchg
mov
sbbb
sarl
shlb
add
out
out
sub
aas
and
mov
aam
pop
mov
dec
lahf
push
popf
add
shr
sub
cs
out
lahf
xchg
cld
cwtl
xchg
mov
or
dec
pop
push
or
orb
cld
fwait
sub
inc
les
jp
lods
mov
push
outsl
clc
fistpl
xor
rorb
lret
jns
add
in
mov
movsbl
popa
mov
sbbl
mov
lcall
push
mov
gs
icebp
movsb
lock
insl
daa
out
setbe
pop
jns
sub
jmp
sbb
and
and
add
ljmp
sbb
sbb
addl
into
mov
imul
lahf
mov
cld
dec
lock
jp
stos
inc
cmp
sbb
adc
jl
and
ret
fs
sbb
loop
mov
push
or
inc
push
imul
adc
fcompl
mov
sti
fstpt
in
aas
out
repz
push
shrl
int3
pop
imul
fld1
aam
pop
cwtl
jbe
insl
test
in
mov
push
xor
sbb
in
sbb
pop
dec
sbb
fdivrl
adc
nop
add
push
shlb
inc
lret
inc
mov
mov
pop
jge
add
sbbl
mov
inc
pop
jp
incl
xchg
into
add
inc
and
mov
add
or
stos
mov
cld
ja
mov
push
ljmp
xchg
loop
lods
xor
inc
sti
inc
inc
shlb
arpl
aad
loope
fwait
add
pop
popa
lret
mov
jge
pushf
ret
mov
mov
pop
dec
jbe
imul
fs
cmpsl
mov
mov
jns
xchg
jae
popf
repnz
jns
mov
pop
loopne
out
mov
push
inc
ret
ficomps
scas
push
jae
add
idivl
or
sbb
cmp
fcomps
fimuls
add
data16
and
or
mov
mov
cltd
into
sbb
mul
jo
mov
stc
jmp
push
pop
mov
ror
loope
cmp
shrl
push
jmp
jl
xlat
or
mov
aad
push
movsl
cltd
or
movsb
fcompl
mov
xor
mov
inc
adc
enter
sti
outsl
sub
aad
test
cmp
push
movsb
mov
lods
or
sbb
dec
cmp
test
inc
xlat
or
xchg
xchg
call
sbb
icebp
mull
xor
pushf
sub
movsb
sbb
scas
in
add
sti
add
sub
dec
jge
sub
test
cli
aas
mov
leave
mov
jg
test
and
adc
int3
repz
out
xor
sub
mov
in
shrb
pop
lret
and
out
movb
add
imul
movsl
lret
add
pop
icebp
add
addr16
mov
stc
fisttps
cmc
mov
adc
andb
add
in
mov
push
in
push
xor
jnp
outsl
mov
js
mov
cs
lods
fists
ljmp
adc
xor
call
xchg
lahf
pop
mov
mov
gs
inc
sbb
mov
imul
jp
out
inc
sbb
bound
lea
mov
sbb
inc
aas
loop
adc
sub
jge
into
scas
jle
mov
lret
and
jmp
outsb
mov
adc
insl
les
das
out
loop
push
aas
adc
rcrb
data16
dec
dec
push
test
pop
xor
push
int
icebp
leave
jbe
pop
push
ja
daa
out
cli
scas
cmpb
rorl
cmc
leave
mov
popf
xor
outsb
mov
push
and
mov
xchg
fidivrs
clc
insb
fcoms
pop
xor
shrb
jo
je
pop
inc
adc
inc
shlb
sbb
flds
lret
aam
stc
aam
jg
lods
loope
rorb
stos
lret
pop
aaa
in
adc
add
push
loop
or
int3
loope
xchg
or
les
dec
bound
fstpl
jecxz
ds
pop
mov
fsubs
cmp
addb
fmull
andb
dec
mov
data16
adc
sbb
xor
dec
xlat
aam
mov
mov
jmp
cmpsb
pop
cbtw
adc
sub
rcr
fisubrs
out
jbe
pop
out
popf
stos
push
pop
inc
rcrb
jmp
mov
out
andb
push
jbe
xchg
add
movl
inc
sti
mov
bound
inc
testb
pop
or
lcall
cmc
shl
push
nop
andb
stos
mov
lods
cmp
out
pop
sahf
xor
xor
call
clc
lahf
inc
xchg
mov
outsl
cs
jecxz,pt
mov
lcall
rcr
inc
mov
or
test
movsb
nop
pop
mov
or
push
adc
iret
push
movsl
lahf
inc
pusha
and
xorb
dec
dec
mov
sub
dec
mov
scas
mov
outsb
lret
enter
xlat
or
jb
loope
lahf
xor
dec
sahf
hlt
inc
movsl
push
addr16
xor
inc
mov
daa
add
in
fistpll
cmp
xchg
ss
negb
jl
jle
cwtl
push
repz
addb
fs
out
and
jno
addr16
or
pop
cmp
inc
or
pop
sub
jb
jg
add
scas
in
mov
xor
cmp
ss
and
ljmp
lea
mov
fs
lods
adc
cmp
in
pop
jecxz
sti
aad
inc
pop
mov
inc
cmpsl
lea
lcall
push
cmp
mov
jbe
imul
icebp
jne
pusha
shl
lahf
scas
fldcw
jecxz
es
pop
in
movsb
push
inc
xchg
cs
and
sti
and
cli
adc
xor
adc
jb
add
inc
mov
jl
xlat
subb
sub
push
cmp
mov
je
adc
nop
push
bound
pop
add
sub
jne
or
lret
sbb
xchg
cld
push
or
cmp
lea
aaa
lcall
adc
leave
pushf
js
adc
dec
or
comiss
jecxz
into
pushf
test
adc
stos
xor
loope
pop
dec
mov
testb
hlt
mov
loope
rcr
dec
or
nop
test
scas
push
xor
mov
pop
sbb
jno
adc
cmp
mov
bound
inc
int
mov
xchg
jp
jge
xchg
pusha
ja
in
or
jmp
mov
adc
test
lea
push
enter
arpl
inc
mov
and
or
jl
sti
sub
sti
mov
imul
sbb
jmp
sub
pop
add
add
and
cmpsb
jle
or
cs
mov
xor
incb
push
pushf
shrl
pop
mov
repnz
cmp
push
mov
fldl
mov
jno
mov
mov
pop
and
lea
jmp
jae
inc
leave
and
add
cmpsb
test
push
cli
jle
lcall
dec
sub
mov
gs
enter
gs
add
pop
clc
push
in
cmpsb
xchg
sbb
testb
pop
xchg
sbb
add
inc
inc
or
inc
loope
cltd
and
lret
inc
pushf
xorl
push
push
or
pop
std
pop
nop
in
mov
icebp
jbe
adc
nop
lret
mov
pusha
push
in
loopne
cmp
jns
cmp
sbb
mov
mov
std
sub
or
and
call
xor
adc
add
xchg
out
jno
dec
mov
pop
sub
add
cli
movsl
mov
es
xchg
push
mov
div
sbb
adc
fisttpl
mov
push
je
mov
add
dec
mov
mov
out
movsb
and
fmull
shll
ja
mov
add
hlt
push
cmp
insb
mov
ret
adc
or
arpl
lea
sti
jns
dec
lock
in
mov
inc
push
nop
adc
mov
push
sub
pop
push
lret
test
in
and
call
jae
daa
dec
and
mov
hlt
sub
jae
in
add
pop
mov
arpl
insb
movsl
mov
les
fs
aas
ret
ss
mov
iret
mov
movb
mov
aas
add
popa
sbb
or
dec
cmp
sub
inc
cltd
add
lods
aas
idivl
mov
aad
sbb
sub
push
push
jo
ss
cmpb
int
jae
outsl
pushf
in
fbld
cmpsb
pop
aas
adc
movsl
movsl
or
push
pop
pop
xchg
mov
call
divb
jae
jecxz
mov
and
repnz
aad
dec
jae
in
mov
pop
push
add
call
mov
sbbb
jp
inc
push
scas
jno
fsubl
xchg
adc
aam
cld
cmp
mov
test
xchg
and
dec
jmp
sub
cltd
xor
sbb
inc
adc
or
fcom
loopne
pop
sbb
imul
imul
das
pop
xor
and
inc
mov
outsb
mov
das
dec
pop
cli
cmpsb
cmp
in
push
sbb
in
mov
imull
lret
mov
mov
js
fldl
gs
aad
xchg
dec
inc
jae
push
mov
inc
leave
cmp
scas
mov
add
leave
or
lea
data16
jns
pop
push
xor
test
aad
les
or
cltd
jecxz
sbb
pop
add
daa
mov
sbb
data16
dec
cmpsb
sahf
mov
outsl
lret
gs
ficompl
fldenv
sub
sbb
jo
xor
insl
in
mov
mov
sub
or
or
test
pop
loopne
xor
mov
jle
inc
cmp
out
scas
lcall
push
repnz
jmp
cld
jl
insb
lods
dec
fs
insb
adc
cmp
pop
and
inc
pop
push
xor
sahf
mov
aam
push
push
les
or
xchg
ret
test
test
add
andb
rolb
sbb
push
enter
pop
mov
add
mov
xor
push
stos
enter
loop
daa
iret
add
je
loope
pop
cltd
jmp
xor
sbb
dec
pop
pop
les
cli
sbb
insl
xchg
sub
mov
insb
xor
bound
mov
int
cli
push
push
fdivs
mov
out
and
in
enter
aaa
mov
pop
test
mov
ljmp
push
fdivl
pop
xchg
inc
scas
sub
dec
nop
cmp
mov
ds
sub
inc
push
je
nop
mov
push
push
imul
frstor
push
cmc
xchg
mov
in
subl
out
mov
mov
shll
mov
fiaddl
arpl
iret
inc
mov
sbb
popa
adc
pop
movsl
push
ljmp
gs
test
push
repz
repnz
xchg
and
in
repnz
mov
lret
adc
or
shll
jbe
mov
sub
leave
imul
xchg
xor
mov
or
adc
movsb
outsl
jne
mov
int
stc
cmp
fcmovb
out
sbb
inc
and
in
jp
push
jb
les
sar
repnz
fsubl
jbe
imul
adc
mov
je
mov
fidivrl
sub
sbb
out
sti
mov
pushl
lock
adc
mov
jnp
fwait
and
adc
inc
push
mov
rcrb
lods
addl
in
jmp
imul
shl
scas
aad
movsl
mov
push
and
or
xchg
sbb
sarl
jmp
out
inc
mov
or
in
rorb
fwait
cmp
dec
scas
in
fdivl
push
rorb
xor
add
testb
ficompl
inc
adc
clc
repz
aaa
jmp
lds
sbb
ds
mov
xchg
or
mov
aad
jo
mov
ror
pop
mov
push
or
jmp
mov
adc
add
mov
pop
lret
leave
xchg
icebp
pushf
mov
shlb
inc
jno
bnd
jp
add
insb
and
lcall
or
add
push
mov
dec
loope
dec
xchg
push
add
mov
jae
xchg
dec
pusha
and
dec
lea
mov
push
into
int3
shrl
test
imul
mov
in
push
mov
rcll
repz
xor
xor
pusha
mov
add
das
das
xorb
or
dec
enter
shlb
jns
xchg
ljmp
adc
mov
xorb
cmc
rorb
xchg
mov
xchg
mov
sbb
xlat
addr16
int
sub
ret
pop
cmp
bound
fstpl
fidivs
inc
push
loope
filds
out
xor
andl
notl
add
xchg
push
cmp
push
push
call
push
push
call
xor
add
ret
nop
jmp
jmp
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
pusha
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
popa
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
popa
inc
add
popa
inc
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
bound
je
inc
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shlb
add
bound
hlt
bound
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addb
addb
addb
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
inc
add
addb
addb
addb
addb
addb
addb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
addl
addl
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
test
je
inc
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
