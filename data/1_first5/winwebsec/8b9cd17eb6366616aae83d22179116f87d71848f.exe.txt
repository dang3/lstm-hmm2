add
dec
pusha
enter
adc
jae
xchg
cmp
adc
dec
nop
cmpsl
cli
jae
outsl
lock
jg
sub
cmpsl
sbb
mov
mov
jge
ljmp
jmp
jmp
movswl
or
jle
imul
fwait
and
in
movsb
sub
sub
and
sub
sub
sbb
test
push
inc
jnp
or
inc
xor
rorl
jo
mov
mov
sub
cmpsb
inc
cmp
xchg
mov
mov
in
jne
dec
fs
out
and
mov
sbb
mov
lock
mov
xchg
sti
add
pop
jle
xor
lret
dec
mov
pop
ja
mov
and
lods
ss
and
out
mov
xchg
sbb
stos
dec
push
mov
sbb
push
shlb
mov
pop
jle
inc
sbb
or
pop
jle
dec
inc
inc
jnp
or
sub
repnz
data16
pop
jge
mov
pop
inc
adc
add
pop
jns
call
add
mov
shll
popa
sbb
pop
mov
pop
js
add
jle
movsl
add
ret
or
hlt
mov
repnz
mov
sbb
lock
mov
push
rcrl
pop
ljmp
pop
shrl
jae
add
sub
inc
push
xchg
jo
jns
lds
mov
mov
and
sbb
inc
jns
lds
mov
add
js
cmpb
jle
test
mov
inc
lcall
jle
dec
in
jge
leave
sbb
add
ffree
add
or
bound
mov
sub
je
push
jle
dec
mov
push
and
sbb
dec
popa
jb
xchg
push
jb
sbb
jle
dec
popa
jbe
xchg
jb
mov
jle
dec
popa
push
test
jp
jns
mov
push
mov
add
sahf
push
inc
push
jb
adc
jns
dec
mov
bound
call
mov
jle
mov
fcmovb
add
xor
scas
jmp
adc
add
xor
rsm
rolb
mov
repz
dec
pop
ja
mov
inc
lret
mov
call
xchg
or
xor
popa
dec
inc
cs
jns
xchg
out
dec
push
and
lods
call
push
mov
mov
in
inc
rcrl
test
inc
or
bound
cmp
jb
cmp
adc
jle
mov
jg
and
jle
xor
dec
movsl
jnp
or
pop
scas
stc
movsl
inc
jle
mov
jno
pop
stos
aam
mov
or
and
jle
stos
inc
mov
repz
pop
jns
fcoms
or
sbb
xchg
jb
xor
stc
adc
outsl
js
adcb
mov
outsb
push
loope
popa
ja
inc
adc
jecxz
inc
cmp
or
jge
mov
fwait
pop
loop
pushf
pop
out
and
mov
sbb
dec
popa
inc
in
out
or
xchg
ss
or
pop
jle
xor
in
jns
push
lds
pop
sub
dec
pop
jle
sahf
popf
add
movsl
sbb
mov
adc
or
mov
sbb
jle
movsl
call
add
clc
aas
inc
or
push
jle
mov
loopne
and
dec
loopne
and
sbb
sbb
popf
add
dec
mov
clc
jge
rorl
and
mov
lret
adc
or
or
pop
adc
sbb
or
xchg
clc
jge
dec
test
jle
mov
pop
loopne
and
pop
hlt
sbb
popf
add
lret
xchg
adc
adc
movsl
fwait
jl
mov
push
jle
inc
ljmp
push
sbb
jp
pop
hlt
jge
dec
test
jno
jnp
hlt
scas
int
pop
jle
leave
xor
add
sahf
sti
adc
xor
adcl
addb
dec
daa
sbb
pushf
jge
call
mov
mov
sbb
or
jno
jle
and
dec
pop
or
loope
sbb
ret
div
dec
inc
div
jb
jge
cmp
adc
inc
jnp
pop
rol
pop
jns
mov
pop
inc
add
js
std
repnz
xchg
sahf
hlt
cmc
ret
push
cmp
imul
cmc
mov
xor
fisubrs
sbb
xor
pop
inc
mov
movsb
jle
mov
xchg
jle
mov
jae
sti
mov
adc
xor
adc
cmp
jle
lret
repz
jge
lods
add
or
xor
sarl
fwait
dec
jnp
push
je
mov
and
lds
dec
lods
aaa
call
lret
push
mov
pop
pop
mov
pop
hlt
sbb
dec
mov
cmc
stos
mov
sbb
ret
fistl
xor
mov
push
pop
call
or
sahf
repz
cmpsb
fimuls
mov
pushf
inc
jnp
and
and
enter
lods
stos
lahf
in
sbbl
or
adc
and
mov
add
xchg
fimuls
mov
pop
jle
jp
call
or
jno
and
mov
or
sahf
decb
push
jnp
and
mov
mov
hlt
popa
fimull
add
or
push
pop
pop
or
arpl
je
aas
test
jle
mov
cmp
mov
and
mov
inc
jge
lods
add
or
mov
add
push
jp
xor
clc
push
incl
add
or
pop
lods
repnz
sbb
call
push
out
xor
out
in
das
addr16
and
mov
xor
sbb
insl
addb
jb
push
movsl
imul
popa
cmp
add
mov
lods
cmp
cs
push
pop
sbb
push
ret
mov
lahf
push
adcb
and
mov
mov
jb
cmp
jbe
call
or
add
fbld
or
sbb
sti
shl
push
push
adc
sub
adc
enter
pop
jle
popa
dec
xchg
loope
sbb
enter
arpl
inc
out
scas
or
fstps
std
push
push
mov
lret
or
xchg
out
cmp
js
clc
dec
js
stc
out
xlat
cmpsl
es
cs
sbb
leave
imul
cmpsb
pop
mov
rol
imul
jg
pusha
push
sub
xor
sbb
pop
push
insb
test
insb
in
mov
pop
pop
pop
push
gs
ds
mov
cli
jnp
sub
add
mov
into
jecxz
test
sbb
lahf
jle
and
outsb
add
and
std
fdivl
xchg
or
cmp
mov
mov
pusha
dec
out
adc
add
xchg
outsb
cmpsb
out
jle
aam
pop
lock
fisttps
inc
mov
inc
es
jbe
and
je
je
fs
int
stos
addr16
add
lods
out
push
mov
stos
pop
push
or
lods
adc
lcall
inc
push
sti
ret
jle
aas
test
test
adc
inc
xchg
pop
iret
sbb
mov
nop
push
or
jbe
xor
xchg
fisubrs
or
pushf
or
jbe
jle
xor
bound
cli
clc
or
repz
orl
mov
test
imul
inc
insb
aad
loopne
mov
xchg
aad
test
mov
iret
lret
or
pusha
cmp
jbe
mov
add
out
push
pop
into
dec
sbb
dec
in
cmp
sbb
pop
movsl
sub
dec
in
or
jle
jmp
scas
xchg
inc
repz
daa
push
leave
popa
pop
jle
incb
ljmp
pop
jl
fwait
mov
rcll
jle
cli
pop
mov
or
out
sarl
inc
pop
cmp
fbld
add
sbb
push
xor
xchg
dec
inc
xor
out
pop
pop
and
cmp
mov
outsb
add
ss
add
shrl
pop
jmp
pop
les
lret
jo
jp
fsubs
or
mov
fiaddl
mov
dec
xchg
lahf
add
sbb
xor
jle
sbb
add
imul
jmp
jle
jbe
insb
loop
scas
jmp
xor
leave
aad
inc
jg
lea
out
inc
sar
enter
lret
mov
stc
or
bnd
fldenv
sub
dec
or
sarb
pop
xchg
pop
sti
sub
push
adc
gs
mov
movsl
xchg
es
push
mov
push
jl
pop
ja
cmpsl
decb
xorb
add
jle
sbb
dec
fiadds
jl
int
mov
lds
rcrb
push
mov
fistpl
add
repnz
sahf
lock
clc
ret
movsb
in
cli
in
fsubs
data16
mov
push
hlt
or
mov
test
movsl
adc
bound
cwtl
inc
pop
mov
jle
fwait
mov
mov
cmp
dec
mov
mov
cmp
cs
in
cmp
xor
sti
lret
aas
ljmp
inc
int3
or
loope
xchg
add
dec
pop
mov
and
pusha
xor
js
cltd
sarb
xor
push
ret
mov
sbb
pop
cmp
pop
movsl
adc
loope
jns
out
cmp
or
or
test
jp
jne
and
out
ret
dec
and
sub
dec
rorl
ret
mov
cmp
out
xchg
icebp
setnp
in
outsb
mov
dec
xor
pop
push
adc
in
mov
jae
sbb
dec
test
sub
sub
jae
or
and
call
out
in
mov
jle
mov
bound
out
mov
cmp
jmp
loop
xchg
sbb
test
inc
cli
xlat
stos
push
ret
push
or
and
sti
dec
cmp
data16
js
push
and
or
inc
lcall
ds
ljmp
jb
movsl
jmp
add
clc
fmuls
cmpsb
in
mov
add
into
imul
sub
stc
in
into
dec
rolb
negb
xor
pop
jo
or
and
push
push
mov
mov
jnp
lock
andb
fmull
das
or
out
testl
xor
add
mov
clc
adc
mov
xorl
mov
incb
push
aas
test
ret
in
sub
je
fidivrs
push
sbb
lods
push
adc
xor
mov
aas
popl
les
inc
pop
testb
push
xor
test
leave
push
inc
push
or
inc
test
mov
mov
xchg
movsl
jno
outsb
sub
std
movsl
push
pop
call
jmp
iret
bsr
imul
cmp
scas
sbb
ljmp
jle
jg
and
mov
pop
int3
push
stc
mov
cmp
xlat
call
loopne
cmp
adc
cli
dec
scas
sbb
xchg
fcoml
cmp
mov
or
cwtl
cmp
jge
shrb
inc
cs
and
pop
fiadds
sub
imul
ss
inc
test
lods
pushf
xchg
adc
in
pop
jo
mov
jle
xchg
dec
dec
push
xor
mov
cmpsb
or
jnp
out
clc
hlt
xchg
mov
lds
ds
leave
stos
push
xlat
dec
pop
push
aad
and
sbb
cmp
sbb
or
jg
daa
out
test
jg
push
jl
ret
and
cwtl
xchg
or
jns
mov
in
int3
ficoms
ret
cwtl
fs
jae
jmp
jnp
addr16
cmpsl
push
stos
and
fists
sub
mov
out
stos
sbb
mov
loop
xor
lret
push
xor
js
push
bound
mov
mov
mov
aas
fs
pop
inc
jle
mov
sbb
push
mov
push
test
dec
ret
cmpsl
pop
cmp
sub
sbb
and
push
fisttpl
mov
shrb
sbb
imul
repnz
inc
pushf
jbe
jae
mov
sbb
cmp
rorb
sub
int3
orb
inc
mov
subl
dec
adc
call
test
jb
cmc
add
lods
adc
repz
and
dec
xor
icebp
or
ss
fwait
cwtl
in
lock
cmc
lret
mov
mov
add
outsb
adc
cmp
fmul
jbe
pop
mov
cld
xchg
push
scas
frstor
xchg
nop
out
xor
jge
stos
pop
add
into
jne
add
push
xchg
mov
aas
mul
stc
pop
std
dec
adc
ja
sti
jns
pop
sahf
add
xor
fnstcw
fdivs
scas
push
fucomip
jno
in
xor
mov
fwait
stos
enter
lods
pop
jno
gs
inc
loope
out
adc
cmp
push
rol
jp
xchg
xchg
lmsw
aam
sub
out
jne
repnz
mov
cltd
loope
outsb
cmp
mov
in
in
cmp
push
dec
mov
rcrl
xchg
out
ss
and
or
and
dec
jp
nop
jne
push
movsb
or
mov
or
fnstcw
push
adc
pop
pop
adc
nop
xchg
sbb
cmp
jle
inc
pop
mov
jl
add
pop
xor
and
sbb
or
mov
cmpl
mov
jnp
jmp
mov
stos
pop
sbb
stos
xor
mov
je
pop
mov
jle
sbb
ret
fisttps
mov
lcall
xchg
scas
dec
xchg
inc
fiaddl
jl
aad
stos
add
push
mov
xchg
loope
sbb
push
shlb
jp
dec
and
dec
lahf
cs
aas
jb
js
mov
xchg
mov
mov
mov
dec
clc
das
fcomi
shlb
dec
insl
cmp
test
push
stos
add
lahf
movsl
pop
or
dec
fstp
ret
jnp
cmpsb
scas
or
jge
pop
out
push
push
imul
test
mov
sub
ret
dec
mov
xchg
pop
sbb
cmpsb
fdivrs
or
in
addr16
mov
push
out
cwtl
aas
adc
std
int3
fst
fcoml
std
das
into
add
mov
fisttps
sti
mov
stos
or
pop
cwtl
test
xchg
loopne
sarl
shr
or
dec
cmc
mov
pop
or
or
jecxz
mov
push
pop
cmpsb
mov
jb
push
sbb
xchg
push
insb
pop
push
hlt
lahf
call
mov
push
dec
sbb
enter
push
inc
or
mov
dec
or
and
pop
scas
sub
or
sti
hlt
xchg
mov
push
mov
cmp
outsb
inc
sbb
push
popa
test
cwtl
jbe
stos
push
mov
fnstenv
or
jg
xlat
fsubl
lret
mov
jne
jae
or
push
sbb
mov
dec
popf
cmc
les
outsl
lods
or
mov
push
lods
and
add
inc
movsl
xchg
xchg
inc
push
push
xchg
and
ljmp
pop
jne
sbb
lahf
iret
ret
mov
js
clc
aas
or
pop
jne
adc
push
mov
pop
or
rcl
aad
add
jle
rolb
sub
lock
cld
or
hlt
lret
fadd
dec
add
push
ret
js
sbb
xchg
xor
mov
jmp
imul
pop
clc
lret
and
stc
test
test
ret
add
adc
cmp
xor
dec
dec
push
outsl
inc
or
int
scas
xor
xor
clc
daa
sub
or
and
dec
mov
and
adc
mov
inc
dec
push
pop
mov
push
test
loope
xor
mov
aad
mov
aam
pop
fsubs
pop
sar
movsb
mov
test
push
das
insb
jle
sub
cmp
mov
or
scas
outsl
push
mov
sarb
inc
mov
dec
clc
divl
sub
cmp
icebp
mov
pop
dec
sbb
xor
pop
aam
adc
incb
aad
cmp
in
jbe
xor
or
xchg
clc
mov
or
enter
sbb
out
iret
insl
mov
inc
jne
rcrb
inc
cmp
ret
dec
loopne
sub
or
mov
xchg
sub
jbe
mov
aaa
mov
push
push
jle
add
jl
xchg
sbb
cwtl
pop
imul
adc
adc
mov
sbb
push
mov
subb
add
lds
mov
nop
dec
pop
movsl
sbb
int
push
xchg
jecxz
pusha
mov
sub
lods
insb
or
leave
mov
pop
and
jo
subl
mov
clc
cmp
scas
push
lea
in
mov
jle
rol
or
add
mov
mov
adc
jge
hlt
add
mov
cmpsl
test
mov
or
mov
test
adc
inc
std
mov
adc
sbb
xchg
mov
aam
ds
mov
mov
loope
shlb
mov
adc
gs
push
je
adc
mov
std
inc
pop
int
or
dec
pop
sub
daa
aaa
popa
sub
xor
mov
stos
mov
jle
dec
int3
aas
xchg
jbe
or
fistl
mov
stos
js
adc
xchg
sub
xor
sbb
cmpsb
out
aad
jb
pop
push
jecxz
std
push
pop
bound
or
outsl
rol
dec
add
dec
fildl
cmp
in
jb
xor
lods
push
add
pusha
popf
cmp
loop
sti
adc
pop
adc
jns
fnsave
add
popa
or
xor
lcall
add
sarb
add
mov
jo
negb
adc
cmp
jne
xor
dec
cld
sbb
xchg
sbb
and
pop
adc
into
mov
insl
test
pop
cld
in
mov
cltd
mov
cmp
ljmp
add
pop
rcrl
out
jmp
jle
loope
jecxz
dec
ja
or
aam
lahf
pop
pop
pop
push
cmp
lods
push
repz
cmp
aam
aas
sbb
lahf
sub
xchg
shl
cmpsl
out
push
inc
imul
jp
cmp
gs
cmp
sbb
and
das
mov
or
cmp
sbb
fcmovb
ret
ja
out
cmpl
cmp
mov
gs
sbb
or
out
xchg
jmp
test
sub
dec
gs
imul
mov
ljmp
pop
adc
out
jge
sub
sahf
incb
xlat
ja
cmp
mov
jg
outsl
dec
cmc
in
fadds
jecxz
xor
jo
mov
push
rclb
sbb
push
xchg
cld
imul
stos
xlat
xchg
add
jnp
xchg
push
ja
mov
pushf
or
hlt
ss
cmpsb
pop
lods
nop
fsubrs
fwait
test
gs
out
mov
and
fsubrl
leave
jbe
push
xor
adc
test
push
fbld
dec
push
repnz
leave
inc
jns
scas
mov
jecxz
call
jns
cmp
xchg
loope
pop
push
mov
mov
in
stc
jl
sub
sub
push
xchg
or
xchg
scas
in
mov
ja
in
lock
push
mov
popa
push
dec
adc
push
aam
sbb
in
pusha
stc
mov
aam
dec
xchg
push
adc
xchg
loopne
rorl
in
ljmp
lea
dec
sub
rcl
jbe
jle
out
pop
ret
jl
imul
sti
xor
arpl
sbbb
push
mov
subb
push
mov
add
ret
jmp
xor
add
icebp
int
hlt
mov
fidivrs
repz
int3
inc
sbb
add
jp
mov
cs
loop
jmp
fmull
je
int3
jmp
aas
pop
add
lods
push
mov
cmp
lods
and
sub
mov
add
sbb
mov
inc
movsl
jle
xchg
mov
rol
mov
inc
xchg
sbb
xorl
push
pop
mov
or
mov
dec
pop
xchg
inc
clc
decl
into
jb
div
int3
lcall
pop
push
push
mov
xor
add
mov
cmpsb
nop
dec
iret
ret
ja
rcrb
addr16
mov
dec
loopne
outsl
push
or
cmpsl
mov
ljmp
mov
xor
gs
jbe
in
pop
fadds
or
mov
jne
inc
pop
aad
jns
sbb
add
test
or
dec
pop
popa
push
xchg
xlat
or
push
sbb
pop
push
div
adc
cld
lea
fdiv
hlt
xor
out
push
sbb
pop
in
cmp
adc
jbe
das
jmp
add
pop
or
fidivl
roll
pop
push
outsb
dec
data16
cmp
jne
xor
jge
xchg
test
dec
jnp
in
ss
stos
inc
jl
xor
jbe
push
mov
testl
mov
mov
lods
jge
dec
in
mov
lret
mov
daa
scas
mov
mulps
add
sbb
sub
cmp
int3
or
pop
xchg
scas
mov
lahf
sbb
js
dec
xchg
out
inc
jb
sbb
push
sbb
shr
jp
sbb
rcrb
in
ss
pop
popf
insl
jecxz
outsl
mov
test
add
pop
ss
jo
std
test
mov
mov
push
sahf
mov
cmp
pushf
dec
mov
mov
mov
xorl
push
inc
mov
cmp
dec
loope
rcrb
into
je
push
xor
push
rcrb
dec
hlt
jbe
mov
andb
pop
jb
dec
pop
cmp
jle
sub
cmp
loope
stos
sahf
icebp
sarl
mov
xor
jae
jg
ret
pushf
out
sbb
push
add
nop
mov
pop
stc
mov
das
loope
mov
or
adc
popf
adc
push
sbb
lahf
jns
cmp
mov
imul
lods
mov
sub
mov
arpl
inc
pusha
push
push
cwtl
mov
mov
stc
xchg
sub
bound
adc
mov
sbb
lcall
push
mov
sub
inc
sahf
clc
arpl
add
sbb
in
mov
jb
or
xor
and
mov
dec
pop
mov
and
clc
ror
push
dec
xchg
stc
xor
mov
test
jbe
mov
xchg
push
repnz
shlb
loopne
insb
ret
das
fnsave
add
jmp
imul
pop
dec
rorl
add
fcompl
inc
ja
sbb
xor
mov
xor
and
popf
and
or
and
test
cmp
jo
pop
adc
dec
mov
sbb
or
xchg
lds
mov
stos
pop
push
or
dec
imul
shrl
mov
or
or
test
mov
mov
mov
adc
pop
aad
mov
adc
in
jl
int3
sbb
mov
std
mov
test
mov
push
int
imul
dec
orb
insb
xchg
mov
dec
sbbb
sahf
aas
push
xor
mov
lcall
sbb
repnz
je
movsb
imul
jmp
imul
or
addr16
mov
ficomps
jnp
gs
movsb
push
nop
js
jno
pop
and
mov
or
and
cmpl
fstps
pop
insl
mov
outsl
mov
push
pop
xchg
xor
movsb
testl
pop
xchg
repz
lods
add
mov
jbe
cwtl
jne
mov
pushl
mov
cmpsb
xor
mov
lret
loopne
loope
xchg
jne
cmpb
das
push
sti
or
mov
lcall
test
mov
ja
ss
xchg
loope
inc
gs
call
dec
jle
lock
rcl
sub
adc
pop
in
nop
jo
pop
mov
ret
in
mov
mov
ja
or
lods
pop
cmpl
adcb
inc
sbb
jmp
jne
push
inc
mov
jge
and
aas
add
insl
xchg
inc
jle
ss
pop
sbb
fst
inc
push
jle
ret
roll
ss
mov
ret
jbe
in
sub
jl
xor
aad
ss
jle
push
fs
jp
orl
imull
pop
inc
mov
inc
je
lea
sub
inc
shlb
leave
or
push
push
ret
push
shlb
xchg
xor
jle
dec
jg
cli
jbe
es
sbb
movsl
add
fdivrs
dec
js
xor
jbe
ljmp
adc
movsl
push
aam
mov
insb
add
nop
sub
cmpsl
dec
lahf
xor
jg
sub
jle
push
cmp
out
mov
fsts
rorl
test
cmp
sbb
test
out
pop
out
sub
push
inc
pop
psubw
fs
or
inc
imul
aaa
cmpsl
shlb
into
xlat
xchg
xchg
dec
data16
ror
lods
jle
repnz
shrl
xchg
inc
out
mov
jns
popf
jecxz
test
sahf
data16
rcr
sub
pop
or
push
mov
rclb
pop
das
rcrb
mov
inc
push
fcompl
mov
jl
add
loop
mov
inc
jle
orl
loope
bound
ret
pop
ret
jno
pop
sbb
adc
add
xchg
or
mov
push
test
in
out
ret
neg
data16
adc
sti
imul
rcrl
lahf
jle
jmp
data16
shr
jb
pop
add
xchg
jl
mov
push
push
jnp
sbb
cmp
sahf
inc
sub
orb
notl
sbb
pop
cmp
push
mov
dec
add
xchg
or
in
sub
add
je
pusha
sub
sbb
pusha
mov
cmpb
jle
pop
add
mov
sub
mov
jecxz
rcl
jp
mov
mov
mov
cmpsl
cmp
jne
data16
scas
or
pop
cmpsb
cmc
cmp
out
dec
pop
jle
xor
cs
cmc
adc
lock
int
xlat
mov
and
lock
cmp
add
fisttps
sbbb
sbbb
pop
push
jmp
scas
aaa
and
adc
mov
or
repz
out
out
loope
mov
sahf
enter
mov
xchg
add
xchg
pushf
dec
addr16
sarb
mov
xor
pop
jle
cmp
push
lret
or
dec
add
pop
mov
pop
sub
out
negb
xchg
loopne
mov
lock
mov
mov
add
popf
mov
lret
xchg
in
cli
cmpsb
neg
lock
test
push
mov
dec
in
sti
mov
pop
mov
ret
inc
fnstcw
fbld
andl
pop
dec
xchg
cmpsl
jl
lods
das
movsb
stos
xor
inc
cli
std
test
movsl
in
outsl
xchg
test
scas
push
pop
cmp
cmp
call
or
jge
cmp
mov
iret
pop
icebp
cmp
inc
out
sub
xchg
rcl
aad
loopne
pop
fidivl
ja
call
loopne
fmuls
pusha
add
pop
mov
cwtl
cmp
fs
jbe
mov
xchg
les
iret
jbe
int
lret
mov
loope
sahf
mov
sbb
jecxz
mov
mov
repz
cwtl
jp
test
push
movsl
lahf
arpl
dec
sub
mov
popa
cmp
in
stc
scas
repnz
xor
jns
orb
test
add
mov
pop
jb
js
xor
adc
sti
cs
sbb
int
das
sarl
ret
cmp
popa
cld
xchg
mov
dec
dec
push
sub
mov
xchg
das
sbb
imul
jle
fdivr
or
dec
adc
or
push
mov
sub
cmp
test
stc
cmpsb
in
std
or
or
movsb
jo
add
jae
mov
out
fmuls
loop
mov
scas
es
outsl
jle
arpl
inc
lret
fs
push
mov
test
sub
cmpb
mov
fimull
es
push
xchg
ljmp
sbbl
or
test
lret
lods
mov
int3
repnz
mov
push
inc
sbb
pop
fwait
test
pop
jg
pop
data16
inc
je
push
movsl
leave
or
dec
sub
mov
sub
mov
jns
call
add
jae
mov
shlb
dec
je
xchg
add
jo
add
clc
cltd
pop
push
xchg
sub
jle
sbb
ds
lret
and
call
fidivs
xor
mov
repz
jb
dec
mov
xlat
js,pt
pop
mov
or
lret
insb
mov
incb
aaa
jl
push
inc
pop
ljmp
lds
sbb
sbb
cmpsb
in
cmpsb
xor
cmp
ja
jae
jae
mov
mov
sbb
cmp
cmp
xchg
out
jo
loop
push
or
stos
inc
aas
clc
mov
and
jg
loope
jns
jmp
mov
shrl
fldcw
push
fcomps
lea
test
and
mov
and
cwtl
jge
idiv
mov
xchg
lods
xchg
in
jbe
inc
out
das
imul
push
dec
push
dec
fcomp
cmpb
mov
lahf
cmp
jle
or
std
or
cld
or
out
stos
sbb
insl
je
into
clc
out
sub
push
fs
test
cmc
mov
xchg
pop
arpl
idiv
push
decl
mov
lods
int3
cmp
cmp
cltd
mov
test
jns
cs
scas
push
out
pop
stc
pop
xor
jns
add
add
negl
and
std
jl
pop
fnstenv
cmp
xchg
aam
rorb
loop
jmp
xor
add
out
insl
cmp
loope
ss
mov
in
mov
mov
inc
loop
das
push
xchg
mov
add
jbe
pop
sbb
call
lods
xorb
mov
jge
pop
sbb
jg
test
out
push
fwait
and
mov
mov
daa
push
xor
add
and
dec
adc
sarl
dec
xor
shll
adc
mov
aad
insb
outsb
test
lods
jle
lock
rorb
insl
or
mov
nop
imul
adc
push
scas
mov
fdivrs
add
ja
call
out
shlb
add
fdivl
rcl
or
gs
repz
xor
jbe,pt
and
shrb
jbe
or
dec
push
mov
mov
sarb
sbb
cmp
outsb
adc
mov
popa
mov
insl
mov
xor
negl
jb
ss
cli
mov
out
mov
inc
xor
dec
pop
mov
scas
stc
sub
push
mov
out
out
cmp
lds
into
xor
mov
xor
fwait
push
icebp
pop
dec
dec
sbb
outsl
xchg
xor
mov
mov
je
pop
or
sub
cmp
in
lret
testb
test
rol
inc
push
xchg
dec
aaa
pop
addr16
daa
fidivs
enter
dec
loopne
gs
cmpsb
cmp
mov
lret
notl
add
dec
fildll
lcall
int
ljmp
adc
mov
sbb
loopne
arpl
inc
ja
add
dec
aas
popa
sub
sbb
mov
mov
repz
sub
popf
or
stos
lret
push
das
pop
xor
mov
jge
cld
outsb
pop
pusha
push
adc
loope
push
cmp
inc
mov
stc
jb
call
out
ds
arpl
pusha
call
shrb
mov
mov
add
fucom
fcoml
sub
pop
dec
mov
mov
cmp
xlat
or
mov
push
pop
and
sti
mov
subb
xor
dec
jecxz
mov
pop
adc
mov
mov
lock
jbe
aam
push
andl
and
mov
dec
add
ficoml
and
mov
sbb
inc
or
or
negb
movsb
mov
mov
shrb
cmc
push
cmp
popf
test
fucomp
xor
nop
xchg
cwtl
adc
mov
cmp
xchg
xor
dec
scas
addb
pusha
inc
sub
jo
xor
in
pop
mov
mov
jp
scas
mov
test
or
adc
imul
test
push
shlb
insl
push
repnz
dec
lock
shll
fisubs
sbb
aas
jl
jbe
mov
dec
test
std
mov
pop
pop
repnz
out
jle
lock
mov
negb
cld
imul
repz
add
mov
outsl
inc
sti
loopne
cmp
mov
sbb
mov
push
icebp
imul
sbb
jo
aam
test
leave
xor
mov
pop
test
std
pop
mov
aas
dec
lods
jmp
sbb
orl
dec
nop
daa
push
fisubrl
fcoms
fisttpl
fnstsw
push
mov
pop
xchg
aam
aas
outsb
cmpsb
cwtl
jmp
cmp
push
loope
test
mov
adc
dec
and
shrb
ret
repz
scas
ret
fcoml
bound
imul
movsl
rolb
fcomip
xor
out
test
sub
mov
sti
sbb
sahf
je
ja,pt
pop
pop
xchg
lret
aaa
inc
ret
popa
fisttps
loopne
shlb
cmpsb
aaa
sahf
test
mov
push
pop
mov
cmpb
mov
cmpsl
mov
jmp
lret
mov
sbb
ds
xor
ss
outsl
mov
addl
cli
dec
sahf
cmpsb
or
ljmp
add
aad
cli
daa
mov
jg
dec
push
sbb
cmp
in
dec
xor
mov
cmpsl
dec
sbb
rorl
xchg
pop
mov
push
dec
add
push
ficoml
stc
loope
mov
and
dec
call
sub
into
pop
mov
jbe
fdivr
fwait
xlat
xchg
pop
or
arpl
mov
inc
subb
sbb
cmp
int
jo
stos
jle
out
xchg
cs
test
or
lods
mov
adc
and
test
push
out
test
lcall
mov
push
loopne
fcom
pushf
push
mov
out
or
orb
push
cmp
sub
inc
and
negb
inc
popa
dec
jle
repnz
mov
jns
mov
pop
imul
clc
mov
out
pop
stos
jns
mov
inc
xor
repnz
cmpxchg
add
sub
pushf
mov
imul
sahf
test
xchg
mov
sub
dec
sbb
mov
mov
dec
sarl
xchg
ret
or
push
lods
push
fnsave
cld
or
dec
call
cmc
rcrl
push
sarl
or
in
or
and
mov
jmp
adc
push
mov
out
fs
mov
push
pop
sbb
jns
sbb
mov
mov
or
lods
cmp
or
dec
clc
pushf
sub
fdivrp
loop
xorl
cld
push
sub
js
lods
insl
lcall
mov
cmp
mov
icebp
mov
insl
stc
in
xor
push
push
inc
mov
inc
push
aad
sbb
daa
ds
jno
aam
out
adc
pusha
dec
xchg
cmp
cmp
les
jge
popf
loopne
and
test
ja
out
and
push
xor
stos
pop
pop
adc
aaa
movsl
js
sbb
or
incb
sub
adc
stos
gs
xor
orb
cmp
mov
arpl
ja
cld
mov
sbb
lcall
inc
mov
clc
cmp
xor
xor
cmp
iret
push
subl
cs
jb
movsb
int3
pop
pop
mov
xchg
adcl
sub
enter
jnp
sarl
std
push
ljmp
add
or
lret
shlb
lock
js
sub
sbb
and
pop
cld
in
ja
inc
ror
out
shrb
andb
scas
mov
aaa
jne
adc
clc
or
jmp
jnp
or
add
jecxz
enter
sbb
mov
clc
orl
es
ds
dec
or
mov
aad
or
mov
xchg
push
push
testl
xlat
enter
jo
shrb
sub
mov
fmuls
movsl
fsubl
and
push
in
mov
inc
mov
xor
mov
es
cmpsl
pop
jecxz
xchg
jp
enter
sbb
shlb
pop
aas
add
ficompl
cmpl
in
inc
xchg
imul
ret
pop
imul
insl
adc
fdivrp
jp
sub
mov
push
shll
push
mov
dec
mov
inc
out
sbb
mov
push
sbb
nop
pop
in
lahf
adc
push
pop
dec
push
imul
add
add
std
dec
nop
data16
add
arpl
stos
mov
xor
inc
es
mov
fdivrl
rol
das
pop
jle
add
jmp
xor
cmp
mov
push
push
adc
ljmp
mov
test
sub
imulb
jp
inc
stos
pop
cld
outsl
sbb
mov
pop
inc
aaa
jecxz
mov
shrb
insb
sbb
xor
dec
and
xor
stos
rclb
rcrb
xor
aad
and
nop
in
jae
inc
add
int
push
testb
sbb
or
jg
repnz
movsl
rolb
pop
scas
pop
jle
or
inc
stos
adc
xor
mov
stc
in
inc
negl
shr
adc
dec
call
cmp
inc
loopne
inc
mov
sub
test
cld
xchg
aad
test
hlt
xchg
pop
sub
xor
jns
or
inc
add
mov
adc
jge
jle
sub
cmp
and
mov
popf
cs
cmpsl
xorb
inc
mov
bound
push
insl
inc
gs
addl
jbe
aas
add
pop
int3
or
xor
jns,pt
push
lret
divb
pop
lcall
ss
lods
add
imul
sub
cltd
mov
sar
nop
push
jle
push
lea
lret
cmp
jbe
and
out
xchg
mov
lcall
mov
insl
aas
adc
cmpsb
fisttps
lret
test
stos
mov
adc
adcb
shll
mov
mov
test
sbb
es
out
xchg
jle
cmpsl
push
mov
or
jmp
mov
pop
add
sbb
and
adc
dec
std
and
mul
dec
mov
pop
cmp
int
push
dec
mov
or
movsl
push
mov
sbb
adc
xor
je
adc
add
pop
jno
or
insl
pop
jp
sbb
or
xor
loopne
sub
mov
adc
adc
into
leave
daa
adc
xor
jle
jns
and
sbb
fs
stc
dec
je
or
add
sub
addr16
lret
icebp
mov
sub
negl
jmp
cmp
fimuls
out
pop
fistps
xchg
popa
sahf
mov
testl
xor
add
mov
test
out
cmp
add
add
adc
rolb
lret
out
lods
xor
push
fs
popf
add
sub
mov
pop
lods
fnstenv
enter
fs
insl
pop
movsl
sbb
out
adc
les
jbe
or
cmp
pop
std
xchg
dec
mov
push
xor
mov
cli
lds
movsl
xchg
cs
xchg
outsl
mov
add
pop
rorl
sbb
fsubrl
push
out
cs
or
or
cmc
mov
cltd
add
and
jge
lcall
aam
scas
loopne
sarl
jns
jbe
adc
cmpl
pop
or
arpl
jo
or
lds
xchg
dec
cmpsl
test
jb
out
sbb
fdivrp
out
enter
shll
dec
jle
adc
lahf
push
iret
mov
pop
dec
inc
cmp
cli
xor
push
or
and
scas
popf
lods
cltd
sbb
call
and
dec
adc
adc
xor
int
enter
inc
add
sbb
es
add
mov
and
pop
dec
and
sub
dec
pusha
bound
mov
add
push
call
jle
push
nop
pusha
mov
or
stos
idivb
xor
pop
cmp
outsl
fstpl
sub
xchg
xchg
and
xchg
adc
pop
into
jae
sti
jns
xchg
and
pop
mov
loope
out
addr16
jae
sub
outsl
mov
pop
addr16
flds
or
lods
lods
push
lret
mov
push
or
sbb
out
mov
or
xor
pop
aam
insb
push
push
push
xchg
repnz
mov
xchg
mov
in
lret
js
mov
sbb
jg
xor
inc
gs
sbb
mov
imul
outsl
jge
jmp
and
jo
aas
adc
cli
cmp
int
lret
or
push
mov
rolb
jmp
sbb
xchg
push
mov
add
adc
aaa
clc
xchg
lcall
or
sbb
nop
xor
mov
and
dec
arpl
mov
jns
sbb
lret
roll
xchg
dec
xchg
or
xchg
clc
dec
lret
in
std
fwait
sub
sbb
bound
cmp
mov
and
mov
popf
fld
cli
pop
sbb
or
int3
jbe
add
mov
les
pop
jl
or
sub
shll
mov
xchg
add
sbb
jbe
inc
repnz
adc
push
loope
cmpsl
dec
add
sub
jbe
mov
int3
xrelease
sbb
cltd
lea
aam
rcr
out
int3
cmc
in
add
shl
jbe
push
lea
push
or
cmp
outsb
pop
pop
rorl
jo
pop
cmp
cltd
insl
push
and
cli
out
pushf
test
test
jg
in
mov
xlat
imul
mov
adc
jb
lea
sbb
aad
int3
adc
jmp
movsb
test
jbe
and
iret
jbe
or
fdivl
and
js
sub
das
pop
cmp
dec
dec
outsb
aas
cmp
repnz
or
pusha
pop
jns
sbb
adcb
push
das
test
xor
cmc
ret
fcoml
xchg
pop
and
xor
adc
out
mov
ljmp
dec
ss
ja
in
dec
or
test
cltd
adc
inc
cld
out
lret
sarb
mov
imul
std
pop
pushf
cmp
std
dec
js
dec
daa
jmp
ds
mov
and
fs
dec
ss
daa
or
dec
jle
repz
xchg
pushf
mov
ret
ljmp
sbbb
cmpsb
lahf
jne
or
and
je
lock
out
std
jns
test
lds
mov
icebp
inc
int3
pop
fildll
pop
clc
hlt
jmp
sub
repnz
push
push
push
sahf
cltd
test
ss
xchg
dec
xchg
pop
repnz
jbe
cltd
in
pop
or
loope
sbb
adcb
scas
or
or
sbb
jl
mov
adc
cltd
popa
push
or
and
jns
adc
xor
ja
lahf
in
mov
push
ljmp
jbe
cmpsl
jo
lea
test
loope
push
add
sbb
inc
fwait
inc
or
sahf
insb
jp
sahf
cmp
mov
push
sub
outsb
mov
lds
or
es
popa
jo
mov
lcall
dec
clc
pop
fnstenv
aaa
cmp
in
jns
data16
add
inc
cwtl
fadds
mov
adc
sbb
jns
mov
sbb
cmpsl
test
push
ret
cmpsb
lds
stos
xlat
jmp
push
sar
pop
cs
dec
xlat
push
sub
daa
lahf
les
mov
loope
or
and
js
insl
jecxz
xor
movsb
or
push
xchg
ds
das
mov
sub
ljmp
pop
pop
pop
xchg
ds
sub
mov
add
push
pop
jp
jle
outsb
jns
ds
jbe
or
in
or
mov
std
dec
int
push
ret
jle
mov
push
mov
call
ficompl
stos
dec
pop
cmp
push
or
sub
shlb
sbb
inc
outsb
sub
in
cmp
lds
int3
inc
add
pop
je
or
xor
rcr
sbb
rolb
xchg
scas
ss
lods
mov
icebp
fldl
jle
push
add
ret
mov
addr16
popa
xchg
jno
test
fcmove
cli
out
mov
loope
mov
jle
sbb
ljmp
in
add
and
adc
shl
stc
fisubrl
les
mov
jecxz
lret
lcall
lea
bound
pop
mov
das
push
cmp
mov
cmp
or
sub
mov
popf
les
movsl
xchg
or
mov
out
je
mov
mov
addl
push
pop
imul
jle
push
sbb
inc
fcoml
sahf
cli
cmpsb
popa
mov
mov
cmpsl
in
or
outsl
jle
cmp
add
or
adc
mov
iret
out
or
lea
dec
adc
dec
clc
dec
aas
cmp
mov
add
lods
or
cmp
push
xchg
or
cmp
pop
loope
stc
lock
xlat
repnz
frndint
push
iret
fstl
sbb
sub
jecxz
xchg
ja
adcl
mov
out
stos
add
cmc
push
shlb
cld
mov
addr16
sub
xor
jle
mov
pop
daa
pop
sub
sub
pop
addr16
mov
js
pop
mov
test
jle
dec
loop
xor
inc
scas
or
xchg
andb
pop
inc
aad
imul
sbb
cltd
je
xchg
test
push
mov
pop
add
xchg
pop
dec
jbe
add
sub
and
xor
insl
jl
sti
push
outsb
roll
and
push
sub
sbb
dec
sahf
ja
push
inc
mov
aas
push
mov
icebp
ret
pop
mov
mov
jg
xchg
test
pop
sbb
fisubl
and
jno
push
loop
sbb
mov
and
jbe
mov
shlb
or
imul
lea
aad
inc
bnd
cmp
pop
jo
scas
or
or
insl
negl
lret
dec
das
or
int
mov
icebp
jbe
inc
xor
testl
cmpsb
test
mov
push
fs
pop
insb
cltd
jae
fmuls
mov
dec
or
sbb
nop
gs
add
mov
push
cmc
sbb
aaa
pushf
mov
or
test
lods
push
sbb
push
xchg
in
sbb
les
cs
fwait
call
mov
mov
sbb
cbtw
pop
mov
or
xor
out
adc
xor
or
pop
jle
mov
rcr
or
cmp
mov
mov
or
xchg
movsl
push
push
jecxz
adc
ljmp
orl
jne
mov
aam
cli
neg
inc
push
mov
lcall
mov
rcrb
or
or
jbe
mov
cmpsb
in
jle
lock
fld1
lret
or
out
addr16
sbb
repnz
mov
push
pusha
or
pop
dec
push
lcall
out
in
mov
pop
nop
or
es
test
xor
iret
push
js
push
pop
mov
jle
pusha
cmp
add
pop
push
push
rorl
dec
pop
lods
outsl
lds
and
ljmp
add
repnz
imul
insl
inc
push
sub
sahf
aam
push
sbb
sahf
or
jbe
cwtl
les
or
and
mov
sarb
gs
xchg
mov
mov
cmc
mov
popf
cwtl
ret
lcall
mov
lds
cmp
cltd
inc
sbb
sbb
push
mov
cmp
aaa
jno
stos
das
movsl
out
dec
xchg
mov
in
outsl
push
das
pop
push
or
push
cmp
in
adc
movsb
or
leave
mov
sti
mov
push
jg
sub
cmp
cmp
add
out
test
inc
or
gs
mov
xor
or
lds
push
mov
add
add
in
sub
mov
mov
and
sub
mov
sub
mov
push
mov
push
push
push
call
add
push
mov
push
push
push
push
push
call
add
push
mov
add
cmp
jne
cmp
je
mov
mov
sub
mov
mov
add
sub
sub
mov
mov
push
push
push
push
push
call
add
call
add
test
jne
sub
cmp
jne
mov
mov
cmp
je
sub
add
or
cmp
jne
mov
cmp
je
mov
mov
mov
sub
sub
mov
mov
mov
mov
add
mov
mov
mov
and
mov
sub
mov
mov
mov
cmp
je
mov
cmp
jne
sub
mov
mov
mov
sub
mov
cmp
jne
mov
mov
test
je
mov
mov
mov
mov
sub
cmp
jne
mov
mov
add
mov
mov
mov
sub
sub
cmp
jne
mov
mov
mov
cmp
je
mov
mov
or
mov
mov
mov
cmp
je
mov
and
mov
cmp
jne
cmp
jne
mov
and
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
or
mov
mov
mov
mov
cmp
jne
sub
mov
mov
sub
mov
cmp
je
mov
push
push
push
call
add
cmp
je
mov
add
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
and
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
mov
mov
mov
call
cmp
jne
mov
mov
cmp
je
mov
add
mov
mov
and
cmp
je
mov
cmp
jne
and
mov
cmp
jne
mov
mov
push
push
push
push
call
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
add
cmp
jne
cmp
je
mov
mov
cmp
je
mov
mov
mov
test
jne
mov
mov
sub
mov
cmp
je
mov
mov
add
cmp
je
mov
mov
mov
add
mov
mov
cmp
jne
cmp
je
mov
add
mov
mov
cmp
je
mov
add
add
mov
sub
mov
mov
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
cmp
je
mov
sub
mov
mov
add
add
mov
mov
mov
add
mov
mov
add
sub
sub
test
jne
mov
cmp
je
mov
mov
add
mov
cmp
jne
mov
cmp
je
mov
cmp
jne
mov
mov
or
mov
mov
test
jne
mov
mov
cmp
je
and
mov
cmp
jne
cmp
je
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
sub
cmp
jne
cmp
jne
mov
mov
mov
or
add
test
jne
mov
mov
mov
mov
sub
cmp
je
mov
and
cmp
je
mov
add
mov
mov
mov
cmp
je
mov
sub
mov
cmp
jne
mov
mov
mov
mov
mov
push
push
push
push
push
call
add
add
test
jne
mov
push
push
call
add
sub
cmp
je
mov
push
push
call
add
push
call
add
add
mov
sub
mov
cmp
jne
mov
mov
mov
add
cmp
je
cmp
je
mov
mov
mov
cmp
jne
mov
and
sub
mov
mov
cmp
je
mov
cmp
je
cmp
jne
mov
add
add
sub
sub
add
or
test
jne
cmp
je
mov
and
mov
mov
add
cmp
jne
mov
mov
push
call
mov
mov
sub
add
add
sub
cmp
je
add
or
mov
mov
mov
cmp
je
mov
mov
cmp
je
sub
cmp
je
mov
and
add
mov
mov
cmp
je
cmp
jne
cmp
jne
mov
mov
mov
cmp
je
sub
or
cmp
je
mov
push
push
push
call
add
lea
push
call
add
add
test
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
mov
cmp
je
mov
mov
mov
test
jne
and
mov
mov
mov
cmp
je
add
mov
mov
mov
cmp
je
mov
mov
mov
add
add
mov
and
test
je
mov
cmp
jne
mov
mov
cmp
je
mov
cmp
jne
cmp
je
add
mov
test
je
test
je
mov
mov
cmp
jne
cmp
jne
cmp
je
sub
mov
cmp
jne
sub
cmp
jne
mov
mov
mov
mov
mov
add
sub
mov
cmp
jne
cmp
jne
mov
mov
mov
cmp
je
add
cmp
jne
cmp
jne
mov
cmp
je
mov
mov
call
mov
mov
mov
mov
and
and
cmp
je
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
add
mov
add
mov
sub
mov
cmp
je
mov
add
add
mov
mov
mov
mov
sub
add
mov
mov
mov
cmp
je
test
jne
cmp
je
mov
mov
cmp
je
mov
and
mov
mov
test
jne
mov
cmp
jne
test
jne
mov
and
mov
and
mov
mov
mov
add
mov
mov
mov
test
jne
mov
add
mov
add
mov
mov
and
mov
mov
mov
add
mov
sub
cmp
jne
add
test
je
mov
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
je
mov
test
je
mov
cmp
je
mov
sub
sub
or
or
mov
add
cmp
je
mov
mov
mov
mov
and
cmp
je
mov
mov
mov
sub
cmp
je
mov
mov
mov
mov
and
add
mov
add
mov
mov
sub
mov
add
add
mov
mov
mov
cmp
jne
add
mov
mov
mov
mov
cmp
je
mov
add
mov
mov
mov
cmp
je
mov
mov
cmp
jne
cmp
je
cmp
jne
mov
add
mov
test
je
cmp
je
sub
mov
add
mov
cmp
je
add
cmp
je
test
jne
mov
mov
add
mov
mov
mov
mov
mov
mov
and
or
cmp
je
cmp
je
mov
test
je
or
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
push
push
call
add
mov
mov
cmp
je
mov
mov
mov
and
mov
mov
mov
cmp
jne
mov
mov
mov
sub
mov
push
push
push
push
call
add
add
add
mov
cmp
jne
mov
sub
and
sub
cmp
je
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
add
sub
mov
mov
mov
push
call
add
mov
sub
mov
call
mov
mov
sub
cmp
jne
mov
mov
sub
mov
add
cmp
je
mov
mov
mov
mov
sub
and
add
sub
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
je
mov
cmp
je
mov
test
jne
mov
sub
mov
mov
sub
mov
or
mov
cmp
je
mov
mov
cmp
jne
mov
add
mov
mov
cmp
jne
mov
cmp
je
and
mov
add
cmp
je
mov
mov
mov
sub
sub
cmp
jne
mov
mov
mov
sub
sub
sub
cmp
je
mov
mov
mov
mov
mov
mov
or
cmp
je
mov
mov
mov
add
sub
mov
mov
push
call
add
mov
add
mov
add
mov
add
cmp
jne
mov
mov
and
mov
sub
add
add
cmp
je
mov
sub
mov
sub
add
add
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
push
push
push
push
call
add
mov
mov
mov
cmp
je
mov
mov
add
cmp
je
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
je
add
mov
or
cmp
je
mov
mov
sub
mov
and
mov
or
mov
mov
mov
mov
cmp
je
mov
push
push
push
call
add
mov
push
push
call
add
cmp
je
mov
cmp
je
mov
sub
sub
sub
mov
mov
cmp
je
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
add
mov
mov
add
mov
sub
add
mov
cmp
je
cmp
jne
cmp
je
mov
add
add
mov
sub
test
jne
mov
cmp
je
mov
and
cmp
je
cmp
je
cmp
jne
and
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
or
mov
mov
test
je
cmp
jne
mov
mov
cmp
jne
mov
add
mov
mov
mov
cmp
jne
sub
mov
mov
sub
and
mov
mov
add
and
test
jne
mov
mov
mov
mov
and
and
mov
push
push
push
push
push
call
add
mov
mov
mov
cmp
jne
sub
mov
mov
push
push
push
call
add
sub
mov
sub
cmp
je
mov
test
jne
mov
mov
mov
mov
mov
sub
mov
push
push
push
push
push
call
add
mov
mov
sub
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
call
add
cmp
je
add
mov
sub
cmp
jne
add
add
and
mov
mov
sub
add
sub
cmp
je
cmp
je
and
mov
mov
mov
mov
add
sub
add
cmp
je
and
mov
mov
mov
cmp
je
mov
mov
mov
add
add
sub
sub
mov
add
mov
add
cmp
je
and
add
mov
mov
mov
cmp
jne
mov
sub
mov
mov
cmp
jne
mov
mov
push
push
push
push
call
add
sub
mov
or
mov
cmp
jne
test
jne
add
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
test
jne
cmp
je
sub
cmp
je
mov
mov
mov
sub
add
mov
cmp
je
sub
cmp
jne
mov
mov
mov
sub
mov
add
cmp
je
mov
mov
mov
add
cmp
je
add
mov
mov
mov
mov
cmp
jne
mov
add
test
jne
sub
mov
mov
mov
add
sub
sub
mov
test
jne
mov
push
push
push
call
add
mov
call
sub
cmp
je
cmp
jne
mov
mov
add
add
mov
mov
lea
mov
push
push
call
add
cmp
je
mov
push
push
push
call
add
push
mov
mov
mov
cmp
je
sub
mov
sub
cmp
jne
mov
or
mov
mov
add
mov
add
mov
sub
sub
mov
and
sub
mov
push
mov
push
push
push
call
add
mov
mov
push
push
push
push
push
call
add
call
test
jne
test
jne
mov
mov
mov
add
mov
or
sub
sub
test
jne
mov
cmp
jne
add
mov
mov
push
push
push
push
call
add
shr
cmp
je
mov
mov
mov
cmp
jne
mov
mov
and
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
add
test
jne
mov
add
mov
add
cmp
je
mov
mov
cmp
jne
mov
mov
add
mov
cmp
jne
or
test
jne
test
jne
mov
cmp
jne
mov
sub
mov
cmp
je
mov
sub
mov
add
mov
mov
mov
add
add
test
jne
add
mov
mov
cmp
je
cmp
jne
sub
mov
sub
cmp
je
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
test
je
mov
and
mov
mov
sub
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
and
sub
mov
sub
cmp
je
mov
mov
add
test
je
mov
mov
and
cmp
jne
mov
sub
sub
sub
mov
mov
add
mov
push
push
push
push
call
add
cmp
jne
cmp
je
sub
mov
mov
mov
add
or
mov
cmp
jne
sub
cmp
je
mov
mov
and
cmp
je
mov
cmp
jne
mov
mov
and
mov
mov
add
mov
add
mov
sub
add
mov
cmp
je
add
add
mov
mov
mov
cmp
je
mov
sub
cmp
jne
mov
cmp
jne
mov
mov
add
or
cmp
jne
and
mov
mov
add
mov
mov
sub
sub
sub
sub
cmp
jne
mov
cmp
je
mov
mov
add
mov
add
sub
and
sub
add
add
mov
sub
mov
and
mov
and
sub
cmp
je
mov
cmp
jne
cmp
je
mov
cmp
jne
mov
sub
mov
mov
mov
mov
cmp
jne
mov
test
jne
test
je
mov
cmp
jne
cmp
jne
mov
or
sub
sub
cmp
je
mov
mov
sub
mov
mov
add
or
add
mov
test
je
mov
mov
call
mov
cmp
je
cmp
jne
mov
and
cmp
je
and
mov
add
or
cmp
je
add
mov
mov
sub
mov
cmp
jne
mov
add
cmp
jne
sub
mov
cmp
je
mov
mov
mov
push
push
push
push
call
add
pushl
push
pushl
call
mov
mov
cmp
je
and
mov
mov
mov
sub
sub
add
add
cmp
je
cmp
je
mov
sub
mov
addl
add
cmp
je
mov
mov
sub
mov
mov
sub
add
cmp
je
mov
cmp
jne
mov
mov
cmp
je
mov
mov
mov
test
jne
and
mov
mov
mov
test
jne
mov
mov
cmp
jne
and
mov
test
jne
mov
sub
mov
sub
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
jne
cmp
je
mov
mov
mov
cmp
je
mov
cmp
jne
mov
sub
cmp
je
mov
mov
mov
mov
mov
mov
sub
or
add
or
mov
mov
push
call
add
mov
mov
call
cmp
jne
mov
mov
sub
mov
sub
add
add
or
add
mov
mov
push
push
call
add
test
jne
mov
or
add
cmp
je
cmp
je
cmp
je
sub
mov
cmp
je
add
cmp
jne
mov
mov
push
push
push
push
call
add
add
mov
call
sub
mov
or
mov
cmp
je
mov
cmp
jne
mov
mov
mov
mov
mov
mov
sub
mov
push
push
push
push
call
add
mov
sub
mov
mov
add
cmp
jne
cmp
jne
mov
sub
mov
test
je
cmp
jne
mov
cmp
jne
mov
test
jne
sub
cmp
jne
cmp
je
mov
mov
mov
cmp
je
sub
cmp
jne
mov
cmp
jne
cmp
jne
add
mov
and
cmp
jne
mov
mov
mov
and
and
mov
mov
test
je
cmp
jne
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
add
sub
cmp
jne
cmp
jne
cmp
je
mov
sub
sub
cmp
je
mov
cmp
jne
mov
mov
mov
cmp
je
add
test
jne
mov
cmp
je
mov
mov
cmp
je
mov
and
test
jne
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
push
call
add
mov
push
push
push
push
call
add
pop
and
or
mov
add
add
mov
sub
cmp
jne
mov
cmp
jne
cmp
je
mov
mov
cmp
je
sub
mov
mov
mov
cmp
jne
mov
mov
add
add
add
mov
sub
mov
and
mov
call
pop
cmp
je
mov
pop
add
mov
leave
ret
mov
mov
mov
cmp
jne
mov
call
call
cmp
jne
cmp
je
cmp
je
mov
mov
and
test
jne
sub
mov
call
cmp
jne
cmp
je
test
je
add
mov
push
push
call
add
call
mov
mov
cmp
je
mov
sub
cmp
jne
mov
push
push
push
push
push
call
add
call
mov
call
mov
mov
mov
mov
cmp
jne
sub
add
cmp
jne
mov
mov
mov
and
cmp
jne
mov
mov
add
and
mov
mov
call
mov
mov
cmp
je
cmp
je
mov
push
push
call
add
call
cmp
je
test
je
mov
mov
mov
add
and
cmp
je
add
mov
add
mov
cmp
jne
sub
mov
mov
mov
mov
call
call
cmp
jne
add
test
je
mov
cmp
je
and
mov
mov
mov
call
cmp
jne
mov
push
push
push
push
push
call
add
call
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
push
push
push
call
add
push
cmp
jne
test
je
add
mov
mov
add
mov
cmp
jne
mov
mov
cmp
jne
test
jne
and
add
mov
sub
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
sub
sub
sub
or
mov
mov
mov
sub
mov
mov
mov
push
call
add
push
cmp
jne
mov
sub
mov
add
cmp
je
add
mov
call
push
or
test
je
mov
mov
mov
mov
push
push
push
push
call
add
mov
add
cmp
je
or
cmp
je
mov
mov
mov
mov
cmp
jne
sub
cmp
je
mov
add
mov
sub
cmp
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
add
cmp
je
mov
cmp
jne
or
mov
cmp
je
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
add
mov
mov
movl
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
call
add
call
add
mov
mov
mov
and
cmp
jne
mov
mov
mov
mov
sub
cmp
je
mov
mov
add
cmp
je
test
jne
mov
mov
mov
add
add
mov
and
mov
cmp
je
cmp
je
test
je
mov
call
mov
cmp
je
mov
mov
addl
sub
mov
push
call
cmp
je
mov
mov
cmp
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
or
je
mov
addl
cmp
je
mov
lea
test
jne
mov
inc
mov
sub
mov
sub
mov
or
test
je
mov
mov
mov
mov
cmp
je
cmp
je
mov
add
add
mov
or
mov
add
sub
mov
mov
mov
mov
mov
cmp
je
cmp
je
mov
add
mov
mov
and
sub
sub
test
je
cmp
je
mov
sub
mov
sub
mov
mov
cmp
je
add
cmp
je
mov
add
mov
mov
mov
cmp
je
mov
cmp
jne
mov
mov
cmp
je
mov
mov
mov
add
cmp
je
mov
mov
and
or
sub
sub
cmp
jne
mov
mov
mov
mov
sub
cmp
je
cmp
jne
cmp
jne
sub
mov
cmp
je
add
mov
add
sub
mov
mov
mov
test
je
mov
mov
mov
mov
cmp
je
mov
test
je
mov
mov
mov
add
add
mov
cmp
je
mov
mov
or
and
test
jne
mov
mov
sub
sub
cmp
je
sub
cmp
jne
mov
mov
mov
sub
mov
cmp
jne
mov
mov
mov
add
mov
and
add
add
cmp
je
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
and
cmp
je
mov
mov
add
mov
cmp
je
or
cmp
jne
add
mov
cmp
je
mov
mov
and
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
and
mov
mov
mov
mov
mov
add
mov
or
cmp
je
or
mov
cmp
je
mov
cmp
je
mov
mov
add
sub
add
sub
cmp
je
test
jne
add
mov
mov
sub
mov
add
mov
add
mov
sub
mov
cmp
jne
mov
cmp
jne
or
sub
mov
mov
sub
test
jne
cmp
jne
and
mov
cmp
jne
cmp
je
cmp
jne
sub
and
mov
mov
cmp
je
cmp
je
test
je
mov
mov
cmp
je
cmp
je
mov
mov
cmp
je
mov
mov
cmp
je
mov
sub
mov
mov
mov
mov
add
add
mov
mov
mov
mov
and
cmp
jne
mov
cmp
je
mov
mov
sub
add
mov
cmp
je
mov
mov
add
mov
mov
and
mov
push
push
push
push
push
call
add
mov
mov
mov
cmp
jne
mov
mov
and
or
cmp
je
mov
mov
sub
mov
sub
mov
add
cmp
jne
mov
mov
sub
mov
test
jne
sub
mov
mov
mov
add
mov
mov
cmp
jne
mov
mov
and
and
mov
cmp
je
cmp
jne
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
push
call
add
pop
mov
pop
mov
pop
mov
cmp
jne
and
mov
mov
mov
cmp
je
and
mov
mov
mov
cmp
jne
sub
cmp
je
sub
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
sub
cmp
je
mov
mov
cmp
jne
test
je
cmp
jne
cmp
je
cmp
jne
add
mov
mov
mov
mov
mov
mov
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
call
add
push
mov
push
push
call
add
push
mov
push
mov
add
cmp
je
cmp
je
cmp
jne
mov
push
call
add
add
test
jne
mov
add
mov
mov
mov
cmp
je
mov
mov
sub
mov
add
sub
mov
push
call
add
rdtsc
cmp
jne
mov
sub
mov
sub
mov
sub
mov
mov
and
sub
or
mov
add
sub
sub
mov
mov
rdtsc
mov
cmp
je
mov
mov
mov
add
cmp
jne
mov
mov
mov
or
cmp
jne
mov
mov
sub
add
cmp
jne
mov
test
jne
mov
and
cmp
je
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
add
mov
cmp
je
mov
mov
sub
mov
and
sub
cmp
jne
cmp
je
cmp
jne
add
mov
mov
sub
mov
sub
add
sub
or
sub
and
add
mov
sub
mov
mov
mov
and
add
add
test
jne
sub
mov
sub
mov
cmp
je
cmp
je
sub
and
add
mov
cmp
je
mov
sub
mov
add
cmp
jne
cmp
je
cmp
je
mov
test
jne
mov
sub
mov
mov
mov
mov
mov
mov
pop
cmp
je
mov
mov
sub
sub
or
sub
cmp
jne
mov
mov
sub
mov
mov
pop
cmp
jne
mov
pop
cmp
jne
mov
cmp
je
mov
mov
mov
cmp
je
cmp
je
add
mov
test
je
mov
add
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
sub
mov
push
add
mov
mov
add
and
sub
mov
and
mov
call
push
mov
and
mov
and
mov
and
add
sub
or
cmp
jne
mov
cmp
jne
cmp
jne
cmp
jne
sub
sub
cmp
jne
cmp
jne
mov
cmp
jne
add
mov
mov
mov
cmp
je
and
add
mov
and
mov
test
je
mov
sub
mov
mov
cmp
jne
and
mov
mov
cmp
je
mov
add
cmp
je
mov
sub
cmp
je
and
test
je
mov
mov
mov
add
add
add
sub
or
cmp
je
sub
mov
mov
mov
sub
mov
add
mov
test
je
mov
mov
mov
mov
sub
mov
sub
add
and
cmp
je
and
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
or
mov
cmp
je
add
mov
add
mov
mov
cmp
jne
mov
and
mov
cmp
je
mov
cmp
jne
mov
sub
sub
mov
mov
mov
add
mov
cmp
jne
cmp
jne
sub
mov
sub
mov
sub
cmp
je
cmp
jne
mov
mov
mov
and
cmp
je
sub
mov
add
mov
test
je
mov
mov
sub
add
cmp
jne
sub
mov
sub
cmp
jne
test
jne
mov
mov
sub
mov
mov
add
mov
push
call
add
push
mov
mov
mov
mov
mov
mov
mov
add
mov
add
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
decl
mov
cmp
jne
cmp
jne
cmp
jne
test
je
mov
mov
mov
mov
mov
test
je
and
mov
sub
mov
and
sub
mov
sub
cmp
je
sub
cmp
je
mov
mov
cmp
je
mov
subl
mov
xor
mov
add
sub
cmp
jne
sub
cmp
je
sub
cmp
je
sub
mov
subl
cmp
jne
cmp
jne
mov
add
or
mov
jmp
mov
mov
sub
add
mov
mov
cmp
je
mov
mov
mov
mov
cmp
je
cmp
je
mov
mov
add
sub
mov
cmp
jne
mov
mov
sub
mov
mov
mov
mov
mov
push
push
push
push
call
add
pop
mov
mov
pop
sub
mov
push
push
push
call
add
pop
mov
mov
mov
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
add
add
or
add
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
mov
mov
mov
mov
sub
and
add
and
add
add
mov
mov
sub
mov
push
push
push
push
push
call
add
push
mov
mov
mov
mov
push
push
call
add
push
mov
test
je
mov
push
call
add
mov
mov
mov
mov
cmp
jne
cmp
jne
mov
mov
add
mov
mov
mov
mov
sub
mov
push
test
jne
cmp
je
mov
push
push
push
call
add
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
push
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
sub
sub
and
cmp
jne
mov
mov
sub
mov
push
push
push
push
push
call
add
push
mov
mov
mov
cmp
jne
mov
mov
mov
push
sub
mov
push
push
push
push
push
call
add
mov
mov
add
mov
cmp
je
mov
sub
mov
sub
test
je
mov
mov
add
cmp
je
cmp
je
cmp
je
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
test
je
mov
mov
or
add
mov
cmp
jne
mov
sub
mov
mov
sub
test
je
cmp
jne
mov
sub
mov
sub
sub
cmp
je
or
mov
add
cmp
je
mov
cmp
je
cmp
jne
and
mov
mov
test
jne
cmp
jne
mov
mov
add
mov
mov
cmp
je
mov
mov
sub
cmp
jne
cmp
jne
add
mov
mov
mov
add
cmp
jne
mov
cmp
jne
add
mov
mov
cmp
je
mov
mov
mov
add
sub
sub
mov
cmp
je
cmp
je
test
jne
mov
and
test
jne
mov
cmp
jne
mov
mov
mov
sub
add
mov
sub
cmp
jne
mov
test
je
mov
test
jne
cmp
je
mov
mov
mov
mov
test
je
add
mov
mov
sub
mov
or
mov
or
and
sub
cmp
jne
mov
cmp
jne
mov
mov
mov
call
add
cmp
je
mov
mov
add
add
add
cmp
je
mov
cmp
jne
mov
mov
mov
add
add
and
mov
mov
mov
cmp
je
mov
or
sub
mov
or
cmp
je
mov
mov
mov
cmp
jne
sub
mov
cmp
je
cmp
jne
test
je
mov
mov
mov
sub
cmp
jne
test
jne
mov
mov
cmp
jne
mov
cmp
je
mov
sub
cmp
je
mov
mov
mov
mov
cmp
je
mov
mov
push
push
push
push
push
call
add
mov
mov
add
add
mov
mov
mov
mov
and
add
mov
mov
mov
mov
mov
cmp
jne
mov
mov
push
push
push
push
call
add
mov
cmp
jne
mov
test
jne
and
mov
mov
mov
cmp
je
mov
and
cmp
jne
add
mov
mov
mov
add
add
test
jne
mov
cmp
jne
cmp
jne
mov
add
mov
test
jne
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
add
and
cmp
je
cmp
jne
add
cmp
je
sub
cmp
jne
mov
mov
cmp
je
cmp
je
and
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
add
mov
mov
mov
add
mov
add
mov
mov
test
jne
or
mov
mov
mov
or
je
repnz
cmp
je
sub
and
cmp
jne
sub
add
cmp
je
mov
addl
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
mov
mov
push
push
call
add
mov
mov
cmp
je
mov
add
test
je
mov
add
and
mov
cmp
je
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
mov
add
add
add
mov
mov
pop
mov
cmp
je
cmp
je
mov
mov
mov
mov
mov
and
mov
cmp
jne
cmp
jne
mov
pop
sub
mov
mov
mov
add
mov
cmp
jne
mov
cmp
je
mov
mov
mov
cmp
jne
mov
test
jne
cmp
jne
sub
add
test
je
mov
mov
add
test
je
or
sub
sub
cmp
jne
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
pop
or
mov
mov
sub
add
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
mov
mov
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
or
add
mov
add
mov
mov
mov
mov
add
or
mov
and
cmp
jne
mov
mov
sub
mov
cmp
jne
mov
add
mov
mov
mov
sub
and
mov
test
je
mov
sub
mov
cmp
je
cmp
je
test
je
add
mov
test
je
cmp
je
mov
mov
add
mov
cmp
jne
mov
cmp
je
and
mov
mov
add
mov
add
and
add
mov
add
cmp
jne
sub
add
mov
cmp
jne
test
je
mov
cmp
jne
sub
sub
mov
mov
mov
cmp
jne
mov
mov
mov
mov
sub
mov
mov
pop
mov
mov
pop
mov
mov
pop
mov
mov
add
mov
mov
cmp
jne
add
mov
add
mov
and
cmp
jne
mov
mov
mov
cmp
jne
and
add
mov
add
mov
add
mov
cmp
je
cmp
je
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
and
mov
mov
mov
sub
and
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
add
mov
push
add
mov
mov
mov
or
sub
mov
sub
mov
and
add
cmp
je
mov
mov
mov
mov
mov
add
add
sub
mov
push
mov
add
sub
sub
mov
mov
cmp
je
add
mov
cmp
jne
mov
mov
add
mov
mov
or
mov
mov
sub
add
cmp
je
cmp
je
mov
mov
mov
add
mov
sub
mov
mov
sub
or
cmp
jne
cmp
je
or
sub
mov
and
mov
mov
sub
mov
or
mov
sub
and
test
je
mov
mov
sub
mov
mov
mov
and
mov
mov
test
jne
mov
cmp
jne
cmp
je
test
je
add
mov
mov
add
mov
mov
sub
sub
test
je
mov
mov
cmp
je
mov
mov
mov
mov
pop
cmp
jne
sub
cmp
je
and
mov
cmp
jne
test
je
mov
mov
mov
and
cmp
je
mov
mov
mov
cmp
jne
and
cmp
je
mov
cmp
jne
test
jne
cmp
jne
mov
and
mov
mov
cmp
je
cmp
jne
test
jne
mov
test
je
mov
mov
mov
mov
add
cmp
je
mov
mov
mov
or
mov
mov
pop
cmp
je
mov
mov
sub
mov
mov
sub
mov
pop
cmp
jne
mov
mov
sub
cmp
jne
mov
sub
sub
mov
cmp
jne
sub
cmp
je
test
jne
cmp
je
mov
mov
and
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
add
add
mov
sub
cmp
jne
test
je
mov
sub
mov
test
je
add
cmp
je
mov
add
mov
mov
mov
sub
and
sub
cmp
je
cmp
je
mov
and
mov
sub
mov
cmp
je
mov
mov
mov
sub
mov
add
cmp
je
cmp
jne
add
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
add
mov
push
mov
push
mov
sub
mov
mov
mov
push
mov
cmp
jne
mov
mov
mov
add
mov
sub
mov
or
mov
mov
cmp
je
cmp
jne
mov
add
mov
mov
mov
add
mov
sub
mov
cmp
jne
mov
mov
mov
mov
mov
add
and
cmp
je
add
mov
mov
sub
mov
add
add
cmp
je
mov
mov
pop
cmp
jne
cmp
jne
add
and
mov
pop
mov
cmp
jne
mov
mov
mov
mov
cmp
je
mov
add
mov
mov
mov
cmp
je
mov
mov
and
mov
mov
mov
cmp
je
mov
cmp
je
mov
mov
cmp
je
add
mov
mov
mov
mov
pop
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
sub
sub
add
mov
add
mov
mov
push
mov
push
add
and
mov
mov
test
jne
mov
mov
mov
mov
mov
cmp
jne
mov
mov
push
mov
mov
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
cmp
jne
mov
mov
mov
and
sub
cmp
je
mov
sub
add
mov
and
mov
mov
sub
test
jne
cmp
jne
mov
mov
mov
add
mov
or
mov
mov
sub
cmp
je
mov
mov
mov
mov
cmp
je
mov
pop
sub
mov
sub
mov
test
jne
cmp
jne
mov
mov
add
mov
mov
mov
pop
mov
pop
cmp
je
mov
leave
ret
add
addr16
in
fbld
shlb
or
leave
scas
and
inc
inc
lcall
push
mov
mov
mov
repz
jle
popf
pop
add
pop
imul
sbb
mov
cmpsb
into
push
ds
inc
addr16
stos
stc
test
scas
sbb
push
je
loopne
frstor
addr16
or
dec
loop
mov
dec
jecxz
int3
push
sub
fs
aad
inc
dec
sahf
mov
rcrl
pop
dec
icebp
bound
jbe
cmp
incb
cltd
icebp
jb
mov
sub
dec
rcrb
pusha
ja
xchg
int
lahf
lock
mov
xor
orl
lock
call
mov
or
ss
mov
sbb
jp
sbb
in
inc
je
mov
aam
xchg
imul
rcrl
cmp
mov
pop
mov
int
bound
adc
adc
aam
mov
sbb
add
cld
popa
sbb
add
loope
sbb
sbb
ja
jle
outsb
xchg
inc
xor
cltd
or
cltd
pop
cld
enter
js
push
sbb
sbb
sti
adc
sti
mov
dec
jb
notb
dec
inc
aad
cmp
dec
mov
ja
pop
mov
cmp
ret
add
jl
pop
mov
push
jle
adc
scas
or
add
and
push
sub
mov
ret
or
cmp
mov
les
lea
push
jns
jmp
lcall
imul
jbe
cmpsl
mov
cwtl
mov
sbb
scas
repz
cld
popf
sbbl
or
pusha
adc
mov
xchg
shll
sbb
sub
mov
cmp
jmp
bound
sbb
mov
mov
sbb
mov
roll
dec
cwtl
adcl
rolb
lea
stc
mov
or
int3
sar
scas
pusha
cmpsl
inc
jle
sub
pop
or
test
cli
fsts
test
pop
ljmp
repz
call
inc
mov
push
sbb
aam
push
xor
adc
popa
into
cwtl
pop
stos
cmp
and
dec
adc
scas
add
lods
movsl
xor
mov
inc
test
pop
add
pop
fyl2x
sub
sub
push
fsts
or
push
jg
shr
lea
push
xchg
cmp
stos
shlb
js
push
jp
addr16
cld
or
sbb
jle
popa
dec
dec
outsb
orb
movsl
sbb
rolb
xchg
mov
sbb
int3
pop
leave
adc
stos
or
loope
aam
jle
or
mov
mov
movsl
or
xor
call
shlb
inc
xchg
mov
sti
rclb
cmp
pushf
mov
and
movsb
mov
das
bound
cmp
insb
lock
dec
cmp
mov
popf
jp
push
push
sub
stos
aad
rclb
or
push
inc
notl
and
imul
aas
pop
lods
mov
xchg
cvtps2pd
std
aaa
mov
ja
fmuls
jge
mov
pusha
incb
xor
or
test
insl
mov
inc
sbb
xchg
dec
mov
notb
imul
in
pop
call
mov
push
mov
lcall
ja
std
pop
xlat
sbb
popa
add
adc
cmp
and
andl
adc
aas
iret
mov
cmp
addr16
or
xchg
mov
xlat
mov
inc
mov
sbb
mov
out
lock
pop
pop
cmp
mov
dec
sbb
mov
movsb
inc
mov
in
enter
les
dec
xchg
test
aaa
xor
lret
cmp
jl
or
cmp
movsl
jle
int
mov
or
cli
sbb
cmp
call
nop
xor
push
and
pop
cmp
test
testl
sbb
jecxz
ret
or
dec
rol
mov
adc
pop
mov
push
inc
into
mov
dec
cltd
cs
fs
push
cmp
pop
lea
out
jmp
aas
fidivs
or
fbstp
faddl
out
adc
add
add
lock
pop
jl
mov
mov
or
mov
movsl
add
aam
rorb
jg
cmc
mov
les
xchg
in
lret
adc
movsl
movsl
push
shrl
repnz
jecxz
or
dec
xchg
pushf
cmpsb
scas
jle
adc
les
pusha
es
sahf
xchg
cmp
hlt
cli
mov
sub
and
stos
ljmp
cmp
ds
roll
pop
pop
pop
push
inc
xchg
scas
adc
push
jle
dec
daa
jge
lahf
sbb
sbb
push
xchg
lahf
push
aam
test
int3
or
mov
sbb
out
push
clc
jmp
lods
mov
enter
inc
sbb
mov
jle
jbe
push
rcrl
xchg
imulb
adcl
rcl
inc
mov
mov
fdivs
shl
add
pop
jmpw
mov
xor
daa
sbb
and
mov
and
insb
repnz
adc
mov
lcall
mov
xchg
jo
xchg
sbb
cmpsb
inc
jle
dec
push
cmp
aad
and
fisubrs
clc
ret
or
add
test
jbe
or
sahf
mov
mov
shl
cmp
and
cmp
mov
test
mov
xchg
xchg
sub
lods
jmp
ss
and
addr16
pop
push
jge
into
xchg
xchg
mov
jne
jmp
xchg
mov
aad
lret
mov
inc
stos
daa
ja
jns
lods
movsl
dec
mov
xchg
into
push
or
or
notb
mov
decl
mov
aaa
stos
push
enter
fmull
xchg
xlat
jbe
mov
xor
mov
push
sbb
rorl
sarl
in
adc
push
adc
pusha
lock
je
jmp
adc
jns
inc
add
std
fildll
mov
nop
enter
pop
je
rorl
jo
mov
fdivrs
pop
fcomi
decb
sahf
pop
mov
pop
mov
push
rcll
hlt
push
jae
sbb
cmpsl
and
sbb
push
cltd
mov
xor
scas
xor
aam
subl
pop
mov
inc
int3
mov
or
inc
shrb
sub
cld
sub
inc
ljmp
jae
icebp
inc
stos
inc
jle
mov
es
pusha
xchg
pop
jg
shrb
ljmp
mov
sub
in
adc
jbe
jnp
mov
xor
ja
lods
cltd
mov
scas
outsb
loop
orb
das
inc
loop
fdivr
cmpsl
test
out
mov
push
push
pop
jb
jnp
cwtl
popa
xlat
out
xchg
sbb
mov
stos
and
mov
mov
xchg
mov
sarb
dec
fldl
hlt
mov
inc
imul
xchg
adc
and
pop
out
into
lea
mov
fwait
cmp
adc
cwtl
flds
cltd
adc
add
test
inc
fcomp
jbe
or
or
cmp
fs
push
push
mov
cmp
mov
mov
std
mov
fstps
jb
xchg
xchg
imul
xchg
mov
mov
xor
jle
xchg
out
or
sbb
mov
mov
insl
jle
inc
mov
cmc
push
sub
cltd
or
pusha
mov
mov
push
ret
lods
xor
clc
int3
dec
cmp
out
jbe
repz
ret
jge
aas
out
add
imul
js
jbe
mov
scas
jl
hlt
inc
testl
adc
mov
cmpsb
xchg
xor
movaps
test
dec
inc
inc
test
jle
popf
or
decb
pop
push
and
cmp
xchg
fstl
xor
fildll
add
jmp
or
inc
cmpsb
in
or
mov
loopne
shlb
movsl
mov
sbb
sbb
pop
xchg
popl
sub
pop
cmp
mov
dec
jle
cmpsb
adc
dec
jge
add
sub
push
dec
sbb
aaa
jns
cmp
enter
imulb
sbb
ljmp
xchg
dec
mov
or
mov
leave
jle
mov
mov
mov
lods
mov
loop
sbb
sbb
loop
jmp
inc
aam
sahf
xchg
push
add
test
addr16
mov
les
pop
shlb
mov
sub
mov
or
fmuls
push
outsl
mov
lods
pop
add
enter
jecxz
cli
fisubl
pop
or
dec
cmc
fdiv
cmpsb
or
dec
cmp
adc
adc
adc
or
or
push
push
les
sbb
and
or
xchg
mov
mov
std
mov
xchg
in
test
xchg
popf
mov
push
jle
sarb
shlb
or
inc
scas
mov
jns
ror
subb
pop
testl
ret
push
or
sbb
jns
jbe
or
push
dec
stc
cmc
rcrb
call
pop
push
out
add
xor
mov
mov
xchg
inc
sbbl
dec
push
lds
incl
xor
xchg
pop
rcrb
pop
mov
adc
mov
ds
xchg
call
xchg
dec
mov
mov
and
test
jae
js
xor
mov
sahf
bound
das
repz
fwait
mov
icebp
push
lret
pushf
loop
loop
push
ljmp
cmpl
std
in
scas
adc
mov
pop
jle
dec
push
fistpl
test
ficoms
jge
ja
dec
adcl
mov
loopne
adcb
into
lods
sti
fcos
mov
dec
or
add
or
jno
xchg
mov
sti
or
or
pop
loope
mov
adc
mov
push
xor
cmpsb
loope
cmc
loope
jbe
jge
mov
lock
push
or
ja
rcl
push
inc
outsb
mov
sti
inc
incb
mov
scas
jb
enter
in
fidivrl
mov
sahf
or
shl
pop
icebp
sub
fld
pop
fdivs
pop
mov
lds
mov
push
cmp
adc
sbb
incb
jle
loope
insl
mov
cwtl
mov
ss
das
popa
iret
into
inc
mov
or
sbb
or
lods
xchg
cli
or
jle
pop
fisubl
jle
mov
out
stos
lret
xchg
repz
arpl
xchg
and
jne
and
mov
mov
aas
mov
mov
mov
shll
fimuls
push
push
mov
stos
pop
sub
jge
and
push
outsl
insl
or
fs
dec
push
fidivrl
adc
scas
daa
mov
push
outsl
pop
dec
xchg
xchg
movsb
push
insb
push
aaa
push
mov
imul
pop
inc
or
add
div
repnz
stos
adcl
adc
sub
inc
addr16
iret
les
int3
sub
inc
icebp
andb
push
inc
mov
popa
cmp
shrb
shl
fimull
and
fxtract
rcll
aam
mov
sarl
dec
sbb
mov
les
sbb
pop
sub
lods
mov
notb
dec
push
jl
or
mov
cmpsb
mov
ja
pop
inc
sbb
sarl
lret
pop
pop
push
leave
nop
pop
out
or
xchg
mov
cmp
jbe,pn
and
add
inc
or
mov
fadds
add
mov
in
mov
mov
adc
pop
pop
fstpt
xchg
push
pop
mov
loope
insb
popf
pop
lods
cmp
or
out
push
adc
mov
repz
sbb
add
scas
pushf
ret
das
scas
sbb
xor
add
xchg
cld
jnp
add
shr
mov
lods
sbb
pop
fcompl
jl
std
cmpsb
add
aad
jmp
cmp
sbb
nop
imul
xor
testl
mov
sbb
dec
mov
mov
loop
cmp
jle
add
test
pushf
mov
cmp
jg
mov
dec
and
mull
or
ljmp
add
jge
ss
cld
sbb
mov
sub
fidivrs
aaa
ja
mov
js
sub
pusha
pop
das
or
add
cmpsb
into
pop
out
jbe
pop
ds
rol
leave
inc
push
mov
bnd
enter
sbb
pop
xchg
push
dec
pop
imul
cmc
dec
or
es
jmp
pushf
push
mov
addb
repz
jp
add
xor
mov
mov
lret
add
cmp
into
pop
inc
push
xchg
add
cltd
std
push
in
dec
lock
dec
jge
test
addr16
dec
ret
pop
dec
out
data16
cmpsl
dec
or
andl
and
sbb
dec
adc
hlt
js
lock
in
jbe
sub
xor
cmp
and
scas
xor
leave
adc
jle
notl
mov
jb
push
xchg
cmp
mov
rclb
pop
outsl
and
or
jmp
cmp
xchg
call
cmp
ret
sbb
out
xor
popf
mov
and
fnstcw
jecxz
pop
aad
sahf
daa
add
notb
stos
out
jg
cwtl
add
lds
int
nop
jne
jo
cwtl
xor
mov
cmp
push
push
aad
jl
jge
xchg
jns
sub
loopne
adc
adc
dec
sti
cmp
xor
mov
insb
call
or
xchg
add
adc
in
and
pop
dec
popf
cmpsl
or
in
cmp
mov
push
mov
ret
push
das
jne
mov
andl
and
push
cmp
mov
pop
outsl
mov
push
lds
inc
mov
pop
jecxz
mov
mov
jmp
push
xchg
loope
pop
adcl
js
xchg
push
mov
cwtl
cmpsl
xchg
pop
cmp
sbb
xchg
out
sbb
hlt
testl
pop
jl
lods
in
pop
push
mov
test
inc
test
sbb
adc
das
xor
call
push
inc
xchg
xchg
pop
das
es
into
inc
inc
mov
movsl
adc
mov
push
nop
addb
gs
xor
nop
dec
daa
fs
xor
leave
scas
je
pushf
stos
cmp
cmpsb
mov
mov
jnp,pn
fcoml
dec
mov
repz
jle
sahf
loope
cmp
repz
insl
add
sbb
test
fistps
daa
fs
lods
mov
inc
movb
sbb
fwait
out
lds
mov
lea
ds
pop
jae
loope
enter
jle
hlt
aam
or
sbb
mov
ret
jmp
xchg
outsb
lret
loope
loope
or
mov
mov
xor
ja
or
mov
dec
and
fs
clc
mov
repnz
pop
mov
mov
inc
xor
mov
cli
mov
pop
xor
out
aas
jmp
mov
jbe
mov
xchg
or
out
das
leave
cmp
scas
mov
test
gs
mov
sahf
mov
pop
movsl
inc
aas
adc
adc
push
shll
xchg
or
xchg
ror
aad
or
mov
mov
adc
pop
shll
icebp
inc
cmp
fnstsw
into
mov
push
fiaddl
cmp
or
and
cmpsl
push
mov
xchg
push
xchg
xchg
pop
das
repz
xor
dec
test
jge
mov
mov
xchg
mov
push
outsb
and
loop
pop
push
icebp
lods
pop
dec
xor
aaa
sti
cmpb
fcoms
int
insb
int3
std
xchg
mov
je
sbb
xlat
out
adc
aaa
imul
stos
xlat
cli
xchg
into
or
pusha
fs
idivb
push
rorl
jge
movsb
and
pop
and
sbb
push
jle
dec
pop
mov
jno
rclb
xor
jle
fstl
in
outsl
and
adc
pushf
or
out
mov
cmpsb
sub
popa
push
cmp
stos
ds
loopne
jb
xchg
inc
shll
jle
fstl
sub
sub
mov
add
mov
sub
in
test
xchg
bound
mov
push
aam
add
sub
jns
pusha
loopne
inc
dec
push
iret
and
pop
in
pop
lock
cli
mov
ja
arpl
out
inc
dec
inc
mov
mov
xor
adcb
mov
cmp
mov
shll
icebp
xor
std
js
lods
andb
pop
sbb
cmpsb
ja
push
ds
aam
ret
mov
lahf
sub
pop
pop
das
test
jo
mov
cwtl
mov
jbe
or
add
mov
incb
scas
cld
repnz
push
xor
cmc
and
jb
cmp
xor
xorl
xchg
sub
mov
sub
repnz
cmp
xchg
loopne
dec
dec
jle
xor
or
out
pop
sbb
dec
mov
sbb
xchg
jg
cmp
rcl
add
add
dec
fsubrl
movsb
lret
out
mov
jle
or
ljmp
jo
xchg
inc
orl
lods
jle
pop
xchg
push
out
add
imulb
rcrb
xor
fnstenv
adc
data16
cltd
inc
pop
popf
int
call
lret
ss
push
pop
or
enter
lods
ljmp
cs
xchg
push
add
clc
aad
out
add
push
mov
cmp
and
movsb
lcall
xor
lret
push
addr16
cmp
sub
test
sbb
in
adc
or
xlat
jle
xchg
loopne
or
pop
out
dec
out
jnp
sbb
push
mov
sahf
xchg
mov
cmpsl
adc
cltd
pop
aam
ret
mov
pop
push
in
les
sbb
inc
pop
pop
adc
pop
xchg
jne
iret
loop
lods
lret
rclb
movsl
cmpl
dec
push
insl
pop
inc
call
fstps
dec
cmpsl
imul
loope
sbb
jns
insb
loop
mov
cld
inc
push
pop
or
jmp
cs
inc
test
add
lcall
sbb
xchg
and
nop
jo
push
outsb
iret
and
mov
jmp
and
lock
and
sbb
fidivrl
test
clc
sti
sarb
xlat
daa
lret
and
out
cmp
cmp
dec
jle
in
lcall
lret
pop
popa
rolb
or
adc
xchg
and
sub
sub
mov
stos
mov
into
mov
pop
push
inc
xchg
ljmp
push
cmp
push
test
je
data16
mov
and
aam
mov
pop
movsb
sub
xchg
push
into
test
test
gs
mov
push
mov
aad
mull
pop
inc
sbb
lret
and
mov
inc
add
ja
or
out
insb
mov
cmpsb
sbb
rclb
sbb
lahf
pop
out
pop
jle
mov
push
fistpll
mov
scas
js
xor
cltd
popa
jl
in
or
add
repz
mov
hlt
mov
mov
sub
hlt
add
mov
in
in
js
icebp
pusha
out
cld
mov
jns
cmpsl
mov
mov
or
fldl
subb
jge
dec
lcall
mov
sbb
ss
movl
or
jle
and
pop
neg
leave
sbb
movsb
pop
std
ret
mov
orb
mov
xor
mov
cwtl
mov
pop
pushf
jg
movsb
sbb
dec
pop
mov
dec
jle
xor
mov
popf
in
mov
xchg
loopne
add
in
or
sbb
push
pop
sub
fwait
test
stos
mov
xchg
cmp
xor
test
xlat
push
adc
push
fidivs
push
and
enter
jle
pusha
loop
cli
mov
adc
mov
xor
adc
xor
sbb
cmp
ret
jns
fnstcw
xor
jmp
mov
in
adc
mov
stc
int
mov
mov
add
es
mov
in
in
dec
xchg
pop
pop
jle
testb
out
xchg
and
imul
jo
xchg
sub
fadds
inc
fs
jge
jp
cli
pop
sub
inc
pop
mov
lret
leave
lea
mov
or
shl
int3
cmc
jbe
mov
fstpl
mov
bound
xor
pushf
xor
mov
outsl
decb
jl
sub
adc
sub
aas
loop
cmp
stc
mul
ljmp
repz
mov
cmc
pushf
pop
dec
int
popl
push
push
dec
sub
xor
enter
sub
add
mov
pop
fcmovnu
ret
pop
aaa
jecxz
jg
inc
sub
jmp
inc
inc
mov
add
push
aam
inc
cmp
sub
stos
mov
cmc
sub
lock
rclb
hlt
push
and
mov
push
jecxz
dec
cs
sub
div
jne
stc
addb
inc
shrl
aam
mov
cmp
push
cmp
xor
pop
and
or
paddd
daa
push
out
cmp
xor
dec
cli
and
xchg
call
decb
sub
ficoml
mov
dec
stos
pop
sbb
jp
jne
lahf
fwait
mov
cmpb
inc
adc
inc
pop
sub
jmp
movsb
lahf
or
cltd
cmp
xlat
mov
xor
rclb
mov
mov
add
aad
inc
rclb
es
aaa
dec
lcall
jbe
mov
dec
xor
or
sbb
mov
cmp
stc
ljmp
jns
ljmp
mov
add
stos
pop
mov
ret
ret
push
sbb
loopne
hlt
push
pop
fwait
das
jmp
sbb
xor
ret
jle
rorl
or
or
or
lret
outsb
cwtl
in
sub
test
cmc
out
push
aad
arpl
mov
inc
or
lret
add
mov
dec
xchg
test
sahf
pop
into
mov
or
pop
or
rorb
leave
pop
push
jne
or
popl
sahf
out
sbb
xchg
popa
ljmp
xchg
add
bound
stos
test
mov
adc
cmpsl
mov
pop
sbb
add
mov
pop
push
or
pusha
mov
cli
dec
dec
popf
jle
cmp
xchg
lret
sti
fidivl
lret
mov
enter
inc
insl
mov
sub
mov
cmp
pop
mov
pop
adc
mov
std
das
jne
stc
andb
scas
stos
jg
push
addb
and
cmp
fcompl
xor
jno
ror
call
mov
in
jg
pop
or
jge
mov
testb
sbb
jno
leave
cld
and
jns
xchg
fs
fs
sub
ja
inc
std
push
testb
in
loop
mov
or
cmp
cmc
pop
ret
xor
push
xchg
jmp
gs
stos
rcr
sub
jle
test
in
ja
jb
pop
lcall
push
push
push
sub
mov
sub
add
push
pop
dec
cld
iret
popa
loope
in
test
pop
sbb
fnstcw
pop
es
sbb
mov
shlb
pushf
std
cld
adc
mov
pop
mov
push
inc
icebp
xchg
mov
xor
cmp
out
push
dec
pusha
aad
mov
pop
jo
insb
aam
lret
sbb
stc
mov
mov
mov
mov
andb
pop
daa
adc
and
push
mov
sbbb
xchg
popf
push
movsl
rclb
inc
push
les
loope
or
inc
or
push
pushf
pop
orl
sbb
mov
pop
jle
adc
in
repz
dec
xlat
cmp
ret
rorl
test
data16
dec
sbb
xchg
arpl
out
out
sbb
push
bound
repz
mull
ja
add
cltd
add
xchg
dec
or
clc
push
fsubrs
push
daa
or
rolb
imul
mov
jmp
add
inc
xchg
hlt
dec
adc
imul
jns
lods
or
jns
es
test
push
inc
pop
xchg
inc
aad
jle
test
push
jns
lahf
sbb
mov
movsb
mov
cmp
xchg
insb
inc
dec
push
xchg
inc
mov
lock
mov
ds
mov
pop
int
cmp
mov
or
sbb
movsb
jmp
fisttpll
xchg
mov
sub
sbb
sbb
sbbl
ja
sti
cwtl
or
sarl
inc
ss
mov
fiaddl
ss
aas
test
push
xchg
push
adc
insl
inc
xchg
sbb
test
pop
or
mov
mov
scas
add
or
arpl
pop
fwait
pop
add
mov
in
aad
add
mov
mov
dec
dec
scas
in
pop
xor
xor
mov
xchg
insb
idivl
xchg
mov
shrd
sbb
push
or
fs
sbb
ljmp
lods
imul
fcomp
and
call
lock
imul
fnstcw
xor
int
or
fimull
mov
stos
mov
adc
adc
fld
inc
lcall
push
mov
lock
daa
xchg
cmpb
mov
xchg
cmpsb
int
push
adc
pop
ja
cmp
or
sbb
or
add
insl
mov
xor
movsb
out
inc
out
dec
push
and
mov
push
addr16
cwtl
popa
out
xchg
imul
pop
hlt
lea
mov
ds
dec
inc
mov
mov
or
inc
pop
xor
movl
jno
cltd
nop
dec
in
add
mov
bound
dec
xchg
mov
cmp
push
sub
leave
or
push
outsl
ret
sbb
insb
call
push
xchg
and
push
mov
jecxz
lret
or
sbb
inc
aas
clc
push
movsb
ljmp
shrl
push
in
adc
jbe
lods
mov
jmp
aas
ds
hlt
pop
call
or
jnp
andb
cmpsb
scas
cmp
or
test
sbb
lret
inc
fimuls
std
shl
adc
sbb
jb
mov
bound
cmc
sub
and
adc
nop
mov
pop
mov
lods
mov
jle
jae
add
in
movsl
test
mov
cltd
lret
pop
data16
and
addl
mov
pop
fnstcw
sub
cmpsl
clc
popl
cli
adc
cmp
loope
adc
pop
jmp
in
xchg
cmpsl
mov
fdivl
xor
push
mov
aas
mov
or
adc
mov
leave
fmull
ljmp
loop
lods
cmp
ss
aad
add
lock
xchg
dec
or
popa
cmp
sarb
loop
out
xchg
xchg
sahf
or
add
adc
jbe
mov
ja
into
pusha
or
xchg
out
inc
bound
or
and
jbe
es
mov
icebp
sbb
jmp
pusha
loop
mov
outsl
pop
jle
sbb
mov
cltd
out
sub
imul
add
xchg
dec
jle
xor
xchg
or
xor
loop
mov
pop
cmp
mov
jns
lahf
dec
movsb
dec
fldcw
or
and
cmp
add
mov
cmpsb
jle
mov
test
in
add
pop
pop
mov
pop
push
jg
in
and
xchg
mov
sub
pop
inc
sub
jbe
xchg
mov
mov
push
push
mov
cmp
xor
jmp
or
nop
das
sbb
push
jno
and
push
ja
ret
sbb
xchg
mov
mov
fldl
mov
inc
inc
cmpsl
inc
and
push
cmpsl
sbb
out
mov
push
std
push
fadd
in
xor
in
popf
pop
cwtl
cltd
mov
fcmovbe
idiv
ja
pop
xchg
push
pushf
or
ja
jbe
and
fs
repnz
mov
lds
mov
loopne
pushf
pop
pop
push
cmp
xor
ljmp
inc
jae
push
in
insb
out
pop
xor
mov
inc
inc
xchg
stos
ret
mov
pop
and
xchg
call
jle
pusha
inc
in
mov
mov
int
jge
mov
adc
lds
push
movsl
dec
in
jg
jl
stos
jle
jns
stc
pop
xlat
add
or
pop
push
dec
mov
outsl
outsb
and
add
lods
scas
addl
mov
sub
adc
sbb
lret
jle
das
fbstp
outsb
or
dec
pop
rorb
popf
js
or
jae
or
int
adc
xchg
ret
inc
and
or
rcll
xchg
or
dec
out
mov
mov
fistl
pushf
jp
outsb
insb
sbb
fsubrl
loopne
mov
jne
jbe
ffree
adc
cltd
popf
cld
or
out
cmp
dec
and
or
mov
add
aad
push
lods
popf
xor
nop
cmp
pop
dec
aas
inc
in
insl
mov
xor
pop
cmpsb
aaa
cmp
xchg
imul
cmpb
icebp
popa
jle
push
lahf
push
movsb
enter
call
mov
sub
loop
mov
pop
push
cltd
je
mov
out
jbe
inc
test
xor
ja
adc
cmpsl
jge
sbb
or
popf
mov
xor
pop
sbb
pop
bound
lea
jecxz
test
sarl
and
mov
test
push
mov
sbb
add
sub
popf
inc
mov
pushf
cmp
sbb
sub
push
nop
or
aas
adc
cwtl
adc
std
add
jle
mov
lret
pop
jl
lret
das
in
dec
repnz
mov
push
imul
shrl
xor
fcom
pop
lcall
mov
dec
mov
xor
jb
test
adcb
sub
pop
add
or
mov
mov
leave
lcall
out
pop
sti
cmp
or
jb
loope
mov
bound
lret
pop
xor
xor
int3
imul
sbb
sahf
test
pop
mov
lods
fucomp
mov
push
clc
mov
mov
orb
xchg
cmp
aaa
xlat
sbb
dec
cmp
andb
xor
xor
pop
sbb
outsl
pop
out
iret
ds
xchg
add
fnstsw
test
mov
js
outsl
mov
xor
mov
push
mov
add
in
lahf
das
inc
shll
pop
mov
sbb
pop
mov
repz
aam
and
out
ljmp
daa
fsubl
sbb
das
adc
dec
imul
mov
sti
pop
inc
adc
pop
lret
aam
lods
jge
jo
mov
iret
je
push
cmc
mov
js
sub
pop
push
xchg
mov
and
scas
rcll
lahf
fsts
enter
lret
inc
pop
fdiv
iret
adc
or
xchg
movsb
ret
imul
jp
subb
sbb
fidivrl
jmp
popf
in
inc
lret
sbb
insb
mov
add
dec
inc
sbb
xchg
psubd
jo
cli
pop
or
fidivl
stos
inc
ja
inc
sbb
inc
pop
outsl
pop
ret
arpl
mov
jns
and
roll
sub
mov
clc
jo
adc
xor
fidivrs
div
out
jmp
mov
cmpsl
mov
inc
leave
call
sbb
sub
nop
outsb
inc
fwait
scas
mov
outsl
sub
or
stos
in
js
fadd
sub
cltd
rclb
jnp
ss
or
and
mov
jecxz
inc
mov
mov
sbb
jle
popa
or
xchg
or
or
imul
rcl
and
xchg
or
sub
or
add
cmp
jb
inc
loop
rcrb
testl
mov
sahf
xchg
inc
repz
push
inc
mull
out
in
fdiv
lcall
adc
adc
cmc
shll
dec
ss
sub
pop
mov
mov
mov
cli
inc
adc
jecxz
sti
out
xor
iret
jno
mov
cmp
xor
hlt
pop
dec
pop
sub
cmp
push
jbe
mov
addr16
pop
sahf
mov
jle
cwtl
cmpsl
push
mov
adc
repnz
in
in
xor
add
out
dec
dec
mov
clc
fimull
rcrb
xor
js
loopne
fidivs
ljmp
test
mov
jl
lods
mov
outsl
test
sbb
cmp
pop
sub
orl
mov
les
scas
jp
call
idivl
pop
fidivs
enter
adcb
xor
es
mov
in
test
pop
lret
pop
jmp
adc
fcomps
xchg
jo
sbb
or
ss
lcall
mov
enter
push
out
in
pop
add
pop
pop
pop
push
aas
xor
mov
mov
mov
movsb
lea
cmp
iret
xchg
xor
aad
jp
out
in
and
sbb
push
adc
rol
cmp
loope
mov
scas
insb
mov
inc
pop
jbe
push
leave
mov
and
lcall
push
test
mov
push
dec
aaa
add
jnp
jle
repz
cmp
aad
loope
xchg
mov
jbe
push
lret
lods
dec
or
xchg
pop
sti
cltd
adc
mov
loope
mulb
arpl
mov
mov
push
jg
inc
xchg
jecxz
out
pop
lret
jge
mov
mov
cmpsl
fcomp
mov
hlt
stc
mov
mov
cli
jg
imul
shlb
sub
jbe
popa
lret
test
jge
aaa
or
movl
xlat
or
into
sbb
pushf
imul
cltd
movsl
xchg
jle
jae
andb
jae
or
cwtl
pop
sbb
pop
sbb
or
inc
inc
test
add
loope
xchg
cmp
cwtl
leave
test
mov
add
scas
and
or
inc
xlat
xchg
into
lcall
pop
cmp
jecxz
adc
out
pop
xchg
push
cmp
inc
stos
leave
addr16
cmp
push
cwtl
insb
jle
or
cmpsl
in
or
add
xor
jne
shrb
cwtl
lock
push
cmp
cltd
pop
pop
lods
movsl
lods
add
test
add
push
insl
mov
outsb
inc
cmp
xlat
cs
aaa
imul
pop
pop
in
mov
mov
shrl
add
loopne
cmp
pop
aam
xchg
adc
push
push
mov
stos
cmc
inc
xchg
fiadds
sbb
add
jl
or
sbb
shll
xchg
xchg
ss
xlat
faddl
repnz
sbb
into
movsb
adc
jbe
ljmp
nop
jne
cmpsl
movsb
call
jbe
arpl
orl
movsb
int
inc
or
dec
pop
or
sub
adc
cmp
and
adc
lods
mov
pop
fistpl
mov
cmp
ja
data16
stos
or
clc
dec
enter
ljmp
loope
mov
sbb
popf
xchg
push
iret
xlat
cli
mov
pop
cmpb
xor
int
and
pushf
test
mov
rcrl
or
test
mov
into
imul
nop
notb
xchg
mov
dec
or
add
adc
cmpl
or
adc
cltd
lods
pop
push
cli
push
fisubrs
sbb
xlat
rorb
das
out
push
jecxz
add
in
scas
dec
into
test
pushf
sbb
ljmp
cmpsl
insl
cld
cmp
das
outsb
pop
cmp
and
lret
divb
mov
cmp
or
hlt
sbbl
inc
dec
xchg
mov
std
and
and
jbe
jbe
mov
int3
sbb
adc
aas
add
adc
js
push
cmp
mov
xchg
out
cltd
bound
lea
xchg
or
cltd
and
mov
lahf
into
dec
cmp
dec
jno
call
jns
movsl
dec
pop
fwait
in
enter
cmpsl
or
inc
int
cmpl
repz
mov
add
and
mov
aad
inc
mov
or
push
mov
fcmovnbe
call
pop
inc
push
sub
xchg
pop
arpl
mov
push
frstor
dec
iret
out
fnsave
push
jle
mov
sbb
xchg
nop/reserved
inc
xor
mov
xor
cmp
cmp
sti
popa
dec
cmpsl
in
push
or
pop
and
sbb
sbb
adc
cmp
add
lret
cld
or
sti
jge
ret
mov
sbb
inc
popw
mov
fisttps
add
fdivrp
pushf
ja
inc
outsl
lcall
pop
pop
and
jp
dec
jecxz
je
cld
std
loope
or
clc
adcb
scas
leave
and
repnz
fildl
out
xchg
shlb
aaa
bound
movsl
sub
adc
add
subb
jg
loopne
adc
dec
adc
loope
rcr
push
inc
or
add
or
pusha
cmpb
aaa
or
mov
jnp
jle
pop
jle
and
or
in
ret
pusha
je
xchg
jle
fadd
mov
leave
mov
xchg
pop
js
gs
cli
out
mov
test
sub
push
mov
jg
loope
pop
daa
hlt
jns
insl
fwait
lds
add
ffree
rclb
cli
pushf
in
or
pusha
rcrb
push
mov
sti
lea
xchg
ret
mov
pop
je
data16
popa
sti
push
lods
rorb
fwait
stos
push
lcall
dec
fsubl
jle
test
sbbl
cld
cmp
inc
stos
int3
inc
mov
hlt
pop
shll
or
push
adc
lds
cmpb
add
jmp
sub
cmpsl
stos
mov
pop
hlt
jns
ds
dec
out
push
dec
adc
outsl
test
dec
adc
cld
pop
jb
adc
inc
mov
in
add
cld
lahf
sbb
mov
and
xor
mov
sbb
lea
sub
jle
lds
dec
cld
out
mov
es
xor
xlat
cmp
mov
mov
lret
stc
jnp
jo
scas
pop
pusha
cmp
jge
or
mov
fnstsw
popf
sub
lea
jle
cmp
loopne
or
inc
ljmp
xchg
inc
and
jb
xchg
mov
pop
and
dec
sub
xor
pusha
sahf
cmp
dec
ficoml
fnclex
xor
out
adc
inc
or
inc
jle
sbb
in
ficoml
inc
inc
or
xchg
and
sti
sbb
aam
adc
push
js
int3
xor
roll
shll
mov
loop
or
mov
jp
repnz
or
movsl
and
out
sbb
inc
mov
fisttps
in
call
add
icebp
sub
jge
das
and
cmpsl
or
int3
clc
push
in
mull
icebp
ret
mov
mov
add
lock
xor
cmpb
mov
pop
imul
xchg
sbb
add
or
jmp
inc
insb
movsl
in
out
out
jecxz
push
push
lods
mov
pushf
cmp
xor
add
sub
push
or
sub
loopne
lea
push
aaa
pop
push
lret
repz
cmp
mov
dec
repnz
mov
jl
cmc
aad
repnz
fwait
push
test
inc
or
cmpb
or
xchg
popw
mov
and
outsl
sub
jns
sbb
gs
jae
rcrb
sbb
and
xor
mov
pop
outsl
sbb
sub
ret
fs
pop
sub
sbb
jne
sub
pop
or
inc
jle
mov
mov
inc
sbb
push
jp
jbe
push
popf
sbb
sbb
pop
aam
divl
sbb
lret
pop
or
inc
or
dec
add
and
icebp
xchg
pop
dec
and
leave
fcomps
daa
add
cli
cwtl
sbb
and
jl
jbe
jne
int
sarb
pusha
mov
dec
or
aad
jle
sbb
ljmp
cli
and
mov
add
mov
jns
dec
enter
push
push
and
test
bound
mov
outsb
sbb
mov
lea
push
fiaddl
pop
or
mov
jecxz
out
rclb
subl
adc
inc
or
lods
out
sbb
xchg
jbe
jne
push
ljmp
adc
mov
popf
aam
lahf
sbb
sbb
out
scas
and
mov
mov
jb
cltd
or
mov
mov
jp
fidivl
movsl
pop
cmp
aas
sub
outsb
dec
mov
mov
lcall
ficoms
sub
jle
inc
mov
mov
mov
and
daa
bound
mov
pop
cld
insl
add
pusha
xchg
cmc
lods
push
xchg
je
scas
lods
mov
jo
movsl
adc
fmulp
loop
pop
jmp
cmpsl
fsubl
mov
mov
jmp
mov
or
rorb
mov
cmpsl
cmp
repnz
inc
inc
sub
and
stos
adc
cltd
lret
decb
or
push
xor
jbe
jo
xchg
mov
pop
aaa
movsl
sub
xor
jle
cmc
ds
vpxor
movsl
push
mov
xchg
cmp
cs
xchg
sub
call
mov
shlb
mov
mov
rcll
sbb
lock
ja
inc
lret
cs
lret
mov
mov
pop
add
mov
xchg
stos
mov
mov
push
sahf
jno
xchg
pop
stc
bound
xchg
adc
lcall
mov
and
nop
pop
jnp
sub
sbb
clc
sahf
daa
std
rcll
push
mov
imul
pop
popf
dec
out
lods
sub
xchg
cmc
jge
xor
add
lahf
jo
fwait
mov
loopne
dec
idiv
cmp
rorl
scas
and
out
gs
mov
fcomi
push
cmp
daa
fisttps
xchg
fdivrs
push
cmpl
mov
xor
hlt
pop
ljmp
pop
ds
aas
sub
inc
mov
scas
jle
js
or
xchg
fisubrs
insb
test
add
push
dec
adc
sub
sub
fdivrl
sbb
inc
insl
jo
push
dec
mov
dec
pushf
or
mov
mov
mov
pop
adc
rolb
inc
push
bnd
movsb
cmc
inc
xor
es
adc
jle
mov
insl
in
mov
out
jecxz
sbb
inc
adc
repz
sbb
scas
mov
push
out
add
aaa
out
lds
inc
and
fs
xchg
out
sbb
cmp
jns
lret
imul
xlat
push
or
dec
test
inc
xchg
adc
push
jb
std
pop
or
jg
in
movl
add
enter
addb
mov
or
sbb
cmc
pop
sahf
cmp
add
mov
xor
aas
jle
or
into
loope
in
sbb
dec
sub
xor
cmp
notl
xchg
ror
jnp
mov
mov
or
cmp
ret
hlt
pop
movsb
fisubl
pop
mov
push
cmp
mov
and
jle
lahf
insl
ljmp
ret
stos
cmc
xor
addr16
xchg
mov
cld
notl
dec
jo
ret
pop
lret
jbe
push
mov
or
sahf
or
fst
sub
dec
jp
das
sbb
pop
add
pop
loopne
xchg
mov
push
xor
aas
int
or
sub
jno
ret
add
jbe
sarl
pop
add
data16
and
insb
scas
mov
sbb
mov
dec
mov
out
cld
imul
loope
cmpl
sub
shrl
mov
jae
ljmp
mov
pop
cli
cltd
insl
pop
sbb
lret
xlat
fstpl
incb
dec
inc
dec
pop
mov
jg
hlt
hlt
in
pop
lods
adc
or
in
leave
cmpsl
mov
and
lcall
or
mov
test
sbb
xor
sarb
fcmovne
repnz
cmp
lret
lock
push
jle
or
repnz
mov
inc
xor
arpl
push
or
pop
scas
cmpsb
fidivrl
jo
pop
pop
sbb
sbb
pusha
cltd
repz
fldcw
mov
scas
movb
ret
out
repnz
pop
jo
push
mov
sbb
ljmp
enter
mov
xchg
mov
in
or
push
adc
jb
mov
mov
pusha
pop
mov
ret
stc
xor
pop
sbb
cmp
loope
xchg
mov
cmp
mov
push
push
scas
sub
ljmp
push
lock
jle
test
jmp
sbbl
out
mul
insb
fdivrl
test
call
pop
and
fldl
pop
mov
ret
sbb
mov
fxch
mov
jno
sbb
in
gs
mov
in
push
inc
mov
movsb
mov
and
in
push
arpl
xor
mov
lret
mov
xor
sbb
xor
and
test
add
jae
pop
xchg
fdivrl
cmp
in
jp
inc
sbb
sbb
pop
les
cmc
sbb
add
xchg
bound
cli
sar
mull
mov
inc
mov
pop
push
insl
dec
adc
mov
in
mov
data16
js
pop
xorb
out
add
lea
pusha
inc
lcall
lcall
add
jle
pop
adc
sarl
dec
or
adc
in
mov
jmp
lret
or
aaa
lods
mov
or
sbb
cmpsl
mov
and
jmp
scas
popf
or
ror
std
xchg
lods
lret
lret
dec
pop
mul
jbe
dec
cltd
sbb
pop
mov
inc
or
clc
lret
dec
cmp
lds
push
or
shrb
push
cmp
xor
lds
mov
out
arpl
out
push
pop
inc
inc
repz
je
jp
or
mov
subb
add
or
and
sarl
pop
test
stos
lods
mov
xor
xchg
xchg
mov
push
movsl
in
xchg
mov
aaa
and
movsl
lret
mov
push
std
or
adc
lea
inc
pop
sahf
das
and
pop
idivl
pop
je
dec
clc
inc
xchg
xchg
jne,pt
je
push
jae
sub
and
psadbw
dec
push
sub
jecxz
adc
mov
mov
test
lea
sarb
mov
xchg
add
aad
pop
cwtl
cmpsb
mov
movsb
mov
clc
xor
pop
pushf
pop
jle
and
jbe
jp
cmp
or
movsl
xor
adc
pop
xchg
inc
mov
or
stos
test
sbb
out
inc
out
leave
inc
mov
lods
jnp
push
mov
rorl
out
sbb
nop
jmp
or
push
pop
cmp
out
mov
stos
push
dec
pop
adc
pop
loope
mov
jbe
pop
fs
or
lods
lret
mov
push
mov
jno
icebp
sub
xchg
xchg
ss
dec
jle
out
jae
out
mov
adc
or
cmpsb
xor
jle
in
fimull
scas
out
pop
ljmp
sti
jbe
test
mov
fistps
fmull
dec
mov
sub
clc
std
push
fdivrs
sbb
adcl
addr16
shll
sbb
mov
mov
xchg
or
push
dec
mov
mov
or
call
lea
repnz
xchg
in
sbb
xchg
jle
idivl
sahf
gs
out
ljmp
push
adc
jge
shl
hlt
or
xchg
cmp
mov
gs
dec
xor
loopne
int3
pop
xchg
pop
xchg
mov
add
fimuls
idiv
jmp
scas
rcrb
in
jae
out
or
mov
insl
push
lret
inc
mov
add
fucom
and
daa
mov
sbb
pushf
pusha
icebp
insb
pop
sbb
aam
cwtl
rcrl
push
dec
test
mov
mov
loope
bound
cmpsb
out
inc
or
dec
fcompl
mov
int3
out
pop
in
adc
lods
pop
aam
mov
and
int
aaa
sbb
jns
jle
iret
jl
nop
icebp
js
or
xchg
mov
aas
js
enter
jle
rol
enter
push
mov
xor
adc
push
cmpsl
pop
pop
outsl
dec
inc
rol
sbb
push
clc
in
mov
into
cmp
ds
mov
ljmp
xor
push
stos
fdivrl
add
aad
fcoms
fists
lcall
ljmp
je
lods
inc
ficoml
push
xor
outsl
add
mov
xchg
outsb
add
out
sub
popa
cwtl
mov
mov
dec
repnz
popf
dec
mov
fwait
push
mov
push
mov
out
mov
fsub
out
mov
fistl
dec
jge
ljmp
repz
data16
pop
in
sbb
jmp
mov
fcmovu
push
cmp
xor
adc
pop
add
out
add
out
lods
jno
jb
shrl
clc
mov
jp
addr16
or
inc
push
inc
jecxz
push
mov
imul
notl
push
test
mov
or
xor
jmp
mov
sbb
cmp
push
or
jnp
test
or
jb
ljmp
aas
cmp
cmp
push
mov
inc
ljmp
mov
outsb
outsl
dec
imulb
aad
and
push
push
scas
in
mov
sahf
push
push
pop
adc
mov
add
push
rcl
jns
shll
cmp
fadds
sbb
int
sub
pop
mov
das
mov
mov
sti
adc
mov
fs
iret
sti
jecxz
mov
sbb
mov
scas
int
sub
lods
add
sbb
push
fidivs
adc
adc
xor
ret
lret
add
lods
push
mov
jle
les
pop
pop
mov
or
push
test
negb
jle
cmp
adc
push
fdiv
pop
mov
test
add
iret
addl
adc
pop
stc
mov
leave
ljmp
mov
push
sbb
cmpb
lahf
inc
ja
or
sahf
inc
cmp
arpl
ss
dec
je
aaa
cwtl
push
sbb
xor
cltd
mov
and
dec
jbe
push
jp
ljmp
adc
adc
or
jns
or
addr16
jmp
cmp
in
pushf
mov
sub
sbb
mov
js
div
jp
mov
mov
inc
jg
mov
rorb
test
fwait
int3
test
push
push
loopne
enter
jne
jns
je
pop
aad
lret
mov
outsl
mov
push
or
lret
inc
pop
mov
pop
mov
xchg
push
and
and
or
sbb
xchg
dec
xchg
js
push
cmovne
mov
sbb
or
push
in
mov
movsb
mov
push
fxam
xchg
or
daa
lret
sbb
mov
jne
dec
insb
sbb
aad
sti
push
cmp
int3
faddl
push
out
pop
xor
scas
sub
fimull
sahf
adc
inc
aad
shlb
xor
add
int3
mov
inc
xchg
jle
iret
xor
jae
push
push
and
sbb
inc
mov
imul
sti
mov
in
mov
inc
add
dec
popa
cmp
out
jbe
jne
cli
push
jl
push
or
dec
and
addr16
lcall
pop
xor
imul
inc
ja
sbb
std
or
shlb
mov
movsl
mov
lods
loope
jns
or
xchg
mov
shlb
pop
dec
adc
inc
js
push
mov
fisttpl
xchg
scas
not
or
xchg
repnz
mov
pushf
icebp
fistpl
loopne
sti
pop
cwtl
push
dec
pop
fbstp
sbb
jns
sbb
or
rcll
push
jo
or
les
xor
mov
pop
aas
inc
sbb
xor
push
dec
leave
jbe
stos
sti
repnz
mov
scas
icebp
clts
pushf
add
mov
and
and
jo
jnp
fsqrt
mulb
or
data16
pop
out
fldl
cmp
jb
lret
std
movsl
cmp
lock
rol
rcll
cmpsb
lods
mov
jo
xor
cmc
in
and
std
jge
mov
sub
cli
into
into
mov
xor
mov
xor
imul
stos
jnp
jbe
cwtl
imul
fsubp
rolb
jecxz
repz
and
xchg
push
stos
pop
inc
inc
iret
scas
pop
jle
xchg
loope
imul
aas
stos
lock
sbb
movsl
pop
std
mov
scas
jge
sub
sbb
mov
pop
daa
cmpsl
movsb
mov
outsl
lret
mov
lcall
js
scas
mov
jle
xor
mov
xlat
or
or
inc
push
clc
rcrl
ss
pushf
jae
fbstp
add
push
imul
int
jle
mov
mov
xchg
lock
aad
or
mov
cmpsl
mov
sub
call
jcxz
aaa
ja
rolb
xchg
cs
push
das
xchg
add
jge
sub
int3
dec
add
push
adcl
imul
add
push
cwtl
xorb
test
mov
pop
sbb
mov
loope
xchg
or
testb
es
rolb
icebp
movsl
sti
push
lahf
xchg
mov
inc
add
mov
jo
arpl
mov
cmp
pop
xchg
insl
sub
push
test
xchg
mov
aad
dec
mov
icebp
push
subl
pop
jle
int3
or
into
push
sbb
repnz
loopne
fdivl
adc
ficomps
adc
jbe
leave
and
lods
lods
pop
jle
adc
or
lret
or
lds
inc
sti
arpl
in
or
xor
add
mov
ja
or
movsb
mov
adc
imul
push
nop
and
repnz
mov
js
ret
pusha
xor
mov
and
dec
push
mov
push
in
prefetchnta
test
insb
insl
les
icebp
push
insl
adc
mov
cmpsb
adc
adc
and
xchg
cmp
lock
call
outsb
push
or
hlt
dec
jb
mov
mov
jo
imul
push
rolb
fprem1
adc
leave
fs
sub
sbb
lods
pop
lcall
out
cmp
leave
jbe
cmpsb
dec
cli
adc
fisubs
or
and
repz
rorl
sub
pop
add
adc
xchg
es
push
pop
mov
mov
out
jmp
repz
test
lock
outsb
cmp
js
xchg
lcall
stc
dec
xorb
lcall
adc
loopne
out
jge
inc
dec
fwait
gs
jecxz
pop
or
dec
fdivp
cmp
inc
rcr
sbb
mov
imul
xchg
xchg
xchg
sbb
mov
mov
jle
jnp
jmp
sub
inc
push
adc
je
add
mov
pusha
into
add
cmp
out
sti
punpckldq
aaa
sbb
add
cmc
pop
add
int3
xchg
aam
loopne
movsb
mov
push
push
mov
ja
sub
push
imulb
sub
lahf
pop
cltd
mov
mov
add
jb
xor
xchg
pop
scas
fidivl
popa
dec
cmp
mov
aas
in
test
add
cmp
mov
aad
jae
jne
jle
inc
and
adc
in
pusha
mov
in
movsb
mov
add
and
jmp
stos
test
cmp
jecxz
or
sub
pop
repz
pop
stos
fidivs
cltd
cmp
inc
push
hlt
inc
or
or
pop
add
les
jno
adc
push
fldenv
sbb
in
movsl
dec
jb
mov
jbe
loop
add
pushl
daa
or
pop
inc
out
dec
sbb
or
shl
xchg
imul
cmp
mov
add
xor
ret
jle
loop
fsubl
xchg
insb
inc
add
hlt
dec
mov
mov
push
out
dec
and
aam
in
adc
int
mov
popa
out
mov
adc
out
imul
sbb
pop
pop
lcall
insb
inc
ss
xorl
or
gs
pop
js
xorl
or
aad
mov
mov
and
xor
leave
pop
mov
mov
cld
pop
sub
and
xlat
std
cltd
pop
mov
lods
addl
push
lcall
ret
test
cmp
test
mov
jle,pn
sarb
and
jecxz
jp
sbb
inc
jno
scas
inc
outsl
fstp
mov
js
fstpl
cmpl
adc
aad
in
out
scas
or
cmp
outsb
lods
jle
movsb
adc
add
mov
gs
lret
test
mov
pop
jp
cmp
insl
push
inc
bnd
mov
jle
in
cmp
vpcmpeqd
or
out
fwait
push
fnstsw
sub
xchg
mov
fsub
cs
orl
cli
jecxz
fsub
lret
movsb
inc
pusha
mov
gs
pop
mov
ja
std
and
sbbb
pop
xor
pavgw
out
xchg
mov
lds
push
push
add
sub
inc
jle
sti
jg
sarl
pop
cmp
mov
jbe
stos
mov
dec
pop
or
pop
rcrb
insb
cmc
frstor
dec
xchg
dec
sub
or
scas
cmc
pop
sub
xor
idivb
mov
xchg
pop
fbld
mov
sarb
ljmp
das
pop
rcr
rclb
adc
push
imul
popf
sbb
mov
repnz
mov
cmp
pop
mov
jbe
jnp
fwait
notrack
frstor
push
std
les
cmp
int
hlt
mov
pop
mov
jne
and
ja
pushf
mov
pop
fwait
rclb
std
push
icebp
or
xchg
int
je
sub
imul
jle
arpl
mov
xchg
mov
aas
hlt
lret
inc
ss
ret
inc
ds
sub
or
shll
dec
sbb
std
mov
shll
addr16
loop
pop
xlat
out
popa
movsl
ret
pushf
sahf
pop
sub
rol
movsl
add
or
cltd
int3
xor
jle
hlt
bound
ret
in
out
mov
int
pushf
mov
sub
imul
dec
pop
or
pop
sub
loop
dec
pop
jns
or
out
loope
pop
jbe
push
adc
fisubl
mov
or
or
jmp
sbb
daa
cs
out
push
and
mov
ret
sahf
xchg
pop
adcl
mov
or
adc
mov
arpl
or
stc
pusha
sub
clc
pop
ret
fs
or
test
shrl
jo
movsl
pushf
bsr
mov
pop
sub
and
cmp
sub
jle
xor
int3
stos
or
xchg
jp
xchg
loop
ret
jle
mov
add
cmpsl
xchg
sti
inc
sti
pop
jge
data16
sub
or
xchg
aaa
sbbb
mov
xchg
mov
nop
mov
jecxz
jae
fsubl
cmp
loope
dec
fsub
push
or
adc
mov
cmp
cmpsl
push
mov
push
xlat
shlb
jb
jge
ret
jecxz
mov
cmp
xor
gs
test
or
or
xchg
adc
xchg
shlb
and
mov
sbb
jle
fildll
xchg
jl
dec
or
mov
rorb
sbb
pop
scas
sub
jb
lods
out
jbe
pop
fistl
add
mov
mov
mov
movsb
xchg
xchg
push
adc
push
pusha
int3
mov
sub
and
scas
push
inc
xchg
push
pop
gs
in
ljmp
xor
sub
decb
decb
mov
sbb
out
jb
sbb
lret
jbe
inc
iret
adc
sub
cmc
or
dec
xor
cmp
and
in
add
jo
aas
or
insb
xchg
pop
xchg
mov
cmc
sub
xchg
pop
insl
pop
mov
iret
lahf
jle
cwtl
jmp
adc
or
xor
sub
loope
xchg
test
cli
gs
xor
jp
sbb
cs
lahf
test
mov
cmp
or
inc
adc
icebp
fs
clc
push
cld
insl
ja
mov
sbb
or
xor
fcmovb
mov
nop
mov
xchg
cmc
out
add
or
std
jbe
and
arpl
adc
or
ss
pop
aam
gs
repnz
lcall
div
out
dec
faddp
or
cmc
test
dec
mov
xor
mov
pop
fdivrl
sub
popf
cmp
aad
aas
imul
stc
and
push
cmp
sbb
stos
xchg
jle
idiv
dec
jns
fwait
daa
or
push
push
dec
push
aas
ds
dec
lret
xchg
mov
testb
or
shl
js
or
out
or
mov
cmp
jp
orl
shrl
cmp
stos
inc
inc
push
shll
fldenv
and
inc
cmp
mov
adc
test
pop
ret
pop
data16
in
mulb
test
js
dec
ret
sbb
cmpsb
push
push
cmp
rcll
inc
fucomp
sub
cmp
push
je
or
std
sbb
cs
pop
push
adc
mov
lret
or
inc
fstps
jnp
outsb
xor
sub
mov
push
popl
xlat
pop
pop
popa
sar
fsubs
or
adc
mov
orl
jno
xlat
jbe
mov
mov
or
mov
push
rorb
ds
jne
sbb
xor
test
cwtl
or
inc
ret
popa
xlat
mov
sbb
or
mov
nop
jmp
cli
jae
push
cmpsb
mov
dec
cmp
jle
stos
mulb
adc
fwait
mov
mov
sub
jns,pn
flds
fsub
stos
lock
lods
movsl
mov
int
sbb
mov
cmp
pop
mov
lea
mov
test
sub
dec
and
pop
cld
je
jbe
adc
lcall
fsts
push
push
movb
scas
push
dec
outsl
ret
mov
clc
inc
loop
aas
into
cld
arpl
lcall
xchg
mov
arpl
jle
sbb
inc
sbb
pop
or
test
mov
lods
mov
mov
xchg
pushf
dec
xor
insl
inc
add
addr16
std
jbe
add
push
insl
outsb
pop
je
scas
sub
pop
js
inc
hlt
mov
push
xchg
sub
mov
jb
cmovp
in
mov
dec
mov
adc
mov
jge
inc
mov
jle
cmp
add
aaa
pushf
sub
xor
lahf
jnp
fwait
xor
mov
and
addr16
out
dec
jp
add
data16
and
ja
stc
adc
jmp
push
jmp
jns
dec
or
cmp
in
nop
pop
lcall
xchg
mov
cmpsb
cmpsl
push
inc
jle
xchg
add
inc
xor
adc
ss
out
dec
and
mov
sub
or
lret
mov
pop
push
in
mov
outsl
lock
shlb
loope
out
in
aad
fstpl
and
enter
pop
jle
pop
stos
cli
xchg
adc
movsl
daa
mov
jbe
jmp
inc
pop
or
fcom
add
mov
das
push
loopne
mov
or
clc
jmp
jl
adc
movsb
ret
jo
and
stos
jb
sahf
jle
jmp
in
and
sbb
test
xchg
xor
or
iret
ret
xor
scas
adc
mov
push
sub
jne
jle
inc
clc
sub
xor
fwait
dec
xchg
out
mov
stos
aas
repnz
mov
adc
sub
adc
inc
cwtl
adc
pop
mov
ja
idivb
jle
popa
mov
test
data16
out
push
jbe
dec
adc
cmp
lods
push
jmp
or
pop
nop
adc
mov
lcall
clc
push
cmc
or
sysret
jle
je
add
fstl
add
fdivrs
clc
cwtl
lods
loope
scas
scas
push
jns
in
cmp
sub
mov
mov
clc
sti
mov
xor
mov
xor
mov
or
sub
ljmp
pop
out
sub
aas
sbb
pushf
or
ljmp
cmp
in
cmp
pop
and
dec
fwait
popf
je
inc
dec
push
das
pop
into
xlat
adc
mul
pop
or
push
lahf
jp
aas
pop
xor
inc
mov
stc
mov
inc
mov
pop
fldcw
in
outsb
mov
sbb
dec
insb
jle
push
lret
sub
and
jns
iret
aam
sub
fdivrs
pop
std
and
loop
sub
mov
lods
adc
sti
pop
jmp
js
aas
loope
push
shll
cs
xchg
sarl
pop
lea
addr16
mov
cmp
and
push
lods
lds
lea
and
aad
jg
jg
inc
pop
das
mov
sbb
adc
pop
sbb
or
xchg
push
mov
outsb
jnp
aaa
fiadds
xor
cmp
jo
mov
inc
mov
out
mov
xchg
hlt
push
or
subb
add
pop
mov
mov
sbb
ret
int3
in
aad
mov
xchg
sub
or
xchg
mov
mov
and
pop
cltd
add
imul
ret
out
sar
mov
sbb
xor
pop
pop
addr16
aad
mov
xchg
test
lds
cmc
mov
ljmp
or
lcall
adc
ljmp
add
cmpsl
ret
mov
jne
mov
or
and
push
scas
jmp
cmp
outsb
inc
icebp
push
cmp
cltd
push
pop
in
mov
push
js
shll
repz
stc
clc
es
loope
loope
or
jecxz
sti
mov
dec
cmp
cmp
test
sub
jle
and
icebp
or
xchg
adcb
das
xchg
insb
es
clc
test
pop
movsb
out
cli
ret
mov
jle
aad
mov
xchg
dec
or
mov
iret
mov
dec
or
cmp
jle
xlat
dec
les
pop
lods
mov
lds
cltd
fcoms
loope
jmp
scas
jle
mov
fisubrs
aas
fisubrs
jmp
add
push
jnp
pop
push
sbb
outsl
xchg
sbb
stos
pop
aad
js
jb
mov
mov
inc
hlt
inc
jle
adc
cs
pop
dec
or
pop
jnp
orl
sbb
popa
pop
pop
dec
push
jae
loope
dec
jle
jne
adc
fsubl
push
pop
pop
mov
es
jbe
popf
pop
loope
ret
cmp
mov
pop
lahf
push
js
sbb
mov
sbb
xchg
adc
push
inc
push
mov
adc
mov
or
xchg
mov
sbb
pop
ficoml
enter
mov
lock
mov
loopne
push
sub
jle
bound
cli
and
into
inc
ficompl
ljmp
push
add
ret
das
pushf
jns
pop
mov
cmp
in
mov
dec
xlat
test
add
insl
mov
fcmovbe
mov
sub
sub
mov
or
aaa
sub
xchg
inc
call
std
push
adc
xor
fwait
or
pause
pop
adc
or
sub
sbb
cwtl
inc
dec
in
cwtl
jp
cmp
fiadds
rcll
or
mov
pushf
js
mov
mov
and
jle
mov
xor
js
mov
rorl
out
mov
mov
and
leave
xor
fs
shlb
and
and
lock
adc
dec
jae
movl
xor
subb
xchg
or
test
mov
fbld
inc
jmp
and
in
jmp
push
cmp
pop
jae
loop
cmp
pop
pop
jle
movsb
jne
outsb
inc
xchg
or
or
call
xchg
out
pusha
jo
out
out
sti
fucom
inc
cvtps2pd
insb
add
pop
adc
das
lods
into
das
jle
push
adc
mov
or
dec
sti
pop
push
pushf
mov
jle
fnstenv
xchg
jecxz
lods
xor
cmpsb
or
loope
sub
ficomps
pop
add
leave
lret
xor
jne
xchg
in
lcall
jb
lea
xchg
aad
addr16
int
xor
adcb
push
in
lods
pop
lods
cmp
test
sbb
add
call
add
lods
mov
fbstp
les
andnps
adc
pop
sbb
xchg
in
aas
sbb
or
add
lds
mov
stos
xor
test
clc
shll
not
test
jb
adc
sub
sbbl
arpl
jle
loop
mov
test
mov
js
xlat
das
fdiv
push
fsub
dec
pop
shll
out
add
adc
pop
lahf
mov
xchg
push
pop
std
nop
dec
rcrl
xor
pop
mov
arpl
pop
and
std
inc
repnz
mull
pop
jno
inc
test
or
xor
jno
jns
fucomip
mov
inc
or
mov
mov
pop
addps
sub
jo
push
mov
or
dec
xor
in
ja
jb
shl
insl
pop
jp
push
hlt
sbb
dec
lret
and
jl
test
jle
push
sub
cmp
pop
push
data16
or
sahf
out
push
lock
nop
add
ja
dec
xor
cltd
push
dec
sbbl
arpl
out
pop
fsubrl
xchg
mov
and
push
inc
dec
punpckldq
pop
aad
and
push
and
test
xchg
lahf
mov
out
or
jl
push
pushf
inc
pop
stc
fs
mov
mov
idiv
movsl
in
std
push
hlt
stos
insb
loopne
jg
and
dec
in
add
and
jle
mov
outsl
mov
jle
push
push
fs
aaa
sbb
sub
les
loop
mov
add
fisttpl
cmp
stos
jge
in
ffreep
pop
xchg
jecxz
lcall
pop
sbb
mov
push
xor
pop
push
jbe
aaa
mov
int3
mov
or
xchg
mov
out
cmp
mov
cmpsl
ja
or
jle
nop
das
mov
adc
es
mov
std
or
push
jae
leave
xchg
cmp
and
loope
or
cli
mov
loopne
pop
jle
stos
mov
nop
inc
leave
mov
mov
aaa
cmpsl
mov
adc
lahf
std
imul
out
add
jle
out
mov
xor
push
pop
or
scas
mov
out
rolb
dec
mov
loopne
push
mov
or
or
push
push
mov
push
ljmp
loopne
in
dec
dec
lret
jns
arpl
lock
insb
out
hlt
push
aam
or
push
xchg
jae
cmpsb
push
sbb
out
xchg
fpatan
test
inc
sbbb
fldenv
clc
xchg
push
mov
shl
movlps
pop
ljmp
pop
sub
int
mov
jle
int3
or
add
push
rclb
and
div
add
xor
cmp
movsl
push
sbb
xlat
adcl
roll
cmpsl
std
test
jns
leave
push
repz
push
orl
mov
add
mov
mov
mov
std
repz
test
inc
or
lahf
adc
int
ja
xchg
and
mov
cltd
mov
jle
push
adc
aam
dec
jl
dec
adc
jge
sbb
mov
xchg
in
test
in
dec
test
leave
jnp
inc
daa
shll
xchg
sbb
adc
dec
push
out
roll
leave
stos
ret
cmpsl
push
dec
jecxz
sbb
test
aad
xchg
adc
dec
fldcw
into
imul
push
sub
lcall
mov
pop
jg
fs
les
ret
mov
sub
inc
popf
cmp
sti
adc
and
mov
adc
pop
adc
inc
add
sbb
out
push
jns
xchg
pop
inc
aad
shlb
pop
sbbl
mov
lock
mov
repnz
jle
daa
stos
mov
add
or
push
scas
push
mov
xor
aas
je
fnstcw
add
dec
mov
adc
jno
pop
sbb
pop
out
jbe
daa
jle
adc
lods
mov
testb
adc
divb
sub
lock
out
repz
jmp
mov
sbb
xor
lgs
or
imul
in
stos
mov
mov
jecxz
sbb
pop
push
in
in
jbe
mov
fs
jae
or
mov
and
out
jne
push
inc
jle
or
push
push
sub
inc
pop
or
adc
pop
rcl
fdivr
lds
or
xchg
xor
dec
bound
and
add
fmuls
rcrl
int3
xchg
std
pop
mov
ljmpw
push
xchg
mov
cli
mov
inc
or
out
stos
add
xchg
lcall
ja
js
inc
dec
xor
inc
pop
stos
stos
mov
shrb
pop
xchg
leave
repnz
aad
pop
sbb
xchg
mov
sahf
andl
int3
imul
and
movsl
fsubl
mov
push
jo
cmp
adc
dec
mov
cmp
jecxz
push
jns
xchg
xor
mov
mov
sti
mov
ret
pop
lds
sbb
sbb
jle
inc
aaa
pusha
nop
add
adc
lods
pop
and
adc
fld
push
jle
pop
pushf
divb
scas
push
pop
cwtl
ret
aaa
pop
repz
cmp
pop
insb
repnz
notl
and
addr16
pusha
sub
add
or
jnp
mov
mov
stc
aad
cli
gs
xchg
jmp
jle
mov
dec
ret
test
rorb
and
shlb
sub
lret
mov
stc
mov
mov
fnstsw
cmc
xchg
or
jae
add
pop
mov
push
lea
cmpsl
jbe
testl
xchg
mov
adc
sub
xor
cld
or
pusha
loope
push
sahf
jnp
loop
adc
int
push
push
push
mov
in
repz
mov
popa
jl
mov
xor
aas
pop
and
cmp
das
fcmove
adc
add
jle
ljmp
lcall
loopne
ja
cld
mov
jg
aas
test
insb
or
scas
divb
xor
cmp
pusha
and
mov
hlt
pop
idivb
dec
dec
mov
shrl
in
in
inc
cwtl
mov
cmp
popf
sbb
inc
insl
fnstsw
jmp
or
inc
and
sub
jae
cmp
les
jl
sbb
pop
movsb
insl
xchg
loopne
pop
xor
scas
icebp
push
mov
lods
dec
or
or
xor
and
dec
mov
fcomp
adc
testb
sbb
pusha
pop
mov
cltd
inc
pop
push
rcl
aaa
or
cmp
or
xor
or
mov
or
in
iret
and
ja
loopne
add
xlat
jb
dec
sbb
add
stos
mov
fbstp
imul
pop
insb
mov
or
insb
dec
mov
imul
jns
dec
mov
movd
xchg
sbb
popa
cmpsl
mov
inc
arpl
or
add
js
push
sbb
cs
mov
mov
stos
in
loopne
push
lret
or
cmpsl
outsb
sbb
fwait
std
and
jnp
mov
ret
pop
mov
and
cwtl
push
mov
pop
std
sub
pop
in
mul
sbb
nop
mov
insb
shlb
pop
cld
xchg
sub
leave
dec
fcompl
mov
icebp
sub
lock
mov
push
es
lods
mov
fcoms
enter
push
mov
lods
and
fdiv
cmp
divb
xchg
mov
mov
clc
test
and
pop
add
dec
mov
xchg
loope
divb
jno
jle
cmp
xchg
stc
xor
and
ljmp
pop
incb
sbb
mov
bound
movsl
pop
add
mov
pop
xchg
gs
xor
push
icebp
scas
sarl
fnsave
mov
nop
jle
push
add
addr16
dec
cmp
lods
mov
cwtl
mov
lret
ja
rcl
aad
and
aaa
sbb
ret
fwait
rorl
es
pop
or
out
jae
mov
xchg
aaa
cmpsl
int
out
lret
test
mov
orl
aaa
fdiv
xor
mov
sti
test
sahf
mov
pop
pop
addr16
sub
xchg
pop
imul
rol
dec
lods
mov
ljmp
enter
xchg
out
mov
mov
mov
xor
ja
xlat
or
pop
bound
push
push
mov
or
sub
push
push
mov
xor
add
lock
dec
xchg
in
ss
andl
push
loop
mov
mov
sbb
mov
fldenv
outsb
pop
scas
lcall
je
mov
pop
sbb
pop
push
mov
ja
xchg
adc
in
out
pop
pop
pop
sub
in
jne
mov
jbe
pop
sbb
mov
dec
push
sub
mov
add
add
sti
stc
mov
mov
mov
loopne
ljmp
jge
stos
mov
addr16
fimuls
ja
cmpb
mov
test
push
int
bound
push
mov
std
adc
mov
xchg
mov
repnz
jge
aas
push
inc
ja
in
mov
sar
pop
push
mov
mov
out
bnd
fisttps
pop
in
je
and
iret
dec
pusha
in
jbe
inc
or
dec
into
sub
mov
test
push
push
daa
clc
adcl
imul
dec
ja
aaa
dec
std
fimuls
xchg
dec
icebp
pushf
sub
mov
dec
andl
cmp
ficomps
cmpsb
xchg
int
xchg
repnz
cltd
sti
sti
jb
inc
fidivs
in
add
test
hlt
fisttpl
xchg
repnz
xor
lods
mov
dec
dec
or
jg
daa
dec
ja
pop
popf
adc
pop
jbe
jbe
into
and
mov
or
inc
cmpsb
out
pop
ss
xchg
movsl
or
cmp
or
shl
mov
xor
pop
inc
gs
divl
push
mov
add
sbb
adc
xabort
push
ss
shlb
sbb
ds
lods
into
iret
scas
mov
push
jnp
std
mov
sti
rolb
push
pop
bnd
cmp
or
or
mov
movsl
xchg
jno
lods
cmp
ja
push
push
lret
mov
and
mov
sbb
add
xor
sub
dec
data16
mov
test
fistps
rcl
rorl
outsb
xor
mov
jle
imul
xor
push
or
test
out
mov
sub
mov
jns
bound
movsb
mov
jle
popl
adc
ret
ljmp
add
push
mov
and
push
cmp
ret
cmp
mov
mov
leave
jns
sub
stc
movsb
mov
in
jbe
xchg
jo
cmpsb
dec
insb
ficoms
push
inc
mov
out
jns
fwait
shlb
sub
loope
ljmp
push
jne
lods
mov
cli
cmpsl
ret
push
mov
out
out
cld
pop
adc
xor
jb
jge
jbe
mov
mov
or
xchg
or
es
js
jbe
adc
cmp
in
call
and
and
dec
mov
lea
fistps
ret
lods
mov
addb
cmp
mov
movl
sbb
fwait
cld
push
out
clc
and
push
insl
cs
imul
or
sub
shlb
and
popf
pop
stc
xchg
pop
mov
repz
adc
xchg
pop
pop
test
cmp
and
inc
cmp
or
movsl
cmp
lret
xchg
mov
xchg
jp
mov
shrb
adc
sarb
test
movsl
cmp
mov
pop
mov
int
test
ret
jmp
je
cmp
and
orl
rcll
rcl
loopne
rcrb
sbb
shll
sub
daa
push
pop
xchg
mov
or
push
jmp
loopne
sub
mov
mov
shl
mov
rolb
psrlw
mov
xchg
cmp
shrl
inc
xor
jle
xor
mov
dec
rorb
test
fs
scas
push
or
dec
int3
jbe
imul
test
out
add
cmpsb
jne
outsb
jle
push
push
repz
cli
outsl
xchg
or
incb
xor
test
sti
pop
inc
add
fwait
shll
push
fcomip
scas
jle
pop
cmc
xor
or
ret
repz
push
xchg
movsb
std
mov
jecxz
mov
sbb
movl
lret
mov
push
cltd
mov
lods
in
imul
mov
pop
xchg
ljmp
jle
and
dec
rcl
aam
add
push
lcall
sahf
into
dec
pextrw
jbe
aaa
mov
inc
andb
fsts
cwtl
add
das
test
shlb
das
adcl
shrl
sbb
push
mov
cld
icebp
xchg
out
aad
sti
int
sahf
aad
dec
jno
lods
mov
xor
pop
mov
loop
mov
mov
gs
sbb
sub
ret
popa
loope
adc
arpl
xor
lahf
mov
push
out
push
inc
xor
jl
jb
mov
sarb
and
adc
test
push
xor
mov
sbb
imul
pop
mov
jae
mov
xor
jge
test
jo
jno
mov
dec
popa
cs
pop
jno
jge
jecxz
mov
lret
mull
mov
dec
ja
jbe
xchg
add
push
lcall
jmp
or
pop
cmp
cmc
fldenv
cmpsl
loop
addr16
mov
mov
sysret
mov
xchg
dec
cmpsb
in
pusha
incl
pop
or
xchg
mov
inc
jns
push
jl
mov
lea
adc
out
out
adc
mov
imul
push
dec
cmp
push
fildl
movsl
pop
sub
jmp
sbb
and
fcoms
and
pop
sahf
mov
sbb
sbb
std
sbb
push
icebp
imul
shll
or
sub
sbb
mov
loopne
movsb
sbb
es
sub
xchg
insb
mov
adc
or
fistpll
and
ds
shrb
push
dec
std
insl
mov
scas
jle
push
int
iret
das
not
or
fcoml
shl
mov
mov
stos
and
fnstcw
lods
cmpsl
pop
insl
lea
jnp
jns
call
sub
rcrb
xor
movsb
bnd
in
aaa
push
pop
popa
cmpsl
dec
es
inc
inc
out
or
jmp
mov
jge
movsb
inc
jb
cmp
rcl
inc
or
pusha
pop
or
jle
sub
or
sbb
rcrl
add
ror
add
test
jbe
dec
stos
lds
xor
and
mov
cmp
adc
push
in
pop
fbstp
sub
decl
mov
loopne
cmp
daa
and
jbe
hlt
adc
icebp
cmp
scas
mov
out
stc
shrl
dec
push
pusha
or
decl
xor
movsl
repz
fisubs
notb
ljmp
fnsave
aad
into
sub
adc
sub
js
xchg
ljmp
xchg
pusha
inc
jno
push
adc
jp
pop
int3
sar
pusha
mov
pop
mov
jl
adc
or
int
lret
sarb
inc
push
test
mov
shrl
cld
add
ja
pop
ljmp
mov
lea
xchg
sbb
mov
pop
mov
adc
push
movsb
lods
cmpsl
and
pop
addr16
test
push
shl
mov
jle
jno
push
or
sbb
popf
add
sbb
or
add
sbb
imul
or
mov
lret
test
push
cmp
push
mov
xor
push
xor
ja
mov
mov
xchg
mov
pop
cmp
sub
mov
push
mov
cmp
sub
in
push
jl
and
inc
jle
mov
add
mov
mov
arpl
push
std
jb
adc
cli
dec
or
cmp
sbb
or
aaa
push
jns
xchg
xchg
mov
push
inc
add
push
scas
loopne
jbe
jbe
out
je
in
adc
xchg
pop
loop
adc
imul
lea
imul
and
pop
dec
sub
jo
sub
push
pop
sbb
mov
cltd
cld
mov
pop
and
aas
out
loop
fisttpll
aam
jnp
mov
lahf
inc
and
push
ds
jle
loope
out
or
int
push
pop
loop
xchg
and
mov
inc
or
dec
xlat
out
lods
decb
lds
testl
push
mov
in
sbb
outsb
jbe
mov
pop
testb
lea
pop
ret
jno
xchg
jmp
outsb
aas
xor
jmp
mov
jns
pop
jo
fisttpl
pop
jp
fwait
iret
std
ja
mov
xor
aas
adc
lret
inc
mov
mov
xchg
scas
enter
jle
push
inc
lcall
push
push
mov
sbb
jle
test
bnd
jl
cltd
loope
xor
fdivrl
xchg
repz
and
dec
and
inc
mov
and
push
call
fwait
pusha
dec
push
mov
lret
and
shll
pop
mov
stc
lcall
aas
dec
daa
xchg
jns
andl
dec
cmp
pop
cmp
pop
imul
cmp
dec
mov
int
and
iret
shl
pop
lret
mov
pusha
fnstcw
pop
sub
or
lcall
add
ret
or
je
xchg
adc
fs
lret
cli
or
cmp
outsb
loop
loope
and
push
and
jae
dec
sahf
xor
dec
jle
mov
in
add
mov
sub
insb
shrb
mov
xor
jp
dec
or
mov
lret
adc
into
jbe
sahf
adc
push
pop
xor
notl
or
pop
dec
stos
fimuls
sub
sbb
sbb
insl
imul
xchg
in
adc
push
mov
cmp
sbb
mull
movsb
mull
cmp
adc
pop
mov
inc
shrl
and
xchg
pop
lret
jno
inc
xchg
xor
dec
jne
pop
ds
xor
lds
mov
jae
cmp
cwtl
lock
gs
push
scas
push
xchg
mov
loopne
xor
push
pop
mov
xor
sbb
popf
mov
sarb
dec
jns
xchg
jmp
fdivrs
mov
adc
sahf
jp
pop
mov
mov
add
pop
mov
xchg
aad
jle
stos
adc
mov
mov
jns
pop
adc
add
shl
sbb
pop
test
sbb
cmc
jbe
and
divl
push
jo
or
cli
xlat
xor
jns
adc
xchg
pop
pop
mov
out
push
dec
ret
push
pop
out
or
mov
or
xchg
pop
sbb
mov
js
adc
pop
cmp
mov
xchg
insl
xor
dec
imul
lret
xchg
xor
and
das
sahf
roll
mov
jle
xor
out
jmp
or
jge
scas
loop
rclb
pop
or
les
jns
jnp
repnz
xchg
sub
gs
inc
mov
addr16
cmc
jb
outsl
or
mov
int3
lods
mov
push
out
sbb
jle
mov
pop
lret
ds
jle
mov
and
loope
enter
mov
pop
sbb
push
bound
loopne
nop
add
xchg
imul
sti
inc
std
iret
mov
leave
sub
loop
in
or
or
ror
inc
mov
mov
dec
pop
xchg
adc
insb
push
adc
cmp
or
mov
xor
pop
int
dec
jle,pn
cmp
add
int
scas
mov
ret
adc
push
add
adc
mov
mov
dec
mov
jno
sbb
mov
cmpsl
or
jg
aad
xor
sarl
stc
xchg
push
or
push
jle
cmpb
je
jno
mov
es
pop
cld
push
add
movsl
sbb
fld
mov
js
pusha
or
adc
sub
mov
or
inc
testb
adc
pusha
and
in
into
div
ds
ljmp
insb
lods
and
fcoml
mov
jns
gs
fcomp
fdivl
sub
aaa
add
mov
rcrl
ds
ret
notl
mov
icebp
lock
mov
mov
or
jge
mov
out
mov
aaa
sub
outsb
jae
cmp
adc
inc
push
mov
movsb
stos
idiv
ss
push
int
loop
mov
aas
test
or
fxch
or
jno
sub
add
xchg
sti
mov
sahf
sbb
pusha
sub
ja
inc
cmc
jge
sub
out
andl
sub
jnp
in
jbe
adc
mov
or
hlt
bound
mov
test
and
jo
or
jp
bound
shl
ret
mov
sub
or
sbb
push
popf
mov
lret
xchg
in
pop
mov
aam
fnsave
and
push
or
stos
call
repz
out
aad
push
addl
cld
pop
push
sub
xchg
xchg
rcrb
cld
xlat
pop
inc
dec
xor
testb
aad
sub
bound
and
lods
mov
adc
xchg
test
arpl
and
mov
jg
jbe
mov
adc
or
int
sarl
mov
fs
imul
inc
iret
icebp
ds
test
lods
ja
xlat
pusha
xchg
cmpsb
lcall
jmp
cmpsb
inc
out
das
test
clc
pop
sahf
shrb
or
loope
stos
inc
aas
ret
xor
cmpsb
rcrl
call
adc
dec
sbb
int
mov
ja
sub
or
push
ret
push
jbe
mov
push
push
or
sbb
pop
mulps
shll
cmpsl
inc
outsb
push
mov
inc
out
or
popf
sub
push
rcrl
inc
rorb
out
into
test
and
mov
or
insl
pop
xchg
xor
inc
dec
rcrb
push
push
in
push
or
jmp
mov
sbb
jns
cmp
sbb
pop
dec
push
out
dec
loopne
rcrl
pop
xorl
std
mov
or
push
xchg
cmp
test
ja
data16
push
dec
sub
push
mov
mov
mov
int3
inc
sbb
pushf
mov
add
dec
iret
jns
inc
inc
cmp
mov
mov
loope
or
adcl
jle
pop
or
and
or
jl
cmp
cmpsb
imul
sbb
add
pop
push
inc
sub
into
lahf
jns
mov
inc
inc
lahf
inc
cltd
sbb
mov
mov
and
bound
test
orl
mov
sbb
clc
push
cltd
inc
leave
movsl
or
cld
push
mov
mov
and
leave
jg
out
or
clc
in
cmc
pop
fcompl
mov
fildl
sbb
rcrb
xchg
std
adc
out
daa
addl
sub
jle
adc
enter
js
mov
jge
push
mov
adc
sub
pop
or
iret
hlt
xor
fbld
aaa
and
push
inc
pop
fwait
mov
mov
push
sbb
jge
or
ficompl
ret
pop
pop
loope
jb
dec
cs
int
add
inc
sub
xor
lcall
out
xchg
pop
mov
push
push
cs
jne
pop
rol
clc
outsb
test
mov
mov
cmp
fnsave
adc
xorl
cmp
jle
bound
test
jns
pop
lods
fs
dec
icebp
sbb
adc
mov
lods
ret
shl
inc
mov
jns
imul
pop
adcl
mov
and
sahf
mov
jp
jge
pop
or
mov
xchg
dec
pop
test
jge
rcll
add
add
movsl
testb
cmp
sub
sbb
adc
or
dec
sahf
sub
outsb
dec
push
sbb
clc
das
xchg
inc
fdivrp
mov
mov
push
cmp
mov
lahf
pop
or
mov
or
flds
mov
jb
jnp
out
in
mov
shlb
or
test
inc
add
mov
int
rcll
xchg
xorb
mov
mov
test
sarb
add
pusha
or
push
mov
dec
mov
mov
imul
xor
pop
aad
movsl
incb
jmp
cmpsl
sbb
lahf
mov
scas
inc
lcall
dec
xchg
pop
jo
gs
outsl
mov
in
pop
cwtl
fcoms
push
cltd
adc
notb
jns
lock
call
mov
adc
xor
sbb
and
xchg
clc
sbb
rclb
dec
mov
cmp
test
out
addb
pop
test
pushf
sub
and
jae
hlt
xchg
push
mov
rcll
mov
jl
inc
jbe
push
and
jno
cli
mov
push
lret
pushf
sbb
popf
mov
mov
inc
test
pop
cmc
aaa
int
push
loop
jmp
sub
imul
aaa
pop
jecxz
jbe
mov
ret
int
or
iret
sub
in
inc
pop
or
or
cmp
sti
call
cmpsl
popl
mov
sbb
pop
clc
adc
or
jle
sbb
lods
sbb
pop
add
inc
int3
jmp
jne
xchg
pop
es
pusha
shrb
movsb
iret
cmc
fwait
ss
mov
ljmp
idivl
add
jp
shrb
inc
push
mov
xor
sbb
lcall
pop
jnp
cs
iret
scas
jae
mov
and
xor
addr16
mov
js
imul
pop
fcoms
xor
push
or
sbb
sub
js
ljmp
dec
xlat
add
stos
adc
sbb
js
movsb
mov
mov
pusha
add
cwtl
adc
mov
jns
lods
mov
cmc
test
dec
sbb
outsl
cli
jmp
lods
test
xchg
or
dec
xchg
ret
push
or
scas
pusha
xor
inc
inc
mov
filds
and
add
push
mov
cwtl
in
cs
adc
or
in
and
pop
xchg
pop
movsb
mov
xor
cmp
xchg
inc
and
cmp
aad
roll
cmpb
pop
adc
imul
arpl
dec
ds
cwtl
xchg
or
insb
ja
pop
lods
mov
pop
jle
bsr
cmp
pop
das
in
and
adc
iret
fs
xlat
arpl
fst
mov
lea
inc
sbb
dec
cwtl
mov
jno
test
iret
out
push
std
add
pop
inc
or
in
sbb
pop
das
scas
mov
lds
jecxz
push
ret
scas
pop
jns
clc
jl
push
movsb
ljmp
adcb
mov
add
out
mov
cmp
setne
mov
add
aas
xor
xor
dec
mov
add
xor
cmp
je
push
pop
fstpl
dec
and
push
pop
sbb
xchg
test
or
and
es
fcompl
inc
xor
mov
sbb
mov
mov
sbb
cli
shl
or
jmp
lea
fistpl
div
or
hlt
scas
stc
mov
aad
int3
add
scas
push
and
lock
mov
pop
inc
inc
lret
jbe
ret
jnp
negb
ret
out
jnp
xchg
adc
orb
pop
pop
pop
sarl
sub
mov
pop
outsl
movsb
pop
fwait
mov
xor
lods
dec
inc
pop
ja
bound
mov
inc
mov
push
pop
adc
sbb
mov
das
inc
sahf
pop
mov
in
jne
xchg
stos
sbb
sbb
jns
enter
sbb
mov
into
cmpsl
jns
or
loope
ret
sahf
push
bound
lret
in
mov
jp
inc
pusha
pop
fcompl
dec
lcall
cmp
sarl
xchg
dec
mov
ss
incb
cli
shlb
mov
je
mov
pop
and
mov
cmp
in
rcrb
push
fucom
js
sahf
mov
out
pusha
ljmp
cmp
mov
iret
mov
and
pop
pop
mov
jns
pop
scas
pop
jle
mov
sbb
or
push
pusha
bnd
mov
mov
jns
add
cmp
pop
roll
pop
inc
dec
xchg
add
and
mov
xchg
jp
imul
loop
mov
clc
int
and
pop
dec
orb
cmp
lret
bound
push
bound
mov
mov
xor
pop
adc
jne
pop
es
in
cmp
addr16
mov
popa
popa
sub
cld
sub
js
sahf
dec
hlt
loop
aam
mov
pop
add
mov
fidivrl
clc
popa
push
je
jge
add
clc
xor
xor
in
insb
cmp
inc
or
sub
nop
jp
test
movsb
adc
les
sahf
cli
inc
in
ss
test
out
and
xlat
pop
cld
adc
push
push
jb
pop
arpl
addr16
xchg
sbb
fwait
or
cmp
cmpb
into
insl
xor
subb
cmp
xchg
test
rorl
jbe
gs
repz
add
js
rcrb
dec
cli
aaa
add
dec
repz
cmp
push
jl
int
or
sbb
cltd
and
nop
sbb
fs
js
cmp
xchg
lretw
test
push
test
ds
xchg
mov
inc
jb
and
cwtl
jle
or
pop
test
dec
into
push
adc
jecxz
inc
jne
stc
xchg
out
sub
jle
pop
mov
fs
addl
mov
leave
pop
sub
scas
aam
jle
jne
out
pop
xor
or
mov
xchg
sbb
cltd
add
pop
outsl
add
shlb
ret
ja
xchg
xchg
ret
cmp
dec
add
fmul
test
jp
ret
test
jbe
shl
pop
xorb
xchg
stos
pop
sub
sbb
shrl
movsb
mov
jg
loop
mov
xchg
rcrl
push
es
pop
jmp
push
mov
adc
fldenv
sbb
lods
mov
cltd
ret
aas
fcomip
cmc
mov
jl
mov
orl
push
bound
sub
adc
test
stos
in
pop
jp
rorb
mov
test
xchg
dec
je
dec
fs
sub
lds
mov
adc
pop
jo
divl
cmpsl
sarb
pop
jns
shrl
push
pop
and
inc
aaa
pusha
cmc
gs
mov
les
mov
decl
jns
lcall
lea
xchg
inc
cld
je
adc
xor
lahf
inc
mov
push
orl
cli
out
mov
jecxz,pn
push
adc
in
mov
fwait
repz
cmp
andl
push
iret
ficoml
scas
jle
scas
cs
insl
add
or
shl
fstp
aam
mov
js
aaa
mov
lret
sbb
movsb
jle
cmp
cmpsb
lods
lock
rcl
outsb
int
jle
pop
xchg
les
pop
roll
mov
jbe
or
std
sub
ficoml
mov
pop
in
sbb
loope
mov
jle
xchg
jg
fstl
ja
sbb
jmp
xor
aam
in
mov
jne
push
out
fdivs
xor
adc
sbb
cmp
popa
ret
inc
pop
jns
insl
fisttps
mov
inc
jae
lods
or
mov
mov
jecxz
push
xchg
jg
call
xchg
ljmp
movsl
lret
push
aad
out
mov
aam
imul
xor
sti
jbe
stos
sbb
pop
sub
mov
inc
andl
jge
test
pop
sbb
pop
and
cmp
jl
rcl
popa
jp
adcb
pushf
pop
sub
iret
ja
aad
call
inc
xchg
adc
imul
cwtl
iret
aam
aad
lret
push
pop
aam
call
cmp
or
or
add
xor
out
inc
mov
and
push
cltd
xchg
sbb
dec
pop
jo
clc
enter
cmp
jmp
jo
scas
and
inc
sub
test
testl
test
mov
add
xor
test
not
cmpsl
rcrb
mov
mov
pop
ss
add
mov
mov
mov
or
or
inc
nop
out
mov
xchg
xorb
jge
xor
adcl
imul
dec
hlt
pushf
add
push
je
adc
loope
cmc
cmp
sub
pop
mov
sbb
loope
xchg
adc
xchg
loop
cwtl
sbb
jbe
lcall
in
imul
add
gs
cmp
mov
out
das
test
fsubrl
int
mov
fldcw
push
cmp
idivb
out
out
outsb
ret
and
sub
dec
mov
sbb
and
sub
dec
nop
mov
sbb
or
test
mov
jge
jle
push
imul
inc
daa
jbe
adcb
pop
xor
or
sub
push
repnz
ret
in
adc
jecxz
jns
cmp
jecxz
lods
cltd
cli
sbb
sub
jle
dec
mov
mov
sub
adc
inc
mov
imul
data16
outsl
sti
sbb
jbe
jge
fs
add
cld
das
subb
xchg
mov
les
pop
movsb
jbe
insl
cmp
mov
sbb
or
arpl
std
sbb
cwtl
ljmp
clc
fldl
push
xor
movsl
in
sahf
loopne
in
sarb
adc
clc
jecxz
and
mov
mov
fstpt
dec
andb
stos
jl
cwtl
mov
cmpsb
or
jnp
rclb
out
mov
push
adc
sbb
and
sub
or
sti
arpl
pop
cmp
cmp
pop
xor
pop
ss
loopne
jns
movsb
mov
jmp
mov
in
sti
mov
xchg
mov
lods
in
ret
sbb
loop
out
inc
es
shrb
cld
pop
xchg
dec
clc
mov
test
addr16
pop
orl
lret
or
jp
les
sahf
cltd
push
mov
jbe
push
pop
pop
roll
push
dec
hlt
jp
mulb
test
fdivrs
fldl2t
push
mov
iret
fiadds
int
and
in
pusha
xor
movb
sbb
xchg
dec
sub
adc
xchg
dec
jno
cmp
or
and
mov
stos
mov
adc
pop
arpl
jns
ficompl
stc
inc
enter
inc
mov
mov
or
mov
cmp
cmp
fs
jnp
sahf
mov
xor
jle
push
add
std
xchg
aas
mov
sbb
xorb
in
sbb
lret
pop
or
push
pushl
hlt
mov
in
mov
sbb
inc
and
jle
popf
cwtl
mov
or
inc
adc
pushf
shlb
stos
sahf
lret
loopne
fcoms
mov
push
pop
pop
sbb
inc
mov
lret
add
or
push
fwait
cmp
in
ds
das
out
es
push
addr16
add
rol
aas
jp
clc
mov
filds
roll
sbb
sub
pop
adc
popa
jle
fstp
fbld
imul
jne
mov
ficompl
cmp
rorb
push
call
test
fcomip
pop
pop
mov
sub
popf
jle
pop
jmp
icebp
or
dec
xlat
dec
mov
mov
lds
jmp
xchg
test
ss
xchg
xchg
test
enter
repnz
fildll
or
xchg
add
dec
cmp
ret
jbe
jnp
xchg
pop
pop
lcall
cmpl
ss
or
push
sub
pop
jne
mov
sub
fwait
test
push
dec
inc
add
in
fisttpl
dec
rcrb
test
repnz
push
in
dec
mov
aad
sbb
enter
and
inc
inc
and
push
mov
mov
and
out
ret
mov
outsb
mov
pop
movsb
mov
ja
sbb
and
mov
xor
shlb
jp
fisttpl
sub
xchg
call
push
mov
add
aas
outsl
mov
mov
aam
pop
dec
dec
cli
push
add
aam
mov
mov
in
dec
fmuls
push
pop
dec
adc
pop
rcr
scas
divl
test
xlat
decb
insl
jo
shrb
lods
bound
mov
push
and
in
jno
cmp
or
or
mov
arpl
dec
mov
sub
out
imul
xor
push
and
push
dec
lcall
nop
mov
or
fsts
sbb
xchg
in
fsubl
xor
movsb
cwtl
fmulp
and
cmp
repnz
movsb
mov
ss
filds
cli
fadd
fstp
xor
mov
mov
aas
shrl
jb
adc
xchg
shl
mov
jne
lea
or
adc
stos
sub
inc
bound
sub
lea
jne
call
adc
in
xor
lahf
xchg
sbb
mov
jmp
mov
adc
inc
mov
in
push
mov
and
aam
mov
mov
cmp
outsl
xchg
xchg
popl
jmp
test
iret
stos
dec
mov
xor
cmp
outsb
xor
rcrl
mov
aad
cwtl
sbb
cmp
dec
aas
mov
jbe
lods
imul
mov
sti
sub
test
lcall
mov
jle
add
jnp
dec
fcoml
mov
adc
or
xchg
jmp
cmp
push
inc
sub
pop
xor
mov
push
fnstsw
cltd
insb
dec
or
icebp
fmul
int
shr
rolb
aam
jg
push
imul
or
jo
jecxz
dec
mov
cmpsb
xor
or
jge
mov
and
rolb
addl
into
xchg
mov
in
fldcw
sbb
dec
xor
sub
adc
jle
lds
sahf
into
bound
pop
lock
jp
insl
jle
jg
push
inc
push
mov
lcall
cmp
push
cmpb
mov
xchg
lahf
xlat
loopne
jp
cmp
pop
and
cmp
mov
fimuls
push
and
stos
loopne
mov
sub
loope
sub
hlt
outsl
or
mov
fidivrs
les
outsb
sub
jle
aas
add
push
roll
pop
sbb
mov
xlat
push
test
sub
data16
adc
xchg
ss
jle
imul
sbb
jno
or
aaa
push
jne
pop
push
cmpsl
insb
jle
push
xor
push
or
loope
mov
pop
sbb
push
ret
rclb
ss
lods
or
adc
into
add
movb
lods
fdiv
mov
cmp
test
aad
mov
mov
std
rcrl
mov
movsl
loopne
mov
inc
lcall
data16
jbe
sub
cld
pop
in
aas
adc
out
movsl
or
fwait
jle
int3
fcomp
mov
xchg
decb
lods
int
pop
movsl
fisttpl
inc
rorl
nop
cli
pop
lahf
jge
push
or
inc
cmp
ds
fbld
mov
or
sbb
jns
or
push
call
jg
xchg
add
cmpsl
cmp
mov
fstl
or
sbb
ficomps
pop
jnp
push
shll
out
push
es
inc
fstpl
ljmp
add
int
or
mov
leave
in
repnz
cmp
xor
mov
pop
movsb
int
fnstcw
jbe
cmp
jp
xchg
hlt
or
ljmp
lret
cli
orb
mov
mov
repnz
stc
in
ret
mov
movsl
sti
add
and
jle
leave
scas
into
dec
push
or
mov
or
mov
xchg
inc
fcompl
in
cmp
jnp
repz
lret
xchg
es
pop
adc
ret
mov
inc
mov
out
repnz
cmp
sub
es
mov
rcl
jmp
mov
lret
js
ja
lahf
lock
push
mov
stos
rcrl
nop
jecxz
and
andl
shll
repz
mov
add
aaa
xor
fists
js
out
push
dec
stc
hlt
testl
fisubs
xchg
mov
dec
fcoml
adc
lock
inc
ss
dec
pusha
and
cwtl
xchg
push
sbb
jbe
repz
es
mov
inc
jno
xor
mov
or
cmp
pop
add
popf
outsl
sbb
lret
adc
jo
dec
int3
dec
popf
or
aad
lahf
mov
movsb
aas
stos
or
xchg
mov
and
sbb
xchg
inc
pusha
or
lret
or
xchg
push
addr16
les
and
sbb
fcompl
cmp
lods
or
inc
out
mov
mov
xchg
lret
aaa
jne
jne
jecxz
mov
jp
sbb
outsl
popf
popa
cmpb
xor
xlat
jno
add
int3
and
mov
mov
pop
jle
sti
mov
or
fcoms
stos
push
jle
clc
iret
gs
sub
inc
out
loop
or
pop
cmpsb
push
scas
cltd
jle
cmpsb
mov
push
sti
push
inc
mov
dec
insb
inc
or
sbb
xor
je
jo
addb
packsswb
or
add
cmp
or
jns
push
dec
mov
outsl
or
in
stc
pop
aaa
shl
add
in
jns,pt
lcall
jae
and
shl
lea
jnp
mov
scas
cwtl
pop
xchg
data16
pop
inc
bound
pop
stc
mov
stos
mov
xchg
sbb
sub
dec
and
cli
sub
jo
push
sub
mov
fidivrl
inc
test
sub
dec
push
pop
mov
mov
mov
cli
pop
cmp
cmp
mov
in
pusha
sarb
out
lds
out
dec
inc
add
loopne
mov
mov
loopne
cli
and
pop
dec
xchg
out
and
inc
mov
mov
push
aaa
push
sbb
andl
loope
scas
mov
mov
mov
iret
adc
dec
ss
fmul
adc
fucomp
xor
arpl
pushl
sbb
ja
aam
add
cmc
ficoml
pop
pop
hlt
stos
leave
clc
cmp
mov
sbb
or
int3
pushf
mov
movsl
imul
rclb
mov
jmp
enter
pop
mov
rorb
repz
and
fadd
jl
sbb
test
xor
cmp
sbb
push
insb
lcall
cmp
pop
mov
test
push
dec
cs
aad
jbe
inc
or
pop
cmp
dec
mov
cmp
push
andl
je
test
clc
cs
and
pop
sbb
or
jle
mov
mov
ja
orl
cmp
in
xor
leave
jbe
insb
cmp
xorl
out
mov
sub
lods
jmp
push
inc
js
cld
popf
ja
loop
mov
inc
xchg
jbe
scas
sbb
insl
push
stos
jle
lods
mov
popa
mov
add
mov
aas
cmpl
adc
adc
push
fsubrl
bound
cmp
inc
add
pop
scas
adc
and
adc
scas
sbb
insb
mov
mov
xor
lods
ret
adc
jne
fidivrs
js
or
sub
xchg
adcb
test
push
sub
fists
leave
adc
xchg
ret
mov
lds
inc
movl
jle
xor
inc
jle
mov
push
out
and
pop
rol
out
mov
lret
ret
mov
das
xor
and
jl
pop
clc
cmp
nop
mov
add
sarl
and
jmp
mov
movsl
lret
js
cli
inc
inc
xchg
inc
inc
dec
lcall
scas
fcmove
jecxz
and
and
nop
mov
dec
mov
and
stos
cltd
mov
in
scas
sbb
cmpsl
insb
cli
test
pusha
jle,pn
or
push
push
or
and
pop
mov
aas
insb
add
pop
test
xor
cmp
or
lret
xchg
mov
les
scas
push
push
imul
push
imul
jae
shl
sub
test
jl
ret
test
fbld
inc
cmp
jbe
add
inc
fadd
clc
data16
xor
sbb
inc
imul
aad
movsl
mov
mov
cmpsl
cltd
mov
and
or
jno
push
inc
xlat
or
dec
daa
outsl
pop
bnd
or
imul
je
jle
xchg
sub
sub
fldl
dec
std
jb
test
lcall
jmp
repnz
cmp
push
adc
in
sub
enter
or
nop
stos
jle
push
shll
or
inc
lea
int
lock
push
aas
fs
aas
pop
out
fstps
add
dec
dec
std
mov
add
pushf
cmp
cmp
sets
push
aad
frndint
imul
lods
lret
sbb
icebp
pop
mov
mov
or
inc
cmp
fists
mov
mov
pop
xchg
mov
sub
jge
mov
mov
clc
cwtl
cli
sub
aad
mov
jle
mov
jle
out
fcmovb
flds
push
leave
jecxz
push
iret
xchg
xor
aad
rcrb
adc
mov
pop
mov
lcall
mov
sti
sbb
mov
jb
inc
in
mov
jmp
cmp
add
mov
inc
push
in
fldl
or
mov
mov
mov
xchg
cmp
lds
add
cmp
pop
xor
pop
insl
jbe
xor
ret
sarb
fs
pop
movsl
lods
loop
mov
sahf
sti
leave
in
into
sub
clc
add
lds
jle
xchg
int3
mov
mov
dec
jp
movsl
or
mov
push
dec
pop
mov
or
out
das
mov
cmpsl
push
shll
imul
mov
shll
dec
sub
imull
ja
mov
ret
call
or
in
xor
jnp
inc
jns
sbb
sbb
sub
or
out
aaa
stc
pop
insb
test
xor
cmp
and
and
ret
scas
int
outsb
test
or
roll
adc
les
cltd
dec
test
mov
inc
ret
mov
jb
movl
push
xchg
test
adc
xor
jle
pushf
push
sub
or
out
int
mov
shlb
out
adc
std
mov
movb
jb
pushl
cli
aas
sub
stos
mov
jno
sbb
adc
icebp
jbe
std
ja
xor
nop
out
push
mov
dec
in
cmpsl
jle
dec
gs
lret
sub
jae
out
call
mov
sbb
and
push
push
jecxz
cld
into
cmp
xchg
dec
xor
pop
loope
in
jno
xor
repnz
int3
push
add
xchg
jo
daa
or
stc
popa
sub
jmp
xchg
xchg
repz
clc
loopne
cmpsl
mov
fnsave
cli
dec
outsb
jl
jnp
or
daa
adc
movsb
cmc
jb
inc
jge
pop
aam
test
pushf
mov
xchg
or
pop
jnp
xor
je
and
or
sbb
test
lahf
mov
jmp
jbe
mov
push
fcomps
decb
enter
xchg
xchg
sahf
cmpl
mov
or
sub
sub
mov
inc
int
cmp
push
adcb
push
mov
xchg
fisubl
lock
xchg
enter
insb
lret
cld
cmp
in
sbb
lret
add
adc
addl
inc
lahf
and
or
cmp
bound
pop
sbb
inc
cmp
test
imul
mov
popa
ss
aas
sbb
je
jl
jle
jbe
inc
mov
pop
push
mov
sbb
cmpsl
cmp
popa
fstps
js
push
sub
add
and
and
test
adc
or
stos
jl
push
mov
jle
in
adc
or
inc
sub
sbb
mov
shl
or
dec
and
sub
push
add
rorl
loopne
xor
jg
inc
lods
xchg
mov
jp
cmc
mov
jmp
or
push
mov
aaa
stos
jle
sbb
sti
popf
or
insb
lds
fnstcw
xchg
add
jl
xor
mov
dec
shrb
mov
rorb
xor
ds
sub
push
stos
fdivl
or
sti
bound
test
mov
cmp
pop
clc
pop
adc
inc
mov
dec
and
and
jl
or
aas
cmp
xor
inc
dec
out
dec
leave
loopne
or
std
enter
jle
pop
mov
sbb
out
mov
inc
jle
jbe
les
dec
jp
mov
or
mov
mov
dec
pop
xor
decb
xor
inc
rorb
or
ret
and
push
or
fbld
ret
scas
sub
imul
mov
xchg
adc
jmp
into
sub
pop
ret
rcrb
popf
sbb
addr16
ret
mov
lods
add
outsb
inc
nop
mov
ds
sarb
mov
mov
andl
and
iret
shr
mov
in
es
dec
adc
jb
divb
nop
cmp
js
push
leave
or
jge
movsl
mov
sbb
mov
mov
mov
xchg
clc
add
pushf
or
into
xchg
mov
paddw
mov
aaa
daa
xchg
sbb
ficompl
bound
das
inc
enter
rolb
mov
adc
aam
mov
sbb
testl
cmovl
loopne
lock
cmpsl
jle
jecxz
pop
adc
aam
or
pop
mov
jno
xor
fstp
lcall
add
into
fwait
jb
ja
cmp
or
push
mov
or
stos
mov
xlat
repnz
ljmp
and
mov
ja
jnp
mov
shlb
push
out
and
pushf
clc
or
and
sub
aad
or
mov
mov
out
fistpll
dec
xchg
xchg
stos
cmc
leave
jbe
inc
iret
stc
mov
mov
incl
das
xchg
pop
fdiv
rcll
mov
mov
xchg
fistl
cli
leave
and
call
mov
or
inc
or
add
lret
leave
loop
test
faddl
leave
mov
ret
ds
fidivrl
fwait
jnp
xchg
pop
jp
xchg
cmpsb
aaa
cmp
mov
insl
in
add
or
outsb
clc
inc
push
push
cmpsl
jl
and
loopne
rorl
push
inc
cs
fadds
hlt
ja
jg
add
into
or
push
fdivr
jns
and
fs
jle
dec
push
mov
lds
test
addl
mov
push
clc
jbe
hlt
nop
mov
mov
cld
sub
sub
psllw
pop
sbb
mov
aad
pop
pushf
cmp
movsl
and
shll
and
jle
imul
and
jbe
mov
aas
adc
push
leave
adc
movsl
dec
jb
mov
jle
sbb
add
dec
lret
sbb
fldl
cs
stc
pop
sbb
mov
jle
pushl
pop
add
in
pop
lods
clc
mov
add
adc
imul
popf
adc
pop
cmp
jle
or
fdiv
ret
or
cmp
rcrb
push
imul
adc
aad
or
test
and
outsb
js
or
lret
aad
cmp
out
pop
pushf
push
addr16
jp
jmp
pop
xchg
push
rcr
or
jge
pop
push
test
sub
lds
or
or
aad
aaa
fisttps
cmp
xchg
je
sbb
insl
jmp
mov
mov
inc
adc
outsb
inc
add
ljmp
imul
mov
jecxz
insb
mov
pop
popa
push
cltd
mov
sub
push
sbb
xchg
in
adc
pop
jb
inc
imul
cmp
push
xchg
int
inc
sbb
lods
mov
ja
mov
lret
rorl
pop
pop
fcmovne
mov
movsl
jle
cli
test
imul
es
push
mov
fs
popf
stc
push
pop
cmpb
cmp
mov
ret
outsl
popf
sbb
add
popa
loop
lahf
dec
in
stos
arpl
cmp
pop
xchg
jle
outsl
movsb
lock
movl
xlat
rclb
xchg
sbb
sbbb
jns
mov
or
dec
cmp
iret
cmp
in
and
int3
jl
aaa
cmp
out
movsb
ss
or
and
jmp
dec
sbb
imul
push
add
orl
in
ja
loope
jae
dec
inc
mov
push
sub
pop
or
push
adc
push
fimull
xorb
jle
jnp
dec
roll
insb
pop
pop
inc
mov
stos
repnz
sub
mov
sbb
enter
cmc
pusha
fsts
insl
push
or
ljmp
cmc
mov
hlt
jb
xor
les
movsl
mov
enter
or
lcall
aaa
fistl
mov
ja
or
push
sahf
repnz
cli
or
and
lock
stc
inc
or
xor
and
xor
xchg
cmp
aam
in
pop
mov
sub
push
pop
cltd
icebp
es
add
add
push
dec
and
pop
push
push
cmp
or
lock
and
jbe
inc
sub
jnp
scas
or
je
mov
mov
data16
out
cwtl
push
sbb
mov
xchg
adc
sub
sbb
fildl
mov
jae
xorb
jle
cs
in
icebp
lods
jns
in
lret
cmp
mulb
or
shrl
mov
sbb
js
jne
movsb
xor
mov
jbe
xor
test
inc
stos
loopne
aas
push
popa
sub
sarb
mov
jne
call
adcb
xchg
cmp
cmp
mov
mov
add
adc
add
lods
stc
es
bound
sub
dec
inc
fsubs
mov
sub
xchg
imul
pop
fisubrs
adc
add
into
outsl
xor
test
xor
pop
add
pop
pop
popf
dec
mov
in
icebp
out
pop
call
jge
push
add
scas
cmp
add
and
sub
cmp
add
fwait
jecxz
mov
mov
inc
xchg
xorl
ss
mov
jge
sbb
dec
lods
or
aaa
cmp
clc
push
shl
adc
dec
cmp
int3
aaa
mov
push
mov
sub
and
int
mov
adc
mov
out
pop
mov
jle
outsl
adc
loopne
or
scas
xchg
lret
mov
push
mov
push
mov
cld
mov
push
fdivp
pop
ljmp
scas
or
cltd
inc
sub
jg
jle
jge
ret
adc
mov
and
push
cmpb
sbb
in
mov
jns
test
or
mov
aaa
inc
sbb
enter
dec
data16
sub
shrb
aam
jns
jo
enter
jle
mov
gs
loop
or
mov
cmpsl
std
das
imul
or
out
sub
aam
fisubl
mov
or
sahf
adc
lea
sbb
push
inc
loopne
add
mov
xor
sarb
mov
ret
aad
jle
sbb
pop
adc
test
test
add
mov
hlt
push
fucomp
or
sbb
inc
clc
lods
sbb
xchg
aaa
mov
test
push
jne
mov
aad
xchg
mov
das
into
ss
jle
cmp
xchg
addl
dec
inc
sar
or
adc
shlb
cmc
add
arpl
add
xor
sbb
test
std
cmp
out
icebp
add
or
lock
push
data16
leave
xchg
inc
test
mov
add
test
pop
jmp
add
call
add
inc
lret
xor
push
inc
lret
push
and
xchg
pop
and
icebp
sub
movsl
sbb
pop
fnstsw
push
add
in
dec
iret
stos
sti
jle
mov
mov
shrb
or
xchg
cmp
lods
fnstenv
fwait
xor
test
test
add
out
mov
cmp
push
loopne
sahf
mov
shll
insl
sbb
pop
enter
and
or
adc
add
ffreep
pop
xchg
xor
imul
or
in
xor
dec
or
std
xchg
dec
pop
je
mov
xchg
pop
out
dec
loopne
movl
push
sbb
in
divl
jle
xchg
lea
inc
imul
mov
jnp
cmp
mov
and
jmp
mov
push
inc
or
mov
mov
push
jl
pop
nop
sub
iret
adc
xlat
std
pop
mov
inc
sbb
scas
push
sub
pop
add
rorb
push
mov
jg
clc
sub
std
xchg
sub
and
arpl
mov
dec
rcr
jg
jns
pop
and
cmc
and
and
or
mov
add
sub
popa
sbb
nop
jle
dec
shl
call
ret
clc
icebp
pop
fidivrl
jne
icebp
dec
mov
cmpsb
ret
cld
jnp
inc
stc
cmove
mov
lret
dec
and
sub
xchg
pop
jns
lock
jle
cs
jl
lcall
cmpsb
fs
mov
jle
adc
popf
sub
jle
out
xlat
jo
rorb
push
mov
jbe
push
sahf
sbb
jge
lods
mov
jbe
pop
insb
add
rcll
into
mov
xor
pop
lcall
pop
and
fmuls
sub
insb
mull
and
or
out
sub
into
pop
lahf
sbb
addb
xchg
dec
xchg
repz
in
fnstsw
or
xor
movsl
sub
jbe
push
and
xor
popa
fmuls
inc
int3
in
mov
daa
and
push
lahf
cmp
push
je
lock
lret
cmpb
lcall
or
rorb
cmp
pop
jle
and
xor
pushf
hlt
cmp
aas
mov
in
mov
in
mov
pop
pop
dec
xchg
or
add
or
and
xchg
hlt
dec
popa
or
mov
inc
jbe
lcall
push
pop
sub
js
in
pop
pop
inc
add
or
mov
or
pop
imul
sbb
or
jns
mov
push
or
cmp
arpl
or
jae
or
xlat
and
mov
ja
push
inc
sbb
xchg
inc
ja
add
jle
jp
cwtl
jecxz
flds
or
xchg
pushf
inc
jl
leave
push
jns
mov
and
jbe
ljmp
pop
jno
push
pop
mov
imul
inc
sbb
jne
dec
jg
test
pslld
repnz
or
fidivl
js
and
mov
jmp
fisttpl
lahf
sub
jae
xchg
jmp
pop
repz
int
imul
lea
dec
jb
ret
lock
jg
test
cmpsl
push
int3
mov
jbe
test
int
and
sbb
addl
sbbb
push
sbb
lcall
out
sbb
and
fists
dec
sub
sti
adc
push
jp
mov
mov
jge
mov
push
mov
jl
mov
pop
cltd
xchg
lock
fcmovb
mov
shlb
js
fdivrl
ljmp
out
loopne
cmp
gs
movsl
mov
sub
jg
stos
mov
xchg
insl
jne
pop
dec
push
cmp
js
sbb
pusha
inc
insb
in
xchg
das
je
ret
mov
or
outsl
dec
add
cmp
mov
fsubs
or
and
imul
aaa
inc
cmp
not
xchg
stos
adc
mov
sbb
or
lock
or
xor
mov
mov
shll
movsb
jo
dec
pop
add
mov
iret
cmp
pop
or
shrl
stc
pop
or
sbb
icebp
aas
sbb
add
and
jbe
test
xor
movsb
lock
push
adc
fs
mov
or
in
jno
jecxz
testb
cmp
ljmp
cmp
imulb
fiaddl
sbb
mov
xor
ss
and
jle
push
adc
jecxz
or
jle
and
repz
ffreep
or
lret
enter
mov
push
xchg
push
add
lds
add
lock
scas
or
stos
xor
adc
lcall
lahf
push
cmp
out
pop
call
fsubrl
dec
sbb
xor
out
cmp
lock
call
insl
ja
jge
sbb
jge
pop
mov
xchg
add
dec
leave
testb
in
or
adc
mov
mov
fwait
xchg
or
sbb
lahf
dec
jno
ja
pop
push
pop
sbb
xchg
ja
inc
cmpsl
lret
sbb
insb
loope
pop
std
lret
addl
ss
push
pop
icebp
and
pushf
icebp
idivl
dec
rcrl
neg
mov
mov
leave
sti
sahf
rorl
push
jo
ficomps
xchg
rcrb
js
cmc
or
mov
sub
fwait
aam
movsl
sbb
cltd
and
fsubr
sub
cmp
sbb
mov
int3
dec
xor
jbe
mov
mov
neg
xorl
jmp
fiadds
mov
mov
popf
push
mov
iret
stos
inc
mov
ja
push
pop
pop
mov
adc
fmuls
dec
xchg
lret
mov
out
jnp
sub
pusha
rclb
in
cmp
cmc
cmp
jle
xchg
outsl
imul
scas
pop
test
adc
mov
jle
sbbl
xchg
or
xchg
popa
mov
aaa
add
pop
xchg
cmpsl
xor
jns
adc
and
es
adc
sub
gs
dec
ret
dec
cmp
or
cmp
xor
ret
sub
mov
popa
popf
or
adc
mov
sbb
push
pop
pop
js
mov
pop
jle
xchg
xor
cmp
or
pop
jne
dec
clc
push
rolb
and
jae
or
dec
or
and
loopne
xor
xor
push
mov
addl
adc
jl
mov
sub
shll
mov
push
dec
shrb
ja
pop
mov
pop
xchg
out
jbe
aam
movups
pop
xor
jl
cltd
mov
mov
jmp
popf
imul
movsl
mov
sbbl
add
push
cmc
loope
into
mov
out
rorb
sub
push
aam
add
setg
xor
dec
jp
popf
insl
into
adc
lret
jge
sahf
jo
jo
cmp
aad
hlt
imul
in
lods
jg
loopne
pop
pop
and
jmp
nop
ja
mov
sbb
push
jge
cmpl
xchg
dec
fstps
mov
push
or
push
mov
sbb
mov
cmpsb
fcmovbe
mov
add
leave
xor
cmpb
push
push
lret
or
and
inc
sbb
or
sbb
xor
sarb
addr16
test
adc
mov
outsb
sub
jle
fnsave
xor
jbe
stc
int3
xor
jb
or
push
das
insb
sahf
dec
dec
jmp
sbb
dec
fists
jnp
jle
fildll
mov
cmp
out
push
cmp
mov
lret
cmp
test
jg
jo
and
pop
fisttps
push
aad
rcll
ja
sbb
js
bound
pushl
mov
adc
mov
jl
inc
or
fld
sub
push
clc
fwait
jle
icebp
jl
mov
and
mov
in
push
loop
aaa
pop
cmp
in
xor
push
sti
inc
inc
movsb
inc
push
and
sub
movsl
popa
outsl
mov
pop
inc
xlat
loope
mov
cmp
inc
int
lret
push
push
andb
or
xorb
stos
dec
ss
xor
out
push
cwtl
dec
cs
outsl
mov
cli
sbb
imul
dec
push
xchg
in
or
mov
stos
add
xchg
ja
jg
cmp
mov
cmp
lods
fwait
xor
xchg
jbe
adc
rorb
popf
lods
and
iret
stos
or
imul
imul
xlat
mov
pop
mov
sbb
pop
or
or
mov
test
lods
imul
adc
sub
sub
mov
int
mov
push
cltd
aad
sti
cltd
sarl
sbb
cmc
jge
fimuls
aas
inc
or
pop
pop
test
mov
xchg
sbb
xor
jle
jbe
clc
xor
add
shrl
movsb
xchg
insb
mov
lds
jge
add
dec
das
mov
leave
mov
movsb
push
mov
xor
in
sbb
push
iret
and
jno
or
shlb
imul
movsl
cltd
ss
mov
int
sti
in
pop
mov
pop
cmp
cld
aam
push
sbb
dec
push
pop
add
push
les
xor
ret
leave
push
test
push
pop
add
jbe
out
sbb
mov
pop
rorl
sub
in
mov
adc
fldenv
in
xchg
sarb
insl
pop
rclb
sbb
test
or
pop
notl
jns
insb
out
sahf
adc
jg
test
out
cmp
jle
jne
and
fisubl
fdivs
ss
call
cmp
fisubl
add
dec
cmp
pop
test
adc
and
fmuls
sub
mov
add
ret
lods
sbb
shr
adc
fidivrl
cmp
mov
pop
jne
mov
or
mov
cmc
lahf
ffreep
daa
inc
cmc
imul
dec
sbb
mov
dec
sti
je
or
inc
adc
or
mov
or
pop
jle
lcall
lret
jle
daa
pop
jns
cmc
jnp
adc
out
test
xor
adc
in
dec
test
cld
sarb
loopne
jmp
addr16
sbb
scas
mov
sbb
jecxz
adc
sarb
call
ja
sub
lret
xchg
out
or
daa
push
cmpsl
push
cmp
adcl
lcall
and
jbe
and
popf
rclb
testb
insl
shlb
and
push
sbb
sbb
push
push
test
or
repz
cli
in
std
mov
bound
xor
ret
xor
push
out
loop
fmull
sbb
aas
test
xchg
adc
xchg
call
insl
or
aam
lods
jle
movsb
jo
lret
and
hlt
test
dec
mov
push
jle
and
push
imul
sub
pop
dec
aam
mov
push
in
enter
jnp
jb
out
aad
pop
vpextrw
lds
mov
sbb
in
push
leave
fsts
sbb
ljmp
jnp
idiv
sub
jnp
or
and
lea
mov
je
xchg
hlt
sub
add
sarb
aam
outsb
aad
mov
pop
push
mov
cmp
sbb
es
out
mov
cmpsl
das
std
push
out
jnp
push
xchg
or
lds
movsl
pop
dec
push
dec
les
out
testl
mov
fcompl
iret
pop
scas
mov
sbb
iret
lea
mov
insl
repz
fs
div
jmp
mov
sbb
mov
arpl
stos
mov
mov
jl
push
outsl
pop
push
push
stc
mov
jle
xorps
xor
fnstenv
cmp
dec
adcl
sub
shlb
daa
leave
shll
sahf
mov
mov
mov
stos
mov
mov
mov
mov
push
ljmp
xchg
and
and
jle
leave
mov
push
btsl
or
sub
sub
xor
inc
je
repz
ss
lahf
scas
inc
mov
or
jle
xchg
inc
jp
pop
sbb
and
xchg
addr16
jae
mov
int3
pop
addr16
pop
push
fsubrs
cs
movsb
ficoml
std
pop
mov
mov
xchg
aaa
div
aas
sub
xchg
ja
cmp
or
das
rcll
xchg
cmp
mov
dec
mov
pop
xchg
lea
or
inc
adc
mov
sbb
add
mov
sahf
jge
push
mov
jle
or
lea
mov
jl
xor
imul
push
shr
outsb
push
sbb
cmpsb
sub
mov
shll
repz
or
sub
sub
shrb
mov
push
loopne
and
subb
mov
pop
or
xlat
test
out
xchg
adc
push
int
jecxz
lcall
pop
leave
leave
in
inc
or
push
cwtl
ljmp
ss
js
ret
scas
or
sub
inc
fs
fyl2x
and
aas
int
push
jns
cwtl
sahf
stc
loopne
shrb
mov
sub
pop
aas
sub
out
xchg
cmpb
push
inc
inc
mov
xor
test
push
jg
cmc
int3
xlat
movsl
or
and
sbb
xchg
pop
adc
pop
mov
or
cwtl
mov
and
mov
out
add
mov
mov
filds
shlb
xchg
xor
les
pop
movsb
jle
cltd
ss
mov
dec
mov
inc
mov
cmpsl
adcl
push
stos
mov
or
mov
ja
or
or
mov
mov
xchg
ja
mov
or
arpl
inc
sbb
mov
sbb
adc
mov
bsr
add
cmp
lock
pop
das
dec
pop
cli
pusha
xchg
mov
test
out
int
out
rcl
call
icebp
cmc
mov
mov
sbb
lret
push
mov
je
out
data16
inc
stos
int
dec
pop
sub
xchg
push
test
fwait
inc
or
jne
cld
or
gs
and
divb
ret
lock
mov
mov
mov
push
lock
pop
out
xchg
mov
jo
dec
ror
clc
lods
jl
push
or
cmp
sbb
cmpsb
cmpb
iret
pop
jecxz
test
into
mov
stc
scas
popl
aad
enter
cmp
sbb
add
inc
in
mov
push
inc
mov
pop
mov
push
adc
pop
mov
dec
cmp
jmp
and
adc
mov
cmp
and
lahf
sbb
aaa
add
mov
stos
mov
popa
lcall
cmp
inc
orb
adc
movsl
push
ret
adc
inc
call
inc
sbb
shrl
int
jl
inc
or
mov
push
iret
xchg
adc
mov
lcall
pop
jno
pop
sub
cmp
jle
or
iret
inc
mov
mov
shl
mov
add
or
dec
mov
movsb
mov
pop
insb
sub
testb
lret
les
psrld
xor
add
xor
push
mov
adc
adc
lock
or
je
xchg
je
stc
push
mov
or
jbe
inc
cmp
icebp
dec
mov
call
dec
cmp
out
mov
test
inc
mov
and
dec
add
les
lods
xlat
js
push
sub
inc
rcll
inc
bound
push
lods
and
adc
jae
push
push
xchg
mov
into
jo
pushf
movsb
fmul
jmp
dec
mov
jl
fstps
sbb
cwtl
clc
or
or
in
mov
sub
ljmp
add
mov
mov
mov
mov
in
imul
dec
sbb
sub
fdivrl
das
mov
push
fcmovu
fistpll
adc
add
fisubrs
push
ljmp
ficomps
add
shr
mov
adcl
jno
mov
jno
push
pop
adc
pop
js
mov
add
pop
adc
sbb
jmp
gs
out
adc
aam
jbe
jp
imul
xlat
and
int3
jnp
dec
or
repz
or
outsl
sbb
mov
mov
pushf
into
add
xor
or
fucomip
shr
pushf
mov
dec
fidivrl
adcl
cli
sub
push
xchg
imul
push
mov
in
outsb
or
lods
rcl
jle
imul
mov
add
cmc
xor
xchg
shrb
out
cmp
scas
xchg
cmp
addb
insb
leave
repz
mov
mov
mov
sub
mov
ds
int3
ret
sbb
adc
out
xor
xchg
sbb
jle
bound
ret
fcom
jnp
cmp
movsb
enter
and
xor
das
cmpsb
or
rcrl
jno
mov
sbb
push
lahf
add
pop
jl
in
mov
cmc
and
aaa
pop
ljmp
mov
daa
shlb
inc
shrb
mov
into
mov
and
jp
paddd
fadd
idivl
push
ret
push
cmp
and
cmpsl
test
xchg
push
cmp
push
pushf
pushf
mov
pusha
mov
outsb
jge
jle
dec
bound
or
fsubrs
add
mov
test
push
out
jns
push
jnp
aad
jb
inc
jae
or
push
pop
into
stos
pop
lds
mov
pop
aas
sbb
sbb
test
xchg
mov
jle
pop
es
pop
cltd
xchg
push
jle,pt
jle
pusha
int3
add
stos
lret
push
aaa
pop
nop
addr16
outsl
ficoms
mov
faddl
inc
movsb
jbe
cmpsl
mov
mov
pushf
mov
je
and
ret
cmc
xchg
add
rcl
jns
mov
scas
pop
mov
cmp
jge
pop
stos
jno
adc
xor
iret
mov
inc
xchg
adc
dec
jle
fidivs
lea
xchg
jmp
cltd
movsl
out
jns
insl
adc
movsb
jecxz
andl
push
andb
mov
jne
jle
aaa
stc
out
adc
xor
test
jmp
out
bound
xlat
adc
jo
pop
jl
fs
cmpsb
jmp
or
in
pop
add
push
add
or
aaa
cmp
cmp
sahf
cmp
cmpsb
xor
or
sbb
inc
add
pop
xchg
je
fidivrl
push
test
aad
pop
push
dec
pushf
jne
test
xor
jle
and
mov
nop
in
insl
cltd
rcrb
div
xor
mov
inc
sbb
jle
pop
in
or
cmpsl
mov
xchg
cwtl
inc
mov
das
cs
sbb
cmp
fsub
and
adc
repz
repnz
sbb
jbe
enter
adc
pop
std
lea
movsl
xchg
dec
fsubl
addb
orl
jle
sub
sbb
insl
out
or
jle
std
add
push
cmpsb
mov
inc
sub
sub
dec
enter
xchg
mov
xor
mov
pop
add
pusha
push
mov
sbb
je
mov
decl
out
jae
jmp
cmp
or
lods
jnp
popa
insl
push
mov
test
pop
mov
push
enter
test
pop
or
out
push
lret
dec
mov
fsubrl
movsb
push
pop
jle
dec
sarl
inc
fs
notl
inc
pushf
sub
jmp
loop
jle
enter
imul
jle
ds
jle
sahf
add
adc
cmp
mov
imul
or
jbe
ljmp
push
xor
test
fs
jbe
or
pushf
ljmp
push
sbb
mov
dec
test
inc
ljmp
call
mov
add
inc
fistps
lea
das
mov
sbb
into
mov
and
jecxz
fimull
loop
push
daa
dec
xchg
pop
mov
aaa
data16
pop
jp
lcall
push
in
sbb
mov
leave
popa
jp
div
clc
add
in
loopne
sub
push
data16
jl
test
scas
lock
push
and
pop
nop
loope
repnz
cmp
fidivl
dec
cmp
add
mov
insb
movsl
imul
add
test
or
repnz
and
or
bound
push
push
jl
stos
push
leave
dec
lahf
add
cmp
push
jno
or
pop
inc
repz
fstl
es
push
mov
or
push
add
dec
inc
mov
lcall
jg
push
fnstsw
push
adc
sbb
pop
fadd
mov
lret
imul
outsl
shlb
cltd
in
or
test
push
enter
insb
xchg
pusha
cltd
jecxz
inc
add
out
adc
ss
push
dec
jle
aaa
and
jmp
je
lcall
js
or
mov
cwtl
cmp
lret
pop
loope
cmp
inc
dec
mov
dec
add
cmc
cmp
dec
sub
idivb
xchg
mov
or
outsl
inc
jbe
push
jle
fsts
popa
addl
lock
inc
lods
xchg
in
xor
jns
sbb
jp
xorl
jle
lods
ss
mov
das
clc
lea
sbb
jp
mov
jle
stc
jnp
ficoml
aam
mov
les
mov
out
dec
pushf
add
lret
push
in
hlt
lret
sub
pop
inc
clc
or
out
rolb
lret
clc
int3
xchg
mov
cli
test
popa
push
lcall
jle
sahf
icebp
mov
es
sbb
add
push
cmp
xor
adc
jno
or
push
je
leave
inc
stos
mov
sbb
pop
sahf
push
andb
jo
cmp
mov
popa
jmp
sbb
movsb
push
dec
jle
ret
inc
cmp
test
roll
mov
maskmovq
idivl
leave
cmc
sbb
fdiv
ficomps
inc
iret
cmp
in
out
scas
jns
out
push
xchg
mov
dec
sbb
fbld
adc
aad
mov
loopne
aam
fdivs
fimull
jb
adc
dec
adc
xor
outsb
inc
xor
or
sbb
pop
js
test
push
popf
fildll
clc
ja
and
movsl
repnz
inc
sahf
lret
and
dec
push
push
mov
adc
adcb
shl
jo
mov
popf
bound
insb
xchg
pop
scas
loope
xchg
pusha
rcrl
test
aaa
sbb
cmp
inc
movsb
repnz
das
sub
xor
pop
inc
daa
aas
and
xchg
lea
mov
jle
sti
sbb
mov
scas
xchg
in
add
outsb
jae
inc
xchg
faddl
mov
out
pop
into
pop
mov
mov
push
xor
mov
jge
or
xor
inc
cli
cli
test
mov
mov
xor
mov
or
js
or
decb
incl
pop
pop
dec
addr16
je
leave
or
sbb
sbb
pop
ja
inc
aaa
jle
mov
pop
jbe
add
xor
popf
pop
pusha
arpl
push
and
sbb
pop
push
lock
test
in
mov
pop
aaa
xor
dec
adc
xchg
add
cltd
xor
mov
xchg
enter
shrl
sub
jne
scas
cmp
jb
sbb
lods
js
push
mov
scas
dec
push
dec
fprem
or
cwtl
repz
or
ret
push
inc
cmp
movsl
ja
lods
cltd
mov
jle
mov
lods
and
mov
mov
popf
push
aad
adc
xchg
xchg
aaa
adc
ss
fucom
inc
das
insl
sub
mov
out
scas
or
dec
ficoml
mov
loope
aaa
lds
cli
shrl
jle
cmp
aaa
ljmp
loop
cmp
enter
imull
fcmove
cmp
daa
or
or
inc
adc
outsb
addb
jmp
cmpsb
add
pop
imul
push
jle
cmp
dec
or
mov
jmp
insb
pop
ret
jle
ds
repz
or
push
sti
xchg
mov
push
cltd
std
mov
pop
lods
addb
inc
xchg
enter
mov
scas
or
jg
jmp
jns
lods
and
lcall
cmovne
orb
pop
mov
sub
mov
mov
mov
es
loopne
shlb
rcl
std
ret
pop
push
xor
clc
jmp
inc
fsubrs
or
or
fisubs
sub
addr16
pop
cmpsb
clc
mov
inc
mov
loopne
insb
cld
jbe
inc
or
xchg
jbe
mov
xor
mov
mov
mov
jnp
dec
pop
pop
ljmp
jbe
dec
push
cmpb
dec
or
lods
outsb
into
cmpsl
push
mov
lea
inc
push
xchg
jecxz
push
rclb
test
inc
ja
iret
inc
loop
mov
add
sbb
in
ja
cld
inc
test
xchg
out
cltd
xorl
jnp
idiv
into
lock
jae
mov
pop
mov
jge
iret
test
push
mov
pop
and
movsb
mov
inc
and
pop
nop
rcr
sti
lds
mov
cs
sbb
pop
hlt
leave
or
testl
cmp
popa
xor
xchg
int3
call
loop
adc
adc
jg
mov
dec
push
js
repz
lock
lea
and
mov
mov
xchg
adc
fnstcw
rcrb
shlb
fstps
test
or
xlat
lcall
int
or
fistpl
std
and
jmp
dec
xlat
xchg
adc
fsubs
jne
xchg
outsl
or
leave
sub
or
sbb
push
push
lret
pop
pusha
or
and
in
pop
push
ljmp
sbb
loop
push
jle
in
fists
or
lock
dec
cs
shlb
mov
stos
cmp
arpl
add
aad
sub
divb
and
pop
xchg
adcb
dec
sub
jle
test
dec
mov
bound
stos
push
cmp
sub
adc
std
pop
and
xor
xchg
xor
in
gs
add
jo
push
push
int
mov
ss
pop
scas
popa
dec
sahf
mov
pop
pop
sbb
mov
jb
pop
fs
pop
pop
mov
mov
fisttpl
lea
xchg
cli
jl
or
cmp
push
loope
mov
inc
stos
bound
enter
or
fucomip
adc
or
adc
gs
jne
or
fstpt
mov
sub
xor
mov
nop
xor
mov
je
enter
inc
adc
addr16
or
andb
in
sub
push
cmp
jl
add
cmpsl
add
sahf
es
pop
sub
dec
shlb
out
popa
mov
pop
mov
jno
clts
pop
mov
jb
jecxz
xchg
sub
iret
mov
outsl
rorb
cmp
aad
push
jbe
aam
dec
popf
jle
fisubs
pusha
fisttpl
push
lret
xchg
cmp
mov
push
mov
pop
fisttpll
test
lcall
add
mov
rol
les
sub
xchg
int
jle
jb
xor
jl
int3
ljmp
scas
jl
mov
xor
cmc
testl
cmpl
in
jbe
cld
pop
cwtl
ret
out
push
or
ret
cmp
sbb
ds
cmp
pop
fsubr
xchg
push
popa
fwait
cltd
icebp
aaa
add
fwait
and
outsb
jl
aaa
int3
fwait
stos
dec
repz
or
outsb
in
in
push
scas
push
cmp
cli
add
sub
lods
int
mov
sbb
rorb
stos
incl
aad
loopne
out
sbb
rol
orl
inc
lea
cmpsb
mov
mov
lretw
js
mov
stc
popf
pop
jne
jle
test
orb
jne
xor
outsl
pop
nop
jns
cmp
jl
in
sub
xor
xor
nop
adc
add
into
es
xchg
je
or
imul
je
and
xchg
ficoml
ja
mov
pop
in
outsl
add
out
std
sbb
lods
sbb
ficompl
aas
jnp
lcall
fnstsw
inc
sbb
mov
and
addr16
mov
or
bound
mov
jp
push
fadds
xchg
and
xlat
xor
mov
ss
xor
xor
or
lahf
mov
leave
push
bnd
imul
pop
xchg
mov
pop
sub
ljmp
lds
and
mov
inc
shll
mov
imul
pop
mov
jle
inc
data16
jns
inc
jno
aas
iret
mov
mov
leave
mov
xchg
lods
cmp
mov
inc
call
jle
fidivl
pop
cwtl
movsl
or
sbb
fucomi
cmp
add
leave
cs
or
out
push
cmp
xor
push
mov
pop
int3
idivb
leave
jo
sbb
lds
or
inc
fldt
or
aas
pop
stos
pusha
add
xchg
addr16
int
lcall
ds
cli
loope
jle
cmp
jecxz
lret
dec
or
movsl
cmp
sbb
insb
xchg
ss
dec
aaa
es
add
outsb
xor
rclb
sbb
dec
inc
cmp
insb
mov
and
jo
leave
add
cmc
push
jle
mov
sbb
mov
dec
pop
push
shlb
nop
mov
cmp
cmp
outsb
dec
int3
inc
jle
inc
out
mov
or
aad
sbb
test
mov
dec
or
or
lahf
mov
mov
mov
fbstp
mull
mov
xor
pop
xor
jo
cmp
mov
xchg
shrl
aad
sbb
xor
push
and
sub
test
and
jns
ret
shlb
mov
jns
aaa
cmp
ja
lock
push
jnp
sub
adc
jmp
jle
add
sub
inc
sbb
mov
mov
jmp
and
push
cmp
repz
test
xchg
nop
sbb
js
les
mov
fcompl
movsl
pushf
icebp
or
cmp
idivb
xor
rcr
mov
sbb
cmpsb
std
adc
cmp
inc
mov
xchg
sbb
lret
xor
ss
xchg
imul
xor
into
add
bswap
cmp
mov
mov
jno
imul
pop
cli
and
jp
test
mov
cwtl
in
loop
dec
leave
sub
pop
idivl
mov
or
and
imul
xchg
pop
or
in
sbb
or
clc
sub
pop
mov
jp
insb
or
int3
or
dec
outsb
or
sbb
xlat
lods
clc
or
jne
loop
push
dec
test
mov
mov
xchg
in
jae
adc
cld
jbe
lds
lret
mov
jb
outsb
or
std
cmpsb
inc
loop
lahf
dec
iret
cmpsb
or
addr16
push
leave
push
push
push
aad
cmp
adc
cmp
jmp
ljmp
jo
aas
clc
adc
add
mov
lock
stos
jb
scas
roll
lods
jle
dec
jmp
and
sbb
adc
cmc
ss
dec
push
xor
hlt
dec
inc
in
pusha
ljmp
test
cltd
stos
or
xor
pop
mov
aaa
cvtpi2ps
or
arpl
mov
jbe
inc
cmpsb
test
pushf
xchg
ret
mov
ret
mov
xchg
inc
popa
cmp
shlb
ja
push
lods
pop
jle
scas
imul
or
repnz
sub
xor
lret
cmp
xor
shll
dec
mov
or
lds
and
dec
ret
mov
jle
lret
loope
imul
push
and
push
negb
jg
iret
pop
fwait
push
mov
movd
out
add
aaa
mov
mov
mov
cs
push
xchg
cmp
adc
adc
dec
lock
test
pop
pusha
and
add
push
mov
dec
dec
inc
and
push
pop
or
mov
mov
ljmp
outsl
dec
or
jne
ret
in
lahf
aaa
push
xchg
adc
scas
sub
mov
movsb
mov
test
jns
clts
scas
jmp
pop
mov
add
movsb
sbb
mov
add
adc
xchg
das
inc
cwtl
jle
stos
or
or
decl
ja
sahf
jle
and
lcall
out
mov
mov
or
pop
push
or
shll
xor
cmp
mov
pop
imulb
in
cmpsb
xchg
xchg
popf
les
out
lret
stos
ret
pop
lret
je
int
mov
insb
das
ret
int3
add
movsl
pop
fisubrl
mov
scas
sub
imul
jb
imulb
jl
cli
jno
pusha
and
inc
das
aas
jno
and
or
aas
push
push
sti
sbbl
out
ss
fistpll
lret
cmp
popf
adc
push
lcall
and
cmp
ss
xchg
les
test
lret
push
sub
loopne
aam
mov
cmp
lea
aas
and
mov
push
je
mov
or
movsb
sub
or
pop
pop
divl
ucomiss
cmc
push
outsb
bound
test
outsl
inc
pop
jg
mov
push
test
call
mov
fnstsw
mov
sub
or
or
lock
fisubs
sbb
repz
addr16
jbe
inc
aaa
pop
or
cli
jbe
cli
push
inc
mov
mov
rcr
addr16
dec
hlt
repnz
push
cmp
xchg
jo
inc
leave
scas
and
lock
fimuls
stos
outsl
jle
aam
movsl
or
cmpsb
jns
out
mov
stc
js
mov
xor
cmp
rcrl
cmp
es
int
rcll
cs
je
int
inc
mov
scas
test
sbb
lret
mov
mov
cmp
pop
mov
pop
mov
push
pop
rclb
mov
push
jne
sub
sbb
por
sbb
std
pusha
mov
add
or
jge
sarl
dec
inc
or
adc
insl
xchg
pop
seta
lods
arpl
cmp
jle
test
push
sbb
shl
jmp
in
stos
mov
or
cmp
test
daa
out
int3
or
imul
repz
lret
std
mov
mov
fidivl
mov
xor
aas
push
clc
push
bound
dec
out
jp
push
sub
or
outsb
jle
movsl
xchg
pop
xchg
sub
or
shrl
xor
pop
xorl
xorb
mov
test
add
or
outsb
aaa
jne
xchg
addl
sbb
mov
mov
jle
mov
add
cmp
push
in
or
or
enter
out
movsl
fsts
jmp
xor
adc
je
fstl
cmp
outsl
jae
adc
sahf
sbb
sahf
pop
daa
sub
xor
repnz
push
fidivrs
add
or
insb
cmpb
lret
mov
jl
in
and
pusha
xor
xchg
mov
mov
add
sbb
out
pop
int
insb
imul
inc
lahf
or
jl
orb
xchg
imul
shll
mov
adc
mov
das
js
cmpsl
test
pop
mov
js
or
rcrb
inc
fadds
pop
jge
mov
inc
out
aad
and
cwtl
fs
or
adc
jg
inc
mov
cwtl
in
out
in
xchg
les
push
sbb
das
cmpsl
xor
icebp
dec
push
pop
fwait
or
ja
cmpsb
rol
push
mov
or
mov
jg
jl
and
cwtl
int
out
inc
dec
jle
cld
sub
cmp
pushl
sarl
pop
shl
in
lods
pop
cmp
repz
pop
cmp
es
stc
imul
sbb
int
cwtl
mov
push
xchg
or
pushf
subb
scas
jecxz
inc
cmpsl
jle
dec
cltd
mov
sarb
icebp
cltd
xor
mov
movb
dec
leave
pop
mov
xor
ret
mov
mov
lahf
xor
andl
jecxz
jmp
lods
cmc
fidivs
mov
mov
testb
lret
mov
inc
nop
rorl
in
jge
ljmp
mull
cmc
or
stos
mov
in
pop
popf
inc
xor
lods
sub
out
clc
std
or
ljmp
mov
out
mov
or
or
test
outsb
aad
mov
in
aaa
in
lret
orb
int
sbb
movsl
ds
sub
in
and
sti
clc
cs
inc
decl
or
stos
pop
out
call
aas
mov
stc
mov
or
mov
rol
add
sahf
cmp
jl
jns
sbb
notb
std
ljmp
sbb
int3
mov
imul
xor
jle
adc
and
hlt
or
inc
hlt
leave
lea
lret
mov
movsl
mov
daa
jecxz
jecxz
shlb
pushf
in
divb
push
or
call
jle
xchg
stc
xchg
inc
pop
out
sahf
pop
xchg
cld
mov
dec
inc
shl
js
test
mov
xor
ret
lea
fsubrl
dec
inc
or
movsl
pop
mov
dec
mov
std
fwait
dec
cmp
mov
int3
or
xor
test
fdivrs
pushf
jno
pop
inc
inc
outsl
mov
jle
xchg
inc
popa
pusha
adc
push
mov
fcmovnbe
call
mov
scas
cs
cmc
mov
xchg
lret
jl
fsub
pop
or
cmpsb
or
or
in
movsb
cmp
sarl
aas
int
mov
or
adc
xor
xor
ficomps
pop
cltd
push
inc
out
mov
enter
repnz
xchg
lods
sbb
jo
imul
add
push
push
cbtw
pop
jp
leave
outsb
pushf
mov
lret
add
outsl
aaa
xchg
mov
insl
mov
cmp
and
push
and
jns
icebp
je
mov
popa
xor
adc
jbe
push
mov
cs
dec
sbb
inc
ret
mov
cmpsb
add
mov
pop
or
fs
dec
adcl
pop
decb
inc
jno
and
dec
adc
xchg
and
add
inc
roll
sbb
or
or
jbe
rcl
sti
mul
in
cmpsb
jo,pn
mov
dec
inc
iret
fnstenv
cmpb
cwtl
pushf
testb
pcmpgtb
por
std
push
xchg
test
loope
in
or
push
sub
sub
pop
mov
lods
gs
pop
in
pop
ds
push
mov
dec
and
pusha
push
xor
jle
xchg
test
dec
mov
mov
xor
push
fsubrs
cmp
or
gs
stos
maxps
push
mov
mov
pop
repz
jbe
ret
iret
cld
stos
in
push
inc
pause
out
outsb
jb
jns
pop
aad
pusha
les
add
mov
test
mov
cmpsb
lock
into
std
mov
hlt
mov
lea
pop
sbb
add
cmp
cld
push
mov
sbb
mov
in
dec
shll
popa
dec
adc
mov
xchg
pop
or
xor
pop
mov
outsl
lcall
and
jecxz
lods
adc
xchg
pop
xchg
pop
cmpsb
jl
and
adc
xor
jmp
out
and
and
mov
sbb
push
push
push
sbb
in
cmp
out
jns
ret
clc
mov
inc
push
jl
ret
or
sahf
mov
lret
xorl
sbb
sub
movsl
or
pop
push
cmpl
and
and
pop
mov
rep
outsl
push
dec
push
pop
mov
sub
mov
in
hlt
jg
xor
pushf
rclb
loopne
xor
sbb
jle
rcll
sahf
nop
sub
or
ljmp
mov
notb
jnp
std
add
ja
int
cli
imul
movsb
fmull
ljmp
mov
cmp
adc
outsb
push
xchg
aad
gs
mov
adc
xlat
ljmp
ljmp
js
cmc
push
jb
fucomp
pop
cmp
or
inc
mov
lea
jb
fisttps
loopne
cmovp
arpl
cmp
xor
or
adc
mov
pop
inc
pushf
clc
je
adc
cmp
in
fimuls
inc
iret
gs
into
rclb
cltd
pop
inc
into
adc
cwtl
sub
mov
cmpsl
or
mov
gs
div
clc
mov
push
pop
jle
int
repz
rcll
or
jp
imul
xchg
pop
scas
arpl
xchg
sbb
fs
mov
inc
sbbl
or
xchg
mov
cmpsb
and
push
pop
inc
jle
imul
andb
xlat
ljmp
out
jp
sbb
gs
lret
fisttps
mov
xchg
shrb
xchg
xchg
jle
xchg
jge
push
int
jg
scas
pop
mov
test
lret
jae
movsb
inc
xor
and
add
filds
mov
fmulp
sbb
push
out
dec
or
or
or
mov
inc
test
addr16
pop
push
pop
xchg
fdivrs
sbb
mov
daa
pop
mov
movsl
cld
nop
sahf
sti
testl
jns
fwait
aas
inc
cltd
mov
inc
test
stos
ret
mov
lahf
jno
out
inc
mov
jle
cmp
xchg
outsb
test
lds
dec
add
repz
or
push
into
and
cmpsl
sbbb
pushf
add
outsl
sub
sbb
xchg
adc
xor
push
je
andb
adc
or
fcmovnbe
dec
mov
cmpsb
and
mov
test
xchg
mov
movsb
jle
cmp
add
ret
cmp
or
sub
stos
add
int
dec
cmpsb
stos
test
sbb
push
mov
ficoml
movsl
je
push
rorb
jg
popa
out
bnd
xchg
sbb
cwtl
bound
idivb
push
imul
jb
sbb
cmp
out
lret
shr
in
xchg
add
cli
or
iret
mov
adc
es
sahf
inc
adc
sub
test
pop
and
outsb
add
rolw
jbe
loopne
daa
das
or
pop
or
mov
cmp
cmp
jo
inc
shrl
lock
repnz
sub
mov
pop
sahf
into
jl
sbb
fs
sar
mov
jnp
fwait
lcall
out
hlt
jbe
mov
xchg
or
push
mov
dec
or
cmp
loope
pop
jno
sub
mov
mov
insb
sahf
out
mov
push
pop
push
cwtl
xchg
sbb
out
mov
out
xchg
pusha
jl
lods
cli
or
add
mov
pop
or
jge
lock
push
outsb
mov
mov
notb
test
sbb
jns
adcl
in
push
adc
ret
outsl
pop
sub
inc
and
ja
lods
adc
or
imull
add
in
mov
adc
xor
jae
mov
popl
or
pop
cmp
hlt
fists
and
dec
cmp
or
adc
sahf
sbb
sub
rorb
das
adc
ret
sub
pop
jle
insl
xchg
lods
insl
stos
pusha
in
or
xor
mov
jbe
mov
pop
jg
cmc
pop
or
sbbl
pop
in
mov
pop
mov
sbb
jns
pop
mov
jle
mov
jb
dec
xor
fstps
insb
jle
cltd
or
jae
add
or
xchg
cmp
mov
xchg
leave
sub
sbb
or
jle
add
repnz
scas
pop
or
push
xor
ret
fldt
pop
inc
pop
xchg
mov
in
in
call
push
lahf
movsb
movsb
mov
sub
stos
xchg
and
test
daa
pop
xchg
cld
jbe
add
rcrb
jno
out
imul
mov
or
push
jns
inc
push
daa
sbb
in
sub
adc
jp
loopne
or
mov
xchg
fbstp
cmp
movntps
movsb
out
cmp
sub
shll
or
xchg
mov
mov
mov
in
out
xchg
shrl
sbb
pushf
ret
jge
jp
push
mov
sti
xchg
test
push
mov
das
adc
dec
sbb
imul
ja
in
push
lods
insl
or
iret
mov
call
cmp
push
out
ss
notb
sub
jnp
adc
push
lods
push
cmpsl
add
xor
enter
ss
inc
test
pop
sbb
or
pushl
push
mov
fstpt
mov
sub
mov
mov
sbb
push
call
outsl
or
xchg
mov
and
mov
loope
mov
sbb
jecxz
rclb
xchg
jge
or
fisttpll
push
add
and
repz
mov
dec
mov
aaa
mov
push
mov
cltd
sbbb
ficoml
loop
xchg
lret
fs
int
and
xor
cmpsl
imul
mov
sub
imul
outsb
cli
pop
in
xor
out
dec
loopne
gs
xorl
xchg
mov
push
mov
lret
insb
cmp
ret
add
std
daa
das
dec
repz
inc
mov
into
jbe
lods
scas
mov
xchg
ret
jno
inc
ljmp
cwtl
xchg
adc
mov
sub
inc
jmp
std
cmp
sub
fwait
or
sbb
jbe
inc
or
and
sub
icebp
cmp
xchg
in
inc
aam
inc
hlt
xchg
dec
aam
pop
loop
or
jecxz
push
das
push
dec
lahf
stc
dec
sub
inc
pop
or
outsb
out
pop
das
mov
lea
xor
mov
ret
jmp
in
mov
dec
fmuls
mov
push
sub
out
in
sar
lahf
neg
lret
call
ds
fs
cmp
mov
adc
or
cwtl
test
add
jnp
insb
cmp
and
xchg
jo
dec
mov
mov
rcrl
aam
scas
outsl
cmp
in
pop
test
mov
xchg
outsl
xchg
add
shr
pop
ljmp
mov
in
push
jno
test
cmc
enter
dec
cltd
cld
in
jbe
push
jmp
cmp
and
or
and
aaa
rcll
add
mov
pop
jg
ss
int3
xchg
mov
jb
jns
push
jecxz
dec
and
es
fisttpll
sub
push
lret
and
mov
cmpsl
sub
adc
lret
out
mov
lock
rol
in
stos
mov
add
add
jle
xchg
adc
ret
pop
loope
push
sub
mov
sbb
dec
add
pop
cmp
jle
sti
mov
add
dec
pop
movsl
jecxz
ljmp
xor
out
mov
in
cmp
mov
cmpsb
outsb
ret
in
repz
pop
cld
aas
xor
pop
sub
xor
sbb
and
xor
xchg
cwtl
call
and
and
sbb
mov
bound
jmp
sub
jle
jp
shll
push
fidivs
adc
fs
mov
add
leave
dec
cmovbe
push
shlb
cmp
jbe
pop
xchg
jns
mov
lret
xorl
adc
jns
stos
adc
cmp
xor
or
decb
sbb
inc
add
es
mov
in
enter
sbb
xchg
ficompl
push
sub
ror
ljmp
in
jmp
cmp
mov
ljmp
sahf
es
inc
and
sbbl
scas
and
cmp
pop
sub
dec
out
jg
sbb
mov
adc
pop
pop
out
jae
stc
jbe
cltd
fcoml
loopne
adc
mov
loop
scas
cld
pop
push
mov
mul
pop
xor
or
sub
cmp
rcll
call
push
inc
loop
xchg
iret
jecxz
dec
mov
push
mov
jge
bound
data16
mov
adc
insl
cltd
sbb
adc
out
jbe
mov
ljmp
xchg
pop
jle
xchg
mov
lock
mov
repnz
dec
dec
mov
cmp
push
cmp
out
fcoms
push
or
pusha
pushf
int
jle
mov
dec
rorl
ret
mov
add
xor
xor
sub
in
mov
mov
push
add
or
mov
add
stc
ljmp
or
pop
mov
sbb
inc
inc
rcrb
xchg
test
push
jnp
pop
dec
pop
outsl
cmp
mov
push
xor
fwait
out
pop
iret
dec
out
mov
out
sbb
dec
xor
mov
jb
mov
add
out
inc
jl,pt
mov
cli
or
in
dec
je
cmp
jbe
ja
mov
lods
jo
or
sub
sub
push
aas
xchg
mov
insb
sbb
out
mov
std
lea
mov
add
mov
ret
outsl
mov
cwtl
cwtl
mov
and
cwtl
push
mov
push
loop
fnstsw
negb
xchg
and
in
stc
hlt
dec
pusha
imul
mov
inc
jg
out
insb
loopne
xchg
xchg
or
shll
ja
bound
lods
inc
fimuls
dec
sbb
sub
dec
leave
sbb
fldl
aaa
inc
inc
fildl
lahf
nop
repnz
arpl
arpl
jbe
dec
sbb
xor
lret
cmc
jl
leave
push
scas
lret
dec
jp
insb
xchg
pushf
pop
adc
mov
cli
enter
test
mov
lcall
xchg
fisubs
std
mov
insl
mov
and
push
pop
pop
cs
lahf
push
enter
icebp
cmp
add
mov
int3
push
into
mov
jb
shrb
sbb
fcmovnbe
push
inc
add
imul
pop
cmp
sub
inc
in
lea
pop
jl
les
mov
jmp
in
icebp
xchg
and
test
outsl
outsl
sub
clc
dec
outsb
jge
push
xor
in
and
xchg
or
mov
jg
mov
hlt
jo
and
jns
pop
pop
out
notl
push
pop
mov
inc
stos
jno
mov
fwait
and
jb
mov
mov
popa
pushf
adc
cli
jmp
fists
mov
and
shr
pop
cmc
or
add
jle
mov
ljmp
enter
mov
and
push
jnp
fwait
ret
sbb
xlat
mov
jae
lds
jecxz
aad
add
jns
lcall
mov
inc
jle
mov
mov
aaa
sub
iret
mov
add
loop
push
loope
in
js
in
pop
out
jno
or
lds
mov
xor
adc
ss
ja
dec
leave
jbe
test
xor
and
sub
mov
out
mov
xor
cmp
test
mulb
mov
popl
arpl
inc
adc
leave
popa
stos
sbb
xor
int3
cmpsl
mov
or
pop
bound
push
out
mov
mov
pop
push
rcll
xor
jne
faddl
mov
movsb
punpcklbw
repz
mov
dec
inc
xor
ret
jge
les
and
pop
inc
sub
cmp
out
jle
test
mov
popf
xchg
push
rorl
or
adc
push
and
inc
xchg
fidivl
mov
sub
fiaddl
das
inc
lcall
inc
scas
pop
movsb
mov
push
or
pop
inc
cltd
jo
gs
mov
fists
sbb
repz
push
repnz
out
cmp
ss
pop
dec
cmp
xor
mov
jp
das
popa
mov
jne
mov
mov
xchg
cmpsb
sub
jns
cmp
jbe
inc
push
mul
jg
out
pop
xor
inc
xor
pop
out
in
shll
jle
jmp
jmp
sub
jne
jp
xchg
icebp
xchg
popf
lret
push
push
jb
mov
scas
aas
iret
sahf
sbb
jg
lock
dec
filds
in
ja
dec
stc
sahf
popf
sbb
mov
xchg
xchg
push
inc
aas
into
push
arpl
mov
push
jmp
jle
fstps
lock
mov
cmpsl
mov
fwait
mov
xor
in
jbe
inc
jb
sti
pop
inc
mov
xchg
sbb
js
xor
adc
arpl
clc
sub
push
cmp
in
ret
fisubl
daa
dec
add
mov
clc
mov
sub
add
sbb
pushf
and
jb
pop
dec
sti
push
sub
add
push
add
mov
imul
neg
mov
pop
mov
sbb
adc
std
or
jg
lds
push
test
lods
pop
dec
pop
adc
test
pop
pop
ja
test
dec
aam
sahf
ds
push
leave
jbe
orb
xor
push
insb
and
inc
xchg
xor
fstl
cmp
icebp
fidivrl
stos
fdivr
pushl
mov
lods
frstor
repnz
scas
dec
leave
dec
call
dec
jns
xchg
test
pop
bound
frstor
outsb
cmp
lock
pop
push
lcall
je
fs
fs
pop
mov
push
cmpb
rcll
divb
mov
cmpsb
and
jb
rclb
sbb
cmc
xor
movsl
test
leave
inc
sub
xor
push
mov
or
push
mov
xor
mov
pop
xor
dec
sub
mov
pop
jno
jmp
cld
and
sbb
das
xchg
dec
in
and
jg
cmpb
pop
cmp
test
xor
stos
mov
fstpl
enter
mov
lret
lds
adc
adc
push
sub
and
sbb
push
pop
and
out
sbb
inc
dec
sbb
jbe
xor
ret
cmp
or
aad
es
sbb
adc
and
or
sub
dec
mov
sti
sarl
xchg
fisttpl
and
lods
rorl
or
push
and
sub
xor
imul
add
fisubrs
loopne
fisttps
sbb
jecxz
in
dec
aad
mov
call
in
or
lods
clc
inc
mov
sub
in
sbb
mov
cmpsl
jle
ljmp
clc
xchg
mov
pushf
mov
sarb
enter
or
cld
mov
outsb
out
jbe
adc
dec
xor
sub
pop
inc
cltd
fbstp
inc
xor
mov
sbb
mov
or
jmp
orl
or
leave
push
push
aam
mov
push
xor
fstpt
shlb
iret
xchg
pop
sti
pop
ljmp
xchg
into
sub
sarl
das
mov
xor
push
mov
pop
fnstenv
mov
add
or
mov
xchg
jo
mov
fstps
jp
cmp
pop
mov
cmpsb
insb
clc
cmp
or
xor
mov
std
fs
loopne
cmp
mov
push
or
mov
insl
cmc
xor
sbb
cwtl
push
nop
push
mov
mov
dec
xchg
xchg
fldcw
das
das
int3
pop
and
cmp
sbb
xor
sbb
or
pop
jmp
ret
pop
sub
pop
and
sbbb
pop
xchg
adc
sub
adc
iret
mov
or
rol
jge
dec
jne
sub
andb
fs
xor
xchg
cmp
push
stos
mov
push
jle
mov
fnsave
pop
sbb
jge
jnp
mov
adc
cmp
or
out
xlat
xorb
mov
mov
add
fwait
push
in
or
push
sub
mov
lock
xchg
cli
rcll
xchg
adc
pop
mov
jmp
jmp
shl
ja
in
movsb
mov
fdivp
mov
lahf
jbe
insl
adc
jle
xchg
sarl
dec
loope
or
push
mov
mov
xlat
cmp
or
cld
xchg
sub
mov
xor
or
add
lods
mov
jle
dec
jge
test
scas
adc
leave
add
mov
mov
scas
xor
inc
insl
jbe
mov
shll
adc
or
scas
inc
jl
out
sbbb
movsl
scas
jo
sbb
cwtl
cli
mov
fidivrs
jmp
aam
out
dec
cmc
sub
data16
int3
adc
cmp
fcompp
pop
xor
rolb
iret
dec
ss
sti
stos
rorl
inc
outsb
loop
dec
xlat
pop
mov
lret
fbld
ret
aaa
and
outsl
fnsave
adc
add
mov
or
mov
fwait
das
imul
cmp
xchg
cli
and
sarl
or
inc
aaa
fisubrs
into
mov
ret
rcll
dec
jo
mov
in
dec
rcrb
or
add
pop
cmpsb
and
cmpsb
and
xor
subb
imul
cmp
fildll
mov
inc
push
fstpl
bound
lea
std
fcoml
scas
outsb
push
xchg
or
dec
sbb
ret
stos
scas
jecxz
sbb
popf
movsl
dec
bound
sub
les
push
inc
fwait
add
push
lret
and
lds
outsl
add
ljmp
out
dec
loope
sbb
mov
out
push
sti
shl
addr16
xor
and
imulb
sub
or
test
sarl
sbb
cltd
lock
sbb
and
pop
add
sbb
fistps
push
mov
aam
mov
jnp
mov
int3
insb
andl
xor
movsl
out
xor
lret
leave
or
stos
mov
daa
mov
push
or
dec
je
enter
mov
mov
or
push
pusha
sahf
sbb
inc
sub
mov
or
push
stc
lret
or
ljmp
push
fnsave
cmp
cmp
into
jbe
addr16
cmp
push
or
or
cmp
cmp
xchg
pushf
aad
push
pop
pop
daa
mov
mov
arpl
jbe
cmpsb
adcl
push
mov
add
loopne
xchg
adc
cmpsl
adc
or
sti
notb
mov
out
test
jg
cmp
out
lahf
movsb
data16
nop
jns
lods
mov
push
add
repnz
sbb
or
cmp
sub
sub
pop
fimull
jmp
mov
push
ds
jle
cwtl
cwtl
push
es
mov
pop
lret
sub
pusha
rorb
jae
mov
imul
mov
scas
ret
sub
cmpsb
push
sub
repz
mov
fucomi
leave
loope
mov
inc
inc
pop
outsl
testb
sti
jnp
xchg
daa
jno
lahf
imul
inc
or
mov
je
sub
orl
or
inc
push
mov
hlt
mov
push
dec
jecxz
adc
test
jge
call
push
push
mov
xor
inc
ds
and
sub
in
and
mull
mov
movsb
cmp
mov
imul
push
pop
bsr
inc
shl
cmpsl
pushf
jle
push
pop
test
xor
xlat
fiadds
push
jle
jb
push
arpl
push
inc
adc
cld
test
pushf
sub
add
pushw
dec
fwait
jmp
pop
out
adc
mov
std
jmp
scas
mov
cmp
leave
mov
test
jle
gs
xor
popa
in
inc
mov
sbb
repz
or
jnp
cmp
mov
fwait
sbb
test
dec
pusha
mov
loop
add
insb
sbb
cmp
lock
inc
xchg
xchg
es
test
aam
xor
xchg
arpl
push
test
push
pop
out
pusha
or
push
push
jb
jbe
movsl
and
pop
shlb
xor
ja
rcrl
aad
or
mov
test
sub
or
pushf
sbb
mov
aaa
jmp
mov
test
pusha
es
bound
dec
jbe
dec
test
fimull
push
in
mov
popf
data16
xor
jno
sbb
adc
std
ror
adc
push
inc
xchg
ret
cwtl
xchg
imul
ljmp
or
pop
cs
xorl
pop
pop
xor
les
das
add
repz
outsl
inc
or
cmpl
mov
fists
or
into
sub
mov
mov
dec
mov
or
pop
cwtl
jle
pop
arpl
pushf
mov
sub
sub
shrb
sbb
fdivs
mov
mov
or
lcall
jbe
sbb
clc
mov
mov
mov
jns
incb
mov
sbb
mov
jae
inc
mov
inc
pop
std
fs
mov
mov
sub
pop
adc
xchg
or
cltd
lock
dec
jb
mov
out
xchg
pop
push
ficomps
xor
adc
movsb
in
jnp
pop
negl
pop
enter
test
or
lcall
adcb
in
shrl
stos
add
and
je
ds
cmp
add
sbb
jge
jbe
mov
fwait
jle
cmc
adc
mov
call
adc
movb
jg
into
pop
mov
aas
or
stos
repnz
adc
xor
lahf
cld
pusha
loopne
mov
jns
das
sbb
ret
pop
mov
pop
xor
orl
jle
sbb
lds
shrb
add
adc
lea
pop
jns
mov
sbb
inc
daa
popa
aaa
mov
add
cmc
adc
movsb
sar
dec
lods
add
mov
shrl
push
jb
push
mov
adc
adcl
mov
xchg
out
daa
ret
fsubrl
pusha
pop
mov
adc
ss
xor
jnp
push
cmpsl
push
in
loopne
pop
mov
rcll
out
inc
inc
repz
es
test
dec
cmp
cs
aad
nop
ret
cmpb
push
ljmp
mul
and
mov
cld
in
jns
lret
sbb
mulb
ja
sub
scas
mov
add
sarl
sti
cld
out
sarl
stos
les
push
push
or
xchg
dec
insl
fwait
pop
cmp
rorb
mov
dec
cld
jmp
mov
nop
inc
mov
sub
aad
stos
sub
xlat
clc
aad
sbb
cli
imul
xor
or
fwait
sbb
bound
repz
je
or
add
xor
movsb
and
pop
imul
mov
lods
xchg
loope
pop
les
cwtl
sbb
adc
push
aad
add
loop
xchg
jle
rorb
mov
push
jae
add
insl
cmp
add
pop
sub
loopne
enter
jbe
call
pop
fists
inc
lea
adc
ds
dec
adc
pop
inc
loope
out
pop
lahf
imul
xor
ficomps
les
in
loop
dec
mov
repz
int
fwait
scas
and
add
sub
push
in
js
scas
adc
movhps
int3
pop
pop
push
xchg
adc
cmp
push
mov
xchg
jle
out
fwait
mov
and
int
mov
jo
push
out
mov
mov
jnp
fstpt
sbb
iret
jle
xchg
and
shrb
in
xchg
dec
inc
push
pop
pop
idivl
or
push
xor
jne
push
jmp
jle
inc
add
sbb
rclb
xchg
sub
mov
in
ret
sub
idivl
xlat
sub
lahf
jns
std
add
aas
pop
cli
fidivs
cli
neg
mov
fimull
lock
mov
jle
sub
fsincos
and
dec
cmp
pop
push
mov
xchg
mov
sub
mov
je
sub
and
adc
sarl
sbb
adc
ret
adc
push
sbb
jge
cmpl
loope
jmp
js
mov
jae
add
mov
sbb
pop
insb
je
fidivrs
mov
push
cltd
outsl
jb
cmp
ss
cmp
jle
inc
call
stc
dec
xor
test
xor
add
xor
or
mov
ret
int
jne
subb
fldl
jmp
pop
mov
pop
push
fcoml
test
pop
stc
mov
jl
adc
iret
je
push
js
mov
cwtl
or
mov
xor
rolb
movsb
inc
push
sbb
in
mov
push
sbb
sbbb
mov
or
imul
mov
popf
fwait
jne
sub
fst
mov
pushf
lds
add
pop
mov
mov
aas
into
xchg
cmp
mov
stos
popf
pop
sub
xchg
nop
insb
sbb
mov
jbe
cli
lea
jp
and
inc
xorl
xor
pushf
adc
pushf
cmp
dec
jle
cmpsl
and
adc
or
mov
mov
sub
aaa
cmp
in
push
ret
fisubrl
std
jnp
mov
pop
ret
and
xor
fdivl
or
cltd
inc
cmc
mov
push
mov
xchg
mov
cwtl
mov
pushf
fwait
test
sbb
push
daa
and
cmp
xor
lcall
lods
adc
les
mov
imul
data16
daa
or
hlt
jno
add
pop
xchg
cmp
pop
add
mov
jle
rcll
adcl
sub
inc
jno
daa
mov
data16
int3
sbb
dec
sbb
add
mov
mov
dec
pop
push
dec
mov
lretw
test
xor
and
idivl
icebp
outsb
inc
mov
pop
and
std
and
mov
xchg
cld
lods
xor
jl
jl
cmp
inc
mov
mov
sti
rorb
push
mov
and
xor
daa
sub
or
pop
imul
int
pop
into
into
sbb
add
pop
fistpll
ljmp
jle
xchg
push
mov
add
in
jbe
cmp
jle
repz
divl
pop
jo
jp
ret
xchg
and
sub
adc
adc
divb
jge
cmp
das
scas
outsb
xlat
popa
adcl
mov
fists
push
out
fimuls
jns
push
pop
loop
fst
xor
ds
xchg
ljmp
push
mov
add
popf
jmp
inc
ja
dec
mov
cmp
pop
inc
cmpsl
inc
scas
arpl
call
pop
sub
adc
pop
out
testl
xlat
cld
or
or
hlt
psubb
nop
dec
inc
inc
xchg
cltd
ret
fnstenv
jle
in
pop
roll
push
pop
out
mov
jmp
and
pop
cmpsl
push
imul
add
es
out
vpcmpeqb
jg
push
mov
mov
imul
out
addl
data16
movsl
fildl
or
test
call
aad
imul
inc
lahf
loopne
xchg
mov
pushf
mov
adc
rorb
sbb
movl
pop
sbb
mov
imul
cmc
pop
add
mov
cmp
mov
sbb
sbb
das
out
pusha
lea
add
push
lret
adc
dec
or
adc
mov
cli
or
mov
test
add
icebp
jae
fs
mov
lods
leave
int3
adc
outsl
lods
ror
out
inc
jge
sub
inc
andl
rcrl
push
xor
insl
mov
pop
arpl
jg
cmc
sub
pop
rclb
dec
mov
in
lds
cmp
notb
mov
adc
push
pop
cli
jnp
xchg
mov
fistpll
repnz
and
movsl
mulb
or
jbe
jnp
mov
lret
incb
addb
jl
pop
mov
lret
xchg
mov
jb
das
cmc
imul
divl
mov
push
mov
push
or
jb
sarb
inc
pop
pop
cmpsb
pop
enter
and
jle
lock
or
mov
stc
or
dec
aam
pop
out
pop
ret
ds
loope
or
lcall
and
xor
sub
fcompl
xchg
fadd
pop
test
cmp
mov
sbb
fdivl
cwtl
or
or
rol
lret
stos
or
or
pop
or
dec
pop
aad
dec
call
xchg
js
dec
shlb
lret
sub
xorl
dec
pop
notl
popf
sar
js
mov
cmp
or
jl
ret
hlt
sbb
mov
cs
lea
xchg
mov
into
sub
jne
adcb
ret
movsl
pop
hlt
sub
xchg
ret
dec
push
daa
sarb
popf
stos
sub
push
out
dec
sub
mov
pop
nop
clc
add
pop
shll
ficoms
cmp
push
aad
gs
xor
mov
pop
dec
imul
rol
xchg
jle
jle
stos
cmpsb
xchg
orb
and
aaa
xor
and
and
jle
push
repz
mov
cmp
popf
xchg
mov
adc
jmp
jge
fmuls
stc
cwtl
mov
dec
mov
and
sbb
pop
out
lret
push
fsubl
es
and
pop
shrb
and
sahf
lcall
pop
lret
rcr
xor
or
inc
mov
sub
shll
mov
jmp
loop
in
pop
jae
adc
and
out
loope
cmpsl
xchg
mov
lret
fdivl
xchg
or
mov
mov
xor
push
or
sbb
testl
clc
inc
xor
cmc
stos
cltd
jmp
jp
sub
adc
mov
popf
mov
add
cmovge
in
sub
sbb
cmc
sbb
movl
divl
dec
mov
or
or
pop
addr16
adc
mov
enter
mov
aam
mov
mov
loopne
or
ljmp
sbb
icebp
fimull
pop
mov
adcl
inc
dec
shlb
mov
add
std
fs
sub
f2xm1
pop
negl
jmp
jno
jns
pop
incl
pop
pop
jno
xchg
xor
imul
mov
popa
notb
cmc
add
push
push
and
or
dec
jmp
cmp
or
push
fucom
mov
in
shlb
aaa
hlt
iret
pop
fdivrl
and
jle
pop
xor
inc
or
pop
mov
cmp
xchg
mov
stc
push
filds
adc
dec
sbb
lods
mov
adc
mov
fdivl
mov
push
mov
stos
fisttps
cmp
inc
jecxz
aam
mov
add
inc
rcr
fdivr
mov
add
mov
xor
int
add
outsl
and
adc
jne
lret
fildl
std
dec
cmpsb
xor
or
les
in
mov
dec
and
or
inc
push
loopne
je
das
loop
pusha
push
add
push
dec
js
test
enter
push
jmp
dec
rcll
jae
cmp
lahf
aam
cmp
ja
pop
std
cmp
jnp
add
jae
nop
push
pop
stc
mov
fwait
imul
cmpsl
mov
in
into
pop
lds
and
jle
ljmp
imull
add
xor
in
inc
mov
in
in
mov
mov
sbb
xchg
ja
sbb
add
xor
fistps
cmpsl
xor
mov
movsb
in
mov
inc
ss
push
adc
pop
leave
cmc
addr16
lret
mov
ss
ja
bound
add
mov
mov
mov
or
xor
rorl
fstpt
xchg
scas
xchg
dec
insb
mov
push
mov
sbb
lret
dec
insl
insb
sub
or
push
cmpsb
aad
iret
jle
pop
mov
cmpsl
fsubs
lret
or
xchg
mov
in
cltd
pop
or
jo
or
sub
and
xor
mulb
negl
pop
pop
inc
adc
inc
iret
sbb
inc
ja
dec
lahf
add
inc
bound
sahf
mov
sub
and
stc
bnd
fdivl
stos
aas
mov
mov
daa
adc
mov
add
jbe
mov
mov
or
stos
aas
cmp
fnstsw
clc
out
movsb
cmc
adc
fldl
mov
cmpl
nop
pop
cwtl
dec
jl
sub
push
xchg
repnz
and
arpl
scas
xchg
sbb
out
or
pusha
adc
lret
insl
jle
mov
in
ljmp
inc
and
sub
inc
adc
fwait
push
mov
fndisi(8087
out
pop
jbe
dec
imulb
outsb
and
mov
mov
and
cmp
adc
sub
pop
mov
repnz
jg
sbb
mov
shlb
ljmp
and
lahf
das
jbe
dec
aaa
sbb
shlb
adc
fmull
lock
xor
or
test
scas
enter
or
mov
pop
les
and
mov
imul
outsb
and
xchg
aam
mov
or
jbe
ja
cmp
int3
cmpsb
shrb
jle
jno
jge
lret
leave
es
push
aam
popf
stos
insb
arpl
pop
mov
leave
xlat
sbb
insl
test
pop
adc
pusha
mov
jns
jle
jo
loopne
scas
out
pop
add
pop
or
cltd
js
mov
imul
outsb
dec
and
push
lret
mov
jmp
rclb
adcb
cld
inc
stc
sub
and
sbb
pop
lahf
or
fidivl
cltd
or
or
cwtl
stos
out
mov
inc
inc
imul
xchg
rorb
jo
dec
xor
jp
xchg
inc
inc
pop
movsbl
fstpt
pop
mov
xchg
sub
mov
mov
add
es
add
test
adc
lds
pop
mov
shl
or
dec
cli
std
les
dec
jmp
ficoms
or
mov
jge
mov
bound
pop
pop
fsubl
cmp
mov
push
mov
in
xchg
out
lods
sbb
repz
mov
mov
out
jp
fs
inc
sbb
jmp
inc
dec
jmp
sub
jnp
out
xlat
rcll
imul
mov
adc
sub
les
lods
and
jl
sub
xchg
pop
ja
or
imul
rcrb
movsl
lea
pop
ret
outsl
fiaddl
jle
dec
pop
aaa
shrb
or
mov
adc
shr
popf
sbb
inc
cmp
fnstenv
mov
push
xchg
shlb
jl
cmp
sub
clc
pop
mov
and
xchg
repz
mov
add
mov
xchg
or
lcall
repz
fs
pop
cltd
dec
pop
cmpsl
and
aaa
jno
cmp
pushf
add
pop
lds
aaa
mov
mov
scas
rolb
push
push
aas
push
sub
sti
ficomps
pop
test
or
mov
push
mov
lods
jmp
push
inc
loop
insb
mov
push
icebp
fsub
cmp
xor
addl
sbb
add
clc
dec
maskmovq
negl
test
ljmp
jle
mov
push
enter
push
mov
jle
dec
push
push
lret
jbe
pop
imul
pusha
cmpsl
rclb
jae
test
js
sbb
insb
cmp
or
mov
test
mov
je
push
cmp
or
and
cmp
mov
out
pop
ss
adc
pop
push
and
adc
mov
fcoms
sbb
loope
cld
and
inc
mov
cli
stos
shrl
mov
pop
xchg
mov
stos
or
pop
fmull
loopne
adc
pop
mov
or
gs
mov
andb
mov
jne
cs
sbb
fsubr
jbe
jle
test
cmc
sbb
cmp
movsl
pop
cmp
pop
xchg
xor
pop
jp
and
aaa
jle
mov
and
call
xchg
add
sti
in
lret
cmc
jmp
inc
mov
or
int3
push
jns
enter
adcb
in
or
insl
push
rclb
and
lret
sub
popa
sbb
or
int
inc
insl
xlat
cmpsl
sbb
sub
or
cmp
pop
mov
pop
and
mov
cmp
enter
rorb
or
push
and
dec
popl
negl
cli
aam
jb
push
call
or
call
push
xchg
or
fcomp
aam
or
or
jmp
loopne
jmp
add
cld
mov
fs
cmp
sub
scas
jmp
pop
jle
xor
jo
adc
push
or
jno
xchg
fiaddl
scas
sbb
mov
sbb
xor
stc
xor
std
repz
cs
rorb
adc
cld
and
add
adc
or
or
addr16
inc
out
test
jg
mov
jecxz
push
mov
pop
dec
xchg
repnz
sub
mov
fisttpl
xchg
sub
stos
incb
jno
push
inc
xchg
call
mov
int3
mov
stc
jns
inc
ss
or
int3
pop
and
cs
repnz
adc
cmpsl
and
mov
push
cwtl
or
pop
pop
mov
mov
dec
insl
shrb
stos
xchg
in
or
mov
or
outsb
pop
popa
sub
and
jbe
push
inc
push
push
movsl
lea
cmp
pop
hlt
or
jg
jle
xchg
int3
dec
sbb
stos
add
mov
cmc
adc
inc
xlat
pop
mov
jne
or
shrl
in
pop
jb
iret
std
inc
mov
into
mov
pop
dec
inc
xchg
scas
push
cld
or
sarb
add
fwait
sbb
inc
mov
cltd
aaa
push
dec
call
inc
or
sbb
cltd
sbb
fdivp
mov
adc
cmp
les
cmp
or
sbb
lea
jle
mov
sbb
push
fdivrl
adc
cld
lods
pop
mov
gs
pushf
das
add
pop
mov
cwtl
mov
sbb
mov
pushf
lret
iret
sub
popf
mov
mov
mov
arpl
aad
sbb
es
push
pop
movsl
jle
add
ja
add
je
push
cwtl
sbbl
test
push
push
pop
cmp
pop
or
mov
imul
push
jl
orl
mov
or
es
lock
mov
loopne
sbb
or
cmp
mov
mov
scas
add
jle
int3
cli
mov
add
frstor
xchg
cli
xor
jns
test
or
ret
push
fcmovnb
inc
lods
xchg
sub
jns
cwtl
in
repnz
loop
ret
xor
icebp
int3
fidivrl
je
lret
inc
or
inc
pop
pop
or
shrb
das
aam
cmp
adc
mov
std
jecxz
push
lock
in
mov
push
popf
dec
scas
fs
fs
cmp
addb
and
int
inc
aam
test
lret
and
cmp
dec
push
test
pop
fcompl
jns
lret
leave
adc
xchg
mov
jb
push
popa
mov
sbb
push
daa
mov
mov
xor
mov
cmp
repz
pop
dec
inc
popa
ljmp
jae
int3
or
jnp
xor
lret
push
push
ret
das
pop
dec
and
jge
jnp
mov
and
adc
movsl
inc
fidivrs
lcall
or
inc
xchg
test
dec
xchg
dec
pop
mov
or
add
out
cs
mov
xor
int
ja
shll
inc
add
inc
mov
cmc
add
pop
and
mov
pushf
push
jle
rcr
imul
test
pop
push
xchg
iret
push
mov
and
xor
fistpll
cmpsb
lock
lret
jo
xchg
sar
out
cmp
rorl
enter
mov
adc
push
sub
pop
jge
cmp
cli
into
sbb
sbb
mov
dec
push
add
stos
lock
push
sub
mov
mov
repnz
sbb
push
fwait
jge
mov
cmp
push
jl
pop
jp
fistpl
mov
out
push
push
cmpsl
jle
sbb
fldl
xchg
in
mov
mov
inc
sbb
or
and
out
mov
in
js
sbb
jge
les
adc
adc
mulb
fucom
xchg
in
mov
ja
push
cmpb
mov
sti
idivb
mov
ja
daa
popa
pop
lret
push
sar
dec
sub
in
sub
mov
test
jo
popa
ss
sbb
test
push
ljmp
mov
adc
push
out
pop
call
jp
and
push
pop
lcall
cs
sub
sbb
loopne
or
mov
ss
negb
clc
std
sub
inc
dec
push
bound
pop
decb
in
xor
or
xchg
fmuls
pop
icebp
int
loope
mov
mov
push
leave
outsb
adc
inc
mov
xchg
mov
rorl
jns
sub
dec
or
movd
mov
into
xchg
out
inc
sbb
xlat
nop
adc
adc
loopne
js
jne
pop
or
mov
sbb
mov
fidivs
push
jbe
pop
roll
lahf
mov
shll
in
xlat
inc
adcl
jecxz
sbb
arpl
insl
pop
cmp
out
mov
aam
cmp
jnp
push
xor
cltd
aad
xor
ss
hlt
mov
inc
xchg
inc
pop
or
pop
jmp
mov
jbe
stc
add
push
add
pop
or
push
push
test
shll
jl
bound
or
roll
icebp
test
fidivs
push
in
inc
jge
stc
pop
dec
jbe
cmp
mov
cwtl
outsb
jmp
jmp
and
jo
sbb
push
sub
push
cs
inc
pop
testb
add
cmpsb
cmp
or
dec
mov
and
pop
add
fwait
mov
mov
jle
jo
cltd
inc
or
push
clc
loopne
adc
lret
jle
pop
mov
cli
or
add
jp
push
mov
cmp
sti
int3
fcmovnb
inc
int
nop
in
test
mov
out
xchg
mov
rorl
jmp
mov
or
aaa
clc
inc
test
or
xchg
cli
jns
xchg
mov
sbb
movsl
pop
pop
es
fisubl
imul
dec
or
test
xchg
xor
sbb
sbb
movsl
popa
std
or
adc
pop
scas
lret
data16
push
lret
in
int3
or
and
jle
push
sub
mov
andb
xchg
pop
xlat
inc
mov
sbb
in
sbb
bound
mov
sbb
add
in
rolb
out
jns
jle
jecxz
mov
sti
shrb
add
lret
inc
lds
sbb
cli
pop
fcmovnb
popa
stc
std
ret
sub
inc
cltd
sub
in
push
jne
pop
xor
fisttpll
mov
mov
pop
sti
pop
mov
repz
fistpl
out
or
or
lds
and
inc
rcll
push
jno
ds
push
jle
int
pop
mov
ljmp
das
das
dec
mov
out
add
imul
les
cs
dec
mov
xchg
push
outsl
mov
inc
loopne
nop
dec
rep
mov
mov
jl
leave
cmp
rclb
mov
or
add
push
mov
int3
dec
das
cmpsb
sbb
testl
aaa
push
pop
mov
testl
lds
cmc
or
adc
sbb
mov
sbb
push
cs
push
aaa
cmpl
inc
aam
es
rolb
cltd
push
jle
ret
push
aad
jle
call
dec
adc
and
adc
inc
leave
adc
cmc
loopne
pop
gs
mov
fidivrl
in
shll
lods
test
xchg
dec
jge
jmp
mov
xorb
lcall
mov
fwait
sahf
and
int
notb
mov
xor
andl
sti
or
jo
sbb
scas
fcomip
push
pop
cmp
jne
stos
pop
add
cltd
or
repz
jbe
adc
and
mov
and
out
aas
jle
imul
pusha
xchg
hlt
or
pop
or
mov
imul
gs
jl
sahf
jmp
push
jg
stc
xlat
testb
adc
sbb
pop
jo
rcrb
std
movsb
repnz
or
cmp
cli
roll
jae
pushf
mov
xor
bound
jl
cltd
cli
movsl
out
mov
leave
inc
mov
insl
sarl
ja
jmp
pop
sbb
add
jns
nop
xchg
sbb
ss
xchg
dec
add
adc
mov
fdivrl
mov
aam
cmpsl
and
shlb
sbb
fiaddl
add
gs
xor
in
jnp
sbb
xchg
mov
int
pop
mov
iret
fsub
int
mov
jp
jne
fildl
mov
cwtl
iret
cmp
cmp
or
push
vpsubq
cmpsl
test
sti
decl
mov
hlt
in
lods
jle
sbb
push
push
inc
outsb
imul
in
mov
add
push
std
jo
jecxz
das
or
loopne
xlat
adc
pop
call
ljmp
xor
mov
pop
mov
mov
push
out
or
sbb
xor
popf
fucomi
loopne
dec
mov
jg
notb
scas
js
mov
mov
or
hlt
daa
mov
xchg
or
jae
sbb
xchg
xlat
out
jne
mov
stos
push
cmpsb
inc
lcall
enter
jle
loopne
shl
mov
popf
jno
pop
mov
push
mov
pop
enter
lahf
loopne
inc
lret
std
aam
push
ret
mov
lret
dec
cmc
pop
or
dec
dec
and
mov
inc
int
je
sub
lret
decb
std
cwtl
fs
mov
mov
push
adc
pop
or
pop
imul
mov
sbb
mov
pop
dec
shl
popa
mov
shlb
addl
jbe
mov
sub
lock
pop
inc
mov
cmpsb
pop
xor
mov
add
pop
dec
call
popl
sarb
leave
subb
push
push
std
xchg
mov
xchg
out
jbe
add
sub
adc
fists
push
jae
mov
js
push
or
add
xchg
mov
mov
hlt
adc
add
pop
cmc
mov
ja
loope
jl
idivb
addl
test
pushf
add
add
and
jle
and
xchg
xchg
pop
pcmpgtd
xchg
imul
stos
fistps
xor
repz
lea
movsl
adc
fistpll
mov
inc
add
aam
sti
xlat
jp
mov
mov
movsb
popfw
andl
fucomi
xchg
fmull
xchg
fstl
cmc
popf
mov
or
xchg
movb
jg
pusha
xor
pop
mov
push
call
fdivrp
dec
jnp
mov
sbb
or
mov
mov
adc
or
ljmp
push
psubw
dec
out
xor
out
shlb
in
mov
rorl
mov
jp
mov
dec
dec
cmp
cmp
sub
and
jno
rcrb
xchg
insl
push
addl
pop
sahf
pusha
ret
cmc
icebp
push
dec
xchg
sbb
lds
mov
mov
inc
daa
in
jl
mov
scas
adc
cli
pop
pop
mov
jb
std
ja
or
sbb
add
in
xchg
shr
pop
out
cmp
or
fadd
mov
inc
mov
cmp
fisubs
sbb
addr16
add
out
mov
incb
cmc
ljmp
xor
pop
add
andl
movsb
sbb
inc
in
bnd
outsl
stos
or
mov
mov
cmpsb
pop
sbb
cmp
pop
pop
xchg
mov
mov
inc
js
fbld
xlat
adc
jge
ds
jle
sub
pop
or
adc
iret
sbb
in
sti
ret
mov
mov
call
insb
jge
fisttps
sarb
bound
sbb
movsb
xchg
pop
mov
mov
pop
mov
sub
and
shl
sbbb
jmp
lods
dec
mov
xor
and
cmpb
pop
jp
lock
sbb
cwtl
outsb
mov
std
mov
dec
xchg
mov
sub
arpl
jno
add
push
mov
add
loopne
or
jae
filds
jns
test
pop
xchg
mov
enter
or
fs
cmp
jb
or
adc
stc
int
and
in
mov
pop
xor
loopne
cs
xor
xor
bound
fcoms
inc
aaa
dec
push
fcomps
add
jge
xchg
xchg
sti
inc
lret
or
outsl
adc
in
mov
or
jmp
adc
frstor
lock
jno
add
add
out
mov
das
js
adc
or
sub
shrl
dec
push
stos
sarw
lods
dec
cs
cmpb
ja
out
push
push
pop
stos
sahf
mov
sub
insl
sbbb
push
inc
nop
mov
jmp
push
mov
test
test
pop
dec
loop
jns
flds
mov
push
pop
sti
gs
out
and
movsb
cmp
sbb
insb
insb
mov
mov
push
std
leave
mov
ja
dec
outsl
adc
or
test
jg
bsf
inc
sbb
into
add
je
negl
sub
call
lods
mov
add
dec
mov
jns
repnz
loopne
test
idivb
ds
mov
stos
pop
jnp
hlt
mov
fists
and
orl
jp
enter
or
clc
shrb
sbb
pushf
xchg
push
movsb
insl
pop
and
xchg
mov
or
rclb
mov
mulb
cmp
and
adc
dec
and
lcall
mov
mov
cmc
jmp
in
push
sub
add
inc
sbb
mov
pop
leave
icebp
pop
mov
ret
add
mov
add
jmp
lea
enter
cld
call
jo
mov
mov
leave
mov
push
test
fwait
sbb
inc
add
dec
pop
push
in
rorb
xchg
sub
pop
ret
cmpsl
cmp
fcompl
test
repnz
call
mov
in
jmp
push
das
jns
mov
inc
sbb
pushf
popf
fldenv
add
or
pop
mov
jl
dec
pop
pop
movsb
test
pusha
rcl
jle
mov
scas
sbb
loopne
add
nop
xor
xchg
and
jmp
or
sbb
loope
mov
adc
test
dec
mov
mov
ja
ss
inc
sub
loopne
or
xor
sbb
or
imul
pop
pop
sbb
jae
mov
call
mov
fldl
xor
xchg
sbb
scas
sub
int3
jnp
testl
pop
out
cmp
mov
and
rclb
dec
nop
or
jle
dec
iret
outsl
test
jb
and
add
repnz
cmp
dec
mov
loopne
popf
push
les
scas
jl
mov
cmc
jne
xchg
and
lods
out
mov
add
out
sub
fnstsw
add
pop
inc
xor
and
aam
std
clc
adc
xor
aas
xor
pop
ret
fwait
pop
shrl
cmp
push
cmp
or
pop
and
mov
in
pop
test
ja
sub
jl
cltd
sbb
adc
sbb
jns
les
mov
gs
idivl
divl
or
jg
lret
pop
scas
scas
shlb
inc
in
pop
movsl
jmp
xchg
cltd
popa
loopne
ds
or
lea
std
mov
add
movsl
ret
outsb
mov
addr16
and
xor
adc
mov
or
adc
jecxz
ja
sbb
adc
sar
clc
jecxz
gs
cltd
fsts
sbb
insb
in
bound
js
arpl
frstor
or
sub
js
adc
icebp
insl
jnp
jmp
xchg
lcall
sub
nop
sub
push
notb
in
orl
mov
arpl
mov
cmp
add
aam
xchg
add
aaa
or
pop
into
mov
push
push
jmp
jb
and
stos
mov
pop
stos
dec
adc
sbb
imul
or
daa
jp
mov
sub
lock
dec
cli
das
aaa
insb
lea
sahf
lret
dec
incl
xlat
or
neg
test
sarl
aas
jmp
push
and
mov
or
mov
or
jge
inc
push
adc
in
dec
xchg
or
mov
fsub
lret
cmp
pop
dec
jbe
in
arpl
inc
xchg
cmp
adc
repnz
fistps
dec
stos
push
out
jp
adc
mov
aas
push
mov
cwtl
xor
jmp
mov
dec
adc
or
mov
mov
inc
push
xchg
sbb
in
stos
sarb
scas
pop
and
ret
fdiv
cwtl
xchg
xchg
push
cwtl
fimuls
lcall
test
jb
stos
adc
sahf
int3
mov
mov
iret
std
je
out
int
ljmp
lods
adc
sbb
mov
dec
sbb
insb
mov
jle
into
xchg
add
add
push
je
jl
or
add
mov
inc
add
and
dec
adc
pop
xor
jne
xchg
jbe
pop
fildl
sbb
sub
dec
adc
dec
sbbb
sbb
xor
stos
mov
in
mov
sbb
dec
ss
rep
cmp
stc
sub
std
fs
enter
fcomp
jbe
test
aas
jl
lret
jbe
in
adc
mov
shlb
sbb
pop
rclb
fidivs
add
test
sahf
ret
sti
add
pop
fnstsw
insb
and
orl
pop
shl
bts
scas
adc
leave
pop
arpl
mov
ja
mov
idivl
jbe
mov
rclb
arpl
lahf
add
inc
int
pop
sti
cmp
cmpsl
inc
mov
leave
inc
or
mov
fidivrl
sahf
push
sahf
lods
mov
outsl
movsb
loopne
sbb
xor
jge
xchg
mov
inc
imul
jg
pop
daa
push
pop
adc
add
mov
imul
mov
movsb
pop
or
mov
cwtl
insl
cmp
mov
mov
int
pop
mov
pop
lret
mov
mov
push
movsb
sti
pop
or
or
push
pop
outsb
xchg
aam
jno
push
sbb
pop
int
mov
ja
or
adc
jbe
minps
mov
into
adc
rclb
cmp
sub
shl
jae
pop
or
xor
mov
into
xor
sti
leave
adc
imul
jb
mov
jno
or
lret
imull
ljmp
mov
lods
ret
aad
and
std
iret
imul
std
fwait
das
mull
or
mov
push
sub
pop
mov
cmpsl
push
lahf
ficoms
sub
lret
pop
inc
sbb
add
mov
pop
xchg
stos
adc
shll
int3
rclb
andb
cltd
aam
or
je
sbb
jg
shlb
inc
iret
shr
cmpsb
or
sbb
pusha
jle
orb
or
iret
ljmp
cmp
jne
cmp
enter
shl
xchg
mov
outsb
push
pop
mov
mov
mov
nop
fstl
pop
push
das
popf
and
in
xlat
sub
xchg
or
and
int3
rclb
jp
mov
mov
leave
insb
sbb
xor
mov
cmpsb
add
inc
notl
jle
pop
btr
lods
push
popa
shll
sbb
mov
vcmpss
aaa
out
clc
mov
sbb
and
jl
ljmp
scas
mov
cmp
jle
mov
ret
enter
or
rolb
push
sar
es
sbb
loopne
cli
pop
xchg
and
sbb
shr
adc
dec
sbb
sub
add
lcall
sbb
ror
dec
jl
jnp
jbe
cli
inc
push
dec
inc
mov
xor
mov
jns,pn
jp
fchs
repnz
fistps
movsl
sbb
hlt
aas
rorl
add
mov
push
sbb
adc
pop
fisubrs
clc
scas
mov
add
jbe
in
imul
add
sbbl
test
iret
cmpsb
pop
dec
loope
push
xchg
mov
xchg
rolb
xchg
lea
jle
pop
or
sub
cwtl
arpl
cld
popf
or
add
xor
mov
fidivs
or
sti
and
pop
pop
fidivrs
sti
rcrb
push
ja
pop
cmp
and
ret
mov
and
and
jns
not
xchg
jge
mov
ret
xchg
inc
sbb
mov
out
adc
and
mov
mov
lret
jecxz
add
xlat
int3
jmp
cmpl
mov
in
or
xorl
xor
mov
and
mov
pop
dec
cmp
imul
jns
or
xor
lock
ret
lock
sub
pop
push
xor
mov
xor
cmp
pop
push
mov
test
jge
and
lret
aam
cmp
inc
mov
imul
mov
xchg
dec
pop
and
or
lret
test
fdivs
or
gs
adc
mov
or
pop
fstps
jle
iret
dec
popa
hlt
cwtl
shrl
jbe
es
sahf
and
mov
mov
adc
js
pop
add
ds
xorl
out
cwtl
mov
mov
sbb
ret
or
add
popf
dec
shrb
sbb
dec
mov
cwtl
mov
cmpsl
std
or
sahf
dec
mov
mov
inc
imul
outsb
sub
sahf
pop
mov
jl
xor
jp
in
pop
ja
sti
notb
div
fimuls
xchg
je
mov
sbb
in
xchg
out
mov
dec
push
cwtl
stos
rorb
in
imul
add
or
mov
xor
xchg
mov
cmpl
mov
nop
mov
or
gs
xchg
sti
jno
cs
and
xchg
mov
cmpsb
mov
dec
shlb
pop
mov
pop
nop
sub
int
test
jmp
sti
or
lods
loope
and
insl
idivb
xchg
sbb
mov
negl
shrl
aam
push
lods
mov
shrb
aas
call
loope
xchg
movsl
movsl
in
lods
stos
pop
or
icebp
xchg
dec
or
jno
xchg
enter
repnz
sahf
int
punpckhdq
call
mov
into
test
std
pop
negl
popf
aas
popa
insl
fisubs
into
push
out
or
push
sbbl
test
mov
mov
pop
aam
ret
or
adc
or
scas
cwtl
or
js
pop
jnp
divl
or
jbe
repz
fbld
inc
adc
lods
mov
push
sbb
lea
adc
xchg
repz
out
ret
mov
arpl
inc
inc
bound
and
das
int3
out
pop
popf
push
pop
pop
ret
pop
jg
nop
bound
mov
mov
push
xchg
fistl
shl
jg
insb
popf
leave
mov
insb
push
mov
push
imul
mov
loopne
mov
jbe,pn
fisubs
ret
or
int
dec
ret
adc
mov
xchg
lods
movsb
dec
sub
dec
sbb
xor
xchg
mov
hlt
rcrl
lret
pop
xchg
lock
pop
mul
in
and
shll
ret
dec
rcrb
mov
test
popf
test
mov
jmp
or
sbbl
adcl
or
loope
enter
rol
inc
and
pop
lret
xlat
cs
xor
jo
mov
or
clc
mov
mov
fbld
or
lret
pop
ret
mov
int
jle
push
jnp
shlb
or
ficomps
ud1
aad
stos
jo
push
fmull
push
fs
ss
sub
loope
xor
jl
in
notl
lcall
cli
sti
jbe
xor
stc
add
lcall
loop
dec
or
nop
jbe
sbb
push
cmp
hlt
push
stc
scas
inc
movsb
or
or
xor
lret
inc
mov
cmp
loop
pop
pop
icebp
sub
cwtl
shll
test
mov
or
les
cmp
bnd
incl
xlat
or
jae
cmp
adc
cltd
mov
shlb
jno
dec
call
jnp
jle
mov
jne
pop
insl
mov
dec
cs
movsl
ds
lods
out
ret
jle
and
mov
popf
adc
in
or
xor
xchg
xchg
mov
pop
mov
imul
push
jb
dec
loop
xor
das
jp
fucom
cmpsb
jecxz
sbb
pop
adc
aas
jp
push
arpl
les
push
dec
or
sub
pop
imul
movsb
or
cmp
fdivrp
fmull
out
or
aas
push
mov
pop
mov
sub
cmp
es
idivb
mov
std
mov
jl
adcb
xor
sub
cmp
jl
ds
std
les
int
sbb
push
jle
popf
mov
mov
cmp
or
mov
sbbb
add
scas
stos
xorl
adc
or
das
jnp
push
or
fwait
inc
mov
movb
dec
jns
roll
sbb
xchg
leave
or
sbb
jg
jle
es
or
xchg
xchg
xchg
sub
ljmp
scas
mov
xchg
hlt
fdivp
cld
pushf
mov
mov
mov
jecxz
lret
mov
add
sbb
mov
and
test
iret
or
dec
jle
ret
fidivl
out
mov
mov
sbb
push
dec
fwait
mov
inc
and
imulb
mov
sub
sarl
pop
dec
es
and
pop
imull
jg
adc
adc
jg
scas
sub
lods
mov
nop
jns
lea
orl
test
lcall
insl
push
addr16
adc
jle
mov
and
xor
pushf
mov
jecxz
mov
in
jno
hlt
pop
in
or
fiadds
jnp
repnz
les
lea
aaa
adc
jle
out
dec
stos
xlat
cltd
inc
add
arpl
sub
push
data16
data16
addr16
or
lods
cmp
enter
jecxz
inc
mov
sbb
sbb
push
cli
jecxz
jle
xor
fwait
dec
test
pop
call
jl
inc
cmp
and
jne
push
add
fcoml
out
ret
sbb
sti
mov
dec
loop
inc
xchg
jb
push
cli
into
xchg
xor
push
push
loope
stos
jle
xor
inc
inc
iret
aad
or
dec
add
loopne
mov
mov
rclb
inc
je
aaa
out
xor
push
in
loope
lods
or
mov
int3
mov
enter
sbb
nop
dec
and
dec
xor
sub
lds
mov
mov
dec
xchg
mov
pop
hlt
fcmovbe
push
sub
inc
mov
xor
xor
dec
ret
or
mov
xor
daa
pcmpeqw
xor
mov
movsl
xor
daa
sbb
mov
and
push
ja
lcall
mov
xchg
pop
jb
out
cmp
push
fldl
mov
mov
jl
or
sbb
cld
xor
icebp
xlat
xlat
or
andb
rorl
push
jns
pop
adc
sbb
or
andb
dec
cmp
ljmp
in
lods
pop
add
gs
icebp
insl
jge
xor
pushf
or
add
scas
jl
sub
mov
inc
imul
or
ljmp
mov
inc
rorl
scas
mov
mov
clc
push
enter
xchg
fstl
adc
cmp
dec
pop
sti
icebp
out
jns
mov
fs
xchg
sbb
fdivr
pop
and
enter
xor
mov
aas
xchg
mov
mov
fsubrl
inc
push
or
movsb
fwait
xorl
add
push
push
stos
push
jbe
jle
adc
repnz
insl
xor
fnstenv
sti
dec
push
inc
lret
dec
test
test
jnp
jg
sub
out
negl
pop
in
add
mov
push
dec
jl
push
jle
mov
jle
ret
cmp
add
sub
mov
push
jp
xchg
inc
std
pop
cmpsb
aaa
scas
sbb
or
sbb
les
stos
lds
mov
xorl
in
test
mov
loopne
stc
in
cmp
or
aad
sbbl
inc
and
popa
mov
jmp
pop
sbb
sbb
inc
dec
inc
sarl
mov
frstor
adc
leave
test
add
dec
js
dec
std
decl
sub
xor
jb
cmp
shll
ljmp
add
add
push
push
xor
popf
adc
or
jecxz,pt
mov
push
stc
sbb
pop
jbe
sbb
call
bound
cli
xorl
inc
mov
xor
mov
pop
cmp
cmp
pop
dec
cmp
repz
imul
sub
std
push
cmp
lea
testl
jns
mov
jno
mov
mov
push
pushf
imul
lahf
jnp
les
or
leave
and
adc
add
dec
lods
mov
xchg
test
mov
jle
cs
movd
pop
dec
imul
pop
dec
aad
jne
dec
jle
inc
mov
pop
or
fidivrs
push
jge
mov
or
pop
add
imul
sub
nop
cmp
cmpsl
ja
into
add
add
xchg
sahf
cmpsb
cmpsb
jle
popf
adc
or
loopne
subb
les
fisubl
mov
dec
or
xor
pop
rcrl
sti
mov
stc
popf
call
orl
jne
add
aaa
jae
psubw
inc
mov
pop
loopne
adc
bound
popf
mov
jmp
imul
mov
pop
adc
jbe
mov
xor
mul
rcl
mov
sbb
pop
mov
pop
or
ja
lret
lcall
enter
mov
out
pop
push
shlb
jecxz
pop
add
loopne
inc
mov
out
push
jecxz
mov
lds
popf
mov
pop
mov
pop
xorb
jmp
cmc
xchg
test
fmuls
cmp
jg
sbb
into
jecxz
push
sbb
push
mov
std
call
sub
or
push
or
fcomps
dec
out
mov
lods
xchg
data16
mov
push
ja
sbbb
addr16
inc
repz
test
or
cwtl
pop
lret
test
lds
and
and
in
xchg
loopne
sbb
lods
mov
jge
inc
cld
ss
mov
sub
jecxz
sbb
add
bound
int3
jnp
sahf
nop
call
and
push
stc
mov
cld
cmc
les
mov
mov
nop
into
sbb
movsl
enter
stos
adc
mov
jge
sbb
jle
js
in
frstor
cltd
or
inc
inc
iret
test
mov
pop
and
sbb
insb
sub
pop
dec
mov
xchg
test
dec
push
pop
popf
js
sub
pop
jns
inc
and
leave
iret
pop
fwait
pop
pop
xchg
push
sbb
fstpl
xor
push
xor
sbb
mov
popf
loope
mov
jg
movsb
jns
jnp
imul
pop
fs
fiaddl
sti
sub
and
pop
imul
daa
mov
sbb
sub
shrb
aad
lcall
popf
in
mov
push
mov
fwait
orb
test
aaa
dec
xchg
aad
loope
fidivrs
cmpb
push
adc
ja
sub
add
jmp
sbb
jb
cmpsb
cmp
insb
xchg
sbb
lods
adc
mov
dec
int
ss
std
jmp
pop
jg
mov
call
sub
sbb
mov
sbb
cmp
stos
aad
jge
aaa
lods
mov
fmulp
mov
pop
cwtl
sbbl
add
bound
sti
orb
ficoml
mov
pop
pusha
inc
lock
repnz
inc
loopne
push
dec
or
jnp
ja
lcall
or
push
es
xor
jmp
nop
adc
or
or
lahf
pop
mov
jno
loop
out
or
and
lock
leave
or
or
shl
pop
faddl
ljmp
sti
das
iret
or
test
cmp
inc
mov
xchg
sbb
and
bound
shrl
adc
insb
mov
movq
or
js
test
data16
daa
or
scas
rorb
mov
xor
cmc
pop
add
not
sbb
or
jbe
add
sub
jae
into
rcll
lahf
push
in
fdivl
rorb
mov
mov
inc
insb
add
pop
pop
jle
jmp
sbb
mov
notb
loope
aad
inc
cmp
jl
and
or
adc
ds
rcl
test
adc
scas
in
repz
adc
je
out
mov
cmp
mov
imul
aam
push
sbbb
or
sbb
shll
jnp
jns
adc
hlt
in
fsubrs
jae
xchg
inc
ss
xlat
mov
mov
mov
or
push
or
push
or
xchg
sub
push
sub
mov
test
cmc
pop
gs
push
push
icebp
cmpsb
mov
pop
fists
movsl
popf
dec
fcmove
lods
into
mov
in
sub
xchg
sahf
push
sub
sub
mov
jns
mov
lock
lock
add
mov
mov
mov
mov
rcrl
js
cwtl
dec
mov
and
mov
jns
test
and
pop
or
mov
mov
fisubrl
pop
cwtl
sub
mov
dec
orb
dec
shl
in
js
or
shrb
sahf
ja
dec
push
cmp
ja
mov
out
and
dec
mov
into
inc
mov
ret
cwtl
cmp
lret
add
je
xor
negb
push
stc
fsts
adc
sbb
test
push
push
jecxz
jle
push
testb
gs
aam
fbld
lods
mov
jle
inc
mov
mov
insb
or
pop
inc
mov
fldenv
insb
pop
movsb
push
leave
imul
cmp
jbe
push
mov
ja
les
push
inc
fbstp
dec
sub
mov
sub
pop
popf
test
in
lods
push
fnstenv
xor
mov
in
or
adc
mov
jmp
push
sarb
shl
cmp
cmp
mov
fidivrs
dec
and
push
cmp
sbb
jge
mov
pop
push
sub
pop
push
clc
push
jp
sbb
and
lahf
jle
clc
push
nop
lahf
icebp
pop
xor
jge
outsl
shrb
lods
pop
mov
test
idivb
lods
shll
daa
in
scas
out
out
pop
mov
and
movb
jle
into
mov
daa
cmp
imul
ret
dec
mov
pop
hlt
pop
or
out
insl
jecxz
add
int
andl
xchg
cmc
xchg
or
jo
xchg
mov
mov
jge
arpl
jbe
push
cld
xor
mov
adc
inc
mov
scas
or
daa
or
rorb
mov
dec
aas
dec
mov
cwtl
addr16
imul
pusha
dec
jmp
push
dec
inc
scas
pop
iret
aaa
sbb
cwtl
dec
in
xchg
mov
repnz
or
in
fwait
pop
scas
imul
and
push
sub
and
jbe
mov
dec
and
jne
xchg
js
fsubp
push
jle
jne
xchg
ljmp
mov
fsubrl
adc
jae
adc
sbb
or
fucomp
gs
incl
fisubrs
int3
or
mov
ss
sbb
test
roll
adc
sbb
sbb
jle
xor
mov
or
stc
out
mov
out
dec
xchg
jp
jl
cmc
add
andl
bound
imul
jmp
jmp
inc
hlt
divb
sbb
loopne
inc
sbb
jl
mov
das
repz
or
shr
imul
mov
pop
lret
jnp
mov
enter
jne
and
push
mov
ljmp
push
imul
add
test
lret
outsb
or
pop
daa
add
mov
jbe
dec
sub
xchg
dec
and
mov
aas
xchg
or
repnz
shlb
jno
push
cmp
cltd
std
lret
out
out
cmp
rorb
dec
and
mov
les
mov
inc
push
lret
or
test
sbb
sub
aad
stc
addr16
mov
push
push
add
dec
and
stos
rcrl
xchg
cmp
jle
push
in
add
or
imul
mov
dec
pop
pusha
mov
xlat
xchg
les
or
imul
mov
mov
inc
add
lds
adcl
pop
scas
test
out
loop
and
push
and
pop
jae
mov
jmp
repnz
xor
mov
mov
aam
in
outsl
mov
push
add
fcomps
fnsave
int3
mov
or
pusha
pop
or
xchg
push
mov
jmp
lret
mov
bound
lret
test
gs
dec
ret
push
cmp
sbbb
and
inc
jbe
stos
xor
pop
das
sbbl
lea
mov
repnz
test
or
icebp
shlb
mov
sub
dec
xor
stos
fnsave
shll
imul
ret
push
cltd
add
jns
and
xchg
pop
mov
mov
and
sbb
cmp
cld
jl
pop
or
and
in
mov
js
mov
mov
fwait
xor
pop
stos
pop
je
popa
clc
leave
jnp
cld
pop
mov
fisttpl
test
push
mov
shlb
add
push
jb
add
addl
jp
ja
sub
repz
pop
sub
push
push
push
jle
cmovno
xor
stc
sbb
addl
xchg
jns
add
xor
mov
pop
pop
fidivs
ds
sub
mov
inc
enter
xchg
inc
stc
jmp
scas
or
or
push
das
repnz
repnz
cmp
lock
iret
dec
jg
js
popa
in
popf
push
dec
jecxz
sbb
jns
movsl
sbb
out
dec
int
adc
or
inc
mov
mov
xor
pop
in
aad
pop
mov
xchg
ror
test
cmp
in
mov
mov
ffree
jp
fs
adc
pop
add
sub
ds
sbb
andb
inc
aas
xchg
cmc
xchg
cmp
or
fmul
jbe
or
push
add
xchg
or
dec
sbb
pop
jle
mov
enter
aad
shlb
adc
add
call
ret
or
es
add
sbb
or
pushf
ljmp
lea
push
ret
imulb
lret
sbb
mov
push
jle
pop
imulb
int3
xchg
push
xchg
dec
push
pop
jbe
mov
popf
mov
xlat
repnz
inc
loop
sub
mov
mov
cmp
lret
es
imul
inc
xor
add
enter
mov
and
sbb
je
testb
ret
jl
push
lock
es
mov
xchg
dec
mov
cmp
lock
fidivrs
or
xchg
adc
cmpsl
rcrb
pop
jo
loopne
arpl
or
inc
imul
addr16
adc
inc
test
int3
je
pop
in
aaa
mov
mov
bound
mov
out
iret
rclb
pop
int
shlb
adc
pushf
push
mov
out
push
imul
mov
sub
cmp
pushf
clc
xchg
push
jno
icebp
push
scas
mov
pop
jo
adc
mov
push
mov
mov
js
mov
icebp
test
add
cmp
imul
dec
lret
fiaddl
out
cmp
dec
pop
sub
mov
dec
jne
xchg
mov
mov
or
and
je
sbb
jnp
push
mov
call
jl
movsl
outsb
mov
das
jle
push
pop
or
ret
push
mov
stc
mov
stc
fwait
leave
je
lahf
stos
lret
mov
xor
repnz
int
movsb
jle
sub
test
fwait
test
mov
movsb
xchg
mov
add
mov
int3
in
pop
and
adc
repnz
cltd
inc
es
imul
mov
pop
cmp
stos
arpl
stos
sbb
lcall
push
idivb
daa
xlat
sbb
xchg
mov
add
sarl
dec
xchg
cmp
cmp
mov
int3
adc
sbb
jbe
stos
jmp
push
mov
and
cmp
or
xor
mov
add
flds
js
ja
sbb
lcall
dec
repnz
jns
cmp
cmp
dec
sbb
dec
mov
inc
mov
loope
hlt
dec
mov
fs
cli
dec
add
xor
mov
repz
cmpb
scas
clc
pop
repnz
sbb
imul
push
addb
xor
pop
mov
stos
lods
mov
movsb
cmpb
dec
nop
push
jo
jge
or
sub
pusha
pop
movsl
nop
sub
pop
andb
ret
sub
lret
add
ja
lods
scas
add
mov
mov
dec
movsl
and
inc
jo
jle
mov
lock
mov
out
pop
or
popf
aam
scas
or
add
fwait
mov
lds
sub
fstpt
xor
loope
or
mov
stc
and
in
out
jnp
insb
pop
jmp
pop
xchg
dec
outsb
cld
cmpsb
ja
aad
sbb
cld
loope
repnz
push
lahf
xor
or
mov
addr16
fdivr
lret
addl
mov
jne
bound
xchg
jle
inc
addb
dec
enter
scas
fstpt
or
jae
mov
into
pushf
or
repnz
xchg
jge
sahf
add
push
adc
or
xor
clc
xchg
mov
movsl
add
sbb
mov
loope
out
push
jae
jo
add
mov
cmp
out
adc
pop
lods
mov
cwtl
lcall
dec
daa
xor
pop
cmc
mov
jle
add
dec
cmp
ja
sbb
cmp
insl
cmp
cltd
mov
scas
nop
daa
fidivrs
adc
repz
lret
clc
or
adc
scas
out
in
pop
scas
pop
movsl
mov
loop
or
repz
pop
mov
jne
das
into
ja
push
dec
arpl
push
daa
or
mov
mov
xor
xor
mov
jbe
mov
jg
sarb
jo
fstp
sti
mov
test
xor
rdpmc
and
mov
int
add
ficomps
sbb
push
in
jl
sbb
aam
xor
pusha
cmp
pop
gs
inc
push
sbb
into
in
add
cmp
jmp
dec
xor
outsb
cmovp
pop
adc
mov
pop
jle
ficompl
mov
inc
add
mov
icebp
xchg
sub
mov
jle
cmpb
sarl
stos
out
xchg
cltd
xchg
xchg
mov
or
pop
cmp
repz
les
mov
sbb
push
mov
mov
lret
lods
lret
pop
mov
outsb
cs
or
inc
jl
out
jbe
leave
xor
out
or
cwtl
mov
sub
xchg
mov
stos
mov
cltd
es
push
addr16
int3
jp
push
mov
push
outsb
je
or
push
enter
cmpsb
dec
or
mov
push
je
fsubr
out
sti
jne
add
fstpl
pop
dec
and
sub
mov
popa
pushl
iret
lea
repnz
adc
aaa
xor
pusha
push
loop
pop
fisttps
or
sub
fxch
test
ret
fidivrl
xchg
or
cmp
aad
dec
cmp
lods
push
jg
xor
imul
int3
enter
repnz
inc
inc
pop
pop
mov
pop
or
dec
rcrb
pushf
mov
scas
int
mov
sbb
mov
je
inc
or
xchg
inc
std
sub
mov
add
std
aas
sbb
xor
xor
push
pop
and
pop
clc
shl
or
clc
std
into
gs
inc
inc
jle
mov
dec
mov
fsubrl
enter
scas
pop
adc
pop
pusha
outsb
or
mov
cmpb
xor
pushl
jg
pop
dec
ret
or
xchg
sahf
ds
sbb
stos
shrb
jnp
cmc
cli
in
cs
pop
out
bound
nop
fs
call
aas
lock
movaps
dec
scas
outsl
pop
aad
pop
or
shrb
rorb
popf
lds
and
and
data16
outsl
scas
cmc
loopne
mov
popf
adc
mov
push
jns
dec
fiadds
sbb
fcmovb
arpl
jbe
add
ljmp
xchg
mov
int3
sbb
adc
adc
jge
inc
lea
jns
stc
out
lret
scas
popf
pusha
cmc
sbb
out
push
mov
insl
mov
dec
in
xchg
dec
sbb
sbb
push
push
dec
push
cmp
in
jns
inc
ret
dec
xchg
adc
inc
jl
mov
testb
ffree
pusha
and
scas
add
or
popa
cwtl
mov
inc
mov
sbb
pusha
inc
aam
ret
add
xlat
jmp
fwait
mov
or
inc
pop
xor
pop
inc
mov
in
cmc
std
pop
adc
hlt
mov
jle
test
xchg
int3
cwtl
inc
sbb
xchg
cmp
jns
jmp
mov
lret
add
and
in
push
in
xchg
fstpt
pushf
xor
sub
pusha
inc
mov
loopne
ja
push
inc
lcall
pop
fdiv
xor
out
lock
mov
mov
pop
mov
insl
fsin
cltd
popf
adc
adc
fs
or
or
cli
pop
rolb
insb
xchg
ljmp
in
xor
mov
ljmp
sub
fcoms
fmull
sub
lock
sbb
pop
add
fcomps
adc
mov
xchg
popf
pop
or
imul
xchg
cmp
inc
scas
push
les
xchg
jle
sub
rolb
xchg
stos
mov
cltd
xchg
repnz
in
dec
test
inc
push
insl
xor
xor
pop
add
push
outsl
mov
int
cmp
cmp
mov
out
stos
or
pmulhuw
jle
or
jns
lret
sti
add
jns
jne
and
movsb
test
movnti
call
and
lea
lahf
mov
mov
flds
std
cmpsl
or
xor
mov
out
jno
out
int
mov
cli
cmc
adc
xchg
sub
jno
mov
test
fwait
cli
dec
std
insb
aaa
clc
icebp
or
mov
lret
dec
add
mov
bound
out
and
inc
xchg
rcll
fmul
pusha
dec
into
movsl
sbb
push
bound
loop
or
mov
and
dec
or
stos
jae
test
mov
rorb
mov
outsl
arpl
push
xlat
and
xchg
adc
sub
jbe
jle
data16
shrb
rorl
lcall
leave
inc
jne
xor
in
xchg
inc
mov
push
test
pop
xor
inc
stc
pop
test
xchg
popf
les
mov
fs
inc
sbb
lock
jbe
adc
rorl
stc
pop
int3
pushf
fldcw
mov
mov
das
jecxz
hlt
stc
push
pop
adc
addr16
cltd
in
add
jp
inc
sbb
inc
in
jae
sti
add
pop
xchg
int
jb
lahf
mov
dec
cs
lret
mov
lods
ret
pop
cmpsl
xor
iret
or
adc
xor
push
push
hlt
jbe
inc
mov
bound
mov
or
cwtl
jae
js
es
mov
sbb
mov
daa
inc
sbb
cld
xchg
cltd
jle
push
or
addb
and
mov
stos
outsb
test
cltd
push
fdivr
push
dec
sbb
xor
dec
nop
lret
dec
mov
cmp
push
cwtl
mov
mov
je
call
xchg
mov
inc
xchg
sti
inc
add
dec
jmp
mov
sbb
mov
push
xor
mov
mov
ds
mov
setle
ds
cmp
jmp
mov
inc
subb
pop
cmp
xchg
imul
leave
dec
sub
ss
aas
stc
pop
and
lcall
xchg
in
sub
je
rol
or
push
xchg
inc
cmp
ret
insb
jbe
sbb
push
dec
jmp
ffree
mov
sub
pushf
dec
in
or
fsubs
adc
sbb
mov
je
push
mov
dec
scas
or
scas
and
jbe
aad
jle
add
sti
stos
pushf
push
clc
in
inc
int3
jle
xor
push
test
adc
test
scas
xor
or
lahf
sbb
jnp
add
jp
bound
mov
push
fwait
js
pusha
mov
fstp
pop
sbb
xor
dec
jle
imul
das
mov
lret
dec
add
cld
aad
aaa
int3
mov
sub
movsb
test
cmp
cltd
loope
mov
pop
add
pop
and
xchg
cmpb
cmpsb
push
ret
xchg
sub
jbe
mov
cmp
sar
arpl
xchg
mov
cmp
and
pop
cld
push
mov
js
add
cmp
push
cmp
js
inc
sahf
and
mov
jp
imul
rclb
jne
sbb
aas
xchg
xor
add
punpckldq
add
adc
int3
inc
jns
pop
jmp
shlb
and
mov
aad
mov
pop
mov
xor
adc
dec
test
mov
pop
mov
jbe
test
pop
lahf
xchg
jnp
outsl
popf
push
inc
push
mov
enter
out
fs
adc
xchg
jp
ja
lret
lcall
push
pop
testl
cmp
xor
and
mov
mov
lods
push
pop
or
pop
movsl
ljmp
xlat
loopne
xchg
pop
xor
pusha
mov
cmp
fiadds
test
inc
insl
sub
jle
dec
out
cmp
sub
jb
mov
mov
or
mov
lods
or
lahf
gs
repnz
sub
and
ficoml
jae
cmp
lock
mov
dec
in
jbe
loop
xor
add
test
popa
ret
int
xchg
dec
mov
paddusw
out
out
or
lds
jmp
in
push
shr
xor
cmpsl
mov
add
add
xor
dec
jle
push
aaa
mov
mov
jle
xor
inc
mov
jge
bound
lahf
adc
and
int3
in
jns
pop
push
mov
jo
or
imulb
and
shrl
inc
xchg
or
ret
shrl
push
rcrl
testb
movsb
mov
push
add
addr16
imul
dec
sarl
mov
ja
aas
decl
mov
xchg
das
jle
aas
cld
inc
push
hlt
and
adc
in
push
nop
test
imul
jl
into
or
or
or
in
mov
pop
mov
out
rclb
mov
dec
je
enter
jo
cmp
testl
or
mov
iret
fdivrl
stos
out
adcb
mov
popf
and
test
inc
dec
mov
sar
or
xchg
ficomps
out
mov
cmc
notl
pop
xchg
xor
fwait
dec
in
cmp
jge
jle
dec
shll
jno
lret
add
pop
xor
cmp
jle
pinsrw
xor
ljmp
and
movsb
or
int3
mov
sub
pop
jae
jbe
xor
or
mov
mov
shl
push
push
pop
cli
jb
xchg
push
mov
adc
pcmpeqb
xor
decb
fistpl
data16
mov
xchg
js
pop
sbb
xchg
push
insb
push
fstps
mov
mov
cmp
and
jle
push
popf
mov
pop
jg
mov
iret
add
movsl
mov
or
lea
mov
push
fwait
aaa
mov
sub
test
outsl
sbb
out
adc
dec
lock
gs
xlat
xor
stc
negb
push
jge
pop
mov
sub
or
pop
mov
fadd
or
mov
cmp
dec
sarb
filds
pop
orb
jl
jp
insl
dec
add
push
repnz
xchg
mov
test
jne
sahf
add
xchg
movsl
sbb
xchg
jle
cmp
lods
inc
jns
sbb
enter
pop
notl
leave
js
loope
xchg
mov
add
mov
lea
stc
pop
push
test
jle
aas
jne
ja
mov
or
pop
nop
mov
mov
xor
je
cmp
mov
es
sti
dec
imul
gs
insb
xor
or
jnp
ss
pop
inc
loope
sbb
sbb
jbe
popa
adc
push
int
shll
int3
cmp
repz
fldenv
xchg
loopne
cmp
mov
or
jle
cmp
adc
jb
jecxz
gs
repz
cltd
jno
mov
inc
xor
and
sbb
xchg
loope
mov
pop
sahf
daa
push
push
in
pusha
std
mov
aas
mov
sub
dec
mov
ds
in
inc
ja
cmp
out
stos
mov
inc
fld
mov
and
dec
mov
inc
sbb
push
push
xchg
pop
stos
call
add
add
ret
daa
or
icebp
mov
mov
pop
dec
shrb
std
pop
xor
fiadds
ja
shrl
lcall
inc
sbb
into
fidivrl
sub
push
movsl
pop
inc
test
mov
adc
imul
popa
mov
pop
push
xchg
cwtl
inc
cmp
push
mov
sub
cmp
or
xor
mov
pop
repnz
in
jp
sbb
jl
leave
aas
pop
sbb
xchg
or
test
cmpsb
nop
fucom
inc
jbe
xlat
shr
fs
jle
mov
adcl
mov
shrb
push
mov
xchg
daa
in
jp
inc
movsb
and
xchg
fidivrs
pop
dec
jle
jmp
push
cltd
pop
pop
inc
push
out
idivb
xchg
scas
pop
sbb
iret
data16
scas
shlb
cmp
mov
dec
add
jo
add
or
jne
int3
jbe
mov
xor
sti
push
xor
jbe
xor
dec
ss
sbb
sar
out
xchg
jno
mov
test
in
xchg
or
das
js
cwtl
xchg
push
test
and
or
fucom
enter
repz
inc
sbb
jne
mov
pushf
push
fsubs
lock
jp
sti
mov
scas
fildl
push
mov
and
and
xlat
hlt
jl
mov
mov
rcr
stos
xlat
out
fmuls
fsubl
sub
pop
push
xchg
mov
dec
xor
push
inc
mov
insl
sub
push
sbb
dec
xchg
pop
pop
and
mov
sbb
insb
inc
shlb
imul
push
repnz
dec
mov
fistpl
fmuls
movsb
sbb
sahf
mov
fs
xor
adc
test
mov
inc
sbb
jg
subb
cwtl
sub
aam
cmpsb
mov
sbb
call
lcall
shr
jno
inc
push
mov
sti
test
xchg
aam
pop
xchg
sub
out
cmp
push
lcall
push
seta
pop
leave
xor
pop
xchg
ja
fiadds
cmpsl
negl
int3
pop
dec
mov
sub
test
cmc
out
sarl
sahf
jae
adc
dec
adc
xor
sub
mov
mov
sbb
insb
pop
inc
mov
sub
mov
or
jbe
pop
fidivl
adc
dec
xorl
sbb
push
sbb
fldl
jle
push
adc
sbb
movb
test
mov
and
sub
add
mov
inc
insb
lcall
jmp
rolb
inc
mov
pop
loopne
imul
xor
sbb
mov
add
mov
int3
cmp
inc
xchg
fistl
dec
jno
dec
test
cmp
orb
popf
pusha
aad
repz
loop
inc
sub
in
jmp
ds
cmp
cltd
adc
pop
out
out
fisubs
cmpl
dec
push
in
cmp
mov
or
lods
xchg
mov
lret
push
pop
in
jmp
cmp
or
xor
jg
rcr
faddl
xor
sbb
cld
jg
jge
popa
movl
dec
int
sub
dec
pop
mov
inc
jmp
mov
fstpl
pop
mov
push
outsb
mov
xchg
inc
xchg
sbb
xchg
pop
adc
fcoml
dec
fcmovne
in
pop
scas
add
adc
cmpsb
adc
call
and
popa
jle
mov
or
lret
jne
mov
lock
pop
xor
pushf
inc
in
sbb
and
inc
out
data16
pop
and
mov
aam
xlat
test
inc
ds
lock
into
mov
test
mov
repnz
pop
je
or
push
in
int
push
nop
punpcklbw
mov
xchg
enter
adc
push
or
loop
ds
popa
mov
jns
sahf
gs
push
xor
popa
mov
pop
bound
in
dec
mov
iret
sub
lret
test
xchg
xchg
jne
in
out
into
insl
lcall
inc
ja
cmp
sbb
dec
sub
ror
mov
xlat
mov
jbe
loopne
mov
testl
jo
mov
shlb
lret
ds
mov
mov
mov
inc
jmp
scas
aam
enter
sbb
lret
test
ljmp
xchg
pop
xchg
mov
outsb
push
push
aad
push
cmp
jle
mov
jmp
rorl
mov
add
pop
ds
xchg
leave
inc
pop
push
add
ret
shlb
mov
cltd
jo
js
notl
ja
jle
jo
mov
or
sub
push
into
mov
inc
aad
cmp
cwtl
out
pop
aaa
dec
or
fisttpll
sub
xchg
jecxz
dec
inc
mov
and
or
xlat
fdivr
mov
pop
lahf
in
nop
das
or
cmpsl
jle
shll
ja
jmp
hlt
test
or
sar
loopne
jle
jle
push
jo
add
or
imul
xchg
add
inc
cmp
cmp
pop
shlb
jg
cmpsb
xor
pop
inc
filds
and
fdivrl
mov
clc
push
and
sub
into
xchg
or
pop
jnp
push
jae
mov
adc
mov
pop
dec
xchg
mov
push
sbb
inc
or
in
es
xchg
les
rcrb
cmp
std
jae
sbb
fucomp
mov
jns
sbb
enter
fcmovne
push
fdivrl
jno
bound
mov
ljmp
mov
ja
pop
mov
sbb
ss
pop
in
inc
push
loop
add
mov
aas
pop
dec
cmc
inc
stos
pop
xor
xchg
mov
popf
mov
mov
decb
jno,pt
repz
pop
mov
pop
data16
cmp
jl
or
xchg
mov
mov
orl
inc
pusha
sub
mov
shl
mov
je
mov
pop
mov
scas
cmp
jns
mov
xchg
int3
mov
sub
cmpsb
xchg
or
scas
loopne
adc
idivl
dec
jle
fucomip
rorb
scas
add
push
shll
stos
lods
push
lcall
mov
fstpl
pop
cltd
adc
pop
inc
imul
cwtl
sub
fidivrs
jb
cmpsl
mov
push
or
inc
es
or
add
sbb
jo
enter
xor
add
cld
xchg
dec
lods
or
pop
les
mov
leave
mov
test
psubusb
rorl
cli
pop
push
test
jbe
push
ret
mov
mov
shll
add
xor
rcrl
cli
mov
lret
repz
lcall
pop
mov
out
movsb
push
sarl
js
mov
push
inc
or
mov
cld
cli
sub
pushf
scas
out
fdivl
xor
out
adc
mov
jmp
iret
decl
dec
ja
jnp
mov
fdivrs
data16
or
fmuls
lret
popf
mov
pop
popa
mov
popa
shrl
mov
mov
mov
adc
inc
mov
out
scas
out
add
mov
std
cmp
mov
outsb
in
test
sbb
mov
mov
hlt
mov
or
shrl
gs
push
adc
cmp
fs
jle
or
sbb
outsb
in
mov
or
decb
xchg
dec
adc
sub
mov
jle
xchg
lock
fbstp
push
jge
sub
in
cmp
push
lcall
dec
push
and
mov
inc
mov
mov
push
jbe
lods
into
cs
push
xchg
mov
xor
push
loop
sub
xor
int
inc
in
ja
test
add
inc
cs
push
sti
repz
pop
je
stc
in
xchg
lea
mov
sar
lahf
lcall
mov
xor
out
add
neg
je
fisttpll
or
xchg
and
fstpl
pop
xchg
lea
adc
test
dec
sahf
inc
inc
adc
lahf
pop
cmp
loop
test
inc
or
sbb
sti
mov
lret
cmc
pop
inc
push
mov
int
add
push
out
push
xor
test
or
mov
push
mov
iret
jecxz
mov
xor
or
jnp
lret
xor
out
dec
jmp
into
xchg
pop
pop
shlb
cmp
mov
shll
or
sub
mov
mov
cmp
testl
inc
repnz
jo
jle
mov
bound
rclb
or
xchg
mov
rcrb
or
int3
cs
or
cs
ror
inc
and
shll
or
push
jb
and
pushf
cmpsl
and
pop
push
loope
mov
push
pop
jae
std
loopne
icebp
xchg
lret
lret
or
enter
ror
data16
mov
mov
shll
dec
and
sub
dec
push
fisubrl
jg
rorb
xchg
dec
mov
dec
push
adc
scas
shll
jg
in
aam
mov
add
fmul
fbld
lods
adc
or
out
sahf
or
lahf
out
pop
sbb
sbb
adc
jge
notl
push
dec
sbb
orb
aad
psadbw
inc
jns
fisubrs
push
jb
dec
pop
adc
setl
std
jecxz
ljmp
int
and
shl
mov
in
rclb
sbb
dec
popa
loopne
xchg
jle
and
jp
sub
cmp
push
dec
mov
add
and
in
pop
xor
cli
fucomp
cs
adc
mov
xchg
js
sub
dec
push
pop
les
filds
and
shll
jecxz
pushf
pop
or
dec
mov
mov
pop
jmp
inc
sbb
mov
push
insb
sbb
pop
ret
mov
outsb
adc
std
hlt
mov
nop
jg
xor
sub
call
aas
je
sbb
stos
mov
fs
mov
in
mov
or
mov
sbb
fistl
pop
andb
mov
xchg
std
test
mov
or
call
stos
ljmp
and
repz
and
pop
cmpsb
lock
xor
xchg
sti
xchg
jmp
or
jb
out
mov
aam
jl
mov
rorl
push
dec
mov
test
cmp
test
xchg
jp
fisubrl
jae
adc
sub
or
adc
adc
iret
loope
fwait
or
xchg
jle
daa
mov
loop
movsl
adcb
xacquire
in
dec
push
xchg
xlat
mov
jg
lock
sbb
lcall
jle
dec
dec
aam
xor
out
jns
ds
js
pop
test
int3
jmp
hlt
pushf
lock
jbe
pop
hlt
loopne
jbe
dec
push
inc
movsb
cmp
jns
adc
xlat
aam
xchg
sbb
insb
push
setl
push
inc
add
or
jle
rorl
cwtl
icebp
data16
ss
mov
add
and
scas
mov
sarb
mov
outsl
rolb
xor
outsl
cwtl
jb
sbb
adc
add
xor
or
enter
out
jns
mov
or
ss
roll
lret
xor
fbstp
push
clc
sbbl
cld
pop
push
xchg
mov
add
mov
sbb
cltd
xchg
test
jp
jle
lock
inc
or
jbe
mov
pop
xor
int3
adc
inc
movsl
insl
pop
mov
dec
mov
test
adc
dec
ljmp
inc
or
jb
cld
mov
mov
mov
mov
sarb
mov
cmp
mov
in
adc
mov
dec
mov
dec
hlt
xchg
mov
add
lock
xor
in
das
sbb
rcrl
mov
jle,pt
adc
jge
or
push
add
inc
mov
and
mov
adc
or
sbb
stos
lcall
xchg
jb
xchg
fsubl
mov
sbb
pop
cmpsl
jo
hlt
jmp
sbb
lods
inc
sti
pop
or
sub
out
aas
cmpsb
das
aaa
movsl
jns
scas
push
daa
addr16
lahf
lret
inc
mov
lret
mov
dec
push
je
sbb
push
jecxz
sbb
fwait
iret
jbe
notl
into
rolb
dec
cmpsb
mov
adc
dec
scas
inc
insl
inc
movsl
loope
int
jle
mov
or
mov
sahf
shlb
and
add
jg
or
sbb
xchg
aad
cmpl
bound
push
dec
adc
adc
mov
push
call
jg
movb
pop
mov
mov
adc
jo
xor
popf
mov
jne
push
pop
mov
fwait
aam
and
jbe
mov
mov
cmp
gs
cwtl
gs
or
repz
xor
xlat
xchg
out
mov
aaa
movsb
mov
mov
add
or
in
inc
mov
dec
and
notl
mov
repnz
xchg
dec
mov
enter
mov
pop
pop
jg
es
out
call
fstpl
dec
mov
popf
ss
loop
and
fwait
aaa
push
ljmp
js
mov
and
push
add
xor
pop
pop
pop
popa
adc
pop
cwtl
adc
mov
mov
mov
test
repnz
sbb
fnsave
jo
les
icebp
divb
mov
popa
or
mov
or
mov
jae
mov
in
adc
mov
out
inc
lds
pop
int
mov
stos
stos
xchg
adc
mov
negb
cmp
mov
sbb
sbb
xchg
sbb
xor
push
mov
insl
mov
sar
mov
stos
sbb
test
pushf
enter
std
jno
clc
xchg
stc
add
mov
scas
outsb
call
mov
pop
or
lods
or
es
or
in
shrb
std
cvtps2pd
lock
add
jae
and
dec
loop
lods
imul
pop
out
xchg
pop
push
cmp
push
scas
sbb
lea
mov
and
pop
jl
cmp
and
loop
pop
dec
mov
inc
loope
mov
and
sbb
fwait
test
jne
jnp
add
add
pop
cmpsb
pop
dec
mov
lahf
cld
es
mov
andb
or
jne
les
pop
cltd
in
mov
pushf
or
sub
adc
fcoms
or
add
dec
ret
and
push
ret
dec
ja
loop
xchg
adc
xchg
xchg
jbe
mov
int
testl
sahf
cwtl
jp
stos
ror
test
pop
in
sub
loopne
popf
adc
fldenv
adc
ret
hlt
mov
mov
xchg
fsts
pushf
ja
js
pop
imul
leave
das
fists
loope
cmp
nop
pusha
fwait
mov
pushfw
sub
pop
dec
xchg
and
xor
lds
mov
mov
jmp
mov
sbbl
pop
mov
or
imul
ljmp
jge
push
pusha
jo
push
into
in
cmc
or
push
aad
aad
sub
stos
es
cmp
mov
or
int
leave
repz
arpl
sbb
add
mov
rolb
fdivrl
dec
pop
xor
hlt
js
xlat
jmp
pop
jae
icebp
jmp
std
mov
sub
sbb
push
inc
inc
jle
and
mov
or
push
sub
call
or
enter
mov
leave
rcrl
scas
push
mov
mov
pushf
xchg
in
mov
into
fnstenv
sbb
mov
mov
lret
xchg
cmc
jne
mov
jl
xor
in
dec
pop
push
nop
inc
mov
xlat
in
push
adcl
inc
sbb
andl
in
fsubrs
mov
pop
inc
into
hlt
inc
adc
sti
jle
sub
cli
push
and
sbb
and
cmc
dec
lret
or
sub
cmpsb
aad
or
xchg
loope
push
jp
popf
hlt
enter
mov
mov
ja
xchg
fwait
dec
mov
mov
mov
mov
std
mov
lahf
pusha
addr16
movsb
test
lds
shrl
dec
xchg
or
cmp
sarb
jge
jge
fisubs
jl
call
inc
and
pop
xchg
jecxz
ds
lods
ret
xor
inc
out
sub
xchg
sbb
sub
mov
jmp
enter
out
cli
subl
or
cld
adc
or
push
mov
decl
aad
dec
pusha
orl
shrl
pop
sub
adc
movsl
mov
mov
andl
adc
xor
call
dec
es
stc
sub
in
cs
cmp
sub
enter
pop
or
and
pushf
and
pop
jne
insl
int3
xchg
pop
cmp
lods
fadds
xchg
fidivl
dec
pop
mov
call
test
mov
add
add
cmp
xor
jbe
shll
hlt
xorb
cmpxchg
or
imul
add
push
cmp
stos
dec
rclb
xor
int3
stos
out
loope
jb
xor
stos
cwtl
jmp
pop
xor
ror
and
out
push
pop
xchg
jo
jae
mov
bound
sbbb
jo
mov
or
fstpt
jecxz
cmp
push
add
mov
in
lods
add
add
xor
or
and
add
xorb
sub
sbb
shl
fwait
test
rcll
fnstcw
jae
mov
push
mov
cmc
stc
xor
jb
icebp
cmpb
adc
out
in
pop
jecxz
mov
cld
dec
imul
sub
jle
push
jg
das
nop
push
mov
push
sarb
imul
and
jmp
cmp
xchg
xor
in
idivl
xchg
or
cmpsb
and
mov
fisubs
out
je
mov
sub
fcomps
stc
aad
jge
movsb
test
adc
das
iret
adcl
int3
sbb
call
xchg
and
mov
xor
rcr
jo
test
push
fists
fs
cwtl
xor
mov
push
insb
mov
pop
push
add
mov
hlt
sub
and
jno
dec
out
push
aaa
mov
mov
pop
iret
cs
mov
arpl
aas
subl
pop
mov
int
adcb
mov
push
pop
sub
add
das
movsl
sub
adcl
data16
mov
dec
aaa
movsl
jmp
call
and
jmp
mov
lock
cmp
int
cltd
ret
jmp
and
pusha
hlt
outsl
fbstp
inc
add
inc
out
ret
outsl
repz
and
jl
movsl
test
andl
sub
add
push
in
lcall
sbb
sub
lret
inc
in
and
sahf
pop
jmp
xchg
xor
adc
or
pop
cmp
mov
push
or
lret
sbb
call
sbb
icebp
pop
and
sub
sub
idivb
pushf
leave
fcomps
ds
adc
add
bound
mov
jo
jne
test
xor
int
pop
push
lret
addb
imul
movsl
or
push
mov
cmc
inc
and
stc
jg
loop
push
fs
decl
dec
mov
adc
push
adc
push
or
add
dec
inc
pop
mulb
les
cli
push
dec
dec
loope
adc
push
or
jne
xchg
rolb
cmp
dec
dec
add
pop
push
stc
stc
add
dec
cmpsb
dec
dec
push
int3
stos
pusha
push
mov
idivl
sub
cmp
testl
popa
out
enter
movsl
xor
insb
jo
test
mov
test
enter
fimuls
xchg
lds
nop
or
sub
rcrb
je
mov
jl
pop
int
sbb
sbb
mov
pusha
add
push
pop
push
cltd
push
add
icebp
mov
mov
ret
cltd
inc
dec
in
movsl
adc
sti
aam
adc
add
push
pushl
pop
sub
iret
hlt
inc
ret
fs
ficoms
out
jg
push
pop
rclb
loopne
mov
in
or
loopne
dec
stc
dec
insl
xor
cltd
lret
popa
pop
mov
fs
jnp
and
mov
adc
fsub
push
not
adcl
cmp
mov
cmp
xor
in
or
xor
call
js
je
pop
scas
push
in
mov
ss
popf
inc
inc
mov
gs
adc
inc
dec
pop
inc
xlat
cs
dec
push
in
vdivsd
nop
pop
ret
xor
mov
dec
jns
stos
add
scas
repnz
popf
dec
aam
xchg
rorb
xchg
cmp
sub
adc
or
inc
sub
add
or
outsb
pop
ret
add
xor
or
xchg
cwtl
cwtl
or
jns
add
xchg
sarb
or
add
sbb
dec
cmp
in
ljmp
pop
xchg
lods
sti
das
xchg
dec
div
jmp
lret
out
dec
fidivrs
and
or
pusha
dec
push
ret
mov
dec
js
mov
sbb
and
ds
inc
das
dec
aad
cmc
in
push
jp
negl
ds
inc
in
inc
mov
add
imul
testl
pop
into
xchg
fsts
int
push
ja
push
jge
or
sub
imul
movl
imul
int3
xor
in
jmp
sbb
mov
test
mov
vmovaps
out
inc
pop
les
ficomps
push
pop
sub
imul
divl
add
fistps
cmp
mov
pop
test
inc
pushf
std
incb
xlat
movsb
addr16
xor
xor
jns
out
roll
dec
sub
int
popa
adc
push
jge
add
gs
jle
adc
fdivr
repnz
xor
jle
jmp
mov
lds
cmp
ret
sub
adc
or
pop
out
mov
dec
pop
ret
mov
or
cmp
addb
jnp
xchg
mov
xor
int
pop
jle
in
ljmp
dec
push
jle
mov
sub
rol
rorl
sbb
rclb
pop
or
or
shlb
push
add
mov
sub
popf
stc
pop
xchg
outsl
add
sbbl
std
arpl
insb
in
std
or
lods
sbb
sbb
pop
clc
hlt
daa
sbb
fiaddl
mov
dec
int
dec
push
addl
lock
or
pusha
and
xor
incl
sbb
sub
sti
fcoml
dec
pop
test
sub
lret
dec
outsb
call
iret
subb
test
jle
into
and
lahf
and
cli
test
mov
mov
or
add
mov
stc
dec
aam
test
cmp
sbb
flds
xchg
add
lret
pop
addr16
outsl
mov
fistl
cmp
inc
dec
adc
enter
movsl
and
inc
mov
mov
inc
push
and
pop
jmp
and
out
push
add
mov
aad
jle
or
cli
mov
aam
or
popa
gs
add
sbb
and
pop
pop
jbe
push
pop
xor
fldcw
push
iret
cld
in
mov
adc
push
lcall
fimuls
sub
mov
addl
cli
ljmp
jle
inc
outsb
lret
sti
or
sbb
cmp
xor
repz
xchg
add
cmp
xlat
fnstcw
and
mov
fisubs
dec
jg
add
mov
hlt
lock
dec
xchg
lds
push
loop
cltd
adc
mov
scas
shr
push
or
scas
jo
notb
enter
jno
jb
test
mov
adc
jle
push
mov
jp
sbb
and
imul
jb
js
mov
cmpl
mov
jle
dec
cmp
fcomps
mov
xchg
mov
jno
adc
jb
or
jp
mov
fisubrl
repz
mov
sti
cmp
ds
push
arpl
mov
enter
fs
dec
inc
repz
pop
mov
pop
incl
hlt
push
dec
fstpt
sub
sbb
mov
adc
xchg
imul
push
cmp
aas
push
mov
mov
push
scas
mov
jbe
xchg
dec
xchg
xchg
push
jle
mov
out
mov
mov
daa
sti
bnd
cmp
inc
pop
sbb
fldl
sti
or
sti
into
add
xlat
sub
movsl
and
jp
call
inc
mov
lea
inc
test
pop
jg
roll
insl
push
xor
mov
popf
sbb
mov
lds
xlat
pop
inc
js
movsl
mov
dec
call
stos
loope
loope
pop
sub
lret
and
mov
inc
jecxz
lret
test
cmc
sarl
fstpt
push
mov
jmp
or
lahf
dec
loope
bound
or
jns
andl
lret
aad
dec
fs
mov
ds
or
sbb
xchg
jno
push
or
nop
jle
enter
mov
frstor
xor
mov
and
dec
fcoms
push
pop
push
jbe
js
ja
dec
arpl
inc
cmp
popf
cmp
dec
aad
pop
xor
nopl
inc
pop
test
push
into
push
add
cli
fst
pop
popf
pop
mov
in
xchg
stc
out
jnp
dec
nop
ja
aas
jno
xor
push
ret
mov
adc
sahf
xlat
sub
jne
inc
sub
leave
add
std
sub
sub
mov
push
cmp
arpl
dec
inc
in
in
mov
test
dec
stos
mov
mov
cmp
lahf
mov
clc
cmp
or
dec
into
or
mov
punpckhdq
cmp
jns
out
insb
or
cmp
and
in
push
lret
idivl
popf
push
mov
and
push
push
rol
adc
xor
rol
xchg
push
sbb
push
adc
mov
in
or
mov
and
ror
sahf
add
add
fstl
add
in
jge
es
outsl
lods
mov
lret
inc
fwait
jle
xor
int
andl
cmc
addl
adc
scas
or
jmp
sbb
mov
push
add
les
mov
adc
shll
mov
dec
dec
dec
and
mov
inc
mov
and
push
mov
repz
jns
adc
imull
xor
dec
sahf
rcl
push
lret
jle
adc
shlb
decb
add
jle,pn
xchg
mov
mov
fisubrs
loopne
sub
stos
adc
push
cwtl
ljmp
clc
xchg
xchg
pop
daa
sub
mov
dec
mov
jp
jmp
add
push
mov
insb
pop
movsb
outsl
cmp
jle,pt
pop
cmp
or
adc
or
inc
dec
xchg
push
push
fdivp
xlat
push
mov
aas
ret
dec
pop
notl
and
push
xchg
mov
les
mov
xor
jbe
hlt
xor
out
cmp
jns
sbb
jnp
inc
adc
bound
cli
cmp
cmp
cmp
clc
ret
pop
rclb
cmp
mov
jle
pushf
lcall
pop
mov
add
adc
movd
mov
or
or
ljmp
and
pop
and
inc
out
pop
jg
pop
push
adc
dec
jecxz
lea
add
adc
hlt
popa
jb
pop
inc
inc
jns
mov
popf
pop
lods
mov
stos
lret
nop
jae
insl
jle
sbb
pusha
in
dec
xor
inc
jmp
xor
ret
cmpb
jp
into
jns
pop
in
jbe
stos
fmull
cmpsb
jmp
ds
or
lret
mov
sahf
add
push
loopne
sbb
rcrb
adc
dec
and
ss
mov
push
jns
inc
xchg
ds
mov
sti
loop
and
fwait
rol
stos
std
pop
adc
inc
jl
dec
jnp
and
adc
push
ds
mov
sbb
cmc
xlat
mov
dec
push
popa
dec
popa
pusha
mov
call
xchg
lock
int3
or
jge
repnz
dec
inc
xor
jge
jle
cmp
and
adc
add
sub
testl
adcl
sub
pop
add
mov
inc
or
fmull
aad
and
mov
lods
and
daa
mov
lahf
pop
push
push
and
inc
cmpsb
ja
xor
cmpsl
jmp
in
xor
or
int
vmread
mov
jle
xor
pop
cmc
add
mov
lcall
fwait
leave
push
ret
lods
movsl
aas
jo
jae
or
movsb
cmp
add
in
xchg
jne
rcll
ficoml
xchg
dec
test
repnz
loope
je
loopne
jle
mov
ds
sub
add
xor
mov
loop
or
outsl
or
adc
fsts
mov
lods
inc
or
jecxz
jle
or
pop
sub
test
pop
jns
add
iret
sbb
push
sbb
mov
push
push
mov
lea
push
montmul
cmpsb
add
cmp
adc
in
rcl
loop
mov
xchg
dec
or
mov
dec
mov
es
mov
jmp
mov
int
xor
lret
lock
pop
int
leave
mov
jns
lock
sahf
inc
push
pusha
insl
mov
cmpsl
cmpsb
aas
jns
pop
push
xchg
leave
lds
or
int
pop
mov
sbb
xor
inc
jle
sbb
sbb
push
ljmp
push
mov
jle
inc
or
movsb
jge
pusha
outsb
mov
mov
aad
ret
push
xor
dec
xorl
jle
push
fs
decb
xchg
or
movsl
xchg
frstor
mov
leave
push
rcll
or
je
int3
imul
mov
adc
dec
jns
cli
testl
push
dec
test
sbb
bswap
cmp
jle
cmpsb
in
scas
xchg
push
adc
in
push
dec
jnp
ja
enter
shll
ja
jge
xor
insl
jl
xchg
xchg
cwtl
push
pop
iret
adc
mov
fxch
push
stos
rcrb
mov
and
mov
nop
cmp
cs
mov
enter
mov
adc
mov
push
jle
pop
inc
add
clc
push
xor
pop
pop
dec
jge
fwait
ja
mov
mov
in
or
xchg
mov
dec
icebp
xchg
ds
dec
jl
mov
and
inc
mov
dec
sub
test
jnp
sbb
loopne
pop
xchg
aad
pop
popa
fs
xchg
inc
add
sbb
push
push
mov
pop
jmp
paddsw
jecxz
das
pop
mov
cmp
xor
movsb
sbb
push
leave
sub
js
cmp
push
jmp
xor
sub
xlat
push
out
sahf
or
loop
repz
outsl
sub
sub
mov
pop
sti
sub
xor
sub
aas
adc
bound
aad
xchg
scas
frstor
insb
fwait
or
sub
ljmp
sbb
test
outsl
aaa
int
cwtl
je
xor
jle
or
test
or
dec
xor
aad
aas
testl
fcoml
push
pop
add
pop
adc
sbb
sbb
or
cmpsb
adc
pop
jne
bound
push
push
dec
inc
push
outsb
pop
in
pusha
mov
jle
and
stos
jb
das
xchg
ss
dec
or
fsubl
cmp
mov
js
dec
andl
xchg
push
lcall
and
je
or
sbb
cmp
dec
jg
jecxz,pn
pop
scas
stc
mov
xlat
xchg
push
xor
mov
mov
pop
sub
imull
lea
pop
push
jns
fcoms
outsb
insb
pop
push
lea
dec
mov
lock
mov
mov
dec
loope
or
shlb
adc
int3
add
pop
cmc
repz
pusha
les
mov
call
insb
dec
and
and
loop
xchg
lret
stc
push
sbb
add
inc
mov
adc
addl
and
mov
mov
mov
and
mov
loope
and
fnstsw
inc
cmc
adc
scas
jno
sbb
push
or
adc
mov
mov
sbb
jle
out
lods
jp
daa
pop
out
jge
jge
rcll
movsl
and
mov
xor
jne
xchg
ret
icebp
inc
push
pop
mov
jae
and
inc
jge
ja
jbe
lds
mov
std
ds
sbb
xchg
jns
pop
out
dec
push
inc
dec
pop
xchg
in
ret
sub
xchg
mov
adc
inc
sbb
pop
jp
cmpsl
sbb
mov
mov
sub
and
push
xor
or
add
add
adc
inc
add
push
add
adc
and
or
add
mov
and
bound
add
push
and
and
add
inc
inc
cmpsl
or
push
push
sub
inc
sub
adc
add
push
add
adc
add
nop
inc
and
pop
subl
mov
add
addb
mov
add
mov
add
add
adc
add
dec
mov
add
or
inc
add
cwtl
add
or
addb
or
movsb
and
rolb
and
adc
mov
pusha
pop
or
inc
add
add
add
add
addb
or
adc
and
or
and
add
add
add
add
jo
and
add
mov
add
or
and
sbb
add
push
adc
inc
or
or
or
or
cs
add
mov
add
add
mov
add
add
push
addb
add
add
sbb
add
add
lret
add
inc
sub
les
add
add
inc
add
add
adc
add
adc
add
mov
sbb
add
nop
push
inc
add
addb
addb
adc
adc
rolb
add
inc
orb
sbb
and
add
add
inc
add
or
movsb
inc
addl
xor
and
add
pop
inc
and
and
add
add
add
add
push
adc
add
add
addb
mov
inc
mov
adc
add
and
add
inc
adc
enter
adc
nop
add
inc
add
pusha
xchg
add
add
dec
add
add
popa
or
dec
or
push
je
inc
add
addb
add
and
add
add
or
add
or
and
and
add
addb
add
inc
adc
dec
add
inc
adc
add
add
adc
add
add
mov
pusha
dec
adc
andb
add
add
add
orb
add
and
inc
add
add
adc
push
and
add
adc
add
or
add
and
add
inc
add
adc
or
sbb
add
add
add
and
or
test
inc
sbb
add
add
add
or
pop
xor
andl
inc
bound
add
add
sbb
and
adc
rclb
dec
add
add
inc
add
and
addb
addb
addb
inc
xor
add
add
mov
push
cwtl
or
add
add
addb
add
add
push
test
add
add
add
add
inc
inc
add
stos
add
rolb
adc
add
add
inc
mov
xchg
addb
inc
or
addl
add
inc
or
addb
xchg
inc
add
pusha
inc
push
add
push
addl
add
push
cmp
xorb
add
add
xor
inc
adc
adc
inc
or
inc
add
test
aam
inc
add
sbb
or
add
xor
add
dec
add
adc
add
add
loopne
or
add
adc
add
add
inc
nop
and
inc
add
add
or
and
dec
adc
add
add
sbb
and
or
add
push
adc
dec
push
pusha
addb
add
adc
add
and
add
adc
add
jo
addb
add
add
repnz
add
or
add
and
add
adc
inc
add
add
add
pusha
or
push
or
adc
add
inc
add
addb
add
addb
ret
add
add
add
bound
ror
inc
orl
add
and
les
out
add
add
mov
add
and
adc
or
xor
and
add
add
xchg
sub
and
orb
addl
inc
addl
adc
add
and
addl
loopne
addb
add
inc
add
adc
and
movsb
and
add
shlb
pusha
or
sbb
and
adc
sbbb
add
pop
add
xorb
adc
add
add
push
nop
dec
adc
addb
pop
add
push
add
inc
or
add
push
or
adc
and
add
mov
add
add
add
inc
and
add
and
add
and
test
or
inc
add
dec
inc
loop
add
and
adcb
and
mov
push
add
and
add
add
push
xor
addb
adc
mov
add
add
add
and
test
add
mov
add
jo
add
inc
rolb
add
add
add
add
add
adc
rolb
leave
add
add
add
add
and
or
adc
add
xchg
adc
and
lock
adc
add
hlt
lods
rolb
add
and
add
xchg
add
or
or
add
and
inc
add
inc
add
mov
add
and
inc
inc
add
cmp
adc
and
add
add
call
or
add
test
and
movsb
and
popa
adc
inc
sub
and
pusha
sub
add
mov
and
inc
add
inc
sbb
add
add
adc
add
les
jo
add
or
add
sub
adc
add
rclb
add
add
add
and
inc
add
or
add
xchg
adc
adc
xchg
add
push
inc
rolb
add
add
push
add
adc
inc
mov
sbbb
roll
nop
sub
add
and
add
and
add
rclb
nop
add
adc
add
orb
add
pusha
add
add
adc
sbb
nop
adc
adc
mov
add
add
rcll
adc
or
add
add
add
mov
rcl
or
add
loope
add
push
add
add
inc
inc
stos
adc
jl
dec
and
and
add
sbb
addb
add
and
add
or
add
and
sbb
adc
leave
xor
add
orb
add
add
add
or
or
addb
add
nop
pusha
adc
orl
jo
addl
push
push
adc
add
add
and
add
nop
addb
add
adc
and
add
adc
add
add
orb
pusha
add
adc
test
inc
les
adc
add
addl
add
adc
addb
push
inc
inc
add
adc
and
add
and
and
inc
add
inc
add
and
in
push
inc
add
addl
and
adc
add
or
pusha
inc
pop
and
or
addb
add
add
shrb
and
addb
push
inc
add
jno
and
xor
add
inc
push
add
add
and
or
rolb
add
bound
inc
xor
and
xor
add
add
dec
add
add
and
add
add
sbb
or
fwait
or
adc
rolb
orb
add
add
add
mov
add
test
andb
popa
repnz
inc
add
sub
add
add
or
add
and
addb
stos
mov
add
add
mov
pusha
addb
adc
add
pusha
or
adc
mov
add
add
add
add
mov
add
addb
or
add
dec
inc
add
adc
inc
or
movsl
or
adc
rolb
roll
sub
add
add
nop
add
daa
call
sbb
inc
add
adc
add
adc
add
adcb
add
imul
rcll
add
nop
and
or
pop
nop
push
add
add
mov
add
add
inc
add
adc
add
and
or
pop
add
add
dec
adc
dec
add
inc
add
mov
add
shrl
addb
inc
adc
or
add
inc
inc
adc
sub
add
mov
subl
adcl
lret
add
adc
addb
mov
xor
add
inc
mov
add
and
add
adc
add
xchg
inc
inc
inc
test
dec
sub
add
mov
call
cmpl
inc
or
add
add
test
fs
add
repnz
and
insl
adc
and
add
adc
roll
inc
push
or
sub
inc
adcb
add
add
inc
and
add
or
orb
pop
add
add
and
or
add
and
inc
inc
add
addl
inc
adcb
add
add
andb
inc
add
adc
and
andb
inc
adc
xor
add
adcl
and
add
rolb
adc
adc
adc
adc
inc
inc
add
addb
je
adc
inc
add
inc
jp
inc
adc
or
add
add
shll
add
inc
mov
or
inc
xchg
sbb
and
add
add
mov
mov
push
leave
add
add
add
add
add
inc
add
add
andb
inc
enter
add
rolb
mov
add
addb
add
add
adc
adc
les
push
and
add
add
add
pusha
and
add
add
add
popa
add
add
adc
add
push
add
add
adc
adc
or
and
or
add
adc
add
add
inc
addb
sub
or
add
rolb
inc
data16
add
test
adc
add
addl
adc
sbb
and
add
and
ficoml
adc
sub
inc
add
sub
rolb
and
add
or
adc
or
les
pop
add
adc
add
ret
add
and
add
mov
and
add
sub
fs
and
movl
addb
enter
add
push
arpl
adcl
add
push
add
addb
mov
inc
xor
add
addl
add
dec
and
adc
adc
and
mov
adc
cmpsb
adc
add
push
addl
cmp
inc
add
add
loopne
add
rolb
rclb
add
sbb
adc
add
test
sbb
and
add
add
dec
adc
add
sbb
xor
addb
add
inc
add
addb
add
add
add
bound
pop
jae
andl
add
and
add
add
or
add
test
rolb
add
and
push
jb
inc
andl
or
add
xchg
inc
fs
xorb
add
addb
and
push
inc
add
add
or
dec
add
nop
add
add
adc
adc
add
add
addl
pusha
push
adc
sub
lods
rcll
nop
add
add
and
mov
adc
add
addb
adc
pusha
add
add
xorb
mov
add
scas
add
inc
add
add
push
sub
or
inc
and
push
add
xor
add
and
and
inc
inc
rcll
xchg
sub
or
adc
add
inc
add
push
cmp
adc
mov
inc
sub
push
add
add
inc
add
add
inc
add
add
add
add
dec
xor
roll
add
add
add
gs
add
and
addb
pop
sub
pop
or
nop
mov
cmp
pop
and
mov
sarb
mov
add
lcall
add
addl
add
add
add
add
add
add
add
sub
add
inc
add
jo
add
mov
loopne
sub
inc
nop
and
add
xor
enter
inc
and
or
and
and
add
mov
or
adcb
or
add
or
add
addl
add
inc
test
lds
push
and
add
add
mov
loopne
add
addb
add
add
add
add
adc
adc
cmpsl
dec
add
inc
inc
adc
push
and
add
and
pusha
adc
adc
add
pop
and
imul
add
add
and
nop
mov
addb
add
add
add
pop
nop
sub
and
add
add
add
xor
add
inc
orb
das
add
add
adc
inc
add
add
nop
jne
inc
.byte
