push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
call
test
je
mov
add
mov
call
mov
movzwl
cmp
jne
movl
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
push
call
mov
push
call
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
call
mov
push
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
mov
leave
adc
in
repnz
adc
and
mov
mov
outsl
negb
mov
push
push
iret
pop
mov
int3
sti
bound
insb
sti
cmp
popa
shrl
mov
xlat
mov
sub
divl
dec
xor
mov
arpl
les
mov
lods
jg
in
mov
pop
rol
in
dec
sbb
fs
pop
lcall
mov
fimull
push
arpl
cmp
jecxz
inc
stos
fsubrs
dec
add
mov
outsb
repnz
mov
adc
xor
sti
out
or
repz
inc
mov
xor
movsl
sub
mov
cwtl
inc
mov
int3
xor
repz
push
cmp
jge
jo
out
cmpsl
aam
outsl
push
cmpl
xchg
xchg
adc
jnp
inc
pop
lea
imul
bound
sbb
jae
xchg
stos
xchg
test
mov
xor
fsubrs
pop
add
dec
sahf
clc
je
pop
lods
jecxz
lret
inc
mov
daa
lods
je
scas
int3
movsb
and
push
inc
xchg
cmp
out
scas
pushf
das
insb
decl
int3
flds
fs
adc
dec
sbbb
jmp
cmp
mov
aam
mov
sbb
std
sub
lods
add
xor
dec
rep
sbb
mov
mov
lea
test
mov
jge
adcb
outsb
call
je
arpl
xchg
pop
sbb
ret
dec
mov
fcompl
xchg
adc
adc
jae
mov
sub
lods
xchg
in
mov
jns
jae
sbb
int
ja
jl
arpl
inc
cmp
mov
or
and
xchg
iret
in
adc
xchg
test
loop
jo
stos
sub
leave
jl
inc
inc
das
fidivs
popa
ret
sbb
andb
fdivrl
dec
sub
or
or
lock
push
jb
cbtw
sahf
lock
cwtl
subb
out
es
jbe
aas
sub
push
mov
add
or
or
jo
mov
jg
jl
pop
jl
pop
pop
std
pop
stos
nop
dec
jge
mov
mov
ds
add
jmp
mov
xor
outsl
pop
sbb
xor
push
dec
and
cmp
adc
sbb
mov
lret
cmp
mov
adc
pusha
call
pop
cmpsl
dec
jne
stc
sub
or
xor
push
call
ds
into
xor
aam
mov
jmp
and
movsb
sbb
call
cmp
loop
dec
mov
in
movsl
ficompl
xchg
dec
jle
xor
fs
adc
cmp
pop
notb
mov
or
sti
push
mov
xor
ljmp
call
jmp
or
adc
mov
adc
mov
ljmp
adc
pop
icebp
loop
dec
les
popa
mov
cld
push
or
imul
lods
idivb
cmpsl
pop
sbb
xchg
lcall
push
lret
andl
mov
sub
jae
fdivrs
outsb
mov
aad
inc
mov
nop
mov
sbb
aad
dec
out
int3
pop
insb
shll
cld
fdivl
hlt
push
subb
scas
outsb
jle
aas
jo
jno
out
xchg
pop
adc
xchg
pop
mov
push
pop
scas
sub
test
jg
adc
dec
scas
test
divl
pop
mov
sbb
lds
repz
test
ja
inc
cld
or
adc
push
or
dec
in
mov
mov
push
cli
leave
clc
mov
mov
xchg
test
hlt
rcll
mov
jne
add
xor
sub
mov
dec
fxch
test
out
rol
dec
pop
inc
xor
sbb
jb
call
fwait
ret
mov
call
cmpb
pop
push
push
xor
daa
fs
xlat
or
fidivrs
or
js
aaa
mov
imulb
in
adc
cmp
cld
or
call
cwtl
fmul
cmp
and
in
pusha
ret
rol
or
or
and
cmp
pop
das
cmp
mov
or
jle
into
or
jne
mov
add
outsl
jmp
inc
xor
sub
jne
loopne
aaa
lahf
dec
cli
inc
out
lds
inc
mov
pop
ret
pushf
shrb
cmp
mov
aam
add
and
inc
inc
pop
pop
sub
dec
rcll
cmp
mov
in
adc
xor
cmp
in
orl
sbbl
xchg
mov
pop
je
xor
dec
sbb
movsb
jns
push
iret
lock
sub
enter
hlt
jnp
and
dec
push
das
push
cmpsl
xchg
jg
jge
jns
dec
push
test
push
sbb
adc
push
or
mov
dec
inc
pop
addr16
dec
or
leave
test
dec
dec
sub
and
je
xor
loopne
lcall
inc
test
ss
addr16
repnz
xor
shl
push
lods
insb
inc
rcr
and
jle
sub
mov
mov
xchg
and
add
sub
test
push
and
sub
shl
or
arpl
stos
pop
mov
jnp
sub
dec
daa
loope
iret
decb
push
lahf
adc
cmp
test
inc
js
mov
mov
enter
lock
mov
adc
cmp
enter
stos
add
out
or
push
inc
fs
ja
and
cmp
or
lcall
pop
xchg
popa
in
pop
lods
push
dec
mov
stc
scas
mov
lods
loopne
or
sub
sarl
mov
or
inc
in
lea
in
test
fbstp
loopne
notl
add
pop
daa
push
mov
sub
sahf
pop
roll
push
mov
faddl
mov
imull
cltd
repnz
mov
mov
cmp
clc
mov
ds
mov
xor
in
test
das
sbb
scas
repnz
jne
push
shll
lret
adc
loop
dec
cs
out
hlt
push
mov
adc
adc
mov
shl
cmp
add
mov
pop
in
pop
int3
pop
xchg
mov
es
sub
loope
movsl
scas
sub
dec
mov
jo
sub
mov
addr16
push
jae
scas
cmc
mov
scas
in
jo
push
push
lcall
lods
aas
lods
jecxz
xchg
lahf
hlt
int
ds
les
int
mov
or
add
adc
roll
scas
jecxz
dec
and
mov
popa
mov
notb
cli
movsb
adcb
lea
mov
pusha
in
inc
sub
sub
arpl
lods
adc
loope
andb
aam
ss
fdivrs
jmp
ret
insb
out
push
mov
mov
pusha
inc
jg
adc
mov
xor
andb
xchg
pop
popf
insb
ljmp
dec
cltd
insl
dec
icebp
xor
cmc
add
cltd
add
pop
push
push
outsl
into
push
in
cltd
inc
and
inc
je
inc
inc
mov
std
leave
pop
fs
icebp
pop
add
adc
push
inc
push
repnz
xchg
sub
mov
mov
jmp
ja
cwtl
insl
xor
mov
jae
loope
sub
xor
inc
iret
mov
cmpl
test
outsl
xchg
subl
jno
xchg
cmp
std
jecxz
les
sbb
sub
push
jmp
sub
in
icebp
lea
pop
xlat
out
mov
pop
xlat
loop
cmp
addb
xor
lcall
xor
sahf
push
pop
jmp
jne
xchg
inc
imul
mov
push
pop
insl
lea
pop
mov
fwait
pop
jecxz
in
add
mov
test
outsl
jg
test
in
pop
adc
jp
out
addr16
daa
sbb
mov
test
xchg
nop
and
dec
inc
int3
pop
inc
call
arpl
mov
push
xor
loope
mov
mov
stos
inc
xor
out
lahf
out
test
pop
cs
pusha
int
pop
mov
jg
cmp
mov
lea
xorl
inc
loope
push
imul
sbb
ds
jae
ds
insl
jb
movsl
lahf
mov
sub
jmp
dec
mov
out
push
push
cld
ja
mov
daa
inc
sub
cmpl
xor
call
cld
pop
testb
cmp
cmp
lock
xchg
sysexit
push
dec
sbb
mov
push
jne
inc
out
lods
js
leave
ret
push
je
fwait
scas
mov
and
jno
aad
bound
fnstenv
imul
mov
sub
sub
scas
lods
add
cli
and
or
in
and
fwait
and
in
dec
xor
jl
aaa
cmpl
out
dec
cs
out
push
rclb
mov
fcomip
and
xchg
call
loop
repz
pushf
mov
aas
test
and
fistps
cmp
mov
popf
test
dec
inc
mov
cmp
fnstenv
xchg
hlt
gs
mov
jno
xchg
repnz
jnp
mov
inc
mov
fwait
lods
cmp
push
enter
and
push
jecxz
ficoml
std
out
fs
into
rclb
int
jge
xchg
sub
das
lods
test
pop
dec
jne
insb
adc
xlat
inc
aad
fs
push
mov
int3
decl
and
sbb
ret
shlb
cli
or
loope
jecxz
and
mov
cmp
mov
mov
std
aam
test
push
cmp
mov
pop
sub
decb
testb
adc
clc
xor
or
ds
inc
jp
rcll
push
jo
mov
aad
inc
sbb
and
outsl
push
xchg
out
pop
and
das
add
movsl
fcomps
mov
aas
sub
sub
sbb
jmp
xchg
push
bound
inc
mov
in
xor
inc
adc
gs
jge
mov
movsl
mov
and
movsl
or
cmp
xor
mov
insl
mov
mov
dec
lods
test
xor
mov
sbb
push
loopne
stc
mov
pop
out
mov
int3
pop
repnz
cmp
xlat
sti
insl
and
push
and
fmul
cmp
or
and
sbb
sarl
aam
movsb
sub
dec
jbe
arpl
lds
cmp
xor
pop
inc
gs
fildl
mov
pop
and
inc
popa
mov
jmp
jae
fcmovb
xlat
xchg
add
call
jno
jl
mov
dec
fs
leave
mov
xor
in
push
test
cmp
scas
adc
stos
insb
inc
les
dec
sub
or
dec
cmp
xchg
jl
mov
xor
or
iret
enter
ds
scas
mov
cmp
negb
adc
lret
cmp
adc
aam
inc
incl
jmp
add
pop
out
dec
sbb
sub
in
and
inc
cmp
mov
inc
into
and
sbb
cmpsb
icebp
out
mov
cli
add
cmp
negl
or
jnp
mov
push
xchg
sub
sarb
cmc
mov
leave
aad
adc
lahf
inc
rclb
cmp
ja
mov
adc
pop
push
movsl
pusha
test
enter
or
pop
inc
sbb
pop
push
jae
inc
xor
xor
fs
mov
aas
xor
cmp
jl
xlat
sbb
ficomps
dec
inc
inc
pop
das
jb
fstpl
mov
cmc
outsl
and
add
and
xchg
in
pop
or
sbb
scas
cmp
sti
scas
aas
jnp
dec
inc
mov
bound
pop
inc
mov
jge
cltd
jl,pn
not
and
data16
jno
adcb
push
and
add
push
and
fsubl
xchg
adc
addr16
inc
fs
jbe
mov
out
push
imul
adc
ja
mov
inc
and
mov
sarl
call
repz
mov
xchg
xchg
add
jmp
test
add
das
aad
fbstp
fld
cmp
sbb
imul
pop
jns
push
pop
add
sub
mov
repnz
jle
sub
xchg
mov
ds
inc
mov
xchg
cltd
lods
mov
mulb
dec
push
mov
jnp
aas
movsl
fwait
add
data16
xchg
arpl
rcrb
bound
mov
lods
inc
sahf
pop
aad
imul
lods
jg
int
pop
push
aam
xchg
mov
sbb
ret
cmp
clc
std
xlat
add
mov
inc
sahf
mov
and
in
jb
sahf
test
dec
mov
incl
xor
mov
pop
icebp
xchg
loop
nop
inc
and
cmpl
inc
adc
sbb
insb
or
mov
sbbl
sub
test
sub
mov
lock
mov
bound
rcrb
inc
add
lret
push
and
inc
fimull
testb
fmuls
mov
cmpsb
dec
lds
std
or
fwait
movsl
sti
mov
mov
in
cltd
mov
fidivl
scas
cmp
and
mov
push
inc
inc
lods
fwait
dec
cmpsl
push
mov
sbb
sub
mov
mov
andb
mov
mov
cli
mov
popf
scas
push
dec
fisubl
outsl
sub
scas
cmp
lods
jle
xchg
enter
arpl
in
jb
shlb
xor
inc
xchg
and
lds
push
sbb
scas
push
mov
inc
dec
and
iret
mov
iret
popf
add
cld
jmp
out
and
out
insb
lea
fs
lea
jbe
es
cmpsl
xchg
inc
lock
gs
push
addb
inc
push
aas
aas
and
push
sbb
and
pop
les
fidivrl
out
cmpsb
pop
dec
fidivl
dec
and
inc
repnz
inc
into
add
or
incb
sub
mov
push
aas
mov
aaa
les
out
dec
jae
scas
mov
xchg
sbb
leave
data16
xor
push
rcrl
stc
mov
xchg
in
push
mov
fiaddl
push
add
divl
shrl
loope
dec
pop
addr16
aaa
negb
push
dec
rorb
lods
adc
mov
inc
outsl
mov
cwtl
or
jge
push
ret
fsub
sbb
mov
xchg
sub
in
inc
or
add
loopne
xchg
dec
mov
ret
scas
mov
lret
cmp
pop
pop
cwtl
mov
push
mov
out
mov
cmpsb
mov
push
lods
mov
dec
inc
pop
pop
or
ja
or
push
lahf
xchg
dec
pop
je
or
lcall
xchg
inc
or
add
icebp
xor
cvttps2pi
les
mov
mov
rcrl
je
out
lahf
and
mov
test
push
sub
into
and
inc
popf
add
jg
in
jg
in
xor
lds
mov
mov
push
outsl
movsl
data16
fidivrl
shll
pop
add
push
dec
loope
or
scas
sub
push
and
inc
or
loopne
and
pop
ds
dec
ljmp
cld
lahf
lds
pop
cmp
movsl
gs
test
and
fnstenv
lahf
aaa
js
mov
ret
push
fcmovne
mov
into
insb
int3
add
stc
cld
leave
ret
fcmovu
pop
decl
add
cs
mov
xchg
dec
ret
iret
mov
mov
mov
adc
or
xor
jge
mov
push
cmpsl
stos
cmp
repnz
ds
mul
popa
mov
mov
cmp
add
adc
clc
xlat
leave
out
mov
sbb
les
push
mov
sbb
fbstp
jle
fnstsw
xchg
in
mov
sbb
and
inc
outsl
dec
sarl
out
in
into
sub
jnp
cmpsl
mov
arpl
pop
cmpsl
mov
push
lods
sbb
xchg
mov
mov
cmp
push
fdivs
data16
mov
out
inc
jns,pn
scas
enter
fldl
and
addr16
test
cmpsl
or
pop
movsl
jnp
cmc
cmpsb
mov
nop
xchg
push
push
pushf
or
pop
icebp
mov
in
call
nop
or
sbb
es
inc
std
hlt
sub
aaa
and
fldcw
cmp
fisubl
arpl
movsl
mov
add
jmp
pop
xlat
jl
mov
lret
std
mov
dec
inc
xchg
push
mov
pusha
js
dec
fisubs
sbb
in
js
xchg
push
inc
dec
xor
das
inc
and
jp
dec
sbbl
fnsave
jmp
push
icebp
sar
lods
je
testb
inc
or
add
pusha
data16
jl
add
iret
pop
adc
mov
mov
lods
fsts
lods
pop
call
test
pop
mov
xor
mov
push
xor
fdivr
pop
cmp
arpl
hlt
push
mov
idivl
add
add
into
mov
xchg
mov
bndstx
fists
es
int
out
fistps
xor
cmp
or
icebp
fdivrs
xlat
jno
mov
rolb
jns
hlt
cwtl
mov
or
add
inc
cmp
xchg
xchg
dec
hlt
xchg
adcl
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
