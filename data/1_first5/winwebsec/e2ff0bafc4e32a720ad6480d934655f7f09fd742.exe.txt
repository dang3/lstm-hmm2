push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
adc
pop
cmpsl
rorb
les
outsb
xorl
sahf
adc
lcall
ret
aaa
adc
cmp
sbb
xor
adc
mov
divb
test
sbb
cmp
jge
jns
mov
adc
dec
sbb
mov
pop
jl
adc
mov
inc
in
add
stos
jmp
test
call
jl
mov
pop
xchg
push
imul
test
fcoml
jo
fcoms
popf
dec
daa
inc
xchg
stos
test
xchg
ret
push
pop
sarl
std
aam
inc
mov
jl
je
lock
repnz
ss
xchg
inc
jbe
xchg
icebp
push
insb
xchg
insl
int3
scas
cld
or
test
inc
lret
lret
pop
adc
xchg
push
inc
out
sub
insl
testw
rcll
sub
lahf
mov
sub
sub
in
jns
int
es
mov
xchg
arpl
cs
cmp
sub
fimull
loop
dec
mov
sub
push
mov
mov
ret
mov
and
push
cmpsl
rclb
pop
push
pop
cwtl
push
inc
popa
mov
jecxz
lods
inc
adc
pop
push
mov
rcrb
cmp
imul
push
jae
sarb
push
fisubrs
clc
xchg
dec
test
adc
lret
popf
out
push
pop
mov
cltd
lods
sub
out
sbb
rcr
jmp
and
lods
push
ja
or
fstl
pcmpeqb
push
jnp
inc
rcll
iret
das
rol
movb
iret
scas
jle
cmp
xchg
and
cmpl
pop
aam
ja
sub
enter
sub
pop
repz
shrw
push
cs
test
push
aad
inc
push
lock
int
subb
dec
lods
aam
lock
je
imul
arpl
jg
mov
mov
push
out
mov
push
mov
rorl
push
mov
lcall
cmp
enter
dec
jl
stc
fnstsw
fstpl
insl
jne
imul
pop
inc
sub
dec
sbb
and
push
inc
jmp
jo
mov
mov
aaa
mov
add
call
rcrb
icebp
daa
out
shrl
and
add
roll
sbb
lods
rclb
cmp
aas
sahf
lods
aas
mov
dec
lock
sub
lahf
mov
mov
repnz
cmpsl
fs
push
mov
sti
cmpb
ljmp
dec
lret
sarl
dec
sbb
pop
ficoml
negb
push
sbb
mov
cmpsl
cmpsl
xchg
xabort
pop
lcall
les
push
out
pop
in
xor
popf
sbb
jns
filds
hlt
repnz
adc
aam
push
sbb
dec
arpl
sbb
xor
mov
mov
jbe
daa
inc
arpl
mov
pop
mov
sub
push
dec
fldcw
jb
and
jns
and
lds
nop
dec
outsb
jae
sbb
mul
fdivrp
sar
mov
sahf
sub
ljmp
int
dec
xchg
sub
xor
adc
dec
mov
adc
gs
dec
aas
xor
push
lret
loopne
xchg
seto
fdivrs
mov
mov
fmulp
sbbl
fld
push
nop
imul
fadds
cmp
dec
cmp
or
push
jbe
out
frstor
sub
inc
jp
sarb
jmp
adcb
pop
mov
xor
out
ret
inc
adc
jno
adc
adc
jb
xchg
pushf
sbb
insb
sahf
aas
mov
lods
dec
xchg
or
adc
xchg
adc
or
arpl
push
mov
jb
sbb
pop
stos
in
fists
test
xor
adc
test
push
xor
inc
rcrb
popa
scas
imul
mov
fldenv
push
adc
ret
notb
or
lock
sub
repnz
jo
sarl
xchg
shl
cmp
test
cmpsb
push
insl
int
mov
jns
jno
into
das
push
jle
test
daa
stos
leave
jecxz
sbb
scas
sub
sbb
leave
lcall
lock
or
fcmovnb
lds
pop
mov
cli
test
or
fcomi
test
aam
jbe
xchg
sub
mov
adc
jnp
scas
push
mov
cmp
add
adc
push
stos
mov
mov
and
xchg
pop
icebp
popa
mov
arpl
xchg
pop
xchg
aad
xor
push
mov
cmp
fistpl
popf
mov
add
rolb
or
mov
cld
mov
insl
out
or
and
leave
mov
mov
popl
pusha
fisubrs
push
xchg
int3
mov
dec
inc
es
or
test
push
popa
cs
inc
add
mov
cs
jmp
push
inc
add
fucom
lea
les
divb
push
lahf
fincstp
push
push
xchg
stc
rorb
icebp
jbe
and
imulb
xor
inc
pop
out
movsb
inc
dec
rcll
and
xchg
cmc
add
rep
outsl
js
push
cmp
imul
loope
hlt
xchg
pusha
shl
cmp
popf
pop
iret
and
scas
jle
pushf
or
fsubr
enter
sub
in
and
fisubrl
inc
mov
ret
inc
nop
jne
ljmp
add
xor
mov
or
sbb
add
pusha
int3
inc
xor
bswap
pop
push
pop
jg
adc
sar
or
cmp
loope
adc
je
fisubrs
int
ss
sbb
xchg
ljmp
xor
cld
insl
inc
lea
iret
push
icebp
shrb
aas
in
mov
inc
adc
inc
push
inc
aaa
adc
sbb
or
aas
arpl
loopne
cmpsl
jp
xor
dec
add
hlt
arpl
gs
mov
outsl
mov
not
ret
ss
cmpsb
push
negl
mov
dec
arpl
push
pop
lea
inc
lods
sbb
pop
sbb
outsl
inc
repz
jecxz
xchg
xchg
xor
addr16
jbe
jbe
idivb
pop
sbb
push
xor
ja
mov
pop
push
add
dec
xor
arpl
in
sub
xchg
mov
mov
jb
xchg
icebp
ljmp
push
into
lods
jle
adc
jnp
mov
leave
and
cmp
out
mov
in
mov
roll
repnz
adc
sbb
jmp
aam
daa
cmp
scas
out
push
fimuls
xchg
out
cld
xchg
cld
insb
xchg
sahf
dec
in
sub
add
jns
xchg
pop
mov
push
aas
ss
clc
aas
push
dec
xchg
mov
les
xor
pop
push
xor
loop
mov
lret
daa
rorl
jno
or
mov
adcl
xchg
fiaddl
xor
xchg
scas
mov
jnp
out
les
mov
out
mov
xor
jge
and
push
adc
sahf
mov
gs
cmp
or
std
nop
cmp
testl
mov
aaa
repnz
test
mov
int
aas
xor
icebp
dec
jae
and
or
mov
or
push
jle
rclb
push
add
cmp
fadds
bound
mov
shrl
leave
mov
out
dec
scas
jne,pn
cmpsb
inc
aam
sub
xor
insb
out
addl
pop
add
mov
pusha
add
cmc
or
ja
stos
jge
lods
mov
leave
xchg
insl
add
cmc
inc
nop
sarb
xor
mov
test
arpl
shlb
ss
inc
mov
lcall
shrl
add
adc
out
shrb
les
jnp
and
mov
pop
subb
xchg
rcrl
mov
push
mov
iret
stos
mov
pop
fwait
loope
jg
add
sub
mov
jmp
or
dec
xchg
lret
cmpsl
adc
cltd
push
jge
lahf
pop
dec
fnsave
fwait
sbb
out
mov
orb
jbe
out
inc
je
add
mov
ret
scas
pop
movsb
scas
inc
imul
out
lcall
mov
sub
aam
repnz
adc
pop
push
outsb
mov
outsl
pop
dec
arpl
add
cmp
lret
mov
sbb
xor
pop
fidivrl
cmc
dec
dec
gs
mov
aaa
psrld
jmp
scas
stc
adc
push
inc
stc
lret
negb
out
or
and
xchg
jg
cld
stc
jmp
cmp
and
jge
imul
repnz
loop
add
and
mov
insl
or
inc
in
jnp
ss
movsb
es
call
int
out
test
orb
icebp
arpl
daa
andb
mov
inc
cwtl
clc
sbb
out
fs
jge
sub
pop
stos
mov
aad
jge
shrl
pop
lcall
fldcw
push
rclb
add
push
mov
sub
jg
xor
imul
iret
andl
jl
or
cltd
xchg
xchg
jnp
cltd
mov
ret
nop
je
add
leave
fst
test
fstl
pop
pop
out
lock
neg
push
mov
lds
push
inc
out
xchg
fildll
pop
int
mov
push
sar
xor
jecxz
into
adc
insl
jmp
cmp
movsl
pop
and
sbb
mov
mov
outsb
xchg
pop
adc
or
push
add
lods
shlb
dec
shll
sbbl
jae
jne
mov
xchg
shr
daa
lea
in
divb
inc
adc
xchg
in
cs
xchg
test
pop
fcmove
cmp
rclb
cmp
pop
dec
mov
inc
lods
loopne
sarb
aam
sbb
push
pop
stos
mov
mov
movsb
cmp
ljmp
cmp
xchg
fs
mov
pop
ja
sbb
pop
cmp
aad
add
lock
push
ja
lods
repz
popa
pavgw
pop
daa
out
xorl
xor
popa
adc
fs
movsb
jno
mov
shrd
push
xchg
enter
or
xchg
push
add
inc
in
fsubs
popf
stos
dec
scas
pop
test
jb
iret
xchg
rdmsr
addr16
and
nop
cs
xchg
ret
out
in
push
insb
les
xor
mov
sbbb
dec
xchg
pushf
scas
mov
cld
in
inc
sbb
lea
xchg
ret
scas
inc
stos
stos
test
inc
imul
mov
push
xor
pop
adc
inc
enter
iret
repz
inc
mov
movsb
jb
and
das
es
lret
stos
mov
dec
ljmp
inc
push
sub
pop
insl
mov
out
xchg
inc
lea
xchg
cmp
mov
jp
cwtl
adc
xchg
inc
or
sbb
call
xchg
scas
and
shr
xchg
shrl
shlb
pop
mov
fistpll
jmp
push
cli
les
sub
or
sti
cmpb
cmpsl
in
cwtl
andl
js
dec
mov
popf
inc
mov
mov
xchg
mov
es
in
fldenv
inc
xchg
or
loopne
xchg
mov
xlat
stc
out
outsl
cmp
out
repnz
stc
dec
test
pop
jle
jo
gs
test
or
mov
xor
daa
in
in
dec
pop
sub
mov
push
rorl
cmp
dec
xchg
rcrb
push
mov
mov
or
mov
xor
sub
stc
test
cmpsl
inc
cltd
cltd
sbb
sub
mov
je
pop
push
dec
stos
inc
and
xor
xor
mov
xchg
xlat
push
aaa
jle
push
push
in
and
pop
or
xor
jg
xchg
mov
cltd
push
jle
scas
ljmp
fmuls
stos
jo
fcompl
icebp
or
mov
and
and
fisubs
or
lods
aaa
sbb
bound
scas
mov
out
fisubs
mov
aas
ret
jo
outsb
push
mov
sub
sbb
popf
dec
pop
and
subl
sub
in
cli
push
cmp
imul
cmpsl
adc
cmpl
shr
rol
mov
lret
bound
loopne
mov
mov
pop
repz
pop
mov
cmp
sub
xchg
mov
ss
push
mov
out
sahf
pop
inc
push
jle
jns
jle
fidivrs
inc
cmp
inc
jmp
xchg
lods
out
mov
dec
dec
xorb
mov
cmp
push
clc
xchg
jo
aad
insb
and
imul
cmovge
xor
pop
jnp
nop
sub
pop
fwait
movsl
mov
mull
dec
mov
cltd
call
stos
lods
add
loopne
jp
imul
or
mov
test
scas
sahf
sbb
jbe
subb
call
cld
notb
cli
imul
pop
mov
cmp
arpl
xrelease
in
loope
push
sub
sub
cmp
orl
push
mov
sbb
cmp
mov
shlb
outsb
shl
fwait
mov
cmp
or
inc
shlb
idivl
push
sahf
data16
aad
aam
lcall
pop
and
mov
jp
adc
ret
fbld
js
roll
adc
call
popa
roll
push
adc
cmp
adc
jg
sbbb
sub
mov
std
out
test
pop
out
add
pop
repz
push
cmp
push
jecxz
mov
pushf
mov
fldcw
dec
push
inc
aad
push
and
sti
imul
adc
inc
in
cmp
xchg
and
shrl
nop
sbb
out
mull
imul
imul
and
orl
jecxz
jne
pop
fcomi
dec
jle
xchg
mov
pop
ret
jl
and
pop
movb
cmp
mov
enter
in
push
jecxz
scas
jnp
push
mov
jecxz
xor
lcall
ror
ret
repnz
and
pushf
out
sub
fucomi
jge
rcll
lea
lret
adc
pop
lcall
fs
aaa
popf
cmp
lods
pushf
stos
popf
sub
mov
dec
pop
aad
mov
jnp
outsb
aad
cmp
pop
sbb
ljmp
add
es
mov
or
imul
js
push
shll
and
xor
xchg
aaa
sub
adc
mov
pop
pop
cmp
icebp
movsb
adc
xor
test
pop
adc
lds
das
fdivrs
mov
scas
add
cwtl
add
fbstp
or
cmp
pop
lcall
ss
loop
sub
lds
fildll
fwait
add
addr16
jl
loope
ds
int3
in
fwait
dec
push
shll
adc
cmc
sub
and
mov
dec
jge
cmp
push
test
or
cmp
jecxz
sbb
pop
aas
add
mov
lods
mov
pop
push
aam
push
pop
push
push
push
mov
mov
loopne
pop
cmpl
push
sbb
fisubrl
in
js
iret
pcmpgtw
jp
xchg
jle
leave
cmpsl
mov
outsb
pushf
xor
jno
sbb
hlt
adc
lea
mov
lea
cmpsb
pop
mov
int3
int
das
pop
clc
jge
xlat
sub
leave
orb
enter
xchg
stos
inc
xchg
lcall
lcall
mov
rolb
adc
jne
jg
pop
add
notl
std
lea
pop
adc
addr16
fstps
pop
or
fs
mov
xor
mov
or
int3
test
jo
sub
mov
int
push
out
pop
sub
mov
or
xchg
mov
xor
xchg
dec
and
cmc
and
sub
mov
pop
outsb
inc
and
add
mov
movsb
sbb
jnp
dec
or
andl
lods
sbb
inc
xor
mov
fisttpll
push
repz
xchg
dec
sbb
test
aas
or
mov
std
add
pop
inc
dec
lods
in
mov
cmp
inc
loopne
jnp
ffreep
push
fs
pop
cmpsb
hlt
mov
insb
mov
loopne
dec
add
xlat
sbb
adc
mov
mov
jnp
in
xlat
gs
les
and
outsb
xchg
movsl
cmp
daa
aas
jecxz
nop
mov
cs
mov
adc
icebp
push
addb
add
add
pop
mov
sti
pop
in
mov
cld
clc
pop
hlt
mov
verr
nop
push
jae
jbe
data16
sbb
pop
cs
addr16
xchg
lret
pop
mov
cmp
and
xor
pop
push
pop
into
sarb
pop
int3
sub
xor
dec
rcll
push
mov
push
les
push
aad
aas
gs
rcll
imul
fnstcw
mov
out
xchg
mov
cmp
and
shl
lods
adc
fnsetpm(287
dec
popa
inc
push
imul
push
xchg
mov
jae
fimull
clc
nop
fs
lods
mov
jb
fwait
sbb
or
lock
pop
xlat
test
ja
fstpl
push
mov
xchg
adc
mov
test
aaa
cli
filds
xlat
les
pop
adc
cmp
cs
and
jle
test
push
pop
movsl
xor
out
pushf
incb
pop
mov
and
ja
mov
mov
adc
mov
jecxz
inc
test
sub
pushf
fnstenv
je
lcall
in
fwait
jns
ret
xchg
xchg
test
mov
pop
xor
add
mov
or
mov
push
jecxz
leave
aam
jnp
sub
pushf
test
fldt
cmp
jmp
sub
mov
mov
hlt
xor
cli
inc
cmpsb
add
hlt
or
pop
loope
ret
jnp
stc
push
push
ja
pandn
xchg
push
sbb
rolb
mov
jae
sub
fisubs
mov
push
mov
cs
cmpsb
test
lahf
sub
cmp
cwtl
inc
aaa
add
cltd
dec
insl
ljmp
sub
fstps
addr16
bound
xor
dec
dec
xor
fisubrs
xchg
fs
mov
inc
xor
ss
hlt
pop
add
mov
cltd
sbb
out
sub
cmp
and
cs
sahf
mov
dec
incl
lods
sbb
mov
test
inc
or
xchg
xor
cltd
dec
andb
sbb
push
push
mov
repz
sarb
xor
inc
jle
pop
xlat
dec
adcl
add
dec
jmp
jb
repnz
xchg
int
adc
pushf
jp
xchg
cmp
push
jnp
and
sub
scas
sbb
clc
sbb
inc
push
in
pop
cmp
loopne
mov
inc
xor
mov
pop
inc
cmp
cmpsb
mov
inc
mov
inc
pop
loop
out
mov
sahf
in
mov
mov
xchg
imul
sub
andb
pop
cli
fisubl
aam
or
pop
test
lds
mov
fadds
movsl
scas
and
sub
in
fwait
bswap
cltd
movups
dec
ficoml
out
xchg
in
mov
push
out
ds
scas
and
cmp
mov
pusha
std
xor
mov
je
add
icebp
jns
sahf
fstpt
adc
fldt
xorb
lret
mov
lock
or
js
push
mov
notb
bound
adc
aaa
mov
iret
push
pop
pop
mov
les
insl
ret
and
repnz
add
push
fsts
dec
and
movsl
std
fisubs
dec
cli
mov
xchg
sbb
imull
cltd
and
dec
in
sbb
xchg
mov
and
cmp
nop
movsl
push
push
in
mov
ret
pop
out
cmp
cmp
jbe
pop
test
push
scas
movsb
das
mov
dec
pop
adc
push
inc
xlat
cmovno
dec
adc
jg
or
stos
xor
mov
out
pusha
aam
mov
ds
or
out
daa
xlat
pop
sbb
inc
aas
and
xchg
mov
push
pop
mov
stos
negb
inc
add
adc
lods
xchg
jns
cwtl
orb
fldenv
scas
lret
fiadds
repz
mov
jne
lock
test
stc
outsb
bound
orl
mov
push
jg
pop
fcoml
nop
iret
sub
or
test
popa
push
dec
push
sbb
mov
add
fdivl
add
adc
rcll
das
js
or
nop
leave
dec
mov
add
cmp
lods
sbb
fdivs
out
push
or
mov
or
add
mov
jl
dec
inc
xchg
mov
pop
in
xorl
xchg
test
iret
jmp
add
repnz
inc
and
xor
mov
jp
push
jp
addb
cmc
jl
les
dec
aaa
fs
jno
int
rclb
jl
fwait
inc
rol
xlat
push
loop
dec
adc
gs
inc
dec
push
hlt
pop
mov
loopne
loop
xchg
cmpsb
mov
cli
lahf
push
sbb
into
pop
push
loopne
sbb
out
add
hlt
sub
cs
fwait
or
push
dec
dec
add
pop
andl
fstpt
test
pop
dec
pop
lods
ljmp
sbb
adc
jecxz
cmc
jne
movsb
shr
cmp
test
push
addr16
jno
mov
fiaddl
add
stos
xlat
shrb
mov
lcall
sbb
xor
sub
imul
aam
repnz
adc
mov
inc
in
rcrl
add
lahf
in
fnstenv
pop
icebp
fcoml
pop
pop
and
bound
shll
in
orb
scas
ljmp
mov
jecxz
pop
mov
jbe
mov
ret
loope
push
jnp
stos
pop
test
icebp
subl
sbb
add
sbb
es
sbb
or
mov
mov
cmp
push
adc
mov
xchg
adc
rolb
xor
jae
cmp
inc
xchg
pushf
dec
push
les
gs
add
shr
jnp
adcl
pop
xchg
cmpsl
mov
loopne
stos
cmp
add
jne
loope
imul
pop
push
sahf
lock
popf
aad
dec
sub
mov
mov
int
cltd
add
xchg
adc
ja
fimuls
push
and
pop
mov
add
cmp
std
fstl
mov
lds
imul
nop
cmpl
inc
movsl
jbe
incb
mov
xor
call
mov
mov
mov
jo
inc
out
mov
cmp
dec
ret
push
enter
or
cld
add
inc
or
and
rorl
lods
dec
andl
test
mov
jp
out
xchg
ds
les
inc
mov
rcll
push
sti
and
and
sub
stc
cmp
inc
inc
pop
pop
push
jnp
or
stc
cltd
add
iret
into
dec
cmp
xchg
pop
mov
or
mov
cmpsl
or
js
sub
pop
rcrl
push
mov
or
push
aam
fidivrs
hlt
xor
leave
mov
xor
lods
inc
cs
lcall
sub
push
into
pop
sbb
loope
xchg
pop
adc
push
xchg
int
sti
or
sbb
push
pusha
lcall
sahf
scas
dec
in
xor
fwait
mov
jecxz
call
mov
shrl
mov
es
dec
scas
mov
out
cmp
mov
in
jp
dec
stos
fisubrl
int
mov
dec
pop
inc
or
adc
and
mov
mov
inc
pop
jecxz
sbb
xchg
js
pusha
jl
test
pop
dec
cmp
fistl
nop
outsb
dec
lret
fimull
dec
xchg
dec
lea
ljmp
pop
sti
fmull
jl
les
outsl
repnz
mov
xchg
fs
and
push
and
pop
xor
mov
fistl
mov
inc
fistpl
mov
lcall
cmpsb
adc
test
xor
aad
push
test
shll
les
loop
call
xor
in
pop
test
xorl
movsl
xlat
pop
out
iret
clc
pop
mov
jne
mov
xlat
add
add
mov
xor
jmp
jne
and
pushf
mov
adc
cs
adc
aas
bound
scas
cmpsl
mov
in
xor
cmpsb
push
fwait
xor
in
outsl
xor
dec
in
jp
sbb
fbld
jbe
movsb
jmp
and
in
inc
test
mov
popf
in
xchg
jb
subl
jns
pop
cltd
jb
aaa
jmp
xor
mov
xchg
mov
divb
sub
dec
adc
inc
gs
jl
pusha
or
xor
add
sbb
aad
int3
xchg
pusha
mov
mov
nop
jbe
xchg
and
hlt
lea
jecxz
or
jmp
shlb
or
push
jbe
inc
lea
dec
orb
call
mov
bound
lret
sub
popa
xor
dec
cltd
ja
sub
or
inc
mov
or
cs
mov
sub
repnz
rol
imul
mov
enter
add
cmp
xor
stos
mov
sub
cmpsl
xor
adc
adc
and
cmc
add
lret
imul
ljmp
sub
movsb
shrb
cmp
cmp
sbb
dec
ret
sbb
mov
dec
push
cmp
dec
aam
mov
pushf
inc
mov
adc
mov
lcall
aam
test
cmpsb
js
dec
xchg
fs
inc
jnp
xor
icebp
ret
jp
stc
leave
imull
cmp
fisubl
jbe
jmp
or
jb
mov
adc
sub
int3
sbb
and
aam
das
mov
pushf
mov
lret
mov
out
repnz
xchg
mov
test
and
mov
dec
sbb
arpl
fwait
cmpsl
cld
cmp
sbb
pop
mov
sub
dec
stos
movsl
jbe
mov
scas
mov
mov
shll
js
or
jle
fbld
dec
push
fists
loope
out
xor
call
xchg
pusha
mov
sub
fidivs
and
pop
or
stc
jp
jl
xor
mov
sahf
les
in
pop
out
jle
mov
popf
add
push
cmp
and
cmp
add
cmp
xchg
fcomps
sub
lock
and
pop
sbb
mov
push
dec
inc
mov
sub
fidivs
jmp
or
sar
bound
stos
mov
cmp
mov
gs
mov
mov
call
jge
mov
push
jae
mov
dec
icebp
into
je
cmp
sub
push
xor
scas
dec
mov
xor
lock
das
jge
xor
mov
mov
punpckhwd
je
dec
push
or
fdivr
and
and
mov
dec
test
fildl
push
test
push
xchg
or
pop
lea
lds
xor
ja
sub
sub
mov
push
popa
jmp
push
mov
rolb
jp
sbb
pop
adc
out
jb
mov
push
sub
mov
add
cmp
sub
push
repnz
cmpsb
mov
pop
and
ds
mov
rcl
les
jle
cmp
dec
pop
push
lret
in
xor
or
insb
lds
xchg
aas
movsl
in
mov
or
es
and
in
daa
cmp
ja
aam
repnz
inc
jg
gs
mov
movsb
outsl
push
clc
push
xor
lcall
xor
ret
push
loop
pop
inc
mov
push
adc
into
pop
mov
inc
decl
fs
push
lock
mov
xchg
jmp
nop
pop
outsb
add
jp
pop
dec
gs
xchg
jg
vmwrite
dec
xor
dec
stos
out
xor
adc
addr16
or
dec
sti
push
adc
rcr
mov
push
inc
shrb
leave
pop
push
fwait
loope
push
nopl
test
jnp
cmpl
push
mov
pop
ret
pop
mov
and
ficoms
mov
lock
pop
fcmovbe
adc
or
aad
and
adc
jno
lahf
mov
data16
jmp
aas
push
fwait
or
push
push
gs
insl
ret
inc
or
fs
fidivrs
xchg
pop
mov
adc
ss
mov
sub
dec
hlt
mov
jl
mov
push
dec
mov
adc
jne
rcll
mov
fdivrl
js
and
aas
lds
out
rol
mov
in
cmp
in
mov
clc
mov
fwait
adcl
fsubp
in
data16
sti
sub
jg
int
inc
jg
add
cmc
cmp
test
pop
movsl
sub
push
leave
pop
jne
repnz
outsl
rorb
mov
add
cld
cli
subl
sub
mov
sbbb
aad
adc
xchg
fs
inc
mov
notb
xor
cmp
lds
aad
add
jb
xor
dec
push
sti
js
inc
data16
int3
sub
test
add
and
add
push
lret
add
cmp
ret
test
dec
jo
pop
sbb
les
test
ret
insb
adc
sbb
lcall
adc
jnp
cwtl
int
gs
lret
mov
int
push
jnp
loope
aam
repz
scas
sub
in
xchg
leave
pushf
xchg
repnz
int
rorl
das
pop
or
js
xlat
dec
pop
leave
aad
out
popa
mov
lods
and
jno
scas
int3
sarl
pop
dec
fs
xchg
mov
hlt
inc
je
cmp
andb
lret
mov
adc
inc
sub
jnp
data16
hlt
cwtl
lret
and
gs
out
sarb
out
popf
xchg
sarb
sti
outsl
inc
shll
mov
mov
pop
popa
fistps
adc
punpckhwd
divps
xchg
fcmovbe
cmp
sbb
inc
hlt
push
dec
push
inc
adc
xor
pop
pusha
mov
bound
fwait
jae
dec
adc
sub
out
xchg
cmp
inc
mov
fildll
pop
mov
aad
mov
xor
cmpsb
dec
lahf
lods
rcrl
sub
inc
aam
and
lods
push
cld
test
add
pop
mov
mov
bts
sub
repz
lock
sahf
adc
push
stc
xchg
mov
stos
lods
push
pop
and
push
outsl
sbb
cmpsb
sub
jno
loope
leave
fsubs
pusha
rcrl
cmp
cs
rorb
ljmp
stos
xor
outsb
mov
cmp
fiadds
mov
cmp
adc
mov
mov
popa
add
and
push
adc
jo
inc
jp
arpl
jbe
jne
test
pop
jmp
push
push
lods
sub
mov
pop
and
push
pop
pop
outsb
fs
test
mov
xor
push
popa
cli
out
inc
add
sbb
insl
popa
push
mov
in
orb
into
cmp
in
sub
dec
mov
pop
pop
shrl
adc
jae
inc
mov
repnz
sbb
cmpsl
xorl
lcall
mov
xchg
sbb
push
dec
pop
neg
mov
dec
or
out
dec
clc
cmp
pusha
fmuls
sbb
mov
mov
push
daa
ss
inc
mov
inc
jne
xlat
adc
jno
rorb
inc
ljmp
mov
mov
or
aaa
xchg
repnz
mov
mov
mov
popa
fsubrs
mov
lea
dec
jp
sti
mov
shrl
push
push
pushf
sbb
and
sbb
movsl
jns
stos
mov
sub
add
lods
jecxz
ja
int3
push
xchg
or
sti
pop
jmp
daa
inc
sub
aad
fwait
in
jmp
push
mov
cmpps
dec
out
je
pop
imul
add
jns
in
lret
popa
sti
sub
sbb
add
jmp
in
icebp
add
das
iret
js
jl
ljmp
xlat
repnz
push
in
xchg
aaa
fldl
xorl
je
lcall
mov
in
jnp
dec
push
jnp
and
dec
rol
sbb
jmp
lahf
pop
push
in
xor
loope
cmp
push
loopne
fnsave
hlt
sbb
mov
in
iret
outsb
or
aaa
or
in
mov
lahf
lock
loop
sub
leave
stc
pop
loop
dec
pop
aam
mov
imul
sbb
xchg
mov
sbb
sbb
addb
in
in
es
mov
cmp
jbe
loopne
cld
jge
aam
pushf
jle
rclb
jne
leave
scas
ja
pushf
lahf
mov
push
sbb
fwait
ds
loopne
bound
dec
das
dec
iret
inc
pop
pop
lret
and
sahf
das
adc
mov
adc
inc
xchg
dec
lcall
lcall
pop
inc
jae
mov
in
lahf
movsb
movsl
mov
jne
adc
jae
movsb
mov
jle
pop
loopne
in
dec
jnp
and
jb
cmpsb
pop
out
mov
mov
lods
adc
pop
jmp
lods
insb
lcall
sbb
inc
cli
xchg
aaa
data16
cmp
jge
cli
shrb
insl
pushf
dec
push
pop
inc
sbb
lret
scas
movsl
dec
mov
nop
fildll
lahf
dec
jge
sbb
shrl
fdivrp
repnz
jbe
or
ret
mov
adc
loope
mov
mov
test
in
fmulp
lahf
xchg
jg
jl
loope
iret
fsts
test
add
inc
pop
subl
and
ljmp
cld
aam
rolb
cmpsl
push
xlat
fld
pop
bound
fwait
into
sbb
out
lock
pusha
mov
bound
cmp
xchg
pushf
ret
cmpsl
mov
xlat
pop
xchg
aad
inc
movl
lahf
mov
or
mov
fbld
sub
push
mov
aam
or
scas
bound
repz
das
and
sub
mov
inc
inc
test
xchg
ret
cld
or
cmpsl
in
loopne
insb
pop
inc
xchg
cwtl
mov
add
and
das
sub
scas
iret
outsl
mov
push
adc
sbb
sarl
lcall
addb
mov
outsl
cli
and
add
aam
pop
in
sub
stos
mov
pop
xchg
and
dec
imul
leave
or
add
and
popf
xor
xor
cmpsl
fsubrs
leave
rcrl
test
mov
or
mov
and
ds
gs
popf
sahf
pushl
pop
lret
ret
sbb
loope
inc
pusha
lahf
push
dec
mov
movsl
inc
es
inc
cmpsl
inc
sub
aaa
adc
and
test
lea
insb
std
dec
cwtl
mov
int
cmp
iret
ljmp
faddl
cmpsb
dec
nop
sbb
pop
scas
cmp
mov
adc
icebp
jmp
call
push
stc
data16
cld
sbb
lret
hlt
scas
mov
roll
fsubl
arpl
xchg
lea
adc
sti
movsb
or
or
or
aad
out
mov
xchg
cli
jle
and
jg
addr16
sub
xchg
je
int
jmp
or
jb
mov
scas
ficomps
aas
out
leave
int
xor
dec
or
or
iret
jnp
and
add
test
cmpsb
cmpsl
mov
sbb
and
mov
mov
loop
fwait
push
cmp
jo
jle
sbb
inc
xchg
adc
mull
lods
mov
enter
xor
aas
pop
loopne
std
dec
in
insl
iret
xchg
test
and
cltd
icebp
popf
cwtl
das
adc
fsubrl
adcb
in
ja
int
add
ficoms
int
fdivrs
pop
jbe
insb
ss
push
ficomps
inc
jecxz
test
dec
ret
cmp
cmpb
pop
cmpl
stos
aaa
sbb
imul
add
rorb
test
mov
and
stos
cmpsb
leave
js
out
mov
jp
es
loope
ret
in
add
jnp
xchg
rcll
testb
mov
jns
lds
dec
fsubp
mov
mov
jae
mov
pop
add
andl
pop
inc
jae
push
jae
lea
movb
sti
mov
sub
nop
into
lret
adc
dec
test
lock
pop
js
testb
mov
fnstenv
adcl
test
cltd
fidivrs
xchg
js
jg
data16
cmc
mov
insl
mov
cltd
ret
out
lret
loop
fnstcw
int3
out
jo
jns
or
std
orb
dec
add
pusha
repz
subl
mov
sbb
in
call
mov
dec
adc
mov
stos
xchg
push
pop
cwtl
sahf
push
add
cmp
xcrypt-cfb
cmpsl
jecxz
in
push
adc
pop
mov
jg
dec
jg
int3
or
push
leave
jno
mov
test
stos
mov
pop
aaa
jge
lcall
mov
pop
push
sbb
xor
out
std
inc
xchg
jbe
pop
es
sti
in
or
rolb
inc
jbe
cmp
push
je
das
jmp
xor
stos
or
mov
jae
sub
xlat
inc
aaa
icebp
sbb
ds
into
enter
test
out
nop
xchg
nop
shlb
clc
mov
mov
sahf
out
shlb
sbb
es
insl
jp
cld
mov
add
rcrl
aas
mov
loopne
xor
and
sbb
aaa
mov
fdivrp
dec
push
adc
cmp
push
or
sbb
scas
dec
fsubs
xor
xlat
mov
inc
inc
dec
loopne
xor
fadds
das
leave
out
pop
lahf
cmp
jnp
push
cmp
push
push
cmp
pop
sti
movsl
lods
pushf
adc
add
add
fcoms
rcr
sti
aas
inc
pop
sub
ljmp
add
xchg
pop
lcall
in
jbe
sbb
lods
cmp
aam
out
iret
aam
movd
inc
aad
mov
inc
mov
lcall
lock
jle
dec
sub
add
cmpb
repz
inc
push
inc
mov
mov
stc
xchg
ret
add
jecxz
add
clc
ja
cli
cli
mov
fld1
call
mov
inc
cs
pushf
xor
out
repnz
movsb
test
pop
adc
pushf
cmp
clc
loopne
jecxz
and
movsl
sbb
pop
mov
ss
call
loopne
fsincos
stos
pop
adc
sbb
sbb
bound
jo
push
sub
adc
jbe
cltd
roll
push
aaa
fildll
scas
cmp
xor
mov
or
add
cmp
fnstsw
repnz
jbe
stc
fidivs
rorb
pop
and
xchg
jae
in
xlat
aad
and
fildl
ss
pop
xor
cltd
das
and
mov
imul
ja
cmc
pop
dec
jo
in
stos
fcomps
adc
sbb
iret
call
or
adc
lock
lods
cmpsl
mov
out
popa
mov
jmp
mov
out
lret
imul
aad
mov
mov
jnp
repnz
into
loope
icebp
mov
icebp
scas
lahf
jae
jae
fistl
adc
inc
outsb
shl
test
and
sub
fisubl
cmp
pushl
and
ret
hlt
mov
in
mov
jl
call
lcall
inc
mov
xchg
movsb
pop
add
inc
fs
loope
rcl
xor
cmpsl
jae
rcrl
scas
cmp
fwait
leave
cmpsb
cmp
dec
into
pop
jbe
movsl
das
pop
and
sub
std
lods
adc
pusha
mov
jnp
cmp
sub
negb
out
inc
fists
cltd
dec
jmp
jg
xor
inc
fldt
jmp
inc
sbb
jnp
loope
push
push
stc
dec
test
mov
sbb
popa
insl
out
das
jno
lret
or
mov
loop
dec
or
test
pop
inc
or
mov
std
push
call
test
sarl
ret
scas
aaa
outsb
or
cs
jo
dec
cs
dec
mov
mov
in
sbb
cltd
push
out
pop
xchg
dec
dec
push
daa
out
outsl
enter
mov
xchg
xchg
divb
orb
pop
cmpsb
addr16
inc
and
test
stos
xlat
jl
das
cmp
fsubs
cli
jae
enter
je
cli
dec
xchg
lds
nop
push
jmp
xlat
xor
iret
lcall
and
out
int3
mov
mov
insl
icebp
fdivrp
ret
jo
pushf
pusha
cmp
xor
jmp
cmpsl
call
cld
and
cmpsb
mov
fisubl
and
loopne
incl
inc
js
inc
jnp
sbb
stos
jmp
cmp
sub
jg
or
out
in
sbb
sub
mov
xor
cmp
mov
xor
mov
jl
push
mov
dec
fdivs
ret
les
ja
xor
pop
adc
lcall
lods
fmuls
cmc
inc
pusha
mov
pop
and
push
fadds
push
pop
xor
or
xlat
rolb
cmc
xor
mov
stc
imul
and
adc
test
call
mov
xor
push
mull
sub
push
mov
testl
adc
inc
and
mov
jbe
clc
and
jg
lahf
jecxz
inc
pop
sub
mov
adc
scas
cmp
das
ret
popa
lret
ss
mov
js
mov
jne
in
mov
in
cmp
pop
call
lds
jge
cmp
fwait
rcl
sub
add
ret
cld
pop
xor
inc
jb
imul
mov
movsb
arpl
and
push
xlat
jg
mov
cmpsb
test
or
jge
sti
or
shll
sbb
ljmp
xor
sub
mov
test
clc
es
pop
test
push
mov
mulb
mul
and
xchg
and
push
aaa
iret
cwtl
nop
add
mov
and
cmp
data16
pusha
add
ja,pn
sub
mov
outsl
pop
adc
daa
lret
cs
or
sbb
jnp
dec
cwtl
test
pop
test
jb
je
mov
mov
push
shl
ret
inc
sub
xor
adc
ret
test
mov
mov
lahf
add
xor
pop
dec
idivb
sbb
cmpsl
and
push
xchg
jmp
mov
mov
xor
cmpsb
sub
cmp
sbb
sub
adc
dec
mov
leave
adc
repnz
movsb
dec
outsl
jnp
jae
ficomps
mov
pop
cmp
mov
ds
dec
mov
cmpsl
rcrb
js
jmp
pop
and
pop
push
xorl
repnz
sahf
insl
mov
mov
add
lock
mov
inc
jmp
cmp
icebp
adc
or
pop
xchg
dec
cwtl
mov
pop
push
cltd
je
cmc
push
and
clc
xchg
ret
cmp
mov
outsb
mov
mov
sti
mov
mov
inc
mov
add
xchg
and
je
aas
out
data16
or
insl
nop
fisubs
adc
in
jae
clc
sub
xor
dec
add
mov
inc
cmp
jle
mov
lret
into
lea
sbb
mov
mov
icebp
call
subb
jo
inc
pop
jg
lahf
adc
loope
in
ja
inc
pop
aam
pushf
push
push
stos
repnz
xchg
mov
mov
nop
mov
cmpsb
das
jnp
xchg
int
mov
sbb
ds
cmp
xlat
xor
dec
mulb
inc
and
arpl
cmp
pop
push
ret
jo
push
dec
clc
inc
mov
std
jp
adc
je
push
xor
xchg
sarb
or
adc
adc
cltd
jnp
xor
add
call
in
mov
add
mov
out
xor
mov
scas
inc
sub
outsl
fbld
loope
mov
cmpsl
cmc
jmp
cld
jb
pop
fsave
loopne
ljmp
pop
mov
add
inc
adc
mov
xor
cmpsb
push
flds
push
cwtl
cmp
insb
cmpsb
int3
popa
je
inc
dec
movsb
xor
dec
aam
add
sbb
adc
in
inc
dec
xchg
or
add
inc
cmp
push
xor
push
lahf
out
ja
lea
xlat
pusha
push
cmpb
sbb
dec
jno
pop
lds
xchg
hlt
jecxz
xorl
jge
imul
repz
dec
jnp
mov
out
mov
adc
addr16
xor
adc
fyl2xp1
sub
push
repnz
scas
lahf
jmp
ficomps
decl
loop
iret
or
out
les
enter
sbbb
mov
xorl
cmpsb
addr16
xor
pushf
jno
dec
and
sahf
sub
sub
jle
ljmp
jmp
inc
xchg
mov
ds
lods
out
in
mov
lods
lret
pop
add
or
jmp
nop
mov
loope
adc
push
sbb
pop
idivl
mov
sbb
stc
pushl
out
mov
pop
inc
daa
adc
aas
cmp
mov
and
mov
imul
popa
sub
in
mov
in
jbe
test
mov
gs
fstl
xchg
iret
sub
inc
popa
imul
ja
inc
or
xchg
jo
cld
in
pop
dec
dec
jb
mov
xchg
jecxz
in
and
cmp
popl
mov
jg
jne
mov
ss
enter
xor
push
sub
dec
addb
imul
dec
inc
aas
dec
jnp
inc
sahf
in
lret
je
and
xchg
mov
lds
and
push
out
repz
dec
hlt
sbb
mov
mov
push
idivl
sub
dec
jno
xor
inc
lret
mov
add
fsubrl
mov
pushf
cmpsb
mov
in
jecxz
jbe
xchg
pop
fnstsw
pop
pop
aam
xor
pop
mov
cld
outsb
ret
sbb
cmpsb
fcomps
daa
sub
data16
jmp
sub
lret
pop
cmp
sbb
int3
invd
push
cltd
out
jo
loope
imul
mov
arpl
das
cmp
jecxz
nop
adc
xlat
jp
in
jg
xor
mov
sub
scas
jle
lock
jnp
add
mov
push
cmp
dec
mov
sbb
lret
xchg
out
test
insb
mov
jbe
int
movsb
cmp
mov
jne
mov
add
push
or
imul
mov
icebp
push
and
ror
std
pop
das
inc
dec
pop
iret
mov
or
outsl
cmc
movl
mov
xchg
lock
gs
mov
subl
jmp
dec
fidivrl
loope
inc
or
add
xor
aas
mov
dec
mov
pop
pop
outsl
in
mov
lods
mov
fnsave
or
int
outsl
push
into
in
scas
nop
sub
mov
and
xor
je
hlt
push
xlat
jnp
popf
jp
xchg
sarl
fdivrs
push
lahf
popa
fisttpll
mov
shrl
sub
je
movsb
incb
gs
outsl
jmp
or
add
divb
and
inc
leave
enter
lods
cltd
cmp
ljmp
mov
fsub
outsb
clc
xor
mov
adc
dec
inc
repz
add
dec
cli
iret
popf
aaa
test
leave
xor
sbb
or
inc
ljmp
arpl
or
pop
test
adc
inc
addr16
mov
adc
push
jp
insl
notl
push
test
sub
and
cmp
lahf
jp
xchg
lret
lock
mov
jmp
cmp
scas
xor
mov
mov
push
xor
aas
idiv
jno
dec
jge
push
add
pop
adc
icebp
daa
add
sti
and
push
push
orb
addl
dec
in
lret
inc
ret
out
push
mov
call
test
pop
mov
hlt
jg
inc
mov
and
jp
push
fistl
ret
jne
mov
js
cmp
xor
cmpsl
push
dec
repz
jns
sbb
mov
gs
push
add
mov
sub
pop
out
xor
sti
xor
sub
add
aam
mov
push
repz
movsb
iret
stc
mov
xor
aas
and
xor
mov
push
pop
notb
xchg
mov
into
push
adc
jbe
das
int
insb
mov
mov
ret
or
and
cmp
sahf
in
xchg
into
sub
mov
fcmovnb
inc
sbb
jnp
sub
out
dec
push
in
push
hlt
jp
pushf
arpl
sub
jp
rolb
idivl
fdivrp
sub
movsl
out
test
sbb
mov
les
loop
adc
mov
xrelease
scas
int3
fmul
jae
mov
cltd
in
xor
bound
hlt
and
push
ror
leave
or
or
xchg
shrb
ret
or
lea
add
push
mov
push
xchg
jg
xchg
jg
cwtl
inc
xchg
pop
cli
sbb
jns
and
dec
lahf
sbb
rcpps
or
aas
push
mov
or
inc
push
xchg
leave
adc
and
push
inc
cmp
ret
shrl
xchg
pop
hlt
lea
xor
and
mov
push
mov
dec
xchg
test
add
xor
jl
call
adc
jne
cmp
xchg
add
sub
cmp
ja
push
insl
or
test
loopne
add
inc
pop
pop
inc
divl
cmp
jp
insb
cmp
stos
adc
bound
mov
aam
mov
in
and
mov
mov
pop
inc
repnz
insl
dec
in
xchg
and
leave
xchg
stc
add
ja
ss
sub
cmp
mov
or
mov
pop
cmp
mov
ds
cli
lea
adc
lret
push
setb
aas
test
inc
gs
lds
xchg
cmpb
xchg
push
pushl
push
or
outsl
jne
jns
add
mov
orb
mov
xchg
in
outsb
inc
mov
mov
fadds
push
inc
and
adc
cmp
cmc
sub
dec
jp
xchg
mov
inc
fst
lods
and
fs
rcll
setp
push
push
dec
inc
or
xor
mov
fwait
mov
pusha
hlt
insl
rorl
and
pminsw
or
xor
aaa
mov
ja
stos
fwait
sub
ret
jae
loopne
idiv
lds
movsl
inc
xchg
or
mov
movsb
lods
pusha
lcall
aad
xchg
pop
push
cmpb
dec
push
imull
rcrl
scas
js
movsb
loope
xor
cld
rcl
or
jo
cmp
xchg
mov
and
in
add
inc
mov
push
cmp
jg
cmpsb
out
ljmp
cmp
and
cs
int3
or
add
mov
xor
xchg
push
pop
outsb
scas
fimuls
sti
or
jns
or
jo
dec
mov
rorb
mov
push
out
dec
mov
loope
mov
mov
and
test
add
insb
add
jbe
pusha
pop
imul
mov
cmp
cmp
into
jns
and
addr16
arpl
or
or
pop
add
jl
adc
ret
das
aaa
sbb
xor
fistpl
jmp
and
outsl
sarb
xor
sub
mov
cwtl
cmp
and
pop
pop
sub
jmp
dec
clc
jne
cs
xchg
adc
clc
notb
bswap
xchg
push
sub
ficomps
pop
rolb
inc
sub
lods
shlb
std
sub
push
movsb
jl
jg
sbb
jg
ja
cmp
jg
adcl
mov
push
inc
mov
push
ljmp
repz
imul
and
out
adc
fisttpl
lods
inc
adcb
dec
or
repz
sbb
pushf
ret
ror
stos
arpl
inc
int3
xor
hlt
stc
movsb
aam
and
fisttpl
xchg
adc
xor
cs
mov
cmp
xlat
test
add
test
xor
xor
pop
mov
dec
and
loop
rorb
orb
cmp
ds
bound
sbb
push
xor
pop
sbb
bound
xor
dec
cwtl
in
test
shlb
imul
in
push
or
int
loope
jg
das
loopne
adc
push
adc
pop
mov
xlat
or
jbe
xchg
lret
scas
icebp
loope
mov
mov
rorb
gs
mov
ds
jne
call
pop
enter
mov
inc
and
inc
js
and
cmpsb
push
pop
jb
xor
inc
pop
hlt
mov
cmpsb
aam
scas
sub
test
fsts
sbb
leave
pop
add
dec
ss
loopne
mov
adc
adc
sbb
mov
cs
xor
push
popf
add
sbb
pushf
mov
pop
lret
aam
nop
sub
adc
fildll
adc
jns
test
xchg
jae
icebp
dec
jnp
std
fnstsw
xor
mov
in
ss
xchg
adcb
dec
stos
mov
lret
jmp
sti
adcl
out
aaa
enter
xor
cmpsl
adc
es
cmp
jg
or
int
mov
sti
sbb
fldt
add
int3
adc
iret
jp
nop
lods
mov
pop
outsl
jmp
cmp
in
add
bound
je
hlt
sahf
or
sbb
cld
jb
cmovb
xchg
push
in
cmp
outsl
insb
std
in
call
fnstcw
pop
adc
imul
sub
jns
stos
cmp
inc
sub
or
push
inc
getsec
lds
jle
or
icebp
mov
test
ficoml
inc
cmc
roll
sbb
or
mov
stos
movzwl
mov
enter
dec
xor
test
and
jmp
inc
sbb
dec
addr16
inc
add
jo
mov
sub
jl
dec
leave
cmp
ljmp
dec
mov
dec
mov
loope
fsubp
xor
sub
icebp
push
jns
lds
leave
insl
jle
mov
cmp
out
xor
pop
pop
sbb
daa
aam
fwait
mov
cmp
xlat
les
cwtl
stc
push
inc
pushf
js
xchg
push
dec
hlt
adc
mov
xor
sub
in
daa
and
or
pop
jecxz
rolb
lret
clc
loope
test
dec
cmp
std
imul
and
or
push
clc
sbb
rorb
xchg
shrb
lret
ljmp
xor
movsb
jp
cmpsb
sti
push
push
jne
pop
pusha
int
jmp
xor
xor
cmp
and
imul
and
adc
lret
jne
sbb
daa
inc
or
pop
and
js
and
dec
mov
test
add
and
sahf
jae
rcrl
out
dec
cs
jnp
xchg
gs
cmp
iret
xchg
rolb
and
enter
xor
mov
sahf
or
push
in
stc
fadds
cmp
gs
bound
xor
shll
iret
and
fdivr
jne
fisubs
dec
lods
in
ja
xor
sbb
jle
push
cmpsl
cwtl
adc
xor
int3
xchg
mov
mov
cmc
fistps
add
mov
lock
mov
into
jbe
add
pop
mov
in
jb
jbe
outsb
push
jb
ret
lret
and
imul
ds
jecxz
mov
xor
data16
int
add
inc
dec
mov
in
push
les
sbb
outsl
stc
push
xor
sub
or
cli
daa
add
jge
jmp
sub
or
push
insl
fidivl
fs
adc
mov
push
in
jle
aad
xchg
jns
repz
in
sub
sbb
inc
pusha
test
pusha
or
and
add
dec
jnp
add
arpl
cmc
mov
cmp
jae
push
lret
sbb
stos
and
fmuls
mov
shrl
fucom
and
hlt
push
sti
adc
mov
cmp
cmc
jl
testl
mov
pop
or
dec
xchg
cmpsb
pop
mov
mov
cmp
hlt
je
lock
dec
mov
pop
add
xor
stos
push
xchg
test
xchg
call
out
movsb
pop
nop
sbb
mov
int
pop
mov
ja
shlb
fs
rcl
dec
cwtl
ds
mov
ficompl
cmp
scas
push
imul
dec
add
cmp
sarb
test
jl
cmp
add
in
fwait
push
jns
xchg
lods
pop
xor
test
xlat
ss
out
cltd
cmp
sahf
mov
lret
cmp
loop
jbe
cmpsl
addb
cld
add
sbb
jno
fs
add
js
cs
push
cmpsb
in
stos
pop
shll
ja
inc
or
out
jmp
pop
xor
out
xor
add
scas
iret
out
out
pop
in
xchg
mov
inc
cmp
mov
ja
lcall
movb
dec
mov
sahf
in
insl
fildll
inc
dec
sub
sub
subl
fwait
dec
dec
xor
sbbb
add
sbb
enter
sarl
mov
xor
jne
and
cmpsb
stos
push
push
adc
or
push
lret
sahf
movsl
dec
lcall
jae
mov
cli
ja
pop
nop
popf
dec
leave
mov
jl
in
push
jnp
push
and
dec
mov
xchg
dec
mov
test
ljmp
cmp
push
addl
and
mov
stos
jp
xchg
jp
outsl
cs
out
xlat
push
movsl
fidivrs
inc
mulb
jb
adc
mov
iret
mov
outsl
mov
adc
fstpt
adc
mov
jp
inc
test
fbld
imul
or
ss
push
int
call
mov
cmc
sbb
dec
cltd
sarl
push
pop
cmp
loopne
ds
movsb
pushf
movsl
xor
lcall
adc
cli
fidivl
xchg
lods
xchg
addr16
aad
xor
xlat
pop
adc
mov
pop
outsb
inc
test
sub
sbb
dec
and
mov
icebp
or
push
lods
jae
ljmp
es
fwait
int
mov
xor
fbld
dec
inc
pop
cltd
xchg
imul
test
bound
jmp
mov
out
test
xchg
jne
das
shl
adcb
mov
outsl
adcl
hlt
aaa
mov
sbb
cmp
arpl
cmp
mov
pushf
and
mov
sbb
lret
inc
stc
inc
fs
fstps
out
add
jns
lea
add
cltd
add
xchg
mov
sti
call
out
stos
sti
ss
push
and
mov
push
jge
push
rorl
adc
xchg
sbb
cwtl
add
mov
popa
jbe
push
xor
iret
inc
pop
in
popf
inc
test
push
cmp
je
clc
cmp
movsl
leave
adc
repz
mov
lahf
cltd
xor
xchg
jecxz
ret
adc
das
pop
lods
jae
jl
imul
jb
repnz
jle
dec
pusha
mov
into
inc
sar
adc
das
ja
and
adc
std
and
cmpsb
jbe
inc
add
stc
stos
fs
out
push
push
gs
or
jae
mov
adc
push
fcomip
lods
arpl
test
pop
jo
sbb
push
push
int3
mov
clc
nop
divl
mov
fnstenv
in
mov
inc
in
jp
jno
push
out
xor
inc
fists
dec
addr16
mov
push
pop
xor
cmc
adc
cmp
mov
push
mov
orb
cmp
int
mov
push
xchg
mov
push
push
mov
jle
fiaddl
jb
and
adc
cmp
lods
cmp
xor
shl
xor
dec
jb
sbb
out
gs
jnp
imull
call
xor
xchg
lret
addr16
loop
and
pop
xchg
cltd
adc
and
test
xchg
ret
jmp
lods
lret
push
mov
adc
cmp
and
push
xor
sti
aaa
pop
ds
mov
ja,pt
or
push
out
and
cmp
adc
in
test
or
cwtl
add
mov
jge
adc
lea
mov
ficompl
push
popf
pop
sbb
fistl
out
mov
xor
adc
ret
jo
lret
lret
or
or
int3
mov
and
rcr
ret
icebp
aaa
xor
sub
ret
adc
cmp
jb
mov
scas
idivb
hlt
test
xchg
jnp
fidivs
addr16
ss
xorb
sbb
imul
add
xchg
mov
mov
adc
mov
mov
or
ret
push
lahf
sub
lods
lret
test
pop
mov
push
xchg
dec
popf
imul
dec
das
daa
cld
jbe
pop
mov
inc
mov
adc
cs
mov
pop
dec
push
arpl
sahf
pop
sub
pop
lahf
add
xchg
sub
outsw
xor
loop
stc
jge
aaa
dec
into
outsb
xchg
lcall
adc
ja
mov
divl
fwait
or
xchg
out
aad
fcmovb
push
inc
sbb
push
mov
inc
fisubl
pop
test
cli
sti
jno
sahf
ret
cmpsl
sub
or
mov
pusha
orl
adc
or
test
add
pop
test
fs
jae
pop
lret
xchg
and
cmpsl
loope
push
icebp
inc
pop
jno
jns
imul
adc
test
pop
push
sub
jnp
adc
jo
mov
or
xchg
push
mov
aam
sub
or
cmp
mov
mov
dec
or
in
iret
mov
or
dec
leave
cmp
enter
jnp
cmpxchg
push
adc
dec
add
xchg
mov
sbb
sub
mov
pop
mov
mov
push
in
divl
into
sub
out
add
inc
in
cmp
ds
pop
test
sbb
jbe
inc
pop
mov
add
inc
pop
mov
insb
xchg
push
sub
clc
xabort
cmp
test
daa
xchg
adc
xchg
mov
push
data16
jge
lods
mov
repz
dec
fwait
jg
and
mov
out
xchg
mov
xchg
fcmovb
cmp
jp
or
add
ljmp
shlb
push
inc
xchg
jae
mov
cmp
iret
movsb
xlat
jne
mov
and
ret
out
lods
cmpsb
call
jmp
add
pop
icebp
push
add
in
pusha
jge
loope
xchg
xor
aam
pop
imul
jg
ss
into
iret
cmp
mov
movl
insl
xchg
push
nop
adc
push
in
test
cmp
xor
cld
jnp
fisubs
dec
mov
mov
movsl
test
adc
test
dec
jge
push
cmp
std
js
in
data16
mov
xchg
inc
xchg
sbb
xchg
xlat
dec
imul
inc
xchg
mov
add
dec
aad
iret
dec
mov
mov
shll
mov
sahf
leave
mov
outsl
xchg
cmp
ds
shrl
in
mov
cld
test
inc
mov
mov
js
add
bound
std
dec
mov
pop
mov
loopne
rorb
stos
jmp
xchg
cwtl
popa
ja
js
lret
inc
lret
popf
imul
jb
and
sub
jnp
in
mov
jae
inc
movsl
insb
lds
sti
pop
and
in
adc
ror
mov
mov
inc
stos
mov
mov
pop
dec
fiaddl
adc
dec
jae
ret
ds
xchg
pusha
sub
movsb
mov
leave
imulb
mov
pop
shlb
movsl
sbb
clc
xchg
jnp
ja
dec
or
sbb
psubq
popf
cltd
lret
xchg
movsb
lahf
mov
rcrb
std
jns
jbe
cmc
pop
aad
fistps
mov
dec
sbb
test
arpl
fisubrl
loopne
push
push
mov
pop
mov
or
mov
adc
and
mov
arpl
xchg
popa
fsubrs
lahf
les
dec
and
add
gs
mov
mov
aaa
into
or
mov
cmp
bts
bound
pop
stos
push
repnz
movd
add
pop
dec
das
push
bound
mov
mov
and
jp
push
call
outsl
pop
out
es
push
push
stc
pop
call
aad
les
aam
xchg
call
sub
mov
jno
cmp
fnstcw
call
aaa
sbb
mov
daa
mov
nop
and
popa
add
cmp
sub
hlt
shlb
adc
sub
mov
lods
loopne
stos
addr16
fstpl
jle
cli
push
cmp
mov
add
les
jg
cmp
dec
jae
lea
lds
inc
cmpsb
test
and
adc
adc
mov
push
popa
inc
fstpt
and
mov
cmp
aaa
inc
and
xor
cmpsb
sub
xchg
push
mov
or
test
xchg
data16
in
sub
mov
fbstp
fs
lahf
jg
mov
xchg
insb
data16
jns
lods
xchg
xchg
inc
aaa
pop
pop
mov
fdivrs
cs
scas
lahf
push
mov
mov
aas
add
inc
or
mov
cltd
loope
popf
test
sbb
jnp
out
in
push
push
mov
mov
js
dec
push
lcall
fiadds
jg
or
sahf
sub
push
push
andl
scas
push
mov
pop
push
dec
outsl
clc
fs
insb
add
sbb
xor
mov
adcl
je
arpl
mov
lods
mov
and
push
dec
mov
cmp
pusha
out
in
test
mov
sub
jp
dec
mov
xor
int3
fmull
cmp
ss
dec
pop
jns
xchg
mov
ljmp
sbb
add
insl
pushf
mov
or
mov
and
shll
jecxz
ja
add
or
push
mov
push
xor
lods
push
mov
xor
mov
or
stc
xor
test
sub
mov
lret
xor
cli
das
add
in
cmpsl
cmp
sti
inc
inc
adc
xchg
add
sub
cmpsl
mov
shll
rcl
call
mov
add
cmc
ret
pop
push
shll
mov
lahf
or
cmp
ja
mov
cs
sub
jb
sbb
out
fucom
pushl
std
int3
or
or
add
xor
cli
mov
cmp
mov
ja
sub
ror
les
or
icebp
or
cmp
cmp
or
jg
sub
insl
xchg
sbb
mov
push
adc
pop
cmp
pop
imull
fs
cmp
mov
in
jp
mov
jg
push
cmc
jnp
pop
cmp
mov
sti
inc
cmp
push
inc
mov
or
enter
and
cmpsb
push
sbb
rcr
sbb
push
sub
dec
lods
pop
cmpsb
mov
push
imul
addr16
add
add
shrb
clc
lods
jne
xor
stos
scas
jg
sub
sub
test
in
shrb
dec
cs
sbb
orl
arpl
out
dec
adc
shr
sbb
xchg
xchg
jne
or
push
aas
push
add
clc
insb
pushf
decl
popa
stc
push
mov
or
pop
int3
push
mov
mov
stc
mov
xorb
cwtl
cli
mov
xor
mov
inc
push
cli
sahf
enter
mov
xrelease
test
adc
cli
ret
repz
jbe
push
negb
dec
xlat
inc
dec
test
or
push
roll
or
adc
loope
int3
fsub
inc
mov
jae
jp
pop
data16
shrb
xor
out
and
and
push
movsl
and
sahf
divl
sarb
mov
mov
sub
mov
mov
adcb
add
inc
xor
pop
addr16
into
rcl
push
cltd
sbbb
push
cwtl
data16
lods
icebp
pop
mov
data16
mov
cmc
daa
inc
lock
push
or
jp
jl
sbb
lea
mov
mov
in
in
push
mov
cs
or
dec
fs
sti
and
push
fnstenv
cli
push
into
mov
mov
fisubs
pop
add
pushf
lret
loope
jbe
repnz
sub
mov
mov
outsl
ss
dec
inc
cld
subb
dec
fwait
mov
clc
sbb
imul
test
test
data16
pop
jmp
inc
mov
outsb
mov
sbb
inc
lock
pop
js
inc
rorb
lods
shrb
arpl
addb
lods
mov
xlat
and
push
movsl
dec
jb
mov
add
stc
pop
push
lcall
lret
xor
mov
cli
pop
lods
jo
std
jmp
shrb
pusha
inc
imul
and
cmp
cli
adc
test
inc
cs
inc
pop
test
das
inc
sbb
mov
push
push
cltd
jo
cs
or
xchg
and
bound
pop
aas
mov
enter
lcall
xchg
push
fistpll
xor
in
arpl
clc
pop
and
and
ret
aas
add
movsl
mov
cmp
dec
xor
xchg
lret
push
push
cwtl
add
je
clc
in
out
notl
cld
push
std
jle
stos
jae
movsl
jl
mov
mov
lock
cmp
adc
add
push
push
js
or
and
xor
pop
add
inc
aam
dec
or
loop
push
push
mov
sub
enter
jno
hlt
cmc
sub
jge
sar
repnz
and
in
repnz
lods
pop
sbb
in
mov
xchg
sub
aad
shlb
adc
sahf
jp
sub
loop
ret
insb
sbb
dec
jp
mov
mov
mov
pop
pusha
pop
pop
jg
add
pop
pop
or
mov
jmp
xor
sbb
addr16
xchg
fcomi
xchg
xor
sarb
mov
insb
push
adc
adc
push
add
les
push
mov
push
fsub
popa
mov
inc
int
mov
pop
cmpsl
mov
fwait
push
iret
es
ret
popf
sbb
repz
adc
sahf
cmp
je
push
les
iret
popf
scas
cmc
iret
lret
stos
fs
mov
mov
iret
mov
sbb
andl
adc
jo
xchg
push
loopne
fiaddl
mov
pop
cmp
xor
adc
push
jecxz
add
stos
xchg
ret
in
jae
xchg
jl
subl
pop
jge
push
ret
hlt
mov
and
sub
jbe
in
xchg
xor
push
or
inc
loope
inc
jbe
sbb
xchg
sti
push
dec
cmp
and
inc
out
fyl2x
aas
and
cmp
aad
lahf
xchg
ljmp
push
int3
fiaddl
pop
enter
fcmovbe
fstps
mov
gs
lea
sti
cli
mov
inc
push
daa
loopne
shlb
pusha
add
rorb
adc
jo
sub
and
xchg
nop
cmp
adc
add
ret
repnz
setg
pop
mov
sub
mov
cmpsl
pop
sbb
movsb
movsb
movsl
mov
dec
test
mov
incl
sbb
xor
and
rclb
xor
sti
cmp
int
adc
jns
xchg
sbb
in
cld
xor
mov
mov
aam
aad
sbb
adc
in
shr
cmp
dec
popa
jne
jl
cli
push
xlat
mov
xchg
dec
sbb
fnstenv
in
pusha
dec
push
mov
cltd
lods
jbe
not
pop
sub
test
jmp
fs
call
cmp
mov
xor
das
mov
jp
loopne
test
inc
xor
into
mov
adc
nop
rcll
jnp
adc
mov
setb
rol
in
loop
jno
lods
leave
ja
xor
xor
test
xchg
lock
jbe
add
cwtl
cmp
nop
push
mov
shrl
inc
arpl
jge
inc
xorl
jp
adc
fisttpl
sub
sti
scas
add
insb
xchg
xor
mov
jne
fdivrs
stos
fwait
sarb
ret
xchg
xchg
push
and
and
xor
dec
sub
pusha
or
dec
out
out
inc
xor
fwait
fld
shll
sbb
xchg
sti
bnd
popa
cld
scas
sbb
leave
in
jo
or
aaa
jno
and
lods
clc
add
cs
jg
xchg
push
or
jae
adc
adc
sub
jl
add
push
cmp
jno
jge
fadds
cld
sub
subl
jmp
cs
jecxz
fmuls
or
pusha
bound
repz
sub
sahf
jnp
aam
cli
add
add
lret
and
icebp
pop
je
addr16
icebp
js
adc
ja
iret
addr16
cwtl
add
jno
scas
jmp
push
mov
stos
adcl
cwtl
mov
fstl
call
lds
fcmovbe
fs
add
lret
iret
test
cmpsl
push
stc
adc
mov
ss
xor
mov
in
adc
fcomi
and
in
std
mov
xor
ja
jne
leave
movsb
scas
lret
sbb
cmp
loope
jmp
sbb
clc
test
arpl
dec
bound
aam
pop
aad
and
mov
and
push
xor
ss
jbe
fwait
pop
aaa
inc
repz
dec
ds
imul
xchg
loope
mov
fadd
les
test
sbb
cmp
jbe
mov
pop
mov
stc
dec
mov
rorb
fstpl
cli
push
in
js
xchg
jne
out
sub
push
dec
rolb
test
mov
iret
push
popf
push
jp
push
emms
arpl
sub
cs
adc
sub
clc
mov
xor
xchg
xor
cs
push
mov
xchg
fnstsw
sub
stos
cmp
xchg
inc
testb
mov
out
jnp
mov
rolb
fucom
sub
mov
adc
pop
or
inc
mov
loop
popa
pop
sub
sbb
push
mov
iret
rcrb
imul
out
divb
les
int3
adc
xchg
xchg
sbb
repz
xlat
adc
mov
in
cmp
xor
xor
in
dec
scas
popf
outsb
aam
lods
add
mov
movsb
or
mov
nop
push
les
shrb
jae
call
xor
mov
sarb
dec
sti
pop
mov
push
mov
rorl
mov
ds
out
xchg
jmp
xlat
inc
mov
test
mov
movsb
pop
fs
add
imul
bound
push
cwtl
fisubl
xor
das
jae
push
rcrb
or
push
xchg
sbb
movsl
and
ret
ljmp
out
jmp
xchg
movsl
lds
dec
inc
xlat
ja
dec
das
call
push
xor
cmp
dec
mov
cmp
mov
push
imulb
inc
insl
sub
fdivrp
add
jp
cmp
sarl
cmp
in
mov
xchg
andl
loopne
arpl
in
popf
inc
imul
test
adc
mov
mov
cmc
daa
ds
jo
adc
shrl
and
xor
aas
pushf
push
or
mov
cmc
pop
xor
jno
mov
subl
xor
repnz
int3
xchg
loopne
xchg
shlb
mov
sti
pusha
aaa
sub
cli
cmc
dec
aam
sti
mov
cmpsl
add
pushl
fwait
movsb
push
loop
jp
aas
outsl
sarl
cmp
test
imul
out
ret
inc
aaa
push
cmp
addr16
add
xchg
push
or
add
adcl
mov
mov
insl
icebp
xchg
subb
pushf
addb
loope
std
push
pop
xor
dec
sahf
mov
cmpsl
mov
cmp
cmp
jae
pop
sbb
push
add
fs
add
dec
iret
call
push
adc
sarl
and
dec
repz
movsl
adc
je
testl
cmpsb
out
les
pop
lahf
aas
sub
lods
mov
and
fstl
fwait
pop
insl
mov
mov
cmpb
cmpsb
inc
cmp
jns
ret
fimull
mov
out
and
add
or
mov
jmp
add
insl
in
adc
lods
mov
xor
jl
in
mov
push
xchg
jnp
retw
sub
jb
aad
loop
scas
jo
outsb
pop
push
and
pusha
mov
ja
xor
or
test
push
jo
cmp
addr16
mov
xchg
xchg
shrl
xlat
jb
mov
mov
pop
sti
sahf
rcrb
out
mov
cmp
mov
mov
or
lods
dec
cmp
sub
cli
rolb
jg
and
lds
sbb
mov
and
sbbb
mov
adcl
sahf
bound
inc
cltd
sbb
test
xor
int3
je
das
cmc
or
push
out
adc
jle
insb
fucomip
xor
sbb
cs
ja
ljmp
scas
imul
push
shll
aaa
sub
addl
testb
adc
ss
cmc
inc
pop
in
jbe
popa
sarl
scas
or
mov
mov
adc
push
jnp
or
and
shlb
outsb
add
sbbb
fcmovnu
xchg
or
cmp
cld
jns
jbe
call
dec
pusha
adcl
cmpsl
test
pop
pop
lahf
xchg
xchg
or
shll
das
outsb
or
mov
push
xor
jne
xchg
iret
sbb
xchg
add
or
or
xlat
fnsave
inc
cmpl
dec
xor
push
dec
fnstsw
fdivrl
cmpsl
xchg
lods
sbb
jo
adc
subb
xchg
cmpsb
sbbb
rcll
in
inc
incb
mov
add
int3
aam
sub
addr16
mov
push
in
jae
jl
xchg
dec
jnp
push
dec
nop
jne
sub
mov
jno
add
sbb
xchg
add
inc
jg
std
adc
mov
mov
in
int
stos
mov
into
ja
jg
mov
push
inc
int3
mov
adc
add
lcall
stc
sub
pop
addr16
movsl
sub
cs
in
mov
cmp
imul
out
insb
cmp
scas
test
mov
idiv
jmp
sbb
xor
and
mov
jp
xchg
lcall
push
loop
out
in
mov
jmp
or
das
in
jo
or
mov
fsubrl
inc
enter
ret
xchg
daa
bswap
aas
inc
mov
pop
mov
subl
cmpsl
lds
sub
lds
loopne
mov
jg
xchg
xor
je
cmp
pxor
arpl
jnp
xchg
jbe
ret
push
sub
push
jne
sub
sbb
xchg
leave
mov
stos
or
sarl
push
pop
or
mov
mov
mov
out
push
idivb
lods
int
popf
aam
add
lret
mov
repnz
pop
mov
repnz
clc
test
xchg
fidivl
pop
cmp
add
sub
into
cltd
sbb
getsec
xor
add
shll
rcll
push
jnp
mov
lods
repz
inc
je
iret
push
inc
push
mov
push
hlt
insl
lcall
movsl
sub
icebp
bound
in
mov
movsb
push
xor
lahf
jae
sti
fcomps
pop
push
leave
sbb
mov
test
test
mov
loopne
pusha
fs
sub
movsl
out
inc
sub
out
jnp
fldcw
xor
into
cmpsb
aad
add
and
dec
ret
leave
mov
push
ljmp
xchg
xchg
fdivrs
aam
pop
into
pop
insl
xor
mov
pop
stos
nop
cld
bound
sub
stc
push
fildll
sbb
inc
jo
adc
mov
xchg
test
mov
into
inc
mov
push
stos
cmp
das
add
vmovups
adc
jg
pop
xchg
mov
cmp
inc
add
ja
and
rorb
ficomps
mov
mov
movsb
das
jae
mov
jge
push
xchg
ficoml
xchg
and
sbb
rorb
into
das
mov
lds
adc
mov
xchg
inc
pushf
pop
push
cmp
cwtl
rorb
cltd
cwtl
ret
lret
mov
jmp
jg
jl
jge
orl
mov
pop
mov
fucom
int
rcr
jmp
push
lds
mov
rol
out
iret
jb
mull
loop
enter
loop
mov
mov
aas
cmp
aam
xchg
sub
mov
adcl
pop
mov
loopne
cld
xchg
xor
je
loop
push
fiadds
fwait
cld
inc
and
mov
cmp
out
pop
mov
push
or
arpl
arpl
fidivl
or
hlt
pop
inc
ss
inc
lret
shlb
shl
xchg
and
fcomp
into
in
in
or
fmul
push
pop
ss
imul
ss
je
mov
pusha
out
xor
ret
dec
pop
jg
sbb
sbb
out
adc
pop
ficoms
movsl
mov
sub
sbb
pop
icebp
mov
mov
add
aam
sub
dec
sbb
bound
aam
jge
push
adc
rcrb
jbe
pop
jns
cmp
cwtl
les
hlt
xor
mov
int3
int3
push
mov
adc
enter
std
loop
std
aam
mov
sub
adcl
dec
adc
push
mov
stos
xchg
lcall
jbe
lock
icebp
clc
sbb
cmc
xlat
pop
or
add
and
mov
mov
mov
xchg
add
push
mov
ror
int3
testl
imul
cmp
gs
mov
aaa
aaa
shlb
ja
dec
repz
aad
pop
xchg
cs
dec
push
mov
jb
dec
out
push
mov
sub
popf
enter
dec
andl
rorb
fildll
orb
loopne
in
imul
jle
leave
sbb
push
push
stos
test
jae
fwait
ss
cmp
loop
mov
int3
jge
jns
add
mov
in
add
adc
cmpl
jbe
jns
out
dec
loop
add
sti
xchg
clc
cld
push
cmp
and
push
icebp
scas
insl
cmp
push
mov
cmc
inc
fnstsw
xchg
adc
fs
jbe
mov
inc
push
jno
inc
lret
dec
lods
data16
mov
pop
pop
adc
fwait
stc
or
lret
into
push
or
sahf
cltd
icebp
iret
fbstp
and
adc
fildll
inc
jl
test
xchg
sub
cmpsl
ljmp
lret
test
xchg
je
mov
ss
pop
cmp
dec
sbb
loope
mov
in
push
pop
sahf
ja
popa
and
jne
xchg
sbb
add
adc
xor
ja
mov
loopne
pop
cmp
push
mov
sub
jbe
mov
push
inc
cmp
dec
and
test
mov
mov
and
or
mov
jmp
jne
out
jb
lock
cmp
aas
inc
xor
shlb
cmp
sti
xchg
adc
mov
movsl
jmp
ss
test
add
push
movsl
testb
faddl
adc
mov
pop
pusha
add
mov
rorb
and
xchg
jp
add
jnp
xlat
out
xor
gs
sbb
stc
in
mov
jne
xorb
shr
ret
or
pop
sbb
add
pop
push
push
xchg
stos
pop
pop
fs
cmp
insb
inc
push
cmp
mov
lea
jae
mov
jno
sub
imull
adc
imul
pop
push
loopne
nop
push
add
jnp
add
mov
outsl
and
mov
xchg
sti
and
repnz
inc
sub
mov
adc
add
sbb
mov
inc
adc
sahf
xchg
sub
mov
mov
into
and
nop
test
push
xchg
inc
ja
loope
dec
roll
mov
sbb
xor
and
push
jno
mov
stos
ljmp
inc
cmpsb
xchg
inc
fnstcw
pop
add
dec
push
cmp
outsb
add
add
repnz
or
inc
imul
sub
sbb
mov
xchg
cmpsb
mov
jne
xor
shlb
cmp
icebp
in
cmp
adc
outsl
loop
hlt
outsb
subb
loope
jno
jl
jl
test
jg
cwtl
mov
jg
pop
aam
sahf
aaa
mov
pop
and
sahf
jge
call
or
into
jne
arpl
mov
xchg
push
cmp
and
sbb
fnsave
pop
xor
mov
jne
xchg
cmp
insl
notl
mov
and
pop
jb
xchg
sti
pop
out
and
ret
mov
xchg
pop
outsl
mov
and
mov
frstor
pushf
inc
push
dec
mov
cld
imul
sbb
out
mov
adc
pop
mov
adc
xor
and
aam
loope
push
gs
adc
pusha
stos
lea
xchg
ss
ja
ret
ss
mov
xchg
movsl
in
add
pop
rclb
or
adcb
inc
pop
inc
loopne
xchg
jbe
ljmp
add
lods
cmc
rorl
ficoms
stos
dec
mov
fidivrl
cmp
xchg
call
sbb
inc
mov
imul
pop
adc
bound
nop
lods
push
push
mov
lds
inc
jno
xchg
cmp
jno
imul
movsl
add
mov
fs
aaa
ja
adc
ret
in
pop
push
push
fwait
lock
and
je
rcl
mov
xor
je
out
xlat
movsb
dec
insl
sub
push
jp
mov
jg
adc
mov
movaps
xchg
sub
mov
sbb
lods
jns
push
loope
xchg
cmpsb
inc
sahf
repnz
divl
adc
xor
add
cmpsl
test
dec
and
dec
or
ljmp
aad
pop
loope
into
mov
sarl
sbb
mov
jge
sbb
or
dec
mov
popa
aam
push
rcrb
sub
cmp
aaa
sti
jns
fisttpll
dec
das
xchg
push
cli
cmpsb
mov
gs
jno
xor
bndstx
mov
mov
sbb
icebp
pop
pop
sahf
popf
enter
mov
ficoml
negb
xchg
sub
jg
lods
nop
rcrl
mov
mov
xchg
addr16
aas
loop
mov
inc
xor
or
jmp
sti
das
mov
cmpsl
mov
sbb
xchg
jbe
mov
or
out
dec
in
sub
mov
adc
pop
xchg
lret
rorb
mov
add
in
leave
fneni(8087
lods
hlt
inc
in
fildl
scas
das
fdivs
mov
push
std
dec
ds
adc
fdivrl
scas
sub
into
bound
add
cmp
mov
add
btr
popa
in
ret
xchg
test
push
jl
sbb
xlat
in
xor
sub
inc
mov
repz
sbb
xchg
dec
push
jmp
rclb
jnp
inc
mov
or
fadds
xor
scas
mov
xchg
popa
ret
scas
mov
or
mov
or
std
add
cmc
arpl
sub
repnz
pusha
xor
sub
sub
popa
adc
mov
xlat
scas
lods
inc
int3
mov
subl
pop
or
lea
notl
inc
adc
in
pop
pop
in
mov
mov
notb
sub
mov
into
shr
jno
stos
mov
cmpsl
add
sub
sbb
mov
adc
mov
loope
clc
in
int
mov
test
mov
mov
mov
and
loopne
push
inc
lcall
popa
pop
shl
in
shlb
pop
cli
xor
pop
add
and
mov
xchg
test
xor
xor
adc
jl
mov
rclb
call
insb
int3
daa
and
cli
jae
outsb
outsl
scas
mov
mov
je
inc
dec
jg
mov
jmp
lcall
jge
fisubrs
dec
sti
mov
rorl
cmovne
mov
adc
mov
dec
lods
mov
out
xchg
pushf
mulb
dec
cmp
fwait
out
std
mov
stc
push
xchg
mov
dec
pusha
lods
rcl
jb
jo
and
mov
ficomps
mov
cld
cs
pop
addr16
roll
hlt
fiaddl
rcrl
imul
push
xor
cmp
ja
pop
pop
mov
xchg
enter
test
icebp
rclb
xchg
test
and
add
mov
js
movsb
scas
mov
or
test
dec
sub
fnstsw
lea
cmp
mov
xabort
mov
out
jmp
add
leave
push
mov
cmc
lods
mov
jmp
lret
js,pn
dec
mov
lods
add
push
ss
into
dec
lds
fisubrl
cli
pop
push
lock
lock
loopne
bound
outsb
jmp
out
inc
lea
shlb
aam
jge
jmp
bound
rcl
ds
ds
pop
push
mov
je
and
leave
sub
ss
gs
mov
popa
popa
out
into
pop
sbb
sbb
mov
or
out
or
inc
rorl
sub
cmp
scas
pop
and
cmp
popa
addr16
fsubl
xchg
std
das
xchg
in
adc
jle
stos
mov
xchg
mov
xorl
das
push
or
imul
jmp
push
inc
repnz
jge
loopne
sub
js
push
pop
xchg
add
arpl
orb
fidivrs
in
stos
addr16
mov
daa
push
cmc
mov
movl
imul
fabs
and
cmpsl
out
push
cmpsl
into
scas
popf
push
sub
mov
enter
addr16
aad
ret
cli
mov
incb
add
xor
stos
insb
out
mov
jge
ret
in
int3
in
add
enter
xor
or
mov
mov
test
ss
sarb
sub
push
mov
pop
add
lods
imul
cmc
sub
sbb
push
pusha
pop
xchg
das
stos
aaa
sbb
inc
mov
pop
jnp
adc
cmc
pop
in
int
jne
cmp
jl
mov
bound
mov
mov
dec
lock
sbb
out
sbb
ret
das
ficoms
into
and
push
mov
aaa
cmpsb
mov
jp
mov
sti
jno
push
aas
jns
jl
lods
add
cmpsl
or
inc
sub
in
mov
outsb
cmc
cmp
lahf
cltd
inc
fmul
inc
and
out
int3
pusha
inc
push
inc
jecxz
movsl
into
rclb
sbb
adc
push
pusha
cld
imul
pop
stc
mov
inc
int
enter
pop
fdivrs
divb
add
inc
or
and
jne
mov
dec
test
jle
xor
ret
pop
push
push
inc
push
adc
xor
pop
xor
inc
push
arpl
out
mov
sbb
and
test
push
lock
fcom
outsb
mov
cmpsl
pop
pop
mov
out
lret
pop
sbb
mov
sbb
xchg
jp
test
and
fsubrl
rcll
add
cwtl
divb
or
push
xchg
psllq
dec
mov
lahf
push
sar
ror
rcrl
cmp
cmp
push
mov
ja
pop
xchg
test
cs
test
leave
sbb
inc
repnz
enter
xchg
daa
lcall
cwtl
aad
or
lret
sub
ljmp
pop
xor
adc
xchg
xchg
pop
adc
es
cmpl
out
push
push
xchg
xchg
xor
scas
test
dec
or
inc
xor
push
ret
sbb
or
pop
xor
adc
fsubs
mov
pop
ja
shlb
adc
fisubrs
cmpsl
push
xchg
or
add
shl
mov
pop
je
ficoms
push
mov
dec
mov
sarb
lods
addb
cld
cmp
mov
ficoms
stos
pop
add
mov
aaa
adc
leave
iret
inc
jne
adc
clc
mov
adc
xor
pop
or
lods
mov
cmc
xchg
jae
push
gs
push
ret
sti
scas
or
es
decb
jmp
adc
cmp
ret
popa
inc
and
out
hlt
lock
pop
mov
loopne
push
stc
lods
dec
and
aaa
push
sbb
pop
mov
adcb
dec
push
test
xor
and
andb
arpl
lret
repz
iret
sbbl
fmull
and
outsl
loope
sbb
xchg
mov
lret
popf
das
add
mov
shrl
mov
add
add
addr16
push
arpl
push
loopne
mov
gs
lcall
xor
or
add
loope
fcomi
fiaddl
fs
lock
push
inc
pop
cwtl
stc
inc
add
xor
and
or
cmp
push
add
nop
jnp
jne
cmpl
cld
imul
or
sub
add
jnp
loop
inc
jle
sub
xor
test
les
out
xlat
mov
rol
dec
mov
dec
popa
pmovmskb
incb
scas
outsb
xlat
jle
pusha
rorl
repz
ss
push
cmp
jle
inc
xlat
popa
lods
push
mov
nop
or
in
jge
enter
fisubrs
pop
mov
xchg
add
pop
arpl
lea
push
push
clc
cld
loop
fwait
or
inc
in
test
cmc
or
xchg
inc
aam
or
in
fadd
jecxz
push
mov
fldenv
jns
xor
fcomps
sbb
pop
shlb
aam
pop
adc
mov
cmp
pop
scas
fdiv
cmp
sub
mov
xor
jg
rorl
test
cmpsl
push
popa
stos
sbb
pop
add
les
sub
jns
add
adc
xor
add
jg
cmp
stc
fidivl
inc
cmp
add
sub
fidivrs
add
and
inc
lcall
push
fcompl
mov
or
sbb
int3
inc
insl
insl
sbbb
out
fs
sti
mov
dec
in
cld
jmp
jb
push
test
cmp
jmp
add
adc
mov
adc
filds
stos
test
and
inc
cwtl
inc
xor
add
xchg
test
xchg
inc
or
push
ja
or
nop
pop
sub
inc
movsb
pushl
mov
jno
aas
mov
jns
push
jno
mov
mov
clc
and
ss
adc
test
cli
ret
lea
outsl
and
subb
sahf
fldenv
mov
iret
jnp
pusha
clc
jmp
mov
sbb
es
jns
hlt
outsb
jo
mov
mov
push
js
shll
mov
mov
ret
inc
movsl
fwait
loope
sahf
inc
push
xor
mov
jmp
jp
mov
cld
iret
cmp
cmpl
jbe
test
adc
outsl
or
adc
leave
push
pop
and
mov
cmp
mov
jbe
mov
enter
xor
lods
sbb
jne
push
adc
je
addr16
pop
cli
xchg
mov
and
mov
push
push
dec
and
adc
mov
mov
lea
pop
jbe
fistps
xchg
sbb
jbe
dec
jl
leave
push
pop
pushf
push
int
icebp
repz
xchg
mov
test
xchg
mov
test
xor
rorb
fs
jo
push
sub
xchg
push
add
jae
xchg
and
mov
cmp
inc
adc
jl
push
cmpsl
addr16
call
sti
imul
fmul
fwait
test
adc
sbb
xchg
aad
jbe
fisttpl
mov
inc
test
test
xor
imul
clc
pop
mov
movsl
sbb
mov
push
popa
stos
adc
xor
sbb
sbbl
in
adc
outsl
jp
pop
push
daa
test
mov
jne
repz
push
std
adc
mov
pushf
xor
test
xor
iret
xor
pop
stos
pop
std
cs
notb
mov
lret
jle
xorl
das
inc
sbb
cmp
sub
in
imul
pop
adc
scas
lock
xchg
and
test
or
mov
xchg
rcr
cmc
sub
sub
ja
ret
enter
stos
jbe
fstl
cmp
stos
xchg
test
jle
or
sarl
jns
mov
hlt
lods
pop
ror
lods
imul
jle
ficomps
pushf
data16
cmpsb
push
jnp
jno
lea
xor
adc
nop
and
les
mov
std
sbb
fmul
xchg
out
mov
aam
add
pusha
ljmp
jmp
push
out
or
adc
inc
pop
frstor
daa
xchg
xchg
ss
pop
xor
repz
sub
cmpb
mov
mov
sub
inc
sub
dec
fadds
and
out
xchg
sbb
aas
push
dec
pushf
mov
jnp
iret
xchg
mov
imul
sub
jp
shlb
cmp
es
push
inc
mov
sbb
dec
loop
pop
call
dec
jge
mov
mov
sub
fldl
lcall
mov
es
ror
frstor
mov
fisttpll
out
out
out
pop
sub
int3
adc
adc
add
ret
cmpsb
jno
pop
dec
cld
je
pop
icebp
shll
pop
test
xchg
cmp
push
imul
test
jle
mov
addr16
or
or
mov
and
mov
cli
and
js
sbbl
fldcw
das
aad
sbb
clc
pop
shr
mov
lret
je
mov
xor
loope
lds
pop
and
and
sub
rorl
xchg
push
mov
imul
int
jge
in
cmpsb
jmp
shrb
and
or
sbb
pop
pop
adc
cmpl
scas
or
inc
push
adc
mov
xor
mov
outsb
lds
and
or
mov
xlat
lcall
mov
ror
push
mov
or
test
inc
mov
jno
pop
fsubrp
shl
mov
cmpsl
inc
ljmp
rclb
out
push
dec
sub
fwait
ds
mov
inc
lods
test
dec
add
xchg
mov
push
mov
lret
dec
cmpsl
incl
imul
adc
sub
cmp
jbe
movsl
int3
xlat
icebp
pop
sub
imul
inc
mov
icebp
into
test
out
fadds
test
ficoms
lahf
xchg
ja
icebp
rcrl
xchg
dec
xor
aad
hlt
and
mov
pop
inc
jbe
ss
aad
aam
jnp
js
xchg
icebp
mov
jg
mov
dec
push
pop
in
cmp
mov
rcrl
fnstcw
adc
push
xchg
into
mov
push
jle
cmpsb
sti
mov
mov
pop
notl
mov
lods
pop
stc
inc
cwtl
cmpsb
push
repz
inc
aad
nop
xor
mov
xor
popf
cmp
mov
push
xchg
xor
leave
loop
inc
or
hlt
add
push
adc
mov
pop
scas
mov
mov
fildll
movsb
mov
push
pop
cli
insb
into
scas
jecxz
pop
out
cmp
mov
out
xchg
or
xchg
loopne
inc
dec
add
mov
sub
les
int
xchg
ss
cltd
push
pop
iret
inc
and
orb
push
jl
stos
xchg
pusha
lret
into
mov
jne
movsl
movsb
xchg
mov
movsl
mov
cmp
call
shlb
ja
pop
mov
lds
dec
aam
imul
jecxz
shlb
and
stos
pop
xchg
pop
out
fnstcw
pushf
icebp
pop
mov
push
insl
jp
jbe
outsl
and
pop
mov
pop
mov
enter
and
fisubrs
repnz
adc
jmp
je
and
daa
xor
lret
xlat
lret
xlat
sbb
stc
stos
outsb
cmpsl
add
repnz
lock
pusha
cmp
and
outsb
jae
pop
arpl
cs
std
mov
xchg
ljmp
jle
dec
or
in
pop
repnz
movb
in
cmp
ret
test
push
fprem
repz
sub
add
or
outsl
jge
dec
jg
mov
sub
inc
cli
push
loop
sbb
addl
lods
or
jg
nop
mov
nop
lea
adcl
or
add
popa
into
aas
roll
sub
test
insl
test
pushf
xchg
cmp
bound
jb
mov
pusha
pop
stos
rorl
outsl
dec
stos
ret
xor
nop
jae
addl
pusha
shlb
js
test
cmp
push
pop
xorb
inc
arpl
orl
cmp
imul
ret
lret
sub
int
mov
lret
int
xchg
pop
fnstsw
pop
sub
jo
mov
aaa
outsb
cmpsl
fisubrs
adcl
pusha
mov
push
jle
mov
fwait
mov
jnp
fxam
clc
std
arpl
loopne
sbb
pop
testb
adc
hlt
or
push
les
in
jecxz
scas
sbbl
loope
dec
mov
and
and
sub
mov
pop
xchg
bound
sub
roll
and
push
popa
jns
daa
mov
in
and
cmpsb
jle
inc
add
mov
pop
add
mov
cmpsl
fwait
mov
inc
das
ret
xor
fsubr
ljmp
ss
pop
and
push
movsb
leave
jno
dec
ljmp
shll
fnstenv
jo
call
or
cltd
sbb
push
xchg
dec
push
push
loopne
add
dec
ss
mov
test
or
xor
add
fistps
inc
popa
inc
jns
mov
mov
shrb
mov
vmovd
adc
call
fwait
movsl
jp
mov
cwtl
sbb
enter
loope
jmp
je
jle
cmp
insb
inc
rorl
leave
repnz
xor
push
lcall
mov
fldenv
jns
out
add
ss
jnp
adc
push
jb
jbe
aam
test
or
push
mov
pushf
dec
daa
rcll
sbb
int
mov
xor
movsb
ret
fs
imul
cmp
mov
mov
loope
mov
jg
or
loop
inc
cli
mov
jns
mov
cmp
xchg
dec
jge
pop
out
add
mov
jmp
insl
and
inc
das
je
subb
mov
outsb
mov
rcr
mov
rep
adc
in
sub
mov
fwait
mov
fs
imul
mov
loope
pop
fnstsw
inc
jge
loop
cmpsl
xorb
push
test
and
add
stos
pop
mov
sub
clc
std
mov
nop
mov
mov
jmp
rolb
jns
mov
xchg
test
lea
mov
aas
jae
cli
fsub
fstpt
fistl
aaa
shll
sub
xor
inc
stos
icebp
and
cmpl
mov
insb
test
cmp
mov
outsb
fmuls
pop
ret
pushf
insb
stc
das
repz
mov
call
cmpsl
ret
mov
pop
sub
push
in
mov
inc
dec
sbbl
aam
or
neg
xor
aaa
clc
fsubr
xchg
inc
enter
cmpl
in
cltd
and
mov
dec
fwait
sahf
mov
pop
jge
push
pusha
test
jb
ret
pop
sarb
outsb
inc
call
add
sub
add
lods
icebp
shrb
movsb
push
bound
xchg
movsb
orl
popa
in
pop
pusha
fmull
and
repnz
add
mov
sbb
add
inc
enter
and
sub
xor
push
movsb
cmp
stc
and
jb
jae
or
ror
imul
xor
aaa
sbb
rcrb
dec
movb
das
jno
rclb
sbb
iret
movsl
ja
inc
xor
push
pushf
push
aaa
es
push
cmp
mov
mov
adc
out
into
test
mov
or
insb
fstpl
pop
inc
ja
or
clc
repnz
repnz
dec
adcb
js
inc
pop
cmp
std
jne
bound
sub
cld
test
xor
mov
xor
mov
xor
loope
jnp
inc
inc
out
stos
inc
es
lock
std
out
xchg
push
inc
mov
dec
cs
dec
sub
lea
cmpsb
sub
imul
lea
std
jl
cmpb
cmp
pop
orl
addr16
lds
xor
cli
mov
xchg
xchg
sub
jo
or
scas
es
inc
js
jmp
cli
out
sbb
dec
mov
mov
pusha
or
ds
jno
sub
xchg
test
mul
enter
fwait
dec
arpl
jg
inc
mov
push
mov
rorw
pop
fcoml
cmp
adc
cmp
xchg
pmullw
pop
jg
xor
inc
push
into
mov
sbb
sbb
fistpll
orl
lcall
test
push
pop
pop
cmp
and
mov
cmp
push
mov
inc
fwait
jge
addr16
push
jno
sbb
lods
ret
gs
fs
out
movsb
cmp
push
leave
push
int3
mov
std
inc
xor
lods
xchg
scas
sub
daa
gs
bound
mov
pop
loopne
imull
add
mov
mov
and
inc
shlb
and
mov
insb
enter
loop
shl
jmp
push
mov
les
xor
jne
xchg
add
fstps
icebp
pop
std
addr16
aas
cmc
xor
in
imul
aad
std
lcall
mov
jecxz
sbb
test
cmp
sahf
and
je
push
push
sub
sbb
rcrl
add
push
lret
adc
cmp
sub
fistpll
cwtl
test
sub
nop
lods
lahf
repnz
push
imul
mov
adc
sbb
sbb
mov
adc
shlb
push
movsb
mov
xchg
mov
call
mov
sub
sahf
out
fcomps
ljmp
lcall
adc
stc
mov
dec
mov
dec
mov
push
outsb
xchg
sub
push
ds
jle
xor
orl
sbb
jmp
call
in
jl
pop
sbb
sub
cld
cmp
cmpsl
loope
aad
and
inc
inc
cmpsb
and
push
fldenv
dec
pop
fs
lods
jbe
mull
jne
fmull
iret
mov
aaa
add
idivl
sbb
or
ja
dec
mov
pop
inc
in
push
jno
pushaw
mov
fsub
and
xchg
sbbl
dec
xchg
leave
xlat
mov
stos
cmp
hlt
and
add
shrb
cmpsl
lret
inc
xor
xchg
pop
arpl
cmp
xchg
dec
repz
push
adc
xchg
or
lcall
pop
mov
sti
pop
lods
and
lahf
fcmove
lods
inc
ret
popf
mov
fwait
jbe
mov
inc
push
jmp
adc
shlb
pop
push
sbb
inc
jge
je
arpl
lret
xchg
or
pop
push
xor
nop
xor
ficoml
or
sbb
cmp
cmp
rclb
mov
lcall
mov
shlb
orl
stos
cmp
fiadds
xlat
pop
and
adc
ret
adc
cmp
dec
add
jle
and
repz
xchg
cmp
sti
outsb
and
push
fldt
mov
repnz
jo
or
lock
lea
or
xchg
mov
mov
ja
push
push
insb
cmpsb
imul
cmp
add
out
jmp
es
xchg
push
dec
sbb
test
xchg
xor
in
jb
xor
test
sbb
xchg
daa
push
jecxz
cli
je
xor
fcomi
push
sub
adc
test
lock
shlb
imul
js
loopne,pt
inc
je
push
push
inc
fidivrs
pop
in
jae
cmpsb
mov
movsl
xchg
mov
xchg
or
xlat
xchg
and
lods
idivb
inc
dec
dec
cmpsl
mov
in
fsts
sub
cmpsl
cmpsb
dec
ret
add
stc
sti
outsl
lret
xchg
repnz
sahf
les
mov
sbb
xchg
push
cs
aam
pop
mov
lahf
add
cmp
je
out
aas
ja
ja
or
hlt
push
adc
arpl
mov
xor
out
addl
mov
inc
pushf
test
ftst
in
inc
mov
inc
je
push
call
mov
mov
add
fldenv
out
leave
jl
lret
orl
dec
xchg
int
sbb
ds
push
cmp
sbb
pop
pop
xor
insb
loopne
mov
aad
ja
pop
ljmp
and
xor
imul
aas
pushf
ret
add
stc
daa
dec
mov
mov
bound
fdiv
pop
xchg
push
cli
out
xorl
xor
mov
or
pop
add
lock
push
mov
xchg
pop
xchg
das
fcmovnu
cmc
mov
xor
add
cs
pop
mov
mov
mov
aam
xchg
cltd
inc
mov
sbb
mov
cwtl
xchg
jno
adc
mov
test
sahf
ss
fbstp
xchg
mov
mov
sbbl
cwtl
sbb
push
jbe
mov
test
xchg
cltd
dec
pop
mov
out
in
or
fwait
movsb
mov
pop
into
mov
cmp
insb
jb
cltd
out
push
inc
repz
xchg
mov
cs
cwtl
mov
mov
and
dec
jbe
mov
lods
vprotb
mov
sbb
popf
rclb
push
jmp
push
cmp
sbbb
pop
notl
out
fs
icebp
sarb
jns
add
fwait
sti
lods
mov
mov
gs
adc
mov
mov
xchg
lcall
mov
mov
mov
cmp
into
movups
push
cld
cmp
fwait
stos
das
stc
aam
decl
xor
lcall
hlt
xchg
ja
hlt
mov
inc
mov
stos
jne
loop
aaa
pop
je
iret
push
loop
jg
fcoms
xchg
and
int3
incl
je
int3
movsl
mov
leave
push
push
push
imul
repnz
dec
mov
lock
push
xchg
dec
dec
mov
ret
cmpsb
xor
xlat
cmp
shll
jg
dec
and
stos
not
test
dec
push
xor
fs
sub
rcrb
aaa
jae
jle
es
xor
rdpmc
lret
test
rcl
adc
ja
rolb
std
jle
jb
mov
jp
ljmp
lods
prefetch
or
or
sahf
test
dec
stos
sub
in
int
popa
and
repz
mov
jmp
int
cmc
push
sbb
in
adc
cmp
dec
sub
jecxz
or
cmp
sbb
pop
push
test
out
mov
cltd
ret
and
movsb
sbb
pslld
pusha
adc
push
mov
sbb
add
sarb
rcr
sarb
dec
cmp
pop
scas
fisubl
xor
sub
in
inc
jno
js
daa
ljmp
pop
mov
scas
adcl
dec
cli
repnz
out
push
xor
int
fdivl
and
and
xchg
aas
sub
add
fcomi
fbstp
out
lret
scas
xchg
push
test
push
pushf
aaa
movsl
xchg
dec
aad
xchg
xchg
hlt
or
popf
mov
pop
divl
push
inc
pop
cld
das
addr16
rcl
je
in
and
fcompl
push
das
jge
fisubs
lret
dec
and
xchg
xchg
pop
and
ret
stos
push
pop
add
sub
dec
xor
mov
and
mov
in
mov
and
data16
ljmp
pop
cmp
sbb
jne
pop
lcall
xchg
and
inc
icebp
xor
sub
mov
pop
push
movsl
mov
enter
add
pop
jb
jg
push
inc
stos
xchg
mov
adc
sarl
mov
xor
jp
xchg
mov
sbb
jbe
rorl
adc
lods
out
loope
adc
outsb
lret
sbb
loope
insb
pop
push
rcrb
idivb
xchg
cmpsb
in
stos
dec
add
out
push
and
dec
pop
xchg
lock
repz
data16
pop
mov
mov
subb
shr
sub
inc
mov
inc
adc
imul
scas
adc
mov
es
inc
xchg
mov
dec
lods
mov
mov
andl
loop
add
jb
cmp
std
mov
add
push
and
sbb
fs
into
arpl
lcall
inc
aam
enter
push
push
fisttpll
fnstcw
in
aaa
je
shll
out
pop
popa
scas
into
mull
pop
adc
xlat
mov
bound
lods
movsl
push
xchg
test
mov
insb
lret
fsubrp
cwtl
push
mov
pushf
fneni(8087
orl
cmpsb
aam
addb
inc
lods
out
push
ret
or
inc
cmpsl
out
pusha
test
sahf
outsl
fistpl
testl
out
mov
in
es
loop
mov
in
mov
add
fcmovbe
roll
cmp
push
popf
and
mov
mov
xlat
outsl
stc
adc
jns
imul
and
mov
es
xor
or
out
sahf
out
in
push
xor
cmpsl
aad
call
mov
add
ret
and
lea
rcll
inc
pusha
sub
adc
push
lods
aad
lret
inc
out
loop
stc
mov
inc
jnp
in
push
push
addr16
mov
cmpsb
push
cmpsl
movsb
orl
negl
fisttpl
icebp
dec
pusha
popa
cwtl
js
pop
lds
cmp
jae
lock
ss
or
sbb
fisttps
js
xchg
out
xor
int3
adc
lahf
int3
out
or
and
popa
mov
xchg
add
imul
fimuls
loopne
and
lret
arpl
test
insl
fwait
cmp
iret
push
pop
xchg
sbb
adc
dec
fisubs
fcomp
hlt
das
lods
jp
call
sub
mov
scas
mov
mov
outsl
jp
mov
xchg
insb
daa
xchg
cli
mov
inc
imul
mov
and
mov
mov
mov
inc
test
dec
adc
push
mov
add
cmpsb
scas
mov
lods
pop
xor
cmpsl
rcrb
mov
out
mov
mov
jns
dec
xor
or
jno
cs
sub
int
call
cld
adc
mov
in
pop
pavgb
or
inc
js
mov
insb
lods
sub
lahf
cli
xchg
push
aad
push
jno
mov
cmp
xor
dec
xchg
loopne
sti
das
pop
jge
cmp
mov
or
xchg
data16
daa
rorl
xchg
test
lret
in
imul
cs
jns
lods
jb
mov
dec
scas
jo
pop
fnstsw
es
and
fdivrs
bound
mov
cmp
rol
cmpsl
repnz
inc
lods
jae
add
sbb
int3
arpl
dec
sbb
mov
bswap
xor
and
cmp
pushf
mov
ljmp
adc
jae
icebp
icebp
mov
rorl
sahf
mov
cli
mov
push
mov
xchg
test
loop
or
mov
xor
dec
enter
dec
xchg
mov
data16
sbb
mov
imul
ret
dec
add
sti
mov
cmpsl
and
xchg
pushf
jecxz
mov
xchg
out
popf
xor
jmp
jle
fsubp
inc
mov
test
cmp
daa
ja
scas
jo
ret
sub
aaa
dec
punpckhbw
loope
clc
push
xchg
data16
inc
xor
xchg
lahf
sbb
js
adc
push
imul
cmpsb
or
fs
mov
push
repnz
aad
mov
pushf
jge
pop
push
cmp
fs
movsb
fsts
movsb
xor
in
inc
mov
cmp
dec
jae
xchg
xchg
mov
mov
pop
inc
xchg
fildl
hlt
out
and
xchg
icebp
pop
cltd
add
xor
push
fisttpl
mov
fnstenv
inc
jne
xchg
aad
cmp
in
sub
fwait
ss
push
adc
add
cmpl
mov
popf
or
cwtl
lods
or
sub
out
add
lret
inc
mov
cmpsl
leave
test
xchg
scas
xlat
inc
mov
loop
fisttpll
inc
inc
sbb
dec
mov
inc
fdivs
cmc
mov
imull
je
xor
rclb
mov
cmc
pop
jne
int3
mov
mov
pop
ja
aaa
aam
sahf
int3
xor
rclb
dec
ljmp
pop
or
stos
xchg
push
ss
test
out
xor
sar
in
push
and
int
push
rcrl
test
add
rclb
mov
mov
aaa
xchg
xchg
inc
mov
adc
inc
out
sub
es
fwait
das
lcall
nop
in
stos
or
push
mov
mov
or
pop
es
nop
or
outsb
test
jle
sub
scas
std
mov
lret
mov
and
cmp
fistpll
dec
inc
pop
popf
push
stos
out
dec
aas
pop
push
shr
dec
div
lahf
sbb
xchg
insl
pusha
clc
xor
into
sub
mov
jne
pop
rolb
inc
fstl
or
in
adc
cmpl
pushf
test
xor
xor
mov
insl
push
adc
xchg
xchg
cli
outsb
lods
popf
adc
out
push
loope
sbb
cmpsl
add
loope
pusha
inc
or
sbb
push
movsl
inc
insb
sub
dec
adc
shlb
call
dec
mov
sub
and
mov
outsl
mov
in
pop
add
movsb
movsb
cs
sub
dec
inc
dec
cmpsl
enter
lret
in
fisttpll
sub
mov
mov
push
ret
mov
jge
bound
ret
fimuls
cmp
inc
inc
pop
mov
mov
inc
fwait
sbb
dec
add
out
js
push
fdivrl
cs
icebp
cmp
popa
out
xchg
mov
or
push
jecxz
and
lods
test
insb
push
and
mov
pop
dec
jns
jg
mov
call
leave
push
pop
das
inc
push
inc
ffreep
iret
push
sbbb
adc
int
adc
xor
aaa
lahf
fistpl
xchg
out
and
and
xlat
je
pop
xor
fwait
mov
andl
sub
bound
inc
push
jnp
inc
ss
or
aaa
xchg
jns
insl
pop
mov
mov
fs
and
and
jmp
dec
mov
fistpll
inc
and
adc
bound
pusha
shrb
sbb
dec
dec
jge
icebp
sbb
mov
xchg
cmpsl
in
mov
jl
shlb
loop
in
pop
hlt
jno
out
pushf
insl
incl
stc
inc
ficoml
lds
mov
add
iret
sbb
fimull
scas
mov
push
push
mov
imul
lcall
ret
add
or
out
add
in
jae
fwait
xorb
fisttpl
xchg
pop
nop
lea
dec
subb
xchg
shll
mov
xor
aaa
push
mov
ret
pusha
pop
push
jnp
dec
add
lcall
pop
ds
jg
lea
pusha
xchg
mov
push
add
xchg
push
add
mov
in
cmp
fs
pop
jae
jbe
insb
dec
and
jmp
test
arpl
imul
pop
loopne
sti
pop
lds
out
shlb
aam
jne
stc
sub
and
pop
pop
sub
lods
test
notl
cmp
std
mov
iret
cltd
pop
mov
in
xchg
jns
mov
dec
mov
add
and
sub
cwtl
push
xchg
incb
adcl
in
test
or
and
pop
popf
jns
outsl
mov
pop
les
sahf
dec
add
jno
pop
xorl
xchg
mov
shrb
ds
mov
aaa
cmp
aas
mov
inc
xchg
jns
les
in
and
dec
in
xchg
fnstenv
or
jge
icebp
mov
insl
nop
test
sahf
xchg
in
sub
cmp
out
push
std
shl
adc
ja
dec
subb
inc
lods
fistpll
inc
imul
js
arpl
pop
lea
sub
imul
int
inc
imul
dec
mov
inc
std
bnd
out
sub
mov
cltd
inc
adc
sbb
mov
iret
mov
stos
jmp
mov
enter
xor
bound
clc
pushf
das
sub
cli
push
push
lock
loopne
jbe
pop
mov
add
ljmp
imul
lret
or
push
idivb
scas
and
mov
inc
mov
cmp
inc
stos
pop
sub
lcall
inc
in
cmp
fcoml
mov
push
dec
add
jmp
jmp
jle
imul
mov
jl
mov
sar
imul
imul
mov
push
ds
les
pop
push
jg
inc
pop
je
flds
bound
in
sub
push
xchg
mov
repz
repz
fldenv
cmp
cmp
fisttpll
mov
push
or
cmpsb
or
add
push
sub
mov
scas
mov
xchg
inc
jne
adc
std
sub
shl
ss
ss
lea
add
outsl
ror
outsl
mov
pop
add
jmp
fiadds
pusha
lret
mov
adc
jae
mov
or
mov
jns
sbb
nop
mov
rcrl
mov
xchg
pusha
movsb
fs
mov
scas
cmp
icebp
fucomip
push
sub
cmp
xchg
mov
js
hlt
in
jo
repz
mov
mov
lcall
cs
push
mov
jne
dec
popa
mov
aad
out
jnp
cmp
dec
ljmp
inc
out
sti
push
xchg
and
popf
jae
pushf
mov
mov
pushl
out
dec
jnp
filds
add
xchg
ret
repz
pop
jmp
and
pop
or
aad
incb
into
nop
das
add
les
jo
in
adc
mov
aas
insb
mov
imul
std
xor
loopne
jge
and
rclb
sub
jb
sub
mov
in
lahf
test
mov
stos
add
test
popa
cli
insb
pop
xchg
cmp
pop
xor
push
mov
jb
sbb
nop
movsb
bound
mov
mov
mov
cmc
rol
pusha
mov
loop
push
pop
xchg
pushf
inc
insl
sbb
dec
mov
pop
ss
test
sub
leave
aad
mov
add
xor
push
push
push
stos
xchg
push
iret
jp
adc
inc
lcall
mov
xor
jns
push
xchg
push
ret
es
rolb
ror
jecxz
pop
shrl
stos
aaa
push
and
mov
mov
hlt
mov
in
xor
xchg
arpl
pop
pop
sub
dec
ss
das
cmc
test
pop
sarb
pop
add
insb
out
jl
add
mov
push
inc
ficoml
ljmp
out
enter
loopne
add
xor
div
int
mov
cmp
hlt
cmpl
std
jg
push
jns
and
mov
roll
aam
dec
stos
xor
cld
sub
mov
mov
hlt
xchg
lods
push
add
cmpsb
sub
or
inc
cld
jmp
outsl
or
inc
push
mov
cli
fldl2t
sub
sbb
mov
cmp
mov
push
sahf
add
jmp
xor
test
loop
sub
lods
mov
cli
xor
daa
adc
dec
lcall
lcall
fisubl
jge
aas
icebp
jne
sbb
sbb
sub
sub
jecxz
repnz
cmp
xor
push
pop
push
lcall
dec
rcrb
pusha
mov
icebp
enter
aas
inc
jae
mov
inc
loope
jnp
inc
nop
aaa
mov
enter
xchg
lret
xchg
mov
test
or
mov
test
call
aas
mov
add
inc
xchg
lahf
xor
xor
jno
inc
or
arpl
inc
inc
std
pop
fnstenv
movsb
int
mov
int
xor
push
mov
dec
je
leavew
outsl
movsl
xchg
xchg
cmp
dec
outsb
xor
scas
mov
adc
add
sbb
test
out
lahf
js
in
push
jge
hlt
out
mov
sub
nop
lods
pop
sbb
xor
cmp
and
int
sbb
jnp
test
mov
into
sti
fisttpll
movsb
ss
pop
dec
pop
fadd
cwtl
aas
fcomip
hlt
pop
add
outsl
and
arpl
jo
mov
jge
mov
flds
outsl
push
adc
push
jp
outsl
mov
pop
jg
ret
jbe
add
mov
cmp
mov
iret
pop
repnz
test
add
mov
push
adc
push
inc
or
stos
repz
scas
int3
lret
cmp
inc
and
iret
cmpsl
xor
out
leave
repnz
jl
jns
stos
mov
into
cmc
mov
sub
rcrl
mov
adc
into
inc
fs
pop
insb
dec
xchg
cmpsl
scas
les
repz
pop
pushf
push
add
cmpsb
or
push
jne
mov
add
call
sbb
dec
mov
rolb
push
or
fsubrl
fistps
shlb
jbe
or
js
inc
repz
movl
lods
lea
mov
sub
sub
repnz
dec
cmp
adc
daa
inc
xorl
or
mov
mov
cmovae
dec
sbb
jne
ljmp
fmull
loopne
cli
rolb
xchg
popf
pop
xor
leave
dec
inc
fwait
sub
aad
shll
shll
mov
bound
stos
jno
and
loope
or
pop
or
inc
mov
adc
mov
ljmp
xchg
repz
dec
jno
or
ds
dec
faddp
ret
sbb
and
dec
mov
mov
add
loop
push
in
bound
das
add
aas
push
push
push
dec
mov
pop
sbb
mov
sbbl
jl
mov
repz
push
aam
push
jg
in
cs
xchg
rclb
or
pop
push
xor
add
mov
lods
lcall
fimull
dec
test
mov
in
jg
and
add
inc
ficoms
inc
into
pop
lods
sbb
add
jmp
test
ss
shll
into
imul
mov
out
add
in
adc
mov
outsl
cmp
popf
pop
movl
pop
pop
ja
movsl
add
aam
aaa
faddl
mov
push
lock
outsb
sbbl
outsb
pusha
pushf
movsb
mov
sbb
mov
aam
sub
incb
dec
testl
rcll
sahf
cmp
stc
inc
jp
and
in
sub
mov
test
mov
jecxz
shll
sti
inc
clc
inc
cmp
dec
cmp
mov
jb
xor
sahf
clc
cmpb
and
adc
pop
int3
xchg
les
int3
fildll
subl
popf
je
bound
out
scas
dec
lea
cmpb
int
pop
pop
xchg
xlat
xor
out
and
mov
sub
insl
data16
repnz
pop
mov
push
inc
dec
jno
mov
add
or
inc
push
push
flds
lods
sub
mov
out
mov
inc
aas
lods
in
out
xor
dec
inc
sub
scas
fcmovnu
cld
scas
in
ds
leave
jmp
loop
pop
mov
pusha
ret
xlat
test
test
lret
push
pop
out
mov
std
iret
or
inc
sahf
pop
mov
adc
dec
xchg
cld
mov
mov
shrl
repnz
lahf
adc
mov
dec
jns
enter
push
xchg
test
bound
js
jg
sbb
loopne
pusha
jb
jo
pop
int3
mov
xchg
xor
mov
shlb
jno
dec
pop
push
mov
jo
xchg
sti
mov
outsb
push
call
std
sbb
sar
xchg
lds
mov
sbb
push
je
jp
mov
cs
xchg
push
mov
lahf
xchg
and
xchg
adc
adc
arpl
push
pusha
and
or
pop
and
mov
jns
popf
xchg
dec
addr16
jbe
xchg
clc
xchg
sub
sbb
jae
add
add
pop
call
hlt
mov
fs
cmpsl
lds
jmp
sahf
add
pop
sbb
jge
cs
mov
or
xor
add
add
dec
in
xchg
jno
pop
lret
adc
mov
xchg
cmpsb
jo
aas
dec
jo
shl
test
mov
insb
mov
fiadds
and
push
mov
push
dec
dec
adc
jmp
dec
push
sub
lods
dec
xchg
xor
pop
addr16
ss
pop
mov
adc
les
fdivrl
or
or
inc
cs
lret
mov
fld
add
cmp
stc
and
dec
adc
jae
sahf
inc
shrl
bound
dec
push
lret
gs
jl
repnz
repz
cmp
cmp
leave
insl
lret
jl
mov
cmc
cs
inc
mov
aas
and
ds
inc
stc
aad
je
pusha
mov
adc
fs
lock
push
loop
ret
imul
ja
rcrb
lds
xchg
pop
xor
in
in
nop
add
sbb
xchg
insl
movb
xor
cmp
scas
ljmp
jno
push
inc
iret
cmp
stos
push
nop
mov
ja
cs
loope
nop
iret
mov
add
mov
jp
inc
cmpsl
lahf
pop
insl
jge
es
sbb
std
aam
adc
stc
xchg
out
sahf
test
neg
aas
inc
add
jbe
push
fisttpll
mov
mov
mov
and
inc
push
jge
mov
sbb
mov
leave
xchg
dec
inc
out
push
loop
mov
sbb
inc
adc
push
fildll
lahf
jns
dec
mov
xchg
fstl
out
add
loop
out
push
test
cli
daa
add
push
dec
dec
push
mov
daa
movl
push
das
push
and
push
and
das
int
mov
lret
push
data16
and
test
dec
inc
in
movsl
stos
xchg
es
enter
aaa
adc
xor
xchg
mov
jmp
loopne
sub
pop
aas
jl
imul
xor
push
in
addb
lods
push
xor
sbb
push
jne
add
out
fcmovbe
xchg
pop
push
shrb
and
cs
faddl
sbb
in
out
xor
add
inc
sub
jnp
ja
sbb
scas
rep
lods
out
or
sbb
cli
sbb
cmp
mov
mull
mov
push
sbb
add
and
ret
jmp
and
sub
in
sbb
aad
cmp
and
mov
sbb
mov
sbb
imul
push
bnd
call
xchg
mov
xor
jb
push
cmc
in
xor
inc
test
xlat
insb
jno
push
adc
add
lock
or
popf
stos
shrl
inc
stos
fs
pop
jne
js
in
pushf
adc
out
push
mov
inc
xchg
mov
fldcw
int3
mov
repnz
lods
jae
call
pusha
dec
or
test
sarl
jl
insl
jne
sbb
ret
xor
popf
jmp
mov
add
add
js
in
cmp
test
jo
into
fwait
push
add
xor
jl
mov
cli
popf
cmp
or
aad
int3
jae
jno
or
iret
jne
cltd
and
mov
stos
scas
adc
pop
sahf
lock
mov
lcall
enter
testb
sbb
inc
pop
rcrb
pop
insl
or
xchg
jae
mov
sub
xor
jae
sub
cmp
or
test
mov
fldl
pusha
cmp
cmp
add
das
sub
push
jae
jns
ret
or
gs
cmp
pop
mov
test
xor
push
jl
jns
dec
pop
pusha
fildll
andb
bound
mov
lods
stc
jb,pt
push
ss
mov
or
sub
push
in
leave
xor
nop
xor
xchg
push
inc
scas
dec
dec
mov
push
ret
xchg
and
je
into
xchg
and
movsl
in
out
sbb
fucomp
stc
sub
stc
mov
loop
aad
inc
in
pop
lret
jp
xor
ficomps
xchg
ss
or
fcmovne
or
cmc
repnz
mov
adc
into
and
sbb
jle
mov
mov
mov
jbe
lods
pusha
cwtl
jno,pt
and
ljmp
or
leave
dec
xor
mov
sub
fisttpl
addr16
xor
lock
movsb
movsl
nop
fisubrs
jno
sub
incl
or
pop
lret
xchg
and
data16
repnz
dec
inc
jae
jmp
push
in
or
and
icebp
popa
pavgw
mov
pop
push
mov
mov
mov
in
movsb
jg
testb
jns
sti
int
xchg
inc
ret
or
xchg
inc
daa
loope
movsl
mov
pop
je
pushf
jbe
xchg
fmulp
fnstenv
daa
imul
idivl
mov
push
cli
pop
adc
xlat
in
dec
xor
rcrl
xchg
sbb
pop
and
lds
fidivs
aad
and
push
int3
subb
js
scas
sub
movsl
push
lahf
fisubrl
mov
mov
cmp
xor
int3
inc
jb
jne
jp
or
sub
scas
les
mov
call
les
mov
jle
divb
add
mov
lret
rcrl
jb
scas
out
insb
pop
and
js
jnp
mov
bound
lods
or
add
sbb
sbb
cltd
lock
xchg
adc
mov
sarl
cmp
scas
push
push
adc
out
mov
inc
test
sarb
scas
dec
pop
loop
jp
inc
cwtl
sbb
addb
pushf
add
daa
sbb
js
out
cli
cmpsl
mov
cmp
imul
mov
mov
sbb
sub
cmp
dec
cltd
mov
mov
fdivl
lods
sbb
in
jnp
inc
or
mov
push
rdpmc
add
outsl
into
xchg
ret
mov
sub
clc
leave
test
jmp
lcall
sbb
insb
sub
lds
dec
loopne
xchg
std
push
hlt
mov
or
test
inc
mov
xchg
in
pusha
popf
push
push
popa
xor
xchg
movsl
cli
mov
aas
sub
lods
xlat
push
popa
mov
dec
iret
lods
in
sbb
decl
addr16
mov
mov
push
lock
popf
daa
adc
pop
mov
push
enter
adc
rcl
popa
sbb
inc
inc
jmp
adc
fmulp
sbb
imulb
fmuls
imul
push
fmull
fwait
lods
imul
inc
hlt
test
push
xor
lcall
sbb
cmp
push
les
das
test
sub
sub
out
mov
into
ds
mov
pop
out
add
sub
and
cmp
out
add
cmp
movsl
and
hlt
in
xor
mov
jmp
and
into
pusha
repz
scas
xlat
repnz
ficoms
dec
jl
or
mov
fdivrp
push
aam
sbb
jae
fwait
mov
pop
push
test
or
mov
xchg
push
mov
pop
pop
jnp
mov
test
or
and
in
cmp
decb
mov
lock
sbb
xchg
das
xchg
sbb
ss
push
add
mov
xor
push
leave
mov
rcll
xchg
or
addr16
or
mov
imul
sbb
cmpsl
testb
inc
in
pop
repnz
loopne
mov
jmp
xor
sub
xchg
inc
cmp
sbb
hlt
and
cmp
dec
push
in
add
jnp
push
push
les
or
pop
jg
or
int3
sbb
hlt
imul
loop
xchg
lds
mov
adcl
jns
insb
fsubr
sbb
jp
mov
cmp
mov
cmpb
push
dec
pop
push
enter
data16
jae
ds
dec
push
int3
mov
js
add
mov
ret
cmp
cs
repz
loopne
push
enter
adc
stos
je
mov
cmpsb
jecxz
jno
mov
mov
lret
lods
cld
repz
adc
xchg
mov
cmp
mov
cwtl
shlb
rorl
stos
xor
popf
adc
pop
int
xchg
data16
ds
jne
lods
rolb
fstps
jg
movsb
popa
ret
jle
test
mov
mov
pusha
jle
mov
fiadds
fmul
or
inc
jl
sbb
jo
pusha
lret
xchg
xchg
xchg
jne
loop
mov
imul
sub
dec
sbb
les
dec
cmovno
fwait
pop
push
bound
xor
fidivrl
xchg
lret
or
push
push
pop
inc
jp
inc
les
in
bound
pop
dec
dec
and
add
xor
push
mov
mov
dec
mov
and
pop
xchg
inc
push
jl
cld
push
push
imul
xchg
lods
bound
movd
out
fs
ds
repnz
sub
mov
add
into
in
xchg
jae
lods
inc
cmpsl
mov
push
sbb
or
push
aad
mov
xlat
outsb
je
ja
aam
dec
adc
inc
adc
push
aam
sbb
int3
xor
rorl
pop
dec
xchg
dec
lea
popa
sub
push
arpl
sbb
xor
pusha
or
cmc
lds
aaa
out
out
push
mov
mov
mov
movsb
mov
out
adc
aam
imul
xchg
rcr
mov
add
cli
mov
lea
stos
fs
mov
js
mov
mov
xlat
je
sub
add
dec
dec
cwtl
mov
mov
lcall
xchg
das
int
pop
in
mov
shrl
push
dec
xchg
fwait
jnp
cmpsl
call
dec
xor
je
sub
pop
cld
pop
repz
adc
test
insl
push
add
lcall
mov
jp
aam
mov
inc
clc
testl
push
aaa
enter
dec
int3
cltd
mov
push
lods
jg
ja
pop
xchg
dec
adc
cmp
stos
iret
sbbl
push
inc
fwait
sti
mov
cs
dec
jecxz
js
aad
ja
push
push
xor
push
stos
ret
cmp
and
sub
mov
mov
pusha
jmp
mov
xchg
lea
and
xchg
out
cmpsl
mov
outsb
pop
jb
insl
jg
jle
mov
inc
mov
mov
das
sbb
mov
and
mulb
pop
and
subb
xchg
popa
rorl
andb
ret
pop
jecxz
bound
rorl
xor
dec
cs
vpsllw
xchg
fldcw
insb
xchg
sbb
rcll
cli
mov
mov
mov
push
sub
sti
pop
out
mov
inc
cmp
lods
mov
add
in
cmp
jne
pop
aaa
mov
shll
repnz
call
push
sub
lret
jb
imul
mov
cli
xchg
je
leave
adc
xor
push
mov
bound
push
sub
dec
mov
int
push
sarl
mov
loope
out
dec
dec
or
xchg
jl
sub
inc
mov
addr16
or
pop
lcall
jmp
xor
rcrl
orl
mov
dec
pop
sbb
sahf
and
xor
lcall
xchg
mov
cmovnp
loopne
arpl
xor
das
stos
fnsave
cmpsl
xchg
cmp
xor
sbb
iret
pop
in
xchg
sarb
adc
xor
push
add
cmp
jp
dec
lcall
roll
stos
xorl
rclb
add
inc
jg
lock
shll
ds
daa
pushf
xlat
push
jge
mov
jae
out
pop
bound
sti
dec
les
pop
and
push
jl
mov
pop
hlt
repnz
push
push
inc
fs
lahf
daa
push
pop
cld
push
xchg
or
and
jp
dec
les
adc
icebp
jo
jns
xchg
push
mov
jmp
cld
mov
inc
int
and
imul
imul
push
dec
adc
lcall
mov
sbb
lcall
and
dec
and
gs
int3
cld
and
adc
xchg
cld
inc
outsb
pop
fcompl
lcall
cli
mov
lods
cwtl
testl
mov
xchg
jmp
sbbl
insb
lcall
xchg
imulb
inc
cmp
mov
cwtl
out
ret
xor
in
enter
jp
dec
adc
mov
pushf
incb
arpl
push
jg
push
ja
mov
sbb
stos
cmp
push
ret
jno
mov
ficompl
mov
mov
inc
negl
jmp
dec
out
jp
push
lods
push
push
mov
loop
pop
cmpsl
or
xor
fwait
push
add
xchg
push
shll
repnz
repz
jle
stos
sbb
std
jl
lods
ss
fildll
rclb
movsl
or
jg
jbe
inc
cmp
fistpll
loope
xchg
lea
in
and
sub
jo
inc
fiadds
or
ja,pn
mov
xchg
or
in
jmp
or
addb
aad
mov
push
insl
hlt
sub
in
mov
mov
inc
cs
sub
arpl
pop
mov
fs
mov
sub
push
popf
lods
mov
dec
or
lret
push
fdivrs
and
leave
mov
outsb
popf
push
or
out
cmc
pop
addb
out
mov
inc
ret
shlb
in
aad
sahf
or
mov
cs
addr16
mov
out
in
imul
push
out
inc
nop
sub
mov
xchg
push
insb
popf
insl
push
das
dec
popa
xchg
rorl
dec
push
stos
add
lods
dec
sti
xor
mov
xchg
dec
sub
cmp
pushf
push
and
sbb
sub
mov
sbb
and
mov
je
test
stos
insb
ljmp
pop
fcomps
lock
add
and
dec
jnp
loop
mov
movsb
lret
dec
shlb
pop
jne
loopne
mov
dec
mov
pop
cmpl
fsubr
aam
lret
in
inc
fmul
push
xchg
lods
aad
mov
ja
inc
div
aad
fdivs
lret
xchg
cmp
sti
push
xor
cwtl
fwait
push
jmp
ror
mov
push
cmp
ror
inc
imul
sahf
je
mulb
sbb
xor
lock
aam
jns
mov
loopne
shr
lods
and
les
adc
in
lods
mov
cwtl
shll
xchg
mov
xchg
cltd
cmc
add
out
imul
push
xchg
sahf
loop,pn
mov
and
pop
dec
adc
add
mov
sar
sti
add
nop
imul
cwtl
inc
sub
arpl
loope
insl
lret
movsb
jp
and
cmp
shlb
aad
std
fnstenv
add
dec
popl
stc
lret
je
out
and
jle
jne
xchg
pop
xchg
push
int
push
mov
loope
loope
daa
push
ja
push
test
mov
and
imul
jl
fstl
adc
nop
jge
loope
mov
adc
pusha
add
xor
int3
popa
cli
dec
cli
cld
add
rclb
loope
lcall
and
movsw
cld
inc
fwait
lret
cld
mov
jmp
adc
push
or
ss
lods
repz
arpl
lods
sub
addr16
push
aam
dec
dec
out
pop
xchg
fmuls
clc
or
test
popf
mov
xchg
repz
push
testl
xlat
adc
or
xor
jmp
adcl
pop
out
pushw
jo
jno
push
adc
mov
jbe
je
or
pop
dec
mov
pop
shll
fadds
movsl
icebp
add
cmc
test
sarb
jp
jge
mov
cmp
sti
clc
fiaddl
jl
in
rorb
cmp
repnz
mov
les
pushf
or
xor
xor
arpl
sub
repnz
cs
cld
pop
sti
mov
scas
dec
pusha
inc
sahf
add
pop
cld
pop
test
scas
test
cs
sti
inc
std
or
scas
mov
xchg
hlt
das
push
add
sbb
xor
rol
icebp
pop
scas
test
dec
cmp
mov
aaa
imul
test
xchg
xchg
mov
sub
jle
pop
loop
adc
les
sbb
jb
jbe
lods
add
jae
cmp
popf
xchg
mov
mov
jne
add
and
fcoml
ret
sbb
inc
int3
rcl
cmpsl
mov
xchg
sarb
adc
daa
inc
fsubp
lret
mov
insb
mov
add
pop
pop
push
add
nop
dec
scas
jle
cmp
mov
or
xchg
cmp
jns
jnp
jp
and
pop
lock
and
sbb
je
jl
inc
iret
mov
or
xor
push
imul
jo
sbb
sar
jno
pop
xchg
pushf
add
in
icebp
rol
vpcmpgtw
pop
push
mov
add
mov
lahf
cmovs
fsub
mov
scas
xchg
mov
jle
xchg
test
js
in
sub
aad
stc
sub
push
dec
lcall
xchg
shlb
adc
sbb
out
ljmp
inc
jle
lods
jmp
scas
popa
rcl
mov
iret
pop
push
nop
dec
mov
mov
int3
inc
jno
stc
pusha
mov
aam
gs
cld
inc
mov
push
inc
clc
jae
sbb
pop
icebp
mov
cmp
stc
out
fcoml
mull
das
imul
scas
test
push
fcmovbe
or
in
aad
ljmp
ss
mov
inc
lods
and
adc
mov
int3
pop
jp
and
es
xchg
sahf
mov
mov
dec
pop
adc
add
fiaddl
add
cmpsb
loopne
mov
lret
bound
sbb
mov
nop
mov
mov
fnsave
daa
lods
js
jo
jbe
mov
inc
insl
mov
pushf
mov
inc
push
jecxz
push
scas
into
scas
loope
iret
adc
in
dec
jbe
lods
into
inc
jecxz
lret
daa
ljmp
pop
jecxz
pop
push
xchg
test
pusha
int3
lock
sub
pop
add
cmp
out
cmc
xchg
push
cli
stos
loope
pop
and
inc
cmc
inc
daa
inc
jp
jle
mov
cmp
lcall
xor
xchg
push
fcmovu
sbb
xlat
adc
nop
push
rcrl
mov
lahf
cmc
shlb
jo
bound
push
cmp
inc
loope
fldl
push
daa
mov
lock
xor
jmp
insl
dec
pop
clc
jmp
xchg
aas
out
cmp
and
jo
adc
scas
sbb
add
push
cmp
fwait
iret
ljmp
push
xor
mov
push
call
ret
mov
xchg
xrelease
jecxz
dec
fnstsw
ss
dec
pop
lock
aam
loop
mov
add
je
pop
and
shl
cmp
and
mov
filds
andl
inc
bound
add
jle
sub
jge
ds
push
rcr
out
int3
and
out
mov
dec
dec
push
sub
nop
cmp
jo
sub
add
pop
das
sarl
into
mov
sbb
in
std
jne
dec
or
or
sbb
pushf
cli
psrlq
jae
sbb
adc
shll
dec
jge
inc
inc
mov
pop
mov
and
adc
nop
rcrl
jecxz
jecxz
pusha
addr16
lahf
sbb
sti
ljmp
rorb
sbb
mov
repz
shl
xor
cmpsb
xchg
lods
sub
mov
je
fldcw
sbb
loopne
dec
xlat
in
xorl
add
jl
inc
xchg
xor
fistpll
push
test
dec
mov
sub
push
and
jb
mov
sub
pop
loope
testb
sub
add
daa
push
stc
popa
movsl
mov
mov
repnz
lea
fistpll
rolb
inc
mov
push
jnp
jne
in
shr
xor
aaa
in
dec
cmpsb
mov
ret
mov
sbb
pop
cmpsb
mov
or
or
xor
scas
pop
out
mov
js
loopne
jge
dec
push
mov
lcall
and
je
mov
add
in
adc
xorl
aas
popf
cmp
aam
push
addr16
sti
lods
out
push
jle
rclb
mov
fstp
sbb
cli
mov
sub
addr16
fbld
xor
mov
mov
fsubr
mov
js
sbb
xchg
rorb
clc
nop
imul
pop
mov
aad
pop
add
cmp
std
lret
pop
xor
jg
mov
aam
ljmp
adc
pusha
sub
test
cli
ret
inc
fs
xor
daa
mov
jle
xorl
sahf
and
popf
dec
bound
fistpl
das
pop
sbb
dec
dec
mov
mov
pop
jmp
js
push
lret
inc
mov
out
adc
xor
nop
cmp
jo
xlat
je
xor
insb
ds
push
and
pop
push
insl
mov
dec
cs
jns
jg
inc
lods
int3
lods
lahf
aas
cmp
gs
xor
mov
dec
test
xor
inc
inc
fimuls
and
cld
es
cmp
dec
insb
mov
daa
outsb
in
sbbl
pop
fmull
or
push
jo
test
xchg
add
sbb
jle
lds
mov
push
and
fcomps
xchg
mov
cmpb
jno
or
fwait
jbe
ss
mov
mov
shrb
fcoms
cmpsl
inc
faddl
in
jg
or
dec
test
nop
fsubrl
inc
xchg
rorb
in
jae
mov
inc
arpl
jnp
fwait
pop
inc
pushf
xchg
out
cld
shlb
pop
sub
sahf
ss
and
insl
in
sar
fsubl
jbe
adc
push
daa
mov
movsb
test
cmp
gs
adcl
das
add
dec
adc
xor
or
inc
pop
out
add
sub
arpl
mov
push
add
cmp
push
repnz
ja
sub
in
sub
cltd
mov
xchg
inc
loope
xchg
mov
xor
jbe
sti
lods
test
jle
mov
inc
cmpsb
insb
mov
adc
adc
stos
push
popa
out
add
xchg
mov
ret
xchg
or
mov
rcl
add
pop
jo
add
xor
sbb
xchg
jl
lahf
subb
mov
cld
jbe
cli
mov
fcmovne
clc
jmp
mov
add
clc
sub
add
add
icebp
cwtl
aaa
sub
xor
fs
mov
mov
pop
sbb
xor
fsubp
adc
mov
shlb
shlb
scas
lret
lea
fwait
scas
lods
ljmp
sbbb
sbb
or
into
in
push
ljmp
pop
jg
clc
dec
movsb
ljmp
mov
mov
mov
pop
dec
call
cwtl
addr16
rorb
addr16
fwait
push
inc
aad
inc
sbb
jg
into
cld
ret
fadds
stos
subl
jle
sbb
or
mov
inc
or
movsb
fidivrs
out
pop
aaa
pop
jne
xchg
mov
in
cli
inc
add
cmp
out
adc
lret
jge
fwait
leave
inc
loop
or
test
out
jp
cmp
popa
sbb
add
add
jle
or
cmc
lock
mov
pusha
xchg
pop
movsl
pop
pushf
and
imul
in
clc
mov
ror
mov
xor
repnz
les
jae
aad
subb
or
push
mov
dec
xor
mov
sbb
adc
add
mov
mov
dec
push
aad
cmp
ljmp
cmp
add
or
fwait
cltd
jnp
hlt
es
sub
dec
fmul
pop
test
pop
rolb
gs
ret
scas
sbbb
mov
divl
mov
cmp
stos
in
ss
mov
sub
test
add
sbb
bt
push
les
xor
push
lods
das
into
sbb
int
lea
and
mov
lret
ds
jnp
outsl
cmp
adc
stos
gs
movsl
push
dec
adc
ja
je
sub
xchg
inc
gs
ljmp
sub
dec
xor
add
mov
jecxz
or
adc
jl
inc
cmp
aam
outsb
popa
pop
aas
ljmp
repz
sti
outsl
repz
aaa
cli
insl
lods
lret
cwtl
xadd
xor
popl
dec
sbb
movsl
out
sbb
sub
scas
int3
lret
jg
imul
sbb
test
lahf
test
jge
adc
in
or
test
mov
fstpt
add
jecxz
out
mov
push
mov
daa
or
mov
adc
push
sub
push
xchg
inc
fwait
lret
fldenv
mov
outsl
pop
shl
cs
repnz
bnd
push
idivb
call
sub
mov
cmpsb
int
lods
xchg
push
dec
fnsave
loope
pop
pop
and
mov
pusha
mov
adc
out
sbb
popf
push
lcall
push
popa
out
adc
gs
fcompl
jmp
gs
xchg
dec
jle
stos
cwtl
sub
lret
sahf
cmpsl
in
das
mov
sub
test
and
lods
xchg
or
popf
stc
mov
push
into
ljmp
lods
repnz
push
mov
push
cmp
cmp
test
xchg
fisttpl
xchg
mov
lcall
rcll
hlt
bound
sub
sbb
mov
scas
push
cmpsl
movsb
in
fadds
mov
outsb
aam
cmp
push
in
push
xchg
or
xchg
negl
lahf
or
add
xchg
fbld
rclb
mov
fmuls
pop
aas
stc
dec
jmp
cltd
stos
adc
sarb
pop
inc
push
js
push
outsl
dec
ret
lds
enter
dec
sbb
into
inc
pop
pushf
loope
mov
add
dec
and
loope
pop
es
mov
sbb
xor
je
push
jo
out
pushf
js
outsb
jno
dec
and
xchg
stc
pop
ja
inc
pusha
int
insl
out
pop
test
outsl
jb
pop
cwtl
or
adc
xchg
call
mov
test
filds
and
jmp
sti
ljmp
movsl
mov
xchg
xchg
cs
sub
push
int3
push
mov
pop
ljmp
add
sbb
cmp
add
out
pop
sub
lds
das
stc
imul
test
sbb
mov
xchg
jmp
mov
xchg
fstps
jmp
movsl
mov
leave
outsl
pop
je
adc
push
add
lods
mov
aaa
dec
stc
pusha
cmp
out
xchg
jge
das
xor
test
scas
ja
inc
add
dec
xchg
cmp
xor
std
js
lcall
sbb
or
push
repnz
ficompl
cmc
pop
out
cmp
sub
xchg
inc
mov
push
xchg
cmp
fld
movsl
mov
inc
sbb
dec
rorb
pop
xor
mov
jle
push
mov
out
lock
arpl
out
push
loopne
popf
lcall
cmp
adc
inc
test
xchg
or
sub
adc
cmp
add
ss
mov
inc
cwtl
sar
jecxz
pop
xor
push
fcomi
lods
and
xchg
add
sub
xchg
mov
rcll
mov
pop
gs
or
push
pop
cmc
std
or
mov
shr
dec
decl
xlat
jne
ds
outsl
push
insb
mov
or
and
insl
call
aaa
jge
pop
adc
stos
mov
pop
lret
jecxz
mov
scas
mov
mov
ljmp
fstpt
jg
sbb
sbbb
jb
pop
cmp
mov
cmp
popf
cld
xor
cwtl
adc
aas
insl
pusha
in
stos
dec
push
cmp
jmp
cld
in
mov
sarb
xor
mov
ror
push
daa
clc
mov
jno
pop
into
into
xor
jg
shl
loopne
cltd
je
mov
mov
scas
ror
cltd
push
sbb
adc
dec
test
lret
jb
cli
push
push
aas
pop
sbb
popa
insb
repnz
ds
ret
shll
lret
mov
inc
jge
push
adc
xchg
mov
test
pushf
jp
mov
xor
es
or
mov
pop
jbe
in
arpl
push
sti
addr16
pop
inc
clc
cli
arpl
mov
cmpsb
xchg
ror
fcmovu
je
frstor
out
push
add
ret
pop
dec
test
sbb
les
test
mov
lret
movsl
ja
dec
loopne
mov
movsb
add
mov
fsubs
jmp
movsb
xchg
pop
mov
in
push
imul
scas
mov
pushl
idivl
ror
popl
jb
imul
sbb
fistpl
cmp
in
faddp
cmp
stos
cmp
outsl
and
sbb
mov
or
lret
stc
into
dec
mov
sub
add
pop
add
and
cmp
divb
jo
fmuls
sub
pop
dec
outsl
xchg
push
outsb
mov
add
push
test
sahf
xor
push
cmp
in
aas
mov
push
and
scas
ret
imul
jle
add
ret
pusha
inc
test
pause
aam
ficompl
lcall
fcompl
sarl
loop
loopne
adc
lret
bound
xor
xor
sbb
inc
inc
mov
sub
dec
push
lods
add
cld
stos
addr16
std
xchg
jne
mov
cmp
xor
bound
dec
daa
inc
ffreep
sar
mov
jae
stc
jle
and
inc
push
in
or
mov
movsb
idivl
jo
pop
push
insb
sbb
mov
enter
lcall
insl
adc
jbe
rorb
xor
xchg
push
cmp
incb
xorl
inc
ljmp
and
idivb
jg
add
add
in
cmpsb
insl
ret
dec
mov
popf
outsb
shrb
cwtl
jns
or
test
bound
and
xchg
mov
jnp
cs
inc
rorl
lods
jmp
shlb
xchg
test
les
push
lret
push
or
xchg
dec
jg
sbb
aaa
out
sub
sahf
data16
mov
cmp
pop
xchg
pop
jnp
sub
mov
sbb
and
cmp
and
nop
mov
pop
pop
dec
and
mov
scas
xor
xchg
push
jecxz
push
call
mov
lret
les
xor
adc
jecxz
sub
cmp
push
test
aaa
cmpsl
das
nop
cmpsb
stos
dec
sub
imul
and
rolb
int3
xchg
loopne
jnp
inc
and
test
jecxz
addr16
ret
cmp
jl
js
lods
lods
xor
sbb
loope
stos
and
into
jecxz
arpl
pop
pop
lds
jno
xchg
inc
pop
es
mov
cmp
add
in
push
rcrb
push
dec
mov
ret
addb
and
fdivl
adc
repz
mov
scas
in
xchg
lcall
mov
decl
in
mov
adc
ds
sub
pop
dec
iret
push
dec
scas
push
clc
cwtl
fsubrp
and
loopne
enter
inc
add
sub
sbbl
and
jo
and
jb
movsb
pop
outsl
mov
mov
adc
in
daa
outsb
cmpsb
push
jl
inc
pop
cmp
push
js
and
mov
add
imull
jbe
ss
mov
xor
or
repz
mov
fsubp
and
mov
sar
mov
xchg
jb
pop
xchg
inc
shrl
loopne
push
lret
out
les
adc
cmp
test
loop
ret
pop
mov
pop
lods
ss
sub
sbb
and
rcr
push
das
fsubs
cmp
pop
sbb
xchg
inc
hlt
pop
sbb
mov
jae
xchg
jge
fwait
jmp
jne
out
mov
sbb
inc
add
enter
pop
icebp
jnp
sbb
jle
inc
cwtl
lahf
fmul
and
cli
sar
pop
loop
sbb
cwtl
mov
dec
xor
xlat
mov
push
lods
pushl
sub
sbbl
lods
mov
sbb
jle
add
mov
dec
mov
xorb
inc
and
inc
outsb
pop
inc
je
mov
popf
xor
addl
push
out
out
mov
roll
push
pop
aaa
sbb
in
sbb
sbb
adc
cmp
xchg
xor
adc
jmp
shrl
mov
icebp
jb
fs
stc
jne
sti
stos
and
repnz
dec
ss
jge
fwait
sub
or
xor
scas
push
adc
and
pop
jnp
xorl
sub
fstps
or
pop
pushf
sbb
cmpsl
dec
pop
mul
pusha
orb
jbe
push
pop
das
adc
or
lcall
nop
or
mov
aas
mov
imul
in
fwait
push
das
pop
sbb
lret
sbb
push
xchg
leave
pop
mov
jg
jmp
addr16
test
or
movsl
or
fsubrl
into
loop
div
mov
js
cwtl
xchg
cmp
pushf
rcr
sub
push
mov
jnp
or
mov
cli
cmp
fcmove
dec
sbb
inc
cmpsl
add
ret
test
inc
dec
ja
loope
push
mov
scas
sahf
subl
adc
clc
shlb
dec
subl
mov
test
pop
mov
jle
int3
pop
sbb
jns
jo
or
pop
enter
mov
movsb
das
mov
pop
lock
mulb
lcall
movsb
inc
inc
and
or
out
out
cmp
fsub
test
outsl
jns
insl
jmp
stc
aaa
inc
fidivs
dec
mov
pop
jns
cwtl
and
rclb
dec
addl
mov
movsl
xchg
int3
sahf
and
dec
enter
outsl
out
fcmovnbe
inc
lret
or
in
dec
out
xor
fbstp
or
outsl
es
aaa
jno
test
lea
fwait
mov
scas
cwtl
adc
cli
outsl
outsl
scas
pop
jne
fmull
adc
inc
xor
sub
cmp
cwtl
insb
add
adc
jmp
or
mull
adc
imul
mov
xor
or
xor
mov
sub
or
fwait
sub
or
in
out
xchg
and
outsb
add
call
pop
sbb
and
dec
push
push
mov
inc
xor
out
sti
mov
and
sahf
daa
repz
push
je
nop
push
xchg
and
jecxz
or
movsl
push
rcl
addr16
aad
imul
dec
push
jmp
inc
pop
push
ret
icebp
mov
adc
adc
cmp
pop
ljmp
das
jmp
repnz
pop
repnz
and
fwait
xlat
outsb
lock
cmp
adc
dec
jg
add
mov
pop
xchg
lds
pusha
pop
cmpsl
sahf
dec
adcl
jp
mov
pop
mov
in
lods
pop
cmp
mov
sti
pushf
fnstcw
mov
out
lock
inc
and
arpl
push
lds
jne
add
fnstsw
lds
dec
out
xchg
push
jmp
jg
mov
cmp
insb
icebp
int3
and
or
and
or
adc
adc
sbb
imul
gs
clc
loopne
mov
ds
es
outsb
bound
in
out
popf
ret
push
test
add
mov
sbb
xor
push
or
loope
pop
lret
xor
mov
movsb
lods
or
out
sarb
cmp
push
or
ja
or
mov
xchg
repz
pop
mov
mov
jl
mov
pop
leave
pop
scas
dec
lock
inc
inc
adc
jno
push
push
xchg
movsl
insl
mov
jo
stc
jg
int3
dec
lcall
loopne
cmp
mov
sbbl
inc
outsl
cmp
push
jl
popl
cltd
mov
mov
aaa
loopne
xor
sbb
jecxz
sub
jo
pop
xorb
stc
fimuls
out
push
pop
xor
cmpsb
jg
or
daa
aam
aam
mov
inc
or
test
movsl
stos
pushf
sbb
xchg
or
jl
xchg
mov
into
xchg
out
les
popf
mov
adc
mov
xchg
push
adc
mov
fnstsw
xchg
nopl
pop
push
push
pushf
jns
mov
in
lret
lret
push
mov
jbe
out
sub
push
in
rorb
mov
mov
jne
mov
hlt
mov
push
xor
inc
mov
insl
adc
push
test
gs
rcrb
add
cmp
popa
stos
ret
shlb
testb
lret
andb
js
inc
jl
bound
testl
push
xor
lcall
leave
ja
cmc
int
pushl
mov
fimull
push
cmpsl
fwait
add
sub
std
call
sub
cmp
fdivl
scas
dec
lret
in
push
push
xchg
andb
push
fildll
outsl
incb
int
rcr
hlt
dec
adc
js
fsubrs
lock
lcall
dec
push
test
roll
add
sahf
push
cmp
mov
adc
pop
add
and
mov
push
sbb
mov
inc
mov
pop
mov
mov
sub
pop
pop
scas
stos
cmp
hlt
fs
loopne
lods
push
inc
fistpl
mov
dec
pusha
out
iret
sbb
fwait
cmp
addr16
jge
les
jo
repz
call
sbb
insl
sar
xor
inc
outsl
scas
ljmp
mov
add
jb
xchg
cmp
jns
sbb
lret
cmp
push
sub
test
jnp
push
mov
sub
pop
jb
mov
pop
cwtl
lods
rcll
mov
outsl
mov
in
je
push
pusha
mov
sbb
mov
mov
or
inc
xor
mov
mov
adcb
mov
push
add
jae
mov
pmaxub
test
sub
aaa
lret
xor
cltd
cmp
ret
pop
iret
adc
pushf
into
sub
pop
imul
mov
popf
pop
fidivrs
lds
scas
outsl
mov
inc
clc
cmp
fiaddl
mov
xlat
pop
sub
cwtl
outsl
push
xchg
add
orb
and
sbb
test
push
fsts
lret
fidivl
lcall
mov
xor
ror
mov
pop
into
jecxz
mov
xchg
cmp
ja
cmpsl
mov
cmp
test
movsb
movsb
pop
ret
insl
jmp
popf
int3
sti
push
xor
jl
jnp
mov
add
stos
sbb
mov
mov
add
loop
jno
jl
arpl
inc
lods
js
push
shlb
xchg
push
cmpsb
hlt
ja
cld
imul
sub
pop
xchg
loope
nop
mov
mov
test
xchg
jg
popa
popa
jno
mov
mov
adc
test
stc
sahf
je
xchg
inc
push
mov
mov
ljmp
mov
or
and
out
push
pop
shr
and
fdivl
repz
inc
std
adc
adc
cmpl
inc
es
sahf
insl
movsb
pop
dec
cmp
test
push
cmp
rcr
jns
adcl
data16
xchg
repnz
sbb
out
mov
adc
test
shl
jg
mov
and
insb
out
adc
mov
hlt
shlb
mov
in
cmpsb
lock
pusha
push
mov
dec
sub
outsl
jb
or
xchg
js
dec
lea
dec
add
arpl
pop
sbb
rolb
sub
test
sub
in
mov
xor
xorl
out
adc
aaa
cmove
push
mov
push
jecxz
add
pop
insl
mov
loopne
push
fldt
pop
or
dec
dec
rolb
mov
outsb
push
fs
out
shlb
inc
decl
xchg
jge
add
fdivrl
nop
mov
inc
adc
adcb
mov
in
jb
mov
xor
or
pusha
mov
repz
pusha
lret
inc
sti
mov
cs
enter
fisttpl
negb
ljmp
dec
js
push
rcl
adc
mov
fmull
in
outsl
mov
mov
push
sub
xchg
cmp
psubb
loope
out
fs
sub
lods
aam
enter
hlt
setl
rol
inc
loop
loopne
mov
push
ja
mov
xor
sbb
sub
pusha
ffreep
gs
push
inc
lds
mov
enter
sub
add
mov
mov
or
sbb
lods
repz
cltd
test
jge
add
inc
xor
xchg
imul
dec
inc
mov
xchg
int
das
fistpll
inc
and
fwait
pop
jno
rcl
std
sub
pop
mov
pop
xchg
sub
ret
call
mov
push
xchg
repnz
mov
jne
nop
fidivrl
sbb
cmp
insl
sbb
in
scas
jns
and
mov
lahf
xchg
cmp
adc
vpcmpeqw
div
or
adc
xor
pop
push
ds
or
outsl
in
adcb
cld
cmp
mov
xor
cmp
dec
aaa
lret
push
bound
das
pop
sbb
pop
fsts
dec
movsl
or
imul
out
pop
sbb
icebp
mov
xor
in
xchg
fsubrl
mov
mov
and
icebp
fistpll
mov
adc
jne
sub
xor
and
mov
aam
mov
add
push
out
or
mov
inc
push
sbb
xor
push
les
fcmovnbe
pop
mov
cli
leave
nop
sarb
inc
mov
inc
cmpl
test
jle
xor
and
mov
aam
testb
call
mov
push
pop
xchg
in
mov
lds
or
inc
les
cmpsb
or
mov
shr
fdivrl
xchg
gs
bound
aad
xchg
rorb
test
inc
mov
cmp
xchg
xchg
inc
pop
cmp
mov
call
inc
cld
dec
jl
mov
out
aam
outsb
mov
out
int
rolb
fsubr
ljmpw
lret
jecxz
dec
arpl
daa
scas
mov
sub
cltd
fldenv
xchg
dec
loop
jle
mov
dec
jb
incb
call
mov
jbe
repz
cmp
jns
fildl
xchg
sub
scas
ja
imul
imul
jbe
or
adc
jnp
clc
push
in
jb
pop
fsubr
jbe
or
inc
out
loope
push
mov
data16
xor
lahf
fnstsw
sbb
cld
sbb
jmp
lock
push
pop
ret
movsl
xor
ljmp
rcrb
out
push
sub
dec
pop
mov
cwtl
aam
out
adc
xchg
cmpsb
sbb
in
sbb
into
sbb
vpacksswb
aaa
addr16
cmp
push
aaa
inc
sbb
scas
xor
push
pop
jg
jge
jbe
inc
popf
insb
int3
jl
lcall
inc
push
pop
mov
jae
fcompl
and
add
arpl
adc
leave
cltd
movsb
cmp
aas
aas
inc
fs
cmp
add
mov
jg
push
mov
pop
rcr
int
jecxz
adc
sbb
popa
sub
test
imul
imul
xlat
jo
mov
je
xor
in
jae
add
cld
inc
rol
or
jo
xor
sub
jae
fildl
cmpsb
xchg
inc
mov
imul
and
xor
cmp
sbb
mov
lods
jmp
in
insl
push
outsb
jns
sti
inc
pop
cmc
out
je
or
jb
inc
mov
je
mov
mov
cmp
ss
fbld
icebp
and
mov
inc
xor
lds
xlat
mov
mov
adc
inc
mov
xchg
ss
pop
sbb
js
push
jp
cmpsb
inc
pop
or
rorb
sbb
push
aam
scas
insb
inc
daa
pop
inc
cld
jecxz
js
jnp
push
ret
push
push
std
mov
sbb
fiadds
outsl
test
bound
cltd
cmpsb
jne
xchg
rcrl
cmp
mov
pop
sti
push
and
sub
sbb
xchg
cli
jg
out
mov
jle
jg
jns
mov
mov
fimull
ret
dec
jecxz
iret
lods
jmp
cmp
mov
and
lret
jno
scas
iret
addl
jmp
mov
sti
mov
inc
test
mov
sarb
repz
push
arpl
outsl
cld
pusha
or
push
pop
outsb
fcoml
in
xor
push
mov
cmc
push
js
dec
fstl
fistl
dec
jns
pop
jne
mov
and
push
xlat
cli
cmp
pusha
scas
scas
ret
data16
icebp
pushl
xchg
les
pop
test
out
sub
push
bnd
stos
in
adc
loop
bt
notl
mov
add
mulb
imul
imull
mov
xor
cmp
lret
fcomps
ja
sbb
push
dec
adc
pop
pop
dec
dec
movsb
in
sahf
fmulp
fdivr
jle
cmp
dec
sbb
aaa
mov
push
sub
or
jg
sub
dec
or
or
inc
test
mov
push
cs
push
jb
test
or
int
sub
into
sub
xchg
rcrb
mov
out
xchg
leave
adcl
pop
mov
pop
fstl
inc
fwait
dec
roll
int
xchg
mov
sbb
xor
lret
in
lret
add
adc
xor
cvtps2pd
mov
mov
sarl
cmp
js
inc
lret
mov
stos
mov
mov
adc
adc
out
lea
call
xor
dec
mov
fdivrs
ficoms
push
pop
mov
aam
mov
out
push
int
sub
dec
fwait
orb
mov
push
cmp
mov
pusha
test
popa
mov
mov
push
xor
roll
or
or
push
cmpsb
mov
mov
pop
divb
push
fwait
mov
btr
in
iret
or
les
mov
sub
adc
movsb
sub
push
jae
or
xchg
inc
fildl
subb
pop
pop
add
and
mov
cs
mov
test
cmp
add
repnz
lret
cmc
xchg
jmp
inc
jno
mov
lret
lock
push
mov
mov
dec
fstps
mov
pop
sub
ss
xchg
cmp
arpl
outsb
out
sub
or
xchg
mov
cmpsl
push
int
adcb
inc
lea
sub
sub
xlat
out
inc
loopne
pop
pushf
test
ja
mov
xor
shlb
pop
pop
popf
cld
outsb
imulb
test
push
fdivrp
loopne
imul
or
push
inc
cmp
je
into
test
out
roll
xchg
jns
pop
or
into
or
loope
or
ds
repnz
pop
mov
aam
dec
adc
out
movsl
mov
jl
es
pop
cmp
ds
mov
and
bnd
into
inc
xlat
dec
xorl
rorb
push
xchg
jno
in
ja
dec
jecxz
adc
push
int
push
sub
dec
and
adc
jecxz
or
mov
push
js
ja
push
xchg
or
popa
cltd
outsl
xor
test
fisubs
fiadds
mov
cmpsl
loope
adc
insb
push
jnp
lods
push
je
cmp
int3
add
imul
in
push
xor
cwtl
call
inc
xchg
jle
test
and
test
call
lea
nop
stos
inc
xchg
xor
ja
dec
mov
push
jo
hlt
movsb
sbb
jecxz
push
lret
mov
sbb
xchg
inc
mov
bound
shlb
xor
pop
cmpb
or
sub
jbe
popf
jb
jp
rol
std
test
pop
pusha
push
repnz
ret
jmp
lret
stc
adc
cmp
subb
std
outsb
sub
or
inc
pusha
or
das
fs
pop
int
inc
mov
ja
fimull
decl
cmp
loope
ret
add
popf
clc
xor
jo
mov
dec
cmpsl
mulb
fwait
cld
rclb
cmp
adc
mov
cld
inc
xchg
in
pop
orb
cmp
xchg
pop
fisttpl
add
loope
loop
inc
add
outsb
in
fbld
pop
and
and
shlb
sub
lock
mov
lods
pusha
mull
pop
stc
stos
pop
pop
out
out
mov
rcrb
adcb
fsts
testl
push
pusha
cmc
inc
dec
loop
mov
sbb
lahf
loopne
sub
outsb
xchg
movsb
andb
cmc
xchg
call
dec
push
mov
add
xor
jb
xabort
sbb
int
and
mov
or
out
stc
ret
mov
loope
sub
mov
sarl
mov
adc
fadds
cmpsl
in
aam
rcll
lock
mov
or
adc
icebp
rclb
mov
pop
insb
push
or
dec
pop
sbb
outsb
mov
inc
xor
xchg
xchg
into
daa
shll
dec
fsts
add
ss
dec
mov
dec
mov
into
push
xchg
test
cld
imulb
xor
mov
and
or
in
icebp
imul
mov
mov
test
push
lods
loopne
pusha
cs
mov
push
inc
xor
or
pop
pop
andl
pop
gs
shrl
push
insl
mov
nop
call
ret
sti
rcrb
pop
aaa
xchg
out
push
fisttpll
jb
shll
mov
pusha
push
clc
sahf
jne
push
out
sbb
push
add
enter
sub
adc
mov
repz
clc
sub
and
pushf
fs
cld
ret
je
fs
fidivrs
mov
mov
shl
inc
dec
jmp
fiaddl
adc
test
incl
dec
mov
push
sub
cwtl
cmp
xchg
call
and
pushf
cmpsl
scas
and
xchg
scas
sbb
stos
xchg
iret
push
mov
or
into
inc
push
cmp
xchg
imul
or
dec
daa
call
fidivrs
sarb
ljmp
lods
popf
sub
icebp
or
js
cmp
fnsave
mov
sub
lret
xor
add
xchg
pop
and
ret
scas
mov
cmp
sbb
into
lods
dec
and
add
cmp
into
xchg
xchg
lods
jne
icebp
inc
insl
pop
sub
sub
inc
ja
dec
pop
adc
mov
adc
loopne
ret
pop
sub
or
movsl
xchg
test
push
cwtl
jo
dec
popa
ja
xchg
pop
ficoml
in
or
or
cmp
jmp
jbe
out
aam
sbb
rep
cltd
push
rcl
add
xchg
mov
popf
mov
out
pusha
push
popa
sub
xchg
lahf
jmp
and
out
xor
ret
cwtl
pop
mov
stc
xchg
dec
pop
xor
pop
jb
xor
ret
sub
sbb
flds
ja
add
mov
push
or
add
inc
cld
data16
je,pt
add
or
add
addb
push
cmp
scas
sub
outsb
jg
xor
adc
jae
sti
enter
repz
push
arpl
aaa
cmp
cmp
fidivl
sahf
cmc
fs
dec
adc
add
pop
jg
insl
sbb
jecxz
lods
in
dec
pop
test
pusha
jo
or
lahf
jle
push
jo
arpl
mov
xor
and
cltd
sbb
push
xor
mov
scas
std
push
mov
adc
fidivrl
stos
adc
sub
pop
push
mov
jl
add
jbe
pop
jecxz
pop
inc
sbb
xchg
sarb
test
sub
cwtl
pushf
outsl
xor
push
insl
xlat
pop
fsubs
push
in
mov
fnstsw
clc
dec
loopne
hlt
insb
loopne
xorl
arpl
xor
cmp
lcall
cmp
mov
sar
lahf
xor
sub
push
mov
clc
xchg
xchg
setg
mov
mulb
repz
jle
loop
fs
jae
movsb
scas
out
inc
lea
test
adc
push
jmp
ret
inc
inc
xor
mov
xor
xchg
dec
lret
xchg
adc
ret
sarb
inc
into
ss
fidivl
das
faddp
insb
and
inc
clc
xchg
inc
sub
fsubl
pop
xchg
add
ret
test
cmp
push
cwtl
dec
mov
mov
sar
roll
pop
mov
fisubl
arpl
mov
jg
sub
mov
std
fdivr
popa
pop
sbb
pop
and
mov
aas
pop
jo
mov
sub
cmpsl
enter
jecxz
inc
fnsave
dec
cltd
fs
incb
cs
leave
loope
dec
stos
out
popa
mov
adc
lahf
jl
xor
adc
stos
mov
clc
shrl
insb
xor
loope
dec
sahf
std
xlat
cmc
fld
jo
push
push
mov
adc
xor
popa
pop
nop
sub
push
fstl
inc
loope
fisubs
popl
or
jne
inc
sub
stos
mov
mov
inc
pop
js
or
pop
stos
mov
or
mov
xchg
mov
xchg
sub
cli
sbb
mov
xlat
clc
jg
in
push
pop
dec
mov
xchg
or
xchg
sub
test
sbb
jae
push
fwait
ret
leave
loop
lock
notb
gs
int
jl
rorb
mov
insl
push
lea
mov
jl
inc
pop
lahf
popa
test
stc
in
jmp
sub
xchg
dec
jno
lret
adc
and
fcoml
dec
mov
push
dec
test
jl
les
xor
repnz
cmp
jae
fbstp
mov
int3
shrl
pushf
test
gs
jg
data16
pshufw
aaa
shll
xor
insl
or
mov
pop
shll
xorl
xor
lret
xchg
dec
sbb
adc
int
mov
ljmp
mov
stos
pop
mov
clc
js
inc
in
xor
repnz
dec
inc
inc
pop
xchg
rol
dec
push
mov
idiv
mov
inc
push
cmp
out
call
jmp
sbb
shl
pop
imul
ja
mov
rcl
mov
rcl
fisttpl
neg
jne
int
mov
inc
imul
lds
dec
addl
lods
dec
xchg
outsb
add
jecxz
fdiv
icebp
and
es
nop
xchg
stos
ret
inc
out
rolb
call
push
sub
xchg
iret
mov
bnd
pop
insb
push
cmp
roll
jg
in
xor
ss
push
mov
pop
sbb
movsl
aad
int3
mov
lahf
pusha
add
pop
rcrb
stos
and
lgs
add
push
add
rcr
pop
xor
sub
test
clc
inc
ror
push
cli
push
lds
cmpsl
enter
or
fstpl
dec
add
and
addb
push
adc
push
scas
popf
mov
mov
add
popa
xchg
mov
ffree
andb
pop
das
push
or
add
fmull
sbb
orb
pushf
and
xchg
pminsw
bound
or
add
sub
xor
stc
std
mov
clc
mov
push
lods
adc
iret
dec
mov
movsb
gs
repnz
out
mov
scas
icebp
cs
call
push
cmp
xchg
cmp
and
mov
in
shll
pusha
mov
mov
jno
or
insb
pop
insl
mov
fstpl
int
inc
xchg
pop
pop
stc
and
scas
cmp
lods
cmpsb
xor
jno
repz
cwtl
je
std
push
sbb
inc
jo
inc
out
jmp
mov
mov
sub
cmp
mov
pop
scas
adc
nop
cld
outsb
jle
ret
out
jae
push
xor
xor
and
adc
dec
xlat
mov
pop
mov
addr16
scas
lds
mov
jp
shr
lret
mov
movsb
and
in
movsb
inc
shr
pop
add
decb
in
push
mov
lcall
or
cwtl
lock
ds
int
int
in
sub
fs
mov
cmp
lret
xchg
sub
scas
call
push
adc
sbb
mov
or
out
jge
icebp
loopw
mov
in
jbe
test
fdiv
imul
xchg
leave
cs
mov
repnz
loopne
out
or
pop
xchg
xchg
jno
inc
mov
pop
sub
sub
xchg
pusha
push
sub
les
push
repz
push
test
lahf
xchg
add
xor
dec
mov
xor
mov
and
xchg
out
fcoms
in
and
addr16
int3
sbb
cmp
pop
xchg
lcall
pusha
ret
je
outsl
enter
cmp
cltd
std
fldl
adc
or
dec
adc
push
and
pop
ret
or
orl
in
ljmp
cmpsb
outsb
cmp
ret
sub
mov
xor
fdivp
in
bound
cmpsl
scas
pusha
mov
inc
shrl
dec
divl
sub
and
lahf
fldenv
addr16
sbb
stos
push
repz
aad
adc
xchg
leave
sbb
rolb
adc
mov
loope
aad
call
cli
sbb
das
sbb
aas
or
lds
cmpsb
inc
stc
clc
adc
and
ficoml
and
sub
lretw
sub
out
cmp
addb
rolb
xor
in
data16
inc
and
rorb
dec
mov
roll
movsl
jbe
out
cwtl
into
rorl
cmpsl
xchg
scas
dec
bswap
mov
cmpsl
add
xchg
inc
popa
cmpl
mov
xchg
xchg
mov
sahf
sub
jge
mov
push
cmp
sarl
pop
shrl
in
sub
bound
inc
jl
sub
and
js
and
mov
je
std
xor
das
mov
int3
pop
add
es
daa
push
fstpt
pop
add
leave
or
ret
dec
mov
jns
xchg
sub
hlt
jle
or
fld
push
mov
xchg
push
cmp
jp
cmp
fadd
xchg
int3
jle
mov
xor
jg
mov
fdivrs
pop
fnstsw
leave
add
insb
std
adc
add
lret
orl
insl
pop
insb
loope
push
pusha
add
add
pop
sub
pusha
dec
cli
adc
pop
push
mov
ljmp
in
test
xlat
aas
push
jmp
push
shl
out
push
jae
scas
lret
imul
mov
and
dec
aam
movsl
je
mov
pop
hlt
leave
push
pop
cmpsb
inc
test
mov
outsb
jnp
test
sub
popa
les
mov
scas
dec
push
jne
adc
jne
dec
fldcw
mov
add
movsb
sbb
repnz
nop
test
push
pop
push
movsl
mov
mov
push
push
addl
adc
lret
add
clc
sbb
lret
and
pop
pop
lret
insl
mov
lret
scas
popa
iret
sti
and
mov
mov
loopne
xchg
int
adc
mov
pushw
jbe
aaa
dec
mov
gs
dec
rcrl
sbb
rcll
or
adc
cmp
adc
and
lret
data16
pop
jl
dec
pushf
xor
ss
sti
cmc
out
roll
out
dec
mov
out
shlb
scas
ja
push
bound
sarb
clc
xorl
insl
imul
lret
cmpsl
cli
and
aaa
mov
sub
or
cmp
adc
in
fimull
testl
jle
mov
adc
js
repnz
adc
and
aad
stos
jno
push
sbbl
in
std
int
mov
fmull
aad
dec
jne
pop
jnp
addr16
cltd
pushf
dec
inc
and
clc
scas
or
cld
jbe
in
xchg
inc
push
std
addr16
inc
rcrb
addr16
test
sarl
popa
jbe
out
je
cmp
mov
jecxz
rcrl
adc
cmc
inc
and
gs
scas
cld
cmp
pop
mov
or
fstps
test
cmp
mov
stos
pop
in
rcrl
mov
and
xor
out
jl
add
xchg
sbb
cmp
pop
iret
stos
add
ret
mov
imul
ja
pop
push
push
cmp
nop
mov
or
sbb
mov
test
dec
lea
push
outsb
jne
stc
ds
jge
incl
xor
push
stc
xchg
addr16
inc
ljmp
call
icebp
sub
jb
ficoms
dec
dec
icebp
xlat
ficoml
movsb
dec
rcrl
push
clc
aaa
ja
push
in
lds
or
inc
push
inc
dec
or
ja
xor
and
divb
cld
or
jg
push
sbb
pop
lret
cltd
subl
jo
out
stos
movsb
push
lret
xor
outsl
mov
sbb
pop
andl
cmpsl
repnz
jno
push
inc
inc
testl
aad
xor
jg
and
sbb
fs
jecxz
mov
mov
jp
push
xchg
inc
mov
lahf
xor
dec
sarb
aam
pop
push
leave
xchg
testb
pop
push
loopne
ret
add
repnz
stos
or
cmp
mov
dec
mov
or
push
or
fcmovne
jb
lods
and
mov
cmpsb
jl
mov
mov
mov
sbb
outsb
jmp
aas
fwait
aad
popf
cmp
jge
mov
push
fs
or
push
push
mov
xlat
cmp
roll
sub
dec
daa
lods
and
outsl
orb
pop
or
lods
test
sbb
jle
push
lcall
es
pop
jb
pop
int
xchg
aam
cmp
cmp
dec
push
call
jnp
jg
xchg
and
jne
fwait
or
clc
jle
out
shrb
mov
xor
jmp
movsb
mov
jns
push
fsubrs
add
xor
mov
inc
cli
sub
mov
push
mov
push
sub
iret
adc
inc
xlat
xchg
inc
ljmp
popf
lods
movsb
xchg
orl
jge
test
in
jb
insb
cmp
rcl
and
pop
xor
shll
leave
push
or
sarb
jo
loopne
or
shll
mov
enter
insb
or
sub
push
popf
mov
jl
cmp
insw
mov
je
adc
push
dec
adc
js
data16
jmp
jnp
dec
hlt
pop
xchg
movsb
mov
fisttpl
push
aad
in
inc
push
stos
inc
test
insb
xor
popa
mov
lret
and
or
adc
adc
popa
xor
cmp
push
lahf
push
sub
jl
stos
inc
aaa
aad
jne
cmpsb
fadds
dec
xchg
jmp
rcrb
add
sahf
add
jbe
int
mov
fsubrs
outsb
sbb
lds
lock
out
pop
std
pop
push
mov
fsubs
mov
push
pop
insb
sub
dec
mov
push
sub
aad
mov
mov
jae
xchg
mov
push
aam
inc
orl
push
cmpsl
or
pop
push
adc
aaa
ss
pop
inc
pushf
mov
ds
jbe
sub
sahf
aad
cwtl
add
leave
out
cld
xchg
dec
or
jno
int3
adc
mov
mov
mov
mov
std
dec
cmp
int3
mov
add
inc
test
xor
aaa
pusha
xor
pop
lods
imul
adc
stos
push
cmc
and
ljmp
add
inc
scas
ljmp
xor
dec
in
shl
fdivs
pusha
push
mov
arpl
mov
push
and
cltd
int3
outsl
popa
bndstx
sub
pop
call
mov
subb
orps
xor
cli
ret
nop
mov
stos
xchg
int
in
push
mov
xchg
ja
lretw
dec
addr16
loop
sbb
fists
mov
repnz
mov
mov
add
mov
push
int3
aad
ljmp
int
xor
add
xchg
std
rcrb
mov
push
rorl
add
imul
jle
pop
cwtl
mov
push
add
add
cli
or
shlb
cltd
mov
jecxz
jno
add
stos
adc
mov
and
mov
mov
sub
sar
sub
cs
in
testb
lods
pop
sbb
mov
mov
repnz
xor
mov
out
push
ds
movb
add
xchg
rclb
pop
mulb
xchg
push
mov
sbb
push
jecxz
stc
insl
inc
cmp
jae
lds
outsl
mov
dec
es
xlat
stos
repz
insl
mov
jb
shll
pop
cmp
das
cmpsl
sub
jae
and
outsl
add
add
xchg
ffreep
mov
notl
push
outsb
pop
or
call
and
jle
pop
mov
jb
sbb
jle
imul
xchg
sub
jne
aas
or
ret
inc
lahf
lret
mov
dec
in
dec
aam
out
aad
aam
out
lock
or
xlat
insb
jmp
mulb
out
sbbl
sbb
aaa
fimull
jb
addr16
ds
ds
mov
imul
loop
inc
int3
or
or
popf
sub
stc
lret
adc
inc
in
jae
mov
add
gs
mov
mov
sbb
loope
aad
pop
imul
mov
add
ja
movsl
inc
pop
in
add
nop
xchg
sbb
movsb
or
push
test
push
pop
pop
jp
push
lock
fwait
pop
stos
mov
rcl
xchg
aam
or
mov
inc
adc
and
stos
mov
mov
xchg
fidivl
xchg
pushf
mov
pop
xor
stos
fs
xchg
mov
push
test
push
movsb
test
add
sahf
mov
sub
cmp
sbb
les
jg
int3
rcrb
jo
dec
cmp
andb
push
loop
stc
test
mov
in
xor
scas
jno
push
push
popa
aaa
jns
insl
aaa
cs
shl
add
sbb
xor
pop
or
cltd
jmp
push
xchg
pop
pop
cmpsl
ret
lock
in
int3
jno
out
mov
pop
lock
mov
add
in
stc
mov
lea
out
sub
jle
mov
sub
loop
adc
sbb
testl
xchg
xchg
push
and
jb
cs
xchg
push
dec
xor
je
pop
loop
fs
pop
cmp
sbb
mov
add
sbb
xchg
mov
sub
jg
imul
mov
cmp
pop
jbe
cmp
mov
pop
and
std
in
std
add
mov
iret
lea
mov
cmc
dec
mov
notb
ljmp
hlt
jne
cmp
add
adc
sbb
jp
jns
pop
mov
adc
jp
push
leave
jle
scas
in
loopne
lds
cmp
xor
fs
repnz
pop
cmp
xchg
clc
jmp
adc
xchg
mov
mov
or
movsb
lea
cmpsb
mov
stos
add
pop
adc
jp
adc
and
mov
adc
mov
stos
xor
sbb
push
orl
repnz
dec
xlat
rcll
mov
test
fcmovne
dec
pop
jmp
xchg
fcmove
insb
testb
inc
adc
push
dec
fidivs
xchg
mov
xchg
lock
adc
loop
daa
repz
xchg
cmp
fstpl
or
repz
enter
push
and
rcrl
jae
push
lods
cltd
mov
sbb
or
loopne
add
fwait
or
sub
out
leave
cwtl
mov
cmpsl
shlb
and
sbb
xor
xchg
jl
push
or
fstpl
fcom
arpl
jb
mov
dec
or
jle
rolb
addr16
cltd
xchg
stos
out
mov
jmp
xor
cwtl
lahf
cmp
mov
add
pusha
pop
lods
mov
adc
outsl
imul
push
js
and
mov
outsl
mov
xchg
hlt
push
dec
int
repz
movups
lahf
fnsave
inc
dec
dec
lcall
mov
cmpsb
fildll
fstpl
and
push
loope
mov
fcmovb
orb
imul
sbb
pop
mov
push
mov
jnp
mov
xchg
pop
dec
inc
das
ljmp
cltd
shr
jb
jo
adc
stos
in
jmp
xchg
add
mov
sbb
ret
and
inc
addb
fdivl
lahf
fcoms
mov
or
int3
into
adc
pop
in
call
mov
adc
jae
popf
push
dec
stc
das
lret
xchg
call
fwait
mov
mov
xchg
lock
scas
jl
cmp
imul
daa
push
lcall
xor
mov
or
popf
cmc
insb
cmp
cmp
test
xchg
mov
push
and
cmp
adc
jl
lahf
xor
cwtl
leave
cli
xorb
sub
add
sahf
sbb
pop
arpl
ds
subl
ss
pusha
adc
stc
test
test
sbb
add
mov
sahf
lock
icebp
ss
inc
adc
leave
mov
mov
ss
lock
insb
cwtl
andb
dec
fcmovnb
jo
mov
cmp
fisttpll
icebp
fistpll
repz
jge
popa
push
cmp
mov
or
lret
push
xlat
xor
sbb
jo
adc
jae
push
mov
pushf
nop
imul
pop
pushf
cmc
loope
cmpsb
xchg
dec
jp
sar
ljmp
mov
std
sti
ret
gs
ja
insl
rclb
je
hlt
test
aad
jmp
leave
pop
aad
outsl
movsl
mov
add
mov
jbe
or
pop
jae
stc
test
dec
mov
push
lds
insb
xchg
push
xchg
mov
pop
xor
xchg
ljmp
imul
xchg
add
movsl
addr16
lea
pop
xchg
mov
pop
adc
adc
and
mov
cmp
out
iret
mov
je
sbb
roll
pop
lret
xor
aas
mov
jns
or
lcall
pop
and
lcall
stc
aad
inc
fnstcw
add
inc
in
out
cmp
mov
insl
mov
pop
mov
push
test
push
push
in
shlb
inc
loop
loop
insl
xor
dec
je
shrb
push
int
fs
xor
adc
mov
push
or
xchg
cmc
popf
ss
mov
mov
sbb
nop
cli
xor
pushf
sbb
incb
dec
out
leave
cmp
sarb
lahf
in
bound
pop
lahf
das
ljmp
xchg
cmp
insb
fsubs
jl
fisttps
xor
and
testl
xor
mov
sbb
aas
ljmp
cli
arpl
popw
nop
mov
lds
push
pop
push
jle
insb
and
xchg
add
insl
dec
enter
push
mov
test
cmp
sub
sbb
addb
rcll
pop
or
popf
cmp
adc
test
lock
int3
pop
add
sbbb
data16
inc
lods
popf
add
push
imul
mov
daa
faddl
popf
mov
js
sub
dec
jg
jp
mov
stc
or
test
pop
sbbb
and
mov
ja
js
std
push
and
push
loop
imul
sbb
and
mov
movsb
xchg
mov
dec
sub
mov
inc
xor
gs
cmp
scas
stos
mov
out
test
fmulp
sarl
test
repz
pop
mov
je
sub
movsb
leave
out
movsl
mov
adc
into
add
popf
add
mov
sahf
inc
cltd
fwait
mov
fldcw
fsubrl
notl
mov
or
stc
sub
pop
mov
ds
xchg
sub
pop
add
inc
adc
xchg
cli
pop
lock
and
and
cmpsl
cmpsb
repnz
sub
outsl
inc
pop
and
in
adcl
jo
xchg
ret
pop
push
ljmp
fstpt
jle
add
inc
dec
add
mov
push
lea
rcll
cmp
cmp
adc
into
gs
sub
sbb
cmp
push
incb
adc
fidivs
push
clc
or
inc
insb
xchg
inc
pop
cs
jmp
and
ljmp
les
cmp
and
out
jmp
std
bound
scas
adc
push
lahf
jecxz
bound
out
push
ja
xlat
in
xchg
cmp
mov
mov
mov
mov
add
fidivrs
je
xor
movsl
or
inc
and
rolb
cmp
xor
cmpsb
jle
pop
cli
je
add
dec
mov
pop
lods
xchg
push
or
repz
mov
movsb
xchg
gs
mov
dec
imul
push
pop
test
out
subb
mov
addb
push
hlt
or
jo
in
dec
andb
mov
pop
mov
icebp
xchg
stc
lret
adc
sbb
fbld
xor
dec
imul
jo
adc
adc
test
in
cmp
enter
loopne
rcll
xchg
repnz
jp
sbb
push
and
fsubrs
lea
call
rcll
mov
dec
adc
xchg
adc
jb
movsl
mov
aaa
inc
cmp
inc
idivb
stos
ret
cmp
cmpxchg
mov
xor
mov
and
test
xchg
mov
pop
shrb
cmp
lods
es
in
pusha
pop
cmp
dec
pop
xchg
xchg
jae
enter
pop
addl
ret
or
xchg
imul
or
xor
adc
jo
fists
pop
cmpsl
loop
xor
push
decl
imul
mov
test
inc
andb
adc
xchg
xlat
or
std
jns
test
jmp
iret
ss
rcll
jnp
insb
ret
xchg
adc
iret
cwtl
popf
lds
pop
inc
mov
cli
adc
inc
lods
out
jg
cmpb
push
cmp
jbe
daa
jmp
xor
xor
xor
shlb
mov
sbb
xor
gs
popf
push
xor
ja
imul
push
and
repnz
inc
xchg
adc
sar
scas
pusha
fists
sbb
loope
jecxz
lds
loopne
push
or
sub
pop
add
lods
push
push
test
test
fists
repnz
adc
nop
push
mov
jmp
nop
scas
jb
lods
sub
or
push
mov
adc
ds
dec
mov
mov
jmp
xchg
pop
shl
dec
scas
xor
test
or
pop
int3
daa
push
inc
div
fstps
mov
cvtps2pd
inc
xchg
jo
dec
sbb
add
pop
add
jbe
outsl
push
push
insl
mov
fs
or
test
ret
sub
outsl
test
jns
inc
iret
test
jp
aaa
mov
inc
mov
call
xor
pop
and
je
sbb
out
jge
test
call
lcall
lret
int3
out
or
pop
test
jno
fisubrl
shl
js
xchg
je
sub
popf
ds
shll
lcall
leave
pusha
stos
das
inc
mov
jnp
push
fistpl
call
sbb
adc
fimull
sbb
cmp
add
or
inc
mov
xchg
xor
mov
push
sarl
xchg
mov
xorl
in
xor
mov
inc
push
scas
adc
mov
les
aad
xchg
cmp
lret
jecxz
loope
add
adc
data16
mov
out
xchg
mov
fiaddl
lea
mov
stos
cmp
push
jg
or
shlb
ljmp
or
scas
test
xor
inc
mov
mov
pop
cli
jl
mov
test
shll
xchg
inc
ficomps
pop
nop
lods
adc
insl
in
adc
push
repz
or
stos
std
in
jp
add
xchg
in
lods
cmp
xchg
jo
js
test
jle
mov
int3
add
add
xchg
pop
sub
mov
push
ret
and
mov
jmp
sub
push
jnp
sbb
iret
dec
inc
fiadds
cmp
sbb
jns
mov
arpl
mov
and
sbb
nop
fnstenv
fcoml
push
int
jno
xor
jb
jg
dec
mov
adc
pop
clc
push
dec
stos
pop
pop
sub
sub
mov
pop
mov
ja
add
mov
ja
push
loope
push
mov
mov
ss
out
add
push
inc
outsb
and
xor
jne
movsl
loopne
testl
mov
inc
fwait
movsl
div
ja
jbe
dec
pop
es
sub
xor
dec
test
loope
push
movsb
push
dec
sbb
cwtl
incb
arpl
cltd
adc
mov
enter
jno
jns
iret
cld
lds
fucomp
sbb
loope
mull
dec
and
iret
in
cmpsb
ret
imul
inc
insb
pop
xchg
push
adc
in
lods
into
icebp
xor
out
mov
pop
std
fs
mov
inc
add
sbb
aad
mov
jl
loop
test
sbb
sbb
mov
cwtl
cmp
subb
mov
sarb
xchg
mov
dec
mov
cmp
or
orb
mov
and
or
adc
mov
ss
xor
negb
or
les
fcmovnbe
jl
lock
cmpsl
pop
rolb
fisubrl
nop
out
and
iret
lods
test
out
jae
pop
es
sub
sub
in
push
fiadds
scas
das
addr16
das
add
inc
aad
popf
out
lret
mov
mov
scas
inc
rolb
pop
icebp
js
mov
insl
mov
dec
rclb
insb
roll
icebp
fidivl
rcll
xor
fildll
pop
insb
pop
stos
pop
mov
jae
mov
jns
lock
bound
test
rorl
incb
inc
jmp
cmp
es
or
add
in
xor
int3
xchg
lret
pop
lock
sub
das
xchg
pusha
fildll
push
rorb
subb
xchg
mov
sub
lods
ficoml
stos
pop
or
and
mov
ss
pop
and
adc
in
inc
push
shrb
adc
xor
icebp
data16
mov
add
dec
enter
push
loopne
mov
das
xlat
call
adc
xchg
sub
in
scas
es
and
jae
push
out
stos
dec
mov
cmp
mov
stc
inc
sub
mov
stos
push
subl
add
pop
jbe
push
pop
fmull
and
add
divb
add
cmc
push
xorl
aad
pop
arpl
outsb
popl
sub
add
xchg
loope
xchg
cltd
inc
push
sub
inc
mov
enter
sbb
lods
xor
nop
ja
sub
popa
stc
push
push
pop
jle
icebp
mov
or
test
mov
test
roll
pop
sarb
mov
adc
xor
outsb
sub
int
in
loope
sub
xor
mov
mov
daa
push
and
xor
js
out
loop
pop
push
inc
pop
inc
mov
push
or
push
idivl
fdivr
psubusb
push
sahf
and
cli
shlb
rcrb
cmpl
pop
mov
sbb
jle,pt
jle
push
sbb
call
aad
ret
stos
pop
inc
mov
int3
fdivl
test
gs
int3
mov
rdmsr
in
lcall
fdivp
jp
push
mov
jae
mov
lea
or
icebp
pop
add
push
sbb
push
popa
loope
or
clc
adc
js
popa
lock
ja
jb
jl
pop
mov
or
push
cmpl
add
xor
imul
pop
in
pop
jno
add
mov
mov
imul
test
inc
int
aam
test
fistl
es
mov
rcrl
sbb
mov
aas
cld
xlat
push
lods
adc
mov
addr16
cmp
test
push
ficompl
inc
sub
or
aam
inc
jb
jmp
clc
sar
loopne
je
lods
push
imul
movsl
push
mov
cmpsl
or
jl
rolb
ds
jno
cmp
sbb
out
pushf
test
jl
int
xchg
inc
or
bswap
mov
pop
inc
arpl
jno
js
mov
sahf
repnz
jl
fwait
cmpsb
sti
xchg
adc
loop
xchg
sahf
into
movl
bound
dec
popf
divl
sub
and
xchg
movl
xor
lods
inc
or
inc
das
or
jnp
insl
js
adc
fdivp
sbbl
and
adc
fwait
enter
and
and
mov
sub
lds
sahf
adc
iret
cld
mov
and
cmp
ja
nop
mov
jp
mov
lret
in
cltd
imull
insb
adc
mov
mov
xchg
sub
aas
jp
addr16
xchg
sub
mov
adc
dec
adc
rolb
pushw
push
adc
mov
dec
sub
add
mov
mov
aad
lea
pop
sub
jle
jb
adc
scas
lahf
fmuls
add
inc
mov
dec
ret
sti
xor
mov
std
dec
mov
sahf
cli
cltd
ja
movsb
movsb
add
xchg
pop
inc
jecxz
mov
fwait
in
mov
fwait
aam
push
ja
sbb
and
add
popf
xor
repnz
sbb
movsl
or
cli
mov
dec
cs
fstl
adc
push
insb
loope
lea
insl
inc
test
push
je
xchg
inc
lret
dec
cmp
pusha
fst
sub
xchg
sub
sbb
insl
jne
lock
pushf
jle
dec
jp
xchg
push
aaa
jecxz
outsl
dec
mov
adc
mov
add
push
lcall
push
lods
fwait
sbb
sarb
inc
loopne
inc
mov
mov
add
sub
mov
push
jmp
sti
add
sarb
sbb
mov
bound
call
lahf
ss
push
inc
leave
lods
fwait
and
leave
jb
mov
nop
mov
test
mov
popf
inc
cmc
inc
sbb
in
or
cs
adc
mov
daa
xchg
rol
hlt
push
dec
sbb
inc
rcll
jo
std
pop
push
iret
xchg
loope
push
sahf
movl
and
outsb
mov
xchg
in
je
mov
push
push
adc
sub
les
loope
decb
jmp
pushf
int3
cltd
jl
and
and
cmp
sbb
sbb
cs
push
cwtl
pop
pop
mov
pop
ret
xor
and
cmp
fimuls
imul
cmp
pop
push
gs
movb
inc
cmpsl
push
addl
dec
xor
lds
mov
cmp
sub
lret
jmp
cmp
das
pop
inc
xor
cwtl
imull
cltd
pop
icebp
scas
sub
cs
fsub
in
or
xor
xor
adc
mov
pop
or
push
sbb
push
pop
ja
xor
gs
andb
xchg
in
cwtl
adc
or
add
pop
mov
fnstenv
or
pop
or
pushl
jbe
inc
loop
int
jl
mov
ljmp
leave
pushf
cmp
call
cwtl
pushf
mov
xchg
dec
rcrb
push
orb
lods
pop
and
sub
lret
shlb
dec
dec
xlat
lds
xor
aad
adc
xchg
xchg
mov
push
sub
cmp
jmp
mov
pop
jno
stc
push
mov
cwtl
imul
xchg
icebp
xor
jp
jmp
xor
imulb
lldt
xchg
arpl
in
cmp
and
adc
adc
or
mull
fdiv
addr16
leave
dec
imul
inc
mov
add
aad
clc
xor
push
xlat
lcall
test
and
in
jne
pop
adc
push
imul
ja
and
xchg
pusha
xor
jbe
notb
dec
dec
sahf
pop
xor
jae
in
mov
mov
inc
jg
push
push
mov
inc
movsl
and
movsb
add
cmp
hlt
mov
cmp
jg
cmp
jecxz
dec
sahf
or
mov
jp
lcall
ja
dec
sub
out
pop
adc
pop
out
ljmp
sbb
inc
in
ret
test
imul
sti
jle
mov
sbb
stos
push
pop
inc
icebp
cmp
xchg
incl
enter
shll
xchg
xor
push
jnp
enter
iret
addb
adc
rorl
enter
lret
or
jge
inc
dec
cld
dec
movq
pop
out
fstpl
imul
xchg
push
cwtl
dec
loopne
sbbb
mov
lahf
in
push
xchg
sarl
mov
pop
sarl
roll
pop
arpl
push
test
scas
push
scas
push
lret
add
xor
mov
or
jae
sti
pop
addb
jmp
lods
std
aaa
cmp
push
das
insb
in
mov
fsubrs
jnp
sti
jno
loop
sbb
and
repnz
pusha
cmp
jecxz
xchg
mov
loop
xchg
fsts
out
xchg
lret
adc
inc
test
aam
dec
cmp
lret
xchg
icebp
adc
cmp
outsb
inc
cmp
mov
sub
clc
and
or
std
outsl
lods
js
dec
fbld
xorb
cmp
daa
cmp
std
fstpl
sbb
pop
pusha
in
xor
mov
inc
adc
into
popf
ret
cmpb
jb
inc
dec
out
bound
je
jb
add
stos
out
xchg
xchg
hlt
or
or
add
out
sub
in
lock
cmpsl
stc
insb
push
mov
out
test
push
fldt
cmpl
cmp
xchg
cmp
stos
adc
cmp
pop
call
cmp
int
dec
jne
mov
jne
adc
jns
out
sbbl
xor
or
imul
mov
outsb
xor
xchg
push
loopne
pop
outsb
loopne
cld
xchg
xor
out
subl
or
xlat
movsl
sub
pop
pop
mov
call
imul
clc
stos
sbb
mov
mov
sbb
into
nop
aad
mov
mov
stos
loope
add
outsl
xor
and
loope
pusha
cmpsl
hlt
ret
movsl
pop
imulb
ret
pop
test
cmova
mov
jnp
xor
gs
xor
clc
int
xchg
scas
pop
lods
aad
outsl
lods
out
rcrl
inc
and
mov
mov
je
xor
inc
inc
cmpsl
movsb
ja
push
insb
dec
jl
cmpsb
jg
sub
imul
ds
mov
add
lret
cmp
add
int3
pop
lret
adc
adc
rorl
pop
push
cmp
add
dec
fimull
push
mov
sub
xchg
lods
sbb
xor
fcoms
xor
mov
sub
outsb
data16
lds
data16
pop
sub
testl
call
mov
mov
xor
subl
jae
sub
xchg
dec
popf
cmp
imul
xor
lods
fsubrl
or
push
sub
pop
jno
push
loopne
iret
mov
enter
mov
mov
push
jne
repz
stos
inc
sub
arpl
fcmove
push
and
mov
cli
aas
inc
mov
and
jbe
add
cld
cmp
cmp
push
jae
mov
test
pop
in
movsb
cmp
loop
enter
clc
test
stc
mov
xlat
or
add
jne
push
lahf
mov
add
scas
pusha
pop
xor
xor
dec
out
mov
mov
pop
inc
insl
cmp
pop
imul
add
fdivrs
sbb
add
lods
mov
fwait
dec
mov
jo
bound
sar
outsl
adc
dec
gs
pop
cmp
rcrb
mov
fidivl
push
mov
mov
adc
in
or
adc
and
loop
cmpsl
fldcw
jp
xchg
fiadds
repnz
icebp
cld
xchg
or
sbb
xor
push
cli
dec
cmp
mov
jmp
andl
push
xchg
sbb
mov
lds
rorb
gs
ficomps
popa
imul
loope
push
mov
sub
adc
sub
fs
iret
das
mov
and
rolb
add
jns
push
rol
jge
insb
cmpsb
pop
ja
fs
cwtl
pop
mov
in
lods
cli
pop
clc
std
popa
andl
enter
push
ficomps
pop
dec
sub
mov
fistl
leave
dec
ret
inc
xlat
add
jns
inc
xor
ret
and
cld
mov
add
cmp
imul
pop
mov
repnz
pop
push
xchg
movsb
fwait
test
xchg
lods
inc
pop
in
rcrl
loopne
and
mov
faddl
sahf
pop
ficoml
mov
dec
notl
dec
outsb
mov
push
movsb
les
call
lret
icebp
mov
in
pushf
rolb
movhps
xchg
cmp
js
cli
and
jmp
out
test
and
int3
dec
inc
mov
pusha
je
addr16
xor
xchg
insb
loop
mov
imul
stos
lret
clc
lret
fildl
lcall
repnz
push
mov
pop
repz
decl
jecxz
xor
aas
add
enter
jb
mov
xchg
xchg
outsl
movsl
xchg
sbb
xchg
jb
fnstcw
xchg
adc
mov
call
or
pop
cmpsl
xlat
xchg
jl
or
or
ret
mov
iret
outsl
inc
xlat
xchg
popa
sub
aas
mov
rcrb
test
int
sub
adc
cmp
leave
enter
lret
in
iret
movsb
bound
push
in
in
sbb
sbb
arpl
nop
pop
xor
fistl
sbbl
mov
xchg
icebp
jmp
test
sbb
sbb
add
push
add
cmp
repnz
sbb
out
mov
mov
xor
cmp
sbb
pop
mov
sbb
xchg
lods
addr16
popa
inc
mov
and
sahf
or
jno
arpl
fbld
push
into
adc
xor
mov
xor
mov
imul
popw
fiadds
stos
out
jb
out
sub
push
add
and
lds
arpl
aaa
cmp
push
test
push
adc
lahf
xor
outsl
fists
adc
sub
nop
mov
je
aam
mov
jbe
movsb
adc
sbb
sbb
mov
inc
cmp
call
or
mov
stos
imul
pop
leave
add
sarb
and
ret
cmpsb
mov
movsl
icebp
rorl
jns
xor
leave
push
inc
aas
adc
mov
or
or
inc
arpl
idivl
out
gs
out
rclb
xor
or
xor
dec
in
and
fst
stos
call
xor
xor
cwtl
loop
mov
shr
out
mov
push
sbb
inc
into
dec
push
mov
cs
pop
inc
mov
rcl
popl
mov
jae
bound
stc
jecxz
push
push
xchg
sbb
sub
cmp
mov
xlat
push
pop
clc
je
inc
xchg
out
jecxz
jo
cld
pop
dec
test
loop
hlt
mov
iret
add
out
pop
cmp
pop
pop
popf
jecxz
pop
mov
ljmp
push
in
subl
sub
bound
in
popa
mov
mov
push
icebp
pop
inc
testb
bound
xor
aad
xchg
ret
out
das
aaa
or
inc
push
lods
mov
mov
dec
lds
movsb
je
outsb
jge
ret
mov
xchg
lcall
pusha
aaa
test
call
ljmp
push
movntps
push
pushf
mov
cmp
mov
mov
mov
outsb
xchg
xor
mov
mov
cmp
pop
mov
adc
fnstcw
jbe
jmp
ja,pn
orb
mov
dec
jg
stos
js
aam
sti
mov
push
adc
je
jl
fistpll
movsl
sbb
int
out
popf
pop
pop
add
sbb
test
inc
mov
cmp
scas
ret
sar
lcall
mov
xor
ret
sub
repnz
adc
dec
imul
and
lret
mov
bound
shll
lret
aas
add
mov
jo
xchg
int3
clc
cmp
das
ja
jnp
cmp
sbb
jb
and
hlt
sbb
cmp
stos
mov
std
adc
sub
iret
jle
sahf
pop
add
shll
cmp
mov
and
pop
cmp
inc
pop
jne
popa
ljmp
ror
or
sbb
mov
adc
or
sub
pop
xor
data16
lods
mov
sbb
repz
cld
imul
pop
push
leave
insb
aaa
das
cmp
ret
cmp
call
cmp
call
lret
adc
les
cmc
or
out
jl
rorl
in
or
mov
jb
dec
mov
sbb
mov
mov
xchg
xchg
xchg
mov
rcll
aas
mov
lock
cmc
ss
lods
pop
popa
add
and
pop
js
aad
aas
xor
test
arpl
jg
inc
aad
rorb
clc
mov
cmp
xor
and
or
fcomps
xlat
or
fisubl
push
dec
adc
xchg
in
shrb
xor
notl
adc
xchg
jmp
loop
push
in
adc
daa
aad
add
sahf
sub
out
mov
iret
inc
cmp
std
jle
jo
and
cmp
jbe
outsl
lds
xor
sbb
push
push
mov
mov
inc
lock
pop
jb
xchg
ret
cltd
mov
roll
xchg
inc
scas
dec
loope
add
das
lret
cld
icebp
je
mov
mov
popf
inc
mov
imul
mov
je
decb
push
je
test
icebp
nop
imul
insl
scas
test
movsb
mov
cmp
cs
das
shll
mov
sbb
pop
push
orb
aam
xchg
inc
out
aas
jne
iret
ret
push
in
push
std
mov
push
push
dec
daa
and
inc
pop
mov
adc
lock
and
mov
mov
int
or
call
xchg
xchg
cmp
adc
mull
fs
mov
dec
mov
sti
mov
insb
stos
xor
adcb
daa
ret
adcb
push
lret
jge
xchg
mov
ja
lcall
sub
mov
je
xchg
and
push
push
push
inc
jp
into
push
or
lcall
and
jne
fcomps
jg
inc
add
mov
pop
push
or
pusha
pop
cmpsb
popf
enter
rcll
insl
fmuls
xchg
mov
jecxz
xor
int
cmp
scas
pop
sarb
repnz
movsl
add
in
jo
sarb
add
clc
ss
jg
xor
loop
lret
leave
mov
fnstsw
scas
and
hlt
cli
add
jo
pop
add
clc
jns
sbb
cltd
pop
xchg
imul
push
fxch
lock
je
loopne
dec
aaa
sub
repz
jae
mov
mov
daa
mov
cmp
in
xchg
mov
xchg
add
push
jne
popa
push
pop
flds
mov
mov
popf
cmp
leave
mov
push
cmpsl
in
mov
cmpsl
rcrb
testb
imul
or
pop
pop
add
mov
jecxz
push
enter
pop
ficomps
sub
fcomps
inc
mov
aad
shr
inc
insb
mov
sti
push
rorl
mov
sub
adc
filds
pop
fldenv
inc
mov
rolb
xchg
inc
popf
in
cmp
pop
ret
lods
sbb
jb
push
in
lcall
cmp
cmpsl
pop
xor
dec
shll
shr
mov
inc
sarb
xchg
cmp
sbb
clc
inc
mov
insl
add
add
cmpsl
scas
xorl
addl
xchg
adc
insb
add
pop
xchg
ret
bnd
and
fbstp
cmp
inc
or
ret
jo
xchg
jg
shlb
jmp
mov
push
wrmsr
xchg
inc
fsubrl
and
inc
loope
ffreep
in
dec
cmp
pop
xor
xchg
scas
push
loop
mov
sbb
aad
jg
jo
imul
mov
xchg
add
cmp
les
jecxz
mov
adc
daa
js
cmp
inc
out
jl
test
cmpl
cmpsl
scas
mov
jl
mov
cmc
inc
movsl
mov
rcrl
mov
stos
xor
adc
dec
es
lock
ret
inc
out
jae
stos
cmpsb
mov
push
leave
pop
jp
cmpl
sub
repnz
fstp
push
aaa
enter
cmp
xchg
pop
pop
mov
push
push
xchg
outsl
jge
inc
movsl
out
nop
inc
fnstenv
jle
xchg
mov
comiss
xchg
cmpsb
nop
pop
push
stos
xor
jl
sti
dec
outsb
stos
loopne
decb
pop
mov
cmp
pop
mov
sub
sub
es
arpl
xchg
sub
iret
sub
lret
in
test
add
mov
adc
das
aas
sub
je
sti
mov
sbb
shrb
ss
out
lds
sub
xor
ret
mov
aaa
sbb
and
cmpsl
orb
aaa
int
xchg
sub
insl
cmc
lahf
cmp
inc
sahf
cmp
stos
ljmp
or
cmp
and
gs
mov
cmp
add
jnp
scas
daa
dec
mov
xor
and
xor
shlb
mov
lret
cmp
dec
into
mov
cmp
mov
stos
mov
add
add
sti
mov
xchg
mov
in
fstpl
sbb
xor
cli
lcall
jne
fisubs
sbb
les
sbb
jl
testb
fdiv
jne
insb
jecxz
pop
stc
mov
add
xchg
add
popf
jle
cmp
or
pop
testb
or
xchg
cmp
pop
iret
jo
xchg
mov
notl
pop
adc
xchg
not
test
je
jl
inc
jb
gs
aas
mov
jne
scas
mov
mov
fidivl
xor
jg
inc
sbb
repz
fmull
mov
mov
mov
incb
rcrl
shlb
push
movsl
mov
test
dec
loopne
repz
jmp
xlat
mov
xor
imul
sbb
clc
xor
in
popa
and
xor
and
cmpsl
pusha
cli
ja
and
inc
addr16
sub
stc
repnz
add
cltd
inc
insb
inc
cli
in
incl
cs
cwtl
dec
int
clc
fldenv
fs
sarl
push
sti
cltd
scas
jle
xchg
in
loopne
out
hlt
test
ss
setge
pusha
dec
sbb
mov
xor
mov
test
repz
neg
fs
fstpt
arpl
jb
cmp
pop
sub
inc
insb
inc
jne
cmp
insb
dec
mov
xchg
incb
xor
out
sarl
icebp
dec
and
movsl
jg
loopne
imul
icebp
rcrl
xor
mov
push
enter
insl
or
sub
andl
rclb
xor
daa
mov
jb
aam
lret
and
push
add
pop
mov
in
add
clc
mov
mov
mov
lret
loopne
lods
jmp
stos
xchg
push
sub
fdiv
pop
out
sub
xor
in
jg
test
in
movsl
pop
xchg
clc
dec
dec
and
pop
loope
ds
adc
leave
fdivrl
inc
test
jno
inc
pop
xchg
stc
push
mov
fs
jo
jge
pushf
sub
sarl
pusha
imul
or
mov
scas
inc
add
push
jl
push
out
sbb
insb
jmp
pop
lods
push
cmc
mov
lcall
daa
or
mov
imul
cli
mov
pop
sbb
xlat
xchg
cmpsb
fstpl
pop
mov
cs
add
push
loopne
movsb
arpl
imul
test
fisubrl
jne
jecxz
xchg
sub
cmp
add
sub
cwtl
mov
shrb
cwtl
cmc
push
mov
jbe
push
pop
in
jge
xor
and
gs
sub
sub
xor
dec
and
jp
push
jl
xor
aam
sbb
ljmp
xchg
ljmp
dec
mov
cmp
je
jae
cltd
lcall
push
das
lret
in
mov
ret
jg
sub
shl
mov
imul
push
aas
mov
mov
sub
daa
insb
sub
out
in
stc
shrl
cmp
lcall
push
push
das
test
jbe
push
pop
bound
out
jge
or
fwait
or
add
mov
adc
js
push
sar
xchg
jo
sbb
test
mov
sti
pop
ja
sbb
push
cmc
setg
fistl
mov
sti
cltd
mov
sub
cmc
jo
pushf
cmp
js
sbb
jge
sub
push
in
std
or
sbb
std
pop
mov
mov
int
cmp
gs
movsl
xor
scas
in
decl
jg
addr16
jno
daa
cmc
dec
mov
and
add
fildl
pop
std
xchg
fsubl
sbb
jo
pop
and
mov
sub
cmp
dec
mov
ljmp
pop
call
loope
push
pop
pop
mov
movsb
jb
incl
xor
clc
and
lahf
and
sbb
pop
enter
add
jl
data16
mov
jmp
stos
jmp
xlat
jb
je
cmp
mov
rcrl
mov
cmp
rclb
pop
jmp
add
clc
dec
mov
out
loop
fisttpll
sbb
mov
inc
cs
sbb
popa
xchg
jns
ret
mov
popa
and
fs
in
fst
or
and
mov
cmp
imul
lcall
jnp
jg
jne
xor
pop
xchg
inc
stos
shr
pop
and
xor
inc
js
push
call
pop
mov
lcall
jge
jns
fistl
jbe
int
cmp
repz
mov
mov
or
imul
pusha
push
or
out
int
fisubrl
gs
mov
adc
fadds
sub
fstpl
xchg
in
sahf
fcomps
inc
xlat
and
push
ret
xor
scas
dec
je
test
push
jmp
in
mov
out
fldcw
iret
lahf
push
fadd
jle
stos
mov
imul
inc
imul
sub
xor
outsb
je
push
mov
ds
add
xchg
mov
sub
mov
mov
outsl
sub
xchg
sub
inc
adc
add
add
cmp
fildl
pop
loop
popa
sub
push
and
icebp
lods
xchg
sbb
pop
incb
popa
cmc
sub
scas
pusha
push
fs
ret
pop
mov
pusha
das
out
sbb
stc
and
test
xchg
and
movsl
adc
sbb
xor
cmpsb
xchg
mov
cld
negl
add
jmp
call
sbbl
mov
jnp
xor
jnp
xchg
mov
inc
jecxz
das
test
int3
insb
sbb
arpl
movsl
sahf
cmp
pop
sub
rcrl
es
pop
cmpsl
mov
sar
jmp
mov
sbb
int3
into
xor
or
jle
outsb
fcmovb
es
xchg
icebp
fcmovbe
xchg
or
lods
pop
adc
idivl
les
pop
std
dec
dec
fdivrs
fsubrs
mov
lret
scas
pop
cmp
or
das
lcall
dec
mov
sub
lahf
leave
das
repnz
roll
and
cmc
int
add
jae
rolb
add
cmc
push
outsb
addr16
loope
fcomp
jnp
outsb
movsl
lret
imul
mov
repnz
test
jecxz
push
dec
push
enter
pop
loope
cmp
repnz
lds
repnz
jne
add
shl
xchg
cmp
mov
xchg
cmp
add
xor
jle
jae
les
jb
imul
fidivl
jne
cmp
and
fldt
pop
mov
mov
adc
fstp
jb
imul
cmc
pop
mov
loope
repz
sti
cmova
xchg
jnp
fsubs
push
cwtl
cmpxchg
lcall
pop
fldt
and
push
insl
lahf
stos
add
mov
les
es
movsl
scas
sub
pop
sub
jno
es
inc
xlat
aam
cwtl
push
pop
lods
xchg
out
jle
cmp
push
add
fidivrl
sahf
fildll
sbb
out
and
sti
and
in
cwtl
pop
lahf
and
rcr
lret
lahf
cmpl
scas
xor
popf
test
and
cwtl
fiadds
xor
out
aaa
cmpsb
and
lret
loopne
xchg
not
out
sbb
sub
dec
cmpsl
wbinvd
jb
sbb
pusha
loope
pop
mov
int3
ret
out
mov
sub
mul
mov
negb
push
call
dec
inc
mov
mov
test
or
les
inc
clc
or
idivl
cwtl
inc
adc
aad
insl
mov
or
pop
mov
std
outsb
mov
sbb
mov
inc
cmp
stos
fildll
and
movsl
xlat
pop
or
test
lock
jge
adc
mov
inc
lods
fwait
cs
and
push
lea
mov
or
js
cmp
push
jno
mov
push
xchg
fwait
mov
or
pop
loopne
rorl
ret
sub
in
outsl
add
jo
push
into
jecxz
xchg
in
outsb
inc
push
out
sbb
mov
jne
sub
sbb
aaa
sbb
dec
add
adc
cs
mov
add
inc
jmp
test
add
lret
jg
and
jae
fdivrs
pop
repnz
dec
in
jb
cmpsl
scas
ljmp
imul
inc
pushf
inc
dec
sbb
mov
push
cmpsb
push
add
push
loop
sbb
je
les
scas
enter
jb
js
movb
mov
xorl
fldenv
pushf
outsl
cmp
xchg
ljmp
push
xchg
xor
xlat
xchg
arpl
mov
test
inc
jno
pop
mov
das
fimull
adc
pop
pop
iret
mov
pusha
lods
mov
inc
sub
cmpsl
insb
fstl
imul
xlat
into
cmp
jns
mov
inc
sbb
push
imul
and
jae
scas
or
pop
test
jno
jb
aaa
aas
jmp
subl
or
fwait
jl
hlt
add
sbb
mov
cmp
adc
insl
in
mov
cli
std
inc
xchg
sbb
cmp
adc
aad
lea
shl
push
jge
sbbl
inc
sti
loop
pop
jnp
int3
mov
mov
xchg
mov
fsubrp
dec
out
cmp
jbe
sub
lds
mov
cmp
mov
push
inc
mov
test
cld
jmp
imul
movsb
out
test
adc
lods
aad
insb
inc
pop
adc
inc
in
adcl
inc
ror
xor
cli
mov
push
out
in
and
push
sbb
leave
push
shlb
xor
push
and
jne
sbb
xor
mov
out
rcrl
cli
repz
and
fcompl
lret
pop
pop
xlat
add
lods
mov
aas
lret
xlat
jns
lcall
out
mov
mov
inc
std
cld
mov
mov
or
jge
jge
aam
and
add
ja
mov
xor
pop
mov
stos
clc
int
stos
jge
aad
push
add
pop
push
sbb
mov
cmp
pop
aad
loopne
pop
push
mov
push
leave
push
mov
ret
popf
das
inc
notb
cmp
lret
imul
xor
jg
cmp
test
mov
pusha
pop
cs
sti
outsl
xor
push
jbe
jns
sub
cmc
push
lret
and
xchg
out
std
or
rcrb
out
or
imul
imul
mov
mov
inc
and
cltd
aas
enter
sarb
jne
xlat
xor
add
call
mov
adc
and
into
mov
rol
loopne
mov
stc
aas
adc
loopne
inc
xor
ficoms
adc
and
decb
sbb
sbbl
or
sbb
xchg
dec
add
test
sti
movsl
bound
xorb
fwait
jg
and
jnp
ljmp
movsl
into
in
test
sbb
or
sbb
jle
nop
jp
ss
enter
inc
loopne
shl
dec
jne
sbb
push
dec
push
gs
dec
cmpsb
aaa
negb
add
xor
push
adc
lret
cld
loope
decb
mov
outsb
rorb
dec
int3
or
in
nop
pop
jo
adc
mov
dec
push
push
aaa
in
je
lcall
jge
ljmp
push
sbb
nop
outsb
push
out
ret
clc
jns
imulb
push
lods
dec
xor
cmc
mov
cmp
adc
mov
add
inc
sub
lods
cld
mov
lea
int3
cmpl
stc
dec
jne
pop
xchg
mov
sbb
adc
pusha
pop
out
jl
xchg
stos
insl
mov
jb
insl
imul
cli
pop
or
jnp
mov
orb
aaa
mul
stos
lret
pop
cmp
sbb
loopne
iret
and
or
dec
sbb
inc
nop
ljmp
ja
pop
dec
aas
idivl
xor
xor
cli
call
inc
lret
mov
jmp
cmpsl
ret
jmp
mov
push
repnz
xchg
fimuls
inc
das
add
mov
lcall
or
jae
std
stos
call
fwait
das
push
jb
cwtl
pop
and
cmp
repz
xor
stos
cltd
add
paddd
jbe
mov
inc
fidivrl
les
call
add
in
xor
pop
imul
mov
add
cmpsb
int3
or
rorl
mov
pop
data16
pop
cmp
xchg
push
hlt
mov
dec
mov
cmpsl
out
lahf
push
lcall
mov
jae
xchg
shlb
sarb
cli
adc
or
push
scas
sub
xor
xor
sub
jo
clc
jnp
pop
sub
stc
fisttps
std
cmp
repnz
in
into
pop
cld
addr16
jno
scas
mov
mov
inc
cmpsl
inc
jb
inc
sahf
dec
int3
push
insb
out
je
pop
xor
pusha
push
inc
pop
icebp
push
jnp
mov
mov
enter
iret
mov
mov
push
loopne
sarl
mov
pushf
shlb
push
dec
mov
adc
jecxz
je
outsb
out
sbb
lods
ret
fldt
mov
leave
mov
xor
mov
mov
rorb
aas
notb
lahf
sbb
lea
loopne
or
mov
ds
ljmp
or
sbb
cmp
sbb
insl
daa
rol
cmc
cmp
pop
sub
movsb
adc
push
test
nop
or
das
ret
pop
mov
and
push
mov
jnp
xlat
mov
push
mov
mov
lds
aas
push
inc
clc
out
loopne
test
add
ja
xor
outsl
lahf
or
cs
xchg
inc
mov
mov
into
mov
inc
je
into
xor
xlat
or
ja
fidivs
fsubs
fsts
repz
adc
repz
dec
xor
dec
pop
mov
push
stos
inc
add
mov
movl
inc
dec
movsl
push
les
inc
pop
loop
or
aad
adc
push
inc
clc
lods
aam
and
in
cs
xor
hlt
inc
aam
fstl
pop
jae
mov
test
cwtl
js
stc
cli
leave
mov
mov
fdivl
gs
clc
and
fcomps
sub
das
mov
in
sbb
nop
addr16
xor
sbb
out
nop
pop
rcll
mov
push
jne
popa
or
xorl
jo
in
xor
cmp
xchg
ret
push
and
or
xchg
mov
adc
xor
aaa
aas
call
leave
xor
lcall
jo
push
mov
cmp
lret
pop
lods
rorl
sub
in
sbb
js
imul
bound
sti
and
push
add
mov
dec
sti
sbbb
pop
add
add
mov
setae
mov
arpl
or
int3
inc
cmp
int3
into
pop
sbb
jecxz
adc
xchg
mov
clc
ret
in
aas
add
sub
jae
pushf
ret
shlb
push
add
sub
sub
nop
push
mov
loopne
ja
jo
cld
and
enter
push
push
into
adc
incb
ja
loope
lret
jno
shrl
push
push
sub
cmp
jo
jl
call
stos
ror
into
fcomps
adc
js
xchg
xor
push
sbb
mov
icebp
push
sbb
jle
pop
pop
cmp
stos
gs
outsb
mov
rolb
jecxz
int3
push
leave
mov
sub
push
fldl
sub
xlat
outsb
jl
xor
call
jns
out
xchg
decl
loop
or
cs
mov
out
xchg
lahf
lahf
in
mov
repz
sub
lcall
mov
push
loop
addb
in
movsl
mov
inc
pop
out
lgs
xorb
adc
int3
sbb
xor
push
pop
cmp
cwtl
rcrl
stc
inc
xchg
scas
fadd
jnp
fstl
aam
ss
lock
cwtl
sahf
popa
test
fwait
inc
mov
pop
ja
add
cmpsb
inc
in
in
and
mov
rcll
mov
inc
outsl
inc
mov
jb
jg
les
mov
std
cmp
es
jb
sub
repnz
lods
ja
or
negb
cmc
dec
jge
add
pop
icebp
icebp
inc
push
scas
pop
xchg
xor
iret
imul
scas
cmp
mov
jl
in
ljmp
sti
and
cwtl
sahf
out
dec
xchg
mov
or
dec
jmp
xor
hlt
test
push
or
add
mov
xor
rorl
xchg
repnz
test
insb
xor
cwtl
xor
hlt
push
inc
push
insb
aam
call
sbb
divl
dec
jg
inc
push
cs
movsb
cli
sbb
push
mov
test
push
clc
faddp
lcall
inc
mov
aad
addr16
mov
test
test
cmp
mov
out
xchg
xchg
pop
adc
lock
mov
mov
mov
mov
shlb
mov
lds
push
mov
stos
mov
les
dec
pop
out
cmpsb
dec
fcompl
push
test
jae
loopne
pop
les
mov
mov
lods
mov
sbbl
pop
cmp
push
lods
scas
sbb
sub
aam
adc
repz
fidivrl
mov
inc
mov
shll
mov
out
cmp
mov
inc
mov
fcoms
sub
xchg
push
mov
loopne
pop
fildll
int
xor
pop
pop
add
dec
jmp
aam
das
push
jg
adc
inc
sahf
xchg
and
lcall
xor
xor
and
sahf
cltd
mov
mov
mov
pop
pop
js
inc
mov
xlat
lods
sahf
movsl
push
jno
mov
xchg
jae
ljmp
dec
adcl
push
faddp
aam
ficoml
add
pop
adc
aad
scas
ret
push
bound
xchg
lods
or
push
mov
push
push
addr16
jmp
xor
aam
stc
dec
sbb
cmpsb
clc
xchg
fcoms
pop
rcll
push
cld
lret
inc
out
gs
jne
pop
sub
das
js
mov
adc
aaa
int3
mov
adc
push
cmovl
scas
or
push
out
cmpsb
mov
jl
and
cmpb
inc
sti
add
fistps
pop
or
rclb
ljmp
shrb
lret
add
jecxz
pop
xor
ja
xor
sub
xchg
or
mov
pop
sbb
fnstcw
add
xchg
jmp
icebp
mov
mov
jns
mov
loopne
add
clc
or
mov
lcall
xchg
sbb
data16
addr16
imul
ss
ret
outsl
pop
mov
loope
push
lcall
dec
mov
cli
lcall
xchg
rorl
ret
ds
jne
mov
jp
adc
arpl
out
enter
mov
jecxz
sub
adc
push
add
xchg
inc
lds
adc
mov
dec
adc
cli
mov
push
mov
jge
jbe
pop
push
mov
loop
sahf
incb
pop
or
inc
stos
cs
cmp
add
insl
jmp
mov
jp
out
test
ds
outsb
push
dec
int
jmp
mov
sub
mov
inc
mov
pop
insl
rolb
loop
frstor
es
xchg
jmp
test
inc
jno
dec
mov
loop
sbb
ljmp
enter
in
mov
or
mov
push
mov
loopne
lock
in
ja
lahf
or
cli
jmp
out
add
jp
or
add
mov
cs
insb
ret
movsb
fmulp
mov
add
je
sbb
inc
sub
fldenv
roll
out
rcrb
xchg
jg
pushf
cmpsl
popa
mov
dec
cmp
in
je
cmovg
scas
and
jbe
scas
jo
arpl
mov
roll
pop
cli
test
subl
jns
fnstcw
scas
mov
mov
rcll
push
aaa
aas
lahf
inc
shr
es
dec
test
js
dec
fidivs
cwtl
ja
xor
test
mov
mov
xor
inc
sbb
sbb
pop
sbb
mov
filds
pop
mov
mov
cmpsl
bound
iret
push
and
shl
add
shlb
fsts
xor
sub
xchg
lahf
fsubl
testl
ja
data16
push
adc
insb
shrl
jmp
mov
sbb
cs
dec
xchg
and
pusha
int3
xchg
mov
xchg
push
test
xor
scas
mov
cmp
cmp
cmp
icebp
pop
sub
cmp
mov
inc
out
clc
loope
test
dec
cmpb
cmp
mov
or
mov
into
fistpl
ror
repz
aas
movsb
cmp
fsubrs
stc
xor
in
pushf
lret
mov
loopne
pop
or
stos
push
ret
je
push
push
xchg
ljmp
aad
in
pop
vpcmov
jno
stc
lcall
lcall
jle
push
loope
xor
sti
cmp
jp
outsb
aaa
push
pushl
adc
fidivl
and
mov
fcompl
andl
das
fdivs
dec
inc
xorb
mov
mov
inc
and
sbb
cmpsb
xor
mov
cmp
cmp
fcompl
outsb
sbb
cmp
pushf
pusha
clc
loope
fnstcw
jmp
bound
arpl
jnp
aam
sub
mov
in
insl
mov
clc
aad
jnp
jge
inc
pop
and
sbb
loopne
jp
movsb
add
and
ljmp
adc
or
imul
popa
pop
mov
push
lods
or
into
pop
lret
fsubr
inc
xchg
aad
cli
mov
stos
xchg
in
xchg
jmp
ljmp
mov
adc
mov
cld
mov
in
cmpsb
std
push
pushf
adc
cmp
adcb
add
inc
sti
add
in
push
pop
push
test
aaa
jne
and
xchg
dec
movd
popf
push
inc
pop
mov
fs
lock
dec
shl
aas
fsubl
add
pop
adc
xor
call
scas
cld
lods
jo
pop
cmp
pop
push
jo
sub
or
sbb
outsl
push
and
dec
popa
pop
je
dec
jbe
lret
inc
mov
pop
xchg
pop
sub
jbe
in
jmp
or
mov
lods
test
test
or
fistpl
call
sti
xchg
addr16
pop
bound
sub
sub
out
add
xor
push
cmp
stos
and
ja
xchg
inc
jns
daa
mov
xor
rorb
adc
movb
daa
sbb
nop
cmpsl
adc
add
xor
ret
mov
or
jae
pop
xor
imul
xchg
ljmp
popf
outsl
push
cltd
add
mov
add
add
fwait
out
add
jle
dec
dec
jnp
sbb
mov
outsb
fisttpll
push
sub
insb
sub
mov
xchg
ds
add
add
xchg
das
rorl
push
jmp
inc
or
loope
dec
or
jae
inc
lock
mov
jno
push
out
in
jmp
fbld
jecxz
out
pop
icebp
fisttps
lock
cmp
shl
fldl
mov
mov
xor
int3
ja
ja
push
add
mov
inc
push
xchg
push
sub
shlb
cmp
push
fwait
inc
test
xor
mov
xchg
pop
nop
lret
scas
pop
stc
sub
sbb
or
jno
pop
adc
xchg
pushf
outsl
lds
adc
and
push
hlt
mov
das
loope
iret
aad
or
pop
mov
decb
ss
xor
pop
cs
movsb
dec
pop
mov
pop
mov
xlat
mov
in
lods
and
out
push
xor
ss
xor
mov
nop
mov
in
orl
xchg
cmp
in
xchg
and
hlt
sub
int3
int3
add
or
pop
out
pop
xor
addb
mov
inc
mov
push
les
mov
adc
mov
ret
push
nop
adc
or
or
mov
into
int
cwtl
aaa
inc
push
cmc
fcoml
shrl
ret
push
fwait
out
jb
mov
js
rcr
xor
inc
fwait
sub
jmp
into
mov
jae
inc
mov
mov
mov
inc
sub
mov
cmp
mov
pop
iret
ret
xlat
roll
xchg
push
mov
incl
mov
sahf
ret
cmp
sub
cmpsb
mov
popa
add
add
data16
jmp
jge
jg
push
xchg
outsb
push
inc
dec
mov
ja
in
mov
pushf
test
inc
sbb
xor
dec
std
jge
hlt
and
call
dec
orb
or
adc
xor
inc
cmp
aad
cld
mov
mov
pop
pop
mov
push
sbb
iret
mov
imul
cmp
cmp
xchg
in
ss
xor
in
pop
scas
repz
pop
in
inc
imul
orl
inc
pusha
lcall
xchg
aam
cmp
insl
lds
push
inc
mov
push
lds
sti
push
mov
int3
outsb
stc
iret
pop
movsl
sarl
inc
dec
in
mov
cmc
stos
cmpsb
aad
dec
hlt
fists
lods
gs
shll
push
and
sbb
sbb
mov
xor
int
faddl
fwait
cmp
mov
pop
dec
out
xchg
sub
test
fs
xor
idivl
inc
sub
pop
pop
insb
adc
sbb
subb
arpl
or
rcrl
inc
and
rcll
call
mov
pop
push
mov
xchg
xchg
aad
mov
shlb
and
cmp
jp
lods
mov
stos
jns
or
adc
add
add
xor
fwait
lods
or
add
sbb
pushw
inc
push
cltd
test
mov
popf
out
movsl
mov
stos
fdivs
movsl
pop
std
inc
sbb
sbb
pop
jge
xchg
xchg
xor
and
in
icebp
jne
aam
cmp
scas
cmp
nop
xchg
scas
mov
push
push
ja
movsl
and
mov
subl
push
mov
mov
arpl
jl
lret
and
and
mov
es
fxch
bound
pop
add
jb
or
test
and
or
cmpb
das
or
dec
mov
inc
mov
ljmp
das
movsl
scas
mov
sti
pop
sbb
je
mov
pop
jns
and
testl
aad
cmp
and
loopne
xchg
stc
cwtl
cli
jmp
jae
ljmp
in
inc
mov
cmp
lds
ret
inc
add
cmc
add
and
and
std
dec
xor
mov
dec
arpl
int3
inc
ljmp
test
mov
lret
sahf
sbb
push
dec
hlt
dec
mov
mov
cmpsl
sbb
aam
nop
pop
repnz
pushf
clc
mov
lods
repnz
cli
fisttps
cmp
fdiv
sbb
and
sahf
push
mov
adc
push
cmp
ljmp
inc
ja
fiaddl
fwait
jmp
push
inc
jb
sub
dec
push
outsl
popf
mov
std
push
jp
fs
repnz
in
add
ret
pop
rcrl
mov
or
pop
lds
mov
inc
push
out
sbb
mov
jbe
cmp
adc
outsl
mov
rcr
and
mov
xchg
and
cwtl
loop
in
inc
movsl
sub
mov
adc
mov
iret
mov
inc
push
jmp
cmpsl
jle
jg
cmp
das
cltd
mov
mov
cs
xchg
in
stos
mov
lret
cli
dec
addr16
je
cmc
je
or
insb
gs
or
dec
sub
imul
mov
int
int3
mov
jle
cmp
hlt
push
xchg
pop
sbb
xorl
enter
sub
loope
jecxz
fidivl
test
into
mov
fninit
data16
sub
imul
pop
les
insl
repnz
push
adc
push
inc
push
js
lcall
push
sti
adc
lret
das
ss
xor
adc
insl
ror
jnp
mov
add
pop
jo
dec
and
insb
cmp
cmp
xchg
adc
incl
mov
test
arpl
es
dec
add
push
xchg
push
enter
dec
aas
mov
mov
xchg
xor
testb
mov
rcr
jmp
add
scas
push
xchg
mov
movsl
lock
fnstenv
or
movsb
data16
std
insl
mov
pop
rcrl
lea
lods
cmp
mov
and
insb
adc
xor
in
mov
jge
rol
popa
mov
inc
mov
pop
mov
inc
sbb
jne
sub
jp
pop
push
and
cmp
mov
je
scas
loop
pop
push
mov
sbbl
popf
fs
in
in
and
mov
out
ret
sbb
cmp
pop
mov
outsl
fcmovu
mulb
jp
or
cmpsb
adc
fsubl
je
dec
imul
jmp
push
add
in
cmp
jl
sub
cmp
gs
insl
mov
bound
aaa
push
lock
pop
faddp
rcll
aad
mov
fs
aaa
fisubrs
arpl
fisubrl
std
dec
pop
in
repz
jge
fsubrp
pop
pop
xor
ja
mov
fwait
into
ffree
mov
push
jmp
push
adc
pop
pop
gs
push
push
jge
scas
sub
shl
xlat
inc
mov
push
mov
aas
cli
loopne
scas
xchg
fwait
sbb
jb
mov
jp
mov
and
cmp
into
inc
push
ljmp
mov
mov
test
je
dec
or
mov
out
sub
scas
fwait
sbb
xchg
pop
dec
in
or
andl
adc
xlat
mov
mov
mov
jae
aad
jl
dec
sbbl
sbb
dec
call
pop
hlt
sub
ss
jl
lods
sbb
pop
xchg
mov
jmp
repz
cmpsb
mov
pop
mov
and
jmp
arpl
pusha
lods
add
frstor
push
jmp
jne
in
fs
inc
add
jge
dec
sbb
inc
sbb
sbb
push
mov
jl
fs
out
lods
xchg
push
in
shrl
rol
pop
ret
lcall
cld
lods
mov
fadd
sub
imull
mov
iret
aaa
mov
or
mov
xor
mov
arpl
sub
ds
subb
repnz
xchg
pop
fisttpll
sti
loopne
or
ljmp
mov
cmc
push
mov
faddl
adc
mov
jns
jno
sahf
scas
cld
adc
loopne
dec
aaa
les
jns
mov
out
sub
loopne
aam
pop
jnp
push
ja
in
sbb
and
movsl
shll
iret
stos
xchg
sbb
xchg
int
jg
subb
pop
pop
daa
cmp
mov
xchg
cmp
mov
mov
fdivrl
loope
or
stos
xchg
cltd
movsb
cmp
and
add
clc
inc
ja
add
mov
inc
mov
lsl
mov
jae
and
imul
sahf
les
mov
rorl
mov
sub
mov
mov
pop
ljmp
mov
mov
lret
das
lret
push
xor
enter
sbb
sarb
adc
push
xor
hlt
cmp
sub
mov
mov
into
lock
andb
push
idivb
fadds
or
lods
fidivs
cwtl
mov
xor
rol
pop
xchg
leave
push
pop
fmulp
and
jne
sbb
inc
xchg
push
pop
adc
addr16
cwtl
add
xchg
stc
cli
jbe
dec
mov
jnp
int
sti
ss
test
mov
sbb
jbe
adc
or
cmp
jnp
in
jl
rolb
lods
iret
movsb
cmp
lret
inc
cmpsb
push
test
les
mov
jae
inc
cmp
jno
pop
aas
dec
ret
cwtl
call
xor
push
popa
jge
test
loopne
outsb
pop
cmpl
orl
pop
hlt
or
sti
mov
lds
neg
fidivs
fwait
jge
or
daa
jg
jg
jg
pop
ficomps
lahf
mov
xlat
jb
lret
test
lds
fildl
int3
enter
aam
push
jle
cmp
mov
dec
pop
fst
sbb
jl
js
test
pop
mov
pushw
pop
and
add
ret
fmulp
in
ret
inc
push
push
dec
xchg
pop
icebp
jg
inc
into
pop
jne
inc
xor
inc
je
cld
add
jp
les
jp
ja
or
hlt
or
lods
push
push
mov
or
fisubrs
sub
sbb
inc
scas
cmp
fwait
loop
sub
fistpll
fnsave
push
xchg
sti
test
or
or
insb
add
shrw
pop
and
mov
or
daa
mov
fmull
mov
pop
jmp
sbb
adc
or
loop
mov
bound
popf
jb
mov
adc
into
mov
clc
jp
stc
popa
push
adc
adc
ljmp
sti
mov
jle
xchg
jbe
push
sahf
jae
pusha
dec
out
adc
addr16
fcomi
push
sub
stc
loopne
pop
xchg
cmp
mov
sbb
je
daa
fnstsw
int
repz
gs
arpl
or
std
into
jns
lret
xlat
mov
jne
testb
movsl
repz
and
xchg
adc
lock
movsb
mov
xor
jbe
xchg
test
xchg
dec
jmp
jo
addr16
sub
repz
inc
mov
aad
clc
hlt
cmp
mov
lds
ja
insl
outsb
jo
aaa
fmull
mov
and
fistpl
andl
jo
lea
sbb
out
icebp
loopne
mov
inc
pop
fistps
add
call
insl
lahf
adc
push
ds
mov
lods
sbb
adc
jnp
cmp
leave
jmp
jns
jg
mov
mov
add
jmp
aam
and
push
rcrb
adc
dec
jae
or
in
fstl
xor
adc
adc
inc
dec
pop
push
fsubr
sbb
sti
pop
mov
int
dec
shrl
add
imul
adc
es
push
sti
xchg
fstpt
and
fldl
arpl
or
int
mov
sbb
stos
xor
aad
pop
sub
sti
loopne
cld
iret
vmovaps
jecxz
call
pop
sub
pop
xchg
xor
rol
loopne
shl
fldcw
scas
int3
xor
mov
nop
shl
jmp
negl
in
divb
push
and
std
push
sbb
aaa
andb
adc
in
pop
iret
movsl
xchg
repnz
sbb
xchg
in
xchg
dec
cmpsb
mov
inc
xor
jmp
and
dec
pop
iret
dec
shll
fmull
cmovno
sub
inc
adc
stos
fisubs
jne
inc
testl
push
jl
pushl
inc
arpl
jle
or
and
or
inc
or
sbb
inc
cmpsl
shlb
sarb
loopne
int
or
popa
push
out
xchg
cmp
cwtl
mov
inc
mov
nop
sub
sbb
fs
push
add
pop
fneni(8087
and
je
fs
adc
adc
pop
stos
adc
push
dec
outsl
in
mov
sahf
pop
cmp
pop
inc
xchg
mov
inc
cmpl
test
mov
fwait
loopne
xor
outsb
adc
cmp
sahf
push
pushf
inc
idivb
xor
test
jecxz
mov
pushf
fs
xor
hlt
sahf
mov
loopne
movsb
loop
adc
push
int
mov
ss
test
cmpsl
mov
pop
pandn
xor
mov
scas
test
add
jb
adc
aad
daa
jns
loop
out
xor
xchg
push
pop
ds
xchg
out
cli
push
outsb
xor
es
push
popf
insb
out
pusha
addr16
in
or
mov
subb
mov
shlb
push
jecxz
xchg
cld
and
sub
js
dec
ljmp
push
lea
mov
ds
cli
test
pop
mov
push
lcall
fwait
ret
test
jl
push
sbb
dec
xchg
movsl
popf
push
fbstp
negb
scas
dec
mov
pop
mov
xor
add
xchg
inc
inc
test
imul
insl
mov
mov
ja
pushf
add
pop
rol
inc
stos
push
rorb
pop
loop
fstpl
cltd
xchg
add
xchg
cmp
ret
sbb
mov
mov
inc
dec
shr
cs
xchg
adc
and
add
fbld
pop
pop
divb
push
out
xlat
xchg
xor
xchg
sub
mov
call
mov
mov
cs
adc
fadds
enter
popa
push
shll
push
fiaddl
jecxz
and
ret
fdiv
shrb
loope
add
repz
push
aad
shlb
xor
push
icebp
sahf
mov
or
and
cmc
dec
cmp
fldt
mov
sbb
add
cmp
in
sub
cmp
scas
pop
sbb
or
lods
int
push
loopne
roll
push
das
ja
stos
int3
into
mov
negb
imul
push
dec
and
lock
stc
nop
data16
cmp
ja
shll
adc
or
imul
mov
xchg
insl
adc
push
or
push
lods
lret
sbb
dec
add
in
out
mov
test
std
stos
ja
outsl
out
fwait
dec
cltd
in
negb
in
inc
aad
mov
and
jne
les
sub
cmp
lock
mov
push
fistl
clc
dec
pop
pop
cld
nop
jo
or
push
xor
frstor
xor
cmp
js
sub
int
cmp
add
lret
inc
xor
ljmp
les
rclw
je
dec
pop
inc
loope
fdivr
adc
push
arpl
dec
shrl
loopne
js
and
in
pop
fisubrl
dec
add
sub
out
mov
sti
enter
xor
addr16
push
xchg
mov
insl
jne
xor
jae
cltd
and
rcl
jne
daa
xlat
jmp
inc
fsubl
leave
mov
lea
leave
sbb
faddp
dec
mov
inc
scas
cmpsl
enter
sub
test
insb
push
cmpsl
or
mov
and
bound
mov
fidivrl
xchg
jmp
xor
fbstp
mov
and
loopne
movsb
cmp
ret
ljmp
jg
insb
dec
sub
scas
loopne
lret
xchg
loopne
imul
push
push
mov
cwtl
cli
mov
rcll
jp
lret
je
andb
arpl
cmp
mov
out
aam
cmpsb
xor
ficomps
gs
push
add
lds
leave
cmp
push
pop
ds
push
sub
inc
and
push
xchg
lods
imul
push
test
dec
ror
shrb
mov
fwait
loop
fildll
jne
cltd
sub
and
jmp
pop
push
lea
pop
mov
pop
pushf
je
xchg
lods
sbb
test
inc
push
mov
cwtl
sarl
mov
mov
adc
jecxz
das
adc
testb
inc
fscale
movsb
xchg
pop
dec
sbb
roll
mov
test
stos
mov
push
mov
lods
jmp
sahf
popa
push
push
jnp
fnstsw
sbb
icebp
jmp
fiaddl
jg
adc
sbb
xor
adc
or
clc
pop
sbb
pushf
jbe
sbb
out
xor
cli
inc
mov
lods
pop
clc
push
add
nop
pop
sbb
dec
fistps
xlat
imul
jne
sbb
in
cmp
xchg
test
std
mov
dec
xor
outsb
sub
test
add
loopne
je,pt
std
js
and
sbb
sbb
xor
stos
mov
pop
gs
negb
sub
les
mov
xchg
mov
adc
xchg
mov
mov
fs
and
dec
sub
lds
or
jb
cld
ljmp
add
imull
push
movsb
fcmove
push
mov
or
fimull
cmpsl
sti
rclb
sub
cld
lret
mov
pop
icebp
into
insb
cltd
and
xor
inc
out
inc
or
pop
xchg
fdivs
out
fs
cltd
jg
lret
and
pop
cmp
pop
sti
stc
and
inc
sti
xchg
sbb
enter
ret
js
jp
adc
push
scas
xchg
ljmp
add
add
mov
and
jp
mov
sub
jecxz
xor
ss
pop
xchg
inc
jge
fsubrl
jno
pop
cmp
mov
and
js
cmp
xchg
dec
xor
xor
frstor
jecxz
in
dec
out
dec
sbb
adc
mov
in
adc
ret
fwait
sub
jnp
dec
mov
cmp
aaa
in
adc
add
rcrb
sahf
push
imul
data16
fistpll
adc
cmp
pop
ret
push
cs
fwait
mov
aas
sub
lret
xor
stos
adc
imul
loopne
cmp
mov
cs
int
std
sahf
ss
mov
mov
fildll
or
data16
mov
out
lods
lods
int
out
lds
jle
sbb
arpl
push
fldenv
test
sub
das
cmovs
adc
sbb
jecxz
mov
and
test
and
jmp
sbb
cwtl
and
sbb
imul
push
xchg
adc
test
dec
cmp
mov
lahf
test
pushf
pop
adc
mov
insl
and
and
test
cmp
mov
cmp
lea
push
jge
adc
inc
sub
xorb
aad
or
outsb
pop
jge
mov
mov
xchg
xlat
in
nop
roll
mov
push
mov
lcall
out
in
sub
stc
shll
mov
push
pop
add
loop
stos
jb
insb
imul
lret
push
dec
sbb
enter
cmp
cmp
fdivl
inc
out
add
lret
loop
pop
dec
cmp
sbb
and
add
fcmovne
sbb
test
cli
mov
int3
or
jge
jle
outsl
mov
out
sbbl
adc
in
inc
call
dec
cmpsl
insl
cmp
insb
and
push
int3
push
push
insb
mov
or
sbb
cmp
jne
mov
test
cli
es
mov
daa
mov
push
inc
jnp
ret
or
mov
loope
sbb
hlt
or
sahf
pop
loop
mov
pop
inc
push
ljmp
cld
repz
sarb
jbe
push
sub
or
mov
xchg
shlb
leave
outsl
adc
jp
shl
dec
xchg
cmp
sbb
mov
sbb
sub
movsb
leave
ret
inc
fisubrs
xchg
cmp
bnd
sbb
xchg
dec
dec
imul
movb
es
push
jbe
adc
in
xlat
int
pop
xchg
js
notl
lods
mov
in
jge
cli
js
jmp
loopne
dec
and
jl
psrad
mov
fwait
les
lcall
int3
mov
ja
cltd
xor
pop
adc
lret
inc
push
jl
les
push
fwait
lcall
faddl
jne
and
push
bnd
sub
push
mov
jle
or
inc
xchg
dec
sub
pop
fldcw
mov
test
scas
pop
xor
decb
cmpsl
jge
inc
jo
pop
frstor
out
pop
mov
jp
xor
ret
sub
aad
lahf
cmc
mov
jne
push
or
aas
sbb
icebp
popa
add
in
lock
int
push
enter
int3
sub
movb
and
test
jp
xchg
mov
pop
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
xchg
xlat
cmp
int3
je
inc
xor
ds
les
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ss
test
repz
out
mov
sbb
test
stc
mov
sbb
pop
stos
scas
icebp
jmp
sbb
jg
out
in
loope
mov
push
inc
xor
ds
data16
fnstsw
in
jmp
sub
push
jmp
jns
jecxz
out
push
je
bound
bound
add
sub
pop
test
lock
mov
inc
movsl
lods
in
repnz
test
or
mov
jmp
sbb
mov
mov
push
je
or
nop
repz
shrb
xlat
ds
test
inc
xor
ds
test
pop
jne
jb
filds
inc
xor
ds
fs
dec
xor
and
scas
lret
int3
je
inc
jae
ds
test
inc
xor
test
inc
xor
ds
subl
xor
mov
xor
xchg
lret
fdivl
xor
faddl
inc
xor
ds
test
dec
xor
inc
mov
inc
xor
ds
test
inc
xor
ds
rolb
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
push
mov
test
inc
and
ds
fadds
add
xchg
jno
faddl
inc
sar
mov
stc
mov
adc
inc
xor
int3
mov
jo
inc
xor
ds
test
inc
xor
jmp
lret
je
inc
xor
out
mov
xchg
inc
xor
ds
test
pop
xor
pop
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
ds
test
inc
xor
mov
mov
push
xor
in
pushf
push
test
out
ficomps
jp
bound
ret
jne
fbstp
dec
scas
call
es
ds
adc
jl
scas
lahf
lea
dec
fisttpl
lds
add
jle
repnz
dec
fistl
fnstcw
push
mov
and
bound
pusha
ret
jle
cli
loopne
and
dec
lock
loope
inc
call
mov
daa
push
addr16
xor
cmovns
and
clc
dec
push
fldl
aam
pop
jmp
sub
inc
xor
xchg
mov
cld
outsb
push
aas
xor
and
sbb
ja
jg
popf
insb
dec
imul
lcall
adc
testl
sub
inc
cld
scas
lods
xor
xchg
pop
or
sub
jbe
or
loope
inc
xchg
adc
and
fbstp
inc
lock
cld
outsb
jl
arpl
add
xor
insb
jae
mov
pop
sbb
loope
daa
xor
dec
decl
in
or
test
xor
cmp
pop
cmp
mov
repz
cmpsl
add
mov
aaa
sub
mov
out
loop
add
push
out
daa
add
cmp
loopne
sbb
cmp
xchg
and
and
es
inc
fiadds
pop
mov
or
mov
pop
dec
add
cwtl
ljmp
sahf
dec
xlat
sbb
sbb
xchg
and
scas
cmp
push
cmp
or
sub
xor
sub
fistpll
push
cs
jnp
mov
push
inc
mov
sbb
into
sti
xchg
sarb
repz
sbb
mov
cld
fidivrs
add
jg
mov
dec
adc
mov
shll
cmp
jae
call
jge
fidivrs
ds
lods
adc
sbb
fcmovu
and
stc
pop
dec
pop
bsf
push
jecxz
mov
cmp
sub
push
shr
xlat
mov
scas
aad
in
loopne
jmp
lods
lock
repz
ja
cs
mov
dec
mov
loope
mov
dec
inc
pop
fistpll
push
inc
xor
push
mov
pop
jl
xchg
mov
bound
dec
push
lods
push
jns
sahf
out
push
or
add
xor
add
jb
lcall
and
and
add
and
les
push
xor
loop
adc
pop
sbb
jns
les
int3
inc
cmpsb
hlt
test
push
je
gs
sub
stos
xor
mov
icebp
ds
mov
xor
dec
ret
jl
into
fwait
dec
frstor
mov
rcrl
xchg
sbb
add
in
pop
cmc
fstps
into
xchg
test
ds
xchg
inc
mov
cmpsl
adc
lock
test
stos
jmp
stos
xchg
fabs
cmpsb
push
or
fstpl
cmp
lds
dec
andb
lods
dec
jmp
jmp
xchg
out
xor
mov
cmp
xor
sub
xor
mov
ljmp
int
stos
mov
push
movsb
xchg
js
jb
dec
test
add
test
out
das
pushl
mov
aad
xchg
test
std
gs
sti
mov
mov
fdivrl
mov
les
inc
jg
daa
mov
pop
insl
pushf
lret
dec
push
movsb
fcmove
loopne
sub
scas
push
aas
sub
in
mov
jg
or
add
rclb
outsb
cmpsb
insb
mov
push
mov
or
mov
jmp
rcrb
xchg
mov
lods
rep
inc
sarl
mov
leave
daa
fdivl
mov
push
cmp
pusha
cmc
nop
sub
adc
xor
std
adc
dec
and
rcrl
fistpll
xchg
nop
push
jne
mov
rclb
sbb
pop
pop
fsubr
hlt
xchg
mov
mov
jns,pt
inc
outsb
lock
jp
sti
aas
xchg
push
and
or
cmp
sarl
jg
jnp
adc
mov
dec
push
push
lods
cltd
mov
outsb
dec
mov
inc
and
or
xchg
sbb
pop
aam
into
xor
jne
out
adc
jo
test
pop
xchg
cwtl
pop
mov
fsubs
push
cmpsl
ret
adc
push
and
imul
and
fs
insl
icebp
or
popa
push
mov
mov
insb
fnsave
xchg
inc
andl
data16
mov
rcll
sahf
rclb
cmpsb
ret
and
jmp
jbe
inc
xchg
into
iret
movsl
cmp
aam
cli
mov
xchg
divb
mov
xorb
gs
or
jbe
aam
push
pop
clc
push
mov
daa
add
push
or
pop
outsb
push
fistpll
cli
and
shll
repnz
xor
lds
jae
push
push
jle
cmpsb
cmp
sbb
and
shl
mov
fstl
mov
rcrl
push
test
int
lahf
jae
jnp
fs
jmp
sub
and
lods
movsb
or
or
ret
daa
or
adc
mov
and
sbb
mov
loopne
dec
inc
jge
stc
dec
fcoml
or
loope
cltd
lahf
mov
jge
mov
xor
fisubl
xchg
adc
cmpsl
jg
sbbl
xchg
mov
jmp
int3
pop
mov
mov
cwtl
hlt
sbb
jbe
xor
xlat
loop
cs
pop
xor
in
fcomi
roll
das
pop
rcl
divl
pop
sbb
mov
xor
push
movsb
lcall
sbb
mov
jg
imul
push
dec
push
or
jne,pt
pop
outsl
fwait
pop
testb
arpl
hlt
das
loopne
or
sbb
dec
test
test
mov
pop
cmp
cltd
add
mov
xchg
and
jbe
cmpsl
push
push
add
xchg
int
sarb
xchg
cs
mov
cvtpi2ps
lods
pop
fdivrs
and
and
pop
ret
jae
xchg
xor
xor
mov
decl
fistpl
fs
mov
clc
jbe
mov
roll
xchg
fildl
add
jb
gs
cmp
and
or
inc
testb
outsl
push
outsb
ss
rcrb
pop
fnstsw
dec
jae
push
shrl
cmp
sarb
insb
call
mov
dec
mov
push
xor
push
sbb
jne
aaa
mov
mov
inc
jno
lea
ret
xor
mov
inc
inc
dec
iret
daa
cwtl
jo
dec
pusha
jnp
in
cltd
or
xchg
jecxz
inc
fstpl
mov
and
inc
movsb
push
outsb
jo
repnz
and
mov
outsb
repnz
call
popf
adc
mov
push
add
mov
push
jne
adc
jl
out
fldcw
and
add
out
and
jmp
push
stos
stc
dec
pushf
sub
rorl
pop
cmp
aam
mov
mov
hlt
dec
mov
jecxz
jmp
cmp
mov
fstpt
das
outsb
lods
fcoml
dec
mov
mov
cmp
dec
sbb
jno
repz
subb
fcomi
pusha
hlt
push
jl
cmc
stos
loopne
mov
sub
out
xor
mov
mov
shlb
dec
dec
inc
cmp
lock
dec
lret
mov
dec
mov
cld
adc
xor
dec
std
jmp
int
aaa
add
add
adc
inc
mov
out
lods
mov
test
leave
jp
mov
aas
imul
lahf
jmp
adc
lcall
sbb
popa
push
mov
dec
shrd
dec
std
mov
test
push
movsl
js
je
iret
push
incb
jg
and
lea
into
orb
lock
push
mov
mov
pop
add
fstpt
stc
fucomi
xor
sbb
adc
pop
sbb
jo
inc
cli
mov
data16
arpl
push
mov
xchg
sbb
lahf
xor
fistpl
push
dec
jno
popa
inc
cltd
dec
xchg
rcll
cld
adc
mov
lock
xchg
outsb
inc
std
or
loope
jne
out
js
imul
add
push
sbb
jecxz
fs
jmp
lods
xchg
flds
test
adc
sub
shrb
cmp
jns
jge
jecxz
dec
mov
or
lods
xchg
mov
dec
xchg
add
pop
fsubrl
xchg
fbld
push
xor
adc
mov
or
xor
inc
insb
jp
cwtl
fcmove
ds
stos
movsl
hlt
sbb
and
push
cmp
loopne
int3
sti
or
push
mov
iret
sbb
sbb
mov
push
fimull
popa
lret
xchg
pop
mov
negl
mov
daa
add
repz
sub
in
les
test
mov
das
out
mov
ret
aad
or
mov
jmp
push
cmpb
mov
mov
cmpsb
pop
icebp
ja
ss
and
mov
sub
push
xchg
enter
loope
xchg
std
adc
push
xchg
adc
pusha
fstpl
hlt
and
xchg
cltd
ret
int
shrb
outsl
xlat
cmp
aas
lcall
or
or
sbb
icebp
sbb
divl
sti
adc
dec
shrl
fdivp
aas
insl
jl
int3
inc
mov
nop
dec
ljmp
pop
sbb
mov
pop
repnz
inc
mov
sbb
xor
in
movq
ja
int3
stos
cs
and
pop
add
dec
jge
test
leave
adc
or
mov
jae
sub
xchg
es
inc
decl
xor
faddl
pop
roll
jns
cmp
push
cmp
push
inc
xchg
fidivrs
push
inc
popf
push
aaa
dec
out
adc
inc
pop
and
mov
pop
movsb
sbb
imul
add
pop
shll
fstps
mov
xor
xchg
jp
inc
jp
xor
mov
roll
movsb
inc
jge
hlt
jp
xlat
sub
cmp
push
iret
sbb
shrl
lret
cmp
adc
popa
push
pop
jle
xor
adc
in
gs
push
mov
imul
xor
sbb
sub
ss
add
push
lret
mov
inc
adc
filds
jnp
inc
icebp
push
mov
mov
pop
pusha
cmp
addb
mov
cmpsl
xor
insl
push
idivl
mov
sahf
fistps
dec
xchg
fwait
int
jne
mov
stc
mov
les
sbb
sti
cmp
lcall
mov
cld
sarl
sahf
arpl
pusha
scas
and
das
test
fisubs
pusha
cmpsb
pusha
pop
or
and
fld
arpl
xchg
push
ds
icebp
jg
mov
xchg
xchg
jle
sub
sbb
pusha
std
push
rolb
push
jmp
and
xchg
je
cwtl
cmpsb
sbb
imul
adc
mov
pusha
lds
lea
add
cs
or
psubd
cltd
shrb
icebp
aas
stos
roll
adc
jns
adc
in
clc
stos
test
mov
cmpsb
mov
cli
cmpsl
and
add
stos
mov
pop
push
mov
addr16
inc
dec
out
sub
pop
jno
and
icebp
mov
stc
xchg
jb
insb
mov
ja
sarl
cmp
pop
sar
sbb
mov
daa
or
jne
divl
mov
lret
push
sti
pop
mov
xchg
sarl
fbld
repnz
loope
loop
ret
mov
add
loop
mov
in
sub
fisttpll
jae
in
dec
dec
and
sub
popa
rcl
in
mov
cmpsl
dec
sbb
mov
pop
jg
out
pushf
push
cmc
mov
jl
mov
subl
xchg
jg
hlt
movl
mov
sub
aad
outsb
popa
or
jns
rol
mov
mov
scas
sbb
stos
hlt
inc
ret
aad
lahf
sarb
dec
and
or
sti
out
adc
dec
mov
call
shlb
aaa
mov
xor
testb
loopne
test
jle
hlt
cmp
sahf
fisubrs
xchg
dec
ret
fldcw
adc
imul
dec
pusha
repnz
cld
push
ds
adc
sub
mov
test
std
jl
sbb
clc
mov
push
int
paddb
and
mul
lret
push
jne
pop
cmp
inc
cmp
cmp
lods
jae
daa
xchg
mov
add
ror
rorb
cmp
popf
iret
or
adc
stc
imul
insb
ja
loopne
loop
mov
xor
jl
sbb
insb
dec
bound
push
lret
rcrl
test
cltd
mov
mov
pop
pushf
gs
outsb
push
mov
add
mov
jne
dec
push
mov
dec
inc
mov
adc
inc
sbb
cmc
rcrl
jecxz
aam
lods
inc
movsl
out
adc
rorl
push
lock
in
loop
frstor
mov
xor
andl
outsl
jnp
and
addr16
mov
xchg
in
aaa
in
adc
sbb
fucomp
enter
outsb
cmp
push
jmp
outsb
adc
dec
aam
pop
mov
pop
pop
add
nop
mov
mov
mov
mov
or
xor
movsb
xchg
lcall
mov
mov
daa
movb
and
popf
ret
cld
mov
repnz
lret
aas
adc
mov
shrl
clc
pop
add
push
sysenter
mov
xchg
cwtl
movsb
cmp
inc
and
out
xchg
int3
clc
or
cmpsl
push
andl
testb
cmp
lock
push
subb
and
out
pop
sbb
inc
lock
dec
adc
inc
mov
into
adc
lock
inc
pop
test
pushf
mov
decl
shl
nop
dec
stos
mov
jbe
movsl
push
ja
cld
xorl
into
and
cmp
pop
adc
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
