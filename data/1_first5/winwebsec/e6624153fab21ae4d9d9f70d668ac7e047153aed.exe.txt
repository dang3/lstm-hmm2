push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
movzwl
test
je
mov
push
call
add
call
jmp
call
or
push
les
sbb
push
mov
sbb
push
mov
sbb
push
mov
sbb
push
mov
mov
ss
mov
jo
test
cmpsl
int3
gs
jns
mov
js
xor
je
jno
cli
sub
test
lods
shll
xor
adc
sti
push
sarb
jnp
adc
arpl
jae
js
jbe
mov
push
das
sbb
sbb
sub
dec
jge
cwtl
loope
je
pusha
push
inc
fldl2e
mov
lds
adc
stc
mov
js
ljmp
mov
xchg
pop
adc
out
and
pop
jmp
je
sar
push
sarb
inc
fisubrl
sti
push
sarb
inc
fidivrl
dec
sti
push
mov
push
or
push
mov
sbb
bound
mov
mov
sbb
push
mov
sbb
push
scas
add
sbb
or
add
sbb
sti
addr16
mov
adc
pop
inc
mov
or
push
scas
add
sbb
or
push
sarb
inc
fisubl
push
sarb
jp
push
mov
sbb
push
sahf
or
add
or
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
xor
movsl
test
fisubrl
sti
push
rcr
fstpl
mov
dec
leave
add
movsl
sbb
push
int3
fstpl
movsl
sbb
pop
sarb
inc
fisubrl
sti
push
sarb
inc
cli
push
fldt
jns
sbb
push
mov
sbb
fisubrs
sti
push
sarb
inc
fisubrl
or
xchg
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fisubrl
sti
push
sarb
inc
fidivrl
sti
jge
fs
push
xchg
or
push
jecxz
pop
sub
push
or
loope
aam
adc
sti
xchg
lcall
inc
aam
and
xor
push
mov
faddl
ljmp
sbb
in
imul
xchg
sbb
adc
cmp
xor
movsb
inc
dec
pop
into
push
orb
cmpsl
dec
gs
xchg
fsubs
cmp
dec
mov
xchg
stc
dec
xor
push
add
xchg
lcall
jp
inc
xor
repz
cmp
movsb
push
call
test
push
enter
or
push
xchg
pusha
iret
data16
stos
push
push
arpl
xor
mov
and
or
mov
in
or
shl
inc
icebp
xchg
jnp
fwait
addl
ret
push
push
dec
mov
rolb
lcall
and
xor
or
inc
xor
pop
jmp
rorb
inc
and
lea
rorb
or
mov
mov
mov
lods
mov
mov
sti
mov
test
lcall
xchg
xchg
bound
jl
jae
sar
cmpsb
subb
cmp
mov
pop
and
and
xchg
nop
mov
aam
jge
notb
cmpsl
outsb
loop
and
outsb
lahf
add
cmp
mov
daa
icebp
lea
outsb
aaa
test
cmpl
pop
fs
xchg
sahf
rolb
mov
push
sub
and
or
mov
insb
adc
xchg
rcl
jmp
mov
add
into
mov
mov
aad
aas
pusha
popa
pop
push
xor
xchg
adc
sti
xchg
in
jecxz
ret
cmp
push
jae
movsl
and
call
fwait
test
popa
add
sbb
cmp
in
push
or
push
pop
jl
sub
xor
hlt
mov
add
add
xor
lea
pushf
or
in
sti
sar
and
or
testb
fadd
or
inc
icebp
add
mov
lock
xor
inc
inc
je
lcall
sbb
out
cmp
mov
lods
sahf
adc
lahf
gs
into
push
dec
pusha
rcl
xor
aaa
xor
sahf
add
mov
or
dec
fisttpl
cmpsb
ret
pop
out
add
xchg
push
inc
adc
pushf
fucom
or
cld
xor
cltd
pop
ficoms
movsb
ljmp
xchg
shl
movsl
jae
repz
sahf
in
mov
mov
stc
cli
adc
fldl
mov
xchg
aad
dec
jp
inc
mov
repnz
repnz
and
push
sbb
and
das
mov
xor
addr16
popa
xor
mov
adc
daa
cs
xchg
mov
pop
mov
stos
jmp
fwait
inc
fadds
xor
add
and
or
pushf
mov
push
js
ficoms
add
movsl
dec
decb
cltd
and
repz
andl
mov
mov
push
sbbb
xchg
das
int3
daa
loope
push
mov
dec
or
sub
jo
mov
in
cmp
adc
and
inc
push
dec
bound
test
dec
add
mov
sbb
rorb
xor
shrb
call
or
fs
or
ja
adc
iret
pop
add
adc
xor
adc
inc
shll
imul
ss
xchg
push
xor
lahf
sub
ror
add
and
aad
loopne
lret
sub
pop
xchg
and
nop
cltd
mov
jmp
pop
sbb
sbb
into
addr16
out
add
add
sub
cmp
sarl
clc
dec
adc
outsl
and
enter
ret
sbb
sub
inc
pop
lahf
pop
cmpsb
dec
rorb
sahf
gs
rcll
adc
test
in
test
lahf
xchg
adc
fcoml
xchg
lds
nop
add
andl
int3
addr16
cli
xlat
imul
push
sbb
iret
push
mov
loope
xchg
xorl
mov
add
test
inc
sub
xor
or
pop
inc
jecxz
xchg
lret
int3
cmp
mov
xorl
movsl
mov
sahf
push
adcb
aam
movsb
out
push
icebp
in
mov
mov
adc
divb
mov
dec
loope
lret
sbb
nop
pop
negl
xchg
xchg
shr
inc
xchg
cmp
jne
xor
xchg
jl
jmp
clc
sti
add
push
fisubs
cmp
push
xchg
nop
lret
push
out
jnp
xor
bound
daa
lock
sbb
pop
mov
push
leave
pop
push
jle
es
movsb
sbb
push
mov
std
js
into
aad
out
lea
and
fistps
int3
stos
mov
push
adc
shlb
loop
add
lret
test
push
test
into
repnz
mov
nop
sbb
xchg
sbb
pop
push
and
insb
mov
scas
inc
int
or
push
jno
pushl
mov
dec
jne
mov
or
adc
push
rorb
js
es
mov
push
in
and
and
xchg
fwait
in
cmp
add
cmp
sub
push
push
test
pop
pop
or
jae
xchg
mov
sbb
stos
dec
lret
int3
mov
push
xchg
and
ret
dec
mov
je
and
xor
and
nop
xchg
movsl
into
clc
fisubs
sahf
or
fdivr
stos
sbb
pushf
test
lret
pop
sbb
pop
jns
sbb
sub
push
lods
mov
imul
and
inc
sahf
inc
fdiv
mov
lods
mov
ljmp
mov
fwait
lods
ret
sbb
and
jno
pop
aaa
cmpsb
jb
loope
xor
dec
ret
xchg
dec
clc
loop
ficomps
incl
mov
xchg
sti
mov
xchg
in
outsb
mov
jle
mov
int3
dec
sti
andl
xchg
mov
filds
pop
jo
jno
nop
push
dec
loopne
adc
es
push
and
popa
das
out
xchg
xlat
adc
mov
dec
pop
mov
test
rcll
flds
les
mov
jb
cmc
adc
notl
mov
inc
or
adc
js
xor
dec
movl
shl
negb
clc
inc
aam
jno
out
xchg
jno
insb
jns
negb
dec
stos
add
mov
in
mov
xchg
mov
xor
inc
adc
mov
imul
sbb
mov
jb
jmp
fadds
adc
xor
sbb
iret
cwtl
mov
loope
mov
pop
push
mov
seta
lock
f2xm1
into
xchg
test
iret
insl
xor
adc
jge
mov
sbb
fdivr
faddl
sub
in
mov
imul
push
jnp
fistpl
sahf
shrl
cmp
jnp
jae
mov
call
push
inc
and
pop
int3
xor
inc
mov
bound
mov
test
mov
mov
dec
adc
and
mov
icebp
mov
mov
lret
push
fcoms
lahf
xor
push
pop
fdivp
sbb
fidivrs
and
lea
inc
adc
sahf
xchg
rolb
adc
adc
xor
add
ret
pusha
sub
cmc
push
adc
in
imul
jnp
and
outsl
jge
jno
icebp
scas
mov
jg
xor
bound
cwtl
dec
ficoml
push
gs
jns
sub
add
mov
out
pop
aad
jno
notb
int3
mov
jne
jns
fsts
sbb
nop
gs
xor
cmp
mov
ds
subb
lock
cmp
shrb
push
pop
je
push
jmp
inc
test
xor
into
push
sahf
sar
adc
and
leave
lret
loopne
loope
sub
mov
dec
arpl
in
pop
test
int
fistpll
add
jmp
lock
inc
orl
push
inc
pop
inc
dec
or
and
filds
xor
dec
xchg
aam
mov
lock
in
inc
inc
or
out
insb
lds
mov
sbb
cmp
xchg
fnstcw
mov
sub
xor
ret
push
dec
jbe
notl
repz
ss
push
add
jbe
pop
mov
dec
pusha
xchg
sub
out
mov
xchg
lret
stos
aad
call
aad
movsl
and
pop
popa
jle
enter
add
lods
lcall
pop
in
es
xor
nop
insb
mov
mov
xor
xor
mov
insb
outsl
cltd
mov
cmpsb
popa
test
ja
add
inc
and
fistpl
loop
call
icebp
testl
add
or
jb
pushf
push
je
inc
fistps
lea
cli
inc
jae
fs
aaa
lret
sbb
in
popa
xchg
mov
add
cmp
sahf
out
jae
popf
inc
int3
adc
jo
sti
jp
mov
mov
mov
clc
enter
stos
adc
mov
mov
shlb
mov
insb
xchg
imul
cmpsw
rcrb
sub
push
push
test
cmpsl
xor
popf
loope
jbe
xchg
mov
inc
add
inc
hlt
push
insl
inc
jmp
lcall
jbe
icebp
add
shll
out
adc
repz
fisubrl
jl
push
push
jle
sub
adc
scas
out
dec
sub
das
add
ret
xor
mov
mov
fcomip
adc
add
out
xor
je
or
push
outsb
shll
loope
jb
sub
jge
shrb
xchg
loop
sub
leave
mov
daa
cmpsl
xor
jo
sub
call
push
in
mov
je
fnstcw
arpl
in
push
mov
pop
lahf
dec
loopne
loope
mov
popa
xor
loop
mov
ds
bound
lods
xchg
and
js
xchg
jmp
enter
cli
mov
aad
add
push
mov
int3
xchg
sub
sub
incb
xchg
xchg
pop
push
mov
dec
dec
push
ljmp
sub
loope
xchg
imul
popf
sub
aaa
pop
xlat
test
scas
inc
std
in
sub
sbb
shr
sarb
cmp
out
mov
mov
test
insb
pop
xchg
jl
xchg
leave
jne
and
adc
repnz
mov
dec
ja
stos
sti
inc
dec
xor
movsl
aaa
loopne
mov
and
pop
xor
lret
xchg
push
stc
movsb
push
popf
lock
inc
ljmp
aas
je
sub
shrl
mov
into
aad
push
dec
popa
cs
xor
adc
scas
push
out
in
andl
repnz
inc
push
lea
add
sarb
xchg
jae
dec
aad
mov
repz
imul
cs
filds
inc
in
incb
aam
js
int3
pop
lret
int
xor
fildl
inc
test
cs
dec
outsl
adc
or
sbb
adc
scas
and
push
dec
jbe
push
xor
mov
stos
in
scas
mov
pushf
ds
pusha
lods
testl
jo
test
mov
mov
lcall
sbb
js
sub
pushf
jge
fistl
mull
push
cmp
mov
xor
jp
inc
das
xchg
loope
jg
adc
jne
pop
andl
cmp
sub
mov
dec
nop
in
or
std
js
mov
lods
mov
int3
jnp
and
fisttpll
lahf
lcall
jno
mov
jmp
mov
sbb
ret
incl
add
xchg
and
sub
cmp
lods
mov
pop
lods
pop
mov
repnz
adc
dec
adc
mov
lds
dec
cmp
mov
dec
mul
dec
into
insb
test
pop
dec
inc
pop
sahf
loope
pop
cmpsb
ljmp
int3
inc
pop
xlat
sti
cmpsl
dec
loopne
push
dec
push
cmc
jecxz
lret
jno
inc
out
mov
mov
iret
and
sbb
push
mov
mov
je
std
icebp
in
cwtl
push
cmovs
aam
cmp
stos
cmpsl
scas
loop
add
lods
cmp
mov
cmp
sub
aam
mov
push
inc
sbb
pop
lret
push
xchg
push
xchg
cmp
stos
decl
cltd
scas
mov
pop
and
cmp
add
ljmp
pop
jne
mov
mov
push
stc
icebp
and
in
test
and
leave
xchg
subb
in
xor
scas
lret
xchg
cmp
aaa
stos
jge
nop
insl
xor
cmp
and
xor
bound
ror
repnz
jg
push
out
outsb
inc
xchg
sub
dec
lods
sbb
js
aam
ss
frstor
leave
mov
inc
sbb
jbe
sub
xchg
and
push
adc
add
pop
fnstsw
jg
repnz
cwtl
clc
leave
lds
in
push
mov
mov
pop
jnp
sub
cmp
push
sbb
xchg
movsl
cmp
push
jg
jg
add
cmc
cmp
jp
loop
cmp
pushf
cli
push
bound
daa
mov
cmp
adc
push
outsb
fisubrl
pop
stos
stc
and
mov
shll
inc
xchg
outsb
sub
or
dec
xchg
dec
test
lods
xor
xchg
test
jle
in
jno
inc
loop
jnp
jb
movsb
pop
push
xor
or
imulb
pop
imul
into
test
mov
xchg
imul
loop
daa
mov
mov
mov
fcomp
into
movsb
sbb
fwait
comiss
dec
adc
fnsave
pop
dec
add
pop
imul
push
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
push
push
push
call
mov
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
shl
movsl
loop
lods
in
fisubrs
jnp
pop
mov
in
arpl
cmp
aaa
xor
mov
dec
fs
scas
in
pop
jo
out
or
xlat
lds
inc
jg
frstor
xchg
neg
cmpsl
or
fcoml
fadds
mov
dec
mov
and
sub
sarl
in
inc
daa
cltd
movsl
cmp
aad
das
or
mov
pop
xchg
js
test
in
or
add
cmp
push
mov
jl
test
pop
out
inc
xchg
aam
dec
mov
insb
imull
fcmovu
ja
repnz
dec
inc
repz
push
inc
inc
mov
push
add
push
push
mov
pushf
es
sub
xchg
lods
dec
sbb
push
shlb
leave
aad
pop
dec
sbb
shlb
jnp
les
cmp
inc
mov
sar
jne
add
popa
cs
push
sbb
inc
or
dec
inc
push
repnz
lods
popf
fs
out
push
sub
insl
bswap
xchg
iret
fsubs
jmp
divb
jae
bound
mov
adc
and
xor
dec
mov
xor
jae
add
adc
popf
je
jl
jmp
aas
in
dec
sahf
stos
shlb
mov
and
sub
repnz
or
or
cs
xor
dec
shrb
pop
add
stos
lock
mov
int
iret
out
shrb
sti
xor
cs
pop
arpl
jns
cld
cwtl
mov
bound
pop
je
xor
stos
dec
dec
sbb
sbb
push
cld
ljmp
mov
lahf
repz
push
les
dec
jp
mov
out
add
fsubrp
push
jb
ss
dec
lcall
in
cmp
js
out
imul
sub
icebp
dec
adc
xchg
cmc
adc
mov
rorb
pop
xchg
imul
cmp
incb
pop
sbb
js
out
aas
daa
adc
mov
xchg
or
mov
inc
imul
dec
imul
std
mov
lea
push
sbb
pop
cmp
xchg
imul
sbb
insl
test
imul
push
push
ds
inc
inc
icebp
adc
jmp
dec
inc
insb
mov
out
jle
ret
pop
push
jne
insl
ljmp
icebp
sub
push
imul
sarb
cmp
xor
inc
cmp
mov
incb
xchg
inc
push
stos
int3
xchg
shlb
mov
scas
test
dec
lahf
les
jg
daa
test
sub
filds
xchg
hlt
lret
xchg
pop
sub
ja,pn
dec
pop
lock
bound
mov
sti
or
and
or
cltd
cwtl
rolb
mov
outsb
sbb
nop
fnsave
cmc
dec
loopne
push
popf
dec
push
mov
shrb
mov
dec
aas
jge
stos
lods
inc
cmp
pop
pop
in
cs
push
fsubs
pop
stc
pushl
scas
add
into
sub
xchg
repnz
cmp
and
add
test
cmpsb
push
jge
jno
mov
fisubrl
sbb
idivl
mov
push
lods
movsl
mov
in
jnp
enter
nop
lods
dec
jle
or
arpl
mov
xchg
push
lahf
out
shll
test
dec
std
add
jne
popf
test
or
jmp
repnz
shl
mov
insl
mov
shr
aad
inc
lods
lahf
ret
outsl
daa
aas
scas
and
loope
sub
repnz
test
add
push
and
stc
xchg
dec
sub
jg
sub
xor
sbb
mov
pop
std
nop
cwtl
daa
sub
inc
or
xorb
jbe
pop
gs
add
dec
enter
mov
sbb
add
mov
jnp
inc
fsubs
push
jbe
shl
mov
pop
jecxz
xchg
lock
mov
mov
scas
cs
pop
arpl
push
fsubrp
int3
cmpb
pushf
mov
add
subl
inc
push
scas
test
fistps
outsb
or
movsl
nop
add
lcall
aaa
popa
mov
xchg
add
pop
or
into
mov
xor
inc
push
sub
std
jmp
call
add
das
xchg
and
dec
jns
insb
pop
inc
adcl
in
cmp
call
outsb
leave
sbb
push
int
int
mov
add
mov
lock
fwait
mov
test
rcll
imul
pop
int
jmp
cs
cmp
xor
mov
imull
adc
lds
push
xchg
pop
in
dec
push
test
insl
ljmp
orl
dec
je
mov
roll
mov
mov
scas
test
mov
jns
pop
int
sub
stos
cmpsb
adc
andl
xor
push
cmp
inc
ss
dec
out
negb
aaa
sub
jmp
sub
pusha
insl
es
lock
add
cmp
ljmp
test
push
mov
cltd
xor
in
fsubrs
lret
jae
cwtl
movsl
mov
stos
cld
xchg
lret
adc
or
push
jp
int
ret
inc
aaa
rol
lret
add
enter
shl
pop
pop
repz
mov
lcall
inc
out
push
mov
mov
mov
arpl
xchg
or
in
pop
jno
outsb
inc
divl
mov
cmp
add
insl
call
and
ljmp
ljmp
es
dec
xor
rcl
dec
lret
xchg
mov
imul
rolb
das
test
lret
sbb
push
outsl
sbb
pop
mov
adc
outsb
sub
jns
push
and
push
lcall
iret
sub
insb
cmp
cmp
sub
mov
push
jle
mov
mov
xchg
mov
pushf
inc
and
test
jb
pop
jo
cmpsb
push
mov
push
addr16
mov
sub
stos
xchg
mov
out
fsubl
dec
push
or
pop
test
sub
in
mov
enter
jg
xchg
scas
sbb
popf
or
daa
jbe
add
cs
cmp
cmp
fnsave
insb
inc
jo
mov
cmp
insb
stos
inc
and
iret
call
daa
daa
jnp
inc
lock
inc
je
mov
mov
lret
cld
cmp
xchg
loop
mov
pop
and
orl
in
pop
es
mov
pop
jg
lret
mov
nop
ss
ret
jnp
fildll
sub
and
pop
pop
sbb
inc
pop
daa
cs
pop
pop
pop
ljmp
aam
test
dec
out
jge
int3
add
outsl
sbb
jns
fcom
pop
cli
mov
mov
nop
mov
sub
jmpw
fsubl
iret
imul
subl
or
xor
insl
pop
addl
aas
add
or
mov
jp
in
ja
fmull
mov
stos
dec
jge
mov
push
movsb
and
in
cmp
rcrl
pop
es
call
sti
packssdw
sbb
mov
inc
pusha
les
cmp
adcl
loope
jnp
adc
mov
dec
gs
pop
sbb
sar
push
outsb
mov
out
imull
mov
cli
mov
and
faddl
repnz
xorb
mov
rcrl
xor
jb
ds
adc
lcall
mov
nop
xor
in
fsubrs
jb
mov
pop
dec
pop
ds
jne
pop
dec
and
lcall
and
std
dec
pushf
cltd
leave
mov
int3
and
pushf
hlt
inc
cli
jecxz
dec
cld
ja
and
insl
sub
dec
cwtl
lods
and
rolb
pop
repz
stos
dec
push
inc
add
lret
imul
and
popa
sub
push
scas
stc
fstpt
and
sbb
ror
sbb
adc
xor
mov
ds
xchg
ja
fimull
xchg
pop
stos
cmc
mov
push
mov
xlat
aad
dec
and
outsb
add
enter
jb
roll
cmc
addr16
add
xor
or
imul
addl
jle
in
daa
xchg
out
push
popa
mov
out
pop
sub
stc
jmp
and
inc
and
and
xor
loopne
push
xlat
pushf
stos
adc
insb
cmp
mov
xor
scas
mov
into
mov
cmp
adc
xchg
jecxz
push
subb
jo
fucomp
jnp
add
inc
dec
adc
out
pop
push
enter
test
pop
jg
rorb
xchg
jbe
ffree
shll
rclb
mov
aam
adc
enter
cli
fisttpll
add
outsb
imul
lods
jecxz
aam
mov
pop
jge
push
xchg
icebp
mov
jo
icebp
xchg
int3
add
jge
mov
mov
push
out
packssdw
or
sub
inc
dec
ret
mov
or
popa
mov
icebp
inc
push
jne
or
inc
fbld
dec
xchg
loop
push
jne
mov
sub
adc
sbb
imul
jl
pop
inc
in
add
clc
jbe
lahf
adc
jno
iret
jmp
mov
sub
adc
xchg
arpl
mov
lret
pop
xchg
push
pop
sbb
cmp
aam
stc
xor
push
imul
jge
adc
xor
add
cmpsl
sbb
adc
iret
adc
int3
int3
es
jle
jo
cmc
pusha
in
ret
daa
lahf
jge
and
ret
addr16
xor
inc
aas
cmpsb
sbb
or
push
cmp
aam
jne
call
push
sub
ficoml
mov
mov
pop
sub
push
scas
pop
push
xor
and
scas
pop
push
andl
rcrl
jg
cmpb
rcll
enter
mov
xchg
fcomps
and
xor
mov
and
mov
pop
xor
pushf
cmp
roll
mov
gs
mov
mov
in
push
ffree
dec
ja
inc
inc
repz
icebp
ror
notl
lcall
push
xor
fucomi
jg
jl
mov
ficoms
dec
mov
jbe
cmpsb
jo
xor
lods
mov
imul
adc
sahf
pop
push
testb
mov
ds
stc
push
sub
pop
xor
cmp
jns
std
fisubl
and
lea
mov
add
fcomi
xchg
cmp
dec
ja
stos
ss
add
jecxz
mov
push
dec
aad
push
into
cmpsb
in
cmp
mov
or
mov
sbb
leave
int3
cwtl
sar
cli
xor
push
xchg
xchg
xor
lds
aas
fcoml
shrb
imul
adc
sar
xchg
test
icebp
loop
xor
imul
or
xor
lods
pop
jle
xchg
nop
aad
adc
jb
fistpl
pop
out
dec
or
inc
or
cmp
sbb
enter
mov
aad
lret
and
inc
jmp
popf
inc
les
push
pop
mov
data16
xchg
aaa
sub
pop
add
out
xchg
mov
mov
jbe
lea
fs
popa
add
imul
negb
das
xor
and
xchg
jl
push
insb
movsl
mov
pop
push
call
push
gs
push
sbb
fldcw
cmp
repnz
hlt
andl
jecxz
stos
stos
ret
cwtl
push
rclb
pop
adc
inc
add
adc
jp
lret
jb
adc
lret
xchg
sbb
push
in
mov
xor
xor
ret
adc
ret
jns
pop
sar
insb
lret
add
lods
nop
ja
repnz
and
jb
mov
fstps
mov
push
outsb
cld
addr16
xchg
in
movsl
sbb
adc
lock
sub
mov
lods
lock
pop
xchg
test
jp
inc
mov
fmuls
cmp
das
sub
sbb
xchg
push
pop
fistps
sbb
jecxz
pusha
loopne
mov
iret
and
cld
in
call
push
ret
icebp
xchg
test
inc
jmp
stos
dec
dec
out
push
loopne
mov
outsb
ret
mov
dec
jno
add
fnstenv
xor
ret
iret
data16
out
pop
imul
or
xlat
dec
mov
dec
fiaddl
lret
cmp
fst
add
inc
mov
les
mov
pop
ret
mov
mov
loop
adc
pushf
sbb
xlat
fmull
inc
mov
sahf
xchg
nop
fabs
mov
repnz
clc
jg
dec
sub
into
dec
push
adc
stc
xor
jne
pop
cmp
fisttpll
out
jp
sub
adc
fisttps
inc
jle
arpl
ss
add
int3
movsl
sub
nop
mov
in
cmp
and
out
aaa
jb
daa
stos
iret
nop
and
stos
xchg
cmpsb
mov
jbe
outsl
in
or
bound
pop
mov
aas
sbb
xchg
xchg
sbb
push
jp
add
shl
or
inc
sbb
xor
lds
out
in
xchg
stc
cmp
adc
mov
xchg
dec
xor
add
dec
and
xlat
lea
jg
mov
and
int3
jns
and
sbb
ror
adc
mov
inc
mov
cmp
mov
mov
out
and
push
mov
imul
dec
imul
scas
lock
das
jge
add
int
mov
xchg
cmpsb
aas
lahf
in
sahf
ret
ror
pop
andb
inc
mov
cmp
xor
jne
imul
out
into
cmpsb
mov
inc
loope
jp
and
or
into
or
push
add
or
pop
inc
mov
imul
xor
ds
fincstp
mov
subb
xchg
mov
ja
es
movsb
push
sub
push
mov
mov
jecxz
loopne
or
stc
pop
inc
inc
mov
adc
add
inc
dec
test
xchg
test
in
xchg
adc
shlb
mov
xorl
sarl
std
and
fildll
jl
cs
nop
leave
sbb
mov
and
filds
iret
insl
setge
cmc
sahf
setno
test
ds
pop
clc
js
push
jae
adc
xchg
add
ljmp
lods
lahf
lods
dec
push
jno
data16
filds
dec
cmp
adc
pop
xor
xlat
fisubrs
fbld
mov
mov
adc
in
iret
outsl
xor
loopne
inc
scas
nop
or
sarb
test
or
xchg
es
mov
lods
pushf
ret
xchg
ja
pop
aad
out
in
outsl
dec
mov
sti
dec
mov
xchg
test
cmp
sbb
rorb
cmp
inc
and
test
fistpl
xor
sub
data16
xor
lods
rcll
jbe
push
jmp
sub
daa
jmp
dec
rcll
cmp
dec
xor
fwait
mov
stos
add
sbb
fists
mov
jb
fidivrl
jmp
mov
enter
bound
push
stc
adc
dec
sub
adc
jle
push
loope
outsl
stc
in
lock
ret
hlt
test
dec
ja
cs
shl
incl
push
mov
into
adcl
out
es
aam
pop
js
rcrl
cmc
ss
mov
adc
jg
lret
dec
loop
mov
push
jge
pushf
add
or
sbb
popa
aaa
add
inc
push
add
pop
clc
push
lea
jo
push
add
pop
jns
dec
loopne
pop
or
xor
jmp
push
imul
fcoml
xchg
jnp
pop
xor
sub
and
and
sub
ljmp
sbb
inc
mov
pop
mov
pop
int
mov
dec
mov
add
sbb
jl
sub
ljmp
jnp
mov
test
jo
int3
test
or
hlt
mov
xchg
dec
rorl
xor
addr16
andb
shll
cmp
lahf
hlt
shrb
call
sbb
or
or
mov
int3
dec
jmp
cmpb
insl
xchg
mov
scas
mov
out
add
imul
ja
push
xchg
insb
add
int3
push
mov
inc
daa
dec
cld
testb
add
mov
lcall
outsb
push
rcrl
or
adc
frstor
in
pop
dec
jle
mov
popf
out
lods
and
adc
push
pop
adc
sti
jg
ss
and
leave
and
shlb
pop
pop
dec
shl
fsubs
mov
int
movsb
pop
icebp
dec
mov
cmp
out
dec
adc
in
mov
mov
ds
sbb
cmpsl
loop
into
push
sub
fidivs
loope
or
jp
xchg
popa
test
dec
test
arpl
cld
cmp
iret
add
decb
icebp
and
jnp
or
xchg
enter
push
xchg
outsb
pop
cmp
cmp
xchg
fwait
xchg
inc
cmpsl
fnstcw
repnz
neg
outsb
ss
fsubp
mov
xor
test
cmc
rorl
in
jno
in
or
scas
call
inc
dec
popf
cmpsl
push
cmc
cmp
or
sahf
mov
mov
sbb
or
dec
stos
add
adc
fs
push
jb
xchg
xor
push
inc
out
test
jge
ret
aad
adc
sbb
dec
and
xchg
in
orb
inc
lock
jle
loopne
and
scas
mov
xor
xchg
mov
jg
adc
pop
rorl
out
cmp
lea
jecxz
scas
mov
push
dec
pop
clc
aam
xchg
xchg
and
loop
jns
icebp
xchg
icebp
std
cmpsb
scas
je
mov
jne
sub
xor
jp
sbb
pop
or
incb
jne
sub
fbld
into
add
and
leave
lea
test
cmp
inc
push
fimuls
jo
jl
sbb
out
test
sbb
mov
and
fildl
pusha
test
adc
hlt
push
nop
xor
inc
pop
lods
adc
jmp
jno
or
fsubs
sarl
and
stc
sti
xor
clc
xor
inc
cmp
in
in
fisubs
ret
cs
lods
mov
cmpsb
xlat
inc
clc
iret
outsb
shl
std
push
sub
pop
adc
es
cld
mov
loope
inc
and
sti
out
sbb
push
push
or
xchg
fbstp
mov
and
or
xchg
xorb
jecxz
cmc
or
jmp
mov
enter
data16
dec
pop
cwtl
pop
push
push
ficoms
mov
rcrb
repnz
popa
enter
aam
pop
cld
add
mov
andb
mov
cmc
pushf
pop
insl
pop
ja
lret
xchg
push
out
outsb
es
cld
sbb
sbb
mov
mov
mov
popa
cmc
lods
js
mov
mov
pop
cmp
lahf
scas
clc
fwait
cld
mov
mov
push
and
inc
and
xchg
orb
movsl
inc
lret
idivl
xor
sub
arpl
lods
cmpsb
cs
dec
sbbb
dec
inc
lret
arpl
mov
jno
push
gs
loope
or
add
int3
push
dec
push
clc
aas
std
cmp
jo
and
imulb
jno
pop
pop
inc
or
adc
or
adc
repnz
rcll
ds
inc
addr16
lods
std
repnz
andb
inc
xor
pop
mov
shrl
pop
div
ljmp
arpl
fists
push
inc
push
add
ror
sahf
or
das
notl
pop
jb
insb
outsb
inc
icebp
je
mov
test
add
gs
xchg
jb
addl
cmc
out
mov
clc
cmp
adc
fisubrs
lock
test
repnz
jb
out
mov
xor
out
fbstp
lret
mov
cmc
mov
lcall
pop
dec
scas
idiv
mov
lds
movb
test
sub
mov
rcll
mov
aad
add
lock
cmc
mov
ret
cmp
cmpsb
mov
int
adc
inc
and
shlb
sub
movsl
mov
fsubrl
cld
imul
xor
push
or
int3
add
and
out
mov
add
into
cld
and
jo
adc
fisttpll
push
sub
xchg
adc
xchg
cmpsb
sbb
subb
jnp
adc
imul
pushf
adc
rcr
sub
cmp
adc
arpl
dec
jp
mov
lods
iret
enter
sbb
outsb
stos
adc
push
xor
call
push
mov
imul
xor
pop
test
nop
int
mov
mov
addr16
int3
and
int
sbb
cmp
push
add
aam
mov
and
fsubl
jnp
popa
fldl
or
push
fucomip
aad
push
nop
mov
and
out
and
cmp
rcrl
mov
or
insl
and
or
rcrb
imul
mov
mov
add
push
scas
or
mov
add
stos
add
xlat
lcall
es
sub
sub
jecxz
or
in
daa
jne
imul
mov
clc
scas
push
dec
mov
jne
xchg
jge
pop
push
jnp
or
mov
inc
pop
cmp
push
mov
outsl
push
fistps
pop
cmp
and
jecxz
lret
ret
add
adc
je
cmp
adc
rcr
adc
cld
lcall
cmp
dec
or
jnp
dec
clc
adc
popf
gs
dec
in
pop
pop
sub
popa
cmpsl
jae
pop
add
scas
je
test
pop
lret
push
sub
hlt
lods
xchg
fildl
loope
iret
ret
xchg
pop
arpl
push
outsl
ds
jg
out
push
stos
or
rorb
movsb
jg
mov
sbb
lods
or
lret
mov
push
add
or
sti
aaa
in
jmp
popa
pop
mov
aam
cmc
pop
mov
movsl
mov
in
xor
arpl
iret
insb
push
sbb
mov
stos
stc
imul
stc
push
cmp
or
add
jnp
xchg
inc
addb
pop
xchg
jns
mov
test
mov
cmpsb
dec
push
rcrl
pop
insl
scas
mov
popf
or
pop
hlt
inc
aas
push
xlat
arpl
insl
cltd
rclb
pushf
loop
pushf
insl
insb
repnz
push
mov
iret
jl
sbb
mov
mov
xor
xchg
imul
mov
sbb
and
add
adc
or
add
cmp
mov
adcl
repnz
les
add
shl
test
xor
xchg
lret
mov
out
add
mov
push
fimuls
shlb
pmullw
bound
scas
clc
sbb
data16
popf
dec
pop
stos
inc
or
mov
mov
sub
scas
gs
aaa
fxch
aam
add
add
push
scas
dec
cmpsb
pop
xchg
dec
jb
sub
clc
js
sti
scas
js
shl
shlb
pop
push
mov
mov
pop
imul
sbb
sbb
fstl
inc
icebp
fsubrl
or
mov
mov
sbb
fwait
sbb
pop
in
sbb
flds
shrb
xor
bnd
lahf
fiaddl
cmp
dec
in
shlb
lahf
or
cmpsl
sbb
mov
popf
sti
cmp
out
loop
sub
and
xchg
or
mov
xchg
xor
pcmpeqw
dec
test
or
mov
movsb
scas
dec
cmp
cmp
cmp
xchg
nop
hlt
mov
add
jl
sbb
pushf
inc
cmp
dec
mov
mov
and
das
adc
arpl
mov
out
cmp
push
mov
mov
rol
pop
lret
add
cltd
pop
mov
loope
icebp
jecxz
xchg
xchg
lret
xor
pop
push
mov
jne
xor
iret
rorl
fbstp
ret
push
and
ret
sub
mov
int
shlb
and
jns
scas
mov
cmp
push
cmp
js
push
xchg
fcoml
in
sbb
add
mov
out
and
ret
inc
sbb
jb
pop
or
cwtl
lds
push
and
test
adc
sbb
imul
stc
mov
pop
jne
sub
inc
push
loope
or
testl
xchg
leave
adc
pop
in
mov
mov
pop
jae
or
scas
jns
test
fisttps
movsl
dec
xchg
daa
mov
iret
leave
push
cli
scas
loopne
sahf
mov
mov
fcomps
es
fcoms
inc
mov
pushf
shr
pop
inc
cmp
aad
test
movsl
jge
pusha
push
sbb
out
outsl
rol
in
cmp
mul
fidivrs
test
loope
sbb
pop
sub
mov
hlt
sbb
mov
jmp
cmp
push
fimuls
inc
andb
sbb
rclb
push
xchg
add
in
orl
jb
and
ret
rorl
push
fidivrs
mov
repz
mov
movsl
idiv
lock
cli
pop
mov
cmp
shrb
fadd
push
or
cmp
push
sub
test
pop
clc
addr16
jae
mov
addl
inc
imul
movsl
add
in
adc
test
inc
lods
mov
cltd
stos
sub
xchg
shll
dec
test
enter
push
lods
jbe
push
dec
and
pop
push
adc
div
pop
inc
jecxz
mov
mov
add
shl
and
outsb
or
ss
dec
sbb
xchg
cmpsb
add
lea
loopne
test
sbb
mov
mov
iret
mov
repz
mov
loop
enter
dec
xorl
repz
test
mov
xor
mov
inc
jno
jne
and
or
ficoml
sbb
mov
mov
pop
fistl
push
jp
aad
jae
adc
sbb
mov
inc
fwait
and
loopne
inc
adc
dec
out
insl
push
insl
cmp
and
pop
jb
pop
int3
mov
in
js
xchg
or
loope
push
lahf
cmp
lock
pop
aaa
stc
mov
inc
fsubp
in
mov
call
adc
inc
icebp
adc
lret
ss
mov
sbb
clc
addr16
ss
jge
add
jnp
insl
and
addr16
test
lret
inc
test
sbb
into
inc
dec
push
icebp
pop
aad
sti
jns
idivb
add
into
mov
dec
jo
jo
sbb
int
in
or
jno
pop
addb
cmp
gs
push
jp
jmp
push
je
popf
int3
mov
xchg
xlat
push
jbe
lock
sbb
mov
pop
cmp
xor
mov
in
rcrb
fs
push
mov
cmpsl
das
repz
popa
pop
bound
inc
mov
movsb
rolb
cmc
dec
cmc
mov
lcall
lds
adc
jns
outsl
test
lock
jno
mov
inc
pop
sbb
xchg
aad
mov
lock
pop
outsb
roll
cmp
cs
cmpsl
xlat
jne
mov
out
cmp
ds
push
sub
pushw
pop
mov
push
orl
jbe
hlt
mov
jns
cmpsl
test
nop
cmp
adc
aaa
add
push
add
repnz
imul
daa
shrb
mov
adc
in
into
orl
les
stos
int
jbe
aas
popa
sbb
cpuid
push
mov
xorl
iret
into
add
jae
popa
cmp
jle
outsb
cmp
popf
cmpsb
ds
out
mov
push
sbb
std
cmp
mov
int
sbbl
outsl
dec
in
lret
push
mov
sbb
inc
aaa
mov
out
pop
mov
movsl
test
jo
aas
std
add
xorl
stc
mov
xchg
xchg
sub
lock
loop
nop
inc
xlat
jmp
or
rcrb
call
and
jmp
lock
and
mov
add
cmp
pop
cli
or
and
repz
fmuls
jo
mov
push
mov
pop
dec
dec
mov
xor
jp
cmc
push
jns
xlat
sub
dec
dec
mov
insb
adc
cmpsl
dec
adc
push
and
mov
xor
or
lods
lods
es
clc
lds
cwtl
out
mov
and
jmp
pop
dec
mov
jo
or
mov
jecxz
cmpsb
push
divl
or
test
xor
sub
movsl
pop
push
lea
fidivrs
clc
dec
mov
inc
movsl
inc
pop
sahf
jmp
mov
mov
outsl
xlat
mov
sbb
lret
mov
push
or
addl
nop
movsb
sbb
ret
repnz
cld
gs
clc
xchg
mov
and
loop
mov
push
sub
cmp
scas
ljmp
sti
fwait
mov
and
int
les
inc
les
and
jp
in
jo
adc
aas
insb
jne
dec
dec
ljmp
dec
xor
lcall
mov
sbb
xor
lret
insl
adc
sbbl
js
fimull
popa
stos
mov
push
or
movsb
loope
fwait
sub
insb
xchg
loop
cld
je
inc
fidivl
loope
stos
jp
cld
out
inc
test
movl
xchg
ss
sahf
loop
pop
jp
cmpsb
mov
lods
xchg
cwtl
sti
les
enter
xchg
loopne
inc
repnz
jg
lret
int
sahf
mov
sub
enter
sbb
and
push
cld
inc
mov
sarl
adc
pop
pop
arpl
cmc
and
enter
mov
and
lret
in
or
ret
hlt
mov
in
push
push
push
popa
mov
jb
jns
add
lahf
mov
popa
nop
inc
hlt
jge
add
cs
dec
and
push
xchg
mov
insl
out
jmp
sbb
push
repz
js
adc
or
mov
cmpsl
mov
adc
add
in
cld
rcrb
fwait
inc
add
pop
xchg
mov
mov
mov
jns
jecxz
leave
mov
lods
fsubrl
mov
repnz
mov
sub
mov
shlb
xchg
rdpmc
xor
out
lcall
pop
mov
mov
push
inc
adc
nop
jbe
inc
jle
mov
pushl
sti
xchg
or
adc
inc
int3
mov
shlb
lret
std
xchg
mov
test
test
push
dec
sbb
inc
dec
stos
jnp
pop
pop
or
sbbl
lret
dec
xchg
dec
fisubrl
inc
pop
xlat
adc
xchg
mov
dec
js
mov
pop
fcmovnb
cli
xchg
push
and
mov
mov
mov
mov
rcr
call
xchg
popl
xor
ret
andb
test
daa
popf
lret
mov
dec
int3
sbb
xor
mov
mov
inc
je
dec
ds
jo
sbb
lret
pop
test
xor
xchg
push
mov
das
orl
data16
mov
in
shll
jne
repnz
mov
push
lahf
push
fsubrs
stos
pop
stos
cmc
negl
jb
mov
icebp
jno
mov
dec
lcall
push
push
or
daa
mov
jne
cmp
pop
mov
sbb
test
or
inc
cmp
cmp
das
mov
sti
inc
xchg
mov
das
je
xchg
xchg
pushf
or
jno
daa
sub
dec
jno
movsl
test
add
add
pop
pop
mov
and
insb
xor
pop
push
jne
jne
ss
lcall
cwtl
jg
stos
xor
lds
mov
or
loop
add
push
sub
xchg
mov
ret
in
xchg
aad
or
push
add
jns
mov
cmp
shlb
int
aad
push
add
push
lcall
xchg
sbb
into
imul
rcr
into
test
or
sub
repz
out
xchg
push
mov
sbb
pop
scas
jg
jg
mov
dec
and
inc
aaa
into
daa
popa
insb
mov
push
js
jle
call
jne
imul
mov
call
cli
mov
lret
inc
xor
movsl
inc
js
popa
push
icebp
and
fcmove
mov
into
mov
and
jge
andl
sub
iret
or
popf
sub
fnstenv
xchg
insb
dec
fcoms
adc
cmpsb
adc
sub
pop
int
out
push
jns
and
test
sub
push
mov
mov
lds
sub
insb
lret
jo
push
jns
mov
clc
scas
sub
sub
push
jne
or
lds
daa
ror
gs
sub
mov
jo
dec
fistpl
cli
sub
jg
fcmovu
mov
sub
push
jns
fwait
inc
arpl
mov
pop
stos
inc
insb
mov
ss
lret
jge
jle
mov
mov
push
pop
inc
pusha
stc
push
add
xor
xchg
ss
or
mov
xor
add
inc
and
xchg
push
sbb
shlb
jae
or
andl
popf
icebp
sahf
dec
out
xor
std
ds
icebp
fidivrs
lods
dec
pop
cltd
addr16
lods
sbb
sbb
mov
dec
pop
push
je
and
cmp
mov
ds
out
push
imul
fs
sti
stos
or
adc
add
add
xor
imul
movsl
addr16
outsl
xchg
lods
loop
pushf
in
or
stos
addr16
pusha
xlat
jno
jae
rorb
lods
dec
push
xchg
les
repnz
addl
cmpsb
or
ja
adc
iret
inc
cli
outsl
adc
and
lods
sbb
or
clc
or
ljmp
ljmp
iret
insl
mov
loopne
push
add
jno
mov
mov
lcall
xor
mov
outsb
mov
or
jb
or
sbb
inc
ret
jbe
aam
adc
sbb
cmpsl
cwtl
loop
mov
popf
imul
dec
aam
icebp
aad
push
ret
mov
or
mov
sbb
cltd
cmp
adc
xchg
fiaddl
test
cmp
sbb
xor
xorb
pop
ret
inc
push
clc
js
mov
ja
data16
test
outsl
pusha
xor
testb
bsr
ficoms
popa
out
inc
test
loop
jge
pop
push
mov
mov
fidivs
add
loop
imul
xchg
fwait
jo
scas
jecxz
ficoml
sbb
jp
jg
sub
shlb
sti
mov
jmp
jecxz
push
mov
add
pop
or
ss
mov
cs
adc
ret
leave
divl
pop
pop
iret
les
ret
and
ljmp
mov
and
add
je
sub
mov
imul
cmp
and
xor
into
gs
cli
roll
mov
daa
js
sub
movsb
push
mov
inc
enter
fwait
ss
adcl
mov
in
andb
out
mov
xlat
xor
icebp
inc
movsl
sub
jns
cld
fs
mov
pop
cmp
inc
jl
les
lock
cmp
adc
pop
jle
cmp
sub
mov
fnstsw
cmpsb
mov
push
mov
bound
pop
mov
in
adc
mov
or
xor
push
out
fucomi
sub
pop
call
shrl
jb
dec
xchg
cli
dec
icebp
xchg
dec
out
test
fisubs
add
xchg
ja
sub
fxch
jo
adc
gs
icebp
push
dec
xchg
das
jl
loop
sti
icebp
and
and
adc
outsl
imul
push
inc
jl
out
lcall
push
or
int
nop
mov
test
pop
ja
sub
cmp
add
mov
push
fucomp
xchg
dec
aas
fwait
inc
popa
jg
mull
fsubrl
jne
sub
out
out
sub
test
adc
push
push
shlb
adc
ja
sti
xchg
xchg
mov
xchg
fisubl
negb
or
jno
dec
arpl
shll
outsl
adc
fs
xchg
pop
jg
repnz
and
hlt
cmp
jge
jo
out
aas
cli
mov
mov
push
mov
sahf
cwtl
xchg
add
loopne
scas
pop
mov
in
add
mov
js
insb
ret
dec
dec
xor
rcll
jl
add
pop
adc
and
arpl
push
rcrl
sbb
mov
and
xor
stos
cmp
scas
sbb
ljmp
in
xor
addb
in
adc
mov
add
add
mov
dec
xchg
mov
cli
imul
jae
mov
hlt
lds
repnz
or
add
mov
inc
ret
dec
xchg
push
sbb
shrl
and
imul
out
lret
call
mov
sti
fcomps
add
addr16
je
pushf
cmp
mov
xchg
sub
push
pop
aaa
out
adc
xor
movsb
fdiv
ljmp
push
lcall
and
jle
add
push
scas
add
and
or
addr16
lds
arpl
imulb
xchg
add
cmpsl
inc
xchg
js
aas
jnp
stos
jbe
add
pop
push
adc
xchg
adc
cmpsb
sub
aam
jge
mov
inc
in
mov
cmpsb
xor
mov
es
mov
dec
popf
pop
xchg
cmp
inc
dec
dec
outsl
push
xor
or
hlt
ret
add
sub
repz
call
pop
push
pop
mov
imul
xorb
loope
mov
and
sbb
cwtl
outsb
mov
fcompl
push
sti
pop
xchg
dec
pop
mov
sahf
mov
fisubrl
mov
sub
xchg
adc
movsb
adc
addl
les
lret
or
mov
push
out
nop
iret
fs
aad
xor
lds
ror
xor
lods
aad
xor
jge
inc
mov
test
xor
dec
lea
cld
lods
iret
xchg
sahf
out
orb
stc
jg
mov
enterw
aad
aad
orb
and
rclb
lea
jbe
xlat
je
ror
mov
inc
or
dec
inc
push
jmp
mov
inc
mov
test
jbe
xor
mov
pop
push
test
xchg
repnz
clc
test
mov
ffreep
vcvtdq2pd
aam
call
pop
roll
cld
dec
push
btr
das
sbb
lcall
lds
adc
insl
sub
aam
test
jbe
in
loope
inc
cmp
fildll
loopne
add
aam
jecxz
xor
xchg
xorl
cmp
pop
add
jg
ficoml
xor
test
sbb
addr16
inc
shlb
ret
cmp
lea
xor
mov
pop
andb
or
or
adc
inc
std
leave
je
or
add
lds
mov
jno
mov
nop
push
shll
push
das
push
add
mov
jl
mov
add
idiv
mov
mov
or
rcrb
xor
sbb
inc
mov
roll
out
pop
pop
or
into
mov
push
rep
gs
sar
sahf
mov
hlt
incl
mov
out
lock
mov
or
pop
pushf
xchg
pushf
insb
ret
mov
fdivrs
ficoml
adc
scas
test
test
in
xchg
xchg
popa
roll
mov
stos
pop
cmc
cld
push
mov
lahf
cmp
out
nop
enter
rorl
rclb
js
cltd
andl
pop
stc
mov
sbb
testb
add
push
sub
cli
rcrl
jb
xchg
repz
imul
push
es
fstps
repz
dec
call
push
bound
mov
ret
in
pop
xor
pop
xor
je
pushf
push
xchg
sub
push
xchg
mull
mov
addr16
pop
int
jnp
push
lods
xor
sbb
xor
outsb
push
mov
xchg
and
ror
jg
mov
mov
lock
out
mov
pop
xlat
mov
and
or
xchg
test
gs
sbb
gs
pop
or
es
imul
xchg
or
shll
sarb
pop
aam
movsl
sahf
sahf
enter
add
cmp
cltd
or
stos
stos
je
inc
fcmovnbe
jne
sub
stos
lcall
cmc
push
cmp
arpl
fs
pop
into
adc
fs
movsb
inc
loop
in
out
lcall
mov
lret
lds
add
cmc
imul
ljmp
push
pop
movsb
dec
xchg
mov
mov
xor
test
pusha
jmp
adc
lods
or
pop
iret
andl
add
ds
aas
cmpsl
int3
mov
pop
mov
cmpl
lods
cltd
negl
dec
jnp
loop
cwtl
das
push
je
cmpsl
jbe
push
mov
push
pop
and
sbb
leave
mov
xor
mov
jl
pop
mov
cs
testl
lahf
incl
test
pop
dec
push
mov
sub
jne
cld
shrb
xor
call
hlt
dec
sti
fs
push
mov
out
in
mov
test
sub
sbb
fucom
jbe
aam
cmp
aad
aad
jo
pop
push
mov
xchg
xchg
test
and
push
add
sar
popf
fsubs
aam
daa
adc
dec
mov
and
mov
lret
dec
int
adc
popf
cmpsl
adc
sub
lcall
jo
enter
mov
shrb
or
jmp
test
or
fmull
mov
mov
dec
sub
mov
sahf
push
xchg
insl
leave
push
xchg
loope
pop
ret
push
xor
inc
lods
filds
dec
adc
std
loopne
ret
imul
out
push
sbb
test
and
xchg
sbb
fnsave
js
mov
stos
xlat
fwait
mov
movsl
adc
shll
xchg
andl
mov
xor
sub
inc
ficompl
jl
pop
lcall
insb
add
mov
mov
sub
aad
out
icebp
pop
adc
bound
add
pop
mov
out
xor
inc
ret
push
stos
jmp
imulb
push
adc
mov
inc
gs
outsl
std
test
adc
sahf
pop
mov
xor
inc
mov
xorb
pop
mull
adc
xor
lcall
into
outsb
jns
lahf
pusha
cmc
mov
in
sarb
jle
ljmp
leave
inc
mov
aas
and
jno
jmp
aam
mov
decb
sbb
inc
xchg
add
pusha
scas
push
test
pop
xchg
mov
ret
ffree
add
pop
cwtl
out
repz
icebp
sahf
repnz
in
add
xlat
rcl
or
mov
lea
int
gs
cmpsl
jbe
sahf
gs
adc
mov
bnd
cmpsl
push
push
aam
or
aaa
outsl
nop
ficomps
xchg
pop
stos
lods
xchg
xor
shrl
das
push
and
xchg
cmp
outsb
jge
mov
ds
xor
test
sbb
loope
out
sldt
push
mov
shrb
insl
les
fldcw
fs
xchg
push
out
jo
xchg
add
decl
pop
arpl
mov
mov
adc
jecxz
icebp
xlat
sets
out
sub
add
and
lcall
mov
testl
cld
subb
lret
push
or
ljmp
imul
cmp
addr16
sub
mov
inc
jecxz
shrl
loop
lods
sbb
pop
jmp
mov
inc
push
in
or
ja
movsl
dec
cmp
fnsave
mov
mov
pop
mov
fs
fwait
xchg
mov
xchg
xchg
push
add
insb
imul
jg
mov
dec
in
jbe
std
adc
loop
enter
cld
dec
adc
aam
mov
mov
aad
jp
inc
xor
cltd
pop
cmc
rol
lret
mov
cmpb
sbb
sub
int
xchg
subb
addr16
cmp
fs
adc
mov
test
int3
mov
ds
pop
jno
xchg
add
lods
sub
and
test
orl
mov
incl
pop
push
fs
into
in
cmp
into
stos
mov
popa
aam
mov
arpl
testl
add
or
iret
enter
sbb
mov
das
jle
pop
je
call
mov
pop
aad
test
mov
icebp
cli
jle
popa
mov
cmp
lahf
cmp
or
push
jmp
cli
xchg
shlb
cmp
dec
add
sub
test
sahf
fldt
out
addr16
wbinvd
test
int
sbb
lret
fistl
out
or
inc
scas
imul
imul
cmp
shlb
das
push
cmp
sti
mov
cmp
adc
les
pushf
cmp
push
sarl
hlt
cmp
lea
adc
dec
mov
fisttps
pop
cmp
sub
fimuls
arpl
jns
cltd
push
subl
mov
lret
add
clc
add
andb
lds
dec
inc
scas
lods
inc
lea
jp
pushf
es
push
loope
out
push
adc
adc
or
mov
mov
and
out
adc
xchg
inc
stos
mov
outsb
xchg
aam
mov
test
pop
shll
test
bound
jge
das
lea
xlat
fidivl
push
lcall
aam
aad
int3
mov
push
add
cwtl
cltd
shlb
inc
shl
movsl
in
jno
dec
xchg
mov
bound
and
fisubrs
cmp
sbb
ds
xchg
scas
addr16
jmp
xchg
dec
inc
mov
dec
inc
in
sub
xchg
clc
rcrb
or
jl
adc
mov
inc
push
mov
lcall
jle
mov
and
xchg
std
cmp
dec
jle
cmc
cmp
mov
and
loope
pop
push
cmp
add
pushf
les
lock
shlb
icebp
push
mov
lret
dec
fistps
pop
add
stc
imul
popf
adc
jle
ss
test
pushf
mov
lahf
pop
imul
mov
data16
pop
mov
dec
dec
mov
jae
scas
pop
sbb
jae
cmpsb
jne
loopne
pop
jbe
xchg
sbb
push
push
fstpt
inc
fidivs
dec
mov
lret
mov
cmpb
and
loop
or
outsl
mov
xchg
repnz
int
jno
lcall
stos
imul
mov
lock
testl
sbb
push
hlt
in
in
jo
sub
adc
popa
cs
shlb
fidivrs
xchg
call
sti
cwtl
inc
fs
sbb
sub
sub
push
pause
push
sbb
mov
pop
push
sbb
lods
dec
cmpsb
push
mov
fbld
xchg
fsubs
sahf
stos
xchg
mov
push
je
cmp
adc
dec
arpl
fistpl
or
rorb
jp
enter
mov
mov
ljmp
dec
pop
inc
lret
jge
xchg
xchg
fwait
sti
cli
stc
call
int3
or
push
mov
mov
shlb
adc
mov
adc
mov
jnp
int
sahf
mov
pop
dec
jns
sbbl
clc
cmp
mov
xor
mov
xchg
jp
idivl
int3
out
std
jb
mov
addr16
push
pusha
xor
mov
or
sub
fldl
xchg
sub
int
mov
repnz
jge
xchg
inc
push
sbbb
adc
popf
adc
mov
xchg
addr16
popf
adc
xor
in
fiaddl
ss
iret
push
mov
test
xlat
mov
lods
pop
lahf
pop
cltd
sub
js
jmp
fsubl
push
pushf
fnstsw
xor
mov
xchg
test
sahf
hlt
push
bound
mov
ds
fcom
clc
pop
xor
push
or
lock
and
mov
idivb
pop
cmp
dec
leave
mov
into
mov
mov
out
adc
jo,pn
and
repnz
add
add
inc
xor
rol
push
cmc
lods
js
pop
adc
mov
gs
adc
or
add
andb
cmp
push
es
cwtl
pop
hlt
xor
dec
clc
push
pop
push
in
ljmp
dec
and
test
das
into
ljmp
cmpsl
fnstenv
push
popf
shl
outsl
ret
data16
jno
pop
dec
testb
jns
inc
repnz
dec
aaa
shrb
dec
pop
fmull
mov
xchg
push
push
ret
push
das
sbb
inc
repz
imul
in
in
cmp
mov
dec
test
sbb
xchg
ret
mov
pop
jge
nop
add
pop
rol
or
fisubrs
xor
push
xchg
rcrl
mov
inc
xor
loop
push
xor
mov
xlat
loope
popf
scas
push
test
jl
sub
or
push
jg
xchg
dec
test
mov
stos
pusha
dec
dec
and
cmp
stc
dec
cmp
or
int3
lahf
pop
jmp
add
in
pop
xor
out
add
dec
mov
mulb
in
pop
fidivs
push
outsl
inc
jnp
inc
inc
ss
int
ss
add
testb
mov
adc
push
jae
jg
das
inc
hlt
sarl
lods
sub
ret
into
popf
sub
sbb
sbb
dec
xchg
sub
fstpt
mov
jle
incl
lahf
pop
jnp
mov
fbstp
outsl
pop
ret
test
push
mov
inc
inc
dec
pop
xor
hlt
gs
add
in
cmp
mov
dec
or
ss
enter
cmc
pop
adc
fistl
frstor
xchg
mov
enter
loopne
stos
imul
loope
dec
push
scas
lock
jo
test
push
fadd
jmp
push
push
sub
push
mov
sbb
mov
ret
jle
cmp
mov
push
ja
mov
jnp
jbe
fisttpl
or
addr16
test
sbb
sti
xchg
dec
mov
inc
add
or
push
decb
mov
bound
mov
dec
test
mov
add
xor
or
int3
inc
inc
sbb
push
in
loopne
pop
fldt
in
inc
or
and
popa
pop
repnz
aaa
pop
into
mov
aas
and
adc
mov
xchg
outsb
test
cli
aad
xor
push
arpl
shlb
xlat
xchg
bound
mov
xchg
dec
pop
cmp
test
sub
mov
mov
dec
cmp
pop
out
adc
push
pushf
xor
dec
pop
jbe
call
or
leavew
or
and
pop
or
jo
mov
test
cmpsl
arpl
ret
xor
cmpsl
inc
dec
pop
div
add
incl
outsb
mov
testl
inc
or
scas
jnp
imul
and
into
jl
mov
or
call
mov
movsb
dec
dec
jb
and
cmpsb
in
jp
aaa
jmp
jp
mov
gs
push
in
pop
dec
inc
xor
push
push
sub
pop
fisubrl
insl
xchg
andl
xor
xor
fistps
sbb
mov
dec
jnp
hlt
sub
fisubl
pop
bound
add
in
negb
ret
sbb
push
andb
and
xor
mov
mov
ja
lock
mov
xchg
jo
adc
mov
pop
lods
inc
add
loope
mov
div
je
sub
pop
in
jmp
xor
dec
mov
scas
leave
movsl
and
mov
sbb
sbbl
pop
fdivrs
adc
loop
into
xchg
nop
fs
sbb
jae
push
rorl
push
mov
xchg
xchg
mov
scas
lock
xor
imul
loopne
out
movsb
sarb
loopne
push
popa
pop
mov
cmc
inc
sbb
mov
push
into
push
push
mov
jbe
dec
cmp
stos
sub
ss
cwtl
lds
sti
int
xchg
fnsave
mov
dec
icebp
jecxz
orl
adcl
aam
inc
pop
cmp
arpl
mov
das
adc
lret
xor
mov
in
insb
mov
lods
insl
stos
fiadds
dec
sbb
int
mov
pop
testb
lods
leave
fcmovb
jo
push
leave
into
jmp
and
sub
test
inc
push
dec
sub
dec
enter
push
test
mov
jg
fimuls
cli
sbb
aam
dec
movsl
jae
andl
into
pop
cli
mov
arpl
icebp
lods
cmp
sti
push
mov
cmpsl
and
lahf
lds
repz
insl
cs
push
mov
adc
and
xchg
in
dec
movl
imul
add
shlb
daa
sub
ficoms
call
push
pusha
pop
push
fiaddl
cmpsl
ss
loop
xchg
sbb
inc
sub
dec
insb
and
xor
dec
add
divl
clc
out
lock
aaa
inc
and
cmp
xor
leave
pop
loop
push
movsl
adc
sbb
and
roll
je
int
popa
xor
insl
fs
mov
cli
popa
dec
fisttpll
cld
add
daa
mov
sbb
fs
xchg
jae
sti
cwtl
add
xchg
repz
pop
in
in
cmp
mov
mov
out
mulb
hlt
xchg
daa
sub
aam
inc
rcrl
sub
loop
and
xchg
les
push
or
add
push
imul
or
sbb
mull
pop
xchg
jl
inc
scas
std
fnstcw
add
sbb
les
jmp
or
test
or
sub
cld
loopne
xchg
pop
or
inc
xchg
push
nop
in
dec
xchg
je
dec
cmp
test
int
jmp
xor
movsl
jecxz
pop
sbb
in
xor
test
call
loope
out
adc
xor
push
or
dec
dec
or
lcall
and
push
inc
inc
inc
icebp
outsl
sbb
xor
fsts
jge
les
fucomip
inc
mov
xchg
xor
push
xchg
and
dec
add
xchg
xchg
scas
shl
frstor
les
pop
cs
cltd
sbb
xor
xor
insl
mov
aam
jl
mov
xchg
cmpsl
hlt
mov
gs
sbb
xchg
sarl
inc
add
lret
adc
inc
push
jns
es
xchg
jae
mov
insl
cwtl
int3
imul
fistpll
and
negb
pop
out
mov
cmc
lods
dec
cld
jge
jb
inc
sarl
adc
mov
dec
aam
jbe
jnp
adc
jo
push
sub
dec
pop
push
cli
dec
cltd
mov
lock
popa
mov
pop
xchg
repnz
lret
in
mov
add
insb
subl
sub
pusha
cmp
adc
pop
adc
xchg
adc
sbb
adc
and
jl
imull
inc
push
test
or
jge
add
sbb
pop
push
fwait
or
nop
lahf
mov
inc
roll
lret
push
sti
scas
mov
iret
xchg
sub
bound
mov
popl
pop
add
ds
movb
pop
jae
mov
mov
fs
or
mov
push
jns
push
and
inc
jo
or
stos
push
fs
push
inc
ret
inc
mov
jo
pop
scas
xor
xor
stc
into
stc
aas
addl
out
lods
mov
pop
cmpsl
addb
push
inc
stos
mov
lods
push
sbb
inc
test
xlat
sahf
bnd
shll
mov
and
add
scas
lods
rcrl
push
or
fbld
sbb
rorb
push
testl
popf
mov
sbb
leave
pop
shl
xchg
xchg
into
leave
push
jmp
int
int
or
cli
cli
jb
hlt
xchg
push
xor
sbbb
and
filds
outsl
pop
gs
insl
test
push
in
clc
mov
lock
cmp
insl
stos
mov
enter
int3
or
ret
xchg
jne
sub
fidivrs
clc
fisubl
testl
and
loop
test
lods
or
mulb
test
mov
xor
jne
inc
stos
jae
clc
lea
test
mov
loope
adc
outsb
xor
or
loopne
add
add
or
scas
dec
or
sub
or
subb
dec
sahf
dec
pop
aaa
jl
push
movsl
mov
int
fadds
jp
pop
push
push
sbbl
and
cmp
sbb
add
jecxz
stos
jbe
sub
out
dec
aad
je
movsl
pop
add
leave
and
or
lds
loopne
je
stc
shrb
or
fldt
ja
inc
xlat
sub
test
mov
push
sbb
push
sbb
f2xm1
std
and
pop
jb
add
add
pop
and
mov
adc
add
mov
sti
loope
std
push
popa
mov
inc
xchg
push
sbb
mov
test
aas
mov
adc
dec
pop
pusha
nop
xchg
ret
mov
cwtl
stos
ficoml
inc
xor
gs
push
mov
in
sahf
or
data16
mov
cmp
push
jbe
test
lret
xor
call
adc
cmp
jl
imul
shl
mov
sbb
clc
mov
xor
jle
js
inc
es
iret
xor
out
xchg
imul
loop
daa
mov
sahf
push
xchg
aas
add
mov
das
clc
push
dec
test
cltd
inc
push
jl
popf
pusha
xchg
je
mov
sahf
icebp
pusha
roll
int
lods
imull
adc
push
xchg
les
shlb
xchg
fs
arpl
add
dec
orb
std
das
lret
out
inc
push
xor
or
jns
push
dec
aad
sbb
sub
fs
pop
xlat
shrb
stc
arpl
jnp
jne
push
xor
cli
test
loope
cmp
call
clc
push
inc
jno
filds
pop
xchg
out
andl
mov
pop
arpl
jge
jae
shlb
push
lods
enter
and
loope
stos
fs
loop
jnp
xchg
adc
popf
movsl
stos
xchg
dec
push
movsb
inc
fdivs
adc
push
mov
sbb
mov
push
push
stos
xchg
in
jno
adc
pop
xor
aam
mov
xchg
mov
std
lock
push
ja
insb
pop
push
jns
push
mov
push
fs
mov
xor
sbb
and
mov
loop
jno
movsb
xchg
mov
sbb
ret
inc
sarl
cmpl
jb
andl
mov
sub
xchg
fisttpl
mov
push
andl
in
xor
out
or
mov
sarl
cld
pop
mov
in
push
cmpsl
lds
arpl
scas
daa
daa
clc
sbb
pop
test
mov
int3
jns
and
shl
mov
lea
movsb
xor
ja
shll
dec
fldenv
stc
cmpsb
cmpsl
cli
push
gs
push
shll
and
and
inc
mov
fnstsw
outsb
movsb
enter
sbb
sti
std
cmpsl
pusha
xchg
jle
arpl
ret
push
aad
pop
sarw
ds
add
ret
into
fists
ret
and
jne
jmp
pop
mov
adc
cmp
mov
addr16
jp
xchg
push
fcmove
call
or
addr16
lock
jle
jle
sbb
iret
into
lcall
inc
jmp
inc
aam
imul
pop
mov
popa
fwait
jg
xchg
push
add
pop
inc
mov
adc
lods
arpl
inc
push
movsl
dec
inc
cmc
jl
loop
mov
and
lea
orb
push
stos
fs
sub
je
adc
fcoms
cli
js
and
in
xchg
dec
xor
cmp
fmuls
mov
jge
jbe
push
addl
cmp
movsl
xchg
mov
fwait
ret
stos
rcrb
insl
xchg
lret
cmp
lods
push
mov
adc
sub
xchg
mov
into
adc
cmp
adc
pop
cmp
test
arpl
xchg
lds
adcb
imul
lea
push
mov
xor
test
out
lret
lcall
rorl
out
bound
imul
jecxz
in
jne
clc
aaa
leave
mov
int
mov
jno
sbb
mov
and
ds
rcrb
idiv
adc
inc
ljmp
jmp
jmp
and
or
testb
inc
mov
mov
pop
pop
jb
enter
cmpsl
adc
cld
mov
cltd
in
test
lahf
push
jns
sub
mov
xchg
inc
cmp
es
mov
aaa
jle
ss
sbb
out
outsb
push
cmc
jb
inc
adc
mov
test
into
mov
dec
or
shll
sub
dec
dec
jne
or
aad
xchg
add
push
pusha
jne
das
scas
scas
dec
cmp
adc
lea
test
mov
lret
inc
sub
mov
jp
mov
outsb
add
nop
mov
mov
pop
xchg
test
xor
cmp
test
js
ds
pushf
cmpsl
mov
or
test
mov
mov
jp
inc
fidivl
add
sub
mov
negb
push
dec
xchg
xchg
mov
and
pop
ljmp
subb
sub
pop
push
pusha
pushf
jl
testl
out
aam
ss
loopne
daa
es
mov
add
xor
sbb
out
test
jmp
pushf
inc
mov
add
mov
xlat
neg
aam
aad
aaa
sub
int
xchg
jae
addr16
scas
ret
stc
and
mov
and
jp
in
sbb
xlat
insb
dec
and
xor
cmp
imul
ret
dec
lds
sbb
cmp
add
out
loopne
sbb
ljmp
xor
in
push
jmp
sub
ret
aaa
repz
sub
or
xchg
aam
nop
xchg
bound
pop
xchg
stos
mov
xor
out
loop
jp
std
and
jecxz
fldt
pop
lcall
sbb
cmc
sti
adc
mov
out
cmp
lods
call
popf
imul
data16
insl
insb
jb
test
dec
sub
daa
or
idivb
lods
in
pop
xor
es
jp
jg
xchg
xor
rclb
sub
aam
frstor
add
add
outsl
inc
test
sbb
jmp
test
mov
popa
popa
pop
sbb
imulb
and
add
movsl
lea
fisubl
cmp
test
filds
xchg
imul
mov
subb
nop
pop
lock
xchg
nop
mov
push
mov
mov
push
xor
add
mov
jl
into
fs
and
daa
into
xor
fdivs
fidivs
push
jns
xchg
mov
inc
bnd
cmp
mov
sub
sti
in
xor
sahf
pop
inc
scas
shl
sbb
fisttpl
insb
push
sbb
jmp
pop
sbbb
inc
cmpl
lret
jne
repnz
or
push
add
mov
cwtl
cmp
loope
dec
add
bound
ror
sub
mov
ret
incl
cwtl
outsl
pop
xor
aad
imul
dec
jne
pop
pop
sbb
adc
cs
aas
stc
push
mov
imul
xchg
cwtl
mov
imul
sub
fwait
inc
push
xor
mov
mov
addb
or
push
or
xor
xor
int3
enter
in
shll
les
movsl
inc
xchg
cmpsl
imul
insl
jl
jecxz
add
sub
mov
xchg
mov
js
push
hlt
jns
pop
jae
loop
test
insl
cli
in
iret
rcll
cmp
jecxz
loope
or
loop
mov
sbbl
mov
xchg
ss
adc
dec
mov
outsb
jge
xchg
lahf
push
stos
addr16
lds
push
sbb
push
dec
lret
dec
nop
jno
test
sub
dec
into
and
test
push
cmpsb
cmpsl
pop
mov
mov
and
xchg
test
dec
mov
dec
sbb
pop
mov
push
out
arpl
icebp
daa
mov
repnz
ljmp
lcall
orb
orb
xor
leave
ret
ret
adc
mov
outsb
scas
jge
sahf
xchg
and
jl
adc
dec
mov
jp
push
fcoms
leave
push
dec
test
lea
stc
lods
jae
ret
push
push
jns
inc
dec
outsb
bound
ret
xor
add
icebp
or
int
cs
xchg
mov
popa
sub
sbb
xor
mov
fisubl
sub
jb
cmp
mov
enter
loop
je
xchg
xor
sbb
add
jae
push
aaa
mov
jmp
pop
xor
jb
in
dec
aas
mov
aam
add
lea
push
inc
or
int
mov
enter
cmp
data16
lea
icebp
jo
xchg
lahf
xchg
fdivrs
repnz
mov
mov
pop
adc
xor
xor
add
into
lock
out
sub
xor
scas
inc
jo
mov
adc
jb
xchg
add
cmpsl
scas
test
ds
ficoms
lret
add
or
mov
sbb
popa
and
xchg
mov
ror
icebp
ja
xor
rcrl
clc
in
stc
lods
mov
ljmp
sbb
inc
imul
in
pusha
loopne
rcll
pop
sarb
xor
fwait
dec
test
mov
adc
jl
mov
and
dec
mov
or
xchg
dec
aad
xchg
mov
sub
mov
icebp
das
or
das
add
mov
mov
mov
and
insb
mov
sbb
or
push
popa
out
not
and
movb
test
into
adc
jns
shrb
jmp
inc
mov
inc
out
pop
pop
aam
outsb
test
cmpsl
fdivrs
mov
arpl
in
mov
jl
and
jo
and
dec
popa
aas
fisubl
sbb
mov
lock
imul
sub
das
fstl
aaa
sbb
sbb
aas
orb
popf
lods
loop
sbb
jo
mov
or
push
popf
sbb
and
loope
test
data16
inc
subl
mov
jmp
xchg
clc
xor
dec
xor
repnz
mov
out
cmpsb
dec
in
loopne
pop
push
lret
and
inc
lcall
mov
or
xor
xchg
insl
into
fwait
arpl
sahf
shlb
xlat
mov
xchg
div
adc
xchg
mov
stos
mov
ret
sub
out
mov
jg
jno
sub
xchg
std
ret
mov
push
xchg
insb
bnd
push
xchg
movsl
xchg
icebp
insb
pop
aas
or
repnz
inc
push
mov
js
std
sbb
xchg
sub
jo
xchg
icebp
sub
push
adc
sahf
pop
cli
xor
lods
popf
rorb
loopne
lock
daa
hlt
xor
fnstenv
js
mov
and
fs
cmpsl
adc
xchg
bswap
mov
dec
loope
jmp
cli
fwait
mov
pop
ja
inc
mov
lret
xchg
fcomip
and
test
sbb
dec
xor
nop
mov
repnz
push
push
add
adc
sahf
outsb
jae
push
mov
sbb
sbb
and
rclb
mov
fcmovne
rcl
xchg
mov
and
pop
ds
lods
out
scas
mov
into
ss
sbb
pop
shlb
mov
mov
loopne
inc
push
xchg
cld
jns
sbb
sahf
lods
lret
imull
aaa
fmuls
or
mov
aam
mov
sub
iret
addb
outsl
add
add
push
xlat
and
push
xor
mov
push
mov
dec
mov
scas
and
aas
pop
imul
imul
jle
sahf
jmp
movsb
je
inc
sbb
out
nop
mov
inc
ljmp
ret
inc
sarb
mov
or
lahf
pop
push
push
dec
jo
mov
sbb
jnp
decl
aas
outsb
lods
insb
mov
jo
int3
adc
fnstsw
imul
cmpsb
fsub
pusha
aam
mov
int3
xchg
jg
push
cmpsl
movsb
jne
sub
pop
pop
push
ljmp
cmc
test
fadds
sbb
insl
xor
ss
inc
and
inc
push
dec
das
ss
call
insl
ret
adc
decl
jbe
cmp
fstp
fcoms
sub
insl
mov
jns
arpl
jle
fistpl
xchg
shll
es
cmc
or
int3
cmc
dec
leave
mov
aad
sbb
add
test
mov
push
xlat
xor
out
mov
inc
aad
mov
pushf
fwait
push
into
push
in
mov
mov
aaa
jge
fisttpl
jnp
xchg
idiv
xor
mov
movsb
sbb
movsb
clc
cmc
je
dec
cmpsb
outsb
jg
sub
test
xchg
out
jno
shll
dec
out
xchg
fwait
or
sbb
daa
adc
push
mov
popa
pop
fildl
mov
lods
addl
xchg
inc
je
mov
jns
and
addr16
xchg
out
dec
xor
insl
dec
pop
push
mov
sub
push
xchg
loope
push
adc
add
cld
lds
mov
sub
mov
lods
pop
aad
js
mov
mov
stc
mov
test
aad
jbe
fwait
push
cmp
dec
push
sub
mov
nop
dec
inc
mov
adcl
mov
js
dec
sub
rol
inc
add
arpl
inc
mov
sub
or
mov
xor
adc
sbb
cmpsl
and
mov
adc
nop
xchg
or
push
push
loopne
sub
push
xchg
cld
rol
pop
mov
int
loopne
sbb
int3
push
fdivr
addr16
cs
mov
xchg
lret
cmp
int3
mov
xchg
jmp
cmpsl
push
push
jle
or
mov
int3
icebp
pop
mov
sbb
or
push
ss
sub
pop
adc
push
les
sbb
cmpsl
sub
int
or
cmp
shl
push
xchg
fstps
lahf
mov
xor
mov
mov
cli
outsl
fidivl
into
cwtl
decl
mov
popf
dec
dec
inc
fdivl
rcll
push
jb
cld
imul
das
ljmp
ret
jb
pushf
dec
pop
inc
and
fistps
int
ljmp
in
xorb
cmp
mov
in
jg
sbb
fisttpl
push
bnd
jle
cmpsb
lcall
dec
mov
dec
lock
jge
pop
pop
lcall
and
dec
or
fcoms
mov
addb
lea
mov
xchg
add
ss
stc
add
cmpsb
push
xchg
cmc
jmp
jecxz
aaa
jb
std
and
push
or
inc
cmp
test
inc
imul
or
cmp
arpl
xor
push
sbb
icebp
leave
add
push
mov
jae
faddl
pop
pop
xchg
mov
cmpsb
mov
out
dec
xor
add
cld
fs
mov
movl
mov
sti
pusha
cld
cli
std
mov
pushf
scas
sbb
daa
pop
stos
adc
lcall
xchg
int3
popa
stc
xor
push
or
pop
adcb
cmp
mov
ss
mov
push
sbb
pushf
frstor
in
in
pop
in
aaa
leave
cmp
fs
ds
xchg
push
jae
in
dec
push
mov
cmp
mov
fists
xor
es
cwtl
add
test
xchg
daa
jnp
push
lods
stos
pop
out
insl
test
dec
sbb
sub
pop
cmp
xchg
lret
cmp
ss
add
les
dec
xor
fcmovne
dec
mov
sbb
ret
andb
loop
mov
jmp
jnp
fsts
jb
inc
sbb
jp
and
ret
pop
rcll
fwait
dec
push
pop
outsb
sub
xchg
jmp
mov
in
mov
mov
jae
sub
sub
roll
push
aas
sti
jp
outsb
aaa
add
jb
cmc
sub
imul
or
testb
out
jno
loope
pop
test
jg
mov
sahf
push
clc
inc
movb
push
int3
xchg
add
push
sub
loope
lret
lock
insb
push
cs
nop
pop
push
xlat
cmp
sbb
pop
roll
test
jmp
add
dec
in
push
je
repnz
push
ds
sbb
mov
in
insb
rorl
jle
out
jg
mov
int3
in
repz
mov
inc
decl
in
fwait
repnz
mov
fucomi
fdivl
mov
sahf
sbb
lock
ja
mov
popa
leave
pop
xchg
pop
adc
outsb
lods
mov
mov
push
scas
ss
shlb
xor
popa
pop
adcl
or
arpl
cmp
xchg
insl
jecxz
pop
or
sti
hlt
nop
loop
mov
imul
test
xchg
ss
jae
push
aas
out
xchg
sbb
pop
out
sbb
imul
fldcw
notb
lret
mov
push
and
pop
fstps
and
or
mov
sbb
addr16
xor
leave
popa
mov
mov
std
xor
jecxz
testb
out
push
pushl
mov
ljmp
xchg
ret
add
loop
cmp
and
dec
shll
add
add
pop
lret
pop
sub
push
add
lcall
ljmp
jns
mov
inc
xor
addl
jge
mov
inc
hlt
in
xchg
mov
orb
xor
sbb
ja
inc
or
xchg
sahf
adc
clc
out
rorb
arpl
and
fldl
inc
mov
sbb
push
jle
inc
jae
test
dec
lds
das
jmp
mov
jno
repnz
jns
pop
inc
test
or
iret
mov
xchg
pop
cs
insl
pop
xchg
fisubs
loope
mov
scas
or
cld
enter
js
cwtl
pusha
dec
xchg
sbb
push
outsb
push
in
lret
insb
push
test
or
inc
loopne
bound
jb
sbbl
xchg
aam
adc
std
arpl
stos
pop
mov
addr16
arpl
dec
push
outsb
add
xchg
aad
push
nop
xchg
sarb
loop
enter
inc
aaa
cs
inc
fists
push
lret
xor
imul
push
jae
or
push
push
adc
push
outsl
mov
mulps
call
std
out
lcall
movsl
or
mov
out
xor
mov
mov
jg
out
and
shrl
xchg
inc
adc
insl
fs
xchg
mov
mov
cld
xchg
xchg
pop
hlt
dec
push
jmp
mov
das
cmpsb
mov
mov
nop
sbb
repz
jmp
jg
sbb
adc
mov
ds
jnp
cmp
jns
mov
add
push
cmp
cmp
sbb
inc
push
pop
dec
add
or
cmpsl
pop
mov
add
sahf
in
push
scas
pop
sub
xor
fwait
rcrb
adc
pop
jne
test
xor
rcll
aad
cmp
push
xchg
loopne
xor
fdivr
cmc
negl
jg
inc
aad
xchg
pop
xchg
in
lret
jns
jmp
aad
mov
pop
out
xchg
add
mov
cmp
sub
repnz
xchg
and
int
cltd
lcall
jo
dec
jmp
hlt
mov
cltd
lods
inc
xlat
mov
inc
cmc
pop
mov
adc
push
mov
sbb
aam
xor
mov
icebp
pop
hlt
and
xor
dec
adc
pop
scas
and
test
mov
pop
lds
inc
xor
push
jae
cmp
addl
ja
sub
xchg
shll
and
into
mov
aas
mov
adc
je
xchg
mov
out
mov
fisttpll
sbb
xlat
sbb
enter
bound
xadd
jl
cwtl
cmp
add
lds
xor
jp
push
pop
mov
sahf
fs
fimuls
negb
insl
mov
adc
mov
jmp
or
sub
movsl
mov
lret
push
repz
jmp
cwtl
jns
jo
roll
clc
aam
cmp
or
repz
add
jmp
push
sbb
inc
fildl
cli
mov
dec
push
inc
inc
aaa
jmp
inc
and
mov
mov
pop
push
adc
jb
cmp
push
or
scas
sub
sbb
or
pop
mov
repz
mov
dec
icebp
aaa
jns
scas
dec
jne
push
sbb
mov
rcl
push
fsts
fcmovnb
aaa
repz
push
ret
gs
pushf
xorl
in
fimull
inc
subb
test
sahf
jbe
pop
dec
lret
addb
dec
js
js
lods
pop
test
inc
xchg
loopne
pop
sbb
cmp
loope
mov
fcomp
mov
mov
fsubs
inc
or
les
inc
mov
push
pop
adc
xor
cltd
pop
je
shr
inc
lcall
mov
mov
mov
mov
enter
adc
or
jg
je
ljmp
pop
es
mov
jge
inc
sar
cmp
movsb
mov
scas
lods
cld
aaa
adc
lods
in
insl
divb
les
jae
push
mov
push
insl
test
inc
push
xchg
fimuls
movsl
enter
jl
aaa
push
js
add
inc
mov
lcall
jbe
or
leave
dec
inc
addr16
xchg
std
inc
mov
push
xor
xor
push
jmp
ja
icebp
daa
int
push
jecxz
dec
push
dec
pop
icebp
daa
stos
xorl
fdiv
sub
dec
mov
popf
mov
dec
int3
adcb
in
cmpsl
lahf
mov
int3
xor
cltd
jbe
sub
fadd
cmp
cltd
pop
dec
cltd
xchg
mov
or
xor
data16
dec
lret
enter
aas
in
dec
jno
xor
insl
in
mov
mov
push
jg
push
pop
jge
mov
sbb
push
cmp
loop
lea
jmp
sub
mov
pusha
stos
mov
shrl
add
sar
shll
incl
push
push
subb
repz
pop
add
inc
nop
cmpl
xchg
sub
mov
xchg
sarb
outsb
ss
push
cld
push
pop
imul
and
je
xchg
fildl
aas
mov
mov
idivl
sahf
icebp
jne
push
jmp
sbb
lods
fs
mov
sbb
ret
loop
sti
xchg
push
std
mov
xchg
outsl
fnstsw
jmp
inc
lahf
imul
cmp
mov
jnp
mov
cmp
mov
xorl
scas
jb
push
outsl
adc
lock
loopne
mov
adc
lret
cmpsl
test
sub
mov
adc
cmp
lock
xor
scas
ret
sbb
filds
fsts
pop
rclb
push
enter
sahf
adc
into
push
test
sub
sbb
fwait
ja
mov
pop
pop
inc
shll
in
das
push
test
xchg
or
push
sub
cmpsb
repnz
pusha
dec
add
es
cmp
jecxz
add
cmp
mov
mov
insb
rorb
inc
and
adc
popa
pushf
subb
movsb
mov
push
fisubrs
stos
stos
mov
mov
sub
mov
addb
shll
sbb
dec
inc
loopne
inc
imul
movsl
push
push
ds
enter
ss
jne
pop
pop
loopne
pop
sub
or
inc
jp
sbb
stc
lds
inc
xchg
mov
sarl
pusha
loop
xchg
push
aam
add
rcrl
xchg
jmp
jb
add
lds
nop
sub
jo
push
jnp
xchg
sahf
int
pop
jp
jg
inc
ss
idivl
aad
adc
jle
add
in
rcrb
cmp
hlt
outsl
cmp
or
addr16
xor
xor
ja
stc
sbb
jg
adc
push
add
and
std
push
xor
mov
cltd
fsubs
lahf
xchg
add
xor
sbb
xchg
and
xchg
mov
cld
mov
outsb
sub
push
negl
mov
and
out
pop
bound
cmp
mov
repz
dec
outsb
mov
adc
out
loopne
cli
stos
int
lret
ret
into
jo
xor
fistl
outsb
inc
adc
or
lea
inc
sbb
xchg
add
sub
shrb
xchg
in
testb
outsl
in
xlat
push
xor
xchg
in
xor
jle
sub
mov
or
bound
enter
mov
movsb
mov
sub
jl
inc
ds
sub
repnz
or
in
lret
xchg
jmp
in
pop
adc
pop
push
mov
or
sti
jbe
les
clc
push
xor
push
dec
adc
sbb
jae
rorl
jmp
adcl
jb
lret
inc
lret
inc
pop
add
jnp
cmp
int
fwait
dec
aam
roll
bound
and
sub
push
pop
mov
es
cmp
add
movsl
sbb
add
sub
lods
popa
lods
sbb
cld
lcall
pop
xor
leave
aad
and
add
fsubs
call
sbb
and
lds
outsl
bound
loop
mov
mov
sbb
and
repz
mov
jmp
or
adc
pop
xor
mov
int3
shl
sahf
cwtl
jl
sbb
cmpsb
out
jnp
popf
xchg
or
arpl
dec
cmp
push
sbb
mov
dec
inc
adc
mov
add
push
hlt
push
sub
and
daa
or
pop
mov
inc
push
jnp
fxam
scas
sahf
and
icebp
out
add
nop
mov
mov
fstpt
inc
pusha
stc
dec
cmp
nop
test
xchg
xchg
test
xor
add
repz
sub
test
mov
je
xor
xchg
les
adc
faddl
dec
shlb
std
ss
pop
movsl
ss
lret
sarb
push
lock
inc
sarb
pop
or
test
movb
pop
jl
mov
rcll
out
mov
adc
adcl
int3
aad
cmp
cli
and
jecxz
les
xchg
insl
je
outsl
and
jae
mov
call
ds
call
xor
cltd
fisttpll
popf
test
pushf
and
nop
mov
xor
cs
lds
outsb
jb
pop
dec
enter
inc
cs
andps
leave
call
imul
cltd
inc
xchg
pop
scas
pop
push
stos
inc
ljmp
fwait
adc
aad
mov
shrb
stos
daa
js
push
inc
cmc
shufps
scas
in
and
arpl
mov
and
mov
cmp
xlat
sbb
pop
and
inc
repnz
ljmp
cmp
insl
and
mov
inc
mov
shrb
pop
push
xor
or
aaa
mov
loop
sahf
jnp
idiv
out
mov
sahf
xor
dec
sarb
lods
or
xorl
cmp
pop
sub
call
cmp
sbb
mov
xor
fwait
jae
in
mov
mov
mov
jns
mov
xor
enter
jp
push
xor
cmp
sbb
add
in
cwtl
xchg
add
pop
or
xor
adc
movsb
mov
fs
shrb
push
inc
cmp
add
cli
mov
inc
or
mov
sub
jo
movsl
mov
sub
cmp
mov
rclb
pop
add
xchg
xchg
sbb
sahf
lds
adc
lret
push
mov
sbb
sub
hlt
test
insl
sahf
fnstenv
pusha
mov
jmp
mov
jns
mov
out
sahf
jns
aam
and
xchg
inc
and
incl
adc
rclb
adc
test
lcall
js
pushl
inc
xchg
push
jge
cmc
cs
or
mov
outsl
push
aam
sti
fs
cwtl
aaa
mov
aam
pop
nop
es
lods
adc
pop
sbb
add
or
xchg
add
pop
pusha
or
into
mov
xchg
dec
decl
sbb
sbb
das
xor
test
mov
iret
jecxz
mov
fistl
sub
sahf
test
aad
mov
inc
stc
hlt
cmp
push
mov
jae
and
dec
addr16
push
push
sub
mov
insb
cmp
repz
mov
xorl
cmpl
xor
shl
xchg
mov
or
dec
or
inc
repnz
sub
and
dec
jns
cmpb
arpl
xchg
mov
das
insb
dec
gs
sub
mov
fsubp
cmp
pop
int
js
ficompl
or
or
bound
pop
cmp
int
mov
mov
out
lods
popf
fdivrs
ljmp
rorl
or
lods
mov
or
adc
pop
icebp
cmp
dec
push
in
dec
xchg
mov
pop
es
mov
sbb
ja
xorl
aam
sub
daa
cmp
in
push
popa
fmull
jnp
rcrb
in
das
cs
jns
test
sub
movsb
add
subl
xchg
popf
push
dec
les
and
xor
loopne
dec
mov
jl
push
loopne
xor
dec
pop
jae
pop
add
push
cmp
jns
xlat
and
popa
sub
in
jae
stos
inc
or
es
xlat
rclb
lcall
cld
push
pusha
cmp
lds
js
lock
dec
std
cli
inc
cmp
ja
fnsave
fistpl
xchg
xchg
xor
add
cmpsl
jne
dec
mov
negl
movsb
icebp
pop
popl
sbbl
es
cmp
xabort
jo
fnstsw
lret
cmp
pop
ss
hlt
fwait
test
cmpsl
sti
dec
daa
jp
loopne
dec
repz
or
pushf
popa
int
xor
dec
sub
mov
mov
xor
cmp
push
pop
sarb
add
pop
mov
push
mov
adc
xlat
jmp
js
lahf
jp
dec
mov
incl
mov
or
sbb
icebp
cs
ljmp
and
test
xor
popa
lret
out
sub
and
add
mov
repz
push
cmp
add
jge
or
push
aam
pushf
push
add
in
sbb
iret
jge
jae
mov
xchg
sti
mov
dec
cmpsl
shr
stc
jge
cmp
pushf
shl
xor
sub
adcb
xchg
sarl
sub
repnz
xor
pushl
xor
xor
jae
pusha
jne
cld
add
inc
hlt
mov
jbe
imul
adcb
fcmovne
cmpsb
loopne
xchg
addr16
jbe
repz
sub
sbb
pop
add
sbb
mov
sub
pop
mov
aam
push
ds
pop
rcll
mov
mov
jl
call
ss
sub
jmp
call
cmc
rcll
mov
mov
shr
fmull
int3
pop
jmp
xlat
es
mov
pusha
dec
dec
imul
push
push
movsb
shr
scas
sbb
lcall
fsts
sbb
cmp
shll
xlat
pop
data16
mov
ret
in
dec
or
cmp
out
cmpl
add
es
aad
orl
hlt
jmp
xor
fisttpll
add
dec
or
lret
nop
pop
and
in
pusha
jno
pop
mov
sbb
pop
add
sbb
inc
pop
inc
xchg
adc
test
addr16
mov
dec
xor
fst
push
mov
ljmp
testb
addr16
adc
aam
sub
jg
xorl
lret
xor
add
sub
jne
sbb
iret
lret
pop
call
cmc
xchg
imul
lock
lods
jmp
inc
sahf
jne
push
adc
jmp
mov
in
adc
add
fadd
je
sub
mov
cltd
adc
jmp
mov
sub
or
cmpsb
nop
dec
loope
push
jge
add
out
fsub
cmpsl
and
das
loop
sti
jge
dec
insl
cmp
icebp
popa
cmp
test
lret
pop
es
out
xor
and
into
cmp
pop
popf
repnz
jae
cmp
ret
add
lds
xor
mov
xor
cli
jbe
dec
repz
aad
cmp
mov
add
mov
or
int3
sub
mov
cmpsb
or
fldl
mov
call
xchg
mov
inc
dec
jo
sbb
push
push
mov
je
movsl
inc
sbb
xchg
xor
mov
push
sub
jae,pt
aaa
lret
vpshaq
jg
jmp
scas
lcall
xchg
jle
xchg
div
xor
loop
cmp
add
pop
in
mov
pusha
sub
sub
push
divl
xchg
adc
jecxz
pop
cmp
ja
inc
fisubl
aas
adc
fs
cmc
lgs
jns
mov
xchg
lods
jae
ss
nop
adc
test
cmp
scas
pop
mov
jno
lret
icebp
lahf
ficoml
dec
scas
stc
data16
lahf
notl
mov
mov
fisttps
mov
mov
cmp
mov
or
cmc
loope
pop
imul
dec
fdiv
dec
movsb
pushf
std
xor
mov
dec
std
dec
sarl
dec
push
xor
or
mov
fwait
in
jnp
xlat
popl
lahf
mov
out
jnp
in
shlb
mov
inc
adc
popf
cmp
mov
rclb
or
int
xchg
mov
adcb
mov
fwait
lret
or
sbb
mov
dec
sbb
cmpsb
cmp
cli
lock
inc
std
iret
insb
and
sar
cmp
and
push
pop
aas
mov
lret
xchg
dec
pop
adc
repnz
loop
xchg
cli
cmp
popf
insb
repz
stc
xchg
cs
fidivrs
fistpl
sbb
test
jecxz
push
aaa
jp
orl
cmp
xchg
fwait
stc
addr16
clc
push
or
rcll
dec
fiaddl
lock
in
setb
xlat
push
dec
sub
and
nop
sub
push
lods
rcr
addr16
movsl
enter
lods
int3
scas
lds
push
ja
repnz
test
jns
call
les
and
into
test
out
aad
nop
sub
mov
adc
dec
xor
stos
or
and
pop
jbe
inc
leave
adc
sbb
xchg
adc
jb
mov
sbb
mov
incb
insl
push
lahf
lahf
stos
pop
les
jnp
sar
lcall
mov
insl
pop
std
fs
ss
repz
pop
mov
pop
dec
inc
jnp
xor
and
in
repz
addl
ret
aaa
sti
push
filds
pop
test
pushf
xchg
or
add
xorl
fmull
fmull
and
fsub
incb
and
xlat
leave
mov
mov
mov
add
and
and
nop
push
ret
aam
repz
fwait
add
mov
push
test
dec
sbbb
bound
pop
leave
mov
jp
out
scas
push
sbb
pop
aas
scas
movb
mov
push
data16
or
push
dec
pop
dec
mov
sti
iret
pop
inc
stos
and
add
sbb
ljmp
popf
jne
fwait
dec
in
cmpl
push
and
dec
iret
lds
xchg
std
sbb
pop
cs
lock
hlt
popf
out
jg
push
mov
fistl
cmovp
clc
pop
cmp
je
jecxz
inc
add
xchg
fxtract
mov
mov
fstpt
test
mov
sarb
in
std
add
fbld
mov
dec
movsl
inc
jp
shrl
mov
and
jg
and
xor
sub
test
lret
or
or
lock
add
mov
mov
dec
xchg
push
inc
ret
jecxz
outsb
mov
pop
shrb
in
mov
hlt
pop
test
leave
out
dec
andl
mov
jecxz
mov
push
lret
das
inc
mov
mov
mov
icebp
fs
nop
xor
mov
adc
cmpsl
cmp
or
aas
cwtl
mov
xchg
adc
je
call
test
push
jl
ja
cmp
push
sub
ljmp
cs
xchg
push
in
xchg
ljmp
add
cli
in
jno
data16
and
jnp
cmpsl
dec
iret
pop
dec
cltd
and
add
pop
push
cmp
add
and
subl
sbb
fstpl
lds
xor
aad
xor
and
cmc
fldt
xor
cmpl
mov
xor
push
mull
xor
je
dec
pop
cmp
iret
data16
cwtl
pop
and
ret
jno
push
pop
push
cltd
repnz
and
mov
add
rcrl
cmpsb
movb
dec
sbb
fiaddl
jo
jb
adcl
aad
scas
rorl
js
nop
aad
xor
jmp
outsb
insl
mov
das
xor
mov
std
pusha
push
idivb
push
test
aaa
push
inc
jmp
cmp
pop
insl
addr16
and
lods
inc
cmpsb
pop
icebp
mov
hlt
mov
mov
xchg
dec
mov
add
mov
outsl
jl
je
mov
xor
push
inc
mov
shll
aaa
cmp
mov
mulb
sbb
jno
ret
inc
adc
jg
mov
not
xchg
jns
subl
xor
inc
and
push
shll
cmp
fwait
push
aaa
jp
pop
adc
shr
fwait
int3
and
lahf
adc
pop
test
insl
jecxz
sti
xchg
ja
stos
mov
push
adc
out
jns
mov
add
mov
out
xlat
movb
push
fwait
sub
data16
mov
jb
out
or
loopne
jle
adc
mov
xor
jo
inc
mov
xchg
cmp
loopne
mov
mov
stos
sub
cli
cmp
cmp
sbb
stc
dec
cwtl
stos
cltd
lret
jbe
or
jb
xor
int3
lods
frstor
shlb
pop
test
insb
inc
inc
fnstcw
loop
andl
pop
sub
push
outsb
outsb
icebp
or
dec
mov
push
jno
rol
pop
lods
insl
cli
pop
insb
lcall
dec
repnz
jno
sub
int
push
jmp
pop
sbb
mov
dec
xchg
shrl
xor
daa
push
gs
mov
push
js
inc
or
shlb
fstpl
push
test
mov
ljmp
jo
sbb
mov
fmull
cmp
or
lods
inc
pop
fnstcw
xchg
icebp
fistps
mov
add
pop
rcrb
call
push
push
jno
enter
clc
cli
xor
add
adc
and
popf
sbb
lcall
sarl
xchg
andb
mov
mov
pushf
scas
frstor
mov
jne
mov
mov
cmp
std
das
or
sub
fstl
pop
aaa
and
sub
lods
call
mov
arpl
or
xor
pop
jp
in
lret
cli
icebp
loope
jnp
xchg
mov
inc
arpl
inc
mov
mov
sub
add
arpl
sub
mov
add
shrl
push
inc
je
sub
std
inc
fmull
xchg
mov
lcall
in
and
xchg
dec
repnz
std
add
add
lret
xchg
sarl
adc
pop
sub
fcomps
jle
push
jb
fs
loopne
mov
mov
loop
mov
jnp
push
cli
mov
loop
out
mov
pushl
jnp
xchg
int3
gs
test
add
movsl
jno
insb
std
testl
and
imul
xor
cmc
sti
je
mov
or
add
rorb
jge
sub
dec
mov
push
fwait
es
iret
pop
cmp
jmp
out
xor
das
sub
fwait
test
xor
test
scas
sbb
mov
lahf
and
cmp
and
and
and
in
das
insl
and
mov
fistl
je
xchg
es
inc
ja
shlb
enter
and
mov
pop
push
add
dec
mov
cmc
inc
or
mov
sbb
dec
jae
sbb
add
sbb
lldt
push
and
fistl
pushf
push
push
loope
jbe
push
shrl
clc
pop
movsb
mov
cmp
movsb
loopne
stc
inc
pop
pop
jb
call
sbb
out
pop
mov
lods
jg
sbb
aas
in
jecxz
stc
iret
movb
insl
mov
dec
mov
pop
xchg
fwait
jg
push
mov
ffree
ret
jle
loope
dec
popf
inc
rcrb
stos
outsl
xchg
pop
subl
pusha
cltd
adc
dec
fidivl
fsubrs
sbb
xor
dec
insb
in
js
mov
sti
inc
pushf
pusha
in
loopne
enter
xor
sbbl
xchg
fs
xchg
pop
rcr
mov
push
mov
lahf
or
adc
test
jo
mov
cmp
push
shlb
xor
adc
arpl
pop
inc
jmp
leave
repz
pop
cmpl
popa
pop
ja
and
and
dec
out
xchg
xchg
jmp
jo
sub
jp
cmpsl
xor
and
dec
lods
xchg
sub
dec
imul
jns
mov
sbb
inc
mov
xchg
or
sub
jnp
lea
repnz
dec
add
jae
cli
xchg
xchg
pusha
std
sbb
arpl
add
push
and
fsubrp
pop
das
or
jg
xchg
aad
xchg
adc
fmull
rcr
cld
mov
mov
scas
gs
jp
sbb
notl
mov
inc
adc
call
xlat
popf
sub
jns
cmpb
cmp
shrl
sbb
sub
hlt
test
mov
popf
xchg
imul
jo
mov
imul
imul
popf
xor
js
shl
mov
mov
loopne
xchg
sub
mov
frstor
int3
inc
fimull
xchg
sbbl
sbb
pop
cmp
ret
dec
mov
out
lcall
out
pop
lret
fnstcw
out
daa
fildl
addl
out
ds
xchg
or
mov
test
inc
lahf
pop
sub
pop
xchg
add
and
testl
jmp
out
mov
popa
mov
dec
jl
cltd
daa
cli
add
int3
and
mov
push
push
adc
lahf
in
jmp
insl
and
jecxz
inc
out
sbb
add
in
ret
aad
adc
aas
mov
pusha
repnz
fisubs
ret
sbb
ss
sub
xchg
pop
push
gs
in
xchg
or
jns
push
push
adc
pop
cmc
mov
mov
sub
mov
mov
adc
adc
sbbl
pop
out
rcl
repnz
sub
int3
push
and
dec
xchg
sub
fmuls
and
cmp
jo
roll
jl
les
and
icebp
roll
in
xchg
repnz
mov
ljmp
push
sub
lods
je
add
adc
dec
insb
xor
dec
fbld
pop
imul
sbb
dec
push
cmp
inc
push
cmp
adc
xchg
mov
pusha
imul
push
sub
xor
jl
mov
int
push
pop
dec
jmp
dec
adc
pusha
call
xchg
add
mov
cmp
xchg
ljmp
xor
clc
lock
out
mov
call
repz
les
xchg
push
jl
push
add
mov
shrb
adc
ds
mov
add
or
sbb
je
pop
xor
sub
cmp
mov
pop
cli
sub
dec
in
xor
mov
xchg
jmp
add
push
pop
jg
sub
push
xchg
fdivl
push
jecxz
xchg
ret
mov
dec
and
dec
push
cmpsb
pop
mov
jae
int3
and
cmp
pop
int
cmp
jae
hlt
pusha
lods
lods
push
xor
aad
ficoml
xchg
inc
inc
sbb
xorl
xchg
lret
sti
int
ss
lods
lret
xor
xchg
jle
aam
shl
cwtl
aam
jne
mov
or
pop
sbb
pop
add
mov
aas
sbb
and
stc
in
outsb
cmp
dec
shl
jo
scas
faddp
xchg
pop
movl
xlat
inc
and
push
andl
inc
lock
xchg
bnd
ltr
dec
push
call
sbb
sub
push
sub
hlt
nop
push
imul
ds
cmp
jl
push
test
lods
cmp
mov
push
rcrb
clc
leave
call
btc
dec
test
sbb
push
xchg
int3
push
xchg
aas
outsb
or
lods
sub
daa
mov
mov
pop
cmpsl
xchg
dec
call
mov
leave
push
dec
and
ficompl
outsb
out
test
inc
iret
dec
or
fnstenv
mov
mov
xchg
or
cmc
outsl
mov
adc
jmp
sbb
lods
and
jmp
jg
loop
push
sbb
cli
cmp
xchg
loop
or
or
fs
mov
mov
outsb
fcompl
jne
cmpsl
lahf
sub
pop
shr
inc
lds
jo
out
outsl
hlt
jns
xchg
jle
testb
cld
test
dec
or
test
cwtl
je
in
cli
sti
or
pop
jne
cwtl
push
adc
test
js
push
lret
fiaddl
stos
shl
sbb
repnz
inc
loop
into
jno
pop
lret
hlt
and
pop
ss
and
test
ss
cltd
push
mov
fcmovnbe
adc
xlat
cltd
jge
lret
sub
lahf
dec
xor
push
push
leave
xor
xor
mov
xchg
push
push
jo
fadd
mov
xlat
daa
int
mov
gs
aaa
cmc
mov
cmp
add
sub
cwtl
insl
daa
push
aaa
mov
lock
mov
cmpsb
or
dec
subb
bound
clc
mov
lds
cmp
push
bound
mov
das
and
lock
pop
adc
cmp
and
pushf
xor
mov
cmp
out
mov
lock
xchg
aad
lret
sbb
inc
jge
not
cwtl
sbb
add
push
scas
test
adc
mov
mov
mov
int3
outsl
mov
add
inc
or
neg
repnz
mov
ljmp
lahf
leave
add
mov
sti
insl
mov
or
cmp
ret
and
shlb
test
aam
dec
ret
and
mov
cwtl
pop
inc
fisttps
rcr
sub
nop
sbb
mov
pusha
mov
mov
dec
pop
mov
fistl
fnstsw
scas
movsl
sub
mov
clc
push
ret
xor
cmp
loopne
dec
inc
iret
xor
mov
dec
sahf
out
sahf
mov
ficomps
int
or
cli
aad
adc
scas
mov
jg,pn
and
pop
das
cltd
dec
inc
xchg
je
push
pop
mov
jmp
imul
mov
pop
sbb
jb
rclb
mov
fstps
dec
push
jno
push
test
adc
int3
xor
mov
dec
xchg
jp
xor
fcom
orl
and
jo
outsb
iret
ja
add
in
call
jg
sub
inc
lcall
test
pop
push
adc
xor
je
sbb
mov
popf
ret
out
leave
cltd
in
push
cmp
ret
dec
mov
lea
cmp
xor
enter
movntq
pop
mov
out
and
push
jne
das
or
sbb
xor
jle
rcrl
sub
mov
pop
xchg
shl
adc
nop
in
cld
mov
ret
imul
nop
cmpsl
xchg
push
scas
ljmp
xor
aaa
jg
mov
inc
ss
mov
addr16
outsb
ficompl
cmp
repz
adc
test
xacquire
das
ret
ds
int
xor
loop
cmp
push
filds
inc
loope
cli
shr
add
sbb
adc
faddp
or
xchg
xchg
xchg
xchg
jecxz
sub
or
sbb
ret
xor
jmp
adc
or
sbb
out
push
pop
js
jp
push
jns
sbb
xchg
xchg
jns
test
push
dec
add
pop
int
sub
mov
dec
dec
xchg
jne
jecxz
jb
mov
mov
mov
fcomps
sahf
lret
sub
scas
xchg
bound
push
jl
xorb
outsl
jbe
lahf
mov
push
jne
iret
lahf
fldenv
out
int
mov
lret
dec
fsubl
outsb
dec
mov
and
out
push
dec
lcall
subb
push
add
push
pop
enter
shlb
stc
mov
mov
std
xchg
mov
mov
push
mov
pop
cmp
mov
xchg
jp
or
ficomps
dec
leave
insb
cmp
rcrb
je
jo
and
aas
xlat
mov
or
jmp
mov
sub
pop
call
int
mov
or
xor
scas
iret
mov
stos
popf
mov
or
xchg
or
nop
add
adc
adc
pop
lcall
hlt
arpl
aas
pop
fwait
mov
sbb
cmc
js
inc
jle
shlb
mov
cltd
pop
sub
or
xchg
dec
mov
outsb
dec
xchg
lret
inc
xchg
jle
inc
ljmp
sbb
cltd
nop
mov
stc
sbb
push
in
neg
cmp
mov
call
incb
popa
sub
clc
rcl
daa
pop
addr16
iret
pop
iret
movsb
aam
jmp
fwait
orb
xor
mov
in
mov
jg
in
mov
sahf
dec
add
sbb
xchg
es
mov
inc
mov
sar
fwait
ret
push
lds
mov
aas
mov
in
insl
lea
js
inc
icebp
cld
mov
jb
dec
adc
or
roll
xchg
dec
and
dec
ret
push
jns
mov
popf
dec
sbb
fwait
push
and
xchg
cmp
cmp
cltd
inc
mov
push
enter
mov
xor
xor
in
sub
sbb
das
dec
ds
adc
cmpsl
jbe
sub
xor
in
testl
jbe
adc
add
bound
add
sbb
pop
out
sbb
ds
xor
in
cld
push
adc
inc
push
sbb
lret
popf
js
push
inc
cmp
outsl
adc
arpl
xchg
cmp
data16
jge
mov
fisubrs
mov
repnz
fidivrs
cmp
xchg
das
dec
test
xor
iret
mov
dec
icebp
cli
mov
lods
sahf
sub
fucomi
mov
js
mov
pop
add
push
sbb
xor
pop
fnstenv
cmp
into
mov
add
fwait
shll
mov
pop
nop
fs
aaa
out
sub
lods
cmpsl
sar
shrl
adc
adc
xchg
adc
subb
scas
dec
mov
xor
pop
daa
pusha
imul
jns
fisubrs
subb
cmp
mov
shll
into
fcomip
nop
into
cmp
dec
iret
mov
sbb
push
xchg
sub
dec
daa
lahf
dec
pop
pop
lds
inc
dec
and
push
ss
aaa
loop
dec
xchg
ljmp
stos
ss
and
ss
insl
negl
test
xor
leave
cmpsl
daa
arpl
adc
gs
jmp
dec
je
pop
daa
shll
sub
cmpl
scas
filds
push
or
out
icebp
mov
cmovle
lret
or
push
ljmp
dec
fisttpll
and
stos
sbb
inc
push
mov
or
inc
frstor
js
and
outsb
push
dec
sahf
repz
jp
inc
or
add
imul
js
mov
fcmovbe
xor
dec
adc
push
sub
cmpb
mov
jge
cmp
test
push
rcrb
filds
pop
fmul
mov
add
mov
xchg
test
adc
and
lock
imul
push
and
out
shrb
pop
lret
xchg
sbb
dec
imul
loop
push
icebp
mov
imul
fdivs
mov
fistpl
ret
mov
inc
filds
pusha
out
jecxz
iret
insb
addr16
aaa
inc
xchg
pop
cwtl
dec
orl
jecxz
xchg
xchg
fwait
xor
pop
push
aam
out
or
inc
popf
test
ljmp
insl
arpl
shll
subb
inc
or
fiadds
enter
push
adc
mov
movsl
outsb
or
pop
popf
addb
fs
lcall
in
sub
dec
cltd
shl
rcl
fstpl
cmp
out
loopne
sti
mov
icebp
mov
in
jp
addr16
fbld
int
push
cmp
sbb
inc
nop
sub
js
dec
jns
pop
sbb
inc
daa
or
or
shlb
das
and
cli
movl
dec
inc
orb
les
mov
push
add
add
pop
icebp
inc
sub
push
inc
mov
jno
scas
xor
pop
and
mov
jb
pushf
push
add
out
cli
xchg
dec
sarb
xor
jno
cwtl
and
aas
dec
jne
or
push
rorl
sahf
imul
pop
xchg
push
cmc
lods
mov
inc
mov
cmpsb
jmp
cmp
cmp
in
scas
call
lcall
xor
xchg
imul
mov
popa
loopne,pn
les
leave
add
es
xchg
cmc
adc
jne
int
sub
dec
sub
popf
push
aas
and
cwtl
push
out
rcrb
lret
cmpsl
imul
jb
mov
cmpsb
popf
xor
fisubl
aam
loopne
iret
add
cmpsl
inc
es
sti
mov
xchg
ud0
in
mov
cmp
jmp
aaa
and
inc
call
or
aam
mov
push
push
fldcw
cmpsb
rorb
xchg
daa
repnz
inc
mov
cmp
or
das
inc
push
dec
lods
loope,pn
inc
adcl
mov
mov
jmp
mov
mov
add
jg
pusha
roll
enter
inc
repz
xchg
add
shlb
mov
pop
hlt
inc
cmp
pop
les
js
fisubrs
out
lcall
nop
mov
lods
mov
cmc
pop
ret
jecxz
sbb
cmpsl
js
js
jmp
cmpxchg
cmpsb
mov
mov
ljmp
pusha
mov
pop
ss
add
or
sbb
jg
cli
pushf
jg
sbb
dec
sub
fsubr
ljmp
out
les
int3
setne
pop
inc
cmp
int3
mov
pop
cwtl
inc
into
repnz
ss
xor
pop
dec
imul
cwtl
test
les
mov
add
repnz
shr
incb
push
sbb
push
jmp
lods
popa
pusha
mov
lds
aad
mov
mov
pop
xor
test
and
push
jp
sub
sahf
mov
loop
and
mov
rolb
and
aas
in
fdivrl
xor
xchg
jo
jns
insb
pop
int3
bound
push
faddl
jmp
pop
pop
pop
jl
lods
sbb
or
mov
or
push
inc
push
orl
vpshaw
out
sub
aaa
cli
mov
xchg
divb
call
jle
pop
xchg
mov
out
jb
push
bound
xchg
mov
jbe
mov
movl
push
jp
pop
in
ljmp
orl
cbtw
pop
aad
xor
int
mov
lods
mov
sbb
pop
loopne
add
sbb
pop
push
fcomps
fcomip
add
xchg
or
or
xor
push
into
dec
enter
inc
xchg
sarb
sbb
insl
leave
inc
cmpl
mov
mov
inc
and
mov
sub
xchg
pop
or
repnz
jno
lahf
leave
jbe
jecxz
add
insb
outsl
mov
push
daa
or
nop
imul
cwtl
out
in
push
sub
xor
pop
xor
mov
inc
jne
andb
mov
fsubl
pop
sub
sbb
add
icebp
rcrl
lock
jl
jecxz
xchg
xor
cwtl
loopne
leave
mov
movsl
sub
movsb
push
out
mov
jo
inc
jg
cmpsl
ljmp
xorl
push
xchg
js
pop
fwait
ja
outsb
sub
add
mov
mov
gs
add
sub
xor
cltd
jmp
mov
xor
icebp
dec
les
test
int
les
lds
xchg
call
push
shr
les
icebp
jp
pop
movsl
mov
jbe
in
repz
pop
rcl
stos
sbb
test
in
out
jg
daa
fadd
jl
xchg
mov
jecxz
mov
movl
outsl
xor
adc
in
xchg
push
imul
mov
jge
out
sub
loop
mov
push
adc
hlt
movsl
jns
sub
mov
cli
xchg
sub
mov
dec
mov
inc
aam
mov
enter
lock
lret
cmp
jle
shlb
cmc
push
add
movsl
add
mov
loope
dec
mov
and
xor
and
adc
loope
fnstenv
shll
popf
popa
xchg
dec
hlt
leave
xor
data16
stos
sub
daa
fistl
stos
dec
xor
sub
fwait
jb
mov
inc
lret
loopne
push
mov
or
mov
xchg
jmp
mov
inc
jecxz
scas
xor
mov
unpcklps
call
mov
jmp
div
pop
cmp
cli
ffree
ret
or
in
sub
mov
fisubrs
outsl
push
fsubrl
cmp
sbb
cmp
cltd
or
jno
int
aad
cmc
jno
lahf
push
xchg
ficompl
dec
addr16
cs
arpl
xor
icebp
in
data16
jnp
cmp
push
stos
push
jns
or
rep
adc
fists
loop
pop
mov
mov
fwait
imul
loopne
cmp
popf
mov
push
xchg
sub
testb
inc
push
jle
jb
push
aad
fwait
std
imul
test
mov
mov
cmpsb
mov
pushf
sbb
mov
inc
mov
cli
mov
or
enter
adc
cli
add
andl
mov
dec
fstl
mov
adc
xlat
xchg
push
shl
in
pop
iret
pushf
mov
rorl
push
bound
or
dec
jb
mov
jge
bound
scas
cwtl
and
es
fiaddl
or
arpl
lahf
into
sub
lea
cmp
sahf
fcoms
mov
cmp
jns
fsubr
adc
pushf
adc
cltd
inc
shrl
pushf
sbb
and
and
cmpsb
iret
stos
ljmp
test
rorl
sbb
insb
scas
push
mov
inc
sti
out
dec
mov
out
add
jns
cmp
xlat
mov
mov
jg
inc
inc
mov
mov
in
mov
js
js
mov
test
xchg
sub
rclb
mov
lahf
push
orb
inc
mov
test
ljmp
adc
adc
mov
push
pop
xchg
out
push
js
or
mov
mov
xlat
js
cwtl
stos
add
jecxz
aam
out
imul
mov
inc
repnz
or
jmp
pop
jg
nop
int
sub
enter
fs
nop
mov
test
dec
adc
shll
push
stos
dec
js
inc
jb
aas
add
inc
push
orb
pop
aam
dec
adc
xlat
outsb
dec
inc
fs
rorl
lds
jg
into
cmp
lret
test
fimuls
int
test
xchg
xor
cmpb
mov
imul
mov
adc
jle
movsb
mov
add
pop
pop
push
addl
sbb
movzbl
sub
sbb
inc
mull
jb
jle
mov
mov
push
cmpsb
mov
xor
fdivrs
out
sub
mov
xor
add
xchg
sub
pop
push
mov
daa
out
icebp
hlt
jle
jb
imul
icebp
cmp
add
jno
xor
mov
sbb
out
mov
and
dec
in
mov
movsl
cli
add
xchg
jae
push
je
sbb
and
stos
dec
or
jge,pt
xchg
xchg
or
cwtl
adc
gs
push
mov
lahf
in
insl
leave
sbb
fs
jns
sub
roll
or
fiaddl
sub
xor
sti
inc
xchg
mov
out
ficompl
das
hlt
xchg
addr16
fst
push
pop
fisubrl
insb
xor
mov
inc
xchg
or
mov
insl
push
inc
and
scas
gs
stos
add
int3
ror
jecxz
adc
dec
xor
imul
pop
add
mov
push
add
dec
xchg
xchg
sbb
cld
cmpsl
out
inc
dec
movsb
out
fldl
and
mov
sub
or
push
bound
sub
cmpsl
jns
loope
lock
scas
mov
xlat
jne
jg
xlat
loopne
testl
cltd
jne
neg
sub
lret
inc
xchg
xor
out
mov
add
popa
cmpsb
mov
popf
sbb
jno
lods
dec
inc
mov
adc
fwait
mov
testb
lods
dec
ds
scas
jecxz
cmpsl
fisttpll
adc
aaa
dec
popa
add
inc
arpl
sti
cltd
daa
scas
mov
rcrb
mov
enter
add
lahf
repnz
mov
int
mov
add
xchg
sbb
fstl
loope
sub
lret
test
shlb
ljmp
inc
xor
lods
into
xor
and
cs
add
and
mov
lods
push
sub
inc
pop
out
sbb
lcall
imulb
push
pushf
and
popf
push
lret
mov
mov
call
pushf
ret
popa
cs
repnz
cli
test
fistpl
dec
sbb
addb
mov
scas
xchg
pop
xchg
mov
cmp
je
fwait
dec
mov
inc
xchg
cmp
sbb
cmc
pop
sub
or
das
jno
mov
dec
pop
inc
outsl
push
xchg
int
push
or
pfcmpge
or
cltd
inc
enter
cmp
nop
test
outsl
jecxz
adc
mov
into
aas
xchg
jg
add
sbb
jne
clc
cld
jb
push
mov
cmp
sbb
aas
fs
mov
sbb
mov
int
ret
outsb
sub
dec
decb
mov
ficoml
add
jo
add
je
pop
clc
les
repnz
rcrl
data16
jl
arpl
jl
loopne
mov
xchg
mov
jns
insl
mov
cli
cmp
test
jl
ja
addb
out
out
pop
gs
adc
sub
sti
nop
ret
js
push
adc
test
das
xchg
adc
cli
and
inc
dec
pop
cmpsb
jg
add
mov
lahf
test
shrl
fadd
or
lret
add
insl
out
es
ret
insb
push
inc
mov
sub
xor
cmpl
jg
dec
xchg
mov
jle
repnz
sub
mov
repnz
les
out
in
fldcw
sub
dec
mov
dec
pop
and
push
leave
fistpll
das
add
inc
mov
and
movsl
mov
add
cmpsl
sbb
movsb
cmp
and
clc
sub
hlt
in
add
mull
test
ja
dec
sahf
movsb
js
dec
adc
pusha
stos
push
push
mov
xchg
popf
push
hlt
dec
xor
jno
out
jno
icebp
mov
outsb
fidivrl
adc
xchg
xor
jns
das
sub
pop
les
jo
into
sbbb
push
dec
inc
loopne
int
es
std
push
xchg
or
jns
cltd
pop
jns
insl
xchg
push
addr16
loopne
andb
movsb
imul
mov
loop
bound
lcall
xchg
popf
clc
pusha
xor
rclb
out
inc
mov
setne
mov
mov
xlat
ljmp
fcomps
imul
bound
jo
movsl
imull
push
mov
cli
mov
cmpsl
movl
jmp
push
outsb
stos
push
sarb
cmp
xchg
or
js
test
jbe
sub
fiadds
mov
aaa
inc
dec
mov
popf
fstps
mov
stos
cltd
stc
shr
leave
subl
xorb
xor
push
sub
repz
into
cld
mov
or
ret
push
jns
jle
lret
bound
or
mov
aas
xor
stos
lret
stc
mov
sbb
xor
in
push
les
nop
pushf
push
mov
or
pop
pusha
xchg
je
lds
int3
cli
jo
inc
jle
or
ret
lea
testb
xor
clc
dec
dec
movsl
in
inc
fisttps
divb
lds
xchg
or
mov
adc
push
dec
lds
push
outsl
jge
test
out
jle
lds
sti
sub
notb
in
jnp
out
les
or
mov
jae
add
mov
sbb
jbe
mov
fstpt
aas
ljmp
test
mov
sbb
or
loop
ds
xchg
jmp
movsl
sub
movlps
sbb
xchg
jnp
xor
daa
lea
mov
scas
mov
push
fs
enter
and
inc
xchg
dec
inc
xchg
std
mov
inc
sbb
inc
outsl
jmp
in
xor
out
in
ja
or
inc
les
pop
pop
mov
lahf
shll
enter
inc
pmaxsw
adc
lret
xchg
sub
mov
std
pop
mov
pushf
sbb
pop
mov
scas
andb
inc
jg
out
lods
imulb
or
addb
cs
inc
jp
mov
test
inc
cmp
add
mov
pop
pop
mov
or
or
fiadds
sub
pushl
sub
fisttpl
xchg
icebp
dec
jns
repz
jg
xchg
dec
xchg
mov
test
push
cmp
adc
push
idivb
cmp
lds
mov
or
inc
in
fisubrs
cmp
jno
dec
pop
jge
sti
xor
sbb
sbb
cmpsb
sub
mov
and
add
cld
ja
cwtl
fwait
jne
mov
ss
pushf
enter
mul
into
dec
pusha
inc
adc
ficoms
mov
mov
xor
mov
push
insl
repz
mov
sbbl
jnp
jp
push
insb
dec
pusha
adc
leave
daa
jno
pusha
shlb
stc
rcrl
jne
push
lods
mov
hlt
mov
add
dec
and
mov
dec
jae
xor
mov
jp
fisubl
push
leave
xor
adc
xchg
sbb
xor
clc
lret
push
add
pop
add
mov
push
je
jg
push
push
out
xchg
ret
popf
xchg
stos
or
mov
in
mov
lods
jae
mov
xor
fildl
fbld
outsb
add
or
imul
scas
out
fcomps
lods
jg
push
push
rcrb
jmp
cmp
icebp
add
mov
add
sti
jb
sar
dec
xchg
pop
cs
sub
jno
data16
imul
and
fwait
mov
ljmp
inc
fstpt
cmpsl
mov
mov
sahf
mov
cwtl
dec
insb
cwtl
fwait
lcall
rorl
ss
lds
subl
pop
sbb
sub
out
cmp
out
and
jp
leave
xor
mov
out
in
fbstp
fnsave
xor
dec
pop
sbb
addr16
xchg
imul
aas
test
fisubrl
nop
outsl
xor
ss
jmp
lahf
sub
scas
jle
test
les
mov
pop
test
push
lea
jl
incb
in
in
dec
out
outsl
push
lcall
clc
mov
mov
cmpsl
dec
test
js,pt
je
add
in
sbb
out
shlb
push
jmp
jbe
cmp
cmpsb
push
mov
divb
aam
xchg
sbb
mov
jge
dec
xor
inc
sub
cmp
jmp
fnstcw
jge
sbb
adc
pop
xchg
fsubrl
sarl
inc
imul
push
das
pop
fnstcw
pop
cwtl
cmpsb
lret
outsl
roll
sub
jmp
out
rorb
pop
scas
xchg
minps
cwtl
out
jge
mov
cmp
cli
or
xorl
adc
mov
aam
lds
dec
mov
loope
roll
ret
mov
adc
push
rorb
jge
mov
add
mov
xor
jne
dec
cmp
mov
push
inc
push
adc
lahf
js
lds
xchg
mov
addl
loop
mov
jle
popa
test
dec
je
scas
push
xchg
hlt
shlb
mov
cmpsl
pusha
jo
xor
xchg
jbe
outsb
dec
icebp
in
or
jge
xor
data16
push
test
icebp
cld
mov
mov
xor
mov
sub
addb
popf
inc
addr16
sbb
call
cmp
mov
repz
jp
pop
rcl
adc
cmp
pop
xchg
inc
iret
aad
sbb
cmp
sbb
stos
jl
pop
mov
fstpt
testb
aaa
push
icebp
stos
stos
or
sub
cmp
push
xchg
dec
jmp
shl
popl
imulb
cmc
fidivs
je
lret
xorl
fs
and
imul
mov
cmp
or
jns
in
xor
sbb
outsl
mov
lahf
scas
jnp
addr16
push
cmpb
test
out
addl
jge
mov
sub
pop
lahf
mov
pop
lahf
sub
inc
cld
inc
test
test
pop
std
sbb
xor
repz
mov
or
lahf
std
sub
cmp
sbb
mov
inc
pop
pop
cmp
pop
fisttps
sub
rorb
int
push
hlt
out
inc
mov
sub
adc
and
inc
js
or
scas
xor
pop
scas
mov
sub
fidivl
mov
cmp
je
mov
pushf
dec
xchg
inc
push
insl
ret
dec
test
negl
and
jne
push
in
call
fdivrs
adc
fdiv
stc
dec
pop
imul
js
xchg
loopne
and
insb
fdivrs
ret
inc
icebp
cmp
ficoms
fucomi
jmp
scas
sbb
push
mov
test
stos
pop
loopne
loopne
cmpsb
out
rclb
sbb
cmpsb
jb
lea
pop
fsubs
dec
pop
insb
loop
fnstcw
sar
dec
std
pop
shll
test
xchg
sbbb
inc
cmpb
jno
cmp
cmp
sub
jbe
call
fwait
rcl
int
inc
gs
mov
and
inc
sahf
call
pop
pop
cmp
cli
fisttps
jg
sbb
out
dec
mov
xchg
fisttpl
lret
xlat
pop
xchg
sahf
and
xor
es
std
cltd
rcll
pop
incl
shll
sub
and
out
pop
or
ret
pop
sbb
mov
jae
hlt
mov
leave
call
cmc
jp
insb
mov
xchg
fs
imul
mov
stc
pop
fwait
ja
aaa
std
jbe
adc
pushl
pusha
sbb
sbb
test
jb
insl
loop
push
push
cs
adc
jge
or
mov
fstpl
add
cmpsl
jge
dec
addb
push
loope
or
jnp
cmc
roll
imul
adc
sar
sub
inc
lea
shll
add
jle
fidivl
imul
stos
push
push
push
lret
push
cmpsl
adc
out
ficomps
testb
in
xlat
shlb
xchg
sub
rol
dec
int
addb
add
or
imul
xorl
scas
sarl
in
arpl
cmp
scas
mov
sub
add
and
out
lahf
ss
cmpl
orl
mov
mov
sub
or
jmp
ss
mov
idivb
andl
fstps
stos
pop
insl
in
or
lret
adc
push
out
shl
subb
mov
jmp
mov
lret
iret
lods
insl
pop
dec
loope
lock
icebp
ret
xchg
std
jb
sub
loopne
push
aas
bound
and
dec
std
cld
divb
into
xor
arpl
aas
mov
js
mov
hlt
movsl
xchg
sbb
xor
mov
lret
shrl
nop
xchg
movsl
cmp
ret
lods
popa
jb
pop
cld
repnz
mov
pop
adc
xchg
xchg
pushf
js
mov
dec
scas
mov
jge
push
lret
or
lret
das
addr16
xorb
mov
jae
or
sub
flds
and
popf
mov
lock
addr16
andl
or
test
lret
mov
aaa
aam
sbbb
push
mov
mov
in
sarb
out
sub
int
shrb
and
inc
in
xchg
fldt
loope
push
sbb
push
or
adcb
ficompl
mov
cmp
pop
test
sbbb
out
xchg
fprem1
inc
pop
rcl
movsb
ret
and
int
sub
fisttps
clc
cmp
push
inc
jb
cli
sub
sahf
and
lahf
pop
mov
push
es
mov
aas
dec
sbb
repz
xchg
dec
aas
fcmovb
addb
das
imul
cmc
lahf
clc
mov
mov
outsb
xor
jecxz
inc
push
jmp
add
popf
dec
xor
iret
ja
fmull
dec
dec
mov
dec
sbb
inc
xor
pop
push
mov
pop
mov
sub
xor
push
mov
mov
ljmp
test
xor
jno
mov
aad
shrb
sahf
xchg
push
lret
mov
stos
jno
out
addr16
pop
or
or
mov
mov
test
movsl
jns
lahf
push
into
dec
pop
out
mov
xlat
stc
sub
mov
jae
and
mov
xchg
test
jno
imul
ret
and
and
cmp
push
inc
mov
faddp
cs
dec
test
mov
cmpl
mov
lcall
pmuludq
fisttpll
pushf
pop
mov
mov
ds
jo
xor
add
or
sub
cmpsl
adc
xchg
aam
mov
add
mulps
pop
lcall
xor
sub
neg
pop
dec
iret
xor
xchg
insl
cli
sub
cmp
je
out
hlt
pcmpgtd
pop
cmp
inc
out
call
mov
cltd
das
rcrb
lret
pop
inc
or
loop
nop
ljmp
sub
push
cmp
mov
shlb
push
in
adc
push
jmp
xchg
dec
call
mov
dec
pop
dec
cwtl
xchg
and
sub
stos
rcl
std
lret
out
or
jbe
xchg
clc
or
cmp
in
adc
or
jmp
xor
mov
push
xchg
das
mov
insb
leave
mov
pop
xchg
or
push
mov
cmp
cmp
stos
arpl
add
sub
xchg
dec
and
imul
mov
outsl
cmp
movsb
sahf
push
xorb
aaa
and
fwait
rolb
bound
or
dec
inc
addr16
rclb
dec
and
rcr
clc
sbb
test
pop
test
imul
push
jmp
stos
cmpsl
adc
popf
fiaddl
sub
fidivrl
mov
je
xchg
dec
outsl
dec
pop
and
mov
or
jmp
sub
mov
enter
push
mov
jns
adc
cmpsl
das
imul
iret
mov
mov
adc
ret
into
fldenv
popa
xor
inc
xor
sub
fcompl
imul
xor
scas
cmp
lods
adc
xor
lods
pusha
cmpsb
push
cmpsb
fstp
mov
xchg
xor
test
jns
push
pop
cmp
mov
xor
insl
pushf
movsb
stos
les
cs
cld
push
call
repnz
lcall
pop
rol
push
loope
xchg
jecxz
adc
xchg
stos
aam
loope
mov
sti
sbb
sbb
xchg
in
lret
jo
xchg
pop
push
in
pop
scas
shr
out
or
in
mov
call
add
fwait
pop
scas
cmp
pop
xor
aam
dec
fwait
clc
negb
addl
xchg
xor
and
lret
movsl
fsubl
pop
divb
mov
adc
and
mov
jns
mov
push
mov
mov
imul
xchg
test
xchg
daa
aas
dec
pop
int3
hlt
adc
int
arpl
je
adc
movsl
scas
add
mov
cwtl
and
cmp
add
cmpsb
fisubrs
test
xor
push
cmp
or
pop
sub
daa
or
data16
pushf
push
cmc
mov
inc
jge
pop
push
xor
nop
inc
mov
xor
es
mov
enter
adc
inc
pop
ret
outsb
negl
popf
ljmp
icebp
adc
outsl
sbb
ljmp
ss
stc
jmp
sti
and
sub
add
mov
stos
mov
mov
sbb
popa
lahf
cmp
shrl
mov
cmp
arpl
sahf
lret
imul
lods
gs
or
adc
mov
nop
pop
pop
lret
test
push
add
shlb
dec
xor
or
lds
mov
pop
fstps
arpl
cltd
scas
repz
and
outsb
movsb
daa
subl
adc
outsb
clc
mov
inc
sub
xchg
ds
mov
testl
dec
fisttpl
fs
xor
jl
sbb
and
mov
hlt
jecxz
push
adc
pop
jo
lret
mov
add
ds
push
fwait
or
dec
and
push
fistps
mov
sbb
dec
sub
addb
push
fwait
sbb
mul
stos
inc
inc
pop
mov
xor
lahf
movsb
pop
pop
pop
insb
fcoms
add
or
popa
mov
jne
orl
shlb
lds
mov
jne
cltd
scas
std
adc
push
pushf
outsb
jl
mov
sub
vcvtss2sd
mov
es
and
pop
les
js
mov
push
and
and
in
jp
or
mov
pop
pusha
into
mov
test
push
jbe
or
popa
jae
test
jns
dec
pop
inc
or
rorb
jnp
xor
inc
fucomp
sub
out
aad
fists
out
imul
pusha
std
push
movsb
mov
loop
inc
jne
xchg
add
cltd
in
pop
adc
mov
fwait
clc
cmp
pop
inc
add
mov
jbe
mov
std
imul
inc
es
pop
mov
mov
mov
filds
xchg
push
fldl
jmp
mov
test
adc
cs
repnz
lock
or
mov
out
mov
jle
cltd
and
repnz
cmpsl
mov
and
mov
sub
movnti
imul
sbb
gs
sub
lcall
cmp
push
sbb
in
clc
icebp
jecxz
mov
fcomp
es
lahf
andb
mov
inc
test
mov
mov
lock
ljmp
dec
mov
in
imul
jns
cmp
and
jne
pop
or
pop
mov
push
iret
pop
add
pop
dec
iret
test
cs
ljmp
sbb
inc
xchg
cmp
dec
add
testl
push
xor
pop
or
int
mov
lods
push
adc
ficompl
aad
test
mov
xchg
sti
bound
lods
mov
je
pop
lock
xchg
push
rorb
out
imul
nop
inc
mov
push
stos
sbb
cmp
gs
mov
out
mov
pop
lods
push
jnp
jmp
jne
scas
push
notl
fdivrl
ret
outsb
mov
push
addb
idivl
enter
pop
out
popf
and
fwait
rdseed
or
in
dec
js
inc
mov
outsl
xor
es
xchg
insb
fiaddl
es
aaa
or
mov
loop
data16
jb
jbe
hlt
mov
add
push
sbb
lds
icebp
xchg
or
testb
dec
call
ds
es
data16
sub
sub
bound
pop
std
dec
and
pop
ljmp
or
movsl
cmp
xor
mov
inc
loopne
mov
dec
jo
hlt
sahf
popf
rcll
lret
fxch
xchg
aas
jecxz
imul
das
or
insb
loopne
push
dec
push
shlb
gs
push
and
or
ja
popf
fsubl
dec
pop
sub
ja
push
enter
mov
fldl
pop
adc
adc
stos
mov
pop
push
leave
sub
mov
into
test
inc
mov
fimull
jnp
pusha
in
sahf
aad
ljmp
loop
stos
or
cli
addr16
or
popa
mov
bound
cltd
cwtl
or
push
jns
pop
jo
fwait
push
dec
pop
push
sbb
fistl
popf
mov
xor
cli
inc
add
aas
mov
clc
ja
push
fstpt
addr16
repnz
mov
push
dec
test
mov
lods
jns
in
push
incb
pop
push
cmc
push
fdivs
test
push
push
pop
jp
popa
xchg
jo
mov
js
out
jmp
cli
mov
mov
stos
dec
shll
pushf
xchg
push
pop
mov
loop
ds
gs
inc
jg
pop
fnstsw
sbb
mov
scas
mov
in
aas
imul
add
mov
fiaddl
call
sbb
cmc
shll
hlt
ljmp
and
sbb
into
cmp
xlat
pop
enter
mov
stos
mov
mov
cmp
incb
fwait
popf
int3
xchg
jae
mov
adc
ds
mov
mov
insb
fsubrp
pop
pushf
dec
lahf
loop
pop
jge
daa
jg
xor
jg
bound
mov
in
leave
movsb
lock
dec
sbb
sbbl
data16
insb
js
sbb
fiaddl
xchg
in
or
lcall
subl
aas
clc
clc
and
scas
or
sbbl
gs
pushf
xor
and
mov
scas
sbb
xor
int3
mov
mov
mov
or
mov
bound
mov
iret
outsl
in
notl
mov
int
adc
mov
jbe
pop
inc
out
push
je
loop
xchg
minps
shlb
lcall
xchg
xchg
leave
pop
arpl
add
dec
mov
test
push
mov
adc
xchg
jne
test
or
jl
into
negl
sbb
shlb
insl
and
sahf
push
xchg
stc
loopne
cld
mov
mov
lcall
adc
xor
lods
cld
and
fnstcw
pop
fisubrs
jnp
into
mov
mov
stos
imulb
add
xchg
push
jg
cmpl
push
mov
fists
in
xlat
sbb
aam
xchg
pop
mov
and
dec
mov
jg
loopne
shrl
and
fwait
cmp
jae
push
ljmp
mov
sbb
pushf
pop
lahf
insl
das
mov
in
je
fdivl
add
test
dec
mov
adc
and
mov
sarb
imul
in
mov
addb
cmp
inc
insl
push
aam
adc
fildl
test
ss
lods
sti
fiadds
push
paddd
push
insl
pop
test
xor
fsub
lret
ds
repnz
xlat
push
jge
pop
outsb
iret
test
in
xchg
cltd
sub
int
and
cmp
lock
scas
mul
cld
push
iret
loop
and
cld
adcb
sub
insl
ds
cmpsl
rol
dec
into
mov
adc
es
nop
sub
ret
shl
pop
xor
les
and
icebp
out
cmp
mov
scas
cltd
xchg
icebp
jle
xor
mov
xchg
sbb
add
and
jae
nop
dec
cmp
ss
jbe
hlt
ret
push
cs
cmpsl
sahf
mov
in
fldt
push
call
or
pop
les
xor
lods
dec
pop
out
sub
ja
std
xchg
xlat
pop
das
push
mov
lea
and
mov
jge
aam
push
clc
sahf
jle
inc
nop
shlb
jg
dec
dec
and
mov
into
fisubrs
enter
adcb
inc
push
andb
dec
call
test
leave
or
jecxz
dec
dec
pop
ja
ror
pop
add
insl
pusha
push
aaa
ja
push
int
mov
loope
fisttpl
mov
dec
pop
shrl
orl
rol
or
mov
mov
ja
rol
or
cmp
mov
rcrl
data16
and
iret
mov
dec
cmpsl
into
daa
inc
dec
xlat
insb
mov
addr16
fs
adc
push
xchg
dec
adc
popf
jg
call
dec
sti
fs
mov
es
ficomps
stc
clc
and
rol
push
xchg
mov
repz
stos
push
divl
push
mov
mov
add
cmp
xchg
inc
bnd
rolb
sarl
jbe
cmp
sbb
movsl
int3
iret
jo
xor
xor
lret
mov
je
sub
cmp
adcl
in
leave
fisubs
cwtl
mov
mov
mov
and
out
jp
cwtl
ss
ljmp
push
add
shl
ds
int3
aad
nop
sbb
test
push
cmp
sub
stc
fidivrl
jl
mov
imul
inc
pop
addr16
and
adc
or
xor
add
jne
and
flds
repnz
repz
enter
and
rorl
pop
cmpb
fstpt
jno
xor
fistl
mov
inc
repnz
arpl
sbb
or
loopne
pop
or
sub
pop
xor
mov
cmp
jl
sbbb
jns
les
mov
mov
push
cld
add
sub
into
push
mov
mulb
mov
test
mov
mov
ja
cltd
mov
sub
jle
push
fidivrl
fsubrs
jle
mov
es
mov
gs
jns
lret
cmp
adc
cmpsb
push
dec
jae
ljmp
cli
cmp
outsl
call
adcl
test
lret
adc
jnp
add
pushf
aas
jecxz
mov
mov
in
lcall
insb
fwait
int
dec
dec
push
add
lods
fs
mov
loopne
adc
fnstenv
out
adc
mov
xchg
mov
jl
inc
xchg
iret
js
xchg
mov
cmp
xor
out
mov
and
jmp
sub
les
or
push
adc
push
or
popf
imul
stos
mov
pusha
ljmp
icebp
xchg
out
movsb
lods
pop
mov
add
inc
cltd
in
in
xchg
fnstcw
inc
inc
fstps
xor
lret
sahf
loope
sub
clc
xchg
xchg
push
fadds
lods
jb
jmp
xchg
inc
xorl
and
push
push
mov
mov
loopne
mov
push
pusha
sbb
dec
add
icebp
jbe
sub
fucomip
sub
xchg
shll
xor
out
jmp
xchg
rcrb
cmp
mov
repz
xor
push
std
leave
sti
cmc
outsb
mov
xchg
mov
cmp
testb
pushf
cli
loope
add
xchg
test
pop
jns
lods
push
in
lock
push
dec
sub
mov
aas
pop
push
fmul
push
int
fnstenv
scas
fcmovnu
push
repz
mov
ds
xchg
push
notl
inc
mov
cs
adc
fs
and
pop
fwait
or
dec
imul
mov
cltd
mov
rclb
insb
dec
mov
clc
pushf
cmp
enter
xchg
xchg
stos
mov
and
mov
adc
adc
jb
cmpsl
pop
push
jne
adc
inc
jmp
xor
mov
in
mov
xor
push
cwtl
lock
orb
jne
aas
pop
daa
data16
mov
enter
lds
add
dec
test
imul
pop
xor
cmp
and
sar
jae
dec
cld
scas
cmp
pop
mull
aad
sub
pop
jno
stos
pop
leave
test
jmp
out
mov
nop
js
jecxz
sbb
mov
imul
fcoml
aad
fxch
inc
mov
loop
out
addr16
adc
cmp
inc
push
popa
pop
xchg
fcomps
adcl
popa
xor
das
out
mov
adc
pop
xorl
push
dec
xor
stos
mov
notb
mov
or
mov
roll
inc
and
lahf
rcrl
xor
adc
push
push
sbb
pusha
icebp
sti
inc
test
add
push
data16
xlat
gs
push
push
adc
ss
pop
inc
mov
pop
and
imul
adc
dec
inc
repz
test
pop
inc
pop
pop
push
fsub
mov
fwait
mov
enter
in
cli
aaa
jo
sub
jp
inc
idivl
xchg
pop
lea
mov
cli
adc
mov
mov
divb
das
jb
jg
daa
pusha
push
mov
xchg
inc
mov
rcrl
cmpsb
cltd
das
push
inc
push
or
scas
scas
out
sarl
sahf
inc
jge
sarb
fs
add
cwtl
sti
lret
xchg
into
into
sub
mov
mov
neg
movsl
xor
aaa
out
std
insb
and
jbe
mov
mov
les
cltd
jbe
mov
mov
mov
mov
sbb
xor
pop
mov
fs
rcll
testb
mov
cwtl
dec
fcompl
ja
adcl
ss
mov
push
mov
mov
inc
or
jns
cmpsb
bound
pop
adc
push
dec
int
pop
cltd
sub
dec
rol
shl
add
xchg
add
cmp
lcall
int3
and
jo
outsb
js
lcall
lods
mov
fwait
aas
lods
pop
mov
sarl
dec
call
fwait
xlat
or
jp
push
fidivs
and
lods
test
notl
push
or
bound
rcrl
or
mov
adcl
jbe
in
test
adc
stc
push
imul
movsb
bound
jo
dec
mov
jmp
inc
scas
push
aas
pushf
or
or
aam
sti
fcomps
mov
loop
mov
iret
fstl
xchg
ror
sub
out
pushl
adc
out
and
sbb
dec
leave
adc
loop
push
inc
dec
cmpsl
inc
xor
xchg
mov
ljmp
fnstcw
rcrb
dec
test
aas
mov
pop
mov
sbb
cmp
lea
ja
out
fcompl
mov
pop
mov
iret
lret
mov
js
sbb
or
jae
das
xor
jg
pop
xor
adc
mov
dec
shrl
jne
popa
pop
sub
cmpsl
mov
push
clc
sub
or
mov
ud2
out
loope
jae
inc
dec
dec
xor
lds
push
sahf
rcr
cli
sub
xchg
and
push
xchg
fcoml
pop
adc
ljmp
sub
jmp
lret
mov
dec
mov
push
mov
fbld
inc
mov
ds
fisttpll
inc
movsl
cmpsl
xchg
pop
aas
cmp
xor
out
xor
xchg
and
adc
push
filds
inc
pushl
and
jge
fidivrs
jne
push
js
mov
xchg
jae
xchg
fldl
add
push
mov
scas
or
push
iret
idivl
mov
sub
mov
stos
pop
xor
xchg
pusha
test
sub
je
inc
and
adc
push
subl
ficoms
inc
adc
pop
xor
or
push
cmc
xor
int
pop
aad
sbb
es
add
add
mov
dec
int3
fadd
je
push
ds
addr16
cwtl
sub
xchg
in
pop
scas
inc
inc
inc
cld
or
cli
add
and
sub
sbb
jp
jle
mov
jae
push
mov
pop
lcall
daa
cmp
addr16
mov
jecxz
fwait
or
pop
scas
sbb
sbb
sub
sahf
iret
cmp
sbb
jp
in
sub
sbb
cmp
stc
adc
inc
mov
pop
in
xorl
aad
sub
mov
dec
int
mov
xchg
dec
jmp
test
dec
ds
loop
cld
jns
sub
push
jge
enter
test
scas
pop
rcl
adc
lock
xor
sbb
cltd
cltd
enter
push
mov
and
dec
pop
jno
sbb
negl
pop
jbe
xlat
mov
out
aad
repz
into
orl
ds
aam
jae
xor
movsl
popa
lret
add
sar
xor
mov
popa
xor
loopne
xor
iret
xchg
pop
jl
call
push
xorl
jns
cmp
sti
xchg
jl
loope
je
in
xor
cmp
mov
xorb
or
mov
and
pop
aaa
iret
gs
cs
sbb
outsb
repz
popf
fucomp
cmpb
jno
lahf
or
shlb
je
out
ja
ret
mov
rorb
repnz
sti
stc
or
cmpsl
mov
rcrl
add
insb
sbb
push
scas
xchg
jecxz
cmp
add
iret
sbb
xlat
sbb
cltd
addb
andl
mov
jmp
shrl
push
shr
add
and
or
mov
sub
adc
inc
sub
xor
push
xchg
loopne
jp
repnz
ss
mov
mov
movsb
lds
dec
sbb
adc
sub
ja
dec
or
in
addr16
in
iret
xor
mov
adc
mov
lret
adc
stos
addr16
mov
cmc
mov
ret
sub
sbb
fmuls
arpl
mov
inc
jl
scas
mov
ss
aaa
rol
mov
jno
pusha
in
mov
sub
and
mov
pop
lock
jb
jno
jne
add
fwait
in
insl
mov
loope
cmp
sub
filds
dec
xchg
xor
jae
addr16
adc
push
dec
add
or
xorl
mov
subb
xchg
pop
in
dec
and
shl
outsl
insl
testb
sub
cmp
sub
lret
add
add
pop
inc
inc
lock
mov
xor
out
xlat
inc
xor
mov
movl
stos
test
xor
or
add
xchg
cmp
fidivrs
jle
arpl
iret
lret
xchg
sbb
mov
push
xchg
fidivl
jge
mov
stos
lcall
imul
xor
repnz
sbb
cmp
cmp
mov
xlat
inc
mov
pop
pop
arpl
cli
adc
and
movsl
das
or
scas
push
fdivs
scas
jecxz
push
fcoml
pop
add
inc
xor
sub
add
push
sbb
push
mov
enter
add
mov
push
adc
js
xor
xchg
stc
rcrl
xchg
scas
push
shll
ret
pop
jmp
pushf
and
popf
ljmp
repnz
or
icebp
sub
movb
inc
cltd
ljmp
sbb
push
and
mov
xchg
sub
sbb
push
sub
out
sbbl
ss
mov
into
dec
stos
jge
jnp
int3
lahf
insb
and
fidivrs
and
jb
cmpsb
mov
cmp
scas
mov
mov
movsb
in
jo
mov
aas
mov
outsb
inc
xchg
je
adc
and
shr
cld
sahf
pop
xor
stos
mov
out
cli
push
fadd
gs
cld
lds
mov
cmpl
fsubl
aas
andb
subb
stos
iret
add
in
rolb
dec
scas
jl
popf
outsl
in
imul
mov
lret
xchg
mov
ja
and
dec
mov
xor
pop
sahf
adc
inc
gs
or
mov
cmp
cltd
ja
fistps
mov
adc
xor
call
cmp
outsb
adc
pusha
popf
shl
ljmp
lds
xchg
jno
push
enter
mov
or
das
cwtl
aam
pop
call
mov
adc
scas
mov
mov
xchg
pushf
dec
sub
sbb
mov
mov
fwait
add
cltd
xchg
sahf
cmp
inc
and
repnz
pop
add
jl
jp
xchg
in
xor
daa
gs
xchg
push
mov
sbb
daa
sbb
cmpsl
or
out
pop
sub
adc
jle
aam
push
adc
cmc
xchg
enter
lret
inc
int3
and
cwtl
fisttpl
adc
or
sarb
cli
imul
sahf
outsl
cmpb
jl
inc
and
push
into
sub
les
lcall
inc
mov
ret
ret
mov
dec
xchg
paddd
xchg
mov
mov
xorb
pop
int3
adc
test
jmp
inc
xor
sbb
mov
add
adc
push
pop
push
sbb
popa
mov
aaa
test
and
test
push
test
adc
sahf
cwtl
cmp
pop
stos
inc
push
or
fsubrl
adc
neg
icebp
dec
push
sub
sbb
lret
push
loopne
mov
sub
roll
cld
movsl
lock
cmp
adc
jo
ljmp
ds
jge
jge
adc
movsl
xchg
mov
lahf
shl
xchg
aam
jb
aas
sub
daa
sub
mov
stc
nop
in
addr16
adc
inc
pop
es
mov
aas
ljmp
push
ljmp
bound
cs
pop
repz
fdivr
mov
inc
sbb
pusha
lahf
flds
mov
dec
sahf
inc
addl
leave
pop
clc
and
pushf
ljmp
hlt
addb
pop
pop
ffree
sahf
xchg
dec
jno
stos
sub
mov
pop
ds
push
cmp
dec
xchg
outsl
mov
int3
xchg
xor
fwait
cmpsl
xchg
daa
mov
jg
andl
push
pop
fincstp
or
add
sti
xchg
jge
ret
push
inc
push
and
xchg
pop
push
xlat
xor
or
push
loope
jp
nop
jmp
iret
jno
jae
inc
mov
dec
std
inc
mov
dec
and
out
sub
dec
mov
rcrl
fadds
mov
add
fnsave
pushf
out
xor
das
inc
jns
ljmp
xor
scas
movsl
sarb
movsl
imul
push
mov
sbb
jecxz
push
in
push
sub
xchg
lock
gs
inc
jne
push
loope
in
fldl
stc
test
bound
push
mov
cmp
sbb
dec
fucom
dec
gs
or
xorl
ljmp
enter
lods
rcll
mov
mov
leave
loop
lock
xchg
fcmovb
fnsave
cmpsb
ret
xor
scas
jp
leave
aad
adc
ret
mov
sahf
cmp
movsb
cltd
aam
ds
popa
adc
xchg
jecxz
jecxz
xchg
loop
add
int3
daa
inc
dec
sbb
stc
mov
mov
movsl
push
xlat
xchg
pop
add
cltd
mov
lea
push
jle
jno
push
jbe
insl
lods
or
popa
add
cmp
sti
enter
push
push
mov
fs
inc
mov
jb
xor
mov
and
push
and
js
rol
push
andl
mov
adc
jmp
dec
push
push
cmp
jne
xor
fmull
push
loopne
push
loope
pop
adc
and
inc
in
add
scas
jns
push
inc
xor
mov
or
in
push
push
inc
iret
test
repnz
shl
cmpsb
or
je
xchg
inc
pop
xor
sub
not
cmovp
jb
inc
push
int
inc
jb
lret
push
jae
xorb
pop
stos
pusha
jp
mov
or
dec
and
or
bound
inc
mov
push
addr16
push
outsl
cmp
out
add
int3
mov
aad
jecxz
into
adc
outsb
and
xor
ret
daa
cmp
mov
xor
cs
push
cmpsb
dec
mov
jbe
lods
jae
out
ret
mov
mov
ljmp
hlt
int
mov
clc
dec
pop
outsb
inc
lock
in
pop
add
idiv
jmp
popa
jp
xor
or
xchg
jb
xor
shlb
sbb
in
fildl
mov
add
fcompl
or
loope
js
orb
adc
xchg
adc
adc
sbb
mov
jp
orl
mov
push
sub
sbbl
fildl
adc
mov
out
xor
push
cmp
or
lret
aas
leave
cmp
pop
cmp
subb
dec
stc
rolb
sbb
adc
push
push
mov
sti
push
imul
iret
loope
push
addr16
mov
lahf
js
movsl
sub
mov
shl
pop
leave
add
data16
ja
push
vpsrlw
jg
in
inc
mov
sbb
xchg
jmp
andl
std
das
mov
mov
pop
arpl
mov
push
xchg
dec
gs
cmp
fistps
popa
mov
sbb
sub
push
and
repz
cs
jmp
mov
imul
adcb
lods
push
cmc
loope
cli
and
cld
fisubrs
mov
aaa
lahf
stos
dec
adc
nop
add
push
xor
lret
jno
arpl
testb
adcb
cmp
jmp
push
insl
ljmp
lds
and
push
adc
add
adc
inc
adc
repnz
or
add
fadds
xchg
cmp
insl
lcall
pop
xchg
xchg
repnz
pop
rolb
enter
inc
adc
adc
sbb
nop
add
fwait
cld
mov
es
loope
or
popf
call
cwtl
mov
sbbb
mov
outsl
push
pop
and
jbe
mov
push
and
loope
inc
mov
in
cmp
divb
adc
incb
add
lahf
and
dec
add
aad
mov
mov
repnz
leave
cli
jp
inc
fwait
sbb
movsb
push
stos
jmp
icebp
outsl
ficompl
idivl
cmp
and
inc
ss
ja
push
repz
test
mov
xchg
jo
or
mov
into
adc
add
arpl
sbb
shll
add
hlt
stc
add
pushf
test
add
dec
sub
loopne
or
cs
inc
pushf
or
xchg
sub
bnd
mov
test
mov
jno
jo
adc
adc
test
in
test
pop
ret
negl
inc
outsl
in
nop
in
jae
inc
pushw
add
mov
das
fsubp
adc
xchg
sbb
outsl
add
outsb
stc
mov
mov
mov
outsl
jp
das
popf
lods
push
jecxz
nop
test
fwait
cmp
pop
pop
add
xor
mov
test
aaa
arpl
dec
es
repz
test
ljmp
ljmp
inc
mov
aas
shl
lcall
adc
loop
sub
cmp
cmp
inc
jmp
jae
sub
shlb
aas
js
add
mov
fidivs
scas
dec
sbbb
inc
and
or
adc
xor
gs
imul
lock
dec
imul
jl
mov
andb
jo
insb
inc
jle
jns
mov
arpl
repnz
ret
test
into
or
mov
notl
lods
jb
out
pop
jp
xchg
cmp
stos
mov
mov
xor
rcrl
pop
dec
popl
push
add
les
jge
rcll
jl
pop
or
insl
push
cltd
jmp
lods
mov
sub
insl
push
push
stc
inc
add
pop
addr16
imul
hlt
hlt
and
jns
jne
jmp
insb
ja
cmp
notb
jle
addr16
cwtl
or
mov
cmp
jne
jl
jb
sbb
mov
not
jne
dec
aas
jl
sbb
and
xor
cmp
sarl
and
push
fbstp
push
lds
ss
cwtl
add
mov
jl
fwait
sahf
ror
mov
push
lods
push
mov
popa
xor
and
xchg
mov
mov
and
insl
std
cmp
push
es
cmp
xchg
call
pop
xor
imul
mov
jle
pop
jb
pusha
je
addl
inc
rorl
inc
mov
mov
adc
lahf
inc
sahf
push
adc
sbb
lahf
mov
faddl
and
xlat
pop
mov
mov
ss
cmp
push
sbb
mov
jle
fmul
outsb
stos
aas
inc
ja
shlb
das
test
pop
lods
into
push
cmc
sahf
fnstenv
enter
lret
jnp
xor
mov
jo
mov
pop
push
stos
cmpsb
sub
ret
pop
jle
leave
in
pop
in
daa
sbb
cmpsl
mov
adc
sti
jne
aas
hlt
add
and
sub
push
mov
xor
in
mov
xor
bound
xchg
dec
test
sub
mov
subb
icebp
subb
dec
pop
daa
stos
push
cmpl
dec
pcmpeqw
mov
repz
sub
cmpsb
mov
shll
subl
xlat
les
arpl
xor
scas
mov
cmpl
push
cmpsb
fsubl
pop
push
sub
aas
mov
mov
mov
dec
jbe
ficoml
and
xchg
jg
leave
dec
into
das
add
sti
pop
iret
aad
aaa
cmpsl
push
xchg
cmc
jge
insb
cwtl
movsb
insb
pop
push
cmp
cmp
icebp
mov
lods
psubq
add
ss
push
imul
popl
pushf
jg
movsb
in
jb
stos
fs
stos
push
sub
mov
repz
cmp
and
bound
xlat
sti
cmp
and
int3
jp
outsb
fucom
mov
test
cmc
pop
shlb
xor
outsl
les
scas
loopne
into
std
or
push
les
movsb
mov
mov
jmp
pop
notl
fldt
enter
lock
adc
popa
cs
icebp
add
cmc
repz
mov
mov
jae
xor
mov
pop
mov
pop
mov
cmpl
rcrb
add
ja
adc
sub
adc
ret
bound
lahf
jae
xor
test
inc
inc
repnz
cmp
add
ret
stc
rorl
idivb
push
jbe
push
pop
ret
cltd
pop
jb
fcompl
adc
pop
xlat
mov
rclb
sbb
stos
popf
inc
mov
imul
xor
mov
imul
cmp
outsb
or
jmp
cwtl
mov
cmp
cwtl
or
mov
nop
xchg
and
xor
hlt
in
insl
pop
hlt
dec
cld
mov
add
mov
int3
or
or
ljmp
jecxz
pop
xor
fwait
inc
dec
sbb
push
inc
aas
cmpsb
inc
sub
fdivrp
sub
mov
mov
mov
mov
add
sarl
add
mov
pop
sub
mov
push
cmp
mov
mov
in
cli
inc
imul
mov
hlt
lcall
idivb
das
in
les
inc
negl
dec
imulb
loop
cmp
xor
lret
mov
aam
fdivs
mov
jns
or
inc
push
jae
mov
xor
jns
scas
in
inc
pop
pop
ret
mov
sahf
cmpsb
xchg
lea
nop
jns
xchg
or
xchg
jp
or
mov
in
pop
es
fstpl
xor
stc
ret
and
xchg
icebp
sub
sbbl
addl
lock
mov
lock
mov
pushf
popf
ja
sub
pop
xor
mov
lds
jbe
out
out
cmp
sub
insb
in
shlb
adc
pop
jmp
fidivrl
dec
ret
int3
jmp
xchg
adc
pop
fistpll
rclb
adc
leave
dec
mov
mov
pop
jae
inc
pop
cmp
adc
lahf
xor
test
loope
jg
pop
pop
inc
pop
pusha
add
push
mov
sub
and
nop
sbb
mov
jae
or
lods
mov
negl
xor
add
ss
add
ja
ds
cltd
shrb
cmp
pusha
add
arpl
push
les
gs
imul
adc
pop
sub
clc
ffree
mov
sbb
adc
jg
sub
icebp
fadds
pop
push
dec
subb
mov
mov
iret
hlt
adc
jne
xchg
xor
add
clc
xchg
fnstcw
divl
mov
jmp
dec
loope
ret
mov
jne
cmp
adc
fisubrs
xor
mov
adc
ret
addb
cltd
insb
or
pop
in
mov
repz
or
inc
mov
jae
xchg
adc
sub
mov
cmp
les
mov
or
and
mov
adc
xchg
scas
xchg
bound
fwait
push
add
sub
xchg
push
pop
pop
movsl
push
jo
jl
fs
jbe,pn
aad
pushl
sti
lret
sub
jns
fistpl
mov
and
sbb
lret
enter
add
xchg
inc
inc
jae
std
out
into
mov
sti
mov
data16
or
jg
ret
pop
imul
push
mov
xor
or
pop
push
mov
or
call
insl
addr16
or
icebp
sub
mov
mov
mov
jo
stos
stos
sub
cmp
jbe
xchg
pop
dec
xchg
loop
shr
insl
jge
mov
stos
cli
mov
dec
fsts
sbbb
mov
es
jle
add
pop
bound
call
cltd
and
loopne
mov
leave
es
movsl
out
mov
mov
pop
lret
lds
cmc
sub
jbe
sti
out
dec
push
xchg
pushl
es
mov
cmp
loopne
std
mov
sbb
in
push
ret
fistpl
push
movsb
je
divb
mov
ss
stos
sbb
stos
nop
mov
xchg
push
lcall
je
sub
pop
mov
cmpl
dec
fisubl
cmp
add
mov
dec
lret
arpl
call
mov
xorl
jecxz
vmread
addb
pop
outsb
pop
nop
push
pushf
jp
jbe
jmp
std
fs
pop
adc
sbb
lods
xlat
loopne
pusha
jg
jae
push
sub
test
vunpckhps
js
ja,pn
and
aad
out
push
stos
test
dec
iret
std
or
xor
ds
ja,pt
xchg
mov
test
mov
lds
mul
sub
lcall
lret
cmpl
out
test
xchg
aaa
adc
push
shrb
pop
cmp
fcomi
xchg
in
jnp
cmc
jle
sub
sub
xor
sbb
mov
fcomi
jns
mov
shlb
shll
xchg
ja
pop
push
xor
popf
cmpsb
rclb
out
dec
popf
cmpl
shlb
jp
sbbl
mov
xor
xchg
lret
dec
mov
pop
popf
loopne
repz
mov
sti
adc
sbb
add
ret
xor
jl
or
movsb
mov
test
dec
test
sahf
mov
int
pop
fldl
add
xchg
push
sub
push
sbb
lret
fsub
je
mov
lret
sub
outsb
mov
add
push
sub
jne
test
rclb
dec
push
shll
jmp
xchg
inc
dec
adc
push
mov
sbb
mov
mov
mov
das
scas
cltd
pop
adc
aam
gs
pop
xchg
mul
mov
xor
xchg
jne
imul
dec
aad
vmovaps
and
outsb
pushf
jg
xchg
fidivrs
mov
sbb
js
cltd
lret
lods
pop
arpl
xor
push
or
aam
enter
or
mov
dec
mov
insb
shlb
or
fwait
jl
push
dec
fdivr
nop
filds
fdivrs
lds
mov
adc
adc
lret
mov
add
ss
cmp
push
mov
clc
sarb
mov
inc
outsb
fsubs
insl
mov
out
das
mov
aaa
in
leave
daa
pop
pop
add
out
pop
rol
test
mov
xor
outsb
mov
or
and
or
mov
andl
adc
and
pop
inc
clc
add
rcl
decl
cltd
cmpsb
sti
add
hlt
lock
outsb
mov
into
cli
out
ds
les
cmp
rorl
shrl
ret
xor
aas
xchg
bound
daa
jbe
lock
out
sub
jp
mov
push
jbe
testb
cs
jne
push
dec
mov
cs
test
mov
xchg
mov
xchg
mov
mov
jge
orl
jg
push
dec
lcall
xchg
movsb
mov
fnsave
jno
ret
popa
xchg
and
fs
test
ss
dec
xor
rcrl
add
and
movsl
mov
mov
lock
leave
lock
dec
xchg
lock
ss
data16
hlt
loop
gs
pop
hlt
int
push
push
cmp
in
adc
lret
decl
push
test
imul
aas
jno
pop
loope
push
jp
adc
in
or
icebp
add
fs
jl
fnstcw
aad
das
mov
jno
repz
int3
push
imul
add
adc
mov
es
dec
xchg
leave
imul
xor
push
xchg
sub
lods
testb
fadds
mov
in
xchg
cmp
fsubrl
cmp
push
pop
dec
test
rcrl
in
jmp
mov
mov
mov
cmp
shrb
movsb
push
pop
jle
in
or
xchg
sub
mov
shl
mov
shrb
cs
daa
sahf
push
dec
ss
stos
jnp
jle
int
cmp
add
imul
cmpsl
add
outsl
mov
jb
aam
ljmp
jmp
xchg
xchg
xor
xchg
lret
and
xor
mov
iret
xor
or
push
add
fstps
cmp
pushf
cld
cmp
sub
push
mov
pushf
cmp
add
mov
xor
push
push
out
cld
out
fnsave
push
nop
push
imul
inc
pushf
push
push
gs
mov
xchg
mov
xchg
push
cwtl
xchg
dec
xchg
icebp
dec
pop
add
xchg
cs
cmpsb
cmpsl
dec
loop
add
mov
sbb
push
sub
popf
lcall
rorl
scas
not
aaa
dec
fisubrl
jb
pop
pcmpeqw
mov
pop
push
inc
loope
je
lahf
push
push
mov
pop
sub
cmpsl
lahf
add
and
xchg
and
std
fistpl
movsb
push
xlat
sbb
jnp
in
notb
push
mov
movsb
stos
ret
dec
aad
dec
aam
fdivr
idivb
outsl
std
push
icebp
mov
dec
and
cmp
cltd
test
xor
pop
sti
push
xor
out
pusha
and
or
jg
mov
ret
mov
mov
xor
inc
hlt
mov
lea
xchg
xchg
std
pop
and
lods
adc
roll
inc
pop
loopne
inc
mov
fcmove
push
lret
mov
outsb
push
pop
out
call
das
call
pop
xlat
jae
xchg
lret
cmp
js
xchg
ds
push
mov
adcl
jbe
sub
je
insl
sub
stos
sti
fsubrs
or
sub
call
sub
pop
pop
mov
xchg
pop
pop
loop
test
popf
inc
movb
cltd
cwtl
scas
push
add
arpl
inc
dec
push
inc
pop
adc
into
rclb
sbb
cmc
jns
mov
pushf
out
and
pop
push
xchg
movsl
movsl
dec
dec
cmc
ror
jp
jo
fidivrs
adc
lcall
push
or
dec
insl
sub
mov
mov
xchg
cwtl
xchg
cmp
add
mov
mov
or
setb
mov
jmp
iret
mov
cwtl
stos
into
inc
aad
cmc
push
rorl
loope
imul
and
fnsave
scas
pop
sahf
inc
xchg
xchg
loope
daa
js
bound
add
ret
dec
fmuls
xchg
dec
sbb
std
mov
insb
mov
or
xchg
mov
xor
and
les
lret
xchg
xor
mov
in
sbb
dec
stos
dec
icebp
mov
test
int
dec
add
jmp
shlb
cmpsl
mov
mov
int
fstl
sbb
out
daa
pop
fcmovb
jne
pusha
pop
jmp
push
fs
push
daa
test
push
mov
xchg
scas
sbb
mov
pop
popa
shrl
lcall
cld
push
iret
push
scas
sti
dec
cmp
adc
dec
mov
sarl
xor
push
mov
jmp
ss
mov
push
or
and
mov
xchg
xor
add
xor
xor
pushf
imul
rorl
and
xchg
mov
sub
dec
dec
mov
sbb
and
andl
mov
adc
loopne
loope
lcall
sub
testl
out
xor
mov
stos
int3
lcall
cwtl
adcb
rorb
mov
push
cmp
fnstsw
shll
lahf
xchg
xor
or
mov
jmp
adc
repnz
setno
mov
call
out
neg
sbb
test
pop
push
mov
push
jns
cltd
pop
fidivrl
adc
fmul
aad
lret
xchg
enter
in
dec
mov
or
ret
js
lock
lahf
sub
mov
hlt
ret
jge
mov
hlt
pop
inc
das
cmp
loope
pop
xor
popf
sub
sbb
inc
mov
mov
test
ljmp
repnz
and
push
daa
adcl
loop
mov
and
xchg
sub
mov
mov
xchg
push
rcr
test
mov
popf
pusha
ret
stos
imul
jns
mov
pop
movl
add
lods
sub
filds
cs
push
add
test
xor
xor
xchg
outsl
sbb
xor
push
and
sbb
or
mov
xor
inc
inc
les
push
push
jo
outsl
testb
bnd
inc
cwtl
and
add
xor
dec
orb
add
push
aam
pop
dec
pop
inc
push
jp
daa
arpl
in
popa
cltd
call
pop
cmp
stos
imul
test
into
and
lods
mov
ss
mov
pusha
cmc
std
adc
sub
mov
push
imul
inc
push
inc
addr16
push
mov
scas
cmp
jmp
jae
das
loope
testl
dec
jns,pn
ja
xlat
ljmp
clc
movsl
clc
lea
call
mov
lods
inc
in
hlt
or
mov
int3
mov
insl
movsb
xor
adcl
jl
sahf
push
push
jb
testb
pop
mov
mov
out
test
pop
adc
hlt
popf
neg
pusha
rclb
cmc
cmp
adc
mov
add
xchg
xor
stos
lret
add
mov
mov
jae
fs
mov
push
ds
lock
jne
aas
lods
cmc
mov
imul
pop
fstl
pop
scas
movl
inc
cs
mov
jmp
or
or
out
out
push
iret
ja
test
mov
hlt
or
sbb
aad
fdivs
loop
pop
cltd
jo
cmp
sbb
sub
dec
movsb
add
into
inc
daa
inc
shl
add
fstl
imul
push
sahf
sbb
lods
jne
xchg
dec
out
pop
mov
xor
sbb
adc
or
cs
iret
ret
inc
sbb
push
cmpb
dec
mov
sbb
les
sti
push
mov
jl
cs
mov
iret
mov
loop
js
jae
jle
popf
jmp
idivl
shl
mov
xchg
jp
int3
push
jnp
imul
aaa
pop
int3
insl
fistpll
scas
in
jl
cmpsb
stos
mov
ret
ds
data16
sub
jg
out
sbbl
pop
sub
fldl
mov
jmp
jbe
push
pop
push
arpl
mov
js
xchg
mov
sti
stos
jae
fs
or
pop
and
dec
imul
lock
mov
dec
lret
mov
fwait
lea
xchg
mov
push
cli
ds
pop
movsb
ss
xor
adc
sub
mov
inc
mov
lods
out
movsb
int3
enter
and
inc
mov
cmc
push
flds
hlt
enter
mov
jg
or
or
pop
cmpsb
xchg
pop
in
mov
push
jb
sbbb
cld
insl
cld
lods
push
sbb
xchg
incb
and
pop
and
nop
push
out
mov
out
xchg
call
dec
mov
push
es
xchg
ret
icebp
and
das
clc
lret
ljmp
xlat
sub
mov
sbb
rorl
or
imul
in
out
pop
icebp
rcrb
cmpsb
aaa
int3
dec
xchg
dec
sub
ror
add
ret
jg
inc
or
test
mov
sub
mov
xchg
mov
pop
movb
xchg
js
sbb
sarl
add
lea
adc
out
mov
xor
cld
xchg
dec
movsb
shrb
jns
test
ljmp
sub
jg,pn
loop
sub
xor
and
popa
xchg
addr16
lcall
aad
in
jmp
push
fs
sbb
pop
in
pop
popa
cmpsb
in
adc
subl
and
scas
inc
or
or
or
jl
jo
cmp
call
ja
pop
and
imul
or
mov
or
andb
xor
jnp
mov
add
out
dec
jnp
data16
in
movsl
fs
sbb
push
jge
inc
mov
ror
inc
ds
popa
sub
jns
adc
stc
rcl
test
jmp
imul
pop
inc
mov
mov
and
xchg
inc
fs
hlt
out
push
loopne
xor
leave
add
cmpsl
cmp
mov
or
call
in
push
add
cmc
sub
mov
jno
add
push
fwait
rol
cmp
and
cmp
or
xor
cmpsb
inc
cmp
es
out
jmp
aaa
pop
js
jbe
lock
bound
imul
cltd
mov
test
add
cltd
popa
hlt
jle
mov
mov
cmp
jb
pop
or
mov
loope
mov
jl
outsl
sahf
inc
add
jnp
and
inc
shll
pop
jb
insl
and
jnp
and
mov
in
adc
leave
rcrb
mov
das
pop
jae
mov
mov
ds
jb
jl
bound
imul
inc
mov
fldt
cmpsl
std
dec
cmp
notl
repnz
cs
gs
mov
nop
mov
pop
or
push
push
push
jmp
scas
lea
out
mov
pop
aad
jge
insb
out
arpl
test
xor
lcall
movsl
adc
sub
pushf
in
xor
mov
inc
xchg
and
mov
out
popa
mov
xchg
es
popl
jnp
dec
mov
les
cltd
lret
inc
push
mov
repnz
nop
pop
push
fstps
dec
out
mov
dec
fsub
lret
mov
xor
scas
int
in
lods
sbb
or
test
daa
pushf
xor
stc
addr16
cmp
repz
dec
jle
jnp
aad
dec
dec
leave
cmp
clc
sbb
jbe
add
lcall
and
add
sub
sbb
xor
xchg
inc
roll
shl
repnz
in
pop
adc
or
dec
sub
push
hlt
cmc
jge
mov
hlt
lea
es
movsl
aad
ljmp
movsb
xchg
lret
sbb
aam
push
pusha
loopne
fstl
adc
cmp
shlb
mov
dec
adcb
push
fisubrs
aaa
pop
scas
pop
dec
pminsw
jmp
or
icebp
push
lods
inc
mov
cmp
insl
add
mov
loopne
aas
inc
int
addb
xchg
daa
rcrb
insl
xchg
addb
adc
loopne
das
inc
or
pop
rclb
xor
sbb
jp
add
ds
sbb
push
lahf
rcrl
mov
sub
xlat
mov
push
jg
daa
fwait
stos
sti
pop
mov
adc
adc
jae
stos
sbb
pop
jmp
scas
sbb
aam
sbbb
imul
push
jb
outsb
enter
add
loop
arpl
push
fs
aad
fiaddl
pop
push
and
repnz
popf
cmp
inc
cmp
mov
fsubr
add
stos
mov
push
out
mov
loop
dec
fldenv
xchg
cmpsl
sub
cmc
sahf
cmpb
inc
outsl
mov
push
pop
sbb
aad
push
rorl
sbb
icebp
pop
jg
push
jb
bound
xor
decl
sbb
out
in
orl
bnd
mov
pop
enter
aas
xchg
cltd
xchg
loop
cld
push
sub
jmp
pop
fists
or
inc
xor
adc
jg
cmpsl
xor
xorl
scas
push
adc
ja
jmp
adcl
push
xchg
xor
sub
std
mov
or
popf
and
aaa
iret
mov
fiadds
loopne
cmp
jmp
sub
adc
jecxz
sbb
data16
jb
imul
mov
ret
arpl
cltd
stos
dec
adc
add
fstpl
push
fstpt
lahf
mov
sub
and
mov
push
in
loop
pop
xchg
insl
sub
add
fmuls
and
insl
pop
cvtdq2ps
cmp
mov
mov
push
dec
dec
fwait
adc
out
pop
xchg
mov
rclb
jae
inc
shrb
ds
js
call
lods
jbe
fwait
sbb
xor
sub
bound
mov
aam
hlt
xchg
xor
sub
jmp
cmp
mov
cmc
jg
int
push
divb
pop
addl
ss
int
fcoml
push
xchg
cmp
and
mov
cmc
mov
mov
loope
jmp
xchg
sbb
mov
sub
xchg
mov
xor
shr
push
ds
aad
pop
sub
or
arpl
pop
test
arpl
xchg
mov
cld
push
pop
mov
and
mov
jbe
xchg
jns
mov
bound
jge
into
ds
fiadds
xor
mov
pop
sub
mov
lret
fwait
movsb
cmpsl
and
pushf
sti
ds
pop
sbb
add
mov
jae
or
mov
stc
lret
sbb
mov
in
mov
push
mov
dec
xor
mov
jecxz
push
fwait
notb
outsl
aas
dec
push
mov
iret
out
dec
sub
mov
mov
addr16
sbb
push
xchg
sub
fwait
ja
arpl
pop
mov
adc
lock
sarb
arpl
pop
repnz
jne
out
sbb
jmp
clc
mov
pop
mov
iret
andb
inc
insl
xchg
std
fsubr
jae
dec
push
icebp
or
popa
sbb
fstps
addr16
xchg
into
inc
dec
call
shrb
popf
pop
inc
movsb
add
jge
push
jbe
mov
pop
pop
aam
pop
dec
dec
sub
in
mov
test
lods
mov
jns
enter
mov
fisttps
stos
loopne
mov
xor
addl
gs
adc
cli
sub
pop
addl
push
sqrtps
in
add
sbb
add
inc
mull
or
in
push
or
adc
jnp
orb
mov
arpl
test
daa
mov
aaa
mov
in
outsb
lods
pop
outsb
dec
jmp
or
xor
mov
mov
int
dec
scas
xor
or
in
dec
push
pop
in
and
dec
xchg
out
movsb
into
data16
fwait
sbb
sti
sub
es
dec
in
and
inc
push
repz
pop
dec
ret
jl
pop
pushf
sbb
add
faddl
ljmp
adc
scas
mov
adc
jl
push
cmp
jbe
xabort
jmp
and
test
cmp
mov
or
popf
and
sbb
in
test
hlt
iret
add
add
pushf
xchg
push
aad
cltd
jle
xchg
pop
dec
ret
dec
arpl
sub
sbb
sub
pop
push
shrl
imul
sbbb
std
popa
inc
gs
mov
xor
leave
push
and
leave
dec
add
ret
arpl
jbe
pop
movsb
adc
inc
pop
aaa
dec
cmp
ss
jl
push
jmp
sub
daa
loop
in
or
mov
mov
inc
mov
jnp
xor
jl
ret
inc
jnp
cli
or
out
mov
shlb
adc
sbb
push
mov
sahf
in
dec
push
aas
cli
das
mov
repnz
pop
mov
pop
dec
adc
jmp
repz
adc
ret
subl
xor
mov
cmp
cli
jbe
xchg
orl
push
iret
cmp
pushf
fdivrl
pop
stc
mov
imul
enter
or
mov
jmp
xchg
lret
shlb
inc
or
jmp
inc
inc
roll
xor
subl
jmp
cmpsb
adc
sbb
and
sbb
lret
jecxz
cmp
dec
push
mov
xchg
mov
or
or
call
cmp
and
sbb
xchg
lods
lods
fcomp
int
mov
jecxz
dec
xor
pop
leave
test
mov
ret
jge
inc
lcall
int3
in
push
test
push
sbbl
pusha
inc
lcall
aam
sti
push
push
adc
xor
push
sub
and
stc
and
mov
add
mov
mov
data16
jecxz
sub
data16
shrl
jp
mov
cmp
enter
push
mov
mov
push
mov
jmp
ds
pop
adc
in
push
inc
lods
jg
or
ja
inc
xchg
pop
sub
push
pop
mov
and
bound
push
leave
push
jno
adc
movsb
loop
mov
push
movsb
adc
jp
cmpsb
loope
cld
aaa
sti
mov
leave
fwait
cli
nop
push
sub
test
inc
xor
or
xor
stos
aam
divps
cmc
xchg
push
dec
shlb
enter
in
inc
call
jmp
into
inc
sub
bnd
jbe
out
test
add
or
push
mov
and
scas
lcall
inc
cmp
push
into
cmpsb
daa
loopne
sub
jl
and
jbe
jge
inc
sub
inc
xlat
jno
out
sub
mov
fidivrl
push
ljmp
push
addl
jl
adc
ss
push
xor
pushf
and
dec
addb
adc
inc
cmc
sub
dec
subb
and
and
xor
cs
outsb
inc
and
shlb
test
jecxz
lret
lret
mov
outsl
scas
cmpsl
sub
int
jb
sbb
insl
clc
add
lret
stc
mov
ffreep
jns
xor
xor
daa
xor
addr16
ds
inc
push
in
cmpsb
add
xchg
pop
jo
fisubs
inc
outsl
cmp
adc
dec
fdivp
jo
int3
jb
mov
xlat
nop
addr16
pop
dec
cmp
imulb
and
push
push
popf
cli
scas
rcrl
int
and
dec
leave
sbb
cs
mov
or
mov
in
aas
mov
sub
sub
push
dec
ljmp
out
lahf
cli
and
pop
lcall
fimull
sbb
mov
das
mov
mov
mov
adc
cltd
sub
outsl
in
lret
mov
mov
ret
cmpsl
lahf
fidivrs
mov
lock
push
testb
dec
add
sbb
pop
mov
mov
jns
les
mov
adc
mov
mov
in
inc
cltd
mov
sbb
shrl
cmp
xchg
push
or
loopne
into
push
mov
cmp
mov
xchg
test
adc
jge
and
arpl
adc
push
cmp
into
pushf
mov
mov
lods
movsl
or
pop
push
xlat
jge
cmpsb
jg
int3
add
loop
xchg
sub
dec
push
cli
call
mov
test
addr16
jno
lcall
push
pop
ror
push
cmp
imul
jmp
dec
xlat
push
outsl
sub
jmp
pop
mov
inc
repz
out
imul
enter
negl
mov
sbb
jo
nop
sub
and
test
lods
sbb
push
mov
sbb
out
iret
push
enter
leave
sbb
dec
scas
push
sub
test
stos
cmp
mov
adc
call
das
inc
cmp
ds
dec
cltd
pop
dec
sub
and
sarl
testl
call
movsl
jbe
mov
aaa
mov
bound
pop
mov
loope
push
jp
mov
mov
xchg
movsb
jle
sbb
repz
loopne
int
dec
push
mov
jle
xor
call
repz
ljmp
cmpsb
bnd
js
daa
dec
jg
jb
div
aas
dec
testb
sahf
mov
rcrl
pushf
xchg
add
jmp
jnp
sub
mov
push
loopne
jecxz
sbb
cwtl
sub
push
pushf
xchg
in
shll
adc
in
je
pop
xchg
arpl
test
jae
in
loopne
sarl
scas
push
test
stc
inc
lret
lods
aaa
or
cmp
imul
cmp
fs
and
mov
dec
bound
test
lcall
sub
test
out
push
fs
jae
loope,pt
cmp
pop
fwait
int
cltd
mov
add
aas
jne
push
mov
fnstcw
lock
ljmp
setb
jno
xchg
ss
and
xchg
leave
rorb
popf
add
jp
mov
orb
int
ja
adc
cmp
or
out
xor
cs
sti
dec
cli
popf
mov
scas
pop
mov
dec
int
xor
add
sub
mov
int
test
jg
adc
pop
rorl
popa
mov
btc
ljmp
loopne
dec
lock
daa
and
dec
shrb
test
rclb
mov
push
dec
lret
out
in
jnp
in
inc
clc
jmp
dec
pop
mov
fimuls
jge
inc
jbe
mov
dec
pop
dec
push
dec
jb
mov
pop
add
dec
inc
push
dec
ret
movsb
xor
imul
fcompl
test
loop
push
pop
xor
pop
cmpsb
pop
adc
test
in
adc
xor
mov
stos
iret
lret
fstp
lahf
and
inc
in
push
cmc
jns
mov
les
push
or
sub
out
jnp
mov
sbb
xchg
sbb
push
roll
orb
aas
dec
mov
scas
sbbb
aad
pop
outsb
lods
pop
fwait
ds
movsb
movsb
into
loopne
shlb
pop
cmp
nop
adc
popa
mov
cmpb
push
es
js
popf
je
jo
repnz
ljmp
lahf
xor
or
loop
add
repnz
and
out
mov
push
movsl
pop
ret
repnz
aad
fcmovnbe
adcb
and
xor
popa
add
pop
scas
mov
pop
sub
lds
cld
mov
sbb
cmp
jbe
hlt
rcr
int3
data16
push
jmp
pusha
addb
aas
es
push
add
xor
addr16
cmpsb
lret
mov
stos
pop
cmp
mov
fiaddl
repz
adc
mov
mov
mov
cmp
or
ss
mov
xchg
adc
push
sub
pop
mov
jne
jbe
hlt
sahf
sub
jae
lcall
call
in
adc
sbb
xor
out
adc
les
push
pop
repnz
in
fs
testb
pop
js
mov
sub
pop
rclb
in
dec
popf
movsb
xchg
jp
movsb
out
fimull
pop
mov
mov
mov
and
test
inc
pop
and
jmp
sub
loopne
in
in
rol
pop
push
loope
iret
sbb
or
pop
out
mov
xchg
push
bound
jb
sub
cmp
movsl
lods
add
push
imul
scas
inc
mov
mov
in
je
push
jo
pop
loopne
jecxz
mov
sarl
mov
icebp
clc
dec
movsb
popa
jne
ret
aaa
sub
pop
adc
xor
xor
xor
call
inc
ljmp
pop
push
sub
and
test
jns
sub
fistps
xor
adc
dec
popf
dec
mov
inc
fnstenv
inc
hlt
jmp
mov
xor
xchg
dec
mov
fcomps
sbb
aad
pop
test
in
test
pop
add
xor
dec
jecxz
scas
mov
imul
pop
fwait
pusha
rclb
pop
jmp
pop
arpl
push
fs
push
lahf
sub
pop
push
cmp
das
adcb
sbb
or
insl
mov
stos
clc
nop
sbb
pop
test
or
push
outsl
ljmp
sub
js
mov
les
xchg
pop
and
jo
pop
loop
das
xlat
daa
adc
cmp
adc
in
aam
fimuls
push
add
lahf
js
cltd
into
sbb
jbe
lcall
inc
ffreep
es
ds
pop
sahf
add
push
outsb
push
pmulhw
mov
add
mov
mov
xchg
mov
pop
mov
xchg
cltd
lea
push
push
add
jp
lcall
jnp
pop
imulb
ljmp
movsb
stos
and
dec
inc
pop
mov
mov
pusha
or
pop
aam
mov
fcmove
lds
loop
roll
mov
mov
mov
mov
mov
and
or
mov
pop
cmp
test
mov
or
xor
lock
xchg
push
fwait
xor
mov
inc
rclb
or
cs
rcr
jp
repnz
push
insb
lret
pushf
imul
add
mov
popa
test
pop
pusha
ja
arpl
daa
imul
mov
shll
sub
dec
dec
int
insl
xchg
adc
shl
fsts
adc
add
mov
fs
mov
xor
fpatan
outsb
gs
fs
shl
xchg
add
pop
pop
cli
fimuls
push
ficomps
pusha
imul
adc
push
mov
dec
xchg
push
push
pop
sbb
ss
hlt
ja
sbb
roll
test
mov
imul
xlat
fistpll
rcrl
jg
add
pop
xlat
push
dec
or
sbb
addr16
jnp
int3
fdivr
inc
daa
mov
dec
addr16
jl
mov
mov
gs
iret
xchg
mov
adc
test
sub
pop
lahf
add
es
add
ljmp
mov
or
into
ficompl
mov
imul
mov
push
sbb
mov
mov
mov
pop
sti
popf
stc
pop
dec
and
stc
inc
sbb
cmp
out
aad
icebp
pop
adc
mov
mov
rolb
cmovle
into
pop
out
ds
fmull
bound
sbb
nop
out
scas
aam
fs
xchg
cmp
das
mov
fwait
notb
imul
loop
xchg
ljmp
sahf
popa
mov
jae
ret
das
shll
mov
insl
xchg
xchg
or
aad
add
xor
cld
sub
lock
or
ficompl
test
fisttpl
pop
cs
call
out
insb
test
insl
sbb
xchg
cmpsl
mov
dec
test
ret
cmp
iret
jb
adc
xor
mov
mov
cmp
push
push
mov
fildll
sahf
fnstsw
pop
pusha
aaa
mov
mov
daa
push
ret
xchg
test
and
inc
inc
cmp
inc
push
mov
rcll
aaa
lods
outsl
popf
adc
adc
xchg
push
adc
mov
add
sub
push
sub
mov
inc
andl
or
dec
and
sub
inc
mov
pop
test
sbb
push
imul
loop
loope
outsw
movsb
jae
mov
ss
shll
jns
mov
rcrl
rclb
xchg
paddw
mov
push
jmp
pop
and
outsl
arpl
test
fnsave
and
ret
mov
dec
jmp
data16
cmp
push
test
mov
je
out
adc
jecxz
in
mov
outsb
jl
mov
cmp
mov
push
jge
and
xchg
sbb
and
fldcw
push
add
xlat
cmp
jecxz
xlat
pop
jmp
cli
decl
inc
jb
pop
or
mov
shlb
icebp
ret
xor
jno
xor
mov
bound
out
aas
xchg
push
sbb
jg
pop
mov
mov
addr16
jne
int3
mov
jbe
sub
test
xchg
lret
push
cli
and
scas
sbbb
and
mov
adc
and
subb
les
les
aad
mov
adc
push
das
fnstenv
ss
mov
xchg
popa
mov
mov
out
sbb
jp
inc
cmp
test
jae
das
inc
adc
stos
sub
sbb
adcl
push
sub
mov
dec
mov
sbb
mov
gs
xorb
mov
ljmp
or
pop
lock
popa
xorl
push
in
mov
cmp
clc
or
mov
push
hlt
shll
leave
inc
xchg
mov
mov
jp
dec
test
adc
add
xor
pop
dec
xchg
add
movsl
mulps
xor
leave
xchg
pushf
sbb
iret
fneni(8087
jge
jmp
mov
push
inc
cltd
cmpsb
wbinvd
popl
push
call
imul
js
mov
sbb
fs
add
test
push
cmp
aaa
xor
jecxz
lds
xor
aas
xor
push
cld
aam
xchg
mov
ds
add
outsb
inc
test
divl
xchg
dec
cmpsl
cli
mov
mov
lods
hlt
rolb
adc
add
xor
sbb
add
adc
outsb
subb
pop
jle
cli
push
cmpsb
fiaddl
mov
inc
pop
adc
pushl
inc
arpl
sbbl
jo
jae
adc
adc
sti
aas
movb
mov
sub
add
stc
lret
mov
mov
cmp
pop
fiadds
sub
sbb
jnp
or
mov
test
cmp
movsb
rclb
cli
test
xchg
cmp
cli
xor
ret
leave
dec
pop
ficoml
lcall
jo
outsb
popf
fbld
xor
das
lock
mov
xchg
lret
add
jo
rcr
xlat
movsb
int
imul
push
adc
push
pop
add
pop
in
push
dec
and
in
add
sub
aam
push
and
test
mov
jg
inc
sbb
ljmp
imul
xchg
cmp
or
push
rcrl
pop
out
add
dec
stos
mov
out
ret
xorl
jnp
mov
imul
dec
sbb
lods
nop
jb
cmp
pop
lret
pop
shl
sub
scas
add
cmp
pop
jnp
or
lret
out
test
movb
jle
sub
lods
adc
xchg
fstps
test
mov
push
pop
dec
int
push
adc
mov
adc
es
jp
mov
push
and
mov
stos
icebp
into
mov
mov
enter
and
fsubl
jne
add
addr16
mov
imul
cs
aaa
sbb
pusha
out
fadds
test
push
nop
pusha
push
jge
xchg
mov
roll
nop
push
xor
pop
mov
or
mov
movsl
mov
jne
xor
push
leave
in
xchg
sub
enter
and
fisubs
push
sub
roll
pop
test
lea
fsubr
cmp
jmp
xchg
adc
or
icebp
insb
dec
rcr
insb
gs
fisubl
mov
pop
pop
imul
push
pop
jmp
xchg
imul
dec
push
pop
subl
sti
in
add
dec
out
out
cmp
mov
dec
repz
mov
test
sub
push
jns
sub
dec
addr16
mov
push
and
cld
js
push
and
imul
js
fisubs
xlat
into
pop
fists
popa
cmp
fs
jmp
adc
xor
push
mov
mov
mov
addb
push
mov
xchg
inc
popa
aaa
xor
xor
xchg
fmulp
jmp
sbb
out
cmp
adc
int3
lcall
addr16
mov
stc
ret
nop
rcrb
dec
jp
and
inc
or
jno
aad
pop
jno
adc
pusha
int3
icebp
sbbl
repz
shrb
test
mov
xor
adc
push
cmp
in
pop
fldenv
ficoml
in
mov
sbb
jo
cld
inc
ror
adc
inc
pop
adc
and
or
dec
mov
mov
es
imul
enter
cmpsb
aas
xchg
xor
movsb
mov
jp
cmp
mov
push
shll
aad
mov
inc
inc
ret
mov
cmp
xor
hlt
ds
inc
or
mov
insb
std
std
jl
mov
dec
ljmp
or
loope
fsubrs
repnz
mov
pop
into
out
cmp
push
xchg
int
adc
xor
popf
and
arpl
xchg
pmullw
movsb
fidivs
mov
jns
push
xor
xchg
inc
sbb
leave
sub
stc
mov
dec
aam
jo
stos
adc
dec
in
xchg
movb
movsb
xor
add
add
mov
pop
dec
jmp
and
cltd
xchg
aaa
inc
dec
out
insl
loopne
fcomps
pop
cmp
pop
shrb
ss
adc
cmpsb
cmp
jecxz
rorl
aaa
push
pop
add
jmp
hlt
pop
sbb
jmp
loopne
popa
xchg
cli
inc
les
mov
in
movsb
ret
and
insl
clc
sub
fs
or
dec
sbb
cmp
outsb
mov
mov
inc
lret
mov
dec
lods
mov
lods
add
cs
add
pop
xchg
enter
inc
lret
xchg
mov
xor
enter
ja
insb
jnp
mov
jno
dec
pushf
mov
loopne
mov
add
subl
xchg
popf
sbb
jno
jmp
into
out
ret
test
cmpb
movsl
scas
lods
aaa
in
pop
scas
pusha
jle
jge
test
subb
out
mov
int
inc
xchg
adc
xchg
xor
push
shl
or
mov
inc
mov
jge
lahf
movsb
cmp
lret
lcall
outsb
fld
test
push
jp
test
xchg
imul
movsb
in
popl
jp
and
out
pop
sbb
stos
xchg
xchg
sbb
addl
nop
popa
lahf
dec
inc
fs
cmp
stc
xchg
sbb
cmp
sub
dec
xor
loopne
sub
xchg
push
mov
icebp
xchg
dec
sbb
add
pop
push
xlat
pop
inc
addr16
jg
adc
dec
pop
push
add
sbb
movsb
dec
test
mov
lcall
add
xor
adc
and
sub
xchg
fs
lea
insl
sahf
insl
lods
shr
and
sub
mov
sti
jne
popa
push
dec
scas
and
mov
in
pop
fdivs
sahf
mov
pop
push
fistpl
lret
mov
leave
mov
push
lock
fmul
jge
sti
dec
scas
dec
gs
add
ds
and
out
scas
mov
or
pop
sbb
sbb
insl
cmp
mov
mov
mov
jl
cwtl
mov
jno
stos
stos
xchg
sahf
or
push
lcall
add
mov
lock
cmp
sub
lods
addb
bound
adc
movsl
sbb
cmp
fldl
push
mov
mov
or
test
cmp
cmp
nop
ss
lret
sti
jns
mov
insl
outsl
xchg
loope
ljmp
or
repz
cmp
jecxz
mov
jne
inc
xchg
jb
push
sub
pop
shlb
out
ljmp
or
gs
insl
mov
std
mov
sbb
push
sti
pop
jnp
insb
cmpsl
stos
sti
shll
movsl
ret
aas
push
andb
bound
jo,pt
or
jnp
xchg
xor
xchg
and
add
inc
inc
and
cmpsl
cltd
sbb
cmp
pop
xchg
or
ja
xor
shr
inc
pop
push
loope
add
shl
fdivrs
fisubrs
cmpl
mov
scas
jae
jns
mov
pop
fists
stos
fwait
mov
into
mov
outsb
pop
popa
xchg
inc
mov
sub
dec
dec
adc
and
jmp
sar
dec
imul
int
or
mov
addr16
rcll
retw
mov
repnz
pop
scas
mov
sarb
add
pop
add
xor
jnp
pop
inc
jne
dec
pushf
or
xchg
xor
out
pop
cli
aam
add
jo
aad
mov
mov
cmp
and
cmc
sub
sub
lods
addr16
cmp
jns
mov
sbb
or
lcall
lock
popf
fnstenv
jno
adcl
cmp
lock
mov
push
mov
add
push
jne
das
repz
jae
rclb
into
inc
jecxz
jp
shll
test
adc
sub
icebp
jp
rcll
jbe
mov
ficompl
pop
dec
outsb
cmpsl
sbb
mov
test
xor
pop
sahf
jecxz
xlat
push
in
xchg
inc
add
clc
push
out
cli
punpckhwd
add
lock
jns
imul
test
into
fstpt
dec
adc
jno
pop
repnz
test
ljmp
sahf
add
push
pop
int3
out
jg
or
cs
jmp
push
lock
test
xchg
sbb
mov
mov
fldt
pop
mov
hlt
in
and
pop
sbb
jnp
sbb
addl
dec
int
sub
daa
mov
sbbl
mov
sbb
frstor
jge
mov
sbb
out
mov
and
in
or
out
mov
pop
sub
push
mov
xchg
jbe
out
repz
in
and
rorl
adc
fistpl
fwait
std
lods
push
mov
sti
cmp
pop
pop
xor
data16
or
out
insl
nop
dec
loop
dec
mov
xor
fiaddl
popa
lea
enter
imul
rcrb
jge
movsl
or
mov
inc
shlb
imul
cmp
stc
pop
dec
loopne
mov
jno
les
cmp
or
adc
into
aaa
cwtl
lods
mov
daa
jge
cmpl
fwait
shlb
test
add
data16
lods
and
cmpsb
add
mov
lret
add
push
loope
sbb
cmp
lahf
popf
out
mov
adc
dec
outsb
stos
xchg
das
mov
adc
les
cmp
into
push
mov
loop
in
jnp
inc
xor
xor
jae
xchg
les
push
imul
loopne
add
stos
lods
arpl
xor
xchg
nop
cmp
daa
add
loope
mov
aam
pop
sarl
xchg
jno
hlt
lcall
fcoms
int3
jecxz
movsb
jbe
pop
es
out
mov
lret
xor
rorb
adc
imul
in
push
aam
neg
pop
jo
mov
ss
mov
push
dec
aam
or
shll
mov
dec
inc
push
mov
test
repz
adc
lahf
lock
mov
mov
jecxz
test
mov
jecxz
inc
xchg
adc
test
lods
outsl
lahf
pop
lret
xor
jno
cltd
subl
inc
xchg
pushf
mov
fstpl
punpckldq
or
lahf
popa
aas
insb
repz
test
addr16
shr
jp
push
and
addl
inc
fldenv
dec
loope
mov
add
inc
fwait
int
out
rorl
repz
add
cmp
push
js
ret
mov
inc
daa
lcall
movsl
cld
test
jbe
repz
sbb
cld
mov
jnp
or
cmp
aaa
xor
dec
sbb
in
push
sbb
xchg
mov
aaa
fsubrl
dec
dec
adc
aaa
aad
mov
cmpsl
aaa
loope
insl
dec
or
pop
xor
fmuls
dec
jae
dec
and
push
call
fstl
adc
jl
addl
pushf
xorl
scas
xor
imul
xchg
or
imul
cmpsb
inc
es
pop
pop
dec
das
adc
shll
mov
daa
pop
add
icebp
mov
es
mov
movsl
and
stc
rol
mov
xor
fadds
pushf
add
inc
dec
pushf
les
fimuls
int
or
push
xor
inc
sbb
test
bound
popa
out
mov
in
pop
xor
in
adc
cli
inc
xor
bound
add
pop
mov
lds
cwtl
lret
outsb
loopne
popa
pop
popa
push
test
je
push
ja
imul
xor
out
jnp
nop
sbb
adc
pusha
lret
test
and
movsb
mov
mov
std
mov
aad
mov
fsubrs
dec
in
jns
fimull
xchg
mov
push
and
pop
sub
fbstp
jno
ss
insb
repz
add
shlb
jecxz
cmp
jecxz
int3
mov
push
jbe
pop
cli
mov
int
nop
mov
push
dec
adc
pop
icebp
inc
ror
dec
jne
je
pop
faddl
int3
inc
les
jmp
dec
lret
mov
pop
xchg
loopne
push
pop
addr16
sti
adc
dec
inc
scas
pop
movsb
aad
xchg
mov
ret
pushf
xor
lret
int3
mov
test
cmp
dec
push
fsubr
fistpll
aas
mov
bound
inc
mov
cmp
mov
mov
flds
enter
cmc
cmpsl
jns
mov
cmc
pop
mov
xchg
cmp
testb
and
repz
ljmp
mov
mov
xchg
mov
jl
dec
adc
test
xchg
mov
loopne
insl
adc
je
ja
clc
or
decb
pop
idivl
fwait
cld
inc
pop
sub
mov
into
lds
mov
sbb
ret
mov
es
and
divl
jp
in
add
sbb
cmp
out
les
cmc
sub
jnp
sbb
xchg
or
out
sbb
in
ret
js
adc
cmp
test
cwtl
mov
aas
add
pop
popa
pop
fucom
out
aaa
pop
cltd
lret
xchg
cmp
jle
push
outsl
sbb
xlat
mov
cmp
lcall
insb
ss
sub
jbe
dec
xchg
mov
xchg
mov
jnp
push
add
jg
shll
jecxz
daa
fstpl
loopne
int
mov
lahf
mov
cmp
sub
add
rol
mov
or
in
pop
pop
and
xchg
ja
push
testl
push
cvtpi2ps
add
pop
rorb
out
jne
and
test
sbb
mov
nop
jp
repnz
mov
inc
in
push
sti
cltd
loope
inc
stc
scas
pop
ds
nop
mov
pcmpgtw
movsl
jae
inc
shl
data16
sahf
iret
mov
add
lock
cs
xchg
xchg
loope
adc
leave
adc
scas
sbb
sub
inc
mov
enter
test
inc
shrb
pop
push
mov
fcomi
loop
pop
add
or
int
lods
repnz
lret
add
sub
push
cmp
xor
push
inc
leave
ja
lea
test
lods
push
iret
cwtl
mov
shr
pop
or
dec
movsl
pop
cli
fst
mov
sub
sarb
punpckhbw
xor
fcoml
pop
dec
push
jns
xchg
inc
stos
add
out
pop
add
push
out
rorb
or
dec
insb
fwait
testb
stos
xchg
in
mov
push
mov
rorl
cld
xchg
push
jle
mov
mov
test
orl
push
lcall
cmpl
scas
sbb
jbe
lret
adc
int3
fucomi
ret
and
jp
pop
xor
sub
es
cs
cmp
jae
add
push
push
lcall
pop
mov
xchg
adc
or
jle
int3
std
pop
and
les
sub
cmp
pop
pop
cmp
fiaddl
jg
es
sbb
iret
pop
orl
iret
cmp
xlat
enter
rolb
enter
sarb
cld
pop
or
push
xor
mov
cli
mov
inc
and
neg
mov
push
add
std
fildll
fwait
testb
shlb
mov
out
add
add
adc
xchg
mov
pushf
cmp
jl
add
test
jno
or
pusha
bound
mov
mov
ds
pop
jg
cmp
fisubrs
dec
push
out
mov
dec
out
or
arpl
lahf
les
jo
das
mov
vmovaps
loope
jno
pop
jne
lret
adc
fs
aad
in
popa
movsb
clc
int3
insl
repnz
jg
push
xor
dec
ficompl
loop
cmp
fwait
repz
pop
mov
xchg
js
sbb
push
lock
and
pop
and
fnstsw
pop
lcall
mov
pop
jmp
mov
ljmp
pusha
rorl
xchg
xor
lods
test
daa
mov
xchg
fisubs
scas
jnp
jmp
cmc
fs
je
and
lods
or
xor
inc
shr
adc
lods
cmp
xlat
inc
pop
xchg
dec
je
push
jg
roll
jo
sbb
pop
mov
mov
pop
cmp
es
ret
adc
mov
movb
clc
ja
inc
inc
mov
add
clc
push
loopne
push
sahf
ret
xchg
mov
out
sbb
adc
loope
stc
adc
lock
int
lcall
movsb
movsb
fbstp
aaa
mov
sahf
xchg
sub
jno
pop
add
sub
ret
push
inc
mov
inc
jae
jmp
add
ret
mov
pop
or
repnz
add
cmp
rorb
dec
cmc
dec
nop
mov
pop
dec
movsb
lods
out
pop
mov
mov
lret
lret
mov
sbb
arpl
xchg
aas
inc
addr16
mov
and
ds
fldcw
fsubrl
or
aaa
mov
and
jns,pt
jne
cmp
gs
cmc
pusha
outsl
xchg
sahf
push
push
xor
lret
cs
push
xchg
test
or
orl
mov
adc
inc
sub
mov
scas
inc
jmp
or
xor
movsb
jg
cmc
shr
and
push
test
push
iret
push
jmp
inc
or
roll
jno
push
enter
mov
xchg
lock
aad
test
popa
pop
pusha
lock
xchg
pop
sbb
add
pop
mov
mov
xor
leave
cmpl
mov
sbbl
xchg
mov
lods
dec
fidivs
cmp
test
mov
out
dec
mov
xchg
jne
mov
xchg
dec
mov
inc
sub
int
ds
xchg
and
cmpsb
orb
loopne
jecxz
cmpl
push
repnz
fcmovu
dec
push
xor
sbb
fstpt
and
popf
outsl
leave
cli
mov
ffree
mov
int3
xchg
add
jp
icebp
aam
call
adc
mov
jl
addb
adc
or
push
sbb
jnp
insl
into
jge
dec
std
mov
in
dec
ret
mulb
and
or
outsb
cmc
out
int3
cwtl
xchg
mov
xchg
xchg
dec
mov
push
sbb
mov
dec
push
scas
mov
outsb
fcmovb
and
aas
sub
push
push
mov
or
jbe
js
mov
sub
xor
out
ds
or
inc
dec
cmpsl
in
mov
mov
std
shr
call
adc
fdivrs
inc
bound
and
lahf
call
popa
push
xchg
xchg
subl
or
enter
test
popa
xor
or
insl
aaa
fisubrs
add
dec
and
sbb
das
mov
mov
jmp
imul
aaa
in
fadds
push
loop
fs
inc
add
es
inc
cmpb
mov
or
scas
mov
and
rcr
xor
mov
shl
das
int3
in
pusha
mov
daa
aaa
jae
mov
out
lahf
daa
and
push
lcall
add
pusha
in
cmpsb
in
mov
xor
daa
or
push
mov
lret
mov
adc
jp
out
sti
stos
hlt
in
gs
pop
testl
cmp
sbbl
xlat
cli
sub
rcll
sub
jb
cmpsb
hlt
push
pop
inc
lahf
stos
inc
loopne
addr16
mov
sub
dec
out
popf
scas
sti
or
cmpsb
pop
cmp
mov
push
push
stc
inc
pop
or
and
cmp
rcll
loop
pop
shlb
push
pop
daa
call
xor
jb
test
jno
fs
dec
add
jecxz
in
mov
sbb
das
mov
pop
add
subl
jecxz
stos
in
sahf
das
int3
insl
mov
out
out
jnp
xor
lret
and
sub
xchg
adc
lds
fs
cwtl
repnz
jno
jmp
out
cmp
mov
aad
jle
rcrl
jae
sbb
cli
xchg
pop
idivb
out
in
push
push
or
pop
mov
std
gs
bnd
add
in
add
sub
data16
jo
mov
cltd
mov
mulb
mov
shrl
je
enter
sbbb
push
aad
or
inc
stc
jae
inc
mov
repz
mov
inc
insl
jmp
lea
mov
xorb
or
xchg
cli
push
sbb
cwtl
rcrb
vsqrtps
push
aad
jecxz
aad
hlt
sub
loope
push
fidivs
mov
in
mov
mov
aaa
mov
xchg
jg
dec
push
scas
cmp
lods
pop
fldl
mov
fwait
std
xchg
aaa
mov
sbb
imul
push
sub
mov
adc
in
mov
push
pop
mov
stos
sbb
push
out
mov
daa
jg
add
je
xlat
popa
inc
or
addr16
insl
cmpsl
addl
sbb
mov
jo
sub
or
or
dec
xchg
stc
inc
mov
xchg
icebp
in
les
push
mov
xorb
lock
and
xchg
call
lock
adc
stos
mov
mov
gs
and
inc
inc
out
jle
xchg
mov
fiadds
dec
sbb
iret
jle
ljmp
testb
adcb
jbe
lods
adc
test
adc
js
adc
dec
mov
imul
xchg
jl
iret
sbb
dec
shll
fdivrs
fldenv
xchg
out
ret
jp
sub
cwtl
push
arpl
ss
repnz
add
aam
mov
repnz
add
daa
lret
cli
jo
cmc
add
outsb
leave
insb
lods
jp
push
gs
shr
lret
push
adc
les
mov
stos
ss
out
jle
push
out
icebp
outsl
xchg
mov
add
push
shrb
sbb
push
fsubrl
fiaddl
or
sub
std
jae
or
xor
mov
jbe
jbe
flds
pusha
xlat
adc
ret
xlat
cld
lcall
daa
pop
sbb
mov
repnz
cmp
push
mov
rcll
movsl
icebp
jle
andl
in
mov
and
fidivl
out
jno
push
mov
loope
and
jp
aas
pop
in
xor
inc
add
jg
sbb
or
xchg
stos
dec
add
lahf
movsb
rorl
ds
sti
sub
sar
pushf
adc
mov
aad
sahf
cli
xchg
sub
inc
addr16
inc
jno
jmp
pop
mov
pop
push
or
jbe
pop
scas
xchg
xchg
push
and
add
jbe
sub
dec
enter
inc
xchg
repz
sbb
shrb
xor
and
pop
daa
jns
lret
xor
mov
jmp
andl
or
sub
and
xor
push
cmp
adc
cmp
sbb
repnz
icebp
dec
ret
mov
mov
int3
and
lods
or
incb
sbb
test
jo
xchg
pop
out
jbe
add
add
shlb
aad
pushf
les
cmc
cs
cmpsl
push
scas
fistps
mov
mov
aad
or
fidivrl
push
test
orl
jle
ret
or
into
test
and
cmpsb
dec
lret
jecxz
mov
in
js
rorl
push
mov
xchg
sub
sbb
outsl
mov
mov
or
icebp
or
mov
push
inc
je
popf
fs
es
dec
jnp
sub
add
imul
cmc
mulb
sub
mov
imul
outsl
pusha
test
xor
fistpl
mov
xchg
and
call
roll
ret
test
inc
mov
unpcklps
mov
fcom
les
sub
pop
cmp
pop
xchg
mov
xor
sbb
out
out
add
loope
std
inc
push
xchg
lcall
push
sub
filds
push
cmpsb
inc
mov
jo
pop
or
stos
add
mov
rcrl
mov
dec
rcll
or
lea
test
pop
std
fstp
ret
insl
jmp
push
movl
push
pop
cmp
push
cmpsb
faddp
push
call
cmp
push
sub
xchg
das
adc
mov
xchg
rolb
lods
mov
sub
clc
xchg
rcll
dec
cli
pop
cmp
xchg
addr16
and
mov
jno
jmp
mov
imul
jecxz
cld
fs
rol
mov
mov
or
xchg
stc
push
mov
lds
push
xchg
or
inc
lods
imul
mov
cmp
fxam
dec
mov
mov
push
les
das
xchg
jp
ss
mov
mov
xorl
rcr
push
lahf
mov
mov
fcom
bt
sub
cmp
enter
xor
aad
mov
sub
pop
scas
cmp
je,pt
or
xchg
xor
jge
mov
mov
mov
xlat
or
call
mov
push
sbb
enter
aad
popa
fisubrs
pop
cs
mov
pop
and
cmp
mov
in
andb
xor
sbb
out
mov
and
shl
push
out
fs
lea
xchg
ret
xor
inc
jno
mov
dec
and
xchg
testl
repnz
push
push
and
inc
sbb
std
arpl
or
or
aam
pushf
lods
push
test
sti
fsubrp
jmp
lea
sbb
jbe
cmp
xacquire
mov
pop
pop
ds
notb
mov
aaa
mov
stos
popl
mov
xchg
adc
out
dec
and
pop
insl
ljmpw
repnz
fs
es
sub
dec
or
lret
movhps
sbb
insl
push
inc
sahf
ret
sbb
mull
roll
fidivs
mov
push
xchg
int3
scas
negb
mov
jecxz
xchg
mov
mov
jbe
dec
mov
jae
lahf
cmpsb
out
mov
sub
xlat
xchg
dec
sar
loop
fs
dec
stos
add
lret
subl
pop
inc
mov
jne
and
aam
or
mov
not
rorl
mov
jg
stos
js
jae
repnz
mov
adc
or
pop
mov
es
mov
fwait
xchg
mov
push
mov
dec
mov
fcmovnb
xorl
mov
outsb
dec
xchg
insb
stc
pop
testl
add
pop
roll
subl
test
inc
mov
movsb
jmp
xchg
stc
clc
mov
fstpt
ss
sub
js
lcall
stos
dec
and
ret
mov
jae
pop
movsb
inc
lea
jae
dec
addb
and
and
xor
pop
mov
mov
push
shll
fwait
cs
xchg
lea
ss
daa
mov
insb
rcrl
mov
jb
xchg
sub
push
notl
xchg
aam
xchg
outsb
into
insb
or
xchg
jnp
add
and
cmp
int
jge
ja
xchg
call
movl
stos
stos
mov
mov
adc
aad
addr16
push
aad
cmpsl
clc
cli
lea
jle
rcll
sbb
mov
add
ss
mov
arpl
push
mov
out
or
insb
pop
nop
iret
mov
mov
cmp
data16
push
mov
dec
jle
jge,pn
mov
popf
jecxz
sub
sahf
test
lock
jb
inc
xchg
fimuls
out
push
rcrb
or
xchg
mov
cli
dec
nop
push
and
jg
ficomps
jl
test
outsb
and
sbb
add
or
or
xor
sbb
mov
popf
int
std
popf
js
nop
add
stos
in
std
mov
rclb
jne
mov
cmp
pop
sub
cmp
addr16
jae
xchg
cmpsl
and
movsb
into
shrl
arpl
les
insl
dec
xorb
mov
test
cmp
lods
subl
or
clc
sub
xchg
lods
rep
fildll
lods
mov
cli
test
and
lret
mov
pop
mov
fldlg2
test
sbb
push
call
cwtl
fwait
bound
and
xchg
repz
dec
into
add
mov
stos
xchg
sub
into
adc
lods
outsl
and
orb
inc
movsl
enter
mov
sub
pop
adc
daa
lahf
push
stos
and
pavgb
pop
push
inc
fwait
mov
int3
lock
sub
jns
pop
or
and
mov
pop
dec
xchg
push
dec
pop
mov
adc
lea
ja
or
pop
sub
mov
stos
je
insl
and
jl
test
hlt
pop
jnp
daa
sarl
movsl
sub
cmpsb
xor
lds
or
icebp
test
cmp
inc
mov
xor
and
shlb
xchg
arpl
movsb
shlb
insl
and
add
inc
and
adc
movsb
pop
addr16
mov
dec
cmp
adc
outsl
loop
push
test
aad
mov
scas
imul
mov
clc
cld
int3
dec
xor
shlb
sub
push
xor
xchg
inc
jne
lea
mov
lahf
fcoms
loop
in
rclb
sbb
sub
mov
arpl
loope
xor
sbb
loopne
mov
mov
mov
std
frstor
xlat
dec
pop
in
ja
mov
adc
pop
loopne
ljmp
in
das
add
inc
das
mov
jge
lods
pop
outsb
push
xchg
jno
cmp
je
mov
inc
sbb
push
xor
adc
or
inc
in
jmp
mov
xor
add
test
enter
sub
es
mov
adc
and
adc
pushf
add
sbb
mov
xor
aaa
mov
gs
or
aaa
das
jno
aas
pop
cltd
and
xchg
cmpsl
dec
fdivrl
mov
insl
out
arpl
sti
add
add
mov
das
testb
jns
jle
lret
inc
jno
pushf
jno
adc
pop
in
sti
fists
pop
or
inc
xor
mov
dec
cs
cltd
xchg
jg
or
out
xchg
sbb
cmpsb
repnz
cmp
scas
xor
cltd
adc
mov
js
adc
bound
mov
stos
movsb
jmp
mov
aad
call
cmpb
sub
sub
jb
mov
push
inc
fs
int3
movsl
stos
ss
mov
push
mov
lret
dec
cmpsb
mov
ret
mov
js
fimull
in
ret
rcrb
push
sub
in
xchg
sub
loope
inc
adc
jbe
rcrl
mov
xchg
into
cmpsb
dec
or
sbb
cmp
pushf
jg
pushf
or
into
mov
loopne
and
mov
xor
test
inc
mov
cmpsb
dec
fs
bound
xor
in
mov
ss
and
or
inc
fisttps
push
jb
mov
cmp
test
inc
add
sub
and
mull
add
clc
push
jmp
pop
xchg
fsubrs
xchg
lock
scas
enter
stos
push
add
pop
rclb
out
test
sbb
int3
xchg
movsb
jmp
xor
mov
cmp
mov
jp
jge
add
adc
dec
mov
mov
adc
cmpl
dec
push
mov
mulb
shl
jecxz
cli
fildl
push
inc
jo
aam
mov
xchg
dec
int3
and
inc
rcrb
outsb
lret
push
sub
int
xor
idivb
enter
leave
mov
mov
dec
enter
sub
repz
icebp
jg
aad
shl
inc
mov
lods
sub
test
ss
or
cmp
in
add
pushl
mov
jne
mov
daa
leave
pop
fmuls
inc
lock
mov
mov
mov
push
xor
fiadds
mov
pop
lret
inc
repnz
cli
mov
fs
call
or
hlt
push
inc
adc
or
sub
pop
sub
outsl
sti
xchg
push
roll
jnp
lea
push
adc
xor
popf
jb
out
movsl
imul
xsha1
cmpsb
dec
lret
and
out
clc
pop
arpl
inc
xchg
fsubl
inc
mov
cmc
adc
xchg
cmp
mov
mov
repz
mov
xchg
mov
mov
gs
shrb
fdivl
dec
ds
sbb
or
ds
fisttpll
dec
inc
jno
sub
cmp
mov
or
sbb
cmp
dec
inc
add
xor
sahf
xor
shrb
add
loop
cmp
inc
repnz
add
scas
lcall
push
sbb
mov
lock
sbb
mov
insl
cmp
jl
sub
cmp
ss
add
pop
loope
pop
clc
leave
or
adcl
mov
int
inc
pop
mov
dec
xchg
lret
inc
xor
jmp
ret
push
dec
cmp
add
dec
add
daa
lcall
dec
cltd
mov
sub
sub
pop
xchg
bswap
out
mov
dec
mov
dec
cmp
pop
adc
pop
mov
jbe
sbbl
sahf
popf
sahf
out
push
in
scas
xchg
pop
sub
imul
imul
fwait
mov
dec
xchg
xchg
mov
mov
stc
push
insl
jle
fincstp
sub
nop
out
sbb
out
xchg
mov
aas
ds
in
jge
xchg
fldt
ja
mov
loopne
in
ret
push
sbbl
xchg
cmp
xor
xchg
out
mov
xchg
xorl
adc
jo
mov
mov
rclb
add
mov
xor
mov
test
scas
out
inc
shll
scas
sub
pop
std
adc
cmp
xchg
cmc
xor
nop
jo
push
pop
lret
xor
cmp
dec
sub
or
cmpsl
es
adc
imul
addr16
pop
fldcw
cs
dec
sti
mov
xor
xchg
pop
cs
sub
roll
xor
imul
out
inc
dec
sub
push
stos
or
sbb
xor
sbb
mov
sbb
push
sub
pop
lea
mov
stc
mov
in
test
xlat
lahf
mov
mov
pusha
xor
lea
ljmp
lock
xor
lea
add
icebp
jg
lret
jp
and
add
xchg
dec
addr16
in
clc
call
je
mov
jecxz
mov
pop
hlt
and
imul
shlb
out
push
and
fstpl
bound
dec
mov
dec
inc
add
sub
je
sub
push
imulb
jnp
push
xchg
mov
dec
push
aad
pop
xor
jns
mov
adc
sbb
int3
inc
imul
cs
xor
cmp
mov
in
fildll
sahf
xchg
out
fcomp
sahf
adc
xchg
push
idivb
inc
js
loope
xchg
fwait
daa
daa
out
xchg
lret
outsl
aad
mov
mov
sahf
imul
jge
iret
jno
test
lahf
out
inc
or
cmp
jno
inc
and
sub
mov
ficoml
repz
cmp
push
push
jle
aaa
in
adc
nop
sbb
xchg
scas
push
xor
dec
pop
loopne
fidivs
sbb
je
nop
or
sub
decl
xchg
dec
jno
cwtl
aaa
insl
cmp
in
out
mov
pop
sbb
ds
sti
cmp
push
sub
sbb
shlb
mov
lret
ss
jns
lahf
xchg
push
clc
lods
lcall
fsubl
adc
cmp
sub
dec
xchg
divb
adc
mov
das
dec
shll
xor
sbb
sbb
and
std
leave
pop
in
or
stos
xor
jle
pop
int
add
mov
adc
imul
sahf
ja
movd
out
hlt
fsubrs
mov
scas
jmp
adc
pushf
std
rorb
sbb
dec
fs
movsb
fidivrl
out
mov
dec
lahf
test
ficomps
and
push
mov
dec
jle
pop
push
pop
pop
out
in
movl
pop
push
jmp
add
push
jge
ljmp
push
add
mov
hlt
xchg
adc
or
inc
mov
xchg
bound
xor
pushf
in
popa
ds
stos
mov
mov
xchg
and
sub
scas
push
aas
stos
iret
cmp
icebp
mov
fstpt
push
mov
call
aas
mov
fisubs
push
pop
xchg
pop
data16
jnp
out
fcoml
shrb
aam
push
into
imul
ds
shlb
mov
pop
inc
dec
pushf
mov
jbe
pop
or
mov
stos
pop
mov
mov
out
xchg
push
mov
dec
xchg
negb
stc
lret
aas
xchg
ss
lods
sub
xor
dec
xor
jmp
ds
call
sub
std
pushf
pop
push
push
add
ljmp
ret
push
dec
fildll
push
inc
outsb
mov
out
or
sbb
sbb
sub
xchg
cmp
fisttps
fidivrs
fcomip
dec
dec
cmp
sbb
hlt
mov
in
pmaxsw
jb
xor
mov
mov
insl
in
mov
enter
mov
das
test
icebp
jne
movsl
or
sbb
mov
mov
aam
mov
das
cmp
movsb
cli
scas
insb
adc
jnp
das
sbb
jo
aaa
fs
sbb
inc
jo
cmpsl
cmp
sub
nop
fidivs
call
ucomiss
insl
push
or
jle
lock
adc
cld
into
cli
das
sbb
push
push
adc
test
movsl
mov
dec
dec
cmpl
shll
sahf
xor
inc
dec
xchg
mov
pop
scas
xchg
rorb
pop
inc
jmp
sub
or
sub
push
pushf
dec
jg
aam
fcmovu
pop
mov
adc
pop
aaa
pusha
adc
shlb
sahf
pop
outsb
mov
inc
push
pushf
inc
imul
stc
sub
in
stos
jg
or
imul
cmp
std
mov
cmp
push
iret
cmp
pop
mov
out
cld
push
push
mov
rolb
and
jge
lods
popf
push
or
adc
adc
jo
xchg
xlat
jbe
movsl
out
movsl
add
inc
dec
lret
mov
stos
scas
sysret
or
push
cmp
add
add
xchg
xor
fwait
loopne
ds
xlat
inc
ret
hlt
sub
mov
fstl
dec
inc
pop
cld
sub
add
mov
mov
stos
xor
fdivl
and
xchg
sahf
fldenv
sub
lret
dec
mov
into
cli
rcrb
push
dec
mov
imul
lcall
scas
jmp
mov
addl
sbb
leave
in
scas
and
rclb
add
leave
es
sti
mov
in
mov
jno
nop
arpl
pop
mov
jp
cmp
dec
dec
mov
mov
scas
fists
jmp
iret
inc
aam
mov
mov
jns
jns
cmp
mov
sti
cmp
sub
das
cmp
subl
and
mov
aad
and
xchg
xchg
cmp
fcmovu
bound
data16
out
push
outsb
mov
aad
xchg
nop
cmp
mov
stos
push
repz
test
dec
push
cmp
out
outsb
xchg
inc
rcrl
pop
mov
jns
and
xchg
fwait
ljmp
repnz
ud2
inc
sahf
mov
hlt
cwtl
fistpl
mov
adc
add
cmc
sbb
pop
or
sbb
push
pop
or
lahf
xor
adc
stos
insb
jecxz
add
xchg
inc
in
ret
test
lahf
inc
pop
inc
popa
sub
fistps
nop
fidivrl
sbb
pushf
cli
dec
xor
pop
stc
push
mov
pop
xlat
xchg
adc
cmp
aas
xor
jl
and
mov
test
jns
bound
fwait
push
inc
xchg
adc
call
lret
jg
dec
icebp
subl
in
add
push
stc
inc
mov
mov
lods
mov
mov
and
es
mov
dec
dec
out
imul
pushf
xor
insb
cltd
cmpsl
test
xchg
dec
dec
loop
rcrb
stos
add
lock
gs
ret
imul
push
cld
outsb
fisttpll
cltd
mov
mov
mov
adc
xchg
or
inc
pusha
sbb
sub
scas
insb
jns
and
movb
andb
cmp
fisttpll
nop
out
icebp
mov
rcrl
mov
xlat
inc
in
mov
push
jl
hlt
sub
xchg
fldcw
mov
adc
movsb
std
shrl
pop
adc
fistpl
out
jecxz
cmp
inc
stos
push
sub
sbb
cmp
jb
and
push
xor
loope
pop
jg
daa
loopne
decb
cmp
sahf
inc
cmp
cmp
xchg
ror
cmpb
sbb
mov
dec
and
and
lock
push
outsb
mov
pop
add
pop
lds
push
mov
add
rol
sbb
scas
mov
xchg
mov
ret
jns
outsb
xchg
hlt
sbb
lcall
push
push
std
push
in
dec
or
cmpsl
fimuls
mov
cmp
imul
rcr
clc
mov
jb
mov
arpl
push
jns
pop
movsbl
mov
clc
into
jnp
xor
or
mov
enter
sub
jge
sbb
insl
dec
lcall
xchg
popw
inc
mov
imul
rolb
int
cmc
cmc
loope
xor
in
push
adcb
mov
add
test
mov
or
mov
sbb
cwtl
cmc
shr
push
mov
xor
fcomps
imul
xchg
out
cmpsb
sbb
mov
and
cmp
sbb
and
cmpsb
das
pop
xchg
xor
add
add
js
js
mov
pop
sub
and
cmp
dec
and
dec
adc
loop
mov
jbe
out
jle
scas
cmp
loope
inc
loope
iret
test
imull
iret
mov
outsb
mov
subb
in
fs
xlat
int
rol
cli
adc
jge
int3
ds
loopne
les
push
mov
cmc
aam
adc
clc
mov
jno
pop
jecxz
jnp
mov
lret
pop
fstps
push
add
mov
or
mov
inc
insb
pop
rcl
mov
cmp
mov
mov
pop
movsl
push
xlat
cmp
into
jne
loope
hlt
jo
les
out
mov
adc
stos
add
and
push
push
xchg
cld
pop
xor
add
ret
int3
sarl
sbb
rolb
lds
fbld
push
stos
testb
push
add
cs
inc
and
push
inc
adcl
fsubrl
pop
movsb
add
jmp
cmp
scas
cmp
stc
shlb
pop
cmp
idiv
push
cli
push
data16
jecxz
add
stos
cmp
add
test
movl
mov
jns
pop
sbb
fildl
cld
sub
mov
add
insl
popa
ret
dec
cmp
pop
in
mov
push
addb
les
xchg
pop
cli
mov
jecxz
xchg
test
pop
repz
push
fbld
and
hlt
mov
add
in
fwait
lods
inc
cmp
push
aam
mov
enter
ret
jbe
lods
sbb
pop
outsl
jmp
push
inc
imul
mov
mov
push
mov
cmpsl
adc
std
mov
sub
sub
and
pop
jmp
inc
and
and
pinsrw
mov
aam
pop
xchg
mov
sbb
xchg
popa
stc
lea
push
mov
or
pushf
out
xor
dec
dec
lds
sub
mov
data16
arpl
inc
ljmp
data16
pop
test
mov
into
mov
pop
pop
jmp
test
mov
fs
mov
push
mov
loop
icebp
das
imul
add
leave
xor
sub
jecxz,pt
je
mov
clc
int
cwtl
sub
scas
iret
xor
sbb
or
cld
add
pusha
mov
sbb
add
cwtl
xor
dec
faddp
rcl
nop
iret
lcall
cmp
dec
mulb
mov
mov
sub
jo
inc
mov
arpl
pop
addr16
ret
jmp
and
mov
xchg
out
fs
ret
jnp
shrl
pop
or
sub
jmp
pushf
mov
pop
jne
add
lcall
push
fbld
cmp
pushf
push
xor
test
je
dec
les
pop
jle
adc
lret
outsl
in
bound
mov
dec
ds
test
shrb
insl
mov
scas
cmp
jmp
iret
scas
cmp
daa
loop
pop
lods
sbb
popf
dec
bound
repnz
cmp
test
pop
ljmp
push
fucomi
cmpsb
pop
out
dec
push
flds
push
dec
addr16
inc
rolb
popa
mov
and
call
fs
dec
xchg
cld
pop
in
xchg
loop
pop
mov
fs
mov
mov
pop
stos
mov
clc
mov
cltd
aad
pusha
scas
push
push
into
in
sbb
xchg
xor
or
daa
ret
repnz
sub
xchg
mov
movsl
or
fiaddl
iret
jne
imul
sub
jl
push
lret
js
mov
push
mov
jl
xchg
xchg
aaa
andl
std
sbb
sub
imul
and
lahf
mov
pop
mov
adc
xchg
lods
pop
and
dec
xchg
lret
test
jg
ret
cmp
imul
add
shl
out
xchg
aam
mov
fiadds
scas
jae
push
popa
jo
clc
faddl
das
std
pop
out
ljmp
xchg
cmp
xchg
or
ficomps
mov
ss
dec
sbbl
jle
mov
and
cmp
shrb
sbb
repz
testb
out
push
or
push
cwtl
cmp
rcrb
jae
mov
aad
imul
test
mov
cmp
scas
movsb
adc
pop
add
out
push
and
dec
aad
repz
inc
xchg
iret
loop
scas
dec
mov
lods
dec
cmpsb
out
ljmp
lods
call
and
nop
mov
mov
jno
adc
shll
shll
mov
adcl
jmp
add
fstpl
xor
jge
sahf
cmpsl
sbb
or
cmpsb
mov
jno
outsl
xchg
icebp
mov
dec
out
fnstsw
sahf
cld
stc
mov
ret
call
mov
jne
rorb
xorb
das
insb
incl
into
pusha
and
outsb
xchg
cmp
cmpsb
stos
xor
push
sbb
popf
sub
jae
shlb
lahf
into
ds
cld
stc
jbe
mov
outsl
xor
pop
test
xchg
dec
outsl
cmp
cld
xor
adc
jge
dec
xor
inc
sbb
push
stc
xchg
ffreep
cld
cmp
or
dec
mov
mov
xchg
xchg
mov
sub
dec
ja
sahf
pop
jecxz
mov
adc
data16
shr
push
test
es
jne
inc
adcb
xor
loop
xchg
push
je
outsl
jbe
inc
or
xchg
movsb
outsb
lret
or
xchg
jge
and
and
fwait
mov
test
shlb
jp
idivl
adc
mull
int
jns
shlb
data16
add
test
xchg
aad
test
dec
cs
das
jne
mov
aaa
lods
jle
fiadds
stos
mov
jbe
arpl
jmp
leave
mov
jle
inc
imull
std
out
adc
xchg
mov
sbb
mov
sbb
inc
aam
in
pop
jno
jne
sti
dec
in
mov
int3
or
loopne
callw
mulb
lret
outsl
fildll
arpl
inc
popa
jecxz
pop
jne
pop
add
sbbl
leave
jecxz
pushf
mov
xchg
push
test
mov
out
sbb
xor
fldl
and
sub
addr16
and
dec
arpl
mov
out
ljmp
mov
or
rcl
loope
test
inc
jle
mov
add
cmc
rorb
or
push
js
xor
mov
movsb
pop
andb
cmpsl
push
jo
outsb
sarb
ljmp
mov
test
jmp
mov
cli
sub
lret
cmpsb
mov
xchg
and
pop
pop
cmp
push
pop
add
jno
inc
repz
cmc
add
stos
test
outsb
loop
fisubrl
and
add
adc
imul
fcoms
add
pop
pushl
push
lods
mov
or
mov
mov
lcall
cld
pop
or
es
dec
movsl
lock
dec
push
mov
int
daa
dec
push
mov
and
adc
lods
cs
test
pop
add
orb
aam
xlat
mov
in
aam
stos
dec
adc
shrb
mov
lret
and
std
mov
int3
adc
scas
mov
xchg
pop
and
and
and
ffree
popf
adc
shr
leave
jne
fs
movsb
rcrb
xchg
ror
push
add
cmp
cli
cltd
es
dec
mov
subl
xchg
and
or
das
lcall
enter
cmp
mov
lret
xchg
or
outsb
imul
pop
jp
xor
ret
add
adc
add
mov
cltd
jae
out
sub
push
push
pop
pop
arpl
sbb
or
xchg
xchg
rolb
add
sub
cmp
sti
pop
cmp
cmp
mov
mov
mov
lcall
add
cmp
cmp
out
shll
push
movsl
add
jg
lock
mov
lock
mov
ljmp
cmp
cmpsb
stc
sub
xchg
push
popf
pop
cmc
xchg
in
roll
gs
les
jle
mov
adc
addr16
sbb
scas
orl
imul
inc
mov
cmc
cmp
and
movb
les
insb
repnz
mov
into
sbb
push
ficoml
xlat
push
imul
adc
push
cmp
sub
lcall
pusha
sub
push
mov
arpl
repnz
sub
scas
mov
test
movsb
out
pop
push
repnz
sub
mov
jl
mov
test
xor
dec
add
hlt
sahf
push
addr16
call
and
jnp
cmp
sub
rcr
mov
or
mov
das
add
xchg
or
imul
cmpsl
dec
mov
mov
pop
inc
mov
stos
sbb
mov
incb
xchg
imulb
rclb
and
pop
je
hlt
sahf
sahf
dec
in
pop
mov
push
je
lods
jnp
das
aas
push
pushf
pop
std
outsb
mov
cmp
dec
in
ljmp
dec
idivl
movsl
pusha
gs
lret
mov
push
lock
or
and
inc
fmul
dec
jle
jmp
lea
fisubrl
ror
insl
imul
pop
iret
outsb
or
jae
and
mov
sub
mov
pusha
fcomps
adc
mov
cmp
sub
es
stc
rorb
dec
cmpb
mov
pop
int
sbb
icebp
mov
int
adc
dec
fstl
movsb
cmp
push
out
iret
addr16
fimuls
pushf
loop
push
add
lds
cld
cmc
mov
push
or
lret
mov
testl
stos
inc
cmp
roll
and
movsl
sbb
jno
jno
fbstp
push
pop
ja
pop
push
xor
sti
xor
cmp
mov
lea
aam
lock
mov
xor
xor
fs
sub
cmpsb
mov
xor
jae
lea
add
inc
fwait
push
push
in
xchg
stos
mov
sarl
mov
ljmp
xor
aas
add
inc
mov
xor
inc
pop
mov
jo
xor
inc
cs
xor
sbb
mov
insb
push
push
mov
mov
movsl
popf
dec
lcall
test
mov
lea
jb
ret
in
mov
mov
fimull
gs
mov
das
imul
in
fcmove
imul
js
sbb
pop
sbb
out
or
push
mov
js
sarl
fnsave
cmpsl
rcrl
fcom
arpl
push
mov
cmp
in
lret
inc
ret
push
fwait
mov
add
mov
mov
sub
fwait
jle
pop
and
jmp
dec
inc
or
inc
jl
jne
dec
jmp
dec
rclb
mov
inc
into
mov
out
dec
cmc
out
fs
sub
pop
pusha
cltd
lock
jno
add
out
jno
pop
cwtl
xor
pop
mov
xor
in
data16
in
pop
sbb
popl
push
mov
enter
and
push
dec
lcall
jp
jp
mov
in
sub
push
dec
test
jp
xor
sub
jle
mov
add
fs
cmp
fisttps
stos
lds
leave
adc
inc
lret
cwtl
fcmove
mov
fwait
fwait
xchg
add
cmc
mov
or
mov
lock
loopne
ja
nop
push
hlt
push
cmp
or
jle
jo
dec
xchg
mov
rolb
dec
sti
int
pop
sub
loopne
and
call
or
and
in
mov
inc
push
xor
and
jle
sbb
mov
push
pop
inc
rcrb
mov
test
adc
xor
imull
mov
adc
clc
into
decl
sub
sbb
scas
inc
repnz
lods
inc
roll
aas
mov
out
mov
xchg
xchg
inc
dec
lock
mov
ja
inc
sub
insb
mov
clc
jae
mov
js
cmpsl
mov
sub
into
push
cmpsl
push
mov
mov
imul
or
ficompl
adc
mov
mov
add
push
into
negb
xor
popf
or
xchg
or
mov
shlb
push
or
xchg
outsl
dec
popa
pop
ficompl
mov
lret
sub
jae
ret
xchg
dec
sub
push
pusha
jl
adc
jo
lds
xor
lahf
pop
lea
rol
call
fcompl
ret
xchg
jbe
sub
add
or
daa
sub
mov
and
jnp
repz
cmpsl
mov
mov
jge
or
jnp
and
cmp
addr16
xchg
test
iret
dec
ds
fwait
int
ret
adc
fwait
imul
aas
out
push
repz
pop
sete
popf
subps
stos
adc
imul
mov
stc
pop
cli
lods
add
pop
js
sub
aas
push
sub
push
inc
mov
lods
addl
mov
xchg
xor
add
leave
stos
sbb
lods
jnp
cmc
fmull
add
les
or
mov
jmp
inc
lods
jne
xchg
mov
hlt
mov
fwait
mov
pop
in
call
stc
inc
add
sbb
popa
aaa
inc
jb
jne
enter
sub
add
dec
sub
aad
mov
jp
cmpsl
out
lods
mov
mov
mov
jae
cmc
mov
push
inc
dec
pushf
insb
out
push
add
cmp
inc
add
pop
xor
fiadds
fs
popf
loopne
rorb
mov
hlt
mov
xchg
push
testl
mov
into
repnz
jecxz
es
or
lods
repz
pop
jmp
sbb
xchg
es
das
add
push
cmpb
sbb
and
mov
xchg
rorb
jns
loop
in
mov
stos
dec
jnp
insl
push
mov
push
push
cmpsb
pop
lea
fidivs
mov
dec
xor
insl
mov
push
push
sti
jne
out
xor
aas
test
sbb
insb
or
sub
ret
popf
xchg
push
fdivp
push
cmp
jns
cmpsb
add
rorl
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
