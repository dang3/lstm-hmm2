add
test
into
and
lods
jp
xchg
ficoml
jae
and
xor
rclb
loope
ds
push
pop
mov
test
enter
or
ret
adc
jnp
pushf
jg
xchg
pop
ret
mov
mov
fstps
pop
test
mov
pop
nop
xor
push
push
mov
sub
cltd
adc
loope
pop
pusha
aad
xchg
mov
jecxz
or
ljmp
inc
popa
cmp
dec
adc
sub
movsl
fwait
jmp
aam
pusha
or
cmp
icebp
ja
sbb
push
pop
popa
sti
gs
stos
sti
add
push
adc
repnz
mov
and
dec
dec
cwtl
push
test
pop
fistpll
shrb
loop
add
lods
ljmp
mov
jmp
je
shlb
inc
jmp
imull
mov
cmp
in
aam
push
xchg
xchg
ds
xor
cmpsl
fs
insl
fdivrp
pop
and
loop
inc
inc
add
fwait
xchg
jp
in
push
in
adc
pop
das
cld
pop
repnz
imul
jbe
subl
jne
push
les
idivb
out
xchg
test
sub
aaa
imul
lock
adc
aas
cmc
out
sub
adc
popa
pusha
mov
addb
xor
sub
lock
sbb
lea
and
test
inc
sbb
xchg
xchg
scas
adc
mov
sbb
imul
idiv
test
xchg
mov
mov
xor
pop
xchg
mov
and
int3
cmp
out
xlat
popf
enter
or
mov
cmp
out
xor
and
fadds
mov
scas
mov
sti
dec
adc
sub
inc
and
jno
push
inc
jno
sahf
arpl
add
popa
test
in
dec
aad
cmovb
imul
cmpsl
dec
dec
fwait
and
cmpsb
filds
loope
ljmp
inc
xlat
jb
inc
mov
shrl
fmuls
mov
xchg
mov
push
add
cmpsb
cmp
jge
inc
jge
inc
and
data16
fstpt
push
xorl
insb
xlat
lods
and
fsubrp
jb
out
push
shlb
jns
adc
ret
push
sub
and
fsubl
and
outsb
or
ljmp
dec
rcrl
pop
pop
dec
lds
mov
cmp
cmp
xchg
adc
adc
fistl
je
insb
lcall
int
ror
ret
jecxz
and
imulb
jbe
pop
sbb
sbb
mov
mov
dec
sub
dec
cltd
daa
outsb
fisttpl
loop
fldl
mov
add
std
mov
cmp
ja
nop
mov
insl
dec
xchg
sub
test
icebp
inc
pop
inc
sbb
xor
push
jmp
jp
xor
mov
dec
ss
test
jmp
int
cmp
adc
pop
inc
into
add
in
orb
out
imul
mov
xor
fcompl
mov
add
mov
pop
jbe
dec
fstps
sub
in
loopne
cltd
xchg
and
pop
stos
call
jo
xor
or
jp
out
nop
add
pop
mov
add
mov
lret
pusha
cwtl
cld
loop
jae
lods
mov
lret
add
js
dec
rolb
cmp
jl,pn
push
dec
cltd
add
mov
adc
pop
adc
imul
ljmp
jmp
fstpt
push
dec
imul
mov
or
fnstsw
jno
add
adc
and
in
xchg
rol
dec
shrb
pop
adc
outsl
movsb
int3
lea
inc
xor
std
lret
popf
clc
insl
cld
xor
mov
dec
jne
and
mov
lret
mov
xlat
xor
fwait
fs
dec
in
pusha
mov
in
or
test
fidivl
sbb
imul
mov
xchg
and
sbbb
mov
mov
inc
mov
mov
pop
cmp
adc
dec
scas
push
or
out
cmp
mov
mulps
adc
lods
or
pusha
sub
mov
jp
lock
xorb
add
in
pop
cmp
add
mov
add
sub
out
fnstenv
and
and
xchg
jle
inc
adc
cmp
sbb
push
mov
in
mov
notl
mov
mul
mov
xchg
pop
mov
adc
rolb
push
out
cmp
ds
gs
inc
pop
xchg
cmpsb
repnz
xorl
aas
imul
lods
sbb
push
xchg
jno
mov
shll
icebp
mov
mul
rorl
hlt
fsubp
mov
mov
pop
jbe
jg
adc
and
jae
movsl
ret
inc
xchg
aas
add
add
lods
add
loopne
dec
xor
xor
loope
mov
hlt
dec
add
sub
or
mov
cwtl
xor
sub
mov
ret
add
mov
sbbb
int3
sbb
shl
adc
or
mov
pop
ret
call
xchg
jnp
ljmp
ljmp
xchg
out
sbb
adc
adc
into
sti
ja
out
fnsave
dec
shll
mov
push
and
mov
lahf
adc
mov
cli
out
cmc
adc
fcoml
imul
test
sbb
sbb
jo
out
rolb
fbstp
pop
xchg
inc
cltd
jb
cmpsl
ja
jno
and
cmpsl
jne
jge
movsb
stc
out
mov
jne
rcr
adc
mov
movsb
movsl
fst
add
adc
push
loopne
dec
inc
sbb
arpl
pop
fstl
cmp
xor
in
add
aam
xchg
hlt
push
test
ljmp
rcrb
movsb
adc
insb
pop
in
pop
jae
inc
roll
lods
out
inc
arpl
add
mov
imul
and
rorb
and
cli
call
mov
push
scas
in
mov
pop
push
mov
xchg
inc
xchg
inc
xchg
xchg
js
and
popf
push
dec
jg
pop
or
incb
sahf
int
jecxz
push
add
lahf
push
mov
orl
xchg
iret
scas
in
int
idivb
mov
push
and
cmp
jecxz
cmc
pop
icebp
jp
stc
lcall
aad
ret
push
xor
pop
or
divl
fsubp
sbb
cmp
jle
dec
mov
lahf
pop
pop
mov
jbe
call
ret
adcl
insl
sarb
enter
cmpsb
outsl
in
in
test
fwait
pusha
xchg
outsb
arpl
iret
imul
or
dec
mov
add
fs
mov
dec
sbbb
sbb
decb
mov
mov
arpl
outsl
xchg
iret
or
inc
test
movsb
mov
add
xchg
fidivrs
mov
dec
sbb
or
popf
loop
push
xchg
out
sbb
or
xor
out
or
add
xchg
mov
mov
jne
and
adc
in
cmp
jge
mull
rol
push
cmp
adc
adc
stc
fnstsw
in
fwait
sbb
mov
cmp
inc
fisubs
dec
cmp
out
push
insb
xchg
adc
fs
mov
mov
test
fmulp
mov
shrb
test
stos
or
and
lock
push
mov
sub
repnz
xchg
cmpsb
sahf
cs
mov
sub
or
push
leave
addl
and
sbb
pop
outsb
xchg
sub
pop
pop
out
fld
data16
cmp
je
push
imul
or
jmp
inc
lods
jecxz
call
leave
mov
or
xor
in
jns
dec
stc
mov
adc
push
sbb
in
aam
push
pusha
add
jb
enter
hlt
pop
dec
addb
ret
mov
mov
pop
scas
xor
mov
lea
sub
push
cmp
orb
test
jg
inc
ja
fmull
ret
fxch
addr16
lcall
aas
cmc
loop
mov
pushf
into
inc
aaa
fcompl
mov
add
mov
daa
fcoms
loopne
insl
test
xchg
mov
jle
cmp
adc
sbb
and
adc
sbb
mov
push
dec
fstpt
xchg
xor
lods
stc
cmp
sarb
es
sub
mov
stc
sbb
in
jne
xchg
shlb
movsb
xor
in
mov
lret
std
sbb
push
ret
jecxz
inc
mov
test
adc
sub
or
lret
xchg
adc
push
sti
add
mulb
lock
daa
syscall
imul
jp
popa
rcr
repnz
push
cmpsl
push
xchg
fsubrl
stc
inc
shlb
xor
cs
jp
xchg
pop
adc
jne
insb
in
leave
and
out
in
test
mov
jl
xchg
inc
mov
xlat
nop
xchg
push
les
add
fists
mov
aad
and
jmp
push
inc
xchg
mov
inc
and
lds
pop
pop
sti
xchg
jle
mov
sbb
pushf
loope
aas
and
imul
or
lods
pop
cmp
push
lahf
sbb
lahf
in
mov
leave
ror
lock
nop
int3
popf
gs
cmc
cmp
xchg
lods
rcrl
popaw
rcrl
imul
pop
xchg
mov
xchg
fstpt
call
pushf
push
mov
jecxz
xchg
mov
xchg
mov
sub
pop
and
jae
rorl
sbb
mov
inc
sbb
push
int
fiadds
subb
pop
mov
inc
in
daa
daa
aas
cmpsb
mov
ja
mov
push
pushf
sbb
xchg
outsl
adc
sub
scas
cltd
mov
and
fwait
and
das
cs
sub
mov
stos
outsb
out
fucomip
pop
std
movsb
jmp
xor
adc
mov
jo
mov
cltd
cltd
test
jns
jnp
mov
scas
push
fwait
jle
pop
lods
cmp
sub
xor
sbb
fs
and
mov
push
aas
lret
test
movb
fmuls
and
push
gs
pop
xor
cmpb
cmp
stc
dec
pop
pushf
addr16
pop
shl
adc
inc
pushf
add
push
insb
lods
inc
mov
push
add
sbb
xor
jg
sbbl
call
mov
xchg
fwait
cmpsl
insb
out
mov
icebp
push
mov
ror
jge
xchg
inc
stos
jp
push
lea
xlat
xor
rcl
js
inc
cmc
push
cmc
dec
daa
lock
cmpl
loope
mov
sar
jp
push
clc
pop
leave
sbb
sub
out
addr16
adc
adc
xchg
fdivrl
add
std
mov
jno
fidivl
add
mov
adc
lret
imul
inc
mov
sti
rcrl
pop
out
xchg
in
mov
imul
pop
mov
hlt
fimull
fwait
movsb
jbe
mov
loop
in
cld
pop
lahf
mov
push
int3
xchg
mov
xor
inc
addl
and
roll
mov
mov
cli
pop
xor
inc
inc
andl
and
fistl
out
adc
aaa
stc
sub
lahf
push
popf
cwtl
mov
fmul
sbb
test
negb
pop
cmp
xorb
or
std
je
pop
js
inc
and
incl
out
fcompl
pop
pop
fdivrl
stos
sub
sbb
outsl
les
cmp
mov
xchg
adcb
popf
ljmp
sub
push
popf
sbb
cmpsl
fs
add
sbb
gs
je
test
push
push
loop
fstps
cmp
fildl
addl
ret
add
out
xor
mov
cmp
imull
fisubs
xlat
int3
jns
mov
enter
xlat
addl
push
jbe
int3
inc
adc
fdivrl
and
mov
inc
lret
aas
popf
pop
push
jnp
mov
testl
mov
out
fldl
bound
ret
das
jns
cmp
push
in
mov
rcr
pusha
push
mov
jne
push
lea
add
scas
and
push
inc
mov
jo
pop
jnp
cli
jnp
adc
stc
pop
jg
sbb
mul
pusha
shll
mov
outsb
or
insl
out
js
ret
inc
lret
xchg
outsl
pop
mov
lret
repnz
push
mov
subb
inc
repnz
xchg
push
fadd
imul
mov
cli
xchg
data16
movsl
push
out
cmp
cwtl
mov
push
rorl
mov
jno
mov
or
lock
mov
cld
jmp
mov
xor
imul
dec
and
ret
sbb
xlat
jmp
sbb
gs
repz
lret
popa
push
jno
sub
lods
lcall
fsubrs
cmp
fcomp
ss
popa
lock
subl
mov
int
fistps
inc
stos
lods
adc
xchg
in
insb
lds
mov
cmp
arpl
sub
sbb
xor
dec
outsb
rcrb
fildll
cmp
int3
stc
mov
sti
adc
orl
je
pop
shll
mov
xchg
add
lods
mov
mov
mov
fisttpl
mov
sbb
aam
cmp
mov
movsb
orb
nop
push
mov
ret
inc
xor
xlat
and
clc
jb
cmpb
xchg
ficompl
xor
int
add
int3
xchg
pop
dec
aad
outsb
pop
test
pop
sub
movsl
shlb
addr16
test
rcl
mov
pop
inc
lock
aam
pop
jle
mov
pop
mov
dec
daa
push
bound
in
xchg
out
leave
or
je
mov
mov
push
mov
nop
cmpsb
lea
mov
fsub
dec
jae
xchg
add
ljmp
push
roll
ret
pushf
data16
push
lods
xchg
ljmp
cmp
ja
imul
cmp
pop
mov
out
mov
icebp
lods
sbb
fsubrs
in
cli
or
mov
cmpsl
xchg
filds
mov
or
lds
pushf
adc
lahf
imul
jnp
lahf
shlb
das
mov
add
sub
adc
mov
mov
pop
push
lds
or
popf
nop
movsl
leave
daa
mov
lret
rcll
mov
je
sbb
in
stos
mov
out
test
cmc
and
rorb
or
or
xchg
in
inc
push
pop
push
cmp
loopne
push
popa
gs
bound
cmp
movsb
testb
dec
fsubs
cmp
fwait
cmpsb
scas
pop
and
or
ss
sub
std
leave
push
pusha
idivl
or
pop
out
cmp
sbb
movsl
cmp
inc
pop
cmp
mov
inc
push
push
or
inc
jp
in
sar
pusha
insl
sub
fcomps
test
fwait
je
addr16
and
fs
jp
mov
out
jmp
push
mov
sub
add
add
and
cli
jnp
dec
xchg
pop
out
popf
clc
or
in
repz
xchg
cmpsb
fwait
mov
lcall
inc
cs
aam
jae
fwait
scas
xchg
jg
aam
not
mov
dec
push
mov
dec
les
rol
jno
out
sub
pusha
xor
jg
bound
mov
add
sbb
lods
daa
jge
lret
sahf
xor
imul
jecxz
push
push
lea
jb
mov
test
inc
jbe
dec
iret
pop
fcoml
lret
push
push
push
sub
sub
jns,pn
dec
xchg
sahf
popa
arpl
in
jle
fiadds
rcrb
jns
into
int3
jbe
enter
inc
xchg
push
test
cs
mov
jge
sbb
mov
lock
jle
xchg
in
shll
addb
mov
or
call
mov
push
popf
mov
ds
jae
cmpl
std
push
add
fdivrs
ret
adc
jb
fnsave
lahf
lcall
out
fwait
rcrl
stc
mov
push
aam
ja
mov
dec
adc
pop
lods
js
mov
out
and
or
mov
pop
stos
sub
stos
pop
ss
mov
mov
cmpsl
add
sbb
jb
in
jno
dec
pavgb
jae
xor
dec
mov
sbb
add
add
lret
orb
sub
push
pop
mov
sbb
pop
cli
subb
das
fdivl
insl
mov
lret
xchg
mov
cli
insl
add
jmp
loopne
enter
repnz
and
aam
daa
clc
mov
outsl
fwait
mov
cmpsl
push
adc
rcrb
mov
sub
mov
mov
and
imulb
mov
push
dec
dec
dec
fnstcw
in
stos
orb
out
jmp
loope
lds
cmp
ror
mov
jle
sbb
popa
pop
sub
call
and
mov
inc
xor
dec
test
cli
push
ljmp
adc
std
xor
push
mov
push
ljmp
rorb
pushl
loopne
dec
fisttpll
push
mov
pop
js
xchg
adc
push
mov
xor
faddl
pushf
movsb
ljmp
test
rcl
lahf
ror
fnstenv
push
call
mov
not
jne
jg
and
and
push
hlt
sub
jge
es
dec
push
test
and
cmp
scas
lret
jp
mov
roll
mov
dec
dec
push
je
mov
mov
xor
cmp
pop
addl
jo
xchg
lock
fucomip
ljmp
cwtl
fwait
aad
push
push
testb
lods
jg
repz
mov
mov
mov
hlt
iret
inc
andb
cwtl
inc
mov
sbb
cli
ud1
outsl
sahf
fucomp
jmp
adc
sbb
pop
in
movsl
fidivs
mov
push
sarb
cmp
stos
mov
daa
xor
pop
xchg
rcll
xor
xor
sub
cmp
cmpsb
loope
cmc
sar
fwait
mov
rcl
pop
rorl
jne
mov
inc
out
icebp
or
and
xchg
or
mov
mov
ljmp
or
test
idivb
std
xor
enter
cmp
test
pop
dec
loopne
and
mov
mov
xor
test
in
loope
mov
push
insb
pop
sahf
std
xchg
mov
hlt
gs
outsl
mov
nop
lret
dec
cltd
adc
sbb
rcll
sar
lret
adc
ret
ss
push
dec
mov
fstps
cld
rorl
or
mov
test
sbb
xchg
mov
movb
outsb
mov
push
jno
sbb
cmp
mov
mov
aaa
fcomps
push
push
lcall
negl
mov
adc
sub
jae
aas
pop
test
das
mov
adc
iret
pop
mov
int3
jg
inc
xchg
into
jle
dec
pushf
xor
cmp
ja
or
arpl
push
mov
orl
out
inc
movsb
sar
inc
and
pop
or
das
cmp
or
mov
es
out
cmp
pop
jnp
fs
or
das
mov
in
or
dec
ja
xchg
or
cmp
or
push
dec
notb
in
jbe
inc
inc
repz
loop
jecxz
gs
rorl
stos
iret
call
loopne
or
mov
out
xchg
lcall
push
sbb
mov
xchg
loop
sub
sbb
and
pushf
mov
sbb
sbb
test
mov
push
ja
sbb
jnp
loop
bnd
jg
test
shrb
movsl
jnp
pop
stc
or
or
test
adc
dec
mov
inc
mov
pop
mov
aam
test
movsb
sub
jmp
jns
stos
adc
lods
shl
fcoms
ret
cmp
gs
scas
lcall
repz
fildll
inc
xor
insb
test
jno
inc
add
push
fucomip
xor
pshufd
mov
loopne
mov
xor
dec
add
and
negb
shrl
xchg
mov
jle
and
sahf
movhps
mov
ret
push
xor
mov
je
fisubl
out
mov
mov
or
movsb
notb
xlat
dec
lods
push
mov
int
add
int
cmp
out
xor
cltd
stc
push
mov
test
jno
xlat
lea
or
mov
stos
dec
or
mov
mov
mov
xor
sti
xchg
pop
or
jg
fnsave
mov
xor
mov
push
fucomip
fidivrs
push
xchg
dec
and
aas
cltd
cmc
sub
out
test
sbb
mov
stos
je
out
sub
and
stc
xchg
pop
movsb
fucomi
fsubs
push
jo
loope
sbb
add
mov
sti
or
pop
jae
aas
cltd
or
lret
or
or
leave
xchg
and
adc
xchg
int
inc
in
hlt
dec
xchg
mov
dec
mov
cmpsl
cmc
xchg
stc
imul
mov
jno
and
cmp
daa
loop
jno
mov
mov
cli
dec
dec
sbb
outsb
cmp
mov
adcb
sbb
xchg
in
out
ficoms
and
pop
cmp
pusha
cmpsl
loope
iret
and
lret
jle
xchg
vpsubw
or
xor
ret
mov
loop
push
sub
pop
daa
clc
test
mov
in
out
jmp
jae
mov
sub
cmp
sub
mov
mov
jb
shrl
ss
add
cmp
rol
test
cmp
xchg
rcrb
add
inc
xchg
jmp
and
sub
xlat
stos
clc
outsl
mov
xchg
pop
cmp
maxps
dec
push
xor
sahf
cwtl
and
xchg
test
cltd
xchg
xchg
pop
mov
popf
pop
or
mov
hlt
adcb
inc
xor
fimull
in
cld
lods
or
or
lods
fcoms
lods
inc
into
sbb
push
inc
test
imul
dec
mov
mov
pop
sub
dec
dec
sbb
xor
and
mov
sahf
dec
pop
add
stos
movsb
add
pop
push
xchg
out
adcb
dec
cli
xchg
lods
test
mov
loope
pop
shll
pop
inc
incl
lret
lcall
lock
mov
xchg
lea
lock
or
lret
lret
outsl
test
aaa
out
addb
xchg
dec
push
mov
push
loop
andnps
movsl
enter
pusha
call
and
sub
cmpl
cmp
or
mov
ja
pop
mov
fcmovbe
mov
ljmp
sbb
mov
mov
mov
data16
nop
hlt
and
jmp
and
push
xchg
add
kxnorw
aaa
call
arpl
xor
ret
cmp
sub
adc
fcoml
outsb
and
pop
shll
fisubrl
outsb
and
mov
xchg
xchg
pop
pushf
mov
inc
mov
inc
int3
enter
pop
cmpsb
sub
sbb
loop
loope
cmp
sbb
bound
imul
add
sub
test
or
cmpsl
pop
push
push
adc
mov
and
out
jl
enter
xchg
stos
adc
jmp
and
pushf
pushf
pop
dec
push
imul
movsl
push
loop
fcoms
sub
fisttpl
push
push
and
aaa
lcall
inc
add
std
jecxz
mov
arpl
loope
sub
pop
ret
inc
call
popa
mov
dec
xor
mov
notb
jno
pop
repnz
cs
adc
mov
shll
fsubs
cltd
pop
stos
flds
ret
aad
cmpsb
stos
cmpl
rcr
dec
adc
cltd
pop
inc
inc
cmpsb
inc
mov
arpl
js
mov
mov
movsb
sub
jl
movsb
jg
or
jg
daa
and
mov
cwtl
and
xlat
les
adc
push
dec
xor
out
push
arpl
push
aad
fistl
rorb
jmp
je
mov
dec
cmp
repz
ljmp
lret
cmp
pop
lcall
push
std
mov
jl
jno
pop
lods
mov
cmp
dec
jmp
push
arpl
jae
cmp
push
hlt
sub
aas
les
lahf
movq
cltd
std
add
pop
popl
dec
fstl
mov
inc
push
jecxz
jmp
cmpsb
sarl
lods
mov
add
sarl
add
push
or
into
in
push
xor
out
test
imul
xlat
les
pusha
jecxz
lret
test
testl
push
es
mov
dec
stos
and
imul
sti
jg
xor
outsb
xlat
xchg
aas
or
repz
pushf
sbb
insb
std
add
push
add
rcrl
into
bound
out
bound
test
xchg
mov
and
in
sub
out
mov
in
fs
xchg
cwtl
push
jmp
ss
ret
mov
andb
addl
pop
sub
daa
inc
or
shrb
mov
jbe
cli
lahf
mov
inc
out
cmp
xor
out
fadd
mov
and
mov
jne
cmp
cmp
mov
dec
add
icebp
or
fisttpll
lods
xchg
out
adc
cmp
sbb
inc
outsb
mov
pop
popa
xchg
mov
add
lds
jecxz
dec
vmwrite
movsl
mov
jmp
sbb
adcl
rcll
cmp
pusha
js
pop
cmpsb
and
mov
jg
fs
xchg
into
jns
outsl
cmp
jae
enter
or
pop
mov
mov
aam
test
jge
repnz
push
xchg
aaa
pop
ljmp
mov
popa
or
jp
leave
std
callw
lods
cmpsl
dec
sub
mov
leave
lods
push
movsb
adc
push
sub
xchg
push
or
push
test
and
push
cmp
jae
clc
in
add
fidivrl
adc
add
flds
outsl
stos
xchg
stc
sbb
sub
fsubrl
mov
xor
into
loope
mov
aam
add
fildl
xor
pop
lds
data16
inc
mov
ljmp
or
sbb
xchg
andl
call
mov
mov
dec
jge
iret
pop
loope
pop
pop
imul
arpl
aad
into
hlt
jp
add
jae
pop
mov
mov
xchg
or
andb
bound
dec
xchg
xor
es
sar
mov
in
and
ss
mov
xchg
pop
out
inc
mov
lea
out
and
iret
mov
pop
xchg
adc
mov
jnp
add
xor
xchg
or
pop
and
mov
fwait
clc
aaa
jle
out
xchg
and
and
dec
jp
gs
pushf
movsl
mov
cmp
dec
jns
mov
cmpsl
aam
gs
ja
pop
aam
push
xor
mov
xchg
shl
or
sbb
xor
movsb
sbb
fists
add
dec
out
or
loopne
hlt
icebp
jno
subl
dec
sub
lock
xchg
pusha
cmp
xchg
adc
jl
popf
lds
xchg
repnz
push
mov
ret
mov
lret
jmp
mov
inc
fnsave
add
lods
out
ljmp
sbb
sub
fildll
push
adc
pushf
and
lods
out
jle
mov
nop
add
jbe
pop
and
arpl
lret
rcrl
lret
arpl
cs
jle
popf
repnz
mov
cmpsl
lcall
outsl
fcoms
mov
push
ss
mov
mov
cli
add
cltd
xchg
mov
lods
pop
in
cmp
push
lock
xor
ss
xchg
popf
or
dec
inc
test
sbb
cltd
and
mov
stc
fistpll
cmpsb
fisubrs
cmc
mov
out
imul
push
push
loop
lods
mov
subl
out
push
fdivrs
push
inc
stos
aad
or
outsb
mov
mov
cwtl
mov
add
jecxz
in
ret
inc
push
test
dec
push
lea
fidivl
jp
cmc
cmp
push
push
mov
insb
inc
sub
clc
stos
mov
sahf
dec
push
lods
scas
lret
mov
fidivs
fwait
push
cmp
icebp
bound
and
sbb
push
mov
repnz
clc
roll
inc
psllq
jno
bound
mov
fstp
imul
cmp
mov
dec
shll
mov
dec
mov
jmp
pop
mov
lods
daa
sub
jge
orb
push
inc
xchg
subl
fidivrl
imul
mov
jns
ret
push
sbb
mov
dec
lcall
inc
xor
cld
aad
jno
int
sbb
push
pop
pushl
jae
aas
add
fs
adc
in
and
scas
xor
dec
aam
push
stos
push
push
loop
push
pop
mov
cmpsb
pop
inc
std
cmp
dec
cltd
pusha
pop
imul
lods
sub
mov
insl
xor
cwtl
mov
fisubl
push
xor
mov
sbb
notl
sub
mov
push
xor
fwait
les
data16
mov
mov
jns
cmp
pop
xchg
jnp
jecxz
outsl
pop
xor
sub
data16
pushf
mov
stc
stos
xchg
xor
call
xchg
test
jg
insb
jmp
push
xor
jmp
ljmp
jbe
cmpb
dec
pop
outsb
push
sub
and
daa
fdivr
je
mov
clc
adc
cmpsb
cmc
jp
es
mov
outsl
fstpt
mov
inc
repz
ja
push
and
mov
in
call
sbb
push
dec
out
cmpsb
push
divb
mov
lods
add
fisubl
adc
push
shll
dec
mov
pop
sbb
pop
mov
outsb
imul
test
mov
clc
mov
sbb
push
incl
ret
cmc
cli
push
outsl
lret
sub
pop
cwtl
ja
dec
mov
int3
xor
or
or
and
das
and
ret
xchg
je
stos
fcmovnbe
pop
scas
aad
sub
sbb
das
mov
dec
out
sbb
mov
adc
mov
push
mov
mov
cmpsb
push
out
mov
sahf
enter
test
and
add
xchg
push
out
je
sbb
jns
je
jge
cmp
adc
icebp
push
ja
ret
mov
cmpsl
mov
mov
lds
or
iret
pop
cmp
push
and
or
call
or
out
xor
daa
cmp
push
lcall
pop
push
ja
sub
mov
sub
dec
mov
cli
inc
ljmp
jno
mulb
ret
and
movsl
mov
into
shll
push
pushf
add
sahf
mov
mov
xor
push
daa
test
fstps
mov
ret
cmp
outsb
pop
outsl
insl
jmp
mov
xchg
int3
cmp
cmpsl
cmc
shrb
pop
cmp
fs
push
ja
pop
fsubp
nop
mov
mov
mov
dec
das
aam
fisubs
rdtsc
jnp
les
push
cmc
jne
fistpll
imul
xor
lods
sbb
mov
sub
sub
fldcw
pushf
in
mov
insl
insl
jne
mul
xchg
rcl
out
pop
dec
jecxz
and
int
and
in
pop
aaa
pop
scas
lea
sub
hlt
cmc
testb
loope
pop
lds
jnp
stos
xchg
jp
and
jo
loop
loopne
addr16
mov
std
decl
cmp
xchg
cmp
pop
xlat
rorl
popf
outsb
add
cs
mov
jp
les
cwtl
jae
inc
pop
loopne
insb
pop
insb
dec
divb
cmc
test
mov
mov
fwait
sub
gs
div
pop
into
movsb
std
pop
movsl
xchg
mov
stc
push
pop
jb
int3
jne
xor
jg
cmp
dec
mov
popa
in
cmp
das
in
es
mov
mov
ljmp
dec
je
jmp
dec
in
xlat
lret
jecxz
aas
adc
mov
fs
fnsave
je
int
ficompl
lods
addr16
ror
or
cmpl
jnp
jbe
jp
jno
inc
sub
stos
out
sbb
push
mov
sti
jecxz
mov
cs
lods
xchg
sub
pop
cmp
push
dec
ljmp
jl
and
inc
and
pop
mov
and
dec
out
sbbb
inc
pop
repnz
mov
inc
dec
mov
mov
fisubrl
sbbb
mov
lret
repz
popf
ljmp
shll
addr16
dec
ds
mov
pushaw
fcoml
repz
adc
mov
mov
and
inc
sti
lock
mov
cmpsb
negl
and
push
shr
test
pop
dec
push
xchg
imul
push
cld
cmp
dec
loopne
int
dec
ja
and
jle
push
out
lds
xor
lret
and
mov
loopne
mov
hlt
jbe
dec
xchg
xchg
out
out
fcmovnu
jecxz
cmpsl
iret
jp
lret
js
cmovg
cmp
fs
add
sub
mov
int
jb
mov
je
int
fbstp
xchg
mov
or
lcall
adc
push
outsb
pop
mov
scas
lds
pop
arpl
xchg
pushf
ret
jg
lods
jecxz
out
clc
out
fstps
lret
scas
sti
subb
add
shrl
mov
sbb
sbb
push
push
adc
mov
adc
adc
or
subb
test
lods
xchg
out
adc
or
ljmp
ficompl
add
loope
aaa
push
fadds
nop
mov
ss
sub
mov
pop
std
fmuls
mov
jae
movsb
outsb
dec
shl
sbb
or
xlat
push
push
mov
imul
jecxz
mov
mov
push
lock
sub
jae
scas
mov
decb
stos
repz
or
and
jge
cmp
push
popa
lods
inc
xchg
add
shl
into
xlat
mov
rcl
jb
jns
ljmp
pop
mov
sub
mov
or
cmp
push
roll
and
dec
push
std
inc
loope
xor
inc
mov
xchg
jbe
push
sahf
xchg
push
leave
ss
dec
or
imul
fcomps
aas
mov
xchg
dec
in
fdivrs
and
int
in
ljmp
cltd
dec
insb
dec
push
movmskps
xchg
dec
iret
pop
xchg
fidivs
jl
mov
rclb
loope
pushf
xorb
data16
call
test
jb
mov
adc
insb
mov
test
mov
scas
lret
dec
inc
shrb
xchg
aad
mov
pop
pushf
push
cmpsb
test
cltd
pop
ror
ja
and
sub
xor
inc
cmp
xchg
js
xor
in
inc
dec
lods
inc
xchg
test
outsb
pop
in
pop
xchg
ror
or
ss
push
inc
push
inc
mov
push
xor
rcrl
sub
js
or
das
adc
xorb
xlat
sbb
dec
fcom
and
and
cmp
add
mov
cmp
ficompl
mov
and
lahf
inc
jns
xor
jg
sti
push
jp
dec
or
mov
xchg
mov
in
subl
cmp
out
fcomip
cmpb
xchg
adc
loop
repnz
mov
cwtl
jae
pop
sub
pop
push
in
pop
repnz
pop
push
mov
xor
cmp
stc
push
inc
jne
pushf
and
dec
test
xchg
dec
mov
pop
jge
fwait
arpl
or
clc
into
push
mov
mov
jl
dec
pusha
movsl
adc
dec
pop
loopne
jl
stc
fcompl
hlt
gs
aas
xchg
mov
mov
repnz
mov
lods
mov
and
or
scas
fmull
rol
int
rol
test
and
xchg
bound
adc
pop
pop
pop
popf
dec
dec
std
jnp
mov
movsb
adcl
jl
js
sti
les
xchg
int3
and
shrl
xor
out
pop
cmp
or
mov
out
lds
out
aas
or
xchg
ss
dec
xor
add
test
movsl
mov
add
or
mov
pop
and
jnp
inc
arpl
push
sbb
and
push
movsb
shll
ds
loopne
dec
fwait
add
imul
subl
scas
mov
hlt
inc
inc
cmp
ss
ja
lea
adc
or
or
insb
pop
sbb
lods
sbb
sbb
stc
pop
dec
push
pushf
mov
or
fmuls
dec
push
mov
adc
pusha
sbb
push
mov
jp
mov
xchg
gs
jle
stc
ss
test
inc
and
scas
in
xchg
push
pop
and
je,pn
icebp
insb
fisttpl
pop
dec
nop
sbb
mov
std
ret
fimull
aam
dec
pusha
or
sahf
aaa
shrb
push
jp
das
fdivs
sbb
fldcw
leave
cmp
test
insb
add
rcl
add
and
dec
xchg
xchg
xchg
lods
mov
and
add
sahf
test
mov
lret
nop
std
jle
mov
in
adc
sbb
and
fisttpll
xor
enter
movsl
out
adc
flds
xor
scas
ret
cwtl
push
shrl
clc
outsb
mov
out
sub
jnp
hlt
lahf
mov
lock
dec
int3
test
sti
stc
insl
frstor
adc
ss
fcomip
dec
fbld
mov
lock
dec
icebp
call
push
add
xor
and
scas
xchg
in
push
int
xor
leave
adc
pop
sarb
scas
xchg
lret
dec
into
fucom
jl
push
jb
loop
aad
mov
cmp
pop
dec
fcoml
iret
in
pop
andl
gs
add
in
cmpsl
stc
dec
in
inc
insl
sti
or
dec
push
mov
xchg
xchg
cmp
inc
outsl
sbb
or
mov
mov
inc
xor
xor
clc
stc
mov
loop
rcrl
daa
or
cmp
movsl
dec
cmpsl
inc
sbb
adcl
pop
icebp
jo
sub
scas
lods
inc
sbb
sub
ljmp
and
or
mov
mov
dec
inc
sbb
stos
int
add
sbb
push
test
fisttps
inc
cld
mov
mov
push
and
push
xchg
pop
int3
push
xorb
sub
ret
mov
and
inc
mov
cmp
inc
and
pop
inc
mov
xchg
subb
sbbb
or
dec
push
adc
push
lcall
repnz
adc
mov
imul
mov
gs
pop
mov
jnp
xor
inc
cmp
jp
jbe
insl
pop
subb
lock
cmc
add
sub
mov
xor
fsub
fsubrs
repnz
rcl
xchg
bound
addl
mov
jb
jmp
xchg
jecxz
xor
pop
fcoms
inc
movsb
push
sbb
sti
push
movsb
cmpsl
push
int
jge
xchg
sub
fldt
iret
cmpsb
cmpsb
fisubrs
into
shll
inc
mov
cmp
cmc
loopne
jnp
in
cmc
rcl
je
xlat
insb
mov
mov
bt
in
test
adc
mov
stos
mov
jnp
shrb
pop
faddl
in
lahf
add
cli
call
into
pop
or
xchg
mov
sub
imul
jecxz
incb
xchg
cmpsl
pusha
lds
outsb
daa
sub
sti
pop
sbb
pop
push
arpl
leave
call
or
mov
aaa
addb
repnz
xchg
dec
sub
xchg
push
push
loope
cltd
loop
hlt
add
push
mov
out
in
cmp
ds
dec
pop
mov
aad
push
scas
or
sti
arpl
call
in
imul
sub
sub
xor
add
mov
cmp
mov
mov
inc
jne,pt
lahf
push
jp
and
sbbl
mov
in
dec
stos
into
arpl
ss
add
sub
fsubrs
fucomp
and
xchg
mov
xchg
xor
mov
test
addr16
lods
pop
inc
out
mov
push
xchg
mov
push
pusha
push
call
sub
jbe
inc
data16
push
mov
jne
xor
adc
lods
popf
fwait
adc
pop
xor
jae
daa
je
xor
popf
lea
pushf
fnstenv
pop
and
sub
jge
push
push
dec
fcompl
cmp
fwait
sub
loop
outsb
xchg
and
xchg
jge
fwait
icebp
dec
mov
pop
xor
pop
cmp
icebp
mov
push
mov
out
mov
jmp
or
pop
fdiv
les
out
inc
pusha
add
hlt
loopne
out
fsubrl
icebp
push
and
shlb
repnz
push
mov
clc
aad
dec
int
int
add
out
shlb
leave
daa
aaa
rorb
mov
pop
testb
insb
daa
pop
data16
xor
mov
cmpsb
clc
test
icebp
cmp
or
iret
add
test
out
sbb
hlt
inc
jp
xchg
push
sub
adc
cwtl
pop
or
adc
inc
mov
cmp
cltd
adc
popl
jbe
jo
mov
and
cmpb
lret
ret
adc
mov
xlat
jp
cmp
iret
sbb
xor
lods
mov
add
dec
shr
loopne
pop
jg
adc
inc
xchg
lods
mov
or
aaa
push
pop
test
inc
sbb
sub
out
jl
or
lret
imul
xchg
pusha
or
outsb
enter
cmpsb
fstpl
and
xor
dec
push
lds
loopne
fisttpll
push
mov
test
cmpsb
add
aad
and
mov
sbb
adc
push
in
fnstsw
loopne
ja
repnz
xchg
mov
push
mov
xchg
dec
dec
loop
sbb
in
dec
jmp
pop
push
mov
xchg
cmc
in
lock
pop
mov
xchg
xchg
call
rcr
adc
insb
int
es
xchg
sbb
aaa
or
ret
fnstenv
adc
mov
jb
nopl
lock
sub
pop
and
imul
sahf
push
stos
xchg
dec
jmp
scas
jbe
popa
mov
gs
js
fwait
or
inc
or
jge
push
aas
mov
or
sub
jo
cltd
ss
and
and
xchg
jb
testb
cmp
ret
nop
cmp
lea
mov
pusha
imul
lahf
jl
mov
shll
inc
movsb
fstps
in
cmp
and
mov
push
ficompl
aas
inc
sbb
bound
out
stos
pop
mov
jmp
xchg
in
cmp
fcmovne
sti
adc
sub
jg
loopne
jae
mov
mov
pop
adc
ja
cmp
mov
mov
lar
movsl
ret
ss
mov
xchg
mov
xchg
xchg
mov
inc
mov
dec
es
cs
mov
jae
and
ja
in
cmp
outsl
sbb
enter
inc
or
push
aad
inc
push
pusha
pop
jo
pop
inc
mov
movsb
jmp
inc
pop
xchg
movsl
je
pop
mov
lahf
dec
hlt
scas
cwtl
and
ljmp
ljmp
mov
fs
stos
lret
scas
das
movsl
dec
icebp
pop
out
mov
bound
sbb
lret
or
jne
mov
xchg
sbb
subb
andb
movsl
add
cmpsb
mov
mov
cld
shll
cmpsl
fs
mov
fcomi
dec
les
mov
cmpsl
lret
outsl
xor
bound
into
xor
or
js
xchg
xor
ja
scas
fsub
mov
shlb
cltd
sbb
incl
inc
enter
in
adcb
and
imul
popf
adc
xchg
orl
jnp
lea
popf
mov
in
inc
in
cmc
mov
rolb
sub
imul
add
lret
arpl
repnz
repnz
push
sub
jg
mov
and
into
ja
negb
out
pop
stos
std
add
mov
push
test
dec
arpl
iret
xor
sahf
dec
pushf
pushf
adc
jbe
lret
sarb
hlt
ret
dec
gs
filds
test
xchg
xlat
arpl
sbb
inc
sbb
or
das
xchg
int
push
mov
xchg
outsl
nop
lods
cli
inc
xor
fadds
ret
shlb
xchg
xchg
pop
or
test
test
test
repz
xchg
repz
mov
fidivrs
ljmp
jecxz
movq
jge
jns
int
mov
bound
sub
bound
or
mov
into
and
jmp
pop
sub
pop
dec
imul
leave
adc
dec
inc
shlb
fiadds
jae
mov
scas
out
jg
sub
iret
mov
jae
mov
mov
subb
xchg
xchg
adc
sub
les
push
dec
jne
xchg
cltd
inc
xchg
pop
std
fucomip
test
mov
pop
cmpsb
stos
mov
mov
lock
push
sub
pop
or
mov
push
das
push
inc
push
mov
arpl
call
mov
push
sub
loopne
inc
add
das
pop
lcall
mov
push
sbb
loopne
inc
add
ss
lods
mov
dec
add
push
mov
push
out
add
and
adc
mov
sub
movsb
dec
popa
mov
push
sub
jp
out
cltd
mov
xor
jg
jbe
mov
xor
mov
mov
inc
sbb
lret
ret
lea
jbe
movsl
cmp
xchg
pop
and
adc
or
sbb
mov
outsb
add
imul
xchg
add
xorl
lea
out
mov
test
je
in
push
outsb
push
mov
outsl
lods
mov
lcall
leave
lahf
or
mov
ss
and
xchg
scas
fldcw
outsb
test
mov
inc
lods
iret
in
andl
jp
test
pop
pop
mov
mov
mov
mov
hlt
je
mov
fnstenv
xchg
cld
addr16
sahf
ja
aas
jnp
cmp
push
sub
xchg
outsb
or
int3
xchg
mov
xor
sarl
je
fsts
mov
adc
or
stc
jmp
mov
enter
adc
mov
xchg
std
mov
mov
xchg
pop
pop
cmpl
mov
in
sarl
mov
into
loopne
cmc
cmp
add
cmp
cmpsl
out
xor
btr
or
mov
jle
fidivrl
decb
into
cmp
and
out
and
mov
sbb
int3
pusha
lods
or
pop
fnstenv
and
shr
out
fsubl
add
xchg
cwtl
sti
pop
mov
stc
sbb
lods
cmp
xlat
aas
xchg
out
ficoms
cmp
scas
imul
mov
pushl
decb
inc
cld
inc
stc
cmp
fcomps
lahf
movl
es
fsubs
mov
dec
lock
cmp
fcomp
cmp
in
iret
mov
call
and
dec
daa
inc
add
loop
into
or
pop
or
mov
popf
dec
lea
jmp
int
stos
inc
dec
and
roll
add
mov
pop
mov
cltd
int3
mov
inc
notl
sub
inc
je
or
cmc
mov
push
sub
idivl
cli
adc
test
in
cmc
mov
sbb
nop
pop
rcll
sbb
add
icebp
aas
out
xor
cltd
int3
push
push
adc
mov
adc
addr16
xchg
test
popf
sub
adc
sbb
and
sub
xchg
enter
fxch
add
pop
xor
ds
xor
xchg
enter
fldenv
mov
xor
hlt
fimull
dec
push
das
and
lods
outsl
pop
test
popa
stos
outsl
aas
fistpl
js
jno
sub
mov
call
movsl
ljmp
mov
fisubs
xchg
jo
imul
lds
pop
clc
and
hlt
xchg
push
push
cld
popw
cmp
xchg
test
mov
or
push
dec
mov
movl
sahf
sbb
xor
daa
pop
xchg
fistl
mov
divl
addl
daa
xchg
sub
inc
stc
js
in
push
push
push
push
add
fwait
mov
fidivrl
push
dec
ja
cmc
stos
ja
lock
push
adc
aaa
sbb
data16
push
lds
inc
or
outsb
insl
mov
movsb
movsl
movsb
and
rcll
jno
cmc
fbld
xchg
icebp
lret
sbb
cmp
out
les
jmp
loop
bound
adc
fldl
je
mov
push
cltd
jbe
cmp
out
mov
pop
mov
add
jb
pop
mov
lods
pop
and
cmp
fcompl
mov
lods
jno
mov
pop
cmp
cmp
mov
push
leave
sbb
arpl
sub
xlat
pop
loope
aas
pop
fbstp
lods
rorl
xchg
test
cmpsb
gs
inc
jb
lock
mov
and
fwait
mov
mov
test
ljmp
xchg
xor
repz
int3
dec
pop
and
in
out
pushf
push
addr16
xchg
pop
lret
jnp
add
lret
push
jmp
in
mov
test
lahf
push
add
int3
lods
popl
jg
sarb
mov
push
inc
movsl
add
repz
mov
fldcw
xchg
cwtl
jns
xchg
je
out
sbb
push
sbb
xchg
rcr
cmpsl
jmp
xchg
addr16
sti
pop
sbb
in
popa
repnz
lahf
out
sub
mov
into
aad
xor
inc
ret
int3
lcall
sbb
scas
notb
xor
jle
mov
push
call
fmull
jp
repz
pop
xor
sbb
sbb
mov
sti
shl
mov
mov
xchg
nop
nop
xor
mov
je
aas
xchg
dec
ret
inc
or
jecxz
xchg
nop
inc
ss
inc
dec
aam
clc
push
adc
xchg
mov
sbb
mov
pop
mov
mov
mov
ret
ret
scas
mov
and
xlat
ret
xor
xchg
cwtl
xchg
add
mull
xchg
arpl
cmp
mov
addr16
pushf
cmp
test
xor
push
and
dec
jl
push
pop
subl
jnp
ljmp
dec
fstpl
mov
add
pop
inc
xchg
cmp
pop
fldenv
fdivl
pushf
pop
sti
mov
add
test
f2xm1
push
or
adcl
aaa
pop
xor
jae
mov
and
out
sbb
sbb
xchg
int3
xor
xchg
add
sbb
pslld
sub
pop
inc
sub
jnp
and
xchg
mov
push
jb
scas
cmp
cwtl
pop
add
jnp
pop
inc
and
cmp
inc
cltd
adc
push
mov
adcb
mov
lcall
cwtl
jle
dec
rorl
fwait
addr16
push
dec
aaa
sub
dec
push
testb
test
jnp
inc
arpl
loop
and
int3
aad
cmc
mov
push
mov
mov
insb
or
div
icebp
and
lock
jge
mov
cmp
jae
add
out
jb
jp
mov
xor
xor
pusha
das
inc
adc
lods
mov
lahf
and
push
sbb
sbb
jne
xor
inc
loopne
jle
aam
in
push
dec
rcll
mov
hlt
dec
xchg
inc
ljmp
lods
cmp
inc
jnp
scas
or
xchg
loop
out
push
and
cmpb
jg
adc
ficompl
scas
inc
xor
das
mov
pop
test
mov
flds
inc
aas
jp
jge
std
sbbl
jb
or
rorb
mov
cmpsb
ja
in
mov
dec
push
jae
sub
cmp
jp
iret
jge
xchg
jo
das
ja
and
cmp
mov
inc
jle
pop
scas
mov
cli
les
pushf
aas
pop
mov
or
stos
aaa
rolb
cmpsb
fisubrs
and
fistpll
inc
cltd
add
lock
or
xchg
out
inc
out
mov
xchg
das
adc
testl
int
cld
cmpb
into
mov
add
ret
jp
out
mov
cmpsb
xor
add
mov
xchg
adc
pop
lods
pop
xor
cld
sub
ret
int
bound
adc
sbb
push
add
ja
and
xlat
jno
out
xor
xor
push
out
addl
pushf
dec
andl
mov
inc
movsl
dec
jo
fucomi
frstpm(287
in
push
dec
int3
out
push
jno
xchg
jbe
lds
std
hlt
cmp
stos
adc
jne
sbb
test
sub
inc
data16
sahf
ja
xor
sub
sbb
sub
or
adc
ja
xchg
mov
or
orb
cmp
push
loope
inc
jo
or
std
ret
test
fcomp
jo
dec
js
add
xor
popf
inc
pusha
inc
pushf
xlat
lret
scas
imull
sbb
mov
popa
mov
movsl
or
cltd
jecxz
lcall
adc
inc
jbe
cltd
pop
inc
movsl
out
cltd
sbbb
sti
test
add
push
cmpsl
mov
mov
xor
pop
inc
jle
mov
int
jmp
test
cmpb
xchg
mov
cmp
and
mov
inc
dec
inc
mov
pop
push
ds
loope
mov
sub
out
dec
pop
dec
and
outsb
sti
shll
loopne
lcall
xor
inc
leave
sbb
push
lret
sub
hlt
jl
dec
shrl
popf
xor
cmc
shrl
lods
lahf
sub
daa
jo
int
shlb
lea
cmp
call
pop
lods
insl
aad
sub
add
mov
adc
push
pop
or
clc
jb
arpl
aam
add
jle
or
and
test
add
into
imul
dec
adc
aas
adc
xor
fmuls
sbb
pop
jl
sub
push
inc
inc
pop
daa
pop
cmp
popa
nop
mov
call
popa
dec
sub
mov
xlat
js
inc
insl
cmc
cmp
addl
gs
or
outsl
jnp
dec
or
cmc
push
fmull
loopne
jbe
lods
fbld
xchg
pushf
xchg
ret
and
repnz
imul
enter
jp
mov
popl
xchg
mov
fistpll
mov
lahf
les
push
dec
movsl
imul
aaa
push
add
add
mov
rol
xchg
cltd
popa
popa
clc
inc
pushf
repz
outsb
idivl
mov
and
scas
sahf
pop
lea
mov
fdivrl
xchg
xchg
lea
dec
leave
xchg
sbb
aas
mov
fwait
repnz
jmp
jle
in
mov
push
or
and
adc
jbe
es
lods
add
push
push
mov
in
dec
inc
stc
mov
arpl
sbb
insb
xchg
jle
in
ljmp
cld
daa
cli
cmpsl
xchg
jb
in
lret
in
adc
add
inc
xchg
outsb
ret
add
fisttps
cwtl
mov
push
cmp
sub
cmp
mull
jbe
adc
insl
push
std
pop
sub
jge
repz
pushf
fidivrl
test
mov
jmp
test
adc
dec
cmp
dec
dec
or
pop
xchg
pop
sub
repnz
cli
arpl
xchg
mov
ss
sti
sub
out
xor
sbb
mov
jg
mov
insl
leave
outsb
out
ret
xor
arpl
rcl
xor
ret
mov
inc
rorb
lret
pop
aaa
outsb
lret
cld
push
jmp
xchg
mov
gs
cld
clc
push
inc
dec
xor
cltd
sbbl
ret
loope
fsubr
adc
cli
jmp
loop
test
in
ja
push
push
filds
add
orb
dec
push
mov
shrl
and
sbb
mov
in
movsl
iret
inc
cmp
lahf
test
mov
jl,pt
adc
out
mov
les
or
dec
xchg
jnp
jmp
cmp
stos
daa
xorb
shr
leave
mov
or
fsubs
shrl
inc
arpl
push
sub
aad
and
or
int3
add
lahf
fdiv
xchg
push
sbb
icebp
mov
sbb
or
addr16
sub
fsin
cmpsb
xchg
cltd
jnp
test
inc
sub
jmp
xchg
in
pusha
scas
inc
in
shll
push
or
add
inc
mull
sub
add
add
sub
push
mov
dec
adc
imul
lcall
popa
add
mov
or
ret
testb
sub
mov
lea
divl
sub
stos
gs
mov
ret
mov
aaa
mov
arpl
iret
push
and
fidivs
jp
lcall
mov
inc
outsb
cli
xchg
add
adc
lea
jne
xchg
lret
out
jne
das
dec
lret
leave
sbbb
test
mov
fidivrl
out
xchg
mov
push
mov
movsb
mov
fimull
pop
dec
jbe
and
es
sbb
adc
enter
lock
aam
xchg
stos
mov
jo
pop
sub
push
adc
roll
subl
add
xor
xchg
popa
adc
fs
rcll
adc
dec
loopne
cmp
mov
rcr
mov
popa
fwait
hlt
sbb
or
adc
jp
cmc
sbb
push
pop
hlt
pop
push
pop
mov
sbb
repz
jl
arpl
push
xchg
sub
stos
fs
mov
pop
xchg
fdivs
clc
aaa
sbb
mov
subl
push
xor
cmp
push
jge
lahf
cmc
sahf
inc
lods
push
pop
sub
or
mov
lock
and
push
xor
jge
sbb
int
add
fcmovnbe
push
sub
pop
lea
ja
movsb
and
dec
mov
add
rclb
int
movsb
mov
aad
sbb
out
sub
loopne
test
mov
cmp
cmpl
cmpsl
out
mov
push
push
adcb
sub
insb
scas
stc
sub
and
cmp
les
mov
mov
add
fsubrp
scas
testl
jns
fdivs
sbb
sub
push
outsb
jg
js
das
rorb
leave
shr
loope
sub
mov
ret
jle
jo
add
or
xor
sbbl
arpl
sub
pop
in
adc
xchg
call
mov
cmp
es
negl
iret
pop
outsl
mov
inc
pop
fs
inc
dec
mov
jg
or
aaa
jmp
mov
mov
imull
dec
xchg
and
mov
xchg
xlat
dec
inc
add
pusha
xchg
aaa
jp
sbb
scas
jle
or
jno,pt
and
add
shl
dec
scas
in
movsb
mov
sti
dec
les
and
loop
fadd
in
and
fsub
pop
or
js
xchg
enter
jae
lock
adc
rcrb
xor
mov
mov
sub
cmp
aam
js
addr16
notl
loop
lahf
js
push
leave
and
test
div
aaa
sub
orl
add
out
cmp
dec
xchg
fwait
push
les
xchg
sub
sub
xor
std
push
cmp
jno
cld
push
or
xchg
pop
xor
pop
mov
push
pop
es
xor
xchg
mov
cmp
fwait
mov
and
jno
xchg
mov
bound
pop
lods
adc
daa
jmp
clc
pop
orb
les
int3
bound
xlat
pop
dec
xchg
push
cmpsb
leave
cld
push
and
push
shlb
loop
movsl
stos
mov
pop
movsb
cltd
push
cld
mov
adc
mov
dec
outsl
subb
sub
fwait
popw
popa
dec
cmpsb
stc
inc
adc
and
orl
movsl
stos
or
jg
cmp
adc
cmc
sub
and
or
xor
xchg
repnz
mov
sbb
aas
repz
fstpl
sti
mov
dec
rorl
or
mov
test
pop
inc
xor
cmpsl
and
and
imul
xchg
add
fs
jae
cmp
cli
pop
popl
sbb
addr16
mov
in
jo
push
or
fstl
jne
push
cmc
or
lock
ja
imul
mov
ja
xor
adc
mov
xchg
jnp
cmp
out
loopne
aaa
outsb
mov
pop
pop
dec
lahf
jle
and
cwtl
inc
ret
cld
mov
fcompl
or
dec
adc
ljmp
lret
pop
leave
sbb
lds
out
xor
add
push
cwtl
mov
adc
pusha
lret
xor
pusha
inc
xchg
das
jne
gs
add
add
mov
pop
add
mov
out
xor
xor
dec
insl
cmpsb
mov
test
dec
and
cmp
lahf
jle
jecxz
adc
push
sub
mov
in
dec
mov
lods
test
aas
cmp
shr
jne
mov
cmp
jb
sar
dec
add
and
inc
icebp
call
xlat
ret
pop
call
repnz
sbb
out
lea
inc
mov
sbb
test
cmp
outsl
adc
pop
dec
push
mov
xor
loopne
jmp
int
data16
ja
fidivrl
std
fldl2t
push
sub
mov
sbb
rclb
pop
dec
or
cmpb
mov
sub
inc
arpl
push
out
pop
or
jbe
xchg
mov
cwtl
scas
sub
into
sbb
inc
cmp
or
xchg
ror
adc
pop
mov
mov
mov
dec
pop
pusha
inc
cmp
mov
pop
clc
mov
stos
clc
adc
adc
xor
or
cmp
stos
mov
lret
sbb
push
add
mov
adc
sub
xchg
adc
insl
push
pop
icebp
fdivrp
cmp
push
iret
mov
mov
jnp
adc
sub
clc
pop
jmp
clc
cmp
dec
cli
je
push
js
xor
repnz
stos
jnp
ror
imul
pop
xchg
cwtl
hlt
pop
push
push
dec
mov
repnz
cmpsl
add
xor
mov
xorb
xchg
xchg
nop
mov
inc
sbb
xchg
movsb
in
scas
add
out
jmp
jle
mov
mov
testl
cmc
xchg
mov
xchg
or
mov
jmp
sub
xorl
push
mov
ds
push
sti
lds
mov
aad
sahf
xchg
xor
subl
das
xor
mov
mov
arpl
and
inc
mov
xor
cmp
jnp
cs
mov
mov
inc
inc
jnp
pusha
mov
add
or
dec
mov
fadds
add
push
movsb
xchg
jo
test
cmp
ret
mov
cmp
fcmove
mov
sub
ret
sbb
adc
mov
add
out
mov
lea
sub
shrb
xor
imul
xor
dec
es
cmpsb
imul
push
fs
ret
cmc
mov
lea
mov
lods
jmp
scas
ja
loop
in
jg
call
faddl
imul
movswl
adc
inc
mov
lahf
popf
dec
filds
das
sub
sub
lods
dec
and
or
add
nop
cmpsb
shr
std
jb
xor
or
xchg
nop
jnp
repz
push
jb
push
push
lea
jnp
cmp
std
mov
nop
inc
es
ja
mov
repz
pop
scas
sbb
subb
and
es
mov
add
dec
or
sahf
cmp
mov
push
ja
mov
jae
pop
cmp
xor
icebp
lods
mov
lods
dec
jge
mov
inc
mov
push
cmp
ljmp
dec
addb
push
mov
jb
xor
cmpsb
lock
int
cmp
jmp
mov
adc
xlat
pop
iret
jo
stos
fnstenv
fisubrs
test
es
enter
inc
outsb
out
enter
in
gs
sbb
xor
dec
int3
mov
and
data16
ss
call
or
imul
lods
xchg
or
pop
cs
js
mov
cmc
adc
shr
pushf
rclb
jbe
mov
push
mov
xlat
movsb
inc
pop
inc
mov
adc
leave
add
jno
or
into
cltd
push
orb
out
push
xchg
xchg
fnstcw
in
enter
sahf
push
mov
es
movsb
out
dec
cmpsb
je
inc
roll
stos
dec
inc
imul
or
jne
push
dec
push
mov
cmp
es
test
enter
add
pop
out
push
cmpsb
enter
fwait
pop
xchg
sub
sub
enter
cwtl
movsb
mov
add
stos
cli
rolb
mull
fldz
outsb
out
jno
shrl
cmpsb
lcall
fwait
jo
ds
popa
imul
xchg
pop
bound
push
cmpsb
adc
push
add
das
int3
xor
fldenv
rorl
inc
push
std
int
cld
dec
rcrb
lea
cltd
out
fildll
lret
and
sbb
pop
pop
xchg
ss
sbb
insl
lds
or
cli
inc
mov
sub
inc
inc
jecxz
xor
ret
flds
outsb
loope
sub
inc
sbb
or
and
inc
dec
test
pop
scas
sub
mov
sbb
lds
dec
push
jmp
xor
mov
sbb
push
sub
test
adc
data16
stc
add
cmpl
decl
push
test
push
cmpsl
mov
jge
adc
mov
sub
lods
dec
mov
jl
into
std
scas
mov
repz
cld
out
jle
jno
dec
movsb
int
divl
enter
mov
stos
push
movsl
mov
inc
inc
testl
shll
jbe
xor
stc
inc
cmp
cmp
aas
pop
ja
test
fmuls
in
add
mov
xor
push
lods
xchg
or
push
jnp
imul
sbb
add
add
sub
loope
aad
mov
test
push
sti
roll
into
jae
xchg
xor
in
sbb
push
fwait
push
mov
adc
loop
or
xor
jo
rorb
test
cmpsb
out
iret
fidivs
pop
or
inc
cmp
xchg
push
gs
lea
cmp
jge
aad
or
repnz
or
cmpsb
outsl
fidivl
into
mov
xlat
or
jne
xchg
mov
fnstcw
bound
stos
and
sahf
jns
jae
jnp
mov
je
pop
or
or
xchg
sub
ds
sub
cmpsb
lahf
dec
nop
xor
push
or
iret
xchg
rolb
adc
or
sbb
rcr
mov
inc
jb
hlt
int3
ja
rcll
push
xor
adc
xchg
subb
xor
ljmp
lcall
push
insl
sub
push
sub
imulb
fs
push
push
sbb
pusha
pop
or
mov
loop
repnz
and
push
insb
mov
js
xchg
pop
movsl
or
pop
iret
scas
pop
rorb
cmp
mov
lods
mov
loopne
mov
sbb
std
jo
mov
dec
imul
int
push
xor
dec
aam
rclb
adc
in
out
xor
js
into
stos
aad
mov
and
fwait
xchg
out
lret
sbb
jge
popa
movsl
xchg
sub
lods
mov
outsl
or
lea
movsl
xchg
rorl
dec
or
popf
sbb
pop
cmpsb
push
or
jbe
pop
shl
popf
xchg
push
cld
sub
jb
in
ret
sub
pusha
cmp
aas
and
lcall
xchg
xchg
or
test
mov
loopne
or
mov
pop
movsl
mov
test
jecxz
sub
loopne
rclb
jg
mov
test
adc
push
dec
pushf
cmp
mov
fwait
cmp
mov
or
sub
jno
xchg
ljmp
test
lcall
sti
inc
adc
mov
hlt
movsl
xor
pop
jmp
pop
pop
fdivrs
fnstsw
mov
jmp
jl
jg
loop
or
mov
repz
xchg
loope
ret
aaa
add
shll
outsl
or
leave
test
jp
mov
jns
jmp
jl
out
mov
push
lret
dec
aad
cmpsb
call
fidivs
adc
test
aas
in
push
and
fcmovne
hlt
pop
mov
mov
ret
popa
cmpsl
out
or
xchg
sub
iret
push
xchg
mov
bound
enter
int
dec
xor
stos
addr16
and
out
mov
pop
rolb
cmp
pop
mov
push
adc
push
loope
xor
lock
jne
push
dec
inc
mov
sar
bnd
loope
mov
jne
dec
or
jne
flds
lds
ja
je
mov
and
adc
popf
xchg
adc
std
testb
jne
or
lods
addr16
or
sti
fwait
dec
fs
adc
aad
aad
xchg
mov
and
repnz
inc
cld
out
inc
push
loope
rcr
mov
fdivrl
inc
mov
mov
inc
or
mov
rcrl
loope
fsts
fimull
loopne
aam
xchg
adc
pop
leave
clc
aam
in
and
mov
je
pop
jb
mov
push
out
call
adc
xchg
pop
in
or
test
out
sub
outsb
xlat
outsb
outsl
push
pop
jno
es
sub
cmp
mov
movl
jne
sbbl
xor
adc
adc
mov
add
mov
loope
adc
lock
add
fisttps
cmpsb
decb
jne
data16
imull
and
xor
and
mov
cmp
iret
stos
adc
sub
cmp
and
cld
dec
inc
es
shll
punpckhwd
pop
ret
dec
gs
push
jmp
mov
adc
lods
sub
mov
sbb
sbb
hlt
test
test
cwtl
mov
jnp
jmp
cwtl
jmp
rcll
arpl
jge
hlt
mov
mov
or
jne
das
jae
addl
sub
xorb
xor
sbb
mov
loop
aaa
mov
insl
das
cwtl
ffreep
mov
or
xchg
push
iret
add
pop
mov
or
fidivs
test
xor
jmp
mov
imul
push
loope
jle
out
lods
mov
jo
ds
frstor
test
cmpb
cmpsb
insl
mov
push
push
mov
fnstenv
adc
scas
add
outsl
cs
cmpb
mov
cmp
addr16
push
mov
out
out
pop
test
iret
jge
insl
pop
and
mov
out
icebp
imul
dec
enter
xchg
dec
jecxz
sbb
fwait
xchg
mov
push
dec
push
out
faddp
inc
rolb
fwait
std
out
xchg
cmp
pop
mov
adc
push
jle
movsl
popf
xor
inc
push
aas
sbb
dec
lret
push
mov
xchg
es
jns
sbbb
aad
sub
cmp
inc
testb
jno
fwait
andl
adc
div
jnp
xor
movsb
xchg
addr16
push
or
xchg
pop
lea
dec
add
js
addr16
pushf
fiaddl
loope
and
xor
enter
mov
in
jae
and
call
sbb
and
fistl
and
mov
dec
and
leave
mov
out
sbb
jp
mov
push
mov
pop
mov
mov
test
push
les
push
push
lds
mov
fs
pop
mov
cmp
xor
cmp
lret
stos
sub
jbe
sbb
pop
xor
sub
cmp
push
dec
insl
mov
subl
in
int
pop
xchg
lods
xchg
dec
cld
addl
cld
mov
add
ds
and
jb
pusha
cli
stos
shll
mov
xchg
mov
loop
stos
mov
push
xchg
into
add
clc
sub
sbb
cmpsl
adc
cltd
insl
dec
mov
inc
pop
mov
push
sub
ja
add
fmull
mov
andb
sbb
xchg
sahf
arpl
out
mov
xchg
mov
dec
std
and
sahf
test
dec
test
xor
mov
fs
les
jl
jbe
gs
push
fwait
pop
sbb
adc
adc
std
inc
mov
mov
clc
sbb
push
jnp
or
test
sub
or
sub
cltd
push
inc
unpckhps
dec
pop
and
inc
mov
pop
daa
sub
cld
cmp
jecxz
clc
jo
aas
out
push
xchg
jbe
loop
add
pop
sub
test
pusha
push
popf
ret
mov
lods
push
in
test
xchg
and
lea
movsb
call
cmp
mov
sahf
incl
push
or
mov
fistpl
mov
push
sbb
insl
fdivl
push
loop
addl
and
push
mov
in
test
or
mov
mov
sbb
and
pop
inc
mov
mov
sbb
ss
pop
hlt
pop
cmpsb
out
popa
aam
out
xor
mov
mov
fisubl
sbb
push
andl
cmpsl
fisubrs
in
add
les
dec
js
inc
inc
sbb
popf
sbb
dec
rorl
stc
jno
iret
dec
mov
push
jmp
in
aad
pop
or
cmc
loop
mov
jo
in
movsl
inc
inc
outsl
push
or
xchg
shll
int3
sbb
rcr
xchg
cmp
sub
movsl
add
cmpsl
push
adc
push
and
aas
gs
pop
mov
into
out
cmovns
aam
push
cmp
push
jae
je
adc
or
mov
loopne
inc
cmp
imul
fs
daa
jo
dec
mov
fisubl
cltd
and
sbb
jnp
popa
xor
lret
inc
fidivrl
shlb
pop
mov
mov
mov
xchg
call
out
pop
cmp
jae
test
jno
dec
movsl
add
je
mov
pop
rcll
stc
aaa
test
fisubrl
lret
mov
pop
mov
rcrb
int
pushf
dec
mov
fcmovu
adc
cmp
adc
js
and
orl
and
or
xlat
and
and
cmpsl
xchg
mov
mov
mov
int
mov
mov
sti
rcl
pop
adc
push
imul
dec
add
push
cmp
xlat
push
shr
sub
xchg
loop
cmp
or
mov
xchg
orl
dec
andl
into
lahf
push
push
fcomps
add
mov
sbb
iret
inc
lcall
outsb
aad
orb
popf
pop
lret
jle
int3
cmpsb
mov
xor
fimuls
out
adc
dec
orl
jmp
sbb
scas
shlb
fsub
stos
movsb
call
mov
and
mov
daa
sbb
xchg
cmp
repz
lock
cmp
movsb
les
roll
add
inc
push
mov
dec
push
mov
cmp
push
mov
into
xchg
push
scas
xor
xchg
inc
enter
loope
ja
repz
fidivrl
adc
inc
jne
xor
aaa
mov
int3
sbb
mov
iret
mov
and
cmp
mov
popa
lret
cli
cmp
inc
out
jmp
loopne
hlt
negb
fdiv
or
and
jg
add
sbb
push
sahf
xor
sub
push
test
scas
nop
sbb
roll
add
sahf
pop
addr16
cmpsb
add
lods
test
xchg
cmp
xchg
loope
mov
adc
scas
mov
cli
mov
jmp
adc
xor
pop
mov
adc
cmp
scas
subl
jp
jbe
xchg
bound
adc
push
lret
in
mov
lretw
movsb
push
adc
int3
xlat
jns
js
mov
int
icebp
pop
xor
pop
popf
fidivl
arpl
and
push
pop
cltd
push
jmp
add
push
jno
movsl
in
popf
jne
adc
pushf
sub
mov
test
rorl
sbb
fadd
fistl
ret
mov
jp
arpl
xchg
push
js
dec
mov
sti
test
test
mov
ds
loope
jnp
mov
mov
repnz
leave
ror
in
jg
pop
shrb
pop
imul
inc
or
pop
xor
ja
fmul
xchg
ljmp
xchg
or
das
push
and
fs
roll
addr16
lods
out
loopne
jp
lret
mov
push
inc
rcll
lret
in
cmpsl
add
je
icebp
push
jb
cmp
popf
inc
xchg
mov
test
loop
dec
cli
lahf
dec
inc
rcl
sub
cmp
inc
pop
movsl
mov
hlt
push
addr16
dec
loop
je
ja
pop
xchg
push
push
sbb
outsl
inc
xchg
int
pop
bound
lds
mov
loop
psubusb
bound
or
data16
out
jns
ds
out
jg
sar
lock
clc
cmc
fwait
mov
inc
mov
inc
or
ja
cmp
xchg
inc
fcmovbe
pop
pop
adc
std
popf
imul
push
jge
xchg
daa
jle
dec
fwait
mov
cmpsb
jnp
cmc
dec
shrb
push
filds
shl
xchg
mov
in
inc
fsub
mov
lock
sub
je
mov
pop
pop
pusha
push
lds
std
dec
xchg
inc
inc
popf
ds
adc
cmpsl
negb
xor
stos
jb
stc
adc
fisubs
xchg
jle
insb
ret
lret
push
cltd
cld
scas
push
scas
repz
arpl
sti
fwait
repnz
out
mov
frstor
push
pop
nop
cmp
cmpl
mov
jno
jne
mov
cs
lcall
les
in
stos
adc
or
cmp
mov
iret
pop
sub
sbb
sub
jg
mov
and
jbe
sub
jle
out
mov
int
pusha
mov
and
lods
xor
repnz
inc
in
andb
loop
and
cmp
cmc
loop
cmpsl
mov
jns
push
xchg
vpsrld
adc
fwait
rolb
dec
xchg
mov
xor
into
xchg
jns
movsl
mov
movsl
ror
sub
sbb
lock
push
mov
loopne
dec
scas
or
sbb
je
in
dec
clc
add
sub
mov
out
push
or
jl
cld
xor
jg
pushf
xor
aad
fwait
int3
cmp
addr16
frstor
sub
popf
stos
dec
add
psubd
loop
mov
sub
cli
add
fcmovb
cmpsb
rclb
imul
fsts
mov
aas
mov
popa
fstps
inc
dec
mov
sub
mov
pop
adc
mov
pushf
inc
into
push
mov
out
pop
movsl
jle
ss
mov
mov
xchg
mov
lcall
bound
imul
mov
add
in
cld
adc
pop
and
filds
dec
xor
add
sub
insl
mov
scas
jo
aam
pusha
out
sub
loopne
add
fnstenv
ret
rcll
mov
xchg
xor
mov
xchg
lods
iret
xor
or
pop
cmp
adcb
add
inc
cld
pushf
sbb
fsubrl
stos
shr
adc
out
ds
and
rorl
mov
mov
jnp
dec
dec
dec
xor
in
movsl
repz
dec
notl
out
xor
dec
xor
in
addr16
loopne
and
ja
sub
nop
xchg
jle
fwait
xchg
sbb
xchg
pop
mov
insl
push
sbb
sti
sub
pop
addr16
sbb
es
iret
cltd
shlb
xor
jp
and
sub
jno
movd
scas
arpl
fwait
arpl
fistpll
mov
inc
das
xor
repnz
int3
das
mov
inc
pop
pop
lret
lods
jecxz
sbb
mov
jmp
jle
and
cltd
fisttpll
sahf
xchg
and
jmp
push
loop
jns
mov
call
cmp
add
dec
push
dec
xchg
fsqrt
sbb
rolb
xor
xchg
sbb
inc
add
cmpl
stc
sub
lret
das
aad
adc
stos
movsl
sub
lret
fnstenv
add
mov
out
addl
enter
movl
lock
sub
mov
pop
cmp
data16
fnstenv
sub
outsb
lahf
call
testl
fimull
pop
aam
push
lret
mov
aaa
popf
mov
and
ffreep
addr16
fisttpl
loop
mov
fs
cmpb
rclb
aad
ret
add
add
subb
mov
cli
mov
data16
jmp
ljmp
or
mov
scas
div
push
ss
cmc
mov
insb
adc
sbb
add
adc
aaa
xchg
movsl
fidivs
movsl
stc
lock
lahf
in
push
inc
and
inc
mov
ret
or
push
jle
outsb
add
lods
dec
and
clc
scas
mov
adc
fmuls
adc
mov
jl
mov
jmp
pushl
jne
ss
iret
iret
insb
lds
and
xchg
inc
mov
dec
shlb
or
xchg
dec
mov
out
xchg
out
stos
mov
dec
sbb
mov
rcrl
sbb
inc
mov
test
js
movsl
aas
add
xor
xlat
mov
int3
stos
icebp
inc
aaa
rep
mov
out
fwait
dec
push
mov
sti
movsb
rclb
xor
rolb
sub
xchg
pop
push
int3
dec
das
xor
push
inc
dec
dec
in
mov
or
xchg
jns
shl
dec
adc
int
xchg
aad
sbb
inc
inc
pop
jle
and
ds
movsb
arpl
stc
sub
push
testl
jp
jg
push
cmpsb
fistps
cmpsl
mov
adc
jle
sti
loope
lcall
fsubrp
xor
repnz
xor
movsl
loope
sbb
or
adc
mov
fidivl
fucom
cs
stos
popa
sub
outsl
mov
add
in
das
inc
mov
inc
push
jmp
fwait
pop
iret
sbb
lods
cs
push
jo
inc
xchg
out
xchg
adc
dec
lahf
clc
lea
sbb
or
js
bound
sbb
mov
xorb
xchg
cmc
add
pop
stos
pop
xchg
jmp
mov
and
mov
mov
cmc
mov
inc
and
sub
mov
lds
cmpsl
pusha
xor
out
scas
pop
jge
and
pop
fadds
sbb
pop
negb
lock
pop
push
and
inc
ljmp
push
xchg
std
mov
out
jmp
jns
mov
fists
push
or
xor
not
dec
cmp
sbb
cld
sarl
cmpsl
shll
xlat
aaa
inc
mov
arpl
shrl
popf
cmp
sahf
xchg
mov
adc
mov
mov
or
repz
mov
push
and
nop
mov
cs
push
rol
push
sub
inc
add
lds
arpl
in
iret
mov
dec
out
mov
xchg
lret
repz
and
bound
out
in
cmpb
lcall
jne
inc
sub
pop
jle
mov
adc
loopne
push
js
in
add
cs
sub
bound
fcompl
push
mov
shll
or
rclb
xor
icebp
fnsave
jecxz
and
pop
sub
cltd
dec
mov
mov
adc
inc
cmp
pushf
mov
dec
mov
dec
pop
rcrb
jno
and
std
adc
es
sar
jl
adc
xchg
call
mov
sub
push
fldl
cmpsl
push
sbb
cpuid
addl
dec
cltd
out
inc
fwait
ud2
out
neg
xchg
xor
adc
cmp
jnp
sub
andl
sbb
out
adc
sbb
cltd
cmpsb
cmp
outsl
pop
lds
sahf
jnp
cmp
hlt
push
and
ret
mull
dec
frstor
sub
sbb
outsb
lahf
xor
test
pop
leave
cmc
lea
mov
pop
idivl
bound
xchg
nop
and
push
shl
das
sub
inc
mov
stos
hlt
lret
clc
xchg
subl
cmp
cltd
jecxz
mov
lret
push
xchg
dec
lret
dec
jecxz
adc
dec
pushl
fdivr
int
jne
in
cmpsl
inc
inc
inc
fnstsw
xchg
jb
xorb
or
mov
push
dec
dec
negl
xchg
mov
or
pop
jne
mov
mov
into
ds
mov
outsb
or
nop
mov
sbb
xor
sbb
cmp
jns
sbb
fs
movsb
push
or
dec
cltd
sub
fisubs
inc
mov
daa
mov
outsb
lods
push
insb
rolb
leave
jbe
fisttps
pop
inc
push
mov
pushf
add
clc
push
push
inc
add
pop
mov
pop
sarl
push
arpl
cltd
lahf
js
mov
enter
mov
in
pop
ret
jnp
and
popa
mov
push
popf
mov
in
adc
sbb
insb
mov
fchs
cmp
fs
shrb
arpl
sahf
fstl
cmpsl
sub
dec
in
sbb
jnp
movsb
popa
jle
pop
push
lods
rclb
jmp
subb
inc
ss
in
cld
lods
pop
test
test
mov
or
jnp
movsl
js
push
sub
idiv
sub
aaa
mov
push
loopne
mov
dec
mov
in
adc
popa
pop
dec
shlb
add
ret
jo
add
jp
push
mov
filds
xor
out
mov
cli
test
xchg
flds
sub
popa
mov
xor
jle
sbb
stos
dec
jnp
mov
and
mov
mov
rolb
xchg
lret
xchg
imul
inc
add
xor
mov
push
movsl
cld
frstor
xchg
ret
popl
mov
scas
and
push
push
inc
xchg
daa
pop
inc
aad
out
jp
mov
andb
xlat
subl
xchg
inc
push
jae
int3
or
ret
arpl
scas
test
mov
mov
cmp
sub
fwait
jmp
or
mov
pop
lock
push
cmp
std
out
aas
mov
fmulp
loop
mov
out
mov
repz
hlt
sub
push
push
sbb
lds
in
ja
mov
mov
and
pop
cmpsl
decb
incb
sahf
hlt
cmpsb
pop
push
aas
pop
ss
icebp
pop
and
fldl
mov
popf
fdivrl
dec
xor
cmp
or
push
mov
stos
cltd
test
jbe
fdivl
jmp
cmp
imul
stc
mov
mov
cmp
pop
hlt
mov
dec
and
jno
loopne
test
mov
lret
mov
mov
outsl
xor
cli
test
fwait
mov
aam
lcall
mov
adc
out
cmpsl
push
inc
mov
push
mov
test
inc
insb
loop
adc
adc
pushf
pushf
je
notb
mov
xor
or
jecxz
mov
in
dec
stos
mov
xchg
sbb
pop
ja
in
push
js
test
js
and
pop
push
outsb
int3
lcall
mov
jg
pusha
imul
sub
mov
insl
fldenv
mov
addr16
mov
push
mov
sub
ret
xor
jo
cmp
mov
push
add
icebp
cmp
adc
inc
ret
loopne
dec
pushf
aaa
inc
dec
inc
loopne
jmp
aad
cwtl
xchg
cld
add
ficomps
fiadds
dec
dec
jmp
fistl
inc
xchg
inc
inc
test
cli
xchg
jns
cmpsb
movsl
mov
inc
ret
add
int
cmp
xchg
xchg
lret
pop
arpl
in
or
leave
pop
xchg
fsubs
sbb
loopne
add
mov
cmp
push
adc
shll
loop
sub
jns
push
lahf
dec
pushl
or
loope
sarb
inc
pop
scas
push
dec
lret
inc
addl
push
xor
jne
pop
and
sahf
test
inc
xchg
xchg
xlat
ret
xor
sbb
mov
xchg
mov
xor
pushf
scas
and
mov
adc
cmp
push
pop
mov
testl
mov
cwtl
jle
and
mov
outsl
pop
lret
mov
mov
dec
icebp
mov
mov
or
inc
mov
ret
das
movsb
lret
xor
in
lds
adc
jae
loope
jb
xchg
adc
in
scas
inc
dec
cmc
lea
nop
cld
jecxz
inc
mov
mov
push
xchg
sbb
mov
mov
pusha
je
jg
arpl
mov
jae
mov
pop
push
movl
sti
mov
and
xchg
jl
inc
or
mov
jo
rcr
xchg
data16
clc
lds
enter
xchg
xchg
fcoml
repz
push
lock
pop
inc
pop
lods
jle
dec
push
cmp
sub
add
dec
shll
idivl
movsl
in
es
lret
jnp
lahf
scas
in
adc
mov
lea
xchg
es
mov
cmp
pusha
or
push
cs
sbb
popf
jns
dec
xor
and
jle
ret
and
push
dec
test
adc
and
sbb
loop
mov
es
cmp
mulb
pop
repnz
ljmp
adc
shll
das
mov
aas
or
xchg
or
xchg
sbb
dec
mov
repz
mov
test
add
jle
into
jo
stos
push
and
xchg
in
mov
movsb
enter
or
add
xor
popa
lcall
sbb
mov
xchg
or
add
pop
mov
sbb
test
mov
jns
xor
push
das
xor
mov
mov
das
dec
test
mov
or
clc
add
hlt
dec
lods
popf
mov
aam
js
stc
pop
lea
xor
int3
sub
push
pop
pop
sbb
mov
aas
cltd
fs
pop
sbb
pop
push
fs
in
cmp
sarb
jbe
xchg
loop
inc
out
or
andl
sahf
sub
xor
pop
push
je
jmp
in
loop
data16
push
into
rcrl
ret
pminsw
adc
shll
dec
push
push
inc
fs
inc
lahf
fisttpll
add
pop
repz
xchg
add
into
cmp
jmp
mov
adc
inc
cmp
fldt
dec
push
pushl
dec
cmc
ret
pop
push
aam
cmpsb
std
test
sub
inc
sti
cs
cmc
xchg
jl
sbb
jnp
cmp
mov
jle
lds
cmp
int3
jecxz
into
jge
cmp
pop
imul
add
push
faddp
mov
jg
cmp
or
jo
clc
xor
pop
jns
mov
test
mov
ja
sub
push
insl
fbstp
test
sub
repnz
insb
test
jne
sahf
push
outsl
mov
push
xchg
pop
out
call
pushf
xchg
push
scas
in
addr16
in
push
outsb
nop
gs
hlt
sbb
inc
popf
in
aas
push
mov
jp
loopne
mov
inc
mov
xlat
mov
popa
adc
and
jge
sub
mov
and
pop
subl
imul
pop
xor
fdiv
mov
xor
pushf
fwait
addr16
and
pushf
xchg
fdivl
insl
pushf
pop
xor
mov
shl
scas
sub
xchg
aas
lods
and
mov
push
incl
jne
mov
sub
xor
scas
psubusb
lods
sbb
movsb
mov
and
xchg
pusha
andl
mov
mov
cltd
in
mov
and
sarl
xchg
inc
or
cmpsl
out
std
mov
nop
sub
dec
outsb
or
push
das
jl
sahf
adc
jecxz
jmp
popf
dec
jae
sub
mov
sub
jae
mov
stos
jnp
xchg
fisubrl
or
push
mov
call
pop
jns
sbb
jmp
inc
push
movsl
cs
or
pop
and
xor
inc
movsb
fwait
xchg
mov
sti
jo
outsb
lcall
inc
shrl
mov
add
inc
fstpl
cmp
xchg
push
or
sahf
bound
jnp
add
loop
mov
in
or
and
fcmovbe
inc
test
mov
outsb
sbb
pop
test
aaa
mov
xchg
xchg
loop
push
aam
mov
loop
dec
push
scas
lret
jnp
leave
ret
ljmp
faddp
nop
popa
popf
sub
aad
sub
lock
push
loope
cs
and
push
mov
in
xchg
out
or
pop
ror
sbb
les
ret
mov
lds
cltd
adc
jp
stos
lods
mov
push
and
shrl
ljmp
mov
mov
cs
jle
daa
fiaddl
push
iret
out
and
push
imul
jp
js
sbbl
mov
lcall
inc
fstpt
inc
push
in
push
or
lcall
neg
adcl
mov
pop
sbb
xchg
jnp
sbb
dec
mov
pop
or
mov
sbb
inc
and
jmp
xor
mov
movsl
cltd
sub
es
push
jns
xchg
test
fsts
in
jmp
in
aam
pop
loopne
stos
mov
or
mov
dec
stos
sub
in
push
shll
aaa
fwait
rcl
pusha
jmp
jnp
inc
sub
inc
and
inc
stos
mulb
dec
outsb
fdivl
fnstsw
and
adc
icebp
push
lods
negb
xchg
sbb
adc
pop
push
push
divl
adc
pop
cs
out
push
test
shrb
mov
inc
push
jb
jl
cmpsl
cmp
insb
pop
sbb
out
scas
cmp
outsb
jns
ret
and
shlb
mov
in
and
pop
ror
mov
aaa
das
or
mov
popa
dec
adc
mov
xor
lods
cs
test
movsb
movsb
pop
mov
add
jae
mov
jbe
push
movsb
xlat
test
sub
fistpll
xchg
sub
loop
ja
mov
push
imul
aam
out
xchg
pop
ljmp
mov
xchg
inc
xor
inc
jo
xor
clc
ja
pop
xor
sbb
jne
or
jnp
outsb
es
mov
dec
ja
lret
icebp
mov
or
and
add
shrl
fsubl
stos
loop
shlb
fs
cmp
cmp
jmp
ljmp
or
test
add
int
pop
cmp
fcomip
mov
ja
les
and
jo
ret
jp
inc
jae
sub
das
xor
mov
dec
adc
mov
rol
xor
fwait
aam
xchg
loop
iret
ja
sbb
inc
mov
mov
xchg
fisttpl
jge
cwtl
addr16
inc
adc
ss
lods
cmp
lock
pop
adc
or
icebp
sub
jp
fisttps
jg
xor
loope
lea
mov
dec
int
pop
and
rorb
popa
jecxz
mov
mov
jns
mov
repz
addl
push
jl
sub
loope
nop
cli
mov
loope
pushf
jmp
cmp
sub
jno
fs
cmp
mov
cmp
in
into
lret
push
add
push
xchg
and
pop
js
mov
leave
jg
shrb
sbb
adc
rcl
sbb
sbb
lret
sahf
adc
clc
ja
or
pop
in
ja
and
jo
lea
xchg
cmp
push
std
test
pop
dec
out
sub
call
xchg
fwait
ret
pop
pop
popf
jae
jbe
test
das
insb
out
into
ret
and
ret
test
ss
mov
mov
xchg
pop
es
test
stos
mov
inc
cmp
inc
orl
adc
dec
pop
inc
rclb
lods
inc
dec
fstl
mov
push
push
shll
sub
das
pop
adc
gs
mov
or
mov
sub
adc
and
lahf
dec
aas
push
mov
cli
bound
arpl
xchg
adc
aad
dec
inc
clc
mov
shll
lahf
arpl
repnz
jo
mov
sbb
in
push
ss
decb
es
pushf
jne
add
or
sahf
pop
popf
test
inc
out
gs
filds
sbbb
jno
jmp
or
aad
je
jmp
add
mov
aas
jge
adc
cmp
inc
jge
inc
cs
pop
pop
push
xor
sti
jae
scas
xor
dec
iret
add
jae
cmpsl
push
mov
cmp
inc
pop
mov
fildl
xchg
pop
loopne
pop
scas
sub
fsubrs
cli
mov
mov
pcmpgtw
insl
or
cltd
data16
in
mov
jne
int3
fmuls
xor
repz
xor
cmp
mov
dec
out
gs
mov
sbb
inc
jecxz
push
or
cli
and
or
cltd
dec
movsl
std
subb
outsl
xchg
int
inc
lcall
push
xorl
push
test
mov
mov
jae
add
cli
sbb
pusha
sub
add
aas
pop
fbld
enter
sub
mov
cli
lods
fidivs
inc
jge
push
mov
dec
sahf
aas
iret
xchg
jmp
mov
dec
fnsave
ret
push
sahf
or
insb
mov
jne
inc
mov
push
bound
push
xchg
pop
and
cmpsb
movsl
scas
in
inc
dec
pop
mov
insb
inc
pop
fucomp
std
inc
lods
sbb
jg
push
pop
add
xor
xor
inc
je
jmp
clc
and
mov
hlt
adc
pop
loopne
cmp
fidivl
pop
lcall
push
rol
or
xchg
fwait
stos
mov
std
lods
adc
into
adc
mov
add
fwait
adc
xchg
ja
xor
jb
and
mov
sbb
xchg
dec
outsl
pop
ret
out
xor
movsb
mov
sahf
push
mov
add
mov
jne
sbb
shlb
jbe
test
add
pop
mov
cltd
dec
mov
les
adc
and
out
dec
ret
fsubrp
pop
mov
lcall
sub
in
movb
mov
movsl
test
pop
jp
sub
push
inc
xor
fsub
shrb
notl
pop
daa
icebp
push
test
dec
repz
hlt
dec
cs
scas
xchg
sahf
les
mov
mov
or
pop
mov
ret
imul
sbb
mov
fs
out
jmp
sbb
repz
test
lock
sahf
fists
lods
xchg
push
or
fiadds
push
mov
jl
imul
aad
rcl
stos
es
pop
pop
add
adc
aad
addr16
xor
and
jns
adc
inc
lods
xchg
mov
test
daa
mov
jl
lock
add
icebp
sti
sahf
jns
mov
xor
fcmovb
and
xor
fcmovbe
daa
test
loop
push
jne
and
sbb
adc
out
inc
dec
pop
inc
add
mov
int
hlt
pop
xor
cmp
fwait
in
push
loop
insb
cmpsb
fldt
mov
mov
sbb
pop
push
outsb
aas
comiss
dec
iret
pop
sbbb
icebp
jmp
mov
fsubrl
or
cmp
push
ret
jecxz
cmp
pop
dec
movsb
pop
or
arpl
lea
and
xchg
sbb
addb
ss
lcall
sbb
clc
ret
out
push
mov
cmp
sbb
lods
aas
lds
dec
insb
vmwrite
lret
sbb
add
movsl
cmovno
and
add
js
and
mov
insl
mov
dec
into
insl
dec
lahf
test
cmpsb
adc
or
or
mov
adc
xlat
lods
popa
nop
movsb
cmc
push
addr16
cltd
inc
sub
lds
mov
push
adc
xchg
and
repz
mov
aaa
mov
dec
pop
movsl
fisubrl
pop
dec
neg
jbe
mov
adc
mov
aad
into
js
inc
dec
cmpxchg
ret
imul
xor
mov
sbb
cmp
fsubl
adc
sub
in
or
jne
sarb
clc
sar
pop
mov
xchg
test
stc
cmp
pop
sbb
stos
shrb
cmp
adc
pop
decb
xchg
movsb
leave
daa
pusha
jle
aam
inc
pop
test
out
je
push
mov
outsl
jae
shlb
mov
pop
cmpl
shrl
test
fs
fwait
push
test
mov
mov
fistl
push
cld
int3
sbb
sub
ja
clc
mov
xchg
fists
dec
test
jo
sbb
cli
sbb
cmp
arpl
lahf
or
pop
stos
mov
dec
popf
test
ljmp
lret
ljmp
fildll
mov
and
sub
fiaddl
call
aaa
das
out
ja
xor
stc
dec
sub
xadd
lods
loope
loope
xor
xor
sahf
rcrl
mov
ja
push
popa
push
rcl
sarb
popa
xor
fisttpl
test
inc
jl
stc
xchg
inc
in
and
xchg
jae
fcomi
lock
loopne
imul
cmp
ffreep
lcall
push
inc
fildll
testl
push
pop
pop
inc
xor
test
and
xchg
les
js
jno
xchg
push
out
loopne
pmuludq
jecxz
xchg
or
dec
ret
fadds
pop
jle
mov
lret
enter
in
dec
mov
lea
sbb
push
mov
mull
dec
inc
cmpsl
inc
popf
ret
into
xchg
xchg
fcmovne
stos
pop
push
mov
add
out
fs
sbb
inc
pusha
stc
fildl
ljmp
sti
mov
les
and
dec
test
test
mov
addr16
pop
xlat
leave
popa
and
jmp
mov
movsb
cld
inc
mov
orl
or
and
xchg
sahf
mov
dec
ja
dec
rolb
rolb
int
movsb
inc
and
sub
dec
pop
lcall
stos
xor
pop
or
mov
jo
movsl
adc
das
rcl
add
push
pop
pop
inc
mov
sub
sbb
xor
lahf
dec
flds
sbb
dec
outsb
in
scas
in
stos
inc
pop
pop
loop
inc
adc
rol
lret
inc
cmpsl
mov
mov
test
popf
test
adc
outsb
mov
jno
mov
mov
lds
adc
and
lods
xchg
mov
dec
jo
pushl
cld
les
mov
mov
sub
mov
xchg
scas
sbb
cmp
out
cmpl
mov
xor
rorl
dec
push
std
loopne
mov
test
mov
pop
cmp
ljmp
imul
sbb
jmp
sbb
or
xor
or
and
push
fbstp
sbb
mov
pop
mov
lods
sub
aaa
mov
icebp
jno
push
movsb
cmc
mov
nop
iret
pextrw
push
test
je
jno
mov
jge
mov
pop
adc
lahf
inc
mov
adc
cs
popa
fidivl
add
sub
jmp
jmp
jp
cld
les
cmp
cmp
and
push
mov
dec
xor
or
fists
mov
push
lret
push
int
mov
mov
or
mov
js
cmovb
jno
mov
pop
movsl
test
lea
pop
daa
xor
dec
aam
mov
add
out
mov
push
cmp
inc
rorl
jnp
ss
cmp
push
mov
sub
push
rol
icebp
push
imul
fists
out
insb
fcompl
hlt
ret
pop
clc
pop
out
popa
movsb
bound
add
xchg
cmp
je
dec
nop
in
in
xchg
jnp
sub
xchg
ja
idivb
dec
mov
hlt
repnz
fmulp
jmp
jp
rorb
leave
mov
mov
mov
loop
jl
out
mov
arpl
inc
xchg
and
mov
dec
or
add
xorl
fucomi
lds
xchg
adc
xor
jbe
mov
je
mov
xor
sbb
lret
mov
mov
sbb
push
sub
insl
shlb
adc
popa
jne
dec
xor
adc
inc
adc
movl
cmp
shl
int3
sub
mov
adc
mov
testb
fwait
add
and
loop
cmp
fwait
out
mov
bswap
adc
ljmp
cmp
repz
push
sbb
ret
sbb
jns
inc
aaa
in
dec
sub
cmpsl
push
out
dec
mov
mov
mov
adc
cltd
stos
mov
aam
dec
or
ret
inc
adc
arpl
sbb
leave
jne
subl
mov
insl
inc
icebp
dec
lret
aam
push
and
pop
xchg
mov
adc
mov
pop
pop
fistl
xor
ds
cmpsl
dec
pop
push
inc
in
and
leave
adc
add
out
sub
inc
lods
mov
in
pop
cmp
mov
pop
das
push
cmpsl
fldcw
movsl
or
shlb
sbb
into
sub
rcrb
mov
movsl
aas
xchg
addr16
fnsave
cmpsl
dec
dec
lock
cwtl
ja
int3
dec
add
fucomi
push
push
xchg
out
dec
mov
shll
xchg
mov
inc
stos
fstpt
xor
push
lea
stos
ret
aam
and
jp
fs
mov
popa
or
es
mov
inc
push
pop
mov
ja,pt
mov
test
xchg
dec
sub
in
loopne
or
mov
inc
add
add
movsb
mov
pop
or
pcmpgtw
inc
push
cmpb
pop
inc
push
out
fistpl
daa
and
subb
jbe
sub
mov
out
xchg
in
push
fdivrl
or
xchg
pusha
xor
test
lcall
data16
sarl
lods
xor
inc
ret
aad
xchg
inc
in
iret
orl
mov
or
sti
adc
jno
cmc
pusha
adc
inc
addr16
inc
out
dec
aad
dec
xor
adc
pop
xor
or
xor
pop
add
test
icebp
jmp
xor
push
into
clc
out
xor
sbb
sti
mov
fldcw
lahf
adc
mov
scas
loopne
push
jmp
pushf
inc
pop
out
adc
mull
xlat
lods
xor
js
inc
lcall
and
test
mov
pusha
dec
mov
stc
in
dec
xchg
loopne
or
mov
adc
mov
pushf
je
les
insb
pop
gs
mov
mov
pop
inc
leave
inc
inc
cli
loop
fsubp
mov
sbb
push
divb
jae
das
pushf
mov
adc
call
ss
jb
or
xchg
data16
xchg
or
mov
mov
add
dec
into
je
jmp
scas
jnp
and
push
push
pop
sahf
mov
test
push
clc
push
repnz
mov
or
sbb
mov
idivl
scas
xchg
mov
add
inc
cwtl
sbb
les
lods
icebp
push
dec
lret
or
mov
imul
mov
mov
adc
dec
jl
pop
dec
sub
dec
xchg
ror
insl
dec
and
lea
loopne
cmp
rcl
push
cltd
loopne
push
cmp
ret
lret
stos
nop
jecxz
jecxz
sub
dec
add
fs
xchg
xor
cmp
pop
add
js
fldenv
mov
rclb
scas
gs
ss
cli
lds
rcl
pushf
sub
lret
and
sbb
and
xor
in
cmp
roll
mov
adc
adcb
imul
xchg
loop
sbb
add
rorb
lea
xor
pop
jnp
pushf
push
fildll
lods
jno
sbb
ljmp
dec
xchg
je
pop
push
lahf
mov
lods
loopne
fstpt
xor
cld
vpaddb
shrb
pop
xchg
mov
mov
lret
push
cwtl
cld
cmpsl
movsb
divb
jge
or
push
imul
mov
mov
xlat
sbb
aam
dec
test
jbe
stos
adc
mov
je
ja
or
push
push
fdivl
fcmove
push
or
popa
data16
pusha
fisubl
push
inc
and
mov
and
mov
add
enter
sub
jo
ljmp
movl
pop
loope
test
inc
mov
cmpsl
xchg
push
ja
adc
out
jbe
jne
and
jg
pop
inc
push
mov
into
in
pop
call
push
pop
loopne
js
and
hlt
enter
imul
incl
jo
mov
pop
pop
loope
iret
cmp
and
fdivs
ljmp
data16
pop
pop
jge
int
in
pop
pusha
fisttpll
sub
outsb
cmp
fwait
ds
push
lret
insl
stc
fstps
push
sub
jbe
push
add
cmp
adc
pop
fisttps
leave
fcomps
adc
scas
jecxz
mull
push
cmp
push
cmp
pop
xchg
xchg
std
dec
dec
shr
inc
lods
loope
adc
lea
mov
loopne
inc
ja
xchg
ljmp
add
outsb
and
pop
mov
mov
lods
pop
xor
pop
ror
gs
cmp
fwait
scas
cmpsl
iret
jecxz
inc
jno
xor
adc
lea
ljmp
mov
add
repz
mov
filds
pop
and
add
movsl
in
cmp
mov
shr
les
aam
mov
ficoml
jge
fcmovnb
inc
add
nop
push
pop
adc
scas
fimull
and
ja
aam
sbb
push
dec
pop
inc
or
xchg
test
jge
mov
mov
mov
inc
or
sahf
orl
popf
xor
xchg
mov
loopne
mov
push
xorl
dec
daa
cmpsb
jmp
les
pusha
mov
pop
adc
jno
mov
ret
push
pop
dec
cs
into
pushf
ret
push
jl
mov
and
inc
lds
push
pop
sahf
add
cmp
mov
pushf
dec
mov
add
and
leave
cmp
xchg
mov
in
mov
adc
jbe
outsl
pop
in
sub
push
ret
cmp
enter
std
shl
cmpsl
xchg
push
cld
cmpsb
ja
cmpsl
xorb
mov
adc
sub
cmp
aam
fprem1
lods
ss
push
ljmp
es
xor
nop
rcrl
or
outsb
outsl
inc
add
pop
jmp
gs
popa
test
dec
insl
aam
push
loopne
repz
mov
sub
not
sbb
push
test
daa
jge
dec
and
popa
pop
and
leave
and
cmpsl
divl
lret
and
popa
cmp
icebp
adc
mov
incl
xchg
inc
lea
enter
leave
shrb
or
repz
lcall
mov
adc
or
mov
sbb
mov
push
mov
insl
icebp
cli
mov
lret
divb
lret
cmp
sub
xor
add
lret
pop
dec
leave
lcall
repz
adc
add
adc
cmpsb
outsl
dec
popa
iret
mov
mov
sub
test
xchg
xchg
add
stos
lret
pop
jo
pop
repnz
pusha
jns
xor
pop
mov
fwait
in
mov
cmc
outsl
add
push
inc
jmp
mov
push
insb
cmc
inc
or
mov
nop
sub
arpl
mov
mov
jecxz
mov
test
dec
and
data16
push
jae
pop
xor
dec
or
mov
pop
ja
or
ss
lahf
sbb
daa
xlat
filds
pop
test
adcl
lcall
aas
push
or
xchg
push
fdivrl
add
add
pop
mov
jg
lcall
cmpsl
jno
sub
popa
xchg
and
cmp
popf
adc
test
xor
sub
test
lods
and
jge
mov
add
iret
sbb
stos
inc
ss
pop
push
adc
and
in
push
inc
cltd
mov
aam
and
push
flds
mov
mov
sarl
mov
push
push
in
mov
arpl
ja
push
loopne
xchg
or
inc
xchg
inc
pop
or
fs
mov
mov
mov
jecxz
loope
ret
fwait
adc
or
mov
add
mov
xlat
imull
pop
jo
pop
pop
mov
in
push
aam
jle
loop
jns
aam
push
ret
lds
ficoml
cwtl
fnstcw
aam
loopne
and
out
scas
nop
jnp
pop
jg
inc
stc
test
fstp
mov
popa
xchg
adc
pop
mov
movsb
mov
and
js
movsb
pop
insl
xchg
xchg
mov
cmp
out
fdivrl
pop
xchg
les
cmc
loope
fimull
lods
and
dec
jmp
jp
pop
pop
lret
jnp
incl
mov
insl
xchg
nop
dec
sarl
stos
mov
aaa
push
pusha
dec
sbb
out
aam
je
jmp
pushf
cmp
insl
gs
in
cmp
xchg
enter
stos
lahf
enter
aad
jmp
loope
lods
pop
addr16
add
outsl
clc
mov
push
mov
cmp
call
add
mov
xlat
rcrl
cmpsb
cmp
ret
gs
cmp
xor
mov
js
cli
call
cmp
cs
daa
mov
jo
mov
loopne
mov
xchg
in
fisubs
mov
sbb
mov
push
push
sbb
divb
test
dec
outsb
insb
lods
stos
and
out
xchg
lcall
insl
movsb
and
xor
sub
add
mov
aam
enter
xchg
cmp
nop
xor
dec
jmp
imul
scas
in
adc
push
cmc
xor
imul
add
add
mov
cmpsb
sbb
popa
mov
dec
and
push
daa
push
test
test
shlb
sbb
les
mov
scas
call
movsb
sbb
cmp
mov
lods
sub
cmpsb
rcr
es
jecxz
push
lock
xor
or
xchg
mov
sti
popw
lds
int
push
jmp
pushf
sub
sub
add
xor
addr16
xchg
lods
iret
mov
ja
xlat
jb
inc
out
adc
xchg
inc
ss
je
sahf
push
test
jnp
and
sbb
cmp
faddl
fs
add
pop
shlb
sbb
outsb
enter
sub
cmpsb
adc
das
adc
addr16
fidivrs
repnz
mov
dec
mov
sahf
xor
addb
dec
sub
and
adc
add
popa
or
lods
imul
cld
xchg
xchg
aas
sbb
dec
xchg
inc
popf
pop
pop
xchg
jmp
sub
xchg
fistl
dec
inc
fnstenv
mov
fldt
inc
sub
xor
cmp
ret
clc
mov
jecxz
fucom
pusha
das
pop
jl
fucomip
lds
out
sub
cli
jmp
stos
stos
orb
or
cmpsb
xchg
jmp
jmp
mov
sbb
jle
loopne
sub
icebp
jno
or
sti
pop
ljmp
jae
in
adc
xchg
cmpsb
push
xor
into
mov
fsubr
inc
fwait
bound
sub
jle
mov
inc
leave
xchg
cmpsb
lods
inc
dec
jo
lods
es
lahf
adc
lea
ds
xchg
push
sar
orb
pop
mull
aaa
jbe
and
mov
mov
ss
xchg
inc
test
mov
mov
mov
mov
arpl
pop
imull
xlat
popa
mov
xor
xchg
xlat
rcrl
fs
push
pop
sbb
push
cs
ljmp
aad
pop
dec
shl
jbe
push
in
dec
out
outsb
xchg
dec
in
sbb
cld
test
mov
inc
sbb
or
dec
mov
std
xor
adc
xchg
fcoml
rclb
sbb
pop
push
inc
cmpsl
mov
fldt
inc
mov
jnp
push
cwtl
and
push
jle
inc
mov
xchg
jmp
xor
rcll
cmpb
nop
xlat
out
jecxz
jg
jp
shlb
inc
iret
push
andl
xor
push
push
incb
hlt
aad
rorb
sub
inc
in
les
popa
sbb
dec
mov
adc
cmpsl
dec
adc
sub
lods
pop
jg
test
daa
adc
addl
cmp
cwtl
lods
ret
sahf
loop
adc
lods
mov
insl
shlb
adc
cmp
push
inc
loopne
sub
or
and
jp
outsl
sbb
sti
sbb
push
and
jo
xorb
addr16
xor
mov
adc
add
jb
jbe
mov
std
push
inc
inc
xchg
xchg
lcall
xor
mov
pop
pusha
push
adc
test
add
ss
out
leave
lods
ret
inc
pushf
add
test
push
push
mov
pop
and
jb
out
shr
std
pop
fldt
sbb
xorl
xchg
dec
fistpl
stc
bound
cli
es
fdivl
push
and
adcb
and
push
out
addr16
movsl
fdivrs
imul
sub
lds
and
push
inc
sbb
xor
dec
adc
inc
sbb
inc
jle
xlat
insl
pop
leave
insl
mov
jge
dec
dec
cmc
dec
add
inc
nop
ss
jno
inc
jo
lods
lret
and
jle
nop
loope
leave
in
imul
pop
pop
test
mov
adc
loop
lret
pop
ret
sub
bound
mov
fdivl
jmp
fstl
enter
cmpsl
add
dec
ret
pop
out
jns
cmp
mov
dec
push
ret
xchg
test
test
loope
mov
fimull
popa
std
imul
cmp
popf
push
and
xchg
ja
fcmovu
pop
xlat
jl
sahf
and
and
pop
mov
xor
mov
pop
test
shrb
mov
sarl
xchg
jnp
jne
and
jecxz
sub
sbb
jp
outsb
mov
mov
arpl
mov
sub
lcall
insb
loope
and
push
sahf
aas
jmp
pop
out
push
pop
stc
rcrl
test
pop
cmp
in
in
js
and
sbb
loop
xchg
push
fidivrl
stos
sbb
frstor
sbb
inc
clc
push
add
mov
dec
cmpsl
pop
pop
mov
popf
mov
jmp
stc
adc
xlat
clc
jl
repnz
and
jmp
imul
fwait
mov
test
psubq
inc
fld
mov
cmc
pop
aaa
ds
ja
pop
push
ljmp
jge
mov
out
mov
cmpl
inc
sub
mov
adc
push
cmpsb
pop
inc
lcall
mov
addl
loop
xchg
adc
pop
pop
pushf
jo,pt
xor
iret
cld
fadd
push
insl
lcall
test
std
ljmp
push
mov
insb
inc
es
pop
mov
loopne
orb
sub
sbbl
pop
add
ljmp
adc
lret
pop
ret
dec
jns
xchg
pop
dec
rclb
aad
sbb
in
mull
cmp
mov
outsl
adc
outsb
inc
dec
inc
xchg
sub
lcall
sbb
cltd
sbb
pop
in
lea
in
cmpsl
rorb
imul
mov
jge
pop
fwait
jmp
mov
xor
sub
out
daa
or
adc
ds
pop
adcb
dec
mov
xchg
out
lea
sub
sub
in
je
and
pusha
aas
mov
test
push
or
inc
fwait
dec
in
cltd
or
dec
or
fcoms
mov
loop
icebp
adc
dec
out
mov
bound
nop
add
mov
xor
repnz
jp
xchg
xchg
mov
fwait
xchg
xchg
cmp
fs
add
inc
rcr
and
cs
adc
leave
mov
and
sub
and
or
fcomp
inc
ret
xor
lret
mov
daa
aad
fidivs
mov
adc
outsl
pop
lret
jo
xchg
scas
repnz
ds
frstor
scas
outsb
lock
pop
setg
fcoml
pop
push
dec
lret
out
xor
aas
xchg
sub
les
or
call
fsubr
stc
loope
jae
adc
lea
das
push
rcr
mov
flds
sahf
mov
and
cmp
cmp
sub
adc
fidivl
mov
mov
fcmovnbe
xchg
pusha
js
lods
mov
sbb
xchg
sbb
cmp
pop
cs
sub
mov
xor
jno
pushf
rcl
or
push
jne
rcrl
lds
icebp
rolb
jp
cwtl
push
pusha
jo
mov
out
sub
push
xchg
jg
ds
mov
cmp
sti
test
cli
dec
xchg
lret
jl
clc
sbb
or
fwait
ret
out
lock
sbb
mov
inc
dec
loope
lret
ret
popf
mov
lods
inc
xchg
push
les
mov
outsl
aad
mov
sbb
shll
mov
jl
sub
cmpsl
ja
xchg
lods
cmp
fs
sbb
nop
jecxz
notb
push
pop
cmpsb
rorl
inc
xchg
jmp
add
fisubrl
mov
lcall
push
fisttpll
push
leave
mulb
cld
or
addr16
sti
je
mov
pop
fiaddl
ret
bnd
xchg
cmpsb
dec
jne
sti
add
xor
mov
push
fsub
pop
add
movsb
mov
orps
or
lret
add
pusha
inc
test
outsl
lea
shr
jb
xlat
adc
pop
add
testl
sahf
out
incl
pop
jo
repnz
or
ljmp
out
mov
lods
xchg
mov
in
stos
iret
dec
shll
cmpsl
adc
test
leave
mov
jb
lds
mov
out
mov
pop
and
sub
pop
jg
jmp
sub
lret
sbb
into
adc
push
movsl
jl
mov
pop
movsb
in
popa
shll
sub
ds
leave
sarl
xor
mov
dec
rcrb
es
jp
call
mov
jb
js
pop
jnp
rcr
stos
rcrl
insb
mov
jns
and
fs
sub
iret
push
inc
sub
iret
xchg
push
stos
cmp
xchg
pop
or
push
mov
dec
jge
mov
daa
sbbb
andl
sbbl
add
cmc
adc
hlt
mov
cwtl
cs
std
jl
mov
xchg
nop
enter
push
adc
mov
ja
inc
sub
dec
aam
mov
mov
sub
and
inc
mov
mov
mov
sbb
dec
out
sub
stc
dec
shlb
je
flds
in
mov
sub
stos
mov
mov
ret
jno
fwait
je
cmp
lcall
in
xor
into
int3
dec
out
pushf
das
mov
js
movsb
pop
xlat
add
fdivrs
leave
or
pop
jge
mov
fnstenv
and
mov
xchg
inc
test
imul
loope
lahf
or
inc
or
xor
test
ret
jnp
cmp
sbb
sub
cld
int3
mov
or
adc
dec
sub
cmpsb
lahf
mov
sbb
popf
push
xor
mov
dec
jl
subb
xchg
dec
xchg
adc
xor
les
jnp
je
dec
aaa
js
lahf
mov
je
test
outsb
xor
shlb
out
and
imul
adc
push
add
out
pop
add
pop
sub
mov
push
stos
xlat
imul
daa
int
repnz
xchg
in
je
aaa
sub
sub
pop
xchg
mov
xchg
test
mov
fisubl
jle
mov
cmp
inc
jnp
roll
cmp
add
iret
ss
mov
add
cmpsb
rcll
out
fsubl
adc
xchg
mov
hlt
mov
push
std
push
pop
mov
jo
subl
shr
pop
dec
jne
mov
popa
cmp
repnz
or
stos
mov
lret
xchg
stc
push
jbe
test
pop
inc
mov
mov
cld
aaa
xor
imul
out
daa
pop
ret
jecxz
sbb
out
dec
mov
repz
adc
int
in
mov
jne
aad
or
push
cli
popa
fsubs
data16
or
push
out
and
add
cmp
pop
fmull
fcmovu
push
test
pop
insl
lods
mov
sub
fs
dec
push
test
mov
pop
push
repnz
dec
mov
pop
out
and
js
ftst
xor
adc
int3
inc
in
in
jge
clc
lock
cli
leave
mov
xchg
jle
aad
or
iret
ljmp
push
mov
jno
fs
cmp
and
aas
test
lret
ror
das
adc
dec
jle
pop
and
jle
pop
dec
daa
jg
insb
pop
jecxz
and
push
sbb
pop
clc
ds
movntq
jmp
jg
push
inc
cmp
dec
sbb
mov
aad
adc
add
jmp
mov
mov
lods
push
mov
mov
pop
lahf
sbbb
xchg
push
scas
adc
aad
mov
xor
push
sbbb
stos
fstps
out
mov
push
inc
fneni(8087
inc
add
push
sahf
push
or
sbb
or
mov
inc
push
sbb
mov
jmp
adc
sahf
cmp
cmp
pop
out
jno
insl
adcl
dec
jmp
sub
and
mov
mov
sub
mov
adc
push
mov
stos
in
ja
jge
jne
ret
nop
pop
add
fcmove
int3
jmp
loopne
ret
cs
es
cmp
fdiv
and
aad
sub
and
push
cs
sub
cmp
sti
bound
aas
aaa
popf
sbb
pushf
mov
jl
scas
loope
addr16
ja
daa
xor
or
negb
jmp
adc
sbb
adc
push
rolb
sbb
adc
adc
lcall
and
mov
lods
xor
adc
xor
mov
testb
xchg
arpl
dec
add
jne
mov
shl
addr16
mov
mov
movsb
lret
mov
inc
xchg
sub
add
fiadds
pop
loop
push
xchg
mov
imul
nop
xchg
call
lret
push
pop
jp
scas
sti
clc
mov
dec
xchg
inc
push
int
and
add
aad
cmp
int
jno
jg
adc
inc
xlat
add
xchg
dec
cwtl
lock
xchg
mov
cltd
cmp
imul
pushf
seto
mov
lock
cmpl
dec
fdivr
ret
pop
out
lcall
jecxz
mov
xor
sub
loopne
fwait
rcrb
jl
and
aaa
es
aam
mov
hlt
fiaddl
shlb
jp
repnz
aaa
push
pop
xchg
out
lock
jae
arpl
sar
aaa
repnz
jne
sbb
jb
jo
inc
shl
call
mov
incb
inc
mov
push
xchg
and
mov
add
andb
mov
test
jb
sarl
xor
stos
or
test
adc
mov
popf
push
decl
dec
mov
jg
jb
pop
popf
dec
cmp
or
xchg
pop
inc
xor
inc
cwtl
neg
lahf
add
or
int
jmp
pop
test
int
mov
fs
shrl
stc
js
jmp
push
mov
dec
ret
jnp
inc
das
cmp
pushl
adc
mov
cmc
mov
jo
pop
inc
aaa
pop
rorl
movsb
dec
mov
cwtl
push
and
popf
imull
sarb
pop
cld
and
movsb
loop
or
int
xor
pop
mov
xor
inc
lret
hlt
mov
sarl
jno
sub
fsts
imul
pop
cli
test
mov
push
xor
add
xlat
aam
mov
sbb
sbb
adc
mov
sbb
repnz
jge
jp
cs
outsb
jo
jno
movsb
mov
fsubl
loop
shrb
inc
xor
push
pop
sbb
jo
mov
mov
scas
sub
ret
mov
insl
cmp
sub
add
sbb
xchg
push
mov
outsl
ja
cld
insl
inc
push
mov
rcll
mov
mov
std
or
mov
push
daa
xor
sub
cs
adc
xor
pop
stos
xchg
jns
cmp
xor
pushf
aas
dec
dec
leave
pop
fincstp
sub
fimuls
outsb
cmpsl
mov
and
loopne
stc
push
out
and
push
adc
inc
push
mov
mov
sahf
fiadds
inc
test
and
mov
dec
sbb
gs
sub
adc
lods
or
push
adc
int3
xchg
cltd
sti
int3
addr16
test
imul
fsubr
push
ret
jno
mov
xlat
sbb
lock
xor
and
jp
mov
ljmp
adc
daa
into
sub
std
call
inc
int
sub
mov
cmpsl
sbb
lahf
iret
pusha
or
mov
cmp
bound
in
movsl
mov
ja
push
aad
xor
pusha
mov
ljmp
sbb
mov
jg
popa
lods
inc
jge
ficompl
xor
mov
repnz
stc
jbe
jae
mov
xchg
icebp
push
in
adc
dec
lea
cmc
sahf
xorb
fsqrt
push
mov
push
sbb
jge
les
add
push
pop
imul
out
adc
sbb
out
lods
je
out
in
mov
cmpsl
dec
imul
sub
in
int3
and
pop
mov
inc
add
xchg
mov
mov
rcrl
negl
push
sub
cmp
jecxz
push
loopne
sub
adc
sbb
gs
sub
cmp
inc
jb
ficoms
into
pop
push
mov
lret
xchg
mulb
sbb
call
dec
push
or
adc
xor
add
ds
adc
aaa
cmp
mov
jo
scas
mov
jmp
int
out
movsl
les
aam
sbb
into
fsubs
cmp
fwait
loopne
addr16
insb
repz
ja
inc
mov
sahf
inc
dec
movups
mov
gs
jns
popa
add
cmp
into
int
int
hlt
popf
bound
aaa
and
scas
inc
inc
stc
adc
and
ds
add
and
mulb
ret
movsb
outsb
mov
rcr
or
std
fimuls
outsl
push
outsl
xchg
adc
out
adc
push
mov
xchg
cs
adcl
rclb
jae
and
xchg
nop
das
pop
loop
adc
in
adc
shlb
repnz
jne
in
sub
jo
inc
jl
stos
push
add
in
mov
in
mov
mov
inc
cwtl
popa
jmp
mov
iret
dec
lods
mov
xor
es
xchg
mov
fstpl
std
push
and
mov
clc
in
cmp
mov
pop
repnz
add
dec
jae
mov
push
enter
cs
cltd
ja
dec
mov
pop
jg
repz
arpl
stos
inc
mov
je
aaa
xorb
sbb
xchg
int
mov
cs
xchg
ficomps
pop
pushf
mov
enter
pop
sub
pop
pop
inc
icebp
movsl
in
pop
stc
call
daa
arpl
jno
in
mov
mov
and
ja
or
xchg
es
lds
cmp
cmp
xor
and
fildl
scas
sbb
imul
push
movsl
mov
sub
cwtl
mov
sbb
and
inc
pop
add
or
or
hlt
in
ds
addl
or
push
sub
ljmp
xor
gs
xchg
add
sbb
pop
neg
int
pop
in
xor
aam
mov
and
inc
pushf
ficomps
push
inc
dec
popa
xchg
xor
rcl
push
xchg
mov
push
jo
mov
outsl
arpl
xor
push
jbe
clc
aad
ljmp
scas
ds
sub
notb
scas
jo
push
mov
sub
mov
jae
cmpsb
into
pushf
cmpsl
sbb
enter
movhlps
lock
push
xor
ds
mov
push
clc
shl
bound
jecxz
icebp
mov
cmpsl
repz
addr16
inc
jns
and
jl
cmp
xor
repz
or
xor
xchg
add
jle
pushf
push
pop
ds
and
sub
mov
inc
sti
push
cltd
dec
or
dec
mov
icebp
dec
aaa
fs
jns
cmp
xor
fwait
xchg
push
dec
push
aaa
push
xchg
loopne
in
gs
in
jp
icebp
ss
xorl
or
and
into
js
push
xor
mov
and
cld
add
int3
jp
cmpsb
jnp
mov
int
test
cmc
call
dec
jecxz
sub
clc
je
out
fwait
push
test
mov
push
mov
loopne
jp
xchg
inc
push
push
pop
mov
or
idivl
push
lret
paddq
adc
insl
or
in
push
stc
xor
sbb
lahf
adc
add
dec
pop
rcll
xor
inc
push
add
mov
sbb
mov
inc
xchg
adc
inc
icebp
push
mov
xor
lret
dec
ds
adc
jg
mov
or
add
cmovle
mov
add
sbb
mov
push
popf
jae
inc
jmp
or
dec
imul
enter
lret
mov
rorb
sbb
push
out
les
mov
insb
rcrb
push
mov
sbb
xchg
aam
mov
push
insb
jp
add
je
jne
push
and
adc
adc
js
fldenv
pushf
sub
cmp
mov
scas
xchg
pop
rcll
mov
icebp
stos
mov
lods
cmp
sbb
outsl
or
push
jecxz
xchg
inc
outsb
mov
jb
repz
cld
dec
and
inc
mov
cmp
pop
xor
insl
in
sti
pop
lcall
fdivrl
push
add
into
fadd
adc
lahf
xchg
ss
cli
adc
and
push
shl
xchg
rcll
sub
icebp
stos
mov
jmp
bound
int
mov
fadds
sub
xor
in
pop
jecxz
not
mov
fsubrp
pop
std
data16
dec
dec
hlt
insb
push
scas
jae
stos
cmp
and
xor
fwait
and
shrl
mov
pop
hlt
out
aam
push
repnz
test
fsubl
cmp
adc
ljmp
inc
pop
xchg
in
mov
out
inc
add
or
adc
add
call
outsb
inc
and
jg
sbb
test
fdivr
cmpsb
dec
lret
scas
mov
ss
ret
shrb
and
ror
aaa
popf
scas
hlt
xor
std
xchg
pop
or
out
mov
aad
mov
jae
jnp
mov
fdivrl
xlat
pushf
lods
dec
add
jp
test
push
pop
fdivrs
mov
pusha
lret
xchg
outsl
in
sbb
mov
shr
xor
loope
cmpsl
push
mov
popa
fcmovbe
int3
mov
cmc
incl
xor
cmp
lods
icebp
xchg
and
adc
out
inc
xchg
push
popf
daa
dec
or
sbb
push
jmp
jl
outsl
inc
stc
cmp
xchg
or
inc
fbld
xchg
loope
popa
in
xor
and
std
lods
and
je
scas
inc
loop
arpl
insb
cld
adc
push
xchg
add
jge
xlat
icebp
loopne
es
xlat
int
xchg
leave
bound
add
xorl
cld
ret
push
loope
inc
in
mov
jo
imul
div
dec
xchg
push
add
sbb
inc
cmp
pop
rclb
add
lret
push
cs
in
shll
dec
or
fs
cld
xor
mov
xchg
and
push
sub
lds
adc
in
popf
in
inc
push
lret
adc
xlat
mov
test
xor
inc
sub
or
dec
jne
mov
add
adc
cmpsb
mov
or
cs
das
mov
iret
outsb
and
mov
icebp
testl
fists
mov
icebp
mov
jp
js
popl
dec
mov
xchg
inc
lahf
jge
push
sub
fistpll
divb
cld
fcmovu
dec
daa
pop
sbb
push
arpl
jbe
inc
sarl
paddd
lds
in
out
mov
cmp
ljmp
in
test
iret
out
xchg
dec
fadd
cmp
aam
pop
mov
out
jmp
cmp
xchg
pop
daa
dec
aaa
inc
out
jno
sbb
xor
inc
ret
es
pop
lds
andb
adc
out
jp
fs
push
negl
sbb
sbb
int3
mov
ret
pusha
push
lahf
xchg
adc
scas
shl
sbb
test
lock
push
imul
push
mov
jp
mov
test
sbb
movsb
mov
lock
or
xlat
jge
out
dec
xchg
xchg
mov
cmp
jg
push
push
pop
insb
gs
xchg
inc
in
xabort
shrb
jmp
mov
ficompl
and
cwtl
inc
subl
fadd
or
xchg
mov
inc
iret
sahf
ljmp
arpl
movsl
add
fdivp
loopne
shrl
mov
mov
dec
cmp
push
pushf
ret
lds
inc
shl
fidivrs
xor
popf
popa
adc
icebp
daa
pop
adc
lock
inc
cmp
fistps
aaa
or
add
das
and
lock
ja
movsb
mov
mov
jnp
mov
sarl
adc
mulb
inc
pop
dec
xor
addr16
push
notb
cwtl
jo
or
test
out
mov
fcomps
or
fcmovb
std
jb
je
test
scas
xchg
and
mov
cmp
and
flds
std
and
in
and
cs
push
lret
js
inc
scas
pop
add
mov
mov
ja
sahf
ja
pop
xchg
call
push
rorl
in
in
popa
sbb
inc
into
or
mov
mov
dec
or
mov
jle
cltd
in
mov
je
push
les
call
js
sub
cmp
ss
jle
add
jb
push
inc
loop
xchg
mov
out
mov
fsubrp
pop
fdivr
jle
jnp
std
or
incl
add
sub
in
cmp
sub
dec
push
cmp
rcrb
loopne
int
outsl
test
add
mov
ret
cli
data16
jmp
adc
clc
mov
scas
mov
aas
shll
data16
fcoms
lret
xor
outsb
xor
jecxz
jbe
jmp
or
mov
test
xchg
sub
jnp
mov
nop
int
sub
inc
mov
roll
inc
inc
scas
jbe
cwtl
and
adc
mov
stos
xchg
cmp
out
mov
aaa
int3
into
outsl
ficoml
in
mov
fld1
test
int
in
or
je
enter
mov
jo
push
daa
pushf
stos
rcrl
push
pop
adc
cltd
push
aaa
or
lods
sub
push
sub
push
mov
insb
sub
mov
popf
cmp
mov
lret
stos
dec
sbb
push
lds
int3
push
mov
xor
adc
jg
call
fstl
adc
addr16
cmpsl
mov
ficoms
push
cmp
int3
out
xchg
fwait
les
inc
and
push
cmpsb
imul
add
andl
popf
push
push
mov
and
shlb
inc
lods
xchg
and
mov
inc
dec
imul
fwait
sahf
push
jle
insl
insb
adc
pop
testl
std
jne
and
subb
lahf
sbb
jl
das
sarb
ficomps
popa
repnz
xchg
cld
add
jmp
xchg
jae
dec
lock
adc
push
xlat
pop
fisubrs
cltd
fs
mov
lcall
cmpsl
pop
mov
pop
sub
aaa
jbe
jo
add
jne
notb
imul
dec
and
repz
inc
add
xor
dec
mov
pop
aad
lret
frstor
lock
js
xor
insl
mov
stos
out
and
mov
xchg
icebp
fstl
jne
inc
push
aaa
std
pop
loope
cld
pop
shlb
pop
and
mov
and
insb
je
add
stc
addl
xorl
popf
stos
imul
out
or
xchg
sub
jns
cld
mov
push
adc
inc
pop
icebp
dec
cld
cmp
outsb
mov
add
mov
mov
xchg
jmp
icebp
imul
aam
jns
xor
jo
dec
mov
push
jg
jns
out
fsubrs
in
movsb
inc
das
add
jo
dec
insb
rorl
cmp
std
ds
scas
mov
add
mov
ss
ss
loop
movsl
aas
lret
jl
out
shlb
sbb
mov
adc
ljmp
cs
rolb
or
mov
rorl
fistl
and
ret
loop
mov
imul
pop
xchg
pop
in
xor
lret
mov
sbb
jg
ret
push
sbb
xlat
pop
dec
shll
rclb
bound
stos
mov
test
xor
dec
sub
ja
jbe
cmp
mov
out
inc
sub
movsl
xchg
cmp
or
dec
and
mov
popf
rcr
lods
test
sahf
ret
xlat
and
mov
mov
xchg
adc
je
dec
and
cs
push
xor
loope
jb
inc
fidivs
addr16
mov
xor
sbb
test
fstpt
mov
pushf
and
das
xlat
push
inc
cmpb
das
xchg
stc
cwtl
mov
add
inc
push
gs
int
adc
mov
push
rorb
inc
imul
pusha
inc
mov
cmp
inc
shl
add
in
dec
out
cmp
adc
mov
dec
mov
pop
into
jbe
cmp
jecxz
shr
sti
psrlw
adcb
clc
inc
mov
xor
shlb
xchg
stos
add
jno
adc
rcrl
lret
xchg
jns
jmp
addl
pushf
in
jae
adc
out
nop
mov
movsl
pusha
mov
push
das
dec
xorb
imul
inc
xchg
xor
stos
dec
mov
aaa
pop
out
jp
xchg
inc
jge
nop
test
cs
or
xchg
pop
scas
std
xchg
fisubrs
and
fnstenv
jl,pn
pop
in
jns,pn
sbb
sbb
mov
jno
cmc
dec
mov
jne
pop
push
call
xor
adc
sbb
ds
int
scas
sub
xchg
out
mov
xchg
dec
cmpsb
cmc
lds
push
mov
lret
jne
flds
popa
rcll
orl
xchg
je
cmp
arpl
mov
fs
cmc
test
dec
lods
sbb
lret
jae
mov
popf
out
ret
cli
sbb
stos
or
loope
lods
lcall
cmpsb
dec
std
adc
pop
mov
in
dec
and
mov
and
sti
jae
cmp
flds
dec
inc
aaa
mov
add
lahf
sub
stc
mov
cmp
clc
stmxcsr
ficomps
jo
mov
testb
inc
cmpsb
jg
and
adc
mov
mov
fdivrs
aam
repz
cld
pop
sbb
pop
xchg
or
jle
das
fbstp
and
stos
xchg
push
adc
fdivrs
fwait
sub
leave
shr
dec
mov
insl
repnz
arpl
dec
push
cmp
sub
pop
leave
jmp
testb
and
addr16
mov
mov
mov
orb
sub
pop
addr16
push
nop
jl
stos
mov
xchg
data16
bound
pop
fsubs
push
or
mov
sub
mov
inc
dec
mov
sahf
mov
adc
inc
mov
dec
xchg
push
lcall
and
gs
push
add
call
or
stc
mov
insb
sarb
repnz
aas
xchg
push
pop
std
movsb
inc
add
lcall
ret
adc
in
inc
mov
js
xor
fwait
mov
repz
ja
ret
or
out
add
in
insl
cmp
int
and
sbb
and
lea
popf
xor
cli
jae
pop
das
sub
jmp
cwtl
lcall
ficoms
jmp
cmp
lahf
enter
dec
bound
mov
inc
and
lea
or
sub
add
cmp
cmp
leave
addl
movsl
sbb
adc
pop
add
aad
fsubrs
mov
sub
test
mov
out
pop
test
dec
in
push
cltd
sub
inc
fsqrt
shrb
adc
movsl
pushf
fwait
xor
je
lcall
pop
mov
je
add
or
pop
lock
xchg
xchg
mov
out
pop
mov
push
lods
in
fidivs
jle
and
dec
sbb
outsl
popa
pop
scas
sbb
pusha
in
sahf
push
xor
mov
mov
lds
std
mov
sahf
pop
jmp
add
mov
sbb
mov
push
movsb
add
fldcw
insl
or
stc
mov
adc
xchg
mov
mov
add
mov
sbb
lret
pop
mov
jae
pop
mov
jbe
adc
popf
clc
jp
mov
inc
and
mov
lock
adc
movsb
dec
adc
aam
js
insb
fildll
cmp
pusha
daa
jle
sub
xchg
xchg
scas
shll
stos
in
outsb
ficoms
test
push
xchg
jecxz
outsb
rcrb
mov
rorl
stos
cmp
cld
mov
adc
ret
cmpl
bound
stc
adc
repnz
fsub
test
int3
lcall
iret
add
push
mov
fmull
sbb
mov
mov
out
popa
and
call
mov
jle
dec
rcr
push
in
inc
push
xor
pop
mov
insb
push
or
lock
lds
pop
xor
jae
movsl
in
jecxz
out
inc
jecxz
loopne
out
mov
or
jo
scas
daa
fistl
adc
xchg
roll
cld
test
xor
les
inc
idivb
leave
adc
sahf
das
lcall
sub
jno
ret
out
hlt
fsubrs
repz
sub
stos
mov
outsl
xor
cltd
sbb
push
add
int
clc
pop
mov
ja
mov
loopne
sbb
out
mov
fst
iret
js
adc
and
ja
out
inc
outsb
xchg
pop
jecxz,pt
stc
arpl
out
adc
icebp
movsb
mov
jg
inc
nop
mov
push
cs
lock
rcr
xchg
fs
sub
push
or
inc
notb
aam
mov
dec
nop
shrb
fsubrl
andl
stos
call
mov
adc
cltd
push
fisubrl
mov
inc
or
mov
js
call
ret
or
leave
mov
xchg
pop
insl
sbb
adc
and
cmpsb
mov
inc
jne
sub
es
sub
leave
testb
sahf
add
cmp
sarl
outsb
pop
or
test
inc
xchg
shr
inc
loope
xor
test
test
ret
add
popa
leave
call
or
and
and
lahf
jmp
out
popa
or
lods
leave
xchg
push
pop
xchg
mov
xchg
outsl
sbb
mov
sbb
inc
inc
pusha
cmc
mov
and
aam
sub
sbb
sarb
mov
call
xchg
dec
in
xchg
and
xchg
push
add
xchg
xor
ljmp
repnz
lcall
mov
nop
pushf
mov
ljmp
dec
mov
insb
inc
test
popf
push
stos
movsb
mov
push
mov
lods
rcll
popa
mov
jg
addb
andb
es
push
loope
mov
imul
outsl
xor
outsb
jl
out
xor
jnp
loopne
jae,pn
scas
sbb
adc
clc
cwtl
movsb
icebp
sarb
pop
sub
pop
int3
push
add
sarl
sarl
sti
rcll
lods
stc
push
arpl
mov
out
pop
outsl
lock
clc
mov
add
mov
into
imul
xor
std
and
xor
and
imul
sbb
mov
testb
rorl
lds
sbb
pop
mov
jae
aas
and
fwait
adc
sbbl
xchg
and
cmp
rorb
add
mov
adc
add
bound
jbe
and
inc
pop
inc
xchg
out
jl
push
jp
dec
or
push
pusha
xlat
insl
pop
mov
mov
adc
adc
xor
sbb
sbb
push
cmp
gs
test
jnp
sbb
fisubrs
adc
sti
adc
or
jns
mov
movsl
sbb
scas
mov
cmpsl
and
jmp
nop
push
mov
inc
test
subb
inc
in
adc
outsb
out
inc
lret
ja
inc
loopne
mov
inc
mov
fwait
dec
mov
dec
negb
add
dec
inc
in
mov
inc
es
and
leave
out
test
dec
mov
sub
cltd
shll
rcrb
jp
or
into
jo
pop
sbb
lahf
lret
cmc
add
daa
inc
pop
out
lods
or
inc
loop
daa
stos
push
movntps
test
insl
and
repnz
and
adc
movsb
and
sbb
shr
repz
into
arpl
and
dec
mov
push
shll
rcr
mov
jg
push
popa
jl
adc
stos
outsb
hlt
sbb
rcll
test
push
inc
mov
std
dec
jg
and
mov
jo
stos
enter
xchg
fwait
mov
jns
rcll
cld
lock
adc
push
jae
cwtl
push
dec
sub
fdivl
dec
pop
xchg
jp
data16
pop
cmp
lcall
fwait
xchg
imul
icebp
fsubrl
in
jo
adc
push
push
mov
nop
ljmp
push
out
rclb
ficompl
push
iret
ss
aas
sti
shrl
mov
jb
xchg
or
pop
nopl
adc
dec
add
mov
arpl
jl
sub
in
imul
or
leave
jnp
jmp
pop
imul
pop
dec
mov
sahf
cmp
adc
fsubr
dec
je
shrl
lock
cmc
mov
les
repz
sbb
loop
fisubl
je
mov
insb
orb
lahf
jmp
dec
push
sub
aad
add
pop
jae
mov
fildl
movb
js
or
sbbb
or
fidivrl
or
add
je
scas
mull
lahf
stos
outsl
push
das
outsl
dec
bound
cmp
nop
jecxz
rcrl
push
adc
stos
ret
mov
jl
or
fidivs
mov
aad
and
or
inc
xchg
je,pt
sti
arpl
out
sbb
pop
jns
or
clc
roll
lds
or
push
into
sahf
aad
pop
cmp
int3
in
hlt
cmp
je
shrb
fisubrl
mov
arpl
or
sbb
ja
stos
cmpb
sbb
push
jecxz
mov
sti
iret
pop
in
mov
stos
std
or
aaa
jo
xlat
sbb
addr16
and
ficomps
ret
js
out
subb
xor
push
outsl
sbb
jle
decb
pop
jecxz
je
sbb
ret
cmp
push
shrb
add
dec
lods
xchg
and
ret
pusha
xchg
scas
fdivrs
jmp
inc
loope
and
inc
int3
outsl
bound
push
sbb
jne
rclb
stos
xor
std
int
lods
sbb
and
or
fcompl
repz
cld
roll
mov
stos
ss
add
xor
js
aam
mov
es
shrl
fmull
add
cmp
insb
dec
jb
roll
cmp
or
sub
xchg
mov
push
mov
push
mov
jne
mov
inc
sub
jo
into
fdivrl
pop
mov
sar
mov
outsb
push
add
pusha
cmp
fadds
adc
cli
lret
cmp
es
movsl
les
pop
int
push
out
cwtl
jmp
loopne
jne
push
fidivrs
lods
jecxz
fistpll
test
add
or
mov
popf
xor
in
xchg
outsb
xchg
jl
mov
loopne
push
xchg
lahf
push
xchg
cmpsb
ficomps
mov
test
popa
mov
jle
or
ud1
jmp
cmc
mov
or
push
das
sbb
inc
loope
sub
out
xchg
std
add
ds
aad
sub
in
scas
mov
imul
shlb
cmp
ja
cmp
mov
and
jo
in
fs
inc
push
mov
adc
adc
xlat
sbb
ss
lahf
int
adc
roll
sbbl
outsl
sub
sbb
outsb
cmp
in
daa
bound
pop
loope
arpl
lcall
pop
in
mov
jo
mov
adc
sub
mov
xchg
out
rcrl
ja
clc
dec
sub
pop
add
mov
cmc
dec
push
jge
push
jge
into
sbb
in
movsb
mov
aad
out
jne
lcall
adc
mov
shrb
cmp
pop
mov
push
fadds
lret
cmpsl
mov
and
aas
out
push
lds
jl
or
cmpsl
in
mov
mov
pop
cmp
aaa
sub
cs
or
and
aas
sub
dec
xor
jbe
frstor
in
addr16
push
lret
roll
jns
sub
xorl
cld
scas
out
jo
mov
and
jge
mov
push
mov
mov
aaa
je
inc
cmp
xchg
mov
sbb
std
or
mov
lods
les
and
lods
loopne
test
pop
xchg
popa
pop
lcall
arpl
imulb
icebp
push
jp
fldt
pusha
mov
jecxz
jg
sahf
lret
xor
inc
dec
lds
stos
mov
mov
lret
ljmp
lods
mov
cmp
cmpsl
sub
movsl
add
shlb
mov
lock
xchg
fcmovu
xor
rcl
out
scas
push
jbe
data16
xchg
push
fld
shll
and
add
add
mov
out
daa
mov
xor
loopne
into
sub
mov
inc
mov
mov
popf
push
xchg
push
cmp
push
into
fcoml
inc
mov
out
dec
mov
add
shrb
and
or
lret
mov
movsb
pop
xor
jle
fldt
inc
mov
jl
adc
mov
out
xchg
outsb
lcall
push
xor
pop
divb
arpl
sbb
imulb
mov
ds
cmc
loopne
xor
or
pop
xor
shlb
imul
leave
push
xor
rcll
jecxz
jmp
xorl
cwtl
ficomps
push
enter
test
pop
in
xor
insl
pcmpgtd
mov
and
outsl
xchg
out
mov
imul
lahf
fwait
rcll
movsl
jnp
mov
push
cmc
lret
add
pop
push
lahf
sbb
jne
pusha
add
sti
push
xchg
push
daa
add
xchg
pop
gs
cmpsl
fisubrs
jecxz
and
arpl
xchg
test
jno
enter
jo
mov
sub
iret
sbb
mov
subl
loope
pop
mov
ret
aam
jg
sbb
out
pop
dec
pop
out
and
xchg
mov
adc
aaa
test
xchg
ja
and
xor
jae
hlt
ret
insb
arpl
cwtl
sbb
push
push
ret
mov
sbb
dec
lret
ss
mov
fcomps
mov
popf
jp
cmp
inc
mull
fistpll
mull
jo
pop
push
icebp
test
scas
xor
push
or
cmpsb
cmpsl
xchg
dec
dec
push
movsb
jo
out
fldl
cmc
movsb
data16
cmp
popf
ret
jae
xlat
sub
xchg
mov
cmp
es
cmp
or
sub
xchg
and
test
inc
mov
dec
xchg
loop
call
testb
int3
lcall
cmpsl
lret
fdivl
push
ja
daa
insb
in
xchg
mov
pop
lds
nop
aas
pop
mov
push
js
add
ja
xchg
mov
mov
sbb
mov
add
dec
push
sub
or
add
ds
add
mov
shrl
inc
cmp
pop
push
mov
ret
inc
leave
imul
sub
andl
test
jle
scas
xor
pop
sbb
pop
sub
xor
inc
enter
aam
cmp
xchg
push
or
pop
insl
loopne
add
jmp
rcr
scas
mov
scas
dec
loope
ret
mov
enter
loop
mov
xchg
loope
or
adc
inc
adc
add
xorl
fistps
fs
jns
inc
popa
ljmp
inc
test
dec
lret
inc
dec
lock
inc
mov
jl
sahf
lahf
sub
and
mov
lret
xor
cmpsb
stc
mov
cmpsb
std
ds
dec
popa
mov
push
sbb
mov
out
stos
or
decl
test
inc
outsb
mov
int
push
pushf
xchg
cmp
or
lods
mov
sub
xchg
push
and
mov
sbb
jbe
dec
js
sbb
pop
enter
inc
push
ds
loopne
movsl
jb
pop
js
mov
add
loop
in
xor
add
test
sbbl
sub
fucomip
shrb
adc
mull
rolb
push
call
jmp
cld
out
dec
mov
pushf
jge
inc
fstpl
aaa
adc
pusha
dec
je
lock
call
call
jecxz
sbb
repnz
loope
inc
test
outsb
cmp
mov
jae
mov
xor
lods
adc
fbstp
push
ret
cmp
sbb
in
pushf
pop
pop
inc
ss
test
mov
cmpsl
js
clc
xor
out
sbb
jg
std
cmpsb
xlat
loope
cmp
lret
or
sahf
push
fisttpll
outsl
inc
sbb
mov
xor
xor
jmp
sub
icebp
push
sarl
ficoms
or
stos
pop
in
outsl
hlt
cmp
mov
ja
mov
dec
jno
test
adc
sbb
test
shll
daa
mov
dec
dec
adc
push
andb
or
adcl
mov
ss
subb
add
nop
jecxz
cld
outsl
aaa
pop
jmp
cmp
iret
lahf
pushf
nop
lret
sub
ret
xchg
aad
into
inc
or
xchg
push
adc
jne
inc
jne
or
lahf
out
push
push
fistps
bound
xor
push
mov
pushf
sub
rcrl
arpl
out
inc
push
jnp
jmp
popf
xchg
mov
push
adc
push
cltd
sub
or
inc
cmp
mov
dec
mov
push
inc
ret
roll
jno
test
xchg
or
call
in
push
shlb
or
dec
js
push
test
adc
jg
xchg
popa
data16
sarb
fcompl
dec
mov
fiaddl
jb
or
dec
sbb
cld
adc
mov
cld
push
dec
add
scas
bound
jb
mov
sti
popa
test
or
pop
shll
cmp
shll
pop
xor
aas
movsl
xchg
fwait
outsl
sub
adc
loope
adc
dec
lock
inc
dec
mov
pusha
out
ds
cmp
dec
push
mov
divl
std
addw
inc
and
add
push
and
push
dec
inc
fisttpll
adc
and
out
jg
aas
lods
mov
jmp
jmp
or
clc
rcl
inc
int3
mov
mov
jecxz
or
pop
xor
scas
enter
xchg
push
pop
jp
fimuls
inc
dec
jecxz
aaa
cmp
loopne
mov
out
jns
adc
loopne
dec
inc
inc
sbb
dec
repz
and
sub
out
repnz
mov
ja
mov
add
push
shl
out
pop
loop
insl
jb
mov
jg
popf
rorl
shr
push
push
xor
imul
sub
mov
mov
loope
jge
pop
or
subb
nop
mov
jg
inc
pop
jmp
cltd
fisttpl
roll
testb
push
mov
adcl
sahf
dec
pop
cltd
sub
andps
in
xorb
ja
jae
pop
push
mov
lods
jnp
lret
arpl
or
xor
cmp
cli
adcl
push
mov
call
nop
ja
jbe
jne
mov
and
xchg
loope
jae
add
test
lret
dec
jnp
mov
insl
pop
fildll
lea
lcall
xlat
lock
imul
jns
xor
pushf
je
mov
out
vandpd
rclb
push
pop
andl
imul
andl
cmp
sbb
mov
shrl
aas
in
shrb
leave
lcall
xor
pop
xor
push
mov
popa
xor
test
mov
in
inc
adc
mov
pop
repnz
push
and
push
pop
fsubp
test
ret
divb
adc
lea
inc
lret
imul
lock
xchg
pop
mov
adc
push
push
shll
int3
jno
ss
mov
or
mov
pop
loop
jp
xchg
mov
dec
push
rclb
push
mov
cmpsl
xchg
bound
adc
mov
adcb
jo
out
inc
mov
cmp
mov
sbb
gs
push
and
mov
fistps
arpl
and
insb
xchg
jl
jge
push
inc
lock
xchg
and
out
ret
mov
sarl
scas
imul
ja
xor
test
dec
js
movsl
lds
pushf
loope
les
in
jne
xor
addb
inc
repnz
ficoms
push
dec
inc
stc
push
insl
xor
jg
push
dec
and
fdiv
sbb
mov
mov
mov
cmp
inc
pop
lods
push
xchg
cli
xor
mov
pop
mov
clc
lea
nop
dec
mov
aas
lcall
popf
xor
mov
popa
mov
mov
movsl
fisubrl
les
test
jmp
mov
sarb
or
push
jnp
int
mov
or
orl
xor
and
jnp
jmp
inc
or
or
sub
int3
ret
std
sub
xor
xor
jl
test
orb
scas
aas
sub
jnp
jl
leave
and
dec
mov
push
in
xchg
cld
add
loope
pop
mov
jnp
dec
jo
pusha
dec
scas
int3
ret
jp
fwait
cld
in
sahf
mov
pop
lods
mov
xchg
or
cmp
cltd
loope
fcmovbe
in
popa
repz
nop
cmc
jle
addr16
xor
pop
mov
loopne
mov
in
mov
sub
lds
jle
gs
call
mov
jns
xchg
xchg
dec
cmp
inc
ds
xor
mov
sbb
scas
xlat
or
or
push
mov
lret
sub
pop
jae
movsl
dec
add
jmp
inc
mov
insb
daa
jbe
fsubs
outsb
dec
inc
push
repnz
jo
scas
or
out
dec
lea
iret
int3
insb
and
and
sbb
xor
dec
add
hlt
ljmp
into
cltd
iret
out
in
or
std
pop
fs
push
leave
fisubs
in
pop
and
jp
sti
mov
ja
and
push
mov
in
mov
lahf
mov
insl
dec
adc
and
test
into
mov
bound
add
dec
mov
cmc
loop
out
push
sahf
pushf
ret
pop
mov
dec
jb
test
ja
inc
add
movsl
scas
ss
jbe
and
push
into
push
outsb
lods
out
jg
add
push
adc
cmpsb
cld
pop
iret
pop
xor
lret
mov
push
repz
stos
mov
xor
inc
xchg
ds
ror
ret
sub
push
jge
mov
mov
pop
pop
pop
mov
jae
sub
stc
push
fisubrs
imul
fstl
fidivrl
and
pusha
pop
jno
cmc
filds
xchg
orl
inc
lret
push
pop
push
push
add
out
cmpsb
mov
xchg
sbb
loopne
pop
stos
mov
xchg
hlt
inc
mov
fldl
lret
dec
notl
jbe
nop
push
push
push
pop
scas
pop
cmp
lods
adc
cmpsl
pop
add
lds
les
outsl
inc
sbb
hlt
sub
or
sarb
cmpsl
cmpl
add
scas
adc
and
mov
icebp
pop
insl
pushf
mov
mov
inc
std
mov
cmp
pop
subb
roll
movsb
xor
scas
sub
push
imul
mov
imul
cmp
test
imul
cltd
xchg
mov
enter
test
jb
bound
rclb
aas
call
in
std
and
stos
jbe
dec
imull
in
cmpsl
mov
and
mov
in
imul
xchg
xor
mov
xor
mov
sub
in
pop
mov
add
push
jge
dec
add
inc
mov
outsb
movsl
enter
lcall
mov
dec
xor
shl
repz
fmul
mov
icebp
mov
movsb
imulb
in
cmpsb
sbb
iret
inc
jmp
std
int
aam
fnstsw
lds
dec
xchg
pop
cltd
mov
aam
mov
mov
ret
jge
mov
aas
mov
out
jmp
insl
imul
adcb
add
clc
mov
jno
mov
cmp
pop
jb
in
addr16
je
or
adc
or
popa
les
xor
stos
sub
jp
push
ret
jg
je
pop
dec
insb
in
sbb
mov
push
nop
jb
in
inc
adc
dec
dec
std
inc
pop
or
inc
inc
inc
push
mov
pop
sbb
sub
lock
push
cs
push
push
test
ss
push
jno
nop
mov
cli
cmpsb
sbb
mov
push
rcrl
xchg
insl
cwtl
scas
imul
jo
dec
leave
ret
pop
sbb
or
sub
jns
les
jecxz
and
out
xor
psrld
addr16
fbstp
inc
sub
out
bnd
inc
scas
cmc
inc
repnz
xchg
test
cli
scas
xor
cld
mov
xchg
sbb
scas
loop
test
push
in
mov
pop
scas
xlat
lcall
int
lea
das
inc
cwtl
data16
pop
shl
std
mov
popf
jge
sbb
sti
xlat
iret
sub
xchg
in
out
and
ret
outsl
mov
pop
shlb
imul
in
hlt
bound
inc
xchg
fwait
pop
outsb
lret
sbb
dec
das
pop
pop
stos
mov
lods
push
imul
fwait
sbb
test
fistl
lret
xchg
xchg
mov
lods
adc
pop
cmpsb
pusha
fsts
lods
xor
xchg
mov
aad
nop
cmpsl
rcrl
and
aas
pop
inc
ljmp
lock
cmp
inc
mov
mov
jae
rorl
stos
fwait
mov
cmc
lret
out
fisubl
add
mov
dec
xchg
bound
gs
mov
xchg
inc
fiadds
scas
mov
sub
dec
mov
jmp
cltd
test
jecxz
and
adc
jne
cmp
hlt
xchg
ficoml
mov
repnz
cmpsl
xchg
jno
leave
loope
jge
shrl
rcrb
roll
push
popf
xor
andb
jp
js
shlb
add
push
mov
fstp
xchg
xor
pop
sub
pop
call
xchg
fmul
cltd
inc
faddp
push
das
sub
arpl
and
outsb
pop
ljmp
cmc
mov
sub
xchg
cltd
fidivl
xor
pop
stc
jl
sub
mov
ja
in
movsl
cmpsl
andb
clc
inc
push
lcall
mov
jno
shll
xor
stc
add
in
leave
repnz
adc
dec
aaa
cmp
popa
add
fnstcw
mov
cmpb
into
fisttpll
out
orb
es
xchg
adc
or
movsb
mov
push
and
rolb
orb
cmp
ret
and
data16
xor
addr16
mov
in
mov
jne
sbb
sarl
push
lods
stos
enter
push
and
cmp
adc
repnz
jnp
pop
xor
jo
jne
fistpll
fstpl
sub
or
xor
outsb
lods
fnstcw
insl
sti
mov
cltd
and
cs
rcr
ljmp
add
sub
sar
shrl
cmp
cmp
xorl
dec
and
shlb
mov
xlat
fdiv
mov
jae
inc
dec
or
and
jbe
cmp
xchg
bound
pop
cmc
daa
movsl
sbb
cld
xlat
mov
jb
mov
xchg
mov
lea
pop
or
out
fldenv
xor
lock
push
shlb
orps
es
test
out
int3
out
xchg
jae
in
fsts
jno
in
pop
pushf
loopne
sub
je
xchg
push
jno
ja
in
popl
pushf
jns
ret
and
xor
je
jg
mov
jno
add
mov
jnp
fucomp
std
movsb
fstpt
cmp
out
mov
cmp
nop
adc
dec
jae
and
fiadds
inc
pop
pop
sarl
pop
or
add
mov
add
sub
pop
push
cmp
enter
mov
test
cpuid
out
pop
mov
shlb
insl
scas
xchg
repnz
testb
ja
jmp
cld
aas
push
mov
fwait
pop
sbb
or
cmp
outsl
cs
test
jno
lcall
inc
cmp
das
sbb
jnp
mov
add
rol
pop
xchg
sub
int
je
pop
adc
inc
pop
jmp
popf
mov
mov
dec
jb
mov
pop
lock
out
ret
mov
popa
lcall
in
aam
call
inc
mov
cmp
lahf
cld
xor
pop
inc
mov
cmove
lret
lock
popf
mov
mov
mov
int
add
lods
shll
push
push
sbb
mov
fidivrs
imul
in
mov
aaa
insl
sbb
lret
push
cmp
bound
iret
mov
jbe
dec
ljmp
inc
stc
or
shll
adcl
xchg
xor
ja
pop
jo
mov
jns
xlat
xchg
xor
xchg
mov
adc
dec
sbb
pop
daa
push
mov
adcl
sbb
or
lods
sub
xlat
mov
aas
push
sub
push
dec
js
decl
les
cmp
push
imul
int
xor
mov
dec
mov
or
pop
cmp
sbb
jecxz
imul
mov
xorb
ja
imul
mov
lahf
ds
inc
insl
sbb
lock
test
adc
andl
adc
xorl
or
cs
jno
fisttpl
cmp
mov
push
cmp
daa
mov
movsb
shll
sti
outsl
add
and
test
mov
lcall
lock
rcrl
test
test
mov
push
mov
aad
cmpl
jecxz
dec
mov
mov
loope
sbbl
push
or
add
cmp
or
xchg
cmc
fsts
ror
insb
in
xchg
jne
orb
xchg
aam
adc
fnstcw
jle
jo
or
sub
popa
xor
sub
imul
rolb
inc
jbe
stos
lcall
mov
shll
xchg
scas
ret
sti
flds
add
push
repz
add
jle
mov
ret
in
mov
pop
cmp
bound
stc
pop
sbb
xor
repz
xchg
cwtl
xor
add
lcall
cmpsl
add
or
mov
adc
jns
lea
scas
inc
jno
test
lock
cmc
xchg
or
xchg
in
test
outsb
roll
xchg
rorb
push
outsb
cld
lcall
popa
je
orb
mov
push
add
xchg
stos
shlb
inc
int
mov
decl
mov
loopne
rcrb
mov
cmp
mov
inc
pop
pop
pushf
clc
sbb
xchg
xchg
shlb
push
push
ret
xchg
xchg
and
cmp
outsb
insl
lods
scas
sub
mov
cmp
out
jns
mov
push
adc
test
daa
inc
xor
push
xor
mov
inc
sbb
aam
jo
xchg
or
or
scas
insl
adc
jo
test
pop
mov
pop
mov
xchg
cmp
and
jne
push
cmpsl
dec
icebp
mov
cmp
int3
icebp
sub
rcrb
xlat
popa
addr16
push
mov
mov
add
cs
stos
ret
out
pop
and
popa
adc
cmp
ret
mov
pop
xor
push
xor
sbb
jne
and
pop
cmp
and
pop
outsb
int
cmpsl
jnp
lcall
mov
jge
pop
in
xor
mov
mov
push
jo
insb
mov
jae
xchg
pop
and
dec
iret
rol
push
mov
xor
push
aas
sbb
repnz
das
mov
mov
pop
lea
in
sbb
data16
xor
fwait
cs
in
pop
push
push
pop
sbb
and
mul
adc
popf
pop
mov
mov
pop
sbb
jle
iret
sbb
sub
in
push
leave
jmp
mov
push
fmull
adc
lret
int
xchg
pop
sbb
or
aas
mov
cs
dec
sub
and
stc
test
mov
mov
sahf
inc
out
dec
push
arpl
getsec
pop
adc
test
fcomp
push
jle
stos
push
pop
decw
loope
test
cmpsl
sbb
adc
cmc
aaa
test
outsl
inc
movsl
push
jg
loope
lods
rolb
pop
shll
out
in
shrb
js
cmp
sbb
loope
inc
mov
test
es
iret
lahf
dec
mov
mov
fldz
icebp
push
sbb
push
or
mov
push
fwait
push
jno
inc
cmp
sbb
jo
mov
lret
lods
and
lahf
cld
push
scas
and
mov
or
xchg
pop
scas
imul
cmc
lahf
xlat
lock
jb
dec
mov
leave
lret
leave
out
sbb
aaa
and
iret
leave
jmp
sti
push
test
sub
test
mov
cmpl
push
jp
xchg
orl
mov
cwtl
push
pop
add
push
and
mov
out
ljmp
add
inc
cltd
mov
int3
arpl
inc
mov
clc
inc
push
js
pushf
outsl
inc
xchg
outsl
add
gs
fstpl
dec
sbb
je
sbb
fdivrl
loop
das
les
aad
iret
sarb
in
push
fisttpl
cli
or
push
push
add
movsb
ja
jg
aad
cmc
sub
mov
lods
rol
push
mov
arpl
mov
pop
imul
adc
cmpb
movsl
adc
loope
ds
dec
dec
les
mov
xchg
push
sbb
jae
mov
scas
xlat
adc
dec
leave
repnz
mov
scas
addl
push
fwait
aam
and
daa
jge
pop
and
push
pop
jg
int3
sbb
shlb
jb
push
sti
call
xchg
out
aaa
imul
dec
outsl
psllw
mov
fsubl
adc
fstl
sbb
je
scas
jge
ret
movsl
test
cld
jne
idiv
pop
xchg
dec
adc
add
sub
pop
loopne
mov
sub
inc
dec
pop
add
scas
lret
push
divl
cmp
and
leave
rcr
shl
popf
jle
adc
mov
dec
mov
js
jl
xchg
push
mov
jbe
adc
xor
jg
in
in
js
in
scas
and
sub
xchg
xchg
mov
push
lods
jge
adc
rcr
mov
and
sbbb
pop
adc
sub
popa
dec
lahf
fnstcw
push
cli
mov
dec
pop
mov
and
int3
mov
pop
nop
sbb
xchg
das
lods
lods
pop
cmp
data16
mov
mov
xor
mov
popa
cltd
jns
or
cmp
push
packuswb
popa
sbb
push
pop
in
xchg
outsb
mov
into
into
aas
push
sub
lods
jo
inc
inc
jnp
mov
pop
fdivs
inc
lahf
sbb
lea
cmp
cmc
loop
ds
sbb
es
in
cmpsl
es
in
jno
xchg
sbbl
sub
or
dec
dec
mov
adc
push
addr16
mov
jae
sti
push
mov
mov
fistl
jb
das
sub
dec
in
movsl
ss
sbb
mov
inc
adc
or
sub
out
nop
inc
xlat
sbb
inc
dec
ret
xchg
sbb
jb
mov
stc
adc
dec
shl
sbb
jae
fldt
push
mov
out
or
add
ret
mov
shlb
add
adc
pop
or
in
xor
mov
fnstenv
pushf
cmp
cli
mov
jg
pop
leave
hlt
mov
adc
das
icebp
add
ja
dec
cltd
add
in
push
mov
and
dec
dec
jno
insl
mov
gs
fcoms
and
mov
and
andb
mov
pop
pop
jno
push
fiadds
pop
lods
or
lea
push
push
rcll
mov
xchg
xorb
cmpsl
cwtl
push
cmp
clc
and
or
sbb
out
arpl
imul
in
je
dec
shl
stos
loope
jmp
int3
sub
jle
adcb
mov
xchg
dec
imul
in
mov
sub
xchg
lahf
clc
xchg
xor
cmpsb
jp
and
push
jge
loope
bound
push
repz
and
push
push
cmp
es
mov
xor
mov
loopne
pop
clc
push
push
nop
fdivp
lahf
gs
stos
movsb
xchg
mov
dec
sbb
rcr
push
shr
pop
xlat
xor
addb
jge
mov
jnp
das
push
jl
movsl
aas
ja
mov
ffree
aaa
mov
jg
push
lcall
pop
popf
ret
test
stos
ret
aam
xchg
addb
xor
test
cmp
sub
sub
add
mov
out
sbb
jae
mov
out
push
or
fildll
mov
adc
xor
iret
stc
out
mov
les
mull
mov
cmp
jne
mov
mov
jecxz
lods
pusha
je
mov
movsb
mov
sbb
hlt
push
push
stos
imul
jnp
test
int
inc
inc
pop
mov
lret
fcompl
adc
out
fwait
mov
dec
call
pusha
xor
mov
pop
or
add
in
les
mov
mov
das
add
pop
add
lahf
adc
aas
ret
adc
pop
pop
aam
jb
inc
and
iret
out
insl
mov
push
add
pushf
pop
jmp
mov
hlt
xor
into
mov
add
lcall
cmp
push
pop
mov
cmpsw
pusha
add
pop
jae
lock
dec
xor
sub
mov
sbb
pop
addr16
add
and
push
pop
je
xchg
js
add
jb
pop
push
sbb
test
and
mov
jmp
popf
jns
pop
test
mov
pop
pop
test
pop
pop
fsubp
sub
or
xor
in
sbbb
pusha
xchg
pop
adc
and
in
lods
xchg
xlat
or
cmp
push
bnd
pushf
dec
dec
jno
test
adc
mov
jo
xchg
andb
xor
fcomps
lcall
jne
or
push
adc
fiadds
mov
js
enter
adc
pop
insb
hlt
ret
test
xor
cmp
adc
inc
mov
xchg
icebp
cmpsl
sbb
mov
mov
sub
pop
rcll
xchg
jmp
push
pop
fimull
push
lea
pop
scas
mov
cmp
cltd
sub
test
and
jp
in
mov
cmp
jns
cmp
xchg
add
xchg
shr
xor
sbb
js
xchg
jnp
sahf
div
rcrl
inc
add
call
jbe
jle
fwait
aas
sub
cli
notl
imul
mov
push
or
rolb
clc
enter
jp
fbld
adc
stos
lret
loop
mov
test
push
loope
jmp
pop
mov
fdivrl
push
shl
mov
fimuls
imul
imul
aam
call
and
sbb
ret
xor
adc
adc
cmp
and
insl
xor
test
mov
movsl
lcall
sti
sbbb
cmp
inc
sub
js
sub
inc
inc
push
cmp
and
outsb
jno
sahf
jno
xor
jl
in
inc
pop
inc
loopne
subl
fists
adc
fwait
fs
pusha
lds
xor
add
hlt
or
repz
pop
stc
fisubs
js
jbe
test
das
cmp
insb
icebp
lcall
gs
in
xor
pop
arpl
inc
or
xchg
mov
xor
fwait
jno
adc
cmp
adc
cmp
jge
push
mov
inc
insb
ret
int3
pop
stc
sti
inc
hlt
andb
inc
cmp
inc
and
mov
rcrb
dec
dec
push
jl
in
aas
aam
into
push
fs
cmpsb
sbb
repz
stos
insl
adc
bound
pop
dec
std
mov
mov
and
in
cltd
mov
dec
jb
sub
mov
into
cli
fs
mov
jno
ret
bnd
xchg
test
pushf
mov
cmp
je
arpl
xchg
jecxz
xor
lret
arpl
ja
xchg
add
js
dec
loope
sbb
fcoms
mov
fsubrp
mov
sarl
adc
jns
int3
test
inc
fisubs
jg
adc
add
cmp
xor
xor
or
push
or
mov
cmc
inc
push
popa
pop
loop
xor
dec
push
aad
jg
or
ljmp
ljmp
aad
xchg
out
jp
lret
mov
cmpl
and
mov
push
jo
mov
mov
cs
pop
push
sbb
and
mov
and
js
ljmp
sub
mov
psrlw
push
and
pop
sarl
aam
xchg
movsl
cmc
popf
inc
inc
insb
fsubrs
icebp
addb
dec
aaa
lock
sub
pop
out
fs
ret
sbb
jnp
mov
daa
std
add
jbe
bound
inc
mov
ficomps
xchg
andl
inc
inc
shlb
adc
fucomip
push
mov
push
mov
aas
pop
hlt
mov
xor
icebp
dec
cmp
insl
add
dec
mov
jo
shr
call
mov
sar
push
add
push
sbb
pop
mov
lcall
outsl
xchg
lods
adc
or
cld
xchg
test
imul
push
test
mov
add
fisubrs
cmpsb
sbbl
adc
push
jnp
mov
mov
or
mov
scas
add
iret
dec
push
loopne
int
int
addr16
dec
rol
imul
mov
xchg
fcoml
dec
push
insl
push
ret
les
es
pop
ds
inc
scas
out
mov
test
ja
mov
fnstenv
mov
mov
roll
loope
pop
out
in
stos
mov
movsb
int
dec
fldenv
mov
or
jp
fistl
mov
inc
dec
sub
push
push
inc
mov
mov
dec
call
xor
mov
jecxz
hlt
shrb
and
mov
es
sub
or
lods
adc
add
lea
push
popfw
pop
icebp
sbb
mov
bound
mov
jbe
lods
push
icebp
int
mov
or
jecxz
push
adc
fs
add
out
in
cltd
pop
ret
pop
outsb
push
inc
subl
shlb
rcll
andl
push
push
ljmp
mov
out
mov
jmp
xor
xor
scas
iret
add
cmp
out
add
das
mov
sub
fisttps
lret
std
insb
mov
sbb
rol
stos
pusha
jmp
and
js
sbb
int3
imul
sahf
popf
push
bswap
sbb
movsb
xchg
inc
xor
xor
sub
andl
add
mov
into
pop
lahf
mov
cmpl
jmp
movsl
xlat
iret
in
xchg
pop
popa
jecxz
in
push
pop
sbb
mov
mov
sbb
stos
add
xor
mov
test
popa
fcoml
orb
dec
xor
dec
jbe
mov
das
or
push
and
sbb
dec
xchg
pusha
mov
mov
lcall
mov
movsl
ret
cmpsl
in
sahf
adc
jge
pop
nop
inc
inc
repnz
ja
mov
push
pushf
jne
lock
or
scas
js
test
cmpsb
shr
jne
shll
call
add
adc
mov
add
outsl
orl
stos
lea
movsb
jecxz
int3
sbb
addl
pop
inc
movsb
xchg
ret
inc
jecxz
mov
pop
jno
jae
push
adc
test
and
dec
ja
shl
cmp
js
pop
out
or
icebp
xchg
mov
test
lcall
movsl
dec
shrl
cwtl
sbb
outsb
pop
and
xchg
testl
int
jp
lds
sbbb
lds
test
add
stos
pusha
inc
push
lret
add
pop
ljmp
repnz
adc
fsubl
xchg
adc
sub
dec
add
rcrb
rclb
add
push
xchg
fwait
aas
sbb
packssdw
inc
dec
outsb
sbb
popa
pusha
or
cmp
sbb
xor
dec
out
ja
mov
lock
test
dec
je
imul
jo
or
push
or
dec
rol
xlat
scas
out
sbb
sarb
mov
mov
inc
mov
or
mov
jl
and
sbb
icebp
rcll
lret
pop
xor
and
arpl
fidivrs
jne
jmp
test
adc
xchg
out
mov
dec
add
idivb
lret
cmp
test
repnz
movsb
faddl
cmpsb
int3
std
lock
jae
mov
xchg
je
cmp
inc
sub
dec
jge
push
pop
sub
jbe
inc
hlt
pop
pop
add
std
pop
xchg
idivl
sub
je
inc
loope
pop
mov
int3
ret
jbe
inc
popa
xor
clc
movsb
outsl
mov
out
rorb
xchg
add
andl
repnz
mov
inc
fimull
bound
sbb
push
jle
sbb
fnstenv
in
inc
fprem1
ficomps
je
movsl
push
and
add
cld
cs
std
and
xchg
fwait
mov
icebp
fidivrl
sub
dec
fsubr
push
mov
cwtl
in
shrb
out
fnstcw
adc
int
jmp
ret
test
lcall
xchg
push
mov
mov
inc
inc
xorb
xchg
or
incl
mov
mov
roll
jmp
fstpl
mov
jnp
pusha
sbb
push
pop
gs
pop
ret
inc
ret
add
mov
lea
in
in
and
pusha
jnp
sub
fwait
sti
insl
test
inc
push
xchg
psrlq
inc
mov
sub
repz
insl
movsb
and
fistl
cmpsb
dec
jns
cmp
mov
sahf
jo
mov
mov
mov
mov
dec
cmp
fwait
push
push
sbb
mov
pop
jmp
sub
xor
fstps
cltd
cmpsl
xchg
lods
cmp
mov
in
sub
mov
inc
lods
repz
cmc
sub
mov
cli
imul
cmp
sbbl
dec
mov
inc
pop
jno
mov
xchg
loop
test
mov
push
add
mov
xchg
inc
sub
pop
push
push
cs
aas
ret
lret
sti
in
pop
pop
mov
and
sahf
iret
sub
jge
iret
leave
sbb
dec
pop
mov
jge
pop
jg
imul
cmpsl
xchg
add
insb
mov
shrb
repnz
jl
and
into
push
and
pop
fs
rcrb
mov
add
xchg
outsb
mov
sub
fidivs
icebp
push
call
ds
out
fists
repz
imul
sti
mov
cmpsl
out
rorl
xchg
push
int3
push
fwait
mov
mov
pushf
mov
cmp
adc
enter
jo
in
mov
jb
xor
iret
test
mov
sub
xor
adc
inc
mov
mov
int3
stos
push
mov
pop
enter
or
addb
jge
lods
ss
jae
xlat
xchg
jle
int
sti
aaa
pop
fstps
out
shlb
int
jb
add
daa
adc
xchg
scas
les
adc
popa
call
lret
ret
subb
push
divl
arpl
sub
xchg
adc
add
pusha
into
pop
mov
xchg
xor
je
pop
movsl
xchg
lret
iret
mov
pop
dec
cli
jl
sbb
out
inc
mov
xor
cmp
dec
jae
cltd
stos
shll
jg
and
lret
dec
sub
movsl
ret
test
jne
pop
inc
rolb
fsubs
out
repnz
in
sub
lret
adc
adc
inc
sti
mov
push
cld
cmp
ret
sbb
push
js
sti
sub
inc
xchg
hlt
dec
jne
shl
popf
int
mov
sbb
rcl
and
test
inc
scas
push
js
mov
push
ss
add
movsb
fcoms
lods
ljmp
push
call
outsl
cli
pop
es
push
cmp
ret
pop
mov
push
imul
addb
xchg
movsl
call
sbb
inc
xorb
push
pop
lret
andb
aas
push
cld
inc
mov
sub
mov
jecxz
or
push
dec
jne
mov
sbb
loop
or
pop
inc
sbb
pop
mov
sbb
dec
xor
jno
cmpsb
ljmp
sar
mov
fbstp
mov
push
xor
jb
pop
iret
push
dec
fsubl
mov
inc
cld
xor
das
orl
pop
popa
fidivrl
iret
xlat
mulb
decb
enter
inc
addb
rcr
or
sub
mov
jmp
xchg
popa
pusha
sub
lret
adc
das
fs
cmp
repnz
inc
ss
jno
inc
dec
add
adc
mov
and
ror
outsb
pusha
fdivrs
scas
xchg
jae
es
sahf
sbb
push
pop
cwtl
xchg
jns
mov
fcomps
push
sbb
push
in
sbb
add
lods
mov
jo
xor
dec
push
xchg
fisttpll
imul
push
call
sbbl
push
inc
hlt
movsl
fs
and
xor
lods
fsubrp
xlat
inc
mov
dec
push
sub
int3
push
sar
popl
xchg
pop
ss
lock
push
push
and
xchg
lret
in
sbb
xor
sbb
fistpl
adc
mov
jl
add
xor
pusha
wbinvd
shrb
pusha
dec
pop
fs
sahf
mov
popf
cpuid
mov
jb
test
dec
movsb
cmp
xlat
pusha
lods
mov
shr
mov
shrb
adc
push
ss
sub
or
ss
and
movsb
jmp
hlt
rclb
test
enter
cmp
jmp
movb
dec
in
and
lods
outsb
test
xor
mov
sbb
js
cld
inc
inc
jle
cmpsl
les
push
jg
imul
sbb
sti
mov
imul
push
stos
pop
movsl
and
insl
das
add
inc
popa
scas
dec
or
inc
lock
pop
cmp
test
stc
flds
in
aas
cwtl
daa
mov
ficompl
cltd
jno,pt
add
jge
addb
fimuls
push
sub
aaa
cmp
out
aaa
les
test
or
ljmp
pop
ss
in
insl
and
lea
jo
jbe
sbb
sub
mov
xchg
jp
xor
dec
xchg
sub
ja
scas
pop
lret
repnz
push
daa
or
lret
cmc
mov
hlt
int3
pushf
cmp
movsb
jo
mov
jecxz
js
cmp
xor
clc
jecxz
cmp
imul
push
test
xchg
or
push
jae
addr16
inc
stos
std
sbb
push
test
push
mov
mov
ret
aaa
mov
add
xlat
sbb
mov
pop
jno
add
cmp
pop
sbb
scas
lods
add
pop
dec
loopne
adc
mov
int3
fcomip
xor
aad
leave
mov
sub
and
cmp
adc
push
dec
sbb
pop
aas
push
cmpsb
jb
aaa
nop
mov
adc
cwtl
std
sbb
xchg
xor
test
push
mov
in
and
inc
int3
fcmove
cmp
cmp
fldenv
push
cwtl
cwtl
pop
jl
xlat
out
push
sbb
and
ret
mul
push
punpckhdq
aas
lds
loopne
pop
leave
and
test
in
cmpl
repz
repz
rorb
sahf
mov
mov
ja
mov
and
mov
or
lock
cld
push
hlt
insl
pop
sub
xlat
xor
ffree
pop
push
std
mov
mov
mov
xor
add
fiadds
std
cmp
cmp
inc
shrl
jbe
push
lcall
popa
sbb
gs
xor
lods
jp
test
adc
hlt
aam
lock
mov
movsb
scas
out
scas
mov
push
in
xlat
sbb
add
and
mov
xor
push
xchg
xchg
rolb
js
sbb
in
dec
ja
aad
insl
xor
sti
or
lock
int3
repnz
loopne
dec
pop
inc
xchg
neg
inc
pop
scas
clc
stc
add
pop
cmp
cmpsb
pop
lret
xchg
mov
std
cli
pop
inc
idivl
ret
nop
xlat
mov
out
mov
push
pop
or
mov
stc
cmp
jnp
hlt
lds
stc
mov
push
or
daa
cmp
sub
ret
push
hlt
cld
inc
mov
out
jbe
in
adc
jge
icebp
test
dec
adc
call
jmp
dec
pop
int3
adc
xor
ror
cmpsl
call
sub
dec
mov
leave
add
lods
jns
jo
and
sbb
cld
jecxz
jl
mov
push
imul
scas
ljmp
int3
mov
jnp
stc
ret
fstpt
jae
sbb
sub
sub
ret
clc
out
test
aad
notl
push
cmpsb
cwtl
daa
xchg
int3
jo
shlb
cmpsl
hlt
ret
leave
or
mov
lcall
mov
push
idivl
pushl
sub
jp
outsl
pop
iret
mov
or
inc
mov
xchg
and
enter
inc
stos
and
lods
dec
sbb
push
icebp
mov
jb
lods
pop
push
mov
lea
lock
andb
into
cli
jb
mov
jae
mov
dec
jg
ficompl
lahf
inc
add
fiaddl
sbb
jp
mov
lret
enter
sbb
or
aam
inc
cltd
fmul
pop
or
push
cmove
loope
subl
data16
xlat
inc
test
movsb
mov
iret
push
xchg
sub
inc
mov
test
push
xacquire
sub
scas
xchg
push
negl
xchg
cwtl
gs
sub
cmpl
movsl
mov
inc
cmp
or
push
inc
je
inc
lea
mov
adc
jnp
cmp
push
jae
lcall
les
loope
insl
mov
out
iret
std
dec
sub
sbb
add
inc
test
sar
jl
sbb
pushf
insb
aam
jns
lahf
cmpsl
dec
test
cmp
test
mov
mov
insb
outsb
jp
test
test
mov
xchg
sbb
cmpl
enter
cmp
sbb
test
ret
out
out
and
aas
repnz
aas
repnz
mov
add
das
xchg
test
jg
dec
decl
adc
iret
dec
add
push
push
stos
xchg
loop
insl
pop
scas
jnp
push
std
std
pop
mull
icebp
call
pop
ljmp
ja
adc
lds
mov
inc
pusha
imul
cmp
fwait
loopne
mov
out
adc
xor
jge
adc
fwait
or
ret
hlt
push
add
daa
popf
adc
add
fcmovnu
adc
dec
push
int
cmpb
test
pusha
dec
cmc
mov
cli
clc
adc
fadds
jnp
inc
xchg
por
addl
jne
jb
test
sub
shll
es
popf
jmp
mov
push
mov
loope
popf
dec
sarl
imul
sbb
pop
xor
bound
lea
adc
jne
movb
jbe
push
aam
bound
leave
fsubs
filds
gs
in
fcmovbe
xchg
xchg
lahf
xchg
push
xor
loope
inc
pop
pop
lock
and
and
cmp
js
push
xchg
mov
dec
mov
sub
adc
push
ja
lods
jne
daa
movsl
xchg
xor
and
out
dec
pusha
cltd
mov
in
mov
test
push
int3
xor
push
clc
lock
loop
fidivrs
das
in
je
sub
cmp
movsl
jno
pop
ja
mul
xor
enter
fbstp
cmp
pop
enter
pop
mov
adc
mov
push
cmc
imul
and
pop
in
jmp
or
ret
pop
in
cld
faddl
std
mov
jne
mov
call
dec
adc
sbb
out
dec
add
fnsave
sub
fcomps
mov
ret
cmpl
addr16
xchg
out
dec
sub
xor
jecxz
lds
sub
cmp
jae
jmp
ret
call
mov
fsubl
jecxz
lret
dec
sbb
lret
test
in
pusha
mov
fmull
mov
adc
inc
mov
out
lock
out
or
test
mov
and
and
pop
sarb
vmovups
loop
or
lret
addr16
push
add
sbb
ret
mov
bound
jnp
or
mov
add
lds
int
lea
fstl
jl
mov
add
inc
rorl
nop
mov
xchg
pop
pop
xchg
sbb
dec
and
jns
out
pop
cmp
dec
jecxz
push
out
das
mov
rclb
in
loope
pop
adc
dec
inc
test
fcmovb
cmp
and
out
lea
jle
pushf
sub
add
idivl
das
stos
insl
jmp
mov
xchg
loopne
mov
jae
pop
cmpsb
dec
sahf
push
out
add
mov
jbe
pusha
add
xchg
rcrl
pop
pop
daa
into
movsl
mov
bound
aaa
iret
fdivs
imul
lea
in
fwait
movsb
push
fadd
mov
je
cld
imul
in
and
jo
sti
loope
popf
xor
into
add
std
xchg
sub
ljmp
xchg
cmovnp
leave
int3
mov
fisubrl
add
add
add
js
sub
push
imul
sbb
rorb
rcrb
aam
cmp
mov
add
push
test
adcb
or
icebp
fstps
cmp
fiadds
insb
hlt
int3
dec
popa
xlat
hlt
dec
out
aad
push
mov
mov
add
sbb
cmpsl
aam
cmpsb
cld
movd
sub
movsb
outsb
inc
aaa
into
mov
xor
std
test
adc
jbe
or
push
cs
cmp
mov
test
dec
push
fistl
clc
test
mov
fcoml
into
nop
gs
mov
loope
fistpll
sub
bound
mov
popa
fcom
cld
and
xchg
adc
fwait
repz
xor
lock
xor
cmp
cmp
and
mov
frstor
stos
inc
cmp
mov
inc
aam
dec
aam
cli
push
imull
fsubs
imul
lret
cmp
jmp
scas
imul
popaw
lods
ret
sub
movsl
dec
mov
jl
rcll
mov
fdivrl
je
stos
lock
imul
hlt
ss
xor
pop
xor
insb
pop
aam
inc
jnp
lret
mov
in
aad
and
push
lock
mov
rcrl
scas
sbb
fdivrs
fcmove
popf
aaa
inc
xor
mov
push
inc
inc
cld
xor
sbb
outsb
jns
or
xlat
bound
inc
add
les
or
dec
mov
cmpsb
fistl
imul
shld
loope
fstl
xchg
push
dec
jns
cmp
mov
pop
push
or
aaa
push
sub
mov
out
mov
orl
jge
mov
ret
cmp
shrl
hlt
mov
jge
pop
ffreep
cld
mov
into
xchg
dec
mov
xchg
test
or
les
inc
std
repnz
shll
daa
in
mov
int3
mov
jg
xchg
push
push
test
cltd
inc
dec
pop
insl
cs
push
jae
push
cli
js
pop
test
sub
mov
cld
cmpsb
sti
cwtl
xchg
arpl
mov
pop
jge
jno
add
int3
jns
mov
inc
push
or
lret
imul
cli
push
addr16
mov
jbe
push
jge
sbb
mov
mov
xor
cmpb
mov
xchg
jo
ret
aas
lds
xchg
sbb
adc
mov
bound
sbb
add
xor
inc
js
es
lret
and
int
adcl
xchg
out
in
aas
js
push
fcmovu
sahf
scas
xchg
fadd
stos
inc
adc
leave
cmp
pop
push
repnz
dec
fnstenv
adc
std
lret
movsl
push
rorl
push
dec
and
pop
addr16
leave
pop
and
cwtl
sbb
out
inc
sahf
or
insl
cli
sti
out
inc
dec
rep
mov
sbb
fistpll
mov
jbe
jnp
lahf
jp
leave
inc
fwait
rcll
fnstcw
or
loop
outsl
ficoms
inc
sub
push
pop
mov
pop
sub
sbb
push
add
mov
addl
pop
xchg
mov
inc
movsl
cld
cli
jl
pop
lods
mov
es
ret
xchg
imul
xchg
sub
jo
pop
scas
les
movsb
sarl
lock
and
mov
pop
add
push
pop
jg
shlb
dec
or
stos
mov
fisttpl
sbb
push
or
pop
inc
hlt
adc
add
gs
lods
dec
int
imul
cwtl
sub
sar
arpl
jnp
sbb
test
dec
mov
data16
xchg
popa
xor
pop
adc
adc
inc
movsb
sbb
jge
add
xor
shrl
lods
add
push
xor
setp
inc
mov
cmc
mov
cmp
and
inc
fs
shlb
inc
and
das
test
xchg
imul
jle
dec
sahf
jecxz
jl
lods
pushf
aam
movsl
shl
sbb
int3
pop
movsb
fcos
in
popa
stos
movsl
sbb
inc
sbb
mov
into
mov
cmc
add
movsl
mov
sub
scas
and
mov
lahf
inc
cmp
bound
jb
movq
ror
aaa
leave
test
cmp
inc
and
mov
scas
sbb
cltd
in
notb
stos
shll
mov
push
dec
xor
and
inc
inc
mov
stos
push
pop
bswap
push
and
cli
jle
sbb
add
lahf
shrb
xchg
jp
push
mov
popa
shll
int
and
or
ljmp
mov
mov
mov
or
push
push
inc
pop
mov
gs
pop
hlt
daa
out
into
mov
cmp
js
push
into
icebp
fldl
cltd
push
sti
inc
cmp
mov
dec
inc
sbb
sub
test
add
cld
jbe
or
pop
pop
shll
test
push
and
xchg
dec
daa
mov
out
adc
arpl
imul
adc
in
int3
aad
outsb
push
jmp
dec
loop
sbb
inc
movsl
dec
inc
loopne
and
jne
or
adc
fwait
test
cld
pop
shr
push
repnz
mov
push
lret
cmp
sbb
pop
pop
mov
cwtl
mov
cmp
cmp
xchg
mov
es
lcall
lahf
iret
negl
fcomps
js
aaa
pushf
xchg
mov
jne
ret
sub
sub
xor
ret
cmp
sub
adc
nop
and
mov
pushf
inc
cmp
adc
bound
repz
movsb
push
or
test
jp
pop
out
add
xchg
add
push
das
xor
sub
loopne
jbe
mov
jae
addr16
pushf
pop
mov
fmull
pop
push
pop
jg
stc
mov
iret
mov
jo
cld
idiv
cmpsb
push
mov
sbb
xlat
arpl
and
push
scas
clc
add
pushf
push
dec
insb
sub
mov
cltd
popa
pop
lahf
sbb
cli
pushf
popl
and
or
es
adc
push
jo
nop
xchg
push
mov
jle
mov
adc
orb
adc
dec
imul
out
mov
loope
iret
scas
stos
orb
sub
pop
fwait
jno
imul
adc
outsb
sbb
dec
jp
fldcw
cmp
in
adc
xor
jb
pop
jae
add
int
sti
jb
dec
iret
add
cmpb
jge
in
and
imul
fsub
int
pushf
sbb
fxch
xchg
mov
dec
sbb
mov
loop
fildl
int
ror
into
sub
cmp
data16
jns
ret
pop
js
lods
cld
mov
insl
or
test
fnstenv
shrl
jmp
aad
jne
movl
mov
add
rorl
into
sbb
movl
or
xlat
xor
jmp
push
add
sbb
rorb
and
out
lgs
lret
lret
pop
mov
ljmp
nop
cmpl
aam
inc
sub
lcall
xor
xchg
dec
dec
adc
push
adc
push
and
adc
clc
aaa
push
imul
sub
dec
mov
jmp
test
fs
cmpsb
aam
lea
inc
repnz
cmp
aam
or
je
fs
sti
mov
push
imul
cmpsb
sahf
sbb
hlt
dec
jmp
ds
inc
adc
icebp
repnz
xor
and
mov
fs
cld
push
je
fs
rcrb
xchg
outsl
fs
jns
fbstp
sub
inc
mov
mov
hlt
iret
xlat
adc
or
dec
pop
mov
andb
sub
jle
pop
xchg
inc
mov
or
popf
cmpsl
ret
cmp
inc
add
enter
mov
cmpsl
call
jnp
insl
addr16
pop
cmpsb
pop
adc
mov
shlb
jecxz
pop
jecxz
ret
push
adc
cmp
xchg
mov
pop
fnsave
pop
mov
test
lock
adc
cwtl
add
and
sbb
and
jb
xchg
daa
jns
adc
int3
cmp
outsb
sbb
loope
loope
ds
dec
lods
in
ret
xchg
and
pop
inc
cmp
inc
jmp
or
dec
cmpsl
inc
ja
push
popf
ljmp
jecxz
addb
cwtl
aad
dec
xor
inc
lret
out
mov
xchg
push
push
xchg
lods
inc
in
and
movsb
repnz
pop
fwait
adc
out
add
dec
jo
mov
popf
ret
xchg
cmp
inc
mov
jecxz
mov
aad
or
sub
xchg
je,pt
xchg
sti
mov
int3
iret
pusha
xchg
jmp
lret
subl
stos
adc
xor
add
aaa
mov
ja
pop
ret
mov
inc
test
sbbl
push
jecxz
and
xor
mov
mov
or
cltd
dec
leave
sub
mov
mov
loope
arpl
aas
pop
dec
in
sbb
js
pop
xchg
dec
mov
sbb
call
sahf
xchg
jae
push
pop
mov
jmp
iret
jmp
sbb
add
or
cwtl
and
and
mov
stos
adc
pop
mov
dec
enter
mov
adc
adc
inc
xchg
std
nop
fcmove
cmc
mov
mov
mov
or
sbb
pushf
call
ret
test
xchg
adc
int
jae
jge
jno
inc
jecxz
inc
push
decl
clc
sub
pop
lret
jecxz
mov
mov
xchg
hlt
pop
mov
sbb
lret
icebp
std
push
fistl
lret
leave
mov
jp
jo
int3
mov
mov
pop
push
je
jns
enter
out
push
jbe
rcrb
push
rorl
push
mov
iret
ret
pop
push
jns
xchg
xor
ror
sti
int
xchg
test
pusha
and
or
lahf
adc
dec
cli
sti
repnz
cmp
adc
popa
movsb
lods
aad
nop
into
nop
into
in
mov
inc
sti
sbb
xchg
jbe
repnz
sub
dec
mov
mov
jge
insl
mov
xchg
dec
or
mov
pop
sbb
pop
inc
in
aad
push
sbb
push
dec
fisubrs
xlat
fwait
xor
ljmp
push
sarb
fwait
cmc
fucom
mov
or
jae
push
cwtl
mov
add
xchg
fistpl
sub
imul
add
loop
icebp
cmp
or
icebp
jmp
jge
rolb
push
push
sbb
sbbb
pop
clc
mov
push
jmp
inc
push
cli
fistpll
shlb
xchg
outsb
imul
fbld
cli
xlat
lock
adc
jno
mov
cltd
mov
movsb
inc
xrelease
popf
lret
ss
loop
push
dec
push
sub
mov
shl
inc
orb
imulb
jnp
jp
sbb
rorl
shr
psubd
mov
jl
lods
sbb
push
cmp
ret
stc
pushf
adc
shl
arpl
shlb
addr16
or
xchg
adc
repnz
mov
push
push
movsl
popf
aas
or
push
mov
repnz
or
pop
in
push
jae
rcrb
insb
imul
into
arpl
je
xchg
out
loop
call
cld
dec
loop
cmpb
mov
mov
daa
add
push
jge
adc
cli
popa
loop
or
sbb
outsb
das
inc
add
aaa
out
push
or
pop
jo
or
cmp
xor
jle
test
movb
push
subb
fidivrs
xchg
cwtl
cmp
push
js
scas
xchg
sti
mov
fcom
mov
and
movsb
outsb
cmp
sub
and
or
pop
clc
incl
cld
cmpsb
mov
cmc
rolb
fnsave
popf
fiaddl
in
mov
add
xchg
push
cmp
lock
lret
or
clc
xchg
add
fs
insl
clc
or
sub
movsl
mov
flds
cmp
or
mov
loope
fisubrs
sub
or
loope
negb
jmp
addr16
xchg
cmp
leave
pusha
or
jp
jg
sbb
mull
cwtl
cld
push
and
and
shrl
pop
inc
shlb
cs
mov
jbe
xchg
and
push
mov
xor
jno
push
inc
and
popf
mov
lret
fmuls
testb
mul
xchg
push
sar
push
push
jbe
fs
outsb
out
popa
xor
dec
lret
out
fwait
or
mov
daa
in
pusha
dec
es
sbb
imull
insb
push
cli
xchg
es
test
cmc
fmull
sub
rorb
inc
push
lea
mov
xor
push
sbb
mov
les
jmp
jmp
dec
lds
xchg
mov
or
gs
xlat
or
fwait
adc
cmp
adc
arpl
movsl
je
sub
sbb
aam
push
lret
fstl
xchg
cmc
test
push
dec
outsl
les
shlb
int3
sub
stos
cwtl
fisubs
mov
daa
mov
outsb
cmpsb
mov
cmpps
in
adcl
pop
adc
test
pop
cli
movsl
pop
inc
mov
fidivl
push
dec
out
inc
push
fcmove
ja
mov
pop
sti
outsl
hlt
mov
sub
add
popf
xchg
pminub
inc
cltd
mov
jg
in
push
call
bound
sahf
mov
aas
mov
iret
sub
mov
lret
dec
into
arpl
jecxz
cmpsb
or
dec
jmp
jmp
lds
mov
sahf
mov
and
mov
pop
push
push
inc
sub
add
mov
inc
cmp
sti
int
clc
mov
imul
xchg
fadd
mov
jns
pop
jno
ret
int3
fsubs
cs
push
bound
js
popf
sub
jmp
xchg
test
icebp
imul
push
fdivrs
xor
adc
popf
xor
mov
mov
or
incl
jae
cwtl
pop
xor
xlat
fs
add
scas
xchg
je
loopne
adc
xchg
into
aad
ret
mov
mov
stos
fwait
or
inc
xorl
jg
mov
adc
xchg
mov
js
sti
icebp
mov
out
cmp
lahf
in
pop
jo
movsl
mov
push
dec
enter
mov
xor
fmuls
sub
jp
sbb
sub
jb
sbb
or
dec
out
out
pop
fnsave
jp
sbb
clc
shll
stc
or
fmull
push
movsb
push
xorb
cmp
scas
sbb
lods
jge
and
pop
insl
iret
mov
xor
repz
bound
xchg
stc
mov
pushf
repz
xchg
push
or
andl
xor
push
lock
inc
jmp
jg
cmpl
lds
and
pusha
and
adc
jb
outsl
enter
xor
out
push
into
sbbl
xor
test
fs
cmpsl
pushf
lock
gs
mov
sub
stos
cmp
mov
xor
add
and
shll
insl
mov
nop
xchg
jbe
ror
cmp
scas
adc
addl
mov
and
sub
out
cld
dec
jne
ror
sub
sub
ficoms
daa
xor
ret
pop
dec
mov
xor
mov
xor
xchg
test
inc
xchg
mov
gs
or
cmp
adc
jp
fstl
jl
lods
mov
test
imul
hlt
pop
arpl
fcmovb
jle
loope
mov
std
lea
mul
mov
cld
call
push
insl
sbb
sarb
popa
cmc
imul
sub
lret
mov
adc
lret
out
inc
lret
pop
in
shrl
inc
mov
loopne
pop
jg
lea
xchg
add
ss
leave
push
insl
dec
call
or
and
push
dec
mov
inc
or
adc
repnz
jle
or
mov
push
lds
das
pushf
ret
push
push
dec
daa
adc
lret
adc
icebp
inc
mov
cmpsl
xchg
fisttpll
mov
cwtl
idivb
inc
fs
fistpll
mov
adc
jge
xchg
cwtl
rcrl
xor
sahf
pop
lods
lahf
setb
mov
sahf
fadd
sbb
mov
xchg
or
mov
sub
test
or
or
pusha
sub
add
mov
push
inc
fwait
es
ds
call
hlt
das
enter
sar
and
mov
sahf
cmp
jne
push
xchg
daa
add
sbb
add
cmpl
les
cwtl
in
es
ficoms
xchg
pop
sbb
cmp
jnp
inc
jecxz
sbb
jecxz
push
imul
mov
inc
sub
xor
ds
imul
xor
push
jns
pop
rolb
pop
add
mov
popa
and
mov
stos
mov
ljmp
push
nop
add
push
fdivrs
jo
dec
push
sbb
jnp
gs
cmpsb
mov
xor
push
jnp
mov
mov
jns
test
roll
mov
xor
mov
or
popa
incl
lods
int3
insb
into
stos
xlat
jbe
fsub
cli
fsubs
mov
xchg
int
mov
movsl
int
sub
mov
mov
xor
das
aaa
pop
fs
sbb
fldl
add
lret
cmpsl
mov
aaa
fadd
sbb
adc
and
test
ja
pusha
sbb
es
cmpsl
xlat
shlb
pop
sti
xchg
mov
int
jae
into
fstps
dec
jbe
ss
lret
not
dec
push
inc
cwtl
adc
repz
sub
mov
add
mov
jmp
add
inc
ds
out
push
jno
add
pop
pop
pop
jp
movsl
popf
pop
outsl
js
mov
aad
das
xchg
ret
or
sbb
mov
sub
mov
dec
scas
xor
test
andb
frstor
rcrb
mov
pop
mov
movsl
sbb
and
loope
outsl
aas
or
mov
fwait
sahf
ret
adc
loop
jmp
shrb
sub
movntq
lret
inc
aad
pop
sbb
xor
out
stc
in
in
imul
or
nop
adc
leave
imul
adc
insl
inc
test
subl
mov
rolb
or
fwait
adc
mov
imul
stos
cli
add
add
idivl
jp
dec
pop
mov
sub
or
insb
mov
mov
lods
cmc
test
imul
lea
push
int3
test
xlat
mov
dec
icebp
ljmp
or
shlb
icebp
sub
ss
cmp
les
loope
mov
sbb
scas
pushf
imul
fisttpl
or
jg
push
sahf
cmc
leave
adc
push
mov
jp
dec
popf
push
lret
xchg
movsb
jmp
cmpl
jns
adc
fwait
sbb
jmp
movsl
dec
xchg
nop
sti
ret
clc
inc
repnz
sbb
sti
mov
test
add
sahf
mov
into
fstpt
lret
mov
add
xor
shr
ds
sub
xor
fmuls
mov
shrl
inc
add
lret
inc
ss
icebp
pop
pop
cld
sbb
and
mov
arpl
fmull
push
jecxz
cmpl
jl
cmp
fldt
jae
cltd
jecxz
sub
imul
mov
and
mov
jbe
mov
mov
xchg
or
or
inc
in
mov
mov
cltd
outsl
outsl
rcr
xchg
data16
mov
mov
or
stos
sbb
add
pop
rcrb
and
dec
cmpsb
sub
jmp
out
dec
lret
push
sub
insl
pushf
xchg
jb
xchg
mov
and
addl
inc
scas
jno
adc
sub
xor
mov
fdivrs
sbb
xlat
test
push
rol
mov
outsb
mov
cmp
pop
add
cmc
movsb
xchg
xchg
push
pop
adc
add
cmp
pop
fisubrs
mov
mov
testb
idivb
mov
movsl
xchg
or
xor
mov
dec
loope
inc
jns
lock
rorb
sub
fistl
mov
out
add
fs
mov
adc
jge
mov
aaa
aam
fisubrs
jb
popf
vcomisd
ret
pop
cwtl
sub
sti
dec
pop
add
jl
mov
iret
mov
jae
mov
dec
sub
jo
shll
addr16
cltd
out
setge
lret
dec
flds
gs
push
mov
pop
enter
int
xchg
hlt
imul
fistl
sub
cli
sti
gs
pop
mov
mov
dec
insl
sub
xor
iret
add
adc
adc
inc
pop
dec
stos
add
jnp
jp
xchg
xchg
stos
cmc
or
or
lea
xor
out
test
hlt
jns
xchg
dec
ja
and
sbb
aam
loop
shl
ja
inc
hlt
gs
jbe
mov
push
jns
dec
fsts
adc
xor
dec
test
or
sbb
or
xchg
dec
sbb
adc
loopne
push
push
in
hlt
popa
push
iret
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
jmp
add
cmpsb
sub
add
cmpsb
imul
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
ljmp
pusha
stc
ljmp
cltd
jne
and
arpl
mov
pop
sub
std
dec
into
push
xchg
ret
loop
movsl
xchg
mov
clc
cmpsb
sub
adc
in
dec
sub
fidivs
shl
or
mov
shlb
test
mov
mov
xor
outsl
popa
imul
popa
mov
mov
repnz
shl
js
and
mov
mov
mov
sbbb
movsl
call
and
jns
mov
in
dec
sub
popf
dec
fdivr
cmpsb
sub
add
mov
dec
pushf
dec
fcomps
inc
or
push
scas
mov
add
movsl
sub
pop
scas
mov
add
sub
push
mov
pop
fdivr
cmpsb
sub
push
scas
icebp
mov
clc
movsb
sub
push
scas
mov
add
cmpsl
sub
push
scas
mov
or
sub
mov
clc
cmpsb
cmp
push
scas
mov
fdivr
cmpsb
sub
push
scas
mov
add
cmpsb
sub
mov
repz
fs
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
add
fdivr
cmpsb
lret
dec
out
push
mov
dec
fdivr
mov
in
sub
popf
dec
fdivr
cmpsb
sub
push
dec
sahf
lret
jbe
sub
clc
cmpsb
sub
out
push
scas
inc
mov
popf
adc
clc
cmpsb
repz
out
push
scas
mov
add
cmpsb
sub
push
scas
push
mov
clc
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
cmpsb
sub
push
scas
mov
add
leave
orl
scas
mov
add
xlat
dec
mov
push
xor
insb
insl
rcrb
inc
push
pop
scas
push
mov
shrb
decl
adc
jle
cmp
lea
sub
adcb
daa
cs
pop
test
xlat
imul
inc
push
sti
sahf
rcr
mov
mov
test
cmp
imulb
and
adcl
lods
out
mov
adc
nop
inc
mov
jmp
xor
fmuls
daa
cld
and
cwtl
sti
pop
sbb
cmc
or
pop
repz
xchg
cwtl
mov
pop
cmc
add
hlt
adc
call
test
push
mov
out
jmp
pop
data16
bound
xchg
insl
pop
mov
push
push
sbb
rcll
pop
ds
dec
jnp
and
dec
fnstcw
and
movsl
mov
scas
sbb
jno
out
add
or
fisubrs
repnz
cs
sub
xchg
push
imul
mov
mov
add
adc
or
and
xchg
xchg
outsb
addl
inc
add
dec
sbb
dec
bound
gs
fildl
shl
jmp
shrb
loop
and
je
imul
ret
loope
jle
arpl
sub
addr16
xchg
shl
cld
scas
repnz
dec
data16
adc
xchg
dec
testb
sbb
notl
inc
test
popa
insl
inc
int
add
ficompl
ja
push
fcoms
enter
mov
fadd
xchg
int
shlb
fcomps
fadds
push
mov
in
adc
hlt
int
xchg
push
adc
shll
cmp
sub
jecxz
inc
adc
fsubrl
dec
test
loop
xor
aam
cmp
cs
cltd
das
push
mov
out
in
jp
cli
mov
aas
iret
adc
rcl
mov
in
mov
fcom
jle
out
push
push
fwait
and
dec
aaa
repnz
pop
lret
ss
sub
inc
adc
cmp
out
aaa
or
sti
add
xchg
aam
aaa
sbb
mov
repz
sti
xchg
jl
fwait
cltd
int3
mov
sar
dec
inc
aaa
out
test
add
repz
loope
pushf
leave
add
out
or
push
sti
imul
int3
xchg
out
jp
out
scas
or
ret
and
pop
jp
inc
cli
dec
sbb
mov
leave
fmul
adc
into
mov
lods
test
or
mov
clc
jo
jne
fstpl
xor
out
movb
in
bound
and
out
lret
adc
loop
mov
cmpb
sbb
fisubrs
and
and
movsl
stos
ret
sbb
ss
ret
aad
jp
xchg
mov
adc
mov
inc
or
sahf
mov
pop
mov
pop
sbb
sub
cmp
popa
xor
sbb
jns
test
cmpsl
imul
and
or
sub
out
sub
pop
mov
dec
jns
mov
sub
jg
stos
dec
xchg
fisubrs
icebp
cmp
js
pop
scas
imul
aam
inc
cmpsb
bound
fldcw
and
stos
pop
lahf
xorb
stc
mov
insb
outsb
xchg
mov
ret
inc
pushf
adc
dec
pop
sti
xchg
cmpsl
and
xchg
mov
lcall
xor
pop
mov
es
iret
loope
je
xchg
pusha
xchg
jmp
sarl
pop
xchg
add
or
ret
jmp
push
inc
pop
std
pushf
cmp
jg
lods
xor
xor
inc
stc
xchg
das
mov
cmp
sti
call
lods
jg
push
out
and
adc
lods
mov
jbe,pn
lods
mov
dec
and
and
cmp
push
fcoms
push
sahf
push
dec
jmp
inc
insl
push
popf
in
lods
subb
push
or
enter
pop
movsb
loope
int
mov
test
xchg
js
inc
lcall
and
into
in
pushf
mov
push
movsl
and
jno
xor
mov
out
iret
pop
rol
or
repnz
and
test
lret
pop
xchg
cmpsb
xor
jmp
push
or
jge
shrb
stc
fucom
sub
icebp
fistpl
push
fcomp
sub
sub
jge
sbb
mov
push
inc
fisttps
jecxz
popa
mov
mov
or
dec
or
pop
in
outsl
jge
aam
ds
cli
push
mov
sbb
shlb
or
sub
scas
mov
pop
das
add
xchg
int
das
enter
or
inc
add
es
mov
mov
in
dec
rcr
add
or
and
ret
test
fcompl
fmulp
pop
jbe
push
push
stos
iret
mov
movsb
aam
pushf
popf
arpl
data16
mov
push
and
mov
mov
movsl
jg
lret
cmp
cmp
dec
in
jo
cmp
cmp
dec
jne
jmp
nop
pop
mov
mov
mov
and
sub
cmp
pop
push
lcall
mov
movsb
clc
cmp
cld
ds
lds
fcom
mov
sahf
fwait
shll
xor
daa
in
add
into
arpl
rcrl
lods
mov
mov
push
shlb
inc
adc
xchg
jns
call
mov
pop
inc
cmp
push
dec
ljmp
popl
pop
popa
add
mov
push
jg
cli
fmulp
imull
jne
je
std
in
fcmovnu
xor
jnp
vshufps
add
insl
sbb
cltd
test
sbb
jo
mov
ja
out
dec
arpl
push
lret
and
mov
pushf
mov
imul
sarl
outsb
push
adc
divb
adc
movsl
push
jl
outsl
pop
mov
pushf
cwtl
inc
out
cmp
inc
mov
ljmp
fstp
pusha
lahf
outsb
fcoml
frstor
gs
pop
xchg
lcall
popf
filds
sub
pop
jecxz
lcall
dec
jmp
xor
fwait
mov
sub
xchg
movsl
aam
loopne
mov
roll
jae
cmp
and
mov
mov
push
adc
cmp
and
sti
xchg
cmp
push
pshufw
insb
jnp
lret
mov
popa
push
notb
fsubs
out
pop
cmpsb
cmc
loope
ds
hlt
out
mov
fmuls
mov
and
mov
in
repz
loop
dec
jno
cmp
out
leave
pusha
jle
dec
repnz
int
fdivrs
mov
pop
xchg
xor
jp
push
lods
aad
in
hlt
mov
loopne
nop
lret
dec
jnp
sub
and
pop
dec
cmp
fldt
jg
rcl
push
mov
lea
fstpl
adc
xlat
ret
cmp
mov
loop
stos
shrl
adc
push
cmp
push
or
loope
sbb
jmp
xchg
inc
sarb
inc
mov
and
add
add
sbb
jge
pushf
stc
into
sub
shrl
in
lock
jbe
dec
in
mov
rol
or
test
cmp
loope
popa
cmp
cmp
cli
dec
mov
mov
push
jns
jge
loopne
xor
adc
push
push
add
cwtl
out
mov
lret
loope
xchg
incl
jl
stos
pop
dec
xor
inc
fcmovnbe
fnsave
leave
stos
mov
mov
outsl
push
xchg
fistps
cld
popl
repnz
fcomps
out
fwait
les
pushaw
cmp
mov
or
xchg
push
inc
or
xchg
pop
into
mov
scas
dec
or
mov
or
cmc
fsincos
mov
cltd
jno
and
push
or
cmp
mov
insl
stc
in
xchg
shlb
dec
jp
adc
push
mov
ror
cmp
maskmovq
notl
arpl
sub
into
mov
mov
mov
push
pop
dec
pop
cmp
inc
or
loopne
push
pop
test
sub
pop
mov
dec
inc
lahf
mov
nop
mov
rclb
push
mov
push
adc
fs
pop
add
cmp
mov
xchg
mov
fwait
pop
bound
push
loope
pop
icebp
outsb
xor
and
sbb
add
in
jns
enter
mov
inc
sub
mov
dec
jnp
mov
out
mov
push
in
fidivs
pop
jecxz
out
pop
jl
pop
mov
insb
jl
jbe
or
clc
ja
push
sub
push
in
mov
cltd
sbb
icebp
and
test
fbstp
push
test
inc
pop
aad
lods
popf
and
push
jg
push
sbb
or
fwait
jno
xchg
jmp
out
pop
lds
movsl
out
cmp
out
sbb
adc
fs
xor
mov
push
mov
hlt
mov
mov
js
jge
add
cmpsl
dec
shll
test
jl
jns
jb
mov
mov
adc
and
dec
fistl
push
test
xchg
out
dec
test
scas
dec
int
mov
ja
inc
cmp
push
cld
jbe
mov
aaa
pop
inc
pop
int3
xchg
xchg
sbb
je
mov
cmp
aam
inc
int3
out
mov
nop
imul
sbb
inc
xchg
or
mov
push
push
mov
sarl
xor
fcmovnbe
in
add
cmp
lahf
mov
and
sub
sub
and
in
divb
std
xchg
mov
or
mov
roll
pop
arpl
outsb
xchg
dec
or
std
and
push
sti
mov
pop
sub
mov
mov
fsubl
jp
sub
ret
fldt
cmp
and
xchg
mov
pusha
ret
or
aad
int
popf
lret
xchg
jge
jo
stos
sti
repz
pop
xchg
fcomi
pusha
mov
pop
int
push
push
mov
pusha
inc
out
fistpl
jae
cmpsl
sub
icebp
test
pop
lods
out
lods
jae
int
xor
lea
xchg
jg
dec
jne
inc
loopne
inc
faddl
test
xor
out
out
test
outsb
fimuls
movsb
in
lods
loop
fwait
sub
outsb
mov
and
mov
leave
pop
xchg
jp
mov
pop
adc
out
xchg
fsubrp
cs
cmp
cs
xchg
add
inc
or
mov
push
add
sti
iret
adc
call
jae
ret
xor
push
nop
sarl
dec
lcall
sbb
push
pop
mov
pop
mov
movb
cmpsl
pop
aas
inc
sti
in
jnp
mov
arpl
fdivl
insb
xor
pop
test
push
jno
push
cmpsb
xchg
or
mov
mov
xchg
in
mov
rcrl
stos
icebp
add
popa
push
add
pushf
fdivrl
inc
pop
push
test
sub
jecxz
cmp
into
lahf
mov
pop
ljmp
push
addr16
inc
rorb
sub
jge
cmp
std
das
gs
enter
loope
push
sbb
lahf
imul
dec
test
ljmp
add
pop
fs
jns
jb
adc
dec
cmp
imul
jg,pn
adc
or
xchg
inc
dec
hlt
imul
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
