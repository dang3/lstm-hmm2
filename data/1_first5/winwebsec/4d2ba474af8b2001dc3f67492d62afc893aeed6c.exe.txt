fyl2xp1
cmc
adc
pop
jno
setae
stos
das
push
sbb
flds
out
scas
ds
imul
aaa
leave
pop
hlt
sub
inc
in
clc
fnsave
jbe
leave
outsl
fsub
xchg
shll
shrb
dec
adc
mov
pop
xchg
jmp
sti
and
push
lock
mov
repnz
das
inc
lods
xor
add
cmp
movsl
lcall
push
adc
inc
in
sbb
in
shll
popa
cltd
into
adc
mov
lea
dec
fmuls
ds
ss
sbb
adc
and
xchg
or
icebp
cmp
fisttps
sbb
push
bound
sti
aaa
mov
mov
ret
fsts
test
incb
gs
mov
and
out
or
js
sub
pop
or
stos
rcr
jmp
mov
xchg
mov
pop
fs
xchg
push
arpl
push
shrl
jle
adc
mov
data16
pop
js
jle
push
add
cmp
in
es
pop
cmp
jecxz
inc
pop
test
in
dec
cmp
mov
dec
clc
adc
es
pusha
mov
jg
insb
pushf
divb
stc
ja
inc
sti
aad
jbe
fisttpl
ja
mov
gs
nop
sti
sahf
sub
dec
and
rolb
jl
mov
inc
mov
imul
jle
cli
cmp
jbe
adc
jg
sub
fistps
fwait
stos
mov
dec
mov
divb
je
sub
jge
sbb
aad
cmpsl
loopne
notb
adc
pop
sub
dec
jae
outsl
outsb
cmc
sub
sub
xchg
decl
dec
dec
mov
int
pop
jmp
lret
lods
and
add
push
add
mov
rdmsr
or
pushf
jbe
push
cmc
xor
mov
cwtl
insb
xchg
cmp
cmp
std
xchg
test
mov
js
and
and
mov
fwait
daa
paddsb
sub
push
xor
cmp
dec
imul
xorb
jbe
mov
mov
ss
not
fnstenv
adc
mov
sbb
je
inc
insl
adc
scas
dec
or
repnz
sti
xchg
nop
into
dec
jne
in
mov
dec
mov
outsl
test
sbb
clc
out
mov
and
repz
dec
sub
or
push
cmp
arpl
jmp
std
fisubs
cmp
addb
or
mov
das
in
adc
dec
mov
loopne
bound
aad
sub
sti
jb
mov
mov
dec
cltd
outsl
dec
daa
mov
sbb
jle
stos
or
push
pushw
loop
data16
aad
xchg
test
push
adc
and
jno
mov
gs
add
mov
add
fwait
inc
xor
mov
and
push
je
pushf
xor
mov
std
jno
cs
jb
adc
jg
push
xor
mov
adc
xchg
sbb
xchg
jp
adc
sub
dec
mov
cltd
push
xor
pop
roll
pop
push
mov
add
rclb
out
xlat
push
ljmp
pop
sbb
jp
mov
clc
xchg
shll
dec
inc
mov
inc
and
dec
pop
dec
ficomps
test
or
dec
adc
cmp
jge
cli
push
cld
sbb
rcll
arpl
push
mov
bound
xor
mov
pop
jge
es
jle
jmp
sub
add
adc
in
ret
stos
xchg
rcrl
fcoml
and
adc
xchg
icebp
cmpsl
push
or
xor
cmc
xchg
test
aad
pop
xor
loope
adcb
into
jmp
dec
mov
sub
aad
subl
jmp
pop
and
sub
or
test
lret
dec
out
mov
adc
lods
pop
mov
clc
loope
testb
dec
inc
or
rorl
push
imul
sub
jns
outsl
ret
mov
aam
fmull
add
test
aaa
jns
pop
nop
inc
dec
inc
rol
rol
adc
push
jae
jbe
enter
sub
adc
popf
mov
inc
inc
sti
in
dec
pushf
adc
shrb
rcrl
push
dec
and
mov
push
mov
fwait
or
jg
sub
pop
dec
xor
shlb
cs
mov
stos
out
outsl
aaa
loopne
cltd
aam
and
mov
int3
inc
js
sbb
or
xor
sub
jae
dec
push
push
or
imul
leave
mov
imull
cmpsb
jb
sarl
not
pop
pop
mov
test
call
test
xchg
lock
test
mov
clc
orb
pop
mov
xor
enter
enter
cmp
int3
test
mov
loop
dec
in
aaa
cld
mov
inc
daa
jo
hlt
repz
into
clc
jo
mov
cmp
xchg
xor
test
jp
push
or
mov
imul
adc
pop
push
and
pop
les
in
add
jns
test
subl
add
movsl
push
mov
lods
jns
jns
stos
in
adc
or
lret
pushf
xor
jg
insl
popf
cli
cld
psubsw
aaa
shrb
mov
aad
add
out
in
mov
push
sbb
or
jo
std
add
cmp
xor
xchg
std
iret
fisttps
movsb
mov
mov
fs
dec
sbb
cmp
js
sub
iret
and
jle
test
mov
movsb
add
scas
fcompl
ljmp
stos
xor
jae
loopne
lods
test
xor
xor
dec
in
inc
in
push
jle
fisubrl
aad
mov
mov
mov
push
fcmovnu
jmp
and
mov
sub
jp
xor
ja
adc
xor
movsl
adc
pushf
out
cli
push
jae
dec
insl
push
sahf
pusha
in
cltd
add
push
test
mov
jle
psubq
out
cmc
rcrb
shrl
stos
and
mov
mov
xchg
jp
and
mov
ret
fldl
sub
push
mov
movb
test
or
fildl
int3
mov
and
cmp
xchg
jge
sub
int3
mov
jbe
jnp
cmc
sbb
call
out
bound
jnp
mov
mov
aaa
xchg
xchg
mov
mov
and
push
lahf
xchg
pushf
ret
pusha
dec
mov
loopne
popf
sbb
push
mov
je
or
data16
shrb
aaa
jp
scas
adc
mov
pop
ja
dec
into
insl
adc
xchg
ret
fbld
push
adc
clc
sbb
push
ja
dec
int
and
sub
aaa
daa
ret
aam
lcall
stc
aaa
xor
dec
fcoml
jno
scas
inc
mov
sbb
mov
movsl
dec
push
sub
mov
das
sub
enter
cmp
aas
xor
mov
lods
int
mov
pushf
lret
jmp
add
and
cmpl
testb
cmp
sbb
addl
mov
jg
aam
xchg
cmp
pop
repnz
fnstenv
repz
or
cwtl
push
arpl
aam
cmpsb
push
sbbb
sub
stos
add
ret
mov
mov
push
ss
sub
push
and
mov
stos
mul
in
or
scas
popf
mov
xor
loopne
leave
push
jle
xor
pushf
loop
xorb
je
pop
or
mov
popl
jge
test
inc
fucomi
int3
jge
jp
loopne
xchg
leave
cmp
and
sub
push
and
rcrb
jle
lds
jmp
pop
outsb
xor
test
inc
sbb
fadds
inc
sbb
mov
adc
iret
das
in
xchg
sti
or
inc
inc
flds
outsl
xor
das
rcrb
dec
iret
testb
push
or
add
sarb
insb
imul
pop
arpl
mov
and
inc
sub
in
inc
in
lea
jae
fwait
repnz
inc
mov
mov
shl
lods
in
inc
popa
and
cmp
inc
pop
mov
and
xchg
push
sarl
and
outsl
add
lock
insl
sub
aaa
ret
add
insb
fstpt
cs
cmp
cltd
jo
aaa
and
call
jb
in
test
jle
scas
ret
in
add
flds
dec
gs
daa
mov
loop
jmp
sbb
mov
adc
fdivrp
xchg
jle
test
sub
cld
cltd
mov
push
loopne
sub
nop
mov
xchg
pop
push
or
inc
dec
jecxz
pop
sbb
in
fsubrl
pop
iret
push
out
dec
cmp
cltd
enter
or
sub
pop
jae
in
jo
pop
in
flds
push
push
sbb
nop
inc
or
loope
data16
xchg
dec
xchg
call
movsl
scas
leave
test
js
in
in
mov
cld
jne
jmp
sbb
pop
add
jle
pop
fsubrp
loope
dec
mov
stos
jb
inc
and
xchg
adc
or
test
pop
rcrl
mov
fistpl
js
dec
dec
cmpsl
pop
add
xor
test
mov
pusha
iret
ret
daa
inc
or
push
out
xchg
jge
hlt
jl
or
xor
mov
cmp
repnz
dec
jl
xchg
xor
jmp
fisubl
pop
mov
pushf
xchg
fidivl
call
ret
icebp
mov
popa
fstp
aas
mov
pop
bound
sub
cmp
push
fsts
cmpsl
mov
shrb
sub
adc
ds
gs
push
and
loope
jo
cmc
pushf
rcl
dec
imul
xor
push
adc
mov
inc
ljmp
lds
xchg
push
aad
sbb
repz
jbe
jbe
addr16
js
in
sub
into
icebp
cli
ja
mov
leave
ja
das
xchg
or
mov
push
push
mov
movsb
dec
xor
fmull
jnp
sub
aad
cmp
loop
or
loop
pusha
mov
jl
mov
enter
mul
xchg
pop
cmp
fstpl
sbb
xor
mov
insb
ret
enter
inc
push
pop
lock
pop
dec
or
in
jecxz
pop
mov
repz
mov
fistpll
jbe
sub
loopne
jne
xchg
mov
jmp
xchg
cmp
shrl
inc
jns
outsl
xchg
arpl
bound
adc
mov
xchg
ficoml
xlat
dec
ja
lcall
and
ret
arpl
dec
inc
leave
adc
push
lds
dec
fsub
out
mov
roll
push
xchg
pop
and
addr16
push
icebp
jmp
lods
cld
inc
cmp
ljmp
mov
pop
jns
std
mov
aad
push
aaa
mov
and
adc
cld
xchg
andl
jns
cs
popa
jno
stc
or
pusha
sub
lods
cmp
cs
jne
mov
xchg
cmp
pop
push
shlb
xchg
shll
xor
sub
xchg
mov
clc
and
and
xor
test
movsb
test
xlat
sbb
gs
cmp
out
pop
fst
iret
sbb
nop
push
pop
loope
enter
test
test
pushl
imul
adc
dec
pusha
std
push
push
add
and
arpl
mov
popf
xor
sti
sti
mov
mov
mov
mov
inc
jecxz
mov
mov
and
mov
sbb
mov
das
sbb
and
mov
lret
lods
sti
fwait
xchg
dec
es
insl
mov
mov
ss
nopl
mov
pop
fidivs
pop
movsb
and
xor
shl
cmpsl
rcl
test
cli
jp
aad
pusha
rcr
jne
cwtl
mov
lret
shll
lcall
popf
mov
dec
pop
mov
and
sub
pop
adc
imul
ret
pushf
jle
dec
sti
sbb
push
xor
loopne
cmp
pop
fldl
sbb
pop
and
or
mov
mov
shlb
mov
mov
push
jbe
mov
jge
aad
ds
sbb
bswap
scas
mov
dec
jne
ret
xchg
arpl
inc
fwait
pop
mov
test
and
fildll
push
inc
sarb
jo
out
pop
mov
outsb
dec
cmp
sub
sbb
insl
add
mov
imul
mov
imul
add
or
das
mov
daa
sbb
mov
adc
push
in
add
nop
and
stos
push
imul
popf
mov
jns
std
in
shll
add
imul
sbb
adc
adc
in
jno
add
imul
dec
mov
lds
add
mov
sbb
xor
sbb
sub
test
and
addr16
aaa
pop
repnz
and
push
popf
sub
add
pop
popf
pop
pushf
push
cmp
cmp
and
pop
fs
andl
mov
jnp
dec
imul
add
pushf
es
inc
cmp
mov
sub
sub
jl
mov
popa
mov
mov
adc
data16
jno
mov
adc
pop
jp
jne
dec
sub
push
inc
dec
push
pop
sarb
pop
in
push
dec
xchg
std
clc
ss
testb
pushl
lock
fdivrl
daa
cmp
mov
cld
pop
lods
out
mov
ret
stc
fcmove
mov
sub
mov
add
pop
dec
int
loop
lret
push
scas
or
push
outsl
xchg
scas
pop
shlb
mov
xorl
or
lret
pop
aam
jb
adc
outsl
jle
scas
mov
mov
int
in
sub
out
fistl
sar
mov
aad
cwtl
dec
bound
pop
ljmp
loop
fcmovne
dec
daa
std
ja
repz
nop
insb
lock
and
push
mov
addr16
gs
rcrb
inc
push
fidivl
aaa
xchg
hlt
sub
sar
fistpll
pop
jecxz
mov
sbb
push
xchg
enter
aaa
sbb
mov
mov
sbb
insb
loope
cmp
xchg
out
lcall
ljmp
divl
mov
vucomisd
pop
test
push
leave
test
pusha
es
stc
in
int
fs
sub
test
add
jo
xchg
fstpt
orb
mov
arpl
xchg
mov
jbe
xlat
aaa
push
pop
mov
loop
mov
and
cwtl
push
dec
inc
cmpsb
sbb
dec
je
dec
add
xchg
mov
dec
mov
mov
cmpsb
sbbl
movsl
xor
out
outsl
repz
push
xchg
push
push
inc
xor
adc
jecxz
adc
mov
mov
mov
scas
jno
outsb
jb
in
stos
mov
lret
lock
mov
adc
sbb
push
js
shlb
les
jne
or
ljmp
cmpsb
shl
icebp
dec
dec
ret
xchg
cld
jbe
jnp
out
in
popa
fs
dec
cld
xor
jnp
sbb
ss
sub
ret
ds
in
mov
mov
mov
mov
cmpsb
sbb
popa
lea
jae
fcomi
in
push
es
decb
push
pop
push
inc
ss
movd
xlat
jno
std
stos
sub
in
sub
cmc
jmp
dec
mov
loope
xor
adc
nop
cmp
mov
mov
in
xor
mov
lea
sbb
repnz
and
push
lret
xchg
sbb
cwtl
fldenv
loop
testb
ret
fnstenv
incb
sub
ds
push
push
sub
push
xchg
sub
push
push
lods
pop
shl
fisubl
sbb
pushf
pop
test
in
mov
add
bound
sub
lcall
mov
sahf
sbb
and
lretw
cmp
aam
push
xchg
fs
mov
or
outsl
dec
mov
inc
cmp
push
aam
sbb
cmc
xchg
cs
push
push
and
adc
dec
es
pusha
add
pop
cmp
xchg
subl
jp
jecxz
loop
jne
mov
lret
insb
mov
jle
lods
ret
add
mov
or
cmp
js
imul
jae
xor
or
adc
nop
xchg
call
enter
add
mov
mov
cmpsb
cs
xor
mov
pop
mul
inc
insb
mov
xchg
sub
sub
into
pushf
jb
cs
jmp
stos
lcall
push
in
call
les
sahf
imul
lcall
and
std
adcb
lock
es
mov
and
punpckhbw
int
pop
jle
add
aam
in
add
mov
mov
and
sbbb
adc
stos
cwtl
cmp
das
mov
call
scas
gs
imul
cld
or
ja
outsb
push
pop
lods
xchg
test
movsb
jmp
mov
push
dec
out
fbstp
sbb
mov
pop
mov
test
jg
push
cmpsl
std
mov
jbe
mov
aas
or
lods
lcall
pusha
sbb
xchg
sub
and
jo
mov
std
sti
mov
sbbl
mov
popf
fsubrs
or
push
imul
enter
test
or
adc
jge
bound
xchg
sbb
rorl
daa
lcall
cmp
loop
mov
out
std
int3
jno
lds
push
loope
dec
in
pop
jl
add
pusha
jg
pop
jecxz
and
push
imul
mov
xchg
int
addl
cld
shlb
dec
sbb
xlat
pusha
loopne
jne
cmp
pusha
inc
test
push
mov
in
add
xchg
out
fdivrl
sbb
movb
xchg
push
push
in
push
fisttpll
mov
or
lret
cwtl
hlt
push
pop
dec
movsb
ja
movsb
test
ja
mov
sti
mov
add
test
push
adc
cs
flds
sbb
loope
mov
or
lahf
jbe
addb
icebp
mov
pop
pop
sti
push
test
cmp
movsb
cli
mov
add
push
mov
xchg
loopne
decb
loop
lahf
decb
jno
imul
outsl
pop
sbb
mov
stc
out
and
jae
sub
inc
aad
add
xor
jmp
std
or
or
add
clc
inc
repz
jnp
adcl
push
cwtl
xchg
adc
sub
and
orb
negl
cmp
mov
ret
in
cmpsb
adc
jge
inc
icebp
add
adc
nop
ljmp
push
push
iret
or
aaa
sbb
push
cmc
mov
push
mov
or
stc
fdivrl
adc
ja
shrb
cmp
jp
push
lret
aam
xchg
rclb
sbb
dec
call
sahf
loopne
cld
ret
xchg
push
repz
xorl
mov
packuswb
es
inc
jbe
mov
push
repnz
lock
pop
mov
ljmp
testb
orl
fs
and
xchg
or
or
dec
sbb
xchg
test
xchg
sub
sub
bound
mov
lret
bound
dec
lods
fldenv
cmp
xor
repz
adc
bound
mov
sbb
popa
ficoms
push
or
outsb
and
and
jb
call
test
push
sub
fcomps
repnz
push
scas
in
movsb
and
mov
adc
mov
inc
addl
mov
dec
nop
testb
clc
add
int3
in
or
xchg
jne
jmp
push
icebp
fcomip
mov
aaa
aaa
data16
iret
or
inc
pop
cmc
cwtl
clc
outsb
inc
mov
add
es
or
mov
lret
sub
sbb
in
insl
xor
cmp
or
xorb
lcall
push
aas
cmpsb
cmp
sub
adc
arpl
enter
ret
sub
add
rclb
dec
mov
je
dec
mov
jmp
xchg
mov
imulb
sbb
insb
fsubp
adc
xor
pop
pop
and
hlt
cmp
scas
aaa
scas
les
sbb
int
xchg
push
sahf
movsb
xchg
sbb
pop
leave
and
loope
mov
dec
inc
ljmp
sub
and
jp
push
pop
cmp
xor
sbb
sub
xchg
dec
xchg
divb
add
jecxz
jne
pop
les
add
test
mov
xor
insb
mov
or
xchg
pop
cwtl
push
cli
jle
in
dec
test
mov
sbb
dec
rcrl
dec
das
sub
push
mov
xor
dec
inc
imul
mov
pop
jno
cmp
jle
xchg
ret
pop
add
xor
stos
sbb
fxch
mov
in
mov
xchg
push
sti
sub
iret
popa
xchg
test
or
push
aaa
xchg
pop
ret
clc
fld
addr16
out
es
jo
xor
cmp
and
and
shll
test
es
add
arpl
ret
sub
into
mov
loop
and
cmp
shrl
jns
mov
aad
mov
and
cmp
adc
mov
mov
pop
adc
mov
test
nop
cli
jb
push
or
aas
enter
fstpt
jbe
dec
pushf
les
mov
sbb
jne
bound
pop
mov
sbb
add
fsqrt
loop
and
jge
cmp
mov
adc
sbb
push
stc
sahf
sbb
outsl
mov
movsb
daa
mov
pop
cli
inc
out
std
repz
lahf
push
xchg
mov
cwtl
and
sbb
int3
into
decl
es
mov
repz
ljmp
jecxz
test
insb
fdivs
sub
or
xor
jbe
fs
cld
repz
fwait
push
inc
mov
and
test
mov
push
mov
rorb
dec
sub
gs
enter
sub
mov
cmp
xor
cmp
imul
lods
mov
adc
push
dec
mov
mov
pop
iret
cmp
pop
mov
push
shrb
jmp
ret
lahf
les
hlt
cs
outsb
rcl
and
cli
aaa
jno
sub
sbb
push
pop
insb
sub
and
push
mov
jmp
cmp
stc
dec
in
lea
inc
inc
into
jmp
gs
shl
jge
mov
scas
movsl
imul
icebp
xchg
out
adc
and
sahf
mov
sbb
scas
and
mov
and
and
inc
cmp
popa
out
jae
rcrb
cmp
movsl
xchg
mov
fistpl
mov
push
mov
xchg
movsb
sbb
cltd
sub
sub
jo
lock
mov
aas
ds
sbb
xchg
xchg
and
loop
dec
decl
repz
fstpt
fdivrs
xor
or
imul
jns
mov
mov
imul
or
les
add
daa
sbb
das
push
mov
jmp
or
scas
inc
add
std
nop
dec
cmp
xorb
mov
clc
pop
push
xchg
sub
cmp
mov
fsubl
bndldx
mov
mov
mov
cmc
push
xchg
inc
loopne
push
pusha
cmpsl
aam
insb
pop
mov
fldcw
pushf
pop
xchg
icebp
popa
jb
jb
sub
test
cmpsb
xor
sbb
mov
or
jmp
pop
mov
loope
aaa
jns
pop
cmp
scas
cmpb
mov
xchg
add
inc
repz
pop
dec
xchg
outsb
dec
insl
push
incb
mov
pop
loope
inc
pop
repnz
icebp
shll
xlat
test
repz
movsl
and
push
jp
pop
dec
mov
cli
push
xchg
pop
pop
test
sub
out
mov
xor
in
orb
out
aaa
pop
ss
jmp
mov
data16
mov
pushf
mov
push
ss
sub
mov
mov
out
clc
dec
int3
inc
add
jb
push
pop
out
push
movsl
xor
inc
iret
bound
fbstp
mov
lret
movsb
insl
pop
arpl
ret
sub
hlt
xor
dec
adc
inc
dec
jmp
addl
ja
add
xor
les
scas
outsl
aam
fwait
inc
bound
sub
sbb
xor
mov
fstps
push
aad
in
xor
xor
pop
mov
inc
jno
aaa
sub
jo
out
sbb
pop
xchg
cmp
popa
imul
adc
adc
and
pop
enter
add
rcr
mov
stc
jns
mov
fwait
or
in
pop
mov
mov
push
addl
ljmp
push
leave
jno
rorl
inc
lock
inc
int3
aam
outsb
outsl
loope
dec
mov
popa
dec
into
mov
sub
ret
or
add
dec
jne
xchg
movsl
xor
xchg
outsl
dec
adc
xchg
popf
movsl
adc
add
fwait
mov
add
stos
aam
sbb
inc
repnz
sub
inc
adc
or
dec
scas
or
stos
pop
jo
xorl
fisttpll
xchg
dec
inc
xchg
mov
and
les
mov
push
cmp
jmp
push
push
inc
test
inc
insl
push
sub
pusha
push
fwait
gs
push
dec
cmp
or
add
clc
rol
jno
adc
mov
sbb
hlt
es
jp
pop
mov
adc
jbe
stos
inc
ljmp
fisttpll
aad
or
adc
lcall
lret
dec
shrb
adc
xchg
roll
sub
mov
jecxz
icebp
cmc
sub
test
cs
xor
cmc
fisttpll
sbbb
mov
push
push
les
mov
ljmp
xor
or
mov
xor
aam
jl
jl
clc
xchg
into
mov
pop
faddl
std
mov
jo
lcall
sbb
iret
gs
jle
test
jp
bound
or
xor
fiaddl
sti
jnp
ljmp
fcmove
rcll
lds
in
and
cmp
or
outsb
or
sub
cld
pop
mov
push
lcall
cmpsb
repz
scas
stc
addr16
adc
adc
jb
das
sub
pop
scas
gs
test
jae
mov
push
mov
cmp
xor
or
int
out
xor
dec
cmp
shrl
xor
sbb
dec
movsl
cld
jne
test
jmp
or
jnp
cmp
sbb
and
add
sbb
adc
je
push
in
test
inc
mov
cli
sub
cmp
subl
popa
rcr
jl
js
outsb
xchg
mov
mov
repz
hlt
or
or
clts
test
push
dec
cmp
jb
ffree
cmp
xchg
orb
xor
ret
das
adc
fisttps
std
pusha
adc
ss
scas
cmpsl
xor
sbbb
popf
movsb
add
lea
or
div
cmpsl
inc
lds
mov
call
outsl
inc
mov
fs
jno
mov
cmp
or
mov
jg
pop
push
pop
and
mov
xchg
sti
ss
push
push
ds
dec
orl
and
icebp
call
pushf
inc
inc
add
sbb
lahf
fsubs
xlat
and
jp
sbb
sbb
test
mov
and
or
sbb
imulb
shl
xlat
dec
outsb
sbb
sbb
std
mov
pop
mov
bswap
stos
scas
add
lock
xchg
out
rcrb
xlat
cmp
lds
adc
xor
mov
ret
push
mov
xchg
xchg
sub
pop
and
fwait
dec
sbb
sbb
aad
dec
jb
data16
mov
push
xchg
mov
notl
call
out
jae
aad
inc
dec
sub
inc
testb
lods
dec
sahf
or
out
jnp
les
nop
cmpsl
jmp
or
xor
jg
pop
fldenv
insl
cmc
mov
out
jmp
mov
mov
in
lret
int3
pushf
jmp
rcrb
sbb
imul
jb
sub
shlb
cld
aaa
sahf
jg
adc
xchg
mov
inc
mov
mov
jae
push
cli
adcl
or
fwait
push
sub
pop
inc
mov
mov
pop
push
movsl
mov
and
and
test
sbb
adc
xchg
xchg
xor
std
dec
fimuls
and
mov
sahf
add
mov
outsb
out
cmp
dec
xlat
cltd
mov
mov
mov
xchg
pop
pusha
lods
stos
pop
mov
mov
inc
sahf
push
xchg
inc
mov
sahf
xor
loop
les
and
scas
repz
cli
imul
out
mov
test
push
or
xchg
cmp
cmp
popa
mov
in
iret
std
jmp
in
mov
inc
and
sbb
mov
pusha
adc
xchg
or
stos
in
adc
lods
mov
rclb
js
les
enter
jle
sbb
out
and
dec
xchg
ret
and
es
out
notl
add
dec
inc
cli
mov
mov
jle
icebp
jae
sbb
pop
mov
jecxz
xchg
lret
dec
jmp
push
push
int
inc
push
sti
add
cmpsb
sub
dec
jae
fnstcw
xor
jecxz
popa
adc
inc
lcall
negl
push
push
xor
cmp
in
dec
mov
into
aam
cwtl
outsl
sub
es
stos
xor
dec
sbb
push
jmp
mov
nop
adc
in
and
pushf
pop
jecxz
cmp
pop
xchg
lahf
cmp
cmc
mov
push
xlat
mov
clc
xor
and
cltd
sbb
push
fisubrl
insl
and
add
jbe
cmc
aas
shrb
sbb
mov
mov
out
insl
pusha
nop
mov
loope
int
jnp
aad
and
xchg
bound
pop
sbb
or
push
test
jae
xor
dec
outsb
jnp
loop
dec
sbb
mov
adc
sahf
in
adc
cmp
mov
sub
sbb
cmp
popa
push
das
imul
cmc
xchg
testb
push
add
pop
data16
mov
jbe
test
jne
not
cmp
jg
int
mov
rcrb
mov
xor
and
popa
xchg
mov
push
push
lock
mov
mov
dec
dec
insb
xor
sub
imul
sub
imul
out
xor
rorb
mov
pop
pop
stos
inc
cmp
inc
inc
add
int3
sub
pop
inc
push
or
mov
push
hlt
jg
sbb
mov
hlt
mov
rolb
sub
or
clc
popa
add
push
hlt
int3
or
dec
pop
and
add
mov
hlt
je
shll
stc
aad
jae
lret
cltd
mov
xchg
adc
sbb
fildll
mov
push
sub
sbb
loope
bound
push
xchg
gs
xchg
subl
lahf
sub
cmp
enter
push
push
inc
push
push
inc
and
fs
inc
scas
inc
into
inc
jle
in
xchg
xchg
cmp
arpl
es
cwtl
les
mov
loope
int3
nop
cltd
cmp
push
ds
mov
jbe
out
dec
push
add
jmp
nop
fs
or
arpl
mov
mov
push
jb
add
fistps
fst
lds
shl
push
dec
add
cmp
sbb
jp
xchg
shlb
push
out
test
push
test
bound
pop
adc
cmp
pop
pop
les
dec
sbb
iret
mov
dec
mov
popa
mov
or
sarb
and
bound
dec
pop
cmp
cmp
inc
sarl
outsl
fwait
in
call
aam
iret
std
orb
push
in
cmp
lret
in
jp
jae
adc
mov
pop
push
out
fstpl
aaa
dec
fisttpll
clc
mov
loop
aad
push
popa
xor
pop
lods
stos
adc
mov
lods
jecxz
lahf
jp
sub
jo
out
push
lahf
add
fiaddl
mov
es
push
lods
test
cmp
sub
sub
lcall
lret
pop
roll
xchg
jne
sub
jecxz
mov
xchg
jno
dec
outsb
int
je
sub
lcall
cmp
addr16
or
in
cmp
push
mov
pop
mov
jo
das
idivb
sbb
push
mul
sbb
add
insb
lret
fnstenv
stc
std
in
sbb
cli
mov
jecxz
movl
fstps
adc
cmc
aas
jns
xchg
sub
add
es
es
push
mov
ficomps
add
xor
iret
fdivrl
lret
es
add
adc
enter
daa
negb
sbb
xlat
les
hlt
gs
xor
xchg
aas
sub
cmp
data16
jno
jle
mov
xor
dec
xchg
pop
jno
cmpsb
push
subb
int
jge
inc
add
imulb
fs
ret
or
push
mov
jle
dec
sahf
stc
xchg
jo
lcall
leave
sub
cli
mov
fistps
aaa
mov
push
jg
lret
dec
jl
cmp
test
js
xor
mov
mov
mov
sarb
sub
shll
cmc
pushf
dec
test
fiaddl
or
inc
out
out
cmp
sbb
out
fsubl
ds
test
dec
add
cwtl
dec
sbb
fs
inc
cmp
pop
sub
push
jp
dec
test
das
fisttpll
push
sbb
adc
repz
aaa
jo
sub
and
clc
dec
rcll
jb
sahf
xrelease
lcall
xor
insl
pusha
int3
leave
ds
test
mov
lcall
mov
and
adc
xchg
lret
imul
sahf
insb
aas
loopne
call
push
pop
divl
xor
mov
and
lods
mov
stos
dec
int3
scas
inc
sbb
mov
dec
les
xor
pop
ret
cmp
mov
stos
push
les
into
mov
je
in
ret
and
mov
aas
decb
movl
cmp
arpl
push
inc
fbld
mov
iret
rcrl
adc
loopne
imul
xchg
pusha
adc
push
dec
mov
push
cli
pop
mov
movsb
push
add
dec
lcall
fiaddl
mov
loope
xchg
lret
insl
cwtl
inc
xor
pop
lret
xchg
mov
pop
stc
aas
and
lret
aad
adc
push
pop
mov
jecxz
pop
fadd
imul
adcl
sbb
dec
push
jno
cli
shrl
cli
and
jo
or
cmpsl
bound
sbb
sub
cmp
jne
jo
shlb
lea
and
add
xchg
scas
enter
fsubs
daa
add
adc
cmc
or
push
xchg
push
jo
mov
mov
test
adc
jp
loop
and
mov
inc
mov
gs
inc
aaa
or
mov
jecxz
sbb
dec
scas
fstpl
popa
adc
roll
mov
out
cs
lahf
aad
out
mov
fstl
inc
xor
pop
mov
mov
das
cld
js
xchg
add
mov
sub
pop
movsl
jns
sbb
cmp
ja
js
loopne
aaa
scas
fdivrl
shll
dec
adcl
dec
add
or
fadds
xor
or
pop
adc
sub
add
or
fists
cltd
stos
xchg
aaa
shll
test
outsb
add
lock
cmpsl
mov
add
jnp
imul
call
fdivr
jns
shl
pushf
shlb
std
push
push
imul
jae
aas
add
xor
xchg
mov
arpl
sbb
add
mov
leave
inc
push
nop
jmp
into
adc
mov
sysexit
imul
icebp
and
jecxz
sbb
sbb
push
xor
insb
cwtl
pop
dec
mov
enter
jg
js
gs
xorb
loope
dec
outsb
add
inc
test
cmpsb
mov
andb
sbb
jg
loop
sub
add
adc
lcall
les
dec
fistps
and
add
sub
mov
inc
push
or
andl
movzbl
leave
add
add
inc
pushf
pop
test
cmpsb
pop
mov
das
fadds
insb
gs
mov
test
jne
fcompp
out
dec
jp
mov
mov
fldlg2
push
and
sbb
ret
mov
fstpl
and
ss
mov
loopne
and
fdivs
imul
add
orl
mov
lock
mov
mov
enter
inc
add
add
mov
pop
arpl
popf
xchg
imull
aaa
loopne
mov
movsl
ljmp
test
mov
cmp
pop
scas
cltd
sbb
ja
popf
aaa
dec
push
cmp
enter
xor
push
mov
mov
sbb
sti
xchg
mov
cld
fdivrs
jg
add
inc
out
outsb
mov
mov
outsl
bound
adc
lret
fcmovne
xchg
in
sub
test
ret
pop
call
pusha
jge
add
mov
int3
and
jle
xor
add
sub
cli
sti
jmp
pop
cld
push
mov
sbb
cmpsb
pop
addr16
sbb
cmp
jmp
pop
jmp
orb
out
push
test
pop
push
add
fnsave
xor
lock
jns
pop
popf
cmp
or
sbb
ds
jmp
loopne
cmp
sbb
push
mov
pop
sbb
mov
inc
sar
mov
dec
or
push
jecxz
jmp
jle
cmp
fs
arpl
mov
leave
xor
cmpsl
jns
stos
jge
scas
lock
test
cli
add
mov
xor
int
in
sbb
mov
insb
and
aaa
add
lds
push
rcrl
in
jg
int
or
and
mov
add
jne
push
fidivl
and
jo
sbb
ljmp
mov
bound
sub
std
adc
movsl
dec
sahf
fidivl
fistl
in
hlt
outsb
mov
js
pop
sub
xchg
loopne
sbb
cmpps
push
lea
dec
fsubs
inc
lret
or
fmulp
or
fimuls
imul
jge
and
insl
add
hlt
lret
lds
fsubr
ficomps
push
fwait
rorl
in
es
mov
aas
imul
out
in
push
popa
sub
sahf
int
dec
jle
fcoms
fsub
out
cmpsb
cmp
sub
adc
pusha
out
sbb
mov
shrd
pop
dec
jp
pop
int3
cmp
cwtl
dec
in
les
inc
push
mov
stos
mov
xchg
pop
push
and
push
xlat
insl
cmp
and
jg
cmp
sbb
int3
mov
sbb
nop
ja
ljmp
push
ret
cmpsl
dec
cld
xchg
cmp
xorb
mov
lahf
fdivrs
imul
push
decl
mov
jo
sarl
filds
adcl
lds
hlt
mov
shll
lods
add
stos
sub
cmp
hlt
imul
int
loopne
pop
sbbb
in
mov
sbb
pop
inc
sub
gs
mov
repnz
fldenv
scas
int
stc
sub
jl
out
push
or
addr16
stos
loope
shr
pop
aas
clc
movntps
lahf
cmpsl
es
rep
scas
mov
pop
pop
ret
push
ljmp
pusha
cmpsb
push
push
lds
sbb
mov
lret
in
xchg
in
sahf
dec
pop
sbb
std
ds
inc
fldl
int
out
cld
in
loope
and
xchg
hlt
jl
inc
add
push
sub
nop
iret
sub
es
mov
cmp
sbb
sbb
je
rol
push
mov
std
inc
mov
push
arpl
dec
dec
pusha
ror
sbb
mov
xor
xor
or
outsb
push
jno
xor
mov
mov
test
pop
test
cltd
testb
cmp
cwtl
xchg
imul
sahf
ljmp
jb
mov
mov
shll
or
jge
sbb
aaa
push
adc
outsl
imul
mov
sub
stos
call
aas
roll
mov
int
fisubl
xchg
jecxz
stc
mov
cmp
inc
xor
bound
lods
outsb
add
jle
mov
rorl
mov
dec
lret
and
sbb
mov
stc
repnz
add
mov
sub
mov
or
sbb
rol
dec
jl
push
and
or
xchg
stc
jnp
loop
and
adc
inc
adc
sbb
push
sbbb
fstpl
and
adc
loope
jmp
jmp
xchg
loopne
sub
xchg
or
adc
fdivrs
dec
xlat
in
repz
and
pop
cmp
in
nop
mov
push
fadds
les
pop
and
jmp
pop
lcall
fadds
pminsw
push
js
daa
orb
cmpsb
mov
push
pop
mov
mov
lds
add
test
outsl
test
or
push
aaa
push
jecxz
enter
mov
int
sbb
divb
dec
push
aaa
imul
sub
jb
iret
mov
leave
pop
lret
test
pop
loopne
mov
adc
mov
call
scas
outsl
ja
fwait
dec
push
and
or
mov
scas
sub
aad
xor
add
sbb
mov
out
jmp
mov
xor
mov
daa
mov
push
popf
lcall
jmp
insb
outsl
loop
inc
repnz
sbb
and
insb
stos
addr16
cmp
fs
mov
cmp
jecxz
or
arpl
movsl
pop
mov
xor
mov
xor
fistl
decb
mov
fsubrl
in
mov
cmpsl
and
fbstp
mov
dec
lock
fucompp
sti
jne
inc
add
addl
cli
subl
and
mov
ret
rcrl
fadd
pop
cmpsb
cmpsl
fdivr
pushf
test
sahf
dec
xchg
jbe
pop
scas
mov
test
mov
mov
mov
mov
xor
out
pop
pop
sbb
sub
mov
ss
pop
push
mov
jl
stos
addr16
dec
icebp
mov
sbb
and
aad
mov
scas
add
sub
push
call
shlb
xchg
or
lea
cltd
lcall
mov
push
mov
lcall
sbb
jg
jecxz
push
or
je
ficoms
leave
das
pop
daa
push
cmpsb
mov
add
or
adc
mov
aas
dec
mov
jle
negl
fiadds
inc
roll
inc
mov
mov
mov
fdiv
enter
ret
arpl
dec
jle
push
or
sbb
inc
cltd
fsubp
ljmp
stc
or
inc
push
xor
mov
push
movsl
xchg
add
gs
pop
out
xchg
sub
sbb
mov
std
jmp
dec
loopne
imul
popf
push
mov
xor
out
fwait
fs
shrb
xchg
dec
xor
push
xlat
mov
pop
pop
ljmp
xor
jns
adc
adcb
jl
xchg
adc
mov
scas
jae
cmpsl
sbb
fs
sti
loop
add
das
xchg
fnstsw
push
adc
add
mov
pop
pop
lcall
xor
rcl
data16
xchg
bound
lret
iret
sub
xchg
idivb
ficompl
js
into
arpl
mov
mov
dec
in
insb
clc
ljmp
mov
pop
scas
out
jbe
test
out
leave
xchg
pop
lea
and
movsb
sbb
cmc
es
xchg
incb
imul
out
pop
add
push
jo
sub
cmpsb
enter
rcll
cltd
adc
xor
dec
mov
dec
repz
pop
mov
daa
mov
jns
jge
lea
inc
xor
mov
ret
nop
enter
mov
subl
add
mov
stos
xchg
xor
bound
stos
inc
leave
in
int
lret
xchg
mov
and
ja
popw
xchg
jae
in
fstpt
scas
incb
dec
js
arpl
mov
push
in
mov
xchg
mov
add
sti
mov
mov
and
and
dec
or
roll
push
aas
insl
lods
adc
in
add
or
lock
mov
ficoml
orl
xacquire
jb
pop
nop
and
push
push
dec
aam
test
gs
shlb
or
or
sbb
dec
cmp
mov
push
jbe
leave
xlat
int
int
test
inc
inc
push
add
push
inc
sbb
fiadds
loope
cmpb
movsb
xor
mov
das
push
lret
cmc
adc
dec
gs
sbb
jmp
lods
and
push
addr16
insb
aam
xchg
mov
cmp
xchg
xor
mov
stos
mov
jae
sbb
xor
push
xchg
jmp
icebp
mov
dec
fstps
loope
fs
fisttps
pop
dec
mov
xchg
push
cltd
or
push
or
pop
cmp
pop
ret
jnp
adc
mov
mov
mov
xchg
stc
adc
push
mov
xchg
ss
mov
popf
mov
mov
mov
call
mov
lea
xor
es
lahf
lods
pop
into
loop
xorb
or
inc
out
dec
dec
inc
xorl
push
adc
xor
dec
ja
stos
ret
cwtl
mov
cmp
dec
imul
lds
clc
iret
mov
mov
pushf
cmp
xchg
xchg
sub
xor
xchg
orb
adc
loope
enter
xchg
cmp
jbe
fimuls
and
nop
xchg
ds
inc
sbb
sub
out
pop
and
outsb
loope
daa
pop
imul
pop
inc
pop
mov
add
sti
jb
fcomps
xchg
pop
add
xchg
adc
cltd
jo
aad
sub
push
sahf
mov
testb
mov
in
mov
jp
mov
sti
scas
add
cmp
mov
and
scas
cltd
loope
xchg
xchg
dec
out
fsubrl
std
repnz
je
or
imul
push
out
jae
pop
mov
dec
adc
pop
loope
inc
push
insb
dec
pop
movaps
js
shlb
jno
push
movsb
iret
rcr
into
fwait
sub
sbb
sub
ja
imul
jne
dec
push
jp
std
popf
shl
mov
jo
stos
xor
add
mov
cld
loop
mov
jbe
push
pop
inc
rcrb
jp
mov
popf
dec
or
test
dec
jb,pt
cld
clc
jne
inc
inc
mul
lret
xchg
mov
movsl
rol
xchg
xchg
mov
fsubrl
stos
mov
cmp
mov
xchg
dec
enter
mov
daa
sub
dec
scas
add
je
pusha
xchg
ljmp
inc
mov
imul
add
popf
mov
es
loope
lahf
xor
xor
add
jo
or
in
push
leave
cld
ljmp
movsb
sbb
imul
and
add
push
pop
dec
add
jo
das
testb
divb
cli
sub
jmp
out
jb
push
pop
sti
and
push
jne
and
inc
stos
cmp
pushf
add
cwtl
sbb
mov
xchg
mov
push
stc
ret
int3
adc
sub
mov
test
cmp
cli
mov
addl
or
insl
lea
push
lods
push
push
sbb
dec
sub
aaa
loop
lcall
faddp
mov
mov
mov
imul
sti
mov
adc
cld
add
jge
testl
aam
pop
or
cmp
out
sahf
pop
inc
fstl
and
cld
xor
leave
or
dec
mov
pop
xchg
or
ret
ja
mov
cmp
xchg
je
fists
jne
aas
and
mov
push
push
dec
rcrb
cli
shlb
test
pop
push
mov
repnz
testb
or
push
out
imul
push
in
in
mov
jno
pop
sub
fadds
mov
push
jb
jo
aaa
sbb
movsb
mov
mov
je
filds
or
cmp
ds
inc
and
pop
or
sub
sbb
cltd
in
pop
dec
inc
data16
int
daa
rol
ja
lea
mov
adc
adc
loopne
jp
push
and
push
call
mov
fs
cmp
lcall
cli
stos
sti
ret
pop
out
into
cltd
cmp
popf
xlat
mov
fucomip
ljmp
pop
sti
and
cmp
cwtl
pop
test
pushf
xorl
push
decl
cmpsb
dec
mov
dec
pop
push
negl
popf
subb
and
mov
sbbl
fcomip
jge
sbb
and
mov
clc
test
pop
stos
aad
cmp
fidivl
cmp
js
jle
cmp
adc
nop
add
jmp
pushl
aas
push
loope
ss
cmc
mov
int
or
aam
mov
add
mov
cmp
xor
adc
cmp
add
mov
fnstenv
rcrb
and
and
or
jmp
jnp
sahf
mov
push
aas
cwtl
aad
mov
dec
lret
and
aas
mov
mov
mov
aam
dec
inc
xor
gs
mov
pop
lods
fnsave
repnz
in
negb
push
or
jbe,pn
lods
inc
jl
dec
shlb
in
inc
mov
in
div
pop
ja
push
pop
jns
or
inc
xor
movsl
jl,pt
xchg
jmp
mov
fdivl
xor
stc
pop
jle
ljmp
lret
sub
out
js
fwait
add
nop
outsl
mov
outsl
hlt
jo
movsl
inc
arpl
nop
gs
mov
movsl
pop
arpl
sbb
ret
xchg
lahf
in
sbb
add
imul
aas
cld
adc
in
cmc
adcb
dec
adc
or
fsubp
dec
imul
das
loop
out
out
xchg
pop
mov
cmp
xchg
das
std
dec
dec
or
jmp
out
jmp
rclb
sub
push
addr16
push
mov
jmp
jg
fwait
xor
push
pop
inc
adc
xor
inc
cs
sbb
sarl
test
movsb
sbb
lods
test
mov
testb
jnp
faddp
pop
xchg
mov
stos
sbb
iret
or
dec
and
stc
insl
rcll
add
out
cmpsb
mov
mov
repz
mov
xchg
cmp
dec
add
and
stos
cs
mov
test
dec
ret
stc
mov
ret
sub
cmp
add
cmp
pop
dec
adc
sub
in
inc
xor
movsb
test
in
test
sbb
inc
leave
sub
inc
fdivl
adc
daa
and
cld
mov
jns
add
test
popa
fdivs
cld
test
shlb
lcall
or
mov
xchg
jo
aas
add
or
shrl
lcall
in
mov
aas
sbb
xor
ja
repnz
int
popf
insl
sbb
pop
cs
addr16
scas
aam
jb
addr16
in
test
in
aad
fisttpl
loopne
repnz
rcll
cmp
pop
or
xchg
jg
and
cmpsb
pop
or
pop
mov
into
cmp
iret
popf
js
into
in
addr16
popa
lret
push
jmp
mov
lcall
enter
dec
arpl
mov
ret
adc
call
js
lret
mov
lods
lea
enter
js
adc
pushf
mov
cmp
push
not
xor
add
xor
stc
sub
pop
test
loope
or
cmp
mov
lock
lds
xchg
adc
divb
mov
mov
cmp
mov
sarb
xchg
fistps
insl
jl
data16
mov
sbb
cmp
cmpsb
sbb
add
cld
data16
and
fistl
rcrb
cmp
sarb
or
insb
daa
lods
sub
out
lea
add
aad
mov
stos
add
inc
rcrb
clc
imul
sbb
pop
push
loopne
sbb
loop
cmp
addr16
mov
ja
and
mov
mov
lods
sbb
pop
in
dec
pushf
adc
mov
xlat
push
addr16
sub
or
fwait
sbb
pop
pop
add
loope
jmp
push
aaa
jmp
subb
and
dec
mov
sahf
mov
notb
cmp
sahf
adc
je
cmp
mov
imul
and
popa
push
adc
mov
cmpsb
gs
or
pop
lods
sbb
sub
movb
negl
dec
mov
mov
fistpll
ljmp
or
adc
push
mov
popa
push
mov
mov
mov
das
mov
inc
jmp
loopne
pop
aaa
jle
or
out
jbe
pop
loope
mov
sahf
or
push
out
movsl
in
aaa
sbb
fsubp
ljmp
xor
andl
xor
aad
movsl
shll
jmp
in
or
dec
jnp
fmuls
pushf
adc
sbbl
in
sub
mov
mov
sbb
pushf
sbb
shlb
push
aas
and
or
loopne
icebp
dec
jmp
mov
inc
cmpsl
push
pop
int3
inc
adc
mov
bound
insb
jno
push
leave
mov
popf
sbb
add
mov
xlat
bound
in
js
sub
hlt
stc
cltd
sub
inc
push
testl
jp
iret
cld
jae
cmpsb
jnp
stc
es
push
cmp
arpl
insl
mov
cmpsb
dec
popf
ds
mov
mov
mov
mov
cld
push
call
test
mov
jbe
pop
sbb
ret
pop
dec
out
out
inc
jno
and
jne
ret
lods
pop
orb
dec
ret
arpl
insb
add
mov
aad
fs
sbb
das
lds
cld
adc
jnp
insb
stc
push
xchg
bound
jmp
mov
jnp
repz
mov
push
into
loop
xor
xchg
jno
daa
lret
xchg
stc
sub
inc
mov
lcall
xor
fs
hlt
dec
pop
jae
outsb
lret
push
test
adcl
rorb
pop
rclb
push
push
pop
mov
add
push
cmp
xchg
mov
inc
mov
ljmp
inc
fs
mov
mov
push
cmp
jge
and
stos
push
test
mov
jae
mov
popa
push
fwait
push
leave
mov
das
sub
imul
daa
adc
cmp
lret
cltd
mov
pop
mov
push
pop
and
jnp
and
cmp
add
lahf
adc
insb
add
nop
pop
push
jmp
enter
in
lahf
mov
stos
pop
imul
test
mov
nop
jb
and
repz
fildll
cmp
lahf
lret
inc
das
xchg
and
lock
cmp
iret
mov
sti
sarl
sbb
mov
sbb
pushf
lcall
and
ret
fs
push
cmpsl
jmp
pop
dec
pop
adc
jnp
cmp
shlb
scas
les
out
or
xor
adc
fildll
inc
fwait
gs
sbb
adc
push
pop
cmp
mov
mov
lock
hlt
sbb
add
rcr
bnd
enter
cwtl
xor
mov
or
pop
lcallw
shll
fisubrs
imull
outsb
mov
xchg
inc
iret
xchg
cld
dec
push
or
cmp
pop
insb
fidivrl
leave
adc
mov
outsl
jmp
sub
or
add
ffreep
std
or
xchg
loopew
push
jae
jbe
cmc
cmp
cmp
fwait
pushf
and
or
roll
pop
inc
cmp
and
inc
jmp
scas
fsubl
pusha
push
int
xchg
mov
popa
adc
out
pushf
rcrl
aas
mov
es
or
ret
jo
in
push
or
fmull
enter
mov
imul
shlb
out
sub
lock
mov
scas
rorl
mov
pop
pusha
xlat
pushf
cmp
push
pop
ret
push
clc
dec
sbb
mov
jnp
cmp
xor
xchg
aas
mov
aas
es
repz
sarb
mov
jae
xchg
mov
lods
and
scas
sub
push
mov
mov
add
xchg
out
jne
sub
fsubrs
pushf
xorl
mov
or
pushf
incl
in
decl
movsl
push
mov
xchg
mov
xchg
or
lcall
enter
js
ja
jmp
cli
sub
sub
fsubr
rolb
mov
and
jb
negl
xor
jne
ret
mov
sub
xlat
dec
lret
xor
cltd
or
test
or
cli
pop
hlt
adc
lahf
scas
inc
cli
icebp
jl
xchg
inc
and
push
push
and
pop
mov
sti
mulb
in
out
aad
repnz
sarl
cmp
jbe
lea
ljmp
test
jmp
jno
cmp
stos
or
cmp
sbb
push
hlt
cwtl
mov
adc
ds
mov
stc
outsb
shlb
imul
pop
enter
inc
mov
xchg
and
xorl
je
dec
aas
xor
aam
adc
mov
stos
jmp
cltd
cmpb
jns
imul
mov
mov
lret
pop
mov
cmp
neg
sbb
jmp
cli
insb
sbb
fcoml
xchg
and
les
xchg
or
dec
test
outsl
stc
mov
mov
cwtl
in
xchg
stc
pusha
bound
xchg
in
mov
push
mov
xor
dec
mov
out
mov
push
lret
mov
aad
or
das
sub
les
dec
cwtl
adc
adc
cwtl
vandps
fcompl
or
test
les
sub
adc
mov
xor
push
jo
dec
and
xor
and
rcl
or
or
shlb
push
push
xor
inc
mov
mov
push
mov
orb
movsb
or
xchg
fists
test
pop
sbb
xchg
mov
xlat
cmp
call
mov
pop
add
leave
fnsave
and
mov
insl
cld
mov
mov
insb
aam
push
xor
add
lds
jecxz
dec
push
imul
xor
outsl
repz
sbbb
cmp
mov
or
subl
jbe
sbb
xchg
test
inc
mov
mov
test
mov
loope
rep
and
loop
ret
fsubrl
push
popa
cmp
adc
jp
cmp
icebp
add
ret
loop
inc
popa
xchg
jnp
daa
testb
push
dec
sbb
inc
scas
sbb
cmp
mov
vpshufd
hlt
xchg
jp
repz
stc
arpl
cld
pop
fwait
sbb
sub
out
jnp
sbbb
sub
jl
aaa
and
sub
cli
jbe
out
mov
inc
lods
ret
fiaddl
inc
inc
lea
out
pop
ja
jbe
pop
int3
lock
stos
bound
iret
mov
pushf
outsl
insb
mov
jmp
imul
mov
sbb
arpl
xchg
sub
scas
bswap
lds
test
sahf
fcoms
ja
inc
and
mov
adc
scas
gs
test
pop
xor
insl
jmp
cwtl
push
push
shl
dec
jno
sub
push
shr
fmull
sub
outsl
mov
movsb
imul
and
dec
cmp
ja
dec
sub
cwtl
mov
sbb
sub
daa
idivl
lahf
loopne
ss
dec
or
popf
jge
cmp
js
fldt
sub
push
xlat
lahf
int
mov
cmp
fwait
sbb
jg
popa
seto
fistl
enter
aas
xchg
dec
cld
cwtl
xchg
movsl
cmovle
and
and
add
add
or
lcall
shll
add
cs
and
cmp
icebp
cmp
xchg
aam
push
repz
addr16
sti
sub
xlat
mov
inc
scas
cmc
das
add
mov
pop
stos
std
xchg
push
push
push
push
push
xor
or
mov
loopne
or
and
sub
jge
outsl
or
push
outsl
pop
sti
dec
movsb
stos
pop
xchg
fildl
and
dec
imul
push
clc
cli
sahf
mov
pop
mov
jge
mov
lds
imul
fwait
ret
sub
xor
bound
and
cmp
les
sub
cltd
sub
stc
push
cmpsl
iret
loopne
dec
sbbl
xor
gs
out
jg
fistl
cmp
push
leave
dec
push
jbe
lds
and
xor
shlb
cmp
scas
dec
int3
xor
mov
sub
adc
or
add
mov
leave
adc
pop
nop
jecxz
aas
push
arpl
std
int3
rolb
inc
flds
test
bnd
ja
sbb
add
pop
ds
sbb
popw
pop
and
mov
out
leave
xchg
push
jl
xor
ja
mov
sbb
int
lds
cmp
loope
pop
repz
xchg
dec
jb
lock
xor
pop
xor
push
dec
jae
mov
stos
call
sub
pop
pop
pusha
not
shll
clc
sbb
dec
sarl
xchg
bnd
sbb
lcall
xor
xchg
add
pop
in
dec
insb
popfw
in
mov
movsl
mov
jg
sub
popf
lods
sub
pop
mov
cmpb
cmpsl
ja
scas
out
std
mov
out
push
or
pushf
jnp
mov
mov
ja
test
xor
lret
clc
insb
ds
scas
mov
stos
mov
je
and
xchg
aam
jns
lahf
in
mov
iret
cmpsl
push
sti
pop
ror
xchg
sub
lods
pop
aad
dec
out
lret
pop
int
mov
insb
shrb
jecxz
out
push
orb
push
and
pop
mov
lods
or
push
dec
pop
mov
cwtl
pop
cmp
mov
outsb
cmp
cltd
hlt
fidivl
pop
lock
xchg
add
mov
lret
pop
clc
ficomps
mov
cmp
jbe
jnp
rorl
cmpsl
stc
xchg
es
pushf
cmp
push
add
clc
adc
push
push
mov
mov
add
movsl
pop
push
into
jb
icebp
push
bound
cmpsb
add
xor
cmpsl
xlat
cmp
fs
dec
cmp
mov
int
jbe
jns
mov
sub
dec
xor
cmp
cmpl
inc
fiaddl
mov
adc
jbe
inc
movsb
jecxz
mov
jo
aad
ds
js
cmp
xchg
lret
popa
push
pop
mov
mov
cmp
inc
cltd
daa
add
ds
nop
lods
cld
push
sub
fiadds
cmpsl
mov
aad
and
stos
sub
out
inc
frstor
bound
ljmp
xchg
stos
sub
xchg
push
div
mov
lret
test
mov
fmuls
enter
jne
sahf
sub
jns
jecxz
jl
aaa
xchg
js
mov
push
pusha
mov
push
adc
std
ficoms
adc
mov
movb
fdivl
scas
aas
aaa
scas
flds
cmp
jmp
les
fnstenv
cltd
jl
ljmp
dec
leave
andl
data16
xchg
push
adc
mov
sbb
adc
mov
add
xor
push
mov
movsb
in
call
fisttpl
pop
stos
lods
xchg
mov
add
ret
mov
pop
push
push
lock
jmp
rolb
mov
call
xchg
stos
mov
xchg
sbb
lock
test
fnstcw
mov
roll
jno
or
cmp
es
cwtl
std
sub
push
out
cli
or
sub
fidivs
clc
in
and
mov
repnz
outsb
add
push
arpl
push
mov
in
xor
icebp
push
jl
movsl
leave
sub
xor
sbb
jle
sbb
inc
cli
dec
lret
lds
xor
cmp
lret
inc
fidivrs
jg
push
mov
jb
xor
inc
mov
or
adc
adc
in
push
iret
xor
mov
imul
sub
jne
xor
dec
and
dec
clc
icebp
js
adc
mov
mov
pop
fcmovb
loopne
cmp
add
repz
pop
dec
cli
mov
adc
xor
jns
push
push
jecxz
mov
cwtl
jne
clc
js
add
imul
pop
in
dec
les
std
mov
stc
test
xor
jp
and
pusha
les
bound
out
mov
out
jb
sahf
xchg
mov
push
movsb
sub
push
and
sbb
dec
iret
mov
cs
dec
pop
push
push
mov
jle
xchg
stc
xlat
mov
jb
test
roll
sub
xor
cli
and
test
out
pop
pusha
xchg
sti
and
adc
cmpb
add
cmc
in
cld
cmp
test
shll
pop
popf
mov
sub
test
out
inc
int3
push
jnp
inc
es
inc
push
icebp
push
bound
int3
jmp
lcall
adc
addl
or
pushf
in
cmc
or
jecxz
arpl
mov
shr
aad
xor
pushf
pop
outsb
xchg
sub
xchg
arpl
frstor
or
add
xchg
push
and
dec
push
mov
sbb
sbb
mov
lahf
pop
or
and
pop
hlt
fcompl
adc
push
or
add
and
lods
inc
adc
sbb
fdivrs
stos
xchg
jmp
in
and
pop
pusha
adc
movsb
adc
add
mov
pop
hlt
cmpsl
and
xor
jg
mov
rcll
fsubrl
xor
or
inc
push
inc
sahf
or
subb
sbb
imul
aas
push
into
repz
in
mov
inc
adc
test
lretw
mov
or
push
outsl
and
xor
push
je
cmc
mov
jnp
test
xchg
fnsave
inc
pop
push
mov
adc
pop
lret
pop
in
push
popa
jne
loopne
mov
push
cmp
imul
in
addr16
sbb
add
or
push
adc
push
in
push
push
into
dec
pop
clc
push
or
jb
pop
or
ss
and
insb
movsl
scas
inc
int
sbb
and
cmp
push
xchg
add
adc
into
imul
sahf
mov
js
loopne
decl
add
inc
sbbl
mov
pop
jns
movsl
lcall
in
repnz
push
out
fsubrs
leave
add
fsubrl
or
sub
fisttpll
add
jmp
ljmp
clc
or
add
or
cmp
sub
mov
es
sbb
push
orb
add
addr16
adc
cmp
cmp
bound
pop
jbe
dec
sbb
into
cmp
das
cmp
popf
fbld
lea
dec
xlat
push
xchg
xor
inc
mov
roll
outsb
icebp
aam
or
inc
mov
cld
sbb
push
dec
ret
cmc
outsl
inc
push
mov
jecxz
insl
pop
mov
push
imul
repnz
fidivs
dec
aam
cwtl
pop
and
jg
mov
call
mov
and
outsl
sbb
fdivrs
xor
add
lret
mov
cmp
jnp
or
call
enter
movsb
andl
in
and
xchg
mov
or
rclb
mov
mov
jns
inc
pusha
rcll
xchg
jb
mov
pusha
add
daa
pop
ljmp
mov
and
mov
sub
cmp
jae
mov
andb
jb
in
xchg
push
rcrl
mov
bnd
mov
shr
pop
cmp
sbb
mov
scas
mov
sub
and
fucom
sub
inc
aaa
mov
fs
stos
push
fwait
xlat
jecxz
popf
sbb
out
sub
sahf
cld
mov
sbb
aaa
lock
into
dec
mov
mov
add
jbe
mov
ret
cmp
clc
es
mov
cmpsl
in
bound
pop
sbb
js
enter
cli
pop
mov
lods
jo
adc
jmp
in
xchg
fldenv
dec
test
mulb
js
mov
std
mov
mov
mov
xor
loopew
pop
add
sub
cmp
cmp
repz
mov
push
int
jl
inc
xchg
jge
push
scas
xchg
mov
mov
fidivl
sbb
stc
jae
mov
scas
jb
pop
or
xor
lret
add
xor
cmp
test
scas
js
je
subb
popa
pop
hlt
scas
imul
adc
movsl
vmulpd
clc
inc
pop
xchg
cltd
mov
dec
rcrl
jae
dec
divb
dec
fwait
call
cld
popa
stos
and
movsl
bound
jge
add
aaa
or
lods
psraw
les
stc
lahf
jmp
pop
jae
popf
mov
add
pusha
jle
outsb
mov
adc
pop
imul
push
push
jp
push
pop
jp
xchg
inc
sub
sti
test
iret
fsubrl
mov
popf
fs
movsb
push
push
pushf
sub
testl
jecxz
push
cmp
test
rcr
push
lods
das
adc
jnp
mov
movl
inc
mov
push
mov
pop
mov
sbb
insl
mov
pop
xor
stos
mov
ja
add
cltd
push
pop
jmp
scas
add
mov
fwait
test
fisttpll
add
sbb
pop
push
mov
popa
push
es
icebp
mov
in
push
jbe
add
push
imul
lret
popf
mov
push
bound
xchg
pop
sbb
mov
xchg
subl
arpl
int
in
iret
clc
xchg
int
mov
mov
cmp
jo
xor
mov
std
fildll
cltd
pop
mov
js
sahf
dec
int3
lods
es
dec
push
leave
sbb
popa
xor
aas
imul
xchg
dec
dec
stos
xchg
int3
dec
test
jnp
repnz
lahf
push
xchg
scas
jecxz
dec
mov
dec
and
xchg
popa
dec
test
cmp
push
mov
inc
pop
lds
inc
add
jbe
test
mov
xchg
push
stos
sahf
fwait
xchg
mov
ss
pop
and
push
dec
lret
sbb
mov
xlat
jo
sub
cmpsl
std
aam
adc
mov
pop
mov
add
outsl
push
sub
jb
mov
cmc
xchg
cmpsl
xor
bound
mov
push
jp
cltd
inc
add
test
dec
mov
lahf
arpl
mov
popf
pop
std
scas
pop
mov
lods
pusha
mov
fwait
outsl
loop
test
mov
jno
pop
fstpt
in
repnz
dec
cmp
pop
and
adc
mov
ret
add
mov
sub
rorl
jmp
adc
adc
mov
mov
data16
or
ljmp
sar
scas
jne
dec
push
icebp
shlb
scas
lahf
icebp
lret
subl
or
cmp
cs
int
inc
lret
sbb
orb
in
outsl
cmp
test
aas
push
test
test
enter
arpl
add
adc
pop
addr16
mov
xchg
jnp
mov
orl
inc
lods
andb
imul
jns
mov
adc
push
jb
and
mov
xor
call
cmp
mov
ljmp
pushw
movsb
cli
lds
xor
cwtl
nop
mov
pop
frstor
push
lret
jns
leave
dec
pop
xor
pop
cmpsb
inc
mov
lock
xor
push
pop
stos
inc
pop
pop
inc
inc
cmp
cs
pop
xchg
stc
dec
mov
mov
aas
jae
mov
leave
pop
and
out
jno
and
push
imul
arpl
xchg
inc
sub
lds
mov
or
push
movsb
jecxz
push
jo
jns
or
inc
sub
xchg
cmp
data16
les
shrl
xchg
out
dec
xor
pop
add
or
mov
cmp
lods
fisubrl
cltd
push
push
aad
bound
push
pop
hlt
roll
or
inc
dec
enter
mov
mov
xor
ret
push
xchg
lods
fs
aam
stos
adc
jp
fs
rsm
pop
aaa
rol
lea
mov
xchg
fldl
dec
repz
repnz
call
stos
je
imul
adc
dec
loope
nop
int3
add
loope
loope
or
out
insb
inc
push
adc
lods
xor
test
out
mov
movsl
out
pop
cmp
jbe
jl
sbb
insb
sub
mul
ljmp
stos
test
dec
ret
xorl
push
pushl
fadd
aaa
imul
xchg
imul
popa
bound
in
pop
fcompl
shll
imull
xchg
stos
out
inc
stc
imul
jge
loope
jp
cmp
lcall
lock
sub
mov
mov
cmpsl
rorl
test
or
je
je
ja
or
repnz
jns
or
push
test
mov
fstl
movsb
mov
imul
push
xor
insl
stos
bound
add
aas
cmpsb
test
dec
mov
mov
adc
mov
inc
dec
hlt
lret
xor
mov
inc
dec
cmp
xchg
jb
stos
jmp
and
into
mov
add
aad
add
insl
and
jecxz
mov
nop
dec
adc
popf
mov
sbb
aam
lcall
lods
xor
sub
test
mov
and
in
xor
mov
sub
mov
mov
sbb
leave
push
jne
add
test
inc
adc
popa
int
push
fcmovu
scas
xor
add
daa
mov
aad
movsb
xor
sbbb
pop
std
xor
mov
mov
cmpl
sub
mov
mov
push
xchg
push
sub
jb
idiv
scas
hlt
mov
push
icebp
out
fiaddl
test
add
insb
mov
mov
xchg
push
pop
ljmp
test
xor
inc
add
clc
dec
test
dec
xor
push
push
jmp
sub
imul
aaa
in
fs
adc
stos
pop
lock
mov
stos
and
sbb
push
cmp
ja
jb
cltd
dec
out
stos
jno
mov
ljmp
push
out
mov
fdivp
inc
push
in
cmpsb
in
or
out
inc
sbb
loopne
inc
fnstsw
loope
xchg
pop
or
and
daa
mov
xor
xchg
inc
enter
pop
dec
dec
mov
mov
dec
pop
xchg
mulb
iret
jle
inc
add
rcrl
cltd
jp
cmpsb
in
mov
loop
out
and
rorl
fidivs
push
jg
outsb
setl
dec
push
fstpt
ror
insb
ss
and
jno
and
in
das
outsb
addr16
dec
sbb
test
cmp
ja
stc
ret
inc
mov
ret
pop
incl
fimull
hlt
hlt
daa
push
lds
or
cmp
out
pop
pop
lret
sbb
inc
jb
push
xorl
leave
stos
pop
dec
sbb
cmpsl
xchg
addb
ss
jge
jne
inc
pushf
pop
mov
out
js
adc
mov
nop
hlt
jb
movsl
mov
je
cmpb
lret
xor
xchg
sub
xchg
mov
pop
dec
or
jae
movsl
lods
shrl
cmp
ret
cmpsb
xor
inc
imul
enter
cmp
inc
pop
fstps
scas
jns
sub
insb
aad
popa
and
jp
xchg
in
adc
enter
cmp
jb
sbb
call
mov
sar
movsl
push
ljmp
and
imul
mov
addr16
mov
xorl
fxch
add
imul
repz
mov
adc
dec
mov
cs
sbb
aam
out
addr16
inc
mov
scas
pop
lods
icebp
mov
ljmp
pop
push
pop
ds
daa
adc
cmp
pushl
pop
mov
xchg
mov
sub
xchg
mov
icebp
push
jge
data16
insl
jl
decl
lods
xchg
test
jno
add
cmpsl
insb
cmp
mov
push
dec
push
sub
repz
xchg
fistl
test
pop
push
jno
jl
scas
in
cmp
or
ret
test
jae
imul
pop
test
subl
jae
outsl
xor
dec
data16
mov
lods
in
fs
imul
call
ficompl
push
into
rcll
test
pop
lds
loop
pop
insl
shll
mov
add
cs
sahf
xchg
rcr
pop
mov
arpl
pusha
pop
push
push
iret
call
jmp
jp
rcr
mov
in
popf
or
addr16
dec
push
movsl
push
out
mov
int3
das
mov
xchg
scas
repz
add
rcr
dec
push
sub
pop
js
test
sbb
mov
test
inc
je
dec
cltd
mov
sbb
sub
rorb
pop
out
mov
test
out
mov
lret
aam
inc
xor
mov
out
or
jge
pop
aad
xchg
mov
fisttpl
fisubrl
insb
mov
push
pushf
test
dec
pop
rorb
jns
adc
mov
pop
mov
cmp
push
mov
push
scas
lret
sbb
aam
notl
fisttpll
push
in
xor
add
or
pusha
inc
mov
and
xchg
mov
outsl
jbe
add
test
jo
int3
aam
loop
imul
lcall
inc
cwtl
fisubs
js
data16
xor
jns
or
jmp
lea
xchg
xchg
clc
adc
stos
hlt
js
mov
mov
test
xchg
leave
add
iret
ja
in
inc
leave
pop
mov
mov
incl
mov
or
fildl
call
jle
ret
lret
cwtl
sbb
pop
or
adc
out
lret
ret
loope
sbb
inc
dec
xor
adc
cmp
imul
in
xchg
aam
xor
jecxz
inc
inc
mov
mov
push
call
xor
fs
leave
lock
mov
jmp
add
lds
dec
enter
xchg
pop
inc
lods
loop
mov
or
xchg
push
rclb
loop
mov
pop
or
xlat
xchg
stos
fsubrl
jae
fisttpll
xor
outsl
scas
into
fisttpl
movsb
cmp
fidivrs
and
and
popf
sbb
rclb
pop
sbb
popa
mov
ljmp
jecxz
xchg
notl
cmc
mov
push
cmp
mov
add
imul
xor
fistpll
inc
fs
xchg
stos
add
or
cltd
cs
test
mov
xchg
pop
inc
in
sbbl
aas
mov
lahf
or
mov
popw
mov
sbb
pop
push
lds
out
xchg
cmp
es
dec
push
jge
sub
xor
add
pand
jecxz
arpl
fsubp
dec
shrb
mov
lds
add
das
push
xchg
push
mov
cs
ljmp
sub
push
push
pop
or
add
adc
orb
xor
popa
adc
jmp
jg
jno
insl
in
bound
arpl
pop
std
insl
lcall
dec
aas
out
cmp
arpl
mov
jp
xor
pop
incb
jmp
mov
cmp
insl
lock
adc
pop
sub
push
jg
jmp
jnp
repnz
mov
movsl
jnp
in
aaa
sub
ficompl
and
inc
jne
lods
cmp
jae
push
jmp
mov
lret
fsts
xchg
jmp
js
sbb
mov
jbe
cld
lret
bound
pop
sbb
dec
ficoml
cli
xor
xchg
imul
inc
push
int
test
je
mov
je
jecxz
push
jle
push
push
ja
aaa
mov
pop
lahf
sarb
pop
cli
xchg
push
push
lahf
loope
adc
mov
pushf
aam
test
jl
push
mov
pop
daa
cltd
adcl
xchg
in
push
xchg
stos
arpl
push
test
cld
add
inc
ret
xchg
jb
xor
mov
cli
or
daa
stc
jl
scas
dec
inc
fldl
andb
and
xor
idivb
rcll
cld
push
inc
xchg
push
mov
fmull
daa
test
les
mov
fs
jmp
fdivl
inc
mov
cmpb
xor
inc
clc
xor
push
popa
cmp
mov
daa
inc
movsb
push
jg
push
mov
adc
pop
lock
scas
jp
outsb
sbb
ret
mov
push
rclb
jns
and
outsl
mov
sub
ljmp
fnstcw
mov
cmp
cmp
mov
mov
rcrb
mov
add
nop
jge
and
adc
jle
sbb
cmp
cmp
jge
ss
fs
insl
fidivrs
cmc
mov
jo
xchg
mov
ret
add
sub
mov
ja
push
aaa
pop
es
pop
ret
or
jle
testl
mov
std
add
mov
mov
stos
inc
mov
xchg
inc
inc
sbbl
xchg
sub
scas
adc
mov
inc
or
insb
sub
inc
jo
daa
stos
dec
out
sbb
cmc
dec
lret
adc
xchg
cmc
ret
mov
and
add
aad
scas
inc
dec
add
inc
cwtl
or
xor
ljmp
mov
cltd
and
mov
add
mul
mov
das
inc
pop
out
test
ficompl
mov
cmp
lahf
xor
rcrl
xor
mov
int3
dec
lods
cmpsl
fisubrl
inc
cmpsl
gs
mov
jne
push
jmp
lcall
movsb
daa
push
jecxz
mov
stos
ret
in
out
rcrb
outsl
sbb
jge
adcl
and
xchg
leave
jae
mov
cmpsl
jns
mov
lock
and
fistpl
rcll
insl
sub
clc
and
fistpll
add
or
sub
test
pushf
add
jl
mov
mov
cmp
push
outsl
jns
jg
shl
fisttpl
mov
fisubrl
pop
das
xchg
js
and
lock
pop
dec
cld
pop
aad
fwait
jo
mov
xchg
xor
pop
and
lret
mov
pop
pop
ljmp
mov
enter
push
cmc
mov
jmp
sub
into
sub
hlt
adc
adc
ljmp
int
push
or
out
sub
push
shrl
stos
int3
hlt
int3
adc
inc
dec
je
fcomp
jecxz
adc
loopne
sbb
loope
outsb
pand
sbbl
mov
mov
scas
sub
aaa
add
xchg
dec
ret
pop
loopne
pop
clc
loopne
jp
jl
jbe
or
imul
pusha
out
jno
in
std
xor
int3
pop
loope
mov
jle
push
jne
cmp
xchg
jbe,pt
xchg
mov
pushf
add
aas
sbb
out
imul
cmp
push
in
sbb
rcrb
stos
mov
lret
or
pop
sub
ud1
sahf
enter
xor
push
scas
cmpsb
pop
push
and
add
xor
mov
ror
ret
in
sub
daa
push
and
dec
lock
push
es
lret
and
xchg
je
out
and
pop
aaa
jo
pop
ljmp
and
lret
into
push
sti
xor
add
xchg
ret
sub
xchg
and
dec
xor
push
dec
inc
lock
mov
pop
push
test
loopne
cmp
mov
enter
fiadds
in
shrl
in
fdivrs
js
ds
int
adc
or
mov
cmp
cmp
inc
cmp
xlat
and
push
inc
rcll
aas
push
int3
jb
and
movsl
mov
mov
add
je
jle
jnp
imul
inc
in
rcll
sub
or
shrb
jb
inc
adc
or
imul
rclb
pop
inc
sbb
xchg
mov
leave
insb
scas
insl
add
xchg
jae
xchg
fstpl
xchg
xchg
idiv
icebp
push
mov
adc
cmpsl
push
mov
lods
mov
jns
push
jb
mov
jo
mov
sub
jmp
sub
cmp
gs
pusha
js
xchg
mov
or
inc
or
xor
mov
jg
xchg
aaa
push
sub
inc
push
aaa
push
mov
pushf
sub
popa
mov
leave
mov
jmp
cltd
or
mov
jle
jle
int
cmp
xchg
pop
xor
movl
dec
lahf
push
pop
xchg
decl
pop
cli
aas
cmp
jle
outsl
jae
or
fs
sar
push
jl
xchg
outsl
or
cmp
in
xchg
mov
sarb
in
fucom
insl
and
and
movsb
sbb
inc
push
and
ds
sbb
xchg
loopne
addb
sub
and
je
sbb
mov
pop
jg
outsl
cmpsl
sub
leave
sub
inc
shrl
aad
scas
adc
add
addr16
push
aas
jbe
out
js
mov
into
cld
movsl
cltd
ficoms
or
test
sbb
js
adc
push
jno
ficomps
in
jno
daa
testl
pop
sub
dec
es
mov
cmp
sbb
imul
adc
adcb
dec
add
cmp
arpl
addr16
jge
xlat
push
je
outsb
aad
pop
imul
dec
fists
ja
push
xchg
lock
adc
insb
sub
add
test
xor
mov
icebp
mov
loope
jmp
push
push
cli
subb
es
or
add
loopne
jnp
xor
cmpsb
fistps
addr16
mov
stos
xchg
push
aam
mov
mov
je
imulb
sahf
jbe
in
cld
movb
mov
push
movsb
add
testl
jecxz
insl
outsl
pop
shlb
and
push
inc
movsl
sti
fs
ljmp
fninit
mov
fidivs
loopne
fsts
loop
cmp
sbb
es
lds
add
fmul
ret
cmp
mov
ljmp
loopne
jmp
sbb
pop
mov
es
fs
dec
mov
cmp
icebp
ljmp
and
xchg
mov
cmp
lcall
aaa
pop
pop
cwtl
inc
cmp
add
dec
sahf
cmp
xchg
test
jmp
pop
imul
push
lods
push
shll
cmpsb
mov
pop
dec
adc
pop
cmp
mov
inc
imul
add
insb
es
aad
push
cmp
sbb
notb
xchg
jo
pushf
lcall
arpl
sbb
stos
nop
sbb
dec
mov
outsb
clc
aam
ror
add
lock
mov
mov
bound
cltd
repz
ror
lods
mov
lcall
imul
in
test
roll
xchg
sub
leave
xchg
pop
cltd
add
outsb
out
addl
call
pop
jnp
clc
cmp
decl
cld
enter
pushf
pop
js
dec
xor
sub
test
pop
test
outsl
xchg
negb
mov
test
inc
xchg
and
cmpsb
sbb
call
bound
push
out
cmp
in
pop
cmp
bnd
pop
cmp
push
pop
mov
mov
iret
xor
cmp
cltd
mov
out
inc
sub
out
loop
jne
clc
in
adc
and
repnz
mull
addr16
push
fwait
loopne
or
loopne
dec
arpl
sbb
cld
daa
push
dec
and
popa
adc
bound
and
mov
jns
enter
stc
mov
icebp
cmp
jo
add
mov
xor
sbb
imul
imul
push
adc
push
pop
jecxz
mov
sbb
dec
jo
cmp
mov
push
stos
jb
arpl
mov
repnz
xchg
mov
pop
pop
enter
ds
push
les
std
loop
cmp
fists
incl
rcrb
repz
insb
cwtl
popf
pop
sbb
jge
test
stc
mov
icebp
mov
in
sbb
xor
inc
ljmp
inc
int
in
dec
mov
lea
cmp
xor
inc
hlt
push
dec
in
pushf
out
pushf
push
popa
mov
data16
lret
int
push
lods
push
call
dec
mov
and
dec
xor
inc
push
jno
daa
push
push
add
sub
xchg
cld
mov
inc
gs
push
idivl
jo
test
clc
arpl
or
push
push
sbb
dec
adc
insl
inc
fnsave
xchg
gs
insb
cmp
shrb
push
dec
add
xor
jae
sarb
loopne
adc
lcall
arpl
insl
adc
push
xchg
push
and
cmpsl
or
insl
popa
repnz
mov
mov
cld
movsb
xchg
ja
int
and
inc
loop
pushf
hlt
mov
mov
mov
fldenv
ja
push
push
std
sbb
call
aas
daa
mov
cmovge
push
mov
loope
fcoms
cmp
mov
cli
sahf
rcrl
mov
nop
jne
les
loop
das
lods
inc
lret
xor
pop
cltd
inc
sbb
aaa
jg
popa
mov
jmp
cwtl
pop
sub
cwtl
jmp
popf
add
stos
sub
outsl
repnz
hlt
xlat
xor
mov
sub
add
mov
out
and
arpl
dec
fs
insl
popf
out
and
pushf
and
adc
cmp
testb
sti
pop
jg
pusha
sbb
cmp
add
nop
out
sbb
loopne
xor
xor
dec
adc
stos
cwtl
mov
sbb
pop
inc
test
out
cmpsl
aam
lods
movsb
mov
dec
jmp
add
or
insb
mov
sbb
inc
pop
imul
jle
add
mov
in
in
mov
fldcw
rcrl
mov
out
shll
cmp
sub
lret
add
lahf
int3
dec
xor
pushf
cwtl
fdivr
inc
mov
add
push
cmp
sbb
and
lret
adc
mov
ja
call
pop
iret
lods
push
jmp
jbe
mov
pop
adc
enter
fbld
push
or
push
jb
cs
loopne
lret
mov
nop
cwtl
arpl
push
pop
xor
cmp
inc
push
cwtl
stc
gs
jp
mov
sbb
pop
cmpl
pop
outsb
rcll
mov
mov
les
xor
cmp
into
and
test
inc
fidivs
in
scas
daa
out
mov
xchg
push
stos
rolb
lods
mov
sbb
pusha
pusha
or
enter
jp
fsubrl
xchg
mov
out
push
or
lods
adc
out
mov
aaa
inc
push
js
lds
pop
cmp
or
xlat
cmc
test
push
dec
cs
outsb
dec
push
fwait
daa
fwait
and
push
pop
hlt
in
dec
pop
int3
cld
imul
fldenv
xor
les
xor
sub
ret
jo
adc
push
cld
arpl
adc
xor
pop
mov
cwtl
pop
in
pop
outsb
stc
scas
aas
dec
shlb
ljmp
sub
or
sub
mov
add
pop
push
xlat
aam
fs
incb
loope
je
dec
lcall
sbb
lock
pop
xchg
data16
fidivrl
mov
push
fists
iret
leave
sbb
mov
roll
stos
sbb
ss
aaa
in
cltd
xlat
lods
bound
pop
shl
cmp
lcall
push
lcall
test
icebp
pop
fisttpll
jmp
out
addr16
pop
inc
fisubl
jge
stc
jnp
roll
frstor
push
dec
enter
lcall
mov
sbb
xor
faddp
hlt
mov
fwait
jp
or
or
mov
sti
mov
test
call
fldenv
push
imul
fiaddl
add
xchg
xchg
cld
push
hlt
pushf
sbb
cmpsl
aaa
stos
xor
ret
push
sbb
mov
adc
fldl
fisubs
fwait
mov
sub
lds
je
pop
sti
test
cmp
repz
or
cmpsl
repz
decl
jo
ret
xchg
mov
adc
imul
cmp
repnz
xchg
dec
xchg
mov
sarl
dec
hlt
cmpsl
mov
arpl
mov
or
int3
xlat
xchg
jns
call
into
jmp
fs
mov
jnp
fildll
arpl
xor
mov
lods
cmpb
sbb
js
fs
push
outsb
xorl
leave
negl
shll
xchg
pushf
loope
lock
mov
mov
jecxz
imul
jns,pt
pushw
push
stos
sbb
shlb
or
mov
dec
jo
mov
cmp
add
xchg
aad
sub
xlat
add
inc
fmul
jnp
insb
imul
mov
in
pop
cmp
fnstcw
adc
outsl
rcrb
mov
sti
and
cmp
sub
test
lock
dec
outsb
ret
pushf
pusha
cs
popf
pop
add
pop
sub
xor
push
movsb
roll
pop
or
std
jp
dec
jbe
and
popa
mov
pushf
test
inc
dec
mov
cmp
out
dec
push
scas
shlb
hlt
dec
adcb
jae
sarl
inc
sub
je
jbe
jns
adcb
and
jge
adc
push
lea
sub
xor
std
or
inc
lods
cmpsb
and
and
out
adc
mov
bound
mov
xor
jmp
lcall
dec
mov
adcb
shll
cmp
shl
jp
and
or
pop
lret
xor
xor
pop
pop
pop
xchg
cmp
rolb
and
adcb
xchg
jg
stc
into
add
repz
inc
in
mov
and
ficoml
xchg
repz
enter
into
les
push
jns
sbb
mov
push
loop
lods
ret
sbb
sub
mov
cmp
dec
cmp
mov
xor
and
or
sub
cwtl
sahf
movsl
mov
xchg
outsl
sub
in
push
cmc
clc
lret
fildll
sub
sbb
test
or
icebp
std
lahf
dec
xchg
pop
sub
shll
cmp
scas
push
push
jle
cmp
sbb
push
xor
push
icebp
ja
jmp
enter
mov
pop
inc
notl
jge
add
or
hlt
imul
cmpsl
fisubs
mov
arpl
mov
pop
mov
mov
repnz
loopne
repz
inc
call
mov
rcrl
fs
cld
add
fidivs
sub
lock
je
movsb
xchg
push
adc
outsl
pop
popa
xchg
or
nop
or
xchg
stos
push
push
xchg
lahf
ret
aas
jbe
test
sar
inc
inc
push
inc
add
test
pop
in
lret
adc
fwait
sub
hlt
std
cmc
je
dec
jge
xlat
fimull
xor
sub
fucomip
cli
jbe
inc
jp
or
adc
push
movsl
arpl
cltd
loope
lret
xchg
jecxz
sub
cli
rcl
inc
add
sbb
arpl
das
jne
aas
mov
or
cmpsb
cmpl
lods
bound
dec
add
pop
add
jne
out
lret
dec
add
fstl
das
inc
outsl
or
mov
sub
push
inc
xor
xchg
sti
enter
cld
adc
dec
lret
je
xlat
or
mov
negl
clc
sbb
cwtl
sbb
cmpsl
and
hlt
je
inc
xchg
mov
jecxz
push
jle
cmpsb
outsb
add
jns
out
jge
sbb
mov
loope
mov
ret
mov
jle
inc
bound
leave
push
push
js
gs
pop
test
push
lret
jno
xor
outsl
sahf
adc
mov
xchg
add
in
mov
int
mov
lods
orb
sbb
dec
je
pop
mov
fisttps
dec
pop
insb
inc
arpl
xchg
lcall
xchg
mov
mov
cltd
xor
lds
outsb
in
jle
sub
pop
jl
cmp
mov
lock
mov
pop
pop
xchg
push
xchg
xor
jl
fstpt
popa
loopne
add
mov
pushf
aam
insl
dec
pop
xchg
pop
test
sbbl
out
jmp
jp
aas
popf
jnp
std
or
mov
pop
inc
mov
jg
mov
js
push
scas
fnstcw
dec
xbegin
daa
dec
push
gs
ficomps
loope
sbb
sarl
popa
std
xchg
pop
mov
xchg
push
ds
and
shl
sub
pop
mov
inc
xchg
fidivs
es
mov
mov
les
sub
out
mov
cwtl
push
jg
mov
mov
inc
stos
sbb
jl
add
in
push
testb
mov
xchg
mov
rcr
cld
imul
arpl
mov
imul
stos
jge
test
scas
inc
mov
jnp
sub
loopne
pop
movsl
mov
jecxz
and
pushf
scas
cs
addr16
and
inc
push
mov
imul
repnz
sbb
push
enter
loope
sub
movsb
jb
inc
or
or
das
shll
cmp
dec
and
push
and
sarb
lahf
mov
dec
rcl
mov
test
fadds
mov
js
pop
adc
sbb
test
ss
cmp
sub
test
sub
pop
xor
clc
xchg
jge
or
mov
pop
cwtl
mov
test
roll
xor
xchg
mov
push
adc
es
add
jb
ljmp
jnp
xchg
fldcw
cmc
mov
lret
mov
scas
out
dec
xor
imul
bound
out
aam
stos
jp
mov
xchg
lock
in
sub
push
addr16
and
aas
cmp
les
fs
jl
bound
add
mov
pop
sti
xchg
inc
and
filds
loope
repz
mov
aas
jns
mov
inc
xchg
mov
adc
leave
fiadds
sbbl
mov
lds
or
lcall
jbe
pop
adc
mov
dec
adc
cltd
adc
mov
xchg
add
xor
mov
mov
addr16
mov
xchg
stc
out
leave
jns
mov
lock
mov
jle
in
xor
ja
fs
sub
aam
leave
lret
stc
pop
or
add
data16
fcmovu
pop
aad
sub
ret
mov
pop
sbbl
mov
out
loope
mov
repnz
nop
repnz
xchg
cmpsl
inc
pusha
loop
scas
bound
inc
lret
mov
mov
mov
dec
std
xchg
cmp
adc
ss
mov
cltd
je
lods
sbb
or
fsubr
mov
xchg
arpl
mov
ret
xchg
sbb
out
or
jne
jmp
cmp
loopne
pop
sbb
clc
xchg
cmp
jg
adc
mov
mov
stos
sti
mov
push
cs
insl
fidivl
xchg
insb
aas
cltd
nop
add
hlt
cmp
andl
cli
push
mov
cmp
cmp
sub
xor
das
enter
pushf
dec
sar
lods
js
mov
cmpsl
jmp
and
fmuls
loope
lock
in
xchg
insb
hlt
mov
adc
insb
xchg
shl
mov
sbb
xlat
mov
add
dec
aas
jnp
xchg
push
jae
inc
cld
xlat
push
repnz
mov
lods
xchg
adc
inc
pusha
lods
sub
sbb
pop
pop
inc
lret
pop
pop
out
sub
ficomps
jno
mov
nop
mov
cmp
jnp
xor
xor
out
pop
mov
aas
mov
mov
lahf
stos
sbb
or
lods
inc
push
dec
add
and
in
pusha
pop
or
idivl
bound
xchg
mov
leave
pop
cmc
ljmp
lods
ljmp
ret
pusha
dec
pop
ror
sbb
or
nop
xchg
inc
sub
mov
rolb
mov
cli
out
repnz
pop
cmpsl
xchg
int
xchg
pop
xor
test
push
hlt
lea
add
test
fisubrs
add
shl
shlb
add
fsubr
mov
pop
pop
and
insb
mov
fnsave
scas
push
sbb
lret
test
in
movsl
fwait
lock
xchg
mov
movsb
cmp
push
mov
xorl
sub
jnp
arpl
add
addl
dec
xchg
fstpl
add
and
push
xor
or
je
and
in
sub
out
cmp
sub
mov
or
add
int
scas
inc
mov
test
jecxz
cmp
insb
xchg
cwtl
mov
sti
inc
pop
adc
mov
lahf
push
mov
xor
or
pushf
and
pop
leave
loope
negb
jle
in
cli
pusha
cwtl
xor
mov
add
mov
inc
lahf
pusha
add
bound
ljmp
xchg
xorl
cmp
gs
ret
sti
popf
outsb
cld
adc
mov
mov
jle
call
and
je
clc
iret
shll
lds
fwait
jge
xor
mov
lods
mov
inc
inc
fsubrs
out
mov
shlb
dec
dec
xor
ss
sub
mov
push
dec
into
inc
mov
enter
dec
fldt
add
add
cmc
icebp
lret
pop
pusha
movsb
cmc
adc
dec
sub
stos
lods
add
in
mov
or
out
pop
test
cmp
push
fsubr
cmp
popf
xchg
arpl
in
xlat
mov
fld
das
fbstp
lods
adc
gs
pop
adc
xchg
ljmp
jle
ss
jmp
fwait
and
xor
sbb
and
pop
and
clc
sbb
pop
add
out
int
leave
scas
je
cmpsb
ret
cmp
lahf
mov
lock
neg
mov
cmp
pop
sub
add
sub
fadd
mov
inc
cmp
sub
shll
fcompl
add
jns
cwtl
ret
test
jmp
insl
enter
sbb
jnp
inc
jmp
mov
jbe
and
mov
jmp
out
pop
outsl
bound
pop
push
adcb
in
or
pop
test
in
adc
aam
mov
mov
push
jbe
stos
add
add
pusha
cmpl
cmpsl
repnz
cmp
insl
mov
mov
and
mov
mov
pop
inc
push
mov
scas
sub
add
mov
xor
in
ljmp
xor
outsl
stos
lahf
adc
mov
in
js
xchg
scas
pushf
mov
cmpb
add
paddb
sahf
scas
in
stos
jl
nop
icebp
lret
push
out
popfw
mov
pop
jp
into
xor
cld
outsl
lods
fdivrp
sbbl
xchg
inc
test
mov
sub
sahf
sarb
pop
mov
pop
inc
ror
adc
mov
xchg
lcall
scas
pop
jmp
cmp
mov
mov
cmp
movsb
lods
dec
test
dec
mov
lfs
cwtl
addr16
sahf
mov
loopne
adcl
cmp
push
cli
or
cmp
imulb
xor
test
das
pop
in
scas
lds
imul
xchg
sysexit
in
xlat
lds
sbb
jno
mov
xor
cltd
lock
call
jg
jns
xor
imul
xor
gs
insb
push
add
dec
xor
pop
rcrb
outsl
dec
ja
jp
push
and
or
stos
jle
in
sti
testb
popf
jmp
and
nop
push
jb
dec
cmc
mov
ret
add
jge
dec
pop
adc
cmp
ficomps
sbb
lcall
push
cmp
cld
add
or
popa
dec
jg
push
dec
insb
pop
aaa
ret
jae
adc
cmp
lods
lods
pop
sub
rcl
cld
push
aas
dec
js
mov
lds
jmp
insb
pop
sti
push
cs
or
ret
lret
inc
mov
mov
lods
ja
jp
sbb
in
inc
or
xor
pushf
gs
mov
in
aad
jmp
sbb
shll
xor
scas
sub
notb
sahf
or
outsb
in
vdivsd
lret
push
pop
shrb
and
out
pusha
fidivl
dec
pop
ds
pop
hlt
adc
mov
scas
fdivrs
arpl
inc
sbbl
test
pushf
scas
push
sarl
xchg
int3
add
popf
sub
adc
mov
lret
and
shll
adc
and
test
adc
test
ja
add
jno
mov
fsubl
fildl
jecxz
sub
loop
dec
sbb
jmp
out
jl
pop
shr
rcrb
mov
and
shlb
xorb
sub
loop
les
stc
fisttps
or
sbb
sub
pop
cmp
pop
hlt
int
push
pop
sub
dec
dec
jp
fdivrl
ret
ja
mov
roll
stos
sbb
jb
out
dec
add
pop
adc
pushf
stos
es
add
xchg
rcl
jbe
jns
cli
inc
and
xor
jnp
cld
test
adc
pop
jmp
or
int
xor
jmp
sahf
scas
int
push
lods
jne
pop
inc
jbe
xchg
mov
inc
clc
or
xchg
cmp
jl
fwait
outsl
add
mov
stc
or
cs
lds
bnd
movsl
cmpsb
aas
test
jmp
sbb
mov
inc
pop
mov
idivb
sbb
xor
inc
mov
fcmove
pop
jg
pop
repz
scas
sbb
inc
xchg
and
xchg
fldln2
dec
popa
mov
es
clc
std
sarb
push
pop
cmp
jp
hlt
iret
or
flds
jp
push
mov
pop
jmp
insl
sbb
iret
subb
jno
xor
gs
imul
jge
sahf
mov
std
ja
xchg
cmpsb
xchg
adc
mov
inc
std
push
cltd
insl
nop
pop
stos
pop
into
aam
pop
insl
hlt
mov
hlt
sbb
js
jne
dec
and
xor
loope
dec
adc
in
arpl
mov
shll
mov
mov
jnp
sbbb
rcrl
cmc
clc
xchg
xchg
xchg
imul
test
cmp
lock
jns
add
mov
lock
and
jne
and
inc
push
sbb
adc
pushl
jmp
bound
sub
fdivl
jb
mov
or
mov
insb
repz
jmp
xchg
mov
and
sub
jge
xchg
sbb
push
adc
push
addr16
cmp
out
outsb
lahf
mov
inc
popa
loopne
adc
lcall
xor
jns
fildl
push
cmp
icebp
pop
insb
mov
inc
xor
in
insl
xchg
push
xchg
aaa
int
xchg
mov
sub
cmpsl
shlb
sbb
push
push
adc
mov
xchg
lcall
lock
xlat
dec
cmp
sbb
gs
jns
xchg
loopne
xor
adc
and
icebp
daa
jecxz
ficoms
out
jno
sub
fcmovnu
sub
or
push
adc
out
fstps
fstpt
fchs
mov
cld
xchg
lret
repnz
mov
push
pop
xchg
ss
mov
xor
ret
mov
iret
testb
push
insl
mov
xchg
out
call
push
idivb
out
fwait
dec
shrb
testl
xchg
test
sub
pusha
dec
iret
pop
inc
cmpsl
fmull
bound
lcall
pop
out
xor
out
test
jp
mov
addl
std
fmull
cmc
push
jp
scas
xchg
pmaxub
xchg
jle
xchg
orl
je
mov
rorb
push
adc
fcompl
dec
insl
jb
sbb
std
mov
add
dec
xchg
xor
dec
mov
icebp
fxam
outsb
mov
dec
js,pt
adc
out
mov
in
cmp
mov
adc
rcll
add
outsb
xchg
push
sub
push
test
int3
pop
mov
out
xchg
cwtl
fcoml
sbb
fucomi
out
in
xor
in
sbb
outsl
addl
xchg
jb
sbb
andl
popl
jne
jbe
fnstsw
sub
mov
mov
mov
inc
sub
addr16
faddl
adc
ret
inc
sub
inc
rcl
lock
rol
jle
mov
xchg
cltd
shlb
or
mov
pop
inc
mov
or
push
cltd
jmp
sahf
jge
add
hlt
pop
jge
pop
dec
sbb
push
aad
xchg
in
ret
fsubrs
aam
divl
mov
fidivl
ljmp
lret
repz
aam
mov
in
daa
xchg
ret
pushf
jle
cltd
fbld
ds
xlat
push
sahf
pop
cltd
movsb
dec
dec
in
xchg
pop
addr16
stc
add
push
push
push
xor
pusha
xchg
fcoml
push
add
jg
addb
les
cmc
decb
xor
push
inc
or
out
push
xlat
ret
push
sbb
and
push
push
sti
out
lock
loop
inc
clc
jns
les
dec
xchg
mov
insb
aas
cmp
xor
sub
imul
cmp
idivl
inc
push
and
cmp
push
push
jno
mov
in
pusha
jnp
cli
lret
inc
outsb
lahf
add
and
jecxz
and
lock
sbb
inc
jmp
sbb
movsb
lret
sbb
push
int
stc
jecxz
lret
ret
push
hlt
xor
jp
mov
sbb
mov
rcll
push
push
inc
repnz
and
mov
stos
add
test
add
sbb
or
xor
cltd
iret
mov
inc
je
cmp
mov
or
push
aas
lret
cmp
lea
sbb
test
jns
and
jno
leave
sbb
lock
sbb
jecxz
dec
data16
in
dec
sub
mov
fiadds
cmp
mov
and
pop
frstor
fiadds
cmp
sub
imul
push
ds
mov
lea
fcmovne
mov
or
es
sbb
mov
repnz
shrb
sub
push
lds
xor
mov
adc
out
pop
sbb
pop
sub
add
in
push
insb
sarb
push
or
mov
xchg
xchg
mov
jne
jo
sbb
pop
mov
cmp
push
nop
cli
push
add
lret
mov
mov
shll
into
cmp
mov
pop
int3
outsb
pop
popf
aam
iret
mov
call
sub
jns
js
xchg
sub
xor
lcall
inc
jp
jb
or
xchg
xor
ljmp
stos
mov
mov
sub
ret
xor
xchg
push
mov
adc
icebp
fbld
fiadds
cmpsb
sbb
cwtl
call
pop
sbb
out
mov
xchg
jb
mov
repz
jmp
xlat
sub
xlat
fsubr
push
dec
sbb
add
jl
out
fsubr
aam
and
push
push
sub
out
lea
int
sbb
nop
mov
call
jg
insb
jge
clc
sub
pop
jl
adc
repz
mov
int3
addr16
jno
or
push
imul
mov
je
adc
aam
scas
enter
xor
or
jno
das
jmp
scas
and
sbb
push
pusha
repnz
inc
cmp
xchg
mov
cmp
pop
jo,pn
stos
cltd
repnz
fnstenv
jno
js
ja
mov
mov
fistpl
insb
jnp
xor
xor
stos
sbb
mov
imul
and
adc
rcrl
mov
mov
sub
cmp
ret
ja
sahf
and
adc
sbb
in
or
or
mov
add
shrb
iret
inc
pushf
lea
sbb
pop
stos
stos
mov
call
fidivl
push
je
mov
jg
push
mov
mov
lods
jecxz
pusha
add
clc
lock
jnp
and
dec
into
and
dec
das
mov
and
xchg
inc
movsl
in
out
loope
xor
ret
loope
stos
pop
fs
leave
push
or
and
xchg
out
lds
xchg
fnop
xor
in
pusha
and
nop
fsubrl
sub
inc
mov
pop
xchg
test
out
dec
out
lds
cmp
std
lods
inc
sbb
or
mov
fnstcw
and
cmp
cmp
sarl
ss
outsl
adc
in
repnz
test
xchg
les
xchg
test
int
lret
pushf
sbb
fidivrs
lods
les
adc
dec
jecxz
sarl
push
jle
mov
out
lds
xor
mov
fdivs
xor
xor
sbb
dec
cmp
daa
xor
out
and
int
xchg
leave
repnz
mov
fildll
out
movl
js
cmpsb
ret
pop
dec
loope
fadds
sub
pop
std
call
mov
pop
cmpsb
pop
pusha
mov
mov
inc
and
sbb
add
or
jns
pop
outsb
or
mov
xor
pop
push
xor
sbb
jne
push
int
dec
mov
in
sbb
int3
push
test
js
popf
addr16
inc
ficoms
push
in
fnstenv
orb
movsb
loopne
cmpsb
pop
pop
orb
cmp
nop
push
mov
inc
jmp
sub
dec
adc
push
stos
loope
jp
cli
jb
mov
cld
dec
pop
inc
cmp
iret
adc
scas
cmc
inc
ret
ret
insl
lock
cli
dec
out
xor
and
adc
addb
in
frstor
fdiv
ret
aad
jno,pn
sbb
cmp
shrl
xchg
aaa
add
sbb
es
cmp
adc
xchg
shl
xchg
and
cmp
pop
ret
lahf
movsb
popa
sbb
les
jp
mov
mov
xchg
cmc
xchg
rolb
or
mov
sub
ljmp
cmpl
stc
xchg
mov
jp
mov
mov
push
loop
leave
pop
testb
pop
mov
inc
aam
stos
out
mov
mov
mov
mov
stos
out
or
cli
mov
pushf
dec
cs
and
insb
lock
add
jo
fnstcw
dec
in
and
push
in
addr16
out
adc
aam
nop
sbbl
stos
test
dec
mov
inc
mov
push
mov
test
push
mov
fcomps
lods
or
cmp
add
adc
mov
cmpsl
sub
xor
push
dec
sbb
scas
stc
pop
das
sti
adc
clc
push
lods
xor
xlat
scas
lret
mov
adc
or
test
cmp
xchg
jle
fisubrs
bound
lcall
pusha
es
inc
imul
int
cmp
std
out
ret
loop
ljmp
lods
dec
test
lret
int
arpl
push
pusha
enter
cmpsl
xor
subl
cmpsl
loop
xlat
and
aad
dec
shr
cli
jae
push
cs
repnz
bound
sub
fldcw
std
out
push
fwait
and
dec
push
sahf
mov
cmpsb
adcl
gs
jnp
daa
mov
and
xlat
xorb
cmovb
mov
cmp
push
test
mov
daa
jecxz
pop
shr
add
int3
and
jl
lcall
sub
pushw
jg
adc
xchg
xor
inc
repz
xchg
mov
pop
mov
mov
rclb
pop
xor
push
or
in
pop
stc
lock
cmp
xchg
dec
int3
cmp
shll
cmp
jmp
push
int3
jns
popa
aas
jp
shlb
jno
mov
mov
xor
addps
inc
das
inc
sbb
stc
jp
bound
bnd
je
sti
push
cld
xchg
push
pop
push
sub
xchg
pop
sahf
mov
sti
xchg
pop
or
icebp
imul
xchg
and
xor
lods
sbb
das
xor
jg
cmp
mov
js
mov
pop
mov
sbb
cmp
mov
lahf
lret
jb
lcall
rcr
outsb
xchg
repz
and
lcall
push
or
jmp
xor
cmp
fs
fisttps
into
adc
push
arpl
add
cmp
fidivrs
cmp
add
loope
or
jns
jns
jge
adc
ret
scas
adc
sbb
inc
or
hlt
popa
jne
lahf
xchg
movsb
xor
sbb
in
inc
mov
pop
mov
xor
adc
movsb
test
xlat
stos
iret
xchg
mov
cmpsl
push
pop
mov
mull
sbb
rol
jnp
aad
adc
pop
lock
cmpsl
test
stos
adc
lock
ret
sub
shlb
push
cmp
inc
jecxz
fmull
jmp
sub
add
icebp
adc
rcl
mov
push
sti
mov
cmp
inc
push
scas
xor
insb
imul
push
jmp
nop
xor
scas
xchg
les
pop
aas
int
jge
pop
arpl
sbbb
fwait
jnp
jle
mov
out
int3
pop
mov
cltd
call
cmp
inc
or
cld
loop
out
sub
mov
hlt
es
bound
mov
mov
outsl
testb
or
jo
iret
add
lods
sbb
and
jle
add
loop
and
loop
and
into
ficoml
jmp
loope
add
pop
outsl
es
ss
push
push
daa
mov
mov
outsl
add
mov
movsl
jbe
sbb
pop
or
test
mov
ljmp
mov
push
repz
sub
ficompl
cmp
push
add
add
mov
shr
pop
inc
movsl
or
insl
dec
clc
push
inc
sbb
inc
push
mov
pop
fdivrs
push
idivb
ss
aaa
or
out
xor
dec
xchg
inc
out
cmpsl
mov
in
mov
pusha
stc
sahf
ret
les
mov
inc
mov
aam
or
jecxz
add
jmp
out
add
dec
sub
cmpsb
out
int
cmp
sub
data16
push
or
fs
leave
jbe
mov
and
call
xchg
mov
sub
xor
or
push
add
data16
sbb
mov
aaa
mov
sub
push
sarl
mov
mov
push
jo
cmc
ljmp
mov
xor
jge
push
mov
xor
lods
jno
pop
xchg
dec
cmc
aam
dec
int3
inc
in
and
sti
push
mov
and
pop
push
and
fwait
icebp
mov
jb
lcall
push
clc
or
add
icebp
and
dec
into
lret
xchg
push
data16
mov
cmp
inc
dec
cli
hlt
shrb
jne
mov
rcr
imul
popa
negb
out
push
jg
outsb
adc
leave
add
fcomi
xor
aad
push
test
sbb
cwtl
incb
daa
jge
loope
mov
inc
mov
inc
arpl
add
or
mov
xor
mov
loopne
sbb
xor
mov
add
je
jo
mov
sub
push
sbb
loope
aam
sahf
mov
add
jb
jmp
dec
repz
divl
fistl
popf
mov
loop
popf
sbb
mov
pop
fsubrs
rcl
jnp
dec
jge
gs
xchg
shlb
cmp
shl
test
and
mov
jmp
sub
ss
subb
ds
rcrl
inc
dec
sbb
jns
push
push
lock
orl
sbb
xchg
sub
int3
adc
add
rclb
adc
jo
pop
rcrl
iret
scas
mov
loopne
jae
push
std
and
rolb
ljmp
lret
dec
or
scas
or
mov
cmp
or
adc
sbb
pop
enter
jg
lds
aas
repz
dec
sahf
mov
pop
icebp
inc
in
adc
ja
hlt
push
mov
ljmp
insb
mov
movsb
pop
push
lcall
fisubs
fsubrp
inc
int3
out
insb
sub
movsl
mov
das
inc
call
pusha
clc
add
iret
movsl
inc
cmp
insb
daa
xchg
test
lret
fcoms
pop
dec
adcb
or
pusha
sbb
in
mov
mov
gs
inc
test
ret
mov
add
scas
fsubp
mov
xchg
add
jl
mov
push
movsl
mov
mov
or
pop
test
iret
push
xor
push
in
mov
sbb
sub
pusha
scas
pop
std
adc
inc
sub
push
test
or
lds
sbb
mov
shr
xchg
mov
fdivr
push
clc
mov
cmp
cltd
pop
adc
lret
fadd
mov
mov
push
dec
and
rcrl
stc
push
push
adc
scas
pop
loopne
sbb
sahf
pushf
push
sahf
out
orb
addr16
mov
sbb
rcrb
push
jecxz
sarl
cwtl
scas
jmp
lahf
xchg
lods
loop
loope
movsl
push
cmp
xchg
push
cld
mov
pushl
mov
inc
inc
mov
xchg
dec
stos
mov
into
push
mov
add
inc
cmp
insl
xchg
lds
jns
inc
filds
cmp
test
xchg
outsl
repz
stos
loope
aam
aaa
jbe
outsl
js
pop
sahf
adc
mov
into
fcomps
subb
sub
and
and
aad
aaa
lds
mov
ret
cli
lock
das
dec
add
stos
mov
fidivrs
mov
fdivr
xchg
xor
mov
jg
mov
pop
les
cmp
lahf
lea
fscale
negl
push
inc
xchg
cwtl
mov
mov
and
adc
and
lock
rclb
cmpsl
pop
popa
test
cmp
mov
inc
test
jb
mov
addr16
adc
dec
roll
cmp
and
inc
mov
jl
add
addr16
cli
mov
pop
leave
js
mov
clc
movsb
mov
xor
and
pop
mov
dec
std
cltd
add
mov
rorl
cmp
call
push
mov
je
aam
sub
fdivrs
jecxz
push
push
mov
cmp
or
insb
repz
cmp
inc
or
mov
imul
jno
jp
cmovne
in
and
sbb
push
push
stos
inc
lahf
mov
dec
test
bound
xor
mov
sub
cmp
adc
xchg
xchg
rcl
lods
aam
mov
push
scas
cmp
int3
jg
aam
in
rcrb
xchg
mov
add
and
pop
outsl
push
cmp
adc
and
fistpll
xlat
mov
mov
adc
cmp
sbb
or
xor
outsb
jb
lahf
push
push
mov
iret
sbb
add
push
out
ret
in
fnstcw
adc
ljmp
or
rorb
inc
lock
sub
dec
push
mov
dec
rorl
cmp
xor
lret
rorb
jb
lret
ficoms
xor
leave
fwait
jnp
mov
jge
arpl
aas
test
leave
addb
jbe
add
sub
aas
dec
dec
aaa
mov
lret
or
pop
cmc
cmp
nop
popa
jne
incb
aam
sub
sub
ss
adc
adc
push
sar
movsb
xchg
add
xor
mov
cmp
int
lea
lret
js
xchg
lds
cmpsl
shll
jecxz
rorl
mov
push
testb
cld
add
pop
shl
pop
test
mov
outsl
lds
pop
insb
sub
push
rcl
adc
sti
xchg
jne
in
sahf
icebp
push
mov
mov
xchg
dec
push
int
jbe
filds
xor
es
pushf
ret
fiadds
rcl
dec
loope
dec
fucom
int3
pop
sbb
and
rcll
aaa
cli
cmpsl
sbb
test
cli
inc
ret
mov
fiaddl
flds
cmpsl
lock
mov
lods
push
sbb
fs
stc
roll
and
gs
ret
push
adc
fisttpl
rorl
pop
xor
bswap
add
adc
xchg
outsl
xchg
mov
pop
les
ss
lods
and
std
push
movsb
fisubs
jo
les
fscale
iret
mov
cld
daa
xor
and
mov
scas
pop
insl
jo
xor
pop
push
lcall
jp
jp
fldl
push
sub
mov
xchg
add
sub
sub
xchg
ret
mov
outsb
out
fdivrl
or
sahf
jmp
aas
or
mov
xchg
rolb
sub
fsts
repnz
push
adc
stc
out
jbe
arpl
nop
insl
imul
test
sub
lock
xor
mov
fdivrs
adc
cmpsb
mov
pusha
pop
notl
cli
add
lret
push
pop
mov
rcll
ja
ja
mov
jne
in
or
and
adc
rcrl
test
adc
xor
int
scas
pop
ss
jl
pushf
sbb
and
mov
or
cmp
mov
xchg
xchg
stc
jecxz
dec
dec
outsb
mov
rclb
mov
xchg
jb
and
cmc
mov
fidivrs
xor
cli
lret
pop
decl
dec
stos
dec
subb
xor
add
mov
daa
cld
repz
out
add
out
push
mov
aam
pop
xchg
jg
ficoms
push
mov
dec
push
cmpsb
cs
sti
roll
outsl
cmpb
int
xchg
shll
and
test
dec
je
pop
xchg
stos
les
mov
xchg
mov
sub
jge
sbbb
adcb
pop
mov
mov
adc
pop
hlt
sbb
add
ja
push
test
push
xchg
in
add
jb
insb
jne
bnd
dec
lods
insb
pop
jnp
cmpw
xor
in
mov
rcrl
xor
popa
xchg
adc
inc
pop
adc
mov
mov
daa
fnstsw
or
fimuls
fdivs
xor
call
das
mov
cmp
nop
fistpll
mov
adc
jmp
and
mov
lret
inc
add
sbbl
out
push
mov
jl
inc
lretw
pushf
pop
stc
int
sbb
in
stos
inc
test
xlat
dec
fldcw
aaa
stos
aaa
stos
or
dec
test
lock
sbb
jno
inc
cmp
mov
jecxz
icebp
mov
stos
pop
cmpsl
das
lahf
les
jmp
outsb
xorl
or
es
cmp
sub
sub
cmc
pop
in
push
push
mov
popf
push
out
movsl
jle
insl
gs
repnz
xchg
out
iret
mov
jl
movsb
push
ja
lret
rcll
sti
xchg
sarb
jnp
sub
xchg
lret
mov
idivb
ljmp
lock
pop
hlt
sbb
mov
add
repz
xchg
dec
out
xor
fstpl
mov
sub
lret
scas
sub
sbb
inc
cmp
add
inc
repz
loop
mov
ljmp
fsubp
lds
sahf
ret
jne
inc
adc
daa
adc
in
lods
sbb
jp
divb
outsb
jp
inc
pop
jecxz
ret
mov
or
sbb
inc
sub
neg
cs
movsb
mov
sub
xchg
adc
aam
les
sbbl
mov
add
jne
lea
lcall
stos
xchg
clc
dec
sbb
icebp
cwtl
popa
or
lret
outsl
mov
cwtl
outsb
in
push
or
sub
or
sbb
sbb
lret
fbstp
add
jl
aad
arpl
stos
and
mov
cmpsb
inc
icebp
push
mov
mov
jmp
pop
aam
inc
fsubrs
stos
mov
sbb
in
sbb
in
sbb
les
jo
xchg
hlt
hlt
push
loope
jo
mov
sub
in
jne
jp
xor
cmc
or
mov
pop
test
orb
jecxz
loope
adc
sbb
sub
mul
addr16
gs
outsl
aam
movsl
shl
jge
inc
dec
dec
imul
imull
aad
xchg
cmp
loope
inc
lods
add
mov
pop
cmp
test
aad
iret
mov
mov
stos
repnz
xor
pop
sti
dec
mov
lock
dec
rcr
and
xchg
ljmp
adc
mov
rcrb
adc
pusha
mov
push
jecxz
pop
nop
out
push
pop
lea
jmp
jo
rcrb
ljmp
xor
jne
mov
push
mov
dec
xchg
fidivrs
mov
shrl
testb
cmpb
inc
xchg
jb
fcmovnu
inc
sub
jne
outsl
and
test
sbb
lahf
cwtl
hlt
fcoml
sub
jno
in
pop
mov
lahf
loopne
inc
ret
xchg
fs
dec
jle
xchg
fcomi
outsb
cld
mov
inc
inc
icebp
push
stc
dec
pop
imul
xchg
int
fnsave
pop
call
call
int3
sbb
and
push
sar
xchg
jne
insl
out
jge
mov
jns
repz
and
sbb
add
enter
pop
orl
jo
sub
and
xchg
out
jge
pushf
xor
iret
jg
gs
sbb
push
stos
out
mov
push
jae
test
inc
outsb
inc
aad
jg
mov
jp
add
jp
stc
adc
out
mov
push
mov
push
adc
add
pop
inc
sbb
pop
loop
ljmp
scas
push
inc
xchg
loope
mov
or
out
lea
inc
rorb
or
sbb
jnp
mov
mov
add
les
adc
cld
fdivrs
and
cmp
icebp
xchg
push
mov
ss
mov
jbe
cltd
nop
js
leave
ljmp
mov
loop
mov
xchg
jge
fldcw
push
pop
push
sarl
loop
es
rcrb
push
push
xorl
sbb
scas
pop
adc
roll
test
sub
push
and
ljmp
sub
xchg
sbb
fimuls
out
sbb
dec
enter
xlat
cs
bound
movsb
sti
movsb
xor
inc
xchg
inc
mov
jo
jge
cli
movsl
mov
into
fnstsw
dec
mov
bound
pop
idiv
fidivl
in
mov
repz
out
adcl
xor
imul
cs
insb
stos
or
inc
jns
fidivl
adc
test
sub
pop
movsb
adc
xor
pop
int
and
cmp
add
mov
xor
mov
jge
ret
cmp
mov
stos
xchg
pop
pop
jmp
dec
add
add
stos
mov
and
xchg
mov
push
jne
rorl
pop
daa
ret
sarl
enter
imul
sbb
stos
mov
inc
lock
jle
mov
and
orl
gs
push
adc
dec
inc
lcall
pop
leave
push
push
ljmp
cmp
inc
adc
inc
ss
mov
add
xor
adcb
push
jg
test
mov
push
lods
jb
dec
sbb
js
in
lds
sub
inc
add
loope
push
test
mov
movsl
inc
inc
sub
dec
pop
je
fdivrp
addr16
push
or
pop
into
ret
cmpsb
nop
and
sbb
cs
ss
stos
clc
gs
cmp
cmp
adc
leave
test
add
and
aas
push
add
mov
scas
imul
jae
xor
dec
mov
sub
jns
adc
add
loope
xchg
into
js
jle
fisttpll
and
jnp
imul
lcall
divl
jle
jp
jge
push
stc
shlb
adc
pop
scas
xor
xchg
xchg
imul
inc
test
or
subl
dec
cwtl
fld
shrl
std
mov
loopne,pn
popf
push
mov
dec
pusha
mov
push
cmp
mov
lret
icebp
aad
daa
add
les
cmp
call
fcomps
loopne
mov
mov
imul
rorl
outsb
mov
push
mov
mov
in
ret
pusha
repnz
add
add
add
stos
loopne
adc
fmuls
mov
les
fwait
in
mov
adc
push
int3
inc
out
or
fucomp
mov
add
dec
jge
pusha
cmp
in
adc
mov
inc
inc
sub
xor
fsts
sbb
loope,pt
jnp
mov
cmp
pop
cmp
adc
push
in
push
outsb
mov
insl
outsb
cs
cwtl
sbb
cmc
fdivrs
in
cmpl
mov
lret
inc
std
sbb
adcl
outsl
adc
dec
mov
addps
cmp
mov
outsl
stos
xchg
shl
mov
jo
clc
mov
ret
jge
xchg
cmc
mov
mull
hlt
push
bound
sbb
sbb
dec
cli
add
enter
loopne
fcmove
lods
test
mov
or
ja
inc
cwtl
arpl
sbb
dec
hlt
mov
jmp
ljmp
mov
sahf
dec
jo
cmp
cmp
shlb
outsb
and
inc
pop
pushf
dec
orb
mov
insb
hlt
xor
pop
mov
jne
mov
cmpsb
mov
cmp
enter
and
fs
push
imul
gs
and
mov
mov
dec
jns
pop
mov
cmovno
push
mov
rclb
fisttpl
mov
shrl
loope
jle
cmp
lret
jl
mov
inc
add
or
popf
jae
hlt
loopne
cmp
fcoml
push
sub
or
add
jmp
dec
mov
sub
fldcw
pop
xchg
loopne
scas
shll
cmp
and
mov
cs
push
movsl
pop
dec
push
leave
andl
mov
iret
cmp
dec
fcomip
push
mov
pop
mov
popa
push
lret
cmc
iret
push
cmp
xchg
adc
cmpsb
add
es
xor
aaa
inc
jnp
xor
jecxz
xor
add
fs
fsubl
std
lcall
inc
xor
xchg
in
dec
shlb
ficomps
or
cli
push
dec
adc
lahf
hlt
adc
jmp
clc
std
mov
repnz
sbb
cmp
clc
cli
add
or
int3
das
rol
xchg
in
lea
dec
or
xchg
lds
jmp
sar
jmp
add
push
mov
pushf
inc
mov
pop
aam
push
jl
sub
lahf
ds
movsl
sub
jl
movsl
pop
mov
add
insl
adc
xor
xchg
ja
add
outsb
pushf
mov
flds
jnp
out
jne
stos
clc
iret
mov
pop
sub
jbe
rep
ret
and
cmp
enter
sub
out
xchg
jns
dec
pop
sarb
and
dec
dec
jl
mov
loop
out
pop
inc
hlt
jmp
mov
or
inc
loop
cwtl
repz
or
mul
push
cmp
cmc
das
lock
jae
and
dec
xchg
jecxz
icebp
out
mov
les
or
inc
jge
mov
dec
test
pop
cli
test
ret
stos
push
jne
mov
in
xor
in
or
add
xchg
mov
pop
adc
xor
test
inc
xor
xor
popa
nop
jmp
xchg
outsl
xchg
push
pusha
add
pop
jo
out
out
mov
xor
pop
pop
xor
sub
aam
ret
je
xor
out
xor
cmp
pushf
stc
popa
add
cmp
pop
imul
sub
adc
testl
push
add
dec
pop
and
sbb
sbb
mov
rcl
mov
repnz
add
adc
xchg
adc
sbb
mov
loopne
repnz
enter
movq
cmp
shlb
leave
sbb
pop
popa
rclb
hlt
jmp
add
push
mov
add
mov
enter
pop
shll
sti
aas
and
call
dec
int
inc
in
mov
inc
rcr
pop
push
jge
pop
push
dec
adc
or
or
mov
out
hlt
int3
xorl
scas
cmp
ds
js
rorl
out
inc
xchg
jle
add
and
test
xchg
popl
dec
icebp
mov
xchg
and
dec
into
cltd
ds
jno
sbb
adc
add
bound
jmp
scas
pop
push
mov
loope
pusha
lahf
mov
leave
outsb
jmp
test
dec
movsb
mov
cmc
out
scas
imul
fistpl
dec
stos
dec
push
rorb
nop
and
fistpll
or
insl
lahf
test
inc
es
in
aas
cmp
mov
dec
push
bound
test
mov
and
push
xlat
lds
mov
mov
gs
test
mov
das
mov
push
pop
jp
enter
sbb
arpl
cmp
or
repnz
imul
nop
or
adc
mov
xchg
pop
cld
dec
mov
test
addr16
jl
mov
sbb
inc
cmp
add
cmp
or
dec
xchg
out
jg
rcl
jne
insl
scas
int3
test
in
cli
mov
int
fstpl
mov
out
pop
push
push
mov
rep
stc
dec
pop
xchg
stc
cmpsb
dec
xor
addr16
pop
clc
adc
add
fadd
arpl
inc
rcrl
ss
push
push
into
push
in
mov
fs
cltd
lods
mov
dec
test
ds
rorb
cli
xor
out
inc
scas
mov
cmp
movl
addps
lds
mov
loope
jbe
int
xchg
leave
insb
or
xor
je
out
mov
call
push
pop
sub
fwait
aad
fstps
add
mov
push
sahf
mov
mov
xlat
rclb
pop
fidivrs
add
cltd
test
arpl
sbb
xchg
xor
xlat
in
sub
jb
mov
inc
cmp
cmp
dec
aad
outsl
cwtl
nop
dec
pop
daa
cmp
pop
mov
pop
popa
pop
add
arpl
xor
mov
std
lahf
fists
cmp
stos
je
inc
cmp
loop
leave
inc
std
rclb
mov
mov
or
or
xchg
push
leave
cmpsl
int3
pop
outsb
xor
std
clc
or
movsl
add
cmp
cwtl
lahf
jo
xor
aas
hlt
stos
pusha
rcll
dec
enter
or
daa
sub
xchg
push
mov
push
sbb
cmp
sub
mov
out
mulb
and
imul
iret
in
popa
sub
xchg
xchg
sub
sbb
lcall
fistl
mov
mov
pop
ljmp
lret
push
fists
jg
lahf
aad
pop
adc
test
push
shlb
mov
lcall
mov
in
mov
dec
fnstcw
dec
mov
sahf
test
add
test
jl
mov
xor
jl
sbb
adc
add
push
movsb
adc
leave
mov
jns,pt
sub
lret
pop
inc
jne
sub
scas
mov
mov
repz
xlat
out
test
add
push
and
cs
cmp
sub
mov
inc
in
mov
fistps
mov
xlat
rcrb
pop
lods
pop
mov
pusha
mov
jb
mov
lods
sub
popf
mov
pop
popf
mov
sub
out
sbb
xchg
pushf
inc
xlat
and
pop
inc
dec
hlt
jns
push
int
mulb
shrl
test
scas
shr
ja
push
mov
or
aaa
xchg
mov
repz
das
mov
fists
mov
pusha
nop
inc
push
xor
push
notb
mov
loopne
js
mov
inc
or
or
hlt
mov
mov
or
lret
xlat
rorl
jbe
jo
lret
cli
insl
add
mov
dec
jnp
inc
cmpsb
daa
adc
sar
fcmovne
mov
stos
mov
add
and
in
xor
jns
mov
shlb
cs
icebp
jecxz
aas
gs
scas
sarb
mov
leave
movsl
mulb
add
add
mov
enter
or
aad
fidivs
xchg
xchg
add
pop
sbb
les
xchg
mov
cmp
scas
in
xor
inc
lea
pop
cmp
sub
in
dec
mov
sbb
lahf
pop
lods
xchg
imul
xor
jnp
dec
hlt
das
xor
outsl
jns
adc
out
ret
int
imul
or
jge
dec
sub
jb
inc
stos
stos
fwait
add
mov
mov
and
push
insb
cs
je
pusha
and
pop
add
jb
pop
cltd
lret
cmpsb
pop
add
adc
jp
adc
dec
mov
cmpsl
in
push
aas
or
test
cmp
mov
lahf
sbb
lock
mov
movb
dec
out
xor
jae
imul
mov
push
pop
cmp
push
inc
imul
xor
je
enter
pop
mov
cmp
outsl
rorl
xchg
pop
xchg
mov
mov
and
mov
mov
in
lea
lods
iret
cmp
cmp
jecxz
movsb
cmp
pop
inc
mov
ret
in
jns
outsl
dec
xor
xchg
push
mov
mov
fcomps
and
push
hlt
sub
and
ss
dec
mov
cmp
inc
xchg
inc
fwait
pop
xchg
and
mov
in
rcrl
inc
shlb
mov
sahf
inc
pop
jmp
push
xchg
mov
push
sar
inc
pop
hlt
mov
mov
mov
mov
xchg
adc
mov
lahf
dec
sub
std
imul
push
into
push
push
int3
enter
mov
cmp
cld
mov
cmp
push
clc
dec
cmp
xor
cmp
mov
fldl
fs
imul
inc
fistpll
inc
mov
pop
jmp
ds
into
sbb
fidivrl
mov
xchg
or
jno
sbb
imul
lcall
mov
cmpsb
sbbb
ret
andb
mov
xorl
xchg
or
dec
jge
xchg
xchg
aas
ret
mov
sti
test
movb
mov
xchg
scas
loope
arpl
lods
mov
mov
cmc
xor
call
xor
mov
rdtsc
js
enter
and
xchg
arpl
cwtl
enter
fnstenv
cmpl
push
les
xor
push
push
negl
push
test
jecxz
lea
xor
fiadds
xchg
mov
scas
pop
inc
push
daa
pop
loop
test
and
ret
pop
lret
and
sahf
xchg
cltd
sub
in
pop
jno
in
push
popa
jne
fs
xor
cwtl
and
repz
push
leave
je
cwtl
mov
in
popa
push
jb
dec
jle
ror
or
mov
inc
mov
aam
imul
adc
outsl
ss
sbb
mov
pmaddwd
adc
mov
adc
pusha
popa
scas
or
and
pusha
ss
jmp
jg
mov
and
loope
jno
out
lret
push
cld
fisttpl
cmpsb
dec
dec
insb
mov
xchg
push
inc
lcall
jbe
inc
xchg
jb
rcll
pop
mov
adc
lods
add
ja
out
inc
inc
or
xor
cmp
jb
jno
jg
mov
and
in
inc
sbb
push
out
les
rorb
clc
cmpsl
pop
pop
out
fst
xchg
xchg
fcomp
mov
xor
addr16
mov
dec
adc
hlt
mov
push
sbb
pop
test
ljmp
negb
xor
fwait
sub
xchg
jbe
scas
pop
out
jns
jno
xor
and
mov
orl
imul
test
xor
lock
lods
mov
loop
shlb
or
mov
mov
pop
in
sbb
popa
or
adc
aad
stos
adc
pop
outsl
push
aas
inc
jno
jl
loopne
mov
inc
ss
shr
enter
or
imul
push
add
test
sub
jle
call
xor
inc
scas
xchg
out
cmpl
or
mov
add
mov
jecxz
sbb
mov
fstps
dec
mov
push
fwait
pop
sub
push
icebp
lods
loope
or
and
das
dec
stos
jno
mov
rcll
nop
inc
shrl
mov
gs
or
pop
or
push
icebp
cmc
adc
arpl
xor
adc
mov
or
mov
add
sbb
aaa
jp
fmuls
aas
lock
pop
cmpsl
std
stos
es
sub
scas
ret
add
jae
repz
inc
gs
test
pop
bound
cmpsl
loop
inc
adc
xchg
cmc
negl
mov
mov
xor
fwait
add
pop
shl
sbb
loop
popa
inc
sub
mov
lea
jne
mov
stos
sarb
in
outsl
lds
cli
cmp
mov
jle
cmpl
bnd
call
jnp
sub
mov
jno
xchg
hlt
dec
add
aas
xor
ret
scas
stos
lea
and
fldcw
cmpb
stos
insb
push
and
popa
add
out
push
out
bound
enter
mov
cmp
scas
or
cmp
mov
sub
lods
je
adcb
adc
pop
jbe
push
and
cmp
rol
clc
cld
dec
fndisi(8087
xchg
mov
add
out
pop
pop
outsl
mov
add
cmp
lds
sbb
insl
xchg
xchg
mov
gs
sub
xchg
and
push
frstor
aad
in
std
mov
jp
cmp
shll
inc
xor
shrb
inc
mov
mov
dec
add
hlt
arpl
fstpl
jl
mov
ficoms
xchg
mov
popa
test
xchg
es
push
cld
pop
sarl
lret
movsl
lea
xlat
and
fstl
xchg
sub
adc
mov
ret
xchg
shrb
cli
aaa
mov
test
mov
mov
cwtl
pop
mov
jle
cmpsl
jge
add
adc
mov
jns
and
bound
push
push
mov
push
cmpsl
js
in
loopne
adc
repz
fldcw
mov
sbb
lds
adc
push
mov
stc
lea
mov
or
int3
cmp
insl
add
int3
pop
lods
fdivl
sub
mov
sahf
dec
aaa
arpl
mov
ljmp
jmp
inc
inc
in
sub
mov
ds
sub
in
jmp
aas
lds
mov
push
movsb
or
push
stc
jg
test
mov
mov
inc
pusha
icebp
sti
cmpsl
sub
clc
xchg
cmp
rcrb
fiadds
movb
push
nop
mov
cmp
sub
jecxz
cmp
adc
sbb
adc
out
lods
adc
lock
fiadds
inc
push
and
mov
roll
add
sahf
mov
mov
mov
stos
push
jnp
ja
lock
xorl
sub
test
fdivrs
xor
push
jg
mov
jne
jns
into
inc
sbb
std
cmp
out
out
mov
mov
movl
js
out
lahf
adc
dec
pushf
aaa
in
data16
mov
movsb
push
sbb
pushf
xor
test
andl
mov
stos
imul
stc
mov
sbb
popa
imul
jmp
fwait
mov
mov
fldcw
mov
pop
iret
jmp
adc
mov
iret
dec
lock
pop
sbb
jns
sbb
mov
in
imul
std
inc
aad
sub
cmpsl
lea
in
xchg
cmpsb
xchg
repz
fwait
jg
ficompl
cmp
pop
mov
adc
or
call
inc
inc
cmpsb
add
nop
push
shlb
sbb
xchg
xchg
aam
mov
or
pop
leave
cmpsl
cltd
inc
outsl
repnz
icebp
lds
sarl
mov
dec
sub
bound
repz
addb
push
call
lret
lock
or
inc
out
scas
push
dec
and
add
leave
sti
and
xchg
sub
dec
in
push
xchg
cmpsb
sub
jno
shrl
jmp
cli
into
add
pop
or
push
rorl
sarl
and
inc
mov
mov
sbb
push
das
test
lret
xchg
xchg
jnp
jp
sbbb
fistpll
dec
aaa
push
adc
fimull
aam
repz
cmp
insl
cltd
mov
pop
cmp
out
rcl
inc
notb
pop
push
dec
dec
test
pop
inc
lds
sbb
shl
loopne
inc
fimull
adc
dec
push
dec
js
enter
icebp
adc
cmp
bound
xchg
mov
sub
fs
mov
pop
push
loope
mov
pop
shl
sti
cmp
in
sbb
fidivl
xchg
std
xchg
push
mov
flds
hlt
pushf
xor
popa
aam
push
add
in
ja
pop
andl
out
test
jb
xor
fdivl
push
mov
push
fs
out
mov
sbb
xchg
jne
sbb
push
rcrb
mov
xchg
leave
aam
sbb
loopne
rolb
test
jg
mov
sbb
push
insb
adcb
out
add
loope
int3
insl
loope
scas
dec
loop
cmp
imul
in
and
pop
pop
rcrb
in
sbb
mov
jmp
pop
sub
mov
out
push
es
xrelease
cmp
or
cmp
outsb
das
call
add
in
daa
jbe
push
push
mov
fisubrl
mov
scas
popf
dec
xor
adc
lock
inc
bound
neg
or
add
and
hlt
xchg
adc
icebp
push
inc
js
xor
bound
sbb
cmpsb
loopne
lahf
mov
repz
and
leave
jle
je
insb
inc
cld
mov
mov
xchg
adcl
neg
adc
sub
cltd
mov
fimull
inc
or
pop
vmwrite
daa
fs
and
ffreep
cmc
loopne
scas
sub
and
pop
pop
popa
rcrb
shrb
bswap
hlt
push
cmp
sbb
pusha
mov
add
sbb
stos
outsb
mov
pop
cmpsl
fistps
and
mov
and
fidivl
in
add
sub
jle
jne
out
or
das
dec
std
push
sbb
or
jb
lret
pop
lea
fcmove
mov
push
push
jae
test
mov
int3
mov
lcall
push
cmpl
add
enter
xorb
inc
stc
repz
add
adc
jmp
dec
lcall
jp
push
mov
lcall
jl
ljmp
add
xor
add
stos
and
inc
data16
xor
loope
cwtl
mov
mov
and
adc
pop
dec
dec
call
test
cmpsl
add
out
arpl
pop
mov
xchg
repz
jp
jecxz
sub
lea
pop
push
adc
pop
pop
jae
lret
lds
pop
fidivs
xchg
sub
adc
sub
pop
or
mov
ret
mov
cltd
fwait
push
pop
sub
dec
sub
jl
lcall
mov
imul
fisttpl
sbb
cwtl
test
lds
push
xchg
xchg
testl
fwait
add
jbe
addl
sub
mov
xor
mov
mov
cmp
fld
jmp
push
inc
sbb
es
adc
add
jge
xor
xor
inc
jge
jl
inc
rcrb
xchg
push
data16
rcll
mov
cmp
dec
pusha
add
jle
mov
ljmp
outsb
clc
mov
das
xchg
addr16
es
xor
stos
shrl
jle
inc
int3
test
pop
cmpsb
mov
xchg
pop
mov
add
scas
push
lea
std
pushf
imul
in
negl
sub
pop
mov
mov
test
and
imul
fs
xchg
mov
fldcw
rcl
cli
or
aas
dec
stos
sbb
mov
sub
cmpsb
pop
adc
lock
fmuls
ss
dec
jp
loopne
jmp
sbb
jns
call
dec
cmc
jbe
popw
pop
dec
fwait
mov
dec
mov
xor
jl
leave
insl
arpl
int
cmpsb
and
dec
push
out
shrb
imul
sbb
test
rcll
rcrb
test
xor
or
pop
sub
in
popf
cltd
cmpsl
insl
xor
dec
loopne
jnp
cmp
hlt
dec
cmpsl
lock
jae
cli
push
cli
ds
mov
sub
add
jae
call
aas
mov
and
mov
loop
outsb
dec
or
jge
add
xchg
and
or
jecxz
pushf
cmp
xor
or
testl
stc
loopne
lret
jno
push
aaa
inc
mov
jmp
mov
jp
cmp
adc
loop
mov
addl
push
cmpsb
jns
fisttps
adc
daa
aam
rorl
cmp
ljmp
imul
out
call
xchg
test
and
nop
cmp
inc
mov
aad
dec
jge
ljmp
add
xchg
pop
imul
xchg
stc
aam
mov
and
lds
dec
stc
mov
mov
fmull
sub
out
ret
sbbb
jno
jmp
popa
adc
mov
mov
push
jne
and
ljmp
cmp
jmp
clc
cli
sbb
pop
pop
pop
pop
push
stos
jnp
mov
inc
push
jo
fwait
test
cmp
shlb
pop
lock
sub
dec
daa
inc
gs
pop
xor
adc
pop
push
jnp
outsb
test
mov
icebp
sub
test
jne
lea
mov
add
enter
out
in
ret
cs
imul
mov
int
enter
fwait
ret
aad
stos
hlt
xlat
fdivl
add
fcmovnbe
pop
or
jno
and
mov
adc
popa
repz
aam
sbb
test
into
out
xchg
ljmp
add
into
jl
push
dec
xchg
insl
xchg
into
dec
lret
test
push
test
xchg
ficoml
mov
fbld
rcl
gs
lds
popa
movsl
xchg
lods
mov
cmp
cmp
iret
int3
push
cmp
mov
shll
adc
jne
push
ud2
cld
pop
icebp
jle
pop
pusha
or
sahf
adc
xor
push
cmpsl
mov
push
mov
inc
mov
or
pop
cs
adc
repz
mov
int
cmp
pop
push
or
xchg
adc
fidivl
and
out
data16
cmc
daa
add
mov
jl
mov
roll
jns
movsb
xlat
mov
call
aad
iret
out
pop
daa
pop
addr16
mov
movsb
loope
lret
mov
lea
pop
push
or
cmpsl
loope
fsubs
add
xor
add
inc
movsb
sbb
imul
or
fsubrs
stos
add
dec
repz
sbb
nop
lea
cmp
sub
and
aaa
xor
lret
rolb
movsl
push
clc
pusha
inc
sub
out
fisttps
sbb
pop
sbb
mov
rcrl
pop
add
jecxz
loope
sarl
cmp
xchg
xor
imul
adc
pop
nop
test
popa
xchg
arpl
push
aas
subl
mov
sbb
push
jge
out
out
inc
lcall
push
sub
dec
push
dec
push
sarl
sbb
in
loope
xchg
push
sub
or
mov
pop
add
repz
dec
stos
pop
repnz
cld
in
daa
popf
shrl
pop
jge
enter
sti
out
iret
rclb
test
add
in
and
scas
adc
pusha
dec
push
push
push
in
mov
and
inc
scas
repnz
or
in
mov
dec
cmpl
dec
inc
das
es
lods
mov
push
mov
xchg
js
mov
adc
popf
mov
sbb
xchg
push
mov
insl
push
xchg
adc
or
inc
xorb
xor
push
bnd
mov
xchg
pusha
sbb
adc
cli
fistpll
gs
sub
and
xchg
mov
adc
sbb
mov
xor
insl
xchg
lcall
jo
data16
jbe
mov
int
jo
mov
jmp
int3
outsl
pop
filds
mov
insb
add
out
inc
enter
xor
pop
loopne
mov
add
out
xchg
aam
stc
dec
dec
js
cmp
adc
xchg
out
or
jns
test
sub
pusha
xor
sbb
xchg
inc
xchg
push
mov
in
add
shl
aad
faddl
es
inc
fisttps
repz
les
movzwl
or
or
xchg
int
or
sub
cmpsb
in
imul
lret
std
xor
pushf
sbb
pusha
mov
aas
push
js
std
call
mov
jnp
pop
xchg
fistpll
mov
cltd
outsl
xchg
nop
mov
es
leave
jae
in
pusha
dec
cmp
adc
or
adc
aam
ds
mov
jmp
sbb
push
dec
pop
nop
xchg
dec
loope
jle
mov
psrlw
adc
sbb
loope
ja
or
push
adc
scas
mov
outsl
jnp
dec
je
cmp
loope
call
movsb
aas
es
xchg
inc
jbe
sub
sub
or
add
imul
mov
vcvtps2pd
mov
mov
mov
gs
push
jp
cmp
or
movsb
ret
ljmp
jg
adcl
leave
jb
xchg
shrl
dec
popf
push
aam
jnp
cltd
in
scas
jge
dec
and
adc
inc
sbb
arpl
cmp
pop
mov
mov
push
rol
and
adc
jne
mov
sub
imul
pop
pop
mov
in
or
jns
jae
lock
les
in
fwait
mov
inc
cmpl
into
push
sbb
xchg
jge
call
push
push
push
add
sub
sub
inc
mov
jbe
aaa
mov
or
pop
pop
mov
or
sbb
pop
sbb
add
and
ljmp
mov
or
in
dec
imull
sub
xchg
scas
bound
ljmp
insl
insb
pop
ret
mov
xchg
pushf
mov
scas
pop
inc
repz
and
aas
test
test
fadd
jge
std
in
cmp
iret
xchg
pop
es
jge
lods
and
imul
hlt
push
outsl
dec
jns
and
push
jecxz
xlat
stos
jg
or
and
push
lea
or
inc
adc
stos
in
insl
xchg
push
and
pop
rcll
in
pop
add
add
fistpl
push
icebp
push
and
dec
cmc
mov
js
flds
pop
repnz
mov
cli
call
and
enter
into
fcmovne
pop
add
push
faddp
or
push
sbb
lret
outsb
movsl
xlat
or
lea
push
or
mov
and
pop
pop
jno
pop
add
ss
aas
daa
cmp
add
and
sbb
or
push
in
add
pop
cmc
scas
adc
add
ror
mov
ret
cmpsb
jg
int
sarb
shl
mov
sbb
add
dec
jnp
pop
and
cmpsl
or
sbb
xchg
nopl
xchg
mov
mov
add
cmp
aas
lret
in
pop
push
inc
cmp
push
cmpl
scas
jae
jp
out
imul
out
movsl
xchg
xchg
xchg
daa
test
xchg
ret
test
push
cs
std
push
mov
mov
pop
jp
cmpl
sarl
sbb
dec
or
pop
jg
mov
jb
adc
orb
stos
xor
mov
out
popf
shrb
sub
pop
push
mov
cmp
mov
pop
sbb
jg
scas
mov
dec
add
lea
pop
jo
inc
lcall
jle,pt
xor
pop
pop
iret
push
inc
in
dec
sahf
pop
push
pop
ljmp
mov
fidivs
mov
and
lea
sbb
pop
fisubs
sahf
gs
cltd
es
outsl
jae
xor
ljmp
jge
fucomip
sbb
call
aaa
std
mov
mov
fbld
jno
cmpsl
std
leave
pop
aad
test
pop
sbb
jg
lret
xchg
arpl
jmp
mov
xchg
ljmp
jl
lret
test
sbb
cmpsl
aam
inc
sbb
sti
mov
outsl
lahf
pop
mov
and
mov
dec
cmp
jge
pop
fwait
movsb
pushf
out
jbe
push
push
and
dec
aaa
sub
aas
push
cmpsl
sarb
push
push
push
cmpsb
rorb
scas
mov
sub
pop
xchg
xor
dec
adcl
inc
sarl
inc
sub
rcr
ss
and
xchg
mov
dec
xor
jl
out
enter
fwait
cwtl
cmpsl
fildl
sub
outsb
xchg
sub
adc
inc
loopne
inc
push
fimuls
aam
cmpsl
ds
leave
sub
mov
jmp
jle
and
inc
lds
xchg
and
push
fildll
mov
lret
or
sub
scas
test
mov
and
scas
inc
push
lea
daa
mov
or
xor
cwtl
dec
out
xchg
jo
pop
push
fwait
das
sub
sbb
adc
mov
fwait
jge
jae
push
imul
add
scas
jmp
fidivrl
xor
push
sbb
xchg
aas
jns
cli
xchg
inc
repnz
dec
pop
adc
sbb
pop
std
ret
cwtl
mov
clc
jl
adc
push
xchg
iret
aad
or
jb
pop
pop
dec
xor
andb
add
ret
or
xchg
insl
rorb
stc
push
in
in
int3
cmpsl
fldenv
pop
push
iret
jbe
mov
mov
push
in
mov
out
xor
and
mov
and
into
add
cld
imul
pop
stos
adc
pop
inc
call
hlt
push
and
mov
sti
cltd
lods
sbb
push
push
mov
jae
jnp
iret
loope
cli
ja
into
sbb
and
lcall
ss
aas
test
sub
inc
pop
mov
inc
pop
rclb
ss
lds
inc
lcall
jmp
nop
sbb
dec
cwtl
or
pop
push
loopne
test
sub
jge
xor
or
mov
mov
std
fnstenv
imulb
aas
mov
jmp
stc
addl
mov
cmpsl
or
lahf
mov
xchg
push
inc
aad
cs
nop
cwtl
outsl
in
push
sbb
mov
sti
cli
insl
mov
jb
je
movl
mov
loop
or
mov
or
sbb
jns
push
inc
push
fst
cwtl
mov
lods
sahf
cltd
pop
or
xor
call
inc
mov
arpl
sub
faddl
stc
xor
xor
lock
add
fdivrl
adc
xchg
les
fnstcw
mov
sub
sbb
flds
xlat
cli
loop
mov
add
shl
gs
and
pop
jns
dec
mov
std
pop
cmp
mov
sahf
lea
movsb
mov
repnz
or
mov
dec
and
xor
push
push
ljmp
pop
inc
xchg
daa
rolb
fidivrs
mov
sahf
inc
dec
inc
clc
jecxz
repnz
cmp
dec
xlat
les
movsb
inc
sbb
pop
pop
mov
sbb
xor
iret
inc
cmp
outsl
or
adc
inc
cwtl
sarl
in
je
dec
roll
loop
cmp
xchg
push
fs
sub
dec
add
adc
fisttpl
scas
mov
add
cmp
in
xor
shl
or
fsubl
xchg
test
or
xchg
pop
outsl
test
scas
int
fdivrs
iret
mov
mov
cmpb
inc
and
mov
ret
nop
lods
int
bound
aas
shll
sbb
cmp
push
pop
pusha
maxps
mov
sbb
jno
pop
push
faddp
int3
je
mov
pop
inc
mov
ret
rclb
pop
loop
and
outsb
mov
stos
dec
ret
js
jle
or
add
pop
inc
scas
push
jg
cmp
sbb
xor
outsb
jae
mov
cmp
mov
lods
sub
mov
dec
inc
sarl
add
roll
pushf
popf
stc
mulb
pop
dec
insb
sbb
addb
sarb
stos
dec
xor
push
mov
sbb
mov
pop
subl
push
mov
pop
rep
loope
lret
repnz
lods
adc
jbe
pop
imul
dec
push
dec
sarb
xchg
insl
pop
xchg
adc
sti
std
push
ss
out
icebp
add
int
xor
mov
sbb
sub
movsl
insl
addb
xor
clc
into
mov
and
xor
jg
ficomps
inc
movsl
xorl
mov
and
mov
add
inc
mov
push
jle
sub
xchg
cmp
imul
jp
mov
lea
mov
jl
cmc
repz
fwait
and
adc
insb
arpl
jno
mov
dec
mov
icebp
gs
cmpl
jno
lods
rcrl
lods
mov
lret
xor
jg
and
jge
jne
add
sub
inc
mov
push
xor
jl
ds
lds
movsb
dec
jae
je
and
pop
or
pop
flds
fadd
and
addr16
and
loope
leave
sub
test
mov
aas
jmp
call
add
push
add
push
sbb
jbe
adc
inc
sbb
lret
cwtl
loop
xchg
add
add
jbe
fwait
and
imul
jge
sbb
data16
divb
std
mov
cltd
mov
mov
jp
jo
ja
std
cmpsb
div
push
scas
rcrl
dec
xchg
mov
xlat
fisttpl
sub
mov
pop
mov
std
mov
fcomps
notb
pop
fsubs
cmp
mulb
sub
cmc
and
xor
insl
lret
mov
inc
jne
and
dec
mov
es
or
sbb
popa
arpl
jb
xchg
aas
pop
daa
and
ret
push
add
push
xorb
rolb
mov
addl
mov
sbb
mov
xor
xchg
add
jp
pop
test
clc
out
dec
pusha
xchg
stos
push
fwait
mov
dec
imul
in
pop
out
pop
lret
cli
add
cmp
mov
mov
ljmp
cli
mov
stos
mov
imul
push
fldl
iret
in
cwtl
ret
and
xor
cmp
lahf
pop
pushf
imul
daa
mov
out
push
jo
cmp
mov
mov
js
outsl
push
sbb
push
cmpsl
shll
inc
mov
xchg
test
mov
lret
test
xchg
out
imul
in
lcall
stos
push
out
das
ja
cmp
cltd
push
mov
arpl
xlat
adc
sub
bound
test
cwtl
insl
mov
fucomi
jge
mov
sub
mov
cmpsl
pop
pop
cmp
loop
daa
sbb
ja
stc
cmp
adc
mov
pop
gs
addr16
jmp
sbb
sub
cmc
xchg
push
add
movsl
lret
dec
rcrb
lcall
cmp
fdivrs
testb
or
jno
inc
push
mov
loop
lret
nopl
mov
push
push
add
push
xor
sbb
jmp
mov
push
pop
jmp
insl
adc
or
inc
dec
mov
roll
xor
xor
jae
dec
pop
into
loope
test
das
push
pop
push
aaa
iret
test
leave
pushf
mov
out
pop
loopne
and
test
stos
push
ja
dec
bound
or
xor
cwtl
das
and
mov
rorb
sub
or
jge,pn
leave
iret
lcall
push
push
test
shr
pop
inc
jbe
pop
jbe
sub
add
rclb
in
adc
ret
jmp
sbb
dec
in
jbe
add
add
ss
xlat
jno
aaa
cmp
test
rclb
or
jnp
pop
pop
or
icebp
pop
fstps
sub
mov
xor
mov
dec
jno
subb
dec
sub
fcomi
or
test
daa
rcl
jl
xor
inc
fsubs
sub
pop
popa
shr
cmpl
cmp
xor
rcr
adc
push
or
std
mov
and
push
dec
sub
aam
lods
add
lea
in
ficoml
mull
aad
jmp
mov
add
aas
jl
push
std
lret
push
sbb
lock
mov
in
into
inc
jge
rolb
or
rcl
leave
call
xor
icebp
outsl
dec
jns
cmp
xor
test
xchg
sbbb
cmp
iret
dec
je
rolb
mov
cmpsb
icebp
aam
out
test
ficoml
ret
add
in
outsb
addb
leave
sbb
clc
pop
les
sub
xchg
das
cmp
jge
sbb
xchg
pop
and
ss
outsl
sub
dec
xor
or
lcall
dec
pop
or
vunpcklps
mov
add
mov
clc
mov
lock
stos
loop
std
xchg
add
sub
jle
push
dec
sarb
testl
xor
mov
stos
push
sub
stos
sbb
xchg
add
std
dec
pop
sub
and
adc
mov
mov
inc
xor
pop
jns
loop
in
xchg
mov
into
inc
and
enter
out
cmp
jg
popf
stc
in
jbe
dec
xchg
inc
inc
icebp
xor
add
and
aaa
pop
sub
icebp
adc
mov
mov
mov
xchg
xchg
stc
push
cmp
fs
dec
add
mov
in
pop
jl
dec
push
int
or
sub
rcrb
xchg
mov
sbb
cmp
lock
pop
out
push
fildl
lods
rcrl
or
mov
xor
ja
push
aad
nop
fidivl
das
lods
daa
inc
pop
insl
cmpsl
sub
sbb
popa
mov
xchg
xor
stos
adc
inc
cmp
jae
xchg
mov
pop
mov
jle
arpl
inc
mov
xchg
push
dec
jne
cmp
repz
adc
mov
push
xchg
mov
dec
bound
lcall
cmc
fidivrl
mov
adc
cwtl
ljmp
add
cmp
and
cmp
cmp
gs
and
push
add
mov
pop
fcoml
fistl
decl
imul
adc
loopne
iret
adc
rcrb
cmpsb
int3
movsb
mov
ljmp
mov
mov
imul
xchg
out
in
add
mov
pop
dec
sbb
push
adc
dec
xlat
icebp
mov
inc
aad
test
mov
add
shrl
sahf
jl
iret
xchg
lcall
mov
pop
outsb
jbe
pop
sub
mov
dec
outsb
insb
test
insl
or
and
cmp
mov
jl
mov
xchg
push
stos
mov
xchg
jno
test
fmulp
pop
mov
outsb
outsb
mov
mov
lods
jnp
xchg
dec
push
cmp
jg
dec
push
inc
and
push
out
and
in
mov
data16
and
rcl
mov
loopne
add
cmp
jns
fisubs
jecxz
hlt
fidivrs
aaa
jle
or
fwait
xchg
idivl
sub
adc
shlb
mov
jge
mov
shlb
cs
jns
popf
and
jmp
fdivs
jbe
mov
test
mov
sub
xor
je
jp
sub
dec
imul
or
inc
adc
jne
sub
sub
and
xchg
mov
or
or
cmc
pop
inc
test
adcb
in
xor
jb
push
je
pop
jl
xor
mov
cmpsl
std
or
jl
das
subb
push
jns
push
pop
push
dec
add
jle
sbb
xchg
jmp
push
sbb
jl
xlat
sbb
add
push
arpl
nop
mull
dec
movsb
lret
cmpsb
fldl
dec
xchg
mov
mov
jmp
push
int3
xchg
loop
hlt
rcrl
repnz
data16
loope
rcl
in
mov
ficompl
ljmp
sub
fs
xchg
das
jg
jno
sbb
push
mov
popa
shlb
dec
and
iret
and
push
cmp
mov
movsl
out
hlt
sub
cmp
stos
xchg
mov
add
outsb
loop
xchg
cs
pop
push
mov
push
lds
stc
ret
hlt
add
nop
fldl2t
sbb
test
sbb
xor
out
pop
pop
std
xor
add
lds
out
inc
xor
enter
orb
jg
dec
add
std
xor
jg
push
sbb
push
enter
repnz
lahf
into
imul
das
pop
cmpsb
pop
outsb
sub
cli
xchg
test
out
cmc
mov
adc
dec
jns
insb
inc
mov
repnz
mov
or
outsb
or
inc
loopne
aaa
push
fscale
add
imul
hlt
jae
sbb
jg
mov
stos
test
aas
fistl
dec
or
movsb
cmp
test
fndisi(8087
push
scas
and
outsl
cmova
mov
inc
aam
testb
mov
inc
and
push
push
mov
adc
push
push
xlat
sub
out
dec
inc
cmp
lret
dec
xchg
or
inc
pop
sub
mov
mov
in
adc
pop
sbb
push
and
ss
push
mov
add
out
lods
sti
mov
in
and
fcomp
sbb
arpl
insb
arpl
les
fmull
sbb
mov
inc
jae
add
les
cmp
fdivrs
inc
sub
ficompl
mov
hlt
stos
shll
sbb
rcll
mov
xor
push
int
cmp
rep
xchg
les
jnp
cltd
enter
add
and
sub
pop
sbb
into
aam
ret
inc
pop
outsl
mov
daa
rcrl
sti
test
pop
test
mov
in
and
jecxz
out
or
jl
add
sbb
cmp
push
xchg
sub
mov
fwait
lds
rorl
notb
outsl
xor
adc
lcall
or
test
add
push
fstp
cmp
movsl
sbb
push
aaa
push
push
xchg
adc
sub
js
mov
div
push
jl
aad
dec
sub
mov
es
xlat
ljmp
je
insl
dec
adc
mov
ljmp
xor
aad
movsl
adcb
stc
mov
add
movsl
cmp
jo
dec
xlat
dec
and
sub
mov
out
es
mov
fimuls
sub
notb
fimull
pop
adc
lcall
sub
popl
negb
inc
aam
cmp
and
pop
test
stc
test
xchg
jns
add
pop
popa
enter
ja
jg
xchg
mov
or
pop
pop
dec
sub
adc
mov
mov
jecxz
mov
cwtl
iret
fists
shrb
ret
xchg
movsl
pop
or
in
test
scas
jb
sti
pop
shlb
pop
xchg
mov
jg
jnp
add
sbb
push
pop
and
insl
in
inc
loop
mov
xlat
cld
adc
fsts
or
jge
addb
out
in
push
adc
xor
ret
scas
mov
cmp
sbb
jmp
jmp
inc
cmpsl
inc
int
daa
inc
lret
imul
setnp
scas
lret
ret
ja
sub
or
scas
mov
addr16
push
fmull
sub
cmpsl
mov
pop
lahf
lods
insb
das
and
inc
mov
lcall
imul
out
jne
icebp
push
out
pop
cmp
je
or
sbb
adc
xor
and
dec
xchg
cmp
das
fisubs
out
sub
pushf
mov
pop
loopne,pn
cmp
fsubs
push
xchg
mov
cld
enter
sbb
xchg
push
and
xchg
ja
stos
mov
dec
lods
ljmp
aad
cmp
cmp
xor
stos
mov
adc
push
shrb
xchg
fldt
add
pop
aas
push
mov
loopne
mov
test
sub
push
shlb
into
out
dec
push
fadd
mov
push
pop
jns
call
adc
test
xchg
or
cmp
jnp
xor
and
movsb
ja
cwtl
test
cmp
cmp
stos
jecxz
xchg
and
xchg
jmp
cwtl
gs
cmp
and
mov
xchg
movsl
pop
mov
inc
xchg
mov
ja
mov
and
inc
cltd
jb
mov
fiaddl
jg
dec
jp
outsl
leave
fs
mov
cmp
push
mov
popa
add
inc
lea
xor
xchg
sbb
jo
jg
or
lcall
aad
jns
movsb
and
or
and
pusha
or
cmp
mov
pop
cmpsl
pop
add
stos
add
mov
xor
fxch
jge
in
and
ja
hlt
test
pop
sub
int
movsb
fisttpll
lds
mov
mov
clc
or
or
test
js
sarb
xchg
sti
adc
sbb
pop
stc
ffreep
jge
push
hlt
add
mov
pop
das
popa
psubq
lods
or
cmp
inc
orb
roll
fisubrl
xor
fiadds
ret
xor
jge
inc
push
dec
sub
mov
call
shl
sarl
pop
cmp
mov
mov
add
imul
inc
mov
les
pop
push
jae
pop
insb
dec
pcmpeqd
jp
push
movsl
aam
push
sub
bound
imul
mov
gs
xchg
lahf
in
add
cmpsl
aas
xorl
std
cmp
adc
rorb
icebp
loope
iret
jecxz
mov
lret
sti
push
lahf
adc
pop
xchg
sub
sahf
in
and
das
fcompl
push
cmp
cmp
mov
insl
fwait
sub
push
lahf
test
nop
xchg
adc
test
push
hlt
lods
add
xchg
or
movsl
mov
test
and
push
or
inc
shlb
cmpb
cs
pushf
sbb
jo
mov
jecxz
push
adcb
adc
in
push
and
mov
lret
lahf
add
jmp
mov
cmp
sbb
test
jp
or
ja
gs
lds
popa
jp
xchg
add
je
fs
ret
jmp
int
loopne
cmc
cmp
leave
aaa
and
mov
push
fst
loopne
jmp
jb
data16
sbb
dec
adc
xchg
int3
mov
or
adcb
inc
jecxz
pop
pop
mov
imul
dec
dec
or
xor
add
scas
or
orb
and
es
mov
inc
xor
shl
push
sbbb
push
xchg
stos
mov
rorl
push
xor
movsb
xor
mov
mov
jb
icebp
test
inc
cmp
aad
push
xor
das
xor
dec
or
cmp
xor
aad
out
sub
inc
cltd
lods
shr
push
pop
hlt
push
inc
mov
mov
or
jnp
aad
ss
call
in
mov
mov
mov
or
fwait
inc
dec
mov
fwait
out
nop
dec
add
adc
add
dec
mov
hlt
jbe
fs
aaa
loope
cltd
repz
mov
mov
leave
xchg
stc
lods
jp
arpl
aas
push
incl
into
in
mov
push
cmpsl
xor
scas
mov
mov
pop
add
leave
push
sub
cmp
and
xchg
test
fsts
mov
inc
xchg
stos
pop
mov
xchg
inc
jnp
hlt
jecxz
mov
roll
pop
lahf
repz
push
cmpsb
xlat
mov
cs
push
cwtl
add
push
cmp
push
and
loope
xlat
movsb
jns
add
mov
scas
shll
cmp
add
and
les
out
add
scas
insb
adc
adc
mov
std
mov
stc
mov
dec
sbb
jae
leave
aaa
lret
lods
pushf
cmp
lock
adc
decb
xchg
ds
cli
add
jno
shlb
jo
xchg
inc
jmp
cli
in
bound
rcrb
fisttpll
pop
pop
jns
or
leave
push
dec
test
lock
inc
jbe
cmpsl
les
and
jle
aam
mov
fistpl
cmp
outsl
sub
cmp
inc
bound
jns
daa
pushf
dec
mov
mov
lahf
xchg
fisttpl
dec
push
fcoml
insl
cmp
and
adc
dec
stos
cmc
mov
loopne
dec
mov
push
add
gs
sub
jmp
ja
pop
xchg
dec
adc
add
out
pop
push
dec
cmpsw
push
xchg
dec
cmp
sbb
nop
add
add
add
xchg
lahf
nop
lahf
jg
hlt
jnp
add
jle
in
enter
sbb
mov
ret
shrl
jno
mov
pop
divb
dec
movsb
stos
out
jecxz
mov
stos
or
sahf
imul
lret
insl
inc
call
mov
mov
jmp
pop
xchg
mov
imul
jmp
fsubrs
jecxz
push
daa
loopew
push
out
sbb
negl
scas
cmp
insb
je
test
sarb
pop
push
mov
pop
xor
leave
int3
aas
mov
mov
in
cld
jg
insb
cs
mov
jno
jecxz
pop
fisubl
sub
sub
add
daa
add
insb
jns
insl
test
insb
movsl
mov
pop
sbbb
lods
testl
jecxz
fstps
popf
out
insl
outsb
fwait
stos
movsb
jmp
xchg
xorb
add
sub
sbb
inc
add
ficompl
test
aam
aas
jae
fxch
sti
and
fistps
xor
push
loopne
cmp
mov
cmc
mov
pop
mov
xor
xchg
in
sub
mov
loope
ficoml
sub
xor
sbb
and
jbe
jmp
pop
cmp
push
lds
jbe
cli
outsl
dec
or
push
or
scas
xchg
aas
cmp
pop
jno
mov
add
pop
int3
pushf
imul
fstpl
pop
mulb
enter
add
jecxz
lock
cmp
inc
movb
xchg
fwait
jge
xchg
cli
aam
rol
repnz
jne
xor
cmp
shrl
inc
hlt
mov
xchg
xchg
xor
dec
xor
test
testl
jb
sub
pusha
xorl
push
adc
inc
sahf
mov
out
movzwl
lea
test
mov
dec
adc
pop
mov
shrl
movsb
xchg
inc
xchg
or
outsb
aaa
es
stos
fdivrs
rclb
dec
jbe
xchg
je
in
mov
dec
xchg
dec
repnz
fisubrl
push
and
add
push
mov
fisttpl
shl
nop
add
repz
cmc
and
test
mov
cmp
lcall
push
push
ret
pop
or
ret
xchg
clc
rcrb
pop
dec
dec
xor
add
aas
dec
stc
test
xchg
mov
mov
dec
add
sub
dec
stos
sub
fcompl
push
fs
pushf
dec
push
outsl
fcompl
cmp
and
ja
mov
mov
ret
mov
jo
adc
jo
clc
sbb
shll
test
jnp
xor
notl
sbb
xchg
push
aaa
popa
cs
xchg
arpl
xor
push
lock
cmpsb
faddl
icebp
loope
push
fmull
xchg
bswap
shlb
clc
jne
hlt
and
and
lds
cwtl
loopne
cmp
xchg
test
jl
ffreep
clc
aam
movsl
aaa
adc
sbb
daa
inc
cwtl
mov
aad
mov
int3
add
push
jbe
dec
jnp
repnz
enter
pop
int3
inc
or
mov
push
mov
ja
imul
add
ds
mov
mov
fdivrs
mov
imul
repnz
ds
mov
inc
fwait
jmp
and
mov
ret
stos
ret
roll
jo
lea
fidivrs
test
dec
mov
xchg
jg
cwtd
pop
das
or
or
inc
in
mov
push
sarb
jae
sbb
ret
xchg
pop
insb
std
mov
add
pushf
pushf
out
leave
or
sbb
insl
or
mov
cld
mov
sub
xor
ss
inc
ds
insb
dec
cs
imull
or
jne
shrl
jg
lcall
adc
lret
xor
adc
loopne
mov
cmp
or
pop
mov
cmpsl
ret
stos
pop
jae
jnp
cmp
movsb
andl
push
test
push
fcmovu
pusha
push
mov
or
xchg
xchg
in
sbb
add
test
addr16
loop
pop
fdivrl
mov
addr16
in
sub
or
dec
xchg
faddl
ja
jmp
aad
xchg
loopne
jle
cli
push
and
lods
dec
insb
xchg
std
xlat
adc
adc
and
sti
aas
mov
movsl
loop
loopnew
push
in
sarb
mov
push
rcrb
or
push
rcrl
stos
adc
mov
mov
cmpsl
call
fucomi
faddl
repnz
addr16
sbb
cwtl
pop
pop
and
sbb
add
insb
adcl
jl
and
dec
scas
xchg
inc
sbb
cmp
es
mov
stc
and
mov
out
jnp
rep
or
sbb
push
jp
add
mov
std
jbe
jmp
sbb
or
lahf
mov
imul
and
out
fdivrs
sarl
lea
add
or
fnstsw
jmp
jmp
repz
sbb
ss
stc
jp
push
out
cmc
mov
js
push
out
pop
or
mov
hlt
lret
aaa
insl
and
frstpm(287
jge
or
mov
xchg
pusha
sub
mov
in
fwait
in
add
jecxz
mov
clc
syscall
lcall
push
cmp
outsb
xchg
push
gs
aaa
mov
xor
aas
das
jae
cs
sbb
or
ss
rorb
or
cmpsb
ss
int3
lock
test
dec
shll
sbb
mov
stos
aad
out
and
sub
jmp
xor
add
pop
lret
dec
decl
fcmovnu
xor
test
mov
adc
dec
outsb
scas
rorl
imul
adc
sahf
pop
mov
iret
push
dec
mov
stos
jo
or
fcoml
lea
ror
lock
mov
or
fistpl
loopne
loopne
das
dec
test
sbb
rorl
shll
fcmovu
sbb
push
mov
pusha
loop
adc
clc
fbld
pop
xchg
repnz
fsub
xor
xchg
pop
and
jne
jne
xlat
mov
add
sbbl
sbbl
pop
add
mov
shlb
stos
mov
aas
jp
bound
inc
add
pop
push
scas
jge
rcll
das
stos
cwtl
xor
dec
lret
cmp
sub
sbb
add
daa
inc
mov
mov
fldcw
rcrb
and
les
stos
inc
jno
mov
adc
aad
sub
popf
arpl
add
int3
imul
pop
test
xchg
das
out
js
jmp
xchg
test
jecxz
or
test
cmp
inc
mov
sahf
repz
stos
or
dec
incb
adc
fdivl
push
das
inc
xor
pop
xchg
jb
aas
das
stc
stos
test
ret
push
ja
dec
jge
xchg
cmp
lcall
push
outsl
adc
ficoms
mov
mov
xchg
jnp
stc
xor
inc
dec
xchg
dec
iret
and
ljmp
and
scas
and
and
xor
loopne
rcr
es
dec
xchg
inc
bound
pop
clc
divb
mov
gs
or
shll
imul
in
addr16
inc
shrl
adc
aaa
gs
scas
scas
lods
push
lret
mov
outsb
or
dec
dec
xchg
aas
mov
dec
ret
pop
rcr
in
xor
and
mov
sub
mov
add
cmc
sub
mov
dec
adc
or
xchg
movsl
out
outsb
dec
inc
stos
dec
jnp
mov
jae
pushf
push
mov
jge
sub
cld
pop
mov
mov
xor
sahf
orb
clc
and
loope
mov
rcl
dec
loopne
xchg
jge
push
js
add
dec
mov
and
in
pop
cmp
mov
or
mov
xor
mov
loope
dec
sbb
mov
mov
jmp
div
add
sub
push
rcl
in
mov
adc
pop
frstor
push
cmp
loope
mov
adc
out
test
inc
pop
inc
dec
inc
call
sbb
push
pushf
dec
xor
mov
les
xlat
fistpll
mov
mov
and
jbe
js
lock
mov
cli
add
xchg
or
sahf
add
sbb
gs
or
in
cmc
loopne
mov
data16
sarl
inc
hlt
adc
push
and
sub
adc
push
ss
lea
xchg
lret
mov
lods
xor
adc
sti
pop
add
sub
arpl
cmp
inc
mov
js
sub
mov
sti
cmp
cwtl
aaa
xchg
push
jmp
popf
xchg
fbld
int3
mov
arpl
dec
pop
jmp
mov
mov
lcall
jne
in
add
out
jecxz
push
push
sbb
lods
adcl
sub
inc
adc
stos
outsb
dec
xlat
int
jbe
jbe
xor
dec
adc
xchg
or
scas
xor
dec
and
outsl
divw
adc
adc
mov
push
lea
pop
mov
repz
cmpsb
into
or
dec
cmpsb
sub
mov
cld
arpl
and
inc
outsl
dec
clc
and
icebp
fwait
or
jo
lock
in
push
sahf
mov
and
call
je
jmp
cmpsl
or
mov
pusha
mov
cmp
lret
dec
out
pop
inc
mov
aaa
arpl
incl
mov
adcl
test
and
addr16
inc
inc
add
frstor
shll
dec
jmp
insb
xchg
sub
and
sti
inc
cli
ret
mov
jmp
push
cli
comiss
dec
and
imul
sub
push
lahf
jl
stc
fadds
leave
fwait
enter
scas
shl
cmp
inc
scas
js
or
test
roll
popf
stc
test
shll
mov
repnz
popa
ja
or
frstor
arpl
cld
fadds
out
scas
or
mov
bound
cmp
push
out
test
pop
add
mov
mov
or
mov
out
inc
inc
mov
mov
add
int3
xor
and
mov
fsubr
jl
mov
cs
and
lret
push
clc
mov
bound
aas
loopne
mov
jp
xchg
push
leave
das
or
add
sbb
sti
push
xor
add
dec
cld
sub
stc
fs
inc
fstps
xor
mov
mov
mov
out
scas
push
sti
cmp
jmp
mov
pop
aaa
lock
dec
or
sarl
hlt
fcomp
mov
and
sarl
addl
repnz
sub
or
inc
jl
and
out
in
mov
pushf
daa
les
notl
std
or
adc
add
sbb
out
nop
aaa
lds
push
mov
aaa
icebp
jbe
sbb
push
rorl
icebp
adc
dec
popf
mov
and
xchg
or
dec
jge
adc
addl
lret
xchg
jp
dec
mov
cltd
xchg
lret
sub
repz
adc
sub
das
inc
push
mov
or
mov
xchg
mov
aam
lahf
outsb
jb
jmp
fmuls
jnp
mov
out
loop
stos
adc
push
push
dec
xchg
test
pop
pop
test
or
mov
mov
imul
rclb
push
je
xorb
cmc
nop
jmp
aaa
mov
addl
pop
addr16
jecxz
fsts
cmpsb
and
int
ja
sbb
popf
lret
cs
jge
popa
out
mov
adc
or
cltd
iret
sahf
call
mov
int3
movsb
mov
cmp
sbb
repz
mov
jo
out
push
ret
pop
mov
push
lds
cmpl
je
lret
sub
mov
jmp
inc
mov
jno
and
inc
mov
inc
repz
inc
inc
dec
xlat
push
xor
and
ficompl
adc
cmp
sbb
xchg
sbb
aas
gs
out
enter
out
xchg
cmp
rep
int3
roll
xor
adc
mov
data16
push
ret
mov
aad
fcmovnbe
enter
fstpl
jno
ss
mov
push
xchg
imulb
outsl
and
add
mov
jne
inc
adc
sarb
adc
fdivl
cmp
push
jle
pop
push
ficompl
test
out
stos
and
jb
inc
fsubs
and
stos
and
mov
or
adc
mov
jmp
loopne
xchg
in
test
addr16
in
mov
test
dec
and
push
rcrl
pop
mov
mov
imull
push
int3
ja
test
mov
inc
sbb
jo
adcb
nop
test
pushf
xchg
jp
and
push
insb
ja
mov
es
jnp
mov
adc
add
push
mov
shl
out
xchg
mov
sbb
filds
stc
xlat
ror
sti
dec
mov
adc
add
dec
xchg
pop
ljmp
sub
lret
enter
jmp
or
cltd
sub
xor
mov
jns
outsb
loopne
mov
mov
fcoml
xlat
cmp
xchg
and
jbe
rcrl
mov
add
scas
push
in
in
lret
test
mov
pusha
dec
cmp
xor
push
push
lcall
xor
mov
add
add
cmp
shrl
lock
rcll
lods
sub
jno
adc
sahf
xor
pop
shrl
xor
mov
xchg
cmp
xchg
repnz
jno
jae
jge
enter
cs
xor
jp
mov
pop
iret
fcomps
mov
lods
stc
push
inc
lock
rcll
cmp
xchg
or
testb
pop
cmp
jp
in
xchg
or
dec
repnz
mov
pop
xchg
xor
outsl
pop
sub
imul
ror
insl
lret
negl
adc
pushf
jg
sub
mov
xor
int3
or
xchg
push
lret
lock
sub
repnz
jbe
inc
in
repz
repz
fsincos
stc
xchg
subl
or
out
idivl
push
in
test
movsl
fsubl
scas
or
xor
test
inc
cmpl
aam
sub
pop
ret
daa
iret
jle
imul
lret
inc
xchg
pop
lds
xor
sarl
ljmp
mov
cs
or
cwtl
icebp
adc
mov
xchg
pushaw
sbb
rorl
in
test
out
cmp
lcall
fisubrl
test
insb
shlb
and
mov
and
stc
xchg
pop
xchg
pop
ret
adc
add
mov
lods
xchg
in
sbbb
pop
cmp
push
sub
jae
test
sbb
lock
adc
pop
sub
loop
test
cmp
adc
lret
sbb
and
ljmp
rolb
xchg
lahf
inc
movsl
xor
pop
imul
jns
movsb
cli
imul
mov
pop
or
jl
dec
and
mov
pop
lock
sahf
int3
pop
xchg
inc
mov
mov
mov
decb
lahf
test
pop
inc
adc
out
cmp
sbb
sbb
dec
fnsave
rolb
insl
mov
pop
mov
xchg
or
dec
std
sub
dec
xor
xchg
out
sbb
sub
adc
imul
jg
lcall
dec
push
or
loopne
loope
push
test
adc
push
popf
xchg
fs
sub
das
jecxz
je
mov
or
andb
hlt
inc
push
inc
inc
lods
dec
mov
xor
dec
jb
sub
jmp
mov
hlt
xchg
cmp
xchg
imul
mov
inc
mov
mov
test
imul
inc
sbb
jne
out
pop
test
jmp
sbb
lods
cli
and
mov
dec
or
cs
dec
popa
pusha
dec
shll
inc
xchg
sub
pop
xchg
std
pop
insb
ds
push
in
insb
jns
or
push
sbb
xor
jp
push
mov
jns
sbb
popf
mov
and
xor
push
enter
in
insl
sub
in
aad
pop
pop
pop
push
faddp
xchg
cmpsb
jne
data16
and
jb
mov
movsb
popf
icebp
and
out
xlat
decb
int
cwtl
in
cmp
int3
insl
mov
aas
jmp
pop
adc
arpl
rcrb
inc
and
pop
xchg
mov
pand
fisttpll
mov
out
sbb
and
cmp
mov
mov
frstor
lret
sbb
jle
xchg
incl
sbb
adc
mov
mov
arpl
aam
test
les
add
mov
cwtl
std
icebp
repz
stc
shll
push
fistl
aas
mov
fisubl
xchg
aad
leave
add
ret
mov
jns
ja
iret
push
in
mov
out
into
inc
push
cmp
push
insb
mov
jge
or
dec
sub
xor
std
push
xor
pop
lahf
lock
sarb
mov
dec
out
mov
pop
push
cli
pop
cltd
adc
aaa
jb
xchg
jbe
pop
andl
repnz
cmc
ja
in
pop
push
ret
xchg
shrd
inc
out
insl
adc
xchg
shlb
push
aaa
lcall
cmp
mov
pop
adc
aam
or
jb
jnp
shll
dec
das
pop
out
fnsave
or
and
inc
idiv
dec
add
xchg
fwait
pop
in
imul
xchg
cmpsb
addr16
inc
mov
sub
fidivl
jns
test
push
loop
dec
add
in
enter
adc
js
negl
add
stc
ficoml
mov
pop
imul
push
outsl
jae
clc
sahf
adc
jge
out
dec
pop
je
jne
adc
mov
dec
push
outsl
push
sub
rorb
lods
mov
imul
clc
outsb
jmp
fldenv
jae
movsl
inc
in
inc
sbb
sub
sub
xor
hlt
mov
mov
mov
loop,pt
cmpb
and
repnz
jg
jle
xor
out
push
dec
jo
push
popa
dec
xor
jno
ficomps
push
dec
cltd
into
outsb
scas
outsb
jmp
adc
gs
pop
nop
add
daa
mov
ljmp
stos
lods
add
add
iret
in
xchg
pop
xor
insb
xor
dec
or
and
dec
scas
sbb
repz
sbb
cmp
push
cmpsl
les
jl
mov
inc
loopne
or
mov
inc
rol
ficoms
fists
push
jns
mov
and
dec
add
out
arpl
pop
mov
les
hlt
flds
and
push
xchg
cmc
mov
fstl
dec
add
jbe
call
lods
push
ds
arpl
push
pop
cmp
movsl
out
mov
daa
ss
mov
dec
sub
or
je
out
add
dec
shrb
xchg
in
repnz
add
mov
push
or
in
in
call
shl
or
stos
xor
sbb
idiv
ja
or
fbld
dec
loopne
dec
xlat
xor
daa
sub
mov
mov
pandn
aaa
repz
ficompl
jg
xchg
in
jns
mov
mov
xlat
jecxz
or
cmc
pop
xchg
inc
out
jbe
jle
sub
sbb
test
je
fadd
xor
hlt
sti
dec
daa
xor
dec
test
pop
inc
mov
mov
sti
jb
pop
add
xchg
lods
movsl
cmp
sbb
add
in
jp
inc
or
mov
pop
movsb
inc
loop
jbe
xor
jnp
insl
mov
ret
add
cmp
push
mov
loop
mov
push
lret
pop
lock
mov
fidivs
rolb
cmp
jg
and
pop
add
add
cmp
push
mov
divb
mov
jae
popa
jns
dec
jne
xchg
cmpsl
mov
outsb
repz
aaa
cmp
xchg
or
pop
ret
out
mov
mov
sbb
pop
lock
hlt
jo
jmp
dec
inc
rcr
and
addr16
cmp
fsubrs
mov
iret
sbb
das
scas
xchg
mov
and
in
bound
fs
js
lea
jle
pop
and
sub
cmpsb
ljmp
jl
mov
mov
stos
jecxz
imul
or
or
inc
and
pop
test
sub
ds
xchg
pop
dec
pop
insl
pop
and
jbe
inc
push
es
cltd
popa
adc
adc
xor
sbb
fistpl
lock
jo
jle
repnz
and
inc
arpl
stos
incb
xchg
mov
adc
fidivl
mov
sbb
aam
adc
bound
enter
jnp
imul
lret
adc
fwait
ret
lret
and
roll
int
pop
jmp
sub
imul
mov
push
pop
and
inc
mov
lock
xor
insb
pop
cwtl
hlt
adc
jbe
in
pop
mov
out
dec
mov
mov
sub
sub
shrl
push
mov
push
add
push
stos
dec
inc
cmp
add
and
sub
addr16
mov
jle
int3
and
imul
bound
scas
sbb
ljmp
test
loope
inc
hlt
outsl
leave
pop
push
mov
shll
add
cwtl
outsb
xchg
xchg
and
xor
sub
adc
push
iret
xchg
psrlw
icebp
sbb
cmp
test
jne
je
xchg
xor
repz
xchg
xchg
dec
test
or
sbb
cmp
xchg
test
sbb
sbb
rcl
fyl2xp1
mov
pop
inc
lret
out
out
fldcw
mov
inc
jg
loopne
pop
insb
pusha
xor
mov
imull
pop
mov
loop
dec
loope
push
jmp
jmp
xor
mov
ja
int
adc
dec
mov
mov
aas
ds
mov
bound
inc
fdiv
mov
jnp
pop
ss
mov
and
mov
cmpsl
das
and
push
inc
cmp
fld
or
stos
fldcw
lahf
cmpsb
icebp
xchg
es
mov
xchg
cmpsl
lret
imul
or
ret
inc
fldt
add
stos
adc
pop
xor
filds
mov
ret
enter
insb
dec
sbb
mov
jae
int3
pop
xchg
xor
add
push
mov
mov
lods
dec
and
inc
nop
lcall
out
inc
mov
aas
mov
mov
pop
nop
cmp
cmovae
daa
stos
dec
or
push
inc
mov
add
aas
sub
add
mov
add
jp
and
sbb
xchg
cmp
mov
data16
imul
ds
sbb
xor
push
es
pusha
fs
into
xchg
dec
shr
das
jmp
movsl
movsb
out
mov
sbb
push
aam
dec
in
test
lret
sbb
stos
push
outsl
inc
aam
roll
out
adc
push
ret
pop
pusha
dec
pop
je
inc
ret
xchg
clc
and
jg
leave
xchg
dec
mov
in
xchg
cmpsb
lock
inc
cli
jecxz
sub
sbb
adcl
rolb
in
lret
outsl
xor
sub
mov
cmp
movsb
pop
cmp
test
mov
outsl
nop
test
push
std
lods
pop
aas
sarl
adc
pop
pop
xchg
test
orb
out
adc
repnz
das
xchg
inc
cmp
xorb
sbb
jle,pt
cmp
inc
push
cwtl
sahf
dec
je
or
stos
scas
loopne
ja
les
out
add
fdivp
inc
xor
dec
sbb
push
scas
sarl
arpl
movsl
cli
bnd
sti
push
pop
sub
leave
dec
cmpsl
pop
pusha
aas
or
fwait
cli
call
mov
adc
fcmovnu
xor
xchg
out
out
cmpsl
pushf
test
ljmp
fwait
movsb
test
leave
mov
fisttpl
pop
les
xchg
push
pop
mov
rorl
movsb
sub
xchg
dec
jno
xchg
imul
loopne
mov
inc
stos
inc
dec
dec
jnp
test
scas
fists
mov
xchg
cmp
push
js
adc
xor
popa
push
push
shlb
movsl
mov
in
pusha
fiaddl
mov
sub
jnp
fistl
or
and
lcall
push
jp
movsl
fdiv
inc
push
cmc
fists
jle
notl
jg
hlt
popfw
mov
stc
mov
push
rcll
mov
mov
out
sub
repz
inc
and
cltd
lds
jbe
call
les
pop
xlat
dec
mov
push
and
mov
sub
neg
mov
loope
notl
adc
addr16
call
iret
test
push
push
pop
xor
loop
je
cmp
lods
pop
adc
xor
scas
out
mov
push
push
hlt
and
mov
xor
test
xor
popa
repnz
shlb
xor
test
cmp
cmp
xor
data16
fldenv
mov
lahf
test
mov
mov
lds
push
pop
sahf
or
faddp
cmp
pop
out
mov
adc
imul
leave
clc
inc
leave
inc
mov
rorl
mov
stos
cli
ror
sbb
sbb
add
add
jbe
imul
mov
add
cmp
cmp
sub
es
sub
pop
xor
sbb
cli
clc
fistpll
aad
outsb
mov
leave
jb
in
stos
movsb
pop
push
inc
mov
mov
cmp
iret
sbb
loope
mov
or
push
pop
aas
fisubs
ror
jmp
fwait
dec
sub
mov
cs
xor
sub
add
and
add
in
mov
add
sub
sbb
fxch
sti
or
push
jo
xor
inc
push
subb
jns
push
cmpsl
loope
pop
and
in
adc
fidivrs
xchg
int
jl
loopne
jmp
mov
push
and
loope
andb
mov
dec
mov
inc
divb
js
xor
bound
ss
hlt
mov
nop
and
in
lahf
xchg
cwtl
stos
add
test
inc
push
xchg
aaa
adc
push
inc
dec
adc
loopne
xor
fldcw
pop
mov
push
dec
adc
shrb
fs
call
mov
adc
nop
pop
cld
xor
out
push
and
ss
dec
and
int
scas
movsb
mov
sub
sbb
pop
xchg
mov
fs
ret
mov
jle
cmp
add
inc
or
rcl
xchg
mov
lock
insl
mov
mov
cmpsl
fsts
adc
adc
or
jle
mov
mov
clc
daa
andl
data16
stc
xchg
xlat
js
mul
xchg
inc
insb
lahf
cld
stos
sbb
mov
mov
enter
mov
enter
sbb
fsubrl
mov
sbb
imul
out
mov
xor
sbbb
leave
in
clc
ret
hlt
in
mov
jecxz
mov
xchg
sbb
cmp
inc
add
cmp
stc
fidivl
fdivs
cmp
or
cld
sub
xchg
cmp
popf
sbb
loop
cs
out
rcll
add
fnop
and
jge
pop
mov
sub
pop
test
divb
mov
fimuls
add
dec
adc
test
es
cmp
out
pop
xchg
dec
mov
data16
xchg
xchg
ret
mov
fsubrs
shrl
out
xor
and
pop
push
push
ljmp
push
add
and
iret
jne
clc
test
call
adc
jmp
push
test
mov
sar
pop
les
lods
pop
add
mov
push
dec
in
sub
dec
sub
movsb
popa
jo
addr16
pop
push
pop
pop
mov
sbb
cmpsb
mov
ror
push
pop
jmp
and
pop
xor
jle
push
mov
xchg
stos
push
in
les
stos
and
xor
inc
or
sub
loop
fidivrl
scas
loope
fisubrs
call
push
ljmp
arpl
ret
pop
call
cmpb
fisttpll
pop
sub
sbbb
inc
cmp
jae
and
sbb
bound
mov
pcmpgtd
sti
test
or
push
push
enter
pushf
inc
mov
jno
inc
test
adc
jp
in
sbb
mov
add
pop
ret
loopne
dec
sub
mov
add
in
xchg
andl
shl
iret
inc
push
mov
fldcw
mov
cli
insl
push
mov
lret
test
mov
jp
mov
pop
xlat
xchg
loop
sahf
xchg
andb
test
sbb
cli
sub
push
pusha
lds
add
psubsw
mov
js
cmp
hlt
fld
lahf
test
std
xchg
sbb
outsb
xor
cmc
add
repnz
pop
scas
ljmp
mov
add
and
js
and
inc
jg
and
cmp
cmpsb
jecxz
ss
jp
push
jae,pt
cmp
lahf
dec
sbb
dec
jg
sbb
andb
jbe
leave
iret
mov
mov
icebp
push
pop
and
in
jl
push
flds
data16
in
add
inc
aas
sbb
mov
fwait
xchg
xchg
mov
icebp
jle
mov
lcall
push
dec
xchg
es
mov
mov
xchg
add
rorb
ror
enter
sbb
cmpsl
int3
ret
sub
fs
in
lea
loope
add
sahf
xorb
sbb
shlb
xchg
je
mov
jns
or
pop
aad
inc
out
pop
add
add
lock
lods
jno
fdivs
dec
push
pop
mov
pop
sbb
mov
inc
in
jp
ret
mov
mov
jnp
xchg
adc
sti
xchg
loopne
es
mov
cmp
dec
sub
ds
adc
in
aam
mov
pop
adc
outsb
add
repnz
jp
mov
cmp
xor
jp
in
outsl
sbb
icebp
outsb
sti
sbb
inc
mov
push
adc
cmp
xor
nop
xchg
fcomps
inc
cmc
mov
fstp
sbb
or
pop
icebp
movsb
sbb
push
sbb
xchg
sub
lea
jge
or
inc
add
inc
lock
jge
int
lret
jbe
xlat
sahf
pop
mov
dec
adc
adc
cld
scas
push
jp
adc
clc
add
loope
insb
pop
insb
pop
popf
jbe
jmp
and
adc
pop
in
fisttpll
mov
int
sub
dec
and
in
cld
cltd
fisubl
lea
aaa
xchg
aad
push
pop
push
push
in
je
fisttpll
daa
shrl
cmp
dec
pop
pop
fdivrs
popl
sbb
mov
leave
outsl
aam
aam
outsb
scas
mov
push
cs
das
xchg
rcrb
pop
pop
out
outsl
negl
push
leave
sbb
loope
cli
into
inc
orb
pop
lea
outsl
loop
bsr
pop
push
dec
pop
xor
jl
mov
push
pop
lods
sbb
push
imul
ret
sub
outsl
stc
xor
js
dec
xchg
xchg
mov
pop
int
mov
scas
movsl
pop
or
insb
mov
aad
mov
ret
mov
xchg
push
cltd
rolb
mov
and
xorb
cli
and
xchg
cmp
push
lret
jns
mov
cmp
push
dec
dec
loope
add
add
sbb
loopne
into
jmp
inc
mov
dec
mov
and
inc
sub
imul
adc
out
cmp
xor
adc
test
out
addr16
daa
loopne
dec
xor
popa
addr16
push
push
sub
mov
add
sbb
mov
xchg
and
imul
stos
sbb
sbb
rcr
rcl
subb
mov
mov
bnd
mov
jne
xor
adc
add
push
test
scas
xchg
sbb
subb
xor
xchg
fcompl
gs
or
cmpsl
loop
data16
mov
cmpsb
mov
in
xor
and
jecxz
lret
push
jecxz
add
cmp
push
pop
iret
push
cmp
cmp
fwait
cmp
test
das
push
jno
jmp
mov
or
sub
sbb
pushf
es
into
push
sti
in
jge
fisubs
test
test
add
clc
mov
cmpsb
sbb
pop
shl
xchg
nop
inc
xor
lea
jae
int
xchg
fldcw
and
out
inc
push
lock
jnp
jge
mov
je
or
jle
cmp
pop
outsl
sbb
pop
mov
jns
nop
jae
sti
hlt
adc
jb
ljmp
xor
mov
ljmp
dec
adc
sbb
jmp
les
cmp
mov
xor
inc
sub
aas
fiaddl
call
push
adc
out
xchg
lds
lret
std
popf
sti
dec
xchg
rolb
add
clc
jmp
out
xor
lock
mov
mov
dec
adc
adc
mov
push
cmp
and
aas
mov
jp
dec
or
dec
xchg
sahf
js
push
cld
data16
lea
int3
sbbl
rclb
add
imul
stc
add
adc
imul
add
sbb
rcll
fdivr
sub
push
mov
stos
xchg
inc
int
pop
std
push
or
clc
fldenv
sbb
xchg
sbb
cmp
bndstx
in
cld
insb
dec
adc
stos
shr
push
push
int3
add
popa
push
push
mov
mov
pushf
lea
dec
xchg
push
rorl
xor
test
inc
cmc
inc
pushf
xor
xor
test
jno
push
cs
push
mov
sub
mov
push
fdiv
push
mov
jnp
jb
pop
xchg
ds
bound
pop
push
sub
aaa
inc
loopne
pushf
cmpsb
mov
jb
and
push
adc
mov
lret
push
popf
arpl
mov
int
je
mov
bound
fs
stc
arpl
jae
movsl
ljmp
or
sbb
inc
mov
add
and
addb
push
mov
dec
sbb
int
mov
scas
or
imul
pop
sbb
aam
xor
popa
mov
mov
jae
jmp
push
hlt
outsb
xor
lea
stos
fsubl
outsl
and
xor
sbb
mov
ja
lock
dec
bound
repz
arpl
cli
std
les
jo
outsb
shl
or
adc
or
test
and
and
or
pop
out
call
mov
add
cmp
test
pop
nop
or
lds
fcompl
add
aad
fcompl
sbb
or
in
mov
cs
xchg
addl
gs
or
mov
cmp
in
pop
cwtd
fwait
mov
stos
pushf
jne
sbb
dec
aad
scas
enter
pusha
dec
mov
pop
lea
arpl
inc
out
cli
mov
pop
sbb
push
and
pusha
pop
fimull
xor
inc
hlt
mov
cmp
in
js
pop
jg
push
sub
dec
fisttpl
mov
call
lods
cs
cli
js
dec
or
mov
add
scas
adc
jmp
sub
gs
daa
ret
mov
mov
in
push
cmp
adc
std
ficoms
adcb
or
jae
aaa
or
mov
scas
xchg
or
inc
add
pop
cld
mov
rcrb
std
add
pop
mov
mov
das
rolb
and
insb
lcall
and
pop
mov
mov
jge
xorl
mov
outsb
adc
popl
mov
pop
sub
fidivrs
out
insl
repnz
popa
adc
pushf
mov
xchg
addr16
sbb
dec
cmpsb
mov
es
sub
dec
jno
and
adc
mov
jle
push
add
imul
cmp
inc
xchg
xor
lcall
mov
cmp
repnz
and
xor
jecxz
jp
cmp
mov
subb
cld
inc
out
arpl
jbe
int
pop
lock
fs
cwtl
xchg
jmp
mov
sbb
test
inc
jge
adc
shrb
mov
adc
iret
aam
repz
cmp
jmp
dec
cmp
and
sub
mov
cmpsb
pop
and
xlat
sbb
out
lret
inc
cmp
fbstp
ret
aas
outsl
sbb
lea
in
add
jbe
das
xor
xor
mov
rcrl
mov
dec
and
pop
jo
fdivs
xchg
loope
xchg
into
or
or
je
xchg
push
iret
cmp
call
icebp
pop
cltd
xlat
imul
fcom
xor
cltd
insl
repz
mov
in
nop
mov
dec
mov
add
leave
mul
scas
sub
bound
push
push
popa
dec
cmc
sbb
ja
xor
pop
sbb
lods
cmp
or
and
jecxz
mov
push
outsl
leave
add
mov
dec
mov
sbb
lahf
mov
xlat
jecxz
test
mov
int
jne
ret
mov
mov
lods
jae
cld
cld
icebp
mov
ljmp
dec
js
mov
jl
clc
std
push
imul
movsl
push
cltd
imul
stos
stc
mov
sub
in
andl
adc
and
pop
push
add
cmp
imul
jne
pushf
popa
xlat
mov
ljmp
insb
fldt
mov
mov
cwtl
dec
cwtl
leave
arpl
sub
cmp
cmp
lea
sahf
ljmp
adc
and
test
xchg
pusha
test
lahf
pop
into
mov
scas
mov
pop
or
loope
fstps
in
add
outsb
cmpsl
xor
imul
adc
jge
add
ds
sub
cwtl
and
inc
lcall
les
popa
in
mov
sbb
das
mov
jp
data16
sbb
mov
sbb
daa
pop
cli
cmp
xor
inc
cld
jle
clc
cmc
xor
jns
jmp
xor
clc
pop
inc
sbb
orl
sub
dec
sub
inc
xor
ss
mov
inc
sbb
lret
rcll
mov
loopne
and
cwtl
sbb
shrb
leave
aam
insw
sar
adc
sub
testl
xor
mov
idivl
jne
mov
aam
aam
aad
and
dec
lret
inc
jb
cmp
mov
scas
dec
aaa
int3
inc
mov
pop
imul
ljmp
mull
pop
pop
mov
data16
in
mov
jne
dec
lods
xor
ficomps
aam
shll
incl
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
pushl
cmp
stos
xlat
jmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
fimull
cmpl
lcall
pop
shr
dec
iret
pop
inc
cli
lret
pushf
pop
sbb
cmpsl
dec
popf
push
inc
test
mov
orl
mov
bnd
enter
and
bound
lret
call
adc
sub
into
out
sbb
ret
in
nop
pop
test
dec
jo
fnstsw
jno
jl
xor
mov
cmp
leave
aaa
in
mov
call
xor
andb
lds
sbb
pop
dec
test
jp
mov
jl
lods
xor
test
push
xor
xor
mov
xor
and
jnp
pop
cmp
enter
ret
sbb
cmp
xlat
push
cmp
enter
and
cmp
enter
and
cmp
enter
daa
mov
jbe
cwtl
xor
repnz
cmp
mov
stos
push
cmp
enter
and
cmp
enter
and
aaa
jbe
lret
cmp
stos
cwtl
pop
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
lods
inc
leave
xor
mov
mov
and
jle
xchg
pushf
jb
xor
mov
xchg
lea
mov
jbe
ret
cmp
stos
movhlps
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
cmp
enter
and
adc
mov
adcb
jmp
and
sbb
sub
adc
push
pop
mov
xchg
add
jns
lahf
xor
xchg
xchg
inc
sahf
adc
push
insb
pop
sub
pop
pop
push
aaa
push
push
add
movsb
es
cltd
jle
andl
xchg
movsl
fnstenv
dec
push
add
pop
jbe
das
pop
inc
arpl
mov
movsb
inc
jge
fsub
jg
int
mov
cltd
sub
in
clc
divb
in
dec
icebp
mov
jp
pop
inc
out
jo
or
mov
mov
pop
int3
xor
popf
adc
popf
pop
jbe
sub
sbb
sbb
inc
add
leave
sbb
inc
sahf
cld
data16
push
mov
icebp
and
jbe
xchg
ja
popf
mov
loope
adc
mov
imul
mov
in
and
xor
jae
scas
gs
pop
inc
sar
pop
shll
push
push
out
mov
cmc
jns
fcoms
xor
dec
stc
int3
mov
sub
aaa
cwtl
jl
cltd
fcmove
out
and
leave
icebp
cwtl
adc
and
cmp
adc
ret
shlb
xor
mov
adc
pop
movsl
dec
or
popf
adc
push
shlb
stc
ret
addr16
cli
sbb
jmp
in
mov
or
adc
data16
shlb
imul
xchg
adc
inc
fldl
int
aad
jg
xor
lds
sub
cmp
fnsave
xor
test
dec
pushf
std
jle
fcmovne
push
mov
jb
loopne
jg
in
test
js
sbbl
addr16
dec
inc
int3
ret
test
sar
hlt
repnz
jmp
push
in
movb
and
in
repnz
dec
jle
xchg
cwtl
adc
out
push
dec
divl
mov
movsb
mov
out
lea
dec
xchg
sbb
test
loop
inc
jne
loop
and
into
jge
cmp
add
and
icebp
bound
arpl
mov
xlat
cmp
mov
xor
mov
cmp
xchg
xor
pop
iret
or
mov
adc
jge
out
adcl
mov
notl
pop
mov
pop
loope
scas
jnp
lcall
xchg
dec
xchg
push
xchg
lret
add
mov
popa
jbe
fwait
jl
fisubs
lods
repz
lds
std
sub
gs
lods
aas
lods
mov
and
call
in
dec
aad
lret
js
insb
imul
iret
aad
clc
aad
jo
dec
add
fldl2e
mov
bound
mov
shrl
dec
and
lock
in
sub
pop
fldenv
in
pusha
mov
sti
cmp
loope
xor
jb
cmp
xor
out
fcoml
hlt
popa
jne
psubsw
lret
mov
and
jl
lahf
xchg
xchg
prefetch
or
adc
inc
bound
add
jno
mov
aaa
and
movsb
popa
in
inc
jle
jle
add
xchg
sbb
aam
adc
adc
pusha
fimull
mov
pop
xchg
dec
outsl
and
jmp
ja
out
and
lret
mov
inc
push
jg
sbb
mov
mov
pop
push
mov
sbbb
aaa
out
add
fildll
xchg
add
inc
and
es
aas
sub
jmp
pop
and
xchg
in
fs
inc
test
inc
dec
hlt
mov
jmp
sub
orl
in
cmp
movsl
rclb
lds
rcl
inc
jne
scas
iret
jno
stc
mov
addr16
pop
in
xor
jnp
or
iret
jmp
mov
clc
scas
aas
jl
push
xor
sub
push
insb
imulb
xor
cmc
fdivl
mull
xchg
xchg
cltd
mov
cmp
jge
push
mov
addr16
mov
lock
add
dec
dec
aad
int
loope
jno
addr16
pop
mov
subb
or
fstpl
fs
test
xor
add
into
movsb
mov
add
xor
mov
out
jne
adc
sub
aad
cwtl
push
test
test
int
pop
stos
cmc
pop
sbb
fiadds
movsb
lret
xor
mov
lret
and
push
xchg
jne
add
es
lock
pop
test
mov
mov
xor
in
bound
out
mov
nop
aas
jecxz
add
icebp
outsb
aaa
cmp
test
and
or
jne
push
leave
pop
out
call
addr16
push
inc
push
jne
push
call
std
sahf
movb
mov
rol
push
cltd
or
pop
pop
iret
dec
jnp
aas
jle
cs
cmpsb
xor
jnp
add
push
scas
and
movsb
test
jae
mov
dec
mov
outsb
fidivrs
negb
inc
or
stos
pop
sub
jb
ret
xor
outsl
add
xchg
cmp
into
lret
loop
adc
xor
scas
fwait
pop
outsb
mov
xor
xor
sbb
out
inc
inc
or
icebp
in
adc
test
setl
add
in
mov
and
int
sbbb
push
mov
mov
or
pop
mov
mov
push
js,pn
inc
mov
push
lods
sub
jle
mov
fcmovbe
movsb
push
sti
dec
rorb
shrb
popf
and
test
or
aad
pusha
inc
lcall
add
jns
adc
loop
mov
push
jecxz
mov
test
and
shll
adc
div
mov
add
outsl
push
jle
or
mov
sahf
jne
int3
aaa
outsl
es
inc
mov
pusha
mov
or
rorb
push
lea
sub
hlt
or
xchg
or
movsb
mov
and
cmpsl
xchg
xor
xor
aad
lret
dec
cmpsl
cld
mov
mov
shl
xor
cs
rcrl
cmpsl
das
lock
adc
in
xchg
xor
mov
das
rorl
jbe
push
inc
sarb
xor
mov
lret
cwtl
pop
pusha
aam
xchg
les
idivb
test
aaa
jnp
shlb
pop
call
fstps
sbb
dec
rorb
gs
lahf
dec
popa
adc
div
insl
outsl
sub
arpl
dec
add
and
fnstenv
into
xor
and
js
fisubrl
cltd
aaa
fimuls
xchg
test
outsb
sbb
cmpsb
mov
jb
xor
fsubrs
repnz
or
out
nop
jne
jmp
jo
in
out
movsb
push
mov
push
popa
push
mov
pop
inc
out
xor
ds
fdivrs
inc
loop
mov
sub
cmp
dec
rolb
scas
aaa
sub
mov
jno
mov
idivl
call
pushl
cmpsb
cmp
inc
dec
pop
jb
lock
jo
js
mov
dec
cs
addl
jnp
cmp
cmpb
xor
dec
xor
add
mov
or
push
fimull
push
enter
dec
xor
stos
sbbl
movb
xor
xchg
loope
movsl
ret
adc
cmpsl
mov
xchg
stc
mov
or
push
cmp
icebp
into
jecxz
gs
pop
repz
fs
mov
adc
bound
in
xchg
cmp
pop
adc
inc
into
mov
mov
into
add
jmp
mov
sahf
aam
pop
mov
push
add
pop
cltd
test
sub
xchg
adc
or
cs
int
xor
cld
bound
sub
mov
mov
jns
out
ljmp
enter
aam
in
shl
xor
das
xchg
pop
inc
popa
mov
pop
mov
cld
in
inc
xor
dec
jg
shlb
mov
cmpsl
and
jle
lcall
lds
adc
shlb
xlat
pop
push
nop
mov
shll
dec
ds
push
adc
adc
xchg
cmp
ja
mov
xchg
sub
cli
fsubr
clc
sub
inc
mov
lods
repz
pop
inc
cmp
loop
push
cmp
xchg
nop
fldenv
jb
mov
mov
movsb
aaa
pop
inc
or
mov
test
dec
lcall
fsts
mov
ja
add
mov
mov
push
pop
and
mov
push
rolb
enter
dec
es
sbb
into
ficompl
fwait
negl
leave
lret
push
xchg
jnp
pop
mov
adc
lods
pushf
mov
lcall
add
jae
jle
mov
in
sbb
mov
jg
idiv
enter
data16
add
dec
xchg
mov
insb
jl
add
bound
push
pop
imul
out
aam
cmp
in
cmp
xchg
test
andl
mov
jb
test
sbb
leave
inc
loopne
lahf
lds
jb
dec
sbb
mov
cwtl
repz
xor
imul
or
jno
fbstp
mov
fs
pushf
das
popf
outsb
fmull
sbb
cs
mov
adcb
mov
jecxz
push
lods
dec
into
adc
out
and
das
mov
stos
into
jo
adc
sbb
int
inc
sub
sbb
lret
lcall
mov
aas
cld
fsubrs
pushf
sbb
roll
mov
push
add
rcrb
inc
push
cs
mov
lea
fs
mov
push
lahf
mov
in
and
js
fstpl
insl
xor
inc
nop
push
dec
inc
aas
scas
push
jae
mov
ds
mov
popf
and
cmp
mov
sub
sbb
push
int
mov
cmpb
or
lds
adc
mov
mov
test
lahf
ficoml
xor
insl
test
dec
adc
lret
stos
lret
pop
mov
push
push
mov
stos
xchg
dec
push
fcomps
scas
pop
movzbl
sub
leave
push
aaa
das
lds
scas
lea
inc
movsl
xchg
mov
iret
xor
push
push
mov
loopne
out
lock
mov
or
adc
das
stos
pop
cmpsl
pop
add
fwait
mov
or
add
cmc
mov
cmp
pop
sbb
jae
xor
sbb
movsl
mov
sub
fisubrl
sbb
and
arpl
in
push
mov
nop
dec
outsb
lret
pop
push
inc
cmpb
cltd
fadd
sub
dec
mov
cmp
push
lods
fmull
pop
sub
sub
jmp
jg
dec
cwtl
rcll
lret
loopne
cmp
mov
bswap
movsb
pop
mull
dec
push
sub
or
adc
push
cmp
addl
cld
repz
add
push
add
es
out
aad
push
mov
das
idivb
add
sub
cld
pop
jp
adc
and
pop
sub
shll
enter
mov
pop
jb
xchg
dec
add
inc
insb
pop
popa
and
pop
xchg
push
xor
cs
enter
xor
xchg
popa
cmp
push
fnsave
js
mov
hlt
mov
call
in
jo
jecxz
mov
jns
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
