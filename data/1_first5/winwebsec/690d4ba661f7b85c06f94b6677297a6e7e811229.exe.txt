sub
push
cmpsl
dec
cltd
push
ljmp
or
xor
dec
add
lock
mov
pushl
jge
fbstp
inc
or
jle
mov
inc
das
pop
outsl
xor
xor
xchg
jmp
mov
push
addb
out
jecxz
dec
pop
add
push
je
cmp
mov
mov
call
and
cmpsl
xchg
adc
push
ja
dec
scas
push
or
or
mov
sti
ret
dec
push
jge
call
repz
push
mov
jmp
adc
jge
and
mov
scas
ljmp
mov
pop
adc
add
cld
movaps
inc
and
mov
or
in
push
pop
in
xor
mov
into
sbb
out
pop
testl
xlat
in
into
or
mov
dec
sub
cmpb
mov
bound
cmp
ljmp
pop
cld
shrw
mov
aam
adc
xor
rcrb
subl
xchg
ds
aad
xor
mov
hlt
leave
clc
in
pop
enter
cwtl
cmp
bound
mov
sbb
lret
jbe
sub
filds
or
mov
pop
jg
xor
push
inc
mov
xchg
lea
or
dec
xchg
fidivrs
lds
adc
arpl
lahf
xchg
xchg
mov
mov
loop
adc
or
inc
bound
mov
loopne
cmp
dec
jmp
fstl
jecxz
scas
add
movsb
int
out
sbbl
push
test
repz
xchg
xor
int3
aas
lods
int3
ljmp
dec
mov
cli
inc
mov
out
cmp
xchg
push
testl
xchg
or
sbb
sarb
lret
into
and
cli
xor
mov
hlt
xlat
scas
iret
mov
insl
ret
jno
sbb
cld
out
outsb
xor
push
stos
and
pop
imul
fnstenv
ds
sub
cmpsl
push
cli
sub
xchg
sbbb
pop
flds
cs
pop
hlt
inc
pop
mov
enter
mov
or
lds
jmp
mov
movsb
repnz
pop
arpl
pop
out
pop
sub
sub
dec
inc
es
aad
sbb
aaa
mov
ret
sub
clc
cmp
mov
arpl
xchg
mov
cmp
lods
mov
and
leave
mov
push
enter
mov
mov
pushl
outsw
je
out
test
aas
lea
ret
fs
inc
mov
lock
push
xor
mov
popa
dec
xorb
clc
stos
mov
cs
cmpsl
jo
jbe
jmp
lds
pop
std
push
lret
in
std
cmp
in
push
test
xor
push
add
lea
jns
bound
das
ljmp
mov
into
xchg
lcall
sub
dec
mov
push
jle
inc
push
cltd
xor
movsl
nop
lods
adc
cmpl
mulb
xlat
push
pushf
jmp
ss
fidivrs
or
mov
stos
movsb
ljmp
push
mov
dec
fsubrs
arpl
dec
add
push
inc
lret
mov
rol
pop
dec
cmpsb
sub
add
mov
pop
cmp
test
jp
cwtl
xchg
decb
inc
push
imulb
jns
and
lahf
fdivp
adc
popf
cmp
add
pop
stos
fmuls
push
ret
inc
popa
push
mov
pop
xor
stos
sarl
dec
cmpsb
mov
push
les
and
push
and
sbb
stc
rcr
mov
shl
cmp
pop
std
fwait
repnz
mov
ljmp
inc
inc
lret
int3
jp
push
je
mov
mov
fwait
stos
mov
loop
dec
test
and
subl
mov
jns
xor
lea
lcall
repnz
and
stc
mov
jne
rcl
sub
inc
test
pusha
and
push
fisttpl
stos
mov
mov
dec
xchg
fcmovb
xor
inc
fsubl
lods
push
dec
imul
lock
cs
mov
push
mov
cmp
jp
push
scas
adc
divb
mov
mov
inc
xor
aas
out
popf
mov
ja
ret
inc
add
aad
leave
test
loopne
sti
cltd
cs
dec
xchg
mov
xchg
mov
andl
test
dec
cltd
mov
pop
cld
fbld
lahf
movsl
rsm
sbb
and
loop
idivb
test
xor
loope
cmpsb
adc
enter
cmp
repnz
xor
dec
jl
popf
inc
push
andb
cmp
nop
jle
xchg
fdivp
dec
je
xchg
and
cmp
and
jno
sub
insb
add
filds
sbb
in
mov
adc
cwtl
dec
stos
mov
idivl
add
adc
lahf
insl
hlt
stos
lcall
js
jae
loop
sti
test
cld
mov
mov
movsl
jno
dec
dec
cmp
in
inc
inc
mov
and
mov
mov
das
push
aam
aad
cld
push
dec
xlat
in
pop
inc
pop
xchg
cmpsb
idivb
loope
int
jecxz
and
idivb
inc
int
jge
fldenv
test
jmp
add
inc
push
sub
dec
mov
jnp
out
mov
rorb
xor
mov
test
out
push
pop
call
push
dec
shrl
mov
ljmp
enter
xchg
test
mov
mov
ljmp
dec
jecxz
push
shrl
data16
adc
cmp
add
bnd
xchg
or
out
mov
jo
inc
cmp
mov
jb
adc
and
pop
int
inc
xchg
lock
push
out
xchg
xor
mov
loope
and
sahf
mov
and
xor
sbb
loop
and
inc
pusha
cltd
mov
andl
test
push
push
repnz
lret
jnp
mov
jecxz
lea
add
cmpsb
das
mov
in
add
or
leave
push
mov
stos
push
jmp
mov
fcmovnbe
aaa
insb
mov
rorb
lea
push
jl
jns
push
mov
push
push
test
xchg
and
lret
lret
es
negl
push
xchg
insb
dec
jae
jl
je
iret
mov
dec
inc
out
lods
jle
jg
inc
jnp
and
mov
mov
jle
xchg
leave
and
test
ja
loop
cmpsb
jge,pt
pop
and
mov
xchg
xchg
sahf
cli
aad
jecxz
add
test
int3
rolb
inc
sub
shlb
dec
pop
xor
inc
imul
dec
in
ret
mulb
pop
lds
xor
add
adc
mov
pop
lcall
js
xchg
aas
pusha
mov
pop
test
push
jb
jge
out
jmp
das
xchg
add
lret
jmp
sub
pop
in
neg
cmp
mov
scas
mov
push
and
jge
cld
jno
sub
out
call
inc
add
movsl
or
outsl
lcall
mov
mov
xchg
jg
dec
and
jmp
dec
jno
add
pop
inc
test
loopne
xchg
jb
arpl
inc
xchg
mov
pop
push
cmp
and
add
adc
cmp
daa
fcompl
mov
or
sti
fs
adc
push
pop
aad
sahf
xor
cmp
pusha
xchg
mov
pop
push
nop
push
mov
sbb
mov
mov
pop
cmp
cmp
adc
and
inc
out
sub
imul
push
mov
dec
mov
jns
xor
xchg
mov
lret
add
xlat
xchg
into
mov
push
filds
and
mov
sub
fcompl
inc
addb
adc
cmp
push
or
cmpsb
inc
dec
add
mov
lock
mov
pop
faddp
sbb
mov
mov
stos
fldlg2
popf
mov
cmp
xchg
and
fwait
dec
push
ret
cmp
xor
pop
and
test
sbb
out
mov
xlat
sti
les
out
jne
xchg
rcrl
and
push
cmc
add
jno
or
lret
sub
dec
mov
aaa
in
jbe
lcall
mov
xchg
test
in
sarl
je
and
push
add
jp
push
cmp
or
ret
add
clc
pop
call
hlt
ss
mov
push
int3
test
and
mov
fsubs
fbld
rcrb
add
pusha
sahf
faddl
cmpsl
fsincos
or
enter
cli
mov
mov
or
pop
test
movsl
lock
fmuls
mov
leave
aad
or
push
insl
aad
dec
sub
add
mov
lret
out
cmp
loop
std
jo
sahf
je
jns
lret
push
ss
in
sbb
enter
push
jecxz
mov
mov
add
fistpl
daa
ja
in
mov
leave
sub
scas
adc
nop
lret
lods
pop
lds
ljmp
cmpsb
sub
movsl
lods
add
fs
push
leave
mov
and
xchg
arpl
push
sahf
and
fnstenv
loope
xchg
lahf
dec
cmpsl
push
fcoms
aas
and
test
push
movsl
sub
jns
pop
mov
out
ret
lock
adcb
xor
mov
sub
in
push
lock
pop
or
mov
inc
sub
popa
outsb
mov
inc
cmp
dec
pusha
mov
xor
mov
scas
jns
jecxz
mov
ja
lret
sti
std
mulb
cmp
aas
in
adc
push
aaa
mov
les
sbb
sarb
xor
mov
dec
sub
xor
hlt
mov
cmp
mov
ljmp
fstpl
inc
add
xchg
es
je
sub
jp
push
fs
sub
pop
cwtl
xor
cli
nop
jne
jg
lret
movlps
pop
out
popa
push
xor
pop
ja
fstl
inc
xor
orb
js
addr16
out
cltd
int3
push
jmp
sbb
pop
cmp
lcall
aaa
jge
lods
dec
add
mov
ret
pop
pop
cmpsl
mov
pushl
outsb
fs
cmc
push
stc
in
fistpll
mov
mov
pop
mov
les
mov
leave
or
rcl
adc
xchg
dec
pop
mov
out
xor
push
outsl
pusha
ljmp
data16
dec
lahf
xchg
add
mov
inc
mov
jo
xor
js
or
mov
mov
or
testb
icebp
daa
pop
cmp
movsl
jns
and
and
aad
xor
imul
cmpl
adc
movsl
mov
mov
mov
sbb
jno
mov
pop
lods
adc
cld
test
and
outsl
call
out
aad
in
mov
std
imul
ja
jg
movsb
out
outsb
sub
cmc
jno
or
jecxz
sbb
cmp
cmp
dec
loope
idivb
lods
test
pop
decl
mov
add
imulb
sub
ja
es
call
push
into
sbb
mov
ret
xor
xchg
cli
and
clc
mov
out
dec
and
jmp
in
add
lock
add
jno
aas
mov
or
outsb
imul
cs
mov
sbbb
jbe
fs
mov
lret
xchg
mov
test
in
push
and
aam
mov
cltd
lods
push
lds
cmp
scas
mov
inc
sbb
or
and
inc
or
test
jns
adc
adc
or
push
dec
adc
mov
pop
insb
dec
mov
push
cmpsb
clc
lcall
int
repz
in
xor
cmp
out
fwait
push
xor
jo
into
xor
lock
xchg
push
dec
jp
enter
addr16
mov
push
jg
add
cmpsb
outsl
sahf
jg
push
push
fsubs
out
fisubrs
xor
sahf
mov
jge
inc
lret
shll
push
std
shlb
shll
jmp
stc
das
xchg
mov
push
or
in
ja
cwtl
add
les
pushf
scas
scas
dec
pop
inc
test
repz
mov
inc
fiadds
mov
mov
lret
inc
and
xor
scas
sbb
xor
sub
or
and
sbb
and
stc
pop
stos
mov
sub
sbb
push
out
push
ljmp
pop
or
arpl
or
cmp
cmc
xchg
jle
dec
sbb
psrad
mov
push
enter
int
jge
insl
add
decb
arpl
jae
fmulp
or
loopne
or
in
lahf
xor
ret
mov
mov
roll
mov
mov
and
adc
sub
cmove
movsb
xchg
add
adc
je
xchg
testb
pop
in
lahf
pushf
mov
fisttps
roll
rclb
scas
stos
lea
dec
mov
stc
pop
mov
add
jnp
out
movsl
add
adc
lods
int3
cltd
lahf
mov
pop
shrl
mov
mov
mov
or
cli
cmpsb
sub
loopne
shl
int
fistpl
cmp
movsl
lds
cmp
jnp
push
es
or
movsb
pop
std
push
les
enter
addl
jbe
adc
xchg
mov
dec
sbbb
ljmp
pop
sub
inc
mov
sbb
pop
aaa
jle
call
fstpt
scas
jecxz
out
push
jns
adc
xor
leave
xchg
popf
or
out
nop
pop
fisttpll
ret
arpl
orl
leave
adc
adc
outsb
icebp
jns
gs
das
rclb
push
js
cld
sbb
cmp
mov
arpl
call
xor
fistpl
sub
xchg
xchg
pushf
mov
sbb
ret
fmull
xchg
adc
push
popa
xchg
and
lds
dec
ljmp
sub
or
xor
mov
movb
inc
xorl
pop
dec
and
aaa
push
adcb
lods
test
gs
stos
sub
push
xchg
les
xor
cmpsb
mov
shll
sbb
pop
imul
pop
mov
push
adc
dec
xchg
aad
adc
push
pop
nop
sbb
icebp
xchg
sub
ror
aas
ret
jle
clc
iret
daa
mov
xchg
add
bound
dec
call
or
or
add
mov
movsb
das
cs
dec
in
call
dec
ljmp
sbb
jb
and
ret
mov
lcall
repz
pop
push
stos
movb
fprem1
mov
adc
bound
cmpsl
icebp
mov
imul
lahf
out
lods
add
cld
addr16
add
dec
pop
bound
sub
or
nop
in
aaa
cltd
jno
jg
cwtl
stos
dec
fwait
xchg
in
or
stos
cmpsb
cmp
ja
pop
mov
jnp
out
out
cltd
pop
ljmp
fdiv
subl
cld
cmp
cwtl
adc
insb
ret
mov
cmp
cmp
mov
dec
xchg
or
mov
mov
pop
sub
into
add
cli
add
jnp
dec
inc
mov
addr16
fidivs
std
call
cltd
call
add
jno
decl
push
mov
push
es
cli
xchg
mov
mov
jnp
int3
jmp
insl
push
jmp
fcompl
adc
out
pushf
cmp
sbb
call
and
and
fistps
jo
adc
dec
imul
mov
mov
inc
xor
sub
jae
lret
stos
cmp
mov
jnp
andb
lods
pop
js
pop
cs
std
dec
jo
setle
or
je
mov
hlt
push
mov
mov
or
push
outsl
notb
xchg
mov
mov
call
inc
sbb
out
int3
xor
inc
xchg
push
add
xchg
sarb
sub
pop
or
aam
add
clc
mov
fidivrl
das
mov
push
cmc
test
mov
cmp
and
aaa
xchg
inc
js
cmp
lcall
inc
aad
xor
cltd
dec
jmp
and
lret
mov
cli
push
mov
inc
mov
mov
and
leave
xchg
cli
fs
sbb
mov
add
pop
push
xor
loope
std
pop
dec
ljmp
bound
lods
cwtl
cmp
ret
stos
xchg
mov
jns
jmp
out
stc
cmc
jle
lahf
cmp
or
and
xlat
push
imul
jmp
dec
lods
xor
shll
adc
fwait
push
into
test
mov
mov
hlt
cwtl
loope
push
xor
adc
pop
mov
push
bnd
adc
xchg
xchg
ljmp
lock
inc
and
enter
sbb
lahf
std
lahf
mov
pushl
lea
mov
jecxz
jnp
dec
dec
push
outsl
ret
and
sub
add
aad
out
xchg
fsub
jmp
xor
xchg
fistl
jge
dec
rdmsr
lods
pusha
ds
mov
cmp
pop
pop
cmp
push
repnz
xchg
lds
push
pusha
pop
int3
adc
sti
outsl
imul
push
jmp
sub
push
movsb
or
into
arpl
ds
xchg
aam
dec
sub
pop
mov
dec
xor
mov
mov
push
lock
and
repz
ss
pop
add
mov
pop
push
sub
mov
dec
xor
jg
stos
gs
xor
cmpl
lea
test
insb
push
mov
add
xor
aaa
mov
xchg
xchg
data16
arpl
hlt
and
pop
hlt
inc
push
xchg
arpl
inc
xor
lods
jb
xor
mov
pop
jmp
jns
or
pop
sub
mov
mov
and
mov
pop
mov
hlt
or
or
lods
lahf
jb
mov
js
das
jg
mov
fsubrl
xchg
or
testl
lahf
cwtl
dec
push
push
in
mov
push
adc
dec
cmp
mov
pop
xchg
adc
orl
xchg
test
xor
sbb
adc
ja
mov
sbbl
bound
lret
push
inc
and
movsl
jl
or
add
cld
in
xchg
inc
pop
aam
mov
push
xor
or
mov
test
adc
add
and
cwtl
jg
ljmp
repnz
fs
stc
les
push
xchg
sti
sbb
loope
jns
jb
out
pop
into
rcr
lods
arpl
mov
js
pop
icebp
les
cli
insb
mov
cmp
pop
aas
mov
xor
shrb
icebp
xlat
pushl
cmp
pop
mov
mov
and
mov
ret
insb
lcallw
sub
add
add
sub
dec
mov
lret
push
jae
mov
pop
pop
push
inc
cwtl
cmp
shll
cltd
push
repnz
and
stos
or
shl
xor
incb
add
lcall
filds
lds
loop
or
popf
pusha
mov
mov
cmpsl
jmp
ljmp
ror
mov
dec
inc
jp
pop
jb
cmp
rclb
mov
dec
push
mov
shll
mov
aas
idivb
nop
les
enter
popa
adc
cmpsb
pushf
sbb
or
push
fstps
pop
call
sbb
lea
fwait
xchg
jle
push
mov
ret
in
add
and
punpcklwd
or
jne
cmpsl
jp
js
je
push
bound
icebp
test
lahf
repz
lea
pusha
add
jb
pop
arpl
xor
sarb
jo
sbb
loop
inc
mov
push
insb
js
cmpsl
mov
leave
int3
in
loop
or
call
sbb
jmp
jne,pn
in
mov
ss
push
data16
or
outsb
sarb
lret
rcrl
xor
out
xchg
es
inc
cmp
inc
mov
add
and
sbb
push
mov
mov
scas
into
pop
ds
movl
stos
in
leave
and
push
mov
call
cmpsl
jmp
jl
ljmp
sbb
dec
mov
test
xchg
fcomi
in
or
int
cld
adc
adc
out
sub
aad
popf
xor
ss
pushf
cmpsl
xor
mov
out
cmc
scas
arpl
xchg
sti
mov
xor
sahf
fadd
push
pop
inc
mov
mov
xlat
add
and
mov
lcall
mov
mov
mov
mov
enter
ss
push
addl
jb
pop
lds
cmc
add
ss
fldcw
mov
pop
iret
test
xchg
sub
mov
ja
and
out
insl
inc
inc
mov
pop
loope
aaa
jge
inc
insb
iret
mov
test
sub
mov
icebp
outsb
leave
ljmp
loope
pusha
test
jl
movsl
notl
bnd
adc
sub
sti
mov
inc
movsl
lods
mov
jns
sbb
insl
mov
mov
je
test
pop
xchg
mov
adc
mov
mov
iret
arpl
push
rorl
mov
inc
and
nop
adc
push
ret
sub
test
cwtl
out
or
les
test
push
sbb
xchg
subl
or
imul
out
jg
pop
adc
enter
lret
pop
mov
test
hlt
stos
shr
out
xlat
or
mov
js
inc
sub
mov
sbb
rcrb
scas
mov
mov
hlt
xchg
std
and
dec
aam
and
fsts
cmp
gs
out
xor
insb
fistl
fldenv
sbb
imul
and
lcall
inc
jbe
iret
in
mov
bound
mov
bound
inc
insl
mov
enter
mov
inc
mov
shll
out
fwait
shlb
jb
sbb
pop
adc
fnstenv
fimull
daa
subb
sub
sti
mov
pop
mov
adcl
mov
mov
mov
cmp
in
jle
das
xchg
jns
sbb
hlt
in
mov
out
fwait
mov
xor
mov
stos
xor
or
js
out
adcl
dec
xlat
insl
ljmp
fisubrl
xchg
fidivs
inc
push
mov
mov
jle
inc
jle
mov
je
mov
mov
push
lds
adc
or
out
fcmovne
aaa
or
sub
push
addb
push
adc
pusha
sub
mov
xor
push
mov
scas
pop
mov
and
fs
addr16
dec
jno
xlat
test
or
sbb
sub
hlt
cmp
mov
int
into
rorl
pop
lret
push
xor
dec
mov
cltd
jo
sbb
jae
test
add
aad
cltd
cmp
sub
jecxz
scas
stos
les
sarl
pop
mull
xlat
movsb
pop
and
mov
adcb
sbb
in
mov
insl
fs
sub
and
add
push
test
popa
push
jp
inc
jl
jbe
outsl
adc
sub
sahf
mov
test
fiaddl
out
ret
cmpsb
mov
mov
fstl
sbb
insl
inc
sbb
lock
vhsubps
push
adc
pop
jns
and
mov
lods
loopne
filds
iret
ljmp
mull
fdivr
pop
pop
xor
fisubl
popf
scas
cmp
xchg
or
ret
mov
mov
fs
adcl
inc
test
gs
into
lods
or
aam
shlb
outsb
cld
fistpll
push
and
push
rcll
mov
push
lods
push
daa
data16
popf
shll
and
dec
xchg
filds
std
stos
xchg
mov
adc
pop
adc
sarl
pop
lcall
je
jecxz
xor
inc
and
xorl
fldt
popf
pop
std
xchg
call
xor
ja
jecxz
in
mov
movsb
ret
lea
cmp
push
sbb
lds
sbb
ret
adc
mov
xor
js
fcompl
inc
pushf
mov
ds
lods
rcr
inc
fisubrs
dec
inc
push
lods
stc
inc
clc
mov
jb
push
sti
mov
or
lahf
xor
xchg
jno
push
or
std
inc
cmc
sti
movsl
and
lods
dec
jge
adcb
xor
addl
ud2
jo
inc
mov
scas
aaa
xor
mov
adc
push
cld
pop
mov
ljmp
inc
and
fidivrl
sbb
cmp
out
xor
cli
adcl
ja
jne
push
mov
mov
aaa
mov
xor
mov
jns
outsb
out
xchg
inc
sti
dec
sti
xor
inc
fmuls
and
jmp
lea
xor
mov
iret
sub
cmpsl
push
test
repnz
fistps
push
push
fisubrs
movsb
pop
lea
pop
sarw
inc
andl
jle
xchg
fmul
jle
in
sahf
lea
mov
popa
add
std
mov
into
xlat
insl
mov
sti
pop
dec
and
leave
daa
popa
dec
gs
push
clc
cs
inc
addr16
push
cmpsl
jno
scas
pop
push
pop
jae
dec
jns
jp
popf
pop
rcll
mov
or
ds
add
rorb
xor
adc
lret
test
je
add
ljmp
les
cmp
jne
and
inc
lods
jp
daa
pop
aaa
mov
sub
les
les
test
xor
mov
xchg
and
or
pop
push
bound
adc
xchg
sahf
push
push
bound
and
cmp
xchg
inc
cli
push
out
fcmovu
push
and
mov
imul
fs
mov
je
int3
mov
mov
push
mov
insl
pushf
mov
and
inc
sub
adc
and
xor
xor
lods
ljmp
add
aaa
aam
inc
mov
test
push
sbb
push
movsb
sub
testl
adc
les
jecxz
xchg
sbb
xchg
sbb
pushf
test
ljmp
or
roll
mov
pop
and
mov
fstps
loope
pop
insb
call
push
int
ljmp
inc
add
clc
jb
and
push
and
pop
hlt
test
or
cld
movl
xchg
shrl
lret
rorb
ja
leave
xchg
sahf
dec
jbe
xchg
jge
push
arpl
push
lea
mov
add
std
loopne
jnp
xchg
test
mov
movsl
not
sub
test
push
jl
loope
and
sub
les
hlt
adc
jo
mov
sub
xor
test
mov
clc
gs
aad
insb
negl
push
les
stc
outsl
add
test
test
stos
lret
outsl
jae
loope
mov
xor
mov
pop
iret
cltd
pop
add
pop
test
out
inc
ja
and
mov
shll
xor
stos
xlat
add
mov
mov
cmp
adc
fmul
and
clc
pop
jle
mov
jmp
cmp
inc
mov
lahf
hlt
rorb
dec
fs
jecxz
mov
roll
lock
sub
imul
cmp
leave
inc
pop
andl
ret
mov
sub
shll
pusha
pop
adc
ret
push
daa
fwait
mov
js
repnz
ret
mov
rcrb
push
sub
mov
jmp
pusha
fbld
inc
or
push
inc
xlat
into
mov
les
jnp
jg
mov
into
xor
push
loopne
cmc
inc
imull
inc
popa
stc
insl
ja
movsb
pop
idivl
jmp
cli
xchg
mov
les
dec
jmp
cltd
divb
jg
addr16
xor
xchg
jbe
inc
ds
iret
pop
mov
xchg
cltd
cmp
inc
rorl
scas
pop
mov
adc
scas
xchg
scas
adc
sub
jns
xchg
in
cmp
stc
mov
aas
jno
lea
lock
jae
sub
mov
dec
push
xchg
frstor
sbb
inc
xchg
ret
and
mov
iret
sub
bswap
dec
pop
insb
mov
adc
mov
aad
rcll
pop
iret
xor
add
mov
dec
sub
loope
test
xlat
inc
jg
mov
mov
addr16
int
dec
lret
fbld
cltd
movsb
sub
aam
push
or
cmp
mov
arpl
jle
jle
inc
dec
ret
rcl
cmpsl
shlb
dec
xchg
or
pusha
pop
jg
add
pushf
and
sahf
orb
enter
pop
push
cmp
lahf
adc
jecxz
mov
mov
repz
cmp
mov
mov
flds
mov
push
adc
sbb
and
adc
pop
push
cld
xchg
sbbl
or
pop
jle
add
mov
lods
dec
into
aaa
dec
cld
ja
jge
enter
adc
in
pop
push
leave
mov
aas
repnz
adc
inc
notb
sub
pop
cmp
xor
rol
push
cltd
ja
lcall
arpl
addr16
test
inc
jne
gs
out
movsl
sub
lcall
xchg
faddl
popl
pop
repz
pop
gs
pusha
dec
mov
xchg
jb
stc
or
ret
xchg
out
add
lea
dec
stos
fwait
aam
imul
repnz
rcrl
hlt
mov
cltd
or
sar
xchg
loop
mov
cmpsl
out
lods
repz
test
movsb
or
adcl
test
jbe
stos
inc
inc
insb
ret
jne
and
std
mov
jge
mov
sar
fidivrs
mov
push
cld
stc
and
popw
cli
xchg
out
fs
push
lods
mov
xchg
xlat
mov
pop
rcl
sbb
in
fdivl
outsb
xor
test
inc
push
mov
lret
mov
push
movsb
adc
cmp
jb
sbb
inc
sub
rcl
pop
jge
xchg
shrl
jbe
pop
jg
mov
movsl
pop
insl
andl
mov
fnsave
in
dec
out
call
jno
xor
pop
push
jp
sbb
jl
mov
mul
xchg
pop
sbb
das
lret
scas
cmp
xchg
or
add
push
std
int3
stos
stos
iret
ret
notb
nop
enter
enter
jecxz
arpl
je
ficomps
lock
mov
sahf
mov
xor
adc
test
ret
movsb
and
sahf
mov
leave
mov
cwtl
popl
dec
int3
stc
xor
and
sbb
data16
push
enter
lods
xor
dec
sub
stos
rclb
push
cld
dec
clc
mov
cltd
icebp
pop
out
lds
dec
enter
cmp
testb
add
jno
jae
jae
imul
adc
push
test
adc
jmp
stos
mov
addr16
jne
dec
or
and
jp
mov
into
xlat
test
adc
gs
jae
adc
add
pop
mov
sarb
mov
dec
sub
pushf
jl
fucom
rcr
rclb
sub
cmpsl
xchg
mov
sahf
add
out
jae
out
jo
inc
shll
andb
jp
xchg
movsl
loope
or
mov
push
insb
or
sub
adc
xchg
push
das
cmpsl
cld
cmp
mov
outsb
arpl
cwtl
mov
das
gs
aaa
hlt
sub
dec
jnp
pop
clc
sbb
mov
daa
dec
sbb
jns
nop
out
jno
adc
aas
xchg
inc
mov
jns
repnz
and
xchg
inc
and
sub
cmp
or
int
cwtl
pop
push
fadd
stc
xchg
or
dec
xor
repz
push
cltd
loop
daa
sub
sub
pushf
loop
inc
andb
sbb
in
add
push
fwait
add
dec
pop
cli
orb
mov
inc
pop
test
ret
movsl
popf
adc
jb
cs
data16
fiadds
inc
mov
loope
ret
jecxz
fmulp
in
jge,pt
shlb
gs
and
inc
mov
popl
adc
inc
jns
push
xchg
xor
popa
add
test
ss
data16
ljmp
out
sbb
and
xor
insl
jmp
mov
xor
ja
mov
leave
adc
cmpsl
data16
pop
mov
fistpl
sub
cmp
mov
pop
or
push
pop
or
pop
lcall
iret
xor
cmp
clc
shr
popf
adc
cmp
clc
sub
repnz
jae
and
mov
add
mov
push
in
in
nop
or
push
scas
push
mov
iret
mov
push
js
negl
lahf
inc
push
inc
xchg
cmp
nop
movsb
mov
pop
push
or
add
xchg
push
jns
insl
xchg
xchg
and
dec
mov
das
fstpl
dec
mov
std
pop
jmp
and
ss
lret
fdivs
and
rcrl
filds
xorl
sub
lods
fisttpll
mov
clc
cmpsl
sub
in
push
jae
xor
pop
mov
sbb
leave
mov
jb
push
shr
cmp
mov
fstl
jg
rcrl
fistpl
cmpsb
pop
mov
addr16
flds
xor
dec
das
mov
mov
cmp
push
push
cmp
mov
xchg
int3
daa
int3
loopne
xchg
xor
popa
subb
mov
sub
push
cltd
push
adc
adc
dec
call
fisttps
jl
xor
mov
cld
mov
xor
add
xor
xchg
insl
fs
repnz
jbe
mov
pop
fcompl
pop
xchg
mov
repz
cmp
mov
rcll
jl
popa
push
sub
mov
out
aas
adc
dec
push
adc
repnz
or
xorb
xchg
cmc
lahf
cmp
add
or
pop
add
add
mov
pop
insl
push
adc
xor
movsl
and
mov
adc
pop
shll
mov
jns
and
cld
subl
mov
cli
jle
or
aas
movsb
int
jbe
cmp
aad
pop
std
jge
das
adc
sub
mov
cs
std
add
ret
call
testl
dec
adc
rep
push
push
and
addb
in
out
adc
mov
pop
repz
ljmp
jmp
push
popf
lods
and
rcrl
and
fwait
roll
mov
out
int3
adc
pushf
arpl
int
xchg
clc
in
xchg
loopne
lahf
ss
push
js
testb
nop
dec
nop
cmc
mov
cmpl
or
and
push
outsb
popf
clc
push
push
js
or
pushf
shll
scas
ja
repnz
cmp
adc
mov
imul
cmp
mov
das
xchg
inc
push
ja
jb
das
push
mov
gs
nop
mov
mov
jae
das
adc
ficomps
mov
cmp
dec
ret
xchg
cmp
test
out
test
rolb
movsb
jae
je
enter
xor
popf
int3
ss
mov
mov
mov
cltd
iret
dec
xor
scas
adc
mov
in
add
sarb
out
arpl
cli
pop
into
adc
xchg
cmpsl
pop
lds
js
subb
lret
ret
lret
mov
push
popa
mov
push
in
pop
sbb
iret
push
mov
sub
mov
push
mov
imul
lods
nop
mov
mov
jg
adcb
ficompl
loop
lret
fwait
and
out
dec
adc
test
out
pop
push
clc
cwtl
mov
es
cli
sbb
inc
daa
add
jecxz
sub
in
insl
mov
insb
or
jo
jne
add
inc
pop
cmpsb
pop
and
rcr
lret
or
push
dec
into
lock
jge
stos
daa
jo
push
cmp
std
rclb
lahf
cmpsl
fs
jae
outsb
jp
mov
in
sbb
outsl
cld
adc
push
inc
sbb
pop
int
mov
mov
cmpsb
clc
jmp
lret
sahf
icebp
sbb
sub
enter
in
pop
test
mov
clc
jae
mov
cld
mov
scas
pop
dec
stc
add
adc
push
andb
sbb
mov
pop
int
icebp
mov
sub
cld
lcall
ss
push
loopne
test
push
dec
mov
negb
fcmovu
dec
lret
push
cmp
lahf
imul
jne
add
out
mov
add
ljmp
scas
in
mov
cltd
imul
and
add
jmp
mov
or
xlat
pop
cmp
mov
shrl
push
add
les
mov
push
cli
outsl
xchg
gs
xor
jb
inc
fsts
scas
rolb
pop
lret
jmp
lock
mov
mov
bound
repz
push
dec
fdivrs
dec
sub
mov
and
fmuls
push
xor
pop
xlat
mov
xchg
insb
sub
push
sbb
sbb
push
add
or
sub
sbb
insl
sbb
add
in
adc
or
mov
jp
inc
xor
std
mov
mov
or
sub
mov
cmp
dec
jp
nop
icebp
aad
lahf
scas
popf
inc
cwtl
adc
test
and
inc
int3
cwtl
adc
sub
xchg
fdivrs
scas
dec
push
jb
sahf
mov
imul
ret
xlat
sub
rclb
mov
dec
add
cmp
in
dec
outsb
lods
clts
fcmovb
xor
cmpsb
arpl
or
leave
clc
and
insl
mov
je
sarl
xchg
push
inc
push
cmp
jmp
and
jle
xchg
in
cmp
mov
sub
xchg
movsb
push
add
shll
les
nop
or
in
out
pop
mov
add
dec
jo
mov
pop
movsb
loop
xor
in
movsb
mov
dec
push
testb
in
ret
test
sub
shlb
mov
sbbb
out
and
jg
sub
jmp
xor
pop
adc
pushf
leave
push
lret
mov
push
mov
sub
xor
mov
cld
leave
imulb
xor
sbb
push
sbb
xchg
into
jmp
add
cmpsb
roll
mov
xchg
jbe
or
xor
in
aad
in
out
test
rclb
sub
outsb
add
or
adc
mov
insb
pop
rcrl
push
aad
jne
xchg
sub
xchg
dec
sub
cmp
mov
add
push
shrb
mov
xor
arpl
add
inc
and
loope
inc
in
mov
mov
popa
push
scas
les
jmp
mov
rcll
fwait
dec
es
xchg
jno
stc
aas
adc
orl
mov
cmp
lret
cmp
pop
scas
or
jnp
mov
sbb
sub
hlt
pop
insb
out
mov
sti
call
idiv
xlat
inc
fisttpll
or
mov
push
push
and
sub
movsb
pop
nop
mov
jnp
push
cmp
imul
dec
xchg
lahf
filds
fdivrl
mull
aad
pextrw
xor
cld
ficomps
fstpl
mov
adc
sbb
mov
lahf
and
mov
test
or
testb
or
jmp
push
xor
lea
jne
jns
fnsave
clc
out
xor
in
or
js
push
mov
dec
mov
push
pop
pushf
xorb
out
push
cmpsb
jmp
clc
jle
adc
fmull
rcrb
ds
fnstenv
fdivp
fwait
lea
cs
pop
sar
es
mov
push
cmpsb
dec
push
xlat
add
loop
lods
push
std
mov
and
jb
cli
ja
adcl
mov
or
test
or
iret
xchg
loopne
inc
daa
push
addr16
xchg
clc
mov
leave
arpl
les
lcall
pop
push
push
and
lcall
adc
cwtl
push
dec
or
daa
leave
fimull
mov
mov
mov
movsb
push
jge
mov
xor
leave
mov
and
jae
inc
mov
push
or
mov
mov
mov
cmc
int3
and
adc
sti
xchg
mov
mov
dec
cwtl
fcomps
adc
sbb
lahf
rcll
adc
and
jl
mov
mov
imul
xor
or
adc
subl
jo
in
cld
and
ret
xor
sub
push
sbb
call
pop
mov
jecxz
mov
out
jnp
scas
fcoms
cmc
in
or
pop
jecxz
mov
fldcw
sub
jl
xchg
lock
jno
cmp
adc
mov
and
and
pop
push
sub
add
push
xchg
mov
add
mov
lods
mov
clc
mov
xchg
adc
xor
mov
ds
aaa
push
fstps
push
imul
xchg
xlat
pop
js
aas
test
jecxz
dec
add
push
fstps
jmp
inc
fs
leave
mov
inc
idivl
lea
xchg
adc
dec
fidivl
dec
mov
jp
mov
in
jo
and
daa
cmp
sahf
add
pop
add
or
bound
test
xor
movl
push
rclb
xchg
loop
mov
mov
push
fmul
stos
lret
std
pop
insb
inc
xchg
shrl
cmp
mov
imul
dec
rorl
jns
add
pushf
fisubl
aas
mov
dec
pop
int3
add
mov
and
stc
push
xor
jl
fistl
subb
sub
lret
dec
rolb
push
jecxz
imul
and
scas
int3
add
push
add
push
pop
adc
add
lcall
pop
or
fbld
or
dec
out
mov
inc
lods
outsl
mov
jo
adc
movsl
adc
out
lods
inc
sub
xor
sbb
ljmp
call
mov
movb
lret
lea
sbb
push
push
xchg
aad
dec
xor
movsb
gs
out
mov
subl
cwtl
scas
out
adc
mov
lret
adc
lret
push
jbe
or
mov
push
mov
pop
je
jp
jno
cmp
cmc
pop
xchg
enter
lea
arpl
mov
daa
lock
and
mov
adc
xchg
iret
fucomp
leave
cmp
xor
fdivs
or
scas
push
test
nop
pop
jmp
fwait
jb
mov
lods
aad
cmp
mov
bound
mov
mov
fimuls
sbb
sarl
sbb
jecxz
dec
std
pop
push
aam
push
es
scas
xchg
movsl
and
decb
dec
jg
pop
mov
add
push
std
add
and
jnp
inc
sub
push
push
sub
mov
test
dec
jbe
jb
jne
out
lock
pop
repnz
fisubs
mov
jmp
cmpsb
mov
call
iret
adc
fsubl
adcl
inc
call
inc
les
mov
dec
pop
cmc
adc
ror
outsl
loop
imulb
mov
rorl
jmp
faddl
pop
test
cmc
push
and
fdivrl
js
in
lock
into
or
cmp
out
jo
pop
iret
ret
bound
jmp
popa
scas
lds
jb
mov
push
xchg
lds
ljmp
lods
imul
cmpsl
into
scas
or
lock
xor
jl
or
mov
sahf
mov
in
push
push
dec
pop
in
xchg
cmpsb
push
push
mov
or
pop
cltd
pushf
orl
jbe
and
adc
test
pop
lret
jo
adc
jae
ja
idiv
daa
iret
fistps
dec
sub
or
movsl
xorb
jecxz
dec
mov
jbe
imul
fcmovnu
ficompl
ret
push
pop
sub
outsb
jb
push
ljmp
cld
icebp
pop
rcrb
fcmovnu
jo
pop
sub
add
fisubs
pop
cs
and
lds
mov
rclb
fwait
dec
xor
sbb
adc
or
cmp
rcrl
std
outsl
cmp
xchg
aam
xchg
or
movsl
cmp
add
xlat
inc
and
sub
cmp
xchg
imull
jb
sub
push
ret
xchg
addb
mov
inc
cmp
mov
mov
into
ret
xor
jp
sahf
xchg
clc
cmp
das
inc
or
xchg
push
scas
jmp
mull
mov
sbb
mov
enter
push
and
sub
add
jb
or
jmp
xor
clc
aam
je
sub
jnp
or
xor
enter
xor
cmpsb
add
mov
std
xchg
dec
mov
push
in
jo
test
daa
in
xor
mov
push
jl
cltd
jecxz
cli
dec
movsl
sbb
mov
shrb
out
cmpsb
pop
sbb
cmpsb
pop
or
cmp
adc
adc
push
mov
scas
mov
ja
adc
dec
adc
test
xchg
jl
aam
mov
jne
jno
ficomps
add
push
in
loop
les
add
or
mov
rcrb
dec
popa
fwait
outsb
xlat
popa
idivb
sbb
xchg
mov
xchg
mov
dec
pop
sbb
sarb
lcall
push
lods
insl
popw
mov
imul
mov
je
fs
pop
push
fisttpll
test
shrd
push
adc
mov
push
pusha
fsubp
push
sub
or
rcl
or
popl
and
pushf
les
pop
jg
mov
call
movntps
int3
leave
lret
mov
sub
cmpsb
sub
cmp
mov
ljmp
xor
call
nop
mov
sub
jmp
scas
xlat
vmovapd
lds
enter
adc
pop
addl
pop
mov
sbb
jl
std
jg
mov
jnp
dec
icebp
aad
mov
loopne
cmp
rorl
xchg
pop
loope
mov
int3
mulb
and
jno
in
pop
xchg
fsubrs
and
das
icebp
pop
loopne
arpl
pop
sub
sbb
mov
imul
dec
xchg
cmpsl
addr16
pop
dec
sbb
sub
sahf
lret
rcl
lock
lea
es
xchg
test
pop
ja
ss
leave
lahf
sti
inc
lods
add
pop
in
add
inc
lds
sbb
sbb
orl
bound
lahf
sub
mov
and
rcrl
mov
repnz
jbe
cld
mov
lea
je
or
xor
loope
cmp
sbb
add
or
scas
fdivp
xor
inc
out
bound
push
pop
pop
fdivl
or
push
jbe
inc
int3
jmpw
xor
xorl
push
sbb
pop
addl
cmp
add
push
add
in
mov
push
in
inc
aaa
mov
test
mov
lret
and
mov
sbb
aad
test
ret
pop
jo
mov
mov
adc
dec
push
mov
mov
sub
mov
lods
sub
imul
jmp
rclb
dec
ficoms
inc
fisubrs
mulb
and
mov
xchg
in
divl
or
lock
mov
and
fadd
sub
stc
jbe
je
sub
jg
cmp
inc
add
mov
fimuls
inc
add
addr16
inc
adc
mov
or
imul
out
leave
mov
movsl
cwtl
sbb
je
push
mov
push
xor
daa
pop
lds
jecxz
sarl
shll
or
out
mov
jo
cs
sbb
or
cmp
pop
push
sub
pop
or
sbb
xchg
sahf
sub
pusha
mov
mov
sub
mov
andl
xchg
xchg
dec
xchg
clc
inc
lods
test
mov
mov
lret
jecxz
sub
loop
adc
push
cmc
jno
sbb
pop
dec
xor
mov
sub
mov
xchg
pop
call
out
mov
xlat
rclb
inc
aaa
xor
dec
scas
loope
mov
cli
inc
or
pop
clc
es
rorb
or
cmc
cmp
mov
jnp
adc
pop
ret
loopne
dec
adc
add
int3
outsl
sub
mov
ja
data16
jnp
mov
mov
aam
push
iret
aaa
push
push
loopne
fnstsw
divl
aam
push
cmc
cld
iret
test
add
imulb
lods
bound
xchg
xor
pop
pop
mov
mov
mov
es
inc
cmc
xlat
dec
addr16
dec
pop
stc
fimuls
test
mov
je
xor
jg
mov
flds
pop
cmp
mov
mov
nop
inc
inc
test
lret
dec
data16
push
dec
insb
cmp
lea
les
pop
mov
inc
sub
cmpsl
lcall
mov
hlt
scas
pop
add
push
jmp
pop
jnp
push
lret
sbb
rorb
popf
pop
cli
mov
sbb
cmp
in
push
in
pop
xchg
xor
push
data16
ret
fdiv
out
mov
jecxz
inc
in
test
movsb
repnz
mov
popf
loopne
ljmp
and
xchg
xor
xor
insl
pop
cli
push
xchg
fs
and
aad
push
cmpsl
adc
test
push
cld
jbe
xchg
test
sub
out
stc
xor
pop
dec
jle
cmp
xor
ja
dec
inc
iret
xor
adc
icebp
out
negb
lods
or
xchg
fwait
insb
loop
dec
fldt
push
push
std
int3
out
bound
push
push
push
adc
nop
loope
lods
sahf
sbb
insl
lahf
iret
mov
mov
xor
dec
sbb
test
pop
das
imul
stc
or
out
int3
insl
mov
fistps
loopne
je
add
or
pushf
sub
js
jge
jmp
jno
dec
sub
rolb
daa
es
cmp
shlb
test
shlb
mov
movsl
mov
lret
jle
and
lret
loopne
xor
std
mov
mov
mov
hlt
pop
popf
loope
xchg
mov
stos
sub
adc
inc
pop
cmp
add
ret
xor
pop
jmp
inc
and
int
jne
add
pop
fadds
pop
push
mov
mov
ret
dec
adc
sbb
mov
xchg
xor
cmpsl
fs
lods
bound
sub
jle
sub
rclb
push
stos
mov
mov
xchg
sbb
jmp
in
lods
jmp
dec
imul
dec
and
add
add
pop
add
outsb
inc
in
test
xchg
in
mov
std
cmp
cmpsb
adc
cli
data16
aas
repnz
mov
fsubrs
sub
sbbb
int
outsl
jmp
cmp
xlat
lods
push
lods
cmp
cmp
je
aam
push
or
in
daa
cmc
dec
sbb
jle
xor
test
loop
movsl
xchg
add
jne
cld
out
pop
out
dec
jecxz
pmaddwd
pushf
mov
inc
lcall
xchg
dec
into
add
inc
add
xor
mov
push
cmp
jae
xchg
mov
jle
mov
stc
mov
sub
dec
ret
test
ss
jo
xor
xchg
ljmp
jecxz
or
dec
loopne
icebp
add
ss
adc
push
stos
cs
mov
dec
pop
and
jle
lods
in
jmp
scas
hlt
pop
jne
sbb
test
mov
inc
cmp
bound
inc
jp
popa
pop
or
dec
test
dec
sub
xor
push
out
test
in
push
loopne
xor
xchg
movsl
ret
ljmp
jge
cmc
out
lea
sahf
mov
call
mov
in
int
repz
add
psrlq
repnz
add
arpl
hlt
repz
pop
mov
stos
mov
mov
mov
push
lret
in
mov
das
xor
mov
js
orl
sbb
xchg
fisttps
pop
mov
pop
in
push
imul
div
push
cmpsb
mov
lods
cmc
xor
pusha
push
mov
outsb
xor
mov
xor
cs
mov
xchg
mov
leave
aam
test
incl
push
movsb
jbe
adc
jno
pop
clc
gs
xchg
jl
mov
push
mov
xorb
dec
add
call
jno
jmp
xchg
outsl
xor
mov
cld
andb
popa
mov
repz
pop
cmpsb
lds
jmp
outsb
fucomp
xchg
loop
push
pop
sbb
repz
jo
cmp
mov
aaa
cmc
push
pop
jne
pop
jecxz
idiv
mov
adc
rcrb
ret
jg
push
cmp
divl
ss
mov
cmp
add
jnp
out
clc
xchg
sbb
test
in
cwtl
subb
push
out
pop
ficomps
push
sbb
stc
mov
lods
test
fsubl
cmp
adc
adcb
xchg
mov
mov
mov
cmpsb
inc
push
inc
fdivrl
out
inc
mov
jb
adc
in
adc
daa
sub
dec
in
addr16
dec
sbb
aam
mov
in
ljmp
mov
push
lods
in
mov
jbe
in
push
dec
enter
mov
mov
and
cld
ret
in
and
cmp
sbb
pop
pmaxsw
cmc
cli
shr
mov
loop
inc
push
stc
test
xchg
mov
out
aam
and
mov
xor
jecxz
adc
aas
and
dec
add
in
insb
cmpsl
add
sub
add
ljmp
orl
mov
jecxz
sub
dec
into
mov
xchg
mov
imulb
pop
add
cli
jne
cmpsb
insb
jle
int3
xor
pop
loop
sarb
in
adc
lret
xor
add
or
fs
inc
sbb
aam
scas
xor
mov
mov
cld
mov
lds
dec
ret
xchg
jle
jg
mov
push
cltd
cmp
in
mov
xchg
and
incl
rolb
adc
push
add
lret
push
pop
push
mov
mov
out
das
ret
out
mov
xchg
movsb
jge
jg
insb
jmp
cmp
cmp
leave
fnsave
enter
push
test
inc
insb
out
addr16
rcr
das
jno
leave
pop
pusha
test
fistpl
inc
jp
fsubrl
jno
test
sbb
mov
outsb
jo
xor
divl
add
mov
mov
and
pop
sbb
mov
mov
mov
call
test
or
in
cmp
sarl
mov
push
ja
sti
ljmp
out
sub
jbe
xchg
pop
mov
in
mov
sub
daa
popa
repnz
push
orl
shl
xchg
jl
mov
pop
mov
adc
inc
jg
lds
jecxz
jl
rcr
inc
cli
fs
movsb
test
stos
push
lea
adc
adc
mov
jne
sub
lea
adc
dec
xor
loop
repnz
test
pushf
mov
dec
das
mov
das
ret
push
xor
jmp
xchg
cmp
dec
adc
int
mov
cwtl
lock
adc
loop
sbb
xchg
enter
loope
mov
push
lea
hlt
movsl
xchg
mov
in
aad
jno
dec
mov
cmc
aam
mov
lret
ret
jle
movsb
shrl
jg
ljmp
das
push
mov
popa
daa
stos
xchg
pop
in
daa
repz
std
decl
sbb
mov
pop
ret
fcom
aaa
fwait
fucomi
mov
inc
cmpsb
jns
add
dec
bound
scas
xchg
fsubl
imulb
daa
xor
testb
out
das
mov
pop
push
lahf
scas
repz
out
inc
insb
mov
ret
aam
insb
mov
add
mov
or
xchg
sbb
mov
cmp
arpl
xor
mov
jnp
inc
subl
mov
mov
cmp
mov
mov
jo
pop
into
pushf
ret
mov
xchg
adc
dec
mov
pop
and
inc
xor
imul
mov
sub
add
lods
mov
pop
sbb
jecxz
jno
or
jle
jnp
mulb
pop
jns
lret
push
aam
mov
dec
push
adc
push
fs
dec
fstpt
and
pusha
sbb
mov
push
ret
int3
pop
and
movsb
jnp
and
jle
adc
sti
mov
jne
inc
adc
cli
insl
test
sbbb
sahf
shll
imul
daa
andl
cmp
out
cli
sub
add
pusha
negb
fwait
cmp
subl
inc
repz
push
in
pop
sub
fidivs
cmc
push
sub
add
push
ds
jg
std
fcompl
fwait
mov
out
daa
int
test
dec
mov
mov
jno
inc
inc
push
push
mov
iret
inc
cmpsb
cltd
or
aaa
cmp
xchg
cmp
fadds
cli
rorb
mov
in
or
add
fidivl
add
cmp
orb
mov
mov
adc
cmp
dec
adc
outsb
jp
cmpsb
pop
cmp
ss
outsl
mov
sarl
enter
add
int3
mov
xor
pop
push
xor
cld
pusha
cmpsl
shlb
insl
inc
stc
mov
lods
insb
cmovl
ret
pop
dec
out
mov
cmc
xlat
pop
popa
xor
jno
fcmovnb
inc
dec
in
test
push
lock
push
push
inc
push
mov
pop
test
sub
into
out
nop
imul
mov
cwtl
das
jge
jo
fiaddl
sbb
mov
popa
mov
inc
dec
and
sbb
xor
jge
fldl
cmp
and
insb
and
adcb
pop
xchg
cltd
popa
int
hlt
test
leave
out
and
test
movsl
cmp
test
aaa
in
lret
pop
jnp
scas
jmp
scas
sbb
shll
bound
inc
imulb
xchg
addl
push
jge
aad
rolb
xor
mov
and
std
out
repnz
inc
mov
push
cwtl
pushf
movsb
rol
lds
add
mov
popa
pop
push
arpl
cs
fadd
in
out
mov
add
xchg
insl
xchg
cmp
pop
dec
or
jbe
mov
mov
inc
aad
push
rcl
mov
or
out
loop
rcrl
mov
pop
xchg
push
push
xchg
nop
add
insl
mov
sahf
dec
fisubl
arpl
cmp
loop
add
mov
mov
mov
sbb
xchg
add
push
out
add
push
inc
idivb
and
mov
aam
pop
addr16
jge
dec
mov
testb
bound
inc
mov
das
rolb
imul
dec
xlat
into
std
ljmp
movsb
or
daa
cli
and
jae
jae
ret
jecxz
ret
call
in
mov
push
fcmovne
in
popa
mov
rolb
mov
sti
adc
loope
xchg
jl
push
dec
xor
or
mov
pop
rclb
mov
notb
lods
not
outsb
loope
add
pop
mov
pop
lret
es
aam
icebp
shlb
fucomi
jp
mov
mov
or
gs
orb
aad
out
out
sahf
sub
js
mov
dec
adc
cmp
mov
inc
test
lds
sbb
into
lret
mov
xchg
or
loop
mov
in
imul
loopne
mov
jae
repz
pop
and
lcall
out
movsl
xlat
gs
pop
adc
arpl
mov
adc
push
jo
fwait
sbb
jl
mov
cmp
adc
mov
pop
push
sbb
jmp
addl
lds
in
mov
cwtl
sbb
cmp
es
push
mov
popf
lea
es
adc
xchg
inc
leave
xchg
xor
add
push
loop
mov
lods
dec
jle
mov
stos
std
push
fadd
mov
add
sub
sbb
loopne
lea
inc
push
ja
outsb
sbb
sti
aad
stos
dec
jecxz
rcr
or
sbb
or
cmc
into
fwait
jmp
rorb
fisttpl
pushf
stc
xchg
int
sub
daa
and
push
test
dec
in
xor
mov
sub
jp
mov
mov
cmpsb
add
and
lahf
addr16
lods
sbb
addb
mov
xchg
or
add
jae
ja
jmp
fsubr
xor
xchg
adc
test
xchg
cld
sub
movsb
insb
cmpsl
mov
mov
icebp
mov
jge
lret
pop
add
loop
outsb
cwtl
mov
fs
out
add
rcr
gs
popf
jg
dec
ds
cmp
adc
hlt
idivb
push
lods
mov
rcl
sub
fstl
in
loope
ret
xchg
add
test
je
imul
das
mov
mov
scas
fwait
dec
push
xchg
cmc
in
imul
sub
ljmp
ret
or
pop
push
mov
jnp
inc
jle
jo
mul
int3
outsl
inc
mov
faddl
adc
cmp
mov
adc
pop
outsl
jbe
inc
ret
or
push
cwtl
outsl
dec
mov
stos
cmp
adcb
fisubrl
dec
pushf
cld
mov
int
dec
pop
jbe
cmpb
rclb
push
popf
jnp
pop
jg
pop
sub
ljmp
mov
sahf
push
mov
jno
jo
or
iret
outsb
pop
mov
aam
test
dec
xor
das
mov
jnp
and
mov
inc
aad
dec
cmp
push
mov
mov
lea
pop
xor
cmpsl
cmc
repz
inc
and
mov
inc
xchg
sbb
dec
cs
cwtl
stos
icebp
mov
dec
mov
jge
ds
cmpsl
mov
ja
fistps
cmpsb
xchg
aaa
enter
inc
inc
in
add
inc
in
aad
popa
dec
cmpsb
adcl
adc
rcrl
dec
pop
push
mov
jge
int
lods
xor
jg
push
in
pushf
test
lods
popf
cld
sbb
incl
mov
push
or
pop
jg
stos
icebp
jle
sub
bound
adc
ja
mov
and
push
and
pop
stos
enter
push
data16
mov
mov
out
cli
cld
out
lods
mov
stc
js
lods
aad
fiadds
dec
xchg
pop
test
ror
inc
mov
fwait
jge
mov
pop
xchg
xchg
out
js
pop
cs
pop
push
in
push
popa
loope
clc
loope
enter
adc
mov
rorb
xor
lahf
aad
scas
adc
test
push
mov
pop
sbb
adc
xchg
lret
mov
fnstsw
pop
and
xchg
test
cmp
cs
jb
mov
mov
cmp
xchg
sub
bound
movsb
mov
lods
es
loope
bound
outsb
inc
fmulp
mov
lods
jg
jb
scas
mov
mov
pop
ja
dec
mov
mov
ss
js
and
js
decb
adc
lret
fimuls
movsl
movsb
and
repz
out
sub
lahf
pusha
xor
pop
outsl
es
andl
push
enter
jmp
push
mov
cmp
enter
pop
mov
inc
rorb
mov
sbb
push
or
add
outsl
and
cli
arpl
adc
ffreep
fcomip
rcrl
lds
jbe
adc
dec
fnstcw
or
lea
pop
insl
dec
pop
xchg
test
aas
xor
add
xlat
mov
and
mov
push
mov
inc
ljmp
mov
leave
mov
dec
jl
pop
dec
push
add
xchg
add
mov
mov
scas
dec
aam
sub
or
jmp
jl
repz
push
mov
xchg
push
lahf
jge
bound
andb
aam
jns
into
loope
in
in
inc
xchg
jge
iret
jg
andb
jge
add
pop
sub
dec
pop
sbb
out
loopne
and
jp
pop
hlt
shlb
scas
mov
sarb
movsl
or
rcrl
inc
mov
mov
xchg
lods
and
stos
int3
add
sysexit
cmp
or
xchg
sub
jecxz
mov
push
dec
movsb
or
mov
jl
enter
pushf
jnp
jmp
mov
lods
pop
sub
jp
ss
xlat
push
insb
mov
stos
fldl2e
pop
and
mov
fcmovu
xchg
push
xchg
jo
xchg
cmp
mov
mov
sti
lods
adc
sub
std
push
outsl
jle
in
lahf
jns
push
add
testb
add
inc
push
scas
push
sbb
mov
das
outsb
fistps
scas
mov
sbb
adc
les
mov
adcb
add
xchg
pop
push
or
arpl
das
jecxz
pop
jecxz
into
dec
xchg
out
subl
out
sbb
insl
jb
bound
mov
stos
insb
sbb
scas
mov
inc
popa
xlat
mov
sbb
test
loope
mov
inc
loop
es
ret
stos
sub
pop
inc
psllq
adc
sub
jmp
and
in
cmpl
rorl
jp
sub
push
xor
outsl
pop
inc
xor
push
addb
cmp
add
push
inc
loopne
sbb
mov
jmp
or
fwait
loope
test
and
jg
push
cmp
test
mov
or
sbb
cmpb
jge
lret
fnstenv
dec
jl
popa
push
nop
mov
js
or
insl
mov
nop
mov
cltd
dec
daa
or
and
jae
cs
ret
test
add
or
add
arpl
inc
sub
pop
push
push
push
xchg
nop
scas
jbe
jge
ret
hlt
divps
mov
push
mov
cmp
add
dec
cmp
mov
out
mov
hlt
mov
jg
dec
insb
outsb
out
cmpsb
xchg
scas
lods
aas
bound
cmpsb
adc
add
add
jne
aad
inc
aam
sbb
mov
or
addr16
add
shrb
inc
jmp
cld
xor
mov
iret
lods
xchg
das
dec
mov
lcall
sub
lcall
sbb
test
xchg
sbb
add
xchg
pusha
and
lret
xchg
push
enter
jp
sub
add
jb
push
ds
repnz
icebp
repz
std
out
lea
pop
loope
insl
xor
push
cmp
nop
mov
iret
fsubp
movsb
aaa
pushf
push
dec
cmc
insb
sbb
xor
sub
ret
test
dec
jl
int
lea
into
out
fsubrs
test
aam
sarb
or
mov
add
sub
xorl
xchg
mov
movsb
in
cld
xchg
in
and
mov
in
xor
int3
inc
rcl
dec
int3
bound
push
repz
add
adc
repz
jp
mulb
cmp
out
mov
pop
imul
jnp
add
jle
mov
nop
out
sub
xchg
mov
and
cmp
mov
xchg
mov
pop
popl
rcl
hlt
call
or
addr16
jne
mov
inc
loope
and
lds
jge
inc
pop
and
pop
xchg
cld
lcall
ss
xchg
sbb
pop
or
loop
mov
mov
daa
in
pusha
in
inc
push
mov
daa
and
pop
fildll
sub
sub
inc
inc
call
jnp
sub
fldenv
lret
test
xor
out
xor
lock
loop
jae
rclb
inc
iret
call
es
mov
jmp
fisttps
and
mov
sahf
push
pop
adc
ret
mov
sub
gs
pop
dec
push
ret
mulb
outsl
imul
and
fsubp
cmpsb
addr16
outsb
pop
subl
or
jl
mov
pop
int3
and
cwtl
dec
sbb
jmp
sarb
dec
mov
test
pop
sub
xchg
lock
scas
cmpsl
dec
sbb
ret
jg
insl
ja
and
mov
or
das
daa
adc
push
mov
jmp
add
fstps
mov
out
fs
cmp
into
mov
push
popa
loopne
ret
imul
aaa
fdivs
push
ja
pop
iret
lock
ret
out
sub
test
jne
dec
mov
mov
mov
roll
add
mov
pop
inc
xchg
negb
jge
lret
add
pop
movsl
pusha
mov
scas
sbbb
jmp
mov
jle
jno
rcll
push
push
scas
out
ja
mov
mov
or
xor
pushf
daa
hlt
idivl
std
test
dec
pop
xchg
push
add
cmp
ret
hlt
cltd
out
dec
iret
nop
popf
je
xor
les
and
in
inc
in
ss
and
sbb
fimuls
mov
aas
in
or
loope
jge
jnp
and
test
sub
pop
mov
imul
xor
cwtl
cmp
popw
pop
shlb
jnp
dec
test
call
inc
pop
lcall
loop
and
stc
lods
jb
out
imul
xchg
sub
pop
adc
sub
rclb
mov
mov
sub
setae
mov
iret
enter
add
test
cmc
push
enter
lcall
icebp
push
cwtl
mov
jge
lea
outsl
or
mov
test
sahf
mov
lret
or
and
daa
inc
in
cmp
pop
push
dec
out
popa
cmpsl
mov
lret
faddl
ucomisd
out
cmpsl
cmp
imul
mov
inc
popf
push
ret
leave
imulb
stc
cmp
jg
dec
pop
fistps
xchg
mov
out
stc
sbb
pop
mov
push
mov
dec
push
in
pop
cwtl
push
add
nop
sub
mov
jp
out
pushf
xchg
pop
jbe
push
or
mov
push
cmpsl
aas
and
sub
inc
insb
sbb
negl
scas
xchg
and
mov
cmpsb
push
fsubp
lcall
mov
mov
or
dec
cmova
in
sbb
out
push
sbb
cmpb
add
test
xchg
in
mov
int3
lock
mov
test
dec
pop
push
cmp
insl
jle
in
cmp
jmp
pushl
int3
inc
int3
arpl
ja
in
pop
leave
stos
test
imul
jae
mov
repnz
in
mov
pop
scas
bnd
ret
or
mov
insl
add
add
pop
sahf
adc
js
inc
fiaddl
bound
cmc
fstl
ljmp
inc
push
and
stos
jb
push
jle
dec
jge
clc
mov
xchg
jle
dec
or
sarb
sub
ja
xchg
daa
rolb
shlb
and
add
cmpl
ljmp
loopne
add
outsl
shl
es
sbb
jl
pop
jne
inc
adc
scas
inc
repz
rorb
push
inc
fstpt
pop
in
push
repz
sarb
pop
hlt
fnstsw
test
and
shll
mov
add
mov
fisubrs
das
or
inc
jmp
cltd
pop
jae
lds
mov
xchg
out
movb
jbe
or
fstps
lods
cld
xorl
xchg
aad
adc
sub
insl
pop
js
lret
rorb
sbb
inc
leave
mov
and
push
xchg
mov
loopne
cmp
mov
jne
fsubrs
jl
sub
shrl
cmpsb
cmp
jle
and
ret
adc
add
rolb
fwait
jle
aam
leave
je
scas
sub
loop
int3
sbb
clc
arpl
arpl
daa
mov
ljmp
mov
insl
jno
pusha
aas
in
fsubp
andl
jb
pop
shll
dec
cmp
int
jecxz
xor
in
mov
ret
inc
xchg
mov
cwtl
mov
inc
enter
or
test
xor
or
popf
into
sbb
into
mov
push
imul
loop
sbb
push
adcb
ja
sbb
pop
pmaxsw
lods
out
and
cmpsl
loopne
movsb
sets
leave
dec
loop
xor
ret
push
sbb
sbbl
pushf
fcmovb
fdivl
add
inc
dec
pop
stos
into
fwait
inc
or
outsl
xchg
arpl
aam
gs
mov
push
es
mov
in
loope
mov
fwait
add
stc
mov
push
movb
mov
leave
fiadds
push
mov
les
add
scas
mov
rcl
and
dec
xor
jno
dec
pop
rcll
outsl
pop
sub
mov
loopne
cmp
aaa
inc
xchg
int3
mov
icebp
push
or
xchg
mov
fnstenv
out
data16
adc
addl
xchg
pop
ficoms
adc
lret
add
stc
push
repz
test
dec
bound
daa
xorl
xchg
scas
fdivrs
popa
hlt
sarl
call
adc
rcrb
scas
jecxz
push
aas
insb
or
iret
ja
dec
mov
insb
jns
inc
in
push
pop
and
mov
xchg
in
inc
add
mov
and
enter
jo
and
lds
in
mov
je
mov
add
enter
pop
div
arpl
push
je
rcll
test
sub
sbb
jmp
cmp
pop
jmp
ror
fwait
xorl
nop
and
movsb
int3
fistpl
adc
cmp
dec
rorl
jnp
mov
pop
adc
addr16
sub
mov
sbb
sarl
inc
addr16
andnps
xor
clc
mov
fwait
mov
shrl
pusha
jl
pop
add
jp
add
fldcw
dec
fcomps
in
push
sbb
adc
mov
fdivs
bound
shrb
adc
add
mov
mov
ret
addr16
mov
int3
subb
mov
mov
fs
jnp
sbb
mov
imul
mov
in
pusha
xor
pop
xor
or
icebp
cli
push
lock
inc
mov
nop
rorb
insl
mov
mov
clc
shll
jb
jle
pushf
xchg
ret
pop
cmp
jnp
xchg
mov
mov
mov
adc
not
sub
and
xor
pop
xchg
fs
aaa
pop
push
xor
push
lock
mov
sbb
fisttpl
xor
dec
jp
icebp
adc
scas
jno
data16
fidivrl
sbb
ds
js
fdivs
loop
pop
mov
mov
push
imulb
sub
sub
pop
int3
inc
nopl
mov
xlat
pop
sub
outsb
and
div
cmp
call
dec
imul
es
push
in
mov
fistpl
jg
rcrb
out
xchg
jbe
aam
sub
test
addr16
jae
xchg
insl
xchg
fdivrl
out
js
inc
adc
mov
xchg
push
test
and
mov
cmp
cmp
sbbb
fisttpll
lock
jecxz
lahf
or
lret
mov
xor
sarb
ds
test
mov
add
movsl
rcll
mov
movsl
or
rcrb
sbb
pop
cmp
mov
cld
pop
xor
mov
popf
imul
inc
lret
mov
jno
pop
and
lods
mov
jb
xorl
insb
add
inc
pop
xor
ss
inc
jg
push
out
jo
jno
clc
fwait
lock
rcrl
out
test
mov
add
iret
scas
jno
inc
rolb
mov
sub
sbb
test
mov
fisttps
push
imul
dec
jnp
jl
or
push
inc
sub
xchg
mov
addr16
fistps
mov
das
rcrb
cmpl
sub
mov
movsl
movsl
sub
loop
ja
cmp
pop
int
scas
gs
popa
test
mov
test
pop
test
push
mov
mov
mov
and
enter
cltd
outsl
fucomi
push
fiadds
jo
in
test
in
xchg
xchg
decl
add
push
mov
leave
mov
fsubrs
sub
ja
iret
shl
add
mov
push
gs
into
xor
popa
push
dec
dec
negb
test
hlt
rcrl
fwait
cli
mov
enter
inc
int
sahf
and
popf
in
lea
outsb
jno
sahf
stc
jns
in
enter
mov
lock
sbb
fisttpll
sbb
sub
fcoms
pop
sbb
xor
xchg
mov
lods
fldenv
rolb
pop
jno
lea
mov
std
loope
jnp
pop
dec
les
or
inc
imul
and
dec
adc
les
sbbb
pusha
add
push
js
aas
and
sub
int
fwait
fwait
imul
aaa
xor
cmc
es
shl
cmp
cld
fiadds
scas
arpl
repnz
or
jle
icebp
ja
iret
mov
lret
jns
lods
sbb
cli
in
mov
es
pop
and
pop
lcall
push
and
es
add
shl
out
lret
fidivrl
rcr
push
imul
int3
mov
push
sub
xor
rorl
adc
xchg
call
mov
int
xchg
mov
cs
cmp
pop
insb
pop
mov
movsl
jns
cmp
xchg
ss
insl
inc
mov
cmp
push
and
div
and
inc
pop
pusha
ja
jl
push
arpl
ljmp
or
lods
mov
xchg
pop
sbb
and
inc
lea
cmpsl
push
push
push
mov
mov
xchg
push
mov
scas
jp
pop
adc
cmp
bound
or
out
mov
cmp
add
scas
shll
mov
mov
mov
out
fldcw
xor
jle
mov
adc
push
in
mov
loopne
pop
lret
out
sbb
or
and
andb
push
add
aaa
popf
xor
rol
lock
fcom
xchg
push
mov
add
cltd
adc
gs
mov
cmp
call
cld
and
or
pop
sbb
inc
stos
pop
sub
fsubrp
lods
subb
mov
mov
mov
mov
mov
leave
ja
mov
movsl
inc
xchg
jno
clc
fimuls
addr16
inc
sub
fs
repnz
out
out
inc
loop
pop
xor
sti
push
cmc
sub
mov
mov
adc
push
arpl
jo
into
pop
bound
mov
loope
push
lahf
ja
jp
dec
or
dec
out
and
adc
inc
mov
mov
mov
jg
xchg
jne
jecxz
faddl
dec
pop
insl
int
adc
dec
fimull
in
lret
sub
or
xor
mov
scas
movsl
inc
mov
mov
lock
fbstp
dec
int
ja
jl
jmp
lahf
push
jmp
movntps
mov
xor
inc
jge
por
pop
ja
jmp
ljmp
divl
ret
jne
rol
xchg
pop
adc
outsl
cld
loop
push
stc
or
xchg
repz
push
cmp
add
jmp
add
dec
lcall
mov
inc
mov
iret
jno
xor
in
arpl
dec
cld
outsl
jns
mov
xchg
in
fnstcw
adc
fs
sahf
mov
mov
xor
push
inc
cltd
xchg
mov
push
dec
push
sub
ss
repnz
lret
dec
add
insl
xchg
fisubl
jbe
decl
loopne
pop
in
repnz
out
mov
jecxz
inc
aaa
sub
loope
jmp
leave
je
mov
rcl
inc
mov
fcoms
pop
dec
scas
or
jbe
pop
inc
lcall
pushf
adc
or
ja
shr
push
fdivr
mov
stc
lock
sbb
shl
adc
push
jp
ret
adc
int3
jns
pop
or
mov
cmp
lret
jmp
xchg
out
sub
imul
bound
and
adc
jo
ret
mov
lret
xor
stc
int
call
mov
mov
mov
xchg
cs
lcall
mov
movsl
rcrl
ja
mov
dec
in
and
dec
addr16
mov
pusha
inc
push
dec
mov
test
push
sar
mov
gs
ss
mov
sahf
adc
xor
ds
bound
pop
xor
sub
inc
mov
fs
loop
and
push
cld
iret
jnp
shlb
pop
add
repnz
jl
fidivrl
jle
inc
mov
pop
aaa
xchg
or
in
fdivrl
adc
lock
jnp
stos
pop
adc
popa
mov
or
sbb
gs
test
push
pop
cmp
or
pop
xor
mov
popa
xchg
sbb
jb
in
jne
cmp
icebp
mov
jp
or
mov
mov
lea
dec
fwait
test
xchg
push
or
ret
inc
mov
mov
jp
and
fs
fwait
jp
addb
mov
add
sahf
cltd
mov
cmc
or
mov
cli
sub
ret
popa
ret
gs
mov
cmp
add
in
gs
push
sub
fldcw
xchg
push
pop
roll
or
mov
cs
popf
cmp
dec
push
push
mov
jno
jne
adc
push
xchg
xchg
jno
popa
inc
push
js
pop
out
std
movsl
cmp
mov
dec
push
je
test
or
sbb
mov
cmc
xor
aas
ret
arpl
stc
cltd
dec
sub
push
outsl
gs
jp
jae
fwait
xchg
ret
popa
rolb
mov
cli
push
dec
shl
mov
cmp
sbb
outsb
fldl
adc
xchg
cwtl
mov
fiaddl
aaa
mov
in
in
mov
or
xor
sbb
stos
inc
lods
scas
bnd
bound
inc
jb
xchg
popf
push
jne
pop
sub
dec
mov
insl
lds
js
xlat
sbb
test
imul
fnsave
and
lret
les
cmp
add
sbb
sub
or
xchg
clc
pop
or
mov
lock
push
xor
add
push
pop
loop
fldenv
movsb
push
ljmp
fcomi
out
cmp
fnstcw
mov
int3
sbb
xchg
bound
bound
inc
or
in
out
cmp
aad
daa
and
pop
pushf
mov
lret
call
sbb
fsub
inc
lahf
mov
mov
pop
mov
in
push
test
outsb
loop
in
test
or
jmp
push
add
mov
jl
out
out
inc
sbb
sub
xchg
into
adc
jmp
mov
adcb
sbb
push
xlat
lea
fcmovbe
mov
lahf
mov
xchg
scas
das
push
mov
cs
cltd
aas
mov
xlat
pop
sub
add
stos
sub
lock
lock
jg
out
cmp
cmp
int3
test
mov
data16
and
and
f2xm1
jmp
mov
xchg
push
leave
pop
xchg
lcall
or
jo
lods
insb
jne
cwtl
cmp
cmp
cmp
test
aam
daa
ret
or
out
push
xchg
sub
outsl
cmpsb
test
xchg
mov
mov
je
xlat
mov
and
jae
add
fisubrs
cmp
js
ss
inc
inc
outsb
sub
stc
mov
lcall
leave
push
push
and
test
sahf
aaa
ja
popf
enter
and
loop
sbb
lcall
sbbl
adc
sahf
ret
jle
mov
decl
cltd
scas
pop
and
orb
mov
loopne
in
idivb
xchg
inc
cld
loop
pop
jge
test
xlat
sbb
gs
mov
test
mov
sub
gs
jl
insl
jp
xchg
cmp
outsb
out
mov
addl
fildl
shlb
push
inc
es
xchg
jnp
out
jmp
cmp
fildl
jno
and
sub
mov
stos
lahf
fcomp
pop
jno
jae
mov
adc
dec
mov
push
mov
ret
jl
or
ja
sub
gs
outsl
andl
sbb
aam
mov
shlb
sub
dec
jg
and
movsl
or
gs
dec
lds
mov
pop
adc
xor
pop
fistpll
push
add
aam
fdivrl
out
test
jmp
aaa
jb
lret
xchg
inc
add
cmc
pop
dec
mov
xor
insb
lods
outsb
mov
nop
add
les
xor
ret
pop
bound
packssdw
jg
stc
data16
cmp
inc
cmc
mov
mov
adcl
cld
loopne
fwait
jno
and
test
jp
push
inc
fcoms
inc
xchg
jae
push
leave
sti
xlat
mov
mov
sbb
ret
inc
cmp
cltd
xor
repz
call
pop
rorl
scas
test
mov
xor
mov
inc
mov
xchg
sub
jno
add
mov
test
jb
xchg
test
add
inc
xchg
gs
mov
push
xchg
sarl
mov
std
inc
lds
lods
icebp
cmpsb
clc
pop
mov
bound
sahf
scas
mov
insl
xchg
hlt
inc
add
dec
aam
loope
pop
jmp
pop
stc
jnp
clc
mov
lcall
aad
sbb
pop
lods
adc
out
pushf
ficoml
dec
or
jno
xor
xchg
enter
dec
testl
push
jl
arpl
jo
push
shlb
jmp
aam
pop
aas
lds
xor
xor
inc
or
enter
jecxz
inc
and
mov
push
dec
inc
push
test
push
add
stc
sub
or
jmp
xor
gs
xor
xor
mov
rcr
lods
jge
mov
xor
dec
fmuls
inc
jle
in
cmc
jg
test
stos
pushf
xorl
push
lahf
push
and
inc
andl
xchg
fcmovu
test
fdivs
or
inc
ret
imul
ss
mov
fstps
push
pop
cs
movl
iret
gs
test
adc
movsl
outsl
sbb
mov
mov
mov
in
push
or
inc
movsl
lock
dec
push
and
push
out
cmp
pushf
inc
add
scas
jb
pushl
sbb
repnz
xor
in
imul
mov
stc
xchg
or
pop
or
sbb
push
aas
xchg
or
mov
pop
and
push
aas
outsl
push
pop
add
add
repnz
jo
notb
imul
cmpl
dec
std
lock
pop
adc
cmp
aas
lock
xor
cmp
inc
leave
jg
pop
xchg
int
stc
imul
mov
jle
int3
aas
subl
shrl
adc
or
in
fnstsw
scas
sub
mov
adc
jbe
sti
xchg
jp
cli
or
push
jnp
sub
or
xor
in
js
xlat
fdivrp
jmp
inc
in
in
hlt
inc
pop
icebp
pop
xor
sbb
rorb
out
adc
jp
gs
adc
ds
and
int
divl
dec
inc
lods
push
jae
stos
mov
dec
adc
jo
pop
in
inc
lea
sahf
xor
mov
lea
mov
lret
testl
cmpsl
mov
loop
mov
fsubs
sbb
outsl
push
ficoms
adc
sub
cs
lea
mov
push
lret
xor
scas
push
jnp
jno
jmp
jg
sbb
idiv
adc
cmp
pop
push
pop
sarl
fnstenv
stc
xchg
icebp
stos
jns
lods
cmp
jnp
sarb
or
fnstsw
adc
pop
and
icebp
test
sbb
sub
subl
dec
xor
imul
std
adc
dec
push
or
sbb
push
insb
jbe
cltd
lea
xchg
adc
pop
dec
jmp
lods
out
in
xor
in
jmp
popf
fsubrs
add
dec
fsubrs
dec
push
test
sbb
das
mov
sar
in
fsubr
jb
xor
or
movsb
add
inc
or
push
in
sub
sub
fstl
fnstenv
in
fdivs
mov
mov
xor
rorb
lret
adcb
mov
data16
mov
adc
arpl
mov
jg
xchg
fiadds
inc
xchg
add
sahf
mov
out
hlt
xor
aad
mov
adc
scas
mov
pop
imul
sarl
xchg
fincstp
xchg
mov
shr
test
sbb
pushf
xchg
cmp
ret
ret
or
mov
dec
inc
je
hlt
ljmp
lret
cltd
mov
jno
lds
out
cltd
jbe
cmp
enter
or
pop
jmp
jno
hlt
mov
cld
int
sbb
mov
movsb
mov
ljmp
and
pop
addr16
sbb
in
and
rcr
jmp
mov
imul
mov
sbb
aaa
and
jb
xchg
in
pop
or
add
push
repnz
outsb
jb
and
add
mov
pop
test
in
aas
repnz
xchg
iret
mov
sub
enter
inc
xchg
sub
aaa
not
sbb
out
push
or
jmp
sub
mov
push
sbb
sbb
dec
or
orb
insl
mov
ds
dec
aas
mov
in
inc
ds
ja
pusha
daa
mov
aaa
inc
pop
mov
outsl
or
mov
jecxz
insb
dec
aaa
clc
sahf
or
pop
and
iret
adc
mov
pop
fistps
insl
add
imul
nop
jns
push
dec
sbb
mov
lods
xlat
fisubl
or
mov
jmp
incb
jne
dec
fstl
pop
add
mov
iret
test
loop
add
jecxz
lcall
rcrb
jl
and
pop
mov
push
pushf
mov
mov
pop
out
mov
loop
js
test
jl
pop
and
add
sub
mul
add
out
xor
adc
push
arpl
xchg
xor
in
mov
cmp
sbb
xchg
cmpsb
adc
cmp
orl
push
or
clc
jg
fldcw
gs
enter
int
dec
xor
pop
mov
cmpsl
imul
shrb
or
hlt
pop
push
mov
insb
fmul
shrb
adc
lds
jnp
lret
sub
arpl
pop
jnp
mov
jle
cs
cmp
pop
pop
rcrl
and
lret
cmp
jbe
xor
add
inc
pop
nop
pop
cld
aaa
xchg
mov
and
mov
es
fisubl
pop
cwtl
je
iret
push
in
add
daa
jl
jae
iret
aas
stc
dec
or
xchg
xor
cli
stc
inc
int
inc
mov
sbb
fucom
cmp
xchg
mov
xchg
adc
mov
or
aas
sahf
pop
out
cmp
fs
or
push
and
add
lcall
psubw
inc
fs
cltd
add
mov
push
push
out
movsl
mov
jmp
repz
dec
mov
lea
mov
pop
pop
xorl
imul
jmp
test
hlt
and
mov
fisttpll
test
jmp
int
cmpsb
push
insl
aas
clc
cs
aaa
mov
ljmp
lock
mov
cmp
fmull
negb
sub
popa
sbb
jo
pop
rclb
mov
jmp
call
iret
imul
inc
add
mov
testb
pop
sbb
mov
stos
mov
mov
add
jo
sub
sbb
ror
ljmp
add
jl
xor
mov
push
xchg
cmp
jnp
loopne
mov
das
pop
out
or
in
je
repz
push
ret
in
adc
inc
push
jmp
mov
add
ret
lcall
in
popf
scas
jae
sbb
mov
adcl
push
fcomip
dec
jl
not
icebp
out
loopne,pn
jne
jnp
pop
rcr
movsb
push
pusha
push
shlb
mov
push
mov
es
sbb
mov
push
leave
addr16
mov
bound
stc
push
pop
adc
sub
mov
imul
xchg
mov
pop
cmp
cmp
fs
gs
aas
push
cmpsb
pusha
cmc
int
jnp
dec
and
cmpl
idiv
mov
push
xor
or
in
lods
lds
iret
in
ret
jbe
adc
pop
jmp
out
repz
inc
add
xor
rol
add
jp
adc
jge
add
inc
add
push
dec
stos
negl
addb
jmp
xor
mov
or
or
mov
jnp
mov
aad
int
pushf
mov
fmuls
dec
dec
sub
jle
dec
xor
rolb
gs
scas
out
lretw
cmp
insb
outsb
pop
sahf
data16
cmc
mov
mov
xor
test
jnp
and
inc
jnp
sbb
pusha
pop
lret
inc
std
adc
push
cmp
mov
push
in
mov
gs
mov
lds
aaa
std
pop
fs
std
jge
loope
jb
stos
jae
ss
push
hlt
ud0
in
movsb
divl
xor
sbb
loop
jb
pop
cli
rcr
arpl
sbb
cmpsl
mov
in
mov
scas
mov
mov
addr16
xchg
adcb
aaa
sbb
nop
pop
and
addl
cld
fsincos
sbb
mov
stos
sub
mov
ds
dec
sbb
jg
or
mov
dec
sbb
fisubrl
stos
int3
jge
sbb
sbb
stos
shll
pushf
mov
pop
les
ja
loope
outsl
or
or
shll
in
aaa
push
sub
dec
lret
and
inc
das
add
or
stos
adc
mov
xor
pop
fidivrl
push
outsl
insl
sbb
jo
inc
jecxz
jo
or
enter
push
cmc
arpl
sbb
enter
pop
jl
sbb
fadds
sub
dec
lock
sahf
hlt
ret
jle
into
mov
push
adc
add
icebp
cltd
mov
std
and
mov
dec
mov
mov
out
movsl
movsl
mov
and
xor
dec
jg
hlt
jge
dec
mov
sub
popa
push
sub
push
repz
xchg
dec
ret
inc
push
repnz
in
xor
enter
loop
rorb
bound
sub
ficomps
adc
mull
inc
lahf
rcll
fnstenv
cmpl
outsl
jmp
repnz
or
data16
loopne
mov
repnz
adc
dec
dec
test
stos
xchg
fsubrl
pop
and
mov
sti
mov
lods
imul
jg
mov
xor
or
cmp
push
pop
mov
pop
xchg
jmp
inc
add
jp
cli
mull
add
inc
dec
fsub
jae
shll
add
cmc
popa
cmp
inc
loopne
roll
vmptrst
mov
fwait
xchg
mov
jo
cmc
jne
adcl
js
ftst
scas
xchg
loopne
jno
enter
ja
into
xchg
pop
push
out
and
inc
popa
popf
mov
inc
pop
nop
pop
out
pop
pop
gs
rcl
and
pop
xchg
push
test
mov
and
inc
sub
jo
popa
or
stc
out
pop
in
adc
or
test
leave
xchg
dec
mov
mov
push
outsl
in
sub
std
ret
mov
aad
ljmp
pusha
cmpsb
imul
loop
mov
and
mov
sub
jnp
jae
pop
insl
clc
arpl
jns
jb
mov
fstpt
in
sti
lods
scas
jno
rcrb
aaa
movsl
jo
out
pushf
iret
nop
in
movsl
mov
pop
push
mov
sub
pop
xchg
pop
hlt
idivl
sbb
lock
sahf
pop
jbe
pop
jl
clc
inc
lea
pop
or
test
enter
sbb
xor
scas
add
push
movsb
test
ds
pop
push
jge
dec
or
dec
dec
xor
cmp
ret
dec
cltd
hlt
mov
jb
testb
xor
jb
jb
imul
fcmovne
cmp
adc
mov
cmp
adcb
xchg
outsb
push
cwtl
jnp
dec
jle
cwtl
lods
cli
clc
xchg
jno
jnp
cmpsb
sti
mov
sbb
addr16
clc
or
mov
mov
fidivrl
fimull
subb
pop
or
jl
addr16
inc
adc
iret
jae
enter
push
lea
and
mov
push
fdivrl
sub
mov
adc
scas
mov
rolb
dec
sub
pop
sbb
andb
iret
add
add
sbb
sub
gs
inc
cmp
dec
inc
inc
out
int
testl
bound
inc
sbb
sub
dec
cld
test
push
notl
sbb
push
pop
pop
sti
lds
lahf
test
stos
mulb
add
push
or
and
mov
cmp
push
push
jecxz
and
cmp
cmp
jae
mov
data16
push
scas
aaa
add
pop
or
data16
gs
cltd
mov
push
lods
cmp
fsubs
push
in
xor
into
xor
aam
lahf
pop
int
gs
repz
ss
fiadds
stc
or
mov
int3
ljmp
push
cmp
adc
in
pop
fcmovbe
jle
cmp
jecxz
mov
inc
push
push
sbbb
adc
or
add
scas
in
xchg
mov
and
xor
jnp
gs
clc
orb
mov
js
push
mov
sbb
fsubrs
pop
loop
mov
test
jb
popf
movb
push
cmc
push
lahf
cmc
adc
outsb
add
fisubrl
jns
or
repz
imul
adc
das
or
push
fldcw
pop
lds
sbb
sub
iret
mov
xchg
or
sbb
cmp
inc
mov
int3
bound
test
xchg
xchg
mov
mov
or
mov
sbb
lock
pop
pushl
scas
cwtl
dec
cmpsb
in
cwtl
xor
adc
or
mov
xchg
les
and
jno
movsb
pop
push
bnd
in
lea
push
js
and
pop
pushf
xchg
daa
mov
sub
dec
sub
pop
dec
aam
stos
ljmp
mov
pop
in
push
and
sub
mov
mov
int3
in
push
sahf
cmp
mov
rclb
js
dec
sub
sub
inc
jo
sub
repnz
ficoml
or
test
jp
adc
jns
in
out
or
pop
xchg
dec
mov
jbe
out
pop
push
aad
inc
and
push
mov
lds
das
cmp
cmp
jmp
xchg
pop
jnp
pop
lods
pop
cld
push
mov
xor
insl
fisubrs
push
xchg
cmpsl
inc
pop
loopne
in
test
or
sub
subb
pop
or
add
xor
addr16
arpl
push
mov
sti
adcl
leave
jl
lahf
loop
push
jl
inc
add
stc
pop
cmpsl
stos
adc
jl
mov
lds
ljmp
or
pop
mov
mov
into
mov
xor
test
rcr
ret
fiadds
or
and
jbe
rclb
pop
inc
roll
js
cmpsl
pop
dec
mov
cld
sub
hlt
and
cmp
inc
add
pop
push
and
sti
ljmp
pop
fs
add
cmpsb
jmp
movsl
cmpsb
stos
jnp
jne
ds
ret
mov
push
fmul
jbe
rcll
loop
test
mov
hlt
icebp
in
pop
dec
adc
lds
testb
scas
sub
jbe
fwait
insl
mov
js
push
add
or
push
arpl
inc
out
cli
pop
mov
sbb
inc
pushf
scas
imul
lock
mov
pop
or
sbb
in
std
fcompl
push
xor
cmp
popa
cld
sbb
fld
cmp
lahf
imul
or
mov
imul
sbb
dec
dec
xchg
cmp
outsb
ja
rcrb
cmpsb
and
psubusw
out
cli
or
je
lret
dec
mov
jbe
jg
xor
pop
mov
mov
add
ja
lret
sbb
ljmp
cmp
push
les
sbb
cmp
sbb
cmp
xlat
test
rorb
stos
sti
sbb
lds
sti
cs
movsb
mov
dec
leave
jg
pushf
cmp
call
test
pop
movsb
ret
dec
jp
nop
xchg
and
sub
xor
jge
sbb
pop
decb
icebp
test
daa
cmp
adc
dec
je
shlb
jnp
and
add
gs
repnz
enter
cli
stos
cmp
xchg
int3
out
adc
jle
inc
xor
in
jnp
and
adc
mov
pop
xorb
mov
lds
inc
div
test
push
dec
dec
or
adc
fwait
jecxz
shrl
mov
sbbb
pop
ret
js
sub
sbb
push
addb
mov
bound
icebp
repnz
int
xchg
outsl
inc
stc
and
jmp
mov
daa
ljmp
nop
lahf
outsb
xorb
ja
scas
lcall
vmwrite
imul
stos
inc
and
and
or
xor
lods
mov
shlb
mov
pop
add
orb
pop
pop
jne,pt
dec
pop
sub
dec
xor
pop
xor
daa
adc
fcompl
cmpsb
mov
xchg
cmp
adc
inc
ss
add
js
inc
repnz
iret
dec
mov
or
sbbl
cmp
jo
out
fst
mov
repz
test
aaa
or
add
in
pop
push
cmp
leave
pushf
int3
popf
stc
test
scas
xchg
js
mov
in
jle
call
sbb
lods
imul
fisttps
out
cltd
insb
xorl
fistl
aaa
clc
inc
loopne
xor
push
sub
and
popa
push
mov
leave
test
push
mov
sub
xor
in
mov
xlat
pop
ja,pt
fwait
sub
and
and
xor
xor
inc
jmp
and
mov
cltd
in
pop
pop
add
xchg
stos
jge
popa
or
sbb
aas
dec
int
stos
or
outsb
jne
loopne
in
lock
dec
mov
push
ret
insb
gs
jecxz
cs
gs
jecxz
mov
loop
inc
imulb
cwtl
rorl
out
mov
stos
jae
jecxz
sub
cmp
scas
scas
icebp
rcll
aad
lret
insb
push
loop
and
push
out
lar
sub
jecxz
out
dec
sti
dec
inc
push
pop
hlt
xor
sti
mov
fnstcw
or
mov
push
and
movsb
outsb
mov
scas
lcall
xor
sahf
rcrl
mov
repz
icebp
and
shrl
repnz
shr
es
or
push
loope
push
ret
xchg
sub
insb
inc
scas
ret
adc
into
inc
cmp
mov
leave
scas
jne
adc
je
mov
movsb
ficompl
lods
pop
mov
inc
loopne
lcall
push
xor
insb
ds
sbb
jno
mov
shl
mov
sarb
or
xchg
cmpsl
adc
dec
add
hlt
call
jecxz
pop
sub
fbstp
cmp
or
lock
inc
ljmp
test
mov
lock
test
repz
xchg
repz
push
mov
cld
jg
lahf
out
and
ljmp
mov
mov
fisubl
in
jns
int3
mov
inc
push
int
je
aaa
mov
lret
das
lods
lock
aaa
mov
popf
mov
jle
hlt
and
stos
fsts
and
or
pop
mov
out
roll
testb
dec
inc
and
add
test
int
inc
add
push
adc
dec
rol
xor
into
and
stc
pop
movsl
sti
and
lock
testl
mov
rorl
aad
js
push
mov
sbb
xlat
dec
sahf
subl
mov
cmp
and
mov
popf
repz
call
pop
mov
add
or
stos
ds
cs
cli
sub
jno
ret
cmpsb
sub
sbb
fistps
push
lret
mov
das
pop
inc
push
les
pusha
int
and
sbb
pop
mov
and
xor
push
stc
mov
call
ret
jnp
or
ret
test
imul
fcoml
das
pusha
cmp
je
popa
cmp
pop
mov
clc
cwtl
mov
pushl
mov
pop
and
jbe
xchg
cltd
sub
xlat
mulb
imul
xor
into
sub
adc
cmpb
pop
mov
mov
aaa
cmc
inc
call
xchg
leave
repnz
ret
cmp
scas
pusha
decb
lahf
fimuls
pop
lahf
push
or
mov
scas
pusha
mov
andb
icebp
sti
mov
cmp
loop
int3
jmp
cmp
push
and
out
scas
test
into
adc
mov
xor
fdivl
repnz
aas
and
fsubrl
in
test
sub
std
aas
ljmp
in
pop
add
xchg
pop
inc
call
jge
lock
add
pop
inc
adc
inc
cwtl
mov
out
in
mov
enter
or
adc
inc
push
in
jmp
pop
and
inc
add
xor
fcomp
push
xchg
or
jmp
test
jno
and
lret
aad
xchg
leave
jbe
mov
sub
imul
inc
lds
nop
sti
cmpsl
fimull
xor
jge
aas
jo
inc
int3
cmp
jbe
aaa
insb
loop
out
cmp
mov
popa
mov
dec
jmp
xchg
fldcw
adc
adcl
cltd
cmp
push
aam
shlb
xor
std
cltd
xchg
pop
xor
jge
pop
lods
pop
jmp
add
and
stos
mov
push
repz
and
pop
popa
pop
adc
and
cmpl
lahf
pop
enter
repnz
push
outsb
jl
dec
test
xor
lods
stos
ret
add
sbb
sub
sub
clc
jl
adc
mov
pusha
sti
cltd
push
outsb
movsb
cmp
out
repnz
or
xchg
jl
dec
ret
xchg
rolb
ficompl
and
ss
push
sbb
stos
xchg
sbb
jecxz
push
dec
shll
into
adcb
scas
loopne
aas
sti
addr16
cwtl
cmpl
aas
cmp
mov
push
cli
mov
mov
push
fisttps
iret
push
xchg
mov
inc
jno
mov
insl
xor
push
sub
or
je
fsubrl
stos
cs
jge
fidivrs
mov
dec
push
loop
rcr
inc
sbb
int3
test
jo
adc
call
fsubrs
stos
sub
push
inc
xor
in
in
negb
sub
les
cmp
and
or
xchg
xor
call
add
mov
enter
push
cmp
push
in
dec
sub
stc
push
jo
lods
and
or
push
dec
mov
xlat
push
mov
dec
mov
pop
repnz
dec
stos
and
mov
imull
fucomip
inc
pusha
adc
inc
xchg
je
popa
aas
lods
xchg
lahf
faddp
jnp
mov
ficompl
cli
mov
xchg
ljmp
jno
sbb
outsb
fadds
rorb
jmp
mov
pop
add
sarb
fidivl
jns
or
mov
fiaddl
xchg
dec
cmp
cmp
xchg
and
xchg
popf
shl
xchg
xchg
ficomps
mov
ss
xchg
mov
xor
lcall
sbb
pop
adc
sub
push
xor
or
xor
loope
pop
and
xchg
mov
shll
movsl
sbb
jp
mov
test
int
xor
iretw
push
mov
fmuls
aaa
data16
sub
sub
cmpsb
jge
adc
add
pushf
enter
js
mov
imul
lret
mov
cmc
arpl
push
pop
cwtl
xor
stc
sbb
ljmp
or
test
pop
mov
jne
mov
adc
jg
repnz
dec
insl
sarb
xchg
ja
repnz
inc
loop
xor
fisubl
popa
in
lock
mov
lods
or
dec
xchg
dec
inc
gs
xchg
mov
stc
pop
ret
fsts
rol
sahf
out
scas
sbb
cmpsl
repnz
xor
ljmp
mov
aaa
dec
adc
out
push
stos
add
adc
pushl
scas
incl
jge
repnz
out
push
loopne
and
mull
sub
icebp
in
cmp
fistps
or
lret
fcmovne
xor
inc
xchg
ds
cmp
mov
inc
or
aaa
fistpl
cmpsb
sbb
pop
fdivrl
cmp
cs
inc
out
cmp
mov
imul
shl
mov
test
mov
scas
cmc
mov
push
hlt
adc
push
aas
xor
lahf
rol
mov
ss
mov
cs
movsl
xorps
sub
xchg
add
mov
or
pusha
out
sbb
rorb
xchg
jmp
shl
cmp
dec
or
lret
ret
dec
call
mov
push
enter
mov
add
xor
daa
mov
call
xor
push
movsl
mov
inc
arpl
fs
aam
push
mov
xlat
ds
fdivrl
sub
scas
lcall
imul
in
lcall
lea
sbb
mov
jge
or
dec
mov
pop
das
inc
lcall
pop
sbb
push
scas
rcrb
xchg
pop
sub
jo
jns
lahf
shlb
out
push
push
scas
imul
in
orb
sbb
adc
xlat
sti
mov
fisubrs
push
xor
enter
push
inc
mov
or
int3
in
push
fnstenv
ja
xchg
enter
xchg
mov
mov
out
jecxz
int
mov
jmp
shl
jecxz
es
sub
je
push
and
mov
sub
movsl
push
push
rol
ret
pop
inc
or
mov
sbb
ds
ds
push
test
inc
adc
addb
lock
sbb
xor
dec
sbb
lods
mov
addb
jl
add
lcall
lea
or
shll
es
mov
pop
test
and
mov
in
jns
mov
fstpl
movsb
icebp
je
insl
push
push
jnp
scas
rcrl
or
mov
movsb
fbld
dec
mov
jnp
ljmp
mov
ljmp
mov
in
inc
pop
loopne
lods
out
jae
gs
cmp
jl
and
adc
sub
gs
sub
fdivrl
aaa
jl
xchg
incl
dec
cmc
jno
pop
or
pop
jo
int3
dec
pusha
jl
sbb
jle
in
lret
ds
adc
push
mov
fcmovnu
mov
mov
gs
lret
les
xchg
mov
dec
xor
sahf
into
repz
xchg
xor
fimull
push
jecxz
and
jl
jg
xor
dec
repz
bound
data16
std
adc
fstps
push
ret
std
or
or
xorl
dec
mov
push
sbb
movsb
out
mov
test
jnp
addr16
test
sbb
in
xor
lahf
mov
mov
das
jnp
push
dec
mov
les
sbb
xchg
push
xor
push
sub
clc
mov
clc
pop
or
adc
pop
adc
repz
data16
mov
mov
xor
push
repz
mov
jg
cli
call
ret
jno
inc
pop
mov
xchg
adc
imul
ret
arpl
and
adc
pop
mov
movsl
inc
jb
or
mov
push
imul
imul
daa
inc
in
add
xor
lahf
inc
out
mov
adc
fsubrs
push
fdivrl
dec
jno
push
xchg
popa
shlb
pop
lock
inc
fistl
push
jg
testl
leave
mov
dec
adc
mov
ljmp
jecxz
aaa
jno
xchg
movsb
dec
xchg
popf
gs
mov
xor
lods
mov
inc
add
add
sub
push
xlat
loop
cmp
jno
mov
shl
jle
jnp
adc
jne
enter
add
lods
vunpcklps
xchg
and
pop
outsl
adc
rcrl
and
jl
jnp
or
jmp
test
cmpsl
and
or
enter
mov
test
fdiv
int3
lds
push
mov
or
mov
sbb
jl
scas
xchg
cmpsl
repz
nop
adc
sbb
addl
mov
stc
push
xlat
pop
repz
je
mov
xchg
xchg
sbb
insl
add
sub
punpckhbw
jge
pop
movsb
mov
xor
addl
mov
jmp
mov
js
or
dec
out
dec
mov
lahf
sub
mov
push
in
dec
scas
ljmp
cmp
cmp
daa
cmp
xchg
dec
inc
and
xor
jle
xchg
rcr
pop
push
and
add
push
pop
inc
int
xchg
push
ja
pop
lods
sub
cld
xchg
fisubrl
push
call
lods
add
sti
jl
dec
pop
or
iret
pop
outsb
mov
mov
mov
js
sar
add
or
sub
adcl
and
hlt
outsb
cmpsl
out
ljmp
and
and
inc
dec
je
push
and
add
fimull
mov
test
and
or
push
adc
ss
push
push
cmp
sahf
icebp
dec
or
leave
and
mov
sub
mov
dec
inc
std
adc
cmp
stc
push
mov
push
mov
out
repz
jp
sbb
dec
pusha
xchg
xchg
mov
std
push
std
popa
call
adc
sbb
mov
push
lods
pusha
push
imul
lret
mov
xor
iret
jle
aas
aas
gs
mov
and
mov
xchg
std
mov
outsl
pop
inc
jb
push
dec
inc
xlat
pop
pusha
mov
pop
js
push
jg
push
dec
leave
pop
in
pushf
cmpsb
faddl
push
rcrl
loopne
out
mov
nop
test
lret
js
outsb
clc
sti
icebp
jmp
push
nop
insl
ljmp
jae
push
sbb
xchg
and
mov
or
xor
out
inc
std
mov
stc
notb
shll
or
mov
stos
adc
insl
pop
push
shrl
inc
mov
stc
mov
jge
test
inc
mov
inc
mov
mul
sbb
add
push
xor
in
and
adc
sub
fsub
mov
js
subl
movsb
mov
xchg
das
sbb
ret
mov
push
pop
in
inc
adc
mov
pop
jp
cmpsl
xchg
push
mov
xchg
lahf
jae
pop
pop
lods
mov
hlt
mov
aad
lret
out
js
outsb
int3
push
std
xchg
in
fwait
xor
jecxz
push
sbb
cmpsl
in
scas
mov
dec
ret
jecxz
aaa
lcall
pop
jge
or
pop
outsl
and
sahf
addl
ret
sbb
or
push
jno
push
sbb
bound
fidivs
dec
pop
and
cmp
or
outsl
cmp
adc
mov
xchg
push
stos
ret
rorl
jmp
mov
les
scas
xchg
jg
int
sbb
mov
arpl
dec
cli
rclb
cmpsb
rolb
push
adc
dec
in
mov
jbe
sub
hlt
sub
mov
push
neg
je
arpl
and
mov
mov
push
sti
mov
mov
cltd
outsl
cmp
lods
xchg
jne
push
stc
xchg
in
sbb
adc
push
sbb
les
sti
loop
push
mov
clc
ja
push
gs
es
insl
jle
push
xor
popf
mov
lahf
xor
push
jmp
jae
pop
jno
xchg
and
xchg
or
lods
sub
imul
in
cmp
jno
xchg
add
lock
pop
dec
sub
cli
xchg
sbb
testl
cmp
add
push
fistpll
lds
incl
jae
jge
lret
xlat
stos
in
lods
pop
aaa
jne
or
cmp
inc
ljmp
testl
inc
test
out
imul
push
loope
xchg
push
cmc
jne
insl
adc
inc
fdivs
mov
insb
shlb
xor
pop
testb
cmp
outsb
cmc
outsb
dec
ds
and
mov
stos
test
xor
lret
lock
test
lcall
out
mov
test
dec
in
scas
loopne
in
cmp
das
jmp
mov
stos
lods
ja
xor
adcb
into
mov
add
sbb
mov
mov
aad
jle
dec
inc
loopne
mov
and
xchg
fists
notb
cmpsb
push
inc
mov
je
clc
leave
fisubrl
mov
mov
in
insl
sbb
add
daa
loop
add
frstor
push
sar
repz
cmc
cli
test
stos
stc
out
sub
jmp
xchg
pusha
mov
and
inc
push
shlb
dec
jae
enter
out
test
sahf
push
dec
xchg
lods
mov
mov
and
mov
dec
or
outsl
mov
lret
cmpsl
mov
push
xchg
and
adc
lret
aam
int3
rcr
push
orb
fdivs
js
dec
stos
cmpl
lock
mov
loope
lahf
inc
mov
mov
pop
adc
push
and
lods
xchg
xlat
add
iret
xlat
cli
adc
nop
sahf
dec
mov
add
subl
inc
std
adc
sbb
bound
inc
or
dec
inc
mov
repz
bound
mov
fwait
jle
sbb
add
sbb
add
aas
dec
xor
push
mov
std
ficompl
or
mov
jg
sbbb
mov
xor
push
testb
dec
ds
or
cmc
dec
adc
jae
out
scas
dec
fdivrs
dec
add
sbb
jecxz
mov
iret
fisubrl
fiadds
jle
sahf
push
cmpb
sbb
fildll
mov
cld
jnp
adc
ljmp
stos
and
jmp
mov
and
test
pusha
mov
mov
cmpb
and
fs
xchg
mov
xchg
mov
in
test
dec
mov
test
lahf
lcall
iret
or
jae
mov
jge
mov
cltd
pop
sbb
stos
xchg
adc
mov
ror
inc
call
adcl
fnstsw
pop
jo
test
lds
enter
mov
pop
jne
jl
push
int
jge
dec
and
jne
jmp
js
xchg
add
sub
xchg
out
xor
add
in
mov
fldcw
lret
push
adc
dec
fidivs
pop
mov
sub
or
push
std
push
push
mov
fwait
subl
into
inc
jecxz
mov
push
daa
mov
and
gs
aaa
fs
add
f2xm1
dec
xchg
in
repnz
add
hlt
sbb
ret
pop
in
xor
lea
xchg
lods
add
ret
adcl
aam
pusha
mov
outsl
cmp
add
repnz
fmull
ja
dec
push
into
test
sub
inc
lret
sub
pop
loope,pn
enter
popa
cmp
lahf
andl
adc
test
je
addb
xlat
jne
jnp
icebp
mov
mov
stos
xorb
mov
dec
inc
adc
stos
lds
or
or
add
das
pop
outsb
mov
out
and
mov
negb
cwtl
out
int3
iret
iret
enter
rcrl
mov
jle
lret
mov
fdivrl
jecxz
dec
or
imul
loopne
and
or
mov
mov
dec
les
jne
stos
in
pop
jbe
aam
incb
ljmp
pusha
push
pop
shrl
mov
into
pop
push
xchg
pop
or
inc
mov
dec
fucomip
iret
dec
cs
test
lock
xlat
sbb
add
push
and
call
pop
imul
inc
fldlg2
push
sarl
int
and
push
in
faddl
jbe
lcall
or
pop
lock
in
inc
xor
mov
inc
sub
and
push
push
andl
ds
dec
or
ficompl
or
lods
add
mov
mov
lcall
icebp
mov
pop
adc
sub
pusha
xchg
or
int
adc
jle
push
mov
pop
loopne
jns
hlt
rcrb
push
push
jle
scas
rolb
std
mov
and
jno
cltd
or
sub
nop
cmp
mov
fbstp
lds
daa
je
andb
mov
cmp
mov
mov
jns
mov
shll
cwtl
outsl
daa
and
mov
push
and
sub
dec
push
push
shl
sbb
mov
lret
in
mov
xchg
in
lods
xlat
mov
popa
lret
xchg
insl
jmp
mov
or
push
push
mov
ror
lret
int3
mov
or
test
cmp
sub
gs
xsha256
cmpsb
push
mov
aas
or
adc
dec
rorl
fdivs
movsb
mov
rol
push
xchg
xor
inc
aas
fnstenv
mulb
lret
cmp
inc
cli
push
aas
mov
shll
insl
enter
std
xchg
xor
test
pop
ret
ret
sbb
cmc
jmp
pop
mov
cmpsl
xor
add
enter
fwait
or
xor
mov
push
lods
addr16
sbb
scas
lret
std
mov
xor
mov
jecxz
jae
stc
adc
xchg
ja
mov
out
addr16
xchg
adc
pushl
pushl
fisubs
mul
insb
dec
clc
iret
sarl
int
pop
or
dec
pushl
lea
sti
adc
xchg
les
pop
pop
jmp
dec
inc
andl
imul
mov
pop
mov
in
dec
mov
jmp
subl
lock
pop
push
ret
stos
mov
inc
jns
xor
repz
scas
ss
jo
sbb
push
push
add
adc
je
dec
inc
xor
jae
sbb
and
out
mov
lods
sahf
das
push
add
jne
and
mov
lahf
xchg
cld
mov
or
or
les
xor
cwtl
mov
test
mov
movsb
insl
in
sub
out
das
into
je
sbbb
jle
fs
inc
mov
dec
pop
sbb
iret
out
pop
imul
mov
adc
inc
stos
sub
mov
mov
es
rcl
stos
sti
icebp
pusha
int3
in
scas
shl
mov
imul
xor
and
aad
out
inc
incb
ror
lock
jmp
sbb
int
test
add
bound
cmc
icebp
je
or
test
sbb
push
mov
sub
test
cmp
out
pop
orl
sub
and
out
mov
mov
mov
test
gs
popa
mov
jbe
and
xchg
dec
push
jle
xchg
leave
sub
jns
and
clc
push
idiv
ret
pusha
pop
push
push
sub
sub
pop
fisttps
pushf
and
or
pop
xchg
sub
pop
stos
xlat
push
fistpll
add
adc
jns
mov
adc
xchg
jns
mov
sbb
in
adc
pop
bound
mov
popf
and
mov
mov
mov
push
gs
outsb
jecxz
and
pop
iret
mov
add
dec
insb
mov
popf
inc
std
push
sub
xor
xchg
push
loope
adc
in
sub
ret
jl
sbb
mov
push
push
lods
xchg
mov
fcomps
mov
aad
ss
data16
cs
push
fdiv
jl
xor
dec
iret
pop
incb
stos
xlat
cmp
in
popf
outsb
push
mov
shrb
mov
out
mov
repz
adc
lock
xor
inc
cld
sub
xor
jmp
mov
push
pop
add
stos
addr16
jmp
fldcw
testb
adc
sbb
jnp
mov
jo
lret
es
mov
mov
lcall
into
mov
pop
cmp
cmpb
scas
pop
fsubl
pop
cmp
dec
popa
sbb
adcb
popa
sbb
sarl
mov
mov
add
mov
mov
pop
call
add
cld
mov
jg
sub
mov
test
scas
js
fcmovnbe
aam
inc
sbb
mov
out
cmpsl
pusha
cmp
iret
insl
jmp
jbe
add
pop
out
les
push
pop
dec
out
adc
mov
sbb
into
idivl
xchg
insl
out
push
clc
scas
xor
push
xchg
rcrl
mov
xor
pop
sti
std
add
or
xchg
push
sar
sahf
nop
adc
fistpll
or
xchg
mov
lea
mov
js
xor
xchg
scas
push
idiv
cmpsl
push
enter
nop
xchg
jle
add
mov
cld
hlt
jns
daa
inc
loop,pt
cmpb
leave
sub
push
inc
sbb
dec
das
js
fcmovnbe
int
outsb
lret
fldcw
adc
fadds
xchg
enter
aad
cmp
pop
mov
cs
mov
addr16
inc
call
test
lea
inc
gs
popa
ljmp
jge
xchg
cmp
fcomps
test
push
fcmovnb
andl
ret
inc
mov
nop
clc
adc
fisubrl
ret
or
inc
mov
sub
or
push
xchg
shlb
adc
scas
mov
movsl
jge
lods
adcl
loop
dec
daa
sbb
mov
rcr
lods
mov
fwait
test
add
repnz
mov
and
jecxz
push
cmpl
jl
sbbb
in
xchg
sub
xor
arpl
sbb
ja
cmp
std
into
jns
xchg
fcompp
mov
ss
xor
sahf
mov
dec
stos
ds
sbbb
sub
fsts
and
scas
jo
call
dec
sbb
negb
jl
mov
pop
xchg
or
mov
pop
sub
xchg
js
mov
xchg
fld
sub
mov
push
sbb
sbb
lret
pop
xchg
cmp
scas
and
aaa
jnp
sbb
movsb
mov
lahf
sub
insl
insl
js
daa
test
mov
ror
int
ret
inc
sub
jecxz
pop
leave
mov
push
ret
sub
dec
mov
jae
xor
lahf
jecxz
push
faddl
dec
lret
iret
pusha
pop
cli
add
loopne
xchg
xor
jge
and
clc
jne
pusha
dec
sbb
mov
popa
stos
jg
jbe
sahf
dec
pop
add
mov
jge
insl
dec
ficompl
sbbb
daa
mov
dec
lcall
adc
out
mov
test
xchg
stos
lock
loopne
enter
or
daa
pop
pop
pop
adc
mov
cmp
jle
fs
pusha
xchg
insb
inc
adc
cmp
lods
test
test
xchg
mov
push
sub
jp
imul
je
ja
sub
mov
shll
test
xchg
les
arpl
adc
mov
cmp
inc
jmp
mov
push
gs
jo
mov
gs
sub
bound
inc
arpl
aas
lcall
in
mov
out
or
inc
cmp
aam
ret
or
sahf
dec
pop
test
sbb
jl
push
sbb
add
and
inc
shl
fisubl
push
xor
sub
and
or
out
arpl
pop
ret
and
mov
test
or
in
add
out
mov
sub
push
inc
sub
addb
loope
xor
fdivrs
loop
mov
in
add
out
rclb
cmp
mov
pop
pop
mov
or
adc
xchg
cmpsl
call
icebp
pop
andl
rcll
imul
jp
jb
incl
sbb
in
loop
adc
scas
pusha
mov
dec
inc
xchg
xchg
and
add
movsb
sbb
xcrypt-ofb
cmpsl
outsl
adc
mov
out
pop
cmp
hlt
add
cld
xchg
sub
mov
aas
sbb
loopne
push
jbe
sarb
fiaddl
sbb
gs
jnp
jp
fwait
or
mov
test
xchg
pushf
stos
sbb
adc
dec
mov
mov
pop
mov
cmp
push
add
lcall
push
shll
jo
adcb
movsb
cwtl
stos
mov
test
mov
adc
mov
mov
loop
test
or
fistpl
jns
rolb
outsb
les
flds
xchg
xor
dec
test
gs
pop
mov
mov
call
dec
and
xchg
movsb
mov
adc
outsb
sub
jmp
mov
pop
or
xlat
mov
jp
sbb
clc
in
popf
sbb
xchg
and
or
adc
int3
rcrb
outsl
std
dec
pop
jno
add
leave
jge
clc
xor
je
icebp
and
dec
mov
fwait
or
cmc
out
xchg
ljmp
inc
cmp
stc
scas
test
cmpsb
inc
dec
nop
lds
push
das
pop
dec
xor
cld
xor
inc
insl
or
test
icebp
or
cmp
clc
sub
jg
xchg
mov
jne
sbbl
or
push
mov
rol
push
pop
addr16
mov
shr
adc
sbb
mov
xlat
dec
xor
mov
jne
std
addr16
cld
das
cld
ss
xor
pop
or
adc
lcall
xor
add
imul
push
mov
cmp
sbb
or
jp
adc
out
hlt
adc
jp
dec
cmp
das
mov
mov
dec
pop
or
mov
rep
ljmp
fcomps
mov
sub
ss
or
add
xchg
pop
out
mov
push
xor
pop
add
rclb
sbb
cwtl
repz
jmp
pushf
sub
mov
push
nop
int3
loopne
int3
fcomps
push
clc
jno
mov
mov
inc
icebp
jle
movsl
popa
pop
push
or
or
je
outsl
cmp
pushf
or
add
paddusw
or
and
sbb
mov
jp
aaa
mov
sub
mov
xor
sti
push
das
mov
sahf
rep
js
fdivrl
add
inc
lret
jbe
push
add
xchg
sub
popf
xchg
sbb
ja
add
jmp
sarb
hlt
lret
sub
loope
cmp
mov
add
and
clc
imul
jecxz
cmpsl
dec
inc
and
scas
add
fs
aas
imul
cld
mov
stos
imul
cmpb
test
pop
stos
or
idiv
and
mov
loope
ja
jmp
xor
out
cltd
sarl
repz
jns
adcb
fsub
adc
mov
cmp
ljmp
or
xor
pop
jbe
ficomps
ficoms
mov
push
les
mov
dec
xor
loope
sbb
sbb
push
fldl
lret
outsl
out
xchg
push
sub
mov
insb
jae
inc
ficompl
rcrl
cmpsl
mov
add
shlb
negb
sub
or
pextrw
lea
nop
mov
lret
push
lret
das
xchg
xor
add
xchg
sbb
leave
enter
xchg
and
lret
mov
hlt
test
outsl
mov
daa
mov
mov
in
mov
push
jge
insl
rorb
notl
xchg
jmp
mov
push
inc
out
cld
loope
cmp
sbb
dec
pop
cmp
xor
fdivs
or
or
jl
jecxz
jge
pop
mov
movl
mov
inc
jmp
loop
sbb
int
pusha
mov
add
jno
or
pop
cmc
jg
xchg
push
xchg
mov
mov
scas
cmp
cmp
pop
mov
shl
pop
cmpsl
push
pop
cmp
push
cld
aad
jno
mov
sahf
xor
data16
repz
adc
add
loopne
loopne
shl
push
push
xor
jne
ljmp
test
cmc
cld
loope
mov
pop
push
scas
leave
loope
lock
call
pop
daa
adc
dec
fdiv
cmp
pop
xchg
push
adc
and
sbb
jge
xor
adc
pop
test
pop
rorb
cmp
sbbl
mov
pushf
push
ja
daa
cmp
cmc
ss
insl
and
xchg
adc
cmp
mov
jae
or
push
adc
nop
insl
in
sbb
and
daa
mulb
sbb
push
mov
ds
sahf
addb
outsb
arpl
xor
dec
pop
push
and
imul
les
testl
push
jle
mov
into
push
adc
pop
jp
xchg
pop
es
movsl
sbb
int3
daa
push
cwtl
cmp
insb
pop
jl
das
sbb
popa
ljmp
cmp
push
neg
pushf
jmp
cld
pop
jbe
push
das
stos
sbb
mov
mov
xlat
aad
xor
insl
and
or
dec
daa
pop
insb
cld
jp
mov
sbb
mov
icebp
arpl
fistl
push
xchg
push
sub
in
lret
mov
std
movsl
add
adc
and
movsl
push
cwtl
sti
cmp
sub
cs
in
mov
cmpsb
es
jg
fdiv
movsb
cwtl
sub
jnp
les
pop
into
push
clc
mov
idivl
frstor
mov
xor
cld
xor
xchg
xor
aam
push
dec
roll
push
cs
cmp
push
inc
jecxz
pop
cmp
les
add
cmp
sbb
int
test
mov
push
xor
xchg
std
orb
mov
into
mov
xchg
rorb
xchg
cmp
sbb
into
pop
lods
fldcw
lcall
fldz
sbbb
subl
add
cmpsl
jmp
mov
aas
and
add
repz
lock
test
stos
std
je
xchg
or
popa
push
jnp
sbb
in
mov
lock
out
xlat
xor
lahf
add
push
pushf
sub
lahf
sbb
mov
bound
ljmp
pop
out
adc
and
inc
push
and
test
or
fs
adc
shll
cs
and
mov
int
mov
pop
ret
dec
mov
jge
cmp
mov
sub
adc
jnp
push
add
sub
addr16
movlps
jno
daa
or
push
loope
ret
xor
push
into
ds
inc
clc
and
cltd
inc
sub
cmp
test
cmp
shll
lcall
pop
sbb
in
xchg
movsl
in
sub
hlt
shl
les
iret
call
sub
mov
hlt
add
dec
sbb
jbe
jbe
dec
pushf
out
mov
pop
mov
out
outsl
aaa
lret
push
movsl
jo
jnp
ja
out
fildl
sti
jle
imul
sub
xlat
int3
cs
mov
fidivrs
jecxz
push
fwait
sbb
pop
sti
jns
cs
nop
out
loopne
addl
addl
ja
push
cmp
in
and
jmpw
sub
fcompl
popa
mov
sub
shll
lahf
ds
ret
inc
out
pop
icebp
adc
cmpsl
int3
jne
je
push
ljmp
jge
xchg
cmp
sbb
jmp
out
arpl
mov
lea
shrb
repnz
mov
sahf
lcall
lret
rolb
dec
subb
jae
mov
jno
repnz
cmp
cld
push
mov
sbb
fs
loope
adc
sbb
arpl
fwait
int
lods
sub
hlt
add
pop
jp
sbb
int
je
cmpb
mov
cli
lret
ror
pop
jge
sub
add
sahf
dec
and
bound
pop
adc
sti
dec
and
mov
or
js
in
jg
and
andl
popf
push
out
adc
aas
mov
push
jl
or
clc
dec
movsl
cmc
ror
pop
mov
add
jno
movq
mov
adc
popa
in
pop
push
sarl
inc
stos
andb
test
mov
cmpsl
sti
sbb
call
div
xchg
push
ljmp
and
movsb
dec
xor
xchg
pop
inc
icebp
pop
push
cpuid
bound
aas
scas
outsb
shlb
mov
add
lahf
in
xor
xor
icebp
adc
dec
popl
jl
aaa
pop
rcll
aaa
nop
sub
js
jo
mov
mulb
lds
xchg
ficoms
in
mov
xlat
sub
sbb
adc
aam
jne
mov
mov
dec
cwtl
stos
movsb
stc
xchg
lds
adc
inc
int
pop
pushf
jl
dec
je
mov
aam
ja
jmp
insb
lret
pop
pop
nop
shl
jecxz
lds
sbb
cmpsl
fs
jge
ljmp
int3
inc
and
fucomp
push
add
cld
fmul
sahf
das
cwtl
sub
dec
jb
pop
in
mov
push
pop
fbstp
out
add
inc
xchg
mov
pop
enter
in
adc
sbb
adc
lcall
inc
jge
pushf
test
and
mov
cltd
push
adc
or
mov
push
inc
insl
jns
loope
inc
dec
jle
jg
mov
outsb
neg
pusha
imul
cmp
adc
movsb
add
pop
mov
repnz
ja
add
dec
mov
lcall
sbb
into
dec
daa
rcrl
mov
mov
or
test
xor
add
popa
stos
rclb
fcoms
ret
sti
jg
push
jl
xchg
dec
les
add
mov
mov
xchg
mov
ljmp
stos
es
add
aad
pop
pop
and
lahf
xor
bound
or
mov
imul
jae
sub
push
inc
sub
es
daa
and
insb
or
sub
insl
xor
lcall
loop
fmulp
jge
cmpsb
sahf
mov
push
ds
mov
movsl
inc
icebp
das
cwtl
sub
bound
or
testb
popa
sbb
addl
jno
fists
dec
mov
rcr
jge
add
rcl
xlat
in
jns
xchg
into
idiv
and
cld
fsubl
jecxz
out
and
filds
nop
in
rcr
rclb
in
in
bound
mov
test
adc
popl
mov
cli
icebp
dec
mov
fsubl
je
pop
cli
mov
cwtl
and
add
cmp
fstl
sbb
xchg
jle
xor
add
mov
mov
sub
jp
push
outsl
and
inc
sub
mov
ja
jmp
and
mov
fimull
mov
loop
or
les
lods
xor
cmp
jns
scas
pusha
pop
sar
mov
imul
cmp
mov
push
mov
inc
sub
cli
mov
jge,pt
jne
fwait
mov
mov
ds
cs
lock
pusha
xchg
jb
push
mov
sub
test
jp
and
mov
in
adc
mov
pop
inc
js
fistl
ljmp
mov
cmp
sbb
push
jnp
xchg
mov
cmp
jp
push
fcmovnu
pop
in
inc
call
cmp
dec
or
or
test
or
pop
cmp
sbb
inc
push
out
sarb
sub
push
adc
lods
test
sbb
ficompl
dec
xchg
and
xor
mov
mov
pushl
push
stc
mov
fwait
dec
je
fildl
test
pop
imul
push
out
inc
call
mov
jle
jecxz
int
jb
out
push
iret
jecxz
in
ds
mov
mov
fstpl
fidivrs
and
xor
push
mov
and
xchg
xchg
cs
aad
xchg
imul
les
jo
dec
aam
sbb
inc
push
mov
imul
test
out
imul
pop
fstpl
mov
pop
cmp
fs
adc
sbb
jge
mov
out
in
mov
lret
stc
addr16
adc
sub
adc
dec
pushf
sub
inc
pushf
mov
pop
jp
movsl
inc
mov
adcl
cltd
and
pop
mov
daa
cwtl
push
out
adc
push
in
add
sub
in
mov
in
ret
cmpl
loop,pn
push
cmp
fimuls
das
dec
cltd
cwtd
sub
push
ret
or
xor
gs
lcall
imul
scas
rclb
push
xchg
rolb
andl
push
rcrl
mov
mov
inc
pop
aaa
sti
shll
xor
jecxz
dec
jns
adc
push
pop
pusha
adc
addr16
int3
movsl
push
cwtl
pop
or
push
push
js
lret
stos
mov
sub
jno
inc
jnp
pop
pop
mov
testl
mov
movsb
inc
jo
loop
adcl
loop
pop
notb
lods
mov
daa
fcmovnb
add
adc
jbe
int
lret
or
leave
xchg
setbe
divl
loopne
aaa
insl
dec
add
hlt
rcrb
push
mov
aaa
add
and
data16
paddsw
loop
mov
sbb
subl
pop
push
lock
pop
cmp
lcall
pop
cld
mov
testl
sarl
lret
xchg
jne
ljmp
jns
add
and
shlb
mov
mov
fldcw
or
mov
aas
pop
hlt
lods
std
cmp
stos
movsb
cmp
iret
sub
push
sub
insb
rcrb
mov
call
pop
scas
pop
xchg
and
scas
aas
mov
adc
aam
jle
call
inc
pop
inc
mov
mov
movsl
pop
cmp
iret
pop
pop
cmc
fcompl
testl
mov
scas
data16
and
nop
sti
stc
jg
in
and
divl
test
nop
pop
cmpsl
xchg
jno
dec
and
mov
add
pop
loopne
in
test
les
lock
xor
xchg
pop
pop
sub
push
sbb
negl
outsl
cmp
xor
mov
mov
arpl
mov
sahf
aam
iret
jno
pop
shl
arpl
lret
or
sub
xlat
mov
test
xchg
and
add
imul
and
xchg
cmp
or
inc
sbb
sbb
test
in
dec
fcomip
out
and
insb
or
out
lcall
cmp
sbbb
ret
mov
cmp
xor
push
rcrb
bound
dec
shr
sbb
sbb
data16
mov
lock
data16
lods
addr16
mov
fistpll
into
mov
add
xor
fistps
rcrb
inc
daa
in
xchg
int3
and
movsb
sbb
lret
stos
mov
cwtl
data16
jle
cmp
push
push
icebp
fmul
aas
sub
inc
xchg
xchg
es
mov
pop
jmp
dec
clc
jp
cltd
add
jne
mov
jl
push
sub
cltd
xlat
jle
divb
push
and
loopne
test
out
xor
ficoml
sarb
xchg
cmp
mov
jmp
js
cmp
jecxz
add
push
pop
pop
pusha
pop
jb
jg
cmp
outsb
sbb
lods
push
or
sub
fnsave
jnp
loop
mov
push
xor
mov
sbb
mov
pop
lods
imul
mov
jmp
insb
pop
jmp
pop
loop
in
insb
push
sbbb
lods
xor
cmp
les
clc
jg
or
cmp
aad
scas
push
cmp
push
or
adc
push
xchg
mov
pop
fcompl
lahf
rclb
rcrb
adc
xor
pop
iret
pop
mov
add
mov
out
mull
mov
cld
pop
and
shl
inc
cmp
mov
sti
push
mov
inc
inc
fidivrs
idiv
rclb
daa
test
add
loopne
pop
out
jp
sbb
dec
in
aaa
sbb
ja
mov
das
cmpsb
add
insb
sub
adc
inc
das
fcomps
cmp
mov
lahf
lock
jmp
out
mov
aad
push
xchg
jl
lock
mov
out
mov
cmc
daa
enter
fs
jecxz
mov
mov
or
sbb
pop
scas
test
jnp
nop
and
sbb
clc
pop
pop
mov
lea
mov
xlat
dec
or
out
ds
cmovnp
aas
lea
inc
mov
pop
fs
cmp
es
fisubrs
test
bound
clc
ja
repnz
and
data16
sbb
nop
cmp
insl
xchg
nop
mov
xlat
leave
sub
mov
sub
cmpsb
nop
add
mov
cmp
dec
leave
pushf
lock
mov
adc
mov
fstl
sbb
fnstenv
pop
call
imul
inc
cmp
push
mov
push
js
pop
ljmp
adc
inc
push
jl
ljmp
sub
mov
xchg
xchg
popw
in
test
dec
jmp
or
inc
jno
sub
sbb
test
xchg
jmp
lods
lret
pop
in
cmp
ror
gs
cmpsl
push
push
rorl
cli
adc
jmp
jle
mov
lods
lods
ret
loope
push
inc
imul
pop
movsb
loop
inc
sti
ja
mov
xor
aas
sbb
stos
arpl
movsl
jne
insb
push
jae
sbb
insl
sbb
inc
lret
jge
lcall
dec
repnz
lret
sub
lret
inc
add
in
sbb
dec
dec
outsb
aaa
pop
aas
add
ret
push
jp
loopne
cwtl
mov
push
out
lahf
rclb
add
mov
pop
scas
in
cmp
xchg
int3
in
mov
xor
sub
pusha
ds
mov
movsl
mov
hlt
nop
adc
fsubr
lods
test
ja
adc
fidivl
mov
pop
adc
cltd
data16
add
or
inc
add
xor
push
js
pop
mov
int3
and
stos
adc
stos
lds
cmp
cwtl
jns
pop
xor
scas
mov
into
xor
aad
mov
shrb
cmpsl
jnp
insb
test
imul
shlb
sub
cltd
push
movsb
mov
cmp
mov
sti
sbbl
daa
pop
mov
pushf
sti
cmp
xchg
push
dec
mov
ja
mov
lock
mov
xor
aaa
xchg
outsl
xchg
and
imull
cltd
les
sub
dec
insl
jl
xor
jbe
outsl
andl
pop
add
jnp
push
and
outsb
dec
sub
scas
out
or
dec
pop
or
ret
pop
inc
testb
test
push
xlat
das
das
jno
sbb
xor
or
nop
sub
mov
mov
loop
dec
call
adc
lea
cld
imul
xor
sub
fistl
jl
mov
leave
xchg
xchg
jge
or
bt
test
mov
jns
jl
mov
lods
mov
popa
loope
jne
loop
push
inc
mov
sub
mov
and
mov
jle
dec
sbb
inc
pop
js
ret
pop
sbb
jbe
les
jno
jnp
adc
jae
xor
imul
pushf
outsl
add
jl
stc
enter
out
adc
mov
loop
mov
mov
out
pop
mov
stc
sub
jecxz
in
jecxz
dec
or
fwait
dec
mov
mov
rcl
cmp
or
xchg
rorb
loopne
mov
xchg
lods
mov
subb
fwait
outsb
sub
inc
and
jecxz
xor
inc
nop
shl
rolb
lret
and
mov
dec
mov
aas
sub
mov
mov
xchg
sarl
mov
hlt
push
adc
cmp
mov
fwait
insl
xchg
inc
stos
dec
insb
cwtl
idiv
arpl
xchg
push
loop,pt
shll
fmull
insb
lock
lea
xchg
jb
push
dec
jb
xor
loop
arpl
in
and
cmp
das
ds
test
nop
dec
mov
in
loope
scas
adc
push
loop
shl
jle
jmp
out
adc
movsl
repnz
push
mov
xchg
js
jnp
leave
ss
ljmp
mov
movsb
mov
out
xchg
gs
mov
fldenv
js
je
loopne
mov
mov
lret
mov
mov
mov
pop
inc
or
idivb
fisubs
jmp
xor
mov
lahf
push
in
bound
or
lods
mov
mov
call
leave
scas
or
orl
mov
ds
int
dec
and
aad
imul
add
jb
shl
mov
hlt
fstpl
inc
fwait
dec
mov
xor
push
inc
push
jmp
dec
orl
shrb
xlat
loopne
mov
jmp
push
or
aas
popf
push
adc
add
test
lcall
inc
mov
sub
sbb
int3
push
fisubl
into
lret
imul
inc
cmc
aas
sub
push
mov
push
push
cmp
adc
ret
ret
aaa
sbb
mov
xor
arpl
mov
les
jns
cwtl
js
mov
pop
xor
cld
insb
pop
loope
inc
sub
pop
js
loope
and
push
jmp
je
adc
push
xchg
divl
mov
cmc
aad
and
jp
xchg
fcmovbe
mov
fidivs
bound
test
sbb
and
cmp
mov
inc
mov
dec
ljmp
or
pop
and
add
jb
push
or
fs
pop
into
pop
sahf
push
xchg
lret
jecxz
jle
fwait
jns
aad
into
ss
sub
dec
lds
adc
cmp
rcll
sub
mov
cltd
cmp
scas
mov
jno
push
or
push
outsb
repnz
sbb
test
jl
data16
xchg
dec
pop
cwtl
push
dec
icebp
lds
add
add
cmc
adc
in
push
movsl
imul
push
pop
pop
mov
cwtl
sti
lret
cltd
sbb
hlt
sbb
lret
xor
ljmp
fwait
cmpsl
mov
sub
cs
cmp
test
lea
mov
sub
lods
cmp
mov
mov
inc
push
scas
adc
mov
and
sbb
icebp
lock
xchg
ficompl
mov
pop
mov
dec
js
inc
push
std
js
testb
ficomps
mov
shrb
jno
js
imul
add
xor
or
subl
push
add
sub
push
sub
test
insb
bound
sbb
sub
jne
jne
insb
push
mov
addr16
sbb
pop
int3
inc
pop
push
inc
movsb
es
xor
fwait
dec
xchg
popa
dec
sub
bound
jmp
ds
adc
lds
pushl
mov
mov
jae
outsb
movb
mov
xor
push
es
test
enter
iret
jmp
test
aaa
sahf
lds
xor
cmp
push
int3
pusha
stos
cmp
test
dec
ret
into
je
mov
test
test
insl
jae
ret
push
push
mov
dec
int3
enter
adc
add
stos
mov
mov
mov
or
inc
or
iret
mov
cmp
mov
jb
jp
fisubl
in
flds
into
push
dec
xor
adc
cmp
js
sbb
enter
hlt
xor
sub
adc
int3
stos
mov
divl
movb
icebp
xchg
push
push
ljmp
adc
fsts
sbb
repz
dec
outsb
xchg
mov
mov
mov
add
std
enter
mov
xchg
mov
mov
mov
add
or
sub
cwtl
in
in
leave
test
aas
movsl
pop
popf
and
sbb
stc
inc
lret
add
cld
pop
rcll
or
add
ds
sarl
push
mov
dec
sarb
dec
and
jecxz
add
fwait
dec
or
or
add
add
push
filds
clc
mov
pop
xor
fistps
push
icebp
inc
sar
push
sub
nop
pop
sarb
movsb
push
repz
or
xchg
or
cwtl
add
and
lods
jbe
mov
xchg
lea
lretw
imul
out
jnp
fimuls
je
mov
sbb
inc
outsb
push
adc
pop
and
fs
call
int
push
xchg
aad
pop
rclb
mov
cld
mov
adc
imul
xchg
aas
leave
add
adc
pop
mov
lret
adc
dec
dec
ds
inc
xchg
mov
data16
iret
in
mov
mov
arpl
and
outsb
outsb
not
add
pop
jecxz
clc
adc
sub
ret
sbb
scas
add
aam
pop
lcall
cwtl
repnz
cmp
push
mov
stos
pop
aad
sbb
sarb
outsb
das
dec
aaa
outsl
out
jecxz
nop
xlat
jle
xchg
std
jne
lods
xor
daa
aad
imul
gs
jbe
xchg
std
aaa
mov
sbb
call
mov
add
dec
int
xor
cmpsb
in
mov
push
pop
aad
out
mov
cmc
inc
loope
add
sub
imul
subl
inc
lods
xchg
lahf
and
adc
mov
cmp
cmp
leave
mov
ss
movl
jle
fdivp
gs
jne
push
aas
repz
mov
pop
jge
jb
out
and
mov
es
mov
add
lret
or
xor
cvtpi2ps
xchg
ljmp
or
jmp
fs
es
inc
push
fisubrs
lret
lods
bound
xchg
or
xchg
or
inc
pop
imul
ret
test
loopne
jge
imul
cmp
bound
insb
sub
stos
sub
inc
push
push
dec
mov
xor
cmc
mov
int
and
inc
mov
mov
fildll
in
mov
add
aam
call
stc
jl
test
lcall
jle
es
pop
cld
fadds
fadds
mov
pusha
add
fs
stc
push
dec
mov
push
shll
icebp
ficoml
or
pop
rcrl
es
popf
jbe
lds
mov
or
sahf
cmpsb
popf
cld
mov
clc
ljmp
xchg
xor
inc
out
cmpsb
cmc
movsl
mov
xorl
mov
mov
mov
loopne
adc
insl
cmp
mov
leave
fnsave
or
jb
or
xlat
xchg
or
or
xor
mov
or
xor
and
orl
pushf
mov
xor
call
push
fwait
sbb
add
add
scas
xor
rcll
ljmp
test
js
stos
jno
dec
mov
xorb
test
sbb
iret
cld
xchg
lock
inc
out
sub
stos
in
mov
inc
pop
mov
jp
lea
in
mov
mov
xor
sub
xor
bound
mov
cmp
add
adc
add
push
fmull
cltd
mov
outsl
jle
iret
clc
inc
bound
test
mov
in
xchg
loope
and
pop
pop
rol
xor
mov
mov
push
cmp
adc
test
fidivrs
pop
mov
arpl
cld
mov
cmp
out
push
or
or
out
test
pop
subl
call
and
lock
imul
sbb
pop
cmpsb
sbb
mov
iret
inc
in
pop
inc
mov
add
sbb
pop
dec
xchg
xchg
stc
jp
mov
fldenv
cmc
test
sbb
pop
sahf
incb
mov
and
or
mov
rcll
jge
mov
or
inc
pop
mov
sub
repz
adc
rcr
push
data16
pushf
push
push
pop
iret
call
push
in
cmp
xchg
mov
jns
andl
pop
xchg
dec
shll
test
mov
test
inc
cwtl
mov
mov
scas
adc
push
notb
or
sub
rclb
movsb
jno
into
lret
lea
bound
mov
addr16
xor
test
stos
push
mov
xchg
fwait
dec
in
das
sub
jae
aas
shl
repz
add
sti
dec
xchg
pop
pop
pop
jmp
dec
mov
pop
cmp
push
and
mov
mov
mov
iret
sti
or
mov
movsb
lahf
mov
test
jl
mov
les
outsb
leave
cmp
into
cmp
or
les
dec
sti
outsl
in
push
inc
push
lods
cs
rcrl
daa
cli
dec
xchg
adc
lods
int3
pop
movl
dec
lcall
lea
notb
mov
movl
rclb
push
inc
and
sbb
cmpsb
or
or
xchg
out
mov
int3
mov
sbb
cmpsl
dec
jmp
add
mov
mov
gs
push
add
mov
xor
xchg
xchg
mov
pop
gs
repnz
fstpt
push
mov
lods
test
dec
loop
loopne
pop
aam
int3
jge
cli
mov
movsb
mov
push
pop
js
adc
int3
mov
jecxz
lock
movl
fdiv
popf
std
negl
inc
shl
enter
mov
xor
xor
xor
mov
aas
out
lock
insl
jle
mov
icebp
add
loop
sub
aaa
je
mov
jo
cmpb
mov
mov
and
xchg
xchg
xchg
lcall
and
cmp
stos
sbb
or
inc
popf
push
xchg
cmpsb
test
cmp
pop
scas
iret
pop
test
xchg
scas
pop
notl
jae
mov
test
test
dec
int
mov
push
ret
fisubrl
ss
push
call
int3
jbe
mov
pop
dec
or
sub
xor
push
pop
add
fistps
mov
das
call
incl
lahf
fldt
jmp
rol
lock
rcll
push
fstpt
lock
cmc
pop
jo
sbb
pop
pop
mov
outsb
jecxz
imul
mov
xorl
jnp
sahf
imulb
pop
xchg
inc
nop
aas
push
or
lahf
ljmp
dec
jle
mov
xchg
shl
and
add
fstpl
dec
shll
sub
arpl
add
xor
mov
push
out
stos
push
jge
mov
andb
outsl
mov
push
xorl
push
aas
imul
aaa
mov
aas
inc
xlat
test
data16
ds
andl
aam
mov
pop
ljmp
mov
shl
in
fsub
cwtl
xchg
or
dec
pop
mov
stos
inc
test
lret
add
mov
movsb
scas
fimuls
sub
ljmp
fildl
xlat
loop
push
hlt
mov
and
fwait
cli
mov
pop
sub
pop
xchg
les
pop
inc
jge
insb
sub
lret
xchg
xor
and
iret
andl
movsb
mov
mov
mov
add
stc
pop
xor
inc
leave
pop
roll
imul
in
pushf
sub
mov
inc
mov
or
inc
enter
pusha
jbe
sbb
repnz
jnp
sbb
add
mov
les
dec
stos
frstor
bound
cmp
int3
rclb
das
cmpl
xorl
mov
dec
sub
xchg
cmc
add
and
xlat
push
pop
pop
les
bound
dec
xchg
insl
mov
jg
adc
and
flds
popf
sbb
stos
stc
jae
cli
movsl
or
orb
and
shlb
jae
out
repz
mov
pop
scas
mov
jae
enter
les
and
add
dec
sbb
jp
je
and
xchg
movsb
lds
leave
into
mov
dec
push
lods
push
cmpsl
and
add
in
adc
je
dec
ss
ret
mov
gs
dec
repnz
xor
addr16
mov
pusha
addl
jb
jge
sub
add
inc
test
sub
mov
dec
jae
addr16
sbb
and
rorb
ret
cli
jg
imul
sbb
lret
add
shrl
pop
call
mov
scas
jmp
outsl
stos
add
dec
pop
jne
mov
xor
xchg
cli
clc
mov
mov
out
dec
or
cwtl
mov
shll
pop
fists
cmp
mov
mov
scas
push
scas
lret
xchg
lret
sub
mov
mov
lret
mul
scas
jp
ror
xor
loope
mov
add
repnz
xchg
mov
idivl
mov
fimuls
stos
and
aam
out
cmp
jp
mov
and
mov
in
sbb
mov
cwtl
xor
mov
lds
add
sbb
lahf
scas
stos
push
inc
cmp
inc
pop
leave
subl
cmp
js
cs
push
loope
push
cmpsl
cmpsl
cltd
mov
pop
ret
fisubl
push
or
or
clc
outsb
inc
inc
iret
push
jne
scas
jbe
je
scas
test
cwtl
es
shrb
enter
jnp
addl
popa
pminub
repz
xchg
lods
push
iret
lret
xlat
pushw
xchg
enter
je
ljmp
mov
mov
adc
movsb
add
cltd
jle
lock
dec
enter
push
jl
push
mov
inc
pushfw
addr16
xor
pop
mov
jmp
pushf
push
or
mov
sub
jp
insl
push
add
dec
xor
out
xchg
xchg
cmp
mov
inc
pusha
xor
pop
pusha
ret
xor
movsl
arpl
mov
je
ficomps
mov
enter
jno
and
push
ljmp
iret
stos
cli
outsl
fst
rcll
jbe
push
cld
lods
pop
cli
xor
mov
test
cmp
mov
gs
rclb
jne
adc
mov
imul
and
dec
add
sbb
pop
aad
cmp
aad
adc
mov
xchg
or
cmp
loop
test
xchg
mov
cltd
cmp
dec
mov
scas
mov
dec
sub
adc
adc
mov
lahf
lahf
repnz
push
mov
mov
iret
jmp
mov
cmp
or
loopne
mov
insb
enter
mov
adc
or
cli
push
lcall
cmpsb
shrl
popa
test
push
or
lods
arpl
push
loopne
jge
jnp
mov
or
push
test
pop
sti
mov
add
and
mov
cmp
jp
mov
cld
xor
pusha
gs
mov
das
push
or
das
adc
pushf
je
pop
loop
mov
mov
sbb
jae
xchg
loop
add
or
mov
push
fsubr
or
push
shlb
mov
cs
adcb
xchg
mov
sub
lea
movsl
loop
inc
sub
cmp
das
pop
dec
loopne
out
outsb
push
adc
fwait
xor
pusha
lea
lea
mov
leave
pop
setle
into
jge
cmp
int
repnz
cmc
lods
fnstsw
mov
adc
mov
into
mov
and
dec
stos
sub
cmp
or
push
adc
sbb
aas
iret
inc
shlb
mov
daa
lods
or
sub
mov
cs
dec
shrl
sub
xor
out
fldl
xchg
mov
rcl
xchg
insl
xor
jbe
push
xchg
sbb
lds
pop
cmp
and
cld
xchg
lods
nop
iret
int3
mov
test
int
adc
and
test
lods
sub
pop
loope
cwtl
inc
mov
and
outsl
insl
mov
push
or
cli
test
dec
xchg
jl
cmp
ret
stos
fsin
mov
movb
xor
bound
jp
lods
sub
and
insl
fcmovbe
jp
orb
insl
jne
out
push
in
fstl
mov
cltd
cmp
sub
repnz
aam
scas
push
popf
sub
mov
xor
push
mov
outsb
push
out
cmpsb
shl
pop
sub
cmp
or
cmp
mov
lahf
mov
sahf
dec
and
js
push
mov
inc
fidivrl
aas
push
movsb
xor
out
push
xlat
test
mov
or
sbb
cmp
jno
xchg
rorb
iret
negb
shll
mov
cmp
mov
pop
cli
data16
sahf
sbb
jl
jge
and
sub
fadds
mov
sub
dec
add
orb
insb
es
cmp
push
insl
jmp
jmp
lea
sbb
xchg
mov
cmp
fisttpl
test
pop
mov
cmp
ds
dec
lahf
add
cmpsl
push
lret
add
shll
andnps
scas
flds
lret
cli
or
jbe
pop
add
jecxz
mov
int
jno
lock
add
add
clc
mov
sub
sti
cmp
mov
sub
inc
mov
sbb
push
dec
pop
popa
psubusb
mov
pusha
mov
cli
daa
ljmp
pop
sar
cld
mov
xchg
daa
sbb
inc
mov
scas
cmp
adc
inc
or
mov
fisubl
or
test
xchg
imul
imull
mov
pushf
jno
cmp
fisubs
mov
jle
dec
fnsave
xchg
mov
ret
leave
xchg
dec
inc
stos
sub
shll
push
and
cs
xchg
mov
jne
mov
std
jg
xchg
jg
mov
mulb
cmpsl
rcl
and
xor
pop
pop
pcmpeqd
and
mov
les
adc
loope
jmp
rorb
das
pushf
add
inc
mov
jg
cmpsl
push
rcl
mov
mov
imul
pop
inc
push
dec
sbb
mov
mov
lcall
cmpl
aam
dec
xchg
xor
sub
sbb
ljmp
lds
repz
cmc
lret
call
or
loope
lret
xor
popf
sahf
loope
hlt
imull
fcoml
jl
pushf
inc
adc
inc
repnz
cmc
jle
mov
push
mov
xchg
or
inc
not
fnstsw
lock
cmpsl
mov
fists
shrl
fidivl
test
or
push
out
fisttps
and
insb
ficompl
rcrl
imul
add
add
xchg
sbb
test
outsb
mov
jo
mov
pop
repnz
mov
pop
jg
inc
xor
lret
dec
cltd
je
cs
sbb
pushf
xchg
fdivrl
xor
fistpll
testl
dec
cs
push
testl
xor
adc
xor
dec
shll
jb
or
adc
push
mov
stos
sub
mov
add
mov
fsubs
ds
stc
popaw
lret
xchg
loopne
rcrl
dec
in
mov
pop
je
mov
jp
adc
pop
jl
mov
js
adc
mov
xor
addb
movq
test
setg
inc
or
push
mov
jecxz
fldt
ss
sbb
sbb
pop
popa
negb
clc
test
cltd
mov
lcall
cs
push
out
mov
es
lds
loopne
dec
in
arpl
out
insb
in
or
jg
rorb
loop
cmp
jae
cli
xchg
sbb
mov
and
push
jo
incl
push
std
add
and
push
mov
loop
ror
test
mov
ret
inc
movsl
adc
gs
imulb
jne
inc
or
daa
aas
mov
movsb
ja
cmpsl
dec
or
push
jnp
mov
aaa
mov
ret
cmpsb
push
mov
mov
jge
loopne
push
sbb
mov
out
cmp
push
fiadds
mov
and
mov
ficoml
cli
dec
add
jmp
sbb
shlb
dec
sahf
push
sbb
out
jecxz
jb
cmp
fcoml
gs
rclb
ret
inc
sbb
ret
icebp
aad
loop
out
test
aaa
jg
aas
lret
pop
aaa
shrb
int
imul
int3
jo
movsl
lret
call
ja
int
jae
mov
sahf
gs
fs
add
or
xchg
addr16
mov
or
sarb
mov
cmp
aad
cmp
mov
bound
popa
sbb
inc
or
in
pop
sar
mov
fidivrl
cmp
clc
or
sbbb
jmp
ror
push
mov
pop
arpl
in
aam
pop
xorl
pop
lock
dec
push
sbb
adc
rcll
bound
int
push
inc
xchg
jle
mov
std
and
adc
sbb
push
out
push
xor
sub
aaa
out
push
mov
cmp
push
jb
mov
fsubrl
cs
sub
sahf
sbb
fldenv
dec
xlat
adc
mov
sarb
out
pop
popf
arpl
data16
std
xchg
mov
orb
jbe
leave
repnz
jle
rclb
lods
sub
fdivl
lods
jmp
in
pop
inc
push
xor
jg
es
stc
dec
fiadds
lods
jmp
cmp
xlat
or
jae
nop
mov
roll
shrl
mov
std
scas
dec
mov
jge
dec
pop
fs
jmp
adc
int3
xchg
arpl
mov
rcrb
xor
sub
mov
stos
negb
call
cwtl
ja
jecxz
xchg
inc
mov
mov
xor
xor
test
dec
add
in
dec
xchg
stos
movsl
or
mov
jbe
movsl
xchg
fbstp
cmp
insb
shll
pop
fisubrs
inc
add
sbb
aas
jb
je,pn
xor
icebp
mov
inc
mov
mov
ja
outsl
mov
pop
sbb
popa
jg
sub
out
int3
sbb
mov
jecxz
or
mov
pop
pop
fcmovnbe
mov
roll
cmp
pop
xchg
cmp
add
cmp
fldcw
pop
dec
push
xchg
xor
jae
cld
loopne
add
mov
daa
dec
ret
ds
lahf
sbb
into
jnp
cmp
jno
mov
ja
cmp
mov
jnp
inc
out
shrb
mov
and
test
pop
cmpsb
in
jne
enter
jge
sbb
sti
inc
mov
rcrb
nop
je
sub
mov
sub
je
lret
and
inc
sub
dec
jecxz
sub
pop
cwtl
add
jle
addl
dec
or
pop
stos
lcall
and
mov
and
inc
test
sbb
popl
xchg
add
mov
dec
jge
test
aam
mov
insb
sti
sbb
sbb
add
lcall
cltd
or
pusha
sub
pop
js
xchg
rclb
mov
xchg
shrb
mov
inc
pop
outsl
xor
out
and
adc
incl
in
loopne
or
adc
shll
int
cwtl
mov
mov
ficoml
fsubrs
pop
pop
out
fldl
in
sub
mov
mov
sbb
pop
xchg
mov
mov
adc
mov
in
sbb
sbbb
into
popf
xchg
je
sti
test
sbb
daa
mov
aas
int
lea
mov
and
icebp
pop
in
lret
push
jns
pusha
test
mov
xor
loop
sbb
push
sub
dec
and
sbb
xchg
out
cmp
pusha
arpl
pusha
enter
pop
push
cmc
scas
rcrl
inc
mov
inc
push
ror
cltd
test
inc
xchg
xchg
dec
ret
mov
pop
cmpsb
in
bound
xchg
and
cmpsl
mov
inc
cmpb
ds
fcmovnb
test
shll
sub
sti
push
adc
test
sub
test
rcll
mov
rorl
xor
pop
pop
iret
inc
inc
mov
cli
mov
xchg
enter
xchg
jl
sub
jnp
push
xchg
mov
shl
add
ret
inc
mull
cmp
push
shll
adc
call
movl
in
xchg
dec
dec
inc
adc
repnz
fisubs
push
and
pop
loop
or
or
js
cmp
ja
shlb
xor
cmp
adc
mov
dec
cltd
stos
sub
addr16
mov
mov
fisubs
jb
test
dec
sbb
dec
mov
dec
jmp
roll
daa
hlt
xchg
mov
rcl
cmp
dec
das
out
in
push
sub
push
insl
aam
fistps
fnstcw
jmp
or
clc
inc
ja
mov
jnp
dec
ds
push
stos
xchg
mov
sub
data16
lahf
sbb
pop
in
push
adc
out
fstpt
mov
cmpsl
sbb
je
mov
dec
popa
into
rcrb
jg
es
enter
mov
add
xlat
cld
popa
mov
loopne
repz
mov
mov
in
lods
test
fiaddl
and
ficoml
mov
mov
inc
nop
jmp
inc
pop
js
cmp
outsl
jae
cmp
aad
add
cmp
test
mov
popf
add
in
sub
inc
xor
xchg
cld
mov
js
imul
ret
xor
push
lcall
decb
push
imulb
pop
and
inc
sahf
cmp
test
and
dec
xchg
fstl
mov
pop
testl
cwtl
jg
mov
pop
repz
mov
mov
lock
jp
mov
adc
sbb
jno
iret
rcrb
or
cmc
xor
or
clc
jne
shrb
sbb
fcoml
enter
push
jo
inc
adc
sbbl
gs
cld
sbb
adc
pop
or
xchg
sub
xor
pusha
stos
das
xchg
mov
or
mov
pop
add
mov
inc
test
inc
test
xor
rcl
ficomps
adc
inc
outsb
add
sbbl
dec
outsl
scas
sub
adc
sub
jne
push
loopne
add
ljmp
inc
aam
inc
imul
loope
mov
and
sbb
rorb
lret
mov
inc
stos
mov
lds
mov
in
leave
outsl
fidivrl
loopne
les
outsl
dec
into
mov
adc
fdivrl
movsl
testl
fbld
pop
notb
nop
jno
mov
loopne
xchg
add
lcall
push
jle
rorl
sti
cmc
mov
cmp
loop
jmp
lahf
sbb
outsl
movl
and
cmp
mulb
adc
out
push
push
or
adc
out
mov
sbb
inc
mov
xlat
cmpsb
fwait
mov
pop
fcmovne
icebp
dec
push
mov
ret
decb
fisubl
push
add
es
scas
pop
je
dec
push
add
mov
test
aaa
jae
in
adc
dec
inc
stos
mov
addr16
pushf
xchg
xchg
pusha
xchg
sub
dec
lret
jle
jmp
and
jns
adcb
xchg
xchg
test
testb
adc
sbb
test
inc
fsts
add
cltd
mov
jb
or
push
mov
cmp
das
mov
lcall
mov
clc
in
movsb
jl
movsb
push
or
mov
orb
sbb
cmc
add
lods
fdivrl
xor
icebp
sub
lret
mov
jo
jg
sti
xchg
scas
pop
jno
mov
cltd
pop
and
call
fwait
in
dec
xor
mov
push
or
pop
xor
cmp
aas
sub
xor
popf
xchg
and
jmp
pop
imul
scas
cld
popf
test
jnp
aam
bnd
imul
pop
and
clc
add
fimuls
xchg
into
repnz
ret
les
fistpl
sub
and
mov
sub
stc
or
xor
xor
ret
xor
xor
inc
jmp
or
cld
xchg
push
or
mov
push
xchg
mov
bound
js
pop
sub
call
cmp
int
mov
push
popf
add
push
testb
outsl
sbb
pop
repz
cmp
je
cmpsb
lahf
and
inc
push
notl
cmp
daa
ror
outsl
xchg
push
sbb
int3
sbbb
adc
sbb
fdivrs
rolb
sarl
pop
gs
dec
xchg
add
mov
sbb
xor
and
pop
insl
jg
cs
and
stos
pop
adc
jl
iret
lock
rclb
outsl
addr16
adc
sub
loop
lock
sub
cmp
add
nop
into
pop
shlb
xor
test
cmpsb
rcr
or
add
ljmp
repnz
jmp
ja
push
and
loop
lahf
mov
sub
sbb
jbe
adc
ret
fwait
mov
shlb
mov
daa
dec
pop
mov
cltd
mov
dec
push
aas
jnp
push
push
pop
fisubl
jne
and
loop
iret
insb
scas
mov
mov
inc
sub
outsl
adc
push
int3
pop
push
jns
inc
out
sub
and
mov
aam
mov
jl
insb
and
scas
notl
jb
sbb
push
sbb
xlat
in
call
cmpb
enter
push
add
jg
out
popl
rol
and
ja
rorl
lods
into
sbb
cmp
popl
dec
jo
pop
mov
jg
repz
and
cld
push
push
cmc
test
jp
mov
ljmp
adc
cmp
lcall
stc
mov
nop
sbb
jecxz
xchg
sti
jmp
xchg
aad
mov
stos
adc
inc
or
idivl
inc
aam
dec
shl
pop
jecxz
inc
iret
pop
lock
in
mulb
dec
out
cmpsb
lods
mov
sbb
hlt
mov
lcall
push
repz
mov
loope
loopne
push
add
jo
in
mov
cli
push
sbb
push
jo
sbb
mov
cmp
mov
int
into
shrl
loop
inc
cs
push
push
sbb
mov
out
xchg
in
call
or
mov
cs
jge
int3
pop
andb
mov
fidivrl
negl
cli
jne
dec
in
rcrl
out
lret
sub
lcall
iret
lea
popa
fiadds
xchg
ja
mov
loopne
mov
std
jg
hlt
or
cmc
shrl
jg
jo
and
testl
aaa
std
add
clc
mov
sbb
inc
gs
add
mov
fdivs
dec
xchg
std
clc
xor
lock
or
and
clc
shll
mov
xchg
dec
rorb
paddsw
popf
jae
mov
faddl
std
je
sbb
mov
and
xor
mov
dec
inc
dec
mov
in
and
dec
pop
cmc
scas
xchg
mov
cli
or
inc
dec
call
jnp
mov
xor
ret
clc
sub
inc
jns
and
testl
ret
movsl
xchg
push
mov
dec
pop
inc
mov
xchg
mov
inc
pop
aaa
call
into
fisttps
inc
xchg
sbb
mov
sub
or
jo
lcall
fsts
xor
push
jnp
in
or
je
inc
popf
nop
loope
adc
inc
pop
aas
aaa
inc
fisttps
inc
cmp
bound
aad
xchg
cmp
mov
movsb
orl
xor
cmpsb
movsb
mov
bound
loope
lcall
mov
sbb
xor
pop
cmp
shrl
sbb
ja
and
pop
sub
mov
cwtl
rcll
movsl
push
xchg
or
cs
sub
shll
adc
mov
mov
fstpt
aaa
cmpl
rcl
pop
push
or
stc
shlb
loopne,pn
mov
pop
jmp
call
fs
lea
gs
jb
and
pushf
aad
jbe
pop
cwtl
call
stos
lret
jl
cli
inc
xchg
lret
jecxz
sahf
cmpsl
loopne
push
mov
sar
cli
add
clc
icebp
push
push
push
pop
dec
aaa
fistpll
scas
jmp
sbb
fistpll
mov
mov
and
and
mov
pusha
insb
jnp
push
in
fistps
adc
sub
sbb
scas
popa
fwait
mov
in
sbb
adc
daa
jg
xchg
and
mov
cs
add
fwait
cmc
jbe
pop
roll
inc
pop
loop
fs
push
fxch
sbb
dec
push
outsb
push
loopne
mov
add
mov
mov
xor
cltd
dec
faddl
pop
pop
mov
test
jg
outsb
sahf
jp
and
pop
lea
int
mov
int
fldcw
cs
and
icebp
in
jg
xchg
int
inc
add
loop
xchg
jmp
in
cmp
pop
imul
out
jg
add
inc
inc
mov
cltd
inc
sbb
inc
int3
loopne
or
jecxz
dec
sahf
dec
inc
jl
jecxz
pop
je
mov
jo
mov
stc
inc
push
enter
lock
jns
pop
mov
scas
cmp
dec
dec
fstpl
dec
adc
add
pop
pop
dec
std
in
arpl
ja
mov
pop
clc
icebp
dec
nopl
jae
mov
test
shrl
fs
lea
inc
push
adc
shr
lock
sbb
push
xchg
insb
pop
les
pop
mov
inc
cmc
rclb
fbld
mov
and
mov
orb
push
lds
and
mov
fnstenv
jbe
mov
jg
leave
nop
dec
push
es
xlat
stc
outsb
adc
xor
cld
subb
or
xchg
icebp
cwtl
mov
shrb
jecxz
xor
fcmove
je
mov
out
and
sub
jae
jbe
lret
xor
mov
push
je
mov
cmp
or
jns
clc
pop
sbb
aad
jle
movsb
push
scas
outsb
push
xchg
push
adc
push
cmpsl
in
sahf
loope
sub
lods
sbb
dec
je,pn
jmp
adc
xchg
inc
lahf
jg
mov
test
shrl
fs
pop
cmpsb
lahf
into
xchg
push
ficoms
fsubrs
push
mov
jne
add
stos
dec
or
repnz
inc
dec
lahf
push
mov
jo
add
lcall
jge
jmp
test
inc
dec
xchg
cli
cmp
inc
push
sbb
fcmovne
jle
xor
cltd
mov
mov
leave
ljmp
iret
jne
xlat
add
add
sub
sbb
imul
cmp
mov
lret
add
mov
jg
inc
xchg
sub
fs
mov
pop
mov
js
sub
add
popf
pop
out
fcoms
cld
cltd
lcall
xacquire
ret
cmp
movsl
add
mov
jb
sub
loopne
push
push
scas
mov
or
pop
push
xchg
mov
dec
cs
into
andb
dec
int
mov
out
test
mov
js
push
cmpsl
lret
inc
or
pop
movsb
mov
cmp
in
push
sub
xchg
dec
xchg
or
sti
int
xchg
repz
inc
dec
lods
mov
and
xchg
add
inc
je
aaa
test
sarl
ds
jp
fmul
push
aam
or
and
xchg
xchg
jg
nop
clc
repz
cmp
js
mov
cmp
out
jle
and
shll
orb
fldl
movsl
scas
add
sbb
fsubrs
sarl
stc
mov
xchg
loope
push
movsl
out
cmp
sbb
lret
xor
push
jnp
shlb
adc
aas
add
repz
dec
lds
pop
out
test
mov
daa
cmc
das
in
aad
jle
xor
ror
int
test
stos
aad
pop
sub
or
pop
push
inc
jbe
pop
push
xchg
lock
gs
addr16
fst
sti
mov
push
mov
cmpsb
stos
sub
xchg
stos
mov
repz
mov
popa
mov
test
lods
xchg
addl
mov
in
je
or
fisubl
sahf
scas
aam
xchg
lcall
in
les
jge
pop
sub
pushf
lahf
adcl
arpl
pop
fcompl
push
cmp
bound
mov
cmp
clc
jmp
scas
in
subb
out
xchg
xchg
xor
sarb
xor
xchg
testl
mov
mov
mov
sbb
adc
gs
jp
push
xchg
sbb
shr
int3
lcall
jns
mov
xchg
or
les
inc
dec
xor
xchg
dec
or
popa
mov
and
jae
lret
jge
mov
sahf
cmpsl
pop
dec
jbe
cmpsb
popa
mov
add
popf
inc
dec
out
inc
pushf
mov
lea
stc
fimuls
test
daa
and
arpl
in
iret
and
icebp
inc
shll
or
jle
or
test
repz
push
pop
stos
pop
jns
mov
and
in
hlt
xchg
push
shr
dec
aam
in
pop
dec
and
push
sbb
loopne
sub
icebp
roll
aam
cmp
xor
insl
mov
add
add
push
fidivl
cs
sbb
xchg
cli
push
mov
setge
fdivr
xchg
xor
pop
inc
sub
mov
mov
outsl
sahf
enter
push
pop
sub
std
mov
sbb
jle
sarb
in
lods
cmpsl
hlt
inc
int3
pushf
jns
lret
cwtl
stc
mov
adcl
rclb
popl
mov
fbstp
popf
push
and
dec
jo
mov
sub
in
popf
pop
mov
adc
addr16
aad
gs
add
mov
out
xchg
mov
dec
repz
in
imull
es
mov
push
ds
int
push
adc
adcl
mov
mov
cli
cmpb
addr16
xor
xchg
cs
adc
dec
xchg
aad
jae
fsubrl
rorb
in
jmp
dec
lea
fs
inc
addr16
sbb
sub
cmp
cmc
jae
push
fists
call
cltd
cmpsb
inc
jle
dec
fcomp
jnp
xchg
and
fildll
xor
lret
std
fsubs
or
cltd
inc
in
jecxz
inc
loope
xchg
inc
shll
sbb
mov
ja
adc
in
sbb
xchg
movsl
adc
push
jecxz
xchg
dec
rcl
xchg
hlt
scas
scas
repz
and
popa
int3
mov
ret
xlat
adcb
mov
mov
pop
int
repz
arpl
sarl
cmp
sub
dec
arpl
imul
lcall
sub
adc
imul
push
push
nop
aam
imul
adc
cmp
xor
mov
mov
jg
pop
cmp
fcomps
mov
cmp
int
mov
push
imul
jnp
mov
push
adc
addb
sub
lods
dec
mov
cltd
lods
int3
cmpsl
inc
xchg
or
cltd
ja
or
adc
in
aas
pop
sbb
mov
js
adc
xchg
adc
cmp
fcom
push
cmp
pop
push
push
iretw
adc
jo
mov
inc
mov
sub
leave
push
pop
xchg
ja
ja
dec
mov
mov
cmp
test
adc
movsb
jbe
adc
mov
push
push
loope
icebp
addr16
xor
jg
xor
das
or
xchg
aam
jae
jnp
cmp
cmp
mov
popf
mov
adc
add
out
fldl
and
jbe
mov
cmp
add
out
lret
inc
mov
push
stos
mov
dec
iret
outsl
sti
cmpsb
sub
and
dec
push
lcall
mov
push
andl
push
cwtl
cmp
jg
cs
cmp
iret
sahf
and
cli
dec
fcompl
xchg
mov
icebp
ljmp
adc
xor
mov
sbb
mov
sub
sub
mov
cld
xor
xchg
pop
pop
mov
sahf
movsl
jmp
pop
mov
aad
lods
aas
dec
xchg
inc
daa
fwait
loop
cmp
fcmovu
jecxz
jmp
in
push
adc
clc
cmp
pop
nop
sbb
push
mov
jmp
shlb
or
cmp
mov
out
pop
mov
jge
stos
aam
enter
push
adc
loop
loope
mov
and
sub
int3
mov
and
add
fcoml
lret
push
loope
sub
fadds
fldenv
out
or
shrl
and
and
mov
push
dec
cld
rcrb
add
mov
pop
cmp
ljmp
idivb
aam
lods
mov
lret
shlb
lock
leave
cmpsb
out
call
sbb
leave
jno
or
sarl
ja
lret
fistpl
idivb
stos
nop
fadd
push
cmp
and
xor
or
insb
sbbl
test
mov
sti
fs
test
xchg
add
xlat
xadd
sub
dec
adc
jle
popa
mov
add
addl
jnp
inc
ret
mov
pop
mov
call
inc
jnp
inc
imull
jecxz
mov
aam
jo
mov
shrl
mov
xchg
or
fldl
push
add
ljmp
xchg
and
lcall
js
jge
bswap
mov
xor
fists
imul
daa
hlt
mov
inc
jno
nop
fs
bound
mov
jbe
pushf
mov
and
jmp
std
or
mov
jbe
cltd
jns
stc
xchg
mov
fbld
mov
ds
test
pop
stos
aad
sbb
movsb
cmp
jno
adc
fmul
fistl
lock
sarb
lock
sbb
sub
leave
int
scas
popf
enter
out
and
test
idivl
inc
jbe
pop
lret
jnp
mov
pop
iret
pushf
add
or
add
gs
dec
call
mov
jnp
mov
pop
cmp
das
filds
leave
into
lret
lea
inc
adc
xchg
into
or
add
inc
jno
push
int
dec
shlb
std
push
mov
jp
mov
xchg
xchg
pop
out
push
jno
icebp
insl
into
dec
and
adc
cmp
les
inc
in
in
shrl
mov
lods
das
popf
pop
jbe
fwait
push
cltd
dec
sub
imul
not
es
ja
sti
gs
jno
jne
inc
int
orl
sub
add
mov
test
or
daa
sahf
adcl
in
cmp
test
lods
and
push
inc
xchg
cmc
arpl
and
pop
iret
enter
cmp
cmp
xchg
dec
jecxz
rclb
adc
sbb
adc
pop
mov
sub
test
xor
mov
mov
cmp
fnsave
repz
mov
xchg
mov
movsb
lea
mov
insl
inc
push
xchg
xor
aaa
in
mov
scas
mov
xor
jl
mov
adc
add
and
push
jnp
icebp
rcll
nop
mov
jns
pop
mov
mov
in
outsb
inc
out
int3
out
sbb
stos
xchg
and
in
jno
inc
and
lock
add
xor
inc
rclb
inc
test
or
pop
test
sub
in
lcall
jg
mov
cmpsb
add
sbbl
icebp
sti
adc
into
xchg
add
push
xchg
clc
mov
pop
push
cli
fsubs
pop
xorb
mov
inc
and
pop
cmp
and
icebp
sub
aaa
lods
xchg
push
out
mov
cmp
xchg
rcr
mov
cli
jb
sbb
dec
sbb
cwtl
pop
xor
or
stos
cli
arpl
insl
sahf
mov
lods
add
cmc
addr16
and
aaa
fsubr
sub
inc
inc
xchg
ret
sbb
iret
inc
cmp
andb
pop
mov
sbb
adc
out
pop
ja
aaa
mov
fcmovnbe
int3
dec
lock
cmp
push
pop
xchg
mov
push
mov
arpl
xchg
fdivrp
cmpsl
scas
ja
pop
loopne
sbb
inc
push
dec
ret
xor
add
insl
mov
push
push
popa
sub
mov
mov
imul
jl
jge
jne
test
xchg
xchg
sbbl
sahf
or
shl
cmp
shrb
hlt
mov
mov
inc
mov
icebp
xor
jmp
xchg
enter
aaa
lods
in
sub
stos
gs
pop
or
adc
sub
cwtl
addr16
test
sub
adc
sahf
cli
or
push
jno
or
test
pusha
fnsave
fisubl
sbb
aas
sarb
lcall
mov
dec
and
xchg
lods
test
cmpsb
adc
xchg
aam
xor
or
lods
nop
dec
dec
xor
mov
push
cmpb
into
das
sbb
repz
mov
ja
cmp
cmp
cmp
ret
jb
add
repz
add
xchg
enter
cmp
mov
frstor
test
xlat
int
push
mov
enter
lds
mov
xchg
adc
cmpb
mov
ds
insb
daa
jo
scas
lds
xchg
or
fidivl
nop
inc
sbb
dec
sti
loope
push
addb
sub
fchs
add
xchg
call
out
inc
push
jne
std
je
sub
lahf
sarl
lret
and
xchg
adc
mov
outsb
sarb
gs
push
sbb
mov
cmp
enter
pop
or
cmp
or
dec
dec
fwait
and
je
rol
fucomip
out
outsl
or
xor
lock
movsb
stc
pop
inc
sarl
icebp
cmp
dec
das
insl
dec
push
dec
push
inc
ljmp
test
int
adc
pusha
movsl
lret
and
mov
lock
loope
inc
and
jge
mov
add
shlb
cmp
jge
cmp
cmpb
push
jp
mull
sahf
mov
mov
inc
push
pusha
add
jnp
aas
xor
mov
and
clc
test
adc
ret
mov
sti
leave
ficoms
or
rep
xorl
std
mov
jae
sub
je
cmc
xchg
rcl
out
lds
xchg
ss
cmp
gs
lret
jnp
lahf
sahf
pop
dec
imulb
xchg
cmpsl
out
jecxz
jecxz
mov
mov
mov
add
pusha
in
sahf
in
add
push
es
adc
push
xchg
dec
shrb
cli
sbb
sub
imul
ficomps
in
adc
nop
cli
ret
sbb
pop
loop
or
sbb
test
iret
mov
jl
pop
out
leave
loop
lea
push
cwtl
lods
mov
mov
inc
add
sete
mov
mov
ret
mov
sub
sbb
or
cltd
sbb
mov
cltd
mov
lock
cmpsb
xlat
xchg
shl
test
sbb
lahf
inc
jnp
xchg
xchg
stos
mov
gs
cmpsb
mov
sbb
push
and
mov
push
in
push
push
push
push
xchg
push
test
orb
sub
pop
or
pop
mov
jns
mov
mov
pop
sub
mov
mov
out
jmp
movsl
xchg
mov
xchg
mov
pop
imul
cltd
inc
test
jmp
and
nop
xchg
sub
popa
ljmp
stc
es
loop
and
mov
push
jns
popf
out
in
inc
jmp
ja
and
adc
push
in
es
shrl
push
pop
test
mov
ret
stc
lock
outsb
imul
dec
jecxz
shl
pop
xchg
ror
xchg
ret
mov
cmp
sbb
fistl
stos
push
xor
test
test
lcall
imul
aad
adc
push
andb
popa
insl
push
xor
adc
cmc
mov
pop
loopne
push
mov
pop
pop
sahf
cli
add
mov
in
pusha
insb
or
xchg
add
inc
add
sahf
mov
xlat
jo
xchg
roll
mov
sarl
ljmp
xor
orl
jnp
negl
int3
clc
test
push
dec
test
jl
jo
mov
or
mov
inc
roll
pop
enter
lahf
fs
cmp
fbstp
fucomi
fmul
mov
push
sub
gs
sub
adcl
iret
shrb
dec
nop
int3
fsub
inc
push
out
jmp
repnz
jmp
lods
pushf
inc
inc
jo
sub
xchg
addr16
xchg
jnp
int3
jmp
mov
inc
or
mov
mov
cmp
cmp
and
mov
mov
das
xlat
dec
jno
mov
push
int
or
fisubs
dec
mov
sub
ror
push
push
jnp
mov
in
sbb
jns
out
add
xchg
dec
xchg
repnz
and
pushf
or
dec
es
in
or
push
jae
xlat
and
push
lods
jae
ds
add
in
int
fidivl
and
cmp
push
jns
pop
sbb
das
lret
sbbb
cmp
enter
shrl
adc
sti
shl
jne
stos
in
subl
sbb
rorb
dec
push
dec
pusha
add
sub
mov
dec
dec
in
negl
mov
push
gs
jmp
push
mov
and
xor
in
insb
lods
aad
cmp
push
or
xchg
aam
aam
nop
jno
mov
inc
ljmp
idiv
mov
sbb
lods
es
insb
cmp
or
call
cmp
rcll
ja
push
out
jb
fsubl
lds
cld
faddl
cwtl
sub
push
jecxz
mov
in
dec
or
adc
cmpsl
adc
int3
sub
fnsave
aad
clc
xor
decb
add
xchg
lret
insb
idivb
cs
push
push
in
shll
push
lock
nop
xchg
sub
insl
stc
lds
cs
dec
jb
fistl
lret
mov
je
call
movsb
shl
mov
in
mov
add
sbb
cs
lea
pop
out
stos
imul
mov
pop
jmp
and
xchg
pop
outsb
mov
cmp
add
cld
jg
cmpl
into
pop
xchg
pop
push
loopne
add
adc
jns
pop
adc
into
mov
xor
rcl
add
roll
add
xor
icebp
pop
sbb
ds
xor
jmp
clc
mov
fimull
fsts
mov
push
pop
push
xchg
sub
mov
adc
fwait
lcall
mov
aaa
data16
hlt
lea
inc
jl
fdivrl
cmp
pop
mov
sub
jbe
sbb
pop
mov
lret
xchg
ljmp
xchg
shl
cs
ds
mov
lcall
xor
leave
inc
jae
mov
movsl
out
inc
lds
fisttpl
xacquire
pop
inc
fcomp
sub
jmp
or
jnp
jns
cmpsl
inc
dec
dec
xor
dec
pop
xchg
nop
fsts
add
mov
ficompl
icebp
sub
fidivrs
fadds
inc
mov
div
jb
sub
loope
xchg
cmp
std
popa
mov
mov
fistpll
insb
push
popf
fiadds
ljmp
pop
and
hlt
dec
in
inc
inc
mov
lahf
fbld
cmp
aam
pushf
pop
mov
scas
pop
arpl
loop
push
outsl
pop
lcall
sub
sbb
xor
sub
dec
je
clc
jo
sti
mov
cmp
idivb
loop
sbbb
dec
ss
test
out
pop
daa
ret
sbb
push
repnz
mov
in
mov
mov
adc
sbb
adcb
test
pop
arpl
push
ja
cmc
lcall
in
dec
outsl
jg
out
test
ljmp
negl
shlb
mov
adc
sub
sbb
int
and
pop
inc
loopne
scas
sbb
mov
insl
out
push
xchg
pop
and
sbb
loop
stos
or
cld
and
jns
or
mov
inc
or
pop
bound
and
subb
add
ds
cmp
aas
jl
fmull
mov
and
or
sub
inc
dec
push
inc
mov
xor
in
inc
mov
in
dec
xor
xchg
mov
movsb
daa
jbe
iret
xchg
mov
pop
divl
xchg
out
pop
cmp
outsl
adc
push
pushf
outsl
or
js
mov
js
adc
aam
or
js
imul
adc
or
mov
ss
and
mov
cld
bound
inc
fs
xor
out
sbb
movsl
jp
mov
adc
or
and
mov
ltr
mov
add
repz
cwtl
adc
sub
std
or
aas
cmc
test
xchg
adc
cmp
testl
dec
int3
cmp
orl
nop
gs
adc
jecxz
cmp
mov
mov
jmp
aam
mov
mov
fs
xor
xor
lods
imull
sub
cmpsb
cli
insl
std
decl
pop
movsl
mov
js
jb
pop
stos
mov
add
loop
pop
mov
std
jne
xor
xchg
movsb
and
js
jo
iret
xlat
xor
imul
mov
mov
cmpsb
ret
mov
push
and
data16
sbb
movsb
cmpsb
cltd
mov
or
jno
sarb
scas
jle
loop
push
subl
lods
jo
sbb
pop
xor
mov
imul
test
jo
mov
jp
stos
lcall
dec
cmc
mov
cmp
lock
aaa
cwtl
ds
push
xor
cmp
push
mov
cmp
andb
inc
mov
push
sbb
jno
inc
or
mov
sub
fcomip
lods
mov
and
add
adc
sub
sbb
outsl
gs
pop
or
gs
repnz
jle
cmp
les
sbb
jno
adc
insb
fistpl
ds
sti
mov
jne
hlt
xchg
imul
cmpsl
push
leave
lcall
pop
inc
fs
aam
fbstp
mov
jmp
test
ficompl
mov
sub
add
add
or
mov
jge
sbb
mov
cmp
cmp
and
jmp
adc
inc
bound
ljmp
cmc
and
xchg
xchg
pop
fisubl
push
test
mov
mov
cwtl
inc
adc
lds
lods
dec
pop
xor
hlt
aas
fld
insl
and
outsl
imul
std
lds
iret
xchg
pop
ret
rorl
adc
fstpl
dec
inc
jecxz
dec
ffree
jg
jg
outsl
jb
sub
subb
enter
clc
pop
push
gs
insb
push
fwait
cmpsb
lret
dec
cmc
mov
jnp
das
shrb
mov
jecxz
jl
pop
inc
jle
test
ljmp
add
add
dec
nop
xlat
daa
mov
xor
cmpsl
mov
mov
sub
cmp
test
push
test
idivl
cmpsb
sub
add
pop
scas
fistl
into
stc
sub
mov
aam
aad
std
xchg
pop
popa
ja
xor
mov
jge
fdivs
ja
jns
fcomps
xor
push
and
mov
test
mov
mov
push
arpl
in
jbe
dec
shrl
and
mov
mov
mov
mov
xchg
imull
mov
mov
imulb
inc
inc
sub
pop
adc
xor
pop
xchg
mov
cs
insb
fistpll
add
in
stos
push
rorl
add
pop
jnp
mov
adc
inc
jo
test
mov
and
lods
clc
in
or
mov
dec
add
sbb
inc
in
cmp
add
lret
ficoms
mov
add
adc
adc
fists
std
loopne
sbb
fstps
adc
xor
push
or
xchg
in
lcall
xchg
dec
push
inc
les
cmp
cmpsl
pop
mov
sub
dec
bound
mov
aam
loope
jmp
mov
ja
movsl
pop
stos
adc
push
jns
fildl
pop
pusha
call
pop
imul
cmp
daa
les
and
iret
andb
xor
scas
inc
movsb
sbbb
push
dec
pop
test
mov
repnz
jno
out
div
add
sub
pop
and
repnz
add
or
bound
arpl
fs
fs
mov
into
out
lds
pop
cmp
loop
push
repz
mov
loope
fmul
dec
mov
jbe
jno
xor
adc
scas
xlat
xchg
addr16
add
jmp
fdivrs
sub
cld
dec
push
jge
xor
dec
shrb
loopne
call
dec
push
ja
movsl
imul
lret
gs
jno
dec
loopne
jmp
sbb
mov
scas
push
inc
in
popf
aad
sbb
sub
dec
aad
addl
inc
aam
adc
mov
inc
test
xor
shrl
pop
xor
das
test
cld
sbb
xlat
mov
sbb
xchg
repz
xchg
push
cmpsb
xlat
iret
and
xlat
iret
out
mov
mov
movsl
fsub
clc
pop
subl
jb
ds
je
push
inc
in
adc
imul
mov
and
jnp
sub
enter
inc
addb
xor
int3
or
mov
insl
add
or
push
pop
sahf
movsl
xlat
sbb
in
dec
aam
stos
addr16
mov
pop
popa
test
orb
jb
test
aam
rcrb
andb
inc
or
mov
lock
imul
cmp
push
ret
or
addl
sbbl
sahf
fists
popf
mov
scas
pop
fcoml
out
jae
or
out
push
jbe
cmpsl
lcall
xor
mov
add
jns
or
cmc
out
sub
repz
mov
and
clc
orb
dec
fsubrs
movsl
data16
sbb
cmpsb
xchg
fisttps
push
xchg
sub
xchg
fs
mov
adc
outsl
xor
mov
repnz
xchg
dec
add
call
push
jne
loope
push
sahf
xor
xchg
xchg
inc
xchg
aad
dec
adc
mov
jmp
pop
mov
test
jge
mov
fldcw
cmpsb
sub
lods
adc
push
cwtl
mov
insb
jle
jno
sbb
pop
and
out
sub
inc
call
pop
cli
mov
insl
pop
sbb
mov
mov
test
outsb
js
in
int
loopne
and
xchg
repnz
stos
mov
adc
lcall
mov
jge
sbb
test
fidivrl
das
pop
repz
sti
jmp
push
leave
ljmp
lcall
insl
fs
dec
cmp
in
push
mov
lock
sub
lret
push
pop
inc
out
push
inc
xor
xchg
sbb
mov
loop
shlb
stos
test
test
iret
sbb
and
popf
pushl
std
pop
js
push
sbb
leave
jno
and
cwtl
sar
and
test
sbb
mov
sti
xor
sbbl
neg
xor
and
xor
add
into
imul
mov
lea
jge
insb
ljmp
mov
dec
sub
pop
das
daa
or
notb
pop
scas
sub
sarb
rolb
into
push
int3
jge
xor
les
lret
enter
test
imul
pop
xchg
push
test
rclb
mov
popf
cmc
loopne
sbb
mov
cmp
mov
test
int
mov
cmp
sbb
enter
or
dec
or
add
dec
pop
adc
xor
scas
jnp
imul
jg
fldl
pop
xchg
sub
arpl
loope
aaa
and
int3
dec
push
fsts
xchg
mov
and
fsubl
mov
xchg
pop
lock
pop
mov
pop
xchg
cmp
in
in
mov
jnp
andb
cltd
sub
push
dec
into
clc
xor
jae
mov
mov
pop
dec
stc
repnz
lods
xor
push
js
outsb
jnp
pop
or
lret
and
and
jne
dec
push
mov
jne
mov
adc
call
mov
jns
jb
cmp
and
fisubrl
pop
clc
cmp
loope
sub
stos
jmp
mov
aas
add
jne,pn
aam
ss
mov
das
push
in
movsb
push
pop
cld
add
inc
or
push
jae
roll
iret
popf
jge
mov
cmp
loopne
in
int
loope
fs
pop
ficoml
adc
adc
mov
jo
push
mov
fiaddl
jae
sbb
mov
dec
cmp
shl
call
xchg
insl
push
dec
xor
scas
cld
aam
jb
rcll
les
sbb
test
pop
sub
call
jl
ss
sbb
daa
insb
adc
enter
ret
mov
adc
xor
pop
roll
lret
cmpsb
and
ret
jbe
jno
mov
jmp
jae
sbb
bnd
sub
js
jae
ljmp
sbb
sbb
push
dec
mov
cmp
rcrl
xchg
shl
pop
sub
or
xchg
rol
ja
test
int
or
insb
pushf
cmp
adc
sub
mov
inc
pusha
fbld
or
mov
gs
pop
call
call
popf
jo
sti
jmp
xchg
pop
clc
sbb
lcall
inc
mov
push
out
fstpl
dec
jge
adc
mov
mov
lcall
loopne
loope
pop
lret
popf
lahf
mov
aad
mov
int3
ret
jg
jne
dec
into
jbe
inc
lea
sbb
cli
insl
stos
ret
cli
sbb
je
inc
insl
in
or
adc
jp
repnz
adc
cmc
sbb
inc
in
ss
je
lock
mov
lret
mov
rcl
cld
aad
out
xor
jp
jb
xlat
outsl
pushl
jge
dec
jo
out
popf
pop
iret
loop
mov
gs
repz
xchg
xchg
xor
and
ds
push
dec
pop
and
test
xchg
mov
loopne
add
xchg
inc
arpl
jns
stc
sbb
lret
inc
push
aad
push
js
add
push
clc
mov
or
inc
stos
popa
mov
lret
nop
push
pop
in
into
or
bound
push
out
cmpsl
and
push
ss
adc
cmp
repnz
repz
and
loop
repz
lahf
pop
jbe
and
pop
clc
lds
xor
mov
ljmp
lea
sarl
lods
es
mov
lock
mov
add
mov
dec
movsl
lret
pop
adc
aas
adc
pop
jge
jne
push
pop
dec
jae
fwait
xchg
popf
push
jle
jmp
inc
lods
or
test
mov
int3
insb
pop
rcll
mov
pop
inc
fisttps
into
xchg
es
out
lcall
in
inc
addb
aam
xchg
sub
and
inc
push
adc
aam
mov
push
daa
out
mov
mov
stos
cmp
xchg
pop
arpl
push
je
cld
fstpl
fst
cli
adc
fwait
shrl
add
hlt
sub
cmpsl
and
mov
nop
test
inc
lret
pop
push
fildl
scas
inc
push
fcomps
push
pop
stos
ret
inc
xor
adc
test
test
mov
int
aam
and
pop
ja
adc
in
addr16
js
cmp
bound
xor
fcompl
loope
push
add
jbe
out
sub
add
inc
cmp
sub
dec
inc
push
fwait
pop
or
sub
inc
inc
sti
mov
xor
mov
cwtl
pop
nop
or
sub
xchg
fmul
mov
sub
cmpsb
aam
std
jmp
ret
shl
adc
fmull
fcompl
shll
rcrl
push
ficoms
push
xor
sbbb
orb
pop
fsubl
mov
add
in
fiaddl
inc
push
inc
xor
adc
push
les
out
mov
lret
lea
cmp
and
pusha
pop
add
mov
pop
aam
sbb
or
inc
adc
in
mov
iret
fstps
sub
pop
orl
mov
push
lahf
or
pop
fsubrl
sbb
int
jp
popf
mov
outsl
out
movsl
lret
sbb
outsl
inc
dec
aaa
int3
daa
inc
stos
push
or
dec
cmpsb
mov
jno
mov
pushw
xchg
and
mov
subl
iret
lret
test
mov
xchg
mov
xchg
sbb
std
sbb
stos
das
lret
scas
mov
sbb
add
aaa
or
in
pop
test
in
test
adc
and
add
xchg
fwait
loop
fstpl
aas
push
imul
orb
movb
dec
push
mov
mov
popa
repz
insb
dec
mov
and
mov
mov
lds
cmp
mov
fiaddl
mov
lods
insl
mulb
xchg
lock
mov
pop
out
in
test
stc
cmp
sub
xor
out
or
into
xchg
or
or
mov
dec
test
adc
sbb
pop
outsl
mov
adc
and
insl
sbb
gs
jg
inc
aas
and
fbld
xor
nop
stos
lods
jne
pop
cmp
push
jns
add
xchg
out
mov
add
jno
inc
aas
loopne
mov
rclb
test
je
pop
movntq
out
mov
cltd
add
ds
stos
sub
push
push
fcoml
bound
and
xor
jg
mov
js
adc
add
or
add
fnstenv
push
sbb
jge
ret
mov
mov
pop
adc
mov
inc
pushf
out
jmp
jns
imul
jbe
mov
xor
fstpt
and
aad
je
and
mov
mov
leave
mov
pop
out
scas
aam
ja
aad
push
xchg
jmp
sbb
push
dec
test
mov
test
lcall
mov
pop
xchg
stos
dec
into
add
fwait
add
pop
ljmp
stc
mov
test
inc
xchg
push
aam
out
mov
xor
pop
push
jbe,pt
pop
mov
lods
jg
cmc
xor
in
sub
sbb
aaa
mov
lcall
and
fwait
mov
pop
or
pusha
js
mov
inc
cs
jmp
lea
adc
mov
mov
push
and
stc
jbe
and
je
jl
push
jmp
hlt
adc
jmp
xlat
mov
in
xorb
js
inc
add
mov
dec
adc
jae
or
push
bound
enter
loopne
sbbb
mov
insl
or
in
mov
enter
or
cmp
mov
setg
cwtl
pop
sahf
inc
mov
mov
inc
mov
roll
jo
cli
xchg
push
cvtdq2ps
bound
xlat
adc
jae
mov
xchg
loopne
mov
cmp
jecxz
sub
pop
jmp
addl
loope
xor
jbe
mov
sub
sbb
or
pusha
mov
or
fxam
fwait
test
mov
mov
xchg
stc
lea
mov
mov
int
pop
sti
pushf
les
fstpl
cmc
mov
sbb
lret
shrl
cwtl
ret
adcb
sub
cmc
pop
sub
sahf
xchg
cmp
push
in
jl
std
adc
and
and
cmp
fxch
jnp
sahf
dec
ficoml
inc
mov
mov
xchg
mov
loope
push
add
adc
testl
bound
fstpt
fs
ja
stos
mov
outsl
and
stos
cmp
dec
std
loope
arpl
jno
pop
test
or
or
dec
stos
repz
sub
sub
enter
cmp
stc
repnz
ret
mov
scas
cmp
addr16
lcall
jl
push
dec
lahf
sbb
imull
xchg
hlt
test
mov
pop
xchg
add
dec
inc
clc
cld
das
jns
jg
mov
sar
cwtl
rolb
lret
inc
repnz
shl
and
pop
cmc
add
pop
shll
xor
xchg
lret
in
shl
mov
jbe
dec
loop
sbb
jl
mov
ljmp
or
push
inc
sarb
sarb
out
into
add
dec
mov
outsl
xchg
inc
fstps
mov
ret
aam
adc
mov
lret
aaa
cltd
rorl
rcr
dec
test
jns
dec
stos
outsl
imull
mov
xchg
fwait
ret
fsubr
mov
data16
lea
push
mov
aaa
mov
lods
negb
imul
lahf
rorb
sarl
fstps
std
enter
out
sub
js
mov
mov
adc
loope
mov
add
mov
push
sub
mov
cmp
mov
lahf
pop
loope
mov
pop
push
xchg
and
sub
cmpsb
int
fwait
in
cltd
repz
movsl
push
or
fsubl
jns
ror
les
cmpsb
mov
movsl
jmp
jle
lock
mov
je
mov
cmp
jne
aam
inc
pop
cmp
loope
aaa
jmp
xchg
movsb
rcl
repz
scas
mov
adc
int
sub
sub
imul
pushf
pop
mov
mov
mov
subl
and
lds
mov
adc
xor
cmp
lea
sti
cmpsb
fmul
cmp
iret
loope
incb
mov
in
shrb
nop
and
inc
push
lods
mov
testl
arpl
fwait
outsl
jnp
mov
xlat
ljmp
and
push
mov
mov
mov
scas
add
faddl
fidivl
add
or
lret
fsubr
popf
std
insl
stc
inc
aaa
sub
inc
int3
sbb
jmp
dec
sbb
pop
add
mull
mov
sub
mov
add
in
jecxz
sub
in
icebp
lea
ds
xor
xor
push
rcl
xchg
mov
inc
cmc
mov
xlat
xor
testl
push
fs
mov
or
movsl
push
sub
dec
movsl
ja
leave
stos
jl
cmp
cmpsb
popa
in
mov
ljmp
xchg
add
std
shl
out
dec
push
hlt
lds
notl
mov
inc
icebp
fiadds
jno
ljmp
imul
daa
pop
aad
mov
xchg
mov
je
into
inc
mov
push
and
fadds
jo
push
cmpsl
jo
les
test
inc
push
andl
test
xor
fisttpl
and
dec
and
cs
es
push
popf
pop
cmp
in
mov
mov
jo
fwait
pop
mov
shlb
mov
and
popa
dec
jno
mov
call
subl
fucom
push
sahf
mov
in
push
gs
ds
fwait
and
mov
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
pushl
sub
and
xor
test
lret
jge
call
test
lret
cmp
and
lret
cmp
and
xor
lcall
call
xor
lock
jl
xchg
inc
sti
push
mov
xor
inc
scas
adc
dec
in
fistpll
add
pop
pop
lods
repnz
and
xor
and
lds
cmc
loope
push
je
mov
imul
mov
dec
int
mov
jno
mov
mov
nop
ja
insl
movsl
pop
and
adc
std
jge
push
xchg
sub
sarb
mov
shll
xchg
push
xchg
aaa
rolb
mov
and
data16
mov
hlt
and
xor
shll
xchg
dec
push
int
aad
and
sub
cltd
cmp
filds
jbe
lcall
pop
sub
xor
xor
test
in
lret
cmp
and
iret
xor
test
into
xor
xchg
fidivl
lcall
pop
sub
and
xor
test
lret
cmp
dec
pop
sub
and
cmp
test
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
push
cmp
and
xor
xchg
and
lret
cmp
pop
or
lret
cmp
or
pop
xchg
xor
test
push
sub
jle
xor
test
lret
cmp
lds
and
xor
test
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
cmp
and
lret
xchg
mov
cli
test
push
rorb
jne
sbb
cld
dec
push
movsl
xor
scas
dec
cmc
mov
adc
in
mov
in
cmp
and
xchg
adc
xchg
jl
sbb
in
mov
stos
ffree
and
inc
ljmp
cld
arpl
sbb
mov
xchg
ficomps
lahf
shr
sti
mov
pop
shrl
cmc
xchg
andl
jne
fcmovu
sti
add
lea
and
push
out
mov
jb
out
nop
mov
out
orb
jl
adc
fidivrl
cli
es
notl
aas
fadd
sub
imulb
cmp
or
std
inc
test
sub
fists
sahf
daa
stos
or
mov
cmp
insl
jb
movsb
outsl
xor
notl
sbb
mov
mov
ja
pop
dec
lret
push
cmp
loop
or
stos
and
xlat
sti
cmp
cmpsb
movsb
mov
sbb
jg
ret
pop
test
inc
adc
mov
jge
pop
mov
cmp
and
out
jae
lret
add
cmc
and
mov
iret
mov
push
add
test
inc
mov
popa
xor
stos
mov
sub
test
lods
jecxz
pop
inc
inc
jne
xor
push
std
out
mov
fs
adc
cli
std
and
inc
and
xor
inc
pop
jnp
sbb
jge
roll
data16
fstpl
mov
ss
pop
pop
jle
mov
pop
jb
adc
jmp
movsb
mov
in
xchg
outsl
out
int
push
sub
pop
sbb
mov
cmpsl
and
mov
repnz
test
inc
dec
adc
jns
sbb
rcrb
push
mov
jnp
rcrl
sub
mov
sbb
or
mov
jle
movsb
xor
int3
cmp
and
mul
pop
mov
lret
hlt
stos
aaa
fdivs
and
test
sbb
repnz
lea
ds
sub
or
data16
aad
adc
push
movsl
fidivrl
and
xor
cld
rclb
fchs
imul
cmp
sub
test
loop
sub
fs
and
es
mov
das
testl
scas
sarb
decl
bound
sahf
lahf
stos
xchg
cltd
xor
dec
fdivrl
mov
jb
sub
pushf
mov
adc
loopne
repz
cmp
insb
test
ss
ret
or
adc
lahf
in
mov
mov
or
pop
cmp
jmp
test
or
xor
push
jecxz
xor
in
jno
or
add
out
shrl
lods
push
jl
cltd
cwtl
std
add
add
sub
mov
loope
mov
rol
int3
jmp
and
or
push
push
push
mov
mov
mov
cmp
mov
ljmp
imul
push
add
sbb
loop
xor
scas
push
imul
cmpsb
aam
stos
psubsw
movsl
dec
popa
scas
stc
int3
popa
sti
pusha
popa
mov
push
dec
imul
dec
sbb
push
out
cmpsb
jb
dec
clc
jle
xchg
mov
sub
add
test
push
stos
ds
popf
insb
pop
lret
jo
bound
dec
sbb
mov
inc
sub
sbb
nop
dec
popa
and
sbb
mov
mov
jae
repnz
push
adc
aaa
mov
popf
adc
dec
pop
in
jle
xor
push
add
ljmp
dec
daa
push
xor
push
jl
mov
ret
movsl
add
cmp
iret
fbld
inc
adcl
jp
lock
test
leave
nop
sbb
sbb
shll
add
pop
out
or
jp
repz
jo
and
push
lods
inc
sbb
jbe
lods
add
fnsave
or
movsl
mov
lcall
dec
clc
test
lahf
add
and
or
pusha
inc
xor
icebp
or
and
push
es
mov
rorb
and
sbb
movb
cmp
fsts
ret
daa
sub
inc
loope
insb
lahf
aaa
daa
mov
mov
xchg
xchg
iret
sub
xor
push
sbb
adc
lods
jmp
clc
mov
lcall
test
enter
dec
loope
push
es
or
mov
es
jnp
daa
push
imul
adc
sub
test
les
fxch
push
adc
std
cmpsb
sbb
lahf
stc
cmp
sahf
sti
jns
into
orb
out
lret
pushf
pop
jbe
icebp
dec
mov
dec
scas
lods
int3
imul
or
das
rcrl
lahf
dec
jecxz,pn
mov
or
xchg
dec
je
inc
cs
mov
icebp
mov
jae
inc
repz
mov
bound
push
inc
movsb
dec
outsl
add
leave
sub
fs
aam
lahf
add
fs
jmp
fdivr
jo
cmp
cmp
lea
in
cli
fnstenv
mov
test
push
pop
pop
xchg
xor
push
cmpsb
movsl
cwtl
out
sti
vmwrite
sbb
xchg
dec
push
add
aas
into
adc
sub
loop
daa
insl
aaa
pop
inc
mov
clc
and
fisttpl
and
test
mov
pop
pop
jmp
clc
dec
movsb
mov
cmp
addr16
shlb
jge
fisubrs
push
inc
jae
push
jb
xor
mov
testl
sbb
popf
or
mov
or
sub
xchg
push
mov
sar
lret
cmp
std
adc
rorl
sbb
sahf
xor
pop
orb
or
pop
fisubl
dec
test
jge
sub
stos
or
cmp
repnz
ds
add
pusha
lret
sbb
sbb
sahf
test
mov
sub
popf
add
rorl
adc
in
pop
jle
mov
mov
jecxz
jae
cmc
fstpt
jnp
and
fnsave
push
jge
add
ja
xor
imul
leave
fnsave
push
ds
sub
mov
inc
aaa
xchg
mov
sbb
psubq
mov
cmpsb
rcll
mov
aas
sbb
ja
dec
arpl
xchg
sub
and
sti
add
fwait
lds
loopne
hlt
mov
jl
fistps
js
sub
add
cwtl
sub
push
pushf
cmp
sbb
iret
subb
pop
xchg
mov
mov
xchg
adc
loope
rcr
mov
pop
incl
fwait
adc
js
inc
push
in
mov
rcrl
cmc
push
js
xor
int
lock
inc
pop
repnz
mov
test
xor
lcall
mov
jmp
add
leave
sub
mulb
jmp
fmull
cmp
sbb
inc
scas
insb
test
adc
enter
pop
aaa
push
notb
lret
imul
clc
testb
loopne
stos
shll
pop
gs
pop
ficomps
ret
rolb
stos
add
xchg
clc
mov
xor
and
cli
inc
xchg
pop
add
pushf
push
adc
aam
shlb
mov
cmp
out
mov
iret
pop
jmp
arpl
add
xlat
xor
and
push
pop
decl
mov
pop
push
sahf
cmp
cmp
dec
pop
ja
dec
mov
dec
cmpsl
sub
cmp
dec
scas
insl
test
icebp
in
mov
xchg
mov
arpl
cmp
fwait
sahf
sub
mov
rcrb
add
stos
sti
mov
call
ds
jns
sbb
mull
push
jl
inc
dec
pop
lret
les
cld
add
scas
mov
call
lock
enter
push
sub
bound
mov
test
cmp
fidivrs
test
push
cltd
fldcw
inc
pusha
mov
iret
stos
jb
fdivrs
jnp
mov
je
jae
sbb
outsb
faddl
push
inc
aad
jbe
pop
cmpsb
cwtl
mov
push
rcr
lds
jb
cmp
add
xchg
jbe
call
stos
hlt
sub
subb
xchg
insl
notl
xchg
lock
mov
test
stos
test
lret
hlt
test
push
hlt
dec
mov
int
lret
pop
sbb
push
cmp
jae
mov
imul
loopne
sbb
popa
push
dec
daa
cmp
aad
add
cltd
int
jge
cwtl
jmp
and
inc
daa
test
mov
dec
dec
mov
bound
pusha
ret
jmp
sbb
dec
repz
stos
jo
ss
sub
hlt
mov
push
inc
add
orb
cmc
shll
cmc
mov
xchg
je
xchg
sub
cmp
or
jno
rcrb
mov
imul
dec
adc
jno
inc
outsb
mov
pop
push
test
add
sbb
gs
les
addl
xchg
xchg
cmp
daa
dec
adcl
pusha
movsb
mov
leave
pop
mov
test
repnz
incb
mov
jb
mov
dec
pop
cltd
mov
je
into
pop
add
and
mov
push
outsl
xlat
sub
jecxz
cwtl
pop
push
cli
out
mull
ds
pop
xor
jbe
in
cmp
mov
adc
cld
ss
mov
repnz
icebp
sub
inc
pushw
or
dec
lds
and
lcall
lret
push
cwtl
and
scas
movsb
std
sbb
call
jne
jle
fsubr
rclb
inc
jle
into
shrb
out
fwait
sub
adc
scas
repnz
scas
rcrl
lods
jbe
xor
enter
mov
pop
jb
xor
test
jecxz
dec
js
pop
je
mov
data16
jle
mov
jb
out
dec
adc
out
repz
sbb
stos
jle
pop
lret
sahf
pop
dec
inc
add
lahf
xchg
cmp
daa
pop
sub
sub
pop
push
pop
aam
mov
sub
mov
inc
push
and
adc
in
pushf
fistpll
and
or
mov
xchg
js
sbb
cmp
lods
repnz
mov
jle
pop
push
sti
mov
pop
xchg
xchg
jmp
push
mov
mov
out
xchg
ret
and
sub
adc
mov
loope
test
pop
fildl
sbb
ss
rcrb
push
rcrb
mov
sub
and
aaa
cld
mov
daa
pop
fstps
jo
in
adcb
scas
mov
xor
and
mov
jecxz
lret
jmp
shll
ja
inc
cs
mov
add
xchg
popa
out
fmull
pop
mov
dec
push
push
push
leave
fwait
iret
dec
scas
jno
pop
push
cmp
push
mov
mov
mov
mov
shll
mov
push
mov
clc
dec
push
jae
pop
push
stos
mov
imul
xlat
sub
xor
fistpll
stos
push
data16
test
pop
repz
ljmp
insb
out
adc
dec
outsb
test
int
push
int
adc
sub
sarl
orl
cmp
ret
push
mov
push
jl
add
mov
jp
ficoml
sbb
mov
and
leave
dec
movsl
jno
gs
cmp
in
pop
clc
dec
jns
insb
loop
jns
mov
pop
jl
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
