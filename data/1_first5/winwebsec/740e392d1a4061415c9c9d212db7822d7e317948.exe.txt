push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
je
imul
cli
in
lcall
cmp
cmp
aam
and
jb
lods
xchg
leave
stc
out
xchg
push
adc
fsubs
inc
jl
shll
lcall
lods
add
sbbb
popa
pop
push
xor
loopne
adc
jb
test
cmp
push
lds
loopne
and
push
adc
pop
mov
jl
xor
insl
add
mov
sarl
fildl
in
fbld
in
test
sub
cmp
add
rclb
or
push
sarl
inc
aaa
xor
cltd
cmp
mov
cmp
loopne
pushf
cwtl
xor
pop
imul
bnd
mov
and
out
xchg
mov
adc
fs
push
ds
pop
push
push
mov
and
inc
adc
jbe
jmp
scas
mov
xor
cmp
dec
outsl
xor
push
orl
mov
mov
push
call
ret
push
cmpsl
cmc
pusha
jns
insl
arpl
or
jp
sbb
fstps
inc
shrb
popf
adc
mov
orps
xor
out
dec
cli
pop
add
cmp
insl
add
dec
xchg
sbb
subl
cwtl
push
push
fcomp
mov
jge
rcr
repz
std
dec
jg
std
pusha
shlb
jo
add
cmp
pop
gs
pop
and
lds
push
lds
xor
push
and
cmp
sbb
push
xor
add
inc
les
mov
rolb
cltd
popf
add
aam
sub
cmp
xlat
out
xchg
dec
mov
and
loop
stos
aam
adc
dec
mov
or
jle
lcall
jno
shl
lock
mov
xchg
loopne
sbb
push
ret
push
or
repnz
in
shl
adc
jge
rclb
push
add
lods
stos
aad
cmp
outsl
xchg
and
sbb
mov
jns
sbb
cwtl
or
sbb
lock
push
mov
out
lret
test
dec
je
mov
mov
icebp
mov
and
xchg
int
jae
sub
cld
fldcw
jp
mov
cmc
xchg
mov
and
xor
insl
pop
sarb
mov
lea
pop
daa
cli
pop
xchg
mov
and
shlb
test
inc
sub
mov
movsl
mov
sbb
arpl
xchg
mov
imul
mov
xchg
mov
add
dec
sub
mov
pusha
xchg
pop
push
xchg
lock
shrb
jmp
xchg
pop
insb
mov
mov
roll
insl
addb
xchg
push
mov
in
pushl
lret
movsl
std
jecxz
pop
fnstsw
pop
xchg
mov
dec
lods
cmp
mov
adc
xor
push
pop
sub
bound
inc
sub
jp
inc
xor
or
fistl
jg
lcall
xor
jns
xchg
lods
xor
stc
out
pop
pop
xchg
push
cwtl
pop
jp
fcmovne
test
ret
cmp
jae
xchg
inc
es
mov
sbb
jle
jge
sub
xor
testb
lcall
cmp
fistpll
leave
push
push
pop
adc
cmp
sub
pop
mov
pop
fistl
xchg
push
pop
unpckhps
loope
mov
outsb
jp
xchg
subb
add
or
xchg
mov
stos
lds
mov
mov
lods
dec
hlt
sbb
fwait
jnp
sbb
and
mov
lret
call
dec
or
repz
popf
xor
loop
mov
mov
lret
lret
or
cltd
cmpsb
cmp
add
xor
mov
enter
aam
sub
push
leave
mov
mov
lods
sbb
sbb
add
add
scas
or
js
xchg
sub
lods
out
add
xchg
leave
cmc
sbb
xor
xorl
fsts
jle
xchg
sahf
inc
sub
pop
mov
or
pop
repz
cmp
cmp
das
iret
cmp
adc
in
xchg
out
out
or
dec
lahf
adc
aad
mov
adc
jle
inc
sub
mov
jmp
inc
cld
popf
inc
or
fidivrl
jle
pslld
dec
adc
add
mov
loop
sub
nop
xchg
jno
dec
add
xchg
mov
daa
xor
leave
xor
pop
push
sub
out
cmp
dec
notb
repnz
sbbl
push
loope
dec
adc
mov
mov
add
or
mov
es
sbbb
test
mov
push
sbb
mov
lods
stc
aas
or
sahf
sbb
push
pop
ds
and
pop
test
adc
hlt
adc
lods
adc
or
push
mov
xchg
mov
js
lret
clc
or
test
sbb
shrl
dec
push
jo
pop
pop
stos
lds
or
iret
mov
xor
lock
data16
sub
repnz
outsb
adc
loop
lahf
sub
fcomps
sub
dec
mov
pop
int3
xor
cmc
jnp
js
jbe
scas
scas
inc
imul
outsl
movsl
daa
movsl
lock
mov
cmp
inc
xor
rolb
cs
aad
pop
inc
movsl
jecxz
mov
sbb
fistl
test
mov
mov
fmull
clc
mov
sbb
sbb
mov
pop
mov
adc
sbb
fcmovnu
add
inc
mov
test
adc
out
adc
add
mov
out
mov
incb
or
lods
repnz
or
ljmp
cmp
jp
pop
loop
test
cld
mov
imul
lock
in
test
jl
ret
fistl
inc
adc
dec
fwait
adc
mov
xor
and
inc
xchg
inc
mov
lcall
mov
jns
outsb
sbb
mov
lret
mov
push
mov
sub
test
call
dec
xchg
rolb
sbb
test
add
mov
hlt
shlb
nop
jle
push
or
xor
jno
pop
fists
adc
mov
xchg
add
mov
hlt
loopne
lret
sbb
push
ret
adcl
scas
rclb
mov
pop
inc
cwtl
jo
and
decl
cmc
jcxz
push
add
add
leave
cmp
repz
dec
inc
push
jae
or
movb
push
push
ret
or
dec
jecxz
jp
in
mov
inc
in
pop
xchg
loop
jo
loope
outsb
pop
adc
ja
dec
pop
push
imulb
or
mov
jno
lahf
pop
test
inc
sub
inc
xchg
sub
sub
inc
or
lcall
lods
mov
je
or
xor
mov
cmp
idivl
aaa
inc
addr16
inc
loop
adc
mov
pushl
jge
mov
add
roll
inc
cmp
int
aam
insl
test
push
jl
gs
jge
pop
subb
push
xorb
dec
inc
lret
mov
dec
mov
fucomp
nop
mov
in
dec
imul
xchg
pop
xchg
cmp
xchg
das
aas
int3
xor
xor
pop
ret
jbe
xchg
sbb
mov
cmp
ret
mov
inc
out
lods
sbb
gs
iret
pop
cs
push
xchg
push
or
sbb
and
aad
in
arpl
dec
jnp
push
mov
inc
movsb
mov
xor
ret
mov
mov
and
fistpl
test
iret
enter
fidivrl
icebp
aaa
xchg
pushf
lea
fisubrs
cwtl
pop
jle
lret
fisubrs
sub
sbb
mov
ljmp
repz
inc
mov
data16
test
hlt
push
sti
adcb
jnp
out
ljmp
and
inc
mov
cli
lock
cmp
jp
sbb
mov
sbb
adc
mov
cmp
lds
pop
lock
jnp
clc
jecxz
and
and
repz
popa
lret
movsb
addr16
scas
dec
mov
mov
push
cmpsl
sub
or
int3
jnp
or
xor
gs
pop
jmp
aad
mov
mov
cmp
jne
js
jns
inc
inc
lods
lahf
lret
sub
adc
test
cwtl
out
sub
lods
sbb
jecxz
ficomps
adc
fs
scas
rcr
dec
movsl
xor
popf
ja
fstpt
rcl
and
inc
cmp
sbb
mov
push
daa
dec
cmp
insl
jg
pushf
dec
rorb
icebp
notl
mov
inc
movsb
jae
mov
es
mov
jnp
fwait
sbb
push
add
lock
dec
push
add
repz
jp
push
icebp
insb
sbb
lds
sbb
ja
sbb
mov
xchg
dec
dec
fwait
xchg
pusha
call
lcall
rorl
xor
aam
dec
xchg
repz
mov
lret
push
mov
into
rorb
bound
popf
cmp
rcr
outsl
popf
inc
adc
lds
psubsw
je
fucomp
inc
loop
pop
jno
data16
negl
dec
and
mov
addb
dec
cltd
mov
ret
ret
adc
push
rclb
bnd
pop
and
mov
mov
jbe
xor
cli
inc
and
jg
mov
mov
popa
xchg
jle
std
and
pop
mov
jnp
cmp
mov
adc
sarl
lret
mov
sbb
in
jb
sub
xchg
sarl
inc
add
insb
ljmp
mov
cmp
ja
mov
add
jecxz
adc
call
dec
js
loope
adc
pop
sub
cmpsl
xor
cmc
movb
xor
out
dec
pop
sub
daa
xchg
sbb
mov
shrb
fistpl
xchg
scas
in
cmpsb
call
pop
or
or
push
adc
ret
pop
filds
xlat
enter
cmp
imul
fsubl
cmpsb
dec
cmp
fwait
jne
xor
loope
lcall
aam
jns
shll
clc
inc
rolb
push
in
int
outsb
imul
xchg
and
in
daa
lret
mov
icebp
inc
mov
xor
sbb
fstp
imul
outsl
jno
movsb
gs
inc
add
ficompl
xor
or
ss
ret
loope
push
xor
jae
test
and
push
imul
inc
mov
pop
xchg
cmp
aaa
push
ret
test
fcompl
pushl
sub
out
or
jns
pushf
and
and
push
incb
mov
pop
jp
and
cli
dec
mov
xchg
js
pushf
mov
shrl
imul
je
adc
xchg
leave
mov
addr16
jp
fwait
xor
out
ret
xchg
mov
inc
call
add
dec
fistl
or
in
pusha
xchg
xor
xchg
mov
sbb
movsl
and
imul
popl
jbe
std
or
xchg
cmc
testl
cmc
jecxz
out
mov
jl
inc
adc
jne
mov
fcomp
mov
xor
ret
mov
push
inc
pop
inc
sbb
dec
sub
or
mov
out
add
or
mov
in
xchg
scas
inc
cli
mov
loop
iret
mov
jl
loop
out
ds
cmpb
stc
pushf
ja
lret
sub
imul
xchg
iret
xsha256
cmpsb
push
fld
pop
cmp
lds
sahf
je
adc
rol
shlb
in
inc
xor
xor
cmp
ljmp
sbb
push
or
sbb
dec
add
in
or
cmp
lods
xchg
adc
nop
fistl
cmp
insl
andl
lret
inc
or
aaa
inc
cmp
or
fisttps
sbb
rolb
mov
out
jecxz
cmpsb
popa
rep
inc
dec
fstps
bound
lret
and
loope
lahf
lods
lods
nop
lock
jg
jbe
pop
inc
je
pop
mov
adc
jbe
mov
and
gs
out
mov
mov
add
fnstenv
push
repz
pop
dec
shrb
push
mov
into
jecxz
orb
jge
ret
dec
outsl
xchg
sbb
cmp
mov
sbb
jo
loope
jecxz
cmp
adc
lock
or
idivl
jge
fsubrl
xor
cwtl
mov
lret
mov
xchg
fldenv
mov
mov
push
icebp
std
leave
inc
jno
addr16
add
pop
push
gs
push
jmp
jns
pop
clc
push
sbb
loopne
xorl
je
out
add
inc
add
fcoml
jmp
pop
loope
pop
out
push
adc
sub
xor
lret
mov
push
mov
jge
adc
jg
clc
jns
sbb
jb
mov
cmp
pop
loop
sbb
lods
sub
or
test
xchg
pop
jbe
orl
addl
mov
decb
jge
adc
mov
jbe
jbe
scas
adc
icebp
dec
and
sbb
jge,pn
rclb
pop
out
xor
lea
xchg
xchg
test
xchg
fst
adc
test
call
and
incw
test
adc
sbb
daa
xor
shr
addb
cmp
push
scas
sarb
push
lea
test
jnp
inc
pop
lcall
dec
jge
orb
push
lea
shrb
arpl
ss
dec
cld
aas
ljmp
mov
pop
aad
xorb
lea
ret
iret
add
ss
in
cmp
mov
js
and
xchg
fnstsw
xchg
fisttpll
sbb
or
in
ljmp
dec
int
testl
outsb
nop
adc
pushf
pop
cmp
mov
in
roll
push
xor
and
out
icebp
add
jb
hlt
aam
dec
dec
jb
out
not
and
jns
push
jmp
push
shr
sbb
push
sub
mov
xor
mov
inc
adc
xchg
mov
adc
cmpsb
mov
push
mov
cmp
push
mull
push
fs
add
addb
lods
push
xchg
adc
dec
stos
add
and
aam
into
out
out
sub
in
sbb
lahf
or
and
push
cmpsl
sub
andl
jle
test
add
cwtl
fwait
cmp
pop
inc
leave
sub
xchg
adc
push
aad
stos
scas
push
push
dec
and
inc
int
mov
cmc
mov
adc
mov
xor
test
jo
adc
mov
sbbl
xchg
cld
cmp
mov
cmc
jo
fdivs
sti
xor
fmuls
cmpsb
jns
cmpsb
lret
lods
cmp
into
in
mov
mov
adc
jnp
rcr
subb
inc
jbe
mov
and
or
cmp
jne
pop
dec
mov
inc
fisttpl
mov
adc
insl
imul
and
mov
test
mov
in
or
add
add
leave
jb
xchg
pop
in
mov
mov
fcomps
ljmp
dec
and
push
mov
pop
sti
jne
enter
lcall
xchg
dec
in
sbb
mov
aas
sti
mov
outsb
outsb
inc
inc
xchg
fnstenvs
xor
inc
in
cmp
pop
mov
push
in
pop
sbb
add
mov
mov
push
divb
or
loop
mov
mov
mov
ret
aas
dec
addr16
sbb
cltd
test
push
mov
les
fisttpl
fstp
ljmp
push
mov
bound
dec
fmuls
mov
gs
and
fxam
in
clc
aad
jge
pop
arpl
clc
xorl
sub
adc
push
aad
or
and
inc
add
mov
out
sbb
inc
mov
xchg
ljmp
sbb
lock
xchg
add
inc
mov
jno
outsb
or
and
fs
lret
hlt
add
scas
insl
movsb
xchg
in
lret
mov
push
test
jb
dec
call
jbe
jne
cwtl
sbb
push
cmp
mov
push
gs
xchg
scas
fs
add
shr
cmp
lahf
popf
test
mov
mulb
int
dec
stos
lret
out
sti
sub
out
pop
jg
arpl
arpl
sbb
mov
aam
loop
mull
cmp
into
pusha
mov
ret
je
xor
cmp
pxor
testb
sti
pop
sbbb
sub
es
adcl
mov
jmp
cmp
mov
ds
pusha
mov
push
enter
push
xor
data16
mov
movb
jecxz
into
add
push
shlb
jp
cmc
test
gs
fnstsw
push
inc
and
pop
pop
push
lock
jnp
sub
xlat
push
subb
add
push
jg
insb
subb
jl
test
xor
rcrb
das
out
pop
hlt
fnsave
cmc
std
xchg
andb
cmpsl
jb
dec
push
inc
mov
xchg
xorb
or
jecxz
mov
test
pop
jle
fnsave
shll
rcrl
jne
mov
or
outsl
jns
mov
sti
stos
jecxz
leave
xchg
gs
cld
sahf
mov
xchg
ret
xor
xchg
pop
das
or
inc
popa
or
aad
aad
popa
mov
jecxz
dec
pop
push
push
cli
imul
xchg
scas
sbb
movsb
mov
push
cmp
clc
lcall
mov
push
cli
hlt
ljmp
repz
sbb
pcmpeqd
sbb
jno
dec
jnp
mov
stos
dec
leave
add
popa
ss
outsb
cmp
mov
add
notb
xorb
aad
inc
stos
sbb
mov
cli
sti
imul
mov
outsb
mulb
jg
fistl
mov
arpl
test
add
sbb
clc
jp
dec
cli
mov
stos
jns
imul
inc
loop
and
jne
outsl
cmpsl
xchg
push
scas
lds
push
xor
lea
cmpsl
fsubs
fs
mov
xchg
fidivs
insl
lret
fucom
xor
push
dec
xchg
or
or
adc
fmull
and
je
adc
aaa
mov
outsb
test
sti
repnz
in
fcompl
insl
popf
xor
scas
mov
jge
jge
lods
mov
xor
jbe
imul
gs
cli
fwait
adc
enter
sbb
arpl
lcall
xchg
sti
aam
daa
in
jle
xchg
gs
fs
xor
shl
in
adc
inc
cmp
jo
punpcklwd
stos
cmc
out
out
stos
cli
test
pop
inc
and
cmp
fists
inc
pushf
add
xor
cmpsl
xchg
adc
in
dec
jge
cmpsb
lea
adc
icebp
dec
ds
jno
stos
int
popa
cwtl
mov
xor
jg
scas
outsl
loope
and
mov
inc
sbb
xchg
idivb
mov
pushf
push
adc
jmp
adcb
add
aaa
int3
mov
mov
std
xor
cwtl
dec
jo
lock
lret
out
adc
xchg
js
ljmp
test
mov
mov
xor
push
ss
jg
pop
pusha
sub
mov
xchg
adc
test
fisubrs
or
aad
cmp
pop
sub
fisttps
xorl
push
and
lods
test
or
arpl
or
dec
aas
inc
mov
cmp
les
rcrb
clc
pop
mov
and
jno
dec
push
lods
notb
dec
xchg
pushf
stos
push
pushf
loope
lods
mov
mov
subb
adc
xorb
sahf
notb
fisubrs
pop
mov
inc
pop
dec
sarl
push
fs
popa
dec
stos
cmpsl
mov
daa
popf
push
inc
les
or
stos
push
dec
dec
jle,pt
daa
pop
movsb
push
adc
movsb
jb
or
test
out
jg
loope
dec
jecxz
mov
cmp
or
call
fldcw
and
push
sbb
dec
test
pop
mov
push
dec
cmovs
jecxz
sub
and
movsl
push
rol
or
add
and
popa
movzbl
stos
mov
jns
ds
mov
rolb
and
xchg
scas
pop
data16
add
jle
or
sbb
sahf
out
push
call
orl
testb
cmp
push
sbb
sub
xor
sbb
aad
sub
pop
aaa
add
cmpsb
mov
sub
fistl
iret
add
shll
cmp
pushf
jl
addr16
jo
into
movsb
daa
enter
xchg
xchg
adc
xor
mov
int
out
loope
and
dec
into
xor
repnz
mov
scas
push
in
jl
inc
testl
inc
sbb
pop
cli
out
cmp
popf
mov
xchg
sbb
mov
fists
gs
jae
in
fs
push
or
das
sub
pushf
fistps
xor
fisubl
int
mov
cmp
pushf
out
mov
cltd
mov
insl
dec
push
outsl
imul
xchg
dec
lret
adc
xlat
lret
sub
jge
adc
add
lea
lock
or
sti
je
mov
push
push
scas
adc
and
cmp
test
or
xchg
sub
push
cmp
test
and
adc
xchg
movsl
and
mov
lods
xor
mov
xor
bnd
shll
inc
notb
aas
sub
fimull
xchg
mov
xor
popa
fs
and
lcall
roll
fbld
ret
fsubrp
fwait
fs
mov
jl
shlb
sub
sbb
push
sub
adc
ret
movsl
sbb
adc
adc
push
dec
std
push
stos
add
aaa
idivb
push
ret
stos
das
addr16
fwait
punpcklwd
cmp
scas
and
ss
push
add
jmp
outsl
fdivr
stos
inc
mov
repz
call
xor
xchg
arpl
clc
repz
or
into
clc
imul
popl
mov
add
fcoml
xor
cmp
jbe
push
mov
lcall
daa
les
dec
or
fcmovbe
mov
lea
xchg
jle
push
je
ret
mov
sub
ds
push
std
ss
jo
xorl
mov
xchg
push
adc
jb
lock
inc
push
or
nop
fistpll
mov
jg
jnp
lcall
mov
outsl
xchg
je
test
jg
loop
mov
jbe
imul
mov
lds
sub
imul
xchg
cmp
xor
and
xchg
and
das
mov
mov
shrl
dec
xchg
int
je
pop
test
inc
fsts
fwait
inc
push
pop
cmp
fs
mov
mov
mov
scas
jmp
in
mov
ss
cvttps2pi
repz
out
filds
pusha
xor
data16
loope
pushf
stc
mov
fwait
adc
mov
out
lcall
decb
pop
lds
push
sarl
loopne
push
sub
xchg
or
and
cmp
ja
mov
fbstp
loop
inc
xor
pop
aam
in
adc
push
mov
aam
sub
stos
into
std
xlat
jbe
jecxz
mov
xchg
in
dec
inc
sub
adc
dec
mov
cmc
inc
sbb
loopne
addr16
push
add
push
and
or
mov
fnstenv
inc
jg
idivl
out
sbb
xchg
push
scas
idivb
mov
adc
sbb
ljmp
xchg
dec
test
jl
xlat
jecxz
mov
pushf
lock
nop
mov
xchg
rcll
imul
jo
in
rol
push
mov
out
mov
xchg
pop
cmp
fmuls
insl
lds
out
pop
test
mov
and
dec
aad
int
xchg
je
xchg
cmp
dec
add
lds
pop
hlt
or
repnz
xor
out
mov
lds
adc
hlt
add
mov
je
negb
and
lods
dec
mov
pop
iret
dec
in
cmp
cli
out
insb
sbb
lret
jnp
cltd
lahf
cmp
cmc
add
add
mov
inc
cmp
adc
lock
jno
mov
push
mov
shl
or
cmpsl
mov
shlb
lea
jno
in
push
xchg
lahf
mov
out
xchg
and
ja
adc
lods
sub
mov
shlb
push
xor
je
push
add
cmp
mov
sbb
or
aam
mov
aad
das
lcall
mov
stc
xor
sub
test
jge
and
pusha
xchg
sbb
dec
dec
test
push
xor
mov
push
cld
push
inc
in
add
cmp
shll
cmp
mov
fwait
stc
nop
es
xor
popa
arpl
addb
lods
cltd
xchg
push
fdivrp
sub
movsb
and
sub
pop
je
xor
popa
and
repnz
and
inc
jns
inc
mov
xchg
mov
adc
cmc
lods
xchg
and
popl
jne
jl
out
mov
rcr
in
clc
mov
movsb
mov
lea
fiadds
or
arpl
cmp
mov
ss
mov
pmaddwd
and
adc
lret
mov
mov
pop
in
stos
lock
push
nop
push
mov
es
gs
out
addl
sub
adcb
xor
pop
ss
mov
cmp
fstp
adc
test
dec
jno
push
lahf
and
out
movsb
popa
ret
stos
fdivs
sbb
fidivrl
mov
inc
aas
or
stos
outsb
dec
jmp
js
push
push
cs
test
insb
xchg
imul
orl
jg
xor
fs
add
or
int
in
bswap
xchg
das
xchg
xlat
dec
in
js
inc
test
inc
lcall
jnp
dec
iret
xchg
ror
dec
sbb
jae
insl
clc
or
pusha
in
mov
xchg
sub
ja
repnz
out
jne
dec
in
out
cmp
mull
arpl
and
adc
xor
fldl
mov
div
jbe
jg
ds
sub
call
mov
jno
sbbb
in
dec
pop
mov
ret
mov
fmull
mov
inc
sbb
test
ficomps
adc
scas
xchg
out
arpl
inc
mov
out
int
jle
xchg
adc
jns
ja
mov
aaa
popf
lea
in
jns
mov
rcrl
leave
push
xchg
push
sbb
adc
lret
mov
movsb
shr
int
pop
pop
repz
ret
sbb
xchg
dec
mov
fildl
and
std
cs
js
dec
sub
or
nop
sbb
mov
aam
in
cli
xchg
cli
push
cwtl
ja
cmp
lods
cmp
jp
xchg
in
mov
push
mov
cmp
cmp
gs
call
and
pop
fwait
sbb
adc
dec
shll
or
add
enter
jns
pop
jle
fisubrs
adc
rcr
out
adc
mov
inc
lret
movsl
nop
jge
adc
or
jns
xchg
cmovl
shll
mov
jo
dec
or
movsl
dec
rolb
or
sub
cwtl
lret
insb
sbb
inc
adc
shl
mov
jecxz
sub
fsubrl
pop
enter
mov
test
daa
xchg
and
adc
xchg
shrl
hlt
jbe
cld
adc
rcl
xor
cwtl
out
mov
jp
adc
clc
clc
ss
fdivl
lods
enter
inc
rcrb
xor
push
and
fldt
icebp
aas
int
into
xchg
add
data16
mov
imul
mov
icebp
jnp
hlt
push
xchg
xchg
shrb
es
inc
int3
fwait
push
adc
mov
mov
xchg
fnsave
leave
mov
adc
repz
pop
into
cmp
sub
jbe
xchg
mov
jmp
sub
out
fcompl
jge
ss
jno
adc
arpl
mov
sarl
sbb
unpcklps
sub
jle
mov
pop
xor
dec
into
mov
jl
or
push
pop
inc
mov
lods
dec
or
decb
push
insl
mov
js
pop
xlat
jb
dec
in
pop
pop
jge
in
mov
inc
insb
repz
call
pusha
cli
pop
push
iret
aas
xchg
mov
insb
sbb
notl
call
inc
test
imul
imul
add
inc
arpl
or
sub
inc
push
pop
cmp
setb
arpl
mov
dec
std
push
push
cmp
adc
test
outsb
mov
fucomp
lods
bound
mov
repz
cli
or
inc
cmp
cmc
push
sbb
mov
andb
in
movsb
xchg
jne
and
jae
les
xchg
rolb
add
push
xor
push
xchg
mov
leave
pop
xor
dec
cwtl
push
stc
iret
adcb
sub
scas
sbb
or
adc
xchg
ds
lock
push
mov
inc
aas
jnp
imul
jecxz
shrl
fmuls
icebp
adc
ja
lret
dec
pusha
xchg
iret
dec
inc
jg
pop
xor
cmpsl
jg
or
rcrb
insb
xor
insl
mov
xor
or
mov
xlat
mov
sub
mov
push
std
outsl
sbb
daa
push
jae
sti
mov
jmp
roll
ret
xchg
push
or
mov
in
pop
out
fdivrl
into
lcall
cmp
out
lods
inc
adc
jnp
adc
gs
and
push
stos
mov
out
icebp
sbb
inc
int3
sub
jp
loope
mov
daa
xor
repnz
scas
lcall
xchg
loope
xor
aad
or
clc
fiadds
iret
jb
dec
repz
gs
sub
push
mov
mov
mov
mov
inc
adc
cwtl
movsb
les
push
lret
lods
fstpt
adc
leave
and
jle
js
test
dec
push
add
rorb
dec
inc
mov
out
inc
iret
dec
adc
leave
dec
sub
pushf
mov
pop
filds
clc
push
lret
sti
mov
addr16
jbe
aam
sub
xor
leave
mov
ja
mov
lds
mov
jne
adc
xchg
sub
cld
mov
repz
pusha
test
sti
loop
fldcw
and
push
pusha
dec
push
push
pop
sub
mov
orb
les
push
mov
xor
ja
sbb
out
sti
call
stc
imul
loop
ds
dec
xor
mov
in
repnz
adc
add
xchg
clc
and
inc
test
xor
sbb
test
cli
lods
scas
movsb
push
gs
mov
sub
jb
loope
mov
out
in
lock
mov
mov
inc
cmc
jo
sbb
clc
add
cs
mov
shlb
fadds
mov
imul
sub
push
sbb
add
pushf
test
int
adc
mov
and
mov
lods
pusha
xchg
test
sub
das
mov
sub
daa
test
mov
sbb
inc
movzwl
clc
and
orb
mov
in
gs
sbb
dec
in
je
mov
pushf
mov
mov
pop
dec
lcall
dec
scas
jae
repz
push
movsl
or
sub
add
outsl
sub
shl
jbe
popa
inc
scas
xchg
popa
push
cmp
xor
dec
jl
dec
ljmp
aas
imul
mov
subl
mov
xor
scas
cwtl
add
out
sub
icebp
push
sahf
sti
imul
lahf
gs
mov
out
adc
sbb
ja
mov
loopne
jmp
dec
movsl
cmp
mov
aas
cmpsl
xchg
int
sub
xchg
cltd
out
in
js
mov
sub
in
xor
stos
enter
sbb
xor
inc
aad
stos
pusha
popa
clc
xchg
pop
mov
out
shll
pop
sub
xor
jae
lock
push
mov
in
inc
movsb
mov
inc
mov
cmpsb
daa
dec
adc
loop
sbb
and
pop
lret
push
push
or
push
add
loop
sbb
outsb
fcompl
jle,pt
lcall
dec
xchg
rolb
sbb
mov
cmp
imul
mov
sub
icebp
js
cmp
or
jp
enter
shrb
sti
fcmovnb
or
jns
adc
aas
sbb
pop
mov
jb
xchg
jno
lahf
sub
or
sub
hlt
mov
or
sub
js
add
fstl
jg
mov
fcmovu
jecxz
sbb
add
sarb
or
sbb
jecxz
mov
aam
cltd
js
inc
pop
pop
filds
test
stos
pop
cmpsl
mov
loopne
inc
xchg
out
push
call
inc
pop
data16
notb
not
test
xor
addr16
int
sbb
rcrl
movsb
aaa
cmc
cltd
sti
pop
mov
jecxz
pop
test
jbe
xor
mov
dec
jnp
fiadds
dec
mov
sbb
jg
scas
out
dec
inc
mov
stos
fisttpll
or
push
dec
dec
pop
add
es
rorl
test
rcrl
mov
ljmp
or
mov
out
xchg
add
mov
fwait
std
mov
mov
mov
lea
push
mov
pop
dec
or
sbb
cmp
sbb
pop
cwtl
imul
mov
sar
out
adc
inc
pop
and
dec
jns
nop
mov
shrl
mov
shll
jecxz
and
jo
or
xor
add
sub
daa
mov
sbb
or
lcall
pusha
push
shl
insl
jns
bound
jnp
orl
insl
xchg
sub
addr16
std
leave
cmp
or
mov
filds
pop
dec
sarl
sti
fistpl
nop
bound
adc
lds
push
push
jae
lret
xor
pop
xor
pop
gs
push
ss
les
mov
adc
push
adc
outsl
jbe
or
mov
test
bswap
mov
fidivl
test
popa
adc
std
push
adc
outsl
adc
sbb
lahf
into
mov
out
insl
jae
jne
hlt
add
add
cltd
popa
adc
fidivs
lcall
mov
inc
or
cld
push
jns
xchg
xlat
test
mov
scas
insb
adc
lret
inc
adc
pusha
shl
fstpl
push
loope
push
mov
scas
std
ja
mov
out
fcoms
aam
adc
jg
cmp
repz
mov
adc
outsb
inc
dec
cltd
cmp
and
fs
idivb
inc
mov
lret
xchg
ret
fiaddl
and
push
test
imul
add
fistpll
push
stos
frstor
jmp
ret
mov
xor
jbe
aas
mov
mov
mov
out
adc
cld
lock
mov
imulb
out
cmpsb
add
mov
insl
fwait
adc
xchg
adc
inc
adc
push
ficompl
jg
mov
in
icebp
loop
movsl
arpl
shll
pop
pop
das
and
xchg
push
cmp
dec
imul
lds
jle
icebp
mov
sbb
xchg
inc
pop
sbb
ds
push
cwtl
adc
in
lret
pop
xchg
imul
sarb
sbb
xchg
lea
and
fldcw
jno
daa
popa
out
cmp
test
ja
or
lret
xchg
popf
lock
scas
mov
mov
mov
popf
test
out
aaa
jp
lret
push
pop
or
mov
movsb
push
add
xor
inc
fisubrs
iret
bound
pop
rorb
aad
xor
mov
stc
mov
lahf
lods
in
mov
arpl
arpl
and
lahf
jns
es
movsl
adc
jbe
fdivs
jne
mov
das
adc
mov
sbb
push
roll
cmp
and
mov
xor
cmp
inc
adc
lahf
mov
or
movsl
adc
xor
aam
popa
cmpsb
dec
filds
pop
sub
sbb
enter
jmp
ja
or
ja
lds
push
pop
insb
or
je
popf
fstps
psadbw
sahf
jge
loopne
idiv
insb
fldcw
mov
call
ss
pop
pop
fbstp
xchg
sub
mov
in
shlb
idivl
arpl
mov
xor
aam
push
andl
mov
and
push
or
insb
xchg
jns
xor
dec
daa
in
mov
adc
and
sbb
shrl
push
fnstenv
pop
mov
xchg
fs
cs
mov
hlt
pop
add
js
jge
lods
cmp
and
dec
repz
inc
mov
jmp
addr16
aaa
mov
in
cmpsb
and
sarl
push
push
or
sahf
sub
push
ja
pslld
outsb
std
jb
insl
cmc
jbe
jp
mov
daa
mov
sub
fisttpl
adc
mov
scas
adc
fxch
mov
xor
add
pop
insl
mov
stc
xor
xor
cmc
pop
jg
iret
in
adc
add
inc
pop
stos
jb
push
cmp
jb
or
adc
frstor
data16
push
or
push
push
popf
dec
mov
pop
lods
sub
sbb
push
push
push
mov
or
push
divb
loopne
inc
adc
sti
addr16
xor
mov
jb
daa
pop
cs
incl
out
mov
lock
dec
lret
adc
ret
cltd
pop
sti
jle
xor
mov
jb
ret
leave
mov
dec
sub
pop
sub
loop
fst
roll
sarb
sti
movsb
std
loope
push
sbb
dec
cmp
aaa
jbe
mov
out
fs
add
mov
push
je
inc
xchg
dec
icebp
dec
jne
mov
mov
add
jo
insb
and
pop
cmp
les
sub
idivb
int3
or
ss
and
aad
push
xchg
or
jmp
in
pop
mov
xchg
movsl
aam
scas
jnp
stos
leave
sbb
pop
mov
movsb
inc
movsl
ds
scas
mov
jp
xlat
jnp
arpl
cmp
push
in
loopne
xchg
xchg
dec
push
call
test
push
fiadds
pop
cmp
mov
xlat
mov
scas
mov
cmp
dec
nop
outsl
popf
push
adc
cmp
bound
dec
sbb
inc
int3
inc
subl
lret
cwtl
adc
shr
add
and
shrl
inc
cs
and
jecxz
testl
test
jmp
inc
movsl
mov
fs
add
ja
fcompl
push
subl
inc
push
jp
data16
loop
xor
lods
stos
adc
and
xor
mov
repnz
jle
addr16
mov
ss
mov
add
enter
test
popa
inc
jmp
stos
xchg
das
std
fistpl
mov
lret
mov
stc
test
xchg
push
cmp
dec
por
stos
jle
add
xor
ja
mov
repnz
cmp
xor
sbb
iret
rcr
cltd
xor
scas
xor
aad
sub
xchg
mov
fidivl
scas
fisubrs
je
daa
sbb
push
xchg
imul
cmp
gs
mov
pop
mov
adc
inc
insb
fidivrl
xor
xchg
push
test
adc
test
sbb
out
stos
sub
rclb
jbe
push
clc
add
std
push
dec
mov
jns
mov
adc
mov
aad
xlat
fdivs
lea
lock
mov
xchg
mov
ljmp
mov
insl
lcall
daa
hlt
jne
aas
mov
mov
inc
jo
sub
mov
lea
mov
in
ss
mov
js
jle
xchg
fdivrl
movsb
scas
insb
push
pusha
xor
mov
lock
mov
popa
mov
cmp
lret
orl
in
dec
cmpsb
push
in
pusha
sbb
stos
rol
fs
mov
sarl
inc
mov
mov
push
mov
mov
mov
gs
imull
xor
jp
psubusb
xor
sub
jo
xchg
adc
pop
test
pop
std
cmpsb
in
jl
loope
dec
dec
push
sbb
or
ss
movsb
movsl
test
inc
dec
jge
mov
pop
das
push
decb
aad
lret
mov
in
cmp
add
stc
jns
xor
je
inc
cmp
shrb
in
fs
dec
xchg
aaa
adc
push
rorl
loope
pop
xor
add
inc
xchg
mov
enter
add
std
push
bound
push
les
aam
pusha
clc
pop
mov
cmpsb
cmovge
sahf
pop
cmp
xor
mov
mov
mov
cmpsl
fs
imul
push
sbb
inc
pusha
testb
outsb
adc
popf
sub
mov
out
dec
cmp
pop
mov
cmpsb
outsl
loopne
or
adc
or
loop
or
inc
mov
push
les
std
imul
hlt
sahf
repz
pop
push
adc
scas
ljmp
mov
xchg
pushf
movsb
lods
add
shrl
adc
xchg
out
fisttps
jae
push
adc
or
mov
scas
push
mov
sarb
xchg
daa
mov
xor
mov
jge
add
clc
inc
mov
jmp
sub
sbb
out
es
push
xchg
inc
pop
insb
sar
movsb
inc
xor
inc
push
or
or
push
subl
fnsave
sub
adc
jbe
fbstp
rol
adc
xchg
jae
pop
clc
dec
insl
dec
nop
xchg
mov
or
cli
stc
xor
dec
mov
enter
mov
rorl
inc
ljmp
adc
mov
into
div
dec
lahf
inc
inc
add
aaa
popf
or
fistps
and
pusha
rorl
bound
xchg
jnp
cmp
xchg
xchg
xchg
lret
lds
cmp
popf
mov
aaa
js
jns
sbb
shll
xchg
mov
test
and
jns
jp
push
mov
xor
call
lods
daa
lahf
outsb
sub
popf
bound
mov
cmpsl
sub
test
xor
push
int3
mov
mov
jecxz
ljmp
xor
aam
cmp
iret
in
cmp
mov
enter
pop
sbb
push
lret
mov
xchg
inc
push
mov
inc
out
jnp
lret
lock
popa
push
sbb
fxtract
aas
lahf
add
in
cmp
dec
xor
fucom
adc
jo
or
nop
xlat
sti
insl
and
test
stc
jo
movsl
mov
sub
mov
push
fnstcw
inc
cmp
push
dec
fnstsw
sub
iret
pop
jge
popa
jmp
push
adc
jge
inc
clc
hlt
fadd
nop
cmp
mov
andl
ret
sbb
gs
movsb
aaa
in
ss
ret
nop
int3
fldenv
cmp
daa
enter
sti
push
mov
sub
xchg
and
pusha
sbb
dec
xchg
stc
out
sub
cmp
fnstcw
add
mov
push
lret
or
es
in
add
jbe
je
or
in
rol
out
pop
clc
jb
push
mov
test
cmp
xchg
lcall
in
inc
es
aaa
aaa
clc
je
data16
insb
in
cmp
mov
jge
es
in
fdivs
aas
fs
jns
mov
xchg
pop
in
imul
std
das
lcall
icebp
push
xchg
mov
lret
jecxz
push
dec
push
icebp
mov
jp
jl
mov
adc
lret
sub
test
dec
mov
idivb
int
test
loope
leave
popf
push
clc
xor
gs
leave
mov
xchg
jge
orl
mov
loopne
push
clc
xor
jb
mov
push
popf
cs
dec
lret
fldl2t
pop
fsubr
xor
mov
jnp
iret
adc
pusha
stos
inc
xor
hlt
leave
xor
stos
or
hlt
bnd
mov
xor
xchg
jns
iret
dec
push
in
arpl
aad
fsubs
jge
sub
movups
jp
mov
inc
or
adc
shlb
test
mov
bound
jle
ret
scas
popa
cli
incl
add
dec
in
mov
lret
add
xor
mov
adc
mov
daa
inc
push
jnp
gs
pushf
das
push
mov
test
test
mov
xor
fwait
movsl
push
inc
mov
jnp
sti
sub
outsb
fstp
out
cmp
out
xchg
insb
sahf
mov
insl
mov
xchg
xchg
clc
cmp
pop
mov
sub
rcr
fisubrs
int3
mov
repnz
pop
mull
add
loopne
inc
sbb
test
and
cmp
sti
push
adc
mov
outsl
push
dec
pushf
sbb
mov
mov
popf
sahf
icebp
add
int
adc
and
mov
pop
mov
dec
mov
imul
pop
test
leave
jbe
ret
jnp
out
idivb
rol
movsb
call
inc
cmpsb
pop
cltd
shll
mov
iret
mov
mov
sub
inc
das
filds
shrb
cmpb
mov
xchg
pop
in
mov
and
cmpsl
lret
pop
cwtl
cmpb
stc
arpl
mov
icebp
xor
bound
xor
adc
sti
cwtl
loopne
jno
pop
pop
sbb
shlb
enter
dec
out
mov
frstor
adc
leave
jmp
mov
add
mov
mov
xor
push
xor
cmp
mov
popf
push
addl
sbb
cwtl
sti
jge
into
decb
and
stc
and
mov
mov
ljmp
lds
sub
push
lock
pop
aad
dec
sbb
das
sbb
push
fimuls
jge
repnz
shr
nop
mov
inc
stos
push
mov
cmp
aaa
cmp
xchg
cmp
or
addr16
xchg
adc
nop
cmp
movsb
outsl
jns
mov
add
imul
inc
data16
push
jmp
mov
cmp
pop
das
sub
in
inc
jecxz
mov
lock
jmp
dec
mov
lahf
adc
out
fwait
adc
pushf
pop
mov
imul
test
iret
std
loop,pt
ja
testb
or
cmpsb
js
xorl
add
lods
or
in
fistpl
loop
push
or
sahf
ds
jg
inc
popf
mov
pop
outsb
lods
mov
jmp
adc
pop
push
jno
loop
test
mov
ss
mov
mov
ljmp
lds
leave
je
cltd
push
lods
cld
add
out
sub
hlt
inc
pop
pop
dec
mov
andb
pushf
jmp
fisubl
out
loopne
mov
mov
sti
xchg
out
jecxz
xlat
das
adc
in
cmp
xor
call
ret
xor
mov
in
scas
test
ss
sub
mov
rcrl
lret
mov
push
and
iret
enter
imul
lock
push
xor
ljmp
imul
andb
data16
test
dec
pop
jne
xor
shl
sbb
outsl
ret
fcmovb
cmp
xchg
or
cmp
sbb
adc
hlt
mov
in
cmp
inc
dec
push
gs
scas
insb
outsl
push
clc
jae
in
lret
push
arpl
imul
sbb
push
mov
outsb
shrl
cmp
in
push
pushf
inc
shrb
lock
inc
fs
pop
xor
cld
inc
jno
jp
mov
je
sub
fdiv
ret
int
dec
scas
inc
lock
adc
pop
sahf
sub
mov
loop
pop
pushf
or
dec
sbb
rclb
lret
ljmp
out
in
adc
sbb
mov
stc
mov
rcll
popa
push
loop
add
cmp
xor
stos
sbb
sub
fnstcw
call
rcr
in
cltd
scas
mov
add
mov
aad
or
xor
inc
mov
outsb
xchg
fdivr
or
sti
pop
or
cli
gs
pop
mov
lcall
xchg
pop
and
sub
cld
mov
mov
addb
inc
xor
aam
or
sti
cmp
cmp
in
out
xchg
loope
xchg
sti
in
cltd
xor
sbb
xchg
pop
add
popa
inc
pop
int3
icebp
enter
fadds
mov
jb
ja
fdivr
addb
or
adc
xchg
pop
std
cli
out
push
imul
sub
stos
addr16
aaa
jo
xorl
leave
and
adc
dec
xchg
fs
adc
movsb
cltd
mov
sbb
mov
add
cmp
inc
scas
push
pop
xchg
dec
ss
lcall
inc
lods
mov
xchg
push
sub
xchg
fiadds
or
fists
mov
inc
pop
subl
sbb
mov
in
arpl
imul
and
jo
mov
mov
xchg
or
cmp
dec
adc
into
sub
inc
mov
lcall
mov
and
scas
int3
test
test
pop
push
idivl
pop
jl
mov
ljmp
jb
addb
inc
adc
jp
lds
shl
jp
mov
ret
jnp
bound
xchg
cmp
jmp
inc
xor
mov
xor
stos
or
gs
jmp
cmpsb
inc
mov
dec
xchg
adc
jl
and
xor
inc
ljmp
clc
mov
mov
adc
flds
or
rol
pop
sbb
lods
cmp
pop
je
movsl
inc
ror
test
imul
adc
cmp
call
dec
adc
cmp
jmp
out
push
adc
ret
incb
lea
xchg
ja
das
push
jle
stos
in
push
xor
lret
addr16
int3
pop
or
mov
mov
xchg
mov
cmp
inc
aam
mov
cltd
loopne
in
sbb
mov
das
inc
stc
pop
xchg
je
sarb
jmp
call
cli
dec
es
ret
pop
mov
shlb
pop
mov
lahf
ljmp
inc
sbbl
xlat
dec
jle
push
outsb
mov
pop
mov
xchg
pop
xor
mov
addr16
or
mov
cwtl
das
sbb
push
pop
lods
push
arpl
jmp
scas
mov
cmp
das
scas
sub
pop
mov
out
xor
add
pop
cmc
dec
out
loopne
pop
mov
xchg
mov
mov
push
push
jmp
lahf
inc
mov
jge
cmpsb
dec
je
mov
jns
test
push
jp
repz
sbb
pop
mov
sub
das
lret
add
and
and
xchg
push
popf
push
mov
or
mov
sbb
mov
dec
aas
sti
in
ret
out
aam
jmp
out
ja
jl
xor
mov
mov
jo
jne
lods
or
push
fs
inc
test
push
inc
ret
sbb
jge
adc
sub
push
pop
adc
xchg
or
sarb
arpl
outsl
sub
sbb
adc
subb
in
jb
outsl
jp
lahf
mov
fldcw
stos
imul
or
scas
fstl
jne
stos
fldt
sahf
out
fisttpll
outsl
mov
es
test
iret
pop
jmp
pop
fs
sbbl
sub
push
adc
dec
jmp
in
int
dec
lret
add
push
pop
pop
sahf
in
push
loopne
pop
sbb
rorl
mov
std
cmp
inc
jecxz
push
or
loop
aaa
das
lahf
cmpxchg8b
push
roll
std
push
pop
ljmp
jo
enter
test
pop
add
repnz
fprem1
cwtl
into
rorl
insb
jb,pt
inc
orb
pusha
add
push
xchg
inc
shlb
popa
ja
sub
xchg
fstps
insb
lds
cs
outsb
mov
xchg
lods
mov
lret
stos
lret
jg
dec
push
sub
inc
pop
push
mov
rclb
or
jnp
ljmp
push
and
mov
cmpsl
lret
or
pop
mov
lea
dec
add
inc
jl
inc
addb
sahf
mov
outsb
sub
cmp
shll
insb
popf
push
scas
push
in
mov
movsb
out
jb
pop
test
rol
add
pop
mov
sbb
jae
pop
xor
mov
jg
jbe
cwtl
ja
mov
inc
lock
shrb
pop
in
xor
adcl
fs
xchg
jl
mov
leave
mov
loopne
xorl
loop
inc
and
or
insb
orb
imul
mov
fwait
sub
mov
aam
test
fildll
fcmovnu
shll
test
ret
test
addb
and
mov
fwait
dec
loope
push
repz
add
push
mov
test
clc
addr16
pop
jbe
xor
add
push
leave
std
incb
inc
addr16
xchg
gs
fldpi
je
or
cmp
sarl
sub
push
or
xor
jecxz,pt
out
fstpl
sbb
cmpsl
mov
mov
pop
into
xchg
or
insb
ret
pop
cmp
out
mov
lods
inc
push
movsl
sbb
xchg
jns
psrlq
arpl
or
inc
xchg
clc
mov
int
outsb
adcb
in
mov
inc
ss
mov
jns
jg,pn
mov
andb
sar
xchg
xchg
rcrb
test
push
xchg
cltd
sbb
dec
or
mov
mov
push
fndisi(8087
pop
test
mov
stc
ss
cwtl
rcr
mov
popa
mov
mov
enter
mov
xor
xor
mov
xlat
std
xchg
cli
fidivrs
sarb
les
dec
fistps
lahf
inc
mov
push
arpl
int
and
sub
pop
mov
adc
jp
xor
ds
or
jno
sarb
inc
mov
inc
cmpsb
pop
jmp
shl
sbb
jg
shl
ss
into
push
inc
fnstenv
push
rol
sarl
dec
call
sub
sub
in
xor
inc
xchg
push
jnp
in
pop
int3
fs
dec
outsl
out
outsb
jbe
or
mov
mov
test
push
xchg
mov
loop
aas
and
xchg
mov
pop
mov
sbb
adc
negl
daa
and
push
outsb
andl
push
jae
cmpsb
in
add
out
fxch
js
and
fldl2e
cmp
sbb
or
rolb
bnd
push
aas
mov
jmp
or
in
jnp
leave
fldenv
lret
out
xchg
mov
inc
sahf
push
loop
scas
adc
inc
xlat
in
and
sti
pop
andl
push
mov
sub
and
mov
jmp
adc
pop
jbe
aaa
stc
ss
divb
daa
es
aas
jecxz
insb
cmp
mov
loop
imul
mov
add
xchg
jnp
push
pusha
clc
movsb
test
sti
and
cmp
fdiv
add
cmp
jb
insb
insb
iret
cmpsb
in
pop
mov
ficompl
mov
inc
ljmp
testb
fisubs
mov
call
sti
shrb
rorb
mov
test
cmp
int
mov
or
pusha
jns
das
xor
mov
fcoms
or
inc
cwtl
pusha
arpl
and
sub
pop
fnstsw
push
and
mov
sbb
jae
sub
stos
pop
cmp
xchg
fwait
jge
das
dec
into
mov
in
fisubs
out
stos
dec
scas
and
ja
add
push
inc
ret
aaa
daa
filds
gs
lcall
push
out
outsb
jg
sbb
std
rorb
inc
inc
imul
bnd
iret
shlb
mov
push
jg
pop
xchg
inc
rorb
push
jg
add
dec
lods
adc
sub
insl
test
imul
scas
imul
imull
dec
xchg
jge,pn
sahf
jnp
test
movsl
jmp
sahf
jne
lock
sbb
cmp
mov
daa
movsb
mov
in
je
lods
arpl
add
push
or
xor
lret
adcl
subb
sbb
cmp
test
cld
jge
push
loopne
inc
les
xor
add
and
and
mov
and
mov
pop
mov
pop
sbb
mov
or
jns
push
cmpsl
mov
imul
inc
xchg
mov
stos
ja
inc
sub
fstpt
xchg
sarl
cmp
test
pop
stos
push
test
xor
lahf
in
or
ds
cmpl
and
insb
jg
jmp
dec
aas
data16
dec
cli
add
movsl
sbb
sbb
ret
mov
mov
nop
pop
cs
test
dec
ficomps
aam
psubw
xchg
dec
popf
test
mov
rorl
fisttpll
and
pop
out
test
adc
lods
shl
or
jb
mov
ret
mov
or
test
in
shlb
popl
leave
lods
pop
test
daa
mov
or
or
cmp
dec
add
dec
or
clc
pop
or
hlt
mov
nop
gs
adc
out
mov
pop
mov
mov
bound
in
je
mov
dec
mov
je
dec
mov
rolb
and
cmp
out
mov
inc
pop
xchg
sarb
xchg
insl
gs
jp
fsubrs
stc
mov
pop
int
jo
mov
inc
push
sti
add
pop
xor
adc
xchg
push
add
aaa
cmp
call
xchg
mov
dec
je
dec
pusha
xchg
cmpsl
daa
scas
call
cld
pop
rolb
imul
negb
push
inc
push
cli
rcrl
sti
cmp
sub
xor
add
aaa
sub
or
into
ds
cltd
das
scas
clc
xchg
ftst
mov
pop
sbb
test
push
popf
orl
cmp
push
pusha
ret
test
test
adc
jbe
std
aas
xchg
lock
add
mov
test
movsb
and
pushl
xchg
ficompl
pop
dec
repz
pusha
sub
add
clc
testl
imul
sbb
rcrb
stos
xor
ljmp
push
out
stos
popa
shlb
addr16
pop
push
sbb
push
aas
bound
loopne
out
push
scas
xlat
ret
cwtl
xchg
mov
mov
test
popa
xor
js
test
push
add
stos
mov
mov
mov
bound
pop
repz
fists
je
into
push
jecxz
jbe
in
test
mov
sub
sarb
lcall
loop
fwait
jg
jns
out
mov
pop
mov
orb
xor
sbb
xchg
in
xor
gs
imul
inc
pop
movsl
xchg
jl
outsb
mov
mov
fidivs
sub
push
push
mov
ss
or
leave
pop
movsl
clc
push
popl
mov
aaa
shlb
ljmp
rcr
fs
sbb
push
aas
cmp
sbb
dec
push
out
cmp
ds
clc
addr16
sbb
movsl
popa
int
je
sbbl
jl
mov
mov
stos
pop
cwtl
mov
or
jne
jb
push
mov
mov
test
push
jp
popf
iret
pop
outsb
mov
cli
mov
das
push
pop
adc
add
xchg
cli
mov
into
iret
addr16
push
and
xor
in
imul
inc
sbb
movsb
mov
aad
sub
xchg
aas
test
pop
hlt
inc
in
push
xchg
xor
mov
cwtl
std
sbb
fs
aaa
pop
fsubl
push
jge
push
cmp
dec
add
shrd
fldcw
adc
xchg
cmp
cmpsb
movsb
loope
gs
sbb
cmpsl
mov
jnp
iret
jb
xchg
push
out
dec
testl
jne
cmpsl
shrl
pop
and
loope
ret
mov
or
xchg
cmp
in
std
or
in
push
rcrl
jmp
lret
cmp
mov
pop
inc
cld
inc
int3
fcom
call
nop
mulb
popa
add
shrb
or
cld
lds
or
pop
outsl
sbb
mov
jge
in
lods
clc
rol
pop
cmp
mov
hlt
sahf
inc
xor
push
jae
jne
or
and
jno
push
in
popf
roll
movsl
filds
push
aaa
jge
in
dec
push
add
dec
test
fstps
enter
mov
mov
cli
jecxz
test
xor
loop
dec
sahf
lods
xor
xor
and
inc
lods
es
adc
enter
dec
jge
daa
lcall
jp
inc
add
and
clc
jo
cltd
in
in
loopne
jo
cmpsb
pop
sbb
mov
push
push
stc
cmp
xor
cmp
cmp
sbb
jo
and
cmp
dec
xchg
jno
divl
mov
cmp
test
clc
mov
sarb
or
nop
out
dec
add
push
pushf
pop
mov
fists
mov
lret
xchg
xchg
adc
orb
out
int
mov
sbb
mov
sbb
hlt
add
and
cmpsl
pusha
mov
lock
xchg
adc
cmp
mov
xchg
sub
jnp
pop
mov
jo
dec
mov
push
hlt
mov
repz
jle
outsl
orl
push
dec
xor
repnz
mov
jecxz
mov
lahf
ss
popa
jno
cs
mov
ss
int3
jbe
js
cwtl
and
into
clc
jmp
out
pop
mov
sti
andb
pop
sti
lods
mov
push
movsl
adc
aas
int
mov
loopne
jno
mov
xor
dec
adc
mov
or
jg
outsb
bound
out
daa
jp
or
mov
mov
sub
mov
arpl
lret
xor
pusha
dec
adc
bound
ljmp
xor
xor
iret
mov
arpl
pop
pop
stos
pop
call
fmuls
shrl
push
cmp
rcll
pop
cld
es
lock
cs
fstps
sbbl
lock
scas
xchg
jb
mov
and
mov
xor
cmpsl
mov
and
cmp
xchg
inc
aad
fstp
pandn
mov
mov
andb
aad
pop
nop
lcall
divb
stc
jmp
dec
mov
adc
out
add
cmpb
mov
sub
jl
pop
aas
scas
pop
out
stos
xchg
in
inc
and
dec
sub
cmp
pop
mov
add
jle
sbb
sub
ljmp
incl
mov
mov
sbb
push
das
sub
stos
cmp
sub
sbb
adc
sbb
test
xor
sbb
xchg
push
add
xchg
add
shll
add
cld
mov
lods
sahf
jno
mov
xorl
les
jmp
pushf
rcrb
pop
lods
lahf
push
lcall
xchg
jg
push
xchg
loop
loopne
mov
pushf
and
outsb
add
jp
pusha
mov
xchg
and
jg
sbb
adc
sbb
cmp
shl
movsl
xchg
cmpsb
std
daa
cmp
hlt
push
mov
lahf
push
testb
dec
adc
pop
fcom
sbb
xor
out
mov
andb
push
mov
mov
aas
std
push
xchg
shrl
insl
int3
xor
mov
mov
test
popa
or
jno
rcrb
fmull
orl
adc
or
stos
jmp
cs
adc
bnd
pop
jp
push
jo
or
sub
or
mov
test
and
mov
add
sbb
adc
push
aaa
je
push
add
push
adc
lahf
xchg
fcmovbe
sub
push
mov
test
test
jge
test
add
inc
insb
nop
inc
xchg
xchg
and
mov
cmova
or
stc
lods
dec
jg
daa
sarb
mov
lock
sub
out
flds
outsb
xchg
pop
push
ret
adc
inc
mov
sbb
sub
neg
iret
ljmp
ja
pusha
mov
lahf
jmp
mov
push
mov
pop
push
jl
shl
xchg
insl
inc
dec
loope
mov
mov
add
fdivs
mov
push
pushf
data16
cmp
icebp
push
lcall
xchg
cmpsb
lcall
repnz
cmp
sti
dec
xor
jl
ss
lret
mov
xchg
and
or
insl
jg
in
fstpt
aad
pop
into
inc
cld
inc
cld
fiadds
clc
lods
mov
jle
mov
push
rcr
rcrl
sbb
sahf
fwait
cmp
adc
pop
push
xchg
out
mov
imul
iret
cmc
xchg
out
mov
fdivrl
es
cmpl
sub
repz
jo
xchg
popa
int3
xor
insb
iret
push
mov
push
push
push
test
pop
inc
fiadds
inc
scas
sbb
pop
inc
fnstenv
fcmove
xchg
mov
pop
ret
xchg
imul
mov
out
in
inc
and
jg
jbe
insl
fwait
int3
lea
js
push
mov
mov
inc
jb
aam
inc
mov
test
sub
pop
ss
push
sbb
add
xchg
cld
sbb
lret
jno
mov
test
jp
iret
fsubs
inc
roll
shrl
jg
cmp
je
sub
mov
dec
or
sbb
pop
stos
and
mov
and
add
lahf
pop
loope
inc
push
out
inc
jbe
sbb
cmc
jge
dec
push
jae
popf
push
cmp
inc
repz
faddp
jp
mov
rcl
sbb
in
int3
push
and
insl
insl
cmp
callw
push
jo
repnz
pushf
push
les
xchg
insb
mov
lahf
scas
sub
push
sarl
xchg
test
cmp
push
imul
out
or
adc
in
fsts
out
jg
div
push
cld
adc
and
test
stos
test
xchg
outsb
sub
outsl
hlt
jnp
add
jbe
mov
nop
jae
sbb
in
lods
sub
loope
pop
mov
fucomp
push
push
jmp
outsb
vcvtsd2si
negb
sbb
fisttpl
push
loope
mov
enter
cmp
jl
in
test
xchg
push
ljmp
add
pop
sbb
and
js
paddw
push
lret
push
fcoms
test
cmc
mov
push
inc
cmp
dec
jmp
int
inc
gs
jne
pop
xorb
mov
cmp
add
and
xchg
dec
fwait
cmp
lods
mov
cmp
dec
xchg
jns
int3
jl
mov
inc
cmp
dec
xchg
fidivrl
or
pop
or
or
xor
mov
xchg
in
cmpsb
sbb
mov
mov
insl
call
pop
add
push
xchg
push
xchg
fcomip
iret
loope
or
mov
jecxz
dec
xchg
out
mov
test
rcr
push
sti
mov
pop
sub
je
or
push
and
sbb
iret
push
sub
das
mov
out
into
sub
test
test
lret
xchg
mov
dec
jmp
push
inc
sbbb
sti
movsb
inc
pop
mov
cmp
lods
xchg
leave
fucom
mov
xchg
inc
jb
jne
mov
shll
mov
out
orb
sub
imul
inc
es
cmp
scas
jo
push
hlt
xchg
inc
imul
pop
push
orl
lret
push
add
xchg
lea
mov
les
inc
mov
inc
mov
loope
test
idivb
jecxz
push
pop
adc
fsubl
rcrb
mov
xchg
movsl
popa
sbb
imul
xchg
add
jecxz
pop
popf
push
lea
add
mov
out
push
sub
xchg
bound
lods
movb
lret
and
and
mov
add
adc
add
sbb
jmp
cmp
ds
popf
jnp
loopne
inc
jno
sarl
scas
lret
mov
push
cld
pop
sti
sbb
push
negl
push
movsb
call
stc
xchg
aaa
or
je
vsubps
lret
es
mov
insb
fstpl
divl
int3
mov
cltd
aad
mov
push
fstl
or
mull
xchg
and
mov
push
mov
dec
roll
shlb
sbb
inc
and
lret
push
cs
cmp
mov
and
mov
idivl
ret
or
dec
pop
xchg
dec
xor
and
lahf
ljmp
scas
ss
daa
aad
xchg
outsl
adcl
mov
out
mov
xor
jecxz
test
imul
cmp
sti
xor
xor
pushf
adc
cmp
pusha
jno
cmp
scas
out
and
adcl
inc
mov
pop
push
shl
jge
movsl
or
inc
icebp
pusha
pop
or
mov
sub
mov
pop
sbb
les
ror
fadd
in
pop
xor
inc
mov
jne
xchg
or
push
or
inc
or
inc
cmp
adc
xor
dec
inc
hlt
cmp
lds
mov
cmp
scas
lret
subb
mov
jl
in
push
sub
data16
xorb
mov
push
jo
sub
icebp
push
aam
or
not
cmp
dec
cmp
std
add
mov
iret
clc
cmpsl
fimull
jae
outsb
add
stos
push
pop
mov
mov
adc
mov
and
orl
inc
cmpsl
xlat
push
and
cmpsb
or
mov
rcrb
xchg
shlb
nop
test
cmp
lcall
cwtl
movsb
jl
arpl
adc
lret
ret
add
cmp
rcrb
push
addr16
xor
lahf
out
stos
into
jbe
insb
sbb
fcmove
xor
mov
filds
insl
add
jg
cmp
jge
fadds
push
imul
lods
pop
aas
mov
cmpsb
jl
aad
fcoms
xor
or
lds
mov
pop
outsl
sbb
dec
jecxz
int
inc
or
rorl
mov
cmc
inc
cmp
loope
add
cmpsl
dec
roll
mov
ret
jns
ficoml
pushf
stos
pop
aaa
dec
ja
cld
dec
xor
addr16
jae
getsec
lahf
ds
mov
pop
pushf
pop
add
loopne
cmpsb
xchg
adc
xchg
adc
sbb
shlb
fs
cmp
jae
push
sbb
movq
hlt
or
xchg
jno
mov
jb
fimull
test
jo
dec
adc
jg
push
les
movl
idivl
fdivl
xor
jno
scas
push
push
mov
cwtl
sub
in
lret
pop
fadds
je
cmp
loop
jno
pop
imul
lret
cmpsl
mov
das
sub
dec
mov
cli
call
sahf
insb
inc
les
add
ret
stos
or
add
push
lar
mov
addl
mov
push
or
add
ljmp
pop
outsl
cmp
mov
mov
jge
inc
mov
flds
test
daa
or
pop
dec
inc
cmp
push
cli
xchg
fisubs
xchg
sub
mov
outsl
and
inc
aam
xchg
add
ja
cmp
push
sbb
pop
xor
aaa
jecxz
sub
mov
lods
adc
fs
mov
push
fistpll
cmpsl
repnz
test
das
cmpsl
stos
loopne
pushf
mov
repz
dec
negl
mov
xchg
fbld
pop
lock
ret
pusha
adc
fildll
and
and
inc
xor
cs
imulb
jp
adc
mov
int
test
das
hlt
dec
add
xchg
shr
cmpsb
jl
xor
movsb
addr16
sbb
in
mov
and
or
cli
js
mov
xchg
icebp
add
mov
movsl
icebp
xchg
and
xchg
shll
scas
jnp
icebp
lock
jbe
mov
lock
push
adc
mov
aam
add
inc
push
fimull
filds
outsb
mov
les
outsl
add
cmp
and
or
jge
mov
add
dec
stos
rcl
cmp
loop
neg
insl
and
inc
mov
xchg
fwait
or
sbb
mov
rolb
movlps
cmp
add
cltd
data16
aam
imul
mov
pop
sbb
mov
push
or
in
adc
pop
sbb
xchg
pop
pop
or
cmpsb
cmpsl
or
out
int
mov
mov
in
or
adc
xchg
pop
push
insl
xchg
add
shll
repz
mov
insl
push
fidivrl
and
fisubl
scas
and
pop
pop
mov
push
adc
es
lods
jg
mov
in
sahf
call
adc
xchg
mov
movmskps
mov
test
pushf
aad
aas
xor
rcl
ss
imul
addb
jae
jnp
cmpsb
inc
or
pop
cmp
lods
mov
adc
sub
mov
jecxz
pop
insb
jp
and
shlb
mov
mov
sub
sbb
nop
fs
aas
int
lret
divl
lret
jle
jbe
int
pop
fs
in
sub
test
add
fcomp
jecxz
jbe
adc
mov
dec
lock
shl
xchg
into
aad
gs
aaa
push
jge
xchg
aas
mov
call
mov
pop
push
out
add
mov
pop
mul
add
sub
iret
dec
int
mov
inc
repz
shll
pcmpgtw
fbstp
push
jl
lea
xchg
dec
push
cli
pop
cmp
pop
enter
ret
mov
imul
and
pop
sub
mov
mov
mov
movsb
pop
jecxz
mov
fstl
mov
sbbl
jecxz
push
stos
outsl
mov
xchg
dec
nop
jb
arpl
gs
test
or
test
fiadds
pop
test
movsb
fisubs
outsb
push
insb
test
fdivl
fcomp
cli
out
sub
sbb
inc
inc
cmp
mov
adcb
fiadds
push
and
jbe
mov
out
jl
xchg
sub
iret
push
mov
inc
dec
leave
push
adc
pop
mov
bound
cs
int3
jl
insl
insl
xor
sahf
daa
xor
push
push
hlt
call
fsubp
xor
adc
inc
push
out
jge
xchg
outsb
scas
inc
in
ss
sarb
mov
and
xor
in
jb
sti
inc
je
dec
add
mov
sub
mov
cwtl
nop
pop
xchg
jbe
out
repnz
sbb
jns
push
mov
cmp
scas
mov
jecxz
mov
sub
xor
dec
stc
scas
add
stc
andl
decb
fnsave
xor
std
cmp
into
jne
xor
xchg
add
xchg
arpl
push
sub
pop
lcall
lret
mov
jne
in
test
cmp
aam
sbb
adc
or
or
adc
aad
add
xchg
iret
jne
clc
jbe
jo
adc
inc
lea
arpl
xor
addb
dec
int3
out
loop
adc
mov
mov
into
aas
xchg
mov
and
inc
fistpl
inc
leave
dec
sub
mov
xchg
leave
mov
nop
push
aad
stos
aad
sbb
jno
scas
add
ja
sahf
lret
sub
add
movsb
fisttpll
xchg
push
jae
scas
xchg
ret
sbb
incb
mov
scas
outsl
mov
stos
or
ljmp
cmp
loop
stc
adc
add
xorb
jbe
push
sub
or
mov
cs
daa
mov
pop
mov
inc
pop
ljmp
push
push
dec
data16
mov
jge
xor
or
jp
in
push
btc
into
xchg
push
pop
sar
sbbl
clc
pop
pop
faddl
sbb
xor
fisubs
bound
pop
dec
arpl
in
xchg
push
and
fimuls
pushf
lea
sti
outsl
stos
cmp
inc
sbb
fmul
lret
xchg
out
fldcw
mov
xchg
and
in
inc
jge
imulb
test
enter
pushf
lcall
js
pop
cwtl
lds
dec
bound
stc
push
sub
arpl
les
movsb
xchg
cmpl
cmp
daa
jo
fstpl
jno
adc
lahf
lods
sar
dec
or
sbb
jb
out
leave
imul
dec
xchg
cmp
push
sbb
test
scas
lods
adc
mov
dec
pop
fisubrl
in
int3
xchg
push
dec
shl
pop
xor
enter
add
bound
loope
and
mov
insb
jg
sti
test
cmp
out
fwait
mov
jp
sar
and
lahf
pop
add
or
popf
lea
sub
dec
stos
lea
repnz
pop
shl
push
jecxz
dec
mov
loop
xor
ret
in
stos
dec
or
mov
xor
and
cmp
xchg
in
sub
sbb
mov
push
sub
icebp
dec
jb
cmp
cmp
ja
gs
pop
push
mov
fcompl
inc
je
rcl
daa
daa
adc
push
and
in
jne
mov
pushf
jne
lods
lock
int
adc
dec
xchg
xchg
repz
pushl
popa
sti
mov
aas
xor
mov
dec
pop
mov
cld
push
test
mov
outsb
js
mov
cmp
add
xor
mov
inc
cmp
cmp
testl
xchg
stos
xor
add
push
nop
fwait
xchg
add
test
jb
jmp
jg
imul
fs
daa
sti
mov
aaa
xor
cli
lods
cs
test
mov
fs
sbb
ja
ret
loopne
xor
pop
fdivrl
and
sub
int
cli
cmpsb
jmp
repnz
adc
add
xchg
pusha
in
getsec
xor
fnsave
jbe
jae
repnz
push
pushf
imul
mov
icebp
adcl
sub
stos
push
sar
scas
insb
shll
movl
adc
and
aaa
mov
sub
into
sbb
movsb
cld
adc
imul
xchg
enter
mov
mov
sbb
push
dec
jl
adc
mov
mov
and
imul
jmp
mov
xchg
mov
lods
pop
mov
pushf
push
dec
data16
sbb
xchg
lock
lods
mov
insl
and
ret
ds
inc
pusha
pop
add
dec
jl
scas
dec
add
mov
lock
in
dec
mov
pop
mov
in
pop
jns
sub
or
testb
inc
ds
int3
fisttpl
stc
pop
popa
cli
sub
test
mov
sti
cwtl
jbe
inc
pop
out
cld
or
nop
addr16
test
fwait
test
dec
dec
test
cltd
movsb
enter
and
cmp
nop
xchg
mov
hlt
push
dec
movsl
mov
xchg
sti
test
outsl
fbstp
mov
repz
push
pop
es
mov
iret
in
push
xor
xor
ret
dec
mov
popf
imul
xchg
sub
dec
popf
cmpsb
sahf
fbstp
mov
scas
pop
insl
lods
fiadds
test
mov
or
jne
popa
mov
cmp
imul
das
cmp
sbb
repz
cld
mov
lret
gs
lds
sti
xchg
fcoms
inc
test
xchg
daa
lds
inc
or
stos
xchg
mov
repz
in
cmp
lret
or
cmp
scas
xchg
jns
pop
xor
outsb
xlat
lock
mov
in
push
or
xchg
push
dec
dec
xlat
and
les
sub
mov
out
repz
inc
aam
inc
cmp
sbb
mov
or
jg
xor
dec
mov
or
push
or
jb
and
add
movsl
add
scas
mov
pop
adc
hlt
or
outsl
test
and
aaa
xchg
pop
ficomps
in
add
pop
out
nop
int
add
cli
ret
inc
jo
xor
das
lods
les
js
hlt
sub
sub
xor
mov
dec
mov
mov
inc
daa
sub
xor
in
push
mov
cmp
jmp
cli
arpl
sbb
bnd
aas
loope
adc
stc
adc
addl
out
dec
enter
je
push
pop
pop
pop
inc
push
cmp
jnp
sbb
lods
mov
jge
cmp
mov
insl
pop
or
cmp
pop
mov
je
loope
int
jg
jo
fisubs
out
pop
aaa
sub
mov
pop
pushf
push
incb
cmp
bound
pushf
jmp
sub
push
push
adc
inc
ret
sbb
mov
jle
dec
faddp
dec
loopne
add
jnp
cmpsb
enter
rcll
xchg
sbb
enterw
cmp
fmuls
pop
aam
cwtl
es
jp
bound
ss
xchg
pop
aaa
mov
mov
pop
dec
sub
sbb
cld
fdivrl
fst
add
dec
push
lock
scas
icebp
pop
xchg
mov
in
sub
lock
push
cmpsl
cs
outsl
bound
dec
int3
imulb
inc
sub
mov
xchg
mov
arpl
xchg
inc
push
and
ret
and
and
addl
sub
push
addb
cli
mov
fisttps
ja
pop
mov
xor
adc
push
push
jmp
xor
repz
mov
sub
inc
push
and
lods
cmpsl
xor
orb
mov
pop
sbb
add
cwtl
jnp
leave
xor
xchg
xlat
xor
daa
outsb
dec
cmp
ror
and
repz
sbb
in
or
pop
cmpsl
add
fisttpll
fisttpll
leave
xor
jbe
adc
cmp
push
and
mov
out
into
mov
addr16
sub
lods
xchg
adc
cmpl
cmp
stc
pop
test
dec
jo
push
adc
sahf
mov
or
jo
and
inc
xchg
add
add
add
dec
xor
mov
cltd
dec
and
rcrb
in
and
push
ficomps
inc
mov
hlt
adc
ret
aas
cwtl
xor
mov
rcll
push
stc
js
stc
ds
dec
ret
cld
decb
negl
cltd
jmp
fistpl
aaa
loope
fs
jp
outsb
cwtl
mov
mov
cltd
xchg
imul
pand
add
in
jno
rcll
cltd
mov
push
fstpl
dec
js
jmp
mov
mov
inc
cmp
push
and
mov
dec
pop
out
das
shll
sbb
xor
mov
sar
inc
mov
xchg
inc
daa
cs
sub
jle
and
jp
cmpsb
cs
cmp
cmp
xor
jne
or
lea
cmp
sub
mov
je
adc
mov
push
dec
dec
testb
data16
hlt
rol
mov
imull
inc
mov
push
or
fldl
fadds
mov
add
andb
subl
add
push
fcmovnbe
jbe
dec
cwtl
mov
sahf
xchg
ljmp
ljmp
pop
lret
mov
push
fidivrs
popa
push
xor
neg
xchg
stos
enter
rcr
jg
arpl
rolb
lret
sub
scas
test
push
out
sbbb
mov
repnz
cmp
push
pop
push
sbb
sub
or
imul
cmp
pop
or
ror
outsl
jl
xor
sbb
mov
pop
pop
xor
in
add
xchg
hlt
mov
adc
xchg
aam
arpl
cmpsl
call
das
pop
cs
fistl
pop
dec
dec
int
test
daa
in
pushf
cwtl
jns
roll
pop
add
insb
mov
subb
rcrb
mov
sub
and
mov
xchg
jno
pop
mov
popf
in
scas
jns
es
jmp
pop
fnstcw
aaa
sub
jo
add
jae
dec
pop
cmc
bound
cld
outsb
cwtl
xor
aad
mov
enter
ret
ficoms
out
mov
in
pop
mov
xchg
xor
mov
repz
fnstsw
xor
orl
into
xor
cmpsb
jno
popa
push
jno
xor
test
pop
loop
mov
mov
mov
test
lock
xchg
ds
xchg
mov
dec
imul
out
jmp
scas
mov
and
push
out
es
jns
lcall
adc
popa
jmp
sbb
mov
ja
and
xchg
imul
daa
jecxz
faddl
sbb
das
neg
lret
loopne
push
or
rcrl
mov
add
inc
cmpsb
out
lods
imul
sbb
leave
push
mov
roll
rolb
cmp
cwtl
adcb
and
inc
mov
xchg
add
xchg
ja
out
les
cli
enter
sub
and
icebp
movsb
xchg
cmp
inc
or
jmp
fsubs
or
push
lahf
in
mov
data16
inc
sub
sbb
je
clc
pop
sub
fstpt
xchg
mov
mov
mov
addr16
add
shlb
mov
jb
inc
in
inc
mov
xchg
int3
sahf
push
int3
testb
test
je
sbb
mov
jo
push
xor
iret
lahf
mov
hlt
pushf
sub
xor
shrl
sbb
enter
int
stos
cli
xchg
call
lods
push
push
xchg
rep
mov
lods
cld
cmp
nop
mov
adc
fs
shr
fdivrs
jmp
sub
repnz
ficomps
sub
mov
notl
mov
push
add
dec
adc
bound
push
fnstcw
push
popf
jbe
mov
rcl
lea
movsb
loop
xchg
cmp
bnd
mov
popa
cmp
xchg
add
lahf
jb
mov
fildl
out
test
mov
pop
sbb
xor
mov
and
push
out
push
jnp
call
jne
testb
lock
shrl
lret
test
shrl
add
movsb
xor
push
ja
xchg
dec
and
aas
mov
mov
test
xchg
outsb
mov
in
inc
xchg
fsubrs
addr16
jmp
les
mov
loop
push
push
push
outsl
ret
adc
push
push
clc
fsub
out
shr
push
or
xor
xlat
nop
repnz
sub
sub
or
and
nop
cs
xlat
int
push
dec
addr16
jno
fiadds
mov
cli
enter
fwait
cmpsl
inc
divb
stos
mov
bound
jl
or
cltd
xlat
xchg
cli
test
mov
not
inc
and
movsl
sbb
dec
scas
mov
cmp
or
lea
adc
leave
loopne
shlb
or
movsl
ret
push
hlt
out
mov
sub
cli
int3
jnp
test
orb
or
in
sub
test
add
sub
out
fsub
repz
push
bound
dec
hlt
push
jbe
sub
sbb
and
add
les
push
repz
sub
scas
in
xchg
mov
xchg
pop
mov
in
sbb
push
jmp
scas
out
jo
mov
dec
into
cmp
push
mov
leave
and
sbbl
pop
outsb
jbe
hlt
test
pop
xchg
jns
push
or
fstpl
sub
add
xor
lods
sbb
jne
fistpl
imul
inc
rolb
int
sub
mov
cld
pop
fistpll
xor
xorl
mulb
dec
add
cwtl
xchg
pop
int
sbbb
push
out
push
test
add
mov
add
dec
mov
pop
or
or
rorl
or
cmpl
pop
xorb
mov
pmullw
ret
mov
les
sti
push
testl
and
push
subb
adc
pop
orb
and
inc
xor
jns
into
mov
mov
clc
test
out
inc
fs
ss
stc
nop
inc
inc
jnp
sub
xor
xor
sbb
sbb
xor
add
jae
call
push
rcr
and
in
mov
int3
pop
mov
outsb
sarl
int3
aaa
sbb
lds
sbb
popf
mov
daa
pop
mov
loopne
les
sahf
xchg
fistps
lret
dec
push
add
cmp
test
out
jae
push
andl
mov
mull
xor
mov
loopne
pop
clc
mov
cmc
dec
mov
cmp
push
pushf
or
and
mov
iret
je
cmpb
lahf
std
lea
sbb
arpl
jge
add
negl
neg
fsubrs
jle
test
ja
sbb
ret
dec
xor
les
scas
and
out
lods
test
lods
xchg
movsl
cld
cmp
xor
xor
pushf
sub
push
xor
xchg
icebp
mov
cmp
inc
add
dec
fucomi
fstl
nopl
pop
sub
cmp
push
push
movb
cltd
cli
mov
sahf
xlat
and
adc
mov
pusha
lods
int
setle
pushf
sbb
adc
xchg
fstl
add
sbb
arpl
mov
loop
test
mov
xchg
cmp
mov
xor
jae
div
xor
cmc
pop
and
adc
push
fsubs
jecxz
jnp
pop
push
pop
inc
mov
jnp
push
wrmsr
aam
icebp
addl
inc
or
lods
mov
lock
test
pusha
push
mov
fcoml
xor
clc
xchg
inc
insl
out
loope
scas
adc
cmp
lret
xor
jle
push
movsb
xchg
adc
imul
mov
fsubrp
jb
movsb
xor
jnp
jne
jge
in
lock
xchg
fildl
xor
mov
clc
push
push
xchg
ret
lret
nop
mov
stc
and
enter
pop
ja
enter
orb
stc
outsb
sub
adc
mov
sbb
pop
rcrl
sub
stos
ret
cmp
or
cmc
mov
jnp
decl
imul
fcompl
and
out
sub
data16
pop
jge
lea
mov
mov
frstor
daa
testb
xchg
cli
inc
test
xor
pop
mov
pusha
adc
aam
fldcw
jl
xchg
push
pop
dec
cmp
sub
push
movsl
xor
iret
loope
jecxz
adc
xor
imul
jp
loop
jmp
pop
sbb
ljmp
pushf
mov
test
push
addr16
mov
mov
xor
lret
icebp
xchg
push
cmpl
bound
mov
subb
add
jb
dec
jecxz
mov
call
or
insl
cmc
or
mov
loop
into
les
mov
jmp
fwait
in
cmc
movsb
add
cmp
rcrb
fmul
ror
adc
push
fldt
lock
scas
push
nop
or
sub
sbbb
add
and
jnp
movsl
lahf
ljmp
and
popa
cmp
pop
inc
repz
xchg
dec
leave
stos
sti
push
push
push
pop
scas
pop
movsb
pop
or
insb
mov
add
inc
enter
call
push
loope
push
or
xor
loopne
outsb
pop
or
inc
jl
xorb
cs
cmc
repnz
shrl
jno
ljmp
pop
inc
shlb
fucomi
fistpl
push
mov
pop
jnp
push
xor
push
js
lods
sbb
xchg
pusha
pop
push
inc
mov
jg
add
xor
cwtl
inc
mov
cmp
adc
out
lret
mov
jle
sub
clc
sbb
scas
sbb
mov
xlat
push
or
and
scas
test
push
sahf
mov
add
out
jg
stos
jnp
fldpi
repz
inc
idivb
mov
sub
mov
test
xchg
jae
adc
into
int3
mov
sub
adc
jae
loope
adc
add
pop
mov
mov
roll
mov
jo
xchg
mov
repnz
scas
push
into
cmp
pop
mov
mov
test
repz
adc
aas
xchg
cwtl
inc
cmp
adc
icebp
out
xchg
lock
adc
notb
ret
mov
and
les
xchg
cmpb
negl
and
lahf
cli
ficoms
push
sub
dec
sbb
sub
pop
hlt
jnp
in
fidivrs
inc
out
sarl
sbb
aaa
rcll
mov
lret
push
pop
push
dec
lret
and
insl
jl
pop
or
rolb
pop
bound
in
and
cmp
cmp
or
jne
add
cmpsl
into
iret
fsubrl
pop
jb
cs
mov
jns
jmp
mov
pop
imul
lcall
sbb
lock
adc
jns
enter
sarb
es
pop
arpl
sahf
enter
in
mov
sahf
jge
mov
stc
imul
or
jmp
mov
repz
adc
leave
mov
fs
lcall
inc
enter
push
inc
imul
cmp
shrb
nop
dec
pop
mov
mov
testl
imul
xchg
cmp
dec
lock
sbb
jecxz
sbb
adc
and
shl
shl
ret
xchg
mov
aaa
loopne
xchg
aad
jb
sub
js
xor
xchg
add
inc
daa
sbb
xchg
fcmovnu
sub
enter
dec
aaa
cmp
add
lock
int
mov
mov
mov
push
rcl
aad
mov
mov
mov
push
fcomps
jo
push
in
jne
dec
push
mov
lock
lds
and
enter
gs
lock
xchg
xchg
lods
daa
or
icebp
sub
and
stos
jle
inc
mov
testb
jmp
sbb
sarb
cmp
lods
ret
cwtl
fildl
xchg
pushf
add
rcr
adc
cmc
ja
xor
cmp
push
mov
das
jl
xchg
stos
shlb
push
out
cltd
pop
sbb
cltd
add
out
push
and
or
dec
loope
sbbl
ja
push
pushf
sub
or
stc
inc
jne
sti
subb
or
or
add
xor
mov
dec
add
roll
outsb
mov
imul
popf
sbb
out
out
jmp
mov
push
xchg
repz
or
clc
jbe
mov
cmp
iret
addr16
mov
lods
je
pop
movsb
subl
aad
push
mov
inc
jno
fistl
sti
pop
dec
fiadds
mov
arpl
cmp
dec
idivl
fldt
cmp
subb
movsb
add
leave
jmp
mov
ja
lcall
xchg
push
into
fs
filds
mov
ret
or
jmp
fwait
mov
mov
xchg
lea
cmp
test
dec
mov
mov
adc
push
jp
and
test
inc
mov
cld
mov
ja
xchg
js
lcall
lea
pop
pop
imul
rorb
popl
xor
lods
in
ss
mov
lods
sub
push
add
rolb
mov
pop
test
inc
lods
aaa
lahf
adc
gs
xchg
iret
adc
xlat
pop
or
outsl
mov
shll
aam
lahf
lods
adc
mov
mulb
test
shl
bound
mov
mov
mov
lds
loopne
sahf
in
into
adc
pop
aas
jae
icebp
xor
mov
adc
add
xlat
lret
push
test
iret
stos
loop
lods
popw
sbb
call
subps
ficoms
and
ret
pop
cmp
addr16
xchg
push
jp
jns
ds
ja
push
arpl
into
in
out
pop
scas
dec
inc
inc
loope
push
add
cmc
repz
dec
dec
or
cmc
mov
decl
jae
mov
cld
mov
push
push
out
fimull
sub
dec
adc
xchg
push
jno
loopne
xchg
lcall
imul
dec
pop
shrl
xchg
jl
xor
and
movsb
insl
sub
add
or
test
sti
inc
int
xchg
add
sahf
push
jb
pop
movsl
das
push
push
pushw
ficomps
or
lret
jae
ret
push
jp
inc
in
dec
mov
cmc
repz
lock
neg
nop
nop
int3
sar
lahf
mov
mov
ret
sahf
outsl
jmp
mov
das
or
js
add
das
data16
in
idivl
push
inc
cli
das
ret
hlt
mov
add
in
jle
jnp
es
push
push
movsl
fimuls
and
xor
outsb
add
out
and
in
and
xor
lods
dec
add
ret
xchg
pop
fildll
out
jge
ret
aad
cmpb
xor
push
stos
xor
jmp
scas
jo
fdivrs
arpl
fs
xchg
push
push
movsl
push
cltd
and
push
xchg
ficoms
adc
lea
in
dec
aam
adc
cmpsb
cmp
loop
jns
insb
inc
cmpsl
pop
mov
adc
jno
bswap
cmp
test
push
in
movsl
stc
mov
and
out
outsb
mov
push
sub
stos
jbe
mov
push
mov
mov
or
lds
scas
xchg
aas
adc
or
xchg
push
insl
sub
jl
sbb
push
cmpsb
pop
xor
dec
add
jns
or
cmpl
pusha
xchg
mov
lods
lahf
sbbb
and
sbb
cmpsb
loope
sub
xchg
into
in
into
adc
dec
addr16
adc
lahf
insl
cwtl
stc
aaa
jns
ret
mov
sarl
sub
js
ficompl
rorb
add
dec
fdivrl
lds
jbe
rcll
or
popa
bound
mov
and
mov
test
inc
adc
inc
rorb
lods
sub
movsb
or
mov
xor
shrb
mov
jmp
cmpsb
pop
xor
daa
cs
jg
pop
gs
and
dec
mov
lea
stc
lret
add
adc
scas
mov
popf
iret
cmpsb
repnz
orb
mov
rcrb
mov
mov
dec
mov
iret
dec
dec
push
jns
push
inc
inc
lahf
or
xor
mov
mov
out
jle
ffreep
hlt
jge
idivb
sbb
add
mov
mov
jne
cmc
std
xchg
or
test
mov
adc
inc
jp
pop
xchg
std
stc
pop
push
mov
cwtl
js
add
mov
mov
adc
xchg
repz
orl
pusha
test
out
push
aam
push
add
xor
int
xorl
mov
add
mov
divl
dec
das
sub
es
popf
mov
xchg
sub
mov
lret
sub
mov
xor
sahf
jle
fists
repz
shll
dec
adc
inc
xchg
and
mulb
jp
mov
add
int3
popa
sub
mov
es
popa
ds
adc
inc
xor
xlat
push
push
jg
lea
insl
leave
inc
pop
and
add
mov
and
daa
mov
pop
les
add
bound
mov
inc
addr16
push
dec
or
loope
stc
lcall
dec
mov
dec
outsb
fldenv
ret
push
push
fwait
mov
std
pop
jb
lcall
lret
adc
adc
mov
sar
stos
insb
repz
adc
iret
add
subb
xchg
jle
mov
sbb
test
jecxz
sbb
xor
nop
sub
cmpsb
inc
jle
repnz
jb
adcb
scas
mov
in
push
pop
fstps
fstpl
inc
prefetcht2
int
cmp
cs
call
push
int3
inc
inc
mov
mul
mov
sbb
icebp
pusha
dec
mov
shlb
inc
test
outsb
jno
sbb
cmpsb
das
clc
lods
dec
and
and
in
test
jl
imul
adc
je
data16
dec
jbe
rorb
daa
xchg
xchg
inc
xor
movsl
xlat
jns
and
dec
sbbb
into
clc
and
sbb
popf
sbb
push
cmp
lcall
xor
das
sub
mov
cmpsl
pusha
in
push
and
pop
daa
inc
jle
clc
lea
jge
scas
dec
fucomip
jb
mov
jns
xor
ljmp
push
fimuls
lds
xchg
rcl
sub
push
mov
inc
mov
xchg
cmp
filds
push
inc
mov
pop
das
dec
sub
cmc
pop
jo
adc
repnz
or
push
jecxz
cmc
pusha
aad
lret
fnstsw
push
or
jno
stos
jl
adc
subl
inc
aad
push
or
push
push
inc
pop
rcll
push
cs
and
lcall
and
les
xchg
push
mov
sub
inc
push
lahf
je
test
leave
out
cmc
ret
data16
inc
loopne
cmp
stos
cmp
xchg
int3
sub
add
sti
int
in
mov
mov
insl
ss
jo
or
cmpsb
or
cmc
sarb
sahf
or
inc
js
mov
int
add
xor
jle
jmp
xchg
xchg
test
repz
dec
inc
fsts
and
pop
mov
and
bound
hlt
das
push
cmp
lea
inc
mov
pop
pop
push
scas
jnp
sbbl
lret
dec
imulb
push
ljmp
mov
aam
jl
sti
bound
nop
mov
cmp
scas
cltd
aaa
lods
rorl
dec
pop
push
popa
mov
popa
dec
jp
out
or
loope
mov
push
mov
clc
add
int
fdiv
pop
cmp
movb
adc
gs
add
pop
inc
or
shrb
xor
es
hlt
and
xor
mov
pop
add
in
xchg
or
or
pop
add
fdivs
nop
push
lods
sub
out
stc
adc
mov
pop
sub
jns
in
inc
pop
imul
scas
pusha
push
pop
add
cli
jp
frstor
dec
cmp
dec
sbb
lcall
adc
jb
mov
cmp
push
jne
jecxz
sub
cmp
push
outsl
cmp
enter
sbb
mov
mov
lret
pop
in
rcl
lcall
inc
mov
cld
clc
jno
jp
pop
or
pop
arpl
ss
clc
test
fcomi
std
sub
mov
sub
jae
add
hlt
in
addr16
adc
insl
pop
dec
and
pusha
push
push
aad
dec
test
enter
cmp
xchg
push
adc
lret
add
filds
scas
jno
stos
mov
in
popa
orb
mov
leave
push
xchg
out
outsb
push
mov
das
pop
mov
not
mov
imul
dec
add
fsubs
mov
cmpl
subl
mov
shrl
repnz
xchg
insl
mov
or
xor
loop
pusha
int
mov
jle
repz
inc
test
shrl
aam
fsubs
or
andb
jmp
in
ljmp
ss
sahf
stos
loop
enter
jecxz
mov
dec
or
sub
pop
test
xchg
in
mov
pop
push
add
mov
pop
xor
popa
add
inc
mov
or
inc
in
inc
das
lcall
cmp
mov
stos
mov
fbstp
push
add
imul
mov
data16
sub
xchg
repz
neg
lcall
cld
dec
push
cltd
aam
push
sbb
lock
push
daa
insl
add
jge
or
mov
jp
xchg
mov
jb
dec
ljmp
xchg
jo
call
dec
xlat
ret
cmpsl
or
or
inc
bound
mov
and
xchg
sub
jl
aam
addr16
add
xchg
ja
jle
jecxz
inc
dec
push
fisttpll
pop
rorl
mov
stos
ret
jns
pop
and
and
xor
inc
or
out
lahf
stos
and
push
cmp
cmp
xchg
or
inc
sahf
stos
cwtl
les
dec
shrl
mov
jnp
in
movsb
jbe
hlt
pop
pop
mov
sbb
ficomps
pop
and
call
repnz
jmp
in
outsl
lea
jecxz
insl
lods
mov
dec
movsl
aam
inc
sub
movsl
dec
push
dec
mov
xchg
jb
cld
xchg
inc
xchg
dec
fwait
sub
jg
mov
pop
in
je
leave
lock
jo
ret
test
in
jp
jmp
mov
jmp
repz
or
fmull
fldenv
lret
jg
mov
xchg
sub
dec
nop
sub
mov
sbb
stc
ret
repz
cmp
ror
adc
mov
adc
iret
pop
fidivs
fs
jmp
lcall
adc
adc
mov
cld
mov
movsl
out
push
pop
setae
or
dec
test
pop
mov
call
dec
lahf
jecxz
pop
stc
sub
push
jmp
pop
mov
or
mov
push
pop
repz
mov
daa
push
fidivrl
pop
inc
jge
sbb
inc
ficoml
and
xchg
push
jle
test
add
cmp
daa
adc
push
push
sub
cli
mov
mov
call
inc
popa
aad
js
dec
pop
insl
loop
lret
xor
sub
enter
push
xchg
out
sbb
daa
imul
aad
dec
pop
mov
fsubr
aaa
in
and
faddl
xchg
xor
movsb
xchg
sbb
addr16
cld
outsb
cmp
sbb
stos
adc
clc
pop
clc
xlat
push
cmp
addl
jnp
hlt
push
push
add
and
cmpsb
sbb
and
mov
or
sbb
sub
pusha
xchg
dec
fidivrl
jg
popa
ljmp
repnz
sub
and
adc
ja
das
push
or
and
test
cmp
lea
gs
out
lcall
xor
shlb
fnstenv
in
xchg
sarb
jge
inc
scas
shl
sub
jo
inc
call
sbb
push
sbb
or
mov
stos
stc
or
lcall
int
clc
test
inc
push
or
adc
rcrb
nop
jae
jae
aam
sub
jno
lods
dec
mov
fistl
dec
fdiv
mov
xor
mov
sub
dec
test
lcall
and
cmp
adc
mov
pusha
insl
shl
inc
daa
inc
lcall
cmp
out
sub
mov
lea
cs
mov
pop
movsl
lds
jae
sti
lock
lea
out
rol
add
loop
push
pop
ds
clc
push
xchg
pop
add
inc
jmp
ret
and
sub
xor
test
xchg
xchg
pop
loop
lcall
cmp
adc
add
mov
mov
mov
xchg
pop
and
nop
shlb
add
mov
sub
out
lsl
sbb
out
push
push
dec
sub
nop
js
je
adc
loop
pminsw
out
out
push
dec
sub
xchg
cmp
jmp
enter
imul
shrb
lods
out
mov
sbb
and
popf
add
adc
jae
punpckhbw
xchg
pop
pop
add
mov
out
aas
cld
push
aad
test
cmp
ja
fcomps
and
les
cld
pop
or
int3
cmp
outsb
jecxz
outsb
cmpsl
in
repz
enter
cmpsl
mull
mov
andw
mov
lods
rcrl
outsb
inc
pushf
mov
mov
inc
imul
push
gs
sysret
xchg
ds
inc
shll
mov
xor
repz
loop
sbb
xlat
rorb
scas
pop
push
pop
sahf
or
loopne
sub
inc
out
ret
jne
xlat
pop
popw
mov
ljmp
or
push
xor
fistpl
adc
mov
icebp
xor
mov
ss
js
std
lret
cmp
ror
jl
xchg
bound
scas
lcall
and
pmaxub
out
fwait
mov
leave
xchg
pop
jge
aam
pop
loopne
push
or
aad
sbb
aas
xchg
mov
shll
inc
cmp
ja
adc
les
jp
cwtl
add
or
jnp
clc
and
out
loopne
lcall
lods
mov
xor
clc
jecxz
roll
push
or
xchg
sbbl
cli
dec
lods
sti
pushl
subl
and
fsubrl
hlt
scas
ret
fdivl
and
mov
ja
into
add
cmp
dec
in
sub
mov
mov
andl
mov
xchg
dec
jb
and
mov
pop
or
imulb
ss
xchg
or
mov
mov
sarb
mov
jp
testb
orb
ds
xchg
jge
in
outsl
mov
sbb
mov
ja
rcrb
aas
lahf
cmc
push
jp
and
xchg
mulb
iret
cmpsl
and
or
adc
adc
notb
xchg
in
std
outsl
dec
xlat
and
mov
push
mov
adc
mov
adc
out
sub
dec
and
fsub
aas
inc
jmp
xlat
sub
jp
icebp
hlt
mov
inc
cld
roll
imul
pop
lret
es
adc
jne
dec
stos
pop
dec
gs
mov
push
daa
add
ret
out
jbe
add
popf
enter
test
cmp
call
dec
outsl
cs
mov
mov
push
inc
pop
xor
mov
or
test
pushf
lock
add
movsl
movzwl
xchg
xor
adc
sub
stos
or
fdivp
imulb
add
shll
adc
add
lods
popa
nop
xchg
loop
sbbb
sti
mov
cmpsb
aam
and
test
leave
mov
jmp
lea
xor
mulb
sbbb
fdivs
cmpsl
mov
call
mov
mov
into
sub
push
cld
sti
mov
enter
xchg
int
jo
mov
daa
sub
sbb
les
int
pop
ret
subl
add
dec
mov
dec
inc
dec
in
aad
in
out
jb
insb
fsubrl
insl
dec
sub
vpaddw
sti
cmp
loop,pt
dec
mov
rep
adc
imul
push
mov
movsb
mov
pop
int3
pusha
xchg
fs
pop
mov
adc
mov
addb
enter
das
cltd
pop
mov
cli
pop
and
sahf
inc
idivl
imul
push
ds
push
subl
push
add
mov
xchg
les
xor
ds
lods
mov
dec
sbb
mov
pop
lcall
inc
push
lret
dec
inc
mov
add
pop
and
lods
jmp
sub
idivl
push
jge
lock
dec
adc
pop
push
out
and
sbb
ss
popf
jo
lret
mov
fldcw
or
dec
adc
test
cwtl
cmp
inc
xchg
push
push
mov
pop
lahf
rol
jns
sub
adc
cld
testb
jl
pop
dec
rcl
xor
ljmp
push
and
mov
xor
inc
in
dec
pop
push
es
mov
out
out
lds
cmpsb
es
adc
addr16
pop
std
lds
pop
test
adc
and
dec
insb
add
daa
xor
enter
cmpsl
inc
gs
out
xchg
and
or
jnp
push
dec
decl
mov
or
fwait
inc
push
cs
push
rolb
imul
push
cltd
add
lock
xlat
sbb
and
outsl
repnz
jne
stc
xor
fists
rorb
adc
sub
repz
and
mov
cmp
ret
orb
insb
jae
outsb
loopne
inc
xor
sub
sub
pop
sbbl
dec
mov
in
mov
mov
xchg
aam
shlb
sub
test
cld
xchg
cmc
xchg
inc
dec
leave
in
mov
pop
or
mov
dec
pop
dec
out
dec
js
dec
mov
add
aad
pusha
fwait
xor
hlt
aaa
push
cwtl
stos
xor
rolb
xchg
fsubs
or
xor
ds
dec
mov
pushf
mov
mov
addr16
aad
fdivrp
xchg
mov
adc
dec
xor
and
testb
jno
es
mov
pop
out
je
or
into
jo
cmp
lea
cmp
pushf
cmp
outsl
add
sbb
iret
jecxz
aas
dec
jbe
ljmp
xor
adc
fwait
jns
or
imulb
xchg
pushl
mov
js
lcall
push
pop
add
fistps
sbb
push
je
call
fwait
sub
or
lds
pop
inc
push
es
add
fadds
pop
xchg
test
gs
lahf
sbb
cmp
add
push
dec
pop
jae
int
in
mov
pop
arpl
nop
pop
ds
mov
cmp
in
mov
icebp
or
lock
push
xchg
sahf
aas
mov
dec
cmp
xor
out
mov
push
fisttpll
lret
lret
ret
push
inc
jle
loop
ret
in
xchg
jmp
rorl
jg
cmpsb
adc
xchg
xor
enter
hlt
sbbb
inc
int
jno
cmp
loopne
sub
std
imul
cwtl
xor
sbbb
stos
adc
inc
int
sbb
and
out
add
bound
jae
aas
in
insl
adc
jbe
cmpsl
add
push
in
jecxz
add
mov
ret
les
mov
push
dec
stos
iret
daa
in
pop
jl
cmp
mov
inc
and
adc
out
push
pushf
pushf
mov
call
lock
jno
sbb
andl
mov
shrb
iret
mov
mov
sub
scas
push
xor
mov
cmp
mov
mov
jno
cmp
ds
pop
dec
popa
or
call
mov
mov
out
sub
cs
cmpsl
nop
jae
ss
xor
movsb
addb
stos
xchg
mov
pusha
fistpll
xor
loopne
dec
xchg
loopne
pusha
jae
fstps
test
pop
mull
push
push
push
cmp
aad
aas
jo
mov
cmc
stc
push
call
push
jp
je
ret
sub
add
cmp
or
stos
dec
aaa
and
test
lcall
pushf
dec
jnp
sbb
fistpl
mov
into
cmpsb
mov
push
dec
xlat
out
filds
push
mov
std
addb
jecxz
cmpsl
jo
xstore-rng
cmpsl
inc
jl
cmc
mov
ja
ljmp
and
xchg
test
in
pop
loop
push
cs
add
fcmovnu
das
pop
stos
pop
push
cmp
xchg
mov
cmp
negb
fiaddl
call
jmp
and
pop
push
imul
mov
ja
sub
lret
aam
aad
sahf
jne
mov
or
push
push
das
icebp
pop
pop
adc
hlt
fsubrl
mov
jle
popa
cld
mov
xchg
lock
sbb
mov
push
pushf
push
out
js
shll
sbb
xchg
mov
sub
dec
xor
hlt
pop
adc
js
mov
mov
xchg
pop
xchg
xchg
xor
mov
pop
andb
aas
hlt
repz
testl
pop
pusha
add
inc
xorl
pop
cmpb
inc
jae
jl
push
cmp
mov
and
fsubl
aad
lcall
mov
fcomps
push
sub
pop
adc
bound
jbe
pop
cmp
jns
in
or
cld
in
repnz
sbb
lahf
push
shrl
mov
in
cmp
mov
inc
and
loope
scas
cmpsl
out
adc
leave
push
push
loopne
pop
jmp
or
push
sbb
sti
insb
jmp
loope
jg
or
or
gs
and
insb
or
inc
push
sahf
xchg
xlat
mov
fucomip
cmpsl
or
jae
and
and
mov
mul
mov
js
insl
rcl
pop
xor
or
dec
jle
mov
outsl
dec
mov
incl
xlat
fistpl
repz
insb
mov
sub
sub
loopnew
stos
imul
sub
xorb
aas
loope
in
popa
mov
xor
cmp
cmp
movb
inc
sarl
cwtl
out
aaa
pusha
dec
idiv
hlt
inc
pshufw
push
mov
push
push
mov
pusha
mov
push
push
ss
repnz
icebp
leave
fidivs
and
fidivrs
repnz
gs
mov
push
sub
je
lret
push
mov
pop
mov
and
cmp
inc
cmpsb
pop
nop
xchg
mov
adc
inc
mov
push
push
out
sub
jecxz
fbstp
movsb
lcall
into
test
xchg
ds
leave
jp
jb
aad
scas
out
cmp
push
aaa
ss
jb
mull
cld
cmp
ds
daa
arpl
lret
hlt
jae
cltd
hlt
lock
xchg
stos
push
les
ljmp
les
inc
mov
jbe
or
popf
negl
test
insb
je
in
out
and
adc
sub
cmc
cmp
jle
out
pop
jmp
test
add
pusha
aam
xchg
in
hlt
cmp
jecxz
mov
data16
jmp
dec
lds
sub
nop
add
out
sub
pushf
fistl
stos
ror
stos
jnp
rcr
in
mov
push
sub
xchg
xor
enter
lods
cmp
push
xor
test
popa
mov
adc
push
mull
jl
push
fs
arpl
icebp
push
les
cmc
and
stc
or
add
mov
cmp
xor
test
decl
adc
dec
fnstsw
cmp
push
mov
imul
push
sub
jg
xor
mov
mov
imul
mov
jae
push
movsl
notl
xor
sub
imul
scas
mov
xchg
or
test
xor
pop
outsl
pop
pop
push
xchg
fdivl
movsb
shll
cmpsb
xchg
lods
fisubl
xchg
cwtl
jne
fnsave
adc
or
divb
inc
cmp
shlb
imul
addr16
loopne
fstpt
leave
addl
or
pushl
pushf
in
frstor
inc
jns
jb
daa
sbbl
sbbb
sub
orb
gs
mov
lea
sub
fsubr
push
mov
cwtl
mov
or
cltd
gs
aam
les
xor
outsb
mov
adc
fucom
mov
or
fldcw
jecxz
jle
fisttpl
pushf
je
xor
and
arpl
mov
mov
fst
push
push
std
mov
hlt
pop
pop
adc
testl
loope
push
icebp
arpl
jbe
push
xor
gs
fucom
mov
add
or
shl
popa
mov
mov
mov
xor
stc
repnz
and
jae
imul
fstps
cmp
enter
sub
data16
and
icebp
repz
xchg
fimuls
push
push
addl
push
std
add
or
sbb
iret
mov
fs
movsb
gs
loope,pn
mov
cmpsb
aad
lea
fst
or
jae
mov
xchg
mov
sbb
adc
popf
testl
push
xor
add
mov
push
repnz
inc
mov
test
arpl
or
hlt
xchg
das
outsb
andb
jp
dec
jbe
out
in
mov
pop
sbb
cmp
cmc
mov
roll
cmpsb
movnti
cmp
adc
in
push
pop
movsb
jo
repz
roll
sbb
dec
lcall
and
pusha
mov
add
mov
nop
outsb
cs
push
cwtl
dec
mov
push
outsl
jbe
jp
cmp
adc
aam
ret
inc
ds
sub
xchg
out
test
lea
idivb
mov
mov
loop
jno
dec
js
aad
jp
push
in
sub
cmpl
clc
push
aaa
mov
movsb
sub
hlt
arpl
jge
mov
loope
sbb
add
mov
outsb
and
mov
fsubrl
xchg
pop
mov
out
outsb
call
jecxz
movsb
mov
loop
cli
loop
hlt
orl
ficomps
cmp
dec
adc
pop
and
push
pop
fsts
dec
fbstp
jne
adc
negl
fsubp
push
lock
xor
pushf
cs
pusha
adc
adc
pop
inc
cltd
xchg
idiv
arpl
cld
lds
push
jmp
test
nop
jmp
cmp
dec
and
cmc
jmp
sbb
das
mov
or
mov
mov
xchg
into
mov
push
mov
pop
cli
xchg
xor
lods
xor
out
and
aaa
xchg
push
mov
fbld
jle
inc
push
pop
jg
ja
test
aaa
fdivl
mov
jb
sbb
daa
loop
mov
adc
dec
jmp
jo
add
and
enter
addr16
jle
xor
xor
sbb
rcrb
aam
out
jne
jle
jmp
cmp
mov
cmc
mov
dec
leave
pop
dec
push
stos
loop
add
aas
mov
shrl
es
mov
mov
mov
cmp
mov
add
outsl
or
sahf
xlat
jnp
xchg
jp
or
cmpsl
orb
out
sbb
xchg
rclb
faddp
add
test
cltd
inc
rcrb
inc
jle
loope
or
inc
outsb
dec
adc
sar
and
xor
repz
aam
mulb
xchg
mov
sub
jp
jb
out
pop
dec
movsb
test
mov
icebp
lods
mov
js
xor
or
sbb
scas
and
mov
push
pusha
inc
and
push
xchg
std
outsb
loope
xchg
sbb
cmp
inc
and
inc
pushf
loop
pusha
sub
loope
dec
mov
imul
decl
rcll
sub
pusha
repz
daa
cs
add
sub
push
xchg
dec
xor
sub
mov
es
cs
mov
js
add
mov
sbb
outsl
and
dec
sbb
mov
leave
pushf
and
in
popa
xchg
movzwl
pop
mov
cwtl
aaa
insb
and
mov
push
xchg
rcpps
fnstsw
popf
lods
xchg
cld
pop
loopne
clc
jb
inc
andb
fsubl
idivl
dec
mov
jmp
pop
jle
js
cmpsb
lcall
or
test
inc
or
lret
xchg
rcrb
jns
fcom
out
xchg
pop
add
stos
insl
arpl
inc
int
xchg
lds
pushf
mov
sbb
cmp
out
xchg
cmpsb
inc
jp
loop
fcompl
pop
xchg
into
cmpl
or
mov
test
xchg
cmp
ss
fisubrl
sub
add
inc
xchg
insb
sub
fs
pop
inc
int3
sbb
or
mov
subb
es
mov
gs
cmc
xchg
out
or
sbbl
cmp
das
jae
pop
xchg
dec
daa
scas
push
scas
popa
pop
ret
int3
dec
test
jge
mov
xlat
cmp
add
cwtl
enter
dec
imul
test
add
roll
sbb
push
ljmp
hlt
jge
or
test
mov
adc
orl
shll
repnz
and
aam
nop
in
fimuls
mov
cmpsb
mov
xchg
mov
flds
xor
jo
xchg
cmp
pushf
pop
mov
dec
cs
mov
inc
fmull
push
dec
jmp
test
movl
mov
popa
push
sbb
push
fs
ret
push
xchg
dec
jmp
in
sarb
jae
incl
dec
aaa
int3
xchg
and
or
inc
fldcw
scas
cmp
jecxz
sahf
imul
jb
sbb
pop
mov
mov
cli
xchg
je
mov
push
movsl
pop
stos
or
jp
repnz
out
lea
cwtl
sbb
sbb
adc
mov
sti
inc
jbe
bound
insb
cmpsb
adc
insl
cmpsl
mov
lock
scas
pop
and
xchg
cmp
pushf
test
mov
sbb
inc
gs
mull
adc
icebp
and
sbb
imul
or
jg
push
dec
cmp
ja
fwait
cmpsb
sti
xor
xchg
xor
xor
rcrl
js
xchg
enter
adc
jmp
jne
jnp
out
lock
push
fucomip
ja
sub
xchg
mov
into
xchg
mov
pop
out
gs
mov
test
mov
cmpl
addr16
popf
fwait
mov
loopne
adc
add
mov
mov
xchg
stos
dec
lret
or
jp
test
bound
daa
dec
aam
xchg
jecxz
or
pop
add
mov
enter
push
cmpsb
ret
daa
bound
sub
mov
daa
jbe
repnz
adc
in
xor
sbb
jp
in
stos
cld
and
mov
leave
lahf
test
push
fmul
out
and
iret
cwtl
mov
std
xor
mov
in
sub
xor
mov
imull
jbe
jl
mov
pop
cmp
aad
out
popf
leave
aaa
sbb
jge
inc
jmp
sub
arpl
fdiv
sbb
jge
lcall
lcall
sub
push
mov
ljmp
ds
int
loope
lds
lock
fs
and
popa
movsb
and
test
bound
sub
pushf
jne
jmp
in
lret
jbe
lcall
cmp
idivl
out
xchg
sbb
icebp
subl
icebp
sbb
icebp
jg
jbe
jne
shrb
call
in
mov
dec
or
and
xor
cltd
lcall
ds
fdivs
je
test
mov
dec
adc
mov
pop
mov
shlb
ds
fisubrs
loopne
popa
les
imul
sub
dec
adc
and
fs
cmc
aad
or
mov
sbb
lock
hlt
push
lds
mov
adc
mov
or
push
xor
sar
mov
mov
in
mov
cwtl
and
push
sub
test
adc
push
pop
mov
sub
xchg
cmpsl
insl
or
test
out
fldcw
cmp
mov
repnz
aaa
lret
mov
hlt
test
mov
jp
push
adc
and
int3
dec
mov
pop
mov
mov
in
cli
repnz
lea
gs
push
pop
jne
repz
inc
xchg
cmova
iret
frstor
ljmp
stos
clc
ret
or
or
jle
pop
sbb
lahf
push
dec
mov
and
inc
outsl
inc
add
adc
loop
and
and
mov
push
adc
and
lea
outsb
into
stos
shlb
xchg
stos
fdivs
cld
sub
lods
mov
lea
outsl
ljmp
sarl
stos
movsl
xchg
sbb
enter
mov
sub
sbbb
sbb
xor
out
fwait
inc
dec
mov
fimull
lahf
shl
popf
dec
adc
movsl
andl
decw
arpl
mov
add
jb
push
andl
push
adc
mov
cmp
rcll
fimuls
xchg
jae
add
inc
roll
adc
ss
cmp
test
sarb
pop
mov
dec
jg
jle
mov
scas
mov
push
lods
xchg
pop
fsubrl
lock
xor
xchg
pop
cmp
jae
push
add
ja
or
lret
mov
pop
sub
das
iret
outsl
mov
in
mov
cmp
and
mov
popf
cmpsb
mov
xchg
push
xchg
lea
mov
xchg
sti
cmp
or
mov
scas
outsl
ja
dec
jg
jne
mov
aas
test
iret
insb
stos
mul
imul
push
nop
pop
out
stos
sarb
jmp
rep
and
dec
sti
push
mov
rcrl
jno
and
imulb
repz
inc
js
jns
sbb
cmc
cmp
loope
ja
pop
jl
xchg
xor
pop
inc
outsl
and
pop
ss
xchg
pop
inc
cmp
jmp
lret
jl
jecxz
push
mov
mov
into
ss
cld
popf
push
xor
repz
and
pop
and
idivl
or
insb
clc
mov
xor
xor
call
lret
inc
and
fstpl
clc
and
loop
or
fldln2
out
jae
es
and
dec
dec
inc
add
mov
ljmp
clc
sti
jb
daa
cmp
push
pop
xor
add
add
sar
out
push
gs
out
inc
push
jb
mov
dec
add
add
stos
pushf
jo
aam
inc
mov
dec
and
insl
std
mov
daa
xchg
mov
std
pop
pop
mov
xchg
adc
push
mov
stos
adc
stc
and
mov
jnp
mov
jno
les
clc
cmpsb
pop
jge
add
lock
cs
out
pop
in
test
push
lock
cmpsl
aad
mov
push
lock
cwtl
xchg
jmp
xchg
or
repnz
cli
lret
jle
cmpsl
bound
cmc
pusha
mov
stc
cmp
mov
lea
shlb
mov
adc
jle
imul
fdivrs
out
aas
adcb
mov
hlt
ret
int
pop
aaa
adc
inc
test
sahf
shlb
test
icebp
lret
xchg
mov
shlb
mov
out
cltd
push
jmp
cmp
jns
outsb
cltd
pushf
push
dec
jno
and
cmp
adc
push
sbb
fs
ds
pop
inc
out
mov
jmp
sahf
jne
dec
cmp
div
cli
test
fistpl
jecxz
test
pop
push
addr16
fimuls
into
mov
and
cli
sti
aaa
shrl
cld
icebp
test
adc
xlat
inc
cmc
pop
mov
mov
js
cmp
mov
xchg
dec
shll
cli
aaa
stos
test
movsl
das
pusha
out
sub
push
punpckhdq
pop
mov
stos
dec
jo
dec
pop
mov
out
in
cmp
cmpsl
sub
sub
and
inc
push
test
shrb
dec
pop
jno
les
inc
cld
xchg
pop
icebp
sbb
mov
xchg
leave
add
enter
js
fistl
push
cltd
push
add
or
out
mov
in
cld
and
xor
xchg
cmpsb
in
add
cltd
stos
subl
fsubs
nop
nop
xor
cmp
pop
mov
int
in
mov
loopne
mov
fbld
mov
adc
andb
jne
xor
fnsave
out
xchg
fwait
dec
inc
imul
rcl
fists
dec
shlb
mov
add
and
dec
repnz
cltd
and
jns
cwtl
mov
mov
cmp
push
les
out
scas
js
mov
adc
xchg
ret
movsb
daa
push
sbb
jmp
sti
mov
inc
jbe
lock
pop
ds
dec
jecxz
shufps
orl
xchg
repz
enter
mov
addb
push
xor
jb
loope
cltd
fwait
adc
or
mov
loop
in
push
pop
mov
push
pushl
xchg
adc
aad
inc
cmp
dec
and
lahf
inc
mov
pop
arpl
loope
cmpsb
jg
scas
in
and
mov
push
sbb
ret
addr16
in
cwtl
push
mov
push
int3
pop
add
xor
lret
in
lods
xchg
xchg
cmp
test
push
cmp
andb
jne
mov
cmp
repnz
jns
scas
lcall
pop
mov
lock
push
sub
xor
fs
scas
stc
adcb
cwtl
xorb
outsb
or
dec
add
inc
adc
out
cmp
add
fsubrl
stc
sub
jl
dec
or
sarb
or
or
lods
xor
cltd
std
ja
push
push
mov
jb
sub
test
dec
push
or
inc
sub
push
pop
int3
ds
shlb
lret
mov
lods
cld
test
dec
fxch
enter
in
and
mov
pop
rorl
and
jb
fstp
test
movsw
gs
push
faddp
sub
push
dec
jp
jmp
lea
arpl
xchg
sub
popa
mov
das
sub
xor
mov
sub
inc
lods
rcll
push
xor
ds
or
push
xor
push
mov
pop
inc
cwtl
dec
xor
mov
inc
mov
push
pushf
std
jne
hlt
shlb
retw
jg
pop
insl
sub
aas
sbb
pop
lahf
in
je
outsb
outsb
mov
sub
mov
xor
mov
inc
das
repz
xchg
add
or
loopne
shll
xor
pop
arpl
shl
imul
xor
sbb
lock
test
stos
adc
and
popa
pop
cmp
sbb
sub
dec
addl
dec
jo
rdmsr
std
ljmp
adc
and
fdivrp
mov
mov
sbb
xchg
repz
arpl
cmp
jne
sub
push
jae
jecxz
xchg
push
les
arpl
test
jle
sub
out
sub
daa
and
cmp
iret
ficompl
insb
clc
mov
or
xchg
sbb
mov
mov
cmp
mov
lods
jp
xchg
rorb
insl
xchg
fisttpl
inc
xor
jge
in
sbb
clc
movsb
out
imul
cmp
xor
ds
mov
ja
popa
shl
adc
push
inc
ja
arpl
mov
gs
push
imul
pop
sti
mull
pushf
pop
mov
les
pop
pop
mov
push
dec
xchg
mov
and
call
and
mov
shlb
push
loop
negl
sbb
add
pop
scas
mov
add
out
jne
mov
outsb
fwait
sbb
shl
fdivrl
inc
adc
add
push
test
sub
es
pop
sbb
sbb
ret
cmpsl
pusha
adc
insb
leave
mov
cli
mov
div
push
subb
fbstp
fidivrs
rcrb
jl
rorl
pop
pushf
arpl
mov
std
hlt
pop
add
les
xor
shr
mov
sub
shrb
sahf
cwtl
or
add
xchg
rcl
sub
xor
stc
pop
mov
sbb
int
mov
mov
push
xor
lock
inc
add
outsl
push
clc
shrd
pop
xchg
mov
or
inc
cli
mov
and
in
mov
pop
cmp
mov
dec
jl
stc
fucomip
xchg
repnz
mov
jge
inc
fisubrs
jg
iret
jns
pop
dec
mov
sbb
fwait
mov
test
push
sbb
sbb
leave
out
fld
clc
or
lods
popa
mov
pusha
mov
sbb
sub
and
mov
mov
push
jno
sub
es
ljmp
and
push
imul
jle
aam
push
scas
xchg
das
xor
lcall
inc
pop
imul
icebp
ja
xchg
sub
jg
mov
cmp
mov
rcrl
lret
test
push
cmp
loope
cmp
out
rclb
cmpl
icebp
lcall
cli
cltd
lds
jge,pn
adc
out
not
fdivr
push
and
push
mov
mov
dec
pop
nop
or
adc
pop
jge
sbb
sbb
int
jb
mov
insb
push
int
mov
imul
lret
aas
mov
and
pop
out
gs
jnp
in
xchg
push
out
sub
fnstcw
fstps
xchg
and
pop
arpl
jmp
mov
cwtl
sub
outsb
hlt
fisttpll
loope
aad
cmp
xchg
dec
cltd
and
cwtl
push
test
and
or
push
adc
andl
shr
xchg
mov
lods
push
sbb
push
xchg
mov
insl
push
add
shr
test
push
aad
ja
push
dec
popf
jmp
call
sub
xchg
mov
push
mov
inc
cmc
dec
jb
icebp
sbb
mov
scas
packuswb
mov
jo
push
xchg
popf
adc
xor
xor
out
lods
lcall
gs
data16
ja
adc
mov
popf
push
jmp
jbe
popf
in
mov
mov
jecxz
cltd
push
jmp
lea
fwait
ret
mov
movsb
cmp
jne
sbb
ret
mov
mov
cwtl
and
ds
inc
pusha
stos
pop
mov
mov
loop
fstps
and
jl
sbb
xchg
fisubrs
xor
fwait
arpl
aaa
push
movsb
sbb
or
xchg
out
push
lock
movsl
scas
mov
sub
push
cli
subb
sbb
pop
sub
es
cli
mov
or
mov
iret
les
test
mov
int3
xchg
rolb
outsb
xor
push
push
lea
test
mov
pop
pop
leave
mov
pop
push
test
ret
iret
loopne
ljmp
aas
jns
push
mov
hlt
inc
xchg
pop
xor
popa
jg
stos
fwait
ljmp
mov
mov
xor
pop
ret
jl
cmp
pop
sahf
mov
mov
aaa
jecxz
std
icebp
scas
sbb
pop
sbb
sti
dec
jg
ss
xchg
pushf
cmpb
sub
ret
jge
push
pop
jg
and
leave
mov
xor
mov
jp
adc
cmpb
hlt
lret
mov
lahf
scas
xor
cmpsl
pop
dec
mov
pop
cmpsl
popl
stos
sarb
sbb
xchg
mov
sub
cmp
dec
xchg
dec
addb
jne
insl
jmp
daa
xchg
cltd
add
xchg
adc
and
loope
daa
cmp
sbb
and
int3
jmp
lahf
sbb
popf
sbb
leave
inc
mov
pop
outsb
cmp
sbb
jne
icebp
push
imul
xor
mov
jbe
jl
jmp
outsb
mov
dec
push
sub
das
sbb
imul
adc
and
xor
adc
xor
js
daa
mov
jne
mov
test
outsb
cwtl
faddp
clc
ficomps
dec
push
jecxz
js
int3
out
pushl
aad
ljmp
jae
cwtl
pop
jecxz
cld
dec
pop
shll
into
mov
cwtl
xchg
arpl
out
inc
out
xor
jae
xchg
aad
dec
sub
cs
scas
push
jno
hlt
jns
push
jnp
push
dec
pop
iret
push
lock
enter
or
ljmp
pop
push
popa
fdiv
fimull
daa
mov
and
inc
mov
pop
popl
or
push
jge
mov
in
adc
pop
into
jg
test
dec
cmp
xor
inc
cmp
cmp
or
cmpsl
popf
mov
mov
push
sahf
cmp
and
pusha
fadds
and
fwait
insl
mov
call
fildl
or
aad
adc
lea
leave
push
sbb
or
mov
test
sti
loope
cmp
ss
popf
in
jp
mov
add
dec
out
lcall
xor
jp
scas
repz
scas
jg
faddl
arpl
aad
push
xor
pop
lock
call
mov
xchg
mov
stc
adc
jp
clc
lcall
arpl
incl
in
ficomps
mov
cwtl
xchg
push
mov
push
insl
and
sbb
or
push
imul
sbb
scas
lahf
xchg
mulb
jo
dec
pop
pop
out
jne
decb
push
imul
push
inc
scas
mov
mov
xor
mov
inc
jb
jnp
scas
icebp
pusha
dec
outsb
jo
je
das
js
add
pusha
repnz
inc
cmp
mov
popf
insb
push
fidivs
pop
repnz
mov
pop
idivl
imul
movsb
adc
mov
add
jno
lcall
int3
adc
lock
xorb
loope
xlat
xchg
sahf
js
mov
mov
test
adc
cmp
sti
aam
sub
stc
scas
pop
mov
push
add
gs
cmpsb
lcall
cld
push
sbb
insl
dec
mov
add
mov
cwtl
and
aam
into
sti
jo
xchg
jo
enter
pop
dec
pop
adc
shr
les
out
fnstsw
adc
lret
xor
int
xor
mov
bound
ds
jb
ljmp
push
dec
gs
lahf
mov
push
lods
outsl
jp
mov
cmpl
mov
scas
lcall
out
aad
jge
fcmovnb
shlb
push
sub
insl
inc
test
push
jns
jb
xchg
sbb
les
mov
cltd
enter
jl
add
dec
pop
mov
adc
xchg
lds
fldenv
add
dec
daa
lock
lea
mov
addr16
mulb
js
xor
hlt
popf
loopne
mov
test
inc
aaa
repnz
repz
xor
jecxz
mov
sbb
aaa
jnp
sub
fmuls
xlat
int3
inc
mov
ljmp
adc
addr16
ja
shlb
loopne
mov
or
popf
pop
lret
rorl
xchg
cld
loope
push
cmp
daa
pop
or
and
pushf
test
mov
jbe
mov
adc
or
sub
ljmp
dec
xchg
rcrb
aas
push
ret
mov
or
push
xchg
sbb
out
jp
adc
mov
into
popf
inc
ljmp
lea
mov
pushf
mov
es
mov
aas
xchg
nop
mov
call
xlat
cmp
test
xor
idivb
jecxz
mov
out
lcall
lds
clc
stc
mov
jnp
es
push
pop
sbb
shlb
pusha
aas
nop
jl
outsb
or
jnp
mov
loop
in
jge
mov
imul
mov
mov
fnsave
les
mov
ljmp
into
cmpb
jns
loope
pop
jne
dec
icebp
push
mov
cmp
pop
fwait
mov
mov
pop
test
sub
xchg
xor
sub
int
ja
inc
aas
dec
fwait
lea
jo
push
dec
arpl
dec
inc
xchg
jmp
ljmp
or
mov
ss
je
fs
or
ret
dec
jns
xor
push
adc
inc
sub
sub
aam
mov
jbe
mov
pop
or
mov
paddsw
xor
or
or
testl
push
mov
insl
loopne
dec
pop
rclb
lds
mov
push
rorl
cmp
subl
add
sbb
addr16
adcb
bnd
lret
shrb
ds
xor
insl
test
and
sub
es
imul
add
mov
adc
xor
in
lret
sub
imul
push
pop
xchg
mov
cmc
or
lods
inc
and
repz
scas
xor
lret
xchg
dec
cmc
push
mov
fdivrl
xor
inc
movb
inc
iret
test
sbb
rorb
jmp
scas
dec
and
mov
inc
mov
outsl
pop
out
mov
push
in
sub
push
xchg
push
ljmp
cmp
adc
or
add
std
mov
pop
cmp
mov
pop
mov
mov
or
or
sti
clc
mov
xchg
pop
xor
push
loop
mov
dec
aam
movsb
pop
inc
jae
in
inc
sub
adc
xchg
adc
aaa
shll
repnz
adc
dec
cwtl
cmp
divl
aam
jns
pop
jae
lret
cmp
ficoms
xchg
ficoml
into
aaa
fwait
cmp
pop
mov
xor
dec
sahf
and
xor
pop
mov
mul
pusha
xor
icebp
shrb
sub
xchg
pop
or
in
mov
dec
xchg
push
imull
or
fs
out
add
aaa
pop
hlt
repnz
daa
pop
dec
mov
loop
jbe
or
ja
stc
jle
pusha
inc
outsl
stos
test
rcrb
orl
pop
outsb
adc
pop
mov
cmp
into
push
jle
rcrl
push
in
repnz
popf
test
mov
cmp
adc
nop
mov
call
mov
sahf
ss
sbb
or
sahf
pop
shrb
subl
je
xchg
mov
repz
mov
jge
jge
add
inc
add
stos
shl
clc
iret
dec
push
add
loopne
add
rcpps
cmc
cmpsb
leave
rorb
dec
mov
sti
loopne
movsb
cmpsl
sbb
repz
aaa
popa
xchg
je
ficomps
sbb
fsubp
cli
pop
pop
and
cmpsl
xchg
mov
xchg
out
jbe
sbb
ljmp
dec
cmc
sbb
in
xor
xchg
stos
or
test
fildl
pop
jnp
xchg
adc
sub
sub
ret
mov
mov
sub
movb
xchg
mov
mov
repz
cmpsb
cmc
cmpsl
add
xorb
movsb
jg
cmp
fildl
in
addr16
lret
pop
movsl
pop
repnz
mull
and
test
jne
stos
ret
mov
mov
inc
xchg
inc
js
sbb
mov
in
test
icebp
or
sub
jl
fwait
dec
enter
and
movsb
cmp
dec
push
sub
xlat
xchg
divb
jbe
xor
clc
adc
arpl
test
out
push
xchg
pop
sti
jnp
leave
fwait
gs
or
cmp
icebp
sub
in
out
xlat
xchg
std
push
push
or
and
mov
sbb
cmp
xor
pop
shlb
inc
lahf
ljmp
pop
test
sbb
sti
jae
cltd
jmp
test
cmpsl
es
push
mov
cltd
lcall
mov
loopne
xorl
add
xchg
mov
push
ss
aas
dec
aas
sbb
sub
jmp
cmp
dec
inc
jns
and
lods
shrl
push
arpl
hlt
data16
jl
or
xchg
pushf
call
push
in
inc
insb
cltd
in
and
jle
mov
fcomps
cwtl
dec
in
loopne
push
cmpsb
or
loope
pop
insb
cmpsl
pop
sbb
mov
icebp
pusha
stos
push
jnp
inc
sub
add
lret
loop
inc
push
lahf
sbb
mov
sub
fs
or
out
daa
sub
ret
mov
pusha
cmp
push
das
inc
xchg
mov
loope
les
or
js
repnz
mov
or
andl
aas
jp
dec
loop
cmc
push
loop
or
sub
test
inc
push
dec
pop
jmp
sbb
push
cwtl
mov
fdivr
jle
inc
adc
pushf
scas
ljmp
adc
fwait
or
jae
pop
cs
mov
rorl
adc
ds
push
and
out
or
inc
aaa
jns
aas
and
mov
sbb
aaa
es
adcl
lods
int
loop
call
testb
rorb
sbb
cmp
mov
mov
add
arpl
mov
into
and
or
push
push
or
push
and
push
xor
sahf
shll
popa
push
shll
sbb
dec
dec
pusha
sahf
fs
movsb
ret
pop
es
lcall
scas
jnp
cmp
loopne
fwait
add
fcompl
or
push
jbe
jnp
push
ss
in
xchg
idiv
cmp
jns
xchg
add
in
mov
pop
pop
insb
dec
fisttps
int3
daa
pushf
out
dec
xor
popa
fnsave
xor
nop
adc
cmp
addr16
jecxz
scas
cwtl
jne
mov
decb
add
xchg
xchg
add
xorl
mov
cmp
or
jl
rorl
inc
sbb
pop
outsl
iret
mov
cmpsl
test
jno
into
gs
lret
or
movsb
mov
jge
test
mov
int
sbb
repz
xorb
mov
jne
outsl
add
dec
cmp
pop
inc
faddl
bound
inc
cmpsl
test
aad
popf
insl
imul
hlt
outsl
add
ja
addr16
xor
sub
jne
dec
pop
mov
outsb
stos
ret
cmc
adc
mov
xor
sti
inc
inc
cwtl
cmp
xchg
or
iret
push
pop
cmp
movsb
cmc
inc
jb
shrl
loope
and
icebp
push
push
hlt
mov
out
xchg
ss
cmp
mov
divb
test
mov
sbb
or
lea
fldt
and
mov
out
push
insl
jle
push
pop
adc
imul
push
ss
inc
push
jge
and
outsb
lret
sbb
pop
sbb
xchg
or
enter
xchg
outsb
repz
clc
test
int
mov
cs
int
lahf
rcrl
mov
mov
pop
loopne
sbb
addb
adc
xchg
adc
jnp
enter
lods
mov
or
popf
push
dec
push
pop
and
sbb
add
bound
repnz
pop
cmp
add
xchg
jne
int3
inc
lcall
enter
test
cmp
and
dec
cvtps2pi
ret
jg
pop
popf
lahf
clc
mov
rcrl
push
pop
sub
out
dec
jns
push
push
scas
test
mov
rol
pusha
fisubrs
lret
call
cmp
sbb
push
mov
faddl
cmp
sub
or
jle
inc
add
popa
pop
hlt
cwtl
shrl
ret
sti
test
mov
cmpsl
sti
or
cmpsb
es
push
shrb
mov
in
inc
push
jl
fcmovnb
xor
cmpsl
mov
inc
jmp
aas
dec
push
sub
das
and
inc
or
aad
mov
inc
jae
cmp
adc
cmp
xchg
xchg
sbb
aas
jge
sub
out
sub
xchg
cmp
xchg
test
fistl
xchg
inc
xchg
xchg
sbb
pop
inc
pop
mov
push
or
insl
xchg
jno
dec
cmp
cmp
rcl
idivl
ljmp
inc
sub
add
jbe
ja
and
int3
jo
scas
mov
negb
pusha
jp
addb
mov
and
sub
pop
cmp
cmc
aas
push
mov
stos
xchg
adc
adc
jge
insb
out
push
pop
pop
pop
xchg
inc
inc
pop
inc
or
decl
js
repz
scas
ret
stos
test
sti
sub
in
lret
sbb
xchg
xchg
push
nop
lret
les
imul
pop
ljmp
dec
enter
xchg
testl
mov
movsl
arpl
adc
rcrl
lods
mov
ficomps
mulb
mov
xchg
jl
arpl
fadds
arpl
xchg
or
jle
cmpsl
dec
mov
mov
cwtl
loopne
les
push
out
jmp
aad
lret
jb
jb
or
hlt
cmp
add
dec
add
add
sub
pop
dec
cmpsb
add
inc
jns
push
test
mov
cmc
roll
cli
push
and
jns
test
pop
sub
push
add
and
aam
or
movl
cmp
jne
loop
ljmp
outsb
mov
sbb
in
add
ret
xor
mov
inc
arpl
add
stos
aaa
mov
loop
out
enter
xorb
push
in
add
pop
add
push
flds
jmp
enter
lret
in
fsubl
xorl
lahf
pusha
jmp
sbb
out
jnp
es
mov
leave
test
loope
bound
add
lds
and
fstpt
dec
pop
adc
jb
icebp
jno
leave
or
adc
orl
lret
pop
sbb
pop
xchg
mov
stos
mov
jg
xor
adc
and
push
imul
jno
jb
pop
das
adc
cmp
dec
fistl
in
pop
xor
mov
cmc
xchg
jp
nop
mov
test
inc
push
incb
add
cmp
rclb
jmp
js
mov
clc
add
repnz
popa
in
std
xor
fcoml
mov
and
add
pushf
sbb
enter
and
cmp
out
mov
add
in
loope
daa
add
xchg
jne
xchg
cmp
iret
dec
mov
test
test
adc
fnstcw
add
nop
rcll
pop
jnp
mov
out
ja
mov
adc
xchg
sub
js
mov
mov
push
push
notb
add
mov
int
sub
add
push
sbb
lret
cs
xchg
ret
faddl
mov
sub
adc
in
repnz
je
xor
stc
ja
or
add
xchg
cmc
insb
ret
test
mov
jno
dec
adc
push
loope
mov
push
out
je
jns
sub
mov
in
jbe
cltd
xchg
cmp
mov
rclb
mov
call
rorl
adc
mov
pop
in
int
inc
lock
rorb
push
insl
rol
sbb
fidivs
fisubrl
call
lahf
adc
push
mov
lcall
push
test
xchg
out
aas
sbb
fwait
movsl
or
sub
pop
popf
cs
in
loope
pop
icebp
popf
jbe
push
xchg
imull
adc
and
adc
sbb
xchg
mov
jns
sub
fsubrl
push
out
xchg
cmp
add
cmovl
divb
ljmp
mov
inc
xabort
mov
mov
loop
pop
flds
mov
add
dec
push
dec
iret
or
hlt
jle
pop
bnd
xchg
iret
and
out
out
cmp
iret
bound
daa
xor
xadd
jmp
jecxz
imul
push
std
jbe
pop
cmp
pop
outsb
lret
mov
test
lcall
popa
jbe
les
outsb
or
jne
out
das
stos
out
cmpsb
imul
jmp
sahf
mov
xorb
xor
or
or
mov
sub
dec
or
xchg
or
negb
iret
and
addl
jo
xchg
mov
or
or
sbb
mov
adc
pop
or
jmp
push
shll
mov
adc
shlb
jo
repnz
sahf
das
ja
jno
clc
or
xor
sub
xlat
iret
pop
je
jno
shrb
lods
cmpl
jae
ss
popa
aas
xchg
and
xchg
sbb
in
dec
cld
dec
gs
sbb
out
out
or
cwtl
xor
add
in
sub
mov
cli
call
sub
das
arpl
xlat
jns
or
ljmp
jns
xor
jae
mov
sub
push
push
data16
mov
jo
adc
mov
mov
insb
inc
adc
inc
cmp
adc
rol
add
lahf
test
cmp
sahf
jg
pop
or
add
js
iret
mov
in
pop
es
mov
jg
addr16
sbb
lgs
pop
jmp
mov
fistl
fisubs
push
adcl
das
jp
out
cmp
stc
loopne
jmp
stc
cltd
and
inc
incb
or
add
dec
pop
push
imul
mov
out
cmc
jo
popf
mov
icebp
cs
ja
xchg
jmp
insb
jg
int
xor
adc
negb
mov
xchg
adc
in
outsb
enter
dec
jmp
loope
ja
repnz
pop
or
ljmp
test
clc
ret
push
inc
push
mov
dec
dec
jbe
std
hlt
mov
adc
pop
push
sti
movsl
cmc
mov
sbb
aad
add
or
loopne
sbb
jae
push
jl
in
push
push
mov
nop
xor
sub
jmp
lods
ret
in
jg
xchg
or
pop
cmp
bound
mov
or
jae
aad
cmp
inc
add
mov
cmc
cmpsl
data16
add
or
dec
and
mov
mov
cmp
pop
icebp
push
mov
loop
lods
xor
mov
push
dec
mov
out
jg
cmp
adc
cli
sub
pop
push
mov
fisubrl
mov
cmp
cmp
add
xor
and
jge
and
outsl
pop
jae
or
mov
mov
lock
lods
push
inc
stc
xor
imul
fstpl
mov
or
jno
xchg
add
push
push
dec
xchg
in
xchg
jns
jno
mov
clts
jg
push
cmc
jmp
mov
std
xor
dec
push
xchg
push
xchg
lahf
shlb
inc
mov
pop
cwtl
rsqrtps
aaa
inc
jbe
jno
mov
push
mov
mov
ja
movsl
imul
cmpsb
sbb
das
push
faddl
push
gs
cmp
xor
imul
and
lahf
lods
cmp
pop
cmp
add
jno
jo
cli
xor
lea
mov
rcr
cltd
cmpsb
aam
xorl
or
data16
std
mov
mov
call
aad
testl
push
loopne
ds
lahf
pop
xchg
lahf
and
inc
mov
scas
loopne
aas
test
push
js
fucomi
jae
fnstenv
je
insb
pop
call
push
jge
mov
mov
sbb
adc
lcall
dec
sarb
aaa
mov
sbb
cli
nop
sbbb
ss
mov
hlt
mov
inc
cmp
cmpsl
in
jae
adc
hlt
pusha
dec
sub
jp,pt
out
outsl
push
mov
daa
sarb
inc
test
fsts
sti
lods
fwait
sub
aam
cmp
and
sub
test
adc
stos
ret
mov
jp,pt
arpl
in
jmp
dec
stos
bound
loop
cld
and
xchg
pop
enter
out
jb
outsb
loopne
sub
add
sbb
scas
inc
pop
jbe
mov
cmc
xor
adc
xor
jmp
fldt
lahf
xor
imul
cmp
push
sbb
sub
add
stos
div
sbb
lret
in
mov
cmc
ja
fidivrs
outsl
fstl
aad
sub
jmp
adc
push
add
mov
or
fcmovbe
fwait
jnp
mov
loop
dec
xchg
mov
sub
mov
stos
fdivrl
clc
lea
arpl
jle
pop
test
push
scas
mov
outsb
sbb
mov
outsb
bound
push
or
fldt
xor
add
jg
stc
outsb
gs
testl
jmp
dec
out
sbb
mov
loope
movsl
or
ja
push
adc
inc
dec
cmp
or
mov
cli
sub
fs
sbb
inc
jae
das
dec
dec
stos
xor
insl
adc
movsb
loope
int
push
test
movsb
xchg
mov
jne
je
fldt
xor
mov
xchg
pop
out
pop
ljmp
out
jbe
loopne
je
xchg
sbb
insl
mov
xlat
cld
inc
mov
leave
lret
pop
xorps
mov
dec
fs
nop
push
ljmp
push
push
and
cltd
jmp
adcb
mov
bound
or
out
and
cmp
push
jno
push
pop
jl
inc
xor
ja
sub
mov
out
cmp
testb
xchg
cld
lock
adc
mov
mov
sbb
idivl
and
xorb
sbbl
outsl
nop
jmp
jp
ficomps
inc
mov
pop
xor
insl
sbb
xchg
into
adc
pop
push
repnz
shrb
adc
mov
pop
js
shrd
popa
nop
jmp
cmpsl
jecxz
ret
jae
pop
sbb
bound
dec
jg
dec
push
adc
leave
cs
incl
iret
addb
cmc
mov
stos
and
dec
nop
xchg
mov
mov
pop
push
mov
xchg
aad
push
adc
jbe
dec
ljmp
mov
jnp
lahf
push
and
sub
jns
mov
push
leave
sbb
shrl
outsl
ja
rorb
test
inc
mov
movsb
xchg
insb
jle
jbe
je
dec
inc
repz
sub
push
cli
test
repnz
pop
jl
and
xor
sbb
cs
xchg
mov
inc
adc
imul
leave
ja
jmp
pop
mov
add
repnz
ds
lahf
add
shrb
jmp
pop
or
dec
mov
rcll
jge
jne
xor
shl
jno
cmp
loope
push
lret
add
rcr
sbb
xchg
sub
push
enter
cmp
std
sbb
insb
xor
sar
imul
sub
cmp
pop
cmp
test
into
mov
sub
or
push
idivb
push
mov
lcall
pop
in
leave
call
push
jbe
cmp
cmp
dec
lea
repz
cltd
xlat
mov
adc
shlb
mul
repnz
test
mov
popf
ja
sahf
loope
xor
jge
adc
les
mov
inc
outsl
xorb
lods
cmpsl
jo
sub
in
popf
push
mov
jbe
xor
and
pushl
addr16
lcall
xor
das
push
notl
push
or
adc
mov
inc
mov
xor
cli
xchg
pop
mov
sub
xchg
pop
test
xchg
adc
add
js
xchg
xor
push
xchg
stos
roll
daa
cwtl
xor
or
lock
and
mov
fstps
cmp
roll
test
dec
imul
lcall
ret
insl
repz
add
cld
push
movsb
mov
cmp
push
pop
mov
xor
xchg
xchg
es
cmpsl
lds
sbb
push
sti
jle
scas
rcll
scas
xchg
sbb
inc
leave
xchg
cli
and
sbb
and
sub
popa
call
add
add
mov
popf
jae
scas
test
mov
sbb
cmp
push
lahf
cmp
mov
xchg
adc
popa
pop
jnp
fstps
stc
imul
xor
dec
fiadds
outsl
ja
xor
lds
pop
imul
pop
jb
outsl
scas
mov
xchg
out
data16
aad
call
hlt
leave
in
xchg
cmp
gs
adc
rcl
jno
push
mov
xlat
jb
push
movsb
lods
mov
mov
arpl
cmp
xchg
cmp
adc
sarb
sbb
jno
or
push
cmpsl
push
mov
inc
pop
and
test
xor
jg
mov
testl
mov
lret
addl
cli
ds
sarb
aad
outsb
aaa
cli
sahf
sub
out
das
sub
dec
aas
out
pop
cmp
mov
jns
or
pop
insl
lods
fwait
jnp
dec
xor
mov
imul
sti
pop
ja
add
pop
arpl
das
adc
test
inc
push
mov
mov
adc
mov
mov
mov
dec
add
jg
sub
mov
pop
rolb
in
mov
clc
out
cmpsb
call
cmp
mov
into
scas
inc
loope
int3
add
pop
inc
push
icebp
xchg
divb
dec
fmul
xchg
inc
push
imul
mov
mov
loop
push
push
outsl
lcall
scas
mov
mov
sub
test
pushf
loope
fldcw
mov
mov
push
xchg
les
adc
in
xchg
adc
adc
in
cltd
push
adc
lea
enter
jnp
inc
sbb
stos
mov
rorl
enter
jle
mov
imul
jnp
add
sbb
mov
ror
roll
adc
mov
ss
dec
mov
inc
add
clc
sbb
mov
pushf
xor
adc
das
out
sbb
mov
xor
in
push
shl
fwait
arpl
mov
fldcw
cmp
sti
in
add
push
sbb
pop
jnp
mov
orb
addr16
dec
mov
out
push
pusha
ficoms
mull
mov
daa
mov
mov
cmp
mov
xor
shl
mov
pop
lods
pop
cmp
xchg
xor
cmp
jbe
bound
fildll
sahf
sub
add
jmp
sub
aaa
fldt
add
cmp
std
into
imul
clc
cmpsb
gs
insl
out
adc
adcl
inc
mov
dec
arpl
xor
sarb
cmp
scas
xchg
and
in
imul
jne
cmp
jecxz
imul
loope
inc
cmp
sarb
and
cwtl
add
jno
push
xor
xchg
jle
testl
pop
popf
mov
loop
dec
jnp
shl
xor
loopne,pt
jb
sub
cmp
xchg
jmp
jne
dec
adc
int3
pop
icebp
int
push
dec
leave
sbb
push
fsubrp
outsl
inc
inc
scas
sbb
mov
bound
pop
sub
inc
movsl
xor
sarl
mov
int3
fldcw
ret
push
push
jne
jno
sarb
inc
jmp
xor
xchg
iret
nop
push
adc
cwtl
jl
add
addr16
xor
ja
pop
lock
sub
in
dec
imul
fwait
clc
sahf
dec
cmc
adc
or
int
aas
inc
gs
jmp
push
es
cmp
sub
jg
cmp
mov
jmp
and
in
stc
dec
cmp
mov
imul
adc
push
out
xchg
adc
daa
ss
into
push
pop
pushf
xchg
data16
fs
repz
insl
pop
lahf
or
inc
xchg
bswap
bound
movnti
inc
or
pusha
add
cmpsb
mov
aaa
fs
fidivrs
icebp
sbb
xor
mov
ds
imul
fdivrl
xlat
test
and
or
xor
lea
in
aad
cmp
shlb
in
sub
movsl
lcall
pop
xchg
movsb
xchg
movsl
jo
hlt
adc
clc
jl
jnp
out
mov
lret
lock
or
test
lock
ds
jo
jecxz
cli
dec
inc
xor
mov
loopne
test
pop
or
jb
lds
xchg
and
test
xor
adc
dec
fnstsw
test
cmp
roll
jle
xchg
scas
nop
loop
push
jge
popa
lcall
and
inc
or
add
dec
out
sbbl
imul
cmp
out
push
stos
lea
lret
lret
sub
out
stos
pop
cmp
pop
jae
les
imul
lock
idivl
jne
sub
arpl
xlat
dec
cmp
jp
jbe
scas
fxam
cmpsb
sbb
xor
sub
pop
sbb
or
inc
divb
cwtl
xchg
cmc
mov
push
sbb
outsl
cmp
mov
lock
sub
cmp
sti
daa
jne,pn
filds
fsubrp
cwtl
mov
les
inc
sub
lcall
mov
movl
inc
xor
or
cld
add
jp
jno
xchg
out
mov
repnz
jb
mov
push
mov
dec
fs
cld
es
shlb
mov
mov
int
sahf
adc
push
or
jbe
push
mov
add
push
adc
jmp
xor
andb
gs
mov
sbb
jbe
sbb
xlat
lea
scas
add
xchg
sarl
orl
sbb
cmp
mov
aam
sahf
enter
cmp
movsb
dec
push
sbb
lock
jo
xchg
subl
push
out
loop
daa
push
fwait
add
mov
push
in
enter
mov
xor
dec
sbb
das
ss
ljmp
adc
lds
test
jbe
mov
loope
bound
xchg
dec
pop
push
pop
mov
adc
pop
push
aas
dec
cmpsl
iret
scas
js
outsl
gs
test
and
ja
xchg
hlt
push
loop
inc
cld
fcmovb
mov
dec
scas
iret
jbe
arpl
mov
xchg
rorl
add
add
sub
out
stc
jb
fsubl
roll
ljmp
cmc
or
pop
or
inc
es
stos
push
mov
cld
aad
mov
mov
les
sbb
addr16
pop
mov
push
and
fdivs
lret
popf
loopne
movsl
repnz
andb
ss
xor
outsb
jbe
mov
ss
stos
rol
jge
inc
in
mov
xchg
mov
mov
fsts
cmpsb
movsl
icebp
in
xor
cmp
push
mov
ljmp
inc
in
pop
enter
xchg
push
pop
mov
jg
mov
add
push
add
fwait
xchg
pop
rolb
lret
jmp
in
sahf
mov
xchg
push
loopne
jbe
xor
dec
pop
adc
pop
inc
movsl
pop
sbb
fildll
lret
jne
push
push
xor
cmp
dec
cmp
mov
xchg
loope
aam
mov
add
inc
adc
insl
inc
inc
lock
lcall
clc
pop
ror
movsl
mul
leave
dec
fldl
and
fnstenv
adc
mov
cwtl
cmp
in
ss
ret
push
dec
loope
aaa
lock
push
pop
pushf
jmp
pop
pop
sub
mov
mov
sub
cltd
hlt
mov
jmp
orb
ja
repnz
inc
int
mov
and
mov
add
xor
push
cmp
jbe
fadds
nop
add
pop
ljmp
inc
insl
xor
ds
and
cmp
push
fs
rorb
pushf
fnsave
int
loop
pop
pop
xor
jl
fists
aaa
xchg
fdivrl
xlat
imul
wrmsr
fsubrl
push
jae
jns
lahf
sbb
mov
out
xorb
adc
fisttpll
lahf
pop
je
imul
stc
mov
add
sbbb
inc
pop
fists
jge
je
mov
xchg
and
xor
into
jns
jl
adc
out
out
mov
dec
loopne
inc
add
popa
es
lds
int
fisubrs
mov
and
lcall
mov
jecxz
orl
insl
push
jl
dec
pop
loope
insb
ffree
cli
das
add
sbb
push
pusha
pop
pop
hlt
xchg
xchg
incl
icebp
mov
std
xchg
or
popf
jne
movsl
jne
pop
in
inc
xchg
jle
jmp
dec
pushf
jge
cmp
xor
inc
and
bound
mov
mov
mov
cmpsb
mov
cmp
push
enter
xchg
sub
loop
inc
orl
stc
add
xchg
mov
vmovlpd
mov
mov
jecxz
daa
sbb
mov
cmc
stos
xchg
inc
pop
adcb
sub
dec
fsubs
ret
aad
bound
push
movsl
sbb
fs
repz
cs
jle
pop
imul
jmp
js
out
inc
jg
pop
xor
hlt
mov
fldt
mov
stc
xchg
adc
enter
les
pop
in
xchg
jno
cmp
movsl
pushf
push
sahf
cltd
push
pop
daa
subb
fcmovne
dec
jno
call
imul
xchg
ret
mov
leave
decb
dec
fsubrs
sbb
dec
xchg
mulb
push
cmp
xchg
int
fcompl
dec
inc
sub
out
shll
lds
xchg
adc
fwait
xchg
sti
dec
xor
call
and
or
subl
insl
and
mov
pop
mov
sub
stos
xor
xor
jge
call
hlt
jp
jmp
nop
inc
mov
xchg
int3
ret
mov
pop
jmp
mov
jae
or
clc
les
out
or
nop
pusha
loop
pop
cmp
inc
jg
adc
test
lret
inc
xchg
repz
or
fimuls
xchg
inc
sub
ret
in
pop
cmp
ss
pop
ljmp
mov
add
aad
js
xchg
je
cmp
dec
push
shlb
std
jle
negl
push
push
push
aad
int3
add
ds
push
add
icebp
mov
fstps
and
arpl
in
ds
outsl
scas
cltd
outsl
xorb
xchg
scas
xor
mov
adc
imul
jno
mov
xchg
jno
in
movsb
shlb
xchg
testb
or
lret
dec
addr16
neg
movsl
push
inc
and
out
lahf
loope
xor
xor
pop
int
add
push
into
sub
mov
xor
test
mov
ljmp
mov
push
movsl
dec
dec
incb
jne
rorb
inc
aaa
fs
mov
and
addr16
xchg
or
inc
sbbb
out
ret
jle
insb
xor
je
lods
fsubrs
and
mov
add
mov
xor
adc
cli
in
imul
es
cltd
sbb
inc
xchg
arpl
jne
ja
jmp
mov
aas
push
movsb
inc
icebp
ret
xor
mov
sti
inc
inc
sub
and
jno
xor
xor
sub
add
fistpl
xchg
or
loop
flds
mov
dec
mov
pop
cmp
dec
in
out
rol
xor
outsb
cli
or
mov
pop
jns
bound
jl
jbe
stos
cmc
and
sub
imul
push
fistpl
pop
clc
fs
bound
xchg
sbb
test
repz
push
repnz
movsb
hlt
inc
sub
mov
push
pop
add
adcl
xor
idivb
push
loopne
pop
xchg
inc
adc
inc
mov
cmpsb
and
push
test
fisttps
pop
aaa
jp
stos
test
in
rcrb
je
nop
mov
out
repz
inc
into
les
jmp
or
push
fistpll
or
mov
pop
cmpsl
xchg
inc
insl
lods
sbb
xor
ss
movsl
arpl
inc
dec
fadd
jae
lahf
es
sub
adc
pop
or
pop
inc
inc
ljmp
adc
sub
lahf
stos
in
mov
test
push
pop
addr16
push
add
hlt
add
out
xlat
inc
pop
fsts
add
jp
or
xchg
cld
or
lods
mov
push
jbe
lahf
popf
push
mov
xor
mov
out
sub
jp
outsl
add
ss
test
mov
call
mov
add
dec
add
mov
and
adc
fst
add
sub
mov
mov
mov
loop
jp
mov
sub
jbe
cmp
pop
sbb
jl
hlt
dec
adc
mov
std
sub
lods
mov
or
adc
xchg
clc
sbb
pusha
push
repz
mov
cmp
mov
bswap
in
pusha
mov
mov
lcall
cmp
cmc
pop
sub
shll
lret
test
aam
out
sti
popa
mov
sub
insl
hlt
lahf
sbb
rorb
das
lock
imul
xor
scas
or
jecxz
add
sub
or
in
scas
or
fmul
cmp
xchg
fidivrs
xchg
pop
cli
popa
std
data16
cmpsb
xchg
ret
in
push
add
and
mov
mov
or
je
popf
jno
jb
addr16
mov
dec
xor
cli
and
add
jae
std
loope
mov
xor
xchg
hlt
xchg
rorb
and
xor
add
testb
rcl
pop
and
inc
sub
xchg
cmp
mov
loope
faddl
jle
push
aam
xchg
adc
lods
clc
xor
and
xchg
or
dec
cmp
test
lods
push
scas
mov
stos
sub
test
jne
push
mov
fs
push
or
jmp
jl
mov
subb
mov
inc
sbb
jge
sbb
add
mov
cld
fs
xor
sbb
sub
orl
add
dec
jb
or
rolb
dec
sbb
and
lods
xchg
cltd
mov
scas
loopne
xchg
fadd
ds
add
sti
lret
adc
pop
mov
imul
push
xchg
add
add
cmp
lods
push
loop
popf
andb
movsb
call
pop
rcr
jecxz
mov
in
pushf
mov
mov
push
test
xchg
inc
inc
divb
test
fimuls
push
sub
xor
or
xor
xchg
dec
add
lods
mov
fistpl
xor
aaa
jbe
mov
pxor
push
inc
loope
jne
mov
or
push
sub
cmp
lcall
or
mov
mov
in
fisubs
scas
pop
fisttpll
jg
jg
sub
sub
sub
cmp
mov
cld
xchg
aad
into
mov
push
testl
mov
jge
sahf
xor
addb
or
lahf
or
dec
jo
push
inc
popf
push
popa
dec
std
pop
jne
push
es
outsl
mov
or
popa
aaa
mov
pop
shlb
ds
xor
bnd
jnp
pushf
imul
cmp
xchg
sbb
dec
outsb
aad
pop
stos
loopne
cltd
pop
push
rcl
mov
pop
repnz
bound
frndint
fcomip
mov
xor
das
sti
ds
push
nop
jecxz
xchg
ficomps
adc
jl
rolb
sub
aad
popa
inc
popa
sub
add
push
xor
mov
jnp
push
xchg
rorb
ret
aam
lret
sbb
mov
dec
push
sbb
insl
inc
push
lea
dec
aam
fs
lret
dec
sub
push
and
adc
sar
sub
aaa
pop
cmp
add
int
popf
push
je
lds
lret
repnz
mov
imul
hlt
orb
test
iret
add
out
adc
pop
stc
adc
lea
xchg
pop
xchg
dec
sbb
leave
pop
in
or
pushf
or
mov
insb
test
int3
insl
rorl
cli
xchg
rorb
sub
testl
outsl
cmp
xchg
loopne
mov
outsl
cmpsb
fstpl
inc
sbb
aam
pop
popf
orb
insl
aaa
adc
ja
aas
dec
add
or
cs
xchg
jbe
cmp
cmp
pop
test
std
insb
nop
add
xchg
repnz
cmp
iret
mov
adc
cmpsl
sub
mov
dec
repnz
data16
sbbb
xchg
add
cli
mov
dec
cmp
mov
ljmp
ror
and
popf
out
mov
fs
or
fisubs
ret
jns
mov
out
aas
pop
adc
enter
mov
daa
pop
movsb
enter
lock
mull
outsl
xor
sbb
cmpsl
ja
sbb
or
jns
cli
stc
pop
aaa
or
pop
stos
stos
mov
jnp
test
nop
inc
pop
mov
popa
hlt
jns
push
out
mov
push
test
adc
aam
adc
xchg
mov
stos
into
mov
ss
mov
mov
clc
jnp
xor
inc
cmpsb
cmp
xchg
cmpsl
or
push
xlat
xchg
sbb
je
jno
sti
add
rcrl
push
lcall
hlt
scas
adc
mov
call
fs
sbb
stos
repnz
mov
aaa
jmp
adc
je
push
roll
inc
pushf
lds
std
in
insb
cmpsl
xchg
mov
cmpl
cmp
jne
in
pop
xor
and
out
pop
dec
inc
in
call
lea
je
xchg
int3
push
push
xchg
mov
sub
or
jns
test
xchg
inc
test
push
or
bound
sub
inc
jns
cmp
jbe
add
push
add
je
xchg
addr16
aas
push
pop
daa
dec
iret
mov
rolb
cmpl
frstor
inc
mov
jle
icebp
loopne
ja
lahf
lea
stos
or
inc
mov
jl
xchg
adc
and
adc
sub
xor
mov
cmc
push
push
dec
mov
mov
adc
pop
fcompl
or
lock
pusha
or
or
sbb
add
and
push
sub
inc
push
insb
iret
icebp
mov
outsl
jge
aad
push
xchg
inc
fstpt
pop
dec
test
sbb
sahf
out
xchg
out
xchg
sbb
aad
pavgw
inc
addr16
push
repz
and
imul
push
stos
clc
loope
push
in
sub
addb
jmp
pop
out
fdivs
in
out
adc
xchg
add
jp
cld
je
rclb
arpl
hlt
pop
pusha
or
inc
adc
mov
movsl
mov
dec
test
pop
mov
test
sbb
sub
test
cmp
adc
or
cmp
jl
pop
ja
or
repz
repnz
cmpsb
dec
rcrl
cmp
out
cltd
xchg
lods
mov
lret
xor
shl
and
nop
push
adc
sub
gs
adc
test
push
repz
add
xchg
xchg
and
ficomps
mov
mov
xchg
mov
mov
cmc
mov
out
pop
xchg
xchg
push
xchg
mov
jne
inc
lcall
ret
dec
sbb
jns
dec
push
pop
nop
lods
cwtl
or
add
fstl
in
movsl
sub
lea
sbb
or
sti
je
xor
incb
ja
out
jge
sbb
sbb
jmp
ja
jno
mov
or
mov
add
dec
mov
mov
jne
mov
ds
ss
in
dec
fimuls
int3
out
lds
sbb
int3
incl
fdivrs
call
xchg
add
lcall
jmp
mov
adc
cld
popa
pop
jmp
insb
dec
ret
push
xor
push
inc
jecxz
pop
push
movsb
dec
jo
xchg
or
loopne
movsl
add
push
dec
scas
and
push
dec
enter
push
adc
int
dec
cmp
or
ljmp
inc
dec
jns
aam
mov
out
ja
in
insl
mov
pminsw
dec
mov
pop
jg
cmpsb
sub
iret
out
mov
dec
mov
movsl
xchg
mov
ret
outsb
adc
lds
ljmp
or
mov
jg
cmp
sub
loop,pn
cmp
push
adc
movsb
cmpsb
push
fsubrs
xor
push
or
mov
adc
daa
cli
or
cmp
add
int
xor
lds
test
ja
mov
dec
cli
sub
sahf
jecxz
rclb
mov
and
andl
ss
cmp
xor
mov
notl
ret
mov
out
fldenv
add
jmp
clc
aad
cmp
stc
enter
mov
inc
lock
lods
fdivr
lds
mov
cli
fisubrs
cmp
sub
clc
pusha
jae
lahf
mov
imulb
movsb
inc
and
daa
leave
mov
test
subl
mov
add
jno
dec
mov
fsubs
mov
es
jbe
xor
xchg
xor
js
negb
lret
cld
aad
cmc
aas
mov
cmp
mov
lret
jns
cltd
test
sub
enter
dec
les
ret
repz
ret
insb
clc
adc
inc
mov
ljmp
sbb
inc
loope
sbb
jnp
out
sbb
add
pop
add
clc
dec
icebp
pop
fdivrl
test
jbe
dec
mov
xor
push
leave
shrb
mov
je
sbb
pop
mull
mov
add
push
pop
push
jno
inc
jb
or
nop
out
enter
into
sub
and
cmp
lret
jb
hlt
cmp
test
adc
testl
add
fimuls
mov
jecxz
fwait
jae
mov
sub
adc
jno
in
xchg
cld
mov
shrl
addr16
or
and
not
adc
or
nop
inc
outsl
lahf
shrl
out
lcall
adc
lea
mov
adc
out
sar
fisttpl
cmp
js
pop
pop
sub
cmc
cli
push
push
pop
out
and
sub
jle
adc
rep
call
push
jno
and
jp
ss
xchg
dec
xor
std
or
stos
and
repnz
mov
int
outsb
xlat
adc
push
jg
loop
icebp
pop
inc
ljmp
inc
push
dec
imul
push
movsl
outsl
in
sbbl
inc
jmp
icebp
mov
cld
pop
ds
xor
dec
dec
mov
je
popa
pushf
xlat
inc
jo
xchg
into
out
lahf
scas
pushf
sti
hlt
pop
insb
dec
adc
xor
enter
sub
jl
adc
scas
push
push
and
cltd
add
xor
mov
or
xchg
scas
outsb
shll
mov
and
push
les
sub
xorl
mov
popf
add
imul
clc
aaa
lds
ficoms
cwtl
jbe
fmuls
aad
popa
int
sub
gs
or
mov
cmp
mov
je
dec
mov
dec
dec
subl
into
xchg
jne
rolb
ficompl
jecxz
test
mov
lret
loope
inc
pop
pmulhuw
in
cmovno
les
std
adc
jbe
adc
pushf
into
stos
lcall
xlat
push
rolb
mov
mov
cmc
jno
mov
sub
addb
inc
test
loopne
les
and
or
sub
cmpsb
ret
pop
or
cld
jno
out
push
cwtl
inc
mov
mov
daa
add
test
pop
inc
inc
inc
mov
icebp
shll
into
lds
xor
sub
xchg
shlb
mov
push
inc
aaa
or
imul
xlat
push
scas
lahf
pop
jo
push
dec
fadd
dec
ficoms
mov
xchg
aaa
out
pop
movsl
inc
or
sub
xchg
gs
xor
mov
vpermt2pd
enter
repnz
int
or
push
mov
jae
cwtl
iret
cld
xchg
dec
call
adc
leave
or
int
ror
mov
loopne
clc
in
dec
mov
and
loop
lock
mov
jnp
jg
in
mov
lahf
outsl
dec
jno
lock
mov
inc
test
cmp
pop
mov
sbb
pop
jo
in
xor
loope
fisubs
leave
int
push
inc
sbb
in
das
sub
nop
jecxz
mov
lahf
mov
cmp
test
push
inc
clc
outsl
mov
ret
sbbb
mov
loope
test
jae
sbb
xchg
dec
mov
and
xchg
test
mov
jmp
bound
lahf
das
fbstp
mov
aas
out
ret
xchg
xchg
cwtl
jns
push
test
push
mov
sub
mov
cmp
inc
test
jl
test
mov
sbb
mov
jecxz
popa
fildll
mov
jecxz
out
loopne
push
fimull
pusha
enter
nop
repnz
int
and
ds
hlt
shll
int3
test
mov
mov
jg
neg
jle
jecxz
daa
xchg
jb
inc
cmc
xchg
call
mov
push
xor
rcrl
mov
cli
cli
and
int
jge
sub
or
jne
fprem
push
cmpsl
mov
xchg
or
inc
pop
ljmp
fsts
mov
mov
aam
mov
add
and
adc
mov
dec
loope
mov
les
fcoms
js
xlat
mov
out
sub
sbb
out
pop
lock
std
imul
fsubs
sbb
push
decl
cmpsb
pop
leave
sahf
loopne
and
push
sbb
jmp
notb
inc
pop
dec
out
je
sti
xor
and
andb
aas
cltd
fistl
cmp
xchg
inc
lret
dec
cmp
mov
lods
rcrl
int3
imul
add
int3
mov
xchg
sub
test
pusha
cmp
push
mov
nop
mov
ret
xchg
pop
lods
ljmp
cwtl
xor
pop
shrl
pusha
jnp
xchg
es
and
subb
and
loope
mov
push
adc
adc
pop
cli
js
xchg
xchg
dec
and
xchg
loope
pop
cmpsb
and
push
out
mov
add
or
mov
dec
cld
out
sahf
or
xchg
addr16
xchg
movsb
lea
pop
sub
sub
aad
iret
and
es
adc
push
push
cwtl
lods
cmp
pop
nopl
out
cmp
popa
xorl
aad
pop
dec
in
xchg
mov
cli
adc
lock
stc
or
out
push
inc
sbb
je
push
and
movsb
stos
cwtl
xchg
cmc
test
stos
scas
mov
xor
jmp
xchg
sahf
jns
push
iret
shll
jbe
or
clc
popa
out
add
dec
mov
jle
movb
push
arpl
inc
sub
xchg
jbe
jo
gs
mov
lahf
lahf
adc
pop
cmp
jae
xlat
mov
add
and
mov
out
push
jmp
add
shrl
aaa
and
or
push
lds
fwait
sub
dec
aad
inc
orl
ja
sbb
sub
cmpb
cmp
xor
push
push
mov
dec
out
das
and
and
pop
loop,pn
jno
add
loope
add
fs
in
ja
adc
cmp
and
jle
aas
mov
sahf
and
push
xor
push
shlb
sti
mov
xor
mov
cmp
xor
faddl
dec
xchg
repz
ret
mov
cmp
mov
xor
push
lahf
aam
mov
ljmp
les
and
mov
in
shll
inc
xchg
pop
mov
and
dec
dec
sbb
out
jno
xchg
mov
in
popa
lret
jb
call
imul
mov
push
cltd
pop
cmp
cmp
push
movsl
xchg
loope
lods
cli
enter
jo
jae
addr16
pop
inc
fsubp
push
push
sbb
shlb
dec
fildll
fstpl
pop
pop
and
movsl
lcall
mov
loope
push
repnz
pop
stos
inc
push
adc
adc
jae
xchg
dec
aaa
inc
test
cmp
push
xchg
jg
mov
and
push
fdivrl
pop
jo
outsl
popf
dec
jae
mov
push
mov
cmc
movsb
push
pop
push
out
push
fdivrs
or
fsubrs
xchg
fsqrt
or
sbb
and
mov
mov
sub
loope
enter
outsl
push
sbb
ret
sub
divl
add
sbb
in
xor
jne
arpl
xor
push
fadds
enter
divb
or
lock
sbb
xor
ss
xor
in
push
sub
sub
cmpsb
cmp
insl
and
cwtl
cmpsb
pop
sub
loope
dec
stos
inc
dec
jb
and
jae
shrb
lret
adc
in
push
push
inc
and
pop
fcomip
cmp
push
pop
inc
xor
xchg
loop
sub
push
and
outsl
mov
dec
aad
fwait
jns
mov
in
inc
add
dec
mov
leave
bound
inc
push
push
ret
mov
xlat
fwait
shl
inc
stos
das
xchg
xchg
mov
test
call
add
insb
push
mov
out
pop
inc
inc
fwait
in
xor
sbbl
test
cld
popf
cld
xchg
lret
or
add
add
mov
xchg
int
mov
das
inc
mov
add
lcall
pusha
stc
icebp
movsl
inc
test
or
jae
push
dec
mov
mov
mov
mov
mov
mov
sarl
xor
pop
cli
jb
mov
or
imul
inc
and
mov
and
scas
dec
outsb
mov
cmpsl
and
mov
jl
das
fcomip
sbb
and
inc
fwait
imul
jle
loope
cltd
pop
in
cmp
test
sti
push
mul
outsl
addb
pop
jno
cld
icebp
out
cs
cwtl
jae
pop
dec
std
and
sbb
add
mov
jge
movsb
sbb
repz
adc
mov
xchg
sbb
lret
mov
lcall
loop
lret
pop
popf
sbb
mov
into
adc
mov
loop
mov
cwtl
inc
cmpsl
rcll
fisttpll
sub
sbb
insb
rorb
mov
dec
sub
dec
dec
cmp
call
js
jae
adc
jmp
div
jns
mov
dec
and
mov
pop
aas
loop
out
add
dec
xlat
add
inc
cwtl
or
not
inc
adc
sub
cmp
mov
inc
inc
repz
ja
pushf
jmp
mov
hlt
inc
das
adc
sub
add
push
sarb
call
mov
mov
add
insb
sub
push
pop
mov
sub
mov
cltd
or
lahf
push
call
fstpl
mov
cs
in
ret
in
add
test
pop
pop
pop
mov
jb
mov
cmp
inc
leave
stos
sbb
mov
mov
stos
fisttps
xor
xchg
adc
jp
adcb
xor
fisttpl
scas
clc
test
aam
rcrb
loopne
movsl
sbb
jg
jne
add
in
ss
cmp
jmp
cmpsb
daa
adc
clc
jne
into
cmp
sub
das
and
imul
out
into
arpl
xchg
lea
into
stc
das
and
sub
std
jo
insl
rcll
adc
pop
push
xchg
mov
es
aad
roll
sub
push
movsl
gs
adc
push
loope
loopne
sahf
inc
xorl
mov
gs
adc
cmpsl
flds
sbb
sub
xor
sbb
loop
pop
pop
push
mov
sbb
testl
es
inc
pop
cmp
in
test
loopne
inc
adc
sub
jne
adc
bound
mov
icebp
lahf
jmp
ss
pop
inc
sub
lock
sbb
mov
repz
data16
out
or
xchg
cmp
movsl
mov
xchg
mov
idivl
pop
in
mov
pop
jbe
jmp
lcall
push
insb
xchg
xor
mov
psubq
pop
shl
out
adcb
lcall
dec
xchg
test
jne
mov
ret
adc
fwait
inc
lea
popl
je
xchg
bound
sbb
jg
mov
pushw
pop
mov
sbb
cmp
or
mov
and
cld
testl
mov
adc
mov
xor
mov
fisubs
inc
cmc
sbb
frstor
push
test
xchg
jle
and
cmp
jl
imul
icebp
je
push
xor
mov
ss
loopne
inc
cmp
xchg
imul
mov
jb
pop
popf
xor
cs
mov
loope
xchg
mov
out
fcmovbe
icebp
sub
pop
push
push
mov
adc
es
cmp
jg
mov
call
mov
lods
sbb
icebp
enter
shrb
add
jns
push
stos
int3
and
xchg
ffree
dec
mov
das
sar
mov
add
sub
call
clc
mov
rcrl
and
fists
mov
push
ja
movsl
fbld
push
xchg
inc
sbb
mov
xchg
jg
or
adc
adc
xor
cld
pop
popf
call
test
inc
fiadds
popf
decb
mov
inc
sub
add
add
loop
pavgw
and
or
adc
pop
sub
xorb
scas
pushf
xchg
inc
sub
cmpsb
jecxz
je
ss
shlb
inc
lods
push
ficomps
xchg
mov
fwait
test
mov
hlt
loope
xor
int3
mov
xchg
popa
mov
cld
mov
sub
dec
insl
inc
xchg
add
lods
fsubs
repnz
cmp
xor
rolb
out
iret
jne
and
jns
movsl
cs
fldcw
mov
add
clc
or
scas
adc
jg
inc
stos
push
cld
xchg
adc
loope
pop
pop
mov
cmpsl
sti
mov
scas
xlat
dec
cmc
dec
insl
movsl
mov
add
add
nop
clc
es
push
push
ficompl
cli
mov
jno
cmp
mov
push
pop
and
adc
mov
sub
lcall
cmp
adc
or
mov
add
loop
pop
dec
repz
pop
sub
inc
xlat
cld
or
cmp
fistpll
mov
das
arpl
dec
js
xchg
loope
jecxz
or
xchg
adc
add
call
mov
js
xor
adc
pusha
outsl
cs
cli
jge
inc
iret
sahf
in
xor
or
int
cltd
fwait
sub
in
xchg
add
and
subb
push
lahf
clc
fimull
mov
pusha
pushf
sbb
push
cmpsb
mov
xor
sbb
loope
test
cld
fmull
scas
loopne
clc
jl
jmp
dec
sbb
mov
ja
add
jp
js
in
push
mov
jmp
mov
or
adc
dec
push
xor
push
shrl
test
cmpsb
xchg
mov
xchg
xchg
mov
lds
call
or
rcrb
in
ret
sbb
inc
dec
mov
loopne
add
leave
xchg
sbb
jecxz
jbe
or
mov
sbb
sti
xor
cs
jo
adc
adc
js
push
cmp
addr16
and
and
push
and
mov
ja
arpl
dec
or
out
or
xchg
popa
pop
inc
mov
rcrl
pop
ret
or
test
movsb
rcl
test
xchg
ror
fbld
adc
cmp
inc
cld
ficomps
cmpsl
cmc
add
pop
dec
in
xor
jecxz
test
cmp
movsb
add
imul
pop
aam
add
sub
pop
icebp
out
addr16
jbe
test
cmp
lea
test
dec
scas
jl
cmp
stc
mov
cltd
call
adc
icebp
jp
lret
inc
inc
push
sub
int
mov
pop
out
push
xchg
stos
fcom
or
sub
and
or
push
int3
aas
sbb
mov
and
testl
test
jno
mov
cmp
mov
jne
xchg
pop
jnp
mov
in
or
jg
in
stc
push
lea
dec
pop
cwtl
ds
cmpsb
or
push
aas
cs
adc
cmpsl
sti
rcl
sbb
sbb
ja
mov
lock
xlat
dec
cmpsb
mov
xchg
sbb
sbb
mov
sub
push
sub
inc
cmp
jecxz
or
aaa
dec
leave
xchg
add
inc
gs
imul
mov
jbe
inc
adc
lret
jle
inc
xor
lahf
pushf
or
fbstp
sarl
jb
mov
inc
dec
aam
inc
xor
pop
stos
in
addr16
sbb
mov
out
cmpsb
jnp
stos
dec
nop
subl
shl
sub
mov
add
lock
or
mov
xchg
rcll
fcmovnbe
mov
and
or
clc
leave
dec
outsb
cmpsb
mov
adc
jno
mov
mov
sbb
pop
pop
jbe
mov
add
es
inc
mov
fimuls
es
enter
add
sub
adc
adc
daa
cltd
push
push
arpl
push
jns
cwtl
scas
push
adcl
loopne
adc
jge
test
scas
lret
fiadds
mov
sbb
sbb
and
sbb
mov
imul
arpl
or
lock
mov
adc
hlt
outsb
fidivl
fwait
push
fwait
pop
out
sub
repz
add
sub
sbb
pop
sub
subl
push
jo
pop
cltd
js
xor
ja
cld
add
mov
and
outsl
mov
aam
and
mov
outsb
sbb
andb
jp,pn
pop
push
mov
add
test
movsb
ja
jle
cmpsl
pop
ret
pushl
out
sbb
adc
les
fcomip
push
call
cmp
sbb
int3
cs
xor
fistpl
and
aad
imul
mov
jne
mov
dec
les
test
mov
mov
shl
rorl
arpl
ret
push
loopne
dec
test
pop
das
mov
imul
adc
sarb
mov
sub
sub
sub
push
cmp
movsl
adc
sbb
xlat
adc
in
psubw
mov
or
aad
inc
sub
and
pop
into
sbb
push
lcall
push
pop
es
les
mov
cmp
sub
push
jne
and
aad
ds
pusha
lods
xchg
push
cmpl
dec
mov
les
dec
sub
ffreep
arpl
add
test
aaa
jo
push
xor
mov
into
dec
test
xchg
je
in
lea
jg
mov
dec
bound
iret
inc
lahf
ss
sub
lret
sbb
cvtpi2ps
cmpsl
and
mov
add
dec
adc
cmp
lds
test
pop
roll
xlat
jecxz
add
fmuls
ret
jmp
cmp
cwtl
adc
ret
mov
dec
or
in
lea
mov
jo
push
push
push
std
mov
sar
mov
ret
mov
add
add
pop
aam
xchg
inc
jb
std
push
pop
jecxz
loope
jne
sti
sub
mov
dec
mov
pop
cmp
subl
pcmpgtb
and
adc
jl
xchg
jbe
imul
cwtl
ror
sarl
repz
ror
lret
jl
cmpb
and
mov
test
insl
pop
inc
inc
or
pop
xchg
popa
lret
pop
imul
pop
xor
mov
out
shl
rcrb
cltd
clc
cmpsb
xchg
addr16
rclb
aad
add
fidivrs
lcall
lods
lcall
mov
lea
shr
pop
je
sub
enter
sbb
xor
fiaddl
dec
dec
cmpsl
dec
dec
movsb
xor
jecxz
aad
lods
inc
ljmp
mov
xor
lea
test
js
mov
leave
rcrb
inc
adc
push
pop
stos
mov
hlt
mov
je
jl
ss
push
jp
or
sbb
add
les
fwait
outsb
mov
es
cmpsl
mov
xlat
leave
xchg
in
sub
mov
dec
imul
stos
jp,pt
int
pop
dec
add
adc
insl
jp
mov
xchg
dec
dec
cwtl
inc
or
and
fildl
mov
dec
cmp
mov
fwait
jecxz
into
mov
icebp
and
lcall
in
test
and
jg
add
imul
xor
pop
shll
cmp
mov
cmp
mov
xchg
stos
pop
test
call
mov
sub
cmpsb
int
xchg
lods
add
sub
out
mov
stc
stc
rcll
inc
dec
mov
pop
push
sahf
aaa
loop
and
mov
lods
lods
mov
mov
cltd
sbb
push
dec
jns
clc
iret
scas
decl
lcall
pop
fadds
mov
out
ret
xlat
xchg
or
push
pop
dec
rep
xorb
pop
leave
ffreep
mov
rcll
mov
mov
mov
movsl
enter
rorl
inc
and
push
xor
fs
or
psraw
nop
test
jp
sarb
mov
mov
shl
fdivrs
ljmp
jno
rcrb
les
pop
les
ja
xchg
dec
inc
xchg
outsb
dec
cli
mov
frstor
cwtl
aas
mov
scas
inc
dec
xlat
test
or
enter
mov
in
mov
fs
cmc
xchg
push
or
xchg
jecxz
or
inc
call
pop
das
fsubp
cld
pop
inc
nop
lcall
xchg
mov
shld
cmp
cli
pushf
push
cmp
mov
or
mov
aaa
outsb
leave
lock
dec
ret
pop
mov
adc
or
fsubl
or
cmp
cmpsl
and
lret
pusha
jecxz
jo
cmpb
outsl
repnz
hlt
inc
inc
dec
std
imul
pop
lsl
jbe
push
jmp
or
cmp
cmp
call
push
rcll
or
add
mov
mov
hlt
inc
outsl
out
mov
or
xchg
xor
out
pop
jo
mov
mov
nop
dec
outsb
and
negl
sbb
inc
subl
push
in
cmp
ret
dec
add
icebp
pop
cltd
inc
sub
mov
mull
add
outsb
loop
clc
sbb
ja
cmp
mov
mov
es
stos
xchg
mov
and
loopne
movsl
fs
push
daa
mov
outsb
mulb
push
mov
push
jecxz
imul
pop
lcall
fidivl
or
bound
mov
out
idivl
cld
sbb
xor
jge
movsl
repz
jecxz
xor
or
sbb
sub
xchg
xchg
pushf
nop
adc
sub
mov
xor
int
or
dec
faddl
bound
jns
rorb
mov
sahf
xor
and
sub
iret
dec
les
mov
add
xor
decl
icebp
lock
mov
jmp
testb
push
imul
sub
cmp
cld
arpl
jns
cwtl
test
pop
cs
xor
lret
jnp
and
cwtl
test
sub
popl
push
or
jb
jbe
xchg
mov
xor
cmp
dec
xor
scas
repz
or
daa
lahf
loopne
jb
rolb
pop
push
jp
mov
jns
mov
aad
or
test
mov
test
sub
mov
add
mov
test
mov
cli
and
call
neg
cmp
ljmp
inc
add
fsubr
aaa
mov
jl
pop
lock
in
lea
out
mov
fidivrl
mov
loopne
in
pop
mov
ret
xchg
mov
cmp
inc
movsl
cmpsb
lret
add
cli
out
xor
mov
mov
iret
adc
inc
add
push
fs
push
push
mov
cmpsb
repnz
insb
scas
imul
pop
out
mov
ljmp
and
sub
int3
adc
mov
xchg
mov
rcr
and
imul
rcr
lds
ret
or
adc
hlt
cmp
pop
lds
stos
int
fstps
arpl
push
cmp
jo
mov
jnp
out
inc
test
outsb
bound
out
sub
and
xchg
cmp
scas
notl
inc
pop
xor
push
mov
scas
aad
pop
js
es
lods
jnp
mov
orl
push
inc
dec
and
leave
xchg
test
pop
fsubr
std
test
insl
and
scas
cmp
xchg
mov
push
neg
out
jb
es
fisttpl
and
bound
push
adc
xor
daa
cmp
dec
pusha
addr16
out
rolb
outsb
iret
fiaddl
mov
jnp
sahf
daa
in
int3
jne
push
lods
shr
inc
lock
ss
js
ss
cmpsl
mov
bound
js
or
and
jns
sbb
fcompp
aaa
movsl
loope
mov
sarb
dec
cmp
dec
or
rorb
lret
les
xchg
sbb
in
in
mov
xor
aad
xchg
sahf
jecxz
pop
outsl
and
test
mov
fs
or
stos
gs
fisttpl
std
loopne
jne
repz
and
jl
dec
test
mov
and
jno
cwtl
das
or
jge
lret
imulb
gs
call
in
pusha
cmpb
movsl
xchg
mul
xlat
pop
mov
and
lea
rcrb
jmp
movsb
jae
ss
sub
andl
cmpsl
cltd
test
mov
sub
push
xor
pop
mov
cwtl
lcall
loop
nop
daa
mov
xchg
inc
cmp
inc
mov
xchg
xchg
shrl
fs
mov
movsl
mov
dec
jg
ljmp
jmp
shl
out
sbb
inc
stos
cwtl
mov
xor
in
push
dec
mov
or
ret
pop
out
mov
lahf
xchg
fists
inc
or
push
clc
outsl
cmpsl
sbb
and
movsl
aaa
dec
stc
dec
mov
and
pop
gs
cmp
int3
int3
adc
adc
pop
xchg
movsb
and
mov
pop
inc
dec
and
xchg
mov
jnp
lea
stos
aas
pop
pusha
adc
push
cmp
cmp
mov
je
ret
fiadds
das
cmp
or
cmpl
cltd
add
push
movsl
xchg
mov
aas
cmp
mov
jle
push
sti
je
push
in
mov
or
dec
jmp
pop
mov
xlat
lods
mov
incb
aas
in
in
bound
in
inc
mov
rclb
scas
int
nop
jnp
je
sub
aaa
pop
or
pop
cmc
push
aam
or
scas
add
fldl
popf
in
fidivrs
int
mov
mov
push
ret
mov
ret
stc
mov
fs
shrb
mov
inc
inc
xchg
cmp
loopne
and
cmpsl
scas
shr
or
adc
outsl
mov
adc
imul
mov
or
dec
dec
outsb
mov
popf
jp
popa
jl
xor
pop
dec
daa
std
sub
hlt
or
rolb
xor
imulb
mov
pop
cmp
in
filds
sub
jno
fisttpl
jne
movl
xchg
add
add
movsl
test
add
pop
loopne
cmp
mov
loop
fld
sbb
sbb
pop
lret
fldt
xchg
or
inc
or
enter
sbb
aad
sbb
clc
es
cs
movb
pop
push
push
jmp
jbe
sub
out
leave
in
lret
rcrb
jmp
mov
mov
cmp
sub
mov
mov
xchg
xor
sbb
std
cmp
xor
mov
dec
pop
ds
xchg
xchg
mov
into
sarb
call
mov
sub
xchg
into
gs
jnp
pusha
shr
lret
fbld
fldcw
mov
push
sub
jle
or
mov
out
lret
lahf
outsl
sub
sub
ret
stos
jle
jl
inc
shll
mov
cs
cli
push
sbb
jnp
add
mov
aaa
adc
sub
or
movsb
adc
xor
xlat
mull
cmp
push
sti
xor
cltd
push
sbb
in
mov
cmp
push
xor
aad
shrl
and
sub
xor
sti
sub
xlat
hlt
lods
sub
lret
sahf
out
push
pop
add
add
inc
notl
nop
shll
iret
jl
xor
adc
fldenv
movsb
jg
or
das
xchg
nop
inc
mov
pop
add
jae
bound
pop
dec
or
loop
adc
imul
sbb
test
or
cld
das
add
loope
cmp
sbb
add
rolb
lret
inc
stc
ljmp
inc
bound
pop
les
dec
cmc
cmp
xchg
cmp
xchg
jb
jle
and
and
les
jns
out
in
or
xchg
lcall
addr16
jb
shl
jno
inc
insb
push
je
and
mov
les
cmc
jb
outsl
fldcw
loop
xlat
xlat
stc
mov
inc
xchg
xchg
int
pop
lcall
dec
popf
aaa
mov
push
out
or
pop
pop
scas
mov
cmp
lcall
inc
psubq
fiadds
adc
jge
cmc
xchg
lds
leave
hlt
jns
cli
pop
adc
xchg
jge
out
movsl
fadds
xor
es
cmp
repnz
lods
mov
pop
mov
or
and
in
jp
fimuls
push
inc
push
mov
mov
aam
divl
idivl
add
dec
jo
ss
iret
push
shlb
cmc
push
fiadds
jl
outsb
sub
mov
sub
or
out
out
aas
mov
mov
push
jge
jecxz
jp
ret
and
xor
movsb
sub
movsb
popf
cwtl
out
or
das
das
push
pop
adc
jae
popf
rcll
cld
imul
pop
stos
repnz
inc
lods
loop
scas
inc
add
ds
sarl
lea
cmp
adc
test
sub
inc
mov
in
cmp
inc
push
test
dec
flds
pop
icebp
sbb
sbb
cli
dec
mov
push
mov
ret
inc
lret
sub
jbe
adc
cld
xlat
rol
in
pop
fstl
mov
out
pop
test
cmp
aaa
iret
xchg
shlb
push
mov
push
xor
popf
inc
xchg
repnz
xlat
cli
pop
jl
or
inc
icebp
pop
divl
xor
cld
add
int3
test
js
sahf
sub
xor
dec
shrl
call
data16
loopne
add
mov
fmull
or
push
int3
dec
ret
xor
jmp
adc
dec
shl
jmp
popa
popa
fstps
adc
mov
iret
aam
insb
jmp
or
cwtl
jbe
add
jne
jo
or
ljmp
bound
and
mov
add
cmpsb
push
mov
icebp
add
loopne
xchg
jl
adc
jae
sahf
data16
leave
mov
lods
pop
or
lea
or
frstor
fwait
mov
scas
test
insb
loop
outsb
test
sub
fsubrl
aas
adc
add
and
jmp
outsb
in
in
xlat
js
mov
test
je
lret
rcl
cmpsl
jo
sbb
sub
sbb
jno
mov
enter
inc
cmpsl
cmp
cwtl
mov
das
sbbb
xchg
cmp
mov
xor
movsb
pop
xchg
insl
xchg
fldcw
xor
mov
sub
push
mov
push
and
mov
pop
mov
fstpl
gs
sti
inc
jno
xor
shlb
loop
pop
xlat
shll
mov
push
scas
sbb
xchg
xchg
imul
insb
cmpb
mov
outsl
mov
add
mov
sbb
xchg
add
pop
mov
les
lahf
into
sbbb
sti
xchg
outsb
inc
sub
cmp
mov
xor
jle
subl
popf
shlb
push
push
and
in
dec
das
pushf
leave
cmp
inc
int3
jge
sti
fs
add
push
pop
int
mov
mov
jl
icebp
pop
jg
push
aad
fs
jmp
push
ret
leave
push
add
push
jmp
mov
fldln2
ret
inc
pop
inc
test
andl
loopne
lret
lcall
lods
popf
dec
dec
cmpsb
aam
inc
imul
rcrb
repnz
fdivrl
xor
dec
mov
repnz
pop
dec
fmuls
cmpsl
fs
sub
es
pop
xor
jo
pop
pop
icebp
xchg
dec
and
and
cmp
pop
popa
lcall
cmp
ljmp
jg
pop
notb
or
std
inc
ror
pusha
and
push
dec
popa
add
rcrb
cmp
scas
xor
clc
les
jmp
xchg
push
jns
push
push
stc
aad
sub
or
data16
pop
repnz
mov
rcrl
lret
inc
lret
inc
out
call
jg
mov
icebp
or
adc
test
xchg
xchg
cmpsl
pushf
cmpsl
lock
lret
inc
and
jno
pop
xor
loop
loop
sbb
fstps
mov
lret
sub
into
sbb
dec
mov
lock
cltd
scas
test
test
popf
stc
cs
repz
in
lods
jbe
pop
sarb
pop
movsl
pop
cltd
jae
roll
fwait
xchg
push
and
in
sbb
adc
scas
pop
inc
loope
pop
xor
pushf
cmp
sbb
mov
and
je
xor
outsl
adc
loope
sbb
les
sbb
pushf
jecxz
lea
test
fsubrs
mov
dec
push
push
aas
adc
cli
outsl
mov
mov
mov
test
ds
mov
js
in
vmread
sbb
scas
add
xlat
fbstp
ljmp
xlat
movsb
jb
mov
popf
push
insb
lea
jg
ja
ret
mov
jg
out
xor
lret
inc
fisubrl
in
xor
add
jbe
mov
fxch
ret
xor
xchg
jmp
xor
mov
arpl
sub
lret
inc
fcoms
fwait
mov
push
ret
adc
jecxz
xchg
aad
mov
pop
sub
sbb
and
mov
pop
pop
sbb
enter
add
aad
sbb
mov
pop
and
dec
mov
pusha
mov
push
imul
xor
call
add
fsubs
icebp
jns
and
je
fidivs
dec
adc
pop
sbb
cmc
shlb
cwtl
mov
stos
sysenter
aas
adc
dec
outsl
adc
mov
add
loopne
mov
mov
and
add
mov
es
mov
xchg
icebp
dec
aaa
pop
bound
lcall
mov
repnz
aas
sub
imul
push
in
xlat
gs
pop
pop
les
and
sbb
arpl
out
or
and
pop
outsl
mov
rcr
mov
adc
mov
ja
mov
sub
xor
push
mov
fldenv
mov
inc
shll
pop
enter
inc
sbb
test
lahf
clc
dec
std
testl
xchg
mov
clc
xchg
orb
cmp
enter
shrb
cltd
lret
mov
cs
lods
andl
fwait
xor
jecxz
xchg
lcall
inc
adc
ror
out
cltd
or
pop
daa
add
sbb
fisubl
mov
sbb
in
mov
inc
notl
xchg
imul
int3
enter
out
jnp
xor
mov
jmp
fidivrs
sahf
mov
dec
inc
lret
stos
jnp
mov
in
adc
mov
imul
adc
fcoml
sbb
imul
pop
fwait
xchg
lods
or
inc
std
push
cltd
sahf
sbb
xchg
ds
incl
inc
mov
mov
in
fisttpll
repz
icebp
pop
loop
add
mov
jbe
leave
xor
sbb
mov
add
add
mov
inc
lods
test
in
popf
and
fldl
les
pop
insl
lret
test
inc
sbb
jns
sbb
mov
std
jbe
loop
lods
and
loop
sbbl
hlt
cmp
clc
cltd
inc
insl
xchg
cli
test
mov
jne
xorl
mov
mov
mov
mov
cmp
scas
rorb
scas
inc
xchg
xchg
push
mov
out
add
adc
gs
ss
daa
jne
xlat
lods
outsb
xor
ret
lods
adc
mov
bound
stos
pushf
push
xchg
shll
out
or
push
mov
mulb
imul
sti
sub
pop
data16
nop
jae
daa
add
jmp
jle
cmp
movsl
mov
inc
cmpl
imul
into
push
pop
pop
cmp
inc
in
mov
xchg
call
xor
or
pusha
mov
push
mov
push
push
aad
push
mov
jnp
pop
bound
aas
jl
repz
push
andb
fbld
lods
cmc
daa
in
mov
dec
fbld
sub
xor
stc
jmp
xchg
adc
push
shlb
popa
xchg
mov
pop
addr16
sahf
sahf
cmp
sub
mov
mov
sbb
jb
fcomps
cltd
cmc
clc
ljmp
push
jns
mov
test
out
out
or
ljmp
mov
xor
pop
popf
clc
insb
je
mov
scas
jbe
icebp
pop
dec
inc
xchg
and
call
aad
arpl
in
add
ret
mov
rcrb
sub
mov
in
std
jp
es
xchg
stos
inc
adc
pop
ds
xor
sbb
sub
xchg
push
orb
xor
push
decb
sub
adc
pop
stc
mov
inc
dec
aam
cltd
cmp
and
jnp
hlt
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
call
mov
push
call
lea
push
lea
push
call
test
jne
push
call
mov
add
mov
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
mov
push
call
movl
jmp
movb
movb
push
call
movb
movl
mov
push
call
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
push
push
call
pushl
pop
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
push
mov
push
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
push
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
movl
call
mov
push
push
push
push
mov
call
call
push
push
push
push
push
call
mov
call
mov
mov
cmp
jne
push
call
add
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
call
lea
push
call
push
call
cmpw
push
je
push
call
push
call
add
jmp
call
incl
inc
fisubrs
xorb
fisubrs
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jno
jne
dec
addr16
adc
pop
sahf
cmpsl
and
repz
lods
cmp
xchg
xchg
pop
test
xor
lret
ds
mov
ljmp
mov
stc
xchg
fwait
push
mov
fisubrs
out
xchg
or
leave
pushf
mov
in
rclb
cmp
xchg
jne
aaa
fadds
and
mov
push
inc
testb
aad
jecxz
xchg
mov
pop
lds
enter
push
leave
pushf
mov
in
shl
fcmovu
clc
push
sub
push
insb
jne
stos
ja
fstpt
hlt
cmp
mov
aam
mov
test
dec
fisubrs
jg
lahf
cmovs
or
stos
pop
jp
mov
dec
roll
test
je
lds
aas
inc
fisubrs
jg
iret
dec
cmc
roll
mov
jp
iret
dec
or
inc
into
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
push
dec
fisubrs
dec
iret
iret
dec
dec
rol
fisubrs
jg
iret
dec
pop
roll
test
jg
iret
dec
dec
roll
test
sti
movsb
les
rolb
test
inc
lret
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
fs
aas
stos
test
je
iret
pop
dec
roll
lods
pop
xchg
repnz
jg
mov
jp
or
test
pop
lret
mov
xchg
idiv
das
lret
js
inc
fdivrp
pop
xchg
test
lret
dec
roll
test
jg
iret
dec
test
inc
fisubrs
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jg
iret
dec
dec
roll
test
jne
loopne
dec
ret
inc
fiadds
and
int
jno,pt
mov
sti
nop
fdivr
inc
sub
and
push
fcomps
bound
test
cmpsl
data16
push
push
outsl
leave
dec
int
out
nop
mov
imul
punpckhbw
mov
xlat
shlb
dec
rcrl
dec
xchg
movsb
aaa
sub
repz
xor
mov
pop
cwtl
or
sahf
test
cmp
push
cli
xchg
inc
push
push
stos
add
std
scas
jbe
fistps
nop
xchg
mov
and
or
in
mov
push
lods
js
bound
add
addr16
mov
int3
pusha
mov
dec
jecxz
push
mov
mov
pop
pop
adc
xchg
je
jne
lret
out
bound
push
nop
or
jb
lods
insb
adc
arpl
ds
and
sbb
pop
out
setne
add
inc
popa
jecxz
add
cmp
pop
leave
mov
cmp
mov
push
movsl
pop
inc
test
or
loop
sbb
mov
mov
das
lds
inc
mov
sbb
or
jp
cmpsl
push
stos
jecxz
shlb
mov
xlat
std
addr16
or
push
fidivrs
in
lahf
mov
movsl
jl
movsb
fdiv
andl
repz
mov
or
hlt
sbb
loopne,pn
mov
lods
mov
add
mov
mov
mov
inc
clc
pop
into
fcompl
cwtl
enter
mov
xchg
aad
mov
js
or
pop
add
adc
and
cmc
sub
dec
aam
cmp
out
sbb
sbb
adc
jne
mov
or
mov
popa
mov
push
cli
daa
iret
ja
dec
push
push
stos
xchg
cmc
push
inc
stos
shlb
jmp
inc
cmp
nop
push
int
dec
loop
push
pushf
jnp
pop
cmp
jecxz
pop
mov
sbb
divl
jns
inc
scas
xor
pop
lret
aaa
mov
or
lcall
imul
stc
aaa
in
fidivs
sub
cmp
in
mov
fs
fwait
sub
inc
xor
sbb
aam
repz
sbb
fmuls
add
stos
lret
cmp
sub
mov
adc
sub
adc
push
loop
jbe
lea
jb
mov
cmc
jmp
stos
filds
pop
push
xchg
divb
dec
mov
or
mov
ret
outsb
xor
in
gs
loopne
sbb
shlb
into
cmp
test
jae
bound
pcmpeqw
jl
dec
mov
or
in
cmpsb
aam
ljmp
and
or
push
sbb
inc
adc
mov
hlt
mov
dec
xor
test
aam
jns
inc
dec
xchg
dec
ret
push
adc
mov
dec
mov
pop
cmp
imul
test
dec
sub
fadds
lret
scas
jnp
outsb
push
int3
lds
cmp
or
or
sbb
mov
insl
push
in
out
add
adc
adc
sbb
movsb
pop
cs
pop
outsl
lret
ja
sub
ficoml
orl
sbb
jae
lahf
xchg
addl
cld
xchg
cmp
jecxz
hlt
sbb
es
adc
inc
pop
jae
mov
cli
into
pushf
add
mov
int
and
and
fdivl
xor
inc
cmp
aas
not
pop
sbb
ds
add
push
jg
lods
jecxz
imul
push
or
inc
dec
push
mov
xor
mov
jle
in
push
es
push
dec
in
in
rclb
fs
jle
rcrb
pushf
pop
std
outsl
outsb
lcall
and
jg
rorb
cmp
mov
or
fucom
ljmp
sti
ss
jecxz
ret
mull
nop
ja
add
out
popa
stc
movq
xor
dec
repnz
cld
int3
imul
jle
adc
ds
xchg
icebp
lea
xchg
mov
test
je
aaa
or
out
repnz
flds
mov
mov
pop
cmp
js
les
ljmp
int
or
xor
scas
js
icebp
xchg
ffree
in
fmuls
push
lahf
push
repnz
out
pop
jp
leave
repz
cmp
cmp
in
dec
pop
stos
ljmp
push
and
movsb
or
push
mov
dec
iret
lds
mov
dec
jp
int
std
xor
adc
out
dec
repz
sub
fistpl
xor
dec
addr16
aam
mov
xorb
push
test
sub
xchg
dec
leave
push
pusha
fdivs
test
in
jl
outsl
fwait
andl
add
push
cld
pop
mov
lret
stc
push
rep
inc
mov
xchg
pop
cli
popf
adc
outsb
mov
imul
lret
push
in
push
arpl
cmovnp
or
sub
mov
add
js
bound
mov
add
sub
mov
sti
test
mov
and
and
int3
ds
mov
inc
and
adc
jne
cmp
iret
xor
dec
xchg
std
dec
inc
ja
ja
pop
scas
pop
dec
data16
mov
arpl
in
pop
outsl
jns
enter
lret
popa
out
jns
xchg
mov
jbe
stos
repnz
test
xchg
mov
adc
pop
sub
mov
sub
xor
cld
test
pop
jg
cwtl
lods
ds
add
mov
iret
nop
xchg
push
or
pop
inc
or
pop
mov
cmp
fs
in
mov
sub
inc
jo
inc
mov
insb
pop
or
push
jmp
fldt
cld
cltd
xchg
or
inc
mov
int3
cltd
addr16
mov
mov
adc
arpl
std
xchg
mov
mov
sub
sub
xchg
ds
adc
dec
adc
jge
sbb
xchg
clc
jge
xchg
test
add
outsl
imul
or
cltd
mov
sbb
cmp
push
ljmp
cmp
xor
fucomip
push
push
mov
pop
movsl
push
add
cmp
fidivs
ja
and
shrl
xor
icebp
aam
add
adc
xchg
adc
ljmp
out
xor
pop
and
sbb
and
dec
ret
mov
andl
insl
loopne
lret
arpl
xchg
movsl
push
out
fnstenv
xor
test
cli
ret
or
mov
mov
or
xchg
fnstcw
jmp
fcomp
rorl
inc
and
fbstp
lods
xchg
ja
notl
cmpl
and
lods
out
fistpl
ret
cli
adc
and
negb
push
xor
xchg
push
adc
mov
dec
out
fistpl
dec
jge
mov
sbb
dec
fidivl
cli
js
mov
ljmp
or
push
and
and
pushf
inc
push
sub
andb
dec
lea
cmp
or
inc
lret
pmulhw
sbb
pop
ret
rcll
xchg
cmp
testb
push
adc
and
neg
pop
or
jg
ja
inc
jae
mov
mull
test
in
aas
sbb
add
testl
je
repz
sub
or
push
ror
and
xor
mov
push
mov
push
test
decb
jl
and
xchg
out
cmp
mov
bound
push
inc
sub
divl
fisttpl
loopne
mov
loopne
cmc
xchg
les
in
enter
test
cmpsb
mov
bound
addr16
orb
fsub
js
fdivs
or
adc
push
and
decb
or
cld
sbb
mov
outsb
add
dec
mov
or
cmp
mov
sbb
adc
into
outsb
or
or
sbbb
cmc
pop
jp
out
add
push
shl
push
xchg
xchg
push
xor
sub
int3
xlat
ret
inc
push
inc
xor
jp
push
pop
scas
add
push
mov
pop
and
scas
or
jns
daa
sub
xchg
pop
idiv
push
rorl
dec
fldt
jns
inc
movsl
jecxz
mov
mov
std
lahf
mov
sub
jl
add
cmp
xor
gs
jg
adc
addr16
jge
arpl
xchg
jle
push
pop
cmpsb
out
addr16
xor
aas
xchg
loope
hlt
pop
popf
or
and
mov
jge
mulb
adc
xchg
mov
in
into
add
and
mov
dec
dec
xor
insb
xchg
inc
and
test
imull
mov
add
dec
and
mov
ret
ror
adc
mov
mov
xchg
jg
les
fimull
inc
xchg
scas
rep
pop
mov
inc
icebp
out
outsl
sub
sbbb
insl
xchg
inc
stos
cli
sub
in
dec
loopne
cmp
mov
and
jae
jge
inc
push
push
jmp
push
push
pop
cmp
imul
add
rorb
pop
cmp
cmpsl
xor
mov
clc
jb
jbe
cs
mov
fs
out
mov
mov
insl
push
js
popf
movsl
or
jp
js
iret
pop
fsubrp
scas
jne
cmp
shlb
scas
or
bound
lock
xchg
shrb
sahf
xlat
xorb
push
inc
and
ret
pop
scas
arpl
push
mov
pop
xor
or
cmpsl
pop
cmp
adc
ret
sbb
xor
xor
cmpb
leave
pop
adc
stos
std
lcall
jge
mov
pop
sbb
lods
xchg
cmpsb
xchg
xchg
cmp
dec
xchg
insl
andb
ds
push
or
ljmp
scas
cmp
insb
xor
sti
jno
jnp
adc
sbb
stos
mov
dec
mov
loop
in
xchg
in
lods
lahf
fsubrs
jnp
pop
cmpl
scas
sub
jle
std
push
pop
mov
and
add
repz
mov
xor
test
mov
notl
loop
jp
aaa
xor
add
xlat
mov
inc
adc
xchg
fdivs
sub
or
jmp
adc
imul
outsl
and
pop
scas
jae
dec
cmp
int
mov
push
mov
or
pop
imul
fadds
clc
sar
movsb
jbe
add
jecxz
cltd
adc
in
pop
stos
pop
lods
rcrl
dec
out
sub
es
xor
sbb
iret
nop
cmp
lahf
jmp
movsl
dec
or
int3
or
mov
fidivs
pop
stos
rolb
xchg
or
xchg
aad
ret
sub
mov
loope
pop
jl
icebp
push
mov
pop
aad
cmc
inc
shll
imul
idiv
loope
inc
lods
adc
fisttpll
pop
jb
jb
add
aam
faddl
inc
xor
xor
xlat
xchg
mov
leave
sbb
and
inc
add
mov
mov
ret
xor
cmp
stc
mov
int
lock
or
or
mov
jp
or
fistl
xor
mov
cmp
js
sub
dec
fsubrs
xor
clc
xchg
mov
shlb
push
movsl
dec
mov
add
add
add
call
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
inc
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
imul
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
imul
mov
add
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
imul
loopne
inc
add
imul
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
push
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
imul
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
