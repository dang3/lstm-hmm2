push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
xor
mov
ret
and
fcoms
mov
add
incb
push
js
sub
fwait
sub
xchg
lock
aaa
enter
pop
push
mov
lods
sub
das
pop
xor
inc
or
repz
out
sbbl
cmc
mov
cmpsb
popa
enter
popf
and
addr16
jb
je
pop
dec
push
cmc
imul
xchg
jp
inc
mov
movsl
mov
push
sahf
sar
sub
pop
scas
pusha
and
sub
movsl
pop
out
xorl
mov
arpl
inc
pop
pop
hlt
shl
in
call
mov
add
jg
or
mov
pop
stc
scas
test
ret
mov
sub
repz
sub
push
aad
inc
pop
incb
add
popa
push
enter
dec
jle
fsubrl
cld
mov
mov
push
dec
pop
mov
out
push
in
shll
pusha
push
cmpsb
cltd
push
out
cmp
adc
loopne
ljmp
outsl
in
test
mov
in
das
sbb
pop
and
popf
dec
jbe
push
mov
shr
xor
stc
sbb
push
call
cld
mov
adc
fisubl
ss
xor
incb
repz
mov
adc
jns
cmp
shrb
mov
hlt
and
cmp
mov
in
movsb
arpl
inc
cmp
cmp
jmp
mov
ljmp
cld
dec
fs
out
xchg
mov
push
ds
lahf
cmp
in
js
loopne
push
pushf
pop
packuswb
or
cmp
push
pop
inc
outsl
push
fistps
pop
jae
add
in
repnz
pop
dec
ja
std
hlt
not
xchg
jecxz
pop
into
pusha
push
pop
popf
in
enter
scas
push
lret
insl
mov
dec
or
insb
inc
pop
cmpsb
mov
cwtl
xchg
out
shlb
inc
add
loop
mov
loope
fnop
mov
in
insl
and
cs
fimull
xchg
imul
in
in
adc
das
lret
ss
repnz
inc
xlat
insb
sub
cld
jb
sbb
mov
clc
orl
popa
sbb
sahf
fld
dec
fwait
jg
imul
movsl
cmpsl
cltd
mov
adc
cmp
pop
cmpsl
insw
pop
repz
fs
jne
mov
jg
or
inc
xchg
popa
int3
xchg
sub
out
jnp
scas
in
popf
ret
inc
popl
stos
pusha
adc
and
inc
sti
sbb
stos
cmp
rcrl
lcall
xchg
inc
int3
mov
sub
movsl
jp
xchg
nop
fildl
imul
pop
mov
iret
in
push
std
stos
mov
xchg
xor
adcb
sbb
adc
aaa
jns
push
mov
je
push
mov
arpl
cmp
daa
push
outsb
mov
mov
cmpsl
ffreep
ljmp
push
mov
pusha
nop
int3
cmpsl
adc
js
imul
repnz
inc
sbb
dec
bound
mov
rorl
xor
sbb
adc
ds
icebp
movsl
inc
jle
pop
insl
or
xchg
mov
sub
pusha
pop
push
xor
sbb
pop
lock
mov
fcoml
in
clc
jle
in
test
pop
mov
fisubrl
int
mov
scas
pop
repz
sub
jmp
adc
add
call
mov
jge
jge
shlb
shl
sti
inc
inc
dec
cmpsl
push
ja
sub
fisttps
lods
hlt
sbb
test
cmpsl
scas
out
mov
xor
dec
or
and
jb
and
inc
xor
pop
mov
inc
or
jl
cmp
xchg
mov
jle
inc
pop
lcall
cmp
out
enter
fildl
sbb
mov
push
sbb
repnz
out
les
repnz
jne
icebp
jmp
xchg
sbb
mov
repnz
das
roll
dec
add
mov
mov
pushf
ret
data16
mov
nop
push
xchg
cmp
cli
pop
mov
idivl
shl
jbe
cmp
pop
test
inc
rclb
test
mov
ja
pop
pop
popf
inc
pushf
pop
xchg
or
lret
or
push
subl
fldt
jo
xchg
addr16
push
lret
imul
xor
inc
sub
lea
push
or
outsb
cld
xchg
insb
jne
or
fstl
fstl
jno
mov
push
xchg
push
adc
loope
cmp
fcoms
mov
and
jle
fstpt
push
not
popa
into
insl
pop
jmp
xor
shrb
cltd
arpl
cmpsb
andb
mov
pop
jb
fldlg2
and
inc
into
xor
xchg
add
sbb
sti
rorb
jbe
out
sti
mov
mov
clc
cmpsb
cltd
nop
inc
xor
inc
in
lahf
bound
stos
stos
jno
lods
in
fsubl
or
iret
pop
hlt
jmp
xor
dec
dec
push
je
clc
xchg
popa
push
cmp
mov
mov
or
in
popa
mov
mov
loopne
pop
cltd
mov
xchg
sbb
cli
mov
jno
pop
aas
in
or
mov
xor
mov
sbb
dec
inc
lock
daa
pop
sti
adc
pop
xchg
jb
mov
jns
mov
repz
outsb
scas
push
cmp
xor
dec
fdiv
sahf
into
rcl
inc
push
pop
add
add
adc
jl
test
lret
xor
shrb
xor
dec
sahf
out
out
inc
sub
or
sbb
aas
pop
and
rorl
xchg
ficoms
and
aaa
imul
push
xor
out
fstpl
js
cmp
dec
in
inc
in
out
sbb
xor
xor
aad
cmp
out
pop
int3
pop
push
es
adc
shrl
xchg
mov
push
and
adc
jg
jl
aad
stos
movsb
xlat
out
xchg
mov
inc
sbb
shll
nop
stos
cmpsb
mov
loop
jl
mov
lea
add
cmp
xor
out
shr
lods
push
dec
pop
inc
daa
leave
lock
sahf
out
imul
movsl
into
jns
adc
scas
sarl
xlat
out
adc
mov
or
jle
or
fstpt
push
dec
jecxz
push
ja
adc
mov
fdivrp
ds
and
sti
cmp
push
jg
mov
ljmp
mov
sbb
call
int
add
or
leave
ja
cwtl
push
jl
inc
repnz
mov
mov
cmp
movsb
cmp
add
arpl
and
mov
fnstcw
adc
sarb
dec
aaa
lahf
xor
xor
jg
push
sub
cmp
or
int3
sarb
dec
out
lods
pop
fimuls
jno
pop
pushf
dec
addr16
fsubrs
fsubl
sar
mov
mov
jle
xchg
cwtl
jg
dec
dec
in
cs
ds
pop
cli
jp
cmp
or
pop
outsl
dec
fistps
jmp
test
bound
lret
lods
sbb
and
out
outsb
mov
pop
cmp
insl
filds
push
iret
mov
ljmp
fldt
adc
or
push
lret
inc
mov
scas
inc
or
test
loope
mov
inc
add
xchg
shrb
lret
cmp
in
xchg
lcall
xchg
cmc
test
sub
jnp
enter
mov
xor
xor
int
int
mov
dec
and
test
dec
jo
out
cmpsb
inc
inc
or
jp
pop
ljmp
mov
xor
push
xchg
dec
test
aad
jge
testl
sarb
inc
rcr
mov
mov
xor
xor
pop
dec
mov
repz
pusha
test
scas
xchg
cltd
popa
push
xchg
mov
insb
popl
ljmp
mov
inc
dec
push
lock
pop
ja
in
lea
ljmp
std
sub
stos
call
ja
aaa
pop
and
out
movsb
aas
mov
addr16
adc
cld
ss
fnstcw
bound
xor
cltd
clc
adcb
subb
shlb
sahf
leave
pop
loop
fs
or
and
jle
int3
add
push
ffree
popa
dec
cmpsl
mov
nop
pushf
insb
jle
cmp
adc
sub
movsl
hlt
mov
fisttpl
data16
hlt
dec
stc
push
stos
mov
cs
sbb
mov
mov
imul
push
inc
stc
inc
data16
decb
scas
movl
outsb
ds
pop
cmpsl
mov
cmp
shr
ficoml
pop
scas
and
ds
cmp
pop
pop
int3
ficoml
cmp
test
inc
sarb
xchg
push
add
sbb
ret
xor
jle
dec
pop
lcall
paddb
enter
insb
pusha
pop
hlt
jo
dec
inc
iret
push
inc
jl
cmp
inc
loop
lods
inc
aam
sbb
test
sub
sahf
pop
inc
push
push
inc
jecxz
mul
dec
cmp
cmc
add
fcmovnu
clc
pushf
xchg
es
in
and
int3
scas
push
mov
loopne
add
xorb
hlt
out
lret
into
adc
int3
in
dec
jnp
cmp
inc
jecxz
sahf
mov
jp
ret
xor
mov
movsl
add
xor
cmpsl
outsl
add
scas
cmpsl
adc
lea
jp
dec
cmpsb
xchg
arpl
jb
push
adc
sub
adc
cld
in
scas
adc
sahf
inc
fwait
xor
aam
mov
dec
dec
pushf
repz
insb
mov
jmp
xchg
mov
mov
adc
stos
xor
jb
outsl
jge
or
xor
dec
push
out
out
add
nop
xor
sub
mov
and
mov
inc
out
mov
mov
jne
ds
jns
flds
cmp
cmp
fsubr
mov
sbbb
rorl
xor
jno
ret
push
sahf
xchg
cmp
icebp
sub
push
stos
pop
int
cld
test
jmp
sub
insb
sbbl
lods
cli
arpl
mov
idivb
inc
xor
aam
mov
mov
scas
inc
push
or
fdivrl
mov
out
adc
add
imull
test
and
loopne
and
dec
pop
xor
ljmp
cmp
imul
clc
test
pop
dec
xchg
aas
pop
push
das
xchg
xor
inc
movsb
and
mov
add
cmp
clc
push
and
pusha
test
enter
xchg
insl
jae
push
cmp
nop
or
push
dec
inc
addr16
gs
push
andl
icebp
int3
xor
or
cmp
fiadds
and
ja
hlt
dec
movsl
xor
mov
andl
and
dec
mov
lcall
daa
inc
sub
lods
pop
shr
ss
out
cmp
es
cli
adc
mov
xchg
mov
out
inc
nop
xchg
divb
popl
bound
loopne
push
inc
lret
loope
gs
or
out
or
fimuls
scas
es
je
and
loopne
lds
test
les
aad
jne
adc
rcrl
push
dec
cli
dec
rcrl
push
stos
into
inc
jae
sbb
hlt
insl
add
cwtl
aaa
rorb
fimuls
rcl
call
cmp
sub
or
jbe
stos
test
imul
ret
out
xchg
cli
xchg
inc
add
sbb
fwait
pushf
stc
ds
fpatan
mov
stos
out
push
vpaddsb
aam
gs
mov
add
int3
cld
inc
shll
rolb
aam
jg
test
sbb
cli
push
lcall
popf
jns
or
loope
div
mov
divb
cmpsb
mov
or
stos
in
aas
addl
cmpsl
rcl
mov
add
sbb
fadd
jmp
add
dec
add
in
cmc
test
mov
mov
lods
mov
jp
mov
push
aad
cmpsl
xchg
mov
inc
movsl
or
dec
popa
push
push
loopne
push
add
incl
and
pusha
or
pop
pop
jno
jbe
mov
or
hlt
int3
mov
aaa
fst
or
xchg
jp
sub
push
icebp
mov
jb
xlat
mov
cmp
stc
sahf
mov
pop
mov
mov
adc
out
push
dec
enter
js
mov
lret
pop
jge
icebp
shrb
mov
into
xchg
ret
pop
adcb
mov
lea
sbb
test
cmpsl
fwait
das
sub
and
iret
mov
dec
mov
adc
xchg
mov
inc
out
loopne
or
mov
or
int
inc
mov
or
pop
sub
and
in
js
mov
in
loopne
sub
dec
cmp
xor
in
push
sti
jge
fsts
gs
shl
mov
pusha
pop
xor
mov
pop
daa
sub
popa
cwtl
out
mov
std
sub
xor
adc
sarl
pop
push
stos
inc
sub
stos
addr16
push
sbb
sub
cli
hlt
cmp
lret
sti
cld
cmc
dec
xchg
dec
cmpb
out
mov
rcl
aam
incw
fnstenv
xchg
pop
push
dec
adc
cmp
jmp
sbb
mov
dec
add
insl
cwtl
and
sub
adc
mov
xor
adcl
cmp
sti
rolb
lcall
sbb
cli
push
dec
mov
cwtl
aas
mov
dec
push
pop
daa
ret
in
and
mov
dec
pop
loope
push
pop
mov
mov
dec
jecxz
cmp
inc
mov
cwtl
es
int3
mov
loope
pop
cmp
add
sbb
cmp
fsubrs
out
rclb
int3
test
cli
leave
insl
push
sbb
adc
test
ss
xchg
and
jne
jbe
insl
jns
lret
rcrl
gs
hlt
lret
pop
mov
addr16
es
sub
adc
stos
sub
sub
sub
jns
call
pop
cmpl
sub
arpl
dec
sbb
notb
push
jae
push
push
push
xchg
inc
lods
mov
dec
jo
hlt
sbb
xchg
xchg
cwtl
sar
pop
data16
rcll
lods
loopne
mov
dec
mov
and
inc
popf
inc
sarl
or
adc
iret
scas
dec
movsb
aas
jge
clc
pop
imul
pop
leave
adc
sbb
nop
sub
ds
add
addr16
sbb
hlt
arpl
and
je
adc
mov
sahf
in
xchg
xchg
and
dec
xor
xchg
push
jge
sub
lret
bound
inc
jp
adc
data16
xor
enter
fwait
loop
pop
xchg
xchg
xor
push
jp
mov
movsl
push
pop
sub
push
dec
aam
insb
dec
sub
outsb
and
sbb
cmpsb
mov
inc
lock
das
pop
imul
into
mov
fcoml
push
adc
and
call
pop
cmovs
sbb
xor
stos
mov
and
scas
leave
call
mov
aas
lahf
outsb
sbb
aam
cmp
call
fs
cmp
dec
dec
adc
or
aam
push
cld
pop
mov
xchg
call
pushf
fwait
mov
in
stos
xchg
cmc
or
push
enter
or
add
test
cld
jmp
cmc
xor
mov
jno
xchg
stc
xor
cli
and
push
add
out
cmp
and
repnz
xor
ret
enter
lds
adc
and
sbb
sub
fnsave
cwtl
hlt
push
dec
sub
fimuls
lret
or
cmp
mov
mov
adc
lea
and
in
adc
popa
add
sub
sti
test
push
jb
mov
sti
mov
jns
dec
cmpsl
roll
out
mov
ja
jp
sub
int
xor
notl
dec
cmp
jo
push
clc
std
jle
in
dec
stos
push
js
jbe
mov
add
push
das
dec
pop
mov
ja
jge
add
dec
jnp
fbstp
out
fs
movsb
xor
mov
mov
add
mov
lock
clc
and
xchg
mov
imul
xlat
mov
adc
xchg
insl
or
jg
shll
jecxz
out
add
das
call
test
ss
stos
sarl
cmp
pusha
lret
sbbb
mov
jnp
dec
addl
shl
dec
jnp
push
std
lock
pop
movsb
out
adc
iret
xchg
inc
cli
mov
stos
fiaddl
test
inc
add
cld
cmp
lcall
enter
mov
push
lahf
inc
pop
bound
mov
andl
cli
lcall
add
in
repz
pop
jae
sti
rcrb
jbe
push
imul
sbb
loop
inc
lea
sbb
or
pop
repz
scas
sbb
sub
movsl
push
pushw
ss
mov
pop
sub
pop
lea
stc
sbb
or
xor
inc
cmp
ficoml
enter
adc
stc
dec
in
insb
sbb
mov
xchg
into
bnd
mov
ret
sti
repnz
or
nop
inc
mov
mov
in
ja
stc
jecxz
push
or
fcoml
or
mov
js
dec
das
ss
test
mov
push
mov
adc
addl
fsubl
jg
ret
test
int
pusha
ja
inc
dec
cli
add
incl
push
push
jge
mov
in
in
pop
les
xchg
lds
xchg
xor
fisubs
add
mov
xchg
les
or
sub
ds
push
loopne
pop
jmp
adc
xor
or
repnz
add
cmpsb
push
sub
loopne
ss
xor
adc
dec
sub
ss
xor
popf
mov
andl
mov
adcb
pop
popf
and
sub
or
pop
adc
enter
pop
and
iret
cmp
xchg
enter
sub
xchg
jno
mov
fs
cmp
sub
fwait
nop
aas
jnp
fcoms
dec
sub
out
stos
push
push
adc
add
dec
push
sub
mov
dec
fstp
push
cmp
shl
aad
push
sub
dec
daa
sub
clc
cs
mov
and
pusha
lods
jne
pusha
push
fs
int
sbb
xor
orb
push
add
jg
inc
repnz
loopne
loopne
push
mov
in
mov
jbe
add
and
in
enter
in
mov
scas
inc
pop
sbb
in
sbb
imulb
add
data16
adcl
clc
ror
jne
sti
sbb
stos
dec
jl
sahf
stc
shrb
pop
pop
mull
data16
daa
outsl
pop
movsl
hlt
emms
add
mov
mov
mov
arpl
mov
das
jnp
xor
outsb
fnstcw
sub
shl
or
daa
cmc
inc
xorb
xchg
mov
add
push
repnz
dec
arpl
cmp
pushf
fisubs
jl
int
or
sub
mov
sub
push
sub
inc
cs
pop
add
scas
mov
dec
sub
push
lahf
out
xchg
jl
adc
push
sub
xchg
jg
push
xchg
push
pop
push
push
movb
iret
jbe
mov
sub
pop
push
fsubl
rcl
sub
sbb
outsb
sbb
push
movb
sbbl
sbb
mov
and
adc
pop
sahf
rolb
or
lahf
sbb
and
testb
dec
push
push
ljmp
add
xor
xchg
cmpsl
xorl
jle,pn
out
dec
aad
dec
dec
mov
cmp
pushf
xor
add
adc
jge
cltd
shrb
xchg
sbb
add
movsl
cmp
and
out
jle
cltd
mov
cmpsb
cmpsb
mov
outsb
xor
rcl
lods
jae
xchg
mov
test
lock
fiadds
iret
addb
ljmp
fbstp
and
int
mov
mov
adc
fdivrl
dec
inc
aam
jnp
popa
push
xor
dec
or
je
jle
xor
cmpsb
test
sbb
push
mov
scas
and
outsb
cs
dec
imul
xchg
sub
lcall
cmp
or
test
hlt
cmp
sbb
add
push
xchg
mov
push
ja
int3
cmc
sub
repnz
test
pop
and
xlat
mov
stos
fisttps
jnp
fwait
cmp
inc
mov
dec
test
fcomip
pop
inc
enter
outsl
fnstsw
push
mov
sub
insb
aad
xor
out
gs
fcmovnbe
jno
test
les
mov
jne
jg
add
aad
xlat
push
in
xchg
add
and
cmp
fstpl
mov
repnz
clc
pop
jbe
dec
stos
int
adc
in
out
popa
lods
mov
test
mov
inc
adc
push
mov
add
cmp
adc
insb
mov
pushf
mov
pop
les
mov
lcall
push
clc
into
and
xchg
sub
mov
je
add
xchg
into
xchg
sub
sbb
scas
xchg
fdivrl
or
or
or
repnz
cmp
ret
rclb
xor
and
mov
jae
out
xor
mov
sub
mov
xchg
sub
dec
sbb
sub
icebp
call
jno
sti
cmpl
rol
popf
aam
dec
or
sarb
cmp
in
xor
sub
cltd
xor
mov
push
jo
fists
mov
jns
arpl
xor
popa
vpshaw
ljmp
dec
daa
cs
test
lock
cs
push
dec
cmp
aad
add
push
push
pop
or
int3
stos
lds
adc
aaa
faddp
mov
and
loope
sbb
mov
jne
iret
js
fisubs
outsl
fldl
mov
outsl
popf
insl
loopne
cmp
mov
sub
mov
shlb
xchg
or
jns
fs
fcomp
mov
andb
out
cmp
ja
jecxz
jle
lret
cmpsb
pop
cmpb
lock
test
pop
jbe
out
mov
popa
arpl
sbb
dec
pop
and
mov
mov
jmp
sub
ja
movsb
enter
lods
aas
dec
scas
jo
lret
scas
inc
push
pop
mov
into
fs
sbb
and
test
adc
es
mov
imul
pushf
jno
and
cld
icebp
ja
xor
pop
mull
and
push
mov
pop
fldt
clc
movb
cmpsb
mov
loopne
jnp
mov
imul
or
sub
test
fsubl
cmp
loop
jne
imul
movsb
sbb
dec
push
fidivl
adc
and
jb
mov
ret
je
mov
cmpsl
call
xor
add
repz
pop
fldcw
inc
add
out
xor
cmp
cmp
adc
sbb
popf
loop
push
xchg
sub
jnp
idiv
js
or
test
pop
mov
sbb
inc
xor
xchg
adc
xchg
pop
jmp
stc
mov
or
dec
jb
in
jo
int3
cmpsb
xchg
mov
adc
mov
clc
xor
repz
shlb
and
je
pushf
sbb
or
xchg
testb
mov
mov
pop
fmull
shl
or
test
push
in
out
sbb
dec
mov
mov
mov
decb
cli
or
scas
ss
dec
clc
sbb
insl
jp
pop
xchg
popa
jbe
ret
outsb
push
sbb
xchg
dec
mov
and
fidivs
adc
inc
hlt
push
sub
pop
insl
je
sbb
pop
pop
jmp
insb
pop
and
imul
adc
sti
pushf
ret
imul
pop
xchg
jle
hlt
aas
movsb
pop
xchg
clc
fistpl
jns
xor
mov
pop
push
lret
movsb
cmp
sbb
mov
pop
sub
jae
sub
inc
xor
iret
add
std
cli
and
sarl
lods
add
xchg
and
cs
aad
xor
xor
push
push
out
adcl
movsb
push
mov
ficompl
pop
out
jmp
sbb
pop
inc
adc
and
scas
mov
mov
icebp
and
mov
int
leave
pop
fld
or
cmp
in
ljmp
cmpsl
adcl
and
sarl
out
sub
lds
testl
mov
push
icebp
das
mov
ja
rorl
int
clc
mov
jp
or
inc
out
mov
dec
frstor
nop
incl
shll
fdivr
push
inc
orl
jge
pop
es
jno
push
js
je
dec
popa
loopne
test
das
adc
sti
je
stc
mov
pop
add
call
insl
add
push
dec
loope
dec
lods
shlb
mov
jnp
xor
lds
cwtl
cmpsl
gs
lods
push
mov
shll
mov
cmp
pop
sbbl
outsw
out
pop
xor
push
pusha
out
dec
push
mov
and
mov
mov
jne
mov
daa
jmp
sub
ds
mov
cs
push
insb
and
stc
xor
adc
lcall
jge
fldt
rcrb
bound
adc
jecxz
ljmp
or
adc
or
jl
data16
dec
sbb
sbb
pusha
js
push
cmpsb
mov
dec
cltd
addr16
enter
test
or
add
xchg
and
aad
faddl
inc
add
dec
cmpsl
lcall
push
or
push
fisttps
cmpsb
sbb
inc
hlt
in
fbstp
sub
jmp
jns
push
xchg
add
mov
fidivs
fisubs
mov
sbb
push
push
aas
xor
mov
arpl
lods
out
xchg
leave
xchg
andl
or
in
leave
sbb
andl
repnz
dec
insb
xlat
dec
pop
push
dec
add
xchg
cmc
movsb
mov
jl
lods
add
mov
jg
mov
mov
sub
hlt
add
adc
ljmp
test
adc
mov
dec
jg
out
xor
add
dec
das
pop
in
add
icebp
xor
xor
cld
orl
pop
add
sub
addr16
movsl
or
icebp
inc
in
or
jbe
and
das
or
orb
enter
fincstp
das
push
nop
adc
dec
imul
push
sub
cmpsl
push
mov
enter
sbb
mov
sti
cwtl
and
test
cld
loope
out
inc
and
popa
push
dec
xor
jle
repz
repnz
mov
mov
cmp
add
cmpsb
xchg
mov
outsb
dec
pop
push
jl
inc
hlt
push
mov
les
inc
cli
aas
add
mov
jle
dec
lock
cmp
jae
mov
testl
pop
mov
loop
enter
mov
fs
cmc
xchg
fistps
cmp
pushf
ficomps
pop
inc
and
in
test
sahf
cmpb
cmp
leave
outsl
add
adc
pop
sarb
insl
outsl
pop
out
cmp
push
out
dec
lds
mov
xchg
sbb
mov
cmp
push
push
jb
ja
dec
push
xchg
add
aas
lods
nop
cmp
sub
mov
insl
adc
mov
xchg
popf
hlt
pop
scas
imul
jge
jns
xor
fdivrp
pop
mov
mov
stc
aas
int
add
fadds
sbbb
push
pop
xlat
adc
dec
mov
cwtl
stos
push
mov
cld
push
out
scas
pushf
sub
sarb
add
and
inc
jno
lock
cmp
hlt
popa
inc
push
ljmp
mov
nop
test
popf
aaa
and
add
pop
cmp
pop
cmp
das
sbb
ret
test
adc
or
push
push
or
filds
jle
mov
cmp
jns
stos
sbb
jmp
test
pop
xor
push
lahf
jns
xorl
jo
pusha
loop
push
lods
pusha
mov
lret
cmp
pop
mov
mov
bound
pop
gs
mov
mov
mov
inc
xor
ss
out
rorl
cmp
in
fxch
dec
test
stos
or
icebp
repz
cwtl
repz
int
fidivrs
mov
iret
or
adc
mov
push
shl
cli
aad
xchg
inc
jne
cld
subb
jg
bound
ss
cld
sbb
cmpsb
push
and
cmc
int
sub
jp
dec
cmp
repz
mov
sbb
arpl
loope
adc
sahf
mov
jmp
ret
push
xchg
and
les
mov
cmpsl
sub
xor
pop
inc
cmpsb
sub
in
enter
mov
test
cmpsb
dec
dec
pop
mov
ret
sub
ja
pop
pop
mov
shll
or
loope
pop
inc
rcll
xchg
mov
pop
clc
push
call
mov
sarl
lds
hlt
mov
xchg
cld
mov
xor
jecxz,pn
daa
les
jo
xor
stos
cmpsl
mov
pop
jge
inc
repnz
mov
fiadds
push
xchg
sbb
lret
mov
ljmp
sbb
and
pop
lcall
pop
pop
in
add
popa
pop
jae
push
fbstp
enter
jg
mov
test
cmp
fnstsw
push
movsb
dec
xchg
mov
add
out
add
mov
test
hlt
lds
cmp
push
and
testl
enter
arpl
xchg
sarb
out
je
frstor
repnz
mov
add
cmpsl
sub
insb
pop
insl
sbb
cmp
add
call
loop
mov
addr16
cmp
popa
clc
es
sahf
dec
xchg
mov
mov
cmp
clc
cltd
js
xchg
push
xor
fidivrs
pop
call
nop
sub
in
js
mov
xor
fidivrs
dec
shr
pop
nop
adc
sub
ret
mov
data16
into
cmc
unpckhps
dec
in
shrb
insb
aam
pop
mov
inc
add
shll
add
or
mov
hlt
cltd
test
pop
jmp
repnz
test
mov
or
enter
lods
fildl
movsl
mov
push
or
pop
push
mov
lea
lret
mov
mov
outsl
jns
aaa
push
push
cld
nop
out
pop
dec
stos
dec
inc
mov
lret
push
adc
lea
rclb
repz
adc
push
xchg
hlt
shrl
and
mov
in
lea
in
xchg
aam
cmpsl
dec
leave
jecxz
aaa
add
ret
fwait
mov
xor
icebp
mov
push
sub
cltd
cmp
xor
jp
mov
daa
lods
fildl
stos
shl
add
mov
repz
mov
pop
xor
fisubrs
or
daa
fwait
jbe
mov
cltd
jns
jp
daa
dec
jne
iret
aas
lods
cld
aam
jle
dec
push
mov
bound
mov
cmp
das
js
cmpsb
mov
and
or
adc
mov
cmp
popa
inc
sbb
xchg
std
mov
lods
sbb
push
inc
rorl
sbb
pusha
bnd
push
push
lahf
dec
xor
pop
xchg
xchg
jnp
cmp
movsb
or
mov
fwait
xor
insb
xchg
loop
and
addr16
sub
pop
mov
push
loop
jecxz
orl
ja
out
and
xchg
pushf
faddp
xor
out
inc
push
outsl
mov
rorb
jecxz
call
das
mov
mov
dec
xchg
scas
leave
fwait
inc
int
sti
sub
dec
mov
push
popa
jmp
dec
pop
repnz
aam
sub
push
hlt
sub
insb
pop
lahf
dec
adc
pop
xchg
das
sub
mov
divl
or
cwtl
inc
inc
jecxz
ss
sahf
and
cmpsb
xchg
sarl
aad
outsl
arpl
aas
mov
out
jle
jecxz
push
arpl
mov
mov
hlt
xchg
test
test
mov
and
inc
mov
adc
mov
cmc
mov
xor
lods
addl
loop
dec
loop
mov
pop
pop
or
icebp
pop
inc
imul
dec
pop
or
int
into
inc
jmp
mov
xchg
cmp
sbb
sub
adc
fs
mov
jge
enter
les
sahf
sbb
jle
cmovno
inc
mov
mov
pusha
leave
cmpsb
dec
and
fcompl
int3
stc
lret
jge
jns
in
push
shl
sub
cmpl
leave
fiaddl
and
mov
and
fwait
inc
pop
jmp
jmp
xor
out
push
mov
inc
mov
adc
dec
ljmp
aad
mov
adc
inc
xchg
cmc
jl
out
adc
mov
ss
xchg
sub
lods
xchg
pop
push
jo
mov
cmp
rcl
jle
cmp
cs
adc
push
lcall
mov
sbb
in
lea
or
jge
push
sub
mov
adc
mov
sbb
es
cmp
sub
inc
pause
jnp
sbb
rclb
or
inc
jmp
inc
mov
addb
push
xlat
jge
sub
mov
add
pusha
hlt
sbb
aam
pop
or
mov
aas
mov
add
aam
mov
lods
mov
adc
and
test
inc
mov
imul
lret
icebp
insl
cs
test
cmp
push
mov
mov
mov
inc
ja
mov
daa
inc
mov
mov
mov
stos
cmp
stos
mov
sahf
cmc
sbb
dec
jb
xlat
fimuls
inc
ds
mov
test
cmp
xor
aam
jle
xchg
pushf
mov
pop
xchg
lcall
inc
int3
pop
and
scas
push
sar
lret
in
lahf
sbb
fsts
addr16
loop
dec
fstpl
adcl
adcb
cmp
in
mov
fwait
out
add
jno
mov
lods
movsb
pop
testb
add
mov
pop
xorb
sub
pop
mov
movl
jp
das
mov
jle
inc
jmp
sahf
pop
mov
adc
cmp
nop
dec
icebp
jle
mov
je
cmp
inc
insb
pop
sbb
add
xchg
out
test
rolb
cli
mov
add
jle
inc
or
dec
fmul
cmp
push
hlt
jbe
int
add
in
cmp
fisubs
lods
mov
sbb
fbld
and
repz
dec
lods
cmp
cmp
push
stc
dec
movsl
dec
inc
shlb
sbbl
rolb
pop
or
shl
out
adc
call
in
jg
jb
push
int3
adc
stos
loopne
lods
in
rcl
lock
into
xlat
mov
jae
js
mov
pop
insl
aas
aaa
ja
repnz
push
dec
jb
jmp
or
pop
cs
stos
sbb
pop
and
arpl
rcr
aam
insb
mov
jmp
jb
mov
enter
pop
int
arpl
je
stc
add
pop
mov
stos
lods
lock
pop
movsl
mov
orb
jl
pop
enter
test
fwait
cmp
pop
popa
inc
lea
pop
xor
call
into
adc
cmp
stos
orl
jns
sbb
pop
popf
stos
and
xchg
cld
mov
les
test
aas
or
ljmp
lods
ja
mov
adc
inc
dec
ret
cmp
scas
in
push
cmp
push
lcall
cmp
loopne
mov
lret
icebp
aas
xchg
push
pop
jge
test
push
leave
scas
out
idivb
pop
pop
mov
add
cltd
xchg
sbb
lret
cmp
jge
into
dec
xchg
inc
leave
mov
jne
stos
mov
jnp
aas
lahf
add
push
aam
outsl
aaa
sti
scas
mov
mov
and
jnp
xor
cld
sub
push
out
int
ljmp
lds
inc
mov
xor
cmp
jle
subb
lcall
es
sub
dec
adc
mov
inc
scas
arpl
lock
sbb
push
pop
loop
mov
mov
xchg
imul
in
xchg
mov
dec
adc
adc
cmp
movsl
and
jno
add
mov
jle
xchg
cmp
push
in
testl
mov
or
jmp
jmp
sub
sbb
out
mov
nop
xchg
pop
add
xor
sub
shrl
gs
push
lret
stc
xchg
test
mov
lahf
mov
lea
loop
int
sub
lock
xchg
loopne
int3
xchg
mov
mov
imul
insl
jnp
push
sub
sub
sarl
test
pop
jl
ds
and
jmp
das
xor
mov
and
jae
stos
xchg
in
and
ljmp
sub
mov
jns
jle
cmp
mov
out
and
data16
xlat
mov
ljmp
fnsave
pop
cmc
fidivrl
adc
scas
adc
jg
cwtl
rolb
les
aad
std
stc
sahf
jo
hlt
subl
and
dec
out
cltd
aam
sbb
adc
mov
cmp
mov
push
aaa
ret
enter
adc
pop
mov
in
aas
cmc
push
mov
loope
fisubrs
xor
mov
lcall
dec
cwtl
rolb
sbbl
in
push
xchg
out
popa
mov
clc
inc
lods
sti
iret
ss
fcom
mov
pop
orl
xor
push
rcrl
mov
sbb
call
and
fdivrs
pop
pop
bswap
xchg
xchg
push
stc
inc
test
xchg
outsb
repz
pop
in
arpl
out
push
dec
sbb
int3
mulb
pop
aam
pop
add
bound
cmp
dec
sub
xor
push
push
push
xlat
inc
test
jo
stc
sbb
sbb
ret
and
xchg
dec
pop
mov
cs
mov
jb
mov
jnp
imul
mov
push
pop
mov
loopne
jp
dec
adcb
shlb
pusha
scas
or
push
adc
inc
shll
inc
shll
cmp
mov
dec
mov
jo
inc
outsb
int3
cltd
mov
movsb
cli
and
jne
dec
xor
xor
mov
loop
inc
es
loop
out
push
xchg
cmpsl
dec
mov
push
aaa
xchg
neg
gs
mov
mov
ljmp
hlt
sub
sbb
ret
rorb
popa
push
lcall
add
jle
sbb
cltd
ljmp
cltd
aam
cltd
push
das
push
pop
jecxz
cmp
jno
fsubrp
sub
sub
add
push
mov
mov
movsb
fcmovu
push
or
inc
dec
fisttps
es
add
adc
daa
sub
add
mov
jg
sbb
fisubl
jb
jnp
adc
pop
sarb
inc
shr
stos
add
jecxz
push
or
dec
leave
ja
mov
pop
push
xchg
dec
xor
jg
nop
pusha
popf
sarb
mov
std
xor
sahf
fsub
xchg
stc
orb
xor
mov
jo
jp
jne
jle
push
mov
movsl
sbb
adcb
fwait
mov
add
dec
cwtl
cmp
xorl
sbb
mov
xor
aad
inc
and
push
ljmp
jbe
into
push
xlat
enter
mov
out
pop
mov
mov
stos
lds
std
adc
mov
cmp
outsl
into
and
push
ret
divl
jnp
cmpsb
cmpsb
addr16
mov
sub
cmp
lods
adc
mov
or
or
pop
xchg
sub
addr16
mov
nop
hlt
loope
lods
ss
test
out
jne
adc
add
cmp
jno
sbb
ss
adc
adc
dec
popf
leave
sbb
jbe
inc
gs
adc
imul
lcall
mov
push
sub
or
mov
jmp
lock
stos
imul
or
inc
adc
mov
mov
shlb
or
stos
mov
mov
filds
sbb
in
bound
xor
vorps
popa
aas
das
loop
inc
cli
inc
iret
jecxz
sahf
scas
sti
dec
push
sbb
mov
nop
ljmp
cmp
adc
lret
popf
adc
push
sbb
push
mov
fld1
jmp
xchg
sub
push
dec
les
xor
mov
inc
mov
iret
sahf
popa
sub
inc
out
inc
or
outsl
adc
stos
mov
xchg
je
push
repz
cmc
cmp
or
sub
add
jmp
rclb
cmpsb
in
in
fiadds
cmp
xchg
stos
xor
inc
xchg
cmpsb
pop
pop
lret
xorb
loopne
and
lcall
ss
inc
loope
lock
mov
mov
mov
xchg
loopne
out
pop
jp
mov
fwait
loope
cmpl
pop
and
cmpl
pop
es
pushf
cmpsb
insb
jb
mov
lods
pushf
add
sarl
inc
add
mov
cmp
mov
sar
pop
xchg
pop
mov
insl
jnp
jne
xor
mov
mov
pop
shrb
stos
call
adc
xchg
sub
cmp
ja
mov
cmp
push
mov
lret
js
pop
gs
sbb
ret
dec
scas
jno
arpl
dec
lcall
jb,pn
adc
pop
dec
leave
fsqrt
jne
mov
stc
adc
stc
mov
push
push
xchg
jmp
inc
xor
push
push
push
pop
int3
and
loope
call
cli
hlt
fiaddl
leave
adc
andb
mov
xchg
jge
test
mov
loop
jle
pop
inc
xchg
cmp
jle
ret
adc
xor
stc
adc
pop
push
mov
leave
js
je
inc
mov
cli
out
stos
push
add
inc
add
adc
cmp
icebp
push
addr16
mov
mov
shr
fadds
jns
push
scas
movsb
in
or
loop
in
cmc
shl
test
or
or
addr16
sub
pop
bnd
mov
lcall
js
add
push
lahf
cli
enter
adc
sbb
lcall
ds
sbb
dec
xor
loop
jl
arpl
in
sbb
repz
sbb
movsl
popf
xchg
dec
cmp
repnz
mov
jmp
push
sub
fdivs
loop
fisubs
inc
cmp
scas
xor
jo
fstpl
jb
cld
xchg
fsubp
mov
scas
sbb
fadds
decb
dec
jo
mov
stos
mov
arpl
add
xchg
movsb
std
subl
movsb
call
xor
dec
pop
inc
add
outsb
mov
scas
dec
inc
mov
mov
je
mov
xchg
sub
push
iret
outsl
sarl
push
or
xchg
outsb
cmp
cmp
push
inc
adc
jo
data16
popf
inc
data16
movsb
inc
movsl
ja
and
daa
movsl
insl
loop
and
and
js
or
mov
cmp
cmpsl
jge
lock
dec
lods
sub
mov
xchg
jecxz
sbb
adc
popf
das
pop
es
outsb
lret
fisttpll
push
and
add
test
inc
mov
lock
push
ds
stc
xor
cltd
pop
lahf
mov
push
xor
xchg
mov
dec
mov
loope
iret
push
dec
es
adc
and
lret
inc
fldcw
add
push
jmp
push
subl
mov
cmp
mov
dec
jbe
hlt
sbb
mov
shrb
lods
push
incb
sbb
incb
in
fnstenv
pop
sbb
pop
jns
or
cmpsl
jno
lods
addr16
adc
arpl
push
xchg
inc
movsl
mov
mov
push
sarl
shl
mov
mov
add
fistl
adc
insb
dec
adc
cmp
and
sbb
jmp
mov
mov
fcmovnb
lahf
xor
pop
xchg
rol
cmp
arpl
sub
pop
jg
adc
aam
mov
orb
out
pop
xor
shl
inc
sub
ret
mov
push
shll
sub
mov
stos
push
call
mov
jns
xlat
in
jo
orb
sahf
jl
mov
dec
notl
ljmp
out
test
testl
mov
loop
mov
fisttpl
sti
mov
mov
mov
sub
cltd
imul
mov
or
sbb
aam
jbe
lret
or
jb
sbb
data16
mov
and
loop
and
test
xchg
inc
dec
addr16
sub
and
jecxz
mov
mov
xor
mov
int
in
out
and
jmp
inc
push
lret
fs
inc
data16
jb
xchg
movsb
popa
pushl
push
gs
add
dec
outsb
les
pop
imul
cmc
push
xchg
movsb
sub
push
jae
xor
addl
xchg
xchg
and
mov
sub
and
ret
mov
clc
loopne
dec
and
sbb
inc
mov
ss
pop
mov
sub
rcl
fldcw
jg
push
push
jmp
jbe
xchg
leave
pop
xchg
in
dec
jle
fsubr
dec
mov
jge
outsb
in
sbb
popf
mov
sbb
nop
test
sarl
aaa
pusha
fmull
imul
out
popa
jl
inc
jnp
dec
pop
sbb
jmp
stos
leave
popa
inc
lahf
insl
lods
inc
push
loop
aaa
loope
repnz
pop
icebp
mov
pusha
enter
mov
jmp
adc
lods
in
dec
jae
or
dec
push
push
pop
mov
dec
inc
jbe
pop
divb
mov
insl
lret
add
loopne
sub
paddusb
cmp
inc
jae
repz
adc
stc
idivb
or
xchg
arpl
push
mov
sbb
bound
repnz
cmp
stc
xchg
push
int3
adc
pop
aas
mov
jns
gs
sub
jp
es
mov
push
or
add
imul
push
in
cmpsb
imul
in
dec
cmp
mov
lock
dec
cs
loopne
inc
not
fildll
cmp
fidivs
popa
es
sbb
sub
and
or
js
pusha
mov
mov
dec
cwtl
mov
add
dec
pop
dec
xlat
pop
jg
jbe
inc
fwait
in
popa
pop
in
sub
and
fst
movsl
add
out
aam
xchg
outsl
aam
mov
inc
jns
inc
fistpll
push
roll
dec
roll
pushf
outsb
push
cld
test
push
cwtl
lret
jno
and
das
shlb
mov
jne
sbb
mov
and
jns
mov
jo
mov
test
add
mov
hlt
mov
mov
cmp
lock
xchg
mov
ret
or
repnz
fmull
enter
or
test
test
lcall
stos
fs
roll
fisubrs
push
adc
xlat
xchg
bndstx
sbb
pop
pop
xor
cmp
mov
push
dec
fwait
jle
popf
out
mov
pusha
cmp
sbb
push
xchg
lcall
cltd
fwait
stc
add
mov
jbe
test
sbb
dec
xchg
nop
and
pop
andl
out
xchg
imul
scas
pushf
jae
mov
outsb
fisttps
shl
jne
inc
stos
sti
mov
out
scas
adc
pop
and
and
mov
or
mov
and
cmc
sbb
insl
out
movsw
pop
dec
imul
xchg
out
mov
adc
bound
and
pusha
leave
nop
rol
pop
sbb
pop
inc
pop
das
test
lret
and
nop
test
lahf
pop
xchg
dec
pop
fs
fwait
mov
aaa
xor
push
ja
ficoms
es
stos
insb
sbb
cld
dec
mov
push
sub
in
mov
cs
shlb
fisubs
movsb
test
arpl
mov
sub
test
scas
inc
les
add
add
jo
xlat
mov
jnp
or
jns
dec
pop
bound
or
mov
adc
jge
into
mov
pop
out
mov
in
inc
pop
jle
mov
mov
mov
sub
sbb
iret
and
fisubrs
jecxz
pop
mov
fwait
and
pusha
cmpsb
and
or
lds
pushf
xor
call
xor
cmp
fbld
fs
test
movsb
repz
cld
in
insb
icebp
cmp
pop
xchg
mov
add
add
movsb
xor
pop
out
pop
push
scas
mov
fwait
dec
pop
pop
fs
xchg
and
loop
xchg
sbb
mov
xor
imulb
movsb
jmp
add
negl
jl
lret
pop
inc
leave
sbb
or
cli
outsb
pop
cmp
ss
xchg
andl
mov
rcrb
inc
lds
test
cmpsb
push
pop
sti
outsb
cld
jle
sub
rcll
stos
mov
mov
jle
inc
jno
lcall
shl
push
clc
fisttpll
sti
or
push
ret
shll
jle
mov
aam
dec
inc
dec
xlat
movsl
push
xor
arpl
mov
cld
lahf
adc
jnp
inc
ljmp
and
sahf
push
mov
sub
dec
and
popf
xchg
xchg
pop
xor
je
cmp
mov
jg
and
frstor
push
loop
pop
dec
mov
add
pop
repnz
jbe
lods
popf
jne
mov
adc
sbb
fcmovne
fcmovu
sbb
sub
or
stc
sti
push
in
outsb
aad
mov
scas
jo
push
lcall
mov
out
mov
cmp
adc
js
enter
jmp
aad
cmpsl
and
xor
dec
pop
xchg
pop
push
imul
rorl
mov
jbe
out
mov
mov
push
enter
jmp
xchg
cwtl
mov
hlt
and
iret
cwtl
sbb
ret
gs
fdivrl
dec
xchg
xlat
stos
push
push
cmc
subl
shll
ret
push
inc
lods
iret
dec
xchg
sub
inc
mov
test
cmc
jnp
xlat
lret
hlt
lods
mov
push
add
cli
cs
push
scas
sbb
scas
jnp
insb
mov
or
or
addr16
xor
mov
orl
mov
in
arpl
dec
cmc
or
shlb
push
cli
and
and
add
jo
fldz
cli
push
es
fisttpll
icebp
pop
inc
add
pusha
popa
xchg
pop
inc
pop
jmp
in
in
dec
repnz
mov
cmc
adc
outsl
int3
xor
pop
cmc
jmp
cmpsl
dec
jecxz
push
notl
dec
iret
loopne
add
adc
adc
test
sbb
sub
loopne
xchg
outsb
dec
ret
stos
les
stos
lret
stos
imul
pop
adc
inc
and
out
lds
fists
int
or
fcmovnbe
lret
pop
lahf
push
jns
mov
inc
je
cmp
mov
cwtl
push
popa
das
movsl
push
mov
ja
mov
jbe
fsubl
dec
cmp
add
sbb
jnp
lock
lea
adc
mov
stc
inc
movsb
sbb
add
mov
dec
in
cmpl
sbb
mov
pop
cmpsb
unpcklps
mov
ja
jo
or
in
inc
adc
mov
out
xor
mov
mov
push
cmpsl
data16
xchg
cld
mov
movsb
test
nop
out
addb
sbb
je
and
xor
or
in
mov
cli
and
mov
nop
incb
and
fbstp
pusha
sbb
call
and
icebp
imul
add
xor
xchg
cli
int
insb
inc
aam
jmp
mov
push
mov
imul
pop
das
pop
mov
lcall
pushf
loopne
subb
notl
xor
loop
test
dec
xchg
pop
sub
sbb
jecxz
ret
cmp
sbb
imul
mov
cmpsb
subb
fsubrl
pop
rcrl
enter
fldenv
rcl
out
insb
xchg
adc
outsb
adc
pop
pop
cmp
adc
xchg
push
xchg
add
test
mov
adc
cli
cmp
insl
push
insb
rolb
cmpl
lahf
movsb
faddp
stc
arpl
xor
jle
jbe
pop
jne
xor
iret
cmp
imul
stos
aaa
mov
jbe
sub
push
jle
adc
rclb
cmc
dec
push
ret
pop
sarb
notl
jmp
daa
jmp
add
cmpsb
hlt
mov
es
and
iret
ljmp
push
cmp
lds
sbb
mov
lea
mov
or
data16
add
inc
dec
inc
pop
test
sbb
lods
loope
or
rolb
adc
jb
loopne
jae
fdiv
push
popf
lock
adc
out
pop
mov
xlat
cmp
lock
std
test
adc
outsb
test
scas
loopne
mov
sub
call
rcrl
sub
inc
movsb
lret
jae
adc
pop
decl
das
repnz
adc
ljmp
jns
xchg
dec
xchg
jle
dec
mov
pop
sahf
sub
mov
jmp
sub
pusha
pop
jno
mov
xchg
call
ret
ljmp
outsb
xchg
xchg
sbb
loopne
cli
je
cmp
test
and
test
pop
ljmp
int3
clc
add
les
lret
pop
inc
pop
aaa
jmp
jmp
xor
pop
jno
cmp
data16
mov
arpl
pop
gs
mov
add
ss
sahf
adc
jle
mov
std
es
ss
aaa
mov
test
push
mov
jno
cmp
inc
jp
jnp
mulb
jp
andb
mov
mov
mov
and
dec
leave
insb
pop
mov
mov
das
push
adc
jno
add
call
aas
sar
xchg
and
js
pop
jo
pop
mov
fimuls
sub
cmp
sub
jno
sub
mov
fwait
subb
jae
out
push
xor
cmp
cltd
push
pop
pusha
pop
pop
mov
mov
add
mov
add
dec
xor
add
jns
sbb
sarb
mov
into
xor
push
xor
cmp
mov
mov
pop
xchg
mov
mov
les
xor
inc
xchg
xorb
mov
jp
fcompl
cld
loope
ret
dec
es
stos
pop
in
sub
lahf
fdivr
nop
ret
sbb
cmp
xor
xchg
loope
pusha
aad
push
cmpsb
mov
sti
jne
insb
push
sub
sti
mov
loopne
sar
push
mov
scas
pop
in
adc
or
sti
mov
lds
push
in
mov
push
je
mov
jl
call
fstl
popf
pusha
push
addr16
repz
fistps
xchg
lahf
das
and
adc
mov
sbb
insb
dec
pop
movsb
fcoml
test
loopne
cli
and
jno
jmp
cmp
jb
sub
jle
pop
pop
clc
push
xor
rcl
aam
push
inc
cmp
loop
and
imul
jnp
sub
inc
sbb
int
sarl
ficoml
inc
jecxz
je
incl
imul
iret
in
xor
lea
mov
ljmp
lods
fwait
les
pop
mov
and
jge
jno
std
add
popf
pushf
test
les
push
pop
call
imul
push
mov
push
mov
shll
dec
inc
jecxz
dec
aaa
mov
jle
mov
and
ret
sub
popf
icebp
mov
test
mov
mov
pop
lea
flds
push
scas
aad
out
sbb
pushf
imul
fprem
in
repnz
sub
fadds
xchg
mov
sub
mov
int
out
fcmovne
jmp
xor
jnp
add
dec
sub
shlb
sbb
adc
scas
nop
push
xchg
std
mov
mov
bound
insb
push
js
mov
or
aas
pop
jmp
mov
cmp
cmp
jge
test
xlat
sahf
push
cmpl
out
lds
outsl
xlat
dec
push
imul
push
dec
and
pop
int
push
dec
or
push
adc
cmp
mov
imul
sub
and
scas
in
leave
xor
xchg
lea
push
jl
cmp
xor
fidivs
pusha
mov
lea
jo
pop
in
ljmp
jo
mov
data16
aam
mov
xchg
pop
ljmp
pusha
ljmp
cld
repz
push
pusha
xor
pop
cld
sbb
add
mov
lcall
pusha
xchg
sbb
or
das
jb
cltd
mov
call
and
xor
xor
jle
std
xor
mov
dec
or
push
or
mov
add
cmp
sti
pop
leave
add
in
repnz
or
pop
dec
add
jmp
adc
add
lea
inc
test
sbb
sahf
fnstenv
xchg
dec
stos
adc
add
fdivr
hlt
repz
pusha
pop
sbb
inc
mov
mov
and
pop
mov
out
cltd
dec
ja
mov
mov
pop
sbb
sub
stc
push
sahf
data16
mov
xor
mov
push
fs
mov
cwtl
push
cmp
inc
out
out
test
inc
mov
dec
cmp
aam
lods
sbb
push
fnsave
push
pop
loopne
fists
sub
clc
icebp
adcl
movsb
ret
cmp
xor
and
add
aad
cli
push
xchg
push
or
add
or
ret
jae
pop
icebp
iret
lahf
mov
arpl
aas
sub
adc
push
jb
stos
outsl
enter
fisttpll
jge
mov
add
stc
jle
jmp
pop
insb
out
divl
int3
imul
mov
cmp
call
shll
dec
repz
enter
sub
insl
lahf
imulb
mov
mov
scas
out
dec
rclb
pop
shll
inc
enter
popf
mov
dec
pop
or
xchg
mov
adc
scas
cmp
adc
add
test
jge
lret
mov
aas
out
out
mov
adc
sahf
or
arpl
aas
mov
inc
cmc
mov
push
pop
mov
sub
sub
add
xor
dec
fldl
xchg
das
mov
out
mov
xchg
aad
dec
xlat
scas
cmpsb
dec
outsl
and
adcb
push
rol
jae
rcrb
mov
mov
jo
scas
mov
inc
add
mov
jmp
dec
sub
or
out
mov
inc
inc
lods
adc
sub
or
xchg
inc
and
pop
sbb
cmp
cmpl
outsl
aam
jo
dec
inc
orl
sub
sub
xor
xchg
addr16
lea
fwait
xchg
jbe
push
inc
cmpsl
pop
jns
xchg
add
popf
push
repnz
aam
xor
rol
mov
dec
fnsave
push
inc
push
scas
stos
xchg
and
adc
loope
push
andb
sub
lret
pop
repz
add
pop
sbb
push
and
mov
lret
add
jecxz
das
scas
xchg
jmp
pop
adc
mov
nop
pop
xor
repnz
xchg
lahf
out
nop
lods
mov
pop
xor
push
push
lahf
jge
push
sub
and
int
fimull
sti
jne
jne
cwtl
dec
jbe
dec
xchg
scas
test
or
sbb
xchg
call
out
loope
sub
incl
lea
sahf
and
loopne
mov
repnz
adc
sti
and
xchg
or
rcrl
or
xor
cmp
and
jecxz
mov
lret
iret
jne
mov
fnstsw
popa
nop
sub
lds
imul
add
divb
insl
movsl
push
fstps
lock
cmp
outsl
sub
jp
push
add
pop
lods
xor
mov
cltd
les
fisubl
cs
pop
mov
es
jecxz
ja
cmp
enter
xchg
mov
faddl
adc
jecxz
jg
testb
cld
daa
mov
xchg
out
imul
clc
sahf
inc
mov
vmovupd
in
adc
xor
cwtl
push
popf
xchg
and
aas
mov
cmc
cmpsl
scas
mov
inc
ss
fisttpl
ja
inc
aad
pop
dec
mov
sub
negb
in
rcll
push
fwait
sub
sti
dec
stos
jae
out
int3
mov
lock
orl
shl
sub
xchg
adc
aad
rcll
imul
mov
pop
movsb
test
test
inc
subb
dec
jae
cltd
test
cwtl
xchg
jp
fwait
dec
ficompl
pop
stos
adc
loop
add
ret
test
xor
test
mov
add
xor
jb
aaa
and
ret
sub
dec
jg
das
pop
fcompl
xchg
mov
push
cmp
stos
pop
sub
ficoml
js
lret
inc
loop
adc
cs
test
jp
xor
movsl
lahf
sub
jb
out
lea
stc
loop
pop
cmp
jp
pop
out
xor
cmp
clc
cmp
in
int3
lock
fadd
inc
and
add
mov
ret
std
sti
dec
jle
adc
dec
in
mov
loop
in
mov
fmulp
mov
push
add
test
imul
jmp
xlat
pop
shl
mov
mov
test
or
xor
out
push
loope
movsb
mov
sbb
jp
jno
pop
loopne
add
decb
cmp
mov
out
cmp
jns
lahf
pop
popa
xchg
ret
dec
adc
subb
rolb
mov
lea
mov
inc
loopne
and
inc
dec
adc
std
fimuls
and
jg
jg
or
sub
and
xchg
lds
inc
imul
pop
bound
pop
add
shld
lret
inc
xor
push
or
imul
insl
inc
lods
sbb
jle
push
sub
dec
pop
in
mov
and
push
mov
add
iret
add
imul
add
dec
mov
push
and
sub
jno
leave
push
daa
inc
outsb
out
jmp
pop
sub
sar
dec
movsl
cli
nop
cmp
xor
mov
and
shrb
sti
jp
and
and
pop
cmp
in
and
insb
push
iret
into
sub
xchg
mov
sbb
or
scas
cltd
cmc
shr
out
addps
call
aad
ret
jnp
mov
or
or
sub
clc
in
mov
adc
pop
nop
xor
pop
insl
sti
clc
xlat
xor
mov
cmp
fldt
xchg
jo
ret
hlt
sbb
gs
nop
call
sub
adc
insb
adc
ljmp
in
and
hlt
sbb
push
test
jl
repz
mov
in
dec
jge
lret
lock
add
pop
push
rcrl
lods
mov
dec
add
xchg
out
lea
into
inc
leave
fsubr
dec
ljmp
push
int
fmuls
sub
jle
jno
daa
arpl
mov
jns
push
jo
js
in
ja
pop
xlat
cmpsb
out
pop
in
mov
jae
xor
mov
sahf
iret
jns
adc
lret
sbbb
cmpsl
cltd
cli
pushf
mov
aad
outsl
xchg
cmpsb
hlt
jge
bound
xorw
mov
fmuls
popf
lahf
xor
mov
insb
divb
jnp
scas
jns
arpl
dec
mov
dec
mov
pop
or
add
lret
dec
xor
cmp
test
jle
nop
in
cmp
cmp
pop
xor
dec
sbb
pop
cmp
movsb
cmovp
sahf
stos
add
sahf
scas
enter
in
xchg
xchg
sub
fldt
xchg
xchg
stos
int3
adc
lock
xor
or
mov
pop
push
pop
dec
arpl
pop
or
arpl
lcall
insl
add
inc
sub
pop
mov
mov
cs
mov
pop
sbb
jmp
mov
pop
daa
add
fcmovnbe
cmc
sub
ret
lahf
jns
push
arpl
dec
mov
flds
outsb
es
pop
dec
into
fisttpll
jne
or
inc
mov
jmp
mov
push
mov
mov
mov
push
push
add
mov
ss
mov
mov
lahf
or
shrb
ficomps
cltd
ret
jl
aam
lret
xchg
clc
pop
shl
cmp
jmp
aaa
sbb
adc
jg
pop
je
push
mov
out
jmp
daa
add
out
xor
cmpsl
in
add
loope
add
fbstp
xchg
pop
inc
and
call
xchg
jns
ficomps
jle
rclb
scas
data16
rclb
roll
stc
mov
leave
enter
arpl
pop
mov
sub
fwait
int
mov
stos
aam
addr16
imul
testb
or
pop
inc
or
jmp
xchg
jb
fildll
loop
mov
leave
aad
jg
or
pop
jns
lods
and
mov
and
enter
lods
dec
pop
xor
sarl
jl
jbe
and
mov
nop
mov
jae
mov
loopne
push
and
mov
mov
mov
mov
jecxz
fnstcw
or
decl
xor
jmp
cs
repnz
iret
push
xchg
rcl
and
cmpsb
push
mov
mov
fstpt
mov
incl
stos
out
mov
in
jno
inc
je
fiadds
push
push
adc
les
jb
stc
pushf
xchg
push
fdiv
stc
add
mov
xchg
pop
bound
jg
add
mov
decl
xchg
shll
test
xchg
pop
sub
jnp
xor
cltd
adc
jle
sbb
fadd
fisubrs
pop
das
xchg
cmp
sbbl
pop
std
or
insl
imul
push
jecxz
leave
sbb
pop
gs
fsts
sarb
sbb
and
add
add
aam
pop
dec
cmp
sbb
push
pop
pop
jae
mov
xchg
fs
cli
mov
lock
subb
popf
sbbl
ds
stc
jns
mov
popa
lret
sbb
mov
mov
push
sub
leave
and
lea
sbb
adc
ja
fucompp
cmp
in
jecxz
mov
sbbl
scas
in
out
add
aam
les
repz
jnp
mov
dec
mov
das
into
adc
orl
test
jge
xor
dec
into
mov
imul
mov
mov
mov
xlat
sarl
and
inc
mov
ss
sti
xlat
aaa
or
inc
inc
js
in
ss
lahf
mov
aaa
jge
or
push
add
inc
xchg
lea
sbb
dec
pop
mov
mov
push
lods
jbe
jne
test
outsl
icebp
test
mov
jne
jmp
hlt
enter
add
icebp
in
mov
aad
sqrtps
cmp
lds
dec
gs
shrb
fildl
xor
ficompl
sub
ret
stc
into
push
sub
ljmp
clc
ja
push
mov
mov
sub
sbb
adc
ret
pop
dec
jo
cmp
sbb
insb
add
mov
stc
inc
pusha
leave
mov
fcmove
nop
pop
popl
inc
out
and
add
inc
dec
icebp
cmp
sub
stos
adc
push
mov
stos
xor
pop
pop
movsl
test
aaa
adcl
gs
and
jle
sbb
les
xchg
sbb
ja
push
es
scas
inc
arpl
and
rclb
mov
les
mov
mov
out
in
cli
or
add
outsb
inc
jp
in
int3
movsb
xchg
out
in
sbb
mov
insb
leave
inc
mov
imul
icebp
bound
ds
rcrb
or
and
cli
sub
dec
leave
adc
pushf
dec
pop
push
icebp
mov
fdivs
es
scas
xor
popa
xor
pop
add
and
aaa
in
scas
jno
stos
imul
xchg
clc
ror
test
or
mov
dec
subl
cld
dec
or
push
repz
pop
sub
sub
push
stc
push
push
jp
xor
push
pop
cmp
in
mov
pushf
dec
jge
add
insb
cld
jns
jbe
push
lcall
popa
cmp
pop
ror
xor
sub
inc
out
push
mov
pop
sbbl
push
push
xor
mov
inc
mov
pop
mov
jp
dec
stc
xor
xor
sub
adc
dec
ja
inc
mov
ljmp
mov
negb
repz
jne
js
lods
jl
dec
mov
add
xchg
cli
lods
inc
pusha
loopne
rcll
sbb
and
loope
into
add
popa
mov
mov
sbb
pop
mov
xor
mov
cmp
push
pop
ja
or
inc
mov
test
cld
fnstcw
jmp
fbld
mov
test
call
mov
push
ds
cwtl
cmpsl
pop
mov
insl
adc
lret
jg
adc
sub
out
aam
dec
push
jns
jg
add
stos
mov
addr16
fadds
sbb
jl
xor
repz
pop
xchg
pusha
add
insb
sbb
subb
xorl
and
cltd
and
xlat
mov
xchg
or
cmp
mov
loopne
repz
out
dec
leave
ficoml
pusha
test
cwtl
pop
cmp
clc
mov
insb
popf
aaa
add
xchg
dec
lods
pop
daa
ss
push
dec
clc
cli
push
jecxz
into
inc
ljmp
loop
into
mov
or
pop
mov
xor
sub
cmp
dec
lea
pushf
adc
mov
cmpsb
cmp
inc
leave
stos
mov
cld
mov
xlat
cmc
stos
mov
sbbb
out
dec
push
or
inc
mov
xor
lea
jb
cwtl
pop
es
mov
rol
and
stc
sub
lret
add
inc
lds
jmp
inc
mov
lcall
imul
cltd
jnp
xchg
pop
mov
xlat
xchg
repnz
out
ljmp
xor
je
xchg
testl
xlat
add
insl
das
icebp
fstpl
inc
push
dec
les
int3
enter
hlt
add
out
mov
sahf
bswap
and
mov
sub
inc
outsl
ffreep
xlat
inc
into
enter
mov
mov
mov
sbb
fmull
or
push
or
xchg
xchg
and
mov
mov
addr16
sub
je
or
xlat
popf
fistps
sbbl
out
jg
sub
xchg
jmp
add
rorl
pop
nop
pop
mov
pop
jle
andb
outsl
push
mov
aaa
mov
pop
repnz
cltd
mov
clc
ss
fidivl
fwait
xchg
dec
pop
mov
adc
and
add
pop
in
mov
in
ret
add
mov
jp
das
mov
push
and
dec
or
test
sarl
test
inc
in
xchg
dec
mov
popf
mov
repnz
mov
ret
cmc
mov
addr16
lods
int
stos
pushf
jb
push
and
inc
loopne
dec
sub
jb
cmp
jecxz
lahf
pop
push
xor
in
xchg
mov
mov
popa
jmpw
cmp
mov
push
add
arpl
fnstenv
pop
int
cld
dec
xchg
js
shlb
jbe
mov
xchg
xchg
xlat
je
lock
in
ret
mov
call
pop
mov
sub
and
mov
and
div
sti
std
loope
jo
adc
xchg
roll
data16
and
es
adc
imul
cmp
push
imul
adc
call
mov
cmp
sub
movsl
mov
push
sbb
out
inc
repnz
xchg
loopne
sahf
mov
shrb
xchg
pushf
sub
adc
adc
aad
or
jne
lret
xchg
and
dec
or
xor
inc
add
mov
sbb
cmp
or
dec
pop
sbb
jne
cmc
jge
xor
inc
rcll
mov
sar
repnz
xor
xor
in
je
or
in
xchg
loopne
dec
lods
flds
push
dec
lds
push
sub
pop
stos
jp
xor
pop
push
mov
xchg
les
outsb
and
jno
cmc
add
test
pushf
out
pop
fs
sub
fwait
inc
mov
jb
fbstp
rorb
push
daa
inc
repnz
insl
xchg
lds
aam
jle
cmp
hlt
daa
mov
lahf
mov
cmpl
movsb
insb
mov
xor
cld
xchg
enter
and
cs
xor
xchg
mov
and
das
filds
sbb
aas
inc
lret
mov
rorb
fs
inc
stos
mov
ja
sub
xorb
aad
into
mov
or
pop
outsl
xor
xor
and
add
mov
dec
mov
loope
push
dec
imul
xchg
inc
cmp
daa
hlt
xlat
xchg
cld
fmuls
outsl
int
test
jp
leave
mov
jle
add
cmp
test
pop
cli
cld
push
inc
fnsave
jge
cmpsl
push
shll
movl
call
xor
add
or
adc
int
dec
cmpsb
aad
aad
jbe
mov
push
daa
add
add
popa
mov
ss
jnp
test
loopne
push
ljmp
mov
fnstcw
dec
mov
inc
pusha
test
lret
and
xchg
inc
sbb
mov
out
int
xchg
sahf
sub
mov
add
je
adc
inc
cmpsb
push
mov
fldcw
sub
das
sbb
movsl
ret
bound
outsb
cmp
jno
xor
dec
rcrl
add
idivl
pop
mov
fdivl
jnp
and
cmp
test
add
or
dec
test
inc
jnp
mov
std
jno
mov
and
mov
int3
push
ret
pop
xchg
pop
inc
sbb
jnp
nop
adc
inc
jns
xchg
push
add
mov
imul
aam
add
add
or
leave
std
mov
decb
inc
into
stos
inc
pop
lods
sbb
xchg
cltd
cli
sti
cmc
xacquire
xor
cli
push
xor
mov
shll
ljmp
mov
xor
test
mov
lea
jg
or
lods
outsb
cmp
cmpsb
dec
cmp
pushf
cmc
push
out
jecxz
into
xlat
loope
cmp
jne
std
jmp
roll
mov
loop
std
enter
loope
add
mov
mov
nop
sub
mov
cmp
add
jecxz
loope
leave
arpl
xor
adc
imul
inc
sbb
inc
mov
mov
sub
out
shlb
aam
xchg
addr16
mov
sbb
les
int
mov
add
cmpsb
or
pusha
sbbl
sub
add
int3
cmpsl
test
dec
out
adc
mov
insb
pop
push
xchg
pop
lret
in
jmp
cli
fiadds
imul
mov
mov
sub
inc
jae
inc
pusha
xor
arpl
dec
insb
aaa
movsb
out
das
jne
lods
nop
dec
loope
mov
fwait
mov
pop
sbb
and
mov
sub
jae
xor
dec
xor
fstpt
push
testb
xor
mov
aas
sub
mov
std
mov
xchg
inc
fs
sub
push
push
int3
inc
sbb
dec
or
in
push
adc
arpl
mov
lock
adc
or
push
cli
movl
fs
mov
mov
dec
xorb
aad
adcl
pop
jecxz
inc
adc
jo
and
push
push
pop
pop
inc
pop
and
inc
add
inc
or
aad
pop
loop
adc
jecxz
dec
enter
jp
or
ret
push
ret
fsubrl
mov
jp
imul
out
jecxz
mov
into
rcrb
push
int
mov
mov
fs
cmp
sar
adc
pop
jg
sub
stos
mov
es
movsb
addr16
sub
repz
rol
aad
fwait
cltd
mov
dec
sahf
out
jp
or
xchg
test
jmp
adc
and
aam
sbb
stos
pop
mov
pop
push
xchg
add
push
sub
mov
cmc
fcompl
adc
aad
jno
xor
push
test
test
inc
nop
mov
pop
imul
testb
jne
gs
repnz
dec
sbb
sbb
test
sub
mov
out
jmp
aaa
mov
fwait
rorl
mov
fbstp
lret
mov
push
movsl
out
xor
call
enter
mov
daa
into
fldl
test
jne
xchg
push
stos
and
notw
and
add
jmp
aaa
pop
jbe
push
dec
negb
test
imul
inc
outsl
shll
arpl
adc
ljmp
int3
push
lahf
repnz
fisttpl
jecxz
mov
popf
pop
xchg
nop
and
mov
int
stc
out
imul
push
jp
mov
adc
or
movsl
movsl
sub
push
enter
jge
pusha
mov
pop
pushl
cmpsl
and
in
add
loop
nop
sub
outsl
dec
ja
xor
pop
into
jp
lods
test
sarl
add
arpl
das
push
sbb
xchg
push
and
pop
cmpb
xchg
inc
cmpsl
add
nop
pop
imul
movnti
arpl
mov
notb
inc
adc
jne
fcoms
mov
xchg
aas
add
lret
pop
mov
pop
mov
mov
test
mov
lahf
sub
cmp
cmp
ja
shrb
cmp
mov
xchg
out
inc
and
push
xchg
insb
jno
mov
insb
mov
pop
int3
lods
jbe
cmp
dec
xchg
lods
and
xchg
cmp
push
cmpsl
enter
mov
mov
mov
fdivrs
mov
ljmp
js
ret
or
mov
jnp
mov
mov
xor
insl
dec
js
es
mov
ficoml
movsb
aaa
icebp
push
aad
xchg
lea
scas
ja
mov
and
sti
dec
pop
xor
cmp
cmp
pop
outsl
cmp
les
stos
or
mov
jecxz
popf
cmp
pop
inc
mov
mov
arpl
fistpll
movsb
repz
out
xchg
mov
push
push
dec
das
bound
dec
xchg
mov
mov
int
scas
stos
xchg
adc
insb
jecxz
and
mov
bound
in
aas
jno
mov
ss
mov
xchg
jecxz
inc
out
cmpb
push
dec
aad
scas
inc
div
andl
jae
aam
push
lcall
dec
fdivs
mov
push
sub
mov
lock
leave
add
fisubl
inc
insl
addr16
push
jne
push
imul
sarb
repnz
dec
or
ja
test
sub
fstp
fsubp
cs
int
cmp
cmpsb
adc
add
mov
jns
xor
jae
mov
gs
call
into
and
notb
js
cli
sbb
dec
pop
orb
or
mov
out
jbe
or
jg
fbstp
aaa
in
pop
leave
sbb
cmp
jge
xchg
in
lret
clc
das
xor
mov
daa
lcall
insb
or
mov
jnp
fadds
inc
lret
das
lods
rolb
aam
psraw
xchg
testb
scas
in
adc
inc
or
icebp
or
or
out
sub
fmulp
bound
add
push
jmp
sub
in
sbb
addl
jge
aaa
aaa
fs
aas
mov
inc
pop
dec
inc
mov
sbb
mov
add
mov
pop
ss
jecxz
push
ja
cmp
ficomps
and
jnp
jbe
iret
subl
push
div
inc
inc
cmc
sub
dec
rorb
in
cmpl
adc
xchg
xchg
push
push
test
dec
leave
mov
fdivrs
inc
mov
or
cli
xchg
push
repnz
or
xor
pop
sti
sbb
cmp
xchg
mov
call
addr16
mov
in
outsb
sahf
xor
pushf
div
dec
lret
cmp
andb
inc
add
sti
xlat
aam
repnz
aas
sbb
shl
jne
fs
cmp
std
int3
xchg
test
fbld
movsb
dec
jge
cmp
cmp
pop
jnp
push
push
xchg
dec
or
jg
out
out
scas
sub
adc
dec
adc
xor
dec
iret
aam
dec
cmp
lods
mov
push
lret
jae
mov
cmp
mov
push
ja
and
shlb
pop
cmp
ret
daa
mov
outsl
cmp
lods
ljmp
fs
aad
xor
cmpb
inc
std
sahf
sub
das
pop
and
mov
mov
or
pop
pop
sbb
mov
xor
mov
hlt
fwait
rep
int
and
fisttps
or
in
int
movsb
dec
xchg
out
push
movhps
add
adc
sbb
jbe
shr
jle
dec
call
test
ja
push
leave
cmp
xchg
jnp
aad
and
dec
out
sbb
into
or
lds
loop
push
popf
jle
mov
shll
pop
cmp
dec
cmp
sbb
push
cwtl
js
mov
dec
xor
insl
or
call
add
mov
ret
or
pop
iret
push
rcrl
sbb
fstpt
cltd
ja
mov
imul
mov
fmull
test
mov
jne
push
repnz
inc
xor
ss
adc
addr16
ds
mov
cmpl
sbb
jb
mov
push
jne
ss
icebp
aad
arpl
xlat
mov
push
xor
js
cmp
repz
push
sub
je
pop
mov
aaa
cmp
xchg
and
xor
jmp
dec
inc
mov
clc
ljmp
sub
test
or
fisubrs
mov
gs
cltd
adc
fdivrs
jns
aam
cmp
jb
push
xchg
dec
adc
out
sub
mov
in
push
xchg
adc
fiadds
sbb
jne
mov
shl
lret
fs
lods
xor
fadds
test
gs
je
hlt
push
lcall
or
push
cli
enter
shrb
push
shlb
xchg
sahf
lret
sti
add
stos
mov
leave
fidivs
push
iret
xor
popf
lcall
jbe
lds
gs
aad
lcall
add
xor
lret
test
cs
pop
pop
dec
aaa
inc
ret
add
sub
mov
xchg
mov
ja
or
pop
xor
ljmp
push
popf
out
movsl
outsb
divb
lcall
sub
sbb
lret
ljmp
jnp
xchg
jl
jl
or
jmp
mov
and
push
mov
iret
mov
cmp
cltd
outsl
test
shl
ja
shll
or
cmp
leave
push
pop
andl
fnstenv
scas
dec
push
add
loope
jbe
enter
loopne
xor
fldl
mov
scas
xor
out
inc
or
push
inc
stos
in
repz
adc
xorb
push
cmp
inc
pop
sub
jne
bound
aam
mov
pop
scas
bound
inc
fisttpl
nop
pop
push
fiadds
push
ds
add
imul
cld
lahf
push
add
xchg
adc
jp
fxch
mov
sti
shll
dec
lods
cmp
adc
add
inc
in
or
int3
pop
pop
ss
mov
sbb
pop
js
aas
rol
mov
push
push
arpl
and
push
cmp
mov
dec
repz
mov
xchg
xchg
aas
fs
movsl
xchg
cltd
stos
fwait
and
sub
cmp
mov
stos
jmp
inc
ds
xlat
push
or
pop
fcmovne
jne
xchg
cltd
sbb
pop
inc
dec
jmp
ret
pop
dec
iret
adc
mov
xchg
in
adc
std
test
sub
ss
das
lods
dec
xorb
push
popf
aad
push
test
js
xor
lock
mov
mov
outsb
cltd
mov
out
xchg
jns
cmp
into
lock
shll
mov
ficoms
pop
sub
aas
pop
out
stos
rorl
pop
mov
pusha
mov
jp
or
sbb
xchg
mov
lods
and
mov
cld
ret
loopne
sub
iret
lret
or
or
clc
sar
xchg
leave
arpl
pushf
inc
push
inc
fdivl
xor
fldl
xchg
movsb
hlt
les
mov
xlat
or
pop
sub
mov
cmpb
cwtl
dec
shl
pop
in
cmpsb
sarb
sbb
es
inc
push
cmc
std
loopne
pushf
pop
pusha
or
imul
or
inc
mov
in
mov
fildl
insl
das
mov
adc
popa
rcrb
sbb
sbb
ret
ret
mov
adc
insb
andl
push
sub
push
stos
push
push
xchg
pop
add
test
repz
mov
inc
cmc
sti
inc
stos
mov
xor
mov
add
dec
fdivrl
movsb
mov
fdivl
cmp
inc
and
push
jmp
in
add
pop
inc
mov
mov
mov
ret
xor
jmp
ror
loop
and
movsb
lock
loop
test
pop
xchg
jecxz
cmc
lcall
cmpsl
adc
aad
das
sub
push
pop
fstp
gs
repz
jmp
in
repz
testb
fistpll
jmp
pop
ret
std
ror
cmpsl
enter
jns
jno
xchg
xchg
cs
stc
or
insb
cmp
sbb
mov
lock
and
pop
mov
fisubrl
test
mov
gs
dec
sub
sbb
aad
les
notb
sub
xor
cmpsb
sub
insb
pop
adc
mov
lcall
fmul
shr
divb
jno
and
mov
sub
inc
jmp
mov
in
sar
push
roll
xchg
out
cltd
sub
bound
ret
xor
and
or
pusha
xor
test
cmp
cmc
sub
jo
ja
leave
and
aaa
pop
cmp
pop
lea
aaa
popf
dec
cmp
mov
inc
push
out
push
cli
pop
enter
ret
div
dec
je
dec
loopne
mov
mov
mov
or
in
fs
fstpl
divb
xchg
mov
ja
pop
jne
push
pop
decl
and
sbb
dec
test
xchg
sbb
mov
in
mov
xor
mov
or
rclb
or
dec
cs
arpl
and
jmp
pop
xchg
cwtl
mov
pop
mov
mov
out
mov
sarl
lods
shll
popa
cmp
notl
outsb
adc
xor
xchg
imul
icebp
xchg
or
or
dec
enter
mov
mov
sti
pop
cmp
push
lahf
les
dec
aad
inc
jo
leave
test
inc
push
loope
lahf
sar
sbb
cmp
jg
imul
dec
loop
add
inc
push
push
daa
sbb
incb
dec
js
aam
sub
stos
sti
mov
jmp
insb
outsb
xor
xor
mull
cmp
mov
and
inc
insb
into
cmp
lock
orb
loopne
mov
pop
lea
mov
xor
std
pop
xor
and
pavgb
cmp
dec
mov
and
repz
xor
or
xchg
outsb
movsb
in
jno
xor
and
xchg
cs
lds
dec
fldt
insb
sarl
jne
sbb
xorl
xor
mov
and
cwtl
cltd
out
inc
adc
out
push
idivb
and
lods
add
jge
mov
push
mov
jge
lahf
mov
mov
repz
mov
or
sar
sbb
dec
dec
pop
inc
sbb
or
jg
shl
jns
jnp
cmp
cmp
and
inc
mov
xchg
pop
inc
adc
adc
outsl
and
jle
push
push
pusha
divb
sub
cmp
loop
rol
daa
sbb
ja
pop
fsubrs
fsts
lods
dec
xor
clc
shl
ss
or
cmpb
decb
push
pop
inc
into
sub
add
jecxz
push
aaa
and
or
sbb
lret
int3
andb
mov
inc
push
aas
mov
fistpl
test
push
ret
dec
call
dec
push
call
mov
filds
movsb
pop
inc
imul
pop
pop
add
push
xor
push
sub
ljmp
nop
shl
ror
and
inc
out
add
mov
cld
dec
mov
ret
add
cmc
cmp
add
adc
fisttpl
mov
push
adc
daa
test
or
int
mov
inc
je
out
mov
lock
imul
out
sarl
fcmovne
in
pop
adcb
loopne
xchg
adc
and
mov
xorl
xchg
stos
dec
das
adc
fistpl
fs
in
mov
jns
cmp
icebp
stos
pop
mov
sbb
cltd
sub
iret
mov
inc
aad
sub
jnp
cs
out
sbb
int
imul
aas
adc
hlt
iret
aam
mov
aam
dec
pop
or
lret
jnp
cld
add
addr16
xor
push
daa
add
cmp
arpl
addb
push
in
sbb
shlb
dec
in
es
stc
xchg
insb
incb
ficomps
sbb
arpl
dec
xchg
es
inc
addl
jne
inc
mov
mov
js
push
out
sub
lret
scas
xchg
stc
and
push
lcall
fidivs
xchg
outsb
lret
lret
ds
sbb
cwtl
jae
sbb
popf
mov
xor
push
fnstsw
inc
loopne
aaa
gs
je
inc
xor
ret
std
adc
adc
call
lcall
cmp
xor
or
ret
repz
mov
jno
jmp
into
lret
add
leave
jp
xchg
cltd
daa
sbb
fwait
ficomps
addr16
std
dec
jmp
jecxz
push
add
mov
or
jae
or
pop
test
dec
xor
insl
ja
pop
push
test
aaa
inc
sub
add
sub
cmc
sub
cmp
daa
mul
pop
mov
cmp
mov
fwait
lds
mov
mov
enter
lds
mov
inc
cmp
push
dec
push
out
adc
cld
ja
and
je
adc
orl
add
iret
and
inc
xor
loop
imul
push
inc
or
inc
repnz
adc
adc
aas
leave
inc
movsl
push
test
outsb
jb
push
fldcw
sbb
ja
cmp
xchg
fldt
mov
addl
xor
mov
aad
pop
lods
mov
cwtl
add
push
data16
imulb
shrb
xchg
inc
stc
outsb
outsl
xchg
and
outsb
or
addr16
mov
enter
mov
repnz
jg
ret
push
pushf
gs
and
and
cmp
loopne
lds
xchg
push
or
mov
fwait
movhps
and
mov
aad
mov
fldl
fnstcw
into
neg
inc
sub
sub
call
jle
sub
jg
leave
cmp
mov
push
push
mov
inc
pop
mov
push
pop
outsl
outsl
out
cmp
xchg
sbb
sub
call
sub
pop
adc
std
sub
fwait
aaa
xor
fisubrs
lods
xor
js
punpckhbw
add
inc
sbb
out
ret
ss
inc
cmc
xchg
orl
mov
bound
gs
pop
sbbl
ds
jb
int3
std
clc
sbb
js
lret
shrl
xchg
mov
mov
pminsw
or
cmp
adc
addr16
mov
add
mov
test
inc
lea
lods
dec
xorb
and
dec
enter
add
movsl
adc
mov
add
arpl
add
dec
insb
xchg
push
push
dec
notb
not
sub
pusha
leave
pop
aaa
sub
fs
iret
lods
in
dec
insb
aas
dec
adc
mov
xor
movsl
xor
push
dec
ss
test
addr16
test
xchg
inc
stos
jl
nop
xchg
in
fcompl
insl
jge
mov
mov
lcall
pop
jae
sub
dec
rcl
add
sbb
lea
out
pop
mov
mov
popa
inc
push
mov
ret
insb
fwait
xor
pop
ret
mov
mov
fidivl
in
pusha
loop
call
int3
jbe
pusha
adc
or
inc
lods
roll
sbb
xor
sub
or
dec
lcall
dec
std
xor
mov
mov
das
push
in
fsubrs
pop
jne
ss
movsl
push
xor
fmul
imul
xchg
sub
and
out
in
sarl
mov
lea
adc
push
mov
cmc
loopne
jb
mov
pop
adc
sbb
jnp
in
xor
cmp
xor
pop
test
add
jae
fcmovbe
dec
sbb
fildl
xor
inc
idivb
mov
xchg
xchg
xchg
or
loop
xor
push
cmp
pop
sbb
mov
xlat
push
les
fwait
mov
decb
push
jl
xchg
scas
ljmp
mov
xchg
xlat
outsb
xor
pop
aas
jmp
pusha
ljmp
jno
inc
jecxz
lods
imull
adc
shl
filds
xor
mov
loopne
pop
repz
dec
push
repz
ljmp
insb
sahf
cs
insl
xchg
sub
shl
adc
or
inc
inc
and
add
shl
shrb
cmp
cli
and
jo
jp
push
sub
lods
int
push
mov
dec
xchg
fsub
stos
pusha
aaa
subl
mov
aaa
pusha
addr16
or
divl
push
repnz
bnd
mov
je
mov
sbb
dec
jg
addb
pop
pop
rolb
ljmp
and
popa
lret
rclb
lcall
or
in
push
lods
scas
inc
arpl
or
push
ljmp
xchg
cltd
jbe
pop
mov
pop
push
xchg
mov
divb
lea
adc
mov
jl
mov
push
dec
sub
mov
fwait
insl
test
pop
sbb
cmp
fcomp
sub
sub
xor
mov
scas
jecxz
adc
push
jne
cltd
xchg
sub
mov
jl
out
out
cli
xor
cs
pop
iret
dec
xlat
xchg
cmpsb
xchg
xor
mov
sbb
jmp
mov
push
insb
or
cli
lret
jmp
or
out
inc
cmpsb
xlat
pop
bound
cmp
push
cmp
popa
dec
dec
mov
xor
insl
mov
cmp
mov
movsl
mov
add
scas
adc
inc
pushf
out
lahf
push
xchg
popl
mov
out
sarb
int
mov
ret
in
popa
enter
xchg
add
push
inc
aaa
in
nop
xor
mov
or
movsb
xor
jge
neg
inc
lret
dec
cmp
call
out
pop
lahf
pusha
insl
fidivrl
clc
xor
enter
lcall
cmpsl
dec
mov
aad
adc
fistl
mov
fstps
pop
mov
xor
ja
icebp
mov
pop
jl
daa
cltd
and
and
dec
test
push
jge
fmull
insl
and
dec
flds
lods
or
push
mov
test
and
ffreep
jae
lahf
arpl
sbb
lcall
mov
pusha
pop
shrb
and
loop
sbb
jle
sbb
jo
pop
jl
in
in
add
dec
aad
stos
stos
xchg
lea
stc
out
push
or
jae
out
sub
dec
sub
bound
adc
jne
push
jb
rcrl
push
or
dec
jmp
shr
cld
lcall
inc
stos
jmp
cld
jg
icebp
sti
aam
dec
sti
sbb
mov
ds
jno
mov
mov
out
xor
addr16
cmpsl
movsb
dec
lods
mov
push
decl
cltd
dec
jae
cmp
mov
dec
xchg
loop
fnstcw
insl
mov
and
movsb
fnstcw
jge
repnz
xor
rcr
pop
in
inc
pop
mov
scas
or
fidivrs
push
loopne
or
pushf
fs
and
and
mov
add
es
cs
mov
loop
mov
mov
sbb
ds
cmp
das
push
enter
movsb
cwtl
jecxz
inc
hlt
ror
mov
addb
fsubl
scas
das
adc
in
in
xor
aas
gs
adc
aas
sbb
push
icebp
inc
sub
add
add
adc
mov
sub
adc
out
or
jmp
not
fidivrl
dec
sti
push
sub
xor
ljmp
push
mov
cmc
movsl
inc
pop
mov
pop
mov
jne
sti
int
cmc
aam
lock
push
mov
hlt
int3
aad
and
cltd
or
pcmpgtw
stos
fisubl
sbb
or
outsl
cli
fwait
dec
imul
fisttpll
leave
jbe
dec
xor
lret
scas
lret
std
pop
loopne
xchg
and
xchg
adc
nop
pushf
and
mov
push
rorl
idivb
cmp
out
and
pop
repnz
daa
push
fstl
fsubl
xchg
into
mov
jbe
es
in
pop
push
jnp
xor
push
pusha
sub
jg
in
lods
out
pop
mov
add
xchg
inc
mov
hlt
dec
jge
dec
mov
adc
loopne
jo
or
movsb
hlt
push
int
and
insb
and
mov
add
mov
adc
adc
push
push
or
push
xchg
sbb
push
stc
and
mov
clc
in
or
aad
jo
or
out
ljmp
test
cmp
pop
push
lods
push
cmc
leave
test
fisubs
push
adc
pop
dec
pop
idivb
xor
ds
jbe
adc
mov
iret
push
and
cltd
cltd
cli
dec
pop
repnz
adc
cli
enter
imul
mul
fadd
jbe
and
dec
popa
pushf
add
sbbb
lcall
dec
pop
xchg
mov
mov
fldt
nop
mov
iret
iret
pop
mov
hlt
add
negb
bound
mov
pop
push
fdivr
cmpsl
or
jae
mov
xchg
push
jnp
or
push
and
jmp
jb
or
mov
mov
faddp
mov
mov
xor
sti
xchg
and
cmp
pop
jg
jl
pop
mov
dec
cli
rolb
mov
popf
mov
adc
mov
or
mov
aam
lock
jmp
push
sbb
movl
fdivs
int
test
mov
nop
enter
or
fwait
mov
adc
lahf
loop
or
mov
jb
loope
sub
sub
cmp
aaa
add
cs
imul
push
data16
lret
fs
stos
push
mov
lahf
mov
call
inc
jle
cmp
imul
cmp
mov
icebp
inc
in
ficomps
and
imul
adc
and
ret
or
mov
sbb
sbb
xchg
xor
cmc
lcall
mov
repnz
test
cs
jns
and
mov
sbb
lods
stos
sub
divb
shr
or
xchg
fdivr
mov
sbb
xchg
cltd
jno
mov
jbe
insl
lock
inc
icebp
dec
aam
pop
popa
pop
aam
mov
out
dec
ret
inc
add
in
stos
xchg
xchg
sbb
mov
pushf
jnp
mov
lcall
add
bound
les
enter
cmp
jge
in
sub
mov
loop
out
xchg
scas
add
pop
push
in
out
xchg
sub
jae
or
push
xor
cmc
mov
mov
dec
inc
pop
fisubrl
pop
push
jnp
dec
adc
cmp
test
mov
daa
or
dec
push
lahf
sub
or
cmp
je
sub
dec
jmp
jl
jle
add
shrl
pop
test
into
cmp
xor
jp
ret
pushf
std
mov
pushf
inc
out
jae
insl
inc
clc
dec
lds
cwtl
mov
jmp
jle,pn
jne
jge
lret
popa
imul
sahf
int3
sub
daa
xchg
popf
cltd
andb
sti
push
mov
mov
in
enter
cmpl
insl
add
lret
stos
jbe
adc
stos
test
fdivs
cmp
add
repnz
jecxz
adc
jnp
and
nop
sbb
xchg
lods
outsl
rorl
or
dec
inc
les
xchg
sub
xchg
xor
mov
add
add
sbb
lcall
sbbl
out
lock
aam
mov
cld
inc
cmp
adc
cld
jmp
es
and
jb
in
ds
adc
test
sbb
push
or
mov
lods
mov
sub
movsb
push
sbbl
mov
lods
sarl
adc
pop
inc
movl
or
jno
aas
sub
push
cmp
rcll
loop
stos
data16
and
sub
push
mov
sub
jnp
popf
jle
mov
mov
push
sbb
xor
test
fwait
and
dec
ret
fcmove
mov
mov
sbb
and
xor
stos
jge
int
lret
aaa
xor
in
inc
out
lcall
in
fs
iret
enter
cmc
aas
push
xlat
push
xchg
test
inc
xor
and
rcrb
popa
mov
ss
ds
mov
adc
mov
inc
cld
jg
inc
repnz
in
pop
aam
jl
xchg
in
ja
lret
in
mov
lcall
in
pop
int3
call
int
outsl
repz
and
sub
cld
adc
lret
push
fistpl
int3
arpl
inc
es
das
ds
inc
sub
add
dec
pop
aad
push
add
add
popf
enter
mov
dec
jl
fcomps
shlb
mov
adc
mov
out
movsb
int
popa
sbb
inc
fsubs
cmp
popa
orl
add
jle
cli
outsb
xchg
ja
xor
into
xchg
pop
add
jecxz
out
mov
repz
in
dec
or
xchg
sbb
dec
mov
xor
movb
sarb
jg
icebp
push
daa
fiaddl
or
and
icebp
fadds
repz
test
add
insb
mov
dec
daa
pop
add
pusha
cmpsb
pop
stc
std
xor
cmp
push
mov
inc
lea
int
roll
push
lods
sbb
in
pusha
dec
mov
jbe
stos
fistl
aaa
xchg
fisttps
out
jnp
mov
xlat
add
mov
daa
cwtl
loopne
inc
dec
mov
xor
sbb
loopne
fwait
cmp
addr16
pop
mov
pop
cmp
insb
dec
iret
inc
xlat
adc
clc
xchg
insl
cmp
jb
pop
test
test
sarb
xchg
shll
popf
dec
es
push
sbb
xchg
iret
adc
add
xor
push
test
cs
js
in
adc
lahf
filds
into
and
push
repz
fstpl
out
outsb
and
inc
push
subb
ret
sub
outsl
xchg
mov
adc
jmp
loope
add
mov
out
add
adc
mov
cmpsl
sub
into
lahf
dec
pop
stc
push
mov
add
ss
jnp
lds
add
icebp
pop
shl
adc
fdivrp
fsub
jl
in
int3
cmp
outsl
jp
pop
nop
dec
sbb
dec
je
inc
enter
lret
add
add
push
fs
sbb
cmc
dec
fists
daa
inc
fwait
or
adc
or
push
std
or
xor
dec
outsl
mov
mov
jne
and
mov
mov
pop
xchg
out
and
mov
jecxz
int3
mov
lret
push
mov
cs
and
add
fldl
jl
lret
mov
jg
je
test
test
xor
test
daa
fdivrl
pop
push
movsb
lods
adc
xchg
loop
jle
pop
xchg
xchg
imul
push
xor
fsts
shl
cmp
adc
cwtl
xor
mov
shll
mov
lea
addr16
sub
inc
std
popa
daa
js,pt
bound
or
dec
cmp
lods
lcall
or
jbe
movsl
xchg
dec
or
ficompl
test
and
cmp
jns
sbb
jl
fwait
ja
shrb
in
mov
cmp
inc
push
stos
jge
jae
mov
mov
inc
add
cmp
int3
pop
in
scas
enter
mov
and
push
cmp
mov
enter
inc
xchg
jg
and
in
and
iret
divl
inc
dec
mov
insl
pop
cs
sbb
sub
or
fidivl
cmovbe
and
div
and
adc
call
sub
addr16
pop
adc
lock
and
mov
cmp
xchg
test
out
cld
hlt
ja
xor
xchg
dec
jo
lea
addr16
push
xor
adc
sub
mov
mov
adc
out
jb
adcl
pop
push
into
icebp
call
dec
es
lret
pop
push
lcall
adc
or
cmp
adc
shlb
xor
mov
jb
jmp
ret
aas
xor
cmp
cmp
stos
pusha
dec
xor
sar
adc
mov
jmp
pop
mov
imul
mov
out
loopne
or
cld
cmp
fxam
loope
imul
cwtl
andb
mov
insb
repz
cwtl
dec
int3
mov
lcall
pop
movsl
jb
hlt
add
jmp
outsb
daa
popa
lahf
push
jnp
or
mov
cmpsl
pop
fistpl
dec
data16
xor
dec
add
inc
movsl
rcl
mov
loopne
pushf
out
inc
or
hlt
push
pusha
push
je
aam
jecxz
movsb
xchg
xchg
out
ret
insl
insl
or
stc
dec
test
cltd
pop
je
sbb
jl
mov
repz
unpckhps
repnz
or
sbb
cmpsl
out
icebp
cmp
pop
ret
xchg
mov
lds
or
mov
sub
adc
or
mov
add
cli
sbb
movsl
es
mov
sahf
jne
sub
popf
cmp
das
fsubrs
ret
sbb
in
sbb
bound
xchg
test
lea
push
inc
add
scas
mov
pop
notb
pop
dec
dec
jo
ja
inc
or
pop
insb
lcall
inc
call
and
mov
aaa
fists
add
lea
push
cvttps2pi
inc
lods
lret
in
jns
cmpsb
push
shll
mov
outsb
xchg
dec
cmp
sar
pop
aad
sti
mov
movsl
mov
jo
lods
pop
int3
or
and
lods
push
icebp
movl
sub
scas
aaa
pop
sarb
sbb
mov
and
rcl
jge
jp
push
mov
mov
loope
repz
adc
fwait
push
jg
mov
lock
hlt
cltd
jb
mov
clc
push
adc
fstl
pop
and
mov
cmp
push
lcall
popf
add
add
cmpl
dec
into
mov
jo
aad
mov
mov
outsb
loopne
adc
lcall
test
cmp
ret
jp
or
sub
push
aas
loopne
mov
jecxz
sbb
andl
dec
push
lcall
dec
idiv
sbb
rorb
xchg
jge
std
push
movsl
sti
cltd
out
dec
sub
lret
dec
outsb
xchg
sbb
test
xchg
and
hlt
popa
adc
insb
into
repz
les
inc
xchg
shlb
inc
outsl
xor
xchg
jo
cmp
iret
arpl
inc
mov
sub
push
cli
arpl
dec
cld
outsb
cs
lock
adc
cld
gs
enter
ja
test
ds
add
cltd
mov
shrb
sbb
orb
sub
aas
pop
pop
adc
adc
mov
lods
inc
or
movsl
cmpsl
les
lea
je
and
push
jb
out
subb
shll
xlat
jl
leave
loope
add
push
dec
scas
stos
movsl
or
mov
mov
pop
xchg
xor
mov
icebp
pop
dec
push
std
dec
inc
mov
sbb
xchg
dec
pop
sti
rorl
xor
jns
xchg
ficomps
adc
imul
mov
aad
sti
push
inc
xor
pop
jae
in
add
gs
and
jns
mov
jne
cmp
loop
sub
and
cld
shl
dec
test
xchg
imul
xchg
mov
cld
movsb
lock
shll
xor
sbb
sbb
pop
cmp
add
out
popf
sub
outsl
lret
test
dec
movsb
rol
pop
fcoml
pop
lods
and
sete
flds
fstps
jecxz
sbb
insb
shll
dec
push
dec
lret
iret
add
add
xor
mov
xlat
std
jg
divl
mov
pop
xlat
sub
adc
inc
in
adc
inc
cmp
xchg
rcrb
xchg
es
dec
xchg
or
jge
int3
mov
dec
clc
repz
add
insl
pop
or
test
in
pop
gs
xor
js
js
mov
cmp
mov
inc
aam
cli
jb
add
loope
addr16
adc
outsl
sub
fisubs
xchg
lds
dec
stc
xor
mov
clc
and
pop
lods
cmpsb
pop
cmc
hlt
mov
push
cmp
pop
push
addb
loop
xchg
cmpsb
leave
enter
xchg
pop
stos
lcall
add
stc
fiadds
cmp
movsb
add
fstpt
js
rclb
int3
fsubrl
ds
sub
mov
js
mov
lea
lods
cmc
enter
inc
xor
hlt
xorl
movsb
jns
ds
loope
mov
cmp
ret
inc
mov
mov
or
cmp
sub
xchg
in
mov
jmp
fnstenv
sbb
iret
test
sub
adc
ja
xor
sbb
ret
cli
jge
pop
jns
addr16
cltd
aas
push
push
push
int3
add
std
dec
push
xor
shll
pop
and
adc
test
and
mov
push
mov
loopne
int3
adc
inc
stos
dec
out
pop
inc
and
loope
sahf
int
cmpsl
fwait
push
out
mov
fbld
aam
mov
sti
clc
push
out
repz
pop
inc
aad
dec
orb
or
movsb
mov
sub
sbb
sbb
mov
sbb
mov
das
fwait
int
cmp
and
inc
xor
fcompl
pop
sbb
idivb
aam
in
sub
pop
inc
subb
pushf
mov
cs
adc
and
lahf
daa
js
mov
add
int
lea
push
mov
das
lcall
pushw
mov
fidivs
movsb
mov
rcll
outsb
cld
fucomp
cmpsb
test
or
or
rcr
cmpl
inc
int
and
xlat
repz
lock
in
inc
ja
sbb
mov
jge
std
dec
js
ds
inc
inc
aad
pop
sarl
xor
loope
add
std
clc
mov
dec
sbb
f2xm1
mov
cmpl
hlt
jo
pushf
into
push
out
pop
hlt
jae
mov
out
lods
add
mov
ret
and
out
subb
cmp
in
outsb
mov
stos
cmp
pop
stc
and
pop
xor
mov
insb
insb
mov
cli
inc
jbe
add
mov
push
push
imul
daa
pop
pop
mov
dec
mov
xchg
xchg
hlt
cmc
adc
vmread
ljmp
add
imul
push
repnz
push
std
jmp
je
mov
mov
push
sbb
xor
dec
fldl
push
or
push
xrelease
pop
movsl
sub
jl
std
push
xor
mov
jo
cmpsl
dec
or
add
pop
or
fdivl
test
inc
jae
pusha
push
add
lock
xor
sbb
je
adc
int
es
inc
loopne
test
test
scas
mov
mov
lret
dec
scas
outsb
mov
pop
lahf
in
dec
movsl
nop
dec
push
dec
in
xchg
pop
aad
fwait
xchg
insb
in
shl
lods
cs
int
test
dec
mov
sub
xchg
sahf
in
and
mov
mov
mov
outsb
test
dec
aaa
or
xchg
and
or
inc
inc
mov
jbe
push
ja
aam
mov
lock
xchg
inc
fstpt
jae
pop
or
inc
xor
out
cmp
mov
xchg
jle
jmp
arpl
sub
pop
xchg
jmp
fsin
sub
adc
adc
scas
sbb
cld
push
test
js
and
pop
jb
xchg
and
lea
dec
push
jmp
or
insb
push
sub
xchg
mov
and
pusha
push
lods
dec
and
cmp
lcall
xchg
popa
push
icebp
cli
fmull
ret
push
mov
xchg
xchg
mov
fiadds
pusha
mov
sahf
push
mov
jae
add
mov
sub
xor
pusha
arpl
out
mov
lea
cs
test
inc
sti
pop
sub
sub
pop
sbb
out
jmp
add
sbb
push
dec
repnz
pop
mov
je
aas
into
xchg
fs
ret
cmp
push
mov
in
nop
call
sub
call
and
adc
mov
mov
cs
dec
cmpsl
fwait
mov
outsb
dec
ficomps
push
mov
pop
cmp
xchg
fucomp
popa
xorb
jo
lcall
xchg
sbb
je
sbb
dec
and
dec
outsl
jne
push
rorb
ret
enter
stos
hlt
add
fdivrl
xchg
pop
int3
test
imul
dec
push
pop
test
jl
fsubs
jo
test
adc
sbb
mov
adc
imul
or
jnp
adc
pop
roll
hlt
outsb
sti
adcb
cld
push
call
xchg
test
add
fbstp
jp
mov
push
shlb
mov
aas
out
or
inc
mov
insl
stc
adc
hlt
jl
fwait
dec
popa
mov
cmpsb
push
roll
aaa
stc
pop
arpl
in
mov
int3
pop
jb
and
out
loope
iret
sub
int
and
out
mov
movsl
fldl
dec
ret
data16
xor
es
imul
mov
out
or
push
pop
repz
xor
jmp
xchg
sub
sub
pop
cmp
arpl
push
popf
and
push
cmp
call
or
mov
stc
stos
outsl
dec
mov
and
push
test
sbb
mov
jge
cmp
jb
fnstenv
push
out
outsb
outsl
adc
cld
mov
jns
ret
repnz
and
inc
addr16
jp
daa
mov
aad
repz
subl
xor
add
sub
mov
test
incb
or
or
cmp
and
mov
xchg
arpl
cld
into
add
fistpll
shlb
mov
insl
rorl
pop
cs
aas
xor
imul
std
popf
adc
sub
test
pop
jns
hlt
adc
mov
lret
jb
cmpsb
out
sub
jmp
push
pop
jp
stos
mov
cmp
imul
inc
mov
outsl
jo
add
jbe
ja
fisubl
pop
dec
xor
mov
call
mov
adc
je
or
mov
mov
jl
lods
add
fistpll
pand
out
jbe
aad
ja
xchg
cmpsb
xchg
jnp
sbb
cmp
es
lret
inc
or
loopne
cmp
loope
sahf
sbb
in
mov
mov
sahf
add
outsl
int3
xlat
out
das
orb
dec
mov
mov
pop
add
mov
lret
mov
jae
insl
popf
lcall
adc
mov
mov
stos
mov
push
inc
push
test
icebp
orb
out
in
jmp
mov
std
aam
out
dec
ja
add
add
mov
daa
testl
stos
mov
push
dec
sub
xor
inc
pusha
push
stos
iret
jecxz
push
in
cwtl
mov
push
push
xchg
call
lahf
popf
lds
pop
pop
gs
out
jns
xor
and
outsb
lods
cmp
jmp
fstpl
xchg
dec
adc
daa
outsb
lret
inc
dec
movsb
shll
fsubrs
shlb
sbb
sti
inc
mov
dec
mov
cltd
subl
loop
sarb
inc
adc
sbb
mov
fimuls
rolb
inc
dec
mov
cmp
lcall
std
mov
stc
outsb
fidivs
inc
cmp
jle
lahf
xchg
nop
cmpsl
sbb
gs
sbb
cmpl
xor
mov
cmp
adc
ficompl
push
or
cld
and
pop
dec
sbb
inc
lea
dec
jnp
popf
mov
cmp
stos
iret
sbb
add
pushf
movsl
pop
push
lds
cwtl
push
fldcw
arpl
mov
mov
add
movsl
dec
adc
mov
test
sbb
pop
pop
jmp
mov
sub
dec
inc
xchg
sar
mov
mov
cmpsl
mov
cltd
jmp
adc
sub
or
aas
add
orl
dec
sahf
lcallw
mov
sub
xor
or
ss
fdivs
push
scas
inc
popf
pusha
in
add
cld
mov
andl
mov
fwait
and
lahf
lret
cmp
mov
loope
add
repz
pop
inc
mov
inc
sti
lret
lret
pop
sub
jle
xor
adc
cmp
or
jmp
jae
sub
sub
xor
push
pop
mov
xor
cltd
jo
or
jg
inc
jnp
xchg
scas
mov
sub
stc
push
jmp
fsubl
cmpl
jb
mull
lock
inc
in
adc
pop
loope
cmp
mov
fadd
ljmp
mulb
push
in
jne
cmp
xchg
lods
inc
sti
shrl
ja
sub
cwtl
and
inc
dec
popa
rclb
sbb
pop
aad
mov
jno
mov
insb
je
push
fadd
add
out
out
test
dec
pop
and
xchg
sub
rorl
pop
add
pushf
mov
nop
pop
in
repz
mov
jbe
leave
pop
ljmp
mov
xchg
jg
ficomps
push
adcl
jb
das
cmpsl
xchg
imul
sti
xor
clc
outsb
pop
popa
das
cmp
loope
nop
sar
mov
hlt
in
filds
outsl
in
addr16
xorl
out
and
fstl
roll
in
cmpsl
xchg
xor
stos
or
sub
nopl
cld
mov
fistpl
mov
mov
mov
mov
enter
dec
stc
inc
out
lret
inc
cli
xchg
dec
mov
punpckhwd
and
xchg
idivb
int
leave
mov
mov
push
sahf
xchg
loop
ret
fimull
lret
fldenv
mov
subb
out
scas
or
xchg
xor
add
inc
mov
cwtl
pop
in
daa
mov
paddusb
push
ja
cltd
push
push
jnp
dec
rol
daa
cld
stos
lret
nop
mov
push
fsts
add
jbe
in
shrl
mov
outsb
int
in
gs
repz
pop
test
fs
push
xor
les
or
mov
outsb
fstl
and
jp
add
test
push
push
jg
mov
adc
mov
pop
sub
sbb
sub
jg
adc
sahf
xchg
mov
je
lock
jbe
jle
push
push
adc
jle
fdivrl
hlt
call
nop
mov
out
xor
cmp
das
jnp
mov
xchg
inc
pop
in
hlt
mov
cltd
iret
bound
jle
out
inc
stc
mov
test
push
or
std
mov
in
ret
pop
nop
sti
cwtl
cmp
fisttpl
repz
xchg
xchg
data16
mov
mov
icebp
xchg
ret
movups
lock
sahf
push
and
push
in
sub
dec
sti
insl
push
push
cld
cmp
pop
scas
popa
add
add
inc
aad
jl
loopne
mov
imul
push
std
addl
sarl
pop
out
idiv
mov
add
dec
cmp
or
daa
pop
test
dec
aas
aam
mov
sbb
adc
mov
adc
aam
push
pop
mov
or
xchg
mov
mov
fmull
aaa
mov
cmpsl
test
push
fstpt
loope
inc
dec
push
or
stos
mov
xchg
sbb
or
cmp
hlt
stos
mov
adc
pushf
repnz
jno
test
cmp
call
subb
mov
or
jmp
iret
push
or
ss
push
outsl
fwait
push
push
rclb
loopne
in
inc
testl
mov
mov
dec
fisttps
pop
add
test
dec
sub
addr16
jns
jg
mov
orb
push
leave
mov
jb
outsl
pop
sub
ret
xor
sbb
mov
mov
mov
fstpt
and
sahf
jae
push
mov
sahf
xchg
lea
xchg
push
shl
dec
sub
push
xchg
sbb
ljmp
repz
jl
addr16
jmp
jno
add
data16
jno
inc
and
test
jne
in
insl
mov
sub
adcb
mov
fistl
out
jp
pop
push
fisubl
cmc
pop
push
ja
push
daa
sti
aad
popf
lock
push
sti
in
jg
push
aas
rcrb
add
pop
in
xor
xlat
sub
xchg
lock
movsb
pop
cmp
movsb
cmpsl
je
mov
xor
sub
dec
fbld
lods
push
or
jno
push
pusha
mov
out
sti
inc
dec
pop
jge
movsl
daa
lea
mov
out
cmp
xlat
es
cmp
test
adc
push
mov
outsl
adc
or
mov
lret
iret
mov
scas
lods
add
dec
fldl
add
push
bswap
idivb
sub
jb
test
mov
dec
out
outsb
cmpsb
rcrl
dec
cmp
jbe
push
jecxz
push
js
add
xchg
and
incl
sub
test
or
aam
and
je
in
sub
cmpsb
in
js
insb
scas
jb
lods
mov
mov
xlat
cmp
xchg
xchg
mov
push
mov
std
pop
push
pop
sahf
into
push
sbb
adc
inc
enter
out
xor
or
movsl
and
cwtl
mov
xor
cmp
jl
fisubl
cmp
xchg
aaa
insb
xlat
xchg
mov
xor
and
ljmp
cmp
sbb
push
dec
in
in
subl
mov
jg
sub
mov
orl
pop
mov
sbbl
or
mov
rcll
in
sub
and
sbb
pusha
sbb
jle
jle
dec
mov
pusha
xor
int3
hlt
cmp
sbb
pop
test
das
shlb
fisubl
sbb
in
lret
add
sub
push
adc
shrb
loop
adc
dec
push
loop
pop
push
mov
pop
adc
jecxz
mov
fwait
cltd
and
imul
jge
push
sub
push
inc
adc
jo
mov
jb
lret
and
dec
fildl
mov
sbb
and
stc
sub
or
jae
cs
insb
and
stos
cmp
cmp
mov
lea
jmp
ds
xorl
cmp
xchg
jg
add
or
pop
es
xchg
adc
daa
push
mov
pop
dec
jp
mov
gs
mov
faddl
xor
imull
jb
dec
dec
inc
cmp
mov
sbb
push
pusha
cmp
mov
push
xchg
and
loopne
fdivrs
inc
dec
mov
imul
mov
ja
cmc
cwtl
push
pop
je
mov
std
fdivs
mov
cmp
pop
xor
or
mov
cmp
xchg
hlt
xlat
fiadds
mov
in
inc
test
into
arpl
jnp
mov
adc
and
daa
pop
in
lret
mov
jl
mov
lahf
cld
repnz
pop
daa
push
cmpsl
gs
push
inc
aam
movsl
push
gs
pop
stos
outsb
aad
ret
mov
popf
push
inc
mov
sbb
sbb
jb
popf
sub
jne
iret
gs
aaa
cmc
arpl
mov
jbe
mov
push
lods
and
pushf
xor
xchg
rcr
notl
cmp
outsl
xchg
fldl
xchg
scas
outsb
or
out
std
lock
testl
fwait
orl
in
add
outsb
mov
lahf
in
mov
add
inc
imul
ret
arpl
pop
xchg
call
ljmp
fcoml
add
dec
mov
cmpsl
insb
mov
mov
adc
aam
cli
lahf
xchg
andb
sbb
pop
xchg
mov
pop
push
rcrb
ret
cmpsb
leave
xor
fsubrs
out
iret
test
lods
pop
xchg
pop
cltd
adc
cmp
cltd
shll
mov
dec
xchg
sbb
imul
mov
pop
jl
inc
sbb
xchg
aam
pop
je
cmpsl
mov
mov
lods
mov
out
dec
sub
nop
sbb
repz
fwait
inc
xchg
pushf
mov
out
cmpsl
xlat
jae
sub
xchg
push
negl
in
outsb
sub
dec
cmp
pop
icebp
or
cld
xchg
movntq
ja
cld
enter
mov
xchg
inc
or
jae
mov
stc
imull
ss
mov
push
pop
movsb
xchg
dec
lcall
push
jge
jnp
push
cltd
sub
in
dec
xor
ds
xlat
and
clc
pop
lcall
sub
add
mov
inc
stos
hlt
lea
xor
shrb
xor
int
pop
add
test
test
xor
test
test
lea
icebp
pop
lock
mov
movsb
loop
and
jns
mov
sub
adc
cmp
sub
add
mov
stos
test
cmp
orb
inc
push
jg
pop
cmp
test
gs
outsb
mov
arpl
push
fldenv
sarl
sbb
cmp
inc
jl
mov
jge
rcrb
pop
inc
lret
push
je
shll
and
mov
repnz
mov
jp
cltd
xchg
data16
jnp
lahf
aam
add
or
das
mov
jge
shrl
mov
pusha
push
push
and
int
sub
gs
mov
out
adc
lods
ret
fldcw
clc
leave
mov
and
pop
lret
mov
out
mov
xor
lods
inc
cmpl
mov
mov
cli
cmp
mov
mov
fists
inc
in
mov
lahf
pusha
popf
vmwrite
dec
and
in
divb
enter
ds
gs
lds
test
shlb
jp
loopne
pop
mov
cltd
push
sub
sub
lock
nop
test
dec
adc
out
push
push
push
mov
jo
into
lcall
adc
push
xchg
mov
adc
lds
pop
dec
les
jb
mov
loop
inc
inc
jg
aaa
xchg
imul
cmp
lcall
push
and
cli
ss
push
mov
sub
dec
ja
mov
paddb
mov
loopne
out
xchg
pushf
xchg
push
sub
mov
stos
mov
pop
push
xchg
sub
push
shll
push
aas
adc
fisubrl
push
mov
aam
shrl
lods
adc
push
fsubl
es
or
stos
subb
lret
cmpsb
les
xor
ds
push
inc
loope
mov
lahf
pop
jns
popf
mov
imul
out
mov
mov
jecxz
push
in
dec
xchg
lahf
xchg
test
mov
call
out
je
adc
loop
inc
mov
aaa
mov
jmp
adc
mov
imul
jae
push
sbb
hlt
xchg
cld
in
out
or
pop
push
adc
sub
out
inc
test
xchg
cmpb
mov
enter
xchg
enter
push
sub
mov
mov
mov
dec
aas
add
xlat
ss
out
mov
testb
iret
jmp
cmpsb
stc
dec
or
stc
or
orl
lret
sub
sbb
xchg
out
inc
ret
sub
dec
cli
push
daa
inc
stc
inc
lods
inc
jb
fcmovb
pop
aam
fldenv
push
jmp
xchg
lret
push
or
xchg
cmp
fsub
imul
js
sti
bound
adc
ss
imul
icebp
pop
sbb
dec
jo
ret
in
jp
out
push
and
gs
xor
dec
fwait
mov
sbb
int3
pop
inc
cli
fwait
add
cmp
in
mov
out
mov
xor
scas
mov
sub
mov
mov
cltd
mov
or
or
repnz
popa
cmp
ret
rorl
stc
inc
js
push
idivb
vpmacswd
loope
push
cmp
add
add
jmp
bound
jg
cmpsl
inc
cmpw
scas
jne
int
hlt
jnp
adc
or
mov
ljmp
andl
sbb
sbb
shrl
dec
sti
std
pop
and
rcrl
cmpsb
or
push
mov
jecxz
sbb
sbb
das
mov
mov
sarb
icebp
xor
xchg
dec
loope
jae
xchg
jb,pn
add
pop
and
insl
lock
mov
xor
fisubrl
push
daa
and
ret
dec
mov
push
xor
enter
loopne
sbb
pop
mov
cmp
inc
loopne
sub
fistps
cmc
loopne
sbb
pop
adc
push
add
jne
dec
mov
xor
out
movl
test
sub
inc
mov
xlat
xchg
or
mov
ss
ja
hlt
jle
je
inc
xchg
push
pop
inc
or
fdivrs
xlat
pop
pop
sbb
mov
in
jb
repnz
ljmp
mov
add
xchg
sti
popf
icebp
popl
dec
xor
mov
imul
ds
xchg
push
popa
xchg
mov
lds
jb
lcall
in
imul
dec
mov
sbb
or
nop
push
mov
xchg
adc
aas
cwtl
jmp
loope
inc
mov
fiadds
rcrb
mov
lock
and
in
out
je
cltd
pop
bound
pop
cwtl
jns
jecxz
aad
sub
das
mov
xchg
add
sbb
lahf
mov
push
mov
add
fst
shll
fsubr
sub
fwait
mov
pop
sbb
bound
aaa
dec
out
push
scas
test
in
fdivl
movsb
fidivrs
iret
cs
or
insl
popf
sub
ret
dec
repnz
cmpsl
xchg
jp
mov
adc
xchg
loop
test
adc
jge
imul
test
push
mov
in
ds
popf
pop
xlat
pop
mov
repnz
push
lock
jmp
les
lahf
push
inc
aaa
mov
cmc
icebp
mov
mov
div
pushf
test
jo
imul
orl
gs
ds
popa
jbe
dec
hlt
and
insl
in
jg
add
xor
aas
dec
pop
inc
loop
ss
popa
sti
nop
test
repnz
test
dec
incb
test
test
push
mov
sbb
xchg
inc
fildl
aaa
imul
jae
xorb
cmp
adc
jne
fxch
push
xor
in
sahf
loop
inc
pop
add
inc
inc
ret
push
shl
pop
scas
jae
push
fwait
jne
in
add
inc
dec
jmp
and
lea
cltd
mov
mov
dec
lret
inc
ja
gs
ljmp
cmc
in
out
lds
lahf
das
pop
fimull
xchg
xor
xchg
scas
pop
dec
testl
popl
bound
fldenv
xchg
dec
adc
or
or
int
lea
roll
sbb
cltd
inc
je
daa
int
fdivl
pop
push
loope
or
addb
and
sub
cld
and
dec
jo
loopne
cld
sub
movsb
std
arpl
jge
mov
ror
sti
daa
cwtl
in
sbb
push
xor
mov
sarl
pop
push
xor
sub
xchg
sti
or
lods
inc
and
mov
adc
sbb
jmp
ljmp
xchg
sub
push
push
mov
adc
cmp
in
push
cwtl
int
add
fildll
fs
fwait
sbb
xor
pop
fistpl
dec
bound
inc
pop
cld
rcr
daa
decb
aam
lcall
mov
adc
pushf
imul
jmp
xor
mov
push
outsb
mov
inc
movsl
cmp
fwait
in
sbb
shll
cmc
jge
jge
insl
jg
xor
outsl
cmp
mov
cmp
or
movsl
in
or
sahf
dec
xor
push
mov
loope
leave
pop
add
aaa
in
cmp
sbb
outsl
fnstsw
jne
out
push
add
cmp
je
mov
push
push
mov
enter
stos
cwtl
dec
outsb
cmp
add
aaa
insl
mov
xchg
and
scas
cs
shl
push
mov
arpl
add
lea
pop
mov
aas
cmp
fsubrs
lea
mov
mov
popf
arpl
xor
mov
in
dec
cmp
lret
rcrl
adc
add
fidivrl
mov
pushf
dec
cltd
outsb
inc
test
xchg
cmp
movsl
add
inc
out
das
pop
sub
imull
push
xchg
mov
mov
ja
jb
shrl
mov
sbb
xor
movsb
push
jae
pushf
xor
sbb
sti
ss
mov
das
sbb
out
mov
aaa
jae
loope
push
lcall
outsl
xor
mov
and
jmp
and
cwtl
dec
cli
push
popf
add
addl
dec
cmp
push
mov
rcrl
cmpsl
loopne
add
lret
xor
add
xchg
dec
test
mov
push
loop
dec
push
cmp
outsl
loop
in
cmc
cmpsb
sub
out
outsb
pop
adc
inc
cmp
cwtl
push
xlat
mov
sub
sahf
lret
jb
outsl
insl
sub
xchg
hlt
fsubrl
lds
jae
add
or
imul
cltd
dec
inc
loope
mov
mov
mov
or
push
hlt
jl
mov
mov
fsts
push
adc
leave
pop
sti
sub
add
inc
lret
xor
loope
mov
fbld
add
dec
cmp
jp
data16
dec
mov
ja
lods
mov
call
call
mov
add
aas
js
jl
fs
mov
adc
sub
mov
fldt
pop
shll
xor
pop
inc
dec
insb
and
add
mov
jnp
adc
test
out
pop
loop
mov
outsb
pushf
pop
cmc
xchg
jg
inc
loope
xchg
rcl
or
push
ds
dec
inc
flds
push
xchg
mov
pop
xchg
mov
adc
arpl
les
jo
in
jns
stos
dec
popf
xorl
lcall
addl
fnstsw
int
mov
or
outsl
sub
aas
dec
sar
pop
daa
pop
jne
add
dec
or
icebp
das
pop
push
dec
and
mov
mov
sbb
cmc
ljmp
stos
and
cmp
aam
push
or
ret
call
lea
push
pop
in
push
sub
mov
in
int
pop
ss
pop
aam
test
iret
cmp
dec
ret
scas
xchg
cwtl
je
jl
aad
lock
hlt
ja
inc
mov
or
mov
xchg
jbe
jl
mov
scas
inc
mov
xchg
jne
mov
push
and
mov
out
imul
aas
pop
stos
ljmp
adc
push
xchg
into
sbb
add
daa
aaa
mov
or
mov
loope
mov
stc
pop
fdivp
popa
scas
mov
jecxz
add
std
dec
inc
lret
addr16
movsb
leave
mov
or
pop
icebp
adc
enter
push
xor
xchg
jg
mov
mov
push
nop
fmuls
notl
push
scas
sbb
xlat
fcmovnbe
and
leave
addr16
cmp
add
xchg
or
adc
insb
outsb
rorb
or
ss
fiadds
shrl
pop
test
lds
cwtl
fwait
popa
in
jecxz
xchg
dec
pop
arpl
ds
push
cmp
xor
into
mov
inc
movsl
and
jno
inc
add
call
leave
aad
mov
movsl
xchg
jp
dec
shl
mov
insl
dec
cld
ret
dec
ret
add
fmuls
adc
rcl
int3
in
pop
mov
scas
dec
subb
adc
clc
xor
pushf
xor
cmp
push
and
dec
xchg
mov
dec
mov
jg
jp
mov
test
daa
xchg
xor
lret
jbe
add
repz
test
mov
jmp
add
push
fsts
adc
and
jbe
or
add
shlb
fsts
mov
aaa
or
fwait
addl
cltd
pop
in
adc
adc
xchg
mov
lret
popf
inc
sahf
dec
mov
fwait
jge
cmc
push
subl
push
js
sub
scas
ja
mov
mov
roll
pop
cmp
xor
pop
xor
dec
pop
and
cli
jg
cmc
inc
and
jge
pusha
pop
je
cs
lds
pop
icebp
setle
jo
jp
fisttpll
pop
mov
lock
or
jl
out
mov
ss
adc
cmpb
push
mov
jne
shrl
adcb
cld
and
imul
lret
out
mov
lahf
lods
lret
pop
ret
lret
cmp
icebp
xor
rorb
pusha
sahf
insl
push
out
daa
incb
lds
push
adc
lock
imul
enter
int
or
cs
inc
pushf
pop
pop
ret
cmp
xchg
push
ljmp
jl
aad
xchg
arpl
sub
push
rcr
fdivp
arpl
push
sub
inc
and
pop
test
sbb
andps
add
or
add
pop
scas
sarb
test
cmpsl
sbb
fcmovnu
mov
sub
pop
inc
mov
mov
insb
sub
cmp
fwait
rclb
cmc
sub
mov
cld
jo
push
dec
sbb
push
mov
dec
jl
outsb
jmp
mov
fldt
pop
dec
lods
fisttpl
mov
add
test
adc
jle
xchg
ja
mov
cwtl
daa
inc
fcoml
aad
out
pushf
dec
pop
icebp
xchg
jo
insl
push
cs
repnz
mov
into
pusha
xor
cli
push
in
pop
dec
outsb
stc
stos
popa
popa
fcmovne
into
rolb
cmp
mov
scas
jbe
shlb
xchg
sub
popa
mov
jno
fs
jge
sbb
jmp
push
imul
cs
das
jnp
das
mov
jmp
lea
adc
adc
movsb
sub
imul
pop
loope
jmp
or
adcb
xor
adc
cmp
and
jg
cmpsb
icebp
mov
jns
sub
es
push
out
or
outsb
and
cmpsl
rolb
xchg
xchg
push
inc
arpl
push
nop
shlb
mov
dec
jno
rol
mov
mov
sbb
das
ficomps
mov
xor
mov
mov
lods
out
aad
add
mov
and
stc
clc
ss
and
fadds
jp
dec
lahf
push
inc
or
cli
lret
cld
jbe
clc
out
roll
in
movsl
mov
fisubrl
xlat
scas
int3
mov
rcr
inc
sbb
outsb
add
push
mov
jg
mov
jb
lahf
test
adc
sbb
mov
inc
push
mov
icebp
xchg
das
fidivrs
dec
push
push
inc
orb
cmp
adc
or
fisttpll
fyl2x
and
test
mov
pusha
fcoms
cs
pop
subl
aaa
sbb
or
jnp
ficoml
fdivl
fistps
out
and
out
bound
jnp
lcall
inc
adc
lahf
inc
test
mov
push
adc
xchg
pop
gs
rcll
iret
sub
ja
cmp
out
mov
mov
es
add
lock
dec
dec
jl
mov
jmp
js
inc
mov
or
mov
imul
dec
pop
add
push
repnz
imul
or
scas
sahf
stc
jmp
or
xorl
adc
adc
dec
leave
or
jl
ret
sbb
outsb
bound
in
sahf
leave
shl
pop
add
xchg
fisttpl
mov
stc
inc
out
shr
imul
test
cltd
pusha
mov
sbb
iret
mov
cmpsb
cli
lds
sub
int
subl
repz
aad
data16
out
fucomp
ljmp
or
int
idivl
xor
pop
pop
jno
aam
or
jle
es
les
lret
pop
leave
cs
xchg
outsb
fwait
insb
xchg
mov
pop
jg
push
pusha
into
insl
jmp
xchg
dec
lock
loop
lock
mov
pop
cs
cltd
das
push
fisubs
mov
pusha
mov
cmp
orl
push
or
shr
or
shrb
xchg
xchg
pop
cmp
imul
mov
pop
mov
or
addr16
xor
cmc
daa
mov
into
cmpsb
les
out
mov
dec
cwtl
hlt
cwtl
mov
movsl
and
pushf
outsb
cmp
xchg
pmaxub
mov
inc
repz
aad
in
aam
popa
dec
cli
dec
addr16
aaa
cmp
xlat
andl
lds
sub
inc
in
cltd
mov
push
pushf
mov
lods
out
dec
call
pop
outsl
cmp
jnp
out
pop
cmp
ja
cmc
sbb
mov
out
sbb
xchg
mov
mov
les
xchg
popf
pop
add
xor
push
es
in
dec
xchg
mov
and
mov
pop
cmp
fldt
pop
push
mov
jge
hlt
mov
xor
icebp
jle
and
pop
mov
push
xorps
out
subb
arpl
in
fsubrp
nop
neg
sbb
mov
cmpsl
cmpl
sbb
scas
outsl
mov
mov
fstl
mov
jg
xchg
jnp
ljmp
fcomp
mov
or
xor
mov
sub
xchg
sub
fnclex
push
sar
dec
xchg
das
sbb
fidivrs
clc
cmpsl
shrl
scas
jb
cmpb
nop
or
jl
xorb
mov
cmp
pop
cmp
dec
adc
inc
mov
or
add
jb
fnsave
add
xchg
sub
ljmp
add
jl
adc
rcrb
ret
in
imul
mov
cltd
ljmp
cmc
push
fyl2x
mov
xchg
sbb
popf
pop
aaa
test
ljmp
fiaddl
ficoml
hlt
inc
mov
mov
xor
sub
mov
enter
jb
xlat
rcl
lea
or
adcb
fst
mov
pop
jo
sbb
dec
leave
mov
sub
sub
jno
mov
mov
push
cmc
mov
or
dec
or
jnp
rolb
loopne
cltd
in
stos
jb
push
cmp
into
stos
rclb
repz
rolb
push
jge
fbld
mov
or
mov
movsl
lods
es
and
add
or
mov
test
lods
or
inc
mov
add
jge
jnp
and
out
add
sti
loope
ficomps
mov
gs
in
lea
gs
or
jmp
cld
xor
sti
imul
jnp
insb
int3
fstpt
push
jge
and
sbb
sbb
fimuls
add
std
or
jns
mov
inc
adc
fsubs
xor
pop
push
dec
push
scas
mov
mov
push
popf
mov
sbb
imul
dec
mov
cmp
cltd
lds
add
pop
adc
sbb
sbb
repnz
inc
cmpsl
shl
cmpsl
std
mov
ja
jb,pt
inc
xchg
adc
jbe
dec
lea
sbb
outsl
or
mov
dec
mov
lret
int3
push
adc
inc
je
mov
repnz
or
add
stos
dec
mov
dec
cli
inc
loop
sahf
xor
push
and
bound
repz
mov
push
xor
hlt
cwtl
leave
sub
add
adc
leave
sub
movsl
add
cltd
push
pop
pop
and
in
cli
sahf
jmp
loopne
sarl
push
sub
movb
jmp
mov
adc
push
cs
cmc
gs
jnp
jmp
mov
mov
insl
test
enter
es
fstpt
xchg
lock
jne
addb
mov
mov
loop
incl
int3
scas
inc
inc
ror
addl
and
jge
xor
xor
or
outsb
mov
xchg
lcall
pop
ss
bound
xchg
xchg
xchg
xor
mov
mov
addl
outsb
stos
inc
fcmovnbe
out
pusha
insl
add
mov
lods
push
mov
data16
insb
scas
inc
jns
in
add
clc
call
adc
dec
out
data16
add
mov
pop
mov
pushl
mov
xchg
mov
xor
and
test
ret
push
pop
enter
mov
lea
mov
xor
test
cs
out
sti
sbb
cmp
xchg
notb
cmpsl
outsb
cmp
mov
inc
std
sub
cmp
fistl
or
outsb
or
mov
std
pop
adc
jg
cmpsb
jne
ret
sub
mov
cmpsl
hlt
xor
push
xchg
push
sbb
cli
idivb
int3
push
inc
xchg
leavew
xchg
pop
add
jnp
lcallw
movsb
ficoml
imul
mov
cmpsl
test
es
in
adc
mov
fcomip
pop
loopne
dec
loopne
sub
clc
inc
xchg
cmc
repnz
dec
dec
and
jle
rorl
popf
jo
daa
mov
in
jg
inc
adc
popa
mov
jbe
mov
mov
enter
xchg
add
in
jmp
jo
arpl
popa
lahf
insl
andl
mov
cmp
cs
dec
dec
outsl
addb
jmp
call
or
in
sbb
mov
es
mov
jne
fs
jae
push
push
jnp
jmp
fisttpl
aad
mov
inc
add
push
fwait
xchg
adcb
jg
mov
in
lds
xchg
push
mov
sub
loopne
dec
int
pop
ffreep
jmp
outsl
sbb
lret
inc
cltd
add
fsub
jb
mov
repz
dec
xchg
cmpb
jg
sbb
ds
jle
iret
cmc
mov
iret
mov
sub
inc
sahf
fldl
push
mov
push
test
les
js
push
push
lea
inc
sarb
les
pop
or
fmull
icebp
xchg
ds
inc
es
js
pop
enter
nop
pop
cs
js
into
xor
mov
lahf
ss
pop
enter
mov
repnz
jae
imulb
fistpl
sbb
cmp
xor
jle
or
adc
jecxz
test
mov
dec
scas
popf
fs
push
enter
jo
pop
insl
pop
cwtl
psrad
adc
mov
sbb
leave
pop
push
sbb
cwtl
orb
lcall
rcrl
dec
and
cld
jae
mov
mov
push
or
sbb
icebp
adc
mov
mov
cltd
xchg
ret
pushf
stos
dec
ret
iret
es
imull
movsl
outsl
xchg
inc
imul
cmp
inc
pushf
pop
mov
adc
mov
lock
test
dec
and
mov
inc
sub
add
sub
xchg
add
aad
shr
icebp
je
adc
fwait
pop
mov
shlb
aad
push
inc
fidivs
inc
inc
into
xchg
or
inc
jmp
out
mov
xchg
test
or
imul
popf
out
imul
push
fisubl
decb
test
or
pop
inc
in
push
iret
jecxz
cmp
mov
or
clc
popa
notl
lods
sub
add
aam
inc
rorb
jae
mov
lods
mov
push
push
fs
pop
jne
xchg
push
xor
pop
sbb
pop
sbb
mov
xchg
std
repz
xor
xor
ret
testl
nop
or
lds
xchg
pop
addr16
jbe
xchg
cmpsl
loope
adc
or
fimuls
push
xor
dec
cmp
daa
test
dec
xlat
push
mov
jp
sahf
cmpsb
push
pop
mov
push
test
mov
adc
subb
addr16
hlt
enter
inc
push
ret
mov
push
out
and
cmp
fcmovnu
clc
push
clc
cld
shlb
push
sub
or
mov
add
into
cmp
rcrl
lds
jmp
add
cs
cmpsl
es
sub
cli
push
cmpsl
add
outsb
push
dec
cltd
push
sub
shlb
mov
mov
call
xchg
push
fs
add
cmp
shl
daa
pop
enter
imul
int
loope
and
mov
sahf
xor
in
jno
pusha
pop
insb
cmp
ss
push
dec
test
jg
cli
incb
cwtl
ljmp
inc
outsb
test
sub
sbbl
cmp
outsl
mov
shlb
sub
lods
lock
je
stos
mov
fs
cmp
push
cmp
mov
fidivs
call
push
push
mov
mov
xor
adc
mov
mov
jmp
int
add
dec
fidivs
xchg
xchg
push
sbbl
sub
xchg
or
push
pop
mov
incl
xchg
andb
mov
rclb
es
cwtl
mov
mov
fnstenv
mov
pop
add
iret
pushf
pop
xchg
rclb
inc
outsb
test
jmp
add
push
mov
hlt
push
sub
cmp
jge
ret
jns
int3
cmc
rcrb
loopne
ja
cs
faddl
ja
shrl
and
mov
cmp
jmp
mov
ret
inc
cmp
icebp
jle
iret
dec
sbb
sbb
mov
aaa
fsts
fsts
mov
iret
sbb
cmp
inc
xor
std
xchg
aas
xchg
sarb
push
cmpl
inc
cmpsl
gs
xchg
cmpb
ja
pop
movl
in
ja
insb
dec
sbb
cltd
imul
pop
jge
out
xchg
sub
sub
jl
adc
cmp
push
adc
out
and
and
aas
and
ja
sbb
dec
test
sub
xchg
mov
xor
jmp
adc
scas
mov
cli
leave
pop
pushf
stos
mov
insb
mov
adc
mov
sti
mov
cmp
xor
arpl
mov
xlat
adc
cmp
mov
mov
enter
js
mov
inc
add
xor
lcall
or
inc
rolb
dec
arpl
jns
out
ljmp
loope
ja
dec
scas
lret
enter
test
mov
shll
xor
or
sub
ds
lock
jno
aas
stos
add
or
jp
sahf
lret
jge
or
movsl
jmp
fcomps
cwtl
dec
adc
out
mov
push
inc
incb
filds
and
or
or
aaa
dec
lock
adc
cld
movsl
cmp
lds
and
mov
sti
and
pop
lahf
cmp
mov
es
icebp
js
ficomps
push
xchg
daa
sarl
push
mov
repnz
pop
xchg
mov
jno
xchg
dec
dec
dec
xchg
dec
inc
jo
inc
jno
ja
xchg
and
shll
jbe
rorb
adc
mov
xor
or
mov
pusha
cmpb
mov
mov
mov
out
sub
pop
pop
lret
jle
pop
and
dec
adcb
jne
mov
xchg
mov
rcll
or
cmp
dec
clc
packuswb
pop
or
mov
xor
mov
adc
call
loopne
fstpt
jne
std
fists
mov
push
xchg
int3
mov
mov
jo
push
test
test
mov
mov
loop
fdivrs
aas
push
out
repz
fcmovne
sti
mov
and
cli
xchg
fidivl
pop
mov
push
and
lods
pop
or
push
mov
sub
or
nop
pop
inc
mov
jo
bnd
mov
cmpsb
stc
mov
inc
xor
fdivrs
sbb
ja
addr16
pop
xor
mov
jle
xchg
aad
push
shlb
rcrl
in
xchg
mov
out
dec
jns
test
cmp
insl
add
insl
vandps
push
rclb
mov
enter
jns
add
and
inc
xor
cwtl
mov
cmpsb
roll
std
out
daa
pop
mov
xor
dec
and
mov
and
jae
pop
aaa
xor
int
cmp
inc
adc
cli
pop
js
fimuls
shlb
dec
fisubl
mov
lock
cli
add
test
push
arpl
movsl
sub
mov
mov
sbb
iret
xor
arpl
dec
pop
add
daa
out
dec
cltd
fildl
xchg
clc
xchg
neg
arpl
sahf
inc
inc
xor
iret
daa
int
in
vpsllq
pop
jbe
fcoms
xor
push
inc
imul
push
scas
mov
out
test
xor
aad
jne
xchg
push
lea
out
adc
pop
fcomps
test
xor
addr16
sub
adc
into
cmc
lods
popf
cwtl
fistpl
scas
jle
stc
push
xchg
cwtl
aad
push
enter
jl
ss
push
push
inc
push
jnp
leave
mov
test
sub
or
adc
inc
lods
insb
xchg
sbb
fsubrp
loop
pusha
data16
jge
mov
cs
fcoml
bound
rcrl
arpl
xor
cli
rorb
pusha
insl
es
cld
int
scas
fistpll
push
xor
sub
adc
and
lcall
call
inc
jmp
fisubs
push
add
push
and
or
xlat
mov
xor
arpl
mov
test
dec
xchg
xchg
andl
fstpl
stos
xor
pop
push
or
das
push
mov
dec
mov
idiv
sbb
jecxz
mov
jecxz
inc
xor
push
jl
hlt
inc
pusha
dec
dec
inc
cld
imul
dec
mov
lret
mov
cmp
cmp
fdiv
std
in
inc
enter
inc
in
dec
and
test
cli
fcmovnb
inc
les
mov
push
test
sub
add
inc
dec
jl
or
sbbb
jge
insl
dec
mov
xchg
loopne
out
sub
shrl
jg
push
in
lds
jle
lret
out
jmp
jmp
rol
pop
in
fs
int
iret
cltd
gs
lock
pop
out
add
add
arpl
test
les
xchg
mov
stos
cmpsl
movsl
dec
push
or
cmp
and
mov
mov
adc
dec
out
xchg
adc
es
adc
inc
pop
cmp
lret
lcall
sbb
inc
pop
inc
cmp
je
mov
dec
or
in
mov
arpl
xor
pop
nop
pop
cld
mov
mov
xor
mov
or
pop
imul
pop
dec
or
pop
sahf
and
xor
xchg
dec
lcall
mov
pushf
nop
hlt
lret
sbb
mov
jle
dec
shll
das
push
ret
mov
pushf
mov
mov
leave
or
dec
push
mov
loopne
test
jge
imul
xchg
lahf
fidivrl
dec
add
jo
test
inc
clc
or
fwait
mov
mov
imul
js
dec
xor
inc
jmp
fldcw
out
jae,pt
xor
pop
je
cmp
repz
mov
imul
mov
fidivrl
cld
das
push
imul
mov
push
jmp
mov
sub
inc
sbb
mov
mov
mov
mov
fisubrs
fwait
cmp
pop
mov
rolb
lds
or
leave
jne
push
sarl
andb
daa
lds
add
mov
mov
push
mov
mov
mov
in
fwait
xor
pop
lret
das
adc
push
fsubs
mov
fyl2x
push
sub
mov
scas
popa
loop
pop
dec
call
cmp
pop
mov
pop
sbb
xchg
mov
xchg
pushf
psubusw
lahf
jmp
in
arpl
inc
jp
arpl
pusha
or
xor
aaa
lret
imul
xor
xchg
ds
mov
test
cmp
cld
xor
and
sarl
int
lret
jmp
xlat
pop
in
scas
test
pop
xor
mov
loope
mov
nop
or
repz
mov
jnp
dec
mov
push
fstp
mov
fimuls
pop
xchg
scas
hlt
mov
mov
outsb
cmp
cmp
test
lods
mov
sub
mov
orb
aad
mov
pop
repz
jmp
insl
add
mov
lahf
xchg
call
adc
inc
mov
jge
mov
mov
daa
ret
rcll
out
in
xorl
ss
int
dec
popf
imulb
jne
and
outsl
mov
mov
insl
bound
xchg
ss
dec
lock
into
pop
movl
cmp
sub
imul
push
loopne
out
arpl
mov
sbb
je
out
rol
jle
pop
adc
inc
inc
jl
rcll
mov
push
mul
shl
idivl
or
es
ja
stc
mov
sbb
mov
sarb
in
ljmp
mov
xor
xchg
mov
push
pop
push
enter
shrb
in
jns
shlb
xlat
cmp
repnz
cmp
imul
sbb
aas
test
sbb
sbb
out
das
dec
xor
jne
leave
xchg
lahf
out
movb
inc
cmp
enter
int
pop
pop
fcomps
in
pop
sub
jge
bound
fs
je
lahf
xchg
test
xchg
adc
xchg
jg
mov
shll
out
cld
icebp
cltd
jb
mov
and
les
push
sahf
ret
and
xchg
pop
scas
and
lods
sub
mov
in
adc
mov
lret
fs
lcall
sub
outsl
fimull
loopne
mov
ret
xor
xorl
hlt
pop
fiaddl
jge,pt
les
imul
adc
or
inc
mov
iret
mov
dec
dec
and
sub
mov
js
or
outsl
scas
add
sub
negb
xor
lods
inc
jns
jge
xchg
cmpsl
clc
cmp
inc
sbb
sahf
and
insl
jmp
mov
adc
gs
and
or
repnz
negl
cmpb
cltd
out
push
jge
out
outsl
and
xlat
enter
or
jo
cmp
outsb
inc
push
fiadds
outsb
and
push
inc
mov
sbb
stos
out
sbb
pop
sbb
bound
jmp
mov
pop
out
bound
clc
xchg
sahf
xchg
cmp
leave
addl
stos
call
bound
xor
sbb
mov
adc
mov
push
mov
inc
mov
lahf
pop
cli
movsb
mov
xlat
sub
dec
sti
push
cmp
or
sbb
push
and
mov
xorl
test
test
ret
test
add
sbb
sbb
sbb
clc
sub
adcb
dec
lea
stc
sbb
aam
negb
repnz
stc
xlat
mov
fistl
pop
xchg
out
jecxz
scas
jg
adc
mov
aaa
inc
ret
pusha
int
add
scas
jecxz
xchg
add
test
fcmovbe
mov
aad
pop
adc
push
arpl
push
jb
or
call
dec
mov
pushf
push
icebp
imul
mov
xlat
mov
add
aas
sub
jle
imul
and
movsb
jp
jno
mov
fisubs
sarl
rcl
jp
and
aaa
sub
push
in
orl
and
negb
stc
ret
add
test
int
xor
cmpsb
cli
and
adc
and
movsb
dec
xchg
jg
push
sahf
xchg
test
das
lea
shrb
insb
pushf
enter
sub
sbb
or
lret
pop
pop
mov
fsubrl
mov
push
and
test
push
xor
mov
leave
add
mov
push
mov
repz
imul
outsb
aaa
movsb
and
scas
xor
add
popf
xor
inc
scas
xchg
loop
sahf
insl
add
outsb
shlb
repnz
lret
nop
or
jnp
xchg
sub
cwtl
cltd
push
lods
and
cmpl
xchg
jecxz
xor
mov
lahf
stos
dec
inc
mov
sub
jne
lods
sub
dec
imul
loop
call
nop
mov
call
out
pop
jmp
jae
mov
int
ja
jg
sub
mov
mov
xor
ficoms
clc
and
push
xor
cmpsb
inc
imul
ja
rcrl
ret
loope
jnp
out
and
int
popa
or
jg
cmpsl
nop
stos
shl
sahf
bound
inc
loop
sbb
or
and
aam
sub
cltd
rclb
jbe
ficompl
push
daa
mov
lods
sbb
iret
push
mov
cmpb
push
mov
int
xchg
pop
cmp
clc
inc
mov
add
push
scas
cwtl
enter
in
add
fistpl
push
test
cmp
loop
lret
mov
movsl
mov
shll
sub
fwait
xchg
testb
out
xor
ret
sub
add
jl
jb
sub
sub
push
jo
xor
popf
sub
adc
scas
pop
cmp
out
leave
iret
xor
jle
int
or
dec
icebp
mov
mov
adc
pushl
mov
scas
pop
pop
ljmp
sbb
outsb
mov
sbb
dec
stc
and
addr16
adcl
jae
and
lods
mov
add
ss
fstpl
adc
mov
mov
dec
sub
jp
mov
mov
les
adc
dec
inc
sbb
popf
ss
out
in
dec
pop
mov
sub
xor
sbb
lahf
xlat
dec
cmp
xchg
addl
cmp
and
push
or
sarl
dec
lahf
pusha
aad
push
push
and
cmpl
mov
ffree
ret
mov
cmp
and
sbbl
test
scas
cmpsl
mov
aaa
cmp
pop
mov
lds
cmp
add
xchg
cmp
fmuls
mov
js
outsl
cwtl
dec
or
addl
xchg
aas
mov
jp
aad
cli
inc
dec
mov
lret
and
push
mov
jnp
adcb
push
lds
dec
pushf
cmp
cltd
adc
mov
das
test
xchg
pop
pushf
lds
lods
or
inc
adc
pop
pop
dec
xor
aam
xchg
mov
aam
or
pop
fdivrs
lcall
in
push
test
in
mov
out
lea
push
cltd
pop
jbe
lock
adc
push
pop
pop
inc
outsl
push
popf
outsl
mov
dec
push
mov
xchg
cmp
cld
dec
jo
out
ret
sub
push
fnstsw
dec
mov
and
xchg
popa
xor
inc
mov
dec
cmp
jl
inc
sbb
iret
lcall
punpckhwd
and
jg
jl
lds
outsb
insl
xchg
daa
cmpl
cwtl
std
into
cmp
inc
mov
fcomip
push
sub
and
jmp
push
xchg
mov
dec
xlat
sahf
xchg
xchg
and
xchg
sub
shr
mov
push
js
push
cmpsb
jge
movsl
xor
pop
js
jp
scas
aad
mov
loopne
sbb
add
int
dec
jg
and
aad
adc
xchg
data16
out
gs
test
and
jnp
dec
dec
lea
aad
or
sub
fists
mov
mov
sbb
push
ja
dec
xor
jns
notb
push
pop
push
pop
in
lock
cmpsb
sti
int
xchg
aas
xchg
cmp
sbb
lret
push
pusha
fiaddl
gs
adc
or
push
imul
mov
adc
mov
js
mov
inc
fdivrp
pop
dec
pop
jle
test
sub
lret
imul
jne
std
mov
dec
push
pop
xor
cs
push
sbb
xchg
loope
scas
test
cmp
push
iret
push
aam
cmpsl
sti
fbld
lods
inc
pusha
inc
les
mov
xor
pop
sahf
in
push
push
mov
stos
scas
movl
pop
pop
cmc
ds
lea
aas
mov
addb
xchg
mov
sbb
dec
ss
mov
xchg
ror
jmp
out
arpl
shlb
mov
ljmp
jns
iret
pop
aad
jp
xor
scas
scas
push
adc
push
mov
das
fidivs
xchg
push
jno
fs
xchg
push
sbb
sbb
push
cld
xor
mov
inc
adc
stos
push
xor
xchg
cmp
cmpsl
xor
fimuls
or
jge
lds
inc
gs
ret
adc
cmp
daa
jmp
cwtl
sbbb
fistps
mov
mov
or
or
jns
dec
scas
sub
rcll
movsl
cmc
mov
fdiv
mov
cmp
jo
sub
jne
jecxz
popa
inc
fucomi
inc
mov
scas
mov
lods
add
mov
imul
adc
push
inc
xchg
bound
cmp
aam
lahf
imul
inc
ret
sub
pop
xchg
nop
cmpsl
fwait
xchg
adc
adc
ret
lods
rcrb
dec
mov
sub
scas
imul
xor
aam
ffreep
icebp
mov
dec
aad
xor
dec
lret
ss
mov
lods
mov
aaa
cli
cmc
mov
outsb
or
gs
iret
push
jb
aam
cli
pop
inc
cwtl
clc
jnp
cmc
add
data16
push
enter
sar
movsb
adc
mov
pop
aad
jecxz
fimull
cmp
imul
sub
inc
pusha
out
pop
addr16
sarl
add
mov
adcb
ss
pop
jae
ret
rolb
fcoms
cmpsb
nop
adc
jae
mov
arpl
das
cmp
jg
inc
dec
pop
outsb
ljmp
movsb
mov
divl
dec
int
xchg
sbb
mov
push
mov
or
add
rcl
bound
movhps
leave
cld
jb
dec
ja
xchg
xchg
add
fildll
loop
xor
loope
adc
inc
movsl
cmp
pop
sbb
stos
jmp
jle
xor
xlat
in
lcall
mov
sbb
and
int
mov
aaa
inc
out
popa
cmp
xchg
aad
int3
orl
movsb
loope
pop
sub
jnp
xlat
inc
arpl
or
int
cs
jp
lods
mov
dec
jns
lock
push
sbb
jl
mov
jmp
lcall
mov
adc
dec
cwtl
mov
mov
add
adc
push
xor
std
movsb
js
jmp
dec
shll
dec
inc
push
xor
popf
and
addr16
push
sbb
sbb
mov
jbe
sbb
jle
arpl
dec
xchg
subb
fidivs
orb
movsl
and
popf
sar
add
fs
adc
adc
cmp
mov
cs
int
pop
jb
aam
inc
xchg
lcall
jne
lret
inc
cmp
cmc
or
fsubp
pushf
movsb
inc
jle
paddw
cwtl
sbb
das
jb
out
lods
cltd
dec
sbb
adc
and
xchg
outsb
mov
push
jnp
adc
xor
rcl
movsl
pushl
rcrl
stos
lcall
jo
sbb
dec
add
sbb
leave
mov
das
jnp
popa
inc
dec
stos
cld
ficoms
xchg
fisttps
pop
test
mov
addr16
cld
push
out
int3
and
test
xchg
xchg
lret
gs
stc
cmpsb
push
mov
pop
sbb
mov
cmp
or
je
int
jle
jp
dec
aam
aaa
xor
jge
stos
mov
cltd
dec
jne
jb
xchg
add
sbb
mov
or
insl
loop
push
add
jge
jne
mov
xchg
pop
orl
cmpsl
cmp
cmpsl
dec
mulb
cwtl
inc
sbb
push
mov
lret
sarb
lcall
scas
iret
mov
arpl
mov
mov
in
jp
lods
leave
es
inc
fcoml
fs
jae
xor
call
pusha
adc
int
or
mov
xchg
imul
and
icebp
dec
and
xchg
stos
or
mov
and
mov
cld
jb
pop
or
test
inc
push
xor
outsl
mov
push
imul
out
push
ret
xchg
jnp
sbb
push
jns
pushf
testb
pop
shlb
xor
and
nop
cwtl
movb
imul
push
pop
stos
repz
setbe
adc
pushf
outsl
fmull
repz
xor
lret
xor
sbb
or
jg
and
push
in
jns
daa
sbb
sbb
mov
jmp
mov
ljmp
mov
lods
sbb
inc
jne
xlat
sbb
loopne
jmp
xor
ds
loope
adc
xor
sub
xor
lcall
cmc
test
int
test
test
jl
stos
sbb
iret
xor
rcr
and
sub
rcll
and
nop
daa
subl
add
sub
dec
add
out
sahf
xchg
cwtl
adc
cltd
jno
inc
enter
and
das
outsb
scas
cli
or
jb
jle
xorl
mov
into
mov
cmp
dec
pop
xchg
imul
jecxz
rcll
ss
call
lcall
add
xorb
xchg
out
pop
subl
cmp
dec
inc
outsl
ljmp
push
popf
jno
aas
insl
or
cmpsb
mov
lahf
sbb
imulb
xor
mov
jecxz
lock
pop
mov
scas
or
push
in
and
cltd
outsb
mov
xchg
fisttpl
dec
or
mov
jbe
or
or
xor
sarl
or
lahf
jae
ret
dec
jl
xor
jno
cwtl
sub
adc
jnp
cmpsl
popf
push
xchg
cmp
sbb
mov
icebp
or
xchg
iret
inc
mov
lret
std
dec
repz
mov
cmp
mov
testl
in
mov
inc
rolb
cmp
jmp
pop
jmp
dec
mov
mov
push
adc
or
xor
cmp
cltd
mov
nop
lret
pop
mov
loopne
out
pop
sahf
sahf
sahf
jne
mov
movsb
add
aam
xchg
lcall
cmp
lcall
out
jl
loopne
inc
or
mov
adc
mov
push
mov
sub
ja
sub
dec
pop
popf
xor
adc
les
inc
push
push
jg
cltd
rep
xchg
pushf
int
or
test
cmp
dec
inc
std
cmp
aas
shlb
cwtl
sahf
popf
and
lods
mov
sahf
jb
cmp
into
fs
adc
adcb
mov
pop
mov
cmp
pushf
sti
adc
aas
xchg
or
out
cld
fsubs
xchg
xchg
inc
fnsave
inc
rol
or
movsb
aaa
out
cs
add
sbb
or
dec
sub
sbb
rorb
cs
je
xchg
push
cmpsb
push
lods
jne
sti
fwait
mul
lods
stc
inc
cmc
inc
js
xor
maxps
mov
lahf
popa
and
mov
cmpsb
out
dec
stos
lret
cltd
cltd
rcll
cltd
push
push
pusha
pop
lcall
jno
push
push
jb
and
push
pop
mov
mov
out
dec
pusha
sub
pop
outsl
bound
aad
mulb
ret
add
mov
jge
jne
scas
push
jns
inc
add
mov
lods
dec
popa
lcall
cmpsb
scas
jo
pop
adc
test
lock
mov
lock
pop
jne
push
inc
sbb
shl
and
push
sbb
push
ja
adc
in
and
mov
inc
lods
xchg
es
push
jmp
inc
std
iret
adc
rcll
cmp
ficoml
enter
pop
xor
adc
adc
ss
sbb
sbb
dec
push
int
mov
inc
sub
jns
nop
xchg
and
scas
popf
jecxz
cmp
ljmp
inc
aam
or
lods
pop
fsubs
dec
and
das
cltd
mov
jns
sbb
movsb
xchg
imul
std
cmpsb
cmp
dec
fisttpl
insb
sub
in
call
shrl
repz
adcb
mov
fisubl
pop
jns
jno
into
mov
pop
inc
sub
push
mov
jg
pop
js
and
cs
xchg
inc
into
cwtl
and
push
rorl
jmp
cmp
aas
push
inc
adc
jp
push
fcmovb
pushf
sarl
add
pop
inc
loope
lock
sbb
adcl
fistl
mov
fistps
cmp
sbb
add
stos
and
sbb
movsl
add
add
mov
pushf
repz
fldenv
arpl
xor
xorb
cli
sub
push
push
call
sarl
std
daa
imul
lods
ret
jo
mov
out
inc
std
ljmp
mov
dec
mov
lock
clc
nop
jbe
cli
std
lret
sbb
pusha
mov
push
ss
int
adc
incb
xchg
dec
cs
scas
fsts
loope
and
push
xorb
pop
mov
clc
aad
shl
les
pop
popf
mov
mov
shlb
pop
sbb
push
out
insb
out
mov
mov
gs
jmp
xor
scas
push
jg
dec
inc
inc
arpl
jb
inc
int
adc
movsb
pusha
mulb
in
pop
mov
sub
fists
aam
or
cmp
mov
inc
rclb
mov
cmp
sub
and
mov
fcmovb
jo
cmp
and
shl
inc
loopne
push
xor
xchg
jae
adc
jae
popa
mov
std
mov
int
stc
mov
mov
and
jns
xlat
sahf
xor
mov
jl
sbb
cwtl
add
adc
sub
idivl
call
cli
and
cmp
notb
insl
pushf
adc
add
testl
add
repnz
test
and
cltd
xlat
mov
dec
cmp
movsb
mov
lock
jns
repnz
movb
mov
mov
fsts
sbb
lds
mov
push
aaa
and
adc
cmp
push
add
lret
cs
leave
xchg
mull
fnsave
sub
das
sbb
cmpsb
xlat
arpl
adc
repz
dec
inc
and
push
fistl
in
push
dec
adc
jg
add
xchg
push
ljmp
mov
add
push
je
and
mov
push
aam
test
push
icebp
adc
imul
xchg
push
test
decb
in
mov
push
dec
stos
ficompl
sbb
test
mov
pusha
mov
xchg
addl
roll
sub
dec
cmpsl
sbb
sbb
pushf
pop
outsl
mov
mov
jb
rorb
jo
loop
lock
addb
into
mov
aad
push
ds
leave
nop
cmpsl
in
imul
xchg
in
mov
lcall
mov
clc
xor
in
pop
mov
xchg
repz
xchg
shlb
movsb
popa
outsl
push
add
loop
int
or
loope
xor
xchg
lods
sub
es
dec
dec
xchg
mov
jbe
rcr
out
xor
ja
shll
xor
push
mov
or
sti
test
or
dec
jl
add
icebp
push
and
inc
outsb
or
ret
mov
aad
mov
mov
scas
shl
xchg
pop
mov
add
xchg
push
stos
push
xchg
add
stc
aad
call
int3
out
scas
xchg
or
loope
scas
lea
mov
insl
mov
inc
repz
mov
jle
jg
movsl
xor
loope
mov
mov
inc
mov
decb
jle
add
stos
or
jecxz
dec
push
xor
add
pusha
aam
push
add
sub
cmp
test
pop
xchg
push
inc
jl
out
mov
rcrl
mov
in
push
aad
xchg
dec
dec
adcb
movsl
inc
sub
mov
sub
repz
xor
mov
cmp
sbb
pop
mov
xchg
rcll
xor
push
sub
or
inc
push
or
and
jb
sub
cmp
pop
call
mov
push
cld
and
jae
fmuls
mov
jmp
js
pop
out
dec
data16
cmp
repz
mov
mov
mov
mov
lahf
mov
and
in
push
cmpsb
hlt
addr16
push
cwtl
dec
int
adc
pop
int
imul
fldl
je
nop
jg
add
arpl
mov
mov
out
sahf
fcmovnb
push
int
pop
pop
sub
jo
xlat
xchg
pop
mov
in
imul
pop
mov
insb
mov
lcall
or
scas
in
mov
cmp
add
das
aad
dec
adc
andb
push
jns
adc
inc
data16
fidivrl
lock
hlt
or
iret
add
or
xor
repz
ss
in
add
dec
inc
outsl
cmp
mov
jno
movlps
mov
movsl
sbb
mov
jl
xchg
sub
and
fucomi
inc
pop
sbb
mov
test
mov
in
push
sub
add
cld
adc
inc
dec
jne
imul
xchg
xor
popa
rcrl
inc
cmp
dec
mov
cwtl
rclb
into
hlt
or
adc
leave
mov
pusha
pop
pop
pop
push
fisubrs
mov
adc
dec
dec
js
pop
repnz
mov
fwait
mov
mov
or
mov
jno
adc
mov
leave
cmp
or
cmpsb
or
es
and
sarl
rolb
inc
xor
sbb
sbb
pop
test
adc
outsl
cmp
ss
sub
aas
sti
stos
push
test
cmp
sahf
sbb
jns
mov
mov
dec
push
adc
pop
shlb
arpl
andl
push
or
jnp
mov
push
aad
js
sub
stos
mov
xchg
loope
xlat
movsl
in
loope
inc
orb
imul
adc
sbb
dec
jl
cmp
lret
mov
cmp
repz
mov
xchg
mov
lock
mov
jns
push
jmp
mov
cmp
sbb
mov
or
sub
sub
stc
fldenv
mov
cltd
popf
in
lods
aaa
push
sbb
xchg
mov
fdivl
adc
pop
lods
int
aas
dec
jne
es
dec
adcb
or
mov
arpl
pop
mov
push
push
fisttpll
mov
mov
push
adc
incb
sub
ret
pusha
cmpsl
cmpsl
xor
lock
addb
xchg
push
jle
pusha
cli
sar
pop
jl
xchg
jge
loopne
sub
in
jp
mov
mov
xor
mov
add
add
ret
and
fidivs
scas
std
js
push
rolb
lret
xor
or
rol
xchg
pop
fstpl
jge
fadd
xchg
insb
in
cld
dec
adc
std
lcall
icebp
adc
rclb
ud1
enter
enter
sbb
adc
inc
adc
adc
xor
std
sbb
jne
cmp
lea
int3
scas
push
or
push
pushf
xchg
jge
imul
sahf
jg
jbe
jmp
mov
ss
stos
add
lret
sahf
fisubs
shrl
and
out
adc
mov
je
mov
popf
xchg
adc
fidivs
pusha
push
arpl
ljmp
dec
mov
insb
cmpsb
mov
sbb
aaa
mov
cwtl
pop
sub
inc
push
int3
push
shll
mov
pushf
jbe
clc
sub
lcall
push
les
sti
cs
jae
repz
into
push
or
fisubl
inc
pop
cs
fiadds
inc
mov
xchg
cmpb
daa
insl
scas
add
test
cmp
rorl
pushf
pop
fisubl
push
lods
adc
std
mov
aaa
imul
ds
push
andl
dec
es
sti
mov
mov
push
cmpl
xor
sbb
cmpsl
idivb
jmp
push
jl
test
inc
dec
jl
lahf
ss
adc
mov
mov
lahf
jl
out
jbe
ja
faddl
loope
sbb
pusha
rorl
xchg
add
pop
ret
mov
xchg
mov
test
pop
rorb
into
sbb
test
rcl
mov
lahf
test
mov
insl
testb
push
ret
and
mov
push
or
mov
adc
cmp
cmpsb
mov
xor
or
imul
lea
mov
or
push
adcl
fisttpll
mov
cs
inc
lods
dec
shl
ja
neg
fcmovu
enter
in
or
sub
jno
xorl
and
ret
idivb
mov
pop
loopne
js
xchg
cld
stos
mov
das
adc
sbb
pop
stc
jle
add
loope
xchg
or
push
in
jmp
push
inc
xor
push
jnp
test
push
add
iret
shrl
adc
std
push
sbb
stos
mov
test
inc
jg
arpl
xor
ret
rcr
jp
lcall
and
addl
repnz
inc
fistl
mov
fisttpl
pop
test
ds
insb
dec
jp
sbb
add
jo
mov
adc
sbb
cmp
pop
sbb
scas
xchg
push
cld
into
test
bound
orl
shr
and
mov
cmpsb
je
mov
lea
or
imulb
mov
ja
xchg
insb
rorb
das
rcr
adc
bnd
stc
daa
inc
dec
sbb
xor
pop
and
sub
or
rcrb
ficoml
nop
idivb
xor
test
adc
sbb
jecxz
push
aad
xor
adc
cmp
mov
and
rcl
push
loop
mov
jge
mov
or
xchg
mov
out
fsubrl
mov
sbb
iret
mov
jge
add
je
repz
push
push
push
pushf
mov
movsb
cmpl
jo
cmp
inc
jnp
lret
lea
mov
rorl
adc
popl
nop
mov
es
hlt
hlt
xlat
testl
cmp
sahf
fildl
cmpl
inc
adc
pushf
xorb
push
setg
in
lods
or
mov
shll
adc
mov
arpl
cmp
mov
xchg
or
les
dec
aam
mov
pusha
aas
divb
jns
les
and
pop
stos
pushf
nop
and
adc
repz
call
mov
aaa
and
ret
inc
sbb
das
xor
int
xchg
in
stos
mov
aad
jnp
pop
test
dec
fdivrl
jp
xorb
fidivrl
insl
ficomps
lcall
outsb
popf
lods
loopne
js
or
aad
movsb
xchg
dec
ficoms
in
jns
int
das
addr16
daa
insb
mov
fs
inc
xchg
jmp
out
jo
pop
inc
sub
lock
sbb
rcrb
cmp
pop
dec
sub
lea
mov
xchg
rcl
and
insl
out
clc
lahf
xor
bound
aaa
sbb
fnsave
inc
cld
ss
out
lahf
pop
sub
movsb
cmp
xor
mov
or
add
cmp
out
imul
jbe
aad
xor
or
aas
jno
arpl
rclb
das
aad
scas
mov
and
or
mov
je
pop
in
int
adc
outsl
outsl
inc
adc
shrl
dec
sub
adc
mov
movzwl
out
out
scas
cmpsb
and
fisttpll
inc
cmp
ja
jmp
jmp
addr16
aaa
inc
cmpsb
dec
mov
jmp
out
pop
in
fnstcw
ja
mov
enter
add
cmp
ret
jbe
xchg
decl
mov
jae
xchg
adc
pop
out
sahf
pusha
jle
mov
xchg
ficoml
sbb
xor
dec
stc
shlb
enter
xchg
pop
sub
fcmovu
cmpsb
adc
inc
xchg
adc
js
lcall
jnp
push
movsb
es
or
dec
sbb
add
loop
dec
je
cwtl
sbb
iret
insl
imul
push
or
shll
sahf
cli
mov
cmp
add
js
dec
stos
loopne
inc
lcall
das
bound
loopne
notb
mov
cwtl
mov
push
pop
adc
pop
aaa
cld
jmp
imul
popf
cmpsb
mov
jo
or
push
mov
enter
and
decl
rclb
adc
fistps
imul
aam
mov
mov
rolb
outsl
dec
cmp
rcll
and
daa
shrb
incb
fidivrs
scas
xchg
lahf
ss
cmp
xchg
adc
lahf
mov
incl
mov
hlt
xor
fldln2
mov
push
pop
push
ja
sbb
imull
dec
adc
iret
jo
lods
sbb
negb
cmp
insl
mov
test
sub
hlt
out
or
jg
xchg
mov
dec
pop
out
jnp
fstpt
iret
cmpb
loope
int3
jecxz
jns
fsts
in
scas
daa
push
dec
push
rcrl
push
sti
and
vshufpd
cmpsl
cld
sub
cs
add
mov
mov
jne
scas
cmpsb
cltd
push
and
divb
fisttpll
pop
mov
adc
std
bound
inc
mov
mov
in
cs
xchg
insl
ret
push
jb
in
shrb
repz
pushf
jbe
shll
ljmp
mov
adc
imulb
or
sub
jnp
clc
repnz
stc
stos
icebp
lds
dec
fmulp
cmp
out
fcmovne
or
sub
repz
dec
popf
lret
jmp
fisubl
in
sub
dec
loope
stc
and
mov
sub
loop,pt
dec
out
xchg
insl
mov
pop
dec
push
xor
mov
cmp
cmp
mov
or
dec
dec
xor
insb
push
stos
out
jbe
sbb
add
sub
add
cmp
in
lcall
into
cmp
aam
or
push
or
inc
pop
mov
inc
cmp
test
sub
scas
sub
xchg
jle
and
inc
cmpsb
xchg
or
xor
clc
xor
stc
push
ljmp
cmp
cmp
push
push
hlt
mov
movsl
push
sub
sti
sti
cmp
pop
scas
lods
into
imul
stos
data16
rcl
popf
adc
add
xchg
arpl
or
push
or
aaa
outsb
pop
add
xor
adc
add
test
scas
or
outsb
xlat
adc
xor
sbb
cmp
inc
sbb
test
je
mov
mov
sub
jo
test
push
jg
orl
mov
mov
xchg
mov
jb
outsl
inc
in
inc
outsl
rcrb
xchg
xchg
cli
mov
mov
les
loop
push
repnz
iret
out
sub
inc
dec
aam
cltd
inc
movsl
mov
jge
mov
inc
les
lahf
cmp
test
sbb
movsl
xor
aad
push
pop
mov
mov
mov
cwtl
inc
inc
lds
bound
pushf
xor
imul
sahf
out
lret
or
jg
es
fisttpll
repnz
push
mov
std
add
sbb
xchg
mov
xor
lds
in
add
jecxz
lret
jmp
shrb
xchg
jae
sar
mov
test
fmull
ret
pop
gs
push
and
cmp
mov
std
and
lahf
ret
dec
pop
mov
pop
xchg
pop
lret
xor
pop
pusha
sbb
out
xchg
insl
popa
jne
into
les
hlt
add
out
imul
cmp
jl
jne
push
cmp
ficomps
in
dec
cmp
xchg
or
mov
pop
xchg
jne
inc
lret
and
inc
ficoml
cmp
clc
cmpl
scas
dec
andl
xchg
sub
mov
jle
fcompp
jle
cmpsl
mov
frstor
xor
stos
xchg
out
ror
iret
add
xor
jns
xchg
test
int3
mov
insl
testb
mov
fwait
sub
insb
mov
enter
cmp
fsubrs
xchg
mov
and
loopne
jmp
or
test
movsb
rolb
fstpl
jae
div
jg
fildll
mov
sbb
mov
loopne
ljmp
sbb
in
outsb
dec
scas
fnstcw
pop
int
sub
fcomps
and
lods
loop
in
es
push
mov
mov
out
mov
pop
pop
addr16
insl
cmp
xchg
pop
popf
adc
jge
je
mov
or
pop
mov
add
outsl
ds
mov
xor
mov
outsl
xchg
loopne
or
sbb
mov
jge
or
hlt
xor
or
sbb
push
lea
aam
stc
or
cli
sub
mov
xchg
lods
ljmp
jp
sub
iret
cmc
das
ja
scas
jmp
push
insb
and
aam
mov
push
fiaddl
xor
mov
xchg
push
ja
xor
aam
dec
pop
scas
mov
push
xchg
ficoml
pop
fwait
sbb
fldt
rcll
add
loopne
rcr
xchg
mov
cmp
les
sbb
es
shll
dec
ret
out
repz
out
jbe
leave
les
dec
jnp
hlt
ficoms
movsl
mov
shll
inc
out
mov
daa
leave
test
cmp
sbb
sbb
or
sahf
inc
aaa
ret
dec
out
push
aas
pop
push
lret
dec
and
push
arpl
xchg
push
fistl
pusha
shrb
mov
ljmp
out
cmpsl
inc
ds
pop
cmp
sbb
stc
cltd
bound
and
cmc
scas
pop
xchg
outsb
mov
hlt
addr16
xor
ret
jmp
or
push
dec
cwtl
and
je
push
pop
in
and
xor
mov
adc
add
sahf
mov
push
in
or
ss
push
cmp
xchg
mov
test
dec
cwtl
insb
push
jno
cmpsb
js
xchg
pop
int3
xchg
jnp
and
faddp
mov
mov
imul
cmp
jmp
dec
lret
push
jb
or
sbb
loopne
sub
dec
sub
faddp
out
adc
fs
xchg
push
cli
mov
push
lds
push
push
and
int3
loope
inc
jne
add
shr
daa
adc
inc
test
fwait
pop
pop
mov
into
inc
mov
jle
rorb
bound
test
imul
jno
ret
ret
push
pop
xorl
xor
pop
sbb
inc
push
rorl
mov
loope
cmpsb
jne
mov
mov
xorl
cmp
imul
mov
subb
aam
pop
inc
mov
add
ja
jg
sti
sub
shrb
les
jl
cmp
inc
cmp
jg
cs
lcall
dec
xor
fwait
lock
jmp
sbb
pushf
dec
sbb
cmpsb
cld
orb
xchg
push
in
dec
pop
pop
stc
sub
or
cmp
daa
sar
cmpsb
or
jno
ret
or
push
inc
xor
mov
in
insl
ret
pop
xor
lods
es
mov
add
dec
mov
addr16
cmp
cmp
jg
mov
xchg
adc
dec
sbbl
inc
mov
push
sub
add
stc
test
pop
outsl
xchg
dec
xchg
mov
xor
or
movsl
pop
into
test
loopne
gs
pop
test
test
pop
sbb
enter
je
push
sub
pop
pop
or
mov
push
and
icebp
adc
and
std
mov
or
daa
outsl
adc
les
in
sbb
cmpsl
and
insl
sub
cltd
bound
xchg
sbb
mov
pop
jp
testl
and
in
adc
call
scas
repnz
out
ljmp
arpl
outsl
cld
xchg
cmp
cmpsb
aaa
inc
add
out
and
dec
xchg
and
or
jle
adc
mov
fstps
mov
xchg
lahf
bnd
in
cltd
mov
fcomps
ret
sti
aam
rcll
mov
das
int
aas
fincstp
out
lock
adc
jmp
pusha
movsb
pop
scas
aad
shll
enter
test
mov
cmp
test
mov
jns
add
push
repnz
sub
push
jns
lea
sbb
fmull
mov
or
dec
pusha
dec
and
dec
mulb
push
stos
imul
dec
push
jne
dec
int3
cmpsl
movsl
push
xor
popa
xchg
push
movsl
sti
dec
pop
xchg
inc
xchg
sar
mov
lock
in
cld
roll
iret
fsubl
mov
mov
imul
das
inc
and
repnz
aam
adc
jmp
cmc
out
or
adc
push
data16
int3
adc
xchg
loopne
push
lods
mov
push
dec
lock
mov
jno
jecxz
adc
or
pop
sti
pop
lcall
bound
dec
lds
mov
jmp
sub
and
cmp
out
out
dec
dec
pop
push
jle
loopne
push
testb
adc
mov
sbb
test
push
movl
lret
movsb
rol
inc
outsb
sbb
sti
bound
imul
loopne
fisubs
sbb
jg
pushf
pop
push
mov
mov
ljmp
sbb
mov
adc
lods
nop
inc
stos
xchg
add
sub
mov
repnz
xchg
jge
cmc
fdivrs
cmp
loop,pt
mov
mov
sub
xchg
push
cld
mov
adc
ret
lea
cmpsb
nop
mov
cmpsb
out
xchg
xchg
test
dec
int3
filds
adc
or
test
ret
iret
pop
lcall
add
cmp
push
loopne
mov
enter
pop
cmp
subl
or
pcmpgtd
fcoms
mov
test
jp
pop
notb
dec
movd
push
cld
decl
push
pusha
pusha
out
mov
jne
adc
std
pop
sbb
dec
cmp
cmp
fmul
out
xlat
push
inc
dec
xlat
daa
sbb
adc
mov
in
xchg
shl
dec
movsb
sub
xchg
cmpsl
xchg
cmp
clc
jl
aaa
je
push
dec
aad
adc
or
adc
cmp
sub
repz
lcall
mov
jg
insl
fists
lahf
cmpl
dec
sub
dec
cmpsb
xor
and
not
add
cmpsb
mov
call
cltd
stos
test
xor
inc
imul
push
into
fisubs
push
cltd
add
xlat
ja
xchg
mov
cmpsb
pop
sbb
dec
jbe
jae
sbb
push
jb
xchg
decl
mov
sbb
pop
mov
push
pop
pusha
xchg
xor
pop
or
iret
lcall
mov
xchg
flds
jmp
and
into
cmp
cmpsb
push
push
and
sar
int
aas
jmp
xchg
ja
cmpsb
sub
nop
bswap
call
and
adc
add
add
lods
enter
xchg
ja
sbb
pushf
adc
loop
push
out
pop
mov
clc
mov
cmp
popa
out
out
xor
pop
loopne
sbb
test
jo
cmp
and
in
aaa
leave
fidivrs
lcall
xor
push
jo
aam
dec
mul
sub
xor
mov
fsts
jp
pop
sbb
sahf
jl
repnz
push
mov
mov
or
loopne
dec
in
push
dec
mov
mov
pushf
outsb
test
fstl
test
arpl
xchg
sahf
fistpl
pop
das
or
pop
bound
push
xchg
punpckhwd
rorl
push
add
addr16
xor
xchg
jno
mov
xchg
dec
push
repz
sub
jno
ret
fmul
push
int
scas
dec
mov
call
addr16
js
pop
into
dec
sbb
cmp
xchg
cmp
jno
mov
and
mov
repnz
mov
or
mov
jmp
xchg
dec
outsb
inc
sbb
mul
and
mov
fsubr
inc
rclb
or
push
cwtl
ret
aaa
neg
out
das
repnz
xlat
cmp
ficomps
dec
fildll
push
lahf
mov
int3
jecxz
test
gs
nop
push
adc
call
insb
mov
imul
add
bound
mov
fisubl
xchg
inc
insb
push
push
push
or
imul
scas
cmpsb
jb
scas
lret
fs
out
mov
cmpsb
push
test
std
call
jle
jge
adc
mov
mov
mov
pusha
fidivs
insl
mov
pop
push
pop
test
fimuls
iret
xor
pop
mov
iret
inc
mov
mov
cmp
mov
mov
mov
mov
cmpsb
dec
addr16
dec
push
add
gs
xchg
pop
lret
popf
ljmp
ljmp
jns
adc
sti
decl
les
push
inc
xchg
mov
idivb
enter
pop
loop
mov
xchg
lds
sub
loopne
fsubrl
cltd
aaa
lahf
repnz
inc
in
and
pop
mov
dec
cmpsb
adc
andl
xchg
jle
testb
imul
shl
jbe
mov
pop
ss
sbb
cmp
or
clc
xor
adc
ja
mov
mov
das
dec
jge
jno
out
and
xor
pop
js
ja
ret
mov
das
adc
out
push
loop
mov
dec
dec
adc
rcl
mov
pop
xchg
cwtl
lret
fdivl
xor
int
sbb
insl
mov
shlb
mov
push
mov
lock
sub
or
jp
addr16
btl
hlt
shl
lret
sbb
cli
mov
mov
jns
mov
sbb
xor
movsb
js
xor
std
mov
mov
mov
ficompl
push
xlat
cmpsb
outsb
cmc
mov
jl
stos
sub
test
cmp
jbe
cmp
mov
mov
inc
xlat
and
push
or
in
sbb
add
mov
xor
mov
xor
icebp
push
dec
jl
hlt
les
ret
mov
or
jle
jg
mov
xchg
or
pop
push
sub
jnp
push
or
jmp
sbb
adc
mov
aam
fdivrp
adc
xor
mov
rorb
fcoms
lods
rclb
mov
aam
test
out
insb
sahf
insb
sahf
andb
xchg
push
mov
and
sti
cs
xchg
mov
xchg
ja
daa
scas
and
sub
cmp
std
std
sub
addr16
jnp
scas
pop
jmp
xchg
push
mov
xchg
xchg
testl
sbb
mov
push
fldl
jge
push
mov
xor
dec
popf
insb
lahf
dec
dec
cmp
lock
shll
mul
test
lret
mov
fstl
insl
cmp
imul
cmp
icebp
pop
xchg
pop
mov
lods
imul
shrl
mov
inc
je
inc
fucomp
out
mov
loopne
xor
mov
mov
clc
adc
aaa
mov
test
cmp
sar
xchg
out
call
mov
std
mov
jbe
clc
inc
fwait
clc
ja
and
push
jmp
cwtl
inc
dec
pop
or
adc
and
sbb
mov
in
outsb
adc
stos
movsb
cmpsl
mov
mov
imulb
push
bound
out
test
push
rcl
stos
push
fs
cmc
cmp
je
dec
lahf
cltd
lret
insb
cmpb
lods
bnd
or
movsb
ss
in
clc
daa
adc
xor
lahf
dec
pop
dec
mov
mov
inc
and
cmp
xor
cmpb
jne
test
scas
hlt
andl
out
inc
out
and
ret
xor
mov
frstor
xor
ret
add
add
dec
nop
cs
sbb
push
mov
clc
addr16
mov
les
daa
mov
jle
lds
std
sub
xor
imul
cmp
cs
pusha
lods
and
mov
inc
fcompl
adc
inc
push
and
xlat
sbb
es
scas
add
movsb
ja
cmp
imul
mov
inc
mov
xchg
mov
jp
fistl
out
inc
xchg
mov
push
sbb
sbb
mov
je
or
dec
test
jbe
xor
mov
dec
shlb
test
in
xchg
adc
or
xchg
nop
mov
sbb
inc
jno
mov
incl
and
dec
fnstsw
push
dec
push
out
mov
stos
jle
out
and
dec
movsl
ljmp
aaa
inc
adc
in
loop
test
insb
adc
insb
imul
xorb
xchg
dec
dec
lcall
pop
xchg
xchg
mov
cmp
ja
shr
aam
mov
popa
adc
inc
pop
loop
dec
filds
sti
push
lahf
lods
xchg
push
aam
cmp
psrlw
inc
push
lea
lcall
movsb
pop
pop
add
pop
push
rorb
gs
jle
cmpsb
push
out
and
incl
stos
add
adc
std
and
lret
cmp
push
cmp
in
loop
dec
mov
aaa
adc
jns
sub
mov
leave
out
aam
inc
inc
cmp
jmp
je
xor
hlt
cmpsl
out
roll
mov
inc
or
into
and
es
xor
xchg
dec
pop
xchg
mov
dec
sbb
inc
dec
xchg
out
movsl
fisttpll
pop
es
push
push
inc
cmp
mov
test
xchg
xor
cwtl
lods
insl
dec
or
in
cmc
fcompl
pop
add
xchg
jb
cmp
sbb
mov
push
sbbb
fimull
rcrb
pop
adc
cmp
mov
les
and
add
add
sbb
xor
cmp
aam
sbb
dec
xor
shll
mov
and
shlb
fcomip
repz
repnz
bound
jo
stos
stos
out
mov
pop
imul
movsb
or
inc
dec
testb
inc
and
add
mov
add
test
cli
scas
pop
xor
mov
sub
lods
and
inc
insb
ret
mov
add
or
outsb
dec
fisubrs
popa
push
das
sub
push
imul
xor
in
gs
add
push
int
jo
loopne
daa
mov
js
test
std
repnz
pop
mov
push
cmc
inc
mov
movq
fimuls
ret
mov
pop
in
test
inc
jl
mov
dec
inc
incb
cmp
add
in
mov
lods
ret
das
lds
bound
mov
xor
enter
dec
mov
aas
jp
cli
mov
scas
adc
adc
xor
or
stos
sbb
popa
mov
cmovb
push
mov
cmc
push
pop
cmp
sbb
cmp
in
aaa
loop
mov
mov
mov
orb
jbe
inc
jp
repz
outsb
fstpt
xchg
mov
int3
lds
inc
sub
jo
jge,pt
mov
adc
add
mov
enter
lock
push
roll
into
xchg
adc
jbe
adc
add
scas
xchg
scas
xlat
imul
push
pop
loopne
cltd
icebp
mov
sbb
xchg
xor
xor
sbb
mov
push
sub
icebp
mov
push
push
sbb
or
mov
pop
ja
inc
adc
push
shlb
jl
loopne
outsb
jno
sbb
jns
out
push
mov
jge
dec
mov
cmpl
jae
mov
cmp
mov
sti
jns
lods
fisubl
adc
xor
in
push
sub
dec
into
mov
repnz
sub
testb
cmpsb
mov
jo
sti
fsubs
imul
inc
sbbl
mov
cltd
loopne
push
mov
push
xchg
cwtl
pushf
lret
setb
movsb
sbb
jo
ja
sti
les
mov
and
cmp
out
ficomps
outsb
xor
pop
cwtl
lods
jl
adc
and
mov
jl
adc
jne
outsb
or
cmp
inc
xchg
cli
in
pop
int
cmp
pop
inc
adc
xchg
call
repnz
faddp
fisubrs
into
out
punpcklbw
mov
mov
ret
je
imul
push
mov
jp
or
xchg
or
cmp
pop
jg
mov
xchg
fbstp
js
test
lock
stos
imul
loope
xor
shrl
push
dec
push
movsl
push
pop
aas
cltd
or
adcl
dec
adc
pop
xchg
pop
xchg
fisubrl
fst
pop
loopne
das
int
jae
mov
xchg
fldcw
jg
adc
jecxz
inc
vmwrite
lahf
xchg
jmp
enter
mov
adc
xor
cmc
xchg
dec
add
popa
add
es
jns
sbb
push
fnstenv
orl
xlat
into
cmp
scas
roll
adc
and
movsl
or
mov
inc
mov
movsl
or
enter
add
fisttpll
mov
jne
test
in
pop
test
jns
pop
cmp
sub
and
sbb
dec
push
popf
and
rcrb
pop
repnz
sub
pop
inc
or
jns
jae
jae
lods
pop
push
les
xor
push
adc
lock
std
shll
das
aas
inc
cmp
or
jae
mov
pop
test
lock
pushf
in
xchg
mov
pop
lds
or
lea
pop
lds
lods
sbb
dec
lahf
divb
push
in
mov
cmpsl
adcb
les
iret
cld
fadd
lds
jb
daa
add
test
setne
pop
out
mov
inc
cmp
ja
mov
pop
in
fisttps
sbb
sub
gs
sbb
push
inc
xor
out
mov
mov
in
jb
outsl
push
cmpsl
mov
mov
test
fcompl
mov
push
push
sti
dec
sbb
cmp
ret
or
xbegin
inc
add
mov
sub
jno
shrb
jmp
cmpsl
loop
jae
push
dec
shl
ljmp
push
arpl
ret
jnp
lock
scas
out
insb
bound
stc
mov
cltd
xor
or
inc
sbb
mov
lcall
cmp
mov
cmp
inc
call
rcrl
cmp
xor
mov
popa
adc
shrb
outsl
push
dec
jae
mov
cmc
xlat
addr16
mov
sub
scas
loopne
push
notb
test
shrb
es
cs
dec
or
lock
icebp
pop
popa
adc
and
mov
inc
sbb
sub
addr16
flds
lds
jnp
stos
mov
pop
xchg
jg
sub
xlat
daa
clc
xchg
mov
sahf
jg
jne
data16
lock
mov
inc
xchg
push
lret
add
sbb
mov
js
imulb
test
sub
mov
jae
fs
jne
ja
lret
mov
sbb
mov
scas
pop
cmpsl
lds
fwait
enter
add
xchg
add
dec
gs
dec
jbe
pop
into
addb
movsb
mov
xchg
sbbl
repnz
pop
bound
lret
das
cmpsl
test
sbb
lock
gs
push
and
xchg
push
mov
movsl
push
fs
push
adc
xor
cmp
call
fdivs
jno
addr16
jo
fdivl
leave
add
popf
cltd
adc
fiadds
clc
mov
sbb
jo
cltd
daa
xor
pop
jg
add
lds
mov
fcomps
stc
lds
dec
mov
jnp
sbb
in
pop
jp
enter
or
ret
popl
cwtl
rcll
and
mov
sub
push
roll
cmp
pop
in
mov
imul
movsb
xchg
ret
pop
mov
negl
lret
jne
lods
fstps
jo
pop
inc
dec
aam
ds
shlb
aas
sub
pushf
sbb
jecxz
insl
and
popf
add
adc
jmp
icebp
aad
or
ljmp
lock
jmp
cmp
mov
adc
into
add
dec
sbb
fisubrl
mov
adc
shll
lds
xor
mov
jl
push
xor
addr16
or
add
sbb
fildl
and
mov
test
lea
or
movsb
movsb
gs
xchg
inc
pop
fmull
and
mov
fcoml
xor
pop
and
out
push
pop
mov
jmp
push
cwtl
push
adc
xlat
in
inc
pop
jp
dec
pop
ds
sub
dec
cld
sarb
inc
es
pop
mov
push
imulb
xchg
mov
mov
jno
stos
sbb
xor
inc
insb
jp
mov
mov
fs
shlb
sbb
adc
leave
stos
sub
add
adc
add
rcrb
xor
jnp
je
xchg
jl
lahf
or
pop
sub
adc
cmp
out
push
or
push
inc
into
cwtl
push
pop
int
lds
fucomp
lds
test
push
cmc
mov
jno
and
fsubp
cwtl
insl
or
lcall
fs
xor
pop
fwait
mov
lcall
pop
mov
xor
sti
lock
frstor
hlt
mov
add
mov
dec
mov
jae
jo
daa
xchg
mov
xchg
negb
stos
repz
nop
or
push
lret
mov
jg
dec
jecxz
xchg
sti
imul
mov
push
xlat
pop
cs
lcall
xor
flds
sub
or
pop
mov
faddp
fwait
in
xor
push
sbb
insl
into
mov
pop
push
mov
popf
nop
rolb
test
aam
pop
jl
inc
popa
lds
cmp
mov
outsl
outsl
cmc
adc
and
dec
inc
add
mov
xchg
les
jge
mov
inc
xchg
cmpsb
pop
xchg
dec
sub
add
insl
adc
cmp
scas
jne
fsubp
movsb
in
leave
adc
adc
popf
je
mov
jae
mov
or
ret
clc
mov
mov
lahf
lods
cli
pop
fidivl
cltd
add
scas
dec
jno
pop
cmc
mov
mov
or
fwait
leave
xor
in
sub
dec
mov
fsubl
imul
ret
popa
stos
dec
and
mov
xchg
cmpsl
inc
add
ja
mov
arpl
jge
jmp
adc
mov
and
mov
scas
ret
xlat
jge
popa
dec
lods
cwtl
pop
mov
pop
js
push
stos
scas
jo
cld
mov
popa
shrb
and
xchg
mov
loopne
fwait
push
jbe
xchg
fistl
mov
xor
mov
jno
push
mov
and
aad
jl
inc
add
mov
popa
rcll
lret
sti
pushf
nop
mov
cld
test
cmp
cltd
dec
mov
outsb
pop
outsl
push
jno
adc
jbe
mov
lods
mov
xchg
fnsave
scas
movsb
cltd
ret
push
cmpsb
pop
mov
outsb
bound
lods
mov
xor
test
pop
popa
or
jnp
pushl
jae
aad
lret
pop
mov
mov
jbe
inc
popf
and
add
sub
mov
insb
fs
scas
or
xor
pop
push
or
xchg
sub
stos
idivl
cs
fdiv
lret
lahf
pop
push
xchg
mov
jo
xchg
inc
mov
jne
in
xor
enter
sub
sbb
test
addl
adc
or
data16
dec
mov
movsb
sbb
sub
and
popf
jae
je
mov
push
popf
mov
dec
cld
cltd
dec
aad
out
fwait
shll
andl
jae
mov
jecxz
pop
outsl
in
dec
and
and
push
add
jmp
popf
cmpsb
iret
cmp
mov
add
loop
cmc
sbb
fwait
int
push
push
cmp
jb
stc
push
jns
cmp
aam
outsl
call
iret
in
fsubrs
mov
into
imul
pop
jmp
lcall
outsb
lret
mov
inc
adc
and
stos
std
push
lcall
mov
pop
imul
sbb
jmp
push
pushf
rorb
in
loopne
loopnew
bound
jmp
or
js
movsb
fiadds
and
psrlq
xchg
js
pmaxub
loopne
fnstenv
imul
ljmp
gs
imul
mov
pop
daa
negb
dec
aaa
mov
ljmp
jge
adc
mov
mov
adc
cmpsb
add
adc
cmpsl
sub
jns
pop
cld
adc
add
mov
or
mov
jg
stc
push
xor
mov
mov
test
jbe
cs
das
sub
mov
jmp
push
push
insb
aaa
outsb
pusha
das
or
pop
add
or
in
lds
push
ljmp
adcl
or
add
cmpsl
test
cli
fdivrl
push
into
push
jl
xchg
jb
fisubrs
repz
in
scas
repz
xchg
xchg
mov
into
fwait
sbb
xorl
cmp
andb
cmpsb
ficoms
aas
push
dec
or
mov
insb
push
in
lock
dec
adc
nop
jns
xchg
jl
xchg
subb
add
push
cmpsb
jl
jecxz
and
adc
mov
lods
call
mov
sti
lahf
or
and
sub
xor
lahf
mov
push
enter
sbb
push
mov
outsl
test
jns
repnz
push
jns
mov
sarl
out
pop
dec
leave
dec
lret
and
fmuls
mov
jg
orl
jb
add
cmp
loop
or
es
inc
fcmovnu
push
jne
imul
rolb
push
inc
cltd
lods
mov
adc
push
pop
call
xor
sbb
dec
xor
mov
sub
and
jmp
jl
arpl
sub
lods
shll
js
js
cmp
jae
mov
lods
and
mov
push
clc
and
mov
jo
outsb
addr16
outsl
cltd
aaa
repz
adc
das
sahf
icebp
xor
test
add
lret
bound
orl
loop
adc
adc
and
jge
aas
and
stos
sbb
int
les
sub
jo
and
push
outsl
addr16
lea
or
les
stc
sbb
push
cmp
jne
fcoms
push
jg
lahf
pop
inc
fcomps
adcb
int3
iret
and
pop
mov
mov
sbbb
jp
add
pop
insl
or
xchg
or
fcomip
ret
rorb
or
pop
jb
cwtl
cmp
arpl
int3
fsubrs
aam
fcompl
shl
outsw
or
popa
mov
mov
dec
adc
mov
jmp
dec
testl
shrb
call
shll
pop
push
dec
jmp
and
sub
add
sub
lret
cmpsb
aaa
xor
jl
fwait
movsl
out
pushf
dec
nopl
or
and
scas
sbb
pop
jl
xor
popf
cmpsl
xchg
jl
xorl
sbb
in
in
ds
sbb
cs
jecxz
fistpll
push
lcall
mov
into
and
sbb
fwait
mov
ror
fiaddl
mov
mov
and
sub
jnp
sub
rolb
jge
iret
cmp
dec
insl
adc
andl
push
in
sbb
pushf
push
out
loop
call
call
pop
inc
loope
int3
out
lret
mov
mov
jg
andb
or
jne
inc
cmp
push
jns
xchg
lret
cmp
lcall
rcll
rcrl
jl
scas
lock
adc
jo
dec
or
cltd
arpl
andl
mov
mov
loopne,pn
outsb
xor
stc
fstps
fisubl
fisttpl
imul
jae
cs
mov
cld
call
sbb
movsb
fwait
add
fmull
cmp
sbb
jae
stc
cmc
sub
xor
mov
cltd
popf
pushf
sbb
lea
sub
jns
repnz
cmp
mov
cld
int
jb
cli
push
pusha
imul
cwtl
push
loope
mov
loope
fistps
fwait
mov
xlat
mov
xor
cltd
push
mov
aad
or
fwait
cmp
sub
clc
cmp
std
incb
xchg
sahf
push
mov
cmp
notl
xchg
in
or
addl
push
movsb
push
inc
arpl
dec
arpl
dec
adc
stos
dec
pushf
repnz
jns
and
lcall
inc
test
shll
scas
stos
cmc
add
cwtl
lods
sbb
add
scas
pop
xchg
mov
inc
lock
fidivl
pop
dec
sub
xchg
xor
push
cmp
out
xor
testl
mov
int3
int
int
rorb
xchg
movsl
test
cmp
cmp
cmp
pop
xchg
psubusw
lea
outsl
sarl
outsb
mov
and
mov
scas
jle
insl
pusha
sti
jae
xor
pop
push
add
ret
push
mov
idivl
aaa
and
jnp
ret
icebp
mulps
aam
stos
cs
dec
push
push
push
push
out
daa
jecxz
or
divb
or
jno
std
add
cwtl
mov
and
inc
push
scas
dec
data16
sbb
test
cmp
xchg
movsb
fwait
outsb
sub
icebp
insb
std
cmp
js
sbb
stos
icebp
mov
and
into
xchg
push
int3
and
popf
cmp
mov
scas
and
leave
sbbb
add
mov
sbb
cmp
mov
adc
or
dec
push
faddl
jmp
cmp
shll
in
jo
stos
sbb
mov
xchg
stos
ljmp
jnp
jp
cs
adc
xchg
in
jmp
xchg
dec
jg
mov
popa
adc
pop
adc
sbb
mov
adc
aas
mov
adc
mov
push
add
rorb
stc
leave
pop
add
jmp
mov
lds
cmp
negb
aad
mov
jmp
addr16
cmp
adc
cli
cwtl
in
xlat
jno
pop
cmpsl
and
push
inc
or
lret
popf
lds
push
pop
inc
or
repz
das
ss
fldenv
inc
fiaddl
mov
orb
cld
popa
add
imul
and
inc
sub
arpl
mov
jmp
cmp
nop
sub
jle
push
dec
movsb
call
shll
and
add
cmpsl
int
lahf
std
and
adc
insl
jecxz
push
filds
push
inc
or
mov
add
sarb
fadd
pop
stc
cwtl
test
dec
pop
in
add
in
dec
mov
pop
push
pop
sbb
and
push
pop
jo
insl
ja
nop
ljmp
push
lahf
push
dec
test
stc
sub
fs
test
lock
outsl
jmp
sub
repnz
cs
fidivrl
stos
jmp
ret
add
add
sbbb
fisttps
jmp
shll
subb
xor
dec
addr16
nop
adc
leave
xchg
adc
cwtl
mov
cmpsl
and
mov
add
scas
mov
shr
sti
add
dec
icebp
jne
call
adc
sbb
sbb
adc
outsl
add
sbb
jae
cmc
mov
adc
xchg
cmc
sarb
mov
test
scas
rorl
scas
or
pop
add
enter
mov
cs
pop
jo
adc
not
mov
pop
sub
je
mov
dec
stos
push
cmp
jmp
and
jb
je
sub
pop
jb
push
data16
mov
dec
getsec
adc
and
sub
push
push
daa
cmp
mov
inc
mov
lods
push
push
mov
inc
sbb
add
mov
pop
cmpsb
sqrtps
mov
loop
ds
imul
shll
pop
jle
add
mov
lods
rolb
clc
leave
pop
call
jmp
test
inc
scas
ljmp
adc
stos
jns
dec
lock
jp
add
or
dec
jbe
enter
es
pop
cwtl
adc
idiv
pop
mov
mov
mov
jl
loope
jl
mov
je
mov
lea
or
arpl
stc
data16
call
or
pop
lahf
cmp
xchg
negb
xchg
jge
sub
adc
pop
ret
je
pop
pop
mov
cld
push
push
or
outsl
xor
dec
lock
fidivs
enter
shll
fwait
ja
jbe
xor
and
jbe
repnz
xchg
xorb
hlt
adc
jl
xchg
push
sub
aaa
pop
dec
or
jne
or
mov
dec
aas
fucomip
fucomip
das
jnp
cmp
add
or
enter
jnp
mov
aas
adc
push
cmpsb
jb
dec
leave
add
adc
adc
popa
jg
jecxz
jns
lahf
cmp
mov
lcall
popf
arpl
jl
sub
push
ss
movsl
cmpsl
adc
loope
lcall
dec
mov
cmp
out
repnz
mov
test
fmul
cmp
adc
sbb
jnp
jae
fcmovne
sarb
test
sahf
int
scas
xchg
sbb
sbb
mov
sti
push
xor
jl
loop
out
iret
lret
mov
daa
pop
mov
inc
mov
ficompl
mov
jmp
insb
cltd
mov
ljmp
fucomip
pop
fstps
xor
mov
dec
add
jmp
push
adc
rolb
mulb
lds
clc
jge
xor
mov
push
mov
pushf
adc
pop
inc
rcr
rcrl
push
cmpsb
mov
in
push
fs
mov
scas
push
lcall
jno
inc
mov
inc
add
ret
fcompl
cltd
das
rorl
aas
mov
cmp
xchg
pop
ret
enter
dec
fsubrl
xor
aas
and
repnz
inc
push
jnp
imulb
jbe
fmulp
pop
fstpl
lock
clc
push
jno
mov
ret
jp
imulb
pop
pusha
xlat
dec
add
pushf
aad
pop
imul
inc
cmp
jns
ret
hlt
out
or
cmpsb
mov
jg
mov
int3
je
mov
bound
inc
lock
mov
and
imul
mov
cmp
xchg
push
popa
repnz
orl
add
inc
scas
adc
or
xchg
scas
mov
std
mov
sarb
je
fidivrs
mov
shlb
inc
mov
sub
stos
mov
stos
mov
cmp
and
mov
adc
int3
andl
xor
jecxz
pop
ja
fldcw
fidivs
out
xor
dec
jnp
jmp
arpl
sub
xchg
out
fdivs
jno
fcoml
fbstp
ss
sbb
cli
xor
sbb
or
sbb
loop
lea
push
add
daa
cmp
pusha
pushf
movb
mov
imul
aaa
mov
cmpsb
push
sbb
xlat
and
inc
adc
sub
stos
pop
repnz
add
cmp
sbb
xor
lock
lods
lcall
push
xchg
cs
int
aas
cmp
popa
pushf
pushf
sahf
jge
incl
es
inc
stos
in
shll
sub
in
mov
inc
mov
or
leave
js
ja
push
push
out
inc
mov
mov
inc
mov
cltd
jns
fildll
inc
lods
vmovntpd
pop
xchg
movsb
hlt
pop
xorl
pop
mov
xchg
mov
cmp
jo
and
out
push
jb
pop
je
mov
arpl
bound
fisttpll
push
cmpsl
loopne
out
or
push
dec
pop
in
ret
lods
in
movsl
ds
cmpsb
sti
dec
mov
and
xchg
and
int
xchg
outsb
sub
lds
mov
aas
xchg
sub
push
push
lahf
shr
and
push
jne
pop
cld
xor
or
cwtl
jp
cltd
ret
mov
cli
shrb
out
push
js
dec
mov
daa
add
cld
jo,pt
scas
mov
mov
sbb
lds
xchg
sahf
mov
xlat
jno
xchg
mov
dec
clc
sub
mov
or
ret
lahf
xchg
dec
add
pop
stos
lret
push
inc
iret
or
fnstenv
inc
int3
out
pop
in
mov
mov
adc
sub
popf
mov
push
dec
adc
fs
stc
ljmp
lahf
data16
dec
xchg
cld
out
jns
pop
aaa
and
test
sahf
xor
cmp
mov
xlat
jg
or
xor
xlat
lods
out
adc
mov
shll
shrb
add
adc
xor
or
cmp
repz
stos
or
mov
sub
daa
sbb
jecxz
pop
dec
cmp
cmp
add
xor
ds
mov
mov
repnz
jno
test
xchg
je
out
push
imul
or
sahf
sub
shrb
idiv
sbb
fdivrl
mov
or
adc
or
je
mov
enter
push
dec
adc
or
out
push
jb
dec
xor
jmp
movsl
movsl
jl
je
imul
aas
add
cmp
adc
xor
pop
cmpsb
jnp
lods
cmp
inc
xchg
jl
out
repz
lret
jns
dec
cmpsl
push
xor
pop
mov
movsb
dec
sahf
lcall
mov
and
xor
xchg
insb
out
mov
mov
cmp
stc
iret
mov
jo
nop
lods
pop
jno
mov
insb
jae
jae
inc
cmp
mov
pop
lds
xor
hlt
jg,pn
pop
lcall
pop
mov
lock
lret
mov
xlat
adc
ret
sub
xor
loopne
jo
pusha
cmp
or
and
sahf
orb
scas
scas
pop
jl
and
ss
cmpb
dec
cmc
inc
mov
mov
cmp
sub
fnsave
pop
xchg
inc
loopne
xchg
jmp
xlat
pop
sarb
xlat
push
xchg
inc
mov
test
movl
add
pusha
dec
jmp
push
xchg
loop
jnp
mov
stc
test
cwtl
sbb
mov
notb
sub
sub
xor
xor
fbstp
in
das
psubusb
pop
xor
pop
lret
fsts
fisttps
pop
mov
jl
inc
lret
add
pop
jb
push
or
jg
sub
adc
mov
mov
jmp
xchg
leave
int3
popf
cmpl
vpshuflw
insb
jp
xchg
add
cmp
repnz
inc
icebp
call
push
cmc
pop
idivb
repz
cmp
repnz
push
jmp
ja
and
adc
leave
mov
mov
test
cld
sub
xor
int
andb
pop
mov
fstp
push
mov
or
dec
and
imul
out
push
lock
fisttpl
lods
rolb
testb
sbb
sbb
outsl
xor
ds
push
sub
cmp
lahf
lahf
inc
xchg
daa
lods
sbb
mov
enter
sbb
pop
je
pusha
mov
ds
js
pop
sbb
mov
jg
jg
pushf
and
cmp
popa
aaa
jne
xchg
jp
cmp
movsl
shrb
mov
sub
mov
sbb
mov
xor
push
add
das
pop
or
mov
mov
ret
je
push
cmp
ds
dec
fisubrs
adc
mov
dec
mov
not
sub
in
jg
pop
pusha
dec
je
and
pop
cmp
xchg
mov
lret
popa
gs
xchg
hlt
pushf
mov
add
mov
cmp
gs
sbb
arpl
pop
push
pop
rol
xchg
mov
rcrl
cmp
adc
xchg
jle
imul
fcoms
jne
test
cmp
mov
sahf
add
xor
inc
fs
call
loope
fwait
hlt
dec
iret
dec
sub
mov
mov
mov
dec
push
ljmp
pop
mov
lods
push
cmp
je
lods
iret
inc
outsl
aam
sbb
jp
das
rorb
imulb
xlat
ss
js
jge
pop
das
dec
pusha
cmc
cmp
cmpsb
push
mov
aad
and
inc
push
cs
lods
pop
int
pop
mov
popa
leave
adc
pop
or
insl
pushf
inc
dec
cli
inc
pop
fs
xchg
sub
lret
xchg
and
pop
push
sub
mov
cwtl
call
adc
sub
test
movsl
jecxz
loope
or
popf
in
adc
out
aaa
lret
push
aas
cmp
jmp
loope
push
adc
cmp
fsubrl
daa
lahf
xor
popl
xchg
xor
pop
sub
sti
sbb
pop
mov
aas
cmp
pop
mov
mov
loop
mov
jns
dec
jp
pop
test
scas
sbb
aas
add
shll
mov
xchg
sub
jns
and
daa
scas
inc
mov
fxch
jno
xchg
push
lahf
add
and
js
clc
lret
inc
cmpb
dec
sbb
imul
pushf
cli
dec
fldcw
lods
out
jne
inc
jno
mov
and
mov
xlat
push
out
pop
add
xchg
ficoml
lock
fs
xchg
decl
inc
mull
lcall
add
mov
push
adc
lea
jb
incl
pop
outsl
cli
dec
pop
xchg
or
pop
cld
add
lret
push
mov
or
add
jecxz
loope
pop
mov
cwtl
dec
jo
js
std
mov
adc
mov
test
adc
sub
sub
jl
imul
mov
add
sbb
or
push
mov
std
xchg
mov
adc
jle
xor
push
es
ficoms
dec
imul
push
push
push
in
add
mov
aaa
push
dec
aam
lret
ja
shll
sub
mov
repz
or
icebp
dec
js
stos
in
aam
repz
xchg
loop
lock
pusha
test
or
mov
idiv
mov
mov
shld
imul
mov
ds
xchg
push
inc
test
repz
mov
mov
jb
gs
mov
inc
dec
adc
add
rclb
call
xchg
inc
jle
dec
fisubrl
sub
sbb
das
sub
cmp
fisttpll
int3
std
pop
pop
pop
sub
mov
push
sbb
adc
daa
sub
cmc
sti
add
mov
push
adc
mov
fcmovb
inc
inc
mov
jb
sub
push
nop
sbb
inc
xchg
mov
jns
out
pop
dec
and
push
sbb
and
sub
cmc
cmpsl
std
adc
inc
dec
or
movsl
xchg
popa
cmp
lret
mov
or
add
pop
push
sti
loopne
xchg
pop
in
and
outsb
aam
aad
into
aaa
sub
mov
mov
in
rcll
mov
fstps
and
mov
btcl
in
outsl
orb
out
inc
sbb
gs
iret
pop
aas
stc
inc
cmc
js
jg
and
scas
xchg
push
lock
stos
jb
inc
std
sub
sti
dec
icebp
inc
cmp
loope
out
jns
add
fmul
pop
jecxz
adc
mov
es
add
pop
inc
pop
push
mov
dec
mov
xchg
mov
int3
iret
dec
push
out
lods
lahf
scas
pop
pop
aas
loop
pop
mov
add
ss
aam
or
fidivrs
push
aas
mov
mov
pusha
pop
pop
add
xor
in
push
fcmovnb
xor
mov
pop
lods
mov
int
sti
mov
mov
addr16
sub
dec
push
mov
push
fsubrl
popf
inc
icebp
ldmxcsr
push
iret
in
fisttpll
xchg
add
int3
dec
adc
andb
pop
push
or
js
dec
adc
xchg
pop
test
aad
and
pop
sub
pop
dec
out
stc
lods
int3
dec
xchg
ror
jae
and
push
jl
aas
push
or
adc
inc
aas
negb
and
int3
es
jp
mov
pop
cmp
mov
sbbb
jnp
popf
adc
xorl
bound
lds
jecxz
xor
orb
into
sbb
mov
cmp
ret
jl
xor
sbb
cmp
lret
pushf
inc
mov
cli
push
push
int3
addr16
je
mov
adc
add
dec
dec
mov
fwait
and
mov
dec
push
ljmp
imul
mov
push
fadds
jl
mov
int3
jg
out
lds
jmp
ret
jle
in
fcomps
mov
scas
scas
push
pop
inc
add
bound
dec
in
dec
mov
gs
lock
push
das
test
shll
cmp
push
jp
jo
xor
and
clc
popf
dec
dec
xchg
push
or
push
sub
jns
scas
sub
ljmp
and
cmp
xchg
in
sub
jmp
mov
fists
sahf
jl
in
sbb
sub
xchg
cwtl
sbb
pop
sbb
lods
into
int
rorb
jle
orb
js
bound
repz
xchg
inc
adc
popa
mov
out
or
iret
sbb
dec
mov
jo
ret
hlt
mov
jno
xor
cmp
xor
cmpsl
mov
mov
sub
jmp
dec
hlt
inc
data16
xchg
fisubrs
andl
pop
push
je
aam
mov
xchg
lahf
jmp
sub
mov
adc
fcomps
pop
aad
pop
test
dec
nop
xchg
ficompl
and
xchg
cld
and
jl
xor
adc
adc
sub
pop
sbb
in
dec
adc
inc
insl
jb
cmp
aas
or
jns
mov
in
xchg
add
icebp
jne
rcrl
outsl
insl
inc
pop
pop
xor
jno
pop
js
and
jge
mov
sarl
or
jecxz
bound
pop
shlb
push
and
push
and
imul
mov
sub
imull
int
cmp
adcl
cli
add
lret
pop
dec
cwtl
lcall
xlat
mov
adc
leave
pop
adcb
push
loop
push
adc
test
icebp
js
fsubs
push
adc
pusha
sbb
scas
cltd
out
pop
add
xlat
dec
cmp
fldl
cmpb
mov
je
xchg
adc
mov
jmp
xor
sub
nop
inc
lcall
adc
mov
adc
adc
mov
pusha
mov
pop
outsl
sub
mov
jg
xchg
adc
cltd
push
lret
packssdw
loope
jle
insl
push
xchg
sbb
fsts
lock
pcmpeqw
orl
xor
or
dec
push
sbb
pop
xor
adc
sahf
pop
arpl
lds
in
int
jb
ret
in
pop
sahf
filds
pop
popl
sub
or
je
mov
cmp
inc
jae
fs
dec
mov
inc
insl
stos
xor
lahf
fwait
xor
mov
jle
scas
scas
cltd
push
xchg
push
movaps
cmpsb
xchg
fs
sbb
cmp
and
and
inc
inc
bound
sub
cmpsb
mov
test
mov
mov
jbe
inc
fs
lods
mov
loopne
cmp
sub
pop
daa
out
sbb
ret
enter
pop
push
xor
test
out
leave
mov
dec
and
xor
stc
int3
movsl
in
adc
ja
adc
sub
xorl
pop
int3
push
push
and
rclb
stos
int3
fs
les
xlat
sbbl
sub
push
mov
addr16
ret
sub
pop
pop
imul
xchg
jb
stos
fisubs
jmp
cmc
cmp
mov
in
inc
ljmp
add
lds
leave
push
jnp
jns
or
dec
rcrl
inc
cmpsb
loop
adc
std
jno
cmp
jmp
lcall
fwait
sarl
out
mov
int3
xchg
das
push
sarl
adcb
vphadduwd
or
xchg
pop
lret
icebp
xlat
movsl
xchg
out
cli
in
mov
int
jle
insl
je
lds
stc
mov
jecxz
cmp
outsb
jb
scas
xor
dec
popa
push
lods
push
xchg
sub
fs
dec
aam
xchg
lds
xor
add
xchg
shlb
sub
mov
push
cmp
pop
jno
xor
jno
outsb
pop
movsb
pop
fldcw
jecxz
cmpsb
xor
adc
dec
push
cmpb
cmp
inc
and
lock
frstor
pop
and
pushl
in
dec
add
enter
loop
in
nop
and
cld
xchg
dec
cmp
xchg
mov
cld
mov
jg
lahf
sbb
or
in
enter
outsl
jno
mov
cld
iret
je
xor
mov
sub
sbb
cli
push
mov
xor
aas
jg
push
inc
jp
xchg
dec
jnp
mov
cmc
jb
cmp
push
mov
fistl
ret
or
in
cld
mov
in
cmp
ret
jno
add
push
int3
int
pop
sub
loopne
bound
enter
arpl
jae
mov
mov
jmp
dec
push
mov
sti
outsl
scas
cld
or
inc
lahf
out
fldenv
sbb
inc
rcrl
cs
sub
or
rcll
outsb
dec
ja
mov
lods
not
aad
fwait
shrb
adc
or
loopne
dec
pop
dec
mov
pop
jg
jecxz
push
xchg
or
repz
fsubp
inc
bnd
cltd
dec
and
cmp
imul
fstl
scas
cmpsl
je
push
cmp
dec
mov
je
adc
stos
inc
mov
cmp
call
pop
xchg
out
cli
xchg
enter
and
movsl
push
icebp
mov
adcl
imul
cmpsb
out
jp
dec
lcall
mov
jp
pop
mov
jo
aam
ret
xor
es
and
lret
sbb
mov
push
mov
push
dec
add
cmpsl
cli
mov
fldt
int3
xchg
fimuls
sub
xorb
adc
mov
pop
in
pop
ret
inc
or
cmp
inc
roll
pusha
inc
cmp
mov
cmpsl
rol
dec
cs
lock
xchg
mov
cwtl
rcrb
outsl
punpckhdq
push
cmpsl
dec
add
mov
mov
mov
daa
pop
rclb
mov
push
jge
xor
pop
and
fmul
and
icebp
and
xor
test
ss
int
dec
jge
fldt
fcos
int3
pop
imul
jmp
aas
lret
arpl
ret
mov
mov
dec
xchg
test
repnz
nop
xor
push
shrb
push
mov
stos
mov
or
shl
cmp
xor
movsb
sub
cmpsl
enter
lods
into
cltd
sub
fstl
sbb
fstps
sbb
shr
fcmovnb
pop
mov
insl
scas
jne
mov
push
and
and
es
pop
inc
xchg
rclb
inc
sbb
mov
push
cmc
sbb
shll
add
lret
cmpsb
add
or
mov
cmp
pop
inc
push
dec
xchg
test
jmp
push
mov
add
jns
dec
ljmp
ljmp
adc
jecxz
cli
sti
dec
es
xchg
sbb
je
dec
push
adc
mov
rcll
cli
call
dec
inc
stos
ficoms
shl
jp
and
fisttpll
fstp
jb
xor
inc
out
arpl
lcall
cmc
adc
shlb
not
mov
xor
lret
and
inc
sub
ss
xchg
scas
imul
xchg
jp
sbb
dec
cmp
and
jns
and
lock
iret
push
jns
test
test
lahf
mov
cmpsb
add
xor
jle
or
xor
ficoms
jp
inc
xor
outsb
fldln2
xor
mov
pop
into
sahf
popa
jne
sbb
inc
addb
fsubl
mov
cmp
imul
mov
call
gs
inc
outsl
mov
js
cltd
inc
test
stos
jmp
aas
orb
jno
out
cld
push
aad
sbb
aad
sub
jae
jne
jecxz
test
inc
mov
idivb
inc
sbb
lea
xor
pop
ret
inc
es
aad
jp
mov
mov
ja
rcrl
push
dec
inc
outsl
or
cmpsl
pop
mov
mov
mov
adc
push
lods
pushf
and
push
cmp
dec
iret
daa
rcll
aad
hlt
xchg
mov
mov
mov
ss
or
xor
sbbl
rcll
sub
jns
stc
lret
jno
imull
cli
pushf
in
lcall
jnp
out
outsb
push
ds
pop
repz
xor
es
dec
add
push
lock
xor
inc
cmpsl
mov
or
jge
jns
or
popa
test
xor
shll
popf
mov
jge
jl
add
icebp
sub
sarl
sub
push
mov
mov
and
or
or
sbb
sbbl
xorb
ss
cld
gs
mov
pushf
mov
loope
fmuls
mov
pop
jns
push
popa
hlt
fimuls
adc
cmp
pop
into
mov
fwait
cld
jo,pn
push
pop
xor
xchg
mov
icebp
andl
and
sbb
and
cs
jne
dec
into
mov
xchg
and
push
push
call
push
movsl
jbe
sub
pop
cmc
shl
outsl
xchg
test
fcmovnb
mov
aam
pop
pop
inc
add
mov
xchg
pusha
and
jge
mov
stos
jg
mov
lods
aad
inc
xchg
int3
push
pop
inc
not
inc
inc
das
arpl
out
mov
pop
insb
adc
sbb
xchg
subl
in
cmc
mov
dec
fdivl
pop
pusha
cltd
imul
adc
adc
lea
sub
mov
cmp
inc
cltd
fdivrs
outsl
iret
mov
flds
lret
inc
dec
adcl
or
int
xor
add
mov
inc
out
push
pusha
es
dec
push
divl
mov
push
test
mov
sbb
push
xchg
mov
pop
adc
es
adc
mov
cli
xchg
xor
arpl
xor
push
lds
movsl
xchg
add
add
ror
fisttps
adc
cltd
pop
out
xor
pop
inc
fs
ret
mov
repz
les
mov
testl
lea
andb
and
pop
gs
adcl
inc
push
push
jp
cltd
js
faddl
pop
rcll
xchg
aas
push
push
xlat
lea
inc
rorb
fmull
test
pop
and
or
cmc
dec
test
into
call
push
idivb
xor
jo
sub
mov
push
ss
sahf
es
mov
cmpb
mov
out
sub
mov
hlt
mov
pop
arpl
sub
mov
and
aam
nop
pop
dec
jne
popa
les
push
jg
out
pop
movsb
pop
sbb
or
mov
lret
mov
je
mov
jo
or
fldenv
jmp
aas
cmc
mov
rol
ret
fs
or
push
inc
ljmp
notl
mov
mov
insl
pusha
xor
lahf
sbb
xor
ror
push
lcall
dec
xchg
mov
fbld
xchg
mov
fistl
dec
pop
mov
and
lock
xchg
xchg
xchg
rorb
push
jbe
xchg
sub
cmp
adc
cmp
adcb
movsl
cwtl
and
enter
cwtl
adc
and
jge
fidivrl
mov
cld
test
in
orb
sub
pop
adc
dec
mov
jmp
mov
mov
fmuls
inc
jecxz
sbb
icebp
mov
pop
and
loopne
pop
lret
daa
xor
xchg
add
outsl
cmp
ret
push
leave
scas
enter
call
push
jno
push
lods
or
pusha
mov
push
aas
shll
filds
inc
add
cmpsb
xor
mov
and
mov
arpl
add
push
sub
rol
lret
mov
repnz
lea
dec
jns
fisttpll
loop
pusha
xchg
sbb
adc
fdivrp
jecxz
hlt
lcall
imul
shrl
pop
xor
push
mov
pop
xor
and
sbb
mov
pop
cmpl
in
aaa
xchg
xor
sub
hlt
adc
jmp
adc
shll
and
xlat
nop
push
cmpsl
adc
sahf
inc
int
loopne
push
mov
mov
push
aam
in
popf
cs
xchg
mov
xchg
mov
sub
fadd
hlt
lret
mov
les
pushfw
dec
pop
pusha
push
sbb
mov
inc
dec
fdivl
cli
sahf
or
insb
xlat
repz
adc
sbb
dec
or
xchg
add
neg
lret
xor
in
push
fildll
sbb
aad
int
xchg
push
xchg
add
cmpsb
jo
lahf
lret
cmp
mov
pop
mov
adc
icebp
divb
xchg
pusha
adc
icebp
mov
mov
lds
pop
mov
pop
adcl
xchg
mov
andb
xacquire
imul
daa
test
mov
fsqrt
imul
insb
xchg
pushf
imul
out
jmp
int
mov
imul
test
sarb
clc
pop
sbb
xor
xchg
mov
add
mov
leave
aas
stc
vandnps
pop
pop
incl
cmpsl
imul
pop
loope
je
pop
jno
dec
mov
aam
imul
dec
mov
test
out
pusha
lahf
push
movsl
hlt
mov
ds
xchg
rcll
lret
mov
outsb
add
lds
pop
pushf
std
repz
test
pop
loope
mov
fbld
jl
fiaddl
push
test
inc
push
popf
mov
and
mov
ljmp
cmp
lret
sbb
rcrl
push
xor
lods
movsb
fsubrs
orb
lods
cs
cmp
sbb
jnp
mov
mov
addb
jbe
mov
test
mov
mov
stc
mov
and
data16
pusha
inc
push
pusha
dec
jp
lcall
cmc
mov
pop
xor
inc
or
jge
and
and
jge
cmp
xchg
fildl
mov
stos
rol
inc
hlt
loope
mov
out
stos
cmpsl
pop
or
js
jmp
pop
or
jp
dec
jno
mov
lods
cld
fwait
sub
pop
fs
outsl
inc
aaa
lds
imul
cld
push
imul
cltd
mov
outsb
and
mov
sub
les
jmp
jo
push
inc
xchg
adc
or
imul
ret
jae
or
dec
loopne
push
pop
push
test
imul
pop
repz
xchg
xchg
xchg
inc
sti
add
out
in
mov
jo
pusha
cmp
cmp
ret
sub
xchg
sbb
mov
dec
aam
int
lds
mov
pop
test
int3
adc
jecxz
fiaddl
out
mov
shrl
stc
jb
in
iret
adcl
test
xchg
lods
push
cmp
mov
ja
jb
dec
notb
xchg
enter
xchg
inc
jp
xchg
shlb
lret
sar
add
jb
mov
pop
leave
and
add
xchg
cmp
arpl
push
outsb
sarb
adc
and
popa
xchg
xor
je
icebp
push
adc
push
mov
fnstsw
fs
dec
dec
mov
mov
rcrb
or
push
push
dec
cmp
xchg
stos
push
lds
mov
mov
adc
insl
cmc
imul
adc
mov
and
int
aam
call
xchg
pop
or
sub
sti
test
pop
push
rcr
testl
inc
sbb
divb
loope
cmp
loope
addl
enter
bound
xchg
cmp
orb
sub
push
jbe
inc
out
mov
and
sbb
in
mov
cmp
inc
lret
addr16
sub
in
jge
add
cwtl
jmp
aas
or
mov
loopne
add
lods
repnz
pop
jl
mov
lret
and
sbbb
xchg
roll
and
sub
int3
xchg
sub
in
dec
cmpsb
dec
sti
dec
popf
movsb
mov
pop
pushf
fsubrs
mov
dec
test
les
fnsave
aaa
lods
sbb
pop
icebp
cmpb
popf
dec
xchg
cmp
xor
fistps
movl
mov
test
jl
mov
ja
adc
fcomps
insb
mov
pushf
add
xlat
loop
add
cmp
popf
xorb
add
and
outsl
mov
cwtl
mov
pop
repz
lock
imul
rorb
mov
sbb
adc
xor
dec
pop
test
shl
jg
in
repz
add
nop
push
inc
fisubl
mov
push
cmp
pop
add
jno
inc
cmc
sbb
xor
pop
sbb
scas
cltd
push
pop
dec
sarl
jp
lcall
enter
loopne
fwait
sbb
jp
or
adc
inc
push
and
sbbl
imul
jnp
mov
fidivrs
sahf
and
sub
cltd
xchg
jl
es
mov
ja
cmp
imul
sbb
lahf
xchg
popf
outsb
inc
clc
and
fists
sub
mov
ss
add
pop
test
subl
jmp
or
fwait
dec
ss
mov
arpl
insl
or
mov
dec
repnz
adc
ss
mov
add
adc
sahf
adcb
jmp
sarb
out
cmp
mov
or
add
xchg
inc
filds
pusha
cmp
push
or
cwtl
jecxz
sub
push
pop
ror
push
jge
mov
or
insb
mov
cmp
and
adc
mov
mov
lods
dec
inc
dec
int
mov
ljmp
scas
xchg
and
mov
cld
ret
cmp
or
sarl
pusha
jae
and
jnp
mov
jbe
jbe
sahf
cmp
and
andnps
xchg
or
call
adc
inc
repz
cmpsl
jbe
out
in
adc
and
jbe
ret
test
mov
shlb
pop
cmp
sbb
pushf
xchg
jge
push
int
rcr
mov
int3
leave
push
or
mov
ficomps
popf
popf
mov
mov
jg
nop
adcb
imul
mov
xor
xor
push
aam
jg
pop
pop
or
ljmp
ret
xchg
mov
loope
sbb
mov
sbb
test
mov
push
pushl
fcoml
out
jge
jns
mov
ds
sbb
int
ret
inc
das
xchg
xor
fs
insb
pop
scas
push
ret
pop
clc
mov
sbb
jle
fdivl
dec
addr16
je
xchg
sti
add
push
push
inc
ljmp
in
imul
sbb
lock
call
push
cmp
xchg
out
cmp
pushf
lcall
aaa
mov
iret
bound
lcall
pop
inc
pop
testb
in
stc
into
shlb
repz
sahf
fdivrs
jecxz
xchg
inc
xchg
cmpsb
popf
or
mov
aam
or
ds
jge
dec
rcll
aam
sub
dec
mov
lock
out
aam
sub
cmp
and
and
mov
add
push
jg
js
repnz
xor
add
mov
pop
sub
cmpsb
psubq
push
adc
sub
imul
fcomps
xor
outsl
mov
int
dec
mov
mov
push
cmp
les
pop
mov
jp
push
push
push
nop
or
sbb
testl
gs
mov
aad
mov
and
aaa
push
mov
sbb
das
mov
mov
nop
adc
cwtl
pop
shl
leave
imul
fldl
lahf
dec
stos
in
xchg
ljmp
aas
sbb
outsl
jnp
mov
or
mov
pop
add
fistps
xchg
jl
ja
pop
outsb
out
mov
loopne
pop
inc
mov
fmull
mov
jns
push
jl
pop
sub
dec
loop
in
lods
lcall
jmp
sbb
xchg
push
xor
jo
andb
dec
stos
or
add
rcrl
pop
sarl
adc
push
out
adc
mov
addb
pop
push
les
jg
bound
jo
lods
fsub
loope
jmp
mov
jecxz
sti
adc
mov
mov
inc
ss
ds
stos
xchg
enter
adc
test
outsb
jmp
dec
insb
push
rcrb
call
jne
cmc
fucomip
cmc
lock
pushf
xor
adc
pop
xor
into
fimuls
push
or
mov
ja
fistl
xchg
loope
jb
dec
push
jo
mov
push
andl
test
div
test
aas
sti
movsl
shrb
mov
dec
sub
and
fiadds
cmp
scas
shlb
sbb
xor
nop
dec
insl
aaa
mov
and
xor
xchg
jl
aaa
or
and
push
xlat
loopne
test
xlat
sub
pop
and
pop
jmp
mov
bnd
cwtl
int3
ss
cmp
cmp
cltd
jmp
mov
bound
in
mov
aam
imul
in
jae
js
or
cld
inc
mov
and
shl
fstpt
dec
xchg
mov
mov
jg
dec
jg
and
outsb
pop
mov
outsb
fcoml
jae
adc
cmpsl
movsl
jp
xchg
pop
fwait
sahf
sbb
in
and
inc
mov
mov
ss
dec
ret
not
and
inc
mov
mull
hlt
lock
pop
or
arpl
sbb
lods
ret
sbb
and
popa
das
testb
mov
hlt
mov
cmp
test
push
ljmp
daa
shl
lret
iret
and
sbb
fidivrl
fbld
mov
sarl
test
or
inc
pop
bound
call
repnz
mov
cwtl
movsl
mov
push
test
lods
aaa
cmp
jp
fbstp
imul
mov
out
ss
jae
icebp
mov
adc
icebp
push
insl
jmp
jo
std
insb
cmp
mov
jge
cwtl
bnd
test
inc
pop
clc
adc
xchg
sbb
ja
or
jmp
decl
adc
sahf
adc
jp
leave
repnz
xlat
inc
jo
jmp
rep
mov
pop
enter
fcomi
sub
addr16
mov
add
cmc
shr
mov
sub
mov
arpl
js
pop
scas
ja
jl
std
xchg
adcl
pop
xchg
bound
xchg
negb
mov
push
aas
mov
xchg
in
sub
lods
shrl
adc
in
fs
mov
loop
dec
andl
mov
mov
adc
sub
mov
mov
mov
out
pop
outsb
int3
and
dec
ss
mov
xor
test
mov
stos
mov
stos
pop
ret
pop
jae
mov
or
xchg
push
mov
adc
test
repnz
notl
jmp
mov
movb
pop
pop
mov
jb
xchg
add
pop
and
stos
icebp
notb
mov
lods
add
inc
pop
fildll
arpl
jl
and
cwtl
add
adc
pcmpgtb
les
jg
out
sub
fs
mov
sub
mov
ret
and
test
jne
mov
or
cmc
ljmp
pushf
push
xchg
les
ror
popf
push
repnz
fs
clc
lret
pop
aaa
std
sti
jbe
gs
sub
add
add
enter
mov
pop
sub
ficompl
jmp
inc
fistps
push
jmp
sub
sbb
stc
nop
aaa
lea
outsb
js
pop
fbstp
adc
imul
in
test
fnstenv
sub
inc
sub
nop
lret
in
leave
mov
rcrb
rcl
lret
ss
andl
xchg
mov
decb
xor
insb
xor
clc
dec
rcl
mov
mov
jns
xchg
int
push
mov
pop
xor
xor
push
xchg
lret
mov
xor
or
cmc
mov
pop
bnd
adc
nop
xor
mov
mov
sbb
jecxz
xchg
pusha
les
xchg
jns
mov
fmulp
aam
xchg
mov
mov
adc
flds
cmp
je
pop
addr16
popa
test
mov
in
mov
andb
es
xor
push
mov
mov
mov
inc
jp
pop
xchg
lods
insl
cmp
out
mov
loopne
cmp
sub
jns
aad
jecxz
inc
ret
cmp
and
xchg
dec
sbb
inc
lahf
ficomps
gs
dec
mov
lods
add
repnz
and
loope
jmp
in
stos
repnz
xchg
and
pcmpeqd
push
ja
fldcw
dec
mov
xor
mov
jecxz
out
jbe
pop
xor
or
pop
mov
loope
fyl2xp1
xchg
sub
inc
enter
mov
cmpsl
adc
jg
int3
pop
and
or
pop
pop
stos
inc
jns
lods
cmp
subl
sbb
or
xchg
sub
jmp
push
jne
dec
pop
push
mov
xchg
mov
pop
push
pop
mov
adc
popa
mov
dec
rcl
popa
or
mov
cs
imul
dec
sub
das
sahf
push
xor
sub
add
push
movsl
test
xor
scas
imul
loop
sbb
xchg
fxam
fmul
jne
fisttpll
mov
aas
lods
push
jns
cld
dec
xchg
fldl
hlt
out
xchg
in
pop
pop
adc
mov
xor
repnz
lods
xlat
sub
mov
leave
pop
adc
sub
add
fcompl
in
add
enter
inc
loope
icebp
stc
push
loopne
je
mov
popf
loopne
jb
inc
ss
sub
imul
pop
adc
inc
mov
inc
mov
lock
mov
mov
jl
bound
ret
mov
icebp
and
or
insb
icebp
fcom
push
push
aam
mov
sub
in
aad
pop
sub
fucomip
shrb
stc
sbb
sbbb
mov
jb
out
mov
mov
loopne
xchg
xor
dec
sub
nop
dec
stos
and
cmpsl
clc
inc
rclb
decb
pop
repz
lret
lods
mov
bound
subl
jp
sbb
fidivl
jmp
fidivl
sbb
jecxz
shrb
clc
cmp
jbe
fisubs
das
push
and
bound
loope
push
pop
out
mov
es
xchg
cltd
push
ljmp
push
adc
outsl
out
out
add
sbb
jbe
in
dec
jmpw
xor
pushf
sub
repnz
loope
push
shl
mov
cmp
mov
jmp
or
push
lock
fdiv
sub
mov
cwtl
jns
ja
sahf
jg
dec
push
and
xchg
leave
xchg
or
rolb
lret
push
jmp
cmp
arpl
lock
inc
fidivrs
pop
push
sub
and
js
mov
mov
fsubrs
sub
cs
gs
sar
adc
mov
xchg
pop
xchg
mov
xchg
inc
jp
sub
lods
cmp
inc
push
fwait
lods
jae
jnp
loopne
push
adc
mov
push
jmp
sub
imul
clc
arpl
ss
dec
xor
xor
inc
dec
test
cwtl
dec
lea
out
in
test
lcall
push
sub
jg
sahf
push
cmpsb
cmpsb
sub
jbe
mov
lods
pusha
mov
and
sbb
aad
das
cmp
jno
mov
jl
aaa
sub
mov
in
push
fisttpll
hlt
insb
or
pop
loop
push
jns
out
mov
out
test
cmc
sub
jle
jno
out
int
or
push
cs
in
xor
ja
in
out
bswap
lods
and
pop
push
cmp
std
dec
sti
orb
pop
std
mov
lods
test
pop
icebp
xchg
xor
sbb
rolb
ljmp
in
add
icebp
adc
test
int3
gs
pushf
jg
xor
cmp
pop
cmc
jb
fisttpl
sti
inc
repz
and
jbe
sub
cmc
outsl
scas
cmp
push
mov
ljmp
punpckhbw
cmp
jns
jbe
imull
inc
in
bound
aaa
mov
cwtl
cmp
pop
lods
inc
daa
cmp
aam
out
jp
ljmp
nop
xor
dec
mov
leave
movsb
pop
aaa
aam
or
inc
pusha
inc
shr
pop
cmp
pop
movsb
sbb
cld
mov
out
leave
outsl
sbb
inc
in
dec
or
push
lock
jae
test
and
pop
mov
lods
xor
aam
jmp
lcall
pop
call
mov
jg
daa
cmp
and
mov
les
shll
sbb
xor
jae
xchg
or
jb
stc
jbe
dec
arpl
repnz
pop
nop
sub
push
pop
hlt
fs
outsl
cmc
sar
jo
xlat
dec
std
pop
js
jnp
xlat
or
inc
sub
inc
jnp
cld
insb
and
jecxz
mov
ret
jl
ss
dec
add
adc
mov
mov
jge
jecxz
idivb
xor
xor
xchg
stos
movsb
ret
mov
in
inc
jnp
push
divl
repz
test
cmpsb
xchg
mov
adc
xchg
mov
mov
add
sarb
mov
push
pushf
jne
xor
pop
mov
sbb
or
cmp
pop
mov
popf
xor
jge
sbb
jo
leave
mov
lock
cmp
mov
sub
cmc
add
add
push
aam
sahf
lods
jbe
iret
sub
test
add
cmp
push
lea
lea
addb
xor
sbb
sarl
xchg
out
xchg
ds
sub
shll
jns
jne
sti
addr16
pop
loope
ret
jne
mov
sub
push
jecxz
imul
inc
shrl
inc
sbb
jnp
jns
fsub
or
cmp
pusha
sub
cmp
jns
jns
jmp
sub
cmc
cltd
xchg
in
jmp
jp
xchg
inc
leave
psubq
xchg
icebp
jbe
ret
xchg
inc
imul
mov
dec
cmp
cmpsl
stc
inc
or
xchg
pop
pop
sub
out
in
pop
in
and
mov
shlb
xchg
stos
scas
xchg
add
test
pop
mov
push
jp
stos
clc
lds
adc
sar
mov
dec
and
inc
nop
inc
popa
test
sbb
adc
fsubrs
push
loopne
sbb
and
sub
aad
lcall
cld
int
add
pop
shrl
repz
test
popf
and
pop
jmp
movsb
pusha
call
cmp
dec
adc
xchg
shl
sbb
ds
xchg
or
lea
push
xchg
cmpsl
cmpsb
inc
jb
iret
push
icebp
lahf
jl
dec
test
repnz
nop
sub
mov
push
ret
inc
inc
cmpsb
inc
and
fs
andb
jbe
fstpt
xchg
and
mov
and
mov
ds
xchg
mov
mov
jne
lds
stos
rcr
pop
and
jp
lock
pop
lret
cmp
nop
xchg
push
pop
jb
ficoms
push
jne
cmp
mov
pop
xchg
xchg
mov
xchg
outsb
mov
out
adcl
xorb
push
aam
imul
es
adc
push
mov
and
sbb
nop
jecxz
push
shlb
aaa
sbb
jno
fistps
sub
jb
popa
sub
and
push
dec
sbb
jo
sbbl
sahf
jge
sbb
adc
arpl
sti
cmp
pop
loope
scas
sbb
jno
rclb
pop
lods
mov
loopne
arpl
aas
int3
enter
sub
cmp
mov
outsl
pop
add
sbb
and
aam
add
scas
mov
cmp
dec
imul
js
mov
andb
movsl
jg
sti
add
sub
dec
xor
das
inc
pop
cs
cmpsb
lret
cmc
lds
lds
outsb
sbb
mov
xchg
sbb
push
rorb
pop
and
arpl
sub
ret
stos
xchg
inc
push
cmp
mov
fsubr
or
push
inc
loope
jmp
add
mov
sahf
adc
jg
mov
pop
fmul
dec
leave
outsb
arpl
scas
mov
xor
mov
aam
mov
xor
rorb
cld
sarl
aaa
xchg
test
inc
sahf
mov
inc
dec
fidivs
test
std
cli
mov
ret
sub
inc
and
or
lods
leave
mov
call
xor
icebp
cmp
add
scas
jno
fdivl
std
add
lea
mov
xchg
push
dec
or
mov
mov
out
loopne
jge
push
adc
pop
in
lds
aaa
inc
dec
mov
sbb
call
dec
in
in
cmc
add
and
add
es
sub
scas
mov
mov
and
lret
mov
movsl
xchg
fsts
xor
dec
in
out
mov
cs
pushf
bound
jmp
mov
xchg
mov
aad
sbb
mov
out
add
std
xor
jmp
cltd
sub
xchg
mov
fwait
hlt
jge
dec
jp
lods
inc
mov
pop
popf
std
xchg
mov
aam
xchg
incb
cmpsl
insb
sbb
movsb
aad
ret
mov
inc
mov
sbb
adc
jnp
loopne
popf
cmp
rcrb
and
and
aas
testl
xchg
mov
or
push
jne
and
les
movsl
inc
ljmp
in
icebp
out
addl
scas
movsb
jp
xor
repz
cltd
jmp
inc
stos
xlat
xchg
xor
sub
jb
pop
loope
dec
movsl
orb
inc
pop
test
cmpl
dec
xchg
pop
mov
mov
adcb
jmp
inc
std
cwtl
push
pop
lcall
dec
add
movsl
or
ss
inc
pushf
xor
cltd
stos
lcall
xchg
daa
xor
jmp
and
dec
sbb
sbb
and
mov
jo
in
ss
mov
jno
push
ficompl
push
test
imul
cmp
inc
aas
mov
sbb
sbbb
clc
scas
popf
xchg
aaa
push
ja
push
pop
out
mov
mov
lods
push
shrb
and
out
addl
jo
adc
and
jecxz
adc
adc
lret
jl
imul
bound
mov
rolb
or
mov
arpl
and
in
bound
pop
xor
std
jecxz
cmp
shlb
das
xor
jnp
lds
sub
xor
ret
mov
test
lret
js
sbb
out
in
jp
push
jle
in
push
dec
sub
iret
xlat
mov
movsb
scas
dec
shll
xchg
xchg
outsl
xor
jmp
mov
mov
mov
xor
scas
pcmpeqd
jno
sub
mov
cmp
call
lea
sub
aas
js
cmp
add
shll
in
popa
and
jl
pop
sbb
mov
outsl
adc
adc
adc
push
jnp
push
push
outsl
out
js
pushf
js
dec
out
jg
xor
xchg
stc
orl
mov
cwtl
fwait
aam
mov
jg
fisttps
xchg
xor
aaa
sar
mov
add
mov
mov
in
out
pop
dec
in
test
jp
inc
fildl
insb
lcall
aam
add
lods
fimull
dec
inc
pop
cmp
mov
testb
jmp
adc
test
mov
inc
mov
loopne
lods
mov
inc
ficomps
jp
insl
subl
adc
xchg
out
or
push
lcall
shrl
cmp
push
inc
xchg
insl
or
aad
das
test
sbb
rcll
cmp
push
mov
or
fiadds
cli
mov
xchg
dec
adc
das
ffree
out
adc
add
mov
xchg
mov
insl
inc
insl
in
out
pavgb
ret
jo
lds
add
out
push
ljmp
lock
sub
push
mov
jne
mov
mov
xchg
aas
les
or
ds
add
adc
push
test
pop
jp
lcall
loopne
cmp
cmp
or
insb
movsb
clc
pushf
sub
and
add
mov
mov
cwtl
cltd
test
out
pusha
cmpsl
lret
pop
in
cmp
mov
subl
scas
pop
aas
cli
repz
mov
adc
mov
jbe
jbe
imul
clc
arpl
and
in
push
jle
fdivs
jle
xchg
test
sahf
icebp
dec
ficoml
and
outsb
mov
mov
xor
sbb
xchg
testb
add
lahf
lea
xor
bound
in
lods
sub
jmp
in
cmp
xchg
ljmp
or
and
icebp
inc
stc
pop
xchg
and
dec
add
subb
add
scas
push
shlb
ret
lret
mov
dec
xor
push
out
testl
jno
sub
jmp
std
mov
lods
mov
fwait
mov
sub
push
out
int3
pop
stc
jge
mov
push
mov
cmp
and
lock
repz
je
rcll
lret
mov
push
cld
jl
push
sahf
fnstsw
dec
adc
lret
adc
inc
jmp
jnp
insl
into
mov
adc
lret
pop
mov
inc
lods
test
decb
xor
fldenv
loop
jg
pop
ret
cmpsl
push
ljmp
mov
xor
in
push
out
leave
or
xchg
push
pop
xlat
push
inc
adc
lds
dec
and
je
lahf
push
movsb
repz
lods
jp
shrl
add
xor
out
ret
add
cltd
xchg
in
lret
pop
jge
push
xchg
cmp
imul
in
sbb
or
xor
mov
or
bound
fcomp
ror
jmp
les
shlb
popf
mov
ljmp
ljmp
leave
xchg
pushf
sbb
sbb
mov
push
fstps
fscale
mov
ss
std
add
loope
xchg
idiv
pusha
push
mov
stos
cld
mov
mov
or
fnstcw
cmpb
mov
icebp
sub
lcall
aas
sub
xchg
les
dec
daa
mov
scas
push
hlt
lcall
fdivrs
add
and
pushf
test
sbb
push
mov
inc
testb
and
in
or
push
lods
adc
fs
xchg
and
cmpsb
cmp
imul
aas
lea
sub
repz
mov
out
jmp
fnstcw
adc
aaa
popa
sbb
cmp
bound
xor
daa
sub
arpl
pop
out
les
cltd
push
inc
xor
cmp
aaa
mov
mov
push
std
jns
jno
pop
fldcw
insl
jbe
cmpb
inc
imul
push
add
lea
popf
addb
adc
in
arpl
or
xor
mov
lcall
ret
jo
mov
les
adc
cwtl
pop
bound
xor
inc
in
push
int3
into
loop
xor
inc
lods
xor
cltd
loop
add
mov
dec
lods
mov
stos
pop
sbb
sarb
je
pusha
add
mov
dec
aad
lods
rcrb
ror
rcrb
cmpsb
and
test
mov
lods
push
das
mov
mov
test
sti
aam
ja
lods
inc
cmpsl
shll
and
lods
sbb
loopne
pusha
lahf
xor
fistpll
xlat
mov
xor
aam
push
dec
fidivl
pop
pop
sbb
pop
lahf
jno
sbb
mov
out
xchg
icebp
jno
ljmp
and
mov
out
dec
add
jg
imul
add
adc
test
mov
cmp
or
ret
rorb
jnp
mov
pop
out
inc
fnstsw
pop
pop
stos
out
stos
dec
mov
sarl
pop
lea
mov
jns
mov
aad
lahf
pushf
and
mov
or
cmp
aad
jp
sub
dec
sub
xchg
dec
push
mov
outsl
std
add
mov
mov
sarl
popf
xchg
into
into
sub
cltd
xchg
mov
jnp
movsl
imul
addl
pop
adc
jo
inc
and
pop
sbb
xchg
stos
arpl
in
jg
add
out
test
mov
mov
ss
or
cltd
adcb
outsl
jne
popf
push
sbb
scas
aas
mov
sub
add
cmc
add
pop
movsl
adc
mov
mulb
cmpb
faddl
cwtl
into
adc
sub
jb
test
fidivrl
cld
mov
push
inc
add
aam
sbb
dec
pop
pop
mov
push
in
push
in
scas
xor
mov
lea
sbb
outsb
movsb
ret
cmp
jae
cmpb
arpl
cmp
pop
cmpsl
out
test
aaa
lcall
loop
testb
inc
cmpsb
xor
jmp
dec
dec
inc
or
mov
mov
and
cmp
bnd
mov
mov
sti
shll
aaa
jmp
shll
stos
fsubl
negl
mov
adc
adc
aad
aam
mov
xor
mov
adcl
jae
rcll
aaa
add
dec
add
jo
and
mov
xor
sbb
out
stos
pop
cltd
jmp
dec
dec
push
jp
jbe
fnstenv
call
pop
sub
in
addl
loop
leave
fwait
xchg
mov
enter
cmp
push
jns
inc
daa
jns
fldcw
ds
pop
cmp
js
or
insb
cwtl
xor
sti
or
shll
mov
fidivrl
and
call
jge
mov
dec
cs
cmp
movsl
pop
xchg
and
sub
sarl
out
loope
xchg
and
in
ss
inc
lock
ret
xchg
sub
fldl
aaa
in
js
scas
pop
lcall
out
inc
clc
cmp
mov
addr16
xor
push
add
arpl
pop
adcb
fildll
push
enter
lahf
into
push
cmp
sbb
push
xchg
mov
aas
dec
test
mov
mov
xor
jbe
mov
pop
in
sbb
or
out
pusha
adc
je
xchg
aad
push
xorl
loopne
and
rcll
push
jnp
int
mov
and
inc
add
push
cs
sbb
enter
mov
push
int
cmp
sub
mov
add
dec
inc
cmpsb
bound
jle
mov
push
fdivp
inc
inc
pop
test
lods
sti
repnz
mov
push
add
adc
lds
sbb
xchg
and
sti
addr16
pop
adc
mov
ljmp
push
sbb
xchg
lcall
push
adc
mov
xlat
ljmp
repz
cmovbe
and
pop
mov
sbb
aaa
subl
dec
iret
test
push
mov
xor
push
out
in
fmul
sar
lods
cwtl
mov
adc
xor
es
xchg
and
je
mov
inc
push
add
adc
cwtl
mov
outsb
push
out
sti
xor
cld
int
mov
mov
pop
inc
sbb
out
addr16
emms
push
ret
sbb
loope
adc
dec
push
popf
mov
das
mov
jae
jmp
adc
fs
add
data16
iret
movsl
je
out
and
pop
shlb
inc
adc
adc
in
mov
ljmp
lret
dec
xor
call
or
fsubr
sub
ret
jbe
mov
jnp
cmpsb
pop
sub
jns
dec
arpl
les
jno
lcall
shll
mov
pop
mov
mov
repz
imul
mov
les
leave
lret
sbb
fdivr
cwtl
sbb
out
sbb
add
inc
push
aaa
dec
stos
jl
jb
rcrl
mov
int3
es
jp
cmp
loop
lock
inc
push
jb
adc
enter
sarl
jbe
fsubs
movsl
lret
xchg
xchg
lock
mov
imul
out
call
cmp
outsl
mov
mov
sbb
xor
xor
in
push
xchg
or
lods
or
mov
xlat
nop
xor
push
mov
cmp
jmp
sub
cwtl
push
in
popa
add
mov
sub
add
mov
and
sahf
fadd
arpl
shll
dec
daa
daa
aas
cmp
or
repnz
jmp
push
mov
call
mov
sub
int3
in
adc
inc
add
pcmpeqw
jns
lret
adc
inc
mov
mov
fisubl
and
test
loope
notb
js
lret
icebp
jb
jmp
adc
loop
jne
mov
xchg
repz
mov
lods
add
aam
cmp
test
sub
dec
cmp
mov
fildll
pushf
insb
xor
sti
lock
cmc
lcall
mov
imul
xchg
in
xchg
sbb
negl
mov
and
jae
inc
cs
sbb
aam
jns
sarb
cs
cmp
fs
lahf
stc
nop
sbb
sub
or
out
xor
loop
pop
jle
div
vpsllw
ret
xchg
in
xchg
test
iret
jno
or
adc
xor
out
movsb
jno
js
xor
push
test
push
popf
cmp
jae
mov
pop
pop
aaa
jmp
stos
aam
jb
int
mov
ja
sub
in
ficoms
lods
fnstcw
xchg
lahf
or
inc
int3
data16
push
add
cmp
mov
imul
repz
xor
push
in
out
push
mov
push
into
les
cwtl
imul
fidivs
mov
add
aas
clc
insl
mov
inc
das
es
fcomi
inc
or
adc
jmp
pop
jmp
xchg
inc
add
adc
cmp
push
sbb
jge
out
movsb
aam
add
je
or
jns
pop
arpl
aam
xor
lret
sbb
add
mov
xlat
shlb
inc
sbb
sbb
fimull
stos
and
shll
xor
push
sub
loopne
btc
inc
call
push
dec
fstps
mov
in
xor
negl
lds
push
lods
pop
cmc
std
jne
jmp
lea
adc
jge
xchg
and
stos
adc
xchg
lahf
mov
clc
push
push
cwtl
dec
int
cmp
shrb
andb
ja
xor
idivl
pop
mov
push
shll
lcall
leave
les
leave
add
add
xor
pusha
xchg
pop
or
mov
dec
aad
and
pop
mov
sub
lret
insl
xor
je
push
inc
cmp
mov
inc
sub
int3
push
sbb
lds
push
ss
jp
enter
adc
add
dec
pop
jge
out
push
cmp
in
add
shll
call
mov
andb
mov
ficoml
mov
dec
mov
adc
cltd
xchg
jns
inc
add
adc
sbb
lods
out
push
loopne
mov
imul
sub
fmuls
sub
imull
inc
in
xchg
cmp
sbb
faddl
cmp
mov
andl
fdivp
mov
push
and
add
inc
jbe
push
xor
inc
in
jg
pusha
and
xor
xchg
push
xchg
jp
stos
call
inc
imul
pop
shll
jbe
jmp
xlat
inc
sbb
add
pop
add
cld
adc
pop
jge
add
xor
dec
sbb
fidivrl
dec
iret
or
jnp
and
fidivrs
xchg
arpl
mov
xchg
test
add
out
sar
fucom
push
fwait
es
add
out
arpl
fisubl
mov
and
or
dec
jbe
cltd
pop
aaa
push
and
add
inc
inc
ret
in
jbe
mov
and
and
std
cmp
lret
xchg
adc
push
mov
lea
and
push
fstpt
and
daa
shlb
scas
loop
insb
sbb
mov
cmp
fstp
sbb
push
xchg
pushf
dec
icebp
inc
bound
and
inc
and
loope
mov
lock
sub
jl
in
mov
jg
ret
pop
in
pop
jb
orb
sbb
push
push
pop
aad
fcmove
pop
dec
mov
xchg
cmp
incb
sbb
and
mov
popa
in
stc
insb
pop
sub
and
jo
dec
inc
sbb
adc
xchg
mov
loop
iret
js
call
sub
sub
aas
in
pop
add
push
and
rep
or
adc
out
add
sub
arpl
sbb
mov
xchg
pop
es
inc
inc
leave
adc
push
ret
dec
xor
and
icebp
cmc
sbb
push
or
pop
in
dec
mov
aaa
jae
call
loop
cmp
in
lret
pop
inc
frstor
test
dec
mov
dec
clc
roll
cld
push
mov
push
jg
shrl
aaa
aad
mov
mov
add
mov
int3
sbb
sarb
sti
sub
es
xchg
scas
sbb
fmul
fwait
xchg
and
sti
push
adc
mov
es
lods
inc
jp
movb
jmp
in
aad
daa
loop
mov
pop
movsb
fstpt
adc
mov
fbstp
and
clc
lock
test
shr
adc
push
sub
push
and
lahf
lret
mov
into
add
push
sti
push
adc
add
popa
lods
add
pushf
daa
outsw
cltd
push
pavgb
cmp
sbb
cmpsb
ficomps
lods
adcl
sub
lods
xchg
add
xor
pop
pop
push
inc
cs
in
ret
dec
loopne
xlat
aam
push
push
repnz
jnp
les
repz
sbb
dec
cmpsb
jnp
gs
cmp
lret
mov
fistpll
sub
stc
sub
test
mov
ds
es
in
pop
mov
and
or
fs
mov
fidivl
pusha
add
bound
mov
pop
ss
sbb
push
adc
push
cmp
dec
cs
mov
scas
adcl
push
rcrl
scas
fdivrl
and
adc
adc
cmp
add
xor
bswap
cmpsb
mov
jae
push
xor
cli
add
sub
mov
inc
orb
dec
sub
jnp
push
jecxz
outsl
push
movsb
mov
and
je
popa
jb
clc
mov
ret
push
inc
xor
pop
push
mov
loopne
pop
mov
std
icebp
jge
or
inc
mov
ja
dec
jle
dec
xchg
push
out
inc
test
fcomip
cmc
fbstp
mov
fs
dec
xchg
dec
dec
pop
divl
fmul
xchg
imul
ret
and
sbb
add
xor
iret
mov
addl
icebp
lahf
jl
fsubl
xor
in
jne
dec
bound
lret
inc
cli
xchg
mov
jg
xor
add
popf
rclb
pop
or
data16
out
cmpsl
sahf
jns
popa
xor
imul
icebp
xor
hlt
fwait
jp
aaa
std
cmp
jbe
xchg
dec
or
push
or
xchg
orl
pop
sbb
outsl
in
mov
cmp
jl
push
and
and
ja
popw
add
cmp
sub
and
sbb
and
dec
inc
push
fs
mov
xchg
add
insl
aam
dec
in
sbb
mov
jb
add
test
sbb
inc
sub
inc
xchg
cs
ss
mov
repnz
push
sahf
bound
sub
stc
mov
lock
stos
cmpsb
push
shl
ss
adc
mov
sub
sub
iret
sbb
inc
xchg
mov
jg
push
jl
sahf
push
lods
push
fs
cli
sub
test
shlb
sahf
add
shll
test
je
push
movb
inc
dec
xor
mov
inc
ja
roll
inc
inc
shlb
int3
dec
or
or
outsb
icebp
xor
stc
mov
enter
imul
fistps
in
loop
loopne
xor
lret
mov
aad
lock
sub
xchg
fbld
lock
je
mov
pusha
mov
xchg
in
adc
mov
cmp
dec
pop
lds
cmp
fldt
jp
loope
call
subb
fdivrl
add
ja
push
xchg
test
or
and
xor
jmp
cmp
push
das
sub
xor
push
lea
ja
push
jae
mov
jp
mov
lock
mov
cs
jo
xor
sbb
jmp
lea
dec
scas
ret
jp
lahf
cmp
clc
mov
pop
and
lret
cld
cmc
mov
outsl
imulb
pop
lds
add
mov
pushf
iret
mov
mov
lods
in
mov
lahf
mov
sub
test
cli
dec
inc
cld
inc
arpl
imul
lret
int
xchg
lea
xor
jns
mov
les
mov
int
mov
repz
fldenv
sbb
jne
les
and
fs
addr16
push
adc
lcall
cmpsb
loope
nop
inc
test
mov
push
sub
or
push
mov
arpl
xchg
sahf
push
leave
mov
or
loope
mov
out
lahf
add
adc
leave
xchg
pop
pop
aad
push
test
pop
inc
adc
subl
aas
jnp
cmp
cmpsl
enter
rcrb
aas
and
or
mov
cmp
cmp
push
pop
cmp
pusha
out
xchg
mov
sbb
push
test
enter
les
jnp
mov
fiadds
repz
cld
subb
cltd
jp
lahf
or
xlat
scas
out
inc
scas
fidivs
imul
fimull
in
ljmp
cmp
inc
jbe
aaa
xchg
xchg
cmp
sbb
stos
scas
mov
std
ret
imul
jbe
aam
or
repz
inc
xchg
mov
lds
in
inc
daa
call
pop
jg
sbb
movsb
cmp
and
aas
fimull
dec
inc
or
scas
shrl
xchg
mov
outsl
cmp
adc
imul
test
lret
dec
test
dec
xchg
mov
loope
dec
xchg
test
cwtl
mov
fldl
daa
pop
push
mov
outsb
shrb
cmp
fidivl
fnstenv
jge
dec
sub
jo
push
fidivl
or
roll
mov
pop
gs
clc
mov
add
cltd
movsl
xchg
push
xchg
lcall
testb
cli
xchg
fs
fidivrl
jl
loope
cli
jbe
push
dec
leave
mov
dec
scas
jg
xor
jl
jge
in
into
mov
push
adc
in
in
jmp
add
cmp
stc
inc
jg
and
imul
sahf
pusha
jmp
cmp
push
pop
call
and
int3
add
jmp
nop
xor
orb
or
imul
and
mov
fnsave
mov
jbe
stos
shrl
xchg
outsb
jg
inc
sbb
dec
and
ss
xchg
cmp
pop
pop
or
stos
push
and
add
dec
stc
lcall
aaa
xchg
or
dec
or
adc
pop
les
cmp
pop
cmc
pop
sahf
test
pop
cmc
outsb
mov
test
mov
jnp
xor
xor
loope
aam
cmp
adc
js
lock
ja
les
mov
hlt
insb
adc
je
sub
sbb
xor
cmp
stos
pop
or
outsb
xchg
mov
pop
lds
imul
dec
movsl
sbbb
aaa
adc
inc
and
fists
pop
ljmp
and
jmp
lods
xor
inc
nop
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
and
inc
movsl
cmp
adc
loop
in
push
outsb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
xor
leave
adc
pop
movsl
lock
cmp
lret
jae
cmp
jle
arpl
pop
dec
pusha
mov
notb
adc
xor
pop
repnz
inc
movsl
cmp
sarb
push
imul
addr16
fucomi
fucom
dec
and
rcl
sub
xor
nop
js
ret
dec
mov
mov
mov
xchg
iret
mov
xor
cli
and
or
sub
fs
sti
scas
int3
cmp
iret
in
mov
orl
push
cmp
pop
lock
rclb
xchg
adc
fwait
je
test
imul
leave
sbb
adc
inc
movsl
cmp
sbb
inc
mov
adc
jnp
mov
inc
movsl
cmp
sbb
sbb
inc
inc
cmp
adc
outsb
in
push
adc
add
sbb
adc
add
sbb
adc
inc
movsl
cmp
sbb
adc
inc
xchg
xor
adc
sbb
adc
inc
in
insb
adc
sbb
adc
push
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
sbb
insb
adc
push
outsb
mov
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
add
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
aaa
rolb
leave
sbb
adc
inc
movsl
cmp
push
leave
sbb
push
mov
adc
sbb
adc
insl
xlat
dec
push
jno
sbb
adc
subl
outsb
xchg
adc
inc
movsl
cmp
sbb
adc
mov
cmpsb
jle
in
push
aam
stc
inc
test
adc
sbb
adc
inc
movsl
cmp
sbb
push
stc
inc
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
sbb
adc
inc
movsl
cmp
push
outsb
ret
push
add
inc
lcall
jg
sub
divb
ds
call
in
clc
and
out
scas
call
adcb
dec
push
rclb
roll
je
lret
and
out
in
push
jmp
jge,pt
cli
jle
movsb
jl
push
out
std
das
cmp
xor
mov
mov
cmpsb
or
pop
lods
mov
cmc
bound
fisubs
popl
cmpsb
dec
arpl
xchg
testb
daa
out
sub
scas
mov
xor
sub
cwtl
xchg
lret
sub
push
inc
xchg
stos
cmp
and
cld
fwait
mov
int3
push
lcall
cmpsb
hlt
push
sbb
mov
sbb
out
negb
lea
xchg
jae
inc
test
mov
jns
xlat
mov
mov
or
imul
es
call
adc
out
cli
mov
inc
call
jne
jg
mov
jno
mov
mov
xchg
int3
icebp
adc
adc
daa
std
lods
xor
mov
outsb
icebp
int
out
jl
stc
addr16
push
mov
xlat
daa
sbb
mov
je
adcb
shll
cmc
cmp
cltd
jmp
ss
xchg
push
stos
pop
pop
adc
fidivrl
cmpsb
js
add
push
stc
movsl
ret
mov
jno
outsl
push
add
movsl
xchg
push
imul
mov
sbb
rcrb
dec
aaa
mov
xor
xchg
dec
outsl
or
xlat
imul
mov
insl
sub
repz
ret
outsl
repz
pop
sbb
xor
jo
adc
lea
jns
xchg
mov
fwait
shrl
inc
pusha
adc
mov
cmp
xchg
or
cmp
sbb
pop
out
mov
jne
xchg
fbstp
fld
inc
sbb
adc
shll
adc
xchg
push
sub
pusha
cmpsl
les
scas
testl
inc
dec
out
stos
fs
add
adc
dec
pop
shl
jge
rol
in
inc
pushl
imul
ds
mov
adc
jmp
jge
fnstenv
loope
inc
push
mov
or
add
daa
data16
ret
and
out
sbb
pop
loop
push
movsb
inc
pop
xlat
jno
jnp
pop
mov
fcoms
push
imul
jo
mov
xchg
outsb
sub
ja
rcl
in
mov
or
gs
out
pop
dec
push
xchg
jb
mov
or
ds
pop
xor
lahf
jecxz
fwait
lods
push
mov
xchg
stos
jl
inc
insl
jecxz
ss
cvttps2pi
inc
push
enter
xchg
aam
rolb
js
out
mov
cmp
sub
outsl
add
lods
iret
add
repnz
cltd
test
push
and
mov
mov
lods
adc
sub
dec
cmp
jno
push
cmp
shlb
mov
xchg
and
repnz
imul
in
push
jbe
inc
xchg
pop
cmp
xchg
mov
pop
adc
aas
xchg
dec
pop
add
mov
adc
stos
popfw
mov
adc
sub
test
adc
dec
sbb
xlat
icebp
gs
mov
out
sbb
sub
inc
push
aaa
dec
movsb
mov
xchg
sbb
hlt
setno
dec
movsl
inc
pop
mov
lods
cli
imul
add
push
dec
shll
xor
jmp
cmp
inc
push
test
icebp
xchg
push
jo
mov
int3
cmpsl
fmull
outsl
and
adc
sbb
sub
pop
xor
into
cmc
inc
sahf
sub
adc
out
pusha
hlt
sbb
ss
das
cli
outsl
ljmp
xor
repnz
inc
dec
out
incl
sbb
popf
fstps
push
rclb
pop
clc
nop
xchg
pop
push
cmpsl
push
push
out
push
mov
ficoml
loopne
sub
stos
cmc
push
cli
sub
imul
and
icebp
xor
fdivrp
xor
sub
xor
push
jne
or
imul
mov
orl
push
mov
ficomps
rcr
dec
pop
xor
addl
xchg
mov
xchg
bound
adc
cmp
pop
mov
inc
sub
mov
test
out
test
lret
mov
shrb
shrl
jp
popf
cli
cwtl
pop
das
mov
mov
dec
pop
gs
into
xchg
jle
dec
sbb
xlat
jno
jge
pop
mov
inc
bound
sbb
push
lahf
inc
and
adc
movsb
pop
cmpl
mov
adc
inc
or
push
inc
lret
and
fwait
jmp
cmp
dec
xor
xchg
cltd
inc
dec
push
icebp
aad
in
or
pop
jno
cs
scas
lahf
xor
movsl
sub
mov
add
lcall
push
ss
ret
pop
mov
xchg
ret
shll
cmpsl
ja
mov
sub
outsl
loopne
testl
push
dec
ja
cmp
and
push
icebp
in
cmc
out
sub
lds
rorb
mov
fsubrs
jp
cmp
shr
je
mov
mov
lods
xchg
inc
push
cltd
arpl
mov
jno
add
out
in
or
sbb
xchg
fucomi
rorb
mov
sbb
xor
repz
sub
pusha
pop
jmp
dec
sbb
xchg
scas
jg
arpl
jae
data16
push
add
mov
or
fldl
daa
sub
leave
adc
dec
loope
pop
pop
bound
ljmp
loope
push
mov
mov
subl
sti
mov
div
int3
jle
or
out
pusha
xor
ss
bound
je
ds
pop
cli
aaa
cmpsb
cmpsb
in
test
aam
pop
mov
stc
cli
mov
mov
jns
cmpsl
pushf
sbb
into
repz
mov
jg,pt
mov
repnz
push
aaa
sub
dec
xchg
insl
das
scas
dec
mov
stc
das
sub
mov
sub
sub
pop
xchg
push
mov
popf
shlb
hlt
and
lcall
rcl
insb
fmul
orb
fidivrs
jmp
leave
fwait
add
sub
lret
test
push
jmp
cmp
push
pop
pop
ret
xlat
cmp
rcl
fsts
mov
ret
jne
add
loope
jmp
dec
and
icebp
xor
ret
lods
push
pop
stos
mov
add
scas
pop
lea
mov
xchg
rolb
mov
lahf
rcll
mov
mov
loopne
mov
push
dec
xor
xorl
scas
pop
mov
mov
or
insl
jmp
leave
dec
and
and
xchg
add
addr16
xchg
jge
rcrl
cld
push
mov
sbb
or
push
rol
push
adc
xor
inc
cmp
clc
sub
arpl
lods
mov
and
sbb
aad
cmp
outsl
dec
add
and
and
add
xor
inc
adc
dec
jmp
push
jbe
jl
sbbb
add
cltd
mov
adc
sbb
adc
xchg
enter
addr16
jbe
jl
mov
jl
inc
ljmp
mov
or
jbe
adc
sti
sbb
jno
sub
cmpsl
ljmp
das
sbb
mov
xor
dec
cmp
push
xchg
out
outsl
push
inc
aam
sub
popa
enter
mov
jge
movsl
movsb
mov
out
ja
xchg
fisubrl
fucomip
mov
mov
mov
pop
xor
xchg
loopne,pn
lahf
in
add
stos
andl
dec
add
movsl
jp
pop
or
out
aas
jg
mov
cmp
dec
orb
das
repnz
sub
test
push
pop
imul
insl
das
or
dec
pop
into
xchg
or
popf
loopne
leave
jae
jle
fisubs
fidivrl
or
push
sub
mov
cmp
xor
xlat
outsl
jmp
sub
dec
jle
adc
fdivrl
jbe
aad
mov
or
mov
add
pop
outsl
js,pt
mov
fistl
xchg
mov
pop
sbbl
in
sbb
mov
dec
and
sub
push
filds
pushf
leave
sub
lret
orb
sub
adc
pop
int
mov
inc
or
inc
fdivl
jmp
loope
adc
insb
xor
mov
xchg
icebp
adc
mov
je
dec
push
mov
adc
loopne
mov
cli
fsubrl
lock
push
test
mov
cmp
imul
pop
xchg
aam
sub
add
push
out
mov
adc
jno
jmp
jl
xchg
sub
jnp
sbb
test
in
mov
xor
lock
and
and
outsl
mov
call
sub
pop
out
stos
push
aam
push
daa
scas
dec
fdivl
adc
out
cmp
adc
rcll
pusha
das
mov
popa
jp
sahf
jp
mov
cld
loop
cmp
xor
repz
mov
adc
xchg
and
push
cmp
add
mov
fiaddl
ror
negl
imul
pusha
mov
jne
mov
out
inc
mov
movsb
cltd
adc
jbe
cmc
jnp
idiv
push
shrl
sti
je
imul
loope
mov
mov
mov
into
testw
or
pushf
hlt
mov
mov
test
stos
pop
sub
and
jmp
lret
js
mov
subl
insb
xor
lods
xlat
fmull
ds
hlt
mov
dec
mov
sbb
or
mov
mov
and
adc
push
pop
bound
mov
addr16
mov
ret
mov
push
pop
mov
loop
scas
das
sarl
cmc
push
insl
pop
pushf
jns
dec
js
push
shl
movsl
mov
daa
loopne
mov
jno
xor
shrl
push
jo
mov
cmc
ffreep
adc
xchg
jne
mov
test
xor
cwtl
xchg
jl
sbb
dec
sbb
lds
xchg
arpl
push
push
xor
je
insb
or
jmp
adc
sbb
xchg
or
out
test
cld
pop
lds
pop
out
adc
lea
mov
jecxz
in
imul
sub
stc
inc
xchg
bound
and
xchg
sub
fldenv
fs
fsubrs
leave
adc
out
or
fneni(8087
cli
adc
xchg
jb
in
test
stos
dec
sub
pop
pop
xchg
mov
sub
andb
xor
mov
arpl
pop
loop
jmp
add
xor
push
lds
out
mov
mov
inc
xchg
or
pushf
inc
in
or
add
ret
popf
stos
in
negl
mov
cmp
out
jb
pop
je
loopne
jg
and
addl
cmpsl
mov
sbb
fwait
jb
push
jmp
inc
dec
adc
sbbl
mov
sub
xchg
cmp
leave
roll
stos
cmp
out
pop
lods
xor
stc
xchg
xor
sbb
inc
fmuls
ss
adc
jne
xchg
jb
add
data16
dec
xchg
mov
insb
into
mov
lea
repz
push
hlt
and
mov
push
dec
lret
xlat
jl
pop
adc
mov
sti
sbb
daa
mov
pop
mov
rorb
xlat
sbb
jnp
aad
xlat
adc
xor
nop
dec
mov
adc
push
pop
pop
cmp
lea
mov
push
ja
jo
test
int
andb
mov
or
fldt
push
jl
pop
push
scas
lea
int3
stos
fdivrp
outsb
fidivrl
fcompl
mov
pop
push
inc
rcll
xchg
mov
sub
imul
dec
arpl
pop
dec
push
cmpsl
jecxz
mov
xchg
shl
xor
lea
mov
push
scas
pop
in
je
inc
or
pop
sub
jecxz
cmp
mov
mov
fcompl
test
stos
or
ss
mov
rolb
adcb
daa
es
adc
scas
cltd
mov
push
enter
ljmp
stc
leave
les
lods
outsl
lcall
out
ss
sahf
push
flds
pop
rorl
scas
push
sbb
stc
mov
cmp
scas
push
pop
mov
dec
lcall
orl
lock
mov
repz
ja
rol
jns
sti
mov
stos
sarb
test
push
fstpl
ror
into
mov
ja
jne
testb
loope
rcrl
jno
cs
push
out
lds
leave
arpl
add
leave
imul
arpl
addr16
xchg
mov
pushf
loopne
sub
mov
std
and
sbb
jp
lea
in
testb
call
fcompl
loope,pn
nop
xchg
xchg
aad
fldl
jno
gs
loope
fcmovnbe
cmp
shl
xor
clc
mov
popa
ret
push
js
and
in
xchg
iret
jmp
movsl
rcr
jo
add
leave
das
mov
popa
sub
test
dec
call
lods
jae
mov
or
mov
outsb
jno
xchg
sub
sbb
adc
mov
inc
xor
adc
adc
pop
xor
pushf
lret
xchg
ljmp
sti
scas
popf
fmul
mov
xchg
imul
mov
lds
inc
sub
sarl
cmc
cwtl
add
dec
loope
hlt
mov
mov
scas
mov
pop
cmp
fsubrl
das
push
popf
pop
inc
icebp
or
dec
bound
mov
lds
ljmp
test
xor
mov
push
incl
mov
daa
call
push
xlat
and
push
es
cwtl
adc
nop
adc
mov
icebp
sub
out
mov
cmp
mov
sub
test
iret
and
xlat
add
pop
push
inc
push
mov
popf
jecxz
cli
rorl
imul
pop
sbb
mov
jne
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
