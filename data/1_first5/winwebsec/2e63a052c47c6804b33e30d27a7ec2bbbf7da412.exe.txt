xor
pop
push
outsb
xchg
bound
scas
cmp
and
fldl
lock
lds
icebp
cmp
inc
in
mov
inc
mov
sarb
fsubs
dec
xor
mov
gs
sbb
jle
mov
xchg
sub
bound
push
faddp
addr16
xor
push
in
xor
stos
cmp
nop
sub
aam
cmp
and
cmp
push
lret
xchg
mov
xor
arpl
loopne
int
loopne
sahf
mov
mov
loope
or
and
cmpsb
xchg
pop
out
inc
push
jl
test
sub
mov
or
pushf
cltd
orl
xlat
clc
cmpsb
shrd
fbld
aam
push
push
lret
out
or
shl
out
jbe
adc
rol
mov
sbb
lcall
or
in
cmp
push
ljmp
xchg
dec
flds
loope
scas
cltd
push
pop
mov
bound
cmp
sbbb
test
mov
inc
inc
mov
mov
adc
sbbb
out
repz
xor
lcall
xchg
lret
pop
add
call
push
push
and
adc
sbb
int
pusha
movsb
push
insl
fbld
outsb
mov
cs
dec
out
adc
mov
addl
add
fwait
pop
popa
call
aad
movsl
lds
arpl
mov
cmc
ficoml
or
bnd
mov
test
outsb
popf
mov
fldl
push
popa
pop
sub
lea
je
ret
jecxz
lret
lret
adc
aas
add
mov
imul
inc
adc
push
loop
or
pop
jae
push
ficompl
es
fisubs
sub
xor
lret
add
repnz
lcall
mov
add
or
arpl
in
int
into
inc
scas
lcall
in
aam
and
or
xrelease
cli
decb
repnz
sbb
iret
ss
push
push
lds
test
dec
fs
cltd
xor
inc
xor
call
push
insb
mov
and
xchg
insl
mov
and
sbb
adc
xchg
fpatan
dec
cmp
mov
enter
xchg
mov
add
add
imul
fucom
daa
in
sbb
dec
xor
dec
ss
ljmp
adc
and
mov
cmp
iret
stos
sbb
imul
mov
sub
aas
int
inc
jl
xor
sbb
push
inc
inc
dec
pop
out
dec
lea
xor
pushf
rorb
jo
push
jp
push
jmp
mov
dec
imul
stos
jle
jno
pop
lret
pop
xchg
xchg
mov
scas
adc
mov
in
jne
cmp
inc
dec
jae
das
ds
push
movsb
ljmp
arpl
arpl
lret
push
je
add
cmp
subl
mov
inc
mov
fmull
insl
test
adc
jl
mov
out
jb
jp
lods
mov
cld
lahf
popf
jge
xor
std
sub
and
rclb
cltd
cs
lods
icebp
sahf
mov
push
inc
call
mov
dec
icebp
jle
in
sbb
xchg
adc
fs
mov
pop
daa
rcl
mov
sub
insl
sbb
adc
pop
dec
insl
es
aam
mov
pop
mov
test
out
xchg
jb
and
ficomps
mov
pop
mov
adc
dec
sbb
scas
sbb
inc
fldenv
pop
xchg
mov
mov
xor
xchg
dec
shlb
adc
jecxz
fsts
push
in
fimull
loopne
sbb
mov
rclb
mov
dec
pop
clc
pop
sbb
jmp
repnz
or
dec
fistpll
cmpl
mov
jb
mov
sbb
sub
shlb
cltd
sbb
popf
cli
outsb
call
fisubs
xor
aas
cwtl
fstps
mov
dec
js
cbtw
cmc
and
rolb
jge
insb
add
cmp
add
dec
pop
and
mov
mov
mov
aam
test
mov
jge
scas
aam
mov
sbb
mov
dec
lahf
sbb
sbb
xchg
sbb
jo
mov
adc
xchg
mov
xchg
mov
xor
push
fisubs
popa
mov
mov
imull
mov
and
js
dec
push
sbb
mov
daa
enter
mov
and
hlt
push
mov
jb
jecxz
jge
mov
cmp
mov
addb
sbbb
notl
ret
cmp
jl
scas
jne
stc
mov
movsl
inc
adc
jnp
mov
repz
les
inc
dec
lcall
xor
jbe
lods
lahf
mov
and
add
repz
and
rcl
jns
xchg
inc
mov
xchg
insl
not
sub
pop
stos
mov
scas
lods
testl
nop
cmc
jecxz
fmull
aaa
dec
or
subb
iret
btl
mov
or
outsb
das
mov
iret
sub
push
cmp
fcomip
push
or
cld
aaa
hlt
dec
into
mov
stc
inc
int3
push
mov
add
push
ffree
pop
pop
ja
icebp
push
add
cmp
push
adc
mov
es
cmpsb
add
flds
popa
add
jp
and
push
ljmp
jb
out
in
xor
addr16
inc
lods
add
cli
lret
popa
jnp
adc
shll
rcll
inc
loope
stc
loop
ret
shlb
xchg
in
iret
pop
or
cmp
xor
mov
mov
or
dec
mov
sti
clc
rclb
sub
imul
xor
sub
stos
out
stos
cltd
jmp
cmpl
mov
add
dec
xchg
and
in
loopne
add
adc
mov
or
sti
and
jae
mov
aas
push
int
call
stos
pop
ret
das
mov
insl
cmpsb
mov
mov
mov
into
dec
out
xchg
inc
xor
enter
mov
mov
mov
ljmp
shll
sub
not
cli
cmpsb
cli
shrl
cld
push
andl
into
sub
ret
rol
xor
or
cmp
out
loop
mov
shll
lret
xchg
in
roll
xchg
popf
cwtl
cmp
testb
icebp
mov
jno
dec
lret
scas
insl
jmp
cmp
pop
mov
xor
and
les
arpl
cmp
or
xchg
loope
cltd
or
jb
cmc
repz
ret
ljmp
fsubs
jge
andl
sbb
jl
add
sbb
fcoml
ret
ret
or
jne
inc
mov
jbe
jns
js
in
popa
ds
xchg
mov
add
out
pop
adc
js
cmp
rcr
shl
add
loop
add
movl
aam
sub
shl
push
fwait
shll
pop
sbb
stc
and
or
fwait
pop
stos
incl
push
sub
and
jno
and
popa
in
aam
pop
lock
inc
jno
pop
sbb
imul
sub
fsubr
in
jge
ss
jg
mov
mov
adc
push
test
jg
and
and
int
jge
jo
outsl
cmp
push
clc
inc
mov
inc
punpckldq
jmp
loop
jbe
xchg
popa
bound
loopne
dec
pop
scas
pop
sbb
mov
test
mov
cmp
pop
sbb
mov
std
inc
mov
xchg
scas
inc
call
addr16
mov
and
hlt
mov
fwait
ds
jae
mov
dec
fisttps
cmc
adc
add
xchg
or
lods
out
and
shll
test
inc
lea
inc
mov
add
mov
pop
fidivs
test
cmp
mov
sbb
jmp
sub
aam
divl
inc
popf
das
push
xor
stc
jmp
out
mov
jmp
push
sbb
xor
adc
scas
sahf
push
call
loopne
stc
pop
aas
addb
popa
xchg
lods
cmpsb
in
pop
fwait
jne
cmpb
lea
jle
push
pushf
scas
push
push
jp
testb
jmp
inc
adc
pop
std
jb
push
and
sbb
and
out
cmpsl
rep
xchg
sub
xchg
pop
jmp
jae
cmp
in
leave
gs
mov
and
and
lahf
sub
dec
shl
mov
loop
inc
leave
inc
test
adc
leave
jb
pushf
inc
pop
divb
mov
pop
mov
inc
das
sub
dec
pop
dec
shrb
loope
pop
or
jno
cli
push
icebp
add
int
cmpsl
dec
gs
sbb
xlat
or
inc
insl
shr
aas
jp
sahf
pop
pushl
lret
rorb
sub
adc
nop
pop
cs
repnz
mov
outsb
jb
mov
shll
jle
sahf
pop
out
and
fisubs
jo
cwtl
movsl
jnp
jecxz
repnz
mov
sbb
pop
test
popf
faddl
adc
xchg
xchg
mov
mov
lods
call
inc
sub
pusha
mov
fwait
jl
ret
pop
or
shrb
adc
push
dec
rol
movsb
fstpl
xchg
sub
xchg
cmp
xchg
push
icebp
sbb
push
fadds
mov
inc
add
stos
xorb
aad
sub
clc
pop
loopne
pop
cmpsb
loopne
xchg
jp
pop
out
dec
pop
push
cmp
movsl
jbe
out
out
popf
mov
pop
xchg
fdivrp
fsubrs
fstl
jbe
loope
out
out
hlt
std
sub
adc
or
mov
out
int
jmp
scas
sub
dec
jno
jae
pushf
repnz
jne
dec
mov
inc
jge
mov
cmp
aad
pop
xchg
fists
inc
mov
aad
mov
sub
add
inc
sub
in
test
fs
aam
cmp
out
dec
stc
fnstsw
loopne
mov
push
or
test
and
aas
pop
pop
aaa
cmp
push
mov
sbb
dec
jp
out
jle
mov
fwait
daa
xor
lock
ret
push
xor
pop
xchg
push
jmp
int
leave
cmp
mov
stos
adc
call
add
add
and
jo
push
mov
mov
rcr
add
popf
push
jbe
sub
adc
mov
setno
mov
dec
sbb
movsb
je
and
js
repnz
inc
or
inc
cmp
mov
ljmp
dec
shll
cmp
mov
mov
dec
aam
sbb
imul
dec
dec
push
je
or
cld
cwtl
lahf
jmp
xor
sbb
test
inc
mov
add
sbb
jge
stos
movsl
inc
cmp
pop
insl
mov
daa
hlt
mov
sbb
mov
add
cmc
stos
mov
popf
clc
or
out
lret
push
jle
ficoms
dec
mov
cmp
adc
adc
test
loopne
push
jo
add
js
mov
push
cwtl
ljmp
shrb
sub
xor
jmp
int
sti
and
pop
xor
xor
cltd
fwait
sub
inc
mov
mov
movsb
roll
out
ds
shl
imul
pusha
test
and
sub
rolb
adc
adc
arpl
cmc
fidivrl
ja
fucomp
jecxz
outsl
icebp
cmc
dec
jg
cmp
mov
inc
popa
test
movsl
lret
xor
and
pop
pop
xchg
pop
scas
mov
loope
mov
stc
add
sbb
mov
stos
or
or
shl
jecxz
std
test
fwait
xor
jno
scas
lods
orb
mov
inc
ret
loop
mov
sub
jecxz
mov
push
or
mov
aaa
stc
outsb
fnstsw
sbb
ljmp
pop
pop
xor
aas
inc
filds
incl
mov
ljmp
stc
stos
sub
jne
jl
jge
xor
movsb
nop
add
and
mov
aaa
sub
arpl
mov
push
push
stos
ret
add
dec
out
and
push
fnstenv
enter
sbb
in
daa
pop
mov
mov
xor
jge
outsl
pop
int
xchg
insb
push
popa
fnstenv
cld
push
or
dec
pop
out
cmc
mov
mov
jnp
aam
loopne
lret
xchg
mov
stos
pop
add
mov
addb
out
repnz
lods
sarl
mov
shll
dec
adc
cmp
mov
aas
fstp
xchg
jnp
or
jg
xlat
pop
icebp
mov
movsl
stos
inc
or
fs
ljmp
mov
and
dec
inc
movsl
iret
push
scas
sbb
and
leave
mov
xchg
cld
jae
pop
ljmp
rcl
testb
xchg
xor
int
push
dec
lret
das
mov
cmp
leave
aam
xor
push
shl
mov
mov
mull
sub
test
ficomps
icebp
lods
add
jle
lcall
movsb
mov
or
lds
dec
and
ds
test
divb
aas
stos
jns
inc
movsb
mov
push
pop
movsb
jnp
clc
out
jae
push
push
jle
ja
mov
movsl
xlat
and
insb
rolb
mov
fcomps
sub
lea
adc
sbb
cld
test
test
sbb
dec
shl
pop
jge
js
out
popa
lret
push
shlb
inc
insl
mov
inc
mul
cmp
out
fimull
mov
popa
inc
insl
jae
popf
stos
rcll
lret
roll
inc
movhlps
xor
inc
inc
adc
mov
shl
dec
mov
cmp
jle
inc
hlt
dec
cmc
ljmp
fwait
out
daa
push
push
cli
cld
rolb
les
ret
addr16
xchg
inc
mov
and
pop
xchg
sbb
test
or
or
ds
add
dec
jmp
out
stc
lret
push
loope
push
xchg
negl
mov
pop
ss
pop
out
shlb
ljmp
jns
xchg
call
popa
or
or
jge
mov
fmull
fsubr
dec
push
sub
rcl
sub
hlt
xchg
mov
dec
daa
cltd
cltd
gs
jne
pop
dec
push
jmp
pop
inc
push
ljmp
ss
das
cmp
cmp
mov
pop
adc
out
mov
push
xor
testb
jb
frstor
test
or
test
mov
lret
add
cmp
xchg
iret
sub
fs
add
int3
inc
push
sbb
lock
adc
inc
pop
pusha
jmp
jns
cmpsl
cmp
push
dec
sbb
dec
popa
pushf
adc
in
leave
popa
popf
inc
idivb
dec
lock
xor
es
inc
ljmp
mov
jmp
cmp
test
icebp
cs
loope
lea
bound
test
sbb
adc
xorl
fimuls
mov
add
mov
cmpsb
add
inc
sub
ret
bnd
pop
sub
sbb
dec
scas
dec
mov
scas
shr
mov
insl
pop
call
inc
sahf
test
lds
adc
out
insl
dec
pop
jle
jecxz
mov
pop
std
popa
cwtl
repz
inc
sti
xor
add
cltd
mov
ja
sbb
adc
arpl
lret
pop
xor
pop
aas
push
mov
dec
out
movsb
mov
cwtl
neg
loope
xor
in
fndisi(8087
mov
fiaddl
jne
outsl
mov
psubsb
repnz
les
and
ret
imul
stc
popf
dec
cmpsb
jb
add
jl
shlb
stos
or
arpl
xchg
dec
mov
add
sbb
gs
pop
notl
sbbb
xor
movsb
mov
adc
or
push
ror
cmp
sub
lea
adc
daa
aaa
test
dec
stos
cmp
xchg
mov
xchg
cmp
arpl
jp
mov
popa
push
adcl
test
cmc
push
out
jno
and
inc
movsl
scas
cmp
pop
mov
pop
cltd
stc
das
jno
jnp
fists
xor
into
sub
decb
jle
push
andl
std
fnstenv
test
mov
jp
push
sbb
xchg
movsl
sub
lcall
testb
aam
mov
jp
jge
ja
roll
shlb
jns
add
insl
repnz
lds
mov
ret
mov
sahf
dec
cmp
xor
and
cltd
adcb
rorb
cmp
xor
xlat
inc
push
jp
xlat
mov
mov
sub
mov
sbb
lods
rorl
loopne
jecxz
xor
lret
push
push
push
xchg
fcomp
movaps
xchg
rcrb
cmp
xchg
mov
xlat
xchg
xor
and
sbb
std
gs
pop
inc
and
jl
and
into
scas
nop
mov
into
dec
clc
dec
mov
repnz
and
jl
cmp
jl
or
mov
iret
jo
inc
sub
xor
adc
sbb
mov
adc
dec
call
popa
jle
int3
stos
dec
shl
popa
imulb
roll
gs
add
push
cld
imul
jecxz
pop
xchg
sub
push
adc
pusha
lods
fwait
nop
dec
jne
and
lods
dec
push
xor
fidivl
pop
adc
pop
add
cld
cs
in
mov
xchg
push
sub
lret
push
sbb
push
and
scas
je
pop
pop
jmp
out
daa
push
int
xchg
mov
or
dec
mov
fdivrs
loope
jb
test
fsts
and
and
fistpll
std
mov
xchg
and
mov
test
xchg
push
adc
sarl
insb
and
gs
repnz
into
lret
call
cmpsl
cmpsb
aaa
add
xchg
mov
push
xchg
addb
int3
xchg
ficompl
cmpsb
enter
lds
mov
fmuls
xchg
mov
inc
xor
sbb
outsb
xchg
ficompl
mov
lret
movsl
mov
xchg
push
and
pop
rolb
add
lds
xchg
mov
mov
dec
repnz
insl
iret
xchg
jmp
inc
xchg
inc
cmp
je
in
jno
mov
cmp
daa
iret
sub
movsl
jmp
es
cmp
add
xlat
rcll
lods
imul
cmp
pop
mov
push
jmp
adc
mov
fdiv
out
std
jmp
inc
push
sbb
in
dec
push
lock
dec
scas
cmp
stos
mov
shll
jmp
add
idivl
or
subb
lcall
cmp
sahf
ja
sub
pop
mov
fisttps
or
xchg
sahf
sub
mov
xchg
int
sub
ffreep
adc
out
jmp
push
decl
insb
mov
stos
popa
push
push
add
ret
movsb
lock
jbe
jae
mov
mov
cmp
or
loopne
jmp
inc
arpl
dec
sbb
jge
clc
mov
stos
push
ljmp
or
sbb
out
bound
sub
mov
inc
xlat
xchg
cmc
and
mov
and
scas
push
rcrl
movsb
sub
mov
push
shr
or
sbb
or
jg
push
lds
mov
mov
in
dec
ja
ljmp
js
pop
inc
in
nop
inc
and
ja
lea
cmp
std
sarb
cld
das
out
fistps
pop
jmp
push
mov
dec
mov
test
cmc
jg
pop
push
adc
repnz
xchg
mov
push
dec
inc
mov
jecxz
sbb
pop
push
clc
loopne
stc
lcall
into
and
cs
and
adc
cwtl
fistps
lock
and
scas
xchg
xchg
test
lahf
mov
rclb
mov
and
mov
sbb
inc
sbb
imulb
jns
fst
icebp
jae
adc
add
dec
xchg
add
outsl
dec
cmpsb
mov
mov
int
in
push
fldt
icebp
bound
jnp
test
bound
aad
enter
inc
es
and
stc
ret
xchg
push
add
jns
mov
rcl
add
cwtl
push
xchg
jmp
adc
icebp
xor
and
mov
jg
and
stc
jne
out
xchg
shll
jl
pusha
xchg
std
divps
xorb
cmp
out
and
fwait
jbe
lea
leave
jnp
cwtl
and
xor
imull
adc
pop
cmpsb
mov
sbbl
jl
mov
ficompl
scas
adc
popf
lret
push
and
shr
push
fstpt
jbe
cmp
sahf
or
adc
or
mov
mov
das
pop
out
leave
xchg
aas
les
mov
lods
pop
push
aam
ljmp
dec
std
pop
mov
jle
sahf
das
mov
rcrb
xor
fnstenv
xor
mov
iret
xchg
jp
test
fisubl
xchg
jae
outsb
gs
sbb
sub
sub
pop
dec
lea
xchg
xor
imul
je
xorl
lock
in
cltd
push
iret
ret
inc
xchg
in
arpl
jp
inc
leave
test
in
inc
aad
jno
in
sahf
or
in
nop
fwait
sbbb
data16
cld
inc
mov
xchg
xor
cli
daa
out
mov
std
into
js
add
xor
jmp
fwait
or
ds
data16
in
inc
movsl
adc
addr16
idivl
mov
add
pop
mov
pop
idivb
xchg
std
and
dec
sti
je
mov
loopne
adc
mov
mov
sarl
icebp
push
insl
pop
cmp
mov
jmp
xchg
mov
in
push
gs
sahf
aad
adc
and
clc
test
iret
cltd
sbb
sbb
xlat
inc
or
repnz
inc
call
cltd
shll
dec
pop
imul
int
sahf
push
addr16
cld
iret
arpl
mov
data16
adc
in
mov
rol
lods
cmc
rolb
lods
imul
jnp
testl
adc
pop
popa
and
mov
sub
popa
idivb
stc
test
cmpsb
mov
mov
add
aas
pushf
sbb
dec
jmp
test
xchg
aaa
jg
xchg
adc
push
popf
icebp
mov
and
mov
dec
popf
arpl
push
add
cmpsb
ja
sub
andb
cmp
xchg
push
frstor
xchg
js
and
bound
pop
mov
sbb
inc
shrb
or
test
cmp
xchg
insb
aas
test
loopne
out
imul
fildll
mull
push
popa
in
mov
stos
xchg
int
loop
push
xchg
aam
gs
xor
xor
and
hlt
outsl
and
mov
jno
mov
sbb
int
je
arpl
call
sub
test
add
pop
loope
adc
jmp
jns
mov
pop
fcoml
cld
fmuls
arpl
inc
cmp
cmpsl
test
xorb
inc
sarb
push
mulps
outsl
out
pop
scas
lods
xor
or
adc
cmp
dec
xchg
jg
cmp
jo
mov
mov
push
outsl
gs
cwtl
lods
sbb
mov
and
mov
sbb
mov
aaa
mov
sub
xchg
imul
mov
sti
sahf
and
pop
cmpsl
enter
xchg
xor
stc
fisubrl
xor
int3
test
and
or
pop
mov
pop
les
repnz
aas
subb
mov
test
dec
mov
das
int3
orb
mov
fidivrs
jo
popf
sbb
sub
inc
dec
repnz
inc
mov
inc
popa
ja
push
add
test
dec
arpl
mov
fstps
icebp
rclb
pop
and
sahf
sbb
xor
dec
sbb
mov
inc
pop
mov
addr16
jnp
dec
movsb
pop
loop
cmp
mov
xchg
jge
ret
mov
push
cli
insb
mov
hlt
push
inc
dec
xor
addb
inc
pop
test
mov
or
fcmove
jbe
dec
adc
jb
icebp
xchg
and
notb
inc
lret
ret
inc
mov
std
dec
mov
xchg
mov
and
dec
mov
inc
sbb
jge
push
and
mov
ss
sti
js
jnp
lods
std
imul
leave
int3
dec
mov
loop
cmp
mov
cli
test
mov
test
xor
xor
cltd
stos
lods
jp
push
mov
sub
out
cmc
mov
sbb
pop
ja
jmp
lock
add
loope
filds
pusha
or
cs
hlt
push
and
mov
ja
adc
push
out
dec
or
ret
imul
xchg
js
cld
mov
idivl
pop
or
scas
repnz
mov
mov
pop
inc
jne
sub
mov
loope
or
fisubrl
xor
mov
mov
adc
add
mov
push
dec
jecxz
std
sbb
rolb
add
and
xor
imul
cld
leave
or
mov
je
xor
cmp
add
push
movlps
lods
mov
stos
mov
pop
push
bound
outsl
dec
sbb
jle
call
roll
and
loope
mov
mov
ja
mov
or
push
lcall
xchg
sbb
mov
sahf
sbb
mov
cmc
cltd
add
sub
inc
sub
mov
les
stc
sahf
jno
xchg
cmpsb
stos
push
jne
shll
ret
mov
xchg
movb
bnd
inc
dec
mov
xchg
mov
dec
lcall
xchg
jle
cmc
mov
or
addr16
jns
scas
push
imul
movsb
mov
dec
push
push
data16
mov
cmpl
lock
xchg
in
lahf
fwait
std
lock
cmc
sub
sub
loope
test
fnstcw
push
jmp
pop
enter
mov
std
and
or
dec
sub
xchg
lret
push
ss
or
push
jne
sub
pop
or
cmp
daa
push
xor
iret
ljmp
imul
push
jle
mov
movsl
int3
aaa
add
xor
mov
insl
and
pop
dec
fisttps
sti
jae
xorb
and
mov
popa
mov
and
fs
pop
loopne
out
rep
int3
adcl
clc
mov
test
mov
mov
cmpsl
push
xchg
mov
inc
fnstenv
inc
jbe
jno
mov
insl
fisttps
sub
into
nop
shr
pop
rcl
dec
jg
loope
cmpsb
sub
les
push
and
and
sbb
add
out
mov
lock
into
or
xchg
or
lret
cli
mov
out
jnp
ja
repz
sbbl
imul
add
dec
sbb
scas
sub
and
sub
xor
ret
lret
adc
iret
sbb
sub
jmp
jno
popf
sarb
push
aam
int3
aam
fiaddl
mov
in
js
scas
inc
mov
mov
sbb
aaa
call
jbe
loop
jno
insl
inc
push
pop
cmc
sub
test
mov
push
pop
fwait
pop
xchg
arpl
jae
das
jns
mov
dec
push
mov
lret
imul
xor
lahf
jecxz
les
sub
or
shll
sahf
shr
sub
cwtl
mov
rcll
les
and
inc
notl
push
pop
mov
in
pop
pop
and
xor
mov
pop
mov
xchg
inc
pop
cwtl
jmp
cmp
sub
xchg
cld
push
inc
adcl
sbb
enter
shrl
rolb
lods
and
movsl
mov
aam
or
sbbb
sarl
jbe
xor
mov
or
dec
das
lret
push
or
cmp
clc
bnd
ret
shl
pop
jae
out
aam
ljmp
jecxz
mov
sbb
dec
fucomp
ja
arpl
imul
push
shrb
add
jnp
ret
dec
mov
jle
or
jo
dec
inc
sbb
les
mov
and
or
and
jp
cvtdq2ps
inc
pop
int
mov
int3
cmpsl
shll
mov
dec
stos
mov
add
loope
fidivs
jecxz
pop
jnp
insb
cmp
mov
popa
mov
cmpsb
jecxz
xor
out
mov
sub
push
icebp
lock
add
ret
movntps
repz
jmp
cmc
insl
ret
icebp
inc
mov
shl
loopne
mov
xchg
orb
fmuls
mov
jp
dec
dec
add
mov
cmp
arpl
call
mov
mov
imulb
stos
test
stos
imul
adc
xchg
les
xor
imul
sub
pop
call
ds
popa
xor
cmp
mov
push
rcr
push
cwtl
mov
test
rclb
pop
ss
xchg
enter
jb
clc
pop
cmp
mov
pop
ds
out
dec
fstl
pop
insb
jb
xor
push
and
pop
mov
mov
fsubrs
stc
mov
repz
mov
mov
inc
ljmp
rclb
pop
push
push
sbb
leave
nop
mov
adc
hlt
in
testb
fcoms
or
jno
push
in
mov
ja
jp
dec
test
mov
pop
fdivs
xlat
jmp
add
mov
sub
mov
adc
pop
push
jmp
sbb
mov
xchg
add
pop
cli
fxam
cmp
scas
or
out
es
inc
out
inc
cmpsb
and
in
mov
dec
add
je
and
call
xor
decb
cld
scas
jg
inc
pop
into
adc
ljmp
fisubrs
insl
pop
pcmpeqw
fwait
into
clc
popa
jns
loopne
popa
mov
outsl
mov
sahf
addb
xchg
mov
mov
lret
ret
js
jo
das
xlat
arpl
pop
nop
push
inc
divb
mov
mov
xchg
das
ds
xchg
cltd
dec
pop
mov
fisubs
mov
int
adc
test
rol
and
push
push
pushf
or
hlt
jmp
add
ljmp
mov
inc
adc
fisttpll
or
push
lods
fs
gs
in
xor
repz
xchg
scas
xchg
mov
daa
daa
pop
or
outsb
jle
xor
out
fbstp
in
xchg
pusha
dec
mov
jle
pop
mov
push
out
mov
and
or
mov
cwtl
dec
mov
rclb
cs
push
mov
mov
mov
js
call
aas
mov
sbb
mov
es
lret
xor
add
inc
addr16
xchg
and
inc
ret
push
mov
outsb
push
mov
in
mov
les
je
mov
dec
push
stos
xchg
lods
pop
repnz
sub
adc
pop
pop
stos
cmc
dec
push
add
arpl
lods
shlb
sbb
ret
aam
inc
sarb
dec
dec
pop
sub
jnp
fdivs
push
cwtl
roll
dec
pop
push
xlat
mov
xchg
movsl
movl
dec
push
sub
cmp
push
fnstenv
jg
mov
aam
nop
sub
or
cmp
lahf
ret
xchg
movsb
xor
mov
jbe
push
fildll
and
aaa
mov
daa
push
loop
pop
movsl
mov
mov
ficoms
push
cmp
sbb
push
dec
lahf
lock
pop
int3
pushf
scas
jb
bound
sbbl
test
aas
pop
add
mov
or
xchg
pop
lcall
movsl
dec
cmpsb
fidivs
cmp
or
xchg
cwtl
test
push
cmp
add
leave
lcall
add
les
and
fidivl
mov
and
mov
repz
out
icebp
aaa
lods
imul
xchg
cltd
filds
arpl
push
mov
nop
out
roll
gs
cld
test
xchg
out
mov
mov
cmp
jmp
addl
mov
test
out
jecxz
popa
test
jmp
cmp
mov
pop
sbb
pop
test
mov
loopne
in
enter
clc
imul
fnstcw
mov
loope
push
clc
xchg
mov
dec
mov
lret
and
jg
into
movntq
pop
dec
xchg
push
clc
pusha
and
lret
cwtl
call
jae
mov
xor
ds
inc
fmull
imul
call
mov
pop
or
mov
jns
out
push
loope
pop
xchg
mov
inc
sahf
dec
inc
adc
xor
in
test
incb
shll
aam
mov
dec
sub
leave
jg
lahf
sub
adc
jge
push
pop
arpl
arpl
repnz
js
xor
mov
cmp
jmp
jp
loope
cli
sub
mov
cld
das
es
add
add
lret
ljmp
cwtl
fwait
jbe
cmp
add
mov
jp
out
jp
ds
xlat
mov
inc
sbb
inc
push
mov
je
mov
pop
leave
xchg
outsb
lret
jecxz
mov
push
jmp
or
cmp
in
and
cmp
sahf
and
lret
inc
pop
and
call
push
mov
into
add
repz
xchg
jno
mov
pop
or
and
and
mov
lret
outsl
lahf
ds
adc
xchg
dec
and
add
mov
ljmp
xor
popa
mov
mov
movsb
dec
aam
andl
sub
lahf
mov
push
imul
or
push
xchg
push
and
movsb
loopne
sub
mov
pcmpgtb
pop
mov
inc
pop
iret
cs
bound
mov
mov
pusha
ficoml
xor
push
add
aam
dec
into
jmp
adc
sub
xchg
dec
stos
lock
lods
mov
jns
pop
xor
add
xchg
adc
xchg
pop
adc
ret
cmpsl
lods
xchg
aaa
push
adc
fwait
mov
imul
hlt
mov
mov
arpl
or
adc
addr16
dec
sbb
xchg
mov
mov
or
jbe
jne
outsb
adc
mov
rcrl
dec
mov
in
andl
inc
mov
inc
arpl
jmp
pop
xlat
movsb
pop
xchg
push
or
inc
outsl
sub
push
sub
xchg
mov
xchg
inc
leave
rcll
xchg
xchg
int
test
or
jbe
push
out
lret
out
ret
fstps
roll
stos
stc
mov
stos
cwtl
movsb
out
js
jae
out
and
pop
and
pop
add
push
cmp
out
mov
push
add
inc
rolb
mov
cmp
dec
sub
or
or
jo
pop
jae
xor
repnz
fstpt
sbbb
es
mov
or
aaa
pop
insb
add
popf
xor
mov
push
pop
dec
inc
int3
popa
in
mov
adc
aad
mov
jmp
sbb
sbb
out
mov
divl
cmp
scas
cli
push
dec
cmp
hlt
fucom
mov
lcall
or
xor
pop
sti
imul
sahf
push
inc
jg
pop
aaa
xchg
sub
in
adc
cwtl
push
sub
adc
adc
xchg
repz
lcall
adc
mov
scas
stos
or
inc
jnp
lret
add
stos
lret
jle
cltd
pop
adc
push
adc
in
sbb
arpl
ss
push
orl
andl
jg
pusha
jmp
shrb
leave
xchg
addb
cmp
sbb
cmp
call
push
jge
pop
jno
sti
in
clc
bnd
iret
in
cmp
sbbl
sbb
sbb
mov
prefetcht2
lods
cmp
push
sub
aas
pop
cmp
pop
mov
mov
push
fs
lea
xor
mov
cmp
test
jbe
fmull
jns
stos
fisubrl
push
lcall
mov
mov
dec
jnp
dec
sahf
rorb
push
add
mov
pop
sub
dec
pop
out
cvtpi2ps
clc
wbinvd
and
lahf
movsb
fsubrl
out
rolb
lds
pop
rorl
and
int3
or
sub
push
adc
dec
inc
dec
imul
push
int
ds
sbb
xchg
sbb
xor
in
icebp
push
sbb
jle
loopne
cmpb
and
cs
sub
ret
push
aam
jno
push
pop
inc
das
imul
out
push
mov
lret
mov
sbb
ret
shrb
push
mov
jg
pop
jae
push
mov
cmp
dec
lock
add
loope
xor
jp
jne
jne
xchg
jne
stos
xorb
gs
or
mov
jl
sbb
mov
fdivr
icebp
inc
and
in
sbb
xchg
push
jb
test
shll
xchg
leave
cmpsb
cmc
idivl
lods
jge
loopne
in
or
negb
xor
mov
mov
jae
dec
in
pop
adc
mov
mov
sub
addl
inc
rcr
das
mov
lock
negb
cmp
popf
stos
cltd
mov
lcall
mov
mov
mov
jno
xchg
fidivrs
or
test
pop
mov
call
xor
lods
fs
add
add
jo
addl
lret
cmp
jne
and
or
dec
inc
mov
push
loope
inc
mov
scas
rol
jp
std
or
cwtl
movsb
push
pop
jmp
out
jbe
aaa
jae
out
sub
sahf
loope
repnz
mov
dec
cltd
mov
sti
call
ret
fldl
push
pop
iret
cwtl
fdivr
lret
ret
lock
add
in
inc
aam
andl
add
inc
andb
repz
push
mov
mov
outsl
cmp
lods
pop
pop
imull
sbb
loopne
xorl
loopne
in
cmc
jnp
push
inc
leave
add
xor
dec
mov
pminsw
xchg
pop
cwtl
ljmp
cltd
in
pop
xchg
dec
jg
loope
or
xlat
add
jle
cmpsl
mov
pop
xchg
sub
dec
cli
pop
sub
arpl
jmp
sub
lea
xor
loop
dec
in
mov
inc
sbb
in
mov
sarl
mov
repz
cmp
jne
clc
mov
popf
dec
sti
and
mov
shrb
xor
sahf
push
in
enter
mov
pushf
jne
movsl
cs
mov
jl,pt
insb
push
fisubrs
cmpsl
lds
jg
lret
scas
cmc
cmc
push
pop
inc
sub
cmpsb
sbb
mov
push
push
leave
jno
jno
push
jne
rclb
mov
dec
dec
xchg
adc
sbb
xchg
dec
fidivrs
stc
push
push
jbe
ja
out
test
lods
jle
add
mov
popa
cmp
xchg
sub
loop
cmp
sbb
test
ret
lret
push
jecxz
cli
pop
mov
ss
adc
in
push
mov
sti
jmp
sbb
sarb
jnp
or
cltd
ds
xchg
xchg
lea
mov
mov
ja
daa
fcmovu
fdivr
test
cld
sarl
stos
icebp
daa
jg
mov
test
inc
sbb
cmc
lds
pop
lahf
shlb
ret
push
enter
adc
pop
daa
jge
outsb
out
push
mov
ret
dec
cmp
xchg
filds
out
xchg
mov
jp
sub
push
adc
lds
sahf
inc
stos
xor
pop
jl
leave
mov
mov
dec
mov
adc
sahf
dec
insl
imul
bound
test
mov
hlt
adc
xchg
mov
ss
jb
jne
and
mov
jae
mov
jb
sub
das
or
adc
mov
test
cli
sbb
outsl
add
in
inc
push
cltd
ffreep
adc
adc
mov
push
fs
dec
xchg
iret
dec
xchg
adc
arpl
fwait
dec
fisttpll
scas
notb
repz
into
rcr
push
fldl
mov
xor
mov
pop
dec
jle
cmc
fs
aam
repnz
mov
push
sbb
sub
mov
adc
ja
dec
mov
imul
clc
sub
jge
push
cmp
pop
shrl
imulb
sbb
jnp
cmpsl
pop
loopne
sar
dec
push
mov
push
cs
adc
mov
leave
shrl
inc
sbb
cli
adc
addr16
bound
movsb
loop
mov
jge
push
daa
rorl
insb
cmc
pop
je
xor
jge
ret
cltd
adc
mov
lcall
jmp
stc
pushf
jge
out
out
fimuls
imul
xchg
cmpxchg
sbb
mov
pop
testb
mov
jns
dec
jge
hlt
and
sub
cmp
add
mov
xchg
mov
sub
in
subb
js
in
cmp
or
js
cld
cmp
enter
push
mov
and
shlb
aam
jnp
cli
pop
sbb
mov
xchg
ja
jbe
or
cs
imul
mov
sub
lret
inc
mov
arpl
adc
lods
cs
push
shlb
cmp
lds
mov
mov
aam
cmp
addr16
out
cmp
sbb
push
repnz
sbb
sub
sbb
xchg
aad
pop
fidivl
enter
popa
dec
push
sub
inc
fadds
pmulhw
lds
dec
fcmovbe
shl
add
mov
lret
rep
dec
ret
cmp
pop
popa
loope
test
jne
das
andl
xorb
test
pop
ss
hlt
lds
cltd
cmpsl
orl
iret
mov
pushf
lds
xchg
xchg
xchg
cmc
mov
repnz
aaa
mov
mov
lds
sub
lea
ficomps
mov
add
jns
add
es
loop
arpl
mov
add
shrb
jg
sbb
pop
mov
ljmp
xchg
push
mov
mov
shrb
fstp
mov
jb
or
mov
rolb
xchg
xchg
add
lds
and
and
cmp
jno
mov
or
jae
mov
xor
filds
sahf
mov
movsl
add
cltd
push
xchg
sarb
mov
shrl
idivl
inc
ret
out
mov
or
xchg
adc
test
jno
lret
cld
xchg
xor
dec
dec
add
mov
fs
and
dec
popa
outsb
push
xor
push
and
dec
sbb
loop
fwait
out
dec
ljmpw
rcr
mov
fisubl
xor
movsl
or
jb
and
inc
mov
jmp
out
scas
dec
dec
imul
jae
xchg
mov
hlt
ljmp
push
jecxz
lahf
int3
stos
out
flds
push
sbb
xor
jae
in
cmpsb
xchg
call
pop
and
add
out
in
loop
test
lods
jns
rcr
xchg
push
callw
sbb
ds
bound
pop
jb
mov
xor
fsubs
mulb
je
inc
inc
and
aas
mov
mov
mov
in
or
into
ret
dec
lret
mov
dec
call
and
scas
imul
sbb
jne
inc
mov
jecxz
out
lock
sub
dec
mov
sbb
lea
pop
loop
in
into
gs
xchg
mov
pop
xchg
imul
popa
test
cmp
push
push
andb
jl
sahf
test
inc
sbb
inc
daa
dec
fwait
jnp
in
psrlw
xor
rorl
stos
sar
cltd
es
sbb
jmp
xchg
cwtl
jg
mov
push
sbb
pop
xchg
data16
int
sub
movsb
bt
jb
mov
fisubs
in
aam
mov
mov
jnp
mov
xorl
scas
iret
out
hlt
popa
mov
pop
jmp
cmp
fs
inc
push
xchg
pop
rcrb
push
call
sbb
cmp
sbb
push
xchg
mov
mov
lds
push
dec
nop
inc
out
xorb
rcl
xor
sub
pop
in
mov
stos
ficompl
stos
inc
data16
mov
stos
lods
call
pop
inc
aad
add
lea
sbb
push
or
scas
pop
jg
mov
outsb
fdivrl
lahf
in
pop
repz
add
xor
push
mov
popf
sarl
sbb
inc
lods
insb
xchg
rolb
ljmp
fists
loopne
imul
xchg
sbb
xchg
push
lods
cmpb
push
andb
shlb
insb
jecxz
loop
fwait
add
add
enter
xchg
sbb
into
mov
es
jmp
sbb
pop
movsb
jbe
mov
test
xchg
insb
mov
jnp
xor
inc
adc
or
sub
adc
mov
dec
lock
shl
ret
sub
int3
repnz
lock
lock
jb
sub
adc
sarl
add
or
xchg
or
test
sbb
or
cmp
or
and
xchg
xchg
pop
mov
fadd
sub
ret
or
fistps
sbbl
add
lret
add
mov
iret
pop
add
sbb
inc
pop
pushf
enter
jmp
dec
xchg
out
xchg
std
testl
rol
pushfw
mov
jge
es
clc
add
mov
sub
jne
cmc
addr16
mov
add
outsb
sub
pushf
lds
mov
mov
pop
fcomps
jp
mov
sbb
out
mov
pop
test
add
cmp
jmp
mov
mov
in
mov
movsl
test
inc
lahf
adc
xchg
ljmp
mov
dec
cmp
aaa
jg
ds
adc
cmpsl
scas
xor
pop
jge
pop
out
inc
sub
dec
mov
or
or
xor
mov
leave
mov
xchg
les
mov
push
aas
sub
inc
hlt
adc
mov
and
stos
inc
lret
cmc
cmc
mov
in
cmp
pop
hlt
jp
out
repz
je
fstl
test
mov
adc
sti
cwtl
mov
add
movsl
xchg
cmp
push
bound
push
stos
int
lret
fs
lea
add
in
jl
jg
das
mov
or
shlb
insl
cwtl
cmc
xchg
xor
xor
cmp
aam
push
cmp
mov
mov
dec
in
xchg
fistpll
stc
aad
inc
or
sti
xor
xchg
je
loopne
jge
xor
push
aas
pop
adc
hlt
mov
adc
cmp
je
shlb
dec
mov
and
sub
jmp
ficoms
in
sbb
in
jl
xchg
pop
movsl
imul
mov
cmpsb
int3
js
repnz
test
fcmovnbe
sub
or
xchg
xor
ret
ds
or
jb
int
mov
xor
xchg
and
mov
mov
lods
dec
pop
fistps
push
popf
bound
adc
sub
inc
mov
data16
adc
ss
loope
dec
scas
push
push
aaa
and
clc
mov
test
xchg
and
mov
cmc
mov
sub
loope
test
and
sub
ljmp
lock
cmp
shrl
sbb
mov
clc
adc
movl
jne
in
mov
mov
inc
mov
ret
pop
pop
xchg
pop
cmp
aas
mov
mov
call
dec
repz
leave
pop
jb
pushf
jns
adcb
cmp
pop
je
push
add
leave
cmpsb
lds
out
jmp
jne
mov
cli
lea
aad
xchg
test
cltd
add
fistps
push
aam
xchg
ret
cmp
cltd
and
imul
lods
cmp
pop
sbb
ss
cltd
mov
stc
add
jae
movsb
inc
aaa
and
add
js
mov
roll
fsubs
cmpsl
inc
lcall
push
iret
push
dec
sub
mov
stc
sti
mov
jge
xchg
sbb
xor
stos
out
daa
sti
in
or
psadbw
mov
add
pop
iret
mov
movb
xchg
sub
in
add
filds
jmp
ds
ret
ds
subb
push
sub
jl
cmp
es
and
adc
test
jae
pop
in
push
or
lods
push
mov
out
pop
test
add
scas
cmpsl
aam
jae
add
out
dec
je
fwait
mov
std
subl
fsubs
dec
movsl
cmp
xor
shr
stos
jl
mov
or
dec
mov
mulb
adc
hlt
mov
outsb
popf
rcll
push
fdivl
int
xor
xor
mov
fs
inc
xor
mov
cmc
es
imul
sub
cltd
mov
pusha
dec
lahf
ficoml
xor
adc
daa
lock
inc
js
stos
data16
idiv
or
xchg
cmp
adc
push
push
mov
and
jl
insl
lea
repnz
test
mov
cmp
enter
outsb
imull
loop
push
loopne,pt
mov
jge
lahf
adc
cmp
rcl
int
leave
mov
add
dec
cwtl
rolb
andb
cs
cmp
push
push
loope
arpl
ja
adc
fidivs
popf
dec
cmp
mov
lods
in
sub
dec
stos
mov
icebp
add
push
repnz
and
jno
jns
insl
add
sbb
aam
pop
fdivrs
fstpl
dec
sub
stos
call
adcb
push
js
pop
cld
and
push
jge
xchg
or
test
in
dec
xchg
mov
mov
sub
out
inc
jp
imul
out
push
and
jnp
cli
mov
shl
ss
sbb
shll
addr16
jl
jbe
mov
test
push
shr
fucomip
xchg
mov
xchg
in
fs
pop
xchg
stos
pop
aaa
icebp
push
lahf
push
push
jne
popf
in
hlt
xor
xchg
add
cmpsl
inc
mov
js
jle
jbe
jae
jnp
adc
mov
arpl
and
push
adc
or
mov
xor
inc
stc
in
sub
mov
dec
neg
pusha
sarb
bound
ljmp
jmp
sti
cmp
dec
sbb
frstor
cmp
lahf
aaa
into
push
popf
push
popa
jle
mov
mov
mov
aam
gs
or
cmp
mov
std
addb
mov
sar
clc
lds
fwait
movsl
test
ja
xor
jo
dec
aam
xchg
push
or
out
add
inc
add
lea
sub
cmpsb
adc
mov
popf
call
cmpsb
sub
ljmp
xchg
xor
leave
xchg
xchg
pop
jmp
int
ret
push
mov
xchg
lock
outsb
fs
sub
les
popf
sbb
rorb
fcomp
imulb
leave
fisubs
adc
scas
out
dec
gs
pop
in
push
sbb
push
cwtl
pop
cmc
lds
rorl
stc
xchg
sbb
out
cmpsl
inc
loopne
sahf
push
jnp
cmp
inc
push
nop
jp
mov
ja
je
cmp
fadd
sti
loop
ret
leave
jge
cwtl
dec
sub
cmp
inc
xchg
jb
mov
jg
mov
sbb
push
and
sarb
jp
mov
in
stc
lret
jecxz
addr16
xchg
call
dec
cmp
push
insb
lret
xchg
sub
xchg
xor
rcrb
mov
cmp
cli
adc
int
fcoms
roll
jnp
add
mov
sbb
stos
aad
sbb
mov
lcall
stos
push
sub
in
xlat
ret
jno
test
dec
sbb
repz
mov
lock
and
xchg
out
xchg
imul
clc
inc
pop
nop
pop
cmp
cltd
stos
in
inc
adc
inc
aaa
mov
je
pushf
xor
gs
add
push
cmp
mov
jge
out
sub
scas
cmp
pushf
and
and
jbe
push
cmp
cld
xor
mov
add
aad
jp
stos
mov
ds
ficomps
pop
inc
in
sub
and
lods
in
mov
dec
lods
mov
jg
sbb
cmp
out
movsl
dec
outsl
pop
pop
or
movsb
mov
pop
notb
test
loop
sub
cld
aas
out
cs
xchg
jge
loop
jo
xchg
mov
cmp
lea
mov
movsb
pushf
test
xor
xlat
jl
icebp
push
lock
mov
test
dec
mov
aaa
xor
push
out
mov
jecxz
mov
dec
testb
lret
add
in
hlt
addr16
cmc
lods
sbb
addb
enter
push
adc
outsl
mov
call
pop
xchg
sahf
ud0
call
inc
lcall
xor
mov
idivl
inc
lahf
call
cli
pushl
sbb
cmp
out
cmpsl
in
lds
int
bound
and
icebp
mov
xor
pop
push
out
jmp
mov
cmp
adc
mov
std
jle
dec
mov
cld
call
inc
sbb
pop
xchg
daa
or
push
es
stos
lret
cli
inc
divb
mov
mov
jo
cmp
mov
adc
js
adc
mov
cmpsl
cmp
push
lods
jbe
aaa
dec
jno
daa
xchg
faddl
mov
outsl
imul
mov
fwait
mov
pop
nop
ror
sub
jne
sbb
loop
xchg
dec
mov
or
incb
mov
mov
mov
jnp
mov
movsb
mov
das
lods
gs
xchg
mov
xchg
imul
mov
mov
cmp
xchg
or
inc
pop
mov
pop
je
pop
pop
testb
cmp
inc
call
data16
push
inc
cmp
jb
fndisi(8087
fsubrl
ds
jecxz
pop
iret
loope
dec
mov
cs
inc
in
scas
enter
scas
sbb
mov
fcmove
and
call
mov
push
ret
mov
shll
stc
gs
addl
test
pop
xor
jmp
push
lods
pop
mov
dec
fisubrs
shl
dec
or
mov
mov
xchg
sbb
inc
int3
push
stos
pop
pop
popa
insl
cmp
push
inc
cwtl
jp
scas
das
ss
add
mov
mov
fsubrl
aaa
repz
rcr
xor
adc
xchg
arpl
ja
mov
pusha
push
jo
sbb
call
xor
cmp
dec
add
testl
insl
xchg
stos
xor
int
divb
mov
cmc
inc
xchg
mov
fdivrl
push
sbb
xor
rorl
je
jne
lods
call
inc
dec
xor
fildl
mov
and
or
inc
push
cmc
cmp
lods
fucom
adcl
in
pop
lock
stc
push
sub
pop
mov
mov
scas
in
mov
jecxz
dec
cmpsl
cwtl
push
xchg
and
repz
add
and
rorb
sbb
cmp
xchg
or
dec
movsl
lods
adc
imul
mov
push
sbb
movsl
add
pop
lods
int
jno
rolb
mov
mov
lds
into
stos
sti
inc
sbb
stos
loop
out
insb
or
fcomps
scas
les
pop
inc
push
imul
es
mov
xor
or
jle
cmp
xchg
call
fadd
fnstcw
pop
xchg
movsl
out
jns
pop
jbe
les
push
sbb
sub
sub
pusha
insb
fstpl
scas
cmpsl
sbb
mov
fistps
fwait
outsl
rcll
dec
cmp
jb
jg
sub
inc
push
sub
xor
cmp
mov
mov
xchg
mov
mov
aaa
push
sbb
sbb
popa
adc
ds
idivb
cmpsb
das
ljmp
icebp
test
out
add
outsb
ja
cmpsb
sub
inc
cmp
and
lcall
jg
popa
mov
mov
int
loopne
cs
outsl
or
push
jmp
add
jb
mov
daa
xor
sbb
cmpsb
jp
cli
ljmp
adc
pop
and
cld
xchg
adc
mov
ficomps
xor
loop
adc
out
ret
sub
adc
jo
inc
push
test
imul
cmpsl
mov
daa
fsubr
loop
xor
pop
jno
xor
cmpb
aaa
fildl
cmpsb
andb
in
push
sub
cld
sti
inc
mov
arpl
jo
dec
cli
aam
sbb
xchg
mov
push
adc
jmp
nop
jo
popa
dec
daa
bound
cmpsl
jne
mov
sbb
ja
mov
adcl
loopne
cmp
lds
imul
mov
pop
popf
jp
notl
add
mov
stos
sub
into
mov
ret
mov
sbb
cmp
add
mov
dec
inc
mov
or
out
add
inc
imul
sub
sbb
movsb
jmp
xchg
popa
addb
pop
cmpsb
sbb
or
push
inc
dec
lods
jb
cld
aam
dec
add
add
inc
ret
adc
faddp
push
js
out
adc
inc
divb
in
bound
lahf
cwtl
mov
lods
or
out
sub
xchg
xor
sub
inc
or
and
test
xor
pop
jl
test
mov
xlat
jae
inc
cmp
mov
subl
dec
xchg
movsl
scas
fdivl
mov
je
in
in
mov
clc
aam
dec
adc
out
cld
pop
xor
jge
fdivr
aam
inc
call
xchg
push
adc
cmpsb
dec
xchg
mov
stos
sub
push
imul
adc
into
and
push
cmp
sbb
in
loopne
or
std
outsb
xchg
test
sbb
movsb
mov
lret
jno
mov
cmp
ds
testl
xor
rcr
or
mov
arpl
cmp
xor
dec
pop
out
or
xchg
jmp
shll
clc
mov
xor
addb
sub
push
out
sar
cmp
pop
push
mov
inc
pushf
jns
std
xchg
mov
movsl
leave
cmp
add
cs
xchg
leave
insl
push
imul
adc
mov
in
mov
push
in
jle
aad
xor
dec
pop
and
test
shrb
call
cmp
mov
sub
mov
ss
mov
jnp
das
jp
xchg
push
cmp
adc
std
xchg
mov
int3
aad
ljmp
push
mov
ja
push
xchg
insb
or
notl
loop
mov
ds
int
pusha
rolb
pushf
aas
push
mov
sarl
icebp
pop
mov
jae
movb
ret
or
cli
in
sbb
mov
jg
sarb
cwtl
cmp
xor
and
shlb
leave
add
xor
mov
sub
jae
cltd
mov
dec
xlat
sbb
outsb
mov
push
mov
push
or
fdivrl
jecxz
call
ljmp
pushf
push
xchg
lods
push
mulb
out
int3
popf
adcl
into
fs
imul
pop
xchg
adc
test
add
mov
and
ljmp
cld
jns
xchg
sub
in
push
je
mov
dec
addr16
aam
sti
jo
and
movsl
pop
mov
in
aam
xor
test
es
xor
lret
filds
scas
stos
jne
xchg
xchg
pop
orb
popl
xor
lock
xchg
jne
mov
xor
std
cmp
or
popf
inc
insb
pusha
pop
inc
adc
out
dec
ja
insb
insb
mov
pop
inc
mov
mov
ret
adc
fwait
rorb
push
leave
mov
adc
or
stc
or
daa
aam
cwtl
push
push
out
icebp
ja
lods
xchg
shll
jno
rcrl
mov
repnz
scas
push
inc
in
enter
inc
mov
mov
stos
fisttpll
leave
popf
push
jno
insb
popf
jo
out
sub
movsb
pop
pop
dec
jmp
addr16
cmp
inc
fidivrl
sbb
mulb
out
in
xor
xchg
and
pop
lock
shll
and
or
out
mov
fs
loope
dec
ficompl
pop
les
sub
push
push
mov
aad
aad
mov
outsb
insl
jns
fidivl
nop
mov
adc
stos
pop
jne
cmp
push
mov
data16
stc
in
jbe
mov
addr16
lret
sub
push
stos
dec
pop
ds
push
and
cmp
jge
xchg
cmp
js
test
ficoml
cmpsl
adc
jp
fdivl
adc
into
and
sub
subb
clc
pop
fsubrl
sbb
in
repz
icebp
add
dec
xchg
aas
add
xorb
cmp
call
jnp
loop
pop
jnp
into
xchg
shlb
in
repnz
sub
xchg
scas
push
mov
gs
aas
pop
imul
ret
inc
in
nop
push
inc
pop
loope
mov
mov
push
dec
cmpsl
jno
movl
sbb
pop
add
push
or
push
xchg
dec
movl
xor
je
fnsave
lods
clc
test
in
popf
pop
je
out
lods
icebp
and
mov
ja
decl
rcr
ss
sub
mov
ficompl
cwtl
popa
lret
mov
cli
jb
jle
push
or
lods
bnd
data16
shlb
mov
ret
jo
cmp
notb
adc
outsl
shrb
inc
xchg
fwait
or
test
pop
int3
lods
pop
outsb
cmp
cmp
inc
popf
rorb
dec
fisttpl
and
addr16
or
xchg
jb
sbb
pop
cmp
sub
push
adc
mov
call
das
decl
bound
pop
loop
stc
repnz
xchg
in
outsb
jns
jecxz
out
dec
mov
jno
push
popf
xor
adcl
adc
push
cwtl
mov
mov
std
cmpsb
dec
fcmovnb
popf
lods
mov
jmp
mov
jne
ja
cmove
movsb
loope
fcompl
lret
jo
lea
dec
gs
int
add
mov
enter
subb
push
cmpl
add
sbb
testb
cmp
jge
movsl
xchg
xor
data16
xor
outsb
push
and
mov
dec
sbb
push
sahf
pusha
sub
jnp
mov
adc
dec
mov
inc
sbb
sti
adc
rorl
add
inc
jb
fwait
mov
fnsave
movsl
jno
fstl
and
xor
shrb
out
pop
cmp
mov
imul
lea
inc
std
lret
fnstsw
sahf
sar
cmp
jl
pop
sarl
ret
ja
dec
push
cmp
push
inc
out
jbe
int
fimull
dec
or
aas
je
hlt
push
xor
leave
dec
pop
cltd
jg
adc
js
and
dec
test
ret
pop
aad
pop
inc
push
and
add
or
or
xor
add
scas
dec
into
push
lahf
out
jno
out
das
sbb
or
mov
xchg
in
sbb
das
xor
cs
inc
js
das
fcomps
sbb
testl
lahf
das
xchg
cld
and
movsb
mov
sub
xchg
mov
jmp
leave
xor
jns
aad
pop
testb
push
outsb
pop
mov
cltd
inc
or
mov
mov
push
xor
push
mov
xor
andb
inc
inc
adc
add
jbe
dec
push
mov
mov
pushf
xor
pop
and
xchg
xchg
jge
les
push
or
insl
inc
mov
push
cmp
and
repz
pop
adc
mov
or
jbe
push
xlat
sbb
movsb
stos
lods
sub
sub
mov
into
dec
aas
xchg
xor
push
xor
pop
push
dec
inc
add
push
out
fdivl
mov
stos
aad
add
pop
arpl
clc
sbb
bound
mov
loope
outsl
int3
mov
mov
mov
into
push
jg
xor
push
mov
test
pop
fsubl
mov
scas
nop
dec
jle
ja
aad
mov
in
sbb
in
rcll
bound
mov
pusha
sub
or
xor
leave
push
cli
fwait
mov
push
je
fistpll
mov
push
sbb
cmpl
add
jp
jge
imul
insb
dec
movsb
std
sbb
out
in
bound
push
jbe
subl
inc
push
xchg
lret
push
dec
sub
dec
and
imul
push
jg
mul
insb
jecxz
mov
dec
out
ror
adcb
popfw
ljmp
and
loop
inc
sub
pop
rcrl
lahf
fsts
jno
push
mov
cmp
sti
xchg
or
jbe
int3
aas
push
dec
fdivr
xor
jl
das
enter
add
sub
lret
xchg
iret
movsl
push
dec
mov
add
xchg
test
stos
addb
add
and
insl
rorl
or
sub
int3
xchg
test
cmpsb
jl
lds
sub
enter
je
out
int
in
add
sbb
adc
ss
aad
add
loop
sub
add
pop
ret
dec
ficompl
cmp
ficoms
test
in
mov
aad
push
xchg
jmp
pop
mov
sub
push
mov
or
mov
add
fstpt
inc
or
pusha
outsb
sti
jp
out
adc
shlb
sarb
sub
inc
gs
test
fisubl
je
and
xchg
cmp
ljmp
mov
push
sub
jp
sbb
sahf
xor
xchg
stc
dec
icebp
adc
jnp
es
fdiv
xor
push
mov
mov
shlb
addb
js
mov
movsl
adc
lock
aaa
test
mov
cmp
push
sub
addl
pushf
push
loop
shll
imul
sahf
sbb
mov
jne
xor
mov
rclb
push
push
xchg
stc
mov
push
sub
xchg
bound
pop
sbb
addr16
imul
nop
iret
and
push
pop
sub
xchg
mov
mov
adc
lds
jl
mov
repz
jae
stos
test
adc
cli
push
pop
adc
ds
add
push
mov
test
push
jb
sub
cwtl
xor
xchg
mov
stc
popa
jmp
mov
clc
out
sbb
loopne
repnz
mov
inc
push
mov
add
loope
fstp
iret
insl
aaa
and
adc
cmc
mov
iret
lock
cld
adc
sub
xchg
jmp
pusha
ds
pop
movsb
arpl
lcall
sbb
dec
pusha
or
in
xchg
cmp
cwtl
cli
mov
and
sti
outsl
lret
aas
aas
fisubrl
ljmp
adcl
sbb
fwait
ja
ds
mov
dec
mov
mov
rorb
or
inc
inc
rcrl
insb
sbb
jmp
ja
pop
push
lahf
scas
add
or
jns
inc
fmull
mov
dec
mov
mov
push
cmp
adc
mov
xchg
test
push
and
mov
loop
fwait
push
cmp
inc
loopne
mov
lds
imul
xor
inc
adc
scas
popf
mov
es
cmpsb
jg
dec
sbb
sbb
push
imul
lcall
add
sub
adc
cs
mov
lret
and
or
inc
sub
push
loopne
push
into
pop
mov
fidivrs
in
andl
adc
loope
loopne
jne
loope
fcompl
pusha
xor
adc
xchg
loop
dec
xlat
lods
xor
sub
jnp
push
cmc
jns
jmp
mov
popf
ds
cmpsl
test
fistpll
xchg
call
cld
xor
and
sub
rorb
cmc
adc
xchg
sti
push
andl
and
mov
pop
inc
push
rcl
inc
cmp
das
inc
jnp
mov
cmp
ret
and
enter
sub
bound
add
jmp
test
cmpsb
ljmp
je
sub
iret
xchg
iret
aam
ja
jmp
rcl
and
mov
or
xchg
je
js
mov
sub
stos
or
mov
or
mov
imul
inc
popa
push
rcrl
and
sbb
pop
fxch
leave
gs
add
jle
add
popf
lods
jmp
mov
cmp
mov
call
add
or
jmp
pushf
mov
sahf
es
adc
sti
sbb
mov
jns
rol
movsb
mov
repz
lds
icebp
and
xchg
lock
pop
repnz
cltd
pushf
adc
fs
fstpl
push
pop
out
mov
in
cmp
in
push
push
mov
enter
jmp
outsl
aad
mov
movsl
jecxz
movsb
jle
arpl
out
push
lahf
movsl
cmp
and
inc
ret
adc
push
movsb
das
out
fwait
adc
stc
insl
mov
mov
into
adc
addr16
push
hlt
mov
in
fists
cmp
inc
pop
paddd
in
addr16
adc
jmp
inc
jp
ljmp
shll
mov
sub
push
iret
jns
cmpsb
mov
jb
cmpsb
cmp
mov
and
lods
mov
xchg
mov
test
xor
jp
mov
cmp
adc
pop
mov
fidivl
imul
cmp
iret
in
outsb
mov
into
add
mov
out
test
fs
dec
xchg
jbe
test
ja
shlb
shrb
stos
cs
idiv
add
xor
mov
jb
cwtl
arpl
mov
test
shrb
push
push
xor
loope
xor
mov
rcll
cmpb
cwtl
cli
cwtl
lods
add
scas
test
into
or
and
pop
aad
xchg
into
test
aam
push
jg
inc
in
cmpl
mov
push
pop
push
pop
mov
xor
mov
imulb
add
mov
divl
add
aaa
push
outsb
xchg
popa
ds
in
cwtl
or
lods
popa
adc
adc
fildl
scas
cmp
adc
mov
js
cli
pop
inc
mov
fstl
cli
call
xor
cmp
hlt
push
lea
insl
inc
testb
pusha
lods
ds
push
lods
ds
cmpsl
mov
mov
xor
push
adc
cli
das
add
andb
stc
dec
iret
adc
pop
hlt
fwait
cmp
adc
cmpsb
cwtl
movsl
jge
push
xchg
bound
jbe
cwtl
mov
divb
test
loop
adc
mov
mov
push
sub
ljmp
xchg
lcall
sbb
sbb
fnsave
outsl
push
jge
jmp
idivl
xor
pusha
dec
aam
fimuls
or
bound
test
push
aam
into
inc
scas
jo
or
rcrl
push
inc
and
xchg
adc
fwait
mov
inc
or
lock
pop
mov
pusha
cmp
mov
out
in
fnsave
lret
movzwl
mov
mov
xchg
mov
mov
cs
or
lea
or
popa
shll
or
mov
xchg
push
pop
and
mov
adc
mov
outsb
mov
leave
repz
cmp
pop
aad
push
mov
out
test
push
xchg
lods
lods
sahf
jmp
rol
jbe
dec
push
hlt
and
cmp
adcb
jno
cmc
jp
out
adc
mov
dec
dec
adc
lahf
cmpsl
sbb
insl
cmp
iret
xor
shlb
movq
addr16
xor
inc
and
imul
cwtl
push
mov
lea
mov
push
int
sbb
loope
ret
and
das
fldcw
pop
aas
and
test
mov
xor
xchg
lcall
sti
dec
enter
fwait
je
into
xchg
shr
repnz
in
ret
and
imul
or
cwtl
mov
repz
fnstcw
inc
adc
mull
std
cmp
mov
icebp
std
lds
pop
bound
lahf
sbb
pop
dec
pop
dec
mov
push
not
adc
or
mov
push
out
pusha
imul
in
test
mov
mov
ret
jl
ror
mov
mov
divl
pop
cli
cmp
and
jns
mov
inc
xor
test
cmc
push
inc
ja
subl
mov
mov
lcall
aaa
inc
add
jp
insl
loope
rorb
mov
daa
and
adc
clc
sbb
aas
add
cmp
or
mov
pop
aaa
aaa
and
cld
ds
int3
mov
fdivl
sub
in
sub
inc
sbb
shll
imul
sub
leave
adc
inc
mov
jp
dec
es
sbb
bound
cmpsl
stc
test
add
pop
mov
std
fwait
icebp
std
sub
loope
call
sbb
movsl
and
mov
pop
inc
or
cmp
test
add
jnp
ss
jne
in
adc
out
hlt
xchg
inc
test
negb
subl
sahf
adc
jb
xchg
or
dec
out
cmp
mov
aam
pop
dec
cwtl
cmp
enter
xchg
aad
push
push
pop
add
cmpsl
sbb
jno
ss
clc
ja
cmp
push
jae
shl
mov
aad
hlt
adc
xchg
xchg
pop
sub
mov
jne
mov
push
mov
dec
pushf
adc
stos
add
std
movb
jl
cs
sub
je
sar
inc
ret
xchg
pop
push
push
addb
ret
loop
push
adc
stos
stos
rol
aad
outsb
inc
pop
push
cmp
pop
xchg
jg
or
push
xchg
sub
loopne
mov
je
stc
cmp
cmpsb
jno
leave
and
xorl
aad
push
lock
mov
inc
xchg
out
xchg
or
lock
adc
les
sbb
jbe
call
cmp
test
jb
dec
shlb
push
mov
scas
push
inc
add
test
call
mov
testl
xlat
shrl
sbb
xor
dec
and
push
inc
insb
xchg
lahf
bound
sbb
cwtl
push
out
in
jl
mov
xor
add
pop
mov
inc
cmpsl
sarb
xchg
int
add
aas
cs
les
xor
in
xor
dec
out
cmc
inc
and
nop
jo
loopne
std
push
in
bound
jno
popf
sbb
lock
push
jecxz
xchg
xchg
stos
test
mov
cwtl
int3
movsb
loopne
cmp
test
shlb
mov
leave
mov
insb
fwait
xlat
in
lods
jmp
test
outsl
gs
stc
dec
addr16
mov
neg
and
jnp
int
jle
call
or
mov
push
xchg
pusha
lret
add
repnz
dec
pop
imul
sbb
int
fcoms
arpl
jmp
call
mov
cmp
insl
pusha
std
mov
dec
lret
int
pop
cmpsb
jnp
clc
and
call
cmc
jp
mov
push
sub
ja
adc
jl
xlat
jb
clc
fs
fcmovu
scas
bound
loopne
adc
inc
and
lret
mov
pushf
push
mov
xchg
into
jl
int
xor
inc
pop
jae
sub
movsl
adcl
lcall
mov
int
sbb
push
lock
test
das
pop
test
xchg
mov
jnp
adc
data16
nop
inc
fdivrl
mov
mov
adc
ljmp
flds
xchg
pop
imul
mov
push
add
ret
sub
cs
imul
int
and
mov
jecxz
int
dec
fstpt
shrb
icebp
rorl
jns
mov
std
push
sub
in
xchg
dec
popf
xchg
lods
enterw
leave
iret
sbb
lods
repnz
cs
mov
push
into
in
je
dec
aas
xor
mov
and
stc
xchg
jns
push
jo
sbb
cmpb
adc
rorl
gs
mov
push
mov
jmp
sub
xor
pop
mov
adc
sbb
sbb
adc
dec
pop
es
or
and
enter
fcoms
push
call
mov
jnp
add
push
daa
idivl
test
dec
clc
mov
xlat
loopne
dec
sbb
fisttpl
repnz
fistps
fwait
inc
cld
jo
std
test
mov
mov
sub
jo
inc
popf
pop
lcall
in
cmpsb
fwait
in
out
cltd
pop
and
shll
ds
inc
xchg
movsb
jne
jg
push
pop
adcl
or
test
imul
and
xor
incl
cmp
int3
std
adc
dec
arpl
dec
add
or
addr16
or
add
xor
jno
jbe
jmp
pusha
inc
lods
mov
aaa
mov
mov
call
add
testl
aas
mov
lret
cmpsb
call
jmp
sahf
cs
inc
loopne
mov
xor
in
fiaddl
jg
ljmp
cmp
loope
jecxz
jge
adcb
fcomip
pop
stc
add
mov
dec
add
into
scas
sbb
push
inc
inc
pop
mov
outsb
sahf
pop
rolb
cs
outsl
adc
lret
les
test
aas
stos
js
mov
stc
pop
xchg
cmp
ljmp
push
mov
mov
xor
lds
xchg
ret
je
pop
test
int3
cmp
mov
cmp
sti
stc
les
mov
xchg
add
rorl
mov
mov
or
xchg
dec
jbe
subb
jl
arpl
jmp
xchg
mov
aam
lret
ret
notl
jmp
push
fisubrs
mov
jge
std
mov
lods
sub
xchg
add
fstpl
xchg
cmp
pop
test
mov
fistpll
roll
das
dec
popf
std
pop
cwtl
outsl
mov
inc
sub
sub
rorl
leave
pop
jmp
dec
jns
xchg
or
ja
stc
jnp
jle
and
add
pop
jmp
cmp
lods
push
aad
lret
test
ja
inc
inc
adc
movb
clc
sahf
mov
mov
xor
stos
hlt
imul
dec
notl
xchg
lods
inc
or
cmc
pop
addr16
lret
adc
ret
out
mov
in
xchg
sub
lock
adc
jns
mov
xor
mov
xchg
and
xchg
adc
xor
mov
push
int3
std
push
jp
jmp
adc
mov
ret
scas
test
sub
mov
jl
inc
mov
mov
out
jmp
cmp
xadd
aad
cmpsl
add
jbe
mov
xchg
mov
sbb
mov
mov
loop
into
mov
sub
xchg
es
loope
test
cld
fs
xchg
dec
cmp
movsb
mov
insl
sbb
pop
mov
mov
popf
leave
les
mov
sub
cld
stos
cmp
loope
test
pop
push
adc
inc
jmp
mov
sbb
cs
out
mov
cs
sti
xor
mov
insl
sub
loope
in
lret
push
icebp
rclb
gs
dec
movsb
mov
adc
cmc
mov
xor
frstor
add
sbb
pop
fs
inc
xlat
inc
bound
sbb
loopne
xor
scas
mov
hlt
mov
sub
jmp
mov
lahf
lahf
inc
cltd
dec
aas
add
sbb
fstpl
jnp
lods
pop
sub
mov
mov
dec
adc
inc
repz
inc
xlat
imul
or
lcall
out
xchg
cmpsb
push
push
outsl
sbb
xchg
sbb
in
push
and
add
mov
mov
xchg
aaa
xchg
mov
push
push
cmp
cmpsb
sub
fimuls
pop
mov
push
push
icebp
jmp
xlat
aad
out
les
ja
movsb
add
push
lcall
out
dec
test
fincstp
or
std
iret
pop
push
and
mov
test
nop
ja
scas
push
push
mov
add
inc
fxch
push
pop
setae
in
push
push
fisttps
jl
cmp
sti
lods
xor
icebp
lahf
pop
andl
movntps
in
lret
ret
cs
lret
jmp
insl
jecxz
inc
lods
push
add
mov
mov
hlt
push
js
dec
out
in
mov
icebp
inc
sbb
mov
mov
call
int3
lock
pop
fdivs
adc
ret
cmp
sub
stos
aas
repz
movsl
push
or
cmp
shrb
cmp
movsl
shll
cmpsl
das
pop
push
inc
pop
fistps
mov
add
jae
loopne
sub
cli
outsl
xor
sarb
xor
push
inc
sub
out
inc
pop
in
xor
jo
pop
js
fwait
push
test
adc
cli
pop
sbb
sub
loopne
cmpsb
adc
les
mov
scas
repz
fwait
movsl
and
or
int
scas
dec
loop
aaa
jo
lods
push
rorl
rcrb
sub
mov
and
popa
push
ja
icebp
scas
outsb
ret
stc
fdiv
int3
xchg
jmp
pop
jmp
sbb
popf
cld
in
pop
lods
arpl
lahf
out
stos
fildll
loope
out
jecxz
js
jle
dec
mov
cmp
cmpl
mov
xchg
out
pop
aad
cmp
scas
inc
fcos
inc
aam
mov
in
lods
fs
ljmp
xchg
xchg
std
jecxz
jg
fs
movsl
mov
cmp
jns
ret
xor
jle
mov
mov
stos
dec
test
push
mov
sub
cmpsl
mov
mov
add
int
xor
cli
jns
push
sub
cli
imul
cmp
aas
cli
jecxz
mov
adc
pusha
ret
add
push
or
out
movsl
xchg
pop
and
lods
sbb
in
in
jmp
ja
movsb
dec
mov
sbb
dec
hlt
push
lcall
fxch
fsubrl
aam
jns
ljmp
cmpsb
adc
lods
adc
js
test
xor
sbb
arpl
in
gs
xchg
mov
scas
fildll
lea
gs
adc
sub
mov
ficomps
add
scas
fldcw
stos
shrl
out
fs
xchg
test
mov
scas
pop
pop
cwtl
add
sbb
in
jp
and
pop
sub
mov
js
lret
mov
shll
fcomps
mov
fistps
in
mov
lcall
mov
lret
pop
int
cmc
aam
or
jmp
mov
scas
mov
mov
imul
jnp
jl
mov
add
mov
cmpsl
fwait
sbb
jne
or
pop
add
push
hlt
lds
adcb
imul
cmp
das
push
xorl
lea
shll
push
mov
je
pushf
sbb
and
roll
lcall
mov
pop
cmp
data16
test
pushf
add
or
rcrb
sub
xchg
in
xorl
mov
add
mov
cmp
push
push
pop
sub
push
jnp
mov
daa
data16
lcall
stos
fistpll
fidivrs
stos
add
jae
jae
jne
adc
mov
sub
in
adc
add
or
sbb
jl
add
mov
ret
icebp
jmp
adc
mov
sbb
push
das
push
test
mov
in
ss
add
xor
shlb
xchg
sbbb
testl
ret
lahf
adc
jge
pop
adc
cmp
cmp
xor
cmpsb
jno
or
mov
notl
stos
xchg
fdivrl
inc
and
adc
inc
lock
ljmp
pop
sbb
pop
scas
ds
sahf
insb
or
push
pop
fsts
test
rorl
fcomps
xor
fldcw
xchg
out
and
mov
stos
mov
das
test
lret
icebp
and
push
inc
add
sub
inc
daa
sbb
subl
repz
leave
fucomi
mov
mov
lret
jp
add
int3
stos
mov
push
fmuls
xor
aad
mov
gs
sub
aas
aam
cmp
sbb
mov
popa
test
shl
inc
inc
sti
jp
ss
stos
push
mov
push
insb
adc
aam
and
bound
into
es
out
cmc
in
inc
test
xchg
aaa
rolb
or
dec
cmpsb
ds
add
mov
or
pushf
and
scas
pcmpeqw
les
int3
rol
in
xlat
pop
shrl
add
cltd
loop
fmul
inc
adc
fwait
int
and
add
aad
fstpt
arpl
xorb
cmp
jae
call
lods
cld
je
lcall
push
faddl
sbb
insl
aad
mov
xor
fstpl
nop
imul
jne
cs
daa
sti
xchg
lret
jl
or
fwait
test
push
pop
cli
push
repnz
outsb
adc
cli
mov
jecxz
push
out
lahf
cmp
push
cmp
loope
pushf
mov
fcompl
dec
dec
enter
int3
pop
insl
add
das
cld
cmpsl
adc
mov
subl
pop
in
and
add
imul
mov
in
push
sub
inc
nop
push
mov
mov
gs
cmp
pop
mov
jne
gs
push
pop
popa
xchg
mov
jnp
jo
daa
pop
stos
test
decl
mov
arpl
dec
ret
into
adc
mov
call
mov
js
std
and
arpl
aad
sbb
sub
mov
outsb
cwtl
test
xor
out
and
inc
adc
iret
int3
xchg
movsb
mov
repz
mov
pushf
ret
sub
mov
idivl
pop
mov
std
mov
cmpsl
and
std
mov
stc
popf
or
cmovle
push
test
or
push
int
mov
and
rol
jnp
imul
testl
mov
push
mov
outsl
mov
sbb
icebp
sbb
fnstenv
add
dec
test
xor
cmp
orb
cmc
cmp
or
push
ljmp
outsb
and
stos
mul
dec
xlat
dec
and
jg,pt
add
dec
fistps
adc
lret
cmp
mov
pop
hlt
sti
push
loop
icebp
and
mov
mov
push
add
pop
jbe,pt
fnstcw
dec
add
fimull
sub
roll
or
or
pop
scas
insb
scas
jge
icebp
jmp
or
inc
sti
lahf
mov
mov
lret
out
call
xchg
inc
aaa
fdivp
cmp
jo
jmp
clc
repnz
jg
scas
pop
in
jo
cmpl
movl
loop
mov
adc
pop
or
inc
fistl
or
hlt
xor
cmpps
mov
xchg
mov
fnstcw
adc
ds
out
iret
pop
icebp
testb
mov
mov
lret
xchg
pop
ds
pop
dec
test
add
xchg
sbb
cli
cmp
test
jae
or
push
add
scas
add
ds
jne
jg
test
cmp
lcall
pop
test
pop
shlb
lds
mov
mov
clc
xchg
call
dec
fnsave
inc
pop
cld
jae
pop
mov
popf
mov
cmp
jp
inc
loopne
out
call
stos
xchg
mov
rorb
fwait
add
aam
into
push
dec
lret
dec
scas
xchg
mov
inc
mov
insb
jge
andb
shr
sbb
add
xchg
jb
inc
les
test
testb
or
mov
xor
ja
clc
sbb
rcrb
cmp
and
es
stc
sbb
lret
stc
ffreep
es
enter
lcall
popf
inc
std
mov
or
imul
xchg
and
xchg
popa
mov
rclb
mov
pusha
pop
ficoml
sbb
cmp
in
mov
hlt
mulb
jmp
scas
fildl
push
outsb
jbe
in
lea
mov
push
aaa
aas
sbb
and
mov
rcl
push
mov
cwtl
sbb
sbb
dec
loop
pop
mov
rcll
lret
outsb
jp
sahf
ret
and
mov
pop
pop
repz
pop
cmp
arpl
or
mov
das
and
sbb
jae
pop
sarb
pushf
push
or
hlt
das
jmp
outsl
cli
cmp
gs
jno
in
mov
das
sarb
andb
push
mov
inc
xlat
popf
adc
or
fldenv
ret
out
or
adcl
push
mov
mov
fcmovnu
sub
sub
mov
mov
adc
loop
xchg
mov
push
clc
cmc
rcrb
cmc
push
test
scas
push
lds
into
movsl
pop
adc
jmp
sbb
scas
ret
jo
inc
mov
jg
pop
int3
cmpsb
or
mov
or
mov
mov
jo
repz
mov
movsb
pop
add
mov
ss
mull
test
fmull
jecxz
mov
sbb
ja
xor
pop
mov
or
std
dec
xorb
gs
scas
negb
add
jae
add
stos
sub
push
loopne
mov
mov
dec
pop
std
mov
mov
adc
imul
sub
push
pop
mov
mov
int
shl
sbb
cmp
push
scas
inc
dec
stos
xchg
or
adc
daa
adc
decl
icebp
adc
in
stos
dec
jo
push
and
mov
jmp
addr16
push
pop
in
add
mov
inc
adc
filds
aas
inc
outsl
lods
mov
loopne
fsubrs
jmp
inc
stos
rolb
or
xor
daa
aam
mov
mov
notl
sbb
outsb
in
mov
sbb
dec
icebp
cmp
stos
mov
dec
jle
cmp
jns
adc
rcll
fstpl
jle
inc
std
xor
cmp
sub
inc
js
imul
cwtl
adc
xchg
lahf
mov
popf
ja
shlb
sub
cli
push
push
lahf
ljmp
pop
inc
repz
fldcw
sbb
pop
mov
sub
pop
outsb
aas
adc
jp
frstor
dec
insl
mov
movsb
xchg
out
add
and
shrl
sbb
out
dec
xchg
es
xor
cmpsb
jne
or
xorl
imul
push
push
dec
add
or
out
mov
or
outsb
pop
or
add
adc
xlat
inc
mov
jno
mov
test
mov
and
pop
cld
sub
outsl
es
js
in
pop
sbb
pushf
push
dec
cld
lret
mov
xchg
xchg
xor
clc
add
add
dec
jmp
daa
push
add
mov
and
sbb
lods
idivl
ror
call
xchg
arpl
mov
sub
jne
in
out
in
iret
cmp
adc
fmul
les
add
or
popa
xor
mov
dec
jge
out
lahf
pop
and
in
test
jnp
in
cmpsl
loopne
int3
rorl
mov
lods
aaa
pop
seto
ret
jmp
mov
mov
jecxz
inc
mov
push
test
data16
out
sbb
mov
xchg
and
std
xlat
loope
insl
sub
aaa
ret
dec
inc
inc
or
mov
xchg
in
xchg
xor
inc
pop
xchg
jbe
je
pop
iret
stos
sub
cld
shll
push
mov
insl
std
loop
mov
loope
hlt
shrl
in
lods
cmp
dec
stc
pop
popa
mov
and
dec
cmpsb
int
or
push
or
adc
jmp
add
or
sub
and
gs
les
inc
sub
aad
mov
rcll
pusha
xor
ret
mov
leave
mov
xor
jno
pop
xlat
jmp
adc
out
and
cltd
les
bound
and
dec
or
imul
out
cmp
ds
popf
xlat
or
push
ret
xor
inc
push
sbb
mov
cmp
je
ss
mov
sbb
test
inc
ds
jb
test
bound
out
and
mov
idivb
outsb
imul
pop
sbb
pop
xchg
es
roll
jo
jge
ja
stc
fcmovb
inc
adc
push
icebp
dec
in
cmpsl
loope
out
mov
adc
cmpsl
push
adc
or
imul
mov
dec
data16
add
dec
sahf
insl
xchg
xor
into
push
adc
xchg
into
mov
out
cmp
lahf
imul
repz
xchg
movsl
add
movsl
jmp
lret
test
cs
xor
cmp
ljmp
insl
sbb
and
sub
pop
xor
xchg
jae
pop
mov
xor
and
sub
and
sbb
mov
jl,pn
dec
jne
jle
mov
in
call
or
xchg
in
mov
sub
add
pop
push
dec
bound
rolb
sti
cmpsb
movsb
fbld
leave
shrb
push
mov
sti
add
cld
imul
cmp
enter
gs
jns
jge
xchg
and
test
xchg
push
clc
push
popf
xchg
push
int
push
pushf
out
mov
sub
int3
stos
mov
fcomp
fstps
cmpsl
xchg
fidivrs
cmp
adc
and
jmp
int3
dec
sub
dec
mov
pop
decb
jge
adc
jne
ss
cltd
lds
adc
repnz
lods
lret
sub
shrb
fld
inc
jae
int
sbb
arpl
repnz
lret
fcmove
dec
fsubrl
mov
cli
repz
mov
popa
jnp
ret
fldcw
and
add
push
out
hlt
push
cmp
fimuls
dec
mov
ret
xchg
sub
inc
add
jge
mov
insl
lcall
push
mov
push
pop
sbb
lods
int3
xor
mov
mov
or
pop
aas
outsb
or
dec
fucomp
ljmp
cmp
test
mov
push
dec
dec
sbb
mov
out
lods
inc
clc
sbb
mov
add
mov
divb
adc
ror
stos
jae
je
cmp
push
dec
cwtl
sbb
xor
jp
or
sub
mov
pop
cwtl
dec
insb
cmp
cmc
shrb
fidivs
data16
lahf
or
ret
data16
ret
insb
mov
xchg
sub
and
mov
clc
adc
test
xlat
xor
mov
add
pop
aas
fbld
add
push
sub
aaa
pop
out
imul
hlt
inc
rorl
jns
pop
cli
xlat
jae
adc
loopne
inc
decb
lret
jno
out
adc
shl
mov
mov
push
shll
sbb
mov
mov
es
lock
lahf
fwait
dec
int
ret
mov
lahf
mov
mov
out
into
mov
out
out
mov
adc
mov
sidtl
outsl
dec
hlt
lods
enter
clc
jmp
adc
rcrl
sub
pusha
pop
inc
xchg
out
jle
xlat
stos
sbb
loope
enter
jns
inc
mov
xlat
lds
xchg
xchg
fwait
fs
insl
xchg
inc
hlt
sbb
nop
aam
aam
xchg
sbb
xchg
data16
or
loopne
lea
pop
mov
ret
sub
cmp
xchg
mov
pushf
daa
test
lret
xchg
fucomp
mov
sbb
inc
xor
pop
fdivrp
lods
sarl
xor
xchg
or
xchg
jns
jo
mov
movsl
mov
aad
iret
jp
in
mov
or
xchg
cmp
fwait
cli
xchg
mov
cli
into
pop
ret
push
fldl
imul
arpl
mov
sub
clc
jecxz
enter
mov
jmp
push
or
stos
insl
sbb
in
aam
scas
dec
sbb
inc
jecxz
mov
and
aaa
jmp
mov
pop
scas
call
mov
jae
xor
incb
mov
xchg
outsb
push
dec
mov
nop
jge
jo
fisttps
aas
mov
mov
adc
xchg
rclb
sbb
int3
orb
test
stos
or
inc
loopne
cmpsl
xor
inc
and
jne
xchg
jb
adc
ret
rcrl
stos
inc
jnp
testb
xor
mov
mov
in
popf
push
or
push
mov
icebp
arpl
dec
inc
sub
dec
jg
add
push
mov
mov
popf
mov
xor
js
xor
bound
sbb
sub
jae
into
test
push
fists
popf
outsb
mov
shrl
mov
mov
js
sub
fsubrs
test
add
push
popf
lods
lock
mov
xor
sbb
cmpsl
mov
test
out
inc
xchg
push
jno
mov
sar
pop
js
mov
mov
dec
rorb
sti
movsl
inc
das
add
outsb
xchg
in
xchg
outsb
sbb
mov
push
arpl
inc
add
adcl
lcall
push
mov
jbe
dec
cli
test
dec
or
popa
mov
nop
mov
sub
ljmp
cs
js
aam
jle
inc
xor
push
push
hlt
jecxz
stos
cs
fnsave
push
xor
push
jle
daa
push
xchg
sarl
int3
aad
jb
jecxz
mov
dec
xor
jbe
test
loope
arpl
out
repnz
out
iret
mov
ljmp
es
andb
bound
xchg
data16
stc
mov
rcrl
aad
cmpsl
rcll
jae
jae
jp
pop
dec
push
scas
xor
hlt
xchg
lahf
not
jns
mov
cmpsb
fists
sbbb
sub
and
sub
adc
xor
mov
inc
loope
mov
xchg
mov
sbb
mov
not
sub
hlt
xchg
mov
cmp
pop
scas
faddl
stos
int
lret
lds
mov
sti
movsl
test
out
add
sbb
jg
in
xchg
xchg
mov
jae
stos
rol
pop
adc
aaa
scas
int
fwait
pop
pop
div
xor
iret
push
dec
sbb
test
call
fbstp
addr16
popa
loop
sbb
cmp
ret
push
decb
into
adc
cld
rcr
push
mov
into
cmpl
bound
mov
sub
mov
lahf
mul
in
push
shl
mov
mov
lods
movd
mov
outsb
daa
mulb
popa
stos
ss
imul
mov
loop
clc
outsl
ja
cmpsl
xor
mov
insb
pop
addr16
lock
mov
jecxz
imul
dec
movl
repz
shlb
test
adc
adc
push
hlt
adc
sub
bound
mov
in
jns
add
add
dec
add
mov
add
arpl
aam
push
mov
les
int3
out
das
adc
arpl
test
insb
mov
mov
loop
xor
movl
mov
ret
lea
fsub
sarb
mov
xor
lea
rcrb
pop
push
push
mov
test
inc
cmp
sarb
cld
xchg
out
inc
and
and
out
subps
sub
mov
dec
sbb
jbe
inc
pop
add
test
cld
jo
hlt
std
out
xor
sbb
xchg
xor
mov
xorb
dec
xor
pop
or
mov
inc
xchg
scas
cld
out
adc
jmp
push
mov
je
pushf
call
push
and
and
cmp
into
daa
dec
lods
mov
cmpl
pop
add
jae
ds
jo
pop
xor
fsubrp
lods
loop
pusha
xor
gs
dec
loopne
mov
jbe
aad
fwait
sar
and
add
adc
dec
add
push
icebp
inc
sbb
pop
outsb
sbb
mov
inc
pop
int
repz
shl
mov
leave
stos
jno
int
sub
ret
aad
in
ljmp
fdivrl
fadds
xor
cmc
pop
iret
insl
fs
inc
in
shlb
mov
jbe
push
xchg
adc
and
in
ds
dec
imul
mov
loop
xchg
xlat
dec
mov
jo
fdivrs
adc
lea
lods
mov
or
dec
daa
repnz
push
sbb
addb
cli
sti
test
push
fstl
dec
das
sub
fmul
dec
out
xor
pop
enter
lcall
les
outsl
push
or
mull
arpl
pop
sub
and
dec
lahf
mul
lret
aaa
stos
xchg
mov
and
rcll
inc
pop
cmp
jmp
cld
sub
movsl
fdivrl
and
lock
in
inc
clc
xor
flds
dec
sar
jg
arpl
jecxz
adc
aad
xchg
enter
jl
loope
pop
mov
vunpcklps
repz
mov
sub
movsl
lods
cmc
pop
cli
dec
mov
outsb
mov
cmc
adc
jmp
lds
daa
popf
int3
outsb
cld
mov
and
mov
enter
jnp
inc
repz
jmp
shll
mov
jp
sbb
and
insl
dec
cmp
ret
pop
jg
mov
test
shll
int3
fcmovb
jo
push
or
push
call
mov
push
or
mov
movsl
int
cmp
add
out
jns
dec
dec
add
shrl
pop
loopne
and
aad
xchg
adc
adc
hlt
xchg
jp
or
cld
xor
icebp
loopne
or
out
cmp
mov
cwtl
data16
xchg
pop
or
mov
inc
popf
fdivs
sbb
movsl
sub
mov
jge
xor
scas
js
lcall
test
int
cmp
pop
jecxz
and
sbb
rol
or
out
dec
xchg
rcll
jle
push
fs
jb
xchg
xchg
mov
fldcw
imul
xorl
xor
cmp
xchg
pop
or
scas
cmp
push
aaa
bound
cmp
xor
jp
out
mov
aaa
jno
jp
dec
sub
fucomp
lea
popf
daa
fadd
lods
sbb
push
mov
sub
jnp
jmp
pop
dec
inc
pop
sti
pop
mov
and
shrl
repnz
mov
ficomps
out
dec
push
cmp
loop
and
mov
jmp
adc
fcoml
std
fucom
in
stc
pop
test
test
sti
or
xchg
roll
mov
pop
aas
out
fnstcw
movl
cmpb
inc
sbb
lahf
mov
loopne
inc
fisubrs
inc
sub
mov
cld
lods
sarl
es
lods
fdivrs
xchg
and
or
dec
cmp
sub
call
sub
stos
test
in
lods
jno
das
cltd
mov
dec
mov
lret
arpl
push
mov
insb
xor
sbb
dec
or
and
push
insl
xchg
rcll
loop
repz
ret
or
movsl
pop
mov
out
jae
cltd
daa
and
push
pop
jo
ja
push
jb
fxch
or
dec
and
mov
scas
add
rcll
mov
out
sbb
or
xchg
movsb
push
stc
sbb
mov
inc
dec
in
bnd
cli
inc
adc
xchg
push
pop
mov
push
dec
mov
push
inc
push
lds
mov
loop
orb
dec
cmp
xorb
adc
dec
incl
mov
arpl
mov
ds
sub
xchg
shrl
inc
xchg
push
adc
insb
cs
lods
jne
ds
rcll
sub
jae
out
mov
ds
jge
scas
add
movsl
lcall
subb
daa
and
push
test
out
jbe
xorl
cmpsb
push
arpl
mov
pop
push
and
ljmp
incb
mov
repz
cld
in
mov
shl
call
mov
ss
int3
loop
cs
call
roll
dec
icebp
xchg
jno
push
pop
xor
nop
cmpsl
gs
sub
and
push
dec
fisubs
mov
dec
test
fimuls
adc
push
push
sub
repz
in
shll
leave
push
fwait
mov
shlb
mov
lret
mov
ret
ja
loop
mov
push
pop
daa
xchg
call
pop
dec
subb
jl
ljmp
mov
inc
out
cmp
sub
mov
adc
mov
mov
lds
call
mov
dec
subb
jge
jnp
lock
and
fldenv
scas
loop
je
cmp
add
into
lcall
cltd
mov
sub
outsb
push
jecxz
push
into
addr16
sbb
test
cs
xchg
adc
push
stos
and
xor
scas
sub
and
lret
addr16
xor
cmp
idiv
fcmovb
sti
movsl
in
push
shlb
das
xor
outsb
insb
or
sahf
xchg
fldenv
repz
and
dec
xor
in
sbb
xor
mov
push
add
fbld
jb
push
add
and
cmpsl
add
pop
icebp
insl
pop
fisubl
or
call
mov
pop
sysexit
icebp
dec
lret
cmp
and
inc
stc
jmp
lret
stc
emms
cmpl
outsb
jb
mov
jne
int
cmc
jl
mov
xchg
ud1
xchg
xor
cmpsb
or
mov
pushf
subb
test
jbe
repz
mov
mov
inc
sub
out
cli
cmp
icebp
and
fsubr
ds
mov
daa
push
cmp
notb
and
pop
stc
test
dec
sub
sbb
ds
dec
arpl
cltd
icebp
fwait
pop
sbb
bt
inc
jg
ljmp
or
push
xchg
jmp
add
sbb
push
push
jae
jae
out
je
mov
sbb
xor
jmp
ljmp
and
out
jmp
fs
sub
fcompl
adc
push
mov
shrb
or
shlb
jo
sbb
dec
xchg
inc
mov
lds
shll
shl
cs
jo
add
test
insl
call
pop
cmp
sbbb
mov
rol
mov
shl
icebp
xor
jns
sahf
xchg
ret
roll
xchg
mov
insl
outsl
pusha
fnstenv
push
add
cmp
pusha
rcrl
adc
jp
andb
subl
in
lret
pop
in
lods
les
push
xchg
cmp
adc
jmp
mov
dec
dec
ljmp
push
push
std
sbb
lcall
xchg
pop
fsubl
call
aaa
xor
fildll
mov
popf
inc
jne
mov
xchg
or
rorb
jne
insb
and
leave
stos
mov
call
cmp
enter
xchg
push
adc
aaa
lock
shrl
xor
xchg
cmp
mov
ljmp
outsb
mov
dec
or
pop
jne
in
stos
les
pop
out
mov
rcll
jae
push
rolb
lahf
inc
adc
jmp
out
mov
mov
int
cli
add
dec
daa
pop
loopne
mov
dec
bound
pop
loope,pt
adc
mov
cmpl
and
lret
adc
add
xchg
sti
push
inc
mov
pop
fmull
stos
mov
lahf
js
sub
out
add
hlt
jb
pop
mov
fldenv
lahf
into
xchg
pop
je
scas
push
std
inc
xor
jne
scas
mov
test
scas
pavgb
imul
pop
test
or
scas
push
xor
enter
or
in
pop
cli
and
add
and
lods
in
xlat
stc
dec
mov
mov
cmp
cmp
xor
mov
xor
lods
xor
jbe
add
xor
xor
stc
popf
mov
test
sbb
repnz
or
pushf
xchg
dec
cmp
enter
shll
push
in
int3
mov
in
mov
arpl
and
mov
sbb
add
cwtl
pop
add
pop
icebp
adc
push
cmpb
les
pop
pushf
gs
fucom
movsl
xor
lret
bound
pop
or
sbb
popf
test
data16
sbb
pop
push
xchg
bound
xor
pop
cmp
pop
sbb
decb
and
jecxz
lea
sti
mov
dec
push
and
pop
pushf
loope
pop
addr16
ljmp
faddl
sub
shr
pop
sub
xchg
sub
clc
jp
mov
iret
adc
subb
mov
push
sub
sti
xor
dec
popa
dec
daa
or
or
sub
add
inc
mov
sub
sbb
dec
and
push
jge
cmpl
and
mov
pop
xchg
pusha
fisubrl
jmp
inc
sbb
mov
add
xor
push
adc
push
pop
mov
movsb
add
mov
shr
push
loop
cmc
or
pop
lods
fwait
pop
inc
adcl
mov
lret
and
cli
call
mov
dec
pop
pop
push
call
push
adc
in
jp
and
push
sti
xor
xchg
mov
repnz
push
pop
fldenv
lds
sbb
and
sub
int3
mov
stc
xchg
nop
lahf
ds
add
or
pop
aam
push
xchg
out
adc
rolb
mov
cmpsl
jmp
ds
and
or
cltd
sub
inc
lret
sbb
add
adc
movsb
and
gs
mov
in
jns
jg
cmp
cmp
jg
cltd
imul
iret
into
into
loop
add
mov
jne
mov
data16
movsl
gs
das
jmp
adc
adc
jmp
in
pop
aam
movsl
clc
je
lahf
roll
inc
mov
jg
sbb
arpl
fimuls
sti
out
jmp
das
or
cld
push
aaa
and
dec
jp
sub
jle
adc
and
or
or
pop
xchg
int
hlt
xor
mov
xor
movsl
ljmp
ja
repnz
test
enter
inc
repnz
pop
rcrl
sarl
ret
cmp
repz
xchg
rolb
push
add
sbb
enter
mov
sub
movsb
in
int3
or
iret
cltd
add
add
jns
insl
nop
andl
leave
scas
scas
pop
inc
aas
or
into
into
mov
scas
addr16
and
js
nop
jl
adc
and
sbb
flds
push
pop
testb
jns
push
loope
xchg
jg
add
push
rsm
pop
and
or
ja
movsb
jg
shll
push
pop
pop
adc
mov
leave
sub
int
or
jno
rclb
sarl
pshufw
add
sbb
jne
adc
shlb
add
jno
pop
sub
jns
jecxz
cmp
push
test
popa
iret
xlat
lds
or
fbstp
data16
ficomps
loopne
aas
in
clc
shl
cltd
sahf
xchg
fsubl
in
sub
sub
xchg
add
pop
dec
jge
add
push
mov
inc
mov
xor
sbb
in
add
mov
shlb
sti
scas
fisubl
xchg
xor
dec
mov
add
jp
sub
test
xchg
js
fisttpll
ja
dec
mov
mov
cld
outsb
mov
add
addl
loope
push
mov
push
push
adcl
aas
sub
sbb
scas
divb
push
sbb
cs
mov
mov
sub
arpl
pusha
lea
jmp
inc
sbbb
xchg
movsl
pop
sub
push
mov
push
jle
scas
jmp
cmp
mov
and
or
xor
movsb
dec
into
mov
aam
add
fwait
sub
ja
sti
cmpsb
mov
cs
cmp
adc
push
ret
adc
cmp
pop
or
sbb
jae
jns
lock
popa
mov
lea
jp
sub
popf
push
insb
int
repz
or
sti
push
xor
xor
js
dec
inc
pop
cmpl
cmp
out
push
and
mov
pop
inc
inc
arpl
out
add
push
ss
jecxz
call
mov
mov
lret
cld
idivl
lea
mov
test
mov
xor
push
mov
in
out
iret
repz
mov
hlt
mov
push
sbb
mov
cmp
and
aad
pop
fsub
mov
add
push
dec
and
gs
adc
es
push
or
xlat
sbb
je
dec
adc
sub
pop
xchg
flds
and
cltd
lcall
pushf
pop
lret
xor
dec
imul
inc
add
jb
and
inc
mov
adc
hlt
xor
push
shll
incl
adc
lcall
mov
mov
inc
mov
jecxz
pop
mov
shrb
jle
fdivr
es
mov
xchg
dec
mov
mov
lock
fs
das
stc
jmp
mov
xchg
fnstsw
fdivrs
and
movsb
push
or
cmp
jne
gs
pop
sbb
xchg
not
fcmove
or
sti
popa
test
cmpsb
pop
bound
leave
dec
scas
inc
bound
aas
test
repz
adc
loop
and
in
or
xchg
add
push
adc
icebp
inc
test
insl
xor
adc
push
enter
pop
pusha
adc
cmp
fs
push
cltd
andb
mov
mov
mov
data16
cwtl
or
mov
loopne
cwtl
mov
jno
lcall
lods
insl
cmc
jecxz
in
cmpsl
and
mov
arpl
ret
jbe
movsb
mov
cmp
test
xchg
mull
pop
fdivs
icebp
xlat
sbb
xchg
pop
ljmp
mov
jae
dec
sbb
notl
xchg
fisubl
mov
icebp
xor
repnz
rorl
testl
push
lahf
jns
dec
mov
andb
sahf
and
mov
xor
inc
cmp
sub
insb
dec
jbe
mov
cs
add
cmp
mov
mov
push
jb
mov
in
sub
mov
test
popa
jp
hlt
sbb
dec
adc
rcrb
ljmp
sti
adc
jmp
jp
pop
data16
sti
aas
cmpsb
inc
pushf
bound
jns
xchg
inc
jno
ljmp
sub
jno
dec
int3
pop
jecxz
cmp
sub
xchg
fxch
repnz
sub
dec
xchg
cmp
mov
cmpsb
add
je
and
sub
push
inc
and
punpckhbw
int
push
mov
adc
movsl
mov
inc
sti
lcall
jnp
xor
repz
jnp
cs
cmpsl
cmp
mov
inc
shrb
push
xchg
inc
pop
mov
add
shrb
sarl
jp
cmpxchg
xchg
xchg
into
fwait
adc
scas
xchg
es
inc
aaa
mov
sbb
fwait
pop
adcb
out
mov
xchg
jecxz
add
mov
arpl
ljmp
inc
push
dec
jge
lcall
push
add
xor
sbbb
mov
mov
rorl
jecxz
mov
scas
mov
jl
movsl
mov
mov
mov
adc
sub
cltd
in
pop
sbb
dec
sub
popf
lret
int3
add
add
jae
push
dec
pop
cmp
sub
adc
lods
daa
pop
sbb
sub
mov
mov
cli
movsb
jge
push
inc
lods
aaa
testl
incb
into
sbb
pop
std
iret
ret
jbe
pop
or
clc
mov
pushl
sbb
je
sub
add
aas
enter
jno
cwtl
dec
aaa
mov
sahf
test
push
jge
out
pop
repz
lcall
loopne
cld
arpl
insb
fistl
ret
lds
ss
test
inc
fcomps
in
cmp
clc
stos
cmpsb
cmp
das
test
cmp
mov
dec
add
nop
and
es
mov
sbb
xchg
and
push
psubsw
mov
enter
addr16
ror
daa
mov
arpl
pop
repnz
cs
les
sub
adc
ficoms
in
fdivs
jp
mov
ds
fstpt
aas
push
in
inc
push
daa
stc
idivb
adc
mov
add
stos
mov
dec
data16
sbb
cmp
push
fs
sahf
iret
popa
xchg
loop
rolb
push
sbb
repnz
ret
std
jbe
or
sti
pop
jnp
in
call
and
pop
xchg
repnz
dec
ficomps
into
in
xchg
inc
loop
xor
mov
loop
or
inc
mov
sub
xchg
sub
inc
gs
out
pop
jno
push
imul
dec
jp
xchg
lahf
cwtl
dec
mov
adc
loop
inc
and
call
push
daa
in
sbbb
mov
popa
inc
jmp
fimuls
sahf
dec
es
add
int
xor
aas
stos
mov
sbb
xor
push
jp
mov
nop
sbb
push
adc
daa
pop
and
loopne
aas
pop
mov
pop
shrl
jecxz
mov
fldt
add
jmp
scas
sahf
test
mov
out
mov
xchg
stc
js
lods
cmp
mov
int
jno
mov
jle
sub
add
pop
and
mov
scas
daa
std
das
es
inc
fistpll
stos
daa
fsincos
and
shll
cmp
lret
mov
es
gs
rol
sahf
lret
jbe
xchg
mov
or
xchg
lods
ljmp
push
pop
or
jl
aad
iret
xor
call
cwtl
ficoms
pop
push
jl
mov
pusha
popa
adc
xchg
aad
sub
mov
hlt
or
call
adc
and
jbe
cmc
xchg
cmp
inc
and
push
enter
bound
push
mov
mov
pusha
leave
repz
sarb
inc
movsb
push
pop
mov
sahf
insb
in
inc
dec
out
push
cmp
inc
mov
and
add
std
loope
shll
cmc
adc
pop
shl
push
jno
and
dec
sbb
scas
pop
fistpl
pop
mov
lret
sbb
mov
sbb
push
add
or
xchg
adc
or
repz
fidivs
mov
cmp
push
jb
fsubrl
ja
ud1
idivb
xorb
mov
ljmp
pop
add
add
and
test
pop
loope
movsl
ficoml
negl
push
int
test
jns
int3
inc
pop
enter
lahf
mov
lcall
cld
in
mov
push
xchg
std
inc
jmp
mov
xchg
fs
push
pop
iret
pop
xchg
pop
jle
movsl
fildll
lcall
mov
xchg
push
pop
adc
adc
add
nop
dec
fwait
movsl
pop
push
add
inc
and
sti
mov
mov
out
into
push
xor
push
dec
cmp
pop
je
cmp
xchg
cs
fstpt
add
jae
hlt
imul
cmp
cmpb
jecxz
add
cmc
scas
insl
jne
pop
pop
mov
cli
aas
ficomps
and
cmpsb
push
and
mov
hlt
cmp
mov
decl
jl
gs
pop
dec
icebp
fdivrl
dec
xchg
setae
mov
fimuls
xor
mov
push
dec
popa
pop
jno
bnd
or
pop
stc
iret
stos
pop
or
mov
mov
jnp
cmp
and
ret
add
lods
push
inc
jmp
sarl
dec
fnstenv
sub
or
fmuls
sub
sar
jecxz
xchg
xor
movsb
push
pop
movsl
sub
insb
mov
xor
push
mulb
pop
shlb
push
mov
xor
and
ja
push
bound
jae
vmovups
cld
sub
adc
xor
cmp
mov
divl
mov
xchg
bound
xorb
mov
sub
push
mov
lahf
bnd
push
lods
and
jge
cmc
subl
das
mov
xor
movsb
pop
sub
push
dec
imul
test
jbe
mov
imul
movsb
jmp
insl
mov
mov
xor
xchg
sarb
fcomp
scas
shr
jne
pop
cmp
mov
mov
cmp
shrb
cmp
or
pop
stos
cmp
jl
cmpb
xchg
sub
lds
pusha
mov
and
push
adc
mulb
cmp
jmp
gs
or
xchg
aas
scas
imull
aam
sbb
push
mov
lahf
lahf
gs
sbb
subl
fs
inc
mov
pop
xchg
sub
adc
sbb
jl
mov
nop
fsubrl
in
jo
ljmp
fsub
jmp
dec
test
addb
sahf
cmc
and
sub
inc
inc
addr16
incl
jno
push
cmp
pop
dec
rcl
mov
xchg
jl
or
int
mov
es
push
scas
push
ds
sbb
pushf
notb
push
and
mov
hlt
push
into
xchg
hlt
arpl
je
xor
pop
dec
mov
scas
pop
movsb
and
lret
fsubl
mov
sub
test
push
ljmp
inc
push
sbb
fsubs
cmpsl
int3
sti
mov
sbb
pop
push
stc
xchg
xchg
push
xchg
mov
inc
pop
popf
aam
test
and
stc
dec
call
sahf
sbb
roll
aas
and
or
bound
mov
in
out
addr16
fdivs
add
lods
imul
or
mov
enter
mov
movsb
leave
out
insb
inc
ror
xchg
sbb
ret
adcb
fnsave
or
add
sub
jecxz
ret
cmp
fwait
adc
mov
pop
icebp
js
scas
lods
inc
push
lret
xchg
jae
xchg
ret
mov
in
subb
inc
enter
rolb
adc
xchg
mov
inc
fwait
lds
fdivrs
mov
and
pop
divb
fnsave
mov
inc
andl
fs
cld
out
add
in
repnz
aas
push
jnp
sti
repnz
sub
es
sub
mov
cs
subl
xchg
cld
leave
sar
adc
popf
cmp
ret
test
adc
push
jnp
xchg
fwait
shrl
lret
mov
lcall
scas
lds
jbe
test
in
out
stc
xchg
and
xor
addr16
and
cmp
jbe
mov
test
mov
adc
les
call
enter
pop
aaa
cmp
pop
xchg
mov
push
sarl
xchg
xchg
scas
sub
dec
lea
ljmp
sub
popf
mov
imul
movsb
sbb
push
lock
push
test
and
inc
dec
push
scas
add
std
jecxz
add
fiaddl
jns
mov
lds
stos
cmp
into
mov
sub
pop
sbb
mov
decb
mov
or
inc
mov
and
clc
xor
bound
mov
sbb
sbb
dec
push
loopne
xor
add
xchg
std
call
insl
push
loop
scas
cmpsl
jge
sarb
inc
inc
movsl
xchg
or
pusha
paddsw
push
mov
push
inc
xchg
or
fs
out
add
imul
rolb
inc
adc
dec
sarb
pop
and
lock
bnd
and
call
cli
repnz
out
inc
add
out
xchg
sub
into
add
subl
out
int
add
jmp
fnsave
adc
call
jnp
nop
sub
or
or
stos
jecxz
cmp
aad
mov
adc
imul
out
sarb
bound
xor
mov
lock
daa
and
stos
cmp
idiv
add
icebp
sub
ja
in
cmp
mov
mov
cmp
pop
test
das
jo
dec
dec
cmp
adc
and
mov
jmp
jecxz
popf
bound
mov
xor
jl
ret
inc
ret
or
xor
push
jo
xchg
push
xchg
cmp
cmpsb
cs
pop
mov
sahf
fdivrs
and
ror
into
or
dec
mov
ja
vpmaddwd
fwait
arpl
test
imul
xor
push
out
or
cmp
scas
test
xor
xor
push
mov
hlt
call
mov
dec
mov
rolb
jb
cmp
inc
rcrl
ds
dec
testb
xor
xlat
and
int3
inc
push
or
call
add
mov
sub
mov
test
sub
xorl
xchg
lods
clc
icebp
dec
repnz
outsl
or
sub
add
in
imul
loope
mov
inc
xchg
js
adcb
mov
mov
imul
mov
pop
xor
cs
dec
fsubr
jb
jne,pt
cmpsl
aad
add
aam
subb
into
fcoml
xchg
scas
scas
notl
arpl
mov
loop
push
lock
stos
gs
in
rcrl
mov
pop
mov
lods
cmpsb
ret
aad
stc
mov
mov
add
push
jmp
out
stos
add
lds
add
add
mov
into
das
and
addr16
inc
ret
out
push
dec
lret
loope
push
mov
icebp
outsb
ja
sub
mov
push
mov
gs
cmp
scas
ss
es
add
mov
inc
jg
rorl
cmp
pop
insl
fsub
add
cltd
xor
adc
and
lock
ljmp
in
add
xor
xor
and
jp
lea
dec
cs
sbb
mov
icebp
fwait
mov
out
out
sti
sub
xor
pop
fisubrs
test
sbb
lcall
iret
push
les
mov
fldt
mov
rcrl
insl
addr16
cli
pushf
in
add
xor
in
xchg
cmp
nop
push
fnstsw
mov
fnstenv
mov
sbb
pushl
and
pop
fildl
imul
aam
iret
pop
sbb
push
jae
xchg
inc
and
fidivl
test
xchg
or
loopne
paddd
rcll
scas
pop
imul
jo
clc
ficoml
loope
xchg
and
adc
inc
lret
test
mov
xchg
mov
movsb
add
mov
push
inc
test
xchg
push
shrl
pop
push
std
addl
outsb
jle
notb
dec
push
or
cli
enter
and
mov
test
xchg
lret
popf
repnz
lret
xor
pcmpgtw
shll
test
shrl
bound
test
mov
and
fs
in
mov
pop
lahf
jle
notb
jg
mov
incb
mov
cld
mov
xor
xchg
mov
push
lea
fdivl
xor
push
add
xorb
xchg
xchg
int3
rcrl
out
iret
mov
rorb
jmp
push
dec
icebp
leave
ja
jns
or
bound
rorb
js
push
adc
xor
repz
ud2
mov
pop
pusha
sbb
xor
mov
jnp
mov
pop
sub
cmpsb
ret
push
mov
stos
dec
jne
call
cmp
and
sbb
jnp
mov
push
mov
dec
inc
or
movsb
outsb
insb
sbb
int
je
mov
or
in
insl
push
in
scas
idivb
pop
xor
mov
lods
leave
arpl
shl
fnsave
mov
mov
rorl
sar
into
shlb
imul
jecxz
xchg
xchg
jg
mov
jne
add
xchg
lahf
incl
adc
repz
and
pusha
repz
push
add
jmp
jecxz
mov
pop
add
inc
hlt
jb
adc
repnz
out
call
push
cmp
push
sarl
imul
stos
nop
and
mov
sub
dec
jp
xchg
jge
out
inc
jno
xor
adc
stos
or
dec
ljmp
jbe
adc
cmp
inc
lret
cmovnp
mov
mov
cmc
and
sti
adc
push
roll
pop
pop
xor
repnz
int3
adc
sbb
pop
sbb
addl
adc
ffree
int3
push
lcall
inc
int
jns
in
fwait
pop
mov
jle
push
pop
lcall
add
ret
hlt
sbb
aam
jl
jmp
testb
int3
add
push
ret
call
pop
aas
pop
mov
lea
fs
lods
dec
push
lea
inc
sub
aas
adc
mov
inc
push
rclb
call
sbb
xor
dec
or
cs
push
or
pop
jno
mov
out
mov
enter
ficomps
and
shl
lea
mov
pop
ror
movsb
rclb
enter
faddl
call
cmp
dec
test
mov
cmp
and
mov
imul
mov
xchg
cmp
mov
add
or
loope
je
cmp
or
scas
mov
bound
rcrl
lsl
in
sbbb
and
fistpl
rcl
rorl
in
insl
xchg
cmp
and
cmp
pop
repnz
lods
mov
mov
or
insb
mov
xchg
xor
movsb
es
and
mov
pop
or
dec
mov
inc
dec
aaa
fmul
push
sbb
inc
test
into
add
pushf
in
xchg
data16
lret
hlt
pop
loop
je
sarb
in
inc
xlat
insl
into
mov
push
xchg
dec
idivb
sub
xchg
stc
shlb
pusha
stc
ds
inc
push
leave
push
sbb
xchg
push
aaa
addr16
jg
push
pusha
in
test
mov
xchg
loopne
jecxz
scas
jno
push
test
in
adc
add
dec
fimuls
xchg
mov
das
insl
lcall
call
dec
add
and
data16
mov
pop
outsb
outsb
xchg
fwait
lea
mov
mov
jb
xchg
fld
pop
xchg
pop
sub
shrb
pop
popf
test
mov
xor
aaa
roll
out
sub
inc
adc
lock
push
push
fwait
lea
or
adc
mov
outsb
add
cmc
mov
in
jo
push
ss
cmp
fbld
into
add
fdivrl
ds
or
std
or
jge
int
daa
mov
xchg
stos
dec
test
mov
mov
sub
push
ret
cmp
and
ss
inc
lds
sub
test
pop
jne
lock
fbstp
pusha
and
lret
outsl
inc
jb
sub
sbb
repnz
xchg
sbb
mov
das
mov
dec
inc
mov
dec
mov
mov
lods
jp
adc
adc
xchg
je
cmp
inc
cmpsb
mov
mov
dec
dec
xorb
shlb
jne
pushf
lret
mov
push
hlt
or
push
mov
cwtl
lret
popf
xchg
loope
cs
lahf
out
mov
test
mov
cmc
cmp
and
in
shrl
mov
negl
insb
call
shl
sbb
add
cmp
inc
movsb
pop
mov
mov
hlt
test
and
pop
dec
inc
pop
cltd
mov
imul
jb
and
cmp
jb
imul
jno
dec
out
mov
in
dec
je
and
mov
dec
inc
inc
cmp
sub
mov
lret
mov
sub
test
mov
les
dec
and
mov
dec
mov
es
js
xor
mov
mov
mov
mov
lods
cltd
loop
mov
xchg
jno
pop
cwtl
jmp
sti
int3
sbb
aas
ljmp
sbb
pop
xchg
add
outsl
sub
jmp
insl
mov
fidivrs
mov
and
enter
sub
ds
mov
sti
fistpl
ljmp
jle
inc
sarb
jns
or
cli
dec
add
daa
fwait
adc
inc
sti
adc
mov
loopne
negb
push
and
fadds
das
lods
fisubs
hlt
stos
pop
imul
movsl
rclb
push
stos
jae
jae
mov
cli
or
inc
pop
shl
cs
jge
or
pop
clc
out
mov
sbb
and
dec
in
sub
flds
in
jp
ds
subb
mov
mov
jg
fmuls
test
xchg
loopne
jp
push
imul
subl
pop
sarl
dec
adc
data16
pop
gs
into
adc
mov
mov
dec
cmp
sbb
aaa
int3
mov
xor
js
int3
sbb
inc
lahf
ss
cmp
fcmovnu
loopne
test
adc
jnp
cmp
xorl
stc
cltd
inc
repnz
lods
in
stc
scas
pmulhw
inc
and
scas
and
push
pop
loop
adc
push
cmp
dec
mov
pop
sarl
mov
jmp
adc
or
scas
fisubrs
mov
sbb
inc
mov
aam
fsubrl
call
sbb
add
inc
mov
int
test
jp
adc
jne
in
mov
in
push
ja
lret
repnz
cmpsb
pushl
pop
imul
dec
mov
cld
testl
loop
mov
mov
cmpsl
mov
bound
cwtl
aam
pop
in
cltd
mov
mov
xchg
push
dec
mov
jle
int3
ret
sub
push
test
int3
mov
pop
gs
jb
dec
cmp
iret
cmpsb
aas
pop
mov
or
std
xchg
mov
sar
nop
and
mov
adc
and
mov
cmp
xchg
std
lods
pop
add
adc
iret
jno
hlt
dec
dec
outsb
and
push
ss
or
movsl
mov
cmp
jmp
lds
enter
jmp
bound
push
insl
fimuls
sub
cmc
sbb
in
jl
push
jl
insb
movsb
div
out
sub
lds
rorb
cmc
xor
jl
out
rcrl
fs
das
mov
ucomiss
xlat
dec
imul
xchg
rep
stos
icebp
test
adc
mov
mov
mov
jno
mov
mov
stos
push
pop
pop
pop
mov
and
push
testb
mov
test
mov
or
dec
movsb
mov
jmp
jp
fwait
divl
lret
push
in
aad
fcomi
jb
lahf
mov
add
lret
ds
jge
insb
push
test
jne
ss
adc
hlt
std
or
dec
repnz
fs
cmpsl
xchg
aas
mov
in
pop
call
out
and
adc
clc
or
js
nop
ljmp
mov
scas
enter
sbb
xchg
or
mov
popa
jae
fcmovnb
psubw
xlat
push
call
cmc
das
xchg
sar
cli
icebp
inc
rclb
mov
pop
xchg
test
in
jnp
and
stc
les
inc
scas
repnz
pusha
fcoms
jge
addb
xchg
mov
repnz
mov
pop
pop
jge
fbstp
add
stos
aad
mov
aad
stos
mov
mov
ss
movsbl
xchg
mov
jle
sahf
adc
pop
jno
xchg
xchg
cmpb
fmuls
es
loope
and
pop
ljmp
cli
push
jb
inc
frstor
roll
popf
outsl
test
fcoml
popf
aas
int
rolb
inc
jle
pop
mov
adc
xchg
or
cmp
movsl
std
ret
lods
imul
mov
mov
and
sbb
out
dec
ss
and
push
jbe
fwait
sbb
sbb
bound
out
jns
stc
xor
mov
loop
inc
push
adcb
into
mov
xchg
js
addl
lea
fnstenv
jp
pushf
fiadds
rol
ds
imul
mov
lret
jg
xchg
inc
fnstsw
lea
jnp
lock
pushf
jbe
int
sbb
push
aas
pusha
jmp
sbb
int
subl
movsl
mov
loopne
xor
aam
pop
cmp
push
daa
pop
les
sub
js
mov
add
jne
xor
inc
sbb
mov
lret
adc
cltd
push
xchg
pop
or
adcl
aas
test
out
and
inc
sub
or
in
test
cmp
clc
insl
imul
xor
add
stc
loopne
and
mov
push
jne
mov
sub
clc
push
jne
popa
sbb
jbe
adc
ret
in
mull
clc
xchg
fsubr
stos
jp
data16
testl
fcmovu
popa
int
lock
rcl
mov
xor
adc
push
sbb
cmpsb
into
jmp
cs
iret
push
in
rcll
adc
sbb
xlat
mov
daa
shl
xchg
sub
int
adc
pop
lret
fwait
mov
mov
pop
mov
inc
lret
mov
repnz
insl
imul
popl
cltd
and
or
sbb
insl
bound
push
push
fucomp
fidivrs
mov
enter
insl
mov
lods
mov
daa
jo
sub
fwait
dec
les
ss
push
xchg
xchg
jge
sbb
cmp
push
cmc
mov
mov
pushf
sbb
mulb
mov
movsl
push
xor
ficomps
add
loop
mov
jb
dec
adc
xchg
jnp
sub
pop
push
mov
push
push
icebp
inc
xchg
test
push
cmpb
or
ljmp
adc
cmp
lods
cmp
outsl
js
and
jg
push
aad
rolb
adc
int
cmpsb
fistpll
in
push
rcrb
repz
movsb
jmp
out
sbb
cmpb
in
js
add
imul
arpl
and
pop
out
test
ss
stos
shrb
pusha
cmc
jmp
pop
popa
push
and
dec
mov
jnp
mov
outsb
pushf
cmp
xor
dec
rolb
xchg
add
xchg
jo
mov
mov
ja
add
or
push
sub
cltd
adcb
test
cmp
dec
or
mov
call
repnz
arpl
adc
lock
push
mov
out
mov
push
aad
push
and
adc
xchg
mov
rcrb
mov
mov
push
jns
loop
mov
add
and
push
dec
inc
cmpsl
ljmp
mov
rorb
cs
jb
decb
mov
aam
ljmp
xchg
adc
cld
stos
clc
jmp
jge
jl
hlt
push
or
mov
pop
sbb
subb
dec
rorl
dec
pop
adc
rcr
ja
cmp
rclb
adc
popf
enter
xor
loopne
sbb
pusha
dec
lahf
ds
fldl
ja
push
imul
ljmp
push
fucom
in
pushf
daa
xchg
fneni(8087
lock
ds
in
dec
mov
lods
cltd
stos
fsubrl
cmpsb
xchg
fistl
or
pop
or
or
movsb
mov
sbb
jb
adc
aad
xlat
fwait
or
mov
sub
pusha
int3
cmpsb
and
and
popf
jne
stc
inc
push
hlt
enter
imul
fidivrs
insb
sbb
add
add
mov
outsb
mov
xchg
nop
cmp
nop
jno
adc
fsubl
es
jmp
ret
push
out
xchg
popl
sub
loopne
lahf
outsl
dec
fildll
les
mov
repz
mov
test
xorl
rclb
pop
arpl
outsl
and
stc
cld
movsl
nop
fildll
cwtl
mov
cmp
loope
mov
pop
jne
inc
sbb
push
pushf
enter
jno
insb
pop
and
cmp
inc
popa
dec
fcoml
aas
mov
out
scas
mov
sub
fnstenv
test
fsubl
sbb
mov
xlat
clc
pop
push
adc
lods
mov
lret
add
mov
or
in
scas
push
dec
xor
mov
adc
filds
lds
jmp
mov
adc
negl
mov
mov
lods
xchg
ret
sbb
mov
push
adc
nop
adc
test
popf
jae
sbb
jb
rolb
popf
dec
cmp
mov
mov
out
es
inc
adc
push
sahf
inc
pop
popf
xor
call
ret
popf
push
in
insb
insl
pop
fdivs
mov
stc
jecxz
adc
mov
mov
pop
nop
int3
mov
sbb
icebp
cmp
mov
xor
dec
sbb
pop
jl
cld
lods
jmp
and
inc
dec
sub
sbb
fmull
nop
push
add
fimuls
xor
pop
dec
sbb
inc
push
lret
gs
jg
push
xor
jae
cmpsl
pop
stos
addr16
and
cmp
imull
ret
jae
fcmove
push
out
xor
xor
pop
aas
rclb
or
inc
ss
adc
int
push
and
scas
pop
xchg
push
jmp
xor
mov
fwait
add
shl
les
xor
ret
scas
popf
into
enter
ret
pushl
test
inc
outsl
aaa
mov
aam
ficoml
mov
loopne
int
xor
mov
fsin
xchg
cmpb
jl
inc
jb
cmp
adc
push
insl
sub
push
sub
jo
pop
das
jae
pop
cmp
pop
fisubrs
mov
pop
mov
test
inc
add
gs
sbb
out
mov
push
aam
lahf
test
sbb
pop
loop
cmp
divb
aas
or
bound
pop
xchg
mov
pop
repz
pop
loopne
mov
data16
mov
in
ficoms
mov
fwait
or
mov
outsb
sbb
mov
dec
cld
pop
add
inc
mov
sbb
orb
push
inc
adc
pushf
push
add
sub
sub
dec
mov
fsubs
mov
gs
scas
add
and
nop
insb
pop
sub
aam
sub
mov
push
adc
or
cltd
sbb
popf
jmp
out
sub
push
iret
cmp
mov
xchg
add
mov
fstps
add
stos
add
and
dec
movsb
mov
inc
add
push
hlt
xchg
or
and
cmpsl
loop
cs
lods
dec
pop
inc
sti
lock
inc
clc
test
adc
js
lcall
call
mov
cmp
test
mov
xor
jg
repnz
leave
andb
popf
jecxz
pop
mov
divps
int
addr16
adc
mov
sub
pmaxsw
cld
inc
aaa
imul
mov
xchg
andl
inc
test
push
dec
orl
loopne
pop
inc
mov
imul
dec
mov
mov
addr16
shlb
inc
fisubs
cmp
imul
inc
ss
test
lret
dec
cmpsb
in
test
pushf
pop
lock
mov
call
push
dec
popf
jb
icebp
xor
pop
gs
das
cs
xchg
push
out
sbb
mov
je
fdivrl
loopne
xor
popf
or
sub
jno
sbb
clts
lret
push
arpl
or
mov
lock
outsl
mov
mov
mov
xor
inc
mov
mov
pop
xlat
leave
mov
stos
sahf
pop
xchg
sub
jge
sub
adc
nop
stc
cld
jmp
out
nop
xchg
mov
popf
call
ret
xchg
ret
mov
jge
push
loope
inc
pop
mov
jg
push
jmp
ss
test
jg
inc
aad
xchg
sti
xor
pop
pop
jbe
out
and
sub
jae
sar
mov
xlat
xchg
stos
fimull
decb
pop
sbb
ds
movsl
out
sub
mov
mov
fisubrl
je
int
pop
lock
enter
repz
mov
daa
adc
inc
cld
setbe
xchg
loope
cmp
and
outsb
fnsave
mov
cmp
and
ret
aam
sub
lret
test
std
adc
mov
adc
aad
aam
outsl
add
or
jne
push
sbb
cmp
or
icebp
jmp
mov
mov
add
mov
test
jns
and
imul
push
push
push
data16
sub
shl
mov
in
inc
and
lods
jmp
cmp
aam
aaa
aam
je
ror
push
mov
insb
out
cmp
ljmp
xlat
xor
decb
mov
sbb
out
pushl
aad
into
push
inc
jnp
ficompl
dec
lds
mov
push
scas
jp
add
pop
sahf
push
stc
sbb
mov
test
inc
sbb
cmc
mov
lret
jo
out
pop
fwait
out
cmc
mov
mov
push
decb
xchg
sub
sub
dec
sub
or
jp
xor
arpl
sbb
popa
adc
lods
and
dec
fidivs
dec
or
sar
xchg
sti
push
jno
fcomi
scas
aaa
xor
or
sahf
sbb
js
jmp
mulb
and
pusha
push
aam
adc
mov
add
sbb
aam
adc
lahf
movsl
mov
daa
or
fnstenv
mov
sbbb
pop
in
addr16
aaa
mov
outsl
int
popa
arpl
data16
test
mov
push
xor
xlat
cmp
inc
aas
repnz
mov
mov
imul
enter
xchg
and
out
push
dec
push
sub
adc
out
push
movsl
mov
cmpsl
filds
cmp
cmp
inc
gs
jmp
jne
cmpsl
lock
sahf
int
sub
mov
xor
cmc
sbb
inc
sub
ret
call
psllw
mov
lock
loope
and
cmp
and
ljmp
xchg
imul
test
or
dec
enter
mov
iret
popf
pop
ret
jge
rcll
arpl
icebp
xchg
pusha
dec
lock
lahf
cltd
xor
adc
test
ficoml
mov
mov
xchg
test
push
roll
cmpb
sub
sub
cmp
iret
hlt
jbe
dec
fistpl
hlt
lods
aam
cmp
movsl
xchg
mov
or
jbe
add
test
pop
cmpb
push
push
stc
add
add
add
das
mov
xchg
movsb
sbbl
mov
filds
jmp
pop
ja
leave
fs
or
out
and
repnz
dec
pop
inc
xor
pop
loopne
adc
rcrb
lds
fs
sub
test
sbb
or
mov
dec
push
dec
jbe
imul
or
lods
mov
scas
inc
in
push
inc
pop
std
sub
jnp
adc
in
mov
jl
add
dec
leave
lret
mov
stos
add
pop
cmp
xchg
sub
mov
les
ss
shrb
adc
in
add
dec
adc
push
arpl
and
mov
icebp
inc
push
adc
fadd
sub
xlat
loop
mov
out
or
mov
inc
aam
inc
sbb
push
adc
dec
es
leave
sub
xor
jecxz
mov
int
cmpsl
sbbb
lds
jl
mov
test
das
outsl
icebp
rep
cltd
scas
add
scas
lret
idiv
push
fidivs
int
sti
cmp
clc
inc
xchg
loopne
rorl
push
cmc
mov
jg
or
and
les
mov
add
int3
jnp
stc
jne
xor
mov
cmp
lret
bound
test
lret
jae
mov
mov
je
sub
mov
jge
outsb
push
inc
pushf
xor
dec
jns
or
out
sub
das
sub
push
add
mov
xchg
jp
adc
xchg
mov
mov
gs
push
xor
lea
stos
mov
mov
mov
shl
jo
imul
push
add
fcomps
mov
cmp
lcall
mov
push
jnp
mov
xchg
cs
clc
adc
mov
ret
cmpsl
stos
mov
sbb
aad
shl
inc
dec
jbe
cmc
enter
jmp
lock
mov
mov
test
mov
rol
sub
rol
mov
fwait
cs
scas
and
popa
inc
push
sbb
sti
les
and
enter
aas
cmp
test
in
scas
loopne
scas
loop
into
loop
lock
mov
pop
sbb
dec
clc
test
push
nop
xchg
bswap
and
jns
push
adc
push
mov
mov
xlat
lds
out
imul
loop
pop
mov
and
mov
jo
mov
sti
jmp
cmp
sbb
fwait
xor
repz
push
cs
out
loope
xchg
mov
push
out
xor
mov
dec
cwtl
mov
adc
push
imul
pop
xlat
sbb
repnz
cltd
or
dec
mov
out
insl
movsl
mov
iret
leave
ljmp
sub
sub
and
cs
int
push
or
out
stc
sub
and
icebp
jl
in
push
sbb
lock
jp
loop
test
adc
out
mov
ficoml
jne
out
cmp
mov
push
inc
add
ss
arpl
and
addl
aam
sub
add
lods
scas
add
daa
addr16
out
or
cmc
xchg
es
aas
and
mov
mov
add
mov
mov
cwtl
cmp
jns
andl
std
ljmp
test
mov
jo
nop
inc
mov
xor
fisubrl
shll
aam
fldenv
daa
mov
xlat
push
sbb
jecxz
xor
fmuls
pusha
pop
jge
les
inc
outsl
dec
cmc
mov
and
ud2
dec
push
mov
mov
cmp
jp,pn
push
xchg
lea
cmp
push
jno
aam
add
mov
clc
cmc
pushf
enter
inc
icebp
cmc
fwait
push
inc
push
pop
dec
shlb
pusha
xlat
int
cs
and
jno
xchg
jae
icebp
push
push
mov
lret
out
pop
sub
imul
sub
cmp
testb
outsl
mov
sub
std
hlt
ja
xor
mov
fisubrl
pop
ficoms
mov
insb
in
cli
pop
xchg
sti
push
dec
das
es
loopne
aam
inc
sbb
aad
mov
dec
outsb
pop
sub
lds
clc
mov
roll
shll
loop
arpl
mov
push
aas
imul
add
add
xlat
inc
loopne
cmp
es
int3
clc
pop
aaa
or
jno
imul
rorb
stos
aas
and
aad
lea
mov
insl
push
adc
push
pop
shrb
jmp
or
adc
xchg
lahf
xchg
lods
fdivrl
pop
mov
bound
adc
xor
out
addr16
push
inc
mov
and
xchg
push
jo
pop
inc
adc
mov
and
jb
jo
pop
jae
orl
ret
sub
push
cmc
cltd
pop
inc
xlat
daa
insb
dec
mov
pop
xor
test
xor
sub
xchg
aad
sahf
add
movsb
mov
xlat
stos
pop
mov
pushw
leave
pop
std
in
jle
dec
ljmp
mov
loop
rolb
enter
call
cmp
rcl
sub
sbb
sub
inc
rcrl
push
sbb
in
mov
outsb
mov
push
orl
cmpsb
das
stos
sub
aad
jge
je
xor
fwait
lea
add
orb
add
jmp
adc
or
mov
orb
dec
arpl
adc
ficoml
adc
test
repz
push
stos
xor
jmp
xchg
lahf
mov
movsb
test
data16
lahf
sbb
loopne
lea
sbb
mov
loopne
ficomps
cmp
dec
lock
repz
or
repz
scas
out
xchg
jno
cmp
xlat
jge
dec
adc
fidivrs
mov
and
sti
outsl
daa
and
or
rorb
cli
push
push
cmpsb
xchg
dec
inc
mov
testb
mov
xchg
sub
and
pop
leave
pusha
mov
adc
aad
cmp
dec
xor
inc
call
xchg
addr16
cld
push
dec
inc
ret
in
mov
loopne
mov
push
repz
out
push
sbb
jle
xor
das
bound
xchg
test
inc
movsl
ljmp
fcoml
mov
sub
stos
adc
cmpsb
cs
dec
aam
pop
add
mov
mov
xor
cltd
jge
mov
cmp
outsl
sbb
jge
jecxz
jns
scas
push
inc
push
xchg
daa
popa
dec
sub
lock
cmp
adc
shll
mov
mov
jns
outsl
xchg
sarl
adc
xchg
push
or
add
mov
leave
mov
jg
dec
sbb
and
leave
rcr
push
cmp
lret
sub
bound
gs
xchg
adc
div
xchg
aam
ds
imul
jb
scas
repz
sub
or
sbb
xor
outsb
xchg
lods
stc
int
push
call
adc
lret
pop
mov
dec
mov
sbb
add
sbb
hlt
jno
mov
push
das
xor
movsl
dec
out
out
cmc
lcall
iret
aad
mov
nop
dec
xchg
cmp
cmp
xlat
jbe
push
repnz
or
and
mov
mov
mov
ds
cli
jnp
nop
pop
scas
pushf
or
ds
int
loop
push
mov
cmp
popf
xchg
daa
inc
rcll
call
mov
push
cmp
stos
stc
je
mull
das
cld
mov
push
inc
ret
imul
imul
jne
rolb
mov
xorb
movsl
inc
fucomip
cmp
xor
mov
sbb
fcmovnb
mov
mov
mov
clc
incb
addr16
pop
faddl
ds
dec
push
ret
cmp
fdivrs
jle
insb
ss
mov
rolb
dec
jg
dec
cld
mov
mov
decb
dec
popfw
ret
out
lock
lahf
or
cmpsl
pop
sbb
outsl
out
loopne
sub
in
lcall
aad
mov
sahf
test
repnz
cmpsl
push
ret
call
mov
dec
movb
and
in
mov
test
push
sahf
nop
cltd
mov
call
xor
jle
mov
outsl
sbb
repnz
pushf
and
outsb
xor
stc
xor
shll
rclb
jnp
fbld
mull
cmp
out
ss
je
sahf
sub
rorl
imul
in
cmp
jae
jmp
sbb
dec
int
xlat
pushf
popf
neg
fdivs
xchg
lods
mov
loope
push
mov
or
jne
mov
pop
dec
fldenv
cmp
in
nop
fldenv
pop
xlat
cmc
dec
xchg
cmpsl
insl
and
add
into
cmp
pop
cmp
icebp
bound
mov
data16
inc
adc
mov
sub
gs
pop
cmp
nop
fyl2x
loop
sahf
test
outsb
jp
int
mov
mov
sub
jb
clc
push
xor
xchg
adc
mov
cmp
insb
cmp
addr16
xchg
jnp
xchg
mov
cmpl
and
dec
fnsave
xor
in
add
lea
dec
subl
cmpsl
mov
repnz
pop
jmp
filds
jb
adc
sbb
rol
mov
and
push
push
adc
pop
andb
push
and
adc
movsl
dec
cmp
push
repz
and
in
ljmpw
jb,pn
rcrb
repz
sbb
call
fcomps
inc
jae
xchg
and
mov
lock
sbb
or
mov
jb
dec
pop
fistl
push
in
lret
sahf
out
and
cmp
adc
mov
add
mov
xor
aaa
scas
push
xlat
pop
dec
mov
dec
leave
popa
pop
pop
mov
test
add
icebp
ss
xor
or
cmp
cmp
out
sbb
jg
push
negb
dec
dec
or
addr16
push
and
dec
pop
sub
in
adc
xor
cmp
push
xor
sub
bound
addr16
cmpsb
cmp
cmp
inc
xlat
mov
orl
adc
adc
lret
jbe
mov
shlb
pop
test
jb
or
or
movsb
daa
pushf
xor
roll
push
faddl
mov
addr16
sub
aad
in
jne
push
lret
sub
sub
jl
pusha
bound
popa
dec
outsl
into
or
loopne
add
pop
mov
cmp
mov
subl
jl
adc
mov
in
les
cli
mov
pop
movsb
loope
inc
mov
mov
test
mov
xchg
dec
in
mov
into
mov
sarl
push
jmp
dec
mov
mov
push
add
movsb
dec
pop
dec
lods
icebp
sbb
jl
and
jae
test
outsl
data16
mov
mov
mov
pop
in
jmp
fisubrl
fwait
mov
or
xchg
mov
mov
das
sub
mov
adcb
fildl
push
dec
mov
lret
sbb
divb
lret
push
bound
pusha
push
repnz
sbb
push
sub
or
mov
dec
xor
dec
ds
mov
jl
in
sub
sub
mov
sbb
inc
stos
cmp
enter
test
aad
push
mov
mov
jns
mov
in
cmp
sub
les
loopne
xchg
in
pop
and
fdivrl
ficompl
inc
add
mov
sbb
inc
sub
xchg
pusha
out
xchg
fidivrl
aaa
aaa
js
push
int3
imul
imul
adc
fldcw
sbb
jg
les
in
ljmp
cwtl
insl
dec
outsl
lds
std
out
mov
loop
shrb
adc
fstps
fildll
mov
arpl
pusha
adc
add
sti
push
dec
push
xchg
das
mov
jge
imul
fsubp
or
outsl
and
cli
and
xor
sti
addb
sub
leave
push
mov
push
nop
push
mov
sbb
jb
das
sub
xchg
push
inc
pop
aaa
cmc
dec
mov
ss
leave
stos
stos
and
in
lea
mov
out
aas
outsl
mov
out
xchg
insl
test
jne
mov
cmpl
daa
jge
rcll
mov
in
mov
iret
xchg
cwtl
sub
push
int
cltd
xlat
cwtl
inc
imul
jg
push
shlb
pop
pop
in
inc
xor
inc
adc
es
xchg
test
bound
cld
mov
into
sarb
ds
cld
movsb
arpl
adc
jg
lret
mov
or
cli
ret
xor
push
loopne
mov
jb
iret
xorb
push
shrl
stos
div
cltd
test
dec
test
inc
popa
mov
sub
sbb
mov
subl
clc
in
insl
push
je
xchg
popf
xor
test
pop
add
mov
adc
mov
bound
negl
push
mov
lcall
cmc
loop
xchg
push
and
sbb
add
cmpsb
sbb
mov
incl
inc
in
lock
jo
into
lods
addb
mov
loop
ds
xchg
movsb
mov
fwait
xchg
les
stos
cs
adc
std
and
cmpsl
push
cmp
cltd
sbb
dec
outsb
inc
pop
movsb
insb
mov
jnp
scas
push
aam
mov
mov
inc
outsb
out
cmp
aad
in
dec
inc
mov
xor
ret
lret
data16
movsl
aas
shll
cmp
xor
lock
push
mov
test
fimuls
and
ds
add
aam
aam
dec
inc
arpl
adc
iret
pushl
xor
fsts
jns
fcompl
and
fbld
and
jg
sub
cmp
sbb
mov
lcall
inc
pop
mov
xchg
push
mov
cli
stc
sbb
push
lock
hlt
xchg
lcall
mov
pop
dec
shll
sbb
movsb
gs
mov
mov
enter
sub
fcoml
dec
adc
cmp
jne
insb
loop
fcmove
popa
pop
cmp
mov
js
outsl
pushf
or
or
cwtl
adc
pop
sub
jp
or
out
mov
movsl
popa
cmpb
xor
push
data16
dec
mov
jecxz
lods
push
aad
in
adc
scas
and
test
leave
iret
push
test
hlt
bound
mov
adc
push
pop
stos
jae
and
pusha
in
cltd
scas
fiadds
pop
mov
add
fsts
and
push
ret
outsb
mov
push
push
pop
jl
lret
ja
fbld
testb
jl
mul
mov
movsl
in
or
aad
push
inc
jmp
scas
mov
cmpxchg
or
aaa
push
adc
data16
sbb
sub
test
push
test
fidivl
dec
insb
repz
cs
outsb
out
dec
mov
fs
mov
mov
adc
rcl
mov
jns
jbe
mov
and
mov
stos
testb
push
outsb
jb
mov
bound
imul
js
and
ds
scas
xchg
push
ss
jno
js
into
jp
out
mov
dec
add
mov
pop
lret
hlt
dec
mov
rolb
xchg
or
loop
clc
aad
mov
xchg
mov
jmp
jae
aas
jnp
fistpll
repnz
ljmp
lea
loope
adc
repnz
decl
scas
aas
andb
cmp
add
xor
inc
and
xchg
loop
mov
je
sbbb
loop
mov
movsb
es
or
mov
add
push
movsb
mov
mov
inc
movsb
mov
cs
dec
xchg
mov
push
icebp
rcrl
test
adc
imul
cmp
xchg
es
jp
sbb
cwtl
out
mov
pop
rcl
sub
mov
mov
mov
mov
nop
movaps
data16
int3
push
adc
push
in
mov
andb
sub
xor
sbb
sub
jp
push
xchg
sbb
xchg
sub
sbb
fadds
push
mov
shll
sub
mov
arpl
dec
mov
pop
xchg
vpmuludq
nop
pushf
cld
sahf
shlb
test
int3
in
jmp
ret
popa
pop
out
jnp
jbe
inc
jmp
jle
cltd
incl
das
daa
push
xchg
mov
mov
lahf
adcb
data16
sbb
enter
cmpsb
lret
pmullw
mov
fs
scas
cmp
fildl
push
into
sub
jmp
jp
stc
inc
shl
and
pop
jmp
or
push
dec
adc
cmp
sub
jg
jae
dec
inc
mov
sahf
add
shll
out
outsl
inc
inc
sbb
lock
push
mov
jnp
loope
jl
into
or
jb
pop
cmp
mov
inc
aas
not
ret
test
pop
adcl
inc
daa
jbe
rclb
xlat
and
cld
lock
js
dec
dec
dec
jecxz
add
jp
lcall
adc
loope
adc
mov
sub
sbb
xor
xor
xor
mov
adc
mov
popf
stos
fstpt
xchg
addr16
outsl
mov
cmp
add
inc
and
dec
jnp
cs
sbb
cltd
adcl
adc
stc
cmp
adc
loopne
nop
scas
mov
and
sbb
mov
fmulp
or
or
sti
push
shrl
xor
push
pop
and
je
adc
mov
push
out
or
insl
mov
insb
iret
jp
sbb
rorl
push
mov
leave
cltd
mov
and
aad
jb
add
or
in
inc
push
cmp
dec
jg
sti
pushf
mov
pop
ret
push
and
prefetch
push
repz
mov
add
fisttpl
es
rol
mov
jl
mov
mov
dec
or
mov
inc
sub
and
push
cld
lods
or
sbb
cmpb
aam
xchg
out
inc
int3
int
mov
insl
xchg
pop
mov
add
adc
in
out
sti
mov
sub
or
add
mov
adc
pop
inc
out
mov
out
fdivrs
sub
shlb
sbb
sub
cmp
or
jnp
or
frstor
xor
fisttpll
repnz
jne
icebp
and
lcall
adc
mov
mov
outsb
rcrb
jl
icebp
daa
call
pop
loope
xor
sbb
mov
pop
mov
mov
push
aaa
rclb
jne
sub
adc
dec
jecxz
popf
pop
into
roll
xchg
mov
test
and
mov
adc
mov
xlat
clc
out
xor
or
pop
mov
iret
daa
pop
pop
shll
clc
aam
movsl
cmp
or
add
leave
sub
lds
aad
loope
popa
rolb
mov
repz
xor
mov
rcrb
imull
xor
icebp
mov
mov
arpl
xlat
lds
xor
mov
aam
xor
dec
bound
add
adc
addr16
mov
aaa
aad
and
push
test
or
sub
and
shlb
iret
inc
pop
sti
stc
cwtl
sahf
out
insl
gs
pop
stc
lret
pop
jl
xchg
in
mov
sub
lcall
arpl
and
add
pop
sub
pop
out
stos
call
pop
add
mov
inc
inc
add
cmpsl
dec
push
sbb
mov
lock
dec
mov
push
leave
inc
sub
xchg
addr16
xor
stos
ljmp
jmp
out
cmp
rolb
jecxz
aaa
jno
bound
mov
aaa
cmp
pushf
mov
inc
addl
xchg
andnps
jne
and
inc
and
xchg
jo
pop
daa
jge
pop
shll
enter
mov
aas
arpl
data16
mov
mov
mov
cmp
sub
xchg
add
jle
lahf
in
or
jnp
aam
cmp
sub
lock
repnz
aam
movsb
popf
mov
imul
mov
mov
mov
lret
call
pop
dec
ficomps
xchg
test
stos
pop
movsb
in
add
stos
mov
test
pop
sbb
sbb
xchg
lock
insl
in
mov
jmp
jns
addr16
aam
pop
mov
les
or
pop
jle
xchg
cli
nop
and
or
pop
mov
cmp
lcall
stos
cmp
out
xor
in
lahf
jmp
outsb
xchg
cmc
sbb
pushf
out
cwtl
sbb
sub
out
mov
insl
insl
insb
pslld
sub
xor
movsb
stos
lods
sahf
js
jae
ja
scas
mov
add
dec
hlt
dec
mov
je
sub
jne
iret
push
xor
int3
jbe
cmc
test
pop
adc
rorl
jmp
js
push
lret
popf
lret
movsl
fnsave
test
push
ss
pop
fld
in
xchg
xchg
xlat
mov
cmp
add
stc
xchg
mov
inc
subb
repz
inc
push
ret
stos
sbb
mov
xchg
lret
pop
decb
jmp
test
xchg
mov
aas
ret
add
lea
ja
mov
clc
xchg
dec
cmp
lods
push
cli
add
cwtl
cmp
in
cmp
inc
jecxz
or
mov
loop
push
dec
scas
enter
push
xchg
mov
mov
pusha
xor
insl
adc
mov
mov
push
imul
add
jmp
icebp
cli
int
test
and
sbb
xchg
cmpsb
mov
add
push
push
xchg
fucomp
ret
add
jb
cmp
pop
insl
mov
fmuls
shrl
mov
in
push
sub
and
in
in
cmp
jbe
mov
ror
mov
cwtl
and
test
jae
leave
add
js
xor
fidivrs
sub
or
jb
test
jae
and
pop
sbb
ficompl
adc
aas
enter
mov
dec
call
out
sbb
lahf
mov
xor
push
fadd
pop
push
sub
icebp
dec
sbbl
arpl
pop
fistpl
pop
testb
add
xor
pop
xchg
or
mov
fbstp
cmp
dec
outsl
mov
cmp
sub
dec
sub
cmp
add
inc
popa
add
imul
lds
jge
mov
jge
ja
pop
mov
ss
push
fnsave
cli
xor
push
add
and
or
out
test
stos
sbb
jmp
jg
jo
test
stos
add
or
mov
adc
push
js
sub
fmull
and
rorl
jno
pusha
xchg
push
add
xchg
bound
sarb
icebp
jo
aad
and
xchg
lahf
or
xchg
ds
add
mov
push
fists
or
test
iret
mov
jecxz
daa
aam
mov
xchg
pusha
fcom
call
ds
xchg
test
push
add
jnp
ja
pop
rcrb
sbb
mov
insl
dec
pop
add
mov
jg
in
adc
xchg
cmp
leave
test
std
lret
push
shrb
andb
mov
loope
jle
loope
int
dec
outsb
inc
add
lods
sti
mov
inc
repnz
and
and
mov
repnz
lcall
or
sbb
stc
jp
pushf
bnd
jle
jp
sub
shll
lret
pop
sub
mov
sbb
sub
rclb
cltd
dec
fs
inc
lcall
and
xor
push
shll
mov
push
mov
outsb
rcrb
xor
pop
movsb
and
aas
xchg
inc
jle
ljmp
fidivrs
rcrl
xor
sbb
loopne
adc
subl
test
icebp
dec
inc
enter
imul
add
rcll
xchg
mov
xor
mov
roll
imul
push
adc
cld
cli
lret
pop
push
sarl
sbb
or
mov
dec
jb
push
jmp
push
outsb
dec
mov
inc
movsl
mov
js
add
pop
pop
bound
aas
xchg
stos
movsl
pop
push
push
adc
add
scas
sub
pop
rcr
cli
add
mov
and
mov
sti
out
data16
jge
sub
jl
icebp
xchg
loop
or
lock
jge
push
es
test
pop
jp
adc
fs
mov
inc
sbb
cmc
imull
inc
lock
cmpsl
js
clc
scas
jmp
mov
adc
in
mov
loopne
jb
cmpsl
outsl
adc
mov
sbb
mov
and
pushf
xor
fucom
add
in
dec
fists
cmpsl
xorb
je
jo
mov
and
pop
mov
mov
jge
lods
mov
ds
ja
sub
pop
repz
shl
fwait
xor
add
out
fstps
ret
mov
add
shrl
stos
repnz
push
xchg
test
lods
test
out
fucomp
insl
insb
push
jg
pusha
or
pop
mov
fiadds
aam
das
lret
jl
fs
mov
xchg
inc
lods
inc
ret
sbb
je
sbb
call
and
cli
mov
cwtl
add
lea
inc
mov
pushf
pop
xor
pop
inc
inc
jg
mov
adc
and
sbb
cs
mulb
divb
inc
int3
add
orl
cld
outsl
mov
mulb
dec
push
fwait
mov
and
mov
cmp
mov
xchg
mov
lcall
dec
sahf
lock
shl
mov
in
stos
test
jns
mov
mov
ret
adcb
xor
shrl
in
or
xor
jp
das
xchg
jecxz
movsl
stc
inc
ljmp
dec
inc
sahf
fstpl
in
add
xorb
sub
fdivrl
punpckhwd
je
xchg
pop
fs
aas
or
xor
js
lahf
out
rclb
mov
adc
popf
scas
pop
inc
ds
clc
loopne
cmp
and
dec
daa
lcall
rol
hlt
push
add
nop
popf
mov
shll
addr16
lahf
and
mov
bound
xchg
dec
popa
or
jnp
pop
insb
fisubrl
push
outsb
lods
push
sub
sbb
mov
jp
xchg
sbb
xchg
push
mov
shll
mov
sbb
hlt
xchg
enter
cs
testb
js
jl
into
jecxz
es
pop
pop
test
jmp
data16
sbb
or
xchg
adc
dec
out
push
cltd
dec
xchg
cmp
popa
outsb
inc
and
jle
mov
fdivr
jnp
mov
and
or
push
iret
mov
sub
test
mov
dec
rcll
xor
pop
insl
push
jecxz
mov
out
loopne
mov
xor
sbb
aad
hlt
jmp
shll
cmp
orl
ds
mov
ss
mov
dec
fbstp
lods
inc
sub
repnz
add
insb
push
sbb
pop
sub
fldcw
xor
mov
loope
or
outsb
mov
adc
cmp
sarb
jnp
push
jne
sbb
xchg
inc
add
test
in
fsubl
stc
and
push
sub
repz
loop
push
xchg
cmp
push
addr16
cmp
mov
ja
lods
xor
rcrb
shlb
fs
es
sub
push
push
lods
hlt
testl
popf
cmp
xchg
std
xchg
adc
xchg
out
or
adc
mov
adc
sti
jmp
mov
ss
or
pop
in
mov
inc
push
add
jne
adc
or
mov
andb
sti
aas
sub
andl
bound
nop
jl
and
xchg
jmp
inc
test
push
adc
int3
add
inc
mov
adcb
cmpsb
stc
pop
cld
in
mov
xorl
daa
fs
adc
daa
inc
aaa
pop
outsb
xchg
in
lds
enter
adc
ja
mov
inc
popw
sbb
jnp
mov
dec
lss
fisttps
cmp
dec
lahf
lods
mov
das
lea
and
imul
leave
adc
imull
jle
adcl
cld
adcl
shll
mov
jae
outsb
xchg
mov
aaa
sbb
dec
ret
loopne
lahf
push
xorb
xchg
or
fdivs
add
add
inc
std
jns
xchg
aas
mov
dec
jb
scas
mov
js
dec
dec
les
mov
cmp
mov
xor
addb
fcompl
mov
lret
je,pn
push
enter
sub
cmp
out
lea
sahf
mov
pushf
shlb
icebp
adc
in
aad
inc
mov
jg
out
push
and
mov
sti
sbb
imul
scas
sub
rclb
mov
add
or
mov
cmp
pop
xor
movsb
mov
xor
adc
sub
stos
arpl
jge
subl
mov
xlat
dec
pushf
mov
aaa
xor
or
stos
cs
mov
scas
jnp
lds
bound
xor
mov
daa
outsl
out
fcmovnbe
xchg
push
sbb
push
shrl
ret
cmc
and
jns
sti
dec
fdiv
mov
scas
pop
insb
outsl
mov
mov
or
jno
aas
adcl
xor
cli
js
or
mov
and
pop
xor
jmp
xchg
mov
ss
mov
in
adc
lds
mov
mov
lret
mov
xor
in
jp
jg
pop
mov
sub
cmpl
in
sbb
xchg
pop
testl
dec
fistps
cmpsb
add
sub
in
jno
push
enter
in
adc
adc
es
ds
push
mov
and
in
fcmovbe
inc
sub
mov
fildl
mov
lret
xchg
popf
push
icebp
arpl
ret
or
pop
cmp
jg
pop
xlat
push
enter
call
dec
inc
sub
out
jp
rclb
in
daa
push
seto
call
cmp
imull
mov
bnd
mov
jg
fldt
sub
jl
push
insl
sahf
repnz
cwtl
pop
adc
mov
xor
xlat
cmpsl
lcall
inc
aaa
je
and
mov
scas
test
cmp
sub
xor
notb
mov
mov
leave
je
push
cli
cs
sub
out
jmp
shrl
cmp
loope
decl
in
cmp
enter
aad
repz
cmp
or
das
mov
pop
or
lret
sahf
mov
ds
aam
ret
scas
sbb
mov
pop
lock
ficomps
pusha
or
add
jno
or
ljmp
push
pushf
push
jno
nop
stos
scas
cmp
xchg
dec
aam
pop
xchg
inc
xor
mov
inc
jnp
sub
mov
clc
outsl
fs
xor
mov
push
cmpsl
sbbl
aam
push
aaa
shrb
mov
cmp
xchg
decb
push
lock
cmpsb
dec
dec
cmp
jno
or
insb
push
out
cmp
mov
arpl
lret
out
mov
add
lods
jmp
sub
or
inc
and
shrb
inc
sbb
cmovb
adc
andb
sbb
dec
inc
dec
cmpsl
js
xchg
jge
ficomps
jecxz
in
inc
mov
cld
fcomip
xchg
and
sub
cmpsl
mov
fs
lods
lea
push
mov
xor
pop
popf
inc
mov
fsubrl
and
mov
cmpsb
in
stos
mov
sbb
cld
sbb
mov
add
pop
fimull
mov
xchg
ret
xchg
sbb
xlat
data16
pop
fidivl
mov
aad
stos
push
push
decl
add
lock
ljmp
push
mov
in
xchg
mov
jbe
loopne
push
pop
dec
icebp
push
stos
cmp
rcll
ljmp
dec
add
lock
sarb
orb
inc
xchg
rcrb
sahf
into
test
int
or
mov
repnz
test
arpl
mov
mov
into
movsl
fdivr
out
pop
pop
aad
icebp
push
movb
sub
push
cld
xchg
cmpsl
pop
mov
cmc
int
in
cmpsl
sub
xchg
sahf
adc
dec
mov
jmp
sbb
mov
testb
test
inc
test
inc
pushf
jno
ss
icebp
cwtl
insl
or
loop
dec
es
cmp
cmp
daa
stc
das
xchg
cmc
pop
sbb
sbb
xchg
lahf
cs
pop
test
sbb
push
pusha
jo
ret
imul
repz
mov
sbb
repnz
xor
jle
fsubrl
cltd
ds
or
and
ja
or
test
pop
mov
xchg
in
jo
dec
jp
mov
push
popa
icebp
pushf
mov
push
dec
pop
pusha
push
scas
pop
push
loopne
mov
or
gs
sbb
in
aam
ret
hlt
es
test
xchg
sub
cmpsl
stc
push
mov
ss
aam
inc
dec
xchg
sbb
pop
popf
xlat
pop
je
fldt
fs
cmp
jnp
maxps
mov
hlt
push
or
popf
pusha
out
jnp
push
xchg
pop
pop
imulb
in
in
add
test
adcb
js
sub
sahf
js
lods
jae
sbb
lret
out
push
mov
sub
cmp
adc
xor
out
loopne
clc
push
pop
dec
repz
pop
into
push
ret
xor
lods
inc
pop
call
mov
inc
mov
add
sbb
mov
loopne
les
data16
lcall
sahf
icebp
fsubrl
mov
dec
pop
pushf
inc
jno
mov
mov
add
sub
sti
dec
xor
push
push
jecxz
cmp
lods
xchg
mov
mov
and
subb
aas
pop
ficomps
xchg
imul
lcall
sbb
loopne
mov
test
push
or
daa
or
xchg
lods
mov
imul
jmp
xor
adc
rcrb
lret
mov
mov
mov
jp
dec
jg
mov
add
or
scas
xor
enterw
push
dec
cmp
lock
sub
mov
sub
rorb
lret
or
add
push
loop
div
stc
insl
and
gs
and
mov
sub
cmp
push
loope
int3
push
insb
ret
push
cli
cmp
sbb
pop
data16
mov
xor
inc
mov
aam
push
repnz
shll
mov
sub
lods
insl
mov
ja
fs
dec
sbb
and
ljmp
sub
or
mov
mov
fld1
in
and
subl
fidivrs
adc
adc
sbb
cmp
enter
and
mov
sbb
sahf
add
mov
inc
xchg
aas
outsl
fiadds
repnz
aam
xlat
pop
push
enter
add
xor
rcl
icebp
mov
fmuls
mov
ret
mov
jg
ret
cltd
dec
cli
inc
push
xchg
pop
lods
fwait
mov
pop
mov
aad
mov
jbe
jg
aas
mov
out
and
jmp
adc
pop
mov
mov
mov
fnstenv
mov
mov
adc
pop
pop
sub
dec
push
nop
incb
iret
and
pop
mov
ficoml
filds
xchg
adc
push
outsl
inc
imul
mov
xchg
fst
push
xchg
mov
cwtl
adc
je
aaa
fisttps
mov
ficoms
repnz
dec
xchg
sbb
int3
sti
in
stos
roll
movsb
pop
push
mov
in
out
stos
cs
mov
mov
into
cmp
jp
je
and
mov
rorl
push
shll
filds
aam
xor
lds
imul
mov
xchg
jp
push
cmp
sub
pop
xchg
cmp
mov
push
push
sahf
and
ret
es
adc
lcall
in
gs
fs
leave
fmulp
inc
mov
cld
or
repz
subb
adc
pop
aaa
out
adc
add
cs
cwtl
mov
in
adc
into
pop
cltd
ret
iret
ljmp
dec
cltd
imul
xor
mov
lods
ja
add
scas
xor
icebp
cltd
dec
test
fld
sub
fiaddl
add
dec
in
and
fidivs
lret
cmp
insl
adc
data16
xchg
movsl
lock
sti
xor
test
push
imul
dec
xchg
scas
push
mov
int
out
mov
sub
lods
into
adc
mov
testl
outsb
push
shlb
push
cltd
jl
fldcw
jecxz
pop
hlt
dec
mov
notl
dec
sbb
pushf
shrl
mov
aad
aaa
test
fdivp
xor
xchg
jmp
test
loope
pop
ret
mov
jb
or
js
dec
adc
dec
sbb
adc
arpl
mov
sbb
loopne
push
mov
and
mov
pop
pushf
and
es
ret
jno
mov
cmp
data16
xchg
ficoms
cmp
push
mov
sub
xor
cmp
sbb
push
cmc
orl
lock
fwait
jge
xchg
mov
dec
push
lcall
repz
mov
inc
sub
mov
sub
cli
adcb
push
imul
repnz
push
or
xlat
dec
add
lds
push
xchg
and
cltd
cmp
outsb
in
imul
xor
xchg
inc
out
incb
jo
jmp
adc
or
jae
popa
jns
test
ss
dec
loopne
add
mov
lahf
les
lds
pop
fsubrs
adc
cmc
dec
dec
sbb
mov
sbb
or
adc
jno
andps
das
fiadds
adc
stos
sub
test
sub
mov
insb
mov
inc
mov
lret
insb
jle
push
call
mov
jae
jl
testb
xor
hlt
sub
je
push
mov
ljmp
mov
dec
xor
enter
xchg
into
jmp
arpl
jp
sti
xchg
fsubs
mov
or
cli
nop
fmull
call
pusha
cmpl
mov
inc
xor
xlat
jle
dec
orl
fsub
stc
sub
ror
mov
ss
sub
ljmp
test
mov
fs
subb
sub
mov
inc
ljmp
mov
xchg
ja
and
outsl
out
fs
in
cld
cmpsb
test
push
addr16
add
lahf
pop
dec
jl
xor
hlt
jmp
jne
xor
imull
imul
aas
out
cltd
hlt
bound
inc
or
out
js
pop
mov
cmovle
ljmp
or
iret
and
loopne
adc
cmpb
add
add
hlt
test
pop
add
pop
mov
jl
push
push
mov
push
test
or
clc
mov
xchg
call
in
sbb
daa
mov
lea
adc
mov
push
xchg
xchg
sub
rorl
andb
cmpsb
mov
call
loope
out
out
or
mov
lea
inc
ror
xchg
mov
popa
xor
dec
popa
subb
or
loope
xchg
rclb
ds
rcl
push
test
dec
lods
adc
add
andb
adc
sarl
aam
and
scas
xchg
mov
or
push
sbb
pusha
xor
dec
jge
cmc
push
into
jb
popf
je
into
xor
jno
mov
push
call
jle
pusha
shlb
fs
cmpsb
mov
mov
movsb
loop
cmc
xchg
fstps
adc
ss
ljmp
jae
sbb
cmp
inc
push
and
loopne
xor
jne
jnp
data16
xchg
add
clc
fwait
mov
lods
sbb
add
xor
dec
jbe
jge
cs
fbstp
adc
dec
or
xor
scas
js
rol
inc
xchg
pop
inc
icebp
mov
cmp
sub
sub
cmp
jae
decb
enter
imul
pop
dec
int3
xchg
jbe
icebp
in
nop
fcomp
mov
sbb
xchg
gs
push
mov
push
mov
repnz
inc
push
rorb
cmp
mov
scas
push
cltd
pop
lods
and
mov
adc
dec
bnd
jmp
jle
xchg
jg
outsl
lds
dec
mov
mov
push
mov
add
aad
and
sbb
pop
xor
test
cld
sub
ljmp
inc
sub
sbb
loop
jmp
pop
push
stos
jbe
repnz
bound
scas
xor
sub
fwait
sub
cmp
sarb
adc
cmp
push
pop
jo
popa
imul
adc
mov
pop
adc
dec
fcoml
out
repz
divl
push
cld
lods
jmp
dec
jb
jae
fidivs
inc
mov
lret
mov
fstp
pop
inc
sti
mov
cmp
xchg
out
ret
cmp
out
dec
mov
jae
push
es
leave
in
icebp
xchg
inc
subl
xchg
rcrb
addb
sub
fcomps
jo
jo
push
mov
mov
mov
add
aam
ds
push
das
xchg
xchg
xchg
xchg
xchg
mov
inc
sbb
and
outsl
adc
dec
jbe
in
xchg
and
outsl
rcll
outsb
repnz
mov
mov
mov
and
subb
adc
loop
out
fcompl
push
movsb
std
sub
fistl
or
int
ror
mov
fidivs
jp
mov
or
pop
stos
sbb
mov
lods
sbb
or
mov
cmc
gs
mov
adc
mov
mov
ja
adcb
mov
sbb
negb
sub
jb
scas
or
mov
fildll
cmp
xlat
mov
jae
int3
xchg
insb
loopne
sub
sub
lret
xchg
jns
ror
xor
sbb
pop
sub
movsl
xor
lahf
sub
adc
into
fwait
rclb
ss
mov
loope
data16
jne
fistpl
mov
loopne
les
mov
push
lahf
shr
sti
lret
push
insb
pop
or
lcall
mov
pop
sahf
movl
mov
push
mov
cld
in
ret
sarl
dec
sub
test
sbb
cwtl
xorb
shlb
fwait
mov
push
inc
loopne
stc
daa
sub
mov
mov
and
movsb
or
cmp
sbbb
aaa
adc
out
or
adc
xchg
sbb
or
out
inc
pop
sti
ss
cmpsl
jae
or
leave
mov
push
loopne
ljmp
pop
clc
inc
iret
ds
mov
push
cmp
imul
rcrb
cli
or
push
aaa
imul
mov
mov
sbb
cmp
outsl
cmc
and
out
lock
push
sub
aam
scas
sbb
xchg
adc
pusha
cmp
ljmp
and
inc
add
sbb
cmp
fmull
xchg
loopne
mov
push
lock
cmp
imul
dec
imul
sub
mov
in
fldenv
lret
ret
test
dec
xchg
adc
and
push
scas
cmp
jne
or
outsw
add
stc
xor
jmp
ds
mov
push
fstl
test
jg
dec
dec
daa
pop
movsb
aam
lea
cmc
test
fisubrl
pop
jg
in
out
mov
cmp
daa
dec
jle
repz
popa
in
cmp
ss
mov
nop
scas
iret
xchg
addr16
jecxz
mov
xchg
enter
jle
cmp
andb
jp
fdivs
shlb
shll
ret
xchg
push
je
inc
jp
add
repz
cmp
out
xor
cltd
push
dec
mov
mov
pop
icebp
inc
xchg
das
mov
push
xchg
push
rcr
jno
in
mov
insb
stos
cwtl
lea
js
repz
lret
inc
push
mov
add
mov
mov
cmp
mov
fnstcw
fildl
lea
out
jo
jne
sar
xor
xor
inc
data16
push
jecxz
rorl
in
pop
faddl
scas
and
cmp
and
mov
xor
dec
stc
xor
inc
pop
mov
push
mov
adc
ljmp
push
in
daa
aas
xor
cmp
xchg
lret
sub
into
and
mov
sbb
lods
sbb
scas
jns
jmp
aad
shl
mov
xchg
mov
sar
data16
cld
sub
iret
mov
cmp
stos
lds
push
mov
pop
push
mov
jp
mov
mov
int3
outsl
mov
fidivs
cs
push
in
scas
add
sub
inc
loop
fdivs
pop
imull
shlb
or
and
push
loop
adc
ret
and
mov
xchg
test
push
ds
and
pushf
pop
stos
stc
popf
jp
cltd
je
pop
lea
adc
jne
push
cmp
add
add
lods
out
in
in
sbb
jecxz
in
mov
fisttps
imul
mov
mov
jg
cs
jnp
mov
mov
outsb
in
sbb
jae
lcallw
inc
adc
xchg
in
hlt
test
scas
jle
xchg
andb
out
gs
icebp
cli
outsl
or
out
fdivp
adc
out
icebp
jae
dec
add
jns
iret
fs
fs
jbe
or
popa
stos
test
imul
push
jno
cmc
mov
and
hlt
mov
push
jne
nop
mov
jmp
pop
push
loop
int3
pop
inc
adc
stos
shl
dec
mov
fistl
out
adc
les
inc
add
xchg
and
mov
mov
push
and
push
flds
inc
stos
popa
and
or
pop
xchg
cmc
mov
mov
dec
push
das
scas
loope
ret
sbb
scas
clc
into
add
call
into
cmp
in
movsl
sub
dec
clc
xchg
sub
adc
test
mov
and
add
das
mov
orb
sbb
adc
sbb
mov
adc
and
outsl
inc
repz
cmpb
sbb
xchg
addb
popf
pop
js
and
ss
je
push
pop
stc
inc
sbb
lcall
inc
fiadds
sbb
cmp
or
lret
mov
lock
movsb
test
mov
push
pop
stc
call
stos
decb
jge
icebp
mov
mov
lret
cwtl
popf
inc
pop
in
ret
addl
shrl
cmpsl
lret
sub
mov
int
stc
loope
xor
sub
pop
inc
mov
dec
sbb
std
inc
gs
rolb
rcr
dec
lcall
shll
lret
push
jns
sbb
cmpsl
sbb
xchg
and
add
ljmp
popf
ret
xchg
shll
push
mov
or
aas
clc
les
xor
jno
pop
rorl
gs
cli
fisttpll
xchg
outsb
mov
xor
fwait
jb
aad
sub
pushf
inc
push
in
add
cs
add
ret
ror
mov
cmp
sbb
insl
jmp
mov
scas
js
rorb
ret
gs
mov
fisttps
fnstenv
cltd
and
jnp
scas
je
inc
mov
sbbb
add
push
lcall
fs
rcr
xor
pop
repnz
mov
lock
call
sarl
push
and
mov
addr16
loop
inc
xchg
sti
into
cltd
xchg
fcmovne
sub
adc
pop
pop
inc
or
dec
cld
aam
rorl
insl
rcrl
cmpsb
mov
pop
pushf
ja
sub
sbb
pop
fisttpl
sbb
dec
dec
mov
push
ss
das
popl
dec
xchg
pop
out
scas
xor
jns
imul
lahf
ret
repnz
setne
push
icebp
sbb
lcall
dec
stc
mov
or
jecxz
jg
shr
out
stc
addb
inc
or
cmpsl
inc
sbbb
fidivs
in
push
mov
data16
jns
sbb
lock
inc
rcl
lret
fcmove
dec
in
inc
enter
ja
push
mov
adc
sbb
cmp
scas
add
jle
jle
fstpl
and
mov
inc
xlat
and
hlt
mov
pop
roll
and
add
adc
mov
mov
push
jge
cmpsl
rorl
pop
jp
les
inc
shl
les
out
notl
sahf
xchg
mov
popf
lods
adcl
pop
dec
inc
lods
loope
and
loop
in
jg
ss
inc
fwait
loope
fwait
push
cltd
adc
inc
out
out
mov
sub
xchg
pop
jp
mov
clc
inc
in
rcl
push
lea
mov
test
data16
cltd
call
add
inc
in
daa
sarb
xor
insb
mov
test
not
pop
out
aad
repnz
jae
and
xor
loopne
sub
add
push
push
out
jg
fnstenv
ljmp
mov
add
dec
nop
adc
mov
inc
les
sbb
push
xchg
ds
dec
add
nop
mov
sub
mov
cs
mov
mov
ss
icebp
mov
and
ret
xor
cmp
push
cwtl
out
stc
inc
xchg
xchg
mov
ljmp
stc
sbb
mov
jae
dec
sahf
mov
hlt
jle
mov
sub
or
add
stos
xchg
pushf
scas
xchg
dec
leave
mov
dec
mov
jl
mov
std
jb
push
daa
xor
adc
idivl
in
test
leave
inc
add
inc
dec
sbb
inc
dec
sbb
divl
mov
lock
xor
xchg
inc
mov
mov
out
mov
push
cmp
mov
pop
cmc
and
mov
sub
cs
pop
dec
mov
int3
loop
in
jge
mov
fisttpll
add
dec
lock
jbe
cli
mov
jge
jmp
lret
das
or
cs
jl
rolb
sub
data16
ja
bound
leave
sti
outsl
into
dec
fcom
and
leave
sbb
leave
dec
das
jns
inc
pop
loop,pn
test
shlb
mov
inc
add
scas
push
sub
add
jnp
insb
sahf
jbe
jecxz
sbb
in
mov
lods
ucomiss
xchg
xchg
inc
or
jns
push
lds
jns,pt
std
or
sub
std
xchg
movsbl
ret
fildll
inc
sbb
aaa
inc
mov
es
lock
cmp
cmp
mov
jo
mov
pop
sti
xchg
adc
cmpsb
pop
pop
loope
out
leave
xchg
fisttpll
call
pop
std
pop
outsb
xchg
lret
inc
shlb
adc
fldenv
std
ret
enter
jnp
dec
xchg
movsb
xchg
jl
nop
sub
jo
stos
cwtl
sub
jle
xchg
jg
ret
pop
xchg
mov
lods
jp
push
data16
push
xchg
lret
andb
adc
jmp
mov
sahf
cli
ljmp
xlat
xor
cltd
adc
in
mov
or
jle
jb
sbb
and
inc
cmpb
mov
fdivrs
inc
push
fs
dec
xlat
add
mov
adc
lds
fdivrl
and
enter
and
shl
adc
call
or
xchg
sahf
stc
arpl
add
shlb
inc
adc
mov
sub
jl
rolb
sti
pop
xchg
and
std
sbb
icebp
mov
imul
rcrb
iret
dec
jge
loopne
mov
enter
xchg
or
rcll
pushf
popa
roll
loop
and
cmc
xchg
sarl
scas
xor
cmp
sub
jne
pop
and
jns
push
adc
and
xchg
out
jp
cmc
xchg
faddp
lret
sarl
rcll
outsl
xchg
fisubrl
fcmovnb
out
sbb
aas
cmp
mov
ja
add
and
jmp
cmpsb
mov
dec
or
jle
jmp
fildl
pop
adc
adc
cmpsb
mov
arpl
enter
mov
in
lret
leave
dec
arpl
lods
jo
jg
or
push
out
fcomps
mov
movsb
or
push
adcl
loop
mov
mov
enter
in
movsb
ljmp
les
and
lock
push
rcrl
icebp
pop
mov
and
ret
ja
out
cmc
pop
dec
lahf
in
daa
fwait
sahf
add
imul
test
mov
sub
jecxz
mov
loope
xchg
lahf
das
jmp
test
rorl
shrl
or
push
xor
or
cmp
mov
sbb
cmp
xchg
adc
push
rcrl
mov
movsl
inc
jp
gs
xchg
subb
in
jno
stos
aad
loope
cmp
iret
outsl
push
lret
cmpsl
and
xor
filds
mov
jae
pop
sti
inc
shl
sub
or
ljmp
loopne
outsl
ss
inc
shl
insl
jo
or
sbb
movsb
je
xchg
lods
push
push
push
int
pop
add
xor
mov
insl
int
ret
push
sub
sub
add
jnp
arpl
xchg
adc
lret
inc
adcl
pushf
xchg
pop
loop
fistl
inc
mov
iret
mov
in
rolb
jb
cltd
dec
pop
testl
cli
push
sbb
mov
or
adcl
fcmovbe
xchg
aam
adc
scas
mov
lods
cmc
stc
adc
and
aad
popa
sub
pop
pusha
sahf
adc
pop
mov
sub
lcall
testb
outsb
xchg
add
push
push
mov
pusha
cwtl
ret
cs
mov
adc
aaa
sbb
push
ss
lods
mov
or
test
jl
push
lea
pop
insb
pusha
dec
in
jne
mov
lds
pop
xchg
xor
jns
iret
xchg
mov
out
fsubr
mov
inc
outsl
xchg
les
or
jae
cmp
incl
seto
ds
xchg
out
adc
lea
jnp
adc
fistpll
lds
ret
pop
mov
out
mov
loope
call
add
and
fmuls
out
mov
adc
cmpsb
sbb
xchg
fidivl
repz
negb
add
adcl
dec
cmp
inc
in
in
ret
dec
test
jecxz
test
leave
sub
mov
shl
or
sbb
jno
or
mov
in
jecxz
or
loope
popa
sbb
xchg
fadd
adc
and
cli
jb
ucomiss
and
gs
call
cmp
cmpsb
push
pop
cmc
push
stc
lock
cmp
mov
mov
cmp
enter
xlat
xchg
inc
repz
and
pop
das
inc
pushf
lcall
adc
dec
xorl
xchg
inc
movsb
sahf
sub
mov
mov
jmp
in
push
push
jge
cmp
mov
mov
and
mov
cmp
dec
mov
pop
enter
inc
mov
xchg
or
push
in
push
cs
adc
pop
aad
and
xchg
mov
cld
cmp
leave
loopne
call
and
sbb
add
sub
xchg
xlat
xchg
pop
imul
sub
fwait
jge
loope
nop
ljmp
push
cmpsb
outsl
jae
inc
out
add
sahf
andl
test
clc
out
adc
jmp
arpl
loop
es
jmp
cld
mull
inc
dec
sbb
js
dec
rorb
cmp
xor
pop
pop
mov
pop
jp
push
xorb
stos
xchg
and
and
or
pop
lret
fcomip
sbb
data16
fldenv
fwait
out
jnp
dec
sbb
jmp
dec
mov
push
sub
xchg
dec
bnd
pop
and
inc
xor
dec
push
cmp
and
push
bound
sbb
dec
ljmp
in
icebp
jno
pop
hlt
lcall
jg
mov
mov
jae
sbb
push
fnsave
sub
sbb
ret
xchg
jae
push
dec
inc
mov
mov
xchg
pusha
mov
fldenv
mov
push
jae
mov
inc
mov
sbbb
cmc
or
loopne
sarb
inc
sbb
mov
imul
xchg
adc
sub
mov
mov
lds
xor
mov
movb
jbe
jmp
mov
mov
dec
mov
add
pop
mov
dec
adc
aam
fcomip
sub
hlt
add
jecxz
mov
sarl
sbb
push
xchg
xchg
adc
out
repnz
mov
and
hlt
or
mov
sahf
pop
jo
leave
ja
pusha
jg
out
stos
pushf
or
sarl
loope
decl
jno
addl
jmp
ss
mov
or
and
or
pop
jle
push
ja
and
repnz
pop
jp
pop
cmpsb
inc
cmp
es
imul
jae
mov
popf
pop
push
shrl
mov
int3
clc
mov
sbb
sub
out
pop
repz
add
fsin
push
jnp
mov
cmp
loope
hlt
std
cmp
xor
lret
xchg
mov
and
mov
sahf
fimuls
mov
std
fstpt
lods
dec
xchg
xor
je
hlt
test
xor
dec
push
insb
les
in
adc
rcr
jle
aas
mov
xchg
aad
jnp
push
pop
push
loop
sub
ja
ret
imul
xchg
add
mov
nop
lods
imul
dec
es
push
out
fstpt
xor
mov
mov
je
in
movsl
jno
adc
jnp
gs
lcall
mov
neg
inc
jne
or
xchg
inc
xor
movsb
outsl
push
cmp
andl
dec
sahf
mov
cwtl
hlt
sbb
pop
sbb
jle
pop
cmp
xor
call
jecxz
cli
jl
and
inc
inc
int3
js
xchg
mov
inc
push
in
gs
inc
arpl
in
sbb
inc
jp
jae
jo
cli
pushf
push
pop
lahf
ja
in
dec
pop
add
xlat
data16
outsl
sub
rcr
or
and
test
rcll
fildll
cmp
or
jg
popa
test
xchg
imull
push
dec
pop
inc
cmp
push
aad
daa
cmc
mov
add
in
xchg
sbb
in
pop
js
pusha
xchg
in
push
sbb
pop
push
repnz
xchg
mov
and
xchg
decb
mov
stc
sbb
and
xchg
push
fwait
rcrb
sbb
in
shlb
daa
rol
add
pop
xadd
or
cmp
jle
adc
add
sub
ret
cmp
adc
pop
leave
mov
leave
inc
inc
sbb
pop
clc
mov
push
call
cmp
mull
dec
pop
mov
xor
scas
mov
xchg
gs
dec
not
add
in
fnsave
js
lds
xorl
and
pop
arpl
aaa
das
sub
adc
inc
jae
mov
ljmp
mov
je
dec
mov
cmp
ja
pop
xor
mov
jns
inc
mov
sbb
mov
div
pusha
fsubp
fstps
repz
fsubs
icebp
inc
andb
jp
jo
pop
sti
xchg
jge
lret
mov
outsl
dec
sub
pop
push
pop
loope
ljmp
add
inc
sbb
push
pop
ficompl
mov
and
mov
or
adc
jne
imul
daa
push
dec
in
inc
cmp
js
ljmp
jmp
je
lds
out
aaa
loope
xchg
insl
lock
mov
call
adc
mov
test
stos
in
push
mov
and
xchg
pop
inc
and
push
testl
pop
mov
lods
pop
adc
xchg
into
jmp
inc
mov
mov
push
js
and
out
aad
sbb
pushf
out
mov
fbld
and
lret
imul
xor
adc
lods
outsb
daa
cltd
ret
xchg
push
sub
leave
lcall
jb
add
sbb
mov
rol
pop
fldcw
fmul
stc
push
jns
loopne
icebp
pop
out
sbb
push
or
inc
test
jmp
div
adc
imul
sarb
cmp
jbe
fistpl
push
into
shrl
mov
mov
adc
movsl
aaa
pop
inc
arpl
adc
rorb
fadds
jle
cld
aam
sti
lcall
lahf
dec
cmp
sti
add
adc
sbb
imul
pop
sbb
mov
and
mov
fwait
je
ret
mov
gs
cs
cmpsl
sub
movsb
daa
jno
mov
divl
in
pop
bound
mov
movsb
pop
and
and
aaa
and
pop
push
jns
cmpsb
push
jle
push
mov
mov
mov
inc
xlat
mov
pop
fwait
pop
cmp
push
les
jmp
icebp
jle
mov
jl
in
sarl
mov
lcall
scas
cmp
out
mov
push
sbb
cld
inc
sub
mov
inc
cmp
nop
sarb
adc
mov
inc
sbb
dec
subb
in
loop
xorl
xchg
ret
fsub
enter
jge
stos
cld
pop
add
icebp
mov
and
xor
je
mov
jp
push
mov
ja
push
in
cmp
insl
andb
jns
inc
test
or
fwait
sti
cmpsb
sahf
cltd
scas
sub
mov
jmp
sahf
inc
mov
movsl
je
dec
rorb
jmp
pop
jmp
out
lock
dec
or
stos
push
pop
cltd
dec
shrb
loop
in
in
mov
int3
dec
xor
aas
inc
push
insb
adc
jecxz
cmp
dec
aad
add
stos
pop
adc
mov
pop
iret
xlat
out
nop
js
repnz
mov
sbb
inc
cwtl
call
inc
stos
xchg
mov
movsb
sub
push
fnsave
and
in
loopne
scas
pop
cmp
jbe
repnz
rol
loope
test
aam
in
addr16
cli
xlat
pop
inc
inc
xor
mov
xchg
jae
dec
jno
jecxz
or
adc
inc
mov
bswap
sti
inc
dec
sub
adc
pop
mov
xchg
mov
mov
cmp
inc
sub
pop
add
cmp
sti
xlat
jo
int
sahf
loopne
and
xchg
rorl
sahf
sahf
shll
insb
push
leave
aam
xchg
movsl
scas
and
sbb
jle
cmp
int3
add
cmc
mov
in
sahf
js
out
xchg
jge
scas
addl
es
jle
rcll
sub
pop
push
push
std
shlb
pop
push
loopne
pop
mov
mov
lret
push
mov
push
outsl
out
pop
mov
mov
mov
jmp
pusha
pushl
cmp
ficoms
push
not
inc
mov
mov
mov
jmp
xchg
pop
imul
and
inc
out
adc
pop
andb
pop
mov
mov
imul
pushf
sbb
loop
jbe
pop
js
mov
sbb
pop
fistpl
bound
or
sbb
cmp
pop
and
dec
jp
std
insb
cmp
push
sahf
mov
imul
and
lea
adc
and
mov
out
sub
outsb
and
cmp
pop
lods
jl
aaa
sbb
mov
fldenv
bound
pushf
lods
push
mov
sbb
sbb
cld
push
test
js
mov
test
imul
pop
loope
cli
cmp
lods
insb
out
loope
dec
or
inc
pushf
out
outsb
and
push
shl
mov
inc
shrb
nop
jmp
fdiv
in
negb
dec
pop
pop
mov
jl
xor
sub
inc
add
shlb
aaa
fistps
mov
pop
mull
cwtl
xchg
inc
xchg
cmpsb
cwtl
icebp
jg
xorps
out
bound
mov
addb
ret
or
jo
stos
ret
fmuls
push
ja
pop
mov
data16
cmp
pop
or
xchg
jmp
cli
outsb
lods
mov
cmpsl
popa
xchg
or
cs
int3
icebp
aaa
and
xor
sbb
dec
bnd
cwtl
lcall
sub
enter
xchg
fwait
cld
pop
packsswb
pop
pop
mov
rolb
mov
jne,pn
stos
adc
jo
lds
xchg
add
push
or
popa
xchg
hlt
shl
mov
cmpl
hlt
inc
jecxz
cmp
mov
gs
or
xor
push
lcall
pop
orb
xchg
mov
fsubrs
lea
pop
jp
cmpsb
int
ficompl
orb
repz
std
pop
aad
aas
loope
fdivrp
xchg
mov
ss
pop
xlat
jg
lret
data16
push
mov
xchg
mov
pop
push
adc
push
inc
pop
sub
pop
mov
jl
mov
inc
orl
fsubrp
mov
pop
pop
aas
in
fisubrs
icebp
xor
dec
or
inc
rcll
xorb
xchg
push
loope
push
nop
loopne
mov
mov
dec
test
sbb
aam
scas
gs
xchg
xchg
and
jbe
dec
out
popf
mov
fnsave
sbb
repz
jno
pop
add
jecxz
scas
das
jno
cmc
cld
loop,pn
subb
pop
jns
js
shr
cmp
jmp
xchg
mov
jo
jns
sub
cmc
movsl
jp
lcall
mov
insb
fcmovbe
push
lret
lods
add
adc
fsubs
mov
imul
out
lds
cs
adc
dec
in
ljmp
sbb
test
cmpsl
push
cmp
pop
fwait
cmpsb
je
sub
lock
scas
or
adc
addr16
xor
fs
or
ja
imul
decb
or
sbb
cmp
rcrl
xchg
mov
mov
xchg
test
pop
adc
mov
shrb
fsts
add
popa
jb
gs
cmp
sub
and
in
and
mov
push
lret
loope
pop
dec
dec
mov
hlt
adc
testl
std
push
pop
inc
and
add
decl
and
cwtl
adc
or
pusha
lock
test
cmp
xchg
in
inc
repz
aam
aas
sub
cmc
push
xor
into
push
leave
loopne
popf
mov
inc
stc
and
scas
sbb
fsin
xor
mov
fcompl
jno
mov
rcrl
bnd
or
jle
dec
ret
rorl
pop
adc
scas
dec
int
jo
js
fs
ret
out
cmp
cwtl
pop
push
test
test
outsl
addr16
pushf
outsb
mov
xchg
outsl
add
adc
add
lret
or
lret
clc
xor
pop
repz
pop
jl
or
mov
je
adc
bound
jns
mov
or
fisubrs
adc
inc
and
insb
sub
out
sub
push
xchg
popf
and
mov
nop
dec
cli
sarb
lock
cli
repnz
arpl
sub
mov
ficompl
cmp
and
xchg
add
jnp
shrl
mov
inc
cltd
adc
pop
sub
fs
or
les
int3
sbb
popf
sub
orl
out
popf
dec
cld
fnsave
fldenv
jp
xor
sti
mov
out
fisttpl
in
inc
inc
aaa
jnp
push
test
in
addr16
rclb
fwait
push
adc
mov
lahf
arpl
adc
ljmp
push
cld
insl
mov
out
xchg
jo
cmp
cmp
push
movl
sub
adc
jo
mov
fwait
ret
int
jbe
cmp
inc
pusha
mov
aas
push
movsb
push
in
dec
mov
cmp
decl
mov
mov
inc
sbb
enter
jbe
sar
aaa
jb
inc
in
dec
dec
subl
fs
add
push
das
mov
pop
scas
js
out
inc
fdivrs
adc
iret
into
cmc
mov
negl
sub
loopne
std
pop
cmp
iret
fistpl
mov
inc
sti
lahf
dec
pop
lods
adc
lea
push
adc
mov
mov
das
push
ret
sbb
push
call
rcrl
bound
mov
pop
adc
mov
ja
xchg
mov
in
fdivs
dec
push
inc
cmc
lods
cltd
fstl
test
pop
lods
dec
push
sbb
add
mov
and
les
add
inc
or
dec
adc
mov
dec
lcall
ja
dec
cmpsl
mov
mov
and
xlat
gs
lock
mov
push
js
aaa
cmp
mov
sbb
movsb
sub
ja
mov
or
push
pop
xchg
loopne
adc
out
int3
add
push
jo
sbb
jno
addr16
shll
sub
inc
mov
test
dec
mov
stc
jnp
sub
out
xchg
and
test
daa
pushf
fs
fsubrl
jmp
mov
mov
ret
js
cltd
mov
add
shll
sbb
ret
adc
fisubrl
jecxz
pop
or
jae
jo
and
mov
adc
pop
jg
inc
pusha
dec
cli
insb
mov
iret
out
push
sub
push
ds
lret
push
mov
es
mov
adc
push
jmp
mov
sbbl
mov
add
pop
jne
xchg
jnp
cltd
lret
int3
mov
insb
ljmp
xchg
cmp
cmp
sbb
mov
adc
aad
cli
call
add
cmpsb
xchg
cltd
aaa
inc
pop
jg
mov
faddp
pop
in
jae
mov
sub
sub
aas
jge
aas
lcall
js
nop
int3
adc
mov
and
mov
jns
ret
jb
shrl
iret
push
adc
call
loopne
cmp
xchg
lret
test
or
cmp
fstpt
mov
sub
sbb
das
cmc
pop
je
lods
inc
fs
mov
pushf
and
test
pop
pop
pop
clc
push
cmc
pop
shlb
movsb
daa
mov
in
xor
mov
or
push
test
pop
add
jle
arpl
sub
cmp
push
dec
mov
push
scas
ljmp
or
js
dec
jnp
sahf
inc
sbb
ss
xchg
sbb
cmp
jecxz
jmp
cmp
xchg
pop
xlat
or
pop
sbb
and
add
cmp
or
jne
or
mov
dec
sbb
xchg
scas
push
cmp
das
xchg
insl
data16
sub
adc
fbld
dec
sbb
mov
fists
inc
popl
push
mov
outsl
pop
out
adc
jno
fs
fnstenv
das
call
shl
into
loop
out
test
mov
iret
xor
daa
jae
and
mov
xchg
mov
sub
clc
pop
les
inc
lahf
ja
testb
lret
sbb
xchg
lcall
mov
cmpsl
inc
mov
mov
stc
scas
imul
into
test
and
xchg
cwtl
mov
xor
cld
inc
and
daa
inc
pop
inc
and
and
mov
xchg
pop
sbb
in
sahf
inc
add
add
inc
adc
mov
xchg
mov
mov
insl
lea
pusha
mov
jno
jbe
out
cltd
imul
jl
out
mov
scas
fdivp
cs
enter
mov
mov
insl
bound
lock
lods
cmp
aam
nop
add
jo
inc
and
push
lods
pop
decb
pop
add
jbe
sahf
push
xor
push
in
popf
add
cmp
mov
jle
ret
stos
je
sbb
leave
add
mov
insl
ljmp
or
push
cmp
bound
xchg
cmp
xor
and
fstpl
dec
sbb
cmc
xor
adc
mov
mov
ja
xchg
rol
movsb
lahf
add
mov
addr16
data16
or
mov
fs
inc
fsts
jne
test
cmp
rolb
leave
data16
or
pop
pop
shlb
mov
std
in
clc
ljmp
xor
mov
sbb
ljmp
in
stos
loop
pop
pop
add
dec
lds
es
movsb
mov
or
xor
cli
cmp
push
adc
pop
add
mov
pop
mov
mov
outsb
cltd
push
loop
outsl
addr16
push
pop
out
add
mov
sbb
mov
repz
lds
xchg
push
jnp
out
sub
inc
add
fdivrs
loopne
out
inc
sub
lret
mov
mov
in
add
pop
xchg
or
pop
xor
aad
xor
fldcw
aad
fstpl
push
sbb
cli
or
rcl
test
adc
shrb
movsl
sub
pop
leave
adc
inc
jo
xchg
aam
adc
jbe
jmp
xchg
in
sti
cld
sub
cmp
fdivrl
loop
mov
jmp
pop
mov
and
mov
mov
inc
mov
sbb
aad
xor
cmp
lods
mov
pop
fstps
mov
xor
mov
out
pop
pop
sbb
ret
fmuls
int
push
push
not
lcall
scas
repnz
adc
and
push
and
mov
or
cmp
in
pushfw
outsl
push
daa
cld
dec
lods
push
dec
adc
pop
and
sbb
mov
gs
xor
mov
loopne
dec
inc
mov
data16
xchg
insb
in
sbb
mov
enter
mov
fucomp
mov
mov
or
out
adc
out
pop
lock
or
sbb
jmp
push
xchg
out
cmp
xor
adc
push
pop
movsb
mov
add
sti
mov
jno
out
loopne
add
adc
cltd
dec
fwait
repnz
or
fxch
mov
push
xorl
inc
cmp
aas
pusha
icebp
pop
imul
sub
je
jns
lock
adc
clc
adcb
js
loopne
push
lret
pop
push
and
dec
es
fwait
mov
xor
adc
jmp
stc
mov
and
arpl
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
jmp
or
fcoml
popf
xchg
sub
fcoml
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
xor
mov
aas
jns
int
test
fsubrp
push
jp
hlt
dec
in
pop
jb
pop
scas
repz
pop
dec
outsl
repz
mov
cld
loopne
push
push
addr16
mov
das
push
mov
inc
adc
add
fcoml
faddp
pop
and
scas
rcr
lods
and
clc
xor
jne
popf
aaa
test
push
xor
xchg
dec
cmp
adc
mov
cwtl
insb
mov
and
scas
rcr
lods
and
lods
xchg
fmuls
xor
add
jge
pushf
xchg
addr16
or
dec
cwtl
je
dec
data16
pop
and
fcoml
fdivrs
int
add
jo
push
popf
aas
int
add
fstp
xchg
daa
xor
add
aas
and
add
sbb
push
mov
cmp
cs
popf
jle
sub
fcoml
pushf
aas
int
add
cmp
xchg
es
cs
popf
aas
popf
add
cmp
xchg
daa
fldt
push
lahf
aas
int
add
sub
cs
popf
das
int
adc
cmp
ds
popf
aas
int
add
cmp
pop
add
bswap
xlat
xchg
imul
sub
fcoml
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
mov
test
je
cmp
cs
lea
int
aam
cmp
jle
fimuls
cmp
cs
jge
mov
fcoml
popf
iret
sub
push
cmp
cs
popf
aas
int
add
cmp
push
push
popf
sub
fcoml
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
cs
popf
aas
int
add
cmp
and
and
rolb
sbb
sbb
sbb
dec
hlt
push
mov
fildl
test
aaa
scas
jo
cmp
sbb
inc
cmpsl
scas
add
ds
xor
mov
jae
lret
mov
push
and
imul
dec
in
pushf
imul
mov
mov
imul
sub
lods
pop
mov
mov
data16
add
lea
cs
pop
xchg
xor
ret
and
inc
lret
test
sbb
sbb
jbe
mov
cs
stos
outsb
ss
sbb
mov
mov
adc
gs
inc
cld
sub
repz
adc
loop
sub
daa
imul
mov
push
xor
mov
mov
mov
sub
cmp
and
iret
cmpsb
jg
cs
loope
pop
add
mov
pop
mov
lcall
dec
std
cli
pop
orl
mov
scas
mov
aas
sbb
imul
lret
mov
jne
in
ljmp
insb
cmp
or
sbb
lret
fimuls
push
sti
aam
add
movsb
ret
add
cmpsl
push
add
js
movsl
and
push
cmp
pop
mov
addb
sti
arpl
dec
insb
out
jle
sbb
scas
add
sti
or
adc
jno
scas
cmpl
dec
scas
push
pusha
cmp
ss
sarb
in
lahf
push
lods
add
xchg
lock
jge
lret
inc
loopne
lods
xor
cmp
inc
int
imul
in
cmp
xchg
orb
and
mov
xlat
xchg
push
fcoms
sub
mov
xchg
andl
jecxz
mov
sti
jnp
mov
sbb
les
sbb
inc
lock
mov
cmp
lock
pusha
dec
add
cmp
jae
xor
orl
dec
xor
pop
sbb
lcall
sahf
mov
push
add
rolb
dec
notl
and
sub
xor
adc
cmp
mov
cli
loop
mov
push
or
les
ret
jno
xchg
fildl
xlat
sub
popf
push
ret
mov
or
pop
xchg
lods
dec
mov
jne
xchg
es
popf
adcb
daa
push
nop
das
jle
and
lret
mov
pop
imul
mov
in
bound
xchg
pop
mov
push
inc
pop
sbb
cli
in
test
lret
repnz
ret
out
in
test
jnp
adcb
dec
adc
dec
aaa
pop
js
xor
add
mov
inc
sub
or
mov
fucomip
test
adc
leave
pop
add
jno
cmp
ja
push
cmc
inc
and
ret
jecxz
dec
mov
bound
fistps
sar
shrb
bound
add
inc
mov
popa
xchg
xor
out
aam
nop
int
je
in
mov
and
jbe
ja
movb
sub
mov
jbe
in
push
cmp
mov
cmp
dec
mov
cmp
scas
or
and
mov
dec
lahf
adc
dec
in
pushf
dec
cmp
in
aas
jge
fdivrp
mov
gs
lret
dec
test
jbe
icebp
sub
out
or
adc
cmp
fcmovu
negb
adc
repz
adcl
jbe
stos
cwtl
push
fdiv
daa
add
push
in
inc
adc
icebp
push
cmpsl
data16
jmp
aam
sti
dec
push
testb
xor
sbb
mov
out
out
sbb
data16
cmpsl
cmpsb
mov
xor
or
xchg
adc
cmp
and
lea
sbb
roll
sbb
jl
add
sbb
xor
movsb
scas
add
arpl
xor
pop
scas
iret
into
dec
adc
lods
cmc
dec
xchg
cmp
mov
jle
shl
jo
jmp
sbb
std
test
or
popf
js
repnz
jle
inc
cwtl
mov
pushf
xor
push
call
jns
lock
adc
out
mov
adc
inc
and
ficompl
out
jge
stos
dec
sbb
ds
inc
adc
cmp
sahf
push
lds
arpl
lea
pop
in
dec
mov
cmp
jmp
jg
sbbb
imul
adc
insb
dec
dec
adc
adc
cmp
ljmp
adc
sub
mov
and
in
imul
and
and
push
lret
call
stc
push
mov
cltd
cmp
lods
leave
jo
mov
xlat
aam
repz
rcrb
xor
dec
cmp
imul
idivb
adc
repz
xchg
cmc
std
xor
leave
add
xchg
loope
sbb
dec
mov
sbbb
outsl
jnp
rcll
mov
cld
push
inc
inc
jmp
call
aad
jge
ds
cmp
stos
mov
push
mov
loope
shrb
iret
js
and
les
mov
dec
nop
cmc
inc
fisubs
mov
aad
sbb
imul
rolb
iret
xchg
cmpsb
push
mov
cltd
insb
pop
lcall
inc
xchg
fsub
mov
sbb
fsubs
outsl
or
jle
fwait
xlat
mov
movsb
aad
jns
out
shlb
jge
sbb
jl
lahf
ljmp
adc
rcrb
shll
les
leave
loopne
sbb
and
loop
ds
loope
lret
outsb
pop
pop
mov
sarl
xchg
jge
dec
dec
inc
lcall
pop
rcr
xchg
mov
in
mov
mov
push
pop
dec
inc
leave
push
loop
sub
aad
daa
dec
xchg
rclb
and
insl
mov
mov
add
jb
sarb
jbe
fcoms
ficoms
or
jecxz
andb
orl
cmpsl
adc
int3
int
sar
dec
xchg
les
mov
pushf
cmpsb
sbb
xchg
cmpsl
popa
je
pop
xchg
scas
out
mov
pop
and
or
sub
xchg
insl
cli
mov
out
mov
ss
lods
sub
sbb
in
push
ds
dec
shlb
add
lods
xchg
mov
or
ds
mov
xor
and
mov
xchg
aad
test
mov
xor
xor
and
jp
xchg
stos
loope
cltd
xor
pop
gs
add
mov
mov
les
fidivrl
xchg
mov
insb
cld
dec
mov
ss
dec
imulb
test
jbe
ds
sbb
mov
mov
adc
sbb
or
insb
test
adc
lds
out
pop
dec
xchg
movb
lahf
in
push
fwait
and
and
xorb
call
or
shlb
cli
mov
lahf
int3
push
dec
dec
xor
push
out
in
aad
mov
shrl
jo
ret
ret
add
xor
push
sub
daa
dec
push
movsl
jne
aas
inc
inc
mov
and
adc
mov
xchg
js
mov
jmp
scas
enter
add
sbb
cli
mov
aad
or
inc
int3
pop
cmc
or
enter
push
mov
adc
adc
pop
mov
lods
ret
cmp
fidivrs
fnstcw
inc
xor
sub
jge
aas
cwtl
addb
out
inc
mov
push
je
das
icebp
repz
lods
outsb
push
sub
jb
and
cmp
cld
test
add
dec
repnz
test
mov
sub
and
sub
shr
test
ret
mov
add
xchg
jg
addr16
push
push
inc
dec
fdivrl
cmpsl
ror
test
out
fadds
pop
cmp
dec
and
sbbl
clc
test
jne
inc
in
and
loop
lcall
ror
mov
sub
cmp
repz
jmp
cmp
mov
xor
add
adc
or
xchg
ljmp
ja
mov
jl
xor
adc
or
int
add
gs
mov
mov
mov
out
test
jmp
dec
gs
das
cwtl
scas
pop
mov
movb
les
gs
add
add
in
lods
int3
pop
xor
and
test
int
pop
stos
push
jb
call
cli
xchg
cmpsb
call
cltd
cld
and
inc
stc
icebp
sbbb
cmpsb
inc
cmpb
lahf
mov
mov
or
mov
mov
js
or
xchg
insb
ret
adc
pop
pop
fnstcw
xchg
pop
das
cmpsl
sbb
ljmp
imul
sub
aaa
into
pop
and
xchg
lret
out
add
icebp
or
icebp
or
rcrl
roll
sub
add
push
pop
je
xchg
mov
lock
rcrl
stos
jmp
pop
cmc
inc
add
xor
lcall
push
lahf
pop
es
cmpsb
dec
mov
ja
cwtl
jns
xor
imul
cld
mov
scas
inc
aam
add
rol
sbb
rorb
decb
pop
rep
mov
loope
subb
enter
movsl
mov
xlat
lret
leave
and
stos
mov
mov
push
sub
hlt
dec
mov
insl
xchg
mov
mov
sbbl
lret
aad
cmpsb
mov
mov
mov
xchg
cmpsl
mov
fmul
jge
pusha
imul
mov
aam
sub
outsb
insb
mov
cmp
repz
mov
add
shr
add
rcll
test
push
xor
out
arpl
jmp
pop
adc
push
rcr
mov
out
outsb
repz
aaa
push
inc
jbe
jecxz
inc
inc
push
roll
push
lcall
scas
js
cmp
icebp
dec
psubq
mov
push
dec
dec
pushf
mov
in
push
xor
repz
sub
pushf
arpl
xchg
lods
push
insl
dec
out
push
xchg
gs
aad
jb
enter
pop
xchg
inc
sub
sti
dec
sub
pop
push
cwtl
cmp
pushf
jns
scas
enter
rcll
sbb
adc
sarb
jl
cmp
mov
ljmp
mov
pop
xchg
into
fsubrl
pop
mov
sub
ljmp
lea
ds
movsb
xchg
adc
popa
pop
cmpsl
dec
jb,pt
aas
shl
imul
aaa
pop
cli
pop
int
inc
jle
fstpt
cmp
insb
outsl
rcrb
or
push
shrl
xchg
dec
push
shlb
push
xchg
mov
and
mov
cli
stos
pusha
std
mov
xchg
pop
movsb
insl
lret
push
push
mov
mov
js
lds
call
ret
stc
mov
or
repz
sub
xlat
and
xchg
add
lock
icebp
jne
mov
sbb
inc
inc
jne
add
out
pop
loopne,pt
fdivp
leave
and
push
xchg
and
into
aaa
sub
popa
rcrb
cmpsb
jb
inc
push
inc
xor
fsubs
xlat
and
daa
jl
cmp
push
hlt
add
inc
inc
cwtl
add
call
pusha
jno
add
dec
xchg
mov
repnz
dec
sbb
je
mov
les
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
