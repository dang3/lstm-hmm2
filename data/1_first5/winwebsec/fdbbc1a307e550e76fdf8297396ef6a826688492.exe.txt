cli
sbb
xchg
rclb
ss
or
in
and
jne
loopne
loopnew
or
mov
shlb
inc
out
hlt
mov
mov
cmpsl
cld
negl
xchg
inc
test
inc
ja
mov
adc
lods
jle
and
addr16
push
in
jno
push
cld
repnz
insl
popa
addr16
and
pop
adcb
fbstp
mov
out
sbb
fwait
ljmp
inc
or
mov
cmc
pop
mov
movsl
stos
pop
iret
outsl
sahf
test
sti
int3
fsts
nop
jmp
xor
jl
or
xchg
test
inc
aas
lods
push
jle
adc
cmp
cmp
fwait
inc
mov
cmp
push
push
iret
data16
lods
lods
ret
and
rolb
cmp
xchg
mov
in
das
sahf
lahf
xlat
ljmp
subb
test
into
adc
in
sub
les
lock
pop
push
xchg
pop
push
incb
push
xchg
xchg
and
icebp
cltd
pop
inc
mov
test
push
fnstcw
adc
cwtl
pop
mov
cli
inc
or
add
xchg
out
ljmp
jne
pop
inc
or
adc
scas
les
dec
xchg
xchg
repnz
packuswb
jle
fwait
shlb
add
push
pop
add
push
jl
clc
push
dec
lcall
mov
jle
jg
sbb
cld
xchg
mov
jbe
sar
push
mov
ds
jnp
mov
or
mov
popa
clc
dec
cmpsb
loope
imul
push
leave
in
imulb
std
and
xor
or
iret
or
xor
popa
add
out
xor
jne
pop
sbb
pop
and
int
jbe
adc
mov
pusha
into
and
mov
jle
adc
cmp
lret
adc
lock
sub
mov
loopne
cmp
mov
xchg
cmp
xor
pushf
lock
stos
push
pop
adcl
mov
sub
or
mov
sub
add
stos
mov
mov
shr
shrb
int3
dec
xchg
ja
mov
mov
cmpl
jge
xchg
cmp
xor
xor
xchg
cltd
pop
xchg
shlb
int
loop
mov
cmp
jle
jne
or
mov
dec
fdivs
cmp
movsb
add
add
mov
iret
jp
xor
int3
imul
jmp
mull
inc
cmc
int3
icebp
sub
xor
add
and
decb
mov
shll
pushl
xchg
lods
loop
mov
shlb
mov
and
xchg
loope
mov
cmc
sbb
cwtl
push
cmpsl
int
mov
sbb
or
clc
test
ret
or
lds
jno
jp
std
jge
aam
jecxz
add
inc
js
dec
sub
mov
adc
and
push
mov
sub
aas
and
lcall
pop
adc
fldt
push
mov
pop
mov
fidivrs
leave
fisubs
mov
outsb
adc
stc
hlt
popf
jo
xchg
mov
jmp
scas
int3
sahf
loopne
mov
pop
dec
sti
xchg
push
mov
mov
xchg
or
shrl
lret
ljmp
or
fwait
inc
loop
jmp
mov
popf
sbbb
lcall
loop
daa
repnz
loope
xor
cmp
stc
incb
sub
cmp
testb
cmp
sahf
les
mov
push
push
in
aaa
jle
cmp
xlat
sbb
and
std
dec
xchg
xor
ror
mov
add
rclw
out
ror
push
loopne
sbb
es
xor
add
adc
mov
xchg
mov
pop
jo
xor
mov
clc
pop
addr16
jo
or
pushf
cwtl
jecxz
mov
flds
aas
popa
es
cmp
jns
loopne
dec
or
ret
xor
jg
dec
sbb
imul
jp
inc
mov
dec
inc
cmp
pop
jne
dec
test
pop
sub
sahf
cld
pop
xor
xchg
adc
lods
xor
mov
xor
cmpsl
pop
je
in
jl
lcall
lret
mov
rcrb
repz
and
mov
adc
imul
push
or
test
in
mov
ss
lret
mov
cld
stos
add
inc
fisttpl
addl
leave
lret
aad
add
mov
lret
inc
fisubs
test
adc
scas
xchg
out
repnz
outsb
mov
mov
mov
nop
mov
fcomps
clc
movsl
imul
inc
add
mov
dec
in
mov
jae
and
cmp
popa
mov
jns
out
mov
lea
loop
icebp
jmp
mov
dec
js
and
inc
shlb
aad
loope
adcb
les
mov
andl
jle
ja
out
cli
lods
mov
lcall
aas
loopne
aad
mov
mov
dec
cmp
js
add
incb
mov
mov
mov
pop
inc
out
stos
and
jge
add
insl
outsl
and
popa
data16
dec
les
outsb
imul
xchg
mov
mov
inc
enter
and
leave
repnz
dec
xor
cs
les
mov
insl
aaa
loopne
lock
insb
mov
mov
out
dec
or
push
inc
sub
sub
jmp
rolb
xchg
pop
test
xchg
movsl
fstl
xor
fildll
mov
mov
mov
repnz
push
jns
in
pop
cltd
and
sub
lods
jecxz
repz
call
pop
testl
ds
pop
adc
mov
std
test
test
shll
jo
jge
mov
adc
repz
imul
dec
shl
sbb
call
xor
adc
clc
mov
popf
stos
je
jle
sbb
and
jae
mov
pop
repz
dec
es
xlat
mov
out
jle
mov
add
sti
cli
jae
movsb
xchg
test
push
aas
sbb
pop
or
mov
cmp
push
loop
mov
xchg
mov
pusha
pop
xchg
mov
ljmp
out
sbb
test
daa
dec
xor
add
lahf
repz
add
mov
xchg
pop
jmp
lds
aaa
inc
std
dec
inc
mov
loop
adc
lds
mov
sbb
scas
cli
sbb
sbb
pop
jns
pop
cmpsb
and
fstps
rclb
mov
jl
push
popf
fdivrl
xchg
rep
lods
add
cmp
call
jge
js
mov
dec
adc
ljmp
outsl
or
mov
loope,pt
ss
mov
mov
adc
call
xlat
in
ja
icebp
push
dec
insl
fildll
or
shlb
inc
dec
fstps
or
mov
xchg
mov
lahf
sbb
or
or
aaa
dec
dec
in
sbb
sbb
sbb
xchg
lods
push
nop
mov
push
lds
mov
xorb
inc
lds
and
aas
out
pop
add
jo
push
and
sbb
push
cmp
scas
or
pop
rolb
addr16
pusha
rolb
movsl
mov
sbb
xchg
xor
push
jns
idivl
mov
jge
push
repnz
dec
push
mov
add
push
incl
pop
dec
mov
lret
mov
fwait
loope
add
mov
mov
mov
roll
mov
cmp
mov
pop
fldl
cmp
xlat
rclb
cld
pop
mov
adc
inc
or
push
cli
addr16
xchg
mov
pop
cmp
mov
or
sub
inc
test
jecxz
out
add
dec
cmp
divl
push
or
push
insl
pop
pusha
jmp
sub
and
pusha
jb
ret
jne
jns
cld
mov
pop
out
xor
xor
dec
sub
in
ds
add
pop
dec
ja
aaa
int
pusha
sbb
cmp
cld
cmp
dec
aam
fbstp
in
push
lods
aad
inc
lods
push
jns
shrl
mov
pushf
push
roll
leave
mov
push
pop
aad
loop
jg
rclb
cli
cmpsl
imul
inc
int
adc
or
lods
leave
enter
cmc
ss
sbb
inc
lea
fs
sub
lock
push
gs
pusha
pop
rorl
xor
mov
loopne
pop
inc
fistps
lea
std
mov
xor
shl
or
xchg
in
adc
mov
sub
inc
dec
sbb
mov
repnz
and
mov
arpl
cld
mov
pop
xor
sub
mov
add
xchg
add
mov
in
andb
je
or
dec
scas
mov
es
imul
into
inc
in
mov
jle
pop
je
adc
lcall
sbb
movsl
mov
jae
mov
push
scas
add
data16
cs
pusha
sbb
mov
add
aaa
pop
fwait
ret
xor
and
push
and
mov
mov
sbb
xor
sub
inc
mov
push
jge
in
shll
dec
dec
xchg
or
outsb
inc
outsl
push
mov
aam
sbb
lret
jbe
test
mov
push
test
enter
jl
lods
mov
inc
bound
adc
jmp
push
shlb
ret
in
sub
inc
mov
fistl
or
aam
in
sbb
ja
sub
cs
inc
jne
test
ret
xchg
and
fcmovnb
push
fisubs
cmpb
dec
pop
sbb
sub
xchg
stos
cli
xchg
repz
xchg
fadd
shl
xchg
inc
fstl
jae
mov
jb
call
loop
stos
xchg
or
jno
adc
gs
add
test
ret
adc
call
mov
or
push
xor
lret
mov
mov
push
fiadds
lea
mov
jb
mov
xchg
arpl
aad
cmp
cs
ret
add
and
fwait
or
inc
movsl
or
mov
les
inc
add
inc
dec
cmp
sbb
gs
mov
inc
rorl
mov
and
movsb
dec
fiaddl
push
add
mov
push
in
pop
inc
pop
pop
rol
sbbb
and
mov
das
inc
xchg
mov
or
sub
or
popf
and
mov
push
scas
push
pop
mov
shrl
jle
stc
jae
bound
sahf
pop
mov
and
popl
xchg
or
out
fsub
or
inc
xchg
jle
cmp
int3
push
icebp
xchg
mov
test
fsubl
xchg
jl
sahf
inc
xor
mov
aaa
mov
stos
in
clc
imull
clc
int
cmp
xchg
mov
mov
sub
je
in
ficomps
mov
adc
iret
shlb
cmp
jecxz
cmp
add
mov
mov
xchg
repz
xchg
push
fucompp
in
cmpl
sub
out
enter
push
xchg
and
and
and
lret
dec
push
pushf
aam
in
sub
std
xchg
inc
mov
loope
xchg
das
push
adc
subb
nop
or
push
movsl
shrl
pushf
cli
lret
cmc
popf
or
sar
adc
inc
je
xchg
loope
pop
jmp
loopw
inc
jmp
addr16
out
inc
fcoml
add
sub
adc
jns
pop
fcmovnb
out
lahf
je
sbb
fimull
push
test
mov
pop
mov
imul
gs
pop
int
or
mov
cmp
xchg
jg
in
lahf
pop
popa
repnz
dec
push
mov
jnp
mov
xchg
cmp
xor
cmc
xlat
push
cmc
sub
bound
andb
jge
movsb
or
xor
xchg
sub
or
inc
or
out
sbb
push
jg
jbe
mov
loope
sbb
push
dec
add
or
test
or
or
inc
popa
push
and
test
mov
or
mov
aad
fwait
sbb
lods
jecxz
adc
loopne
es
add
pusha
sbb
movsl
inc
jg
arpl
imul
sbb
xchg
lods
jmp
mov
and
lret
cwtl
mov
xor
sti
add
in
lock
dec
add
lcall
cmpsl
sbb
repz
into
cltd
pushl
outsb
xchg
pop
icebp
jbe
aam
cmc
dec
and
xchg
xchg
jae
cmp
cmpsb
es
xor
mov
arpl
inc
mov
cli
lcall
pop
pop
xchg
movsb
movb
in
sbb
cmpsl
fstl
add
mov
testl
push
lret
xor
stc
or
xor
sbb
or
loopne
cs
xor
pop
lods
xchg
inc
mov
lea
movsb
push
mov
push
mov
into
ljmp
mov
gs
jg
xchg
fiadds
pusha
aam
fs
and
and
mov
xor
in
mov
dec
jne
mov
repz
sarl
inc
mov
dec
sti
xchg
dec
lds
push
aam
dec
pop
xlat
and
jp
or
or
jne
lds
mov
jecxz
xchg
xacquire
mov
repnz
hlt
out
xor
cmp
faddl
into
out
loop
lcall
push
mov
sub
mov
into
insl
imul
cmc
stos
pop
fbld
in
cmp
sbbb
cmc
in
xor
shll
xor
pop
es
dec
mov
push
adc
dec
cmp
addb
ret
mov
repz
mov
lods
or
adc
lods
push
es
push
mov
jbe
pusha
loope
cmp
mov
jecxz
mov
je
fsts
cmp
mov
push
mov
test
jbe
jnp
mov
adc
dec
pop
sub
out
scas
push
xlat
dec
in
dec
cmp
inc
cli
imul
xchg
xchg
adc
lahf
in
leave
mov
cmpsb
stos
push
adc
xchg
or
or
add
lcall
push
push
adc
pop
pop
ret
jmp
sub
ljmp
fwait
xchg
les
rcr
sbb
jbe
lock
and
jno
mov
adcl
inc
adc
or
out
ja
repnz
mov
pop
into
inc
mov
mov
sub
jo
je
clc
imul
sbb
mov
inc
sar
dec
or
pop
lods
mov
xchg
push
roll
xlat
mov
adc
lret
decb
shll
dec
dec
xor
outsb
mov
lret
push
out
cltd
cmc
push
test
dec
dec
ljmp
int
icebp
pop
test
mov
or
pusha
ja
pop
pop
daa
pop
mov
push
gs
hlt
cmpsb
lods
add
inc
iret
test
xchg
mov
cmp
loopne
or
adc
shrl
clc
test
push
or
pop
xchg
lcall
inc
dec
test
subl
scas
loopne
addb
adc
mov
pop
cli
push
add
iret
subl
jo
mov
hlt
ds
arpl
push
sbb
jg
dec
xor
adc
adcb
loopne
xchg
fwait
sub
mov
stos
jbe
mov
mov
mov
les
and
add
sub
mov
mov
ds
dec
test
sub
sub
pop
xor
popf
lret
incl
mov
xrelease
xor
repz
mov
pop
mov
mov
mov
cltd
arpl
sbb
addr16
fisubrs
lods
jno
test
rclb
sbb
out
push
mov
adc
fwait
xchg
xchg
popa
aas
fistl
fists
lret
push
aas
lock
and
mov
mov
mov
in
mov
test
xor
push
xchg
sbb
ja
dec
fucomip
mov
xlat
int
in
pop
dec
scas
les
sub
les
mov
xor
mov
aaa
insl
mov
movsl
push
sub
push
add
enter
adc
lret
js
mov
and
cli
push
fs
mov
or
scas
dec
int
jecxz
nop
adc
sbbl
sbbl
mov
xchg
inc
jne
mov
popf
push
ss
mov
sti
pop
rorl
push
aad
cmc
ja
mov
sub
dec
push
mov
shlb
pop
jl
mov
push
lret
xor
xchg
jge
jmp
jle
add
adc
js
fwait
mov
aaa
fimull
sbb
push
xor
adc
mov
ja
add
and
jns
lea
mov
test
jge
cld
xor
adc
and
ja
cwtl
adcl
js
cmp
sub
arpl
xchg
push
ror
mov
and
jp
jmp
mov
scas
mov
mov
inc
testb
and
out
adc
or
jecxz
in
xor
sar
push
repz
add
out
lret
push
outsl
jl
mov
imul
xor
cwtl
mov
ret
iret
stos
add
sti
dec
xchg
mov
cmp
rol
pop
mov
sbb
sub
bound
or
iret
jo
sbb
in
dec
add
xchg
cmp
mov
das
cwtl
stc
push
je
fucomi
ror
aam
mov
lods
mov
mov
push
mov
loop
pop
imul
xor
add
jecxz
test
lcall
je
andb
jne
nop
pop
adc
cmp
pop
das
popa
out
xor
insb
or
lods
or
add
test
sbb
mov
es
push
inc
inc
mov
pop
cmpsb
lds
adc
fldcw
outsl
jo
jb
add
xchg
pop
daa
int3
adc
iret
sbb
inc
inc
outsb
lret
push
sbb
adc
sbb
dec
mov
adc
imul
repnz
inc
aaa
push
dec
in
sbb
inc
repz
pusha
int
test
and
mov
push
jl
and
push
arpl
add
jecxz
push
test
xchg
mov
mov
test
pop
mov
sub
loopne
add
xchg
cmp
push
leave
fidivrs
jmp
pop
or
mov
sbb
or
ret
test
sbb
mov
adc
and
mov
rorl
cmp
add
jae
hlt
outsb
lods
jnp
fists
lea
xor
mov
fnsave
mov
sub
js
aas
add
ret
xor
inc
mov
fbstp
ds
aaa
ljmp
out
xchg
add
add
dec
jmp
mov
loope
dec
aad
out
into
push
test
or
mov
fs
mov
sub
and
cs
xor
loopne
movb
lret
aaa
jp
outsl
call
mov
jnp
bnd
in
inc
adc
bound
sbb
sbb
push
bound
add
mov
jle
and
sub
adc
add
push
cmp
cmp
stos
out
jnp
mov
sbb
aaa
inc
push
in
add
outsb
scas
cmpsb
pop
fdivs
lret
sbb
inc
pop
sub
push
jl
or
pusha
cmp
rep
cmp
sahf
dec
divl
scas
xchg
fnsave
mov
xor
dec
push
movsl
mov
lcall
cmp
lret
out
cmp
outsb
mov
sub
sarl
bound
adc
inc
insb
cmp
xchg
and
inc
jbe
or
popf
test
xchg
addr16
sub
dec
pop
push
cmpsb
mov
loopne
mov
js
sahf
aaa
xchg
repz
and
push
push
push
imulb
xor
test
jle
dec
cli
mov
jle
mov
imul
sub
sbb
sbb
arpl
arpl
jo
and
xor
mov
mov
xor
icebp
mov
std
adc
lret
or
out
rcr
dec
lock
jnp
sub
mov
pop
in
xchg
adc
inc
xchg
ror
bound
mov
mov
cmp
jns
sub
imul
and
cltd
out
push
pusha
or
call
xchg
cs
xor
cmc
jno
leave
shrl
add
jl
push
sub
mov
mov
xchg
push
ljmp
cmp
xchg
sub
xor
pop
mov
ds
sbb
jecxz
push
stos
xor
fs
divb
push
dec
cmp
cmp
repnz
or
pop
push
fs
fwait
dec
jmp
mov
jg
cmp
vpavgw
js
lea
arpl
jl
popf
and
sbb
push
ja
hlt
cmp
cmp
push
xor
out
rcll
or
xor
scas
mov
es
mov
mov
mov
mov
cmp
push
jno
test
je
or
xchg
and
ret
push
es
jecxz
inc
or
xchg
xchg
cmp
enter
mov
cmp
jl
stos
and
lret
cmp
hlt
in
xlat
movsl
push
or
mov
adcl
test
jg
pop
in
leave
ficoms
jmp
inc
adcl
ss
jecxz
pusha
sbb
mov
gs
out
cmpsl
fldt
stos
shll
push
in
jg
xor
push
sub
fildl
scas
cli
xor
call
shlb
jns
loopne
rcrl
jg
push
dec
aaa
aas
jbe
or
cmp
mov
lcall
inc
loop
pop
int3
sbb
sbb
inc
shrl
mov
insl
adc
test
add
repnz
stos
mov
insl
mov
fnstenv
pop
mov
xchg
fwait
or
inc
ret
inc
xchg
pushf
pop
jns
enter
sbb
lea
repz
imul
xchg
flds
sbb
ficompl
dec
outsl
data16
insb
sti
push
mov
dec
inc
aam
fstps
mov
std
lea
mov
leave
adc
jb
fmuls
ja
ret
mov
and
repz
jne
sbb
bound
fiaddl
stc
pop
sub
sbb
jno
ljmp
and
rolb
rolb
or
inc
push
push
xchg
add
fiadds
xor
push
pushf
pop
mov
adc
and
jno
and
out
sbb
loopne
adc
fisubrl
insl
dec
lock
mov
sbb
xchg
lahf
xchg
das
cld
hlt
push
pop
mov
mov
inc
dec
jno
jo
movsl
sarl
mov
insl
andl
imul
out
clc
arpl
std
sub
cmp
xchg
in
inc
push
cmp
movsl
jle
jnp
fisttpll
neg
mov
fwait
sarl
inc
push
add
mov
ss
jb
fisubrl
lahf
sub
jle
addr16
and
pusha
les
and
daa
ret
sub
xchg
jo
mov
push
loopne
popf
pop
fsub
dec
outsb
adc
jb
inc
loop
outsl
imul
lods
insb
stos
std
mov
push
or
pop
xor
and
clc
lock
jp
test
fwait
int3
push
into
or
push
dec
stos
fidivl
dec
inc
dec
xor
ss
cltd
xor
test
dec
mov
add
inc
or
cli
popl
sub
int3
xor
inc
iret
adc
movsl
jp,pt
mov
inc
adc
adc
cmpsb
stos
dec
pop
pop
das
movsl
das
ds
test
ret
mov
inc
loopne
dec
cld
pop
xor
rclb
addl
adc
pushf
gs
jbe
mov
bnd
mov
les
push
es
dec
out
or
sbb
int
mov
sbb
push
rorb
or
stos
pop
adc
das
out
mov
mov
mov
mov
adc
sbb
inc
cmp
jns
mov
sbb
aam
testl
xor
and
sub
je
aad
pop
std
or
sbb
in
and
in
mov
sahf
fnstsw
fimull
add
shll
ret
faddl
xchg
fwait
leave
cmp
data16
mov
jnp
mov
iret
jnp
xchg
add
pop
aam
int
je
repnz
orl
cli
mov
inc
jne
and
mov
jmp
leave
ss
imul
loopne
mov
sbb
mov
mov
xchg
jge
cmpsb
fidivrs
dec
scas
lds
xchg
imul
out
xchg
fs
jns
push
fistpl
pop
pusha
aad
lret
gs
paddsw
jle
outsb
jbe
xor
push
xor
int
hlt
or
mov
pop
rolb
inc
mov
mov
mov
or
sbb
push
push
pusha
fsts
out
sub
sub
adc
mov
or
add
loop
or
filds
push
pop
push
dec
fwait
inc
insb
mov
sub
cld
std
pop
mov
cmp
push
test
mov
push
jmp
pop
pusha
push
xchg
shrl
cmp
cmp
push
inc
cmp
js
sub
inc
mov
sbb
add
std
mov
daa
das
cwtl
lds
fiaddl
xorl
sbb
pop
cltd
cmpl
jbe
test
repz
pop
data16
mov
aas
mov
cmp
adc
repz
mov
daa
les
xor
int3
mov
inc
xchg
inc
xor
fidivrl
out
sub
cmp
ret
leave
enter
cld
movsb
int3
cli
mov
pop
dec
je
jg
int3
lock
mov
divb
pushf
stc
into
mov
mov
enter
jmp
cmp
sti
cmp
mov
sbb
add
mov
cmpsb
mov
sub
mov
push
gs
pushf
mov
in
pop
fsubs
pop
mov
push
fbstp
and
xchg
lock
mov
mov
pop
cmp
imul
push
mov
and
ret
out
insl
pop
push
pop
stc
xchg
loop
scas
movsl
mov
fwait
pop
jbe
mov
inc
jbe
mov
jbe
mov
xor
jb
ljmp
sbb
dec
and
lods
iret
sub
inc
fsub
fs
rcl
mov
and
xor
pop
add
mov
dec
filds
lret
jp
lds
jae
fdiv
sbb
sbb
adc
push
add
sti
sahf
or
cmpl
xchg
add
mov
add
add
mov
outsl
in
sub
ret
pop
sub
aas
in
imul
cmp
popf
out
add
jnp
test
daa
stos
mov
xchg
cmpsl
stc
shll
sbb
push
cwtl
dec
inc
movsl
inc
cwtl
cs
push
loop
int
add
jno
int
push
loopne
sbb
adc
or
or
imul
push
jl
cmc
cwtl
loop
adc
cmp
out
jp
jg
add
jbe
and
inc
adc
test
inc
inc
jmp
leave
mov
mov
out
xor
ds
xchg
sbb
mov
fmuls
pop
cmp
and
movsb
push
pop
sbbb
dec
or
pop
lret
jge
repnz
test
sub
pop
data16
xchg
push
rol
and
scas
enter
scas
movsb
mov
cmp
out
jne
xor
add
sub
stos
pop
clc
mov
mov
out
or
mov
addr16
lahf
inc
pop
and
divl
nop
mov
mov
in
arpl
adc
lret
jp
cwtl
int3
iret
jecxz
or
or
cld
jge
dec
mov
jo
cmp
mov
shlb
add
lds
imulb
xor
mov
inc
xorb
push
sub
push
xchg
add
repz
mov
sbb
push
jbe
add
mov
and
sbb
sbb
mov
bnd
and
jbe
push
jg
cmp
cwtl
lea
pop
leave
outsl
push
push
nop
push
arpl
in
pop
jge
sbb
cmp
lcall
add
jge
enter
xchg
dec
lock
std
and
and
inc
incb
push
in
cmp
push
or
cli
mov
or
mov
add
aas
call
imul
mov
lahf
out
lock
dec
xchg
mov
stos
in
or
cmp
pusha
outsb
mov
das
dec
cwtl
std
dec
cli
les
jmp
insb
ds
fisubrs
jmp
xor
jnp
or
cld
xor
xor
inc
mov
icebp
add
int
lods
mov
mov
pop
mov
sbb
loop
pop
pop
stos
dec
push
mov
jb
add
and
hlt
bound
adc
loop
xor
cmc
outsb
jne
mov
lock
call
das
mov
sbbb
fwait
jmp
sub
std
pop
icebp
nop
or
dec
fnstcw
decb
adc
hlt
lahf
xchg
inc
les
mov
daa
jp
add
addr16
jg
test
cmp
adc
sar
push
ffree
add
in
pop
out
lods
cld
and
mov
or
or
pop
pop
pop
pop
cmp
shrl
mov
mov
xchg
mov
jae
xor
imul
xor
fwait
rclb
mov
movsb
xchg
pop
ja
call
and
push
mov
jecxz
or
xchg
or
sbb
sbb
xorb
je
pop
sbb
adc
adc
mov
cli
aam
add
add
mov
jmp
lret
xchg
and
insl
inc
mov
ret
cmpsl
hlt
dec
sub
imul
je
mov
icebp
int3
test
or
add
shrl
test
and
loope
imul
andb
call
jmp
adc
lahf
rcr
and
cmp
sbb
int3
int3
les
scas
cmp
mov
dec
leave
insl
jp
pop
jle
loop
nop
out
add
push
aam
fwait
jnp
cmp
mov
or
pop
adc
imul
mov
and
shlb
bound
add
push
xorl
push
push
lret
or
or
jmp
mov
in
push
hlt
lret
jecxz
sbbb
js
iret
mov
xchg
jmp
push
adc
sbb
cmc
mov
mov
movsb
clc
pop
cld
xchg
add
add
aaa
and
pop
jne
test
push
and
mov
mov
push
movsb
jno
xchg
adc
std
or
cmp
loope
pop
fldcw
arpl
shll
cmp
imul
or
out
movsb
mov
hlt
xor
pop
mov
push
movsb
decl
fs
inc
jl
shrl
mov
mov
add
add
xorb
inc
xlat
push
lahf
and
and
sub
ret
xchg
pop
cmp
add
xlat
sub
imul
or
in
push
out
pushf
inc
clc
push
mov
xchg
pop
in
xchg
into
out
fwait
test
fwait
sahf
push
mov
add
aas
sbb
lcall
stos
fdivl
cs
mov
mov
xchg
jmp
int3
dec
mov
inc
mov
and
adc
sub
sub
cltd
decl
or
adc
mov
ret
pop
xchg
adc
mov
test
sbbb
pop
dec
stos
mov
shll
mov
or
or
lret
sqrtps
dec
push
jp
inc
test
sbb
andl
jmp
test
and
loopne
xchg
imul
mov
cmc
mov
push
mov
iret
mov
push
leave
jnp
mov
and
inc
out
nop
mov
orl
xadd
jno
iret
sahf
sbb
int3
std
out
lock
adc
jae
aam
clc
hlt
nop
pushf
add
mov
jl
lds
xchg
mov
icebp
lahf
in
ret
rolb
das
mov
jns
sti
movsb
cli
mov
cs
repz
cmpsb
cmpb
mov
fdivl
pop
mov
mov
cmp
mov
jno
stos
inc
test
fsubp
adc
lcall
movsl
lods
fdivrp
and
jbe
ja
aam
fimull
adcb
cmp
in
ret
sub
mov
sti
cmp
mov
aad
add
cmp
clc
mov
aaa
push
dec
sub
test
push
adc
mov
mov
mov
push
jbe
and
cs
xor
imul
add
mov
dec
xchg
enter
sbb
scas
pop
lods
inc
mov
xchg
lea
cmpl
and
or
jmp
jg
and
int
sahf
pop
ds
jne
mov
test
movsb
rclb
and
pop
out
in
mov
add
loop
cmpsb
push
shl
add
loop
xor
aas
xchg
mov
movsb
dec
mov
mov
xchg
scas
mov
iret
aas
fcomps
dec
cmp
inc
sub
mov
popa
jae
fs
dec
mov
call
out
not
lods
xchg
pop
inc
arpl
outsb
push
data16
bound
pop
sub
push
fcoml
aam
lock
inc
scas
sub
ljmp
shrb
int3
or
cwtl
push
xchg
mov
jge
imull
push
mov
roll
imul
jge
dec
or
rolb
pop
ffreep
fnstcw
into
and
stc
mov
subl
xchg
adc
xchg
push
je
or
popf
xchg
in
jmp
mov
mov
add
pop
cs
fsubl
mov
fcmovnb
clc
repz
lods
fdivs
or
call
mov
or
sub
sbb
clc
and
inc
or
mov
adc
pop
bound
mov
and
loope
sarl
push
sub
icebp
out
push
stos
adcb
enter
push
sbb
push
fildll
cmp
pop
mov
popa
out
lcall
int3
cmp
jl
ja
loope
sbb
test
daa
mov
rolb
mov
test
add
popfw
add
jle
mov
das
mov
or
test
out
outsb
xchg
and
addr16
mov
jb
xor
gs
outsb
scas
leave
ret
inc
nop
dec
mov
xchg
xor
push
insb
push
and
nop
pop
iret
cwtl
pushf
test
cmp
or
ret
orb
sbb
jp
out
jecxz
sbb
adc
ret
dec
pop
jg
scas
mov
jb
cmc
outsl
dec
outsl
pop
push
scas
pop
ja
jmp
out
xchg
or
fisubs
add
push
jp
cltd
push
cwtl
xchg
stc
lock
xchg
or
add
mov
adc
jbe
push
adc
add
and
loope
cld
lods
dec
insb
shl
leave
cmpsl
jge
mov
pop
mov
lahf
sbb
sbb
loopne
cwtl
std
cmpsb
mov
pop
mov
jae
outsb
mov
jae
pop
push
and
or
jl
mov
pop
cltd
dec
push
hlt
cmp
addb
fs
subl
lods
orb
inc
cmp
lds
add
sub
xchg
push
cltd
or
fisttps
push
negl
xchg
ret
jge
repnz
mov
sub
scas
orb
in
dec
ja
out
ffreep
fmul
pop
inc
ficomps
inc
jp
cmp
mov
aaa
or
mov
mov
stos
mulb
mov
shll
stos
dec
sti
mov
dec
push
xchg
in
in
sbb
out
lea
ja
inc
int3
add
and
mov
dec
sahf
or
fnstsw
pop
pop
cli
push
cmp
jns
xchg
insb
lods
push
fstpt
sub
sbb
dec
dec
cmp
mov
ret
cmp
inc
lods
mov
movsb
cmp
pusha
mov
icebp
adc
sbb
mov
loopne
push
dec
outsb
or
sarb
insb
inc
cmpsb
inc
sub
lret
outsb
sar
testb
xchg
pop
aaa
inc
out
sbb
out
scas
push
cmp
outsl
lcall
imul
aas
aas
cltd
arpl
mov
je
jmp
lret
sbb
sti
lret
jle
es
scas
loop
inc
sbb
dec
js
cltd
test
sbb
lods
stos
sbb
mov
push
stc
push
and
imul
addb
pop
aad
aas
push
pusha
cltd
test
addl
xchg
into
jmp
insb
jg
xchg
pop
cmp
add
sbb
dec
scas
lret
jno
xor
ljmp
push
add
push
jns
ret
mov
rcll
xchg
leave
daa
mov
int3
stc
add
dec
sbb
divb
sub
lds
in
in
sbb
xchg
pop
jle
pushf
insl
icebp
test
dec
dec
inc
nop
into
xchg
scas
sbb
js
adc
daa
shrb
pop
aam
iret
adc
add
xor
push
adcb
push
or
outsb
and
cmp
clc
repnz
inc
jae
push
movsb
repz
push
data16
in
mov
lock
cli
xchg
pop
mov
sub
mov
aad
test
cwtl
sbb
icebp
lcall
inc
mov
add
pop
cmpsl
fmull
xchg
mov
or
mov
jl
dec
cmp
out
jne
inc
push
inc
sub
addr16
inc
cmc
or
jb
mov
dec
xor
call
dec
sti
push
xchg
xchg
gs
mov
fucom
in
add
sti
fisubrs
popf
xchg
popa
cwtl
fiadds
cli
fbld
js
adc
mov
jle
fldlg2
xchg
daa
aas
call
inc
hlt
sbb
xlat
es
test
push
adc
sub
lgs
out
aas
cmp
inc
ja
aaa
test
add
mov
sbb
or
call
aad
ja
jecxz
adc
mov
push
mov
xlat
dec
xchg
adc
cmp
jns
insb
mov
jp
stos
dec
or
pusha
cmp
cmp
clc
lcall
loopne
inc
outsl
xor
jmp
inc
lahf
mov
sub
loope
scas
int
cmp
xor
outsb
sbb
loope
rol
lret
movb
das
fstl
jp
sti
pop
arpl
xchg
sbb
sub
rcrb
mov
test
sub
roll
dec
sub
sbb
pusha
push
mov
push
insb
add
stc
ss
fmull
mov
clc
icebp
out
mov
mov
test
and
pop
push
out
sbb
inc
sbbb
jnp
dec
lods
xor
mov
inc
and
inc
data16
mov
add
lock
cmp
lods
xor
imul
fcomp
outsb
aam
mov
in
or
mov
outsb
daa
stos
fnstcw
sbb
fld
xor
inc
xchg
imul
cwtl
sub
and
or
fstl
leave
cmpsl
repz
xor
dec
aam
stc
sbbb
in
les
inc
shrl
sti
fwait
pop
add
pop
dec
mov
pop
not
test
jns
icebp
xchg
xor
mov
movsl
xor
adc
in
pop
pop
scas
nopl
dec
xlat
pop
push
xchg
sbb
xor
ret
adc
xchg
mov
sarb
aad
jge
inc
sahf
inc
in
in
gs
je
jnp
push
popa
fdivp
fwait
aas
aam
sbb
sbb
xchg
push
xor
testb
insl
or
loope
xchg
subb
adc
sahf
fcmove
mov
fs
fucomi
popa
inc
mov
inc
push
and
jg
ret
es
add
les
lods
mov
inc
jo
movsb
mov
jl
inc
sbb
mov
sahf
add
movsl
xchg
mov
mov
insl
and
and
jo
and
jmp
mov
aam
xlat
pushf
aas
es
iret
and
cvttps2pi
in
adc
jecxz,pt
test
scas
push
push
add
sti
jp
lods
add
popa
inc
add
scas
adc
mov
mov
sbb
test
xchg
dec
popf
es
popa
cmp
sub
add
and
adc
mov
xor
jno
aad
rcrl
icebp
cmpsb
movsl
jnp
mov
ret
push
and
mov
out
cltd
fs
mov
das
mov
xchg
shlb
clc
ja
stos
ljmp
sub
arpl
aas
dec
jecxz
mov
mov
dec
sub
xchg
inc
in
fdivrs
inc
fs
aaa
fldcw
loopne
sbb
jecxz
ljmp
outsl
xor
push
push
mov
dec
popf
cmp
sbb
popa
push
mov
nop
mov
mov
js
and
fistpll
sbb
xchg
and
xor
pop
dec
icebp
cltd
jmp
hlt
xchg
loop
push
jns
mov
or
dec
and
sub
in
dec
push
test
es
cli
pop
jnp
push
cmp
cld
les
ret
sub
notb
bnd
scas
test
fidivrs
dec
adc
scas
cwtl
adc
cs
movl
jp
shlb
loop
add
xchg
je
fs
aam
ds
push
es
pop
rcrl
stos
inc
roll
orl
ret
push
pop
dec
pop
cli
push
out
lahf
mov
stc
push
mov
sbb
outsb
idivb
aam
add
cmp
sbb
lods
pop
mov
mov
into
push
add
scas
imul
ss
pop
fcmovnu
mov
inc
jmp
js
jge
in
xchg
jge
cmc
into
pop
jle
or
filds
xchg
pop
sbb
fistl
dec
imul
jb
xchg
lods
jmp
cmp
dec
gs
mov
iret
test
stos
js
lea
add
adc
jmp
or
icebp
sbb
stos
int3
in
roll
jmp
imul
mov
xchg
je
mov
mov
out
adc
xor
sub
aam
fnstsw
mov
in
sarb
aaa
out
cmp
pop
jl
push
lds
xchg
inc
scas
ret
sbbl
cmp
cmp
cs
mov
cmc
adc
or
cld
inc
mov
sub
jle
inc
arpl
dec
insl
shrl
test
repz
mov
ss
fnstcw
test
inc
add
or
das
mov
or
int
pop
xchg
pop
repnz
cld
pop
clc
push
or
xor
shll
sbbb
in
add
nop
jle
out
in
cmpsl
inc
mov
test
cs
daa
xchg
iret
dec
push
add
xchg
movsb
xor
jne
sbb
fwait
das
leave
adc
sbb
xor
pop
mov
lahf
inc
push
lods
and
sti
jle
dec
mov
xchg
xor
loop
outsb
je
mov
cli
adc
loop
pop
test
pop
dec
jge
idiv
std
inc
adc
icebp
adc
aad
jl
fistpll
fistpll
xchg
sahf
push
jl
sahf
testb
ja
or
sub
adcb
xchg
cmp
mov
lahf
sbb
std
leave
dec
or
and
sbb
push
and
clc
aas
bound
inc
enter
scas
mov
in
mov
fildll
adc
xchg
push
sbb
stos
stos
scas
jmp
test
clc
pop
mov
cwtl
shlb
inc
mov
inc
cmp
lret
cltd
and
or
inc
jecxz
mov
ret
xchg
lods
adc
popf
repz
xor
mov
adc
pop
mov
lods
pop
ret
ret
test
popf
and
jecxz
js
lea
push
and
mov
dec
pusha
bound
xchg
dec
xchg
xor
add
push
sbbb
mov
or
inc
cmp
lods
mov
sub
aad
shld
dec
dec
xor
daa
ds
inc
cmp
push
jle
pop
scas
jge
xlat
lods
cmc
out
mov
enter
lods
pushf
cs
adc
in
dec
xchg
stos
pop
push
push
jb
cmp
jo
scas
clc
imul
inc
mov
mov
arpl
mov
fidivl
adc
pop
lods
out
xchg
idivb
mov
xor
mov
icebp
out
pop
mov
int
cmp
outsl
adc
mov
and
adc
shll
and
xor
jo
int
cwtl
pop
lods
inc
xchg
xchg
xchg
adc
cmpsb
xchg
dec
xor
out
out
loopne
shlb
mov
into
jo
jne
or
jb
icebp
fwait
jae
aaa
push
push
aas
xor
lock
push
sahf
pop
sub
mov
jb
outsb
movsb
push
adcl
es
dec
pop
pop
lahf
dec
movsbl
mov
in
out
je
inc
jb
inc
inc
mov
das
or
mov
dec
jae
bound
inc
mov
std
ds
mov
cmp
out
sahf
jns
mov
adc
cmpsb
xor
push
sbb
fldt
push
jae
aam
dec
lcall
cmpb
jo,pn
jecxz
loopne
xchg
pop
add
inc
jl
cld
xchg
push
repnz
mov
sahf
and
aaa
cmp
movsb
inc
fiaddl
shlb
in
shl
ficompl
pop
js
adc
out
sbb
xchg
cmp
mov
adc
ja
cmp
mov
out
lea
insb
cmp
and
fbstp
or
imul
cs
outsl
pushf
xchg
inc
and
mov
inc
sub
pop
arpl
into
imul
add
jns
cli
xchg
nop
fstl
add
inc
jg
stc
xchg
lahf
and
mov
and
dec
push
inc
or
stos
pop
cmpsl
pop
sbb
adc
cmpsb
sbb
in
jp
adc
ds
sub
push
xor
pop
pop
mov
cmp
lock
lods
xchg
dec
or
enter
sbb
xor
int
dec
shlb
and
stc
faddl
sbb
fsub
imul
pop
stos
in
cld
nop
call
movsl
in
jb
daa
adc
cmpsl
ljmp
imul
sub
xchg
addl
insl
test
aad
mov
jmp
loopne
aas
arpl
int3
dec
add
xlat
sub
dec
lock
jge
lock
repnz
mov
pop
inc
xchg
sar
stc
fldcw
int3
push
daa
xchg
fcomip
bound
and
push
adc
es
scas
sbb
mov
add
mov
mov
or
movl
cmpsl
aas
mov
popf
fsubl
leave
jno
ret
jl
inc
pop
add
sub
int3
nop
test
lcall
rcll
push
xor
out
sub
in
cmc
mov
repnz
mov
sahf
xor
call
cmpsl
shlb
xchg
faddl
cltd
push
sbb
stc
dec
pop
lods
mov
cmpsb
ret
push
mov
mov
je
or
push
adc
pop
daa
push
sub
stc
aaa
pop
pop
push
imul
fstl
inc
jp
dec
push
jae
and
aad
test
cmp
pusha
lret
outsl
and
mov
daa
add
and
outsl
jmp
push
insb
mov
jb
scas
sub
leave
adc
pop
sub
out
xchg
pop
and
mov
faddl
cli
in
jo
fldl
ret
aas
jb
xlat
dec
cltd
mov
btc
test
cmp
and
movsb
cmpsl
sub
mov
stc
mov
push
mov
ja
mov
fcmovbe
xor
popf
mov
push
lds
mov
dec
push
test
lcall
jmp
mov
lds
push
shll
test
xchg
scas
imul
data16
lcall
inc
push
insb
mov
scas
fwait
jns
mov
sub
cmp
lods
pusha
in
loopne
mov
jl
cmp
xchg
sub
cmp
push
inc
push
xor
push
dec
or
inc
and
loope
int3
test
and
xor
and
push
inc
sub
xor
cwtl
pop
stos
or
sub
or
out
add
outsb
rorb
inc
cmpsb
cmp
mov
adc
and
data16
jo
data16
loop
or
jecxz
mov
inc
cmpsb
cmp
xor
aam
push
fnstenv
out
fcompl
das
add
fucomi
pop
movsl
dec
gs
add
pop
dec
pop
pop
inc
rclb
sahf
ds
push
mov
xor
mov
pop
xchg
or
into
inc
cmp
loop
std
sbb
ljmp
repz
sti
arpl
out
aas
cmp
popf
xchg
xlat
push
xrelease
out
push
gs
adcb
xlat
mov
mov
into
mov
mov
and
out
lret
sbb
lds
icebp
mov
xlat
mov
push
pop
mov
arpl
mov
push
pop
push
mov
out
cmpsl
jne
mov
into
inc
das
je
in
mov
ljmp
sub
arpl
and
xor
daa
lret
or
xor
jecxz
cmp
push
sub
push
arpl
mov
pop
insl
fcompl
jo
gs
mov
mov
test
xchg
es
fsubr
adc
jge
pop
ljmp
and
jno
push
pop
sbb
popa
adc
and
adc
xor
scas
pop
sbb
pop
xor
insb
lret
adc
fwait
add
je
cld
sbb
xor
add
bound
xor
orb
daa
aas
movsb
movsl
mov
pushf
jg
pusha
pusha
shl
pop
enter
pusha
outsl
push
mov
mov
inc
and
adc
or
movsl
push
or
add
stos
dec
xchg
std
daa
inc
and
shll
lcall
xor
mov
dec
loop
inc
in
jnp
sbb
call
cmovae
sub
push
mov
les
cmp
inc
test
sub
icebp
jmp
push
ds
pop
jae
out
roll
in
add
xor
mov
jmp
pop
xor
xor
pmuludq
andb
lcall
js
jle
jae
jecxz
test
repnz
std
dec
mov
ljmp
push
je
cmpsb
or
dec
subb
mul
jns
mov
dec
push
sarl
inc
je
jbe
xorb
ja
ja
mov
xlat
incb
mov
movsb
sbb
or
imul
xchg
inc
std
mov
mov
sahf
xlat
inc
gs
stc
dec
daa
lds
sub
push
das
cld
loop
js
mov
idivb
fcoms
push
pop
and
add
stos
out
into
iret
lods
jno
enter
rdpmc
pop
dec
sub
lret
mov
test
sti
adc
inc
js
sub
or
push
psubusw
dec
xchg
fnstcw
test
adc
lea
sbb
push
rorb
cli
add
sub
adc
popa
push
aam
push
mov
outsl
mov
inc
sti
jg
xor
daa
mov
xchg
or
sub
fwait
imul
mov
cmp
arpl
pop
lret
push
inc
ret
into
std
lock
scas
mov
push
dec
push
ficoml
sbb
cs
je
subl
in
stos
dec
ret
movsb
mov
int3
sub
mov
std
repz
out
and
insl
xor
sbb
push
mov
sub
xor
lea
insl
xchg
push
sub
frstor
bound
lock
pop
pop
aad
shll
decl
pop
jge
jb
rorl
mov
scas
pushf
lret
ret
mov
popa
in
lea
clc
neg
sub
imul
xchg
xchg
js
xlat
fmull
mov
cwtl
and
push
or
shll
push
cmp
outsb
jae
sub
mov
out
push
mov
push
adc
xor
popa
dec
mov
popf
notb
pop
xchg
push
adc
iret
jae
adc
jo
sub
orb
sarl
das
jecxz
xor
xchg
and
mov
stc
addr16
inc
mov
inc
test
mov
or
mov
inc
movsl
leave
xchg
inc
repz
cmpsl
lret
mov
imul
loop
cli
add
popa
add
std
add
or
fneni(8087
sbb
and
push
imul
icebp
jp
add
fnstsw
daa
jae
fsubrs
push
sbb
pop
out
mov
pop
das
adcl
fdivrl
jbe
pop
test
lahf
push
mov
shlb
mov
aas
rol
outsl
xchg
push
jnp
inc
in
filds
loopne
push
aam
sbb
cmp
cmpsb
and
inc
jbe
or
pushf
push
mov
push
in
xchg
add
fsubl
add
dec
push
add
cli
dec
ret
ds
adc
ds
push
jle
push
std
dec
add
out
mov
push
or
cmc
lods
xchg
sbb
imul
pop
hlt
out
mov
jmp
lock
insl
and
dec
mov
loope
sbb
mov
dec
aam
push
inc
mov
cmp
lock
or
sub
push
rcll
add
aad
aam
fnsave
mov
stc
xchg
xchg
imul
and
cmpb
pusha
lcall
insb
lret
data16
xchg
sub
add
or
sbb
mov
jnp
mov
test
mov
dec
scas
pop
mov
in
or
out
mov
jbe
sub
pop
loope
loopne
or
sub
scas
sti
and
rolb
fistpll
scas
sbb
dec
or
lcall
cmp
mov
js
cmpsb
mov
cs
in
stos
scas
xor
scas
sub
push
mov
cli
cld
mov
sub
pop
lods
lock
inc
icebp
dec
xchg
test
pop
cmp
jne
fs
roll
push
adc
negb
and
pusha
mov
jbe
mov
adcb
rclb
in
push
scas
cmpsl
cmp
ficomps
cmp
daa
adc
aas
xchg
dec
pop
pop
bound
and
xchg
push
jns
loope
mov
adc
cs
add
cmc
lcall
cmpsb
push
inc
ret
lods
fimuls
xchg
adc
xchg
pusha
and
sub
enter
orb
enter
jge
pushf
fs
rcrl
mov
dec
gs
cli
fadds
adc
pop
fiaddl
lods
test
xchg
inc
and
hlt
xor
mov
bound
cmp
into
push
mov
stos
imul
pop
popf
leave
lret
stos
mov
loope
mov
cli
mov
mov
int
stc
inc
addr16
jmp
adc
inc
push
dec
es
filds
pop
sti
add
lret
repz
add
hlt
cmp
pop
loope
dec
push
push
sti
xor
mov
scas
std
mov
mov
pop
jbe
int3
out
in
dec
sub
jne
cmpsl
cmp
sahf
add
ja
pop
sub
insb
jno
repz
test
and
outsl
cmp
sbb
xor
movsb
bound
cltd
outsl
sub
lods
inc
jmp
dec
inc
inc
pushf
cmp
addb
adc
or
lea
aad
dec
mov
pop
test
and
sbb
arpl
iret
ljmp
cmp
xor
inc
fbstp
das
dec
js
adc
push
inc
lret
clc
je
adc
ljmp
faddl
movsl
dec
dec
loope
push
movsl
sahf
xor
xchg
icebp
into
jg
push
xchg
mov
add
mov
sti
shlb
imul
imul
mov
dec
shrl
mov
xchg
adcl
lcall
jno
pop
mov
enter
mov
lds
jl
addr16
shrl
xchg
add
movsl
lret
hlt
das
pop
jae
andb
sbb
inc
inc
jmp
dec
cmp
mov
popa
lock
push
imulb
sbb
and
xchg
add
or
test
jne,pt
or
sbb
cwtl
cmc
jo
mov
xor
sarl
mov
mov
adc
sti
std
rolb
pop
inc
ret
cld
aad
sub
gs
enter
dec
xor
outsl
and
lret
pop
push
push
mov
rolb
rcll
clc
ret
mov
xor
jmp
adc
pop
jle
adc
ficoml
xchg
adcl
neg
aas
insl
in
mov
mov
pop
sub
bswap
dec
dec
scas
adc
nop
stc
or
test
add
lea
or
mov
and
xchg
push
adc
scas
xchg
jbe
jl
insb
mov
sbb
imul
into
aas
push
fwait
add
jge
cld
push
push
jle
push
inc
sub
movsl
pop
xor
ret
nop
push
cwtl
pcmpeqw
lods
mov
inc
dec
int
stos
mov
and
mov
xor
pop
clc
mov
xchg
test
inc
fisttps
pop
out
mov
int3
ficomps
or
mov
test
push
or
push
lret
fmuls
out
pop
jno,pt
mov
addr16
enter
lea
fdivp
dec
mov
xor
jo
jl
inc
xorl
mov
in
pop
xor
stc
xchg
out
dec
push
stos
leave
rcll
sub
pop
imul
das
insb
pop
movsl
adc
ficoml
adcb
popf
dec
int
lods
cmp
xchg
push
lods
xor
lret
push
and
ret
nop
xchg
push
pop
imul
stos
test
lcall
sahf
xor
sarb
cmpsl
jecxz
pushf
mov
xor
out
mov
xor
xchg
sub
pop
or
mul
mov
adc
inc
sbb
leave
ja
imul
je
iret
orl
and
dec
inc
cmp
mov
sar
mov
mov
jbe
daa
div
xchg
fildl
sbb
mov
cltd
in
ficompl
or
cmpsl
xchg
out
cs
ja
nop
cmp
mov
jg
mov
mov
mov
daa
addr16
cltd
ficomps
fsubrl
fbld
pop
loop
jl
xchg
popa
mov
fcomps
aad
cmc
xchg
ret
pop
cltd
rcll
mov
push
push
shl
stos
sub
mov
test
in
sub
loope
test
xchg
sub
adc
pop
xchg
test
xor
push
cmp
hlt
mov
fmull
unpcklps
rorb
stos
and
test
aaa
stos
imul
mov
inc
or
daa
test
imul
popa
xor
cmp
stos
imul
fnstsw
ljmp
std
sub
mov
sbb
xlat
leave
cmpsb
jno
rcll
addr16
jns
js
addr16
fistl
or
or
xchg
push
nop
sub
out
add
dec
mov
mov
pop
lcall
pop
into
movsl
cmp
mov
aaa
pop
jne
xchg
sbb
nop
es
sbb
adc
mov
pop
dec
add
sub
loopne
mov
sahf
addr16
pop
fstps
insb
mull
aam
aas
mov
aas
xchg
js
add
mov
dec
add
incb
imull
imul
add
rorb
cwtl
aas
inc
jge
ss
or
fsqrt
shl
or
mov
mov
lods
xlat
subl
das
fsubl
xchg
sub
fcoms
add
int3
sarb
hlt
jb
mov
out
in
cmp
insb
jl
cmp
dec
pop
lret
mov
mov
or
enter
xor
pop
push
mov
inc
ret
fnstsw
out
inc
push
or
add
xor
mov
scas
jae
and
lds
das
mov
dec
or
out
lea
cmp
repz
and
cmc
sbbl
adc
clc
out
pminub
adc
jo
xchg
lret
gs
movsl
jne
repz
xchg
or
push
adc
xchg
jp
jbe
aaa
add
push
push
adc
and
lods
in
mov
xchg
ds
pop
xchg
adcl
fsubl
fcmove
inc
jo
sbb
mov
add
out
jmp
cmc
inc
xchg
mov
pop
loop
inc
xchg
sbb
add
ret
xor
adc
leave
push
mov
add
mov
repz
mov
or
sarb
cmpsl
xlat
xorb
aas
xorb
push
sub
icebp
loop
dec
data16
mov
mov
jo
adc
cmp
out
loopne
lods
cmp
dec
ljmp
test
adc
mov
repnz
imul
cwtl
mov
test
int
sbb
jb
mov
add
xchg
sahf
jae
cmp
xchg
test
push
sub
jns
push
or
repnz
add
xor
pop
orb
sub
ud0
or
movsl
dec
mov
jae
negb
out
xlat
jle
jge
enter
mov
arpl
lods
mov
mov
or
jecxz
ret
outsl
sub
jmp
sbb
test
push
sub
xor
loopne
or
mov
mov
jecxz
jmp
cmp
roll
and
and
or
fidivrl
popa
test
sub
in
decl
dec
sub
fsubrl
outsl
push
sbb
iret
jmp
call
pop
add
xchg
pop
sbb
cwtl
xor
sbb
lret
mov
bound
shl
or
mov
cmpsb
mov
push
mov
ret
add
loope
stos
dec
or
orl
ret
add
mov
ret
xor
and
lea
mov
push
inc
call
inc
lahf
inc
inc
push
sbbb
adc
sub
mov
adc
clc
lret
pop
and
ficoms
lret
aaa
or
cld
mov
and
imul
sbb
test
loopne
or
jp
mov
add
adc
test
xor
scas
push
cmp
sbb
cmp
pop
sbb
jl
enter
lods
and
xchg
mov
dec
mov
rcll
sub
dec
adc
ret
rcrb
fnstenv
ds
and
pop
dec
fistpll
dec
or
test
mov
mov
out
pop
jmp
or
stos
mov
dec
jecxz
leave
cwtl
lods
mov
ds
pop
es
xor
cmc
outsl
cmp
mov
jmp
insb
add
adc
scas
inc
dec
mov
push
jns
push
stos
dec
mov
push
fistl
inc
jne
aad
shll
hlt
adc
loop
std
mov
ret
mov
lret
call
jb
xchg
mov
mov
push
jnp
jmp
or
and
mov
push
push
pushf
sarl
dec
cli
sarb
adc
repz
jae
popf
xchg
push
fiadds
hlt
fdivr
sbb
inc
pusha
and
vpaddusw
call
loope
xchg
mov
pop
pop
jp
jp
lret
cmp
mov
out
stos
jnp,pn
ret
fs
jb
pop
mov
mov
sbb
mov
xchg
adc
or
jge
fs
lahf
aaa
adc
jbe
xchg
in
xchg
cmp
mov
pop
mov
and
cmp
add
or
lret
xor
push
jge
pop
mov
adc
aam
dec
popf
lcall
cmp
int3
stos
fldl
cmp
mov
push
test
jne
mov
pop
jne
loop
inc
int
loop
adc
lods
jle
mov
pop
outsb
mov
pop
cmp
or
adc
mov
xor
cmp
xchg
imul
jbe
jno
jae
mov
cli
loop
lds
sbb
test
jnp
inc
add
push
xchg
inc
std
loopne
add
push
cltd
sbb
ret
sbb
pop
jbe
adc
outsb
aad
sbb
rcrl
insl
adc
jg
or
mov
or
mov
lock
jbe
call
adc
dec
sbbl
pop
stos
mov
std
stos
mov
mov
push
ror
and
inc
lahf
push
and
sbb
loopne
loopne
enter
cmp
dec
lock
cmovne
lret
ret
push
push
dec
and
xchg
sbb
or
fdivrl
fcmovne
pop
cmp
das
clc
fstl
and
adc
clc
push
test
ret
inc
repnz
sub
inc
sbb
shlb
stos
dec
mov
mov
push
outsb
jmp
mov
cmp
add
faddl
into
or
ds
lcall
pop
mov
lahf
and
jne
pop
aad
insb
mov
sbb
jae
pop
call
jmp
adc
ss
out
jl
mov
in
aad
scas
jns
adc
adc
cmp
jns
scas
arpl
add
lahf
mov
mov
cwtl
dec
in
xchg
test
inc
inc
dec
xchg
xor
pop
xor
sbb
sbb
test
repz
cmp
mov
inc
lds
xchg
jmp
pushf
lods
and
dec
xor
push
xchg
lock
int3
icebp
dec
cmp
jge
maskmovq
imull
pop
out
imul
jl
push
inc
xor
add
pusha
jae
mov
lahf
pop
pop
ds
xor
sahf
iret
in
adc
fcomp
mov
pop
scas
scas
shlb
ja
stos
out
jnp
lcall
dec
cmp
mov
roll
dec
pop
adc
in
pop
stos
xor
call
test
xchg
popf
ret
mov
shll
or
and
pop
jne
aad
repnz
sbb
rorb
xchg
scas
and
push
cmp
addr16
lock
dec
add
and
cmp
mov
xor
fstl
loop
push
sub
pop
aaa
pop
dec
inc
lds
mov
dec
cwtl
push
jae
clc
jbe
mov
gs
adc
jg
pop
pop
popf
mov
ss
ret
pop
addl
mov
push
in
mov
inc
jge
inc
xchg
pop
mov
mov
jle
fldcw
or
sub
stc
fisttpll
mov
sub
jb
mov
mov
in
add
cld
fimull
or
xchg
push
cwtl
loopne
jp
pushf
inc
ja
movsb
or
lcall
lret
ja
dec
or
jnp
mov
add
movsl
dec
enter
lods
loope
gs
les
xor
pop
pop
addr16
mov
and
rcl
fidivl
cwtl
mov
out
test
shrb
aam
cmp
sti
push
push
dec
je
mov
pop
fs
bound
sub
pop
test
cld
int3
dec
popf
rcrl
dec
dec
lcall
nop
jmp
and
outsb
mov
sbb
or
jmp
stos
jl
lret
sbbl
out
sub
cmc
lds
or
xor
sbb
in
bound
mov
js
mov
loop
and
mov
mov
fs
int
clc
in
push
loop
adc
mov
or
out
fisubs
inc
mov
mov
aam
jb
cmpl
inc
sub
jns
push
pop
mov
dec
pop
out
add
inc
mov
aam
cld
repnz
cmp
xor
mov
and
popa
pop
sbb
je
call
mov
andn
iret
and
pop
sub
js
sub
jle
or
dec
pop
xchg
insb
cli
add
add
loop
int
sbb
xorb
cs
leave
dec
fadds
xlat
mov
push
in
pushf
sbb
das
xor
push
das
sub
xlat
ds
cmp
lea
add
jg
test
mov
nop
push
jne
jl
cld
inc
rcll
sub
out
mov
lods
add
call
loope
mov
iret
je
ljmp
push
mov
lahf
cmp
xorl
int
lret
cs
stos
out
add
std
in
ds
adc
inc
push
in
or
cs
jecxz
push
jne
daa
pusha
loope
and
or
adc
mov
icebp
shll
test
mov
add
mov
in
mov
out
test
stos
in
pusha
push
faddl
divb
jl
roll
call
pop
cmp
cmpsl
int
test
xor
das
push
out
mov
sbb
mov
dec
xchg
push
xchg
mov
pusha
push
das
and
cmp
scas
jl
cmpl
sbb
shl
sbb
std
call
icebp
icebp
add
dec
add
or
cltd
and
sbb
leave
into
mov
pop
in
fildl
les
push
ds
xor
add
or
inc
sub
fdivl
xchg
ds
and
in
and
cwtl
or
mov
mov
mulb
outsl
clc
lcall
das
lcall
ss
daa
sub
fsubs
push
or
mov
btcl
in
push
sbbl
cmp
xchg
and
imul
pop
addr16
cmp
stc
and
arpl
repz
or
cmp
jae
sbb
inc
cwtl
lret
sahf
mov
jne
jae
xchg
cmp
repnz
push
push
cmp
mov
dec
ds
cmpsl
bound
test
mov
pusha
inc
lret
or
jp
mov
adc
js
or
fstpt
inc
cmp
ljmp
jmp
fldenv
into
xchg
cmp
cmc
push
gs
adc
stos
orl
pop
das
xor
ljmp
fisubrs
jl
mov
fs
scas
in
cmc
adc
mov
hlt
sbb
ret
mov
mov
sbb
popf
push
inc
das
xor
sub
ret
mov
fbstp
test
push
push
xchg
dec
leave
mov
fdecstp
ficomps
adc
mov
bnd
js
sub
cltd
shrb
pushl
push
pop
std
xorb
es
aas
clc
fldl
lds
jne
hlt
in
xchg
enter
dec
pop
std
dec
faddl
mov
jecxz
int3
dec
mov
xlat
and
adc
loop
pop
aaa
sbb
mov
iret
jg
mov
fisttps
lods
dec
out
ljmp
mov
and
push
mov
je
mov
xchg
push
fnstenv
adc
pop
ja
inc
rcrb
pop
mov
sti
in
fadd
mov
gs
cltd
aam
imul
mov
add
outsl
outsb
in
lcall
aas
ret
push
inc
cmp
out
adc
jnp
js
arpl
push
in
loopne
mov
fwait
pop
and
dec
outsb
add
sbb
jge
aaa
adc
add
lea
sbb
cmp
or
sar
mov
sbb
cmp
xacquire
add
into
jmp
cs
mov
lcall
mov
or
lds
popf
cmp
std
jae
outsl
scas
movsb
cmp
inc
clc
cmp
aad
mov
or
ja
imul
mov
adc
push
mov
jnp
push
stos
mov
mov
test
lods
xchg
push
and
and
adc
out
popa
es
jne
ret
popa
int3
mov
xorb
add
sbbb
cld
mov
xchg
les
jne
outsl
push
and
push
jp
cmp
or
repz
xor
das
out
fnstenv
inc
sbb
inc
out
pop
ss
xorb
or
jo
bound
cmp
aam
divb
cwtl
dec
push
sbb
adc
push
xor
cmc
xor
inc
inc
or
and
in
ss
mov
jg
sahf
xor
aaa
xchg
div
or
push
xchg
dec
aaa
xor
mov
test
jo
jbe
dec
mov
push
inc
inc
mov
cwtl
into
js
pop
sub
fxch
mov
adc
or
into
and
jmp
push
mov
loopne
shlb
mov
inc
mov
add
adc
aaa
inc
rclb
subl
repz
sahf
jae
and
pop
jae
and
es
js
pop
cmc
inc
sti
xor
cltd
orl
cltd
mov
in
add
rolb
cmpsb
or
addr16
xchg
mov
or
shrl
inc
mov
dec
xor
mov
mov
in
repz
push
xor
mov
cmp
push
out
popa
jmp
mov
push
cmp
xor
outsl
sub
add
lods
pop
lcall
pop
dec
pop
xor
inc
test
les
clc
enter
sbb
gs
call
cwtl
sub
pop
cmp
cmp
es
into
pusha
xchg
jb
iret
movsl
shll
shrb
notl
xchg
mov
add
inc
aad
or
jecxz
pop
pop
xor
mov
sub
cmpsl
mov
lcall
ss
mov
push
ja
sbb
inc
lock
das
sub
adc
or
sub
ror
loopne
int
mov
lcall
dec
test
std
dec
xor
and
mov
push
pop
sub
icebp
sahf
mov
fidivs
mov
aaa
cltd
dec
jmp
dec
sub
js
push
fists
or
cmp
clc
mov
mov
xchg
adc
leave
mov
dec
out
lcall
jecxz
lcall
shl
mov
push
loopne
mov
mov
xor
mov
inc
mov
lret
and
add
icebp
xlat
ja
std
sbb
dec
jle
and
ljmp
lahf
push
pop
jmp
fsts
in
xor
ds
or
mov
jbe
test
push
add
int
data16
xlat
add
ficoml
pusha
sbb
cmp
push
cmpsb
sbb
pop
push
in
sub
daa
mov
shr
fsub
in
sbb
out
mov
adc
pusha
test
pop
lods
sbb
jle
iret
dec
das
rclb
sbb
into
jnp
mov
or
sbb
lock
mov
mov
pop
mov
ret
mov
push
and
stos
dec
mov
push
dec
push
dec
push
mov
xlat
stc
in
dec
pusha
fistl
mov
add
sub
insl
fisttpl
jbe
cmp
or
sbb
std
add
cmpsl
push
mov
mov
inc
test
nop
cs
xor
sub
aad
pop
jmp
pop
pop
adc
stos
cmp
loop
je
mov
ja
pop
nop
int3
inc
inc
jnp
idivl
out
pop
and
or
jg
movsl
xchg
loope
and
scas
sti
stos
cwtl
push
and
sbb
mov
xchg
ljmp
push
insl
orb
scas
sub
gs
insb
and
fidivrs
rorl
sbb
in
jmp
je
sbb
inc
push
push
pop
inc
repnz
xor
pop
pop
sub
icebp
xlat
mov
cld
jbe
dec
es
popf
fs
rclb
mov
xchg
xor
xor
std
pop
inc
xchg
or
inc
push
lcall
pop
add
fucomp
push
pop
les
ret
xchg
lea
stc
inc
cmpsb
xchg
dec
test
repz
push
pusha
push
jb
sub
adc
lock
add
or
insl
fiaddl
rolb
shlb
mov
int3
jo
mov
cmpsl
push
add
pop
test
pop
int
pop
pop
shlb
jmp
leave
or
mov
jmp
pop
cmp
cmp
or
leave
rcll
pop
dec
lret
lcall
ds
xchg
pop
loopne
iret
inc
mov
pop
add
enter
inc
fsubl
pop
mov
sarb
cli
sub
or
dec
dec
hlt
add
pop
mov
mov
add
xchg
rcr
push
mov
inc
clc
mov
icebp
cld
mov
subl
mov
inc
lcall
or
popf
mov
shlb
repz
fdivr
fistpll
push
or
int
ficoms
ljmp
rolb
pushf
aad
icebp
out
adc
sbb
insb
add
or
sbb
xchg
fisttps
loopne
jp
xchg
scas
dec
add
push
das
fcmovu
cmp
xor
je
and
mov
adc
fadds
das
rcll
lahf
jb
jecxz
out
fidivs
cmp
push
mov
xor
test
and
push
lret
mov
sbb
sbb
jns
loope
mov
mov
inc
out
fstps
dec
daa
jge
pusha
sub
ljmp
add
mov
push
movsl
add
outsb
ficompl
xor
add
fisubl
and
jmp
add
mov
stos
lahf
movsl
inc
cmc
aaa
lcall
out
jl
push
popf
mov
pop
jns
lret
repnz
aas
jb
jns
jl
sbb
xchg
mov
pop
cmpsb
mov
fsubrl
pop
ljmp
xchg
nop
and
xchg
jecxz
push
adc
pop
imul
xchg
ljmp
les
or
jnp
lcall
out
scas
push
xchg
repnz
push
mov
cs
cmp
cmp
inc
dec
push
imul
and
sbbl
fimull
lock
mov
adc
call
xor
sub
xor
xchg
repnz
lea
xor
xchg
test
scas
test
mov
sbb
hlt
lods
sub
sub
scas
pusha
sbb
push
js
mov
mov
adc
imul
loope
dec
addr16
aad
outsb
dec
add
xchg
shlb
fmulp
sbb
xor
les
ficomps
mov
in
cmp
pop
pop
and
mov
xor
sub
sbb
lret
andb
fadds
or
sahf
mov
add
cltd
dec
push
pop
adc
dec
out
es
js
jmp
and
push
or
xor
sbbb
fstps
popf
loope
sub
jns
xor
stos
cs
int3
ret
dec
or
lret
push
jae
cmpsb
mov
add
lds
xchg
jmp
xacquire
adc
test
aaa
xor
lahf
push
rcrb
cmp
repz
test
inc
icebp
das
mov
daa
andl
arpl
mov
sti
sbb
push
inc
inc
lods
out
jae
xor
jns
aas
mov
mov
mov
int
loop
or
andl
jg
mov
push
out
sub
inc
ljmp
pop
xor
mov
loope
mov
hlt
cmp
inc
mov
pop
xor
leave
sub
dec
in
cmp
addr16
insb
or
mov
fdivrl
fwait
fwait
jg
mov
xor
lods
es
pop
jae
inc
popa
and
das
mov
and
pop
push
shl
jl
hlt
mov
mov
add
xchg
xchg
fwait
rolb
adc
mov
mov
dec
es
adc
dec
mov
mov
es
test
lret
jbe
cli
dec
ja
mov
idiv
or
jne
adc
fsubr
movsl
xor
mov
fistpl
dec
xor
mov
mov
sbb
repnz
fdivr
movsl
fisubs
sahf
mov
adc
mov
test
jns,pn
int3
fs
xchg
push
dec
cli
lret
xchg
pop
bound
mov
sub
pop
lret
stc
xor
js
aad
mov
pop
mov
dec
pusha
leave
adc
mov
xchg
imul
nop
jnp
mov
push
adc
cmpsl
bnd
aaa
lds
es
test
stc
push
sbb
add
lahf
adc
sub
cld
data16
or
push
mov
sbb
out
jge
inc
sbb
mov
push
stos
out
xchg
out
xchg
xchg
into
lock
ret
stos
lahf
pop
sub
lret
pop
out
dec
adc
cmp
push
dec
push
jg
movsl
stos
arpl
mov
test
mov
stc
jmp
sbbl
pushf
pop
or
fwait
jno
lods
pop
leave
fidivl
sub
inc
mov
pop
push
adc
jecxz
cwtl
push
fimuls
scas
dec
push
int3
orl
xlat
std
inc
push
cmp
mov
mov
add
pop
push
add
call
lock
or
cli
mov
rorl
test
jno
js
cmpsb
insl
pop
xor
insl
jno
add
movsb
pop
cmp
pop
es
cld
scas
xchg
mov
lahf
hlt
sbb
pop
std
cmp
ja
xor
out
pop
push
push
pop
mov
outsl
lret
jne
mov
or
scas
das
stos
sbb
add
lea
shrl
mov
mov
lods
pop
gs
cmp
dec
idivl
setg
and
cli
xchg
cmp
aad
mov
and
out
push
mov
pusha
cltd
lock
cmp
popl
loop
mov
pop
sub
mov
idivb
inc
out
andb
clc
and
fstpl
cmpsb
inc
ret
rcll
mov
jne
sub
sbb
ret
xchg
loopne
xor
mov
jno
pop
outsl
jae
push
mov
fimull
mov
jae
push
or
adc
pop
fs
out
cli
adc
adc
jbe
cmc
push
call
movsl
movsb
push
arpl
rorb
jl
in
shlb
sbb
and
inc
push
dec
cltd
cmpsl
mov
icebp
jg
mov
cmpsb
scas
jg
mov
mov
sbb
mov
mov
ret
nop
mov
movl
imul
lock
push
sbb
or
push
add
xor
xchg
in
xchg
adc
cld
scas
adc
and
push
aaa
xchg
int3
adc
lea
pop
and
addr16
shl
push
popf
jl
pop
xor
pop
pop
or
fwait
jle
sbb
mov
test
mov
push
xor
lret
daa
xchg
mov
sub
pushf
jmp
mov
xchg
sub
aad
xchg
push
adc
pop
mov
call
pop
mov
dec
in
call
loope
lret
mov
sbb
fdivl
dec
test
pusha
loopne
fs
jns
xchg
fs
inc
test
cmpsl
imul
mov
js
adc
pop
pop
jecxz
sbb
cmp
iret
les
jb
xchg
js
jb
cmc
out
mov
push
push
mov
mov
push
frstor
movsl
aas
ljmp
inc
das
pop
dec
inc
das
ja
inc
fstps
inc
fbstp
ret
pop
aas
xorb
hlt
shrb
jae
adc
pushf
call
adc
adc
vmread
push
adc
std
out
push
nop
je,pn
sti
in
xchg
aaa
add
xchg
sbb
jbe
adc
and
cmpsl
jge
das
pop
ret
mov
mov
ret
fidivrl
inc
lahf
mov
movsl
mov
or
test
add
xchg
cltd
or
jbe
lods
jle
xchg
int
xchg
cmp
push
xor
or
xchg
inc
ss
cmp
adc
push
popa
icebp
pop
mov
push
add
push
addb
rcl
insl
sbb
xor
jbe
int3
dec
call
dec
inc
and
mov
fcom
xchg
pop
out
jns
subl
rcrl
loop
cmp
mov
cwtl
enter
cmp
jge
dec
mov
imul
lret
push
xor
cltd
and
insb
clc
push
outsl
rcr
fnstenv
sahf
dec
xor
cs
sarb
pmaddwd
cltd
push
shrl
jmp
adc
clc
xor
sbb
frstor
xchg
mov
adc
mov
cwtl
add
divl
xchg
or
add
dec
out
xchg
hlt
mov
rcrl
nop
int
push
in
mov
push
push
scas
sub
in
int3
jge
stc
xor
mov
xchg
push
xlat
sub
adc
loop
out
dec
mov
sbb
rcrl
sub
mov
pop
movsl
daa
and
xor
and
jno
into
mov
stos
fbstp
sbb
add
xchg
pop
les
xor
dec
fisubs
int
icebp
aam
ret
insl
cmpsb
in
fnstcw
in
mov
inc
rclb
outsb
pop
out
sarl
dec
clc
imul
fwait
in
lcall
dec
push
shr
add
sbb
rcrb
jno
or
add
fcomps
mov
repz
gs
rcll
insl
xor
mov
fists
xchg
inc
jge
scas
jmp
call
push
pop
in
mov
sar
popf
repz
jp
fimull
out
fnop
sbb
jle
cld
xchg
mov
arpl
add
test
pop
xchg
and
hlt
mov
lds
cmp
or
pop
add
mov
add
and
lea
xchg
cmpsb
call
jl
xchg
xchg
cmp
stc
lock
jae
mov
mov
mov
iret
and
filds
fsubrl
xchg
push
jl
idivb
cmc
jmp
and
cmpsl
into
ljmp
leave
in
and
fisubrs
mov
sbbl
ds
adc
out
shr
subb
sub
cmp
iret
mov
mov
and
mov
out
pop
xchg
enter
jnp
stos
mov
in
fnstsw
mov
push
insb
ds
sbb
xor
int
je
repz
cwtl
mulb
dec
dec
add
mov
sub
nop
xchg
aas
insb
push
cmp
push
fwait
push
js
pop
dec
add
dec
lods
or
fisubl
int
sub
or
test
dec
test
ss
pop
fidivl
cmpb
mov
sbb
gs
into
and
scas
sti
add
pop
daa
mov
push
and
xchg
inc
inc
mov
mov
lahf
jl
xchg
push
xor
sbb
pop
fcmovnb
lahf
dec
xlat
mov
mov
and
mov
inc
push
mov
mov
or
push
pushf
sub
mov
neg
adc
cmpsb
sub
sub
xor
cs
inc
idivb
mov
mov
xor
fldt
ss
jmp
or
loope
xchg
dec
adc
jg
and
lahf
and
in
jl
push
mov
sub
outsb
pop
or
pop
aaa
mov
push
lods
push
pusha
jl
in
ret
fcomp
movsb
cli
jbe
ss
jle
and
insl
adc
add
sbb
pop
cmp
xchg
xchg
aad
js
adc
cmp
pop
dec
xor
jl
push
fnstsw
jle
xor
jl
xor
out
imul
fwait
push
dec
cmp
sti
ret
stos
push
out
je
adc
dec
iret
xchg
mov
lods
orb
hlt
push
mov
bound
lods
xor
les
xchg
faddl
mov
push
lds
jo
int
and
cwtl
shlb
jl
stc
xchg
and
lds
addl
out
lock
lcall
inc
push
mov
and
outsb
andl
in
nop
jl
cmp
push
or
ss
sub
rclb
cmc
pop
iret
cwtl
pop
call
xchg
adc
dec
ret
in
movb
or
and
mov
icebp
or
jp
bound
jnp
fimull
je
aas
arpl
mov
mov
into
ja
mov
sbbb
shrl
sbb
stos
outsl
sub
cs
movsb
sub
shlb
ds
sub
mov
xor
xor
push
dec
jae
dec
or
add
gs
aam
ljmp
jne
mulb
mov
ljmp
mov
xor
fucomi
mov
jns
add
out
mov
sti
inc
mov
mov
fsubr
xlat
iret
dec
jp
xor
aam
daa
xchg
and
int3
aam
xchg
icebp
push
add
xorl
out
scas
push
jns
push
popf
data16
jbe
incb
cmc
ss
push
add
in
or
mov
data16
xchg
out
shr
push
inc
adc
fdivl
and
sub
es
push
adc
cmp
push
mov
and
rolb
or
outsl
sub
jl
dec
sub
leave
cs
jbe
push
fwait
adc
ficoms
out
cmp
stc
iret
scas
sub
leave
notl
dec
popf
in
inc
cmpsl
cli
and
mov
sbb
lret
stos
pop
bound
lds
enter
push
mov
rorb
sub
xchg
roll
and
sbb
mov
or
sbb
jb
shr
mov
fcom
stos
xchg
mov
dec
mov
leave
subl
xor
pop
xchg
xchg
fadds
and
mov
jne
mov
mov
xlat
mov
imul
iret
or
stos
lods
sub
insl
add
mov
lahf
add
push
imul
pop
xor
xchg
lods
hlt
mov
adc
cmp
dec
mov
out
fldl
cs
jmp
inc
lds
js
popf
aam
dec
test
inc
dec
add
mov
das
jne
fstl
outsl
push
movsb
cmp
ja
lods
xchg
mov
xchg
int
add
pop
add
xchg
dec
call
ja
repz
pop
xor
sub
sub
xor
outsl
inc
xor
adc
inc
nop
mov
jle
mul
data16
jmp
aad
dec
lock
call
fs
pop
mov
pushf
lea
push
cmpsl
pop
and
and
lods
adc
lods
popf
xchg
fwait
imul
das
mov
adc
xor
filds
leave
mov
test
test
push
shr
push
xchg
inc
es
bound
out
popa
mov
xor
push
push
aaa
push
xor
repnz
gs
adc
add
aaa
jl
addr16
cmc
mov
jle
nop
incb
pop
dec
push
mov
pop
inc
cmp
repz
mov
add
popf
stos
cli
sub
and
cli
stos
psubusb
jmp
push
jne
dec
mov
xchg
or
fsubrp
or
and
clc
mov
pop
push
daa
mov
fs
int
imul
mov
out
and
lock
mov
lret
shrl
dec
les
fsubrl
cmp
out
pop
and
xor
push
in
inc
les
mov
out
lahf
cmpsb
sbb
sbb
js
inc
inc
push
pop
pop
shll
popa
roll
test
pop
inc
jnp
lock
enter
pushf
dec
hlt
cmp
xor
fisubl
add
mov
pop
inc
mov
pop
dec
and
aam
push
lret
rcrl
mov
push
jb
sub
shl
cmp
pop
mov
adc
sbb
push
fcomps
mov
or
addr16
and
push
fnsave
mov
cmc
lock
xchg
aas
cmp
or
pop
cmp
jns
test
mov
daa
jg
push
jno
leave
xor
sub
sar
pop
push
cltd
or
xchg
adc
mov
insb
outsb
mov
cltd
sub
push
mov
fistl
pop
adc
or
loope
sbb
mov
imul
mov
xchg
mov
adc
mov
or
cmp
xchg
aaa
addr16
jge
push
xchg
out
dec
xchg
pop
dec
out
imul
daa
inc
scas
add
sub
mov
add
dec
jecxz
pop
push
pop
mov
cmp
test
in
lods
push
aaa
adc
cltd
fcomi
mov
leave
cs
jl
es
movsl
add
jp
adc
mov
dec
pop
in
loop
fildll
ret
mov
out
pop
adc
sbb
fildl
imul
lcall
add
aas
fsts
cltd
dec
inc
sub
aad
and
fcomi
pusha
dec
std
inc
mov
fadd
in
ret
mov
call
hlt
test
int3
cmp
nop
cmc
push
ljmp
ss
mov
mov
pop
popf
sub
jg
fdivs
lds
std
inc
xchg
mov
jo
dec
add
and
test
pop
addr16
gs
pop
call
dec
lods
sbb
push
mov
push
dec
jp
stos
inc
jle,pt
mov
rolb
ret
test
lods
jne
bound
add
stc
mov
inc
cmp
subl
lahf
mov
fimull
cwtl
insl
das
je
mov
rcrb
sbb
lahf
push
pop
sub
testl
outsl
clc
add
inc
icebp
rorl
cmc
pop
or
orl
test
dec
aaa
test
jle
iret
and
sub
fistl
jns
inc
aas
cmpsl
les
int3
fstps
shr
fnstcw
mov
out
mov
push
out
xor
mov
push
push
cmp
push
mov
cmc
mov
arpl
jbe
xchg
insb
adc
bnd
push
add
leave
push
mov
nop
mov
aam
pop
jne
fld
gs
orb
push
adc
repz
and
shrb
or
jle
push
fstpt
pop
outsl
sub
ret
cs
popa
ficoms
inc
push
aam
sbb
mov
xor
mov
push
dec
pushf
mov
outsb
push
xor
cmpb
dec
mov
sub
adc
sbb
dec
data16
mov
inc
fwait
sub
jno
inc
lea
pop
cmp
call
in
das
or
xchg
je
xor
outsl
mov
stos
or
test
fmuls
or
pop
cli
push
stos
test
sbb
rcl
push
out
cmp
and
push
push
ss
int
inc
ds
add
mov
dec
loop
lods
dec
lret
das
outsl
add
push
pop
mov
sbb
mov
iret
out
sub
rep
movsl
andl
pop
loope
mov
and
mov
inc
dec
jg
dec
mov
sahf
pop
inc
mov
pop
inc
pop
jno
or
and
arpl
loop
jne
int3
jge
out
sbb
mov
repz
clc
cwtl
pop
stos
ljmp
fdivrl
dec
test
inc
pop
lds
lds
push
fidivs
adcl
mov
xor
fbstp
mov
dec
sbb
dec
xor
test
lock
jg
mov
adc
cmc
pop
imul
ds
shrl
outsl
adc
leave
clc
inc
rolb
sbb
xor
mov
add
lahf
outsl
push
je
adc
in
out
fadd
xchg
enter
or
adc
sbb
cs
cmpsb
dec
jns
or
sbb
push
mov
loop
or
pop
fucomp
sbb
cmp
add
fistpl
add
ds
repz
xor
add
mov
subb
mov
and
mov
scas
lods
jg
int
lret
fisttpll
mov
and
idivl
push
test
mov
gs
int
cmp
ljmp
cs
add
sbb
in
add
sub
or
cld
jnp
in
out
call
push
orl
push
out
out
repnz
ss
cltd
mov
pop
jg
ja
xchg
outsb
jle
rcr
sbb
in
xor
insb
mov
dec
mov
aad
mov
mov
incl
mov
or
int3
cmp
into
jo
push
gs
ja
lcall
and
jbe
jb
aas
pop
into
push
adc
cld
cmp
jae
jo
sbb
or
jo
subb
pop
and
pop
fidivrl
mov
adc
in
cmc
rol
test
popf
lods
sti
add
out
in
pop
ret
int
sarl
dec
jnp
stos
or
xlat
outsb
rolb
sub
lcall
push
mov
lods
es
aaa
enter
push
ret
jnp
test
cld
adc
adc
sbb
add
inc
fimull
mov
jnp
push
jb
jmp
push
lock
jp
out
outsl
out
adc
push
test
in
int
ror
loope
scas
dec
jno
pop
mov
jbe
cmp
dec
ret
add
xor
sbb
mov
ret
jnp
hlt
std
mov
movsl
addb
lret
sahf
and
loop
cwtl
icebp
mov
dec
test
cmpsl
icebp
and
pop
add
dec
test
sbb
push
test
ss
daa
mov
stos
cmp
adc
add
dec
xchg
xchg
xchg
xchg
pop
mov
outsb
push
xchg
test
in
int3
popf
dec
das
dec
push
mov
xchg
fistpl
jno
fistps
mov
sub
in
push
sarb
pop
or
mov
pusha
icebp
add
lret
mov
mov
fldcw
xchg
cld
mov
mov
jae
insl
cmp
scas
mov
stos
push
lahf
insb
sub
or
or
push
or
mov
addr16
cmp
stc
popl
insb
inc
push
jl
xor
fs
push
inc
fldenv
test
adc
faddp
xor
and
jns
xorb
mov
leave
xor
or
divb
ja
mov
mov
lds
outsb
xlat
xchg
dec
jp
pop
pop
mov
fsubs
test
mov
xlat
adc
ficomps
fstpt
and
rcrb
or
mov
popa
sub
les
xlat
sbb
or
jecxz,pn
adc
xchg
or
push
shl
outsl
in
xchg
and
test
adc
rol
out
insl
mov
out
pop
movl
pop
int3
dec
sbb
sahf
dec
test
pop
in
leave
jae
scas
loopne
int
lods
insl
mov
xchg
cmc
xor
arpl
movsl
nop
sahf
shlb
ljmp
loope
jmp
push
ret
dec
cmp
pop
inc
mov
mov
sbbb
scas
xor
dec
mov
pop
xchg
filds
cltd
jne
std
jl
punpcklbw
imul
xor
sbb
push
pop
leave
testl
ficoml
fistpll
add
out
popa
loope
arpl
jp
sbb
sbb
negl
pop
les
jge
orl
cmp
mov
in
outsl
and
cli
pop
push
cltd
popa
cmp
xchg
add
sbb
sahf
cmp
cmpsl
stos
ret
jns
mov
test
fsubp
fldl
push
push
push
subl
nop
pop
or
pop
mov
or
push
hlt
push
cmp
in
cmp
sbbb
xor
enter
inc
xor
mov
push
mov
mov
adc
movsl
dec
dec
movsb
sub
xor
les
sbb
push
les
pop
mov
popf
push
pop
jecxz
mov
sub
jecxz
mov
repnz
ret
insb
mov
jo
mov
js
mov
sahf
xchg
imul
sbb
sahf
jb
xor
add
jbe
adc
or
lods
mov
loop
mov
jle
dec
mov
mov
iret
sbb
adc
sahf
and
cwtl
push
fadd
and
cmp
xchg
daa
das
int
push
adc
fidivl
stos
mov
lret
shlb
lods
mov
fimuls
jns
ss
aaa
mov
lret
imull
addr16
jbe,pt
ljmp
cwtl
dec
sbb
ret
fdivl
adc
sahf
sbb
push
mov
xchg
cwtl
sbb
jnp
mov
push
das
jle
es
push
jecxz
mov
or
outsl
aas
fcomip
push
or
test
add
sub
add
fcoml
xchg
push
pop
fwait
and
popf
shl
es
xlat
popf
movsb
xchg
inc
iret
aas
dec
out
test
sti
mov
into
sbb
sbb
bound
add
or
pop
cmp
int
jp
inc
outsb
icebp
pop
addb
test
aam
mov
movsl
int
in
outsl
in
pop
pop
inc
and
divl
lret
scas
mov
inc
aaa
aas
inc
xor
in
ret
int3
dec
or
lcall
movsb
icebp
test
movsl
jo
inc
or
pop
fwait
mulb
mov
int3
xor
lcall
mov
cmp
or
sbb
inc
xchg
call
ret
std
mov
outsl
push
pop
cmp
push
add
pushf
cltd
shrl
cmp
in
jno
lahf
out
adc
xchg
jno
mov
fadds
sub
repnz
xchg
push
pop
aad
pusha
add
add
inc
xor
cli
or
pop
fwait
xchg
fistpll
les
jns
push
fidivrl
rorl
push
inc
sti
xchg
dec
xor
negb
adc
das
subl
sub
mov
cli
aas
xchg
and
cmpb
jle
pop
into
adc
xchg
adc
inc
aad
dec
sub
xlat
lahf
or
mov
mov
cmp
lea
jg
movsl
popf
fadd
xor
dec
leave
hlt
jne
sub
subb
out
ljmp
mov
push
loop
push
inc
lock
call
mov
push
das
and
jb
aam
jne
orb
mov
xor
movntq
out
hlt
hlt
pop
pop
movsl
out
xchg
scas
or
sbbl
xor
roll
shl
add
xor
xor
pop
mov
mov
sbb
xor
test
mov
push
fucomp
jns
int
shrb
sbb
cmpsl
jb
mov
adc
mov
js
adc
enter
mov
ds
adcb
aam
jo
inc
adc
jecxz
xor
inc
icebp
dec
fbstp
and
out
sbb
pop
enter
lods
ljmp
and
mov
in
or
cs
sub
inc
sar
xor
push
roll
and
decb
adc
lea
mov
out
aad
std
mov
xchg
mov
adc
fildll
inc
add
test
mov
pushf
xor
clc
inc
xor
dec
addb
xchg
sub
ret
testl
jae
and
sub
push
lcall
jns
jg
xor
mov
mov
dec
lods
imul
push
xchg
and
into
lock
arpl
testb
or
sarb
sbb
mov
rol
adc
decl
inc
mov
insl
mov
negl
shlb
les
mov
fs
push
mov
mov
popf
xchg
adc
jne
lea
mov
cmpsl
sahf
sub
and
lock
out
es
test
dec
mov
or
mov
xor
inc
lret
data16
out
xchg
popf
sbb
into
sub
lahf
sbb
xorb
and
insl
sbb
mov
fisubl
or
or
lret
sbb
xorb
in
sbbb
push
loope
xchg
push
xor
dec
mov
dec
jmp
xor
sub
push
outsb
daa
jecxz
jae
ds
stos
outsb
mov
and
mov
cld
sub
fwait
std
push
outsb
fnstcw
mov
mov
and
dec
hlt
adc
or
push
dec
mov
jo
scas
mov
add
mov
jmp
out
dec
jmp
mov
shlb
pop
dec
rorb
cmp
loope
cmp
mov
adc
fnstenv
jno
scas
adc
lock
add
fwait
rcll
loop
nop
inc
mov
mov
dec
sbb
repnz
data16
pop
mov
pusha
int3
adc
lret
adc
in
sbb
fbld
pop
push
mov
in
inc
int3
inc
cmp
fidivs
inc
arpl
out
lds
adc
ret
movsb
adc
fstps
sbb
xchg
and
inc
or
inc
cmp
push
jle
fnstenv
mov
popa
jae
cltd
movsb
dec
cmp
rol
cli
sbb
inc
jae
sbb
ret
add
xor
pop
cmc
adc
xorl
mov
mov
aam
and
push
xchg
iret
loope
cs
mov
test
sub
inc
adc
mov
test
jb
bsf
aaa
mov
pop
xor
mov
pushf
xchg
hlt
ss
and
jb
xor
jp
test
dec
push
je
fcomip
sti
jl
jl
fld
jmp
push
cs
jae
sub
pushf
ficoml
in
aam
or
mov
pop
sbb
jb
stc
fnstenv
lret
sbb
leave
cmpl
inc
in
lret
jmp
pushf
mov
sub
cwtl
pusha
subl
pop
ss
xor
adc
fwait
push
pop
dec
and
and
dec
dec
xlat
xchg
and
mov
pop
fimull
pop
and
mov
lret
ror
pop
jg
out
sbb
movsl
sbb
stos
sbb
shlb
mov
jecxz
mov
lods
addl
xlat
mov
lcall
insb
xor
fstps
ret
cmp
lea
inc
sbb
jnp
jg
les
mov
in
pop
sti
outsl
mov
add
scas
pop
or
aas
lret
sahf
in
insl
mov
in
ret
negb
clc
mov
cwtl
dec
jge
jmp
xchg
lea
notb
mov
xor
fisubl
cmp
mov
or
test
inc
push
enter
int3
or
in
adc
xor
sub
sub
pop
popf
ficompl
sub
adc
movsb
sbb
lock
popf
adc
pushl
sbb
dec
out
cmpsb
pop
call
push
pop
shlb
mov
orl
jno
fstps
sbb
in
stos
and
sbb
fimull
or
add
cmpsb
adc
jmp
cld
stos
mov
and
insb
jnp
inc
pop
dec
test
mov
adcb
iret
jae
adc
lahf
push
inc
iret
xchg
inc
mov
jno
sbb
in
roll
dec
mov
out
lea
jae
and
mov
xor
xchg
mov
jne
push
cmpsl
enter
mov
jns
and
ret
cltd
sbbl
or
cmp
clc
cmpsb
iret
adc
cmpsl
push
fsubl
jle
jecxz
idivl
sahf
insl
or
popa
push
hlt
mov
jecxz
fisubs
fwait
push
pop
push
fcmovu
xor
fwait
adc
and
fidivrl
inc
clc
xor
mov
out
mov
pop
lea
scas
in
xchg
lds
fldl
inc
ja
pop
adc
xchg
cltd
loope
xchg
jl
lock
imull
arpl
fstpl
xchg
pop
mov
faddp
inc
sub
fistpll
jmp
pop
iret
pusha
lock
loope
fsubs
in
stos
push
xchg
pop
jb
rcrl
xor
in
test
out
outsl
jb
stc
pop
aaa
fisubs
in
fwait
mov
sbb
pop
mov
andl
cli
fbld
mov
rcll
add
je
cmp
jmp
mov
xor
cmpsb
and
stc
sub
xor
pop
je
das
cmpsl
and
ret
scas
lret
loop
in
cmpsb
xor
inc
pop
mov
inc
push
inc
lods
rorl
pop
cmpsl
mov
mov
fisttps
push
or
or
xchg
fisubrs
lods
jmp
stc
outsb
cld
push
jno
jg
lock
mov
adc
mov
and
mov
outsb
inc
jno
fs
das
push
xchg
out
dec
test
imul
fnstenv
in
xor
test
rcrb
lcall
inc
aaa
add
mov
xchg
ret
adc
inc
cltd
sub
pushf
out
cmp
dec
aaa
inc
add
adc
mov
push
lcall
push
jno
mov
fadds
js
ljmp
adc
or
push
or
sub
push
rcl
popa
pop
cwtl
adc
mov
lea
outsb
jle
push
jnp
and
mov
pop
or
or
in
adc
pushf
pop
cmp
mov
or
xor
int
in
xor
sub
jle
pop
mov
mov
dec
push
sarb
mov
cwtl
mov
int3
pop
mov
mov
jb
and
in
mov
jnp
pushf
in
cmp
pop
mov
addb
mov
into
or
xchg
pop
dec
popf
mov
dec
xor
repz
shll
sahf
dec
fisubrs
hlt
lods
ja
jae
mov
jae
xor
jnp
sub
in
jo
push
aas
std
imulb
scas
or
leave
test
xchg
adc
push
js
fisttpll
incl
ss
outsb
sbb
sub
pop
cmp
mov
adc
push
sahf
int
cld
lea
mov
jmp
movd
cmp
mov
sub
adc
sbb
jne
pop
pop
icebp
sub
jnp
and
rclb
xor
lock
cld
xchg
push
das
mov
dec
enter
out
mov
cmc
sub
inc
xchg
mov
mov
call
add
pop
arpl
test
jecxz
jbe
jno
psubq
mov
dec
mov
pushf
pop
loop
jae
fisubrl
mov
enter
ja
sahf
add
stc
push
test
sbb
mov
movsl
jecxz
ljmp
incl
mov
ret
jl
cmp
in
dec
fisttpll
push
mov
adc
xlat
je
mov
in
push
sbb
cmp
jecxz
add
mov
lret
cmp
push
sub
imul
dec
and
dec
aas
inc
hlt
sti
sub
pushf
lret
push
movswl
jge
ja
fsubr
lock
pop
inc
push
insl
bound
test
sarl
push
cwtl
js
lcall
cmp
push
cwtl
les
jno
add
les
or
mov
mov
rorl
dec
daa
mov
mov
arpl
cmp
xor
sub
and
test
pop
fsub
scas
xor
xlat
cmp
sbb
daa
jg
scas
cs
adc
loopne
call
jb
adc
and
lret
fidivrs
pop
sbb
add
mov
js
dec
insb
jl
adc
dec
arpl
fidivrl
xor
arpl
pop
frstor
cli
ja
aaa
cmpsb
sbb
add
bound
push
dec
jp
ds
rorl
jae
pop
cli
into
ja
push
imul
push
test
dec
enter
jb
pusha
fidivs
jb
sbb
rcrb
scas
or
add
ljmp
pop
sahf
jl
add
ret
aad
or
fisubrl
das
aam
add
rcll
adc
inc
xor
imul
jo
push
shl
pop
movsb
loopne
mov
dec
pop
inc
xor
adcb
fcmovnb
pop
inc
and
jno
and
fmuls
cmpsb
sbb
cwtl
mov
sahf
push
cld
daa
xchg
call
ds
aam
dec
loopne
mov
xlat
shll
push
sbb
lcall
andb
fadd
in
jl
sub
mov
dec
jne
mov
pop
jbe
mov
add
and
out
xlat
outsl
lea
pop
adc
loopne
adc
pop
push
lret
pushf
sbb
add
pop
call
out
adc
mov
fs
dec
test
inc
mov
pop
push
push
xchg
jmp
or
fimull
cmp
loop
cmp
xor
clc
loopne
out
mov
stos
clc
and
ja
pushf
sbb
mov
xchg
sbb
cmpsl
dec
scas
into
xchg
cmp
sti
subl
mov
dec
cmp
aam
push
jl
icebp
cwtl
pop
sub
jmp
and
pop
sbb
and
adc
idivb
push
rclb
int3
mov
mov
and
mov
lcall
jnp
mov
out
mov
sub
pop
lods
lret
inc
fwait
jl
dec
mov
sahf
adc
test
dec
pop
add
cmp
and
fs
lret
jg
divl
out
test
out
stc
andl
lcall
int
das
jmp
sbb
cmp
fsub
lods
jae
dec
xor
adc
or
cmp
repz
xchg
dec
ljmp
pop
adc
push
cmp
lcall
sbb
push
jmp
ret
lea
adc
movsl
loopne
test
das
sahf
cld
jnp
js
lret
sbb
push
sbb
cmp
push
sbb
xchg
add
xchg
push
push
cmpsl
daa
stos
iret
lds
and
out
aaa
daa
xor
cltd
dec
int
movsl
and
add
sti
xor
cmpps
adc
mov
into
add
aas
fucomip
ret
pop
loope
popl
andl
in
xlat
pushf
dec
dec
xlat
ljmp
adc
inc
pop
lcall
fstps
xchg
cmp
test
and
lea
xor
out
je
les
pusha
sbb
mov
mov
jge
fdivl
mov
shrl
test
inc
les
jmp
jae
mov
cli
sarl
add
in
fimull
out
lret
xor
mov
xor
cli
adc
and
and
aas
push
bound
mov
lahf
mov
ret
push
popf
lock
jbe
sahf
xor
das
jno
popa
lcall
inc
dec
mov
jecxz
arpl
cmp
sbbl
mov
mov
and
jae
xor
in
movsb
sarl
cmp
or
out
cmp
adc
pop
pop
test
cmp
adc
add
cld
movsb
fcmovnb
inc
and
and
rorl
xor
push
pmulhw
movsl
or
add
mov
xlat
jae
mov
ljmp
mov
in
cmp
lea
ret
sub
cs
xlat
cmp
jnp
inc
movsb
mov
mov
enter
inc
ret
stos
dec
outsl
push
inc
call
mov
push
dec
add
gs
cmp
push
repz
sbb
rorb
mov
fmul
sub
lea
fdivl
leave
and
outsl
iret
mov
mov
ret
or
xor
in
jp
aas
sub
pusha
pushw
sbb
insl
imull
dec
mov
sub
lods
jo
test
add
repnz
pop
mov
push
mov
pop
pusha
mul
xor
std
scas
sbb
sbb
scas
xchg
mov
jl
mov
jg
dec
loop
call
add
outsl
pop
push
mov
loope
mov
adc
outsb
mov
sub
aaa
idivl
sub
cli
push
pop
mov
xor
inc
data16
data16
adc
or
push
mov
jae
cmpps
in
mov
andl
repz
pusha
or
or
faddl
movsl
fwait
push
push
pop
sbb
inc
out
add
cmp
andl
sbb
loop
std
repnz
jo
pop
mov
add
and
adc
inc
test
in
cltd
outsb
cwtl
sbb
stos
mov
push
loope
test
pop
dec
pop
notl
adc
mov
lods
pop
jae
icebp
lea
xlat
fsts
loop
sahf
mov
inc
in
mov
cwtl
inc
inc
dec
fimull
mov
out
sbb
push
outsb
push
mov
loop
int
adc
inc
popf
sti
pop
dec
daa
lods
fdivl
mov
in
jecxz
or
es
loop
lods
push
mov
fwait
lret
xor
cmp
fptan
int3
xchg
push
push
pop
ljmp
pushf
mov
imul
arpl
xchg
into
adc
adc
lea
ja
mov
sub
xchg
cltd
xrelease
clc
adc
ljmp
or
fs
mov
pop
pop
icebp
and
push
sub
aad
iret
scas
ret
sub
mov
pop
mov
dec
push
dec
mov
mov
mov
xor
jns
or
lahf
push
sub
pop
xor
pop
scas
cltd
stos
cmpsb
inc
inc
lock
push
enter
push
xor
lcall
sbb
sbb
stc
mov
movsl
pop
in
mov
ficoml
cld
sbb
mov
inc
pop
sub
xorl
lods
push
ss
mov
dec
adc
nop
cmc
xlat
mov
push
repz
scas
mov
dec
mov
cmp
push
shlb
movsw
push
mov
leave
jecxz
subb
les
aam
fldenv
cltd
in
mov
inc
xor
xor
xchg
mov
fisubrl
cmp
rorl
inc
sbbb
mov
imul
jl
dec
dec
es
mov
or
stos
mov
test
mov
jne
push
jl
lahf
iret
pop
cmpsb
test
mov
dec
xorl
xchg
aam
sbb
daa
lcall
insl
imul
rcl
cmp
cmp
stc
mov
mov
cmp
sahf
jno
into
add
dec
faddl
out
popa
shrl
cmp
adc
inc
mov
cltd
xchg
test
push
jmp
pop
int3
push
hlt
loopne
jbe
push
cmc
test
dec
stos
stos
aaa
mov
xorb
adc
popa
or
adc
int
loope
xlat
dec
enter
out
sub
dec
jo
jp
push
mov
pop
jb
iret
or
xchg
imul
subl
repnz
mov
jl
mov
loopne
outsl
cltd
popf
jg
arpl
cld
xchg
lea
lods
scas
lret
sub
sub
jnp
sub
ss
fnstcw
es
aaa
arpl
fwait
mov
fisttps
mov
ficoms
xlat
ss
aaa
xor
js
or
test
sbb
lds
pop
fs
divl
mov
in
int3
in
jnp
sub
shl
jo
push
xor
mov
pop
mov
sub
push
inc
pop
inc
daa
in
and
mov
push
fcoms
pop
add
sub
push
pushf
daa
fsubrs
mov
xchg
dec
popw
xor
in
pop
fbld
loop
adc
push
mov
add
xor
daa
outsl
test
loope
or
movsb
cmp
fists
ret
add
pop
push
or
imul
repz
sahf
dec
cmp
std
mov
pop
or
push
cmp
lahf
mov
xchg
or
fimull
adcl
xor
int
loope
mov
rorb
mov
add
jno
xchg
lret
iret
pop
lret
push
mov
into
adc
pop
sti
lds
iret
cmp
push
mov
enter
xor
push
ss
bound
sbb
imul
jo
mov
mov
outsb
sbb
pop
nop/reserved
inc
mov
lods
adc
daa
pop
sti
cli
ljmp
cld
mov
into
mov
sbb
mov
xchg
fildl
mov
sbb
mov
addl
mov
mov
sbb
stos
push
lds
dec
dec
mov
in
mov
daa
pop
icebp
dec
push
sbb
push
idivl
add
leave
cmp
fdivs
xchg
push
das
mov
bnd
fcomip
hlt
test
cmpsl
and
fwait
push
push
cmp
leave
imul
lahf
ja
movb
xor
movsl
xchg
movsb
daa
jae
xchg
insl
or
subb
and
cmc
iret
aad
and
sub
mov
insl
and
dec
js
mov
add
aas
sub
sbb
or
adc
movsb
dec
stos
mov
xor
icebp
pusha
mov
sub
mov
push
aad
cltd
xchg
pop
cmp
das
pop
scas
out
xchg
aaa
jl
push
test
mov
leave
adc
pop
or
jl
nop
mov
xor
pop
push
shlb
mov
sahf
xchg
adc
mov
ss
pop
data16
add
jno
inc
out
jcxz
adc
call
add
ss
xchg
orl
cltd
xchg
inc
out
fldt
icebp
adc
mov
cmpb
push
dec
mov
mov
movb
sbb
lods
xchg
adc
push
ret
adc
push
ljmpw
adc
pushf
dec
jne
sbb
add
and
lods
orl
call
cmp
shll
dec
stos
or
in
inc
pop
push
xor
mov
jbe
test
aad
xlat
adc
push
in
ss
rcrb
pushf
mov
les
jns
loop
sub
dec
cmc
dec
hlt
ljmp
sub
ds
mov
sbb
mov
xchg
xchg
add
popl
nop
sub
fmuls
mov
loopne
sti
movsb
divb
nop
clc
dec
mov
je
ljmp
enter
cltd
int3
mov
jns
dec
adc
out
inc
mov
rclb
mov
pop
movsl
icebp
clc
xor
mov
dec
in
xor
cmpsb
stos
push
nop
mov
mov
adc
push
lock
sbbb
mov
adc
xchg
int3
mov
cltd
lods
bound
and
mov
cmpsl
xchg
adc
cmpsb
inc
xchg
xor
push
and
notb
std
dec
sbb
or
mov
jae
push
inc
cltd
push
subl
push
inc
outsb
mov
nop
lods
xor
or
lock
out
or
fs
or
fcoml
pop
shll
sbb
mov
xor
pop
imul
inc
movsl
xor
mov
outsb
popa
add
xor
jmp
xor
jb
call
adc
out
cmp
sbb
push
not
pushf
adc
fstl
scas
mov
stos
pop
mov
cltd
cs
das
std
loopne
loop
inc
sbb
mov
mov
or
mov
push
cmp
inc
aaa
movsb
lock
cmc
jo
mov
push
aam
inc
shlb
sbb
stos
int3
dec
mov
adc
filds
and
inc
xor
pushl
jl
and
movsb
arpl
stos
js
mov
sub
sub
out
movl
sbb
and
pushf
aas
shlb
mov
cmp
cld
xchg
jne
in
and
or
push
nop
imul
cli
cli
dec
pop
mov
and
and
ret
add
lods
mov
mov
add
lret
loope
aaa
test
ljmp
imul
out
sbb
aas
imul
pop
iret
xchg
add
push
fcmovbe
ret
out
add
xor
xor
je
outsb
mov
jmp
inc
test
cmp
xor
mov
pop
inc
mov
scas
aaa
je
out
xor
and
jmp
fdiv
jne
lock
jge
and
mov
lods
popf
aad
mov
xor
lret
pop
push
gs
xor
icebp
icebp
pop
cltd
push
aaa
inc
insb
mov
and
push
jg
gs
outsl
mov
and
jl
inc
loopne
push
stc
sbb
or
xchg
int
fbld
std
outsl
fnsave
pop
lods
ficoms
popl
inc
in
mov
push
xchg
mov
jnp
inc
pop
cwtl
or
cmc
cld
test
mov
or
jb
dec
clc
ja
push
movl
xchg
icebp
cmp
mov
push
mov
jne
pop
sub
jmp
arpl
out
mov
xlat
pop
subb
call
mov
fcoms
pop
pusha
enter
or
and
jb
push
inc
andb
sahf
rorl
out
dec
lcall
mov
jge
push
je
sub
push
mov
mov
ret
xchg
xchg
sahf
dec
call
xor
outsl
xor
pop
pop
push
push
roll
repz
frstor
push
testl
pop
les
xchg
das
aaa
jno
or
bound
jl
sub
dec
jmp
nop
mov
sbb
pusha
lods
pop
jno
cmp
jecxz
icebp
pop
jno
jg
cmp
in
loopne
xchg
xor
scas
sub
mov
mov
cmp
std
sahf
cli
dec
mov
jle
cmc
push
adc
dec
enter
test
lret
xchg
xchg
dec
or
jo,pt
mov
sarb
push
mov
ljmp
stos
dec
rol
mov
cmpsb
shll
sbb
fwait
pusha
lds
xlat
push
xor
dec
jbe
test
dec
movq
add
jmp
jnp
into
jg
aas
xchg
sub
insl
test
mov
jns
xchg
fwait
mov
imul
movsb
aaa
xor
pop
ljmp
lret
cmp
mov
mov
mov
jb
sub
fildl
daa
lret
jno
add
pop
hlt
jmp
dec
adc
cmp
cld
cmp
fcmovbe
cmp
lods
aaa
std
test
in
js
mul
add
sub
shll
in
scas
stc
mov
xchg
loop
dec
incl
jmp
faddl
insl
stos
cld
outsl
out
int3
push
repnz
sub
ret
adc
inc
adc
test
data16
lea
mov
sarb
and
mov
adc
xor
inc
scas
fs
add
or
xchg
xchg
sub
enter
mov
lock
mov
into
jg
jb
pop
aaa
rcl
mov
push
xor
fdivrl
push
push
jbe
xchg
mov
mov
out
xor
adc
jp
mov
jo
and
dec
mov
inc
jno
movb
adcb
mov
push
mov
inc
push
or
shl
mov
incl
pop
dec
mov
sub
outsb
rorb
dec
and
xchg
inc
push
ret
pop
popa
and
mov
xbegin
dec
mov
or
xor
movsl
jge
add
push
lea
jne
sbb
push
imul
jl
pop
je
divb
jo
adc
cwtl
popf
xchg
out
push
ljmp
mov
mov
mov
pop
cmc
clc
mov
jno
or
rcl
jge
insb
lcall
xchg
adc
es
cmc
inc
sub
xlat
and
ss
xchg
out
xor
das
adc
jbe
popf
aaa
fistpl
add
or
pop
adc
cmc
in
lcall
add
sbb
xchg
lret
lods
scas
jo
xchg
or
push
xlat
inc
ret
test
gs
jl
mov
adc
gs
jecxz
xchg
sub
xlat
rolb
add
mov
fsts
nop
xchg
cwtl
mov
sub
adc
rcl
jge
ljmp
cmp
in
loopne
call
movsb
push
xchg
pop
cltd
fistpl
cmpsl
inc
outsl
sbb
aaa
pop
push
enter
in
adc
xor
mov
cltd
push
js
push
and
lcall
sub
lea
int3
mov
xchg
test
fsubrp
jmp
jae
xchg
iret
gs
in
dec
cmp
movsb
sub
or
pop
xchg
insl
cmc
lret
pop
hlt
das
jg
rclb
mov
dec
dec
in
lea
gs
push
fldcw
outsb
dec
adc
cmp
jns
pop
outsb
addr16
push
jne
jg
inc
roll
das
shll
jl
push
push
movsb
mov
mov
mov
fs
jns
mov
leave
inc
mov
inc
das
inc
scas
mov
mov
xchg
sub
addr16
mov
and
dec
adc
lods
out
mov
cmpsl
push
test
mov
bound
pop
and
adc
lret
aaa
rcrb
sahf
jne
inc
test
mov
andl
std
mov
xchg
lods
test
test
jno
mov
add
jae
fimuls
jo
mov
add
neg
popf
lds
andb
pop
pop
push
mulb
loopne
insb
stos
repz
std
fmuls
imul
ret
out
sbb
jecxz
call
mov
xor
cmp
roll
fsubs
push
ror
les
shll
mov
data16
ljmp
pushf
loope
or
add
pop
jmp
sub
xlat
and
call
or
cwtl
push
mov
bound
lds
jno
aam
sbb
sbb
popa
data16
shlb
xor
cltd
xchg
xchg
mov
sbb
dec
push
jne
icebp
in
je
push
jbe
adc
js
jle
in
bnd
lods
sti
lods
fdivl
enter
mov
arpl
test
xchg
jp
add
mov
hlt
pop
shll
cwtl
rclb
pop
enter
ss
test
enter
jmp
dec
test
mov
clc
dec
xchg
pop
ljmp
fwait
loope
test
mov
push
push
sub
popa
push
mov
mov
enter
or
xchg
in
nop
fwait
mov
rorl
pop
mov
sbb
jb
inc
sbb
popf
jecxz
mov
je
pop
jns
pushf
cmp
push
lds
jle
jno
lea
add
pop
push
out
mov
mov
filds
ss
bound
inc
or
imul
jmp
lret
and
adc
push
jb
push
js
fldenv
inc
in
call
sbb
adcb
adc
fstps
fldt
fdivp
xor
mov
aad
pop
or
adc
repz
pop
out
mov
jno
lds
jle
or
repnz
in
jno
jns
enter
insl
fisubrl
sarb
mov
std
fs
adc
xchg
jnp
data16
push
test
mov
lods
cwtd
xchg
mov
ds
push
insb
and
or
or
fsts
push
aaa
xlat
mov
loop
int
incl
ret
lods
mov
jmp
jmp
aaa
in
xor
push
repz
jne
add
push
and
data16
push
outsb
subb
or
mov
in
pushl
loopne
rclb
push
outsb
add
adc
push
dec
andb
sub
jbe
jo
fcomps
mov
mull
xor
int
mov
out
pop
dec
orb
or
mov
and
idiv
xchg
lcall
pop
or
std
add
dec
pop
cmpl
add
push
sahf
cld
lahf
sub
or
cmpb
push
aaa
hlt
lret
cmp
cmp
push
sub
cli
insb
mov
and
sub
test
lock
outsb
in
pop
pop
repz
push
dec
int3
ret
ret
add
bound
jo
outsb
out
imul
mov
movsb
popl
sub
sahf
dec
jmp
mov
bound
shlb
test
jg
inc
pushf
and
push
outsl
out
shlb
cmc
stos
iret
mov
lcall
cli
movsl
push
mov
mov
out
nop
ljmp
mov
jb
dec
add
outsb
mov
addl
lds
movsb
loope
subb
jecxz
or
scas
jo
popa
pop
outsb
fadds
lock
push
xor
in
pop
aaa
sub
aam
lea
in
sbb
mov
sub
int3
xchg
push
inc
push
pop
and
ficomps
or
xor
shll
das
push
jne
dec
xchg
adc
mov
xor
mov
int3
cwtl
lahf
and
sti
jecxz
cmpsl
xchg
mov
pop
push
cmp
mov
in
sub
mov
scas
mov
and
push
add
lret
test
dec
push
and
fdivrl
jmp
mov
inc
ss
scas
push
or
mov
pop
inc
lahf
dec
cmc
mov
fwait
adc
bound
sbb
adc
hlt
mov
sbb
popf
push
jne
fiaddl
or
in
es
shlb
jl
adc
insl
outsl
cmpsb
jns
mov
inc
sahf
mov
pushf
dec
push
fildl
sbb
mov
xchg
pushf
jp
sbb
rcll
pushf
mov
jg
ret
sarb
loopne
bound
push
mov
pushf
and
xor
aaa
mov
mov
rol
test
rol
pop
pusha
in
aam
xchg
mov
or
out
les
in
mov
push
mov
insb
xchg
fisttpll
mov
adc
repz
sti
xchg
or
cmpsb
inc
jmp
popf
movsl
cli
cmp
xchg
jb
adc
jns
cmp
dec
or
incb
inc
jae
pop
lret
pop
dec
dec
inc
jmp
pop
adc
call
aaa
mov
push
xor
mov
mov
xor
inc
adc
in
inc
popf
adc
int3
jl
sbb
mov
xchg
dec
and
movsb
cmpsl
aas
daa
pop
xor
adc
cld
into
fsubrl
push
or
mov
imul
xchg
fs
xor
mov
movsl
sub
mov
cmpl
roll
aaa
adc
dec
xchg
xchg
jmp
rolb
jp
cmpsb
test
cmpsl
ret
out
cmp
negb
mov
leave
dec
sti
shll
shll
aam
inc
mov
inc
cmpsb
mov
dec
jne
pop
arpl
fldenv
add
test
pop
pop
stos
or
ss
push
and
push
and
ss
sbbw
xchg
pop
lret
cmp
shll
nop
mov
xchg
inc
je
movsl
into
mov
hlt
jl
repnz
mov
in
aam
iret
es
insb
out
mov
imul
imul
sub
sub
push
fistpll
pusha
enter
jb
mov
jg
pop
jbe
fcompl
in
std
mov
adc
sub
push
pop
cmc
ror
fisttpll
aas
cmp
adc
xchg
aad
and
xchg
fisubrl
das
je
sbb
add
int3
lret
dec
cld
daa
cmp
jge
jecxz
and
mov
and
cli
dec
adc
cmpsb
mov
notb
loope
cwtl
adc
mov
mov
fsubr
pop
xchg
lea
arpl
shl
cmpl
scas
mov
divb
cmpsb
xchg
jg
add
sbb
sbb
push
cli
add
jbe
cs
inc
loopne
mov
js
sub
dec
in
int3
and
cmp
lahf
mov
adc
clc
xor
or
imul
int
cltd
hlt
xor
sahf
add
pop
xorl
arpl
mov
mov
into
lock
pop
insl
data16
inc
jns
mov
data16
je
stc
je
pop
add
iret
jnp
dec
sbb
loopne
pop
faddl
cs
imul
and
popf
sbb
pusha
popa
inc
popf
es
lahf
or
sub
out
push
test
pop
addr16
pop
pop
pop
mov
lcall
push
fcompl
iret
push
push
jnp
ret
xchg
sub
push
fs
in
add
xchg
push
sbb
xchg
mov
mov
pushf
mov
xchg
sub
mov
rcrl
rcll
cld
in
je
sbb
lods
lods
cmpsb
hlt
cld
les
add
loop
je
ljmp
or
imul
or
js
fistps
addr16
mov
ret
shll
cmp
mov
outsb
ds
cld
jp
mov
xor
adc
inc
inc
iret
cmp
add
dec
pop
jne
jae
mov
test
andl
repnz
mov
pop
out
test
xor
inc
cmp
hlt
mov
jle
or
add
cli
test
arpl
adc
cmp
jne
notb
iret
scas
gs
pop
xor
push
jge
jl
aas
mov
out
dec
cmp
out
lahf
jl
ljmp
sub
sbb
inc
mov
ljmp
imul
lret
arpl
aad
mov
inc
xor
push
xchg
lock
pusha
inc
push
insl
mov
jg
cmc
sarl
inc
jmp
iret
cmp
lret
and
test
push
cld
adc
dec
lock
call
jg
cmp
inc
cmp
adc
dec
mov
jmp
stc
mov
pusha
fwait
in
cmp
dec
in
call
and
inc
add
imul
sbb
rclb
sub
sub
into
imul
jae
sbb
cwtl
sbb
lods
jo
and
in
aaa
fnsave
xchg
das
mov
arpl
push
ficoms
lahf
nop
mov
aad
and
int
mov
in
aas
mov
lret
icebp
and
jnp
or
fdivp
sbb
jle
enter
mov
jp
mov
sbb
lods
rol
js
aaa
push
and
and
hlt
cld
dec
mov
test
xchg
aam
adc
pusha
add
inc
rorl
xor
fwait
push
inc
cmpsb
pop
jnp
out
xchg
push
outsl
push
adc
xor
adc
enter
aas
and
xchg
or
ja
xor
repz
lock
mov
outsl
test
dec
xlat
xor
cld
adc
out
testb
add
push
rcrl
das
inc
or
je
adc
lahf
push
pop
cvtdq2ps
arpl
outsl
stos
jp
sub
or
dec
dec
inc
push
stos
cmc
test
pushf
mov
insb
lret
push
xchg
jl
insb
add
addr16
cmc
lock
ss
popa
and
jae
cmova
out
fldenv
inc
jbe
mov
pop
xor
mov
inc
and
inc
fsubrs
mov
jl
dec
cmp
pushl
and
adc
xor
push
movsl
aaa
fdivrs
rorb
jns
xchg
xor
push
mov
xchg
cltd
movsl
inc
je
gs
sbb
cmp
cmp
and
int3
mov
pop
mov
push
aam
mov
xchg
pop
pop
mov
push
dec
je
sti
lods
jecxz
jns
aam
xor
std
push
rcll
nop
jbe
repnz
dec
out
cmpsb
mov
mov
jne
xchg
loope
cmp
push
testb
mov
aam
movsb
mov
push
lcall
sbb
push
and
mov
pop
inc
shlb
outsl
int
popa
pop
orb
push
push
jle
inc
cs
mov
pop
jge
add
outsl
enter
loopne
sub
xor
push
movsb
jmp
es
adc
pop
add
mov
repnz
mov
mov
out
js
mov
sar
cwtl
ljmp
or
sarb
sbb
nop
or
test
sbb
mov
lods
jle
push
mov
jl
dec
das
jp
inc
add
ficoms
add
loop
cmpb
and
lcall
lcall
bound
imul
xlat
xchg
jl
fs
sarl
psubsw
dec
cmp
aam
pop
xchg
cmc
frstor
and
in
pushf
pushf
and
pop
dec
mov
xlat
jno
stos
push
jge
dec
lea
jb
jo
mov
xlat
mov
rep
and
cltd
pop
pushf
mov
mov
mov
jns
jbe
aam
fldt
pop
xor
push
mov
cmpsb
aam
jle
and
adc
mov
cmp
decl
imulb
imul
inc
mov
add
out
mov
push
adc
or
cmp
pusha
inc
jns
or
test
lahf
in
xor
xchg
and
mov
dec
into
pop
mov
addr16
sub
add
cmpsb
loopne
pushf
cmpsl
cs
jne
shrl
decb
loope
mov
jne
cmpsl
lcall
cmp
xchg
lea
mov
loop
sub
data16
mov
repnz
cmp
in
cmp
push
pop
dec
test
test
loop
dec
jg
shrb
push
mov
or
sbb
sub
xor
push
and
pop
loope
aaa
lahf
arpl
pop
test
stos
jge
mov
and
repnz
xor
pushf
cmp
daa
out
lock
into
int
in
fbld
fs
fmuls
loop
and
mov
mov
lret
in
inc
mov
inc
movsl
insb
mov
jno
je
fcoml
add
lret
shlb
mov
and
hlt
lahf
or
push
clc
jl
in
or
inc
subl
jl
in
pop
adc
dec
xor
inc
icebp
inc
aam
jno
xlat
das
dec
rolb
and
nop
hlt
sub
pop
stos
push
sub
jbe
fwait
cs
aam
inc
test
lret
mov
lock
adc
push
sub
mov
js
xor
scas
xorb
mov
xchg
jb
mov
iret
mov
push
mov
repz
cmp
fdivs
addr16
jmp
cmp
loope
rcr
inc
push
lods
loop
xor
xchg
push
sbb
push
test
mov
mov
lods
pop
aaa
mov
jp
and
leave
addr16
out
adc
mov
je
daa
cmp
fmull
aad
cmp
push
cmp
pop
aaa
adc
rcrb
retw
dec
repnz
hlt
cld
in
pop
ja
mov
xor
test
fists
fs
pop
mov
sarb
sbb
mov
push
fsub
dec
mov
scas
mov
ja
out
or
push
imul
xchg
cmpb
dec
inc
xchg
pop
das
push
mulb
jne
lods
add
inc
inc
xor
ja
and
int3
xchg
loopne
cmp
lcall
xchg
jge
or
aam
push
push
or
cmp
lcall
inc
cltd
nop
sub
js
jp
mov
push
push
aas
pop
push
leave
or
ja
adc
jmp
or
fcomps
out
fs
cmpb
xor
sahf
jge
call
mov
xor
les
cmp
sbb
push
js
sbbl
fadd
inc
ss
movsb
jmp
test
ret
jmp
outsb
leave
testl
loop
mov
out
or
gs
cltd
mov
neg
jns
adc
test
xor
dec
into
mov
push
addl
ss
sub
pop
and
dec
imul
jae
hlt
pop
int3
inc
mov
cmc
cmp
in
jl
fmull
sub
mov
xchg
daa
icebp
inc
pop
rclb
push
mov
cmpl
xor
addr16
xlat
int
dec
imul
repnz
jl
mov
testb
jl
ja
mov
sahf
mov
inc
and
aam
xchg
ret
fnstcw
mov
adcl
sbbl
faddp
inc
test
out
jbe
scas
inc
in
rolb
xchg
aas
testb
xchg
lahf
pop
push
mov
or
nop
jne
xchg
mov
dec
cmp
or
xor
dec
lret
add
mov
xchg
scas
sarb
inc
xchg
enter
fistpll
shlb
inc
pop
push
mov
jo
sub
insl
mov
fs
mov
stos
jno
mov
dec
test
ss
adc
add
clc
and
xchg
ret
dec
popf
iret
and
outsl
into
insl
jp
sub
inc
or
push
add
add
cld
and
mov
stos
fidivrl
aam
mov
mov
inc
xchg
xchg
jbe
xor
movsl
push
out
cmp
xchg
rolb
popa
adc
gs
push
pop
mov
cmpsb
enter
or
lcall
lea
jns
mov
jmp
int3
andl
or
and
inc
movsb
inc
xlat
push
fnstcw
inc
into
ds
ss
outsb
fisubs
lods
xor
sbb
adc
push
aam
repz
out
sub
and
lret
sub
fisubrs
loope
lea
bound
lret
dec
xor
cmp
nop
lcall
inc
sub
mov
sbb
pushf
cmp
xorb
fists
in
popa
mov
int
mov
rcl
push
mov
mov
lahf
idivl
iret
adc
mov
pop
sahf
or
fwait
add
out
adc
leave
inc
imul
or
mov
dec
pop
andl
and
cmc
push
call
mov
mov
mov
jne
cmp
dec
aam
xor
xor
sub
into
fmuls
clc
lcall
push
add
cmc
ja
push
mov
insb
jae
dec
pop
pop
cmp
cmp
imul
mov
push
arpl
sbb
mov
pusha
gs
push
lods
push
cli
sub
jb
mov
mov
add
call
aam
in
mov
lcall
and
push
cmp
xchg
and
mov
test
mov
mov
pop
mov
inc
xor
mov
out
cwtl
cmp
lea
cmpl
pop
push
push
jb
stos
sbbl
insl
push
dec
out
mov
lods
loope
mov
in
mov
and
mov
in
nop
push
js
push
repz
leave
aam
pop
iret
pop
mov
loop
cmp
iret
xchg
mov
sbb
sub
xor
push
shlb
rorb
xchg
push
sub
sbb
pop
in
xor
add
inc
xor
int3
add
bound
xchg
xchg
scas
dec
iret
das
sbb
inc
and
vphaddbw
mov
into
mov
jecxz
loope
mov
jp
dec
pop
fs
in
lock
rcr
bnd
mov
cmp
movsl
xor
push
dec
inc
lds
lcall
push
loopne
in
aad
mov
lea
mov
in
or
xor
inc
dec
inc
int
mov
popa
sti
and
nop
cld
ljmp
add
lcall
dec
mov
xchg
insl
je
fidivs
jp
dec
out
cmp
jb
lds
stos
mov
dec
xchg
aaa
jne
push
xor
mov
mov
inc
sbb
dec
inc
insb
cmp
jns
or
pop
add
inc
pop
ja
addb
fdivs
fisubrs
push
xor
sahf
movsb
sbb
mov
dec
or
sbb
jp
inc
inc
mov
dec
or
or
test
test
aas
xchg
sbb
inc
xchg
xchg
cmp
fcmovb
fs
jg
jbe
xchg
add
out
lods
mov
imul
push
and
sub
mov
mov
std
adc
jo
cmc
sub
add
pop
call
xor
cmpsb
adc
sbb
xchg
popf
push
push
inc
pop
or
or
ffreep
fistpll
test
inc
dec
aas
push
cmc
cmpsl
in
or
daa
sbb
out
insl
lret
lds
out
jb
orl
data16
sub
mov
loope
sbb
pop
mov
rorb
sbb
imul
cmp
movsl
out
sti
icebp
orl
lahf
int
adc
lcall
push
ret
into
and
cmp
je
stc
sahf
lods
jae
mov
dec
xchg
repz
inc
dec
fdivp
pop
xlat
imul
sub
lahf
or
cmp
shrb
int
loopne
adc
mov
stos
loope
aam
bound
and
data16
cld
mov
lds
inc
loope
pop
subl
jbe
or
inc
rorl
jb
insl
fisubs
push
jae
outsb
mov
dec
pop
adc
out
sub
inc
and
push
and
fwait
cmp
xor
mov
push
xchg
or
cmpsl
dec
push
clc
mov
fsubs
mov
pop
dec
cmp
andl
lock
mov
cmpsl
xlat
and
dec
movsb
pop
or
mov
int3
cwtl
mov
fwait
dec
pop
adc
push
add
scas
jne
lods
mov
sbb
js
xor
iret
divps
mov
das
sbb
inc
dec
inc
sub
lahf
scas
xor
mov
add
sub
mov
sub
xchg
cmp
and
push
mov
icebp
xchg
lods
push
stos
sbb
fldenv
fstpt
cmp
out
gs
and
lea
subl
aaa
cmp
mov
cld
and
lahf
fsubl
add
ja
xor
jne
into
or
sbb
in
push
jnp
xlat
addr16
adc
inc
call
hlt
pop
aaa
test
out
and
mov
aad
adc
repnz
mov
pop
fcmovnbe
mov
mov
or
pop
push
cmp
ss
cli
mov
xor
dec
adc
or
xor
xchg
jns
add
clc
in
repz
sti
loopne
lahf
jne
popa
sahf
jp
and
mov
nop
xchg
ja
jp
add
push
stos
lret
dec
leave
lret
pop
clc
in
out
test
pop
push
mov
adc
inc
xchg
dec
push
jo
adc
fildll
mov
ficomps
test
aam
jno
jle
fidivs
stc
enter
bound
or
int
sub
pop
jno
cmp
fnsave
push
cwtl
push
inc
js
and
and
popf
jle
xchg
lret
stos
repnz
std
ljmp
cmp
cmp
inc
jo
add
sbb
lcall
int3
pop
negl
movb
inc
cwtl
negb
call
sbb
add
dec
ja
std
fidivrl
aas
aas
mov
ficoms
inc
cmp
add
fcompl
les
out
iret
loopne,pt
notb
mull
sub
enter
and
addr16
mov
mov
inc
lret
sbb
adc
sub
pop
lahf
sbb
xchg
clc
cld
rclb
call
cmpsl
int3
test
push
cli
lahf
push
mov
mov
fdivl
aas
arpl
mov
push
xor
push
fwait
push
sbb
dec
rol
push
cwtl
cld
adc
in
jns
jle
jae
subl
in
jo
push
sbb
daa
cmpsb
jbe
and
xchg
cmp
add
into
xor
loop
and
inc
clc
cmpsb
call
icebp
and
lock
and
testb
call
mov
in
dec
aaa
mov
xlat
adc
jp
in
xchg
mov
xor
sub
jo
int
jmp
lds
or
jle
inc
and
push
test
add
mov
cmp
xchg
cmpsb
push
enter
mov
cmp
pop
fidivrl
mov
aaa
out
and
cwtl
out
fistpl
lcall
jmp
fs
and
je
sub
dec
cmp
push
cli
adc
cs
or
mov
push
popf
dec
stc
jae
cmp
mov
mov
xchg
stc
jno
adc
lock
and
adc
imul
clc
pop
push
push
out
lds
mov
dec
mov
movsl
in
push
out
xor
xor
mov
sbb
pop
daa
cmp
jg
jbe
mov
xor
loopne
ficomps
and
mov
stos
mul
mov
aam
rcrl
sbb
xchg
ret
sbb
pop
inc
jecxz
shll
push
or
lret
dec
add
lcall
inc
cs
mov
xor
call
outsl
popa
sub
or
xor
jne
sahf
lret
shll
insl
and
arpl
int
mov
stos
dec
in
adc
pop
adc
push
sbb
xor
cmp
jg
nop
test
pop
testb
fstl
into
push
cwtl
dec
push
cmp
arpl
pop
lret
jno
out
xchg
or
repz
movsb
aas
lock
ret
mov
push
ret
aaa
ja
adc
xor
sarb
into
cs
and
xor
loop
mov
sahf
hlt
lea
mov
pop
dec
inc
adc
xchg
cmp
mov
xchg
clc
mov
xchg
fidivl
repz
sar
sahf
test
out
mov
nop
cltd
mov
mov
jb
aam
adc
cli
js
push
xchg
loop
inc
pop
test
lods
pop
cmp
test
cmpsb
sub
ret
adc
rorl
mov
fsubr
and
pop
mov
pop
cmpsl
or
test
mov
inc
jb
jg
inc
pop
dec
and
jmp
jbe
add
push
test
sbb
cli
and
and
lods
pop
inc
inc
cmpsl
les
cmp
xchg
pop
mov
lea
outsb
imul
repz
or
sub
lahf
daa
pop
je
sbb
sbb
add
int
xchg
pop
jp
mov
rclb
pushf
mov
inc
jp
les
jae
gs
inc
fadds
mov
dec
jge,pt
push
and
pop
jae
xor
ss
icebp
jg
adc
pop
pop
dec
pusha
and
mov
pusha
push
or
sbb
cmp
das
lds
lock
movaps
xchg
sbb
mov
shlb
pusha
pop
repnz
incl
insb
xor
ror
ret
push
imul
sub
aaa
int
repz
dec
jl
pop
cmpb
xchg
push
pusha
jno
push
or
fstl
pop
mov
lret
das
ret
inc
lods
test
or
mov
inc
push
xchg
jle
mov
dec
clc
cltd
xchg
jo
sbb
push
ss
xor
fadds
or
xorb
xchg
clc
idiv
call
and
clc
push
popa
lock
pop
inc
fstpl
fadds
repnz
out
ret
cltd
sbb
imull
cwtl
cmp
jb
es
push
add
push
jge
mov
std
push
inc
or
aas
ds
inc
inc
lods
jmp
jp
cmp
je
vsqrtsd
mov
es
call
sbb
mov
lock
das
add
fcomps
cmp
int3
hlt
lahf
mov
dec
push
loope
inc
lock
nop
movsb
popf
jbe
inc
hlt
inc
pop
aad
cmp
lcall
mov
iret
mov
lods
mov
mov
mov
inc
jns
int3
push
jg
ret
bound
sbb
or
sub
or
sbb
clc
mov
filds
sub
dec
sti
cmc
dec
in
and
ret
or
push
mov
fidivrs
lret
loope
not
cmpsl
xor
inc
pop
in
add
data16
das
rcr
add
cmp
sbb
push
inc
mov
mov
inc
add
xchg
jle
fdivs
adc
daa
mov
icebp
negb
shlb
xorl
inc
out
jno
aam
push
stc
sbb
clc
jb
jbe
loop
pop
cli
cwtl
adc
out
cmpsb
xor
xor
int3
xchg
pop
cmpsl
adc
jge
stos
imul
or
popf
and
bound
fsubrs
scas
cs
mov
sbb
push
and
sub
stos
cmp
lahf
in
sbb
push
mov
mov
nop
dec
mov
sahf
pop
inc
dec
sbb
dec
in
sahf
mov
in
das
fincstp
xor
inc
mov
frstor
jl
mov
jnp
test
jb
and
dec
adc
sti
mov
and
lahf
aad
or
mov
inc
xlat
arpl
adc
pop
xor
pop
aad
pavgb
stos
mov
pop
xchg
je
popf
adc
mov
mov
test
rorb
mov
jae
sub
and
fucompp
enter
ret
mov
lea
mov
dec
xorl
mov
pop
lahf
inc
scas
mov
cli
rcrb
clc
sub
xlat
xor
mov
push
mov
fwait
mov
addr16
sbb
lock
xchg
pushf
pop
push
xor
add
or
pop
mov
fwait
add
mov
jb
sbb
mov
enter
imul
sbb
fsubr
and
xor
push
into
addl
xchg
lcall
scas
xchg
xchg
and
mov
sub
cmp
add
popf
aad
sbb
popf
fstl
add
arpl
xor
sub
pop
ficoms
test
je
push
loope
cmp
inc
push
daa
mov
mov
nop
das
add
cmp
cli
mov
inc
imul
xlat
aaa
xchg
inc
test
cs
ds
and
xchg
xor
loop
pop
or
jg
cmp
aad
dec
jg
stos
xor
cmp
out
mov
dec
mov
dec
add
test
cmp
xchg
repnz
fidivrl
cmp
push
mov
cmp
dec
cmpsb
push
fisubrs
data16
pop
lahf
jp
cmp
inc
loop
sbb
js
adc
sbb
arpl
xchg
movsb
adc
faddl
lods
frstor
outsl
sbb
xor
leave
fisubl
mov
xor
inc
xchg
mov
dec
cmpsl
rclb
sbb
gs
repnz
push
fcoms
lret
add
push
dec
and
ficompl
mov
aaa
xor
xchg
arpl
pop
sub
add
jb
mov
xchg
stos
sbb
les
mov
or
and
add
mov
repz
dec
imul
mull
out
cmpsb
or
mov
xor
xchg
test
jle
dec
aas
es
roll
movsb
les
mov
jns
dec
shll
lock
cld
jne
add
adc
dec
sbb
popf
mov
sub
fldl
pop
adc
dec
dec
jne
cltd
adc
push
lret
pusha
addr16
outsb
popa
push
ljmp
add
sete
lods
xchg
xor
inc
or
add
repnz
mov
stc
outsb
xchg
fcoml
mov
outsb
mov
js
repnz
jo
insb
xor
cmp
xchg
sub
sbb
or
movsb
fcoml
sti
cmp
pop
mov
mov
adc
aam
test
imul
inc
cmp
pop
or
and
mov
dec
pop
xor
inc
daa
test
push
inc
das
pop
xchg
cmc
add
sahf
fwait
gs
insl
adc
and
xchg
imul
jae
dec
call
xchg
imul
sbb
mov
fisubrs
xor
pop
rcl
xor
dec
and
push
pop
pop
add
pop
mov
mov
mov
add
mov
idivb
pop
add
fwait
scas
fildll
lds
jp
aam
insb
bound
mov
mov
pop
mov
jb
jb
rorl
xchg
enter
push
imull
popf
jle
outsb
fstps
nop
lret
test
jg
pop
pop
cmp
jno
imul
sbb
mov
popa
ret
rcl
jne
xor
dec
sub
fdivr
stos
lret
and
mov
adc
push
push
sub
lods
test
sbb
ret
mov
sub
out
adc
add
inc
test
call
sbb
push
mov
in
icebp
cwtl
scas
xchg
xchg
mov
add
nop
les
pop
xor
push
sub
mov
lahf
popf
mov
lcall
ss
das
leave
jmp
pusha
jl
mov
and
jmp
nop
dec
inc
pop
lahf
dec
inc
lods
lods
mov
cmp
test
pop
pop
jb
adc
sarl
mov
test
push
popa
rcr
int
and
or
es
adc
stc
out
mulps
mov
and
add
xor
test
sbb
pop
sbb
pop
ja
subl
and
jmp
pop
test
jnp
sub
sbb
sbb
push
mov
lret
iret
mov
fmuls
mov
shr
enter
in
and
fnsave
push
mov
pusha
dec
xor
mov
jb
out
fs
cmp
mov
and
and
jnp
push
daa
push
dec
add
push
fdiv
cmp
xor
lock
roll
adc
sub
repnz
mov
xchg
insb
sti
fistpl
sbb
jl
cli
push
mov
movl
sbb
ror
je
cmp
sub
stc
insl
push
stos
shlb
inc
adc
cwtl
lods
push
nop
lcall
push
ret
arpl
sub
dec
cmp
cltd
cmp
dec
mov
lret
call
test
mov
sbb
fiaddl
cli
fs
dec
cmpsb
push
fwait
cmpsl
pop
mov
in
sbb
aad
aam
push
xlat
xor
imul
in
data16
push
mov
jmp
stc
add
pop
shrl
pop
ja
dec
sub
subb
xchg
fld
lret
aaa
xor
mov
jae
sub
pop
dec
push
mov
jns
pop
push
push
mov
xor
in
hlt
lods
jbe
mov
pop
mov
xlat
dec
inc
not
in
push
js
mov
lret
add
and
testl
fs
mov
les
movsl
fidivrl
push
mov
dec
pop
jae
cmp
dec
mov
jmp
popl
mov
cli
mov
in
inc
sub
cmp
cmp
test
jge
in
push
mov
imulb
idiv
push
push
mov
sub
aas
pushl
adc
test
icebp
movsl
jmp
int3
fwait
dec
jg
cmp
imul
je
aaa
sbb
mov
dec
jecxz
adc
add
ljmp
and
das
outsb
int
cld
out
out
lock
sbb
adc
fstpt
test
jp
insl
mov
js
mov
sub
push
loopne
mov
scas
orb
sub
add
jmp
nop
jecxz
dec
mov
xchg
adc
sub
scas
push
cmp
dec
scas
mov
adc
ljmp
mov
addr16
or
mov
scas
gs
xor
jo,pn
fwait
jle
add
or
fsts
sbb
mov
mulb
repnz
das
mov
or
dec
adc
inc
jbe
fmuls
in
inc
popf
scas
in
or
xchg
aaa
stc
outsb
mov
out
fistl
outsl
jp
xchg
pop
call
loop
dec
mov
lods
into
mov
ret
test
into
loopne
scas
pusha
stos
test
les
lahf
fsts
pop
gs
mov
jb
and
inc
push
insb
test
mov
xlat
xchg
aas
test
push
lea
test
push
cmpsb
adcl
ds
jecxz
inc
jns
sbb
xchg
loopw
adc
psllq
mov
push
xchg
cwtl
cmpsl
mov
sub
movsb
adc
cmpsb
jmp
into
and
cmpsb
cltd
sahf
mov
subl
push
jbe
rcrb
sbb
dec
cld
or
mov
lcall
pusha
mov
xchg
add
out
dec
mov
sbb
push
adc
mov
enter
and
aaa
mov
popa
xor
mov
xchg
pop
cmp
mov
cmp
xorb
outsb
iret
out
pop
jns
jge
push
fidivrs
mov
xchg
sbb
and
out
sbb
nop
push
insb
loop
in
inc
lret
fwait
xchg
fs
je
adc
mov
pop
sbb
push
sub
inc
xchg
andl
addr16
mov
jbe
xor
loope
inc
cmp
jne
push
pop
inc
testl
out
fildl
movb
xor
imul
es
cmpb
cwtl
pusha
lods
xor
call
imul
lret
aad
pop
xchg
fs
sarl
mov
and
popa
stc
push
data16
into
jmp
push
cmp
dec
pushf
mov
xchg
loop
push
cmpsl
aam
xchg
lea
pop
bound
rcll
enter
out
mov
or
lods
jmp
jae
sub
out
inc
pushl
pop
enter
aad
enter
pop
pushf
shll
lcall
divl
icebp
sti
xchg
popf
repnz
loop
mov
out
or
adc
or
shlb
testl
dec
sbb
push
inc
or
fistpll
xor
fstps
adc
int
xlat
and
cld
xchg
jge
lahf
rcr
mov
loopne
insl
or
iret
sub
sub
movsb
xlat
mov
in
addb
adc
add
inc
xor
shlb
loopne
jns
aas
xlat
popa
mov
cltd
sub
fcom
dec
and
mov
jg
sbb
dec
test
pop
xchg
hlt
mov
jl
push
inc
sbb
cmp
dec
pop
aam
push
fiaddl
movsl
cmp
xchg
loop
mov
repnz
push
fstpl
sub
outsb
ja
cmp
xchg
lock
jno
subl
into
adc
add
cmp
sbb
addr16
and
mov
jns
mov
in
pop
int
add
pop
ja
enter
jo
mov
jecxz
mov
push
test
ljmp
inc
adc
outsl
popf
shr
xchg
aad
ret
aaa
mov
xlat
lahf
xchg
push
sti
pop
pop
cmp
mov
rolb
pusha
aas
popf
jnp
aas
movsb
cld
cli
adc
push
sti
xor
mov
cmp
jno
lahf
ljmp
jle
mov
xor
cmp
adc
and
jo
daa
mov
sbb
cmp
shll
mov
jl
insb
and
push
fcmovbe
sbb
xchg
dec
sub
dec
mov
pop
ja
stos
mov
arpl
mov
pop
lret
cmp
xor
test
mov
lret
or
inc
or
pop
xchg
pop
dec
dec
cmpsb
aam
mov
pusha
jg
les
js
and
cmpsb
lret
adc
push
pop
cli
sbb
pushf
cwtl
xchg
lret
sahf
mov
or
call
sub
cli
push
mov
shll
out
out
and
test
or
shlb
cmc
enter
pop
out
mov
xchg
dec
das
or
adc
push
mov
cmp
mov
hlt
imul
jg
lahf
insl
cmpsl
test
jno
pop
jle
sub
fistps
cmc
jno
jae
mov
xchg
inc
push
daa
or
mov
jge
imul
xchg
sbb
mov
mov
pop
lods
jns
xchg
sbb
and
jle
les
in
jo
rorb
gs
sub
outsb
xlat
stc
add
fistl
mov
out
inc
cltd
xchg
push
ljmp
mov
mov
dec
out
sbb
rol
dec
imul
mov
out
xchg
push
inc
ljmp
sub
adc
sub
mov
fsubrl
cmp
incl
xlat
lock
repz
rol
out
xchg
clc
nop
ret
fisubrs
adc
push
cmpsl
outsl
ficompl
mov
out
fwait
pop
sbb
pop
adc
popf
aad
xor
aaa
inc
pushl
pop
add
mov
repnz
mov
ljmp
je
rcl
dec
repnz
addr16
xor
enter
dec
cmp
lods
xchg
jmp
stos
dec
push
push
inc
test
sub
push
mov
sahf
or
jbe
roll
dec
push
leave
or
lea
mov
push
pop
cmp
push
andl
shll
adc
mov
outsl
cli
mov
sbb
shr
aas
adc
inc
mov
push
popw
adc
subl
sbb
test
arpl
push
insl
jge
push
jmp
xor
hlt
minps
scas
in
push
push
iret
xchg
lcall
push
cs
mov
jbe
add
stos
mov
rcr
add
in
add
orl
mov
sbb
pop
push
je
pop
pop
and
cmc
push
leave
jecxz
sub
dec
lahf
hlt
sub
mov
xchg
mov
jge
enter
popf
xor
mov
icebp
out
inc
mov
sbb
jmp
notl
mov
push
addr16
and
incl
pusha
test
gs
enter
movsb
icebp
jmp
mov
dec
int
test
adc
pop
sbb
pop
xchg
xchg
das
leave
cwtl
jecxz
outsl
in
fnclex
dec
daa
push
hlt
lcall
test
les
fildll
jnp
pop
arpl
adc
mov
or
nop
cmp
stos
in
imul
xchg
xchg
push
sbb
push
adc
repz
xchg
aaa
xchg
lcall
daa
mov
cmp
mov
xchg
jne
insl
push
mov
mov
scas
scas
add
repz
xchg
and
daa
movsl
cmp
cwtl
jle
cmp
lods
dec
repz
lock
in
int3
data16
pop
adc
push
xchg
jno
adc
int3
daa
mov
xchg
je
out
pop
std
mov
pop
mov
imulb
pop
mov
xor
cs
jl
push
bound
xchg
or
stc
lea
movsb
jae
shl
cmpb
fidivrl
stos
push
fisttpl
add
loope
fisubrs
orl
push
mov
stc
ljmp
loope
fldenv
loope
ds
mov
aam
movsb
mov
imul
loope
adc
mov
outsb
aad
imul
mov
cmpsl
popa
mov
es
xor
into
lea
add
in
loop
lahf
movsl
inc
shll
lea
mov
mov
xor
mov
lods
mov
fbld
mov
jae
or
lret
add
popf
lahf
mov
sub
sub
pop
push
mov
out
push
and
leave
daa
orl
xchg
jo
mov
mov
mov
push
fwait
in
cmp
inc
call
mov
imul
jnp
sbb
into
push
mov
fnsave
mov
dec
in
sub
xor
icebp
pop
pop
lea
test
ja
dec
jg
or
addr16
scas
push
add
ret
rcrl
es
or
adc
ds
xor
mov
icebp
jno
outsb
nop
ss
pushl
mov
mov
dec
imul
cmpsl
sbb
notb
out
push
add
mov
in
cmp
out
cli
in
or
push
adc
jle
xlat
push
stos
or
mov
iret
inc
scas
and
les
mov
js
sub
and
push
outsl
fs
xchg
inc
pop
addr16
dec
dec
push
fldl
xchg
inc
xor
nop
ret
js
rcrl
inc
daa
sbb
and
scas
cmp
cmp
inc
jge
leave
sbb
xor
jmp
lret
or
lock
push
sbb
data16
call
adc
rcrb
aas
jno
cmp
sbb
roll
jp
lcall
out
sub
xchg
nop
mov
cmp
xchg
adc
sub
out
test
fsubl
imul
and
imul
insb
and
xchg
pop
sub
jecxz
test
push
jg
ret
in
lcall
outsb
xchg
pop
test
test
leave
std
into
dec
xor
scas
cli
and
aad
cmp
dec
jge
sti
xchg
daa
adc
jge
pop
clc
test
movsb
jg
dec
push
je
pop
mov
lods
xor
xor
insb
and
xor
fs
andl
repz
stos
js
xor
dec
cwtl
sub
call
pop
lea
mov
sub
movl
adc
outsb
mov
push
mov
call
mov
inc
jae
and
iret
mov
jmp
cmp
imulb
jns
out
push
xchg
add
pop
cld
mov
daa
aad
in
adc
lcall
pop
xor
or
repnz
lret
imul
cld
xor
lds
or
shrl
cvttps2pi
loope
aam
cmp
std
in
and
pop
inc
push
and
in
std
sbb
push
out
jmp
addr16
push
or
in
adc
decl
in
imul
es
loopne
enter
outsl
or
xchg
lcall
xor
adc
mov
in
mov
xor
jb
cmc
mov
lret
mov
rorb
pop
fwait
mov
inc
xor
in
mov
cs
scas
outsb
orb
jge
sbb
cwtl
ret
jmp
shlb
inc
scas
mov
iret
jl
adc
xchg
div
out
xor
int3
xchg
inc
rolb
pop
out
clc
aam
cmpsb
movsl
in
mov
or
jmp
dec
ss
insl
xor
jne
mov
mov
int
mov
dec
imul
ret
sahf
in
or
xlat
cmp
jno
jnp
pop
hlt
aaa
lret
movsl
adc
dec
popf
andb
xchg
or
jne
aaa
push
das
mov
rorb
lret
aas
in
fiadds
repnz
jb
insl
arpl
in
dec
icebp
nop
sahf
sbb
ljmp
imul
adc
and
mov
gs
mov
inc
shll
sbb
add
add
daa
xchg
jbe
repz
in
gs
lods
mov
sbb
repnz
dec
ret
dec
jo
aad
fidivrs
je
outsl
repnz
jo
push
pop
and
lods
xor
pop
daa
push
jb
dec
fsubp
mov
sub
jge
xor
jl
out
and
clc
movsl
or
neg
js
addps
imul
aam
and
loopne
out
mov
sub
sub
negl
fsubl
or
add
mulb
adc
xor
cltd
xchg
in
je
outsl
in
xorl
outsl
imul
ficoml
and
cmp
cmp
mov
lds
cmp
shl
push
imul
dec
pop
cld
mov
sub
xchg
fstpl
ja
pop
pop
mov
lods
sbb
or
dec
jno
aas
sub
pop
pop
hlt
pop
out
xor
addr16
dec
or
test
add
cmp
jae
into
insb
outsl
push
sbb
push
push
aaa
daa
stc
in
mov
sbbb
adc
mov
adc
adc
andb
mov
adc
jle
les
mov
dec
into
push
stos
mov
lahf
lock
mov
pop
fs
mov
fadd
hlt
xchg
xchg
mov
dec
insl
push
lcall
dec
enter
sub
xor
in
push
fs
int3
or
testb
out
add
push
stc
ror
loopne
je
movsb
mov
pusha
push
das
insb
lret
shl
int3
fwait
pop
push
pop
adc
inc
cmpsb
push
mov
in
pop
dec
outsl
pop
sub
adc
mov
jae
pop
mov
pop
rcpps
lcall
jo
adc
rolb
mov
addb
in
daa
arpl
leave
rol
adc
or
aad
add
mov
repz
jb
sbb
and
mov
jg
fstpt
or
push
shrl
cld
xchg
push
out
lds
hlt
rol
rolb
sub
inc
sub
or
mov
dec
jle
ljmp
mov
mov
les
xor
dec
into
xchg
or
jne
aam
dec
mov
pop
pusha
mov
loope
pop
inc
xor
and
jmp
push
cwtl
loope
das
pop
or
sbb
push
jmp
inc
rorl
mov
or
xchg
es
in
test
decb
sbb
movsl
fs
cmpsb
cld
pop
cmc
jbe
daa
or
sub
dec
and
aaa
dec
xchg
lret
mov
mov
stc
cmp
pop
sub
sub
sti
inc
fucomip
jg
add
pushf
lcall
repz
dec
cmp
mov
mov
fsubr
mov
cmp
jmp
adc
xlat
in
test
stos
rcrl
hlt
jmp
ret
loopne
mov
test
mov
mov
and
xchg
psrlw
xchg
fmull
movsb
mov
rolb
push
jno
cwtl
scas
pushf
fists
les
mov
pop
mov
outsb
push
add
mov
jmp
jmp
or
mov
pop
cmp
cmp
inc
push
loop
movsl
fstp
jne
xchg
insb
loop
call
scas
jl
dec
xchg
stc
xor
test
mov
jp
popf
push
sahf
clc
xor
imull
pop
inc
rolb
cmc
pop
or
lods
sbb
lret
cmp
dec
fadds
adc
fs
sbb
pop
mov
movsl
mov
jb
je
out
xor
out
out
fsts
sbb
mov
lcall
repz
lock
xor
fsubrs
inc
inc
and
pop
and
lock
loope
sbb
lock
jb
mov
jo
scas
jae
add
mov
cmpsl
push
dec
xor
pop
jbe
mov
sub
leave
push
jns
js
jmp
fisubs
add
xorl
cmc
cmp
cli
pop
aaa
xchg
cmpsl
movsl
xchg
call
loop
in
sti
popf
add
mov
lcall
daa
icebp
repnz
aad
outsl
out
adc
pop
loopne
aam
xorps
xor
mov
out
cmp
mov
addr16
mov
mov
int
out
adc
mov
loopne
fists
lods
loopne
cmp
sbb
int
sub
pop
lods
xor
std
gs
xchg
dec
cmpsl
aaa
cmpsl
fldt
mov
sub
pusha
fsubs
xor
test
xorl
andl
inc
daa
cmpsl
fwait
rorl
mov
mov
dec
mov
mov
pusha
mov
mov
push
out
or
xchg
test
xor
mov
mov
movsl
icebp
dec
dec
stc
xchg
dec
arpl
push
push
out
jmp
movsl
cmp
and
fcoms
sub
adc
push
das
or
aam
fsubrl
outsb
orl
inc
fisubrs
mov
popf
lcall
sbb
pop
push
xchg
data16
push
loopne
mov
fs
data16
rcll
loopne
iret
sbb
dec
repnz
dec
jp
jp
jae
ds
push
push
lods
xchg
xor
jmp
mov
mov
push
push
xchg
jno
pushf
xlat
stos
adc
call
fbstp
xchg
lds
movsb
sti
lret
in
out
sbb
mov
repnz
xor
or
and
xchg
movsl
cld
push
cmp
push
int
jno
push
scas
scas
fcmovne
xor
ljmp
cmc
adc
inc
inc
cmp
adc
enter
data16
dec
mov
cli
cmp
adc
loope
sbb
mov
fcmove
ja
push
pop
mov
call
aam
loopne
movsl
insb
int3
pop
fcmovnbe
rcr
adc
xor
std
test
cmp
or
fsubp
std
addl
orl
cmc
sub
out
addr16
cwtl
cltd
mov
int3
lods
daa
sbb
ja
pushf
sbb
stc
fsts
mov
cmpsl
stos
mov
xor
pop
and
cmp
xchg
mov
add
adc
addr16
xchg
js
jmp
sbb
jns
aaa
stc
inc
insb
sbb
cmp
ret
loop
mov
and
dec
dec
ret
out
movsb
mull
cwtl
sbb
mov
mov
aas
into
les
ljmp
fst
mov
aas
sbb
inc
scas
jg
or
cwtl
clc
jns
jge
out
adc
or
pcmpgtd
ret
repnz
xchg
dec
das
jle
push
jl
pop
jns
jle
adcl
pop
shl
js
dec
cmc
repnz
add
mov
or
jmp
movsl
insb
pushf
cmp
adc
stos
sub
ds
test
sub
xchg
and
scas
or
add
ljmp
push
push
in
imul
pop
pop
lahf
int3
stos
rcll
cmc
addb
stc
imul
add
rcrb
loope
pop
enter
cmp
xchg
test
fcomps
xchg
add
pushf
cmp
and
cmpsb
int
cmp
pop
xchg
shlb
cmpsb
pop
jno,pn
popa
cmc
call
pop
or
sbb
stos
and
xchg
jge
lahf
pop
into
mov
dec
sbb
fcomps
mov
dec
push
sbb
mov
sbb
addb
xchg
jp
add
cmp
sub
dec
stos
add
fwait
mull
or
and
aaa
mov
leave
leave
mov
out
cmp
scas
mov
aas
push
loope
ja
push
psubsw
in
outsb
adc
hlt
adc
jnp
jl
cmp
jno
jno
test
mov
leave
fninit
jo
cltd
sbb
xchg
mov
stc
dec
and
pushf
fbld
jp
sarl
iret
xchg
daa
insb
stos
xchg
scas
fistps
lret
xchg
pop
jo,pt
in
mov
shlb
xchg
out
mov
jl
lahf
cmp
mov
insb
jae
in
mov
ret
mov
sti
xchg
mov
aas
repnz
outsb
xchg
loope
xchg
bound
jnp
jae
adc
jecxz
push
and
pushf
popa
dec
add
push
push
mov
inc
out
jmp
and
xchg
xchg
jbe
adc
lock
jmp
xchg
push
push
enter
jnp
dec
cmp
repz
or
cmp
push
jge
and
pop
mov
cmp
and
sbb
or
into
sbb
inc
sub
int
xor
adc
stos
cmc
and
add
pop
push
repnz
aad
lock
cvtps2pi
xor
cmpsl
cli
sarl
movb
pop
repz
jno
loop
outsb
jmp
mov
clc
cmp
inc
cmp
jnp
data16
xor
cmpsb
sub
negb
pop
fisttpl
mov
fcompl
into
and
sarb
xchg
rcll
jns
mov
xor
add
push
inc
add
xchg
imul
inc
jecxz
dec
sbb
mov
and
fiaddl
mov
sbbl
adc
ret
divb
das
inc
xlat
cmpsl
cmpsb
bound
mov
outsl
int3
lahf
mov
sarl
push
and
aam
push
mov
inc
test
and
xchg
loopne
xchg
cmp
fisubl
add
or
pop
cmp
push
cmp
inc
ud1
lret
cmp
inc
test
dec
jne
fldt
cmc
ljmp
jo
jne
xor
fidivs
mov
lahf
xchg
aam
ja
data16
std
xor
ljmp
pop
cld
inc
lods
enter
bound
aam
jge
popf
iret
js
lods
sbb
fildll
xor
lea
test
outsb
popa
cmp
lcall
sub
dec
inc
roll
mov
sbb
pop
pop
mov
add
into
mov
cmp
out
mov
cli
ret
adc
fisttpl
sbbl
mov
and
adc
out
fcoml
subb
xchg
sbb
jl
xorb
push
leave
imul
xchg
add
outsb
inc
add
sub
push
adc
jle
cmp
or
dec
outsl
or
sti
push
mov
jno
int3
mov
enter
mov
cld
add
leave
mov
or
mov
xorb
push
and
adc
cmp
test
aad
int
pusha
push
jbe
fcmovnu
movsl
lds
pushl
sbb
popf
mov
and
jns
stc
or
sub
or
popf
xor
faddl
or
scas
int
daa
jmp
mov
or
adc
push
mov
add
mov
pop
mov
jne
es
xor
movl
aas
hlt
inc
and
ss
sub
mov
cmpsl
lods
je
decl
or
movsb
xchg
xchg
shrl
push
aas
adc
pop
lret
daa
pop
push
add
and
clc
xchg
movsl
inc
lea
pop
gs
popf
xchg
jl
pop
mov
sbb
push
into
andl
pop
in
dec
xchg
test
lods
cltd
lret
gs
add
xor
mov
mov
pop
inc
dec
add
scas
stos
popa
enter
jbe
xchg
shrl
loope
and
shll
jmp
leave
jo
adc
inc
mov
mov
push
mov
cmp
out
out
push
inc
popa
fcmovbe
xchg
mov
push
mov
pop
xchg
sahf
adc
and
lea
dec
jmp
and
fsubl
inc
and
stos
adc
mov
or
mov
shrl
int3
mov
das
scas
jg
fnstsw
mov
dec
jmp
ret
negb
arpl
and
dec
sub
jno
sbb
add
fsubl
xor
sub
pop
iret
add
je
mov
rol
mov
mov
cli
fdivrl
dec
mov
loope
pop
loop
inc
scas
sarb
or
sub
jge
aas
aaa
cmc
or
cmp
or
mov
repnz
mov
jmp
and
fdivrl
fnstenv
outsb
stos
hlt
push
and
into
sbb
mov
mov
jno
mov
or
fwait
out
dec
mov
cmp
jne
push
mov
sbb
rcrl
bound
jp
lock
mov
sbb
in
inc
add
add
aas
cwtl
repnz
jbe
aad
mov
int
and
xor
and
xor
mov
incb
sub
repnz
fdivl
fs
push
cwtl
or
mov
nop
lahf
push
gs
pop
aam
jno
mov
mov
inc
xor
mov
pop
and
or
add
push
push
scas
mov
insl
lret
lods
sub
js
pusha
jnp
icebp
push
xorl
or
lcall
cmp
jl
je
lcall
movsb
addl
into
das
scas
jmp
cmp
imul
xchg
mov
lahf
out
or
in
enter
xor
add
cmp
lret
scas
repz
int
or
jae
sbb
lods
movsb
and
cmpsb
jl
cmp
sub
jne
push
adc
sbb
sbb
mov
mov
int
cmpsb
add
int
push
fimuls
and
ljmp
add
xor
fucomi
cli
and
pop
sbb
fiaddl
and
dec
fsubs
push
lahf
add
pop
pop
dec
lods
mov
sbb
sahf
cmpsb
xchg
adcl
or
adc
jmp
jo
fidivrs
jge
xor
xchg
in
dec
xor
cltd
daa
sub
jmp
cli
pushf
xchg
into
xchg
xor
add
pop
popa
cmp
pop
mov
insl
mov
pop
fidivs
pop
aam
pop
jns
into
mov
js
pop
sbb
lods
notb
cmp
adc
cld
push
cmp
mov
test
mov
cltd
add
sub
fnstcw
daa
shlb
sahf
push
sbb
add
faddl
decb
leave
lret
mov
xchg
je
movsl
xor
mov
lock
mov
in
push
fsubs
cs
outsb
cli
xchg
or
dec
pusha
cwtl
lcall
rclb
adc
in
test
sbb
xor
add
mov
mov
jge
iret
mov
and
inc
sbb
sbbl
dec
dec
aaa
mov
cmp
insl
cs
int
push
jns
movsl
addr16
inc
mov
nop
mov
test
test
outsl
lea
pop
xor
jb
dec
xchg
pop
and
lock
in
shlb
jbe
inc
lret
xor
popa
hlt
fiaddl
mov
lods
add
mov
sbb
test
int3
xchg
adc
sahf
popf
dec
imul
and
subl
std
add
and
je
add
pop
adc
add
dec
idivb
les
add
stos
and
cmp
xchg
fwait
aaa
pushf
lahf
js
dec
popa
fwait
sub
imul
insb
rol
cwtl
inc
xor
ds
gs
sbb
push
in
adcb
loope
shlb
cmp
lcall
fcmovbe
enter
mov
sub
adc
pop
dec
or
lcall
mov
inc
pop
int
push
imul
rcll
int
pop
push
mov
mov
fcoms
jp
data16
outsb
add
lahf
fwait
icebp
andb
jg
pop
push
scas
lea
fcmovne
fwait
insb
add
sub
xchg
inc
ljmp
cltd
les
cmp
cmp
clc
mov
cmp
mov
inc
cwtl
arpl
test
test
and
or
mov
push
arpl
iret
mov
push
xchg
not
add
or
das
shll
int3
cmp
dec
mov
jg
das
rol
mov
mov
adc
sbb
jns
jo
jae
adcb
or
call
sti
push
inc
nop
fucomi
dec
push
fsincos
cltd
push
push
test
push
mov
cwtl
dec
je
inc
mov
call
cld
testb
mov
mov
iret
push
in
sub
dec
adc
sub
jbe
dec
dec
mov
mov
insb
cmp
lahf
sahf
les
mov
xchg
test
push
pop
lcall
and
adc
cmpsl
push
jecxz
xchg
cmpsl
gs
jno
bound
int3
pop
cmc
mov
out
mov
xor
lods
sub
and
ja
daa
outsl
and
adc
daa
cmp
stos
jo
int
imul
inc
dec
ljmp
cld
ret
jb
mov
cltd
xlat
daa
fsubrs
xchg
shlb
adc
jmp
pop
shlb
loope
inc
mov
das
mov
cmp
pop
in
mov
test
icebp
jnp
addl
int3
lods
pop
leave
sub
mov
and
lods
jb
outsb
int3
stc
and
sbb
mov
stos
fisubrl
sahf
pop
js
xor
and
adc
pop
pop
lea
fldenv
aas
push
insb
jb
ss
orl
xchg
popf
incl
loope
notl
mov
fsubl
outsb
insl
lods
iret
int3
mov
xchg
insl
adc
jmp
in
aad
adc
out
fbld
push
mov
push
jmp
faddp
filds
jnp
jg
xor
sub
jge
push
xchg
xchg
popaw
adc
and
lods
xor
sbb
mull
xor
fwait
hlt
bound
push
jl
es
jno
cmp
nop
jge
cmp
ljmp
xchg
mov
jge
out
in
add
hlt
in
adc
dec
sahf
scas
call
mov
sbb
pop
shlb
stc
int
pop
mov
roll
add
iret
and
pop
push
xor
and
into
and
and
mov
fnstcw
push
popa
mov
call
les
xchg
stos
std
and
xorl
jne
vdivpd
dec
movsl
mov
cmc
or
mov
sbb
outsb
and
movsl
fidivs
push
mov
mov
out
movntq
out
add
dec
int
in
dec
mov
mov
mov
push
sbb
jbe
addl
adc
inc
add
or
mov
xchg
add
sub
insl
xor
pop
add
push
cmp
pop
or
inc
add
popa
adc
cwtl
lods
hlt
push
ret
ds
mov
pop
stc
int3
loope
push
dec
mov
sbb
xlat
aaa
pop
sbb
cltd
dec
and
sbb
loope
incl
mov
ds
push
cmp
xchg
iret
repnz
popf
mov
sbb
bound
rcrl
mov
hlt
popf
mov
rclb
mov
jb
ss
in
repnz
mov
aas
lcall
xor
mov
xor
pop
inc
inc
xor
lds
cwtl
das
dec
lods
dec
stc
cmp
or
sub
add
adc
mov
arpl
sbb
je
jb
mov
mov
sub
fisubs
clc
fs
pusha
lock
je
cwtl
popa
push
xor
fnstenv
loopne
inc
fs
mov
lahf
mov
rcrb
xor
mov
mov
rcll
inc
and
in
push
push
cmp
fwait
jecxz
sbb
inc
jg
testl
jge
das
aam
inc
push
dec
sbb
rcll
sub
movsb
popa
add
xchg
fcoml
clc
sbb
stc
ja
add
xor
int3
insb
mov
dec
xchg
call
cmpsb
pushl
pop
push
cmp
les
gs
sbb
lea
adc
mov
arpl
das
adc
jg
test
cmc
push
mov
mov
shrb
cli
das
xchg
js
ficomps
cmp
ds
push
or
adc
mov
ficoms
add
scas
mov
and
pop
fcmovnbe
out
mov
cwtl
lcall
mov
sbb
jo
mov
inc
ljmp
sbbb
push
push
clc
fdiv
add
mov
aad
mov
or
dec
add
idiv
cs
jecxz
imul
fimuls
dec
fsubs
cmpl
aaa
cmp
adc
mov
loope
sbb
aam
mov
mov
mov
jb
leave
or
pop
loopne
sbbb
cmpsb
fwait
movb
xchg
add
inc
clc
cmpsl
jg
xchg
pop
sbb
mov
sub
pop
fists
xchg
mov
mov
mov
or
stc
loopne
mov
jnp
fstpl
or
stc
scas
pop
test
rorb
dec
test
jmp
or
adc
mov
mov
mov
nop
icebp
test
popa
jb
movsb
loop
inc
les
fdivp
mov
test
mov
xor
dec
sub
pusha
je
dec
sub
push
icebp
jg
pop
push
pop
sbb
jp
pop
in
outsl
rol
notl
mov
push
mov
jmp
mov
mov
cmp
cmovs
adc
lods
pop
arpl
loope
out
mov
cmp
test
xchg
scas
xchg
adcb
aam
mov
movsl
sub
jmp
int
push
xor
imul
push
pop
test
test
or
xorb
out
js
rep
cmc
pusha
mov
adc
mov
fs
int3
ss
mov
cmp
push
mov
adc
ja
xchg
gs
daa
xchg
cmpsb
fcomi
adc
ret
dec
adc
mov
or
movb
mov
pop
data16
pop
popl
test
add
mov
xchg
fcmovne
mov
pop
bound
inc
adc
push
dec
ss
mov
test
rclb
decb
sbb
xor
dec
or
cmp
adc
aaa
adc
xor
test
insb
push
mov
fadd
pop
mov
outsb
ja
int
adc
add
sub
jne
mov
std
push
and
mov
jae
jmp
aaa
mov
call
inc
dec
cld
jle
out
outsl
xchg
xor
mov
inc
cwtl
pusha
jno
sub
add
lret
dec
js
jmp
jae
mov
pop
cmp
lcall
adc
in
add
or
pop
push
imulb
lods
lret
dec
sub
add
dec
lods
fs
jg
js
xchg
lret
test
call
js
cwtl
and
iret
add
add
lcall
jp
popf
mov
addb
ss
ret
rorb
mov
push
fs
mov
in
adc
cmp
daa
movsb
scas
mov
daa
stc
mov
std
jle
cmpsl
mov
cmp
xchg
dec
in
jae
pop
sbb
std
mov
add
mov
inc
and
sti
xchg
add
cmp
cmc
xchg
jno
adc
out
fwait
lods
jl
xchg
stos
push
mov
sahf
mov
push
pop
or
adc
leave
bound
fucompp
add
les
jne
mov
shl
inc
int3
pop
inc
sbb
jg
ret
and
jbe
test
clc
or
out
je
or
faddl
push
or
xor
lds
outsl
pop
xor
std
cmp
dec
sbb
shr
sub
adc
cmp
ss
pushf
or
or
lods
push
dec
rorb
jl
mov
add
mov
mov
mov
push
or
int3
in
outsl
dec
aas
cli
push
xor
stos
andl
xor
pop
jb
jno
cmp
xor
mov
int
mov
jmp
sub
adc
jns
mov
add
stos
testl
adc
orl
fmuls
lock
mov
and
xchg
int
cwtl
fstpl
call
insl
sbb
inc
les
cmp
aaa
add
jl
or
pop
and
ja
add
cmp
mov
jecxz
sub
and
in
jmp
push
les
lret
pop
adc
lds
cmp
test
jne
and
dec
ss
bnd
sub
adc
test
sub
lcall
iret
pop
inc
mov
inc
mov
push
pop
and
dec
lock
mov
ret
aas
imul
sbbb
dec
das
push
ror
jae
mov
jns
gs
adc
sub
test
xor
popl
fidivl
cmp
pop
mov
adc
mov
inc
shll
and
imul
cltd
movsb
and
aad
mov
xchg
mov
je
jo
sub
push
jbe
pop
or
rorl
hlt
mov
sub
loop
dec
cmp
test
aas
cmp
xor
pop
cmpsl
test
jge
flds
cmp
mov
outsb
sub
pushf
jmp
push
sbbb
lods
je
mov
xchg
pop
jge
pushf
jae
adc
int3
dec
idivl
mov
push
test
dec
add
pop
movsl
jb
jg
loop
test
cmp
out
cwtl
out
cmp
mov
dec
inc
push
rcll
jecxz
mov
mov
fdivrp
lcall
cmp
popf
xor
cs
cmc
jns
cmpb
popf
gs
icebp
sub
andl
dec
fisubrl
pop
jbe
mov
or
loop
fwait
cmpsb
hlt
mov
fildl
rcrb
test
mov
push
cmpsb
cmp
mov
clc
leave
sti
mov
mov
in
sub
int3
stc
cmp
push
les
or
sbb
lidtl
aad
ja
mov
push
test
ret
mov
fwait
std
leave
mov
mov
stos
push
ret
nop
mov
mov
cli
adc
popa
inc
sub
clc
jle
test
bound
push
mov
inc
into
aad
sbb
das
jp
out
mov
inc
jns
jbe
std
sub
pop
push
mov
testl
xchg
adc
cmp
inc
sbb
fcmovne
insl
cli
mov
aad
mov
mov
lods
cmpsb
inc
mov
sub
leave
stos
mov
jbe
push
mov
repnz
cmp
decb
push
ficomps
push
insl
in
dec
xor
xor
sub
lods
mov
imul
dec
fimull
stc
cmpsl
out
scas
clc
popl
and
test
mov
das
sahf
xchg
outsl
add
int
mov
cmpsl
dec
call
cli
cld
sub
sbb
imul
lret
shll
icebp
int3
xor
ret
movsl
out
fnsave
jge
xor
adcb
fsts
rcl
aaa
in
cmp
cli
jno
ficomps
push
mov
les
lret
les
push
dec
fisubrs
sbb
movsb
sbb
dec
jmp
test
mov
pop
es
and
add
mov
addl
repnz
pop
js
mov
iret
mov
jb
mov
pop
cld
arpl
mov
jmp
decb
jmp
fcomps
insl
xchg
out
fmull
hlt
mov
inc
adc
pop
cltd
movsl
ja
lahf
xchg
mov
jle
pushf
sbb
push
add
pop
jnp
enter
push
pop
sarl
pop
mov
xor
or
shlb
in
out
mov
bound
lret
adc
jns
pop
sbb
cli
mov
arpl
or
cmpb
push
xchg
xlat
gs
sbb
jo
jbe
ja
add
xchg
lcall
pop
negl
clc
xchg
and
imulb
mov
lds
and
and
ret
shrb
movl
ja
jecxz
sub
neg
sub
mov
in
loope
mov
jns
xor
sbb
cs
pop
arpl
add
and
in
ror
mov
insb
mov
fiaddl
sbb
rorb
push
jnp
pop
fsts
subb
sbb
test
lret
or
push
scas
adcl
js
xor
cli
lret
and
mov
fmuls
adc
ret
insb
test
loop
dec
mov
xor
sub
aad
out
cmpsb
scas
aas
int
inc
popa
ja
movsb
in
sahf
push
push
sbb
mov
scas
xor
test
inc
push
xlat
in
sub
mov
in
jo
aas
mov
lea
ret
jns
neg
pop
pop
mov
xor
sbb
orl
sub
lods
popa
and
xchg
jp
pop
sbb
rolb
or
push
insb
cli
stc
mov
out
jecxz
or
xor
repnz
mov
pop
insb
dec
sub
dec
push
pop
dec
and
pop
rdtsc
cmpsb
inc
mov
test
push
pop
mov
cmpsb
push
imul
ds
fcmovb
out
mov
adc
cmc
rclb
aas
into
dec
dec
in
push
into
aaa
in
daa
ds
adc
aam
dec
test
cli
jmp
jp
cmp
dec
push
push
lcall
cmp
mov
and
inc
mov
sub
xor
insb
shll
cmp
add
mov
inc
add
inc
mov
dec
fwait
aas
sbb
out
aam
push
push
lahf
or
xchg
test
sbb
jp
into
mov
ljmp
adc
stos
mov
xchg
mov
inc
xchg
hlt
sbb
roll
xchg
or
bnd
mov
cmp
xchg
in
fdivl
in
addr16
aaa
dec
stc
push
jae
mov
mov
or
or
mov
adc
stos
ljmp
sbb
dec
sub
mov
adc
push
pop
in
and
fisubrs
xlat
fcoml
cmpsl
pop
outsb
jbe
xchg
ss
nop
sarb
jbe
xor
pop
lret
mov
outsb
out
cmpl
out
nop
cmpsb
adc
pop
pop
fnstenv
bound
xor
cmpsb
xchg
cwtl
adc
sub
add
jo
insl
pop
bound
jno
je
daa
in
outsl
test
cli
outsb
jne
movb
les
imul
push
push
addl
adc
addr16
cld
repz
sub
sbb
xchg
adc
cmp
and
iret
or
xor
pop
enter
cmp
hlt
mov
pop
push
sbb
and
cltd
sahf
scas
and
jl
fsubl
push
mov
cwtl
mov
fsubrl
push
mov
xchg
jne
lods
xor
movsl
iret
mov
xor
xchg
pop
inc
cltd
xor
ljmp
cli
mov
adc
mov
xor
add
dec
subl
enter
push
cs
dec
inc
sub
jb
cmp
sub
sub
jns
xchg
mov
sub
daa
dec
adc
push
stos
rcrb
pop
pop
dec
insl
faddl
cwtl
fisubl
int
adc
mov
pop
aad
aad
orl
loopne
inc
rep
xchg
scas
repz
and
push
lret
std
in
leave
lock
call
jbe
cmp
cli
or
fucom
mov
repnz
mov
popf
sub
and
xchg
lret
out
imul
dec
ja
divb
pop
lea
lods
mov
dec
push
push
push
xchg
xor
test
jmp
fisttpll
icebp
loopne
and
push
xlat
push
fstpt
jle
test
mov
xor
pop
loopne
mov
jbe
xor
fwait
scas
cltd
push
ljmp
push
hlt
repnz
imul
std
icebp
mov
push
rorb
pop
pinsrw
int
push
ja
imul
dec
xchg
je
pop
roll
jne
fimuls
inc
repz
lea
jb
hlt
add
stos
testb
sbb
mov
lcall
aam
movsb
cmpsb
jne
std
mov
jmp
cmpsb
push
pop
daa
mov
pop
in
int
out
push
or
inc
pop
cmc
fs
add
fisttpl
adc
mov
testb
mov
mov
push
xchg
jg
inc
repnz
push
outsl
mov
xor
pop
and
push
adc
mov
mov
popf
pop
adc
and
cmp
jno
xchg
mov
imul
mov
mov
scas
fidivs
and
jl
imull
outsl
cmp
xchg
add
mov
adc
outsb
fisubs
xor
mov
mov
stos
add
sti
dec
rclb
rorb
mov
push
leave
clc
aam
lock
or
push
rcl
xchg
jo
enter
mov
imul
ss
pop
loopne
dec
and
mov
iret
stos
push
push
jmp
add
jp
pushf
mov
lods
push
je
rcrl
inc
mov
cli
sbbb
mov
mov
je
fimull
cmpsl
xchg
cltd
lds
es
pop
dec
or
jl
cmp
cwtl
mov
aaa
in
insb
inc
xor
mov
cmpb
inc
cmp
xchg
fs
mov
sbbb
lea
mov
in
nop
mov
iret
pop
push
lahf
aas
repnz
pop
inc
int3
cmpsb
mov
jne
imul
or
push
loop
add
clc
pop
and
push
sarb
mov
xchg
xchg
mov
leave
fwait
push
jl
mov
xor
lcall
jle
xchg
mov
pop
lahf
repnz
cmp
adc
aam
sbb
jle
popf
repnz
pop
xor
add
mov
lock
mov
and
or
outsl
push
call
add
cmpsl
push
xchg
xor
shrl
fwait
jo
data16
ja
fldt
push
out
mov
int
test
imul
dec
mov
outsb
pop
mov
movsl
adc
cmc
fnstcw
xchg
arpl
arpl
arpl
adc
pop
loope
int
jmp
jo
imul
cli
jbe
sarl
xchg
dec
jne
or
jbe
gs
fildl
pop
loop
shl
sbb
das
dec
mov
rcll
gs
push
or
ss
clc
popa
into
or
xchg
leave
jo
pushf
and
sarl
jbe
pop
jb
aam
pop
pop
ja
add
out
jbe
jbe
cmp
shlb
in
jae
dec
mov
push
into
push
loop
inc
push
xchg
mov
adc
test
loopne
inc
jnp
adc
pop
inc
shl
ss
fwait
add
test
mov
call
ret
or
lret
sub
xor
jg
and
mov
cs
fmul
mov
repz
aad
mov
idivl
mov
mov
arpl
xchg
mov
cmp
dec
mov
mov
mov
and
adc
pop
lret
inc
cli
adc
insl
inc
pushl
lcall
lock
fxch
in
jmp
pop
sub
push
xor
inc
out
outsl
popa
aas
sbb
or
or
xor
pop
mov
sbb
inc
sahf
or
cli
cld
orl
aad
mov
int
jno
sbb
test
inc
in
mov
jge
ss
imul
pcmpgtb
in
out
fbld
xlat
xchg
adc
add
aad
hlt
and
add
mov
or
push
or
in
jno
cmpsb
ja
adc
jge
xchg
xor
mov
mov
push
jp
jmp
adc
fadd
inc
cwtl
xchg
jmp
adc
jg
sub
sahf
sub
fs
imul
jnp
mov
lcall
dec
lret
xchg
add
outsw
lret
mov
cmp
and
and
dec
mov
xchg
int3
mov
scas
push
mov
pop
jae
mov
ret
jge
mov
xor
lods
add
inc
jmp
and
push
xchg
movsb
dec
cltd
xor
ss
ljmp
js
daa
out
out
test
xor
mov
mov
jno
mov
add
fidivs
lahf
in
int3
mov
mov
mov
push
fildl
sbb
xor
aas
dec
scas
mov
jns
fsubrs
xor
or
clc
mov
into
dec
xor
sahf
lcall
jmp
sti
into
clc
fadds
lahf
mov
sbb
lock
add
inc
xchg
and
push
xchg
and
cltd
mov
xchg
popa
out
cmp
mov
pop
je
mov
imul
movsb
ret
pop
test
ret
aad
pop
lahf
jo
xchg
or
mov
xchg
push
or
fidivrl
push
stc
and
cltd
xchg
arpl
es
sbb
out
adc
iret
rorl
imul
mov
add
js
mov
mov
in
inc
sub
or
mov
mov
adc
sub
dec
mov
pop
jge
xor
xchg
mov
shlb
imul
sub
sbb
jle
or
jo
or
cmc
inc
fwait
stos
jge
les
push
mov
jb
push
stos
into
lea
hlt
xlat
outsb
mov
jo
insl
cmc
pop
mov
cmc
xorb
xor
xchg
xor
or
xor
in
call
bswap
xor
add
or
sbb
mov
sub
ljmp
nop
mov
sub
jge
clc
or
jae
jbe
outsl
hlt
jbe
pop
sub
sub
dec
mov
dec
lahf
shll
outsl
es
in
mov
mov
xor
popa
fs
jb
cmp
sbb
in
cmp
and
sahf
jmp
adc
add
sbb
xlat
pop
or
sub
jne
sub
stos
mov
mov
push
sti
fs
test
jne
mov
sub
fidivrl
ret
fimuls
and
pop
loop
sub
fists
mov
push
inc
rcll
push
and
mov
cmp
add
cmpsb
xor
outsl
jle
sbbl
mov
or
dec
or
bound
and
xor
sbb
leave
mov
mov
mov
pop
xchg
adc
xlat
inc
adc
es
cltd
into
cltd
fcompl
lods
push
lock
sbb
mov
je
fistpll
test
xor
lods
stos
test
popa
sub
xor
sahf
jmp
pop
inc
lret
shl
mov
pop
int3
push
iret
jnp
push
iret
cltd
stos
and
stos
and
xchg
adc
insb
icebp
xor
shll
gs
xchg
dec
imul
jns
add
push
or
add
push
adc
std
mov
aad
into
cmp
imul
xchg
scas
in
int
imul
hlt
mov
movsb
mov
add
jge
xor
sbb
xor
mov
mov
iret
ret
sub
ja
repz
pusha
ret
jl
jnp
mov
ret
pop
mov
mov
out
jg
sti
sub
lods
fcomp
push
pop
jmp
fsts
add
sub
xchg
xchg
shll
jl
adc
xor
mov
mov
and
scas
setbe
dec
test
xchg
in
xchg
mov
add
out
dec
icebp
int
adc
pop
sarb
cltd
xor
cs
push
out
lahf
fildll
mov
push
repz
nop
mov
add
subb
aaa
sahf
dec
out
cltd
push
push
cmp
in
mov
andl
pop
mov
gs
pop
jmp
pop
xchg
pusha
lods
pop
sti
lcall
orb
adc
mov
xchg
lret
dec
push
rol
pushf
and
hlt
sub
jecxz
gs
ja
xchg
notb
adc
jle
in
mov
dec
cmp
ret
cli
cmpsl
inc
xchg
clc
lret
lods
mov
sub
jmp
push
sbb
dec
xchg
fmuls
adc
ja
test
push
push
rdpmc
mov
rorl
sti
inc
push
mov
cmpsl
call
scas
mov
xor
lods
out
clc
mov
les
cmp
ja
xchg
jl
or
ljmp
pop
lahf
inc
and
pop
mov
rcll
mov
insl
cli
sbb
loop
insb
sbb
push
push
loopne
pop
cmp
aad
popf
in
stos
repnz
xchg
aaa
cmp
pop
std
mov
loop
leave
scas
dec
stos
data16
enter
pop
ret
cvtdq2ps
mov
icebp
call
movsl
icebp
push
sbbl
mov
repz
xlat
arpl
cmp
aas
out
testb
cld
outsb
arpl
leave
pop
cs
jns
mov
and
xor
xchg
mov
mov
lock
dec
scas
rorl
adc
push
push
and
mov
xchg
push
push
xchg
add
stos
mov
pop
and
rorb
adc
jne
xor
jle
jl
outsl
mov
lock
roll
fdivs
jae
xchg
cmpsl
movsl
movsl
add
dec
adcl
loopne
inc
mov
push
mov
pop
dec
sbb
ret
sti
and
std
out
jmp
popf
mov
cmc
fistpll
xchg
fsubrs
imul
mov
add
mov
pop
adc
mov
mov
int
and
push
test
cld
jle
outsb
fs
or
pop
mov
outsb
rolb
dec
or
lahf
call
sub
mov
sarb
out
scas
icebp
call
mov
and
popf
sub
popl
add
in
shl
mov
adc
xorb
or
xor
loope
push
xchg
pop
sub
mov
jmp
inc
clc
jns
dec
mov
mov
xor
ljmp
xor
fstps
lods
test
das
cld
call
mov
mov
mov
sbbb
jl
daa
jnp
sub
es
int
pop
mov
in
test
cli
sti
lods
adc
and
repnz
pop
pusha
mov
stc
int3
dec
xchg
mov
push
jle
mov
pusha
fcmovnbe
cmp
cmpsb
aaa
aad
sub
or
loope
adc
sahf
and
loopne
into
cld
ja
gs
jmp
cmp
subb
stc
loope
cltd
movsl
and
pop
mov
cmpsl
loop
call
cmc
insb
aaa
daa
pop
insb
push
push
dec
jo
or
mov
test
loopne
leave
out
outsl
hlt
das
jmp
mov
ficoml
sub
push
enter
fwait
and
inc
inc
lods
jmp
push
sbb
movsb
xor
loopne
ljmp
sub
adc
sub
fidivrs
adc
and
jbe
fs
repnz
xchg
repz
mov
cltd
shl
test
lea
sti
outsl
insb
push
fisubs
es
pop
stc
fs
pop
add
test
xchg
loope
fildl
inc
pushf
decb
pop
pop
mov
mov
add
pusha
xor
sti
shrl
push
or
lods
and
cmp
cmp
insb
dec
jmp
pop
cmpsl
jl
xchg
xor
dec
mov
push
loopne
test
xchg
rcr
pop
jmp
push
adc
fstpt
imul
mov
xchg
and
sbb
cmp
fists
xchg
scas
rcr
cmc
jae
pop
sub
jge
push
push
inc
leave
shrl
mov
mov
fldcw
test
or
sub
popf
cmp
jge,pn
lods
mov
xchg
rolb
rcl
mov
mov
jmp
jbe
adc
ss
sub
rcl
mov
fldcw
cli
dec
insb
sub
stc
sub
in
ss
cmp
xorl
jne
mov
mov
loopne
out
cmp
sub
roll
mov
inc
cmp
push
test
jo
jmp
mov
lret
dec
fnstenv
rorl
sbb
pop
int
xorl
scas
lret
arpl
mov
mov
fidivl
cli
jbe
push
mov
out
loopne
dec
push
jbe
std
mov
test
add
and
jp
push
push
jle
xchg
push
shr
daa
xchg
clc
cmp
or
push
inc
mov
cwtl
cmp
shlb
loope
push
adc
jnp
inc
cld
mov
lods
mov
inc
insl
test
mov
imul
and
mov
aas
fmulp
mov
add
outsl
ret
xor
add
mov
xchg
mov
loope
jge
push
mov
mov
cwtl
test
es
lret
xchg
xor
je
loopne
int
sub
aam
js
mov
cmp
jae
idivb
and
jns
lahf
jo
in
adc
add
xlat
fisubrl
lock
jnp
shll
mov
ja
jbe
adc
jno
add
lcall
mov
and
or
inc
rclb
or
inc
xor
push
movsb
loopne
idivb
xor
xchg
mov
jno
mov
mov
jge
insl
or
dec
or
or
cmp
int
cs
mov
sub
fldt
pop
push
into
inc
ja
pop
mov
dec
nop
and
je
mov
stc
xchg
push
cmp
loop
fbld
adc
lahf
out
movsl
fwait
insb
xor
insl
pop
push
cmp
mov
test
js
add
stos
push
leave
fdivrp
cli
jle
scas
add
loopne
jmp
jmp
out
mov
add
fistl
jmp
insl
push
push
inc
and
add
lods
adc
or
test
push
push
cld
mov
or
cwtl
adc
mov
repnz
test
inc
push
pause
jg
out
and
jnp
jl
enter
or
mov
imul
ja
xor
movsl
inc
sti
sti
or
push
pop
rcrb
fcmovnbe
xor
inc
inc
sbb
push
jmp
add
mov
jecxz
cmp
cld
lret
xchg
xor
mov
jmp
mov
or
mov
mov
lods
in
xchg
cmp
mov
cmp
add
int
es
mov
scas
sub
push
mov
dec
rol
mov
mov
mov
in
popa
jle
dec
and
mov
aaa
pop
fadd
mov
push
pop
xor
add
mov
xor
or
cwtl
mov
call
dec
in
pop
dec
icebp
pushf
jg
lcall
rorb
rclb
stos
adc
js
stc
sub
fnstcw
nop
test
stos
push
mov
mov
xor
sbbb
pop
mov
sub
xchg
sahf
daa
leave
inc
cmp
out
pop
adc
cmp
or
xchg
cli
les
inc
cmp
jae
fwait
cld
movsb
xorl
dec
inc
mov
xchg
or
sbb
cltd
pop
jae
fisubrs
iret
sub
xor
mov
ss
out
out
lahf
jp
mov
lahf
aas
mov
loope
mov
popa
outsl
xchg
or
mov
inc
adc
cmpsl
icebp
lret
pop
in
outsl
jne
and
sub
test
loop
fldenv
orl
enter
jle
or
popf
popf
in
sti
into
pop
pop
sub
lcall
add
rorl
inc
sub
aas
mov
push
shll
push
or
lods
xlat
mov
xor
push
lcall
pop
push
in
xchg
imul
aam
xchg
jo
and
mov
sarl
xchg
xchg
mov
mov
xchg
jg
add
push
mov
outsb
and
xor
in
pop
jnp
inc
sbb
loope
aas
mov
mov
je
xchg
inc
test
add
icebp
insb
xchg
ficoml
pop
inc
push
push
and
rclb
xor
jae
jnp
ror
out
shrb
dec
inc
in
in
jne
ret
mov
fnstsw
xchg
and
pop
sbb
pop
mov
cmp
jns
arpl
push
das
ret
sahf
cmpl
js
outsb
sbb
test
lcall
pop
ficomps
sti
pop
xor
adc
cmp
mov
fwait
push
sti
mov
or
jbe
scas
mov
mov
pop
xchg
sub
push
icebp
es
ret
pop
xchg
leave
std
mov
testb
xor
push
mov
sbb
arpl
cmp
repz
fs
faddl
in
add
sub
ds
mov
int
inc
and
std
repnz
fs
addr16
mov
sbb
xchg
outsb
cmpb
fstps
cmpsb
cmp
jp
fsubp
or
rol
scas
loopne
mov
out
pop
dec
jbe
and
push
ret
xchg
leave
lcall
lds
loope
cmpsb
mov
psubq
ret
jnp,pt
je
stos
fbld
js
pop
mov
rcrl
or
xchg
xchg
or
mov
pop
leave
xchg
jecxz
es
add
or
roll
repnz
cmpsl
lret
les
xor
pop
pop
cmp
xchg
push
fadd
mov
mov
sbb
push
push
in
orl
ret
and
inc
xlat
push
cld
sub
cli
inc
adc
cmpsl
dec
lret
lret
movsb
negl
lock
ss
sbb
cmpsl
cmp
in
lahf
out
and
cmp
cltd
and
pop
and
cli
mov
stos
pushf
popf
shr
inc
les
out
ror
pop
or
imul
adc
ret
push
or
insb
hlt
pop
lret
xchg
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
call
lds
int
adc
enter
in
push
sti
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
add
les
xor
mov
cmp
cmpsl
mov
pop
cmp
call
call
dec
cmp
sbbb
xchg
das
pop
addr16
lret
enter
out
push
mov
sbb
adc
dec
lea
adc
fcomp
dec
fildll
in
test
rcrb
jl
push
mov
pop
ret
xchg
xchg
in
sbb
adc
lods
rorl
test
push
push
xlat
lods
jle
ljmp
rclb
jl
sarl
mov
test
jb
inc
xchg
cmpsb
cmp
inc
xchg
lret
enter
sbb
push
inc
imul
jbe
test
and
int
add
enter
sbb
push
add
enter
pop
and
int
adc
enter
sbb
push
inc
xlat
ror
mov
jbe
dec
pop
and
xchg
adc
enter
sbb
push
push
xchg
ficoml
enter
or
push
inc
xchg
lret
enter
and
push
sub
jbe
loope
and
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
jnp
loop
mov
mov
sbb
inc
inc
xchg
push
adc
dec
addr16
jno
or
mov
and
ja
enter
sbb
push
mov
int
dec
vpmacssdd
lret
enter
cmp
push
mov
test
and
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
push
inc
xchg
lret
enter
sbb
lret
adc
xor
mov
and
cmp
daa
sub
xor
hlt
xchg
mov
pop
xor
and
adc
outsl
incb
stc
ja
addr16
fnstcw
adcb
in
in
out
mov
scas
imul
aaa
addr16
movsl
leave
loope
lret
sub
push
testl
mov
in
repz
insl
or
mov
in
mov
je
or
stos
rcrb
cmp
shrb
xchg
dec
test
stc
add
rcrb
push
lock
mov
jno
in
adc
hlt
xchg
jne
add
cmp
push
stos
ret
pop
mov
pop
add
lret
shll
jg
mov
filds
push
pop
xchg
push
mov
xor
adc
jb
push
lret
imul
or
lcall
add
push
dec
out
mov
icebp
sbb
xor
or
dec
iret
aam
pop
int3
inc
push
int3
mov
pop
sub
jl
or
into
mov
shl
mov
xor
testl
mov
nop
xor
jecxz
mov
insb
push
push
mov
out
ret
enter
scas
xchg
loope
test
mov
insb
push
imul
stos
lahf
and
xchg
or
sub
mov
pop
jecxz
leave
cltd
jge
mov
pop
popa
in
loopne
pusha
cs
rcrl
pop
jmp
imul
shl
rorb
enter
lds
xchg
push
enter
ret
cltd
xor
lcall
jb
aas
stos
fnsave
test
call
cld
or
jle
pop
iret
enter
mov
pop
mov
lcall
cmpsl
ds
inc
xlat
inc
nop
xchg
add
inc
test
in
inc
pop
push
addr16
rcll
xchg
cld
xchg
adc
cmc
movsl
ljmp
faddl
stos
popa
xchg
adc
xchg
pop
popf
mov
mov
sbb
arpl
jo
ret
jp
pop
enter
data16
push
and
sub
xor
stc
jae
dec
sub
mov
int3
inc
or
xor
repz
pop
imul
cmp
adc
dec
xchg
add
push
addr16
pop
jmp
les
std
mov
movl
cltd
test
inc
adc
iret
fldt
or
adc
push
stc
stos
mov
push
andb
hlt
into
or
cld
fldcw
popf
xchg
pop
and
dec
sub
rcl
arpl
and
cmp
cld
in
sti
dec
mov
cmpsb
adc
pop
sahf
add
dec
cmp
push
out
mov
es
inc
leave
fsubl
outsb
bound
mov
push
adc
mov
add
xor
into
adc
dec
loopne
iretw
push
pop
addl
sarb
adc
pop
cwtl
xor
cmp
movb
inc
pop
mov
sub
dec
mov
cs
das
std
shll
xchg
or
add
outsb
mov
pop
stc
pop
cld
cmp
and
pop
scas
es
sub
push
mov
rcl
cs
adc
add
roll
ret
aas
lods
xor
adc
inc
mov
inc
mov
ljmp
jno
mov
lret
push
and
insl
pop
mov
or
pop
sbb
lea
cwtl
rcll
data16
mov
inc
xchg
or
jle
fcomps
out
adc
pop
sbb
mov
stos
lods
in
cmp
xchg
sti
aas
jge
stos
fmull
fdivl
pop
call
push
inc
cwtl
sub
lahf
sbb
rclb
xor
scas
dec
std
inc
cs
pushf
insb
or
ss
test
in
sbb
loope
ret
int
stos
sub
leave
inc
sbb
mov
dec
aas
push
xor
fadds
stos
lcall
icebp
fstps
and
insb
xchg
xorb
push
ljmp
aam
and
bound
bound
or
mov
and
xor
pop
pop
hlt
std
pushf
imul
dec
xlat
mov
fisttpl
mov
mov
mov
cli
pop
sbb
sub
in
vphaddwq
lret
movzwl
lret
imul
scas
sub
sbb
add
shll
inc
sub
and
fdivrl
les
into
out
dec
jg
scas
dec
mov
sbb
lret
xchg
pop
jge
out
sbb
pop
clc
js
dec
js
mov
fs
aaa
sub
push
lahf
lods
sbb
dec
fs
test
into
ljmp
mov
scas
sbb
or
mov
ret
imul
lret
es
outsb
popa
adc
sbbb
xor
mov
jbe
xor
xchg
add
dec
jae
fs
dec
jge
mov
fwait
mov
xchg
or
call
mov
daa
fs
mov
je
mov
push
stos
sub
imul
js
fs
aad
or
adc
outsb
out
dec
fistpl
repz
lahf
popa
jecxz
je
shr
mov
xor
jae
inc
cmc
shll
jle
inc
faddl
xchg
insb
imul
inc
test
mov
push
pop
jae
into
aaa
in
nop
xor
jno
jne
sbb
sahf
xchg
inc
mov
jg
mov
and
pop
cs
mov
dec
test
jo
xchg
pop
data16
or
add
es
lods
fcomps
push
shlb
push
sub
cwtl
jnp
inc
sub
fstpt
and
sub
gs
mov
cmc
and
sahf
and
into
fimull
jge
out
test
lcall
jns
cmpsb
inc
pop
cwtl
lret
mov
inc
sahf
and
cmpsb
add
addr16
xor
mov
xor
aaa
pop
sti
pop
dec
lock
push
iret
sbb
inc
mov
outsb
xchg
repz
cltd
in
or
inc
mov
add
outsb
adc
imul
jl
or
adc
inc
test
jmp
loop
in
xchg
dec
inc
sub
inc
shll
push
mov
push
jbe
lret
repnz
rcrb
les
bound
jge
lahf
sub
and
push
scas
cmp
jecxz
mov
out
jg
xchg
addr16
mov
in
ror
daa
cmc
sbbl
cmp
out
pop
cli
xchg
imul
jbe
into
popf
add
mov
imul
jg
popf
dec
cli
out
movsl
cmp
out
mov
dec
jnp
scas
mov
pop
xchg
mov
dec
cmc
ja
movsb
ret
mov
sbb
fsubrp
lods
cld
push
add
insl
shrb
mov
fisttps
push
stos
testl
daa
push
jbe
xchg
ja
or
mov
push
sub
xchg
shlb
call
lock
sub
mov
ficoms
sbb
inc
enter
jnp
ret
jnp
std
movsl
pop
test
or
aaa
sub
cwtl
fwait
dec
push
mov
cmpsl
xchg
scas
push
testl
bound
mov
jge
fcompp
aas
cmc
pop
repnz
jmp
daa
outsl
movl
aad
out
aas
xchg
lea
leave
adc
out
sbb
cs
mov
in
mov
add
mov
xlat
ljmp
xor
jb
nop
mov
sub
xchg
shrb
pop
xor
mov
xor
in
inc
cmp
addr16
ret
dec
or
mov
or
sub
std
imul
sahf
cmc
hlt
iret
push
xor
push
adc
out
lret
andl
mov
inc
stos
fists
leave
mov
pop
shll
jnp
xor
push
cmp
add
jle
lock
dec
or
lock
or
sar
cmp
es
loopne
js
aas
add
aad
adc
sbb
addr16
or
sahf
in
lds
or
push
dec
orl
lods
jecxz
outsb
dec
push
or
cmp
jns
mov
lahf
fbld
in
jno
outsl
call
lods
decl
inc
mov
hlt
push
inc
cmp
fcmovnbe
addr16
jb
stos
lcall
mov
and
arpl
and
data16
add
call
icebp
push
xor
lds
rolb
in
pop
jle
lock
sbbl
je
data16
pop
push
sbb
lret
in
and
push
shl
aaa
pop
mov
lret
pusha
adc
out
test
xchg
sti
inc
mov
pop
lods
shr
mov
push
cmp
out
mov
test
fsubrl
and
in
arpl
inc
cmp
mov
lret
fisubrl
adc
test
pop
out
fldt
sub
fsubs
push
outsb
add
shrl
pop
ss
xor
adc
mov
int
mov
pop
jno
leave
jns
in
pop
lds
mov
mov
cmc
mov
mov
xor
lods
add
js
mov
outsl
xor
in
push
out
ljmp
out
aam
xchg
mov
insb
shr
or
nop
xchg
fiaddl
sahf
stos
sub
push
inc
mov
lret
mov
mov
and
into
mov
mov
cs
frstor
add
orb
pop
mov
sbb
jp
pop
dec
call
sbbl
adc
inc
cli
mov
cmpsb
jae
jge
cld
icebp
enter
into
and
push
iret
xlat
std
js
leave
mov
lea
fwait
hlt
pop
mov
fldcw
mov
iret
fdivs
shrl
cmpb
inc
je
aaa
nop
sub
ss
or
je
adc
iret
into
les
aaa
repz
andb
aaa
sub
dec
testb
sub
stos
aaa
mov
push
fs
sub
push
popf
fildll
push
xchg
fwait
je
imul
rorl
repz
arpl
xchg
shll
and
dec
jmp
inc
stos
cmp
mov
es
or
inc
fadd
mov
insl
flds
stc
fwait
pop
js
xor
fmull
jbe
cli
mov
repnz
stc
lea
mov
dec
jb
mov
pusha
pop
sub
sbb
adc
loopne
and
shll
fiadds
add
and
mov
shlb
mov
call
inc
mov
repnz
push
xor
pop
outsb
mov
imul
lret
mov
bound
imulb
xchg
xchg
cmc
fistl
and
in
mov
imul
out
stos
lods
push
xchg
pop
mov
push
mov
pop
mov
mov
mov
pop
outsl
mov
fisttpll
jae
arpl
mov
or
and
pop
cmp
mov
jne
ss
adcl
add
xor
xchg
out
ret
rolb
mov
or
mov
mov
scas
xor
fldcw
out
insb
loop
push
mov
jmp
loop
std
repz
outsb
push
mov
and
jbe
jno
adc
popa
inc
pop
inc
xor
mov
jb
push
dec
inc
adc
xor
lods
cs
cwtl
mov
je
push
xchg
or
adc
nop
xor
pushf
mov
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
