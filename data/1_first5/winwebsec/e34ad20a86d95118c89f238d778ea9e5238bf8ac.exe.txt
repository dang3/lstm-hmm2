mov
fsubr
mov
sbb
sub
test
mov
aam
cmpsb
xchg
daa
jle
int3
sbb
cmp
jmp
push
adc
lods
aaa
sub
ret
aam
test
hlt
dec
mov
mov
fnstenv
mov
add
jbe
or
inc
inc
push
iret
pop
mov
cmp
or
jo
cmpsb
jbe
cwtl
mov
add
fiaddl
iret
inc
cmp
in
push
xchg
sti
adc
mov
jbe
adc
pop
out
test
inc
mov
dec
or
fnstcw
jmp
add
ss
enter
loop
push
mov
dec
insb
roll
xchg
push
push
fs
push
lret
ficompl
sbb
xor
adc
fidivs
iret
jns
mov
test
imul
and
sbb
movsb
jecxz
dec
lret
fsubs
ljmp
jae
sti
bound
das
xchg
lods
dec
cli
mov
push
loope
sbb
cmp
mov
call
sbb
dec
push
loopne
cwtl
sub
mov
insb
std
adc
or
sbbl
sub
cmp
cmp
lret
push
mov
push
subl
jae
adc
andl
in
cmpsb
add
aad
push
popa
adc
pop
andl
push
cs
test
push
fcmovb
lahf
in
outsl
adc
mov
test
pop
das
sbb
inc
sbb
mov
jb
test
fstps
mov
pop
push
inc
idivb
std
ja
clc
roll
imul
aaa
lds
push
aad
xchg
data16
xchg
cmpsl
rcl
aaa
sbb
mov
filds
and
add
or
sarl
push
or
dec
dec
fcmovnb
push
repz
cmp
ljmp
or
push
fldl
lock
dec
js
rcll
mov
fbld
mov
daa
popf
add
add
xchg
pop
xor
jle
in
fmuls
dec
icebp
mov
mov
xchg
popf
cltd
sbb
xorb
xchg
loop
mov
loope
fcmovnb
and
inc
and
push
jns
and
add
push
test
pop
dec
clc
test
mov
jmp
not
adc
pop
testl
push
hlt
jnp
mov
adc
adc
xor
out
lods
in
call
pop
loop
pop
test
cmp
pop
sub
incb
mov
adc
outsl
aas
mov
cmp
fs
stos
mov
dec
lret
rcr
mov
or
lret
int3
sti
shlb
mov
mov
nop
xor
in
pop
xchg
enter
cmp
cmc
jnp
ret
fldl
mov
add
js
jge
es
mov
out
push
adc
cltd
xor
adc
enter
arpl
cmp
sub
mov
je
cmp
mov
nop
pop
add
mov
push
fldcw
push
pop
push
imul
imulb
call
lret
add
mov
rclb
inc
dec
pop
inc
sbb
pop
sub
das
imul
inc
bound
xlat
nop
gs
xlat
fmuls
incb
xor
fwait
loop
add
dec
cmp
mov
in
int
fisttpll
add
in
mov
jbe
jge
inc
xchg
add
cmp
pushf
add
dec
iret
ds
in
movsb
or
or
add
jmp
sub
loop
call
jmp
aaa
pop
jl,pt
enter
xchg
out
mov
rcrb
sti
sbb
xchg
lret
shll
adc
outsl
sub
lret
lock
jno
loop
and
sub
sub
xor
add
aad
sbb
push
loope
dec
xchg
mov
jge
mov
cmp
out
in
add
fs
fdivrl
add
mov
and
or
and
pop
ret
sbb
mov
sub
cld
pop
cmp
sahf
adc
add
xor
adc
xor
dec
test
rclb
pop
dec
cmp
or
push
sub
aas
daa
sub
ja
icebp
jns
fadds
xor
pop
xor
clc
icebp
push
test
fisubrs
sub
test
scas
movsb
hlt
frstor
push
es
jno
addr16
sbb
lret
xor
ret
sub
out
xor
sub
cld
or
repz
cli
fs
jg
out
cmp
sbb
sub
add
jecxz
sub
mov
gs
pop
test
jnp
mov
mov
add
pop
mov
dec
xlat
xor
pop
adc
sbb
shr
sbb
jno
aas
pop
leave
pushf
incl
or
jnp
and
sub
in
cmp
fs
addr16
jbe
and
sub
xchg
dec
adc
jb
sub
in
inc
je
cmp
js
pop
xor
xor
pusha
rorl
jb
lods
into
xchg
xchg
lcall
dec
xchg
lods
or
aam
lods
loope
and
pushf
and
ret
leave
mov
repz
mov
out
push
mov
add
pushf
xor
xchg
lret
inc
insb
adc
pop
in
xchg
pusha
daa
ret
femms
movsl
or
or
sbb
ret
jg
and
mov
fidivl
lret
jg
sub
or
das
lretw
xor
lods
sbb
xchg
test
aam
jo
cmc
jp
xor
adcl
cmp
cmpsl
adc
int3
sbb
sbb
icebp
aam
xor
inc
xor
insl
stc
push
xlat
notb
lods
jge
shrl
xchg
outsl
jae
jne
aad
add
stos
push
sbb
push
lea
mov
xorb
mov
add
dec
lds
addr16
scas
lret
push
loop
push
jecxz
and
ss
push
cwtl
dec
xor
pop
sub
mov
in
mov
test
scas
mov
out
sbb
scas
fs
adc
jle
push
popa
loope
scas
mov
in
xor
mov
fistpl
jo
mov
dec
and
or
xchg
adc
lea
push
mov
cmp
adcl
or
jae
fldcw
mov
adc
xchg
add
std
icebp
pop
jns
fucomi
fsubs
adc
pop
or
les
xchg
pop
adc
xchg
inc
mov
mov
mov
fcmovne
sub
dec
inc
jg
out
add
ss
push
out
aaa
add
or
xchg
adc
repnz
pop
add
mov
imul
jo
div
popa
jae
push
or
call
jae
test
lahf
dec
dec
es
xchg
repz
inc
mov
mov
push
or
ds
cmpsl
mov
pushf
adc
and
xor
gs
shrb
movsb
sbb
test
sti
shrl
push
add
xor
mov
je
jo
pop
add
outsb
jle
inc
add
xor
lock
in
fnstcw
imul
sub
or
stc
dec
dec
sbb
addr16
mov
sub
int
xorb
inc
pop
fcomps
add
mov
mov
aam
bswap
cmpl
cltd
in
rcrl
add
repz
xchg
in
imul
js
or
pop
lret
pop
orl
xchg
mov
rcll
mov
scas
cld
add
cmp
and
jno
stc
and
xchg
and
cli
add
mov
xchg
cmpsb
out
mov
jbe
addr16
mov
cld
pop
push
push
mov
sub
movsb
js
xchg
addr16
inc
pop
shll
mov
call
lcall
adc
std
mov
lcall
int
mov
out
or
mov
jnp
sbb
push
jle
cmp
xor
pop
sarb
xchg
xchg
repnz
mov
out
push
ret
es
stc
jmp
cmpsb
adc
mov
call
or
and
add
hlt
std
xor
add
jo
sub
lods
aaa
push
inc
mov
aas
insl
arpl
lods
test
orl
inc
dec
xor
fwait
and
hlt
mov
sub
push
xchg
and
pop
aas
sbb
shlb
push
xchg
cmpsb
stos
mov
in
jle
ficoms
data16
std
add
cmc
jb
fwait
cmp
push
push
cwtl
adc
jp
mov
adc
adc
push
sahf
mov
xor
cld
scas
mov
int3
adc
aam
movsb
pop
jae
push
mov
dec
call
sbb
cs
gs
inc
jl
dec
pop
lock
or
xchg
fldcw
mov
test
aaa
xchg
scas
loope
pop
jg
inc
xorb
adc
pop
mov
mov
pop
push
inc
xchg
mov
sub
adc
sahf
push
add
repz
sete
or
shrb
jg
xor
jne
les
mov
and
enter
leave
lcall
jno
out
push
mov
test
ds
pop
out
jne
js
pop
clc
or
lahf
jl
jae
stos
mov
and
and
sarb
mov
and
aam
in
xor
gs
shll
jnp
fcomi
sub
cmc
jnp
mov
push
fidivrl
int3
aad
push
push
mov
xchg
adc
ss
and
adc
jo
add
cmp
iret
pop
ja
cmp
scas
orl
das
lret
fwait
jb
cmpsl
push
jns
sbb
iret
pop
addr16
push
je
inc
je
dec
divl
mov
cld
push
inc
mov
dec
push
repz
aad
inc
and
ret
add
add
andl
aam
idiv
popa
in
jne
out
subl
mov
aaa
sbb
shrb
fcomip
in
jp
in
jne
add
sarl
popf
sub
push
xor
mov
mov
sub
mov
xchg
pop
and
pop
mov
pop
rcr
mov
mov
pop
adc
add
cmp
jg
add
ret
pop
pop
xchg
movsbl
mov
xor
sbb
push
add
sub
mov
in
test
imul
cmp
or
jae
pop
enter
adc
or
mov
out
pushf
in
cmpsl
stos
cltd
mov
xchg
and
sbb
sub
mov
std
cli
repnz
jnp
cvttps2pi
push
xor
mov
in
jno
pop
mov
dec
inc
sbb
inc
cmp
push
je
sub
xchg
fwait
lret
inc
imul
fidivrl
insb
xor
push
gs
lret
nop
and
data16
insl
cmp
aaa
ljmp
jle
and
and
fstp
pop
lret
js
out
jmp
outsb
push
sub
les
add
cmp
cmp
lcall
stc
xchg
xor
push
test
ret
adc
mov
xlat
outsl
and
hlt
clc
in
xor
mov
xchg
mov
ud1
mov
mov
jg
sub
xchg
fcomp
mov
orb
imul
arpl
mov
jb,pt
sbb
mov
stc
adc
insl
rorl
xor
mov
jne
outsb
int
sti
aaa
add
dec
pop
cltd
push
inc
push
jns
ss
or
add
cmp
and
dec
ret
scas
sarb
pop
jecxz
mov
inc
adc
xor
call
add
repnz
mov
mov
je
or
cmp
adcl
call
mov
jg
xor
aas
hlt
movsb
mov
dec
push
shrb
sbb
and
cwtl
stos
add
jecxz
sub
pop
scas
pushf
cmp
adc
pop
inc
mov
dec
add
nopl
or
aam
fldenv
pop
push
es
mov
or
add
mov
sub
mov
xchg
xor
push
cmp
cmp
std
dec
pop
out
push
loope
mov
pushf
xor
stos
ret
test
inc
popf
add
mov
push
push
cmp
lea
xor
shll
dec
sbb
mov
pop
es
mov
lret
out
cmp
push
pop
dec
pop
sbb
mov
js
fs
adc
cmp
fisttps
add
push
fcmovnu
mov
ds
or
cltd
mov
ljmp
push
aam
dec
sti
ds
and
clc
and
adc
dec
inc
leave
lock
jge
mov
mov
sub
and
loope
add
mov
mov
mov
sub
jns
add
sub
xchg
mov
xor
bound
int3
mov
testl
cmc
fistl
mov
inc
adc
popf
sub
sbb
cmp
daa
mov
sbb
pminsw
shrl
jae
fistl
cmpsl
int
addb
mov
or
mov
inc
mull
shll
lea
ficoms
adc
and
into
and
dec
push
push
xor
lret
push
add
je
xor
mov
lods
shll
mov
inc
movsl
insl
xchg
rorl
hlt
xor
decb
arpl
and
fildl
jp
xchg
sub
test
jg
xor
mov
mov
cmp
daa
outsl
jecxz
push
and
lock
fisubrl
scas
stc
add
js
add
jbe
fsub
ret
mov
jno
std
or
mov
mov
fadds
mov
inc
mov
fists
int3
popa
lods
stos
or
sub
push
dec
cmpsl
ret
sub
xchg
aam
jne
jb
pop
jnp
outsb
fs
add
lods
adc
jns
mov
xor
ret
cwtl
push
jb
xor
xchg
jle
and
jmp
int3
mov
data16
out
pushf
mov
and
fmul
clc
mov
push
cld
and
out
cs
and
pop
push
cld
mov
cmpsl
scas
sahf
mov
fsubr
push
dec
cmpsl
sub
cmp
push
lock
cmp
clc
inc
pusha
pop
xor
std
xorb
dec
out
sbb
mov
jecxz
sub
ja
push
test
inc
sub
cmp
push
add
xchg
inc
je
cmc
mov
repnz
pop
xor
mov
mov
sub
pop
push
out
jge
lock
pop
ficomps
pop
lahf
mov
dec
xor
and
push
stos
pop
fdivs
mov
jp
pop
sbb
jne
addr16
pop
cld
adc
rcll
ss
dec
and
and
scas
xor
xor
jo
pop
mov
xor
arpl
ret
fwait
adc
jae
lahf
shrl
ret
arpl
mov
jl
int3
dec
xor
cmp
int
addl
faddp
xchg
pop
mov
xchg
pop
hlt
push
mov
jnp
jne
scas
sub
cmpsl
or
aam
xchg
jmp
lock
or
or
and
scas
sub
jae
scas
dec
lea
insb
and
mov
mov
mov
xor
cltd
jge
pop
push
pop
push
mov
mov
push
add
rcr
mov
inc
fs
cmp
arpl
push
xchg
fiadds
test
js
pop
popl
mov
pusha
into
mov
out
and
movsl
push
jmp
fdivl
dec
inc
fidivl
sbb
das
mov
pusha
rcl
inc
xor
movsl
fldenv
movsl
add
jno
mov
outsl
pop
push
xchg
xor
xor
xchg
xor
mov
xchg
push
mov
fmul
mov
sbb
ljmp
ss
repnz
mov
inc
repnz
sub
sar
mov
push
jo
jns
dec
fcomps
inc
fcoml
sbb
arpl
js
fcoml
xor
fsubl
leave
in
int
add
pop
jns
ljmp
fisttpl
xchg
mov
adc
aaa
cli
stos
cltd
sub
or
and
sbb
fldenv
cwtl
into
lds
hlt
test
adc
add
ljmp
pop
sarb
push
dec
fists
jl
dec
in
cmp
movsl
push
repz
jo
sbb
jne
xlat
mov
std
pusha
icebp
in
xchg
xchg
iret
mov
and
shlb
dec
loop
and
lds
add
cmp
mov
jecxz
stos
sahf
add
addr16
cwtl
sub
fcmovbe
ds
jns
xchg
add
push
inc
mov
mov
dec
jbe
mov
adc
dec
jno
push
xchg
jo
int3
adc
fwait
inc
popf
add
ljmp
stos
aad
push
jg
cmp
out
test
or
addl
pop
daa
or
jge
xor
fistpll
mov
cmp
test
mov
mov
mov
insl
xchg
adc
mov
pop
fs
das
lcall
insb
sub
cwtl
mov
xchg
popf
mov
mov
pop
fcomps
fwait
jne
aam
jp
in
jl
cmp
popw
out
fistl
push
in
lret
ret
jo
mov
stos
jno
push
insl
ds
push
or
nop
ret
mov
and
mov
add
push
std
or
dec
testb
cmp
mov
sbb
int3
mov
cmp
adc
data16
and
mov
cli
fsubl
mov
fbstp
cmp
lock
jnp,pn
or
lcall
out
xchg
andb
xor
leave
jl
pushf
cld
mov
and
mov
je
sbb
cld
push
fwait
in
adc
cmc
insl
test
in
gs
jbe
lds
mov
nop
cwtl
mov
gs
mov
mov
in
js
lods
leave
mov
in
sub
push
push
outsl
cmpsb
jne
push
jae
loope
sub
mov
and
and
adc
int3
fistpl
aam
pop
cmp
sbb
jno
pop
gs
lea
lret
imul
roll
mov
fidivrl
lds
out
adc
lods
cli
mov
cmp
addr16
insw
repz
enter
scas
jo
adc
sbb
sub
out
sub
das
shll
lahf
sub
call
or
int
lods
mov
mov
xchg
jecxz
or
cwtl
jg
jae
xor
mov
sahf
pop
shll
mov
sbb
ljmp
ret
inc
bound
aam
inc
xor
sbb
sub
or
popf
mov
jmp
stos
pop
xchg
incb
jg
fwait
jbe
push
jo
nop
adc
test
outsb
fdivs
inc
fists
test
repz
dec
dec
mov
testb
cmp
and
imul
sahf
addl
xlat
push
fstps
jbe
add
imul
sbb
push
add
popa
ret
imul
je
js
in
push
sarl
cltd
dec
adc
sub
lea
sub
lret
inc
scas
ret
imull
and
add
mov
aad
dec
or
roll
pop
ret
cs
lods
mov
fdivl
and
or
negb
cmp
imul
shrb
dec
adc
sub
push
and
cmpsb
xor
add
pop
inc
sub
enter
shll
orl
and
lahf
add
and
push
fcompl
xlat
jae
xchg
jl
clc
add
clc
mov
int3
mov
push
jno
lock
and
lret
nop
pop
out
jbe
and
fs
mov
push
push
insb
jecxz
stc
pop
sbb
repz
push
xor
out
jmp
subb
mov
and
fnstsw
mov
jo
push
xor
addr16
adc
mov
mov
or
fisttpll
jae
in
iret
xor
inc
in
mov
push
cli
mov
xor
sub
sbb
mov
or
out
sarb
xchg
jle
push
frndint
fsubrs
pop
jl
mov
sbbb
mov
out
mov
scas
loopne
mov
cmpsb
and
in
sub
popf
outsb
lret
sbb
rcrl
mov
xchg
and
sub
sbb
mov
dec
repnz
mov
dec
pusha
into
imul
or
pushf
sub
pop
add
cmpsl
mov
add
cmpb
add
rcll
mov
in
cmpsl
popf
pop
mov
xor
sbb
add
push
jne
add
pop
pop
imul
mov
movsb
adc
sbb
mov
shll
add
dec
or
or
add
and
pushf
dec
adc
leave
shl
xor
ret
rcrl
pop
daa
push
sarb
fwait
inc
in
mov
aad
cwtl
clc
popa
jge
dec
xchg
movsb
push
pop
push
push
and
xor
dec
sub
push
aam
in
sbb
push
fmulp
mov
jmp
fs
ljmp
into
int
sub
dec
mull
push
dec
cmp
mov
lret
mov
loopne
push
pop
sub
add
mov
sub
shll
roll
xor
pop
fiadds
push
push
sub
pop
ds
es
in
cmp
cmp
andb
frstor
xor
push
add
or
dec
iret
xor
xchg
or
hlt
jo
psubw
loopne
mov
dec
fs
add
cmc
add
push
in
aaa
lods
pop
mov
push
cmp
out
hlt
lock
clc
inc
movb
mov
subb
sub
jle
fadd
push
push
movsb
mov
mov
int3
arpl
push
mov
in
adc
mov
mov
mov
sub
in
cmpsb
add
stc
push
not
pop
cmc
fiadds
jmp
test
icebp
popf
lods
movsb
cmp
sbb
bound
adc
and
and
xor
fnsave
in
or
int3
out
xchg
jmp
imul
pop
cmp
dec
mov
pusha
sti
push
pop
fsubrl
xchg
cld
sbb
cli
and
aad
xchg
push
push
xor
jo
and
jbe
popf
xchg
xchg
inc
pop
les
mov
xlat
jns
ret
adcb
xchg
and
push
and
dec
test
aam
cmpb
aam
mov
xor
ss
sbb
cmpsl
ret
data16
jle
out
iret
jmp
add
aam
not
mov
mov
add
xor
addr16
ljmp
arpl
adc
leave
cmp
inc
js
mov
test
pop
pop
cmp
aad
xor
mov
mov
adc
dec
jp
pop
and
inc
stos
iret
in
outsl
sub
xchg
scas
mov
inc
xchg
push
push
loop
add
inc
cs
dec
arpl
push
test
sahf
inc
adc
cmp
test
sbb
lds
jl
add
cmp
jmp
rclb
daa
pop
std
sbb
and
lea
jp
idivl
loop
cmp
fisubrs
jl
adc
pop
xchg
loope
inc
xchg
or
cmpl
and
loope
mov
icebp
jnp
in
xor
pop
mov
dec
addr16
popa
arpl
mov
pop
cmc
cmc
pop
sbb
jge
dec
mov
ret
data16
or
or
cltd
xor
int3
inc
and
push
adc
cmp
jno
addr16
xor
es
dec
push
push
dec
cld
push
sub
mov
mull
icebp
push
push
testl
pop
ja
and
push
xor
inc
sub
add
ficoms
imul
sahf
std
sahf
iret
add
mov
mov
int
cmc
gs
hlt
mov
or
test
xrelease
pop
jae
sub
gs
dec
mov
xchg
adc
stc
xchg
lcall
and
cmp
popf
dec
fwait
outsb
or
sbb
cmp
jnp
imul
outsb
cwtl
xchg
sbb
addr16
shlb
xchg
ljmp
mov
jb
int3
rolb
stc
sub
jle
popl
jb
push
filds
jge
cmp
bound
inc
ja
shlb
xor
mov
ret
jle
gs
or
jecxz
inc
ss
arpl
sarb
aas
test
cmp
dec
fxch
jae
lds
inc
fildl
lcall
cmp
mov
push
dec
add
jne
int3
lock
jge
xchg
movsl
ds
mov
popa
sti
cmp
push
and
mov
pop
jp
xchg
addl
jno
mov
mov
in
mov
lahf
in
pushf
loopne
xor
mov
int3
mov
jns
scas
hlt
add
dec
scas
dec
jle
xchg
inc
lea
adc
es
stc
sarl
inc
fnstenv
pusha
mov
dec
mov
xchg
mov
lods
mov
sbbb
lahf
inc
inc
xor
jo
cmpsl
imul
insb
cwtl
sub
sub
mov
ss
add
ffreep
in
daa
addr16
sub
push
loopne
shrl
icebp
outsb
inc
fld1
mov
adc
popf
fwait
xor
add
mov
sarb
out
loopne
sub
lods
sti
out
js
push
mov
jl
cmp
ret
movsl
pop
add
repnz
shl
cmp
or
cmp
mov
pusha
dec
scas
repnz
fbld
push
js
ljmp
ficompl
and
pop
ljmp
nop
fstps
stos
testl
leave
sbbl
sub
dec
or
adc
mov
cmp
jge
cmova
inc
cmp
mov
sub
pop
ds
jno
and
and
push
jno
push
scas
fwait
push
dec
xchg
mov
sub
cli
pop
mov
dec
and
adcb
cltd
fsubrl
add
jecxz
mov
aas
outsl
inc
pop
cmp
push
jnp
dec
xchg
aam
iret
mov
pop
inc
les
mov
movsb
dec
inc
in
loope
cmp
xchg
xchg
decl
jle
mov
loop
cwtl
or
add
ror
out
mov
lahf
out
shr
je
xor
aad
mov
or
lock
rol
push
and
mov
push
jl
pushf
loop
push
sub
cmpsl
cld
mov
add
lods
lcall
mov
dec
cmpsl
jo
fistps
push
mov
jb
push
pop
lcall
dec
iret
xchg
mov
test
repz
lret
mov
push
push
movsl
fmuls
jmp
push
call
mov
pop
pushf
iret
fsts
test
pop
into
pop
frstor
popl
stc
cmc
loope
sbb
cmc
lods
mov
xchg
mov
or
enter
xor
sub
mov
jl
xor
loope
inc
xchg
xchg
mov
add
sbb
addps
adc
sti
adc
and
push
jne
sub
ficomps
in
rclb
jg
inc
ret
sti
inc
or
mov
loope
add
or
cmp
xor
jo
imul
outsb
scas
push
adc
adc
dec
pop
arpl
jae
sub
lock
cmp
xor
arpl
add
xchg
stc
pop
fcoml
pop
shll
popf
mov
sub
jp
js
popf
daa
jb,pn
clc
cmp
inc
push
imul
std
roll
jmp
or
dec
pushf
incb
adc
sbb
mov
outsb
mov
add
ja
and
das
add
and
outsb
in
clc
sbb
jno
movsb
jg
mov
add
pop
xchg
mov
adc
fldt
mov
addr16
sbb
imull
into
ljmp
inc
ljmp
pop
test
mov
push
bound
jb
xor
insl
xor
dec
jns
pop
mov
cmp
popa
jae
fcoms
jne
cmp
xor
xchg
add
jle
nop
scas
test
dec
xchg
scas
repz
adc
and
rclb
jmp
and
dec
dec
dec
xor
sti
fsubrs
sub
and
mov
nop
xchg
jo
scas
ljmp
pushf
or
xlat
or
inc
ficoms
bound
mov
test
popa
cli
lcall
lods
sbb
sub
or
hlt
sbb
into
bound
pop
imul
mov
xchg
xchg
sbb
xchg
loop
stc
pop
mov
cmp
das
jae
pop
fisubrl
imul
jo
bound
dec
movsb
dec
in
inc
xchg
and
das
stos
fdivrs
pop
cmp
xor
lds
fdivl
ss
aaa
std
aad
daa
mov
cwtl
adc
dec
repz
xchg
or
aaa
popa
mov
xchg
hlt
loop
push
or
in
add
fwait
sub
ja
inc
xchg
and
insl
pop
jg
sbb
pop
in
insb
jnp
fwait
lcall
je
stos
pop
movl
mov
pop
dec
dec
nop
test
mov
add
push
sbb
pop
mov
or
mov
outsl
jmp
lods
fs
inc
or
decb
push
jnp
sbb
in
xor
leave
mov
mov
mov
mov
push
push
shlb
pop
or
inc
fadds
sti
insl
bound
loope
call
loop
int3
pop
pop
adc
mov
push
xchg
adc
adc
lods
bound
adc
fwait
jl
in
insl
scas
pop
call
lock
inc
push
addr16
mov
and
dec
mov
es
xchg
call
jnp
dec
or
mov
aaa
popf
jbe
mov
inc
or
jbe
lods
cmp
sub
mov
push
adc
ja
push
push
adc
loopne
stc
dec
in
popf
xor
fnstsw
fisubrs
sub
mov
mov
imul
or
or
mov
xchg
fwait
data16
js,pt
iret
and
adc
pop
insb
stos
popf
xchg
inc
aad
sbb
sahf
les
imul
sub
inc
push
mov
jl
stos
mov
int
or
iret
rolb
test
lods
lods
pop
es
aaa
je
mov
jo
sub
sbb
and
stos
sub
mov
lahf
mov
sbb
lahf
clc
adc
call
test
push
movsb
mov
loopne
std
movsl
mov
fucomi
adc
sbb
jno
mov
mov
mov
daa
push
pop
mov
imul
add
cmp
pop
shlb
popf
imulb
mov
sahf
and
pop
push
sbb
call
pop
jl
jae
or
or
cwtl
cmp
loopne
sbb
dec
lret
jnp
inc
sbb
xlat
jg
push
clc
jle
ja
add
popa
pop
in
and
mov
inc
mov
push
pop
ficoms
xchg
adc
std
fbld
mov
or
dec
test
adc
inc
aas
cli
shll
in
mov
pushf
mov
xchg
mov
pop
test
insb
cmpb
sub
xorl
imul
mov
adc
lds
and
lea
cmpb
loop
clc
arpl
mov
cmp
insl
insb
cltd
inc
sub
dec
or
pop
leave
jl
jne
or
outsb
mov
jl
das
or
xor
xchg
or
popf
stc
sub
lret
adc
dec
xchg
and
out
cld
scas
adc
jae
movsb
in
fs
xor
test
and
cli
dec
jmp
out
dec
in
xchg
loop
ret
ljmp
inc
ret
in
push
pop
call
sbb
int3
ss
push
jl
mov
mov
or
scas
dec
lcall
push
lcall
or
les
inc
add
xchg
sub
dec
mov
dec
mov
lods
inc
lret
les
popa
dec
add
incl
in
mov
inc
adc
mov
mov
and
add
shlb
stos
ja
es
outsl
xor
rol
lock
adc
or
pop
imul
jmp
mov
cmc
cld
cmp
dec
add
push
push
mov
fsubs
mov
aam
push
sbb
jbe
xchg
pop
lods
fwait
lret
add
mov
jns
push
cmpb
in
rorl
rorl
into
mov
or
xor
in
aad
mov
lahf
or
sub
kmovw
bound
push
out
sbb
inc
int3
mov
scas
mov
sub
daa
xchg
xchg
std
ja
out
leave
mov
pop
out
jg
cmpsl
cmp
into
add
into
mov
push
and
sbb
push
mov
jb
adc
jecxz
fistps
dec
mov
xorb
test
sbb
nop
imul
push
push
test
xor
push
ret
lds
cmovle
add
pop
xchg
pop
cltd
mov
imul
mov
lret
cmp
loope
ret
jbe
testb
fwait
jo
jge
cmp
push
outsb
xor
cmpsb
sub
pop
jne
dec
popa
shl
push
inc
dec
ds
mov
inc
mov
test
adc
or
in
call
adc
sub
inc
cwtl
pop
dec
gs
cmc
ss
in
mov
lcall
into
faddl
mov
add
rcr
cmpsb
shrl
xchg
jbe
dec
adc
icebp
ss
ds
cltd
adc
in
xchg
pop
push
fs
jmp
mov
divb
push
or
js
pop
dec
push
xor
cwtl
sub
stos
inc
gs
repz
lret
dec
pop
fstpl
js
push
add
jle
fwait
mov
sahf
push
dec
jnp
xchg
mov
pop
push
or
shr
mov
js
imul
fwait
dec
dec
ja
jmp
inc
adc
mov
adc
xor
jg
cmpsl
mov
lods
mov
add
add
fucom
push
pop
pop
jns
sbbl
pop
push
fwait
rcrl
dec
push
insb
or
lret
cwtl
aaa
cwtl
idivl
and
add
popa
fadds
nop
scas
xor
cwtl
lods
fsubrs
cmp
shlb
cmp
sub
cltd
mov
push
jge
cmp
pusha
push
sub
div
cmpsl
push
sub
dec
jbe
inc
sub
mov
adc
test
mov
test
les
fwait
insl
jle
lahf
test
lret
xor
jns
bsr
add
outsb
dec
push
js
dec
in
jae
not
lock
lcall
shl
cli
lock
xchg
pop
fiadds
es
mov
aam
xor
fisttps
xchg
les
xchg
hlt
dec
push
cwtl
pop
mov
sbb
pop
in
stos
aaa
mov
sbb
xchg
pop
jl
mov
push
jge
mov
popf
stos
fwait
pop
jno
imul
test
lcall
popa
scas
cmc
mov
xor
mov
dec
and
stos
outsb
lahf
stc
jb
je
mov
fiadds
scas
and
mov
or
xchg
push
xor
and
cli
dec
repnz
iret
shll
in
jle
es
enter
push
mov
scas
rcrb
mov
in
add
enter
xchg
clc
jle
scas
jno
adc
add
mov
inc
ljmp
mov
bound
popa
and
in
pop
repz
or
add
ja
daa
mov
xor
iret
je
sbb
in
pop
add
jo
pop
adc
push
xor
leave
sbb
add
inc
sub
scas
movsb
fs
inc
out
ret
xchg
add
pop
xor
lcall
xchg
pop
mov
shll
rcl
in
sbb
adc
xor
stos
jg
stos
sbb
mov
inc
jecxz
subl
add
rclb
mov
test
inc
dec
add
mov
ss
jp
pop
push
lods
call
sub
leave
push
jbe
jns
inc
daa
out
add
xor
sarl
cmpsl
out
lock
call
shrl
pop
push
mov
outsl
mov
lahf
fcmovnbe
adcb
xchg
call
cmp
sbb
cli
or
inc
cld
loope
sbb
addr16
sub
sbb
sbb
and
dec
xchg
push
pusha
jmp
iret
or
or
pop
mov
fs
dec
test
xchg
dec
aam
rorb
and
scas
aad
mov
or
gs
pop
pushf
xchg
sbb
cmpl
addb
shl
pushf
movsb
sar
aam
mov
dec
xor
pop
fs
popf
add
es
outsl
add
subl
push
lods
fsts
fwait
gs
sub
jmp
and
cmp
and
jb
jb
xchg
jo
sub
sub
sbb
or
mov
mov
lahf
addr16
xchg
push
xor
cmp
pop
jne
mov
jl
xor
and
inc
cmpsb
and
jno
inc
jbe
cmp
inc
push
or
and
xchg
push
pop
daa
jo
div
adc
jmp
dec
outsb
cmpsb
lods
adc
jg
repz
add
mov
dec
lret
ljmp
and
in
pop
xchg
pop
pop
into
sbb
mov
clc
std
popf
arpl
hlt
adc
pop
dec
xchg
sbb
and
inc
icebp
in
fcomi
add
lods
adc
outsb
xor
in
or
sbb
or
pop
mov
mov
test
xchg
fsts
add
push
lds
inc
inc
mov
jbe
fs
inc
stc
push
dec
fimull
xor
jg
xor
mov
das
sbb
push
rorb
test
mov
xchg
out
outsl
mov
stos
out
dec
jp
sub
mov
cmpsb
loope
dec
mov
inc
dec
xchg
xor
je
xor
pop
nop
mov
add
sub
fildl
mov
mov
jbe
subl
fwait
leave
call
sub
pop
popf
jp
stc
cmc
call
mov
stos
pop
mov
mov
ljmp
mov
cmpsb
and
lock
add
and
cmp
aaa
aaa
pop
dec
mov
pop
pop
fsts
aad
jbe
push
mov
into
in
fistpll
rep
fistpl
pop
arpl
mov
jge
and
lret
je
xor
jae
insb
sub
mov
in
and
add
insl
out
outsb
cs
adc
test
rorl
imull
mov
sub
push
mov
daa
ret
sar
stos
xchg
xchg
aam
pop
addr16
lcall
int
loopne
pop
jo
bound
adc
add
jo
xchg
int
sbb
push
jecxz
dec
mov
fsubrl
sub
adc
hlt
pop
imul
pop
dec
jle
xchg
inc
hlt
sub
pop
in
push
dec
push
icebp
in
add
sahf
dec
inc
jnp
fwait
xchg
ficompl
mov
movsb
mov
jnp
mov
aaa
push
xor
pop
jp
popf
loope
add
sub
aaa
repnz
mov
xchg
pop
scas
xor
sbb
jge
sub
xchg
leave
int
mov
ds
and
imul
fcomi
xor
std
shll
adc
repnz
xor
icebp
or
ds
jg
dec
jnp
pmullw
xor
and
outsl
mov
push
cmp
popf
mov
roll
inc
gs
outsb
jno
push
add
rcrl
xchg
nop
or
or
mov
add
add
lock
pop
repnz
mov
xchg
sub
jmp
cmp
outsl
inc
lds
in
push
rcll
jge
mov
enter
push
cmp
imul
add
les
cmp
inc
mov
mov
out
incb
mov
fs
scas
push
movsb
xchg
aaa
cwtl
or
lods
pop
out
jns
xchg
cli
add
adc
xchg
inc
add
gs
jecxz
fistpl
addl
das
adc
fs
or
xlat
leave
stc
testl
test
pop
subb
adc
pop
push
sbb
sbb
inc
cmpb
add
cltd
cs
fcmovnbe
pop
lahf
dec
test
mov
xchg
sbbb
mov
xor
pop
insb
pop
push
loop
cwtl
cmpsb
jns
lods
dec
cmp
jg
loope
pop
dec
xlat
aam
xor
mul
sbb
xlat
aam
sbb
mov
dec
or
sub
pop
sub
xchg
cld
ss
push
out
inc
jl
in
imul
push
mov
jl
lods
push
adc
mov
xchg
outsl
pusha
jbe
mov
gs
mov
je
push
sti
lds
mov
push
push
int
aaa
popa
lcall
aam
movsl
inc
xor
jbe
lret
push
push
pop
xor
lret
xor
in
pushf
cmpsb
sub
hlt
adc
outsb
cmpsb
fdivl
adc
mov
xlat
or
das
ljmp
xchg
mov
enter
dec
push
sub
adc
jle
pop
movsb
scas
ret
int
or
and
and
lea
test
clc
xchg
adc
mov
in
xchg
adc
cmp
cmpsl
dec
stos
cli
lods
sbb
mull
add
cmpsb
lock
dec
push
outsb
mov
adc
xchg
fcompl
jl
pushl
ljmp
gs
imul
jl
xchg
out
sub
xor
cmc
add
mov
mull
or
pop
sarl
dec
enter
ret
xorb
sahf
scas
push
sub
xor
push
mov
addr16
fmuls
dec
mov
or
out
add
jmp
es
inc
dec
jl
data16
sbb
pusha
lds
bnd
ret
or
mov
pop
cmp
icebp
jns
shl
clc
loopne
fisttpll
mov
nopl
loopne
repnz
mov
cs
sub
push
jge
sbb
popa
lret
mov
and
mov
dec
jge
aaa
xchg
andl
nop
xor
in
push
scas
xlat
jae
dec
push
hlt
out
test
jl
sbb
xor
or
pop
dec
outsb
push
xlat
es
pop
pop
lcall
adc
pop
out
xchg
cmp
int
add
jle
pop
imul
mov
imul
out
outsb
jo
inc
pop
push
fdivp
test
mov
fstpt
dec
cli
enter
sbbb
lds
imul
mov
vxorps
je
adc
or
adc
adc
add
repz
arpl
ficomps
lds
push
in
loopne
sbb
xor
cmp
fstps
xorb
pusha
mov
aas
popa
xor
sbb
xor
add
or
cmc
pop
mov
out
push
jbe
mov
add
test
pushf
xchg
stos
clc
outsl
insl
xchg
jno
loope
lret
fcomps
pop
stos
hlt
out
movsb
shlb
jne
arpl
sbb
in
cmp
nop
xchg
jmp
dec
pushf
xchg
xor
sbb
or
mov
sub
mov
ror
and
mov
sbb
mov
xchg
or
add
mov
add
add
cmp
sarl
and
jmp
cmc
mov
xchg
xor
dec
call
aam
lcall
and
pop
and
mov
xchg
and
mov
testb
cltd
enter
push
jno
jb
les
jmp
xor
insl
cs
fsubp
pop
dec
sub
stos
call
ds
mov
mov
loopne
popl
arpl
aaa
cmc
lcall
dec
loope
test
loope
rclb
xor
ficoms
sti
test
add
mov
into
cmp
lea
fst
pop
xor
jecxz
mov
rclb
out
fldenv
in
xchg
out
popf
std
loop
mov
push
sub
cltd
mov
dec
sub
and
movb
mull
push
test
fs
mov
pop
out
or
xor
rcrb
lods
sti
xchg
add
xor
sti
das
addl
pop
scas
pop
jge
xchg
dec
or
test
xchg
outsl
mov
cs
das
jle
or
mov
cmp
fwait
pop
jb
pop
push
mov
gs
pop
loope
shlb
icebp
add
sbb
test
mov
sub
filds
into
lret
mov
cs
inc
xor
call
mov
fidivrl
push
xchg
testl
cmp
mov
loopne
jmp
pop
fnsave
or
fcmovne
xor
adc
cwtl
xlat
mov
dec
ja
loopne
fmul
lret
call
test
cmpsl
pop
hlt
imul
inc
pop
inc
int3
loopne
lcall
mov
mov
jbe
lahf
pusha
out
and
aad
dec
add
mov
in
push
test
mov
inc
sub
roll
test
sbb
outsb
loopne
xchg
in
pop
mov
daa
cs
loop
loopne
lret
add
push
jg
push
arpl
sub
lahf
jo
mov
cmc
inc
shl
call
xchg
leave
in
pop
sub
cmpb
mov
gs
cmp
cld
into
rorb
jp
repnz
xchg
and
testl
test
fmuls
jle
sbb
nop
pop
pop
rcrl
adc
jae
leave
test
add
jl
repz
stos
stos
ret
sbb
xlat
addr16
addr16
sbb
add
push
les
pop
and
mov
enter
daa
adc
jg
inc
dec
inc
dec
and
and
sbb
xor
cwtl
into
movsl
cmp
mov
testb
sub
ret
mov
sub
sbb
cmp
orl
xchg
inc
mov
pop
xor
pop
fists
adc
pop
icebp
mov
lret
push
iret
jo
int3
jnp
sbb
roll
lods
sub
hlt
dec
xor
inc
iret
movl
aaa
push
cltd
sbb
dec
mov
cmpb
mov
pop
sub
push
mov
loop
sbbl
pushf
mov
cmp
imul
sahf
outsb
lcall
fiaddl
or
push
mov
aam
pushf
cmp
rolb
jns
jae
clc
push
les
lods
fisttps
fnstcw
scas
sub
repz
xor
je
sub
adc
shlb
jno
and
mov
sarl
add
cmp
and
sub
jg
xchg
rorl
push
outsl
cmpsl
in
loopne
fs
push
addr16
jmp
mov
into
arpl
inc
cmp
leave
outsb
jg
out
push
inc
push
push
aad
mov
ds
jns
cmp
dec
and
cmp
xchg
cld
jecxz
dec
movsb
out
in
mov
mov
mov
ret
test
iret
jg
adc
pusha
or
enter
xchg
sub
and
popf
cmp
inc
jbe
jnp,pn
mov
fldt
cmp
leave
or
jle
pushf
mov
mov
inc
test
or
xlat
mov
mov
test
push
pop
addr16
xchg
pop
andb
push
xor
or
push
jmp
lock
out
inc
mov
sub
mov
or
std
jae
push
sub
mov
cltd
std
aad
mov
gs
out
xchg
inc
or
push
sbb
cmp
sub
insl
mov
xor
shlb
mov
adc
roll
int3
jecxz
sub
sahf
scas
push
cmpl
popf
push
dec
xor
sbb
xchg
les
repz
mov
arpl
outsl
inc
shlb
inc
pop
pop
sti
popf
lock
mov
lahf
sbb
sub
pop
clc
mov
or
xlat
jmp
pushf
call
jbe
push
cmpsb
ficoms
pop
jg
bound
jl
adc
ja
rsqrtps
cltd
mov
dec
insb
dec
loop
inc
jns
pop
sbb
sbb
int
lret
push
lds
jno
and
mov
out
xchg
inc
cli
adc
cli
xchg
dec
mov
das
push
and
lahf
push
mov
out
sbb
lods
inc
xor
push
jmp
imul
sub
lods
sti
ret
fstl
xchg
das
aas
push
repz
lret
insl
cld
push
xchg
fadds
stos
dec
loope
cltd
xor
mov
nop
inc
outsb
sub
loopne
aad
or
push
js
nop
xchg
sbb
hlt
stos
pop
pop
jbe
popa
jl
jne
out
jg
pop
or
adc
cmp
fdivrl
stos
sub
fildll
outsb
xor
test
adc
fcompl
rcr
stc
loopne
and
imul
adc
and
pop
cmpsb
stos
sub
adc
stos
clc
mov
or
sub
mov
cld
mov
adc
dec
adc
push
jecxz
dec
inc
ja
mov
fwait
xchg
mov
pop
sahf
xor
jne
stos
pushf
loop
mov
sbb
ret
xchg
pop
xor
cwtl
aaa
iret
mov
mov
daa
jns
dec
idivb
sub
sbb
push
pushf
inc
lcall
xor
lods
adc
cmc
lret
xor
arpl
push
test
sub
jb
js
or
and
jne
sub
mov
test
out
in
sbb
or
push
sub
scas
stos
ljmp
pop
add
iret
xor
mov
nop
jl
shl
jle
cmp
or
or
lret
cmpsl
jecxz
lods
mov
pushf
add
cltd
daa
cmp
bound
popa
mov
mov
fidivs
shlb
push
inc
push
call
dec
jae
ja
mov
popa
js
xor
fadds
xor
xchg
bound
shrb
xchg
stos
arpl
leave
pop
jns
dec
fisubrl
lds
popa
pop
and
imul
ret
insb
pop
adc
movsl
xchg
scas
push
adc
xor
clc
fnsave
in
std
sbb
mov
and
enter
pop
dec
popf
xchg
das
dec
dec
fcompl
inc
nop
roll
loope
fnstsw
ja
mov
jo,pn
lahf
pop
popa
ja
call
push
pop
movsl
sub
into
mov
pop
pop
mov
inc
push
test
lcall
mov
xchg
mov
fwait
push
call
jle
mov
mov
pusha
sub
push
and
dec
lods
jnp
icebp
test
scas
fcomps
arpl
or
or
xor
push
cmp
push
lds
ret
sbb
pushf
mov
pusha
sub
outsb
xchg
or
pop
pop
stos
adc
loop
mov
push
dec
push
adc
xor
sub
hlt
mov
xchg
aas
xchg
pop
repnz
cltd
push
fcmovbe
data16
dec
add
fmul
cmp
sahf
and
or
xor
pop
mov
push
push
or
out
xchg
mov
pop
aad
sbb
push
xchg
cmp
and
repz
jge
mov
push
pop
mov
bound
mov
fs
testb
test
cmp
call
sbb
push
sarb
mov
jno
jmp
out
scas
shrl
push
xor
cmp
adc
adc
mov
scas
mov
or
inc
fmull
lcall
jns
or
cmpsb
into
jmp
push
and
pop
sahf
test
jnp
mov
lock
outsl
xlat
test
imul
sbbl
mov
lahf
fsubl
mov
sub
xlat
jg
sarl
inc
xchg
add
testb
loop
es
adc
adc
stc
sbb
nop
leave
dec
inc
scas
mov
roll
mov
andl
dec
xchg
ljmp
inc
shrb
or
test
sbb
ds
insb
repz
mov
xchg
pusha
and
test
icebp
into
lcall
xchg
enter
cmc
out
ljmp
mov
sub
imul
cli
dec
cli
push
scas
push
lret
add
mov
test
xor
scas
pop
pop
leave
and
xor
jmp
jl
inc
xlat
and
dec
aas
fcmovbe
mov
insl
dec
push
jae
test
repnz
sahf
clc
cmp
pop
adc
push
jge
jmp
sahf
aas
push
push
cld
ror
inc
xlat
and
or
call
jns
je
cmpsb
pop
jmp
or
test
xchg
in
and
cmp
push
fsubs
mov
les
sub
aaa
out
das
xadd
pop
jnp
push
pop
lock
call
jmp
movsb
push
push
cmp
mov
mov
or
fnstcw
or
xchg
pop
mov
push
mov
fldenv
xchg
lcall
flds
outsb
icebp
cmp
sahf
je
sarl
adc
pusha
iret
sahf
adc
add
scas
in
dec
ret
divl
inc
xchg
clc
mov
movsl
xor
push
cmp
and
rcr
ret
adc
push
xor
push
das
fisubl
sbb
dec
or
xchg
inc
ds
jne
fmull
sbb
push
pop
cld
call
call
push
lods
rcll
and
xor
test
push
mov
bound
fimull
xchg
cmp
decb
jp
ret
mov
inc
mov
or
rclb
je
bound
xchg
xor
lret
pop
repnz
dec
jb
lds
dec
jge
rolb
dec
fsubs
mov
pop
xor
sahf
mov
mov
mov
sub
cmp
cld
pop
sub
fptan
or
pop
xchg
jg
cs
adc
mov
int
ds
rcll
pop
add
imul
enter
mov
bound
int
fisubrl
push
js
mov
out
cltd
mov
pop
jbe
jle
mov
xchg
mov
add
mov
or
pop
xor
jb
int3
pop
sbb
pop
xchg
jo
cmp
cmp
iret
sahf
xchg
mov
pop
je
lea
gs
xchg
sbb
mov
or
shlb
xchg
dec
xchg
icebp
fldenv
adc
xor
xor
add
les
xchg
inc
xchg
gs
xlat
cmc
mov
mov
shrl
mov
jb
ss
lea
push
mov
stos
sub
push
lea
into
jns
cld
adc
incb
loope
push
cld
in
leave
or
lods
pop
dec
cwtl
subb
lahf
inc
rolb
xlat
add
jl
rcr
adc
sub
mov
sbb
jae
xchg
xor
jmp
inc
xlat
push
fidivrl
jl
pop
cld
je
loopne
inc
inc
push
popf
test
dec
jb
test
icebp
inc
imul
addr16
je
lods
clc
fimuls
outsl
cmp
cmp
pop
pushf
aad
cmpsl
xor
out
clc
and
jmp
imul
lock
repnz
test
stos
and
sub
aas
test
push
popf
push
scas
jl
daa
or
daa
or
in
lock
dec
es
dec
cli
cld
add
dec
xchg
js
xchg
jb
pop
mov
inc
sti
out
jmp
mov
xor
popf
xsha256
cmpsb
xchg
cwtl
jo
pop
fildl
loope
xlat
sarb
sub
cs
mov
dec
sub
fnsave
ficomps
sbb
jecxz,pt
js
adc
fsubs
jbe
jmp
jns
pusha
lods
add
push
into
aam
ret
or
clc
addl
cmc
js
roll
cmc
iret
mov
jle
xchg
sub
adc
push
sub
cwtl
mov
jno
sbb
ja
and
outsl
mov
pop
cs
sbb
jno
mov
pop
add
or
push
jbe
xor
inc
adc
pushf
jo
icebp
pop
push
or
pop
movsl
int3
into
int
pop
push
sub
stc
xchg
inc
call
xchg
mov
jo
daa
repz
in
mov
aas
lret
outsb
inc
std
pusha
std
int3
dec
sbbl
push
ja
or
push
mov
ret
int
fwait
mov
shl
call
sub
or
or
jge
mov
inc
adc
mov
sub
negl
jae
mov
movsb
lea
les
xchg
push
mov
das
xchg
push
xor
lret
jno
xchg
sub
ret
ljmp
and
push
pop
push
dec
sahf
sub
cmp
or
test
and
xor
cmp
inc
nop
mov
enter
pushf
and
iret
popw
adc
mov
fcoml
mov
int3
stos
xor
adc
dec
ja
mov
add
shll
mov
mov
dec
testl
cmp
adc
popa
pushf
jae
adc
test
add
int3
inc
mulb
lahf
xor
xchg
pop
mov
mov
ret
imul
jnp
lcall
inc
arpl
test
pop
pusha
std
cmovg
xor
inc
pop
aas
imul
leave
sub
jg
fiaddl
fisttpll
testb
cld
inc
lcall
pop
outsb
out
mov
and
push
add
or
popa
insb
loop
in
imul
int3
das
rep
daa
cmp
dec
dec
ss
add
outsl
mov
fistl
mov
les
mov
sti
and
or
mov
test
cmp
aad
cmp
mov
testl
jnp
rep
sbb
mov
and
fcmovu
je
adc
push
sbb
add
push
inc
push
arpl
pop
fnstcw
pop
sub
pop
pop
sbbl
gs
insb
mov
dec
push
leave
inc
fldenv
xorl
outsl
mov
sbbb
pop
push
or
inc
sbb
lahf
lret
and
and
test
imul
in
lock
gs
hlt
or
jge
in
testb
jecxz
xchg
mov
cwtl
pop
imul
push
jno
leave
mov
gs
in
xchg
dec
in
popf
xchg
pop
cmp
and
mov
mov
scas
mov
jno
inc
fwait
cmp
in
aad
sbb
jg
test
mov
xchg
hlt
imul
fstps
or
dec
shll
mov
jp
data16
push
test
mov
xorb
inc
ljmp
push
ret
jns
ret
test
hlt
lahf
jns
or
ljmp
jp
out
mov
aad
hlt
daa
mov
loopne
and
xchg
xchg
fdivrs
ret
es
or
xor
xor
out
aas
test
xchg
les
dec
call
in
mov
call
dec
mov
clc
xorb
cmc
call
lods
rcll
shl
push
xchg
or
inc
ljmp
and
mov
cld
icebp
lahf
ja
dec
and
mov
jb
outsb
mov
call
sub
inc
jg
cmp
into
jp
pop
adc
push
jns
mov
sub
loop
adc
add
mov
das
out
in
ljmp
xor
xchg
fwait
sub
add
or
adc
sbb
movsl
mov
or
sub
lahf
lret
es
cmpsl
xchg
divl
nop
pop
scas
stos
pusha
mov
testb
cmpsb
scas
rclb
movsl
ret
mov
movsl
enter
lret
sbb
imulb
and
mov
inc
mov
test
lret
and
xlat
cld
dec
adc
out
and
lcall
xchg
jle
imul
rcl
sbb
ss
pop
adc
lds
cmc
shrl
push
add
repz
adc
adc
pop
jge
cmpsl
and
push
dec
pop
push
xor
jno
aad
mov
and
inc
jmp
ja
mov
fistl
dec
sub
adc
fnstsw
sub
xchg
shll
lret
ficoml
jo
nop
xor
inc
push
inc
arpl
xchg
push
les
fs
addr16
push
ror
into
cld
xor
aad
std
mov
mov
inc
dec
jg
or
shlb
lods
je
xor
jmp
sti
push
movsb
mov
hlt
outsl
jmp
fmul
adc
dec
roll
mov
aam
loope
es
in
or
mov
mov
lock
test
inc
ds
sub
daa
addr16
in
xchg
outsl
dec
mov
and
cmp
clc
dec
jns
sbb
cli
loope
push
or
popf
ljmp
lret
and
divb
jne
pusha
out
adc
push
rcr
jno
popa
push
in
popa
pop
dec
dec
es
std
mov
mov
shll
pusha
or
insb
adc
mov
shrl
aad
dec
push
xchg
das
cmpsb
mov
add
inc
rcll
in
push
fs
pop
sbb
cmp
cmp
enter
stc
pop
pushl
pop
xchg
insl
inc
inc
sahf
dec
dec
push
jne
pushf
cld
outsl
push
or
test
jne
add
lret
fisttpl
dec
dec
mov
pop
jbe
and
in
sub
inc
push
cmp
mov
dec
mov
aad
mov
sbb
ret
add
and
inc
mov
inc
mov
xchg
inc
mov
shrl
dec
stc
xor
in
fsub
movsb
inc
mov
insb
inc
test
aaa
addb
add
jno
repz
cwtl
outsl
mov
stos
es
rorb
mov
lahf
mov
jmp
aas
and
jmp
iret
xchg
addr16
nop
and
ficoms
inc
or
sub
ss
cmp
addb
shll
jns,pn
add
pusha
daa
sbb
push
push
pop
push
aaa
mov
movsl
mov
xor
mov
push
lods
jb
or
js
mov
test
cmp
xchg
jae
and
xchg
pop
int
jecxz
push
sub
ja
sbb
cld
jae
shr
mov
fnsave
or
sbb
dec
pop
mov
xor
mov
je
rcll
sbb
orl
out
sbb
xchg
loop
cmp
rcr
aad
push
fnstcw
pop
xchg
fcompl
sub
cmpsb
pop
mov
into
lock
or
dec
xchg
jne
out
push
pop
inc
dec
arpl
and
or
sub
mov
pusha
jnp
jb
lret
xor
jl
mov
lcall
shl
nop
imul
sbbl
aam
or
inc
cmp
popa
sbb
xor
sub
add
add
dec
stos
jg
lahf
push
lds
add
adcb
repnz
outsl
in
outsb
push
xsha256
cmpsb
sarb
or
fsub
test
aam
addr16
and
sbb
rorb
pop
mov
addr16
xchg
imul
aaa
sub
xlat
not
aaa
jno
or
pop
enter
test
scas
cld
sub
ljmp
lret
shlb
imul
test
arpl
and
jmp
lret
mov
mov
push
insl
xchg
stc
and
cmp
jae
movsb
ds
shlb
dec
or
hlt
jno
inc
xchg
test
loope
shll
jo
movsl
cmpsb
pop
mov
xor
pusha
hlt
mov
std
mov
dec
mov
add
sbb
mov
mov
sbb
cs
or
cmp
jbe
dec
and
xor
push
mov
xchg
cmp
out
sub
ret
int
jle
dec
inc
addr16
xor
pop
bound
pop
call
popa
xchg
lcall
jg
scas
scas
add
mov
out
pop
mov
xchg
mov
dec
iret
and
jno
movsl
push
push
out
adc
mov
jbe
inc
pop
cmpb
xchg
out
pop
mov
sub
jnp
mov
pop
mov
repnz
gs
imul
addr16
xchg
dec
adc
mov
push
mov
jne
lds
mov
scas
out
push
roll
aad
push
je
sti
outsl
xchg
sti
add
icebp
rcrb
repnz
dec
and
mov
mov
dec
inc
or
xchg
sub
xchg
add
jnp
js
mov
and
inc
scas
jne
mov
sub
cmpsb
cmp
mov
inc
add
cmp
mov
adc
sbb
frstor
movsl
mov
dec
adc
inc
and
and
xchg
or
movsl
scas
dec
js
mov
mov
andl
mov
jp
jl
pop
stos
jp
cmp
mov
sub
mov
loope
mov
lret
sub
cmp
test
push
sub
std
fstps
fisubrs
push
cltd
lret
mov
aad
cmpsb
mov
and
cld
aad
and
xchg
fnsave
mov
mov
xlat
push
movsb
pop
scas
loop
and
add
and
shlb
enter
test
sub
add
ds
sbb
adc
pop
jecxz
bound
add
push
mov
rcl
mov
fstl
mov
jns
loopne
aad
scas
test
push
sub
jae
mov
push
mov
push
loop
push
mov
lea
popa
mov
mov
outsl
mov
push
test
data16
and
push
cmpl
std
lcall
push
paddw
lea
sub
dec
pop
fbld
push
sub
nop
and
lds
xor
add
aas
xchg
push
sbb
orb
push
jo
call
mov
ds
cld
hlt
pop
cmp
pop
sbb
out
rol
cli
clc
pop
cli
xchg
jl
sbb
fisubrs
daa
pop
inc
into
bound
push
sbb
sbb
cmp
sub
orl
jbe
jecxz
mov
fwait
rcrb
es
push
jne
or
daa
mov
cmp
adc
xchg
int3
aas
add
jbe
gs
push
lahf
in
clc
mov
ja
adcb
lcall
mov
push
push
shlb
pop
xor
andb
js
sub
or
mov
xchg
xchg
cmp
mov
mov
mov
add
dec
std
aas
stos
repz
leave
add
mov
inc
test
cld
push
jl
push
and
je
sti
mov
imul
clc
xor
and
popa
mov
das
sub
icebp
jne
xor
dec
insb
inc
cmp
or
cltd
or
mov
jmp
and
mov
push
cmpsb
scas
inc
call
and
sbb
inc
lahf
lret
addr16
mov
in
and
cwtl
bnd
loop
adc
insl
imul
or
xor
orb
push
mov
cltd
mov
inc
dec
cmp
jbe
jb
std
fistpll
cmp
pop
inc
inc
adc
adc
stc
out
mov
pop
push
mov
xchg
pop
out
sbb
xor
and
or
add
adc
mov
mov
xchg
or
xor
test
push
arpl
xor
xchg
stc
and
cmpsl
push
in
dec
insb
or
lock
sub
cmp
jo
repnz
aaa
hlt
int3
and
add
mov
sub
dec
fsubs
lret
int
scas
pop
out
into
test
adc
clc
dec
push
sub
mov
shrl
xor
sub
xor
icebp
rcrb
js
ja
test
in
adc
out
jns
cmp
mov
pop
rcrl
movsl
inc
jmp
lods
jle
fidivrl
inc
popf
int3
xor
adc
lods
rorb
leave
cld
mov
pop
loopne
add
sarl
xchg
mov
sub
test
popf
imul
add
add
leave
shll
in
ss
mov
and
adc
js
cmp
lds
sarl
lock
mov
jle
xchg
jecxz
jle
and
mov
mov
out
inc
mov
mov
lcall
xor
ss
mov
rcr
fwait
xchg
push
aas
inc
dec
mov
jbe
jmp
popa
xor
dec
in
fistps
into
mov
mov
jbe
and
pop
adc
sti
dec
into
jmp
jb
addr16
scas
loope
pop
cmp
xchg
sti
stos
rcr
insl
push
inc
sbb
push
sbb
fwait
jmp
mov
adc
add
and
int
push
and
sbb
inc
inc
insl
lock
in
add
and
arpl
cmp
int
notl
mov
cmp
test
xchg
stc
sbb
push
add
jp
repnz
jecxz
sbb
xchg
scas
pop
lea
push
ret
insl
out
adc
add
cltd
iret
cwtl
xchg
pop
pop
ret
shll
jb
dec
add
xor
aad
je
aad
cmp
push
jb,pn
stc
mov
gs
mov
pop
mov
dec
jae
and
clc
push
mov
lahf
lds
xchg
xor
or
cmpsl
ret
sub
daa
fcmovu
cwtl
aaa
int3
mov
mov
and
mov
popa
ret
out
xchg
mov
xor
and
or
sbb
int
idiv
or
mov
push
ljmp
movsl
sbbl
push
inc
nop
das
jle
pop
fisubrs
pop
push
jns
jle
xchg
pop
add
adc
add
mov
mov
dec
dec
adc
es
mov
inc
push
sbb
mov
push
jne
cmp
adc
sbb
sahf
add
stos
xor
jecxz
lcall
mov
cli
add
inc
aas
pop
or
sbb
or
icebp
and
data16
adc
push
push
cmpsl
mov
shll
in
idiv
ljmp
cmp
nop
push
decb
int3
mov
sbb
mov
ret
and
orl
sub
out
or
in
fbstp
ret
push
ds
push
outsl
push
cmp
je
xor
mov
stos
lret
scas
fs
btc
add
lcall
xchg
and
or
fs
or
pop
add
push
iret
add
add
pop
push
aaa
fistl
cmc
js
inc
cmp
mov
in
mov
insl
adc
add
dec
mov
fadds
cwtl
test
dec
pop
call
sbb
pusha
jns
mov
mov
mov
scas
sahf
int3
sub
jo
aaa
push
mov
sub
cmp
das
out
out
pushf
xor
push
adc
xor
out
jecxz
xchg
mov
sub
in
clc
sbb
stos
test
sub
pop
pop
ficomps
ret
push
fldenv
test
dec
sbb
mov
in
pop
sbb
addr16
mov
cs
out
inc
cmp
repnz
in
ds
inc
inc
pop
loopne
divl
cli
mov
xchg
mov
pushw
bound
xchg
mov
test
adc
jns
pop
and
add
xor
xor
mov
movsl
out
fdivs
ret
imul
mov
sub
xchg
out
in
push
and
mov
push
andl
or
add
pop
addr16
loop
xchg
roll
sahf
dec
cmp
scas
jae
lahf
sarb
fbstp
mov
and
push
inc
sbb
fdivs
or
mov
addl
arpl
pop
rorb
je
pop
sbb
call
add
jmp
mov
add
outsl
imul
cmc
or
mov
mov
sub
push
or
scas
and
lcall
mov
jmp
mov
int
jle
mov
add
in
and
dec
ds
out
cmp
aad
pop
jb
aad
fcmovnu
out
movsb
lods
jmp
add
fisttpl
inc
bound
sbb
dec
jle
dec
je
mov
add
lds
fcmovbe
test
dec
xchg
push
loop
icebp
sub
test
sahf
lret
repz
popf
inc
xor
aas
cwtl
fidivl
aam
add
xchg
adc
push
popa
inc
cwtl
add
pop
cmp
shll
xchg
push
sub
dec
push
mov
sub
mov
sbb
scas
arpl
pusha
add
test
fwait
cmc
inc
es
cmc
jb
cltd
dec
mov
jbe
pusha
sti
adc
and
int
ss
sbb
jl
inc
cmpl
cmp
push
inc
xor
cmpsb
pop
frstor
loopne
pop
stos
mov
testl
push
test
mov
cmp
inc
lea
enter
orb
dec
lahf
xor
sbb
jmp
push
bound
in
test
mov
push
in
cmp
and
push
in
imul
int3
stc
or
in
jno
mov
enter
scas
mul
jo
roll
enter
add
iret
sbb
and
pop
out
inc
mov
mov
leave
fdivs
jnp
lods
imul
shl
xor
xor
push
ds
and
push
dec
dec
push
jae
sub
xor
fs
pop
out
mov
les
das
mov
cwtl
dec
pop
dec
or
xchg
push
pop
sbb
inc
dec
lock
cmp
cmp
int
push
ja
fwait
push
xchg
sub
xchg
cmp
fdivr
les
push
sub
femms
cmpsb
enter
sbb
ret
test
ret
ljmp
int3
movsl
test
loope
int3
and
daa
dec
call
pmuludq
andl
jb
inc
fsubr
xchg
or
ret
pop
pop
xor
jge
lret
divl
cli
sbb
mov
and
out
and
inc
popf
mov
pushf
outsl
test
shlb
pusha
pop
xchg
pop
leave
enter
in
loopne
out
inc
mov
lahf
fiadds
xchg
cld
loop
int
leave
in
and
cmp
insl
dec
cmp
lret
or
and
js
imul
xor
dec
jo
test
push
pusha
in
inc
jno,pt
pop
pop
test
xor
stos
cltd
xchg
scas
es
jnp
or
out
stos
ljmp
jl
inc
add
out
push
popa
jo
pop
or
push
xor
arpl
mov
sub
fisubl
fwait
imul
mov
sub
in
sub
push
ljmp
lret
xchg
movsl
int3
movsl
fiadds
arpl
adc
adc
sarl
jl
jns
bound
insl
push
daa
mov
dec
mov
push
push
js
jo
repz
js
test
outsl
mov
push
dec
add
mov
scas
jne
pop
int3
and
jp
fcmovu
dec
jg
scas
adc
lea
fildl
cmp
sbb
shl
xchg
shl
rolb
and
pop
cmpsb
vrsqrtps
dec
xor
cld
xchg
sarb
mov
jb
xor
or
cli
scas
jl
dec
jb
or
add
add
xor
data16
mov
fwait
mov
dec
mov
dec
mov
xchg
lock
inc
daa
inc
lods
cmpsb
imul
pop
pop
popf
jl
loop
movsl
mov
push
test
gs
dec
xchg
inc
push
lcall
out
das
xor
je
icebp
shrl
les
push
or
xor
jns
jp
pop
mov
cltd
cmp
lea
out
lods
icebp
push
mov
rol
xchg
jmp
cmp
fimuls
mov
sub
out
sub
out
les
xchg
or
inc
xchg
clc
xor
xor
popf
inc
mov
inc
out
sbbb
cltd
lea
push
mov
push
add
hlt
sub
daa
int
adc
mov
loope
mov
cmp
inc
xchg
mov
in
xchg
cmp
andb
dec
into
dec
sti
dec
cltd
insl
and
xor
scas
and
sbb
shlb
aaa
scas
and
xor
inc
mov
ficoml
fwait
cltd
inc
sti
rorl
pop
dec
dec
inc
insl
loope
jmp
mov
es
shll
xchg
add
inc
push
jns
shll
mov
rcr
jnp
xor
mov
jmp
in
ret
or
cli
cmp
xor
ss
lret
jae
out
jae
int3
cli
dec
std
or
and
insl
aad
lods
xor
push
xchg
sub
xchg
pop
es
cld
stc
js
pop
scas
push
daa
push
cwtl
fcmove
push
jns
xchg
jne
cmp
push
xchg
fnstsw
rcl
push
fnstcw
sahf
in
push
push
cmp
out
xor
jl
and
scas
or
lcall
mov
iret
cmp
call
rcr
adc
dec
stos
inc
iret
movsl
sub
xor
daa
mov
inc
shll
adc
adc
push
xchg
mov
xchg
mov
shlb
pop
add
pop
xchg
jo
cmp
pop
aad
lcall
jg
mov
pop
fidivrl
mov
xchg
mov
repnz
mov
clc
aam
xor
xlat
dec
aad
sbb
orb
and
xchg
and
rcrb
push
push
push
push
and
nop
xor
lea
jb
adc
sbb
mov
call
sbb
imul
jne
incl
out
es
rclb
hlt
repnz
push
dec
sbb
aaa
test
add
repz
aaa
jg
pop
leave
dec
cmp
hlt
xlat
pop
mov
mov
repnz
outsb
fidivl
inc
dec
aad
in
das
mov
pushf
pop
or
out
addr16
xchg
stos
adc
mov
sti
add
insb
inc
pop
out
push
jno
pop
or
sarl
pusha
in
and
fcomps
sub
stos
mov
jg
sbb
cmp
add
ljmp
dec
dec
std
inc
cmp
out
pop
fimull
stc
xor
inc
xor
pop
sahf
shlb
xor
inc
addr16
stos
xor
ret
bnd
xor
mov
ss
jb
fildl
push
cmp
frstor
pop
in
popa
push
js
ret
sti
cmc
cmpsl
fstps
orl
out
mov
and
pop
mov
mov
mov
or
std
and
sahf
inc
hlt
testb
test
jnp
sbb
pop
js
pop
repz
mov
inc
adc
mov
push
jp
repz
adc
int
add
xor
pop
sub
daa
enter
fdivp
xchg
pop
pop
fdivs
sbb
in
insl
test
popa
nop
das
mov
push
push
jge
rcrb
popa
nop
pop
inc
mull
lcall
pop
fildll
xor
repz
sub
push
pop
sti
jns
lods
inc
bound
mov
out
cmp
jns
cmp
bound
mov
xchg
add
insl
test
add
sub
pop
sub
xchg
jmp
pushf
out
popa
pop
and
imul
mov
aad
xor
int
xor
xchg
inc
punpckldq
sub
popf
pop
or
test
cmp
ja
xlat
pop
mov
cmp
out
pavgw
pop
ja
repz
rclb
data16
int
pop
arpl
inc
sbb
jns
cmp
pop
jbe
in
xor
cmp
jmp
or
repnz
js
in
mov
xchg
xchg
mov
jl
aad
bnd
push
lahf
out
pop
pop
mov
movsl
cmp
into
int3
cli
push
pop
lahf
shrl
or
scas
lds
push
aas
movsb
or
add
out
inc
add
and
xchg
stc
lock
pop
test
jmp
dec
jnp
xorb
jp
movsl
pusha
jne
xlat
rcrl
clc
mov
lahf
daa
xor
fcoms
movsl
gs
cmp
in
mov
nop
sbb
add
add
es
jo
push
jmp
jno
adc
ds
ss
cmp
pop
or
mov
jecxz
orb
lret
mov
mov
pop
mov
push
jg
sbb
cmp
xor
hlt
adc
lock
dec
jne
pushw
fcomp
gs
jbe
in
push
dec
je
jns
cmp
mov
popf
dec
aad
into
sarb
add
mov
xchg
sbb
sub
inc
rcl
dec
sub
and
or
xchg
jl
iret
pop
jo
fs
int3
les
jbe
sbb
lea
cmp
dec
mov
pop
test
loope
in
out
stc
loope
enter
adc
mov
dec
int3
mov
jl
sbb
test
je
xorl
daa
repnz
and
sahf
xchg
popf
add
stc
push
cmp
mov
push
jo
lcall
xchg
sti
sub
mov
jle
ret
cmpsb
jb
dec
out
adc
ja
clc
test
fsubr
subb
cmp
les
ret
sbb
xor
lock
es
jmp
je
inc
int3
in
movsb
jae
add
or
xor
jns
nop
push
dec
lock
push
sbb
js
sti
push
roll
out
fildll
xor
cmc
iret
cmp
jns
cmp
cmpl
aas
out
repnz
loop
pusha
pop
mov
inc
xor
repz
pusha
ret
das
push
lcall
lret
mov
cmpsb
pop
rol
mov
inc
and
dec
xchg
movsl
mov
sub
xchg
das
mov
jle
rcl
inc
inc
arpl
pop
lods
loop
in
add
clc
rcrl
sbb
gs
mov
jp
lret
fists
shlb
mov
pop
outsl
push
enter
cmp
pop
pop
lret
dec
loope
loopne
cmp
ss
notl
pop
cmpl
in
inc
sub
push
loope
out
and
xchg
ds
cmp
pushf
sarl
mov
adc
mov
mov
mov
fcoml
xor
xchg
dec
ss
insl
push
xlat
or
aas
pusha
mov
lods
cmpl
sub
js
andl
and
jle
add
cmp
jg
sbb
add
scas
xchg
inc
push
mov
cmp
repnz
sub
pop
aam
inc
push
popf
xchg
loopne
jecxz
bound
or
ret
cmpsl
xchg
popf
ret
push
sub
cmp
roll
push
repz
mov
jne
jne
jnp
fucomi
mov
lods
ds
mov
or
shll
mov
or
sbb
imul
xor
mov
jecxz
cmp
test
or
mov
sahf
data16
mov
popa
push
sbb
sbb
nop
mov
add
push
lea
lock
mov
sub
jbe
adc
jb
jl
fwait
cmp
mov
mov
fldcw
fs
sbb
scas
sub
pop
fimull
xchg
inc
js
addr16
sub
xor
std
lret
stos
add
fs
sbb
mov
es
dec
pop
xchg
push
cmp
xorb
ret
dec
lcall
push
xchg
test
push
mov
mov
xchg
inc
iret
insb
mov
ret
loopne
xor
out
and
dec
aad
or
dec
movsb
mov
sub
int
xor
outsl
mov
mov
insl
jns
dec
sahf
add
xchg
adc
iret
cli
in
jbe
jp
je
xor
jl
insb
pop
add
aam
leave
push
jecxz
pop
rcrl
mov
lds
jns
push
push
xor
pushf
stc
out
aam
test
int
adc
in
les
outsl
sub
add
sub
mov
push
jno
fnsave
mov
jg
adc
mov
push
push
dec
std
jne
and
sub
push
std
mov
iret
cltd
pop
cld
dec
add
js
push
cmpsb
fidivrl
lods
jne
lea
fldl
or
adc
clc
sub
push
push
cmp
xor
iret
int
sbb
loopne
mov
loop
stos
pop
repz
testb
out
pusha
jne
xchg
xchg
xor
lret
pop
mov
jecxz
icebp
mov
xchg
and
out
shrl
xchg
pop
and
xor
adc
jne
in
mov
sub
out
mov
stc
jne
jl
imul
jp
inc
bnd
jnp
call
xchg
cmp
mov
xor
test
mov
lret
ja
ds
repnz
or
jge
popf
add
lock
pop
mulps
inc
push
sub
je
push
clc
mov
jbe
int3
in
jae
add
xchg
mov
sub
pop
cmp
mov
push
imul
mov
mov
mov
dec
dec
pop
pop
pop
push
cmpl
mov
rol
jmp
cmpsl
push
data16
xor
adc
movsb
inc
adc
lahf
lds
sbbb
cmpl
or
repnz
mov
and
xor
pop
cmp
push
pushl
outsb
sub
pop
sbb
int3
ds
adc
js
out
data16
push
jmp
jmp
sbb
aad
into
and
out
push
ret
mov
inc
scas
lret
ljmp
int3
in
pop
pop
popf
sarb
mov
mov
adc
inc
push
les
fsubs
in
stos
jnp
or
ja
scas
mov
sar
dec
inc
rol
push
adc
sbb
test
lods
dec
jecxz
sub
sti
cmpsl
fidivl
and
push
roll
outsl
adc
iret
inc
sbb
nop
inc
cmpl
xor
cs
data16
xor
scas
in
sub
sub
sub
sub
clc
cli
imul
arpl
inc
and
xchg
xchg
sub
cmp
cmp
and
mov
add
pop
scas
xchg
repz
clc
add
or
xor
fcomps
sub
cmpsb
mov
jl
call
mov
jns
add
jl
cmc
pop
stc
pop
mov
out
xor
imul
clc
filds
push
pop
mov
cwtl
push
lods
dec
inc
ret
insl
jnp
mov
xlat
mov
sarl
mov
cmc
and
aas
adc
stos
icebp
push
and
ret
hlt
adc
mov
pop
xlat
movsb
mov
adc
enter
inc
mov
fwait
dec
movsl
cli
cmp
sub
mov
cmp
fnstsw
test
stc
inc
cmp
or
cltd
sti
and
jmp
andb
bound
lcall
push
pop
add
ds
mov
pop
or
mov
mov
mov
xchg
or
fistl
sub
adc
aaa
daa
push
add
cmp
inc
sub
lcall
xchg
out
xor
lahf
loope
pop
xchg
rorb
and
add
scas
xor
icebp
sub
push
xorl
mov
movsb
sbb
lret
hlt
inc
loope
sub
mov
xor
sub
insl
lahf
scas
cwtl
test
jmp
mov
or
cmp
inc
cmp
into
xchg
xchg
ret
adc
mov
dec
bound
inc
aas
pop
sub
or
cmp
inc
sub
out
cs
cmc
bound
jl
push
mov
sahf
cmp
push
stc
inc
push
jo
fildl
mov
mov
addl
xor
mov
mov
fidivs
mov
mov
or
lock
loope
hlt
xor
insl
or
and
mov
int3
or
cwtl
sbb
lahf
xlat
sbb
xchg
adc
andl
lds
lcall
mov
outsb
jp
cld
adc
mov
out
xor
out
add
cmp
mov
add
push
xor
leave
aad
es
mov
ret
cmc
jl
adc
fcomp
or
test
mov
pop
stos
mov
fcomp
xor
pop
sub
add
in
cmp
sub
outsl
push
cmp
sti
int
shl
movsl
test
xchg
nop
push
pop
pop
ret
pop
test
xor
ja
fstpl
sub
jns
mov
xchg
push
bound
pop
icebp
not
xchg
adc
sub
xlat
inc
pushl
jo
jnp
das
in
stos
adc
push
inc
insl
lret
adc
xchg
dec
xor
loop
add
add
cwtl
mov
push
pop
test
popf
dec
mov
and
ss
sub
cmp
push
pop
inc
fcmovnu
popa
frndint
cmp
xor
test
sub
and
cmpsl
loopne
int3
sbb
push
xchg
subb
ret
jb
shrl
repz
mov
mov
mov
fldenv
sub
test
sbb
insl
cs
ds
jae
sub
sbb
movsb
fstl
or
push
scas
pop
fists
mov
scas
pop
xchg
cmpxchg
or
inc
bound
xchg
rcll
pop
cli
sbb
aad
sbb
mov
fnsave
cltd
add
xchg
pop
sahf
pop
aam
inc
insb
nop
or
inc
stos
fsubrl
subl
popf
mov
ret
std
test
cs
lods
dec
inc
dec
scas
xor
aad
xchg
int
out
ficompl
ds
sbb
push
mov
push
in
hlt
dec
negl
imul
mull
mov
into
adc
mov
out
pop
rorb
dec
or
nop
aaa
pop
jle
xchg
mov
push
jnp
fsubs
jecxz
mov
or
inc
fwait
pxor
mov
lock
out
xchg
test
shl
xchg
fdivrl
lds
or
jmp
lret
push
imul
nop
dec
fucomip
add
rorl
pop
mov
xchg
lret
insb
int3
fwait
add
lret
pop
jne
mov
fxch
jge
adc
wrmsr
pop
sub
fwait
sbb
add
subl
cmp
inc
pop
push
fcmovu
cli
loope
pop
sbb
push
fisubl
adc
pusha
and
add
xor
insl
add
inc
sti
pop
cld
out
inc
push
cmp
xchg
loopne
jb
dec
scas
lret
sbb
rcr
lret
mov
pop
sbb
pop
les
cmp
sahf
mov
pop
and
sub
lret
sti
add
push
stc
xchg
sbb
es
or
cmp
mov
mov
jp
mov
push
add
in
nop
adc
aas
repz
sbb
or
je
insb
cli
sti
hlt
std
xor
pusha
js
xor
cmp
out
je
das
repz
inc
jmp
inc
cmp
loope
or
popa
in
cmpb
bound
dec
inc
cwtl
loopne
cld
push
mov
add
cld
mov
pusha
cmc
push
inc
cmp
ss
ja
roll
je
mov
fdivs
and
fldt
mov
and
or
sub
sbb
aam
adcb
fcompl
cltd
nop
lahf
pop
mov
inc
lods
jo
jno
push
fldt
test
pop
rcrl
adc
outsb
pop
out
or
xorl
bnd
stc
push
sub
lret
lret
xlat
cmpsb
push
or
sub
leave
imul
pop
or
or
add
pop
repnz
sub
in
rclb
fdivr
enter
repz
gs
jne
addr16
fstl
push
mov
add
mov
sbb
out
xchg
push
sbb
push
push
int
js
stos
jne
fildl
aas
pop
pusha
adc
shl
mov
sbb
or
fldt
ss
pushf
push
inc
cmp
stc
sub
push
cmpsl
popf
and
cmp
dec
jo
xchg
aad
pushf
into
lcall
popa
xlat
das
or
shll
test
mov
and
jp
jo,pn
repnz
clc
mov
add
mov
jmp
mov
popf
notb
lea
pop
mov
icebp
push
sub
mov
outsb
imul
mov
ss
out
mov
hlt
notb
js
roll
dec
sub
xor
mov
das
and
std
sbb
ljmp
insb
or
dec
push
and
pshufb
scas
adcl
or
aas
into
xor
push
mov
jno
lods
aad
add
js
xchg
call
dec
and
jne
mov
stos
dec
mov
std
mov
adc
in
idivb
or
fistpl
xor
xchg
decb
into
pop
fisttpll
cmp
adc
xchg
jo
mov
mov
insb
push
dec
xchg
dec
inc
mov
jne
xchg
js
push
daa
dec
mov
mov
les
mov
cmpsb
jmp
stos
das
je
add
je
cltd
xchg
imul
lret
jp
inc
or
jo
stos
movsl
push
or
int
das
lret
mov
push
xor
adc
xchg
push
insb
sbb
jae
sub
push
dec
js
orl
enter
clc
push
stos
xor
adc
movsl
dec
jns
or
out
and
outsl
stos
outsl
popa
stc
pop
push
cwtl
clc
jae
fdivl
jbe
js
add
outsb
pusha
inc
add
mov
xchg
and
sarb
repnz
mov
xor
or
mov
cmpsl
xchg
aaa
mov
das
dec
hlt
orl
insb
sahf
jecxz
push
sbb
stc
out
pop
test
pop
push
inc
les
xchg
rcr
mov
jmp
sub
bound
adc
cmp
mov
fnstenv
std
insb
pop
or
lret
dec
icebp
ret
adcb
outsl
xor
cltd
cmpsl
or
add
outsl
mov
dec
sbb
cmp
xor
mov
xor
cs
std
dec
inc
clc
mov
dec
lahf
iret
daa
test
hlt
inc
call
cmp
jle
aas
jl
and
lds
jnp
aam
xchg
push
sub
sub
fidivl
in
fistl
cmp
xchg
stc
out
iret
add
int
stc
scas
mov
daa
pop
cmp
xchg
hlt
jns
xchg
ljmp
mov
mov
fs
pop
stos
and
jo
movsl
cmp
mull
jg
shll
or
pop
shlb
mov
and
sahf
ret
js
out
sbb
and
dec
and
fidivs
dec
cmp
arpl
inc
divb
lock
fldcw
sub
ljmp
lret
mov
testl
out
and
cwtl
pop
mov
cmp
jb
and
inc
pop
pop
mov
daa
lcall
insb
mov
fbstp
sub
add
mov
adc
out
dec
dec
jo
inc
mov
and
push
mov
lea
repnz
sbb
mov
es
and
cs
pop
sub
lds
add
out
sbb
add
xchg
pop
js
cmc
xor
aad
cltd
cmp
push
xorl
jae
lock
fcomps
mov
rcrb
inc
stc
bound
mov
push
stos
sub
cmc
cmp
push
in
lods
sub
jnp
xchg
pop
and
sbb
or
jbe
mov
or
outsl
ljmp
and
es
repz
das
push
sub
mov
add
pushf
ja
mov
dec
ret
lret
cmp
sarb
pop
mov
mov
pop
push
dec
jp
outsl
aaa
stos
js
xchg
mov
int3
mov
inc
lods
iret
data16
jb
jae
pop
cltd
adc
inc
sbb
fwait
push
inc
pop
fnstenv
sbb
daa
addr16
jecxz
and
test
xchg
dec
lahf
cmp
push
pop
imulb
es
inc
mull
test
cmp
jb
ret
pop
mov
repz
int
inc
mov
push
ret
and
loop
mov
and
adc
xchg
pop
int3
pop
sub
mov
jge
mov
out
jmp
push
test
add
lahf
in
test
adc
leave
mov
push
add
insl
adc
add
xor
lea
out
xchg
push
lret
fwait
cmc
jge
div
out
gs
or
popa
shlb
sub
add
andl
sbb
arpl
xor
cmp
push
int
push
push
out
and
in
out
adc
punpckhdq
aam
stc
fprem
jb
mov
scas
fld
xor
je
inc
and
push
xor
cmp
das
addr16
shl
std
js
mov
push
add
jno
xchg
ret
cmc
push
xchg
ds
xor
and
or
and
aam
fmuls
fnstsw
dec
xchg
ror
setp
inc
jne
mov
xchg
jecxz
mov
xor
mov
xchg
cmp
in
push
pop
cmp
fdivr
push
imul
dec
cmpb
sub
shrb
add
dec
mov
rorl
inc
mov
hlt
scas
fs
push
add
add
inc
stc
add
mov
mov
mov
lock
and
push
js
cli
mov
add
test
imul
ret
stc
dec
push
sbb
mov
and
sbb
add
or
inc
arpl
enter
cld
sub
shl
mov
jp
aam
sarb
jo
pop
lcall
mov
stos
mov
aam
in
cmp
in
cmp
hlt
pop
addr16
sbb
hlt
xor
sbb
mov
push
adc
sub
pop
adc
mov
sub
js
icebp
repz
mov
mov
and
fdivs
mov
insb
enter
std
jp
mov
inc
leave
aam
pushf
cltd
insl
mov
popf
fwait
clc
iret
mov
imul
xchg
or
in
sub
pop
jnp
xor
jmp
lock
sub
lret
sbb
sbb
lret
cmp
cmc
loopne
or
mov
inc
xor
mov
ja
fstps
scas
andl
push
fidivrs
push
jne
scas
adc
jns
jge
out
bound
mov
cmpb
sub
mov
jae
sub
mov
dec
icebp
iret
mov
pop
divb
repz
movsb
and
aad
lret
out
add
dec
adc
and
ret
sahf
movsl
inc
sub
lcall
icebp
shr
mov
xchg
in
lods
pop
sub
adc
sbb
sub
pop
lock
sub
insl
xchg
scas
cli
sbb
xchg
adc
lods
fs
icebp
clc
lods
adc
adcb
cld
jg
cld
and
jne
jge
outsb
jle
jb
cli
mov
sbb
in
aas
ret
push
mov
pusha
cmp
dec
push
inc
cmc
sti
scas
dec
xchg
repnz
xchg
jo
and
sar
ja
jnp
add
xor
or
pop
pushf
fwait
push
imul
xchg
adc
xchg
out
pop
jle
mov
push
mov
ret
and
and
mov
pop
jle
ficoms
jl
jecxz
mov
enter
fsub
jge
in
mov
push
sbb
fnop
lret
jg
mov
ss
movsl
push
lock
sti
rcrl
nop
mov
push
js
repnz
jge
inc
js
pop
jle
add
sbb
mov
les
popa
enter
mov
mov
das
inc
push
dec
mov
in
adc
fistl
jle
mov
push
into
imul
dec
cmp
pop
cltd
jl
xor
adc
cmc
cmpb
daa
lods
inc
dec
or
mov
mov
arpl
fsubrl
loope
add
xlat
scas
fstl
leave
xor
mov
out
roll
outsl
mov
sahf
or
or
jmp
mov
pop
leave
xor
scas
rcrl
int3
addr16
pusha
lea
jecxz
lods
mov
in
mov
test
dec
mov
aaa
xchg
mov
pop
cmp
aaa
and
mov
aaa
in
push
icebp
inc
imul
rol
sarl
cmp
icebp
jne
or
fisubl
fs
cmc
rolb
inc
push
pop
test
xorb
fwait
sbb
sub
mov
jg
mov
mov
sti
push
les
out
pop
dec
mov
cld
push
imul
into
xchg
mov
jle
imull
xchg
stos
cmp
insl
enter
outsl
push
jg
add
ljmp
push
fwait
cmp
adc
daa
jo
decb
pop
xor
push
cwtl
sar
xorb
sub
jae
jbe
or
scas
cltd
add
int
leave
cmp
out
cmp
add
leave
inc
lcall
enter
iret
out
mov
loopne
stc
lret
inc
push
xchg
sub
test
hlt
add
add
ljmp
sbb
sub
lods
push
and
pop
int
pop
repz
mov
mov
dec
mov
cmp
sbb
stos
out
sub
inc
js
xchg
ja
out
fistl
shrb
mov
mov
leave
icebp
ficoms
into
jmp
xor
adc
xchg
xchg
addr16
adc
mov
hlt
sbb
sti
jmp
insl
mov
out
pop
sbb
popl
es
jecxz
aaa
out
test
add
stos
arpl
ljmp
xchg
lds
and
das
in
adc
mov
cli
adc
mov
subb
mov
loopne
aaa
rcll
xor
sbb
jp
push
notb
cld
add
push
pusha
pushf
ret
adc
pop
stos
fiaddl
cs
in
scas
inc
add
aad
test
movsb
sbb
mov
cmpsl
xor
push
jge
lods
movsl
into
into
test
and
inc
arpl
jecxz
and
push
mov
xlat
xchg
movl
mov
std
fbstp
xchg
cmp
fs
inc
in
loope
mov
cmp
jnp
inc
push
mov
sub
sbb
sbb
mov
rep
pop
push
mov
mov
jecxz
sbb
mov
mov
aam
mov
test
and
or
lret
mov
or
negl
andb
sub
and
mov
scas
repnz
repz
cmpsb
outsb
mov
fcoml
ss
sarl
jmp
and
jmp
mov
add
loop
adc
popf
das
and
ss
insb
loop
fcmovu
and
std
jecxz
scas
pusha
cmpsb
sbb
adc
fisubl
xchg
push
aad
ja
into
pushf
xchg
ds
mov
push
xchg
lahf
repnz
inc
or
pop
js
in
jl
dec
dec
aad
aas
and
ljmp
mov
neg
adc
pop
push
scas
ret
lahf
mov
jo
sbb
arpl
insb
add
push
leave
test
sbb
mov
ljmp
jno
das
sbb
sbb
pop
js
int3
sarl
mov
out
push
dec
addb
xchg
inc
jmp
sbb
xchg
das
mov
adc
outsb
dec
mov
jnp
scas
rcl
lea
cmpsb
push
xchg
pop
enter
inc
int3
gs
inc
xchg
shrb
and
dec
mov
stc
xchg
loopne
fimull
pushf
cmp
or
xor
or
jp
pop
push
or
arpl
icebp
dec
mov
fcmovbe
repz
ljmp
dec
outsl
add
sti
insl
out
test
dec
repz
xchg
in
shlb
outsl
jle
pop
gs
test
pop
sbb
cmp
shl
sub
fmull
sahf
sahf
sub
push
dec
stc
addr16
cmp
out
and
mov
jne
xchg
sbb
mov
mov
imul
xor
mov
mov
xchg
in
fbstp
loop
mov
fdivs
and
dec
dec
in
mov
les
ret
dec
sti
adcl
mov
pop
int
inc
jecxz
jo
ret
vpexpandb
mov
mov
add
cmpb
mov
add
inc
sub
lret
or
lds
lds
push
pop
call
adc
push
sub
jb
arpl
dec
jno
aad
into
mov
dec
xchg
ljmp
or
bound
xchg
mov
mov
sub
xchg
stos
push
fnstenv
pop
divl
jbe
inc
push
ljmp
add
stos
scas
add
popf
arpl
mov
in
jecxz
imul
std
push
mov
adc
and
jbe
test
jp
or
cmp
int
sub
pop
push
ret
jae
pop
jae
pop
add
addr16
notb
inc
js
and
fwait
mov
or
scas
push
sub
mov
sub
add
dec
popf
jmp
popf
adc
xchg
inc
enter
xchg
push
sarl
add
jle
rcl
lea
mov
adc
nop
loopne
pop
xchg
pushf
sub
cmpsl
icebp
cmp
repz
jg
mov
cmp
or
test
add
dec
pusha
out
sub
cli
pusha
outsb
push
insb
add
aas
mov
push
loopne
mov
into
push
rclb
cmpsb
js
popf
into
call
mov
xlat
lcall
cmp
fists
mov
ret
xor
leave
inc
inc
mov
nop
cld
or
lahf
rcr
sub
fsub
stc
out
lock
mov
xor
dec
adc
push
xor
and
aaa
or
sub
jg
cmc
jnp
ret
adc
out
lcall
repnz
je
cwtl
cmp
ss
ljmp
jo
jne
xchg
mov
cmp
inc
sbb
mov
ss
sar
daa
push
inc
aaa
pop
mov
dec
dec
enter
mov
mov
nop
je
setl
and
push
jno
leave
push
sbb
ss
mov
pusha
mov
dec
pop
scas
xchg
add
cs
lods
repz
repz
cmp
add
sbb
into
mov
sbb
adc
std
sub
adc
aas
cld
scas
inc
outsl
jbe
gs
pop
sub
xchg
inc
jae
movsb
xor
xchg
dec
stos
pop
mov
xchg
mov
pop
cmp
add
out
xor
push
fidivl
cmp
daa
cmp
shrb
imul
nop
rcr
xchg
fstl
dec
sbb
adc
dec
adc
adc
repz
nop
ficoml
add
fistpll
xchg
jno
xchg
xchg
in
adc
cwtl
dec
fucomip
clc
cltd
aas
dec
xchg
mov
loop
jns
ret
sbb
mov
mov
fdivl
adc
leave
push
ss
fisubs
xchg
xor
je
add
mov
push
mov
fstl
mov
push
push
out
dec
push
jl
push
jne
inc
sbb
and
mov
dec
aam
cmp
adc
inc
clc
mov
decl
mov
dec
and
lods
mov
data16
adc
push
bnd
push
out
and
jle
dec
xchg
jl
pop
inc
dec
xlat
jmp
push
xchg
xchg
xor
lret
test
cmc
fnstenv
test
push
sbb
cli
push
dec
cli
mov
int
jecxz
push
dec
enter
loope
aam
es
xchg
mov
lods
scas
dec
pop
daa
shlb
mov
pop
repz
mov
cmpsb
rclb
jmp
xchg
test
sub
lock
xor
iret
push
addb
lret
loopne
adc
mov
insl
mov
loopne
add
mov
stos
subl
jae
mov
popa
test
stc
push
add
aam
ljmp
add
push
cmp
lock
lea
lods
les
add
inc
push
inc
mov
sub
repz
add
enter
daa
jmp
and
push
inc
rorl
push
push
outsb
sbb
xchg
push
sarb
sahf
adc
inc
rcrb
lret
ficomps
jmp
ret
lods
adc
icebp
push
sbb
ds
sbb
pop
filds
mov
pop
out
xchg
pop
cmp
jb
inc
jbe
mov
cmc
inc
add
les
in
mov
xor
out
movsl
pop
hlt
cmp
outsb
aas
mov
stos
and
movsl
or
hlt
sbb
imul
ds
in
cmp
and
push
clc
fsts
sub
push
fdiv
divb
xchg
and
inc
pop
pusha
in
or
mov
or
or
push
inc
xchg
xchg
movsb
popa
aas
outsl
imul
shrb
lret
leave
add
pop
pop
js
rcl
mulb
jnp
mov
inc
mov
movsb
cld
hlt
xchg
pop
pop
les
and
or
mov
push
sub
adc
addl
adc
push
pop
in
cmpl
test
mov
das
xor
dec
stos
pop
sbb
pop
dec
push
cwtl
shrl
lcall
in
and
lahf
fnstenv
inc
add
pop
sar
lods
stc
dec
shrb
jns
mov
pushf
lret
mov
and
clc
dec
add
pop
in
imull
js
repnz
inc
mov
lods
jno
daa
jo
push
inc
stc
xchg
iret
lea
mov
xor
jg
pop
inc
fadds
in
out
sbb
or
lret
and
push
out
sarl
test
sbb
pop
sbb
jecxz
lock
mov
lahf
xor
in
sbb
icebp
leave
inc
addr16
in
test
add
jae
fbstp
sbb
cli
ljmp
cmp
jl
les
push
dec
inc
scas
cwtl
sub
pop
adc
jg
mov
fildll
shl
mov
lods
xor
decl
enter
xor
add
icebp
dec
mov
out
mov
mov
mov
shrl
jg
xchg
mov
test
push
mov
insl
fadd
popf
add
push
mov
jg
icebp
cli
push
repz
mov
out
xchg
jg
xchg
cs
scas
jno
les
mov
jecxz
into
lods
sbb
push
arpl
mov
inc
mov
cli
insb
ds
sbb
or
adc
test
out
rcrb
dec
loopne
repnz
cmp
loop
mov
xchg
push
sbb
testl
and
cmp
ja
dec
sub
sub
inc
in
roll
or
push
sub
flds
mov
sub
xlat
mov
mov
pushf
sub
mov
or
cmp
fiadds
pop
mov
stos
pushf
xchg
or
fsubr
push
pushl
mov
push
mov
cmpsl
inc
and
mov
add
insb
adc
xor
repz
das
mov
outsb
cmp
adc
xchg
push
dec
ljmp
fmuls
push
mov
mov
stos
xchg
add
jp
cmp
xchg
loope
xchg
push
cmpsb
adc
iret
mov
ficomps
cs
mov
inc
or
lret
push
mov
sahf
jg
xchg
mov
pop
add
rclb
sub
push
adc
mov
jnp
jmp
sub
mov
inc
add
mov
fs
lret
add
push
sub
xor
bound
add
stc
ds
das
scas
lods
outsl
scas
xor
and
insl
or
or
jge
adc
jo
stc
sub
mov
sbb
outsb
test
mov
aam
push
pop
aas
inc
dec
mov
push
add
out
dec
insb
pop
sahf
mov
dec
arpl
or
jb
cmp
dec
or
mov
jl
in
orl
add
fs
dec
jo
fcomps
mov
xchg
cld
jo
stos
shrb
cmp
loop
inc
jnp
icebp
push
ljmp
cmp
mov
jecxz
fcoms
mov
push
loop
incb
mov
test
push
rcrl
mov
push
push
outsb
inc
cmp
stos
sub
xor
xor
dec
jmp
scas
mov
push
add
aam
ret
or
sub
loop
imul
in
test
rorb
cmp
movsl
pop
out
jg
sub
daa
cmp
dec
scas
mov
rcrl
loop
mov
clc
jle
push
add
adc
inc
sub
and
cld
dec
mov
mov
pushf
lret
dec
loope
inc
inc
pop
push
and
dec
adc
push
repnz
dec
inc
inc
cmp
dec
sub
in
lods
loope
mov
sbb
add
dec
scas
dec
xor
pusha
jecxz
mov
mov
aas
pusha
jp
je
mov
mov
jno
aad
cld
cmp
imul
popf
xchg
fidivrs
sbb
jo
mov
inc
mov
shrl
cs
jmp
push
jl
xchg
push
mov
sti
mov
ss
jg
mov
les
xor
fists
or
dec
out
stos
mov
repnz
sub
sub
mov
mov
lahf
dec
ret
jmp
push
mov
push
les
lahf
mov
and
lock
fstpt
lock
repnz
gs
mov
or
addr16
mov
not
cld
inc
popa
adc
imul
lock
lock
or
cmc
xchg
xchg
dec
xchg
pusha
ret
in
push
adc
sub
insb
loope
push
shll
loop
xchg
hlt
outsb
adc
mov
push
mov
mov
stos
mov
sub
xchg
sub
pop
xor
stos
ffreep
arpl
aam
push
jmp
add
std
jns
in
sbb
jns
pop
dec
and
das
pop
or
or
cli
push
mov
arpl
icebp
push
out
sub
inc
xor
loopne
mov
shrb
fadds
push
popa
cmp
pop
mov
push
dec
fistl
scas
into
mov
cltd
xor
cli
dec
jecxz
test
idiv
loopne
sbb
push
pop
sbb
dec
pop
ds
bound
inc
mov
cmpsl
out
dec
fcoms
test
ret
adc
das
aas
xor
pop
adc
dec
push
jmp
arpl
mov
les
std
or
push
jnp
pop
sub
pop
loope
into
or
jle
add
adc
inc
xor
xor
insl
cmp
xchg
stos
incb
icebp
or
lahf
insb
mov
dec
mov
cli
xor
sahf
xor
pop
repnz
or
xor
gs
test
in
fwait
xchg
cmp
mov
xor
mov
mov
in
mov
outsb
mov
cmp
iret
popf
or
xchg
js
jmp
and
test
pop
out
pop
push
pop
mov
xchg
mov
pop
xlat
inc
sahf
xchg
jb
out
xor
repnz
mov
dec
mov
pop
fwait
imul
and
in
into
jg
jge
mov
push
arpl
mov
in
pop
call
and
sub
rcl
mov
adc
fcoms
mov
adc
movsb
lcall
pop
inc
outsb
outsb
into
and
fwait
out
inc
movsl
xchg
and
test
sbb
insl
add
cmpsl
gs
jecxz
pop
xor
cs
out
and
add
rcrb
mov
rorb
pusha
push
mov
adc
mov
sbb
adc
push
xor
mov
xchg
cltd
ficoml
lea
mov
add
cmp
mov
cltd
lods
decl
aas
scas
add
gs
cmpsl
nop
sub
es
mov
mov
aas
mov
xor
out
mov
inc
stc
into
mov
sub
or
ja
bound
pop
pop
xor
fcmove
scas
ss
insl
movsb
push
mov
xchg
jge
or
shll
jmp
loop
add
cmpsb
sbb
jge
in
jb
xor
stos
adc
enter
and
test
or
push
jns
xchg
lahf
fcmove
insb
adc
mov
xor
lods
aad
scas
mov
jg
dec
jnp
fcmovb
in
lret
stos
pop
rorl
and
stos
add
and
inc
mov
fldt
fcomps
nop
fisubl
cwtl
or
cli
cmp
lret
stos
stc
add
repz
out
push
mov
std
mov
and
push
rep
insl
cmp
add
mov
push
xchg
js
sahf
add
adc
sub
or
mov
mov
imul
js
push
lock
mov
xor
out
push
dec
in
inc
dec
shr
xchg
and
sub
dec
test
cmp
mov
fisubs
cmpsb
popf
xchg
fsubr
push
out
xor
fxch
pop
pop
cmpsb
sub
cli
adcl
iret
sbb
adc
rorb
mov
cmc
push
imul
or
or
sub
sub
mov
clc
xor
sbb
lcall
cmc
push
xchg
adcl
lods
xchg
hlt
add
into
xor
xchg
jecxz
jns
pop
adc
scas
jge
dec
xchg
lods
jno
cmp
ds
pushf
push
sti
mov
jl
test
and
outsl
pop
jg
cmp
addl
add
addb
push
lods
sbb
das
xor
cmp
sub
call
rcr
dec
stos
leave
ja
xchg
mov
xor
mov
sub
add
in
push
adc
add
repnz
lret
fcmovb
push
int3
xor
js
in
add
andl
pop
push
or
out
cld
cmp
out
inc
sbb
call
mov
imul
push
imul
jo
dec
enter
push
jl
dec
sahf
or
sbb
insl
cmpsb
mov
adc
std
out
enter
xlat
cmp
sarl
mov
mov
jmp
or
adc
jae
cmp
daa
dec
fiaddl
mov
cmc
jb
lods
sub
gs
repz
lahf
mov
push
lcall
jle
imul
adc
divl
mov
mov
mov
cmp
out
repz
leave
sub
mov
xchg
je
mov
sbbl
add
add
das
dec
or
test
sbb
pop
aam
lods
cmp
and
and
arpl
push
pop
flds
dec
andb
fisubrs
je
ljmp
push
movsb
pop
adc
in
inc
leave
fistpll
movsb
mov
icebp
adc
add
push
push
or
dec
lods
xor
lods
div
pop
adc
mulb
or
dec
ljmp
sti
add
xchg
xchg
lcall
cltd
dec
mov
sub
in
pop
adc
push
inc
aad
test
mov
jl
cmp
dec
testl
mov
sub
insb
aaa
xchg
out
sbb
dec
push
jl
xchg
scas
sbb
into
pop
scas
shlb
dec
iret
push
jecxz
iret
mov
rorl
leave
jae
adc
out
movsl
stos
icebp
cld
pusha
jmp
enter
cmpsl
in
mov
and
jge
mov
popa
and
cli
cmp
sbb
data16
or
mov
cmp
test
ds
pop
cmp
popa
inc
cmp
jno
xlat
and
stc
movd
pushf
mov
fcmovnbe
aas
jns
jp
inc
inc
pop
push
outsb
pop
sbb
fsubr
fwait
pop
jp
cmp
testb
xchg
push
popa
lcall
aam
sbb
or
mov
out
push
mov
sti
add
imul
out
xlat
sub
fisttps
xchg
in
cmp
pushf
jae
mov
sub
pop
inc
aas
add
ficoml
xchg
mov
aam
adc
test
or
cmp
jg
pop
jne
out
inc
sahf
add
xor
xchg
mov
cmp
pop
or
mov
adc
test
movsl
test
or
mov
inc
sbb
xor
xor
mov
add
fbstp
mov
jp
lds
ss
pop
loope
lret
inc
xchg
push
push
pop
mov
xchg
je
sti
outsl
mov
loope
cmp
clc
push
inc
add
push
adc
bnd
jne
or
ret
mov
repz
push
aas
ror
and
test
arpl
stos
and
lret
dec
mov
jb
fdivrl
sub
outsl
mov
sub
lcall
jge
pusha
mov
cmpsl
and
js
mov
lahf
or
repz
pop
insb
sahf
mov
fxch
cs
xor
arpl
cwtl
adc
shlb
xchg
or
add
add
lds
jl
lock
pop
jo
cltd
push
pop
sbb
pop
outsb
pop
mov
bound
shl
cs
les
aas
push
or
fistl
mov
rorl
dec
in
cs
cmp
das
cmp
mov
js
mov
xchg
into
add
js
shlb
imul
xchg
loopne
cltd
cmp
mov
pop
push
inc
adc
fadd
sbb
sub
or
dec
movsl
cld
dec
mov
rolb
sbb
je
jb
inc
pop
neg
gs
in
fbstp
add
xchg
repnz
add
xor
rolb
adc
xor
bound
arpl
lea
cs
ret
dec
pop
rorw
cmpsb
cmp
insb
or
jecxz
ficoms
jmp
pop
mov
popf
jmp
xor
pop
cltd
stos
in
dec
mov
cwtl
call
pop
push
pop
cmpsb
push
dec
hlt
adc
popf
pop
enter
jle
rorb
xchg
setle
sub
cmc
daa
test
call
loope
les
dec
or
enter
pop
movsb
adc
dec
data16
jnp
popa
outsl
push
mov
fldl
push
nop
lods
pop
mov
fldt
hlt
or
data16
and
rorb
shll
stos
adc
inc
or
cmc
jns
mov
sahf
jmp
je
repnz
lods
fstps
iret
test
scas
sarb
push
mov
jo
mov
daa
or
push
sbb
cltd
or
inc
jg
imul
roll
movsl
add
insb
adc
pop
aam
push
icebp
mov
sbb
xchg
test
push
jae
cltd
cmc
sbb
into
roll
dec
in
out
mov
mov
pop
repnz
int3
hlt
shrb
sbb
adc
and
mov
clc
insb
hlt
mov
pushf
in
scas
pop
pop
dec
pop
xor
xchg
cltd
loopne
imul
inc
fs
std
stc
bound
xor
jnp
not
in
xlat
cmp
repnz
or
adc
int
je
fidivl
mov
ret
xor
test
jecxz
mov
cltd
leave
int3
dec
aaa
push
mov
lds
rcll
cmpsl
add
test
mov
or
xor
rcll
test
pop
push
icebp
xor
js
pop
jecxz
stc
cmp
push
adc
jp
mov
ds
mov
cmp
fmuls
scas
xchg
sbb
push
adc
cwtl
ret
push
jae
stos
mov
cwtl
lock
test
push
int
sub
andl
movsb
add
lods
daa
xor
sub
sti
insl
lcall
ret
jbe
insb
sub
int
inc
sub
mov
test
outsl
and
jmp
xchg
mov
stc
les
push
sbb
leave
jecxz
sar
call
aad
test
lcall
xchg
daa
pop
movsl
sbb
mov
mov
cmp
insl
out
leave
jno
imul
nop
push
lea
jo
outsb
and
lret
ljmp
inc
sub
scas
iret
or
mov
dec
icebp
xchg
nop
xchg
adc
pop
stos
jno
adc
jo
jl
sbb
ret
addb
insl
mov
xor
jbe
mov
xchg
stc
test
push
outsb
and
dec
ss
aam
inc
outsb
movsb
add
call
cmp
add
xor
adc
loope
and
jg
pop
lahf
pop
mov
imul
mov
or
xor
mov
lods
insb
cmc
popf
and
mov
sbb
in
in
aad
jl
daa
shlb
sbb
push
xor
in
in
and
pop
and
cmp
cs
in
inc
mov
and
cmp
mov
and
mov
push
gs
movb
movsl
pushf
subl
and
sub
stos
filds
or
cmp
cs
loop
aam
aaa
mov
scas
jl
xchg
add
jp
push
jle
in
lcall
mov
in
les
push
sarl
sbb
insb
xor
clc
insl
push
cmp
xor
movsl
push
orb
sbb
inc
and
fnstenv
pop
add
mov
or
arpl
xor
lods
adc
cld
std
jg
fldcw
xor
movsb
test
stc
push
in
lret
mov
pop
adc
shr
xor
adc
or
imul
jge
mov
or
icebp
fstpl
je
push
or
and
push
push
push
subb
mov
xchg
mov
push
sbb
and
js
ds
and
pop
subb
call
push
mov
iret
xlat
nop
repz
pop
adc
insl
fwait
rcl
mov
add
xchg
pop
pop
xchg
push
leave
jg
ljmp
sbb
daa
inc
notl
sub
les
outsb
mov
xchg
shrl
dec
and
xor
pop
add
lds
or
sbb
mov
shrb
shr
int3
mov
fidivl
shrb
mov
test
and
inc
mov
fsubrs
pop
pop
and
dec
rcl
push
jb
popa
mov
or
sub
dec
xchg
int3
lret
push
lret
je
xchg
adc
mov
cli
push
push
push
sbb
pusha
adc
jno
in
rcrl
mov
ret
pop
sahf
inc
lock
rorb
adc
inc
jne
sub
jbe
xchg
rcll
xor
xor
pop
dec
test
sub
loopne
sbb
cmpsl
out
mov
adc
xchg
test
mov
fistpll
inc
lock
xor
xchg
dec
jno
cmpsl
xor
jne
andl
push
cmp
loopne
adcl
pushf
leave
call
cmp
aas
in
inc
cmpl
stos
pop
fbstp
xchg
add
jae
mov
arpl
repnz
mov
cmc
fbld
add
dec
add
psrld
push
mov
dec
mov
pop
lds
fnsave
fsubl
push
sti
lret
mov
lea
aam
sarl
insl
dec
cmp
pop
add
insb
mov
and
mov
enter
add
xlat
sub
sbb
jmp
sub
loopne
inc
loop
push
and
mov
mov
addl
push
xchg
jnp
cmp
lret
mov
aad
pop
mov
dec
fbstp
test
insl
xorl
repnz
cmpsb
adcb
iret
push
je
and
xor
in
lock
push
mov
mov
daa
mov
xchg
jns
mov
xchg
outsl
mov
push
jmp
and
xchg
jmp
das
pop
mov
add
and
push
push
jg
leave
adc
out
add
in
dec
pop
sub
pop
xchg
inc
inc
popf
bound
stc
das
in
mov
xchg
scas
les
add
icebp
ret
lret
pop
and
sub
jnp
adcl
fidivrl
cmp
pop
dec
or
call
inc
lcall
push
lahf
inc
fdivrl
push
jg
dec
rcll
fcmovne
mov
jnp
jbe
push
das
scas
or
out
mov
andl
ss
inc
xchg
sbb
xlat
push
outsl
lahf
jo
popa
mov
inc
fwait
xchg
imul
in
shl
fidivl
test
adc
fdivl
jbe
push
jo
mov
mov
jge
cmpsl
jecxz
or
pushf
pmullw
aam
stos
leave
fs
mov
dec
test
decl
xchg
das
jmp
stos
dec
in
push
jo
xor
mov
repz
lcall
std
cltd
adc
lods
sbb
jl
adc
ret
push
loop
inc
mov
loop
mov
push
mov
jp
add
movl
and
pop
jge
addb
or
insl
cmp
popf
adc
jl
bnd
sub
jo
ficoml
sub
loopne
adc
leave
and
ret
scas
int
dec
imul
jno
inc
sub
add
and
lcall
mov
shr
hlt
jg
test
adc
pop
and
imul
xor
aad
or
or
mov
movsl
inc
jp
cmc
jp
mov
ljmp
wrmsr
xlat
and
gs
mov
inc
and
add
push
outsl
arpl
lret
lea
pop
jge
pop
ds
stos
lret
and
test
jb
rclb
loop
pop
mov
sbbb
test
enter
or
lcall
mov
sti
stc
arpl
stos
pop
std
cmp
ret
jne
adc
mov
in
lods
jge
xlat
adc
pop
les
sub
cmpsl
push
nop
in
js
xorl
fiaddl
sbb
xchg
lahf
pop
andb
mov
mov
sbb
pop
dec
pop
xor
lahf
and
jp
or
stos
fadd
add
push
jbe
push
sub
and
mov
jl
jnp
sub
jmp
mov
idivb
ljmp
inc
push
test
push
adc
xchg
addb
mov
fisttps
lods
arpl
cmp
push
and
and
inc
jp
scas
sbb
repnz
aas
call
stos
outsb
popa
mov
or
dec
inc
fsubr
repz
cmpsb
pop
ljmp
or
jno
or
push
add
pusha
test
xor
mov
push
cmpsl
inc
pusha
adc
clc
loopne
jg
mov
loopne
testl
icebp
pop
jns
push
cmp
fwait
mov
mov
aad
jge
cwtl
ficomps
bound
mov
mov
hlt
imul
js
sti
mov
mov
popa
xor
gs
sub
xor
and
xchg
imul
pop
aam
fldl
sbb
pop
call
clc
dec
lods
cltd
jl
push
pop
scas
pusha
mov
scas
add
sbb
mov
xchg
mov
mov
lret
mov
subl
push
adc
stos
ja
call
out
cs
scas
ja
leave
mov
cltd
lret
negb
out
jl
xor
cmp
enter
popa
sbb
adc
ss
push
out
mov
or
enter
pop
xor
xchg
xchg
dec
cmp
js
xlat
push
arpl
je
adc
test
lea
stos
imul
push
push
inc
mov
stos
jg
add
iret
aad
ret
dec
mov
or
js
es
fsubrs
mov
inc
shll
cwtl
cmp
xchg
int
scas
xlat
dec
outsl
jl
inc
dec
fcoml
cld
dec
test
adcb
addr16
rcll
enter
mov
jle
xchg
cmp
or
push
leave
testb
andb
aad
arpl
outsb
lods
jl
jb
pop
dec
cmp
and
mov
enter
sub
rcll
call
rclb
mov
jo
je
aaa
cmp
pop
pop
lds
inc
js
dec
cli
jbe
cmp
sbbl
pop
sbbl
xchg
sbb
in
lcall
in
and
adc
popf
lock
hlt
add
pusha
jb
xor
pop
push
jle
fsubl
icebp
inc
pop
push
js
into
lahf
rclb
adc
shr
push
inc
inc
stos
dec
and
xchg
das
jnp
jg
sarl
gs
mov
push
int3
mov
hlt
ret
jmp
sti
push
push
cmpsl
mov
adc
jae
cmc
jno
je
ffree
cs
xor
push
fcmovnbe
sbbl
arpl
fs
clc
mov
insl
jmp
and
add
sbb
push
jb
jae
lret
aaa
setnp
ja
data16
cmp
jns
nop
sub
pushf
adc
jg
stos
mov
movsl
jnp
rcr
push
jae
mov
test
xchg
xchg
loope
aaa
adc
subb
jno
xchg
push
lret
xchg
sub
nop
aas
ja
cli
add
int
fmuls
xchg
cmpsb
leave
mov
movsl
add
xchg
ljmpw
add
xor
dec
push
add
jne
loopne
icebp
add
xlat
sbb
mov
divl
ds
das
dec
leave
jne
xchg
mov
add
add
sahf
out
bnd
sbb
xchg
cmp
xchg
jp
dec
push
arpl
outsl
cwtl
mov
sahf
dec
pop
lret
into
adcl
outsb
adc
or
jge
mov
loop
movsl
sbb
inc
mov
andb
daa
ljmp
jge
jp
pop
and
mov
xor
daa
jle
cmp
icebp
mov
and
pop
mov
dec
mov
fsubl
les
dec
sbb
stos
cs
pop
scas
test
xchg
pushf
sub
sbb
lret
xchg
jecxz
scas
outsl
xchg
mov
sbb
xchg
push
cmc
icebp
outsb
sbbb
xor
mov
and
aam
dec
mov
mov
or
movsb
scas
stc
push
inc
xchg
js
mov
imul
hlt
cmp
sbb
fs
cmp
cltd
xor
cmp
jp
mov
repz
add
pop
popf
jo
cmc
pop
sub
inc
stos
addr16
aam
nop
adc
fsubp
xor
notl
xor
and
or
fldt
cwtl
pop
imul
aas
repz
rolb
shl
push
shll
adc
rcrl
add
data16
cmp
xor
add
jo
cmp
aaa
nop
jb
pop
cmp
js
xor
lahf
add
xor
fs
add
dec
stos
add
jmp
jp
arpl
pop
dec
ficompl
movsl
orl
mov
or
bound
loope
addr16
xor
jmp
daa
and
jne
sbb
inc
push
movsl
outsl
xchg
adc
cmp
out
pop
insb
push
add
rol
jb
sub
add
int3
int
aaa
push
fcoml
es
add
hlt
loop
out
fnstsw
push
and
hlt
sbb
sub
add
sub
push
push
int
popf
sti
mov
sub
cmc
scas
rolb
shrb
mov
lea
in
xchg
data16
mov
sbb
cld
add
fwait
js
pop
mov
inc
push
clc
sub
sahf
rclb
pop
clc
mov
or
jmp
aad
in
sub
mov
pop
mov
mov
xchg
cmp
cmc
and
ja
adc
dec
gs
mov
add
or
pop
scas
in
mov
fsubs
clc
notb
repnz
int
xchg
sub
incb
sbb
push
aam
pushf
scas
lahf
lds
repnz
stos
stos
cmp
fwait
push
push
mov
mov
arpl
in
ret
pushf
and
test
jecxz
dec
rclb
push
xchg
cmpsb
xchg
jae
iret
mov
jne
movsl
or
pop
movsb
sarl
inc
mov
sub
or
inc
ljmp
movsl
std
pushf
mov
mov
popa
popa
adc
xchg
sub
repnz
mov
and
mov
sub
dec
mov
cli
mov
outsb
xchg
icebp
aad
inc
push
pop
movl
enter
bound
dec
sub
pop
or
pop
jbe
jb
idivl
or
jnp
arpl
jecxz
adc
push
ds
mov
cmpsl
sub
jne
std
sahf
push
jmp
loope
sar
cwtl
sbb
fcompl
mov
inc
dec
dec
fldcw
out
idivb
ljmp
sbb
inc
popa
jle
dec
sub
xchg
pop
stc
dec
jle
pusha
xor
jmp
sub
lds
and
dec
pop
push
ss
sahf
xor
movsb
cwtl
mov
sti
inc
pop
insb
jb
push
or
ss
inc
mov
sub
pushf
orl
mov
sti
loopne
fimull
xchg
inc
cld
inc
mov
jnp
push
lahf
fldcw
xchg
or
in
cltd
push
jns
sub
loop
out
mov
pop
ret
out
fldcw
shlb
inc
add
and
push
jle
jb
dec
xor
dec
adc
pop
nop
mov
lea
fdivrs
loope
sub
inc
or
dec
dec
daa
ss
pop
push
shrb
stc
mov
xchg
mov
dec
jge
adc
into
sub
pop
mov
adc
shll
imul
in
out
fxch
ljmp
xor
jne
addl
cs
or
inc
adc
out
sbb
add
add
xchg
das
stos
sub
jg
in
iret
cwtl
add
lahf
and
in
lods
test
dec
dec
cmpsl
ret
ret
fimull
and
or
insl
jno
mov
ficomps
adc
adc
aas
mov
cmpsb
stc
in
jl
fcompl
shl
lds
stc
add
add
or
dec
sbbb
test
and
push
into
inc
test
jae
fildl
cmpsb
inc
mov
dec
ds
repz
inc
testb
push
add
inc
call
bound
pop
pop
lds
aad
mov
out
pushf
out
nop
dec
addr16
lds
popf
mov
ja
pop
out
push
data16
rcrl
pop
xchg
inc
mov
popa
outsl
xchg
movsb
fldcw
mov
adc
insl
adcb
mov
pop
jne
xchg
movsb
pushf
cmp
test
aad
jo
sahf
loope
push
mov
lret
dec
lods
jbe
and
repnz
inc
xor
or
aas
adc
adc
loop
push
mov
les
stos
push
adc
lret
iret
push
sbb
xor
push
push
sbb
aad
inc
mov
popf
ss
into
sbb
mov
xlat
mov
ds
cmp
cmp
inc
scas
add
or
mov
mov
or
repnz
and
stc
lods
scas
sub
mov
cmc
and
jg
push
sahf
imul
pop
jmp
xchg
bnd
and
loope
mov
push
or
mov
mov
mov
cltd
xor
xor
out
int3
sub
push
mov
loop
and
movsb
sbb
sub
inc
and
shr
ret
test
dec
jl
sub
mov
call
push
jnp
or
and
popf
in
fidivrl
sbb
mov
adc
test
mov
pop
std
pop
pop
aam
jp
mov
xor
ret
cmpsl
scas
je
int
pusha
sbb
and
sub
push
sub
stos
jns
pushl
push
shrb
xchg
or
push
jbe
mov
pop
jb
dec
addl
push
or
adc
fmulp
aam
xchg
pop
mov
sbb
pop
lcall
pop
push
push
mov
or
insb
xchg
stos
repz
inc
fnstsw
dec
aad
sti
cld
add
mov
addl
mov
xchg
fs
test
lods
dec
dec
fstpl
into
lcall
popa
lds
mov
mov
sahf
and
jae
add
fcomp
imul
outsb
out
ss
dec
adc
and
push
mov
mov
lea
or
js
test
pop
add
jnp
popa
addr16
loope
cwtl
dec
into
rolb
push
rcrl
xor
sbb
imul
pop
jne
ss
cmpsb
arpl
je
xor
jge
inc
add
int
xlat
dec
jo
gs
mov
add
xor
adc
nop
adc
and
mov
clc
or
jo
leave
ja
aad
pop
xchg
mov
xchg
sbb
imul
pop
scas
cmp
xchg
ror
mov
pop
pop
imul
push
push
sbb
in
jecxz
pop
stc
std
sub
clc
std
xor
xorb
gs
pusha
sbb
add
push
or
mov
mov
dec
mov
sahf
cmpsb
lea
xor
loop
pusha
cwtl
ds
stos
stc
outsb
mov
xchg
mov
adc
inc
call
mov
or
xor
xchg
lea
das
adc
add
push
iret
pop
imul
mov
jno
mov
dec
je
inc
stos
pcmpeqb
pop
and
into
xor
enter
lret
pop
xor
adc
int
out
aad
popf
clc
int3
adc
aam
xor
rcrl
dec
mov
sub
mov
mov
cltd
in
or
xchg
cmp
je
jbe
xchg
and
dec
cmp
xor
and
in
inc
into
pop
aad
push
call
jne
inc
sti
inc
lods
insl
jg
xlat
or
lret
pusha
push
fdiv
inc
popf
pop
shlb
lcall
xchg
add
rclb
push
cmp
cmp
idivl
push
inc
inc
fildl
push
dec
xchg
out
cmp
shll
dec
iret
out
jns
pop
test
cmpsb
mov
push
pop
dec
xchg
in
ds
cmp
inc
adc
adc
sbb
push
cmp
lea
mov
and
cld
or
xor
leave
xchg
cs
iret
xor
sub
mov
xchg
mov
or
jmp
add
mov
xchg
xchg
dec
jns
xchg
push
sbb
gs
cmp
inc
xchg
adc
ljmp
inc
cmp
sub
ret
pop
in
mov
and
ret
and
cmp
and
pushf
movb
mov
sbb
cmp
push
jne
or
int
filds
jp
test
xchg
adc
mov
xchg
sbb
divl
cmp
xor
cmp
dec
pop
out
xor
fwait
push
ret
pop
push
test
push
icebp
icebp
popf
inc
gs
sbb
push
stos
leave
sub
mov
cltd
adc
or
sbb
loopne
push
sub
or
leave
mov
call
xchg
jg
fiaddl
push
imul
xchg
and
mov
ds
xor
pop
xchg
push
rep
stos
mov
adc
dec
leave
rcll
and
mulb
adc
push
push
push
and
aaa
iret
scas
mov
repnz
es
pop
imulb
fcmovu
jle
insb
ficompl
mov
mov
ss
fwait
lahf
sbb
movsl
sub
inc
fwait
mov
mov
jo
loopne
out
ja
inc
pop
pop
scas
mov
outsl
dec
iret
cli
leave
push
rcrb
repz
aad
and
pop
nop
mov
mov
or
and
lcall
xor
lods
rep
jmp
and
xor
adc
rclb
adc
push
int
dec
mov
loopne
xor
push
out
daa
mov
outsb
out
push
sbb
jns
or
push
sbb
push
into
jecxz
mov
test
mov
clc
xchg
sbb
ss
xchg
push
clc
mov
jl
pop
lret
jnp
dec
repz
xorb
dec
fwait
ja
lahf
loopne
or
xor
inc
xor
fisubrl
sub
pop
mov
fwait
jmp
sub
jne
mov
test
enter
sub
lcall
outsl
and
js
arpl
addr16
mov
std
mov
mov
mov
mov
and
scas
mov
push
push
out
subb
ja
test
sub
xlat
jp
imul
push
lods
out
out
adc
push
imul
adc
popa
lcall
int3
lcall
inc
mov
in
sbb
movsl
sbb
cmp
andl
cmpb
and
adc
fs
int3
xlat
imul
dec
add
xor
jnp
test
lret
popa
pop
int
pop
pushf
or
fwait
aaa
addr16
adc
gs
jge
dec
shlb
insl
push
int3
dec
sub
outsb
scas
pusha
aam
enter
add
test
cmp
dec
fidivrs
sbb
clc
out
and
inc
push
ret
dec
sub
pop
fdivrl
jmp
cltd
mov
sub
test
lock
out
mov
jle
pop
fs
sub
inc
inc
aad
popa
outsb
mov
sbb
and
rcrb
push
pop
adc
xchg
add
aad
dec
adc
cli
lea
xchg
xchg
das
cltd
mov
xchg
jbe
fisubrl
cwtl
dec
cmp
push
jge
inc
push
lret
dec
pop
repz
es
inc
mov
filds
cmp
and
int3
mov
inc
jmp
jne
lret
popa
xchg
mov
shrl
push
xchg
mov
jl
lods
pop
push
mov
das
xor
ficoml
mov
lods
inc
push
fisttpl
push
sub
xchg
std
aas
aad
in
inc
mov
mov
iret
popf
pop
aad
imul
loopne
xor
mov
dec
in
test
bound
lea
sahf
xchg
imul
mov
lods
sbb
and
icebp
sbb
leave
mov
insb
mov
fdiv
push
xor
adc
lret
lahf
je
out
js
mov
xchg
xor
mov
push
mov
in
push
pop
push
fwait
shll
or
and
aas
mov
notl
pusha
fcomps
out
shlb
sbb
stos
xor
pop
xchg
sub
inc
and
lret
cld
aas
add
insb
movsb
stos
lea
arpl
push
xor
dec
rcrb
leave
mov
lock
mov
lds
jbe
pushf
mov
lahf
mov
aaa
push
and
inc
or
std
outsb
xchg
sub
das
ja
shll
mov
hlt
loop
jecxz
add
push
repz
into
les
addr16
jne
and
lds
cmp
aas
scas
inc
sbb
and
movsl
out
cwtl
mov
cs
dec
or
and
lods
push
clc
fwait
testb
jp
mov
xor
jnp
int3
mov
push
icebp
mov
loope
divl
sbb
dec
mov
sub
loope
cs
pushl
xchg
pop
add
pop
aam
jb
xchg
movsb
mov
xchg
jl
lods
je
push
xchg
xchg
sbb
mov
notb
or
inc
cmpsb
nop
out
je
jmp
add
mov
cmpsl
mov
dec
or
stos
and
in
pop
lcall
frstor
arpl
sub
sbb
stos
xor
sbb
rol
ja
sti
es
xorb
lods
jp
or
push
adc
jbe
jae
cmpl
pop
popa
sbb
sub
cmp
add
data16
dec
bound
insl
mov
ljmp
ret
dec
fsubrl
or
insb
xchg
adc
out
lods
aam
decl
cmc
xor
and
jg
je
mov
test
jne
int3
and
test
cs
sub
lea
xchg
les
lret
jb
and
sub
dec
stc
shrb
test
adc
cld
insb
cmp
mov
cmp
or
or
aam
lock
pusha
shr
lret
pushf
lahf
adc
add
xchg
xchg
add
dec
loop
pop
and
xor
push
jmp
repnz
fmull
flds
pop
push
mov
and
shr
mov
rclb
sub
pop
fcmovne
repnz
adc
push
xchg
lock
xchg
pop
lahf
outsl
pop
aaa
dec
cltd
mov
lret
int3
ja
outsb
sub
lret
jnp
jle
fnstenv
cli
sbb
gs
xor
sets
orb
sub
aam
pop
adc
loopne
inc
jmp
mov
mov
sub
add
mov
jle
or
cld
imul
push
add
ret
in
roll
sub
in
mov
cmp
ljmp
push
mov
add
dec
jns
test
mov
xor
std
sbb
mov
jle
jb
mov
gs
push
jmp
jp
lahf
adc
imul
cmp
cmp
mov
adc
es
and
or
sbb
xorl
leave
fiadds
dec
cmpsl
jne
pop
jb
insb
insl
es
mov
pop
insl
stos
aam
cmp
cld
dec
add
testl
xor
cmc
outsl
mov
and
xchg
mov
pushf
jg
les
stos
xchg
lcall
cmp
mov
or
sar
xchg
cmp
push
dec
lret
lods
aam
and
fmuls
mov
or
mov
out
outsb
cli
or
mov
subl
imul
mov
inc
mov
inc
daa
xor
and
decl
mov
dec
jp
lds
insb
gs
jmp
das
lret
push
xchg
sahf
test
sub
cmp
out
sbb
loope
pop
out
lcall
mov
adc
inc
jecxz
adcl
ret
push
fdivrl
xor
inc
dec
add
mov
mov
in
lods
sbb
cld
or
fcomip
sub
pop
jnp
inc
inc
mov
cmp
je
leave
imul
xor
xor
test
mov
sbb
jp
cmp
jge
add
cmp
call
cmp
ror
push
pop
cmp
cmp
cwtl
sbb
cmp
xchg
pop
xor
test
mov
dec
xchg
mov
xchg
push
adc
sub
loopne
and
popf
xchg
push
ret
flds
shrl
jl
icebp
in
mov
adc
rclb
fs
lods
out
inc
shrb
sub
or
loope
push
xchg
xchg
jle
jecxz
dec
and
cs
outsb
pop
rcrb
mov
mov
pop
test
lahf
xor
mov
push
pusha
call
popf
and
inc
xor
inc
mov
es
orl
inc
sub
pop
call
out
push
fscale
mov
sbb
hlt
lret
pop
rorl
out
mov
mov
jmp
movsb
xor
adc
idivl
mov
ss
pop
inc
insw
cmp
dec
push
dec
test
push
xor
lea
shll
adc
push
push
dec
cld
fidivrs
xor
out
adc
mov
pop
dec
mov
sub
cmpsb
cmp
add
ficompl
sub
mov
enter
aam
insb
movsb
rcrb
xchg
stc
adc
pop
xor
out
lds
ret
aam
test
pop
jmp
aad
cmpsb
lcall
sbb
push
push
loope
std
cmp
lahf
ja
adcb
repz
call
mov
imul
pop
adc
hlt
pop
mov
and
popa
pusha
xchg
jbe
pushf
out
push
call
notl
pop
rcll
ja
mov
add
fwait
inc
jbe
add
sub
push
addl
ficoms
in
insl
sbb
inc
ret
jle
sbb
in
lret
push
and
dec
fldcw
aam
sub
int
test
and
push
add
jo
cwtl
jge
mov
xchg
rorl
and
jl
cli
xor
movsl
inc
sbb
fstpl
shrb
mov
call
aam
fidivs
mov
mov
push
jp
jle
testb
jmp
pop
dec
fcomps
std
stos
movsl
popf
rcrl
roll
mov
cltd
pop
jecxz
or
cmpsl
mov
out
cmp
popf
inc
push
add
xchg
and
fbld
shlb
xor
or
sbb
mov
je
sub
stos
cmp
in
pushf
stos
jnp
ljmp
dec
ja
fdivl
shl
cwtl
aaa
ljmp
jns
push
int
loopne
pop
out
xor
mov
xlat
js
jecxz
dec
orb
addr16
sbb
pop
stos
lods
add
mov
sahf
dec
es
fnstcw
pop
stos
in
or
cmc
into
or
sarl
mov
arpl
cmp
jg
cld
lods
mov
cmp
nop
cltd
cld
cld
in
loop
fcomps
in
push
cmpl
or
jno
aad
scas
ljmp
test
sub
lea
stos
sbb
fstpl
inc
test
adc
divb
in
imul
sbb
xchg
nop
mov
add
push
addr16
mov
mov
push
sbb
pop
mov
lcall
jle
popf
mov
jecxz
gs
les
mov
fidivrl
pop
rolb
hlt
ja
out
mov
push
jmp
cli
xchg
mov
dec
fmul
das
and
loop
cmpl
stc
pushf
mov
inc
sub
andl
cmp
xchg
shrb
psubusw
insb
sbb
aam
xchg
popf
mov
cltd
push
add
addr16
fmulp
mov
inc
scas
mov
shrl
fdivp
out
shl
rcll
cmpxchg
mov
cmpsb
fs
fidivs
jae
shrb
mov
xchg
nop
dec
or
sbb
call
arpl
sbb
sarl
mov
dec
movl
sub
in
les
pop
mov
cltd
sbb
mov
subl
jmp
je
incb
jg
fwait
and
push
fdivl
movsb
rcr
jecxz
adc
mov
add
ja
or
pop
xor
mov
inc
or
out
in
sub
push
push
push
ss
or
ja
xor
jmp
pop
stos
mov
mov
push
add
test
jle
test
or
scas
adc
fidivrl
jmp
xchg
jle
lret
add
js
push
cs
dec
lock
or
push
cmp
or
pop
lcall
faddl
mov
lret
jno
mov
and
mov
dec
sbb
xchg
fisubrl
cmp
iret
sub
leave
icebp
ss
push
in
adc
pushf
ret
addr16
mov
mov
shll
dec
ficomps
in
mov
shll
std
push
mov
dec
ret
mov
inc
jmp
cmpsl
mov
mov
add
pop
outsb
fsubrs
inc
push
cmp
mov
dec
mov
int
outsb
pop
sub
cmc
out
ds
ret
xchg
xor
loope
fwait
cs
push
daa
pop
mov
lods
cmp
mov
lods
adcl
loopne
xchg
push
cmp
cli
xchg
push
xchg
dec
jle
jge
cmp
jb
mov
push
stc
pop
xchg
sub
push
sub
into
sub
add
jns
imul
loope
aas
dec
inc
call
dec
jle
pop
or
xor
add
fs
sbb
movsl
stc
jl
mov
stc
mov
test
xor
lds
fildl
cli
pop
xchg
sbb
xor
das
bound
mov
fiadds
xchg
ret
lret
sarl
pop
sbbl
insb
jbe
fnstenv
paddsw
inc
sbb
jl
jnp
aam
xchg
rorb
add
sub
call
cmp
xchg
popa
lods
adc
test
shrl
or
das
push
mov
lret
cmpsl
popf
xor
push
mov
hlt
dec
outsl
cld
xor
pop
nop
add
or
xchg
sub
stos
mov
out
add
push
pop
adcl
cmp
outsb
pop
popf
mov
push
sub
mov
mov
pushf
repnz
cmpsl
subl
add
or
sbb
pop
push
enter
dec
lds
xchg
jb
loop
pop
adc
or
xor
out
xchg
test
ljmp
cltd
popf
dec
loope
inc
sbb
loope
or
pop
orl
cmp
push
or
iret
xchg
pop
subb
jecxz
jle
pop
cli
jp
and
popl
xchg
std
dec
fldenv
in
movsb
pushf
icebp
jg
jae
in
push
push
or
mov
inc
mov
in
leave
insl
rcl
stc
orl
push
add
lret
in
mov
in
xor
dec
cli
mov
fs
adc
mov
pop
incl
jnp
imulb
push
mov
les
jmp
inc
xor
sub
pop
outsl
sub
sbb
insb
add
in
or
inc
fcompl
xor
inc
add
push
and
movsb
mov
mov
cld
call
and
data16
and
jbe
in
jae
insl
push
pop
in
aam
cli
or
xchg
sbb
push
les
dec
dec
lea
adc
pushf
or
scas
iret
mov
dec
xor
sub
sub
sbb
mov
repnz
aam
sbbb
xor
movsl
and
push
mov
adc
dec
inc
sub
dec
sahf
aaa
jecxz
movsl
sbb
cmp
jae
inc
adc
subl
xchg
in
dec
inc
lods
pop
nop
jo
test
mov
daa
sub
xor
mov
xchg
push
cmpsl
push
push
dec
or
mov
ja
imull
clc
stos
push
scas
movsb
push
dec
mov
xchg
orb
and
mov
mov
lcall
into
xor
pusha
dec
and
push
into
dec
adcl
pop
divb
push
jbe
push
push
sbb
xor
push
inc
mov
in
push
scas
push
aad
mov
icebp
dec
sub
fistpl
sti
jl
pop
push
jne
dec
scas
shll
mov
movsl
xchg
lret
jb
push
lret
sub
cs
pop
hlt
sahf
pusha
inc
cmpsl
scas
xlat
mov
sbb
xor
push
mov
lcall
int
mov
xor
inc
test
push
mov
xor
fildl
lods
push
inc
mov
loop
imul
xor
cmp
ds
cmp
daa
shll
add
stos
dec
mov
into
cmp
cmpsb
xor
cmp
push
int3
mov
movl
scas
xchg
mov
or
pop
je
mov
ret
in
enter
fisubl
test
pushf
sahf
adc
jo
ret
xchg
dec
imul
cmp
icebp
fs
lds
cli
sbb
mov
pop
push
xor
stos
dec
sbb
or
inc
es
cmp
dec
adcb
mov
and
sti
sahf
repz
adc
cld
popa
out
sbb
aaa
mov
rcrl
int3
clc
mov
cmp
adcl
dec
and
sbb
fwait
mov
and
mov
cld
bound
pop
pop
test
lret
arpl
scas
pop
in
dec
jl
cmp
fst
jns
lret
loop
add
jl
outsb
jno
add
jp
xchg
jg
cs
sahf
jnp
jg
add
jle
icebp
xchg
popa
decl
lcall
push
ja
clc
xchg
je
adc
and
and
das
mulb
test
xor
push
sub
sbbl
dec
cmp
mov
push
add
push
or
and
mov
or
jmp
pushw
ljmp
mov
inc
cmpb
sti
das
in
ret
adc
lods
mov
cmp
pusha
aam
jo
js
sbb
jle
inc
aaa
imul
lods
les
inc
rcrb
sbb
sub
out
in
scas
push
adc
ss
mov
mov
test
int3
inc
xchg
lcall
jne
out
sub
arpl
jp
add
jg
in
cmp
lods
sbb
ds
jle
sbb
pop
test
data16
cli
call
xchg
fstps
test
add
ljmp
pop
int3
in
pusha
jbe
repnz
dec
mov
out
outsl
dec
sbb
or
popf
clc
push
xchg
xchg
mov
and
sub
xlat
mov
and
repz
lock
rcll
mov
nop
push
lea
ficomps
mov
mov
jle
hlt
test
jl,pt
pop
iret
push
in
adc
imul
into
xchg
enter
xchg
pop
das
repnz
pop
daa
jbe
insl
rclb
xor
xor
cltd
inc
add
fidivrl
pop
ret
sahf
cltd
dec
mov
or
adc
enter
push
je
cltd
add
cmc
int
into
sub
jno
pusha
cmp
out
inc
pusha
popa
popf
into
or
cld
xchg
dec
pop
imul
jnp
jmp
movsb
add
cwtl
pop
cwtl
add
mov
into
inc
cmp
mov
out
outsb
rcrl
jmp
xchg
sbb
mov
testb
cmp
loope
jb
pop
xor
adc
xchg
dec
test
stos
adcl
push
dec
mov
push
data16
in
addr16
inc
pop
pop
mov
push
inc
es
add
dec
cld
xor
out
sbb
push
jmp
xchg
fdivrl
popa
std
addr16
pop
mov
lods
xchg
out
movsl
fstpl
pusha
push
xor
xchg
push
jmp
cmc
pop
gs
cmp
pop
inc
sbb
mov
xor
cmp
clc
cmp
arpl
jo
sarb
js
fs
orl
idivl
lock
sti
pop
mov
aas
mov
fcmovne
dec
xchg
mov
adc
mov
frstor
cmp
add
scas
sbb
mov
mov
jbe
fdivs
mov
cld
fisttpl
adc
ret
mov
imul
adc
xor
jge
es
mov
roll
cmp
mov
pop
mov
jae
xor
pop
jle
lahf
xor
lock
cmp
jns
and
imul
imul
rclb
add
std
xchg
fs
mov
arpl
aas
insb
push
or
add
lds
clc
or
cmp
mov
ret
shl
ljmp
mov
and
dec
or
clc
dec
and
pop
inc
test
jg
incl
push
add
fsubrl
aam
push
sub
mov
les
or
cmp
cmp
mov
enter
out
and
sbb
or
jmp
push
cmpsb
xchg
pop
mov
jo
jb
rcl
addr16
cwtl
or
xor
xor
and
lods
mov
and
xor
scas
mov
in
out
or
movsl
popa
jg
dec
mov
iret
lret
or
sbb
fldenv
imul
mov
jmp
jno
popl
xlat
cli
mov
lea
nop
lcall
arpl
sbb
mov
fwait
sbb
sub
jg
jbe
push
dec
int
nop
lock
call
add
push
ss
cmp
mov
stos
or
scas
cmp
cwtl
es
subl
pop
aas
out
sub
jnp
cmp
pusha
fyl2xp1
into
push
sbb
cmpb
test
das
test
sbb
jb
jle
push
clc
push
leave
xchg
orb
jbe
fimuls
push
into
inc
aad
and
test
or
sub
mov
add
dec
jg
xchg
xor
addr16
inc
sbb
shll
push
push
mov
iret
jmp
mov
cwtl
loope
mov
xchg
aad
addr16
cmc
mov
xchg
and
or
jp
adc
mov
push
jl
pushf
inc
scas
pop
subb
mov
out
jnp
insb
xchg
and
fcomi
sbb
mov
mov
mov
fists
push
pop
xor
rcrl
shll
adc
adc
pop
mov
js
in
aad
jge
jp
adc
scas
sbb
in
dec
xchg
pop
xor
out
push
cmp
les
inc
dec
jmp
inc
sub
movsb
and
mov
dec
int3
jge
pop
inc
xor
cli
mov
lahf
jecxz
jae
es
sbb
sub
xlat
call
sarl
dec
jmp
cmp
dec
lods
xchg
pop
cmc
fs
scas
fldenv
out
push
add
sbb
sbb
jo
xor
mov
sbb
lods
lahf
xor
test
pop
xor
jno
movsb
adc
jbe
push
rcll
incb
pop
inc
dec
fdivp
mov
mov
lods
insb
mov
mov
lahf
pop
inc
pop
push
notl
call
or
push
or
mov
inc
sub
pop
cmp
xchg
xchg
cmpsl
rcrb
mov
pop
cmp
jg
and
sbb
insb
js
cmc
and
pushf
or
sub
rcrb
jg
lret
in
jl
adc
call
cltd
jle
out
or
imul
hlt
xlat
or
adc
movb
nop
adc
mov
pop
mov
mov
and
insl
cmp
push
sbb
leave
pop
jmp
addr16
xchg
lahf
std
xor
repnz
loop
enter
stos
ffree
xchg
push
xchg
mov
mov
in
add
lods
addr16
nop
call
rclb
test
mov
and
cmpsb
imul
icebp
hlt
dec
push
movzwl
je
mov
sbb
dec
add
insl
adc
adc
and
adc
jae
adc
das
iret
pop
cmp
dec
es
mov
ss
or
adc
cmpsl
jmp
adc
in
out
in
lret
xrstor
sbbl
das
add
xlat
scas
xchg
sbb
inc
stos
popa
scas
add
dec
xchg
and
xchg
ja
jns
add
movsb
and
into
es
cli
stos
arpl
dec
enter
lods
ss
push
test
adc
jne
nop
pushf
adc
rolb
je
pop
jp
push
add
aam
shl
sub
imul
mov
pop
cmpsl
jmp
dec
jne
test
mov
mov
jno
or
sti
int3
stc
and
mov
mov
cmp
adcl
shll
pushf
popf
xchg
sbb
xchg
and
jnp
out
and
inc
call
lret
fs
imulb
ja
fiadds
mov
and
cld
mov
add
out
or
sbb
adc
stos
cmpb
mov
add
adc
in
add
arpl
mov
jp
pop
jl
filds
adc
mov
rorb
inc
in
ret
out
mov
or
clc
xor
mov
rcrl
xor
push
addr16
lret
dec
mov
or
adc
rcll
push
sbb
fs
and
fisubrl
pop
call
sbb
mov
dec
sub
subl
lret
daa
or
das
mov
cmp
sub
xchg
int
leave
cmpsl
pushf
aas
popf
popa
cmp
and
outsl
hlt
or
jb
lds
jmp
lds
lea
pusha
xchg
sti
dec
lods
mov
push
pop
clc
in
lds
call
mov
pop
xchg
dec
dec
cmp
push
xor
lds
cwtl
aaa
dec
arpl
cmp
mov
pop
lret
cmp
jae
pusha
mov
jmp
insb
pop
mov
inc
outsb
repz
add
sub
cmp
or
cmp
or
call
stos
dec
cmp
popf
mov
lahf
inc
pop
push
out
cltd
push
out
stos
fiadds
xchg
bound
xor
dec
mov
jp
sbb
dec
rcrl
fwait
inc
stc
mov
aad
adc
pop
mov
sti
ret
xchg
clc
mov
int
scas
push
jecxz
inc
fwait
jl
ds
adc
push
xor
iret
popa
std
pop
shll
in
loopne
test
jns
add
test
pop
xlat
push
sub
imul
ja
or
insb
inc
cmp
andb
dec
jb
sbb
aam
sbb
jno
imul
sub
mov
jmp
iret
mov
push
push
std
add
test
sub
mov
inc
push
fs
inc
inc
mov
in
sti
add
cmp
push
jmp
sbb
inc
and
fdivrs
mov
js
jb
inc
scas
pop
out
rcrb
cmp
dec
pusha
neg
inc
sbb
sahf
popf
outsb
mov
stos
ja
imul
divb
and
in
popf
and
dec
out
pushl
mov
mov
das
jecxz
nop
add
cs
add
call
shl
push
add
push
mov
outsb
filds
mov
lds
mov
mov
sub
mov
inc
dec
xchg
loop
mov
scas
xchg
push
dec
cwtl
insl
cld
lods
jmp
cmp
rcrl
rclb
stos
push
adc
pushf
sub
or
xor
or
andb
addl
lahf
ss
and
or
pop
and
roll
ljmp
mov
sahf
push
int3
xchg
xchg
aad
adc
xchg
add
or
pop
js
dec
scas
repnz
add
sub
std
and
add
out
pop
xchg
xchg
lcall
test
mov
adc
mov
sbb
shlb
int3
jmp
dec
jl
xor
sbb
sbb
daa
sbb
jbe
aam
pop
nop
cmp
mov
push
repnz
pop
daa
dec
mov
push
xor
cmpsb
jno
mov
pop
out
cmpsl
lret
aaa
cmpsb
jp
mov
inc
cmp
inc
xchg
adc
into
and
push
out
mov
jge
andl
data16
test
bound
jge
pop
out
js
dec
mov
mov
cmp
sub
in
or
pop
ret
fisubs
pop
loopne
mov
and
xlat
test
add
xor
gs
dec
sub
mov
inc
push
je
sti
addr16
add
movb
pop
sbb
stos
filds
dec
std
adcl
xchg
sub
lds
fwait
xchg
lock
outsl
xlat
jb
dec
lds
stos
ljmp
sub
sbb
or
cmpsb
mov
divb
stos
stos
shlb
insb
cwtl
mov
testl
jo
dec
call
xchg
call
sbb
iret
pushf
sti
mov
enter
mov
and
xor
lods
mov
lods
cmp
cwtl
in
out
js
mov
pop
pop
icebp
xchg
mov
push
dec
adc
dec
adc
daa
xor
sub
dec
fdivrs
push
add
shll
lahf
insb
cmp
call
sbbb
push
cli
or
cmp
inc
adc
test
in
xlat
aam
mov
inc
hlt
mov
popa
out
pop
lock
mov
jae
mov
inc
add
adc
inc
inc
mov
jp
add
mov
data16
fucomp
cwtl
js
gs
xor
sub
pop
dec
and
shr
add
jecxz
test
cmp
bnd
neg
and
stc
inc
add
inc
js
pop
subl
popf
stc
jecxz
js
inc
sti
mov
and
sub
pusha
rep
rorl
sbb
loopne
arpl
test
movsb
mov
loope
add
sahf
inc
inc
ficoms
nop
push
pop
mov
or
and
cmp
lahf
push
andb
push
mov
mov
repnz
xchg
jmp
add
insl
mov
call
push
je
adc
cmp
mov
into
sbb
les
ljmp
sub
push
in
mov
mov
fcoml
mov
mov
jecxz
dec
push
mov
sub
jbe
cmp
es
cwtl
in
push
jne,pn
imul
and
jg
imul
fwait
jge
nop
dec
cmp
pop
pop
inc
shrl
sbb
push
and
push
outsb
push
or
inc
or
xor
les
cmp
insl
xor
mov
pusha
in
push
aas
cmc
mov
push
mov
adc
dec
push
inc
mov
aaa
fabs
gs
movsl
xor
lods
fwait
sti
addr16
push
lds
pop
pop
imul
sub
cmp
and
xchg
cmp
imul
xor
mov
arpl
std
mov
sbb
rol
push
mov
jnp
fwait
stos
mov
cmpsb
hlt
jbe
popa
test
lcall
popf
pop
and
daa
jmp
fdivrl
cmp
bound
int3
xor
sbb
push
jno
stc
xor
or
dec
jns
push
pusha
dec
push
leave
shrl
sub
lods
scas
xor
sbb
shlb
jns
sub
aaa
xchg
add
jo
mov
ret
mov
adc
xor
cmp
lcall
jmp
gs
cmp
pop
idivb
ficoms
xchg
js
sti
lret
hlt
xchg
rolb
adc
mov
icebp
sbb
adc
cmpsb
push
clc
dec
sbb
fiadds
xor
test
jb
xor
nop
sub
cmp
jnp
pop
add
sbb
mov
pop
in
enter
mov
pusha
loop
dec
jp
popf
add
cwtl
lret
push
mov
mov
pop
sahf
imul
sbbb
mov
adc
mull
mov
cmc
push
or
xchg
das
lcall
cmp
mov
lock
ret
shrl
roll
daa
mov
cs
mov
lret
shll
sbb
xor
daa
add
lods
inc
pop
sahf
mov
aas
shl
insb
out
mov
insb
ja
or
mov
dec
and
inc
shll
lock
pop
pop
int3
pusha
inc
mov
mov
nop
sarl
and
mov
nop
pop
scas
inc
sbb
cs
pop
ljmp
push
adc
jl
flds
subb
out
push
iret
push
sub
scas
cmp
adc
dec
xor
sub
add
mov
arpl
or
mov
out
stos
rorb
fst
mov
or
jge
pusha
push
mov
inc
adc
decl
add
adc
test
movsl
outsb
and
xchg
or
mov
cmp
lahf
rol
push
xor
add
inc
push
push
xorb
mov
insb
xchg
jle
pop
cmpsl
lahf
pop
inc
mov
addr16
lods
ja
mov
ds
inc
test
push
ljmp
ss
pop
inc
es
jae
out
jbe
inc
xor
clc
imul
popa
pop
hlt
test
mov
inc
adc
jae
int3
adc
js
push
in
adc
in
inc
jmp
or
xchg
push
sbb
daa
cmp
subl
sbb
pop
inc
inc
lahf
adc
or
push
mov
data16
add
cmp
jecxz
mov
cmpsl
mov
jp
int
imul
ret
bound
mov
cmp
notb
sub
rclb
mov
testl
into
faddp
dec
dec
jge
sub
jge
stos
xchg
out
in
cmpsl
xchg
mov
or
mov
cmpsb
pop
movsl
in
add
ffreep
mov
mov
fsubrp
aad
inc
inc
js
or
aas
jno
push
sarl
dec
adc
xchg
pop
mov
sub
mov
fdivr
shll
jno
xor
sarb
mov
sbb
inc
sbb
add
jne
outsb
mov
addr16
nop
cld
out
mov
imul
jg
jbe
jae
jo
mov
cs
xor
inc
mov
sub
rclb
push
dec
shrb
mov
mov
popf
mov
mov
jge
mov
cwtl
leave
lret
mov
sahf
gs
dec
out
inc
cmp
inc
adc
inc
sbb
cmpsb
dec
push
cmp
ret
scas
mov
scas
ret
test
and
mov
aas
cmc
adc
jo
lds
lcall
mov
or
stos
pop
sahf
add
pop
inc
lret
push
mov
lret
and
outsb
adc
jg
mov
outsl
xchg
cmp
ds
repnz
aas
testl
sarb
lock
cwtl
add
lods
push
out
mov
pushf
jns
or
sbb
xor
sbb
scas
pusha
sbbl
mov
fildll
lret
imul
insl
add
sbb
cmp
jb
jle
dec
bound
cltd
mov
cmp
cmp
popf
and
sub
push
pushf
push
les
cmp
dec
sbb
cwtl
daa
push
push
push
cmp
pextrw
sub
jo
xor
or
cli
int
mov
push
lods
mov
test
fstp
mov
mov
cltd
ds
aam
sbbb
out
adc
insl
sub
or
mov
xchg
gs
mov
xchg
test
fldl
lret
fiaddl
and
fsubr
lahf
ffree
jno
pop
imul
mov
sbb
inc
test
movsl
jp
or
sbb
pop
shrl
mov
inc
std
lods
pusha
mov
adc
sub
adc
push
popf
sub
inc
and
lock
out
jo
sub
shrl
sub
mov
jb
cltd
call
ds
fwait
push
in
test
lahf
cltd
sub
inc
lock
and
adc
mov
repnz
mov
inc
mov
xor
inc
jne,pt
cmpsb
lcall
stos
in
jo
fiaddl
addr16
cmp
lcall
jg
pop
jl
imul
test
mov
pop
dec
pop
orl
mov
cli
jbe
loopne
inc
push
inc
xchg
movsl
add
or
movsb
xor
or
stos
rclb
outsb
sbb
repnz
int3
stos
inc
cli
repz
fsubl
lret
sub
rcrl
pop
mov
aad
das
or
in
dec
inc
sti
fs
pop
rolb
fistpll
idiv
xchg
pop
push
fwait
test
addr16
cmp
xor
js
sbb
jo
cmp
outsl
das
mov
cmp
pop
pop
mov
sub
cld
fldcw
mov
adc
and
inc
cmp
jg
outsb
dec
sar
dec
inc
scas
push
fnstenv
sbb
jmp
cmpsb
pop
lods
data16
rclb
in
jmp
cmp
mov
out
cltd
pusha
xor
add
add
adc
mov
cltd
inc
or
mov
test
push
decb
in
out
lcall
pusha
pop
push
outsl
std
fcompl
sub
push
loope
inc
lahf
pop
jecxz
adc
ja
jl
sub
cmpsl
pop
pop
int
cmpsb
dec
add
das
xlat
fistpl
mov
cmp
inc
call
daa
lods
aas
cld
mov
mov
cmp
mov
cmp
shl
fsubrl
mov
jmp
out
sbb
pop
sub
shlb
adc
rcll
and
lock
mov
sbb
loop
push
lods
iret
js
pop
cmp
cli
imul
fs
dec
fisubrs
arpl
out
rorl
fwait
push
cli
mov
out
push
loop
mov
mov
jo
push
jmp
loope
daa
sbb
adc
xor
jecxz
aam
out
inc
mov
xor
push
add
cld
insb
and
ljmp
orl
nop
lret
aas
xchg
inc
cmp
stc
or
mov
test
mov
jae
addl
std
xor
ja
sbb
scas
jp
mov
ret
mov
test
and
xchg
cmpsb
sbb
cmpsl
pop
sbb
scas
dec
and
aam
fs
shrb
int3
lret
adc
adc
cltd
sbbb
cmp
jle
dec
mov
inc
sub
mov
jns
int3
fwait
sbb
and
mov
les
or
mov
ret
das
cmpb
or
jnp
mov
sbb
mov
in
pop
or
dec
shll
lea
arpl
subb
add
cmpsb
add
loop
dec
out
scas
sahf
or
ret
out
fimull
call
lret
lret
inc
je
dec
jmp
push
cmp
mov
dec
lods
mov
repnz
jl
aad
push
lock
ja
cltd
dec
inc
mov
jmp
mov
add
mov
dec
pop
repnz
adc
out
cmp
mov
mov
jp
and
addr16
ja
out
cmp
or
cmp
je
gs
mov
mov
popf
mov
clc
ja
xchg
insb
inc
pop
jge
mov
sbb
sahf
dec
mov
dec
jb
faddl
cli
mov
out
loopne
cmc
addr16
mov
adc
sub
jbe
and
cmp
cwtl
shrl
stc
sarl
test
hlt
jp
jnp
ss
add
push
fsts
add
popa
push
testl
inc
movsl
shll
es
in
mov
push
push
mov
and
mov
enter
insl
sub
xchg
loop
adc
ljmp
jnp
lods
jnp
scas
jbe
sub
stos
fadds
mov
jmp
sub
pop
sub
jge
xor
jmp
and
cmc
out
std
cli
xor
sbb
or
push
inc
icebp
dec
dec
outsl
insb
stc
jle
in
add
daa
std
or
mov
popa
push
push
cmp
cmp
or
popa
jecxz
mov
mov
popa
and
cs
or
push
push
adc
movb
or
popa
mov
mov
loop
dec
mov
popa
jge
add
sub
fwait
negb
pop
dec
sar
decl
jle
pop
dec
inc
divl
jns
jmp
push
fs
ret
cmp
and
mov
sarb
stc
cmp
adcb
addr16
mov
movsb
jle
push
mov
sbb
and
cmp
ret
push
jge
adc
and
lcall
mov
xchg
pushf
sbb
cli
sub
xchg
daa
popa
adc
jns
mov
fcmovne
arpl
rol
fwait
scas
movsb
dec
bound
fnsave
pop
cmc
clc
sbb
and
lea
sub
movsb
xor
leave
jmp
cwtl
mov
out
jo
ja
lock
insl
or
xor
or
sbb
push
or
fists
stos
and
inc
into
xchg
or
jecxz
inc
lahf
pop
inc
lahf
jnp
popa
iret
rcr
shlb
push
sub
daa
cli
lahf
scas
sbb
ret
popf
mov
and
add
loope
outsl
shrb
stos
fiadds
arpl
rclb
and
test
inc
push
out
cld
cmp
pushf
cld
call
jae
cmpl
movsb
dec
mov
lea
shrl
pop
xor
shr
jo
scas
mov
jmp
rorl
sub
sub
sub
sub
push
ficompl
mov
mov
jnp
lret
xchg
iret
xor
icebp
into
xlat
inc
inc
or
xor
pop
rclb
scas
sahf
int
je
or
dec
scas
enter
and
or
imul
stos
idivl
cmp
cmp
daa
out
xchg
sub
pop
fiadds
mov
int
mov
push
cmpl
sar
sbb
pop
mov
inc
add
sub
out
stos
call
icebp
push
jae
enter
adc
mov
fwait
cltd
cmp
cmpsl
out
push
cli
pop
push
in
loop
xchg
jae
test
cmp
jno
outsb
int
mov
jb
push
xor
dec
out
lock
ds
fsub
in
mov
and
das
loop
sub
insl
add
adc
or
add
jp
insb
and
test
xor
sub
xchg
out
jmp
or
pop
ds
fisttps
popf
pop
mov
minps
subl
xchg
xor
jae
fimuls
scas
xchg
mov
inc
divl
dec
push
icebp
pop
xchg
dec
mov
cltd
insb
leavew
or
mov
dec
add
jo
xchg
test
imul
mov
in
popa
mov
fwait
cmp
pop
repz
adc
pop
sub
or
adc
mov
mov
xor
jp
int3
xor
mov
push
je
xor
les
pop
aaa
dec
icebp
dec
repz
out
xchg
iret
inc
pop
pop
stc
push
xchg
adc
or
sbb
inc
jae
cwtl
insb
loope
jp
sarb
jnp
push
cmp
jmp
fmuls
int3
mov
or
daa
mov
jecxz
ljmp
addr16
movsl
push
jns,pn
sti
fwait
insl
and
adc
in
push
mov
in
in
pop
jg
sahf
xor
repnz
adcb
stos
mov
js
testb
dec
enter
jne
xlat
int3
loope
fstpl
les
popl
pop
sbb
and
les
roll
xor
jle
sbb
add
and
adc
test
pop
clc
push
out
xchg
mov
mov
cwtl
push
cwtl
sub
mov
mov
mov
push
rcll
sahf
enter
ja
adc
fs
iret
cmp
lret
lret
push
push
adc
sti
lret
orl
fldenv
add
mov
repnz
insl
sub
push
add
sbbb
ret
mov
adc
or
mov
mov
stos
xchg
dec
xlat
fistpl
inc
pop
fcompl
sbb
dec
cmp
jmp
fldt
jne
out
mov
repnz
mov
loop
dec
adc
fcomps
add
push
in
aam
ja
pop
insl
xchg
add
rcrb
jge
inc
push
xor
lock
movsb
dec
xchg
add
in
xchg
pushl
cltd
push
xchg
mov
nop
mov
out
mov
lret
lea
stos
std
jmp
dec
xchg
xor
rclb
jmp
sbbb
and
cmp
mov
xorb
add
out
addr16
push
and
xorl
or
outsb
or
ljmp
in
jno
inc
push
pop
insb
arpl
mov
out
aad
and
fldl
js
mov
insb
pop
arpl
cmc
push
jbe
inc
xchg
in
add
push
jp
ret
outsl
mov
or
dec
push
and
cmpsb
shl
mov
push
insb
in
adc
out
scas
repnz
js
aad
add
cltd
pop
movl
adc
movsl
mov
mov
and
loop
or
cmp
es
test
mov
sar
jecxz
frstor
sbb
lret
or
and
insb
xlat
add
fsubrl
jg
ret
hlt
inc
mov
stos
test
repnz
nop
jecxz
ret
out
push
mov
dec
adc
mov
daa
lds
out
cmpsb
add
push
mov
sbb
pop
sbb
cmpsl
dec
jnp
sbb
sahf
xchg
mov
inc
cmp
lea
fcoms
push
mov
sub
xchg
add
dec
shrl
movl
inc
das
test
xor
cmp
movsl
je
pop
or
mov
mov
cli
xlat
in
nop
test
hlt
into
pop
add
push
pop
arpl
adc
mov
loopne
pop
fwait
jae
jns
daa
mov
pop
xchg
push
cli
push
cli
loop
dec
adc
push
es
sub
mov
sbb
jne
mov
popl
sbb
lret
pop
dec
in
inc
and
ret
or
shrl
aas
push
mov
adc
lds
xor
outsb
mov
add
xchg
mov
inc
leave
pushf
daa
or
mov
shll
jne
push
mov
jnp
push
out
arpl
and
or
repnz
bound
add
std
mov
sub
fisubrl
pop
adc
int3
sub
imul
mov
inc
add
sub
jne
cltd
arpl
pop
dec
cmp
mov
repnz
pushf
mov
rcrb
push
mov
test
push
shl
cld
out
movsb
dec
mov
scas
decb
cli
mov
xor
push
jns
das
jno
aaa
pushf
cmp
sbb
out
inc
add
lock
sbb
cs
shll
adc
cmpsb
lock
mov
popf
movsl
and
jne,pt
repnz
popf
aaa
and
es
out
add
jo
inc
sub
push
or
data16
jg
lret
mov
ror
bound
dec
dec
outsb
pusha
les
hlt
jmp
inc
lcall
cmp
fildl
call
xor
stos
and
cmpl
pop
pop
icebp
or
ret
jno
dec
or
jp
push
inc
fcmove
mov
jb
xlat
lret
shlb
sarl
cmp
cmp
push
adc
scas
shl
xchg
and
or
xor
mov
faddl
js
xor
adc
ja
fisttps
rclb
adc
push
sub
or
ret
mov
sub
dec
xlat
int
cmc
leave
mov
lahf
mov
in
push
push
dec
pop
inc
mov
push
adc
xchg
jge
dec
clc
and
inc
mov
imul
sub
notb
push
loop
jl
pop
and
inc
jg
lret
adc
loope
or
movsl
rorb
pop
in
es
cld
sub
aas
sbb
data16
or
or
dec
fst
or
in
inc
dec
sti
mov
pusha
data16
dec
add
mov
shll
sahf
mov
hlt
repz
inc
xchg
aaa
mov
insb
cmp
and
mov
sub
pop
lcall
add
in
jle
xor
mov
push
sbb
aam
or
testl
pop
lock
int
scas
test
push
inc
out
pop
add
shrb
je
mov
and
cmpsb
sbb
cmpl
dec
clc
loop
clc
stos
xchg
or
add
pop
fwait
push
movsb
adc
ss
inc
inc
nop
or
out
pop
mov
shrl
cs
repnz
fimuls
adc
test
and
push
fdivrp
pop
sbb
push
dec
pop
bound
insl
push
jno
cmp
push
mov
gs
dec
xor
push
push
lret
lock
adc
lock
pop
and
stc
mov
inc
mov
pop
mov
test
mov
lds
outsl
add
int
call
pop
dec
int
sbb
inc
aas
hlt
subb
es
inc
je
pop
shr
jmp
jg
push
dec
cmp
sbb
jp
xor
test
and
gs
mov
out
repz
pop
xchg
xlat
test
in
dec
rcrl
mov
pusha
add
xchg
jge
leave
cmp
and
nop
stc
add
sub
test
arpl
std
xlat
xchg
pop
lea
ret
and
push
mov
lods
popa
in
cltd
repnz
movsb
push
fwait
mov
add
jge
dec
outsb
cmp
xlat
cli
je
repz
scas
dec
mov
sbb
outsl
inc
std
adc
mov
mov
fidivl
ljmp
xchg
loopne
adc
sti
mov
idivb
out
or
or
fisttpll
mov
mov
xchg
stc
repz
rorl
addr16
adc
push
loop
je
call
xchg
mov
push
in
jmp
and
leave
stos
jae
or
xlat
adc
dec
pop
and
fwait
inc
adc
fsub
push
dec
out
mov
jle
ficomps
mov
push
lret
in
dec
leave
in
imul
mov
adc
sub
inc
and
aas
inc
mov
ljmp
fisubrl
mov
loop
stc
dec
xchg
push
jl
nop
or
xchg
sub
sub
jg
xor
icebp
adc
jnp
addb
aam
jle
mov
or
mov
lds
movsl
push
fimull
jo
xchg
mov
pop
xchg
outsb
mov
cwtl
pop
mov
jno
std
jb
pop
sbb
sub
lods
inc
dec
mov
scas
mov
out
mov
xchg
mov
xchg
pushf
test
clc
dec
aas
or
and
cmp
sbbb
inc
enter
pop
arpl
mov
push
mov
mov
icebp
dec
jge
jecxz
pop
aam
or
add
mov
and
rcl
les
repz
popf
pop
inc
icebp
mov
jb
lahf
inc
sub
into
shrl
push
jb
cs
aas
int3
inc
pop
insl
shll
dec
push
xor
int3
sbb
movl
idiv
and
lea
and
dec
sbb
sbb
mov
jge
in
loope
pushf
pop
into
sub
jno
jo
arpl
xchg
pop
lret
xchg
inc
popl
push
cmp
outsl
fucomp
push
cmp
mov
mov
jo
aas
pop
fbld
xchg
mov
push
add
adc
lea
or
cmp
popf
test
es
nop
mov
dec
and
cwtl
movsl
ss
ficoml
rcrb
add
adc
lret
jno
in
out
cmp
addb
fldl
and
dec
jo
aam
mov
in
pop
lahf
jp
mov
cld
pop
les
mov
addb
mov
inc
jnp
loope
sub
sar
add
fidivrs
loopne
arpl
cmp
fistpll
sbb
adc
pop
fadds
push
push
das
xor
dec
sti
inc
dec
or
mov
outsl
inc
mov
jnp
idivl
and
out
mov
xor
pop
xchg
gs
adc
leave
sbb
mov
dec
aaa
sbb
fiadds
rcr
xor
mov
push
dec
out
mov
repnz
fistps
fdivs
pop
lods
fstpl
sarb
fisttps
test
repz
out
add
jecxz
adc
insl
aaa
insl
popa
and
out
scas
scas
fsubr
cmp
and
test
dec
inc
mov
sti
nop
sub
and
repnz
aam
cmp
sub
jbe
inc
aad
sarl
cmp
xor
xchg
sbb
push
adc
lds
arpl
in
stc
adcb
enter
hlt
xadd
xchg
xchg
push
sbb
cmp
or
aam
es
mov
lods
or
lret
xchg
lret
add
loopne
loope
pop
lret
hlt
lcall
cmp
and
inc
mov
dec
mov
adc
cmp
insb
ds
int3
cmp
sub
movsb
enter
xchg
call
out
jl
xor
mov
iret
push
and
loop
mov
xchg
xor
inc
mov
inc
lahf
xchg
lret
fidivl
cwtl
add
fildll
add
push
push
cmc
ret
in
ss
push
and
test
push
jle
stos
push
and
mov
mov
fmull
imul
in
inc
mov
pusha
addr16
addb
dec
mov
pushf
mov
mov
frstor
cmpsb
pop
push
adc
or
ljmp
dec
add
pusha
and
loop
sbb
adcl
xchg
add
sbbb
add
pop
jno
mov
jge
or
jae
stos
cmc
push
xchg
popa
aaa
adc
jns
push
loop
lret
adc
push
bound
and
dec
adc
imul
cmpsb
imul
loop
adc
lahf
sub
cltd
adc
xlat
bound
push
cltd
lahf
sub
hlt
daa
jne
pushf
movsb
adc
sub
sbb
adc
shrl
scas
sub
jmp
cmp
shrd
cwtl
icebp
cmp
adc
pop
dec
lret
fdiv
insl
pop
jns
xchg
scas
add
mov
push
in
pop
push
mov
out
lcall
fwait
repnz
xchg
jb
pushf
dec
faddl
test
pop
xchg
and
jecxz
fwait
push
sbbb
mov
lcall
xor
lret
out
fwait
mov
and
loop
or
out
aam
sbb
cld
xchg
leave
iret
adc
push
push
mov
and
sbb
in
outsl
push
in
nop
cwtl
popf
mov
jo
add
cmp
add
or
or
mov
xlat
idivb
pop
xlat
sub
insl
dec
or
fidivs
insl
aam
push
xor
sbb
pusha
mov
sbb
xchg
mov
dec
pop
ficoml
fldcw
hlt
stos
sub
push
and
in
pushf
mov
fmuls
out
jnp
das
lret
cmc
es
outsb
mov
fiadds
inc
int3
mov
out
pushf
adc
sub
stc
ja
aas
aad
cmp
mov
aad
cs
cmpsb
pop
push
stos
enter
mov
add
sbb
inc
sahf
shl
loop
daa
xchg
and
adc
mov
cltd
xor
pop
daa
ret
inc
imul
les
mov
ss
loopne
jns
stc
dec
cli
ret
insl
repnz
push
push
into
inc
popf
cmp
sbbl
xchg
lahf
xor
sub
test
inc
push
jnp
in
insb
out
jecxz
scas
mov
mov
fldenv
xor
imul
mov
and
inc
dec
and
inc
scas
shll
mov
loop
enter
jno
inc
xchg
mov
lahf
sub
add
inc
mov
mov
mov
cmp
and
push
fstl
adc
mov
ret
std
mov
cmp
jl
popf
mov
rclb
mov
pushf
cmpsb
jo
xchg
dec
into
sub
leave
xor
inc
fimull
das
or
test
adc
xchg
cmp
je
xor
ret
hlt
mov
or
test
movsb
es
xchg
mov
ror
sub
dec
push
lds
mov
jno
data16
inc
idiv
enter
and
add
sub
pop
inc
mov
inc
xchg
xchg
jmp
lret
sbb
ljmp
pop
cltd
call
ja
pop
xor
cs
xor
fisttps
xor
xchg
in
outsb
sub
xor
sbb
rcrb
jae
or
push
je
cmp
stc
add
jge
movsl
imul
xor
xor
imul
ret
jbe
nop
sbb
adcb
or
andb
adc
test
dec
mov
adc
jns
cmp
cmpsb
xchg
cli
push
in
int
xchg
inc
test
loope
cmp
int3
and
mov
cmp
pop
lcall
mov
pushf
add
notl
pop
enter
leave
mov
outsb
push
mov
popf
push
scas
xorl
and
adc
jl
outsl
scas
cmc
hlt
rsqrtps
sbb
adc
push
xorb
pusha
mov
xor
popf
pop
movb
mov
xor
stos
gs
gs
push
adc
shrl
sti
enter
push
xchg
jnp
insl
or
add
out
pop
pop
mov
cmpsl
sbb
outsb
js
jnp
inc
adc
cld
fwait
xchg
fwait
dec
filds
imul
fistl
sbb
lods
les
jnp
in
int3
or
cmp
jp
ds
pop
cmpsb
js
out
test
xor
enter
cmpsb
push
pop
push
inc
jns
dec
stos
ds
cltd
sar
std
inc
js
mov
loopne
sbbl
stos
dec
inc
add
aaa
xchg
test
push
xchg
pop
adc
push
add
mov
mov
imul
pop
or
push
mov
movsl
popf
mov
addr16
xor
mov
addr16
sub
rcl
inc
rorl
xlat
sarb
in
sbb
or
or
or
cmp
adcb
int3
jle
xor
iret
xor
jns
loope
aad
push
cmc
push
cltd
fidivs
andl
adc
outsb
or
into
rdpmc
cmpsb
push
ret
out
adc
mov
push
add
pop
push
add
mov
cltd
xor
or
sahf
push
lea
jecxz
push
cmp
loope
sbb
hlt
testl
lret
sub
fcompl
xchg
lcall
sti
sbb
sub
cld
data16
adcb
push
adc
int
inc
popa
and
xchg
jecxz
fdivrl
jnp
jp
dec
mov
scas
iret
add
mov
fldl
add
sti
cmp
hlt
outsb
hlt
and
mov
insb
xchg
dec
out
sbb
or
lahf
or
das
movsl
mov
or
rclb
cwtl
push
xor
outsl
jno
imul
push
dec
adc
ja
inc
nop
mov
arpl
out
sbb
push
cmovnp
lock
mov
push
aaa
adcb
test
push
lea
out
cmp
push
roll
mov
fiadds
cmpsb
sbb
sbb
repz
xchg
lcall
sbb
jnp
sti
call
mov
pop
push
mov
xlat
inc
in
pushf
inc
xchg
jmp
imul
lods
push
mov
add
pop
mov
and
arpl
sub
mov
jo
repz
jbe
jge
cwtl
test
push
popf
inc
out
call
adc
xlat
rclb
push
scas
in
insb
mov
dec
xchg
cmp
decl
loope
stos
fbld
xchg
movb
mov
in
mov
push
mov
aad
push
add
dec
insl
movsb
rorl
push
jmp
xor
inc
inc
xchg
popa
lcall
lahf
ds
cmpsb
shll
sub
dec
add
in
int3
inc
mov
sbb
mov
add
add
test
cmp
mov
xorb
cltd
pop
and
mov
sbb
pop
aas
or
fimuls
adc
adc
loope
clc
or
or
pop
mov
gs
cmp
jecxz
inc
cmp
cs
adc
mov
cld
xor
mov
sub
sbb
shlb
and
pop
add
push
aaa
std
gs
loop
dec
sbb
jecxz
pop
jp
mov
outsl
or
repnz
jmp
lret
cltd
es
mov
add
mov
nop
pop
in
dec
sbb
jnp
fildll
add
inc
cmp
test
push
xchg
add
shl
push
or
and
in
or
loope
lds
out
pop
data16
outsl
cmp
pop
mov
mov
or
outsb
imul
leave
insl
fs
cmp
in
not
and
cmp
hlt
shrl
xchg
mov
cmp
adc
add
sub
loope
mov
xor
lea
das
push
stos
push
push
pop
jmp
in
cltd
leave
push
push
pop
cld
stos
pop
fcompl
cwtl
int
iret
pop
pop
fs
mov
rcl
test
dec
xchg
int
mov
mov
inc
je
test
and
fldl
push
jge
scas
push
out
out
aas
hlt
iret
pop
push
sub
sbb
and
pop
pop
mov
stos
dec
and
out
inc
mov
xor
fsts
sbb
cld
xchg
push
adc
mulb
push
std
dec
dec
push
call
les
jp
push
pop
iret
outsb
add
push
mov
inc
mov
imul
mov
mov
dec
xor
xchg
adc
inc
imul
push
insb
shll
inc
push
dec
dec
jg
mov
and
or
pop
idivb
in
mov
data16
pop
test
jno
iret
outsb
stc
lods
fisubrl
repz
mov
pop
nop
jb
jb
movsb
loop
pop
faddp
adc
jmp
lahf
cmp
fcmove
mov
xchg
sub
neg
sub
fs
lods
mov
mov
outsb
jp
mov
imulb
xor
push
lahf
outsl
addb
lock
rcrb
cmp
inc
es
addl
es
cmp
dec
scas
sbb
jl
fwait
icebp
stos
arpl
leave
and
les
jle
adc
dec
mov
aas
mov
adc
into
xor
popf
mov
sbb
shl
cs
fisttps
xchg
push
int3
adc
push
xor
ja
test
je
fdivp
jp
and
xor
push
repnz
fwait
cwtl
mov
roll
xchg
pop
lret
sahf
sub
add
jbe
mov
mov
cmp
adc
fcomp
mov
mov
mov
test
lock
jecxz
std
lahf
sub
xchg
pop
mov
mov
pop
mov
loop
and
arpl
and
imul
mov
inc
push
enter
add
and
stos
lcall
jle
sbb
inc
cltd
pushf
jmp
mov
push
cs
mov
out
fistps
mov
adc
sub
mov
push
fadds
xchg
insb
insb
xchg
push
repnz
negl
mov
sbb
mov
jecxz
inc
adc
xchg
in
into
dec
xor
jo
cmp
icebp
leave
sub
adc
lsl
bnd
jp
pushf
test
inc
xor
push
lods
xor
and
and
fcoms
sbb
sbb
icebp
push
loopne
and
sbb
std
dec
out
mov
test
add
xor
cmp
push
enter
add
iret
ds
stc
data16
std
add
lret
push
cmp
in
leave
stc
lods
add
pusha
xchg
xor
sub
mov
repz
lret
dec
add
or
sbb
out
bound
add
iret
push
ret
pop
push
cmc
xor
loop
addr16
push
pop
out
imul
rol
add
lods
das
push
out
ret
jp
sub
ret
stos
fs
rolb
lods
cmc
push
jno
fdivl
sbb
xorl
cmp
mov
xchg
xchg
imul
mov
push
cmc
xchg
ss
or
cmp
mov
dec
or
dec
mov
lret
jmp
out
aad
loop
push
fsub
xor
rep
scas
mov
das
adc
cli
sbb
daa
mov
push
stos
push
adc
push
pop
pop
shl
stos
stos
repnz
adcb
in
pop
data16
call
lret
lods
movsl
push
rolb
push
sbb
pusha
xchg
xor
and
in
dec
mov
mov
outsl
pop
mov
enter
pusha
icebp
mov
xlat
mov
ret
fldcw
stos
hlt
xchg
xchg
daa
dec
lahf
mov
mov
pop
loopne
sub
lds
sub
pop
stos
sbb
pop
int3
fildl
adc
in
aam
sub
mov
outsl
inc
in
cltd
xchg
mov
xor
inc
cs
popa
dec
adc
das
mov
jp
repnz
aam
dec
inc
pop
fwait
cmp
call
leave
pop
push
cmpsl
ds
dec
test
inc
xchg
jge
andb
js
sbb
jnp
nop
or
and
pop
add
popa
add
out
imul
outsl
loope
fmull
and
mov
xchg
lret
gs
test
jmp
inc
xchg
call
and
cmp
daa
push
inc
cmp
daa
xor
cmp
ds
andb
in
adc
dec
jb
mov
sub
push
fdivrs
pop
cmp
das
cmpsl
push
push
xchg
sub
and
xchg
insb
push
xchg
adc
add
add
fsts
xor
movsl
daa
xor
xor
mov
dec
repnz
dec
add
adc
orl
push
push
jle
sub
sbb
cwtl
cmc
cmp
adc
push
push
aas
insl
std
jge
sarl
add
mov
jecxz
enter
dec
test
push
hlt
scas
fistps
lock
in
xchg
fstps
stos
jecxz
es
aad
pop
test
inc
sbb
add
cmpsl
stos
jge
push
fmull
out
imul
jmp
push
pop
xor
out
fidivl
adc
ret
and
lahf
int
push
lods
jle
aaa
outsb
shll
add
outsb
into
jl
daa
mov
pop
xchg
mov
shl
rclb
cmp
notl
xor
xchg
push
cmpsl
inc
jmp
push
inc
inc
mov
mov
pop
pusha
cmpsb
inc
xchg
lahf
add
in
cmp
rol
lock
mov
adc
mov
xor
push
xchg
inc
out
aas
repz
xor
cmc
rcr
aas
fisubl
mov
and
divl
ret
and
jb
xchg
arpl
xlat
es
addl
loop
mov
inc
xchg
lret
mov
cmc
mov
inc
or
leave
int
xchg
movb
pop
repz
aad
or
arpl
les
sbb
into
lods
cltd
or
into
mov
sti
insb
dec
mov
call
shl
fcmovb
hlt
pop
pop
push
loopne
js
fsincos
jl
inc
js
xchg
and
mov
fsts
jle
mov
pop
movsl
push
lea
in
loope
orl
jecxz
sub
ljmp
idivl
mov
shrb
jp
arpl
inc
push
push
or
lcall
jle
out
add
dec
cmp
out
out
dec
lahf
add
inc
jle
mov
cmp
dec
ds
leave
in
xchg
fildll
push
pop
pop
shll
push
bound
imul
sub
aad
loop
inc
fiaddl
add
mov
cmpsb
lock
cs
sub
and
cs
adc
xor
push
mov
mov
insb
jno
pop
aas
add
inc
imul
adc
push
xchg
adc
xlat
icebp
pop
fstl
lds
xchg
lea
in
xor
lods
jne
jp
rclb
bound
or
xor
sbb
iret
lods
add
mov
addr16
fnsave
xor
cmp
int3
repnz
cmp
push
aas
loopne
fiaddl
sbb
outsb
dec
adc
out
js
aad
fnstcw
cmp
push
enter
jmp
je
mov
inc
stos
loopne
insb
sub
and
pop
sub
cwtl
fstpl
push
cmp
xchg
xchg
daa
adc
cmp
ljmp
lret
inc
into
aaa
xor
div
shr
or
sbb
loope
ret
inc
add
lcall
mov
dec
xchg
mov
pop
xor
push
adc
pop
dec
into
dec
bnd
inc
int3
mov
or
add
fwait
jmp
sahf
aad
sbb
icebp
mov
xor
scas
std
inc
mov
das
cmpsb
sahf
xchg
and
test
das
mov
pop
mov
adc
mov
adc
popf
inc
ds
mov
daa
call
lret
iret
push
psadbw
push
or
jg
test
lods
stos
cmp
fwait
sahf
les
aaa
dec
cmpsb
mov
aam
arpl
iret
or
push
mov
xor
inc
fstpl
mov
outsl
jns
mov
movsb
and
jno
jge
ret
js
loop
fs
pop
cmp
xchg
cmp
xlat
daa
aas
jns
ret
movsl
std
mov
sbb
or
jecxz
loop
int
mov
rcr
fidivrs
cmp
xor
shl
or
mov
je
push
inc
xor
jno
pop
xchg
push
js
inc
loope
aam
lahf
sar
push
add
jp
xor
mov
mov
jne
sarl
rorl
stc
stc
imul
lret
cld
pop
and
insl
sahf
or
sub
aas
pop
dec
and
and
mov
sti
into
scas
je
leave
and
js
in
pusha
fcomip
outsb
and
mov
dec
repz
sub
xchg
or
aad
adc
sbb
bound
fwait
pop
dec
mov
inc
pop
nop
dec
ss
push
movsb
and
mov
fnstcw
push
cmpsl
jle
subl
iret
cmp
xor
push
ficoms
loopne
sahf
push
mov
sbb
test
int
mul
add
subb
xchg
lret
insb
shlb
push
xor
movsl
push
loope
stos
mov
cmp
stc
jge
out
jle
push
inc
leave
pusha
jp
push
inc
lret
popf
jl
jle
aas
loope
aad
sub
and
pop
sub
shl
mov
pop
popf
mov
xchg
movsb
scas
fmul
lods
sub
cli
sbb
call
mov
nop
into
adcb
pop
adc
int3
dec
popf
adc
adc
jmp
mov
or
faddl
arpl
mov
popa
jl
jnp
popa
lcall
adc
lret
rcll
jnp
mov
es
jge
push
mov
adc
cmp
mov
lods
jno
in
iret
push
inc
imul
int3
mov
sbb
fldt
push
lea
imul
adc
fildll
mov
test
jmp
imul
sbb
ds
cmp
inc
icebp
jecxz
subb
xlat
mov
test
loopne
or
outsb
in
enter
push
lret
or
sub
shlb
mov
adc
out
jnp
jbe
and
mov
lods
push
stos
xchg
adcl
dec
addr16
mov
lods
daa
test
scas
test
cmc
in
jae
test
mov
popa
das
mov
pop
rcrl
adc
loop
gs
mov
mov
outsb
jbe
or
or
je
addr16
popa
sbb
mov
xchg
cwtl
movsl
mov
idivb
mov
mov
es
cltd
sub
in
insl
pop
fucomip
add
cmc
enter
cmpl
or
push
fwait
cmp
adc
movsl
roll
ret
dec
cmp
aam
xor
int3
into
mov
repz
xchg
and
repz
xchg
into
fiadds
adc
fcomps
orb
hlt
lds
add
mov
cwtl
imull
movsb
sti
repnz
out
cmp
imul
ret
repnz
pop
sahf
out
test
fisubs
push
push
cltd
jecxz
jmp
rorl
and
insl
loopne
outsl
sub
add
into
xor
mov
popa
mov
stc
mov
mov
cmp
and
dec
and
add
push
mov
fwait
jmp
add
add
imull
push
scas
popa
mov
adc
addr16
lcall
jbe
mov
clc
pop
pop
clc
or
jl
mov
cmc
mov
out
inc
xor
pop
stos
push
inc
lea
add
mov
cwtl
pop
loope
mov
aad
das
push
and
ljmp
outsl
xchg
xor
pop
jns
in
pop
push
jnp
cmp
int3
fwait
xchg
push
js
gs
sbb
fdivrs
ja
in
and
pop
inc
push
push
imul
push
and
push
xlat
mov
shrl
or
push
or
push
dec
xchg
movsl
add
push
dec
cmpsb
pop
sbb
add
popf
scas
lret
sub
inc
in
cmpsl
je
add
leave
outsb
movsb
jg
fwait
pop
les
push
pop
cwtl
cmp
cmp
push
xchg
jp
popf
inc
adc
mov
stos
xchg
xor
dec
mov
shl
pop
dec
inc
outsb
and
popa
bound
mov
fmulp
lahf
xchg
pop
int3
cmc
pop
jns
enter
mov
add
in
sbb
mov
and
mov
xchg
jl
jmp
cmpsb
subl
daa
add
push
sbb
mov
andl
cli
pop
int
rcll
out
outsl
sub
push
movsb
cmpsb
mov
int3
int
sub
loope
and
iret
movsl
sbb
repz
leave
push
adc
fisubrs
je
stos
orb
dec
inc
bound
call
stc
addb
daa
sar
call
adc
fmuls
jae
adc
nop
out
fstl
add
cli
into
push
push
jg
stc
in
into
addl
jae
int3
dec
daa
enter
das
scas
cmpsb
cmc
jle
mov
jp
pop
mov
mov
jb
lods
ja
xor
cmc
dec
sub
xchg
adc
push
pop
add
sbb
cld
gs
adc
mov
push
pop
adcl
push
or
inc
push
out
push
cli
or
mov
dec
out
pop
fmuls
inc
enter
mov
jno
dec
push
imul
push
lcall
adc
fidivrl
fs
xchg
fnstcw
popf
mov
sbb
lods
lcall
sbb
xchg
cmp
pop
outsl
lds
push
loope
adc
mov
adcb
cld
jl
bound
push
sbb
adc
sbb
push
les
push
sub
imul
mov
pop
lret
push
adc
insb
sahf
xchg
fildll
xor
jbe
cmc
mov
mov
add
fwait
pop
out
jo
mov
mov
gs
xlat
jnp
cmp
imul
xchg
xchg
test
mov
and
or
lret
xor
ficoml
mov
sti
ja
sbb
out
jecxz
push
push
in
sbb
fimuls
lods
pusha
fstpt
xor
pop
pop
int3
mov
mov
jecxz
sub
xorb
jno
lcall
xchg
push
xor
popa
inc
imul
js
in
neg
jecxz
lds
mov
push
xchg
pop
test
jl
lea
xor
lcall
and
les
je
ret
lock
add
jo
adc
jecxz
push
push
lcall
adc
xorl
nop
adc
in
stos
fdivrl
in
pusha
xchg
pop
cmp
push
nop
pop
les
pop
jo
sub
ja
out
divl
push
sbb
push
orl
pop
repz
mov
std
fwait
imul
outsl
movsb
iret
dec
jp
enter
decb
push
iret
sbb
aam
popf
fsincos
cld
in
adc
xor
sbb
add
fimull
call
flds
jae
inc
dec
and
fsub
sbb
shlb
mov
int
lcall
jp
mov
jg
or
push
or
sub
jmp
ja
in
ret
stc
ss
movsb
cltd
add
cmpsb
repz
gs
fwait
cli
or
out
ja
cld
push
cmp
jnp
jecxz
clc
xchg
out
lods
inc
std
imul
ds
cld
jge
cmp
dec
popa
xchg
push
push
mov
hlt
imul
xor
xor
jne
shrl
mov
lea
nop
dec
inc
leave
jb
arpl
or
das
sbbb
or
cmp
mov
les
lahf
dec
sete
dec
ret
js
jae
es
mov
jecxz
lods
pop
xor
cltd
push
and
lock
jge
shll
lret
aaa
or
insl
sbb
xor
sub
jno
xchg
bnd
add
jo
aam
pop
mov
or
jbe
int3
mov
pop
push
or
cmp
cltd
push
and
into
add
push
push
jno
movsb
xor
dec
add
repz
dec
rorl
mov
and
insb
popa
inc
inc
xchg
or
stc
jge
push
cmpsb
jp
mov
xor
jecxz
mov
jb
xchg
add
and
stc
and
sbb
mov
pop
js
mov
mov
jnp
pop
sub
mov
xlat
cld
scas
fstl
in
test
push
pop
mov
sbb
call
and
in
jl
sub
jb
fcoms
lret
sub
addl
pop
mov
dec
rcrl
sysexit
imul
xchg
movsb
sahf
cli
pop
push
ret
cwtl
inc
mov
jae
pop
xchg
shrd
adc
mov
push
jbe
or
mov
and
pop
jmp
fisubl
cmc
loop
jb
and
aad
xor
aam
sub
push
mov
add
insl
dec
les
out
pop
cmp
out
pop
in
xchg
xor
int3
push
mov
addr16
int
cltd
and
cmp
addr16
rcrb
add
dec
mov
dec
add
testl
outsb
cmp
dec
pop
rol
mov
les
sbb
or
insb
negb
mov
pop
jo
js
bound
pop
dec
cmp
pop
add
das
sbb
xor
dec
dec
leave
pushf
adc
inc
adc
hlt
pusha
icebp
fisubl
repz
and
cmp
lea
pop
push
ret
lret
mov
sbb
jbe
cmp
xchg
jmp
enter
sub
pop
pop
mov
repz
std
pop
inc
cmp
jl
loopne
out
call
shll
ret
clc
push
test
out
pusha
or
inc
stos
or
xchg
cld
repnz
outsb
mov
inc
and
mov
pushf
loop
stc
mov
push
push
jge
sahf
inc
ds
jb
das
ja
mov
es
and
jne
lods
xchg
aad
fs
dec
cmp
xor
insb
in
icebp
enter
mov
and
or
or
aas
add
sub
dec
addb
cmpsl
loop
inc
les
sti
sbb
daa
pop
inc
bound
jae
vmaxsd
stos
fs
jae
pushf
leave
je
test
iret
push
flds
push
mov
pop
cmp
cmp
xor
mov
enter
sti
ljmp
jp
ljmp
les
stos
cmp
out
mov
jmp
inc
mov
add
ja
pop
cmp
xor
pop
outsl
mov
mov
ficoml
lret
add
push
mov
mov
or
cmp
adc
mov
cltd
inc
stc
sbb
movsl
lods
or
cmp
cmpsb
or
jp
pop
mov
mov
cvtpi2ps
and
sub
xor
gs
pop
and
mov
mov
je
and
mov
push
push
movsl
add
inc
and
cld
out
insb
in
cld
pop
hlt
xor
stos
mov
or
xchg
loope
ret
mov
cmp
dec
out
xlat
mov
push
xor
or
pusha
mov
insl
in
popf
push
pop
fstpl
jp
push
sbb
jns
cltd
subb
xor
add
dec
push
xchg
dec
sbb
push
xor
insl
sub
icebp
pop
jnp
xchg
aaa
ja
iret
push
shlb
fcoml
fcompl
cs
std
push
ja
popa
jns
das
add
adc
sub
sar
ja
or
or
test
repnz
mov
lea
inc
ret
add
popa
mov
gs
scas
dec
pop
lret
push
daa
das
push
jns
aam
jg
add
shrl
inc
je
lods
or
iret
add
sti
int3
jnp
sbb
rolb
sub
popa
pop
inc
out
divb
stos
insb
mov
xor
inc
fcmovnu
call
hlt
out
jb
mov
shrl
jo
js
adc
jmp
inc
addr16
jbe
lds
jns
and
jno
jecxz
or
or
stos
jmp
or
mov
sahf
dec
or
push
repz
addr16
push
adc
mov
pop
mov
mov
jge
sbb
xchg
lret
es
mov
dec
aad
addr16
lcall
pop
xor
or
adc
mov
out
testl
sahf
pop
adc
bound
add
push
push
mov
jbe
sub
lods
mov
out
mov
test
rorb
add
fcomps
cltd
icebp
fsubs
mov
or
sbb
rclb
inc
std
test
rclb
fisttps
dec
out
cmpsl
xchg
fsts
test
mov
mov
push
fwait
outsl
pop
sahf
pop
xlat
pop
mov
das
push
cwtl
gs
xor
sub
mov
cmp
out
loop
xchg
mov
sub
and
das
xchg
int
add
dec
fbstp
mov
mov
cmpsl
mov
imul
lret
xchg
lods
movsb
adc
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
jmp
mov
loop
xchg
xchg
ds
rcr
dec
cmpsb
inc
lods
imul
imul
imul
addr16
sub
mulb
push
dec
clc
shll
orl
mov
ret
sub
push
dec
stos
movsl
leave
mov
xor
loope
lock
addr16
lret
fsubrl
inc
xchg
lahf
and
inc
daa
aam
stos
mov
mov
pop
shl
inc
out
sub
sbb
jmp
mov
cmpsb
xchg
sti
xor
or
lret
fsubrl
fistps
jmp
add
inc
jmp
jle
xor
sub
ret
dec
out
xchg
lods
sub
test
shl
mov
dec
mov
jae
lret
dec
cmpsb
inc
in
imul
fisubl
imul
bound
mov
imul
insb
imul
lret
mov
imul
mov
imul
lea
mov
inc
imul
lret
mov
imul
popf
push
xor
loop
rcr
mov
imul
imul
imul
imul
imul
imul
imul
imul
imul
scas
mov
bound
ss
rorb
dec
cmpsb
inc
in
imul
dec
imul
test
in
or
es
rcr
dec
cmpsb
inc
xor
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
bound
es
rcr
in
jl
mov
or
xor
in
xor
aas
sub
pusha
insb
mov
push
pop
adc
mov
cmp
adc
cmp
push
inc
js
push
and
jg
xor
outsb
add
jnp
int
adcl
call
arpl
mov
outsl
push
and
iret
sub
insb
dec
call
pop
mov
sarl
lock
jg
mov
pop
pushf
js
int3
lret
fucomi
int
or
mov
push
dec
pusha
cmp
and
xor
sub
jmp
xchg
xor
mov
jmp
add
xchg
mov
add
pop
inc
mov
sbb
push
mov
push
add
test
or
jnp
push
into
jl
rclb
mov
lcall
pop
enter
sbb
cmp
call
sbb
fnstsw
inc
loopne
orb
jno
aam
std
movsl
jle
adc
xor
push
aad
in
adc
out
sbb
and
xlat
movsl
ret
iret
xchg
jb
rcll
mov
pop
lahf
xor
or
sub
push
inc
inc
adcl
and
and
iret
test
or
std
cmovge
call
sbb
inc
add
hlt
push
push
shll
mov
cmpsl
pusha
aad
adc
and
sbb
aam
stos
insl
dec
inc
lea
mov
jmp
arpl
nop
inc
dec
pop
daa
pop
cmp
mov
sbb
scas
mov
ljmp
loope
mov
mov
jb
in
mov
push
mov
icebp
jo
call
arpl
push
ret
jae
pop
xchg
and
fs
mov
pop
das
adc
and
loop
das
in
cmpl
cmp
or
mov
daa
jnp
movsl
mov
xchg
xchg
cmp
xor
cmp
shl
sbb
jbe
test
mov
movsb
clc
sbb
mov
stc
rcr
ret
or
sbb
sbb
rclb
nop
lret
sahf
cwtl
mov
mov
push
pop
ja
orb
lods
clc
clc
lret
adc
inc
aas
xchg
sub
add
in
int
loope
inc
xchg
daa
add
test
ss
lods
sub
in
adcl
repnz
jb
jb
repnz
push
int3
pop
jmp
imul
ret
xor
jle
mov
fstpt
cli
outsb
inc
cwtl
out
and
xchg
mov
dec
push
xor
and
and
dec
cltd
fcmove
adc
sub
lahf
loopne
add
jge
loop
jae
xor
lea
add
adc
and
cli
lods
out
or
out
and
xor
add
push
repz
test
fwait
loope
xor
in
jl
push
cmp
inc
out
fisubl
push
fcomps
pop
fwait
addr16
cs
push
dec
dec
clc
mov
inc
int3
cld
ljmp
loope
cmp
add
inc
leave
jnp
jg
testb
mov
mov
ss
mov
or
enter
push
int
cmp
lcall
repnz
push
sub
in
push
jb
pop
jp
test
das
ss
imul
add
out
dec
xchg
and
rcr
loope
lahf
lret
push
pop
mov
lods
mov
jo
and
cwtl
rorb
mov
pop
pushf
mov
cmpsl
pop
push
sbb
in
dec
xor
sub
ret
xchg
adc
sub
out
andb
popf
outsl
movsb
clc
dec
push
xchg
add
jl
notb
imulb
enter
mov
les
pop
out
inc
xor
fcom
outsb
and
push
sub
adc
test
sub
repnz
mov
inc
int
dec
sbb
or
jp
out
mov
fcmovnu
cmc
fdivl
rep
fdiv
inc
loop,pn
dec
in
cmp
cld
pop
stos
or
das
sub
dec
test
cmpsb
cmp
xchg
mov
sti
xor
mov
push
cmpsl
push
lret
aaa
xlat
mov
push
mov
xor
jno
mov
and
dec
pop
pop
jbe
pop
pop
sub
sub
out
notb
scas
movsl
jno
cmp
adc
mov
aaa
push
cmpsl
xchg
sub
dec
xchg
jge
mov
jno
subl
and
movsb
into
push
xlat
mov
fsubr
xor
decb
push
xchg
mov
mov
adc
adc
stc
lods
enter
adc
pop
push
sahf
jne
cld
mov
inc
sti
inc
loope
adc
pop
sbb
push
pop
jge
movsl
pusha
jnp
push
jne
orb
sar
in
jae
sbb
lahf
cmp
sub
or
mov
stos
jbe
jo
das
cmp
cmpsb
pop
sbb
pop
push
xchg
movsl
jl
lds
or
fimuls
mov
in
in
addr16
data16
mov
push
mov
pop
rcrb
cli
fcoml
cmc
rorl
adc
add
ljmp
cmp
push
push
fimuls
cmpsb
adc
je
jg
mov
hlt
mov
aam
xor
adc
jg
aad
fwait
out
clc
pop
shlb
mov
sbb
pop
mov
insb
hlt
or
sub
push
push
call
inc
push
mov
add
dec
mov
push
dec
iret
das
sti
push
aas
clc
jle
je
sub
cwtl
pop
mov
mulb
mov
and
mov
out
icebp
and
daa
cmc
jmp
jno
iret
cmp
dec
xor
push
sbb
icebp
pop
pop
push
xchg
fisttps
rclb
cmp
push
push
inc
neg
outsl
dec
inc
inc
mov
push
jns
cs
and
or
rorb
or
mov
inc
lahf
pop
in
call
xchg
test
and
xchg
nop
pushf
cli
mov
and
test
aas
cmp
add
pop
fisubrs
xor
mov
mov
mov
aad
adc
bnd
mov
mov
mov
cpuid
jg
jbe
push
xor
loope
xchg
and
cld
push
hlt
sbbl
sbb
dec
out
hlt
cmp
and
push
mov
jle
cli
sbb
loop
insl
cmpb
mov
mov
mov
pushf
jbe
out
pop
push
adc
sub
cs
mov
xor
jecxz
inc
pop
pmaxsw
mov
fs
dec
arpl
cmpl
mov
mov
cld
cmpsb
and
test
in
pop
es
fs
dec
sub
mov
or
dec
clc
ljmp
pop
xchg
hlt
inc
add
fcoms
inc
adc
cld
mov
stos
pop
outsb
push
sbb
cmp
lock
sarl
inc
shll
daa
popf
inc
sub
mov
jno
int
pop
pop
dec
arpl
mov
and
xchg
sub
pop
jns
xchg
dec
fldenv
je
dec
push
add
jp
insl
popa
movsl
adc
pushf
xchg
add
push
push
std
inc
inc
add
test
mov
dec
out
mov
and
pusha
jle
adc
in
xor
fisttpll
xor
or
inc
lock
cs
mov
lret
scas
sbb
sbb
inc
scas
shll
push
jmp
add
mov
mov
push
pusha
jle
dec
mov
add
jecxz
and
sbb
pushf
inc
pusha
add
adc
aas
pop
lds
and
pushf
and
insb
push
lods
in
dec
mov
les
push
cmp
into
lds
popl
mov
rcrl
dec
jae
sub
movsl
sbbl
std
imul
je
jecxz
or
jmp
mov
shr
sbb
ja
fcoml
aad
cmp
mov
cmp
into
sbb
add
fs
mull
in
aam
sbb
shrl
adc
pop
add
sub
jle
repz
dec
sbb
dec
in
xchg
pop
in
mov
int3
lret
fisttpl
dec
rorb
cs
jb
sub
lret
scas
negb
popa
pop
cltd
jle
cmp
imul
jae
shr
dec
out
test
add
push
les
sbb
dec
sbb
cwtl
scas
mov
mov
push
or
pop
and
add
pop
jg
mov
jae
inc
lds
out
sub
inc
xor
fildl
and
sub
push
mov
push
js
sbbb
xlat
adc
loope
addl
pop
dec
stos
notb
fwait
mov
mov
inc
push
push
xchg
dec
sub
or
shlb
adc
es
cltd
pop
fistl
cltd
out
sub
pop
mov
test
dec
mov
in
lcall
addb
mov
std
add
jno
stc
and
mov
cmp
add
mov
mov
cmp
pop
jle
pop
mov
jne
mov
cwtl
mov
mov
mov
pusha
aam
pop
icebp
and
pusha
out
cmp
test
das
cmpsl
push
inc
imul
mov
add
push
int3
imul
mov
sub
subl
int3
pop
mov
mov
das
in
and
jp
or
jg
fiaddl
std
pusha
out
cmpb
sbb
mov
int3
pop
sbb
lea
or
in
es
popf
mov
fwait
mov
push
pop
pop
jle
pop
add
pmulhw
xchg
pcmpeqd
cmp
lea
mov
or
push
inc
and
cmpsb
mov
fs
xlat
pop
cmp
fnstcw
je
push
sub
jae
rclb
leave
rcrb
pop
incl
and
and
inc
inc
mov
add
out
inc
mov
and
roll
test
popf
in
test
jecxz
psllq
and
mov
sub
push
popf
push
mul
aas
movsb
movsl
xchg
into
cltd
and
cmpsb
and
out
jns
adc
cli
scas
xchg
hlt
je
addl
cmpsl
push
aas
inc
test
sub
push
mov
aas
sbb
sbb
mov
imul
mov
xchg
sbbb
inc
fldenv
jbe
jg
inc
mov
adc
std
push
push
cmp
xor
xlat
mov
sub
jne
loop
jne
shrl
into
and
pop
orl
lea
hlt
and
lea
and
loopne
or
pop
sbb
mov
fiadds
in
xor
dec
adc
or
xchg
hlt
mov
in
xchg
inc
mov
mov
xor
adc
das
inc
popa
gs
mov
into
cmp
out
addl
jo
mov
xor
std
daa
int
mov
sub
mov
sub
outsb
mov
enter
mov
testl
push
inc
push
push
mov
fiaddl
out
inc
rorb
andl
and
test
lods
xchg
or
inc
es
mov
lods
mov
call
xlat
test
xorl
mov
mov
and
int3
pusha
add
pop
dec
dec
icebp
movsb
pop
adc
dec
adc
inc
cld
xchg
mov
fbstp
in
push
les
rcrb
mov
sub
fistps
and
int
mov
out
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
