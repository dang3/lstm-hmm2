pop
or
fdiv
inc
pop
push
adc
pop
sbb
dec
add
inc
decb
xchg
call
mov
or
push
cld
xchg
push
mov
aam
cmp
or
in
adc
idivb
cmpsb
mov
cli
pop
leave
imul
ljmp
jb
cmp
je
fisttps
pop
in
or
out
or
in
and
test
pop
mov
sub
ds
push
mov
std
jb
push
mov
xor
mov
imull
jle
mov
aad
shr
dec
adcb
inc
inc
test
xor
loopne
sub
fdivrs
ret
sub
sub
lods
dec
push
jne
dec
jmp
or
out
add
xor
fidivl
rcll
ss
dec
aam
mov
mov
push
iret
xchg
enter
and
sbb
mov
jno
sub
imul
and
xor
cmp
pop
lcall
nop
mov
or
dec
cmovs
mov
ds
loop
icebp
xlat
mov
rcrb
jnp
enter
jb
and
out
xor
push
push
imul
jno
push
stos
in
push
jg
add
out
mov
ljmp
cmp
lods
inc
icebp
out
fisttps
sbb
mov
repnz
daa
cmp
daa
push
jno
push
xor
mov
insb
rcll
dec
mov
mov
lds
fdivl
cltd
push
aam
push
dec
mov
push
mov
xlat
inc
and
fildll
stos
sbb
jecxz
jecxz,pt
popa
out
ds
cmp
jmp
stos
mov
xlat
loop
fbstp
and
mov
test
add
cmp
cmp
xor
addr16
rcll
inc
mov
or
jae
jl
jb
rclb
cmpsl
sub
mov
xor
mov
ljmp
jbe
je
mov
cwtl
sub
adc
shlb
mov
mov
negb
cmpb
sbb
adc
aam
test
shll
bound
cmc
test
xchg
and
movsb
add
push
or
je
sbb
mov
cmp
into
inc
inc
outsl
pop
ror
cmpsl
fstpl
push
mov
pop
lret
push
out
bound
sub
mov
in
or
movsl
hlt
fwait
jo
mov
or
mov
sub
push
cmpl
pop
int3
dec
lret
cmp
and
dec
sbb
xor
bound
scas
sub
or
das
outsl
filds
adc
add
leave
or
fld
cmpsb
add
shrb
pop
ljmp
sahf
in
aaa
jg
xorb
xchg
sbb
aam
test
dec
imul
lock
icebp
into
dec
xchg
sbb
mov
rolb
outsb
int
mov
push
ret
dec
pop
sbb
cmp
cmp
jecxz
jb
jae
add
test
sub
fidivrl
cli
jmp
inc
push
loop
or
aad
shlb
adcb
mov
das
mov
stos
or
cli
fmul
mov
mov
pop
xlat
add
mov
sbb
mov
subl
ret
inc
fsubrl
cmp
pusha
fstpl
into
and
shlb
es
cmc
mov
and
scas
jg
in
mov
fsubrs
cltd
fcmovne
dec
push
and
xchg
push
pop
je
mov
out
sbb
add
clc
jb
push
or
hlt
sti
inc
lds
or
xor
out
and
test
dec
or
jo
psubsb
inc
pusha
movsb
jmp
out
jmp
push
sbb
fistl
sbb
and
or
lods
pushaw
adc
cwtl
push
and
scas
ds
mov
sub
and
xchg
mov
hlt
mov
lock
jo
inc
movsb
add
or
ss
jl
ficoml
mov
cmp
sub
in
adc
and
aaa
inc
ljmp
or
lock
add
sahf
xchg
lock
pop
jb
inc
push
testl
icebp
pcmpgtb
data16
pop
jbe
je
push
xor
fisttpl
outsb
mov
mov
mov
sbb
jns
gs
pop
outsl
divb
mov
adc
ljmp
adc
outsl
in
ds
enter
pop
test
mov
jne
push
movsl
iret
add
xor
push
cmp
cmp
leave
dec
call
push
pop
mov
push
xchg
add
lcall
test
jno
inc
mov
gs
add
outsl
jae
dec
cld
sbb
lods
hlt
enter
cmpsl
outsb
mov
or
inc
out
push
pop
pop
fisubs
push
arpl
popa
fs
mov
leave
pop
or
movsl
sub
cltd
hlt
scas
gs
negl
jg
pop
xlat
dec
adc
enter
out
cld
aad
ds
notl
in
xchg
dec
pop
shrb
xor
jmp
mov
icebp
sbb
mov
xchg
pop
fsubr
out
lahf
xor
out
pop
lahf
std
fstpt
adc
and
and
dec
add
int3
pushl
mov
in
add
into
sbb
inc
pushl
adc
pop
and
iret
rolb
jbe
mov
cmp
add
sbb
mov
xchg
loopne
jl
rcr
mov
xor
adcb
mov
sbb
rcrl
mov
cltd
add
nop
enter
scas
movl
and
push
push
test
inc
popa
lds
xchg
movl
js
or
xlat
mov
mov
movsb
adc
shll
jge
mov
mov
mov
xchg
movsl
inc
std
gs
es
in
push
cs
aad
repnz
and
lock
push
inc
xchg
in
mov
cs
movsb
fwait
mov
repnz
out
mov
sahf
xor
jg
mov
andl
shl
mov
mov
nop
add
jmp
and
sbb
xchg
xor
jnp
mov
fwait
enter
mov
iret
xchg
iret
sbb
nop
outsl
push
rolb
arpl
ds
fldcw
imul
fsubr
xor
cld
loop
pop
mov
lcall
or
mov
lock
rcll
test
lods
sbb
imul
push
rcll
cmp
pop
dec
jg
cmpsl
lds
pusha
imull
ljmp
mov
xchg
rcl
lahf
rorl
push
fdivrs
ljmp
int
xlat
xchg
dec
ret
sub
push
lods
lcall
push
sub
mov
add
lods
pop
inc
push
roll
loope
push
jns
clc
cmpsl
je,pt
xorb
and
roll
mov
in
pop
xchg
pusha
insl
mov
push
sbb
xchg
aad
dec
movsl
sub
decb
sub
lret
mov
mov
jo
push
pop
loopne
mov
xchg
lcall
mov
jp
fwait
xor
mull
pop
lcall
fisttpll
cmp
jnp
leave
push
or
jle
movsl
inc
dec
data16
icebp
cmp
in
pop
jae
dec
jnp
add
xchg
lcall
test
loope
addr16
jmp
xor
flds
dec
rcll
mov
test
cltd
and
jne
jbe
push
lcall
testb
jae
icebp
jnp
in
mov
dec
xor
dec
or
jo
clc
sarb
mov
sub
out
xchg
sbb
mov
or
lret
pop
repnz
xor
ja
jg
int
fwait
mov
or
movsl
sbb
add
shlb
fldenv
push
negb
mov
adc
sub
add
cs
sti
push
add
mov
aam
out
lock
jb
push
push
aam
inc
dec
arpl
sbb
inc
clc
popa
push
mov
cmp
mov
mov
call
aaa
fstpl
sub
add
lea
aad
mov
lds
adc
js
jae
xchg
add
sti
fistl
rcll
js
jbe
sub
add
inc
cmp
ja
fcomi
int
mov
push
push
xabort
addr16
out
inc
or
cs
push
stos
push
push
pop
push
into
and
nopl
push
das
push
push
subl
add
data16
aam
push
mov
inc
int
popa
and
ss
jle
xor
mov
push
or
mov
popa
and
xor
push
pop
cmpl
das
xlat
sti
mov
sub
mov
mov
nop
push
push
and
and
lcall
add
je
adc
push
int
in
filds
dec
icebp
shl
or
push
loop
push
mov
pop
inc
mov
call
add
or
inc
jle
push
int3
aaa
ja
add
pop
sbb
mov
movsl
int
push
and
push
shrl
adc
mov
sub
movl
icebp
pop
jge
mov
or
pop
and
mov
xor
lahf
mov
cmc
sbb
les
xor
jle
pop
push
pusha
repz
mov
jecxz
fimuls
dec
mov
sar
fwait
or
ja
cwtl
pop
mov
enter
ret
ret
jae
or
cwtl
ja
mov
mov
and
dec
xor
arpl
jp
or
test
hlt
xchg
inc
inc
pushf
in
popa
scas
sub
push
push
stos
mov
addr16
loopne
or
mov
mov
mov
inc
ljmp
fcmovnu
repnz
mov
lods
pusha
ficoml
lea
das
dec
in
and
mov
das
insl
arpl
loop
inc
cmpsl
int3
xchg
iret
ret
or
adc
cld
ss
cmp
adc
sub
cmpl
and
jle
add
outsb
xchg
jnp
imul
addl
jp
jp
lea
inc
pop
sub
cmp
or
cmpsb
popf
adc
fincstp
mov
loope
mov
arpl
jbe
pusha
imul
and
rorb
int3
loopne
roll
lret
icebp
push
add
stos
mov
in
in
leave
inc
pop
popf
pop
shll
movsb
xor
add
subl
imulb
jg
aas
sahf
clc
and
repz
pop
int
push
push
cltd
inc
call
popa
jbe
sub
sbb
sbb
sub
pop
adc
mov
or
and
call
pop
popa
jmp
out
mov
lret
xchg
inc
nop
cmp
outsl
cmovb
dec
push
cmp
in
fcomip
shl
push
dec
mov
leave
lahf
loope
cmp
xor
jecxz
mov
leave
and
adc
addr16
cmc
movsb
cmpsb
lds
loop
scas
mov
rorl
push
pusha
or
cmp
dec
sub
pusha
xor
or
cwtl
ficoms
call
jnp
int3
sub
lea
mov
scas
fnsave
pop
or
enter
imull
stos
xor
push
ja
mov
xor
jae
fadd
fwait
and
fdivrs
mov
mov
rcll
jl
push
sbb
aas
clc
and
xor
cmp
mov
test
cs
xchg
dec
int
dec
mov
mov
pop
add
dec
jb
adc
jo
std
lahf
mov
test
adc
inc
xor
mov
stos
mov
call
lea
adc
lock
adcb
mulb
out
stc
mov
enter
jae
ficompl
xchg
pop
lods
jmp
inc
ds
push
movsl
cmpsl
mov
not
sbb
imul
pop
mov
inc
pushf
fistl
xchg
pop
push
pop
popf
insb
pop
cmp
out
push
adc
lahf
sub
orb
je
add
dec
fldcw
or
xchg
in
adc
add
idivl
jg
cmc
inc
repz
adc
push
inc
adc
add
push
or
add
rorb
pop
and
cmpsl
inc
ret
pop
sub
mov
or
stos
sbb
int3
std
mov
lahf
movl
dec
dec
ret
mov
in
addl
test
mov
lret
sbb
test
or
loopne
xchg
or
mov
mov
mov
or
add
outsb
and
arpl
loopne
mov
jg
fsub
lahf
sti
mov
icebp
aaa
push
inc
cmp
rcll
push
push
cmp
jl
out
movsl
lahf
inc
sbb
or
jnp
imul
mov
and
addb
mov
or
rolb
imul
cs
push
iret
and
ljmp
pushf
inc
jno
push
aaa
enter
adc
leave
std
test
sub
and
and
aas
ss
daa
xchg
and
cmp
outsl
sub
xlat
inc
dec
outsw
mov
divb
loop
add
xchg
test
mov
repnz
or
je
stos
xor
test
mov
sar
pusha
mov
adc
jl
dec
movb
add
pop
add
fmuls
test
push
pop
fscale
mov
cltd
dec
add
fcomps
dec
push
mov
call
jo
xorl
mov
test
xchg
addb
sub
pop
adc
pop
jno
cwtl
cld
sarl
jb
jnp
cmpsl
enter
in
popa
cld
xor
sub
sbb
cmp
in
das
insb
repnz
push
mov
pop
fstpt
jo
xor
movsl
shlb
lcall
dec
into
in
lahf
out
sub
ret
pop
jo
mov
mov
lret
fisttps
add
dec
lock
ds
adc
inc
stos
xlat
push
lret
arpl
es
adc
push
js
in
pop
loope
popa
cmc
mov
movsl
fwait
out
adc
xor
mov
jle
push
push
sarb
cld
hlt
mov
mov
dec
jb
arpl
in
insb
or
pop
jle
xor
add
cmp
lds
fsubrs
jno
jbe
jp
add
sbb
gs
loope
cli
mov
je
fs
and
cli
or
mov
push
jne
insb
or
fcompl
push
addr16
mov
scas
add
mov
mov
pop
cmp
lods
sbb
divb
sbb
jecxz
sub
inc
xor
xor
daa
adc
xlat
mov
and
jle
mov
rclb
xor
inc
adc
cwtl
adc
and
cmp
rcll
add
ljmp
mov
sub
push
mov
and
or
sub
jp
adc
xlat
mov
jl
xchg
mov
das
les
scas
inc
sti
sbb
gs
jg
jo
out
push
jb
mov
sarb
mov
fnstsw
mov
push
pop
mov
shlb
lahf
std
sbb
stc
sbb
das
lea
jg
stc
sbb
mov
daa
faddl
cltd
push
sbb
rcrl
mov
push
fs
mov
and
pop
div
repnz
xchg
fstpt
mov
int
addr16
lea
pop
mov
mov
push
jl
cmp
add
out
jmp
test
test
ret
daa
sbb
dec
and
es
add
add
fmull
js
mov
push
loope
std
pusha
xor
hlt
nop
push
stos
aaa
xchg
ds
outsl
fs
iret
mov
mov
lea
mov
pop
mov
sbb
push
mov
lock
jne
das
add
dec
dec
addr16
fidivl
xchg
dec
jge
js
leave
lahf
inc
jmp
out
mov
fisubs
pop
mov
mov
out
clc
inc
mov
adc
mov
sub
inc
addb
mov
sbb
test
mov
push
jo
jl
in
lds
adc
push
mov
xor
xchg
push
xor
pop
das
shrl
mov
inc
jecxz
outsb
mov
jle
aaa
imul
cmp
scas
or
fildl
movsb
inc
pop
enter
lret
daa
mov
jge
cmpsb
jle
mov
xchg
loopne
pop
adc
sbb
rol
shrl
jae
adc
scas
mov
mov
imul
in
push
inc
out
dec
pop
or
fstl
cltd
mov
ds
testb
mov
div
lods
push
mov
out
adc
push
outsb
das
out
rcll
lret
lahf
xor
orl
out
and
dec
pop
test
pushf
pop
cmp
ds
mov
adc
imul
insl
pop
and
lcall
lahf
bound
dec
pop
cli
or
inc
ljmp
pop
mull
sbb
xchg
mov
out
lahf
test
pop
mov
popf
or
and
stos
js
push
imul
sub
jecxz
nop
add
scas
lahf
pop
cmp
push
mov
aas
adc
imul
cwtl
into
or
sar
jo
lahf
cmp
ds
mov
mov
adc
fs
in
cmp
rolb
cmp
das
dec
sub
mov
push
and
mov
and
mov
test
lret
aam
clc
add
inc
jae
xchg
mov
adc
adc
jl
lret
test
pop
sbb
xor
dec
fisubrs
mov
roll
dec
lea
jle
adc
inc
adc
cmp
lods
fs
push
pop
or
daa
pushf
aaa
pushf
mov
cmpsl
cs
sbb
addr16
test
dec
es
mov
mov
repnz
mov
jg
dec
out
dec
andb
pop
out
aaa
or
aas
xchg
mov
in
jecxz
push
sti
or
rclb
ficompl
lret
cmpsb
out
mov
adc
imul
ljmp
sub
inc
outsb
inc
push
neg
adc
adc
adc
inc
rcrl
mov
sahf
stos
es
jns
and
and
test
bound
jae
jb
xor
lret
xor
push
jno
imul
mov
pop
xchg
inc
xor
ret
jne
mov
dec
loope
jo
fistpl
das
push
scas
push
insb
pop
sub
jnp
jae
jns
int
scas
lds
and
leave
and
or
sub
jno
sarb
push
cmp
jge
test
lods
ljmp
xor
or
insl
adc
pop
mov
call
call
mov
xchg
xchg
inc
xchg
push
movsl
popf
push
leave
jo
pusha
xor
mov
scas
mov
or
push
fdivrs
mov
fcoms
add
jge
and
sbb
rcl
in
je
xchg
dec
jl
fucom
inc
data16
mov
fisubrl
rcrl
mov
incb
adc
add
cs
pushf
mov
pop
in
sub
or
aad
xlat
jno
test
idivl
sbb
dec
lret
loopne
ljmp
clc
clc
push
test
or
in
or
rcrb
push
enter
jmp
test
lcall
ss
jae
add
lret
xor
stos
lods
jl
test
cwtl
push
movsl
adc
cmp
or
mov
scas
dec
push
push
dec
ss
ja
pop
inc
loopne
fsubp
pop
pop
pop
mov
movb
mov
pop
fsubl
cmp
jmp
mov
les
sub
popa
daa
enter
push
fisttps
mov
sub
gs
lcall
pop
mov
movsb
jns
or
popaw
ret
in
or
out
adc
or
sbbb
dec
dec
data16
and
mov
lret
int
dec
adc
movsl
test
sub
sbb
aam
cs
xor
int
mov
negb
push
or
lcall
xor
fistpl
movsl
cmpsl
and
mov
jns
push
mov
les
cmpl
adc
jbe
mov
ljmp
ljmp
jnp
insl
aam
jge
call
pop
lods
jno
jecxz
out
mov
sahf
push
xchg
xor
mov
lock
and
or
rsqrtps
mov
fiadds
pop
or
in
xor
xor
xor
adc
aam
xchg
sub
mov
dec
mov
push
stc
loop
push
popf
mov
sub
cmpb
andb
lcall
xchg
push
clc
ret
add
mov
lahf
cmp
inc
dec
mov
lods
clc
test
lret
out
mov
mov
cmp
add
js
loope
nop
test
jmp
loopne
push
mov
mov
sub
push
or
cld
fdiv
add
test
stc
repnz
ss
or
adc
pslld
pop
iret
or
inc
add
pop
out
in
or
in
lods
mov
jne
xlat
scas
pop
cs
xchg
push
cli
sbb
push
pop
inc
repnz
add
popf
negb
and
shlb
shl
adc
push
fnsave
pop
sub
ja
les
testl
mov
divb
push
dec
cwtl
rcrb
cmp
fwait
xor
adc
jp
repnz
std
mov
push
mov
pop
nop
and
xchg
dec
data16
jp
cwtl
cmpsl
repz
jecxz
fisttpl
sub
jo
adc
xor
mov
aas
cltd
lret
into
sbb
push
out
xchg
or
repz
roll
pop
mov
xor
sub
mov
into
inc
sub
push
in
push
cld
sbb
xor
icebp
ss
mov
jge
in
out
sub
dec
cwtl
rcl
mov
xchg
insb
outsb
bnd
push
mov
pop
jl
int3
push
inc
subl
dec
jmp
int3
jae
aad
adc
jnp
ja
push
pushf
repnz
aam
or
fisubl
xor
pop
mov
fmuls
repz
mov
nop
dec
pop
hlt
sub
mov
test
push
jbe
int3
fsts
test
loopne
icebp
push
lahf
mov
dec
call
adc
dec
mov
hlt
shll
dec
xor
das
scas
push
sarb
sub
inc
hlt
or
loope
lods
in
lsl
mov
lret
jp
pop
pop
movsl
loope
out
lcall
xor
xchg
xor
push
push
mov
pop
pop
addr16
adc
scas
mov
pop
cmpsb
mov
pop
add
add
push
addr16
lods
cmp
adc
jns
lret
inc
loopne
add
lock
lret
xor
sar
rclb
sbb
insl
sbb
out
inc
sub
dec
push
loopne
mov
divl
xor
or
mov
xchg
inc
inc
and
sbb
movl
jnp
push
and
sbb
adc
imul
mov
xchg
loopne
jmp
jne
shl
push
cs
add
shll
push
gs
push
add
add
aam
cmpsl
pop
pop
mov
inc
inc
idivb
arpl
in
scas
inc
push
pop
shrl
out
loope
jae
cmp
and
fwait
push
dec
push
imul
out
jp
into
je
mov
sbb
in
or
cli
test
aaa
sbb
daa
lds
dec
pusha
jb
data16
xchg
push
and
dec
sub
les
fnstenv
lods
loope
es
xchg
out
cmp
xchg
repnz
push
adc
cltd
hlt
test
out
inc
and
imul
stos
xor
inc
jae
xchg
mov
sub
mov
cwtl
pop
inc
sbb
xchg
and
jge
sbb
push
nop
adc
pop
sahf
and
fisubrs
adc
sbb
mov
cwtl
loope
mov
fldt
mov
push
les
sbb
mov
xchg
and
mov
pop
dec
stos
lcall
jp
mov
pop
jno
inc
sahf
in
sub
rcll
sub
pop
jbe
jmp
pop
nop
gs
cwtl
addl
arpl
sub
gs
mov
or
inc
or
mov
dec
push
jno
pop
dec
push
ds
enter
inc
sub
and
rclb
adc
jg
ficompl
rcl
movsb
sbb
push
mov
jge
pusha
pop
mov
xlat
xchg
jle
adc
dec
sbb
movsl
adc
cltd
xchg
adc
in
imul
jg
and
aad
mov
hlt
jge
out
adc
cmp
pop
lock
cli
cmp
add
jg
sbbl
das
fs
leave
arpl
push
stos
insl
or
cmp
std
mov
lret
or
fnstcw
fisubl
pop
stos
mov
clc
adc
scas
ja
ja
xchg
xchg
adc
mov
add
jne
rcrb
fcomps
cmp
fildll
cmpsb
cmpb
cmp
out
pop
add
imul
jne
jle
cmp
adc
push
sbb
bound
fdiv
inc
xchg
fcomps
xor
scas
into
sahf
pop
cmp
mov
dec
inc
stos
lret
push
dec
out
lock
sbb
jo
imul
iret
mov
in
jp
jl
add
out
jmp
ret
sub
imul
jno
insl
das
aad
cltd
mov
push
add
sahf
mov
and
xor
sbb
pop
jns
mov
inc
aam
adc
sub
fwait
adc
push
insl
push
dec
imul
pop
push
pop
mov
jle
dec
pop
push
inc
fistl
lahf
iret
dec
add
sarl
xor
dec
jl
mov
aam
in
ss
mov
sbbb
cli
std
push
ficoms
fistpll
movsb
pop
ja
dec
std
mov
mov
inc
sub
cmpsl
fwait
jno
jmp
push
push
lahf
cs
xchg
push
cmp
insl
loop
loopne
loop
xor
lods
push
repnz
cli
sbb
fbld
stos
sub
addr16
js
mov
sbb
push
iret
inc
inc
push
mov
fstpl
or
repnz
xchg
rcll
xchg
jg
je
out
stc
mov
fucomi
shrl
cmp
jbe
es
or
lahf
nop
dec
add
scas
cmp
and
ds
sub
popf
mov
push
sub
out
std
in
inc
adc
jbe
ljmp
pop
je
imul
inc
imul
add
jle
cmc
or
addr16
push
mov
dec
out
xchg
in
aam
mov
repnz
pop
in
ja
add
adc
push
hlt
sub
aas
ljmp
add
push
popf
pop
lahf
scas
xor
xor
xor
or
dec
cltd
mov
lock
sarb
mov
xor
leave
or
insb
scas
inc
sub
xor
cmp
and
insb
loopne
push
mov
stc
rcrb
ja
sbb
mov
pushf
sbb
add
mov
push
xchg
jbe
cmpsl
dec
int3
add
in
out
sbb
add
repz
aam
sub
mov
and
inc
sub
adc
sub
loope
mov
test
arpl
inc
cld
ja
sahf
rcll
xor
dec
mulb
lea
xchg
push
jno
mov
bound
fldl
adc
pop
popf
adc
and
xchg
mov
mov
ret
ss
pop
ja
sub
ljmp
dec
repz
push
repz
push
inc
popa
mov
sti
scas
fs
lret
cmp
stos
inc
cmp
jns
mov
mov
int3
or
movsb
data16
mov
or
pop
cmpl
je
pop
shl
jecxz
and
das
and
jg
cmpsl
addb
rorl
or
adc
lods
mov
dec
mov
adc
subb
mov
movsb
pushf
add
lods
out
es
xor
or
jle
dec
add
out
and
pop
push
jae
ljmp
popa
je
fldenv
cwtl
outsl
sbb
hlt
push
pop
ljmp
sbb
lahf
cmp
hlt
cmpsl
fsubs
inc
mull
cwtl
inc
fdivl
jle
test
test
ss
cmpsb
adc
pusha
mov
scas
outsl
sbb
or
call
imul
mov
fnsave
push
ds
incb
xchg
pushl
inc
mov
fldenv
jecxz
decl
mov
ror
aam
pushf
fiadds
mov
jl
and
sub
xlat
fcomi
xlat
mov
sub
aam
mov
dec
not
adc
xchg
cltd
sbb
sar
test
mov
lds
sbb
lods
jnp
sub
xor
push
stos
sub
push
imul
pop
das
mov
fs
lock
inc
sub
mov
jnp
push
jno
test
xchg
jmp
pop
aad
xchg
adcl
push
push
cmp
xor
cmp
movzbl
pusha
pop
push
test
adc
rclb
xchg
pop
loop
lock
pop
aaa
popl
cmp
xchg
pop
xchg
sub
adc
test
nop
pop
fsubs
sbbb
popf
rorb
repnz
setg
cmp
xor
adc
cmpsl
jge
adc
lret
push
aam
jl
pop
jp
and
add
call
stos
cld
js
test
pop
std
push
outsb
dec
adc
add
popf
insb
mov
add
pop
cmp
sub
mov
test
bound
xor
sar
test
call
and
sub
pop
xchg
jmp
fmuls
sti
inc
or
sub
or
pop
jge
jae
lret
or
add
faddl
imul
movsl
icebp
push
cltd
divl
aas
in
pop
movsl
and
sub
xchg
gs
outsb
rclb
and
sub
sbb
test
or
jbe
xor
jno
jl
cmp
mov
jl
push
xchg
dec
pop
out
mov
cld
nop
adc
lods
or
push
jecxz
repz
aad
out
mov
lret
movsl
aad
mov
jbe
xor
ljmp
or
fsubrs
dec
sbb
and
inc
test
mov
jbe
jp
mov
sbb
mov
jne
ljmp
in
or
xor
inc
incb
mov
pusha
int3
fistl
ja
sahf
sahf
jns
gs
lock
shl
arpl
lock
aam
loopne
xchg
nop
and
lcall
cli
sub
popf
adc
cmpsl
mov
sbb
adc
je
insb
or
xchg
add
jl
jmp
aad
pop
xchg
inc
pop
pushf
sbb
push
sahf
sahf
xchg
dec
sub
jno
insb
xor
cwtl
mov
jnp
adc
sbb
repnz
sbb
xchg
mov
sub
or
sti
mov
ja
pop
outsl
enter
outsb
jnp
and
jne
and
dec
stc
sub
movsb
ljmp
sub
call
pushf
sbb
repz
mov
adc
and
pusha
mov
inc
test
push
inc
or
inc
mov
clc
jnp
insl
cmp
loop
mov
icebp
testb
add
aaa
test
xchg
ss
les
sub
jle
repnz
testb
xchg
ja
scas
loope
cld
add
sub
adc
in
test
loope
jb
hlt
frstor
pop
outsb
popf
dec
jle
jl
iret
add
pop
mov
add
and
push
enter
adc
mov
incl
das
mov
mov
jl
daa
fisubs
aam
insl
pop
js
in
rol
orl
lahf
ficoml
pop
subl
shrb
imul
ret
or
cmpsb
dec
inc
das
inc
sub
or
cld
push
popa
xor
dec
mov
mov
sub
fildll
out
js
add
pop
rorl
rcrl
aas
mov
jae
sarl
and
cmp
xor
lock
pop
add
jnp
xchg
and
fstps
mov
sbb
push
ret
ds
mov
into
addl
inc
sbb
push
xchg
cmpsl
test
adc
and
dec
adc
jns
cmp
fwait
mov
push
adc
adc
test
jg
ret
call
dec
ret
dec
mov
test
in
cwtl
jle
pop
xchg
mov
addl
sub
push
and
and
jle
xchg
outsb
das
popf
lds
jbe
popf
pop
pop
fnstcw
jbe
insl
lea
sbb
add
rolb
cli
dec
push
mov
mov
xor
adc
ret
and
adc
out
ljmp
aaa
push
push
xchg
lods
adc
xchg
jne
fdivrl
push
out
xor
les
out
and
adc
dec
test
inc
fbstp
pop
push
xor
push
mov
xor
sub
fucom
es
hlt
dec
push
shlb
sahf
lds
rclb
enter
push
gs
jb
jns
push
sub
inc
rcr
repnz
dec
pop
gs
fnstenv
pop
ds
mov
int3
jmp
leave
in
imul
or
mov
cmp
ja
add
jae
test
lods
pop
cs
sub
cld
cmpsl
mov
es
lcall
jo
mov
imul
leave
dec
scas
cmpsl
sub
pop
in
or
jbe
test
stc
fldt
push
and
outsb
and
test
xchg
insl
in
mov
repnz
cwtl
cmp
dec
and
dec
cmp
scas
sarl
mov
call
cltd
hlt
pusha
cwtl
or
adc
stos
lcall
adc
in
mov
ficoms
inc
pop
sarl
rorl
imul
movb
testb
sarb
jmp
adc
adc
mov
bound
mov
push
push
ret
out
sub
js
mov
iret
aaa
mov
int
popf
loopne
pop
dec
ds
outsl
out
jbe
inc
outsl
mov
cs
fucom
subps
jbe
sub
notl
push
clc
xchg
sbb
retw
cmpsb
testb
cld
xchg
jp
jg
cmp
iret
mov
jg
insb
adc
jp
call
sub
mov
or
xor
sub
jecxz
pop
and
xor
test
test
test
shlb
cmp
movsb
out
mov
shll
mov
pop
cmc
cmp
cltd
dec
lret
lret
sub
gs
lds
cmc
mov
dec
pop
lock
and
or
rolb
and
push
mov
dec
fwait
inc
or
adc
or
mov
dec
fildll
insb
cli
stos
mov
into
pop
ficompl
push
jl
fmul
xchg
shrb
shll
and
clc
movsb
dec
arpl
xchg
xchg
adc
sbb
add
cwtl
outsb
push
dec
scas
cmp
pusha
pushf
outsb
inc
aad
xchg
es
mov
xor
cmp
aas
loopne
cmp
lret
outsl
jge
xor
aad
jnp
gs
imul
sbbl
ret
inc
xchg
mov
mov
bound
adc
mov
fucomp
daa
scas
mov
inc
repz
movsb
mov
in
inc
adc
mov
sti
test
push
roll
pop
xchg
push
out
fldl
and
pop
jnp
lcall
ss
fidivrs
adc
xor
into
jns
dec
sbb
std
mov
cs
add
push
sahf
dec
ss
mov
push
mov
out
lods
dec
js
pop
dec
sbb
add
mov
inc
mov
mov
push
xor
push
sbb
pop
inc
test
inc
mov
mov
sbb
sahf
push
inc
cmc
add
cmp
jnp
fchs
stc
sbb
lds
add
js
xchg
in
cmp
inc
leave
cwtl
push
cltd
pop
out
iret
xchg
add
daa
cmpsb
popa
mov
mov
push
hlt
sti
xchg
cs
jge
xor
aam
xchg
in
cmp
push
or
jb
lret
xchg
andb
mov
xchg
shrb
adc
rolb
and
mov
mov
je
cmp
adc
mov
mov
cld
jo
sti
ds
push
ret
adc
xor
adc
sbb
inc
dec
imul
loop
xchg
pop
add
adc
add
mov
fnstsw
jns
dec
scas
sbb
imul
gs
cli
inc
or
xchg
pusha
adc
out
sub
mov
insb
pop
dec
dec
mov
dec
dec
jp
int
xchg
popf
push
cmp
adc
sarb
add
lds
dec
inc
mov
lret
maskmovq
divl
cli
pop
outsb
or
mov
inc
lods
pop
stos
dec
fs
or
pop
ret
repnz
push
adc
shlb
ja
icebp
inc
adc
ficoml
call
mov
je
inc
sbb
sub
outsl
jno
pop
push
shlb
sbb
cltd
mov
shrl
stos
addr16
addr16
or
popf
and
mov
imul
sbb
xchg
fdivrl
and
aam
fwait
xchg
clc
push
cltd
xchg
scas
call
push
and
xchg
lcall
ret
pusha
mov
mov
scas
test
push
add
mov
lea
adc
sub
sub
bound
das
insb
xor
mov
rorb
divl
jecxz
jg
dec
cmc
mov
push
in
js
lcall
aaa
pop
ret
insb
dec
imul
jmp
xor
xchg
jg
jmp
js
es
jnp
scas
mov
push
sahf
fsubrs
sbb
fst
xor
hlt
push
sbb
in
mov
outsb
sbb
cmpsl
lret
add
mov
iret
es
rcrl
sbb
ret
hlt
cmp
out
inc
cmp
xor
sbb
inc
xchg
inc
leave
into
pop
sahf
inc
lods
push
iret
int3
shl
push
jp
push
fbstp
mov
sahf
mov
fwait
ljmp
loope
roll
jne
int3
out
imul
adc
xchg
lods
adc
pop
push
sarl
mov
pop
xchg
cltd
popa
mov
cmp
daa
add
push
sub
lds
aad
shll
test
pop
sub
mov
lahf
int3
iret
jb
hlt
loop
adc
xchg
dec
repz
push
jp
lods
insl
lock
out
pop
jp
push
lds
mov
ret
jp
add
jg
out
add
mov
cwtl
jns
loop
ret
shlb
ljmp
jmp
out
add
in
ds
aam
xor
js
mov
pop
pusha
or
push
xchg
sub
imul
mov
jno
xchg
sbb
inc
or
aas
mov
jb
mov
jae
jge
or
cld
pop
pop
out
mov
test
popa
repnz
mov
jl
shll
test
push
dec
fld
cmp
mov
mov
or
and
test
pop
ljmp
sarl
out
jae
fwait
jae
lds
mov
xchg
and
pop
ret
sbb
cltd
test
pusha
jle
in
mov
cmp
sbb
and
mov
repz
dec
push
lret
lods
xor
pop
imul
sub
mov
mov
fwait
cmc
mov
pusha
fdivrs
mov
dec
mov
cmc
clc
rcrb
xor
xchg
push
xor
or
xor
lods
jae
out
mov
aas
insb
fdivs
push
std
mov
inc
add
stc
add
fcmovb
mov
mov
and
jno
repnz
icebp
ds
xor
mov
and
inc
sbb
sbb
mov
cmp
aas
adc
push
repnz
iret
mov
int
add
pushf
lock
mov
stos
aad
stos
jbe
sub
or
data16
fcoml
vpshufd
test
cmpsb
push
jg
ficoml
sbb
scas
outsb
mov
adc
jg
sub
les
rorl
out
jmp
dec
pop
repnz
in
movntps
or
aas
scas
clc
xor
xchg
and
pop
sbb
mov
add
dec
adcl
incb
xor
outsl
ret
mov
mov
mov
test
aad
in
cmpsl
ljmp
push
clc
popa
mov
mov
loope
or
adc
aaa
and
xor
mov
push
cmpsl
or
out
jl
mov
icebp
fcmovnb
rdmsr
fdivl
add
daa
imulb
in
or
inc
inc
dec
scas
cmp
dec
xor
in
dec
or
mov
ficomps
pushf
dec
ss
push
dec
jne
jge
test
repnz
push
sti
fidivrs
loop
mov
sbb
pop
xchg
stc
mov
mov
mov
inc
sub
popa
jnp
push
push
hlt
mov
lods
clc
push
inc
shrb
aas
test
xchg
sbb
sub
imul
popa
adc
jno
and
fprem1
fcomp
inc
xchg
sarl
adc
push
mov
fs
scas
cmp
addb
inc
gs
add
jae
ja
mov
mov
xchg
hlt
or
fdivrp
dec
jl
pop
xchg
lret
nop
xor
mov
jle
idivl
xchg
mov
test
fs
adc
cli
inc
rcrl
push
lret
fsubrl
cmpsb
pop
mov
adc
pop
in
clc
ret
push
jae
jbe
les
daa
rolb
fs
mov
pop
adc
dec
jns
jnp
in
jmp
dec
push
xchg
and
sti
ds
sti
popf
fisubrl
xchg
mov
add
in
jl
inc
dec
cli
xor
subb
lcall
fbstp
cmp
imul
aad
outsb
xor
pop
xor
mov
outsl
call
fildl
lock
pop
mov
roll
in
bound
jne
aas
lock
test
lock
popa
push
push
insl
mov
mov
xchg
loopne
push
mov
mov
sbb
push
sbb
call
dec
pop
call
dec
and
popa
cmc
add
adc
xchg
popf
in
push
mov
sub
leave
jo
pop
or
inc
push
addb
push
add
or
loope
pop
lret
cmpsb
adc
jnp
mov
push
addr16
ljmp
int3
movhlps
hlt
cmp
mov
test
sbb
push
jnp
std
iret
fdivrs
sub
in
insl
or
add
stc
sbb
hlt
xchg
adcb
push
stc
mov
movsl
sbbl
int
jecxz
jae
lds
ret
xor
int
cmp
or
ljmp
repz
mov
gs
jnp
mov
push
lret
push
hlt
jo
xchg
fisubs
fbstp
mov
dec
pop
sub
cli
movsl
lret
lds
cmp
int3
mov
nop
arpl
data16
jl
inc
sbb
fwait
or
jo
jp
xor
and
push
mov
loope
jne
push
jp
xor
in
addr16
sub
pop
xor
xorl
rclb
jle
rclb
lret
subl
cmp
es
mov
add
adc
mov
ret
push
aas
icebp
jnp
in
ret
movsb
mull
outsl
xor
lods
mov
mov
mov
pop
jle
pop
cmpsb
push
js
sub
outsb
movsl
jae
fbstp
loop
xor
movsb
insl
jno
ss
sub
es
xchg
push
lods
and
cs
and
loopne
add
push
das
xchg
jne
aam
pop
pop
dec
mov
mov
hlt
or
push
in
insl
mov
jno
sub
cltd
dec
jge
cmp
xor
ljmp
std
ja
jmp
pusha
jbe
jo
cmc
enter
or
mov
xchg
jmp
xor
stc
sbb
or
cmp
push
in
test
test
add
ret
cmpsl
and
call
cmp
xchg
subl
or
mov
xchg
and
cmpsb
pop
imul
shll
inc
push
jl
ret
mov
in
push
jnp
dec
insb
ret
out
into
sub
outsl
dec
fwait
sub
cmpsl
lods
jl
jb
or
xchg
popa
data16
lock
fcompl
jmp
mov
xor
and
scas
shr
shl
pop
int3
push
jb
lahf
and
incl
stos
lcall
pop
out
fimuls
jo
cs
inc
stc
cltd
aam
cmp
jae
js
xor
cmp
fists
mov
mov
jecxz
jae
cmpsb
adc
cmp
sub
stos
mov
les
rcrb
xchg
dec
xlat
mov
sub
ljmp
addr16
dec
std
xchg
lret
lds
hlt
addr16
inc
sbb
jae
mov
push
sub
les
jge
call
movsb
and
mov
xchg
icebp
mov
jb
xor
or
es
mov
xchg
and
cltd
sbb
stos
andl
icebp
and
int3
adc
insl
jns
pop
cmp
movsl
in
push
leave
fs
pop
repnz
icebp
cld
shrl
sub
jmp
dec
inc
sub
pop
in
call
pop
mov
dec
ds
mov
push
sbb
popa
dec
es
mov
sbb
xchg
mov
mov
iret
test
lds
js
stos
cltd
fisttpll
sarb
in
jl
sti
jb
inc
rcll
lret
scas
mov
mov
mov
and
xchg
ret
xchg
jbe
insb
dec
notb
push
movsb
and
sub
sub
pop
and
push
mov
test
idivb
pop
dec
fwait
sbb
lods
pushl
jge
js
adc
sub
pop
out
call
xchg
mov
arpl
push
xchg
out
mov
lcall
cmp
popf
aad
fnstcw
sub
adc
sahf
sbb
sub
in
push
popf
cltd
and
dec
mov
push
pop
scas
jg
cmp
mov
sahf
or
mov
out
cmp
mov
leave
fisubs
lret
push
je
call
out
in
sub
push
or
pusha
add
xlat
jle
sbb
inc
cmc
fisttpl
sbb
stos
popa
push
xchg
push
add
add
fs
popa
cmp
out
and
fadds
and
cmpsb
outsl
rcrl
fildl
movsl
ror
xchg
adc
inc
je
shlb
dec
stc
repnz
js
leave
lcall
aam
push
call
popa
pop
or
push
jno
jae
sub
mov
ret
inc
lret
xchg
enter
cs
inc
pop
loopne
in
sub
test
dec
jo
push
fstps
inc
mov
sub
sbb
mov
cmpsl
add
loopne
movsb
mov
push
cmp
flds
jo
and
xchg
sub
cli
aam
adcb
fdivr
mov
fistpll
call
xor
push
in
shr
push
aaa
rorb
mov
xchg
fwait
mov
push
into
clc
pushf
xor
cmp
sbb
xchg
stos
xchg
pop
push
push
dec
inc
ds
mov
dec
arpl
je
mov
lret
push
xor
xor
test
outsl
icebp
xor
dec
clc
jecxz
xor
loop
add
push
jo
pop
inc
stos
push
or
mov
xchg
icebp
loopne
ljmp
jne
or
sbb
cmpsl
xor
cmpsb
lock
test
test
idivl
cmp
lock
push
xchg
jbe
movsl
sbb
loop
gs
sahf
fnstsw
dec
into
push
test
notb
dec
adc
lret
imulb
adc
mov
or
adc
loop
add
inc
xchg
bnd
lret
mov
fdivr
fidivl
rcl
mov
aam
inc
mov
in
leave
fwait
outsb
loop
mov
call
add
mov
movsl
cwtl
out
jecxz
xor
sbb
add
fsubl
push
dec
popa
dec
jg
add
lret
inc
lret
jno
mov
fildl
sti
push
leave
pop
test
aam
hlt
ret
je
cmp
push
xchg
cli
js
fdivrl
jg
inc
daa
das
in
dec
notb
call
lock
imul
iret
scas
jns
sbb
mov
pop
loop
dec
movsb
enter
imul
aam
outsb
ljmp
lret
imul
pop
push
fcoms
rclb
push
hlt
fisubrl
adc
int
lret
xchg
out
movsb
sahf
push
fnsave
adc
and
dec
leave
gs
stos
je
cmp
cli
sti
push
xor
leave
mov
fstl
mov
add
pop
repnz
mov
xor
jae
or
outsb
adc
test
push
jb
xlat
push
push
cmpsl
decb
mov
jno
xor
loope
mov
mov
pop
lret
mov
hlt
dec
scas
dec
push
adc
lods
push
out
popf
cwtl
mul
pop
or
lea
add
mov
aaa
arpl
loope
xor
mov
andps
fmull
cmp
jecxz
sub
iret
dec
ss
mov
subb
imul
sbb
inc
repz
in
push
incl
mov
loopne
dec
dec
inc
sub
inc
aam
je
stos
cmp
mov
lcall
xor
orb
xor
pusha
mov
adc
out
dec
insb
test
adc
stos
pusha
pop
xchg
push
mov
aaa
std
lods
xchg
xchg
in
inc
in
js
lcall
mov
imul
or
inc
push
mov
pop
dec
test
pop
sub
push
push
daa
stos
add
daa
in
je
ret
popf
fsub
push
repnz
fimuls
pop
xor
insb
pop
loop
xchg
xor
enter
ljmp
xchg
ss
lods
pop
mov
cmpsb
adc
test
cmp
cli
movsl
sbb
les
jbe
ja
fisttps
test
xorl
adc
mov
icebp
mov
push
push
mov
kmovb
into
mov
movsb
mov
test
add
pusha
movsl
fs
cltd
xor
mov
flds
inc
shrl
pop
popa
mov
leave
dec
inc
dec
lock
enter
cmp
loopnew
mov
mov
aam
jecxz
sahf
mov
arpl
mov
pop
or
mov
or
dec
pushf
and
pop
rcr
xchg
push
daa
addr16
pop
in
daa
test
jl
cmp
xor
aam
popa
dec
xor
lcall
cmp
inc
sbb
test
imul
mov
ret
push
mov
add
pop
loopne
xchg
fimull
out
jo
xor
mov
cmpsl
leave
loope
call
dec
jge
rcrb
sbb
out
jp
repnz
and
cwtl
cmp
cmc
lret
dec
pop
lea
jl
pop
xor
pop
mov
lock
dec
xor
mov
movsb
movsb
out
fcmovu
test
fdivl
test
aaa
inc
jecxz
nop
jmp
jecxz
into
xchg
faddp
adc
push
xor
test
dec
push
lahf
inc
lcall
xchg
cmp
mov
push
filds
aad
and
ljmp
movsl
jg
mov
mov
hlt
sub
jbe
andl
pusha
call
dec
mov
enter
imul
add
xchg
xchg
decl
mov
add
fwait
and
inc
gs
loopne
test
es
loop
into
js
cli
shll
adc
idivl
ret
push
adcl
stos
xor
dec
jge
jae
cmp
jno
lret
xchg
mov
or
repz
cmp
sahf
ret
sbb
inc
ss
adc
xchg
inc
in
xor
nop
repz
jecxz
ficomps
sub
jb
rcrb
stos
xor
sbb
sub
adc
lahf
out
cwtl
cs
sbb
sub
mov
cltd
stos
inc
push
push
ds
mov
dec
pop
pushf
xor
nop
faddl
fidivrl
jb
mov
dec
or
dec
out
xor
xor
jmp
enter
das
rcr
xchg
jns
and
xchg
mov
mov
and
cmp
jno
and
add
mov
dec
or
mov
jmp
inc
aaa
sbb
aam
push
shl
cmpsl
in
in
sub
pop
pop
mov
cmc
or
scas
hlt
xor
xchg
cmpsl
aas
out
xchg
es
jge
lret
mov
call
stos
mov
xchg
pop
lahf
pop
popa
sub
adc
push
es
pop
xorb
loopne
mov
inc
push
arpl
pop
jmp
xchg
sub
adc
repz
fdivr
push
cs
testl
shrb
add
in
adc
cmpsl
mov
xchg
shr
mov
push
pop
gs
ret
in
sti
jo
popf
sub
cmp
out
xchg
ret
fstp
lods
xchg
fcmovbe
stos
cwtl
je
mov
fisubs
inc
mov
sub
mov
pop
loop
mov
rorb
pop
cltd
jne
push
or
into
sbb
fs
mov
js
pop
enter
xor
stos
inc
loop
pusha
push
add
enter
sbb
clc
xor
ss
dec
in
inc
fimull
fildl
test
push
mov
das
sbbb
imul
pop
jecxz
scas
imul
pop
scas
sub
shrl
jle
cmp
fmull
or
imul
and
mov
ds
inc
lds
cltd
cmp
push
mov
sbb
addl
dec
aam
adc
loope
loop
sbb
popa
mov
idivl
jp
iret
imul
mov
inc
cld
popf
insb
ds
lock
sub
dec
jb
inc
jbe
and
cmp
lret
call
movsb
mov
mov
enter
out
xor
ret
imul
nop
mov
push
es
pop
mov
jle
push
fstps
in
in
xor
fldenv
ss
cli
pop
xor
push
xchg
jb
xchg
sbb
cld
mov
fs
pop
add
icebp
and
xchg
in
xor
out
popa
xor
fistps
mov
mov
sub
pop
mov
rcrl
dec
clc
sti
xlat
dec
xchg
cmp
sub
mov
inc
sbbb
adc
lds
subl
xchg
cmp
cmpsb
mov
xor
mov
pop
fiadds
adc
xor
addb
cltd
aad
mov
pop
adc
and
outsl
adc
call
and
imul
sbb
cltd
inc
ds
jns
cli
jmp
loope
xor
mov
test
aam
cld
enter
mov
into
cmp
sbb
fimuls
cmp
lods
dec
lret
mov
jb
mov
or
addb
xchg
gs
mov
negb
mov
js
jne
mov
xor
lahf
cmp
sbb
je
insl
imul
outsl
xchg
xor
xlat
sbb
add
sub
sbb
mov
out
and
jns
sti
out
jb
aad
test
jge
daa
pushf
mov
sbb
loopne
jmp
insb
dec
sub
sahf
push
int3
loope
dec
cmp
rcll
mov
ja
jp
stos
or
mov
or
adc
xchg
imul
inc
mov
sub
cltd
lahf
stos
push
lahf
jbe
stc
vmptrld
jb
pop
sbb
xchg
pop
lods
add
push
fiadds
mov
or
xchg
inc
add
lahf
mov
andb
in
aam
adc
jnp
inc
ds
in
cld
sti
sub
orb
mov
out
popa
jb
testb
test
testl
insl
mov
lea
fcompl
call
pop
aad
lds
xor
ret
xor
cmpsl
xchg
dec
movq
pop
mov
sarl
cmp
cwtl
push
sar
cmp
and
sbb
push
lret
lods
xor
or
das
and
stos
in
mov
fldl
push
daa
lea
fs
xchg
sub
sub
bound
mov
mov
sub
pop
jle
rclb
stos
insb
das
addr16
nop
fistpll
jne
xchg
fsubs
mov
xor
inc
daa
adc
cmp
push
lret
mov
mov
cmpsl
iret
or
lret
lock
repnz
out
gs
sarb
lahf
sbb
ja
sbb
add
sbb
inc
jno
inc
add
lods
arpl
leave
mov
rol
scas
mov
ja
jmp
movsl
sub
ret
inc
and
xor
adc
sub
mov
iret
xor
push
pop
mov
incb
mov
lea
lret
test
cmpsl
jne
into
out
cmc
and
cmp
rorb
dec
pop
jmp
ret
cmp
and
movsl
mov
xchg
fsubrs
insl
clc
push
loopne
fwait
mov
add
push
adc
out
mov
adc
cwtl
push
jp
mov
cmpsl
lret
mov
subl
xor
cmp
add
and
xchg
ss
pop
inc
cmp
lods
addr16
push
and
cmp
sub
mov
push
xlat
and
ret
cmc
sbb
pop
and
mov
fsubr
or
sbb
sbb
stos
aam
mov
sbb
add
lgs
mov
clc
or
mov
mov
ficoms
stos
jp
inc
add
nop
shrl
outsl
push
add
push
sub
xor
shrl
push
arpl
mov
nop
dec
pop
xchg
out
add
les
fsubrl
shll
push
iret
aas
xchg
and
and
push
dec
sub
or
adc
xor
scas
jmp
add
mov
pushf
mov
imul
cltd
aaa
sbb
loopne
repnz
mov
das
adc
shll
jmp
cmp
dec
aaa
rcrb
cmp
sbb
out
inc
scas
inc
test
ss
sbb
pop
adc
mov
in
mov
mov
mov
push
hlt
aad
pop
hlt
add
sub
add
inc
add
inc
pop
dec
andl
xor
cwtl
stos
bound
xor
or
subl
fdivrl
loop
jp
add
or
mov
cltd
dec
popa
out
daa
cs
cmp
dec
fimull
gs
or
jg
arpl
mov
push
and
adc
lret
lods
sbb
adc
lret
jae
mov
sbb
push
les
int
clc
fcoms
in
jle
adc
je
movsb
add
subb
aam
mov
aas
push
or
push
cli
mov
inc
push
xchg
lods
leave
dec
addr16
jne
lods
pop
push
idivl
stos
pop
pop
repnz
stos
jns
inc
rcrb
cmp
lea
add
bound
inc
jmp
xor
add
fistl
xchg
pop
xor
pushf
add
pop
and
push
lds
out
sbb
out
mov
orb
push
mov
aad
sbb
adc
movl
mov
xor
jg
dec
xchg
hlt
push
fisubs
ds
lods
sub
stos
cmp
scas
fsub
mov
into
mov
enter
int3
add
notb
insb
inc
cs
out
xchg
movsb
inc
mov
popf
pusha
jp
push
fistl
xchg
clc
sbb
cmp
scas
sbb
cmp
fwait
lock
outsb
or
jns
and
mov
int3
in
adc
push
enter
sbb
imul
dec
loop
cmp
and
int3
stos
mov
mov
jmp
popf
or
push
rcll
cwtl
fcoms
adc
sub
lcall
aaa
in
popa
fnstsw
push
mov
out
jmp
je
mov
addr16
lret
xchg
sbb
jbe
mov
mov
decb
and
xlat
test
in
mov
fcompl
add
icebp
adc
addr16
xchg
inc
test
jae
ljmp
push
pop
popf
out
mov
cmpsb
jl
int3
movsl
push
mov
mov
out
cmp
jecxz
jnp
cmc
pushf
js
bound
sbb
mov
or
jg
and
lcall
add
ret
shll
add
adc
gs
fs
push
jle
das
and
lods
adc
mov
mov
aas
inc
and
fists
addr16
out
mov
add
dec
mov
std
xchg
in
jb
lea
fs
ficoms
or
and
xchg
xchg
int3
push
cmpsl
push
inc
scas
daa
fisttpl
cmp
nop
jne
jmp
cmp
sbbw
push
mov
lods
push
movsb
les
mov
mov
xor
stos
jae
ficoml
mov
mov
push
pop
add
mov
cmpl
mov
push
lds
out
xchg
sbbb
imul
mov
lcall
mov
out
pop
fwait
push
mov
mov
cmp
mov
jno
adc
jnp
pop
cmpsb
jl
pop
cmp
xor
ja
mov
aam
push
cmpsl
jbe
sbb
sbb
out
xorb
mull
jp
mov
gs
adc
sub
inc
sub
adc
in
and
mov
jp
cli
jo
aam
mov
sbbb
enter
cmc
jns
rcll
mov
mov
test
aad
pop
xchg
fucomi
subb
xchg
pop
push
fdivl
popa
xchg
das
xchg
imul
mov
sbbb
mov
shl
jp
aam
lods
jmp
pop
stos
dec
adc
loopne
cmpsb
pop
and
sub
push
daa
pop
mov
shll
jp
das
jo
add
repz
sub
or
mov
xor
lock
push
jo
pushf
shll
cmpsl
sub
bswap
xchg
mov
xchg
cltd
loopne
jnp
fisubl
rolb
fstpt
loopne
inc
stos
push
in
inc
cltd
aas
outsb
jl
push
lods
xor
sbb
add
shlb
sti
repnz
insb
jmp
xchg
xchg
sbb
out
push
cli
leave
mov
ds
cld
push
call
mov
in
pop
cwtl
sub
sti
cmpl
mov
pop
sahf
cmp
mov
movsl
add
notl
pop
adcb
cmpsb
jle
adc
fdivs
sbb
out
pop
xchg
add
or
fdivl
mov
rcrl
jns
ret
jb
mov
loope
cmp
bound
mov
jae
lods
mov
loope
shll
push
repz
inc
adc
lods
std
and
and
shl
push
ret
and
popf
shlb
cmp
ja
sbb
fs
push
and
xchg
insl
dec
fwait
push
push
sub
sbb
sub
jge
leave
test
jno
jecxz
inc
jo
filds
and
movsl
popf
push
mov
dec
ret
jno
fnsave
popf
idiv
pushf
dec
xor
daa
lcall
cmp
roll
lret
dec
xchg
out
ss
mov
or
dec
sbb
inc
aaa
insl
add
call
xor
sub
xor
les
jae
mov
lods
popa
cld
fnsave
fstps
xchg
adc
aaa
sub
mov
dec
test
out
movsb
push
outsb
sbb
testl
and
jnp
sahf
sbb
jecxz
push
xchg
shl
xor
out
mov
popa
aaa
inc
popa
idivl
adc
outsl
xlat
xchg
dec
mov
cltd
pcmpeqd
mov
es
pop
or
adc
movsl
sub
jl
lret
push
push
mov
mov
push
scas
adc
push
daa
adc
cwtl
xor
dec
scas
out
dec
es
add
mov
ljmp
int
popf
leave
adc
gs
cltd
pop
outsl
lods
imull
push
xchg
pop
and
push
mov
cmp
fs
test
test
ret
add
mov
mov
cmc
nop
fwait
jnp
loop
mov
rclb
or
inc
sbb
or
mov
mov
push
std
fs
mov
xor
bnd
adc
sbb
inc
leave
dec
scas
cmp
mov
mov
xor
lea
in
pop
jno
adcl
add
aas
sub
push
pusha
sbb
ss
jno
and
cld
add
sub
sub
daa
add
fnstenv
add
cmp
rorl
imull
cmp
mov
rorb
shl
push
xchg
rcrl
call
jo
insb
andb
imul
jecxz
leave
notl
xor
sbb
lcall
inc
ret
pop
sahf
jecxz
mov
sbb
in
icebp
inc
leave
xor
hlt
rolb
jge
test
lret
push
das
adc
test
push
loop
lods
push
ret
in
mov
mov
and
loop
mov
data16
daa
mov
mov
fwait
sbb
test
sbb
mov
das
mov
das
aam
xchg
cmpsb
ja
jns
cmpps
or
inc
xchg
adc
xchg
in
or
pop
push
push
sbb
out
dec
aaa
mov
fsubr
lods
sub
add
sbb
icebp
or
and
jnp
in
pop
mov
or
sub
loope
fs
adc
test
or
push
mov
enter
mov
lret
out
sub
je
hlt
or
jle
pop
mov
cmp
repz
jmp
fs
in
pop
pusha
xor
push
xchg
test
ja
dec
pusha
clc
scas
sahf
add
jnp
jecxz
lret
imul
pop
test
or
or
jmp
mov
rcl
and
or
or
add
aas
js
mov
out
mov
cmc
lds
push
sbb
xor
clc
pop
imul
call
inc
pop
push
pop
xchg
dec
or
dec
mov
xor
sub
in
adc
pop
imul
cmp
jne
xchg
mov
fidivrl
rdtsc
jae
dec
add
in
loope
xchg
mov
cmp
fwait
mov
ror
fdivs
movsl
dec
pop
jno
pop
jno
aam
cmp
loop
stc
mov
or
sub
xchg
adc
and
fisttpl
sbb
movsl
fwait
push
jle
iret
ret
sbb
fwait
lahf
mov
sbb
fldl
lds
mov
or
mov
shll
fwait
cmp
mov
dec
mov
push
scas
in
mov
adc
xlat
cld
fcomps
fistl
or
out
aad
or
adc
sub
fstps
add
rol
test
dec
inc
pop
lods
cmp
xor
insb
xchg
mov
ja
xchg
sub
je
jno
pop
sbb
xor
mov
test
push
idivb
sub
into
stc
cs
loopne
subl
arpl
scas
mov
repnz
sub
xor
inc
cmpb
rorl
mov
jle
xchg
in
add
es
movapd
inc
data16
mov
inc
out
idiv
pop
add
jp
lahf
mov
repnz
sub
cli
dec
popf
adc
lcall
or
adc
pop
shll
mov
mov
xchg
iret
add
push
shll
jp
push
add
pop
aaa
std
xchg
pop
xchg
mul
addl
jg
dec
xchg
in
in
int
sbb
dec
mov
or
or
push
sarb
dec
fcompl
leave
or
jb
test
lea
outsl
xchg
sbb
add
jne
ds
adc
addl
cmp
or
imul
mov
pusha
dec
outsl
scas
dec
loop
add
xchg
dec
lret
scas
arpl
or
mov
das
pslld
pop
mov
xor
xchg
lret
inc
mov
daa
push
jo
and
xor
pop
stos
popa
push
xchg
imul
push
pop
aad
shr
loop
adc
mov
push
sahf
push
movsb
ret
xchg
aad
rcrb
pop
outsl
aad
addr16
sbb
ficoms
cli
add
or
mov
pop
fistpl
xor
fldl
and
mov
scas
test
cltd
fsub
add
inc
push
fadds
scas
nop
cs
nop
lcall
mulb
dec
imul
inc
or
inc
sbb
lods
adc
pop
jns
scas
xchg
adc
repz
cmp
stc
inc
and
loope
xchg
jge
jmp
out
notb
push
int3
repz
sub
imul
in
dec
mov
pushf
pop
addr16
add
stos
mov
lret
mov
mov
sbb
sbb
ret
push
or
dec
icebp
cltd
cmp
cwtl
jl
mov
dec
aaa
jno
fwait
scas
out
lahf
dec
and
adc
push
test
and
sub
push
sub
inc
ds
fiaddl
adc
int
ss
sti
push
dec
xor
or
ss
inc
xor
imul
ret
sahf
xchg
sbb
ret
sbb
mov
pop
sbb
mov
cmpb
xor
xor
pusha
dec
jge
stc
adc
mov
jg
fisubs
mov
out
orl
mov
add
lea
and
xchg
cmpsl
jge
test
call
fldz
arpl
sbb
clc
and
clc
xor
sti
mov
ret
les
sub
xchg
push
pushf
loop
adc
adc
mov
mov
or
push
add
xchg
dec
mov
jae
cli
jecxz
cmp
sub
or
test
dec
cmp
mov
or
addl
loope
dec
sbb
jno
or
cmpsb
mov
das
es
add
jmp
inc
test
arpl
or
pop
pusha
push
aas
or
add
push
fmuls
nop
adc
xchg
jmp
push
fstpl
insl
rcr
insl
jge
inc
sub
out
imul
jmp
das
or
clc
in
and
adc
or
mov
dec
neg
sub
out
cmp
js
dec
mov
clc
imul
fadd
shr
xchg
cltd
fwait
pop
add
in
ret
popf
jns
sahf
pop
nop
out
xchg
aam
clc
xchg
aas
insb
dec
add
cmp
mov
and
cs
xchg
jbe
or
sbb
cltd
popf
clc
xor
out
xchg
xor
movsb
dec
add
fstl
fisubrl
fcoms
scas
notl
xchg
xchg
testb
jae
outsb
and
or
aaa
je
jp
mov
jno
orb
mov
mov
pop
cltd
mov
pop
mov
sub
jge
imul
lods
aaa
idivb
inc
cltd
pop
orb
mov
mov
mov
pop
jnp
jg
dec
dec
aam
push
test
popf
jmp
sbb
inc
pop
sub
mulb
inc
inc
out
or
mov
cmp
mov
adc
ror
pop
repz
rcrb
push
inc
xchg
pop
bound
sub
jo
outsl
scas
cwtl
les
xchg
pusha
ds
dec
add
fptan
jle
pusha
test
in
pop
inc
js
cmovbe
jg
mov
inc
in
or
sub
push
pop
jp
ds
sub
add
push
stos
xor
xchg
sbb
push
imul
xor
sub
xchg
mov
xchg
test
dec
jle
insl
or
psubq
cmp
ud0
iret
or
bound
ljmp
inc
xchg
jl
mov
insl
in
loopne
xor
xchg
dec
out
jge
aam
dec
push
lret
iret
popa
ja
pop
enter
sahf
mov
xor
cmp
test
into
out
out
adc
adc
out
add
repnz
mov
clc
decb
jbe
cmp
iret
ja
popf
mov
cmc
jp
cs
xchg
push
ret
sbb
icebp
das
fidivs
pop
push
xorb
icebp
lcall
sbb
mov
mov
pusha
mov
ljmp
loopne
jno
ret
or
filds
es
in
das
daa
or
imul
repz
adc
mov
jnp,pt
rclb
rclb
mov
aas
inc
mov
lcall
add
cltd
add
frstor
sbb
gs
imul
jb
ficomps
adc
out
adc
ret
out
mov
sub
outsl
dec
sahf
inc
jb
aam
jns
mov
ficoms
ret
and
push
stc
push
cwtl
jns
aad
mov
and
xchg
xchg
cmp
jmp
movsb
js
cltd
pop
push
inc
pop
imul
adc
and
mov
adc
in
in
sub
icebp
push
mov
mov
bound
scas
add
mov
or
mov
add
das
fdivl
aaa
rsqrtps
pop
lods
dec
in
push
int3
xlat
mov
jns
jmp
xor
sti
lds
fmull
sub
adc
adc
data16
dec
ljmp
sbb
and
jne
jg
or
fistl
xchg
stc
xchg
xor
mov
jb
jmp
xchg
push
dec
inc
adc
lret
xchg
addr16
cmp
jg
lods
dec
loop
test
or
iret
in
and
pop
cmp
aad
imul
out
xor
imul
sti
psllw
cwtl
or
or
mov
enter
xor
std
cmp
arpl
xor
ja
mov
cmp
and
dec
fldenv
jb
movsb
xlat
test
cmp
jg
cmp
fcmovbe
fs
adc
into
push
lcall
or
mov
out
pop
aas
jae
jae
mov
aam
shrl
popa
shlb
sub
test
imul
popf
jo
push
fildll
add
jns
pop
jl
nop
push
push
push
fs
mov
lret
pop
out
imul
adc
gs
clc
cld
jle
add
and
lahf
outsb
ficoml
or
sub
xor
sub
imul
testb
enterw
push
adcb
jmp
ja
pop
cmp
jno
insb
jle
ret
js
cmpsb
inc
cltd
cmp
push
subl
and
add
push
cmp
stc
push
lret
add
lods
inc
arpl
rcl
stos
lea
in
sub
xor
jb
xor
mov
jns
cld
cs
mov
xor
xchg
add
lcall
xchg
mov
jae
sbb
add
data16
add
pop
mov
adc
lret
sub
add
or
pop
into
jg
orl
jmp
iret
je
xor
ficomps
add
sbb
or
push
jb
bound
insb
shl
push
pushf
pop
cmp
imul
in
push
dec
mov
jae
sbb
mov
dec
orl
stc
jmp
shl
push
lret
adc
xchg
adc
das
mov
das
adc
dec
test
or
stos
lahf
gs
push
mov
jg
sbbl
mov
fisubs
adc
lods
hlt
sbb
jno
arpl
js,pt
add
sub
pop
jg
leave
ljmp
fstps
or
aad
mov
lds
lret
adc
pop
lea
ret
fimull
push
cmp
xor
lods
pop
aaa
dec
push
xor
push
movsb
mov
jo
data16
xchg
fidivrs
mov
jne,pt
ljmp
mov
jecxz
aas
jb
push
mov
push
scas
mov
mov
gs
ret
mov
xor
popa
xor
mov
cmp
sbb
loope
repnz
xorl
test
mov
jno
xchg
ja
xlat
pop
in
into
iret
xor
lods
push
and
pop
decl
scas
push
daa
mov
loopne
dec
add
and
mov
std
nop
sub
cmp
fstpt
cmp
push
stos
push
into
mov
mov
inc
cmc
fs
ret
dec
fisttps
test
mov
inc
out
cmp
mov
add
arpl
mov
adc
or
inc
imul
jo
iret
pop
loop
loopne
in
cmp
xor
cmpsb
mov
test
push
pop
cmc
mov
lods
in
xor
pop
test
into
jmp
push
insb
ja
popa
ficoml
pushf
movsb
add
xchg
lret
aam
insb
push
lret
pop
xor
shl
xchg
cwtl
das
mov
dec
pop
loopne
adc
sbb
pop
mov
int
arpl
fldt
add
aam
fisubrs
push
repz
movsb
jae
sbb
or
insl
dec
not
inc
insb
shll
and
mov
mov
shrb
lcall
add
rcrb
jno
jg
mov
jg
test
cmp
xchg
sub
or
mov
loop
pop
and
mov
movsl
dec
repz
mov
xchg
lods
dec
daa
add
mov
pop
shr
jge
and
fstps
inc
pop
bound
sbb
pop
inc
mov
push
push
test
cmp
cmp
and
fs
cli
fimull
jg
orb
pop
sahf
inc
mov
lds
adc
mov
movsl
add
scas
bound
aaa
xchg
shrl
lods
mov
dec
dec
push
nop
mov
data16
fists
push
push
lods
add
mov
add
lock
and
ds
lods
in
dec
sub
inc
add
leave
fwait
scas
lcall
push
jmp
jbe
xlat
fptan
shrl
jbe
dec
shr
pop
addl
push
mov
mov
cmp
mov
sub
notl
jle
xchg
jmp
movsb
in
int
es
test
mov
xchg
loop
mov
jnp
mov
cmp
call
xchg
mov
push
insb
xchg
testl
jbe
fcoms
pop
mov
testl
dec
enter
iret
xchg
jne
aam
cmpsb
push
xlat
push
pop
sbb
ficoms
jb
pop
xor
scas
stc
sbb
gs
add
add
cmpl
inc
int
testl
cltd
arpl
jns
popf
mov
mov
addr16
jae
arpl
sarb
lods
fimull
jge
or
mov
pop
in
fbld
mov
stos
aad
das
test
aam
leave
in
in
stos
xchg
js
sbb
mov
cmc
das
sub
lods
out
jp
ss
jnp
loopne
mov
gs
sbb
push
daa
lahf
and
into
push
adc
mov
cwtl
jne
scas
sar
stc
or
inc
in
cmp
testl
and
push
shll
sub
sahf
imul
rcll
mov
mov
xor
and
dec
push
dec
pusha
repnz
ss
xchg
loopne
or
pop
imul
out
stos
mov
cld
dec
ret
in
push
dec
push
pop
sarl
push
jbe
or
xchg
pop
repz
mov
pop
dec
lahf
shrb
js
sbb
pop
rcl
jle
xchg
shl
in
hlt
out
push
mov
pop
jle
aas
mov
jmp
cld
cmovg
and
mov
ret
jne
jnp
lret
add
or
jg
inc
inc
and
or
pop
and
jbe
mov
jne
lret
insl
mov
int
int
stos
icebp
nop
es
es
mov
adc
cmpsb
jge
jo
loope
push
dec
leave
fwait
popf
mov
lds
dec
push
inc
mov
sbb
xor
outsl
jmp
xor
out
out
inc
jle
or
idivb
or
or
or
dec
xchg
fstpt
mov
popf
repz
loop
jge
and
cmpsb
sbb
pop
and
popf
xchg
xchg
xlat
jge
test
xchg
inc
mov
push
ficompl
inc
mov
mov
data16
sahf
lea
das
rcl
jp
xor
inc
ja
or
fcoms
mov
es
das
dec
jo
sub
cs
sbb
lock
cld
stos
dec
jge
cltd
in
xchg
mov
hlt
movsb
je
stos
cmc
add
sub
xor
mov
inc
shr
aaa
rcll
pop
dec
jl
shlb
mov
cmp
sbb
jo
dec
jne
fwait
ja
lock
notl
mov
sub
pop
fs
into
sarl
dec
pusha
push
pop
inc
and
test
lea
fisttps
xchg
jle
mov
or
sbb
in
popa
pushf
and
lret
inc
pop
loope
jno
aaa
jg
jno
call
loopne
sbb
jae
sub
icebp
push
sbb
fstpl
jb
insb
cmp
movsb
pop
dec
inc
xchg
adc
sbb
div
iret
fwait
cmpsb
roll
jg
xor
mov
cltd
out
jle
or
push
push
out
pop
icebp
xchg
xor
cmp
imul
jmp
je
icebp
fsubp
sub
loop
mov
pop
frstor
pop
dec
loop
sahf
fninit
inc
add
test
mov
jne
leave
and
pusha
outsb
pop
xchg
mov
data16
xlat
aaa
xor
mov
sarb
test
mov
mov
dec
pop
add
test
cmp
arpl
into
subl
mov
jp
loop
hlt
pop
test
xchg
ror
js
les
fs
adc
rcrl
orl
shrb
orb
mov
sub
pop
pop
bound
gs
rol
pop
lods
rcrb
mov
sub
mov
jae
inc
xchg
push
mov
test
int
ret
outsl
inc
jnp
ja
popa
inc
mov
sbb
dec
jl
enter
in
rorb
mov
cmp
push
xor
xchg
out
adc
or
cmpsl
mov
push
stos
mov
dec
dec
out
ret
xchg
add
sub
out
adc
jecxz
xchg
xor
inc
push
movsb
sub
cmc
pop
dec
dec
sbb
mov
sarb
xchg
xchg
xchg
mov
scas
jge
sub
addb
cmp
xor
cmp
cmp
jge
and
cmc
ror
arpl
xor
repz
testl
sti
add
pop
push
mov
or
sbb
repnz
mov
xor
pop
push
pop
lods
sarb
scas
inc
cmp
inc
std
push
adc
and
and
pop
fnstsw
stos
sub
lds
ret
roll
mov
jl
push
lods
repz
rorb
jno
push
or
daa
or
notl
cmp
xor
lds
lcall
addb
pop
push
clc
or
cmp
lods
daa
outsb
mov
lods
bound
sub
pop
dec
fisubrl
fsubl
mov
or
lret
pop
mov
ret
mov
stc
push
aas
xchg
fnstcw
jge
addr16
iret
jmp
stc
pusha
and
pop
inc
leave
and
sub
bound
test
shl
dec
push
push
clc
shrb
clc
sahf
cltd
xlat
jo
add
imul
cmp
roll
out
ret
inc
iret
sub
js
addr16
cmp
aaa
inc
adc
daa
iret
inc
sbb
ss
sahf
cmpsb
insl
xor
mov
and
xchg
mov
push
adc
mov
movsb
mov
pop
test
jmp
inc
xchg
sbb
push
mov
daa
bound
adc
lock
adc
add
fwait
insb
aas
ret
sub
jg
paddq
push
outsb
stos
movsl
xor
adc
jbe
mov
push
out
or
cmpsb
xor
clc
les
shlb
inc
adc
jecxz
test
in
inc
rclb
lret
jae
pop
andl
mov
jbe
scas
es
sbb
inc
or
das
mov
jb
shll
or
xor
push
sti
pop
and
lea
add
or
dec
pop
decl
xor
mov
int3
fnstsw
xor
je
cmp
inc
or
fisttpll
fcoml
mov
aas
nop
push
cmp
xor
mov
add
xchg
das
cltd
call
test
xor
or
sbb
pop
ja
mov
cld
push
shrl
push
mov
mov
and
out
pop
cmp
movsl
mov
cli
xchg
pop
divl
mov
sbb
push
mov
mov
xchg
es
dec
pop
sub
jno
push
imul
jb
stos
iret
inc
cmc
push
flds
fldz
subb
rcrb
ja
outsl
sahf
fstl
push
shll
mov
call
inc
mov
repz
fistps
jmp
jo
jl
adc
or
mov
xlat
jmp
adc
push
sbb
sbb
aaa
ret
pop
xlat
jmp
insl
mov
lret
xor
dec
cmp
pop
adc
stc
xchg
xchg
pop
jle
cmp
je
mov
repz
hlt
sti
xchg
fs
xchg
call
mov
ss
notl
ljmp
push
jnp
outsl
cli
xor
mov
and
add
sub
stos
dec
insl
jle
inc
outsl
stos
adc
push
adc
cmp
sub
sbb
movsb
pop
testl
inc
add
insl
xchg
into
xlat
push
leave
decb
fcom
mov
cmc
push
stos
sahf
sub
inc
sbb
dec
nop
out
cli
in
in
mov
aam
nop
push
jnp
push
sub
inc
arpl
addb
cmp
mov
inc
scas
adc
push
pop
sarl
dec
mov
and
out
icebp
mov
mov
xchg
and
pop
fnstsw
dec
jg
nop
out
cmc
add
add
pop
pop
into
pop
cmpsb
mov
jle
jle
outsb
push
test
stos
mov
inc
sbb
xor
and
dec
sbb
pop
jp
or
ds
inc
pop
pop
mov
mov
mov
enter
mulb
sub
or
ljmp
jge
loope
scas
clc
dec
mov
push
fsubrs
jecxz
lcall
imulb
aad
jb
mov
ljmp
xor
xorl
data16
or
outsb
into
cmp
jb
lods
mov
mov
push
jno
imul
test
adc
lcall
xor
jne
outsl
lcall
inc
fs
ljmp
scas
and
jle
insl
popf
jns
xor
popf
aam
rcl
xor
iret
mov
in
add
push
push
mov
leave
jmp
aas
aas
add
sub
cmp
sbb
push
fwait
repnz
outsb
int3
cmp
rcl
negl
clc
loopne
popf
lcall
pop
xlat
cmp
cwtl
sbb
jp
push
ficomps
cmpsl
adc
int3
mov
sbb
jp
pop
and
mov
lret
fcoms
cmp
lods
mov
push
ret
insb
jmp
aaa
inc
hlt
push
push
jae
lods
aas
jno
xchg
sub
cmp
dec
jb
aad
mov
bound
js
mov
dec
xchg
and
mov
mov
inc
sar
inc
imul
in
cmp
jp
inc
pop
pop
cmp
fistps
hlt
sub
mov
push
ret
sub
fldt
cmpl
mov
fadds
in
out
outsb
pop
lock
pop
inc
test
dec
pop
mov
jg
into
roll
sbb
fisttpll
cmp
sahf
cmc
ljmp
fyl2xp1
fnsave
dec
das
repnz
xchg
sti
out
or
mov
dec
sbb
push
fsubl
and
test
lret
add
call
push
jle
daa
outsl
repz
push
add
cmpb
pusha
jbe
shll
loop
jae
aam
cmp
icebp
and
in
imul
sub
cmpb
sti
adc
pop
sahf
sbb
roll
fistpll
je
add
repnz
test
fstps
adc
pop
inc
and
jl
sbb
jge
int
inc
xor
das
inc
adc
or
pop
jg
xchg
inc
ret
out
movsb
out
lcall
movsl
jmp
push
dec
lods
sub
lods
add
cmpsb
in
in
enter
adc
sbbb
cmpl
sub
sbb
pop
movsl
imul
xor
cmpsb
xor
lock
pop
add
xlat
mov
and
or
cmp
jle,pn
sahf
cmc
mov
ja
ljmp
inc
outsl
es
push
lods
mov
clc
dec
cmp
cld
in
fcomp
xlat
daa
dec
mov
xlat
add
call
inc
out
test
fcoms
fs
divb
pop
jmp
scas
xor
push
mov
pop
mov
lods
adc
inc
fnstsw
sub
les
fstps
lahf
inc
daa
into
jp
mov
pop
xor
mov
sti
pop
pop
arpl
loopne
xchg
adc
test
mov
fmuls
sahf
cltd
es
daa
std
test
dec
mov
inc
adc
cmp
dec
dec
cmp
jl
jmp
daa
push
insb
out
push
dec
mov
shr
dec
jb
inc
inc
or
ret
cmp
sbb
jo
nop
mov
aad
add
xchg
out
pop
dec
xchg
sbb
mov
pop
push
imulb
out
xor
sbb
scas
lret
in
push
shrl
sti
insb
test
sub
cltd
fstl
scas
pushf
arpl
jg
insl
loop
shrl
out
pop
dec
mov
mov
test
cmp
add
mov
test
insb
cmp
sub
adc
xlat
rorb
cmpl
rol
out
xchg
shll
push
lret
out
xor
jecxz
xlat
inc
adc
jns
push
or
in
xchg
xchg
popa
in
inc
fnsave
sub
xchg
pop
sbb
xor
sbbl
xchg
push
fs
fsubrs
mov
cmp
dec
sub
inc
mov
jle
lds
xor
jo
cltd
mov
inc
fwait
hlt
std
jg
xor
gs
imul
xor
sbb
movl
repz
xlat
ret
jne
cmpl
sahf
adc
dec
movsl
les
fwait
dec
xor
popa
fisttpl
inc
add
repnz
int
sbb
sub
shl
fs
jo
outsb
fwait
pop
mov
es
cmp
test
push
scas
fldl
pushf
cmp
dec
mov
ss
lahf
xor
jp
movsl
fcmove
insb
lods
jmp
jge
lret
cli
mov
ret
pop
xor
pop
pushl
dec
rolb
gs
popf
js
out
and
xor
sub
pop
movsl
stc
mov
lret
lods
xlat
jbe
outsl
nop
int
pop
test
loop
cmp
in
mov
adc
adc
pop
in
cli
pminsw
pop
mov
mov
mov
das
or
jmp
inc
cmpsl
jle
mov
push
mov
and
push
push
pop
pop
add
sahf
adc
sub
les
sti
clc
test
fscale
test
jnp
inc
push
hlt
sbb
in
and
push
mov
leave
rorb
cmp
add
push
sbb
inc
ret
sbb
dec
mov
test
ret
sahf
cmp
or
cmp
sbb
xchg
pop
xchg
cmp
cwtl
outsl
lret
cmp
imul
call
ss
lret
and
add
xchg
jb
mov
jo
jnp
int
cmc
or
pop
and
push
jb
sbb
cltd
push
and
sbb
sti
fcompl
sbb
or
add
sub
jmp
xchg
in
into
xorl
das
fisttpl
rcl
leave
mov
pop
xchg
mov
xchg
sarb
jne
lods
in
dec
loop
mov
mov
or
push
mov
mov
jae
ss
dec
jmp
clc
xor
mov
lret
add
pusha
mov
inc
incl
lcall
jae
pop
test
ds
jae
js
or
or
lahf
imul
mov
dec
xchg
pop
push
add
xor
jbe
inc
pop
sbb
sub
pop
lahf
test
mov
roll
mov
and
lds
sub
add
sbb
imul
sti
lret
loop
add
or
outsl
fimuls
push
cmp
inc
xchg
in
add
jecxz
jo
pop
pop
outsb
mov
fldcw
clc
xchg
fcompl
gs
ret
jae
ja
xchg
cmp
mov
cltd
mov
test
sub
stc
mov
mov
inc
gs
in
push
pop
out
add
ds
dec
and
mov
jmp
ret
hlt
ljmp
xlat
fdivrs
fwait
add
sbb
add
adc
xchg
addr16
mov
sbb
lock
loop
add
push
lock
outsl
aas
xor
rcl
adc
push
pop
xor
cmp
xor
pop
xchg
sub
inc
push
pop
imul
imul
mov
jae
test
inc
call
jmp
andb
loope
rcrl
inc
xor
mov
cmp
mov
repnz
popf
ds
xor
sub
lret
cs
and
les
sbb
dec
jle
jb
ljmp
dec
sub
movsl
push
adc
rorb
mov
enter
loope
cmp
add
outsl
sub
push
pushl
andb
insl
aad
shrl
dec
testb
or
loope
sub
jbe
mov
ret
xor
cld
call
pop
dec
adc
add
cli
jge
mov
xchg
or
pop
cmc
fdivrl
jbe
pop
push
jbe
sub
and
and
mov
ds
and
ret
fcoml
dec
ljmp
add
sbb
pop
dec
mov
pop
mov
dec
das
ror
idivb
repnz
mov
jle
cld
xor
mov
sbb
mov
out
shll
jae
jle
inc
mov
add
outsb
mov
ljmp
decb
movsb
push
mov
xchg
jns
xor
add
pop
jmp
and
faddl
mov
jb
out
lods
mov
nop
in
sub
xor
inc
movsl
in
out
mov
push
fs
inc
movsb
out
sarl
dec
les
xchg
fldl
loope
in
bnd
xchg
xor
xlat
sahf
sti
push
add
xchg
mov
cmp
mov
adc
ret
jns
out
aam
mov
xlat
call
es
les
insl
fbstp
out
nop
adc
adc
mov
push
pop
adc
push
pop
lods
mov
ds
xchg
add
pop
les
test
mov
mov
dec
cmp
adc
arpl
sbb
mov
cmp
das
dec
sub
fcmovnb
aad
int
std
js
inc
addl
adc
xor
clc
push
cmp
mov
xchg
lods
lcall
jl
sub
movsl
outsl
xor
pop
push
aaa
push
loope
inc
in
dec
or
sarb
ja
les
bound
xchg
push
std
mov
aad
repz
or
mov
cmc
out
rorb
xchg
mov
out
popa
leave
push
fnstcw
aas
sub
out
sti
gs
ljmp
cld
mov
xor
push
xor
ljmp
add
aas
dec
fs
aad
xorl
cmpsb
leave
sub
jns
movb
cmp
and
sbb
fsubrl
mov
out
iret
mov
mov
mov
iret
adc
call
xchg
rcr
add
mov
cmp
mov
adcb
aaa
mov
ja
cmc
dec
inc
aaa
fidivl
ss
cwtl
sub
push
rorb
out
or
sub
out
repz
call
cmp
cli
cmp
push
cmpsb
test
xor
dec
loope
mov
add
push
repz
mov
loop
ret
jbe
mov
ds
into
cmp
mov
dec
pop
test
xchg
orb
movsb
movsl
xor
fisubs
ss
sub
inc
data16
ja
jmp
xchg
sub
aad
cmpsb
lret
mov
shrb
xchg
mov
push
fadds
loope
push
sarb
into
out
mov
xchg
jp
outsl
push
dec
data16
cmp
push
fcmovbe
cmp
call
mov
dec
jnp
in
sub
adc
lcall
mov
fadd
into
sbbb
lret
cmpsb
jbe
jge
jae
sub
aaa
divb
lret
mov
rcll
pop
into
pushf
cs
mov
fbld
lea
leave
mov
notb
popa
jg
lcall
mov
cs
mov
mov
jg
cld
insb
lcall
pop
ret
and
pop
push
push
push
mov
pop
push
lock
or
jecxz
outsl
incb
sub
mov
scas
in
xchg
sbb
imul
shrl
cwtl
mov
shll
pop
test
add
push
fisubs
mov
push
mov
push
mov
enter
jnp
inc
aaa
stc
mov
in
pusha
push
pushf
jo
pop
pop
fmull
dec
insb
out
movsb
rorb
lahf
fs
in
aas
cmpsl
orl
sbb
das
xor
mov
pop
sbb
add
push
xor
cmp
jge
sub
sti
in
pop
or
shlb
xor
inc
cmpsl
jo
jae
rolb
addr16
xchg
pop
jae
cmp
loope
pushf
in
mov
inc
pop
andb
out
or
mov
inc
stos
ret
sti
dec
lods
iret
arpl
aas
pushf
movsb
adc
int
lahf
js
cmpsl
pop
jle
int
and
mov
pop
int3
inc
stos
iret
lock
cmp
push
loopne
pshufw
push
mov
loop
aam
aam
mov
jne
jne
lods
arpl
orl
mov
jecxz
int3
jecxz
loope
jns
jge
jo
cli
orb
test
imulb
int3
and
or
jp
mov
jne
outsl
pop
shrl
bound
sub
hlt
mov
movsb
sahf
push
mov
mov
add
pop
mov
ds
push
mov
jecxz
fidivrl
xchg
sub
ja
cmpsl
pop
mov
out
dec
pop
fsubrl
dec
into
test
inc
lea
insl
mov
mov
divl
push
fstp
sub
mov
fsubrl
add
rcrl
and
xchg
xorb
iret
jb
mov
lds
movsl
lock
lret
stos
push
addr16
mov
mov
dec
xchg
scas
mov
push
in
xchg
cmp
or
add
cmp
lock
mov
lahf
outsl
dec
lret
add
mov
push
insb
arpl
loope
loope
or
mov
insb
xor
gs
stc
and
lods
out
inc
and
xchg
mov
mov
lds
insb
and
rolb
or
arpl
pop
cli
cmc
cmp
aam
mov
sub
fucomp
xchg
xor
cmpsl
mov
in
mov
notb
sbb
fwait
inc
inc
add
and
loop
mov
int
lret
int
mov
xor
fldt
lock
cmpsb
dec
cmpb
adc
ret
sti
adc
cmp
sbb
fstpt
add
inc
aam
pop
sbb
cs
in
and
sub
int3
imul
mov
jns
test
mov
ret
add
sahf
dec
les
cmpsl
jg
fs
mov
lret
cmp
out
roll
ds
das
pop
in
jp
jne
std
fistpl
jnp
xchg
or
leave
repz
and
or
mov
xchg
pop
pop
daa
fimuls
dec
add
sub
mov
jl
cmp
lea
push
fcomip
sub
mov
lahf
fsubs
jne
and
mov
jmp
pop
gs
and
insl
sbb
in
ficomps
lods
test
hlt
mov
jns
dec
jo
fldenv
and
xor
adcb
jo
add
cmp
out
fisubrs
cmpsb
add
pushf
rorb
movsl
rclb
sbb
push
inc
lds
js
push
jb
push
pop
jl
popf
jnp
scas
mov
pop
lret
inc
dec
mov
xchg
add
jl
iret
imul
daa
xchg
add
sbb
test
imul
inc
rorl
add
dec
xchg
xor
popf
adc
pop
cmp
push
mov
sub
loope
mov
push
pushf
dec
in
movsl
repz
cmp
pop
mov
fsubl
mov
aad
lea
pop
jnp
ja,pt
pop
and
add
dec
ret
pop
ja
and
movsl
iret
popf
mov
push
sub
adc
popf
xchg
test
push
inc
pusha
sub
sarb
jno
xor
addr16
call
lds
mov
add
pop
test
mov
xchg
inc
repz
push
or
mov
mov
imulb
stos
sahf
push
pop
inc
arpl
jmp
lods
cmp
pop
popf
inc
jne
mov
mov
cmp
mov
push
xor
repnz
repz
rcrb
or
and
mov
add
stos
fisubs
dec
addr16
cmp
bound
pop
fimuls
inc
out
pop
mov
dec
push
test
pop
rclb
push
in
add
adc
cwtl
stos
mov
sub
sub
jne
mov
lds
or
and
sbb
sbb
adc
jmp
shrl
mov
scas
jl
aad
push
pop
sub
ror
add
iret
pop
push
repnz
sbb
arpl
jecxz
jl
addb
sbb
in
inc
daa
lds
stos
enter
pop
push
test
mov
leave
test
xor
decb
xor
rorb
push
ret
loopne
xor
pop
cld
roll
lods
mov
popf
and
clc
xchg
mov
cwtl
stos
cmp
aas
add
sub
adc
fildl
into
push
scas
into
aam
fsubl
xchg
jnp
mov
sbbb
les
dec
loopne
mov
or
xchg
jo
cli
mov
mov
sbb
xchg
sbb
jle
mov
pop
js
pop
mov
sbb
les
icebp
xchg
cmc
and
xor
jno
jns
push
jne
or
stc
add
loope
cmp
stos
sbb
inc
fbld
or
sbb
jp
scas
sub
push
sbb
fimull
or
fistpl
mull
mov
ret
pop
xchg
pop
sti
inc
adc
push
rorb
stc
add
pop
mov
sbb
mov
pop
adcl
jo
mov
xor
mov
push
subb
popa
jo
jecxz
lret
mov
subb
adc
push
mov
cmp
dec
mov
jl
lret
xchg
mov
out
ret
mov
xchg
jns
loope
pop
cmc
rolb
jg
mov
and
imul
fisubrl
lret
xchg
aas
dec
outsl
and
lcall
insb
hlt
push
jmp
push
mov
fiaddl
les
add
repz
cmc
sbb
push
pop
jne
fcompl
das
cmc
push
mov
aam
out
pop
das
add
mov
pop
jge
xchg
xor
push
mov
jle
cmp
push
imul
pop
aaa
inc
pop
pop
and
pop
fwait
jmp
mov
icebp
and
add
inc
pusha
xlat
sahf
jp
scas
stos
fidivrl
imul
sbb
push
sub
add
lret
jnp
stos
add
inc
lock
outsl
jnp
cmp
outsl
in
scas
xlat
push
stos
inc
adc
fcmovbe
mov
xor
inc
pop
sub
stc
cmp
xor
lock
and
notl
and
je
or
sbb
mov
sbb
ret
lahf
sub
dec
and
sarb
mov
mov
jge
addr16
push
xchg
cmpsl
pop
sbb
or
outsb
xor
mov
xor
adc
mov
mov
mov
xor
sbb
or
int
gs
cmp
pop
xchg
adc
dec
mov
pop
mov
scas
jo
xchg
ds
pop
mov
xor
cmp
push
mov
and
scas
daa
mov
dec
sbbl
mov
out
shlb
popa
mov
xor
fisubrs
xchg
incb
cwtl
shll
nop
fwait
pop
adc
jb
pusha
add
mov
aaa
sbb
sub
mov
jbe
xchg
and
push
xor
insb
dec
maskmovq
imull
mov
pop
repz
xor
stos
je
mov
xor
lret
adc
leave
mov
push
lods
popf
cmp
jb
mov
xchg
out
lret
arpl
lret
aad
leave
push
mov
les
movl
xchg
sbbl
notl
orl
ffreep
add
js
cmp
dec
aad
inc
test
sbb
push
adc
jae
or
stc
inc
movsl
xor
clc
dec
xchg
popa
stc
add
jmp
add
scas
and
push
fstl
flds
cmpsl
and
xor
sbb
fcmovu
cltd
xchg
fisubl
xchg
stos
not
sahf
xor
and
sbb
out
jmp
sahf
mov
dec
lock
pop
adc
mov
int3
sahf
dec
fsubs
js
lret
cmp
sarb
mov
into
sub
pop
mov
pop
test
sbb
jl
jne
push
insl
jmp
add
and
sub
jb
or
adcb
mov
cmpsl
lods
lds
nop
dec
sbb
testl
dec
inc
mov
pop
test
pop
fbld
insl
jmp
bound
test
jnp
mov
push
fnstcw
out
mov
or
stos
cld
in
or
pop
cmp
fnstcw
dec
lods
cltd
push
mov
cld
push
rorl
jbe
lods
sbb
sbb
xor
das
icebp
je
adc
test
sbb
mov
jne
sbb
fmull
pop
jle
push
test
mov
xor
mov
push
bound
pop
mov
or
mov
adc
rcll
clc
lahf
dec
std
jecxz
lods
andl
mov
popf
jne
xchg
pop
adc
daa
ds
push
pop
imul
push
ret
xor
xchg
push
mov
loope
sbb
adc
adc
outsl
call
sbbl
xor
inc
cmp
in
and
jns
fsts
jecxz
mov
adc
sub
popa
outsb
ror
rcll
and
and
and
mov
mov
xchg
movsl
pop
sbb
aaa
xchg
in
fdivs
xor
insl
mov
or
sbb
lock
imul
and
inc
ljmp
jecxz
rcll
pop
sbb
sub
pop
sbb
stc
icebp
xchg
mov
push
sar
pop
lock
lods
mov
add
ret
jnp
xor
jmp
popa
addr16
pushf
mov
gs
jae
sub
out
mov
cmp
shrb
sub
inc
imul
movd
sbb
mov
adcl
shlb
lods
fstl
sbb
push
fistpll
aam
loopne
push
jbe
lret
or
nop
jb
lcall
call
push
gs
push
xchg
mov
fiaddl
cmpsl
insb
mov
negb
add
mov
lahf
aaa
sti
enter
and
sbb
out
jle
cmpsl
fwait
sub
shrb
cmp
stc
push
movsb
push
mul
insl
pop
mov
iret
and
xchg
leave
test
mov
jg
mov
xchg
test
mov
aad
xor
ds
xor
adc
shrl
imul
imul
add
and
arpl
fnsave
in
repnz
mov
push
fistps
popf
cmpsl
decl
xchg
jmp
loope
pop
inc
orb
pop
lret
sbb
js
sbb
push
adc
mov
dec
adc
lret
lods
jae
pop
sub
adc
push
out
mov
test
cwtl
mov
and
xchg
cli
hlt
iret
inc
pop
in
addr16
adcb
adc
sbb
cmp
cmc
inc
xor
push
aam
pop
ss
out
sub
mov
xchg
sbb
int
outsb
fldcw
mov
int
iret
sub
mov
in
repnz
jae
fs
add
lret
jne
mov
pop
out
pop
push
cld
jnp
pushf
in
xor
je
sub
iret
xchg
dec
push
add
mov
or
stos
test
push
lods
mov
jo
pop
into
enter
jmp
pushf
hlt
movsb
fnstenv
and
stos
ljmp
xor
mov
je
loopne
test
imul
jp
pop
mov
das
cmp
and
js
mov
dec
and
dec
push
lahf
xor
dec
push
clc
mov
icebp
ja
xchg
xchg
and
dec
cmc
popa
pop
mov
mov
lret
pop
sub
addr16
mov
push
or
shrl
push
xchg
push
aad
ret
mov
ds
in
fs
cmp
fwait
in
imulb
jne
int3
idiv
clc
mov
fisttpl
shrl
pop
pop
inc
cmpsl
repnz
lods
mov
pop
cld
xchg
das
sbb
inc
add
je
test
adc
imul
fcmovne
rcl
jnp
sub
mov
in
mov
leave
xor
cmpsb
push
dec
inc
sub
out
xor
or
outsb
xchg
loope
push
std
add
xor
jl
mov
push
push
push
cld
movsl
jb
ss
stos
inc
dec
loop
insl
in
adc
in
xor
gs
insl
sbb
in
sub
push
jbe
mov
mov
call
xchg
inc
imul
ror
hlt
lock
xchg
or
and
mov
fistl
stos
mov
gs
orl
mov
sti
push
int
dec
mov
cld
icebp
sbb
loopne
jbe
loopne
push
cmc
push
dec
nop
push
xor
lods
mov
jo
pusha
xchg
outsl
xor
mov
test
shll
sub
dec
dec
and
pop
fdivp
xor
int3
inc
bound
imul
mov
outsl
cmp
les
cmpsl
dec
loope
sti
push
sbb
jnp
fldenv
push
cmc
lods
and
mov
fcompl
jmp
ss
or
mov
sti
xlat
jb
push
js
movsb
loopne
adc
sub
mov
mov
ss
es
incl
mov
in
cmp
dec
pmaxsw
cmp
mov
jecxz
arpl
lods
pusha
fldcw
push
xchg
mov
push
sbb
fdivl
cld
lcall
cmpb
add
pop
or
lahf
loope
mov
lret
cmpsb
push
mov
adc
mov
mov
inc
mov
loopne
xlat
pop
in
jp
fsub
nop
mov
cmpb
mov
xor
dec
add
movsb
fldt
jnp
aam
sub
ret
push
int3
cmp
mov
mov
cltd
cmp
or
adc
and
pop
fiaddl
pop
push
sub
push
popa
xor
out
mov
scas
xor
dec
js
push
lret
sub
push
xor
xchg
dec
and
jg
pop
pop
jne
mov
inc
enter
mov
pop
aad
stos
dec
adc
adc
in
fcomip
add
outsb
and
hlt
mov
jle
cmpsl
jl
in
addb
add
and
jns
ret
arpl
pop
add
inc
lock
xor
lret
and
daa
imulb
dec
dec
inc
xor
pop
lcall
insl
dec
jae
es
mov
andl
ja
mov
and
add
xor
ret
push
ja
mov
push
cmpb
fdivrl
fwait
lahf
divl
pandn
out
mov
xchg
icebp
pop
mov
sbb
mov
dec
xor
jp
sub
cli
shrl
lods
cmc
mov
xchg
movsb
jmp
jmp
mov
dec
aam
adc
sarb
pop
hlt
xor
repz
aam
pop
cmpb
push
adcl
imul
mov
ret
pop
ret
hlt
inc
mov
lods
inc
mov
mov
out
arpl
loope
sub
or
jns
sarl
push
rcrb
xlat
adc
sub
ret
push
pushf
pop
push
sbb
sbb
sahf
out
arpl
push
in
int
jns
pop
sub
insb
imul
je
inc
cltd
pushf
lock
je
push
xor
sub
jb
push
sub
pop
scas
push
add
sbb
push
mov
bound
lea
pop
lods
xor
cmpsl
aad
iret
xor
data16
iret
push
pop
rcrb
xlat
pop
ret
mov
dec
and
push
dec
iret
ljmp
inc
sbb
fisubl
mov
pop
lea
mov
mov
out
mov
mov
or
or
addr16
lods
cld
mov
jbe
aam
lods
sub
mull
sbb
add
push
add
xor
xchg
outsl
fildll
sbb
sbb
push
mov
inc
xor
xchg
and
pop
sub
addr16
fst
outsl
cmpsl
sub
mov
jne
popf
sbb
cwtl
pushf
mov
les
jge
xor
data16
xor
add
sub
mov
call
aas
mov
movsb
mov
mov
sub
sti
aaa
sub
push
push
cmpsb
lret
jmp
addr16
push
outsl
out
js
xchg
pop
cmp
push
int
inc
popf
pushf
mov
int
pusha
leave
jbe
xlat
pop
cmpsb
shl
pop
ret
je
in
dec
data16
or
mov
fimull
jb
int3
dec
push
repz
or
mov
push
push
pop
neg
les
scas
adc
mov
push
add
int
sbb
or
es
and
pushf
insb
pop
mov
loop
shlb
jl
push
and
jmp
ljmp
sub
shlb
daa
cmc
loopne
jno
fistpl
and
add
push
jno
lods
xor
mov
testb
imull
mov
ret
mov
roll
push
and
mov
mov
fld
setg
jp
test
mov
or
lea
cli
clc
dec
mov
xor
int
or
icebp
decl
in
xchg
mov
std
addl
add
outsl
cmp
dec
mov
jno
adc
and
test
sub
fdivs
jne
nop
push
test
inc
pop
fsubl
out
fwait
inc
inc
mov
mov
jecxz
dec
mov
and
lea
jp
cwtl
jae
and
es
int3
cli
aaa
mov
xorb
dec
pop
outsb
and
iret
shlb
test
mov
sets
cmp
sarl
loope
ficompl
loop
js
push
mov
pop
std
imul
stos
add
jae
mov
inc
or
je
push
jg
push
dec
js
test
int3
jnp
ret
jecxz
add
and
out
xchg
ss
and
lret
mov
sub
fildl
push
mov
adc
scas
lock
or
and
out
jbe
xchg
cmp
xchg
hlt
sti
push
and
fsts
adc
adc
push
mov
pop
int
push
repz
mov
mov
inc
add
mov
loopne
ficompl
xchg
out
jb
pop
lods
jne
pop
ret
sar
aas
bound
push
mov
or
jae
pushf
frstor
outsl
out
xor
stos
xchg
stos
mov
jno
or
clc
int
cmpsb
lcall
loopne
pinsrw
out
jecxz,pt
out
cmp
call
movsb
shll
mov
and
mov
lea
cmp
shr
ss
ja
pusha
in
cltd
add
mov
mov
jg
arpl
int3
dec
sbb
lret
jbe
or
adcb
adc
cwtl
mov
jle
rorl
aam
repnz
jmp
into
push
xor
test
frndint
data16
cmp
fnsave
or
cs
scas
stos
icebp
imulb
xchg
test
push
cmp
xchg
or
sbb
aad
nop
enter
filds
stc
cli
sbb
test
xchg
jge
push
out
jl
inc
sbb
mov
or
add
loop
ss
mov
push
in
fisubs
mov
pop
inc
jae
jl
fucomi
inc
sbb
scas
movsb
dec
mov
loopne
outsb
scas
xchg
daa
or
or
pop
push
adc
call
dec
mov
push
or
xlat
push
pop
imul
dec
mov
pusha
popf
imulb
int3
push
inc
in
js
dec
or
mov
or
and
filds
add
pop
sub
and
fwait
pop
faddl
dec
leave
je
push
inc
xchg
xchg
lods
fsts
je
adc
je
add
aas
add
pop
mov
push
add
dec
add
dec
movsb
testl
mov
mov
inc
movsl
fs
push
cmp
aas
jg
dec
and
jns
push
pop
and
int
xchg
push
cld
mov
aas
push
jecxz
dec
enter
inc
adc
mov
loopne
cmp
in
sbb
mov
xor
flds
mov
insb
cmp
lret
mov
outsl
sbb
pushf
xchg
cwtl
repnz
xchg
and
inc
and
iret
movsl
jge
xchg
rol
fildl
adc
lahf
rcr
add
cld
push
in
sub
dec
inc
out
adc
pop
stc
xor
or
or
iret
push
test
cmp
stos
sub
leave
xor
loopne
push
loopne
js
or
xchg
xchg
mov
cmp
push
and
xrelease
push
loope
sub
xor
scas
mov
sbb
and
nop
xchg
dec
fistpl
push
pop
es
lret
not
pusha
pop
bound
scas
lcall
shl
test
inc
pop
cmc
adc
pop
dec
cltd
mov
mov
orb
adc
pop
scas
stos
mov
xchg
fimuls
clc
or
or
enter
xchg
and
pushw
cmp
cmp
sbb
add
lret
push
gs
js
mov
js
mov
dec
ja
mov
pop
mov
and
fucom
aam
inc
lret
jae
cmp
cli
adc
mov
jae
clc
out
inc
fdiv
pop
ret
mov
mov
jecxz
scas
ja
mov
je
xchg
lret
andl
dec
xchg
mov
dec
arpl
sub
loope
pop
or
xor
fildll
stos
movsb
repnz
cmp
loopne
push
movsb
or
push
or
cmp
aaa
jns
and
push
jmp
fists
jnp
outsb
popa
ds
mov
add
jns
mov
cmpsb
mov
mov
leave
push
mov
mov
lcall
mov
cmpl
inc
jnp
ja
cmpl
pop
mov
sbb
aam
inc
es
mov
mov
or
pop
aaa
js
imul
fidivrl
adc
add
jo
mov
ss
push
sub
and
mov
lods
popa
sbb
lahf
pop
push
mov
out
aas
jo
movsl
mov
out
imul
mov
adc
and
sub
aas
iret
mov
mov
inc
xlat
mov
out
in
or
sbb
ljmp
insl
data16
stos
xchg
sahf
sub
push
aaa
sbb
and
mov
cmp
sbb
lds
fxch
imul
popf
xchg
out
test
pop
and
hlt
xchg
mov
daa
sarl
cmp
fadd
inc
sbb
insl
and
jns
insl
push
add
sbb
dec
sarl
lods
nop
sarb
mov
add
xchg
adc
mov
fisttpl
xchg
cmp
mov
dec
int3
mov
stos
inc
cld
cld
inc
cli
popa
loope
sbb
fidivl
jnp
out
stc
xor
ret
les
jo
cmp
mov
xchg
jle
aam
dec
imul
fstpl
lcall
push
jno
jb
pop
add
mov
loopne
push
aad
sbb
jnp
cmc
pusha
js
shll
scas
repz
cmpl
sbb
orb
adc
jbe
cmp
pop
popa
mov
test
jae
icebp
push
xor
jb
jle
in
pop
inc
push
pushf
add
bound
popa
and
adc
lods
call
pop
sti
xchg
ljmp
mov
rcrb
mov
negl
hlt
xchg
mov
xchg
cmpsl
cmp
stc
cwtl
imul
repnz
mov
popf
outsb
ficoml
mov
pop
lods
movsb
mov
jae
adc
lods
sub
sbbl
mov
cli
or
and
jo
fisttps
pop
push
pop
dec
pushf
fmul
dec
int
xchg
das
ret
add
sub
incb
int3
jne
push
mov
lret
pop
lret
sahf
xchg
adc
push
fucompp
stos
mov
dec
xchg
std
add
cmp
cmp
call
adc
and
icebp
mov
test
or
testl
inc
andb
xor
sbb
jge
aam
andl
inc
cld
nop
lock
sub
outsb
pop
cwtl
out
int3
outsb
add
outsb
shl
filds
mov
lret
ret
lds
fldt
fnsave
paddw
xor
fisubs
mov
pop
inc
in
cmp
push
mov
test
and
xor
imul
mov
mov
push
push
push
jne
loopne
dec
mov
sar
pusha
mov
push
and
xor
jo
rol
dec
vpsubb
mov
sbb
daa
mov
ds
mov
cmpsl
mov
xor
add
out
mov
mov
pop
xchg
repz
mov
cmp
or
sbb
adc
and
xor
adcl
out
lods
mov
jne
pop
add
jb
aas
in
mov
pop
cmp
dec
aad
push
mov
popf
int3
lret
std
sub
inc
out
jle
or
orl
pop
mov
out
lock
dec
es
xchg
cmp
push
sbb
adc
sub
mov
flds
sbb
pushl
push
fidivrs
test
pop
add
mov
or
aam
or
jl
daa
jp
in
mov
push
mov
or
in
pop
mov
in
sub
lcall
jg
sbb
je
cmpsb
pop
dec
sarb
test
xchg
sarb
jae
mov
cs
aad
sub
mov
sahf
sbb
push
cmc
jmp
popf
jne
es
pop
push
xchg
dec
adcb
data16
xchg
and
inc
mov
cmp
mov
jg
repz
fwait
xchg
shll
out
loopne
xlat
out
inc
xor
cltd
addb
fdivl
ss
pop
fnstcw
add
pop
xchg
ss
call
rclb
frstor
xor
xchg
stos
cwtl
insb
xor
call
out
je
lods
pusha
inc
fs
sbb
in
popa
jnp
hlt
push
imul
lcall
or
jo
mov
fwait
adcl
xchg
xor
icebp
mov
dec
test
repz
in
out
mov
fdivrl
icebp
and
das
shll
data16
dec
dec
inc
out
jb
call
sbb
aas
stos
mov
inc
add
sbb
leave
fadd
and
sub
sbbl
fucomp
cli
ret
out
repz
mov
and
jo
mov
inc
xchg
aaa
cs
jno
ja
push
clc
into
repnz
test
loope
popf
mov
sbb
jo
inc
xor
adc
jb
sub
adc
xor
lret
cltd
sbb
add
mov
mov
adc
sti
aas
pop
mov
nop
pop
imul
pusha
cmp
fistps
push
push
scas
stos
fwait
stos
cmp
icebp
cwtl
jg
hlt
jo
out
fsubs
lret
push
mov
mov
lock
cltd
out
test
push
xchg
iret
imul
cltd
std
es
int3
fs
mov
out
cmpsb
rcr
dec
adc
xchg
shrl
adc
mov
cmpl
mov
add
xchg
orb
cli
sbb
xchg
js
push
movsl
xchg
pop
sub
and
push
icebp
pop
add
cli
mov
and
xchg
std
cmp
cltd
stos
divb
je
in
push
sub
pop
int
stc
pop
std
dec
hlt
stos
sub
xchg
sub
pop
add
push
mov
in
dec
mov
cmpsl
jle
mov
inc
jb
push
cmp
nop
sbb
xchg
out
sarb
xchg
inc
mov
test
dec
mov
push
push
sbb
hlt
lahf
ret
pusha
lcall
pop
jp
pop
pop
repnz
pusha
in
xor
sahf
mov
inc
lret
dec
fst
mov
or
push
fisubs
jo
xor
mov
pop
fisttpll
mov
out
add
add
call
inc
mov
test
jg
adc
movsl
cmc
lods
test
sub
inc
stos
cli
mov
test
jno
std
dec
incb
insl
and
mov
mov
inc
imul
bound
test
cwtl
icebp
mov
add
dec
pop
jns
cmc
pop
or
dec
mov
adc
sub
push
repnz
sub
stc
cld
fdivr
fsubrl
ljmp
lahf
dec
ror
movsl
xchg
sub
mov
and
mov
scas
jnp
movsb
xor
aas
cmc
test
cmp
ljmp
cltd
jne
je
push
push
inc
cs
iret
sbb
shrb
mov
mov
jl
bound
in
sbb
sub
sub
cmp
or
insb
sarl
or
and
add
mov
imul
mov
incb
adc
fidivl
xlat
popa
mov
pusha
push
cmp
lds
push
pop
mov
mov
xchg
pop
sbb
mov
mov
gs
imul
sub
es
sub
jmp
mov
and
je
repz
adc
int
push
in
sub
xor
imul
lods
das
or
push
pushf
inc
test
or
leave
popf
jae
mov
fs
stos
sub
daa
xchg
push
testl
fmuls
das
mov
lahf
stos
cwtl
inc
xchg
or
and
mov
stos
dec
loop
pop
lret
ljmp
or
in
pushf
fimuls
fidivrl
mov
mov
out
mov
sbb
mov
cmp
imul
nop
scas
lret
cmc
sahf
dec
add
sub
push
pop
out
cmp
addr16
inc
xchg
pop
insl
es
pop
push
movl
sbb
out
insl
insb
out
dec
scas
aam
inc
nop
xor
sbb
scas
ret
dec
sahf
sub
addb
xlat
cmp
cmp
lds
jo
xchg
and
dec
cmpsb
pushf
in
je
add
insl
jge
scas
je
stos
in
or
jmp
push
imul
jnp
mov
aas
fisttps
sub
xchg
pushf
mov
add
mov
mov
cltd
arpl
out
xchg
into
or
jns
mov
sbb
sub
add
addl
stc
push
fisttps
lret
add
push
mov
lret
icebp
and
cld
pop
call
inc
std
adc
or
or
push
mov
xor
movb
bound
mov
push
test
push
flds
inc
stos
hlt
arpl
mov
adc
dec
sbbb
lahf
add
fidivl
addr16
jg
jb
push
and
ja
sti
mov
fmull
xchg
loope
pop
xorl
mov
pop
push
cs
mov
jg
xor
sbb
push
in
addr16
mov
dec
outsb
repz
frstor
sub
pmaxsw
mov
shlb
adc
mov
cli
mov
rol
mov
inc
mov
lea
inc
rol
lock
ja
sub
xor
dec
stos
xchg
ret
enter
aas
loopne
js
cmp
lea
push
lret
xchg
gs
or
ss
cmp
daa
jae
test
es
add
inc
sbb
out
and
sub
mov
rcr
hlt
jb
adc
inc
sbb
ja
dec
in
cwtl
push
add
push
and
and
and
push
pop
out
loopne
jbe
adc
dec
das
push
and
leave
or
pop
xor
fidivs
in
es
ret
pusha
add
fsubl
or
push
cltd
pop
addr16
jne
iret
xchg
or
adcl
lock
jns
sub
xor
pop
out
in
dec
sub
pushf
gs
ret
cmpsl
inc
jg
rdpmc
leave
fwait
or
mov
jg
lret
dec
inc
mov
inc
cltd
ret
pop
rcrl
mov
fnstsw
test
xchg
pop
bswap
push
imul
adc
inc
pop
mov
rclb
in
lods
jge
bound
arpl
cli
xchg
cmp
fsubrl
in
and
dec
mov
mov
mov
pop
jl
lret
add
rcr
clc
and
das
adc
xlat
shl
add
insl
jno
out
lret
movl
or
shrb
pop
push
gs
jl
dec
fnstenv
mov
mov
sahf
mov
adc
or
ret
inc
fdivrl
xchg
addr16
icebp
jecxz
sub
mov
adc
push
adc
jae
iret
dec
add
jb
jno
add
sub
lahf
lds
adc
jp
cmp
dec
sarb
call
lds
enter
ficomps
lods
js
daa
cmp
and
dec
movsl
mov
or
shlb
loopne
addl
xchg
mov
xchg
outsb
mov
daa
dec
or
fcompl
jg
popa
outsl
enter
aad
lcall
push
andl
xchg
dec
or
add
push
sub
imul
mov
mov
pop
or
jge
sbb
mov
cmp
mov
xor
xchg
repz
adc
lods
mov
popf
xchg
shl
mov
dec
arpl
test
insb
xor
int
pop
js
cmc
dec
mov
add
jae
jmp
or
dec
lahf
arpl
inc
xlat
mov
xchg
xchg
sbb
jecxz
test
icebp
inc
pop
loop
xor
mov
lret
clc
inc
dec
mov
call
iret
pop
pop
aam
pop
aam
sbb
mov
scas
xchg
insl
out
in
lcall
adc
ss
ds
data16
popf
mov
mov
inc
rolb
fdivl
cmpsl
jg
out
jge
inc
jno
shlb
sub
cmp
arpl
aam
shrb
pop
dec
inc
out
lea
jl
outsl
xchg
mov
insl
imul
inc
fmuls
sub
dec
jle
divl
adc
xchg
mov
enter
jmp
xor
xor
in
mov
sub
mov
std
lahf
xor
lock
sbb
iret
cmp
bound
sub
outsl
js
adc
and
lcall
sub
jno
fbstp
roll
mov
aam
adc
push
pop
mov
in
call
in
into
xor
repnz
adc
jl
dec
in
push
jg
add
mov
insb
adc
mov
sti
test
xchg
out
xchg
ret
ficoml
dec
jecxz
in
icebp
or
sub
jmp
add
dec
scas
push
xor
cmc
adc
imull
adc
dec
cld
or
aam
sub
inc
in
movl
insl
add
hlt
jmp
dec
rol
adc
or
pop
sub
sti
xlat
faddl
mov
cmc
push
loope
sbb
mov
mov
pop
fs
pop
fisttpll
iret
shlb
jecxz
xor
add
sub
lock
mov
sbb
das
js
mov
mov
mov
lock
lahf
push
sbb
mov
cs
lock
divb
inc
cmpsb
push
fbstp
mov
gs
stc
mov
out
fucom
les
icebp
sbb
push
ret
mov
arpl
xchg
adc
lods
xchg
mov
lds
push
ret
ja
movsl
popa
jl
mov
sub
xor
or
xor
xchg
ds
xchg
sub
popf
cmp
pop
add
je
dec
iret
xor
or
or
xor
int3
lret
mov
add
or
xchg
test
pop
push
xchg
loop
mov
icebp
push
jnp
test
lea
and
fidivrs
shrl
or
popf
pushf
aam
in
add
sub
cmp
dec
push
xor
cmp
lods
sbb
xchg
out
push
in
subl
xor
sbb
add
xchg
sbb
push
mov
jns
mov
outsl
cmp
in
push
faddl
fs
or
fld
ja
add
outsb
data16
push
cmp
loop
aaa
fdivrp
pushf
add
pop
xchg
fs
fsubrl
les
cs
rcr
outsb
push
and
loop
fsub
sti
lock
lods
add
jb
stos
and
push
pop
sbb
pop
repz
mov
and
das
adc
xor
ficomps
dec
sbb
out
gs
or
sti
lods
dec
sbb
mov
push
xor
dec
fs
cmp
inc
dec
xchg
and
mov
dec
ss
push
gs
lret
sbb
pop
gs
mov
dec
ficompl
sarl
outsb
sub
lods
bound
sub
mov
filds
and
inc
arpl
ret
fisubl
jnp
jno
lea
sub
test
inc
test
lret
xorl
pop
aas
lret
stos
push
cld
cltd
mov
mov
push
aad
movl
jae
out
jns
movsl
jno
loop
andl
push
outsl
jp
sahf
adc
and
add
jbe
loope
xor
sahf
loopne
ss
lcall
fdivl
xchg
mov
add
mov
cmc
cli
cmp
inc
dec
aaa
pop
adc
fsubl
pop
out
mov
push
roll
adcl
lods
bound
adc
aaa
das
push
lds
movsl
sub
loopne
mov
xor
nop
les
das
aaa
jge
in
std
push
jmp
les
popf
stos
mov
and
cmp
jle
add
add
sbb
xchg
scas
lods
jge
jecxz
stos
jno
clc
out
jbe
out
dec
xchg
lods
mov
pusha
out
repz
sub
pop
ret
push
cmpsl
inc
jnp
rcl
mov
shlb
ss
into
loop
sub
pop
mov
loope
pop
stos
lds
nop
out
xchg
stos
dec
das
push
or
add
and
adc
pop
faddp
jl
sahf
mov
lret
jb
lods
xor
outsb
xchg
cmp
xchg
scas
int3
repz
jns
sub
lcall
jg
lods
in
out
dec
das
jle
pop
call
orb
stos
lock
mov
lret
inc
jecxz
push
dec
add
cmc
lds
mov
mov
pop
jmp
arpl
lods
mov
ja
push
push
inc
xchg
add
shrb
hlt
xor
push
int3
mov
movsb
dec
addb
int3
popa
cs
push
jle
rorl
sub
mov
int
inc
pusha
mov
dec
lods
dec
sti
icebp
xchg
imul
push
movzwl
mov
or
aam
out
movsl
sbb
push
jmp
test
int3
pop
cs
push
jnp
xor
cli
loope
ret
xor
scas
xchg
push
xor
pushf
xor
cmpsb
and
sti
and
rclb
dec
ret
mov
pop
mov
pop
or
clc
pushf
addr16
out
sub
or
dec
mov
push
xor
aas
daa
cs
xchg
push
movsl
fisubrs
mov
fs
adc
inc
pop
js
pop
es
jg
add
movsb
push
mov
xchg
xchg
das
or
jl
mov
jecxz
bound
out
xor
shll
xchg
mov
pop
mov
and
test
pop
hlt
aad
pop
or
xchg
jns
push
xchg
enter
das
xor
stc
js
adc
mov
pop
cmpsl
cmp
push
dec
jb
lahf
fucomi
leave
lods
test
iret
or
sub
fmull
out
jecxz
xchg
xchg
in
sbb
pop
ss
jecxz
das
cmp
sub
mov
lock
xchg
into
jb
lock
lds
cld
addr16
and
sub
xchg
sahf
mov
mov
xor
mov
mov
and
ret
push
outsl
xor
adc
push
mov
jp
jno
mov
jbe
inc
mov
dec
test
dec
or
leave
fmul
testb
pop
dec
pop
xchg
mov
pushf
shl
or
xor
mov
fisubrl
lods
sbb
xchg
cwtl
sub
add
push
xchg
sbb
jg
push
js
arpl
inc
and
loopne
gs
pop
or
ljmp
ds
fmul
hlt
dec
push
xchg
lahf
paddsb
cli
and
fldt
pop
push
pop
pop
hlt
nop
push
scas
sbb
fisubl
lock
out
cmp
enter
or
idivl
int
cmp
mov
imul
dec
rorb
xor
lods
pop
dec
mov
jecxz
test
gs
and
stos
stc
out
insl
mov
dec
sbb
and
lods
inc
scas
inc
bound
sti
inc
cli
or
push
shll
sbb
or
sub
add
loopne
sahf
negl
cmpsb
jb
mov
mov
cltd
xor
rolb
xchg
pop
cmpsl
in
insb
pop
or
test
sti
push
aad
pop
and
mov
out
adc
sub
in
mov
jb
push
jnp
daa
and
int3
mov
clc
mov
movsl
mov
add
xchg
push
fs
rolb
adc
mov
fwait
mov
add
xchg
push
dec
hlt
mov
cld
clc
movsb
dec
or
jne
xor
pop
imul
xor
fdivrl
adc
scas
lcall
dec
mov
lret
les
xchg
mov
fiaddl
inc
pop
add
mov
dec
xchg
and
out
in
test
push
pop
ret
iret
cld
mov
pop
adc
out
jb
sub
imul
out
xchg
xchg
sbb
sub
data16
repz
add
push
inc
mov
push
into
mov
das
sub
clc
hlt
faddl
and
xlat
xor
xchg
adc
ljmp
icebp
adc
clc
outsl
inc
mov
push
mov
jbe
lret
push
in
dec
stc
pop
outsl
adc
jno
xor
shrl
mov
add
setge
shrb
xchg
bound
and
lret
call
push
int3
xor
dec
mov
or
xchg
pushf
sbb
es
pop
testb
cmpsb
add
xchg
mov
mov
sub
rcr
arpl
aam
lret
les
mov
orl
or
int3
cmpsl
jl
movsb
xchg
std
sbbl
push
mov
movsl
mov
je
enter
sbb
cmpb
sub
dec
fnstcw
rclb
test
adc
xchg
jno
jnp
ss
cmc
icebp
push
sub
test
xchg
aas
xchg
in
mov
and
test
and
shll
popa
ret
cmpsl
cmp
cmp
pop
hlt
repz
ss
mov
lods
popf
fs
cmpsb
fucom
jae
in
jge
fldenv
push
adc
faddp
cmp
inc
xor
jmp
mov
xor
adc
jge
stos
jb
dec
test
out
and
jno
stos
sub
pop
out
ret
pop
ret
mov
in
cmc
push
mov
and
push
jns
ljmp
mov
fisttpl
xchg
fwait
mov
test
pop
adc
and
inc
jbe
divb
sbb
and
xchg
test
push
js
scas
mov
push
fs
imul
dec
push
sub
jmp
fstps
jge
insb
mov
iret
jle
or
pop
sbb
mulb
scas
and
hlt
lret
mov
add
mov
xor
mov
sahf
lock
xchg
sub
jecxz
push
mov
mov
xchg
jl
lahf
dec
adc
xchg
adc
jns
sub
push
xor
lods
mov
iret
or
jno
dec
imul
sub
test
movl
push
test
addb
and
xor
test
or
out
inc
jns
jp
pop
or
mov
aad
xchg
cmpsb
adc
add
mov
mov
int
sbb
scas
inc
fdivl
xor
mov
mov
cmp
xor
test
call
jecxz
pop
sub
aas
ret
push
cmp
or
mov
cmp
ret
pop
sahf
fstpt
xchg
data16
std
cmp
mov
clc
sbb
sub
pop
ret
aam
inc
into
lock
ljmp
or
shll
js
jecxz
bnd
mov
ja
xorb
insl
xchg
adc
push
inc
lret
jbe
in
inc
test
inc
ss
xchg
int
mov
xchg
mov
addr16
loop
jmp
or
adc
out
cmp
lds
inc
fldt
dec
mov
aam
sti
xchg
and
stos
fisubs
dec
xchg
mov
scas
in
inc
adc
cld
jbe
test
sarl
fdivl
push
sub
in
in
add
outsb
dec
push
out
mov
sub
call
cli
adc
mov
add
repnz
jnp
insl
pop
mov
out
sub
mov
jbe
or
dec
jno
shrl
testl
jmp
jl
scas
sub
or
push
mov
in
mov
pop
xchg
pop
mov
dec
stc
xor
stc
cli
hlt
dec
mov
add
xchg
add
dec
sub
push
push
xor
adc
popf
mov
repnz
push
flds
lods
mov
adc
push
jne
rorl
movsb
cmp
xchg
jbe
repz
add
imul
decl
es
clc
jne
testl
jp
sahf
push
mov
je
hlt
mov
cmc
shrl
push
fadds
or
mov
pcmpgtw
lds
pusha
jno
xor
loop
jo
das
je
cmpsl
xor
xor
rorb
fwait
sub
or
cld
scas
dec
jmp
or
iret
lock
rolb
lahf
add
push
lods
pop
mov
movsb
into
xor
mov
ficoml
rcll
jmp
inc
inc
cwtl
push
cmp
cwtl
sbb
dec
mov
out
xor
inc
adc
shrb
js
sbbb
or
lahf
sub
leave
xchg
mov
push
mov
or
loope
mov
pop
jecxz
add
int
mov
daa
in
movsb
and
xchg
icebp
adcb
lods
bnd
ucomiss
sahf
in
mov
js
hlt
push
mov
test
icebp
jbe
daa
jne
cmpsl
or
mov
stc
mov
jle
aaa
mov
cmp
fiaddl
nop
movsb
jne
xorl
xchg
xchg
pop
in
imul
in
mov
mov
push
pop
dec
popf
mov
push
push
push
mov
dec
add
lods
into
aam
addr16
xlat
in
jp
mov
cmc
mov
push
fistl
outsb
mov
in
pop
push
test
fnop
cmc
pop
in
cld
data16
pushf
mov
shrl
dec
outsb
jecxz
out
incb
movsb
sub
dec
daa
push
mov
push
jb
rclb
fcoms
lret
mov
enter
aaa
cld
adc
imul
das
cmp
lea
pop
mov
sub
add
lret
shr
aam
xlat
lea
cmpsl
dec
mov
sub
je
arpl
aam
pop
orl
mov
shll
and
pop
push
xor
movsb
andl
fmull
out
dec
cmp
mov
push
xchg
mov
and
push
lea
adc
xchg
movl
cmp
adc
enter
push
sbb
mov
aas
pusha
js
mov
les
cmp
les
mov
jl
cmpsl
insl
push
ja
mov
sub
push
orl
mov
cmpsl
out
cmpsb
int
inc
shrb
cmpsl
cmp
inc
push
xchg
adc
imul
push
imul
jg
cld
or
incl
push
lret
popa
stos
jne
mov
clc
pop
mov
dec
sbb
ja
sub
mov
jo
sub
int3
or
daa
mov
imul
out
xchg
mov
jge
scas
add
mov
leave
jmp
repnz
xor
out
faddl
push
in
sub
in
cmp
dec
jb
test
rcr
jo,pn
pop
aam
dec
mov
mov
inc
iret
rorl
or
jmp
out
stc
pop
pusha
popf
push
test
les
jne
cld
test
imul
dec
rorl
js
bswap
xor
mov
mov
push
arpl
iret
lret
rclb
xor
mov
xchg
pusha
jp
jecxz
fistpl
aam
adc
lahf
dec
sub
or
pop
pop
outsb
movsb
insl
cli
lods
dec
movsb
pop
cmp
and
lea
outsl
inc
cld
mov
xor
int3
push
test
sahf
subb
mov
cmp
sub
cmp
xchg
sti
out
dec
gs
sub
xchg
pushf
mov
hlt
pop
mov
jge
jne
xor
or
and
sbb
or
popa
icebp
jl
call
mov
arpl
jns
sahf
scas
adc
mov
mov
xor
sub
sti
ret
mov
pushf
outsb
fcmovne
adc
cwtl
push
xchg
repz
frstor
sbb
fs
repnz
loopne
sub
addr16
xchg
mov
out
jle
out
xchg
mov
out
dec
lods
iret
pop
mov
test
dec
pop
or
dec
je
fidivrl
inc
outsb
es
add
push
sbb
ja
std
pushf
mov
loopne
add
adc
je
sub
push
mov
subb
or
inc
stos
aaa
cmp
enter
mov
insl
rcrb
push
das
out
push
out
daa
aam
jno
sbb
push
insb
scas
pop
out
jae
mov
data16
arpl
adc
dec
outsl
vmovaps
dec
pusha
cmp
imul
das
jmp
mov
dec
cmpsb
in
mov
sbb
adc
popf
enter
loopne
mov
lds
and
clc
lret
cmp
and
mov
in
mov
cli
lods
sbb
jae
fisttps
insl
rclb
fistpll
lahf
daa
cld
ljmp
movsl
pushf
mov
dec
es
or
mov
or
dec
add
pop
arpl
shrb
sbb
push
enter
cmpl
hlt
imulb
aas
cmp
sbb
add
jl
into
fcmovne
hlt
mov
cmpsl
xor
push
ja
push
pop
dec
sahf
adc
jnp
jl
pusha
pop
adc
in
pop
mov
mov
cmp
jp
leave
push
dec
dec
cwtl
and
mov
lcall
add
cmp
sub
push
add
xor
mov
lcall
sbb
mov
or
xor
es
mov
fistl
mov
or
lahf
fadd
out
out
xor
rclb
and
insl
xor
je
adc
imul
jne
js
mov
not
out
scas
mov
mov
inc
jnp
add
rcl
ja
or
sbb
xchg
cli
js
lcall
push
addr16
lock
loopne
out
inc
ljmp
pop
aam
mov
mov
mov
cmp
sbb
imul
add
clc
gs
rolb
mov
push
out
out
sub
fcmovnbe
pop
and
loope
xchg
hlt
sbb
xchg
xchg
mov
pusha
je
push
jmp
rcrb
cmc
incb
mov
sub
enter
cmp
pop
ret
insl
push
pop
push
lock
sbb
cld
lret
sbb
xor
ss
popf
lock
mov
mov
into
pop
xchg
bound
mov
iret
jne
ss
sbb
dec
mov
push
push
and
repz
movsl
sub
inc
ret
fldlg2
jle
mov
push
push
pop
jecxz
cmp
and
cli
sub
aam
dec
xchg
outsb
cmp
push
lods
stos
push
movsb
mov
cld
push
mov
adc
jg
mov
xor
add
dec
mov
or
idiv
push
out
dec
dec
out
in
lahf
push
or
into
outsl
cli
sub
mov
dec
or
xchg
or
push
cmpsl
dec
into
or
jl
cmp
jl
insb
mov
xchg
xor
ss
sti
and
push
inc
dec
mov
mov
xor
in
adc
leave
outsl
xchg
movsb
test
or
jb
and
fdiv
arpl
mov
movsl
in
int
lods
popf
inc
cmp
adc
fsubs
mov
in
mov
mov
lea
pop
adc
sbb
rclb
fdivs
and
out
fdivs
loope
mov
loopne
lahf
lods
inc
aad
aam
jge
popf
push
dec
push
imul
cmp
nop
jae
outsl
das
or
popf
push
pop
or
jns
cld
sub
out
cmp
mov
pushf
lea
mov
add
push
xorb
xchg
mov
int
fidivrl
nop
cmp
xor
mov
sbb
jmp
mov
add
gs
aam
mov
pop
popf
mov
jnp
jno
push
xor
scas
dec
lods
arpl
js
push
popf
mov
mov
inc
sub
mov
jmp
push
daa
or
test
cmpsb
rdmsr
movsl
es
fucomip
loopne
loopne
arpl
push
inc
pop
outsb
mov
in
cmp
sahf
aam
or
sbb
jne
lock
mov
popf
and
adc
aad
aad
mov
ficoms
xchg
xchg
fwait
dec
out
jg
lcall
cmp
inc
popf
mov
jnp
sbbb
into
and
in
inc
cli
push
dec
pop
adc
repz
jl
sti
jne
nop
pop
jmp
push
int
xchg
in
call
or
int
jp
cmp
xchg
and
and
cmp
in
push
push
mov
jne
in
cmp
addb
inc
out
ja
les
pop
push
xchg
into
popa
xlat
push
jbe
sbb
es
jo
sbb
pusha
lods
lahf
adc
jae
lods
mov
or
movsl
arpl
stos
lock
mov
fnsave
jae
jecxz
repz
dec
push
mov
add
lcall
add
stos
or
fs
mov
pop
mov
jno,pn
inc
or
add
sbb
mov
push
insb
int
cli
int3
in
xor
and
loope
or
dec
outsl
mov
or
fimuls
loope
jle
int3
filds
mov
xchg
ss
jl,pt
lods
mov
stos
push
pop
pop
neg
mov
adc
sub
pop
shlb
pusha
cwtl
fildll
jno
stos
es
dec
dec
mov
inc
mov
or
fistps
cs
test
xor
iret
and
sbb
test
xor
out
xchg
insb
mov
sub
pop
push
xorl
cmp
repnz
sbb
leave
ja
sub
into
popa
jp
push
dec
mov
pusha
and
xor
push
aaa
adc
lods
push
push
fadd
sub
dec
out
cmpsb
hlt
mov
in
sbb
lahf
jne
pop
rcrl
jno
push
jbe
xchg
insb
mov
jmp
pop
xor
mov
mov
and
mov
pop
adc
cmp
in
out
adcb
sbb
dec
cs
xchg
dec
fdivrs
cmp
out
inc
addr16
cmpsb
lahf
jnp
sbb
arpl
mov
js
lret
lret
cwtl
ds
fistl
es
and
cs
or
cmp
loop
xor
clc
pop
inc
into
testl
add
lcall
mov
xchg
out
shr
stos
adc
ds
lcall
and
aad
cmpb
ss
mov
jae
cvtdq2ps
insb
insb
shlb
xchg
shrl
xor
in
enter
rcr
rclb
jno
cli
jp
nop
mov
push
sbb
jns
push
jl
mov
inc
adc
cmp
cmp
ret
fmul
repnz
femms
jno
jmp
fmul
sbb
pop
mov
aas
hlt
gs
repz
xchg
xchg
xchg
push
sbb
pop
test
push
aad
sbb
jle
xor
xchg
jl
add
jg
xorb
int3
outsb
or
xor
aas
stc
stc
cmpb
lret
cmp
sti
cwtl
les
in
rcrl
and
mov
push
out
fld
mov
ds
popa
lds
dec
bound
in
mov
xlat
insb
jbe
fldcw
push
xchg
dec
out
clc
lahf
pop
sti
mov
pushl
add
mov
mov
adc
mov
and
and
into
xchg
xchg
bound
push
fisubrs
out
xchg
inc
adc
inc
mov
xor
or
dec
mov
jbe
mov
jb
test
sarl
stos
cld
sbb
dec
or
pop
mov
into
out
dec
jecxz
and
lcall
dec
cli
in
push
cmp
xor
cmp
jmp
dec
lods
xorl
fdivr
and
insl
jle
std
stc
and
mov
test
cmp
inc
clc
fstpt
sub
aaa
repz
mov
outsl
aam
scas
lea
pusha
in
mov
and
xchg
rcrb
sbb
fscale
sarb
cmp
inc
mov
or
push
repnz
aam
inc
add
xchg
adc
int3
gs
test
sbb
push
mov
jbe
ror
lret
cmp
mov
insl
repnz
clc
push
mov
pushf
mov
neg
ret
add
decb
stos
stos
int
jne
pop
imul
push
sub
mov
lret
cld
dec
loope
or
xchg
test
xor
int3
add
jae
cmp
or
std
dec
out
mov
cmp
mov
sbb
fdivrl
sbb
sub
popf
sti
mov
xor
cmpl
mov
loopne
mov
xor
or
push
out
sbb
adc
cmc
sub
iret
repnz
repnz
and
shl
sbb
nop
mov
inc
mov
sub
and
imul
sbb
mov
loop
cs
push
or
push
out
jmp
pushf
xor
mov
es
fnstsw
js
fiadds
in
dec
jle
movsl
out
pop
lods
and
xchg
shl
adc
out
mov
das
pmaxub
outsl
pop
inc
cmp
jle
stc
pop
mov
repnz
ja
xchg
mov
mov
and
push
mov
lahf
jge
dec
shll
add
jb
sbb
ret
popa
sbb
hlt
cwtl
imul
test
mov
ret
jno
sub
push
and
sbb
out
icebp
add
loop
xchg
xor
loope
dec
jbe
add
stos
pop
jecxz
hlt
cmc
out
loope
dec
inc
cld
enter
inc
cmp
xchg
add
xchg
inc
pushf
or
fisttpl
jae
push
mov
fadds
pop
clc
test
inc
sti
jnp
adc
jecxz
xchg
sbb
cmp
addr16
cmp
pusha
sbb
idivl
xchg
hlt
jnp
nop
push
idivl
push
xor
add
or
mov
fmull
andl
repnz
mov
loopne
push
mov
sub
and
adc
mov
pop
mov
lahf
loop
pop
mov
adc
and
jle
lods
mov
std
jl
decb
sub
rcrl
loop
pop
sbb
rcl
jle
loop
lods
pop
lods
dec
xor
xchg
jg
outsb
test
jg
push
das
lahf
mov
movsb
test
mov
jo
shlb
cs
xor
je
stos
mov
dec
adc
mov
mov
loope
adc
sbb
xchg
mov
cmp
mov
adc
jmp
andb
dec
cmp
pop
out
pop
mov
xlat
mov
xor
clc
cmp
or
pushf
jne
out
popf
sbb
mov
int3
sbb
dec
mov
jge
stc
cwtl
jbe
outsl
out
sar
sbb
mov
cwtl
loope
les
repz
sub
pop
shr
scas
mov
lret
push
aam
mov
adc
icebp
sub
movsl
dec
cmc
mov
test
into
out
imul
cmpsb
push
and
jo
inc
stos
sub
jno
cli
xchg
decb
jae
iret
fcoml
call
mov
lods
cmpsl
adc
stos
adc
xor
inc
mov
popf
popa
scas
push
pop
aad
xorl
into
stos
data16
cli
sbbb
dec
or
test
jg
add
cmp
pop
fs
or
cltd
jmp
mov
aaa
int
dec
jbe
xor
out
mov
mov
sbb
cmp
push
test
jmp
loope
cli
mov
shrl
std
in
scas
jmp
ret
push
frstor
adc
stc
lods
inc
inc
inc
jne
lret
jecxz
add
mov
dec
iret
or
pop
mov
pop
push
popl
and
mov
jg
addb
fisubl
xchg
xchg
fsubl
orl
loopew
push
lods
jb
testl
or
rcrb
jbe
dec
pop
fisubrs
or
lods
arpl
jne
jnp
push
mov
cmp
hlt
bnd
pop
fs
pusha
cltd
push
or
movsl
sub
jae
xchg
mov
mov
pop
or
cmp
or
insl
je
aad
or
sub
cmp
lcall
cmpl
pop
das
pop
test
sbb
push
mov
pop
decb
les
or
cmpsb
es
and
mov
aas
mov
imul
add
cmp
cmp
mov
xchg
xchg
testb
mov
cmp
sbb
xchg
jne
adc
imul
cmp
jge
sub
push
add
sbb
loop
lret
add
outsb
cltd
jb
fcompl
stc
rorl
mov
sub
jnp
pop
mov
pop
and
xor
aas
push
es
inc
test
push
inc
add
pop
jo
testl
mov
mov
stc
test
push
add
test
push
fstpt
mov
lret
jb
clc
or
or
lea
mov
adc
data16
aam
cld
pop
mov
loope
dec
dec
mov
dec
call
jle
test
dec
push
test
fimuls
inc
insb
and
xchg
mov
dec
adc
lock
add
adc
jge
nop
jmp
jmp
adc
mov
jbe
mov
jmp
mov
daa
inc
or
lods
push
call
in
pop
call
fwait
add
test
enter
ret
mov
mov
lret
pop
push
rolb
jge
push
xchg
les
int
sub
and
call
sub
pop
mov
insb
push
fs
jecxz
adc
int3
or
inc
shll
je
fwait
pop
sbb
ljmp
lret
in
out
xchg
les
push
ret
clc
xor
xorl
leave
dec
lcall
pop
call
push
and
test
ss
and
outsb
aam
add
or
nop
ss
cld
out
jge
pop
dec
aas
adc
mov
mov
ds
push
arpl
cltd
sbb
pop
lahf
dec
and
sub
mov
xor
pop
xor
movsb
dec
xlat
xchg
mov
pop
jmp
stos
popf
xor
mov
stos
or
jge
out
cmp
jmp
test
repz
sbb
sub
cmp
ds
mov
loopne
or
add
push
mov
data16
aas
xchg
cmc
lcall
xorb
fnstenv
loope
fsubrl
dec
sub
or
inc
int3
jnp
scas
mov
clc
mov
jno
adc
add
cmp
pop
lcall
nop
xchg
push
jl
push
dec
mov
ja
mov
push
out
push
rcll
add
popf
add
test
fs
rcr
test
mov
insl
enter
jo
lods
pop
jo
or
push
gs
xchg
std
and
jb
or
dec
rcll
in
fadds
stos
shrl
jnp
out
jb
xchg
ljmp
outsl
add
repz
cli
aas
fldpi
xchg
scas
or
das
int
or
xchg
cmp
sbb
add
dec
mov
data16
dec
fldl
xchg
out
testb
icebp
popf
add
adc
repz
js
and
movsl
test
xlat
mov
jnp
adc
push
ficoms
hlt
mov
fdiv
mov
scas
mov
push
inc
icebp
and
subl
es
push
jecxz
ret
cmp
inc
push
sbb
pop
pop
ljmp
jo
mov
jae
cmc
bound
fiadds
cmp
xchg
pop
jno
sub
dec
dec
negb
jb
xchg
shrb
ja
shr
adc
pop
push
push
mov
in
icebp
push
testl
in
pushf
js,pt
cli
pop
pusha
push
inc
outsb
leave
dec
pop
or
and
nop
or
enter
cmc
mov
std
imul
dec
sub
cmpsb
mov
fdivs
xor
in
sbb
lods
loopne
sbb
scas
and
loope
test
pop
push
notb
jg
add
mov
stos
hlt
iret
push
sub
xor
icebp
push
pop
mov
jo
jno
mov
add
xor
jne
outsb
add
mov
fiadds
lock
fcomps
iret
fisubl
xchg
sbbb
jle
clc
push
sbb
and
les
gs
icebp
pop
sub
cwtl
mov
lcall
lods
popa
add
fwait
mov
add
mov
cs
hlt
sti
negl
inc
stos
cmpsb
lock
clc
push
pop
add
xor
sbbl
push
in
jae
out
das
and
rcll
iret
pop
pop
push
out
mov
out
add
hlt
repz
and
jno
adc
loope
push
rolb
or
inc
fbld
or
sti
ror
mov
or
pop
imul
xchg
sbb
sarl
push
lods
fst
movsb
sbb
xor
repz
repnz
fmul
shll
repnz
push
dec
lods
push
fwait
dec
test
mov
data16
shll
mov
mov
enter
cltd
rclb
xor
lret
pop
and
das
sbb
call
loop
arpl
xor
sub
mulb
pop
insl
pop
adc
int3
clc
clc
hlt
ds
jno
dec
push
lods
xor
lret
out
aaa
mov
test
outsb
mov
adc
popa
jmp
cmp
mov
jl
fwait
lods
xchg
es
xchg
adc
push
jg
test
pushf
mov
add
pop
cmpsl
push
jb
jns
mov
jbe
push
ret
int3
or
pop
stos
push
add
lret
decl
pop
into
inc
or
add
mov
jg
outsb
push
mov
lock
dec
mov
in
ja
scas
sub
stos
test
ficoml
sbb
add
sahf
xor
inc
xchg
jl
pop
gs
xor
fmull
dec
ljmp
fs
loop
inc
gs
scas
mov
cli
pop
cld
addr16
pop
and
sti
push
ds
dec
add
push
fcomip
mov
and
cltd
cmp
mov
dec
adc
adc
leave
aas
mov
xchg
adc
fisubs
outsb
repnz
inc
pop
aas
jb
mov
mov
stc
stc
subb
xchg
cli
push
mov
shll
outsl
adcb
and
ja
lock
adc
clc
xor
xchg
mov
mov
iret
mov
inc
mov
scas
cld
mov
sbb
mov
jns
cmpsb
mov
push
clc
mov
out
fcmovnbe
pop
xchg
mov
xor
or
jg
out
in
leave
movsb
push
repnz
dec
or
aas
mov
xor
jnp
push
cmpsb
jg
cmp
notb
lahf
jecxz
cmpsb
fistpl
ljmp
lds
cmp
out
dec
xor
insb
scas
clc
into
lcall
icebp
mov
jge
ret
mov
aaa
push
push
clc
clc
pop
outsb
mov
jne
clc
scas
repz
in
or
loop
rorl
dec
xchg
inc
insb
pop
cmp
xchg
js
jno
mov
push
pop
xlat
cs
dec
lods
lea
mov
mov
sahf
stos
xchg
lock
es
or
les
outsb
cmc
jp
inc
xorl
pop
aaa
in
lea
shll
inc
mov
cld
pop
out
fstpl
mov
pusha
inc
dec
sti
fwait
or
std
ret
lods
dec
and
hlt
xchg
mov
and
sub
fstpl
jae
dec
subl
cmp
mov
dec
push
dec
cmp
add
adc
test
xchg
out
or
leave
mov
out
xchg
cmp
adc
scas
mov
std
stos
cmp
adc
push
push
mov
mov
fsubl
xchg
jnp
enter
aam
jno
push
pop
dec
jge
ret
or
imul
xchg
enter
aas
mov
enter
sbb
adc
stos
into
into
out
enter
mov
jbe
hlt
cli
sbb
and
jbe
xchg
add
inc
cltd
mov
lea
scas
fsubrl
cltd
mov
dec
jne
jae
enter
test
mov
les
outsl
jmp
cmp
stos
pop
test
pop
scas
add
dec
jbe
gs
inc
stos
mov
mov
cli
test
test
pop
xchg
sets
repnz
loope
call
push
xchg
jmp
push
push
jbe
repnz
ret
or
xchg
add
cli
xor
outsl
lods
adc
add
push
xor
adc
fst
jp
or
cmp
stos
jae
jns
shll
sub
pop
cmp
inc
insb
call
test
pop
enter
and
mov
pop
cmp
add
les
inc
push
insl
imul
mov
and
out
popa
jb
add
loopne
xchg
nop
mov
mov
mov
xorl
movsb
test
mov
xchg
ja
lcall
cmp
dec
lds
test
imul
jle
cmc
mov
adcl
call
outsb
sub
nop
mov
mov
icebp
xchg
and
divl
add
loope
push
xor
mov
inc
mov
es
fsts
fs
add
rcll
cmp
and
idivb
pop
mov
out
sub
push
mov
roll
mov
jns
and
jno
push
fcos
in
sbb
xchg
dec
sarl
das
or
xchg
xchg
jo
and
fsubl
ret
cmp
push
es
test
jle
inc
mov
outsb
jmp
and
xor
ja
lock
xor
fs
dec
insb
adc
out
xchg
or
dec
sti
test
mov
adc
mov
dec
mov
iret
inc
mov
sahf
add
es
push
xchg
icebp
ret
lds
jle
jns
mov
and
dec
jmp
xor
push
sub
adc
stos
js
jg
lds
adc
cmp
xor
mov
fmul
scas
inc
adc
sbb
fdivs
dec
pop
subb
jecxz
push
push
pop
mov
movsb
sbb
inc
fdivr
mov
add
cli
ds
gs
popl
sub
cltd
pusha
push
rclb
scas
jne
lods
loope
xchg
nop
aad
sub
enter
inc
test
jle
jbe
inc
sbb
jge
mov
or
mov
in
dec
test
sub
sbb
mov
jmp
cmp
hlt
stos
ret
pop
loope
movsb
adc
outsb
out
out
dec
fstl
mov
imull
in
repz
pop
xor
out
int
pop
lods
xor
imul
pushf
or
ja
repnz
xchg
jnp
int
dec
inc
cs
push
das
xlat
pop
adc
into
sub
xlat
dec
daa
xor
icebp
mov
xchg
lods
pop
or
into
idivb
loopne
adc
cmpb
sub
mov
cmpsb
mov
lret
inc
mov
inc
add
mov
fisttps
leave
push
xor
ljmp
ja
add
sbbb
rorl
leave
aaa
std
ficompl
cmp
loopne
iret
adcl
popf
in
movb
and
xchg
subb
jp
mov
mov
xchg
pop
dec
xchg
or
add
loopne
movl
inc
sbb
icebp
xchg
movsb
das
jb
sub
pusha
pop
rorb
sti
add
mov
xchg
pop
and
testl
mov
icebp
jbe
pop
aas
fisubs
dec
lahf
and
mov
sub
add
call
xchg
lods
rcl
xchg
out
loope
int3
data16
sub
daa
inc
jge
mov
add
jo
movsl
nop
arpl
sbb
add
adc
add
in
cwtl
lods
lods
and
or
outsb
loop
dec
fs
outsl
mov
movsl
in
inc
mov
xor
cs
mov
divl
movsb
and
loope
mov
arpl
jmp
pop
loop
xchg
mov
adc
sub
push
arpl
pop
into
into
jg
jp
sub
xor
mov
adc
dec
xor
fs
in
stos
iret
jae
dec
or
fadds
inc
pop
mov
popa
mov
fisubs
pop
mov
pop
out
mov
lods
xor
cmp
add
sub
stos
jbe
jle
jge
adc
mov
add
jno
adc
push
cwtl
iret
cmp
stc
cli
sbb
loopne
fwait
adc
testb
imul
movsb
dec
push
mov
mov
data16
into
push
enter
mov
imul
xor
mov
rcrl
jmp
mov
mov
push
jmp
sbb
or
nop
in
bound
cmp
out
xor
push
cmc
js
mov
xchg
inc
loopne
arpl
dec
sahf
adc
in
addr16
mov
inc
ja
ljmp
fdivrl
xor
cmp
mov
push
cmc
mov
push
lret
inc
dec
pop
xor
or
add
imul
or
mov
push
mov
imulb
mov
aad
cmp
xchg
stc
adc
inc
add
adc
xor
fadd
test
leave
xchg
popf
shlb
insl
imulb
mov
insl
adc
xor
out
pusha
int3
inc
mov
pop
push
cld
fcmovnu
inc
cld
cld
mov
ss
cld
mov
cmp
fisttpl
mov
push
xor
mov
mov
push
int3
xchg
add
out
mov
lods
mov
inc
leave
addr16
jmp
mov
jmp
imul
insb
shlb
pop
jl
xchg
inc
jmp
push
movb
mov
stos
je
and
or
or
iret
mov
sarb
sub
dec
rclb
lock
jbe
or
dec
insl
mov
xor
push
scas
aad
or
in
in
or
int3
jno
jmp
adc
mov
pop
lcall
stc
pop
rorl
sbb
mov
movsl
mov
cmp
adc
pop
cld
popa
test
jns
js
sbb
shrl
xlat
pop
or
pop
push
stos
add
xor
shll
cld
js
shrb
in
sub
cs
add
push
dec
fwait
mov
pop
jne
add
sbb
mov
jg
mov
push
push
mov
mov
ds
cmp
jne
and
sub
out
adc
inc
cli
and
hlt
or
je
repnz
mov
les
rol
rcrl
pop
mov
int
xchg
pop
mov
iret
insb
sub
inc
lcall
sub
xor
pop
cmc
jb
jno
mov
pop
cmpsl
pop
cld
mov
fiadds
cmpsl
ljmp
jno
mov
push
fs
into
es
notb
ja
sub
adc
fidivrl
or
push
test
into
enter
je
cmp
outsb
lods
jp
fcmovne
fldt
push
add
lods
mov
add
inc
push
outsl
xchg
xlat
push
into
imul
add
mov
out
fcompl
aad
sbb
mov
xchg
lcall
popf
pop
adc
push
lahf
bound
mov
in
pop
jl,pt
dec
fldenv
xchg
in
cltd
iret
cmpsw
push
sub
push
fisttps
push
ds
mov
jmp
fs
add
in
cmc
ljmp
xchg
cmc
mov
sub
adc
mov
lock
ds
mov
fwait
movsb
mov
inc
jge
push
jbe
lods
fisttps
sahf
ret
lcall
pop
xchg
lcall
mov
dec
pop
jmp
fwait
push
push
movnti
pushf
leave
pop
mov
push
es
jns
or
mov
sbb
dec
out
xchg
pop
in
xchg
jnp
test
xor
test
lret
pop
mov
pop
add
add
pop
pop
in
mov
dec
ja
pop
cs
or
popa
or
movsl
test
loop
xchg
rclb
inc
cmp
cmovs
sarl
xchg
test
push
aaa
mov
and
or
dec
enter
outsl
insb
scas
cmpsb
mov
xchg
rcrb
cmp
dec
out
lea
icebp
test
sahf
hlt
mov
test
push
adc
cmp
push
fldl
lock
and
jne
mov
movsl
pusha
mov
aas
mov
xor
repz
shlb
pop
faddl
pop
incl
push
enter
fisttpll
cwtl
cmpsl
fldl
lahf
and
inc
enter
pop
adc
add
addr16
adc
mov
add
popf
xchg
shll
test
lock
mov
repz
cmc
jb
jno
or
scas
dec
dec
scas
je
shll
sub
je
out
lahf
or
sbb
xor
repz
out
ret
mov
pop
sub
es
in
orb
in
pusha
popf
jle
xor
inc
mov
add
adc
mov
scas
xchg
loopne
fiadds
mov
enter
push
je
sub
mov
dec
dec
sub
push
fs
push
rolb
cmp
fldenv
push
jno
mov
std
cmc
rcrb
loopne
ss
dec
lahf
inc
pop
add
mov
and
pop
subb
imul
mov
fs
loop
daa
testl
jns
popf
aam
pop
leave
add
cmc
ret
fiadds
jge
sub
into
lea
push
inc
pushf
enter
push
jle
cmp
and
pushf
sbb
pop
popa
mov
mov
cmpsb
pop
mov
imul
sti
sub
clc
lds
ror
ss
jb
xchg
in
not
mov
cmc
lret
ds
aas
fs
stos
add
imul
cltd
stos
sub
cmp
stos
clc
out
imul
and
push
sub
mov
mov
sub
inc
inc
inc
arpl
mov
int3
jge
nop
mov
lds
or
aaa
aad
loopne
or
fistps
in
ftst
in
mov
dec
mul
stos
dec
out
mov
shr
mov
sbb
sahf
xchg
nop
jnp
arpl
fisubl
jb
popa
sbb
sub
cmp
mov
mov
lret
fmuls
sub
pop
decl
loopne
mov
or
cli
shlb
sbb
mov
leave
orl
sti
xchg
pusha
mov
popa
sbb
scas
ficompl
xlat
jns
movb
out
inc
adc
rorl
xchg
add
loopne
loop
fsts
test
mov
xor
je
sti
cld
stc
xchg
push
shll
dec
cmp
jbe
in
leave
push
nop
or
fdivr
fisubrs
sbb
xchg
mov
stos
fcoms
cmp
mov
sbb
movsb
lcall
in
add
icebp
sbb
jmp
mov
pop
add
jl
jae
mov
and
lods
mov
fninit
inc
add
in
ret
jmp
cmp
push
enter
out
mov
xor
push
lock
jle
mov
popf
inc
add
xchg
push
adc
sub
scas
lret
dec
movsl
and
and
shl
fmulp
xchg
mov
xor
mov
cmp
outsb
cmp
aaa
test
sub
push
pusha
adcb
mov
mov
repnz
int
xchg
daa
inc
pop
movsb
mov
aam
insl
pop
sbb
jne
dec
cli
xlat
js
or
xchg
int3
repnz
sbb
mov
pop
inc
xchg
ret
je
lea
cmp
xorb
or
lea
aam
test
push
lods
push
push
dec
jns
adc
fwait
mov
jmp
push
mov
mov
lahf
repnz
data16
mov
push
push
negl
ljmp
rol
add
or
mov
imul
and
jno
clc
enter
test
add
cmpsb
pop
jle
test
push
jp
add
rcr
jp
scas
add
jl
fimuls
jl
sbb
stc
mov
mov
push
and
mov
cli
lret
mov
xchg
lock
cvtdq2ps
mov
mov
mov
add
or
test
or
std
js
mov
clc
add
pop
daa
movsl
cmp
mov
rcll
fldl
jbe
shl
xchg
push
sbb
and
arpl
jle
out
mov
xchg
pop
push
inc
insb
adc
fmull
imul
add
push
je
sbb
or
or
pushf
and
jne
sbb
or
sub
stos
sarl
lods
pop
cmpsb
in
sbb
scas
dec
in
shll
fmuls
xchg
inc
mov
adc
mov
cli
jg,pn
and
pop
mov
fistl
aas
sbb
into
aam
dec
enter
push
das
stc
out
add
into
arpl
lods
and
call
xlat
lret
mov
inc
add
dec
popf
push
sub
push
leave
aad
mov
xchg
mov
out
outsl
out
loopne
arpl
mov
sarb
mov
imul
gs
andl
cmp
adc
stos
fsts
mov
ljmp
mov
jb
xor
std
ljmp
mov
gs
ret
mov
test
adc
test
sahf
xchg
in
xchg
arpl
sbb
jecxz
cs
jl
mov
jne
push
jne
rolb
jg
or
mov
dec
mov
jae
xchg
es
dec
mov
sbb
icebp
lods
popf
movsb
pop
add
insl
aas
in
fdivrl
dec
xor
lret
add
cmp
rcrb
dec
mov
fstl
push
mov
lahf
and
sar
xor
lods
inc
push
loope
in
or
cmp
xor
fbstp
loope
repz
push
pcmpgtw
xor
add
sbb
dec
mov
repz
cmpsl
pop
scas
mov
sub
push
lahf
mov
sarb
es
and
inc
push
call
push
pusha
outsb
or
or
ja
jno
ret
out
mov
mov
hlt
mov
pop
push
mov
fdivrl
inc
bound
fsubp
rolb
mov
shlb
mov
xlat
adcl
call
pop
sahf
lahf
adc
mov
sti
cli
ret
scas
aas
push
test
lea
jecxz
icebp
xchg
test
inc
and
roll
idivb
push
mov
or
scas
sub
andl
popa
test
rcrb
mov
lret
subb
jg
inc
es
lret
dec
dec
repz
xor
jno
jne
inc
mov
loopne
ljmp
sub
fnstenv
add
inc
xlat
jmp
mov
inc
stos
daa
int
cwtl
fwait
gs
loopne
test
xor
les
fwait
inc
jmp
scas
mov
pushf
sbb
divb
outsl
ret
das
inc
out
mov
or
sub
push
dec
xchg
sub
add
push
mov
jno
roll
test
jnp
adc
inc
adc
or
and
jp
or
mov
dec
repz
jle
leave
outsb
sub
xor
scas
push
xchg
push
cmp
repz
daa
inc
mov
add
lods
flds
jnp
add
inc
loop
dec
movsl
xchg
or
and
dec
sbb
or
clc
decl
std
cmpb
sub
xchg
mov
mov
adc
out
aam
mov
dec
and
pop
mov
ss
mov
adc
imul
into
adc
xchg
push
jecxz
test
xchg
xor
imul
pop
cld
call
lret
mov
mov
orb
xorl
lock
xor
sub
xorl
loopne
sahf
inc
and
xor
sub
cmp
mov
add
fxch
jecxz
arpl
test
insb
popf
je
cs
lea
mov
xchg
xchg
mov
rcl
insl
inc
loop
dec
sbb
adc
out
fwait
mov
aam
test
test
repz
or
mov
cmp
fnstenv
or
lods
mov
xor
mov
ret
push
les
or
popf
test
sahf
dec
lods
add
jae
and
xchg
sub
mov
jbe
addl
inc
loop
push
inc
push
in
mov
test
ret
pop
out
int
xor
dec
and
push
icebp
sarb
xchg
mov
xchg
sub
ja
mov
cmpsl
jo
add
dec
mov
add
pop
mov
int3
sub
push
mov
daa
pop
mov
stc
loop
addr16
cmpsl
push
mov
mov
mov
andb
push
outsl
push
cs
out
push
mov
jecxz
jae
insl
add
inc
pop
jg
icebp
popf
sub
push
lret
push
pop
stc
scas
adc
popf
pop
dec
jnp
in
cld
arpl
movhps
icebp
nop
mov
dec
mov
xor
test
pop
imulb
adc
in
xchg
lret
repz
outsl
lret
icebp
dec
add
jmp
or
cmp
sbb
xchg
cmp
xchg
cmpsl
push
cs
rcll
insb
scas
test
movsb
or
pop
and
loope
sbb
aas
hlt
add
sbb
test
out
xlat
lcall
sbb
inc
popa
and
and
inc
scas
or
pop
push
or
pop
movb
add
enter
and
fisttpll
int
out
add
xor
loopne
insb
cmp
add
leave
and
testb
pop
loope
push
and
rcrl
jge
push
fisubrl
lret
jae
dec
ret
sbb
test
je
in
inc
xlat
add
into
test
inc
pop
sbb
adc
iret
xor
call
enter
sbb
jecxz
dec
jl
jmp
fistpll
imul
fists
mov
sbb
add
fsts
les
cmp
sbb
xchg
dec
cmp
adc
cmp
add
out
mov
or
dec
pop
stc
push
fistpl
push
dec
dec
out
mov
push
add
xor
in
fwait
ret
mov
popl
push
inc
jl
out
xchg
outsl
mov
fs
pop
cs
lret
jecxz
fistpll
push
ja
xlat
add
xor
add
call
into
outsb
push
mov
rcrl
clc
dec
jl
mov
outsl
rcrl
lret
repnz
mov
mov
jmp
cmp
es
fisttps
pop
push
dec
icebp
and
ret
mov
mov
jo
in
inc
cmp
add
add
xchg
adc
jecxz
daa
jne
xchg
lods
mov
gs
icebp
dec
scas
xor
or
and
pop
or
push
scas
xchg
fwait
test
test
mov
enter
jbe
push
sbb
xchg
push
or
inc
push
arpl
pop
call
adc
bound
popa
aas
xor
mov
mov
movsl
es
out
xchg
push
jo
xor
jb
push
call
aas
iret
xor
jnp
mov
sbb
dec
dec
and
xor
iret
cmc
lea
add
and
fnstsw
scas
mov
cmp
cmp
push
dec
xchg
pop
stos
int3
dec
pushf
cmpsb
into
test
fldt
call
cs
repz
adc
xchg
dec
out
mov
ret
stos
jno
jno
sbb
or
in
pop
cltd
add
sbbl
bnd
push
jo
aaa
mov
push
fucomi
cld
pop
sub
imul
sub
jmp
or
movl
aad
rcr
nop
cmp
movhps
adc
mov
inc
shl
push
adc
mov
pop
mov
adc
push
jno
inc
fistpll
jl
les
push
movsb
shll
repnz
ret
hlt
adc
push
popa
stos
push
int
lock
js
fsubrl
mov
jno
sub
or
bswap
test
add
scas
call
in
std
aas
pop
push
xchg
scas
mov
cltd
testb
outsb
pop
pusha
inc
leave
mov
jge
lret
ret
hlt
fidivrl
testb
xchg
outsb
aas
xlat
jb
push
jo
push
test
xor
xchg
nop
ds
sarb
mov
dec
inc
mov
xor
popl
lret
mov
stos
xchg
xor
and
into
mov
dec
jo
lcall
loope
sub
mov
lods
xor
lds
iret
pop
lret
and
adc
mov
sbb
ljmp
inc
jle
and
test
lods
cmpsb
lds
push
xor
ljmp
fwait
scas
mov
int
adc
ret
mov
and
sar
adc
jns
loopne
daa
in
add
imul
out
fadds
mov
inc
dec
pop
es
mov
or
pop
mov
mov
mov
test
dec
ja
mov
mov
jbe
hlt
gs
adc
lahf
lret
or
unpcklps
sub
push
add
mov
cs
cmp
pop
xor
gs
xchg
sbb
xor
pop
scas
xor
lock
fstpl
sti
and
in
jno
sbbb
fadd
mov
xchg
sysenter
aas
or
stc
jne
mov
cmp
sti
aam
sti
ret
fsubrl
incl
xchg
fisubs
daa
daa
nop
andb
sub
sti
rcll
push
addb
adc
sbb
rcr
lods
dec
les
and
push
xor
cmp
mov
cmp
inc
incl
hlt
pop
lcall
pop
les
lret
xchg
sbb
add
and
orl
gs
dec
sub
hlt
sub
jp
adc
ds
cs
add
jns
shlb
lahf
mov
lret
jle
ss
sbb
cwtl
into
sub
mov
xor
into
adc
or
adc
repnz
push
aaa
mov
adc
lret
sbb
or
cmp
sbb
int3
aam
xchg
mov
adc
iret
sub
dec
jle
dec
pop
cmp
pop
sahf
stos
or
fmul
sbb
decl
mov
bnd
outsl
sub
jge
pop
dec
push
mov
dec
mov
ret
dec
push
inc
aaa
aad
push
rcrb
jl
insl
adc
mov
sub
xor
mov
fs
and
mov
dec
jnp
hlt
cmpsb
cltd
pop
jg
imul
dec
sbb
push
aaa
jbe
jmp
pop
sub
sti
in
lcall
xchg
or
jl
aas
sub
add
pop
test
xor
fimuls
xchg
sbb
inc
aas
lahf
add
pop
and
mov
pop
and
inc
xlat
les
cli
imul
or
pop
cmpsb
or
mov
stc
push
ja
lcall
leave
mov
add
rcll
xchg
pushw
addr16
add
mov
lret
mov
pop
imul
fcomi
push
jl
imul
lods
add
loop
sub
cltd
pop
mov
outsl
push
cwtl
jae
fs
pop
and
into
es
adc
dec
repnz
add
lock
push
pop
xchg
adc
dec
pusha
sub
push
test
clc
cmpsb
pop
mov
popf
mov
pop
dec
dec
adc
dec
sbb
popf
inc
adc
pop
jp
xor
addr16
cmp
ss
xchg
mov
cwtl
sub
jns
cmp
add
subb
mov
xor
mov
je
divl
sti
push
mov
lahf
mov
std
cmp
in
jp
mov
notb
cmp
popa
pop
in
cmc
lret
stos
sarl
insl
inc
xchg
in
dec
adc
stc
ljmp
cmp
call
mov
aaa
cmp
mov
icebp
aam
data16
daa
pop
in
and
fxch
arpl
fstpt
test
cmp
int
sub
pinsrw
dec
cmp
add
ljmp
int
bound
orl
addr16
and
mov
cmp
int3
jne
and
xchg
xor
sub
push
out
xor
adcl
mov
pop
push
sbb
mov
aad
sub
and
jbe
es
lods
sbbb
cmpsl
popf
inc
in
pop
lea
leave
jbe
fdivr
cmpsl
lret
sahf
add
and
xchg
inc
xor
push
ja
pop
inc
std
jo
mov
cwtl
sbb
mov
add
push
xchg
lcall
push
mov
jl
mov
pop
and
icebp
popw
sbb
jbe
jge
pushl
aaa
inc
adc
mov
pop
arpl
popf
int3
aad
xorb
fsubr
xlat
cld
cmc
mov
rorb
bnd
pop
mov
test
cmp
das
cld
pop
daa
xchg
into
je
out
je
xchg
out
sub
imul
jns
inc
pop
ds
pop
in
lods
mov
hlt
and
les
incl
iret
adc
cmp
jge
add
cmp
jp
outsb
push
dec
mov
mov
mov
or
mov
add
lcall
sbb
ret
cmp
in
das
out
and
and
aaa
dec
mov
call
dec
push
lea
in
fiadds
fstl
or
pop
sub
orl
hlt
pop
lods
insb
mov
out
repz
dec
inc
int3
pop
xchg
bound
push
cld
into
popf
dec
movsl
cmp
pop
cmc
ror
ret
das
mov
ror
mov
sbb
inc
dec
xor
into
dec
jp
sub
stc
add
push
clc
add
mov
jp
sahf
sub
jns
cmp
jl
nop
lret
inc
das
xchg
ds
sub
test
insl
sahf
dec
aas
push
jle
jae
lahf
mov
cli
sbb
sub
rolb
test
jnp
shrl
imull
in
ficoms
push
mov
dec
mov
sub
pop
aam
cmpl
xchg
fs
sbb
or
add
movnti
nop
jecxz
mov
cmp
in
nop
mov
rolb
and
fcomps
pop
add
dec
push
lock
mov
jo
ja
loopne
cmp
ss
lds
push
jg
int
push
notb
out
mov
test
ja
xchg
cmc
sub
sub
inc
testb
adc
test
call
nop
out
les
out
cwtl
pop
cmp
jns
cmp
aam
ror
out
ljmp
dec
enter
xor
ror
imulb
out
aad
push
pop
pop
es
xor
es
mov
cmp
sahf
cmp
jle
imulb
xchg
xchg
movsl
cltd
sbb
loope
ljmp
js
add
xor
lret
pushf
ljmp
repz
dec
das
pop
add
jne
ficomps
in
or
repnz
loope
sbb
mov
push
jl
aam
sti
xor
push
mov
cli
ret
xor
jecxz
fld
imul
mov
mov
dec
dec
pop
push
push
fcmovb
arpl
scas
cltd
pop
fnstsw
xchg
nop
sub
push
lret
and
mov
mov
jecxz
mov
test
dec
inc
fcomp
sub
ds
and
pop
inc
inc
xorl
xchg
ret
xchg
out
xchg
sub
xor
loop
insb
jge
lods
mov
repz
push
or
daa
ret
sub
mov
sahf
xchg
or
push
rcll
movsl
push
pusha
fists
es
jno
push
andb
cmpsb
int3
xlat
pusha
mov
setg
or
xchg
loopne
gs
addr16
cltd
xor
loopne
push
sub
pop
ljmp
jno
aaa
add
cmovbe
push
lea
stc
aam
sub
xchg
fwait
inc
cmc
or
push
testl
xchg
js
or
cltd
jne
sub
push
mov
sbb
and
cli
pop
dec
cmpsl
jmp
jno
inc
xor
sub
scas
mov
pop
imul
aad
jl
je
outsb
xchg
pop
call
addr16
fbld
arpl
mov
shll
add
adc
sub
out
and
mov
scas
imul
jmp
pop
int
popa
outsl
cs
js
cld
int3
adc
pushf
pusha
sarl
rcrb
dec
fcmovnb
or
mov
mov
cmovo
push
pop
xchg
out
push
gs
cmpsl
xchg
sub
pop
push
int3
imul
test
in
cld
shll
popa
cmpsb
and
int3
test
test
stos
pop
enter
lcall
ror
outsb
dec
sub
sub
cmp
fs
inc
inc
mov
mov
or
call
mov
push
mov
or
xchg
mov
popa
out
les
lahf
test
or
packuswb
in
dec
subb
cld
daa
cmp
fadds
cltd
out
xchg
cbtw
jmp
testl
mov
aad
jb
dec
mov
adc
mov
sub
and
pop
pop
inc
sub
shlb
insl
and
push
sahf
adc
xchg
jbe
jnp
add
and
cld
mov
jbe
mov
in
push
cmp
loop
inc
les
or
lods
arpl
jb
outsb
rol
insl
int3
dec
dec
wrmsr
ss
sbb
mov
aas
xchg
cmp
xor
neg
mov
mov
sar
cmpsb
adc
jmp
xchg
lret
scas
xor
mov
pop
pop
sub
leave
lret
loopne
sub
cmp
rcl
mov
rorl
imul
sub
div
fdivrs
aaa
lock
jne
loopne
sub
ds
dec
es
and
cltd
test
cmp
mov
dec
fwait
cltd
loopne
xlat
outsb
xchg
int
std
punpckhwd
ror
jbe
adc
pop
adc
jp
push
adc
cmpsb
adc
into
rol
mov
cld
cmp
jp
and
push
jle
cs
std
sbb
cmpsb
cmp
ss
fldcw
push
and
out
out
pop
jne
lock
jmp
or
adc
stos
dec
lcall
pop
cmp
mov
jb
aad
into
xchg
insl
fidivrl
pop
jae
scas
setl
shrb
jmp
orb
fnstcw
xchg
fcmovne
les
xchg
daa
ja
ret
and
imul
into
mov
popf
jo
cli
je
jmp
and
mov
call
inc
adc
xor
movb
cmpsl
lcall
mov
clc
jo
add
dec
inc
pop
repz
cmp
or
into
in
ror
int
cmpsb
mov
ss
jns
or
mov
cmc
cs
rclb
lret
cs
std
pop
icebp
fsubrl
inc
int3
xchg
adc
lcall
xor
mov
call
js
pop
sbb
adc
lods
or
cmpsb
mov
ret
xchg
jmp
cltd
xor
popa
adc
cmc
sub
inc
dec
fnstenv
mov
adc
sbb
xchg
lock
fcmovnbe
xchg
dec
pop
outsl
popa
inc
adc
out
jg
pop
mov
push
mov
mov
rcr
mov
dec
xor
pop
adc
test
stos
jl
js
fldenv
mov
pushf
jmp
lods
xor
fs
jne
into
ds
add
dec
dec
mov
cwtl
xchg
popf
jbe
mov
lods
andb
dec
inc
push
or
aaa
loopne
mov
lea
add
xchg
sub
lcall
or
and
jp
rcrl
pop
and
leave
mov
data16
mov
and
fsubrl
bt
fwait
insl
int
dec
pop
cmpsl
test
inc
and
jmp
sarl
dec
xchg
push
jecxz
jmp
cmp
arpl
pop
xchg
fnstsw
pop
sub
mov
xchg
dec
pop
in
push
cmp
or
hlt
enter
fcoml
xor
mov
or
sub
jo
xchg
or
mov
adc
and
loopne
loopne
or
xchg
mov
lds
push
mov
cwtl
and
loop
mov
movsl
out
cwtl
mov
into
test
pop
jo
sti
call
popf
outsl
and
in
sub
lea
or
xchg
int3
fmulp
cltd
imul
stos
popl
cmp
jne
rcr
shl
dec
push
pushf
mov
xchg
mov
aam
out
popf
arpl
idivb
sub
push
push
add
inc
sub
sub
and
or
rclb
push
mov
mov
int3
adc
dec
mov
push
and
xchg
xlat
lcall
test
cmp
mov
pop
cld
addr16
jne
pop
pop
pop
pusha
into
out
push
dec
lods
push
out
cmpsl
loopne
out
jl
cld
loope
jae
popf
jne
pop
test
iret
dec
and
bound
sub
mov
or
repnz
push
push
inc
pop
les
adc
mov
aas
stos
dec
mov
sbb
or
mov
dec
adc
mov
lcall
cmp
cwtl
pop
mov
ret
insl
es
and
shrl
xchg
fidivrs
or
lock
push
jno
jl
call
pop
sbb
xor
popa
inc
das
cmpsl
sahf
outsl
xchg
mov
mov
xor
out
ja
adc
adc
adc
cmc
clc
jbe
inc
or
xlat
arpl
pop
in
pushf
mov
aam
xchg
lock
jae
repz
sti
pop
sahf
mov
jmp
mov
mov
or
cmp
sbb
imul
push
adc
scas
jae
pslld
fucomp
fnstcw
inc
xlat
rorl
test
leave
aaa
aad
rcrb
jns
cmpsl
ss
mov
mov
jg
push
jmp
dec
xchg
les
push
jmp
fnsave
lods
scas
xlat
arpl
dec
pushf
push
scas
pushf
inc
test
stos
sub
and
scas
stos
mov
xchg
cwtl
fwait
or
shrb
mov
jne
mov
xchg
loope
pop
push
aaa
pushf
cmp
shl
loope
cmc
cltd
ja
and
xor
movsl
push
push
sub
ret
pushf
and
aas
arpl
sti
mov
dec
inc
mov
icebp
inc
loop
test
add
icebp
rcrb
cmp
shrl
out
sub
popf
testb
scas
mov
gs
mov
fcmovu
jp
pop
cmc
cld
bound
vmwrite
dec
push
cs
clc
pop
test
shl
loope
cmc
ljmp
mov
or
pop
das
adcl
cs
ds
inc
mov
ja
push
les
cs
sbb
dec
inc
cmpsl
das
adc
mov
addr16
xchg
jae
fldcw
loopne
mov
out
cmp
lret
sbb
fbstp
xchg
mov
stc
add
sbb
scas
cmp
mov
cmpsb
iret
rol
bound
sub
jno
in
cmp
add
dec
jmp
ret
arpl
cmp
int
xchg
xchg
clc
cli
xor
push
in
std
or
or
pop
push
nop
jne
andl
inc
arpl
into
or
push
cmpsl
sub
mov
xchg
adcl
sbb
jle
sbb
clc
fcomp
cmp
pop
or
sbb
mov
push
push
stc
mov
test
gs
ficoml
mov
jg
mov
xor
out
mov
std
ret
pop
jl
movsb
xchg
scas
push
push
cmp
ss
mov
loope
add
cmpsb
test
push
ret
sbb
frstor
and
pop
rclb
test
divb
adc
or
mov
pop
fbstp
sub
jecxz
adc
adc
jmp
push
out
out
stos
jnp
inc
jae
mov
jle
xor
movsl
dec
shl
int3
pop
and
shr
ja
mov
iret
dec
out
mov
and
rcrl
push
std
or
sbbl
inc
addl
fcompl
mov
mov
mov
mov
or
cld
sub
stos
aam
repz
push
push
xor
jecxz
and
mov
je
mov
js,pt
stos
inc
cmp
push
xchg
fndisi(8087
add
jle
out
addl
and
add
das
insb
cmp
dec
or
lea
jb
jg
bound
jecxz
mov
sub
push
and
je
jmp
xor
or
inc
dec
sub
pop
mov
cmp
push
fs
dec
pushf
push
sbb
imul
mov
cli
mov
inc
das
in
sbb
sahf
lcall
sahf
dec
cmp
mov
aad
cmpsl
mov
push
test
outsb
movb
jmp
jge
fmul
or
stos
jb
lret
or
leave
push
lods
mov
cmp
push
inc
in
iret
lret
pop
dec
xchg
mov
stos
push
mov
cmpsl
leave
add
xor
movsl
ret
aam
xchg
mov
push
inc
iret
ljmp
cmc
add
jge
inc
lods
in
xlat
inc
lods
and
movsb
mov
mov
ltr
test
lret
into
push
push
out
sub
mov
lret
inc
gs
test
ret
daa
and
sbb
movsl
or
sub
xchg
lcall
movsb
adc
inc
ds
fistps
decl
decl
repnz
aaa
or
xorb
pop
xor
stc
mov
push
in
in
cmp
leave
jns
lret
pop
aad
mov
mov
sub
in
jae
add
mov
cmp
jge
jno
enter
lcall
inc
in
cmp
std
adc
sti
push
fnsave
push
cmp
aam
pop
pop
and
add
add
je
je
movsl
into
in
std
xchg
out
nopl
ss
subb
movsl
mov
or
into
jo
fstps
sti
jnp
insb
xor
push
xchg
mov
sub
adc
sbb
aad
adc
sbb
out
rcrb
jo
pushf
inc
les
fsubrl
inc
sub
inc
xchg
lret
push
dec
xchg
pop
je
adc
mov
jbe
out
cwtl
mov
insl
add
divb
xor
xchg
sub
cmc
dec
push
jno
ret
pop
cmp
cmpsl
lea
shrb
std
push
push
xlat
fcmovbe
dec
stc
adc
sahf
stos
popa
fwait
arpl
push
mov
and
mov
xorb
adc
pop
lods
int3
adc
shll
fsubp
adc
xor
jmp
and
jg
je
ja
aad
adc
cmc
out
sub
push
incl
cwtl
adc
xchg
ror
push
fiadds
repz
xor
loope
inc
lods
test
mov
push
mov
stc
test
jno
adc
mov
mov
les
adc
fsubrl
hlt
or
int3
and
dec
es
mov
clc
mov
bound
mov
xchg
push
outsb
testb
and
cltd
pop
push
ficompl
fidivl
loopne
add
popa
cmp
aas
out
or
adc
pop
fs
mov
mov
mov
jae
cmpsb
jle
jns
adc
mov
cmp
inc
pushf
xchg
dec
mov
cld
sbb
mov
outsb
shr
inc
xchg
add
mov
or
fnsave
fidivrs
stos
and
push
sbb
fidivrs
inc
mov
fnstcw
into
xchg
jne
movw
mov
push
push
pop
mov
pusha
out
imul
dec
lcall
mov
cmp
push
ljmp
mov
xchg
and
incl
add
repz
and
xchg
cs
push
push
dec
cmp
xor
adc
bswap
dec
mov
sti
sbb
pop
push
fadds
inc
inc
testl
in
mov
dec
ficomps
cli
std
xchg
scas
pop
push
xor
faddl
addb
out
subb
lds
and
dec
fldt
and
fcompl
xor
pop
push
stc
mov
jmp
jg
jg
dec
or
pop
or
scas
cmpsl
sub
xor
es
fwait
and
jl
dec
loopne
xchg
and
call
sub
mov
lods
les
mov
mov
mov
mov
iret
pop
subb
adc
shrb
subb
inc
mov
ja
shlb
cmp
pop
pop
adcl
inc
xchg
dec
adc
fwait
sarl
mov
imul
arpl
mov
adc
outsl
cli
popa
test
mull
adc
jg
sti
sub
and
lea
lods
xor
imul
lds
test
bound
pop
push
scas
adc
stos
jp
xchg
mov
sbb
mov
addr16
sti
lret
sub
adcb
xlat
jnp
cwtl
dec
sub
out
jp
shlb
test
insl
mov
adcl
cmp
fnstsw
les
sub
mov
lret
into
cli
cltd
jp
call
fwait
loope
or
add
popf
lret
fldt
mov
bnd
pop
lock
mov
cmp
xorl
in
jns
ror
es
xor
in
stc
movsl
dec
jno
jle
ret
sbb
push
push
push
fnstcw
jge
sbb
xor
inc
in
xor
ds
or
popf
aaa
mov
fsubr
mov
bound
in
movsl
shll
dec
test
xor
ljmp
fidivrs
sarb
lret
and
mul
fnsave
out
ljmp
pushf
xchg
add
mov
sbb
enter
andb
test
push
pop
push
or
call
mov
jmp
mov
pushf
testl
scas
jg
sbb
xchg
out
dec
negb
inc
in
add
jge
hlt
int3
fldl
add
xor
movq
fdiv
inc
repnz
dec
sbb
pop
dec
sub
pop
je
mov
add
das
mov
arpl
push
inc
mov
jle
dec
bound
ja
jae
xchg
push
sbb
imul
jmp
jecxz
pop
in
dec
mov
orb
cmp
in
pop
pop
aaa
flds
stos
lcall
fsub
mov
outsl
mov
bound
jmp
test
out
lret
stos
add
test
mov
and
in
or
sbb
repz
addl
mov
xchg
mov
lods
ficompl
movsl
inc
jb
stos
aaa
sbb
pop
cmp
scas
add
jbe
das
jb
cmpsb
xacquire
cmc
lahf
add
loopne
xchg
push
adc
mov
lods
enter
int3
push
lcall
mov
stos
sub
mov
adc
xor
xrelease
lahf
inc
lcall
repz
pop
sbb
sub
jmp
cltd
das
adc
cmpsb
push
or
sub
ljmp
call
hlt
aaa
arpl
pop
and
cwtl
sbb
in
cmc
mov
cli
jne
dec
pop
mov
sub
ljmp
inc
adc
fcom
addr16
adcl
jp
fwait
mov
testl
icebp
loope
mov
mov
sub
inc
pop
xchg
std
or
call
cmp
orl
call
pop
cmpsb
aam
jbe
sub
rclb
ret
cltd
xchg
add
jp
cmp
aaa
mov
aaa
jmp
xor
mov
pop
test
repz
add
arpl
cmc
xor
pop
loope
sub
sti
pop
mov
iret
adc
xchg
iret
outsl
stos
jb
outsb
push
cmc
and
pmaxsw
std
mov
dec
push
cmp
jo
and
popa
negb
pop
nop
inc
push
lcall
dec
ret
pop
and
clc
mov
test
cmp
fsubrl
lock
js
dec
pop
mov
add
out
lea
test
paddsw
enter
or
cmpsl
fidivrl
xor
out
mov
fimull
sub
clc
xchg
mov
add
pusha
lahf
sub
push
stos
shll
adc
mov
leave
jmp
xor
xor
daa
dec
jmp
in
pop
mov
cmpsb
cmp
lods
aam
cmpsl
out
repnz
popf
xchg
cmp
jg
loop
push
adc
movsl
in
popa
aas
lock
mov
movsl
scas
push
ret
mov
movsb
push
cmp
xchg
pusha
lea
sub
jle
out
cs
jl
js
xor
mov
stos
outsl
adc
and
ret
xor
adc
outsb
adc
in
or
daa
in
in
scas
jl
push
iret
aad
cld
xlat
js
aaa
shll
cmc
sbb
and
and
daa
outsl
lret
aaa
cmp
sub
mov
xchg
mov
pop
pop
dec
filds
dec
ret
inc
insl
int3
sti
add
repz
movsb
push
push
mov
dec
xor
aam
dec
sub
jecxz
and
mov
add
mov
gs
jg,pn
push
pop
mov
inc
dec
fucomi
bound
das
inc
mov
push
jmp
ret
sbb
cmp
mov
cmp
sbb
dec
mov
aad
scas
les
fildll
pop
push
xorb
imul
clc
lahf
enter
pop
es
pop
jae
aad
in
stos
adc
jbe
int3
jns
jmp
arpl
xchg
adc
fwait
and
xor
into
es
insb
inc
inc
xchg
pop
xchg
jmp
jnp
lods
iret
push
add
fldenv
ret
inc
fmulp
cld
push
adc
je
dec
fwait
pop
mov
das
mov
arpl
imul
push
or
pushl
inc
iret
cltd
shufps
aad
stos
out
hlt
call
adc
mov
sub
sbb
loop
fisubrs
lods
sbb
stos
push
mov
int3
adc
jmp
cmpsl
mov
push
xor
push
xor
push
xchg
jl
fidivrl
into
inc
adc
push
cmpsb
and
mov
or
aam
jae
add
fstps
aad
add
orl
sbb
in
imul
fxch
in
mov
sub
jbe
insl
pop
and
dec
out
or
lods
pop
jmp
int3
inc
push
push
pop
add
shll
data16
mov
xchg
mov
or
pop
cld
ficompl
incb
out
mov
scas
nop
lock
mov
add
push
rorl
cmpsl
data16
jae
in
push
add
fstps
and
mov
sbb
ljmp
dec
lret
icebp
pop
insb
pop
shr
and
fiadds
lds
roll
fcmove
lea
lds
mov
or
add
shlb
push
rclb
sbb
scas
jge
fsubr
mov
fildll
imul
push
js
xchg
call
jg
insl
cmp
adc
je
std
into
lret
mov
and
pop
or
jmp
sbb
fsub
fimuls
aaa
xor
lock
pop
movsl
loopne
xor
aaa
jmp
sbb
or
int
xchg
int
inc
pop
icebp
push
fcompl
jnp
dec
aad
int
adc
cmpsl
add
fisubs
or
sbb
mov
js
mov
mov
aaa
lret
sub
sbb
idivl
pushf
fwait
in
es
and
adc
mov
or
push
nop
scas
call
nop
or
icebp
movl
pop
rcrb
push
aas
mov
loopne
mov
cmp
and
mov
or
or
mov
mov
pop
xchg
and
imul
in
lock
xchg
repz
push
or
stos
and
xor
sub
push
aad
pop
cmp
lods
mov
push
jmp
stos
inc
dec
mov
sti
add
mov
jp
hlt
ljmp
add
pop
arpl
pusha
xchg
sbb
push
push
xchg
cmp
inc
push
push
out
iret
das
inc
and
push
fistpll
push
es
data16
rolb
mov
jle
dec
leave
in
insb
dec
push
icebp
xchg
stc
cmp
adc
mov
inc
adc
pusha
pop
dec
ret
xorb
jnp
add
jb
leave
dec
repz
or
push
fists
add
out
xchg
rol
jb
popa
or
arpl
mov
sub
test
push
iret
je
jl
fstpt
xchg
in
imul
jecxz
push
inc
test
jl
out
fwait
dec
test
out
mov
lret
movsl
mulb
xchg
gs
ljmp
mov
ljmp
pop
sahf
mov
push
movsbl
in
je
rorb
insl
push
dec
cmp
cld
in
and
sub
stc
into
or
jg
clc
xchg
dec
sarb
push
sbb
out
lock
mov
add
fdivrs
jbe
call
cmp
sub
adc
dec
fimuls
dec
fstpl
dec
mov
out
pop
sti
push
js
pop
and
stos
mov
push
ret
push
test
mov
out
aaa
in
cltd
in
sub
add
iret
lods
in
xor
je
into
mov
pop
adc
push
leave
sarl
cltd
jne
mov
test
cmp
dec
push
ljmp
adc
scas
cli
cmp
out
rorb
jo
dec
es
hlt
test
pop
daa
pop
push
lcall
mov
cmp
mov
sbb
into
int3
and
ljmp
loopne
jb
lret
cmc
jmp
inc
outsl
mov
jle
hlt
lds
lret
out
adc
sub
outsl
mov
out
mov
inc
and
pop
inc
inc
lock
lcall
mov
sub
jecxz
and
leave
lods
sahf
pop
je
fisubl
bound
pop
aad
cmp
out
lds
scas
cmc
lea
push
stc
aad
aaa
ret
bound
inc
aam
bound
mov
or
in
xor
icebp
enter
push
imul
dec
dec
cmp
fstl
pop
push
in
mov
add
xchg
hlt
int
sub
ltr
int
sub
jb
std
mov
repnz
je
pusha
fnstcw
sub
std
test
dec
push
cltd
and
shll
repnz
in
jp
data16
test
repz
mov
add
dec
inc
leave
dec
ret
ja
mov
dec
xor
dec
ret
add
enter
shrl
aad
mov
jp
jmp
cmp
les
gs
add
mov
jp
xor
jecxz
rcrl
jg
rorb
mov
lret
repz
mov
and
xlat
movsb
push
or
ja
in
jns
mov
jle
jg
jle
push
sbb
popa
sbb
mov
sub
push
mov
aad
sub
jne
pop
pusha
pop
fimull
xchg
test
rcrl
push
pop
out
push
in
xchg
and
ret
leave
roll
dec
daa
aam
add
xchg
mov
pop
les
sarb
inc
sub
stos
mov
pop
inc
mov
loopne
arpl
cmp
jecxz
xchg
insb
dec
mov
push
pop
gs
das
jge
stos
pop
mov
loopne
add
mov
adc
pop
jae
aad
sub
stc
pop
les
inc
stos
movsb
aad
sar
dec
pop
cltd
mov
mov
xchg
cli
or
mov
adc
std
int
xor
inc
push
pop
lret
dec
sbb
dec
jmp
push
mov
add
pop
enter
out
cmp
fbld
push
xor
mov
push
je
xchg
mov
inc
stc
sbb
add
andl
adc
push
jg
or
xchg
repnz
and
dec
out
loopne
mov
flds
push
mov
push
lcall
lods
add
sbb
mov
mov
daa
not
daa
push
stos
mov
in
leave
or
add
iret
xchg
dec
clc
not
sbb
cli
mov
adcl
cmp
sahf
inc
or
shl
sub
out
lods
mov
into
in
rorl
call
adc
mov
xchg
pop
and
ss
mov
test
cmp
xchg
pop
dec
cmpb
sbb
mov
pop
mov
scas
cmc
lds
aas
add
add
es
test
ljmp
push
xchg
mov
sbb
cmpsb
aad
xor
sarb
shr
xor
mov
mov
inc
lea
fwait
aam
lea
mov
test
into
xchg
or
loop
mov
xchg
add
jle
mov
jno
jp
cmpl
xchg
lahf
les
out
rorb
lds
pop
mov
pop
fcompl
mov
andl
insl
cmp
xchg
pop
push
aad
ljmp
movb
ret
jo
xor
sbb
je
cmp
jl
fstpl
dec
xlat
jo
dec
mov
cmpsl
pusha
fisttpl
add
movsb
jns
scas
icebp
test
clc
inc
pop
mov
into
mov
dec
or
movsb
sti
pop
dec
arpl
cli
push
add
andl
sarl
mov
jmp
push
push
jmp
push
fcomps
fmul
shl
jge
addb
inc
add
je
inc
icebp
das
pop
mov
aaa
hlt
hlt
mov
inc
test
mov
in
sahf
cld
or
push
daa
popa
imul
add
loopne
cwtl
push
mov
adc
mov
hlt
test
xor
xchg
fcmovnu
shll
fsubrp
fldl
mov
lret
pop
lret
je
add
pop
xchg
sbb
push
adc
cmp
iret
lret
sub
pop
loop
out
cmp
or
outsl
pusha
nopl
jl
cmp
nop
xchg
cmp
mov
sub
sbb
int
sbb
mov
flds
adc
lret
mov
lods
hlt
sti
mov
aam
jp
popf
in
insl
inc
push
in
cmp
clc
push
jno
jae
outsb
lea
inc
xchg
dec
aad
add
out
jge
adc
shlb
popa
xchg
sbb
jmp
adc
call
add
pop
hlt
fbstp
lahf
cmp
fcmovbe
out
cwtl
dec
rol
push
jnp
push
fisubl
mov
cld
mov
mov
fsubl
loop
sub
fsubrs
aas
lret
lret
repz
test
add
mov
lahf
not
outsl
loop
outsb
lret
xchg
sub
test
xor
xchg
jge
pop
mov
int3
frstor
rcrl
out
sub
cmc
test
std
cli
jae
cmp
xchg
inc
fucomi
jge
ret
push
into
ret
mov
test
mov
sbb
sbb
and
mov
fidivrl
repnz
lods
inc
cwtl
push
test
xchg
cmp
insl
sbb
and
xor
div
mov
lret
add
inc
pop
cmp
shlb
rclb
imul
mov
js
outsl
mov
push
nop
jno
test
cwtl
mov
fmull
add
pop
cmp
je
mov
nop
xor
mov
loop
jmp
pop
sub
sub
sbb
mov
mov
mov
cmp
push
aam
iret
and
sbb
icebp
inc
lea
enter
ror
cmpb
inc
cmp
add
inc
xor
mov
stos
daa
jmp
daa
xchg
push
rcrb
gs
adcb
in
cmc
loop
mov
or
push
icebp
iret
inc
add
hlt
xchg
xor
pop
xor
cld
ret
fs
cmp
xor
nop
sub
imul
inc
cmc
out
in
push
push
mov
out
fdivl
xchg
jb
fwait
les
or
and
rcr
and
int
gs
inc
stos
sbb
push
subb
cmpb
jge
sub
cmp
loop
or
or
sti
cmp
mov
pop
stos
es
pop
imul
pop
mov
int3
iret
push
push
cmp
movsb
cmc
jmp
into
add
notb
int3
fistpl
fldl
add
adc
scas
xchg
push
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
call
and
cmc
mov
call
ljmp
mov
sbbl
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
push
cld
outsl
push
mov
cld
and
and
test
inc
push
roll
cmp
addl
fidivs
mov
aam
scas
push
cmpl
out
sbb
jmp
xlat
lahf
dec
repz
push
aam
pop
jmp
sbb
je
pop
mov
mov
mov
adc
addr16
lea
jns
xchg
shl
cli
xlat
lahf
dec
repz
push
movsb
dec
shr
jp
pop
or
mov
jmp
xor
ret
mov
cli
test
cmc
xlat
mov
rep
jno
mov
call
push
jecxz
mov
or
mov
das
in
inc
mov
mov
mov
or
inc
mov
sbbl
mov
call
adc
cmc
mov
or
pop
mov
das
or
call
push
mov
mov
jmp
push
jecxz
mov
clc
sbbl
mov
or
dec
mov
das
or
pusha
xorb
std
dec
mov
enter
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
xchg
mov
mov
mov
sub
or
repz
mov
mov
call
jl
xchg
dec
or
pop
mov
jne
inc
mov
test
mov
jecxz
mov
call
mov
cmc
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
call
push
jecxz
mov
inc
mov
mov
repz
mov
mov
adc
add
ret
dec
cmp
rcl
cltd
add
cmc
cwtl
inc
movsl
mov
mov
sbb
sub
cmp
outsl
loope,pt
dec
add
dec
lahf
stos
jge
dec
dec
sub
je
enter
insb
sahf
dec
insb
int
add
outsb
mov
popa
leave
lret
sub
shll
lcall
jmp
mov
jecxz
or
lret
sarb
jl
mov
cs
out
into
jmp
jmp
or
frstpm(287
dec
clc
aaa
jp
test
mov
mov
test
or
lret
add
inc
cmp
xor
insb
jno
imul
pop
in
scas
pop
std
cmp
sub
jl
and
add
call
rcrl
fwait
out
cmp
jno
std
pop
inc
pop
sub
outsl
cltd
test
mov
cmp
xchg
jl
sub
and
test
cmp
int
jle
xor
repnz
jae
lods
xor
adc
sub
hlt
lret
je
mov
out
and
arpl
jg
stos
dec
xor
pop
push
jge
stos
inc
in
sub
insl
pop
out
popf
add
test
fstps
mov
in
fistl
cld
inc
adc
cli
std
mov
xchg
dec
cltd
xchg
mov
sbb
adc
mov
xor
jp
adc
lds
dec
and
sub
ss
adc
push
ret
lods
mov
ja
test
sbb
in
mov
loop
into
push
call
xchg
jae
shlb
add
jnp
int
sub
and
dec
sbb
pop
leave
and
jecxz
lret
test
xchg
xchg
jbe
aam
mov
mov
xchg
sub
fidivrl
dec
mov
ja
push
add
scas
jns
loopne
xchg
shlb
sub
pop
test
inc
xor
rcrb
mov
gs
sub
stc
cs
leave
sub
out
sbb
push
stos
lea
insb
lods
in
rcrb
mov
inc
add
std
cmp
add
push
popf
fstpl
cmpsb
int
and
lock
cmc
adc
dec
mov
sbb
fsubrs
cmp
lea
sbb
test
vmread
js
inc
lcall
inc
pop
mov
int3
scas
pop
mov
sti
aaa
dec
or
and
inc
out
pop
xor
xchg
cli
nop
cmp
jg
cmp
jb
test
sub
sbb
movsl
pop
int
loope
mov
js
mov
jmp
imul
outsl
push
aam
add
jbe
cmp
lods
sub
cli
push
rolb
lret
inc
in
pop
lret
xlat
inc
into
dec
out
stc
in
mov
scas
imul
mov
scas
cmp
mov
iret
adc
jbe
or
mov
push
cmpsb
inc
icebp
xor
pop
into
mov
pop
in
mov
mov
repnz
out
xlat
rorb
mov
jle
nop
ret
pop
adc
aaa
arpl
mov
or
sub
add
aas
lods
xlat
call
fs
lods
dec
mov
mov
mov
add
pop
and
cmp
pop
lea
inc
mov
cmp
dec
jge
shl
mov
shll
mov
jnp
cmp
inc
cmp
push
inc
stos
lock
push
iret
call
in
pop
dec
push
or
les
xchg
dec
and
js
movb
outsl
xchg
inc
sbb
rcrb
pop
pop
loopne
pop
fidivl
pop
push
mov
das
dec
jl
in
sbb
dec
daa
mov
cli
js
test
lcall
pop
pop
push
jne
push
outsb
xchg
sbb
js
sub
sub
mov
ret
push
inc
loopne
sbb
int
data16
shrl
fdivrl
pop
xchg
jmp
cld
pop
inc
jne
adc
cld
sti
push
lcall
ficoml
stos
mov
jne
xor
cltd
daa
loop
mov
dec
cmp
jnp
push
in
test
divl
insb
mov
push
cmp
pusha
cld
mov
into
jo
dec
lock
sahf
das
nop
xchg
push
cmp
mov
insb
cmpb
imul
push
decb
loope
movsb
cmpsl
and
lahf
cld
dec
xchg
xor
pop
mov
ds
push
in
imull
adc
cwtl
mov
stos
jmp
sbb
test
or
lcall
test
daa
movsl
mov
cmp
mov
movsb
or
xchg
stc
add
mov
xchg
push
adc
adc
adc
push
jns
pop
bound
and
mov
repnz
enterw
scas
std
stos
lods
fdiv
ds
sbbb
dec
pushf
inc
lods
jb
mov
dec
sarb
jne
notl
bnd
nop
sbb
push
cmp
and
inc
ficoml
aas
mov
leave
inc
jmp
pop
mov
mov
xchg
loope
rcrb
push
cmpsl
xorb
pop
pop
aad
jae
gs
jae
mov
shlb
in
push
inc
decl
cs
lret
outsl
sub
mov
das
cld
clc
mov
xor
stc
out
andl
xchg
mov
cmc
cmpsl
xchg
mov
push
aam
push
pop
jge
mov
mov
mov
clc
test
dec
sbb
js
sbb
imul
jge
jns
sbb
int3
push
loope
lea
daa
sbb
mov
push
fstpl
mov
mov
pop
stc
mov
idivb
std
imul
idiv
popa
inc
jbe
test
sbb
push
sub
popa
lods
jg
mov
sbb
repnz
fstpl
adc
pop
jnp
mov
sbb
loopne
jg
sti
mov
insb
in
orb
stos
push
js,pn
add
popl
cmpsb
loope
mov
lret
push
rcrl
mov
pop
pushf
add
jle
mov
test
arpl
mov
or
mov
shll
popf
jnp
cmpsl
and
jmp
push
xchg
and
jg
lret
sbb
mov
push
xlat
push
mov
inc
push
orb
cld
push
mov
aas
adc
add
mov
and
cwtl
pop
sti
mov
cmpsl
lock
ret
lahf
mov
jnp
imul
repz
xchg
int3
xchg
and
xchg
notl
test
xor
inc
aaa
xchg
push
int
cmpsl
jle
outsb
adc
outsb
popa
test
in
push
clc
mov
push
push
mov
test
sub
mov
out
stos
sbb
mov
pop
mov
push
inc
xor
add
movsb
add
xchg
xchg
mov
pop
add
and
sub
pop
xor
mov
test
pop
test
imul
sbb
add
push
push
cmpsl
jno
test
dec
dec
push
rclb
movsb
push
mov
dec
cwtl
test
jns
lahf
repz
test
adc
iret
outsb
shlb
leave
into
xor
cld
mov
add
dec
aaa
call
pusha
jg
lret
std
pop
aam
mov
add
cmp
sbb
jne
ja
push
cwtl
mov
jno
mov
push
adc
out
outsb
sbb
sahf
pop
xrelease
push
push
int3
cmp
pop
mov
pusha
jo
das
or
xchg
mov
adc
push
adc
pop
jl
push
aad
push
call
inc
jmp
fdivrl
sbb
mov
ja
cmp
xor
cwtl
and
ljmp
fsubs
jle
test
aad
sahf
adc
loop
dec
push
dec
pusha
dec
pop
push
enter
or
in
icebp
es
pop
lret
aas
sub
test
inc
xchg
mov
arpl
ss
bound
inc
cmp
pop
sar
adc
stc
sbbl
cli
and
mov
jg
fdivl
mov
sub
dec
mov
lahf
mov
sarl
mov
xlat
or
dec
iret
cmp
inc
pop
ret
mov
test
cs
add
cmp
add
xor
data16
out
loopne
xchg
gs
dec
and
or
enter
enter
loopne
pusha
pushf
imul
inc
movsb
pop
sub
pop
inc
call
pop
sarl
leave
in
test
xchg
js
pop
xor
insl
jp
movl
daa
pop
xchg
rorl
adc
mov
push
ja
mov
ret
movsl
out
adcl
test
xor
inc
sub
and
sub
cmp
xor
adc
ficomps
mov
fidivl
test
addr16
mov
inc
es
push
ret
sub
jbe
jle
cltd
push
push
mov
into
sbb
out
push
fdivs
adcl
or
and
sbb
pop
cmp
sbb
fwait
shll
cmpsl
xchg
cld
dec
push
call
dec
std
jnp
inc
push
sahf
das
sub
push
stc
or
sahf
jae
mov
cmpsl
xor
fimuls
repnz
jg
int
xchg
out
cmp
mov
mov
loope
mov
scas
xchg
imul
or
mov
xor
xchg
fdivs
imul
push
push
and
xchg
mov
hlt
mov
jno
repz
mov
ret
adc
adc
inc
mov
int3
cmp
mov
repnz
pop
mov
pop
sub
scas
xchg
jmp
jae
xor
jne
mov
imul
stos
add
pop
outsl
insb
out
out
xorl
ljmp
dec
loope
repnz
filds
add
mov
imul
and
pop
loop
push
push
ret
mov
daa
xchg
mov
pop
pop
stos
sti
test
adc
stos
scas
push
aas
ljmp
leave
shll
negb
dec
xchg
jae
imulb
stos
arpl
or
shlb
je
daa
in
mov
popa
in
mov
int
dec
mov
sarb
movsl
mov
fstl
insl
insb
cmp
fiaddl
xchg
push
dec
dec
outsl
and
jno
jbe
rorl
dec
ds
pop
lea
adc
lret
fs
lret
cli
xor
cmc
test
clc
jl
jle
ret
mov
repz
mov
ja
pop
fcmovnu
push
push
test
les
and
bound
ja
and
fdiv
push
sbb
call
sub
fidivs
push
test
pusha
xlat
pop
xor
sarl
imul
push
loop
sub
orb
aam
pcmpgtw
testl
lods
popf
loopne
movsl
dec
lcall
subb
out
adc
cltd
arpl
dec
loopne
jne
ja
mov
out
mov
movsl
cmpsb
shll
cwtl
imul
dec
ss
sbb
cmp
mov
cmp
xor
dec
cmp
int3
push
sbb
sbb
pop
mov
jae
test
inc
ret
sahf
push
cmp
ljmp
mov
aas
lret
in
ss
ja
mov
test
fisubl
xchg
lret
loope
aam
outsl
jmp
cmpsl
and
adc
test
pop
lds
cmp
mov
out
lret
add
mov
movsl
push
nop
push
jecxz
jb
popf
mov
out
cmpb
jnp
jmp
mov
push
lea
fists
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
