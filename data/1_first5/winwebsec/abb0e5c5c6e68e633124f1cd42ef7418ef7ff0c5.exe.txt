push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
inc
fmuls
stos
lahf
mov
arpl
movsb
jno
pop
addb
out
hlt
mov
jp
push
push
dec
xchg
mov
and
jo
pop
fxch
xor
inc
and
lcall
mov
in
mov
out
xor
imul
iret
xorl
inc
insb
jle
jnp
loop
cmp
fadds
and
insb
cmp
fsubl
test
fildl
das
pop
mov
ljmp
mov
aaa
mov
scas
inc
inc
xchg
dec
notl
sub
dec
faddl
xor
push
ja
rcr
dec
sub
cld
scas
and
push
cmpsl
or
xorl
push
inc
in
xor
enter
test
dec
dec
jl
mov
lahf
sub
and
sbb
or
gs
inc
mov
or
pop
loop
ds
lods
addr16
pop
je
jmp
mov
push
xchg
xor
dec
inc
xchg
push
jbe
out
je
xor
int
daa
loop
dec
mov
sub
and
les
xor
add
test
movsl
popf
add
jge
xor
add
inc
movsb
mov
inc
or
in
xlat
push
sub
aam
and
lods
mov
mov
stos
fidivrl
into
xor
jg
cmp
fwait
and
mov
lock
lahf
es
mov
inc
or
adc
push
jb
fimull
imul
dec
in
mov
or
xor
lods
setae
pop
pop
daa
and
sbb
ret
ja
mov
movsb
cmp
jns
pop
mov
fildll
fisubs
xor
nop
sub
sub
xor
fisubs
push
ret
xor
xor
es
cmpsb
pop
scas
xlat
leave
inc
out
and
mov
push
in
hlt
lods
jp
iret
outsb
mov
jb
sbb
dec
mov
outsl
adc
cmc
cmp
wbinvd
into
jne
sti
jb
lock
mov
xchg
inc
lea
pushf
pop
jp
cld
fidivs
xorl
jno
mov
scas
xor
xchg
adc
mov
sub
adc
jb
push
clc
js
xor
out
mov
sub
push
mov
and
loope
or
push
sub
dec
insl
mov
cmp
decl
mov
mov
shl
rclb
push
fldt
sbb
dec
movsb
xchg
fs
adc
mov
mov
pop
out
hlt
pusha
pop
testb
das
outsb
mov
lds
rol
push
in
xor
faddl
sbb
add
out
aaa
xor
adcl
mov
sbb
inc
into
sub
and
mov
mov
xor
mov
mov
std
sub
xchg
xor
call
xor
loope
aad
xchg
fldl
popa
aaa
pop
xchg
cmp
das
dec
aaa
pushf
sbb
or
add
cmpsb
int
jne
mov
das
int
dec
sbb
ret
andb
cmc
dec
xor
jmp
cli
cmp
jge
mov
or
push
pop
mov
sbb
insl
sub
pop
push
aaa
fidivrs
dec
std
into
in
mov
and
and
pop
mov
dec
push
mov
mov
das
dec
movsb
repz
sbb
inc
stos
jnp
xchg
fisubrs
jge
mov
inc
push
xchg
inc
enter
mov
xchg
sub
jns
rorb
arpl
stc
xchg
inc
sub
or
jae
filds
mov
sub
out
jnp
icebp
dec
cmpsl
jmp
dec
cmpsb
xchg
sbb
jmp
xchg
movsl
out
pop
cmp
das
shl
cmp
dec
and
jne
js
in
sub
ret
cmp
push
fdivrs
pop
sbb
adc
cmp
lret
mov
sub
cmp
mov
in
or
sbb
mov
xor
rorl
sbb
inc
inc
jecxz
push
test
ds
movl
push
add
push
pop
mov
fldln2
mov
pop
jnp
stc
inc
inc
xchg
xchg
mov
les
sbb
jb
inc
in
clc
aad
loopne
cmc
sub
cwtl
dec
mov
fdivr
pop
call
sbb
insl
scas
fisubl
push
mul
jg
insb
push
lock
xor
outsb
add
addb
pusha
cwtl
inc
jo
stos
icebp
jp
aam
inc
xor
xor
xlat
and
mov
leave
imul
mov
mov
shll
sub
popa
add
lock
stos
insl
inc
push
insl
and
push
jno
mov
iret
cltd
jb
out
push
xor
add
cmp
ds
fisubrl
xchg
inc
push
sbb
lret
std
pusha
push
jl
out
ja
cmp
and
xchg
jge
xchg
out
lret
mov
pop
adc
int3
cmp
xor
jae
add
out
and
and
lods
es
pop
jmp
xchg
adc
enter
sbb
mov
outsl
sbb
add
push
imul
cmc
sub
stc
xchg
mov
ds
cmp
or
scas
popf
lahf
pop
xor
mov
jp
sbb
ss
stos
pop
mov
xor
inc
rcl
loop
lock
mov
add
xor
xchg
sub
mov
repnz
call
jb
in
imul
popa
lcall
push
add
xor
xor
adc
cmc
mov
daa
xchg
shll
mov
ja
pop
hlt
fildl
add
dec
push
jle
test
adc
mov
test
dec
repnz
mov
pop
dec
add
test
andl
or
sbb
std
in
mov
pop
into
shlb
mov
cltd
and
sbb
sti
gs
and
mov
sub
pop
lahf
and
repz
mov
jne
enter
jo
ds
and
and
dec
out
test
loop,pt
jge
mov
pop
shrl
inc
jmp
pop
imul
sub
mov
call
mov
popf
inc
adc
dec
jo
data16
rcrl
das
lret
jo
test
out
sti
fadds
pop
lcall
cmovp
out
cmp
repz
popf
mov
movsl
dec
fucomp
dec
testb
ss
xor
pop
mov
dec
test
pop
and
out
sbb
repnz
daa
clc
call
out
and
out
jl
mov
push
test
addr16
adc
imul
enter
jne
jecxz
xor
stos
jnp
loop
enter
xor
push
addr16
shrb
xor
mov
dec
xor
xchg
insb
ds
jp
xchg
sub
jb
ja
ror
les
in
in
ret
sbb
sub
pop
and
jbe
and
in
pushf
push
test
sub
out
sub
jnp
sbb
adc
jne
jp
stos
movsl
pusha
fsts
stos
fstpt
fs
in
xor
into
sbb
fistps
mov
test
and
dec
orb
fldl
mov
mov
or
add
lock
jbe
sbb
cmp
cmp
icebp
or
aas
adc
out
jno
imul
ds
ljmp
adc
cmc
inc
jmp
and
cmpsb
ret
jecxz
sbb
negb
hlt
shl
addr16
jmp
push
and
es
sbb
lret
imul
cmp
sbb
je
sti
mov
mov
adc
and
push
jmp
pop
das
jle
popf
daa
mov
xlat
push
dec
inc
jb
xor
mov
push
push
mov
pop
inc
adc
pop
cli
stos
jo
mov
scas
repnz
pop
std
mov
xchg
jbe
sbb
push
lret
fidivrl
xchg
out
out
repz
pop
mov
mov
or
xchg
cli
fistpl
stc
sbb
call
ret
xchg
xchg
std
iret
loope
mov
jp
inc
inc
jbe
pop
mov
arpl
dec
cli
hlt
jb
pop
jbe
pop
neg
seto
push
mov
stos
loopne
push
outsl
add
xchg
aam
test
sub
scas
in
pushf
add
imul
lret
sarb
add
dec
fs
aaa
jne
add
test
mov
cmp
lods
add
fadds
js
xchg
mov
xchg
or
mov
and
leave
mov
jns
pusha
xchg
cmp
pop
in
mov
mov
jle
bound
mov
leave
mov
jmp
push
into
xorl
icebp
mov
xor
jns
inc
xchg
cwtl
cmp
andb
xorb
test
dec
mov
push
jo
shlb
popf
jle
push
jl
out
mov
cmc
ja
stc
rol
mov
into
nop
ss
sbb
add
or
ja
repnz
pop
xorb
inc
icebp
xor
lret
and
pop
cmp
sub
fmull
test
xor
xchg
add
loope
jge
imul
inc
sbb
pop
inc
int
pop
pop
adc
jne
rcr
xor
scas
aam
enter
and
fsubl
insl
scas
cmc
cli
loope
push
aaa
outsb
mov
mov
sbb
mov
xchg
dec
adc
adc
lods
subl
lahf
and
mul
mov
imul
mov
xor
bound
fsub
je
into
stos
std
or
imul
pop
inc
pop
xchg
rol
push
clc
add
cmp
push
fldcw
int
xorl
and
je
mov
push
mov
xchg
inc
inc
cmp
out
aaa
push
push
cmp
or
pop
xchg
xor
push
cmp
adcl
sbb
les
adc
xchg
mov
pop
test
sbb
rol
ret
cmp
mov
xchg
fidivs
mov
mov
xor
add
call
sbb
aaa
cli
cmp
imul
ja
ds
iret
iret
xchg
pop
ja
jns
xchg
cmp
popf
inc
mov
push
iret
mov
jmp
nop
and
pop
imul
rcrl
lcall
mov
popa
mov
dec
mov
daa
inc
lahf
lea
sub
gs
sarb
push
xchg
fs
loop
cmp
mov
enter
xor
cli
xlat
iret
add
hlt
cmp
jp
mov
das
jnp
imul
scas
test
fsubs
dec
mov
fsts
aas
js
jecxz
xchg
push
jmp
jbe
mov
jne
les
push
je
or
and
pop
dec
nop
js
in
pop
addr16
scas
dec
inc
shld
gs
jbe
mov
rcrl
push
jnp
add
add
sub
out
or
sub
push
mov
mov
push
add
mov
xchg
cmp
cwtl
push
movsl
add
cmp
and
inc
fst
xor
data16
cmp
adc
inc
stc
sbb
dec
xor
pop
ljmp
or
mov
loopne
adc
add
mov
inc
mov
cmp
add
testl
jge
mov
rorb
add
sbb
pop
cwtl
ret
into
rclb
pop
adc
sbb
popf
mulb
leave
push
rsm
fldl
jmp
xchg
icebp
xchg
aad
loope
addr16
xor
fstl
xlat
xchg
fldcw
mov
sub
shrl
inc
or
sbbb
and
and
out
dec
movd
aad
mov
mov
insl
or
gs
lock
dec
lds
gs
mov
mov
ljmp
fnstsw
sub
inc
pop
sub
mov
mov
sbb
mov
stc
cmpsl
mov
dec
mov
hlt
test
into
ljmp
jp
push
push
repnz
sbb
aam
and
or
cmp
aas
or
loop
jl
aad
mov
lds
inc
xchg
les
xchg
pop
pop
clc
inc
addr16
push
xchg
jo
jmp
ret
xor
stos
shr
mov
xor
push
and
jge
inc
adc
cs
stc
and
sbb
xchg
bound
pop
sarb
ret
lds
pop
sti
sub
fadd
xor
mul
sub
scas
mov
imul
rcr
mov
add
jns
icebp
fwait
xlat
lds
or
or
adc
hlt
xor
adc
sub
out
mov
or
loopne
int
add
or
lret
stos
movsl
and
push
lds
jnp
or
outsl
push
jmp
or
mov
nop
addr16
outsl
sub
aas
xlat
ficoml
dec
pop
add
or
into
or
xor
jge
sub
adc
add
cs
jns
pop
popf
mull
cmp
fstps
lds
adc
movsb
dec
add
mov
push
dec
mov
test
jecxz
mov
sbb
pop
adc
aad
pop
test
cmp
adcl
inc
rolb
hlt
xchg
sub
fisttps
lcall
jnp
das
mov
sbb
into
sub
sub
and
iret
mulb
shll
std
inc
les
sbb
daa
mov
je
push
adc
nop
outsb
aas
repz
push
das
ja
xor
insb
cmpsb
jne
mov
sub
push
negb
push
in
stos
ret
jns
mov
aad
jo
lock
insl
das
adc
into
sbb
pop
jns
add
push
xchg
mov
mov
es
fisttps
pop
bound
repnz
sbb
cmpsl
sub
stos
fs
mov
jmp
jl
jecxz
xchg
aas
in
inc
mov
sub
cmc
add
stc
mov
lret
das
inc
add
or
xchg
mov
mov
pop
and
inc
and
mov
loop
pop
mov
pop
cmpsl
cmp
gs
xor
loope
das
push
mov
mov
push
xchg
sti
adc
fs
bound
fs
dec
xchg
jo
fildl
dec
push
test
push
stos
mov
rcl
lock
mov
das
test
fistl
jno
int
push
cmp
out
outsl
xchg
xor
insl
cmp
fisttpl
inc
push
pushl
inc
mov
cwtl
mov
in
push
fstl
dec
mov
test
in
fidivrl
and
jae
mov
mov
daa
or
fldcw
iret
add
push
push
pop
out
mov
xchg
repnz
sbb
xchg
mov
sahf
addr16
jmp
orb
lret
add
sahf
sbb
jnp
je
xor
lock
mov
xchg
sarl
testl
out
cmp
cmpl
insl
fcoms
stos
call
pop
loope
fwait
cmp
stos
sbb
cmpl
and
ljmp
pop
dec
jnp
mov
mov
pop
imul
nop
ss
stc
adc
sbb
push
mov
test
xorb
sbb
sub
pop
dec
xchg
out
jge
scas
pop
fcoms
lret
add
jns
cmp
leave
xchg
ljmp
or
jne
popf
clc
xchg
and
gs
inc
xor
movsb
dec
fcomip
fdivl
out
and
or
mov
or
xor
xlat
fs
jp
fwait
push
inc
mov
in
call
or
shll
enter
push
cmp
lds
pusha
pop
inc
out
or
popf
rorl
push
dec
fistl
enter
test
cmp
ss
push
aaa
adc
in
push
push
sti
stos
mov
outsl
pop
jns
cmpsb
inc
hlt
fidivl
jo
and
push
xchg
punpcklbw
fnstcw
jo
add
mov
out
sbb
xchg
dec
lods
int
pusha
int3
dec
out
mov
xor
outsl
mov
push
aas
aad
lret
out
inc
test
and
jmp
movsb
rcrb
sbb
and
sahf
fdiv
pop
test
sbb
cmp
test
mov
les
cmpsl
xchg
sbb
std
jecxz
sbb
or
xor
pop
call
push
sub
insb
xchg
cld
mov
out
notb
dec
jle
mov
jnp
mov
sub
mov
dec
jge
sbb
push
mov
xor
push
pop
adcl
adc
fisttpll
and
mov
cld
push
add
adc
jl
sub
stos
adc
stos
das
addr16
sbb
or
into
push
lock
imul
js
mov
cli
and
jno
xchg
mov
popa
das
popf
mov
or
and
pop
unpckhps
iret
pop
jno
push
imul
fiadds
testb
sub
loop
cmp
js
jmp
push
fmul
pop
daa
into
fldenv
das
dec
loope
push
adc
inc
cmc
aaa
sbb
push
aad
fs
outsl
repnz
dec
stc
jl
lss
in
jge
fidivrl
cld
and
pop
push
pop
and
pop
and
cmpb
lods
xchg
dec
lock
push
scas
xchg
std
dec
pop
sahf
xor
or
and
int
les
adc
push
pop
mov
jno
lahf
pop
sub
jecxz
int3
ljmp
mov
inc
jp
ds
popf
add
add
add
or
outsb
cwtl
lahf
push
jge
mov
je
mov
mov
mov
cmp
and
das
mov
outsl
sub
popa
pop
xor
push
loope
aad
xor
jecxz
test
test
and
and
test
gs
adc
or
mov
sub
jnp
jl
sub
pushf
add
inc
unpckhps
and
xor
mov
or
inc
adc
push
mov
mov
cltd
jecxz
push
dec
addl
add
fcompl
nop
pusha
insl
pusha
ljmp
imul
mov
out
cli
scas
addr16
sub
xchg
xor
jb
idivb
ror
jmp
mov
dec
push
mov
pop
sbb
fisubrl
int
cmpsl
push
mov
dec
addr16
mov
cli
idivb
fimuls
adcl
imul
or
jo
mov
lahf
mov
add
fstpt
aad
aad
cwtl
jmp
dec
push
movsb
insl
in
xor
lcall
sti
xchg
add
dec
dec
hlt
or
add
sbb
ret
xor
cmp
xchg
clc
inc
sub
sbb
inc
jo
aas
pop
add
jbe
out
and
addr16
cs
dec
xchg
loopne
and
cmp
add
inc
cmp
inc
insl
repnz
stc
dec
pop
cltd
xor
pushf
or
ret
repnz
and
push
je
lods
scas
aad
push
cmpsb
ret
lock
and
sub
add
popa
xchg
addr16
push
aam
mov
aas
and
inc
imul
fbld
pop
inc
imul
cmc
sub
nop
ret
scas
adc
adc
je
lock
outsl
aaa
inc
and
or
int
stc
pop
and
lahf
outsl
dec
mov
mov
mov
aaa
dec
outsb
inc
jecxz
push
pop
sbb
mov
sbb
into
pop
jge
loope
pop
cmpb
mov
inc
xor
sub
cwtl
testb
std
mov
mov
sahf
cli
pop
xchg
loopne
dec
test
lods
jb
cmpsb
add
push
ja
pusha
xorb
adc
iret
cwtl
movsl
cmp
jns
sbb
push
scas
jb
mov
test
xchg
xor
xor
test
lcall
cltd
pop
mov
lahf
adc
mov
push
imul
std
popa
and
jge
sbb
xchg
orb
inc
es
xchg
adc
pop
jecxz
in
loopne
push
test
add
xorl
outsl
mov
pop
aam
cmp
out
fcom
jno
rcr
mov
leave
jnp
push
jne
scas
cmp
mov
or
imul
sahf
push
sub
enter
mov
rorl
test
sbb
cmp
sti
pushf
mov
sbb
cli
push
divb
sub
outsl
adcb
push
mov
inc
sub
or
loopne
mov
sbb
inc
adc
push
cltd
push
jg,pn
fists
fisubs
out
pop
fldl
jmp
pusha
sbb
jp
rorb
lods
js
aam
scas
lahf
lsl
ljmp
pop
sub
movsl
xchg
std
outsl
cmp
in
ds
adc
mov
or
sbbb
push
mov
adc
lods
xor
rclb
fs
je
and
les
sub
aas
adc
inc
fsub
mov
jns
adc
lahf
cmpsl
jbe
and
fldcw
in
lods
into
xchg
jnp
sahf
lret
pmaddwd
jo
test
fs
in
sahf
repz
mov
icebp
ret
sub
mov
lds
lods
nop
mov
leave
inc
lret
scas
jge
add
jmp
or
shll
inc
insb
add
push
cwtl
or
mov
pop
pusha
pop
sub
cltd
lahf
cwtl
rcrl
jo
dec
or
push
mov
outsb
sbb
loopne
cmpl
pop
pushw
sub
xor
xchg
lret
enter
xor
push
sti
xchg
lcall
cwtl
loope
xlat
int
in
push
stos
sbb
ss
rorb
mov
xor
mov
mov
cmp
rcrl
call
les
in
enter
cld
dec
test
mov
out
jp
icebp
ljmp
dec
jge
xchg
or
adc
repnz
cmp
shlb
movsl
fcoms
inc
mov
jp
shll
loope
stos
insl
ret
popf
xchg
cmpb
stc
mov
cld
daa
mov
cmpsl
cmp
das
js
je
inc
dec
or
pop
and
fcoms
test
pushf
sbb
imul
call
mov
pop
mov
jg
or
xor
repnz
stos
ja
ds
push
push
mov
sti
pop
fsubs
mov
adc
imul
add
jp
sarl
sub
stos
and
inc
movsl
scas
cmpsl
and
push
cwtl
ret
pop
push
iret
mov
sahf
aas
jnp
movsl
int
je
push
inc
pop
adc
hlt
loopne
inc
jg
dec
dec
push
push
push
enter
mov
adc
inc
arpl
aas
fidivrl
xchg
mov
xor
push
sub
insl
adc
add
mov
and
push
ret
and
imul
fst
push
das
sti
mov
xchg
adc
cmp
pop
insl
jmp
in
mov
leave
jbe
adc
xor
adc
lret
xchg
mov
lcall
xchg
imul
inc
cmpsl
or
xor
fldt
xchg
icebp
add
jg
adc
rclb
insb
push
push
lods
jo
xchg
pop
je
in
add
icebp
insb
inc
sub
push
cmpsl
push
pminsw
push
xlat
xchg
ret
xchg
adc
shll
fimull
into
hlt
test
dec
fadds
fwait
xchg
mov
aaa
mov
out
cs
jnp
mov
dec
jg
adc
push
fs
sbb
mov
mov
insl
sub
pop
mov
mov
push
xor
adc
aad
dec
cmp
mov
js
cltd
jle
and
or
mov
pop
in
lcall
test
mov
fdivrp
hlt
or
xchg
push
je
aaa
jnp
pusha
pop
gs
sbb
cmp
cmp
shrb
mov
das
sbb
frstor
adc
in
or
ficompl
xor
inc
andl
iret
pop
push
movsb
les
aad
hlt
cltd
mov
jno
mov
adc
fdivp
in
inc
push
jg
cwtl
inc
jmp
pushf
decl
jecxz
ja
and
and
push
pop
pop
jle
js
dec
push
or
std
push
cli
add
arpl
and
cmpb
rcll
rorb
adc
add
clc
cwtl
cmpsl
es
cwtl
adc
into
xchg
and
push
call
xchg
xor
jecxz
orl
and
xlat
adc
and
mov
ljmp
lret
or
lods
sbb
outsb
or
mov
in
int
pop
pop
jns
es
pusha
loop
mov
in
dec
push
mov
inc
mov
jl
icebp
aam
fidivl
sahf
testl
mov
in
cli
cmp
lret
jo
pop
jp
push
ljmp
xchg
out
fwait
mov
leave
fisubrs
jmp
outsl
or
out
jnp
mov
add
mov
lods
push
loope
clc
mov
jge
push
adc
mov
loopne
mov
ret
or
cmp
enter
mov
adc
and
bts
rorb
int
clc
mul
and
sti
rcl
xchg
fwait
jl
add
sbb
fdivl
jg
push
xchg
fwait
mov
popf
pusha
mov
or
rcr
dec
std
pop
mov
push
dec
bound
enter
out
pusha
orw
mov
cmc
sbb
int3
xlat
adc
jb
enter
sbb
mov
cmp
dec
fisubl
push
mov
in
cmp
xchg
es
gs
loopne
push
xchg
xchg
adc
sbb
mov
cs
es
inc
dec
push
jbe
inc
dec
mov
je
sub
flds
orb
leave
inc
dec
cmp
loopne
sbb
lahf
jne
mov
dec
mov
lds
dec
std
cmp
sbb
data16
aam
sbb
jbe
mov
leave
add
test
ret
mov
sbb
nop
adc
fildl
sbb
pop
xchg
xchg
fists
mov
push
cmp
pop
inc
xor
movsb
sbb
or
mov
or
test
pop
pop
leave
incl
out
jmp
jno
dec
or
inc
seta
pop
push
jmp
xor
jo
mov
push
mov
adc
jp
pushf
sbb
fs
cmp
imul
mov
dec
adc
stos
sub
jne
sarl
mov
pop
adc
fnsave
push
sub
pop
mov
fdivs
xor
ret
cltd
ljmp
pop
fucomi
pop
dec
nop
rolb
insb
sub
ja
pop
mov
fcomip
cmp
mov
dec
add
xchg
dec
xchg
adc
xor
mov
das
mov
les
or
dec
pusha
ret
sbb
and
fidivs
xchg
mov
repnz
into
inc
stc
out
addl
andb
nop
dec
cmp
mov
mov
bound
ret
dec
mov
inc
fsts
inc
and
jnp
insl
popw
mov
xor
repnz
sarl
and
jns
sarl
mov
maxps
pop
sbb
addr16
scas
loop
inc
icebp
test
loope
ljmp
or
in
mov
je
inc
addr16
sbb
xchg
test
movb
xor
rep
mov
ret
inc
fdivs
pop
mov
and
sub
mov
inc
sti
mov
outsb
stos
bound
pop
adc
xchg
mov
xor
je
adc
enter
inc
aad
sbb
xchg
xor
scas
jmp
enter
cmp
xchg
and
dec
dec
in
insl
pop
or
scas
int
sbb
enter
jmp
xchg
loop
dec
push
out
mov
or
in
mov
cltd
ror
out
dec
ret
cli
js
jnp
addb
repnz
push
ljmp
xorb
xor
arpl
add
sbb
mov
inc
jnp
or
and
fisubs
xchg
mov
pop
lock
inc
adc
jle
dec
movsb
jge
stos
sub
add
inc
xorb
mov
xor
cmpl
adc
mov
xchg
and
iret
lret
je
repz
mov
fdiv
lea
or
cmp
in
push
sub
dec
sub
dec
cmpsb
adc
lret
adc
jno
ss
dec
lds
mov
loope
or
jno
rorl
inc
into
inc
aam
xchg
scas
stos
fs
lea
lds
push
in
pop
ja
mov
cmpsl
dec
adc
pop
add
insl
push
andl
jae
daa
pop
xor
std
push
sub
sub
inc
lods
sbb
hlt
push
incl
test
inc
stos
scas
cmp
push
xchg
push
cltd
push
dec
insl
pop
stc
push
cltd
rolb
fadds
inc
dec
cmp
je
sub
sbb
ficomps
lcall
mov
jp
mov
bswap
js
cmp
fwait
loopne
pop
adc
int
jbe
addr16
pop
fdivrs
pop
xchg
pushf
insb
ljmp
xor
movsl
popa
or
xor
sbbb
adc
rol
movsl
movsb
pop
mov
test
push
xchg
add
int
sub
lods
jno
mov
xchg
jnp
cmp
xorl
sub
sub
addl
fs
fsubr
xlat
mov
lock
leave
dec
xor
fiaddl
loop
xor
rcll
aam
ja
ljmp
lcall
mov
mov
std
mov
sub
jnp
mov
mov
leave
ret
nop
ret
or
fcmovnb
dec
or
cmp
push
lret
leave
pop
xchg
push
faddl
lahf
adc
mov
dec
fistl
dec
aad
jecxz
mov
les
or
adc
fildl
sub
lret
mov
pop
inc
outsb
add
and
aam
shl
add
lods
inc
leave
das
mov
fcomps
push
mov
popa
and
cmp
dec
shlb
fisttps
inc
aas
or
pop
ficoms
sbb
repnz
enter
test
jb
jmp
or
sahf
or
adc
xchg
lret
xchg
mov
sbb
mov
inc
test
adc
mov
ljmp
inc
sub
adcb
adc
cmovp
lods
mov
mov
cmp
jp
outsb
cmp
jecxz
bswap
mov
hlt
mov
push
jae
in
mov
fldenv
daa
or
inc
into
sbb
aad
adc
call
push
lahf
xor
dec
cmp
insl
sbb
idivb
inc
bnd
test
rclb
cltd
popf
dec
sbb
cs
into
pop
sub
test
jbe
cmp
jns
ret
and
mov
fstpt
mov
das
syscall
loopne
stc
aam
hlt
xor
insl
inc
dec
jp
pusha
loopne
mov
leave
pop
dec
clc
push
stos
cwtl
push
mov
das
mov
test
sbb
mov
lock
sbb
repnz
cld
hlt
enter
test
xchg
ds
push
xchg
sbb
clc
orb
hlt
popl
pusha
cwtl
sbbl
insb
mov
xchg
xchg
xchg
push
adc
cmpsb
loopne
pushf
imul
sbb
lret
xor
aaa
test
or
daa
push
in
pop
xchg
mov
inc
mov
scas
loope
inc
add
sbb
push
or
mov
inc
pop
pop
push
jmp
repz
sbb
pushf
incb
sbb
mov
and
orb
repnz
mov
sub
and
ds
das
cmp
xchg
jo
add
xor
sub
push
cmpsb
scas
dec
mov
sub
div
fwait
test
sbb
lret
or
push
cld
mov
pop
xchg
ret
mov
push
jle
iret
or
jecxz
sbb
repnz
clc
dec
nop
test
sahf
pop
pop
movq
fs
subb
adc
jecxz
addr16
add
mov
das
sub
outsl
pop
hlt
xor
cmpsb
sarb
inc
dec
enter
jae
inc
cmp
push
jge
or
cmp
mov
cmp
cmp
mov
adc
adc
arpl
stos
or
pop
push
nop
lcall
loope
add
jg
ja
fiadds
fisubs
fidivl
fdivrl
in
push
jno
inc
push
js
dec
popa
or
dec
add
mov
inc
notl
mov
es
inc
sti
xchg
test
in
mov
add
rclb
xchg
aad
std
dec
nop
mov
stos
and
cs
fisttpl
mulb
push
js
mov
and
inc
bound
push
push
or
cmp
fcoml
fiadds
mov
mov
int
cld
sbb
mov
xor
push
enter
fwait
xor
pop
shrb
cmp
inc
je
push
sahf
ljmp
mov
cmp
mov
adc
lahf
xchg
fcmovb
xchg
leave
cmpl
xchg
mov
movsb
xor
pop
test
aaa
sub
mov
lock
add
dec
jae
call
mov
in
jp
pop
dec
outsb
add
dec
mov
dec
jle
sbb
aaa
stc
and
cltd
push
xchg
in
inc
mov
xchg
sub
adc
dec
jecxz
mov
jbe
sti
and
clc
ljmp
int3
into
fcoml
xor
lcall
push
adc
xchg
jne
pop
pop
add
pop
stc
jb
or
loope
fbstp
jecxz
mov
adc
pop
adc
xchg
push
pop
test
call
test
and
scas
mov
aad
sbb
enter
js
das
fsts
icebp
js
arpl
sub
mov
sbb
jns
sub
jbe
test
pop
leave
test
sbb
add
mov
xchg
lock
scas
xor
jecxz
xchg
mov
scas
push
jmp
addb
sub
mov
addr16
push
and
negl
cmp
mov
push
mov
iret
and
xor
out
add
adc
cld
ja
ljmp
dec
lea
lret
rolb
test
idivb
dec
push
and
test
movsb
cmp
stc
loop
xchg
rclb
notb
shrl
jae
ret
or
enter
adc
je
xchg
jg,pt
js
lods
jne
jns
lods
mov
ds
jns
sbb
inc
nop
cmp
imul
mov
stos
push
add
in
jp
fnstenv
cltd
pop
cmp
test
mov
sbb
mov
lods
stos
pop
fmulp
daa
pop
mov
ljmp
dec
or
mov
repnz
std
imulb
cmp
xchg
or
mov
jp
mov
or
or
fistl
push
mov
testb
incb
pop
mov
cld
push
jg
push
mov
sub
test
jle
push
sub
cmp
push
or
jge
sarl
or
pop
push
arpl
leave
sbbl
sbb
aad
ljmp
mov
mov
cmp
aad
fldl
cmp
and
lret
push
add
add
or
nop
lods
and
and
xchg
xchg
rclb
add
not
je
in
xchg
xchg
in
pushf
int
cwtl
movsb
cli
push
sub
sbb
pop
jmp
fdivs
jmp
in
cmp
dec
das
mov
int3
push
push
fiaddl
popa
push
dec
in
repz
shlb
xchg
xor
into
pand
dec
lods
dec
movsb
and
mov
mov
pop
hlt
test
aas
pop
out
fdivs
test
stos
pop
stos
aas
sbb
xchg
loopne
insl
sub
add
sub
setle
xor
add
movsl
negl
pushf
shll
push
xchg
sub
jle
mov
rolb
add
xchg
mov
loope
aas
mov
and
mov
cmp
add
sahf
dec
loopne
inc
out
push
jge
fcoml
xor
pop
outsb
notb
push
adc
sti
cmp
jne
stc
adc
xchg
push
push
mov
add
push
push
jae
scas
jl
pop
or
and
push
cmp
icebp
jmp
pop
cmpsl
mov
xchg
sub
out
sub
or
sbb
stos
mov
ret
inc
call
cmpsb
enter
jle
dec
mov
cmp
push
insl
orl
adc
xor
nop
sub
pop
or
pop
adc
arpl
mov
lret
sahf
sub
shlb
roll
mov
mov
push
sti
xchg
push
mov
repz
sbb
jae
xchg
test
popa
orl
stos
in
ljmp
cmp
inc
sahf
daa
mov
pop
fsubrl
mov
pop
lds
sbb
mov
pushf
mov
jp
mov
and
cmp
popa
repnz
xor
sub
lret
jge
test
mov
xchg
insb
rcrb
test
xchg
inc
stos
xchg
outsl
popa
jo
addr16
jl
leave
xchg
add
cmp
scas
fistl
call
test
xchg
xchg
or
popa
sahf
decl
lods
mov
add
adcl
out
mov
cmp
cmpsl
push
mov
out
xchg
jge
adc
cs
dec
sbb
adc
cmpsb
cs
jmp
fimull
sahf
jge
xor
int
outsb
aam
cmc
lret
mov
les
sub
add
clc
je
push
cmp
mov
and
mov
sub
cmp
xor
dec
mov
jecxz
xor
daa
int3
dec
aam
insl
outsl
stc
pop
arpl
insl
adc
ret
inc
je
push
nop
push
lock
dec
psubd
fisttpll
inc
inc
dec
sub
cmp
out
stos
test
in
lcall
add
pusha
jmp
loope
add
into
or
or
insl
int
mov
add
es
xchg
aad
cmpsb
push
ja
push
mov
movsl
out
std
dec
lock
adc
dec
inc
or
out
sarb
mov
mov
and
cmp
mov
pop
or
ret
cs
mov
or
jp
mov
lock
stc
bound
jb
xor
cmp
pop
mov
movsb
or
inc
push
add
sahf
repnz
dec
sub
and
jno
leave
mov
jne
test
or
xchg
pop
fwait
inc
icebp
fsubrl
push
into
xchg
cmp
cs
pop
out
pop
jne
popf
test
in
btc
pop
cmp
sbb
add
js
movsl
call
fldl
mov
lcall
mov
mov
leave
add
popf
div
add
out
mov
fs
subl
vmulsd
mov
scas
ljmp
ss
cmpsl
push
lds
mov
sub
inc
loop
pop
adc
fidivrl
jno
cmpsl
mov
pusha
or
cmp
or
inc
add
mov
rolb
add
mov
jb
xchg
insl
add
pop
test
loopne
or
xchg
out
loop
mov
rcll
mov
es
mov
sub
push
je
cmc
mov
or
mov
fcomp
xchg
bnd
mov
aas
push
mov
lea
mov
xchg
pop
adc
shlb
push
mov
mov
xor
scas
adc
push
je
cwtl
data16
iret
push
xchg
adc
adc
imul
add
daa
cmp
adc
cmp
ret
push
mov
out
inc
push
inc
push
ror
int
push
cmc
inc
mov
arpl
xor
adc
test
dec
insl
add
dec
cltd
xchg
or
push
inc
adcl
adcl
loop
int3
stc
pop
or
inc
adc
mov
cmp
adc
xor
pop
and
inc
sbb
sbb
repz
inc
mov
into
mov
jb
and
insb
mov
sbbl
mov
cmp
adc
stos
or
xlat
push
xchg
cwtl
popf
add
mov
cs
mov
xor
mov
sub
adc
and
adc
imull
xor
call
push
inc
dec
ja
cmp
push
aad
scas
inc
repz
lret
shlb
cmp
rorl
lea
ret
sbb
jnp
push
or
int3
jg
dec
push
lods
pinsrw
mov
sarl
insl
lds
xor
mov
roll
cltd
or
je
cmp
xor
mov
jne
cmp
ja
adc
or
in
dec
aas
mov
push
xchg
loopne
repnz
lea
in
dec
aas
add
das
mov
xchg
mov
aam
mov
testl
pushf
aas
addl
into
jmp
cltd
or
test
cmp
popf
or
repnz
std
outsb
in
dec
xchg
stos
popa
lcall
xor
jl
mov
push
pop
lcall
dec
sti
sbb
loop
push
cmp
add
movsl
lcall
ffreep
push
xchg
inc
push
pop
scas
repz
xchg
movsb
sbb
sarl
xchg
lock
ds
dec
orl
sti
cmp
mov
or
nop
inc
inc
int3
jnp
daa
and
fldl
adc
mov
push
jp
cli
stc
pop
test
xor
jmp
test
add
loop
bnd
into
cmp
into
icebp
lret
aas
pop
insl
sahf
cmc
and
lods
push
pop
add
pushf
in
int3
test
in
mov
out
sbb
out
and
sbb
inc
push
mull
out
mov
jo
dec
test
popf
loopne,pt
btc
hlt
fwait
daa
ljmp
aaa
mov
int3
scas
mov
dec
xchg
mov
decl
mov
mov
cmpsl
xchg
and
out
sbb
lret
cmp
ljmp
add
ja
adc
fdivs
and
imul
es
xchg
adc
dec
popf
and
and
cmp
in
lds
dec
add
arpl
mov
movsl
xchg
mov
fs
inc
xorb
and
ss
and
adc
lret
imul
sti
pop
call
test
jbe
pop
rcrb
cmp
mov
fdivrl
aam
movsl
aam
inc
xchg
push
loope
aad
push
mov
push
daa
xor
into
dec
cmp
into
xchg
push
pop
lret
sti
mov
jo
fldenv
fwait
into
pop
test
lods
jae
add
fiadds
fdivs
aam
insb
lods
ficompl
in
xchg
filds
sub
cmp
xchg
gs
repz
add
pop
in
pop
ss
adc
cltd
jmp
inc
xor
testb
in
push
cmpsl
inc
pop
xchg
dec
lods
vpaddq
cmp
mov
jnp
and
test
ljmp
xor
fucomp
aad
movsl
loop
dec
cmp
out
hlt
std
in
cmp
sbb
nop
mov
push
mov
xchg
jns
outsb
jle
sub
jbe
and
inc
shlb
dec
lds
sbb
test
mov
sbb
jb
pop
jmp
jb
test
aas
repz
shrl
mov
cmp
mov
insl
adc
cmp
pop
ljmp
out
add
jae
scas
pop
movsl
xchg
negb
jmp
aad
mov
lret
sub
jb
leave
and
int
sarb
xor
sub
int
ret
cmp
pop
shll
mov
cltd
jle
and
adc
mov
in
mov
lret
pop
aas
mov
mov
stc
loop
fwait
sub
ficomps
movsb
notl
pop
ret
leave
lods
add
adc
in
std
jae
iret
adc
and
mov
out
mov
inc
push
in
push
dec
add
mov
fldenv
mov
push
js
cmp
pop
aad
sbb
nop
stos
xor
mov
fistpll
dec
testl
lret
fsubs
and
jmp
pop
stc
dec
out
push
test
sbb
inc
pop
lea
nop
push
mov
nop
mov
aaa
icebp
cmpb
popf
jne
in
cwtl
cmp
mov
inc
mov
pushf
jae
sahf
mov
adc
test
fnstsw
cmp
fs
xorl
cmc
rcll
in
jbe
fxch
and
out
loop
mov
jnp
pop
sti
add
xchg
orb
lahf
std
popf
lret
pop
nop
cmc
jmp
jecxz
adc
xor
dec
or
iret
sbb
add
clc
xchg
push
push
in
inc
sbb
adc
test
div
push
mov
inc
push
xor
repnz
pop
mov
mov
scas
lea
dec
dec
ss
enter
das
addr16
aad
out
mov
shll
in
pushf
jbe
roll
pop
and
not
inc
cmp
mov
int3
push
pop
sub
call
lret
mov
fidivs
mov
out
cmpsb
clc
dec
or
scas
xor
push
cs
and
xchg
xor
add
cmp
mov
daa
imul
sbb
mov
xchg
loope
cmpxchg
sub
pop
lods
add
das
repnz
out
xor
add
or
arpl
leave
dec
stc
sub
xlat
enter
jbe
jnp
int
jmp
xchg
jne
dec
aad
mov
cmpsb
pop
mov
mov
aad
xor
das
enter
and
jnp
js
arpl
popa
icebp
ja
adc
sub
test
repz
pop
jae
pop
rorb
stos
mov
mov
stos
adc
stos
mov
mov
ss
add
sub
xchg
lock
loop
stc
push
push
lea
cwtl
mov
cld
and
enter
lahf
add
dec
inc
mov
inc
cmc
mov
push
out
cmp
shlb
mov
sub
xor
jae
mov
shll
jne
sub
inc
push
movsl
mov
icebp
inc
jp
or
rorl
dec
mov
cmpsl
sbb
sbb
inc
sub
xchg
xor
xchg
xchg
mov
sub
call
lret
shll
xorb
pop
ficomps
dec
cli
and
adc
loop
xchg
adc
dec
xchg
in
shll
cmc
test
pop
movsb
cmpsl
gs
ret
repz
inc
mov
cmpsl
cmp
sbb
in
addl
dec
pushf
stc
dec
jmp
out
adc
cli
mov
fld
mov
cmp
sbb
addb
int3
sbb
aad
loopne
mov
and
das
cltd
push
fdivs
lds
outsb
fs
jbe
push
and
sbb
scas
sub
add
lods
sbb
std
push
xlat
in
ja
sub
inc
fcomp
adc
cmp
mov
inc
xor
mov
adc
add
lret
mov
sbb
loop
inc
icebp
dec
lods
fsubr
sbb
cltd
xchg
jae
or
out
push
daa
stc
push
mov
adc
sahf
jl
sub
adc
cmp
pop
loop
sbb
mov
jmp
sub
xchg
in
shrb
and
or
fwait
mov
sub
ret
adc
fadds
fsubp
clc
and
and
clc
mov
ret
dec
mov
daa
add
loopne
aad
rorb
mov
jmp
inc
imul
xchg
and
bound
in
push
mov
scas
xor
mov
sbb
outsb
testl
pop
js
cmpps
es
dec
in
mov
push
dec
add
jl
call
adc
mov
mov
ljmp
cld
adc
xchg
jecxz
jae
jg
cmpl
cmp
clc
mov
adc
repz
jb
lret
sbb
fwait
add
lahf
in
loopne
imul
imul
insb
jns
mov
js
fstl
jnp
adc
xor
popa
fsubr
es
std
lods
loopne
jg
add
or
dec
mov
popl
inc
add
adcb
icebp
sub
movsl
cmpsl
pop
xor
cmp
push
pop
pop
outsl
inc
mov
add
mov
inc
notb
das
pop
daa
aad
enter
mov
outsl
enter
aad
rclb
das
cmp
mulb
out
test
dec
mov
xor
mov
adc
mov
mov
in
cs
cli
pop
insl
mov
roll
cmpsb
adc
jmp
lahf
popa
xchg
je
mov
xchg
xchg
or
jbe
mov
lea
cmp
ficompl
outsl
cltd
sub
sbbb
inc
lea
pop
rcrb
iret
pusha
fisubrs
ror
inc
fildl
sbb
adc
xlat
pop
fwait
test
ror
sub
mov
push
mov
mov
adc
add
mov
push
mov
fsubrl
repnz
sbb
mov
leave
das
and
mov
sub
leave
lods
je
xchg
jnp
or
repnz
mov
or
inc
enter
stos
cltd
sub
mov
xor
jo
xor
jbe
in
fwait
and
xchg
int3
push
push
or
fwait
cmp
subb
inc
sub
xchg
mov
mov
xchg
mov
cmp
or
popf
cli
and
jmp
sahf
movsb
pop
jno
orl
push
mov
jecxz
int3
movsl
ljmp
imul
adc
mov
test
and
ss
in
in
mov
lret
and
xchg
push
sub
mov
movsl
test
sti
mov
cmp
sbbl
out
cld
cmp
repnz
shl
subl
cltd
jns
loopne
shrb
inc
sbb
pop
cmc
sub
es
test
dec
xchg
out
aad
aas
cmp
sbb
imul
mov
xlat
inc
cs
jb
mov
test
ljmp
or
das
dec
jp
sbb
in
mov
int
std
dec
icebp
hlt
mov
fistps
lds
mov
popf
xor
loop
out
pop
pop
and
outsl
nop
mov
icebp
fcompl
negb
test
cmp
int3
mov
inc
jb
arpl
andl
jne
pop
sbb
pop
cmpsl
push
xor
xchg
imul
inc
and
loopne
out
leave
cmpsl
out
orb
sub
shlb
test
cltd
xlat
mov
jecxz
lret
ds
pop
aam
mov
sbb
loopne
sbb
xchg
out
push
cmp
pop
push
lods
adc
lret
pop
in
sbb
int
fadd
xchg
mov
xchg
adc
jnp
popa
jle
xchg
pop
sbb
lret
enter
push
repz
mov
mov
enter
xor
adc
test
insl
pop
sarl
icebp
cs
xchg
les
adc
loop
dec
pop
add
repnz
inc
loop
xor
inc
shl
or
ret
lret
cmpsl
mov
mov
cmp
cmp
cmp
jmp
into
leave
outsb
fwait
int
pop
and
cmp
std
repz
mov
or
mov
xchg
imul
addb
leave
push
add
popa
bnd
call
xchg
pop
inc
sub
dec
or
xchg
ljmp
dec
adc
int
sahf
stos
xchg
clc
imul
xchg
cmpsl
out
idivl
nop
mov
out
lahf
idivb
out
push
push
inc
pop
out
int
mov
pop
dec
or
lock
sub
and
jg
pushl
popf
xor
cld
jge
and
mov
shlb
mov
mov
push
pop
cwtl
shr
mov
add
push
lods
orb
or
inc
dec
jmp
xchg
xor
lock
int
xchg
sbb
stc
or
rolb
push
inc
movsb
lret
mov
fsubs
fwait
dec
xor
into
movsb
popf
xchg
xchg
pop
ljmp
rcll
adc
orl
repz
pop
andl
push
push
repnz
mov
push
ljmp
sbb
data16
lret
das
add
into
fwait
sub
loopne
sub
or
call
or
or
mov
add
xor
inc
fwait
jmp
ret
pop
mov
aad
lea
testb
add
adcb
cmp
and
in
inc
jmp
xchg
pop
gs
scas
stos
push
mov
int
inc
and
aad
mov
jmp
cmpsl
sbb
imul
inc
popf
out
std
in
mov
xlat
test
out
shrl
add
adc
mov
aam
mov
inc
pusha
inc
ret
cli
or
xchg
cmp
cmp
inc
js
jns
je
inc
sub
aam
inc
sti
jo
loopne
shll
jae
xor
mov
mov
inc
xchg
mov
enter
cltd
xchg
mov
xchg
cmp
mov
das
jmp
dec
bound
loope
rolb
pop
hlt
adc
push
sbb
mov
in
call
loop
add
xchg
pop
out
pop
xlat
jnp
mov
pop
mov
sub
fisttps
inc
xchg
nop
jmp
out
mov
push
roll
jmp
mov
aad
mov
lds
ficoms
pushf
shrl
xchg
scas
ja
mov
test
cltd
int
mov
dec
mov
in
xor
in
sbb
std
add
or
cmc
clc
jp
je
das
push
ret
aad
and
sahf
test
jae
push
ret
and
mov
inc
aad
int
mov
std
arpl
cld
out
mov
leave
mov
or
jl
fwait
mov
xor
cmp
sbb
fmull
rclb
rcrl
arpl
sbb
push
xchg
xorb
clc
movsl
push
sbb
mov
sti
sub
aad
pop
aad
sar
push
add
and
sarl
adc
ljmp
lcall
inc
add
cmp
jp
cwtl
mov
lds
rorb
add
pushf
pusha
and
and
frstor
cmp
cmpb
cmp
mov
test
fadd
sub
fstpl
das
cltd
ror
and
movsl
add
push
lcall
mov
cmc
lahf
adc
lods
repz
cltd
loopne
ret
aam
sub
mov
daa
mov
pop
mov
lods
in
sbbl
or
adc
pop
jo
adc
test
mov
filds
add
lds
imul
mov
insb
aam
mov
pusha
dec
jmp
popf
sub
in
cmp
mov
call
and
dec
cld
je
xchg
adc
mov
popf
aad
push
mov
mov
loopne
jns
fs
dec
testb
xor
xlat
aam
rcr
leave
insb
cwtl
movsb
mov
out
ja
pushf
mov
stc
push
cltd
or
lret
sub
in
out
mov
insl
fsubr
insb
sbbb
push
push
mov
loope
in
mov
add
add
push
lcall
mov
xor
sbb
sub
test
repz
dec
sub
rclb
mov
stos
or
xor
pop
popa
loope
std
mov
pop
js
push
mov
outsb
adc
out
mov
mov
mov
mov
dec
mov
fnstenv
ds
xchg
push
negl
shlb
cmc
lar
int
mov
cmpsb
fcoms
test
fs
add
and
lds
fwait
sbb
xchg
xlat
sbb
movl
sar
out
mov
or
ja
jg
add
push
stos
mov
int3
push
dec
or
fdivrs
xchg
cld
insl
xor
jb
gs
sub
bound
mov
popf
out
dec
fisubs
out
adc
shl
push
es
stos
xchg
jl
push
mov
sub
mov
cli
pop
xlat
mov
fidivs
imul
mov
movsb
sahf
lret
test
fdivr
orl
roll
jmp
jns
sbb
ja
orl
adc
pop
int
lea
xchg
cmp
sbb
adc
stc
lret
adc
jp
push
jb
int3
xlat
leave
out
cmp
call
mov
mov
arpl
out
sbb
sbb
in
js
or
mov
and
inc
popf
imul
test
pop
ja
scas
sahf
dec
sti
iret
imul
std
rorb
pop
lcall
mov
mov
pusha
sbb
pop
mov
nop
mov
inc
pop
mov
mov
scas
jmp
pushf
ljmp
cwtl
or
sub
xchg
mov
push
or
mov
push
fcoml
js
cwtl
iret
pop
sbb
mov
dec
adc
les
pop
sub
leave
pop
ds
loop
mov
popa
and
pop
sub
add
lahf
ror
mov
cmp
xor
and
push
cmp
repnz
mov
imul
ljmp
imul
xchg
das
inc
ds
fadds
aam
cmp
out
stos
sahf
xchg
adc
and
popf
xor
inc
xchg
mov
inc
or
xor
sti
or
das
sarb
xor
pop
rcrb
out
hlt
mov
jmp
fistpll
xor
sarb
testb
jne
xchg
mov
lods
jo
lea
outsb
mov
mov
inc
jae
roll
jg
aad
mov
lods
cmp
leave
inc
xlat
ljmp
int
or
sub
imulb
inc
cmpsl
stos
loop
sub
jmp
lret
loopne
fiadds
xchg
test
mov
and
daa
and
jb
cmp
out
dec
xorl
mov
or
clc
inc
or
popf
jno
pop
scas
clc
mov
imul
xchg
pop
pop
cmp
dec
or
xor
push
call
scas
or
mov
iret
sbb
daa
mov
aaa
mov
xlat
mov
lds
push
and
stc
jg
pop
cmp
adc
or
adc
xchg
sub
dec
stos
mov
push
push
adc
ljmp
mov
inc
mov
xchg
loopne
mov
add
lock
pop
ds
mov
and
out
jge
sub
sti
test
sub
rcrb
jns
mov
fistpl
jo
es
mov
mov
sahf
insb
xor
hlt
sbb
fs
popa
in
push
pusha
hlt
loopne
icebp
out
mov
pop
jbe
jmp
testb
and
pusha
lods
cmp
cmp
insl
xchg
movsb
enter
mov
push
mov
pop
dec
test
or
in
jne
movsb
or
andb
fs
mov
mov
in
pop
sbb
fisubrl
pop
sub
add
pop
xchg
mov
lret
movsl
fdivrl
cld
or
iret
cmpsb
pop
div
inc
mov
test
lds
jo
or
test
and
fnsave
xor
aad
dec
mov
xchg
mov
fcomps
pushf
pop
stos
adcl
push
testb
pop
dec
xchg
mov
orb
dec
shr
dec
clc
adc
dec
dec
into
jnp
push
movsl
leave
faddl
pop
sbbb
push
and
gs
mov
mov
and
les
mov
and
jle
stc
repz
cltd
and
out
sti
pop
fsubl
cmp
daa
xchg
pushf
stos
jns
stos
dec
sub
xor
testb
mov
cmp
inc
dec
pusha
ss
mov
jo
lds
push
std
cmpsb
jle
movsl
pop
sbbl
popa
push
lock
lahf
mull
xor
sbb
pop
sbb
imul
jg
sub
in
loop
mov
jbe
dec
ret
fld
xchg
cli
fsubr
jecxz
xorl
mov
xor
cmc
add
jnp
lahf
shrl
gs
xor
test
stos
cmp
jnp
or
xor
cwtl
ja
sub
bound
mov
or
shlb
std
sarb
inc
mov
sbb
inc
mov
pop
mov
out
inc
dec
push
push
cli
sub
dec
lods
or
xor
bound
sub
lahf
fsubrp
dec
sbb
fsubl
dec
xchg
or
pop
lods
mov
pop
lds
andl
testb
pop
xchg
xor
sbb
stos
out
or
adc
fsubrs
jno
bound
xor
xchg
psrlw
orb
std
push
test
and
ficoml
inc
addr16
icebp
adc
loopne
push
fsts
ja
mov
shll
lock
jle
mov
dec
leave
pushf
out
cs
arpl
dec
inc
dec
scas
out
fmull
jb
ret
mov
or
pop
fstl
push
dec
mov
out
out
sub
hlt
movsb
push
add
test
insl
jne
mov
in
add
shrl
or
aas
sbb
in
jne
xor
js
hlt
cs
inc
mov
xchg
inc
jb
inc
lret
int3
test
into
dec
pop
sbb
mov
inc
jae
loopne
sub
ja
iret
lret
mov
scas
repnz
jmp
mov
shr
or
pop
sub
loope
fstp
scas
sub
repz
adc
fmuls
std
scas
cmp
std
add
and
cmpsl
imul
sub
mov
sub
xchg
pushf
lods
lea
out
push
cwtl
mov
insb
adc
fcompl
aaa
pop
push
mov
outsb
ljmp
lds
in
movsb
mov
pop
dec
sbb
ret
pushf
int
cmp
and
mov
and
cmp
push
sti
ss
or
sbb
jbe
push
add
arpl
sti
cmp
mov
adc
movsb
or
jg
imul
and
mov
sbb
pop
imul
out
cmc
push
push
call
push
add
sbb
nopl
pop
jmp
xchg
mov
xorb
shl
push
roll
stos
push
push
mov
and
int
inc
int3
rcll
aam
adc
push
fstp
adc
in
cmp
mov
dec
comiss
stos
and
mov
mov
aad
mov
cwtl
jns
sbb
repz
mov
js
movl
xchg
inc
dec
fsubs
adc
scas
push
cmpsl
cmp
sbb
fstpl
pushl
sbb
into
push
stc
int3
and
xor
push
mov
ret
dec
cmp
adc
out
and
jnp
pop
imul
pop
rcrb
xlat
push
aad
fsubrs
dec
lds
dec
gs
xchg
dec
adc
ds
push
dec
nop
aas
sarb
mov
mov
xorb
sub
sub
xchg
xor
xchg
shr
sbb
sahf
js
roll
sbb
pop
push
loop
stc
imul
leave
inc
push
push
ljmp
dec
adc
mov
push
enter
pop
inc
lds
push
push
mov
imul
or
xchg
test
divl
stos
mov
stos
sub
inc
scas
sub
xchg
add
lea
sub
ds
aaa
test
aas
sbb
loop
lods
mov
jbe
fistpll
insb
sub
testb
add
cmpsl
jge
out
pop
push
xchg
jne
pop
or
je
jg
sub
cwtl
je
push
xchg
or
call
aam
shll
insb
mov
jge
dec
xor
arpl
inc
pusha
push
pop
sbb
sub
out
xor
add
add
pop
xchg
enter
movsl
lahf
and
iret
cmp
fisttpl
iret
add
pop
dec
sub
inc
or
bswap
jle
push
outsb
repnz
mov
pusha
test
hlt
cmp
orb
jle
jns
xor
imul
lcall
js
inc
dec
ja
out
stc
jb
add
sub
mov
data16
orb
popf
dec
cmpl
xchg
push
movsb
dec
push
out
sbb
cvtdq2ps
push
fcoms
addr16
xor
inc
sub
imul
sar
push
sbb
popa
mov
test
in
adc
ljmp
mov
jecxz
sti
movsl
xor
mov
pop
insl
aas
cmp
nop
sub
hlt
loope
les
mov
push
popa
cmc
out
xchg
mov
call
insb
aad
lret
out
aaa
pop
jl
imul
adc
fildll
push
fistps
pusha
xchg
and
loopne
rorb
inc
rclb
adc
and
and
mov
stos
xchg
jo
cmp
pop
mov
push
jp
inc
jb
jmp
push
in
sbb
cmp
mov
mov
inc
dec
jge
ficompl
cmp
inc
jmp
jns
mov
pop
push
cltd
rol
pop
and
fistps
dec
mov
push
dec
rcrb
cli
jecxz
jle
mov
adcb
xchg
mov
pusha
mov
inc
mov
add
out
lock
push
test
addr16
addr16
js
push
sbb
ja
call
shll
test
outsl
ficoms
inc
jae
in
divl
js
cmpsb
lret
inc
mov
lock
mov
mov
sub
inc
mov
fidivs
add
xchg
jno
or
imul
mov
into
addl
hlt
xor
inc
push
sub
jle
jbe
dec
test
and
hlt
out
push
pop
lods
sti
movsl
imul
jnp
out
xchg
data16
inc
fildll
push
and
cmp
sbb
and
shlb
scas
and
and
fwait
out
loopne
jae
movsl
jb
inc
in
mov
loop
push
or
int
dec
shlb
daa
adc
subb
pop
call
ja
mov
xchg
sarb
mov
sbb
fldt
or
cmp
js
imul
fwait
ljmp
je
movsl
sti
imul
push
adc
hlt
xchg
jbe
mov
stos
aam
mov
adc
jle
std
adc
xor
cmpsl
scas
rclb
movzwl
in
mov
pop
mov
sub
mov
les
insb
loop
aam
ljmp
ret
pop
dec
and
push
jnp
sbb
xchg
xchg
add
cmp
push
pop
ss
jns
fildl
mov
or
mov
insl
dec
mov
ds
out
mov
add
test
jb
jns
daa
push
mov
mov
fwait
cmpsb
cmpsl
pop
or
gs
repnz
repz
xor
lods
xor
addl
mov
inc
and
push
lcall
lock
pop
or
imul
arpl
push
loop
aad
adc
xchg
clc
jmp
mov
fwait
int3
ja
pop
into
rorl
xor
repz
push
pop
std
ds
negb
lahf
jno
or
movsb
sub
jnp
das
or
fnstsw
jge
lods
out
xchg
lea
and
sub
sbb
cmp
fstl
xor
sti
push
or
ja
mov
inc
in
push
jge
sbb
out
fistps
cltd
sahf
push
or
test
sub
sub
ja
sti
mov
push
lds
insl
xlat
adc
clc
push
hlt
cmovbe
pop
dec
dec
push
daa
popf
or
dec
addr16
fmul
movsb
fisttpl
jmp
adc
pop
insb
push
xchg
mov
lock
outsb
ljmp
into
les
icebp
pop
xor
mov
xchg
cmpl
dec
std
test
fstl
and
aam
mov
xchg
lret
jge
icebp
dec
adc
mov
push
mov
pusha
adc
mov
fdivrl
xchg
inc
daa
push
mov
sbb
sar
and
fsubrl
pop
out
je
mov
sbb
and
and
pushf
imul
cmc
pop
push
addr16
sbb
push
lret
jbe
mov
push
fnstsw
add
sub
dec
sbb
inc
outsl
inc
xchg
rorl
repnz
sti
push
xor
push
jae
mov
divb
xor
inc
stos
ss
cwtl
mov
or
inc
in
arpl
sub
out
js
js
mov
insl
mov
inc
inc
fucom
lret
jmp
js
mov
decb
mov
test
xchg
mov
mov
shrb
int
rorb
mov
and
pop
add
outsb
xchg
int3
les
mov
out
test
and
add
jl
sub
dec
fsub
fists
or
or
push
jmp
lahf
pop
ds
cmp
inc
int
adc
cs
fs
jb
mov
add
or
ds
imul
jle
movsl
add
outsl
add
and
setae
roll
mov
iret
fidivs
shld
mov
aas
ss
adc
bound
jbe
imul
mov
loopne
mov
pop
pop
lods
cwtl
jmp
push
insl
aas
mov
push
dec
jmp
in
out
in
popf
jne
test
jl
in
repnz
adc
add
repnz
int3
dec
sbb
mov
xchg
push
jo
or
jmp
and
fwait
mov
cld
jae
xchg
test
mov
call
mov
sti
ret
mov
imul
mov
sarl
pusha
push
fldenv
inc
mov
adc
jmp
dec
push
aaa
sbb
or
xchg
std
sbb
pop
movsb
cmp
ror
push
bound
subb
sti
lret
movsb
bound
clc
lea
movb
xchg
mov
adc
mov
ja
dec
repnz
loope
or
pop
push
mov
and
into
movsl
idivb
sbbb
cmc
scas
insb
or
nop
dec
rorb
cltd
int3
fsubrl
notl
adc
lods
arpl
inc
repz
out
imull
sbb
adc
xlat
pop
push
fmuls
scas
cmp
shr
push
mov
out
xchg
adc
rol
mov
xor
int
sbb
and
fistpl
xor
xchg
andl
cmc
out
mov
xor
dec
sbb
stos
adc
pop
rorl
pop
popf
arpl
jmp
dec
cmc
or
es
repnz
adc
shrl
and
dec
or
pop
test
test
xchg
sbb
shl
jns
scas
cmpsb
movsb
jno
cmp
gs
lcall
mov
ljmp
and
inc
mov
inc
rclb
add
out
ljmp
fildl
das
arpl
xor
fldcw
mov
pop
mov
pushf
jns
xorl
int3
mov
jae
dec
inc
sub
imul
pop
or
mov
xor
adc
inc
cmp
xchg
cli
out
sbb
lret
mov
jns
lret
stc
or
jmp
les
leave
or
adc
enter
push
xor
xchg
ret
jo
sbb
add
cmc
cmp
cmp
repnz
sbbl
mov
ret
scas
push
mov
push
mov
dec
stos
into
inc
xchg
sub
or
popa
out
add
fwait
lods
das
sbb
mov
mov
xchg
adc
scas
jae
lods
sub
ds
mov
inc
add
add
in
pop
pusha
mov
aam
pop
pop
push
xchg
xchg
mov
mov
mov
mov
jp
lods
ljmp
jge
pop
and
outsl
add
mov
nop
out
das
mov
popf
jl
jle
popa
ret
lock
popa
sbb
popf
cmp
or
call
push
or
mov
xor
xor
xor
cmp
shrl
out
aas
pop
insb
and
sbb
je
mov
cmp
popa
pop
mov
mov
mov
popf
movsb
jno
mov
push
sbb
sahf
mov
pop
jp
shrl
scas
pop
fwait
sahf
rcl
xlat
cmc
ja
sub
pop
mov
scas
les
lock
bound
xchg
jbe
sahf
or
add
sbb
divb
test
xchg
inc
lods
push
inc
mov
pop
sub
or
hlt
push
cmc
pop
push
insl
xchg
inc
sub
inc
and
cmp
lds
xchg
shll
add
mov
imul
ret
xor
lret
and
xchg
ss
inc
sub
mov
popa
fdivrs
mov
pop
arpl
and
lret
loope
test
jb
pop
add
sub
ljmp
pop
gs
lret
addr16
mov
aad
mov
add
pop
mov
test
fstl
repnz
fsub
cmpsb
dec
outsb
test
push
push
in
push
cmp
sub
mov
push
add
aaa
repz
outsl
stos
and
sub
in
lea
in
add
and
xchg
pop
ja
push
jl
xchg
sub
or
jns
std
test
ss
sarl
and
ja
xchg
es
cmp
shr
aam
jne,pt
xorl
jno
cmp
jecxz
mov
cmp
out
mov
mov
mov
repnz
stos
int
cmp
add
imul
jno
mov
rolb
loopne
insb
and
aad
lea
sub
aaa
les
hlt
lods
mov
negl
mov
fs
sub
inc
repz
jbe
sbb
stos
ficomps
aad
pusha
add
movsl
rcll
dec
mov
sub
shl
pop
mov
mov
mov
mul
mov
fs
inc
fiaddl
and
fcompl
xchg
rcl
in
mov
dec
ret
lahf
and
sub
out
sar
mov
xchg
sub
test
push
and
inc
ljmp
pusha
icebp
rcll
std
mov
dec
push
adc
mov
push
xchg
addr16
jp
lods
xor
jb
scas
inc
bound
dec
test
and
inc
adc
rorb
jmp
add
popf
xlat
dec
data16
sbb
sub
xchg
scas
enter
or
test
add
cmpsb
dec
fwait
sub
movsl
and
mov
push
dec
or
pop
jle
into
ljmp
stc
mov
jmp
ss
dec
push
loope
adc
mov
ljmp
fwait
inc
and
sub
lcall
mov
stos
push
bound
jno
pop
mov
push
fisubl
fs
pop
les
add
test
pusha
pop
insb
ljmp
in
cli
test
adc
jl
shll
jl
test
bound
enter
lock
out
cmp
jg
and
fwait
test
or
jo
movsl
xchg
in
xor
push
cld
nop
dec
iret
imul
jp
addb
sarl
xchg
mov
adc
cmp
test
add
sbb
add
sti
iret
cmpsl
in
scas
and
mov
fucomp
sub
in
dec
add
dec
iret
sub
add
pop
clc
adc
mov
jne
xchg
xchg
aad
inc
movsl
iret
xchg
mov
orl
jno
mov
hlt
push
fstps
mov
aaa
rcll
aam
mov
shlb
cltd
fucomp
push
popl
in
add
push
out
imul
js
shlb
lock
dec
sar
sub
jg
rcl
sbb
mov
dec
inc
push
out
push
sub
in
adc
mov
ds
lea
and
push
or
cwtl
popa
lock
jbe
dec
inc
sub
fimull
aam
dec
pop
cmp
in
jae
fsts
dec
sahf
pop
dec
sub
add
clc
divb
mov
adc
sti
xor
xchg
pop
into
xor
cmp
push
dec
lods
sub
les
and
fadd
xlat
js
mov
loope
stc
mov
mull
jns
ss
pop
mov
sub
jbe
js
mov
mov
ret
fsubrs
and
mov
jl
int3
cmpsl
or
push
pushf
cmp
addr16
jmp
cmp
imul
clc
dec
pop
bnd
fildll
cmpsb
and
dec
dec
dec
sub
cmp
dec
scas
lods
fldt
add
insl
xchg
pop
cmp
scas
cmp
mov
fs
adc
and
adc
imul
or
nop
subl
testl
test
sahf
mov
fcmovbe
jnp
shr
icebp
insl
fdiv
or
cmp
jns
movsl
xchg
mov
jb
push
xor
fbstp
lods
and
push
lods
ror
ret
push
add
cmp
pop
pop
das
test
mov
cwtl
push
sarl
mov
fs
stos
inc
sbb
push
xor
mov
push
jg
pop
in
xchg
xor
scas
xchg
sub
call
ljmp
rol
inc
lock
and
in
pop
fstp
sub
je
dec
mov
sbb
out
and
scas
jl
hlt
xchg
cmp
in
mov
iret
xor
sbb
dec
dec
int
lea
lods
jg
sub
adc
pop
incb
imul
jmp
out
dec
push
dec
aas
iret
mov
inc
adc
sbb
add
cmp
adc
lods
push
push
pop
repnz
push
jno
scas
or
fucomip
cpuid
jae
pusha
test
mov
mov
and
inc
out
imul
pushf
cmpsb
sahf
sub
mov
pop
push
pop
repnz
lahf
shl
cmp
popa
sbb
imul
lea
test
push
loop
dec
or
pop
ss
arpl
adc
insb
popw
imull
fisubl
or
in
ja
jb
in
int
insl
je
shrl
xchg
mov
add
add
push
outsl
sub
jae
dec
cmp
inc
push
popa
xor
adc
test
pop
lret
inc
outsb
jp
mov
pop
pop
or
add
mov
xchg
daa
rcll
rclb
imul
xchg
mov
mov
sub
xchg
lcall
inc
loope
ds
jl
lcall
sub
xchg
push
sub
jmp
mov
cmpsb
stc
cmp
cld
test
mov
mov
lahf
push
std
dec
jb
and
and
lock
mov
pop
divb
jae
xchg
xor
stc
adc
cmc
rol
mov
pop
cmp
clc
sub
ret
adc
lock
dec
jge
lock
fs
mov
xchg
arpl
cs
in
add
ret
inc
xor
pop
test
cmp
mov
into
cmp
push
out
loope
mov
mov
fldl
xchg
ja
adc
xchg
out
cmp
jmp
and
sbb
sbb
aaa
or
scas
into
roll
sub
and
pop
adc
mov
adc
and
rcrl
movsb
and
jmp
adc
ss
fs
sti
dec
iret
mov
add
sbb
shll
movsb
jne
pushf
push
sub
mov
sub
dec
cmp
sub
pop
sub
das
pop
movswl
adc
push
in
fdivs
jno
stos
pushf
daa
and
adc
das
push
inc
mov
xor
inc
cmp
jmp
dec
or
lods
xor
std
pop
int3
mov
xlat
fbstp
lods
dec
hlt
daa
xchg
cld
mov
cmp
inc
add
aaa
jns
xor
dec
add
ret
pop
mov
lds
lret
or
mov
pop
inc
cs
or
insb
and
je
mov
fs
xchg
test
testl
repnz
mov
inc
in
adc
xorb
bound
test
cld
mov
fcompl
aam
push
pop
xchg
lret
push
mov
aad
cwtl
mov
je
test
push
push
movsl
add
mov
pop
inc
mov
pop
lret
and
arpl
xor
aad
lret
ficomps
out
dec
jno
sbb
shll
xor
into
mov
in
add
ja
add
mov
sub
xor
mov
mov
inc
loop
repnz
insb
in
mov
fwait
sarb
mov
fadds
adc
outsb
loopne
call
xchg
daa
mov
cmpsl
xchg
outsl
mov
rcrb
xor
add
ds
rorl
dec
das
xchg
insb
jmp
in
or
addb
std
enter
lods
xchg
pop
orl
cwtl
jle
push
imul
push
fwait
repnz
dec
fldt
ds
inc
xor
push
adc
xorl
adc
push
inc
pop
sbb
mov
mulb
mov
inc
push
dec
mov
xchg
data16
idivl
jmp
adc
inc
test
sub
imul
clc
add
mov
sub
out
aam
mov
ss
in
cmpb
add
daa
ror
cli
mov
sub
inc
outsl
mov
lea
and
mov
jp
or
inc
inc
and
bound
or
insb
shrl
sbb
jge
and
in
loopne
sub
pop
ljmp
gs
push
sbb
add
mov
dec
push
ljmp
aam
push
jns
sbbl
cli
sbb
mov
cli
ret
cmp
popf
int
cmp
cs
lea
mov
xchg
stos
enter
jp
je
pushf
in
nop
adc
incl
mov
jnp
sub
das
push
cmc
jae
aam
sub
push
mov
pushf
mov
cmp
or
sbb
push
add
xchg
xchg
repz
in
fldcw
mov
cmc
data16
push
lods
rclb
out
xor
std
and
out
and
or
pop
or
fisubrl
icebp
sbb
gs
out
dec
add
shll
incb
pop
and
fdivrl
xor
pop
sbb
fwait
lahf
push
dec
add
jmp
clc
or
test
aas
repz
pop
jb
cmp
mov
loope
xor
out
mov
adc
nop
add
sub
roll
dec
ret
sbb
or
orps
add
mov
fsubrs
cmp
pop
and
stc
sti
jle
ret
or
pop
jb
pop
or
jle
cmpsl
aas
mov
imul
mov
movsl
or
xor
pop
je
sub
outsl
mov
jns
pop
push
pop
pop
push
push
dec
pushf
inc
or
clc
test
pop
arpl
rclb
scas
xchg
dec
sti
fdivrp
lret
ror
xchg
sbb
sbb
in
xchg
test
insb
push
xor
ret
pop
mov
lret
lahf
jle
es
push
jp
scas
mov
mov
mov
sbb
icebp
ja
pop
lds
test
aas
paddq
scas
cmp
rolb
adc
out
dec
mov
jo
pop
mov
push
test
add
dec
dec
sub
push
jg
icebp
inc
lods
push
xchg
lret
xchg
int3
mov
mov
xor
insb
mov
adc
std
push
ret
sub
push
xchg
in
push
push
pushf
push
out
mov
lcall
mov
les
mov
inc
clc
je
testb
fstpt
cltd
fbld
daa
xchg
jbe
push
in
jo
xor
mov
or
call
pop
and
rcr
in
fimuls
lods
loopne
mov
into
sbb
fadds
push
addr16
les
inc
in
mov
ficoml
stos
pop
xor
xchg
sahf
push
xor
push
sub
iretw
xchg
enter
stos
jge
xchg
adc
popf
lcall
fmuls
cltd
enter
add
and
stc
loopne
dec
mov
sub
pop
mov
fcoml
scas
jle
xor
in
mov
xor
lret
mov
sahf
cmp
pop
push
add
mov
cmp
jle
inc
mov
mov
push
mov
cli
xchg
or
jo
outsb
data16
mov
out
faddl
std
adc
xor
fstpl
fdivrl
lahf
shrb
mov
je
leave
addb
mov
leave
cli
or
stos
rorl
jle
dec
push
iret
fsubrl
cmp
iret
pop
lahf
xor
in
sbb
xchg
mov
gs
rorl
insb
adc
aaa
loopne
cltd
mov
stos
or
inc
sub
mov
mov
cmp
lods
imul
xchg
mov
add
je
push
jae
scas
lahf
rcl
out
mov
pop
ret
ja
pusha
jno
imul
lahf
pop
cmp
test
pop
sub
mov
ret
sub
adc
sti
pop
hlt
xlat
cwtl
inc
dec
adc
vmread
icebp
lcall
out
adc
arpl
ss
lahf
aad
jle
testb
sbb
and
mov
mov
push
and
jge
mov
test
fstpt
aam
xchg
enter
xor
and
aam
cmp
xchg
cmp
mov
sub
mov
dec
pop
mov
out
jmp
xor
pop
cmpsl
xor
push
mov
mov
in
add
aas
xchg
lods
sub
mov
loope
dec
imul
pop
stc
and
inc
out
xor
cs
inc
gs
ja
sub
je
bound
pop
aad
idiv
sbb
jmp
nop
mov
cwtl
outsb
insb
icebp
aas
push
scas
adc
jb
je
int3
jmp
mov
mov
push
nop
cmp
fs
jo
push
pop
xchg
add
push
mov
rorl
mov
mov
xchg
jno
movl
es
repz
addl
daa
ret
roll
xor
imul
data16
pop
pop
nop
mov
push
xchg
adc
shl
dec
mov
sbb
aad
fs
je
cwtl
mov
dec
mov
cwtl
push
jl
insb
enter
mov
xchg
push
js
psubw
imulb
pop
sub
ljmp
xchg
push
push
jne
inc
mov
pop
inc
cltd
mov
cmp
mov
add
lret
ret
mov
loopne
insw
in
push
mov
mov
shrl
es
call
repnz
enter
dec
testl
pop
pushf
std
into
sub
inc
das
or
jbe
test
cmp
popa
int3
mov
adc
jg
sub
inc
ret
jge
jmp
subl
inc
jno
shlb
repnz
push
imul
roll
bound
and
insl
popf
sbb
repz
hlt
pop
jnp
mov
lock
mov
and
mov
cwtl
pop
stos
popf
cli
cmc
popl
movsb
and
xbegin
cmpsl
push
push
std
xchg
or
xor
aas
cwtl
mov
lret
sub
fisubl
movsb
imul
jecxz
cmpsb
rorl
dec
leave
imul
lret
icebp
mov
fwait
rolb
mov
jg
loopne
divl
sub
btr
bnd
pushl
jns
jl
push
stos
mov
xchg
pminub
pop
cmp
adc
adc
js
loop
mov
int3
arpl
sarl
mov
pop
cmpsl
or
insb
cmc
aas
sti
out
shll
mov
into
dec
mov
cmpsb
fdivrs
dec
pop
adc
imull
lea
dec
pop
sub
inc
pop
mov
mov
sbb
bound
mov
out
insb
and
popf
sub
and
and
lds
push
dec
int
sbb
push
fisubs
pop
adcb
and
inc
sbb
arpl
push
mov
mov
cmp
sahf
cld
test
loopne
repz
jge
cli
ret
dec
lret
loope
jmp
push
push
inc
imul
mov
arpl
mov
out
jae
fs
add
mov
stos
mov
psrad
mov
sbb
pop
cld
xorb
loopne
xchg
popw
sbb
sub
ja
negl
popf
imul
dec
and
cmpsb
ja
pop
inc
jmp
adc
fisubrs
push
inc
mov
lods
pop
jp
ja
or
pop
jg
mov
iret
mov
pop
out
fists
gs
and
outsb
clc
sbbl
inc
mov
cld
inc
mov
popf
aas
adc
fnstcw
inc
mov
outsl
cwtl
ret
or
leave
pop
dec
adc
mov
mov
dec
push
movsb
sbbl
lcall
cmp
xor
jg
rcll
mov
pop
or
iret
sbb
clc
int3
mov
jmp
add
inc
outsb
cltd
sbb
xchg
test
push
ret
and
aam
push
xchg
je
shlb
cwtl
adc
aam
xor
jmp
jecxz
inc
insl
popa
mov
and
out
sbb
sub
mov
mov
push
ljmp
testl
mov
loopne
hlt
imul
push
test
xor
mov
insl
mov
adcb
lods
fucom
mov
arpl
dec
aam
and
daa
pop
mov
jg
mov
fs
cltd
and
movsb
inc
push
cmp
scas
and
pop
mov
in
sti
mov
sub
pop
mov
lods
lahf
jo
mov
insb
push
scas
dec
sub
test
xchg
and
arpl
in
add
xchg
cli
out
data16
cmp
lret
and
adc
mov
or
dec
sbb
cmp
mov
pop
add
pusha
movsl
adc
rclb
inc
add
idivl
js
addr16
add
sub
test
rcl
js
and
das
mov
lret
imul
int
imul
ja
adc
sahf
jmp
aas
outsl
jno
mov
cmp
jae
pop
mov
cmpb
mov
xor
and
or
push
mov
mov
movl
jl
pop
adc
nop
cltd
lret
jmp
mov
clc
and
gs
out
aad
inc
adc
insb
pop
adc
cmp
daa
sti
sbb
loopne
pusha
mov
adc
mov
lret
aam
jp
xor
push
dec
lret
loop
int
jg
lret
xchg
rcll
xchg
dec
inc
sbb
adc
or
inc
fidivrl
inc
sub
push
push
sbb
push
out
test
stc
or
cltd
xabort
shrb
shrb
dec
or
fwait
hlt
stc
mov
test
lahf
fdivrl
xor
sbb
cmp
or
nop
test
pushf
xor
es
add
mov
aaa
jno
jmp
or
cmp
inc
jns
daa
or
xor
ds
aas
dec
stc
mov
and
aad
xchg
sbbb
rolb
jg
inc
push
add
in
loope
inc
jecxz
dec
push
inc
lcall
or
addr16
test
push
test
pop
in
push
es
pop
adc
sub
nop
xor
pop
dec
jne
ds
push
cmp
ss
das
sarl
inc
vpaddb
sarb
mov
xor
mov
dec
push
pop
fisubs
cmc
iret
or
mov
rcrb
je
pop
push
mov
or
adcl
cmp
leave
push
or
xor
ret
fistpll
shll
jmp
out
pop
aaa
mov
inc
hlt
mov
icebp
push
sub
sub
mov
sti
icebp
jnp
jecxz
and
inc
adc
call
ficoms
stc
mov
pop
push
and
mov
in
push
lcall
sub
xchg
ljmp
mov
push
jge
inc
shrb
frstor
shlb
cmp
pop
xor
clc
lock
push
xor
outsl
repz
add
lods
jle
inc
fisubl
sbb
pop
pop
fs
push
pop
loope
scas
push
test
cmpl
jecxz
cltd
add
outsl
int3
xchg
mov
xchg
push
sub
inc
pop
pop
fsub
fldt
and
shrb
mov
in
fwait
arpl
add
mov
jnp
andb
enter
xor
sarl
lret
jl
movsb
mov
mov
lahf
stc
lahf
fisubrl
add
dec
cmp
push
decl
lods
and
pop
inc
cs
sti
pop
mov
or
lcall
cli
pushf
jno
imul
fnsave
jns
jp
insl
cmpsb
subl
jp
test
pusha
test
pop
push
pop
call
mov
xor
fldl
shll
les
sbb
cltd
dec
sbb
mov
aam
mov
jnp
fwait
pop
jp
sbb
xchg
and
pop
xchg
jnp
clc
mov
cmp
push
enter
mov
ja
in
adc
mov
js
push
sub
jno
and
push
push
pop
cmpsl
stc
inc
cltd
cwtl
dec
mov
push
adc
lret
enter
mov
fs
jmp
cld
stos
cmp
or
push
jmp
movsb
cmp
shll
pop
mov
inc
pop
mov
sub
mov
cmc
xchg
ret
jb
xor
add
cmp
loopne
and
dec
pop
mov
push
mov
dec
sahf
clc
ljmp
sub
test
lret
nop
cwtl
sbb
jb
movsl
sbb
xchg
mov
cmp
pop
pop
push
sahf
mov
pushf
sti
sub
sub
js
das
stos
xchg
or
push
nop
inc
pop
mov
in
adc
sbb
xor
dec
and
test
jle
or
test
movsb
xor
xor
add
dec
mov
mov
aad
xchg
xlat
or
pop
and
cmpsb
dec
mov
mov
adc
movsb
inc
dec
mov
push
js
stos
inc
and
mov
mov
mov
fdivrl
push
dec
mov
jmp
mov
xchg
sahf
xchg
imul
cmc
push
pop
std
call
ret
mov
jle
mov
sub
out
sub
mov
inc
or
imul
fdivr
fldt
xchg
outsb
jp
js
lcall
loope
outsl
les
jg
loop
sbb
aam
aam
dec
mov
mov
inc
pop
mov
dec
pop
ds
fsqrt
push
pop
test
mov
hlt
test
nop
adc
or
sbb
scas
rorl
jno
xchg
pop
mov
scas
cmp
inc
loopne
fsubr
and
in
and
cmpb
adc
pop
cmpsb
jo
cmpsb
ficomps
scas
loopne
sahf
jle
andb
jp
int
mov
push
loopne
mov
dec
aas
and
in
lods
orl
nop
je
adc
xchg
jnp
inc
push
mov
mov
sub
jg
sbb
aam
enter
rolb
jns
and
adc
push
xchg
or
cmp
ss
fs
or
arpl
call
scas
gs
mov
pushf
lods
ja
call
xchg
enter
sahf
push
pop
fdivl
or
push
scas
pop
add
adc
lods
es
adc
xchg
and
xor
sti
mov
and
xor
sbb
insb
cmp
pop
sbb
imul
int
cli
xchg
add
leave
lods
in
push
inc
mov
incl
sub
ds
out
insb
fsubrl
mov
movsb
jno
test
pusha
imul
add
xchg
xor
push
pop
push
lds
dec
xchg
push
lcall
push
fldcw
inc
ja
leave
push
dec
jge
repz
scas
popl
lea
and
add
mov
loope
hlt
xchg
jp
std
jmp
or
dec
push
xor
mov
cwtl
add
pop
in
cmpsl
clc
imul
mov
and
mov
mov
pop
insb
add
jmp
push
mov
sub
lret
test
or
or
mov
cwtl
mov
fdivrs
stc
mov
push
push
jne
and
push
int3
pop
adcb
inc
cmp
push
iret
pop
filds
pop
mov
xor
or
jge
test
cmc
rorb
rcll
nop
jo
ds
cmp
cwtl
insb
insl
pusha
fcomi
and
xlat
inc
cld
in
or
mov
aaa
into
pop
mov
mov
ds
cmp
f2xm1
not
test
push
addr16
mov
inc
mov
mov
rolb
mov
js
mov
inc
mov
jecxz
push
rorb
sub
cmp
dec
int
ficoml
sarl
xchg
scas
inc
mov
add
imul
test
into
aam
mov
jle
dec
aam
int
mov
cmp
pop
adc
ret
lahf
mov
insl
xor
mov
test
sar
pop
xor
pushf
into
loope
rolb
ss
and
ret
pop
push
mov
fwait
sbb
cmpsb
out
mov
roll
xor
ret
mov
xor
out
xor
or
aam
lea
cmp
sbb
dec
jl
pop
pop
cmp
je
call
fsubl
lock
fs
shlb
les
inc
push
les
mov
into
imull
mov
pushf
or
dec
or
cli
addr16
mov
add
outsb
add
lods
lahf
and
and
repnz
sbbl
lods
xchg
fildl
push
sbb
addr16
leave
jnp
sbb
jb
add
loope
insb
mov
gs
pop
xchg
arpl
sub
push
sub
mov
int
insl
add
mov
lds
mov
and
dec
addr16
push
add
cli
sbb
add
or
mov
sbb
jg
dec
mov
clc
mov
jns
push
in
jae
pop
push
pop
test
sbb
imul
ds
sti
ret
in
mov
xchg
lgs
push
xchg
outsb
aaa
popf
sti
or
ljmp
inc
lahf
or
and
xchg
mov
sbb
mov
adc
lahf
or
lret
in
lock
sbb
aaa
jno
pop
es
jbe
aaa
into
addr16
mov
mov
pop
into
int3
push
push
aas
les
cmpsb
popa
ds
movsb
xchg
sti
adc
lock
adcb
pop
dec
stos
pop
adc
jae
inc
cmp
dec
dec
lcall
mov
mov
push
pop
pop
fistl
add
data16
mov
add
dec
arpl
push
cmp
data16
shll
lret
iret
lret
cmp
addr16
mulb
dec
inc
or
xchg
orb
or
clc
add
ja
aas
icebp
mov
sbb
ficomps
sarb
lods
dec
scas
or
gs
mov
jge
add
xor
invd
les
cs
iret
adc
inc
lret
cmp
test
rclb
mov
pop
pop
test
mov
inc
sub
push
xor
cs
loopne
inc
jb
jp
xor
pinsrw
pop
xlat
cmp
jbe
add
andl
and
scas
out
jno
mov
sahf
mov
mov
icebp
call
or
movsb
bound
daa
dec
fisttpl
or
xlat
and
sub
mov
add
loope
pop
cwtl
jns
cmp
leave
push
add
out
data16
add
and
mov
sub
in
sub
push
js
cwtl
or
int3
and
fstpt
call
cld
fwait
rorb
js
test
outsb
adc
test
jge
int3
lea
in
xor
repnz
hlt
aad
jae
mov
xchg
jg
mov
fs
test
and
pop
adc
enter
imul
jl
into
jae
mov
repz
clc
or
mov
setno
dec
out
xor
push
aad
push
pushl
aas
pop
cmp
adc
dec
nop
lahf
iret
mov
jmp
sbb
addr16
cmp
cmp
inc
outsb
mov
popa
stos
test
jae
test
fnsave
fildll
movsl
jle
sbb
push
fistpl
cmp
and
enter
lea
shll
popf
cmp
shll
pop
push
mov
mov
insb
mov
mov
push
lds
add
cmc
or
sbb
cld
cli
inc
sahf
je
xor
push
dec
xchg
xor
fistpl
mov
mov
test
arpl
push
aad
cmp
dec
enter
dec
push
mov
sub
sub
sub
and
inc
lea
add
imul
gs
in
addb
push
xor
js
xor
mov
push
mov
nop
mov
jle
leave
push
incb
sub
in
pusha
pop
cmp
and
outsl
call
mov
lock
fmull
mov
push
movsb
mov
mov
push
mov
cmp
sbb
xchg
je
dec
jecxz
lahf
mov
mov
xor
shrb
mov
loop
pop
fisttps
jl
insb
mov
sbb
xchg
loope
add
mov
inc
push
mov
stc
insb
test
mov
add
or
fildl
pop
std
mov
mov
call
xor
fstl
enter
push
mov
into
out
add
inc
push
stos
shll
int
ja
jge
fisttps
mov
mov
subb
sub
sbb
aam
clc
loop
movsl
loop
fwait
cmp
push
pop
lea
cwtl
sbbl
xchg
lret
xor
insl
jg
cmc
popf
js
lods
aad
pop
loopne
sub
shrl
inc
mov
loopne
fsubs
in
mov
mov
out
shl
sub
push
inc
es
daa
jmp
jbe
ret
and
push
scas
fcomi
adc
sbb
mov
popf
jnp
shrb
mov
lret
cmp
jmp
and
cwtl
out
dec
mov
mov
sub
push
bound
rolb
push
mov
dec
mov
adcl
sub
movsl
loop
sbb
scas
popl
xchg
mov
aad
mov
pushw
outsb
int
popf
lods
jbe
insl
mov
gs
cmc
dec
inc
mov
push
aaa
mov
jle
adc
rorb
icebp
stos
jmp
aam
int
imul
add
mov
hlt
daa
loopne
scas
popa
fbld
call
loop
mov
adc
cld
repnz
loopne
jnp
popa
cmc
adc
sar
fs
mov
mov
pusha
icebp
nop
push
stc
push
daa
jno
in
push
cmp
push
push
fwait
pop
xor
sbb
ss
dec
xlat
ds
movsl
cs
pushf
or
jnp
lret
adc
push
insl
aaa
adc
nop
jb
call
push
sub
jae
mov
adc
xlat
repz
lea
mov
jle
push
jne
add
ss
sbb
nop
aad
call
pop
insb
xor
push
inc
adc
push
decl
jge
inc
lds
mov
xor
bound
ucomiss
sbb
mov
fstps
jp
cwtl
cwtl
ja
xor
outsl
push
sbb
insb
sbb
pushf
ja
add
or
and
mov
mov
or
rorl
xor
scas
mov
jnp
stos
xor
jns
mov
jns
xlat
sbb
loope
sbb
inc
out
add
cmp
xchg
mov
add
sub
cmpsl
jns
xorb
add
cmpsl
das
pop
aaa
imul
xchg
test
lret
cltd
xor
push
clc
push
in
sub
in
adc
enter
pushf
inc
inc
sub
xchg
out
mov
mov
inc
outsb
xchg
sub
scas
mov
inc
andb
sar
inc
loopne
in
arpl
fcmovne
jb
stos
stos
cli
movsb
cmc
scas
dec
xchg
pop
lds
fcoms
pop
pop
int
cs
jg
pop
add
out
pop
int
sbb
or
rorl
shl
mov
or
fmulp
lock
bnd
push
ds
jl
sub
mov
fstps
pop
adc
mov
out
cmpsl
mov
mov
std
push
inc
jbe
push
test
sub
pop
and
aaa
mov
outsl
dec
fidivs
pop
imul
dec
ljmp
scas
adc
mov
jmp
mov
ss
sub
jmp
inc
inc
xor
fstpl
push
je,pn
test
fcmovbe
push
xor
xlat
mov
orl
or
xlat
mov
and
dec
cmpsb
dec
outsb
jge
mov
sub
sub
xor
movl
xor
mov
jbe
cmp
xchg
gs
cmp
mov
jb,pt
aad
push
pushf
inc
iret
into
mov
sbb
mov
pop
pop
push
lock
repz
push
ret
clc
push
push
mov
mov
lcall
imul
add
out
mov
ja
test
mov
in
fsubrl
lret
test
movb
in
insb
sbb
xchg
add
and
cmp
lret
lods
push
jge
orb
icebp
lret
xlat
stos
and
pop
mov
out
cmpsb
xor
sub
sbb
lret
mov
shll
dec
push
shll
dec
or
test
leave
repnz
mov
xchg
xor
lock
mov
jae
into
push
out
and
inc
and
mov
lods
cmpb
addr16
jne
or
lods
jo
inc
push
hlt
jo
insb
mov
cmc
out
mov
xchg
lret
mov
adc
fistps
mov
outsl
jbe
mov
push
aas
mov
stc
xchg
sub
in
push
fnstsw
mov
pop
or
lcall
dec
dec
into
push
push
dec
fsubrs
xor
aas
sbb
lret
and
adc
jbe
std
lret
xor
mov
and
pop
xor
fcmovnb
inc
repnz
and
xchg
mov
pop
jge
cmc
shrl
imul
mov
pop
mov
mov
pushf
pop
mov
movsl
jl
enter
into
mov
inc
fidivrl
pop
mov
inc
imul
fiaddl
dec
add
xchg
and
inc
mov
cmc
leave
pop
sub
decl
dec
xchg
and
hlt
data16
mov
stc
test
and
dec
cmp
or
je
pop
inc
jg
sub
fxch
rcrl
jmp
into
ss
dec
pushfw
or
dec
push
xchg
outsb
mov
lretw
hlt
mov
ret
leave
std
lahf
mov
dec
mov
cmpl
pop
push
ret
aam
js
fcompl
jae
jne
pushf
call
mov
sbb
jnp
xor
pusha
mov
mov
cmp
mov
mov
test
pop
xchg
xor
ret
movsl
fnstcw
pop
dec
mov
in
sbb
pop
cltd
jg
fcmovb
cld
push
xchg
xchg
stos
add
stos
test
bound
inc
repnz
int
mov
cmp
movsb
outsl
xchg
push
int
and
pop
sub
sbb
dec
and
clc
mov
jbe
enter
out
or
leave
aas
sbb
and
pop
scas
lcall
inc
cmp
xchg
fs
mov
or
bound
test
sbb
xchg
xlat
in
jge
pop
inc
cltd
jp
popa
aad
jne
fisttpl
das
out
lcall
xchg
jl
jl
adc
pushf
sbb
sbb
sub
mov
inc
pop
and
lods
rorl
aaa
outsl
xor
adc
call
mov
stos
inc
lods
fisttpl
mov
stc
xchg
pop
mov
xchg
cmc
loop
int
sbb
testb
cli
popa
cmp
ljmp
std
inc
mov
in
push
add
outsb
mov
rcl
movsl
ficoms
sub
fucom
je
mov
jns
cmc
out
les
xchg
enter
pop
mov
sbb
out
adc
add
movsb
lea
mov
push
xor
or
and
push
and
dec
es
arpl
dec
sahf
and
sbb
add
pop
inc
aam
sub
out
jl
out
divl
pushf
jge
xchg
nop
jecxz
scas
cli
mov
and
pop
jp
scas
ret
sbb
and
lods
in
and
push
xchg
aaa
fbstp
nop
xchg
dec
dec
dec
or
push
enter
cmp
loope
addr16
cmp
inc
pusha
jmp
inc
sub
sub
loopne
sti
fs
lret
jne
les
imul
into
out
insl
cmp
scas
ret
xchg
jno
pusha
scas
enter
lcall
jl
dec
popa
dec
mulb
jge
jbe
push
mov
mov
lret
mov
jne
jb
pushf
aam
scas
inc
cltd
or
mov
sbb
push
fcmovb
push
scas
and
and
cmp
in
mov
in
divl
daa
dec
loop
mov
enter
mov
or
fdivrl
pop
icebp
adc
fbld
pop
push
cmp
orb
or
mov
aad
mov
pop
stc
and
out
lock
hlt
sub
setne
mov
push
adc
enter
repnz
xchg
dec
xchg
dec
xor
pop
mov
stc
xchg
je
and
cmp
cmpb
cmc
push
filds
fmul
sub
add
cmp
mov
pop
jecxz
rclb
pop
cld
adc
or
test
cwtl
lahf
jmp
xor
loopne
out
loop
aam
sbb
test
subl
fistpll
adc
repz
loop
lods
std
daa
add
cmp
fdivs
xor
xchg
cwtl
in
pop
cmp
or
les
mov
pop
lock
pop
stc
mov
popa
pop
test
cmp
xlat
add
mov
pop
mov
rol
cmc
addr16
in
loopne
lahf
pusha
bound
pop
into
jb
or
movsb
push
push
push
leave
outsb
pusha
pop
mov
les
sar
mov
cmp
mov
pop
mov
cmp
or
add
adc
sarb
push
mov
int
push
rcrl
jmp
cltd
xor
xchg
call
ja
sarl
js
test
jecxz
gs
shlb
pop
mov
aam
in
cwtl
and
test
xchg
divb
ja
push
dec
sar
cld
std
repnz
das
push
addr16
sti
push
loopne
mov
mov
and
fsubrl
rolb
xchg
js
sahf
das
outsb
andl
js
arpl
or
cmc
mov
and
mov
out
out
inc
test
mov
pop
mov
rolb
xchg
test
mov
push
mov
fisubrs
cmpl
add
rcll
int
sub
pop
dec
and
or
icebp
imul
movb
mov
imul
shlb
inc
and
lds
movsl
lds
into
xor
and
adc
or
pop
stos
inc
jp
test
fsubr
dec
sbb
sub
adc
rorl
inc
stos
xor
lcall
jae
xchg
cmp
mov
mov
lds
ja
xchg
mov
pop
xor
adc
rcrb
push
dec
psubb
fdivrl
or
into
push
cld
aas
inc
cmp
xchg
mov
sub
mov
in
and
jle
cmp
xchg
sbb
xchg
pop
aas
jecxz
pop
sbb
shll
fwait
jno
ret
pop
pop
cmpsl
gs
das
jb
xor
and
out
int
cmp
pop
in
sub
mov
mov
aam
push
imul
sub
xor
and
sbb
in
ret
incl
sti
add
pop
xor
add
push
and
jb
das
aad
push
inc
sbb
sbb
sti
push
jmp
jp
and
pop
lods
in
rcll
mov
lds
les
outsl
mov
sbb
xor
mov
das
enter
or
ljmp
jo
dec
pop
dec
data16
aaa
pop
xchg
in
xor
loopne
mov
test
pop
out
cs
sysret
out
inc
push
shll
inc
sub
inc
loopne
push
xchg
push
mov
popf
xchg
shrl
lock
mov
inc
movsb
repnz
fdivl
leave
das
mov
repz
iret
jp
daa
push
xor
in
iret
stc
bound
sahf
xor
mov
pop
pop
sbb
pop
or
imul
arpl
fisttps
into
cmp
xchg
xchg
in
mov
and
outsb
out
mov
jge
jns
fistpl
cwtl
das
mov
aam
stos
xchg
cmp
sbb
mov
add
mov
int
mov
aaa
mov
test
cmpsb
sbb
repz
lahf
pmulhw
jbe
enter
mov
jmp
sub
inc
mov
mov
popa
mov
nop
dec
popa
push
sub
push
sub
pop
add
pop
xor
jl
mov
mov
incl
fnsave
dec
enter
adc
jb
iret
fmul
pop
std
sbb
pop
addr16
stc
xchg
cmpsb
mov
mov
cmp
mov
push
xchg
pop
in
or
cmp
adcb
mov
xchg
push
or
imul
mov
repnz
fadds
and
xchg
aaa
clc
mov
jle
mov
sbb
in
lea
pop
out
in
xor
xchg
test
test
pusha
int
adc
sub
pusha
sti
push
and
cltd
out
daa
pop
js
inc
sub
js
rclb
test
xlat
loop
push
fcompl
iret
mov
cmpsl
movsb
and
xchg
cmp
adc
inc
inc
sbb
mov
xchg
cmp
leave
cmpb
fildll
dec
xchg
fwait
add
xor
ljmp
scas
inc
adc
out
mov
aad
mov
call
outsl
iret
xchg
repnz
sbb
mov
sub
fisttps
or
mov
and
cli
popf
into
jmp
and
xlat
mov
inc
fsubr
fcmovnu
sbb
icebp
push
sahf
sub
mov
xor
into
xchg
cld
fisubl
inc
pop
cli
pop
inc
shll
jb
xor
ds
insb
sub
or
push
test
cmc
cmp
dec
sub
inc
lods
and
sub
pop
jmp
flds
and
cmp
xchg
xchg
adc
cmp
mov
pusha
cmp
outsb
test
loop
push
rclb
inc
addb
add
psubsb
xchg
or
std
dec
jmp
in
roll
jmp
sti
stos
daa
out
push
lret
jne
aad
stos
cmpsb
mov
ljmp
imul
sti
insl
ret
cmp
sbb
jge
mov
lret
out
jle
popa
stos
jle
sahf
into
xchg
loope
or
pusha
jl
pushf
add
mov
sub
mov
test
add
pop
mov
add
addb
out
aas
mov
mov
or
or
imul
jge
and
xchg
sbb
iret
jecxz
or
xor
stos
jae
imul
cmp
insb
lock
xrelease
jo
aam
inc
cmpsl
andl
and
add
inc
js
lret
fmuls
movsb
addr16
push
popf
mov
mov
pop
cltd
lds
lock
dec
sbb
mov
dec
pop
stc
lahf
clc
xchg
fld
test
dec
lea
sbb
pop
test
cli
and
js
or
cltd
push
sub
cmp
js
add
sar
inc
push
cmc
gs
cmpsb
jg
scas
lcall
jg
cmp
negb
push
enter
sbb
inc
xchg
sbb
and
fildll
jl
pminub
dec
shll
cmp
mov
jne
add
add
lret
call
popa
in
mov
xchg
out
data16
arpl
cmpsl
mov
cs
xchg
out
popf
xchg
mov
pusha
data16
dec
dec
in
push
sti
sub
push
pop
repnz
fisubs
or
mull
xchg
jae
add
xor
or
int3
inc
sub
mov
jb
push
js
les
faddl
jmp
push
mov
inc
xor
cmp
sbb
fwait
test
mov
push
outsb
or
cmp
add
pop
or
inc
sbb
mov
mov
hlt
test
dec
call
jl
push
push
inc
into
mov
in
cmpb
cmp
insb
sbb
insl
subb
movsb
jl
repnz
bound
xor
mov
add
inc
adc
fcomp
pop
bound
scas
xchg
jno
aas
in
jg
jg
adc
mov
adc
xor
mov
imul
add
rcrb
jecxz
stc
push
push
out
test
lods
cs
adc
jp
nop
into
hlt
fsts
inc
pusha
mov
mov
xchg
pushf
or
push
mov
imul
outsl
sub
lret
sti
adc
or
sarl
loope
inc
adc
addr16
sbb
fcmovu
in
sbb
mov
insb
add
jmp
mov
push
mov
hlt
pop
fucomp
or
loop
jge
jge
aas
sub
out
cmp
mov
xor
pop
ss
jecxz
mov
out
into
pop
mov
sbb
pop
xchg
insb
mov
fldenv
test
testl
int
dec
mov
clc
lods
xor
mov
inc
mov
xchg
mov
cmpsl
outsb
into
add
inc
aas
cltd
or
mov
in
add
push
push
mov
lods
add
andb
fxam
mov
out
aas
repnz
mov
into
xchg
ss
leave
rcrb
movntq
mov
in
mov
push
ret
xchg
jns
pop
int3
mov
mov
and
shr
cld
lret
xlat
mov
and
ds
loopne
inc
inc
lods
mov
inc
insb
mov
pushf
rcrb
mov
cmpsl
sbb
add
ss
mov
xchg
inc
out
mov
leave
test
lret
xchg
rclb
inc
jl
das
xchg
cmp
or
xor
jno
sub
scas
jo
rclb
cmpsl
or
mov
sub
lcall
dec
sti
js
call
sbb
sbb
pop
popa
or
lea
popf
push
xchg
sub
int3
lret
pop
std
in
dec
lods
adc
jle
cmpsb
mov
dec
add
xchg
jmp
pop
pop
mull
out
pop
sub
pushl
jbe
je
xchg
mov
cld
arpl
pushf
jno
ljmp
in
iret
adc
stos
dec
sahf
je
push
das
inc
fists
outsl
pop
add
ret
add
inc
icebp
inc
pop
push
push
xchg
mov
loope
sahf
stos
js
pusha
das
push
inc
mov
nop
mov
gs
inc
xor
enter
mov
mov
addr16
mov
pop
sbbl
or
into
insb
cs
leave
shrb
xor
push
inc
aaa
xchg
or
stos
xor
mov
inc
inc
push
pop
xchg
mov
push
test
inc
aam
push
cmp
adcl
xor
jg
jmp
inc
into
lahf
ds
lods
sbb
cmp
in
addr16
mov
ljmp
push
inc
test
dec
sbb
lret
sbb
jmp
sarb
stos
or
lods
pop
idivb
pop
jecxz
ja
js
mov
sbb
shlb
mov
push
stc
xor
jmp
dec
inc
or
jle
dec
pushf
iret
push
subl
and
mov
fiaddl
adc
mov
push
hlt
push
enter
les
leave
or
or
std
sarl
mov
add
sub
inc
lret
jmp
into
rcr
cltd
je
dec
sub
out
andb
mov
imul
dec
pop
cmp
push
sbb
inc
ret
shrb
lock
jne
xchg
cmpsb
sub
cmp
fldenv
xchg
sub
cli
pop
lods
cmp
mov
pop
call
and
push
ret
dec
pop
test
mov
ja
jns
xor
sub
notl
cmpl
pusha
and
push
call
jp
push
std
jl
ret
sarb
sbb
sar
mov
jb
ret
mov
test
add
cmp
rclw
in
pusha
xchg
dec
jbe
clc
aaa
push
push
jne
cmpsb
jne
or
push
fs
and
lret
into
pop
or
fcomp
cmp
mov
enter
sahf
mov
pop
mov
mov
addr16
xchg
mov
push
add
cmc
inc
pop
call
sbb
cld
mov
add
lahf
fwait
addl
and
mov
sar
popf
popa
loopne
fistps
pop
notl
pusha
outsl
test
xor
std
sarb
daa
icebp
rclb
sbb
push
add
out
dec
pop
hlt
insl
movsl
mov
mov
cwtl
in
stc
ret
sub
xor
icebp
dec
mov
cltd
out
add
sub
adc
imul
pop
in
and
daa
xchg
adc
test
sbb
adc
fisttpl
fdivl
cwtl
pop
mov
mov
push
adc
rcll
fdivs
subb
leave
push
push
sub
cmc
xchg
adc
mov
and
andb
sbb
or
aaa
and
pop
ss
jb
faddl
xchg
dec
pop
leave
test
xchg
fcoml
mov
or
or
lea
dec
or
jmp
icebp
stc
push
mov
pop
testl
and
hlt
inc
dec
pop
push
fmul
and
mov
adc
cmp
dec
lret
push
and
int
out
mov
test
pop
pushf
loop
arpl
sbb
push
jecxz
repnz
fidivrl
sbb
add
stc
mov
xor
cwtl
xor
mov
add
pop
sbb
or
rcrb
pushf
add
imul
xchg
add
lods
xor
mov
ja
mov
mov
dec
ret
sub
or
loopne
xchg
jl
pop
cmpb
inc
sub
ja
popa
mov
mov
sbb
scas
xchg
inc
es
inc
xchg
sbb
lret
shlb
xlat
sbb
push
jno
jmp
nop
mov
cld
jno
xchg
jno
sub
lret
es
subl
les
or
pop
daa
lret
xor
mov
xor
ror
out
push
dec
push
scas
ljmp
pusha
imul
xchg
lret
mov
cmp
push
cs
xor
and
and
cmp
cmpsl
dec
imul
dec
aam
into
jnp
xchg
loope
dec
pop
xchg
test
adcl
clc
mov
sbb
pusha
adc
xor
mov
mov
mov
lret
pusha
inc
sub
xor
sub
int
push
cwtl
scas
jno
iret
push
rolb
or
cmp
push
outsl
push
adc
out
mov
push
xor
cmp
outsb
mov
in
dec
daa
add
stos
cmpb
or
addr16
popa
lahf
and
shl
ljmp
jge
adc
mov
lods
cmp
mov
lret
xchg
testb
xchg
inc
xchg
dec
subb
push
stos
imul
adc
and
or
xchg
jmp
fs
jno
ds
mov
cmc
xchg
test
push
pop
je
mov
push
rclb
inc
jle
in
sub
mov
jge
sbb
mov
jge
test
sub
add
ds
imul
sahf
pop
loope
xor
xchg
arpl
jb
cmp
fwait
out
cwtl
jb
and
push
xor
jge,pn
in
and
iret
pop
and
and
es
iret
std
xor
outsl
inc
add
pop
lock
cmpl
aad
cmp
movsb
lret
add
or
cmpsb
test
ret
addr16
inc
add
mov
cmp
test
aaa
lret
jne
cmp
and
mov
sbb
out
sahf
push
mov
xlat
cwtl
jns
in
inc
xor
call
enter
mov
cltd
cltd
sti
mov
aam
rorl
xor
cmp
mov
mov
das
dec
xchg
cltd
push
int3
pop
mov
repnz
jg
in
xchg
je
call
ret
shl
sbb
mov
pop
push
ss
xchg
inc
jp
xchg
clc
inc
dec
insb
push
mov
imull
les
xor
mov
pop
ret
and
jl
loop
sub
lds
inc
sti
mov
jne
sti
arpl
mov
and
and
jg
mov
ret
ss
jp
bound
data16
andl
arpl
mov
fsubrs
sbb
xchg
xchg
or
pop
sahf
jb
test
loopne
dec
fildl
cmc
repnz
pop
xor
shl
xor
xchg
pop
sbb
int3
adc
mov
js
repz
inc
mov
jns
aam
pop
arpl
jecxz
bnd
dec
or
ficompl
pop
sub
sbb
xor
jge
cmc
js
mov
or
or
xchg
dec
cmp
xor
jo
stos
das
or
jae
ficoml
cli
mov
sti
push
iret
xchg
jmp
mov
xchg
scas
mov
addr16
outsb
cltd
jno
popf
inc
dec
jno
mov
shr
lret
jns
rclb
dec
out
cmp
mov
xor
mov
xchg
dec
test
filds
das
push
sbb
sbb
sbb
or
xchg
mov
iret
call
outsb
jne
cmp
xchg
cmp
and
mov
fildl
popf
lods
sub
ja
jecxz
scas
pop
shl
or
xor
fidivrl
jmp
lods
add
xchg
inc
inc
cmp
repnz
mov
aaa
shll
dec
push
repnz
stos
lret
mov
pop
add
dec
inc
pop
and
shrl
and
ds
cmpsb
pop
mov
mov
test
shl
and
sub
loop
fcmovnbe
cltd
stc
mov
daa
xchg
mov
dec
cmp
rcll
pop
fcompl
and
push
dec
sbb
dec
js
mov
xor
movsl
and
das
pushf
loope
cwtl
adc
into
icebp
mov
test
lods
fisttpl
add
or
loop
or
cs
xchg
outsb
cmp
dec
iret
jns
or
loope
test
sbb
mov
fnstsw
andb
mov
sarb
xchg
rcll
lret
add
loope
sbb
jecxz
jbe
out
fdivrs
push
or
xchg
sbb
pushf
or
hlt
mov
jecxz
repnz
andl
test
aas
pop
pop
inc
ficoml
sti
pop
cmpsb
mov
push
je
inc
mov
pop
ror
add
in
push
xor
and
adc
jno
orb
test
pop
in
dec
add
loopne
inc
inc
call
inc
dec
pop
mov
stos
push
mov
repnz
fildl
cs
aas
aas
leave
pop
mov
or
cmc
dec
sahf
push
mov
out
nop
mov
imul
sbb
inc
lcall
mov
dec
pop
fdivs
or
flds
std
pop
cmp
iret
sub
mov
mov
shrl
fisubs
push
adc
xchg
es
push
fimull
jg
notl
inc
les
mov
add
push
sahf
jbe
call
lahf
mov
mov
xchg
ljmp
rorb
out
push
push
push
insb
negb
adc
out
adc
cmp
push
xor
adc
dec
mov
lods
cmp
adc
sub
and
sub
and
mov
cmp
mov
pop
sbb
xor
mov
insl
push
movsl
jb
int
and
mov
pop
jbe
loop
pop
cltd
je
imul
insb
jno
lock
jle
sub
lock
or
insb
addl
mov
mov
dec
int3
inc
adc
pusha
xchg
test
adc
out
mov
fsubrl
cmp
das
and
pushf
test
adc
dec
jmp
not
idivb
mov
cmpb
xorb
mov
pop
adc
dec
dec
jmp
xchg
sti
in
cmovge
jno
rcrb
dec
loop
cmp
sbb
subl
daa
int
shrl
imul
pop
lock
mov
stos
dec
cmp
and
or
dec
mov
addr16
in
sub
adc
sub
enter
or
add
mov
mov
inc
cmp
sub
xor
adc
insb
cs
xor
dec
mov
xor
xor
ret
push
jecxz
inc
hlt
sbb
cmp
stos
adc
pop
bound
inc
into
xor
lods
addr16
popa
adc
int3
in
fnstenv
ficompl
adc
movsb
mov
inc
mov
sub
dec
sub
adc
int3
mov
pop
into
lods
push
aaa
lods
lret
sbb
call
and
mov
jno
dec
pop
lahf
scas
jmp
stos
mov
pop
add
fbld
or
and
call
lret
push
mov
repz
gs
insl
pushf
stc
lods
mov
out
jmp
cmp
xchg
aas
sbb
or
push
cmp
sub
sbb
mov
bound
add
mov
icebp
pop
pop
mov
lret
scas
data16
ss
testl
add
notl
jns
mov
das
mov
jnp
mov
pusha
dec
inc
imul
out
cmp
sbb
sbb
inc
fsubrl
mov
inc
mov
cs
jbe
jne
pusha
xchg
daa
and
mov
scas
push
out
inc
mov
rclb
movsb
and
fcomps
push
sahf
les
adc
icebp
stos
mov
in
aaa
cwtl
mov
lret
popf
enter
std
shl
movsl
add
cmp
push
out
lock
mov
stc
mov
pop
or
bound
xor
sub
lea
das
test
imul
subl
addr16
sub
dec
in
mov
add
mov
jmp
adc
ror
or
push
adc
shlb
iret
cmpb
dec
int3
repz
out
xchg
leave
add
mov
int3
push
or
out
into
dec
adc
jno
aam
xor
or
test
pop
cmp
xchg
jns
insb
jns
mov
idivl
add
jns
cld
xor
rorb
fadds
das
enter
mov
lcall
imull
xor
lock
inc
pushf
and
adc
stc
and
jl
inc
out
daa
sub
adc
shlb
mov
dec
inc
or
mov
das
lea
clc
fisubrl
mov
adc
dec
mov
cmp
cmp
jecxz
push
jns
xchg
rcr
pop
xchg
out
adc
movsb
cld
out
or
sub
pushf
xor
loopne
jmp
cmp
push
dec
js
or
mov
rolb
fdivl
mov
inc
and
xor
hlt
mov
movsl
mov
xlat
pop
lcall
mov
iretw
fsubrp
jl
mov
inc
mov
xor
mov
jg
or
mov
ljmp
jbe
sub
or
mov
test
mov
out
pop
test
mull
sbb
mov
mov
push
shrl
lret
imul
mov
mov
push
cld
and
lods
jmp
push
popf
incb
push
shlb
xor
mov
dec
ret
stos
sub
push
xor
or
sahf
mov
rorl
icebp
sub
fiaddl
xchg
insl
push
mov
scas
es
jnp
or
jmp
inc
leave
and
push
scas
add
int
leave
lock
push
into
mov
iret
jle
test
insl
cwtl
arpl
cmc
inc
repz
mov
pushf
xchg
sbb
push
lahf
adc
inc
mov
pop
les
stc
subl
lock
cmpb
jp
sub
adc
ja,pn
sbb
dec
insb
sbb
xchg
out
cmp
or
test
sub
jmp
test
fsubl
cmp
sub
cmp
ret
push
cmp
xor
push
cmc
mov
add
sbb
lret
inc
ret
in
into
jb
es
sbb
dec
pusha
cmpsb
movsl
outsb
and
cli
xchg
ljmp
mov
insl
jbe
xor
shlb
sarb
insl
test
push
push
xchg
lahf
pop
testb
add
outsb
mov
call
dec
jle
jbe
mov
fs
sahf
mov
ja
mov
jle
push
outsl
pop
movsl
inc
jle
jo
mov
repnz
cmp
mov
into
movsb
xor
xchg
or
sar
repz
movsl
jmp
popa
aaa
jb
xchg
dec
mov
mov
out
into
push
jl
ss
mov
lea
imul
mov
and
xchg
cmp
ret
ljmp
inc
mov
pop
pop
mov
xor
dec
lods
inc
out
jae
sbb
shr
fnstsw
sbb
cmc
imul
mov
shll
shlb
int3
or
lahf
ret
sbb
fidivrs
jle
jnp
mov
adc
sbb
mov
sahf
sti
aad
sbb
aas
xlat
xchg
or
push
lcall
scas
das
stc
inc
test
push
mov
gs
fbld
push
xor
and
and
cltd
pusha
ja
mov
daa
and
mov
neg
xchg
std
cmp
mov
shr
mov
mov
pushf
adc
xchg
xchg
pop
outsl
push
inc
les
fnstcw
fildl
mov
fistl
push
cmp
and
fdivs
adc
cltd
imul
imul
pop
cmpsb
je
hlt
sahf
pop
popf
pop
test
hlt
pop
icebp
mov
inc
imul
and
inc
push
inc
mov
daa
cmp
data16
dec
jb
mov
mov
sub
cltd
dec
fsubr
xchg
mov
lods
std
arpl
leave
adc
or
fld
repnz
clc
mov
pushf
sub
fidivl
repnz
or
aam
mov
and
mov
xchg
out
insb
mov
mov
add
adc
lods
and
push
and
jmp
mov
fstpt
jbe
movsb
aad
xchg
add
movq
lods
push
jae
ds
in
out
lods
pop
xchg
xchg
popa
jg
lods
das
rcll
rcr
cmpsl
push
adc
aas
xchg
in
or
aam
cmp
loop
and
out
mov
xor
hlt
jl
in
gs
push
or
cmpsl
ds
divl
lods
pop
inc
or
dec
cmc
dec
add
add
movsl
mov
push
insl
loop
xchg
or
add
sbb
xor
cmpsl
and
or
nop
or
mov
or
pop
cmpsl
fidivs
sbb
scas
sub
ljmp
dec
push
push
mov
jnp
push
out
ss
cbtw
and
ror
push
testb
inc
aam
sub
ret
add
sub
mov
fs
fcmovu
loop
nop
hlt
fcompl
sbb
mov
rcrb
loop
out
mov
adc
cmp
loope
jae
fs
mov
pop
add
and
and
sub
xchg
push
push
ror
cmp
or
sub
xor
lcall
mov
in
sub
lods
jp
dec
loopne
inc
jo
jne
dec
sbb
testb
add
dec
bound
leave
or
mov
arpl
nop
roll
inc
out
shll
rcl
push
call
mov
shr
xchg
jbe
rclb
or
das
fidivs
dec
lea
and
or
pop
test
int3
mov
add
or
movl
pop
mov
xor
xor
loopne
sub
dec
inc
inc
movsb
movsb
mov
sbb
dec
sub
jp
xchg
inc
std
in
pop
or
inc
mov
shlb
rcr
cmp
xor
stc
jae
popf
lcall
sbb
push
jo
scas
sbb
add
mov
cltd
inc
jns
inc
and
cmpsb
dec
in
xor
lret
mov
add
std
jae
inc
out
daa
loopne
rolb
xchg
add
dec
test
and
insl
mov
sbb
adc
mov
dec
pop
jns
mov
vunpckhps
fidivrl
adc
leave
xor
xchg
inc
and
and
sub
out
dec
hlt
aad
sbb
dec
xchg
ficompl
jb
int3
mov
xchg
dec
daa
mov
cmp
pusha
addr16
pmulhw
cmpsb
pmullw
repnz
cmp
loopne
icebp
jle
jb
aas
cltd
imul
mov
pop
cmpsl
dec
dec
loopne
pop
push
xor
adc
dec
fs
aad
mov
sub
mov
ret
movsl
push
cwtl
scas
push
ftst
notl
inc
or
push
mov
outsb
out
call
xlat
mov
pop
test
adc
sbb
fldt
roll
or
out
mov
out
sbb
jnp
std
mov
sahf
aam
jge
xchg
push
cli
movsl
or
and
jl
ss
pop
jae
js
repnz
xor
lods
add
push
or
mov
dec
mov
inc
jnp
or
xor
mov
fidivs
inc
insb
rcl
test
lods
inc
std
mov
dec
adc
mov
fdivs
xor
loope
xchg
fdivr
or
mov
int
push
mov
push
into
mov
and
mov
jo
mov
lds
mov
cmpsl
inc
jb
mov
ljmp
jnp
add
push
les
mov
sub
out
xor
repz
shrl
sbb
jg
cmp
jno
pop
and
sub
pop
in
pop
xor
or
cli
cmc
nop
mov
or
dec
imul
les
pop
dec
pop
xor
sub
or
cmp
push
jae
or
push
or
push
pop
xchg
cli
cmp
sbb
or
loopne
lret
and
nop
jb
femms
pop
adc
lret
insl
inc
loopne
scas
or
jecxz
cmp
out
jg
sarl
sbbb
ds
adc
push
push
inc
cld
loop
notl
pop
sti
aad
jns
popa
cmpsl
sbb
adc
or
in
sub
lock
fsub
mov
dec
into
ljmp
dec
sti
fwait
push
inc
shlb
js
and
xor
fcomps
dec
and
add
xlat
loope
jae
add
pop
jo
imul
shrl
push
and
sbb
das
push
cmc
test
iret
mov
enter
es
mov
test
jne
in
scas
xlat
mov
loopne
xor
aam
clc
xor
xchg
dec
icebp
dec
cmc
adcb
adc
mov
mov
inc
cmpsl
adc
lret
arpl
push
lock
xor
mov
mov
sub
outsb
xlat
enter
jbe
call
mov
jne
mov
sub
ja
pop
cmp
pop
sub
dec
adc
iret
shrl
sbb
jne
xchg
cmp
dec
dec
insl
stos
mov
push
inc
cs
xchg
les
jae
leave
movsb
cmpsl
lcall
push
hlt
aas
clc
inc
sbb
add
adc
dec
or
lock
xor
ret
je
nop
inc
sub
test
mov
fnstcw
jle
icebp
dec
loopne
cmp
andb
cmp
sub
pop
mov
adc
ds
sbb
add
inc
es
mov
pop
dec
rcll
jmp
out
out
ss
add
and
les
mov
in
jl
add
fisubs
pop
fsts
xchg
mov
nop
fmul
xor
sbb
shl
xor
push
jmp
sbb
popf
dec
rorb
aaa
dec
inc
loope
push
push
adcl
testb
fildll
data16
sbb
rcr
xor
xorb
inc
sub
xor
shr
in
lods
inc
mov
xlat
xor
pop
mov
call
clc
data16
jno
je
in
inc
js
or
pusha
or
sbbl
mov
adc
enter
xchg
leave
adc
aad
or
dec
inc
push
fisttpll
ja
pop
ss
mov
lahf
loopne
dec
jg
jnp
xor
bnd
cwtl
jns
mov
mov
sbb
adc
adc
adc
xor
add
mov
push
mov
xchg
aaa
and
rcr
orl
enter
loop
sbb
lahf
popl
in
or
jg
cltd
call
or
push
pop
sub
movsb
mov
int3
rclb
add
mov
xchg
push
dec
cwtl
call
stc
pop
les
mov
push
int3
mov
jb
sub
es
les
insb
insl
xchg
sahf
pop
add
imul
lret
jmp
iret
shr
xchg
pushf
or
dec
mov
insb
xchg
jge
lret
and
out
xchg
dec
jecxz
push
into
mov
jae
into
and
push
dec
mov
mov
shll
test
xor
mov
push
in
mov
movsb
jmp
rcr
call
div
dec
pop
xchg
sahf
scas
ljmp
jmp
out
jns
jnp,pn
jp
cmp
jae
insl
xchg
ds
mov
cmp
shr
fs
aam
fadd
inc
dec
add
or
into
jo
xchg
mov
negb
imul
jne
cli
mov
jns
adc
cs
fimull
xchg
insl
fptan
push
shl
push
call
push
adc
rorb
fsubl
out
daa
jecxz
xorb
or
call
bound
sub
je
pusha
in
scas
pop
add
pop
push
sbb
jmp
pop
mov
fs
sbb
aas
inc
mov
hlt
jge
push
daa
or
imul
lods
movsl
into
push
jae
sub
es
and
aas
ljmp
das
xchg
sbb
adcb
insl
mov
cmc
mov
cwtl
out
mov
jns
lds
add
clc
ss
dec
hlt
jecxz
pop
xchg
inc
or
sub
or
testb
fdivr
push
xchg
scas
pushf
popa
test
cmp
int
xchg
pusha
pop
push
mov
sbb
aaa
xlat
ror
jnp
add
js
jnp
incb
sti
and
std
or
lock
daa
cmp
push
fsubr
jne
adc
pop
jae
test
or
int
fcmovne
test
cmp
mov
test
fsubr
hlt
and
or
push
rcll
jecxz
sbbl
jns
inc
and
mov
test
xchg
sbb
mov
test
and
inc
dec
xor
and
jle
add
fwait
cltd
js
push
inc
mov
mov
filds
cld
sub
xor
test
mov
adc
pop
into
push
adcb
or
jl
cmp
ja
mov
jmp
xor
mov
dec
xlat
jnp
xor
shll
pop
repz
in
outsl
mov
test
dec
nop
out
mov
out
test
ljmp
mov
scas
rorb
jo
jl
popa
lock
add
dec
push
andl
jl
push
push
leave
add
dec
dec
xor
lods
xchg
xor
jmp
pop
mov
sub
jne
push
adcl
dec
ficompl
xlat
jnp
adc
mov
sbb
ss
fstpt
lods
les
or
bound
rcrb
mov
inc
or
xlat
fcompl
notb
jno
fistpll
loopne
or
test
pop
ds
hlt
mov
aaa
inc
fs
xor
fsubrl
fs
push
mov
xchg
mov
fdivl
stos
mov
testb
aaa
gs
inc
inc
lea
lcall
imul
pop
pop
faddl
ss
push
cmp
daa
loop
push
add
imul
pop
or
push
cmc
pop
sti
cmc
scas
jp
mov
pop
sbbl
test
std
aas
sbb
cmpsb
adc
pop
xor
mov
std
jo
test
movsl
cmp
int
pop
mov
mov
mov
xlat
scas
mov
or
lea
leave
test
dec
std
sub
or
mov
rcrb
lds
xor
push
test
sbb
lret
push
lods
inc
mov
jp
pop
imul
inc
aad
sbb
cmpsl
test
les
jmp
lods
cmpsl
enter
pop
push
pop
xor
sbb
aas
into
adc
adc
test
jle
loope
push
xchg
xlat
hlt
mov
xchg
pop
call
in
mov
mov
lds
mov
ss
jl
mov
xchg
and
add
andl
loop
sub
popf
jle
dec
cmp
test
in
hlt
sbb
mov
sub
in
xor
xchg
in
lea
movsb
xor
sub
mov
xchg
lock
movsl
loopne
pop
jl
lret
sbb
inc
scas
sti
pop
push
hlt
popl
mov
jl
test
fdivr
xchg
pop
push
jbe
addr16
ret
jmp
xor
add
lret
outsb
insl
ret
js
fwait
andl
add
or
add
shlb
jge
int
and
stos
push
dec
in
dec
xor
insl
sbb
dec
jno
mov
xor
fisubs
mov
or
je
cmp
xchg
mov
ret
mov
cmp
xlat
dec
js
adc
mov
rol
mov
out
mov
xor
pop
mov
jnp
mov
mov
pusha
es
sub
aaa
adc
push
in
pop
jge
xadd
sbb
shl
sbb
out
mov
mov
cmp
pop
sti
imulb
jecxz
out
out
adc
push
mov
mov
cs
mov
dec
arpl
xchg
or
jnp
fwait
je
cmc
es
arpl
push
shrb
lcall
ss
aaa
inc
mov
pop
mov
or
pop
cmp
adc
lret
inc
dec
mov
call
lcall
inc
aaa
xor
mov
out
test
insb
testb
sub
mov
popf
daa
pusha
fisubrs
rorl
ja
pop
xchg
mov
dec
dec
push
in
dec
out
repz
pop
cmpsl
cs
adc
mov
adc
fcompl
aas
clc
sub
add
push
stos
dec
pop
rcpps
ds
clc
ret
mov
stos
dec
adc
lcall
mov
inc
icebp
inc
xor
repnz
les
scas
test
mov
xorb
sub
jl
pop
mov
aaa
xchg
or
cmpsl
sbbb
ret
xchg
sbbb
pop
lods
and
or
cvtps2pd
ds
inc
jle
andl
leave
jle
xor
cld
dec
lods
out
dec
adc
rcr
xchg
sub
shrl
cmp
and
mov
adc
sub
lcall
push
xor
push
push
sbb
mov
fwait
test
mov
or
aam
into
fs
sub
mov
mov
jl
or
data16
jecxz
or
pop
jl
xor
sub
adc
or
cmp
xlat
adc
mov
lock
sub
cli
jg
cmp
pop
stos
sarl
inc
add
stc
js
out
ret
loopne
mov
pop
dec
movsl
fldenv
sbb
sbb
xchg
mov
pop
adc
or
lret
and
ja
jo
repz
pop
and
adc
mov
push
mov
rorl
test
mov
pop
xchg
or
je
mov
inc
imul
dec
gs
cmp
icebp
cmp
pushf
and
testl
cmp
mov
out
fs
fisttps
fs
les
stc
cmp
arpl
pop
xor
icebp
imul
loop
or
mov
cmc
and
lods
cmpsl
dec
xor
std
pop
test
cmp
adc
test
gs
cmp
dec
aas
mov
stos
loope
sub
push
bound
cs
dec
jmp
stc
dec
sub
add
aad
icebp
addr16
data16
mov
out
std
clc
fwait
mov
mov
loop
jns
pop
mov
scas
mov
outsl
push
xchg
mov
lcall
xchg
add
xchg
pop
data16
pop
scas
mov
les
push
adc
dec
or
push
movsb
lcall
loope
out
sbb
insl
fldenv
std
cmp
pop
mov
dec
push
and
arpl
dec
add
sbb
shrb
fxch
push
push
icebp
sub
jne
jge
push
pushf
shlb
mov
iret
aam
pop
push
pop
aaa
sbb
xchg
jo
xchg
mov
int3
mov
out
movsl
int3
dec
push
stos
add
mov
push
mov
pop
popf
xchg
loopne
outsb
xor
cmpsl
ret
pop
dec
dec
jnp
repnz
cmp
shlb
or
loopne
inc
sub
gs
push
sub
inc
add
push
call
inc
lods
sbb
lods
jecxz
lea
cmp
sbb
xor
sar
loopne
stos
or
mov
cmp
repnz
out
pop
dec
negb
push
inc
or
mov
shll
xchg
lret
cmp
jnp
xor
imul
std
push
fildll
fisubrs
fdiv
add
ja
sub
lret
aam
mov
cltd
in
push
jbe
cmp
in
jp
ret
out
ljmp
frstor
cmpsb
mov
jecxz
push
and
sbb
xchg
mov
mov
jne
pusha
sub
mov
add
jae
shrl
and
enter
fadds
pop
insb
nop
xchg
add
jg
aas
push
sahf
aam
das
inc
or
xchg
rolb
xchg
test
cmp
mov
sub
sub
mov
lret
arpl
mov
pop
leave
nop
xor
lret
push
add
xchg
adc
adc
mov
fsubrs
pop
jns
jg
stc
mov
repnz
lds
repz
add
aad
cs
adcl
aam
inc
insb
je
pop
jmp
mov
fnstenv
jno
fsubrs
dec
push
mov
jo
jmp
subl
jno
subb
sbb
mov
xor
sar
fidivrs
add
je
sub
loope
sub
and
jo
data16
xchg
dec
adc
int
sub
repz
int
inc
inc
fstpt
lods
mov
pop
inc
mov
aas
clc
jo
xor
mov
and
in
cmpsl
hlt
push
xor
add
push
mov
push
in
loop
jae
mov
dec
pop
mov
inc
pop
scas
imul
leave
ljmp
push
mov
jb
mov
lds
rol
jno
cmp
add
mov
iret
lods
push
pop
fimuls
shlb
mov
lret
jo
inc
fistpll
push
pop
sub
int3
jae
pop
sub
push
clc
shll
lds
push
mov
xchg
fmuls
mov
jp
jns
xor
lods
mov
pop
imul
mov
mov
rcrl
xor
or
sub
mov
mov
je
inc
pop
cmp
push
push
push
into
or
clc
movl
jns
cmpsl
ret
pushf
pop
inc
int3
enter
lods
dec
dec
jno
mov
sbb
ds
fcmovnb
cmp
out
daa
inc
adc
in
and
jle
pop
jns
fbld
push
push
xchg
push
mov
sbb
adc
mov
jnp
adc
mov
dec
sub
stos
xor
sbb
test
inc
cmpsb
std
push
rcr
pop
add
cmc
in
scas
mov
cmp
cmp
lea
pop
jecxz
sub
lea
nop
stos
xchg
or
stc
add
out
lret
iret
out
ja
ds
and
fstpt
daa
xchg
mov
in
xchg
les
je
mov
fdivl
aas
jnp
mov
dec
jo
add
jno
push
add
push
in
clc
add
inc
into
sahf
mov
cmpsb
addr16
xor
cmp
lock
call
popa
jmp
mov
add
cmp
inc
es
std
pop
jecxz
sbb
clc
mov
adc
arpl
jo
push
xchg
imul
push
mov
xorl
add
and
mov
outsb
inc
imul
imul
ja
ss
and
mov
repnz
adc
inc
pop
out
mov
test
xor
add
sahf
lods
push
sbb
or
dec
fistpll
scas
lock
dec
loopne
push
mov
or
mov
lds
mov
mov
push
inc
adc
or
xor
or
adc
jmp
pop
inc
or
inc
jns
push
out
and
adc
jb
sti
fsubs
addr16
jecxz
jbe
or
outsl
lahf
mov
push
jmp
inc
iret
or
lcall
push
unpckhps
push
popa
jbe
or
test
xor
mov
dec
rorl
inc
shr
imul
fcomp
lods
sahf
insb
cmpsb
jbe
insb
mov
shll
test
inc
outsl
mov
mov
std
fmul
xor
iret
repnz
les
or
lahf
fisttpll
sbb
xor
xor
lcall
inc
push
inc
and
sbb
pop
adc
mov
cwtl
dec
insl
stc
cwtl
cmpsb
dec
pop
shlb
mov
push
dec
jnp
mov
enter
push
mov
sbbl
xlat
or
dec
movsb
fidivl
push
dec
mov
pop
movsl
dec
fwait
cmp
add
fsubs
leave
sub
lods
inc
out
xor
mov
cwtl
adc
loope
pop
pop
outsl
shl
jno
ret
sbb
push
cmp
mov
adc
nop
fildl
mov
adc
cmp
lock
rolb
pop
imul
mov
cmp
cmp
mov
cmpsb
aad
repz
cwtl
stc
mov
shrb
fsub
js
arpl
sub
bound
mov
mov
in
aam
push
movsb
jp
cwtl
dec
push
notl
out
mov
and
dec
lock
adc
movsb
in
and
loope
out
lcall
outsb
shrl
pop
inc
mov
fimuls
inc
xchg
add
mov
sub
mov
and
add
inc
push
js
push
adc
xor
call
in
cs
gs
mov
adc
mov
icebp
cmpsl
sahf
push
sarl
push
sub
loopne
shlb
int3
out
dec
jmp
out
jmp
test
cli
xchg
test
lods
jo
xchg
pop
daa
ss
adc
dec
push
std
out
mov
xchg
mov
out
clc
mov
jle
cmp
pop
adcl
int3
and
lods
outsb
fidivrl
cmp
push
fs
xorb
pop
xor
cmp
jecxz
mov
insb
sbb
es
push
cmp
cmp
push
out
push
addr16
pusha
out
stos
loopne
dec
push
cmp
push
cmp
lret
adc
jo
out
adc
fcomps
addb
xchg
xchg
aas
push
out
jno
push
out
pop
std
pop
pop
jecxz
sbb
fcomps
rcr
lcall
xchg
sbb
fisubs
subb
jl,pt
xlat
aas
scas
pop
push
push
lds
or
pop
jo
xchg
out
mov
bsf
push
iret
inc
and
mov
ljmp
cmp
pop
outsb
mov
adc
sbb
leave
bound
mov
lret
xor
mov
loop
mov
push
jae
pop
mov
xchg
mov
aas
aaa
jnp
xchg
cmp
adc
cmc
int
and
or
sub
js
notb
cmpb
rorb
lods
mov
js
inc
mov
push
push
xchg
test
inc
xchg
adc
push
out
sbb
adc
bound
jle
loope,pt
movb
repnz
repnz
push
adc
ret
adc
sti
sbb
cmp
mov
or
fwait
or
mov
sti
out
cmp
popf
lret
enter
sbb
insb
inc
xor
arpl
jecxz
dec
dec
in
aad
sbb
mov
dec
pusha
jbe
push
ds
pop
out
adc
testl
pop
jne
fimull
xor
and
cmpsb
xchg
popf
mov
mov
fiaddl
xor
and
or
xchg
xchg
nop
pop
shlb
xorl
ss
mov
mov
ds
or
mov
shrl
ficoms
jo
jle
rolb
js
cmp
cmp
stos
pop
and
pop
imulb
lahf
jno
xchg
les
repz
xor
xchg
and
add
out
sarl
aas
pop
pop
aas
aad
mov
jp
pop
stc
dec
daa
pop
and
jmp
loop
inc
pop
jb
out
pop
imul
xor
aas
mov
inc
nop
inc
ret
mov
xchg
and
pushf
sti
stc
scas
daa
push
sbb
mov
mov
xchg
mov
cmp
mov
out
test
ss
mov
jno
dec
fst
inc
sub
push
mov
xor
pop
dec
call
sbb
out
add
int3
pop
xchg
hlt
sbb
jnp
sbb
lret
ljmp
fimull
push
js
or
lods
dec
sub
adc
mov
or
push
inc
lahf
sbb
fwait
shrl
pop
push
mov
cmc
xor
addr16
mov
mov
inc
and
repnz
bnd
push
cmp
mov
cmp
lods
jo
dec
xor
pop
fidivl
xchg
es
sbb
add
aaa
imul
in
dec
in
xor
fidivs
jle
std
out
sub
movsb
sub
aas
mov
scas
mov
cmp
lahf
pop
pop
xchg
out
jge
or
adc
fadds
cmp
adc
mov
jnp
push
and
loopne
popa
cmpsl
push
subl
andl
aaa
sbb
mov
pop
sbb
adc
lcall
fcom
fidivrs
cld
inc
unpckhps
inc
jae
sbb
mov
inc
dec
push
ret
cwtl
shlb
dec
lret
mov
xor
outsb
and
fstl
mov
mov
test
bound
cmp
pop
test
jle
xlat
testb
xlat
out
loope
aam
test
mov
dec
jle
and
lret
jne
mov
and
cltd
pop
mov
fidivrl
mov
dec
pop
xor
and
xorb
pop
aaa
push
push
jbe
jb
xor
push
mov
cmp
xorb
in
pop
lcall
out
pop
mov
or
push
repz
push
or
stos
pushf
loope
ss
in
sahf
mov
cmpsb
mov
xor
stos
stc
jno
jle
std
in
push
mov
mov
adc
pusha
shll
das
dec
or
movl
mov
xchg
fsts
out
jb
fildl
jecxz
pop
sub
push
push
add
aas
test
push
addb
mov
sbb
inc
lods
add
mov
jb
pop
pop
jp
dec
jno
pop
jae
push
clc
mov
dec
add
addb
movsl
fiadds
dec
xchg
jmp
lcall
imul
push
clc
mull
push
pop
add
pop
clc
ss
mov
pop
fimull
lock
adcl
aaa
xchg
popf
push
push
push
pusha
aaa
dec
pusha
loop
les
add
add
out
or
pop
mov
fimuls
lret
pop
lahf
and
aas
inc
mov
xchg
mov
sbb
pop
sti
scas
push
pushf
jns
push
addr16
or
orl
adc
out
add
fwait
mov
sbb
jge
pop
or
xchg
adc
mov
adcl
pop
fsts
data16
test
call
dec
xchg
jno
icebp
pop
ljmp
xor
insl
gs
clc
push
mov
ljmp
ss
mov
sub
pop
stc
call
cmc
sti
lret
sbb
sbb
mov
lahf
cmp
gs
xchg
xchg
mov
adc
mov
ss
sub
push
jl
ja,pt
and
cmp
push
imul
mov
dec
into
cmp
push
or
scas
addr16
and
jl
cmp
push
outsb
inc
cld
pop
push
pusha
insb
fs
jns
push
inc
push
out
lcall
lock
jmp
mov
out
xor
fs
sub
out
aas
loop
xchg
lea
out
aaa
out
adc
fmul
inc
sbb
dec
mov
push
in
mov
add
lahf
sti
shl
mov
pop
adc
jecxz
inc
int
out
cmp
cmp
repnz
icebp
push
sbb
shlb
pop
into
xchg
adc
rclb
xor
sub
leave
stos
fisubl
mov
push
daa
xchg
pop
xchg
jbe
repnz
inc
jle
jecxz
mov
inc
faddl
out
push
sbb
sarb
lahf
scas
dec
pusha
xor
gs
push
jecxz
add
xchg
mov
pop
and
cmp
ret
test
xor
and
repnz
mov
push
mov
jg
mov
mov
inc
loopne
add
sub
cld
jo
or
sbb
out
mov
inc
cmp
lds
stos
sbb
mov
movsb
cs
frstor
hlt
fucomp
sub
insb
sahf
sbbl
andb
sbb
popf
xor
out
lcall
mov
lcall
inc
jmp
mull
idiv
ret
add
sarl
addr16
mov
and
fimull
adc
and
sub
push
sbb
shll
dec
push
jo
divl
pop
push
test
cli
icebp
jbe,pt
push
test
dec
scas
inc
stc
insb
bound
ds
adc
pop
adc
test
sahf
push
fcoml
mov
pop
aas
test
pop
bound
call
mov
mov
xor
adc
repz
jb
stos
jle
int
insl
xchg
cmp
jo
push
aam
test
insb
insb
jo
repnz
xchg
pop
xor
scas
dec
stc
pop
cli
xchg
xor
pop
int
push
inc
cmc
test
test
inc
hlt
cmp
jne
fisubrl
stos
mov
push
jecxz
call
mov
leave
sbb
or
fdivrs
pop
loopne
iret
sub
xor
add
sbb
push
jns
or
or
cmp
xor
bound
jno
push
mov
inc
int
mov
adc
popa
push
or
fadds
fsubrl
data16
lods
push
mov
std
js
test
sbb
and
jge
push
out
add
lods
and
aam
gs
jecxz
int3
gs
xchg
je
ret
loope
jo
lea
cmp
loope
out
sub
add
sbb
adc
mov
fsubrl
adc
mov
jg
sub
adc
iret
jne
push
loop
dec
cmp
and
sub
repnz
stc
cmpsl
push
mov
mov
pop
jae,pt
jp
adc
push
or
adc
pushf
imul
xchg
fidivrl
lret
add
jb
add
dec
xchg
out
xchg
das
call
lods
xchg
dec
add
addr16
lcall
popf
jnp
fdivrl
outsl
fldcw
mov
outsl
aas
stos
adc
inc
lds
and
cmp
xchg
js
jno
jmp
dec
fisubs
test
jmp
fisubs
cli
call
insb
stos
lods
fs
push
mov
dec
dec
dec
jnp
loop
fld
inc
jae
jne
sti
push
adc
push
inc
call
lea
xor
pop
mov
pop
out
adc
xorb
call
and
sbb
bound
shlb
mov
adc
inc
inc
aam
adc
ret
push
cmp
xchg
jecxz
aaa
add
sbb
inc
adc
mov
xchg
pop
xchg
pop
cmpl
dec
mov
push
scas
nop
roll
and
and
outsb
lods
xchg
cwtl
fisubs
fadd
sbb
ret
fcmovbe
stos
pop
aaa
and
in
adcb
stc
mov
mov
arpl
xor
mov
flds
mov
cmpl
adc
roll
sub
fwait
fs
out
mov
or
imul
jle
test
pop
mov
xchg
fsts
aam
inc
mov
sahf
popa
add
subl
popl
push
mov
push
jg
aam
jne
jb
cld
loopne
enter
addb
fwait
push
pop
lahf
cmp
fs
push
dec
xor
jae
add
sub
ss
dec
lock
cmp
int3
lods
xchg
icebp
mov
movsb
das
mov
or
inc
xchg
popf
mov
sti
cmp
add
push
mov
or
dec
movsb
out
rcrb
sub
sbb
pusha
xlat
xor
pop
fstp
mov
fdivrp
int3
sbb
mov
add
sbb
dec
sbb
jno
adc
sti
repz
rorb
fwait
in
nop
sub
insl
mov
in
insl
adc
mov
shll
emms
test
cmp
jmp
divl
orb
repz
xchg
dec
xor
fnstenv
jp
jne
jb
lods
inc
je
and
hlt
jle
lret
stc
cmp
icebp
or
push
repz
enter
mov
fadds
pop
es
aas
stc
out
cmpsb
push
xor
lahf
ljmp
inc
pop
imul
arpl
rcll
mov
cmpsl
inc
out
jns
outsb
adc
dec
cmc
xor
in
dec
ljmp
or
fsubs
adc
mov
cltd
cli
jns
jnp
cs
insb
push
int
pop
push
add
sbb
fdivl
clc
cmpsl
adc
jge
shrb
out
sar
cmc
repnz
pop
or
pushf
or
add
add
call
shlb
fs
inc
mov
mov
cs
cmpb
dec
cs
sbb
popa
cwtl
lahf
mov
mov
lds
lock
shll
pop
sub
hlt
mov
int3
sbb
lods
iret
aaa
pop
fsubl
lods
cmc
hlt
adcl
sub
repz
in
mov
push
lods
mov
mov
sub
mov
shlb
mov
or
fs
sbb
in
adc
fs
ret
jo
scas
rcll
inc
sub
std
pop
pop
push
push
jl
cltd
mov
xchg
add
adc
sbb
aam
mov
notb
stos
pop
pop
repnz
test
adc
repz
xchg
jle
lahf
xchg
aam
scas
pop
sub
stc
mov
out
aad
jecxz
mov
cli
mov
icebp
mov
mov
push
hlt
sbb
and
sbb
add
mov
js
push
pop
and
jg
xor
sbb
mov
or
mov
dec
stos
push
loopne
rorb
in
jns
repnz
out
test
in
mov
std
aam
jecxz,pt
sub
sti
jle
addr16
mov
push
push
in
rcrb
or
mov
sub
clc
push
xchg
cmp
idivl
lock
mov
mov
gs
movsb
cmp
xor
jb
aad
movsl
or
fldenv
sbb
mov
sahf
js
incb
xchg
inc
hlt
and
popa
les
fnsave
jne
out
popf
jmp
xchg
sub
add
ljmp
xchg
outsl
shl
xchg
dec
mul
aam
out
jb
push
pop
stos
or
or
das
arpl
jp
bound
aaa
adc
add
add
daa
fwait
sbb
pushf
orl
jae
or
xor
cmpb
cli
sub
mov
lock
and
pop
cmc
cmp
pop
push
sahf
clc
jg
push
enter
mov
test
in
mov
mov
mov
daa
sbb
decl
xor
pop
mov
dec
lret
dec
jp
rcrb
pop
lret
mov
add
and
pushf
add
sbb
cltd
dec
pusha
and
and
jo
jb
out
xchg
imul
rclb
and
push
into
mov
jns
idiv
ss
pop
sub
jbe
ret
pop
dec
sbb
movsb
addr16
sbb
push
cmp
add
int3
jo
inc
xchg
mov
int3
xlat
stos
pushf
jae
cmp
std
je
out
mov
or
mov
aam
lahf
xor
pop
fstpt
sbb
inc
cmp
pop
dec
pop
fcomip
inc
popf
out
inc
mov
lock
in
mov
ljmp
ret
rcll
js
inc
rcrl
pop
jg
and
or
pop
scas
aas
js
adc
scas
push
jae
dec
push
test
and
xor
int
in
sbb
mov
test
jae
mov
fwait
scas
cmp
loope
stc
gs
inc
jl
mov
scas
inc
push
and
or
bound
out
pop
sub
mov
mov
cmp
pop
mov
cmp
inc
xchg
xchg
sub
adc
dec
daa
outsb
cld
pop
jle,pt
xor
inc
cli
rcll
dec
mov
jne
stos
test
jmp
idiv
mov
cwtl
cmp
sti
and
ret
imul
push
mov
pusha
xor
xor
mov
out
push
push
fmuls
loope
das
cmpsb
loop
xor
bnd
or
cld
daa
aad
insl
mov
stos
into
pop
rcll
or
cmp
icebp
push
aad
mov
jmp
mov
in
loop
inc
sbb
jp
jae
dec
or
cld
inc
add
jmp
loopne
mov
push
jbe
incl
or
jne
cmpsl
push
arpl
pop
aaa
mov
jg
or
loop
dec
adc
test
lods
xorl
push
mov
xchg
mov
cmpsb
mov
mov
add
xchg
sarb
test
mov
cmpl
lret
les
dec
adc
pop
and
sar
clc
mov
in
btc
fistps
mov
inc
addr16
loope
push
and
mov
call
std
inc
fists
mulps
shr
pop
repnz
xchg
insl
sti
bound
push
cmc
fidivrl
inc
pop
movsl
xchg
mov
into
jg
testb
push
and
and
leave
cmpsl
jecxz
ds
jg
out
insl
in
sbb
mov
pop
jmp
push
ds
cltd
fimull
xchg
nop
pop
mov
jle
lods
in
subl
test
cmp
loope
cmp
ja
jg
jp
cmpsl
int
dec
xlat
sub
sbb
mov
jo
mov
call
xor
mov
aam
aad
xlat
and
je
orb
xlat
repz
lret
or
loopne
pusha
sub
mov
push
nop
leave
jno
xor
in
mov
es
jecxz
mov
xchg
cmpsb
or
sti
xorl
and
sbb
and
mov
dec
sbb
daa
shlb
inc
inc
cld
pop
int
fs
rorl
push
dec
inc
inc
cwtl
inc
outsb
sahf
or
shll
cwtl
insl
mov
mov
xchg
daa
or
sbb
pop
mov
sahf
repnz
pop
ja
aad
out
insl
js
testb
push
or
outsl
adc
divb
inc
or
push
stos
data16
aaa
leave
nop
mov
xchg
jno
and
out
or
lds
inc
pop
mov
push
pushf
std
push
popf
insl
imul
mov
push
daa
inc
and
adc
addr16
jmp
dec
hlt
orb
pop
bnd
mov
adc
jle
xorl
invd
insb
mov
fadds
jo
sub
push
loope
insl
push
mov
aad
sub
jle
adc
lods
pop
or
insl
andl
add
xorl
ljmp
xchg
jo
mov
leave
inc
mov
or
scas
test
adc
fstps
jge
add
lret
test
int3
sbb
fcmovbe
shll
sub
inc
pop
sub
nop
ljmp
das
jmp
popf
jmp
jecxz
lret
fcomi
sub
lahf
inc
in
jl
jne
mov
mov
aad
addl
and
pushf
sbb
pushf
xchg
int3
jns
ret
inc
out
xchg
clc
ficomps
jno
and
jo
mov
or
cmpsl
jbe
sub
sub
int
xchg
aam
xor
mov
aaa
sahf
imul
scas
js
cmp
stos
jne
iret
cmp
loopne
rol
pop
push
mov
mov
mov
pop
cmp
dec
sbb
or
xor
push
loop
push
mov
loopne
jno
mov
inc
pop
xchg
jns
out
push
push
popf
pop
popf
lahf
mov
insl
mov
or
add
imul
cmp
push
jb
stc
cmpl
sbbl
xor
jecxz
insb
rcrl
pop
push
add
mov
cltd
jno
sbb
fistpll
and
clc
mov
pop
push
arpl
fdivl
and
hlt
pop
mov
mov
sbb
pop
das
xchg
sub
test
adcl
stos
cld
xchg
cmpsb
sub
fimull
push
aaa
sbb
sahf
push
addl
dec
jp
inc
pop
push
add
jg
test
je
imul
data16
lods
sahf
decb
pop
and
insb
sub
or
pusha
in
xchg
push
xor
ljmp
movsb
inc
push
mov
push
xchg
sbb
pop
and
jns
clc
mov
loop
test
or
dec
push
lock
dec
mov
xlat
or
addr16
shl
pop
jge
jecxz
stos
gs
push
mov
xorb
sbb
mov
push
mov
js
push
push
test
das
xor
in
jae
sahf
adc
fimuls
scas
mov
mov
leave
jne
xchg
inc
imul
in
vaddsd
mov
rorb
xlat
aas
lret
cmp
lea
shrl
aas
mov
hlt
sar
xchg
shl
mov
or
shll
aaa
dec
rclb
call
xor
insl
or
and
out
pusha
out
or
loopne
std
outsb
jg
mov
mov
mov
add
sbb
arpl
mov
push
jmp
es
pop
mov
mov
in
cmp
lods
cli
sub
or
pop
mov
and
xchg
pop
inc
jne
dec
adc
add
push
xor
inc
or
jae
lods
notl
aas
pop
mov
int3
rcrl
push
pop
push
dec
dec
popf
je
enter
outsb
fdiv
push
mov
mov
scas
into
mov
cld
lods
icebp
sbb
dec
add
adc
arpl
addr16
sti
xor
lods
xor
pop
push
mov
in
dec
push
or
adc
add
notl
nop
mov
popf
es
dec
jae
popa
cmc
ss
test
adcl
lret
pop
mov
adc
lods
in
repnz
cltd
insl
xchg
ror
imul
loopne
mov
lret
call
dec
rorb
setle
pop
jo
loopne
jecxz
notb
into
mov
popa
add
test
adc
push
pop
push
in
mov
sahf
daa
repnz
rolb
fwait
inc
out
shlb
ljmp
or
out
jae
fistpl
lods
cltd
nop
inc
ret
fcmovbe
sub
movsb
sahf
add
push
cmp
sbb
arpl
inc
imul
out
hlt
dec
sbb
xor
inc
mov
add
mov
in
cli
inc
add
loopne
jmp
jecxz
test
jae
pusha
cmp
scas
cmp
adc
cmp
mov
jge
or
push
pop
test
aad
xor
jmp
xrelease
aad
movsl
mov
stos
mov
lcall
in
adc
loope
ljmp
iret
and
xchg
sbb
shll
fsubl
jmp
cmc
or
mov
pop
push
push
mov
flds
ficoml
add
jmp
lret
push
gs
stos
jecxz
enter
adc
fwait
and
cs
dec
push
jb
adc
ss
xlat
fucomp
xor
or
adc
inc
test
push
insl
jno
add
stos
mov
fucomip
adc
mov
leave
aas
mov
sub
mov
sbb
rclb
xor
outsb
cltd
lods
jp
push
jno
sbb
cld
sub
rcr
inc
popa
mov
jns
setne
fdivl
ret
add
pop
sub
cli
mov
jnp
les
mov
popa
add
pop
ret
ret
lods
push
rcrl
jp
adc
mov
cmp
inc
sahf
out
xor
pusha
mov
movsb
aam
fisttps
aam
mov
mov
rorl
orl
in
jnp
inc
lret
push
outsl
cmp
rorb
rol
cmp
dec
mov
sbb
pop
std
stos
loop
jns
fsub
jp
xchg
testl
mov
mov
or
jecxz
sbb
dec
xor
add
imul
pop
push
add
jb
or
mov
out
jmp
fdivrl
pushf
dec
arpl
pushf
cmp
xchg
xlat
inc
repz
aaa
xchg
or
icebp
sub
add
cmpsl
ljmp
sub
out
lods
mov
xor
loopne
test
popf
outsb
cmp
mov
cmpsl
adc
xor
dec
cmp
cmpsl
inc
jne
pop
fwait
adc
sahf
pop
mov
mov
ret
faddp
xor
sbb
in
imul
pop
inc
cmp
xor
into
pop
xorl
inc
out
inc
mov
mov
popf
jmp
mov
lcall
bound
pop
jbe
jbe
loope
inc
mov
pop
inc
push
fwait
jbe
sahf
cmp
xchg
lret
mov
mov
enter
pop
mov
dec
cltd
mov
addr16
jb
jmp
mov
outsb
cmp
and
cmp
enter
ret
movsb
jno
nop
sub
push
dec
test
cld
ret
pop
and
mov
leave
jno
imul
fnsave
xor
or
orl
xchg
sahf
stos
xchg
pop
push
mov
push
add
xlat
fs
mov
inc
pop
push
iret
pop
pop
lock
stos
sub
ss
mov
call
push
jae
add
sbb
jmp
mov
xchg
leave
jbe
movsb
loope
in
sbb
cmpsl
in
insl
dec
xor
rolb
in
xchg
inc
cli
adc
mov
hlt
mov
or
xchg
or
in
mov
xlat
sub
ja
test
mov
addl
push
jae
roll
test
test
rclb
into
xchg
pop
jg
into
cmpsb
out
cmp
clc
leave
mov
mov
ss
adc
imul
loope
mov
push
pop
push
lcall
xor
or
and
and
popf
pop
xchg
cmp
xor
fldcw
in
test
mov
xchg
mov
sbb
xor
mov
iret
movsb
cwtl
jl
pop
mov
sbb
test
cmp
movsl
lcall
fcompl
push
stos
sub
push
xor
jge
pop
repz
or
bound
sub
mov
movsb
mov
cmpl
mov
std
out
movsb
jge
jae
sbb
cmp
mov
sbb
mov
int
push
sbb
xor
cmpsl
repz
or
inc
out
nop
out
cmp
dec
inc
cmc
mov
add
xor
lods
mov
lea
or
xchg
or
idivb
cmp
sarb
pop
inc
inc
dec
xor
lea
loope
jg
andl
aam
inc
inc
loope
int
pop
movsl
fisttpll
in
cli
test
dec
jecxz
jns
jb
dec
inc
and
cmp
pushf
popa
scas
iret
jo
lea
pop
inc
fsubl
popa
push
pop
dec
pop
movsb
xchg
or
or
jne
imul
arpl
mov
int
outsb
ret
scas
mov
stos
clc
inc
xchg
pop
std
jo
and
mov
adc
and
xor
inc
popa
icebp
pop
icebp
outsl
testb
out
fwait
andb
repnz
sub
popf
jmp
mov
outsb
pop
in
xchg
sahf
add
sub
add
mov
das
frstor
inc
jl
imul
popa
adc
out
cmp
xchg
fistpll
mov
adc
lcall
lahf
push
mov
shr
xor
lcall
lods
aaa
pop
mov
dec
jae
popa
scas
std
leave
testl
push
jp
push
cmp
pop
mov
ljmp
loop
xchg
scas
push
addr16
dec
mov
lcall
adcb
adc
fimull
lock
icebp
pop
stc
push
into
incb
lea
fimuls
pusha
test
mov
sbb
js
scas
dec
out
imull
fdivl
out
xor
ja
sti
mov
call
mov
mov
mov
push
jecxz
scas
mov
scas
add
lock
xchg
sub
mov
cmc
push
loop
jl
mov
sbb
sbb
loop
xor
inc
cwtl
test
sub
pop
shrb
sbb
jns
xchg
mov
cmp
lods
sbb
sbb
pop
jle
jno
sub
sub
and
cmp
outsb
popf
mov
nop
mov
xchg
pop
scas
aam
fildl
xchg
mov
test
aad
clc
jle
push
lds
imul
xchg
xchg
scas
cmp
lret
shl
push
gs
cmc
sbbl
shll
dec
xor
mulb
xchg
sub
pushf
mov
ds
ret
lret
jb
pop
adc
sbb
ljmp
push
rcrl
jp
pop
inc
cmp
adc
adc
scas
mov
and
adc
mov
dec
adcb
push
push
sbb
out
in
add
int3
pop
call
sbb
dec
rolb
and
rolb
pop
cltd
loope
addr16
divl
out
ficoml
je
dec
test
cli
nop
lods
les
sub
ds
arpl
pusha
stc
or
cltd
mov
lods
or
and
hlt
subb
xchg
data16
ret
xor
adcl
sub
jmp
push
pop
xor
cmp
xlat
es
inc
mov
xchg
cmp
in
add
xor
push
or
in
les
repz
loopne
int
cltd
inc
outsl
xor
pop
test
adc
iret
out
cmp
and
jl
filds
push
popa
mov
adc
mov
and
push
bound
mov
cmp
or
ljmp
sbb
mov
mov
xchg
popf
lahf
hlt
in
xor
dec
inc
sarb
outsl
push
jmp
in
cmp
pop
sbb
outsb
aam
jg
xor
mov
inc
das
push
loop
or
xor
jmp
std
in
xlat
arpl
lods
fisubs
add
jnp
movsl
push
lahf
orb
aad
cmp
loop
mov
out
test
mov
test
movsl
jl
mov
stos
fnstsw
mov
xor
inc
mov
xacquire
pop
gs
push
cmp
arpl
and
jecxz
dec
jb
push
or
add
mov
in
jg
call
mov
jne
adc
es
je
fists
sbb
jb
xchg
movsl
sahf
loope
mov
ss
test
pop
add
hlt
outsb
aad
jnp
xchg
mov
sbb
xchg
test
mov
adc
sbb
mov
dec
push
or
xor
int
sbb
cmpsb
sti
mov
cmp
or
jae
popf
in
aad
sub
out
in
fdivp
pop
ret
sub
decl
xor
adc
dec
pop
pop
rcr
xchg
cmp
mov
xchg
das
push
daa
push
jns
cmpl
pop
or
jp
add
cmpsb
pop
sbb
mov
add
test
xchg
mov
sub
leave
add
jmp
jp
clc
adc
push
xchg
mov
jge
lea
or
cmpsb
sbb
or
push
out
inc
mov
sbb
and
iret
dec
mov
inc
push
push
lret
imul
xchg
mov
jnp
pop
fwait
mov
or
idivl
aaa
inc
jnp
imul
mov
and
inc
inc
cmp
mov
pop
cmp
movb
xor
nop
jp
paddw
into
adc
mov
leave
pop
scas
lahf
add
std
insl
mov
mov
mov
lea
or
in
inc
jl
push
mov
mov
dec
insl
push
je
cmc
outsb
and
in
scas
push
repz
rcr
xor
test
jb
rorl
inc
push
dec
arpl
push
jb
test
sti
mov
popf
xor
add
cmp
addr16
xor
mov
jns
std
nop
push
int3
icebp
mov
cmc
mov
shlb
cwtl
mov
ljmp
jne
icebp
bound
shl
jp
sub
insb
sub
daa
cmp
lret
sbb
movsb
in
fildl
xchg
lods
es
fstpt
int3
dec
imul
push
pop
insl
cmp
shrb
lock
or
movsl
cmc
sbb
push
sub
lock
inc
fmul
subb
dec
icebp
test
and
popa
pop
xchg
push
dec
jl
in
mov
in
cmp
sub
stos
mov
cmp
pop
fisubrl
iret
jnp
loope
daa
popf
jne
jbe
ret
cli
sub
out
xlat
mov
jecxz
adcl
sub
mov
sti
out
and
outsl
scas
loope
jnp
sbb
mov
mov
push
sbb
rcll
sbb
pop
mull
jbe
adc
mov
andb
sbb
mov
jg
cmp
cmp
call
sub
jle
sub
jne
push
pop
ret
xor
inc
pop
jnp
cmpl
stos
add
fists
adc
aam
pusha
aaa
fwait
pop
and
pop
aam
scas
repz
adc
leave
scas
pop
sbbb
outsb
lods
int
mov
sub
cmpsb
lea
fs
and
repz
adc
cmpsl
xor
inc
data16
adc
xchg
mov
lcall
inc
adc
mov
cld
out
jp
or
cmp
or
outsb
icebp
pushf
push
repz
push
inc
test
sub
fdivs
daa
dec
cmc
sbbl
mov
stc
xchg
bound
adc
cmc
arpl
movsl
and
sub
rolb
out
loop
mov
cmp
adc
sub
sub
jb
stos
in
add
push
shl
loopne
addr16
pop
mov
jl
jbe
xor
dec
dec
push
test
jmp
aad
inc
mov
call
dec
imul
pop
jge
sbb
or
jecxz
cmp
dec
mov
and
fwait
sbb
adc
lahf
mov
data16
mov
sub
xchg
pop
cmp
mov
lods
or
stos
jg
mov
js
sub
aad
js
cmc
mov
int3
pop
xor
add
cmp
fcmovnbe
and
pop
mov
pop
pop
sti
scas
rclb
add
inc
test
mov
les
loop
xorb
leave
xor
add
or
test
test
cmp
fsubrp
shrl
ljmp
jl
cs
in
aaa
sbb
mov
sbb
std
ror
pop
cmp
xchg
cltd
push
rorb
xchg
xor
test
shlb
es
push
pusha
mulb
or
xchg
insb
cmpsl
arpl
adc
rcll
cs
movsw
pop
xchg
stos
shll
and
popf
leave
popf
inc
sub
xorl
or
out
cwtl
mov
sub
fwait
sub
movsb
mov
jae
and
cltd
add
out
pop
xchg
add
add
mov
jo
test
leave
mull
dec
fsubs
insl
xchg
add
and
es
aam
js
je
mov
or
inc
xor
das
xchg
cwtl
sbb
sub
push
rorl
mov
pop
adc
movsb
push
ficoml
cmpl
xchg
aam
nop
stos
xor
mov
sti
clc
in
mov
add
sti
inc
and
or
loopne
adc
mov
cmpsl
or
nop
push
jo
shlb
ljmp
popf
jb
imul
inc
out
push
std
or
jg
adc
dec
dec
or
insl
aas
stos
cld
inc
ret
adc
mov
fisttps
test
cmovge
cmp
sbb
push
sub
lahf
pop
outsl
pusha
dec
jbe
nop
out
inc
sub
dec
or
jle
mov
js
outsb
mov
int
xor
ficompl
dec
xor
push
sarl
call
sub
sbb
pop
push
je
xor
xor
cmp
sub
imul
mov
addr16
ret
pop
sti
xor
push
mov
clc
arpl
cmp
cmc
fildll
repnz
inc
adc
ret
outsl
das
rcrb
mov
add
lahf
int3
mov
push
lock
int3
dec
je
mov
idiv
outsl
fbld
fdivr
loope
aad
jmp
mov
dec
js
lea
dec
xor
push
outsb
stos
jle
push
pushf
fsubrp
dec
lcall
inc
aam
pop
sbb
fisubs
cs
cs
cmp
fcoml
les
dec
rcr
pop
sub
rcrl
jns
cmc
movsb
mov
out
push
mov
fs
and
mov
fdivr
cmpsl
adc
idivb
xor
in
push
jb
add
xor
pop
and
mov
push
shll
mov
imul
push
retw
pop
or
pop
aas
mov
in
daa
mov
cli
cmc
xor
cld
ds
sahf
mov
test
mov
cli
je
in
js
in
lahf
stc
lcall
mov
lds
je
test
lcall
call
jle
lahf
push
jns
sbb
in
mulb
sbb
xchg
xor
pop
loop
cltd
scas
pop
addr16
out
lret
mov
or
es
lods
jmp
fimuls
jmp
push
std
nop
loopne
pop
data16
or
pop
in
movups
xorb
insl
outsl
push
mov
ljmp
roll
lret
inc
add
add
push
pop
repnz
leave
sarb
fwait
push
icebp
aaa
jl
es
imul
mov
insb
shll
mov
mov
orb
xchg
cmc
clc
jp
jae
xor
or
imul
add
mov
out
loop
dec
mov
xchg
xor
add
sbb
lods
mov
pop
mov
test
test
outsb
push
push
test
dec
test
add
adc
mov
int3
in
gs
mov
hlt
loope
mov
lds
xor
pop
sbbl
loopne
mov
mov
rolb
xchg
sub
or
xchg
pop
jp
cmp
sub
push
or
test
pop
loop
movb
adc
stos
and
test
xlat
push
mov
adc
mov
repz
pop
out
xor
je
icebp
or
jl
aam
inc
fs
dec
daa
cmp
fistl
jno
or
cmp
mov
gs
mov
lock
out
aad
push
addr16
cmp
outsl
xchg
ret
push
in
cmp
mov
pop
xlat
or
in
pusha
in
sbb
loopne
outsb
jp
sub
mov
jns
inc
inc
jne
pop
roll
pop
adc
jl
push
std
pop
push
pop
mov
pop
fs
fbstp
cs
push
hlt
xchg
insl
or
and
cli
xchg
xchg
xlat
aas
out
mov
out
or
or
cmp
inc
mov
dec
nop
mov
pop
rorl
mov
mov
mov
jle
xor
inc
mov
adc
test
rolb
sbb
loop
cmpsb
adc
clc
arpl
incb
or
sub
pop
stos
ss
lock
xor
mov
les
shl
pop
cli
jnp
sti
cmp
cs
mov
mov
std
xor
popf
rorb
lods
les
lret
inc
mov
hlt
mov
mov
sub
cmpsl
shr
or
aas
cmp
push
jo
cltd
xor
dec
popa
push
jnp
jl
xchg
mov
xchg
ljmp
and
out
jb
xor
daa
fmuls
es
jecxz
aas
mov
aas
mov
mov
mov
and
pushf
add
add
cltd
jno
aas
jno
or
push
add
jge
imul
lea
push
adc
adcb
enter
sub
add
test
stc
dec
or
insb
xor
xor
enter
adc
adc
mov
out
mov
sbb
mov
cmpl
adc
das
lahf
outsb
cmc
jle
sub
repnz
mov
fnstsw
pop
add
jns
repz
test
daa
lea
movsl
iret
mov
pop
jb
stos
add
loop
ds
sub
fmull
pop
mov
mov
mov
in
repnz
xor
ds
ja
inc
sbb
int
repz
xchg
jne
xor
in
sti
xchg
xor
test
jl
into
mov
sbb
and
into
mov
add
lods
idivl
dec
xchg
pop
fwait
hlt
mov
push
ds
cmpsl
lods
imul
aam
mov
or
fsubrs
push
xor
pop
sar
cltd
mov
pop
mov
daa
ficomps
cs
cld
mov
xchg
icebp
divl
addl
stos
je
or
dec
add
subl
inc
arpl
sub
repnz
lods
mov
inc
add
and
cmp
xor
adc
fimuls
test
sub
mov
mov
inc
aad
and
enter
xchg
and
rcr
hlt
mov
inc
aam
sub
nop
iret
leave
aam
inc
jp
xchg
adc
and
in
cmp
push
outsl
int
or
xchg
std
ss
inc
sub
dec
jmp
pop
cmp
sub
and
and
decl
or
fucom
stos
mull
ss
lea
push
daa
inc
cmpsl
xchg
aad
in
in
hlt
lods
inc
cmp
inc
xchg
jbe
pop
repnz
push
inc
divb
enter
push
inc
mov
daa
xchg
mov
shl
lock
popa
jns
mov
loopne
fcomi
insb
ja
fsubs
push
push
fidivrs
jg
fsubrl
jb
adc
adc
inc
xchg
pop
push
sub
out
mov
inc
js
xchg
pop
hlt
mov
pop
loopne
adc
jno
inc
jg
or
push
sub
jl
xchg
inc
rolb
cmp
rclb
dec
push
xor
mov
push
add
mov
mov
lret
xor
inc
and
aas
cld
mov
push
xor
sbb
xor
xchg
or
cltd
or
fldt
inc
jns
fmul
notl
jp
ret
cmpsb
xchg
pop
cltd
sbb
push
frstor
cmpsb
rorb
inc
loopne
sub
cltd
sbb
gs
mov
lock
or
repnz
cwtl
push
sub
inc
mov
inc
std
test
outsl
or
mov
shrb
push
cwtl
repnz
pop
mov
nop
shll
imul
popf
fcomps
push
add
pop
sub
cmp
test
adc
repnz
mov
shl
addr16
and
push
push
es
pop
inc
cmp
mov
xchg
nop
dec
out
repnz
aaa
inc
pop
xchg
add
daa
mov
pop
inc
sahf
xchg
frstor
cs
ss
xor
push
sub
sub
xchg
fs
and
pop
push
and
pop
daa
jnp
push
jno
push
fcomps
xchg
cs
pop
scas
iret
ljmp
xchg
pop
inc
fcoml
and
sub
arpl
sub
adc
loope
loop
imul
mov
pop
or
adc
testl
cmp
sub
dec
inc
iret
and
movsb
jge
addb
fbstp
pop
mov
sub
call
cmp
imul
inc
adc
mov
jb
flds
jae
xchg
mov
fisubrl
sbb
enter
mov
inc
add
push
cltd
adc
sub
lods
les
adc
mov
cld
enter
ja
into
test
sub
fldt
sub
xor
imul
dec
loopne
sbb
cmc
inc
xchg
jp
pop
test
mov
ds
jmp
cwtl
aad
ljmp
sti
cmc
push
stos
sub
push
enter
ret
push
mov
insl
xchg
add
jle
adc
scas
fstpl
out
loop
xchg
enter
pushf
push
pop
cmp
mov
cs
addr16
jnp
dec
sahf
inc
shrl
push
call
xor
or
pop
cmp
fiadds
fcompl
das
out
mov
cmp
inc
mov
xlat
shr
sub
fisttpll
fldenv
or
sub
rcr
mov
adc
pop
fs
scas
add
lods
test
sarb
adc
arpl
push
add
xor
fidivrl
iret
es
cltd
addr16
std
dec
inc
jo
mov
cmpsl
xor
pop
fldcw
popa
int
ss
fdivrs
add
cmp
adc
inc
pop
enter
inc
insb
add
sbb
push
xchg
lea
pop
pop
push
or
in
es
jnp
movsl
lods
les
bswap
ja
cld
jnp
in
mov
mov
shlb
mov
repnz
inc
sahf
and
loopne
mov
in
fsincos
xchg
lret
insb
fiadds
xchg
out
cwtl
or
jbe
int3
js
pop
shrl
xlat
scas
scas
lret
adc
out
dec
and
popl
bound
movsb
in
mov
pop
xor
loope
inc
mov
jecxz
add
sbb
pop
cmc
lock
and
cmpsl
pop
dec
fstl
mov
cmc
inc
pop
dec
dec
notl
mov
push
les
daa
insb
fsubrs
bnd
pop
xchg
inc
into
adc
test
mov
addr16
rcrb
jge
xchg
rcrb
sub
shll
adc
push
push
jns
stc
cmp
inc
shl
fisttpl
dec
xlat
pop
out
call
stos
mov
adc
jno
xor
loopne
push
out
mov
jmp
icebp
dec
lret
stc
das
inc
mov
xor
insb
sub
adc
mov
push
xor
sub
loopne
mov
lcall
test
mov
push
ret
pop
sbb
in
push
pop
or
mov
int
jbe
mov
lret
inc
dec
fstps
xchg
jno
out
sub
ret
adc
mov
mov
push
mov
cmp
adc
push
sbb
or
std
arpl
scas
data16
out
clc
das
pushf
push
scas
xor
emms
ret
mov
mov
mov
push
repz
push
push
xchg
mov
lds
xchg
ds
mov
mov
or
aas
scas
sbbb
std
sbb
ljmp
pop
sub
fdivl
jp
sbb
test
loope
jmp
cmp
cmp
lods
pop
xchg
adc
adc
lret
mov
and
xchg
xchg
cmp
inc
adc
pop
dec
cmp
pop
jg
jns
sub
lock
or
and
ja
lds
dec
and
leave
sbb
cmp
jle
sub
and
and
xlat
stos
rorb
or
adc
inc
inc
adcl
pushf
std
stos
in
mov
notl
xchg
sbbl
jg
popa
stos
loopne
xchg
enter
out
testl
push
inc
pushf
dec
into
inc
dec
mov
mov
stos
loop
or
pop
data16
dec
cli
jle
ret
daa
in
rorb
jmp
cmp
push
inc
mov
stos
sti
in
scas
nop
push
sarl
inc
sbb
mov
fst
ret
mov
add
and
add
xchg
push
add
dec
shlb
subb
mov
adc
dec
mov
cmp
hlt
or
pop
xchg
mov
clc
add
rorb
aas
shlb
cli
sbb
lods
mov
push
rcrl
in
cwtl
shlb
and
out
dec
ds
xor
cmp
cmpsl
and
iret
aas
mov
fiaddl
cmc
ds
and
push
lahf
cmpl
cwtl
imul
daa
loop
cwtl
inc
aam
or
test
adcb
xchg
push
movsb
rclb
mov
xchg
insl
arpl
adc
leave
das
pusha
xchg
adc
push
fsubrl
and
mov
enter
push
or
push
loopne
call
fcmovnbe
rcrl
dec
pop
sub
mov
jbe
or
test
daa
mov
pop
out
and
enter
add
or
jns
stc
fldcw
xor
push
xchg
insb
aaa
and
inc
in
ds
stc
test
mov
out
mov
subl
mov
pop
sub
test
mov
mov
fldl
lahf
iret
xchg
push
push
jae
scas
test
jle
stos
push
in
cmp
sub
enter
or
cltd
dec
mov
shr
ds
add
inc
sti
add
mov
pop
mov
fisttpll
xor
adc
movsl
fs
fimuls
xchg
scas
cltd
jecxz
push
psadbw
test
xor
jle
orb
pop
and
js
jnp
aam
notl
xlat
or
inc
xchg
test
bnd
outsl
mov
filds
cltd
fisttpll
repnz
aad
out
xchg
dec
xor
adc
andl
dec
jg
sarb
iret
sub
xchg
mov
repnz
pop
in
mov
sub
mov
sbb
mov
or
mov
clc
popf
pop
js
adc
stos
clc
shlb
mov
out
cmp
stos
push
xchg
addr16
fidivs
dec
in
inc
sub
loopne
inc
movsb
or
xchg
lcall
shll
mov
cmp
loope
mov
pop
sub
lret
mov
nop
mov
es
add
cmp
loope
fnstsw
xchg
popa
dec
inc
cmp
loopne
ljmp
xor
mov
out
jns
xor
add
ds
xchg
or
aas
inc
jbe
loop
aas
fdivr
test
mov
xchg
in
xchg
aad
std
movsl
je
ret
or
and
fldenv
push
test
loop
shll
push
mov
jbe
mov
mov
orb
orb
lcall
add
movsb
add
lock
gs
bndldx
fsubs
dec
sub
loop
sub
push
std
test
orb
mov
jb,pt
jo
pop
int
sbb
hlt
push
test
jo
shlb
imul
pop
mov
cmp
repz
or
mov
popf
mov
cmpb
sbb
push
mov
dec
movsl
insb
push
int
inc
mov
push
fs
ljmp
sub
dec
pop
call
sti
xchg
test
pop
pop
bound
in
fcompl
iret
aam
imul
fsubrl
inc
xchg
push
movsb
shll
test
or
jmp
loop
and
mov
ret
cmp
or
loopne
cmp
xor
std
pop
bound
les
loop
test
dec
mov
out
aam
leave
jns
out
fsubrs
lcall
push
popa
ds
outsb
push
mov
adc
xor
sub
pop
hlt
jb
add
mov
pop
jae
or
pop
pop
stos
push
fnstcw
and
inc
sub
movsb
out
push
jg
mov
lods
sub
bound
or
out
adc
adc
test
out
aam
adc
jns
lods
mov
cmpsl
xchg
leave
xlat
dec
jmp
jne
ret
scas
popf
or
mov
fwait
cmpsb
jge
cltd
mov
lret
xchg
test
sub
cltd
mov
imul
sbb
cli
fstps
mov
or
movsb
popf
and
mov
movsb
rorb
loope
nopl
cmp
test
or
stos
sub
cmp
jmp
es
mov
int3
mov
pop
test
mov
jp
or
adc
ljmp
in
mov
loope
arpl
and
jno
add
push
sub
cmp
popa
fdivr
mov
xchg
test
lods
int
push
xor
pop
and
test
mov
insl
movsb
shrl
sub
test
pop
pop
jg
mov
pop
sbb
adc
dec
mov
mov
or
loop
and
je
es
cmp
adc
loope
notb
sbb
sarl
fs
mov
pop
jle
add
fs
test
icebp
mov
sub
push
pcmpeqb
cmp
cmc
mov
inc
and
sub
dec
stos
push
and
push
das
pusha
aad
aaa
faddl
jbe
imul
shlb
mov
mov
push
lahf
gs
lea
in
pop
or
daa
xor
xchg
mov
cmp
pop
call
aaa
arpl
mov
jg
xor
insl
or
jno
aas
lcall
out
sub
fidivl
das
ret
testl
mov
dec
enter
xchg
imul
outsl
cmp
imul
pop
lds
jno
xchg
adc
xchg
insb
mov
xchg
gs
call
int3
dec
icebp
cmp
mov
inc
jbe
and
pop
sub
jbe
mov
enter
arpl
mov
hlt
lret
stos
mov
cmpb
inc
push
push
xchg
inc
pop
pop
loopne
xchg
pop
cmp
or
dec
arpl
out
add
pop
das
xlat
mov
rorl
js
mov
dec
pop
jb
pop
push
mov
or
fldt
lcall
push
ja
xor
push
fisttpll
mov
leave
push
fsub
pop
jle
rclb
and
and
pushf
dec
xchg
push
adc
adc
and
pop
sbb
push
mov
jae
cmc
sbb
dec
mov
jmp
mov
and
inc
mov
lahf
xchg
mov
cmp
jecxz
fstpt
out
into
je
das
stos
iret
jnp
lcall
xchg
mov
inc
lret
cmp
cwtl
sbb
cmp
jl
cmpsb
cmpsb
add
push
in
das
or
push
or
sub
sub
sbb
das
pop
incl
inc
movsb
mov
std
dec
sbb
cwtl
nop
lock
loope
adc
cltd
int
adc
cmp
push
iret
scas
popa
mov
insb
fdecstp
push
or
push
sar
shrl
and
mov
mov
fsts
add
iret
lret
add
jb
jbe
sub
mov
sbb
mov
push
insl
aaa
jp
les
cmp
xchg
sbb
mov
mov
mov
pop
mov
mov
inc
hlt
mov
xchg
pop
enter
xor
rol
lea
js
mov
cmp
jp
hlt
pop
sysret
lret
fcomps
jae
rcll
popf
ret
jp
inc
or
push
sbb
sti
mov
aam
leave
sahf
scas
adc
roll
lahf
add
xor
sub
loopne
test
loopne
fnstenv
int3
push
cmpsb
cs
cmpsb
mov
sahf
dec
cmp
xchg
pop
pop
pop
xchg
jo
sub
je
nop
pop
mov
xchg
std
and
imul
call
insb
jb
sbb
imul
lahf
mov
dec
in
lcall
pop
test
cld
and
inc
dec
pop
cli
xchg
or
cli
sub
popf
aad
push
pop
push
lea
mov
dec
testl
pop
xchg
and
adc
and
dec
cmp
sbb
dec
fldenv
dec
lock
das
mov
clc
jge
and
dec
and
xchg
mov
int
pop
test
in
mov
lret
lods
xor
icebp
xchg
addr16
inc
shlb
aad
into
inc
mov
dec
cmp
mov
dec
insb
icebp
call
mov
jne
orl
pop
test
shlb
sub
jo
dec
sbb
or
or
add
mov
flds
adcb
push
popf
stc
sbb
pop
jmp
cmpsb
and
adc
push
adc
jb
push
xor
into
pop
repnz
and
mov
pop
mov
loopne
push
test
pop
pop
push
mov
hlt
adc
pop
sub
inc
insl
pushf
push
in
fisubl
mov
mov
divl
mov
pop
outsb
cwtl
fwait
and
mov
cmp
pop
and
xchg
dec
cltd
ss
fstpl
sub
call
andb
lret
enter
shlb
jmp
jmp
arpl
xchg
xorb
dec
dec
in
jae
sbb
pop
pop
std
mov
test
jmp
mov
xchg
stos
arpl
jle
cmc
inc
mov
mov
popa
shlb
adc
mov
mov
movsb
xchg
jecxz
mov
ja
pushf
sbb
outsl
jb
jecxz
js
movsl
push
mov
xchg
cmc
mov
pop
jmp
fdivl
pop
or
xor
mov
outsl
inc
and
adc
xchg
stos
inc
enter
popa
push
jg
stos
movsb
jo
sub
addb
inc
bound
sub
jns
sti
js
pop
into
fs
add
mov
cld
lods
pop
stos
lds
fdivrs
add
add
adc
mov
shlb
xor
jmp
ret
or
gs
test
dec
lock
jns
aam
cwtl
fstl
mov
or
pop
jmp
push
lcall
stos
rcl
and
out
or
xchg
or
nop
adc
incl
and
xchg
popa
imul
or
cmp
shrb
adc
out
stos
mov
das
test
aad
gs
fcoms
xlat
aam
outsb
jmp
cs
push
jl
sbb
pop
imul
in
push
popa
mov
aad
or
lret
imul
aas
mov
xor
shlb
jae
push
aaa
inc
push
pop
xor
fcoml
jns
xor
fwait
mov
stos
mov
inc
mov
dec
jo
push
mov
scas
fcoml
fmull
mov
repz
int
mov
hlt
shrd
cli
sub
loop
pop
cmp
cli
rol
inc
sarl
and
repz
aad
fsts
ljmp
and
cmp
cwtl
out
lods
mov
fcom
xor
out
hlt
jecxz
dec
out
jl
dec
xchg
test
insl
gs
mov
jbe
mov
mov
notl
push
jge
les
fnstsw
mov
push
fdivr
mov
push
shlb
inc
addb
fmul
mov
nop
inc
rcll
nop
mov
fwait
popf
push
popa
xchg
jae
sub
mov
jp
push
idivb
or
cld
pusha
mov
in
jg
lods
sti
mov
add
pop
aas
push
xor
mov
cli
adc
adc
mov
xor
ljmp
andb
cmpsl
jg
lods
lret
arpl
fnstcw
movsb
pop
xorl
flds
rclb
push
dec
stos
ja
cmpsb
popf
mov
cmpl
inc
mov
lret
mulb
aam
sbb
std
rcrl
pop
push
pop
or
mov
dec
or
sub
pushf
inc
or
jmp
pushf
out
jp
stos
fldl2e
clc
shll
inc
push
idivb
xor
leave
aaa
mov
lret
arpl
testb
or
inc
and
pop
into
jmp
lret
adc
icebp
rcl
sti
mov
repnz
ds
outsb
xlat
add
lock
fnstcw
test
push
movsb
sub
push
popa
mov
stos
push
int3
cmp
das
ss
or
pop
pop
js
add
out
jle
jb
fildl
jbe
sub
fwait
jbe
cli
insb
dec
pop
lods
lods
mov
jecxz
lods
sbb
push
jle
enter
mov
or
xor
sub
fstpl
xchg
aam
mov
shl
rcrl
gs
loop
and
mov
aas
and
adc
sub
xchg
push
call
repnz
jl
int
mov
jp
call
mov
mov
inc
mov
cwtl
js
shl
sbb
mov
jl
loope
mov
or
pushf
jg
push
pop
lret
sub
and
call
and
xor
test
pop
mov
leave
push
lahf
ljmp
jb
jge
add
shlb
push
jle
or
cmc
popf
cmp
push
dec
xchg
jge
cmp
push
jmp
add
jno
pop
adc
iret
mov
jbe
inc
lret
jbe
je
mov
fiadds
or
jb
cmp
cmp
inc
lret
sub
inc
stos
ret
sbb
xor
pop
dec
lea
xchg
das
jg
lahf
adc
pop
insl
pushf
pop
test
out
subl
imul
ds
cld
pusha
lock
repz
aam
or
test
ss
sarb
loop
mov
adc
lahf
out
lcall
rcrl
cmpsb
fwait
daa
mov
clc
dec
and
and
test
push
lret
lods
inc
add
and
sbb
lahf
sub
aas
loopne
rcrb
icebp
lahf
lds
ss
adc
popf
addl
push
jne
ja
not
scas
cmpsl
shll
int
pop
sub
or
pop
jo
push
lcall
inc
out
mov
cmc
fistps
paddd
dec
pushf
adcb
not
shll
xchg
js
dec
fs
stos
mov
test
sub
pop
push
inc
and
jno
mov
dec
adc
adc
ss
movsl
movsl
scas
or
cmpsb
pop
sub
sbb
loope
cmpsl
movsb
int
and
mov
xchg
stos
dec
push
push
int
xor
data16
rcr
aas
gs
push
sahf
xchg
stos
adc
and
push
adc
in
js
jl
pushl
leave
lahf
lret
jecxz
jo
arpl
mov
push
cmp
mov
shlb
addr16
mov
fwait
rcll
push
shl
mov
gs
test
cmp
mov
pop
xchg
mov
iret
inc
std
cmp
push
jecxz
je
mov
mov
push
or
aad
xorb
cld
lods
js
push
dec
or
pusha
jmp
popf
cmp
dec
mov
insl
push
sub
mov
outsl
movb
mov
or
fstl
std
xchg
xchg
fs
adc
sub
pop
push
cld
sbb
and
fisubrl
sbb
aam
clc
popf
sbb
push
sub
add
stos
sub
mov
les
shll
jmp
mov
sub
mov
cmc
mov
cld
lea
mov
add
jns
add
xchg
jns
inc
scas
dec
cmpsb
push
push
shr
nop
pop
loope
jge
push
loopne
sub
icebp
xor
push
dec
xor
sbb
cli
dec
sbb
and
lods
sbbb
cmp
xor
shlb
or
push
jl
mov
fildl
xchg
cmp
mov
out
data16
aam
mov
mov
adcl
xorb
pusha
ret
ret
push
adc
cmp
addr16
or
push
mov
xor
add
jne
idiv
adc
pop
std
ret
mov
out
and
mov
sbb
push
je
dec
iret
sar
cmp
aas
sbb
leave
push
push
mov
cmc
adc
and
jo
loopne
clc
movsl
xchg
les
push
push
add
lahf
ja
cs
sahf
cs
xlat
and
xor
sahf
stc
jl
mov
push
or
dec
or
xor
inc
jge
movsb
cld
cld
in
fistps
cmp
dec
push
cmpsb
or
std
jnp
scas
rorl
adc
pop
sbb
aas
cltd
bound
push
pushf
push
repnz
mov
imull
add
sahf
jo
inc
cmc
inc
xor
subl
add
fsubrs
or
inc
ffreep
inc
test
pop
mov
pop
outsl
jne
addr16
adc
mov
lea
sub
adc
cmp
fisubrl
jo
push
jl
mov
es
or
sbb
ss
xchg
iret
lds
jg
rorl
mov
add
ja
push
loopne
hlt
les
fstpt
xor
repz
dec
test
cs
dec
jmp
lahf
sub
mov
xlat
xchg
lds
cltd
cmpl
movsl
push
les
sbb
lret
enter
mov
mov
push
mov
cmpsb
jb
pop
rclb
ljmp
ret
inc
testb
jp
xchg
test
lahf
pusha
mov
shl
jbe
mov
repnz
jno
aam
out
xchg
inc
imul
jle
popf
push
xchg
sahf
cmp
outsl
icebp
pop
test
dec
push
sahf
add
out
std
add
and
arpl
mov
add
mov
fldl
jb
cli
push
cmp
out
jecxz
mov
adc
lods
loope
rorb
or
dec
sbb
lock
inc
daa
rorb
pop
xor
pop
xchg
mov
mov
add
sbb
pop
stos
jae
leave
stc
jbe
cmp
ret
cmc
or
pop
lds
adc
ja
test
mov
and
pop
xchg
pop
shll
out
push
rcl
mov
jbe
push
xor
data16
shll
mov
outsl
pop
mov
popf
dec
scas
pop
call
sbb
loope
inc
cmp
out
test
or
inc
jecxz
ror
dec
inc
push
and
xor
scas
adc
popa
cmp
insl
outsl
sub
lret
dec
mov
inc
loop
cli
mov
push
inc
add
mul
aam
dec
mov
cmpsb
push
mov
gs
xchg
ret
aam
int
outsl
push
fcmovb
imul
adc
mov
dec
or
xchg
pop
jne
inc
lea
lahf
mov
xchg
adc
lret
inc
cmp
loop
mov
jp
test
imul
and
in
pop
arpl
stos
fildll
sbb
xchg
insl
enter
inc
lods
push
cmp
call
fimull
xor
xlat
sub
inc
icebp
dec
xor
or
lds
xchg
push
jb
lock
and
arpl
aam
push
jg
fidivrl
mov
insl
std
jge
mov
mov
mov
pop
xchg
loopne
xor
jnp
fldenv
mov
jno
cmc
dec
mov
xor
mov
inc
ret
mov
popa
pop
scas
push
addr16
xor
mov
stc
shrb
push
add
jo
gs
mov
fnsave
out
scas
jo
ja
mov
mov
mov
sub
pop
call
dec
xor
jo
or
xchg
xchg
jmp
jp
push
mov
sete
popf
shlb
out
push
fbld
cmc
sets
shrl
add
or
jo
loope
enter
mov
arpl
pop
cltd
push
scas
lea
push
jmp
in
loop
pop
add
jle
pop
jno
dec
jl
test
insb
dec
jo
rorb
inc
xchg
das
imul
cmpsb
push
repz
bound
cmp
adc
mov
insl
xor
push
mov
mov
pop
xorl
mov
rcr
push
lahf
in
jmp
push
daa
pop
popa
sbb
daa
xchg
mov
shlb
cmp
xorb
mov
push
popa
and
mov
cld
cwtl
or
push
or
jno
addr16
icebp
pop
mov
imulb
mov
pop
shrd
mov
jmp
pop
call
popf
xor
xchg
pusha
sub
lods
stos
clc
xchg
jnp
test
or
sub
add
mov
pusha
insl
es
push
mov
cwtl
leave
cmp
xchg
les
imul
divb
rcrb
add
mov
mov
jmp
int3
pushf
mov
repnz
sbb
cli
jbe
jp
add
shrb
mov
stos
insb
sbbl
and
and
dec
stc
mov
rcrb
sbb
xchg
into
sbb
cwtl
in
fmul
xor
adc
sbb
push
add
fwait
movsl
jns
aam
or
fidivrl
les
data16
inc
xchg
xchg
or
cwtl
dec
ljmp
sbbb
mov
insl
cld
mov
fstp
test
adc
push
pop
mov
in
sarb
hlt
arpl
pushl
push
je
repz
pop
jo
inc
mov
pop
je
call
cmp
inc
psraw
sahf
xor
ja
out
lods
cs
mov
adc
mov
and
adc
jne
in
jne
lret
punpcklbw
movsl
pop
dec
aas
dec
xchg
out
dec
stos
mov
lcall
mov
dec
adcl
mov
loop
mov
xor
mov
xor
xor
pop
aad
sbb
fcmove
push
or
mov
imul
in
test
dec
jb
repz
stc
sbb
mov
mov
sub
or
mov
sbb
jl
sub
test
mov
xor
dec
xor
jb
clc
cmp
jno
cs
sbb
jo
loope
aam
xchg
sub
jne
decl
cld
xlat
fsubl
or
dec
fisubs
sbb
sbb
lea
push
fs
mov
fwait
jle
out
jne
sub
jle
aas
push
mov
adc
cmp
lock
lods
paddd
bound
lock
xor
push
ljmp
lock
push
lea
cmp
add
adc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
call
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
mov
push
mov
push
call
movl
jmp
movb
movb
movb
pushl
pop
mov
mov
push
call
mov
push
call
movl
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
mov
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
push
push
push
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
push
mov
push
call
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
call
push
push
push
push
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
push
push
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
push
call
lea
push
call
call
cmpw
je
push
call
push
call
add
jmp
pushl
in
jmp
xor
mov
testb
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
or
or
push
dec
mov
cmpsb
shrl
adc
adc
inc
xchg
cli
repnz
rcrb
adc
dec
xchg
test
push
mov
adc
or
jo
jno
xor
mov
repnz
cmp
pusha
adc
jb
out
push
cmp
mov
ljmp
and
repz
jno
lret
bound
cltd
and
out
mov
out
shlb
rclb
cli
cmp
imul
and
shll
stos
in
fwait
popa
mov
push
es
cmp
mov
mov
ds
bnd
scas
jge
jnp
xor
mov
adc
mov
mov
testb
jp
xor
mov
repnz
jnp
xor
cmpsb
sub
mov
jp
xor
mov
testl
and
sarl
jns
xor
xchg
jnp
jge
jnp
xor
cmpsb
sub
mov
jnp
xor
mov
repnz
jnp
xor
mov
ret
movsb
fnstsw
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
push
sbb
push
ret
mov
imul
mov
mov
cmp
data16
repnz
fwait
inc
inc
pop
les
mov
jnp
cmp
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
jnp
xor
mov
repnz
test
jge
jnp
and
mov
push
push
loop
pop
push
sub
cmp
pop
pop
cmp
cmc
sbb
lret
inc
push
mov
jo
ds
sub
das
sbb
mov
pop
dec
push
out
cmp
mov
unpcklps
pop
movsl
cmpsb
jbe
sbb
ss
mov
dec
stos
sub
jmp
test
push
mov
dec
loopne
xor
push
or
ss
lahf
mov
stc
std
stos
sub
sub
mov
pop
xchg
das
fistps
dec
test
incb
mov
cmc
cld
sbb
out
dec
jl
lea
dec
sub
mov
aad
inc
sbb
aad
outsl
pusha
in
daa
ficoms
sarl
outsl
je
test
shlb
out
and
ret
mov
dec
inc
out
mov
push
loop
cmp
pop
pop
mov
inc
imul
in
sbb
mov
aaa
insw
adc
jne
jle
push
ret
std
insb
insb
sbb
mov
jmp
arpl
xchg
jg
movsl
xchg
xor
gs
cltd
push
xor
lds
int
xchg
fstps
sbb
ret
popfw
and
inc
inc
es
mov
cs
xchg
jb
mov
push
jns
pushf
leave
iret
ja
fisttps
sub
push
cmp
jg
push
mov
lods
adc
shll
push
adc
aaa
bndldx
cmp
lahf
mov
dec
jne
arpl
test
pop
mov
add
jmp
xor
loopne
imul
movl
fildl
iret
cld
xchg
cli
cmc
imul
add
decl
incb
inc
daa
fcmovb
mov
jae
sbb
data16
fldenv
mov
cmc
jle
cmc
inc
pop
pusha
out
je
shll
ja
push
pusha
mov
mov
cli
into
and
test
xchg
std
lret
push
addr16
shlb
test
jmp
loop
mov
pushf
call
test
mov
mov
pushf
mov
add
inc
jle
scas
and
push
cmp
lret
repz
in
dec
in
jecxz
dec
adc
push
iret
in
and
clc
scas
mov
scas
test
add
jl
sub
adc
call
in
fbld
sub
rcll
and
fs
xchg
sbb
xchg
mov
pop
and
push
mov
test
shlb
icebp
mov
xchg
cmpsl
jg
les
mov
mov
loopne
faddl
pop
aaa
out
lahf
inc
popa
sbb
cs
cs
sub
mov
jge
xchg
inc
test
aaa
popf
ret
in
add
sub
arpl
inc
mov
mov
add
adc
sbb
fnstenv
cmpsb
push
aas
jp
adc
lret
dec
push
aas
fldl
add
enter
cmp
inc
orb
sbb
std
jecxz
sub
push
shrb
push
hlt
sahf
push
push
cmp
cmpsb
pop
mov
xchg
push
scas
xor
jae
js
mov
ss
xor
scas
mov
out
push
push
test
mov
sbb
clc
cmp
stos
jge
mov
or
sbb
pop
and
out
jmp
sub
jbe
mov
push
mov
ljmp
push
into
jle
shl
ss
and
into
outsl
pop
inc
ja
imul
jne
pop
jnp
mov
mov
cmp
gs
out
stc
xchg
pushf
cmp
pop
cmp
es
stc
lds
jne
xor
mov
out
pop
sbb
sahf
dec
add
mov
mov
sbb
cmpsb
cmpsb
mov
xor
icebp
sub
fadd
mov
adc
push
push
xlat
into
decb
xchg
fadds
mov
mov
push
das
dec
dec
xchg
mov
xor
cs
mov
sub
cmp
nop
pop
lods
mov
addr16
test
decl
movsb
ljmp
pop
shlb
sbb
xchg
dec
push
cmp
dec
sub
xchg
cmc
mov
mov
dec
test
enter
inc
in
mov
jae
hlt
iret
stos
push
cli
gs
push
arpl
in
cmp
jmp
pop
xor
mov
xor
aas
lcall
int
clc
shrl
sbb
mov
push
xor
or
dec
js
cmp
mov
add
lret
jo
pop
ret
xor
push
and
or
faddl
sub
pop
int
out
jl
bnd
fistl
mov
test
scas
rclb
pop
and
add
pop
sub
mov
push
push
xor
fwait
stos
push
aam
loope
stc
enter
dec
scas
xor
lret
int
xchg
pop
sbb
mov
xchg
xor
ds
dec
xchg
push
repnz
ds
or
cmp
movsl
lret
mov
jne
out
xor
cmpb
jle
inc
lcall
out
lret
cltd
mov
dec
xorl
cmp
xor
daa
fwait
rclb
imul
std
mov
pop
xchg
add
mov
mov
mulb
adc
mov
aam
adc
cld
cs
sbb
pusha
push
hlt
push
push
mov
js
mull
push
repz
jmp
jno
clc
loop
sub
pop
std
jmp
dec
pop
int3
mov
bound
cmp
cmp
dec
mov
jnp
test
sub
and
xor
push
xchg
push
dec
cld
int
sahf
dec
lock
jg
pushf
sub
jmp
fucomp
push
xor
adc
push
test
adc
ds
popf
pop
mov
jnp
outsb
add
daa
notl
or
clc
or
ljmp
fsubl
and
xor
shrb
mov
jecxz
xor
or
int
inc
aad
xchg
or
hlt
dec
mov
pop
lea
mov
jb
sbb
lret
ja
mov
push
and
jmp
dec
add
mov
pop
mov
loopne
pop
icebp
lock
pop
push
gs
fsubrp
or
imul
cltd
arpl
ret
and
imul
test
subl
es
pop
xchg
pop
dec
mov
outsb
arpl
xor
mov
inc
inc
test
inc
popa
stos
bound
pop
fists
repz
ljmp
mov
pop
pushf
call
push
repz
sub
in
jg
fimuls
dec
mov
cltd
test
cmp
cmp
dec
fwait
push
outsl
pop
cmpsb
out
push
icebp
xor
or
mov
or
push
cmp
cmp
sbb
rep
cmp
cmp
dec
addr16
adc
jmp
pop
mov
shrl
mov
sbb
adc
rcrl
pop
neg
ss
xor
mov
jge
mov
inc
outsl
pop
dec
scas
mov
icebp
pop
jb
test
xlat
fidivrs
mov
cli
fscale
mov
aad
imul
jg
mov
rorb
divb
inc
mov
dec
push
out
clc
fcompl
push
lret
negl
js
lock
jge
jle
add
jne
jns
stos
int
inc
shl
fs
adc
pop
jb
xor
xor
lcall
mov
in
mov
xchg
test
sub
aam
mov
in
sub
mov
popf
test
jb
outsl
sahf
jo
push
loop
ret
mov
orl
aas
xchg
lds
push
push
push
jecxz
jno
inc
movsl
js
adc
outsb
xchg
iret
out
stc
jmp
mov
call
jp
xchg
mov
dec
mov
push
mov
rep
popa
cltd
in
or
push
nop
dec
mov
mov
mov
push
xchg
sub
in
les
xchg
call
stos
test
sub
stc
pop
and
sbb
lods
xor
jp
mov
sbb
cmc
or
push
lods
cmp
divb
and
addr16
in
insb
jnp
cmp
xchg
or
add
mov
pop
mov
orb
pop
out
adc
cmpl
dec
les
mov
mov
mov
cli
shll
sbb
mov
les
jmp
popa
cwtl
movsb
dec
stos
dec
mov
bound
jp
scas
mov
clc
aam
shlb
push
mov
imul
insl
inc
jg
pop
shll
pop
mov
adc
mov
mov
pop
sarb
scas
push
xlat
mov
into
cmp
pop
js
stc
xchg
and
fs
mov
shll
cli
nop
fcmovu
mov
xchg
xchg
mov
stc
jp
mov
insb
rorl
sbb
sub
mov
movsl
bound
out
lds
jns
xchg
push
int3
and
pop
xor
and
lret
mov
xchg
pop
xor
repz
mov
test
cltd
insl
xor
and
scas
adc
push
mov
cmc
bound
test
cmp
cmpsb
xchg
repnz
dec
pop
addb
loopne
mov
repz
arpl
mov
push
adcb
lcall
cmpsb
dec
mov
sub
imul
xchg
xchg
lret
ret
scas
add
insl
es
jns
cmpsb
adc
shrl
xchg
pop
or
inc
mov
int
dec
mov
sbb
push
ljmp
cltd
jg
fbstp
lret
loopne
mov
push
jno
jns
pushf
rolb
cmc
or
arpl
add
loopne
mov
in
popa
cld
pop
les
dec
pop
inc
push
pop
xchg
or
and
jo
mov
sarl
push
pusha
adc
pop
outsl
mov
jmp
lods
jno
jae
mov
scas
rclb
add
out
push
mov
in
sbb
in
dec
arpl
xor
jne
push
jle
lret
je
mov
mov
xchg
iret
and
fisttps
nop
dec
movsl
pop
mov
push
push
fisttps
cld
and
fisubrs
popa
push
xchg
lock
mov
cmp
dec
je
and
fists
lods
loop
cltd
pop
mov
stos
dec
push
aad
clc
mov
mov
xchg
cmp
cmc
xchg
sbb
push
dec
scas
popf
pushf
mov
popa
jl
movsb
sub
mov
lahf
xchg
dec
pop
pop
into
test
andb
pop
mov
lret
or
mov
sbb
je
add
sahf
xchg
sbb
rorb
cmp
xor
arpl
mov
arpl
lret
jns
ret
arpl
inc
popf
cmp
in
mov
in
out
push
shll
xor
inc
jo
in
shrl
xor
xchg
xor
xchg
push
xorb
out
sarl
and
jbe
or
jl
lds
or
insb
ljmp
cmp
jb
sti
sbb
xchg
aam
sub
les
and
adc
aam
lahf
pusha
mov
dec
sub
les
enter
call
fwait
xlat
imul
cmpsl
cmp
aaa
insb
xchg
xchg
push
arpl
in
add
add
cmp
adc
mov
daa
inc
xor
sbb
xchg
pop
push
scas
call
ficoml
dec
in
out
out
repz
jecxz
aam
int3
arpl
sub
dec
xchg
cmp
enter
stc
mov
mov
mov
pop
fneni(8087
movb
sbb
jmp
pop
std
insl
shrb
cmc
mov
gs
pop
mov
dec
pop
xor
cmp
push
call
push
push
call
xor
add
ret
nop
nop
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
