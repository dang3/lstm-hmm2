push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
out
or
xor
std
push
push
jecxz
shl
rclb
adc
hlt
ss
dec
popf
cmp
add
jo
dec
testb
jo
xlat
lea
int
inc
movsb
outsb
std
mov
jl
imul
je
mov
mov
jno
xchg
mov
js
and
call
leave
inc
pop
xchg
loop
mov
gs
fadds
sbb
dec
pop
sub
adc
repnz
adc
push
inc
mov
xor
outsl
loope
arpl
pop
pminsw
outsb
push
inc
ja
das
xor
jle
inc
sub
push
es
xor
jg
test
int3
and
fimull
into
movsl
scas
jmp
cmp
adc
pop
repz
cmpl
sbbl
xchg
cmp
dec
les
cmp
mov
in
xor
adc
push
mov
inc
fisttpl
xor
jl
pop
jle
add
inc
movsb
fdivrs
add
leave
test
sbb
pop
stos
inc
push
shll
and
xchg
xchg
push
mov
cmp
sahf
aaa
push
out
cltd
arpl
cmp
xor
and
cmpsb
push
sti
cltd
mov
add
mov
or
dec
inc
xchg
cmp
mov
fcompl
sub
test
inc
in
mul
dec
adc
jne
xchg
xor
or
enter
mov
loop
inc
std
fisubs
add
pop
repnz
jmp
xchg
xchg
mov
test
dec
cmp
or
nop
in
cmp
dec
mov
push
stos
es
out
adc
jmp
fxch
mov
fwait
mov
out
test
push
mov
lahf
jg
mov
nop
pop
mov
cmpsb
mov
pop
into
jne
jecxz
andl
push
test
popf
sub
fisubl
cmp
cmc
jae
repz
das
pop
sbb
push
push
sbb
popf
int
popf
xchg
jg
jae
pop
sbb
adc
es
fnstenv
loopne
push
inc
inc
ljmp
mov
aaa
ja
jmp
push
mov
add
pop
and
mov
pusha
sub
hlt
jge,pt
ljmp
mov
scas
pop
xor
loop
mov
nop
or
adc
sbb
cmp
push
mov
lcall
cmc
and
cs
cwtl
sub
dec
gs
daa
mov
sub
ficomps
stos
fists
daa
cmp
ret
shl
jno
notb
insl
mov
cmp
push
dec
cmpsl
mov
pop
cmp
and
adc
mov
push
pop
scas
mov
xchg
mov
and
in
inc
add
pop
ffreep
insl
jns
push
ss
ljmp
repnz
aas
cwtl
scas
nop
cmpsb
sub
sbb
push
mov
and
push
push
fsubr
add
mov
sti
push
lock
dec
push
je,pt
ret
mov
je
mov
and
mov
rorl
fcompl
adc
cld
std
cltd
inc
repz
popf
cs
dec
inc
stos
jnp
fistpll
or
or
push
jb
shll
xchg
cwtl
ret
es
loop
mov
push
fsubs
sarb
sub
xchg
xchg
aaa
popf
mov
pop
jmp
or
ror
jae
in
into
lock
pop
push
loop
ds
jg
jo
out
les
fcomps
pop
sub
xchg
testb
aaa
out
lret
dec
ret
loope
pop
fdivrs
jno
cmp
arpl
iret
push
orl
loopne
sub
xchg
mov
xchg
push
mov
and
je
cmpsb
sub
push
fldcw
mov
outsl
mov
cmc
mov
push
xor
sub
jmp
jp
sub
xchg
xchg
push
clc
lahf
icebp
jae
jl
repnz
jp
lea
arpl
aad
jnp
and
fisubs
mov
es
push
mull
xchg
enter
and
inc
fwait
lret
jb
fsub
or
fistpl
dec
out
popa
adc
dec
pop
mov
add
inc
mov
js
cmp
mov
cmp
and
lcall
push
pop
iret
pop
cld
cltd
addr16
mov
insl
loopne
pop
aad
test
ror
jbe
loop
filds
adc
rorb
inc
push
faddl
cli
xchg
xchg
pop
adc
mov
adc
jge
adc
decb
mov
and
pushf
popf
test
xor
out
rorb
je
adc
mov
lcall
pop
sbb
mov
mov
mov
scas
in
sbb
dec
xor
out
adc
sarb
in
icebp
pop
mov
jne
fwait
lods
and
mov
imul
loop
shrb
ja
andb
dec
jns
mov
adc
jle
and
divl
push
mov
xchg
icebp
or
gs
mov
or
je,pn
sahf
pop
xchg
sbb
insl
out
ss
sub
cld
pop
ljmp
xchg
adc
xor
and
stos
xor
lcall
pop
inc
loopne
enter
shrb
popa
cmp
mov
push
mov
inc
je
dec
add
mov
rolb
into
cmc
push
stc
lock
dec
inc
divl
dec
jg
xchg
pop
push
and
inc
sub
inc
xor
out
xchg
enter
and
ds
push
shr
xchg
es
movsl
mov
cli
and
jecxz
stos
and
pop
into
pop
mov
sahf
adc
ficompl
movsl
and
stos
sbbb
mov
test
dec
xchg
popa
lahf
aad
push
ret
inc
mov
int
dec
and
int3
add
nop
stc
sbb
inc
or
pop
adc
sti
das
jge
scas
or
jmp
adc
pop
std
or
lea
xlat
sbb
xor
notl
int
iret
lods
scas
jp
or
sbbl
ret
in
insb
inc
insl
sub
lret
lahf
xor
pop
inc
pop
inc
add
adc
pslld
call
pop
mov
std
inc
and
and
sub
lcall
adc
leave
inc
mov
cmc
outsb
lcall
daa
fisttpll
cmp
mov
mov
inc
js
bound
fwait
adc
cmc
adc
call
sub
jle
in
ds
push
xchg
arpl
loop
ja
in
clc
lock
jnp
inc
adc
sbb
cmp
jno
icebp
push
dec
or
dec
ret
push
repz
cmp
pop
sbb
sbb
cli
lods
enter
out
mov
mov
mov
mov
mov
jae
addb
inc
sbb
leave
push
movsl
xchg
gs
icebp
rorl
pop
or
sub
mov
mov
rorl
sbb
loopne
pop
xor
fstpl
loop
sti
stos
mov
lcall
sti
adc
test
out
jmp
and
jno
cmp
push
sub
sbb
or
fiaddl
xchg
divb
adc
loopne,pt
shrl
out
pusha
imul
negb
mov
ljmp
xor
sarl
mov
cli
jl
lahf
sbb
push
lods
xchg
cltd
insb
mov
or
adc
jp
imul
out
jmp
les
jb
lods
icebp
test
adc
cmpsl
imul
pop
xchg
inc
inc
pop
popa
das
loop
popf
jg
sbb
pop
test
ficoml
enter
iret
xlat
sub
rorl
adc
das
xlat
ljmp
mov
or
xchg
mov
mov
aas
sub
and
mov
jae
lret
xor
mulb
add
sub
pop
xor
pop
add
popa
outsb
inc
out
jns
jg
pop
repnz
gs
adc
cmp
js
test
pop
int3
pusha
xchg
ficomps
icebp
mov
imul
jb
popa
or
inc
std
xor
pop
ret
sub
lods
fcoml
out
mov
dec
pushf
pop
aas
adc
out
sbb
xchg
sub
scas
push
or
call
iret
stos
bound
xchg
sub
jnp
jp
hlt
mov
dec
jl
icebp
ret
mov
daa
das
nop
mov
sahf
dec
lret
or
pop
jbe
xchg
gs
jae
push
jecxz
push
enter
jns
push
adc
cmp
xlat
cld
add
add
mov
test
push
dec
fdivl
jmp
into
pop
rcrl
sub
rcll
in
movsl
jg
shll
aad
jl
movsb
mov
dec
jno
xchg
push
hlt
jae
cltd
aam
cld
stc
hlt
jg
jno
push
fsts
adc
xchg
xchg
fldenv
push
jl
mov
leave
pop
ss
test
sbbl
dec
xchg
in
fs
or
fbld
out
lock
rolb
mov
jle
cwtl
adc
in
test
or
and
jns
fiaddl
pop
add
outsl
popf
dec
rcll
cmp
daa
dec
cld
in
mov
nop
rcll
add
xor
pop
xchg
cltd
inc
fildl
stc
or
ret
or
ss
jl
and
cli
xor
test
pop
dec
xor
in
add
mov
sbbb
mov
and
xchg
test
xchg
cmp
movsl
lods
leave
push
movsl
movsb
mov
push
lea
loope
fs
daa
jb
push
jle
mov
ljmp
je
cld
xchg
and
push
mov
xchg
lock
dec
pop
adc
push
push
outsw
arpl
arpl
les
movsb
into
sti
jno
in
aaa
and
or
jbe
ret
daa
pop
dec
outsb
xor
movsw
inc
outsl
pop
xchg
cmp
push
mov
ud1
cmc
negb
adc
dec
xor
and
jo
lods
popf
xchg
inc
icebp
xor
jo
jne
adc
scas
fists
fdivs
repnz
inc
dec
mov
and
arpl
test
call
cmpsb
das
sbb
push
popf
lods
popa
inc
stos
mov
mov
jno
rcrl
xor
push
adc
lret
adc
cld
cmp
pushl
jl
mov
pop
mov
mov
dec
pop
lahf
cmc
loope
sub
inc
mov
test
xchg
pop
lods
mov
sub
stos
loope
sarb
scas
xchg
test
mov
and
dec
sub
fbstp
mov
pop
inc
mov
xchg
shl
sbb
lret
ja
pop
add
iret
adc
cmp
jg
mov
adc
ret
xor
pop
add
push
out
jne
in
jae
sub
fdiv
repnz
outsl
push
xchg
ret
pop
call
xor
stos
and
dec
mov
xchg
cmp
into
pushf
rol
xor
xchg
movsb
mov
cs
mov
stos
fnsave
js
lahf
mov
jle
mov
cmpsl
out
icebp
push
and
cmpsl
sbb
lret
lea
pop
mov
lahf
inc
loope
xchg
xchg
adc
adc
xchg
in
cmp
or
jle
jae
push
add
popf
je
dec
lea
negb
push
pop
popa
or
scas
lods
sar
aaa
mov
add
outsl
or
jae
loope
addb
mov
mov
xorl
int3
dec
cmc
jne
shll
mov
cwtl
fimull
call
js
inc
push
cmc
mov
and
hlt
mov
adc
jmp
mov
xchg
mov
arpl
push
iret
loopne
in
popf
mulb
gs
stos
stos
adc
push
pop
dec
test
outsb
scas
fcompl
push
adc
cmp
mov
xor
arpl
and
out
push
shll
lea
cmpsl
repnz
and
or
aaa
stos
lcall
push
arpl
test
mov
mov
xchg
pop
xchg
adc
into
push
mov
xchg
in
mov
ja
mov
inc
xor
cmc
data16
ret
xchg
out
xlat
ds
scas
jns
nop
aam
mov
pop
jge
pop
je
leave
adc
mov
jbe
xadd
dec
push
add
sbb
dec
fs
push
push
jmp
cli
lods
repnz
push
sbb
mov
jb
sti
pop
mov
pushf
lods
push
inc
lahf
arpl
sbbl
adc
pop
sbb
jne
mov
cmp
pushf
cmp
mov
adc
jo
loope
ljmp
jl
in
jp
out
outsl
xchg
cmpsl
jg
or
add
and
repnz
sbb
das
mov
sbb
jo
pop
adc
add
xchg
sbb
adc
icebp
xchg
fsubrp
loop
or
add
push
push
xchg
add
sti
arpl
or
add
lea
cld
loope
sub
icebp
ret
add
scas
inc
test
mov
jno
pop
mov
fwait
jl
out
aaa
inc
cmp
test
scas
mov
dec
pop
lea
pop
sub
pop
jae
pop
mov
stc
push
pop
cs
mov
fldcw
xor
loope
sbbl
sbbb
enter
push
push
mov
mov
pop
js
mov
inc
insl
rolb
outsl
icebp
jecxz
mov
mov
push
pop
lods
jbe
cmpxchg
sub
push
push
sti
mov
cmp
cmpsb
xor
div
mov
xchg
fiaddl
and
xchg
xchg
outsb
call
add
int3
outsb
and
loope
push
sbb
push
lret
std
mov
pop
enterw
int3
sbb
cli
aam
pushf
enter
in
mov
lea
sbb
cltd
test
test
insl
inc
movb
insb
fadd
mov
xor
clc
daa
out
jae
or
movsl
xorb
aam
push
repz
or
outsb
out
sub
cmpsl
iret
mov
les
sub
movsl
cmp
shl
ficoml
push
dec
sbb
or
mov
std
test
rol
outsb
mov
addl
cltd
decb
xchg
dec
dec
cmc
ficompl
or
dec
bound
sbb
decb
cmp
jbe
jns
jge
cmp
fxch
xor
sbb
sbb
xor
sub
jl
push
push
push
leave
clc
lods
xor
mov
adc
and
mov
out
pop
xchg
negl
dec
or
push
push
loope
mov
fimull
and
xor
jecxz
pop
mov
mov
cmp
mov
jmp
clc
js
sbb
fisttpll
scas
pop
loope
mov
inc
sbb
test
scas
jge
dec
out
sbb
daa
arpl
incl
jmp
loopne
addr16
addl
lahf
jge
mov
daa
push
lods
inc
clc
push
mov
fsubrs
leave
or
adc
mov
dec
ja
iret
mov
enter
les
out
cmp
xor
push
fdivrl
andb
jecxz
lret
roll
and
inc
or
inc
jno
inc
sbb
adc
imul
dec
mov
xchg
xchg
mov
out
add
inc
fidivl
ret
xlat
push
cmpsb
sahf
and
ss
enter
and
mov
std
pop
std
mov
std
jmp
mov
push
insl
inc
inc
xchg
pop
inc
mov
int
and
mov
insb
nop
adc
pop
add
xor
jg
inc
mov
clc
mov
scas
dec
std
ret
jle
inc
mov
add
xchg
mov
aad
fcoms
dec
int
mov
mov
scas
mov
xchg
adc
jecxz
push
mov
sub
mov
std
lret
ljmp
lods
pop
lods
adc
dec
inc
mov
xchg
push
test
pop
ror
adcb
push
je
testb
xor
in
xchg
sbb
adcb
sbb
lods
inc
shlb
std
push
cmc
fld1
xor
insb
add
xor
sub
sbb
dec
push
mov
xor
pop
cwtl
mov
jg
and
ud2
dec
mov
xor
in
outsl
repz
in
jle
or
or
mov
inc
xchg
cmp
andl
in
mov
inc
or
mov
lods
aam
clc
rclb
jb
scas
daa
aas
movsl
mov
scas
mov
sub
or
in
cmc
scas
pop
xor
in
sar
add
arpl
lret
cmp
fldt
daa
insl
xchg
lds
mov
xchg
lret
mov
pop
cli
pop
pop
insb
mov
dec
lods
mov
js
test
inc
loop
inc
nop
repz
jae
test
push
xor
and
enter
add
das
fwait
bound
push
je
mov
sbb
sbb
push
test
xchg
jb
aas
lret
push
sub
lahf
inc
loope
es
test
adc
js
xchg
and
push
mov
push
pusha
mov
cmp
and
out
repnz
jne
sti
loopne
iret
iret
dec
push
adc
fldln2
loope
in
jns
cmp
add
ja
imul
pop
xor
fst
movsb
xorb
es
add
jnp
fadds
iret
leave
sub
xor
scas
pusha
out
loop
mov
adc
loop
loope
xchg
f2xm1
test
lret
sub
and
push
xor
mov
xchg
add
mov
addr16
xor
mov
mov
lods
nop
xor
cmp
push
les
stc
ficompl
repz
sub
fadd
adc
in
mov
dec
lea
xor
int
aam
push
icebp
movsl
gs
test
subl
in
insl
xor
dec
mov
jp
mov
push
jle
enter
fwait
jbe
lcall
pop
xor
pop
dec
in
jecxz
or
das
xchg
ds
or
push
popa
inc
daa
inc
mov
dec
xor
fs
lock
mov
and
xor
outsl
dec
test
mov
xor
clc
pop
sbb
inc
and
xor
adc
popa
xchg
add
mov
lahf
jecxz
push
adc
shrb
push
jno
sub
jcxz,pn
cmp
cmp
mov
inc
into
sub
in
jnp
sbb
enter
daa
les
outsl
cld
xchg
fimuls
jge
mull
jo
inc
out
inc
shlb
xchg
cltd
ret
in
arpl
aad
cmp
fistps
push
imul
xchg
jmp
in
pop
jno
inc
shrb
pop
fwait
jmp
fdivrl
outsl
movsl
or
pop
cmp
cli
pop
xor
shrb
inc
sahf
sarb
mov
pop
and
fldl2t
inc
movb
in
cmp
out
xorb
lret
pushf
fdivs
dec
jge
out
ja
cmp
lea
cmp
push
outsl
leave
pop
movsl
arpl
lret
inc
mov
dec
push
jb
push
push
ljmp
push
dec
addb
and
out
push
loop
hlt
stc
inc
mov
jl
add
add
add
aad
push
sub
ja
jo
dec
pop
ja
lea
shlb
movsl
fcom
push
inc
shrb
enter
lds
stc
cmp
and
ret
out
pop
ret
cli
xchg
and
int3
inc
push
lods
repnz
or
rorl
push
cs
subl
sbb
pop
into
clc
push
out
fwait
out
repnz
mov
push
andl
or
jns
andl
mov
xchg
pop
repnz
cmpsl
mov
dec
negl
jg
leave
enter
movsl
push
xor
push
mov
inc
outsb
jp
inc
in
lea
or
pop
aad
xchg
cmp
or
pop
gs
lea
int
xor
mov
mov
jns
sbb
sahf
fadds
mov
bnd
jl
xchg
adc
aam
bound
test
lock
imul
mov
ficompl
push
push
inc
inc
cmp
adc
mov
push
stc
mov
movsb
fmuls
jecxz
push
sbb
mov
jbe
pusha
imul
fs
xchg
fldt
xor
jmp
jp
mov
push
int
pop
leave
xor
pop
insl
jmp
ds
and
pusha
mov
inc
lret
out
push
sbb
pop
pop
mov
repz
mov
clc
orb
jl
jo
aaa
pop
pop
inc
mov
out
and
jmp
jmp
int3
leave
pop
dec
mov
cltd
testl
pop
inc
add
dec
cmpsl
cmp
or
clc
inc
sbb
das
mov
les
sbb
inc
adc
adcl
add
lds
mov
dec
inc
nop
dec
fs
mov
jbe
call
daa
jno
xor
popf
fs
incl
jno
add
test
lds
mov
lret
push
push
jns
pushf
add
dec
ljmp
cltd
cwtl
xchg
cmpsl
lret
sbb
cmp
pop
mov
fisubrs
mov
in
xchg
iret
pushf
shrl
or
cltd
mov
dec
pop
les
xor
gs
ret
and
mov
roll
mov
lahf
cmp
fsts
push
fstl
js
cmc
push
mov
movsl
setae
dec
movsl
repz
inc
imul
xchg
lahf
cmp
jno
dec
mov
ret
popf
xchg
pop
imul
adc
fistpll
sub
nop
dec
dec
ret
outsl
pushf
jg
mov
lret
push
je
xchg
sub
pusha
inc
pop
and
mov
xorl
out
xchg
cmp
mov
bound
cmp
bound
pop
insl
mov
add
divb
jge
loopne
jg
sub
repz
out
or
adc
xor
dec
sbb
mov
sub
insb
mov
cmp
push
or
fnstsw
jl
cmp
pop
dec
int3
bound
mov
push
jge
ljmp
leave
ror
daa
sbb
jo
lods
pop
outsl
adc
sbb
out
jg
and
push
xchg
cs
push
inc
clc
ja
aad
mov
pop
adc
pop
mov
jae
stc
and
bound
jge
addr16
add
mov
push
std
int3
mov
cmp
les
scas
sbb
inc
mov
lock
aaa
ret
stc
xchg
jmp
cmp
mov
cmp
xchg
push
and
inc
lret
shll
lds
cmpl
stc
in
push
pop
add
scas
cmp
mov
sub
int3
iret
cmp
imul
lods
sub
aad
adc
gs
xchg
and
xor
lds
push
cli
push
mov
or
subl
loopne
xchg
or
cs
cmp
sahf
insb
jecxz
sti
mov
sarb
stc
jp
test
mov
aad
jno
aad
push
repnz
lea
test
inc
xchg
aam
xchg
sti
or
mov
pop
cmp
or
lahf
jns
sub
push
xor
outsb
mov
pop
out
jbe
cmp
inc
dec
pop
iret
push
xor
inc
stos
adc
jo
ds
push
rcrl
mov
adc
scas
cli
cmp
sti
xor
pop
lods
rclb
pop
mov
rcrb
add
or
jae
and
es
lds
mov
sub
xchg
pop
shr
das
cmpsl
orl
sbb
cvtps2pd
aam
add
push
push
xor
push
mov
add
cmp
xchg
shll
dec
insb
jg
cmp
jg
mov
jno
cmp
or
xchg
mov
hlt
lahf
fcompl
adc
mov
dec
mov
mov
dec
mov
nop
je
adcl
jnp
mov
in
into
clc
in
and
int
mov
fs
jno
rcl
loope
push
or
push
lods
jl
imul
add
sbb
xor
rclb
jne
mov
out
or
sub
fs
push
aaa
popa
insl
xchg
cmpsb
loope
lds
stc
into
fwait
imul
push
xor
dec
movl
add
pop
or
in
mov
mov
mov
mov
test
ja
and
push
dec
call
dec
sub
enter
or
neg
mov
mov
and
and
stos
and
add
das
or
in
cmc
emms
pushf
mov
xchg
jl
cmc
fcoms
fcompl
outsb
or
jbe
inc
inc
push
dec
dec
fimull
call
jl
and
mov
imul
jb
mov
fisubrs
stc
aaa
sbb
inc
pop
push
mov
mov
fisubs
xchg
jmp
sti
enter
xchg
mov
mov
in
sub
scas
and
out
xor
mov
xor
nop
les
xchg
int3
mov
ret
push
nop
dec
mov
mov
jb
adc
sbb
lods
test
push
sbb
pop
sbb
repnz
in
mov
aas
or
nop
in
movsb
jg
js
loop
cmp
std
mov
push
mov
mov
dec
sbb
stos
subl
jns
call
std
test
pusha
xor
pop
insl
faddl
xchg
and
lds
scas
add
cmpb
pop
cmc
int3
ror
sarb
lret
addr16
mov
mov
dec
xor
inc
rcl
add
mov
fisubrs
inc
jnp
add
push
fnstsw
stos
enter
sbb
xchg
add
pusha
sub
jmp
int
xor
cmc
mov
subl
push
pusha
les
pushf
dec
adc
xor
sub
iret
arpl
jmp
lea
adcb
js
xor
push
outsb
movsl
cli
adc
ja
int3
push
lock
sarb
jle
cltd
inc
adc
sbb
jns
mov
lods
loop
leave
push
mov
dec
sbb
sahf
sub
push
inc
outsl
xor
lods
movsb
scas
call
adc
or
shlb
fcmovnbe
xchg
outsl
or
xor
fidivrs
push
cli
cli
cmpsl
rclb
xchg
cmpsl
jg
sbb
jmp
push
stos
les
mov
jecxz
mov
and
sub
scas
add
jo
sbb
pop
jnp
inc
or
sub
adc
pop
ja
sbb
negl
xchg
adc
cltd
sbb
fsts
loop
lock
shlb
stc
hlt
jmp
and
mov
test
cmp
ljmp
outsl
or
aas
rclb
mov
lahf
andb
out
dec
stos
mov
ja
mov
popa
jg
cmc
inc
jns
ja
pushf
out
xchg
xchg
mov
fwait
xchg
and
mov
mov
out
sbb
mov
and
xor
sbb
scas
mov
nop
cld
rolb
dec
fidivl
enter
fwait
es
insl
sub
test
pop
cmp
es
test
bound
xor
xchg
cld
mov
cs
pop
je
out
xchg
repz
clc
insl
mov
enter
inc
jno
outsb
adc
stos
lds
mov
imul
jno
pop
mov
lcall
loop
and
divb
mov
lahf
icebp
mov
mov
lahf
movsl
jecxz
xchg
nop
sub
fs
cmpl
mov
sahf
gs
and
or
jne
test
rcpps
jl
lret
ror
data16
out
cmc
inc
sbb
shlb
orb
jne
mov
mov
outsl
mov
sbb
and
jmp
sbb
clc
push
or
sti
jp
mov
dec
and
sti
cld
push
stc
repz
ja
std
mov
fmull
cmp
aaa
movntq
add
mov
dec
out
pop
mov
dec
lds
sti
insb
pop
push
and
out
pop
mov
pop
pushf
xor
in
aaa
cld
and
push
or
pop
mov
xchg
inc
pop
aaa
jne
test
in
imul
inc
outsl
popf
mov
pop
iret
cli
icebp
mov
jnp
pop
lret
out
adc
mov
aas
pop
insl
adc
ret
jb
enter
mov
lods
jbe
fcomps
adc
jl
pop
fisubl
dec
loope
dec
incb
dec
fidivl
adc
inc
sub
stos
push
add
push
fs
mov
movsb
call
xchg
scas
push
sub
insb
mov
shlb
xor
mov
ret
fisubs
xor
dec
out
xor
pop
outsb
add
sbb
cltd
div
inc
pop
lods
add
aaa
call
sbb
in
mov
jo
jp
mov
sahf
std
outsb
xchg
push
sbbl
imul
push
adc
sbb
iret
sbb
push
lret
add
sub
pop
add
add
popa
movl
add
mov
mov
test
adc
in
int3
sahf
jbe
in
mov
rorb
mov
dec
ret
pop
jne
xchg
xchg
bound
out
nop
int3
shl
and
add
or
cmp
jo
lds
lds
sbb
dec
dec
inc
popa
push
or
push
pop
jo
adc
test
mov
mov
mov
mov
repnz
lea
and
clc
lahf
std
cli
cmp
push
loopne
mov
mov
xlat
xor
and
or
jbe
scas
outsl
add
and
mov
sub
xchg
xchg
push
mov
in
jecxz
fisubl
jg
mov
int3
inc
jbe
inc
test
out
push
movsb
and
movsl
int
mov
dec
cmpsl
cmp
sub
mov
js
dec
jge
stc
popf
xchg
call
andl
inc
out
dec
mov
add
jp
stc
mov
addr16
mov
mov
enter
xor
push
mov
dec
or
jns
xchg
jo
bound
jle
cmp
stc
in
cmpsb
ljmp
dec
out
add
inc
test
sahf
jnp
aaa
lods
xchg
dec
or
dec
cmp
cmpb
cltd
mov
pop
int
jne
loopne
xor
inc
and
cmc
cwtl
lods
loop
jae
push
movb
in
push
out
xchg
lods
push
inc
mov
aam
je
mov
jnp
jns
mov
push
fldl
push
adc
mov
mov
aas
xor
cmpsb
xchg
in
xchg
inc
add
andb
int3
adc
leave
cli
sbb
mov
rorl
dec
push
jb
rolb
insl
shll
cmp
aam
xchg
mov
fistps
pushf
sti
pop
outsl
cmpsb
scas
aad
pop
mov
mov
outsl
sub
inc
mov
out
lahf
xchg
inc
push
xchg
rcrl
sarb
cmp
xchg
xchg
xor
cli
and
mov
out
pop
jns
ret
add
and
inc
mov
cmpsl
and
inc
ds
inc
nop
test
mov
fwait
outsl
fs
mov
pop
test
out
or
orb
adc
or
ret
and
adc
loop
jp
es
cmp
cmp
xchg
mov
imul
ljmp
inc
and
add
push
outsb
hlt
nop
mov
das
or
ficomps
mov
arpl
loop
out
lcall
test
sbb
push
sarb
sbb
stc
mov
popl
mov
movsl
test
pop
hlt
ja
and
pop
sbb
sub
pop
dec
shl
shl
xchg
sbbb
fnstenv
add
int3
das
cmc
adcl
call
hlt
inc
add
jns
and
lret
call
mov
popf
insl
mov
jge
imull
test
pop
das
test
loope
sbb
mov
data16
jle
cmpsl
dec
mov
pusha
cmc
jo
movsl
cs
ret
shrl
ret
ss
ds
pop
push
enter
les
scas
lock
pop
lahf
push
add
lcall
sbb
je
loope
mov
cltd
xchg
xor
push
cmp
stc
pop
out
fsubs
mov
push
paddw
push
iret
roll
sub
and
sub
fildll
mov
add
leave
jmp
xchg
es
scas
in
fistpl
mov
sub
push
push
inc
mov
repz
sub
jg
and
in
jg
xor
sbb
mov
mov
xlat
inc
push
mov
enter
or
sahf
cmpsl
outsb
cmp
notb
fnstcw
xor
mov
in
fsubrs
mov
cmc
jb
inc
popa
adc
cmp
pop
repz
pop
fwait
mov
adc
and
addr16
iret
ljmp
das
pop
mov
icebp
jns
jp
fimull
shl
add
clc
cmpsb
push
daa
das
outsb
ja
cmp
or
and
or
inc
int3
sti
or
pop
sbb
sbb
pop
pop
scas
loop
and
sub
xchg
push
js
and
call
mov
cmp
or
repz
js
lea
cwtl
adc
fwait
xor
mov
and
std
push
push
push
jp
xlat
fdiv
push
leave
outsb
cmpsl
jnp
xor
adc
lahf
testb
ret
mov
icebp
out
xor
lock
mov
aad
ficompl
out
scas
mov
mov
mov
jae
lret
stc
jecxz
cmp
loope
aaa
xchg
push
js
cli
mov
fcoms
inc
xchg
and
aam
mov
je
sub
jo
xor
clc
mov
sti
imul
xchg
xchg
and
rcrl
push
lcall
lahf
push
fisubs
jns
lcall
push
mov
mov
xor
test
or
out
les
shl
ds
jae
testb
lret
int3
lret
sbbl
sahf
and
xor
push
mov
daa
jne
gs
icebp
lret
insb
jnp
push
loop
cld
addr16
cmp
mov
sbb
add
sbb
pushf
sub
incl
jb
fldt
dec
andb
push
sbb
pop
mov
cwtl
rclb
mov
cltd
adc
or
int3
xlat
pop
cld
popf
lret
push
jbe
dec
mov
sbb
out
ds
sbb
out
daa
sub
cmp
loope
add
adc
add
xor
mov
mov
xor
or
pop
push
inc
mulb
out
mov
push
jo
xor
xchg
aaa
and
xor
adc
shrl
cmpsl
les
lods
loope
mov
shrb
fdivl
dec
push
hlt
xchg
js
sub
sub
mov
ret
aas
cmp
add
iret
push
idivb
ljmp
jp
mov
pop
and
loope
sub
repnz
aas
mov
sbb
pushf
sbb
and
shrl
and
daa
inc
xchg
push
xchg
clc
sub
push
xchg
out
sbb
push
lret
pop
mov
or
fldenv
pop
xchg
insl
outsb
cmp
pop
mov
jno
push
jmp
insl
mov
daa
jne
mov
sbb
fcoms
jg
jne
pop
inc
ds
inc
jns
jmp
dec
push
or
sbb
pop
mov
in
repnz
push
mov
sub
jbe
test
icebp
rorl
dec
and
pop
test
push
loopne
sub
daa
and
add
iret
sarl
mov
scas
ret
ret
jnp
cli
into
sub
cmpsl
addl
mov
fs
sbbb
loop
xchg
stc
cli
test
lds
inc
dec
mov
or
cmp
lods
cld
lods
inc
sbb
or
arpl
inc
add
pop
sbb
mov
xchg
ss
mov
mov
dec
shll
aam
repnz
jo
lock
or
shll
mov
pop
mov
das
add
adc
cmp
lods
pop
addr16
xchg
adc
ds
jno
repnz
mov
mov
or
jae
shlb
scas
stos
mov
jle
jnp
lea
jo
sub
test
pop
push
cs
xor
nop
dec
into
cmc
idivl
pusha
aam
xchg
mov
push
in
popf
stc
popa
mov
jne
repz
in
mov
push
pop
sub
movsb
mov
pop
jecxz
fimull
xchg
xorl
or
aam
stc
mov
lcall
bound
or
or
popf
xchg
xchg
adc
daa
sbb
ds
jp
int
push
mov
sub
stc
jno
mull
repnz
clc
decb
mov
jmp
xor
pop
and
and
loop
lret
stc
fwait
cs
sub
sbb
popf
mov
adc
ja
decb
lock
push
sbb
gs
sub
hlt
dec
insb
icebp
add
lock
shlb
ret
icebp
call
sbb
mov
gs
inc
popa
pushf
in
add
sub
ljmp
adc
push
sbb
sbbb
stos
fisubs
cmp
adc
lds
mov
mov
shll
mov
dec
clc
jbe
mov
push
adc
inc
subb
std
or
orl
in
sti
lods
pusha
dec
push
outsl
jl
dec
mov
pop
and
sub
movsb
lea
cwtl
cltd
push
in
iret
dec
mov
sbb
push
jmp
add
into
inc
jne
cmp
jecxz
jecxz
jle
adc
jmp
aas
testl
dec
rcrb
cld
movd
push
lock
cltd
in
push
call
jl
cs
cld
inc
movsl
jecxz
jecxz
xchg
mov
icebp
jne
sbb
mov
test
dec
push
nop
push
popf
dec
arpl
inc
jnp
scas
push
pop
daa
pop
dec
enter
add
aam
jp
push
inc
decl
sbb
push
call
and
adc
sub
lcall
cmpsl
loop
xchg
fs
push
sbb
jge
aas
mov
xor
mov
leave
xchg
aaa
mov
jg
aam
dec
jl
pushf
mov
nop
pusha
mov
add
mov
add
adcl
imul
nop
and
mov
lahf
dec
cmp
xchg
mov
ja
test
mov
sarb
push
ret
lcall
jle
scas
xchg
test
je
sub
aaa
imul
xchg
or
or
sbb
lods
js
cmc
test
dec
inc
mov
cli
call
pop
loop
mov
sub
les
fadd
aam
jecxz
push
cltd
jno
lock
and
jle
mov
movsl
les
rol
and
xor
cmp
gs
repz
adc
icebp
add
push
leave
dec
sub
pop
gs
out
lcall
lods
or
into
xor
pop
movsl
lods
mov
std
test
sbb
aaa
lcall
bound
cltd
cmc
popf
imul
lcall
inc
xor
jmp
je
test
cmpsl
push
xchg
add
das
cmpsl
out
mov
and
sbb
lods
aaa
fmuls
test
cld
out
and
dec
mov
push
or
sti
sub
push
mov
xchg
or
mov
les
xor
in
in
pusha
jo
or
sub
or
adc
test
mov
jae
cmc
fstpl
pop
popa
jnp
cmpsb
movsl
mov
inc
jne
push
fmull
cmc
pushf
les
dec
push
repz
dec
xchg
push
mov
xor
xchg
fidivl
adc
add
in
lock
sbb
je
or
sbb
das
add
add
cmpb
mov
std
cmc
sbb
mov
push
fisubl
mov
jecxz
adc
je
mov
add
cld
sub
pop
cmpsl
mov
lea
mov
gs
dec
xor
or
add
std
stos
xor
es
adc
daa
mov
push
cmpsl
mov
jb
aad
push
jo
ret
inc
outsl
xor
and
in
jp
push
xchg
mov
sub
inc
lods
ja
dec
out
out
dec
jmp
scas
invd
jo,pn
or
push
lcall
dec
or
jmp
adc
outsb
outsl
aam
pushf
negl
xlat
mov
mov
dec
addr16
dec
fcmovbe
pop
arpl
addr16
add
xor
rorb
je
dec
mov
hlt
clc
gs
xchg
addr16
pop
lea
push
pop
jle
out
lcall
push
adc
and
mov
or
push
jb
push
mov
ficoml
cld
popf
ljmp
xchg
shlb
andl
test
jmp
sub
add
stc
in
sbb
mov
xor
push
and
adc
clc
icebp
fldenv
test
in
repz
subl
xchg
inc
cmp
fsubl
inc
mov
jno
cmc
xchg
mov
fwait
add
jg
insl
sti
jne
push
fcom
sbb
sbb
lods
jae
in
shrb
stos
mov
scas
add
cltd
cmp
fcoml
and
ret
push
sub
mov
jg
aas
add
inc
xchg
addr16
push
call
xchg
dec
push
dec
cmpsb
icebp
bound
cmpsl
sub
cwtl
xchg
subb
mov
mov
xorb
mov
fnstcw
dec
leave
outsl
aam
pushf
aaa
fwait
xchg
and
mov
call
aas
push
fldcw
cmp
jmp
push
repnz
dec
adc
outsb
xor
subl
sbb
xorl
or
or
leave
jo
sarb
adcl
pop
popf
xchg
int
stos
adc
cmp
dec
pop
sub
sbbl
mov
aad
push
mov
mov
inc
xchg
mov
test
xchg
loopne
xor
test
mov
aad
xor
push
adcb
imul
test
out
dec
addl
xchg
dec
pop
jmp
jecxz
xchg
testb
call
push
daa
and
mov
les
icebp
xor
icebp
es
mov
ss
sub
fwait
adc
cmc
sarl
mov
mov
pop
cwtl
cli
sbb
push
xchg
add
fcompl
outsl
test
std
mov
aaa
sqrtps
scas
call
lock
jns
loop
dec
cmp
fistpll
cmp
dec
xor
cmpsb
loop
mov
sti
xchg
xchg
aam
mov
adc
dec
fsubp
in
jecxz
jnp
dec
inc
popf
imul
mov
lret
fistpll
gs
lock
mov
and
jg
gs
sti
mov
cs
push
addl
xchg
xchg
sbb
mov
xchg
jns
rorl
rorl
out
push
pop
call
push
es
imul
push
scas
and
cmc
fs
xorb
rol
push
sbb
xor
ret
push
lahf
fdivl
cmp
push
les
cmpsl
aad
xchg
stos
mov
lds
fimuls
mov
lcall
adc
xor
dec
ret
push
inc
jecxz
jmp
in
pop
jne
jl
push
ds
mov
mov
nop
lret
nop
sub
out
pop
mov
inc
sbb
push
imul
sub
xchg
or
loopne
cli
jbe
fucompp
mov
pop
mov
add
cltd
and
add
cli
stos
notl
int3
cmpsb
aam
mov
mov
mov
in
aas
push
fdivrs
and
dec
jl
scas
rol
lock
and
shlb
mov
loop
rcrl
adc
jl
movsb
js
inc
jns
push
and
mov
cwtl
fldcw
jne
jl
or
test
add
rolb
xchg
cmp
dec
pop
push
jo
jnp
movsl
ss
dec
cltd
add
sbb
pop
inc
mov
add
arpl
shlb
das
adc
jmp
jnp
stos
mov
ret
negl
loopne
push
pusha
or
and
mov
ss
and
adc
xor
fiadds
push
mov
imul
pop
cltd
fistl
int3
inc
inc
pop
add
or
xchg
out
scas
lods
lods
mov
loop
jne
inc
dec
jbe
call
shl
cmp
mov
out
dec
jae
cmp
mov
dec
fimuls
push
or
cmp
pop
repnz
pop
push
mov
mov
mov
out
inc
stos
mov
push
test
lahf
jg
rorb
mov
iret
pop
pop
push
inc
fiadds
xlat
mov
inc
stos
add
cmp
out
pop
sub
sbb
jns
andb
or
addl
mov
lcall
sti
insb
jbe
push
push
cmp
scas
pushl
add
insb
icebp
push
add
rcll
iret
and
flds
movups
sub
gs
push
sbb
add
lods
incb
sti
repz
add
push
mov
xchg
xor
pop
cli
in
ret
sub
jmp
sub
outsb
or
dec
movsl
mov
and
sbb
mov
lret
dec
shl
and
xor
lret
orb
int3
ljmp
adc
pop
dec
loop
scas
sub
dec
and
sahf
mov
and
mov
sti
xor
mov
dec
cmp
dec
pop
sub
lahf
cmp
add
or
out
ret
test
cmp
sahf
in
imul
aas
xchg
rcrb
xorb
mov
mov
test
call
movsb
sbb
into
add
cli
lds
test
xor
pop
bound
shrb
int3
pusha
inc
inc
enter
and
outsl
mov
imul
ret
or
in
mov
ret
or
ret
pop
test
in
sbb
xchg
aad
sbb
pop
sub
out
arpl
pop
mov
jmp
and
mov
mov
and
out
mov
nop
jp
pop
cwtl
mov
shrl
sarl
adc
sub
pop
cmp
push
xor
push
pop
add
push
enter
test
inc
push
pop
into
mov
cmp
xor
fcomps
adc
jmp
inc
mov
imul
mov
jae
jp
dec
or
add
icebp
mov
enter
mov
fists
outsl
mov
int
inc
mov
sar
or
mov
fs
mov
sub
xchg
jns
xlat
jno
xchg
je
pop
and
scas
or
adc
fs
cmp
adc
in
test
inc
xchg
mov
mov
push
mov
jbe
jecxz
jne
scas
stc
and
ja
push
adc
push
sub
adc
or
mov
push
push
roll
sub
lock
sbb
inc
xchg
std
inc
pop
jp
dec
mov
add
cmp
sub
add
lods
sub
lods
stos
inc
addl
aad
imul
adc
adc
mov
scas
or
test
lret
sub
and
push
ja
aad
ds
or
in
shr
cli
lret
js
sbb
mov
pusha
adc
sti
adc
test
pop
mov
repz
sub
fmuls
jl
xchg
pushf
insl
push
xor
lock
mov
arpl
sub
dec
or
sbb
lret
xchg
pop
test
inc
fdiv
js
lret
out
inc
ja
lcall
fbld
sbb
out
lds
outsb
add
data16
fmulp
lods
mov
push
scas
loop
mov
push
ret
adc
cmpb
xor
dec
cld
in
data16
push
xor
push
xor
jb
xchg
mov
sbb
insb
mov
and
xlat
fldpi
cmp
rol
mov
fwait
lahf
push
mov
shll
ret
imul
pop
dec
insl
mov
mov
sub
movlps
into
js
push
xchg
out
lock
xlat
outsb
jo
ljmp
or
adc
sbb
popf
out
cwtl
sbb
inc
pop
mov
pop
jb
lods
xchg
xor
test
jl
mov
popf
enter
mov
int3
and
into
xlat
sahf
cmp
cmp
outsl
inc
mov
xchg
inc
adc
push
pop
add
adc
test
cmc
cmp
mov
stc
dec
add
sub
pop
iret
mov
adc
mov
jmp
xchg
mov
jmp
insb
fs
test
and
push
sbb
cli
lods
stc
mov
sarl
or
loopne
pushf
cmc
jl
inc
pop
push
lods
add
and
mov
add
jg
adc
push
sti
xor
mov
pop
mov
out
jne
sbb
jne
ret
sub
push
mov
and
insl
pushf
cmp
insb
orl
mov
insb
adc
xor
jmp
cmc
outsl
aaa
scas
test
cmp
out
add
mov
cld
pmulhw
pusha
mov
inc
jle
imul
sbb
and
pop
pop
push
xchg
push
lods
aas
adc
ss
sti
sub
shrl
popa
out
push
test
sbb
jb
cmp
mov
scas
jmp
sbb
loope
loope
xchg
leave
mov
jge
dec
mov
sbb
inc
in
loope
xchg
pop
stos
outsb
mov
mov
dec
mov
in
sbb
jle
insl
mov
je
fcompl
je
pop
pop
lds
add
sahf
in
or
add
dec
sbb
jne
out
jl
scas
mov
mov
outsb
jmp
imul
je
js
add
sahf
scas
mov
cmpsl
mul
lret
mov
insb
popw
xchg
pushf
cmp
loopne
es
dec
xor
les
mov
pop
add
fdivrs
ret
andl
test
adc
dec
sbbb
dec
cmp
sbb
fldenv
test
jne
scas
mov
pop
add
mov
mov
mov
mov
aam
mov
adc
cltd
mov
aad
je
pop
ret
insb
xlat
lods
adc
dec
pop
mov
test
xlat
mov
out
loope
jl
mov
in
imul
adc
mov
in
sbb
push
mov
mov
add
in
push
cmc
imul
inc
mov
fs
cmp
xchg
adc
inc
xchg
ret
fs
xchg
push
and
xchg
xor
fs
popa
mov
sub
rcr
out
mov
lods
icebp
jae
mov
xor
inc
out
mov
ret
cmp
outsb
repz
sub
lock
add
lahf
out
xchg
lods
cmp
pop
inc
mov
in
sahf
icebp
aad
dec
incb
adc
sub
sbb
adc
icebp
mov
shlb
sti
cmpsb
mov
pop
cwtl
lret
xor
add
out
dec
and
aad
or
mov
add
insb
pop
inc
xchg
loope
jae
lods
adc
cmpsl
xor
jno
inc
nop
pop
inc
stos
push
pop
add
jns
pop
sbb
pop
push
subb
add
cli
ret
adc
adc
icebp
jnp
mov
cmc
cwtl
adc
and
sub
out
test
or
movsl
jl
shlb
stc
inc
fildll
inc
in
or
and
sub
insl
pusha
clc
lea
cltd
jp
les
or
dec
je
add
inc
rcll
aam
dec
ds
cmp
xchg
and
mov
inc
lea
mov
lcall
cmp
cmp
inc
adc
push
ret
mov
lea
mov
mov
xchg
xchg
int
mov
cmpb
insb
xor
insl
js
cmp
rcrb
pusha
push
std
dec
out
and
insb
pop
push
lahf
fs
pop
sub
cld
inc
and
or
fsubrl
and
push
les
lds
and
sbb
hlt
mov
push
jbe
inc
fmull
adc
cmp
gs
and
cmp
dec
adc
mov
xchg
idivl
pop
dec
xor
cmp
int
mov
mov
mov
adc
cli
and
xchg
mov
jecxz
les
mov
fsub
pop
or
scas
imull
js
fsubs
pusha
out
jae
cmp
pop
pushf
jmp
cmp
repnz
les
sub
push
or
push
sbb
and
cmp
and
daa
dec
inc
aam
or
add
addr16
insb
lea
sub
je
cmp
sub
inc
add
jg
das
rcrl
sahf
loope
scas
mov
sub
test
shlb
clc
xchg
addr16
enter
call
mov
fsubrs
stc
xchg
test
fwait
and
out
dec
dec
sub
out
xor
mov
push
les
mov
ret
aas
sub
scas
je
jle
ljmp
mov
cmp
mov
outsl
inc
mov
xchg
jge
jmp
out
and
jns
mov
dec
xchg
pusha
mov
pop
ficompl
push
push
xchg
pop
and
aam
pop
imul
add
ljmp
ss
sub
test
in
test
pop
cmp
popf
cmc
ret
xchg
addl
xchg
sbb
fildll
xchg
xor
fmulp
jb
dec
mov
and
fdivs
in
inc
sbb
test
pop
xlat
pop
mov
outsl
ret
iret
ljmp
mov
lods
aas
sub
adc
loope
sub
jg
pop
cmp
xor
push
dec
test
push
add
push
add
xorps
add
mov
sahf
test
ret
outsb
ror
sub
loop
mov
dec
pop
mov
mov
insb
pop
mov
mov
xchg
popf
sub
and
xchg
inc
xor
sarb
leave
ds
aad
sub
dec
xor
sbb
dec
cltd
xor
adc
jl
add
hlt
push
inc
stc
repz
mov
ljmp
jecxz
test
popf
add
scas
ret
mov
lea
rorb
pop
jecxz
adc
sahf
test
push
sub
rorb
sub
jmp
inc
addr16
scas
adc
inc
int3
cld
faddl
jb
aad
jp
pop
push
adc
mov
clc
xchg
int
roll
aad
ja
inc
nop
aad
outsb
cltd
jmp
or
int3
rorl
pop
mov
test
movsl
jne
jp
cli
les
pop
cmp
lock
ljmp
push
in
add
daa
dec
or
int3
popf
mov
jmp
movsb
jl
mov
subb
jmp
sub
push
dec
cltd
cld
ret
lcall
js
jo
call
push
mov
pop
daa
subb
pop
ljmp
js
fwait
add
push
pop
pop
cmp
mov
pop
movsb
jnp
imul
fdivp
std
inc
loop
jecxz
hlt
lea
add
out
add
in
insl
hlt
or
sbbb
cmp
lods
push
fidivrl
xor
xchg
aad
cli
jmp
jmp
pop
hlt
dec
shrl
pusha
bound
lcall
insb
cmc
stos
inc
push
mov
jl
test
orb
cli
and
sarb
pop
and
inc
stc
ss
inc
js
xor
xchg
inc
lea
jl
lret
ret
and
xchg
jl
sub
stc
les
or
and
or
cmp
mov
test
mov
sbb
pop
rcr
cmpsb
sub
cmp
popf
ret
lea
rolb
movsb
pop
pop
aaa
inc
add
frstor
jl
repnz
ja
sbb
cmp
stos
jnp
jle
dec
loopne
xor
mov
sub
push
pop
frstor
dec
jne
xchg
push
dec
pop
push
mov
fisttpll
pop
fildl
xor
push
cmp
pusha
dec
push
push
shrb
rcrb
sub
fbld
cmpsl
ret
mov
ret
cmpl
imul
add
xor
aas
sbb
and
test
inc
xor
popf
cmpb
jae
arpl
lds
inc
mov
in
int3
rcll
sar
sbb
fidivrs
adc
lret
call
pushf
add
outsl
out
or
fildl
xor
mov
pop
icebp
mov
cmpsb
push
xchg
mov
ret
or
ret
sub
mov
aam
adc
mov
pop
lods
add
push
ja
frstor
lds
sbb
cmpsl
ret
repz
mov
mov
pop
push
dec
fsubrs
cmp
in
cmp
mov
or
mov
fpatan
sbb
inc
mov
xor
cmpsb
inc
in
fs
dec
cmp
int
arpl
pop
popf
loopne
pop
or
das
xchg
out
xchg
lods
adc
add
fildl
in
ds
cs
enter
ds
in
insl
adc
pop
lahf
lods
push
iret
lds
pop
outsb
fimull
cmp
inc
pop
and
test
fs
fisubrs
lock
sub
xor
rolb
loopne
jo
jp
jb
cmpsl
cli
sar
xchg
or
xor
push
dec
xchg
test
call
repnz
loop
pop
ljmp
mov
add
outsl
stos
sub
bound
cmpsl
das
sub
cli
lods
fwait
adc
sub
adc
ja
pop
mov
pop
pop
and
cmp
fcmovnbe
jl
mov
or
or
jb
mov
push
movsb
mov
sahf
lock
das
fsts
scas
addr16
dec
mov
stc
rorb
fs
mov
in
ss
sbb
js
int3
push
orb
xor
sub
outsb
cmpsb
test
xchg
in
inc
mov
loopne
pushf
inc
xchg
add
enter
insl
sarl
sbb
je
mov
les
mov
in
or
push
cwtl
popf
pushf
stos
add
int
stos
int3
adc
jno
popa
imul
inc
push
adc
outsb
sbb
lahf
loope
les
push
xor
lahf
cmp
jle
div
or
add
xlat
jno
sub
outsl
adc
mov
add
or
ret
adc
lret
test
test
cmpsl
inc
sbb
adc
movsb
fisubl
jno
inc
jnp
punpckhbw
mov
sahf
jne
cli
sti
xor
cmp
insl
aam
add
test
xchg
outsb
imul
mov
pop
add
loopne
xchg
je
aad
sahf
int
fs
mov
test
mov
pop
mov
push
test
cwtl
fbld
push
adc
cmpb
movaps
xchg
int
sub
pusha
bound
push
enter
inc
sbb
mov
sbb
les
ficompl
aas
outsl
pop
arpl
mov
ret
lret
sub
jmp
fisubrs
adc
repnz
pushf
add
jle
lea
mov
loope
fdivrl
sub
fisubs
loopne
xchg
out
mov
enter
push
hlt
fdivrs
ljmp
sarb
pop
jbe
test
int
push
call
je
mov
clc
iret
cmp
call
mov
fwait
xchg
inc
aad
pop
data16
movsl
xchg
movb
int
nop
mov
jg
lea
sbb
pop
mov
xchg
mov
dec
jecxz
jmp
push
jle
loopne
mov
lods
pop
repz
daa
outsl
scas
mov
sub
xor
adc
pop
mov
pop
loop
call
push
fcmovbe
scas
stos
mov
ss
into
adc
sub
mov
mov
nop
cmp
repz
mov
mov
cmp
sbb
ret
sti
lods
mov
adc
cmp
sub
sbb
xorl
mov
add
mov
pop
pop
andb
insl
out
ds
push
mov
sbb
or
mov
mov
test
mov
cmpsb
js
daa
fbstp
pop
push
push
cmp
adc
lret
add
sub
and
xchg
rcr
cmp
and
jne
and
mov
dec
clc
fisubrs
dec
inc
ljmp
insb
shlb
add
dec
insb
shl
cmp
insb
sub
nop
bound
pop
inc
test
popf
je
mov
in
inc
xor
fstps
sub
test
and
pop
ret
jp
xor
cmp
scas
out
xor
adc
mov
jp
sahf
push
push
clc
sarb
iret
push
dec
addr16
gs
adc
mov
hlt
pop
dec
inc
adc
inc
aaa
pop
push
mov
mov
cmp
dec
pop
pop
mov
aas
gs
sbb
filds
mov
pop
negl
and
and
mov
push
pop
sbb
mov
xchg
jle
and
mov
js
inc
cmp
cmpsl
int
in
mov
mov
sub
sahf
mov
test
cmp
pushf
and
stc
mov
cmp
mov
adc
negb
xchg
dec
adc
inc
test
and
push
mov
cmpsb
addl
adc
lds
dec
fadd
movsl
xor
adc
pusha
mov
pop
outsl
nop
in
vpunpcklwd
andb
call
xchg
scas
mov
xchg
imul
jle
xorl
ja
test
in
dec
adc
notb
push
test
mov
fbstp
movsb
shll
js
and
mov
stos
inc
jo
ds
cmp
mov
roll
test
adc
cld
sarl
cmp
sub
cwtl
or
pop
and
adc
adc
xchg
jge
or
mov
cmp
mov
out
mov
dec
push
fdivrs
adc
ret
xor
fistps
or
jp
pop
xchg
jne
inc
jnp
outsl
in
xlat
mov
lret
dec
test
pop
pop
push
ljmp
test
jle
push
dec
fnstcw
pop
xchg
lret
dec
ljmp
enter
mov
mov
nop
das
movl
and
push
call
in
pop
loop
in
test
filds
dec
pop
sub
pop
add
push
dec
jbe
into
cwtl
sbb
lds
decl
insl
ret
in
dec
gs
mov
pushf
mov
jnp
scas
adc
jne
xor
test
fs
les
imul
jo
insl
xor
push
mov
out
xor
mov
insl
push
push
cmp
pop
xlat
arpl
sub
mov
cmp
mov
pop
pop
data16
scas
fbld
cwtl
shl
xchg
mov
mov
in
mov
cmp
push
lahf
lret
addr16
mov
in
xchg
cmpsb
cmp
lcall
scas
jge
mov
xor
pop
repnz
or
outsl
jge
int
ret
inc
cmpsb
into
fsin
sbb
add
jbe
sbb
mov
call
out
gs
xchg
pusha
fwait
sub
sbb
add
sub
lret
mov
ja
cmc
cmp
inc
fildll
add
push
sbb
test
lret
xor
jmp
in
sub
mov
dec
and
in
aad
test
inc
cmp
mov
adc
dec
aaa
dec
pop
addl
mov
fbld
dec
icebp
mov
in
and
pop
jmp
xchg
bound
movsl
sub
test
aad
jp
jno
fnstsw
divb
jp
loop
push
mov
lcall
in
movsl
lock
mov
sti
mov
push
dec
int
and
inc
fsubl
cmc
mov
cltd
push
sarl
pushf
or
pop
or
hlt
pop
add
jno
and
data16
jecxz
test
pop
and
lret
outsb
jo
mov
cld
or
xchg
dec
jne
cmc
in
popf
repz
nop
inc
scas
pop
inc
mov
dec
fnstsw
lods
mov
sarl
pop
mov
jl
out
sarl
push
dec
int
gs
inc
fistps
inc
test
cmp
js
push
hlt
test
jmp
and
iret
and
enter
jmp
mov
mov
in
sub
xchg
fsubrs
dec
jbe
inc
movsl
cltd
pusha
out
jecxz
insb
pop
es
sbb
test
add
mov
movsb
xchg
stc
stos
sbb
in
shlb
jnp
jmp
push
sti
popa
aad
adc
cmpsl
xor
daa
mov
inc
fucom
dec
push
arpl
cli
add
pushf
push
je
pop
aam
lret
int3
jno
dec
pop
rorb
jne
inc
mov
icebp
shrl
adc
and
cmp
push
lods
pop
out
sub
cmp
or
movsb
add
cmp
and
lods
and
ret
push
push
cmpsb
dec
test
lock
cs
mov
xor
in
sub
pop
push
mov
repnz
jb
shlb
mov
dec
or
mov
fisttpl
test
add
dec
mov
or
mov
mov
mov
sbb
ss
mov
push
jl
dec
lret
jmp
roll
push
inc
mov
jp
and
jns
outsl
mov
dec
inc
jg
mov
std
xorl
cs
repz
adc
push
imul
fisubs
cmpsl
popf
ret
out
aaa
loopne
sbb
stos
add
rorl
xchg
scas
mov
add
fcomp
shlb
js
jnp
test
loop
ss
in
cmp
dec
data16
and
dec
cmp
xor
repnz
mov
dec
sahf
inc
xorl
sti
and
fsubs
push
adc
bound
pushf
add
mov
push
repz
mov
in
das
pop
push
jle
mov
xlat
adc
in
xchg
cmc
ds
fimuls
inc
push
jb
cmpsb
pop
dec
push
cmp
cmc
pushf
outsb
std
les
dec
stos
xor
fildl
loope
sub
in
add
bound
outsl
xor
push
mov
dec
iret
mov
test
fists
icebp
in
mov
pop
or
jnp
iret
jl
cli
push
add
inc
sub
pusha
mov
and
xchg
int3
mov
adc
push
sub
inc
insb
jns
loope
nop
mov
sub
fldenv
stos
xchg
out
shlw
lret
popa
out
cli
lret
inc
add
mov
sbb
mov
inc
and
nop
pop
mov
aaa
out
adc
cmc
mov
sbb
xchg
rdmsr
loope
jge
xor
stc
jp
xchg
je
rorb
mov
loope
add
ret
inc
jbe
xor
nop
pusha
xchg
mov
xchg
lods
das
sub
and
cmp
push
inc
aas
fs
add
mov
jmp
and
jae
push
insl
mov
shrl
popf
inc
test
mov
pop
out
jmp
jnp
cwtl
fisubrl
sbb
shrb
and
push
jno
mov
arpl
mov
cmpsb
mov
loopne
jnp
push
and
cs
les
pop
mov
adc
outsb
es
dec
and
cmpsb
popa
fwait
jb
sub
ja
cwtl
pop
into
test
shrb
shl
mov
add
inc
cmp
xor
je
test
int
and
es
mov
stos
jle
xor
out
sub
xchg
divl
sub
dec
push
enter
dec
xor
shr
mov
inc
xor
xor
mov
push
mov
outsb
ljmp
mov
lret
sbb
das
arpl
mov
xor
test
jo
push
add
repnz
mov
fs
or
xor
clc
cmp
shl
adc
jno
jns
mov
outsl
dec
in
and
and
jbe
adc
cltd
inc
or
pop
adc
es
cmp
iret
cld
je
push
push
shlb
icebp
mov
in
jge
addr16
push
scas
mov
pop
xchg
or
cmp
jge
popa
cli
mov
or
xchg
lcall
push
nop
gs
inc
inc
icebp
xorb
lcall
cmp
divl
xchg
lods
cli
mov
int3
fsubl
data16
mov
inc
sub
dec
into
sub
pop
mov
es
icebp
pop
js
je
cmp
xor
scas
and
orb
jl
jmp
stc
loop
xchg
bound
sub
mov
jp
or
add
movl
in
fildl
sbb
inc
mov
dec
scas
out
movsl
or
sub
jl
insl
sbb
mov
daa
add
pop
xor
sbb
stos
xor
inc
dec
fcompl
das
shrb
stc
adc
jle
fisubl
rcrb
inc
out
mov
jecxz
sbb
mov
inc
lods
xorb
xchg
jbe,pt
popf
mov
nop
scas
pop
push
test
pop
sub
mov
jae
or
sbb
push
mov
mov
movsl
and
hlt
or
decl
mov
lcall
test
fstps
or
aam
mov
adcl
and
jbe
imul
or
push
call
movsl
cmp
fiaddl
test
jle
sahf
xchg
xor
into
mov
pop
jbe
divb
pop
shlb
movsl
inc
push
in
lret
jo
leave
push
loope
mov
push
ret
push
in
xchg
cmp
lcall
mov
bound
mov
repz
add
jnp
cmpl
fwait
orl
movsl
sbb
inc
cwtl
and
xor
push
adc
xor
sbb
movl
ja
int
pop
es
outsl
testl
jle
xchg
push
mov
jg
les
pop
fsubrs
repz
inc
mov
or
push
cmpsb
arpl
sbb
xor
pop
sbb
lret
sbb
daa
test
mov
mov
fucomi
push
sarl
xor
lods
or
cmp
jle
xor
imul
stos
adc
jecxz
imul
lret
fs
sub
fnstenv
out
mov
stos
xor
mov
jnp
nop
dec
insl
dec
cmp
and
call
add
inc
lods
sub
sbb
fldenv
mov
lock
mov
cmp
lods
scas
les
adc
stc
cltd
je
out
les
nop
daa
sub
ret
jl
cwtl
sub
ds
call
movsb
or
cmp
or
dec
xchg
shrl
add
ds
sbb
aad
xor
sub
lcall
mov
inc
mov
xchg
fwait
aad
es
stc
arpl
dec
adc
jmp
in
xchg
ljmp
ljmp
fxch
lods
pushf
push
in
jnp
xchg
in
dec
js
aam
ficomps
pop
mov
xchg
jno
outsl
sbb
xchg
out
or
or
jne
adcl
add
rol
push
jne
pusha
and
mov
push
stos
mov
push
push
lret
xor
mov
push
std
das
lods
cmp
pop
push
xor
sub
mov
or
mov
and
out
ss
repnz
push
rorl
push
repnz
stos
cmpsb
xchg
mov
aad
sbb
adc
add
fcoms
jmp
adc
out
dec
xor
xchg
aaa
push
xor
div
out
mov
mov
gs
push
scas
pop
jg
sub
movsl
rclb
int
xchg
push
or
sarl
in
scas
xor
iret
es
fildll
push
inc
int3
push
cli
mov
dec
out
mov
mov
pop
loope
and
adc
xor
lods
mov
push
je
cld
imul
mov
int
lds
or
and
stos
add
push
mov
inc
adc
in
in
pop
imul
daa
mov
pop
jmp
dec
cli
sahf
je
dec
or
ret
pop
out
push
movsl
cmp
dec
and
add
or
sbb
es
mov
xchg
and
pop
xchg
mov
mov
push
xchg
mov
ja
jl
out
sub
test
adc
js
push
sbb
pop
inc
insb
push
arpl
add
push
pushf
sti
xor
lock
out
sbb
aas
mov
dec
mov
mov
adc
shlb
and
loopne
mov
pushf
fdivrl
aas
and
imul
cmpsb
jbe
or
push
sub
movsb
test
orb
movsl
arpl
rcr
das
fs
movsl
enter
hlt
and
xor
sarl
ret
sbb
in
add
mov
fists
mov
mov
inc
les
push
imul
inc
sbb
adc
add
jno
xchg
bound
inc
mov
lock
inc
fdivr
fidivl
push
jno
scas
inc
push
andl
xchg
inc
pop
or
mov
inc
mov
jp
stos
insb
push
sub
loopne
iret
scas
mov
pop
lret
and
push
mov
call
jns
test
ss
scas
js
outsb
xchg
ret
mov
and
rcr
int3
insl
mov
aas
notl
loop
lea
fisubs
fs
sbb
fstpt
xchg
xorl
mov
dec
sub
out
sbbb
jmp
fistpll
sub
gs
ss
add
test
push
cmp
cmp
sti
imul
js
cltd
adc
dec
xlat
xchg
int
jle
jae
sub
mov
je
and
pop
cli
sbb
xor
sbb
mov
dec
mov
mov
into
cmp
js
mov
jl
cs
out
jecxz
scas
outsl
pop
push
cmp
clc
cs
jge
lods
cmc
fldcw
push
push
arpl
dec
leave
xchg
adc
ficompl
mov
sti
adcb
in
ficoml
sub
push
cmpsl
jb
mov
jle
or
mov
hlt
xor
subb
sbb
or
mov
pop
rclb
sbb
sub
jl
and
daa
xchg
in
ficomps
bound
inc
add
mov
orl
pushf
arpl
jl
fcoms
repz
cmp
inc
jno
sub
aam
and
jbe
push
in
mov
bound
cmp
mov
stos
sub
es
repz
fcoml
adc
push
test
popa
inc
mov
call
adc
test
scas
mov
xchg
pop
int
push
pop
sbbl
dec
outsl
or
repnz
xlat
test
lods
arpl
pop
dec
subb
cmp
es
shrl
rcr
sbb
loopne
mov
mov
pusha
cmp
in
mov
in
xchg
nop
dec
in
addr16
icebp
pop
push
aam
test
dec
sbbl
cli
sarl
sub
out
jl
pop
cmp
jnp
dec
sar
repz
shll
xor
jb
mov
div
movsl
cmpsl
mov
mov
mov
inc
jmp
mov
sbb
cmp
inc
xchg
xor
push
xchg
fs
mov
bound
bound
aam
and
scas
push
mov
hlt
mov
push
bound
add
ds
add
jmp
loop
mov
stos
js
dec
add
leave
rclb
jnp
mov
and
popf
dec
in
sarl
mov
jg
dec
out
cmpsb
icebp
out
xor
hlt
out
mov
roll
mov
rcrb
fwait
add
movsl
cli
inc
shll
mov
popf
sub
rcrb
sbb
rcrl
or
je
xor
lret
insb
lods
movsb
jge
jno
je
mov
dec
mov
or
loop
loop
xchg
inc
sbb
fcompl
mov
xorl
int
mov
xchg
sub
adc
cmpl
adc
lret
jae
scas
or
push
das
sub
sub
dec
ret
ret
les
and
xchg
sarl
in
fmulp
xor
jb
xchg
sbb
lock
jns
inc
pop
inc
jmp
mov
or
cmp
leave
add
ja
mov
daa
sub
xchg
mov
jbe
insl
sti
push
in
and
xor
xor
sbb
test
sub
movsb
push
pop
pop
mov
xchg
adc
movb
sarl
stos
jb
adc
sub
stc
xchg
out
sub
es
lea
fcoms
mov
insb
mov
int3
repnz
push
push
fnstcw
mov
adc
adc
daa
sbb
paddsb
pop
jle
sbb
sbb
test
hlt
xchg
insl
inc
mov
cld
jg
push
mov
pop
or
jg
leave
xor
adc
into
mov
cvttps2pi
lock
sti
das
sti
shlb
jecxz
nop
sub
add
adc
popl
ljmp
push
aaa
push
scas
stc
push
xchg
fldcw
loope
adcl
iret
xchg
or
loop
test
mov
sbb
sub
jecxz
stos
cmp
cmpb
jb
inc
push
es
es
jo
pushl
mov
mov
mov
subb
inc
or
mov
push
lcall
test
jnp
sub
mov
pop
adc
pushf
pop
popa
push
rcl
int3
in
jno
cmpsb
xor
loope
cmpsl
add
imul
and
hlt
cmp
adc
rorb
xchg
data16
jns
loopne
rcr
inc
not
addr16
outsb
mov
nop
xchg
mov
mov
js
pop
popa
mov
movsl
int3
outsb
shll
stos
lds
cltd
inc
rcrl
add
iret
mov
stc
addl
sub
dec
shl
cmp
jb
ficomps
jns
mov
mov
mov
rorb
test
imul
adc
pop
fdecstp
dec
push
scas
jno
lea
push
sub
push
jno
sub
enter
and
or
stc
and
sar
fwait
loop
mov
pop
inc
lret
adc
and
out
push
pop
stc
xor
and
jp
dec
scas
adc
adc
pop
xor
outsb
insl
mov
test
dec
shll
lret
jae
lods
imul
mov
dec
pop
testl
ljmp
jge
pushf
mov
jmp
addl
inc
fcompl
or
lea
jle
shlb
aam
aaa
mov
outsb
dec
sub
dec
sub
mov
mov
mov
lret
lods
je
loope
inc
in
outsl
outsb
lret
popf
mov
jmp
addr16
push
sbb
adc
rcrl
mov
push
xchg
lods
shlb
add
cld
add
stos
rcrl
xchg
outsl
js
xorb
hlt
xchg
add
xor
jg
dec
jle
cli
mov
sub
pushf
sub
and
push
mov
mov
mov
stc
in
mov
cmp
lods
lea
add
xchg
cmp
je
outsb
and
ret
mov
dec
out
push
fs
xchg
push
test
loop
sub
rolb
push
sbb
movl
pop
shr
or
std
rcr
popf
mov
aad
aad
inc
popf
scas
outsb
rol
stos
adc
aas
in
push
jno
jp
test
xchg
add
shl
mov
add
addr16
loope
jo
mov
lods
push
rcrb
es
cmp
sti
inc
pop
iret
pop
push
mov
cmp
xchg
cmp
cmp
or
jne
mov
jmp
inc
lcall
subb
jbe
sarl
or
mov
pop
sub
div
ja
dec
negl
adc
test
push
xchg
fsts
idivl
jb
push
mov
add
add
adc
call
iret
or
mov
add
push
gs
imul
stos
insb
sub
pop
cltd
fsts
xor
jg
add
pop
add
dec
mov
push
xor
test
scas
jmp
adc
sub
inc
es
orb
popf
daa
mov
xchg
xor
mov
das
push
idivb
cmp
leave
and
fadds
mov
sub
xlat
fdivrs
shl
mov
jle
movsl
sub
or
in
dec
mov
pop
repnz
rolb
pushf
lahf
adcl
stos
cli
mov
bnd
mov
rorl
cmp
jbe
mov
sbb
mov
cmp
clc
jg
sbb
lret
mov
mov
jo
or
dec
inc
push
int
sub
lea
jb
lea
ja
int
mov
mov
orl
pop
push
sub
test
sti
adc
dec
pop
fldt
lea
push
pop
cmpsl
je
or
push
cmpl
arpl
jl
lods
sub
out
lret
xor
ret
test
or
push
test
xchg
jbe
sti
dec
fimull
pushl
add
lcall
repnz
push
adc
loop
int3
pop
inc
movsb
mov
cs
test
xchg
xchg
aas
mov
adc
and
xchg
push
xorb
call
sub
dec
sub
push
sub
lea
je
xchg
lods
xchg
mov
ljmp
nop
mov
pop
fwait
sub
mov
inc
dec
shl
or
inc
inc
sub
rcrb
jnp
push
movsl
jle
lods
cmp
cmp
into
add
xchg
scas
mov
out
pop
pop
test
mul
leave
mov
sbb
jecxz
mov
xchg
and
cld
jecxz
cmp
pusha
xor
cmpsb
in
mov
mov
or
stos
jbe
or
enter
pop
inc
outsl
movsb
mov
scas
test
mov
shl
fcomps
std
fnstcw
stos
push
mov
mov
imul
out
loop
fisubl
cmp
cmpsl
daa
rcll
imul
in
or
repz
cmp
call
aas
mov
mov
jp
je
aas
fsubrs
fistpl
inc
aas
out
imul
add
roll
out
pop
imul
mov
popa
add
das
lret
jno
mov
inc
xor
imul
mov
sbb
cmp
jl
mov
and
out
pop
add
xchg
and
add
push
movsb
or
push
in
outsb
idivb
pop
mov
pop
sbb
imul
cmpsl
jge
pop
gs
ret
jg
sbb
and
mov
lods
mov
stos
fsub
fsubrs
add
mov
mov
and
rorl
out
sbb
cwtl
mov
inc
repnz
xor
xor
shrb
mov
adc
icebp
push
push
mov
mov
pushf
out
mov
arpl
je
mov
imul
lcall
pop
incl
call
cmp
mov
jle
inc
xor
orl
inc
stos
jo
inc
pop
push
and
outsb
aam
dec
adc
and
add
pop
mov
ficomps
sub
cli
fcompp
lret
out
ds
jle
stos
mov
or
out
sbb
xchg
mov
js
int3
paddsw
inc
inc
lds
cmp
mov
xchg
and
xor
adc
pop
sbb
pop
arpl
mov
jg
repnz
cmp
scas
jle
sbb
inc
arpl
pop
stos
in
push
and
test
dec
or
lods
and
or
dec
sub
lock
dec
pop
lcall
adc
mov
sbb
and
pop
or
mov
push
jbe
lea
add
jmp
dec
push
outsb
inc
or
jp
cmp
pop
xchg
outsl
push
clc
lock
xor
dec
lods
xchg
mov
outsl
or
popa
inc
mov
out
lea
repnz
cs
jg
xor
or
int
sti
imul
mov
fidivl
gs
stc
ljmp
cltd
mov
pop
pop
insb
out
mov
mov
cmpb
mov
cli
dec
cmpsb
sbb
xchg
in
cli
push
jae
mov
sbb
iret
ja
push
aaa
daa
rolb
xor
dec
cmp
lahf
push
fcmovnbe
jge
and
pop
sbb
dec
or
xchg
std
es
enter
ss
ljmp
imul
out
fisubs
out
stos
aad
leave
movsl
cs
cmp
jecxz
push
lcall
movsl
cmc
add
xchg
inc
cmp
icebp
iret
inc
push
or
sub
repz
mov
fs
mov
lods
dec
mov
xorl
mov
data16
in
xchg
xor
jecxz
lods
mov
dec
insb
jbe
xchg
adcb
inc
mov
dec
aad
daa
dec
leave
out
rolb
adc
dec
repnz
mov
repz
orl
js
push
jo
fnsave
pop
sbb
call
inc
mov
subl
sub
xchg
dec
stc
dec
inc
test
jge
mov
cmp
mov
jmp
xor
cmpsb
out
dec
into
mov
mov
lret
add
xor
jg
fimull
add
sbb
fldcw
pop
lcall
aad
imul
add
out
jge
push
subb
mov
fnstenv
in
popf
imull
in
xor
inc
lds
mov
mov
mov
xchg
lods
push
rolb
popa
sbb
ljmp
cs
cmp
daa
mov
jb
and
sbb
mov
ds
dec
mov
test
mov
mov
sub
jmp
mov
push
test
scas
xchg
and
je
sub
xlat
dec
cmp
pop
inc
push
add
xor
pop
sbbb
adc
ret
hlt
add
mov
repnz
hlt
pop
call
imul
fsubrl
push
mov
cmp
pop
popf
pop
pop
lcall
jnp
clc
shlb
repnz
mov
xor
dec
pop
mov
mov
mov
fabs
inc
in
add
or
mov
rcll
shl
mov
mov
out
xor
int3
jo
mov
sub
inc
jl
xchg
cli
mov
mov
ds
jae
testl
fsubrs
out
jle
das
sub
aas
lahf
inc
das
fwait
jle
aaa
stc
push
mov
sbb
inc
les
dec
stos
iret
sub
stc
sbb
mov
jne
xchg
xor
stos
xchg
jl
push
popf
xchg
bound
cmpsb
or
aad
push
jo
add
les
push
sub
jbe
inc
push
push
dec
ds
jb
loope
inc
cmp
loope
mov
out
xchg
mov
ljmp
fdivrs
sar
lahf
jl
repnz
and
aad
mov
testb
mov
jmp
add
arpl
inc
mov
je
addr16
and
dec
std
jmp
frstor
jno
push
jnp
repz
push
fwait
mov
fstpt
outsb
mov
out
push
fistpll
adc
dec
test
mov
lock
and
mov
push
dec
sti
sarl
xchg
aaa
scas
fmull
pop
ret
xor
sub
test
in
push
xor
xor
xchg
adcb
out
aas
subl
repz
cmp
out
loope
inc
rcr
ret
fistps
mov
pop
test
shrb
mov
fucom
push
xchg
sub
push
repz
cld
test
pop
or
inc
sub
in
jge
adc
in
xlat
cmc
std
mov
adc
insb
jns
pusha
pusha
sbb
xor
aam
insb
fisubrs
cmp
cmp
mov
lock
add
fdivs
sub
aam
push
rcr
mov
adc
lret
lods
xlat
and
lods
jge
mov
loop
jle
scas
mov
mov
xchg
xchg
insb
adc
add
add
std
sub
aad
jo
xchg
adc
mov
rolb
xor
int
daa
gs
imul
mov
lret
jg
imul
aaa
push
fsubrs
in
sahf
xor
lret
ds
aas
add
leave
dec
add
pop
mov
cmpsb
ror
push
cmp
mov
mov
neg
shll
lcall
test
sti
dec
adc
dec
pop
mov
dec
loope
cmp
xchg
or
xor
lock
push
push
xor
cmp
shlb
mov
mov
cmp
out
mov
hlt
daa
fimull
fs
xor
jae
roll
scas
push
xchg
pop
mov
mov
hlt
mov
dec
fcompl
push
inc
mov
loopne
and
xlat
ret
fnstsw
add
and
pop
and
out
cmpsb
xlat
jb
dec
xor
loopnew
adc
cmpsb
cmp
cmc
jno
aad
ficompl
mov
mov
push
lock
cwtl
mov
xchg
daa
xchg
scas
mov
push
add
push
inc
jmp
and
mov
jb
xlat
cmc
sub
enter
mov
push
jle
or
ret
jno
addl
das
popa
or
stc
outsl
adc
cmp
fs
sub
fs
mov
add
inc
mov
mov
aad
data16
andl
push
dec
test
pop
mov
dec
mov
ret
int3
lahf
nop
sti
push
push
or
sbb
in
std
adc
fldcw
cli
std
xchg
cli
iret
int
scas
insb
fs
push
add
fs
xchg
cmpsl
popa
jge
imul
les
das
test
nop
or
in
loopne
cmc
add
fbld
mov
mov
fistl
push
add
sahf
lea
sbb
cmp
jp
cmp
or
out
mov
ret
addl
pushf
xlat
clc
xor
scas
popa
jmp
movsb
inc
daa
stc
fsubl
jns
push
std
and
sbb
cmp
call
aaa
sbb
jp
jnp
ljmp
cmp
inc
mov
lcall
cltd
xorl
add
jne
push
push
in
cmp
cmc
pushf
or
call
imul
push
lea
and
mov
cli
xor
mov
inc
adc
inc
inc
cmp
arpl
sub
iret
inc
mov
lcall
sbb
jbe
dec
mov
and
xchg
out
notl
push
loope
adcl
ds
add
icebp
stc
iret
or
in
repz
inc
mov
adc
and
rol
dec
cmc
pop
shrb
outsb
mov
ja
repnz
mov
inc
test
ficompl
test
jg
arpl
and
mov
lea
sbb
mov
or
fildl
mov
xchg
in
xor
push
jb
push
and
xor
add
imul
por
mov
xchg
xchg
rclb
mov
scas
testl
jbe
ss
push
shrl
xchg
aad
ret
les
ficoml
daa
lahf
add
xlat
mov
xor
mov
in
in
xor
je
inc
xor
cmp
push
repz
popa
jbe
xchg
fdivr
shll
and
sbb
jmp
in
scas
popf
xchg
mov
mov
lods
shll
lods
rol
jp
adc
xor
inc
pop
ja
sub
insl
add
fwait
clc
sarb
mov
popf
dec
xlat
xchg
push
scas
sbb
xor
ret
icebp
in
xchg
mov
imul
or
cmp
xchg
hlt
imul
in
mov
repz
out
mov
mov
push
stos
cmp
and
mov
xchg
subb
popf
mov
xor
pop
cmp
ss
mov
jmp
add
in
js
out
test
rorb
jg
sarb
mov
mov
cmpsb
inc
mov
lcall
test
test
mov
fimull
mov
jge
xor
shrb
repnz
rorl
ds
mov
sbb
cmp
jae
mov
ds
mov
xchg
call
repz
push
push
pop
mov
arpl
das
les
pop
ret
ss
dec
cs
jle
fpatan
out
xor
adc
mov
push
dec
jmp
pop
jmp
sub
scas
adc
popf
enter
subl
cmp
mov
fnsave
not
mov
mov
add
es
pop
pop
cmp
data16
add
add
pop
pop
sub
fimull
xor
push
pushf
sub
ljmp
addl
mov
addr16
jecxz
nop
or
or
push
pop
sub
lods
adcb
pop
gs
in
mov
mov
mov
dec
insb
je
mov
scas
sbb
stc
jae
mov
rolb
fs
cmp
aam
xor
push
lret
xor
mov
dec
sub
push
adc
aaa
xor
push
pop
movsl
xor
sbb
mov
jo
stc
cmp
adc
ret
push
cmp
addr16
adc
aas
push
jp
push
sarl
in
pushf
or
cmp
fists
xchg
pop
mov
ret
loopne
mov
movsb
mov
cmc
mov
dec
or
pop
jno
movsb
push
js
dec
push
cmp
xor
clc
ud0
ficompl
pushf
sub
notb
cmp
adc
ret
mov
or
dec
popa
arpl
sub
xor
aaa
pop
leave
xchg
sbb
xchg
mov
mov
shlb
out
sbb
or
mov
pop
fwait
ss
xchg
xchg
xchg
fcoml
pop
mov
cmp
push
mov
std
xlat
sbb
mov
popf
dec
pop
xchg
aaa
out
sbb
pop
in
andl
add
sbb
aad
and
and
pop
sub
cmp
in
stos
jns
mov
into
inc
mov
mov
mov
fs
ja
mov
movsb
fwait
inc
mov
add
pop
xchg
cmp
orb
or
iret
adc
mov
ds
into
mov
push
add
stc
std
into
inc
jmp
js
jle
jle
adc
iret
iret
leave
fbld
mov
lock
inc
xchg
pop
scas
popa
aam
adc
stos
lret
movsb
jae
negb
xorl
leave
or
in
mov
or
sbb
xlat
fwait
pop
aas
xor
push
adc
pop
rorb
pop
sbb
dec
int
fcmovne
inc
lock
lods
dec
leave
push
ror
hlt
or
ret
aaa
mov
mov
lret
xor
aaa
xor
icebp
jmp
enter
inc
pop
push
mov
and
lcall
mov
jl
ja
lret
jno
sbb
jl
pop
mov
mov
aam
mov
fmul
es
aaa
pusha
repz
stos
rorb
dec
jle
mov
sbb
cli
add
les
dec
rcl
push
push
movsl
fwait
and
inc
mov
pop
les
int
jb
inc
pop
es
dec
cmp
cmpsb
lock
clc
std
cmp
lods
lret
cmp
lods
push
scas
jge
flds
jle
roll
sub
adc
xchg
jle
loop
shll
mov
pusha
inc
xchg
adc
push
push
and
ret
mov
ret
mov
dec
ss
test
into
cmp
ret
cmp
lcall
push
push
shll
mov
pop
mov
inc
sbb
imul
inc
pop
mov
add
mov
fwait
push
cmpsb
jo
ficoms
xchg
mov
mov
jo
lahf
and
gs
mov
dec
js
jp
mov
push
jl
mov
adc
leave
call
xchg
insl
orl
mov
xor
and
stos
pop
arpl
movsl
jp
pop
jmp
movups
inc
cwtl
mov
sub
xor
cmpsl
outsl
mov
call
cwtl
inc
divb
and
mov
mov
outsl
iret
push
sbb
mov
shlb
es
fmull
aas
cmc
xchg
pop
adc
cmc
adc
fucom
subl
sub
pop
out
stc
inc
mov
cmp
fcoml
push
enter
clc
mov
push
mov
call
inc
sbb
int3
jns
ljmp
pop
leave
xchg
adc
incl
jbe
mov
pusha
inc
cmp
add
cwtl
and
pop
and
clc
mov
pop
test
jge
add
inc
sbb
pushf
mov
lock
mov
push
or
push
test
adc
insl
mov
push
sbb
pushl
push
pop
mov
pop
decl
leave
dec
adc
bound
pop
xchg
outsl
ret
addr16
leave
mov
cld
ret
lcall
gs
inc
jle
pop
loop
test
mov
push
adc
flds
scas
jno
iret
movsb
push
jb
sub
jge
outsl
mov
mov
ret
push
sbb
cmp
mov
ret
fldcw
sahf
subb
mov
ret
arpl
data16
inc
jmp
mov
fucompp
cmc
lret
fst
lods
outsb
mov
push
jmp
lahf
mov
pop
int3
xchg
iret
test
jge
cmpsl
jmp
push
pop
pop
dec
std
popa
and
into
sahf
jg
movsl
xchg
int
push
dec
mov
push
out
popaw
jne
pusha
xor
in
push
hlt
outsl
int3
stos
test
jmp
xor
sub
das
in
loop
dec
test
stos
push
scas
sbb
imulb
cmp
mov
int
shrl
and
adc
sti
jae
dec
push
int3
leave
fbstp
push
push
jmp
sub
mov
outsb
mov
aaa
pop
add
loop
jle
popa
lea
shll
pop
imul
fidivl
push
cli
int
mov
repz
pusha
sbb
movsl
xchg
scas
mov
or
inc
stos
int
mov
cmp
std
lock
popf
dec
jb
jns
fprem
fs
ja
xchg
push
push
and
inc
push
pop
pop
fcom
movsl
xor
js
xor
sub
push
xchg
pop
dec
pop
mov
arpl
cmpsl
bound
mull
inc
or
iret
fcoms
sbb
adc
push
adc
cs
imul
xchg
xchg
sbb
jns
cmc
pop
pop
push
mov
mov
push
sbb
mov
fldt
iret
xor
dec
xchg
pushf
cmp
stos
adc
lret
and
xchg
mov
aad
out
jg
pop
sub
push
add
mov
pop
test
insb
add
cmpsb
sti
add
xchg
mov
movsb
decb
xor
xchg
clc
daa
stos
and
ss
add
push
inc
fwait
dec
dec
mov
fs
adc
imul
sub
sti
sub
cmp
inc
push
inc
mov
lea
data16
push
js
push
sti
sub
add
mov
test
sub
xor
inc
lea
lahf
cmpb
outsl
xor
fs
dec
sub
stc
push
popf
xor
dec
insl
cmpsb
mov
mov
stc
sbb
out
andl
push
mov
sbb
jp
icebp
sub
pop
ret
hlt
rcrl
pop
inc
in
inc
sbb
movsl
inc
fldcw
or
aad
mov
mov
in
adc
call
mov
jbe
and
aaa
rolb
mov
adc
rcrb
test
orl
inc
mov
div
dec
push
lahf
test
loopne
mov
inc
clc
pop
orl
ret
xchg
cmp
out
lods
adc
sarb
dec
sbb
xchg
rcll
pop
sbb
mov
sbb
mov
dec
sub
sbb
jle
fdivrp
sbb
in
pop
and
stos
xchg
push
ds
mov
mov
stos
lods
adc
xchg
daa
adc
iret
test
sar
and
or
pop
out
out
push
push
outsl
jmp
les
cli
dec
in
jb
inc
das
xor
addr16
shlb
jo
xchg
pop
mov
icebp
int
push
shlb
shll
adc
jno
or
sub
scas
idivb
loopne
xor
mov
push
std
nop
inc
mov
je
push
xorb
pop
xlat
inc
shlb
cmp
pop
xchg
sub
in
mov
subl
in
shrb
sbb
lock
adc
test
aad
xchg
gs
cmp
push
dec
push
pop
je
xchg
ret
fs
inc
jb
jnp
movsbl
scas
enter
pop
mov
push
jbe
es
and
ret
and
cld
inc
push
leave
add
shlb
cmp
movsl
adc
out
jne
in
test
test
mov
adc
sub
xor
pop
or
cmp
loope
add
inc
or
dec
adc
int
clc
push
call
loopne
fisubl
sub
imul
shll
movsl
pop
cmpsl
js
lods
and
fcmovnb
aad
aad
sti
fwait
xlat
test
inc
mov
jg
aam
inc
fst
mov
aam
or
jb
ds
mov
dec
dec
sar
fstps
inc
mov
je
movl
rol
dec
push
dec
out
xchg
lods
sub
cmp
pop
mov
jp
jmp
sub
es
cmp
sub
inc
pusha
fdivrp
adc
mov
mov
aaa
pop
jb
adc
lret
sub
jns
cmp
and
mov
jo
xor
sub
clc
test
fdivrl
push
or
cmp
lea
xchg
je
mov
sti
lret
or
shr
mov
repnz
inc
fsubrs
sti
mov
xchg
shl
jnp
xchg
mov
xchg
add
cmc
mov
jecxz
xchg
pop
pop
adc
imul
shrl
xchg
mov
addr16
mov
lcall
jno
push
movsb
jg
xor
icebp
sbb
mov
cmpsl
lea
inc
repz
insl
jp
loopne
xchg
in
sbb
or
mov
cmc
rolb
mov
ljmp
or
and
push
cwtl
rcrb
jl
stc
push
scas
popl
sbb
enter
je
mov
stc
out
cmp
sbb
rcrl
mov
mov
jae
ret
jae
pop
and
stos
lods
mov
stos
pop
movsb
push
int3
dec
add
cld
push
or
sahf
clc
aad
mov
test
roll
into
jno
jne
insb
jl
out
mov
aam
rorb
dec
es
adc
dec
inc
jge
test
cltd
divl
aas
fisttpl
stc
sbb
cmp
push
aad
outsl
jecxz
jnp
pop
mov
out
mov
adc
jg
jb
cmp
jne
les
or
pusha
mov
mov
dec
lret
fsubrl
xchg
ss
in
jno
mov
enter
dec
xchg
pusha
es
pop
and
and
push
adc
fisubs
int3
lods
mov
cmp
notb
mov
mov
mov
xchg
and
loop
pop
in
roll
jne
pop
mov
push
or
add
adc
lods
dec
mov
inc
nop
dec
xchg
sahf
push
dec
push
ljmp
out
push
mov
jnp
pop
jp
shlb
icebp
pop
cmpl
pop
and
and
adc
push
and
loop
mov
aaa
push
sbb
push
rolb
pop
mov
repz
push
jo
push
xchg
fidivl
bound
or
gs
repz
mov
icebp
xor
mov
stos
jae
je
mov
xorb
mov
jb
sub
mov
movsl
mov
add
rcl
push
ljmp
push
hlt
stos
xor
inc
jecxz
cmp
ret
and
gs
jle
inc
bound
out
insb
scas
sbbb
jecxz
xchg
fsub
or
ret
add
outsb
pop
add
fsubs
inc
push
push
negl
mov
xchg
mov
sbb
out
call
jg
std
add
cld
imul
cmp
xor
mov
and
ss
fistpll
pop
or
or
cwtl
loope
lods
jb
add
test
pop
fwait
out
fwait
ss
mov
sbb
rol
add
cltd
mov
sahf
mov
in
pop
jmp
or
jl
add
pop
mov
in
mov
cmp
mov
push
mov
mov
jbe
ds
lds
push
insb
pop
cmp
xor
movsl
push
cli
push
cmp
shlb
popa
imul
fs
push
xchg
ja
xchg
jo
es
lods
mov
inc
push
inc
out
push
xlat
icebp
jecxz
push
and
movsb
int3
addr16
mov
jl
fadds
add
xlat
sbb
pop
push
fimull
sbb
ss
loopne
hlt
adc
xchg
shll
push
push
iret
and
and
pop
stos
loop
dec
ret
or
hlt
or
addb
sahf
cmpsl
rclb
mov
rol
test
enter
ret
cmpb
xchg
add
mov
std
faddl
inc
aas
sbbb
fcoms
js
xor
imul
lcall
adc
jecxz
dec
xor
scas
shll
mov
inc
or
test
repnz
mov
mov
scas
xchg
push
and
push
and
add
rcl
fcompp
dec
pop
inc
rcrb
jle
add
sub
out
lret
xchg
pop
cltd
and
pop
rorl
fnstsw
sub
lahf
cmp
add
mov
jl
fsubl
xchg
cmp
fnstenv
addr16
sub
xorb
aas
enter
in
dec
jnp
lret
shll
xor
in
test
fldl
cmpsl
fwait
sbb
cmp
bound
lcall
add
mov
mov
dec
cld
lods
push
das
or
cmp
xlat
daa
pop
inc
mov
and
test
outsl
inc
sbb
jno
pop
and
sti
push
inc
adc
insb
mov
push
loope
rcrl
ficompl
fcoms
mov
icebp
ret
xor
push
xchg
cmc
popf
das
or
mov
lds
and
js
xchg
xlat
sub
inc
jbe
in
jbe
fs
mov
xor
jmp
scas
xor
and
int3
or
adc
ret
fiaddl
or
inc
clc
add
mov
movsb
movsb
inc
mov
stc
in
fidivl
jge
inc
push
mov
fldcw
movsl
mov
daa
pop
in
adc
nop
cmc
or
imul
sbb
insl
pop
mov
xor
add
cmp
cmpl
sbb
mov
gs
movsb
adc
orb
fdivr
add
mov
std
daa
in
aad
int
sbb
adc
cmc
out
sbb
popf
inc
cwtl
arpl
push
daa
and
ret
mov
stc
mov
mov
xor
fisubrl
adc
sahf
loop
mov
lods
dec
dec
jg
jge
xchg
loope
cld
add
sub
bound
and
jl
xchg
jg
aam
sbb
ljmp
add
aad
sbb
jmp
ret
decl
aas
pop
xchg
mov
cmp
add
icebp
int3
cmp
out
mov
int3
push
xchg
cwtl
add
ret
mov
xchg
inc
add
rolb
ja
push
push
mov
div
aaa
adcb
jno
cmpsb
mov
std
jbe
add
cld
adc
cmp
decb
inc
mov
cmp
leave
ss
outsb
dec
jo
push
dec
mov
imul
pop
lods
imull
lods
xchg
decl
dec
sub
or
sub
or
ljmp
add
adc
and
xor
cmp
out
loope
mov
mov
push
add
test
js
xor
pop
sub
and
out
sbb
stos
pop
in
bnd
lahf
cmp
icebp
shrb
or
jns
pusha
adc
lret
mov
cld
and
cmp
loop
in
push
add
lcall
or
enter
dec
sahf
in
decl
repnz
daa
push
lret
bound
add
in
pushf
dec
rorb
xchg
in
rorl
clc
iret
scas
push
and
in
adc
pop
and
call
hlt
pusha
lret
xor
stos
jae
lahf
ret
inc
cmp
and
ja
cmp
cld
mov
aam
sub
mov
fmuls
cmp
fs
mov
pop
push
inc
arpl
mov
mov
push
repnz
cmp
push
in
cmp
push
scas
out
mov
sbb
cmpsl
cmpsb
sbb
mov
push
cmp
inc
in
cmp
push
pop
ret
mov
cmpsb
push
jne
jnp
mov
or
add
nop
leave
mov
mov
les
sbb
addb
js
js
subb
mov
outsb
add
jae
stc
movsl
std
in
xor
fisubrl
imul
test
jb
lods
jne
xchg
push
lret
add
add
cmp
and
push
adc
lds
cwtl
push
dec
cmp
jecxz
iret
loopne
xchg
dec
add
arpl
out
xor
and
pop
adcl
lea
sbb
add
les
test
or
lret
push
sbb
rolb
inc
cmp
xchg
mov
roll
int
aas
dec
aaa
insl
insb
test
outsl
push
test
sbb
aad
fldl
mov
mov
popf
sbb
pop
and
mov
cmpsb
or
jae
outsb
loop
add
xchg
push
add
sarl
das
fisubs
mov
xor
jecxz
xor
pop
ja
dec
cwtl
push
insl
push
pop
pop
or
dec
sub
dec
dec
sub
lds
movsl
aam
jo
dec
je
aam
pop
out
in
pop
xchg
mov
notl
outsl
sbb
mov
push
and
add
push
fdivp
dec
mov
mov
jp
in
jnp
jb
push
adc
cmova
data16
lods
repnz
out
dec
test
mov
xchg
out
stos
arpl
nop
inc
pop
outsb
lds
pop
sbbb
dec
sbb
xchg
mov
push
add
lods
inc
dec
fiaddl
jmp
inc
xor
pop
outsl
loopne
sub
xchg
in
pop
sub
jnp
and
bound
addr16
pop
adc
add
xor
push
xor
mov
cmp
enter
clc
add
jmp
pop
xchg
pop
aas
lods
repnz
push
push
pop
push
push
out
or
out
sub
xor
lods
xchg
daa
out
jns
cmp
xchg
lahf
stos
dec
and
cwtl
imul
add
dec
pop
in
push
cwtl
lods
dec
rorl
xor
xor
ds
jae
ret
pop
mov
push
jbe
aaa
loope
pop
push
or
loopne
dec
fidivrs
jbe
sub
icebp
jbe
dec
or
ret
sub
or
test
aas
dec
add
outsl
ds
test
daa
cmovbe
insl
inc
push
jno
ja
push
xchg
iret
arpl
ret
add
test
test
int
scas
push
fs
ja
sbb
popf
push
pop
xchg
outsl
xchg
xor
mov
mov
daa
jno
sub
push
xchg
sub
iret
shlb
push
mov
jns
sub
cld
and
shlb
popa
call
test
xchg
jbe
call
push
mov
test
lcall
pop
cld
in
xor
lods
outsb
bound
ja
xchg
mov
xchg
popa
push
out
mov
clc
push
xor
stos
je
fs
fwait
std
cmpsb
out
outsb
loope
jl
cmp
lods
addr16
pop
dec
mov
pusha
jp
out
push
leave
sbb
pop
lods
adcb
pop
add
bound
pop
cmp
mov
icebp
ss
fldt
js
rcll
add
ja
inc
jns
fdivrs
jge
je
cmp
mov
rorl
xlat
cmp
jmp
enter
adcl
cli
pop
mov
js
or
jae
xchg
push
xor
cmpsb
sahf
and
movsb
push
ror
icebp
hlt
fcompl
shl
xchg
adcb
ljmp
cs
and
sbb
imul
cmp
lret
add
cmpsb
pushf
jmp
ja
int
into
xchg
out
xchg
sub
cmp
cwtl
dec
cmp
sahf
xchg
scas
fsubs
shlb
stc
out
push
xor
lahf
fstl
xchg
adc
dec
inc
scas
and
add
mov
mov
std
push
lahf
dec
mov
mov
push
clc
dec
fsubrp
int
aad
aas
dec
inc
nop
and
cmp
or
ljmp
ljmp
popa
gs
add
xor
mov
test
mov
jno
pop
inc
inc
mov
clc
sahf
mov
jge
sti
arpl
in
inc
cmc
add
icebp
sbb
outsl
ficoml
arpl
push
mov
imul
or
cmc
inc
iret
cld
cmp
ss
andb
inc
push
push
xlat
sub
push
mov
nop
push
mov
cmp
mov
iret
lds
test
cwtl
xlat
fdivr
mov
xor
inc
mov
add
mov
xor
dec
push
push
icebp
cmp
aaa
fbld
pushf
add
mov
pop
sub
mov
add
int
adc
mov
sub
mov
xor
movsl
mov
mov
adc
jnp
xor
mov
cltd
fsts
lock
sbb
outsl
jbe
xor
and
loopne
fldenv
call
imulb
pop
adc
sub
push
out
mov
std
mov
aad
cmpl
mov
mov
pop
mov
popa
inc
mov
daa
popf
xor
dec
add
lds
add
and
mov
jmp
dec
push
cmpsl
ds
inc
jnp
daa
repnz
jno
or
mov
jae
stos
push
andb
loope
icebp
mov
inc
loopne
ror
pop
xchg
xor
outsl
pop
cmpsl
sub
or
pop
add
ss
das
push
fidivl
add
fdivl
jg
or
addr16
sbb
jno
xchg
std
or
stc
ds
scas
daa
push
mov
stos
inc
and
add
cltd
and
fucom
in
enter
or
addb
xor
sub
jno
or
in
push
xchg
jp
cmpsb
data16
mov
fmull
mov
mov
imul
jmp
es
sbb
sbb
jb
jne
insl
dec
in
adc
dec
fimull
mov
mov
dec
or
pop
lret
push
aad
dec
pushf
push
into
add
arpl
and
shrb
cltd
cwtl
xor
sbb
pop
leave
mov
mov
lahf
xor
lea
add
jno
mov
scas
ficompl
shll
testl
aaa
push
mov
and
inc
out
jno
mov
push
test
cmp
ret
or
mov
lds
rclb
fidivs
push
inc
stos
sub
jne
ret
aad
xor
cmp
jmp
jmp
mov
mov
mov
jge
xor
sub
jmp
push
mov
hlt
xor
int3
insb
pop
xor
adc
push
lea
push
mov
and
ficomps
loopne
mov
lret
and
sbb
xor
mov
lea
push
popf
in
lret
gs
repnz
notb
mov
scas
fdivp
lods
jp
xor
int3
outsb
jecxz
int
pop
sbb
addr16
aam
push
fistl
mov
pop
loope
dec
test
mov
rorl
into
jne
mul
les
cmp
xchg
hlt
aaa
shrb
or
pop
pop
mov
push
mov
mov
in
gs
inc
cmp
push
mov
xchg
lods
push
ds
or
rorl
xchg
lds
loopne
jecxz
invlpg
imul
pop
ja
ljmp
mov
vshufps
cmp
mov
mov
ja
into
leave
lcall
in
or
push
add
add
dec
cltd
mov
or
bswap
leave
lret
add
mov
int
roll
js
mov
loop
jle
repnz
inc
mov
pop
mulb
jns
dec
outsb
inc
cmpsb
push
adc
iret
jnp
subb
test
push
sahf
in
dec
sub
inc
mov
mov
jno
xor
mov
cmc
cmpsb
mov
je
in
pop
adc
dec
adc
movl
add
sbb
add
scas
sub
sub
add
pop
rcl
mov
xor
clc
pop
out
adc
mov
mov
ficomps
lcall
js
test
jo
xor
inc
mov
arpl
adc
fimuls
xchg
bound
push
arpl
or
xchg
outsl
inc
push
sub
add
sbb
adc
ja
push
push
sub
lea
test
inc
cmp
add
cld
add
mov
xor
stos
ljmp
subb
dec
loop
lret
add
xchg
shrl
xor
jmp
pop
and
and
push
sub
ljmp
int3
test
outsl
data16
jnp
movsb
in
adc
vshufps
pop
ljmp
aad
lods
es
xchg
ret
leave
fdiv
pop
int3
ret
xchg
icebp
stos
mov
loopne
mov
mov
inc
cmpb
pushf
ljmp
outsl
lahf
subl
in
loopne
imul
dec
cmpsb
dec
push
lret
jl
gs
fsts
cmp
inc
testl
shr
xor
jae
rclb
jnp
xchg
mov
andl
add
aam
icebp
xor
les
push
insl
sti
fstl
aam
lret
and
in
or
xlat
call
cmc
mov
dec
jmp
mov
sub
inc
pusha
int
cwtl
jnp
aam
fsubrs
jp
out
mov
add
adc
xlat
aam
cmp
or
cli
dec
std
shrb
xlat
out
les
cwtl
ror
lds
mov
add
pop
cmp
pop
jno
and
xchg
add
mov
dec
xor
movq
and
or
pop
fucom
xchg
std
cwtl
xor
push
addr16
xor
or
dec
fisttps
push
pop
xor
imul
pop
psraw
into
out
lahf
sub
add
or
nop
mov
fwait
movsb
popa
enter
and
cmp
stos
pop
dec
shlb
fcomip
ljmp
inc
lea
sub
jb
inc
xor
adc
adc
pop
xchg
pop
adc
pushf
cmc
jae
out
mov
fdiv
push
push
pop
pop
adc
xor
sti
add
mov
imul
aad
sbbb
adc
sub
adc
inc
xchg
fdivrs
sub
lods
repz
rclb
in
pop
lahf
mov
xchg
push
loopne
daa
cwtl
pushf
pop
pop
xchg
inc
stos
subl
push
pop
lods
push
lahf
adc
and
ret
push
jle
rorb
imul
pop
cli
mov
inc
fwait
andl
pop
pop
sbb
dec
nop
aam
lock
or
mov
stc
and
mov
pop
int3
sahf
jno
dec
mov
divb
xor
rol
daa
popa
mov
aas
or
push
stc
in
adc
xchg
pop
cmpsb
mov
lret
push
bound
ja
adc
mov
lock
xchg
jno
loop
or
mov
arpl
push
cmp
mov
pusha
int
pop
jp
sbb
enter
mov
cmpsb
pop
mov
cmp
lcall
stos
sub
push
sbb
xchg
loop
loope
int3
adc
jnp
sbb
xchg
jp
mov
xor
inc
ljmp
rcll
mov
mov
cmc
repnz
xor
and
push
mov
sti
outsl
imul
adc
jbe
sbb
fstps
jl
add
cmp
jbe
or
stc
decb
push
mov
mov
mov
xchg
test
mov
push
push
inc
ds
xchg
iret
inc
and
fsubl
cld
test
out
cwtl
jmp
cltd
sahf
sub
sub
cmp
add
pop
cltd
push
cmp
js
icebp
dec
cmp
mov
out
sbb
mov
jp
inc
icebp
mov
inc
sahf
ja
sub
cmpsl
int3
mov
add
mov
clc
xor
je
mov
mov
xor
leave
mov
mov
pop
push
push
mov
or
push
sub
sub
mov
std
sub
pop
test
lods
adc
ljmp
cmp
pop
xor
jecxz
push
mov
aam
xchg
aaa
scas
in
insb
inc
pushf
lods
xchg
xchg
popf
lret
stos
scas
jne
arpl
or
mov
daa
jge
loopne
adc
outsb
jge
in
xchg
iret
mov
jmp
cmp
mov
xchg
lcall
jmp
in
stos
lods
in
dec
sti
dec
ss
fs
rorb
daa
stc
call
mov
sahf
and
and
lds
pop
dec
cmp
add
je
mov
aad
xchg
aam
xor
lds
pop
lds
nop
dec
xor
outsb
mov
aad
xor
mov
pop
or
or
mov
jmp
jp
test
or
sub
jb
xchg
add
mov
lock
rclb
mov
jae
insl
inc
jp
inc
lock
pushw
and
cmp
adc
inc
inc
push
or
fdivrs
call
add
dec
lea
data16
mov
mov
rorb
clc
jae
mov
sub
adc
jp
aam
insl
sub
mov
push
mov
push
pop
sbb
in
dec
mov
sub
jb
aad
nop
pop
jecxz
in
sti
sub
incl
lahf
sub
inc
fstl
cltd
jge
push
dec
out
cmpl
mov
xor
push
stc
jb
das
xchg
jne
add
lock
rorl
lret
test
push
push
es
test
mov
shll
push
fisttpl
cmc
or
jge
ja
xorps
mov
imul
mov
and
jl
cmp
gs
in
sub
sub
add
jp
popa
inc
jle
sbb
dec
cmpsb
test
iret
xchg
movsb
or
or
ds
cmp
or
sub
push
cld
cmp
push
lcall
outsb
push
imul
add
fwait
mov
add
pop
ja
push
frstor
cmpsb
push
shlb
and
mov
cmp
iret
xor
jle
call
lea
cmovae
jns
fistpl
out
sub
pop
mov
push
add
sub
sti
dec
add
sub
dec
nop
arpl
stc
outsl
fsubrp
mov
xor
aas
je
lods
aam
or
mov
out
pop
mov
popf
xchg
jne
je
ret
aam
mov
fcoml
dec
add
into
mov
jne
mov
cmp
mov
xchg
sbb
dec
repz
lock
pop
in
mov
filds
jg
sahf
aam
insl
jnp
mov
mov
test
shr
lock
xchg
adc
je
cmpb
sbb
in
out
movsl
jns
add
xor
adc
sub
jmp
mov
test
push
pop
loop
mov
lret
pop
cmpsb
xchg
sbb
jmp
mov
xor
ljmp
hlt
push
bnd
cmp
dec
outsl
fldcw
sbb
notl
aam
and
fdivrp
addr16
dec
mov
mov
xlat
test
iret
sbb
popa
and
mov
jbe
rcrl
cmp
xchg
mov
loopne
into
sbb
jnp
sub
push
cwtl
scas
push
stc
js
repz
std
adc
lea
cmp
push
cmc
arpl
jle
ds
lret
xor
scas
outsb
ret
sub
mov
sub
rolb
xchg
int
xor
pop
mov
or
jb
push
je
mov
xor
popf
lcall
pop
aam
and
movsb
adc
dec
push
push
int
xchg
jmp
out
push
mov
push
movsl
pusha
adc
jns
lret
mov
inc
outsl
pop
inc
nop
insb
outsb
mov
push
xor
push
xchg
test
dec
mov
xlat
pop
hlt
cmp
sahf
rcrl
ds
mov
aaa
insl
insb
mov
mov
mov
lds
jmp
rcl
cmp
fisttpll
jo
or
imul
mov
cmpsb
push
pop
fisubrs
sbb
sbb
sub
lcall
movb
mov
mov
add
js
and
inc
mov
insl
xorl
xor
add
sbb
jle
push
jne
mov
insl
pop
sti
lcall
pop
xchg
outsl
jmp
push
mov
add
les
jle
addr16
fisttpl
inc
sub
add
cwtl
test
stos
xchg
scas
sub
fstl
pushf
mov
sbb
rcrb
xor
fcompl
dec
push
popa
stos
and
js
iret
sarl
mov
and
cltd
fnstcw
mov
xorb
xchg
mov
movb
dec
pop
std
inc
into
imul
inc
fwait
aad
xchg
std
inc
xchg
or
jmp
js
adc
not
and
cmc
fs
mov
shlb
lret
ja
sbb
inc
clc
mov
xchg
imul
push
clc
jmp
dec
in
loope
jle
add
xor
sub
cmp
jmp
fwait
pop
adc
loop
mov
addl
mov
add
dec
addr16
fs
jle
jne
and
mov
jo
insb
inc
push
add
mov
scas
lods
fimull
pop
xor
in
push
outsb
push
mov
lds
dec
pop
ds
xchg
inc
adc
loopne
ror
lods
pop
mov
in
sub
cltd
fwait
pop
mov
insl
sti
jg
sti
mov
xor
sub
js
dec
sbb
iret
or
sub
lcall
lods
ret
fstpl
repz
std
arpl
shrb
insb
pop
adc
sbb
xor
lds
popa
jmp
xchg
in
sahf
das
sahf
xchg
hlt
lock
out
mov
neg
jle
repz
lock
sbb
cli
ds
mov
mov
sub
test
and
arpl
jg
dec
or
inc
cmp
adc
jo
dec
pop
lods
movsb
push
ja
xor
and
pop
add
fstpt
inc
movsb
fimull
cmp
pop
stos
lcall
xchg
xchg
add
or
mov
movsb
pop
sub
sub
push
or
cmc
nop
movsb
lcall
dec
xchg
jge
mov
push
mov
ja
sub
add
sub
inc
cmp
pop
cld
jbe
mov
lcall
lahf
test
mov
out
inc
dec
std
lock
sub
rol
dec
cmp
sub
push
xor
fsubr
mov
add
and
jmp
pop
mov
xchg
movsb
shl
hlt
div
cmpsl
sub
gs
into
shll
aaa
and
out
movsl
mov
mov
push
fsubr
lock
mov
xchg
add
xchg
dec
xchg
jmp
xor
mov
dec
and
aad
push
outsl
dec
orb
mov
pop
ljmp
enter
xchg
sbb
dec
sub
mov
repnz
jne
xchg
cmp
xchg
or
mov
jb
sbb
ljmp
outsb
push
lret
sbb
ret
dec
jle
repz
adc
add
add
xorl
dec
jl
xchg
mov
adc
aam
dec
adc
dec
inc
in
mov
push
ret
cs
fdivp
or
and
xchg
mov
pop
leave
mov
in
mov
fmull
cmp
imulb
lcall
pop
jmp
sub
inc
jno
es
sub
cltd
leave
jp
testb
add
sarb
in
push
insb
andl
sub
cmp
push
inc
jge
pop
pop
or
push
fwait
lods
xor
hlt
jl
cmp
dec
mov
lret
aam
daa
clc
daa
push
pop
mov
cmp
sub
ja
pop
and
pop
add
les
push
add
pop
insl
sbb
inc
cmp
ds
je
cmp
jmp
xchg
add
jle
repz
stc
xlat
stos
and
xchg
imul
mov
addr16
xchg
and
sbb
in
and
cmc
jl
rcrb
ja
adc
mov
out
mov
insb
mov
iret
push
cs
sbb
or
xchg
lods
repnz
mov
mov
stos
ds
movsl
imul
sub
ret
adc
pusha
add
jmp
xchg
lods
or
pop
cli
mov
xchg
aaa
and
xchg
adc
movsb
and
push
and
les
xor
jne
dec
and
xor
mov
adc
jbe
mov
mov
pop
scas
cmp
push
arpl
in
xor
in
inc
je
into
xor
inc
shlb
ljmp
movsb
stos
mov
mov
adc
out
mov
imul
shll
clc
sub
jbe
movsb
xchg
mov
pop
xor
jae
outsb
inc
and
test
js
data16
add
or
xchg
jmp
sbb
orl
ret
lret
fisttpll
sub
rcr
or
mov
xchg
pop
dec
test
loope
cltd
in
fisubs
enter
out
cmp
std
xchg
mov
inc
push
xchg
sbb
jno
notb
fisttpl
xlat
rorl
ds
loop
mov
call
push
and
pop
lock
or
push
outsl
imul
xchg
jmp
xchg
lret
inc
and
pop
pop
ret
mov
and
aad
hlt
loope
lods
fs
jb
lods
sbb
ds
ljmp
loope
pop
cmp
lods
add
xlat
sbb
xchg
in
scas
out
out
or
xchg
mulb
inc
or
jmp
pop
lock
xchg
jge
shlb
ja
pop
dec
js
fsub
and
jl
ss
mov
xlat
and
pop
lret
leave
push
pop
push
pop
inc
out
push
xchg
or
vpmulhw
mov
jbe
rorl
lock
or
jnp
pop
roll
inc
je
push
xlat
repz
popf
lret
icebp
and
add
sub
aaa
add
mov
push
xchg
mov
lods
jg
movsb
lret
aaa
ret
pop
aas
fldenv
xchg
iret
mov
repz
testl
mov
je
sahf
sub
mov
popl
testl
test
cli
and
jl
add
sarb
bound
stc
test
pop
mov
pop
js
xor
outsb
ja
aad
mov
lahf
icebp
xchg
lea
cmpl
push
das
stos
leave
jnp
mov
and
lods
xlat
or
pop
cmp
push
sbb
xor
xchg
add
adc
cmp
xor
xchg
shll
pop
xor
jb
xchg
enter
iret
lcall
outsl
mov
lds
and
call
mov
and
cmpsb
gs
in
pop
mov
mov
movb
xlat
and
cmp
adc
push
stos
fsts
icebp
out
lea
imul
dec
lcall
cmc
sti
data16
jo
add
test
jmp
mov
add
lods
sbb
mov
jns
stc
adc
aam
bound
bound
insl
aad
rorb
xchg
push
and
sbb
pop
hlt
xchg
inc
std
pop
mov
push
jp
fidivs
sarb
xchg
and
in
xchg
jl
mov
leave
pop
lret
pop
sbb
imul
cmp
mov
cmpsl
imull
outsb
push
lds
mov
loopne
loop
scas
xchg
add
aad
adc
jo
xchg
in
std
aad
mov
gs
dec
mov
int
jg
xor
cmp
test
imulb
ret
jno
mov
rcrl
ss
push
cmpsl
adc
push
fcompl
jns
leave
es
shr
push
lods
add
pop
push
and
ret
or
adc
fstl
cmpsl
jno
inc
xchg
ss
lret
loop
data16
lods
shll
jge
xchg
aas
xor
xor
inc
clc
lret
push
push
faddl
cld
pop
loope
insb
cmp
jb
xor
mov
inc
fcomps
jl
sti
pop
sub
inc
lock
cmpsl
je
fdivs
std
lods
insb
out
jno
rclb
inc
fldcw
push
cs
mov
mov
cmp
mov
ss
mov
outsl
aad
dec
adc
aas
and
bound
dec
jl
and
push
mov
mov
insb
mov
inc
aam
mov
inc
and
sbb
pusha
fsub
lcall
addr16
stc
fiadds
jle
mov
addl
mov
fisubrl
cltd
out
dec
dec
popa
and
stos
mov
xchg
sysexit
in
xor
and
mov
lods
testb
out
adc
bound
mov
jo
pop
cmp
add
inc
cmp
lock
lcall
loope
push
cmp
clc
push
aam
mov
lods
xor
push
mov
adc
or
je
inc
ret
pop
gs
xchg
scas
insb
ret
cmp
add
lds
outsl
fistpll
sub
enter
push
jecxz
fs
imul
sub
mov
add
je
push
xorl
xchg
fldenv
daa
or
jmp
mov
fsubs
xor
add
je
push
mov
stc
add
stc
or
push
les
imul
sar
mov
in
daa
jbe
push
jecxz
fildll
mov
or
and
pop
and
cld
cmp
adc
jp
nop
jp
and
jl
xchg
push
mov
fldcw
adc
xlat
push
stos
js
mov
lods
sub
jns
shrl
xor
xchg
or
daa
sahf
arpl
fsts
mov
add
jns
cmovbe
in
adc
pop
lods
aam
xor
insb
cltd
xor
dec
push
icebp
pop
lcall
mov
stos
ljmp
cmp
insb
pushf
aaa
cmpsb
mov
jecxz
add
in
das
fildll
ja
gs
inc
xlat
ret
rclb
and
sub
mov
arpl
mov
cmc
insb
fistl
out
repnz
lcall
scas
fstp
lcall
jge
adc
into
pop
das
pop
insl
or
pop
test
adc
inc
sbb
xchg
sub
sbb
les
inc
mov
sbb
adc
jae
push
mov
jg
outsb
cmp
push
and
cmp
jbe
mov
add
cmp
mov
jle
outsb
or
xchg
out
push
sub
lods
dec
cmp
jb
ja
iret
sbb
cmp
das
add
out
shrl
loope
in
mov
sub
jmp
mov
xor
imul
cmp
dec
test
js
in
and
icebp
add
jmp
xchg
out
xchg
lret
sarl
xor
adc
jae
fwait
pushl
dec
add
mov
add
push
aad
pop
icebp
push
inc
add
ret
or
and
fs
mov
out
adc
jne
es
mov
mov
jecxz
xchg
jo
mov
dec
jb
in
push
lods
dec
in
test
nop
lret
mov
daa
jmp
push
movsl
xor
rcrl
xchg
inc
fists
add
inc
jge
sahf
inc
mov
fnstcw
pop
clc
andb
xchg
xor
inc
jl
xor
js
cmp
push
adc
jns
in
cmpsb
ja
mov
pop
xchg
cltd
or
in
inc
pop
dec
test
out
add
out
push
mov
or
sbb
fisttps
popa
inc
inc
test
popf
lcall
out
mov
fdivl
xchg
sub
roll
jnp
ljmp
jg
insl
cmc
sbb
adc
push
popf
shrb
or
push
push
inc
dec
shrl
inc
aaa
sbb
dec
shlb
xchg
jns
adc
int
repz
push
sub
fsts
out
and
clc
pushl
jnp
mov
push
lods
xchg
call
xchg
push
clc
sbb
movsl
pop
jge
shlb
mov
xor
bound
lds
rcll
or
mov
sub
mov
enter
ja
mov
rcrb
adcb
fisttpll
xchg
loope
xchg
cltd
into
insl
push
in
bound
mov
icebp
sti
inc
add
loopne
xor
pop
loop
test
cmpsb
dec
mov
and
sbb
cmc
or
xor
fisubl
js
rolb
jecxz
jl
xor
nop
pop
sub
ficomps
mov
pop
push
mov
cmp
xlat
mov
nop
sub
es
fldt
insl
sub
jno
ficomps
sarl
sti
lret
test
pop
cmp
ret
jne
xchg
push
sbb
repnz
sub
sti
repz
and
and
xchg
xor
sbb
addl
jbe
xor
inc
or
fbld
xchg
jl
pushf
je
push
cmpsl
push
std
jnp
push
xor
mov
pushf
fbstp
cltd
stos
or
call
xchg
cmp
mov
push
shrl
add
mov
roll
popl
addb
xchg
mov
push
push
lea
jle
lock
push
cmp
jnp
lcall
shlb
sub
ljmp
fsubl
outsb
test
ja
shll
jbe
or
sbb
fstps
dec
in
adc
lock
jge
aad
fs
jmp
repnz
in
cmp
inc
pop
loope
adc
xchg
outsl
insb
or
loop
push
in
in
pop
adc
shr
lret
xor
add
sbb
dec
fwait
cmp
pop
mov
and
inc
mov
pushf
fs
pop
and
dec
insl
jne
xor
jne
and
je
pop
daa
daa
fiadds
jnp
jle
push
mov
mov
scas
xchg
movsb
int
push
lds
dec
loop
and
and
jb
dec
sbb
or
push
xchg
js
inc
adc
bound
mov
push
js
cwtl
iret
outsl
in
adc
jle
mov
jns
fstpl
cmp
int
test
popf
in
xor
aam
push
in
out
mov
das
lcallw
dec
movsl
mov
push
cltd
ret
mov
xor
mov
mov
mov
jae
shll
xor
adc
jp
aad
pop
addr16
or
lret
fs
sahf
fidivl
sbb
inc
pop
fists
repnz
les
push
adc
orb
mov
stos
dec
xchg
scas
and
xor
sbb
fbstp
sub
push
or
add
and
xor
sub
js
sti
out
xchg
loopne
xchg
mov
push
push
lods
mov
mov
call
sbb
jge
movsb
jp
enter
push
pop
nop
loop
cmc
pop
shrl
popf
or
ja
bound
lea
dec
call
dec
sub
les
xchg
jno
mov
mov
push
andl
es
mov
jp
xchg
cmpsl
xchg
xor
cmp
shll
mov
inc
add
ret
stos
mov
xlat
jns
jo
xchg
mov
sbb
xor
stos
sub
jo
cwtl
mov
inc
inc
in
inc
or
pop
in
loope
mov
inc
cwtl
xlat
mov
sub
frstor
inc
mov
adc
aad
je
movsl
incb
pop
sbb
loopne
jns
jecxz
out
in
fisubrs
add
int
stc
or
pop
or
out
jae
and
xchg
mov
test
jmp
push
cwtl
pop
push
cmc
in
jg
sbb
lahf
mov
imul
mov
jbe
jb
stos
fwait
sub
repnz
mov
xchg
xlat
insb
xor
push
jle
adc
clc
and
mov
pop
sahf
lock
loope
clc
adc
pop
in
call
or
lret
jmp
cmc
aam
and
clc
dec
jno
ret
int
lods
jle
lret
add
xor
icebp
mov
pop
sub
pop
das
mov
pop
dec
sbb
cmp
subl
jno
sbb
data16
dec
ljmp
or
mov
push
or
fnstcw
imul
insb
dec
mov
xchg
int3
adc
int
loop
or
xor
fistl
stos
mov
xor
jo
fwait
ja
shlb
jae
movsl
xchg
pop
ffreep
or
fucomi
xchg
mov
pop
jo
ja
jg
mov
and
xchg
jmp
sbb
mov
xchg
aas
adc
xchg
dec
xchg
push
adc
push
jno
cwtl
cmpsl
pop
dec
in
test
and
push
pop
call
ss
xor
icebp
pop
fimuls
popf
adc
test
dec
adc
repnz
test
inc
mov
jb
in
fists
xor
fmul
ja
jb
or
mov
stc
cmp
lcall
xchg
mov
popf
and
dec
jmp
mov
lea
les
dec
pop
outsb
adc
test
lahf
out
dec
adc
mov
xchg
sarl
cmp
jle
mov
in
adc
push
out
push
shlb
ret
jmp
pop
test
out
dec
aas
adc
jb
ds
and
mov
scas
not
sub
push
pop
enter
pop
push
call
jge
cmp
mov
and
cmpsb
jb
lods
pop
loopne
mov
ds
cld
out
mov
insl
movsb
mov
xchg
imul
push
sub
pushfw
stos
stos
mov
or
in
fld1
ss
lods
dec
test
out
and
sbb
stos
inc
mov
push
incb
loopne
or
xchg
movsb
es
imul
or
in
incb
movsl
pop
jne
mov
jb
pop
jb
push
and
mov
mov
sti
scas
int
xchg
push
das
repz
pusha
sub
test
mov
mov
or
and
or
jns
das
or
pop
js
sbb
cs
inc
stc
mov
sub
sub
jb
and
pop
int
sbb
shrb
int3
test
sbb
jnp
push
adc
jmp
cld
xor
sub
popf
sahf
test
mov
dec
mov
xor
dec
fs
insb
add
mov
jle
jp
fwait
jnp
or
mov
mov
adc
lret
dec
sbb
movsl
lds
movl
es
test
in
jecxz
sub
ja
sub
dec
jbe
aaa
mov
lcall
bound
popw
scas
in
pop
stc
xchg
arpl
pop
mov
cmpsb
jecxz
sbb
jg
and
fcoml
inc
or
cld
shrb
lahf
pop
mov
icebp
xchg
sti
jp
fcoms
leave
das
cmp
jae
icebp
call
fcmovbe
inc
imul
je
cmpsb
je
addr16
xor
mov
inc
push
push
dec
mov
pop
push
mov
xchg
loopne
bound
bound
jmp
mov
sahf
ss
in
mov
shl
in
xchg
adc
sbb
xchg
xchg
mov
mov
push
insb
shlb
adc
mov
mov
or
mov
xor
xor
add
int3
mov
pushf
popf
fld
mov
xchg
rol
jo
push
or
mov
lret
add
das
mov
jmp
adc
imul
out
fcmovu
xor
or
repnz
pop
mov
or
shlb
xchg
cmc
xchg
ja
inc
inc
dec
cmc
cwtl
push
pushf
movsb
dec
pusha
cmp
mov
push
les
aam
mov
cmc
xor
xchg
jecxz
pop
das
sub
gs
sub
inc
fistpll
ljmp
jo
ja
add
or
mov
aaa
jbe
xchg
lret
repz
sub
ror
mov
leave
push
cs
vmovntps
lret
or
xor
sub
ljmp
out
cld
fcmovnbe
pop
insb
lods
jl
ja
adc
sub
inc
xor
or
in
out
push
inc
fdivl
pop
inc
sub
inc
mov
lcall
fidivrs
xchg
cmp
xchg
add
push
adc
pop
jb
iret
out
movsb
mov
je
test
test
lcall
cli
pusha
cli
ljmp
pop
enter
fucomip
adc
mulb
int3
cmpl
push
ficoml
ret
sarb
daa
add
lcall
adc
pusha
mov
or
inc
fstps
cmc
pop
push
stos
popf
loope
out
and
aam
lds
mov
mov
sub
mov
jbe
cmc
subl
dec
adc
pop
stos
mov
adc
repz
icebp
adc
mov
enter
mov
xlat
inc
and
mov
fisubl
std
lods
dec
les
mov
or
lea
sbb
and
in
pusha
hlt
into
sub
or
aaa
jmp
imul
movsb
pop
nop
push
enter
je
or
sub
inc
jmp
mov
popa
add
jae
add
ja
ljmp
sub
mov
cmpl
push
dec
cld
and
adc
or
test
enter
mov
sti
add
shll
fwait
xor
loope
aaa
in
insl
push
inc
pop
add
aaa
or
aad
rolb
inc
lcall
dec
sub
push
enter
jg
repnz
jno
push
loop
mov
cs
sahf
scas
int3
or
mov
inc
pusha
out
imul
outsl
pop
rorl
sbb
mov
inc
test
or
jae
pxor
sbb
repnz
inc
and
push
jo
ror
ret
fisubl
jle
and
mov
jno
push
jns
aam
sub
stc
movsb
push
std
pushf
jge
bound
fisubrl
mov
adc
lret
ret
adc
je
push
xchg
ds
jge
movsb
add
in
and
add
sub
inc
lret
stos
sbb
loop
mov
jmp
lahf
jae
jecxz
xchg
loopne
and
ret
lret
mov
imul
push
inc
mov
push
fs
push
or
xor
ss
xorl
mov
lcall
or
popa
aad
mov
push
daa
mov
fsts
sbb
lret
cmp
push
xor
test
stos
iret
push
data16
gs
subb
and
repz
push
ds
pop
insl
ret
push
dec
push
adc
dec
pop
rolb
add
xor
je
xor
dec
mov
lret
jnp
jns
dec
movl
movsb
mov
gs
mov
into
mov
gs
repz
cltd
ret
iret
insb
bound
pop
aas
mov
ret
push
jecxz
ljmp
loop
nop
std
sbb
js
push
aas
jmp
jp
inc
mov
orl
jb
incb
mov
int3
ret
shlb
adc
loopne
imul
push
xor
testl
add
dec
adc
lret
sub
faddl
rcrb
out
or
push
cwtl
mov
mov
cld
orl
insl
jmp
sbb
pop
mov
mov
arpl
add
in
es
repz
add
dec
ljmp
pop
stc
ja
dec
cmc
lret
popa
mov
insl
mov
push
into
leave
scas
mov
iret
sbb
mov
leave
xlat
mov
fisubrl
xchg
pop
lret
int3
dec
add
jae
repnz
dec
mov
jecxz
jno
pop
inc
je
ljmp
imul
sub
sbb
ret
sti
sbb
jp
paddw
rcl
xor
pop
repz
dec
or
mov
shr
ja
repz
jns
outsb
ljmpw
addr16
jnp
movsb
dec
int3
cmp
mov
jnp
inc
mov
scas
push
sti
pop
movsb
xor
lret
sub
mov
aam
mov
push
rorb
sub
inc
adc
sbb
sbb
insb
ljmp
xor
jle
xchg
rcl
lret
xlat
jne
mov
inc
fadd
pusha
sub
jp
sti
cmc
cmp
mov
push
mov
mov
jge
or
fdivl
mov
outsb
xor
loop
jmp
fildl
imul
aas
mov
call
mov
mov
nop
cmp
outsl
or
call
sub
lods
mov
popf
inc
bound
sbb
loop
jo
fistpll
mov
pop
fcom
xor
push
dec
les
ljmp
fstl
jo
fs
in
nop
out
dec
sub
jb
mov
xchg
lret
std
mov
cmp
ss
sahf
in
sbb
sub
cmp
out
div
imul
stos
pop
movsb
insl
pop
aaa
jne
cli
push
movb
stos
test
inc
xchg
mov
aam
pop
inc
push
push
mov
push
inc
movsl
scas
cmp
int3
jge
push
ljmp
sub
rcl
test
push
and
or
mov
adc
mov
in
arpl
pop
mov
inc
mov
dec
jmp
mov
add
ds
dec
mov
bound
movsl
jp
ficompl
or
mov
lods
cmpb
jo
outsb
enter
sub
scas
sbb
pop
loope
xor
shrb
mov
adc
cs
pop
test
clc
add
int3
enterw
dec
pop
cmp
mov
add
stos
push
addr16
jae
mov
loope
jbe
and
and
fidivs
fiaddl
dec
roll
popa
sub
adc
data16
sahf
dec
mov
std
pop
mov
fcomps
sti
jb
std
and
jp
and
cwtl
roll
lods
shlb
and
call
pushf
loope
test
sbb
loope
jo
push
jae
daa
fs
mov
andb
jl
test
sub
cmpl
incl
out
push
push
dec
shll
sbb
xchg
inc
xchg
popa
daa
fcmovnu
lods
dec
stos
call
ljmp
pop
movsb
pop
pop
sbb
stos
imul
mov
cmp
cltd
cwtl
ret
mov
iret
mov
jmp
mov
imul
add
test
in
test
imul
cld
and
movsl
cmpsl
cmpsl
sub
push
dec
and
stos
in
test
ljmp
test
sub
cwtl
mov
mov
lret
lret
aaa
lods
mov
mov
mov
inc
shll
out
ret
lock
mov
test
xor
inc
int
dec
inc
out
and
test
les
xor
xlat
dec
addl
dec
popf
jge
in
push
int
lret
cmp
push
in
sahf
sub
push
sarb
ror
test
repz
xchg
cmp
cmp
pop
ljmp
push
adc
inc
xor
cmp
je
inc
inc
cmc
scas
das
mov
mov
ret
daa
bound
xchg
repnz
dec
jae
iret
repnz
out
rol
or
and
sbb
pusha
icebp
ret
movsb
and
test
sub
mov
rorb
jle
push
xor
sub
adcb
cmpsl
insl
ljmp
pop
mov
adcl
fldt
adcb
mov
mov
or
in
fistpl
out
outsl
jle
push
int3
pop
jmp
scas
les
sub
and
inc
jb
pop
fstps
pop
add
stos
dec
unpcklps
es
popa
addr16
ror
jae
jne
add
bound
fcoms
mov
push
sub
add
adc
imul
mov
stc
imul
ror
mov
and
pop
sub
pcmpgtw
lods
jp
xchg
sbb
mov
mov
sub
sbb
outsb
icebp
out
divl
rcll
dec
out
jl
out
lock
pushf
or
jge
dec
div
xor
mov
push
ja
xchg
lret
push
xor
shrb
test
mov
lea
xchg
jo
xor
shll
cltd
stos
out
sbb
adc
add
stc
mov
mov
lea
pusha
add
xchg
clc
push
fsubrs
dec
push
push
push
clc
mov
cmpsb
fbld
xchg
push
sti
xor
insb
cwtl
add
pop
outsl
or
cwtl
stos
fisttps
ds
xchg
mov
mov
mov
jp
jl
or
lahf
pushf
call
xchg
rol
ret
movlps
adc
pop
in
fcoml
aad
xchg
jl
pop
mov
or
or
sub
cmp
lahf
cmpsb
inc
xor
orl
xchg
movsb
in
or
xchg
xchg
xchg
dec
inc
xor
sbb
aas
mov
sahf
shlb
mov
fstp
inc
out
add
jbe
lods
into
push
mov
push
jmp
call
jge
arpl
out
add
fmul
xor
jl
aaa
xchg
jb
push
push
push
inc
out
cmp
cmp
into
adc
jp
mov
ficoms
out
xchg
adc
loope
fucomp
pop
sub
sub
ret
inc
adc
cmp
dec
outsb
enter
shrb
adc
les
mov
scas
sahf
xorl
and
dec
fisttps
and
lret
mov
mov
fs
ds
dec
jnp
cmp
test
test
dec
inc
mov
mov
int3
pop
push
dec
sahf
and
xchg
into
or
iret
test
inc
dec
int3
xor
dec
inc
sbb
ficoml
xchg
mov
neg
pop
push
and
mov
sbb
add
fucomp
cs
stos
pop
jp
loopne
add
aam
test
inc
push
dec
repnz
gs
movsl
mov
add
cmp
ret
in
dec
xor
sahf
shl
andb
and
popf
jp
pop
das
pop
mov
mov
xor
push
or
and
mov
fcmovnu
fld
xchg
scas
divl
jb
sbb
xchg
rorl
call
cmp
push
cwtl
sub
push
fsubp
jg
ss
jae
inc
push
mov
filds
cmp
adc
push
fcomp
aad
out
xchg
xchg
int
pop
cmpsb
hlt
pop
cwtl
and
insl
jmp
mov
decb
pop
jle
cmp
and
sbb
and
movsb
cmp
daa
sbb
ss
push
push
les
mov
jecxz
xor
dec
cmp
test
xor
add
pusha
int
mov
adc
mov
mov
in
lret
ret
mov
sti
inc
add
aad
jbe
adc
push
adcb
adc
add
out
pushf
add
pusha
jl
or
or
ret
sahf
dec
pop
mov
adc
mov
xchg
fcmovne
mov
and
pop
mov
les
xchg
nop
mov
lret
negl
jo
xchg
out
scas
mov
lret
ja
mov
aas
inc
pop
popf
sarl
je
dec
inc
in
sub
push
adc
sbb
push
add
fadds
shr
scas
push
pop
rorb
cmpsl
fnstenv
xor
cmp
and
add
sbb
xchg
inc
das
or
push
rclb
lea
push
xchg
bound
movsb
jae
ret
adc
push
push
sub
mov
pop
and
sbb
imul
iret
sbb
adc
imul
xchg
jnp
in
adc
xchg
jmp
sub
inc
lcall
cmpsl
jecxz
mov
cmp
stos
aaa
mov
mov
adc
aam
mov
or
lock
rcl
call
insb
xchg
idiv
add
pop
in
pop
or
mov
nop
rorl
ror
adc
out
dec
cmpsb
xchg
imul
movsl
fwait
dec
pop
mov
mov
js,pn
faddl
leave
mov
pop
std
jl
push
sti
adc
lret
add
inc
sbb
repnz
rcr
imul
cmp
std
imul
lock
jp
sahf
sbb
dec
push
pop
xchg
sub
test
jl
cwtl
cmp
push
arpl
into
pop
addr16
jbe
mov
imul
push
vmovupd
movsb
stos
sbb
mov
ds
mov
pop
mov
push
xchg
push
or
testb
xorb
divb
hlt
xor
pop
loope
inc
divl
in
push
pop
and
ret
dec
add
fwait
into
add
out
dec
adc
jecxz
mov
xchg
add
push
push
pop
fwait
aam
mov
or
cli
mov
ret
mov
sub
mov
test
jmp
cmp
imul
fldl
arpl
dec
daa
xlat
fisubs
lea
out
jmp
pop
daa
mov
addr16
imul
inc
arpl
cmp
orl
dec
mov
imul
push
adc
pop
nop
sub
ja
cmp
ljmp
mull
pushf
and
loope
dec
ja
xlat
repnz
sub
inc
mov
jl
pop
aaa
pop
adc
inc
jb
imul
jb
fcomps
cmpsb
and
popl
insl
pusha
xchg
imul
inc
lcall
mov
and
dec
cmp
loopne
jle
xchg
and
mov
lcall
and
mov
cli
adc
add
jno
enter
int
adc
push
inc
adc
push
movswl
test
ja
xchg
xlat
adc
call
popa
push
mov
push
fildl
sub
ficomps
mov
in
adc
pusha
je
scas
icebp
loop
mov
cmp
jl
inc
fstpt
push
jle
sbb
mov
ss
out
jo,pn
adc
pop
sub
loopne
mov
jle
fisttps
in
data16
push
xchg
or
lahf
jmp
leave
push
cmpsb
out
ret
into
aam
push
rcll
cmp
iret
xchg
nop
xor
ss
in
movsb
lahf
movsb
or
ret
jle
cmp
aas
out
in
add
pop
cmpl
clc
push
ret
mov
jne
mov
mov
les
int
mov
add
push
jne,pt
and
hlt
pop
jg
repz
lea
leave
jb
hlt
inc
aam
inc
lea
test
push
ds
jmp
sbb
cmp
inc
push
xor
and
sbb
inc
push
shrb
ror
adc
inc
xlat
sbb
xchg
xlat
sbb
pop
push
add
mov
aam
dec
es
je
fdivr
push
mov
adcb
in
sub
lods
sqrtps
xorl
xor
stos
mov
das
lcall
sbb
dec
test
insl
popa
mov
push
das
mov
mov
andl
pop
test
xor
mov
or
inc
sbb
sti
dec
jo
jmp
xchg
imul
xor
or
xor
or
insl
jge
js
pop
fdivl
mov
cmpsl
rcll
daa
dec
jmp
mov
xor
lret
inc
jae
push
lcall
imul
mov
movsb
dec
mov
push
or
sbb
mov
fs
cmpsl
repnz
push
loopne
add
adc
add
pop
fcmovnu
jo
fstps
jp
adc
xchg
cmp
hlt
add
xlat
jge
imul
test
fsubs
dec
int3
push
mov
mov
stos
jns
gs
icebp
out
dec
add
sbb
xchg
jle
insl
shlb
in
in
mov
scas
sub
addr16
scas
das
addb
lods
or
pop
sub
pop
lods
mov
cmpsb
dec
and
push
enter
dec
iret
mov
bsf
dec
aaa
loope
daa
adc
jns
std
push
cmpsb
mov
jle
popa
xor
inc
iret
adc
fldt
sub
loope
jno
cmp
or
insl
and
sbb
popa
dec
inc
dec
or
in
fsubl
int3
sbb
mov
out
lret
xor
dec
insl
pop
lret
mov
ret
jb
shr
std
sahf
cmp
inc
adc
adc
xchg
pop
inc
add
mov
cld
push
cmp
xchg
bound
pop
and
es
dec
push
mov
jae
xchg
xchg
popa
jo
sahf
push
insl
push
xchg
dec
and
mov
jecxz
sbb
jp
fincstp
stos
jmp
pushf
jmp
sahf
cmpsb
adc
rorl
imul
push
mov
dec
xchg
rol
clc
and
pushf
push
and
movsl
stos
pop
div
pmaxsw
popf
mov
cli
cmp
push
sbb
test
jp
test
stc
dec
in
js
fstl
addr16
or
sub
fmulp
fbld
pushf
pop
mov
mov
mov
out
out
pusha
and
xchg
inc
and
fmull
scas
jp
in
cmp
inc
mov
xor
rorb
adc
fsubrs
jb
das
adc
orb
movsl
orl
mov
dec
dec
push
and
xor
mov
insb
xchg
dec
mov
dec
call
iret
sbb
stos
std
negl
or
sub
out
xchg
int3
pop
lret
fsub
pop
xchg
cmp
add
pop
fnstenv
dec
cmp
sbbb
das
add
leave
in
test
cmp
xor
lcall
push
and
push
add
hlt
loop
movb
aas
mov
lock
sbb
inc
push
scas
or
push
pop
mov
or
popf
adc
ret
jp
lods
cmp
lret
jno,pn
sbb
xchg
sub
ret
xchg
pop
cmpsl
adc
shlb
sub
adc
cmp
pop
mov
jns
dec
jae
mov
xchg
xor
inc
psadbw
push
mov
inc
or
roll
std
mov
in
inc
jbe
scas
cmp
adcb
in
cmp
adc
jg
data16
or
mov
daa
hlt
mov
sub
and
std
cmpl
fnstenv
adc
cmpsl
shlb
adc
outsl
test
pop
cwtl
mov
fcoml
pop
add
push
mov
lods
push
lods
lods
jnp
daa
hlt
inc
inc
in
enter
cmp
pop
lret
lods
fld
dec
fcoml
ror
cmp
repz
daa
gs
mov
test
rclb
ljmp
call
mov
and
cld
pop
fistps
sub
jnp
lcall
xor
push
into
bound
inc
inc
clc
cmp
rcr
xchg
pop
push
sbb
fmul
mov
sub
add
jns
movsb
jmp
test
js
jge
movsl
mov
push
jg
adc
xorb
fistps
jp
imul
adc
ficoml
push
or
jno
inc
fwait
popf
mov
aas
je
test
test
stos
xor
and
and
mov
aas
je
or
xchg
cmp
dec
cltd
inc
sbb
xor
clc
movsl
mov
mov
addr16
in
cmp
sub
jg
fidivrl
and
jnp
cld
xchg
dec
fs
pop
adc
nop
adc
stos
scas
call
adc
outsb
mov
jne
dec
nop
fcoml
addr16
add
xor
je
lret
or
mov
lock
xor
pop
push
jne
mov
popa
sahf
or
and
mov
lods
aam
jle
jmp
push
and
jb
inc
pushf
pop
cltd
xor
mov
loopne
js
imul
xchg
out
shl
lea
cmp
ja
pop
scas
ss
mov
std
fstps
loope
jp
inc
repz
jbe
data16
ljmp
xor
rolb
jecxz
lods
cmc
aam
jmp
mov
mov
dec
mov
sub
jmp
fcoms
xchg
es
mov
jle
sahf
jnp
jmp
iret
adc
in
sub
sbb
mov
cmp
xchg
push
fbld
mov
mov
aam
insb
or
jo
lock
cmp
sbb
cli
movsl
cmp
enter
cwtl
xor
sub
sub
rorb
movsl
mov
inc
xor
fildll
je
pop
or
cmp
jmp
sahf
lret
cmpb
adc
or
cmc
mov
mov
xor
stc
push
cltd
inc
adc
fld
pop
push
or
push
cld
sbb
pop
andl
sbb
xor
xchg
pop
test
nop
in
and
xchg
pop
mov
xchg
push
pop
test
js
into
fbld
adc
sti
adc
pop
mov
cmp
pop
repz
add
pop
ja
ja
add
imul
popa
dec
repz
cmpsb
cmp
xchg
scas
inc
push
int3
gs
pop
imul
push
mov
fidivrl
fldenv
imul
test
ret
das
fistpll
mov
imul
sub
fcoms
sbb
adc
mov
add
xor
pop
loope
push
sbb
cmp
jae
out
mov
lcall
lods
push
clc
je
ljmp
pop
or
cli
push
mov
lods
repz
xor
fsubrp
popa
pop
arpl
bound
or
dec
in
sub
push
jmp
int3
inc
test
fsubl
push
pop
andb
dec
sarb
lock
cmp
cmp
inc
jmp
mov
cmpsb
push
sti
dec
stc
scas
mov
sbb
jge
sbb
or
iret
cmp
lds
int3
or
jecxz
stos
mov
push
xorl
adc
adc
pop
cmp
stos
sbb
fsubr
incl
cmpsb
and
xor
insb
or
add
xchg
xchg
dec
xchg
loopne
xchg
jbe
scas
adc
and
mov
outsb
fistpll
dec
loopne
add
mov
xor
decl
das
ja
dec
xchg
fcmovb
sbb
mov
out
iret
shll
mov
jae
fisubrs
lret
cs
loop
jnp
cmp
dec
fistl
add
pop
xchg
hlt
movsb
push
xor
jb
idiv
sarb
mov
pop
sahf
or
xchg
sub
pushf
xchg
aam
dec
cmpsb
rclb
push
mov
loope
jne
loop
jae
insb
mov
add
bound
ljmp
sbb
scas
imulb
fsubrl
popl
lret
or
imulb
add
ret
out
mov
jnp
xchg
pop
adc
in
ficomps
pop
test
xor
in
in
dec
mov
and
xlat
mov
mov
sbbb
sub
mov
test
popa
mov
sbb
fcoml
dec
and
inc
dec
ret
cmp
test
xchg
or
shl
cmpsl
jns
sarb
movsb
dec
fwait
mov
cmp
movl
arpl
or
jbe
sub
mov
jo
xchg
mov
hlt
in
ret
clc
fistpll
xor
mov
push
je
pop
add
les
or
pop
and
push
adc
pop
enter
lret
push
or
push
neg
fistpl
jo
sub
add
sub
pop
imul
jne
push
xchg
xchg
sbb
mov
pushf
mov
add
out
out
js
test
cmp
pop
lds
lock
fdivrs
in
ret
cltd
pop
cmp
lea
pop
enter
sahf
loopne
cwtl
or
xor
sarb
mov
test
pop
int3
aam
andl
push
push
xabort
push
cli
shrl
mov
xchg
pop
mov
mov
loopne
sub
lret
cld
lods
aas
call
xor
cltd
ret
xorl
or
xor
ss
dec
adc
pop
mov
cmp
outsl
jns
scas
call
xor
scas
movsl
movsb
jg
sub
aam
inc
add
fildl
jle
ja
fwait
into
sub
inc
and
mov
mov
push
popf
add
push
outsl
add
lods
es
scas
or
lcall
in
sub
in
mov
subb
mov
xor
insb
sub
push
lea
sub
jbe
adc
xchg
mov
in
add
push
stos
xor
dec
rclb
push
pop
add
idivb
loopne
dec
xor
outsb
stos
insb
cmp
cmp
mov
fsubr
jne
jp
andb
jge
mov
inc
jg
ss
sub
lods
into
lds
mov
mov
mov
aad
outsb
gs
bound
fisttpl
jb
xlat
outsl
jne
pop
xor
mov
xchg
mov
jbe
out
or
repz
stc
mov
mov
push
cwtl
cmc
mov
cltd
ret
addr16
or
dec
cltd
sbb
pop
mov
sub
jge
dec
cli
inc
daa
insl
push
daa
xchg
aas
aam
pop
imul
jno
xor
dec
lds
jns
orl
loopne
arpl
or
xchg
jmp
mov
push
into
push
das
mov
or
fwait
push
add
add
dec
and
outsb
pushf
jnp
push
cmc
test
aaa
or
sar
mov
inc
movsb
popf
iret
sti
sti
mov
adc
mov
mov
cmp
jno
inc
cmpsl
xchg
cs
aas
mov
out
aaa
lcall
pusha
mov
test
jns
pop
shrb
lret
pop
xor
mov
mov
out
in
pop
fildll
jno
pop
outsl
and
jle
add
sahf
sub
inc
ja
repz
ret
stos
pop
adc
xor
jbe
mov
xchg
xchg
cmpsb
ds
ja
popf
push
stos
mov
fs
sub
int3
bound
xchg
cltd
dec
stc
sbb
imul
test
and
testl
xor
push
js
int3
jmp
jns
sub
push
adc
or
adc
dec
or
sub
push
sub
pop
in
mov
popa
mov
dec
lret
sub
push
xrelease
int3
ss
enter
repz
adc
cmc
scas
sub
icebp
ss
wrmsr
xlat
pop
fildll
call
cvtps2pi
sub
loop
lods
clc
inc
sub
dec
or
sub
or
dec
test
adc
push
cs
xor
or
setge
fs
iret
subl
inc
out
xor
data16
add
out
jecxz
fwait
rorb
cltd
jbe
fsubrl
push
mov
dec
hlt
out
adc
or
fstpt
mov
push
rcll
jge
or
insl
and
xchg
stc
adcb
add
or
cmpsb
fidivrs
lahf
mov
mov
add
sub
or
dec
ljmp
mov
insb
mov
jl
add
imul
cmp
mov
test
aaa
mov
fwait
and
xchg
cmp
dec
repnz
mov
repz
push
mov
mov
test
dec
or
adc
bound
gs
cwtl
hlt
pop
rclb
std
sbbb
or
stos
xor
mov
movsb
ljmp
jae
and
mov
mov
das
movsb
push
pop
push
aas
test
jno
cltd
inc
mov
lock
cmp
inc
jb
hlt
lock
frstor
movsl
add
and
xchg
or
out
xor
test
sti
push
sub
mov
frstor
movsl
pop
dec
loopne
cmova
xor
icebp
insl
xchg
xor
sub
xor
or
cmp
ret
hlt
mov
aas
xorb
fs
xor
add
jecxz
pop
cmpsb
aas
loope
mov
je
insl
jmp
aaa
sbb
pop
xor
jmp
dec
jns
pop
push
gs
and
imul
or
sub
cli
repnz
push
xor
cmp
add
jmp
arpl
jmp
add
sbb
rorb
mov
out
mov
push
sub
jns
push
sub
cli
jle
lods
loopne
mov
pop
push
adcl
and
mov
or
jne
mov
xor
push
inc
add
sbb
mov
inc
mov
add
jg
adc
adc
movsb
jg
iret
js
sub
jnp
scas
jbe,pn
insb
fcmovnu
adc
pop
xor
mov
jmp
jl
cltd
dec
dec
dec
inc
pop
loopne
stc
pop
lods
or
cmpb
xor
mov
popf
repnz
inc
lods
xchg
into
inc
outsl
pop
and
jecxz
test
inc
fnstenv
rorl
outsb
xchg
popa
addb
xor
cld
add
mov
push
cwtl
jl
nop
xor
loope
mov
lods
xchg
mov
insl
dec
aaa
out
mov
sub
mov
das
bound
push
mov
aaa
pop
lods
stc
rol
test
or
pop
in
mov
test
add
push
cld
imul
push
sahf
and
jns
bound
andl
lahf
movsl
push
ljmp
cmp
jge
in
mov
dec
jnp
in
imul
sbb
fsubs
sti
cld
xor
sub
cltd
shrb
cmp
mov
sbb
pop
movsl
xor
dec
lock
mov
push
shlb
sbb
pushf
cld
dec
cs
and
pusha
push
aad
add
subl
out
rcrl
jae
sahf
mov
mov
sbb
add
dec
stos
mov
push
xor
out
cmp
inc
cmp
xor
and
scas
nop
and
icebp
cmp
push
push
ds
mov
aad
jl
xor
mov
xor
leave
aam
stc
xlat
ja
adc
pop
xor
js
push
pop
sbb
add
out
ret
mov
add
dec
out
xchg
add
xor
inc
jne
jno
cmc
xchg
jae
ret
rcrl
jns
insl
cwtl
cs
js
sub
inc
nop
pop
outsb
popa
test
adc
adc
xlat
clc
dec
inc
insb
push
xchg
inc
mov
clc
call
loope
stc
adc
jns
push
cmc
test
xchg
jl
sub
cs
outsl
push
rorb
adc
popa
push
scas
icebp
dec
lret
sbb
aad
pusha
andl
mov
es
negb
test
insb
pop
repnz
aam
pop
in
shl
xor
or
repz
enter
xchg
mov
lahf
cli
xchg
mov
jne
mov
mov
in
add
lret
cmp
out
in
mov
unpckhps
icebp
ja
jb
fldl
stos
jle
or
add
loop
gs
clc
cwtl
jle
in
out
mov
or
out
aam
imul
inc
mov
imul
test
sub
shll
mov
push
push
cmp
xchg
test
sarl
bound
or
pop
rol
out
cmp
push
dec
hlt
clc
sub
sbb
mov
das
ss
adc
cmp
or
mov
push
push
stos
insl
enter
imul
jmp
rorl
repnz
out
clc
movsl
and
imul
cmpsb
inc
add
fwait
add
xor
jo
jb
idiv
in
sbbb
pop
std
mov
push
adc
push
rolb
push
shlb
ret
lea
cmp
mov
pop
ret
adc
not
push
and
cmp
ljmp
cs
ret
and
adc
mov
jne
mov
nop
mov
add
scas
adc
out
adc
xchg
ja
cmp
out
jmp
jp
push
nop
xchg
in
adc
imull
push
adc
sub
inc
loop
mov
dec
mul
push
movsb
xor
push
out
ljmp
cld
out
jle
cmp
or
mov
xor
adc
mov
dec
xor
stos
fdivl
cmp
push
cltd
scas
es
sarb
sub
pop
ret
mov
adcl
insb
aam
jle
dec
or
fadd
mov
push
jae
loopne
loopne,pn
lahf
andl
lcall
dec
into
cmp
scas
add
nop
test
sub
cmp
arpl
shll
or
or
xorb
xchg
adc
mov
dec
enter
pop
mov
jnp
mov
sbb
inc
pop
mov
mov
dec
cmp
movsb
test
jo
sar
cmp
adc
leave
add
and
lret
in
rolb
hlt
cwtl
int
mov
xor
lcall
mov
jae
push
push
fidivrl
divl
mov
loope
lahf
rorl
fucomi
xlat
xor
orb
jle
rorb
inc
mov
into
pop
stos
jg
lods
and
and
push
push
pop
loopne
pop
xor
lret
stos
jmp
jl
repnz
cmpsl
sub
leave
and
dec
dec
popa
inc
mov
hlt
incb
ljmp
insl
xchg
test
jl
stos
pop
inc
mov
rolb
adc
test
jb
pop
dec
xchg
faddl
and
add
stos
movsb
mov
ficomps
out
jae
mov
jb
adcl
fstpt
pop
ljmp
loopne
xchg
ss
xchg
repnz
sbb
in
mov
loop
das
pop
inc
mov
inc
out
push
rcrb
sub
fadds
mov
cld
jmp
fistpll
test
add
pop
out
jb
mov
shrl
pushf
insl
arpl
xchg
js,pn
aad
inc
jnp
jge
xchg
test
aad
cltd
and
or
cmp
leave
mov
repnz
mov
push
stos
lods
test
repz
mov
or
sbb
nop
dec
jp
popa
adc
psubsb
mov
adc
mov
pop
xchg
mov
mov
mov
imul
mov
ds
sbb
add
jp
xor
xor
vpmacsswd
daa
mov
inc
mov
push
inc
xor
movsb
or
inc
and
cs
xchg
popf
push
sbb
jnp
aaa
jae
movsl
repnz
sbb
cmp
sub
dec
inc
pop
mov
dec
pop
test
mov
dec
std
dec
shlb
adc
sbb
pop
sbb
inc
xchg
sub
ror
in
cmp
shl
dec
aad
pop
mov
mov
or
fdivrl
xor
les
call
loopne
cs
fs
jb
int3
sbb
add
jb
mov
aam
popa
cmpsb
cld
sti
add
lods
repnz
jb
adc
sbb
pop
in
in
rcrb
out
pop
fildll
and
cmp
push
xor
test
mov
mov
inc
xchg
xor
sub
fisubrs
stc
aas
or
stos
outsl
imul
and
loope
adc
add
sub
xor
xor
pop
mov
js
push
insl
cmpsb
lcall
scas
js
mov
sbbl
int
mov
notl
push
adc
jns
fwait
outsl
rol
inc
jle
rclb
pop
sahf
or
push
sub
test
addb
test
adc
pop
mov
add
sbb
inc
lahf
rolb
filds
dec
lahf
repz
shll
ret
or
enter
mulb
and
cltd
pop
adc
mov
jae
stc
shrb
sub
lret
lahf
and
filds
push
add
lret
frstor
add
es
cmpsl
adc
push
shrb
add
mov
out
stos
ja
iret
push
or
popf
fldenv
mov
xor
orb
push
mov
mov
jl
bsr
mov
xor
cmp
xchg
lahf
imul
incb
rcrb
test
mov
push
sbb
and
adc
lret
fstpl
ret
shl
jmp
outsl
cmpl
frstor
pop
scas
outsl
mov
mov
add
cmc
roll
mov
jmp
fnsave
xchg
negl
ret
jae
ret
loope
aas
xor
leave
out
add
mov
pop
fisubrs
adc
push
dec
and
sub
jns
and
pop
mov
not
fnstcw
mov
or
lods
je
fisttps
inc
push
pop
loop
shll
push
insb
imul
pop
call
sbb
mov
cmp
repz
pop
stc
dec
test
movsl
mov
and
mov
outsl
mov
int3
push
rorl
lahf
mov
inc
and
icebp
mov
daa
push
fldl2t
out
in
test
roll
sarl
inc
or
mov
jb
adcl
stos
dec
loopne
jle
psubw
pop
fsubs
loope
fs
jno
fsub
sbbb
fs
scas
nop
dec
nop
shrb
jecxz
out
jmp
cld
pop
in
adc
ds
je
jo
pop
idivl
imul
ljmp
in
jecxz
fiaddl
ljmp
insl
push
outsl
aas
lds
xchg
lahf
hlt
jle
ljmp
or
test
lock
fmuls
pushf
int3
cltd
fcomps
lods
pop
xor
xor
mov
push
cmp
jb
push
lahf
mov
jmp
rorb
shll
clc
in
and
xor
insb
test
mov
sahf
outsl
jnp
adc
sub
mov
add
call
sbb
and
jg
cmpsb
jge
xor
and
cmp
pop
inc
jo
inc
inc
sub
jbe
xchg
pop
push
lcall
in
leave
and
pusha
and
xchg
orb
jb
stos
loope
cs
mov
mov
fcomps
add
cmc
sub
ror
push
inc
sbb
push
in
sti
jns
xchg
ficomps
sbb
cwtl
cmp
fisttpl
or
js
popa
cmp
scas
sbb
push
mov
xchg
fildl
cli
loopne
sub
sbb
adc
jb
add
cmp
call
jbe
push
pop
jge
shrl
or
mov
or
out
xchg
inc
arpl
sbb
jb
cmp
stos
rclb
mov
push
pop
enter
aaa
and
sahf
popa
push
cmp
push
loopne
ds
dec
add
cmp
push
fdivs
jecxz
shl
cmp
push
xor
mov
mov
fs
ja
pop
sbb
dec
cmc
sbb
xchg
xchg
popa
mov
sahf
xor
inc
or
mov
push
mov
inc
pop
movsl
push
pop
cmp
out
call
pusha
xchg
add
mov
jl
cmpsb
subl
loope
mov
stos
sbb
push
pop
adc
dec
pusha
adcb
mov
push
je
lret
xlat
pop
insb
dec
pop
jecxz
mov
xchg
insb
cmp
or
jbe
or
jo
push
adc
inc
setbe
fistpl
xchg
or
in
ja
gs
pop
inc
mov
dec
dec
mov
push
sub
push
push
add
inc
push
xchg
mov
xlat
scas
loope
mov
inc
mov
fmul
push
fstl
sti
adc
xchg
push
icebp
movsb
jmp
mov
pop
lret
or
inc
sti
jge
dec
fistpll
out
sbb
inc
sbb
xchg
cmp
mov
shrb
jno
push
je
dec
adc
inc
sub
dec
or
daa
pop
jg
sbb
push
je
imulb
or
fcompl
xor
stos
xchg
shrl
sbb
movsl
lds
movsl
cmp
or
outsl
mov
and
lds
cmp
mov
inc
jp
lock
repnz
mov
jg
dec
mov
dec
das
rcrl
mov
mov
add
rclb
cs
xchg
in
dec
test
sbb
ret
mov
ds
mov
push
push
jmp
mov
xchg
popf
jmp
in
xlat
addr16
adc
imul
gs
add
xchg
adc
cmp
fstps
cli
movsl
mov
mov
stos
mov
mov
mov
bnd
xor
outsl
hlt
imul
xchg
ret
fcoms
dec
mov
dec
pop
dec
dec
and
cmpsl
jo
push
dec
mov
sub
jp
in
aas
mov
xchg
jecxz
test
xchg
cmpsl
shll
cmpl
insb
xor
inc
xlat
adc
or
test
cli
daa
cltd
xor
gs
push
push
cwtl
mov
outsl
lret
mov
dec
nop
sub
fisubrl
ds
jecxz
fwait
dec
sub
jle
xor
fs
pop
popf
cmp
mov
mov
arpl
sahf
pop
xchg
aaa
and
roll
jmp
in
ret
imul
nop
xchg
cmpsl
jle
ficomps
sub
mov
or
inc
pop
addr16
and
add
js
loopne
mov
mov
scas
mov
inc
pop
jns
or
push
jno
cltd
popa
loope
js
lds
push
mov
ficomps
jp
mov
andb
aam
and
push
pop
mov
jne
and
jl
mov
movsl
fnstsw
or
lods
lock
call
loopne
and
add
mov
call
cld
sub
std
call
add
dec
scas
pop
push
pop
push
adc
in
sub
jb
xchg
sbb
lods
int3
pop
xor
add
jecxz
and
cs
mov
mov
shr
cmp
stc
xchg
into
test
sub
push
or
push
cmp
imul
lcall
movsl
int3
repz
test
and
mov
negl
push
pop
mov
test
outsl
test
fadds
cwtl
scas
mov
call
jp
xchg
es
loopne
call
pop
sub
clc
mov
and
negb
cli
xor
push
test
fmull
sub
icebp
add
pop
inc
test
outsb
jnp
mul
pop
enter
addb
push
sub
xlat
imul
pop
jno
sub
inc
add
mov
test
aad
cmp
sbb
lea
and
in
push
mul
adc
and
mov
inc
out
xchg
mov
add
add
jecxz
idivl
sbb
lahf
popf
nop
dec
mov
jbe
mov
lods
cld
icebp
mov
lds
pop
xchg
dec
scas
add
imulb
dec
pop
sub
adc
aas
mov
mov
addr16
sbb
adc
incl
clc
mov
and
gs
mov
cmc
lret
pushf
cmp
movsb
jae
add
mov
data16
pop
dec
imul
cli
arpl
xor
sarb
xor
iret
mov
xchg
das
or
lea
xchg
out
cli
enter
repnz
jnp
or
cltd
pushf
out
ret
xchg
inc
sbb
mov
add
push
das
cli
jns
pop
pop
or
pop
nop
sub
ja
push
dec
push
xchg
cwtl
mov
gs
add
xor
test
out
enter
in
push
ja
lds
aaa
and
cmp
dec
dec
or
mov
ret
adc
jg
sbb
test
mov
cld
xor
jle
test
xlat
adc
imul
test
data16
daa
ficoml
push
inc
add
jae
or
imul
mov
xor
or
push
mov
call
lret
loopne
bound
xchg
movsl
cmpsb
stos
icebp
test
mov
sbb
mov
cs
iret
jo
push
fisttpl
fisttpll
es
dec
or
or
flds
and
push
test
rcrb
sub
adc
adc
xchg
pop
in
sbb
andl
mov
jge
shll
es
xchg
push
push
js
or
inc
std
cs
stc
icebp
mov
mov
jo
push
mov
xor
stos
enter
rcl
enter
or
mov
xor
cmp
jae
pushf
sbb
mov
xchg
lret
jno
xchg
xor
inc
mov
xchg
xchg
sar
hlt
les
xchg
scas
lcall
pusha
cmpb
adc
mov
sti
push
jmp
fwait
mov
mov
loopne
xor
icebp
add
rcll
pop
jae
int
ret
dec
sub
nop
cmpsb
idivb
dec
mov
inc
outsb
out
mov
xchg
clc
mov
and
mov
and
pop
xlat
aas
mov
shlb
js
push
loopne
mov
pop
dec
imul
push
sub
adc
cwtl
ds
decb
pop
test
popl
jno
xchg
jp
mov
rorl
push
xor
cmc
mov
cltd
inc
pop
push
dec
je
pop
sub
das
push
loop
repz
cli
nop
sub
gs
or
xchg
sub
cmp
pop
sub
mov
bswap
addr16
mov
add
cltd
sbb
aad
adc
add
jle
js
adc
std
mov
sbb
push
in
dec
sbb
aad
pop
sahf
dec
cmpsb
sahf
mov
inc
orl
pop
xor
cwtl
cmp
rclb
add
inc
lds
scas
jne
lret
testb
mov
lahf
pop
out
arpl
xor
test
setb
cmp
or
jmp
in
imul
les
pushf
lcall
call
push
imull
icebp
jmp
rolb
adc
je
jns
mov
xchg
cli
adc
scas
fsubp
scas
sti
sub
gs
and
repnz
sbb
js
div
pop
jbe
ss
mov
and
fldl
ss
and
lock
jge
adcb
push
dec
sarl
xchg
fimuls
sub
inc
dec
cmpsb
mov
loope
adc
dec
sbb
cwtl
xorl
mov
jmp
pop
int
int
and
lods
adcl
xlat
arpl
mov
xchg
cwtl
movsl
dec
cld
xchg
out
jbe
dec
jmp
jmp
or
sub
ret
pop
jno
clc
cmp
mov
mov
lcall
inc
cmp
mov
mov
mov
gs
shr
xchg
icebp
push
orb
or
cli
mov
loop
xchg
pop
or
mov
mov
repnz
rcrb
iret
bswap
sbb
mov
cmpb
jne
imul
add
fistpl
rcll
subb
jae
in
pop
arpl
pop
mov
add
jp
fimuls
popf
lods
adc
jne
testl
or
mov
jmp
sbb
xchg
mov
enter
cmp
bnd
shrb
sub
and
je
daa
insl
pop
pop
iret
cmp
push
dec
iret
jmp
cmp
sbb
or
das
leave
dec
mov
and
sbb
fsubrl
ds
xchg
mov
out
cwtl
fsubrs
cld
push
push
dec
cmc
out
jle
and
cmc
enter
lret
or
lea
xor
imul
iret
xchg
cmp
iret
sub
push
cwtl
xchg
into
add
pop
xchg
iret
faddp
dec
in
insl
pop
mov
mov
xor
jae
jns
lret
adc
lods
cltd
in
fwait
and
dec
leave
shlb
or
add
adc
aaa
enter
dec
push
mov
mov
xor
push
fcomi
fwait
xlat
into
loope
pop
sbb
pop
enter
ljmp
lds
add
cld
push
sarl
add
adc
add
add
fcomp
mov
imul
icebp
xor
cmpsl
push
in
mov
and
and
stos
xlat
mov
sub
jns
sbb
adc
jl
pop
jle
mov
push
and
fisttps
movsb
outsb
xor
cmp
sub
adc
cmp
inc
jg
int3
je
xorb
out
int3
adc
mov
adc
lahf
call
loopne
lock
bound
mov
jo
xchg
int
xchg
xchg
cmp
xchg
pop
scas
jg
push
sbb
sti
call
fists
jne
push
xor
ja
nop
inc
jle
jecxz
dec
jle
scas
out
sub
dec
lock
scas
cmp
mov
dec
add
or
xor
shlb
jp
sbbl
sbb
pop
xchg
enter
jo
xchg
out
xchg
xchg
dec
push
mov
inc
imul
stc
test
push
mov
pop
into
cmpsb
out
pop
adc
cmp
pop
sub
xor
ret
inc
sbb
inc
mov
out
jb
sub
dec
push
cwtl
repnz
mov
dec
push
pop
mov
sahf
cld
jl
cmpsl
mov
test
movsl
ljmp
adc
xlat
or
add
pop
test
mov
rol
nop
push
je
xchg
sbb
mov
lahf
cwtl
push
hlt
pop
test
jmp
fsts
shll
lret
mov
mov
out
out
add
mov
aaa
scas
arpl
inc
sbb
xchg
cwtl
imul
mul
out
add
jno
out
mov
wrmsr
cmp
push
sub
aaa
pop
int3
test
or
ficoml
push
mov
mov
push
shl
jle
add
icebp
adc
sbb
cmp
jle
popa
mov
mov
gs
pop
mov
scas
dec
and
dec
and
pushf
cmpsl
test
mov
pop
jne
dec
repnz
int
les
mov
and
cmp
mov
pop
cltd
fisubrl
out
xor
and
add
hlt
cmp
dec
movsb
mov
rorl
insl
or
pop
imul
xor
jbe
sub
add
add
push
or
xchg
repz
rcrb
push
sbb
xor
enter
stos
xchg
cltd
es
cld
pop
xor
pop
cld
into
sub
add
pop
dec
or
pushf
pusha
cmp
movsb
aad
inc
ss
stos
sub
pop
jge
mov
or
fldcw
mov
test
jbe
and
sub
cwtl
jb
inc
jmp
cmp
icebp
xor
sar
mov
out
sbb
stc
dec
and
enter
fdivr
mov
repz
xchg
add
test
negb
pusha
jmp
add
inc
fbld
int
pop
push
stos
ret
cmp
mov
inc
dec
push
mov
and
xor
xorb
sbb
add
ljmp
pop
icebp
out
jg
xchg
scas
imul
mov
out
cltd
pusha
pusha
pop
incl
pop
lahf
aaa
xchg
mov
orb
xor
cli
mov
out
cs
and
mov
mov
pop
shll
testl
and
inc
pop
sbb
sub
arpl
in
fdivrs
mov
bound
sarb
push
and
lock
pushl
outsb
out
mov
dec
jp
sbb
push
jmp
push
xchg
js
lods
subl
mov
mov
out
or
mov
ljmp
inc
cmc
movsl
jg
push
adc
aaa
jle
xor
divb
mov
dec
xchg
icebp
add
or
jb
icebp
mov
dec
sahf
dec
outsb
aam
imul
shrb
outsb
cmp
cltd
into
mov
push
mov
dec
lods
sahf
stc
arpl
push
lds
lret
mov
lods
xchg
jl
pop
into
ret
sub
stc
scas
xlat
and
mov
fisubrs
mov
cmp
out
cmp
hlt
or
add
iret
push
push
push
jbe
xlat
inc
mov
cmp
add
mov
std
aaa
inc
stos
int
xchg
movsl
popa
sub
push
dec
pop
jle
fistpl
xchg
lea
mov
cmpsb
mov
and
add
xchg
lcall
fwait
lahf
pushl
in
stc
cld
mov
jle
jmp
fdivrp
adc
loop
ss
stos
shll
cli
pop
add
cs
xchg
jp
int3
mov
xchg
push
mov
daa
nop
dec
das
pop
loope
dec
mov
repz
push
in
iret
or
mov
and
and
jno
and
and
cltd
icebp
movsl
mov
mov
outsl
dec
mov
ret
and
int3
jg
jo
mov
cmp
test
aad
push
dec
sahf
inc
lds
jecxz
push
ja
sub
sub
bound
mov
mov
js
mov
mov
fcmovb
in
sub
repz
fldl
gs
in
mov
lods
stos
les
movsl
repz
loopne
push
ficomps
aaa
sub
pop
mov
fildll
dec
in
sbb
sub
test
andb
jo
mov
add
and
lcall
and
lea
push
push
xlat
adc
ret
jecxz
or
jle
dec
sti
mov
lock
pop
in
inc
add
xor
add
adc
mov
data16
iret
adcl
add
enter
mov
repnz
nop
mov
push
xchg
cmp
cmp
mov
leave
jp
mov
xor
xor
xchg
lret
cmp
or
das
orl
push
inc
adc
dec
iret
sahf
and
aad
out
push
pushf
pop
xchg
xor
cwtl
insb
inc
fsubl
sub
imul
mov
lods
mov
test
addr16
ljmp
sub
xchg
test
add
cli
pop
imul
xlat
or
jg
pop
xchg
mov
or
insl
jns
fistpll
nop
mov
sbb
xor
or
inc
fidivrs
insb
jge
mov
or
sub
mov
inc
ret
pushf
je
pushf
insl
jg
dec
cli
fbld
mov
and
sub
or
xchg
pop
lcall
push
mov
jbe
pop
jle
repz
rcrl
pop
sub
sub
add
pop
jecxz
das
jmp
stc
mov
pop
mov
xor
inc
adc
pop
out
mov
inc
iret
pop
lods
test
mov
mov
jmp
sub
aaa
xor
in
dec
cmp
sar
fwait
out
loop
test
loope
or
iret
pop
mov
adc
aad
jl
movsl
push
stc
jle
addr16
ss
jle
je
inc
repz
mov
pop
loope
clc
stos
aam
test
push
push
add
mov
pop
cmp
bound
push
jmp
notb
aaa
sarl
push
mov
outsb
fcmovnb
pop
in
and
mov
inc
imul
inc
int3
lods
push
mov
outsl
and
fst
outsl
out
xchg
jae
leave
dec
loopne
mov
pop
icebp
cwtl
push
push
jp
add
push
mov
mov
sbb
and
pushl
das
aaa
int3
scas
shl
push
dec
sub
cs
or
mov
lea
out
in
fs
imul
xchg
stc
cmc
popf
lock
adc
pusha
test
sbbb
jb
aad
cwtl
ret
adc
sahf
adc
jmp
adc
cltd
lret
fs
mov
lret
push
call
ja
adc
pop
leave
roll
repz
push
or
xchg
mov
jne
repnz
sub
and
outsb
lds
data16
mov
push
jne
or
xor
stos
push
mov
ja
test
mov
pop
mov
xchg
pusha
or
pop
mov
mov
xchg
fwait
sub
dec
add
bound
xchg
adc
cltd
cs
cld
jb
and
push
mov
insb
xor
out
dec
into
cmp
sahf
lock
pop
outsl
xchg
cmp
sub
out
and
out
xchg
insb
add
sbb
fbld
dec
sti
jl
dec
je
xchg
jne
popf
xchg
adc
sti
int3
xchg
popf
out
call
jns
xchg
xor
jo
pop
cld
pop
inc
out
sub
lahf
push
mov
icebp
xchg
push
pop
sub
dec
xchg
in
aad
cld
mov
scas
divb
gs
cmp
cmpsb
lods
xor
inc
rolb
push
repnz
xlat
pushl
or
cmp
test
inc
test
mov
adc
pop
jg
and
mov
cs
sub
jmp
fwait
push
inc
and
jl
cmpsl
mov
fcoml
adcl
cmp
inc
stc
fcoml
incb
adc
in
mov
and
fstl
cmp
sahf
mov
adc
xchg
xchg
add
push
out
into
pop
push
xchg
and
and
stos
mov
mov
push
and
pop
dec
and
imul
in
mov
sub
ret
icebp
out
adc
jo
aam
push
xor
data16
call
inc
cld
cmpsl
adcl
lcall
mov
cmpsb
sbb
mov
mov
mov
pop
fsubs
pop
fstps
addr16
adc
add
mov
lahf
std
add
and
sti
add
enter
ds
mov
xor
push
lds
fsubs
push
lahf
and
jle
dec
cmpsl
or
loopne
or
inc
test
pop
inc
clc
das
sub
movsl
dec
ficoml
shll
mov
pop
test
sahf
xchg
jae
lret
pop
pop
into
sbb
push
mov
mov
adc
ds
sti
imul
rorb
dec
mov
cmp
dec
sub
adc
popa
push
sub
lods
data16
inc
jp
inc
test
mov
sbb
mov
into
xor
out
sti
sbb
xchg
cmp
sbb
lret
push
ret
stos
add
dec
loopne
scas
xchg
aad
repnz
rol
cmp
xchg
push
dec
mov
cmp
sbb
inc
fwait
or
fwait
mov
fstpl
rorb
jbe
test
or
xlat
test
pop
mov
cmpsl
inc
jg
adc
jbe
cmp
dec
mov
mov
test
cli
jns
add
pop
sub
movsl
jae
xor
dec
push
mov
add
andl
sub
pop
inc
insl
popf
es
icebp
and
dec
and
push
or
adcl
test
mov
mov
fcomip
movsl
xchg
iret
je
decb
int3
xchg
adc
dec
jae
sub
jbe
gs
outsl
cltd
jle
rcrb
jmp
dec
pop
adcl
gs
hlt
add
push
ficomps
lea
in
ja
adc
inc
xlat
xor
hlt
divb
imul
mov
or
shll
loope
mov
and
xlat
cmp
iret
and
loop
sub
loopne
mov
movsl
xor
or
cmpsl
shll
adc
push
mov
push
xor
scas
rcl
dec
mov
cmpsl
mov
out
jo
sbb
shl
js
inc
push
jecxz
das
fistpl
out
out
mov
push
mov
add
inc
inc
cmp
punpcklbw
stos
push
sub
pop
rcr
dec
pop
jne
lock
fwait
insb
call
enter
enter
cmp
sahf
mov
and
stc
cmp
cmp
jge
aaa
out
cmpsl
jb
fistpl
pushf
pop
cld
out
lods
sub
pop
and
cmpsb
fildl
sbb
sub
imul
mov
dec
inc
push
jg
jmp
mov
cli
cld
mov
bnd
gs
push
push
mov
cltd
scas
push
or
push
adc
test
in
inc
pusha
les
push
not
xchg
faddl
cmp
jnp
loop
xor
push
xor
xchg
mov
fstl
insb
ret
jo
mov
or
test
das
test
scas
je
push
adc
loop
div
push
push
bound
jnp
xchg
pop
rolb
sarb
popa
inc
subl
push
scas
ds
lea
adc
or
cld
rcrb
imul
cmp
inc
gs
rcll
mov
and
scas
dec
mov
jmp
in
shlb
jb
lahf
xlat
xor
in
stos
cmc
stc
push
cs
popf
rclb
idivl
mov
dec
std
out
in
mov
push
jl
test
sub
lods
xchg
adc
cltd
xchg
and
inc
out
add
sbb
adc
cmp
add
mov
and
stos
aaa
pop
bswap
xor
stos
mov
mov
sbb
pop
xor
mov
daa
das
mov
shrb
fbld
dec
mov
js
jbe
dec
jecxz
dec
jb
mov
lcall
ret
leave
stc
dec
stc
push
mov
or
mov
jae
adc
pop
das
mov
push
push
into
mov
insl
ss
push
xchg
in
js
sub
sti
leave
sbb
push
pop
jg
mov
jg
sahf
sub
test
sub
inc
jp
jecxz
mov
xchg
in
xchg
test
adc
pusha
outsl
fsubr
or
xchg
mov
jae
xchg
or
lahf
fsts
cmp
mov
bound
aam
fmul
icebp
jo
mov
mov
pop
nop
pop
mov
and
xchg
xlat
rcrb
push
cwtl
or
push
xchg
arpl
jns
push
add
mov
jp
lods
dec
fdivl
mov
mov
sarl
test
cmp
push
sub
arpl
and
and
jecxz
fld
xchg
lcall
add
rorb
stc
jae
mov
jmp
hlt
shll
mov
pop
fdivs
into
es
mov
fistl
xor
in
testl
or
das
pop
jbe
or
shlb
or
mov
jl
mov
fcomp
xchg
stos
cmp
mov
xchg
lods
and
fmuls
mov
pusha
pushl
push
sbb
push
insb
xor
inc
cmc
push
inc
int
movsl
fildl
or
scas
arpl
insb
jge
aaa
enter
xchg
inc
movl
adc
pop
insb
pushf
cmp
ror
xor
adc
int3
mov
pop
data16
pop
pop
cltd
adc
sti
jl
mov
lock
xor
pop
xchg
fisubl
shlb
push
xor
decl
data16
fmuls
stc
add
ret
mov
cmp
lret
mov
int3
je
sahf
movsb
pop
sub
out
aad
out
scas
test
shr
mov
lret
lcall
mov
mov
adc
lcall
repnz
in
pusha
setns
lahf
pop
add
ja
and
ret
hlt
les
scas
insl
stos
jg
lcall
add
and
jmp
sub
dec
scas
add
mov
or
sub
hlt
leave
sahf
call
pop
xchg
mov
cmp
cmp
imul
add
adc
dec
lret
push
out
mov
mov
dec
cmp
sti
lcall
pop
out
je
shrl
popa
fistpl
fucomi
and
sti
in
xchg
stos
xchg
sbb
or
subps
enter
push
push
mov
lcall
mov
das
pushf
push
frstor
test
sahf
cmp
stc
mov
aad
out
mov
scas
add
sbb
iret
jl
lahf
dec
sub
or
inc
out
lcall
sbb
or
xor
inc
mov
mov
push
icebp
cwtl
sbb
or
mov
jle
sbbl
imul
mov
cs
clc
xchg
sbb
pop
mov
dec
jp
mov
inc
jns
data16
lods
imul
les
movsl
sbb
xchg
xor
in
pop
hlt
scas
adcb
aas
push
arpl
push
sub
push
sbbb
sti
sub
scas
loop
add
stc
xchg
mov
jge
adc
ljmp
jae
sarb
arpl
jb
call
lods
jno
cmp
push
fisttpl
cmp
rcll
xchg
add
adc
insb
adc
adc
popa
push
push
mov
pop
adc
arpl
xchg
and
popf
stc
movsb
rorb
push
xchg
cli
data16
jecxz
dec
and
idiv
popa
adc
fsubrs
sahf
inc
outsb
imul
cmc
dec
mov
test
lcall
adc
pop
pop
jb
or
daa
js
fidivrs
lds
xor
xor
adc
mov
cmp
mov
or
xor
add
or
lcall
lcall
outsl
cmp
inc
jnp
and
ljmp
add
xor
les
xor
dec
insl
mov
dec
mov
xlat
les
add
xor
pusha
add
icebp
in
mov
daa
fildll
add
out
add
cmp
sub
mov
icebp
inc
mov
mov
int3
push
filds
cltd
inc
mov
push
std
daa
jle
fidivs
pop
das
jg,pt
nop
mov
ljmp
ret
sahf
mov
std
pop
rcl
inc
sbb
into
push
jmp
arpl
insb
mov
inc
ret
push
lock
cmp
mov
in
cmc
cmc
cli
add
into
or
fdivp
lods
mov
rcll
dec
repnz
call
out
inc
ficoml
stos
jge
pop
aad
int3
xchg
pop
push
push
inc
arpl
jg
iret
cli
push
mov
and
iret
mov
pop
lock
push
and
mov
sbb
pop
lret
jae
std
fstcw
rcl
mov
leave
into
lods
jmp
mov
adc
shlb
mov
xor
mov
push
push
push
cmp
cs
inc
addr16
push
cmp
cmpsl
into
fistpl
out
dec
movsl
push
iret
xchg
add
mov
mov
xchg
cmp
pop
std
popa
mov
stc
mov
dec
push
push
scas
push
test
dec
ret
ret
or
mov
ss
jmp
xchg
sbb
fcmovnbe
jl
pop
ja
adc
gs
mov
fnstsw
sbb
les
xor
pop
or
rcll
rorb
insl
pop
aas
mov
enter
pop
icebp
pop
clc
dec
pop
push
adcb
ds
mov
add
xchg
sbb
push
jp
cltd
int
sbb
sub
xor
les
sahf
dec
or
sub
jg
rcrl
mov
add
mov
jmp
pop
neg
push
fwait
adc
aaa
ret
ret
pusha
jno
int3
or
lods
rorb
ficomps
cmc
icebp
sahf
pop
cmp
lds
jle
mov
fists
cli
cltd
adc
cmc
rol
icebp
sub
pop
lods
mov
lahf
add
fs
cmp
nop
negl
mov
mov
cwtl
or
addr16
mov
iret
test
hlt
cmc
or
sbb
cltd
mov
outsb
dec
mov
imul
mov
pop
jg
shlb
mov
mov
iret
sbbb
xchg
inc
out
sbb
dec
repz
ds
call
push
dec
mov
das
enter
gs
adc
imul
test
inc
dec
test
lahf
clc
dec
jbe
shl
pop
mov
push
bound
icebp
je
mov
out
sub
adc
mov
fisttpll
scas
cmp
push
pop
pop
pop
ret
std
fists
sub
ret
push
daa
dec
or
push
mov
lret
icebp
cld
sbb
xor
fs
sbb
loope
mov
rcll
movsl
mov
mov
sahf
arpl
imul
mov
mov
stos
jb
rorl
lcall
xor
jnp
push
fcoms
cmc
cmp
mov
repz
add
add
cltd
out
fwait
stos
fisttpl
js
cld
jbe
xchg
push
sub
shl
add
sbb
lods
dec
pop
in
cmp
sub
adcl
adc
pop
jmp
out
div
test
das
das
inc
clc
dec
pusha
cmp
mov
xchg
adc
xchg
cmp
mov
mov
mov
stc
xor
cmp
jne
mov
std
jne
add
lock
lahf
popw
adc
cwtl
jns
mov
cld
ficompl
and
add
dec
aas
popf
addr16
leave
sub
mov
rclb
outsl
mov
out
jne
lods
sbb
inc
push
inc
addr16
jns
cpuid
out
mov
inc
rcrb
cmp
insb
add
icebp
int3
push
cmp
jmp
repnz
xchg
jbe
dec
daa
insb
lods
mov
and
addr16
loop
sbb
add
sub
loop
pop
pop
pop
push
fdivs
jecxz
add
push
ror
jnp
jge
rorb
xor
xchg
lahf
in
dec
lea
outsb
inc
xor
mov
mov
sub
arpl
inc
out
mov
int
rcrl
adc
dec
adc
hlt
mov
scas
push
testb
jo
and
xor
faddl
adc
push
push
sbb
mov
into
imul
lcall
scas
stc
xor
pushf
arpl
imul
push
cmp
aaa
fisubrl
into
ss
jo
pop
add
cmp
int
add
lahf
out
jb
enter
pop
xlat
mov
out
mov
mov
jnp
dec
fisubrl
and
aaa
mov
popa
dec
adcl
cmp
sub
adc
int
data16
xchg
in
adcb
insl
cmpsl
dec
daa
jle
pop
aas
lock
pop
push
in
mov
stos
mul
jle
loope
loop
cld
lods
and
pop
dec
sub
jmp
fdivr
sbb
sahf
sbb
arpl
jle
and
in
xchg
mov
aam
xchg
ds
rol
inc
add
and
out
mov
mov
imul
adc
add
xor
psllq
mov
mov
loop
in
jno
adc
hlt
inc
sub
and
jl
or
push
sbb
movsl
imul
clc
xor
jae
je
ja
sti
jns
push
fdivr
rorb
pop
inc
stos
aam
icebp
cmp
xor
fmull
jbe
lods
xchg
sbb
fstl
addr16
lret
popa
jb
add
subps
push
imul
shl
pop
mov
xor
add
pop
xchg
lret
jecxz
pop
or
push
xchg
enter
push
lcall
jno
sti
pop
test
jmp
movsb
gs
add
fisubs
jbe
push
mov
mov
test
pop
mov
push
push
imul
call
mov
push
adc
mov
cli
jl
addl
bound
inc
or
loope
mov
jne
into
daa
and
inc
ss
movsl
adc
dec
mov
mov
adc
add
addr16
push
aam
clc
jmp
and
insl
test
pop
iret
push
in
fisubrl
mov
dec
lret
int
loopne
cmp
jmp
xor
or
aad
ror
lret
cs
push
movsb
push
ja
add
mov
arpl
add
push
dec
int3
and
sbb
loopne
popa
mov
mov
push
mov
fcmovne
lods
and
lock
jne
outsl
sahf
mov
loop
in
pop
adc
jl
loopne
xor
push
or
repz
cmp
addr16
jecxz
fidivrl
les
mov
or
xchg
dec
pop
mov
xchg
dec
mov
cmpsl
mov
arpl
fidivrs
int
cld
push
jns
mov
inc
inc
cmc
jae
mov
aaa
jecxz
sbb
adc
mov
in
inc
popf
lcall
mov
sub
xchg
ss
xchg
mov
push
out
sub
arpl
fnstcw
mov
mov
mov
rcll
cmc
pop
std
mov
sbb
mov
cwtl
inc
sarl
xchg
shl
and
jmp
push
adc
stos
mov
in
icebp
sbb
inc
sub
mulb
rolb
pop
hlt
cltd
mov
adcb
or
sub
js
in
mov
sbb
das
and
orl
xor
mov
sbb
xchg
femms
inc
into
jmp
rorl
xchg
or
dec
lock
pushf
push
push
mov
jle
mov
xor
xor
or
cltd
jb
jge
movsb
addr16
stos
jb
out
sbb
lahf
in
out
ret
jg
or
mov
loopne
dec
mov
lock
jg
lds
sbb
jae
leave
dec
and
xor
xlat
xchg
mov
adc
push
dec
pop
mov
push
insb
lods
lods
mov
cmp
outsl
mov
add
xchg
inc
and
jg
push
pop
lods
add
fnstsw
inc
cmp
scas
dec
and
sbbb
push
frstor
mov
adc
ja
fs
push
sbb
mov
or
mov
mov
movsb
push
sbb
mov
scas
cmp
inc
xchg
in
sbb
lret
sarb
mov
das
clc
mov
push
insb
jge
test
mov
ds
push
mov
enter
in
fs
xchg
jno
in
das
sbb
pusha
lahf
pop
les
push
push
xor
jecxz
mov
ret
jns
jo
mov
and
ficomps
or
ljmp
stos
cmpsb
pop
int
prefetch
or
dec
das
sti
sbb
scas
xchg
pop
mov
lods
pop
jbe
movsb
adc
pop
mov
jae
mov
push
sbb
mov
shrb
push
pusha
loopne
xorb
xchg
cli
repnz
dec
adc
scas
cmp
stc
mov
jecxz
in
fwait
stos
xchg
das
inc
cld
xorb
rorb
xchg
fbstp
add
mov
sbb
mov
ds
sarl
push
mov
sub
out
and
sub
jne
adc
and
in
popa
pop
or
xchg
xor
outsb
fstpt
jl
xor
cmpsb
add
push
cmp
ret
push
cs
scas
xchg
and
add
lret
pop
jmp
scas
add
idivl
sbb
fs
xchg
inc
mov
mov
ret
cmp
out
mov
nop
mov
dec
aaa
sub
pop
inc
pusha
faddp
bound
inc
jno
push
sbb
sub
mov
sbb
xchg
test
push
push
xchg
out
in
loope
xchg
xchg
dec
mov
clc
out
push
adc
push
inc
xchg
cmp
lcall
cs
ja
mov
xor
pop
pop
popa
add
cmp
cmp
push
mov
push
pushf
jno
push
jge
pop
adc
cmp
cld
fisttps
inc
xchg
iret
inc
and
es
pop
enter
cwtl
push
push
aad
jmp
xlat
or
dec
lcall
into
movsl
xchg
xlat
mov
shll
ret
xchg
in
stc
ljmp
cmpsb
into
das
in
cmpsb
jmp
cltd
pop
stc
rorl
or
mov
mov
mov
pusha
out
mov
ja
rcll
and
xchg
leave
lret
int3
jp
or
or
mov
call
push
repz
jb
mov
adc
sub
cmp
lock
pop
call
jne
jge
push
lods
addb
dec
xchg
cmp
fidivl
scas
lods
leave
adc
sarb
cs
repz
pop
repnz
mov
in
dec
sbbb
and
mov
xor
cmp
pop
dec
pop
decl
push
xor
jae
xchg
jle
sbbl
sbb
xchg
ljmp
jmp
add
fs
and
mov
frstor
lods
shrl
rcll
mov
xchg
mov
call
insl
pop
fldenv
decl
ss
and
xor
mov
pop
into
testb
stos
lret
or
lods
adc
lret
inc
jl
into
notb
sahf
jo
pop
shrb
in
xchg
push
cmc
scas
adc
and
sub
repnz
push
lods
push
sysret
jmp
shrb
pushf
xchg
mov
repz
stos
sbb
loopne
xchg
imul
jno
es
repnz
pop
cmpsl
popf
cmpsb
jle
push
sbb
xchg
push
mov
setb
lahf
add
add
ljmp
loope
jbe
inc
cltd
dec
insl
les
sub
in
aaa
inc
les
and
nop
or
lcall
jp
or
xlat
pop
adc
pop
insl
shlb
pmullw
mov
sti
aad
lods
or
and
push
mov
or
or
lock
mov
fwait
or
ret
call
xlat
fadds
mov
inc
repnz
out
add
loop
std
lgs
inc
fldt
dec
jle
fs
or
adc
cltd
mov
outsb
dec
sbb
loope
popf
dec
mov
mov
mov
jo
adc
call
mov
cli
xchg
es
cmpps
sbb
in
loop
cmpsl
cmpsb
out
decl
xchg
mov
ja
enter
int3
std
mov
mov
hlt
push
pop
outsl
pusha
adcl
xchg
fisttpll
add
push
xor
mov
cmp
cli
jle
movsl
xchg
cmp
mov
sbb
sub
inc
test
or
jno
mov
das
mov
mov
cmp
jle
adcb
lcall
decl
inc
push
inc
mov
subl
jb
andl
pop
dec
cvttps2pi
jle
mov
loope
scas
jp,pt
mov
or
sub
mov
sbb
mov
and
fstpt
leave
adc
inc
pop
push
xor
ja
adc
outsl
pop
sbb
jnp
pop
sub
and
mov
pop
sbb
in
jo
outsb
out
inc
sahf
ffreep
mov
dec
mov
stos
inc
add
push
inc
jp
inc
inc
sub
inc
xchg
popa
leave
sub
cmp
out
dec
push
mov
sti
dec
sbb
push
push
cmp
dec
testl
int3
mov
xor
shrl
sub
adc
push
shl
dec
repnz
dec
mov
insl
shrb
ss
sbb
mov
adc
jbe
repnz
lea
ret
inc
cmp
fisttpll
call
popa
imul
rclb
lods
lret
xchg
dec
xchg
pusha
test
rcrb
sbb
inc
mov
adc
xor
mov
out
cmp
ljmp
inc
lret
fsubl
aaa
mov
pop
lock
es
fldcw
es
dec
jle
lea
mov
test
cmp
ljmp
popf
push
flds
out
mov
movsl
push
xchg
test
push
adc
push
aas
js
pop
aas
fs
push
fnstenv
ret
adc
inc
stc
sbb
leave
pop
shrb
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
push
push
mov
push
call
lea
push
lea
push
lea
push
call
test
je
mov
push
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
mov
push
push
mov
push
push
push
call
movb
mov
add
mov
mov
movl
mov
push
call
call
pushl
pop
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
mov
call
test
jne
push
push
push
call
call
push
push
push
push
push
call
test
je
push
push
push
call
mov
mov
call
mov
cmpl
jne
push
call
add
push
push
push
call
xor
pop
mov
pop
ret
sub
push
push
call
lea
push
call
push
call
cmpw
je
push
push
push
push
call
push
call
add
jmp
pushl
mov
mov
roll
test
fnstcw
bound
or
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
fs
xlat
add
mov
inc
shlb
xchg
ret
mov
jo
sbb
icebp
out
xor
cli
pop
mov
andb
fcmovnbe
and
bound
or
or
and
sbb
push
jno
mov
push
push
mov
call
pop
mov
dec
and
into
loop
add
jmp
mov
dec
in
jno
and
push
and
inc
mov
jne
pop
addl
mov
add
sbb
roll
jnp
pushf
add
cld
call
flds
mov
roll
jp
flds
pop
mov
test
or
mov
bound
or
inc
mov
roll
fadds
mov
roll
jnp
flds
aaa
mov
or
add
adc
or
adc
adc
sbb
add
adc
sbb
push
push
sbb
shrb
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
divl
lret
movsl
test
or
add
adc
sbb
xor
cld
roll
jnp
cmp
out
adc
sbb
xor
or
nop
jnp
flds
mov
roll
pop
fabs
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
mov
roll
jnp
flds
cmpsl
mov
scas
ror
jnp
push
dec
pop
push
pop
test
xchg
test
adc
lds
mov
and
ljmp
mov
dec
lds
jg
cmp
cmpsl
pusha
in
dec
sub
mov
or
out
cmp
jns
mov
test
jle
push
lods
cmp
cwtl
mov
stos
adcl
cmp
xchg
mov
xor
lcall
lock
popf
jecxz
shl
dec
ret
fstpt
and
xchg
push
mov
jecxz
pop
mov
add
mov
in
jmp
push
inc
jns,pt
idiv
xchg
pop
and
pop
ret
in
xor
or
jb
mov
adc
add
sarb
decl
es
inc
mov
inc
fisttpll
adc
sub
mov
lret
push
repnz
js
or
mov
pusha
sub
and
inc
dec
ss
and
ret
adc
jmp
pop
add
push
in
sahf
fsubl
sub
orl
push
lods
rcrl
mov
push
pop
cmp
sub
mov
pop
adc
mov
lock
sbb
gs
in
mov
add
mov
shlb
rclb
aaa
pop
notl
jae
rorl
rcll
add
or
jecxz
fsincos
jnp
or
rorb
cltd
clc
lret
cli
outsb
popa
lret
in
sub
imul
or
popf
add
imul
and
jns
cmc
dec
dec
fwait
pop
stc
mov
or
test
imul
cld
mov
cmp
jbe
jmp
insb
js
les
iret
and
mov
pop
insl
or
repz
or
loop
hlt
jl
add
ret
pop
push
adc
enter
push
clc
pop
ret
jmp
inc
addl
adcb
and
add
pusha
ficoms
aam
jge
cmpsb
insl
adc
sbb
ds
test
pop
imul
mov
jle
lock
pop
jne
loope
or
sub
or
imul
cmp
je
and
pop
mov
and
ljmp
jo
cltd
jecxz
mov
jecxz
cli
hlt
sub
out
fcoml
sub
repz
adc
add
fildll
push
xchg
incb
add
jecxz
cli
imul
loopne
cmp
cmovne
mov
sbb
push
jb
lods
adc
mov
jge
in
cmpl
dec
lds
add
xchg
cmp
clc
mov
jnp
sbb
ja
jbe
add
cmpsl
movsl
sbb
mov
push
pop
lcall
outsb
cmp
fldcw
mov
and
inc
mov
inc
mov
in
das
jge
push
imul
xchg
ss
push
ds
jmp
pop
adc
enter
repz
add
adcl
pushf
in
dec
jmp
fwait
les
scas
subb
cwtl
cwtl
aaa
scas
xor
aaa
push
cmc
scas
jl
sbb
dec
push
mov
push
es
outsl
fistps
xlat
into
outsb
jb
dec
adc
fcomps
dec
in
insb
cmc
scas
push
outsb
dec
xlat
cmovge
or
aad
xor
into
sub
mov
in
lahf
or
dec
mov
std
lock
adc
xor
xor
jg
sbb
into
cs
ja
dec
mov
mov
push
mov
stc
mov
stc
orl
jl
jmp
lea
aaa
dec
and
and
sub
cmpsl
pmuludq
in
popa
dec
fisubl
mov
mov
outsb
xchg
or
lods
xchg
daa
inc
call
loop
push
add
testb
hlt
sbb
test
rcll
mov
insl
pusha
test
stos
fstpl
add
mov
jmp
stc
jmp
ja
or
inc
pusha
adc
adc
pop
cwtl
lret
enter
dec
dec
sbb
jnp
push
pop
or
sbb
in
movsl
fdivl
xchg
mov
ret
sub
fistps
frstor
cld
add
outsb
dec
mov
or
popf
lock
push
push
pop
sti
movsl
std
fucomp
jecxz
lods
mov
mov
outsb
mov
adc
jecxz
stos
out
mov
sbb
int
inc
mov
cmc
push
pop
jg
push
push
imul
fdivl
dec
cmp
adc
xchg
inc
jl
xchg
adc
addr16
fldcw
fistpll
ret
pop
pusha
mov
sub
mov
out
lods
xor
jb
fistpl
cmp
xor
imul
pop
hlt
xchg
sub
or
ja
shl
and
push
push
xchg
pop
dec
movsb
iret
adc
cmp
cmp
popa
cmpsb
paddsw
nop
cmp
and
pop
dec
out
mov
in
mov
or
add
loope
loope
jmp
push
stos
pop
xchg
cltd
lods
aas
push
out
aam
jecxz
rcr
hlt
test
fistps
std
cmp
xor
andb
sbb
xor
inc
fisttps
sti
xchg
stos
jnp
lock
insb
push
mov
cmp
jnp
push
add
pusha
push
dec
dec
jp
pop
jp
jl
js
adc
fisubl
imul
lods
cmp
cmp
push
push
cmp
pop
addr16
es
outsl
int
and
outsl
adc
xlat
xchg
addb
cld
ljmp
clc
xchg
jno
mov
mov
iret
loop
subl
js
xlat
jge
fwait
mov
hlt
or
xchg
cmpsl
cmc
pop
mov
and
inc
mov
hlt
lret
mov
aad
dec
pop
std
or
xchg
adc
stos
aaa
push
pop
shll
xor
setae
sbb
sahf
inc
ja
in
gs
inc
insb
mov
push
sub
mov
inc
popf
mov
fs
popf
sub
ret
fmuls
sub
fstpl
jp
insl
mov
es
dec
cltd
scas
mov
fwait
inc
adc
mov
les
or
jae
pop
sub
sbb
dec
jle
sub
call
gs
xchg
sti
test
or
add
es
dec
adc
xor
in
cmp
jl
adc
in
mov
pop
mov
push
lock
mov
mov
mulb
push
jl
test
les
jo
out
frstor
mov
pop
sbb
add
sbb
mov
scas
movsl
test
cmp
add
cltd
or
adc
xchg
rorl
dec
xchg
lods
fcoms
stc
dec
pop
dec
jnp
pop
sahf
pop
sahf
jno
imul
inc
xor
sbb
mov
ror
call
sbb
inc
pop
icebp
cmp
xchg
insb
mov
dec
dec
stos
pop
fidivl
out
and
push
inc
psubb
sub
aaa
or
sub
add
dec
mov
mov
sbb
mov
sti
lcall
nop
xlat
std
adc
push
ja
pop
mov
cld
ja
pusha
stos
insb
push
stos
push
jae
push
jmp
faddl
out
adc
jmp
inc
mov
mov
sti
pop
les
push
add
aaa
in
leave
mov
dec
push
imul
pop
xchg
push
ret
insl
fistpll
mov
clc
cmpsb
ret
cli
lock
scas
pop
cmp
loop
imul
add
aaa
inc
addl
sbb
sbb
popf
incb
mov
leave
jnp
add
push
mov
popf
lret
jnp
call
data16
or
xchg
ret
pop
dec
sub
test
and
cmpsl
xchg
shl
je
outsl
adc
call
enter
cmpsb
and
je
push
push
sub
add
xchg
adc
dec
sub
dec
mov
lcall
push
stos
push
call
cmp
sub
xchg
stos
inc
or
lret
xchg
dec
outsb
sub
test
call
je
cmp
and
dec
pop
inc
pop
in
leave
xor
dec
outsl
mov
ret
mov
jbe
je
mov
cmp
cli
sti
mov
lcall
xchg
andb
push
mov
fldt
push
cs
jmp
out
mov
sbb
adc
fadd
sub
and
pop
add
cltd
imul
shlb
imul
dec
sub
mov
mov
sbb
fsubrp
lds
xchg
mov
dec
pop
jle
adc
push
jne
aam
clc
xor
sbb
adc
pop
outsl
cmp
adc
push
xchg
xlat
xchg
add
mov
mov
jecxz
iret
inc
mov
movsb
das
inc
test
sub
xchg
cwtl
iret
dec
xchg
ss
mov
fldt
stos
mov
and
pop
pop
xor
lods
sbb
inc
aad
push
insb
fcomps
push
lret
test
in
imul
negl
mov
sbb
popa
mov
in
sbb
xchg
pop
cmp
push
push
or
into
in
xchg
int3
fwait
xchg
jb
lcall
sti
mov
pop
or
adc
add
push
and
shrb
lret
insl
leave
sbb
push
movsb
cmp
push
pop
shlb
jecxz
jle
mov
mov
push
sti
fists
call
sbb
xor
mov
ss
jmp
jae
push
xchg
mov
shrl
cmpsb
inc
jnp
pushf
mov
push
jae
ja
add
cmpsl
push
jge
adc
or
scas
adc
sub
jmp
movaps
ret
les
and
out
and
cmpsb
aaa
push
xchg
jecxz
das
pusha
fcmovbe
jo
sub
je
adc
fdivrs
cwtl
sbb
or
adc
loop
sti
stos
inc
mov
jle
and
insb
fs
mov
test
and
ret
dec
and
and
mov
cmp
mov
inc
in
hlt
pop
and
cmp
inc
aas
lcall
leave
sub
sbb
fsubrs
mov
fcomi
adc
mov
xchg
or
pop
roll
iret
add
dec
pop
xchg
aas
mov
inc
push
mov
xor
aam
jmp
movsl
mov
sbb
mov
dec
rolb
idiv
aas
fcmovnb
xchg
dec
xchg
ret
imul
shll
inc
nop
add
incl
cmp
cltd
sbb
mov
jno
cmp
xchg
add
fistpl
inc
stc
add
rolb
pop
les
jle
sbb
mov
in
xchg
mov
jmp
lret
out
inc
lret
cld
lds
adc
fwait
stos
fs
inc
cmpsl
mov
mov
mov
add
pop
adc
jmp
push
cwtl
cld
xor
imull
sbb
ss
mov
hlt
inc
out
mov
movsl
mov
psubb
mov
or
jo
insb
push
xor
jne
and
out
fcmovb
add
pop
ss
cs
or
and
dec
or
mov
in
ja
xor
cmp
pop
push
sub
mov
pop
cmpsb
out
mov
or
and
out
sbb
loopne
jbe
inc
xchg
cmpl
mov
xchg
out
mov
sub
jle
jp
out
inc
sub
dec
arpl
imull
orl
xlat
ret
inc
cmpsl
cmp
adc
push
push
push
call
xor
add
ret
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
