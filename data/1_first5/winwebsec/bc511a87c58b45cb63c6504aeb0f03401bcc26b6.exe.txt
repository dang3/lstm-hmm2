fistpl
subl
insb
adc
add
sub
dec
mov
hlt
mov
mov
or
mull
out
xchg
fidivl
sub
pop
adc
adc
outsb
js
aam
pop
popl
inc
adc
lret
std
push
fwait
inc
loopne
sub
or
loope
movl
ljmp
or
inc
aam
arpl
mov
js
adc
mov
lods
mov
lret
push
int
adc
mov
ret
sbb
sti
popf
jns
sbb
fwait
or
scas
inc
add
inc
sti
cmp
or
loop
aam
adc
push
cmp
je
scas
insb
mov
xchg
loop
sarb
pop
jg
hlt
popa
or
push
push
xchg
icebp
in
dec
inc
mov
hlt
inc
mov
mov
cmpsl
mov
xor
pop
hlt
movsl
scas
sub
adc
dec
jne
cmpl
inc
sti
cmc
pop
xor
xchg
xor
testb
mov
dec
jo
xchg
stos
test
or
idivl
outsb
push
mov
and
pop
jns
add
push
jo
xchg
pop
aaa
mov
push
xchg
cmc
inc
repnz
xor
dec
jbe
sbb
lods
inc
mov
sbb
sub
dec
mov
mov
adc
or
xchg
jg
adc
sbb
fwait
add
cmp
sbb
shr
call
cmc
sbb
fs
lret
int3
mov
data16
mov
in
jge
aaa
lahf
push
jmp
testb
pop
and
ss
mov
fistpl
pushf
out
adc
and
imul
pop
and
jns
add
push
xor
adc
add
shrb
inc
mov
mov
sbb
xchg
in
inc
jecxz
add
pop
push
repz
std
or
mov
sub
xor
pop
pusha
adc
xchg
adc
mov
inc
in
movb
ret
sub
adc
and
aad
sub
out
mov
mov
xor
ljmp
xor
jne
inc
mov
hlt
jle
xchg
push
pop
mov
pop
stc
enter
jne
jle
mov
fcmovnb
cli
popf
scas
sbb
and
ja
jmp
clc
arpl
mov
mov
jbe
push
mov
rclb
lods
test
hlt
jae
pop
xchg
ljmp
sub
add
push
loope
add
fbld
jb
sub
bound
adc
jmp
cmp
xchg
iret
mov
dec
shr
aam
ds
les
loopne
es
sub
rol
adcl
pop
push
pop
xor
outsl
mov
add
pop
lret
pop
push
addr16
sbb
add
ret
mov
cltd
sbb
stos
andl
xchg
push
xchg
adc
loopne
test
cltd
fxch
xchg
lahf
int3
rcrb
test
add
jns
jl
jmp
rorb
xor
push
xchg
sub
push
mov
dec
xor
loope
inc
fldl
mull
mov
xchg
adc
or
inc
cmc
lea
adc
test
inc
enter
dec
mov
mov
xor
popf
scas
in
aam
pop
lock
aas
xchg
stos
repz
pop
repz
push
jmp
sbb
add
js
push
loopne
mov
or
xor
inc
in
cmp
fidivs
out
cltd
mov
lcall
or
movsb
cmp
shlb
cmp
dec
gs
je
dec
cmpsl
shl
or
mov
dec
jge
add
sub
or
add
movsb
fisttps
jo
bound
repz
cmpsl
mov
cmp
adc
arpl
mov
jecxz
mov
ficomps
add
test
imul
outsl
push
sbb
push
jns
push
std
pop
xor
lret
push
mov
outsb
push
loope
push
add
lock
mov
dec
dec
xor
orb
mov
adc
xchg
aam
insl
fdivrs
xchg
es
jg
mov
sub
es
lcall
pushf
adc
xchg
jecxz
mov
notl
test
add
adc
xchg
std
xor
jns
dec
out
test
and
or
sbb
mov
and
adc
mov
shr
aaa
fldenv
sbb
inc
mov
inc
lods
mov
sub
fmul
ja
jbe
or
repz
or
aaa
pop
enter
jnp
xlat
aas
and
test
cld
and
mov
jl
daa
mov
mov
es
or
inc
imul
mov
jae
xchg
push
xor
std
xchg
sbb
sti
notb
test
xchg
mov
fmuls
sub
loope
pop
sbb
data16
ss
cltd
in
mov
jecxz
fsub
xchg
cmpsb
aas
cmpsb
outsl
out
addr16
mov
mov
je
cltd
scas
push
imul
mov
push
sbb
cwtl
pop
add
pusha
pop
and
xorb
test
enter
xchg
xchg
mov
and
add
sub
or
xchg
mov
inc
push
xchg
jbe
and
outsb
push
movsb
mov
sub
pop
aaa
scas
aam
ficoms
pushf
rolb
xchg
xor
cmp
or
scas
test
push
into
xchg
xor
and
adc
int
lret
jnp
fildll
clc
xor
aam
add
and
and
inc
test
and
test
vpsubq
fists
mov
test
out
push
rol
scas
and
lods
add
aam
jge
xor
or
pop
add
cmp
lcall
mov
mov
adc
mov
es
jp
mov
sti
mov
inc
mov
fwait
bound
adc
shll
push
adc
add
enter
mov
ret
out
cs
inc
push
jbe
push
lea
pop
stos
xchg
xchg
inc
test
ljmp
inc
cmpsb
or
iret
inc
repz
cmp
pop
cmp
adc
or
xchg
data16
or
clc
call
mov
push
adc
mov
lret
dec
insl
ldmxcsr
lods
xor
and
orl
js
dec
xlat
mov
notb
out
rol
notl
cmpsb
fsub
std
jnp
pop
cmp
xchg
push
push
xor
rcrb
pop
and
sub
push
je
iret
adc
in
fstl
cmpsb
push
xchg
push
or
inc
jecxz
inc
pop
mov
int
add
insl
fldl
xor
add
and
lcall
stos
or
mov
and
mov
jge
mov
and
ret
inc
pop
or
sbb
jl
jge
pop
xchg
lock
mov
or
and
sbb
in
hlt
sub
out
adc
xchg
mov
mov
jmp
bnd
iret
cltd
je
jb
xchg
outsl
test
jp
lea
adc
mov
enter
push
xchg
or
int3
fcomi
xchg
xchg
push
popf
daa
imul
jnp
insb
xchg
sbb
scas
jne
pop
call
fcoms
jecxz
rcrl
movsb
loopne
mov
or
or
divl
jecxz
inc
sarl
push
xor
iret
mov
stc
push
pop
sarb
mov
mov
jecxz
repz
cmpsb
sbb
add
mov
sub
mov
incl
mov
std
jecxz
jmp
out
or
mov
dec
jle
mov
aam
repz
inc
lret
loop
nop
mov
sub
mov
shl
movsb
fistps
xchg
inc
insl
adc
mov
sub
inc
and
sbb
and
push
call
test
in
xchg
jg
cmp
test
stc
test
cmp
popa
inc
mov
push
mov
add
pop
popa
in
pop
xor
jg
dec
sbb
add
jle
cmp
shlb
push
fisubl
js
aaa
icebp
xor
ret
dec
pop
cmp
pusha
ret
inc
and
sbb
inc
lods
test
inc
fcomps
roll
hlt
xor
icebp
and
jp
stos
ja
sahf
rolb
std
inc
mov
mov
xchg
jnp
push
int3
pop
insl
jo
repz
frstor
mov
jnp
stos
add
sub
scas
out
hlt
lea
imul
lret
pop
loop
sub
call
pop
pop
aaa
xchg
dec
rcll
cwtl
inc
dec
mov
cmp
dec
mov
sbb
xlat
cmp
mov
cli
out
fistl
lcall
mov
sbb
mov
sbb
dec
cmpsl
test
out
xchg
loop
mov
add
xchg
mov
jo
aaa
jno
ds
and
dec
mov
fmull
jae
popf
rclb
and
daa
neg
nop
icebp
clc
ffreep
xorl
adc
push
lcall
mov
in
mov
sahf
test
add
mov
jae
ja
outsb
iret
mov
inc
outsb
cltd
and
or
mov
test
jo
rclb
and
scas
dec
movsl
cmp
js
movsl
and
scas
std
out
loopne
hlt
jns
jl
ret
adc
pop
pop
nop
insb
divl
loopne
lcall
bound
xor
push
insb
popa
inc
mov
aad
outsb
inc
sbb
ret
dec
pop
aaa
lea
jl
lods
dec
sub
lds
pop
movb
sub
jmp
rorb
jmp
cmp
mov
in
outsb
jecxz
lods
push
pop
push
incb
dec
lcall
lret
test
sar
lret
xchg
ret
jb
stc
in
imul
xor
iret
cmp
pop
or
pop
insb
mov
shl
out
xchg
mov
subb
jmp
js
je
lock
loop
xchg
loope
mov
arpl
and
adc
jl
jbe
cmc
or
pop
xchg
push
mov
sti
ja
sbb
sbb
xchg
jl
out
lock
push
and
lahf
inc
push
lods
test
cmp
add
jmp
lahf
adc
cwtl
mov
xor
lret
jae
scas
pushf
jge
push
mov
sub
pushf
inc
or
or
mov
jg
frstpm(287
cmp
mov
insl
mov
clc
inc
mov
fnstcw
sahf
xchg
mov
fldenv
pop
xchg
insl
dec
dec
mov
repz
and
or
arpl
js
inc
jle
jns
push
pop
mov
ret
faddp
dec
xor
loope
adc
icebp
xor
fstps
ret
cltd
adc
iret
mov
fsubs
sub
shrl
mov
insl
sub
out
sbb
jp
jns
mov
sahf
div
jmp
lcall
add
or
daa
out
jns
popf
and
int3
clc
pushf
pusha
mov
mov
mov
fadds
fbstp
mov
add
call
arpl
aaa
xlat
mov
fldcw
mov
aad
std
movsl
mov
push
jb
outsl
testl
loop
imul
xlat
out
cmp
xor
sahf
cmc
setns
adc
mov
aas
lcall
xlat
test
mov
xchg
movsl
xor
insb
jmp
leave
mov
cmpsb
inc
std
add
insb
fmul
aam
dec
sti
repnz
or
pop
stos
pop
js
out
pop
rcr
repz
dec
int3
cmp
add
inc
push
int
lods
sub
add
idivl
fstl
jo
add
in
pop
xlat
mov
mov
inc
popw
inc
mov
sbb
adc
push
mov
jo
cmp
add
lret
jae
pop
loope
cmc
hlt
inc
xchg
aad
dec
cwtl
hlt
std
hlt
lea
cli
mov
mov
repz
lods
cmpsl
rorl
imulb
jmp
push
fdivrl
jmp
insb
sahf
jne
or
mov
dec
pop
pop
sbb
mov
loopne
push
or
out
push
ret
out
out
out
mov
insb
xor
test
in
dec
xchg
stos
movsb
lods
inc
ret
fidivs
mov
jns
inc
in
call
cs
and
or
hlt
jnp
pop
add
inc
les
add
adc
test
test
sub
dec
mov
and
les
push
lret
les
dec
push
xor
mov
loop
pop
sub
loop
cmp
in
add
loop
sbb
and
sub
pop
das
and
xadd
jl
sbb
or
in
fidivrl
fistpl
call
inc
xor
xor
add
sub
push
push
fsubrl
aad
int3
xchg
call
mov
pop
push
and
cmp
out
xor
test
fbld
push
inc
xchg
dec
mov
bnd
xchg
mov
cmp
gs
jp
mov
add
out
daa
and
dec
call
dec
test
mov
cltd
mov
ret
adc
ret
xor
rcr
mov
enter
xchg
mov
fistps
ret
inc
and
sbb
das
jp
and
aas
xor
xchg
jp
repz
je
mov
lcall
adc
pop
sub
mov
cmp
mov
and
cli
aas
jbe
int3
inc
jmp
inc
jnp
repz
mov
lea
sti
dec
lock
outsl
mov
mov
jmp
inc
mov
imul
push
push
dec
cmp
cld
das
xchg
cmp
mov
mov
mov
lea
flds
icebp
sub
orb
lret
in
pop
loop
mov
fsincos
fbld
inc
repnz
dec
repz
fwait
pop
mov
jno
mov
and
mov
fwait
cmc
pop
jne
cld
and
pop
jl
idiv
dec
sub
in
out
and
mov
jnp
inc
push
insb
push
ljmp
cld
stc
pop
insb
mov
mov
sahf
sbb
xchg
and
insl
jmp
and
xor
adc
sti
lcall
mov
test
out
aas
mov
mov
repz
xchg
int3
jnp
ds
imul
jge
add
insb
dec
push
dec
lds
ss
sub
inc
daa
cmp
mov
clc
lea
mov
mov
dec
mov
and
jne
mov
lret
and
add
jns
ja
adc
imul
imull
insb
add
notl
outsl
dec
test
mov
add
mov
arpl
sub
pusha
push
je
shrb
es
xchg
outsl
pop
aam
cmpsb
je
add
xchg
pusha
xor
lods
es
scas
enter
shrl
cmpsl
movsl
insb
dec
in
fildl
jb
fwait
sti
pop
xor
adc
mov
xchg
adc
jmp
jnp
jo
pusha
fcomip
pushl
dec
outsl
shrl
sbb
sub
lods
loope
cmp
or
and
add
imulb
dec
fildll
xor
test
adc
out
jmp
inc
sub
repz
fmul
clc
cld
sub
insl
jp
dec
sbb
fistpl
add
xor
cmc
sub
pop
icebp
mov
mov
outsl
dec
xchg
adc
aaa
push
fs
pop
mov
fnstenv
fwait
push
and
loop
and
scas
inc
or
jno
lahf
fstl
daa
shll
and
jno
jo
add
sbb
inc
adcl
dec
add
ss
jmp
scas
push
dec
jns
push
mov
pop
roll
mov
inc
mov
cmc
lret
mov
cli
les
fucomi
sbb
mov
filds
pop
xor
ss
aad
inc
jnp
clc
mov
mov
bound
dec
jno
ds
adc
in
cli
jge
in
call
mov
jne
xchg
pop
and
push
int3
mov
aas
xchg
test
jnp
xor
loop
jg
lods
movsl
mov
movsb
xchg
outsl
push
and
sarb
sbb
inc
fistpll
inc
int3
or
lret
mov
mov
sub
fadds
jno
out
and
daa
push
fnstenv
jmp
fdivrs
jne
movsl
daa
loope
pop
lds
addb
add
xchg
mov
sub
repnz
insl
jecxz
xor
ljmp
shlb
daa
sbb
sub
and
sbb
rorl
stos
inc
fs
dec
aas
out
imul
mov
out
mov
in
popf
je
mov
push
inc
lea
xchg
movsl
dec
outsb
pop
add
mov
test
fwait
jp
cmpsl
sub
pop
ficoms
lea
mov
push
insl
ror
mov
lret
inc
mov
mov
sbb
lahf
mov
cli
stos
mov
dec
adc
cmp
inc
js
push
arpl
stos
lret
push
cmp
dec
stc
ret
mov
adc
ss
mov
xor
xor
jle
xchg
addr16
xchg
cmc
and
cs
lcall
mov
daa
jp
popa
stos
mov
and
sub
pushf
mov
jl
fwait
or
mov
pop
adc
loopne
mov
jge
pop
pop
lcall
or
sub
divb
stos
arpl
jmp
insb
mov
push
data16
mov
jmp
sbb
movsl
in
adc
in
pop
add
lods
dec
sbb
les
lods
xor
test
xor
lods
mov
stos
stos
push
xchg
out
fsubr
mov
jg
movb
dec
lods
dec
add
mov
bound
mov
out
xor
add
lcall
daa
hlt
int3
das
sub
cmpsb
lcall
push
xchg
inc
xchg
loop
mov
int3
bound
add
lret
mov
enter
jne
sahf
sbb
lea
cmp
mov
dec
mov
cmp
scas
jnp
sub
mov
sub
pop
jne
jmp
cmp
mov
mov
hlt
mov
mov
lret
cmpsb
fsubl
ret
push
xor
mov
cmp
jge
push
repnz
adc
mov
xchg
mov
adc
and
ljmp
cltd
mov
add
stos
xchg
or
sar
addr16
jmp
jmp
or
adcl
fsubl
addr16
push
jmp
sbb
mov
inc
xor
pop
sub
sub
jo
inc
test
subl
jecxz
cltd
mov
xchg
xor
xor
add
adc
sarb
and
xchg
rcrl
cmp
js
or
and
lds
adc
cli
adc
pop
cmc
mov
enter
nop
call
repz
mov
mov
pop
stos
mov
push
dec
int3
rcrb
sbb
fwait
cld
sbb
push
gs
fisubrl
add
fstl
out
pop
mov
pop
xchg
adc
nop
lods
iret
orb
mov
sub
push
cld
pop
into
cmp
scas
icebp
jb
inc
pop
push
int3
sbb
rclb
pop
mov
jns
push
push
pop
lock
pop
mov
leave
xchg
push
xchg
adc
fadd
push
std
dec
mov
into
sub
ja
fwait
jge
mov
xchg
aam
xlat
lahf
add
das
sbb
cmp
imul
mov
xor
jg
popa
cmp
push
cmp
and
pop
push
mov
xchg
inc
test
mov
or
ret
mov
dec
std
je
push
mov
cmp
pop
pop
push
cmp
or
jnp
mov
dec
imul
stos
sbb
and
jmp
out
jg
or
cltd
cmp
lret
mov
int3
aas
sbb
fwait
or
add
movsl
inc
pop
mov
or
mov
iret
mov
out
push
mov
sub
mov
mov
mov
in
lea
cmpsl
std
push
std
xchg
daa
lcall
std
inc
mov
lods
test
lahf
fstps
jo
shll
sbb
inc
movsb
jecxz
sbb
repz
push
cmp
lods
adc
mov
in
jecxz
pop
push
inc
sub
xchg
imul
mov
test
call
add
cltd
mov
push
fnsetpm(287
scas
dec
pop
xchg
add
mov
pop
mov
pushf
dec
aaa
mov
sbb
or
int
out
mov
shrl
subl
nop
xor
es
fs
and
sti
adc
push
lock
or
das
ret
cmp
mov
fnstcw
add
sbb
andb
mov
fmul
sbb
dec
and
dec
andl
mov
and
dec
sub
xchg
out
inc
scas
cmc
cmp
pop
test
cmp
stos
inc
push
adc
jge
dec
bound
inc
add
dec
cmc
js
mov
mov
mov
sbb
icebp
cmp
mov
fdivrl
jb
pop
ss
in
push
ja
mov
dec
adc
xchg
inc
xchg
shll
dec
adc
pusha
sub
jno
insl
mov
sbb
inc
sub
bndstx
popl
cmp
dec
lahf
inc
or
xchg
sbb
fdivr
movsb
adc
ret
and
jle
adc
mov
xchg
cli
ss
daa
xor
xchg
xlat
hlt
cwtl
pop
loope
je
outsl
mov
inc
pop
stc
out
xor
sbb
mov
incl
xchg
lea
insb
js
mov
mov
lods
imul
call
xchg
or
lea
or
sbb
in
mov
mov
leave
jbe
ljmp
jecxz
out
cs
mov
imull
shll
mov
popa
lods
inc
cltd
mov
push
js
icebp
xor
inc
xchg
mov
push
out
insl
iret
sub
aaa
jmp
dec
leave
cld
and
cmp
mov
mov
mov
sbb
imul
sbb
les
xchg
inc
push
or
pop
test
dec
lods
fistps
fdivrs
leave
dec
jnp
and
lcall
push
mov
fs
int3
fcompl
dec
scas
sahf
rcll
int
add
sahf
btc
pop
outsl
lods
ficomps
imul
ds
mov
push
roll
sbb
adc
dec
and
orb
pop
and
and
ret
push
or
in
outsb
inc
and
sub
push
lret
nop
mov
adc
ret
sub
out
adc
fisttps
imul
sbb
jge
loope
arpl
sbb
movsb
fucom
jge,pn
cld
adcb
out
push
sahf
sub
jns
jg
sbb
adc
ja
adc
mov
or
push
inc
scas
mov
out
push
mov
out
jg
fstpl
xchg
inc
pop
mov
xchg
jne
in
xchg
std
and
sub
adc
orb
pop
pop
dec
xchg
add
fistl
cmpl
out
loope
adc
sub
mov
and
sbb
in
push
les
insl
out
roll
mov
or
cmp
adc
mov
or
mov
into
enter
addl
stos
xchg
insb
cmpb
aaa
popf
mov
mov
ljmp
and
rclb
stos
bnd
xor
popf
push
add
sub
push
mov
adc
ds
outsl
mov
dec
je
ja
scas
inc
xchg
xchg
and
mov
fildll
test
xchg
jmp
mov
push
sub
dec
push
gs
pop
mov
fcoms
aaa
sbb
ljmp
mov
cmc
fidivs
fwait
dec
bound
pusha
fwait
pop
xor
int3
stos
lock
nop
mov
push
mov
ret
pop
mov
inc
add
cs
xor
fidivs
pop
jnp
leave
js
pushf
mov
sub
dec
push
js
cmp
ret
add
data16
aaa
push
test
dec
aam
mull
mov
cli
addl
call
fdivl
xor
push
push
sbb
inc
aam
cmp
popw
pop
inc
test
lret
lds
pop
jg
jmp
pop
mov
lcall
pop
adc
pop
iret
sbb
cmp
push
push
ja
cld
movsl
or
ret
pop
push
cmp
fcomp
ja
mov
cmovno
lods
insb
xlat
repz
jbe
sub
push
or
inc
outsl
out
out
mov
scas
movsl
test
mov
pushf
pushf
jmp
mov
xchg
inc
into
cs
into
scas
sbb
pop
dec
pop
js
mov
ja
fildll
push
andl
jb
pusha
scas
in
lods
mov
aaa
jg
mov
std
ljmp
adc
repz
divl
dec
ljmp
xor
hlt
fwait
jbe
repnz
aad
mov
bound
ljmp
push
enter
mov
mov
adc
inc
enter
inc
mov
mov
mov
in
stos
mov
adc
ljmp
sbb
es
and
push
push
fcomip
sub
sub
sahf
jb
mov
mov
imul
rcrb
cmp
jmp
fs
inc
aaa
mov
sub
add
mov
push
adc
sti
scas
xchg
or
shrb
push
push
and
push
xchg
sbb
sbb
jae
jg
mov
cmp
xor
jo
cwtl
inc
rcl
aad
inc
in
sub
rcl
bnd
pusha
cmp
dec
cmp
adc
sbb
into
mov
and
hlt
mov
fldt
push
mov
in
lds
cld
out
inc
jns
popf
hlt
adc
cs
bound
pushf
mov
cwtl
add
ret
clc
mov
mov
mov
std
nop
fwait
mov
mov
test
data16
jp
add
inc
popa
push
or
or
iret
or
enter
sub
mov
pop
dec
jo
rcr
pop
aas
clc
out
lds
ret
pop
jmp
and
insl
xlat
push
xlat
sbb
jmp
mov
mov
cmp
inc
push
mov
fdiv
insb
push
push
andb
adc
sub
jo
push
sub
or
movsb
inc
dec
or
test
lret
cmp
push
xchg
pushf
pop
fst
das
inc
mov
and
mov
in
out
int
push
arpl
adc
mov
sub
mov
cmp
push
out
dec
loopne
adc
cwtl
addb
mov
mov
adc
mov
not
cmp
sub
xchg
icebp
xchg
inc
addr16
test
mov
pop
cmc
push
add
mov
jge
scas
xchg
mov
lods
adc
push
mov
xor
jmp
movsl
lcall
loope
sub
jge
insb
xchg
pop
sbb
adc
in
int
dec
inc
push
fwait
dec
rorb
ret
adc
push
mov
and
mov
cmp
mov
xchg
ljmp
push
mov
cli
repz
int3
out
xlat
shlb
add
xchg
mov
mov
movsb
dec
movsl
mov
push
mov
in
xchg
fildll
adc
push
jp,pn
pusha
mov
sarl
addr16
outsl
icebp
enter
jb
sahf
mov
rorl
or
imul
test
inc
pop
leave
and
or
out
inc
xchg
and
in
lods
sahf
jno
push
test
scas
lods
dec
clc
jns
pop
fisubrs
popa
and
jmp
in
cmpsb
mov
shrb
inc
cmp
pop
mov
cmp
add
push
and
popa
xor
mov
ds
mov
inc
sbb
xchg
add
mov
jmp
pop
sub
or
xor
out
notb
mov
nop
add
imul
jp
data16
mov
inc
mov
stos
stc
mov
cli
pop
mov
or
lret
jno
or
jns
sbb
mov
push
push
adc
jae
cld
bound
push
daa
pop
jp
sbb
cld
jo
xchg
les
fisttps
leave
push
push
mov
jae
sbb
sbb
xor
fimuls
lods
pusha
shl
or
pop
ds
push
cmp
add
mov
or
cwtl
dec
xor
insb
test
sub
sbb
dec
popf
and
ja
jb
cmpsb
xchg
inc
dec
mov
pop
outsl
push
xor
push
rcll
cs
xchg
ja
sahf
mov
xor
and
insb
loop
out
jge
rsqrtps
out
shrl
lods
mov
insl
dec
js
dec
rcll
cmp
xor
pop
into
xchg
aad
outsl
and
imul
mov
das
push
test
adc
push
inc
andb
jp
push
fistpl
push
jge
mov
je
aaa
out
mov
xchg
mov
sub
or
pop
out
sbb
cmp
mov
adcb
xchg
mov
dec
add
pop
xchg
hlt
pop
movsb
add
sub
lods
jle
lret
ljmp
inc
mul
add
push
and
mov
loope
adc
fwait
inc
mov
lock
insb
or
sub
ret
nop
and
ljmp
xor
scas
jg
jbe
dec
mov
xor
out
push
pusha
cltd
and
ja
aas
sbb
jbe
das
dec
jl
shr
pop
pop
push
xchg
fimuls
xchg
in
adc
std
jne
hlt
test
popf
pop
cmp
hlt
pop
pop
jmp
lods
test
inc
jg
loopne
or
push
mov
mov
js
push
mov
mov
push
mov
fisttps
insb
xorl
into
insl
test
push
sub
test
nop
sbb
loop
and
and
mov
add
imul
push
cli
lock
mov
mov
fnstsw
jp
jns
nop
sarl
xchg
push
sti
je
mov
int3
push
xor
test
adc
sub
mov
sub
arpl
hlt
neg
test
sti
repz
push
or
pop
test
cmp
je
push
inc
loope
cmp
aaa
jle
mov
mov
js
clc
mov
add
and
stos
sti
mov
ja
dec
pop
pop
js
sub
xchg
xor
inc
adc
outsb
cltd
xor
scas
scas
push
int
out
pop
add
data16
xlat
mov
jo
rorb
andb
aaa
je
insl
xor
sbb
mov
and
mov
inc
jecxz
push
or
add
inc
scas
inc
ds
xchg
sbb
std
jmp
fcmovne
dec
pop
push
or
pop
das
adc
call
ja
lahf
shrl
xor
push
stc
add
cmc
cmp
sbb
mov
xchg
sbb
cmp
xchg
add
and
shl
fs
add
in
cmp
mov
xchg
lahf
outsb
dec
mov
xchg
mov
repnz
popf
push
or
mov
fcoms
orb
pop
test
icebp
xor
push
mov
mov
outsb
aas
outsb
pop
inc
scas
mov
sbb
aaa
pop
push
mov
mov
insb
test
add
rcrb
frstor
adc
je
mov
cmpsb
xchg
outsl
sar
ss
mov
mov
test
mov
cmpsb
mov
mov
sbb
pop
je
daa
xchg
mov
rorb
mov
or
shrl
xor
repz
xchg
outsb
push
and
push
jle
aam
xchg
popa
es
inc
mov
out
add
fdivr
sbb
jl
in
pushf
loop
insb
cs
sbb
sbb
add
mov
mov
cmp
sahf
ss
xchg
clc
xchg
rcrl
mov
add
ret
sarl
pusha
mov
add
mov
xor
push
xor
add
push
inc
icebp
das
push
cltd
lret
xor
jmp
loopne
test
jl
xlat
jle
outsb
out
mov
les
xor
adc
fsubrs
mov
fwait
test
jno
mov
ffreep
in
add
out
popf
mov
loop
pushf
cmp
pop
sub
mov
in
xor
outsb
or
aam
ret
mov
fists
cmp
mov
mov
in
adc
cmp
pop
mov
loop
fbld
inc
out
mov
int
psubusb
lock
dec
mov
aam
jmp
pop
cmp
or
xor
gs
insl
xchg
aam
mov
mov
fucomp
pop
cmp
cmp
add
xchg
mov
in
daa
rorb
pop
es
xor
mov
mov
sub
and
rcrl
test
mov
adc
out
xor
adc
xchg
or
cs
pop
lahf
pop
je
leave
scas
stos
bound
pushf
cmpsl
int3
push
jne
mov
dec
repz
push
xchg
sbb
adc
push
mov
pop
mov
fs
inc
push
xchg
push
js
test
movsl
mov
or
sub
sti
ja
lds
fistpll
dec
jmp
lcall
mov
mov
in
push
push
pop
test
or
lcall
mov
jp
rcl
add
sbb
notb
mov
pop
push
pushf
enter
mov
cmpsb
repz
js
dec
out
test
sbb
sahf
loop
jo
lahf
es
mov
push
popf
pop
push
cmpsl
or
pop
cmp
mov
pop
leave
arpl
into
inc
pop
jge
mov
out
pop
and
add
jne
es
enter
pop
inc
jbe
inc
std
sbb
call
jmp
mov
xor
or
lea
cmc
jns
shrl
mov
nop
popf
xor
sarl
outsl
lret
inc
shll
sarb
ds
mov
mov
test
or
mov
add
cmp
xor
fdivs
das
mov
sub
cmp
push
inc
clc
shrb
mov
adc
pop
aam
imul
test
cmpps
inc
daa
imul
das
shlb
ret
sar
shr
add
inc
mov
sub
test
in
loope
jle
enter
sbb
push
mov
decb
push
rol
std
loope
lock
jmp
ljmp
push
push
adcb
loopne
and
sbb
in
test
ja
in
or
daa
adc
arpl
adc
mov
scas
scas
inc
in
stos
xlat
popf
ret
or
pop
push
xchg
pusha
repz
iret
jbe
out
rclb
mov
out
sub
xchg
dec
or
xchg
dec
mov
sti
mov
pop
clc
das
lahf
mov
cmpb
fisubl
sbb
or
add
push
add
jl
aam
or
sbb
mov
test
bound
mov
push
push
sahf
out
mov
and
mov
push
push
mov
and
jmp
or
stos
addb
add
out
pop
or
sub
loope
push
lahf
sub
push
or
jecxz
or
or
or
gs
into
fimull
sbb
std
std
cmpsb
xor
inc
or
or
pop
cmp
ss
mov
les
and
sub
loopew
loope
xchg
mov
xchg
push
jnp
cmpsb
pop
pop
adc
movb
call
test
jo
and
inc
push
xor
and
push
shll
out
int
jo
jno
lahf
xor
xor
mov
dec
or
pop
pop
add
idivl
cmp
sub
cmpsl
sarb
popa
int3
cmp
or
cmp
in
adc
inc
cltd
std
jp
or
inc
ret
jno
idivl
je
psrlq
es
or
test
pop
sub
xchg
lcall
sahf
dec
ret
out
std
cmp
cmpsb
mov
stos
and
lods
mov
imul
insl
ret
inc
sahf
imul
repnz
ds
adc
push
sub
dec
sub
out
dec
lock
mov
or
adc
xchg
cmp
and
std
xor
pop
pop
cltd
cmp
andl
mov
xlat
pop
repnz
addr16
push
stc
mov
push
xor
decb
int
mov
push
or
pop
scas
mov
cmpsb
fbstp
inc
jne
add
das
and
push
shrb
jae
lods
jge
xor
gs
lods
adc
mov
push
lret
cmp
call
fstp
pop
sub
imul
aam
lahf
bound
imul
stos
and
cmc
int3
push
into
rol
mov
sub
xchg
dec
outsl
cwtl
dec
or
mov
add
add
sub
or
mov
or
lcall
enter
sti
subb
inc
jae
xchg
icebp
jnp
call
push
adc
in
out
pop
shrl
jnp
cld
dec
enter
xlat
mov
pop
shl
stos
sbb
repnz
xorl
cmp
pushf
xor
mov
dec
arpl
xor
mov
sbb
lods
dec
sbb
mov
pop
inc
mov
ja
cli
cs
filds
ja
or
pushf
xchg
add
outsl
jl
xor
inc
addl
or
mull
mov
loopne
sub
mov
and
ja
aam
sub
jbe
in
or
leave
jmp
faddp
call
mov
insl
sbb
or
cmpsl
pop
inc
fxch
lods
push
andb
jecxz
jl
lock
jne
push
lds
jl
shll
pop
mov
push
repz
xor
push
xchg
push
mov
loope
pop
cli
add
cmp
sbb
gs
out
into
mov
xor
mov
leave
loopne
jae
ljmp
mov
aad
test
jge
repnz
dec
sbb
hlt
iret
lcall
mov
inc
sti
clc
push
jno
clc
cmp
push
cmp
pop
sbbb
and
out
sbbl
fs
dec
iret
inc
sbb
xchg
push
hlt
js
cwtl
ja
or
push
scas
mov
sub
adc
and
inc
mov
pop
fwait
test
push
push
jo,pt
out
test
mov
sbb
fstl
cmp
and
pop
mov
inc
loope
das
lods
repnz
out
into
and
dec
ljmp
xchg
bound
sbb
daa
sbb
push
mov
sbb
lcall
cmp
ret
mov
xchg
cwtl
adc
rcr
add
cli
dec
xor
add
sahf
push
and
popa
mov
inc
imul
add
sarl
push
xchg
pushf
outsl
rol
xor
jb
mov
xchg
dec
pop
push
or
sub
scas
jno
repnz
ror
add
mov
adc
fnsave
enter
orl
push
pop
sub
push
das
stc
sarb
gs
cmp
idivb
xor
fadds
jne
pusha
push
outsl
adc
sub
xchg
jns
aad
dec
movhps
sahf
jo
ret
sahf
xor
sahf
sbb
jp
idivl
loope
mov
imul
xchg
out
sarb
es
dec
cmpsb
or
cs
daa
push
jle
not
sbb
mov
inc
ret
cld
outsb
push
xchg
lcall
add
test
or
stos
popf
stos
ljmp
jmp
aas
mov
loopne
aaa
mov
dec
pop
push
lahf
fnstsw
jbe
push
xchg
sub
sti
pop
mov
jbe
push
inc
outsl
and
call
sti
or
pop
stc
pusha
incl
xor
sub
aam
pop
push
hlt
inc
sahf
pop
fiadds
pusha
test
mov
jl
cmc
adc
jne
lods
stc
cwtl
jle
mov
push
es
mov
push
shlb
repz
ret
fadds
pop
cmpsb
and
and
mov
aaa
fs
movsl
mov
lock
push
inc
int
shl
outsb
and
adc
enter
mov
mov
push
pop
fstl
push
pop
push
inc
dec
in
dec
stos
sub
repnz
mov
sbb
or
mov
xor
in
inc
adc
out
int
idivl
jae
cwtl
adc
add
or
sbb
stos
xchg
push
adc
aam
outsl
and
jb
pop
arpl
jo
adc
aas
test
lods
pop
xor
pop
cmc
sbb
xchg
in
cmp
pop
inc
or
leave
jnp
inc
cmp
out
outsb
addr16
push
pusha
mov
testb
cmpsb
imul
xlat
nop
add
mov
mov
lcall
cmc
out
fildll
push
test
das
or
dec
scas
out
xchg
out
dec
psrad
sbb
cli
lahf
dec
cmp
mulb
test
pop
jmp
dec
int3
and
push
mov
pop
or
in
or
jmp
lods
jmp
jl
add
dec
dec
push
mov
icebp
sti
stos
or
push
fidivs
mov
pop
cmp
cmc
out
push
fs
xchg
mov
cmp
and
push
dec
fyl2xp1
push
inc
cmovl
xchg
int
int3
and
jnp
adc
and
and
rolb
fcmovbe
pop
add
aam
incl
out
xor
loopne
mov
cmc
adc
cmp
sbb
insb
mov
loopne
cs
loope
loopne
push
xchg
ficoml
sbb
fdivs
test
inc
xchg
mov
inc
ret
std
add
mov
aas
pop
inc
rol
hlt
xor
dec
sub
sub
sahf
sbbb
pop
lret
adc
test
rcl
xchg
jp
cmp
out
mov
testl
cmpsl
or
pop
and
jno
xchg
cmp
push
adc
adc
fsubrl
push
mov
or
sbb
mov
test
jmp
mov
cld
add
jg
leave
in
lret
cli
aaa
add
stos
jl
mov
mov
or
hlt
mov
xchg
popf
pop
cltd
jo
dec
ja
ffreep
sbb
fidivrl
jecxz
flds
int3
mov
mov
xor
adc
push
icebp
xchg
xchg
fmul
std
lods
push
dec
xchg
mov
in
push
rorb
ret
pop
mov
scas
mov
pop
mov
push
mov
iret
and
nop
scas
jb
pop
aas
aad
ret
or
and
jnp
out
int
sbb
shl
fadds
movb
or
xchg
adc
pop
sbb
fists
rolb
shll
sarb
inc
jmp
testb
arpl
jg
jmp
lcall
sub
push
mov
scas
jb
cmp
push
push
cmpsb
pop
xchg
ja
stos
imul
aad
inc
rcrb
jge
ljmp
mov
push
out
and
stc
orb
pop
mov
outsl
add
and
cmc
inc
add
mov
dec
imul
insl
or
test
mov
pusha
inc
mov
aaa
enter
lods
jmp
push
jmp
xchg
rcr
lret
mov
leave
out
and
lahf
fsts
mov
in
in
and
push
scas
in
in
inc
add
xor
xlat
jg
movsb
cmpsb
xchg
jbe
cmp
lahf
mov
jmp
pop
dec
pushl
push
jecxz
jbe
or
insl
js
mov
out
lret
int
add
add
movsl
ret
adc
popf
in
sbb
sub
lods
pop
nop
jl
sbb
mov
sti
sub
je
xchg
inc
cmp
lods
mov
in
fs
andb
adc
in
jb
loopne,pt
imul
xchg
mov
lds
mov
nop
es
or
je
leave
xchg
mov
xchg
popf
insb
loopne
lret
xchg
fdiv
outsb
xor
mov
cmp
jge
cltd
sbbb
xor
mov
pop
sbb
sub
in
push
out
or
push
ss
mov
lea
loop
je
cwtl
mov
dec
adc
sbb
xchg
xchg
add
sub
sbb
mov
sti
inc
cmp
mov
or
inc
mov
adc
dec
or
jl
sub
and
pop
add
insb
inc
sbb
push
dec
into
mov
in
cmc
and
daa
test
mov
jecxz
aam
insl
in
stos
push
lea
jnp
xchg
inc
jp
push
push
iret
cmp
adc
adcb
scas
mov
dec
dec
enter
inc
out
rorb
add
lods
mov
adc
xchg
push
push
add
aad
sbb
push
hlt
das
or
mov
mov
rcrb
sub
mov
nop
push
and
mov
out
push
aad
stos
pop
mov
dec
faddp
pushf
cltd
xor
fs
xor
jnp
mov
inc
movsb
loope
mov
in
bound
mov
and
sub
mov
bound
out
pop
jmp
loop
dec
stc
jg
xchg
ja
das
jmp
dec
fistl
xlat
addr16
inc
lods
fmul
cld
adc
insb
inc
mov
and
adc
mov
nop
dec
dec
insb
mov
xchg
mov
jbe
mov
in
mov
nop
dec
or
cmpsl
icebp
inc
jp
or
or
fdivrs
dec
adc
lods
mov
pop
icebp
cwtl
fld
dec
pop
dec
or
jmp
repz
aas
xchg
mov
je
adc
test
mov
mov
pop
insl
inc
stc
in
inc
iret
and
xchg
sub
rol
pop
test
aad
adc
pop
push
or
lret
mov
inc
fwait
mov
out
jg
movsl
sbb
insl
jecxz
mov
decl
icebp
ss
std
push
aam
mov
loope
xchg
adc
push
pop
mov
push
into
add
mov
scas
adc
sbb
mov
mov
sbb
das
sbb
push
mov
mov
data16
push
push
adc
int3
xlat
or
push
pop
scas
sub
and
cmp
mov
sti
lahf
fistps
xchg
jbe
das
loopne
fwait
xchg
xchg
arpl
sti
sub
cmp
mov
lret
andb
addl
jno
shll
cmp
fisubl
into
fwait
jno
outsb
mov
mov
add
ret
xchg
mov
es
das
mov
adc
repnz
repnz
xchg
sbb
out
dec
sbb
pop
sbb
outsb
mov
jl
sub
cmp
test
fisubrs
cmp
mov
stos
xlat
lods
mov
inc
and
repz
loopne
mov
inc
mov
xchg
mov
or
xor
inc
sahf
xchg
push
push
jecxz
arpl
ret
pop
les
mov
int3
cmpsb
sbbb
inc
mov
pop
sti
cmp
cmp
fs
out
xchg
add
mov
mov
cmp
xchg
and
mov
inc
push
push
shl
ljmp
add
sbb
scas
ljmp
mov
mov
jge
imul
and
jge
sbb
pop
aad
pop
cmp
xor
in
sbb
lock
es
sub
cltd
add
popf
fsubs
cmc
lds
aad
cmp
scas
iret
call
mov
pop
loope
jp
scas
pop
in
mov
dec
mov
mov
fdivrs
outsb
mov
les
xchg
sub
xchg
rolb
dec
lods
icebp
xchg
cmp
shll
dec
dec
push
mov
cmc
sbb
and
add
cmp
stc
mov
dec
iret
cmp
std
sbb
xor
dec
mov
push
and
mov
adc
inc
int3
mov
call
lea
push
or
dec
arpl
stos
fisubrs
outsl
xchg
sahf
data16
xchg
xchg
and
add
pop
jbe
les
add
inc
std
les
sbb
lea
repz
rcll
inc
lea
inc
lret
stos
pop
cli
das
mov
lock
insl
cmp
push
adc
pop
pop
jbe
test
mov
pop
adc
push
movsb
dec
fs
enter
pusha
cmpb
leave
cs
ss
cmp
and
lcall
adc
gs
push
or
cmp
jecxz
int3
sub
dec
fmull
dec
and
lcall
jne
sbb
movsb
add
jmp
bound
int
mov
jo
test
adc
enter
int3
sub
mov
add
jge
cmpsl
call
dec
and
pop
sbb
or
add
adc
pushf
push
xchg
in
cmp
daa
inc
es
inc
pop
cmp
mov
jns
pop
xchg
push
jnp
mov
es
hlt
jmp
mov
test
or
jb
ss
mov
mov
inc
lods
mov
dec
fistl
stc
nop
pop
call
inc
and
aaa
mov
lds
mov
enter
adc
jg
sar
lahf
sub
idivb
jne
addr16
mov
pop
inc
test
fsubl
in
push
pop
movsl
xchg
jmp
pop
int
cmp
popa
out
lret
pop
mov
lock
jp
daa
xor
and
ret
sti
aas
pop
fs
push
jno
scas
in
loopne
shl
mov
sub
pop
xchg
sub
in
lret
ljmp
mov
int3
mov
adc
mov
xor
pop
call
push
xor
cmpb
mov
sbb
sub
cmp
in
pop
js
scas
jle
xor
xor
ret
sbb
mov
sbb
dec
cli
arpl
jo
or
xor
mov
int
fwait
inc
std
cmp
negl
cmc
in
lahf
out
add
jge
xchg
push
lods
shll
out
dec
mov
stos
je
mov
ret
das
test
xchg
and
loope
sub
jg
rcrl
bound
xor
xchg
xrelease
cmp
sbb
or
aad
cmp
dec
xchg
xor
notl
mov
push
mov
push
xchg
cmp
xchg
iret
sbb
incl
aaa
jmp
out
daa
imul
fsubs
cli
cmc
jnp
fdiv
mov
repnz
ret
popa
insb
push
adc
jl
xor
je
or
dec
jecxz
jle
shr
insb
movsb
push
shrl
cmpsb
stos
stos
xchg
mov
lcall
inc
repz
rcrl
adc
mov
push
cmp
ljmp
add
shrb
pop
adc
inc
test
adc
mov
mov
mov
push
addb
lcall
nop
pop
std
push
popf
lds
jge
fistps
pop
add
jl
out
cltd
gs
rcrl
fiaddl
ds
das
imul
mov
cmp
mov
pop
push
jl
dec
test
mov
and
outsb
and
ja
cmp
or
aas
sti
jl
fcmovb
xor
out
jmp
cmp
mov
jnp
mov
test
adc
and
fistl
inc
jg
outsb
inc
inc
mov
jae
shll
xchg
dec
into
test
and
xchg
jge
xchg
dec
jae
push
sub
orl
call
add
pop
sbb
pusha
in
inc
daa
add
mov
lret
dec
iret
ret
std
or
push
adc
xchg
into
sub
out
rcll
push
sub
jne
xchg
popa
mov
ficompl
mov
pop
sub
add
sbb
jge
push
movsb
sti
jo
and
dec
fldl2e
cmpsl
loopne
xchg
xor
jl
stos
mov
add
inc
adc
ficoms
pop
jp
daa
rorl
pop
dec
mov
sub
push
push
mov
push
aam
or
mov
ret
mov
push
ret
in
mov
sub
sahf
sbb
lds
pop
fmuls
push
rorb
jmp
push
arpl
adc
and
icebp
fisttps
xorb
jbe
fnstenv
rorb
outsl
orl
and
test
xchg
push
mov
fbstp
test
shl
xchg
inc
or
movsb
bound
out
jecxz
sub
push
movsl
cmp
push
cmc
loop
adc
cmp
add
push
pop
inc
xchg
fiadds
jbe
fadds
cltd
lcall
addl
xchg
pop
loopne
sub
push
jnp
out
and
lret
mov
data16
cltd
mov
ficompl
adc
movsl
ja
mov
lahf
lea
and
pop
adc
jecxz
mov
dec
enter
fwait
aas
adc
lret
cwtl
pop
fwait
cmc
xor
sub
and
shll
scas
imul
fstl
stc
dec
orb
inc
sar
idiv
xlat
push
ret
pop
pop
movsl
rcrb
in
daa
clc
xchg
inc
add
inc
xchg
mov
int3
lret
pop
sbb
fs
rorl
pop
add
or
test
sub
mov
stc
cmpsl
jl
add
sbb
nop
les
orb
mov
mov
cld
je
int3
ficoml
dec
inc
mov
fistpl
xchg
sub
and
add
stos
fnstcw
call
imul
into
stc
data16
ss
les
mov
mov
push
rorb
mov
push
sub
call
ficoms
push
int3
jb
and
dec
xlat
xchg
adcb
mov
xlat
loopne
sub
pop
push
mov
cmpsb
lods
daa
fsubs
xchg
dec
cld
mov
pop
jne
rorb
push
inc
xchg
and
dec
popf
es
cmc
push
cmp
add
jl
lods
aam
sbb
xchg
mov
scas
mov
loopne
ret
mov
xor
subb
pop
mov
cmpsl
push
pop
dec
int3
push
popa
arpl
sbb
cmp
sub
dec
cltd
xor
arpl
mov
adc
std
dec
pop
insl
ljmp
inc
fnstsw
test
sbb
loopne
jle
mov
dec
insb
adc
add
inc
ret
xchg
pop
pop
gs
ds
push
popa
rcrb
ds
mov
xchg
pop
fiadds
ret
rcr
mov
cmp
pusha
dec
outsb
pushf
lret
out
gs
sub
stc
loopne
ret
jg
inc
inc
jmp
in
pop
cmp
fstpl
or
lock
mov
lock
out
movsl
jle
mov
add
clc
or
ret
jp
add
pop
lahf
daa
loope
pop
cmp
inc
int
repz
imul
jbe
push
pop
adc
or
mov
fisttpll
in
mov
in
add
cli
pop
and
dec
push
inc
ja
rolb
jecxz
sub
sbbl
mov
lods
je
pop
addr16
add
fldl
mov
lods
arpl
stos
sbb
push
add
jno
int
lret
dec
xchg
je
out
sub
mov
scas
in
into
add
push
mov
loop
scas
repnz
mov
xlat
xchg
jecxz
jmp
jg
fnstenv
shll
sbb
movsb
fwait
pop
and
jo
fcompl
push
int
xlat
sar
or
xchg
movsb
cli
mov
jp
stos
cwtl
cltd
jge
addb
aaa
cmp
clc
and
cmp
jns
iret
aas
lods
inc
cli
insb
sbb
push
aam
mov
sub
sub
mov
movsb
call
fs
test
dec
pop
test
push
ret
and
pop
mov
or
cmp
mov
xchg
and
or
mov
addl
pop
inc
push
pop
mov
add
pop
or
xlat
cli
push
mov
inc
in
mov
int
imul
xchg
or
repz
jne
repnz
cmp
fiadds
sbb
aas
push
or
pop
xor
sbb
flds
js
imul
sbb
insl
pop
xorb
aaa
push
scas
mov
or
or
pop
mov
ljmp
push
jns
push
ja
jecxz
mov
push
setno
xchg
insb
cltd
je
and
add
lahf
xor
push
jl
aad
out
push
jb
lret
push
pop
popa
mov
sarb
test
outsb
dec
scas
push
mov
roll
push
fucomip
cmp
xchg
sbb
out
inc
lods
sub
sbb
xchg
xor
mov
sbb
adc
js
js
lret
aam
addb
lret
jae
arpl
xchg
aaa
arpl
loop
xchg
mov
stos
pop
pop
inc
insl
rolb
fidivrl
fildl
add
repnz
insb
mov
repz
pop
negb
add
mov
pushf
dec
negl
insb
shr
in
outsb
popf
add
out
push
dec
mov
pop
rol
leave
jge
sbb
fists
sub
lret
gs
out
loope
sarl
mov
dec
rcrl
sbb
add
std
lret
stc
and
out
in
xor
xchg
lea
jmp
dec
xor
lods
add
enter
jecxz
pop
xor
push
out
push
out
dec
fstpt
test
adc
clc
enter
mov
sbb
dec
cmpsb
jp
push
xor
jo
sbb
outsb
mov
adc
sbb
inc
and
sbb
mov
mov
sub
in
adcb
shlb
jbe
je
bound
in
icebp
arpl
sti
stc
push
pop
xor
ja
mov
stos
in
test
xchg
subb
fs
popf
adc
push
std
mov
push
outsl
les
push
clc
fwait
mov
mov
or
push
mov
pop
sub
mov
mov
andb
sub
sub
js
mov
stc
scas
push
pushf
inc
daa
or
mov
andb
jmp
inc
mov
movsl
jne
iret
jmp
sub
adc
sub
enter
sbb
outsb
nop
and
jae
push
addb
addl
test
ljmp
xchg
subb
push
pop
mov
stos
in
mov
daa
movsl
mov
subl
push
add
push
cmpsl
aas
mov
xchg
adcb
mov
xor
jnp
in
div
push
mov
lret
pusha
mov
cmp
in
daa
lcall
pop
mov
fildl
jae
sti
adcb
sbbb
es
xor
sbb
nop
ficompl
mov
std
pop
out
cmp
mov
pusha
clc
add
lock
sub
loopne
lcall
cltd
sub
in
xchg
stos
or
jb
shrb
inc
xor
loopne
xor
negl
jno
sbb
out
call
test
in
pop
mov
mov
mov
int3
or
aam
sub
or
shrl
cld
mov
jmp
jecxz
ss
push
mov
and
shlb
mov
mov
inc
or
sub
mov
mov
inc
mov
sahf
dec
mov
mov
mov
inc
imul
inc
sbb
lea
rcr
out
stc
and
adc
lret
jo
test
mov
pop
pop
fsubs
sbb
jnp
call
add
adc
ret
fistl
jmp
xchg
pop
adc
pusha
nop
inc
xchg
or
pop
insb
into
xchg
mov
popa
mov
sub
xor
add
jno
insl
xchg
sub
fnstsw
insl
outsl
inc
test
sti
rol
mov
xor
push
cmp
mov
adc
sahf
sarl
popa
lds
push
arpl
cmp
fldcw
mov
adc
sbb
and
gs
scas
mov
push
pop
bound
mov
xor
add
pusha
pop
mov
sub
das
jp
push
mov
dec
push
pop
inc
push
mov
pop
and
inc
push
add
es
inc
xchg
jecxz
call
loop
insb
fidivrl
test
pop
mov
repz
lds
daa
fists
push
lret
and
sub
and
xchg
mov
adc
pop
jbe
hlt
mov
inc
pop
adc
nop
ja
test
jp
std
sub
arpl
sub
std
adc
in
mov
add
sbb
jbe
mov
xor
lods
pop
push
pop
bound
into
mov
jg
jmp
cmp
and
push
lock
test
push
jecxz
inc
mov
pop
outsl
pop
lahf
rorl
sarb
mov
add
testb
pop
aad
mov
insb
pop
in
rol
enter
sub
and
in
add
movsb
ds
movl
sbb
mov
mov
in
roll
add
bound
out
cmp
pop
pushf
push
mov
daa
push
xchg
loop
int3
push
push
jmp
mov
call
ljmp
adc
out
rcr
jg
shl
mov
adc
mov
pusha
adc
in
nop
pop
inc
pop
and
sbb
popl
add
insb
ljmp
rorb
sub
insl
mov
cld
in
push
std
iret
adc
sub
xchg
xor
cmp
test
enter
dec
dec
cli
inc
pop
add
sub
adc
xchg
add
pop
out
push
cmp
add
cld
sbb
sub
pop
jle
jp
stos
push
mov
add
daa
scas
cmp
and
cmp
or
popa
test
cmp
lods
data16
stc
test
add
jb
mov
mov
mov
add
test
dec
dec
jbe
arpl
mov
dec
std
ficoml
mov
adc
push
adc
pop
adc
xchg
fnstenv
cld
and
or
pop
lret
sbb
xchg
sarb
push
icebp
xchg
icebp
sti
cmc
imul
or
cmc
lahf
cmp
cld
imul
sub
push
cs
aas
mov
nop
test
repz
sub
fstl
mov
xchg
inc
cmp
xchg
in
push
in
or
adc
jns
movsb
iret
inc
or
dec
negb
dec
or
jp
cld
pop
and
push
sahf
lcallw
js
mov
push
mov
adc
daa
mov
mov
sbb
out
jae
xor
movsl
xchg
cmp
add
cmp
addr16
ljmp
leave
pop
psubsw
or
aad
lea
flds
xchg
rorb
and
shlb
sub
stos
fwait
loope
mov
sahf
mov
adc
mov
test
scas
xchg
adc
cltd
stos
and
lods
cli
fisttps
mov
mov
lahf
push
or
push
add
rcrl
in
and
jecxz
scas
loopne
or
ja
jp
add
jmp
loope
and
lcall
xchg
and
out
pop
std
mov
mov
lret
mov
mov
push
jns
mov
jb
push
ds
push
ja
jg
add
push
mov
fisubl
es
lahf
mov
movsb
mov
int
push
outsb
rol
in
xchg
lock
in
aad
icebp
sbb
push
loop
mov
push
test
cld
mov
hlt
fs
inc
out
add
repz
sarb
mov
jle
hlt
xor
std
movsl
mov
xchg
inc
sbb
ss
xchg
imul
aas
insl
add
push
mov
sti
test
das
push
adc
repz
jp
sbb
xor
test
cmpsb
mov
iret
push
lods
cs
pop
xor
xor
push
shl
sbb
inc
les
mov
lcall
fbstp
cmc
in
cmpsl
lcall
xor
ja
or
stos
sahf
xchg
arpl
outsl
xchg
sbb
inc
test
fstl
lret
jae
arpl
mov
dec
sub
push
loopne
rcl
xor
cmpsl
test
les
das
arpl
and
ljmp
pop
sbb
imul
ss
in
icebp
mov
mov
out
fwait
xchg
mov
pop
and
inc
xor
shrl
or
dec
sbb
or
pushf
mov
loope
std
add
dec
sbb
mov
test
cmp
pop
cmp
test
pop
movsl
adc
inc
lock
ljmp
xor
pop
jle
mov
insl
mov
in
hlt
popf
cmp
rclb
adc
adc
data16
push
mov
sbb
stos
jb
or
and
inc
xor
mov
mov
dec
pop
push
cmpl
xchg
adc
cs
push
inc
roll
testb
pushf
push
call
int3
add
jo
or
test
and
call
xor
and
iret
int3
xchg
imul
mov
mov
lcall
cmpl
jns
out
rcr
test
jb
cmc
flds
fcomps
jmp
in
mov
jo
adc
mov
xlat
jmp
pop
and
fadd
pop
in
idivl
pop
pop
mov
fdiv
push
adc
mov
arpl
std
fdivrl
sti
inc
mov
pop
je
mov
jo
fisttps
int
rclb
mov
jl,pt
dec
dec
xchg
xchg
mov
xchg
ja
xchg
stc
scas
lods
mov
popa
cmp
pop
xchg
sub
cmpb
icebp
or
and
xchg
lcall
pop
xor
rcrl
test
cs
adc
fwait
iret
ficompl
xchg
das
lcall
push
sbb
hlt
mov
cmp
pop
lea
pop
repnz
pop
jp
lods
pop
test
lahf
insl
inc
jnp
pushf
mov
repz
push
repz
sub
or
in
inc
push
cmp
dec
int3
fdivp
sbb
dec
stos
xchg
xor
and
jmp
xchg
xchg
repz
mov
outsl
mov
daa
jbe
mov
adcl
in
or
roll
aas
fldenv
push
push
les
push
xchg
icebp
arpl
test
mov
imul
shlb
lea
pop
mov
or
pop
loope
push
or
push
stos
push
mov
dec
dec
outsb
jnp
inc
inc
lea
orb
iret
xchg
cmp
hlt
push
jbe
ret
pop
dec
outsb
nop
jns
mov
addr16
loope
into
mov
xchg
lea
lea
cmp
int
push
bound
xchg
pop
jbe
and
shl
xchg
ss
add
out
cltd
shrb
hlt
iret
sub
test
or
or
adc
mov
adc
call
or
lahf
test
cmp
fsubr
push
lock
scas
data16
mov
shll
bound
xor
std
mov
and
and
sbb
stos
int
xchg
pop
dec
jo
and
dec
mov
movsb
xchg
and
jmp
sbb
xor
cmc
adc
std
adc
add
cmp
aad
test
mov
mov
outsl
inc
sbbb
pop
dec
mov
mov
loopne
sbb
mov
jle
sub
out
pop
daa
scas
repz
loop
push
inc
jge
das
xchg
mov
mov
fisttpl
cmp
adc
rol
mov
jmp
leave
repnz
cmpsb
inc
jl
xchg
xchg
sbb
pusha
aas
and
mov
fcmovu
sub
inc
in
call
insl
mov
scas
popf
dec
push
insb
mov
jno
insl
mov
xchg
mov
imul
daa
mov
loop
push
fs
xlat
pop
rorb
cmpsl
faddp
cmp
or
add
in
test
and
mov
xchg
ret
adc
lcall
push
mov
daa
inc
inc
mov
xor
int
arpl
movsb
fistpll
cmp
dec
stos
and
push
mov
dec
and
inc
mov
out
and
out
lock
pop
divb
stos
aaa
push
dec
fistpl
sbb
shlb
cmc
jl
dec
pop
jno
std
cld
xlat
dec
xchg
xchg
stc
ficomps
lods
jmp
cmpsb
out
xor
adc
sub
jns
cmp
mov
into
cmp
jmp
cmp
rolb
cltd
mov
icebp
sub
mov
imul
scas
and
pop
ret
test
fildll
mov
loop
scas
nop
dec
sub
or
lcall
jle
stos
lods
mov
xchg
lret
rcll
jg
orl
cmp
and
gs
pop
into
fst
push
pcmpgtw
jl
adc
sbb
push
mov
xchg
inc
push
ljmp
je
shlb
adc
mov
imul
push
or
or
or
insl
mov
inc
in
jle
popa
test
ljmp
dec
int3
leave
adc
mov
in
pop
add
push
mov
test
adc
add
dec
lds
mov
mov
loope
xor
mov
out
jne
mov
aaa
lods
adc
shll
jns
fcompl
cmpsl
xchg
cli
push
lahf
xor
xchg
xor
rclb
lock
rorl
into
lods
decb
push
dec
out
ja
push
scas
test
xchg
xlat
xlat
insb
into
inc
test
stos
jbe
outsl
jae
or
jle
or
fst
outsb
cmpsl
imul
inc
in
aaa
mov
dec
add
fisubl
mov
jecxz
js
cwtl
je
dec
mov
jno
jmp
es
es
push
fldt
mov
fs
cmc
dec
and
and
out
xor
es
and
jo
js
sarb
or
xchg
pop
xor
fdivp
inc
loopne
push
shlb
ret
pop
and
sarl
cltd
mov
pop
dec
pop
cmp
dec
sub
add
cli
sbb
sbb
push
or
dec
lret
mov
out
push
pop
pop
gs
mov
int3
outsb
jnp
xor
out
es
verr
mov
ds
jno
inc
push
push
inc
cmpsl
xor
and
test
or
fdivs
and
push
sbb
add
and
push
adc
cltd
mov
add
cmp
cltd
subb
imul
pusha
stos
das
sbbl
push
mov
and
clc
jae
mov
bound
shld
sub
popa
inc
popa
jp
or
lret
cmpsb
aaa
sbb
sarb
push
leave
int
repnz
jno
loopne
dec
pop
mov
adc
mov
aad
xchg
xor
jno
xchg
inc
je
lock
aas
push
add
dec
inc
movsb
or
dec
pop
jbe
or
aaa
add
out
outsb
add
sbb
and
inc
cmc
push
sbbl
orl
psubq
aam
jl
stc
je
pusha
lcall
inc
cmp
fistpl
and
in
bound
inc
mov
mov
cmp
lahf
inc
out
fwait
movsl
sbb
mov
fists
cmpsb
mov
mov
lea
mov
xlat
jb
lds
sbb
cmp
cmpsl
push
mov
ret
scas
inc
sub
sub
mov
or
push
les
push
add
mov
push
enter
fisubrl
or
int3
into
sub
jo
lret
lahf
inc
ret
pusha
scas
mov
or
fcmovnu
or
pop
inc
inc
mov
adc
in
and
jl
fnstsw
es
es
xchg
rcr
cmc
sbb
int3
std
imul
cmp
and
popf
rorl
xor
or
push
and
sbb
mov
xor
icebp
insb
xchg
adc
add
add
or
and
loopne
pop
xor
add
mov
adc
or
cmpsb
mov
dec
cli
mov
loopne
cltd
bound
and
cmp
cld
decl
xchg
inc
or
mov
jb
jo
xchg
insl
ficoms
and
sbb
popl
mov
push
les
dec
xchg
mov
loop
mov
nop
out
adc
mov
mov
inc
jmp
in
mov
jae
jns
sahf
stos
mov
in
roll
mov
xor
pushf
js
xchg
mov
inc
aas
push
sahf
shlb
test
cmp
aad
push
xor
lahf
sub
loope
push
pop
aaa
addl
xchg
push
cmp
mov
idivl
subl
inc
push
xchg
stc
push
dec
psubd
insl
inc
jp
xor
call
enter
sbb
and
xor
adc
adc
clc
xor
mov
mov
jg
add
xchg
pop
mov
sub
arpl
movsb
aaa
stc
and
xchg
dec
push
dec
mov
mov
inc
jae
aad
aaa
aam
add
push
dec
and
xor
inc
cmp
pop
ljmp
mov
ret
push
xchg
into
cwtl
clc
mov
cltd
or
stos
test
push
aas
dec
mov
add
mov
push
lret
lahf
daa
add
mov
outsb
clc
and
xchg
movsb
adc
test
mov
arpl
loope
or
inc
mov
leave
add
stc
idivb
sbbl
test
xor
loop
jne
lret
push
pushf
es
cmp
cmc
lock
sahf
push
xchg
cwtl
cmp
jg
jl
mov
sbb
mov
jle
and
or
or
push
popa
subl
xlat
in
cli
pop
add
inc
imul
add
addr16
push
push
aad
into
or
cmp
add
xchg
jnp
fcoml
jnp
mov
cltd
jmp
xchg
pop
cld
push
mov
mov
pushf
cld
pop
lods
push
scas
pop
push
aaa
push
inc
les
jae
add
dec
test
pushf
jl
sbb
sti
pushf
dec
jns
into
adc
push
nop
sbb
cmp
xchg
insb
xrelease
out
xchg
adc
lret
xor
ljmp
or
js
push
mov
pop
imul
fucomi
pushl
jmp
xor
sahf
movsl
outsl
cmp
shll
mov
ljmp
xchg
mov
jl
push
jns
push
popa
inc
mov
lret
xor
and
out
xchg
add
andb
mov
mov
bnd
mov
mov
jb
dec
inc
rcrl
mov
mov
ret
bound
pop
push
enter
ja
cmp
mov
push
das
xchg
js
mov
aaa
in
je
push
mov
hlt
das
adc
inc
mov
scas
cmc
ds
xchg
sub
adc
add
sbb
dec
adc
xchg
jl
cmp
jl
enter
jl
push
adc
push
notb
mov
jbe
jp
mov
rolb
icebp
jmp
adc
sbb
movsl
pusha
lret
lock
jns
push
push
and
loope
sub
cmp
xchg
movsl
push
fstl
sub
lcall
es
sahf
lret
mov
fwait
nop
mov
cwtl
loopne
pop
add
lea
jno
sbb
scas
jb
inc
lcall
cmp
sub
cmpl
push
aas
pop
addl
jnp
shlb
pop
mov
adc
adc
fdivs
out
adc
pop
lds
jl
jbe
mov
cmp
mov
or
cmp
fisubs
xchg
pop
in
dec
pop
test
jb
jecxz
call
repz
pushf
mov
lret
pop
dec
push
imul
jmp
into
push
int
shlb
movsb
pop
mov
mov
dec
push
out
cmpsb
mov
dec
sub
pop
sahf
cmp
fwait
loope
fisubs
add
stos
adc
push
sbb
pop
xchg
divl
push
jae
bound
pop
nop
loopne
adc
mov
add
mov
mov
test
lret
in
jg
imul
ja
xorl
into
sbb
inc
xor
out
mov
dec
mov
in
xchg
or
and
loopne
lock
js
push
sbb
jne
leave
push
pusha
adc
call
addr16
sub
sbb
adc
jae
or
std
pop
cwtl
stos
ds
add
inc
jae
xchg
cmp
mov
fdivl
cs
loope
inc
subl
push
mov
mov
test
sbb
or
xor
adcb
fsubr
arpl
test
sub
stc
scas
jns
orb
lds
mov
adc
or
jae
xchg
lret
out
or
push
sub
adc
pushf
imul
insl
mov
mov
mov
xchg
ficompl
cwtl
cltd
cs
loope
cltd
mov
xor
mov
lock
divb
xor
test
bound
ss
ljmp
push
out
bound
mov
out
cmpl
orb
bound
addr16
stc
sbb
orl
mov
push
ja
pop
aaa
dec
xor
popf
sbb
inc
clc
stc
stc
jno
mov
mov
xor
mov
inc
cmp
sbb
adc
or
fcom
jne
subb
gs
rclb
flds
xor
xchg
lret
sbb
daa
in
mov
xor
repnz
fwait
ret
daa
ret
push
push
pop
pop
in
xchg
sub
jns
imul
sub
cmp
xchg
shrb
adc
call
cmp
int3
mov
out
cmp
mov
movsb
or
pop
repnz
ret
push
sbb
mov
xchg
lcall
sbb
movsl
xor
or
add
loope
mov
inc
jnp
or
xchg
icebp
adc
jne
or
mov
xchg
fdivl
imul
fnstsw
pop
pop
add
xor
stos
mov
inc
stos
or
mov
out
test
xchg
idivl
stc
sub
lods
ds
into
add
outsb
dec
add
cmp
es
es
test
insl
jmp
xor
sarl
pop
cmp
and
push
lock
aam
mov
sti
sbb
mov
shl
mov
addb
mov
inc
in
in
mov
xchg
stos
mov
or
ret
add
sub
ja
or
sub
and
aad
sub
jmp
adc
nop
rorb
mov
mov
insb
mov
jne
jns
jae
cmpsb
addr16
mov
dec
jmp
xor
inc
aaa
in
push
jle
adc
cmpsl
jg
testb
ret
ss
jmp
add
loop
or
push
push
scas
aas
and
iret
and
test
js
pushf
sbb
pop
xor
fdivl
sub
fistps
push
push
sub
insl
pop
jo
int3
mov
cmp
frstor
imull
mov
mov
adc
insb
xchg
fsubl
push
or
imul
repnz
fwait
xchg
dec
stos
clc
sub
mov
outsb
cwtl
daa
xor
jmp
sub
aad
faddl
jle
push
xlat
pop
push
xor
mov
jp
inc
stos
push
stos
ss
xchg
scas
pop
mov
push
inc
jmp
sbbl
adc
and
cmp
sub
call
push
loop
sub
mov
lret
sub
jb
mov
and
pushfw
stos
sahf
adc
test
pop
in
push
rorl
inc
pop
adc
hlt
inc
push
fiadds
loopne
xor
outsl
std
xchg
mov
dec
mov
fmuls
xor
push
repz
or
and
dec
sub
xchg
lock
addr16
xchg
arpl
xchg
mov
movsb
pop
sahf
iret
jle
dec
loopne
gs
add
sbb
xor
bnd
insb
xor
adc
or
dec
fwait
push
lods
mov
addr16
sub
xchg
xchg
lods
rcll
inc
call
xchg
ljmp
add
dec
call
lds
bound
and
inc
shl
scas
inc
jne
dec
push
cmpsb
pusha
mov
out
fdivr
xchg
dec
inc
mov
ljmp
lea
into
or
loop
and
loop
inc
std
fdivs
call
sub
mov
cmp
jle
lahf
arpl
and
jo
jnp
and
and
pushf
jbe
js
je
jb
dec
lret
xor
mov
dec
jp
xor
push
push
rcrb
negl
aam
sub
mov
shl
das
mov
mull
xchg
insb
shll
bound
xchg
xchg
inc
push
and
mov
or
pop
sub
xor
mov
lret
mov
mov
mov
mov
mov
dec
xchg
push
push
add
insb
in
imulb
jae
fwait
test
jno
movsb
mov
fwait
jle
mov
leave
jns
rcrl
mov
cmp
cli
mov
pushf
imul
lea
sti
or
out
xchg
lods
pop
jge
out
xor
imul
ficomps
pop
int
sbb
scas
sti
fnsave
unpcklps
and
call
loopne
pop
mov
neg
jne
adc
add
xor
pop
add
mov
sbb
xor
mov
dec
lret
test
insb
in
sbb
mov
dec
xor
rolb
lods
push
loopne
mov
mov
lods
cmp
pop
lock
mov
lds
ret
push
fcompl
mov
mov
mov
xchg
hlt
sub
xchg
sbb
popf
iret
rolb
push
in
push
scas
push
push
cmpsl
cmp
aaa
and
mov
cmp
inc
lcall
cli
in
pop
and
shll
scas
in
aam
xor
in
cmpsl
std
push
push
lds
cwtl
add
mov
ja
les
push
repnz
jecxz
aad
rolb
xchg
adc
arpl
adc
mov
pop
inc
fistl
out
mov
and
jbe,pt
outsb
mov
xchg
rorb
mov
mov
adc
pop
lret
fsub
lock
add
imul
fadd
mov
mov
loope
test
test
stos
jnp
sahf
incb
das
orl
jns
mov
jnp
jno
mov
movsl
or
scas
xchg
es
js
lret
pop
cltd
mov
dec
adcl
adc
test
add
fwait
aas
loope
pop
das
sub
loop
test
sti
dec
push
sbb
add
cwtl
insb
test
and
shl
sbb
mov
int3
adc
jge
push
movsl
mov
push
add
das
and
out
out
pop
leave
jl
jbe
lret
popa
cs
cld
pop
sbb
loopne
add
mov
into
nop
jbe
or
sub
adcl
xor
ja
sti
jmp
mov
sahf
movsb
adc
cmpsb
xchg
push
push
push
jbe
add
pushf
inc
xchg
daa
inc
dec
cmpl
lods
mov
test
ss
mov
out
sub
or
subb
jnp
or
xchg
rorl
lock
lcall
scas
loope
pop
add
rcll
mov
repnz
pop
sub
loope
addr16
push
push
outsl
cmp
popa
cmpb
mov
nop
adc
push
outsl
cmc
into
mov
jo
mov
push
push
jne
shrl
sub
popf
xchg
popa
mov
adc
xlat
xor
stc
imul
dec
inc
test
loopne
dec
jb
mov
movl
xchg
mov
dec
in
adc
cmp
in
inc
popf
adc
jnp
pop
sub
jae
in
xor
scas
pop
aad
imul
push
test
push
pop
xorl
lock
inc
xlat
xchg
push
dec
cmc
pop
in
fstl
aaa
add
lret
xchg
inc
lods
fwait
push
out
shl
push
add
and
jecxz
adc
cmc
mulb
mov
out
pusha
mov
mov
sbb
dec
mov
mov
in
test
das
fsts
sbb
fwait
fwait
lahf
mov
sbb
adc
mov
or
stos
jae
push
jge
repz
inc
push
sbb
daa
out
fdivrs
and
cld
mov
sub
jnp
jae
lds
loopne
and
mov
leave
adc
ud0
jl
mov
pop
shll
fbld
cmp
push
insl
and
mov
aas
cmpsb
jge
adc
or
ret
or
pop
test
add
divb
aam
cltd
jmp
jns
push
fildll
aam
ficompl
and
mov
mov
test
out
pop
out
jmp
bound
inc
xor
int3
cmp
add
rcl
daa
adc
and
push
fildl
outsb
add
ss
les
pop
sbb
sbb
nop
std
inc
mov
pop
cmp
inc
ret
cmp
rcrl
push
aad
xchg
push
mov
or
or
or
mov
push
adc
jg
push
inc
xchg
xor
add
test
xor
rolb
jg
les
rol
out
mov
sbb
mov
dec
adc
mov
pushf
mov
sahf
loope
popf
sbb
decb
xchg
in
xchg
inc
add
daa
sbb
xchg
and
jge
jmp
cmp
lcall
into
test
push
test
cmpsb
sarl
mov
lahf
pop
mov
into
icebp
jmp
mov
test
jmp
gs
fld1
sub
mov
mov
ja
xchg
push
fcoml
les
xorb
xlat
stos
idivl
push
inc
in
mov
mov
loopne
mov
pop
iret
iret
and
xchg
sbbl
sub
inc
add
lcall
or
ret
lcall
fisubs
or
fst
aam
pop
imul
and
mov
ret
xor
pop
jb
jbe
mov
bnd
es
inc
and
cld
adc
cmp
mov
rcrb
cmp
aad
enter
sub
or
xchg
pop
std
adc
and
hlt
pop
int3
lret
jmp
aad
or
int
aaa
pop
sti
push
xor
push
push
pop
xor
addr16
or
inc
xchg
push
aad
in
mov
cld
dec
pop
cmpsb
loopne
icebp
cmp
pop
fimuls
add
ljmp
cld
ret
xchg
inc
dec
or
dec
mov
cmpsl
xorl
aas
scas
cs
stc
aam
pushf
inc
sbb
cmp
lods
sub
bound
cmpsl
cmp
adc
mov
cmc
cld
xlat
jle
daa
add
adc
ja
push
pop
lcall
rcl
or
popf
sbb
jle
sti
and
mov
addr16
ljmp
cmp
mov
mov
push
scas
add
pop
xchg
sub
jae
add
imulb
mov
cmp
adc
sub
push
pop
addl
fbstp
out
pop
and
or
sub
jg
jne
jge
fs
shll
add
xchg
aam
mov
sub
xlat
ja
add
push
mov
jp
xor
std
es
adc
rcl
dec
mov
jo
adc
xchg
das
mov
sbb
add
jecxz
fdivp
inc
std
into
mov
jecxz
adc
ljmp
pop
jmp
xor
mov
hlt
inc
adc
mov
scas
outsl
repz
mov
cmp
jmp
push
jbe
cmp
stos
dec
les
jmp
sbb
ret
into
cmpsb
dec
lcall
lods
dec
fistpl
jecxz
popl
dec
mov
cld
or
push
adc
sub
dec
or
mov
lods
out
push
in
mov
cmp
inc
jnp
incl
push
jae
subb
lods
push
pop
lcall
arpl
xor
lds
dec
push
xorl
inc
mov
roll
or
adc
and
into
in
es
adc
xor
daa
not
xchg
xchg
jo
aaa
adc
outsb
mov
xor
cs
xchg
pop
dec
jg
push
aas
mov
repnz
pop
xor
push
inc
loop
popf
push
pop
dec
int3
mov
test
xor
dec
decl
inc
lods
jecxz
fcompl
jmp
loopne
rclb
daa
xor
mov
incb
add
test
sbb
aaa
and
je
leave
pop
rcl
adc
mov
gs
push
outsb
mov
ret
cmp
sahf
shrb
mov
dec
jns
std
dec
push
rcl
jo,pn
pop
mov
xchg
stc
mov
sub
mull
in
gs
add
aas
pop
push
sbb
fiaddl
sbb
dec
and
mov
or
lcall
sub
mov
fdiv
xchg
inc
data16
inc
hlt
or
xchg
gs
adc
mov
mov
ror
mov
cli
lret
push
cmp
cmp
nop
nop
daa
or
jp
out
cmp
dec
cmp
enter
xchg
mov
dec
mov
or
imul
xor
aaa
std
rcrb
push
addr16
mov
test
push
jmp
cmp
mov
jle
andb
cmc
popl
mov
add
jns
ret
add
movsl
add
adc
cmpsb
cmc
aaa
lret
jmp
outsl
or
repnz
and
push
xchg
dec
mov
test
sahf
hlt
outsb
rcl
daa
rclb
leave
pusha
jp
sub
cltd
xchg
imul
and
xor
sahf
mov
pop
aad
push
punpcklwd
hlt
fdivrs
mov
sbbb
mov
lret
xchg
push
jge
int3
mov
stc
ret
cmp
dec
test
into
adc
fstsw
and
ljmp
adc
push
aam
jmp
dec
inc
outsb
xchg
cmpsb
push
push
shl
pop
in
test
in
adc
mov
cmp
rorl
pop
or
std
dec
adc
stc
pop
or
inc
inc
daa
xor
mov
sbbl
cmp
repnz
pop
mov
sbb
xchg
push
lahf
xchg
cs
movsl
xchg
hlt
mov
mov
adc
mov
movb
xor
insl
mov
movq
test
dec
jo
sub
sbb
inc
mov
pushf
push
insb
das
mov
cmp
js
sti
and
mov
scas
insl
inc
mov
cmp
sub
loop
cmpsb
dec
cs
mov
sbb
insb
ja
or
push
adc
push
xchg
mov
and
mov
pop
outsl
sahf
pushl
rcll
test
in
xor
ja
stc
in
lahf
xor
rcl
adc
sub
sub
ljmp
jl
add
adc
cmp
lret
push
add
sub
mov
xchg
xchg
cmp
jge
loope
xor
push
adc
jl
adc
push
cmp
sub
mov
iret
xchg
aas
loope
cld
test
mov
in
pop
pop
daa
jecxz
loopne
xchg
dec
fs
inc
test
arpl
ja
xor
stos
flds
nop
idivl
add
push
add
cmc
test
sbb
mov
call
and
jg
loope
and
loope
fwait
ret
iret
dec
mov
aaa
xlat
inc
inc
jmp
sahf
sub
mov
std
imul
push
xchg
incl
clc
dec
cmp
lret
jns
dec
cmp
fldl
sbb
jae
test
and
or
xor
xchg
fisttpl
jmp
add
sbb
jno
push
or
idivb
nop
pop
scas
test
pop
bound
iret
push
repnz
lods
pop
pop
xor
dec
sub
out
iret
fnsave
out
aas
cmp
push
inc
sub
leave
pushf
enter
jge
outsl
outsb
lods
pop
nop
push
adc
cmpsl
mov
pop
fisubl
or
insb
mov
je
xlat
jp
cmp
mov
and
leave
xchg
jg
add
lret
out
repz
sbb
sbb
stc
sbb
jle
repz
lock
adc
xor
xchg
jae
sbbl
out
and
movl
adc
les
inc
stos
pop
outsl
sbb
adc
sub
mov
insl
mov
cli
aad
add
cli
pop
faddl
icebp
out
add
loope
mov
lea
pop
movsl
lds
jle
mov
stc
shl
ret
jle
scas
aam
les
mov
cmp
or
into
pop
in
push
ljmp
data16
movsb
sub
leave
nop
in
les
cmp
sbb
or
mov
jbe
bound
shlb
adc
int3
int3
scas
addr16
inc
and
xlat
mov
sub
cmp
sub
xchg
cmp
stc
scas
or
inc
nop
mov
cmp
add
cmovl
and
push
inc
jae
sti
cmpl
decl
inc
fwait
bound
dec
test
cltd
loopne
dec
and
xor
xlat
call
mov
xor
cmp
push
add
sbb
test
pop
lahf
stos
repz
ja
lock
dec
mov
jno
push
scas
nop
sub
hlt
out
cmc
iret
popf
dec
out
fs
mov
aaa
xor
ret
lret
add
xchg
popa
mov
xor
movsb
test
push
inc
jecxz
ret
inc
pop
hlt
lock
pop
rorb
pop
add
jge
adc
adc
mov
push
clc
xorb
jno
or
insl
pusha
test
push
repnz
pop
add
pop
out
push
adc
cli
lods
xor
mov
push
sub
sbb
jbe
ret
or
sbb
hlt
mov
cmp
pop
push
or
mov
dec
lcall
xor
repnz
sbb
cltd
xchg
movsl
inc
cld
dec
mov
mov
sbb
and
xchg
in
lods
cltd
push
mov
pop
xchg
or
pop
popf
xor
cwtl
sti
or
cmp
xor
outsb
cmp
adc
test
popa
adc
int3
pop
mov
push
xor
pop
lret
aaa
lods
int3
cmp
push
clc
in
aas
mov
lret
movsb
jp
jno
mov
lds
insb
dec
insl
push
push
aam
mov
test
arpl
cmp
or
mov
aas
ja
sub
loopne
cmp
dec
lahf
cmp
inc
mov
popl
push
jmp
cmp
adc
jecxz
xor
fcompl
mov
mov
add
iret
cmpb
pop
popa
and
sbb
mov
repz
pop
jcxz
push
inc
inc
scas
dec
movsl
cltd
jnp
mov
rclb
mov
inc
je
cmp
jb
xor
pop
out
movsl
or
inc
or
mov
icebp
mov
addl
dec
mov
or
mov
lahf
cli
sbb
cmp
cmp
shl
fs
jl
icebp
ds
jnp
stos
xor
mov
scas
adc
xchg
xlat
sbb
test
jp
aas
adc
xor
mov
mov
xchg
adc
aas
out
loopne
pop
mov
clc
filds
or
push
std
push
and
sbb
fdivrl
hlt
lret
sub
mov
fistpll
mov
pop
dec
ret
adc
cld
jg
jmp
leave
fadds
cmp
fisubrl
es
mov
out
out
xor
xchg
sub
adc
mov
push
jae
xlat
xor
int3
pop
mov
lret
jns
lret
mov
adc
pop
shrl
repnz
pop
jb
imul
call
data16
jmp
fsubrl
mov
add
or
fsubrs
sbb
xchg
movsl
cmp
imul
jp
adc
fmul
data16
mov
pop
xchg
push
roll
push
and
jne
dec
xchg
lret
mov
cld
outsl
fcompl
xor
popf
rolb
jmp
pop
add
mov
lock
sub
mov
std
push
cltd
jns
inc
xchg
sub
cmpl
aam
pop
fiaddl
js
xchg
push
mov
sbb
arpl
push
push
mov
or
adc
lods
arpl
mov
jl
lret
mov
ret
mov
mov
and
in
enter
ficompl
mov
sbb
iret
xor
mov
out
in
or
xchg
mov
les
and
int
dec
mov
jecxz
sbb
stos
fcmovu
pop
test
cmp
shrl
and
es
cmpsb
sbb
dec
push
dec
add
loopne
mov
out
and
jl
loop
or
mov
mov
mov
cmp
xchg
xor
and
int
cmpsb
scas
shlb
out
repnz
adc
fcomp
pop
int
test
add
dec
cmpsb
insb
into
pop
xlat
push
xchg
pop
ret
cmp
ror
test
adc
jne
jg
shr
mov
loopne
and
jle
push
fstpt
jbe
cmp
rorl
sti
dec
pop
and
ja
pushf
jne
lea
mov
mov
shr
and
ss
bound
jg
jae
pop
addr16
movsl
int3
imul
push
and
mov
pop
jg
or
and
xor
test
mov
push
lea
adc
cwtl
js
aam
xor
fcmovnu
jl
shl
cltd
rcrb
enter
lock
lock
or
popa
les
mov
push
lock
mov
and
ds
cs
and
add
and
pop
mov
cwtl
cltd
ja
out
xor
adc
shlb
dec
jne
jmp
lret
xchg
je
test
cmp
ja
fstpl
pop
addr16
icebp
lret
outsb
or
sar
mov
add
lods
jo
jl
mov
add
mov
insb
push
shrl
adc
mov
in
mov
in
in
push
lcall
push
mov
push
xchg
lcall
stc
rcll
dec
aas
test
xchg
cli
jecxz
lods
repz
dec
mov
push
ds
push
cmp
push
fistps
adc
imul
or
cwtl
out
stos
inc
scas
jne
pop
ret
push
ret
hlt
mov
cld
sbb
xor
shlb
or
fbstp
xchg
mov
mov
adc
ret
loopne
ret
push
lods
pusha
insb
xor
push
iret
insl
outsb
fwait
cltd
jae
sub
out
pop
adc
xchg
imul
pop
icebp
mov
rorb
popf
test
std
int3
sbbl
push
xchg
push
fdiv
in
push
icebp
cwtl
sub
loope
mov
gs
xor
loope
jne
adc
cwtl
js
and
imul
and
pop
push
popa
int3
fidivl
xchg
test
test
adc
mov
cmp
adc
cmp
xchg
in
popf
mov
add
or
es
pop
cmp
sarl
jo
push
sahf
dec
push
pop
or
jp
out
mov
mov
push
bound
dec
sarl
iret
lods
stc
mov
add
lcall
insb
iret
or
mov
dec
adc
aam
lock
movsl
jge
xor
dec
cwtl
mov
mov
cmpsw
cmpsl
pop
mov
test
jno
roll
mov
mov
dec
decb
add
dec
mov
scas
movsl
in
xor
add
cli
dec
mov
pushf
aas
addr16
addl
and
das
ficompl
fdivs
fldcw
lock
and
pop
mov
mov
sbb
ljmp
sub
lahf
aad
fbld
imul
add
std
std
adc
or
pusha
cmpsb
dec
imul
pop
xchg
add
in
movsb
imulb
sti
push
xchg
jmp
add
adc
mov
cwtl
lret
inc
jo
xchg
dec
sbb
mov
in
and
pop
lret
inc
leave
sbb
std
leave
pop
push
addr16
add
mov
out
cmc
data16
std
insl
mov
xor
mov
push
jno
jge
sbb
sub
pop
adc
repnz
xchg
jns
loope
lret
aad
pop
push
and
in
pop
mov
popf
lcall
xchg
jmp
lret
jl
pop
insl
in
ror
cwtl
cmp
mov
cmp
dec
test
adc
lods
test
or
imul
mov
cmc
and
cmp
stc
mov
cmpsl
pop
mov
cmc
push
push
mov
sub
mov
fbld
hlt
pop
lahf
cli
imul
loope
lds
out
xchg
rcrl
insb
inc
and
data16
push
jle
mov
mov
cmp
and
and
hlt
mov
ret
adc
popf
mov
push
lods
push
inc
mov
push
out
push
cmpsb
arpl
into
and
bound
sbbl
fcompl
out
rorb
movsb
and
loop
hlt
mov
ret
inc
ss
jmp
pop
fcompl
gs
dec
in
xchg
or
loop
push
mov
jmp
and
les
pop
loope
adc
sbb
fsubrl
ljmp
or
negb
hlt
add
lea
push
xor
or
or
lds
insl
pop
mov
and
mov
mov
sbb
fists
shr
popa
add
pop
cmp
cmc
ds
cltd
or
loop
sub
sbb
adc
cmp
iret
pop
inc
lret
cmpsb
sbb
cld
insl
iret
lea
xchg
cwtl
jl
cmpsl
mov
out
out
lds
sti
and
and
and
add
jne
les
jns
pop
movsb
test
int
cmp
repz
fadd
mov
pop
leave
and
jecxz
ret
pop
aas
fcmovb
mov
leave
cmp
push
ja
in
xchg
ss
adcb
rcll
pop
mov
scas
add
lods
or
es
inc
inc
and
push
inc
sti
cld
jns
cs
stos
pop
adc
and
sbb
mov
inc
outsl
jb
xor
jne
jp
cmc
and
lret
into
sbb
dec
adc
sub
mov
dec
cwtl
sub
and
fdivrl
adc
cmp
imul
aas
lahf
and
jmp
rorl
cmpsb
sub
push
ss
pop
inc
push
sti
pushf
sar
xchg
icebp
lcall
dec
insl
ficoms
add
dec
out
xchg
ds
add
in
jbe
sbb
dec
lods
inc
insb
imul
mov
push
shrb
push
pop
fistps
sbb
xchg
jecxz
and
scas
mov
pop
js
fs
jns
loop
mov
lods
inc
xchg
add
in
push
add
in
into
sub
mov
jb
pushf
mov
std
test
test
jg
and
adc
js
inc
xlat
mov
inc
jbe
inc
stc
test
jg
pop
imul
adc
fdivrl
outsb
lcall
fistl
popa
xchg
sbb
mov
call
pop
dec
and
xchg
fwait
inc
sbb
pushf
daa
cmp
test
nop
lcall
xor
pop
sbb
movsl
mov
mov
aaa
xor
push
mov
pop
cmp
lret
cmpsb
inc
and
mov
cld
jne
lret
inc
cmpsl
fldenv
lods
insb
jg
fisubl
nop
or
sbb
nop
aas
int
aaa
jmp
sub
push
mov
cmp
aaa
dec
xor
jbe
xchg
int
lods
stc
xchg
pop
mov
inc
js
in
push
jmp
mov
jne
mov
movsb
xlat
cltd
outsl
mov
sub
xchg
mov
lret
and
xor
cmpsl
inc
mov
repz
imul
outsl
rcll
in
add
rclb
mov
lahf
cmc
aas
pop
sub
jno
cwtl
mov
sti
stos
sbbb
and
lds
xor
sub
test
cmpb
jnp
test
push
dec
push
sub
inc
aad
jg
mov
outsl
lods
sub
mov
pop
adc
jge
mov
jb
icebp
movsl
jns
push
pusha
fisubs
sti
mov
das
push
xchg
sub
addb
sbb
loopne
ljmp
aas
jb
mov
orl
adc
xor
cmp
das
inc
inc
sub
fdivs
pop
test
push
mov
jns
bound
fwait
out
stc
bswap
sti
aad
push
adc
movsl
push
mov
push
dec
cmp
mov
scas
cmpsl
mov
movsl
adc
push
sbb
gs
ret
and
or
mov
mov
das
xchg
push
adc
iret
push
cmp
mov
inc
in
gs
test
xchg
pop
ja
lcall
or
cltd
das
mov
adc
daa
lahf
xchg
leave
xor
push
xchg
hlt
fnstsw
jo
ret
or
stc
das
add
ja
movsb
in
pushf
pop
add
ds
xor
dec
dec
xor
adc
push
xor
int3
into
mov
push
push
movsb
jo
and
cwtl
cld
jmp
iret
adc
mov
fsubrp
xchg
fsub
push
js
mov
push
mov
addl
xor
pop
adc
daa
scas
add
imul
mov
movl
jnp
insb
inc
and
pop
sub
lock
sbb
inc
sbb
sbb
push
push
sub
add
adc
cld
arpl
addb
sbb
test
xchg
mov
xlat
cltd
bound
clc
loopne
adc
xchg
aam
aas
inc
shll
mov
mov
outsl
es
mov
ja
mov
or
inc
mov
push
push
js
add
ljmp
lds
and
sub
mov
inc
xchg
dec
dec
pop
outsl
pop
in
dec
inc
pop
lret
xor
loope
pop
mov
pop
push
fnstsw
lret
mov
in
pop
pop
mov
or
inc
js
enter
repz
push
mov
xor
add
out
xchg
pop
pop
xadd
ss
iret
sbb
decb
xor
xor
cld
or
xor
xor
insl
in
xor
cltd
cmpsb
xchg
mov
mov
addr16
sub
and
movsb
xor
pop
jno
rolb
xchg
mov
fs
sub
out
mov
or
add
ds
mov
cmpsb
jo
lcall
jae
xor
xchg
cwtl
or
push
std
ss
push
cmp
mov
jns
mov
inc
mov
and
insb
mov
into
aaa
push
mov
mov
add
jae
xor
sar
adc
mov
testb
movl
mov
adc
mov
add
ret
mov
adc
inc
or
lea
mov
inc
add
test
adc
sub
and
mov
rol
jno
add
pop
inc
stos
out
hlt
mov
pop
popf
cmp
sbb
xor
jmp
pop
cmp
popf
fmuls
mov
fdiv
scas
jge
fcmovne
push
pop
lahf
outsb
repz
popf
and
mov
sbb
pop
add
pop
ja
cmp
or
jo
mov
mov
loop
in
fs
mov
shlb
xchg
cs
xor
ficoml
out
ja
mov
ret
push
xchg
push
mov
inc
loop
stos
outsl
mov
xchg
mov
mov
adc
testb
sbb
cmpl
lock
inc
idivl
inc
sarl
rcll
pop
js
loop
add
icebp
mov
nop
mov
cltd
aaa
push
bound
inc
push
in
pop
dec
pop
adc
mov
outsb
xchg
jp
adc
cltd
and
jb
cwtl
ljmp
dec
aaa
rolb
roll
mov
xor
add
insb
dec
outsb
pop
stos
pop
dec
out
push
jg
mov
imul
cld
in
push
mov
add
sti
cmp
dec
out
xor
mov
ret
mov
pop
or
aad
rolb
adc
stos
xchg
das
jl,pt
mov
cmp
call
mov
jnp
std
lret
lret
or
pmaddwd
sbb
hlt
jnp
adc
dec
lods
in
sbb
insb
js
dec
in
and
outsl
and
mov
mov
in
sub
test
pop
mov
cmp
cmp
jo
sbb
add
xor
jmp
shrl
inc
adc
imul
lea
push
mov
push
daa
adc
call
and
jl
in
imul
jo
adc
shll
aam
aas
fcmovb
mov
mov
aad
adc
mov
subb
pop
xchg
add
fstl
dec
inc
stos
mov
js
adc
fwait
scas
mov
pop
sbb
in
xchg
pop
xchg
xor
push
jle
adc
js
out
pop
sbb
rcll
mov
call
std
cmp
or
pop
push
repz
aam
sub
cmp
outsl
push
xchg
cmp
push
jmp
in
push
das
add
jo
push
xor
lods
dec
int3
sub
jb
add
mov
cmp
mov
mov
push
adc
jecxz
movsb
dec
dec
dec
inc
sti
mov
movsb
dec
cwtl
pop
or
xor
pandn
nop
shrb
cmp
pushf
stos
mov
xlat
popf
push
adc
jb
jp
rcrb
jns,pt
dec
sbb
roll
dec
add
jmp
scas
mov
test
xchg
or
stc
xchg
or
pop
test
je
in
aaa
mov
loope
sub
mov
jno
popf
stc
sbb
cwtl
hlt
adc
arpl
int
push
jecxz
xchg
jno
sti
mov
call
pushf
cmp
out
and
pop
je
in
push
filds
pop
mov
mov
roll
mov
das
int
push
fmuls
into
cwtl
movsb
xlat
pop
inc
pop
loop
jp
dec
mov
test
imul
inc
loopne
jns
mov
adc
pop
pop
mov
cwtl
ja
jb
shlb
mov
dec
ljmp
data16
jecxz
xchg
mov
xchg
mov
inc
and
xlat
push
dec
pushl
jge
add
mul
lds
pop
lods
mov
jne
sub
cmp
andb
sub
sub
xlat
shll
scas
inc
cld
pop
mov
jecxz
adc
out
jns
dec
xor
sub
inc
je
mov
push
gs
cs
clc
lods
inc
mov
insb
push
sbb
jmp
add
lret
repz
pmulhuw
push
cmpsl
sub
inc
push
inc
lods
push
xchg
xchg
adc
fistpl
orl
push
xor
lcall
notl
push
lret
jno
sahf
cli
cmp
dec
mov
and
jns
push
sbb
hlt
shll
cmpsl
ds
push
mov
loope
dec
push
into
movsb
fisttps
imul
js
push
xlat
adc
test
loop
or
ss
sub
roll
sub
sub
jge
jmp
test
nop
adc
fnstcw
push
int3
and
dec
enter
pop
pop
cltd
pop
inc
aam
stos
rol
xchg
jl
inc
icebp
pop
bound
hlt
lods
push
clc
cmpsl
repnz
mov
jnp
jge
mov
lcall
xchg
jg
or
adc
xor
jp
loope
js
mov
jne
jb
fidivl
and
outsl
repnz
lret
test
call
mov
sti
pand
mov
jg
push
mov
out
pop
sbb
or
cmp
jno
push
in
lods
ja
mov
add
aaa
jecxz
imul
jnp
xorl
insl
and
sub
xchg
cltd
pushf
or
ret
scas
sbb
cld
frstor
sbb
notb
loopne
push
inc
pandn
mov
adc
sbb
jo
mov
xchg
repz
ljmp
xchg
mov
jecxz
and
or
sti
cmp
jne
lock
or
mov
sbbl
aad
cmp
and
pop
pop
daa
repz
pop
push
es
inc
dec
out
or
inc
inc
push
xor
lea
cmp
jmp
or
fdivs
and
je
and
jne
scas
idivb
xor
cmpsb
imul
int3
mov
and
push
fildl
push
cli
mov
popf
add
arpl
pop
cmp
stos
addr16
and
pop
pop
lods
pop
xchg
xchg
sbb
lods
xorb
mov
sahf
nop
test
fdivr
xlat
xor
mov
cld
test
sub
xor
or
jmp
lret
sub
pop
test
or
aad
cli
out
mov
mov
cmpsl
jo
push
stos
aaa
lret
and
xchg
push
xor
imul
insl
sub
mov
mov
push
or
aad
push
iret
sti
add
xorb
cmpb
es
inc
mov
shrl
jg
adc
sub
cmpb
xlat
les
frstor
jb
in
jne
fwait
dec
test
jns
insl
scas
roll
movsb
cmc
movsb
jle
imul
inc
ja
xchg
pop
in
xorl
std
mov
mov
leave
repz
test
push
mov
and
insb
popa
xchg
frstor
mov
sub
adc
mov
in
ljmp
popf
or
lret
rolb
cmp
sbb
into
adc
lcall
jmp
push
xchg
and
xchg
aas
imul
fwait
adc
pop
inc
ret
push
lcall
mov
outsb
fidivrl
lret
bnd
daa
xor
mov
xor
add
inc
sub
mov
mov
mov
testl
fs
mov
faddl
dec
enter
add
push
lds
add
orb
fmull
arpl
xor
orb
push
pop
lea
and
xor
xchg
clc
pop
add
dec
rolb
gs
scas
rclb
sbb
push
xchg
jmp
xor
das
out
add
and
pushf
test
pop
push
in
sub
cwtl
sbb
mov
test
fs
popa
out
mov
shrb
hlt
stos
les
dec
clc
mov
dec
stos
stc
repnz
sub
inc
lret
sbb
push
lds
xlat
out
sahf
pushl
mov
and
mov
jecxz
insb
jp
out
sub
mov
mov
pushf
mov
sbb
cmpsl
das
je
imul
repnz
push
ffreep
out
and
rcrl
mov
push
in
je
mov
scas
sahf
add
int
push
push
jle
or
lods
sbb
aas
pop
xchg
lahf
or
das
ds
mov
ret
push
scas
shlb
movsb
push
push
mov
push
popa
leave
lods
and
mov
scas
imul
mov
mov
fcomps
out
mov
pop
jmp
popa
jb
loope
and
push
mov
dec
inc
push
cltd
fdiv
jl
adc
cltd
mov
shll
sahf
mov
icebp
pop
push
dec
mov
popf
or
in
push
pop
faddl
dec
into
outsl
negl
add
and
sub
push
xlat
lods
jae
jo
inc
dec
jnp
scas
repz
push
into
icebp
or
in
ds
gs
out
cmpsb
cmp
insl
popa
xchg
lock
js
sti
cmp
sub
xor
ret
aaa
fwait
cmp
push
inc
adc
cmp
andb
pop
hlt
movsb
clc
mov
add
les
xor
sub
jg
inc
pop
pop
sbb
and
or
sbbb
loop
add
ss
xchg
enter
jbe
dec
dec
mov
jae
mov
fisttps
mov
sbb
hlt
loope
in
lods
je
push
or
cmpsl
jecxz
and
fchs
lds
xchg
add
xchg
dec
xor
ret
sub
cmpl
pop
sti
inc
popl
mov
xorb
sbb
repz
stos
aas
scas
inc
mov
negl
xchg
dec
sbb
cmp
mov
inc
mov
pop
scas
and
sbb
clc
pop
push
fsts
lret
push
xorl
negb
mov
out
add
inc
cmc
mov
pop
push
dec
sub
mov
mov
mov
cmpb
push
je
xor
jnp
or
and
repnz
aas
std
mov
sub
lods
inc
cs
xchg
pop
sub
dec
add
mov
cmp
imul
test
ds
xchg
cs
or
lret
mov
push
mov
ret
inc
sbb
or
jb
xchg
stos
in
inc
subb
sbb
pop
add
fsub
mov
subb
scas
mov
icebp
pop
out
push
jbe
push
insl
fnstcw
fcomp
aam
mov
xchg
or
inc
pusha
xchg
push
outsl
mov
std
rorl
push
cmpsl
xchg
aad
inc
ljmp
xchg
scas
out
icebp
insb
inc
dec
js
dec
movl
ror
shlb
add
mov
adcl
movsl
rcrl
pop
and
mov
or
fstps
pop
inc
in
mov
scas
dec
cmp
mov
push
fstp
into
nop
xor
pop
mov
adc
shrb
inc
xchg
inc
sub
inc
cmp
sub
rcrl
jno
adc
cmp
mov
dec
pop
mov
fisubrl
xchg
mov
xlat
pushl
dec
into
clc
dec
ss
pop
repz
dec
sarb
sub
inc
jecxz
outsb
mov
loop
loop
sub
sub
fisubrs
in
xchg
rcll
adc
xor
inc
push
call
mov
mov
iret
mov
xor
xchg
or
pop
and
nop
cmp
jle
or
stos
pop
or
xchg
cltd
addr16
pop
into
jmp
loop
sbb
jno
inc
dec
mov
xlat
mov
xor
dec
fdivrp
cld
pusha
push
subb
dec
inc
popa
rol
fwait
and
rcr
add
add
adc
pusha
inc
cli
or
iret
pop
call
movsl
dec
shl
and
cmc
pop
hlt
add
loop
mov
scas
jg
loopne
pop
inc
mov
pop
pushf
inc
ljmp
stos
ret
xor
imul
push
clc
aaa
repz
sti
adcl
add
xor
subb
leave
adc
push
mov
or
test
insl
add
lds
inc
mov
sub
into
lahf
add
stc
jo
and
dec
ss
push
mov
xchg
xor
sub
or
ss
iret
psadbw
sub
insl
mov
int3
lahf
or
add
daa
dec
outsl
es
cltd
nop
xchg
movsb
jge
fxam
push
pop
xor
aad
jo
xlat
das
and
mov
cmp
pop
out
sub
inc
stos
jnp
mov
xchg
test
inc
data16
mov
out
dec
aaa
mov
jns
cmp
test
shrl
cmp
fidivrs
fst
leave
fistpll
push
loope
ds
mov
lock
mov
ja
push
push
pop
mov
out
xchg
and
jle
addl
pop
out
xchg
loopne
mov
jmp
cmpsl
cmp
cmp
sbb
push
jne
push
inc
push
int
repz
outsl
jbe
call
in
jns
jmp
loopne
and
in
dec
dec
dec
jle
inc
jg
int3
jl
mov
test
lret
mov
stos
ret
repnz
push
test
lods
fstl
jnp
in
insl
push
fwait
cld
mov
cmp
push
push
mov
in
sbb
out
cs
sbb
fnstsw
sub
add
shl
push
ret
clc
test
sub
int3
jo
call
rorl
in
push
mov
push
jns
push
mov
push
cmpsl
xor
sbb
or
add
repz
mov
movsb
mov
mul
jo
and
xor
fildll
dec
or
or
js
das
imul
test
in
xor
movsb
call
mov
and
add
xchg
mov
jae
push
in
fsubs
or
push
jp
push
test
xchg
insl
xchg
aam
push
dec
push
jle
cmc
in
adcb
fisttpl
into
cmp
inc
fisttpll
or
inc
or
jmp
cmpb
inc
hlt
add
push
push
jns
inc
mov
mov
es
fdivp
movsl
pop
dec
jp
leave
or
fdivrs
jecxz
inc
loopne
test
popf
lock
xchg
pop
adc
jl
inc
push
pop
ret
fisttpll
ret
inc
bound
cwtl
push
jp
enter
in
adc
insl
fisubl
xchg
inc
mov
scas
xchg
sti
outsb
addr16
fcmovnbe
pop
push
or
add
cltd
sub
jo
mov
mov
mov
mov
pop
lret
mov
and
lods
mov
testb
dec
inc
jbe
iret
dec
adc
sbb
xor
mov
int
inc
sar
xor
popa
aam
cld
dec
punpckhwd
push
mov
xor
arpl
mov
popf
jno
cmp
icebp
mov
sub
mov
xchg
inc
add
mov
push
mov
int3
sbb
mov
in
lds
int
mov
xchg
dec
push
enter
sbb
stc
sahf
cmp
dec
pop
add
cmp
xchg
push
fcmovu
out
mov
out
adc
lods
cmp
mov
jle
inc
adc
daa
ret
xchg
out
daa
rcr
mov
mov
pop
leave
fisubrl
fisttpl
call
xchg
lret
fbld
sbb
xor
test
add
lcall
loopne
mov
xor
sbbl
push
cmp
jbe
aad
adc
ss
cmp
fistps
inc
cmp
rcr
cmc
and
ret
pop
or
fcompl
pop
jbe
test
sub
inc
pop
jbe
adc
sub
jns
call
lods
addl
fcoms
dec
xor
dec
or
sbb
pop
sub
aas
xchg
sti
bt
mov
push
add
mov
pop
out
js
cmp
cld
ret
int
sbb
push
jge
adcl
inc
xchg
adc
pop
pop
mov
repnz
cltd
add
aas
cmpsl
stos
addr16
or
cmp
addr16
sahf
shlb
pop
in
mov
xor
sub
loop
aaa
push
pop
icebp
inc
xor
inc
push
mov
push
mov
mov
jl
lret
sub
clc
pop
insb
stos
inc
daa
lret
popf
in
aam
ss
rclb
js
add
mov
repz
loope
mov
mov
out
adc
or
sbb
mov
xchg
lret
inc
add
ds
push
ret
and
sbb
ja
and
fsubr
cs
cltd
fnstenv
xor
leave
lahf
sbb
add
mov
mov
test
repnz
cmp
sub
bound
cmp
pop
mov
cmp
andl
xchg
stc
jbe
notb
push
jmp
out
mov
mov
iret
imul
and
repz
or
cwtl
xchg
xchg
repz
cmc
push
test
or
rcrb
push
xchg
push
stos
test
mov
cmp
into
mov
ss
adcl
rorb
repnz
xorl
jle
jno
lret
inc
or
mov
insb
mov
cmp
xchg
ss
mov
push
jmp
add
insb
mov
mov
or
ficomps
ret
pop
in
scas
int3
push
cmp
mov
lret
or
pop
das
jb
shl
fwait
mov
lahf
shll
sub
leave
push
imul
dec
adc
inc
xlat
cs
jne
or
es
cmp
push
jno
xchg
or
cmp
push
lahf
push
mov
lcall
in
xorb
jb
sub
es
inc
and
xchg
repz
and
loope
fldenv
lret
jge
ja
push
xor
in
fidivl
clc
call
push
sub
insl
iret
sbb
jbe
mov
xchg
push
inc
js
pop
sti
jb
push
pusha
loope
push
and
icebp
mov
leave
jp
lret
jb
ja
add
movsl
and
jp
test
inc
dec
scas
dec
or
pop
cmp
loop
cmp
push
addr16
sub
pop
mov
cld
mov
or
mov
imul
outsb
insb
in
xor
or
idivl
adc
rorb
or
mov
inc
bound
xchg
mov
jnp
test
mov
scas
clc
mov
push
xchg
push
outsl
test
in
mov
cmpsb
mov
mov
icebp
jp
pop
dec
mov
xorb
sub
mov
test
pop
aaa
ja
sub
pushf
lock
cmp
xchg
mov
mov
mov
stos
fildll
push
xchg
movsb
jg
movsb
rorb
iret
cmp
sar
fnsave
ret
push
fsin
clc
pop
mov
cmp
push
std
push
jp
pop
hlt
adc
and
ss
xchg
fistl
pop
push
gs
sbb
pop
mov
repz
out
jg
stos
inc
lahf
mov
xchg
in
lock
out
xor
lahf
mov
fbstp
pop
pop
test
iret
dec
mov
js
dec
inc
test
adc
sub
xchg
or
xchg
ret
adc
subb
dec
mov
mov
adc
ret
pop
mov
or
mov
sub
lock
add
andb
sbb
sbb
push
fldt
or
mov
cmp
jno
cltd
loop
push
shll
mov
sbb
ret
pop
cmp
xorl
rcl
pushf
ret
sbb
imul
fdivrl
repnz
mov
pop
xchg
xor
sahf
in
repnz
and
push
mov
xor
stos
imul
je
enter
out
rorb
test
lds
gs
mov
ds
test
pop
or
cli
pop
sub
test
aad
inc
ds
bound
int
sbb
add
adc
jno
dec
andb
cmp
xchg
mull
dec
or
mov
mov
mov
out
pop
mov
inc
xchg
arpl
add
cmp
mov
in
lahf
test
adc
sub
push
pop
xorb
fidivl
and
loopne
daa
jmp
je
mov
adc
addr16
push
mov
push
cld
cld
ret
and
fiaddl
js
cmp
idiv
test
fnstcw
outsb
test
mov
insb
mov
stos
jae
iret
and
je
stos
sub
iret
mov
lcall
ret
cld
xchg
inc
cltd
fcoml
sahf
aam
jnp
and
test
mov
icebp
mov
outsl
int3
adc
stos
int
lods
in
dec
adc
in
into
cmpsl
in
outsl
pop
jne
stos
cwtl
test
xchg
aaa
movsb
push
adc
dec
adc
or
shrb
jnp
push
cli
scas
push
sarl
xor
mov
rorb
int
pop
sub
imulb
stos
lods
and
imul
cmp
xchg
or
sub
xchg
sub
stc
xorl
fsubrs
mov
pop
std
and
jp
add
ftst
push
in
lods
jg
dec
mov
mov
insb
pop
lea
sub
mov
cmp
mov
jl
in
pop
adc
jl
testl
add
dec
pop
loope
dec
loopne
pusha
adc
jmp
sbb
fistl
sarb
dec
xor
xchg
enter
push
xchg
popf
cmp
and
push
into
jge
test
inc
mov
mov
push
ja
mov
out
push
aam
xlat
inc
xchg
sahf
fs
jo
dec
leave
cltd
lahf
cmp
pop
daa
add
lea
mov
mov
xor
sbb
cmpl
popf
and
mov
bound
gs
adc
adc
pop
out
lea
and
in
pop
loop
cmpsb
lods
mov
xchg
dec
cmp
jecxz
pop
aad
pushf
sbb
and
mov
std
xchg
jmp
jmp
scas
jle
rclb
bnd
ret
inc
mov
call
mov
test
fmuls
cmp
es
fcom
std
and
jne
loope
iret
ficomps
aam
dec
int3
je
cli
insl
xchg
call
outsl
paddsw
jo
sbb
add
mov
mov
cmp
push
mov
push
inc
xchg
ljmp
popa
sub
mov
sub
xchg
repnz
imul
sub
push
mov
scas
xor
jne
pop
pop
ss
out
mov
fdivrs
dec
out
imul
mov
push
mov
negb
leave
xchg
ret
mov
test
testb
jg
mov
inc
and
mov
out
cmpsb
mov
pop
mov
pop
pushl
xchg
mov
lea
in
jl
repz
inc
subb
push
ss
mov
decb
sub
cltd
ja
fcomi
fsts
xor
push
mov
jmp
mov
cmp
and
push
test
cmp
pop
imul
pop
in
movsb
in
cmp
jno
push
inc
add
cmpl
imul
lret
sub
push
imul
mov
jge
aas
jmp
or
setbe
gs
pop
inc
xchg
or
mov
cwtl
ficomps
push
jecxz
cmp
leave
dec
sbb
imul
mov
dec
push
ficompl
mov
jp
fidivs
lods
xlat
and
sbb
push
fcompl
xchg
mov
test
fisttps
adc
add
pop
call
xchg
shl
int3
xor
inc
lods
out
out
jne
icebp
cs
mov
jecxz
out
ja
lea
fisttpl
pop
aaa
inc
jle
out
inc
xor
lds
loop
mov
stc
mov
les
lods
outsb
fcomp
aam
test
scas
mov
std
in
mov
fisubrs
daa
inc
imul
insl
mov
shlb
loop
cmp
jbe
mov
inc
xor
dec
negb
fsubrs
into
aad
das
adc
sti
or
shll
or
jp
fidivrs
popa
mov
sub
rol
aam
xchg
out
insl
fmul
rorl
icebp
xchg
cmp
jae
dec
cli
jns
ret
loopne
xchg
or
push
ljmp
adc
mov
dec
and
dec
clc
bound
fs
xchg
inc
jge
xchg
mov
pop
cmovl
fstps
sbb
and
sub
and
call
outsl
pop
and
push
or
mov
add
fnstsw
adc
pushl
push
in
mov
add
cmpsb
in
add
dec
mov
inc
in
xchg
push
pop
cli
mov
mov
add
sahf
xchg
int
rcrb
adc
jmp
sbb
pop
push
push
fcom
addr16
aad
repz
ja
cmpsl
cld
jb
mov
jg
jns
dec
add
popf
addl
stos
cltd
scas
lcall
shlb
mov
adc
fisubrs
nop
insertq
push
pop
mov
movsl
fwait
lcall
loop
sti
jno
pop
icebp
add
aad
cmp
bound
cs
jbe
ret
pushf
cmp
mov
adc
inc
mov
std
push
xchg
and
sbb
fstpt
out
jmp
mov
inc
js
inc
inc
ljmp
fyl2xp1
inc
inc
push
xor
push
cmpsb
push
outsb
pusha
in
jne
inc
gs
add
jne
push
push
adc
pushf
push
pop
scas
sbb
mov
fdivrp
pop
add
scas
fmull
fstpt
jmp
dec
dec
inc
bound
mov
leave
enter
lods
enter
mov
mov
iret
enter
imul
or
jge
lea
add
lods
mov
adc
pop
mov
pop
xor
sub
jge
pop
je
pop
imul
bound
sar
xchg
push
cld
xchg
sub
negb
mov
cmp
mov
dec
jge
mov
inc
mov
inc
sbb
sub
push
push
lret
mov
xor
std
or
pop
mov
dec
sar
jl
mov
pop
sub
lock
cmpsl
mov
push
shrb
mov
stos
roll
mov
inc
pop
lret
cmp
divb
lds
sub
push
notb
leave
xchg
scas
mov
fistpl
cmp
sub
aad
pop
sbb
and
xor
rcrb
mov
add
dec
repnz
cmp
xor
adc
in
gs
pop
fists
popa
inc
popf
or
in
add
jle
pop
mov
push
jo
or
bound
push
xor
push
push
imul
cmp
aad
stc
fiadds
mov
pop
stos
xchg
iret
stos
pop
mov
in
mov
cmp
or
loope
sbb
fistl
test
ret
in
pop
movsl
lds
int3
lods
pushf
fmuls
mov
inc
sbbl
push
cmp
std
cmpsb
dec
fidivs
imul
jno
sbb
fisubrl
inc
std
enter
pop
out
fsubs
pop
rcrl
je
hlt
mulb
cmp
fcmove
in
hlt
in
push
cmp
push
pushf
cmc
mov
test
xchg
mov
sub
dec
gs
mov
imul
inc
addr16
push
add
rcl
shlb
cli
sbb
orl
jge
push
inc
cmp
mov
or
mov
les
mov
adc
mov
cltd
cwtl
mov
pop
mov
mov
mov
ss
fs
rol
mulb
jp
outsb
or
leave
movsl
sub
pop
jns
lock
insb
aas
out
outsb
rclb
aad
jg
fs
call
icebp
cmp
and
cmp
mov
aad
lock
jmp
aaa
pop
jno
shll
adc
subb
int
add
int
leave
xchg
test
push
bound
inc
movhps
push
stos
lods
ljmp
adc
xchg
pop
rolb
mov
inc
pop
call
or
push
dec
in
and
lds
xor
dec
scas
dec
loopne
add
ret
pop
xchg
mov
mov
aaa
rcrl
iret
lret
out
jbe
lea
shll
push
sub
popa
iret
dec
popf
and
xorb
mov
mov
sub
gs
sub
fiadds
sbb
movsb
ja
and
push
daa
sub
pop
adc
sbb
shrl
xchg
inc
inc
mov
pop
popf
movsb
jmp
add
sub
push
or
sbb
stos
mov
ljmp
popa
test
stos
or
ret
xor
in
or
sbb
fwait
das
cmp
xchg
xlat
push
jge
xor
sub
stos
mov
push
arpl
test
sar
leave
fnsave
or
popf
into
pcmpgtb
adc
dec
and
push
mov
out
sub
or
lock
push
in
and
push
jae
jbe
es
mov
jmp
neg
jne
les
fnstenv
add
lds
add
adc
xorb
in
arpl
out
adc
popa
decl
dec
jnp
mov
mov
push
ds
popa
push
rorl
adc
dec
out
mov
push
sbb
inc
das
push
push
pop
sub
js
push
shrb
cmp
push
cmp
pop
lret
adc
andl
pop
imul
push
into
push
rcr
and
jg
loopne
xor
stos
jp
mov
outsl
aad
add
jne
push
and
and
test
lea
leave
push
pop
and
lret
fwait
imul
fs
mov
adc
ror
imul
xchg
mov
add
mov
xor
mov
dec
leave
adc
dec
adc
lea
jnp
cmpsb
inc
xor
test
xchg
add
push
shlb
cltd
loop
pop
cmp
inc
je
imulb
ret
add
sub
faddp
jl
repz
data16
je
and
shl
roll
mov
pusha
stc
ss
jnp
ficoms
fadds
sarb
adc
and
pop
jp
inc
data16
imul
or
jmp
sub
cmp
pop
ret
sahf
jo
dec
xchg
mov
sbb
or
aas
push
out
xchg
popa
and
mov
jg
xchg
xchg
imul
loop
leave
imul
daa
adc
stc
fadds
and
sbb
mov
call
xchg
dec
cmc
and
push
mov
mov
push
push
in
shlb
insl
loop
lahf
rcrl
lret
out
stc
adc
daa
mov
int3
xchg
fiaddl
pop
add
fisubs
cmp
fcmovbe
cmc
mov
adc
add
push
je
lcall
mov
pop
xlat
push
repz
sbb
xchg
add
data16
xor
cmp
cli
int3
gs
pop
push
test
sbb
repz
xor
les
cmp
xor
mov
mov
mov
aam
sbb
pop
push
clc
nop
popf
push
imul
nop
dec
lds
fwait
aaa
loopne
in
sbb
add
pop
jne
cmp
xchg
mov
pusha
push
enter
test
ret
adc
ret
mov
stos
lret
mov
dec
xor
sbb
sub
or
xchg
push
addr16
cwtl
nop
out
jae
jle
xchg
mov
mov
xchg
or
inc
xor
mov
mov
repz
dec
stos
into
inc
xor
push
push
cltd
inc
imul
loop
dec
cli
pop
mov
outsb
xchg
lahf
jnp
lds
jns
mov
push
inc
adc
loop
jne
rclb
pop
ja
adc
stos
cltd
cwtl
adc
or
xor
rorl
stos
sub
adc
ret
fnop
inc
sbb
mov
fsubl
mov
ljmp
out
jge
test
mov
mov
daa
cmp
jne
mov
ljmp
jo
jmp
mov
cs
cmp
pop
sub
sub
int
imul
sbb
and
divl
data16
aaa
loopne
daa
rorl
adc
cltd
cltd
inc
rolb
xchg
das
out
fldcw
movsl
push
mov
cmp
adc
jl
or
dec
pop
sahf
cmc
push
pop
cmp
push
out
pop
xchg
iret
enter
sbb
cld
inc
dec
loope
popa
in
nop
xor
pop
mov
xchg
lods
jbe
push
jp
xor
shrl
jecxz
push
mov
sub
jne
aaa
xchg
cwtl
or
jg
mov
jg
mov
mov
and
and
sbb
mov
mov
mov
popf
mov
push
lods
xchg
sbb
lock
loopne
add
int3
mov
int3
inc
rolb
pop
jb
add
cmp
add
dec
aaa
xchg
jbe
inc
lret
loope
iret
pop
jg
cli
xor
ljmp
cld
call
cmp
aad
inc
test
mov
outsb
add
or
test
roll
iret
pop
pop
pop
insl
gs
cli
pop
dec
in
in
mov
mov
pop
enter
cmc
lret
rolb
lock
ss
or
pusha
std
cmp
pop
popl
cwtl
testl
push
and
das
sarl
aad
adc
mov
mov
leave
push
inc
push
int
aam
adc
pop
hlt
ja
mov
stos
repnz
push
jnp
cmp
idivb
insb
mov
jp
mov
push
je
cmp
jb
mov
stos
cld
jp
mov
negl
push
xlat
or
hlt
xor
jne
xor
and
and
out
add
leave
psubusw
sub
mulb
push
orl
call
mov
jle
lahf
sbb
mov
arpl
and
pushf
push
ja
and
xchg
fcmovne
test
xor
jae
add
or
fldt
xchg
and
cmp
mov
sbb
sbb
popf
adc
inc
xchg
shlb
pop
pop
pop
aam
cmp
aas
mov
fsubrl
adc
mov
lret
lcall
ljmp
in
pop
jle
adc
xchg
mov
mov
add
and
cwtl
mov
xchg
and
aam
or
xchg
jl
adc
add
xchg
jge
add
in
outsb
negb
popa
movsl
xor
out
sbb
call
test
mov
dec
jne
imul
mov
cmp
and
adcl
lock
cld
add
or
loop
cmp
cli
in
sbb
mulps
clc
fdivrs
sahf
xchg
insb
loop
jg
xor
mov
aas
push
cmp
push
repnz
enter
pop
mov
sbb
movsl
xchg
xchg
xchg
movsb
test
pushf
std
xor
dec
mov
in
lcall
push
testb
sbb
xor
push
lret
lret
push
mov
flds
les
das
cmpsb
out
xor
shll
mov
jle
fistpl
divl
dec
roll
jns
cmpsb
rcl
loopne
xchg
xor
cmovno
std
lret
xchg
and
xor
ja
cwtl
adc
pushf
inc
mov
cmp
imul
mov
inc
fs
int
sbb
sbb
xor
xchg
or
mov
testb
fisttpll
rorl
xchg
int3
dec
mov
cmpsb
sbb
nop
out
fbstp
dec
sar
jno
mov
subl
mov
mov
stos
cmp
les
or
inc
arpl
enter
subb
fistpl
out
pop
push
loopne
aam
jl
nop
push
sbb
add
in
loop
dec
lds
add
dec
adc
mov
mov
mov
push
andl
int
insb
mov
ret
pop
les
mov
dec
fistps
pushf
fldl
scas
cmpsb
js
pop
in
and
js
xchg
xor
subl
cmpsl
dec
xor
sbb
dec
sub
data16
mov
sbb
or
stos
int3
xchg
out
push
or
cmp
mov
jecxz,pn
add
xchg
adc
and
daa
xlat
fcomp
imul
inc
mov
je
test
mov
mull
sti
cmc
pop
gs
sub
pop
jecxz
or
aad
fwait
cmp
sbb
dec
mov
fadds
mov
and
ss
in
int
xchg
xor
inc
repnz
jne
or
addr16
pusha
cmc
icebp
adc
add
mov
sahf
mov
mulb
stos
pusha
dec
arpl
lods
xchg
shrb
sbbl
and
mov
test
ds
cmp
out
xchg
repnz
imul
push
enter
push
shll
pop
sbbl
jl
jb
test
into
mov
sbb
jae
pop
inc
lock
jle
pop
jge
mov
xchg
clc
test
movsl
adc
lods
mov
xor
and
sub
stos
sub
gs
stc
dec
test
jg
imulb
push
out
fiadds
arpl
sub
fnstenv
xchg
icebp
pop
jmp
adc
aam
add
jl
lcall
fistpl
push
stos
push
scas
iret
inc
mov
xorb
pop
stos
push
aas
in
cmp
les
aad
and
jge
scas
pop
mov
imul
fsubl
jo
cmpsl
or
fwait
add
xchg
xlat
mov
shr
push
leave
and
sub
push
sbb
push
mov
mov
push
jae
inc
xchg
jecxz
dec
inc
inc
and
out
xor
add
stos
out
andb
adc
add
jecxz
cli
ds
pop
dec
sbb
or
pushf
push
add
mov
and
xchg
gs
mov
push
movsl
xchg
cld
stos
adc
mov
movb
test
fcoml
sub
int3
pop
aad
mov
mov
nop
popf
stc
lods
aas
mov
pop
lock
inc
cltd
add
dec
and
mov
pop
ljmp
shlb
nop
xchg
jo
adc
pusha
loope
sub
and
push
lds
mov
jg
hlt
sbb
sub
pop
mov
jb
xchg
xchg
xlat
jbe
aad
imul
daa
dec
insl
hlt
and
outsb
add
popf
out
rcll
cmc
adc
and
mov
in
inc
ror
aaa
add
push
fwait
inc
jge
fistl
ficompl
sbbb
lahf
add
addr16
jnp
dec
pop
sub
ss
sbb
mov
inc
shr
cmpl
xor
adc
xor
sub
outsl
popa
ds
cmp
cs
pop
sub
inc
or
ror
sbb
popf
movsl
xor
or
jno
ja
int3
mov
add
arpl
in
lea
jmp
test
loope
adc
hlt
cwtl
ss
std
add
push
push
ja
jb
mov
scas
je
fsubr
insb
rcrb
mov
jae
push
stc
rcr
sub
movsl
and
lds
addb
out
xor
add
pusha
into
imul
pop
fildl
mov
lret
inc
test
imul
jbe
xorb
pop
je
fs
xor
cmp
sub
out
sub
mov
push
in
or
in
cmc
push
xchg
rcl
cs
push
out
and
stos
adc
push
dec
insb
test
add
in
shrl
push
dec
out
stos
and
inc
push
ss
test
push
test
je
subb
insb
pop
mov
mov
ret
or
fdiv
testl
shll
add
repz
xchg
fs
cli
nop
cmpsb
and
jae
cmpsb
es
sbb
adc
push
movsb
xor
adc
xor
inc
xchg
in
sahf
cld
jle
mov
dec
out
and
push
lods
pop
fmull
cmp
jae
cmp
sbb
leave
mov
pop
mov
adc
mov
iret
insb
shll
mov
data16
imul
outsb
data16
shll
ret
daa
xchg
pusha
in
inc
and
mov
and
push
push
sbb
fidivs
lock
sbb
inc
cld
dec
push
pop
lcall
push
add
sub
pop
and
jo
movsl
jb
ja
lahf
pop
addl
push
rcll
fisttpl
sub
fwait
add
sti
and
out
cmpl
rclb
mov
cmp
fsubrl
jle
mov
ja
sbb
cmp
or
pop
xchg
jmp
adc
test
mov
clc
xlat
mov
stos
mov
adc
mov
push
imul
ljmp
fisubrs
scas
mov
lea
and
xor
jmp
sti
pop
pop
xor
inc
and
or
fs
push
stc
rcrb
cwtl
adc
ret
ds
sub
xchg
jbe
or
and
xor
push
cmpsl
pushf
add
add
sbb
dec
cmp
or
repz
push
sub
movsl
stc
enter
call
cli
notb
jmp
jo
or
dec
cmp
inc
and
shrb
mov
jge
arpl
push
xchg
nop
jae
loope
subb
aam
sbb
dec
inc
sbb
push
aad
xor
xor
add
mov
sti
inc
sub
lret
jecxz
and
mov
xor
adc
sub
pusha
xor
cmp
xchg
xchg
or
xchg
push
test
movsb
ficompl
or
mov
popa
jle
push
test
inc
inc
icebp
xor
scas
mov
or
iret
inc
pop
pushf
sub
js
or
imulb
push
pop
lods
xor
pop
jmp
pop
ficomps
sahf
mov
outsb
cs
inc
inc
xchg
cmpsl
add
jecxz
gs
in
repnz
jmp
ret
xchg
cld
je
cld
outsb
dec
jb
lret
dec
add
mov
lea
push
insw
mov
adc
xchg
pop
int
inc
dec
cmp
sbb
push
add
jmp
mov
orb
cs
xor
gs
xchg
sub
mov
dec
out
aad
rorl
loope
jg
push
pop
sub
cmp
hlt
mov
mov
inc
pop
push
std
cmc
sbb
jmp
in
ret
lea
int
inc
jp
mov
inc
push
stc
pop
mov
mov
mov
push
iret
add
adc
cld
fst
dec
push
xor
lret
and
and
jnp
add
jp
hlt
js
mov
xchg
in
in
subl
or
jb
fmuls
popf
test
push
test
mov
cld
lcall
shl
inc
sbbl
pop
arpl
sti
imulb
test
add
pop
movsl
js
mov
into
repz
add
or
cmpb
daa
ret
mov
xor
cmp
call
aad
test
mov
filds
push
andl
or
jmp
in
int3
loopne
cli
xchg
adc
cmp
jge
movsl
lods
jp
mov
mov
divl
adc
dec
dec
mov
pop
cmp
and
mov
sbbb
popf
xchg
in
test
pop
lret
cmpxchg
mov
mov
enter
pop
xchg
mov
push
cltd
mov
push
dec
lds
stos
and
inc
mov
add
push
adc
idiv
enter
sbb
or
dec
xlat
imul
jnp
out
fchs
mov
test
repnz
xor
cmpb
orb
test
mov
push
pop
xchg
add
adc
fwait
psrlw
xor
push
scas
mov
xchg
notb
lods
and
data16
mov
mov
dec
jmp
hlt
incb
xlat
and
ficoms
mov
test
sahf
in
fwait
xchg
inc
repnz
test
jp
fisubs
sbb
xchg
pop
les
mov
in
cltd
or
mov
xor
push
xchg
popf
adc
xchg
dec
mov
pop
cmp
push
or
inc
andb
lock
int
sub
clc
ja
xor
loopne
jl
loope
inc
cmp
and
pop
fwait
sbb
icebp
daa
xlat
xor
lret
insl
pop
mov
sub
xor
dec
mov
mov
das
imul
iret
jb
and
lods
scas
test
mov
icebp
inc
and
add
fistps
sub
lds
movb
pop
xchg
pop
mov
xchg
or
shlb
xchg
mov
or
lds
jo
addr16
jo
psubw
mov
cmp
daa
mov
aam
and
cltd
add
or
enter
cmp
cmp
mov
pop
inc
push
adc
jne
popf
xor
push
pushw
jecxz
push
jge
test
and
jno
push
xlat
jo
inc
jns
test
or
loope
out
loop
ljmp
cltd
mov
mov
push
and
dec
xlat
pushl
xchg
ljmp
sbb
sahf
adc
xor
mov
shlb
bound
mov
cmp
adc
sbb
sti
cld
xor
clc
or
lret
mov
mov
out
addb
cmovne
stos
mov
xchg
cmp
mov
push
adc
rolb
lds
pusha
mov
clc
imul
insl
std
mov
repz
pop
dec
lock
mov
mov
movsb
adc
dec
add
jl
jbe
in
cmpsb
xorb
pinsrw
mov
ja
daa
scas
jno,pt
dec
push
cmp
or
pushf
dec
sbb
cmc
outsb
int
push
cs
jle
jne
push
test
test
aas
fwait
rcr
and
sarb
mov
jmp
sub
push
clc
lret
js
xchg
ret
add
hlt
div
sub
mov
cmpsl
sub
jge
jno
push
mov
je
imul
and
cmpsl
fdivl
pop
rorb
std
cltd
and
xor
dec
gs
cmp
push
and
outsb
into
pop
out
sub
or
xchg
or
hlt
xor
cmc
push
out
mov
push
fs
scas
sub
cwtl
cmp
out
jmp
pushf
or
fsubrl
aam
mov
pushf
mov
pop
mov
loopne
movsl
aas
jmp
gs
xor
hlt
sub
push
mov
or
lahf
adc
loop
dec
out
and
jno
shll
mov
push
and
pop
inc
push
loope
imul
mov
or
push
pop
jno
cmp
adc
cmp
lock
cmp
sbb
inc
mov
and
mov
inc
pop
pop
nop
jmp
or
into
cmp
and
subps
ss
push
adc
dec
and
pop
adc
mov
mov
popf
and
mov
rcrl
or
scas
data16
ret
je
mov
icebp
pop
js
es
adc
lret
push
push
push
sbb
xchg
pop
xchg
mov
jb
pop
sbb
xor
ja
inc
jecxz
cs
jae
sbb
scas
mov
test
fsubrl
iret
sbb
clc
test
jnp
insl
mov
into
popf
jge
dec
push
loopne
cmp
sbb
mov
and
mov
sub
and
add
dec
sti
es
mov
add
dec
loopne
xchg
xor
das
dec
add
ljmp
lock
or
mov
sbb
lods
pop
aaa
test
popa
pop
lcall
mov
bound
sbb
stos
repnz
pop
stc
mov
lea
push
pop
jnp
nop
sub
imul
mov
cwtl
inc
imul
cmp
cmp
cmp
cmpsb
add
nop
inc
sub
in
shl
cltd
mov
shl
mov
popf
daa
jecxz
cmc
jmp
mov
or
pop
mov
inc
aas
in
and
incb
adc
cvtps2pi
adc
cmp
aas
xchg
pop
sahf
jo
js
aas
frstor
mov
sar
xor
dec
mov
inc
aas
aaa
add
xor
in
dec
xchg
mov
incb
adc
fisubs
push
repz
pop
xchg
or
inc
or
or
cmp
sub
mov
mov
lods
mulb
mov
cltd
push
mov
adc
mov
lahf
std
shrb
cmp
popa
movsl
stc
in
ss
ja
inc
pop
sub
fisubrs
movsl
xchg
mov
mov
out
insl
cmp
sub
jae
outsb
jmp
out
repnz
cld
inc
jmp
imul
lock
mov
and
jg
adc
mov
enter
daa
xlat
lret
mov
inc
jge
jo
cmc
mov
xor
mov
test
dec
sbb
push
std
pop
xchg
pop
test
mov
dec
je
and
dec
sbb
jecxz
pop
sbb
dec
rol
xor
mov
mov
xor
add
das
int3
jl
addl
push
outsb
int3
dec
jne
mov
rcrb
ljmp
cmp
cmc
xor
gs
aaa
fcmovnbe
cmp
pop
ja
pop
fwait
aad
and
int
jp
cmp
inc
stc
pop
imul
or
cmpsb
jns
xor
mov
pop
push
mov
subb
sahf
and
hlt
stc
scas
je
das
or
movsl
out
mov
data16
stos
mov
mov
cwtl
ja
test
pop
jne
fsubr
or
das
or
xor
xchg
dec
mov
cmp
sub
pop
pop
or
jae
push
in
dec
mov
sub
out
dec
push
mov
jbe
push
adc
test
in
daa
stc
stos
dec
mov
cwtl
cmpsb
repz
jae
push
lret
sahf
jmp
xchg
xchg
cmp
sub
or
mov
add
ljmp
xchg
jno
rcr
test
insb
xchg
xlat
xor
pop
in
xchg
and
or
std
sub
ret
dec
mov
cli
imul
mov
ja
je
push
xchg
dec
das
lret
cs
or
push
mov
sarl
dec
stos
stos
and
push
mov
inc
add
sub
mov
aad
aas
enter
cli
shrl
repz
cmp
fisttpl
jge
fdivs
pushw
test
ret
dec
cs
aas
jl
nop
inc
pop
repz
in
iret
pop
fists
gs
or
loop
inc
lock
fnsave
repz
aad
pusha
psadbw
mov
mov
shll
dec
xor
dec
mov
push
stos
inc
cmc
es
fwait
gs
add
add
ret
arpl
adcb
xchg
jge
cmpsl
divl
daa
cmp
mov
mov
loope
jne
mov
inc
cs
mov
cli
push
jg
mov
fs
sti
mov
ja
pop
rcrb
inc
icebp
out
mov
pop
fs
sub
enter
fs
dec
std
arpl
push
cwtl
ss
mov
pop
lea
mov
push
xor
enter
xor
or
jbe
jns
rcrb
imul
push
jle
repz
lret
outsb
push
lods
out
xchg
mov
sarb
push
mov
push
repz
add
cmp
subb
mov
push
add
std
data16
lret
push
icebp
pop
insl
shl
aad
popa
in
pop
sbb
inc
push
enter
mov
add
fwait
sahf
lcall
mov
xor
mov
inc
enter
cmpsl
sbbl
shll
pusha
jne
mov
lods
jp
fstp
cmc
xor
cli
mov
clc
fsubrs
hlt
jne
rclb
mov
dec
pop
lea
push
jbe
lock
cld
pop
inc
cmp
bound
sbbl
subl
pusha
sbb
outsb
mov
imul
mov
dec
push
or
dec
cmpb
cmp
inc
repnz
sbb
sarl
sahf
cmp
push
cli
jo
add
call
dec
sbb
mulb
mov
xchg
dec
clc
or
mov
push
jb
fisubs
leave
xchg
cwtl
stos
lods
mov
xchg
sub
or
jne
vmwrite
mov
mov
mov
xor
ds
lret
mov
add
out
sub
mov
push
clc
das
cmpb
dec
fdivs
sub
mov
push
in
push
inc
jmp
xor
mov
xor
rclb
mov
push
push
inc
loopne
out
mov
sarl
or
cmpsl
jg
mov
hlt
ss
and
mov
or
xchg
add
push
out
jl
cmpsl
mov
sub
sbb
mov
cmpsb
pop
ret
or
pop
jo
sbb
movsl
pop
mov
out
adc
push
stos
or
sbb
shrb
loopne
mov
lcall
int3
mov
jbe
sub
rclw
adc
fisubs
lret
sub
push
dec
jl
jp
test
sarb
mov
pop
push
xchg
add
cmp
sub
fidivl
sub
and
arpl
daa
xchg
inc
lahf
and
adc
out
sbb
ss
rcl
push
mov
je
dec
sahf
ret
inc
mov
jo
mov
cli
out
pop
icebp
loopne
sbb
lcall
sti
cmpsl
cmp
and
loopne
pop
sbb
or
mov
inc
or
xchg
push
sarl
ret
lcall
lods
xchg
ffreep
jno
and
push
xchg
jb
push
ja
xchg
lcall
cs
xchg
mov
pop
xchg
pop
rorb
add
adc
xchg
pop
mov
addr16
and
outsb
mov
push
shrb
mov
pop
cmp
stc
pusha
mov
aas
cmp
pusha
fcom
sti
pushf
repz
and
pop
test
cmp
icebp
into
repnz
clc
outsb
fidivl
pop
xor
mov
jnp
xor
and
jns
dec
adc
xor
cltd
ds
sub
and
sub
jmp
push
int
mov
jns
imul
ja
adc
loopne
inc
aam
mov
mov
push
lcall
adc
fisubl
jmp
popl
push
pushf
or
mov
imul
adc
pop
xchg
sbb
inc
sub
aam
or
cs
push
dec
xor
inc
push
test
mov
rorl
ret
pop
xor
dec
mov
ljmp
jnp
outsb
inc
cmp
push
xor
xchg
daa
push
xor
xchg
jnp
mov
push
fsubs
sub
xor
cli
jmp
aad
aas
jl
insl
jbe
outsb
dec
loop
rcrl
inc
lods
fcmovb
mov
stos
add
dec
push
cs
xchg
adcb
and
addr16
xchg
sbb
sbb
lret
call
loopne
cmp
mov
ss
lds
or
lock
jge
incl
mov
sbb
push
fnstsw
daa
adc
xor
ja
jbe
sub
test
sbbl
jnp
stc
lret
pop
add
dec
aaa
dec
out
adc
sbb
jge
and
loop
and
ret
lret
mull
fistpl
adc
and
inc
in
cld
movsl
xor
dec
ja
subl
pop
fimuls
xor
inc
jbe
cmpsb
pop
nop
cmp
push
mov
inc
and
mov
shr
cld
mov
xor
adc
sub
inc
dec
adc
icebp
in
mov
dec
dec
and
push
fldl
ret
rorb
add
js
xchg
inc
icebp
jae
data16
xor
outsl
gs
inc
adc
xor
psubsw
cld
mov
add
pop
mov
aad
fdivp
add
push
mov
mov
push
pop
jno
xor
add
jg
sbb
jge
test
add
daa
std
loope
movsb
sbb
sbb
push
or
add
int
mov
loop
pop
push
test
testb
mov
lock
dec
inc
adc
pop
mov
adc
pop
xchg
leave
xor
out
lret
mov
xchg
or
mov
rol
cmp
sbbl
lret
scas
push
add
or
repz
mov
sar
mov
sbb
imul
andb
mov
in
push
rclw
adc
jl
jmp
mull
jae,pt
xchg
daa
lret
out
shlb
push
and
andb
add
fcompl
cli
jl
fs
xchg
aas
xor
daa
push
aam
daa
out
pushf
lock
mov
rcr
rcrb
pop
push
mov
jecxz
aam
int
mov
cltd
pop
mov
lret
sub
aas
inc
xchg
nop
dec
comiss
psllq
jecxz
sub
test
adc
stc
nop
sub
loopne
xchg
stos
loop
add
jns
jmp
xchg
enter
push
sbb
cmp
fimull
int3
sti
enter
mov
or
mov
cmpsb
jecxz
pop
cmc
mov
sbb
adc
cmp
xchg
fsub
xchg
lret
mov
add
mov
aad
sbb
mov
enter
scas
adc
jbe
enter
cmc
pop
push
ficoms
loop
pop
cmp
and
sub
mov
xlat
or
ffreep
dec
mov
mov
push
dec
mov
pop
loope
adc
mov
mov
or
mov
clc
scas
dec
pop
dec
stos
cli
jne
push
cmp
pop
sub
mov
inc
cltd
jle
cmpsb
mov
add
cmp
pop
std
pop
add
insl
mov
outsl
push
adc
inc
dec
adc
dec
lock
out
jmp
cmp
xchg
pop
mov
arpl
clc
fnstenv
dec
mov
and
sbb
push
popa
ja
lds
gs
leave
ds
mov
cmp
sbb
insl
add
inc
lahf
mov
jecxz
pop
mov
mov
jnp
push
testb
mov
xchg
jbe
fstps
add
js
xlat
lds
xor
repnz
and
mov
mov
mov
loope
sub
cmp
lods
mov
push
leave
add
out
scas
incb
mov
mov
cmc
sub
lret
and
xor
addb
jmp
mov
dec
xor
xchg
cmp
adc
cltd
sbb
mov
ficoms
popf
stos
ret
jmp
and
arpl
ficoml
or
or
movsb
cmpsl
rcll
aaa
js
mov
inc
sbbb
lahf
or
sbb
lea
outsb
sbb
jb
out
iret
je
mov
aad
mov
test
std
fisubl
or
inc
sub
jae
ss
lods
adc
and
and
lds
mov
pop
or
pop
pop
mov
sub
dec
jl
pusha
insl
mov
mov
adc
addr16
outsb
ss
sbb
xlat
sub
xor
jne
mov
or
ficoml
jbe
cwtl
loopne
cmpsb
jno
mov
cmp
push
in
pop
lahf
popa
imul
fildl
imul
push
in
mov
lds
fisubrl
and
aas
ss
push
inc
divb
pop
jp
inc
and
fldt
repnz
mov
jg
leave
ret
mov
je
outsl
jno
jmp
jb
icebp
dec
stos
in
and
mov
sub
fs
jnp
mov
neg
or
and
fidivrl
dec
jl
repnz
add
mov
push
inc
sub
ja
call
jmp
mov
xor
lods
imul
add
notl
push
jbe
lahf
div
adc
daa
popa
or
inc
popf
pop
notl
outsl
inc
adc
fisubs
aad
inc
hlt
cmp
lahf
mov
pop
or
push
cmp
iret
clc
dec
cmp
sahf
pop
jl
sub
mov
inc
mov
jnp
movsb
pop
fcoms
call
mov
lret
in
sbb
test
push
jno
cmp
cmp
cli
lret
scas
xchg
loope
jb
insl
jecxz
ret
outsb
add
pop
xchg
push
xchg
dec
lods
adc
mov
sub
or
sar
popf
adc
mov
push
pop
and
pavgw
push
in
lds
cmc
popf
imul
jno
push
mov
imul
xor
mov
push
call
pop
jle
dec
xchg
lods
dec
mov
nop
pop
push
les
xchg
pop
push
mov
cmpsl
leave
aad
mov
push
sub
jb
rclb
stc
or
mov
jae
cmc
inc
inc
iret
jns
outsb
shll
pop
aaa
or
sahf
mov
jnp
xchg
xorl
test
mov
lret
rolb
ds
push
rcl
out
jbe
daa
test
push
bound
adc
dec
mov
or
outsb
int3
popl
xchg
xchg
icebp
inc
leave
mov
push
mov
pop
mov
aam
mov
sbb
or
or
adc
jg
out
sub
mov
mov
mov
insl
sub
xor
lods
dec
in
push
or
cmpsb
shlb
cmp
mov
pop
bnd
test
mov
or
or
pop
cmp
mov
out
mov
cltd
ss
adc
out
lret
cmp
shll
js
fstpt
cmp
mov
jae
jb,pn
mov
sti
or
shll
faddl
push
sub
jle
in
icebp
rcll
jbe
test
sbb
inc
xchg
stos
xor
or
xor
fs
leave
loop
test
shrl
andl
add
dec
pop
pop
cmp
sub
jbe
scas
das
mov
mov
cmp
adc
cmp
cld
aaa
inc
jnp
das
loope
add
inc
cmpsl
sbb
mov
xchg
dec
and
call
adc
lods
xor
iret
subb
adc
popa
lds
ss
lahf
pusha
int
loope
stos
das
or
cmp
movsb
sub
lret
cmpsl
pop
xchg
dec
or
cmpsl
jns
repnz
aas
inc
mov
cmp
xlat
iret
pop
clc
out
or
jl
fiadds
loope
push
clc
sarb
rcrb
repz
roll
adc
fcompl
subb
xchg
cmp
ss
xchg
nop
cmp
lahf
dec
mov
movsb
and
xchg
test
loopne
mov
bound
adc
inc
ret
rolb
loop
xchg
movsb
stos
adc
dec
inc
add
cmp
mov
imul
addb
pop
or
loope
outsl
testb
mov
lds
mov
adc
int
push
xchg
pop
jbe
pusha
pop
addb
std
and
lcall
cmpsb
jecxz
mov
xor
cli
cld
ja
xchg
push
mov
adc
in
lock
lcall
jbe
push
dec
add
repz
xchg
les
cwtl
pop
aad
out
add
outsl
mov
ss
jne
adc
in
gs
fildll
and
pusha
aaa
cmp
push
push
mov
jecxz
xor
jns
mov
mov
gs
fnstsw
mov
fsubrs
stc
sti
mov
jl
pop
mov
sub
cmp
xor
les
jno
ljmp
test
ret
inc
mov
lcall
nop
loopne
and
repnz
lds
mov
xor
in
fdivrl
movsb
mov
push
push
xchg
movsb
xchg
adc
dec
in
repnz
lds
sbb
out
fadds
imul
outsl
mov
add
popl
pop
bound
cmpb
and
stos
xor
or
ficomps
xchg
adc
lds
lods
xchg
xchg
mov
jl
mov
xchg
pop
stc
mov
movsb
push
xchg
hlt
mov
dec
sub
aaa
cmpps
xchg
dec
add
inc
adc
outsb
xor
mov
and
das
lods
lea
sarl
iret
xor
and
mov
rol
mov
push
test
scas
add
xchg
leave
or
subb
loop
mov
jg
stos
fwait
dec
sbb
push
jae
adc
cld
push
movsb
lock
call
lock
mov
xchg
sub
push
xor
mov
sar
xchg
cmp
jp
adc
sbb
jge
adc
cmpsb
mov
push
mov
insl
out
lods
dec
adc
pop
and
sarb
xchg
mov
aas
mov
xchg
inc
cmpsb
aam
pop
das
push
or
test
cli
push
cmp
repz
popa
and
jmp
and
xchg
mov
add
cmp
xor
and
ffree
push
mov
and
fimuls
stos
xor
inc
gs
subb
push
push
pop
push
sbb
out
inc
aas
push
clc
sti
roll
fsubrs
push
fdivrs
or
loopne
jg
dec
js
xchg
jl
rorb
loope
inc
mov
jb
inc
pop
scas
call
mov
daa
jns
loope
push
hlt
aaa
sbb
nop
xor
pop
setne
add
push
arpl
loop
loopne
sbbb
adc
and
xchg
mov
jo
or
das
adc
in
pop
inc
sub
jae
lcall
cld
adc
fcompl
mov
jecxz
loope
add
jl
dec
enter
sti
or
into
mov
adc
push
loop
mov
fdivl
dec
pop
sub
or
orb
jle
loope
daa
inc
mov
dec
push
in
pushf
or
dec
ljmp
shrl
sbb
add
cld
loop
fisubrl
add
push
push
push
in
insl
lds
jecxz
ficompl
cmp
cmpsl
mov
push
rcll
cmpsb
inc
cmpsb
jmp
sahf
push
mov
scas
jecxz
xor
loopne
out
push
in
repz
fs
and
shll
popa
idivl
pop
jmp
xchg
out
push
mov
push
div
push
dec
hlt
and
jmp
lahf
pop
adc
mov
add
shll
icebp
dec
jb
rcl
xchg
mov
pop
fstp
xor
and
les
orb
in
and
or
sub
xchg
xlat
ljmp
dec
sti
and
sub
fs
loop
scas
cmp
out
mov
mov
sub
sahf
ret
fcmovbe
or
mov
sub
push
lods
or
jp
out
test
jnp
into
pop
fiaddl
in
dec
pop
int3
or
fdivl
lds
sub
cwtl
insl
xchg
adc
scas
xor
mov
inc
shll
push
shrl
cmp
movsb
add
call
mov
rorl
and
push
mov
mov
shrb
je
mov
loope
jecxz
sub
sti
inc
push
je
mov
add
aad
sub
inc
sarl
lret
in
sub
fwait
rcr
outsb
xchg
fisubrs
in
pushf
sbb
movsl
pushf
popa
movsl
mov
sbb
adc
imul
or
push
mov
std
lods
mov
jle
xchg
pop
sub
jnp
inc
fildll
pop
sub
mov
adcl
push
in
cmpsl
gs
cwtl
and
shll
das
and
and
or
ja
fstl
adcb
sbb
xor
stos
jo
or
pop
mov
mov
gs
shr
imul
dec
mov
add
aam
push
and
imul
pop
in
and
pop
lea
pop
loope
fcmove
cmp
pusha
scas
mov
dec
sub
push
int3
ret
out
out
adc
dec
jae
adc
loopne
int
pop
push
pop
insb
aas
xor
pusha
xor
push
push
inc
xor
mov
sbb
push
addr16
in
cmp
push
pop
aas
jb
sub
roll
bound
add
cmp
xlat
shr
xchg
fdivr
cld
jno,pn
sbb
push
in
dec
mov
stos
mov
inc
mov
xor
in
lods
jge
in
xchg
out
xor
adc
lods
addr16
adc
mov
jecxz
push
sbb
je
shl
das
jno
stos
lcall
setns
jecxz
mov
mov
in
leave
fimuls
sub
and
sbb
cmp
sbb
xchg
into
and
jb
or
jge
std
fcomi
jg
loop
push
inc
stos
and
pop
mov
xor
aaa
jb
jne
push
add
test
scas
nop
lret
pop
fucomip
pop
jecxz
push
aas
rolb
scas
in
pop
fstl
push
mov
xor
ja
sti
int3
jne
fcmovnb
xor
adc
sub
sub
add
lock
dec
sahf
xchg
out
fmuls
sbb
test
aam
test
test
push
ss
nop
push
mov
aaa
shlb
jle
pop
fwait
out
inc
mov
push
push
mov
and
mov
arpl
jno
mov
jb
leave
insb
addb
and
andb
stos
mov
shll
cmp
xchg
push
pop
shll
fbld
movsl
je
jge
xor
aam
pop
mov
rcl
loopne
cmp
je
test
adc
hlt
sbbb
cmp
adc
ror
loope
or
inc
xchg
cmp
insl
aas
add
testb
loope
mov
inc
add
pop
int
aad
mov
sbb
in
inc
and
test
dec
test
pusha
jl
jmp
aaa
adc
sub
rorb
xor
incb
mov
xlat
sbb
enter
xlat
and
lea
pusha
cli
add
ret
in
aas
scas
lods
inc
lods
pop
push
out
and
jne
out
push
ljmp
mov
bound
jo
mov
xchg
outsl
test
or
sub
inc
cmpsl
inc
mov
cmp
sub
sbb
pop
jge
and
mov
ds
and
sub
es
push
add
lods
inc
stos
mov
ds
addr16
mov
decl
into
adc
xor
out
jae
cmp
push
mov
test
mov
inc
sub
ss
fwait
cmovns
cmc
pushf
pusha
int
mov
cltd
cmp
cmp
es
add
xor
mov
cmc
lods
test
pushf
fimuls
xchg
sub
in
mov
dec
jne
sub
iret
mov
negl
js
xchg
mov
addr16
jg
xchg
xchg
je
faddl
jg
push
sub
lea
add
call
fsub
pop
rorb
pusha
mov
adc
dec
icebp
orl
and
fisttpl
dec
add
ja
inc
sub
push
mov
cmp
sub
mov
test
je
sub
jo
iret
mov
int3
call
fnstcw
mov
in
and
pushf
jecxz
xchg
add
jmp
push
ljmp
rcll
cmc
push
clc
lock
in
lods
fprem
loope
imul
sub
cld
or
movsl
push
push
clc
bnd
stos
aas
push
push
imul
std
fimull
aad
pop
jbe
push
jmp
inc
push
aas
pushl
push
pusha
xchg
pop
inc
rorl
dec
xlat
cmc
pop
jmp
xchg
xchg
add
cmp
lods
popa
clc
sbb
jo
cli
sbb
jle
lret
mov
rcrl
mov
pushf
mov
inc
sti
test
mov
je
movb
push
icebp
and
stc
mov
int
sbb
mov
xor
fdivrl
pop
in
mov
jnp
fisubs
clc
jp
xor
repz
jp
inc
xor
xchg
cwtl
adc
das
aaa
add
jae
push
jmp
pop
mov
sub
cmpsl
push
mov
scas
inc
push
movsl
pop
mov
add
test
loope
movswl
sub
enter
xchg
mov
fwait
lahf
pop
in
or
push
and
adc
data16
inc
ljmp
mov
mov
jno
lea
test
mov
sub
xchg
shr
test
ret
push
xorb
faddl
push
inc
gs
push
xchg
icebp
pushf
mov
mov
sub
push
jb
and
and
out
movsb
mov
sbb
mov
xchg
sub
xor
mov
dec
aad
test
push
mov
jno
jbe
ret
inc
loope
or
inc
mov
sarb
and
sub
sub
cmpsl
xor
aad
movsl
jo
lcall
dec
dec
pop
sub
push
aas
sbb
aam
cmp
sbb
mov
inc
cmpsb
mov
fcmovb
stc
je
leave
icebp
repz
loope
sbb
xor
lds
ret
inc
or
add
adc
sub
call
scas
xchg
mov
pop
add
call
fsubs
jmp
xchg
jo
mov
mov
dec
iret
and
or
mul
pop
adc
xchg
movsl
mul
mov
and
loop
pop
push
ss
xor
stc
inc
mov
push
loope
iret
insb
cld
xchg
mov
call
sbb
dec
fcomp
adcb
lret
test
sub
dec
sub
fadds
loopne
shrl
push
outsb
jg
repz
pushf
or
xor
pop
sub
in
loop
mov
fidivrs
negl
sub
cmp
mov
and
pop
mov
add
subl
out
mov
movsl
mov
out
sbb
inc
les
pop
jl
jecxz
jmp
lds
pop
push
mov
sahf
incl
xchg
jbe
aam
loopne
cmc
mov
int
mov
add
sub
stos
lods
sbb
bound
int3
fcmovu
nop
sub
sub
and
cld
call
sub
inc
xor
add
lock
pop
ja
popa
inc
adc
cwtl
orb
jae
idivl
fsubs
adc
mov
add
fisubs
add
in
sub
dec
push
sub
mov
fiadds
mov
std
cmp
add
insl
jecxz
jg
ljmp
adc
jae
test
xchg
aaa
paddsb
mov
xchg
add
jge
jne
sarb
dec
mov
add
cmc
cmc
sbb
push
adc
adc
shll
fidivs
jl
shl
and
push
out
out
es
loop
insb
jns
fisubl
shrl
inc
sub
or
iret
cmp
mov
or
rcll
and
stos
jns
movsb
out
mov
sub
orb
mov
fistpl
add
test
xor
leave
stos
add
inc
repz
and
lret
xchg
xor
jnp
push
push
sahf
ret
mov
ret
mov
xor
or
lret
xchg
icebp
push
xor
aas
pop
adc
mov
jge
sub
xchg
adc
ja
pusha
bound
rcrb
in
stos
push
movsb
mov
dec
movb
push
std
pop
inc
cs
in
cltd
add
mov
or
js
lahf
or
xor
inc
ss
insl
xor
jg
inc
xchg
push
and
imul
mov
test
clc
inc
clc
sbb
cmpsb
mov
fistps
sbb
xor
jl
pop
mov
mov
lods
mov
pop
mov
mov
and
and
testl
ljmp
cmp
repnz
sub
push
notl
xor
jp
test
dec
or
inc
pop
je
loopne
add
sbb
insl
push
fmuls
mov
xchg
jl
cmp
cld
add
and
sub
aaa
adc
sbb
pop
pop
and
int3
inc
movsb
cmp
and
jb
push
loopne
pop
clc
jecxz
lahf
arpl
ss
fildl
push
pop
jnp
push
dec
mov
and
jne
mov
je
add
sti
xor
inc
inc
add
hlt
sub
xor
push
imul
inc
inc
xchg
popl
sub
int3
lret
aaa
shll
popa
pop
push
push
je
sub
cmpb
dec
add
pop
fcomps
es
imul
pop
mov
or
fwait
cmp
loope
cmp
dec
ss
inc
pop
mov
mov
or
or
mov
jo
js
out
sub
out
loop
fcoml
mov
int3
sbb
in
in
cmc
movsl
or
cmp
sub
mov
dec
fdivrp
jp
in
ret
dec
inc
xchg
and
dec
pop
cwtl
jecxz
rorl
sub
jae
xchg
cmpsb
ror
mov
icebp
pop
and
xor
and
test
fs
jecxz
push
mulb
inc
dec
dec
add
mov
mov
sahf
and
pop
or
sub
clc
movsb
leave
cs
pop
notl
jp
xchg
repnz
push
add
xchg
pushf
push
std
xor
cltd
data16
or
or
int3
or
in
inc
dec
pop
mov
adc
add
push
imul
stos
scas
or
or
xchg
lock
xor
ret
cmpsb
movsb
pop
popa
mov
cmpsb
add
loop
mov
add
mov
into
ret
stc
lods
mov
or
in
push
rorl
sub
monitorx
test
cmp
scas
jnp
fwait
xchg
push
je
xor
mov
cld
cmpsl
push
out
and
fsubrs
xor
andl
jnp
inc
cli
in
shl
adc
and
pop
and
and
adc
push
pop
pop
sbb
and
dec
sbb
push
fmull
sti
mov
mov
sti
out
test
fistps
out
jnp
aad
rcrb
xlat
pop
outsl
cmp
jle
inc
adc
call
sbb
xor
jge
push
inc
inc
pop
cld
test
jmp
in
lret
mov
xor
fcompl
push
and
imul
out
mov
cmpsb
in
push
and
mov
jl
js
loop
scas
or
or
dec
sbb
sub
mov
mov
push
push
outsb
shll
xor
push
sbb
or
pop
fstpl
pop
inc
mov
sbb
mov
push
call
hlt
jecxz
or
sbb
outsb
pusha
in
mov
dec
adc
testb
cmp
add
pop
mov
ja
int3
mov
cwtl
icebp
fnsave
or
sub
sub
mov
fmul
aaa
add
adc
stos
mov
stc
cmp
gs
mov
sub
mov
cwtl
outsb
inc
mov
dec
sbb
xchg
push
sbb
sub
cli
cmp
je
dec
test
repz
pusha
shll
hlt
roll
mov
mov
je
mulb
pop
mov
js
dec
pusha
push
cmpsl
mov
addb
lret
xor
dec
inc
xchg
ljmp
lahf
mov
inc
fisttpl
iret
inc
movsb
mov
cmc
cs
jnp
jno
inc
cmp
adc
and
mov
mov
shlb
sahf
and
dec
idivb
insl
ja
pop
mov
adc
in
add
popf
cli
cs
inc
pop
repz
test
push
into
adc
inc
mov
testl
push
xor
dec
jae
shll
loopne
jne
mov
sub
arpl
mov
in
xor
jp
ds
leave
aad
or
push
aaa
dec
cwtl
cld
xor
cli
lcall
push
out
ret
out
hlt
cmpsb
in
cltd
in
xor
pop
lea
sub
lcall
ror
in
sbb
mov
sub
xor
cmp
fs
mov
inc
test
mov
and
ljmp
bsr
fwait
sbb
test
pop
je
add
int3
stos
push
and
mov
sub
rorl
sbb
mov
add
dec
mov
or
ror
or
incl
mov
push
xchg
dec
pop
lock
scas
shll
cmpsl
shlb
je
popf
jae
mov
pop
gs
pop
and
inc
movsb
inc
data16
fmuls
inc
loopne
dec
mov
mov
sub
lea
inc
leave
push
inc
out
jmp
jb
add
fidivl
xor
sub
xchg
repnz
add
or
mov
insl
lret
negl
mov
fidivrl
addr16
je
or
and
aaa
jecxz
and
jno
stos
ss
dec
test
movsl
adc
fnstenv
int3
outsl
jecxz
pop
xlat
inc
imul
jae
shll
mov
or
xchg
pop
scas
adcl
lret
xor
add
cmpl
push
dec
popf
ffreep
out
mov
jo
push
insb
rclb
lds
orb
icebp
pushf
int
imul
pop
adc
push
pop
jb
aas
dec
gs
fsubp
stc
mov
loope
add
repnz
push
dec
adc
call
into
ss
mov
fwait
stc
sub
popa
or
push
mov
pop
jno
xchg
push
rcll
lea
sahf
mov
jo
adc
mov
inc
inc
mov
jmp
mov
push
xchg
sbb
clc
roll
insb
rcrl
push
inc
add
xor
pop
add
lcall
in
idiv
ss
pusha
test
lcall
mov
jbe
push
fmull
into
mov
ret
jge
and
or
inc
in
sbb
mov
or
push
pop
mov
daa
jmp
add
fcoms
add
push
dec
sub
insl
loop
jnp
dec
iret
inc
sbb
push
mov
aas
ss
jge
loopne
ret
pop
sbb
lret
sub
ss
jmp
or
aad
dec
nop
push
lret
xchg
out
in
jmp
mov
or
stos
add
gs
add
cmp
mov
xchg
test
and
adc
push
popa
shrl
orl
push
mov
enter
loope
xchg
imul
mov
outsb
mov
dec
push
out
bound
add
pop
jne
or
movsb
jno
shlb
jecxz
fistpl
bound
insb
jle
mov
push
dec
pop
dec
in
push
mov
dec
xor
mov
gs
inc
ret
andb
xor
mov
nop
sub
sti
movsb
add
ljmp
lret
sti
jo
pop
pop
inc
bswap
stos
shrb
ret
aad
sub
add
pusha
push
push
mov
insb
stos
or
mov
test
iret
inc
push
jae
mov
out
stos
mov
pop
dec
cs
jge
rclb
fildl
bound
push
push
inc
add
in
xchg
movsb
xor
mov
mov
leave
lods
pop
dec
pop
push
add
dec
jmp
inc
inc
sbb
shr
add
sub
pop
repnz
mov
and
repz
push
jns
sub
mov
repz
arpl
xchg
push
mov
pop
arpl
js
int
inc
jp
jno
mov
add
hlt
sarl
pop
repnz
jle
addr16
and
inc
loope
xchg
in
sub
lea
out
scas
sub
adc
push
imul
cs
ret
inc
cs
scas
daa
push
mov
jecxz
bound
and
clc
mov
iret
stc
js
dec
stc
lds
pop
je
ret
and
ja
adc
or
mov
insb
or
xchg
fs
dec
aad
add
dec
ja
faddl
or
sub
xor
pushf
mov
xchg
push
popl
jne
js
jb
lock
out
cmp
lods
jmp
lret
mov
xchg
dec
pop
xor
inc
xchg
lods
movsl
subl
scas
lods
lea
ror
or
outsl
inc
and
push
xor
sbb
fisttps
adc
movsl
clc
shlb
push
dec
lock
jecxz
xor
lock
dec
icebp
test
add
adc
fidivrl
fs
repz
test
les
push
adc
cli
mov
and
sbbl
xchg
js
lods
cltd
addr16
mov
adc
js
nop
jg
gs
lock
fiadds
fptan
sbb
mov
mov
cmp
or
mov
add
mov
adc
je
std
je
cmp
xor
jne
loop
and
aad
adcl
scas
xchg
dec
fcomip
adc
aam
mov
pop
xchg
and
sub
ret
mov
or
jge
mov
sub
mov
cld
sub
sbb
jl
dec
mov
xchg
mov
cs
push
pop
popa
add
jge
sbb
xor
cmp
insl
xchg
stos
sub
in
add
pop
iret
outsb
daa
out
arpl
out
inc
sbbb
pop
add
push
clc
and
push
fwait
jecxz
sbb
outsl
movsl
testl
mov
mov
xorb
jnp
dec
mov
icebp
fwait
jmp
push
cmp
dec
sub
pop
mov
repz
outsw
mov
jb
fsubr
pop
jmp
jecxz
je
in
les
mov
nop
pop
dec
push
adc
cmpsb
inc
dec
sub
dec
sbb
inc
cmpsb
out
out
and
addr16
movb
bound
mov
loop
mov
scas
cwtd
out
xchg
loopne
jge
fdivs
movsl
test
xchg
fwait
aas
insb
sub
sahf
sbb
outsb
and
sub
mov
sbb
fwait
mov
fst
data16
sbb
lods
inc
cmp
fidivs
jo
andl
frstor
cmp
adc
or
and
pushf
das
out
add
push
repz
push
inc
dec
xchg
or
inc
mov
jne
cmp
loope
mov
jmp
add
jmp
or
xchg
clc
jnp
clc
mov
push
xor
sub
inc
and
test
jp
pop
push
loop
jecxz
cmp
mov
stos
cs
or
cmp
xchg
into
loope
cs
mov
pushl
jmp
push
fistpll
xchg
mov
popa
dec
cltd
cltd
dec
or
aad
dec
test
adc
push
sahf
push
sub
pop
push
jbe
movsb
cld
mov
jmp
dec
cmp
imul
dec
dec
mov
xor
ja
mov
stos
inc
fwait
jecxz
mov
leave
or
daa
popa
mov
pop
mov
aas
xchg
lds
pop
ffreep
push
cmp
loop
add
mov
cmpsb
sti
jbe
mov
loop
mov
lds
jg
and
and
inc
cmp
popl
test
adc
les
scas
jns
test
test
mov
cmp
arpl
enter
ret
lret
xchg
and
icebp
fsts
or
in
scas
dec
xchg
loopne
mov
inc
js
push
jnp
shll
or
in
dec
pop
fsubrp
les
and
sub
data16
jle
iret
insb
rcr
dec
ds
rcr
shll
jp
push
cmc
fmul
dec
iret
out
sub
push
inc
jns
into
out
std
mov
jno
imul
mov
inc
sub
rol
and
xchg
loopne
jmp
cmp
push
mov
addr16
shll
arpl
mov
pushf
adc
pop
lock
xor
orb
imul
in
mov
mov
or
rcrb
in
mov
pop
and
aaa
pop
or
add
cltd
test
lea
into
loopne
movsb
inc
cmpsb
push
sti
jmp
cmc
adc
sub
loope
movsb
xchg
cmp
sbb
rorb
cmc
andb
jo
imul
int3
movsb
imul
jmp
mov
jecxz
push
pop
xchg
testb
push
lret
xlat
jp
xchg
ficoml
jne
ds
push
inc
or
nop
popf
jg
xor
mov
mov
aad
into
repnz
movsl
out
push
outsl
jne
inc
add
or
lahf
mov
fwait
mov
mov
mov
mov
les
lods
pop
inc
fwait
inc
in
fmuls
fucomip
fwait
dec
in
fsubrl
pop
jns
inc
adc
mov
ret
imul
mov
xchg
gs
test
fwait
in
imul
aas
and
cmpb
cmpl
js
lock
mov
fcomps
test
adc
push
pop
jle
insl
inc
inc
jns
push
push
mov
addr16
ficoml
jb
addr16
out
sbb
je
adc
and
ret
xchg
pop
push
sub
pop
dec
out
mov
ds
inc
cld
lock
stos
pop
hlt
mov
pop
imul
xchg
mov
pushf
jne
test
cld
aas
pop
add
mov
scas
jno
subl
pop
out
push
out
in
call
inc
in
add
mov
cs
enter
rcr
and
push
xor
push
mov
lods
hlt
clc
lcall
out
xor
mov
and
ffree
xchg
xor
mov
xchg
and
sbb
and
stos
sbb
out
stos
ljmp
inc
mov
in
mov
mov
stos
outsb
xchg
push
sub
dec
mov
popa
add
mov
mov
and
lods
mov
inc
xchg
fimull
mov
pop
shll
jno
sub
fidivs
sbb
cmpsb
adc
add
inc
cmpsb
mov
dec
inc
fcomps
lds
lods
out
decl
and
in
adc
push
push
shll
adc
xchg
and
xchg
mov
out
add
push
repnz
fdivr
add
inc
or
stos
xor
jmp
std
sub
push
mov
fstpl
fadds
cmp
negb
jne
adc
cs
shlb
jle
or
adc
xor
pop
das
inc
sahf
xor
in
aad
aam
jmp
jno
in
pop
mov
xchg
adc
cmpl
mov
cmpsb
adc
mov
dec
ret
aam
inc
add
aad
or
ljmp
repz
rcll
lcall
push
outsb
fwait
lods
mov
push
fldt
dec
test
cmp
push
inc
in
fmul
dec
jmp
mov
pop
push
jns
mov
mov
sahf
mov
testb
mov
xor
xchg
mov
sahf
sub
pop
push
lret
sbb
iret
push
jmp
pop
xor
push
lods
pushf
arpl
push
inc
rcrl
adc
xchg
daa
movsb
test
in
bswap
imul
and
and
nop
jecxz
repnz
cmp
cmp
pop
js
adc
mov
ja
pop
adcl
into
out
loop
jne
out
mov
js
shl
test
mov
pop
movsl
insb
xchg
push
xchg
addr16
cs
pop
inc
loop
jne
push
movsl
nop
test
scas
inc
repnz
and
lock
mov
push
ds
popf
es
jmp
aad
loopne
cmpsb
sub
rorl
sub
outsb
jo
mov
dec
jnp
mov
xor
out
loope
xchg
jo
pop
adc
mov
fucomp
push
mov
sbb
jp
stos
adc
mov
mov
jg
jno
loop
dec
mov
dec
jb
cmp
test
aas
add
add
xor
mov
mov
dec
test
inc
jp
jb
sbb
sti
enter
xor
push
std
mov
pop
sbb
push
add
jg
push
dec
adc
cwtl
je
stos
inc
xchg
xchg
xchg
mov
cmp
mov
cld
pusha
mov
xchg
gs
push
pop
stos
fsubl
sbb
in
cmp
cli
sarl
pop
js
pop
xor
jl
lock
pop
adc
mov
negb
cmpsl
mov
fstpt
add
clc
int3
aad
aaa
ror
fdivr
flds
add
pop
cmp
je
mov
test
rorl
dec
repz
test
repz
xchg
bound
fwait
imul
outsb
cmpl
mov
shlb
sahf
out
lods
adc
add
cmp
insl
mov
xchg
stc
inc
std
push
cwtl
jp
pop
mov
push
pop
scas
mov
icebp
cmp
into
xchg
or
pop
std
sub
enter
pmaxub
cmp
xor
or
sbb
jmp
mov
dec
ljmp
push
lds
dec
les
notl
movsl
ja
and
ror
shrb
data16
cmpsl
cmc
fidivrl
js
fincstp
cmp
mov
lahf
daa
lcall
cmc
frstor
and
sbb
push
int3
push
mov
add
sbb
cmpsl
lcall
das
lock
loopne
test
lret
sub
stos
xor
dec
cltd
leave
push
sbb
cld
push
sbb
cmc
dec
lds
mov
movsl
add
loope
mov
push
out
add
ljmp
cwtl
rcrb
mov
fsubrp
xchg
jnp
call
imul
push
push
fisubs
push
mov
pop
and
loop
push
enter
test
jp
xchg
stos
sub
out
push
dec
mov
mov
cmp
int3
in
call
xchg
lahf
fdivl
insl
dec
sub
push
jno
push
fistps
dec
adc
inc
adc
and
test
ret
dec
pop
mov
dec
inc
imul
fcomp
cmp
jae
sbb
jae
ss
fcmovnb
add
dec
shlb
mov
movb
cmc
enter
xchg
repz
les
fwait
mov
dec
out
mov
pop
testl
loopne
add
mov
cmp
pop
lahf
dec
sub
mov
inc
int3
dec
mov
into
data16
test
sub
mov
dec
mov
mov
xor
add
jge
fstps
xor
push
andl
mov
imul
test
jge
and
std
nop
lds
fsub
inc
test
xor
lods
xchg
test
xlat
cs
sbb
pop
push
daa
xor
sbb
test
inc
xchg
mov
mov
jmp
sarl
fwait
mov
adc
iret
xor
dec
jmp
sti
cltd
ror
test
shll
cmovo
imul
adc
imul
push
inc
xorl
jo
popa
outsb
lods
out
or
cltd
in
data16
pop
test
pop
icebp
or
aaa
inc
push
jno
cltd
fs
es
cltd
fstpt
stos
cmpsb
or
push
mov
cmc
xchg
loopne
lds
mov
mov
mov
dec
rol
mov
pop
fnstcw
loop
adc
and
mov
lock
sbb
lahf
outsl
jle
jecxz
mov
out
cmp
test
rcr
mov
mov
adc
vxorps
jbe
ret
pop
fcom
fiaddl
in
jge
cmpsb
xchg
and
in
add
rcll
and
cmp
sbb
imul
fcmovu
cltd
pop
pop
cmc
push
addl
adcl
jnp
loope
mov
cli
pop
in
loopne
mov
lea
test
fisttpll
add
pop
jne
pop
mov
in
pavgb
sbb
movsl
push
notb
pop
les
push
and
adc
pop
loop
idivl
push
lret
jns
push
xchg
mov
inc
xchg
sub
pop
dec
xchg
imul
pop
repnz
pop
and
leave
insl
adc
xchg
sbb
lcall
ss
imul
repnz
movsl
scas
das
push
xchg
add
xchg
sub
sbb
pop
fbstp
repnz
imul
add
out
outsl
inc
mov
aad
popf
lods
fwait
cld
das
add
inc
stos
dec
and
out
jae
outsl
xchg
add
movl
pop
setne
dec
je
jo
inc
or
cmp
inc
scas
lods
dec
pop
adc
mov
aad
mov
cmp
ret
jecxz
test
lods
pop
lds
shll
popa
inc
ror
aas
fldl
daa
sub
inc
imul
xchg
mov
add
mov
leave
into
inc
movsb
sbb
cmp
lcall
sub
stos
push
inc
mov
ja
push
xchg
arpl
vpsubusw
mov
jle
sub
scas
out
push
mov
pop
jge
sub
adc
popf
lcall
or
mov
lahf
xlat
outsl
pop
lcall
hlt
sar
jb
shll
inc
rcrb
ss
pop
call
adc
cld
and
sub
xlat
ret
dec
xlat
sub
popf
or
call
lods
push
pushf
das
gs
jmp
shl
xor
cltd
ret
add
pop
sub
xchg
lcall
iret
imul
stos
pop
adc
ret
cli
addb
pop
in
sbb
mov
dec
clc
das
inc
inc
push
mov
pop
dec
and
pop
in
fcmove
shrl
ss
jnp
xor
cwtl
lea
mov
roll
dec
inc
leave
or
out
push
xor
lods
out
sbb
int
cmpl
push
outsb
jmp
mov
loope
fisubl
jg
lds
test
sahf
or
push
mov
cmp
dec
aam
inc
xlat
push
lock
outsb
dec
cmp
ss
sbb
mov
and
jno
mov
jno
adc
es
cwtl
in
in
test
out
cli
daa
enter
sub
pop
les
xchg
movsb
pop
fidivrs
fistpl
movsl
mov
sarl
cmpsl
clc
or
and
xor
dec
inc
jl
test
push
xor
data16
addr16
into
mov
inc
push
or
xlat
dec
sbb
repz
popf
sbb
out
xchg
cmp
push
call
push
les
jmp
mov
hlt
push
enter
push
xchg
push
push
or
int3
cli
cmp
mov
imul
sub
sbb
rclb
or
xor
lahf
or
xchg
insb
and
push
sar
adcb
imul
and
out
cs
fcmove
mov
lods
loop
xchg
mov
pop
push
mov
in
popf
dec
mov
outsl
dec
pop
dec
xchg
adc
popa
out
add
call
dec
push
push
jmp
arpl
int3
add
cmc
popf
insb
and
inc
jne
loop
pop
imul
icebp
pop
dec
xor
data16
stc
sbb
leave
lds
fistps
cmp
xor
loope
dec
jmp
loope
push
mov
adc
popa
in
sbb
cli
push
pusha
clc
and
out
mov
mov
mov
xor
inc
and
xor
sub
mov
cmp
dec
push
cmpsb
imul
je
in
mov
loop
sub
xor
mov
sub
jo
fistpll
xchg
lods
test
and
push
mov
sbb
lea
imul
xor
add
les
sarb
wbinvd
inc
xchg
xor
cltd
test
in
push
leave
sub
lahf
stc
ret
es
jmp
sbb
std
inc
push
cmp
mov
cmp
jo
out
fldenv
or
insl
int3
stos
int3
jmp
push
cmp
outsb
lock
xchg
adc
in
adc
pop
add
in
mov
cmp
ror
ljmp
xlat
jle
sarb
sti
cmp
cwtl
stc
sti
inc
jnp
mov
and
icebp
and
clc
lods
pop
shlb
or
jmp
sarb
push
mov
in
shll
aaa
sti
sarb
pusha
ljmp
mov
das
mov
mov
xchg
or
test
call
lcall
jae
in
xlat
add
mov
in
xchg
and
out
jg
inc
cmp
push
inc
xchg
xor
inc
nop
xlat
and
dec
push
xchg
mov
xor
inc
pop
mov
push
mov
pop
mov
test
repnz
ds
mov
int3
pop
in
xor
xchg
idivl
test
aad
hlt
mov
dec
shr
dec
xchg
loop
mov
loop
hlt
lcall
outsb
xor
xor
inc
jno
shl
push
xchg
xorb
mov
push
jle
pop
repnz
push
jo
jle
mov
mov
mov
sbb
xacquire
std
add
gs
icebp
jnp,pn
xchg
stos
xchg
and
sbb
call
lcall
mov
lea
add
push
or
imul
xor
das
call
ret
sub
pop
pop
push
or
adc
and
jno
and
gs
push
inc
popa
cmp
lea
sbb
mov
or
lods
mov
shll
inc
scas
test
xchg
sub
loope
jnp
lahf
jp
cld
mov
cmpl
aam
xchg
and
inc
pop
pushf
jmp
and
or
xor
jle
aad
push
xchg
xor
mov
shr
mov
xor
insb
ljmp
adc
outsb
cs
xor
push
pop
push
inc
xchg
int
inc
repnz
add
leave
dec
pop
daa
jge
add
xchg
es
pop
cmp
cltd
mov
sub
dec
jmp
ret
leave
push
adc
test
cld
push
into
pop
in
push
or
out
pop
sub
pop
fsts
inc
jmp
cltd
cwtl
cmovns
and
lods
mov
sub
dec
xchg
test
cmp
pop
inc
leave
xchg
and
int
out
mov
ret
ss
xchg
cli
mov
enter
fwait
pop
xchg
pop
push
cmp
cmpsl
aas
xchg
outsb
cmc
add
sbb
outsl
ds
out
pop
les
roll
mov
dec
xchg
adc
imul
xchg
inc
sete
or
pop
dec
push
mov
mov
push
jl
out
inc
aas
dec
add
pop
pushf
push
or
sbb
lret
popa
and
jl
inc
mov
out
lcall
mov
or
jnp
xchg
add
jecxz
cmp
scas
frstor
lods
sbb
jg
jecxz
in
in
int
xor
push
push
xchg
xchg
je
mov
enter
out
cmp
ud1
fs
inc
dec
stc
int3
test
xchg
mov
dec
or
outsl
in
je
loope
jmp
jae
movsb
data16
mov
fistps
mov
dec
cmp
enter
cmp
rcl
add
sub
fsubrs
push
sahf
cmpb
and
inc
dec
sbb
push
sbb
shrb
add
sbb
repz
push
fmuls
adc
ja,pn
cmpsb
rolb
push
mov
call
mov
inc
ficoms
fdivrs
mov
int3
mov
lods
jp
cwtl
loopne
xlat
jne
xchg
and
jno
pop
insb
ds
cmp
icebp
pushf
mov
add
mov
cli
sarl
sub
mov
outsb
mov
sbb
jae
lret
aad
push
push
imul
xchg
es
cli
outsl
push
push
arpl
nop
out
push
mov
dec
test
xor
or
int
jl
push
push
cmpb
and
imul
nop
mov
jnp
enter
add
frstor
movsl
in
adc
push
mov
cmp
imul
ret
sahf
pop
pop
xor
push
fwait
rcll
repnz
pusha
in
lds
adc
adc
imul
icebp
outsb
mov
xor
cld
cltd
in
out
cmpsb
insw
les
gs
repnz
int
or
or
std
pushf
dec
loop
and
jnp
mov
mov
loop
cmp
mov
xor
lods
mov
movsl
pop
and
jp
mov
pop
pop
nop
cld
sbb
out
mov
or
pop
lea
lret
push
add
cmc
add
or
mov
stos
mov
loopne
dec
cmp
jae
or
test
rorb
jmp
sbb
mov
cmp
jne
inc
pushf
lock
lea
roll
test
ja
pop
xchg
add
push
ljmp
cwtl
xchg
lods
mov
jae
bound
insl
lcall
mov
xchg
inc
mov
sub
jge
sbb
cmpb
xchg
mov
cmp
inc
outsb
xlat
sbb
std
jno
movsl
lahf
push
stc
int3
shll
dec
cmp
lret
adc
mov
sti
in
clc
shl
ds
inc
int3
cmp
cmpsb
cmpsb
push
lahf
jne
push
in
cmpsl
lock
xchg
das
lahf
xor
cwtl
mov
cmp
push
je
mov
aas
or
mov
out
fs
mov
push
or
inc
mov
xlat
loop
xchg
loopne
jp
test
cmp
pop
inc
push
and
mov
inc
xor
cwtl
adc
subb
dec
das
push
sbb
into
push
mov
leave
dec
xchg
push
pop
cs
je
adc
cli
jp
ret
popa
inc
inc
jecxz
xchg
das
jge
cmp
sbb
mov
insb
xor
jmp
cmp
fcomps
jae
pop
fisttps
jne
adc
adc
dec
dec
lcall
fisubrl
lds
xlat
sub
sbb
cld
subl
sbb
mov
mov
cs
jl
dec
mov
sub
adc
adc
dec
push
fnstenv
popf
mov
or
xchg
repz
cwtl
dec
dec
pushf
inc
imull
cmpsl
sub
fwait
xchg
cmp
push
shl
out
add
popf
inc
sbb
data16
jnp
jno
std
xor
and
rclb
inc
shrl
sbb
pop
dec
insb
cli
inc
mov
push
mov
push
dec
popa
push
xor
mov
inc
push
inc
loope
outsb
shlb
rorl
xchg
or
mov
fwait
imul
aam
push
aaa
in
add
and
sahf
inc
imul
jnp
mov
push
stos
pop
sbb
adc
fsts
mov
dec
mov
jle
int3
int3
dec
insl
leave
pop
stc
lret
sbbb
test
add
xor
mov
mov
add
and
xor
ret
lds
stc
hlt
jge
pop
pop
repnz
push
xor
stos
dec
outsb
cmpsb
cmpsl
push
mov
pop
adc
dec
jbe
mov
int
test
js
sub
into
out
sub
pushl
cmp
dec
mov
popf
and
cld
jle
xor
mov
popa
out
je
arpl
dec
fisttps
push
push
mov
xchg
sbb
mov
fbld
xor
mov
and
xchg
rclb
lret
dec
arpl
mov
dec
xor
fdivrs
jg
adc
out
mov
sbb
imul
sbb
push
cmpsb
enter
push
in
ffreep
xchg
sahf
push
sub
pop
xor
mov
jno
push
and
fdivl
lret
push
xor
into
ret
xchg
inc
xchg
inc
aas
int
outsl
pop
push
stc
mov
sub
mov
ret
add
push
pop
cmpsl
into
push
mov
data16
lcall
lea
fwait
sbb
mov
testl
jbe
push
sti
xchg
adc
dec
pop
nop
or
jp,pn
jnp
rcrb
inc
mov
fdivrl
test
mov
cmpsl
mov
fistl
shll
adc
das
cltd
cld
popa
testb
pop
fwait
gs
lret
mov
scas
pushf
loop
lds
dec
mov
add
mov
aaa
and
pop
push
dec
outsl
mov
xor
adc
pop
pop
jp
icebp
sahf
scas
sti
enter
push
adc
loopne
cmp
repz
xchg
mov
or
rcl
incb
mov
mov
insl
mov
sub
dec
mov
test
mov
psadbw
push
inc
jno
scas
popa
jmp
mov
xor
sub
dec
mov
stc
or
dec
test
jle
lods
out
or
into
xchg
adc
enter
scas
or
xor
cwtl
pop
lcall
push
call
scas
mov
push
adc
mov
iret
push
push
push
insb
mov
dec
in
and
cmp
push
mov
icebp
jno
xchg
sbb
ja
lahf
in
ljmp
ret
pop
cmp
sbbl
mov
into
ljmp
mov
out
sar
testl
aam
sub
mov
push
sbb
lret
mov
and
or
lahf
push
cmc
adc
in
nop
test
testl
cld
rcrl
imul
mov
xchg
mov
mov
gs
pop
aam
pusha
mov
xorl
cmp
mov
cmc
xchg
inc
enter
test
jns
js
in
rcl
and
out
sub
inc
test
sahf
mov
mov
mov
shlb
or
sbb
fistl
lds
rcrb
dec
jo
test
test
mov
loop
lock
ror
sub
jne
addr16
gs
lcall
mov
insl
mov
mov
push
inc
cmp
ret
mov
push
fcomps
aad
adc
cmp
in
daa
xor
mov
push
movsb
push
dec
pop
lret
andl
insb
lods
bnd
icebp
outsb
dec
iret
inc
out
cmovnp
jp
lods
loop
lds
andl
movsb
out
pusha
pop
push
mov
out
xor
adc
data16
int
scas
push
adc
lods
inc
mov
dec
repnz
pmulhw
aam
fisubs
popf
xor
and
fdivrp
scas
out
xchg
popf
cmp
or
movb
cmp
mov
dec
cmp
js
ljmp
pop
mov
inc
leave
mov
dec
pushf
out
sbb
loopne
pop
fisubrl
dec
and
xor
mov
inc
inc
popf
lds
adc
insb
test
lcall
mov
mov
mov
xor
sub
pop
das
inc
xor
stos
adc
stos
jge
bound
adc
xorb
test
xor
jl
xchg
mov
daa
fisubrl
push
xchg
sub
pushl
jp
scas
cmp
add
mov
jle
ljmp
pop
movsb
mov
mov
jmp
cs
outsb
leave
jno
bound
dec
imul
inc
scas
fxtract
push
jae
xchg
out
jge
push
not
jp
leave
lret
add
test
xor
lock
dec
pop
pop
cmp
jbe
out
mov
leave
icebp
push
mov
rorb
dec
and
cmp
push
xchg
ret
jge
push
fildll
xor
movsl
sbb
pop
mov
clc
mov
iret
js
sub
in
dec
pop
mov
mov
jmp
push
lods
adc
mov
adc
fbstp
jns
dec
sti
inc
mov
lahf
test
roll
pcmpgtd
inc
jae
push
jle
and
out
and
cld
jb
pop
add
pop
jle
addl
andl
xlat
lret
aam
mov
cvtpi2ps
push
into
inc
das
pop
scas
add
or
xchg
xor
inc
cmp
lock
push
aam
imul
sbb
and
or
shl
adc
mov
mov
adc
inc
pop
aam
pushf
cs
or
push
les
mov
and
cmp
dec
xchg
mull
in
pop
adc
add
lods
ret
stos
test
shrl
fs
das
sub
fchs
mov
ljmp
pop
xchg
pop
cwtl
pop
repnz
push
sub
jno
repnz
subl
xchg
outsb
popa
dec
fsts
push
dec
mov
in
sahf
pop
dec
mov
sbb
cmpsl
sbb
or
mov
or
pop
pop
out
ret
scas
sbb
in
fistps
xchg
and
add
jb
and
mov
repz
in
cltd
cmpsb
sbb
inc
dec
pop
adc
lods
fidivrs
add
mov
popa
out
fnstcw
mov
arpl
hlt
xchg
and
or
xor
lds
mov
cwtl
and
mov
adc
push
push
jo
int3
ror
out
push
lcall
in
cmp
notl
jg
scas
jb
jns
lret
mov
lss
cli
fucomp
add
dec
mov
mov
jecxz
shrl
mov
push
pop
sbb
xlat
lahf
sub
js
test
out
insl
add
js
les
jb
jnp
sbb
ljmp
jae
cmp
inc
mov
and
push
dec
adc
xor
xor
ret
or
dec
daa
stos
xchg
paddsw
sti
mov
icebp
shrl
mov
ja
outsl
mov
fwait
je
into
xchg
push
and
or
and
add
cmpsb
xor
cmp
push
pop
rclb
enter
cmpl
les
mov
shlb
pop
sbb
sbb
ds
jae
cld
stos
sub
cmp
jnp
jp
int
fstpt
addb
fwait
les
int3
andl
mov
stos
mov
fbld
push
dec
xor
adc
pop
xchg
xor
imul
jae
jbe
push
push
out
mov
push
mov
int
cmpsl
in
xor
gs
mov
inc
adc
cmp
cwtl
test
lahf
or
ficoml
mov
push
lds
aad
pop
sbb
sbb
adc
push
cmp
fistl
sbb
or
and
sub
xor
aam
test
mov
add
fsubrs
out
addl
aaa
sbb
pusha
sti
push
xchg
js
pop
xlat
fimull
fidivrs
add
mov
loope
mov
pop
test
fidivl
push
in
mov
imul
pop
push
push
pushf
das
test
adc
add
inc
and
and
adc
cltd
xchg
adc
jbe
cs
aas
mov
fildll
lret
dec
sub
mov
aad
pop
sub
jmp
dec
jae
out
xchg
rcr
ja
xor
mov
into
dec
movsb
dec
ds
loopne
mov
sbb
jp
add
jae
mov
mov
sbb
in
and
cmovnp
add
mov
movsb
pop
cmp
jae
or
fstpl
leave
mov
pop
loope
mov
andb
gs
and
and
fildl
lds
or
pop
mov
xor
popf
enter
push
into
jb
cmpsb
mov
popf
mov
mov
add
and
jmp
pop
fwait
fwait
stc
leave
loopne
stos
shlb
sub
sbb
test
mov
dec
xchg
ja
xchg
imul
outsb
loopne
loope
mov
popf
scas
in
pop
sahf
cmpsl
aad
inc
fcomps
push
daa
sahf
xchg
jecxz
jg
dec
sub
fisubrs
sbb
pusha
jne
fidivrs
cld
or
enter
mov
fldcw
xor
and
add
stc
mov
adc
neg
mov
stc
adc
or
inc
xor
sti
cld
jmp
int3
jl
int
mov
jg
mov
jno
insl
inc
cmp
jecxz
ret
arpl
mov
pop
dec
pop
jb
das
jl
adc
push
and
pop
daa
arpl
cli
ret
lea
cmp
stos
cmp
addr16
xchg
dec
orl
or
cmp
imul
xchg
pop
push
imul
inc
outsl
pop
movsb
lret
cs
jp
pop
pop
sahf
add
test
addr16
sarb
adcb
aad
pop
mov
ret
inc
push
cmpsl
scas
inc
mov
dec
pop
or
outsl
imul
cmp
cltd
roll
mov
add
cmpsb
iret
mov
cmp
std
ds
cwtl
or
mov
into
lea
push
andb
dec
cmp
xor
and
cmp
mov
mov
adc
int
fnsave
jmp
js
inc
xchg
je
lock
jae
jbe
push
and
push
lds
mov
pushf
cmpl
fldenv
xor
inc
and
fildll
push
scas
lcall
pop
add
inc
xchg
sbb
das
mov
out
sbb
xchg
add
not
iret
and
call
xor
pop
mov
pop
in
xchg
fildl
or
lret
dec
shrl
inc
aad
dec
fcom
cmp
sub
fcoms
loop
and
jp
jmp
or
ficoms
or
std
lahf
outsb
jb
dec
sub
jo
mov
cmp
sub
shl
lds
mov
pop
jo
mov
lods
or
xchg
repnz
sub
push
mov
jecxz
jp
cmpl
negb
fsubs
mov
mov
pop
lret
push
ficoml
lahf
mov
test
loope
lahf
and
iret
jns
ds
cmp
push
movsl
fcoml
in
mov
ficomps
jae
sti
aas
inc
mov
into
push
dec
sbb
mov
xchg
in
outsl
pop
popa
jp
and
and
call
out
push
mov
pop
and
sbb
jno
rorl
cwtl
push
sahf
loop
cmp
mov
xchg
fucomp
hlt
dec
mov
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
pushl
movsb
andl
ret
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
cmp
xor
inc
sub
pop
pop
repnz
push
jmp
insb
and
pop
push
pop
out
iret
in
pop
jmp
sbb
pop
mov
loope
imul
movsl
mov
fimull
ja
xor
dec
mov
ss
jp
xchg
enter
cmc
mov
inc
jecxz
or
pop
add
add
scas
cmp
mov
rorb
pop
ss
adc
xchg
cmc
fadd
fs
or
aam
add
ds
lahf
mov
dec
pop
sbb
pop
pop
ja
xor
or
jno
mov
jp
and
andl
cmp
xchg
cmpb
fmull
and
sub
xor
mov
fimull
dec
iret
cmp
xor
cmp
cmp
xor
lock
cmpb
fimull
andl
cmp
xor
mov
fimull
xor
mov
fimull
xor
mov
rorl
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
sbb
cmp
xor
mov
fimull
dec
iret
insb
jne
mov
filds
dec
out
cmp
aam
shl
lock
mov
or
xor
stos
nop
andb
or
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fimull
xor
mov
fisubl
les
xor
mov
adcb
add
adc
push
cmp
aas
dec
and
mov
sbb
sub
add
pop
into
adc
test
sahf
push
cltd
push
mov
addl
sub
sbb
lcall
adc
icebp
rorl
repz
dec
data16
xor
lods
sub
lcall
fnsave
xchg
cli
mov
lods
lds
push
xchg
push
lea
cmpb
inc
mov
loop
add
mov
and
xor
ljmp
bound
mov
ss
or
dec
mov
xor
movb
adc
jg,pn
or
fcmovu
inc
or
and
pop
ja
flds
insl
fdivl
or
push
loop
aas
mov
fists
out
push
adc
mov
add
mov
or
mov
lahf
jmp
sbb
dec
cld
ret
jmp
insb
lea
aas
fnstenv
xlat
mov
add
jmp
pop
sub
cmc
mov
sbb
stos
ljmp
add
js
add
in
push
fisubs
mov
adc
sbb
pop
adc
jo
rcrl
lahf
leave
mov
sbb
pop
xor
enter
or
add
test
pop
arpl
mov
test
cmp
test
dec
adcb
les
or
push
dec
lahf
mov
arpl
mull
rcll
adc
in
ja
sbb
jnp
adc
pop
xor
xlat
movsl
rolb
jne
stc
mov
or
rclb
aaa
mov
mov
mov
cli
in
pop
pusha
leave
das
mov
pushf
bswap
test
in
sbb
cmc
lcall
je
sub
outsb
inc
stc
dec
add
test
mov
lds
mov
and
pop
or
pop
pusha
jb
lods
scas
hlt
dec
iret
push
inc
in
or
aaa
xorb
sub
push
aaa
dec
sahf
pushf
fistl
clc
popa
frstor
in
test
mov
loop
aam
addb
or
pop
outsb
mov
mov
les
fldcw
cmp
adc
pop
dec
jge
rclb
out
mov
mov
insl
inc
cld
push
xor
or
ja
ret
fsubr
mov
bound
xor
cmp
cmc
mov
push
cmova
jecxz
cmp
jbe
in
dec
aad
clc
lds
push
lcall
daa
les
xchg
xor
mov
inc
jnp
insl
loope
scas
pusha
push
xchg
cmpsl
js
ficoms
jae
test
je
mov
outsb
aam
sub
and
add
test
fcoml
rcrl
add
and
adc
mov
in
out
or
fbstp
jbe
push
sbb
pop
jge
pop
dec
xchg
adc
arpl
push
inc
int
aam
or
into
out
test
outsl
mov
and
enter
inc
shrb
xor
pop
push
sbb
sarl
fnstsw
fdivp
stos
mov
movb
mov
pop
sbb
cwtd
loopne
xchg
inc
sub
in
mov
fsub
mov
xchg
mov
ja
dec
xchg
outsl
pop
pop
fists
cli
aas
aad
sbb
inc
ret
inc
or
aam
push
inc
jne
enter
sub
rclb
cmp
int3
repz
test
inc
fwait
and
and
mov
push
pop
mov
std
push
test
js
pop
lods
pop
aas
sub
sbb
and
inc
add
fsubrs
sbb
sbb
int
sbb
cld
imul
inc
pop
lds
test
sub
in
mov
ja
popa
mov
cltd
nopl
dec
xchg
jp
cmp
outsl
test
lea
mov
es
add
pop
adc
adc
mov
pop
cmp
movsb
jmp
lret
mov
and
test
jg
mov
ja
aaa
xor
lahf
inc
add
dec
repnz
dec
out
xlat
jmp
inc
mov
jle
lcall
or
xor
repnz
inc
lods
adc
sbb
imul
ret
cltd
insl
xorb
in
cltd
jge
mov
ret
mov
lock
xchg
sbb
jbe
push
icebp
les
loope
mov
addl
out
jne
mov
xchg
cmpsb
in
sbb
test
push
or
jge
and
xchg
int3
adc
arpl
xchg
cmp
push
sbb
jecxz
scas
aaa
dec
insl
movsb
mov
lods
cmp
repz
cwtl
mov
into
aas
jp
sahf
fbld
repz
add
xlat
sbbb
mov
add
loopne
das
cmp
icebp
lods
and
sbbl
pop
add
mov
push
jp
cmp
inc
dec
add
fiaddl
xchg
adc
sbb
data16
pop
je
pop
push
rclb
jbe
xor
call
jbe
pop
mov
daa
aam
push
push
icebp
ret
inc
dec
int
cmp
data16
jl
repz
imul
dec
leave
out
rol
cli
scas
xor
dec
loopne
setge
adc
cmp
out
mov
mov
popa
test
dec
xchg
push
das
inc
imul
jns
aaa
inc
or
mov
call
jl
lock
mov
aaa
cmp
mov
enter
sbb
inc
and
inc
test
pop
sarl
push
mov
xor
sub
push
add
sahf
pop
mov
scas
out
mov
pop
add
or
and
fdivrs
cmp
stos
sbb
sbbl
stc
aam
lret
loop
sti
dec
pusha
push
aam
adcl
push
aad
pop
mov
shrl
les
jg
xchg
mov
xchg
mov
lods
mov
cmp
add
test
adc
or
ds
stos
xor
mov
shlb
mov
xchg
ljmp
subl
fcomi
pop
ljmp
adc
inc
dec
daa
push
iret
xor
ret
or
pop
hlt
xlat
add
xor
cmp
jae
loopne
ret
and
ja
mov
and
jmp
inc
jae
aas
jmp
add
or
ss
cwtl
dec
xor
mov
daa
sub
rcrl
mov
pop
in
movsb
mov
pop
test
xor
aas
and
lods
in
push
jmp
aaa
mov
xor
inc
adc
inc
sarl
int3
jb
test
aaa
repnz
adc
ljmp
fstpl
sbb
ret
jnp
ja
dec
or
sbb
jge
pop
call
sub
push
enter
xchg
xor
jns
xchg
sbb
movsb
movsb
pop
je
addr16
dec
and
dec
rcll
jnp
pop
mov
mov
mov
rcrl
mov
jb
int3
inc
sbb
sarb
stos
xchg
repz
xor
xchg
in
shr
imul
jmp
mov
lcall
call
outsl
push
sti
mov
push
repnz
dec
pusha
call
push
push
cmp
inc
pop
and
arpl
push
out
je
test
sub
sbb
mov
jnp
push
push
push
fcomi
sub
pop
fisttps
inc
xor
mov
add
xchg
jmp
nop
mov
push
sti
or
lahf
push
stos
lret
sti
negl
sub
outsb
xlat
and
ficomps
sub
ja
push
out
negl
xor
cld
fcoml
fsubl
jmp
xchg
mov
or
out
pop
sbb
out
mov
loope
or
scas
mov
mov
cli
inc
dec
inc
jae
scas
sbb
and
mov
imul
cli
shlb
fstps
mov
mov
dec
and
loopne
adc
sub
xchg
mov
jge
mov
xor
aas
aad
mov
ret
pop
pop
sbb
or
rol
adc
add
jnp
or
test
mov
sbb
jge
dec
xor
mov
mull
icebp
loope
add
xor
mov
add
mov
je
addb
rcr
inc
jmp
or
cmp
inc
jae
sub
ljmp
mov
adc
inc
hlt
incb
sub
frstor
enter
mov
mov
arpl
mov
jle
mov
outsb
dec
fbld
push
movsb
out
fstps
add
dec
sbb
push
xlat
imul
bound
out
loopne
imul
das
mov
sbb
les
movsl
cmp
enter
aaa
and
sbb
mov
xor
pushl
and
mov
mov
mov
fs
sub
stos
imulb
sub
mov
fcmovnbe
stos
out
and
into
mov
cmc
ret
jecxz
mov
mov
jo
pop
mov
dec
cmpsb
into
ljmp
mov
mov
clc
in
mov
jae
jae
fidivs
adc
sub
push
jg
adc
cmpsl
mov
mov
mov
aas
shr
add
mov
pop
popf
xchg
cmp
jle
xchg
scas
pop
dec
adc
jo
xchg
xlat
mov
push
or
movsl
icebp
push
push
out
js
jnp
push
fidivrl
xchg
sarl
adc
pop
ffree
push
pop
out
das
movsb
test
jg
cs
sbbb
mov
inc
fdivs
imul
call
loope
or
push
push
push
jmp
rcrl
cmp
push
test
jo
add
cmp
xadd
adcl
jnp
call
rcl
cmc
leave
push
int
movsl
aam
sub
leave
add
push
mov
add
sbb
and
inc
mov
push
ljmp
loope
jl
sbb
or
les
sti
pop
test
call
jmp
int3
cwtl
jb
mov
fcoms
testl
cwtl
add
add
adc
sub
and
cmp
js
mov
into
test
flds
xchg
cld
inc
and
mov
decb
push
jge
and
inc
inc
mov
pushf
call
inc
rcrb
loope
push
cvtpi2ps
xchg
dec
cltd
out
pop
leave
mov
cmp
lret
cmpsb
sahf
test
repz
mov
sub
pop
popa
cwtl
enter
xor
in
lods
rcr
mov
dec
cltd
mov
aad
in
and
mov
xchg
pop
jb
adc
ljmp
cmp
leave
movsl
pop
push
jns
cltd
mov
cmp
gs
cld
inc
dec
sub
dec
dec
out
addl
inc
sbb
cltd
test
xlat
xchg
nop
push
inc
fcompl
mov
test
outsl
lock
dec
jmp
lds
lock
setno
es
xchg
jl
divb
xchg
push
pop
jno
inc
sbb
pop
cmp
mov
aad
push
xchg
addr16
add
mov
cmp
pop
test
sbb
adc
dec
repz
or
mov
sub
scas
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
