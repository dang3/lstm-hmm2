pop
and
or
wrmsr
dec
into
mov
scas
pushf
cmp
pop
ja
outsb
adc
add
or
mov
sbb
and
sti
orb
das
outsb
mov
push
ret
and
fdivp
nop
sti
int3
and
lcall
repz
jmp
dec
mov
cmp
mov
sbb
inc
dec
into
mov
xor
push
cltd
mov
dec
in
push
cwtl
or
push
rclb
sbbl
mov
or
dec
int3
jg
ja
fld
cltd
push
jl
cmp
data16
repz
xlat
int3
push
les
push
push
pop
lods
mov
sbb
in
idiv
pop
lock
mov
cmp
pop
aas
mov
popf
nop
rolb
jbe
aad
jno
or
pop
roll
popf
cmp
jno
stc
jg
mov
jne
les
cmpsb
sbb
and
adcl
jmp
push
cltd
fimuls
dec
ja
movsb
aad
mov
cmp
in
into
fisubrl
hlt
lahf
into
mov
aam
insb
push
in
and
push
ret
repnz
lcall
aas
enter
push
cli
jl
das
cmp
test
push
mov
add
or
xchg
lea
xlat
int
daa
mov
adc
ret
das
int3
outsb
xlat
out
cs
dec
dec
jecxz
loope
and
out
cmp
fdivrs
bound
dec
scas
adc
adc
add
pop
jp
insb
test
cmp
je
pop
pop
gs
incl
jg
cwtl
adc
movsl
mov
call
fsubr
dec
daa
adc
inc
iret
in
xlat
cmove
sub
cmpl
pop
mov
fwait
fwait
mov
test
ret
pop
pushf
out
icebp
dec
into
mov
pop
adc
cmpsb
jns
add
movsl
jecxz
aad
call
lea
out
leave
mov
mov
push
loopne
cmp
aad
inc
out
push
cltd
outsb
lock
add
jnp
lods
shrb
inc
sbb
testb
loop
movsb
inc
out
mov
scas
xor
sub
cmp
ds
add
push
mov
xchg
mov
inc
cld
imul
add
dec
push
scas
xlat
clc
jns
inc
shll
and
mov
jae
mov
cmp
adc
cmp
lock
test
adc
pop
or
push
lock
mov
pop
popf
pop
pusha
mov
sbb
jbe
push
jnp
jl
pushf
cltd
loope
popa
jno
push
jae
push
lock
loope
lret
lds
pop
sete
xorl
ret
pop
adc
sarb
mov
cmpsl
dec
arpl
shl
pushf
cmp
clc
jl
pop
sbb
cwtl
and
sub
fisttpl
and
in
sbb
pop
push
xchg
sti
outsb
punpcklwd
loope
addr16
test
or
add
imul
pop
fs
lret
jmp
mov
sbb
dec
adc
add
dec
fs
cmp
js
movsb
jbe
int3
sbb
sub
stos
icebp
xlat
ss
xor
icebp
and
enter
sub
xchg
iret
jb
jg
add
push
sbb
shrl
add
movsb
sbb
and
sarb
sub
negl
jno
rcll
push
and
cmp
or
lock
cmp
cmpsl
mov
nop
dec
cmp
pop
mov
sub
adc
ret
dec
std
xor
inc
dec
xchg
adc
repz
out
xchg
adc
out
mov
stos
test
testl
cmpsb
cltd
movsb
icebp
repz
cmp
lds
cmp
loop
mov
mov
adc
cmp
in
sbb
pusha
xor
loopne
and
pop
movsb
mov
das
sbb
pusha
push
dec
xor
jmp
jo
or
mov
fadd
xchg
repnz
or
mov
lret
mov
inc
cmc
lods
fisttpl
sub
xchg
je
pop
mov
cmp
jmp
add
sbb
pop
mov
xorb
enter
xchg
int
mov
mov
push
inc
inc
daa
add
fadds
cmpsb
adc
push
jg
fimull
roll
sub
stos
xor
out
and
sub
test
add
and
icebp
inc
scas
pop
mov
ss
mov
cltd
in
mov
sub
xchg
cmpsl
pop
and
int3
int3
xor
pop
mov
fists
push
xorl
ds
jg
push
fucomip
movsb
rolb
and
stos
mov
fcoms
outsl
jge
test
mov
test
sbb
jb
and
xchg
jmp
xor
jle
into
into
lret
inc
mov
rcrl
push
in
push
negb
mov
mov
mov
push
inc
xchg
test
or
cmpsl
pmullw
sbb
inc
sbb
push
xchg
sti
stos
lcall
addr16
ja
xchg
xchg
icebp
add
xchg
xor
adc
jecxz
xchg
rcr
mov
out
lcall
arpl
fsubr
add
pop
dec
inc
out
adc
xchg
xchg
add
icebp
mov
mov
xorb
ss
mov
repz
and
push
cmp
mov
movsb
cmpsl
push
dec
clc
pop
pop
inc
xor
aad
adcb
dec
mov
lods
call
ss
push
push
in
or
fildl
call
dec
xor
dec
in
ss
push
jg
mov
inc
insl
inc
idivb
pop
sbb
aad
test
imul
xor
shll
fwait
pop
pop
fildll
dec
dec
cmp
wbinvd
fsts
enter
in
mov
xor
jne
xchg
dec
aaa
mov
cmpsb
stos
or
mov
xor
jnp
jge
arpl
in
popf
out
lea
mov
jbe
inc
js
push
dec
cld
gs
cmp
mov
adc
dec
mov
ja
add
sarb
mov
mov
loop
stos
in
stc
lret
mov
xchg
adc
dec
repnz
xchg
pop
inc
xchg
push
imul
lahf
ds
out
sarb
and
jo
mov
mov
cltd
sbb
dec
mov
adc
push
mov
mov
inc
sbb
outsl
in
aad
mov
into
iret
push
ljmp
fnstsw
out
sbb
sbb
clc
je
inc
adc
jae
fcomps
xchg
push
xchg
xor
xchg
xacquire
ss
push
or
int
mov
add
or
jecxz
and
paddb
jnp
pop
aaa
int
loop
lods
jle
jo
jno
xchg
insb
mov
std
xchg
jg
out
pop
xchg
dec
push
sub
jo
dec
stos
sbb
jmp
cmp
xchg
jge
xor
adc
mov
mov
cwtl
sbb
push
push
mov
cld
sbb
ljmp
fmuls
cwtl
push
ljmp
std
call
outsl
fsub
faddp
or
xchg
pop
jmp
pop
inc
push
dec
fwait
cmp
outsb
lods
sbb
jae
daa
inc
test
xor
push
mov
sbb
loop
jo
or
pusha
sbb
fistpl
aaa
mov
dec
movsl
adc
cmp
notb
pop
inc
or
inc
call
test
push
xchg
in
xor
ljmp
adc
fidivl
andb
movsl
push
int
xchg
imul
xorb
mov
or
jge,pn
adc
lcall
in
xchg
dec
mov
sbb
xchg
push
xor
fisubrs
sbb
mov
lds
stos
lcall
sub
loop
shl
daa
xor
shl
sbb
sti
mov
add
enter
std
sub
jne
jno
sarb
in
xchg
int3
and
mov
leave
jb
ret
popf
cmp
test
sub
gs
roll
jle
or
pop
stos
das
pop
loope
cmp
or
mov
add
lds
and
pop
imul
adc
enter
or
push
xchg
dec
fildll
cmpsb
mov
pop
pop
sti
test
repnz
add
mov
jo
aas
dec
std
mov
sub
aam
pop
pop
shrb
insb
xchg
sarl
xchg
aas
shll
cmpsb
int3
pop
pop
xchg
lea
test
test
mov
aam
sub
ret
inc
add
test
xchg
pop
mov
in
sub
popa
mov
jnp
pop
negl
xchg
cmpsb
lods
adc
orb
leave
pop
sti
cmpsb
aas
or
cs
xchg
add
push
jge
lcall
cmpsl
fldenv
add
jno
add
std
pop
ja
cld
out
sbb
out
cltd
adc
in
outsl
mov
cmp
mov
out
std
lret
stc
cwtl
mov
mov
or
jae
mov
fs
pop
and
popa
xchg
pop
mov
ss
cmp
arpl
pop
loopne
xlat
rcrl
dec
sbb
test
xchg
loop
jae
ljmp
cltd
push
and
or
xchg
push
or
dec
xchg
push
xchg
jno
xchg
jp
xor
fistpl
xor
xor
fildl
mov
push
icebp
out
out
adc
lahf
push
pop
push
js
jnp
cld
and
mov
adc
xchg
bound
inc
mov
sub
xor
add
xchg
lahf
xor
xor
cltd
in
clc
clc
sub
loop
sarb
mov
sbb
test
xchg
mov
repz
lret
dec
mov
rcrb
and
pop
adc
addr16
sbb
jge
sub
outsl
enter
nop
ret
nop
cld
jle
adcl
pop
xorb
imul
xchg
pushf
add
jne
mov
xchg
add
addb
pop
sub
mov
xor
sub
push
scas
int3
stos
xchg
push
xor
adc
dec
xlat
popf
xor
xchg
movl
out
push
sub
or
mov
jns
call
pop
sbb
mov
mov
or
aaa
push
xchg
mov
dec
fildl
fldl
jle
clc
subl
shll
mov
dec
cmp
xchg
fistps
lret
jecxz
or
dec
fbld
cmp
xchg
incl
repz
testb
rcl
dec
addr16
fnstsw
test
mov
and
icebp
shr
push
xlat
mov
and
ret
mov
mov
pop
dec
xor
or
pop
in
mov
fdivl
jnp
xchg
daa
cmp
push
adc
or
mov
adc
lock
jge
cltd
xor
les
movl
push
dec
push
jle
push
fists
push
dec
xchg
test
mov
call
nop
sub
mov
sbb
bound
in
test
rcll
inc
lods
fucomp
cmpsb
les
xchg
jnp
push
sub
and
adc
dec
pop
mov
movsl
jmp
nop
decl
aaa
cmp
push
outsb
mov
xchg
mov
cwtl
xchg
fiaddl
and
jb
lds
or
fistpl
mov
test
mov
int
fucomi
cmp
or
mov
inc
cmp
das
mov
flds
sahf
xor
repz
push
push
mov
test
lods
mov
jne
fisubs
shrl
out
cs
xor
jae
mov
sub
adc
or
mov
loop
jb
jecxz
adc
adc
ret
lds
loopne
lret
hlt
pushf
arpl
movsb
xchg
insl
mov
sub
xlat
fstpt
inc
test
dec
or
sbb
outsl
mov
stos
or
xor
mov
and
mov
ss
rolb
bound
sub
int
sbb
dec
in
add
movsb
sbb
dec
out
dec
nop
sbb
lds
jmp
cmp
sarb
push
add
mov
xchg
scas
mov
imul
lods
xchg
cs
jge
mov
jo
shl
lret
sub
cltd
and
jle
or
icebp
push
mov
adc
mov
repnz
fimull
xchg
xchg
pop
push
lds
nop
mov
adc
sbb
arpl
sbb
push
and
stc
dec
xor
sti
pop
rclb
loop
test
xchg
mov
aas
test
mov
rep
xor
push
outsl
lahf
popf
imul
sbbb
loopne
popa
mov
pushl
xchg
pop
push
data16
in
mov
push
fndisi(8087
and
inc
add
xor
mov
dec
out
lcall
mov
into
enter
add
mov
fnstsw
ljmp
lret
and
xlat
shrb
mov
mov
aas
cwtl
ret
jp
xchg
xor
subl
mov
pop
mov
shl
push
sbb
xor
aad
mov
nop
loop
fnstenv
sarl
daa
shl
cmp
adc
push
call
int3
mov
dec
dec
push
fistps
push
and
stos
xor
push
aaa
outsl
mov
dec
mov
pop
out
push
shr
iret
sahf
dec
dec
cmpsl
inc
jge
mov
std
inc
inc
jno
bound
cmp
repnz
punpcklwd
jle
pop
fldenv
icebp
push
or
and
stos
aam
sbb
ss
insl
int
cmp
aas
int3
out
dec
sub
push
and
imul
jo
mov
dec
cmp
add
sub
add
mov
call
sub
jge
fisubl
out
jg
mov
std
outsb
jb
fsubp
inc
sbb
mov
movsl
pop
xchg
adc
fldcw
pop
scas
lock
lcall
arpl
xor
mov
dec
lret
jno
xor
mov
push
sbb
mov
and
rorl
jns
ljmp
adc
push
jl
fidivrl
orb
inc
sbb
sbb
loope
xor
jnp
mov
xor
inc
or
daa
cmp
cli
mov
cli
clc
insl
push
cli
add
mov
mov
in
xorl
je
imul
outsb
mov
or
mov
faddl
jbe
fnstsw
cwtl
test
outsl
jbe
movdqu
jl
int
ja
inc
pusha
mov
sbb
lret
cwtl
les
fwait
mov
sub
dec
mov
add
xchg
test
mov
push
pop
enter
inc
and
push
sub
rcrb
dec
out
sti
mov
iret
mov
outsb
xchg
out
dec
adc
dec
add
cmpsl
mov
je
jge
mov
xor
push
mov
xchg
shl
das
push
ficoml
aas
insb
shl
cmp
ja
jbe
fildl
lret
sbb
in
add
repz
dec
inc
cmp
pop
bound
stos
popa
ss
mov
push
inc
push
dec
add
inc
xchg
outsl
jle
xchg
xchg
adc
jecxz
into
aad
js
mov
sbb
insl
inc
stc
push
cmpsl
popf
shlb
mov
mov
jp
imul
jmp
aas
aas
insl
jnp
int3
mov
inc
lods
cmpsl
adcb
subl
fs
out
push
mov
das
inc
stc
repnz
xchg
jnp
dec
mov
adc
movsl
js
mov
scas
leave
fisttpll
enter
fstpt
pop
sbb
jle
outsl
loopne
daa
cmp
push
sub
out
pop
fisttps
cmp
outsb
int
jle
adc
mov
push
and
insb
xchg
scas
rcll
lods
inc
inc
clc
xchg
push
rorb
mov
outsb
pop
mov
push
sub
xor
loop
push
testb
enter
mov
loop
loope
shrl
mov
or
fcmove
or
mov
int
sub
std
pop
cmpl
fcmovne
das
fdivrl
call
push
mov
fldenv
jmp
aas
xchg
int3
es
sahf
xor
pop
sti
xor
xchg
loope
mov
jge
cmc
adc
jmp
fldenv
lock
pushf
cmp
mov
scas
add
jp
mov
fisttps
pop
or
xchg
xor
cmp
outsb
pop
cld
ficoms
inc
push
aas
hlt
rcl
xor
rcrb
les
fldt
aad
inc
inc
out
fcmovu
push
push
jo
jb
icebp
cmp
ljmp
sub
fwait
mov
sbb
arpl
push
cld
adc
mov
sbb
subb
insb
out
mov
jle
xchg
pushf
out
fmuls
jle
test
pop
aaa
inc
mov
cwtl
dec
out
inc
ret
das
push
dec
push
sti
jecxz
xor
mov
imul
xchg
outsb
int3
cmp
addr16
xor
popf
pop
sahf
sbb
push
xor
push
sti
dec
in
push
pop
mov
or
push
xchg
cli
stos
outsl
sahf
sub
or
lret
psrad
mov
inc
insl
and
sbb
jg
movl
sbb
aaa
imul
mov
add
loopne,pn
mov
lods
lock
fsts
movsl
ljmp
cli
dec
cmp
xlat
mov
jnp
mov
fwait
or
mov
pop
mov
repnz
mov
and
lods
or
jmp
cmpsb
push
adc
inc
add
arpl
pusha
or
lods
cs
xchg
aad
sub
int
sub
jecxz,pt
sbbl
loopne
fstp
xor
xchg
iret
ret
lahf
int
test
cmp
in
orl
pop
movsb
push
cmp
and
cmc
inc
mull
insl
imull
icebp
mov
test
dec
xor
lods
sub
dec
lock
mov
mov
dec
daa
fidivs
xor
std
lea
cmpb
cmp
mov
lock
inc
and
cmpsl
cmp
incl
inc
jae
adc
cmp
stos
arpl
jle
cwtl
sbb
push
pop
leave
ss
mov
dec
fwait
and
mov
inc
mov
mov
clc
add
outsl
lret
les
mov
pushf
push
imul
or
ficomps
es
pusha
inc
sahf
les
xorb
int3
cld
outsb
cmp
pop
daa
mov
roll
pop
mov
sbb
push
pop
sbb
pop
les
pop
jg
xor
push
mov
cmpsl
push
add
ret
popf
out
cli
sbb
push
lods
in
mov
mov
in
dec
notl
cmpl
sbb
adc
das
mov
jae
scas
daa
outsl
mov
test
sbb
pop
lock
lahf
xchg
les
in
popa
xchg
insl
mov
out
xchg
xlat
mov
jo
int3
or
loop
xor
push
xchg
sbb
mov
arpl
xlat
es
pop
jecxz
mov
pop
pop
mov
sahf
push
stc
repz
pusha
jmp
inc
pop
xchg
cmp
adc
dec
cwtl
test
push
push
xchg
xchg
inc
mov
pop
fimuls
imul
rcrl
sar
mov
fwait
into
pop
dec
fisubrl
mov
loope
int3
aaa
push
cltd
cmpsb
and
sbb
aas
xchg
dec
pushf
scas
push
xor
cli
pop
sbb
dec
mov
pop
sti
fwait
ljmp
jmp
xor
shll
movsl
or
mulb
pusha
out
aam
push
shl
adc
fidivl
sbb
fadds
mov
outsl
inc
cmp
mov
or
cmpsb
push
mov
mov
hlt
and
or
mov
xchg
adc
mov
xor
lds
insl
les
aam
in
cmpsb
adcb
fwait
jo
inc
sbb
jl
repnz
ret
sbb
sub
xor
stos
test
fisttpl
jae
sub
imul
push
les
pop
pop
ret
mov
dec
cs
and
xor
xchg
sbb
jae
test
addr16
shlb
fisttpl
dec
aaa
mov
push
and
loope
push
adc
dec
loope
pop
push
aas
or
mov
fidivrl
gs
inc
scas
push
ret
daa
inc
xchg
sbbb
shll
or
roll
ss
and
lcall
fwait
testl
jno
scas
jge
mov
fs
aad
dec
xor
jb
jo
stc
sbb
push
enter
fxch
or
mov
jnp
mov
adc
mov
in
xor
sbb
lods
mov
dec
and
jmp
cmp
test
mov
lahf
loope
xorb
popf
xchg
hlt
pop
dec
and
nop
fnstsw
add
pop
popa
xchg
cltd
imul
push
jae
jb
jg
rolb
sub
inc
pop
dec
cmpsb
nop
and
vmread
imul
jbe
xor
pop
add
jns
xchg
pusha
fists
mov
scas
mov
push
sub
stos
leave
mov
les
mov
pop
mov
fnstcw
dec
inc
pusha
shl
jmp
in
mov
jle
in
xchg
xor
insb
in
push
add
mov
sbb
mov
movsl
xchg
test
lea
mov
sub
into
fstpl
push
cld
sarb
mov
cmp
sbb
sbb
pushf
lret
scas
mov
push
mov
cmp
jae
out
int3
push
cmp
out
xlat
sbb
repz
jae
sbb
mov
fcomps
clc
dec
fnstenv
lea
jb
cmp
dec
out
in
arpl
sti
es
mov
pop
dec
cmp
iret
rep
into
push
pop
push
fsubr
fdivr
and
repnz
ret
sbbb
movsl
and
xchg
popf
xchg
or
shll
add
mov
and
lock
xchg
outsb
outsl
sbb
je
mov
push
xor
sub
test
inc
push
or
rcrb
xorl
outsb
adc
das
hlt
mov
xor
ret
xor
push
push
jl
adc
imul
and
and
je
arpl
pop
push
fldt
stos
xor
outsl
sub
icebp
mov
jecxz
pop
test
mov
outsl
into
pop
add
or
jb
fmull
xor
mov
sbb
pop
mov
adc
pop
popf
ds
sbb
mov
jns
dec
dec
cld
into
mov
and
add
popa
cmp
mov
mov
gs
test
dec
pushf
jg
in
rol
popaw
into
cmpsb
cld
xor
pushf
cs
cmp
adc
jg
cmp
shrl
gs
ja
clc
notl
jmp
mov
test
sub
lcall
inc
ja
sub
push
fadds
xchg
test
fwait
sbb
sbb
mov
or
sub
sbb
mov
loopne
add
jne
xor
jle
insb
mov
or
xchg
cld
dec
in
int
add
mov
fisubl
xor
mov
pusha
jl
push
aas
dec
jnp
sbb
cmp
cld
xchg
sub
div
in
loopne
or
jle
mov
dec
lret
inc
mov
add
mov
xorl
in
push
scas
jg
mov
lahf
sub
hlt
mov
sbb
jl
jmp
pop
xchg
mov
mov
repz
cmp
push
nop
stc
xchg
inc
sbb
icebp
jl
xchg
lret
sbb
sub
daa
fadds
mov
xchg
ljmp
out
and
lret
and
mov
jno
out
test
aaa
mov
cmp
or
jae
out
and
cmp
inc
fsubr
adc
mov
out
add
lods
call
cmp
addr16
xchg
pop
pusha
mov
sbb
cwtl
imul
fsubl
sbb
add
loope
mov
cmp
leave
lods
pushf
mov
mov
mov
mov
fldl
inc
pop
pushf
mov
mov
int3
add
outsl
push
push
lcall
push
xor
add
mov
inc
mov
or
test
xlat
inc
sarb
cmp
in
dec
sub
lcall
and
mov
enter
stos
mov
subb
inc
sub
scas
jbe
cltd
cmp
int3
and
mov
out
pop
cs
out
xchg
shrb
pop
scas
sub
lret
and
xchg
in
mov
or
push
rorb
test
stc
ret
js
push
fists
pop
mov
pop
mov
sahf
pop
call
ja
repnz
sub
addb
jl
aad
pop
jg
in
mov
js
dec
mov
in
cmpsb
scas
je
cmp
mov
mov
xchg
cmpsw
sarb
or
aaa
mov
mov
repz
cld
cmp
jne
jno
jecxz
jg
adc
and
mov
roll
ja
jp
inc
cmp
loope
adc
aad
xor
and
push
lret
movsl
addl
das
and
and
and
pop
xchg
mov
inc
mov
dec
mov
jmp
mov
jae
jb
xor
cmp
mov
cmp
inc
aas
orl
icebp
mov
inc
sub
jg
sbb
or
iret
cmp
jge
jb
push
jmp
out
and
repz
sub
add
jo
icebp
sbb
in
les
mov
jo
inc
insl
mov
cmp
cltd
mov
lret
cmpsl
adc
notb
jno
movsb
lods
push
cmp
sub
stos
es
arpl
xchg
xor
rcrl
ja
xchg
inc
mov
dec
cmc
rcrb
mov
sbb
dec
in
add
mov
xor
inc
xor
mov
mov
and
mov
pop
dec
out
imul
sbb
mov
loope
loopne
ficompl
popf
imul
movsl
dec
and
add
dec
push
push
dec
jge
test
cltd
or
push
insl
adc
mov
outsl
jbe
ficoms
lds
sbb
xlat
imul
jne
movsb
mull
addl
outsb
sbb
xor
hlt
jb
pushl
inc
fimuls
repnz
ret
add
sbb
xchg
insl
shr
lcall
pop
pop
call
popf
push
mov
adcl
pop
push
xor
or
imull
lahf
adc
and
daa
sbb
mov
and
mov
pop
mov
jle
aas
test
xor
mov
cltd
daa
in
xchg
lea
int
sbb
ljmp
adc
sbb
inc
loope
jb
fbstp
test
int3
mov
mov
pop
imul
scas
xchg
mov
jmp
xchg
add
pusha
test
dec
in
decl
test
inc
mov
jmp
sbb
jge
shll
shrb
das
add
ss
jne
mov
sub
pushf
fistl
es
fisubrl
xchg
notb
sub
xchg
fdivs
sub
imul
push
xchg
jno
ljmp
push
stc
call
jne
adc
pop
or
or
jge
cmp
out
sub
pop
and
fistl
jmp
icebp
cli
inc
sbb
jmp
xchg
cmp
pop
inc
sahf
ror
xchg
fwait
int
dec
mov
test
mov
std
in
loopne
lods
jbe
adc
test
movsl
mov
jmp
out
lcall
jp
sub
pop
lds
or
out
cmp
repz
ds
xchg
dec
popa
inc
nop
fadds
sbb
mov
inc
ss
ffree
in
and
or
jns
ret
jl,pt
inc
test
lahf
xchg
inc
mov
jle
pop
test
inc
lock
in
fs
and
inc
lods
mov
push
pop
in
ljmp
dec
sbb
lds
mov
sub
outsb
cmpsl
ret
mov
rol
sub
shll
popf
andl
inc
push
cmp
adc
int3
xor
sbb
adcl
pop
push
inc
repz
das
mov
jbe
call
int3
addr16
lcall
mov
mov
mov
jns
jg
icebp
mov
mov
jb
xor
mov
xor
dec
adc
popf
hlt
in
sub
arpl
xor
and
push
push
dec
cmp
dec
pusha
mov
adcl
inc
mov
addr16
lret
jecxz
mov
lods
dec
add
movl
push
cmpsl
pop
lock
popf
pushf
arpl
push
loop
mov
loop
lea
rcl
mov
nop
pop
loope
in
fcoml
outsb
dec
jo
enter
mov
jle
movsb
in
into
repnz
jg
dec
push
mov
sti
imul
adc
xchg
testl
jle
mov
arpl
xchg
mov
icebp
mov
fisttpl
inc
ret
popa
les
jp
std
dec
movb
sub
lahf
loope
push
je
jecxz
in
xchg
xor
lods
movsb
inc
stc
stc
lock
xchg
lock
test
std
cmp
aam
dec
jp
ffreep
cmpsb
sbb
jp
leave
mov
leave
iret
adc
lods
ja
out
pop
aaa
inc
pop
mov
ror
sbb
xchg
jns
lea
ficomps
stc
cmpsb
outsl
add
or
add
lock
imul
push
mov
clc
pop
sub
jns
mov
adc
in
mov
fldl
insl
cwtl
xchg
push
mov
mov
mov
xchg
scas
int3
repz
hlt
mov
adcl
loope
orb
sbb
in
adc
xor
rorb
jmp
push
xor
sub
jns
in
stos
mov
sbb
push
and
ret
scas
ds
js
mov
scas
mov
xchg
pusha
add
pop
inc
and
mov
jnp
cmpsb
stos
lea
xlat
add
setnp
mov
sub
aad
adc
scas
cmp
outsl
test
and
xor
mov
and
daa
rcr
push
in
push
aas
adc
scas
scas
mov
mov
pusha
fnsave
and
es
jmp
aas
cli
adc
setae
mov
dec
and
loope
xor
lret
pusha
adc
xlat
repz
jns
adc
pop
pop
std
fiaddl
out
cmp
adc
pop
and
jl
scas
jl
and
mov
fists
ja
ljmp
add
push
mov
mov
lahf
xchg
mov
andl
movsb
mov
pop
lret
mov
or
jmp
jp
mov
clc
or
ss
fsubp
jb
sub
gs
push
shrl
iret
stos
int3
jns
cmpsb
push
outsl
cmp
push
pop
and
inc
mov
inc
jb
push
enter
sbb
sahf
adc
xor
in
push
mov
dec
loop
pop
or
mov
xchg
clc
mov
mov
and
dec
mov
sbb
fsubrl
outsb
lcall
sbbl
mull
push
aam
sub
dec
test
sub
and
dec
and
mov
pop
cli
lea
stc
andl
into
bound
xchg
pop
imul
pop
dec
xchg
adc
mov
jp
mov
xchg
push
test
dec
or
mov
xor
mov
rclb
and
notb
out
push
adc
cmovno
add
je
add
sub
and
inc
ds
mov
jnp
fildll
js
loop
xlat
decb
iret
stc
lods
jmp
inc
pushl
insb
outsb
mov
sbb
mov
fildl
aaa
test
xchg
in
outsl
xor
jp
cs
lods
std
lret
push
xor
into
jb
xlat
adc
xchg
pop
inc
cmpl
mov
mov
mov
cmpsb
mov
mov
adc
fstpl
xchg
adc
loop
je
stos
jae
push
nop
or
gs
repnz
data16
cmp
js
jo
and
nop
out
cld
pop
mov
fiadds
lea
cmp
stos
mov
clc
out
sbb
pop
outsl
mov
dec
out
es
mov
nop
and
jecxz
push
pop
gs
push
mov
adc
jecxz
pop
xchg
movsl
mov
cmp
pusha
xchg
nop
jne
xchg
enter
push
out
mov
test
fnstenv
insb
cmp
test
ret
jno
shl
fldcw
fbld
sbb
add
add
jp
xchg
adcb
xor
or
add
arpl
loope
xor
aad
jg
cmp
out
bound
dec
jnp
lods
repz
push
sub
and
icebp
mov
jno
flds
lock
aad
sbbl
mov
loope
mov
push
vpperm
jne,pn
loopne
add
xchg
and
int3
ret
xchg
jle
pop
jl
sbb
dec
xor
pushf
aam
test
lret
popa
sub
popf
jmp
push
lods
test
xor
imul
xor
push
cmp
jns
mov
jb
in
adc
mov
xchg
sarb
mov
fdivrl
movsl
pusha
sub
in
or
add
xchg
push
arpl
decb
in
dec
mov
hlt
jb
fsts
sbb
adc
xchg
in
mov
shlb
in
and
cli
repz
iret
aam
mov
or
jbe
and
movsl
outsb
scas
scas
outsl
js
and
lods
aad
pop
mov
ret
dec
fs
push
jbe
fisubrs
sub
sahf
mov
mov
and
xchg
sbb
lds
test
push
outsl
fsubrs
xchg
dec
push
cmp
lret
xor
pusha
lods
or
popa
movsl
addl
mov
shrb
daa
xchg
mov
arpl
mov
xchg
idivl
cs
xchg
adc
movsl
fwait
dec
mov
bound
mov
das
in
inc
out
pop
icebp
out
fstpt
inc
inc
sbb
push
sbb
push
fisttpll
pop
arpl
sub
mov
stos
sub
jnp
and
push
cmp
xor
push
cmpsl
nop
lods
push
mov
ret
fbld
insb
sbb
test
xchg
imul
sub
lods
gs
lret
or
add
and
loope
js
cs
ret
iret
mov
lock
daa
sbb
jno
add
mov
push
aaa
sahf
vmread
cwtl
sti
push
loop
add
shlb
fldl2e
cwtl
in
jge
sbb
loop
data16
jmp
mov
addr16
cmp
loop
lods
hlt
lds
sti
inc
or
sbb
push
inc
inc
sahf
shl
add
scas
popf
shrb
nopl
cld
sbb
sub
mov
fsubrl
cli
fisubl
std
in
mov
jbe
mov
ljmp
push
aas
pop
loopne
jle
jecxz
xor
cmp
inc
adc
jno
add
mul
cmp
adc
add
in
and
fidivrl
inc
movsb
aam
iret
adc
jne
dec
imul
xchg
movsb
sbb
jae
repnz
adc
xor
fwait
xchg
mov
sbb
nop
or
pop
in
mov
cmpsb
stos
inc
mov
negb
test
pop
stos
jbe
mov
mov
incb
lock
es
mov
inc
xchg
aam
xchg
int3
in
test
jecxz
and
sbb
insb
imul
push
push
adc
and
scas
or
divb
lods
mov
insl
mov
shl
mov
iret
inc
int
rclb
mov
std
or
jmp
inc
xchg
ljmp
adc
cmp
inc
sub
dec
cmp
xor
mov
test
adc
xchg
xor
sbb
pop
das
xchg
ret
pop
sub
testl
and
daa
cmpsl
lcall
mov
test
ja
add
and
sbb
cltd
addr16
push
xchg
sbb
add
sahf
add
mov
inc
cltd
out
fisubl
push
mov
leave
pop
sarl
mov
cmp
xchg
outsb
mov
push
scas
aaa
ficoms
jbe
out
negb
loopnew
popl
stos
cmp
mov
or
movsb
int3
repz
mov
imul
imul
out
ficoml
xchg
rcrb
stc
inc
lret
lahf
inc
inc
mov
cmp
mov
out
ljmp
inc
cmpsb
cmp
ret
pop
loopne
shrl
mov
out
inc
ficompl
and
adc
fmulp
and
fdivrs
add
mov
mov
ss
int3
jb
inc
mov
addl
int3
or
pop
push
cltd
testl
imul
pop
mov
mov
fnstenv
push
arpl
das
cmp
aam
insb
int3
lret
outsl
shl
outsb
push
sub
pusha
lods
jae
inc
inc
repnz
inc
out
js
pop
insl
push
pop
push
xchg
mov
pop
sub
cmp
mov
xchg
je
mov
sub
cmp
push
lret
dec
push
es
xor
scas
cmpsl
fbstp
mov
jecxz
rcrl
repnz
mov
xchg
js
mov
pop
or
push
scas
callw
bound
mov
push
add
xchg
ljmp
pop
or
ss
pop
shl
sti
or
shll
in
cmpsl
test
rcrl
push
addl
stos
jnp
dec
js
cwtl
jge
mov
sbb
clc
insb
cmp
daa
hlt
pusha
cmpsb
dec
inc
enter
jle
scas
xchg
arpl
pop
sti
loop
mov
mov
loope
fbstp
imul
out
outsl
fiadds
sbb
cmp
test
xchg
pop
jno
add
ja
das
imul
out
dec
mov
popa
push
hlt
xor
lahf
mov
loope
data16
cs
sbb
or
push
push
mov
cs
mov
iret
ret
lcall
sti
and
lcall
sbbb
mov
push
scas
sti
loop
or
push
dec
mov
adc
dec
or
mov
add
add
jne
inc
mov
andb
stos
xor
test
adc
clc
rclb
sbb
loop
jmp
sti
jmp
fucom
jne
pop
fidivrs
mov
ret
int
pop
push
pusha
imul
in
mov
xor
enter
popa
and
rolb
lock
adc
or
add
xchg
sbb
dec
sub
adc
xchg
adcl
xchg
push
jl
popf
lods
or
mov
sbb
and
xchg
xchg
push
jmp
mov
repz
push
mov
push
adc
or
mov
je
mov
ds
dec
idivb
ja
cld
enter
pusha
dec
cli
mov
push
fcmovnu
inc
lds
xchg
push
mov
out
cmp
cmp
cmpsl
mov
dec
mov
jmp
or
adc
sar
ss
and
fs
stc
push
enter
fs
xchg
cli
jb
push
enter
or
lods
or
sarl
std
fwait
arpl
or
lret
and
int3
mov
push
dec
push
xchg
cltd
adc
xchg
pop
out
jmp
lahf
jb
sbb
lcall
movsl
mov
lods
mov
sub
sub
inc
push
outsl
push
dec
sbb
test
outsl
and
icebp
cmpb
mov
cmpsb
leave
add
xor
cmp
pop
push
push
add
andl
int3
popa
inc
sti
mov
lods
orl
movsb
pop
xchg
lock
mov
push
jbe
call
mov
cs
leave
aaa
lret
stos
mov
cld
loopne
daa
pop
add
or
xchg
mov
xchg
cld
cwtl
jp
aas
es
in
dec
lods
gs
ljmp
xchg
mov
jns
push
test
test
jae
out
mov
ljmp
addr16
in
mov
aad
sub
adc
shr
cmc
cltd
scas
pushf
adc
data16
xor
dec
add
push
mov
inc
movl
lea
xor
mov
sbb
pop
mov
xor
arpl
mov
cmp
cmp
sbb
inc
dec
dec
sbb
mov
mov
dec
or
gs
inc
mov
arpl
or
rol
leave
sub
jle
pop
jmp
sarl
and
push
mov
outsb
inc
mov
int
xorl
stc
or
cmp
fs
lods
nop
mov
adc
jge
cld
test
and
jmp
jno
gs
pop
push
dec
daa
dec
xlat
mov
popf
lock
lcall
aad
fcomip
ffreep
xchg
js
in
ret
lods
jne
inc
jnp
ja
pop
ljmp
add
mov
arpl
lods
adc
mov
in
imul
lods
test
pop
cmp
icebp
popa
loopne
sbb
mov
xor
mov
sti
shrl
jecxz
mov
cmpsl
lds
sub
lahf
insb
imul
xor
cmp
cs
movsl
out
push
xchg
test
xchg
jbe
es
adc
rol
loope
out
and
shrl
inc
out
add
jne
jb
pop
or
pop
dec
je
mov
mov
and
push
mov
lods
enter
adc
xchg
sti
aaa
xchg
stos
mov
inc
loope
pop
and
dec
xchg
cmpl
cmc
add
sub
jle
addr16
add
es
arpl
fnstenv
sbb
out
adc
scas
inc
mov
cmp
cmp
pop
or
adc
mov
dec
test
sbb
icebp
fidivrl
orb
ret
pop
pop
ja
jo
gs
or
loope
mov
inc
sub
xchg
sbb
xchg
jo
push
jecxz
out
sub
push
dec
cmp
into
inc
mov
lahf
clc
adc
mov
insb
sub
sub
sub
loopne
icebp
inc
pushf
je
dec
xor
or
jp
movsb
fs
clc
mov
jnp
jmp
sahf
mov
data16
adc
cmp
inc
js
dec
dec
lods
or
out
orl
aad
shlb
loop
into
test
repnz
fnsave
cmp
scas
mov
lods
or
repnz
int3
pop
jo
sahf
xchg
push
adc
jns
pop
jne
clc
jns
push
mov
out
xchg
jl
push
dec
ss
jo
imul
adc
movsb
sub
movsb
dec
inc
push
mov
cmpsb
xor
or
not
and
add
testb
call
test
repz
js
ljmp
cld
pushf
push
sbb
ja
pop
cmp
into
aad
in
sub
xchg
push
js
shll
rcrb
inc
lods
insl
and
sahf
jmp
aam
sbb
jnp
adc
fbstp
nop
pop
loopne
pop
testl
sbbl
adc
loopne
inc
adc
and
cwtl
push
mov
mov
and
and
jnp
dec
xchg
pop
mov
filds
pop
add
repnz
gs
in
or
clc
shlb
std
mov
mov
aam
sub
mov
dec
lahf
insl
adc
fldt
mov
add
inc
sbb
add
adc
and
mov
mov
popa
add
lea
mov
dec
or
add
add
sub
sub
div
add
jns
xchg
adc
ss
pop
push
sub
jmp
inc
testl
mov
jo
std
xor
scas
mov
add
or
out
and
or
jo
int3
into
call
test
vpandn
add
adc
fsubrs
lea
inc
shrb
inc
xor
adcl
fldt
jp
lds
push
mov
loope
fdivrl
outsl
leave
out
mov
mov
push
das
stos
lock
push
pop
movsb
push
adc
cmp
lock
aaa
xor
lds
test
clc
ret
ljmp
ficompl
push
lret
test
mov
xor
mov
pop
xchg
repnz
pop
jno
sbb
shl
lcall
push
pop
bound
mov
xor
adc
xchg
repnz
xor
xchg
mov
lods
mov
fisubrl
xor
xor
outsl
shll
and
xchg
stc
mov
cmpsb
push
in
mov
bound
mov
mov
stc
setno
mov
scas
rcl
xchg
imul
cmp
daa
sbb
mov
ja
cmpsb
and
and
out
movsl
ds
mov
lret
cmp
inc
push
mov
ficoml
inc
push
and
or
repnz
icebp
inc
inc
cli
push
iret
pop
fwait
pop
add
imull
adc
bound
nop
sbb
and
cmp
sbb
mov
xor
mov
daa
push
insb
hlt
testb
xchg
int3
mov
pop
test
rclb
and
in
arpl
popf
pop
xchg
pop
mov
sbb
dec
sbb
inc
xor
add
call
and
shl
xor
test
xchg
pushf
and
add
rcll
scas
jb
in
out
mov
xchg
and
popa
mov
pop
movsb
icebp
jbe
or
in
xchg
andb
lret
mov
sbb
xchg
mov
adc
dec
fadds
push
aas
popf
outsl
xchg
sub
mov
aad
mov
mov
xor
dec
dec
push
push
pop
negb
in
jecxz
sbbl
sar
jno
lods
push
sbb
popa
les
push
ss
inc
mov
add
ljmp
enter
not
rcrl
lods
dec
dec
in
mov
adc
int
push
movsb
fbstp
xchg
inc
cmp
ljmp
mov
les
xchg
loop
and
lahf
jl
insl
dec
mov
xchg
sbb
fs
int3
pop
xchg
outsl
dec
cmp
pusha
ljmp
dec
movsb
rolb
push
out
cmp
adc
scas
mov
insb
or
lock
in
les
xchg
aas
pop
cmpsb
xchg
dec
jle
aad
test
adc
mov
loop
lret
and
jbe
sub
gs
dec
aas
xchg
iret
dec
sub
add
aaa
dec
mov
adc
mov
add
jns
js
inc
imul
hlt
push
scas
adc
jle
cmp
aad
shrb
mov
scas
mov
cmp
scas
mov
cwtl
addr16
or
pop
loopne
or
dec
mov
dec
mov
push
inc
adc
xor
add
inc
std
into
adc
add
push
dec
stos
aam
adc
mov
sbb
dec
or
mov
fnstenv
jp
ss
inc
xchg
xchg
cmp
pop
jo
push
pop
fsubr
pop
dec
imul
adc
or
xor
mov
sub
dec
mov
cmp
jg
popf
jecxz
jne
pushf
adc
adc
xchg
dec
sbbl
pop
mov
dec
and
sub
sbb
jecxz
jb
out
or
repnz
jo
cli
inc
cld
mov
lea
lods
inc
mov
add
pop
jp
add
dec
gs
xchg
cmpsl
mov
pop
mov
push
popf
pop
sbb
xchg
std
cwtl
jp
jno
or
fistl
fmuls
pop
xchg
inc
dec
cmpsb
ss
in
ret
cltd
push
mov
pop
pop
lds
andl
movsl
mov
cmc
mov
scas
int3
mov
xor
hlt
xlat
xorl
lds
xchg
arpl
and
or
mov
das
test
in
fdivs
mov
fisubrs
jae
add
inc
insb
inc
sbb
shrb
ja
in
sub
mov
ret
pusha
test
sti
out
icebp
mov
ja
popa
aas
pop
cld
mov
dec
sbb
mov
or
pushf
ret
into
dec
test
ja
jns
push
popf
jmp
out
arpl
and
mov
mov
xchg
push
fcomp
lret
mov
stos
mov
pop
jno
adc
out
out
push
sub
out
dec
mov
add
sbb
fcompl
jle
jne
push
mov
fs
test
imul
cmp
mov
push
rorl
xchg
scas
sub
jp
jmp
test
pop
pop
push
jae
ja
mov
ret
dec
jmp
pop
cmp
test
outsl
lock
sbb
mov
adc
mov
shrl
jge
shlb
xchg
imul
into
subl
xchg
sbb
sub
mov
sti
xor
out
mov
cs
sbb
cli
mov
or
mov
sbb
dec
fcoms
jno
dec
mov
adc
bound
sarl
fs
adcb
dec
lcall
das
pop
addr16
adc
inc
mov
leave
xor
js
jl
xor
cmp
in
inc
nop
loop
aas
mov
jae
out
and
fidivs
push
imul
cli
cmp
ret
jae
lret
sahf
dec
cld
push
fsubl
stos
arpl
dec
cli
int
xorl
mov
movsb
cmc
int3
push
jge
je
nop
dec
sbb
lods
xchg
adc
or
push
popa
push
cs
popf
in
cmp
clc
inc
cmpsb
mov
aaa
adc
addr16
insb
std
in
lahf
iret
dec
jns
repz
jl
fnstenv
lcall
xchg
jb
insl
mov
leave
sti
test
mov
push
std
adc
out
push
xchg
gs
xchg
in
or
lahf
fwait
jge
arpl
ds
ljmp
sub
push
fwait
push
lock
iret
popf
decb
xor
xor
jp
push
divl
push
roll
and
mov
imul
or
loope
and
mov
sbbb
sbb
sub
and
fs
inc
xor
xor
pop
outsl
cmp
insb
mov
pop
sub
mov
cmp
and
pushf
mov
int
aam
sbb
or
inc
or
sub
xor
pop
xor
lahf
dec
mov
into
cltd
rcrb
xchg
aad
divl
repz
xor
movsl
adc
enter
ja
dec
sub
ret
fiadds
lea
ret
jmp
stc
out
sub
shlb
out
iret
es
in
sub
or
rcrl
aam
mov
or
and
jge
and
ds
sbb
xor
inc
popf
mov
mov
push
mov
subl
xchg
cmpsl
nop
leave
adc
movsl
push
pop
mov
clc
shl
test
fcmovbe
mov
jbe
mov
cmp
xchg
cmp
fcmovnb
ret
pop
jmp
std
scas
ljmp
movsl
xlat
cmc
sbb
cld
and
xchg
js
cmpsl
dec
fdivl
push
out
scas
xchg
cmc
jbe
jae
call
sti
push
or
add
call
mov
mov
js
push
mov
sbb
pop
ficoml
push
outsb
je
cmpsb
pop
clc
fs
xchg
jg
aas
xor
nop
aad
cld
stos
nop
cmpb
in
fstpt
xchg
fs
jbe
push
sub
push
cmp
push
jo
jge
out
icebp
cmpsb
mov
sbb
jne
cmp
cmp
scas
jg
insl
jmp
inc
popa
cmpsb
sbb
in
jne
sbb
sti
ficoms
cmp
out
sar
mov
inc
aaa
jbe
ds
mov
out
jbe,pn
cmc
mov
dec
jl
mov
scas
inc
ficoml
js
pop
lret
xchg
ficomps
sub
test
shl
add
jmp
cwtl
out
xlat
pop
fcompl
mov
jge
add
hlt
lcall
jo
das
xlat
fnstcw
outsb
mov
cmp
dec
int3
fsub
sbb
leave
loop
pop
add
fsubrs
ror
xchg
cmpsb
mov
pop
cmc
in
fdivr
into
jle
jle
gs
in
int3
and
andb
xchg
mov
xchg
xor
lcall
mov
or
xchg
mov
xchg
adc
sbb
push
mov
cmp
leave
movsb
inc
loope
jmp
aas
jmp
pushf
div
xor
test
fwait
cmpb
or
and
sbb
adc
jge
adc
fadds
outsl
xchg
clc
jne
lcall
fistl
movsl
out
repz
cwtl
stc
mov
mov
add
rcrl
cmp
rol
test
or
nopl
dec
aas
enter
fimull
pop
push
sub
movsb
fucompp
and
ds
mov
incl
jnp
pop
fsubrl
ljmp
jp
sbb
sbbl
xchg
imul
sbb
xlat
pop
les
test
int3
dec
mov
dec
and
dec
mov
dec
nop
sub
js
mov
mov
hlt
ss
jp
mov
clc
add
xor
mov
mov
nop
daa
dec
mov
cld
add
jle
inc
sti
shll
jns
pop
push
pop
xchg
push
xchg
mov
mov
cmp
repnz
mov
inc
cmp
xorl
xor
jp
rorb
fisubrl
sbb
hlt
pop
xor
fbstp
cmp
aam
test
xor
in
mov
lret
inc
push
neg
inc
hlt
cmp
add
enter
test
insb
add
hlt
xchg
cmpsl
adcl
xor
inc
pop
xchg
add
lds
lock
lea
xor
js
cmc
idiv
lahf
mov
notl
outsb
sbb
std
jge
ljmp
pop
push
lods
dec
push
dec
jge
inc
cld
imul
xchg
fs
pop
pop
cmp
sub
daa
mov
sbbb
cmp
lret
test
add
jecxz
mov
leave
xor
popf
xor
das
aad
add
je
mov
cmpsl
or
mov
jno
ljmp
int3
ret
les
sbb
leave
sub
pop
adc
lret
pop
cmp
repz
jne
mov
jp
jo
mov
push
rorw
movsl
push
test
sbb
sbb
xchg
call
sub
pop
js
dec
imul
add
add
xchg
fnstcw
cmp
jge
dec
cs
enter
in
and
jle
mov
mov
icebp
or
cs
mov
fstps
dec
dec
cmp
push
or
xor
hlt
movsb
daa
fadds
mov
fsubs
pop
adcb
xor
lahf
sub
shr
ret
adc
push
leave
xchg
bswap
add
mov
fs
sti
mov
xor
sbb
outsb
push
mov
pusha
int3
arpl
popa
xor
xchg
pop
fistl
sti
sbb
mov
cltd
adc
and
loopne
cltd
mov
stos
push
aam
sub
adc
shll
inc
jae
rolb
ljmp
xchg
xchg
loop
idiv
push
mov
mov
lods
and
xor
loop
mulb
sbb
mov
leave
push
daa
dec
scas
outsb
test
addb
aaa
xchg
inc
push
add
sbb
inc
ret
imul
mov
fidivrl
fists
pop
aad
push
lds
addr16
outsl
dec
add
sahf
fistpll
fldt
loop
xchg
xor
pop
push
icebp
test
lcall
add
sub
push
leave
arpl
or
mov
pop
daa
fwait
test
sti
outsb
roll
xchg
and
int3
cmpsb
xchg
dec
idivb
jns
xchg
test
dec
sbb
and
in
jno
test
test
xlat
xchg
cli
adc
xchg
lcall
mov
outsb
call
xor
cmp
pop
sbb
adc
bound
xor
negb
jne
jg
xor
cmp
aad
mov
and
sub
sub
in
adc
push
mov
sbb
jne
mov
xor
lahf
cmc
pop
mov
xor
sub
out
out
insb
mov
push
jle
xchg
jne
add
xchg
jbe
fucom
lcall
loop
push
lea
jg
sti
pushf
inc
sub
out
sbb
out
aad
xchg
dec
std
mov
test
cld
mov
jp
fdivs
xlat
xchg
mov
jle
dec
xchg
movsb
daa
pop
xor
mov
fdiv
stos
outsb
mov
sahf
xlat
inc
outsl
imul
or
cmp
mov
mov
inc
mov
sub
loop
xchg
mov
mov
and
mov
test
pop
pop
cmpsb
movsl
fmul
mov
add
pop
fcompl
and
mov
mov
fistl
dec
jne
xchg
int3
andps
mov
in
jmp
out
jge
fadd
jge
movsb
push
adc
out
push
jecxz
sti
popa
add
mov
test
push
xor
sbb
mov
test
cs
rclb
mov
shrb
mov
dec
dec
push
sub
xchg
movsb
es
and
add
cmp
push
pop
mov
inc
scas
call
sbb
xchg
inc
cmp
inc
imul
jecxz
sub
shll
sbb
scas
scas
dec
pop
mov
sub
int
dec
jo
push
push
cwtl
test
inc
mov
loopne
shrl
mov
adc
hlt
clc
in
add
mov
xor
mov
sub
lret
dec
scas
ret
das
jge
inc
jb
adc
fldcw
and
insb
add
out
cmp
ljmp
dec
adcb
movsb
clc
andb
push
sti
cs
dec
pop
mov
xchg
and
icebp
jmp
in
int
jb
cmc
sbb
push
enter
xchg
mov
hlt
dec
mov
pop
repnz
stc
sahf
test
scas
ds
xchg
dec
pop
xor
mov
xchg
cltd
call
xor
es
les
pop
adc
imul
or
push
movl
push
mov
lahf
adc
adc
inc
lret
sbb
push
sbb
xchg
jnp
repnz
push
repz
xchg
xchg
or
ss
xchg
push
or
dec
push
jae
inc
sub
mov
mov
mov
add
or
repz
jae
fildll
call
or
mov
xor
in
gs
push
cmp
xchg
arpl
mov
pop
lock
mov
mov
jle
out
push
mov
dec
out
jmp
jmp
jb
outsb
aam
jg
adc
aad
sahf
repnz
push
loopne
xchg
mov
sbb
adc
sahf
int
xor
jp
sub
into
je
mov
jge
popl
mov
mov
dec
push
jno
in
aam
insb
xchg
inc
dec
in
mov
divb
es
fnstcw
xchg
xchg
mul
cmp
mov
mov
xchg
call
xchg
scas
ret
inc
jecxz
fnstsw
call
inc
cmp
cmpsw
stc
stos
in
push
add
and
fidivrs
push
push
orb
cmp
jbe
or
sub
lret
mov
push
aad
ss
out
jg
mov
stos
mov
mov
dec
mov
and
sub
add
mov
inc
ljmp
push
or
xchg
dec
sub
stos
scas
in
push
js
aad
mov
out
inc
movsl
ffree
pop
fstps
xchg
xor
fmuls
sti
outsb
shlb
adc
sub
xchg
jge
mov
jg
ror
movb
bnd
sub
add
dec
scas
std
fbld
std
test
dec
and
stos
sub
fs
push
fwait
std
mov
dec
pop
int3
pop
fidivrs
outsb
hlt
jle
jb
mov
jecxz
or
repz
xor
fsubs
dec
xor
ud2
test
lock
dec
cmpsb
sbbl
pushf
and
daa
add
fisubl
int3
xor
int3
mov
ss
arpl
adc
jae
int3
fmulp
stos
add
fwait
jp
cmp
outsl
or
rorb
xchg
jnp
and
lock
test
mov
test
jmp
fildl
data16
or
pop
out
daa
lcall
xchg
push
fldenv
add
adc
pop
int
mov
xor
hlt
icebp
mov
xor
sbb
dec
test
push
mov
xchg
and
imul
mov
test
jb
daa
dec
jg
js
and
jg
repnz
outsb
inc
loop
data16
fnsave
call
test
lcall
pop
sahf
sub
sahf
sbb
imul
jmp
inc
inc
out
mov
cmovl
adc
loopne
jp
adc
jb
push
ljmp
in
inc
ror
jae
lahf
mov
iret
dec
xchg
in
lods
dec
pop
add
adc
outsw
shrd
out
xchg
adcb
mov
jmp
fdivrl
out
mov
add
push
mov
mov
scas
dec
sbb
inc
cmp
je
cmpsl
mov
pop
in
sbb
mov
fstps
inc
sarl
mov
stos
cwtl
cmpsb
lds
scas
lds
fadd
cmp
push
addr16
jmp
push
pop
mov
pop
xchg
cwtl
je
adc
and
xor
push
mov
mov
imul
into
xor
xor
jl
aas
sub
jbe
mov
popf
int3
ljmp
jg
mul
clc
cmp
out
loopne
and
and
mov
and
xchg
mov
call
dec
mov
dec
dec
push
shlb
mov
ficoml
imul
xchg
lea
dec
xor
mov
sbb
shr
cltd
lds
sub
mov
mov
sbb
xchg
sbb
sbb
inc
push
hlt
iret
cltd
sbb
stos
sbb
and
aaa
inc
pop
shll
cwtl
xor
lods
xchg
fbld
adc
test
adc
mov
push
mov
int
ret
jmp
pop
or
and
daa
and
bound
cmp
jae
push
pop
scas
lea
lock
mov
clc
stos
push
stc
in
call
outsb
lods
popf
call
test
lahf
clc
pop
sbb
cmp
ficompl
flds
out
inc
xchg
pop
cmpsb
pop
pop
xchg
lea
aas
sub
jmp
push
xchg
push
inc
cmp
or
aaa
xor
out
repnz
icebp
scas
push
mov
addb
mov
jle
dec
mov
mov
outsl
pop
lods
cmp
mov
in
mov
jno
lods
adc
imul
xor
aas
lcall
cli
mov
cmp
push
xchg
out
pop
lods
or
lahf
or
and
xchg
ja
adc
mov
scas
push
push
in
sub
jbe
push
pop
inc
sbb
jmp
je
jo
daa
std
mov
sbb
add
xor
inc
mov
loope
in
push
mov
leave
dec
xor
lahf
inc
cmc
ja
pop
mov
mov
addr16
mov
sub
add
jns
popf
sub
out
cmp
loop
movsb
dec
lret
mov
imul
aas
cmpsl
pop
add
mov
mov
loope
loope
xchg
stos
and
outsb
test
jl
or
sub
jne
mov
mov
int
lock
lock
dec
aam
leave
mov
jg
mov
aam
mov
inc
dec
out
mov
sbb
pushf
mov
or
mov
sti
jl
fsts
dec
lahf
xor
rorl
xchg
mov
add
pop
mov
bound
mov
mov
cs
pop
sbb
cmp
xor
sub
sahf
lods
unpckhps
xchg
or
daa
lock
out
push
jb
loope
mov
aam
out
sbb
xchg
stos
out
scas
mov
fisubrl
rolb
adc
cltd
push
mov
mov
or
push
mov
incb
mov
inc
adc
and
jg
adc
pop
mov
jbe
mov
loope
in
pop
out
jge
shl
subb
add
movb
push
xlat
sbb
fadds
mov
enterw
andb
ds
sbb
daa
mov
mov
push
push
sbb
out
jge
fstl
push
leave
sub
in
test
andl
fs
ds
cmp
adc
adc
inc
mov
lret
adc
leave
inc
mov
adc
add
stos
jbe
dec
sti
sub
in
jnp
dec
xor
bound
fmuls
lcall
fsts
je
or
nop
and
fadds
mov
pusha
xlat
call
ja
xchg
mov
mov
lret
pop
push
jle
dec
aaa
test
bound
dec
dec
mov
cmpsl
leave
in
pop
gs
jo
or
and
ljmp
sbb
in
add
push
lcall
mov
ficoml
xor
inc
stos
push
cmpsl
push
and
movsb
rclb
mov
call
lock
xchg
mov
inc
inc
push
scas
sbb
popf
loop
pop
push
inc
add
test
loope
dec
popf
clc
cltd
cmp
push
add
stos
xchg
fistpll
hlt
stc
sahf
movsb
ss
cmp
fstpt
test
lret
mov
and
push
imul
sti
mov
sbb
in
cmp
outsl
aas
pop
push
aam
cs
les
in
mov
sub
cld
hlt
sarb
shl
or
sbb
sbb
lock
jg,pt
add
mov
add
cmpsl
in
je
or
insb
mov
mov
subb
das
mov
pop
rol
pop
lret
fnclex
xor
pop
mov
insb
orb
jae
aas
clc
in
rorl
sbb
pop
std
jbe
cmpsl
imul
inc
and
shrb
push
addb
lods
jo
aam
testb
xchg
xor
mov
movsb
or
push
inc
lret
ret
and
adc
nopl
iret
fcmovbe
mov
in
sbb
sbb
push
jo
mov
lock
loope
dec
jne
mov
and
les
inc
add
pushl
xchg
ret
loop
cmp
pusha
insl
dec
ljmp
cmpl
jmp
xlat
jg
inc
cmp
lret
aas
int3
jnp
and
in
out
add
mov
scas
mov
arpl
pop
shr
js
aas
adc
movsb
jae
adc
jge
inc
mov
mov
testb
stos
scas
or
xchg
pop
lret
shrl
cmp
mov
in
repnz
xor
fs
push
mov
cmp
or
mov
pop
lret
inc
pop
fs
in
rcrl
data16
pop
mov
iret
loopne
mov
or
pop
mov
stos
out
sub
aaa
int3
inc
pop
dec
sarl
xchg
add
xchg
pop
fwait
push
cld
push
xor
sub
and
ss
pop
imul
and
das
pop
xor
int
test
xchg
rclb
xor
adc
jge
add
aad
repz
adc
filds
cmp
xchg
and
ds
sub
ljmp
xor
jge
cmp
sub
push
adc
fdivrl
gs
mov
inc
outsb
cmp
inc
lea
jbe
out
xchg
mov
add
sarb
enter
sub
mov
test
scas
inc
sub
stos
sbb
cmpb
add
xlat
jno
enter
mov
xchg
add
push
sbb
mov
sahf
insb
or
push
lods
dec
ljmp
jbe
pusha
movl
bound
dec
sub
mov
dec
push
cmc
or
lods
xchg
int
adc
out
xor
add
mov
add
lea
daa
fmuls
xor
aad
gs
xor
imul
loop
cmp
cmp
inc
dec
stos
push
push
pop
push
cmp
and
or
jmp
imul
add
cmpsl
sahf
test
cli
aaa
aam
or
inc
push
push
xor
pop
stc
into
mov
je
test
pusha
jne
add
outsb
dec
ror
inc
loope
mov
sub
call
repz
in
lds
xchg
repnz
jle
sub
or
ljmp
jecxz
mov
out
ror
out
cs
jg
insl
inc
or
pop
test
xacquire
fnstsw
popa
out
jae
negb
into
mov
data16
pop
xor
sbb
sar
ret
pop
sbb
sbb
cmp
decb
das
imul
sbb
lret
push
loope
fsubs
pop
push
cmp
adc
push
ficomps
or
inc
mov
lret
mov
jmp
fldt
iret
sbb
clc
xchg
jl
sub
addr16
adcb
xchg
pop
jae
sbb
sub
fildll
pop
fcoml
outsb
loop
out
or
pop
fsubs
clc
pushf
fwait
cmp
test
lods
je
cmpsb
bnd
leave
scas
push
mov
ss
add
cmpsb
loop
lods
pop
mov
lds
xor
jno
enter
fists
fsubrs
dec
in
mov
outsl
inc
cwtl
leave
rcrb
sbb
lds
and
xchg
mov
stos
xor
jge
shlb
adc
ss
or
dec
xchg
pop
jbe
lcall
das
add
pop
mov
sub
dec
je
test
je
inc
test
mov
inc
pop
inc
and
mov
mov
stos
mov
add
into
stos
dec
dec
pop
cmp
inc
pop
pinsrw
adc
cmp
jmp
pop
int3
sti
mov
adc
xchg
adc
sub
cmp
and
inc
movsb
push
push
sbb
test
shll
out
popa
mov
sub
mov
adc
push
scas
lahf
mov
shll
jle,pn
clc
int
sub
scas
scas
sub
sub
mov
fsts
push
jnp
and
pop
mov
mov
push
loop
sub
sub
ret
dec
pop
faddp
loope
push
push
lret
ljmp
les
mov
sti
mov
pop
mov
cmp
mov
cmpsb
pop
or
add
xchg
loope
test
push
fs
inc
dec
icebp
inc
mov
push
stos
jnp
jle
ret
or
in
pop
sub
idivl
dec
xlat
iret
mulb
data16
cmp
nop
call
sbb
fsub
mov
lret
cmp
mov
sub
test
mov
mov
sbb
aam
push
xchg
fldl
dec
jno
cmp
jmp
lea
outsb
xor
sub
add
out
xor
ficoms
enter
into
or
jle
pop
mov
jmp
negl
adc
push
or
push
push
push
cs
pop
out
and
cltd
xchg
insb
shrl
add
lea
jmp
arpl
dec
fstl
out
pop
sub
xor
adc
and
out
inc
mov
mov
sub
sub
dec
xor
inc
sbb
add
gs
aad
fstl
daa
icebp
dec
xor
jmp
gs
repz
xchg
mov
push
mov
add
xchg
dec
push
fidivs
shll
add
aas
jle
adc
jmp
jmp
or
sbb
cmp
inc
sbb
push
sbbb
cltd
add
repz
call
mov
add
jmp
arpl
mov
sub
dec
sub
push
mov
push
sar
mov
jecxz
jmp
movb
lahf
call
dec
add
pop
mov
ljmp
mov
and
idivl
mov
push
mov
mov
repz
inc
cs
lahf
add
mov
sub
xchg
lcall
and
mov
mov
dec
hlt
fidivl
jmp
int3
inc
adc
adcb
aaa
inc
outsb
xchg
sub
or
loop
ja
sbb
je
jb
dec
cmc
push
fcom
outsl
push
sub
mov
movb
xor
pop
adc
ja
insb
rol
mov
add
loop
sbb
xchg
lret
hlt
sub
les
nop
aam
sub
lret
test
dec
xchg
fmulp
addr16
xor
mov
cmp
or
or
repnz
mov
inc
pop
repnz
dec
or
movsb
imulb
inc
mov
push
inc
js
outsl
mov
inc
jne
jecxz
cltd
imul
lcall
clc
add
and
and
mov
and
xor
mov
shrb
dec
pushf
aaa
stc
fs
dec
popf
add
xchg
and
add
pop
scas
shlb
ret
or
aam
cmp
scas
leave
xchg
xor
adc
mov
pop
sbb
jmp
out
pinsrw
orl
jae
mov
add
addl
mov
pop
or
xchg
cmp
pop
or
arpl
jl
cmp
push
in
int
jbe
cld
pushf
repnz
test
jb
pop
mov
movsl
jo
mov
rcrb
dec
mov
adc
adc
jbe
sub
sub
pop
pop
addr16
mov
loopne
inc
insl
js
sub
outsb
inc
outsl
into
mov
sbb
jnp
sbb
cli
sub
xor
cmp
and
pop
mov
repz
sub
pop
cs
addr16
lahf
nop
mov
cmp
mov
stc
jp
rcll
test
push
sarl
and
lods
xor
insl
jmp
push
roll
jle
push
loopne
lahf
testb
scas
jecxz
lock
xchg
cmp
mov
mov
adc
adc
daa
add
mov
jge
push
enter
aas
or
sbb
in
jne
sub
arpl
jmp
cmp
cmp
imul
in
cltd
mov
in
hlt
mov
inc
and
mov
dec
mov
mov
dec
sbb
jo
int3
loope
cmpsl
test
or
outsl
dec
jg
lret
sbb
sar
pushl
rcl
pop
aam
test
jecxz
popa
rorb
dec
std
faddp
rcl
inc
or
ss
sub
lods
pop
mov
into
sbb
push
pop
mov
or
mov
push
mov
test
adc
hlt
clc
nop
sbb
or
add
test
mov
shll
lret
lcall
mov
push
imul
add
rcrb
out
push
cli
inc
adc
ret
inc
pop
push
jp
jb
mov
push
add
insl
add
mov
aas
adc
push
clc
adc
das
dec
sub
push
sbb
cmpl
sbb
or
or
fisubrl
lds
test
inc
insl
test
call
jle
ljmp
mov
push
cmpsl
test
mov
xchg
outsl
inc
or
mov
mov
insb
or
sahf
cli
test
cld
push
inc
xchg
dec
push
dec
bound
pop
cs
push
gs
lods
scas
or
test
mov
ja
in
hlt
sub
lcall
scas
jo
push
jbe
jns
mov
loopne
push
dec
dec
js
jecxz
scas
xor
push
das
hlt
mov
insb
add
xchg
mov
insl
jnp
popf
sub
lds
mov
sub
jne
add
fidivrs
enter
dec
pusha
das
leave
jne
stos
insl
push
xor
cmpsb
dec
lods
std
inc
pop
lods
inc
mov
test
int3
movsb
and
std
pop
loopne
fiaddl
movsb
mov
pop
push
movups
inc
xchg
and
push
out
icebp
dec
stos
pop
and
sarb
xor
and
push
inc
rcl
inc
pop
add
cmpsl
jge
imul
push
lret
mov
lods
leave
jg
shlb
and
addr16
pop
jecxz
dec
inc
movsb
jb
cmpsl
aam
int
stc
popa
inc
mov
sbb
adc
lods
jge
mov
imul
adc
pop
mov
hlt
test
xchg
sbb
rorb
fs
xchg
leave
test
cmp
jecxz
add
or
ret
sbb
orl
sub
sbb
jmp
out
scas
pushf
popa
sbb
scas
pop
jne
jae
cmp
sbb
pop
cmpsb
lds
cltd
mov
push
xchg
adc
cs
and
enter
push
sbb
pusha
adc
aad
and
push
or
inc
mov
lock
incl
enter
push
mov
xchg
mov
clc
scas
dec
adc
xor
sbb
cwtl
repnz
scas
mov
iret
ja
inc
push
xchg
clc
hlt
repnz
sarl
pop
call
sub
insl
sub
mov
pop
xlat
adcl
jge
sub
aas
xlat
dec
insb
xchg
addr16
xchg
push
call
push
mov
jmp
int
jae
sbb
dec
ret
lahf
in
jbe
movsl
insl
fstl
add
outsl
jns
rorl
out
bnd
xorps
es
xor
jns
sbb
fs
aaa
or
clc
xor
pop
mov
mov
lret
call
mov
in
or
xchg
insb
js
imul
cwtl
aam
cld
sub
dec
mov
push
mov
loope
fsubl
dec
es
push
xor
add
cmp
addr16
in
or
cmp
cmp
sbb
xchg
sub
aaa
cmp
popf
mov
sti
mov
lret
std
mov
roll
sub
cmpsb
pushf
adc
jns
insb
pop
test
outsb
inc
lods
popf
and
aas
stos
mov
xor
arpl
xor
popa
lret
dec
or
xchg
and
xchg
xor
loop
push
imul
stos
subl
movsl
xchg
push
pop
or
loop
test
stos
xor
sub
mov
ftst
aad
testl
test
scas
inc
movsb
mov
sti
mov
adc
xchg
or
decb
mov
jbe
push
jp
inc
sbb
jo
xchg
pushf
adc
fwait
push
cmc
cli
push
leave
xchg
clc
sarl
das
lret
jo
or
loop
or
addr16
xor
jle
mov
andb
mov
shrb
inc
sbb
and
and
je
mov
xchg
or
xchg
es
cmp
sarb
out
in
test
or
xor
xor
test
call
sbb
test
mov
cmp
sub
cltd
ja
inc
sbb
in
push
push
int
lcall
cmpsl
ss
and
dec
dec
sbb
inc
frstor
pop
push
cmpsb
out
jo
push
scas
jo
movsl
stos
repnz
jb
push
in
xchg
mov
or
movsl
sbb
or
ret
mov
adc
inc
das
stc
mov
jns
jp
adc
notb
inc
xchg
arpl
lcall
outsl
adc
and
mov
movsl
pop
aaa
or
adc
repz
adc
jb
and
mov
mov
inc
mov
dec
sub
mov
or
sahf
jnp
or
sbb
mov
pop
xchg
mov
fistl
repnz
dec
in
scas
push
icebp
inc
dec
jno
push
pop
das
in
xchg
std
mov
cltd
fwait
cli
cs
repz
add
rcl
in
mov
or
jno
mov
cmpsl
pusha
mov
ds
xchg
xor
xchg
les
aam
jmp
clc
inc
mov
shr
add
push
fdivrs
fbld
out
jp
mov
loope
fs
dec
jns
inc
std
cli
lods
mov
cmpb
enter
push
and
inc
pop
jp
xlat
addr16
out
push
mov
dec
dec
add
mov
xor
enter
mov
xor
cmp
xchg
mov
add
rol
xlat
mov
js
bt
jne
and
loop
inc
loop
call
bound
fwait
sub
orb
andb
outsb
das
shrl
cmp
inc
push
jmp
hlt
faddl
clc
xchg
loop
jl
or
inc
sbb
dec
push
fcomp
and
and
lahf
xchg
jnp
stos
stos
lock
inc
data16
pop
lea
cmp
or
leave
mov
add
imul
cmc
hlt
lret
negl
je
andb
jl
test
jecxz
dec
mov
nop
imul
push
dec
mov
sbb
in
enter
mov
pop
sbb
cmpb
popf
jmp
pop
pop
dec
add
jnp
icebp
xchg
jno
ds
out
add
cld
aas
testl
jmp
sbb
or
xor
stos
dec
lds
scas
shlb
inc
pop
nop
push
nop
jno
imul
clc
and
cli
sbb
scas
and
bound
pop
mov
mov
and
cmp
test
pop
xchg
in
mov
sti
les
roll
pop
push
shlb
add
insl
mov
sbb
jmp
data16
out
dec
scas
mov
push
push
cmpsb
arpl
lds
aam
mov
mov
and
filds
adc
jl
mov
fiaddl
push
pop
inc
outsb
jle
mov
dec
pop
shll
mov
push
js
insb
or
adc
cmpsb
mov
aam
movsb
bound
inc
into
push
mov
fbld
mov
mov
mov
ret
add
sahf
aaa
leave
es
inc
inc
add
push
sbb
dec
jno
xor
xchg
sub
jl
in
mov
mov
xorl
adc
sbb
cld
ljmp
jae
dec
jecxz
sbb
insb
or
mov
jb
adc
hlt
cs
lea
add
lods
dec
mov
out
and
movsb
mov
push
mov
lcall
lock
les
sub
xor
in
xchg
lods
orl
inc
mov
xor
push
or
ret
cli
adc
inc
dec
dec
mov
leave
add
mov
dec
int3
xchg
inc
gs
xor
loop
pop
adc
cmpsb
orb
fiaddl
adc
outsb
cmp
jo
and
push
pushf
or
repnz
out
adc
xchg
mov
bound
cmp
cmc
jge
push
cmpsb
xchg
cmp
pop
or
and
xor
add
cmp
mov
lock
mov
in
into
mov
mov
xchg
loop
add
mov
in
push
cmp
scas
andl
test
and
lahf
les
mov
push
and
std
dec
sub
pop
push
std
add
lret
sahf
incl
add
mov
push
mov
and
cmp
rcr
inc
fildll
ret
dec
dec
mov
aaa
cmp
rcrl
or
enter
jb
push
pop
sahf
mov
sahf
jns
fsub
sub
imul
dec
jmp
leave
add
loopne
inc
leave
xchg
cmp
aas
push
cmp
sub
mov
out
aaa
push
jo
pop
dec
mov
cmp
popa
ss
shrl
pop
jmp
inc
frndint
dec
pop
lods
xchg
dec
popa
rolb
jae
dec
hlt
adc
sbb
cmp
shrl
inc
gs
movsb
cmpl
pop
cmp
mov
mov
xlat
or
stos
or
xor
cmp
fsubl
aaa
movsb
jg
cmpsl
in
inc
mov
and
inc
test
pop
enter
mov
hlt
sar
push
add
out
hlt
ljmp
and
fimuls
rcrb
mov
test
mov
xorb
cmp
inc
cwtl
pop
pop
lods
inc
adc
sub
or
and
sbb
adc
sub
jb
mov
iret
jge
frstor
xor
repnz
test
and
int
fldcw
hlt
lea
fimuls
sub
add
fistl
add
xor
lret
sub
push
cmp
sub
sbb
pop
xor
dec
scas
dec
inc
aaa
adc
inc
enter
push
popf
pop
out
dec
or
inc
sub
dec
inc
stos
mov
push
and
loopne
loop
ljmp
push
ja
and
xchg
and
add
dec
mov
rcrb
push
je
jb
inc
or
clc
and
jns
and
jecxz
sarb
pusha
bound
push
test
rcrl
outsl
push
push
inc
stos
push
jb
xchg
test
sbb
pop
mov
loope
sbb
xchg
out
pop
and
cmpl
negl
pop
push
xor
cld
jge
xor
insl
andl
incb
hlt
iret
xor
test
xchg
fisubs
nop
popf
xchg
daa
sub
sbb
out
adc
sub
cmp
push
xor
mov
pop
push
pushf
dec
sbb
js
inc
mov
add
ss
and
sarl
jns
sbb
jg
insl
push
sahf
inc
test
jae
insl
adc
or
inc
stos
enter
adc
lret
push
jge
jg
inc
testl
mull
hlt
push
cs
push
lods
mov
jg
iret
or
stc
leave
call
hlt
ss
pop
jne
gs
fisubrs
dec
loopne
incb
test
arpl
mov
rorb
add
mov
mov
adc
dec
fcomps
lret
daa
mov
inc
arpl
fcomip
xchg
mov
lock
add
int
and
mov
ficoml
shl
cmp
movl
outsb
inc
rorl
jge
add
clc
push
jl
in
add
mov
scas
mov
jno
cli
adc
out
pop
scas
xchg
xor
imul
mov
push
cmp
inc
mov
clc
lds
loope
push
mov
jb
jl
shlb
and
divl
adc
roll
sbb
mov
cli
cs
and
icebp
xor
adc
js
mov
mov
xchg
out
out
je
stos
inc
cwtl
divb
scas
sub
cmp
into
dec
sbb
xchg
lret
push
sub
sub
add
mov
add
sub
xor
cli
or
or
lret
xchg
hlt
push
mov
out
aas
xchg
aad
dec
xchg
mov
dec
sub
push
test
pop
aas
arpl
fwait
mov
loope
in
xchg
popa
negl
add
lods
pop
mov
mov
adc
insl
adc
cltd
ret
push
dec
sub
push
cltd
in
stos
inc
inc
outsb
push
adc
mov
sbb
add
pop
cmpl
and
adc
cmp
in
movsb
sub
pop
cmp
popa
mov
pop
inc
dec
out
stos
jbe
stos
call
cmc
xor
es
roll
cmpsb
jl
xchg
mov
andb
or
or
insl
pop
sbb
loopne
push
cmpsl
pop
inc
mov
js
sbb
add
aas
into
rorb
xchg
sbb
add
xchg
cmc
sub
sbb
test
pop
daa
hlt
bound
nop
jmp
in
stc
scas
fidivrs
adc
mov
loopne
popa
add
dec
daa
adc
movsb
out
sub
arpl
and
outsb
lds
fistpl
das
xor
pop
cmp
pop
ret
adc
mov
mov
das
out
pop
ljmp
xor
scas
pop
fistps
int
cmp
sub
inc
sbb
sarb
pop
fisubs
jge
jecxz
jecxz
sub
pop
imul
jo
ja
pop
add
mov
fldpi
cmp
movsb
dec
fisubl
iret
ret
or
push
push
and
arpl
add
imul
jae
inc
cs
push
lds
add
mov
test
cs
mov
inc
xor
inc
outsb
fwait
pop
cmc
cltd
and
in
or
pusha
cmp
lock
scas
push
mov
pop
mov
mov
dec
add
cmp
inc
mov
cmp
jno
mov
nop
loop
jmp
iret
push
aaa
xchg
ret
xchg
out
xor
rcll
cmp
aaa
lods
inc
pop
push
sub
sub
loope
push
orb
xor
sub
inc
jne
js
cmpsl
data16
stos
mov
dec
outsb
movsb
scas
out
sti
sub
popa
mov
sbb
xor
mov
push
mov
cmp
dec
fildl
pop
ds
test
and
inc
xchg
sbb
cmp
and
leave
push
pop
push
add
cli
mov
dec
jo
or
data16
adc
xchg
cli
mov
sub
iret
xchg
or
adc
pop
jbe
cmp
cld
xchg
jmp
lods
notb
fistpll
add
repz
out
fbld
mov
lcall
sbb
out
cmp
cmpsl
dec
and
in
aad
in
int3
adc
decb
pusha
inc
pop
cmpsl
jg
mov
and
mov
icebp
stc
pop
pop
and
int3
xchg
pushf
scas
xor
addb
push
addb
rorl
add
fists
dec
subl
iret
mov
mov
add
leave
push
add
dec
add
icebp
sub
stos
enter
js
add
lcall
sub
ljmp
lret
scas
cld
arpl
sub
lret
jg
shl
jmp
and
js
fcomp
es
ss
add
inc
test
jne
int3
movsl
cmp
mov
enter
mov
xchg
imulb
aad
mov
jns
nop
addr16
xchg
pop
mov
lods
mov
jns
test
mov
iret
cmc
and
or
adc
std
nop
jecxz
add
jnp
xchg
std
jae
lods
out
mov
pop
fcompl
mov
lret
js
scas
rcrl
test
mov
pusha
pop
ret
movsl
scas
repnz
adc
cmp
push
sahf
pop
xlat
add
jns
and
pop
in
mov
mov
hlt
iret
imul
mov
pop
pop
pop
jno
fdiv
pop
mov
leave
dec
scas
lret
mov
mov
lea
mov
dec
sub
inc
jne
mov
xor
xlat
pop
imul
xlat
loopne
fcmovne
stos
xor
mov
xor
or
xchg
insb
cwtl
mov
xchg
add
push
cmp
lods
insb
fnstenv
pop
in
xchg
sbb
cld
xor
push
insl
into
pop
xchg
lcall
iret
lock
mov
stos
mov
mov
mov
dec
or
pop
imulb
in
jg
aas
jns
or
aam
ret
loope
mov
popa
adc
mov
outsl
pop
xor
sbb
xor
inc
cmp
movsb
cmp
movsb
pop
or
cwtl
add
movsb
lods
in
lcall
inc
enter
jne,pn
test
push
mov
jl
push
dec
aad
fs
adc
mov
es
pop
xchg
push
push
inc
and
xor
adcl
push
ljmp
mov
in
xchg
imul
mov
insl
in
push
repnz
push
jg
mov
int3
mov
pop
adc
movsb
outsl
xchg
cmp
xchg
xor
mov
not
sub
and
or
sub
aad
repnz
in
cmpl
push
scas
cmpsb
iret
xchg
sub
sub
pusha
sbb
and
cmp
stos
xor
push
andl
xchg
cmp
movsl
in
in
xchg
xchg
xor
xor
out
mov
xchg
mov
mov
addr16
cmp
and
inc
imul
xor
add
mov
mov
mov
mov
jnp
inc
adc
rcrb
idivl
sub
add
lret
sub
adc
outsl
mov
dec
xor
dec
sbb
push
sbbb
mov
in
ret
popa
jae
scas
jp
fildll
movsb
lods
adc
dec
stos
sbb
call
cli
ds
sarl
std
mov
dec
jae
fwait
repnz
or
inc
add
lea
xor
push
in
lea
xorb
orl
movsl
lahf
aas
stos
rolb
inc
pushw
pop
or
cmp
mov
xor
jno
shll
faddp
mov
mov
int3
jle
into
aas
stc
es
daa
out
arpl
loopne
stc
or
or
cli
mov
jbe
or
xor
int3
inc
or
push
adc
scas
jno
repz
shlb
inc
xchg
aam
dec
sub
out
jg
inc
ds
or
or
pop
ret
inc
mov
ficoms
repnz
dec
adcl
out
jns
int3
xchg
or
push
xor
push
hlt
imul
inc
mov
hlt
ljmp
dec
setbe
push
xchg
fmul
popf
mov
sbb
mov
out
sbb
mov
jmp
sub
movsb
sub
lds
popa
jle
repz
into
ljmp
jl
or
adc
cmp
lcall
sbbl
dec
and
rclb
fildl
jle
mov
sbb
sbb
jmp
add
femms
or
gs
shlb
mov
mov
out
jle
sub
xor
bound
sbb
sbb
lock
lods
icebp
mov
repz
push
and
fdivl
mov
push
inc
test
bsf
in
pop
lret
adc
mov
and
call
push
int3
mov
dec
and
lret
fcomip
sub
lods
sbb
push
mov
pop
mov
mov
sub
mov
loopne
out
xchg
pushf
sub
stc
in
pop
in
or
mov
or
pop
arpl
lods
lahf
inc
pushl
addb
jecxz
mov
xchg
cmp
and
ss
dec
out
sbb
and
lret
dec
jp
push
daa
roll
inc
into
mov
jmp
xchg
xor
jp
or
pusha
sbb
and
inc
test
sub
icebp
cmp
mov
out
aaa
fiadds
pop
push
jg
jne
cmp
dec
pop
subl
jle
int3
mov
jmp
insl
inc
add
or
imul
add
mov
jle
out
js
lock
or
fstpl
imul
or
sbb
pushf
push
sbb
and
adcb
push
js
xchg
or
mov
push
and
jne
lods
jae
inc
jle
inc
test
lret
ja
xor
frstor
je
xor
push
js
inc
insl
inc
xor
jp
mov
pop
cwtl
and
aad
or
push
nop
scas
or
sbb
ja
dec
test
pushf
inc
mov
jl
mov
jns
sbb
inc
in
jecxz
aas
mov
inc
popa
insl
sbb
adc
mov
add
pmaxub
inc
out
mov
xchg
xor
sbb
mov
mov
iret
pop
sub
inc
or
jb
add
lock
ret
adc
sbb
popa
in
cwtl
mov
cwtl
aam
scas
jg
dec
adc
nop
out
popf
cmp
pop
mov
pextrw
pushf
cwtl
lods
in
outsb
daa
cltd
sbb
adc
cld
xchg
inc
enter
mov
add
int3
out
add
fs
sub
in
call
in
mov
test
pushf
fs
cmc
mov
and
jle
jge
push
jbe
cmp
fst
push
popf
mov
and
outsb
cmp
int3
stc
dec
mov
shlb
insb
inc
sbb
outsb
lahf
les
fnstsw
fsubl
jo
inc
sbb
lods
rolb
imul
ds
inc
adc
add
mov
lods
jle
je
dec
mov
xor
cwtl
fstps
mov
inc
mov
sbb
dec
mulb
sbb
fbstp
ja
jl
push
mov
pop
add
and
sbb
adc
push
pop
js
sbb
sub
aad
daa
repnz
fisubrl
lods
dec
and
add
xchg
std
cmc
repnz
mov
xchg
repnz
cltd
inc
cmp
jp
push
sbb
and
mov
xchg
loope
pop
andb
jno
out
add
rcll
mov
jl
jae
das
adc
fdivr
push
orb
mov
enter
add
lcall
dec
adc
fnstsw
or
sbb
hlt
loop
add
xor
jg
stos
cs
sub
inc
imul
cmc
outsb
xor
shl
movsb
jmp
add
decl
cmp
clc
jg
jns
pop
or
mov
cli
push
enter
jecxz
popw
int
enter
ljmp
mov
out
pop
xor
movsb
sti
mov
loopne
out
and
or
fisubrs
xchg
cmp
lea
fisttps
aam
popf
sub
xchg
xchg
lea
orb
pushf
sbb
xchg
xor
inc
sub
pop
std
pushf
sti
xchg
jge
inc
imul
js
aaa
adc
sbb
sub
xor
push
shl
mov
jmp
sti
and
jl
shl
arpl
rcr
add
shlb
xchg
jl
int
mov
xchg
mov
cmp
dec
mov
push
sbb
mov
outsl
shlb
cltd
cmp
loope
sbb
mov
scas
sub
lret
popa
xchg
sub
cmp
mov
xor
jno
jnp
int3
dec
outsb
sti
pop
inc
lret
fs
in
lds
imul
pop
out
push
mov
jl
outsb
add
enter
and
push
cmpsb
cmpsb
inc
and
mov
mov
adc
out
jb
imul
xor
cmp
jg
push
lods
push
fs
mov
sub
shlb
or
push
cmp
jecxz
mov
xchg
fldcw
sahf
nop
or
inc
arpl
xor
into
sbb
xchg
mov
cmpsl
push
xchg
jnp
or
mov
iret
sbb
cli
jecxz
jge
jno
mov
xchg
or
pavgw
pop
ja
xchg
roll
out
cld
push
push
fsts
cmc
test
push
inc
in
mov
out
jecxz
repz
in
call
aaa
clc
je
jmp
fildll
scas
lret
into
loop
fimuls
inc
sub
in
jge
dec
cli
cltd
add
lahf
in
xor
cmp
imul
cltd
les
cmp
xchg
orb
scas
std
int3
mov
gs
jmp
sub
popf
adc
cltd
ret
arpl
xchg
sarl
sti
je
gs
sbb
icebp
jecxz
orl
pop
or
in
fwait
push
lock
daa
add
fnstsw
mov
in
in
and
adc
push
les
stos
fistl
pop
ret
cmpsl
stos
pusha
cli
and
out
jmp
in
add
push
or
enter
repnz
stc
add
std
jne
cmp
es
xchg
push
testl
jae
arpl
mov
inc
gs
pop
pusha
xchg
incl
jae
jnp
mov
sti
out
rorb
pop
xor
sbb
mov
and
sbb
xor
jmp
push
or
scas
jnp
ljmp
add
stos
sub
jl
and
add
shlb
outsl
push
and
xchg
out
insb
inc
aad
out
test
fisubrl
inc
int
test
std
jb
xchg
dec
in
mov
dec
imul
xor
imul
nop
jmp
inc
sub
sub
push
xor
fwait
and
cmpsl
inc
aaa
aas
pop
dec
add
outsb
sub
scas
pop
test
mov
dec
pop
bnd
xor
push
rcl
jmpw
arpl
mov
ret
pop
repz
sbbl
or
inc
mov
ja
lds
add
mov
mov
and
push
mov
loope
fwait
negb
cmpsb
ss
gs
sub
sub
fdivrl
or
test
push
adc
mov
xor
test
cli
fildl
add
data16
sbb
mov
jecxz
and
mov
in
test
jge
lods
mov
pop
mov
insb
notl
jns
out
mov
cmpsl
inc
testb
stos
sbb
push
scas
adc
repnz
scas
data16
rcll
push
loopne
xchg
pop
pop
leave
cmp
add
loop
lahf
ja
add
addr16
mov
pop
add
nop
sub
scas
cmp
pop
mov
push
jl
cmp
adc
sub
pop
lret
xchg
in
inc
sti
iret
les
or
testb
or
popa
xlat
inc
and
sbb
lret
test
out
clc
dec
add
mov
fdivs
xchg
mov
mov
cmp
pop
dec
ljmp
jecxz
xor
jmp
lock
aam
pop
xchg
push
mov
mov
push
adc
add
repnz
or
fnsave
add
add
sbb
repz
push
fwait
xchg
and
cli
shll
dec
sarb
mov
dec
movsb
mov
cmp
insb
imul
fucomip
mov
cmpsl
xchg
jns
loop
cmp
cs
pusha
push
push
daa
mov
ds
inc
mov
iret
shlb
ljmp
cld
jmp
icebp
or
leave
idivb
gs
cmpsl
mov
int
inc
pusha
fildll
cs
sub
shll
add
insl
shll
pop
test
test
or
inc
jmp
lods
daa
mov
xor
aas
pop
clc
aas
test
sbb
jb
xchg
push
xor
mov
ret
inc
adc
jb
sbb
sti
pop
or
decl
add
or
pop
fidivrl
add
rcl
or
inc
inc
xchg
loopne
test
imul
clc
in
push
ficoms
sar
out
sbb
cli
sti
lret
movsb
lret
lcall
rcll
fwait
jbe
aad
hlt
mov
cmc
pop
fstl
loope
dec
incb
stc
cwtl
and
loopne
mov
les
mov
sbb
mov
inc
stc
out
jle
gs
cltd
bsf
push
shll
jmp
insb
or
jecxz
mov
in
mov
ljmp
adc
imul
rcr
add
push
stos
das
lds
loopne
jmp
js
outsb
rcr
fdivs
pop
xor
and
xchg
outsl
cmp
sbb
jmp
xor
jecxz
sbb
dec
lret
loopne
and
xchg
push
dec
xchg
iret
mov
xor
mov
movb
testb
lahf
loope
mov
lock
jne
push
xchg
jne
jl
sub
mov
lret
pop
pusha
cmp
inc
lea
pop
repz
xor
mov
scas
sub
aam
daa
adc
mov
rcll
repnz
mov
and
out
out
inc
push
mov
in
push
sar
cmpsl
cltd
xchg
inc
iret
mov
mov
cltd
mov
push
rolb
xlat
mov
adc
mov
mov
jb
fdivrs
test
mov
xchg
mov
dec
call
fmulp
sbb
out
push
pop
inc
xchg
push
or
jae
hlt
mov
aad
add
movsl
dec
push
and
scas
jge
pop
rorb
mov
stc
xchg
mov
inc
pusha
enter
adc
cltd
dec
pop
lcall
mov
shrb
in
push
push
popf
pop
lret
shll
lds
hlt
out
out
stos
dec
mov
cmpsb
lcall
fisttpll
int
lret
xor
ds
mov
add
inc
aad
push
adc
pop
sub
push
dec
adc
and
mov
push
mov
movl
push
add
call
stos
mov
lods
out
daa
xchg
mov
or
pop
mov
dec
ja
push
xor
rcrb
inc
fidivs
pop
cmp
pop
mov
pop
in
imul
xlat
out
jns
pop
xlat
mov
inc
xchg
daa
inc
mov
mov
add
pop
dec
adc
xchg
pushf
stos
aad
stos
xchg
push
xor
aam
sbb
cmp
sub
mov
push
sahf
or
cli
popa
push
insl
vmovaps
addr16
xor
lods
sbb
repnz
xchg
push
push
arpl
in
or
sbb
mov
jg
xor
jp
mov
pop
cmpl
add
add
jns
sub
mov
cmpsl
pop
adc
test
repz
adc
enter
stos
insl
pushf
xchg
adc
idivl
inc
ret
test
leave
lret
jb
into
jmp
pop
or
pop
or
movsb
lret
jne
out
push
negb
fiadds
or
aas
addr16
movsl
dec
jecxz
loop
jae
push
sub
mov
fdivrl
fidivl
pusha
sub
mov
out
jge
wbinvd
pop
pop
in
or
xchg
cmp
cmpsb
sub
jae
cwtl
and
jae
pop
fmull
xor
or
andb
mov
and
arpl
out
mov
sbb
dec
aam
push
popf
fildl
sbb
push
adc
mov
xchg
insl
cmp
stc
cwtl
les
pop
push
iret
inc
jl
cmp
fistpl
add
add
popa
cmp
xchg
pushf
les
push
out
test
mov
dec
mov
movsl
cmpsl
fisttps
adc
test
cmp
clc
xor
lcall
fnstsw
mov
or
in
pusha
dec
mov
cltd
lret
and
out
lods
mov
lcall
out
ret
xor
mov
mov
sbb
subb
movl
dec
out
or
fmull
mov
gs
or
or
subl
sbb
sti
adc
outsl
filds
mov
addl
mov
pop
cli
push
dec
add
iret
mov
lcall
or
fs
test
dec
mov
push
pop
loop
les
sbb
or
mov
leave
sub
inc
repnz
popf
xchg
mov
push
mov
rcrb
sub
daa
push
xchg
xor
xchg
in
in
mull
cmp
mov
mov
adc
aam
xor
lods
add
xchg
ror
dec
push
mov
nop
pop
jno
cmp
and
dec
pop
ret
int
dec
cld
cs
outsb
out
jmp
adc
and
mov
mov
fidivrl
sbb
fsubrl
in
shrl
xchg
xchg
out
pop
push
rorb
pop
sub
jge
repz
mov
jbe
jmp
add
cwtl
subl
hlt
sbb
cmp
sub
lret
pop
mov
mov
mov
lock
sub
dec
add
imul
ja
sbb
push
dec
mov
pop
push
mov
mov
popf
mov
aas
sarl
hlt
lds
push
jl
pop
les
ret
inc
inc
push
ljmp
stc
dec
pop
push
data16
inc
xor
jge
outsb
stos
popf
and
inc
cli
repnz
sahf
mov
mov
std
pop
xchg
ss
cmp
mov
xor
nop
xchg
or
xchg
jp
inc
imul
ret
pop
and
or
push
add
jge
jno
mov
sbb
js
or
and
outsb
test
dec
adc
iret
in
sbb
pushf
mov
mov
gs
imul
or
xchg
scas
dec
cmp
sub
dec
outsl
sbb
mov
divb
arpl
outsl
adc
je
jno
cmc
mov
push
push
xchg
xorb
mov
sarl
xor
xchg
test
add
push
dec
out
jne
rorb
inc
repz
adc
xor
std
pop
lods
cmp
dec
fwait
in
shr
sahf
repz
cmp
mov
push
xchg
mov
and
inc
sub
mov
mov
and
ficoms
movsl
cld
inc
or
push
icebp
and
aas
mov
cmp
or
addr16
addr16
cwtl
jge
cwtl
cltd
addr16
mov
push
xor
mov
xchg
loopne
add
dec
mov
orps
test
cmpsb
gs
lret
das
loopne
mov
ja
pop
push
mov
mov
xchg
add
out
lds
inc
ficomps
jb
adc
icebp
jno
mov
imul
inc
pusha
pop
rcrl
pop
cmp
jno
add
cmp
inc
mov
pop
loop
incb
pop
loope
cltd
repz
cmpsl
add
adcb
ds
mov
adc
pop
xor
add
loopne
les
jne
cmp
popf
into
sbb
push
xlat
mov
push
push
mov
cld
mov
push
jmp
push
in
or
dec
inc
xor
hlt
mov
dec
jae
out
subb
hlt
in
xchg
addr16
mov
push
je
mov
sti
mov
sarl
cmc
or
jo
inc
fs
adc
or
leave
push
push
push
negl
adc
cmp
arpl
in
add
xchg
or
fs
jbe
push
cmp
lea
ficompl
sbb
pop
js
push
add
ss
fimull
mov
sub
bound
orb
push
fmul
das
jecxz
ljmp
mov
cwtl
add
add
ret
shrb
sbb
in
and
data16
test
push
hlt
or
mov
loop
push
repnz
lret
cmp
cli
mov
aam
or
add
ret
rclb
insb
insb
shl
xor
ret
adc
outsl
fwait
mov
dec
dec
or
mov
cld
jbe
movsb
flds
cmpb
imul
lea
push
popf
shl
shlb
mov
popf
jbe
push
iret
icebp
dec
push
ja
xor
sub
in
enter
imul
mov
jg
cltd
jl
std
movsl
leave
cmp
inc
enter
mov
push
les
inc
jbe
fists
and
dec
ret
jbe
push
cs
mov
inc
sarl
sbb
cmp
int3
fildl
push
aas
pop
int3
movsb
mov
sbb
xchg
mov
addl
push
pop
dec
test
enter
or
mov
call
out
adc
movsb
adc
lahf
jge
mov
push
mov
cli
js
popf
pop
xor
stc
push
pop
lret
out
cmpsl
xchg
push
and
mov
test
cmp
adc
pop
cmp
rorl
mov
add
shlb
add
xchg
jg
mov
mov
push
cmpsb
add
add
xchg
test
cld
stos
add
lea
ljmp
ja
pop
jns
fsubs
pop
iret
mov
mov
jo
aas
insl
insl
aas
scas
dec
in
lret
mov
repnz
add
mov
sub
lea
mov
add
push
and
bnd
pop
in
jns
scas
adc
mov
dec
pop
mov
lcall
fsubrl
pop
pop
or
and
inc
pop
addl
add
pop
stos
ror
loop
test
sub
int
iret
or
sub
dec
xchg
ljmp
push
mov
pop
dec
outsl
out
or
push
xchg
xor
outsl
sbb
std
call
xchg
repz
sub
cmp
stc
xchg
push
cmp
push
cs
and
mov
lods
xchg
sbb
ljmp
loop
mov
ja
in
fsubl
push
das
xchg
imul
jge
push
sub
adc
jl
ljmp
mov
fistpl
jle
addr16
jle
nop
fsubs
mov
sbb
pop
jno
or
call
adc
sub
pop
lods
stc
enter
das
stos
ficompl
jmp
or
cld
orb
out
gs
es
rcrl
mov
ret
xor
fstp
and
or
out
sub
arpl
dec
sub
sub
cmp
imul
bound
dec
out
cmp
pop
fs
imul
push
mov
mov
cmp
jle
push
mov
test
daa
mov
das
sbb
xor
addr16
out
jmp
rol
jae
out
sbb
lcall
xchg
daa
jnp
out
mov
out
clc
fstl
cs
clts
movsl
jecxz
jl
sub
mov
shrl
pop
push
add
cmp
mov
add
movsl
sarb
jne
aad
data16
mov
enter
mov
dec
mov
lock
pusha
xchg
adc
aaa
pop
push
lret
or
in
js
push
or
scas
add
cmp
mov
cld
sbb
lret
shr
sbb
js
aaa
jo
fnstenv
adc
mov
and
xchg
fcmovnb
ficomps
jns
shr
clc
jns
mov
cmp
xor
daa
inc
lret
jp
mov
fildl
rcll
dec
mov
repnz
mov
jg
xorb
or
fbld
int3
push
sti
popl
daa
fisubs
fisubs
jle
pop
xorb
iret
or
rcll
jmp
subb
and
xchg
xchg
pmulhuw
test
cmpsb
mov
xor
stos
std
jmp
fmull
mov
xchg
movb
lret
xor
add
sub
pushf
jle
sub
icebp
jbe
mov
xchg
add
cmc
jns
fcmovne
mov
test
xchg
dec
xchg
repnz
xor
adc
sahf
pop
mov
dec
jge
insb
push
mov
ss
enter
sahf
dec
sar
sbb
and
pop
mov
daa
div
sbb
shl
add
jbe
les
arpl
mov
or
icebp
dec
pop
cmp
cmc
test
in
adcb
fstl
sub
out
repz
jno,pt
mov
mov
inc
popf
lock
clc
inc
inc
je
xchg
ljmp
arpl
add
dec
dec
mov
orps
popa
cmp
push
sub
cmc
aam
fsubrs
xlat
pop
adc
push
push
mov
pop
and
loop
push
cmp
cmpl
test
inc
cmp
aas
lret
aad
jnp
lods
je
ds
int3
push
cmc
imul
pop
repnz
add
push
jno
mov
sub
mov
data16
outsb
in
mov
pop
jae
jno
lds
rolb
fcoms
lret
mov
push
sub
clc
jmp
cltd
or
jno
shlb
stc
lds
push
fiaddl
cmp
lcall
mov
lea
aam
fcomps
mov
lods
lods
hlt
pop
stos
sub
les
in
adc
in
lret
push
mov
sub
jmp
int
add
pop
inc
sbb
or
dec
popf
or
repnz
sub
aas
test
pop
mov
dec
cmp
adc
xor
xor
enter
sbb
mov
sub
std
stos
xchg
cmp
push
mov
into
sub
out
sub
call
incb
lods
ret
pop
push
push
sub
movb
roll
inc
mov
mov
and
lods
mov
push
lods
or
in
in
sub
add
jns
mov
rcll
es
cli
stos
test
pop
dec
and
arpl
sbb
dec
fs
sbb
cmpl
xchg
mov
mov
adc
add
lods
xchg
lea
ficoml
sbb
cmp
xchg
push
insb
fs
jmp
es
fidivl
push
xlat
and
xchg
shrl
dec
adc
and
mov
dec
mov
fwait
or
cltd
test
cmc
icebp
inc
mov
jae
add
mov
dec
push
repz
in
mov
dec
cld
dec
or
das
jmp
movsb
push
js
lds
insb
scas
mov
push
sub
push
aaa
lcall
or
fdivrs
aaa
dec
dec
or
leave
pop
push
aaa
loope
mov
jbe
data16
push
xlat
mov
mov
pushf
mov
ja
icebp
cmp
shll
insb
push
stos
arpl
fdivrs
sbbb
arpl
dec
lock
push
sub
sbb
jo
add
pop
inc
ret
enter
outsb
dec
sarl
cmp
jle
addr16
push
lods
dec
and
in
rol
xor
xchg
cmp
gs
and
add
ds
stos
enter
shlb
pop
pushf
stc
lods
daa
outsb
mov
jle
sub
mov
and
sbb
xchg
xchg
dec
push
jbe
std
dec
jb
mov
lret
lret
or
das
and
scas
insb
jb
push
adc
xor
rcrb
push
out
jb
dec
cmp
scas
lret
pop
or
hlt
mov
and
jecxz
hlt
push
jg
jb
clc
mov
mov
imul
jmp
out
jmp
push
filds
stos
cmp
lcall
cmp
inc
add
dec
inc
into
scas
mov
jle
cmp
push
out
jne
mov
ljmp
adc
mov
lea
out
aam
lcallw
jne
rclb
inc
xchg
daa
xor
sub
sbb
sbb
and
scas
jge
cmp
cmp
arpl
pop
js
lret
or
mov
inc
jb
shll
in
adc
and
xor
in
dec
ja
scas
fstpt
mov
cmpsb
mov
or
cmpsl
mov
inc
gs
ffree
sahf
lds
pusha
push
movsb
and
mov
lcallw
sbb
xor
or
sbb
add
bswap
cmpsb
imul
in
aaa
cmp
mov
lods
in
and
mov
dec
push
mov
aas
mov
dec
inc
mov
iret
push
imul
icebp
jge
sub
int
leave
sub
inc
or
psrld
pop
loopne
int
cmp
mov
dec
add
sub
inc
pop
das
aam
pusha
loope
xchg
cmp
rcll
pop
add
xchg
pop
test
leave
leave
and
int
mov
mov
or
pop
inc
movsb
into
repnz
xorps
mov
popf
inc
cmpsb
sbbl
testl
and
jbe
adc
enter
jmp
push
jge
jp
imul
cmpsb
push
hlt
and
daa
jnp
shll
lret
repz
push
mov
cmpsb
es
repz
cmp
mov
sbb
arpl
or
inc
pop
sarl
push
ret
xor
dec
mov
movsb
xlat
popf
mov
push
imul
clc
jp
inc
jmp
fisubrl
test
popa
and
inc
jle
mov
mov
ljmp
jle
cmp
fdiv
sbb
push
cmp
cmp
add
inc
repnz
sahf
and
or
into
lock
icebp
jle
pop
or
jl
pop
stos
sbb
sub
repz
fs
add
shlb
cmpsb
mov
push
jne
jb
xchg
mov
sub
pop
std
sub
lret
cmp
es
pop
xchg
jl
or
fisttpll
jne
repz
or
or
mov
mov
xlat
dec
adc
mov
fsub
lcall
cld
push
sub
jecxz
jecxz
imul
add
mov
cmc
fldt
cld
mov
mov
mov
divb
rcrb
jle
in
mov
sti
xor
mov
xchg
sub
movsb
aas
xor
mov
mov
into
mov
or
or
adc
inc
push
js
dec
mov
loop
mov
push
add
dec
pop
jmp
or
int3
test
sbb
adc
into
clc
xchg
push
stc
movsl
jmp
pop
jmp
es
cmp
mulb
int3
addr16
insb
movsb
xchg
lea
ret
popf
stos
fsubs
repz
xlat
out
push
jae
adc
outsl
lret
faddl
out
js
sub
push
int3
out
out
adc
lret
addr16
jb
dec
pop
adc
outsb
mov
sub
jae
push
loopne,pt
adc
decl
pop
shl
pop
movsb
adc
test
xor
mov
xchg
mov
mov
jb
mov
and
fldcw
leave
lea
aad
mov
xchg
dec
aas
jmp
loopne
or
dec
sarl
mov
bound
mov
pop
in
and
scas
mov
adc
pop
adc
xchg
dec
sub
mov
and
btr
stc
shll
inc
in
pop
fs
fstpl
and
pop
dec
int
inc
lret
fcmovnbe
dec
into
loopne
mov
inc
sbb
inc
into
dec
arpl
jmp
pop
movsb
stc
scas
cs
pop
jmp
popa
rcrb
repz
mov
xchg
jbe
pop
cmp
into
mov
sub
pop
fwait
bound
pop
roll
fists
outsl
inc
inc
cltd
push
xor
pop
pop
pop
dec
adc
mov
push
adc
std
lahf
icebp
iret
nop
mov
pop
pushf
pop
testl
clc
lret
rsqrtps
daa
xorb
sub
inc
push
mov
inc
scas
xchg
outsb
gs
cwtl
nop
xchg
ss
rorb
sbb
cmp
push
dec
dec
mov
jg
cmp
adc
inc
das
and
pop
dec
fcmovne
xor
xchg
stos
dec
push
and
shrb
out
sbb
scas
cli
mov
std
js
das
adc
xor
cmc
sti
hlt
lret
int
push
cmp
imul
add
ljmp
in
and
into
popa
mov
sbb
lods
dec
jmp
mov
fimull
pushf
insl
add
push
lods
pop
push
test
or
cmc
scas
nop
stos
int3
jns
shll
outsl
out
das
mov
sbb
jne
mov
test
mov
roll
clc
rclb
mov
dec
cwtl
push
lods
or
xor
mov
mov
imul
xchg
mov
pop
out
xchg
ss
xchg
imul
adc
rcrb
fisttps
adc
mov
sub
imul
cmp
xchg
jg
xor
pop
adc
aad
aam
inc
dec
jae
mov
fisubl
lret
add
rorb
repz
cmc
pop
jmp
or
adc
adc
mov
lods
lret
push
xor
xchg
ret
arpl
inc
mov
movsl
fcoms
inc
fwait
das
mov
imul
pop
leave
stos
inc
pusha
or
adc
outsb
out
data16
push
std
mov
leave
jecxz
pusha
stos
jo
sbb
xor
cmp
sar
call
into
dec
adc
stos
mov
pushf
test
test
inc
sbb
push
xor
lods
lahf
dec
lods
xchg
repnz
cs
xchg
xor
lret
subb
sub
lods
push
jns
lds
pop
push
fimuls
fcmovb
std
dec
pop
sub
sti
lcall
push
test
imul
mov
push
aas
push
js
mov
mov
mov
incl
gs
xchg
aas
test
cmp
out
inc
or
mov
add
cli
cwtl
std
scas
inc
leave
sub
gs
pop
sub
xor
shrb
out
fwait
mov
dec
stos
pop
mov
mov
fcoms
sub
adc
xor
out
sub
xchg
scas
sub
pop
pop
jge
aad
cmp
jp
mov
mov
ret
sub
adc
jb
aaa
jns
add
inc
mov
fs
clc
mov
loop
jne
call
add
dec
pop
sbb
sub
push
fucomp
push
xchg
call
mov
insl
push
fbstp
xor
imul
jns
or
or
ret
in
mov
cltd
test
mov
shll
es
push
inc
subb
dec
push
and
dec
lods
xor
lret
inc
nop
out
jb
lods
enter
mov
dec
imul
or
mov
adc
popa
enter
das
add
push
in
mov
mov
fisttpll
dec
pop
mov
lcall
or
lret
out
mov
mov
es
pop
cld
dec
add
movsl
jle
lock
js
out
xor
aad
mov
imul
rorb
fdivs
nop
call
mov
bound
dec
and
fmul
outsb
mov
fldcw
sahf
inc
sbb
mov
cmp
pop
mov
out
cmp
cmp
negb
jg
pop
cmp
outsb
fidivs
dec
orb
pop
shrb
fistl
pop
sbb
sub
xchg
push
outsb
addl
dec
and
rorl
imul
jns
outsl
icebp
xchg
push
jge
dec
xor
lods
cmp
and
mov
adc
xor
cmpsb
xor
int
sahf
push
insl
mov
pop
adc
mov
insb
lea
xchg
clc
aas
inc
subl
push
in
cmp
int
pop
push
popa
cli
loopne
cmp
pop
cltd
jne
out
into
push
data16
mov
mov
fwait
adc
fidivrs
movsl
dec
pop
leave
or
fcmovnb
cs
arpl
mov
pop
jae
scas
int
std
stos
out
jge
sub
cmpsl
adc
inc
andb
test
test
adc
scas
movsl
cmp
mov
ds
adc
fisttpl
test
cmp
add
or
mov
and
out
subl
mov
push
scas
xchg
test
out
cmp
xchg
sbb
mov
add
enter
mov
dec
bound
mov
pop
gs
ret
into
insl
push
mov
loop
test
add
fwait
lea
aas
cli
leave
aaa
adc
shlb
stos
pop
mov
xchg
add
add
mov
shlb
into
arpl
ret
outsb
daa
sbb
xor
ret
mov
mov
jmp
in
cwtl
aas
test
popa
lea
inc
outsl
jno
pusha
push
sbb
mov
cmc
add
jecxz
jl
hlt
and
das
mov
mov
test
ja,pt
lock
mov
stc
je
testl
aam
jecxz
push
cmpsb
pop
pusha
fbld
xchg
mov
inc
fucomip
mov
mov
adc
ljmp
jg
jae
sbb
out
jns
cmp
cltd
cmc
and
pop
outsb
lret
js
mov
pop
ljmp
pop
arpl
insb
xorb
dec
inc
imul
mov
jle
negl
cmc
ret
push
fidivs
push
xor
clc
ja
hlt
and
rorl
jecxz
negb
push
pop
iret
dec
dec
dec
loope
cmp
test
sub
xchg
int
daa
addr16
xor
aad
inc
xchg
xor
fcoml
cmpsb
adc
mov
sbb
sub
pop
lret
nop
adc
sub
les
mov
mov
sbb
jo
jp
mov
shl
popf
jae
ss
sahf
dec
add
jge
inc
add
sub
inc
dec
xchg
xlat
jge
fsubrl
arpl
inc
sbb
pop
dec
and
or
popa
jo
out
jmp
stos
lcall
ss
imul
rorl
mov
mov
push
bound
fldl
adc
xorl
jp
pushf
inc
daa
sub
inc
fldl
jb
gs
pop
stc
xchg
pusha
lods
push
inc
jnp
pop
stc
sti
stc
push
fdivl
sbbl
sub
mov
outsl
arpl
pop
test
lds
das
scas
pop
out
mov
cs
mov
push
ret
jne
das
pop
call
xor
push
imul
sahf
mov
jns
and
aad
and
mov
dec
test
sti
pop
mov
adc
and
jmp
fs
neg
push
cmpsb
xor
mov
mov
shl
mov
cmp
inc
out
jns
fisttpll
sbb
mov
in
cld
sbbl
or
pushf
arpl
sbb
lcall
in
xor
test
fistl
inc
xchg
adc
das
pusha
mov
or
iret
jbe
dec
pop
mov
add
or
popa
sbb
dec
clc
and
adc
stos
mov
jbe
cmpb
call
mov
addr16
jp
leave
push
fidivl
jb
cmp
or
or
fnstcw
mov
adc
adc
fdivl
pop
adcb
mov
insb
mov
loopne
out
aam
loope
test
stc
stc
stos
notl
out
cmp
sar
inc
or
xchg
xlat
and
sub
pushf
les
sbb
stos
inc
cmp
jp
roll
imul
jb
mov
xlat
dec
call
call
push
mov
aam
negl
mov
loopne
fadd
sub
je
fcomps
fs
mov
lahf
xor
ret
jge
loope
int3
or
pop
fs
test
adc
insl
sub
movsb
rorb
pop
sarl
leave
mov
xchg
sarl
cmpsb
add
pop
pop
and
cmp
sbb
add
pop
cmpsl
or
loope
jmp
mov
xor
pop
push
aam
lds
fldl
in
sbb
sbb
nop
aas
fninit
jmp
xchg
pop
push
xchg
rcll
xchg
xor
mov
inc
inc
jge
std
clc
fwait
mov
sti
sti
out
mov
or
int
mov
popa
imul
int
push
mov
xchg
cld
and
mov
popa
scas
out
sbb
add
inc
mov
pop
push
push
loop
aas
xor
mov
add
stos
cld
cmp
clc
xor
pop
lret
test
jle
mov
and
negb
jno
ja
sti
adc
mov
jnp
popf
mov
in
pusha
pop
mull
mov
dec
xor
pusha
push
adc
push
mov
call
mov
fistps
test
jne,pn
mov
xor
and
jno
jne
and
adc
push
in
push
lods
pop
push
mov
aam
insb
nop
push
insl
movsb
pop
xlat
pop
and
pop
inc
jg
pusha
je,pt
xchg
shll
clc
aad
test
mov
pop
xchg
or
add
pop
cltd
orl
jo
rorb
pop
sub
stos
mov
mov
jmp
mov
mov
jne
mov
call
idivl
aas
inc
dec
addl
push
add
cmp
jle
sbb
out
lahf
sbb
xor
fwait
add
and
cmp
ss
or
mov
xchg
sbb
jecxz
adc
jae
and
lods
cli
jle
and
cli
outsl
in
insl
mov
movl
daa
aad
inc
xor
dec
adc
lds
push
xchg
inc
sub
inc
fnstcw
adc
mov
pusha
fwait
sub
aam
push
sbb
pop
xchg
in
pop
pop
mov
mov
and
divl
sti
and
add
ss
jp
jle
bound
xor
sbb
jg
add
lahf
pop
jge
xchg
mov
add
jb
je
mov
int3
in
mov
jle
mov
pop
mov
inc
ret
push
mov
js
in
into
mov
or
sub
fs
stos
mov
in
bound
arpl
push
push
adc
andl
fidivl
pop
loop
mov
add
jg
popf
push
ficoml
pop
aas
in
push
lods
jne
and
fsubrl
push
sub
mov
dec
test
dec
pusha
mov
and
jnp
inc
call
hlt
divl
sub
add
cmpsl
and
insl
sub
sub
rcrl
mov
cltd
or
sbb
cmc
lahf
out
mov
pop
cmp
cld
add
mov
ret
lea
popl
or
dec
mov
sti
sub
fwait
push
lcall
call
mov
enter
or
xor
mov
inc
mov
inc
pop
jg
icebp
mov
aad
jno
jne
push
add
out
ljmp
popf
mov
aas
or
mov
xor
mov
xor
sub
adc
lds
xchg
in
imul
cmp
xchg
fidivrs
push
adc
sbb
cli
mov
jmp
in
inc
jecxz
inc
mov
pushf
xchg
sub
pushf
or
out
and
mov
iret
pop
popa
push
lea
pop
pop
mov
sub
fadds
ja
xor
push
jmp
mov
aam
mov
xchg
push
fistps
sub
cmp
dec
mov
inc
jl
xor
sbb
mov
add
sahf
addl
and
jp
cmc
push
pop
cmpsb
rclb
repnz
int3
int
cmp
addl
mov
or
cmp
push
push
loope
insl
fidivl
in
dec
xchg
push
mov
pop
call
sbb
xorb
call
cltd
push
adc
leave
sub
cld
mov
inc
or
sbb
mov
mov
cmpsb
jl
sbb
pop
int
lock
mov
jl
dec
xor
jno
scas
sub
push
fisubrs
xchg
adc
cmp
cwtl
push
inc
je
sbb
sbb
xor
push
dec
add
movsl
sub
cld
idivb
cmp
jbe
neg
mov
insl
xchg
xor
cmpsb
dec
mov
xchg
sub
std
pop
sbb
or
adc
mov
jno
mov
test
or
jae
pop
ds
jne
js
jnp
lods
or
xor
mov
lods
dec
cmp
test
jg
mov
test
inc
fsts
xor
int
pushf
in
mov
orl
das
or
mov
cld
std
cmp
arpl
dec
push
into
mov
arpl
lret
xor
or
mov
pop
jae
dec
pop
push
mov
pop
inc
sub
ret
cmp
js
add
sub
dec
sub
pop
pop
decb
or
out
imul
outsb
into
jle
inc
mov
out
rorl
xor
push
test
movb
out
fdivr
inc
mov
add
xchg
mov
mov
adcl
and
dec
mov
fxch
adc
sub
ret
cmc
cwtl
shlb
negb
repnz
jg
and
addr16
sahf
fwait
pop
pushf
xchg
sbb
adc
int3
out
mov
inc
es
scas
xchg
clc
sahf
shll
iret
xor
stos
aas
fsubs
lock
test
xchg
lds
cmp
push
mov
jb
int
ljmp
push
cmp
xchg
lahf
nop
out
das
sti
fcoml
test
inc
fisubrl
in
repz
lds
cmc
or
push
push
mov
arpl
mov
adc
add
or
in
mov
xor
inc
iret
jp
hlt
adc
pusha
cli
add
cmp
xlat
dec
xor
inc
aas
sub
lahf
jl
mov
negl
inc
mov
std
test
aam
and
popf
ljmp
jne
loope
dec
ds
leave
movsl
aas
test
movsl
add
sbb
pushf
lds
adc
sahf
and
xor
inc
mov
movsb
jge
fcmovb
pop
xchg
out
imul
jecxz
cmc
lock
es
sbb
adc
jp
out
push
mov
sbb
aaa
xchg
and
sar
aad
rcr
clc
pushf
inc
stos
gs
fiadds
pop
in
add
popa
adc
inc
sahf
ss
push
mov
subl
pop
mov
and
cwtl
or
and
pop
mov
in
fs
xor
lahf
iret
mov
mov
mov
dec
jecxz
ds
adc
cmp
xor
inc
pop
add
into
add
popf
add
out
outsb
sbb
lahf
fwait
in
and
test
mov
inc
mov
jbe
adc
mov
sub
push
call
mov
adc
push
repz
push
sub
cli
mov
aaa
rcll
push
adcl
movsb
jnp
test
push
push
mov
rcr
leave
sbb
addl
ret
in
dec
enter
fbld
pop
or
fiaddl
lock
cmp
pop
in
stos
rolb
dec
lret
sarb
and
cmovbe
xor
shlb
add
cmp
dec
push
js
pushf
xor
mov
lret
jno
add
jo
push
pop
sub
cmpsl
xor
and
jne
in
mov
cli
pop
dec
ret
jle
xchg
mov
dec
mov
cmc
out
rorb
lds
call
push
mov
and
and
jb
test
and
sub
or
cli
cmp
push
inc
jno
out
dec
add
testl
clc
cltd
int
dec
mov
in
xor
int3
cmc
lcall
fcmovbe
cmpsl
int
movsl
jle
sbb
xor
call
adcb
test
je
mov
xor
inc
andl
push
inc
xchg
xor
sti
pop
mov
inc
addr16
imul
icebp
xchg
xor
arpl
jbe,pt
push
or
mov
aad
mov
cmp
jnp
sbb
ret
mov
push
xchg
mov
outsb
movsl
push
rolb
mov
cmp
push
jno
inc
push
sub
sub
mov
jbe
jbe
add
into
int3
sub
add
sbb
jge
out
sahf
shll
sbb
pop
inc
push
or
push
or
ds
dec
jbe
cltd
jae
xor
xor
pop
out
addr16
iret
lret
mov
jno
mov
jg
lret
push
adc
leave
lods
dec
push
mov
mov
mov
mov
ljmp
test
ss
lods
mov
mov
jg
int3
cmc
lret
inc
mov
dec
inc
dec
mov
or
push
popf
cwtl
in
jle
jmp
cli
dec
and
aad
mov
jno
das
cmc
or
mov
fwait
gs
int3
mov
fwait
and
ret
gs
xor
fsub
xchg
push
and
pop
cmc
sbb
stos
out
mov
cmp
or
dec
lods
mov
push
repz
iret
addr16
sarl
leave
push
cmp
xor
add
push
xor
scas
jle
push
mov
imul
and
and
daa
push
dec
cwtl
cmpsb
aam
test
or
jno
lcall
dec
jge
cs
cli
fwait
push
xchg
ds
faddl
pop
inc
adc
push
aas
mov
jmp
add
jne,pt
push
push
jmp
jno
es
mov
dec
leave
xchg
cmpsl
pop
js
je
jae
cld
sub
jnp
xor
adc
xor
or
loopne
scas
daa
stc
enter
cli
daa
mov
fldt
lods
loopne
inc
movsl
pushf
int
push
adc
jmp
push
jge
inc
jne
arpl
sbb
adc
sub
clc
cmpsl
fmuls
adc
loope
cltd
xor
insb
pop
inc
push
cmp
outsl
sub
imul
lret
rclb
push
pop
andl
imul
gs
jmp
xchg
js
cmc
outsb
mov
dec
aaa
fidivs
adc
stos
jnp
mov
mov
and
sub
jg
test
pusha
jp
adc
das
out
pusha
dec
testb
or
fwait
ret
repz
mov
lea
and
cmp
dec
inc
cmp
push
lcall
inc
decb
insl
std
add
mov
ret
push
xor
mov
dec
addr16
arpl
lods
push
iret
pop
mov
jbe
or
jno
xlat
lret
pushf
and
push
push
and
dec
faddp
mov
add
out
xor
int
fwait
sbb
or
mov
xor
mov
mov
mov
int
xor
clc
mov
scas
and
aas
dec
xchg
and
pop
es
in
insl
pop
cmp
dec
rclb
in
aam
push
mov
cmpsl
roll
rcrl
ficoml
xlat
push
dec
sbb
movsl
mov
clc
xchg
jecxz
cmp
jmp
arpl
ret
lahf
push
sub
das
xchg
mov
out
fucomip
dec
dec
popf
push
mov
jge
into
and
mov
jg
lock
icebp
xchg
out
dec
sub
sarb
dec
out
jg
fstpl
scas
jg
int
out
lret
popf
xchg
popa
fisttps
int
out
rcr
cmp
fwait
mov
popa
outsb
mov
cld
inc
add
lea
xor
arpl
jns
xor
jecxz
jmp
loopne
xor
pop
jno
hlt
jg
xchg
ljmp
out
ljmp
dec
popf
mov
sbb
ret
sbb
lahf
imul
inc
push
test
iret
or
or
loopne
inc
pop
lods
inc
dec
into
push
stos
movsl
fsub
sbb
jo
pop
clc
sub
cmp
popf
add
add
sub
in
mov
mov
xorl
sarb
pop
movsl
sbb
and
out
mov
movsl
sub
or
dec
jae
rorb
inc
inc
loop
invd
ffree
imul
test
pop
les
es
je
add
sbb
test
xchg
or
push
sub
xchg
lds
fcomps
leave
mov
jne
scas
adcb
xchg
nop
mov
pushf
notb
stos
ds
inc
ret
dec
stos
fwait
mov
shlb
jno
mov
mov
shlb
mov
inc
sbb
outsb
testb
aam
incb
sub
xchg
mov
sub
pop
mov
adc
sub
mov
adc
movsb
addr16
aas
clc
dec
push
mov
xchg
mov
pop
xchg
ljmp
loopne
gs
inc
xadd
cmp
notb
inc
lret
or
sub
fnsave
fisubs
enter
add
mov
lahf
imul
in
movsl
shlb
mov
push
je
pop
int
das
out
data16
add
fstp
inc
cmpsb
nop
inc
shlb
jae
cmc
lds
enter
mov
sub
fucomip
dec
shll
das
outsb
repz
mov
stos
mov
clc
lods
ret
test
dec
pop
nop
jmp
lahf
add
notb
push
inc
lret
aam
jb
add
or
pop
es
mov
pop
aam
xchg
int3
xor
jae
fbld
call
add
ds
mov
out
lock
mov
and
in
pushf
sbb
cmc
jo
pop
mov
loop,pt
orl
into
rclb
push
test
aad
imul
mov
jle
clc
pushf
push
in
int3
mov
mov
aaa
xchg
jp
dec
mov
xor
bound
or
int
mov
mov
jo
inc
into
dec
cmp
mov
push
dec
shlb
jbe
sub
mov
jmp
add
gs
shll
cmpl
mov
pop
sbb
sbb
mov
inc
jne
int
mov
stos
cmp
jp
in
fdivl
pop
fdivr
jb
lret
mov
jne
fdivl
ds
in
mov
mul
inc
lcall
jmp
xor
jae
pusha
aad
scas
dec
xchg
mov
jecxz
movsb
mull
inc
nop
hlt
push
inc
cmc
sbb
cmp
jge
or
mov
pop
adc
cli
stc
and
cmpsb
pop
or
aaa
movsl
inc
loopne
sbb
mov
jae
cld
dec
fwait
rcll
ror
pop
sub
pushf
test
mov
fidivl
mov
add
stos
mov
mov
add
pop
pop
adc
push
xor
stos
pop
lea
xchg
sub
jbe
mov
sub
fldt
mov
call
dec
insb
jecxz
sbb
mov
jp
outsb
repz
push
scas
cmp
stos
xchg
aad
test
dec
mov
pop
mov
or
pop
jl
in
lds
dec
mov
xchg
push
lcall
cwtl
and
rorb
xchg
ja
jno
sti
pushf
je
inc
add
add
add
out
test
pushf
sub
cli
rorb
lret
push
stos
jns
test
jnp
ljmp
xor
out
mov
imul
cmpsb
int3
int3
cld
fisttpll
lock
jo
xchg
imul
xchg
lret
fdivrl
xchg
cs
loop
cmpsb
mov
pusha
leave
lcall
or
xor
jmp
aam
in
mov
pop
jl
dec
loopne
mov
scas
lods
stc
push
mov
xor
jmp
xor
vmovshdup
sbb
sub
dec
movsb
add
dec
and
out
xchg
es
lahf
xor
sbb
movsl
loopne
dec
aaa
sbb
inc
lcall
xchg
mov
lock
mov
mov
cmp
sub
cmc
nop
lds
iret
adc
and
fdivrl
or
xor
pminsw
xchg
and
sarb
roll
xor
push
cmp
imul
jecxz
xor
stc
ret
sbb
dec
add
insl
aad
out
jnp
xor
jle
loop
mov
ret
ret
ret
jns
mov
ljmp
std
shr
sbb
fdivrp
pop
imul
or
jmp
pop
jo
xor
popa
push
ret
out
cs
bound
mov
pop
push
add
dec
out
ljmp
xchg
mov
and
mov
vmwrite
cmp
mov
mov
icebp
mov
ret
fisttpl
stos
push
scas
cmp
shll
and
out
loop
js
mov
in
and
push
sub
sbb
push
nop
shl
lock
ja
adc
xor
cmpl
mov
dec
jg
outsl
leave
in
sahf
add
adc
dec
mov
pop
mov
mov
adc
jl
fstl
and
loope
dec
mov
sbb
hlt
xchg
jge
and
push
jle
pop
sub
int
call
shrl
movl
mov
push
or
push
loopne
xor
xchg
cwtl
iret
sbb
lea
cmc
lds
stos
fs
adc
in
ljmp
jbe
jl
je
sub
mov
jns
and
xchg
pop
mov
pop
xor
jne
xor
jnp
push
sti
ret
mov
data16
xchg
rol
es
and
mov
imul
rorl
xchg
mov
lahf
mov
xchg
cltd
xchg
int3
aaa
les
xchg
mov
sbb
mov
jp
lea
mov
xlat
scas
hlt
out
out
add
dec
mov
inc
pop
leave
mov
or
enter
cli
pop
sbb
lahf
mov
mov
mov
sti
mov
pop
scas
xchg
pushf
sub
dec
andl
movsl
es
aas
hlt
shrb
daa
or
in
pop
xor
test
mov
push
adc
inc
xor
cltd
fcompl
lds
outsb
xor
out
jns
xchg
mov
push
bound
icebp
add
cmp
dec
hlt
mov
scas
sub
mov
ljmp
inc
mulb
inc
cmp
dec
pop
pop
sbb
or
icebp
insb
push
push
inc
jp
cmp
sub
pop
fstpt
rorb
je
jns
repnz
lods
bound
fxch
call
dec
inc
test
scas
mov
fdivrs
mov
sub
or
cld
into
jnp
push
test
pusha
sub
mov
jo
dec
ds
xchg
xchg
and
jb
push
push
push
aas
or
xchg
cmp
ror
lret
pusha
add
push
cwtl
lahf
div
idivb
mov
lods
jno
dec
cmpsb
shll
mov
or
pop
sub
aad
cld
add
add
mov
mov
rol
lcall
pop
dec
cld
mov
shl
push
jae
int
aam
inc
inc
lret
leave
repnz
cltd
movsl
repz
loop
fsubr
sub
lret
and
stos
or
jge,pn
lret
lods
outsl
jb
xor
mov
stmxcsr
jle
adc
lcall
fnstcw
cwtl
adc
loopne
fidivrs
ror
sbb
xchg
xlat
cmp
inc
fnstsw
mov
pushf
push
push
loopne
std
pop
dec
mov
mov
pop
inc
cmpsl
insb
xchg
ffree
mov
dec
outsl
inc
mov
aas
sbb
jl
pop
push
insb
scas
stos
dec
sbb
popa
add
push
xchg
jl
testl
popl
jle
jle
and
scas
mov
push
push
and
push
add
cmp
shll
jp
jg
or
das
test
add
es
into
fisttps
insl
xchg
push
in
test
add
mov
movsl
inc
clc
adc
jb
cmp
add
mov
sbb
push
mov
mull
in
lods
xchg
xor
push
xor
ss
int
push
and
inc
adc
lds
stos
jp
push
mov
adc
cmp
add
and
div
adc
pop
out
lahf
and
push
or
mul
stc
adc
sbb
imull
cmpsl
mov
cmpsl
inc
jns
dec
jae
sbb
shrl
mov
adc
out
imul
ss
test
jge
stos
dec
fmuls
arpl
decb
mov
repz
inc
add
xor
xor
pop
movd
jb
xor
pop
icebp
sub
dec
cmpsb
aas
cld
jge
leave
mov
iret
out
bound
pop
jmp
jmp
add
out
cmpsl
clc
int3
jno
sub
icebp
push
mov
imul
pusha
pushf
xchg
mov
outsl
xor
adc
inc
cmp
inc
pop
sub
cs
cli
notl
or
or
sbb
cltd
and
loopne
or
sub
mov
pop
inc
jl
sti
sub
lock
fisttps
mov
push
and
push
imul
push
pusha
cmpsb
lods
inc
or
mov
sbb
arpl
adc
mov
test
mov
pop
sbb
lods
mov
leave
fdivrl
movsb
jno
mov
push
jmp
and
push
insl
fbstp
into
jg
jl
xchg
push
push
jle
adc
sub
aas
pop
pop
mov
sbbl
mov
orl
mov
je
test
out
adc
push
push
shlb
enter
outsl
xlat
into
insb
sbb
inc
sahf
sub
push
mov
cmp
popf
xor
mov
push
das
out
and
jnp
repz
xor
xor
jecxz
sub
lods
mov
and
test
push
lret
int
and
in
mov
lret
xchg
xor
pushf
inc
mov
xchg
dec
adc
ficomps
loope
lods
sarl
fcompl
stos
mov
dec
cld
mov
or
jle
pop
lret
push
xor
dec
push
mov
pop
lods
mov
inc
mov
cld
testb
ret
fwait
xor
add
and
outsb
ljmp
add
divb
ss
cmp
inc
into
dec
rclb
sbb
push
int
push
and
ja
pop
jmp
push
mov
loope
or
int3
jecxz
setno
sbb
inc
test
jne
sbb
mov
stos
xor
push
inc
aaa
insl
das
imul
inc
out
mov
add
js
xchg
lret
xor
and
aad
mov
movsb
sbb
mov
clc
cwtl
jl
cmpsb
pop
mov
mov
cmpsb
test
dec
push
sarb
repnz
out
push
cmp
jb
pop
mov
into
add
add
out
or
imul
mov
pop
dec
mov
pop
xchg
in
ret
cmp
pop
fs
push
mov
arpl
in
fucomip
mov
in
push
add
adc
in
pop
scas
das
or
popl
les
fldcw
sarb
mov
mov
fidivrs
aam
iret
lds
xor
or
dec
mov
mov
xchg
test
ja
test
iret
bound
or
int
sarb
in
xchg
in
frstor
jae
roll
sti
mov
cmp
push
mov
cmp
inc
mov
stos
push
out
cmpsb
or
dec
xor
lds
mov
push
push
fistps
dec
leave
imul
cld
add
jno
push
and
pop
sbb
cmp
mov
movsb
addr16
daa
mov
sub
push
insb
cld
movsl
clc
push
jo
add
inc
test
mov
repnz
mov
pop
pop
sub
mov
int
sub
cmc
pop
test
shrb
or
call
sbb
repnz
dec
push
clc
mov
sbbl
mov
mov
iret
and
xchg
stc
adc
loope
rcrb
dec
pushf
jo
inc
cmp
mov
inc
push
mov
sbb
cwtl
das
sub
popl
adc
lods
mov
mov
push
add
rol
fwait
jmp
test
scas
cmpsl
fistpll
int3
xor
sbb
shrb
pop
xchg
int
jbe
push
hlt
xorl
xor
jl
movsb
roll
mov
xor
scas
jmp
inc
pop
sub
pop
pop
cmp
outsl
sbb
mov
int
pop
shrl
push
adc
jae
arpl
xor
xchg
or
mov
into
adc
inc
je
mov
sub
test
mov
ret
std
jp
lds
mov
imul
lods
idivl
jg
xchg
dec
lret
test
push
jbe
inc
int
jnp
lock
mov
pop
jne
mov
jmp
cld
outsl
fstl
jo
in
roll
repz
add
cmpsl
je
adc
outsb
es
xor
pop
mov
inc
aam
adc
fdivr
push
aad
ret
fldt
xlat
mov
ljmp
hlt
cmp
lahf
in
shl
cltd
inc
adc
sarb
sub
mov
repnz
mov
mov
shlb
rorb
or
inc
jle
mov
or
ret
ror
mov
xor
jo
test
test
push
push
pusha
out
scas
sub
movsl
sub
les
addr16
mov
dec
inc
test
adc
aad
dec
out
dec
popa
jle
pop
mov
pop
outsb
sti
xor
int
or
mov
clc
mov
shlb
or
imul
lods
js
or
loopne
test
xor
das
pop
push
cli
sub
pop
push
std
stos
push
iret
mov
jo
sbb
jp
outsb
pop
repnz
fcomip
inc
xor
sub
adc
pop
push
imul
mov
cmpsl
in
push
test
pop
test
and
mov
out
je
testb
cmp
rolb
inc
lds
push
ds
shll
or
ja
xor
xor
dec
xor
ret
nop
dec
jmp
aaa
dec
pop
rolb
mov
mov
dec
pop
js
push
mov
movsl
dec
gs
mov
adc
jno
mov
push
sbb
insb
fildl
adc
xchg
lahf
sbb
mov
pusha
and
int
movsb
inc
arpl
cmc
cltd
sub
out
aaa
inc
xchg
add
popa
mov
mov
sahf
push
jp
popf
mov
int3
outsl
cli
mov
fbstp
push
ficomps
rorl
mov
mov
lods
out
inc
shrb
pop
add
mov
ror
sub
inc
mov
xor
xlat
mov
pop
pop
mov
pop
ja
dec
mov
sbb
jp
dec
shlb
pop
mov
xor
mov
call
xlat
mov
ficompl
out
int
adc
mov
and
pushf
adc
cmp
pop
pop
mov
xchg
cmpsb
mov
or
popa
mov
call
inc
pop
shlb
out
cli
imul
gs
or
mov
lret
loope
rorb
rol
ss
nop
rolb
mov
cltd
push
mov
mov
and
or
into
rorl
sub
aam
push
sbb
mov
sub
mov
xor
dec
add
je
jne
jne
xchg
test
sarb
sti
leave
inc
scas
push
jno
sbbb
jae
fdivl
mov
sahf
mov
cs
lcall
sahf
mov
pop
stos
les
ret
push
push
shll
push
sub
stos
test
adcb
mov
call
sub
cmp
nop
mov
cmp
mov
sarl
nop
jne
cwtl
jo
or
add
nop
es
mov
dec
dec
dec
or
cmp
cmp
jo
cmpsb
loop
pop
sahf
lods
insb
js
mov
das
mov
aas
roll
rcll
cmp
pop
cmpsl
push
movsl
jge
jne
xchg
bound
mov
sti
jmp
pop
xlat
in
imul
cmp
xor
cs
ret
or
xor
ds
es
les
iret
fwait
mov
pushf
jp
or
mov
gs
iret
mov
adc
inc
dec
mov
imul
aad
repz
insl
ljmp
aas
imul
repz
iret
jecxz
dec
cmp
stc
lods
xlat
inc
mov
and
arpl
fsubp
shrl
mov
push
add
jbe
xchg
pushf
addr16
push
repnz
adc
jle
aam
push
xor
sbb
fdivr
fiaddl
loopne
movsb
mov
aad
aam
xchg
cmpsb
je
push
jne
mov
stc
test
scas
and
stos
add
int
jae
xchg
test
add
mov
or
ret
pusha
mov
int3
adc
mov
cli
jecxz
lcall
xchg
pop
bswap
pop
cli
sti
testl
adc
or
lea
faddl
popf
imul
mov
test
dec
xchg
sub
or
sbb
rcrl
pop
mov
out
test
test
lret
push
lods
and
call
adc
out
roll
sbb
jecxz
lcall
movsb
aad
jns
iret
xchg
movsl
fmuls
xchg
mov
sub
clc
xor
or
mov
bnd
xor
jecxz
sub
xchg
mov
sub
popa
addr16
jg
push
out
adc
jb
lods
jp
pop
push
cmp
insb
fwait
cmp
aas
mov
addr16
mov
inc
pop
xchg
lods
lcall
push
dec
in
mov
scas
aad
addr16
dec
jecxz
out
stos
push
inc
inc
cmp
pop
jl
mov
and
ja
push
cmc
mov
pop
test
loop
and
cmp
dec
mov
xchg
test
imul
mov
push
jp
dec
fidivl
and
xchg
xor
lret
shr
jge
inc
cwtl
lcall
and
jmp
imul
xchg
add
push
mov
ja
out
jge
mov
outsb
insl
cmp
adc
mov
loopne
xor
aam
fcoms
hlt
adc
push
rcll
rcll
mov
bound
aas
fidivrl
mov
out
inc
ja
push
push
jnp
in
push
xor
ret
pop
test
jmp
xchg
les
cwtl
xchg
mov
loop
mov
adc
push
adc
inc
jmp
or
popa
test
inc
xlat
mov
insl
divl
pop
push
clc
xchg
shl
inc
stos
fcomps
pop
lods
je
je
js
ja
mov
jbe
cmp
xchg
ja
orb
jo
sub
jno
pslld
and
leave
mov
or
add
test
call
fnstsw
xlat
aad
jnp
add
js
inc
shrb
in
cmp
es
in
xor
mov
push
int
inc
sahf
fwait
hlt
xchg
movsl
mov
sarl
in
cmc
push
mov
pop
test
sbb
pop
out
or
sub
iret
mov
idiv
mov
adc
cwtl
jg
xchg
jle
fstl
loopne
cmp
xchg
sti
jl
inc
lea
repz
add
add
and
mov
and
in
inc
pop
shrb
aad
repnz
leave
cmc
pop
and
pop
pusha
xchg
push
lock
jnp
stos
sti
fwait
enter
andl
or
inc
push
adc
sub
ret
jp
push
cli
js
and
mov
xchg
arpl
std
shrb
sub
imul
xchg
movsb
cmp
jb
mov
cmpl
add
fisubrs
pop
xchg
popa
inc
fsubs
aas
cld
push
jmp
inc
or
inc
jge
mov
test
xor
daa
test
jb
push
leave
test
pop
pusha
test
cmp
ret
add
in
cmp
hlt
jge
call
adc
jae
dec
enter
mov
in
pop
xchg
jmp
inc
out
into
sbb
orb
fbld
adc
inc
lea
mov
or
cmp
jg
and
jmp
mov
clc
cmpsb
mov
cmc
dec
push
shrl
xchg
cmp
xor
push
clc
dec
xchg
jle
not
jge
lods
nop
mov
xchg
aas
not
les
mov
jno
mov
test
or
sub
imul
dec
sahf
filds
mov
cmpl
cmpsl
push
ret
push
js
aam
ret
and
loope
data16
xor
cmp
add
dec
jmp
adc
pop
sub
push
pushf
aas
inc
movsb
popf
xor
lds
inc
sahf
xchg
fisubrs
mov
loop
fldenv
loopne
mov
adc
cltd
xor
shrd
imul
dec
les
dec
xor
or
xlat
pushf
ljmp
push
push
xchg
rol
ss
aad
xor
test
imul
gs
icebp
lods
ja
inc
sahf
sbb
scas
mov
xchg
dec
stos
pop
xchg
loope
shll
sbb
lret
jo
pop
dec
les
out
call
sbb
addr16
cs
in
pop
cwtl
aad
push
pop
outsl
xor
jg
sub
out
add
push
jnp
addr16
mov
inc
ds
inc
xchg
jmp
cld
shlb
and
sti
lcall
add
outsb
xchg
adc
mov
pop
adcl
addr16
push
and
lcall
and
bswap
add
cmp
push
je
pop
cmp
xchg
insb
sub
push
mov
andb
or
mov
xlat
cmp
scas
pop
jb
inc
cmc
clc
add
scas
repz
cli
pop
push
stos
jnp
popa
adc
mov
insb
pop
sbb
inc
or
mov
adc
pop
dec
pop
aas
sbb
hlt
lcall
and
mov
sarb
gs
lock
sub
aaa
out
mull
jno
daa
rcrl
jecxz
je
test
stc
test
ret
addr16
jo
jg
adc
movsb
and
cmpsl
inc
in
not
lret
mov
in
movsl
das
test
mov
sti
and
aad
and
jge
lret
xchg
dec
pop
dec
jb
pop
mov
icebp
push
andl
mov
mov
or
mov
xor
push
cltd
lret
push
push
cltd
addr16
cmp
out
xchg
aas
jne
xchg
test
cld
out
fsubr
mov
or
std
data16
and
adc
inc
lock
ss
out
dec
rcr
add
mov
push
mov
stc
movsl
lcall
stc
adc
leave
sahf
mov
int
mov
icebp
sti
inc
inc
rcll
out
and
fwait
jno
subb
clc
in
mov
sub
les
cmpb
nop
mov
or
ret
mov
pushf
lea
and
iret
sub
repz
dec
xchg
clc
cmc
mov
bound
mov
test
cmp
sub
test
pop
clc
int3
cmp
out
lods
jge
into
loopne
adc
push
xor
inc
iret
daa
mov
dec
sbb
fisttpll
cmp
mov
frstor
sub
adc
sbb
pop
jg
and
out
pop
sbb
lcall
cltd
pop
mov
pop
push
in
stc
movsl
and
jo
push
push
fs
rcll
insl
pop
sbb
and
mov
dec
test
cmp
sub
xor
sub
cmp
mov
inc
mov
pop
lea
push
mov
push
enter
sub
fdivrp
jns
xchg
or
ljmp
les
add
mov
fwait
nop
jmp
mov
popf
cmpsb
sub
in
mov
stc
cltd
test
xor
sti
push
and
inc
data16
in
add
pop
add
clc
dec
or
xlat
adc
xchg
mov
cmp
sbb
adc
pop
xchg
push
into
mov
or
dec
outsb
int
mov
mov
fildl
out
push
mov
fstl
cmp
pop
testl
xor
jno
scas
scas
xor
insb
lret
pop
fisttps
adc
aaa
shrb
imul
and
adc
push
lret
fcom
outsb
push
mov
and
roll
shl
mov
mov
mov
into
stos
or
out
ret
adcl
mov
pop
xchg
rcr
loop
lock
jecxz
loop
or
movsb
iret
inc
xlat
inc
fcmovb
cmpsl
sarb
fldl
in
addb
mov
add
pop
adc
mov
icebp
data16
inc
cmpsl
xor
jno
popf
inc
cmp
xor
xchg
je
and
xor
jns
jns
outsb
into
xor
cmovnp
in
pop
mov
aad
cmpsl
test
and
xor
data16
outsb
sub
mov
cmpsb
xchg
in
stc
or
test
in
mov
push
outsl
gs
sbb
sub
or
adc
shlb
xchg
subb
mov
push
jnp
mov
pushf
popf
xor
clc
xor
pop
pop
notb
fsts
pop
rcrl
cmp
fcoml
shl
cmpsl
movsl
shll
mov
and
mov
mov
add
and
mov
dec
imul
jle
movsl
inc
mov
fcoml
pusha
xor
mov
jnp
adc
pop
xchg
xor
lea
push
dec
sbb
cmc
xor
jge
repnz
pop
mov
jg
xchg
or
jae
fstps
sbb
jb
fsubl
mov
fdivr
lcall
sbb
cmpsl
mov
xor
fwait
and
xor
out
lcall
fs
lods
mov
into
pop
mov
add
test
push
mov
pop
popf
xchg
test
addr16
cmpsl
jge
cmpb
xchg
lods
cmp
test
and
mov
in
dec
enter
fwait
inc
dec
xchg
pop
push
int3
int
inc
inc
adc
or
jb
mov
push
inc
cmp
and
sbb
jae
mov
addl
call
outsl
jle
mov
cmp
insb
sti
out
es
push
jecxz
sbb
movsb
sbb
loope
and
jmp
xor
inc
cmp
pop
cmpb
cli
and
adc
sbb
mov
add
mov
mov
sti
ljmp
dec
xchg
mov
in
js
cld
mov
xor
jmp
adc
rclb
int3
in
push
pushf
pop
push
ret
popa
jb
mov
lret
stos
aam
push
push
dec
mov
push
add
insb
mov
sbb
jmp
sub
leave
mov
imul
enter
pop
movsb
sub
inc
pop
imul
repnz
cmp
mov
sub
lock
loop
push
pop
or
movsb
ret
jno
push
sub
movsb
gs
mov
add
daa
cwtl
dec
xor
movsb
sub
into
jns
cmp
jl
mov
int3
dec
je
testb
outsl
test
mov
dec
pop
and
mov
lret
mov
pushf
jg
mov
mov
pushf
icebp
pop
jecxz
mov
leave
das
push
or
inc
push
or
pop
js
or
ds
cmp
xor
in
cltd
imul
repz
aam
gs
je
or
jns
aaa
fwait
inc
add
aam
call
or
testb
in
sub
pop
mov
mov
and
and
add
dec
insl
and
inc
pop
and
shll
lods
test
data16
fiaddl
mov
cmp
lods
and
mov
popf
gs
jecxz
mov
scas
outsl
fwait
cs
mov
ja
int
popa
sbbb
pusha
sub
sub
insl
out
xor
lods
gs
int3
sub
xchg
xor
insb
loopne
hlt
add
sarl
inc
adc
ret
ss
fiaddl
bound
adcb
jg
je
lcall
and
shll
jg
lahf
xor
pop
stos
adcl
hlt
fldcw
mov
aam
data16
enter
jns
stos
shlb
push
sbb
adc
dec
pop
mov
adc
or
pop
push
push
jg
adc
adc
dec
xchg
xor
or
int3
adcb
ja
jmp
jo
repnz
in
aas
xor
xchg
mov
stos
sub
in
push
adc
or
loop
mov
mov
dec
push
jb
roll
adc
fcmovu
cmp
setl
call
rcrl
push
jge
out
push
sbbb
push
fisubs
adc
and
loope
jae
xlat
cmpsl
insb
lods
enter
cmp
lods
dec
outsl
shrl
or
shlb
mov
push
inc
inc
scas
mov
aaa
bnd
lahf
mov
ret
mov
xchg
pop
arpl
rcrl
in
or
loopne
xor
insb
rcrb
cs
and
add
adc
jmp
fdivl
inc
push
in
add
fsubp
mov
pop
das
pop
xchg
push
mov
in
adc
mov
mov
lret
and
adc
push
pop
push
in
pop
out
loopne
jl
sbbl
out
ds
insl
jg
mov
adc
addr16
in
cmpsb
push
pushf
pop
mov
sahf
jmp
movsb
loop
push
xchg
dec
ljmp
jge
xor
mov
lds
gs
xchg
dec
and
pop
fs
imul
mov
mov
mov
iret
push
and
cli
into
jle
add
in
arpl
ja
jge
int
jmp
xchg
dec
mov
cmp
hlt
fistpl
jae
xor
getsec
mov
sub
push
jp
mov
pop
and
in
cli
xchg
and
outsb
add
hlt
subb
sbb
inc
lahf
sbb
sub
loop
fdivr
xor
mov
push
shrb
fildll
sbb
cli
mov
xor
and
pop
or
enter
fs
push
sbb
cltd
dec
push
ja
js
pop
push
pop
fidivrs
clc
popa
insl
inc
cmp
and
mov
or
fmul
decl
repz
jecxz
test
test
inc
repnz
mov
mov
sbbb
out
add
cmpsl
out
cmc
inc
icebp
jno
mov
outsl
adc
aad
stos
icebp
pushf
stos
jp
dec
repnz
push
movsl
mov
sub
add
jmp
ss
cmp
jno
out
jo
lods
cwtl
paddsw
adc
or
sbb
daa
mov
pop
jle
mov
ja
mov
stos
adc
fimuls
inc
stc
mov
mov
add
add
push
inc
fs
icebp
add
dec
mov
inc
sub
xchg
fwait
cwtl
mov
and
xchg
push
rcrb
shrb
jae
mov
lret
sbb
or
ret
out
cli
cwtl
je
cmc
sub
aad
int3
add
xor
ds
and
std
push
aaa
sbb
shr
stc
call
mov
ljmp
cmpsl
pop
in
jno
or
cwtl
clc
rcll
imul
xor
adc
sub
jecxz
call
iret
loopne
popf
push
sub
dec
fisubs
movsb
das
je
sbb
add
dec
sbb
mov
lock
shl
sarl
cmpl
or
mov
inc
inc
sub
xchg
stc
rolb
shlb
push
adc
inc
negb
cmp
leave
pop
mov
dec
jecxz
adc
sbb
inc
jmp
cmp
dec
mov
clc
or
cmpsl
sbb
jmp
cwtl
and
add
pop
cmp
sbb
push
sbb
out
mov
push
mov
xchg
int
mov
mov
xorl
testl
int3
pop
mov
hlt
mov
flds
pop
lea
inc
inc
in
fsubrs
mov
adc
xchg
xchg
fadds
xchg
pusha
or
insb
cmp
sti
lds
xor
sbb
daa
cmpsb
push
int3
enter
popf
mov
mov
hlt
cmc
fdivs
sub
fdivl
lods
dec
inc
je
mov
sbb
pop
ds
in
or
insb
dec
adc
sbb
add
sub
sub
subl
enter
sbb
pop
test
loop
mov
pushf
pop
sub
and
into
lret
lock
and
imul
mov
cmp
xchg
fadds
fsubrs
and
xor
sub
and
dec
jbe
loopne
mov
pop
xorl
add
push
or
inc
fildl
and
dec
aam
adc
push
shlb
arpl
or
ljmp
sub
mov
jno
or
into
outsl
mov
xchg
push
stc
loope
dec
jp
icebp
sbb
shlb
and
int3
imul
lods
mov
scas
adc
push
fninit
mov
xor
cmc
sbb
movsl
lods
pushl
mov
sbb
flds
dec
dec
sahf
push
mov
je
lahf
jle
ljmp
xchg
mov
faddl
sbb
sbb
jl
cmp
or
mov
test
push
adc
fmuls
inc
and
fldl
outsb
mov
test
pop
fs
sub
mov
push
imulb
testl
out
int
jmp
jg
flds
leave
inc
pop
jp
dec
pop
adc
sbb
inc
xchg
daa
cs
repz
inc
adc
add
jle
fld
imul
mov
mov
fwait
push
jns
push
xor
push
or
or
sub
mov
imul
iret
icebp
aad
mov
loope
dec
iret
fs
pop
stc
mov
push
jne
xchg
add
es
lods
jbe
jge
sbb
rcrb
jno
cmc
sbb
enter
sbb
xor
ss
push
cs
fs
fstps
bound
pop
test
jecxz
repz
and
pop
sbb
cmp
leave
push
sub
popa
jae
mov
sub
push
test
testb
lds
fdivrs
hlt
adc
les
leave
lea
jnp
inc
divb
inc
out
mov
test
add
enter
sbb
cmp
sbb
addr16
shr
pushf
roll
push
xor
cli
iret
in
jo
shlb
xor
std
xchg
mov
pop
xor
mov
les
les
and
hlt
into
les
cmp
test
divb
aas
xlat
cs
leave
adc
inc
mov
clc
push
and
add
mov
cltd
add
push
outsl
addr16
xor
mov
les
pop
mov
shlb
imul
inc
adc
cmp
add
lock
dec
add
cmp
je
jo
jne
push
jmp
pop
jl
mov
dec
ret
ds
jg
rcr
fstpl
cmp
lret
push
les
popa
gs
push
and
push
mov
dec
das
jns
aad
es
inc
notl
inc
xor
test
aas
pop
mov
push
clc
pop
and
cmp
les
fmull
xor
adc
or
shrl
xor
cmp
data16
or
and
sub
push
jns
fsubl
test
jmp
test
adc
adcb
rorl
fists
scas
jb
inc
incl
pop
fnsave
lock
loopne
imul
out
push
pop
pop
push
mov
fbstp
mov
add
hlt
mov
fidivl
popf
loopne
jl
mov
and
or
jo
lods
xor
mov
cmp
jb
cmp
fisubrl
pop
push
ficomps
xchg
xor
test
or
pop
xor
dec
neg
push
loop
ljmp
mov
mov
pop
xor
sub
in
xchg
dec
sub
jbe
imul
std
push
inc
bound
jp
push
movsb
xchg
sarb
add
mov
int3
popa
repz
push
or
push
inc
popf
pop
in
jmp
addr16
push
sti
push
subl
mov
mov
adc
mov
lds
stos
cs
data16
inc
lahf
test
jmp
lcall
dec
mov
xor
xchg
arpl
fstl
push
adc
icebp
jle
jmp
aas
push
cmp
repnz
xchg
pxor
lods
iret
cmpsb
shll
ss
mov
das
fistpll
hlt
jp
loop
jecxz
jb
out
aam
adc
jl
repnz
sub
into
inc
push
divb
ror
pop
aad
cmp
js
pop
or
stos
clc
push
scas
les
nop
sbb
cmp
roll
push
cli
sub
mov
push
push
pop
jg
mov
mov
mov
insb
punpckhwd
pop
rol
pop
loope
push
jb
inc
scas
fidivrs
dec
lods
in
and
inc
mov
shll
jle
dec
sub
add
xchg
or
fimuls
sub
cmp
repnz
jno
dec
cmp
xor
pop
notl
ds
or
jb
push
dec
call
pop
xchg
cmc
xlat
rorl
ret
xchg
movsl
sub
call
pop
sub
dec
mov
std
xor
cmpsb
push
inc
xorb
clc
add
xchg
push
or
xchg
jmp
and
sbb
cmc
push
fldt
sbb
xor
mov
xchg
lahf
repz
aas
and
gs
lds
in
ror
pop
rclb
mov
push
jno
inc
ret
push
jnp
mov
movsb
mov
rcrl
cmp
lret
add
call
popf
sbb
cmp
xor
xchg
sub
push
xchg
and
daa
pop
test
scas
test
pop
aas
sub
lret
push
jp
pop
push
in
in
dec
ficomps
cs
sbb
jecxz
shlb
dec
cmp
rclb
imul
push
out
xor
lret
mov
stos
dec
addb
sarb
test
add
and
cwtl
aas
cmp
push
popa
mov
and
and
mov
xor
enter
xchg
adc
mov
jmp
xchg
test
xchg
lds
cli
ss
fsubr
rorl
je
int
aas
jg
bnd
jecxz
jno
jne
and
push
divl
push
xchg
mov
pusha
or
aas
fnstenv
aad
xchg
dec
lods
nop
dec
or
adc
outsb
mov
int
push
out
inc
jecxz
inc
decl
xlat
and
enter
test
push
jnp
xor
dec
addr16
xor
xchg
dec
test
das
fcoms
pop
push
cmpsl
push
loopne
push
loop
loopne
stos
xchg
test
inc
adc
or
lods
jp
addr16
das
inc
dec
mov
pop
mov
cmc
sti
repnz
stos
push
xor
fdivrp
inc
inc
lock
aam
popl
nop
fisubrl
sysexit
call
sub
in
mov
cmp
dec
dec
push
ds
out
push
adc
jecxz
fcompl
mov
adc
orb
imull
fs
or
mov
sbb
xchg
or
insb
mov
notl
pop
mov
mov
push
cmc
push
xor
js
outsl
add
lods
mov
aas
inc
adc
jbe
out
clc
and
sub
mov
xor
mov
dec
aam
jo
cmp
movsl
push
les
inc
mov
xchg
cld
xchg
iret
dec
push
movsl
mov
and
pusha
mov
jbe
clc
das
pop
sbb
xor
lods
xor
adc
mov
and
push
mov
ficoml
outsl
and
pushf
mov
bound
xchg
xor
and
enter
xchg
insl
ljmp
dec
je
repnz
data16
bound
jbe
sbb
inc
jl
out
and
stos
movsl
imul
xchg
jg
pusha
sbb
dec
lea
pop
add
incl
sbb
dec
leave
icebp
inc
jo
mov
pop
aam
aad
sbb
adc
inc
aas
sub
xchg
mov
cmpb
mov
rcrl
xor
push
ss
sbb
mov
int
mov
xchg
loop
popf
mov
pop
insb
xor
ds
and
mov
icebp
or
out
mov
mov
push
fsubl
jp
movsb
jmp
cmp
adc
adcl
pop
decl
in
sub
inc
sub
fisttpl
xorb
jbe
insl
aaa
fcoms
lret
push
push
adcl
int
and
int3
adc
mov
jo
gs
ret
adc
fcmovb
push
lahf
or
xor
cmp
add
cli
jno
nop
fmull
push
data16
fisttpll
es
nop
mov
xor
inc
cmp
lret
ljmp
test
mov
mov
pop
nop
inc
sbb
stos
jcxz
cmpsb
xchg
cmp
jle
mov
jl
in
mov
stos
fcoms
jbe
repnz
xor
xchg
aaa
mov
push
adc
xor
out
inc
add
cmp
outsl
or
add
xchg
or
inc
or
sti
icebp
xlat
pop
inc
test
fcomps
movsb
xor
out
stc
lcall
cmovle
fdivrp
push
mov
es
jns
mov
add
in
cmpsl
in
aam
xchg
lods
cmp
jne
add
es
lret
sbb
popf
add
dec
xor
push
cmp
ja
and
push
xlat
dec
jle
jge
pop
fiadds
insl
loop
icebp
sbbb
rcll
jbe
xor
pop
inc
sub
and
sbb
add
jnp
xor
dec
loopne
cli
inc
jg
stc
mov
xlat
ja
push
cmp
xchg
leave
cmpl
in
xor
inc
or
xchg
jmp
sbb
cwtl
xchg
push
inc
xor
pop
addr16
lahf
clc
add
push
lds
arpl
sub
pop
imul
popf
in
mov
ja
dec
int3
push
enter
bound
js
iret
inc
fldenv
iret
mov
leave
and
into
outsb
outsl
push
push
sbb
mov
fcompl
sahf
sbb
jge
insl
pop
not
roll
pop
lock
test
mov
push
and
imul
jae
ret
inc
mov
lret
mov
mov
ret
inc
mov
stos
aad
aam
xchg
in
shrb
cmpsl
scas
ret
shll
adc
sti
adc
sub
test
cli
and
jo
inc
mov
cltd
cld
pop
test
jbe
pop
or
jne
mov
fcomi
out
test
pop
subl
pop
aaa
xchg
arpl
sbb
sub
insb
and
dec
jo
adc
frstor
pop
cwtl
sbb
mov
imul
sub
popa
data16
ds
or
cmpsb
pushf
dec
jno
add
out
dec
and
fisttpl
pop
mov
cmpsb
leave
cmp
repnz
fdiv
xchg
jns
push
push
sub
out
pop
cmp
outsl
jo
aam
cmp
sbb
inc
in
push
sub
xor
js
mov
dec
sahf
xchg
push
xor
xchg
sahf
roll
dec
inc
and
adc
scas
outsb
lret
repnz
inc
aam
or
and
sbb
cmp
popa
and
push
sub
push
loopne
sbb
inc
inc
shlb
mov
int3
pop
stos
std
mov
lds
bswap
sbb
fwait
pop
gs
fiadds
dec
xor
rorl
mov
push
mov
add
lods
push
or
movsl
jo
call
adc
mov
mov
jl
sbb
in
out
int
stc
dec
fprem1
mov
fsubr
and
and
fisttpl
sbb
lret
shll
je
scas
incl
lahf
mov
shlb
dec
divb
loopne
sbb
xchg
data16
push
jl
sub
imul
in
icebp
jb
pop
push
jge
mov
addr16
cmpsl
cwtl
test
out
icebp
pop
sbb
hlt
or
inc
xor
adc
les
test
inc
cmc
dec
pop
fsubs
es
das
jg
rol
lret
and
add
movsb
loop
push
inc
es
pusha
enter
add
sbb
mov
sbb
jae
adc
mov
cmp
lods
xor
sub
inc
jmp
shll
pop
push
mov
sbb
orb
fcmovnu
ss
std
fmull
js
insb
lret
add
aam
jmp
mov
out
loopne
dec
lret
call
or
and
xchg
test
mov
jae
test
imul
push
call
inc
xlat
bound
mov
and
and
in
ret
inc
adc
dec
ds
popa
mov
hlt
mov
mov
push
or
dec
dec
xchg
ljmp
mov
push
lods
push
fucomip
sbb
scas
mov
dec
out
pop
xchg
and
fnstcw
cmp
cltd
xchg
jnp
cmpsl
cltd
mov
call
add
test
aad
daa
adc
jmp
pop
mov
mov
movsl
testb
inc
push
dec
push
inc
rolb
push
push
and
mov
in
and
inc
sahf
mov
out
adc
aas
inc
xor
int
jns
sub
mov
enter
mov
or
adc
pop
or
adc
enter
dec
daa
sar
and
push
sti
mov
fs
sub
rclb
sbb
mov
insl
push
sbb
push
add
shl
lea
pop
lods
in
sub
adc
or
gs
inc
push
xchg
fcmovnu
std
insl
sub
mov
mov
or
cld
jne
fwait
pop
popa
cmp
insl
push
jns
lea
mov
mov
sbb
imul
lods
or
fists
xchg
jg
addr16
andb
scas
imul
das
add
pop
adc
mov
xchg
out
out
fisubl
int3
in
push
loopne
cmpsb
inc
lret
imul
mov
insl
push
call
xlat
pop
shl
popa
cs
cmp
ljmp
lret
mov
insl
adc
rcrl
outsb
and
jg
mov
ja
xchg
push
pop
sub
arpl
dec
repz
mov
sbb
clc
xor
cwtl
in
out
daa
lds
repz
xchg
sbb
mov
cmp
lret
push
adc
cmp
jno
nop
outsb
add
andl
jbe
mov
repnz
testb
push
scas
mov
sub
push
add
sub
mov
xor
sbb
xchg
mov
shrl
lahf
cmp
inc
ja
out
or
outsl
dec
mov
lea
addr16
push
lods
mov
push
aaa
das
mov
aad
aad
out
jecxz
adc
pushf
icebp
dec
push
daa
imulb
int3
push
pop
int3
out
in
adc
cld
xchg
movnti
andb
imul
xchg
mov
xor
flds
cmp
lret
loopne
or
out
cli
ret
push
int3
and
mov
lds
je
pop
and
xlat
pop
jo
es
iret
fdivrl
adc
stos
adc
push
rclb
lods
lcall
test
cmp
jmp
mov
test
mov
or
lea
insb
jmp
addr16
mov
shrl
pop
or
lcall
aam
sar
aad
or
popa
jae
out
pop
repz
test
push
mov
lock
movsb
sbb
push
jb
cmp
mov
pop
cltd
les
and
jne
out
pop
and
aad
mov
mov
or
adc
cltd
xchg
scas
mov
push
or
loope
add
fbstp
xchg
jne
mov
repz
movsb
push
push
dec
js
push
and
push
out
mov
fdivrp
adc
outsb
mov
ja
jge
adc
bndstx
ret
shrb
xchg
or
push
push
mov
cs
dec
sahf
loopne
fistps
mulb
xchg
loope
adc
mov
jae
jmp
push
icebp
adcb
mov
lds
nop
loop
subl
test
loop
hlt
mov
jnp
inc
cmp
fadds
ds
sbb
cli
arpl
mov
aas
lahf
in
fs
jno
aaa
push
sarb
pop
jns
wbinvd
inc
lock
push
test
int
push
rolb
push
jmp
test
pop
gs
dec
add
test
mov
outsl
fisubrs
xchg
int
hlt
xchg
xchg
pop
es
rol
jg
popa
nop
push
pop
pop
daa
cmp
push
mov
mov
js
adc
jmp
lock
out
dec
fidivrs
in
mov
jl
stc
jge
add
push
sbb
mov
negb
sbbb
jg
sbb
cmp
addb
pop
xchg
and
adcb
rcrb
cmpsb
xchg
ret
inc
xor
cmp
jge
pop
mull
out
mov
js
or
call
push
jmp
xlat
add
add
xchg
xchg
call
incb
sub
cli
fistl
push
sbb
jecxz
iret
mov
sbb
andl
mov
push
into
cli
test
push
cmpsb
push
scas
mov
in
add
push
push
test
push
inc
mov
test
jns
push
notl
mov
jae
lods
sub
push
push
sub
test
mov
dec
push
jb
xor
rcrl
das
jno
mov
cmp
inc
std
test
ljmp
push
inc
je
push
pop
mov
cmp
mov
push
sub
xor
popa
xchg
dec
dec
pop
mov
repz
jo
jle
scas
ja
or
outsb
jp
xchg
sbb
xor
pop
push
mov
testl
ss
dec
jp
pop
adc
lret
aam
jl
mov
or
push
out
jecxz
or
dec
popf
sbb
mov
loopnew
mov
jb
in
ljmp
js
loop
inc
cmp
fcomi
lods
rol
push
or
mov
jbe
in
dec
in
je
lret
add
push
gs
xchg
call
stos
mov
cmpb
sbb
mov
sbb
test
push
les
sbb
sbb
cmpsb
mov
fistpll
mov
add
mov
loopne
sbb
not
mov
je
pusha
sub
pop
mov
push
sub
xchg
sub
lds
iret
xchg
loopne
or
enter
cmpsl
add
stos
jb
add
jg
pusha
lret
add
je
dec
sbb
mov
hlt
or
int3
push
cmp
out
add
xlat
sbb
xlat
int3
cwtl
stos
enter
outsl
xor
leave
pop
mov
loop
cmpsb
mov
jg
addl
repnz
xchg
mov
sub
mov
xor
mov
shrb
dec
jecxz
pop
pop
mov
or
sbb
mov
daa
stos
notb
lock
jnp
cmc
ja
fwait
sub
mov
mov
enter
xchg
je
push
mov
inc
mov
xor
or
push
cli
sub
jle
mov
xchg
inc
int
cwtl
and
leave
add
or
aam
inc
in
dec
fnsave
mov
push
cmp
popf
mov
stos
aam
lods
xchg
stc
pop
dec
xor
dec
repnz
in
xchg
sbb
imul
loope
pop
sbb
and
fsubl
push
mov
sti
mov
xchg
sbb
shll
out
xchg
cltd
inc
pusha
icebp
aas
scas
mov
outsb
rcrl
mov
std
fiadds
ret
outsl
das
push
in
scas
psrad
test
repnz
dec
scas
mov
inc
das
jno
scas
lcall
push
insl
popf
xchg
sub
sbb
pop
cmp
sbb
dec
or
jno
pop
cmpsb
imul
sbb
nop
ljmp
les
ret
sbb
pop
sbb
jp
movd
or
hlt
test
jg
fcompl
mov
icebp
jno
jb
addr16
jle
xchg
mov
cmp
mov
movsb
cmp
scas
jp
cmp
in
loope
jl
inc
xchg
xchg
out
testl
xlat
clc
popa
push
mov
xchg
dec
mov
arpl
subl
jecxz
lcall
push
dec
xor
in
sbb
inc
sarl
mov
push
and
movsl
out
xchg
ljmp
mov
sbbl
adc
pop
push
cmp
mov
mov
pop
sar
and
mov
mov
xchg
xchg
daa
xlat
cmp
out
xor
bnd
adc
sbb
cmc
popf
movsl
in
test
dec
sbb
inc
mov
mov
jne
mov
jle
in
in
sbb
pop
stos
add
out
dec
pop
dec
push
pop
xchg
mov
in
sbb
sub
decb
sub
mov
push
loop
in
inc
mov
mov
aad
adc
dec
test
pop
mov
fmuls
leave
jl
adc
pop
cmc
dec
cmp
mov
dec
bound
jmp
cmp
je
adc
pusha
les
test
pop
push
sub
enter
dec
pushf
in
rol
pop
faddl
xchg
sbb
pop
fcompl
outsb
cmpsl
sarb
loop
inc
popf
gs
mov
push
in
inc
mov
push
addr16
xor
movl
je
push
fiaddl
jns
or
mov
xor
sbb
mov
pushf
gs
loopne
leave
pop
jbe
pop
adc
ja,pn
sbb
pusha
jns
ror
daa
cs
mov
adc
ficoms
in
adc
arpl
add
xor
pop
in
in
mov
xchg
or
mov
mov
inc
aad
mov
out
xchg
or
xor
int
add
mov
int3
or
sub
xchg
xchg
stos
xor
pop
shlb
cmc
stc
xchg
jb
stos
lea
cmpsb
out
push
sbb
ror
push
jle
adc
test
lea
mov
inc
popa
lret
xchg
xor
mov
testl
cmpsb
fidivl
add
cli
popf
sub
lock
cmp
leave
lea
and
push
mov
add
mov
addr16
mov
fcomps
cmp
jo
daa
shrl
jno
mov
out
add
xchg
adc
movsl
lods
in
jno
inc
dec
icebp
xchg
fdivs
jp
insb
cmp
inc
sbb
addr16
inc
xchg
push
dec
loope
adc
adc
cli
hlt
adc
mov
and
mov
add
cli
aad
jge
dec
push
sbbl
pop
mov
inc
imul
xlat
bound
xchg
jg
dec
and
daa
in
jo
inc
push
jg
addb
xchg
into
insl
movsb
cmp
insb
out
loopne
imul
mov
aaa
les
movsb
and
mov
repz
jmp
xor
std
xchg
cmc
pop
or
sbb
out
or
mov
fadds
dec
sbb
cmp
cmp
cmp
xor
or
clc
enter
or
je
ds
outsb
push
cmp
cmpsl
sbb
pop
or
jle
push
jmp
dec
xchg
push
or
inc
in
std
pusha
loop
mov
push
push
pop
loop
mov
sub
jmp
push
frstor
xchg
fucom
adc
ss
push
jb
push
in
add
arpl
lret
lods
ret
mov
test
add
sbb
aad
lret
jae
or
pop
daa
xchg
mov
sahf
into
mov
bound
outsb
dec
add
jl
or
dec
and
hlt
xchg
filds
mov
jp
out
lahf
test
inc
ret
out
ret
xchg
xchg
or
mov
icebp
and
test
mov
mov
cmp
mov
cmp
lock
rolb
in
xlat
inc
outsb
aaa
aam
movsl
imul
sbb
daa
int
cmp
lea
daa
or
pop
cmp
popf
sub
push
hlt
bound
xchg
push
repnz
or
or
dec
cmp
popf
rcl
test
sub
andb
or
das
lock
insl
adc
mov
inc
sub
jb
test
push
fidivl
mov
adc
mov
add
sarl
jge
jb
aas
and
adc
aaa
xchg
push
movsb
mov
insb
pop
push
fadds
cld
enter
sarb
push
pop
insl
ja
js
and
leave
cltd
pop
orb
sbb
pusha
sub
hlt
adc
sbb
mov
insb
in
push
outsb
xchg
aam
cmp
mov
cmp
sub
push
push
xchg
icebp
adc
mov
add
sub
mov
insl
ret
dec
sti
popa
loop
cld
fisubrs
jno
mov
adc
or
cs
fstpt
cmp
sti
xor
outsb
mov
daa
shrb
test
stos
ret
pop
loopne
das
scas
push
movsl
cs
mov
adc
mov
or
push
jmp
test
pop
imul
cmpsb
mov
jo
xor
lea
insb
sbb
hlt
xor
shrl
nop
xor
mov
addr16
dec
add
mov
loope
dec
jo
push
or
cmpsb
xor
cwtd
cmp
push
lret
pop
jns
outsb
sbb
ja
aam
xchg
imul
xchg
icebp
adc
adc
testl
add
dec
sahf
std
shrl
xchg
or
sub
sti
shr
cmpsb
adc
push
in
stos
sbb
cli
ret
rorl
lret
dec
ficomps
andl
add
bound
shll
pushf
repnz
in
lret
sub
data16
mov
xor
xor
daa
aam
fwait
fwait
in
movsb
rep
xchg
mov
and
dec
push
lcall
fldt
add
mov
pop
jg
cli
and
or
and
les
sti
sub
sbb
aam
lods
into
fsubr
dec
xchg
sub
in
xor
xor
lock
mov
frstor
lds
mov
mov
aam
jmp
arpl
lret
pop
sahf
push
mov
outsb
ljmp
aam
ret
adc
mov
jp
cli
call
rcrb
inc
push
dec
jg
lods
sbb
rcl
cli
dec
mov
or
ss
pop
inc
sbb
cmp
repz
lcall
mov
dec
sub
loopne
mov
imul
enter
inc
pop
nop
and
or
je
scas
mov
dec
pop
sbb
mov
sbb
and
cmpl
dec
mov
cmp
aad
push
or
test
lds
cmp
xchg
mov
add
cli
jecxz
pop
pop
dec
xchg
int3
pop
jno
jmp
adc
mov
xchg
fmuls
mov
call
jp
or
ret
adc
subl
dec
inc
lcall
lods
or
gs
dec
repz
adc
stc
std
sbb
cmpb
lcall
out
jmp
push
adc
iret
inc
dec
mov
jecxz
scas
outsl
shrl
mov
dec
jecxz
mov
repz
cmp
inc
mov
push
push
pop
jns
pop
or
movsb
sub
push
rorl
sbb
stos
push
inc
std
das
dec
and
jle
std
push
mov
pop
ficoml
repnz
jno
push
stos
and
mov
into
dec
adc
xchg
sub
outsl
push
imul
mov
popf
lahf
mov
aas
xor
cmpsb
lds
add
add
int3
sub
add
cmp
mov
test
fisubrl
cltd
jge
aad
pushf
insl
xchg
aam
bound
push
cmp
jecxz
test
lods
or
cvttps2pi
inc
pop
sbb
push
int
xor
test
inc
mov
sbb
mov
adc
dec
xchg
mov
popa
nop
adc
movsl
cmpsb
push
sbbl
jns
jno
pop
ja
lcall
fdiv
inc
clc
push
daa
pop
fsubp
fs
imul
xor
cmp
jecxz
pop
jge
mov
fldenv
adc
cld
lret
or
aam
mov
mov
enter
aas
repnz
loopne
and
inc
movsb
or
push
or
in
inc
push
pop
dec
mov
mov
test
mov
dec
pop
pushf
mov
dec
aas
jbe
dec
push
mov
arpl
outsb
and
or
aas
mov
fisubrs
dec
or
lea
xchg
mov
inc
lcall
mov
fwait
imul
sub
xchg
popl
jnp
lock
nop
push
loope
lcall
xchg
mov
pop
out
loopne
lds
mov
fnstenv
pop
fwait
mov
inc
fs
mov
shll
nop
lcall
inc
add
jl
sub
jg,pt
test
sub
pop
rcll
les
dec
ds
mov
cli
cmp
inc
dec
dec
hlt
xchg
sub
std
pushf
jle
and
bound
and
pop
stos
cld
sbb
mov
dec
mov
and
ds
sub
inc
and
mov
adc
stos
ljmp
jno
dec
out
outsb
mov
pusha
subb
mov
ret
xchg
xchg
fisttpl
leave
int3
jbe
xchg
add
ds
cmpsb
ss
jae
sbb
cmp
ss
pop
or
cmp
ret
ret
cmp
sti
xchg
ljmp
pop
inc
int
pop
or
xor
int3
xchg
jae
fisubrs
inc
mov
mov
sti
cmp
test
inc
pop
nop
dec
imul
inc
or
mov
test
mov
popl
int
cltd
mov
cmp
mov
pop
lea
xor
popf
sbb
rclb
mov
mov
insl
jo
into
push
jae
rolb
mov
inc
fsts
pop
sti
push
ficomps
and
ljmp
nop
xor
xchg
test
xchg
in
sub
xor
aad
lcall
jb
inc
ret
and
or
adc
sbb
out
jo
pushfw
xchg
sti
xchg
push
movsb
clc
mov
loope
cld
sub
insl
loope
stos
jg
idivb
sbb
or
fsubrs
sub
mov
sti
hlt
mov
addr16
fs
jnp
or
push
arpl
pop
loope
sub
cli
decl
add
pop
and
xor
es
pop
aaa
enter
repz
jnp
aas
adc
mov
xchg
mov
jns
mov
mov
adc
stc
jnp
aas
lods
and
mov
aas
sbb
and
dec
cmpsb
adc
jns
mov
cmp
aas
fcmovu
int
inc
pop
mov
add
ret
fsubrl
popf
mov
mov
pop
aas
cld
repnz
sub
push
paddusw
loop
sub
mov
std
pop
or
dec
add
jns
cmp
jno
imul
inc
dec
cmp
je
jnp
cmp
xlat
pusha
push
xor
mov
ss
int3
xor
pop
mov
inc
jecxz
cwtl
cmpsb
sub
fdivr
and
dec
dec
loope
popa
mov
push
es
fwait
les
icebp
add
shrb
es
push
sbbb
loopne
adc
int3
leave
jmp
imul
add
jp
jl
ss
icebp
xchg
dec
push
into
rol
xor
ds
and
xchg
repnz
andl
push
or
iret
pusha
pusha
push
pop
cmc
cmp
sahf
xor
pop
outsb
movsl
lcall
push
push
add
dec
in
sti
mov
jae
or
nop
pop
mov
push
push
fcos
cltd
xchg
jbe
mov
jo
bound
adc
test
addr16
enter
push
sub
dec
test
les
add
test
add
out
push
call
mov
cmp
mov
cmp
test
lcall
cmp
add
js
lea
adc
sahf
sbb
mov
inc
xchg
mov
adc
mov
mov
xchg
adc
cmpsl
xor
xchg
mov
lret
nop
xor
popf
mov
fwait
arpl
sub
clc
cmp
inc
and
stc
jno
pop
popl
mov
push
mov
aas
in
mov
mov
adc
jl
dec
or
lods
jo
int
jnp
mov
dec
shrb
movsl
sbb
sbb
fs
mov
xor
jl
incb
push
aam
fisttps
xchg
jnp
in
pop
mov
or
lods
gs
sar
xchg
cmp
and
cld
jle
inc
addr16
rolb
mov
push
jo
loope
leave
pop
adc
xlat
stos
movsl
imul
lahf
icebp
jp
xor
daa
ja
or
cli
fnstsw
mov
sti
mov
dec
mov
mov
decb
scas
out
fcompl
dec
les
btr
orl
sahf
cmp
ret
testb
subb
adc
arpl
dec
dec
mov
int3
sahf
bnd
inc
push
ds
rorb
inc
aam
mov
scas
mov
test
cmpl
fcomp
cmp
andl
sub
cmp
dec
jl
ret
ja
xor
lret
sahf
ret
dec
aam
mov
ja
imul
insb
mov
push
sub
out
inc
addr16
pxor
or
xchg
dec
cltd
das
mov
cmpsl
mov
cmp
mov
cmpsl
lret
mov
pop
ret
mov
or
sub
add
and
loope
sbb
inc
out
decb
xor
xchg
add
in
push
scas
pop
int
pushl
mov
pushf
pop
sbb
arpl
or
add
jge
mov
inc
xchg
fbstp
cmpsb
dec
cmpsb
sbb
nop
jns
scas
jae
repz
lcall
repnz
and
ret
or
mov
dec
rcr
stos
fmull
push
lret
stos
lret
jno
xor
mov
jmp
rcr
pusha
andb
mov
or
addr16
insl
xchg
rcrl
test
push
scas
mov
sub
test
pop
test
mov
xchg
decb
notl
paddusb
int3
in
and
je
pop
and
cmc
mov
or
and
stos
sbbl
icebp
push
icebp
call
sbb
int
mov
lds
stos
stc
stc
pop
inc
jge
add
cld
xchg
int
popa
cmp
bound
or
or
jne
icebp
cmp
jns
push
pop
push
leave
dec
dec
or
ret
add
hlt
sbb
cmc
subl
mov
pop
rol
nop
xchg
push
adc
clc
xchg
push
jecxz
addr16
mov
push
ficoms
lret
mov
dec
mov
adc
sbb
sbb
mov
sub
pop
outsl
push
fildll
sbb
call
lock
cwtl
out
or
pusha
or
mov
cmc
or
roll
loopne
cmpsb
and
cltd
js
and
jnp
add
push
outsl
sti
dec
mov
push
add
cmp
lods
add
mov
add
ficomps
add
jmp
je
ret
mov
xchg
jns
jne
jne
add
jb
jns
jnp
in
pop
adc
jecxz
das
push
jmp
shlb
adc
iret
cltd
adc
push
adc
ret
cmp
mov
aad
aaa
outsl
movsl
aam
xchg
inc
inc
lock
pop
cmp
jmp
push
scas
mov
leave
inc
mov
add
xor
test
andb
push
inc
das
mov
cld
ljmp
add
mov
ss
fisttpl
popf
mov
leave
xor
sahf
and
pop
addr16
std
mov
movsl
mov
fwait
cld
and
popf
push
lahf
cltd
adc
mov
inc
jne
push
fstps
cli
sub
jecxz
and
cwtl
push
repnz
mov
jo
jns
fisttps
pop
outsb
js
sti
mov
loopne
mov
fwait
cmpsl
rolb
lock
mov
call
jge
aad
jle
sub
xor
adc
cmp
ss
insl
cmp
loope
dec
adc
jno
pusha
out
jmp
dec
inc
fdiv
add
dec
mov
decb
enter
into
or
mov
and
mov
sbb
push
sti
in
into
shll
data16
sub
push
jne
stos
cld
xor
divl
dec
lret
test
xchg
push
sbb
mov
pop
xchg
stc
mov
lcall
sti
test
cltd
insl
outsb
xchg
sbb
mov
pop
add
mov
mov
popa
dec
or
je
outsb
sub
loop
lods
roll
out
pop
push
mov
xchg
es
movsb
push
repz
leave
or
in
jp
gs
sub
fwait
and
inc
nop
adc
adc
lret
xchg
dec
sbb
leave
push
sbb
les
fxch
dec
mov
jne
pop
jmp
or
imul
xchg
push
stc
or
mov
xlat
insl
mov
rcrl
mov
arpl
movsl
cwtl
inc
rolb
cs
sub
pop
sub
insl
shl
ret
cmove
mov
or
sbb
xchg
lods
lret
leave
clc
leave
int3
sbb
jnp
inc
mov
and
jmp
into
jl
stos
dec
jmp
pop
mov
jne
pop
outsl
sahf
mov
inc
mov
dec
in
jno
xchg
inc
dec
mov
inc
sahf
adc
hlt
add
push
in
or
mov
sarb
adc
ficoms
rorl
pop
mov
or
sbb
inc
cmc
cmp
cmp
sub
fcompl
ret
imul
xchg
mov
or
push
popa
int3
jecxz
and
ja
push
mov
dec
and
testb
pop
mov
add
pop
call
add
push
sbb
lds
idivl
movsb
sub
sbb
mov
stc
sub
insl
mov
add
or
addl
jb
cwtl
cmp
xor
outsb
call
mov
loope
cmp
mov
fadd
mov
out
shlb
adc
scas
jmp
sub
pop
sbb
inc
mov
and
aas
or
repnz
test
je
pop
pusha
pop
rorb
xchg
mov
cs
shll
ja
dec
pop
cmp
push
shl
push
das
adc
cmpsl
jge
jae
mov
call
push
fdivrl
add
add
push
mov
jne
push
inc
addb
push
gs
jecxz
cmp
pop
movsb
aam
adc
adcl
dec
lock
adc
mov
int
jl
push
mov
rcll
cmp
mov
cld
adc
sbb
and
mov
xchg
btr
mov
lahf
pop
adc
imul
sahf
mov
fimull
push
inc
xor
insl
or
pop
aam
pop
xchg
shll
push
jne
fbld
xchg
pop
xor
mov
out
lret
push
inc
and
dec
mov
and
and
mov
pop
xlat
fstpl
jne
pop
sub
loop
mov
mov
cmpsl
inc
cmp
sub
add
jge
jecxz
fisttpll
cmp
stos
push
mov
dec
inc
cltd
add
ss
mov
shrl
ret
andl
adc
push
sub
mov
inc
hlt
dec
in
cmpsl
imul
stos
dec
mov
mov
or
aad
enter
daa
gs
jo
iret
dec
icebp
push
call
pop
cwtl
jns
clc
inc
loop
push
xchg
mov
xor
stc
rcrb
dec
rcrl
in
popf
lret
adc
or
icebp
rcrl
jbe
cmp
pop
lret
push
pmaxsw
sbb
sahf
mov
mov
ret
imul
mov
inc
arpl
jbe
fidivl
fidivl
aas
outsb
jbe
fwait
mov
push
jae
ja
enter
stos
cwtl
das
inc
sbb
mov
xchg
fistps
addr16
out
xchg
jns
mov
je
out
cmp
xchg
push
pop
inc
push
pop
lods
lods
pop
sub
pusha
outsb
and
divb
jnp
pop
cmpsb
test
cwtl
push
je
jo
outsl
jns
xor
mov
ret
jp
adc
xor
mov
stos
out
inc
cmp
dec
adc
loopne
lcall
jae
and
adc
jnp
pop
pushf
sti
clc
rorb
add
sub
inc
inc
push
loop
jecxz
mov
arpl
pop
js
pop
mov
outsb
aas
bound
insb
xchg
out
aas
or
call
fs
call
dec
arpl
sub
xor
dec
or
fnstsw
mov
inc
and
mov
mov
xchg
xor
mov
fisubs
mov
sub
push
or
xchg
fdivrs
sbb
push
cltd
mov
cmp
jl
jno
addr16
cmpsl
ror
popa
jl
sbb
imul
jo
mov
cmpsb
addr16
mov
sub
jecxz
std
mov
xor
out
and
int
push
es
mov
packuswb
or
push
ret
push
cmpsb
add
sub
dec
xor
ljmp
sub
sbb
les
js
ja
loopne
adc
wrmsr
mov
lret
pop
or
mov
push
orb
mov
and
mov
fwait
mov
pusha
xor
pop
dec
repnz
sub
test
divl
nop
in
mov
adc
loope
in
fs
and
jp
je
imul
lret
scas
mov
lea
mov
dec
lods
push
outsl
mov
jle
mov
repnz
pop
add
pop
scas
hlt
cli
dec
jns
xor
mov
xlat
dec
mov
adc
mov
jecxz
add
push
pop
js
daa
sub
incl
adc
adc
fwait
add
and
push
out
icebp
jl
xchg
sub
dec
clc
xlat
mov
outsb
mov
mov
xchg
mov
out
in
adc
fstpt
xchg
loope
lahf
out
inc
add
out
clc
xchg
mov
aad
inc
dec
push
cmc
mov
scas
shr
fs
subl
jns
dec
pushf
cmpsb
jl
cli
add
ljmp
in
scas
adc
push
insb
xor
adc
adc
mov
inc
mov
pop
add
sub
insl
popl
adc
ficompl
fxam
mov
mov
shlb
les
arpl
test
mov
add
pushf
arpl
sti
add
iret
or
jnp
shrl
push
js
sub
hlt
fs
inc
je
ja
or
dec
repz
stos
test
mov
lahf
inc
es
fmul
imul
lods
mov
popa
jns
cmpsl
movsb
and
ja
push
mov
mov
arpl
jmp
arpl
jb
in
cmpsl
xor
shlb
pop
cli
xchg
mov
pop
xchg
mov
insb
xor
lock
es
add
shl
and
loop
mov
cltd
mov
aas
je
adc
shlb
pop
inc
insl
xor
imul
push
stos
lds
sub
mov
cmp
je
stc
rcrb
cmp
scas
adc
int3
sbbb
inc
test
jno
loope
pop
mov
icebp
outsl
and
or
cmp
pop
adc
mov
movsl
into
stos
adcl
mov
pushf
vpaddsw
jns
push
add
sbb
jno
inc
aad
lods
inc
hlt
clc
andl
xor
gs
or
cwtl
dec
loopne
fisubrs
stos
loopne
rorb
pop
test
cld
adc
repz
pop
sbb
jp
mov
pop
fiadds
jo
and
je
push
andb
xor
mov
sbbb
or
inc
popf
in
aam
sbb
add
rolb
pop
aad
fidivrs
in
scas
lock
daa
dec
ret
in
arpl
pushf
jno
cmc
mov
mulb
xchg
js
or
out
mov
sub
lods
jmp
lahf
xlat
lret
xlat
insl
loop
addr16
push
pop
cwtl
pushf
pop
fiadds
mov
dec
push
out
mov
sub
jl,pn
push
decb
sub
xor
stc
mull
or
jns
push
outsb
push
mov
or
repnz
mov
int3
adc
js
mov
add
lret
rcll
mov
sbb
test
lcall
insb
addr16
xchg
adc
pop
scas
mov
outsl
shlb
xor
outsl
add
lea
movsl
xchg
sahf
pop
inc
inc
ds
movsb
lods
subb
lcall
pop
pop
cwtl
adc
lcall
mov
xchg
jmp
ret
pop
add
test
pop
pop
jle
jo
mov
or
jecxz
orb
sbb
mov
add
imul
mov
push
cmp
xor
mov
xor
daa
and
test
lods
dec
mov
push
xchg
mov
cmp
xor
test
sbb
xchg
fnsave
adc
jmp
mov
lods
pop
and
and
int
push
mov
jp
in
stc
and
jmp
stos
jns
test
adc
pcmpgtb
lcall
dec
inc
sub
aad
xlat
lock
pop
fcmovbe
shl
inc
imul
xor
icebp
cmp
xchg
xchg
or
xchg
mov
jo
push
or
sti
mov
test
test
enter
out
aas
adc
jbe
push
sbb
bound
dec
jo
dec
aad
rcr
stos
pusha
push
cmp
mov
test
fdivp
push
mov
stos
test
outsl
jecxz
stc
fidivrl
xor
jnp
mov
inc
rcll
loopne
movsb
es
jecxz
fcmovb
mov
test
lahf
mov
mov
outsb
clc
pop
jp
fcompl
adc
sbb
test
sub
xor
jp
mov
xchg
stc
mov
out
mov
aaa
mov
inc
mov
xor
mov
popa
int3
mov
int3
or
pushf
mov
sub
enter
or
push
iret
add
in
scas
inc
dec
shl
cs
lods
in
dec
pusha
iret
rorb
stc
mov
jnp
addr16
cli
fmul
cmp
out
inc
add
movsb
xchg
and
lods
push
fdivrl
sub
into
pushf
push
aaa
sbb
mov
sub
leave
xor
sub
mov
inc
ja
testb
xchg
and
push
xor
sbb
rcr
pop
mov
ljmp
mov
roll
or
pop
mov
lock
shl
mov
movsl
aad
jae,pn
enter
sub
outsb
icebp
imul
xlat
decl
les
dec
xor
jp
sub
lods
data16
jle
insl
test
es
pop
rcrl
jae
push
addr16
dec
inc
xorb
xchg
dec
aas
ss
dec
shr
jns
popa
push
mov
push
fisttpl
mov
adc
fnstcw
xchg
in
hlt
sbb
add
push
mov
push
jne
push
aad
ss
inc
push
leave
insb
mov
jl
xlat
xchg
add
dec
xor
sbb
mov
sahf
roll
je
arpl
adc
cmp
mov
jl
sbb
out
inc
jae
es
push
movsl
int
fstps
and
push
push
sbb
out
insb
cltd
and
xlat
xchg
push
pop
mov
lret
mov
jns
and
cmpsl
pop
adc
int3
jp
pop
mov
adc
sub
roll
fcom
xchg
dec
cli
pusha
or
adc
test
xor
call
in
or
rolb
xor
mov
outsl
fs
cmp
push
test
xor
sub
inc
or
test
dec
xor
jae
jp
mov
or
js
add
cmp
dec
fdivrs
jl
lahf
mov
push
test
push
pop
jnp
pusha
pusha
xor
cs
adc
test
imul
movsl
jge
xchg
or
ja
push
adc
insb
lea
cs
sub
jbe
xchg
ret
loope
mov
pop
mov
enter
dec
mov
xchg
pop
and
iret
xor
pop
aam
push
push
dec
in
sub
sbbl
adcb
lahf
sti
sbbl
stos
paddusb
dec
loope
and
sti
sbb
cmp
lock
pop
mov
and
mov
test
jnp
inc
ret
addr16
cmpsb
inc
icebp
cmp
mov
inc
adc
jmp
jmp
mov
dec
data16
and
jge
in
pop
add
pop
pop
cmp
adc
xchg
add
pusha
sbb
mov
jne
mov
rcr
push
jns
lahf
enter
mov
leave
fnstsw
test
arpl
divb
xor
pop
mov
cs
pop
lret
adc
xor
in
je
aaa
cmc
jecxz
pushf
and
mov
jb
inc
imul
mov
dec
xchg
jae
pop
rcrl
imul
lret
inc
mov
sub
xchg
cltd
daa
cld
mov
mov
nop
xor
and
ja
mov
scas
xor
ds
addr16
jns
or
jl
cmpsb
push
cmp
dec
fmulp
sub
fucompp
fidivs
dec
fwait
inc
or
popa
in
pop
rcl
or
notb
imul
adc
pop
xchg
push
and
lock
pop
movsb
cmp
outsb
and
movsl
cmpl
mov
dec
bound
push
sbbb
scas
ret
cmp
push
mov
mov
outsb
inc
rclb
and
out
scas
push
push
js
test
js
xor
mov
and
fldenv
push
popf
notb
jne
jo
clc
cmp
shrb
test
push
std
lds
lea
and
rcrb
insb
and
aas
or
loop
aad
dec
mov
mov
adc
sbb
lock
orl
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
decl
fmull
pop
test
and
jb
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
adc
pop
in
jb
dec
dec
popa
or
sub
aam
movsb
inc
dec
jl
test
test
jns
int3
cmp
imul
sub
ss
pop
test
arpl
mov
push
ljmp
daa
xorl
add
mov
cmp
push
aad
inc
lods
repnz
mov
push
sub
adc
loopne
ljmp
daa
arpl
pop
lahf
inc
sbb
in
sub
mov
aas
mov
dec
dec
roll
mov
mov
arpl
mov
pop
test
adc
stc
jns
sbb
and
dec
out
pop
stos
mov
adc
fmuls
pop
test
xor
jb
test
and
fcompl
pop
stos
mov
adc
pop
test
push
and
dec
out
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
fmull
push
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
push
dec
movsb
cmp
jb
test
xor
sub
pop
lods
mov
and
dec
out
pop
test
sarb
test
test
and
fmull
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
test
and
sub
pop
adc
or
adc
sbb
lods
ljmp
hlt
int3
iret
enter
xchg
movsl
cmp
xchg
ret
clc
sbb
pop
pushf
lret
outsb
out
and
add
enter
xchg
pminsw
cli
cmpsb
dec
stc
ljmp
push
xor
aam
rcrb
out
daa
add
enter
xor
dec
stc
mov
loope
arpl
inc
push
xchg
add
or
out
mov
aam
cmpsl
cmp
lret
stos
mov
es
xor
mov
in
popf
pop
ds
dec
cmpl
mov
inc
sub
jae
iret
mov
and
jne
inc
mov
sub
hlt
stc
hlt
adc
fcmovnb
js
in
into
add
xchg
cmpsl
inc
jmp
add
add
popf
cs
int3
sbb
cmc
out
mov
xor
mov
shlb
loop
pop
test
and
rcrl
das
mov
mov
mov
mov
push
mov
sub
mov
int
loop
lods
fdiv
lahf
repz
push
sub
dec
inc
aad
dec
imul
xchg
sbb
rcll
jne
inc
push
in
push
dec
out
aam
stos
std
test
lds
aas
xchg
mov
mov
xor
pop
dec
test
loope
sub
inc
and
mov
out
add
outsb
call
pop
mov
dec
lds
popf
mov
cs
pop
ficomps
sbb
rcll
in
pop
orb
mov
fld
pusha
mov
sub
dec
and
jl
xor
cmp
ja
xchg
mov
add
fcoml
sub
fwait
rclb
sahf
jecxz
aaa
xchg
cli
and
jne
in
mov
stos
mov
fimuls
ret
pop
jns
mov
mov
roll
inc
dec
cli
pop
pushf
lds
psubq
sbb
fisubl
fisubrl
hlt
pusha
pop
jg
addb
leave
mov
in
call
daa
push
jge
or
sbb
jle
cmp
push
aad
inc
shrl
xchg
pop
stos
rcrl
push
and
ljmp
pop
out
xchg
pushf
fnsave
dec
push
adc
cmpsb
pop
fcompl
jmp
int3
js
pop
add
inc
dec
call
scas
mov
cmp
shrl
call
mov
cmc
cltd
adc
shlb
dec
adc
mov
ds
dec
ficomps
or
and
xlat
add
dec
leave
push
push
push
jne
add
xor
add
aad
push
lods
jae
sbb
mov
repnz
int
jp
rcll
mov
sahf
ret
xor
xchg
lcall
sbb
ss
aas
sbb
iret
mov
xor
ljmp
cmp
repnz
sbbl
out
fsubrp
mov
push
lea
iret
push
adc
dec
xor
icebp
jmp
xor
subl
rol
mov
rcll
pop
leave
pop
sub
fwait
push
icebp
push
les
in
sbb
repz
flds
mov
xchg
cmpsl
int
xchg
xchg
test
push
mov
aam
xchg
ds
push
cmp
in
cwtl
test
stos
add
and
repz
dec
lret
add
mov
jno
adc
ljmp
icebp
mov
mov
mov
rcr
sub
pusha
fcmove
xchg
xor
pusha
cmp
pop
adc
jbe
mov
jle
lcall
mov
mov
std
gs
mov
popf
mov
push
adc
imul
xchg
mov
mov
and
sarl
repnz
cmp
int3
lock
mov
loop
push
sbb
jnp
aaa
jmp
aas
jnp
xor
ret
lods
sub
xor
frstor
jmp
mov
dec
loope
ds
adc
jp
dec
mov
dec
cmc
aad
jg
imul
mov
push
sti
xor
cmp
mov
jae
and
mov
dec
insl
dec
cmp
subb
je
mov
mov
ret
pushf
xlat
mov
div
clc
mov
mov
fisttps
icebp
and
lock
jb
popa
clc
popf
xor
cmc
xor
add
insl
aas
mov
call
ja
and
push
imul
js
sub
push
or
mov
xchg
aam
hlt
push
idivl
imul
dec
or
rcrl
shll
out
mov
mov
ljmp
sub
pusha
aam
mov
les
or
test
inc
js
nopl
sbb
or
ja
adc
nop
mov
sahf
dec
mov
and
pop
out
shrb
xor
shll
xchg
mov
and
aas
lret
add
jns
inc
jg
inc
push
sarb
dec
push
jne
push
lea
jecxz
stos
push
icebp
mov
mov
inc
movb
cmpsb
cld
addr16
add
and
xor
lods
sub
rcl
sbb
pop
inc
sbb
mov
int3
dec
jp
mov
xor
mov
dec
inc
sub
ds
mov
xchg
push
iret
stos
push
aaa
mov
sahf
arpl
xchg
mov
cmc
fst
das
jecxz
pop
mov
pop
add
xchg
mov
pop
adc
cltd
mov
lahf
popf
hlt
mov
leave
scas
inc
mov
mov
jb
clc
push
leave
mov
dec
test
inc
mov
dec
adc
test
fsqrt
mov
mov
mov
or
add
push
mov
lods
cmc
dec
fstp
fmul
mov
fisubrs
inc
adc
adc
push
add
ljmp
in
clc
mov
xchg
mov
addr16
mov
xchg
imul
pop
and
inc
jmp
lods
mov
mov
enter
arpl
fmuls
movsb
std
dec
xchg
and
lcall
ss
push
lahf
lea
loop,pt
in
jl
repnz
sbb
sbb
jo
mov
sbb
mov
dec
xchg
dec
xchg
mov
icebp
lds
inc
ss
dec
xor
adcb
mov
orb
jno
enter
mov
adc
je
and
sub
xlat
mov
xchg
mov
ret
fwait
jns
stc
mov
sarl
fwait
cs
and
hlt
add
adc
adc
or
shrl
adc
adc
movsb
fbstp
add
pop
inc
stos
lods
test
lcall
xor
or
and
shrl
cld
jae
lret
shl
in
std
pop
push
loopne
jo
icebp
mov
or
pusha
and
adc
into
pop
icebp
sahf
sub
push
cmpsl
fmull
inc
jnp
pop
or
and
imul
cwtl
sub
cmp
pop
xlat
call
adc
lods
pop
outsl
or
insl
outsb
mov
mov
xlat
mov
xchg
daa
xor
sbb
popa
dec
sbb
hlt
lods
mov
out
es
hlt
outsb
or
xor
inc
sub
dec
inc
scas
sub
rclb
xchg
mov
gs
mov
cmp
pop
or
or
insl
pop
cli
push
adc
nop
clc
push
arpl
cmpsl
sbb
ja
mov
stos
push
inc
xchg
xchg
out
dec
jno
mov
es
sub
in
in
movsb
lods
ret
insb
inc
repz
ljmp
aam
lcall
cmp
sub
push
pop
sbb
mov
clc
inc
mov
jg
xor
push
or
filds
mov
jle
outsb
lahf
das
xchg
jp
jae
outsb
and
cwtl
sbb
fbstp
pop
sbb
pop
push
les
adc
test
cli
inc
in
std
pop
outsl
loopne
loopne
jns
scas
xchg
or
mov
mov
test
jmp
dec
xor
cli
sub
jmp
mov
inc
idiv
jmp
xchg
sbb
xor
cmp
or
jo
jl
fists
scas
adcb
xor
mov
xlat
mov
mov
outsb
popa
insb
and
inc
xchg
clc
fildl
sarb
adcl
in
scas
xchg
cmpsb
subl
push
out
xchg
push
testb
xchg
adcl
cmp
ret
pop
inc
mov
ds
inc
adc
imulb
add
lret
pop
jae
jno
loope
out
xlat
jae
ret
mov
and
cmp
imul
int3
insl
sbb
adc
mov
sub
int3
adc
inc
sbb
pop
ja
test
xlat
ljmpw
push
out
movsb
jo
popf
fldenv
jns
sbb
clc
scas
lcall
and
por
mov
and
and
push
push
cli
fisubrs
loopne
inc
cmp
cmpsb
adc
std
mov
sbb
imul
cli
outsl
jmp
sub
xchg
outsl
dec
mov
ja
inc
lock
xchg
cmp
and
es
push
or
inc
fnstenv
sub
inc
mov
jae
imul
movsl
adc
mov
sti
fnstsw
jp
popf
adc
cmpsl
repz
std
lmsw
cmp
and
xchg
sbb
adc
loopne
sahf
js
sub
jp
lea
jecxz
adc
push
pop
sbb
cmp
pop
mov
pop
sbb
xor
aaa
imul
mov
ljmp
popf
sub
iret
sbb
mov
jp
cld
xchg
sub
add
mov
xchg
mov
and
cmc
push
orb
xor
cmp
pop
lcall
xor
call
inc
repz
popf
aaa
sub
and
xor
loopne
mov
stc
mov
inc
mov
jnp
cmp
arpl
dec
es
jg
scas
cmpsl
lcall
iret
dec
sti
ljmp
fmul
bound
cld
jns
adc
or
in
aas
fsubrl
loop
orl
pop
lret
icebp
lahf
sub
inc
cmp
rorl
rep
cld
jnp
repz
pop
das
push
push
mulb
cld
ss
call
dec
ds
mov
dec
scas
aam
aad
push
xor
and
sbb
add
sub
push
or
cmpsl
cld
into
and
arpl
jbe
dec
test
imul
inc
clc
pop
adc
fsubrs
inc
fs
jb
sarb
mov
xor
sahf
dec
sti
push
es
clc
negl
cmp
and
adc
mov
test
sub
je
xchg
out
fmull
mov
mov
cld
loope
stos
popa
cwtl
sbb
cmc
rcr
inc
in
mov
sub
adc
mov
mov
cmp
stos
adc
push
rcll
and
movsl
pusha
daa
sti
jle
lahf
adc
int
dec
dec
idivl
cmpsb
decb
add
mov
add
hlt
jb
jle
and
push
cltd
sub
mov
es
popf
test
psllq
jp
jmp
xchg
repz
in
mov
sahf
push
cltd
bound
jae
jl
pusha
fwait
pop
dec
lods
js
push
call
enter
jae
mov
dec
dec
cmp
push
mov
xor
pop
or
and
mov
push
fnstenv
je
or
rcr
lret
mov
jno
ljmp
in
mov
cwtl
adc
movsl
push
xor
in
mov
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
