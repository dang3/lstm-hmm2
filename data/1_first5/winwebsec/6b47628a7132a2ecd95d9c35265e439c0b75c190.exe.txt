outsl
xchg
pushf
mov
cmp
inc
out
cwtl
pop
and
movb
mov
cmp
push
in
fisttps
fdivrl
pop
mov
mov
xchg
aaa
into
inc
jge
mov
xchg
lds
ret
int3
cmpsl
and
mov
jge
push
mov
cmp
pop
into
enter
js
push
adc
xchg
aaa
scas
push
sbbb
mov
cmpsl
sbb
sub
bound
scas
hlt
adc
test
or
nop
jecxz
in
cmp
add
outsl
pop
pusha
mov
sahf
cmpl
sbb
fdivrl
or
pop
jo
push
std
dec
dec
jg
push
pusha
imul
mov
in
daa
jg
pop
roll
cmp
stos
and
sahf
xchg
mov
jne
xchg
mov
lahf
push
bsr
iret
adc
jle
lods
push
repz
dec
lret
and
imul
out
sub
cld
mov
jmp
xorl
dec
jmp
sbb
sub
pop
rcll
jge
pop
inc
leave
jae
push
dec
outsb
cmp
outsb
push
lcall
pop
ljmp
xor
inc
out
add
adc
icebp
jg
push
cmp
inc
xchg
int3
lods
je
clc
xor
mov
dec
xor
mov
push
jbe
insl
cmc
aam
jo
jne
or
roll
dec
loope
cmp
jl
mulb
inc
xchg
hlt
ljmp
or
fistl
xor
lea
dec
lcall
cmpsb
add
jle
sub
xchg
movb
mov
sahf
popa
cmp
mov
inc
push
enter
popa
push
jl
cmpsl
insb
outsl
mov
inc
enter
fmuls
push
pop
nop
sub
test
jb
rcrl
sbb
jnp
or
ss
nop
pop
push
jl
push
cmpsl
repnz
xchg
pop
push
idivl
cmp
imul
xor
fcmovne
or
or
mov
xchg
clc
or
jmp
mov
sbb
sahf
repnz
mov
pop
cli
icebp
cltd
push
add
sub
repnz
mov
loop
mov
mov
inc
iret
movsb
dec
add
arpl
mov
xchg
xchg
push
fists
imulb
int3
loop
inc
lods
rcrb
addl
test
dec
in
lds
dec
daa
stos
data16
lock
and
lods
outsb
stos
pop
hlt
cmp
rcrb
pop
outsb
dec
inc
call
je
sbb
mov
fsubrs
xchg
mov
into
sarl
in
int3
mov
in
jl
ss
add
pop
lcall
flds
lahf
scas
aad
into
mov
std
push
lods
xchg
jg
cmc
add
mov
sbb
push
insl
ss
jb
imull
lahf
or
mov
add
inc
lret
push
jb
aam
shrl
sub
or
sub
in
inc
sbbl
or
mov
les
pushf
js
fsubs
adc
int3
outsb
pushf
push
push
mov
cwtl
xor
ret
mov
inc
lret
pop
inc
ds
and
jbe
rep
in
mov
inc
inc
mov
mov
cmp
cmpsl
pushf
stos
sbb
sti
mov
and
xchg
cli
sahf
repz
dec
aaa
test
add
in
loopne
push
in
xchg
and
xor
xchg
insl
mov
test
mov
sub
xadd
in
andl
lods
popa
jmp
fwait
add
ja
imul
xchg
mov
pushl
mov
pop
cld
out
cmp
dec
popfw
scas
pop
or
scas
aaa
int
setae
stos
ret
mov
in
jg
pop
push
push
inc
mov
push
lret
inc
push
adc
dec
add
js
and
sbb
pop
pop
adc
cmc
loop
fs
dec
adc
adcb
or
cmp
in
adc
orb
rcrl
xchg
and
pop
inc
in
pop
sub
addr16
inc
jns
arpl
aas
xor
pop
push
mov
bound
dec
jecxz
dec
mov
adc
and
imul
in
stos
into
push
push
rol
lods
add
cmp
pop
push
ss
adc
xor
enter
mov
sbb
cmp
dec
pop
rcrl
imulb
fwait
xor
or
arpl
jle
mov
into
sub
out
outsb
sbb
cltd
stos
push
jb
dec
xchg
pop
push
mov
in
and
jg
sub
repz
orb
inc
jnp
lds
pop
pop
fstp
dec
mov
aad
gs
outsb
xchg
das
sub
push
mov
or
sar
loopne
ss
push
pop
and
fstps
out
xor
repnz
and
stc
testl
daa
js
xchg
dec
xchg
and
dec
out
or
aam
jl
fistl
mov
inc
es
adc
jns
int
jle
add
adcl
mov
fisttps
pop
into
lret
clc
jle
sub
jp
mov
pop
shlb
out
cmp
pop
and
mov
jns
and
out
jae
inc
jbe
xchg
jge
js
pop
sub
pop
int3
icebp
xorl
mov
and
and
adc
xchg
xchg
pop
or
mov
dec
shlb
xor
jl
jo
jmp
lea
pop
xchg
adc
push
loop
mov
push
pop
repz
movb
cltd
sub
enter
mov
mov
gs
fisubs
push
add
xchg
outsb
jbe
push
add
mov
jae
push
dec
mov
cmp
push
dec
je
mov
sbb
js
push
enter
push
cmp
popf
xchg
subb
in
repz
mov
nop
sbb
jns
mov
outsl
out
mov
enter
stc
push
enter
lea
enter
sbb
rorl
xor
sub
sbb
xchg
jp
testb
in
pop
in
mov
fwait
mov
cmc
cs
mov
std
pop
and
fidivrl
dec
xchg
cmp
faddp
mov
xchg
hlt
aas
in
xor
jl
mov
add
inc
inc
and
dec
mov
insl
mov
sar
sbb
int
cmc
push
xor
das
push
jp
or
adc
fwait
push
pop
pop
dec
sbb
adc
jno
movsl
out
stos
mov
mov
mov
mov
cltd
movsb
and
xor
adc
aas
dec
and
add
inc
push
mov
pop
pop
xor
mov
lret
or
jmp
stos
xchg
in
lret
adc
fidivs
stos
push
shrb
sbb
xor
pop
lods
mov
pop
xor
mov
adc
rclb
js
pop
xchg
stc
repz
and
cmp
outsl
pop
inc
adc
xor
mov
loopne
out
mov
xchg
push
adc
orb
movsb
sbb
test
xchg
addl
mov
scas
and
rclb
jne
bound
cmp
push
sahf
mov
pushf
jmp
or
arpl
inc
mov
mov
sbb
sbb
or
mov
stos
mov
pop
fwait
inc
xor
cwtl
fdivrl
push
cli
xor
daa
dec
adc
add
cs
mov
dec
xor
xor
push
xchg
mov
sub
sub
fsubp
sbb
push
sbb
out
or
stos
adcb
mov
ja
sbb
push
dec
mov
lods
divb
decl
add
cmp
inc
sahf
jge
mov
rorl
in
xor
mov
hlt
test
pop
mov
mov
pop
jne
out
sub
dec
or
cmp
sbb
pop
aad
and
mov
xor
inc
xchg
mov
jne
xchg
icebp
rep
mov
jl
mov
aaa
jo
or
scas
sbb
sbb
dec
ret
ljmp
pusha
pop
mov
insb
jp
jns
mov
inc
or
fwait
in
das
sub
mov
jp
mov
pop
cmp
jge
jl
mov
pop
fidivs
mulb
cwtl
mov
pop
repnz
inc
std
pop
jmp
ljmp
mov
push
mov
int3
inc
xchg
and
divb
rcrb
pop
sarl
jp
inc
push
add
lods
adc
dec
mov
or
fwait
test
and
inc
xchg
pop
xchg
lock
orl
dec
sbb
inc
adc
sahf
push
lods
mov
mov
fistl
lea
mov
lsl
mov
mov
push
sahf
xchg
xor
ja
push
fsts
xchg
mov
clc
fsubp
fwait
pop
call
lods
stos
push
arpl
push
push
nop
sub
imul
das
int
loop
cmc
das
scas
and
and
pop
frstor
inc
lret
mov
mov
xor
vmwrite
mov
add
fcmovnbe
jo
rorb
pop
rdpmc
jp
ljmp
nop
and
and
test
ret
jae
jle
and
pusha
adc
jp
repz
xor
addr16
adc
pop
mov
inc
std
adc
ret
mov
and
scas
mov
sub
loopne
scas
bswap
or
sbb
stc
inc
call
xchg
add
xor
mov
lahf
testl
mov
push
icebp
lods
bswap
lret
lods
jmp
xor
lea
mov
test
cmpsl
dec
std
leave
mov
loopne
and
mov
fistps
mov
pop
sbb
pop
int3
and
sub
pusha
sti
add
jl
shlb
adc
mov
push
into
test
push
xor
pop
mov
push
xorb
cld
jb
sahf
lcall
sub
cmp
in
mov
cmc
repnz
jmp
stos
cwtl
jo
repz
imul
add
notb
mov
call
adc
xor
pop
push
ss
int3
imul
jno
hlt
xor
dec
inc
loopne
movsl
lods
faddl
js
insl
jb
in
jno
mov
pop
sarb
pop
adc
jo
push
fcomps
sti
and
rcrb
xchg
les
push
sbb
test
stos
sub
jmp
pop
or
xor
pop
les
add
mov
popf
arpl
cmp
stos
fimull
jb
lock
sbb
scas
sub
lret
outsb
lea
jl
or
cmp
orb
mov
jne
pushf
adc
js
mov
add
or
add
popa
ror
adc
ret
lret
call
sbb
addb
clc
adc
aad
mov
aaa
pusha
in
js
mov
popf
inc
lea
int3
jmp
mov
xchg
jbe
aad
lods
sbb
test
adc
jge
pop
cmc
mov
add
out
add
cmpsb
xchg
call
sbb
jle
scas
testb
mov
mov
or
in
ret
mov
outsb
in
dec
in
insb
sti
pop
xor
push
inc
ret
aaa
pop
cs
das
nop
jnp
xchg
xchg
lret
jbe
fwait
mov
dec
sbb
test
movhps
ds
das
push
xchg
mov
fdivs
aam
lock
mov
jne
adc
mov
pop
mov
fcmovbe
ss
and
push
rcrb
outsb
dec
outsl
lahf
mov
mov
jnp
xchg
jmp
dec
jle
jge
leave
pop
inc
lret
add
mov
dec
lret
inc
cmp
inc
xor
loop
test
sti
sub
push
pop
lahf
jle
push
xor
movsl
out
mov
and
loop
or
in
loop
inc
mov
mov
xor
add
ret
mov
cli
dec
les
in
ret
dec
cmpsb
jg
es
xor
ss
add
jp
movsb
pop
into
std
bound
out
decb
ret
std
push
outsl
repz
in
dec
sub
and
arpl
daa
in
repnz
icebp
js
pop
loopne
stos
in
xchg
or
cwtl
and
pop
lahf
fisubs
jbe
mov
ss
ss
fadds
push
daa
and
pop
mov
lods
test
adc
dec
jecxz
test
mov
sbb
sahf
jbe
mov
mov
mov
fidivrs
cld
sub
test
aam
je
pop
sub
push
dec
mov
fwait
subl
xchg
sti
lret
sbb
inc
imul
adc
cmp
cmp
ds
xor
pop
shrb
popa
push
mov
sub
ds
mov
dec
inc
inc
imulb
loope
cli
or
je
jecxz
rorl
mul
push
or
xchg
dec
cmp
fbld
cmc
pushf
add
dec
add
mov
js
cmp
jbe
push
xchg
jbe
mov
scas
mov
and
stos
or
mov
cmp
faddl
cmpsb
pop
cld
or
lcall
sbb
push
stos
mov
xchg
mov
mov
ss
or
fwait
cs
or
out
daa
and
xlat
dec
mov
sti
mov
inc
cmpsl
inc
aaa
sbb
imul
mov
push
and
adc
sub
and
add
pop
fsubl
orb
scas
or
jle
cmpsl
sbb
mov
mov
pop
push
xor
scas
sbb
iret
xchg
rorl
lret
int3
xchg
imul
es
jmp
mov
shrb
mov
mov
ss
cld
jbe
mov
jl
inc
xchg
push
sbb
cmp
and
popf
mov
push
cld
test
lds
hlt
jns
sub
xchg
xchg
xchg
aas
in
pop
enter
hlt
in
lock
cmpsb
fstpl
cld
into
in
orb
fwait
hlt
and
pop
in
iret
daa
inc
stos
andb
rorl
dec
into
ja
mov
nop
inc
jo
test
aaa
or
sbb
push
xor
mov
in
push
cmp
mov
pop
lds
lock
popa
push
repz
lods
pop
dec
stos
adc
push
pop
sbb
sbb
loope
inc
add
mov
mov
cld
jnp
dec
sub
cltd
mov
arpl
inc
mov
sti
or
pop
push
xchg
mov
jmp
sahf
imul
xchg
in
xchg
punpckhwd
push
cli
xlat
mov
jle
popf
xor
adc
pop
jge
int3
sbb
dec
push
jne
jnp
jb
cmp
icebp
fsubrs
in
inc
bound
shll
pop
sbb
xchg
cmc
and
jmp
stos
bnd
xchg
push
cmpsb
mov
mov
adc
or
enter
icebp
push
cmpsb
jmp
clc
xor
test
jge
push
or
in
and
ret
push
mov
pop
out
ds
int3
insb
push
lret
aaa
mov
cmp
sub
sbb
xchg
jo
adc
lods
xlat
push
sub
js
jbe
shrb
jg
je
cmpsb
and
push
push
xchg
add
js
sidtl
xchg
mov
pop
popa
dec
add
jp
arpl
int
pop
jle
push
jno
rolb
dec
les
inc
cs
icebp
faddl
cmp
fisubl
jbe
xor
push
out
inc
xor
imulb
jge
pop
cmpb
pop
xor
stos
in
cmp
popa
in
xor
daa
lds
or
dec
cltd
inc
mov
out
pop
dec
movsb
inc
mov
mov
sub
mov
repz
daa
ret
dec
pop
cmpsb
imul
sbb
stc
lods
cmp
cli
pop
pop
pop
pop
push
xor
add
xor
mov
out
jns
adc
insb
popf
push
inc
lret
pop
repnz
inc
mov
jae
pop
or
enter
cld
push
loopnew
fsub
lds
and
pop
xchg
and
lods
aas
jmp
push
gs
mov
jmp
lahf
dec
mov
or
popf
adc
xchg
test
and
mov
scas
out
icebp
in
lock
fistps
mov
addl
cmpsl
mov
or
shlb
bound
xchg
fwait
arpl
hlt
mov
iret
fidivl
imul
rcrb
add
fs
inc
pop
rclb
sbb
pop
daa
je
and
sbb
mov
lret
and
dec
sub
xchg
dec
sub
sub
xchg
mov
sbbl
sbb
fwait
jg
jecxz
faddl
out
mov
pusha
mov
fnstenv
fimuls
sti
mov
imul
sub
clc
adc
adc
push
xor
sahf
ret
rcrb
push
adc
push
add
inc
lods
inc
hlt
lock
jge
loope
xor
add
pop
cmp
xlat
lahf
fsubrs
push
mov
fnsave
and
xchg
dec
sub
xchg
xchg
or
mov
loope
sbb
mov
jge
call
adc
loopne
aam
lret
xchg
jns
addr16
andl
xchg
imul
mov
scas
and
jns
pop
out
add
adc
out
fdivl
loopne
xor
out
push
ret
sbbb
and
mov
jns
shr
std
jge
outsl
sbb
aam
pop
imul
jge
rcll
mov
adc
jl
arpl
xor
xchg
test
andl
pop
pop
lcall
mov
dec
jbe
rclb
or
adc
adc
mov
rolb
fnstsw
sbb
inc
sbb
mov
ss
mov
mov
pop
lods
cmc
dec
lret
insb
sarl
push
dec
cwtl
mov
push
fcomps
or
mov
mov
sub
pusha
or
mov
lock
aam
push
lcall
cmpsl
cs
mov
xor
pusha
jg
sbb
mov
xchg
arpl
aad
cwtl
repz
xchg
cmc
int3
mov
out
xchg
test
cmp
push
xor
adc
in
aam
icebp
out
pushf
pop
xchg
inc
insb
imul
leave
ret
jp
mov
and
cmc
sub
xchg
ja
mov
lahf
or
xlat
inc
je
cld
imul
dec
out
dec
in
adc
mov
xchg
mov
cwtl
mov
lcall
lock
sub
lahf
mov
cmpsb
negb
cmpsl
leave
dec
pop
and
and
push
push
iret
jecxz
dec
mov
cmc
scas
or
pop
ja
mov
clc
mov
pop
test
cmpsb
push
stos
and
in
cld
call
or
push
in
das
dec
cmp
and
pop
mov
dec
or
mov
push
and
sbb
in
cmp
repnz
mov
cmp
cmp
addr16
jle
ds
ljmp
lea
adc
outsb
push
les
fpatan
mov
cld
mov
cs
bt
mov
lods
repnz
ret
push
aaa
call
imull
inc
mov
and
mov
adc
jecxz
out
popf
imul
nop
cmp
pop
sbb
add
inc
mov
inc
test
mov
lcall
stos
add
mov
test
fadd
fidivs
inc
cmp
push
ja
idivb
or
or
add
arpl
mov
inc
call
addr16
mov
cltd
xchg
push
sub
sbb
shlb
and
cs
jmp
dec
mov
test
divb
sbbb
movb
shrb
jb
scas
inc
fmuls
or
int
jge
jnp
mov
add
or
loope
fs
lret
fsubrl
xchg
ret
and
pop
push
mov
dec
xchg
add
sbb
cmp
in
xor
pushf
mov
stc
push
jle
jl
negl
lcall
movsb
fs
lret
inc
scas
xor
cmp
scas
lret
inc
aad
aaa
sbb
or
scas
push
jae
lods
loopne
mov
and
das
idivl
lock
xlat
js
push
subb
pop
dec
sbbb
nop
jmp
outsb
cmpsl
dec
inc
pop
sub
mov
icebp
mov
and
sub
je
mov
stos
mov
add
fucomi
jns
or
ret
jecxz
clc
pushf
ret
enter
inc
add
jnp
mov
out
ja
pop
decb
or
pop
dec
inc
cmpsl
les
vcmppd
stos
test
pop
adc
loop
scas
cmp
shll
push
test
js
loopne
hlt
mov
pusha
pop
movsb
popa
loope
into
cs
das
mov
add
mov
js
or
cmp
lret
push
sbb
rorb
bswap
jbe
pusha
dec
call
adc
or
xchg
lahf
addb
and
das
jo
sbb
lods
or
sbb
daa
mov
aas
lods
in
mov
cltd
int
sbb
enter
xchg
jnp
pop
fdivrs
popa
aas
cli
adc
ret
lea
gs
xor
ja
mov
push
stos
dec
inc
push
jl
sub
test
jg
decb
adc
pop
jns
ss
sub
sub
test
cltd
mov
pop
leave
lret
shll
imul
lahf
data16
xchg
pop
add
dec
lret
mov
loope
push
je
je
xchg
add
mov
in
js
lret
in
xor
pop
jbe
mov
pop
outsl
xor
adc
cltd
or
out
pop
push
cmp
push
mov
jmp
popf
andl
push
lods
loopne
movsb
mov
sahf
mov
lods
outsb
mov
jo
inc
xchg
xorl
out
lret
adc
mov
pop
aam
sbb
pop
cmpsb
push
notb
push
dec
jns
xchg
loopne
lcall
mov
loopne
xchg
mov
out
lds
add
sbbl
cmpsw
xchg
jg
add
ljmp
hlt
mov
icebp
js
sar
cltd
mov
dec
adc
add
mov
xor
inc
jo
xor
add
aaa
and
mov
aam
cmp
gs
mov
out
lods
mov
pop
xchg
out
cmpsl
aaa
lret
mov
lods
push
adc
push
dec
shlb
test
orb
call
cmpsb
fbld
mov
daa
shll
add
push
dec
dec
idivb
in
loope
mov
push
xor
stos
xor
outsl
fsts
in
insb
lret
rcrb
lea
push
sbb
ret
pop
andl
stos
repz
cld
fcmovnu
arpl
leave
mov
int
or
inc
add
push
jle
arpl
aad
push
sahf
addr16
mov
jae
sbb
jl
stc
pushf
cs
dec
xor
addb
jno
sub
sbb
pop
cmp
stc
or
or
int
mov
mov
xlat
std
jle
ljmp
addr16
lret
push
gs
or
dec
lds
add
dec
mov
into
and
add
les
in
cmp
xchg
mov
test
xor
bound
mov
sub
decb
out
movsb
cltd
fiadds
inc
inc
das
mov
outsb
mov
inc
inc
pop
jb
enter
stos
push
in
cld
loope
arpl
mov
jbe
jp
pop
out
mov
xlat
xchg
negl
fldl
in
fwait
mov
adc
std
outsl
add
sbb
mov
push
jmp
jns
gs
aad
mov
or
jno
cmp
in
rcll
mov
jnp
mov
cmp
mov
or
xor
dec
outsl
xor
mov
jnp
cltd
pusha
or
pop
mov
cwtl
inc
mov
movsb
cwtl
mov
dec
dec
fdivl
cmp
xlat
cwtl
imul
loop
mov
push
jmp
pop
enter
pusha
pop
xchg
xor
inc
cmc
xchg
mov
push
ljmp
sub
arpl
mov
repnz
out
repnz
test
mov
movsl
fwait
pushf
in
mov
lds
pop
sub
lods
repz
mov
xlat
adc
pusha
sbb
scas
data16
stos
in
int3
inc
xor
rcrb
addl
icebp
and
das
xor
loop
and
xchg
dec
test
inc
mov
and
jb
sbb
orl
or
jge
jns
mov
lods
mov
fwait
mov
sbb
push
test
xor
xchg
sbb
test
and
push
mov
or
mov
es
cmpsb
dec
jle
push
add
stc
mov
and
pop
fnsave
fldcw
arpl
xchg
cs
adc
fcom
cli
add
shlb
xor
cmp
daa
mov
mov
pop
js
pop
jge
fcompl
sahf
popa
jns
loopne
xchg
xlat
pusha
xchg
lahf
fwait
mov
jae
dec
enter
pop
repz
cmp
in
ret
bound
adc
mov
sbb
xchg
adc
mov
xchg
fwait
and
mov
cltd
mov
mov
pop
daa
ljmp
xchg
adcl
push
rcrl
test
mov
mov
mov
nop
test
cltd
test
popa
enter
mov
in
inc
movsl
inc
jnp
push
fsubrl
mov
xlat
mov
mov
add
mov
jge
repz
add
cmpsb
fildl
push
outsb
lret
ds
push
cmp
add
inc
dec
sbb
fcmovu
cmp
test
addl
sahf
gs
mov
cmp
adc
ret
inc
adc
sbb
sub
mov
frstor
add
dec
movsl
mov
mov
mov
addl
inc
cld
testl
add
pop
int
mov
scas
sbb
lret
mov
add
out
femms
dec
arpl
aad
aas
mov
dec
ljmp
xchg
pop
mov
movsl
not
add
jno
aad
in
jmp
out
pusha
out
addb
jo
add
cs
test
les
aaa
movsl
mov
enter
sahf
mov
mov
adc
mov
pushl
cmp
and
aad
sub
fstpt
push
mov
add
insb
lods
pop
push
xorb
push
mov
dec
jle
xor
push
ljmp
inc
sahf
jg
insb
push
movsl
xchg
xchg
or
mov
or
out
pop
and
sub
dec
push
xchg
into
pop
sbbb
mov
sub
mov
pusha
push
cs
add
add
push
loop
hlt
shrb
ror
cs
fsubs
jl
push
push
fwait
sbb
scas
call
cmc
mov
push
mov
mov
push
xor
int
mov
push
pop
jl
shll
mov
stos
mov
dec
push
inc
xchg
out
mov
test
jnp
lahf
cs
xchg
jo
ss
int
inc
push
js
jg
cmpsl
pop
inc
std
dec
repnz
nop
mov
adc
shl
sarl
lret
xor
sub
add
iret
pop
test
repz
cwtl
subb
mov
jbe
imul
dec
adc
dec
cmp
xchg
gs
test
push
dec
movsb
inc
mov
mov
and
xor
popf
in
enter
push
inc
call
stos
subb
loope
push
sbb
lret
orb
mov
leave
ss
inc
jb
movsl
mov
mov
xlat
dec
pop
dec
dec
xchg
jle
or
push
mov
ss
jp
lret
add
push
xor
shll
or
jp
loopne
mov
cmp
jge
adc
jnp
mov
adc
ljmp
or
aas
inc
lods
pop
inc
jg,pt
dec
enter
jne
xchg
or
pop
leave
cmpsb
push
cmp
sub
stos
or
iret
pop
add
add
lret
ss
insl
movsb
pop
xor
idivl
arpl
iret
cmpsl
js
arpl
pop
sarb
imull
ja
push
dec
or
dec
xchg
mov
in
popa
loopne
push
fisttpll
lods
movsb
pusha
pop
push
sbb
lahf
dec
pop
lea
cmp
or
jp
and
fdivp
insb
dec
adc
sub
orb
or
test
xchg
adc
icebp
pop
shrb
jle
daa
jno
xlat
ja
cmpsl
movsl
cmpsl
xchg
or
cltd
push
vaddss
sub
add
invlpg
xlat
pop
iret
dec
pop
dec
mov
mov
leave
cltd
jne
mov
pop
inc
dec
mov
add
dec
stos
jle
adc
mov
mov
xor
out
bound
or
fwait
and
lods
outsl
pop
or
push
enter
hlt
divb
sbb
movsb
in
and
std
push
xor
ljmp
sti
addr16
lret
adc
in
out
sub
js
decb
jo
fimuls
xor
outsl
adc
nop
or
int
mov
sub
push
sbb
out
scas
xor
mov
pop
data16
xchg
data16
pushl
test
xchg
mov
call
ds
xor
mov
xor
in
xor
pusha
cld
sub
and
mov
test
fildll
ret
stos
xor
add
test
xor
roll
rorb
shrb
or
subb
mov
enter
lcall
pop
sarl
flds
push
cmp
xchg
lds
pusha
jmp
inc
xchg
xlat
repz
outsb
add
jl
dec
mov
push
jnp
push
daa
jo
dec
mov
dec
xlat
pop
jns
xchg
int
xor
jae
jecxz
out
sub
push
pop
xor
fsubrl
es
cltd
jg
pop
mov
mov
inc
repz
pop
negl
in
xchg
xchg
test
std
mov
loopne
jecxz
stc
or
mov
inc
or
lods
test
and
rcll
mov
sbb
jne
or
or
loopne
cmp
mov
cmp
xchg
leave
and
clc
aas
pop
fcomi
ds
dec
jl
cmp
adc
sbb
movsb
lahf
cmp
push
inc
aad
scas
out
shl
mov
dec
jge
out
mov
movsl
xlat
daa
fwait
arpl
cmpsl
adc
jae
loope
jno
mov
fmull
dec
fdivl
ja
adc
test
xchg
je
in
scas
mov
vmovlps
subl
jmp
rorb
xchg
pusha
int3
scas
cltd
imul
xchg
mov
and
mov
int3
into
push
dec
cmp
jecxz
or
add
push
jge
xlat
faddl
push
setg
sbb
mov
jecxz
push
stos
and
data16
jae
sbb
mov
iret
fidivrl
stos
popf
jno
push
test
cmp
cltd
outsl
push
add
rcll
push
sahf
mov
jnp
adc
rorl
pop
mov
pop
mov
jbe
dec
pop
pop
sbb
mov
mov
test
sarl
xor
imul
inc
fiaddl
or
pop
fmulp
xchg
add
aam
lret
and
dec
into
cmp
lret
incl
push
ss
xchg
pop
shll
cmp
push
sbb
repnz
jle
xchg
lret
imul
mov
mov
pop
call
fcoms
cmp
or
jl
dec
sbb
lods
or
es
or
inc
lcall
scas
add
inc
lret
iret
cmp
jno
test
pop
pop
add
loopne
pop
dec
inc
mov
cs
fs
cmpsb
ret
add
dec
adc
inc
push
or
jo
vfrczsd
mov
inc
push
add
push
mov
lods
scas
push
divb
add
pop
and
cmc
xchg
loop
xor
mov
roll
int
lcall
jo
inc
jmp
and
cmp
pop
out
rclb
call
cld
incl
push
and
push
das
aaa
and
and
leave
ljmp
popl
lret
or
pop
mov
into
mov
pop
mov
adc
jp
jg
out
mov
les
adc
mov
mov
insb
pop
lret
xorb
outsl
popf
pop
jmp
ss
mov
mov
aaa
add
stos
ret
mov
cltd
scas
xor
mov
sbb
xor
dec
scas
ret
adc
repz
jne
fldl
movsb
add
test
cmp
std
xor
andl
in
xchg
jnp
popf
hlt
lcall
adc
aad
rol
add
and
fcom
fisubl
cmpsl
mov
add
xor
lahf
mov
mov
push
or
cld
mov
mov
loopne
and
jae
dec
pop
xor
cmp
ret
mov
pop
mov
rclb
push
adc
mov
clc
push
push
mov
les
in
push
loop
jp
hlt
inc
and
int3
pop
into
in
xchg
pop
test
xor
fs
and
frstor
inc
xchg
push
xor
mov
mov
pushf
and
fneni(8087
push
mov
lds
fdivs
sub
xor
aaa
icebp
ja
inc
mov
mov
jp
sti
lds
insb
outsl
sbb
and
adc
iret
and
or
loop
shl
push
enter
add
lods
dec
test
sbb
daa
clc
mov
mov
and
push
int3
inc
fs
and
divl
and
and
dec
xlat
and
sahf
addr16
in
loop
mov
decb
mov
je
or
std
xor
cmc
and
cmpb
loope
enter
loop
insb
xchg
stos
or
stos
sub
sub
rcll
lds
dec
ret
fisttps
add
dec
jbe
jmp
lcall
popa
jns
das
jge
push
add
xor
ja
sbb
and
mov
fdivp
jg
clc
push
dec
leave
aad
push
push
jl
outsb
les
fs
cmp
or
out
dec
cltd
stc
add
mov
mov
xchg
push
popf
add
jge
pop
shlb
add
mov
std
mov
rclb
pop
mov
cmp
dec
mov
push
mov
sub
lret
adc
mov
pushf
dec
add
negl
scas
adc
mov
pop
pop
xchg
sub
add
inc
movb
mov
je
popf
repz
repnz
in
adc
push
mov
sti
ljmp
add
ja
mov
bound
xor
or
cmpsl
std
jb
mov
fdivrl
stos
mov
fisubl
pop
ja
fs
in
mov
xchg
sbbl
insl
mov
and
into
loopne
fwait
popf
xor
cltd
xchg
test
sub
je
add
pop
rorb
xchg
idivb
mov
xchg
fistps
cmpsb
sbb
lods
mov
fiaddl
lret
fs
idivb
inc
sbb
push
cmp
push
mov
shrl
xchg
mov
clc
pop
xlat
pop
push
sbb
icebp
xor
lret
jbe
sbb
aas
push
stos
cwtl
xchg
imulb
stc
fwait
jecxz
das
dec
in
inc
aas
cs
add
sti
in
jae
or
dec
jae
rolb
inc
cmp
out
mov
push
rclb
scas
push
sub
push
cmp
and
jne
dec
dec
mov
clc
xchg
xor
push
dec
mov
push
pushf
pop
les
pop
mov
aas
sbb
jbe
pop
push
push
fs
test
ja
enter
mov
aam
jnp
aam
xchg
inc
push
mov
sti
jg
clc
jbe
cwtl
cmpsb
mov
inc
mov
lret
or
pop
fs
out
inc
pop
pop
xchg
dec
or
sahf
inc
fidivs
pop
xor
movsl
adc
jl
mov
fiadds
dec
pop
mov
push
cli
lds
dec
pop
xor
push
adc
into
aad
jg
dec
mov
push
push
cwtl
lcall
adc
dec
xchg
lcall
scas
into
popa
shlb
sub
jo
mov
iret
inc
fwait
jg
cmpsl
ss
cwtl
mov
adc
mov
dec
lods
jb
loopne
mov
sub
in
int
sahf
add
xor
or
inc
sahf
frstor
lahf
stos
cmp
mov
aad
nop
js
inc
pop
fistps
cmpl
lret
cmp
mov
loope
test
xor
ljmp
sbb
loop
xor
daa
adcb
jbe
outsl
ret
adc
shll
je
out
fisttpl
sub
addb
clc
and
test
enter
test
fists
jp
pop
push
xor
daa
iret
adc
mov
xchg
push
adc
fsubs
push
stc
fistpll
scas
outsb
lret
cmpsl
sub
dec
mov
push
cltd
cmp
dec
mov
xor
mov
add
pusha
ljmp
jge
in
std
jno
fbld
and
cld
arpl
call
dec
push
inc
pop
scas
sbb
movsl
sub
cmp
push
mov
nop
and
mov
push
aas
lcall
inc
lods
cmp
into
fldenv
jo
sub
jno
and
mov
push
adc
call
and
pop
in
fwait
arpl
mov
cmp
or
fmull
daa
ljmp
in
gs
inc
icebp
dec
xchg
outsl
or
mov
pushf
xchg
or
gs
int
mov
scas
dec
add
mov
mull
adcl
dec
mov
mov
les
adc
in
out
lahf
lea
idivl
mov
add
jmp
xchg
lret
push
loop
adc
lods
mov
repz
mov
xor
out
mov
sbb
out
and
cs
jae
cwtl
add
adc
gs
sub
test
mov
imul
sbb
xchg
xchg
dec
sub
lods
pop
ret
sti
pop
pusha
bound
stos
call
stos
gs
adc
fstps
das
sbb
push
dec
jle
mov
cwtl
adc
sub
dec
fstpt
and
leave
add
sahf
in
into
push
lods
dec
mov
jle
movsb
push
stos
inc
add
and
call
inc
shll
enter
cmp
or
fnsave
push
xchg
repnz
dec
pusha
dec
mov
jecxz
cwtl
repz
in
pop
dec
outsb
inc
mov
movsl
jb
xchg
hlt
popa
xchg
orb
lds
pusha
nop
sbb
lcall
cmp
aas
loop
xchg
xor
loope
push
xlat
sub
cmp
leave
outsb
out
or
push
adc
je
sub
adcb
jl
push
negb
mov
ret
push
sti
mov
mov
sub
push
push
xor
dec
push
aad
sti
xchg
adc
inc
mov
xor
iret
xor
cmp
dec
cmp
push
xchg
push
rcl
nop
lret
xchg
jg
add
adc
or
andl
xchg
leave
test
pop
stc
mov
out
mov
int3
insb
dec
mov
lock
pop
or
and
mov
push
or
xor
push
sbb
xchg
fsubl
xor
iret
push
add
mov
lret
jbe
and
test
pushf
ss
jo
fdivs
xchg
imul
das
jp
sub
mov
or
mov
test
pop
das
push
push
insl
cmp
xor
pop
outsl
cmp
hlt
xchg
nop
push
call
lock
popf
xlat
mov
mov
outsb
cmp
repnz
push
xchg
in
inc
call
stos
in
jno
pusha
xchg
rcll
mov
inc
fbstp
cmp
push
jae
fimuls
adc
push
mov
fisubrl
push
lea
dec
adc
scas
daa
inc
jl
call
out
fmulp
in
das
int
add
fsub
lret
cmp
inc
fstl
push
add
jbe
icebp
cltd
push
bound
test
jns
inc
call
xor
inc
ret
dec
shlb
jbe
ds
sbb
lret
int
jb
inc
xchg
sbb
dec
add
aam
shrb
outsb
jb
jle
fsubrs
and
inc
movhps
aam
insb
and
xchg
sahf
push
dec
sbb
dec
push
mov
imul
mov
shll
out
pop
inc
mov
loopne
xchg
stc
div
sub
das
or
out
push
call
call
cwtl
aaa
flds
mov
or
jle
add
mov
or
subb
inc
dec
sub
mov
cmpl
pop
mov
mov
inc
add
push
xchg
shl
xchg
push
mov
or
andl
mov
jmp
dec
sbb
inc
cmp
aad
fldenv
loopne
xor
sbb
popf
negb
outsl
add
push
daa
in
add
sti
and
andl
lahf
cmp
pop
mov
jnp
jp
xchg
sbb
inc
lret
inc
jp
add
sub
cmp
lret
pop
lret
je
mov
pushf
jmp
std
mov
in
das
and
sbbb
fbld
roll
cwtl
sahf
cmp
lods
loop
gs
xor
stos
push
push
nop
mov
jnp
lcall
jmp
mov
es
ds
sbb
js
pusha
cmp
inc
stc
leave
roll
xor
cmc
xor
cwtl
xchg
push
testl
cmp
or
cmpsb
xchg
push
scas
pusha
jb
xchg
fbstp
inc
movsl
add
clc
jp
sti
mov
iret
mov
xor
in
mov
cmp
sub
xchg
shrl
sti
jne
push
or
je
or
fstpl
lods
mov
jmp
das
push
pop
pop
negb
mov
addr16
xchg
inc
ja
arpl
xchg
adcb
stos
std
dec
ss
cltd
or
insb
mov
mov
test
cltd
mov
xor
sbb
and
sbb
outsl
dec
xor
int
in
pop
add
into
gs
add
or
xor
jne
pop
mov
mov
pusha
jno
fstl
pop
lea
mov
sbb
aas
ret
jnp
dec
inc
push
pusha
out
mov
fstpl
adc
jo
ja
jno
or
mov
jb
in
lret
ss
aam
inc
push
mov
push
movsl
icebp
mov
and
aam
rcll
inc
adc
pop
out
repz
add
in
mov
test
fisubs
inc
inc
call
ds
sbb
in
iret
sub
shlb
in
fistpl
repnz
push
hlt
daa
pop
inc
xchg
jle
stc
shrl
insb
test
xchg
popf
leave
hlt
fnstcw
repz
stc
loope
mov
xlat
daa
and
adc
addr16
mov
cld
add
outsb
cmc
inc
sbbb
icebp
mov
test
fistpl
jo,pt
xchg
jg
add
add
dec
lea
loop
stos
in
mov
cmp
mov
mov
shr
push
jnp
adc
inc
mov
subb
cld
jp
inc
push
out
ljmp
push
int3
std
jmp
add
nop
mov
adc
add
call
mull
xchg
push
loop
dec
sub
xchg
jp
jbe
inc
iret
mov
jns
ja
mov
out
xor
test
hlt
iret
inc
stos
inc
jbe
das
sbb
shll
adc
adc
mov
cmpsl
nop
add
pop
pop
shrl
aam
or
dec
jmp
jle
hlt
sbb
in
xor
pushf
rorb
adc
add
call
mov
cmc
jno
call
sbb
clc
cltd
std
dec
cmp
outsb
push
jl
loope
mov
enter
jb
inc
pushf
sti
push
hlt
and
imul
add
test
popa
enter
fstps
enter
mov
push
cmp
jo
mov
rcll
fisubl
dec
repnz
mov
repz
sbb
push
push
xor
mov
fcmovbe
pop
dec
or
sti
loop
nop
out
jl
push
or
div
push
inc
mov
and
inc
sub
jmp
jge
outsl
mov
leave
rclb
xor
pop
sbb
xchg
cltd
sub
aad
fidivl
out
pop
dec
jg
xor
in
test
xor
mov
jmp
cmp
mov
mov
fs
repz
sti
aam
push
gs
jne,pn
add
inc
negl
or
adc
cld
sub
dec
pop
adc
inc
fsubs
js
jle
or
sbb
fwait
int3
icebp
and
pop
add
movsl
sub
shlb
or
stc
sbb
jle
call
mov
adc
jns
pop
out
xor
cmp
mov
stos
dec
push
jle
mov
cmp
mov
or
mov
jge
or
addr16
call
mov
scas
mov
loope
shl
mov
mov
adc
xchg
enter
hlt
jle
cwtl
imul
push
ror
movsb
push
cmp
lret
mov
sbb
lock
add
sbb
ret
fmul
ljmp
jns
mov
popf
mov
pop
mov
fists
adc
stc
stos
test
jne
push
dec
sbb
pushf
push
lods
repz
sarl
fisttpl
stos
cmpsl
pop
leave
cltd
std
dec
cmp
cli
xor
popa
jg
jne
push
out
jmp
pop
xchg
push
jp
ss
add
inc
lcall
data16
lcall
in
insl
fcmovnbe
inc
sbb
mov
movsl
loope
pop
xor
pop
das
add
jl
imul
fs
jae
cmp
mov
pop
sbb
sub
shrl
mov
sti
jns
incb
jp
or
dec
cltd
lret
mov
ss
imul
pop
add
mov
mov
adc
fisttps
jb
add
lret
lahf
fdivrs
inc
insl
mov
sub
in
sub
add
sbb
fsubrs
xor
popf
pusha
xlat
hlt
ja
adc
hlt
pop
call
lcall
adc
aad
mov
cmpsb
stc
cmpsb
iret
loopew
lcall
cld
call
mov
and
add
sbb
cmpsb
repz
pop
xor
xor
pop
hlt
mov
mov
rclb
add
arpl
rorl
scas
or
dec
jecxz
movsb
cmp
mov
and
adc
movsb
cmp
sbb
fwait
push
add
mov
add
cmp
cmp
cmp
adc
ds
xor
mov
repnz
xchg
push
shl
rorb
cmp
pop
rolb
add
jl
and
cmpsl
xchg
xchg
xchg
roll
and
jg
xchg
hlt
push
lahf
lea
jnp
xor
ret
mov
push
stos
cmp
mull
fsts
pop
inc
outsl
xchg
ret
data16
sahf
mov
adc
outsl
jmp
add
inc
xchg
subl
call
loope
dec
cmc
pop
dec
leave
lcall
dec
fsubrs
arpl
jl
sbb
or
pop
mov
mov
in
movsl
clc
dec
std
sti
push
xor
ss
sbb
daa
mov
fbld
test
mov
add
and
rcr
and
adc
pop
fcmovb
in
mov
mov
cmp
xchg
aas
stos
pop
movsb
or
jmp
faddl
xchg
jmp
pop
lahf
inc
sub
add
mov
lock
outsb
lods
mov
or
inc
mov
inc
mov
test
popf
mov
rol
data16
dec
aaa
mov
inc
mov
les
ds
repz
add
testb
pusha
sti
jb
fdivl
adc
lahf
dec
pop
mov
gs
lcall
sub
adc
cli
jbe
mov
dec
xor
add
jb
and
adc
fcmovbe
push
call
adc
jno
out
mov
or
push
aad
mov
iret
out
in
dec
dec
push
lock
push
lahf
fstps
sub
arpl
and
or
jp
jns
pushf
jb
xchg
ja
out
inc
dec
scas
popf
out
sub
pop
les
mov
sbb
sbb
pop
nop
mov
xchg
sarb
and
mov
and
std
into
pop
xchg
test
lret
in
sbb
out
pushf
icebp
out
mov
lods
jnp
dec
pop
orl
cmp
fldl
inc
dec
jne
lods
dec
mov
clc
stc
mov
xchg
pop
mov
jp
or
aam
inc
pop
insb
cmp
lret
repnz
mov
test
js
xor
dec
pusha
ljmp
rcrl
inc
mov
adc
mov
add
xor
push
mov
fcompl
mov
mov
andb
mov
nop
mov
outsb
cmp
or
loope
add
sahf
jb
aam
push
popf
dec
scas
cmc
fwait
and
das
lret
loope
out
aad
psrad
inc
fmuls
stos
inc
iret
adc
test
mov
sbb
cmp
pop
inc
push
mov
lods
cmp
inc
stc
sub
outsb
cld
loopne
add
mov
xchg
lret
xchg
jo
dec
mov
lcall
cs
xor
imul
mov
adc
mov
mov
outsl
cmpsb
jno
pop
push
fstpl
cld
xor
mov
nop
inc
cmp
lret
pop
ljmp
push
push
pop
stc
into
or
test
mov
shlb
inc
lock
aad
inc
clc
dec
mov
int3
inc
mov
lods
enter
lahf
cmp
pop
pop
push
test
cmpsb
add
pusha
stc
insb
xlat
mov
daa
mov
leave
inc
ret
xor
push
mov
mov
cmp
outsl
jne
ss
add
cmp
lock
dec
or
loop
push
rcll
mov
jge
in
int3
inc
fiadds
dec
das
jbe
cmp
xor
js
enter
or
arpl
push
sahf
and
cli
in
or
sub
push
sub
je
sub
imul
mov
xor
pusha
push
mov
aas
and
pusha
aaa
mov
adcl
mov
lahf
popa
pop
mov
sahf
cwtl
daa
dec
cmpl
out
jg
sub
imul
aam
lock
push
dec
outsb
es
jno
push
jo
push
cmp
xor
in
insl
cs
sub
repnz
out
jbe
inc
jge
jle
add
sti
mov
fldenv
dec
or
jae
mov
dec
ret
loop
xor
scas
cmpsl
jp
shll
jecxz
loop
cmp
inc
pushf
pop
push
push
adc
mov
fld
es
jmp
imul
and
lock
lds
inc
in
cltd
aaa
push
lds
cmp
add
jo
inc
jle
cmp
xor
cltd
dec
imul
daa
nop
lds
mov
xor
xor
jno
pop
test
fcomps
lods
inc
mov
fsubs
gs
cmpsl
add
dec
xor
jge
test
lahf
test
push
push
jl
arpl
push
push
cmc
movsb
pop
push
mov
cs
fnclex
add
mov
sub
inc
push
cwtl
idivl
xor
mov
imul
add
movhps
das
xchg
shll
cmp
mov
xor
sbb
adc
mov
fs
jl
sbb
stos
add
sbb
fisttpl
mov
mov
fabs
cmp
sub
ret
inc
mov
mov
lahf
add
imul
fs
xorl
push
rorl
mov
aad
mov
rclb
out
loop
dec
jle
enter
dec
ja
dec
dec
iret
dec
enter
sub
mov
xchg
sub
push
sub
mov
dec
mov
addr16
nop
inc
mov
sbb
in
mov
push
mov
test
lock
xchg
divl
mov
test
xchg
dec
sbb
cmp
inc
adc
cmp
inc
and
lock
pop
push
lea
sbb
lahf
sbb
sarb
mov
inc
inc
mov
sbb
sub
push
dec
mov
or
dec
push
cmp
jae
jbe
sub
dec
cwtl
ret
ljmp
ffreep
sbb
les
out
cmp
lds
arpl
mov
imul
imul
sub
and
mov
arpl
and
add
pop
andb
and
es
push
into
sub
xchg
sbb
adc
xchg
cwtl
cmc
xor
test
iretw
xchg
push
sbb
sub
dec
push
pop
mov
rcrl
addr16
int3
lcall
and
mov
push
push
adc
adc
push
mov
daa
jns
xchg
cmp
lahf
pop
jge
push
pop
movsl
daa
in
inc
push
or
sub
insb
jmp
adc
push
cwtl
rcrl
outsb
and
inc
jb
mov
into
cmp
cwtl
dec
mov
xchg
jmp
aam
inc
subb
jns
or
pushf
fldt
sub
lds
jno
or
in
fs
call
dec
stos
mov
add
dec
push
scas
xchg
cmp
inc
ds
or
jnp
out
cmp
loope
xchg
adc
push
xlat
pop
mov
out
movsl
mul
and
out
test
sub
cmp
aam
jmp
push
adc
addl
or
xor
mov
test
testb
xor
leave
lret
push
in
sbb
fimull
pop
cmpl
sarb
loope
popf
or
fistpll
xlat
sub
xor
test
js
xchg
aaa
inc
sbb
mov
push
inc
pop
callw
andl
jg
mov
dec
dec
sbb
push
aam
mov
pushf
inc
xchg
push
je
ss
add
sbb
das
scas
or
pop
dec
sub
lret
mov
fbstp
push
int3
mov
push
push
mov
dec
dec
mov
jecxz
jae
xchg
xorl
xchg
ljmp
imul
cmpsb
aas
xor
pop
xchg
xor
pop
fisttpll
arpl
mov
roll
mov
push
pop
sbb
ljmp
adc
lcall
iret
dec
mov
cs
pop
pop
mov
jp
jmp
pop
cmp
xor
push
dec
out
add
lret
mov
sbb
dec
add
push
scas
iret
pusha
xor
inc
cmpl
cmpb
lds
or
sub
or
or
std
pop
push
pusha
add
sbb
ret
push
dec
popf
out
pop
stos
sbb
sarb
sbb
rolb
cmp
cmp
jmp
push
enter
pop
push
adc
cmp
lods
and
or
test
add
pop
add
or
lahf
cmp
pop
push
mov
pop
ds
imul
std
pop
dec
add
popa
pop
aam
mov
shll
cltd
mov
cmp
icebp
xor
and
and
adc
loop
aaa
int
aad
mulb
fsubl
mov
pop
imul
pop
data16
loope
mov
popa
fcmovne
lret
mov
test
dec
mov
add
sub
xor
addl
pop
mov
jns
int3
in
enter
add
je
xchg
mov
aad
lds
sbb
data16
jnp
dec
mov
push
outsl
adc
scas
push
pop
mov
cmp
iret
adc
loop
neg
jg
push
xor
adc
inc
jecxz
pop
negl
push
add
in
mov
or
and
aad
adc
add
cmp
cmpsb
sbb
jns
daa
lds
push
bound
cmpl
fistpll
jno
in
pop
or
pop
jns
popf
je
dec
or
push
and
je
or
movsl
sub
sub
fs
fistl
lods
xchg
movsl
movlps
rcrb
cltd
cmpl
dec
inc
nop
adc
and
lcall
popf
mov
sbb
jge
pop
addb
or
adc
inc
rorb
and
mov
xchg
jecxz
and
mov
sbb
cmp
std
stos
scas
lret
in
stos
fs
imul
add
jne
add
cmp
iret
xchg
inc
fs
push
inc
or
movsl
addr16
jnp
imul
adc
sub
mov
dec
das
popf
repnz
pop
jne
cmp
xchg
mov
pop
jl
shlb
sahf
pop
jno
cmc
mov
gs
sub
mov
gs
insb
repz
es
lock
sbb
mov
stos
mov
mov
rol
gs
stc
pop
aam
lret
cmpsb
mov
insl
cmpsb
into
mov
jnp
je
push
mov
pop
je
pop
shrb
lods
bound
jecxz
mov
arpl
xlat
mov
test
mov
push
add
cwtl
nop
repz
adc
xchg
sbb
dec
mov
sbb
or
movsl
lret
jecxz
sub
mov
adc
inc
dec
dec
lea
push
fwait
push
mov
je
sbb
mov
dec
repz
stos
ds
pushf
mov
dec
andb
ud2
out
lods
pop
psadbw
arpl
push
cs
jne
inc
push
mov
pushf
popa
mov
add
push
jns
orl
sub
cltd
cmpsb
cmp
flds
movsb
movsl
cmpsb
xchg
pop
out
jg
add
push
ret
div
xor
test
arpl
sarl
repz
xchg
add
jne
in
cmp
and
aam
xor
sub
xor
sbb
pop
fidivrl
setle
mov
jno
cvtps2pi
and
mov
jo
dec
lret
or
sbb
popf
inc
xchg
mov
cmpsl
mov
popf
xor
aas
and
xchg
push
dec
mov
int3
jne
loop
cwtl
dec
mulb
mov
jns
popa
xor
or
mov
pusha
jae
dec
adc
adc
push
sbb
test
add
jmp
xchg
pop
cmp
adc
push
push
mov
out
adc
sbb
iret
mov
shl
data16
imul
xor
pop
inc
lds
jg
das
pop
repnz
cld
and
cmpsb
cs
jp
pop
sub
adc
add
mov
in
cmp
negb
clc
or
in
adc
imul
nop
aaa
or
jae
movsb
xor
outsb
dec
jo
mov
rolb
icebp
dec
sbb
cwtl
pop
fldcw
cmp
push
fsubrp
out
mov
add
frstor
add
adcb
test
cmc
xchg
movsb
push
pop
push
notl
scas
fistl
std
iret
sbbb
rol
pop
ror
mov
sub
dec
daa
je
cmpsb
leave
pushf
faddp
imull
aam
pop
enter
push
bound
aam
daa
and
test
push
imul
adcl
mov
push
loopne
cs
shlb
fwait
adcl
negb
push
jge
mov
add
xchg
sub
xchg
jecxz
xchg
ficoms
mov
imul
movsl
repnz
add
insl
jb
hlt
add
lds
data16
xor
fisubl
dec
shl
dec
or
cmp
repz
insl
mov
cmp
dec
or
lcall
add
and
cmc
adc
in
xchg
dec
shr
or
xor
add
jne
addb
jno
sti
jbe
int
fidivl
les
add
or
cld
dec
push
inc
std
sbb
imul
adc
mov
dec
enter
push
out
leave
inc
mov
xor
bound
fcompl
mov
add
popa
pop
add
push
aaa
pop
pop
push
inc
adc
fs
xchg
pop
inc
ja
jge
push
push
pop
mov
jecxz
mov
jle
int3
xchg
adc
jecxz
arpl
mov
mov
lret
fs
mov
and
movsl
pop
jle
xor
inc
test
nop
jecxz
aad
test
arpl
outsb
iret
mov
lods
xchg
jl
arpl
cmp
les
daa
mov
testb
in
mov
mov
pop
xchg
ds
xor
idivb
fadds
stc
out
mov
sbb
in
int3
or
xchg
nop
inc
and
into
mov
popf
cmp
jl
int3
fstpl
push
jp
adc
pop
pop
std
scas
popf
lods
jle
pusha
sbb
and
jno
repnz
gs
pop
push
dec
jo
int3
xor
lret
sbb
xchg
add
mov
inc
pop
fnstenv
push
add
pop
dec
xchg
mov
jp
lahf
ss
mov
pushf
out
sbb
jae
fwait
popf
push
mov
pop
cmp
ret
sbb
add
rorl
test
dec
negl
cmp
aaa
jne
leave
mov
and
push
dec
sbb
iret
divl
lds
and
insb
cltd
or
lret
pushf
or
xlat
mov
stos
pop
sub
sub
mov
scas
test
jae
dec
mov
push
add
mov
pop
loopne
bnd
adc
lret
enter
pop
fstl
andb
idivb
aad
mov
cmpsl
jl
jbe
cmp
insb
fbld
add
and
sbb
movsl
in
xchg
popa
push
pop
inc
pusha
push
pop
lret
rep
jmp
add
lcall
adc
dec
test
and
dec
adc
pop
les
outsl
xchg
je
mov
sbb
jmp
jne
push
push
pop
mov
adc
xchg
cmpsb
push
lods
stos
or
pop
sub
clc
movl
jmp
adc
push
mov
dec
fxch
scas
xchg
fcmovnb
outsl
sarl
int
and
jg
sahf
xchg
int3
popf
add
call
shrl
xor
sahf
ret
xor
fadds
push
insb
pop
add
and
rolb
rorb
aaa
mov
shrd
fxch
test
mov
popa
mov
fsts
sub
push
sub
test
xor
cmpl
std
mov
and
sti
mov
dec
inc
jle
in
jb
pop
or
jmp
fcomp
xchg
mov
and
xor
ljmp
jl
inc
push
dec
add
fcomps
mov
in
movntpd
les
and
push
mov
fcompl
cmpsl
xchg
dec
andl
push
mov
mov
push
neg
int3
jae
mov
inc
jg
dec
jns
outsl
dec
pop
adc
fldt
mov
mov
notl
xor
inc
inc
add
sbb
xchg
jbe
and
sti
and
aaa
test
int3
rcrl
xchg
test
dec
rclb
jecxz
sub
dec
pop
xchg
sar
fimuls
out
lods
adc
lea
jge
loope
and
in
pop
ficompl
jbe
cltd
ds
out
xor
andb
loopne
pop
dec
add
ljmp
jne
fstps
aam
test
dec
jmp
mov
xchg
popa
pop
push
js
jo
pop
fcmove
ja
out
rolb
push
daa
xchg
test
pop
and
jmp
in
dec
in
je
lcall
pop
ss
sti
mov
ds
and
mov
inc
out
mov
pushf
adc
mov
add
mov
xchg
repnz
ficomps
mov
daa
imul
dec
pop
rcrb
sbb
mov
addb
shll
push
mov
jbe
mov
aam
das
adc
xor
ss
inc
out
ficompl
sub
stc
loop
imulb
lock
mov
or
mov
push
bound
lret
ss
repnz
test
mov
je
ret
outsb
mov
out
push
sub
pop
ret
add
cmp
shlb
es
pop
loop
and
lahf
cmp
int3
nop
dec
lea
jecxz
cmp
test
sub
cmp
insl
xchg
mov
adc
or
ja
push
sbb
mov
nop
js
daa
pop
es
aam
shlb
sbb
insl
cmc
mov
test
sub
xchg
and
cmp
jle
pop
inc
shrl
mov
mov
or
or
call
stos
jmp
popf
fidivrs
mov
jge
xorb
dec
movsb
sub
or
inc
in
add
xor
sahf
and
ljmp
es
into
sbb
out
mov
shrl
rcr
sbb
lret
ficoml
adc
insl
es
sub
inc
rcl
mov
fdecstp
pop
xchg
cmpb
flds
ret
add
das
popa
jp
sahf
add
sbb
push
mov
xorb
mov
icebp
sbb
les
and
lods
outsl
rorl
mov
dec
cmovg
adc
dec
sti
inc
inc
mov
test
dec
pusha
jg
test
test
cmpsb
jge
adc
jb
inc
insb
xchg
into
clc
test
adc
rcl
frstor
sti
jl
mov
ficompl
mov
loope
dec
xchg
movb
jp
repnz
sbb
aaa
jg
mov
dec
sub
mov
mov
shll
push
insb
repnz
divl
xor
cs
jmp
add
inc
ret
jno
shlb
imul
popa
cmp
xor
stos
inc
pop
push
mov
xchg
in
sbb
imul
lods
add
stc
inc
pop
cmp
mov
pop
add
cmp
repz
outsb
xlat
js,pt
mov
out
imul
xor
add
mov
push
xchg
jbe
jge
push
mov
mov
jl
or
cmpsb
cltd
push
dec
in
iret
jl
mov
rorl
jae
xchg
pop
adc
ret
jmp
sub
fstpt
jno
sti
mov
dec
adc
adc
in
jo
jmp
sbb
lds
pop
hlt
fbld
leave
dec
mov
xchg
fiadds
add
and
xlat
sub
pop
hlt
jp
aad
lods
xchg
inc
subl
in
and
imul
enter
cli
addr16
inc
jg
inc
mov
sbb
cmp
jbe
sbb
xor
call
inc
jo
push
push
lret
mov
in
aas
repnz
aaa
sbb
adc
sarl
and
je
je
popf
and
xchg
ret
xchg
stos
cs
cmp
jae
sub
mov
pop
scas
aad
sub
inc
in
out
lcall
adc
push
adc
fdivs
stos
mov
sbb
mov
inc
cwtl
add
or
add
arpl
or
movsb
xchg
daa
fnstsw
andb
ja
cli
inc
movsl
add
pop
xor
out
rcll
cmpsb
inc
daa
sbb
cmp
test
aam
inc
movsl
adc
out
xor
lcall
movsb
sbb
lods
gs
outsl
into
or
or
push
jge
mov
pop
mov
jge
or
jne
lahf
andb
jnp
mov
pop
icebp
loope
and
cmp
add
pop
sahf
leave
mov
je
pop
mov
loope
sbb
xor
icebp
mov
mov
popf
mov
in
jns
mov
push
adcl
sbb
filds
push
and
fstps
mov
jmp
mov
jle
test
sub
aas
cs
xlat
adcb
jge
jle
xchg
notb
adc
dec
mov
mov
mov
fimuls
cld
push
push
inc
call
mov
inc
or
adc
push
mov
jnp
cltd
repnz
mov
sub
adc
jb
in
addr16
popa
push
inc
sahf
ret
cli
inc
into
and
mov
sbb
stos
and
add
outsb
test
jle
push
mov
rcrb
icebp
call
mov
push
xor
ret
dec
lret
mov
lret
and
and
mov
push
push
andb
and
xor
dec
and
addr16
dec
loop
out
xchg
mov
aas
pop
adc
jbe
mov
dec
or
testb
mov
sub
stos
lock
lcall
push
outsb
test
loope
mov
cmpsb
sbb
and
lret
xor
cmp
fnstsw
jo
xlat
cltd
icebp
sarb
dec
push
mov
out
mov
ret
inc
bound
cmc
das
testb
mov
xor
adc
daa
fcmove
mov
push
fucomp
push
mov
pusha
es
stc
ds
mov
notb
pop
aam
out
lea
in
in
push
dec
lahf
lret
xchg
movsb
mov
orb
imul
dec
push
call
ret
call
push
aas
xor
xchg
sub
lcall
mov
xor
pop
add
sub
cmp
xchg
ror
add
xor
add
lea
outsl
and
mov
push
cmp
pop
pop
lock
andl
mov
leave
lea
cltd
sbbb
sub
lea
lcall
push
xchg
mov
sbb
adc
adc
xor
imul
scas
mov
push
dec
mov
pop
dec
xor
mov
in
gs
loopne
mov
pop
mov
aas
cmp
pop
jns
push
inc
jg
push
shl
ret
add
aaa
add
std
push
or
pushf
int
in
cmpsl
pop
gs
mov
push
and
insb
pop
pop
xchg
mov
call
sbb
data16
cli
leave
or
insb
rcrb
sbb
in
call
pop
fcomip
out
push
lods
js
gs
mov
xchg
lcall
testb
int3
mov
and
dec
xor
in
imul
sub
sbb
inc
shl
popf
movsl
pusha
jae
cmpsl
mov
push
fsubr
lods
sti
and
and
inc
pop
mov
push
ds
jg
mov
xchg
xor
outsb
cmc
lahf
lods
aaa
outsl
cmc
or
cmp
nop
imul
fnstsw
lock
fnsave
and
jle
push
lcall
lret
in
decl
test
out
imul
inc
xor
xchg
push
pop
leave
je
mov
aaa
fwait
sbb
or
pop
push
inc
xchg
repnz
popf
cmpsb
cmp
fwait
adc
or
scas
test
not
fidivs
jo
push
imul
push
ss
iret
jbe
shll
pusha
das
call
jnp
neg
js
mov
stos
adc
fistpl
jg
dec
pop
jmp
xchg
xchg
ret
push
inc
push
jae
loopne
filds
mov
mov
xchg
add
jp
xchg
dec
arpl
mov
in
mov
push
fadds
filds
out
jns
lods
or
push
push
xor
enter
cmp
dec
or
loop
lock
pop
cmp
mov
negl
dec
test
or
into
xor
dec
jae
ret
mov
je
sbb
pop
cmpl
je
mov
lods
or
shll
push
mov
lahf
xor
enter
pusha
loopne
ret
in
addr16
sti
push
aaa
ds
mov
andb
fs
or
sarl
das
mov
push
insb
mov
pop
jge
ljmp
test
loope
loope
dec
ja
adc
pop
sub
repnz
imul
call
inc
adc
jmp
push
out
push
cli
out
into
pop
cmp
iret
inc
mov
push
mov
gs
out
test
sbb
fxch
sbb
insl
inc
push
mov
stos
lcall
call
fnstenv
mov
in
adc
mov
mov
outsb
in
sahf
scas
xchg
mov
xchg
imul
adcl
mov
out
dec
mov
insl
sbb
pop
in
sub
cmpsl
movsl
pop
cmp
in
sahf
loop
into
std
lret
icebp
jge
xor
mov
and
test
xlat
lahf
dec
inc
das
in
jl
daa
shlb
cmp
xlat
pop
stos
inc
shl
pushf
mov
cmp
pusha
movsb
outsb
push
jl
sub
push
inc
xchg
adc
xchg
push
xor
add
jge
stos
cs
out
dec
gs
into
popf
add
std
test
or
fimuls
adc
lods
out
mov
or
inc
dec
std
std
ret
movsb
push
fcomip
pusha
out
dec
push
rcll
ss
out
pop
insl
mov
and
push
cmp
jl
mov
inc
xlat
stc
cmp
dec
lret
push
cmp
in
ljmp
mov
push
push
test
pop
ljmp
orl
sarb
mov
mov
xchg
dec
push
out
sbb
pop
push
cmp
lahf
std
add
inc
mov
lods
test
loope
cmpsl
xchg
inc
fcoml
insl
shrl
mov
sub
cmpsb
mov
sub
adc
jbe
das
xlat
sub
cmp
pop
in
pushf
orb
arpl
add
push
orl
aam
mov
pusha
scas
dec
in
dec
xor
adc
and
cmp
ss
xchg
fcoml
and
in
leave
hlt
xchg
addr16
ffree
sub
pop
sub
pop
repnz
pop
out
add
iret
mov
mov
jne
push
fists
or
ss
xor
and
sub
inc
popa
outsl
divl
xchg
jne
dec
outsb
mov
lret
xchg
push
fcomp
dec
daa
nop
pop
xchg
inc
pop
or
sbb
insl
pusha
inc
fwait
sbb
push
fldenv
js
data16
or
xadd
clc
mov
mov
mov
pop
fwait
dec
sub
or
mov
shlb
repnz
or
adc
and
aaa
cmpsb
mov
inc
jae
jp
das
mov
stos
out
repz
push
repz
outsb
test
lods
dec
xchg
cmpl
je
jo
push
inc
sbb
sub
inc
in
in
or
push
jge
loopne
movsb
aam
sahf
dec
mov
pop
inc
cmp
xor
jns
jbe
in
test
out
and
dec
lret
cli
movsl
addl
outsl
sub
adc
leave
sub
pop
scas
jp
xchg
sbb
pop
fcoms
outsl
testl
mov
pusha
scas
ror
daa
test
mov
add
mov
pop
mov
repnz
dec
jae
out
add
xchg
pop
repz
and
mov
inc
sub
and
cmp
stc
or
mov
clc
jmp
sub
jns
sbb
push
mov
fcmovu
jmp
cwtl
mov
cld
jmp
sarl
sbb
and
jno
iret
inc
jno
dec
push
out
arpl
inc
and
add
xchg
adc
jno
loope
adc
mov
adc
scas
dec
pop
inc
sbb
cmc
add
imul
loop
insb
jb
daa
loopne
sbb
sub
push
push
ljmp
adc
mov
sub
fdivrl
xor
loope
or
pop
add
push
mov
call
rcrl
lds
sahf
sbb
in
imul
sub
pop
sbb
js
call
push
into
xchg
int3
and
inc
mov
or
pop
xchg
aad
cmp
icebp
icebp
mov
pop
jo
sbb
mov
out
adc
or
imul
pop
push
faddl
mov
or
repz
filds
inc
in
or
fsubrp
pop
loop
mov
out
icebp
xchg
push
adc
cmp
mov
cli
add
mov
inc
repz
xor
mov
cmpsl
cmp
repz
inc
js
or
sti
enter
movsl
xchg
lock
out
dec
repnz
and
inc
call
psrlw
loopne
or
pop
pop
sbb
push
jg
int3
repz
mov
cmp
sti
xor
mov
push
mov
sti
test
ret
sbb
add
or
rolb
xchg
out
dec
lret
mov
in
mov
sbb
ret
push
jecxz
popf
add
pop
in
sahf
mov
out
dec
leave
pop
cmp
nop
mov
mov
int
xchg
jl
push
xor
lcall
mov
arpl
cs
jns
sahf
or
loope
add
repz
scas
fsubrs
dec
cmp
idivb
mov
cs
mov
dec
inc
stos
dec
mov
mov
mov
lcall
push
xchg
mov
outsl
jmp
orb
hlt
xchg
ret
int
sub
xchg
xchg
out
and
mov
sub
ret
mov
inc
ret
or
or
clc
dec
sbbl
inc
sbb
fwait
or
icebp
in
hlt
pop
movsl
xchg
aas
push
cmpsl
jecxz
stos
cwtl
addl
mov
cmovle
jno
dec
inc
es
pcmpgtw
push
inc
das
mov
es
cmp
outsb
lcall
in
mov
mov
sbb
out
das
mov
add
insl
loop
scas
test
pop
aam
cmp
std
cmp
icebp
mov
sbb
jmp
lods
sarb
mov
cmp
fists
insb
call
cmp
xchg
pop
lcall
xchg
addr16
ss
lea
hlt
loop
sbb
inc
sub
pushf
or
lock
sbb
inc
lods
pusha
movsl
mov
mov
fs
jnp
adc
pop
pop
cmp
cmp
jnp
aas
add
sub
lret
es
sbb
sub
adc
jmp
shrl
scas
fdivrs
mov
ficoms
and
cmp
or
push
cld
sub
into
lea
dec
mov
insb
sbb
mov
and
add
pop
mov
jo
in
sbb
out
repnz
stos
inc
inc
mov
andl
scas
xchg
jg,pt
pop
in
or
sbb
shrb
sub
cs
or
sbb
ret
fsubl
cmp
jg
xor
jb
sub
pushf
lods
lods
dec
adc
mov
and
mov
loop
loop
fisttpl
mov
lcall
hlt
cmpsb
jae
int3
testb
adc
sbb
imul
jo
push
push
je
sub
jns
ss
insl
xchg
sahf
cltd
icebp
fmull
cmp
cmp
pop
jb
xchg
push
pushf
scas
std
pop
mov
adc
sub
sti
pop
stos
add
sbb
adc
lock
out
sbb
push
lcall
fistpl
loopne
cmp
scas
cld
cld
dec
pusha
rclb
fisttpll
mov
sarb
js
imulb
and
push
orl
daa
cli
mov
mov
pop
test
test
icebp
test
push
fcoml
cmp
lcall
js
adcl
lods
ljmp
lret
or
arpl
les
mov
pop
movsl
adc
clc
scas
mov
loopne
shrl
repz
sub
xor
imul
pop
and
dec
leave
out
sub
std
repnz
cvtps2pd
leave
xchg
inc
leave
xchg
ss
and
xchg
xchg
ja
adc
xchg
fwait
or
pushf
pop
int3
adc
adc
push
push
push
ss
mov
inc
lods
shll
fidivrl
xor
das
lods
cmpsb
mov
push
lds
sub
xor
xchg
jns
and
jg
pop
or
add
jecxz
inc
jno
xchg
jg
std
jmp
clc
sub
movsb
pop
test
sub
adc
push
std
out
test
pop
jno
leave
mov
in
push
xor
stc
mov
xchg
imul
cmpsl
insb
xor
or
rorb
pop
ds
fldcw
mov
imul
or
sub
into
aaa
leave
pop
pop
pop
ds
cmp
fsubr
or
loope
pop
lock
loopne
test
or
cmp
push
fwait
cmp
pop
mov
add
nop
int3
xchg
mov
clc
outsb
sub
in
call
pop
pop
addb
dec
mov
mov
xor
mov
lret
pop
jecxz
sbb
mov
stc
mov
xor
push
bound
push
push
cmp
and
jge
aas
mov
push
and
outsb
test
jmp
jl
push
sub
mov
cwtl
mov
popa
stos
fldl
cld
lcall
mov
iret
pop
insl
push
sbb
mov
ficomps
mov
adc
cltd
data16
inc
mull
lods
jmp
out
push
lcall
adc
dec
jo,pt
test
daa
into
fwait
mov
test
pop
lret
adc
push
push
arpl
xchg
dec
sbb
inc
pop
xor
mov
daa
xchg
mov
add
fadds
xchg
inc
push
imul
arpl
cmpsl
mov
adc
and
mov
or
mov
dec
adc
cld
jb
add
int3
mov
push
ss
pop
clc
xor
lods
mov
cmp
or
mov
push
adc
cmc
rolb
sahf
inc
dec
mov
ljmp
pop
scas
jge
movsb
push
lcall
pop
mov
ljmp
mov
and
std
int3
inc
call
dec
dec
cmp
add
xor
sub
mov
clc
test
dec
dec
mov
cmpsl
cs
dec
add
mov
popa
push
mov
popf
xor
mov
mov
out
or
push
loop
pop
xor
fidivrs
outsl
or
sub
and
outsb
cmpsl
mov
std
mov
outsb
xlat
mov
lar
andb
inc
insl
xor
in
pushf
lret
xor
rclb
inc
sub
inc
dec
xor
fdivrs
lret
decb
cmc
jns
inc
ljmp
inc
mov
stos
lret
stc
push
jecxz
iret
sbb
jns
cmp
xorb
or
ret
cli
addr16
push
inc
ss
incb
adc
pop
das
shll
imul
fisubl
jo
sbb
xchg
jecxz
out
adc
fsubl
dec
adc
sub
pop
iret
ret
fs
pop
ds
xor
stc
mulb
lea
movsb
and
and
xchg
in
mov
out
test
xchg
popa
stc
test
lahf
out
hlt
int
jbe
adc
push
int3
packsswb
mov
popf
xchg
rcll
xchg
add
adc
leave
sbb
orb
int
mov
mov
or
pop
imul
testl
cli
test
lret
mov
jl
aaa
popf
jbe
adc
adc
lcall
cmp
xchg
xorl
mov
mov
jns
and
xor
pop
adc
stc
jmp
sub
adc
jp
loop
jo
pop
and
inc
cld
arpl
mov
orb
mov
nop
inc
adcb
sti
pop
lock
jmp
dec
dec
cmpl
or
ss
out
cli
popa
pop
cmpsb
or
fdiv
jbe
call
stc
and
pop
clc
stos
fwait
pop
stc
fwait
js
dec
sbb
incl
ss
adc
fstps
and
pop
mov
mov
mov
ret
inc
mov
stos
pop
ljmp
add
jecxz
dec
ja
sbb
push
pusha
in
cmp
push
popa
leave
in
adc
jmp
out
int
cwtl
xchg
je
sbb
lcall
sbbb
xchg
loope
mov
jno
add
push
xor
mov
jns
xor
cmp
gs
mov
and
fcoms
nop
dec
cli
mov
cmp
push
pop
add
or
push
or
enter
cwtl
rcrb
mov
in
cwtl
gs
xchg
lods
pop
sbb
push
in
ss
pop
sub
jnp
lods
fwait
sbb
fmulp
mov
cmpsb
jo
fdivrs
or
push
outsb
jnp
mov
inc
xor
out
int
sub
xchg
mov
cmp
dec
dec
pop
fsubrl
fs
and
aaa
xchg
in
mov
bnd
outsb
jbe
pandn
mov
jo
ja
loop
or
imul
cs
adc
cmp
fdivs
sub
inc
inc
repz
push
fdivs
xor
icebp
pop
lret
test
je
mov
adc
sbb
pop
push
popf
inc
mov
pushf
xlat
or
ja
jp
mov
xchg
bound
test
inc
lods
adc
and
fdivs
xchg
iret
movsl
insb
sbb
daa
lret
add
push
and
lods
loop
and
mov
xor
jmp
int3
ja
mov
and
dec
lods
push
js
les
jge
test
fsubrs
inc
mov
cwtl
iret
into
adc
cmp
xchg
enter
arpl
jns
or
imul
test
movsb
mov
mov
push
sub
repnz
outsl
inc
fildl
mov
insl
lods
mov
test
in
fbstp
push
mov
out
push
call
shll
out
data16
das
sti
adc
push
lds
mov
xor
push
mov
mov
dec
or
fwait
inc
lahf
and
pop
stc
dec
push
lock
xchg
and
jl
jae
jnp
cmpsb
cltd
test
enter
lret
or
xchg
mov
popf
adc
iret
lcall
scas
xchg
mov
cld
addl
ret
xchg
and
jno
cld
sahf
jmp
push
iret
mov
sbb
push
lret
imul
out
in
or
xchg
es
xchg
sbb
xchg
ja
dec
mov
fimuls
sub
and
mov
sbb
mov
xor
cmp
fwait
pop
popf
scas
adc
std
mov
mov
bnd
lcall
ljmp
cmc
jecxz
xor
cli
ds
pushf
inc
stos
test
pop
jae
addr16
pop
add
repz
inc
cmpsb
je
fdivrl
fincstp
cmpsl
jne
cmc
or
js
outsb
loope
andb
sar
xchg
xchg
in
xor
test
mov
jne
and
incb
lock
cmp
and
mov
in
icebp
pop
xor
jnp
pop
push
adc
sarl
lcall
arpl
mov
shlb
push
xor
out
push
scas
mov
add
xchg
leave
popf
lcall
jb
push
xchg
inc
lds
jecxz
mov
movl
xor
mov
lods
lret
into
sub
mov
fsubr
rcrb
push
inc
mov
int3
cmp
js
cmc
sub
inc
dec
rolb
lret
fadds
ds
push
adc
push
adc
in
xchg
das
push
ja
mov
in
add
and
icebp
adc
or
stc
imul
call
jle
pop
sahf
ret
or
sbb
ret
ljmp
mov
lret
mov
jne
or
push
aam
inc
movsb
jle
shlb
push
jo
and
aam
jg
stos
inc
lock
mov
sbb
jne
jle,pn
cmpsl
rol
mov
int
sub
sbb
push
push
fidivl
fcoms
shlb
jbe
push
adc
insl
aam
sbb
mov
insl
sbb
inc
push
bound
sub
sub
add
lods
jae
push
xlat
addr16
inc
jmp
popa
and
fldl
or
loope
int3
iret
push
in
mov
hlt
mov
repz
inc
repnz
ficoml
mov
mov
push
fimuls
jmp
fwait
inc
in
xlat
fwait
sbb
xchg
sahf
imul
cmp
iret
daa
pushw
sar
pop
sub
in
fs
adc
and
xor
xor
cmp
hlt
loop
jl
int3
rclb
mov
fimull
in
cmc
sar
loop
mov
aam
push
int
insl
push
push
gs
dec
in
push
sbb
fcompl
xchg
mov
arpl
and
subb
xchg
scas
jmp
fbstp
loop
nop
jb
test
lcall
push
movsb
or
pop
mov
outsl
lods
bnd
sarb
push
mov
rclb
sub
and
or
lahf
xchg
subb
jle
mov
mov
outsb
popf
in
scas
pop
push
jnp
sahf
mov
outsl
and
out
cld
and
clc
ss
stos
inc
push
aam
mov
test
pop
scas
push
jns
bound
hlt
pop
loope,pt
cwtl
cmp
mov
xchg
inc
sub
pop
sti
rcr
cmpsl
mov
cmp
xchg
push
or
outsb
aad
dec
cmpl
out
sub
dec
jbe
mov
daa
push
loopne
incb
dec
movsb
loopne
popf
jle
fwait
jecxz
jnp
mov
dec
push
sub
in
jo
mov
test
loop
out
xchg
mov
push
sub
add
xchg
cmp
gs
jmp
roll
lds
movb
cmp
imul
test
sarl
jg
in
sar
sahf
pop
out
dec
xchg
mov
xor
es
adc
inc
mov
shr
pusha
jp
push
adc
mov
scas
enter
push
ljmp
test
fnstenv
loopne
or
nop
jge
shl
out
sub
addr16
in
mov
test
xor
cs
push
xchg
ss
jmp
mov
inc
imul
mov
rorl
sub
les
call
mov
xor
test
in
int3
xchg
pop
xor
or
cmp
movl
idivb
xchg
jno
aad
sbb
and
mov
inc
loop
fstpt
scas
mov
jmp
dec
mov
ja
stos
pop
shlb
mov
cld
mov
mov
sbb
or
xchg
and
xor
jmp
loopne
xor
mov
jle
add
testl
je
imul
xchg
int
inc
xchg
mov
pusha
dec
xor
je
or
das
ja
iret
mov
pop
push
clc
mov
jnp
xor
fs
mov
orl
inc
sbb
dec
xchg
push
into
push
leave
leave
test
into
bound
aam
xchg
out
push
push
push
inc
pop
ss
jmp
adc
fwait
xchg
dec
pop
sbb
mov
mov
stos
jno
nop
hlt
ficoms
ja
sbb
cmp
aad
lret
mov
jbe
sbb
vphaddbq
push
inc
xchg
iret
cli
and
pop
fiaddl
addr16
add
mov
sub
lss
popf
add
cmpsb
sub
cltd
adc
jle
stos
fdivrs
sbb
push
imul
hlt
or
mov
inc
cs
cli
psllw
ret
iret
jge
ja,pn
pop
pop
addr16
cmp
cld
sbb
mov
popa
and
or
cmp
pop
ret
pop
test
mov
xchg
inc
jae
dec
punpckhwd
mov
inc
insb
es
sbb
cmpsl
push
pop
dec
and
mov
xchg
sub
xor
pop
popf
fstpl
pop
mov
add
das
ds
fidivrs
loopne
add
fidivs
pop
pop
test
and
pop
sub
mov
xchg
andb
sub
mov
xor
nop
nop
xor
mov
push
movsb
ficomps
ss
sub
xchg
jbe
push
pop
xor
cmp
pop
ja
push
call
sub
push
jbe
test
in
cmpsb
mov
lds
and
mov
loopne
push
xchg
push
and
jnp
arpl
jbe
adc
sub
fcmovne
and
scas
jmp
fistpl
pop
std
xchg
lret
cmpsb
mov
mov
icebp
jae
pop
lods
push
insl
inc
adc
dec
lahf
aad
stos
add
mov
pushf
loopne
push
xor
mov
xchg
push
xchg
sahf
jecxz
cmp
jno
test
xor
orb
add
sub
pop
add
mov
js
popa
push
pop
lcall
ret
push
call
pop
push
push
mov
sahf
mov
jne
jb
nop
and
and
negl
jl
test
clc
stos
loopew
movsl
pop
rolb
scas
rorb
mov
cltd
dec
lds
das
fistpl
mov
push
or
inc
pop
cmc
push
cmpsb
sti
mov
cmp
sbb
add
call
xchg
push
push
pop
adc
fimull
and
in
dec
push
or
pop
adc
mov
movsb
xor
cltd
movsl
out
les
mov
mull
dec
lahf
nop
push
loopne
xor
clc
cmp
loope
cwtl
lcall
sub
sbb
sub
mov
adc
aas
xchg
negb
inc
inc
mov
inc
jmp
jge
pop
jmp
std
xchg
popf
fdivs
push
sub
movsl
and
and
mov
mov
sti
js
mov
dec
insb
test
bound
sbb
cmp
push
ret
push
sbb
dec
sbb
mov
cli
mov
test
repnz
stos
mov
mov
test
and
xchg
adc
std
pop
sbbb
das
pusha
popf
add
pop
mov
adc
outsl
push
call
xchg
adcl
sti
and
mov
data16
adc
pop
icebp
pusha
rcl
xchg
and
dec
dec
popa
in
mov
shl
mov
shll
mov
adc
xor
mov
dec
adc
sbb
mov
xor
stc
aad
jnp
jns
xchg
dec
push
in
adc
cmc
pop
out
sbb
or
push
jo
data16
xchg
pop
sub
pop
punpckldq
insb
and
aaa
ret
subps
gs
cli
mov
cmc
stc
movsb
dec
and
imul
jle
jnp
jg
or
into
int
xor
imul
ret
xorb
fldcw
sub
push
outsb
mov
and
ret
and
daa
mov
adc
xor
rolb
push
lods
out
jbe
lock
out
mov
std
sub
xor
push
ror
add
faddp
loope
dec
fwait
dec
push
imul
dec
loope
je
push
jmp
mov
inc
sbb
test
xchg
hlt
fs
adc
push
jbe
lock
dec
icebp
popf
add
inc
aam
decl
cmp
hlt
into
inc
and
aas
cmp
cmpsl
jmp
pop
dec
mov
movsl
pop
loope
add
cmpsl
aad
fcoms
jle
or
cmp
adc
int3
xchg
shlb
mov
cmp
loopne
mov
cmp
test
xchg
pop
frstor
repnz
je
inc
sub
sub
sbb
mov
hlt
lods
repnz
or
mov
pop
jns
ss
addb
push
mov
xchg
push
scas
xlat
jno
pop
arpl
jns
inc
outsb
es
outsl
pop
mov
ds
sarl
jle
paddb
repnz
mov
xchg
mov
test
push
daa
fistl
add
out
movsl
dec
pop
mov
mov
cwtl
sar
dec
pop
inc
mov
cmpsb
inc
daa
xor
add
pop
ljmp
lds
mov
ljmp
imul
fwait
inc
aad
dec
lret
dec
and
enter
xor
mov
cld
es
or
shrb
mov
pop
loopne
lods
jne
xchg
push
dec
mov
cmp
sar
add
mov
xchg
ffree
and
pop
sbb
and
aam
inc
lcall
push
adc
xchg
sbb
shrl
or
mov
test
stc
or
enter
pop
faddl
cmp
shlb
outsl
inc
cmp
jle
mov
or
ret
lods
sar
fwait
add
imul
jne
mov
shl
jb
mov
aaa
pop
push
lret
ja
les
scas
cmp
jns
jb
popa
push
pop
enter
in
jo
jae
mov
scas
stc
lret
stos
jp
lret
cli
mov
sbb
push
mov
sub
mov
loopne
movsb
pushf
inc
pop
jmp
or
pop
pop
push
push
aam
inc
push
in
inc
push
jmp
cmpsl
loope
inc
int
jmp
xor
aam
pop
add
outsb
inc
lret
cli
test
sub
je
push
jl
lock
insb
je
test
mov
dec
shll
xchg
add
sbb
sbb
pop
pop
lahf
jecxz
push
mov
mov
sub
sbb
call
lret
loope
icebp
add
jge
idivb
test
test
sub
adc
cmp
fdivr
arpl
mov
pop
cwtl
xchg
mov
cwtl
sti
out
mov
ja
mov
divb
mov
repnz
push
mov
sbbl
jno
xchg
gs
ljmp
dec
clc
inc
iret
fcoms
clc
sbb
and
shlb
xchg
aam
xlat
jmp
stos
testl
sbb
sbb
jnp
ret
mov
lea
call
pop
fdivs
sbb
pusha
out
jb
push
dec
sub
lret
jbe
idiv
test
mov
push
cmpsb
jl
insl
aaa
pop
jg
mov
std
xchg
xlat
mov
push
shll
push
out
shrl
sub
sbb
cwtl
std
std
push
fs
mov
push
icebp
mov
scas
ret
stos
movsl
loop
xchg
daa
inc
loop
inc
mov
adc
sub
add
lcall
bound
jg
mov
inc
addr16
lret
in
push
call
lahf
xchg
lods
xor
adc
pop
mov
jge
shrb
orb
js
sub
add
mov
into
test
inc
arpl
push
cld
cmc
adc
sbb
scas
sti
cmp
sbb
xchg
push
xor
stc
mov
sbb
adc
and
rcrb
inc
cs
imul
pop
sahf
aas
int3
dec
xchg
loope
loop
and
loop
add
xchg
ror
mov
in
mov
arpl
shrb
bnd
sub
ds
aad
ss
dec
mov
leave
jns
in
rcl
clc
xchg
jne
add
cmc
cmp
fmulp
or
stos
cmc
sahf
fdivr
xor
fisubrs
inc
mov
jne
and
push
hlt
push
and
test
mov
or
push
outsl
es
fs
add
inc
push
cwtl
adc
addr16
shll
inc
ficompl
xor
lahf
lea
add
pop
shrl
sub
xchg
adc
fiaddl
xor
xlat
adc
pop
into
adc
mov
adc
inc
xor
or
push
shrb
dec
mov
dec
ficomps
dec
mov
out
scas
xchg
ss
shrb
loopne
xchg
pop
lods
hlt
mov
arpl
mov
add
test
push
sti
mov
cwtl
xchg
or
jns
or
or
movsl
fsubrl
das
adcb
push
rorb
sbb
testb
mov
imul
push
dec
je
stos
cs
inc
cli
popa
pop
iret
fldenv
out
xchg
lahf
icebp
mov
pop
divl
mov
xor
cmp
add
fdiv
adc
ret
sub
mov
std
fldenv
sahf
loope
pop
arpl
loop
mov
cmp
aas
push
or
xlat
dec
shll
inc
cmpsl
pop
push
xchg
hlt
push
je
jae
and
mov
pusha
xchg
cmpsb
cmp
test
test
shrl
mov
adc
and
js
lret
xorb
push
cwtl
sbb
mov
cmpb
xchg
sub
dec
push
leave
ret
iret
mov
xchg
push
pop
mov
out
lods
int3
in
xchg
xchg
cltd
xor
cmp
aaa
mov
lret
rol
inc
out
sub
xchg
dec
cmp
push
sub
in
xchg
adc
shll
test
push
cld
rclb
cmp
mov
mov
jo
or
nop
in
divb
lret
xchg
ja
jmp
jecxz
call
rol
dec
cwtl
out
test
or
aad
and
inc
out
mov
popf
ret
sub
ljmp
jae
inc
xor
dec
mov
imul
jecxz
aaa
jle
or
mov
clc
movsb
cwtl
push
sub
push
test
cmp
dec
or
sub
push
inc
or
inc
jle
mov
xor
jmp
mov
inc
shrb
in
movsb
inc
insb
ror
mov
jno
inc
inc
jl
sar
lret
movsl
loopne
das
outsl
add
dec
push
mov
insl
int
pop
fidivs
jmp
add
out
cmp
in
lret
stos
adc
iret
add
jecxz
pop
push
mov
push
mov
out
in
test
loop
xchg
pop
inc
and
addr16
mov
pop
cmp
icebp
sahf
imul
pop
aas
cmp
pop
dec
loop
lods
cmpsl
subl
scas
add
cmpsl
fcomp
int3
mov
das
cmc
repnz
mov
jecxz
mov
dec
mov
insl
inc
aam
lahf
cmc
fimull
cmp
rcrl
lret
mov
lea
sbb
xor
mov
add
and
and
mov
add
das
and
ljmp
mov
xchg
dec
std
movsb
xor
js
pop
shll
fwait
inc
pop
mov
adc
sub
adc
jns
pop
inc
dec
in
outsb
mov
pushf
adc
fdivrl
mov
push
nop
cmpsb
jp
mov
mov
xchg
iret
insl
shll
test
call
repz
lds
inc
aam
sbb
pop
add
or
sbb
or
or
or
or
popf
mov
jne
fiadds
adc
ja
mov
in
mov
loop
mov
add
mov
out
call
jae
dec
insb
add
push
xchg
pusha
dec
xor
cmp
cmpsb
dec
inc
icebp
sub
sub
aam
dec
mov
shrb
rcr
sub
movl
fisttps
and
pop
int3
mov
adc
ljmp
and
clc
stos
add
mov
lds
sbb
pop
inc
mov
lea
mov
cmp
jg
mov
das
push
test
test
jno
std
bound
push
jle
jae
ss
xor
scas
test
ds
pop
loope
or
mov
inc
mov
lea
cmpb
stos
mov
inc
cld
push
out
stc
push
mov
inc
xor
imul
test
cmpsl
gs
icebp
xchg
push
push
add
cmp
cmp
or
sbb
dec
add
add
jae
jle
mov
fwait
cltd
mov
xchg
inc
sub
call
cmp
xlat
xlat
xchg
bound
add
add
xchg
mov
aam
xor
imul
add
sbb
das
push
xchg
adc
stos
xchg
fdivrs
in
cmp
push
int
adc
popa
or
cmp
mov
les
jne
sbb
fidivl
sub
out
loop
loop
xor
mov
cld
in
stc
mov
sahf
movsb
arpl
or
mov
lock
mov
sub
cmp
add
in
enter
sub
ss
xor
and
lock
das
mov
orl
cwtl
rorl
roll
add
orb
aam
test
sbb
mov
adc
sub
xchg
inc
pop
xor
rclb
xchg
lea
lret
nop
fs
ss
adc
addr16
movsb
or
daa
and
pop
xor
imul
in
mov
pusha
lods
sbb
cmp
imul
mov
fwait
push
mov
sbb
inc
stos
lret
testl
mov
push
jmp
or
imul
or
push
mov
ret
das
pop
out
outsl
cmp
mov
cwtl
sub
jbe
adc
movsb
ficomps
jecxz
lods
int3
lds
sbb
mov
es
lahf
insb
arpl
adc
and
mov
rclb
fsts
rolb
or
and
cli
push
addr16
sbb
pop
sub
xor
fnstsw
nop
pushl
xchg
lret
ret
test
pop
int
lret
xchg
sahf
adc
in
jl
imul
jb
xor
rcrb
dec
sub
jno
pusha
daa
dec
and
sbb
xor
and
push
adc
jecxz
hlt
push
out
add
pusha
rorb
dec
cmpsl
sub
test
mov
cli
out
ret
mov
push
cmp
and
fadds
mov
adc
int3
adc
int3
push
lret
lret
hlt
stc
sti
and
dec
sbb
adcb
add
mov
xchg
ret
dec
sbb
shll
mov
scas
cwtl
cs
mov
xor
or
mov
sbb
movsb
mov
jae
fistl
pop
dec
arpl
loop
push
in
push
and
cltd
out
xor
les
rorl
adc
xchg
fdivl
hlt
insb
mov
mov
xchg
lret
outsb
bound
xchg
or
jl
inc
in
inc
test
pop
cld
sub
pop
jp
push
cltd
lods
push
push
jae
insl
in
movl
not
push
enter
jne
cwtl
mov
cmp
fildll
mov
pop
cwtl
cmpb
int3
inc
adc
les
inc
test
pop
sarb
addr16
loope
xchg
mov
mov
out
mov
mov
push
mov
fadd
sbb
outsl
or
or
js
and
dec
shr
loop
jo
dec
ret
cmp
rol
loop
test
dec
xor
lea
mov
and
aam
sbb
xchg
inc
mov
dec
cmp
sti
gs
jno
jbe
sbb
mov
xor
imulb
mov
dec
inc
cmpsb
notb
loop
mov
dec
ja
mov
add
pop
pop
mov
dec
dec
scas
aaa
stos
push
arpl
dec
cmc
inc
imul
inc
inc
bound
or
out
jl
jo
jo
cs
daa
push
inc
pusha
mov
xor
jle
imul
lahf
add
cli
ret
push
dec
mov
mov
jns
testl
lock
inc
sbb
cltd
test
xchg
mov
not
roll
pop
getsec
pop
and
out
cmpsb
pop
sub
out
insl
outsb
pop
pop
inc
jb
dec
into
popf
or
test
test
xor
push
sub
insb
jno
or
sahf
loopne
in
lods
fs
pop
pop
pop
push
jno
jno
jae
dec
inc
dec
add
hlt
cs
pop
cmp
jmp
into
loop
sub
mov
loopne
push
mov
sub
adc
leave
imul
shlb
mov
push
inc
ss
mov
jae
imul
sbbl
push
xchg
out
lods
push
lret
xchg
hlt
pop
fs
fcomp
pop
xor
lods
rolb
sub
push
aam
rol
les
loope
inc
xchg
ja
mov
pop
mov
stos
lods
andb
mov
jmp
in
cmp
push
mov
push
and
psrlw
cltd
sbb
daa
mov
bnd
scas
addl
int3
sub
pusha
or
push
fmulp
push
sub
dec
in
push
in
pop
lds
mov
inc
ror
mov
cmpsl
lret
sbb
jg
stc
and
in
jecxz
or
bswap
xor
add
lret
push
movsl
insl
dec
test
xor
clc
push
sbb
dec
rol
pop
xchg
dec
jno
sti
inc
or
stos
jg
mov
sub
mov
fldl
movsb
mov
jl
mov
mov
or
icebp
jnp
das
lods
jle
daa
pop
xchg
xchg
rorl
add
movsl
ss
pop
mov
mov
push
mov
or
fidivs
mov
inc
jmp
push
icebp
dec
xchg
aam
push
pop
mov
stos
xchg
icebp
and
loop
xor
cmp
sbb
push
test
mov
inc
and
pop
addb
jecxz
test
or
push
aad
call
xor
and
mov
dec
cwtl
mov
lods
fisubrl
imul
cmc
jecxz
divb
inc
sarl
dec
popa
or
xchg
cmp
sbb
sub
int3
das
mov
inc
inc
shlb
push
dec
dec
adc
add
pop
push
inc
inc
fiaddl
inc
clc
pop
mov
and
jo
dec
push
jno
sub
xchg
ljmp
cmpsl
andl
std
cmp
jle
or
sbb
outsb
inc
sbb
adc
inc
adc
mov
pop
push
mov
inc
xchg
sub
fisubl
out
sarl
jno
loopne
mov
jle
out
push
cld
cmp
int
cmc
sub
mov
and
aaa
mov
push
xor
iret
cs
out
cmp
int
stos
xlat
in
js
or
stos
stc
in
xor
dec
cwtl
add
xchg
inc
mov
adc
cmp
sub
mov
jmp
faddl
inc
andb
insl
mov
adc
push
clc
adc
dec
pop
xor
insl
mov
pop
je
imul
xchg
loop
pushl
pop
sbb
xchg
test
dec
arpl
mov
dec
xchg
loope
inc
adc
sbb
push
loop
mov
sbb
xor
mov
jnp
dec
or
pop
sub
daa
add
out
lahf
js
adc
add
sbb
jg
push
sbb
imul
aam
lods
dec
xorb
pop
cli
dec
lahf
aad
cmpsb
inc
loope
je
repz
aad
insb
and
outsb
jge
mov
jl
out
cmp
or
les
test
or
in
jl
cmp
nop
loope
nop
mov
adc
in
inc
out
sub
xor
cmc
mov
enter
popa
imul
cmpsl
sbb
lahf
mov
add
add
imul
and
cmc
fmull
and
cmpsb
jl
insw
jno
push
lcall
or
adc
inc
push
enter
or
pop
pusha
movsb
frstor
fstl
mov
mov
push
and
gs
push
nop
dec
xchg
sti
es
xlat
pop
mov
push
xor
pop
xchg
pop
cmp
and
lret
shl
dec
arpl
mov
lret
stc
mov
lea
shll
sub
adc
xchg
cmp
rcll
sbb
lret
ret
or
cmpl
iret
fmull
int
jmp
jb
or
vpunpckhbw
fstps
mov
or
gs
into
add
test
dec
xchg
jo
sub
ror
js
or
imul
adc
cmp
mov
mov
xlat
fstpl
sub
mov
icebp
outsb
mov
daa
notb
lds
in
repz
enter
es
xlat
add
insb
jbe
pop
outsb
aad
push
loope
ljmp
ret
daa
fwait
loop
jle
cmpsb
adc
add
jg
inc
cmp
xor
push
jne
mov
push
mov
loope
cs
push
mov
push
sbb
mov
aam
mov
add
mov
inc
inc
iret
cld
aad
push
xchg
ret
inc
mov
outsl
fs
push
add
jne
stos
fstl
jp
jbe
dec
push
pop
iret
sahf
aaa
pushl
dec
aam
pop
inc
inc
iret
jae
mov
inc
hlt
outsl
sbb
notb
popa
mov
cmp
into
or
pop
mov
rolb
push
imul
test
sub
cld
inc
out
das
ret
addr16
jno
in
cmp
dec
shlb
insb
bound
and
push
push
push
insb
adc
lahf
xor
push
adc
fdivs
add
or
cmpb
loope
bound
lahf
sti
hlt
rcr
dec
les
cmpsl
std
outsb
and
adc
int
dec
mov
es
push
mov
xchg
dec
dec
out
push
sub
dec
inc
ja
psubw
and
inc
inc
lock
jl
pop
inc
scas
pop
add
test
aaa
repnz
movsl
push
jl
lret
int
jo
aaa
and
test
bound
rcl
rorl
push
or
inc
push
or
cwtl
cwtl
call
addb
jp
testl
nop
loopne
es
xchg
inc
xor
and
outsl
es
cmp
sbb
push
mov
jecxz
and
mov
add
sub
pop
es
mov
add
push
fidivrl
loopne
xchg
pop
xor
pop
pop
adc
adc
sbb
insl
mov
inc
jo
cmp
je
mov
mov
cmp
xor
pusha
xor
enter
or
jecxz
or
add
mov
xchg
jge
rorl
and
bound
addl
out
sbbb
out
mov
in
movsb
push
pushf
lea
ret
cmpsb
rcrl
xor
dec
enter
cmc
jle
inc
xor
jne
add
bound
adc
xchg
cmpsl
sarb
lods
sbb
or
mov
cmp
stos
movsb
ss
inc
xchg
pop
adcb
jl
mov
push
movsb
cmp
or
add
int
movsb
push
push
popf
cmp
into
mov
cmp
sub
dec
xor
aas
lcall
pop
mov
and
fidivrl
movsl
jnp
nop
fcomp
push
repz
push
mov
adc
xor
pushf
mov
xor
lahf
adc
mov
out
dec
pushf
or
push
nop
out
lret
jmp
fstpl
push
cmp
add
add
adc
sub
ret
xchg
xor
sbb
cltd
or
jp
dec
xchg
daa
ds
stc
ja
xchg
loopne
cmpsl
sbb
or
mov
into
xlat
pop
mov
in
jae
shlb
xor
jne
sbb
cmc
xchg
ds
mov
sbb
cli
mov
push
add
fadds
push
pop
test
test
ljmp
cld
xchg
xchg
mov
sub
xor
cmpb
nop
int3
xchg
sub
sarb
adc
cltd
cmp
jl
ja
push
xchg
mov
xchg
aas
mov
inc
cmp
cmp
loop
adc
add
movsl
pusha
sbb
sbb
push
int3
sbb
mov
icebp
movsl
xchg
enter
pop
mov
mov
jmp
dec
cwtl
fstpt
dec
sbbl
lcall
sub
push
adc
sbb
das
lods
test
loope
cmpsl
in
jb
mov
push
cli
fcomps
jno
or
xchg
out
xor
push
pop
lret
pop
mov
nop
push
shlb
inc
adc
scas
std
stos
es
sub
cli
mov
pop
rol
aam
ljmp
hlt
push
pop
jg
mov
aam
and
inc
shrl
andl
sbb
fs
pusha
stos
mov
aam
push
xchg
cmpsl
jb
or
mov
mov
iret
imul
repnz
imul
cmpsb
cmp
in
jns
shlb
in
movsb
push
mov
in
jge
pusha
push
xchg
sbb
sbb
out
xchg
fdivrl
push
push
dec
jne
add
pop
insl
scas
jo
bound
out
sub
mov
and
fildll
mov
clc
xchg
xor
sbb
adc
jne
scas
pop
add
inc
insb
mov
dec
movsb
lcall
adc
adcl
pushf
out
cmp
int
mov
xchg
cmp
pop
pushf
xor
pusha
pop
andl
adc
inc
or
lds
movb
es
shll
out
pop
mov
enter
fcompl
mov
aaa
filds
mov
pop
call
mov
scas
test
out
out
sti
pop
add
sub
or
enter
pop
add
pop
push
stos
stc
outsl
xor
push
jmp
xadd
ret
sti
mov
fdiv
in
popa
lods
mov
xchg
fisttpl
in
mov
iret
je
adcb
fcoml
xlat
mov
int
xchg
sahf
pop
inc
jns
dec
stos
cltd
cmp
mov
sahf
inc
iret
scas
cmp
add
mov
add
cmp
adc
jae
inc
call
pop
jp
dec
and
xlat
bound
call
sub
fimuls
or
adcl
cmc
jbe
pop
inc
or
mov
gs
divl
loopne
sbb
ss
mov
sbb
icebp
jnp
movsb
movsb
and
pop
sub
arpl
or
aad
clc
cwtl
inc
fwait
shrb
push
test
popf
jbe
push
cmc
mov
inc
or
jp
mov
daa
sbb
xchg
and
push
int
and
test
jbe
sub
shrb
adc
shrl
jae
xchg
cmp
das
jecxz
in
push
clc
rcrb
mov
add
add
cmp
pushf
cli
xchg
filds
icebp
fwait
sbb
es
out
test
dec
push
push
cltd
test
stos
in
js
cmpsb
sub
cs
push
sbbb
mov
pop
jle
cmp
jmp
push
mov
in
mov
mov
ret
cwtl
pop
jae
jge
imul
loopne
jp
mov
inc
cmp
push
nop
cmpsb
loope
stos
xor
sahf
fcompl
cltd
sbb
stos
fistpl
jg
jne
mov
aaa
pop
pop
mov
mov
and
into
ret
xchg
xor
jno
rorb
enter
xchg
ret
test
call
pop
pop
movsl
and
jecxz
fldcw
sbb
lock
imul
ficoml
inc
push
ss
jo
mov
jmp
xchg
mov
out
jecxz
cmp
loope
out
pop
mov
nop
pop
jge
mov
jo
lea
xor
xchg
cmp
mov
xor
ljmp
cli
mov
imul
adc
mov
or
pop
mov
push
fsubrs
enter
jb
ss
push
mov
sahf
iret
in
xor
ss
sarb
xchg
popa
mov
pop
in
mov
mov
lcall
inc
pusha
cld
popf
jne
sub
sbb
out
mov
test
adc
xor
pop
out
and
leave
mov
aaa
cmp
mov
pop
mov
das
int3
pop
in
xchg
jmp
dec
xchg
fs
xchg
sbb
mov
subb
test
aad
inc
ljmp
dec
andb
out
popf
test
mov
out
addr16
xchg
movsb
out
mov
repnz
push
das
scas
rclb
push
mov
pop
jmp
call
shll
das
dec
nop
pop
mov
cmp
mov
mov
sbb
or
sbbl
jge
push
inc
ret
cmp
iret
sbb
ss
aas
shlb
stos
xchg
mov
test
aaa
push
jne
into
test
in
icebp
test
scas
sub
push
add
repz
sti
dec
aaa
dec
mov
lock
cmpsb
lret
insb
shr
aad
and
mov
dec
je
xchg
stc
test
jmp
icebp
in
sbb
mov
lods
test
inc
jne
int3
sub
lret
lds
lds
popa
pop
and
push
movsl
mov
xlat
xchg
and
movsl
pushf
inc
push
ljmp
adc
imul
jb
mov
aas
cmp
pushw
sbb
andl
ljmp
xchg
xchg
popa
jl
push
cltd
inc
lea
push
daa
inc
mov
cmp
cmp
push
cmc
dec
ret
jp
out
aad
sbb
jl
mov
dec
scas
ret
in
jmp
sub
je
mov
stos
add
adc
mov
aas
jae
adc
push
loop
mov
cwtl
insb
enter
daa
test
xchg
ja
inc
push
lods
sbb
outsb
test
mov
mov
and
cmpsl
lods
jp
push
xchg
dec
jl
and
mov
arpl
dec
subl
cmpsl
ds
adc
mov
sub
sub
je
pop
cmp
cli
stos
aad
jnp
pop
push
inc
insl
shrb
fisubrl
adc
push
aas
dec
mov
or
pop
adc
adc
out
scas
jp
push
add
push
outsl
notb
inc
fmul
dec
and
jnp
mulb
sub
aaa
ret
imull
gs
add
jecxz
xlat
mov
rorl
mov
enter
inc
jl
push
pusha
mov
or
loopne
dec
cmp
push
cmp
mov
lcall
jmp
jle
sub
popf
fldl
mov
divl
aam
pushf
mov
fiaddl
popf
daa
lret
test
cmp
inc
add
push
into
fldl
mov
cmp
add
jae
or
mov
mov
xchg
push
cmp
mov
addl
scas
xlat
mov
cld
fnstcw
xchg
popa
movsl
loope
inc
dec
ds
sbb
stos
xor
cmpb
adc
xor
outsl
cmc
cltd
mov
xor
in
fisttpl
jns
mov
mov
push
pop
lock
mov
outsb
sbb
mov
test
push
roll
xchg
out
pop
icebp
xor
mov
cmp
insb
mov
inc
mov
mov
imul
jae
mov
xchg
jg
nop
add
and
movl
movsl
test
mov
cs
push
loop
cmp
mov
fstpt
scas
ljmp
insl
or
nop
ja,pn
push
jbe
jg
pop
lock
or
lds
cmovg
sar
dec
test
and
icebp
cld
lods
push
cmpsl
arpl
mov
lods
iret
pop
les
add
sub
cmp
arpl
movsl
xchg
sub
jb
mov
shl
lcall
fbld
mov
out
push
out
scas
stc
inc
fs
sub
fnsave
xorl
cld
pop
xor
imul
mov
lea
pop
mov
pop
lret
cmp
testl
roll
gs
add
jmp
ljmp
arpl
sub
lods
dec
and
ja
mov
scas
mov
dec
sbb
sbb
xchg
dec
jb
inc
movsb
out
jae
cs
adc
push
adc
cli
mov
fisubl
sub
ds
inc
mov
lods
inc
test
dec
jg
add
cli
mov
xorb
pop
push
fidivrs
cmova
mov
pop
dec
mov
iret
int3
inc
call
inc
pop
popf
call
in
and
or
mov
mov
xchg
loopne
mov
dec
and
push
fcmovu
dec
arpl
push
roll
lock
jmp
cmpsb
xor
pop
pop
arpl
xchg
test
cld
cmp
jne
xlat
push
mov
adc
test
movsb
mov
ret
ret
das
sub
ficompl
mov
lods
dec
dec
lods
mov
in
fidivrl
cmpsl
fucomp
push
xlat
nop
cs
and
mov
jmp
push
inc
inc
stos
xlat
push
xchg
ficoml
inc
or
scas
movsl
jnp
repz
fidivs
cli
mov
cmp
movsb
cmp
scas
mov
test
cmp
pop
push
lret
adc
cltd
push
jmp
adc
loop
adc
cmpsb
ret
sahf
sbb
mov
push
in
pushf
shrl
movsb
lcall
aas
cltd
pop
imul
popf
inc
int
pop
push
loopne
and
fadd
scas
pop
and
in
outsl
mov
adc
fstpt
testb
push
xor
in
mov
arpl
divl
xchg
and
inc
add
jbe
or
scas
leave
and
push
mov
jno
or
pop
adc
in
lret
test
ret
ss
xchg
xlat
jb
adc
cmp
insl
aaa
fadds
sub
push
cmp
pusha
repz
nop
sbb
popa
test
cpuid
or
adc
inc
mov
dec
mov
xor
sub
lods
imul
pop
dec
sub
rcr
mov
adc
enter
mov
mov
xchg
lret
push
adc
out
test
xchg
xchg
xchg
mov
pop
push
push
inc
push
fcoms
enter
data16
subl
sub
or
cmp
das
fiadds
imul
inc
cwtl
cmp
xor
inc
mov
cld
out
mov
js
push
adc
xor
push
outsb
add
aaa
shll
lret
inc
testb
sahf
mov
in
push
mov
mov
xor
test
pop
dec
push
sbb
pop
dec
adc
rcrb
lea
xor
pop
jo
out
out
inc
rcrl
mov
inc
test
pop
add
xchg
in
inc
sti
mov
daa
mov
xchg
mov
roll
out
pushf
test
aad
sub
sbb
cltd
add
and
mov
mov
or
push
mov
jbe
xchg
int
shlb
sbbb
jae
mov
aaa
cmp
std
mov
cltd
enter
adc
xlat
push
in
subb
outsl
dec
out
mov
mov
and
mov
pop
pavgb
imul
test
and
call
daa
dec
shrl
repz
movsb
rorb
jmp
in
pop
adcl
fstps
cmpsl
call
scas
cli
hlt
inc
lcall
inc
fwait
cmp
repz
out
xchg
sbb
jae
mov
or
adc
jbe
adc
or
call
sub
cmp
fistl
lods
push
jl
lret
jmp
add
dec
inc
xchg
cmp
pop
andb
sbb
mov
call
ljmp
hlt
jp
pop
xchg
stos
push
fwait
add
stc
jns
xchg
mov
dec
fstps
cmp
mov
out
push
mov
lea
repnz
pop
test
testl
jae
or
mov
inc
xor
mov
adc
es
push
mov
xchg
outsb
fcoms
fnstcw
pop
push
sub
inc
pusha
je
push
outsl
movl
hlt
dec
pop
mov
add
mov
fdivrl
mov
call
jb
adcb
fs
test
fmul
sbb
stos
sbb
stos
je
test
jae
pop
xchg
jnp
mov
hlt
mov
xchg
cmp
repnz
cmpsb
adc
or
call
mov
mov
pop
insb
push
fadds
mov
sub
or
jl
mov
orl
popf
xchg
inc
push
dec
or
lcall
add
xchg
pop
sub
scas
inc
add
in
scas
mov
pushf
and
xlat
dec
pushf
arpl
aaa
dec
and
sbb
shrl
fs
pop
hlt
dec
cmp
loope,pn
data16
mov
gs
sub
sahf
test
nop
pushf
mov
mov
jne
cli
mov
aad
mov
clc
or
jno
scas
or
fsubp
add
dec
or
and
mov
push
into
jae
add
movsl
cmpsl
xchg
dec
mov
xchg
sub
adc
xlat
dec
sub
aam
add
mov
mov
jno
mov
movsb
mov
out
dec
add
mov
fcoms
shlb
stc
or
roll
mov
aaa
adc
mov
adc
jns
mov
push
jnp
xchg
rcrl
popa
sub
mov
je
jge
sbb
dec
lea
pop
stos
mov
push
push
sbb
pop
xor
xor
push
add
out
pop
incb
ds
es
cmpsl
cmp
mov
inc
jbe
jno
cmp
stos
cmp
mov
mov
stc
insb
and
dec
pop
dec
sbb
inc
fadd
test
test
mov
insl
rcll
loope
leave
mov
mov
dec
lret
jl
test
xlat
add
xchg
jp
stos
pushf
enter
cli
pushl
and
adc
or
out
les
scas
push
dec
xchg
mov
aad
or
sarb
ljmp
mov
push
inc
push
cmpsl
add
daa
ficomps
fcomp
inc
dec
jl
daa
rorl
dec
ret
pop
sarb
push
dec
aad
or
push
mov
icebp
test
inc
adc
or
dec
sbb
stc
push
mov
push
or
sub
sbb
mov
xor
xchg
or
out
and
scas
sbb
addb
mov
mov
incl
mov
or
fwait
sbb
loope
fdiv
sbb
mov
cltd
scas
int3
push
pop
aad
xor
dec
xchg
adc
aad
sbb
xchg
jno
mov
xor
rolb
outsl
mov
cld
mov
mov
es
and
xchg
xchg
lods
fxch
movd
mov
mov
iret
cmc
inc
pop
loop
cmp
test
xchg
lahf
push
call
and
insl
loop
out
insl
rorb
test
stos
fistpl
mov
mov
faddl
ret
adc
push
mov
pushf
push
jns
xchg
xchg
out
shlb
fisttpl
push
movsl
rorb
mov
xor
out
adc
popf
jmp
pop
int3
dec
repnz
jbe
pushf
xor
dec
mov
cmp
fcoml
pushf
push
jo
xorb
and
stos
push
jno
int
lods
aad
xor
popf
ret
jno
in
adc
jecxz
sub
mov
inc
pop
pop
out
out
pusha
xchg
push
pop
loop
out
loop
call
andl
std
fsts
nop
mov
mov
fistps
push
xchg
in
cmc
xchg
xchg
jg
add
sbb
add
aas
xor
jne
pusha
ljmp
aas
jo
imul
or
pop
arpl
push
in
jns
mov
inc
adc
and
test
sub
pop
subl
cmpsb
rclb
fldt
movnti
outsb
mov
out
xor
add
inc
push
lcall
iret
or
mov
ret
cmpsl
pop
add
out
hlt
ja
mov
andps
jp
jae
dec
pop
fisttpll
pop
mov
mov
inc
or
lock
and
ss
xor
scas
test
clc
jns
xor
adcl
or
das
mov
in
pop
cmpsb
bound
shl
shrl
stos
sti
jg
sti
int
shrb
mov
xchg
and
loopne
or
fwait
xchg
xorb
lahf
sub
imul
mov
out
std
add
in
inc
out
rcll
inc
rcl
cwtl
stc
mov
push
cmp
and
push
pop
mov
movsl
mov
and
pop
sbb
in
dec
adc
negl
cmp
rclb
sub
push
flds
mov
in
je
push
je
xchg
mov
push
jmp
out
lcall
inc
mov
xor
mov
test
push
sub
repz
imul
cwtl
jg
sbb
mov
dec
sub
lret
nop
stos
and
fisttpll
mov
lock
pop
sub
data16
jmp
test
paddw
inc
call
adc
xchg
cs
pop
enter
loop
sbbb
dec
dec
in
lcall
dec
ret
into
push
or
rcrb
xchg
cmc
dec
jbe
stos
nop
cmp
sbb
jnp
dec
lea
and
and
xchg
cmpsl
lock
sarl
dec
jmp
add
xchg
test
pop
xor
sahf
jnp
dec
lret
sub
xchg
mov
xor
data16
or
xor
arpl
mov
rcr
xchg
jecxz
mov
xchg
mov
sub
inc
das
cwtl
inc
out
pop
jle
loope
ja
cmp
aam
movsl
pop
mov
cmc
dec
ds
sbb
pop
cmp
pop
pop
jae
pop
jmp
cld
aam
sahf
push
or
or
aad
xchg
cmp
inc
nop
mov
add
cmp
pop
and
pop
add
in
pop
xchg
rcll
outsl
out
pop
movsl
jmp
lds
test
jl
adc
xor
out
iret
insb
imul
xchg
pop
jo
inc
or
adc
mov
jo
mov
lret
xchg
mov
inc
cmp
iret
dec
lcall
shlb
shlb
mov
cli
ljmp
mov
xlat
mov
sub
push
shlb
push
mov
std
mov
cmpsb
js
std
mov
fisubs
inc
addr16
test
test
xor
js
sbbl
jmp
mov
leave
xchg
mov
lds
gs
add
aas
movsb
mov
aam
or
stos
lahf
cmp
lret
mov
inc
fsts
mov
repnz
out
adcb
sbb
pop
lods
or
arpl
data16
push
into
or
shrl
jbe
pop
fisttpll
mov
xchg
push
jnp
add
mov
add
lods
sub
rcll
les
aas
test
call
jo
lret
cmpl
in
fwait
sbb
mov
fcomip
fsubl
ffree
aam
in
cld
cld
or
add
inc
aad
dec
idiv
daa
lret
or
sub
adc
movsl
leave
adc
dec
sbb
rcl
push
dec
and
test
ret
xchg
lods
sbb
sbb
out
cld
fstps
cmc
leave
push
xorl
mov
into
push
pop
jo
mov
pop
adc
adc
cmp
fmuls
into
lds
lret
ss
sub
shll
mov
sbb
cmp
bound
aad
adc
jle
xchg
lock
repnz
pushf
mov
scas
dec
ja
clc
fldenv
mov
fs
sarb
xor
xor
imul
mov
mov
inc
mov
andb
fcomip
add
sbb
adc
sbb
in
dec
adc
lds
jl
nop
sub
push
jmp
fsubl
cmp
pusha
push
sub
jecxz
in
cwtl
mov
dec
cmp
mov
sub
scas
fldl
je
dec
or
ss
cs
aad
jnp
notl
sbb
sub
mov
jle
fs
adc
aaa
push
push
mov
mov
cld
and
mov
icebp
popa
pop
dec
sub
fisttpll
or
mov
sub
cltd
lods
and
xor
mov
cmc
repz
cld
xchg
sbb
sub
out
cmp
fcmovbe
xchg
aaa
lods
fnstenv
and
mov
rcll
stos
jecxz
ficomps
or
inc
adc
out
jnp
inc
mov
mov
es
mov
push
pop
mov
jp
push
push
js
inc
push
fdivl
leave
push
push
out
ja
mov
fcompl
repz
jns
imul
and
mov
cmpl
jne
shll
jmp
jl
js
fcmovnu
pushf
je
add
je
fbstp
enter
mov
xor
push
jnp
fdiv
mov
and
iret
outsb
and
xchg
loopne
xchg
cmp
into
adc
sbb
push
mov
push
cmp
mov
or
sarl
add
pop
out
or
mov
andb
push
push
or
fidivrl
inc
out
out
test
lock
stos
loopne
popl
mov
ss
cmp
xchg
ficoml
fisttps
repz
mov
push
addr16
loop
push
push
xlat
out
cmp
mov
and
or
cwtl
jg
dec
addb
out
or
and
sbb
cmpsb
sarl
jae
sub
sub
mov
lods
data16
inc
dec
and
ss
or
push
idivb
jae
decb
cmp
out
ret
cs
sbb
adc
mov
testb
loope
and
cmp
push
repz
cmp
hlt
mov
aaa
xlat
pop
xchg
cmp
adc
or
outsl
ss
pop
mov
inc
stc
adc
addr16
loopne
in
aam
or
mov
mov
xor
std
fistpl
add
xchg
inc
rorl
mov
push
push
pop
pushf
jp
mov
fisubrs
ret
loope
jg
add
data16
pop
sbb
scas
pop
lock
lods
cmc
lods
mov
shrl
outsb
popa
je
push
dec
clc
sub
push
stos
outsb
sbb
lock
mov
or
jbe
sub
and
icebp
add
xchg
adc
adc
lret
mov
sbb
neg
cwtl
xchg
cmc
add
test
adc
jecxz
cs
divl
loop
mov
enter
lods
jmp
jae
pop
test
mov
fcoml
mov
or
sub
mov
cmpsb
mov
ret
mov
shrb
xlat
dec
pop
xabort
cli
nop
mov
xchg
test
mov
mov
and
mov
xchg
xchg
ja
inc
sbb
cmp
daa
pop
ljmp
int
test
lahf
ds
into
sbb
outsb
mov
adc
add
or
mov
pop
insb
roll
pusha
pminsw
cmp
aaa
loop
cmp
push
xchg
pop
loope
arpl
enter
or
jne
or
adc
sub
rcr
mov
push
adc
mov
or
dec
out
call
fwait
jmp
testb
mov
stos
inc
imul
dec
lret
pop
dec
mov
je
dec
nop
aaa
dec
fsubrs
and
ds
cld
mov
mov
in
or
xchg
lret
or
das
adc
xchg
xor
xor
stc
mov
ljmp
sbb
stos
sbb
mov
in
pop
pop
push
mov
aas
push
xor
xchg
cmpsb
mov
int
lods
and
ret
loopne
mov
cld
out
inc
cwtl
bound
lahf
imul
mov
dec
pop
lahf
xchg
ljmp
dec
push
ret
insw
jo
sahf
mov
xor
or
adc
push
out
mov
and
fucomip
out
test
in
pop
mov
push
sbb
cltd
scas
sbb
pop
cli
shlb
mov
scas
fnstsw
jp
daa
push
pop
adc
add
xchg
shll
ja
je
sbb
mov
iret
jae
stos
lods
mov
cmove
pop
fldpi
fdivrs
aam
mov
bound
test
nop
jl
mov
add
call
cld
mov
pop
mov
xchg
jmp
jbe
test
mov
lahf
iret
cmp
adc
push
push
lods
mov
enter
mov
and
into
or
ljmp
jecxz
clc
jno
inc
int3
jo
sti
sub
rorb
pop
aas
mov
lock
std
pusha
dec
add
ds
xor
push
lock
mov
dec
cs
pop
dec
push
scas
fidivrl
jns
aas
lods
mov
int
mov
lret
mov
lcall
mov
or
xchg
jne
add
push
es
pushw
aad
daa
add
pop
les
add
imul
mov
or
test
jbe
fstpl
and
test
call
in
ja
aaa
lock
aaa
add
sbb
add
stos
push
repz
xlat
jns
outsb
jb
fistpl
sub
inc
leave
lods
mov
mov
lea
cmp
popa
push
cld
mov
fucom
scas
clc
fbld
cmp
aaa
mov
mov
mov
ds
mov
out
xor
int3
or
dec
pop
cmp
enter
cmp
sbb
movsl
mov
lock
popa
in
in
dec
pop
sbb
out
mov
dec
pop
pusha
xchg
mov
lret
sub
out
dec
pop
or
loope
inc
xlat
shll
cmp
mov
mov
push
push
xor
fistpl
bound
adc
xorb
sarl
xchg
repz
scas
push
addb
xor
jle
adc
jns
push
xchg
push
mov
mov
sbb
jb
out
cmpsl
cmc
add
push
lret
push
and
insl
and
mov
jb
mov
cmc
add
and
es
add
loopne
inc
mov
sub
pop
clc
stos
jle
inc
cmp
cmpsl
ds
jp
daa
in
test
scas
mov
or
sbb
cltd
push
insl
xlat
sub
call
fisttpll
andl
sub
adc
in
stos
or
push
outsb
test
dec
mov
test
push
aad
testb
sti
cli
or
cmc
pop
mov
f2xm1
xor
out
and
dec
mov
sbb
sbb
daa
icebp
dec
mov
in
int
jae
test
jae
adc
push
xchg
dec
andb
push
mov
mov
inc
mov
popf
and
add
xchg
mov
mov
dec
push
xor
scas
test
rcr
mov
mov
xorps
or
loop
lahf
dec
and
jmp
fs
or
jo
call
cmpsl
mov
ret
ss
push
sahf
scas
lds
in
cmpsl
outsl
push
sti
scas
cmpsl
push
jl
ret
push
pop
hlt
bound
push
leave
insl
add
mov
sub
rcl
adc
pop
aad
data16
sub
pop
mov
int3
insb
push
mov
in
push
jmp
pop
jge
clc
xor
andb
ret
inc
jle
inc
xchg
mov
add
push
jmp
inc
jecxz
push
and
mov
add
mov
out
loope
adc
insl
xchg
aam
cmp
add
pop
aaa
adc
dec
jo
lahf
aad
out
in
push
or
shll
lret
shlb
dec
stc
lahf
js
lahf
cld
adc
sub
dec
pop
push
cli
lahf
push
inc
test
lcall
shrl
pop
mov
data16
clc
add
out
mov
cld
push
sbb
fstpt
scas
rclb
inc
adc
adc
mov
cwtl
out
and
dec
out
enter
jp
sbb
in
lock
mov
leave
cmp
jnp
mov
inc
jge
add
sahf
xor
fists
rclb
dec
push
xor
cmp
nop
mov
push
cmpsb
jb
fs
mov
icebp
pushf
push
rcrl
adc
push
aaa
addr16
jge
stc
insb
ss
mov
jne
cs
push
xchg
cmp
xchg
adc
sbb
cmp
out
add
adc
mov
push
arpl
test
jg
pop
popl
dec
popa
mov
mov
dec
cs
push
test
mov
out
jl
std
lea
cs
push
arpl
pusha
sub
lods
dec
sti
jle
dec
shl
jg
sub
add
push
add
mov
leave
aas
shr
in
out
int
inc
pop
nop
xchg
jp
push
sti
js
mov
test
into
rorl
data16
sbb
or
and
cmpsb
sbb
push
int3
leave
aam
or
push
sub
neg
imul
out
and
pop
sahf
rcl
adc
into
test
cs
roll
hlt
pop
out
inc
adc
mov
loope
sub
mov
xlat
and
push
adc
nop
push
and
fstpl
sub
movsl
mov
or
les
jo
mov
dec
inc
dec
sub
push
mov
cmp
mov
xchg
xchg
stos
jnp
call
jne
stos
mov
pop
fldt
xchg
out
fsubs
clc
popf
and
fcoml
or
cmpsl
test
and
repnz
cmpsl
adc
dec
push
outsl
jb
sbb
xchg
cmpsb
jae
fdivp
jge
sbb
push
jnp
xlat
leave
test
nop
aam
mov
subl
stos
xor
push
arpl
jp
adc
lret
popf
fildll
lock
jge
pop
cmp
pop
pusha
jnp
cmp
sub
jnp
lret
in
ja,pn
jg
cmc
icebp
xchg
and
dec
icebp
scas
rep
inc
enter
es
xor
pop
cmpsb
push
dec
cli
or
ret
cmp
leave
dec
stos
ds
or
sub
lret
lret
or
sub
jp
cmpb
insb
ljmp
dec
jp
lahf
lcall
rolb
inc
repz
mov
test
cmp
aam
jecxz
push
cmp
into
shrl
push
jmp
stc
lea
xlat
xor
cmp
pop
jecxz
mov
xchg
mov
sub
cwtl
pop
loope
mov
cmp
ret
xchg
and
sbb
mov
ljmp
sahf
add
xchg
arpl
push
out
rcll
push
in
jle
js
call
jg
sub
mov
ljmp
out
inc
hlt
clc
ret
cmc
nop
cmpsb
test
push
or
loope
clc
or
dec
sahf
push
inc
xor
pusha
sbb
cmpsb
adc
outsl
pop
fadds
loop
inc
pshufw
adc
dec
push
add
cmpsb
data16
cmpsl
ror
jo
inc
sar
mov
outsb
mov
rclb
jle
pop
mov
loopne
rorb
repz
sbb
mov
inc
add
xchg
arpl
pop
test
in
nop
js
daa
out
sbb
call
out
lret
sub
fwait
pop
jle
mov
cs
sbb
divl
and
inc
pop
cld
xlat
jns
filds
inc
cs
jb
add
repnz
lea
push
pusha
mov
push
sbb
ret
out
cmp
das
mov
mull
push
std
fsub
sbb
outsb
insb
jmp
jns
aam
add
sbb
cli
pop
xor
fnstenv
xchg
xor
cmp
cltd
and
adc
mov
ret
and
shlb
mov
sbb
pop
mov
cmp
jge
ds
lret
jno
mov
pop
add
push
shrl
jnp
rol
jmp
jmp
or
jecxz
fsubrl
pop
outsb
add
in
pop
out
out
pop
lock
sub
cmp
jmp
es
adc
dec
jo
iret
test
lea
nop
mov
push
testl
jge
shrb
and
pop
xlat
repnz
lods
rorl
jp
dec
cmp
cld
sub
test
pop
jmp
scas
into
ret
fidivrs
mov
jge
cmp
mov
and
inc
das
xchg
cmp
push
sbb
rol
dec
mov
cmp
xor
loop
or
xchg
popf
dec
pop
aaa
or
pop
dec
pop
cmp
sbb
fcompl
push
vmread
mov
into
mov
rclb
fstpt
flds
and
aad
pop
cld
fnstenv
mov
adc
scas
popf
sbb
popf
fwait
adc
mov
mov
mov
inc
loope
lret
inc
sbb
pop
test
leave
mov
testb
sub
inc
outsb
push
fisubrs
push
pop
divl
jecxz
and
push
mov
jo
stos
lret
jns
pop
mov
jb
push
lea
dec
xchg
cmc
cmpsb
in
and
sub
mov
mov
xchg
push
and
cmpsb
jns
or
orl
loope
dec
adc
mov
push
mull
cmc
sub
cmp
jb
ffreep
cmc
sbb
pop
mov
sub
aaa
rcrl
movsl
add
xor
shl
mov
out
dec
pop
sub
int3
pop
pop
and
adc
test
pop
fmuls
mov
adcl
enter
test
pushaw
pop
jnp
sub
insb
add
sahf
lods
roll
mov
enter
add
xchg
jp
add
fisttpll
mov
sbb
mov
mov
movsb
push
jl
xor
pop
in
aad
fwait
popa
xlat
jle
push
mov
or
xchg
fmulp
enter
mov
lea
sub
push
xchg
jbe
cmp
ds
in
adc
dec
aad
fwait
sub
test
mov
dec
xchg
pop
adc
clc
xchg
mov
mov
adc
out
add
push
scas
lock
je
or
aad
ret
mov
sbb
jl
fucomp
es
in
mov
cmp
bound
sar
out
sub
push
push
sub
inc
fbstp
out
push
adc
jl
lahf
aad
lock
loopne
mov
pop
dec
dec
js
xlat
mov
inc
hlt
pop
icebp
rcl
pop
and
ret
add
pop
xchg
cli
scas
cmp
aam
cmp
iret
sbb
dec
daa
fldcw
ljmp
pop
cmp
and
ja
xchg
jecxz
fcoml
mov
repnz
mov
jnp
xor
mov
sub
or
lcall
mov
es
sti
mov
fs
int
jo
sbb
or
insl
rcll
ret
xchg
pop
lahf
popa
mov
dec
xlat
insl
rcrl
pop
dec
or
pop
inc
and
mov
adc
pop
or
mov
cmp
fs
add
dec
dec
fdivr
pop
mov
mov
inc
push
add
push
pusha
lock
mov
adc
scas
add
testl
pop
popf
xchg
arpl
sub
mov
pop
movsl
stos
jo
outsl
pop
pop
xchg
out
mov
adc
xlat
mov
stos
or
and
shll
mov
idivb
mov
sub
fwait
adc
cmpsb
ja
nop
mov
popf
sbb
in
adc
dec
mov
add
loopne
sar
aam
in
dec
cmp
sbb
pop
sub
ret
repnz
pop
insl
dec
or
xchg
adc
inc
xchg
cmp
frstor
sbb
cs
jmp
lea
xor
loopne
or
movsl
int3
nop
add
mov
decb
subb
xor
inc
bswap
xor
in
sbb
jmp
mov
aam
in
pop
rcrl
jle
sbb
fwait
and
dec
rclb
shlb
dec
sub
jecxz
jne
xchg
add
out
imul
lds
cmp
lcall
in
jb
pop
fs
add
addb
insl
adc
in
cmpsb
adc
scas
dec
pop
inc
frstor
sarb
sbb
and
pop
push
idiv
push
mov
jmp
iret
dec
stc
xchg
mov
roll
outsb
adc
cmpsb
mov
les
shrb
and
cmp
fimull
lds
adcb
ljmp
mov
pushf
fisubrs
jns
enter
inc
dec
int
pop
jno
sub
pop
ljmp
sbb
xchg
rcr
punpckhwd
pop
and
cmpsb
add
mov
dec
scas
push
xchg
ljmp
mov
jne
imul
pop
icebp
mov
jb
jo
lds
mov
jl
lcall
jb
cwtl
sub
aaa
lods
jle
movsl
xor
jp
xchg
jbe
filds
push
outsb
inc
stc
and
sarl
sbb
ljmp
fmull
ret
push
ret
xor
test
out
shl
xor
push
int
mov
push
mov
pushf
data16
sbb
mov
mov
jl
sbb
xchg
into
pop
jmp
outsb
movhps
in
imul
ret
sub
adc
gs
cld
xchg
orl
popa
lret
incl
sti
mov
dec
dec
hlt
stc
jnp
pop
dec
outsl
movsb
cmpsb
mov
adc
iret
jnp
sbb
mov
ljmp
mov
mov
orb
dec
add
lcall
bound
mov
test
es
sbb
pop
sub
insb
sub
lahf
loopne
adcb
dec
xchg
xchg
iret
imul
cmp
pop
push
js
push
fnstenv
lret
out
arpl
and
fstpl
mov
jno
into
lds
rcll
cltd
mov
push
out
and
mov
jg
subb
popa
daa
jnp
pushf
ficoms
inc
seta
xor
ljmp
push
mov
and
mov
jecxz
in
push
dec
std
mov
pop
jae
jbe
push
jo
and
outsl
iret
addr16
std
dec
lret
in
les
insb
movsb
push
fstpl
aam
mov
arpl
or
jae
out
fwait
push
pop
jnp
jl
leave
push
or
xchg
out
pushf
and
sub
adc
das
fsub
jne
aas
pop
in
ror
jge
or
stos
cs
jge
lods
mov
or
xchg
mov
mov
push
pop
and
dec
dec
dec
outsl
sbb
inc
aaa
scas
mov
fnstcw
addr16
lods
ret
jmp
cld
lahf
mov
add
insl
push
inc
mov
inc
adc
shl
into
push
fildl
mov
pop
repz
subb
pop
lock
jecxz
and
fidivrs
seta
add
imul
sub
lahf
aam
and
out
xlat
mov
or
or
xor
pop
fnsave
add
adc
out
or
mov
xchg
popa
mov
lahf
and
jle
insb
cld
mov
xchg
pxor
popf
dec
lods
enter
stos
inc
push
pop
xchg
into
dec
rcl
arpl
movsb
rclb
cmc
inc
mov
cmp
mov
xor
add
jp
loopne
and
push
cmp
add
pusha
or
movsl
into
out
sub
jg
dec
movl
pop
cmp
fadd
xor
cmovge
cltd
sti
or
icebp
sub
ja
dec
mov
inc
xor
sub
add
iret
dec
inc
cwtl
nop
adc
and
clc
sub
dec
dec
xor
xchg
xor
daa
cmpsl
mov
sbb
add
push
enter
in
ficoms
pushl
psllq
and
push
mov
push
sub
fsubrl
cld
xchg
jmp
or
xchg
pop
sub
jl
sbb
pop
jo
lahf
push
in
pushf
enter
cmpsb
dec
ss
loope
xchg
fstpl
or
push
scas
repnz
pop
ljmp
je
hlt
lods
push
mov
push
sub
jle
loop
jmp
cmpl
add
pop
test
sbb
lods
movsl
cmc
jle
add
jecxz
mov
fidivrs
mov
jecxz
filds
sub
xchg
jae
add
lret
push
cmc
dec
mov
mov
and
leave
dec
inc
int3
cld
adc
in
jmp
std
cmp
push
pop
popa
inc
pop
and
aaa
sbb
notl
push
pop
and
imul
outsl
das
mov
sub
xchg
lret
leave
pusha
test
sbb
jnp
cs
cmp
test
push
push
loop
in
sbb
sub
repz
cli
fistl
mov
in
out
mov
xchg
test
add
out
aad
cli
jae
and
xor
jns
inc
fsubrl
jnp
sbbb
fcoms
ret
test
scas
sti
mov
dec
xor
movsl
xor
int3
mov
daa
cmp
jmp
mov
push
jmp
sub
push
xor
mov
xor
les
out
fcomps
insl
push
mov
aad
popfw
les
int3
inc
ret
push
test
sbb
pop
fs
out
neg
stc
js
flds
bound
insb
mov
inc
inc
sbb
mov
rcrl
sbb
nop
aas
sarl
sbb
sub
inc
clc
and
dec
out
lret
push
pop
test
mov
lret
cmp
outsl
sub
cmpl
or
repz
fidivl
mov
call
pop
cli
rclb
cwtl
pop
mov
shl
std
bound
insl
leave
adc
lea
inc
faddl
jno
test
push
xor
vandps
sub
cltd
repnz
cs
out
test
out
xlat
popa
dec
es
subl
pop
nop
xor
leave
movsb
std
out
push
pop
mov
add
stc
mov
scas
enter
lret
fstl
mov
xchg
xlat
sub
int3
sub
out
mov
inc
jl
inc
push
and
repz
xorl
movsb
lds
push
cmpl
pop
rcrl
sub
lods
push
fsubrs
cld
cs
cmp
sbb
ds
and
or
cmpsb
or
repz
xchg
rclb
inc
sub
mov
dec
rolb
xor
pop
fldt
adc
arpl
imul
push
pop
jo
inc
movl
arpl
lods
mov
and
xchg
mov
repnz
aas
mov
push
or
jmp
jge
and
stos
push
xor
nop
jle
aam
cli
sahf
add
push
pop
std
adcb
xlat
lds
xor
inc
sub
add
xor
int3
and
stos
pop
pop
hlt
inc
cwtl
cli
cli
in
xchg
pop
cmpsb
and
flds
dec
push
loope
adc
stc
int
out
push
push
je
js
xor
push
pop
lahf
cmp
hlt
lcall
jmp
inc
es
sbb
cmp
or
and
jmp
stos
mov
insl
into
mov
cli
dec
into
ds
popa
out
es
sub
gs
or
cmp
sub
pop
jmp
push
sub
push
fldt
jns
lock
xor
push
mov
arpl
xlat
and
cmp
inc
popa
jge
inc
test
add
cs
pusha
xchg
sbb
out
lret
loop
pop
inc
inc
loopne
jle
int
inc
sbb
outsl
cltd
lods
cmp
movsl
or
nop
jp
mov
mov
xor
xchg
clc
cmp
fs
jns
loope
test
shlb
addb
cltd
les
mov
nop
pop
xchg
testb
lods
add
sub
adc
push
loopne
repnz
sbbl
loop
enter
fs
lds
mov
cmpsl
lock
in
mov
sub
sub
inc
sub
xchg
mov
lcall
pop
push
add
mov
sbb
fs
inc
jae
lcall
push
sub
lea
test
aaa
cwtl
cmp
dec
outsl
inc
insl
sti
sbb
jge
mov
sbb
in
daa
cmp
lahf
adcl
pushl
out
jge
or
divb
nop
pusha
in
jmp
call
rolb
sbb
scas
out
push
xchg
call
jb
ja
cmp
push
andl
pop
es
cmp
pop
aas
and
lea
call
out
sbb
rclb
push
repnz
cld
mov
adc
mov
je
test
ja
lahf
adc
xchg
mov
dec
xchg
or
mov
inc
fs
outsb
imul
and
mov
push
out
or
fwait
test
lods
sub
insb
bound
xchg
mov
jbe
xor
sti
and
fmul
xlat
fcoms
in
out
shrl
or
xchg
add
loopne
fdivs
inc
aam
loopne
xlat
add
jmp
out
dec
or
xor
sub
mov
sbb
push
sub
sbb
icebp
push
push
aad
imul
das
pop
cmp
inc
mov
test
inc
mov
pop
arpl
jo
xlat
add
fmull
dec
cmp
dec
push
mov
pop
xchg
popa
fistpl
into
aas
cmp
shl
popa
add
inc
jne
seto
fbstp
push
mov
lods
pop
cmp
sub
hlt
arpl
stos
mov
cmp
jae
sub
lods
enter
and
push
push
jne
aam
xor
icebp
adc
pop
mov
mov
aad
pop
push
jge
roll
in
add
sbb
dec
pop
fcomps
and
sub
out
iret
push
add
mov
out
pop
cmpsb
mov
fcmovnbe
int3
jnp
push
xchg
outsl
fisubs
jne
push
fbstp
ja
into
lret
imul
jmp
aaa
push
mov
jmp
aas
mov
aam
leave
call
loope
or
lods
mov
stos
pop
pop
adc
add
push
in
sbb
pop
or
test
push
pop
pop
adc
addb
rcr
xchg
js
or
xor
fbld
sub
push
mov
in
out
or
scas
inc
mov
inc
mov
mov
adc
inc
cmp
dec
mov
dec
pop
lea
mov
rcpps
daa
lods
cmpsb
incl
mov
xor
arpl
daa
push
add
sub
movb
jl
mov
scas
cmc
xchg
es
out
inc
loopne
mov
dec
mov
sub
xor
shrl
adc
out
cmp
and
sbb
pushf
les
test
cmc
mov
push
inc
ret
sbb
and
mov
cmpsl
dec
sbb
ret
std
sahf
ret
mov
xchg
rcll
fnstenv
pop
fbstp
xor
loop
add
shll
ret
loopne
xor
arpl
add
stc
cmp
pop
inc
pusha
cs
xor
mov
or
ror
jb
push
pop
inc
mov
rcl
add
mov
ss
mov
out
ret
hlt
mov
mov
dec
int
add
mov
dec
xchg
dec
or
fistl
adc
push
in
ds
test
les
loopne
jle
push
and
das
or
out
pop
mov
test
ss
and
pop
push
mov
test
out
shlb
jecxz
and
lahf
cs
mov
ds
in
push
or
cmpsl
push
loop
cmp
out
mov
int
and
int
add
aam
inc
adc
cld
out
dec
lcall
je
sub
or
inc
jl
bound
sub
gs
das
mov
out
or
xor
lcall
or
xor
sub
push
in
addr16
adc
cmp
stos
pop
push
test
dec
mov
std
aam
test
stc
mov
enter
adc
lock
sub
cwtl
sbb
inc
daa
repz
call
jb
adc
or
fldenv
mov
mov
sub
pop
jae
push
je
push
push
and
dec
jmp
adc
into
mov
mov
call
enter
xor
pop
add
imul
pop
out
xchg
push
push
aas
and
jne
out
push
pop
or
sbb
daa
push
mov
pop
mov
mov
inc
jmp
push
orl
inc
imul
jg
add
mov
out
decl
pop
lahf
test
cwtl
out
bound
adc
cld
in
mov
cs
mov
push
into
mov
and
and
xor
pop
bound
mov
pop
mov
call
mov
xchg
mov
xchg
lahf
xchg
out
test
or
dec
sbb
add
jmp
lret
lret
jp
pop
mov
add
push
in
push
loopne
mov
push
mov
mov
jl
push
push
orl
xchg
sub
mov
push
or
addr16
push
sub
xor
xor
xchg
ja
mov
js
cmp
leave
scas
das
push
popa
aam
in
fdivrp
bound
cmp
cltd
cmp
pop
in
das
rclb
enter
mov
add
dec
pusha
mov
incl
xor
pop
xor
ss
mov
or
popf
add
mov
dec
xor
pop
clc
enter
hlt
xchg
mov
mov
jne
in
mov
cmc
test
shr
push
mov
stos
orb
std
sub
out
xchg
lods
insl
or
mov
dec
scas
xchg
mov
xchg
fstpt
cmpsb
adc
movb
xchg
dec
shlb
lahf
or
popa
cmc
sub
call
mov
push
dec
jge
jae
xlat
shlb
sbb
jae
push
mov
sub
xchg
pusha
lret
mov
das
mov
jmp
push
std
xchg
popa
popa
adc
sti
xor
add
mov
adc
and
jno
xchg
stos
jb
arpl
push
pop
and
push
sbb
push
mov
push
push
add
push
pandn
mov
adc
in
enter
mov
jge,pt
mov
fnstcw
mov
jle
add
jne
jp
push
push
sbb
bound
inc
aam
outsl
cmp
jge
nop
add
sbb
loop
std
push
leave
bound
mov
dec
fwait
xor
and
imul
jno
test
loope
pop
add
pop
mov
fwait
push
xchg
mov
xlat
das
out
lock
dec
insl
cmpsl
fmulp
fistps
cmp
fisttps
ds
dec
dec
dec
das
add
test
leave
cltd
push
mov
jno
inc
jo
xchg
and
in
xlat
inc
addr16
rcr
rolb
leave
xchg
xchg
push
cmp
inc
repz
cmc
dec
popa
or
add
nop
xchg
cmpsb
or
mov
dec
mulb
cmp
xchg
fldl
cmpsl
cmp
mov
stos
dec
mov
lret
in
test
push
mov
inc
inc
nop
dec
fistl
push
repz
mov
outsb
ljmp
stc
fdivl
lcall
adc
sbb
push
mov
sahf
jns
jg
xor
and
add
push
scas
pushf
mov
xor
sarb
out
adc
and
pop
jge
cmpb
push
loop
int3
ja
mov
and
mov
add
dec
jnp
cltd
dec
push
mov
and
subl
gs
xor
xlat
mov
mov
push
and
lods
ret
lods
call
cs
xor
pop
popf
movsl
arpl
stos
adc
sbb
dec
add
pop
out
sbb
jge
xor
and
idivl
out
xchg
dec
inc
imul
xchg
sbb
lea
push
mov
pop
loop
cld
shl
shll
aaa
push
jecxz
mov
xchg
call
and
int
test
cmp
scas
cltd
jo
int3
cmp
je,pt
add
add
push
cmc
jne
mov
mov
jbe
or
xchg
pushf
xor
jno
shll
rorl
jmp
imul
jl
pop
sub
push
pop
mov
notb
cmp
leave
and
pop
jae
insb
cs
dec
dec
add
mov
push
inc
xor
adc
mov
cmpb
mov
test
cmpsb
mov
mov
adc
fcmovnbe
and
xchg
inc
stos
xchg
xchg
mov
mov
dec
outsl
jnp
pop
fmul
aam
jns
int3
addr16
rorb
jp
addr16
jae
xor
and
lea
lcall
mov
jbe
adc
test
mov
sub
dec
mov
and
inc
cmp
push
pushf
rcrl
cmpsb
arpl
lahf
push
mov
push
ror
add
lods
xorb
push
xor
pop
push
mov
and
or
mov
fsts
sub
push
data16
inc
imul
jns
mov
xor
xchg
ss
inc
rcr
dec
arpl
adcl
mov
cwtl
push
sbb
in
loopne
dec
mov
outsb
out
imul
aaa
push
or
cltd
cmp
cmp
insw
lret
cmc
negb
jbe
jno
push
sti
xchg
mov
cmp
je
ret
xchg
mov
jnp
adc
repnz
mov
int3
jo
or
fmuls
pop
orl
jo
leave
loope
xchg
jp
adc
shll
cli
adc
jp
and
inc
push
popf
sbb
mov
in
mov
jbe
aaa
mov
mov
mov
rcrb
ror
mov
test
jno
ss
leave
pop
push
and
sahf
push
mov
cld
cmpsl
test
add
push
std
incl
cmp
les
std
and
imul
sbb
out
in
dec
pop
pop
add
shll
cld
daa
pop
into
aad
inc
or
push
int
mov
jle
cwtl
inc
xlat
call
pushf
push
das
ret
fst
daa
in
add
lods
imul
xchg
or
out
mov
and
dec
rol
jns
rorl
push
adc
pop
mov
or
les
sub
inc
push
sbb
aad
push
loop
xchg
mov
roll
js
adc
es
inc
sub
or
clc
loope
dec
sbb
addb
js
in
mov
ja
add
idiv
push
jmp
rcrl
add
int
xor
cmp
xor
sbb
mov
inc
inc
push
lret
mov
sbb
ss
dec
xchg
out
aam
faddl
dec
adc
xchg
psllq
leave
xlat
aaa
cmpb
call
xchg
stos
data16
xchg
cmp
lahf
int
mov
dec
jmp
addr16
sbb
bound
lret
sub
out
mov
ret
in
and
cmp
pop
outsb
mov
into
outsl
loope
push
cmp
xchg
mov
sti
fdiv
out
jo
jae
xchg
cmpsl
sbb
add
imul
cwtl
jmp
shll
fwait
add
das
mov
leave
fdivrs
or
aam
pop
out
adc
lret
lods
sub
mov
ret
rcrb
aad
jbe
mov
roll
loope
lahf
stc
cs
test
mov
out
shlb
xor
mov
xchg
in
pop
mov
mov
push
insb
out
inc
sub
cmp
adc
push
movsb
adc
int
mov
je
jbe
dec
sub
mov
hlt
cmp
add
imul
fwait
push
imul
mov
enter
push
imul
mov
shll
mov
in
lods
sub
test
mov
bt
inc
dec
xchg
and
sub
push
pop
or
in
mov
xor
pop
dec
nop
sbb
sub
xor
sub
cmp
mov
and
dec
mov
sti
syscall
pop
or
mov
xor
les
pop
imul
sbb
fs
cld
xor
lret
xchg
push
stos
daa
cmp
mov
push
fbstp
mov
rolb
dec
or
push
fidivs
cmc
xchg
lret
mov
jg
xor
lea
jae
push
movsb
pop
lcall
movl
pop
xor
dec
and
sbb
or
sbb
pusha
pop
fwait
and
test
xchg
call
aad
pop
lds
mov
xchg
dec
lcall
hlt
adc
arpl
lea
push
jb
lcall
xor
fisubs
addl
in
fsubrl
fs
fld1
test
sahf
clc
pushf
mov
inc
and
dec
jge
xchg
push
stos
movsl
data16
add
in
enter
or
pop
iret
xchg
and
push
outsb
mov
pop
jl
imul
cmp
adc
sub
push
or
loop
outsb
lods
inc
mov
push
aad
and
divl
pop
aad
inc
add
dec
addr16
sbb
dec
add
in
push
ljmp
or
lret
cmp
test
cmpsb
jecxz
leave
aas
js
das
and
or
mov
push
add
lds
add
inc
sbb
js
or
fidivs
pushf
pop
out
xchg
and
adc
push
shrl
xor
inc
and
jnp
or
and
pop
dec
sub
pop
mov
pop
and
je
xchg
sbb
pop
push
ss
aam
lea
adc
daa
fiadds
push
shr
xchg
jp
aad
lcall
outsb
in
sti
in
pop
in
lahf
jmp
ss
int
or
xor
in
iret
or
aas
pusha
les
or
push
sahf
xor
inc
pop
inc
mov
add
xor
sti
insb
mov
in
imul
dec
leave
decl
sbb
mov
je
addr16
pop
out
mov
ficoml
push
pop
stos
call
scas
int
outsl
mov
push
rclb
mov
inc
inc
mov
pop
movsb
jne
add
data16
mov
outsl
out
sbb
fistpl
insl
outsb
lods
movsl
push
sti
out
dec
jmp
movsb
sbb
adc
dec
jo
and
cltd
mov
xchg
and
shr
push
push
fwait
icebp
xor
sbb
add
xchg
test
jmp
sti
push
orb
mov
out
jl
and
xchg
dec
cmp
aaa
icebp
imul
sub
popa
pop
jmp
std
pop
mov
addr16
test
daa
jnp
push
add
insb
int
mov
jb
sub
inc
fsts
je
sub
push
jbe
adc
push
dec
mov
push
in
f2xm1
bound
insl
dec
pop
and
mov
xor
mov
hlt
dec
xor
repz
adc
aad
mov
hlt
sbb
cmp
cmpsb
mov
cmc
pop
inc
xorb
cmp
test
aam
mov
ja
and
aam
scas
sti
es
sbb
stos
repz
test
jnp
int
mov
push
iret
iret
mov
mov
push
dec
push
js
jae
pop
testb
sub
cmp
ret
mov
sti
cmp
xchg
aaa
mov
inc
into
mov
xor
ffree
and
pop
jg
repz
cmpsl
pop
enter
out
push
or
inc
sbb
sbb
cmp
push
stos
imul
jmp
xor
xchg
push
mov
and
xchg
gs
out
pop
mov
subl
jbe
jg
dec
and
hlt
cmp
pminub
adc
push
std
sub
cld
adc
jp
aaa
pop
jno
mov
hlt
jno
sub
insl
loopne
add
push
jnp
jecxz
sti
into
aad
testb
icebp
scas
add
mov
jno
mov
sbbb
lock
jmp
add
jns
add
sti
outsb
xor
inc
xchg
add
and
inc
push
add
ficomps
mov
ds
fstps
mov
jle
mov
mov
mov
std
inc
jb
pop
mov
xlat
les
pop
sub
loop
jae
fs
je
or
mov
sub
jo
rorl
push
or
hlt
icebp
mov
jge
fcompl
pop
mov
adc
out
lods
xchg
push
pop
inc
fiadds
outsl
jo
pop
adc
rcll
sub
xchg
imul
fwait
sbb
or
in
aad
mov
inc
aad
pop
mov
adc
jle
pop
popa
jle
xor
rol
sbb
push
sbb
add
and
pop
xor
movsb
mov
xchg
lods
cmp
les
cmp
push
cmp
mov
xor
sarl
pop
jbe
leave
imul
call
pushf
pop
mov
hlt
jne
ds
ret
push
jbe
insl
add
xor
cmp
xchg
mov
lock
mov
mov
sbb
xor
adc
push
sub
loope
inc
add
sub
imul
jo
nop
mov
xchg
mov
xchg
or
push
add
cld
cmp
mov
sbb
mov
adc
ret
jo
mov
fisttps
mov
lods
inc
pop
mov
sahf
sbb
xchg
aam
lret
stc
sub
mov
dec
mov
xlat
je
cli
cli
incl
push
shrb
mov
mov
ret
lret
inc
or
lods
or
adc
out
cmp
icebp
dec
mov
pop
imul
test
nop
dec
hlt
fcmovnbe
mov
adc
ljmp
aaa
fwait
es
mov
daa
mov
daa
imul
mov
sbb
or
mov
and
lock
cmc
sub
mov
jge
sbb
jge
loope
lods
mov
xchg
jg
test
les
jae
movsb
test
inc
out
sub
sbb
lahf
mov
pop
loopne
xor
dec
cld
add
pop
mov
dec
in
scas
pop
lock
mov
fsubrl
ds
insb
test
push
mov
insl
mov
call
jne
div
dec
push
adc
dec
mov
jp
jb
aaa
out
jno
push
push
or
andb
push
and
rorb
mov
cmp
pop
or
fbstp
movsb
fwait
dec
movb
cmp
xor
jl
insb
cwtl
lea
or
and
jl
sbb
pusha
scas
daa
call
push
movsb
mov
stos
negb
inc
or
xor
xor
icebp
sbb
test
mov
and
xchg
cs
leave
xor
adc
out
ret
add
sub
cmp
andb
clc
mov
push
dec
xchg
xlat
out
pop
nop
vpsubsb
pop
out
pusha
scas
decl
adcl
xor
out
pushf
cmp
stos
outsb
or
sub
es
or
fists
fdivrs
fwait
adc
mov
cltd
cld
call
aaa
mov
in
push
xorb
cmpsl
jp
xchg
aaa
sbb
loopne
cmovbe
decb
fists
jae
cmpsl
mov
xor
dec
ljmp
lea
push
rol
sub
mov
int3
lock
inc
jne
popf
pop
shlb
pop
jge
nop
pop
add
lods
mov
add
out
inc
adc
pop
out
push
adc
sbb
out
push
dec
push
orl
sub
jb
jb,pn
divb
jl
mov
cmp
arpl
gs
int3
scas
sbb
int3
fwait
daa
inc
sub
out
sub
dec
push
pop
out
scas
push
dec
xor
jl
add
sub
popf
lods
push
lret
lret
sub
push
and
mov
sbb
push
imul
mov
stos
scas
in
xchg
aam
cmp
test
inc
cwtl
fwait
ret
mov
mov
hlt
push
xchg
gs
daa
cwtl
das
adc
xor
add
mov
call
test
out
dec
pop
lret
xchg
add
clc
notb
in
and
adc
aas
cmc
sbb
sbb
xor
dec
jl
mov
or
int
xor
aad
ret
mov
xchg
push
stc
div
mov
mov
enter
sbb
mov
test
cmpsl
shl
jmp
inc
pushf
std
xchg
xor
insb
dec
xchg
das
popa
fldl
inc
and
xchg
enter
movsb
mov
cs
aaa
les
dec
or
pop
cmovnp
mov
mov
mov
stos
in
sub
test
js
mov
add
adc
jmp
xor
or
out
push
popf
adc
fcompl
icebp
fstpl
scas
call
adc
sbb
mov
xchg
adc
test
xor
and
lret
lcall
push
pop
mov
inc
xor
mov
mov
leave
iret
shlb
hlt
push
imul
hlt
add
ds
aaa
sbb
aad
pop
lds
jne
mov
std
and
xor
icebp
stos
mov
jno
mov
lret
std
imul
or
pop
rclb
cmp
rorl
sbb
sarb
fsubrs
movsl
stos
aam
add
pop
out
pusha
or
pop
test
jnp
sbb
std
sub
push
fwait
notl
rcpps
cmp
jnp
pop
add
inc
insb
cwtl
add
jecxz
mov
addr16
mov
jmp
xchg
lea
pop
pop
stc
scas
ja
loopne
jnp
test
xor
loope
mov
push
bound
out
pop
xchg
push
pop
test
test
stos
xchg
sahf
add
mov
cmp
imulb
std
std
cltd
xchg
pop
xor
xchg
jle
xrelease
sub
into
adc
call
cli
or
pop
jae
inc
mov
mov
arpl
cmpsb
xchg
movsl
sbb
jmp
sub
insl
das
mov
mov
lock
jns
imul
cmpsl
and
mov
or
and
add
pop
rol
mov
aam
push
js
xor
jg
aas
cmc
inc
ret
mov
mov
add
or
mov
mov
jb
and
push
sub
jl
ret
xchg
adc
jne
jae
shrl
jl
push
xor
pop
test
lea
ljmp
in
dec
adc
shrb
iret
mov
in
adc
xchg
fwait
loope
sub
mov
mov
mov
scas
add
fcoms
out
pop
xor
into
roll
std
adc
stos
lret
shrb
mov
inc
leave
sahf
push
inc
jle
sbb
mov
ficompl
mov
inc
daa
pushf
ss
imul
push
sbb
pop
sahf
mov
cmp
cli
out
in
lret
sti
adc
gs
sbb
cs
fld1
aaa
cmp
es
sbb
lret
std
scas
jmp
push
mov
add
insl
ljmp
das
or
dec
in
sub
jp
push
dec
inc
into
or
xorl
data16
shll
add
cmp
movsb
lods
sbb
es
add
out
call
aam
adcl
imul
inc
cld
sarl
cmp
ss
push
mov
fucomi
jns,pn
pop
lds
test
scas
push
xchg
fldenv
rcrb
cmp
sarb
ror
stos
out
ret
mov
cmp
sbb
rcr
xor
xchg
bound
enter
cmpsb
mov
xchg
mov
xor
stos
insl
and
jnp
bound
xor
in
out
push
repz
xchg
pop
inc
insb
mov
sbb
xchg
fbstp
pop
pop
cmp
shlb
ljmp
test
jo
cmp
into
scas
pop
mov
insb
dec
sub
xor
push
lods
jg
ss
xchg
dec
out
rorb
repnz
xchg
cmpb
dec
outsl
imul
add
into
push
pop
or
aad
cmp
loope
mov
scas
sub
push
clc
int
movq
xor
out
ljmp
es
imul
ss
cli
popaw
mov
mov
pop
jnp
arpl
imul
add
out
icebp
sbb
fildl
and
xchg
stos
and
dec
and
call
and
dec
adc
or
out
push
adcl
mov
jle
dec
inc
jle
outsb
mov
pop
sub
das
ss
sbb
sbb
sbb
xchg
ss
mov
rorb
loope
pop
adc
xor
xchg
xor
sbb
pop
cmp
scas
dec
dec
int
sub
sub
jg
roll
mov
mov
gs
enter
push
movsb
jp,pn
pop
pop
pop
or
mov
lret
pop
mov
scas
aad
jb
jae
std
lret
mov
js
mov
jp
xor
cmp
jae
add
jno
sahf
mov
pop
jle
in
les
insl
movsl
les
dec
cmp
ficoml
fstl
shl
jp
lods
mov
ja
pop
out
ljmp
or
idiv
pop
call
popa
add
loop
shl
out
lods
sbb
xchg
cs
lret
faddl
xchg
fwait
mov
fwait
lcall
addr16
inc
sbb
mov
movsb
xchg
test
cmp
loopne
xchg
lock
xchg
movsb
mov
pop
ret
mov
inc
fdivs
and
imul
mov
add
push
pop
inc
scas
sub
push
divb
outsb
dec
pop
pop
aam
xor
ss
or
push
daa
mov
cmp
hlt
or
adc
mov
xchg
fsubrl
andb
gs
rorl
sub
ret
and
icebp
sbb
and
dec
sahf
out
ret
sarb
popf
popf
fisubl
ds
jecxz
rcrl
mov
insl
xchg
out
mov
inc
jno
pop
mov
fstl
ds
imul
mov
cmpsb
inc
jmp
and
movsl
pop
sbb
xor
sub
call
add
rcrb
and
adc
in
sub
cwtl
cmpsl
or
cmp
and
sub
out
aaa
mov
inc
pop
inc
jle
popf
lret
mov
jns
add
mov
leave
jbe
xchg
in
mov
dec
jmp
sub
packuswb
pop
rcrl
fldl
and
mov
out
vpsubw
cmc
fwait
jge
adc
out
fdivs
outsl
stos
dec
inc
scas
decb
xchg
shl
push
pop
add
rcrb
mov
mov
and
dec
add
je
mov
mov
in
in
sub
repnz
mov
mov
scas
sbb
out
push
test
fsubrs
call
jle
in
gs
dec
mov
iret
fistpll
push
jo
mov
dec
or
loopne
xchg
insl
mov
mov
xchg
addr16
rcrb
lods
sub
test
stc
jg
outsb
or
mov
jl
pop
push
fidivs
sbb
pop
mov
push
rcr
in
cmpl
iret
sahf
xlat
mov
pop
fildl
lea
mov
lock
mov
out
sub
cmp
lret
aaa
xchg
mov
icebp
pop
mov
pop
mov
pushf
pop
sarl
and
iret
xchg
lods
inc
stos
xchg
jbe
and
into
hlt
pop
jl
mov
jb
dec
mov
cmp
fwait
dec
inc
jg
loope
mov
cmpsl
cmpsl
ljmp
cmpl
aad
xor
and
xchg
xchg
mov
inc
lahf
das
ds
sti
inc
xor
push
mov
in
and
nop
mov
out
cmp
out
lds
scas
js
mov
push
or
jb
dec
ljmp
inc
mov
into
aam
cli
mov
push
mov
and
xchg
pop
push
pop
cmpl
push
mov
adc
out
sbb
xchg
cmp
xchg
das
push
mov
or
cmpsl
jb
in
mov
stc
mov
popf
push
mulb
push
xor
arpl
lods
add
mov
std
mov
cltd
ret
out
std
jne
and
jge
push
sbb
push
cmp
sbb
outsl
mov
inc
out
push
ja
pop
xchg
fisubrs
fcmovnbe
call
insb
sbb
push
shlb
std
pop
inc
icebp
cmpsb
jbe
jbe
xchg
jp
push
sbb
sub
sbb
mov
fistps
bnd
push
testb
dec
xchg
fwait
mov
dec
push
in
test
mov
inc
xor
push
mov
call
jle
cld
out
add
imul
mov
xor
mov
dec
mov
mov
pop
or
sbb
fistpll
cmc
pop
push
lcall
cltd
subb
insb
popa
add
push
add
daa
and
inc
lods
rcll
hlt
into
mov
pop
jge
fs
cmp
imulb
mov
adcb
or
mov
pop
inc
jnp
jp
pusha
nop
testl
ret
sub
out
or
dec
sarb
ficomps
test
insb
mov
test
xchg
dec
dec
and
repz
cld
fs
or
mov
es
jbe
or
xchg
add
jb
dec
outsb
inc
cwtl
pop
fwait
pop
icebp
call
pop
push
cmpsl
aaa
xchg
jle
out
mov
movsl
jmp
mov
aaa
and
adc
push
xchg
mov
and
insl
cmp
rcrl
aad
cmp
ficomps
jmp
movsb
ret
mov
push
xor
fwait
push
clc
inc
dec
adc
pop
ja
test
cmp
xchg
jbe
sbb
push
inc
aaa
xchg
sbb
add
imul
repnz
mov
cs
xchg
pusha
decl
arpl
sahf
jg
dec
aam
lcall
addr16
or
pop
leave
lods
iret
xor
inc
xchg
mov
jl
jl
dec
mov
aam
sub
jg
add
cmc
jne
sub
cmpl
sbb
fimull
mov
shrb
loop
cld
hlt
sahf
xchg
adc
jecxz
xlat
sbb
outsb
and
ds
stos
push
sub
xorl
xor
retw
push
movsl
inc
dec
and
sbb
xorl
popa
int3
lds
popa
jno
loopne
outsb
enter
insb
inc
shll
lea
in
fcompl
inc
loope
jmp
cmp
push
xchg
cvtps2pi
inc
insb
ja
aad
enter
sub
call
sbb
inc
and
xor
cmpb
mov
or
jmp
jb
pop
jge
bound
mov
sub
notl
adc
inc
and
mov
jp
cmp
add
and
fwait
sti
fsubrl
loopne
pop
push
and
nop
pop
add
inc
and
push
testl
and
inc
negl
jbe
scas
pop
pop
ret
mov
xor
enter
xor
inc
in
xchg
push
jmp
sbb
inc
sahf
cmp
xor
push
and
aad
cld
dec
enter
adc
scas
push
mov
inc
push
adc
ret
pop
stc
inc
jmp
xchg
jmp
adc
insl
repnz
es
pop
jle
push
das
xor
lcall
leave
pop
jp
or
add
pop
sbb
dec
jo
sub
jae
mov
fbstp
fmuls
cmp
out
jns
mov
enter
dec
mov
push
push
mov
dec
inc
scas
xor
sti
and
xor
stc
arpl
push
outsl
inc
xor
mov
or
push
dec
mov
cmpsl
outsl
arpl
inc
ss
mov
test
ja
jne
fstpl
cmpsb
jb
mov
insl
js
ja
and
sub
push
pop
or
cmp
xchg
imul
out
push
lods
dec
pop
or
into
lods
int3
mov
push
adcl
out
cltd
fnstsw
cmp
ret
sub
dec
test
out
sub
inc
pop
jp
jg
stos
imul
pop
mov
mov
mov
in
out
jnp
test
hlt
jmp
or
in
rcl
ljmp
das
call
ljmp
and
sub
mov
cmpsb
xchg
hlt
mov
push
je
cmp
sbb
mov
arpl
jg
sub
dec
ljmp
je
nop
sbb
cmpsb
out
mov
bound
jmp
xchg
push
mov
das
mov
cmp
sub
mov
fisttpll
xchg
pusha
pop
xchg
int3
test
lret
push
mov
cmp
push
inc
pop
das
inc
pop
ror
push
mov
into
mov
pop
jns
xchg
inc
jns
jge
inc
pop
test
xchg
sub
test
out
xor
sub
hlt
push
data16
adc
pushl
aas
fucomi
jmp
sti
in
xchg
pop
inc
or
jb
out
out
test
push
scas
out
stos
sub
inc
shl
mov
add
fs
das
ret
int3
adc
aaa
imulb
and
lcall
and
sbbl
sub
outsl
fld
cmpb
mov
dec
flds
xlat
sahf
dec
and
inc
ds
ficomps
mov
mov
enter
sbb
mov
sbbl
test
add
cmp
mov
clc
lret
mov
orl
fildll
mov
iret
cmpsb
and
add
mov
inc
mov
nop
inc
xchg
inc
jo
push
pop
mov
xchg
jmp
mov
pop
xor
in
and
pop
icebp
sub
adc
and
push
popa
arpl
sbb
adc
cmp
rcll
or
mov
jnp
cmc
addb
or
push
mov
shlb
loop
ret
lcall
and
scas
aam
in
das
lock
loop
xchg
add
and
cmp
or
fdivs
add
jae
ja
sbb
mov
xlat
xor
push
lret
bnd
xchg
cmp
in
andl
sbbb
xchg
fisubs
fsubrl
inc
int3
insb
cld
iret
fists
pop
nop
cmp
xchg
mov
leave
mov
hlt
loope
stc
cmp
push
call
sub
addr16
in
sub
push
mov
je
jecxz
pop
push
push
or
push
cmp
sbb
in
idivl
nop
jnp
mov
pop
and
xchg
xchg
insb
pop
jge
mov
mov
and
imul
cmpsb
sub
push
imul
push
mov
pop
dec
push
cmp
fnstcw
mov
and
mov
sar
dec
inc
cmpsb
mov
add
jp
push
mov
cmp
and
push
mov
sub
cmp
insl
daa
jns
in
and
loop
push
jg
push
sub
lahf
jns
ret
icebp
fcompl
mov
inc
jecxz
negb
ficomps
daa
daa
xchg
push
enter
and
xor
dec
xchg
dec
jmp
movsl
ss
sbb
sbb
jae
adc
nop
int
test
push
jno
jb
decb
pop
cmp
cmp
add
pop
sbb
or
movsb
outsb
jecxz
sub
mov
mov
push
mov
std
add
stos
pop
in
cmpsl
rcr
sub
sub
mov
xor
aam
out
or
inc
cmpsl
fbld
mov
pop
mov
cmp
insl
fcomps
sub
mov
lfs
ret
rcrb
cwtl
sbb
dec
stc
mov
inc
loope
jns
inc
push
cmpsl
int3
out
and
out
std
lods
jbe
jae
sub
sarl
or
stc
xchg
push
lahf
pop
sbb
mov
jnp
jbe
mov
pop
aad
dec
inc
mov
sti
fsubl
std
jnp
aam
mov
int
or
loope
das
jae
fs
mov
cs
fstps
cmp
fdivrl
stos
xor
mov
loop
imul
inc
lods
sbb
scas
pop
aad
and
pushf
mov
mov
ljmp
sub
pop
or
adc
test
movsb
xor
and
cmp
fidivrl
out
les
add
rclb
movb
add
push
into
jge
movsb
call
add
enter
les
xlat
jnp
push
out
icebp
negl
mov
dec
pop
jo
pop
adc
push
ljmp
pusha
mov
std
leave
mov
jne
into
adc
add
icebp
add
mov
mov
cli
adc
mov
pop
fwait
les
push
mov
sub
in
loope
jp
test
ret
or
ljmp
lcall
imull
push
testl
mov
daa
in
push
mov
insl
sub
arpl
push
popa
mov
lock
xchg
mov
iret
sti
iret
ret
dec
mov
iret
insb
mov
sbb
pop
test
xchg
sbb
mov
dec
and
std
mov
sbb
mov
push
rorl
xor
mov
inc
mov
sub
cli
jae
xchg
adc
mov
cmp
jmp
icebp
mov
repnz
repz
sbb
enter
mov
fwait
int
fcmove
jge
lock
push
arpl
adc
jns
in
stos
xchg
pop
adc
sti
sub
pop
mov
sub
fsts
shrb
sub
mov
cmpb
sbb
mov
fistpll
mov
shl
xchg
je
cmp
les
push
sbb
xor
repz
in
int
scas
jnp
mov
in
xchg
add
pop
push
inc
sbbl
sbb
pop
aaa
mov
push
cmp
in
call
in
adc
iret
inc
stc
int3
insb
jg
daa
cmp
jb
xor
sbb
loopne
aas
or
pop
repz
adcb
call
add
andl
pop
hlt
sbb
and
xor
mov
dec
push
test
in
sub
icebp
popa
cmpsb
fiaddl
adc
mov
adc
jbe
out
jns
xor
in
xchg
mov
or
push
sbb
sbb
jae
mov
and
mov
loope
cmp
xor
orb
fidivrs
xchg
imul
ljmp
xor
das
add
mov
sbb
insl
popf
xchg
pop
rcrl
addr16
inc
test
stc
loop
div
dec
mov
xchg
shll
mov
fidivrl
push
lock
mov
add
jg
dec
jmp
enter
cs
stc
or
adc
mov
sub
push
int
sbb
mov
rcll
pop
cli
test
in
mov
cmp
mov
fimuls
inc
enter
dec
lcall
cwtl
rclb
enter
lret
jo
lahf
lock
in
xchg
scas
jno
dec
in
xchg
inc
jle
insb
jle
or
movsl
shl
cld
out
sbb
int3
lahf
mov
push
mov
sub
mov
ljmp
rorl
repnz
sbb
imul
jo
push
insb
xor
lock
pop
fs
jo
bound
cmp
mov
jo
fistpl
mov
dec
subl
aad
lret
adc
xchg
add
mov
push
jno
ljmp
roll
push
mov
leave
push
in
fwait
mov
es
sbb
pop
cltd
inc
fs
pop
lret
jbe
in
mov
and
orl
rorb
mov
adc
dec
leave
lds
and
add
jg
and
mov
mov
add
andb
cmp
inc
paddsw
xchg
and
mov
popf
dec
mov
inc
test
xchg
inc
inc
fsubs
push
inc
jp
cmp
xchg
xchg
xchg
cmp
in
clc
jle
cmp
in
enter
out
add
ror
enter
sti
xchg
mov
ja
ja
push
jge
or
jmp
and
loope
movsl
and
dec
sbb
outsb
mov
xchg
into
rorb
outsb
pop
mov
movb
sbb
xor
das
das
inc
cld
aas
or
mov
stos
xchg
xchg
jmp
xor
rorb
mov
xor
pop
cmp
cli
pop
mov
enter
orl
test
js
movsl
fildll
push
jmp
inc
pop
push
out
movsb
push
test
aam
shrl
loopne
lea
ja
mov
ss
cli
sbb
mov
or
cmpsl
fldt
out
mov
dec
aaa
popf
lahf
and
mov
mov
fisubl
loope
ljmp
dec
add
push
clc
mov
fisttpl
sbb
aam
pusha
adc
scas
mov
xchg
imull
aas
mov
loop
xchg
push
xchg
cmpsb
push
jecxz
mov
cmp
lcall
shll
add
sahf
jb
lret
push
pop
xor
cmp
or
sbb
fsubs
xchg
fwait
popa
or
dec
mov
movsb
test
jno
ja
dec
dec
imul
cltd
out
fidivrs
pop
fcompl
xor
and
inc
enter
jnp
adc
adc
jbe
jbe
mov
int3
outsl
jne
clc
sub
xorb
mov
mov
scas
cmp
pop
pop
add
mov
mov
cltd
lods
lods
xchg
mov
and
pop
push
sub
and
pop
sbb
sub
ds
dec
xor
xchg
pop
push
push
dec
add
leave
mov
mov
xor
pop
sub
pop
out
xchg
pushf
cmp
jo
push
mov
cmp
pop
mov
xor
jae
push
push
jne
jl
repz
lods
sbb
loop
jge
mov
mov
dec
lcall
popf
pusha
push
or
repz
insl
test
call
gs
aad
mov
in
mov
sub
leave
sti
lods
fldl
cmp
movsl
fwait
mov
fadd
sbb
sub
cmpsl
lods
cltd
decb
or
dec
pop
lret
mov
mov
mov
push
test
rcrl
pop
cltd
ds
into
inc
dec
fiaddl
pop
sbb
sbb
push
lods
jecxz
pop
or
add
mov
mov
sbb
jp
or
xchg
xor
xchg
mov
lcall
push
scas
pop
jb
hlt
ret
sbb
imul
enter
in
fisubs
dec
out
fcoms
loope
mov
test
cli
jbe
cmp
enter
call
jo
fldcw
das
out
rclb
movsl
jge
aam
sub
cmp
in
xor
mov
inc
cmp
rcrb
stc
clc
push
push
lahf
icebp
mov
or
cltd
dec
fldt
xor
add
inc
sarb
stos
aad
hlt
sti
gs
out
mov
ret
fidivrl
mov
xchg
cmc
jle
jb
push
add
mov
andb
xlat
outsl
in
sbb
fsubrl
dec
fsubrs
gs
mov
jg
sub
int3
hlt
clc
jg
hlt
int3
push
sti
cwtl
in
jbe
jecxz
mov
push
cmp
sub
inc
xchg
jbe
popf
cltd
sti
push
ffree
imul
enter
dec
stc
pushf
adc
pop
rorb
scas
lret
sub
hlt
dec
test
and
jns
and
dec
adc
repz
movl
and
pop
aam
andl
dec
sarl
pop
testl
inc
cmp
inc
pop
test
cwtl
sbbl
sbb
iret
fldcw
mov
loopne
mov
xchg
pusha
cwtl
cmp
pusha
sbb
jp
mov
adcl
inc
mov
push
push
ds
das
mov
jne
xor
ficompl
out
clc
in
push
test
mov
fdivrs
in
rcrb
addl
mov
inc
jl
in
outsl
lahf
iret
cmpsb
leave
push
ret
fnstsw
and
xor
mov
insl
cmp
jns
test
lret
cmpb
aaa
nop
jge
push
jbe
adc
outsb
insl
and
pop
inc
daa
hlt
aam
xchg
mov
shll
inc
cmp
mov
xor
sahf
mov
cmpsb
fdivrl
jg
jne
in
cmp
cwtl
call
jno
mov
mov
cmc
insl
test
inc
arpl
dec
leave
nop
sub
jns
mov
jo
or
push
or
xor
jns
ret
push
test
xchg
xorl
or
jmp
push
in
jns
add
js
aaa
sub
fs
jl
mov
fisubs
xor
test
pop
ret
imul
cld
inc
lock
idiv
lods
jbe
movsb
push
jae
test
fcompl
push
mov
jae
je
jnp
mov
mov
mov
js
andb
mov
jnp
xor
xchg
push
sbb
jg
adc
test
cmp
mov
shll
dec
ljmp
and
push
or
pop
mov
aam
rorl
mov
pop
je
mov
bound
adc
pop
push
mov
in
outsb
sti
data16
or
fsubrl
cwtl
adc
adcb
lock
sub
sbb
add
pop
sbb
push
mov
mov
xor
or
int3
jge
jne
xchg
add
and
jg
vmaskmovdqu
jbe
repz
movsl
push
or
adc
pop
shr
cmp
add
and
inc
xor
in
adc
pop
mov
push
shr
sub
in
popa
adc
jle
insb
jo
jne
adc
movzbl
or
adc
les
cmp
xchg
mov
mov
jo
in
jne
inc
sbb
imul
insl
adc
inc
push
daa
std
dec
fcoml
mov
mov
inc
xor
in
pop
cmp
in
mov
pop
cmpl
push
jge
xchg
pop
mov
mov
jl
xor
jae
xchg
lret
clc
aaa
jmp
mov
adc
sub
push
fwait
xchg
ds
xor
mov
mov
lret
mov
pop
xlat
push
das
std
cmp
test
shl
pop
cmc
push
gs
test
scas
mov
outsl
les
and
mov
add
pop
sbb
loop
dec
icebp
js
jae
ds
insb
pop
push
xchg
sbb
cwtl
in
xlat
inc
jl
pusha
aam
inc
ja
mov
cld
and
mov
popa
notl
insl
push
or
inc
cli
ret
add
inc
enter
xchg
fwait
in
xchg
loopne
sbb
mov
cmp
or
inc
dec
push
bnd
cmpsl
mov
mov
stc
movsb
xlat
mov
call
xchg
es
aam
or
push
sbb
ret
int
divl
dec
aad
pop
jge
ja
test
adcb
jne
mov
inc
or
or
push
insl
push
xlat
xlat
dec
aam
mov
stc
mov
push
fnsave
dec
movsl
fs
push
and
xor
inc
cmpsl
movsb
pop
push
imul
jge
inc
add
fidivs
test
sbb
test
push
outsb
test
das
scas
rorb
push
outsl
and
pop
sbb
repz
dec
pop
xchg
push
jo
test
loop
jno
push
test
jnp
adc
lret
ret
stos
push
outsb
push
and
rcll
test
pop
out
lea
xor
inc
jae
add
inc
pop
xor
js
xchg
mov
mov
mov
into
cmc
andl
out
cmp
std
jnp
push
aam
out
and
mov
mov
sbb
cld
sbb
and
sbb
lret
jnp
das
and
test
sbbb
test
mov
pop
movsb
lods
sbb
cmp
xchg
mov
xchg
jnp
jb
cmp
shr
int
jno
lret
fildl
dec
mov
pop
pushf
pop
inc
scas
aam
xlat
mov
scas
int3
mov
adc
add
or
xchg
mov
xchg
repz
pop
and
mov
pavgb
jecxz
pusha
and
mov
cmpsl
ret
movlhps
cmpsb
lahf
lcall
pop
sbb
cwtl
add
push
repz
in
or
les
fwait
dec
or
dec
sub
sub
arpl
or
shll
xorl
cmp
dec
fisttpl
sub
movsb
and
out
lods
sbb
adc
jae
xchg
jle
xchg
pushf
cmp
sub
movsl
push
adc
mov
aaa
xor
test
shll
adc
aaa
icebp
das
dec
xchg
or
jae
int
cmp
push
dec
insb
in
mov
jle
dec
test
loopne
cmp
pop
mov
loop
mov
push
inc
das
pop
stos
add
cwtl
inc
inc
in
or
mov
sub
jo
nop
imul
add
aad
cltd
dec
dec
outsl
jo
repz
scas
sbb
xchg
xor
sbb
cs
idivb
inc
das
sbb
add
pop
lea
sub
sub
jge
pop
jno
popf
clc
mov
sbb
xchg
das
fmull
das
sbb
subl
xor
mov
pop
insb
cmpsl
sti
pop
fs
mov
or
movsb
scas
pop
jge
fnstcw
xorl
pop
test
loopne
arpl
nop
lock
push
inc
dec
jge
mov
les
stos
ja
incl
dec
scas
jnp
jnp
pushf
lret
inc
cld
add
jno
cmp
mov
rcr
jle
lcall
cmp
insb
pop
call
and
cli
add
xchg
mov
and
roll
stos
pop
push
lea
or
cmp
mov
cmp
adc
mov
mov
push
sub
inc
mov
lods
xchg
dec
jle
cmp
push
daa
mov
sahf
shrb
mov
rcl
xchg
push
dec
dec
popa
pop
mov
adc
stc
sbb
pop
adc
xor
scas
and
dec
push
pop
sbbb
cs
xchg
popa
mov
sub
enter
cli
push
pop
jg
sub
mov
xor
jmp
and
mov
push
mov
cmpsb
pop
add
adc
lret
push
aaa
push
add
clc
pop
insb
add
xor
add
mov
lea
mov
mov
mov
pop
add
mov
and
mov
sbb
pop
push
pop
push
clc
jno
pop
movl
push
sarb
and
inc
pop
enter
outsb
pop
sbb
inc
push
scas
mov
xchg
dec
shl
lea
hlt
mov
aad
iret
xchg
dec
loop
mov
orb
in
or
jecxz
out
out
adc
data16
loope
in
add
xchg
mov
div
cwtl
cmpsl
das
mov
aas
cmp
imul
adc
in
adcb
aas
nop
lods
or
push
movsb
mov
out
fs
sbb
scas
jne
in
inc
bnd
pop
jns
je
jnp
in
loop
push
addl
cmp
xchg
pop
or
ds
shlb
cmp
lret
mov
pop
aaa
sahf
mov
les
scas
xchg
sar
dec
dec
out
shlb
or
or
int
insl
or
cltd
popa
loope
xor
sahf
and
stc
mov
movsl
jle
sbb
jbe
popa
pushf
inc
fldl
push
cmpsb
leave
and
pop
mov
cmp
cwtl
imul
ret
ss
sub
lods
or
jmp
mov
sbb
orl
leave
cmp
and
aas
mov
push
pop
jp
es
xchg
cwtl
mov
sub
jno
jecxz
aam
dec
inc
mov
cltd
nop
adcb
xor
cmp
mov
int
pop
fldl
cmp
lods
sub
shlb
or
add
jae
mov
imul
movsl
dec
gs
and
mov
outsb
push
loop
jg
jle
in
lcall
mov
sbb
dec
mull
or
fiadds
xchg
imul
inc
inc
fildl
and
insb
lock
mov
cmc
ljmp
inc
xor
xchg
add
pop
jmp
test
pop
xchg
pop
push
cmovg
jmp
pop
pushf
and
rclb
popa
jns
sbb
or
movsb
test
cwtl
test
iret
pusha
fsubrl
jmp
add
mov
push
sub
cmpsb
fsubrs
testl
xchg
sub
or
out
ljmp
jp
pop
sub
mov
or
lahf
loopne
push
mov
jae
adc
data16
xchg
popf
jmp
jp
je
inc
movsb
out
or
in
in
xchg
into
jge
lcall
dec
iret
mov
and
pop
jl
push
nop
pop
fmuls
mov
out
jle
into
inc
sbb
cmpb
pop
scas
test
repz
insl
mov
jno
xor
inc
adc
and
or
repnz
sbb
push
add
add
mov
xor
inc
jne
fucom
adc
xor
loopne
shlb
inc
stos
lods
inc
and
jge
cmpsb
inc
sub
mov
cli
or
jl
adc
aaa
jl
stc
lret
xor
sub
sub
sub
mov
cld
pushf
xor
add
pop
sub
scas
in
pushf
pop
mov
shll
dec
sub
rorl
jbe
fsubrl
dec
sub
dec
adc
push
stos
add
es
xchg
lods
insl
js
dec
push
ljmp
adcb
test
icebp
cmp
push
lods
aas
and
fidivl
fstps
xor
xchg
jge
insb
push
mov
in
movsb
rolb
loopne
cmp
repz
mov
ret
xor
xor
lods
or
pop
jecxz
mov
jmp
cmp
sub
stos
daa
cmp
mov
out
je
add
xchg
xchg
sbb
push
mov
mov
ret
sbb
dec
jbe
popf
ret
mov
sarl
pushf
cmpsl
push
mov
sbb
jp
orl
push
inc
add
inc
insl
cmp
xor
fsubrp
popa
idivb
add
cmp
gs
out
out
out
add
lea
jb
rcrb
pop
xchg
sarb
mov
add
adc
or
cmp
xor
outsl
mov
ljmp
jno
jl
cwtl
lgs
fdivrp
sahf
push
mov
xchg
xor
out
push
sbb
push
scas
popa
xor
in
jbe
aam
cld
xchg
loope
incl
lock
out
leave
cmp
in
mov
add
ds
aam
cwtl
push
cmovle
iret
enter
sbb
enter
in
lahf
jl
sub
adc
movsb
jae
stc
sub
scas
sahf
int3
and
jge
xor
mov
mov
rep
push
in
loop
add
and
rcll
lahf
mov
pop
ss
out
xchg
nop
fs
scas
add
adc
or
ljmp
pop
ret
cmp
sub
aad
int
popf
dec
sub
push
movsb
push
gs
jae
mov
test
jo
sbb
xlat
mov
dec
out
mov
sub
xchg
jnp
xor
xchg
cli
add
test
xchg
stos
dec
cmp
sarb
xchg
aas
outsl
movlps
xchg
dec
inc
cmp
pop
icebp
les
xchg
or
loope
mov
into
in
cmp
push
adc
dec
outsb
int
pushf
sub
dec
sub
mov
jae
fisubs
push
call
int
xor
jb
out
shlb
pop
cli
enter
cmp
roll
cmp
mov
test
xor
inc
lds
push
in
hlt
sbb
test
xchg
flds
or
lcall
into
push
mov
std
sub
cmpsl
loop
lods
cmp
dec
out
iret
leave
out
cmpsb
call
incl
aaa
jae
and
aaa
add
lcall
sub
mov
lods
lret
push
mov
jne
push
xor
mov
adc
or
mov
jg
cwtl
xor
pop
not
inc
ja
shr
jne
add
xchg
movsb
ret
scas
pusha
xchg
ds
lods
roll
dec
and
shrb
outsb
adc
dec
xchg
jae
mov
repnz
and
insl
repnz
sub
lcall
inc
fwait
jae
jmp
sbb
pushf
jne
xchg
sbbb
fs
inc
push
ljmp
mov
inc
fs
mov
push
iret
cmpsb
push
stos
xchg
dec
cwtl
call
and
mov
rorb
lock
hlt
jg
jns
loope
cmp
adc
scas
pop
insl
scas
cmp
dec
pop
dec
jecxz
js
jle
lods
sti
out
xchg
xchg
test
in
ljmp
mov
outsl
movsb
add
mov
in
mov
int3
loopne
mov
jbe
pop
notb
xor
mov
jecxz
jl
adc
and
loopne
and
gs
mov
xchg
pop
fisubs
cwtl
sarl
mov
jge
aaa
test
out
push
jbe
and
cmp
mov
popa
movsl
inc
add
test
dec
fdivrs
mov
mov
inc
iret
testl
cmp
xor
movsb
popa
xchg
add
cmp
movsb
lock
ret
repnz
sub
std
das
jl
int3
add
stos
cmpl
je
stc
jp
lock
es
clc
push
repz
lock
jns
adc
adc
pop
inc
and
mov
add
das
mov
lods
push
js
or
cld
cmp
xchg
adc
in
and
xor
aam
cmp
and
out
pop
mov
add
into
inc
call
in
lea
sbb
repnz
fs
scas
lock
ret
sti
jg
call
outsl
xlat
pusha
repz
add
inc
push
ds
inc
cmpsl
je
popf
das
jp
dec
inc
mov
xor
push
ja
sub
loopne
nop
mov
sub
sub
dec
cwtl
hlt
xor
inc
stos
test
js
mov
insl
movsb
inc
je
in
ja
repnz
and
sub
sub
jg
or
xchg
lock
cs
fs
cli
jne
shrl
dec
mov
xchg
test
imul
aam
mov
sub
test
or
jl
mov
mov
push
inc
cmp
les
js
add
jnp
imulb
mov
fwait
lods
and
idivl
mov
ficoms
mov
jne
push
int3
push
inc
inc
push
cmpsl
das
sub
stos
pop
loope
pushf
mov
add
out
push
cmp
lahf
daa
push
or
jb
lds
imul
rep
mov
mov
cld
xorl
jl
push
mov
cmc
xchg
cmp
dec
out
or
mov
out
shrl
inc
scas
ds
scas
or
test
in
pop
out
cmp
aam
imul
daa
cmpsb
jl
cld
pop
pop
adcb
mov
inc
sub
mov
xor
mov
stc
jp
inc
mov
cld
mov
inc
cwtl
xor
imul
js
decl
sub
scas
mov
test
cmpsl
out
lds
sub
movsb
movsl
or
sbb
dec
push
cmpsb
ljmp
loopne
jl
jmp
sbb
dec
pop
enter
movsl
jo
mov
lock
int3
call
test
es
scas
shrb
into
int3
in
insl
ficoms
mov
gs
dec
mov
inc
jle
sbb
dec
push
lds
or
fwait
aaa
inc
aaa
adc
movntq
lahf
jmp
pop
aam
testb
add
push
xchg
test
push
test
mov
mov
or
rcrb
inc
test
cmc
adc
out
pop
jp
xor
sub
mov
add
inc
aaa
mov
pop
ss
jge
clc
fisttps
insl
sti
and
jnp
or
mov
jb
dec
jp
fimull
sbb
jnp
sbb
inc
mov
inc
pusha
ja
sbb
cmp
dec
pushf
adc
mov
daa
add
lods
mov
pop
enter
sub
fwait
mov
cmp
inc
mov
dec
repnz
loop
testl
jns
es
repz
aad
xchg
bound
mov
push
outsl
add
jno
sbb
scas
ja
mov
xor
mov
aaa
or
enter
enter
gs
xor
insb
fisubrs
fstp
inc
gs
out
mov
push
fldenv
xor
push
fmul
adc
jno
push
or
stos
dec
imul
xchg
fildll
xchg
fisubrs
mov
ja
cmpsb
push
adc
imul
insl
addl
cmp
out
dec
push
pop
ss
mov
and
push
les
cmp
cwtl
mov
inc
cmc
and
sub
and
jecxz
insl
and
sahf
and
xchg
mov
pop
movsb
testb
or
xchg
mov
pop
push
inc
xchg
shlb
mov
sbb
loopne
pop
mov
inc
test
jecxz
add
iret
icebp
cltd
aam
orl
mov
jmp
pop
pop
imul
jmp
cmpsl
cltd
shlb
push
adc
ret
mov
mov
insl
cwtl
sbb
loop
xor
repnz
fidivrs
ficompl
leave
jmp
sub
out
xchg
or
test
hlt
subl
out
pop
clc
dec
jno
push
add
int3
sub
pushf
call
sbb
lret
repz
enter
adc
into
mov
popf
dec
xor
sbb
cmpsl
mov
je
xchg
xchg
jns
sub
xor
sub
mov
and
push
jb
int
mov
xor
lahf
cs
jecxz
ds
xor
mov
icebp
adc
adc
xchg
inc
mov
mov
mov
mov
push
ja
mov
dec
jne
mov
adc
pop
movsl
fcmovnbe
pop
mov
lcall
push
or
inc
jmp
shll
addr16
movl
dec
sbbb
fiaddl
xchg
fwait
pop
je
neg
cmp
shrb
loopne
push
inc
sub
xchg
push
pushf
daa
fcompl
ljmp
hlt
and
std
imul
mov
loop
mov
and
add
cmp
jnp
sbb
sub
test
cmp
push
pusha
dec
sbb
fucomp
xor
mov
pop
mov
lock
add
jae
cmpsb
push
jl
xor
pop
out
les
test
jne
xchg
dec
loope
xchg
jne
jo
lock
aas
mov
imul
mov
push
icebp
xchg
pop
popf
packsswb
ds
lcall
or
mov
ljmp
mov
je
dec
dec
lea
repnz
xchg
jns
pop
cs
jg
push
arpl
icebp
adc
xchg
mov
les
adc
pushf
sbb
xor
cli
lahf
add
minps
call
jp
and
push
push
js
jecxz
imul
add
ss
pop
pusha
mov
and
push
divb
pop
out
jmp
rcll
sbb
xor
pushfw
inc
stos
nop
cs
fcmovu
jg
cmp
loopne
inc
sub
push
push
and
push
and
cld
sbb
jb
fsubr
stc
and
bound
pushf
mov
popf
xchg
or
push
sti
xor
mov
pop
cld
push
es
add
test
aaa
jne
imul
mov
cld
sbb
ret
test
push
jmp
mov
cltd
inc
jo
add
gs
jg
int
daa
jecxz
add
mov
imul
xchg
fcomip
mov
cmp
popf
in
jecxz
adc
xor
ss
xchg
dec
fidivl
jge
leave
inc
add
push
push
mov
and
out
cmpsb
xor
sahf
mov
xchg
mov
and
pusha
jmp
iret
or
sub
mov
fistps
fcmove
sahf
shll
stos
pop
imul
lcall
mov
mov
mov
scas
imul
mov
adc
and
cli
dec
loopne
jns
mov
cltd
jo
pop
xchg
adc
or
imul
cmpsl
repnz
std
xchg
push
and
cwtl
xor
scas
pop
ret
pop
loopne
or
mov
sbb
pushf
fcoml
push
cmp
mov
jg
repnz
jnp
sub
jg
mov
sti
std
sub
pushf
and
mov
xor
test
xlat
int
test
xor
into
push
popf
jne
test
xchg
mov
pop
xchg
push
testb
jae
clc
and
test
lea
jge
xor
leave
cwtl
mov
inc
add
sbb
int
adc
lods
leave
sbb
in
dec
int3
stc
andl
popf
sub
add
inc
in
repnz
xlat
mov
jg
shlw
in
std
pop
subl
cmp
shlb
xlat
adc
addr16
pusha
loopne
lds
cli
mov
out
bound
mov
sbb
cmp
aam
jp
jmp
lahf
in
iret
sbb
bound
orl
mov
cmpsb
enter
adc
jae
js
xchg
lods
mov
outsl
gs
mov
xchg
cmpsb
push
add
popa
adc
cmp
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
decl
xor
sahf
mov
or
adc
mov
mov
or
adc
mov
popf
mov
or
adc
inc
imul
or
adc
inc
imul
or
adc
pop
ror
fsubrl
cmpl
adc
test
arpl
jb
andb
scas
mov
shrl
out
and
add
sub
test
xor
mov
or
adc
mov
xorb
xor
movsl
rclb
lahf
jbe
test
xchg
push
push
dec
aas
sbbl
sbb
inc
mov
arpl
hlt
mov
push
scas
xor
cmp
xor
jmp
test
or
xchg
jb
push
js
sbb
sti
lret
test
dec
fcoms
add
daa
add
or
adc
inc
cmp
push
and
cmp
fcompl
adc
inc
arpl
fdivl
icebp
or
rcll
mov
popf
mov
sbb
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
push
imul
or
adc
jge
shlb
int3
adc
jmp
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
fcompl
pop
push
mov
leave
and
adc
inc
imul
outsl
and
adc
inc
imul
push
and
adc
fcompl
adc
fs
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
adc
inc
imul
or
jl
test
lea
bound
pop
imul
sbb
xchg
push
jne
es
jp
imul
cmp
repz
sub
rorl
pusha
fwait
add
sub
repnz
sahf
inc
insb
das
sbb
in
out
xchg
lods
out
and
sbbb
add
or
mov
mov
and
mov
push
add
jb
ret
in
cmp
mov
or
adc
das
jl
mov
fcomip
adc
lods
sub
sahf
popa
mov
mov
mov
pushf
gs
push
sbb
ja
or
pop
fcmovb
jae
jp
test
or
scas
sarl
data16
cmp
das
fwait
jo
cmovns
lock
xchg
xchg
jg
dec
das
jae
pop
jle
jbe
iret
ret
push
ss
jle
pop
stos
push
shrl
xor
sub
cwtl
mov
push
push
int3
sbb
int
push
adc
sbb
jb
push
cmp
inc
mov
pop
cmpsb
stos
les
ret
outsl
dec
loopne
adc
pop
xchg
les
iret
fimuls
pop
pop
fmull
cwtl
push
divl
test
lods
add
data16
mov
hlt
js
add
aas
or
jo
xchg
or
jle
cmpsb
adc
movsb
lcall
shll
dec
and
sahf
addr16
add
std
inc
outsl
lahf
pop
mov
stos
cmp
pop
add
inc
jnp
int
pop
xorb
clc
or
mov
test
or
jbe
rcr
inc
add
mov
adc
xchg
iret
and
lret
bound
repz
imul
xchg
mov
fmul
mov
push
movsb
popf
fistps
enter
push
push
sub
push
int3
sub
stos
xor
imulb
push
xor
jno
roll
and
push
add
test
push
pop
mov
mov
mov
add
nop
fwait
pop
ret
fcompl
sbb
mov
jmp
inc
or
leave
push
mov
adc
push
lods
leave
adc
pop
loopne
or
push
scas
pop
xor
cmp
jge
mov
add
push
jo
popf
xor
fisttps
andb
je
lahf
gs
cmp
movsb
sub
pop
out
mov
or
scas
add
pusha
fcomps
int3
test
cmpsb
push
imul
cs
lcall
outsl
fdiv
pop
cmovl
shlb
xchg
jecxz
inc
or
faddp
dec
pop
je
and
mov
clc
inc
jl
ss
rorl
xor
mov
mov
mov
inc
cwtl
repnz
push
dec
pop
sbb
shlb
mov
lcall
hlt
les
mov
ret
outsb
cmpsb
mov
lods
sbb
jnp
das
sbb
mov
jno
loope
mov
or
pop
xchg
pop
jecxz
leave
dec
je
jecxz
mov
mov
jae
je
push
xchg
inc
sub
mov
das
xchg
cmp
dec
xor
popf
leave
stos
adc
push
cmpsl
push
jle
pop
cmp
jno
xchg
aaa
in
iret
sbb
push
dec
adc
pop
sub
dec
in
shlb
stos
xchg
movsl
inc
xor
push
fcomps
adc
sub
scas
dec
and
adc
stos
shll
xchg
jb
inc
sbb
push
xor
inc
push
push
cltd
cmp
jg
sub
inc
jmp
lret
xchg
sbb
and
pop
jnp
js
dec
pop
sbb
xchg
xchg
es
sub
addr16
je
scas
push
sub
jmp
cmp
xor
mov
stos
add
jnp
sti
outsl
push
or
or
mov
daa
inc
lcall
push
aaa
fidivs
insb
cmp
test
push
jns
je
xchg
jae
test
dec
ja
ja
push
inc
repz
sbb
add
push
adcb
mov
or
inc
lods
sbb
sub
bound
inc
jae
fadds
nop
jns
fmuls
dec
xor
jle
notl
lcall
mov
test
add
mov
xchg
repnz
mov
dec
cmp
or
mov
sti
xor
jecxz
leave
icebp
roll
jnp
push
clc
jmp
testl
lahf
das
sub
sub
mov
sub
sbb
sbb
jnp
ss
pop
or
ret
les
iret
in
data16
fcmovnbe
jbe
arpl
int
in
xchg
dec
pushf
mov
jbe
mov
adc
mov
fcmovnu
push
cmc
and
cltd
lret
xchg
inc
and
cmp
les
sbb
out
in
mov
sbb
imul
add
les
fimuls
mov
lea
icebp
jb
out
inc
and
push
xlat
cmp
jmp
mov
pop
movsb
mov
cmpb
and
dec
inc
xor
dec
and
cmp
inc
loope
pop
sbb
les
ja
iret
add
icebp
jnp
jb
xor
pop
mov
xchg
mov
mov
jl
jg
or
add
xor
insb
inc
and
es
lock
mov
xchg
imul
cld
mov
inc
fstpt
dec
xor
test
mov
sti
sub
push
mov
mov
dec
or
mul
aam
ret
mov
icebp
ret
movsb
jns
push
adc
jecxz
xor
mov
xor
xor
push
add
pop
int
mov
mov
movsl
lret
dec
xor
push
cmp
push
sub
pop
adc
jg
push
inc
add
jmp
jp
jnp
sub
push
adc
movsl
loopne
iret
mov
jle
push
mov
mov
mov
pop
mov
cmp
or
mov
outsb
xchg
add
fmuls
or
shlb
inc
mov
add
mov
pop
or
jns
ret
xor
cli
repnz
mov
mov
int3
mov
loope
push
dec
add
lods
ret
jo
jecxz
inc
xchg
adc
inc
adc
add
imul
push
ss
sbb
fsubrs
pop
or
cli
testb
bound
sub
popf
out
fmull
jne
roll
dec
jbe
rorb
int3
cmc
lcall
mov
xchg
jo
jnp
pusha
mov
in
addr16
movsb
xor
das
inc
xlat
cltd
iret
dec
jmp
fnstsw
pop
pop
mov
insb
pusha
sbb
pop
add
in
pop
outsl
or
lea
adc
adc
or
pop
fsubs
sbbb
aaa
mov
shlb
xchg
xchg
sbb
inc
pushf
orl
sbb
or
pop
mov
aad
es
pop
inc
mov
enter
call
adc
jg
shrb
shr
cmp
icebp
sub
pop
cmpsb
xchg
jmp
mov
nop
leave
adcb
es
mov
inc
push
push
mov
mov
mov
pusha
sarl
inc
lock
in
jne
dec
mov
ficomps
shrl
xchg
mov
cmp
notl
ja
call
lods
jnp
icebp
scas
pop
test
add
jp
or
pop
ja
sub
and
movsb
mov
lock
subl
mov
in
fcompl
pushf
rcll
divb
imul
gs
jmp
mov
dec
lock
int
mov
xor
pop
repnz
fisttps
push
insl
aaa
in
cmpsb
pop
sub
in
sbb
mov
pusha
int
repnz
push
mov
adc
push
data16
dec
add
push
movsw
in
pop
shlb
and
pop
add
outsb
lods
lret
xor
mov
pop
orps
add
stos
mov
ss
or
test
pop
call
pop
adc
outsl
sub
test
fmulp
insb
xchg
movsl
sub
repz
cld
xor
mov
mov
inc
mov
sub
ret
push
je
ret
xor
mov
lods
cs
jecxz
fwait
mov
mov
pop
insl
push
ret
gs
jns
cmp
xchg
inc
mov
ss
lock
int
push
cmpsl
mov
aad
pop
sbb
addr16
sbb
movsl
cmp
and
shll
das
dec
arpl
push
stc
ret
cmp
pushf
fbld
loop
add
or
insb
stos
or
adc
jle
stos
push
in
mov
enter
push
push
fistpl
adc
xchg
addb
mov
das
or
into
das
divl
xor
popf
sbb
cwtl
insl
jne
sub
mov
call
jge
adc
add
in
add
cmpsl
and
mov
dec
xor
mov
xchg
cmp
mov
push
movsb
dec
mov
lock
pop
loop
mov
cli
stc
fldt
push
add
outsb
ds
mov
test
and
cmp
inc
ss
std
xorl
rolb
mov
adc
add
cmc
call
leave
add
out
rep
ja
mov
outsb
insl
cmp
pusha
xchg
mov
and
mov
and
out
pop
inc
jo
out
mov
mov
rcr
lods
sub
fsts
xchg
es
push
ss
loope
shl
stos
lcall
rcr
add
sub
call
scas
fcoml
jno
or
push
mov
mov
push
jb
adc
or
pop
cltd
push
mov
inc
lock
ficoml
xchg
loope
in
rcl
cltd
icebp
ret
out
ds
mov
ret
frstor
adc
xchg
mov
lds
xchg
addr16
mov
adc
ret
adc
or
and
fsubrs
or
adc
inc
mov
inc
push
mov
xor
fistpl
jne
or
in
aad
pushl
cwtl
cld
mov
mov
pop
insl
inc
xchg
or
cmp
push
mov
cwtl
subl
stos
bound
xor
pop
negl
mov
movsl
push
mov
int
roll
in
sbb
jmp
and
shrl
cmpsb
shl
sbb
xor
js
ljmp
xchg
inc
cltd
std
mov
ret
add
loope
or
add
or
shl
clc
lds
pop
mov
inc
pop
xor
jp
push
cltd
pop
dec
xchg
push
repnz
lods
jg
arpl
mov
and
or
mov
shlb
fcmovu
out
adc
lock
adc
add
aad
pop
fdivl
lds
out
fdivl
test
adc
cmpsl
fimull
rclb
and
into
ret
std
daa
ljmp
stos
std
cmp
pop
mov
pop
sbb
test
enter
sbb
mov
mov
mov
sbb
or
push
xchg
inc
mov
aad
pop
adc
movsb
xchg
gs
enter
pop
dec
jp
and
jge
or
sub
out
push
push
mov
fidivl
fadds
lret
fadds
stc
ror
loop
pop
ret
imul
or
adc
ret
in
dec
push
test
icebp
jle
clc
outsb
cs
cmp
jg
xchg
mov
cs
jbe
das
add
pop
lret
and
push
pop
gs
repnz
mov
jnp
push
sahf
push
sub
push
mov
lods
cmc
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
