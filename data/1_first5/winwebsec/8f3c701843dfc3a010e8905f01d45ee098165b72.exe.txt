mov
ret
call
int3
cs
andl
add
jl
cmp
aas
mov
sub
shlb
or
rolb
jge
mov
mov
push
imul
lock
xor
push
inc
lahf
fstpt
cwtl
cmp
pop
inc
fsts
scas
jmp
sarl
mov
rcrb
or
ss
xchg
and
jl
and
lahf
je
std
xchg
popf
pop
outsb
test
jo
xchg
mov
jo
in
dec
dec
xor
mov
sbb
sbb
into
mov
fdivr
pusha
ljmp
xchg
lea
aad
and
sub
iret
cmp
loope
ljmp
lcall
sarb
ds
test
aam
rclb
insb
repnz
iret
dec
add
lea
lods
hlt
adc
inc
movsl
mov
push
aad
stc
xor
fcoml
aas
cmpsb
sub
jae
subl
aad
or
lcall
mov
adc
mov
sti
ficoms
jecxz
push
insl
popa
insb
jge
addr16
stc
sub
push
or
cmpsb
cmp
movsl
push
jbe
movsb
cmpsb
sbb
out
or
roll
test
push
test
into
test
jp
and
lahf
and
aaa
push
fstpl
idivb
jae
pop
mov
dec
jmp
xchg
rolb
pusha
ret
push
aaa
roll
cmpsb
lock
rol
and
out
and
pusha
sti
push
push
mov
mov
rolb
inc
movl
in
dec
or
out
or
fs
movsl
clc
inc
jnp
or
xchg
daa
jbe
aas
hlt
insb
pop
fiaddl
sbb
lahf
ret
int
jmp
fstpt
mov
push
xchg
addr16
iret
mov
xchg
cmpsl
or
fiaddl
or
cmp
call
dec
mov
pop
mov
dec
pop
sub
jno
push
out
and
outsb
scas
xchg
ds
add
arpl
lea
jae
and
xchg
xorl
pushf
fs
out
es
cmp
cld
cld
leave
adc
inc
into
int3
push
in
push
in
jno
mov
test
pop
mov
aaa
jb
mov
and
dec
int3
add
cmp
lret
mov
pop
push
movsl
jno
jge
mov
add
out
int
xchg
mov
imull
sbb
mov
jmp
or
inc
push
ljmp
cmp
push
pop
pusha
cltd
xlat
cmp
cmp
mov
mov
pop
lret
mov
ret
mov
es
movsl
jb
js
lods
sbbl
adc
mov
push
pop
movsb
test
int
cmp
push
pop
cwtl
cld
test
scas
inc
imul
adc
mov
scas
cmp
in
ret
mov
push
mov
mov
fsubr
jns
dec
sub
add
lods
push
adc
add
leave
push
pop
mov
cltd
inc
sub
movsl
fdivrl
add
xchg
or
push
dec
orl
sbb
mov
call
lcall
push
pop
xor
mov
mov
data16
testl
push
out
imul
add
imul
cmp
cmp
push
lret
pop
arpl
rorl
mov
in
insb
ljmp
cmc
enter
call
lods
rcrl
cs
cli
sbb
dec
sti
icebp
add
loopne
lea
sub
sub
ficoml
cmp
and
outsl
in
cmc
or
shlb
rorb
sahf
fisubrs
sub
les
fcomi
push
andb
dec
imul
mov
fs
iret
iret
insl
popa
cmp
call
sub
cld
push
stc
icebp
sub
cmp
out
stc
adc
das
pop
icebp
pop
pushf
call
sbb
pop
out
push
sbb
mov
ss
cmpsl
xchg
pop
test
jbe
pop
jne
add
sub
sub
inc
mov
add
push
int3
repnz
xchg
jmp
aas
or
loope
add
popa
xor
hlt
rorl
mov
sub
ja
cmp
leave
cmp
pop
push
sbb
stc
movsl
lock
mov
es
iret
shl
jns
hlt
pop
in
jae
jecxz
jmp
push
lahf
xchg
jne
push
mov
sub
pop
cmp
sub
xor
ret
pop
cltd
adc
repnz
mov
cmp
movsl
imul
xchg
into
fs
jle
sub
aam
lret
mov
push
cmp
lahf
fwait
imull
lret
or
sbb
xchg
xor
pushf
mov
cmp
int
int3
mov
sub
adc
jne
mov
adc
add
dec
repz
ffreep
sbb
push
mov
add
aad
or
push
dec
insl
repnz
aaa
js
push
leave
popa
xor
test
or
inc
push
pop
mov
popf
add
sbb
and
dec
push
pop
and
inc
inc
subl
rol
sbb
push
cltd
clc
push
jle
insl
addl
xor
cmc
out
adc
fsubrl
add
imul
adc
cmp
fcomi
inc
fxch
mov
jno
cmpl
and
jns
iret
adc
aas
fucomp
scas
add
sub
adc
mov
mov
sti
xor
notb
fnstenv
mov
out
icebp
int
mov
xchg
je
push
xor
pusha
aas
adc
jle
adc
xchg
je
adc
mov
out
cmpb
fdivrs
sub
xchg
cmp
xor
in
mov
scas
fbstp
add
jecxz
mov
gs
je
cmp
mov
inc
fidivl
mov
dec
fisttps
adc
cmp
push
inc
lds
ds
pop
pop
and
sub
lcall
lcall
imul
adc
hlt
xlat
xchg
dec
addr16
or
inc
jecxz
xor
cmpsb
jb
lcall
push
arpl
xor
les
push
adc
sahf
xor
nop
push
mov
test
adc
cmp
fimull
or
sti
add
insl
out
sbb
and
adc
jnp
lock
into
push
sbb
add
push
insl
or
mov
daa
cwtl
add
add
cmpsl
loop
inc
add
and
out
mov
dec
les
incb
xor
sub
in
mov
ja
push
sbb
outsb
les
mov
jno
enter
jp
mov
iret
neg
aam
je
lcall
mov
test
mov
mov
sbbb
insl
pop
loope
jne
mov
and
inc
mov
pop
scas
inc
repnz
and
aad
lcall
into
das
adc
or
in
repz
ja
dec
jle
jne
xlat
mov
cmp
fsub
aam
je
inc
faddl
dec
add
xor
mov
test
dec
sub
add
ror
sub
xchg
int3
repnz
add
sub
and
stos
or
nop
test
pushl
outsl
sub
flds
lds
jne
aas
pop
push
dec
xor
mov
outsb
mov
jecxz
push
aam
pop
test
add
mov
cltd
jnp
fstpt
rorb
add
stos
dec
sbb
cltd
adc
xchg
xchg
push
imul
sub
adc
cmpb
arpl
mul
pop
mov
adcl
mov
bnd
dec
ret
and
jno
and
inc
pop
or
dec
cltd
ret
push
lahf
jle
cli
pop
test
jo
aas
mov
stos
inc
mov
push
daa
fs
movsb
mov
ljmp
sahf
adc
flds
mov
clc
or
inc
aad
adc
fcomps
sbb
stc
fs
cs
cmp
push
das
stc
sub
testb
jne
popa
jb
popf
pop
ds
outsl
add
outsb
sbb
jle
ret
cli
xchg
push
mov
mov
mov
add
dec
push
adc
aas
icebp
ja
js
inc
test
loope
test
sbb
and
pop
out
add
xchg
dec
shl
jbe
pushf
mov
or
bound
sbb
shr
xor
xlat
xchg
ret
and
adc
cmpsb
jne
xor
pop
jne
jp
cs
xor
fsubs
sub
lret
hlt
rcll
std
js
cmp
adc
jns
or
enter
outsl
fs
pop
add
pop
mov
data16
mov
xchg
xchg
rolb
mov
cmp
andb
in
mov
push
push
repz
pusha
iret
pushf
or
shl
push
jae
movsb
mov
sbb
mov
xchg
imul
test
adc
loopne
jle
push
pop
pop
inc
add
jecxz
rcll
iret
lcall
cmc
sub
jne
inc
mov
fisttpl
nop
scas
lods
pop
shl
or
mov
shrb
mov
mov
pop
jbe
pusha
in
in
jmp
adc
movsl
jbe
jbe
and
jo
jmp
mov
pop
xor
sti
adc
in
jle
and
pop
pop
and
push
insb
jp
sub
xchg
mov
mov
dec
sbb
mov
dec
push
push
cld
inc
push
cmp
nop
dec
pop
loopne
iret
mov
xchg
adc
cmp
xor
je
cmpsl
xchg
xor
pushf
mov
test
lods
adc
push
or
sub
ja
push
add
cld
int
xor
pop
sub
insl
aad
adc
lret
outsl
repz
fnstcw
sub
inc
cmp
sub
sbb
movsb
add
shll
cmp
inc
xchg
add
icebp
out
sahf
inc
les
ret
pop
inc
add
pop
push
imul
iret
out
rolb
inc
push
call
outsl
sbb
fidivrs
pop
sahf
sub
out
test
vcvtss2sd
stos
jge
jge
push
cmp
mov
inc
cmp
cmp
or
xchg
xor
movsl
das
xchg
or
fcoml
int3
push
aas
popa
jb
mov
or
mov
jb
out
or
lret
das
or
pop
adc
test
dec
loop
shlb
test
jo
dec
push
xlat
lahf
lods
cmc
mov
hlt
push
mov
aas
pusha
sbbb
dec
aaa
inc
mov
lods
ret
fisubrl
xchg
mov
xor
pushf
push
testl
into
xlat
adc
ljmp
cmc
mov
push
sub
pop
cs
push
add
mov
int3
dec
icebp
lcall
inc
mov
pusha
sub
dec
mov
out
mov
jb
in
mov
shrl
jecxz
mov
pop
pop
jnp
hlt
sahf
test
outsl
fwait
xor
pusha
mov
fucom
push
inc
sbb
add
push
and
scas
call
inc
stc
inc
jge
movsb
imul
push
dec
push
lock
cmp
xor
lock
jo
lret
aam
jno
mov
popf
dec
ss
in
and
sti
mov
xor
xchg
dec
sub
jb
push
repz
shlb
adc
cmp
js
shll
adc
int3
xchg
sbb
cld
ret
and
add
fidivl
jle
mov
dec
xchg
mov
jbe
pop
pusha
inc
jmp
mov
mov
cmpsb
ljmp
push
pop
lods
or
push
andps
dec
inc
push
cltd
loope
gs
xor
mov
nop
fs
or
divps
xor
jb
sbb
xlat
jmp
or
stos
inc
fisubrs
cmp
lahf
insl
jns
xlat
xor
xchg
xchg
and
out
sbbb
add
mov
daa
mov
dec
mov
dec
fidivs
add
inc
loop
jbe
adcl
test
pushf
pop
aaa
clc
cld
pop
add
jmp
dec
outsl
popf
jecxz
fdivrl
adc
push
xchg
mov
mov
mov
cwtl
inc
add
pop
cmpl
mov
or
or
push
push
jle
pop
cmpsl
call
push
add
in
loopne
jge
rol
pop
mov
ja
adc
aaa
lret
test
mov
cmp
inc
xor
stc
xor
cmp
mov
mov
mov
mov
xchg
push
cmp
pop
int
fcoml
mov
mov
loope
loope
dec
add
orl
js
lret
lret
out
mov
xchg
lahf
std
mov
imul
or
repz
es
cmpb
les
repz
mov
xor
mov
cmp
mov
xor
and
loopne
out
dec
add
jge
mov
pop
lods
pop
andb
mov
pop
repnz
pop
xlat
push
mov
sti
ds
ss
ftst
cmpsb
out
push
jnp
push
push
leave
mov
jle
and
rolb
shll
mov
push
push
enter
jmp
aas
jbe
jns
ret
inc
cmc
or
and
cli
or
inc
pop
rol
test
psllq
fildl
fisubl
rolb
int
sbb
outsl
xor
ret
or
jge
mov
int3
pop
inc
mov
test
int
call
jnp
cmpsb
and
inc
xor
sahf
adc
ja
or
jge
xchg
inc
pop
jb
rcll
mov
fs
popf
leave
xor
negl
adc
ret
mov
xchg
sbb
fsubrs
sub
xchg
lods
out
xchg
popf
inc
sti
mov
out
repnz
cmp
mov
xchg
repz
dec
pop
clc
lds
cmp
loopne
nop
or
xlat
std
gs
into
rcrl
push
cli
in
inc
sub
mov
mov
dec
lret
or
lods
and
repz
or
add
sbb
jbe
inc
pushf
jge
jne
cmpsb
rorb
lods
pop
add
jmp
push
cld
je
pop
int3
ficoml
cwtl
inc
hlt
jle
and
inc
sbb
decb
xchg
stos
movsb
in
dec
enter
jmp
or
pop
inc
xlat
sbb
adc
adc
jbe
icebp
outsb
cmpsl
insb
adc
push
shr
out
adc
stos
repnz
jno,pt
movzbl
in
pop
iret
xor
or
mov
dec
xor
cmp
bound
sub
xchg
stos
sub
fst
scas
mov
jno
sahf
repnz
cmpsl
stos
stc
rcl
mov
hlt
int3
in
imul
xchg
nop/reserved
adc
jnp
push
data16
mov
call
push
aaa
inc
outsb
icebp
dec
sahf
sub
mov
add
cmp
inc
repnz
jno
sti
dec
roll
movsb
dec
sbb
lds
daa
pop
pusha
and
pop
insl
leave
inc
jp
push
push
xor
adc
mov
pop
xor
repnz
jg
or
imul
mov
inc
leave
mov
or
jae
jb
mov
dec
inc
movsl
push
fsubrl
xor
aad
nop
sub
add
and
sti
pop
outsl
lock
in
mov
cli
cld
dec
pop
xor
xchg
dec
add
mov
xchg
les
inc
mov
jb
push
xor
leave
jle
jmp
mov
fldenv
aaa
inc
push
push
jle
sub
rcrb
cmp
push
dec
aad
mov
sarl
jp
and
fdivrs
in
fnstcw
outsl
daa
lea
or
jo
out
out
mov
sbb
adc
inc
or
mov
shlb
stos
mov
sbb
xchg
pop
add
dec
in
push
push
pop
call
lods
mov
jecxz
jmp
mov
ljmp
loope
gs
pop
fxch
into
test
ds
xor
pop
inc
aad
adc
mov
ss
add
in
lret
rclb
lea
repz
lahf
pop
je
xchg
mov
fmulp
into
mov
and
sti
push
sub
clc
insl
jle
aas
fcomps
push
inc
xor
pop
leave
mov
loopne
mov
outsb
add
rclb
or
adc
in
xor
outsl
insl
fbld
xchg
outsl
lcall
lahf
pop
in
sahf
scas
add
adc
xchg
inc
clc
mov
adc
dec
and
mov
pop
cli
and
fwait
xchg
test
std
ret
daa
cmp
roll
sbb
test
icebp
lret
aaa
mov
insl
mov
popa
addb
loop
mov
ljmp
popf
adc
adcb
ret
mov
shrb
cs
adc
dec
mov
cwtl
or
enter
mov
pushf
jne
shrb
mov
sub
mov
in
dec
mov
sub
loopne
lods
loope
sar
lret
clc
xchg
jo
sahf
sbb
adcb
push
repz
arpl
cli
cmc
fsubp
out
cmp
pop
pop
mov
sub
pop
iret
mov
cltd
or
push
sub
mov
inc
fisubrs
les
add
push
fdivrl
lret
mov
xchg
in
push
fmulp
fcoml
loope
adc
and
and
xchg
inc
mov
mulb
sbb
sbb
out
xor
mov
push
rcl
in
cmpsl
ret
sbb
cld
push
sbb
lahf
xor
adc
push
mov
xchg
sub
jecxz
xlat
mov
sub
jne
into
lret
popa
iret
insl
subl
pop
mov
sub
out
ficompl
mov
jge
lcall
ret
adc
mov
and
daa
stos
push
or
sahf
and
stc
leave
adc
ds
xchg
les
out
data16
mov
cmp
mov
ljmp
call
lcall
ss
push
adc
mov
ss
ds
sub
jae
movsb
pop
mov
mov
xchg
fadds
jmp
or
push
cmpsl
mov
xor
mov
mov
stc
xchg
pop
mov
xchg
jg
push
xor
je
mov
mov
ds
aam
cmp
shlb
add
mov
fs
mov
mov
bound
ret
aam
lds
dec
jg
xor
ss
in
xchg
cs
jl
adc
mov
into
stos
mov
fs
ficoml
cmp
cld
subl
mov
or
lret
push
push
test
inc
outsl
jge
jmp
and
fldl
xlat
cld
decb
sti
xor
xlat
clc
ss
xchg
mov
mov
add
mov
add
sub
scas
popf
and
mov
push
imul
fisttps
push
jbe
mov
enter
inc
pop
dec
add
cld
pop
mov
mov
addl
out
xchg
stos
dec
adc
cmp
jno
aam
scas
push
pop
push
js
dec
adc
adc
in
add
outsb
push
jo
mov
cmp
mov
out
adc
sub
mov
and
dec
xchg
xchg
xor
adc
xor
or
or
sbb
mov
cli
call
push
xchg
cmp
lret
orl
jp
enter
cmp
imul
cmp
sub
add
xor
xchg
shl
lods
inc
mov
cmp
sub
sahf
imul
in
cmp
mov
cwtl
hlt
ret
jnp
sarb
mov
cltd
fwait
mov
mov
pop
inc
add
xlat
rcll
mov
jle
mov
mov
int
lcall
addb
rol
pop
push
mov
das
lods
roll
mov
jg
cmpsl
push
cmp
cmp
jnp
shr
out
ds
xchg
jae
dec
imul
inc
mov
leave
popa
out
stos
mov
aad
fwait
or
nop
inc
sbb
sbb
int3
add
loop
aam
or
cmpsl
or
sar
bound
mov
mov
je
xchg
jbe
aaa
lods
ja
or
sahf
and
orb
sbb
xor
outsl
cltd
mov
das
or
movswl
pushf
mov
ljmp
cmp
sahf
cmp
jnp
jge
mov
pop
xchg
pop
dec
imul
aaa
mov
ljmp
out
in
test
cmpsl
fs
mov
dec
or
cmc
jp
lahf
mov
xchg
cmp
test
push
cmp
jo
jmp
xchg
daa
pop
xchg
rolb
mov
adc
jae
pop
add
dec
add
push
or
mov
stos
jge
loopne
cmp
mov
adc
cmp
cmp
aaa
xor
lods
cwtl
dec
or
movsl
inc
ds
shufps
dec
call
lods
pop
mov
sbb
inc
hlt
adc
popa
cld
jae
fidivs
addr16
mov
xor
adc
lret
sub
enter
mov
cmp
aas
addr16
in
outsl
arpl
xchg
add
cmpsb
push
dec
sub
adc
push
dec
sbb
sahf
testb
cmpl
or
or
mov
adc
push
loop
imul
sarb
repnz
adc
lret
in
ss
mov
inc
add
scas
push
xchg
sbb
repz
cmpsb
aad
sti
sub
fdiv
pop
mov
fcmovnb
inc
cltd
add
and
ss
jge
ffree
xor
fs
pop
call
loopne
lock
cli
inc
out
mov
das
add
insl
pop
mov
add
jle
sbb
dec
iret
scas
mov
push
in
adc
es
loope
and
and
sbb
clc
mov
fs
lcall
xlat
sbb
outsl
xor
jmp
jp
mov
jbe
or
or
int
cmp
adc
shll
or
leave
sub
idivl
push
mov
out
xchg
test
mov
xchg
or
ljmp
lods
sbb
faddl
xor
sbb
adc
lock
les
ret
jle
stos
cmp
push
frstor
gs
jmp
cmp
add
pop
mov
cmp
cld
aad
and
int3
lahf
repz
jne
mov
push
push
jg
fwait
jbe
add
add
cmp
filds
jne
loopne
jecxz
ret
into
dec
jl
ffreep
nop
rcr
outsb
arpl
xchg
les
add
loopne
popf
dec
mov
xchg
dec
int
add
mov
enter
add
test
dec
aaa
inc
xor
call
mov
test
mov
ror
mov
cmp
adc
cmp
lods
jmp
and
addr16
mov
insl
adc
xchg
jl
adc
les
jo
mov
lahf
ret
rorl
push
mov
adcb
pushf
outsl
ljmp
shlb
push
xor
inc
push
rcr
out
and
arpl
sub
fucomp
sbb
out
sub
in
imul
lods
insl
into
sbb
jg
jne
mov
les
jge
sub
das
outsl
stc
push
sub
and
mov
outsb
fidivl
divb
icebp
pop
shll
adc
lods
jmp
xor
push
mov
lds
inc
js
jnp
stos
push
cmp
mov
leave
in
and
mov
sub
lret
out
jecxz
push
leave
sub
cmp
dec
inc
or
inc
mov
sub
ror
mov
aam
stos
mov
filds
xchg
in
and
bound
cmp
push
jnp
aaa
mov
mov
jg
jmp
out
in
xchg
mov
sti
or
cmp
in
sbbl
loop
icebp
mov
push
dec
push
mov
call
clc
jno
mov
add
or
mov
inc
ja
mov
cmp
mov
sbb
jecxz
push
xchg
lock
and
add
inc
sbb
cmp
cmp
xchg
jmp
stos
aaa
test
test
dec
cmp
jno
jl
xchg
push
aam
xor
shll
lock
add
cmpsb
inc
mov
and
ret
inc
jns
cmp
and
mov
mov
mov
mov
mov
or
leave
xorl
jnp
sbb
fbld
mov
loope
xchg
or
clc
in
idivb
jge
xlat
push
mov
cmp
jg
push
fbstp
je
inc
stos
inc
js
outsb
pushf
ja
outsl
clc
mov
mov
push
ss
int3
andl
cld
fsubs
push
jo
int3
xor
adc
inc
stc
dec
sahf
xchg
test
cmpsl
xor
out
incb
xor
in
or
xchg
sbb
fisubrs
pop
push
lods
pop
aam
ja
xchg
jp
cmc
jb
out
xchg
js
xor
and
cwtl
mov
inc
jg
push
ss
pop
aas
je
jg
cmpsb
mov
bound
and
mov
jl
jbe
mov
insl
push
int3
aad
jb
jp
xchg
inc
nop
jnp
sbb
push
push
sub
mov
xchg
hlt
push
popf
bound
popa
pop
mov
cli
push
addr16
pop
mov
and
test
out
sbb
pop
popf
stos
mov
sub
lcall
cmpl
adc
mov
aad
call
pop
lods
sbb
jo
hlt
mov
push
in
imul
loopne
cmp
test
or
sbb
cld
lds
or
cmp
push
js
scas
aad
pop
sbb
das
mov
insb
xchg
ljmp
cmp
pop
fimull
js
daa
jp
add
inc
cmp
repnz
scas
fildl
mov
mov
mov
mov
sub
sub
nop
subb
clc
cmc
push
mov
dec
mov
rcrb
clc
xchg
aam
pop
out
stc
mov
adc
push
scas
imul
cmp
daa
ds
xor
out
out
dec
jo
adc
xchg
xchg
repnz
mov
out
in
nop
or
jae
fsubs
insl
clc
push
add
xchg
enter
mov
pushf
loopne
mov
xchg
and
xlat
and
cmp
test
inc
shlb
std
into
into
xor
lret
pusha
mov
pop
dec
je
das
or
add
and
cmc
pusha
decb
jae
inc
aaa
aad
cmpsb
call
mov
cmp
add
in
push
subl
jo
or
decl
mov
cli
sbbb
jnp
sti
xor
sub
sbb
hlt
inc
mov
mov
in
jmp
lods
adc
cmp
repz
adc
push
arpl
outsl
lret
mov
ficompl
add
xlat
arpl
imul
pop
adc
test
mov
jae
cmpsb
fwait
add
mov
dec
arpl
mov
cmp
ror
sub
repnz
addr16
dec
dec
adc
aad
adc
test
out
es
jl
add
lahf
mov
fldenv
je
out
rcll
lret
adc
fucomp
mov
cmpsb
push
test
insl
inc
js
dec
jnp
and
jmp
inc
nop
jae
mov
fldt
jmp
mov
loop
mov
das
lret
xchg
sti
iret
pop
ljmp
lret
cmp
dec
push
sbb
imul
ds
pusha
dec
lret
adc
ss
out
xor
insb
and
movsl
sub
xchg
mov
dec
fldt
ret
inc
mov
cmp
or
cltd
imul
jno
fidivl
inc
lea
bound
ljmp
sbb
add
xchg
in
cmp
dec
fcoml
imull
adc
xor
leave
xchg
dec
inc
jg
xor
aam
popw
sbb
fs
mov
pop
mov
mov
enter
repz
or
out
loope
push
pop
or
fwait
cwtl
add
in
mov
pop
push
mov
jl
in
mov
adc
push
sti
or
adcl
stos
xchg
pop
sahf
rorl
adc
mov
add
pop
subb
and
out
mov
idivl
outsl
pop
jae
lahf
pop
mov
push
mov
mov
cmpsb
mov
popf
inc
inc
icebp
das
bnd
into
fsubs
mov
jg
and
negb
lds
add
stc
sub
xor
clc
test
out
loope
add
push
movsl
xor
pop
lock
jae
pop
mov
jns
cltd
jo
adc
push
rolb
fwait
cmp
or
pop
ja
nop
scas
pandn
dec
dec
or
std
ss
dec
scas
ret
adc
lea
add
push
mov
jne
pop
mov
or
addl
mov
add
ljmp
out
rorl
ja
mov
hlt
mov
xchg
sbb
shrl
js
jo
xchg
dec
cmp
jmp
mov
mov
nop
pop
cmp
test
fistps
and
das
adc
mov
sub
je
stos
mov
mov
lahf
add
mov
push
mov
xor
cmpsl
aad
arpl
xor
incb
enter
test
xor
loop
stos
mov
jo
xor
daa
loope
push
and
inc
push
lahf
lret
push
xchg
outsb
call
inc
inc
or
mov
mov
or
sub
pop
ja
repz
aas
aas
data16
pop
iret
mov
dec
fisubrs
repnz
sub
dec
mov
add
cwtl
je
push
sbb
adc
jb
shlb
jb
inc
notb
inc
sub
inc
inc
fldl2e
pusha
cmc
xchg
into
in
push
test
add
or
cmp
lret
pop
push
ds
movsb
pop
clc
int3
jb
fistl
stos
sub
mov
cltd
jmp
scas
adc
push
fnstenv
test
sub
sti
mov
xchg
addr16
and
and
es
xor
pop
mov
mov
jecxz
pop
rorb
adc
gs
mov
sbb
mov
sbb
adc
mov
jbe
lret
push
inc
daa
jns
fwait
pop
pusha
pop
sbb
leave
enter
and
ss
jne
xchg
in
dec
xchg
and
or
repnz
clc
sub
xorl
sub
sbb
xor
ss
adc
pop
rclb
stos
mov
fwait
addb
lahf
stos
push
pop
out
into
outsb
sub
lea
xlat
dec
cmp
add
je
loope
outsb
dec
or
lock
test
sti
lea
cmp
inc
lds
cwtl
sub
mov
pop
add
push
filds
insb
in
dec
mov
xor
pop
pop
into
loopne
push
fnsave
ja
adc
inc
sbb
mov
xor
daa
hlt
int
in
pop
and
es
cmp
xchg
lock
bound
rcll
ja
cmc
dec
mov
pusha
std
cmp
das
sub
mov
test
jnp
in
pop
fldcw
and
and
pmuludq
jmp
add
mov
xor
inc
lods
mov
add
shrl
push
nop
sahf
mov
jne
dec
jmp
sub
mov
out
stc
je
sub
outsb
adc
pop
ss
lock
adc
push
mov
movd
mov
push
data16
pop
cltd
in
bound
icebp
push
rcrl
mov
xor
mov
icebp
mov
sub
push
loope
add
mov
fs
imul
sahf
out
cmp
inc
std
stos
ret
mov
sub
push
sub
iret
push
cmp
dec
imulb
icebp
add
cmpsl
rcrb
mov
xchg
movsl
jb
push
std
arpl
push
fwait
add
jo
movsb
push
lahf
inc
jl
and
xor
inc
push
aad
andb
push
dec
sbb
mov
cmp
rcll
cli
mov
daa
xchg
stos
shlb
sbb
ficoml
incl
or
pop
sub
and
sub
xchg
out
xchg
imul
test
je
imul
mov
and
cmpsl
sub
inc
jo
xor
dec
or
pop
mov
xor
fldcw
cmp
imul
decb
jl
cmp
sbb
cmpsl
or
int3
jl
pushf
aaa
jge
stos
mov
xlat
fists
in
inc
lret
iret
xor
lods
out
mov
cmp
popf
arpl
fistps
push
clc
fwait
push
cmpl
adc
xor
or
mov
and
into
test
cld
sub
stc
add
mov
in
lret
jp
sub
adc
and
leave
lcall
pop
fs
sub
in
push
lea
jns
out
push
adc
push
mov
sub
or
sbb
xchg
out
cmp
stos
push
cmp
adc
and
clc
sysret
jae
pop
inc
inc
fdivl
jp
js
mov
xchg
inc
mov
setns
inc
jo
aam
int3
sub
std
add
insl
mov
das
pushf
jne
fstps
rorl
jecxz
adc
inc
mov
int3
mov
lods
movsl
popw
ss
psllq
inc
arpl
mov
enter
aaa
lahf
push
jne
jbe
fs
jne
in
iret
add
inc
inc
mov
aad
jle
clc
inc
sub
sti
sub
loope
sub
mov
xlat
sahf
inc
push
mov
pop
ljmp
xchg
cld
stos
mov
out
and
lock
sar
xchg
pop
mov
and
scas
sahf
out
subl
popf
cli
sub
sub
je
sahf
popa
xchg
add
sbb
lret
xchg
sahf
mov
popf
inc
nop
loope
and
push
stc
pop
outsl
dec
pop
xor
sarb
arpl
dec
dec
jb
lea
fdivl
sti
ja
enter
and
mov
mov
imul
mov
test
jecxz
jge
int3
stos
loopne
out
add
aad
scas
test
and
pushf
sti
xchg
inc
cmp
xor
or
sbb
mov
sbb
push
xor
loop
je
push
and
clc
add
ljmp
test
outsl
pop
loop
lret
leave
out
stos
jg
pop
ss
xor
rorb
or
test
cmp
lds
inc
cmp
outsb
out
out
je
xchg
jb
mov
dec
push
jg
lock
data16
aaa
das
sarb
jl
inc
add
push
rcrb
xchg
jp
and
mov
fsubrl
das
lret
cmpsl
inc
mov
inc
sti
jmp
mov
and
sub
mov
leave
stos
sub
pop
or
movsb
test
push
inc
rcll
mov
and
mov
fsubrl
inc
lods
out
test
arpl
ss
sbb
out
and
push
shll
mov
push
cmp
dec
cmpb
push
cmp
add
in
icebp
cli
ret
insb
clc
out
pop
push
sub
xchg
or
pop
push
into
pusha
mov
rep
out
stos
idivl
insl
stos
push
movlps
movsl
aas
cwtl
test
out
or
outsb
dec
aaa
xchg
adc
not
movsb
cmp
jno
or
cmp
push
ja
ret
fdiv
popa
add
aas
mov
sub
outsl
add
or
cmpsb
in
std
mov
xchg
cld
lods
out
mov
pop
out
aam
repnz
lods
xchg
in
lods
enter
dec
movsb
daa
cmp
or
mov
out
outsl
movsl
mov
fistpl
ret
ds
leave
cmp
lret
lods
push
mov
int
pop
fs
jne
lea
shll
fildll
test
jge
and
mov
iret
push
cmp
pop
ljmp
lret
ret
and
and
sbb
jae
pop
arpl
aaa
pop
or
mov
mov
cld
add
in
mov
dec
xor
aaa
cwtl
jbe
push
icebp
lea
xor
inc
cmp
inc
add
push
push
pusha
mov
ficoml
dec
adc
jg
shrl
popf
jb
mov
jl
pop
movsb
sbb
negl
push
out
inc
pop
test
sbb
jmp
mov
ret
rep
jmp
sub
loop
loope
cmpsb
xchg
xlat
xchg
rcrb
mul
dec
mov
std
mov
mov
fdivrp
jl
fnstcw
ret
stc
sbb
aaa
dec
sbb
xchg
sbb
cld
jl
xchg
sbbb
nop
dec
outsl
out
mov
movsl
lcall
lock
push
mov
loop
pop
sub
stos
inc
lret
loopne
push
and
sbb
xor
pop
xlat
jns
or
sub
shr
into
sbb
xchg
cld
cmp
mov
add
jmp
or
adc
mov
out
fnstsw
inc
or
xor
call
ja
movb
adc
sub
sti
xchg
xchg
adc
aad
push
sahf
mov
daa
andb
aaa
sub
jecxz
xchg
ss
and
push
and
xor
fucomp
in
dec
in
arpl
mov
and
in
or
aaa
jns
mov
inc
xchg
cmc
pushf
sub
scas
cmpsb
icebp
mov
mov
add
std
scas
mov
mov
ss
out
pop
cmc
arpl
dec
push
inc
cs
push
xchg
int3
or
pusha
cmc
mov
outsl
test
cmc
inc
jns
es
push
cmpsb
cmp
orb
movsl
insl
dec
cmp
sbb
or
iret
mov
out
rorl
dec
cmp
sub
jne
sbbl
jle
lods
dec
divb
inc
in
aas
xchg
pop
int3
cmp
call
mov
pop
xchg
insb
push
push
mov
mov
adc
sbb
and
add
cwtl
popa
movsb
push
hlt
js,pt
mov
or
jno
in
repnz
dec
mov
enter
or
lods
in
ds
data16
stos
in
push
andb
lret
xchg
mov
mov
loope
push
dec
push
xchg
jmp
shll
out
lock
mov
mov
cwtl
movsl
fldenv
mov
dec
jl
xchg
lcall
mov
push
iret
add
movsl
fildll
ret
out
mov
dec
dec
jg
mov
loop
and
add
lahf
nop
inc
out
mov
mov
jbe
xchg
cmp
push
mov
push
inc
gs
xorl
fisubrs
push
push
mov
pop
cmp
pop
cmp
mov
les
cmp
jbe
out
cmp
add
popa
fisubrs
cld
shll
cmp
sub
xchg
ficoms
or
int3
dec
das
cwtl
lock
icebp
int
movaps
or
int
xchg
push
les
lcall
mov
lea
js
lcall
sahf
jae
mov
dec
mov
add
insl
xor
rolb
lock
leave
sub
xchg
out
xor
xor
js
sub
and
mov
jb
pop
in
pusha
sbb
ret
movhps
je
fs
or
sbb
push
mov
in
jmp
mov
in
movsb
sbb
adc
or
push
gs
sbb
push
jns
test
xchg
cli
mov
xor
jp
je
repnz
xchg
dec
lahf
push
aam
pop
xchg
adc
push
out
jmp
jo
insl
lock
movl
fcmovnu
sub
pop
scas
cmp
les
cmc
insl
push
xchg
mov
jp
ror
and
sbb
dec
test
popf
or
xor
cwtl
push
add
es
ljmp
aad
ret
cli
add
push
jbe
sbb
js
push
test
pop
das
fs
ds
test
sbb
cmp
jp
rcr
fdivrs
sub
aaa
das
icebp
ret
sub
bnd
sbb
lea
inc
jno
jb
sti
sbb
js
aaa
xor
stos
sub
in
ja
inc
ja
sarb
or
sbb
xor
or
aas
call
ud2
push
frstor
cmpsl
lock
dec
hlt
add
in
sahf
sub
pushl
test
aam
jg
pushf
inc
lods
dec
sbb
mov
pop
jg
aaa
jbe
stos
adc
add
pop
jns
push
cli
xor
push
inc
mov
push
jmp
xor
xchg
xadd
cs
movsl
int
xlat
jp
int
js
sbb
xor
xor
or
sub
or
pop
xor
test
adc
rorb
test
jl
ljmp
mov
rorb
jmp
ljmp
mov
in
sbb
mov
push
daa
sahf
pop
inc
cs
sbb
icebp
in
out
dec
adc
inc
mov
lret
or
scas
push
add
mov
sub
and
dec
lock
and
cmpsb
outsl
jnp
push
jge
mov
enter
pop
pop
mov
jecxz
fiadds
lcall
xchg
xor
sbb
popl
jb
and
daa
repz
popa
mov
aad
inc
xchg
adc
cltd
rcl
mov
insl
sbb
call
or
enter
iret
ljmp
sbb
repnz
cmpl
xchg
mov
ja
scas
mov
push
jo
in
mov
ret
mov
cmpb
xor
mov
adc
push
sbb
mov
int
push
pop
insl
mov
push
mov
loopne
push
sbbl
jo
sbb
dec
dec
sti
cmc
pop
pop
inc
test
rolb
cmp
sub
ja
inc
inc
cmp
cmpsb
insb
cmp
loop
mov
ret
mov
push
or
mov
push
scas
rcrb
iret
cld
pushf
test
outsb
jae
xor
and
add
push
or
fcompl
mov
mov
or
and
int3
pop
insb
loope
add
or
out
enter
pop
inc
daa
jns
pushf
inc
inc
scas
add
out
jl
pop
inc
aas
lret
je
outsl
xchg
rclb
dec
add
mov
imul
cmp
js
xchg
rorl
mov
sub
jo
lret
xchg
mov
mov
aad
jno
mov
sbb
inc
xor
mov
push
imul
in
adc
ljmp
cmp
jg
cmp
lods
aaa
mov
mov
js
sub
and
inc
sub
outsb
xchg
jb
out
cmp
mov
xor
lds
ja
mov
sbb
int3
icebp
sti
add
dec
repnz
add
jl
insb
pop
xor
hlt
jno
arpl
sub
leave
mov
add
shll
push
rclb
pusha
mov
stos
aad
push
or
mov
outsl
in
ja
push
iret
jnp
mov
push
jl
cmp
inc
insb
sahf
icebp
push
push
adc
test
int
fmull
jne
lret
xor
es
hlt
adc
jmp
mov
ds
iret
push
jno
adc
repnz
mov
mov
xor
inc
pushf
xchg
rcrl
insl
pop
add
lock
pop
cmp
shrl
and
pusha
sub
or
xchg
neg
lcall
sbb
adc
aam
push
out
pushf
movsb
dec
adc
cmp
inc
cmp
or
mov
repz
mov
ja
adc
cmp
or
xchg
mov
pop
xchg
mov
jmp
cmp
gs
mov
adc
or
cmp
std
push
push
subb
in
pop
mov
outsb
out
popa
das
call
xor
cmpsl
lods
ret
ret
rorl
inc
sbb
test
pop
loop
out
mov
sbb
or
adcb
adc
shl
sahf
cmp
xlat
xor
pop
mov
stos
test
ljmp
fs
pop
clc
adc
sub
inc
add
loope
orb
pop
cmp
jbe
out
sub
lret
mov
mov
fcoms
push
dec
mov
xlat
mov
push
test
pop
jecxz
loope
sbb
mov
subb
vminpd
jecxz
or
push
dec
push
dec
repnz
sub
movsl
subl
sbb
fldcw
fisubrl
call
jmp
or
adc
and
adc
jg
int3
aaa
in
pop
or
mov
pop
mov
pushf
in
hlt
outsb
lea
push
add
lahf
inc
and
inc
fidivrs
insl
cli
pushf
mov
js
pop
mov
sub
outsb
fistl
aam
cltd
imul
ljmp
fidivrl
xchg
jle
lock
lret
mov
cmp
pop
pop
push
lock
xchg
push
adcl
push
cs
out
adc
add
sbb
mov
mov
loopne
pop
cmp
into
pop
mov
iret
out
pop
mov
adc
lea
out
clc
push
sub
push
pop
leave
aas
shrb
sbb
icebp
stos
loope
cltd
lods
insl
dec
jb
jnp
rcrb
add
pop
sarb
mov
or
std
out
insl
mov
push
xor
in
cmp
dec
ss
push
mov
pop
stos
shlb
aam
and
mov
push
out
push
or
sbb
mov
rolb
pop
mov
jne
cmp
mov
cmp
mov
icebp
or
pop
jecxz
aas
addl
push
shrb
mov
and
push
jbe
pop
mov
aaa
inc
cmp
jge
sbb
mov
mov
pop
or
push
dec
jns
and
into
sbb
jge
jns
add
fstps
int
insb
addb
addr16
das
into
sbb
movsl
popa
or
jae
dec
scas
rorb
rcrb
mov
lahf
fwait
lods
xchg
mov
dec
push
es
dec
xor
add
lcall
xor
mov
jl
inc
cmp
xor
adc
adc
movsb
in
jmp
in
adc
rcll
sub
ss
cmp
dec
lcall
movsl
inc
pop
jmp
mov
mov
sub
inc
or
lods
shrb
mov
mov
test
sub
mov
in
adc
data16
scas
dec
dec
stos
pop
arpl
jge
jl
std
xchg
or
dec
cmp
xchg
dec
mov
in
dec
mov
sbbb
pop
pop
xchg
les
jbe
mov
in
inc
fwait
inc
sub
jp
sbb
cltd
outsl
inc
cli
sti
fcmovnbe
mov
lock
pop
pop
dec
mov
arpl
lods
repnz
xchg
out
int
cmp
lret
push
mov
in
push
and
sbb
divl
fidivl
sbb
je
test
fistl
push
rorl
mov
es
jp
sbb
femms
push
xor
or
mov
mov
ds
lcall
mov
jecxz
fcomip
xchg
jge
inc
push
pusha
add
data16
jo
in
mov
stos
mov
cmp
cli
jmp
jge
cmp
jle
insb
xchg
mov
xchg
sbb
xchg
xlat
adc
andb
xchg
movsl
mov
ljmp
test
shlb
add
in
sbb
and
pop
movsl
outsl
repnz
repz
pop
mov
mov
mov
in
dec
stos
xchg
das
clc
js
lahf
movsb
pop
sti
fwait
cmp
push
pusha
mov
jns
std
movsb
shll
dec
xor
sub
push
jb
push
push
or
push
insb
imul
gs
jnp
or
push
lcall
dec
sub
ret
push
mov
pop
push
in
scas
cwtl
nop
loope
in
stos
adc
fdivs
push
xchg
jo
addl
xchg
adc
negl
adc
ficompl
into
cli
xor
mov
mov
aam
xchg
cmp
sub
jg
jne
mov
flds
fiaddl
repnz
cwtl
das
repz
mov
and
test
add
sarl
cmp
jle
outsb
push
inc
jp
call
jecxz
pop
sub
cld
mov
mov
xorb
out
call
cli
and
jmp
daa
adc
insl
mov
push
fcomps
jg
mov
sbb
sub
inc
cmp
cmp
repz
fsubs
test
xchg
mov
cli
call
and
test
dec
test
clc
dec
shl
sbb
mov
mov
push
jae
pop
add
fnstcw
icebp
popf
jno
aam
and
and
sub
lret
fucomi
xchg
dec
js
call
add
jnp
ljmp
and
and
cmp
outsb
ljmp
inc
mov
pusha
or
cmpsb
fcoml
xchg
iret
xor
adc
insb
inc
jmp
scas
rep
push
inc
mov
pop
mov
into
jno
fyl2xp1
pop
cltd
dec
push
push
int
ljmp
inc
lea
cmp
flds
cmpsl
call
repnz
aam
adc
insb
adc
dec
orl
and
cmp
inc
js
leave
xor
lods
pop
jnp
inc
scas
fdivrl
inc
pop
jb
aaa
mov
cmp
mov
std
loop
adc
ret
push
lods
lds
add
xchg
iret
cmp
jae
adc
jp
jno
dec
mov
push
inc
jmp
sti
leave
pushf
and
test
inc
pop
sti
pop
pushf
mov
adc
jp
mov
mov
loope
js
lahf
out
nop
fistpll
sbb
adc
pusha
orl
out
test
lds
mov
imul
mov
push
in
or
push
cmp
dec
lds
xchg
loopne
shl
notl
jo
test
stos
das
add
lock
jmp
popa
push
loop
and
lods
mov
mov
mov
inc
or
stos
cmp
inc
lods
push
dec
add
jmp
int3
imul
mov
dec
enter
mov
and
cmpsl
push
cwtl
and
pop
cmp
pop
mov
xor
ds
fstp
mov
xchg
cld
add
mov
outsl
fadd
aam
lret
rol
inc
jl
ret
outsl
stos
sub
movsl
add
adc
subl
std
xchg
pop
rorl
lahf
lahf
mov
lret
dec
mov
push
insl
or
loop
xor
fmul
jne
add
movsb
push
ret
test
sbb
pop
pop
imul
imul
sub
mov
mov
pop
rcr
sbb
adc
mov
repnz
mov
push
xchg
mov
push
xor
insl
add
cmp
mov
add
jmp
inc
push
or
push
or
xor
cwtl
out
xor
inc
push
dec
push
cli
gs
mov
repnz
mov
sbb
xor
push
or
sub
rcrl
decl
mov
dec
add
inc
push
mov
incb
dec
xor
xchg
movsl
enter
fiaddl
dec
pop
sarl
jne
add
js
sbb
mov
jg
lcall
inc
pop
mov
jnp
ljmp
outsb
pop
pop
and
insl
pop
push
cld
inc
fldcw
rcrb
imul
clc
clc
ss
imul
int
push
loop
arpl
jno
xchg
ss
xor
sbb
mov
xlat
mov
cmp
jae
xchg
outsb
jge
fdivr
xor
adc
call
pop
and
popa
scas
cli
xor
mov
mov
push
es
fdivs
in
xlat
sub
int3
mov
jp
cmp
jp
loop
popa
cli
sbb
xchg
insb
jno
inc
add
out
xorb
das
cmp
pop
adc
jns
pop
icebp
js
lret
sarb
fwait
jbe
gs
std
cmpsb
adc
lmsw
adc
add
mov
inc
xor
or
pop
orb
in
mov
arpl
xchg
in
jne
out
notl
adc
or
cmp
or
sbb
cld
lds
pop
popa
dec
lock
clc
jg
movsl
and
das
std
sub
pop
mov
pop
adc
int3
cmc
inc
jno
jmp
inc
or
lods
pop
mov
sub
fnstcw
xchg
test
lcall
in
mov
inc
out
lret
inc
mov
cmp
daa
sarb
les
pop
pop
push
or
test
or
jbe
in
dec
xor
sbb
or
xor
add
cwtl
add
inc
repnz
testl
movsb
cli
mov
addr16
push
cmp
int
fidivl
mov
pusha
sub
adc
pop
or
insb
or
rcr
push
ret
cs
inc
rolb
out
fucom
cmp
and
icebp
pop
or
dec
xor
arpl
mov
lock
out
out
and
shll
jge
fadd
dec
mov
movsl
sahf
pop
adc
icebp
cli
xchg
ja
mov
fwait
sahf
xor
adc
jg
addr16
mov
addb
push
adc
rcr
xor
ret
mov
jl
dec
adc
sbb
movb
inc
std
push
or
fldl
mov
daa
dec
insl
fcom
jbe
movsl
push
shl
xchg
cmpxchg
movsb
iret
inc
sti
stc
std
test
test
jbe
mov
sti
movsb
loope
mov
inc
int3
fstpl
xchg
xchg
sbb
or
addr16
fildll
add
xor
add
xchg
sahf
mov
mov
pop
outsb
mov
outsb
push
jecxz
jle
jo
ret
ljmp
subl
movsb
lret
mov
das
sbb
loope
cmp
cmp
inc
into
push
sti
inc
mov
mov
jb
mov
and
mov
jns
xchg
dec
mov
xor
xor
mov
loopne
bound
xchg
clc
rolb
call
or
jge
pop
pop
lea
xchg
mov
notb
jl
call
xor
lahf
int
in
ja
je
imul
pop
lret
or
adc
fdivrs
pop
adc
xor
outsb
and
inc
xor
inc
mov
aad
pop
mov
pop
lods
push
push
sbb
shll
or
loopne
lret
add
ret
inc
push
xchg
cmpsb
outsb
mov
fsubrl
popa
lods
mov
in
imul
js
sub
outsl
and
jb
push
in
repnz
stos
in
cmp
or
int3
dec
dec
cmpsl
insb
mov
fbstp
enter
inc
jecxz
dec
push
popa
adc
cmpsb
mov
cmpsl
shrl
add
flds
in
repnz
add
inc
insb
cmpsb
jno
aad
out
and
fisttpl
sub
inc
call
push
cmpl
xchg
mov
adc
mov
dec
cmp
mov
push
and
add
jb
popf
das
fistl
daa
adc
sbb
cmp
mov
icebp
and
mov
xor
push
fidivl
inc
push
dec
mov
xchg
dec
enter
loopne
xchg
ficomps
inc
leave
pop
xor
gs
addb
lret
dec
jbe
rclb
pop
cmpsl
aad
out
xlat
in
push
adc
cwtl
fwait
out
push
adc
sub
inc
jbe
test
pushf
test
mov
enter
xor
fidivrl
mov
pop
pop
mov
insb
lods
mov
adc
push
jmp
pop
sub
ds
adcb
ja
into
js
pushf
jno
sahf
sarl
orb
pop
mov
hlt
imul
arpl
ljmp
xor
xor
test
jl
imul
lock
dec
inc
add
pusha
jge
cwtl
dec
pop
lea
xor
ja
dec
fistpll
pushf
mov
dec
into
push
and
sub
or
loopne
mov
xchg
data16
sbbl
push
xor
mov
lea
adc
test
dec
imul
std
stc
jecxz
jmp
enter
xchg
loope
frstor
adc
add
or
ljmp
fstp
pop
xor
jecxz
cmc
out
pop
push
sahf
jg
out
lods
enter
xor
test
ds
in
mov
lods
push
pextrw
mov
xchg
jle
push
jo
sbb
cmpsb
fs
adcl
jmp
sub
gs
orl
xchg
jge
xchg
fld
lock
inc
das
or
add
or
shll
ret
idiv
sbb
jno
lods
lods
pop
test
jnp
cmpsl
add
idiv
cmp
xor
aam
inc
adcl
or
jns
and
dec
mov
loope
mov
out
loopne
cmp
es
incb
shrb
push
and
mov
frstor
cmp
xlat
add
mov
push
mov
sti
push
lret
mov
jp
push
leave
je
xchg
fmul
pop
test
fildl
mov
fstl
test
push
lret
rorb
push
iret
lahf
aas
pushf
aas
hlt
add
mov
addr16
cltd
jl
cld
mov
add
sahf
sub
jmp
ffreep
mov
pop
inc
mov
mov
test
xchg
mov
xor
fidivrl
hlt
loopne
notb
cmp
and
sub
mov
push
dec
fiaddl
insl
xchg
sub
dec
adc
xchg
sub
outsl
in
rol
xor
mov
mov
je
sti
or
inc
add
mov
je
imul
add
adc
icebp
cmp
adc
pop
jae
cmp
arpl
cmp
xorb
adc
repz
xor
test
push
pop
sbb
xor
add
stos
leave
movsb
sub
fwait
lock
pop
sbb
mov
xchg
outsl
cwtl
add
push
xor
xchg
xchg
or
cli
movsb
pop
cmpsl
sti
orb
out
std
mov
negl
dec
inc
loope
or
xchg
in
mov
inc
push
rclb
push
iret
sub
inc
fcoms
xor
and
sub
mov
dec
int
push
fcoml
mov
hlt
mov
push
in
fstpt
cmp
cmp
xchg
mov
fldenv
mov
dec
sub
outsl
sub
std
sarl
rolb
mov
in
lret
and
iret
imul
xchg
imul
out
pop
adc
mov
xor
cmp
cmp
bound
pop
ds
lock
mov
lea
or
push
faddp
mov
lahf
pushf
pop
call
into
xchg
add
frndint
sub
add
xchg
xorl
or
sub
xchg
lret
ljmp
jl
dec
xchg
testl
mov
xchg
xchg
sbb
cmp
add
ljmp
sub
push
pop
cmp
pop
cld
cs
outsb
not
adc
test
or
ss
mov
inc
cmp
sub
scas
sti
sub
mov
and
dec
lret
xchg
push
jno
cmp
aad
js
imul
mov
xchg
dec
pusha
int3
out
jnp
dec
fnsave
pop
insl
jae
pop
cmpsb
inc
and
mov
jge
aaa
mov
insl
repnz
lods
movsl
mov
mov
mov
mov
sahf
test
ret
push
jbe
fstps
pop
lea
test
daa
sbbl
adc
cmc
pop
subb
mov
arpl
xchg
cmpsb
push
pushf
movsl
nop
dec
adc
rorb
xchg
push
rcl
das
jge
stc
cmp
jmp
shrl
adc
outsb
adc
fwait
adc
stos
outsl
xchg
sbb
inc
fcom
or
jg
or
into
mov
fnstcw
sbb
js
mov
and
aam
jb
out
test
fnstenv
cmp
mov
fsincos
aas
mov
pop
mov
lcall
aaa
iret
sti
rcll
cmp
jnp
xchg
cmp
dec
xor
pop
xchg
jne
mov
adc
xor
jns
jecxz
je
or
aaa
out
icebp
dec
add
and
xor
inc
mov
cld
pop
aam
dec
push
jnp
xchg
testb
adcl
in
dec
cltd
cmc
cli
je
outsb
jnp
add
dec
xchg
ljmp
lret
add
lds
or
xchg
cmc
out
mov
call
xor
push
push
jnp
xchg
inc
insl
sub
sub
dec
or
push
je
push
inc
dec
in
sbb
repz
push
adc
add
sub
cli
inc
xchg
cmpsb
dec
and
aam
pop
cli
pop
mov
add
or
cmp
sub
ror
xor
addr16
test
imul
aad
stos
movsb
pop
pop
rcrl
nop
sub
jne
stos
pop
in
pop
adc
addr16
pop
mov
imul
lods
cmc
cmp
cs
aam
jbe
test
fdivrl
cmp
dec
test
push
lret
frstor
call
lods
mov
push
cmp
imul
scas
je
andl
mov
mov
lret
xor
dec
fs
test
sarb
jbe
dec
jo
push
dec
test
mov
sub
pop
jo
xchg
adc
fcompl
xchg
div
sar
and
push
jbe
sub
xor
xor
fwait
in
mov
or
mov
cmp
sbb
and
add
jae
sahf
add
jb
cli
pop
or
or
or
and
inc
xor
ja
xchg
jae
jecxz
push
dec
adc
mov
push
dec
flds
sbb
popf
add
mov
xorb
adc
inc
mov
mov
adc
add
add
inc
and
outsb
sub
push
and
jb
add
aad
sub
aad
int3
xor
add
nop
add
insl
xor
sbb
jne
push
and
arpl
xchg
mov
adc
pop
sub
lret
lcall
sti
fwait
inc
into
scas
shlb
mov
pop
and
push
and
call
in
add
xor
test
test
aad
push
push
ret
sbb
repz
sbb
repnz
mov
sub
mov
icebp
ds
fsubrs
push
or
jno
pop
adc
jno
or
mov
pop
sbb
loop
test
ljmp
lcall
out
and
mov
push
pop
mov
pop
mov
dec
incl
push
out
arpl
jge
pop
dec
mov
js
es
movsb
xchg
push
mov
pushf
mov
cmp
sahf
xor
scas
mov
adc
movsb
lods
sub
push
sbbb
sbb
mov
mov
push
in
mov
jmp
mov
xchg
test
add
fs
je
insl
iret
jge
filds
movsb
adc
xor
mov
fcmovnb
and
jb
mov
xchg
jmp
dec
xor
int3
lret
je
testl
xchg
sahf
or
xlat
sahf
popf
adc
xchg
es
adc
xor
and
shll
mov
fsub
add
xor
movsb
jecxz
ss
cmp
je
jp,pn
cmp
movsl
js
fwait
outsb
inc
aad
mov
inc
leave
fwait
mov
dec
jbe
repnz
aam
jb
or
and
clc
cld
dec
dec
stos
jg
aad
dec
hlt
insb
jbe
mov
pop
pop
jno
outsl
clc
xor
inc
mov
hlt
add
fldt
mov
ja
cli
pop
dec
lds
in
lcall
sub
aam
dec
mov
jl
push
and
jno
and
xchg
add
aas
shll
jae
rclb
scas
imul
std
sub
mov
in
repnz
pop
mov
in
ja
pop
mov
imul
adc
js
lea
push
pop
push
xor
adc
xor
dec
ja
xchg
inc
xchg
shll
push
daa
jb
and
cmp
xchg
and
stos
sti
mov
inc
mov
cmpsb
out
mov
cmpl
xchg
lret
arpl
inc
lea
and
and
xchg
mov
mov
pop
sarl
add
cld
cltd
loope
fcompl
std
sbb
cmp
xlat
sti
dec
inc
pop
or
fbstp
fwait
and
or
cs
cs
jne
aam
dec
enter
xor
xchg
lea
adc
mov
sbb
popa
shrl
decb
mov
jns
push
push
and
aam
enter
fdivrs
fildll
sub
int
and
lea
mov
and
pop
roll
cs
rcll
push
mov
pushf
bsr
rcrl
test
and
test
movsl
xor
or
sub
adc
cli
mov
data16
pushf
je
mov
pop
adc
lods
add
and
ss
dec
and
movl
roll
pop
push
cmp
insl
faddl
mov
push
les
xchg
not
push
js
xchg
jg
mov
outsl
outsl
add
in
pop
mov
jecxz
xchg
xchg
fcmovu
scas
add
ret
add
sti
push
hlt
loope
test
dec
pop
pop
das
sbbl
jl
inc
cmp
cmp
outsl
leave
testl
dec
loopne
dec
cmp
xchg
mov
call
jmp
decl
aam
imul
insl
aas
mov
mov
xchg
fmuls
stos
outsb
testl
inc
cmp
xlat
inc
cli
push
cmpsl
mov
pusha
rorl
popf
push
aad
insl
sbb
int3
jmp
mov
pop
ss
dec
test
out
cwtl
in
mov
in
cmp
loopne
cmp
shll
iret
xchg
adc
xor
lock
sub
insb
xor
cmp
inc
pushf
adc
mov
fnsave
ffreep
aas
jo
rcl
inc
not
pop
daa
or
test
les
adc
adc
test
cmovne
shll
push
lcall
into
cs
mov
subl
rcrl
xchg
xchg
fwait
dec
lods
fcmovne
mov
hlt
or
mov
cmp
xlat
divl
cmp
inc
addr16
js
push
insb
jecxz
dec
sub
jmp
fmulp
fadds
fisttpll
or
sbb
adc
dec
push
jecxz
sahf
and
lea
cltd
mov
lcall
mov
or
aas
xchg
ja
insl
fstps
js
cmp
mov
insl
cs
push
ficompl
shrl
adc
in
pop
or
push
mov
cs
call
dec
or
dec
mov
xor
imul
dec
mov
cmp
pop
mov
inc
leave
icebp
adc
lcall
mov
cmpb
stos
lcall
xchg
pushf
adc
adc
dec
add
call
pop
dec
cmpb
pop
adc
mov
fcoml
xor
ret
push
jmp
dec
in
mov
dec
dec
pop
stc
push
mov
test
pop
sbb
pop
inc
iret
jne
jnp
dec
mov
xchg
mov
fisubrs
pop
cltd
repz
divb
mov
pop
inc
inc
xchg
bound
pusha
add
adc
out
fs
lds
inc
add
popf
pop
add
lcall
ret
mov
notb
inc
rcll
add
imul
lret
out
bound
pop
pusha
in
cmp
mov
mov
pop
and
repnz
arpl
pop
stos
fsubrs
cld
add
or
xchg
push
pop
aad
popa
adc
xchg
push
sub
fs
mov
pop
bound
addr16
test
xor
iret
mov
push
pop
cmp
mov
loope
loopne
pop
insl
lret
out
popa
fildl
mov
push
sarl
das
dec
jnp
mov
add
stc
outsl
or
and
scas
mov
jns
scas
pop
std
sarb
mov
push
mov
sarl
int3
or
xchg
xchg
and
push
sbb
call
sti
mov
int
aaa
popa
inc
mulb
sub
mov
into
orb
adc
pushf
push
imul
cltd
movsl
mov
cmp
xor
add
lahf
xor
push
push
xor
fmulp
add
inc
sbb
clc
imul
pop
push
or
imul
jbe
hlt
mov
sbb
pop
addb
jp
or
cs
lcall
stos
loopne,pt
incl
lods
icebp
mov
add
in
xor
xor
in
inc
add
mov
fisubrl
jb
add
xor
inc
mov
cmp
pop
push
loope,pn
shrb
push
std
xor
jno
and
mov
add
cmp
out
ret
mov
sbb
mov
cld
test
xchg
dec
add
pop
cmc
push
jmp
mov
cmpsl
call
jg
lahf
inc
pop
sbb
sub
push
sub
adc
gs
xor
adc
test
push
sub
inc
test
aad
mov
mov
movsl
add
dec
push
and
out
cmp
and
jp
sub
lahf
pop
lret
lods
ficoml
clc
dec
loopne
mov
mov
sbb
addr16
stos
imul
push
sbb
dec
cltd
jbe
xor
fstpt
cmp
pop
xor
stos
adc
push
adcb
dec
inc
ds
andb
push
insl
push
push
xor
mov
outsl
dec
out
sbb
pop
data16
sbb
sub
cmc
std
adc
sbb
lahf
xor
inc
xchg
ljmp
push
dec
lret
scas
popf
mov
pop
push
xor
test
or
adc
push
pop
das
sub
pushf
xchg
nop
cmp
das
das
lret
xchg
test
add
and
negl
cmp
gs
cmpsl
mov
iret
sahf
dec
or
mov
ds
inc
mov
add
lahf
inc
or
mov
call
js
gs
clc
add
andb
insb
sarl
xor
cwtl
mov
pop
ljmp
jmp
popf
fld
stc
add
out
psubd
add
cmpsl
mov
mov
jle
adc
cmpl
cmp
test
mov
mov
fadd
cmpxchg
push
leave
add
and
xorb
xchg
push
ret
aam
add
pop
lock
pop
sub
mov
inc
mov
mov
pop
loopne
add
xor
inc
pop
mov
inc
sub
push
sbb
outsb
shrb
push
mov
in
imul
lahf
lods
add
pop
lahf
aad
xorl
loop
mov
popa
jo
add
mov
orb
adcl
lea
xor
xor
sub
mov
les
cmp
imul
push
inc
xchg
or
frndint
dec
jecxz
jp
add
loop
int3
mov
mov
subb
cltd
mov
jbe
test
and
loopne
inc
pop
mov
push
mov
and
lods
jge
les
lock
jo
sbb
ljmp
and
aas
pop
jbe
jge
jp
ret
daa
es
xchg
cmp
fistpll
sahf
sbb
test
dec
hlt
dec
mov
sbb
or
dec
flds
xor
mov
jo
movsl
fisubl
sbb
push
mov
test
adc
add
lcall
cmp
aad
iret
cwtl
repnz
imulb
aaa
fs
je
lock
adc
movb
adc
xchg
jne
jne
cmp
hlt
cmp
mov
das
inc
fimuls
or
mov
mov
jno
dec
lahf
mov
hlt
mov
or
clc
sbb
mov
imul
mov
pop
lods
lods
pusha
enter
bound
jecxz
iret
mov
pop
insl
push
or
lea
dec
negb
inc
popa
pop
sbb
sarl
out
gs
sub
push
bound
cmp
mov
add
adc
jne
aad
adc
push
in
xor
mull
popf
add
dec
outsb
mov
sbb
jmp
pop
sub
cli
push
fldcw
popf
or
adc
addr16
mov
jno
ja
dec
in
cmp
adc
stos
push
jmp
push
sub
inc
stc
or
movsl
jae
xchg
sub
fdivrl
jb
stos
dec
jge
jns
pop
stc
jge
add
icebp
xor
push
sbb
sar
jns
iret
xor
push
adc
xor
mull
sbb
xor
stc
loop
or
xor
mov
jle
mov
ja
ss
sti
inc
mov
mov
loope
push
mov
mov
mov
lcall
pop
cli
inc
mov
in
or
dec
sbb
movlhps
movb
fidivrs
filds
jge
push
pop
bound
mov
fs
jno
or
dec
fs
jae
inc
nop
sti
je
test
and
xchg
int
xor
sub
loopne
mov
loopne
popf
rcrb
xchg
out
and
add
lcall
xorl
aad
enter
add
icebp
mov
sub
mov
fucomp
js
jnp
mov
mov
xor
addr16
lcall
mov
mov
adc
fucomip
sbb
pop
stos
sti
int
leave
jp
fucomi
lret
jle
mov
xchg
bound
xchg
push
and
shll
xor
in
push
sbb
mov
psubq
loope
push
jge
cmp
sub
mov
mov
or
scas
mov
inc
cmp
ret
add
or
jmp
dec
test
pop
repz
mov
sbbb
xor
mov
insl
dec
and
push
jbe
out
push
jne
mov
xor
add
lret
mov
inc
xor
mov
leave
push
orb
adc
inc
imul
std
xchg
lods
je
stos
std
inc
movsb
sbb
xchg
cltd
ljmp
je
int3
std
dec
sbb
add
popa
add
rorl
inc
pmullw
test
push
pop
roll
mov
and
hlt
pop
add
out
push
lahf
jmp
lahf
fsubrl
dec
out
push
mov
stos
loopne
stos
scas
shll
dec
cmp
pop
mov
int
scas
cmp
pusha
in
jp
push
das
arpl
cmpsb
add
movl
jmp
dec
jno
jbe
enter
testb
inc
aas
jg
test
mov
jne
int3
daa
movsb
aam
push
xlat
test
jmp
jl
adc
add
arpl
push
push
movsl
stc
push
jae
push
daa
stc
and
xchg
es
insb
popa
leave
fwait
into
jecxz
mov
jno
cld
inc
das
inc
pushf
jbe
adc
jnp
das
xor
sub
lds
adc
jmp
mov
mov
lods
xorl
hlt
push
push
fldl
mov
lret
pop
sbb
sub
jge
push
push
lea
sbb
xor
inc
in
sbb
fcom
sub
pop
jno
fwait
aaa
mov
aam
dec
pusha
or
lcall
lret
lret
mov
int
loop
out
pop
pop
jne
jecxz
adc
sbb
sbb
lret
xchg
push
inc
mov
dec
and
pop
loope
lcall
push
ret
xchg
jae
mov
sbb
or
sub
js
sub
pop
adc
clc
in
sbb
pop
mov
mov
mov
and
mov
aaa
xchg
sub
pop
mov
pop
int
push
aam
sbb
rcr
scas
pop
mov
sbb
sbb
jo
pop
nop
xchg
les
xchg
xor
cmp
mov
les
stos
test
xchg
sub
pop
or
push
mov
mov
fs
bound
test
pusha
jne
pushf
cwtl
jno
into
jne
sub
shll
cmp
lods
and
mov
inc
pusha
jb
test
les
push
mov
arpl
cmp
arpl
adc
mov
movsl
jmp
push
xor
divl
mov
cmc
jb
adc
xchg
ja
mov
push
fdivl
xchg
lods
dec
test
cmp
jg
mov
xchg
pusha
sti
and
out
fidivl
push
bound
ret
dec
jg
pushf
ja
lods
outsl
pushf
ret
pop
stos
push
xchg
cmp
dec
jge
xchg
repz
loope
es
jbe
and
mov
test
nop
je
scas
cmpsl
dec
xor
sbb
or
cmc
xor
aaa
loopne
sbb
movsb
push
inc
mov
adc
sahf
jo
ja
sahf
test
xor
inc
jo
jns
jg
lret
inc
add
test
or
xor
xchg
sbb
cli
inc
add
cmp
pop
popf
inc
ror
adc
add
jmp
shrl
dec
sti
jb
mov
add
subb
repnz
pop
ljmp
jl
and
xchg
insb
bound
inc
sahf
and
stc
iret
lahf
mov
outsb
jo
leave
je
mov
sbb
je
xchg
cmpsl
cmp
jge
push
push
or
pop
push
sbb
scas
mov
push
insl
xchg
lods
stos
cmp
mov
hlt
testb
inc
stos
jge
jnp
mov
cmp
mov
lahf
pop
jle
pusha
out
xchg
std
addl
add
popf
cmp
sbb
lock
decl
xchg
inc
or
rorb
push
xchg
lods
add
and
jne
inc
lds
mov
dec
jno
mov
mov
jbe
cmp
sbb
mov
mov
sbb
les
add
and
into
test
xor
sbb
mov
inc
fmul
sub
mull
push
jg
pop
shl
movsl
push
xorb
xor
jg
mov
inc
push
xor
xorb
push
imul
clc
imul
sbb
pop
nop
sti
xchg
and
add
dec
jl
pop
aaa
sub
dec
testl
sub
icebp
ljmp
fimuls
pop
jmp
imul
add
enter
adc
adc
outsb
out
mov
fwait
sahf
jle
int3
or
cli
rclb
cmpsl
jmp
adc
inc
int3
fsub
jnp
dec
jg
mov
repnz
mov
cwtl
aaa
insl
adc
mov
cmp
cmc
mov
mov
mov
push
inc
push
xor
push
or
sub
out
scas
adc
lock
xlat
pusha
sbb
pushl
xchg
push
repnz
lcall
mov
pop
test
add
jmp
lret
fsubr
rcl
mov
sbb
ja
xchg
pop
sar
xchg
mov
add
test
int
test
or
aaa
sub
in
int
cs
bswap
sub
imul
xor
inc
cwtl
mov
clc
jbe
or
sbbb
test
jns
xor
xor
test
or
hlt
adcb
outsl
xor
mov
lcall
or
or
push
mov
or
in
mov
jne
pop
jo
fwait
jno
addr16
addr16
rorl
sub
repnz
push
sub
jecxz
adc
mov
inc
lahf
jb
jmp
ljmp
dec
jns
negb
je
jns
movsl
in
pop
push
pop
adc
jb
scas
gs
outsb
push
adc
push
mov
jns
sti
movsl
dec
cmp
les
sub
xor
es
shll
cmc
sbb
pop
aaa
lock
cld
push
or
dec
ss
sahf
sub
push
cwtl
adc
pop
rcrb
cld
mov
mov
sub
stos
adc
gs
jmp
cmp
scas
sbb
sub
not
mov
mov
adc
aam
mov
imul
push
jae
sbb
push
gs
lcall
jne
push
mov
xor
into
push
ljmp
pop
xor
mov
pop
sbb
fdivrs
jge
imul
jo
push
jno
repz
cwtl
cld
mov
push
andb
pop
dec
mov
and
sbb
fwait
adc
mov
lds
and
stc
push
test
and
mov
jg
jp
popa
xchg
inc
jno
jnp
xor
sbb
cwtl
xchg
or
fiaddl
icebp
shlb
test
rcl
shrl
jecxz
jae
sub
pop
fidivrl
testl
inc
sub
jle
and
mov
add
sub
mov
pop
imul
add
jl
sub
imull
pop
dec
out
pusha
and
inc
in
mov
loopne
shl
jl
push
pop
mov
adc
daa
inc
push
dec
addl
in
cli
ljmp
test
xchg
enter
fldt
mov
inc
mov
dec
lods
mov
sbb
sbb
and
fbstp
jp
xchg
xor
lret
pop
or
gs
clc
aam
push
inc
cmc
xor
cmpsb
xor
xchg
pop
enter
mov
push
sti
out
addb
gs
cwtl
cli
push
outsb
xchg
inc
jo
and
xchg
rorb
push
fs
fcmovnb
push
lret
insl
orb
addr16
lahf
mov
mov
xchg
xchg
in
inc
insb
testb
mov
les
dec
scas
xchg
call
dec
push
xor
outsl
in
out
inc
sub
in
out
mov
adc
dec
adc
inc
pop
imul
je
jo
pop
jae
xchg
adc
push
inc
iret
sbb
stos
in
decl
sub
es
pop
cmp
mov
out
aam
testl
mov
and
mov
sbb
ja
mov
cmp
jl
stos
out
test
ljmp
mov
and
mov
sbb
cltd
mov
fisubrl
mov
adc
sub
push
xchg
out
inc
sbb
ret
lret
subb
or
cmp
and
das
add
jno
xchg
mov
mov
lea
mov
jb
fstp
subl
sub
js
in
dec
ja
jge
jl
adcb
lcall
mov
add
add
cs
mov
xchg
enter
test
sub
sub
xorb
xor
insb
xor
int3
xchg
cmpsb
xchg
cmp
xor
mov
xor
cmc
in
sub
jmp
and
mov
loope
or
mov
sbb
les
out
xlat
loope
jnp
setg
xchg
movsb
outsb
shll
xchg
xorb
int3
dec
mov
jns
aam
nop
std
ds
and
test
aad
xor
sahf
out
mov
mov
andb
xchg
xor
pop
push
xchg
inc
sbb
sti
sub
xchg
scas
xchg
cwtl
pop
add
mov
movsl
mov
push
xchg
popf
bound
cmp
shrl
xor
mov
sub
lea
sub
lds
add
les
inc
ror
cli
mov
and
cld
xchg
inc
jp
scas
or
insb
sti
push
cmp
icebp
sbb
push
add
mov
pop
pop
pop
ficoms
and
pop
cmpsb
xchg
jne
mov
jmp
dec
sti
popf
jne
mov
xlat
sti
inc
aas
add
cli
in
cmp
daa
aam
ljmp
loopne
cld
push
cwtl
outsl
inc
mov
popa
es
cmpsl
dec
cmpb
inc
stos
pushf
dec
movsl
or
sarl
std
xor
imul
insl
xor
dec
mov
in
sbbl
push
pop
mov
mov
add
aam
xor
bound
cmp
shlb
loope
dec
lock
loop
sub
popf
sbb
nop
mov
pop
out
mov
sub
lds
jb
movsl
dec
jae
mov
cmovo
jb
xchg
nop
shlb
lret
ror
bound
cmpsb
dec
mov
adc
or
inc
rorb
cwtl
in
pop
jmp
inc
ljmp
mov
and
ja
cmp
jb
shlb
xorl
sti
sbb
mov
mov
xchg
pushf
cwtl
in
sbb
lods
in
int
shl
pop
push
pop
sub
mov
mov
pop
fucomi
cwtl
xor
cmp
xor
mov
pop
pop
cwtl
sub
or
les
add
mov
negl
pusha
addl
rcl
push
insl
nop
dec
mov
mov
adc
gs
jge
enter
mov
inc
mov
xchg
outsb
rcrb
mov
mov
pop
xchg
outsb
jb
addr16
sub
and
mov
mov
mov
fs
dec
mov
arpl
aad
repnz
jmp
pop
sbb
lds
mov
ss
cmp
ss
push
pushl
testl
cmpsl
dec
inc
xorl
push
mov
rcrb
out
mov
xor
in
jle
and
rcrb
push
iret
mov
add
insl
mov
cmpsl
cmp
sahf
shrb
fsts
stos
cmp
mov
sub
xor
xlat
loope
ss
movsb
jo
leave
xor
fldt
fcom
pusha
xchg
xlat
repz
dec
cmp
decl
and
stos
arpl
cltd
loope
cli
into
notl
lods
inc
ss
pop
insl
push
loop
sbb
and
scas
pop
xor
lods
lds
in
stc
add
push
mov
cmp
outsl
lahf
push
cmp
mov
aad
jmp
sbb
xchg
in
es
dec
inc
aad
cmpsl
pop
in
icebp
sahf
or
jl
xor
xchg
fsubl
jp
clc
xchg
dec
cmpsb
or
popa
in
and
shlb
cltd
out
xchg
lea
xor
sub
aam
or
mov
or
inc
and
popa
cmpsb
adc
inc
in
sbb
or
xchg
int
mov
inc
es
mov
fcom
push
pop
or
insb
outsl
test
adc
test
aad
popf
inc
scas
loope
jb
lcall
xchg
jne
add
std
dec
or
in
stos
shrb
fs
icebp
test
ds
lret
and
fists
dec
mov
loop
in
push
jb
addr16
movsb
repnz
fnstsw
idivb
andb
dec
adc
pop
mov
jl
push
loope
dec
mov
std
cs
mov
out
sbb
stc
push
nop
or
cmpsl
sbbl
lods
jae
pushf
mov
cli
jp
and
cltd
pop
dec
cltd
repz
std
mov
add
pop
lret
and
pop
les
pop
notl
negb
clc
fdivs
nop
cmpsl
js
cmp
mov
icebp
inc
xor
and
adc
xchg
arpl
push
push
out
repnz
ucomiss
lds
stos
int
mov
cmp
mov
dec
xchg
in
push
aaa
and
cmp
jg
cli
dec
subb
mov
cmp
mov
lods
repnz
roll
loopne
jl
shrb
into
mov
out
add
inc
repnz
dec
scas
inc
pop
orb
leave
push
inc
add
jbe
push
or
cld
popf
pushf
lds
icebp
xchg
jmp
jns
mov
inc
stos
scas
lock
mov
in
xchg
or
lods
and
sbb
pop
sbb
mov
in
jle
test
fnsave
cmp
pop
insl
jns
icebp
push
jl
das
in
adc
xchg
int
das
inc
mov
out
sbb
fidivrl
inc
fistps
sub
jo
stc
iret
lret
xchg
jg
ret
sbb
je
notb
fmul
sbb
cmp
jne
in
pop
jl
cmpsl
mov
enter
negb
rcrl
pop
mov
call
std
and
add
jae
fsubr
sub
in
cmp
cmp
jp
mov
out
ss
aad
jno
cmc
cmp
pop
aad
xor
cld
pop
mov
cmpsb
nop
arpl
adc
sbb
jge
xchg
xlat
inc
xor
pop
jo
cltd
leave
rcrb
xor
mov
mov
cmpsl
cmc
push
rorl
sbb
negl
fcoms
mov
mov
sub
jp
pcmpeqw
in
jle
testl
lret
arpl
stc
movsl
mov
add
or
cli
cld
cmp
push
inc
outsb
push
pop
fiadds
jmp
cmp
push
cmp
into
dec
dec
cmpsl
outsl
jne
sbb
add
mov
adc
xor
jl
scas
mov
ja
sti
hlt
stos
jp
xchg
stc
cmpl
insl
sarb
lcall
cmp
xchg
repz
jno
outsl
add
dec
sbb
dec
out
pop
push
fsubrs
push
push
fs
xor
lea
into
mulb
negb
push
push
fwait
and
add
mov
xor
add
jne
lds
xchg
mov
cmp
jmp
cmp
dec
and
lds
mov
int3
fldt
xor
jb
lret
in
sbb
xor
sbb
out
imul
aad
inc
add
and
fistl
hlt
mov
rcrb
xchg
jecxz
shlb
stos
push
imul
dec
pop
ret
jle
xor
lods
lods
stos
cmp
sub
call
dec
mov
or
arpl
rorl
out
outsb
rclb
outsl
push
out
ds
fcom
jp
adc
sub
mov
popf
and
outsb
lea
lods
inc
mov
mov
ret
ds
mov
cmpb
je
outsb
and
repz
mov
data16
aad
push
daa
or
sub
jge
cltd
or
daa
add
push
lret
out
divl
in
xor
sbb
or
and
out
inc
xorl
jae
shr
sbb
jg
sbb
dec
das
in
mul
ljmp
sub
stos
out
repz
aad
dec
cmp
mov
data16
jno
aad
mov
mov
ljmp
fwait
xchg
mov
sbb
lock
aaa
mov
xchg
stos
out
stos
xor
xor
jno
mov
xor
jnp
stc
insl
inc
int
mov
dec
mov
aas
fs
sarb
push
in
lea
pop
ja
push
gs
jl
pop
dec
or
test
jmp
aad
xchg
mov
lds
ss
stos
je
xor
mov
push
push
sub
movb
rcrb
push
inc
inc
push
cmp
or
daa
and
mov
dec
dec
daa
push
jmp
sbb
test
ds
lcall
shl
lret
jge
mov
shrb
sub
sti
inc
jne
add
rol
out
sbbb
sbb
lock
lea
test
icebp
mov
add
xor
je
incb
imul
pusha
in
jno
aas
mov
xor
cltd
lret
sarb
and
arpl
xchg
mov
mov
jne
mov
aad
add
and
clc
stos
cld
hlt
mov
pop
mov
not
loope
cmp
push
adc
xchg
fnstenv
decl
mov
lea
imul
fisttpll
sub
xchg
fdivl
mov
xbegin
pop
rorl
xchg
jg
fcompp
add
xchg
imul
add
mov
inc
adc
movsl
shrl
sub
aas
mov
adc
pop
sub
les
dec
jle
mov
mov
dec
fdivs
push
scas
pop
cmp
movsl
dec
fwait
mov
je
push
adc
insl
cli
fnstsw
test
mov
andl
dec
cmp
mov
adc
pop
fsubr
jae
ja
and
jmp
and
jb
lret
ljmp
movsb
js
xor
xor
call
adc
in
and
flds
mov
out
xchg
xor
or
or
fstp
and
jne
dec
or
inc
adc
pusha
mov
sub
cmp
cmpsb
push
call
nop
jo
add
xor
loopne
add
sbbl
in
or
in
mov
inc
xor
leave
mov
push
imul
inc
aas
clc
rorl
add
xchg
cmp
sub
addr16
movsl
fwait
jbe
sbb
or
push
pop
push
subb
icebp
jg
push
test
cmc
mov
call
add
mov
add
stos
into
sub
cmp
push
adc
outsb
arpl
and
or
xor
rorb
inc
adc
ret
insb
push
adc
lret
dec
fstp
fmull
adc
dec
leave
int
stos
iret
lcall
in
fildll
dec
nop
xorl
or
sbb
out
rcll
dec
mov
pop
push
fbld
ss
out
cmp
stc
pop
xor
inc
pop
mov
data16
mov
xlat
mov
jae
enter
out
add
mov
jb
in
jg
pop
fs
sub
xlat
js
and
jbe
shlb
or
hlt
decb
and
pop
repz
lcall
stos
int
lea
sarb
outsb
fistps
out
int3
sub
std
lret
leave
popf
push
fsubp
xchg
insb
es
pop
add
in
scas
je
jp
stos
es
sbb
add
sbb
xor
dec
cmpsb
push
jp
lods
adcb
xchg
in
dec
shrb
xor
add
dec
mov
mov
lds
mov
sbb
outsb
sub
sbb
imul
or
mov
cmpb
xchg
add
or
xor
out
shlb
pminub
sub
loop
gs
in
shll
pop
int3
push
int
pusha
sbb
ljmp
cld
sbb
jg
push
pop
xchg
fsubrp
movsb
orb
sbb
add
testl
clc
out
add
in
push
aas
add
lcall
jecxz
cli
das
sub
pop
in
jnp
adc
mov
jnp
adc
xor
test
daa
xchg
jp
fsubr
xor
lahf
pop
loopne
sbb
addr16
rcrl
pop
pop
pop
les
lds
mov
mov
and
fwait
icebp
dec
nop
cli
cld
orb
sbb
mov
pop
movl
sub
xchg
xlat
stc
mov
add
xchg
sahf
xchg
imul
xchg
test
inc
and
lock
jmp
enter
ljmp
push
mov
loop
mov
out
xor
add
dec
icebp
out
inc
pop
xchg
or
lods
jnp
out
movsb
add
mov
sub
add
shlb
xor
adc
rclb
mov
movsb
mov
mov
outsb
adc
loop
mov
xor
xchg
mov
push
scas
xor
jge
xchg
cmp
xchg
sub
ret
jo
cmp
mov
out
mov
dec
int3
inc
mov
fiadds
sub
movsb
add
push
popf
jle
sbb
or
cmp
or
jns
shlb
jl
fs
add
dec
push
sbb
test
fdivrs
cltd
pushf
pop
push
lret
subb
inc
xlat
enter
xor
hlt
in
add
dec
pop
sub
xchg
xor
dec
dec
cmp
mov
jne
pop
xchg
idiv
cmc
sbb
mov
stc
lods
out
dec
add
and
lds
jns
add
pop
push
xchg
es
mov
lods
xor
lea
xchg
in
aaa
push
pop
sbb
fistpll
xchg
dec
fmull
stos
inc
push
mov
add
adc
inc
xchg
sar
sub
rcrl
pmaxsw
icebp
les
cld
inc
push
lock
sbb
sti
aaa
pop
inc
aam
orb
hlt
inc
xor
movzwl
mov
ss
xlat
jnp
push
inc
sbb
data16
pop
add
push
lea
sbbl
and
xchg
jle
pop
loopne
insb
mov
mov
lcall
es
dec
mov
cmp
lahf
jbe
movsb
mov
inc
sar
mov
adc
clc
in
push
mov
ret
std
and
repnz
frstor
outsb
mov
mov
mov
out
rorb
push
mov
adc
or
rcll
ret
push
push
push
dec
mov
outsb
and
dec
mov
sbb
lret
pop
push
and
popa
mov
pop
inc
lahf
ds
jl
loope
jb
jne
nop
pop
je
xor
out
dec
aas
into
movsl
jnp
rorl
and
mov
mov
in
mov
adc
sbb
cmpsl
dec
dec
jbe
subb
insb
out
out
push
jecxz
scas
xchg
cld
push
jecxz
ret
test
lds
sbb
test
or
or
in
lods
xchg
loope
fcom
push
sub
push
push
pushf
sbbl
lock
adc
bound
in
es
jl
adc
out
jg
mov
add
adc
cmp
xor
inc
loope
mov
or
rorb
sbbl
pop
and
cmp
outsl
mov
rorb
and
pushf
cmp
cmc
sub
push
mov
call
xor
add
lahf
insl
mov
or
pop
daa
mov
jae
push
mov
xchg
repz
cltd
inc
out
and
ret
sbb
loope
mov
inc
add
aaa
movl
and
rorl
movsb
ret
pop
pop
mov
cltd
into
roll
jbe
xchg
mov
add
push
fs
repz
fidivrs
xchg
sub
das
sbb
clc
mov
and
jg
stos
icebp
fwait
xchg
mov
adc
and
push
daa
xchg
fnstenv
add
xor
push
mov
rolb
mov
push
lds
cmp
jns
or
mov
fistpll
mov
mov
icebp
inc
stc
xchg
mov
negb
mov
inc
lret
fpatan
cmpsb
cli
ja
sbb
push
pop
or
xor
cmpsb
jle
stc
subb
jp
mov
sub
adcb
inc
mov
mov
aam
ret
jb
mov
push
iret
div
cmp
push
jno
into
jmp
lock
bound
jb
mov
leave
pop
cmp
pop
mov
jne
leave
inc
sub
mov
mov
sub
cmp
inc
jp
dec
imul
xchg
and
push
jo
mov
mov
pop
cs
or
jb
pop
cmp
lahf
cmp
sub
fstps
fistpll
sbb
mov
rclb
cmp
sub
jge
popf
jb
jno
movl
aaa
ret
jbe
dec
sbb
ljmp
insl
sbb
ret
ret
fiadds
push
mov
inc
pushf
xchg
cmp
pop
addr16
sub
test
into
stos
push
rcrb
push
jl
mov
mov
add
std
pop
movsb
mov
push
fsubrl
bound
inc
leave
rorb
mov
dec
sub
les
mov
or
test
mov
sbb
cli
adc
lock
or
xchg
xchg
dec
fstl
andl
pop
imul
sub
xor
mov
cmc
popa
mov
in
lds
add
out
lret
inc
sub
fidivl
lahf
dec
or
sub
mov
pop
dec
sbb
ja
and
or
push
sahf
loope
nop
mov
sub
aas
test
or
push
inc
mov
sti
pop
insb
jnp
bound
sbb
xor
cmp
fcomp
aam
mov
rorb
aaa
xchg
pop
mov
push
rorl
fists
rolb
jno
jle
les
sahf
popa
xor
inc
jle
jne
mov
xor
aad
jns
sti
je
push
pushf
sahf
gs
mov
aam
popf
hlt
call
cwtl
xor
out
and
lea
pop
pusha
dec
fistps
test
xor
xchg
daa
xor
mov
mov
push
dec
mov
jnp
add
push
ret
stos
lahf
sbbl
ret
lods
jl
jns
testl
dec
xor
dec
in
sub
mov
mov
fisubrl
xchg
shl
sarb
lods
es
sbb
adc
fisttpll
dec
out
push
sub
jnp
popf
je
xorl
cli
fisubrs
fwait
cld
inc
jg
inc
mov
jle
sahf
xchg
cmp
cli
inc
push
mov
mov
push
cmpsb
mov
push
add
fimuls
mov
xchg
sub
gs
adc
inc
aam
push
jnp
push
andb
fwait
movsb
mov
movsb
mov
add
pop
or
and
jmp
add
inc
push
adc
mov
les
sahf
push
fimuls
imul
add
mov
add
inc
in
arpl
mov
cmp
daa
mov
xchg
or
dec
fcmovbe
sub
mov
and
xor
or
sbb
sbb
mov
sti
sbb
dec
js
cmp
and
sarl
sbb
sbb
scas
add
add
push
in
dec
pop
bound
cld
das
mov
pop
xlat
sub
inc
pushf
pop
scas
fbld
mov
dec
dec
xor
pop
cmpsl
arpl
cmp
jp
cmc
xor
pop
mov
test
and
mov
fnstenv
mov
lcall
and
xchg
mov
jp
push
daa
mov
fldl2t
jg
stos
jge
std
cmpsb
jecxz
hlt
addr16
loope
sbb
xchg
jno
repnz
jns
sbb
ret
fs
mov
orl
fmull
das
mov
pop
xor
jg
movsb
xor
mov
pop
sub
mov
lret
push
jns
in
or
pop
inc
push
inc
jo
sub
arpl
or
mov
adc
arpl
mov
xchg
mov
repz
jg
cli
fidivrl
and
jge
mov
xchg
add
js
pop
add
and
inc
sub
shrd
lahf
sbb
fimuls
cmp
adc
xor
or
sub
out
jge
xor
jbe
ret
les
dec
xchg
pop
or
cli
dec
arpl
inc
sbb
sub
dec
stos
sbb
add
push
xor
push
sub
xor
push
xchg
mov
ret
inc
into
jne
push
inc
les
cld
and
xor
rorb
test
jmp
ret
xor
in
pop
push
adc
orb
or
sbb
adc
cmpsl
std
dec
outsb
xlat
mov
cmp
pop
sub
inc
lret
fisubrs
shll
lret
add
movntq
xlat
out
stos
mov
pop
push
loopne
int3
push
adc
jo
xchg
and
jmp
fiaddl
flds
xchg
out
sbb
inc
dec
add
loop
pop
sbb
push
fcoml
inc
addr16
lcall
iret
mov
test
pop
sti
test
in
sbb
lret
pop
lret
lds
imul
sbb
clc
fidivl
cs
int
bound
sti
ds
or
xchg
cld
pop
add
mov
sub
fistps
rcll
sbbb
and
push
add
movl
xlat
xor
test
ljmp
repz
roll
mov
cmpsb
inc
jp
stos
jae
pop
out
push
sub
sahf
movl
imul
jnp
add
cmp
jne
cmc
xlat
faddp
lods
sahf
outsl
scas
cvtps2pd
xor
imul
addr16
jge
pop
notl
call
lahf
add
rcrb
into
out
imul
aaa
out
pop
sahf
adc
or
imul
pop
test
in
cmpsl
and
jbe
fadds
daa
je
pop
push
sbb
xchg
pushf
pusha
or
in
ret
test
or
sarb
cmp
imul
push
sub
push
add
shrb
mov
xlat
in
sub
cmp
test
cld
mulb
iret
inc
cld
jmp
pop
rcrb
adc
fists
jo
cmp
shr
fcoml
dec
addr16
scas
sub
pushf
jmp
int
jbe
add
and
pop
fucomp
lret
outsl
es
add
xchg
or
xchg
popf
mov
mov
pop
lock
push
and
inc
das
add
jg
sbb
inc
ss
cs
xchg
js
and
sarl
sub
xor
leave
pop
cmpsb
mov
pop
cld
mov
push
int3
push
xor
or
movsb
push
jae
mov
adc
subb
adc
addr16
aad
sbb
sub
loop
adc
jg
mov
mov
cltd
out
das
in
sbb
sub
jmp
push
inc
xchg
loope
or
mov
xor
xchg
and
ds
or
scas
lahf
in
xchg
and
jo
out
jecxz
in
or
adc
inc
xor
addr16
inc
dec
fcoml
adc
or
scas
test
sarl
mov
loopne
inc
xchg
andl
xor
sbb
add
or
xchg
xchg
insl
mov
sbb
jb
xlat
dec
aad
paddsw
sub
out
stos
jle
or
xchg
sahf
inc
into
push
dec
sub
push
movl
pop
xchg
gs
xchg
jecxz
lret
and
dec
movsb
call
cmp
pop
in
test
push
loope
xchg
repz
in
inc
jae
jnp
cwtl
lret
xor
push
lds
sub
jnp
cmp
add
cld
mov
clc
sti
lods
dec
insb
iret
jnp
pop
lcall
cld
push
ret
or
jmp
leave
sbb
and
inc
xor
adc
mov
out
rclb
xlat
rorl
jle
lcall
outsl
lret
mov
cli
adc
pop
into
xor
cmp
fsubs
push
xchg
xchg
xor
mov
shr
adc
hlt
jmp
mov
scas
cmpsb
lret
ja
xchg
lcall
cmpsl
push
test
rorl
lret
mov
add
movl
push
xchg
out
inc
inc
xchg
outsb
and
gs
lret
out
test
pop
pop
popf
inc
scas
or
rolb
or
xchg
imul
mov
loopne
rclb
mov
mov
jb
xor
lea
push
pop
adc
mov
popf
arpl
lret
clc
mov
aaa
sbb
sahf
xor
adc
test
mov
and
xchg
mov
sub
popa
popf
out
pop
or
ret
add
xchg
inc
inc
and
sub
jmp
movsl
mov
or
mov
xchg
ljmp
lret
adc
pop
mov
movsl
cltd
in
fs
jecxz
int3
lcallw
add
inc
int
aam
outsb
mov
jmp
repz
testb
cli
test
je
filds
inc
inc
jge
cmp
aam
dec
cmpsb
sarb
test
xorb
pop
lret
pop
xor
aad
in
jbe
insb
sbb
push
xchg
pop
pop
es
sub
dec
add
stos
popf
jbe
loope
jp
push
cmp
mov
pop
mov
ljmp
sub
push
cli
repnz
add
insl
pusha
hlt
xchg
mov
push
mov
lods
add
cmp
jg
adc
outsl
and
push
adc
arpl
sbb
mov
ret
outsb
mov
scas
jg
mov
jmp
in
pop
inc
out
pop
mov
sbb
ret
sub
pop
aad
test
xchg
into
mov
ret
mov
insb
stos
cmpsl
pop
stc
fistl
in
in
jo
sub
notb
aam
insb
xor
movsb
sbb
xchg
int3
mov
pop
addr16
sub
enter
or
in
xchg
or
fmul
mov
xchg
pushf
test
ficompl
ljmp
mov
cmp
add
inc
add
mov
sahf
pop
cmp
idivl
outsb
push
push
gs
dec
test
fcomps
pop
sub
or
sbb
fs
hlt
mov
jo
jg
xlat
shl
push
in
xor
xor
movsl
int
xor
pop
jl
jecxz
dec
push
shrl
adc
addr16
popa
cmpsb
nop
cmp
dec
subb
sub
lahf
or
scas
adcl
nop
popf
mov
into
test
das
jecxz
lea
in
adc
pusha
adc
mov
mov
add
movsb
jle
inc
std
sub
or
rcrb
sti
dec
sub
and
add
loop
push
mov
repz
push
lret
mov
cmp
out
add
mov
add
mov
add
test
dec
cmp
xchg
mov
sar
enter
pop
retw
adc
pop
sub
cld
data16
dec
hlt
out
data16
xchg
pop
sbb
sti
inc
mov
das
aam
xlat
jno
jg
imulb
ret
dec
mov
xchg
int3
pop
jp
xchg
sbb
clc
test
sbb
movsl
in
out
movsb
mov
fisttpl
outsb
pop
adc
cmp
out
cmpsl
shlb
cmpb
fstl
das
test
mov
jnp
jae
push
adc
mov
push
aas
iret
aam
cmpsl
dec
pop
mov
xlat
adc
out
addb
shr
push
inc
sti
in
sub
pop
push
les
pop
mov
adc
mov
xchg
dec
add
cmp
and
loopne
cld
cli
adc
lods
or
shlb
stos
das
xchg
pop
ror
cmp
shr
pop
pop
imul
icebp
fldl
loop
lods
in
aaa
aad
stos
sub
dec
cld
enter
cmp
xor
push
pop
add
sub
push
xor
push
mov
fcmovb
dec
test
mov
push
inc
xor
ss
out
ljmp
imul
add
dec
mov
out
sbb
loop
xchg
test
inc
cmpsl
push
or
movsb
fsts
in
jne
jl
cs
fwait
add
mov
insb
mov
imul
pop
cmpsl
ss
or
das
mov
mov
shll
and
scas
sbb
or
jo
outsb
jmp
sub
je
insb
dec
dec
xor
xchg
cmpsb
loopne
popa
mov
add
cmp
and
push
cld
or
push
or
mov
aas
inc
ja
adc
inc
xchg
shll
movsl
push
push
fucomp
mov
adc
or
aaa
iret
stos
sahf
movsb
push
sub
and
or
pop
or
rclb
xor
cmp
bound
mov
xchg
or
sub
pop
popa
and
xor
fcmovne
pop
jg
imul
lcallw
lcall
xchg
mov
sbb
das
aam
das
sub
cli
lea
add
add
xor
in
movsl
lcall
nop
cmp
cld
stos
cmc
xchg
inc
es
lock
aaa
jecxz
addr16
stos
clc
nop
jmp
add
or
and
lret
aaa
cmp
or
mov
cmp
addr16
pop
cmp
loope
dec
jbe
into
adcb
mov
call
inc
xchg
aad
rclb
jbe
fildl
jle
dec
cs
mov
loope
xchg
movsl
in
lcall
jne
push
rorl
jns
clc
adc
cmp
les
push
adc
das
cld
in
add
inc
scas
xchg
mov
xchg
jecxz
or
push
add
cmp
dec
and
and
cs
mov
scas
inc
ljmp
data16
add
dec
jo
xchg
push
xor
xor
hlt
xchg
shrl
loope
mov
cmp
xchg
jecxz
inc
loop
loopne
jecxz
addr16
scas
push
cmp
cmovno
push
subb
rcl
jns
and
loope
mov
xchg
inc
jge
out
in
xor
testl
jp
inc
push
pop
xchg
sbb
loop
adc
add
sbbb
mov
add
clc
dec
cld
lock
test
adc
xor
call
gs
es
mov
rcl
jbe
cltd
xor
in
push
jne
pop
lods
mov
jmp
mov
ljmp
adc
hlt
xor
push
cmp
subb
mov
pop
iret
test
test
popa
jo
xchg
pop
xchg
inc
aad
sti
mov
jnp
or
into
das
ja
hlt
mov
out
iret
mov
inc
dec
das
sub
sbb
aad
dec
cli
mov
push
mov
mov
inc
inc
add
bound
cwtl
push
mov
jg
js
push
or
pop
aaa
jbe
xlat
mov
and
mov
push
mov
ljmp
sbb
mov
add
xorl
stc
sbb
ds
inc
jecxz
fsubrl
inc
dec
and
aam
repz
mov
fisubs
pop
pushf
xchg
rcl
orb
sti
mov
cmp
aad
xor
xor
mov
insl
mov
ljmp
adc
sti
ja
xchg
or
mov
ljmp
clc
sub
ss
mov
jo
inc
les
and
and
fcos
xchg
imul
push
mov
inc
or
shrl
adc
loop
in
addr16
xchg
push
push
pop
inc
push
mov
push
jae
push
lods
mov
xchg
shrl
lahf
mov
mov
out
mov
lods
push
xlat
notl
vpsllw
add
dec
je
pop
adc
mov
cltd
sub
div
ljmp
lock
sbb
xchg
mov
jne
add
out
push
mov
ds
mov
mov
lock
movsb
int3
push
incl
mov
sbb
out
push
cltd
xor
adc
inc
pop
inc
mov
cmp
jl
jbe
cmp
fs
sbb
inc
or
jo
hlt
xchg
std
clc
cmp
cmpsl
cmpsl
mov
out
ficoml
dec
addl
pop
or
in
push
jg
out
xchg
out
mov
std
push
cmp
sarl
negl
not
add
mov
fwait
mov
into
test
jecxz
mov
test
mov
sub
sbb
rorl
into
les
cli
sub
mov
imul
adc
or
add
pop
jge
mov
xorb
stos
lods
jp
cmp
mov
insb
loop
mov
mov
push
subl
or
test
cltd
bound
fistps
mov
shl
cmp
adc
pop
cwtl
mov
int3
daa
mov
popf
movsl
dec
cmp
mov
mov
fnstcw
cmp
pop
pop
cld
sub
nop
cmp
andl
das
sub
add
adc
push
fdiv
cmpsb
pop
inc
mov
sbb
push
fs
xor
add
rol
roll
pop
xchg
jb
mov
inc
sbb
ds
mov
fwait
bound
pop
fildl
pop
jo
cli
lods
cmp
and
divb
movl
adc
sbb
daa
pop
arpl
xorl
loopne
jae
lock
imul
sub
and
into
stc
mov
jnp
push
int3
dec
pop
in
incb
jp
xchg
stos
cwtl
inc
jbe
xchg
xchg
jbe
rolb
push
lock
pop
pusha
jne
mov
scas
xchg
jp
jnp
cld
fucomp
xor
in
in
std
add
xchg
rcrb
mov
sbb
sub
fdivr
flds
mov
leave
or
add
stos
xchg
xchg
sbb
incb
out
adc
aas
inc
xchg
jle
sbb
ror
sub
scas
xchg
mov
mov
mov
jno
xor
outsl
inc
repz
nop
pop
pop
push
or
mov
in
mov
jae
pop
inc
inc
push
cmpsl
fwait
jmp
test
in
pushf
and
cmp
or
rcrb
add
jmp
loop
lock
jecxz
sbb
or
and
push
jge
daa
subl
lock
pop
pusha
cmpsb
fisttps
pop
jle
rclb
sahf
test
scas
ss
pushf
push
inc
push
outsl
and
or
stos
adc
inc
rcrb
sbb
stos
and
movsb
popa
add
sbb
add
sar
sbb
push
add
arpl
ja
nop
lock
inc
fldenv
push
lret
fstl
sub
push
jb
lret
mov
xchg
push
aam
lahf
fdiv
stos
pop
aad
sub
imul
int3
test
and
loopne
imul
sub
movsb
inc
jns
js
sbb
add
and
rcrb
push
jo
out
xor
jg
cmp
aas
bound
add
pop
pop
adc
subl
shl
mov
gs
pusha
imulb
adc
stos
stos
mov
imul
xchg
add
scas
mov
add
pop
scas
cmp
vprotw
testl
in
dec
adc
fbstp
add
sahf
cmp
dec
push
repnz
loop
nop
cmp
loope
xlat
mov
int3
cmp
outsl
lock
cmpsb
pop
lods
fildll
xchg
pop
ja
jae
sbb
xchg
xchg
sub
idivb
enter
sti
nop
mov
push
xchg
or
es
sub
shr
xchg
shlb
jle
hlt
fcomi
mov
dec
push
rcr
push
sbb
push
mov
scas
lret
enter
sbb
and
mov
xchg
inc
adc
pop
mov
sbb
fisubs
inc
bound
pop
arpl
xchg
in
lahf
dec
in
bound
xchg
or
std
lahf
sub
outsl
outsb
xchg
iret
pop
mov
shrb
lcall
outsb
and
test
and
fistl
pushf
sbb
and
insl
ds
xor
push
test
jno
inc
pop
repz
mov
in
sti
push
mov
sbbl
insb
ds
sbb
pushf
xchg
cmp
adc
movsb
sbb
shlb
jae
mov
xor
inc
test
inc
jne
daa
clc
add
sbb
mov
inc
lods
adc
jns
sbb
add
adc
imul
pop
rclb
cmc
mov
lret
je
inc
imul
xchg
ja
leave
pop
jp
test
dec
add
inc
or
or
and
xchg
jb
in
ret
pop
rcrl
inc
cmp
mov
ret
mov
imull
sbb
rcrl
mov
and
fbld
jl
lock
test
aaa
mov
lock
in
inc
ror
popa
adc
ljmp
in
mov
jge
les
ja
aad
push
ret
push
outsb
pop
outsb
mov
mov
pop
sub
sbb
xor
mov
in
lods
sub
push
hlt
jo
lods
pop
cmpsb
jns
mov
pop
lods
and
add
in
les
lock
inc
dec
aas
call
mov
jmp
push
out
enter
vpaddsw
inc
inc
mov
sbb
adc
xor
shlb
adc
pop
sub
addr16
sub
cld
cmp
push
incb
outsb
pop
mov
cmc
cmc
enter
xchg
ficoml
sbb
xchg
jb
iret
push
ftst
inc
inc
rorb
cmpsl
addb
lods
sbb
pop
shr
in
pushl
or
les
enter
mov
mov
in
loopne
jl
out
das
jmp
into
scas
sti
add
add
sarl
in
insl
and
mov
ret
repz
adc
jne
adc
cmpsb
int
push
mov
mulps
xchg
inc
xchg
sub
call
push
inc
fidivrl
xlat
inc
sbbl
sbb
aas
sub
jmp
aad
rdpmc
dec
gs
inc
repnz
fistps
ss
in
jp
pushf
mov
scas
add
call
inc
mov
add
mov
adc
mov
loopne
out
test
cmp
cmp
fwait
jo
mov
adc
bound
mov
pop
mull
mov
xchg
ftst
fisttpl
mov
ljmp
and
jb
jecxz
iret
add
adc
cwtl
out
inc
stc
imul
notb
jne
xor
push
dec
adc
inc
sbb
cmp
in
sbb
inc
adc
inc
gs
std
test
adcb
mov
sub
jns
jae
jmp
dec
or
loop
pop
mov
sahf
ja
cmp
clc
sub
mov
sbb
xchg
dec
and
mulb
inc
jb
sbb
fsubr
and
xor
cwtl
ss
aad
mov
scas
jbe
mov
jmp
inc
pusha
clc
dec
add
sub
mov
xchg
inc
xor
repnz
into
mov
adc
lock
push
aaa
scas
mov
add
mov
dec
lods
das
mov
pop
subl
ret
and
push
pop
xor
xchg
mov
push
iret
adc
dec
inc
pushf
add
ret
outsl
scas
add
push
dec
mov
pop
pcmpeqb
enter
inc
aam
jle
push
icebp
fld
push
negl
clc
pop
movsl
cmpsl
pop
xchg
shll
into
fldcw
mov
cli
push
pop
xchg
mov
push
sub
jae
and
mov
pop
das
int3
pop
in
pusha
mov
sarl
inc
add
and
cltd
dec
imul
nop
pop
xlat
stc
outsb
inc
daa
mov
je
dec
test
loop
push
mov
outsl
or
mov
or
mov
push
mov
add
bnd
push
xchg
sub
sub
hlt
stc
data16
cltd
repnz
xor
fld
pop
rolb
jg
adc
xchg
sahf
sub
js
jl
push
js
jle
in
aaa
or
ja
inc
push
sub
call
stos
insl
outsl
jno
lock
add
cmpsb
or
mov
pop
popa
push
cld
xchg
inc
inc
jns
sbb
xor
fidivrl
jmp
jl
push
mov
xor
dec
imul
loopne
scas
lcall
jge
rclb
sarl
sub
cwtl
movsl
xchg
cmp
dec
mov
lahf
mov
push
mov
pop
mov
popf
adc
xor
rolb
cmpsb
lods
inc
xor
inc
pushf
popa
mov
or
cmpsb
cmp
cmpsl
sub
adc
rcrb
lcall
jns
dec
mov
orl
sbb
dec
jp
sub
add
into
add
fldt
dec
out
or
repnz
lahf
clc
jle
out
and
mov
mov
or
xchg
call
jnp
insb
movsl
lret
aad
lock
test
jle
pop
inc
movsl
repnz
out
and
pusha
push
jno
push
test
hlt
adc
sbb
and
fsubrs
outsb
mov
and
rcl
xchg
push
mov
adc
pop
mov
stc
outsb
popf
inc
bound
ja
mov
popf
dec
adc
lcall
jmp
pop
jno
cmp
subl
and
adc
lahf
lahf
and
fs
js
dec
out
xchg
push
imulb
iret
iret
add
xchg
mov
shll
pop
inc
xlat
add
inc
adc
xor
cmp
and
sahf
mov
add
cmp
mov
lds
sub
mov
xchg
rclb
subl
out
sbbb
sub
jmp
pusha
xchg
add
push
test
arpl
lret
sti
cmp
adc
jecxz
outsl
idiv
mov
sti
out
stos
add
sub
cmp
in
lea
sub
mov
cmp
xor
mov
out
pop
lods
inc
clc
aaa
dec
movsl
loope
xchg
adc
ret
xchg
dec
pop
sti
je
adc
loope
pop
xor
popa
ljmp
outsl
ficompl
data16
inc
adc
adc
daa
add
cltd
scas
inc
push
cltd
xchg
test
gs
mov
sbb
dec
add
ja
jno
out
orl
iret
mov
mull
push
movsl
sbbb
lret
or
inc
jae
and
dec
dec
imul
jnp
roll
clc
push
inc
popf
fmuls
aam
fsubp
int
adc
xlat
or
popf
out
leave
fistpl
or
idiv
push
cmp
out
add
in
mov
push
cmp
inc
loop
outsl
cmpsl
xlat
popa
or
stos
pop
mov
test
inc
fcmovnb
jnp,pt
shrb
cld
icebp
loope
insl
push
jp
mov
push
dec
cli
xchg
aad
mov
jmp
push
test
mov
repz
out
dec
jecxz
pop
lods
jp
xchg
jge
or
test
popa
pop
ss
ret
sti
loop
mov
orb
pop
es
iret
push
and
cmpb
cli
stos
fldcw
test
incb
cli
stos
push
and
addb
negb
das
loop
jge
xor
lcall
push
jno
inc
push
sti
mov
sub
mov
out
popf
mov
lret
cmpsl
adc
xchg
sub
jl
pop
aam
aam
movsb
sbb
mov
or
xchg
adc
cmp
inc
pop
mov
add
ret
push
out
pop
outsb
jbe
pop
bound
xlat
or
xchg
or
shl
idivb
hlt
xor
fists
jmp
sub
sbb
aam
idivl
add
ds
sub
mov
outsl
jbe
popf
es
inc
outsb
pop
js
push
push
xchg
in
mov
push
cmp
add
sbb
pop
fidivrs
jae
addb
repnz
mov
movsb
imul
jecxz
imul
lds
loopne
xor
xor
js
sub
and
lret
aam
mov
int3
adc
and
xor
scas
jne
idivl
mov
or
xchg
pop
in
pop
fmuls
clc
hlt
inc
mov
int3
mov
inc
leave
pop
push
cmpsl
cmp
jae
push
jmp
mov
test
mov
sahf
fst
push
adc
mov
jmp
dec
int
cmp
fsubrs
lods
jmp
mov
cmp
jle
mov
scas
sbb
inc
sti
and
sbb
movsb
and
pop
addr16
cltd
aam
stos
jbe
cmp
out
add
dec
jmp
sbb
cmp
popa
stos
xchg
mov
fcomps
fwait
pop
inc
stos
rcll
bound
mov
idivb
xorl
pop
lods
arpl
lods
aaa
inc
es
out
mov
inc
iret
jmp
decb
imul
push
or
cwtl
notb
jno
mov
repz
or
and
mov
out
cli
lock
or
je
xor
cli
dec
pop
cwtl
mov
or
imul
sub
stos
adc
lock
out
fdivs
mov
cwtl
add
icebp
and
test
scas
pop
jae
push
pop
mov
popf
adc
scas
repnz
adcl
out
fmulp
int3
bound
add
push
out
push
rcll
scas
adc
insl
add
loope
lods
add
lds
dec
repz
pop
in
pusha
dec
push
cli
int
mov
lods
jp
jp
mov
clc
jns
inc
lea
loopne
call
cmpl
out
leave
jae
xchg
lds
mov
push
mov
js
sub
mov
add
lcall
push
dec
mov
inc
fsubrs
test
pcmpgtw
adc
dec
push
mov
jge
jns
mov
shl
xor
mov
aas
loop
and
jns
lahf
leave
inc
pop
lea
cmpsl
inc
pop
dec
nop
and
pop
xchg
pop
mov
mov
hlt
adc
xchg
das
jb
or
lock
xor
sbb
inc
scas
sub
pushf
ljmp
rorb
repnz
out
mov
sbb
mov
in
aad
jae
into
fs
pop
fcoms
lods
aaa
sahf
mov
ret
cmpsl
and
aad
roll
pusha
mov
pop
and
call
xchg
mov
lds
cmp
lods
inc
jne
fistl
gs
add
aam
sahf
and
ljmp
add
dec
inc
aas
sub
test
dec
mov
mov
mov
nop
xor
imull
mov
xchg
inc
in
dec
dec
and
mov
movsl
jnp
negl
inc
and
mov
mov
sbb
mov
xchg
cmp
mov
enter
clc
adc
xor
adc
mov
or
lcall
ljmp
fnstcw
fdivrp
sub
rcrb
sub
lock
outsb
mov
adc
sbb
mov
imul
dec
dec
aaa
clc
jmp
int
stos
ss
and
shrb
jo
push
xor
mov
jmp
cmp
stos
mov
in
jae
xchg
stc
lcall
dec
adc
jne
jbe
pop
cmpsl
jle
cmc
push
divl
cli
ljmp
jmp
test
aas
sub
xor
iret
hlt
loopne
sub
cs
cli
insb
ror
push
dec
aaa
add
pop
sbb
outsb
inc
bound
ja
mov
ja
sbb
cmp
test
in
movsl
je
repnz
stos
mov
fs
cs
inc
mov
not
jmp
out
pop
movsl
call
int
sub
fsubrs
mov
add
lock
or
stc
aad
push
inc
push
daa
enter
cltd
mov
adc
push
jne
movsb
test
repnz
ret
xchg
and
lret
repnz
ss
int
mov
test
mov
nop
xchg
rcrl
cs
xor
xchg
inc
push
add
test
aam
notl
daa
sbb
mov
dec
dec
fisubrs
mov
aaa
cwtl
ret
jo
and
faddl
ret
and
das
ss
mov
jne
xchg
fbld
pop
mov
shrl
or
sahf
pop
repnz
push
out
or
in
sub
mov
fsubl
dec
scas
popf
jle
dec
jne
and
test
push
lods
ret
mov
pop
loopne
and
jmp
in
jecxz
jbe
repz
adc
jno
cwtl
imul
int3
xor
push
xchg
adc
aaa
loop
mov
cmpsl
jl
sbb
push
xchg
addr16
inc
mov
jns
xchg
dec
adc
and
jle
pop
jmp
sub
inc
pop
add
mov
push
or
iret
add
mov
inc
ret
enter
cmp
xchg
xor
sub
push
or
mov
jae
sti
mov
fwait
sarb
push
iret
and
insb
das
push
or
jecxz
xor
sub
in
add
popa
push
push
jg
xchg
incl
pop
jg
mulb
int3
sub
or
outsb
sahf
dec
lret
cmpsb
cmp
dec
daa
js
pop
xchg
mov
sub
data16
cmpsl
mov
xchg
jmp
push
xor
dec
sub
mov
jo
jns
pop
dec
test
cmp
dec
pushf
out
sar
in
enter
jae
mov
inc
xor
mov
aam
and
mov
gs
mov
xor
ret
js
test
xchg
dec
fldenv
fldl
jb
scas
rorb
sub
je
mov
inc
jl
dec
jge
inc
sub
pusha
rcrl
inc
jne
xchg
adc
iret
sbb
pusha
insl
addr16
adc
dec
pop
pop
scas
in
push
push
mov
lret
insl
stos
fcomip
or
enter
jp
shrl
js
mov
adc
pop
dec
aaa
inc
push
pop
dec
divb
jmp
jmp
fs
test
jb
test
and
pop
and
test
int3
xor
insl
aam
or
adc
jle
sti
stc
xchg
dec
fwait
mov
je
das
into
push
jmp
mov
cmpsb
sbbb
fistpl
rorl
mov
xor
pop
lret
out
xchg
mov
mov
jge
rclb
xchg
jns
or
mov
sub
adc
xor
dec
test
out
leave
sub
sti
sbb
or
shll
popf
cmp
mov
mov
dec
adc
add
int
push
int3
stos
mov
pop
stos
repnz
lock
mov
cmp
movsb
js
rdtsc
or
sub
inc
ret
jmp
dec
fisubrs
rcll
cmpsl
mov
dec
push
shrb
scas
pop
mov
cmp
jecxz,pt
pusha
pusha
xor
pop
test
int
jo
pop
sti
sub
fwait
mov
mov
out
push
mov
adc
push
sub
or
pop
pop
cmc
rorl
or
js
and
test
fstpt
adc
leave
aas
push
jae
jo
add
cli
jnp
call
mov
xor
jp
xchg
xor
in
shl
mov
lcall
lret
xchg
lret
inc
mov
loope
cld
loopne
outsl
xor
jo
out
mov
decb
insb
cmp
lods
xlat
jb
or
and
and
sub
dec
cmp
mov
repnz
fxch
fwait
sbb
pop
pop
jne
mov
push
pop
call
jl
hlt
insl
dec
insl
cmpb
pop
xlat
pop
out
mov
and
mov
mov
cli
pop
cmc
xor
xchg
inc
push
sbb
mov
loop
add
mov
pop
fcomps
subl
into
popf
mov
or
test
add
les
test
push
and
call
mov
stos
addr16
jp
insb
nop
add
les
adc
xorl
clc
lcall
pop
mov
dec
jecxz
fs
fisubrs
jmp
fsubl
jp
loope
mov
ret
arpl
xchg
xlat
sub
es
adc
movb
mov
pop
xchg
pop
jno
into
stos
push
data16
ss
jmp
push
push
cmpsl
insb
stos
icebp
pop
ss
lods
sub
and
sti
push
add
gs
mov
xchg
mov
pop
and
sub
or
fisttps
adc
dec
push
adc
sub
lcall
push
out
push
inc
push
scas
out
xor
popa
mov
jae
or
pop
push
ss
jns
aam
outsl
fisubrl
aas
repz
xchg
dec
popf
dec
lcall
aas
add
in
aaa
pusha
imul
std
push
popf
mov
fists
jae
cmpsl
pop
add
jne
fistl
mov
cmp
xor
fbld
popf
cli
mov
add
ret
lret
mov
sbb
jg
pop
xchg
mov
xchg
push
adc
inc
inc
push
inc
das
pusha
pop
decb
dec
cmc
subl
decb
cld
push
das
incl
and
loopne
pop
std
dec
mov
jmp
add
aad
xlat
aaa
adc
pop
mov
leave
andl
ljmp
loop
pop
and
inc
bound
scas
ss
mov
jne
repz
or
xor
mov
cmp
out
sbb
pop
xor
lahf
testl
enter
ret
call
pop
pushf
scas
into
sub
mov
inc
push
cmp
add
inc
push
mov
hlt
or
lods
pop
fisubs
sub
lock
movsl
sub
dec
out
xor
adc
std
xchg
mov
lock
xor
xchg
popf
sub
popf
aaa
scas
roll
sub
jp
out
mov
arpl
xor
fldl
popf
dec
out
sar
je
dec
repz
lcall
add
jbe
xor
jne
imul
test
dec
jecxz
cmp
fwait
in
sub
sub
xchg
les
add
pop
pop
mov
or
jle
dec
xchg
inc
cmc
mov
sub
xor
push
sbb
icebp
mov
rorl
adc
pop
shl
lods
pop
rclb
mov
dec
subl
sub
jmp
repz
pop
pop
iret
mov
pmovmskb
lcall
roll
inc
push
or
or
mov
mov
pusha
inc
ds
pushf
mov
jne
cmp
dec
ljmp
nop
cld
sbb
adc
movsb
sub
subb
popf
lret
divb
cmp
adc
adc
push
dec
int
jnp
pop
ja
ret
and
sub
dec
mov
bound
loop
pushf
out
incl
mov
mov
call
jno
or
outsb
jg
mov
push
inc
in
xor
mov
lods
loope
call
jns
loop
lret
xor
test
push
ss
cld
out
lods
xchg
into
push
add
lods
push
jb
fcmovu
popa
mov
lcall
push
mov
push
fsts
push
mov
mov
add
lahf
mov
lods
cld
fstpt
jne
pop
movsb
outsb
mov
ret
pushf
int3
push
leave
jp
int3
cmp
jl
xor
lcall
push
and
sbb
test
repz
jge
mov
add
xlat
lods
fidivrl
insb
and
imul
cmpl
lret
pop
cmpsb
in
dec
mov
std
std
lret
in
add
mov
int3
dec
xor
ja
adc
lahf
cmp
cmpsb
inc
add
dec
adc
mov
aas
mov
arpl
jb
mov
push
xchg
in
dec
push
out
sub
adcb
bound
and
outsl
xor
test
sub
push
or
sarl
enter
dec
decb
scas
fstps
push
arpl
cltd
lds
pop
mov
sub
out
insl
adc
sub
mov
inc
adc
and
imul
dec
insb
aam
jle
sar
add
sub
xor
in
cmp
xor
cmc
movsl
add
fadd
cmpsl
mov
outsb
xchg
outsb
or
mov
bound
jl
inc
jnp
or
es
adc
andl
ret
movlps
pusha
in
sub
adc
xor
cmpsl
mov
fdivrl
rclb
mov
daa
orb
mulb
lea
jne
dec
jbe
sbb
pop
push
push
adc
loop
inc
in
xchg
fyl2x
popf
leave
xor
arpl
adc
fildl
mov
bound
pop
movsb
shr
nop
sti
aas
mov
xor
loopne
inc
pop
in
adc
mov
mov
jae
addr16
fs
jo
mov
pop
sahf
idivl
jno
inc
xchg
cmpsl
xor
sub
repz
inc
cs
sub
test
jae
cli
lods
outsb
fisttpll
mov
xor
jo
test
and
subb
mov
add
push
sarb
das
jne
neg
scas
andb
mov
stc
cli
push
add
test
pop
in
sub
cmpsl
sbb
push
addr16
sbb
jp
inc
stc
push
lea
mov
sub
andl
xor
popa
ret
dec
or
jbe
shrb
push
dec
add
scas
xor
aaa
pop
xor
out
jo
mov
jl
mov
push
sub
lods
cmc
jbe
dec
loop
jbe
test
xchg
push
mov
sub
aad
or
sahf
hlt
in
cmpsb
jbe
dec
and
sar
push
jno
movsb
or
inc
mov
jl
in
test
mov
shlb
addr16
xor
cld
filds
cmp
mov
sbb
sub
stos
push
repnz
jge
nop
dec
push
inc
rcrl
repnz
dec
adc
pushf
int3
int3
or
sub
inc
pop
jp
inc
inc
das
repz
fisttps
mov
icebp
loope
popf
fisubl
pop
adc
or
in
leave
and
pop
jo
sbb
stc
dec
fdivrs
loope
inc
pop
mov
dec
push
lea
xchg
int3
sbb
pop
and
ficompl
mov
cmp
dec
div
add
pusha
out
pop
push
jg
xchg
inc
jno
or
jb
sbb
and
push
jmp
cmp
dec
push
pop
orl
add
mov
pop
xor
ret
inc
and
cs
jb
pop
xchg
push
sbb
popa
sbb
bound
add
add
les
fnstenv
push
testl
inc
je
sar
faddl
or
int
cwtl
ss
mov
mov
lret
push
test
idiv
push
jl
fmul
sub
ja
pop
xorl
test
lock
cltd
mov
loopne
test
mov
out
inc
out
negl
xor
jno
int
push
cmp
xchg
jb
adc
cmp
fs
pop
and
mov
out
in
inc
les
sarb
and
rcl
xor
pop
push
pop
stos
leave
adc
ret
negb
jb
or
inc
repnz
pop
cmp
push
mov
lock
outsb
in
aad
insb
sbb
bound
push
mov
pop
inc
adc
push
movlps
xlat
cmp
and
xor
aas
das
iret
cmpsb
jno
push
mov
ret
mov
pusha
sbb
inc
xchg
adcb
xor
inc
orb
mov
mov
push
xchg
mov
mov
inc
es
cwtl
dec
sbb
out
jmp
outsb
adc
aaa
cli
icebp
lret
mov
data16
test
out
repnz
mov
pop
add
pop
sbb
outsl
in
pop
cld
outsl
mov
mov
cmpl
xchg
adc
cmp
push
sbb
sbb
fwait
push
fsubl
xor
pop
jp
repnz
clc
std
das
aas
or
inc
xchg
in
fstpl
fdivl
bound
rorb
jecxz
lahf
stos
test
shl
fstps
push
add
cmc
adc
fadds
movsb
aaa
icebp
cmp
aam
sub
and
pusha
add
loop
xchg
into
aam
mov
cmp
adc
insb
or
adc
add
mov
std
and
fisubs
inc
mov
xchg
mov
das
jg
pop
mov
adc
mov
sbb
mov
pusha
arpl
lock
lcall
loope
cs
and
movsl
pop
negl
mov
sub
mov
nop
filds
popl
or
stos
xchg
shll
sbb
and
cltd
adc
leave
ficompl
jb
leave
stos
shr
sub
fdivl
fldenv
adc
bound
lcall
fisttpll
xchg
mov
cmp
jne
inc
imul
mov
lock
mov
xor
adc
test
mov
mov
jns
sbb
sub
inc
mov
icebp
dec
sbb
adc
into
push
jmp
inc
out
sbb
cmp
or
shlb
cmpsl
test
cmc
xor
leave
mov
shl
test
notb
loope
test
inc
rorl
jo
sbb
cmp
divl
loopne
aaa
arpl
rolb
int
jns
cmpsb
jle
jl
daa
stos
mov
gs
repnz
inc
mov
mov
mov
jmp
rorl
lahf
dec
test
adc
adc
ret
jg
repz
mov
or
xchg
xchg
int3
sbb
ja
shlb
and
sbb
fistpl
sbb
and
cmp
add
jno
stos
pusha
jo
cmp
nop
test
out
fnstcw
cmp
lock
and
cs
ret
xchg
cld
inc
or
loop
mov
mov
aad
loop
stc
jae
loope
shlb
cmc
das
stos
ja
push
in
jle
or
fisubrl
loope
call
jecxz
je
pop
inc
iret
mov
pop
xor
inc
subb
or
test
inc
stos
nop
xchg
and
mov
addr16
sbb
nop
jecxz
out
xchg
gs
sbb
push
cs
lea
jle
sahf
xchg
mov
jmp
add
mov
in
lret
fidivl
xorb
fistps
cltd
int
xchg
dec
call
ljmp
clc
add
xchg
fucom
pop
movsl
ljmp
mov
ret
cmp
ss
xor
push
push
jge
push
pusha
xchg
lock
scas
jnp
sbb
addl
es
inc
stc
sub
cwtl
movsb
mov
cmp
shll
mov
mov
imul
dec
inc
mov
ds
sbb
testb
lahf
lgs
pop
push
movsb
jo
sub
std
imul
sbb
or
and
jnp
jl
dec
xchg
fists
ja
mov
mov
fnstcw
push
hlt
cmp
rcrb
and
sub
xchg
mov
mov
fistl
inc
loop
ficompl
cli
test
adcl
imul
dec
cs
mov
mov
push
xor
rcr
arpl
test
lds
or
cmp
mov
and
cmp
sub
mov
and
es
inc
dec
popl
jge
cmpsl
repnz
xchg
push
jg
lods
jl
push
in
ficompl
or
nop
repz
cmp
mov
pop
adc
clc
mov
lret
and
out
cli
push
in
cmp
std
push
shrb
jnp
repz
sbb
movntq
adc
fidivl
int
mov
sbb
mov
test
jge
aam
cmp
pop
push
jmp
jg
mov
xchg
push
je
into
xor
idiv
push
adc
das
mov
xorl
inc
addl
aas
je
sub
sub
mov
in
mov
outsb
cmc
lret
je
ljmp
or
ret
mov
addr16
roll
dec
int
push
jp
lds
enter
inc
cmc
fisubl
pop
pusha
fimuls
ja
or
popf
int3
and
pushf
imul
xor
lods
lods
clc
lods
lret
inc
and
jle
in
and
loop
out
test
mov
pop
sub
cmp
test
rorl
out
lahf
xor
pop
xchg
push
xchg
cmp
fldl
ljmp
shrl
sub
test
mov
in
test
scas
movsl
sbb
iret
movb
push
addr16
fs
out
jb
pop
or
mov
adc
cmc
push
cmp
fstp
add
dec
cmpsb
out
inc
push
mov
lahf
mov
fstl
jo
imul
repz
jae
lret
pop
push
es
mov
mov
xchg
or
push
ss
jnp
mov
mov
sub
icebp
lods
outsb
mov
xchg
stos
into
or
adc
popa
stos
xlat
sbb
dec
inc
out
mov
xchg
inc
mov
mov
out
cs
stos
adc
jl
mov
jns
push
lret
mov
addr16
fildl
adc
dec
ljmp
ficoml
hlt
notb
out
adc
inc
scas
push
mov
push
arpl
sbb
add
inc
jns
in
lcall
fsubrp
add
lock
and
lcall
inc
lods
push
dec
jp
ret
js
ds
pushf
imul
push
orl
hlt
sub
pushf
in
scas
movl
mov
push
add
push
mov
add
shl
mov
aas
rcl
jecxz
int3
push
push
and
outsb
xchg
pop
cmp
daa
inc
and
jnp
cmpl
pop
addb
ret
pop
divb
lret
sbb
push
sbb
mov
cmc
push
adc
test
sti
pop
js
ret
int3
inc
scas
jmp
and
pop
dec
pop
mov
dec
subl
insb
mov
add
cmp
lods
loope
sub
dec
daa
out
outsl
push
out
loopne
cmpb
inc
in
xor
das
xchg
jl
push
imul
ja
jae
push
cmp
fwait
and
or
imul
fsubrs
mov
nop
movb
sub
std
xchg
add
pop
iret
gs
sub
push
cwtl
cld
iret
sbb
iret
add
cmp
setge
cmp
cmp
aam
or
ljmp
mov
sub
arpl
mov
inc
adcl
aas
nop
andl
loop
out
or
jns
mov
adc
data16
iret
jp
scas
or
push
push
loope
sub
sbb
or
or
andl
mov
rolb
imul
jl
sbb
jg
xlat
addr16
out
mov
add
push
outsl
packssdw
jmp
push
mov
add
push
fcomps
cs
jle
mov
ja
adc
jns
rcrl
ja
addl
adc
xchg
fisubs
inc
enter
arpl
arpl
pop
pop
jns
inc
xchg
idivl
out
or
pop
add
inc
lock
stc
out
and
aam
cwtl
add
int
mov
iret
repnz
or
scas
mov
mov
ja
dec
loop
pcmpgtb
or
imul
pop
pop
jae
daa
popf
out
sub
cld
add
sub
repz
or
mov
mov
std
outsb
lods
mov
into
xchg
jmp
fwait
ja
call
mov
int
cmp
out
rorb
add
pusha
or
aaa
mov
mov
bound
ret
dec
std
mov
addb
out
mov
jbe
mov
lret
mov
dec
inc
out
sar
scas
fcomip
insb
mov
jp
xchg
fisttps
adc
inc
out
push
and
test
mov
adc
xor
pop
push
es
fmuls
or
inc
inc
mov
in
sahf
in
cltd
sbb
mov
cmp
ficoms
daa
mov
and
outsb
in
in
sub
cmp
inc
idiv
cmpl
popf
jmp
mov
xchg
and
fadd
pop
push
mov
hlt
sarb
scas
xlat
pop
adc
popa
push
inc
and
out
aam
xor
fdivr
ficoml
call
mov
mov
cli
ljmp
jecxz
xchg
jge
inc
push
mov
xorb
jecxz
mov
push
fbstp
pop
sbb
es
sub
rorb
or
or
xchg
loop
movsl
dec
faddl
stos
fdivl
mov
les
sbb
pop
lds
cltd
pushf
jecxz
aad
sub
jmp
adc
aas
mov
or
fbstp
pop
es
jbe
mov
das
aaa
aas
jo
std
push
inc
jmp
adc
sub
xor
push
adc
cmpsb
in
inc
sarl
popa
xor
nop
mov
mov
adc
or
xchg
test
cld
mov
mov
cmp
out
jo
xor
pop
mov
cmp
xchg
pop
andb
stc
daa
push
and
out
mov
popa
mov
pop
mov
bound
cmp
mov
loop
aas
xchg
adc
leave
and
loopne
xchg
mov
jo
fsubrl
xchg
add
cmp
pop
popa
jns
and
mov
xchg
out
pop
shl
mov
inc
and
mov
das
lods
dec
pushf
js
adc
div
inc
imul
imul
xor
fsub
enter
sbb
lret
mov
outsb
rcll
xchg
xor
punpckldq
inc
fnsetpm(287
fmul
add
imul
inc
mov
fsub
call
push
push
scas
ljmp
data16
rcrl
jmp
push
scas
inc
std
jecxz
imul
pop
jp
or
mov
push
mov
xor
jne
cli
mov
xchg
xor
jl
xchg
loopne
jae
push
mov
scas
cmp
daa
lock
cmp
sar
enter
ret
and
rclb
cmp
cmp
pop
fwait
mov
xor
or
push
jno
xchg
xor
or
js
ret
add
xlat
mov
cmp
rclb
ret
loopne
pop
pop
or
cmp
mov
jne
rclb
call
xlat
sub
jnp
inc
cld
pop
sbb
outsb
popa
gs
inc
cmp
xchg
ja
lret
and
cltd
xchg
aam
mov
lret
pop
pop
in
pop
nop
dec
push
sbb
pop
push
mov
jl
fs
dec
mov
cmp
jge
sub
and
mov
jge
add
xchg
out
cmpsb
add
cmp
data16
rolb
dec
inc
insb
fmuls
or
cli
inc
mov
shlb
sbb
lret
cmpsb
arpl
imul
and
sbb
aaa
mov
outsl
jns
adc
in
in
push
mov
dec
push
push
push
inc
push
cli
and
arpl
xor
mov
adc
inc
in
pop
fs
in
repnz
xor
mov
iret
jo
cmpsb
out
mov
cmp
test
roll
stos
cmc
inc
cmp
add
adcb
das
mov
sbb
js
ss
and
mov
lahf
mov
xchg
cmp
ret
push
add
adc
mov
and
sub
push
movsl
sub
arpl
out
sbb
mov
dec
xchg
add
mov
inc
popw
push
sti
ds
dec
lea
xor
loope
mov
nop
enter
rcrl
roll
or
jecxz
std
and
mov
jne
pop
xor
data16
test
pop
test
icebp
sahf
add
dec
cld
sub
cmp
loope
xchg
xor
outsb
test
pop
je
aam
mov
cmp
jmp
fbstp
jno
mov
repz
add
sahf
data16
sub
cmpsb
loopne
or
lret
stos
lods
fiaddl
push
jno
jg
and
mov
popa
and
lock
mov
mov
cmp
sub
jmp
outsl
sub
lcall
pop
orl
adc
in
sbb
sti
sbb
ss
popa
mov
pop
ss
ja
dec
cld
enter
pop
nop
dec
adc
pop
xchg
add
idivb
paddusw
bound
out
rorb
or
inc
popa
bound
insl
push
pop
mov
in
jnp
mov
cltd
aad
lea
out
divl
dec
scas
jp
negl
pop
fwait
jmp
cs
xchg
add
fisubs
out
mov
add
stos
jmp
sub
mov
loop
faddl
cld
push
push
pushf
shlb
mov
out
inc
ret
sarb
shlb
std
les
adc
pop
fadd
push
xchg
push
mov
jecxz
push
ljmp
xchg
mov
mov
jge
push
test
in
xchg
cmp
or
sbbl
and
negb
push
imulb
dec
jae
dec
cltd
mov
rolb
mov
movsb
push
xchg
mov
sbb
mov
cmp
pop
inc
test
shlb
out
cmpsl
mov
fsubrl
push
filds
add
mov
jle
fisttpll
mul
movsb
mov
inc
or
nopl
push
insl
dec
imul
rolb
mov
jg
in
cmc
xchg
stos
popa
push
je
mov
data16
or
mov
in
dec
push
mov
push
xorb
addl
mov
cmpb
mov
lods
hlt
lahf
repnz
xorb
sarb
push
lret
push
sarl
or
and
pop
pop
jbe
ja
push
dec
inc
test
cmpsb
sti
loopne
inc
stc
push
and
cwtl
outsb
movsb
loope
pusha
cmpb
xor
inc
jns
lret
or
or
pop
jae
jmp
fisttpl
nop
push
bound
jbe
out
xchg
cmp
ret
pop
push
or
pop
mov
aas
push
lock
jno
repz
add
xor
lods
mov
ret
xchg
sarl
enter
mov
test
popf
popa
jnp
nop
sbb
pop
out
or
mov
nop
sub
inc
pushf
sub
mov
jmp
adc
cmpsb
jnp
mov
les
mov
xor
sbb
test
jmp
negb
in
fmuls
jp
lods
mov
andl
adc
jno
fs
es
adc
dec
jae
mov
jg
popf
into
add
in
clc
push
adc
test
jno
mov
xor
cs
mov
jecxz
cmpsb
stc
xorb
bnd
sbb
test
inc
repz
cli
pop
sbb
cmc
xor
mov
je
xor
pop
subb
loope
xchg
push
jne
paddusw
nop
add
scas
push
sbb
cld
jb
cltd
jns
std
pop
sub
push
push
inc
jb
cmp
aas
mov
cmp
jge
bnd
sbb
stc
push
sahf
cmc
ljmp
adc
in
insl
cs
ficoms
shll
fsubr
cld
in
push
or
jle
fcompl
add
adc
out
daa
jne
mov
push
mov
ss
daa
and
fwait
push
loopne
les
ss
popf
jb
stos
icebp
arpl
data16
mov
lods
sub
or
das
add
loop
movb
xchg
aaa
sarb
mov
outsb
test
adc
out
fwait
pop
dec
cmpsb
fsts
cwtl
lea
push
or
xorb
push
test
and
fsubrs
xchg
push
les
loop
in
mov
js
mov
popf
xor
iret
push
pop
xor
push
jns
out
adc
mov
xor
and
cmp
imul
sbb
cmp
pop
cmp
mov
rclb
mov
int3
repz
sbb
stos
dec
push
push
cmp
aaa
pop
mull
into
aam
adc
or
pop
fcomps
dec
xchg
repz
outsb
or
and
mov
int3
ljmp
or
xor
xor
mov
jl
xchg
mov
ljmp
xor
inc
pop
addl
mov
push
cs
mov
movsl
xchg
incb
lahf
ret
shlb
fistl
mov
out
pop
or
sbb
ja
cwtl
cmc
stc
aaa
push
loopne
ret
mov
jns
xchg
cmp
pushf
enter
mov
fs
dec
movsl
scas
fmull
mov
adc
ret
inc
rorb
xchg
push
repz
mov
pop
mov
repnz
out
mov
call
and
adc
shr
int
shlb
inc
xor
mov
adc
push
push
popa
xchg
cs
jb
xor
ret
pop
dec
mov
movsb
les
sub
cs
sub
stos
sbb
lret
adc
negl
test
xchg
pop
jne
idivb
sub
mov
jns
or
loop
push
fldenv
mov
stc
jbe
jl
xchg
aas
jno
outsb
push
jo
mov
lock
test
xor
or
rcll
js
into
sub
pushf
jl
xchg
jmp
inc
stos
dec
test
dec
or
or
shll
fsubr
ret
icebp
inc
popa
repz
adcb
adcl
cmp
xchg
sbb
movsl
mov
js
dec
cmp
iret
add
inc
cmp
mov
xchg
dec
mov
shlb
or
dec
shr
pop
movsb
data16
mov
ljmp
iret
pop
add
mov
sbb
push
imul
ret
lret
in
cmpb
lea
cmp
cs
clc
push
int3
daa
int
jmp
mov
mov
sahf
imul
dec
outsl
or
pop
int
push
sbb
pop
jns
in
inc
mov
negb
mov
je
jns
or
scas
push
xor
push
data16
pop
nop
or
cmpsl
xor
mov
cli
xchg
lock
lcall
test
imul
fsubrl
imul
shrb
mov
in
push
inc
sbb
xchg
shll
mov
fdivl
adc
pop
mov
mov
inc
roll
pop
push
flds
cs
add
xchg
xor
xor
and
ljmp
mov
xorl
push
dec
out
add
dec
loopne
cmp
xlat
adc
pop
pop
xchg
bound
repnz
pop
cmp
int
jnp
out
xlat
fldenv
pop
sub
out
into
pop
gs
mov
lds
mov
sub
inc
jae
int3
out
add
loope
push
cmp
mov
aas
adc
and
rcrl
stos
scas
insl
pop
mov
xchg
enter
mov
shrb
incb
pop
iret
aaa
cli
push
incb
push
xchg
clts
clc
lret
inc
cld
inc
inc
out
fdivrp
add
jle
shrl
push
dec
cmpsb
loop
sbb
mov
call
sbb
cmp
lret
outsb
pushw
and
scas
cmp
push
xor
js
mov
lea
outsl
dec
insb
dec
or
cmc
cmp
sub
sbb
pop
stos
ja,pt
and
in
pop
js
das
push
mov
mov
mov
gs
ror
inc
jnp
adc
sub
inc
xor
and
add
rcrb
mov
test
cmpsb
sbb
pop
enter
aam
dec
sub
add
sub
jae
rcl
xor
mov
push
out
cmp
les
in
mov
xchg
push
xchg
xchg
lret
inc
pop
inc
mov
aad
dec
and
jnp
inc
cmp
inc
stc
inc
insb
push
cli
cmc
popf
xchg
pop
mov
mov
sti
xchg
stos
mov
fdivr
xor
cmp
enter
xor
popa
mov
mov
mov
lds
jecxz
or
mov
cwtl
push
loop
mov
dec
mov
push
mov
in
mov
daa
imul
jne
cmp
addr16
mov
jg
aas
pop
pop
outsb
adc
fs
dec
xor
pop
sbb
ficomps
decl
es
rcll
cmp
add
jle
pop
in
in
repz
lds
enter
iret
testb
loope
xchg
dec
cmp
jl
arpl
stos
sub
add
sbb
pop
xchg
cmpsb
fwait
push
jle
mov
add
clc
shlb
outsl
jns
lods
pusha
and
mov
adc
test
push
xor
mov
mov
jno
stos
pop
mov
mov
idivb
sub
xchg
push
out
and
jle
mov
cmpsl
repz
cld
xor
das
jne
pop
or
add
es
insl
jbe
inc
mov
pusha
dec
repz
testl
outsb
xor
inc
or
xchg
pop
mov
or
fs
int3
frstor
stc
mov
jp
push
test
dec
push
and
push
ja
out
lcall
hlt
mov
adc
int
jl
pop
xchg
mov
lods
mov
out
xor
gs
sahf
in
inc
aad
cmpsb
dec
mov
pop
cmpsl
rcrl
or
cwtl
icebp
push
stos
mov
int3
adc
mov
mov
pop
ficompl
mov
fcoms
push
mov
repz
out
lret
inc
pmaxsw
mov
jbe
popf
int3
push
sbb
pop
out
pop
bound
or
jl
push
addl
jl
pushf
decb
jb
jno
fcomps
lret
dec
cmc
jae
int
repnz
sbb
or
enter
push
add
bound
jl
jecxz
pop
sbb
arpl
pop
push
out
dec
cwtl
rolb
in
insb
mov
mov
push
outsl
xor
xchg
daa
xor
je
mov
iret
outsb
mov
push
out
sahf
sub
inc
or
jns
push
push
jle
add
das
sahf
mov
test
cmc
push
pop
faddl
mov
xor
les
aam
ja
ret
stos
cld
out
jg
shl
pop
cmp
xchg
shll
cmp
movb
shrb
mov
cmpl
int
std
fidivrl
stc
add
scas
mov
js
icebp
push
bound
xor
faddl
xchg
xor
mov
xchg
lret
dec
fwait
jne
cmp
data16
test
bnd
xchg
xor
pusha
cmc
negl
mov
inc
imul
or
loope
negb
leave
dec
add
mov
inc
sbb
fcoml
out
push
xor
jecxz
test
xor
out
in
les
and
rclb
mov
ljmp
xchg
push
pop
add
fimull
vpshad
addl
daa
movsl
imull
cmc
mov
lods
xor
cli
pop
in
mov
sbb
push
cwtl
lret
fdivl
pop
je,pn
mov
pop
xchg
xchg
and
fwait
mov
jge
lods
insl
stc
mov
test
popa
inc
das
sbb
pop
cmc
jnp
lea
xlat
sbb
les
stc
jle
pushf
cli
sub
pop
push
add
out
out
stos
inc
xchg
mov
and
and
dec
ja
add
xchg
lods
adcb
inc
mov
rcrb
cmp
dec
aad
mov
push
dec
sbb
fs
or
sub
das
mov
out
pop
lods
xorb
push
in
mov
push
jo
aas
into
pop
iret
sbb
incl
cmp
push
inc
xchg
sub
sub
das
jp
mov
shlb
push
jo
sbb
sarb
jg
cmp
pop
jnp
dec
andl
lret
and
imul
push
dec
inc
or
arpl
dec
sub
mov
in
test
or
cwtl
mov
es
lret
std
mov
xchg
pop
insb
repz
xor
mov
push
mov
fdivrs
icebp
fwait
mov
jb
mov
sub
inc
aaa
mov
xchg
leave
dec
add
inc
adc
fistpl
or
xchg
mov
scas
inc
fistps
xchg
fists
xor
inc
add
testl
xchg
mov
aad
push
test
mov
push
int3
dec
jmp
add
xchg
mov
and
xchg
leave
lahf
cmc
ret
sub
jge,pn
das
arpl
inc
cs
jp
loopne
xor
lock
sbb
lret
out
xchg
add
adc
std
cmpl
mov
ss
out
daa
popa
int3
ss
mov
aad
or
ret
fs
lcall
pop
add
idivl
popa
lods
pop
mov
add
out
cmp
pop
push
mov
inc
lcall
fstpl
and
stc
dec
xor
cmp
scas
jge
fimuls
js
rcr
shl
icebp
mov
jae
faddl
mov
lods
mov
loop
fwait
adc
movl
idivl
arpl
jnp
pop
xchg
add
jnp
lahf
decb
ljmp
daa
popf
call
jbe
cmpsl
mov
mov
lds
or
pop
adc
mov
outsb
test
xchg
inc
xchg
fdivs
aas
push
rcrb
sub
mov
mov
mov
cltd
lods
cli
or
push
mov
lret
dec
mov
fbstp
aas
sbb
lds
xchg
lcall
xchg
sbb
dec
sub
mov
mov
loopne
movsl
push
test
movsl
loop
loope
cmpsb
push
ja
and
lahf
pop
outsl
jg
mull
sbb
sbb
dec
add
or
add
adc
xchg
leave
ret
and
int3
bound
clc
lret
lods
insl
out
pusha
cmp
fidivrl
jmp
push
dec
dec
and
lcall
fwait
into
add
or
cltd
xor
add
dec
cltd
push
imul
rol
xor
test
or
xchg
lods
in
popl
jb
loop
ljmp
jg
mov
cmp
adc
ljmp
or
jecxz
imul
sub
mov
xor
add
mov
jp
and
push
test
xor
aaa
arpl
mov
mov
jno
mov
push
adc
mov
aad
repz
js
cmp
fs
pop
mov
lret
imul
xchg
inc
stc
dec
and
mov
dec
or
adc
lock
sbb
stos
cmpsb
outsl
les
pop
push
inc
in
loopne
jle
adc
arpl
in
mov
add
cltd
sbb
and
in
and
or
push
nop
and
dec
scas
test
stc
xchg
fwait
ja
arpl
sub
sbb
lcall
ja
cs
fbld
lods
aaa
faddl
orl
push
test
daa
xor
dec
cmc
push
lahf
adc
xor
rcrl
lock
adc
xor
leave
lcall
mov
addr16
test
adcl
adc
sub
aaa
sbb
test
xchg
movsb
inc
lods
ret
lods
xor
pop
test
mov
adc
xchg
push
rol
aam
mov
lods
shll
mov
jbe
xor
mov
loop
and
add
ret
xor
sbb
out
lea
mov
cmc
in
notl
out
popf
mov
insb
repnz
jae
bound
popa
aas
loop
outsl
mov
sbb
sub
hlt
push
in
xchg
pop
adc
arpl
mov
mov
sub
mov
lret
addb
loop
repnz
dec
fdivl
mov
add
sbb
push
jle
pop
inc
sahf
xchg
addb
cli
test
bound
shrl
mov
sub
in
in
mov
enter
xchg
pop
out
jo
xchg
int
cwtl
fisttps
jg
cs
je
mov
xlat
pop
repnz
push
hlt
jle
icebp
xor
push
jne
xchg
cwtl
inc
lock
push
sub
nop
push
fucomip
js
dec
sbb
sub
mov
stc
sbb
sbbl
syscall
and
ja
dec
pop
insl
ljmp
fisubrs
ds
xor
dec
adcb
fstl
mov
rol
ror
jno
pop
loop
mov
shlb
mov
fwait
add
ret
addr16
into
dec
mov
inc
add
bound
cmp
push
pop
xchg
outsb
cli
aad
and
mov
test
je
stos
arpl
ds
lcall
icebp
inc
dec
imul
test
dec
ljmp
xchg
xchg
pop
out
not
mulb
and
xor
or
loope
outsb
adc
push
jae
inc
sub
pop
cmpsb
fcoms
sub
jg
mov
xchg
mov
test
movsl
lahf
inc
adc
jno
sbb
rcll
push
sbb
xor
push
mov
sti
dec
fs
sbb
scas
inc
sbb
ret
xchg
push
repz
inc
cmpsl
sub
inc
adcb
pop
mov
repnz
sub
inc
adc
lds
jp
pop
jecxz
cld
sbb
movsb
lahf
jae
outsb
sbb
in
cs
insl
inc
mov
jmp
jo
adc
xor
lock
ljmp
aaa
repz
outsb
xchg
jecxz
pop
jnp
lea
shll
dec
xor
addl
outsl
xchg
push
mov
sbb
xchg
ret
movsl
out
xor
mov
mov
pusha
daa
aam
cmpb
add
out
daa
fdivl
pop
getsec
negb
negl
mov
mov
mov
mov
pusha
rorb
mov
cmpsb
xchg
loop
out
nop
rcrb
push
in
xchg
flds
adc
jo
jecxz
ret
orl
cmp
xor
fistps
mov
lcall
push
jge
ficoml
in
pop
pop
popf
xchg
mov
or
cmpb
inc
sti
jp
pop
lods
xchg
data16
lea
xor
scas
xchg
push
xor
and
addr16
frstor
cwtl
ficomps
mov
lea
cs
data16
daa
aam
call
push
lds
inc
lret
mov
xor
loop
nop
out
xchg
mov
cmp
test
mov
jbe
in
push
push
mov
mov
lds
jecxz
data16
xor
sub
inc
dec
dec
jle
inc
and
xchg
sbb
adc
ret
xchg
popf
or
mov
addr16
orl
ret
cmp
or
out
std
jns
es
sbb
test
fisubrl
cmpsb
xor
xorl
loop
iret
outsl
imul
xor
sahf
add
test
xchg
dec
sbb
call
in
pusha
lods
das
in
dec
pop
pop
ds
lahf
sbb
not
adc
shl
sub
call
or
pop
fildll
popa
and
sub
lret
dec
sbb
mov
cwtl
add
cmp
add
test
daa
jnp
xchg
cmp
fadd
dec
push
das
adc
cmc
mov
add
push
pop
gs
cs
adc
out
gs
push
arpl
fldcw
push
and
adc
xchg
out
or
imul
jae
mov
inc
adc
orl
pop
and
pop
jge
sub
mov
sbb
or
loope
mov
les
push
mov
aam
loopne
xchg
int3
out
in
movsb
mov
jge
mov
pop
fsubrp
sbb
or
sbb
inc
or
ss
repz
xchg
mov
enter
dec
insb
xchg
push
xor
loope
mov
das
jl
or
dec
fsubl
jle
jb
icebp
shrl
fs
pop
insb
inc
push
mov
dec
xor
loop,pn
loopne
or
lret
shll
lock
sub
xor
daa
scas
fistps
imul
mov
test
ficoml
clc
es
sub
add
ss
ljmp
in
daa
push
cli
rcrb
adc
or
mov
bound
es
sbb
or
sbb
and
and
shrb
cmp
inc
insb
dec
nopl
faddl
fxch
stos
shrl
add
push
jp
or
cmp
scas
je
pop
js
mov
adc
test
add
fdivp
mov
push
fnsave
adc
mov
and
ja
inc
push
ret
and
imul
mov
ret
decb
je
pushf
fisubrs
sub
mov
repnz
movsl
dec
dec
push
mov
lds
push
xor
mov
out
mov
mov
fsubrs
sub
add
jle
lahf
xchg
insb
pushf
outsl
mov
cli
icebp
pop
loopne
inc
loopne
repnz
ss
sti
cmp
push
loope
dec
rclb
push
fcompl
or
addr16
es
std
push
lods
and
lds
loopne
int3
rcrl
inc
call
mov
cs
kmovq
enter
fmul
lea
ja
scas
dec
fs
pusha
movsl
adc
out
xchg
add
scas
gs
jg
mov
ds
rol
sub
js
in
hlt
rorb
lret
repz
rcrl
into
aas
xchg
cwtl
aas
js
hlt
je
and
stos
and
cltd
mov
push
pusha
inc
inc
or
and
pop
push
pop
adc
sub
icebp
maskmovq
testl
addr16
mov
fisubrs
mov
sahf
push
mov
movsb
arpl
adc
fistpll
xchg
and
movb
enter
pusha
subl
adc
sub
xchg
cmpsb
sahf
xchg
scas
adc
addr16
mov
daa
aas
mov
inc
int
dec
cmp
jg
and
xor
jns
sar
push
sub
repnz
mov
sub
iret
cmc
jno
inc
imul
sbb
mov
clc
fists
sbb
insb
inc
and
add
scas
adcb
adc
inc
xchg
inc
inc
xchg
lods
je
jle
loopne
xlat
sti
test
arpl
in
add
dec
jp
adc
pop
mov
sub
lods
push
sbb
xchg
in
dec
or
cld
shr
xor
add
test
mov
xor
or
jne
jno
xor
inc
xor
pop
xchg
push
faddl
loopne
insl
ret
addr16
cmc
jmp
xlat
fisttpl
pusha
adc
ljmp
js
dec
aam
inc
push
cwtl
jl
jne
inc
mov
and
js
push
sbb
adc
pushf
jae
mov
out
sbbl
sub
xlat
adc
loopne
lcall
pusha
in
adc
not
ret
add
xchg
stc
pop
pop
jl
out
mov
sbb
dec
jae
dec
cmp
inc
imul
fidivl
scas
dec
pop
and
leave
and
int
pop
rcrl
insb
shll
fnstcw
iret
pop
movsb
test
test
outsb
xor
push
cld
and
pop
mov
jecxz
jmp
sbb
cmp
and
iret
adc
fcomip
fmull
mov
inc
mov
cli
in
xchg
dec
cli
ljmp
fidivs
pop
fwait
mov
mov
and
pushf
aaa
or
outsb
sub
mov
inc
adc
inc
push
jp
mov
xchg
jge
scas
jmp
stos
dec
dec
jl
scas
scas
bound
je
cs
in
enter
and
bound
push
or
pop
dec
mov
dec
cmp
pop
fstps
fisttpl
jecxz
repz
add
jae
addr16
jge
mov
cmp
rep
dec
mov
add
push
imul
popf
cmp
inc
fdivl
scas
fwait
jo
or
pop
add
jp
mov
test
adc
ja
stc
xor
shlb
loop
cli
clc
jl
jnp
dec
lea
mov
aaa
inc
lret
xor
inc
cmp
sbb
mov
mov
xchg
lcall
pop
out
notl
outsb
xor
and
jmp
jecxz
cmc
xor
push
das
jns
pusha
xchg
cmc
faddl
inc
leave
mov
cld
jp
dec
fsubrl
data16
lahf
in
pop
arpl
loope
into
sub
imul
pusha
outsb
xchg
add
mov
stos
xchg
lds
out
call
mov
sub
sbb
mov
adc
lret
test
cmp
mov
pop
push
aam
and
imul
inc
inc
cmc
mov
leave
out
outsb
gs
cmpl
jecxz
aaa
pusha
sbb
jmp
inc
inc
popf
push
xchg
cmp
and
mov
mov
bound
in
roll
mov
nop
or
in
xor
aaa
stos
cmp
xchg
dec
mov
cli
adc
add
punpckhdq
mov
add
out
dec
insb
xchg
jg
pop
loope
pop
jge
loopne
mov
add
stc
movb
push
add
jne
ficoms
dec
movsl
enter
aam
outsb
mov
lahf
bound
insl
cmpsb
sarb
rorl
bswap
pop
loope
dec
add
cwtl
shll
pop
jmp
fistps
fs
rorb
sub
cmp
jmp
adc
jnp
scas
sahf
xchg
xchg
fidivl
or
xor
aas
aad
xchg
jo
out
test
shll
pop
jecxz
data16
out
sbb
and
push
lahf
mov
rep
movsb
xor
push
fdiv
cltd
add
rcrb
rorb
lahf
inc
pop
imul
adc
cmc
jmp
addb
sbb
stos
and
addb
test
sbb
shrd
lea
sbbl
sub
add
pusha
push
sbb
aam
or
mov
test
je
out
sub
mov
movsl
std
dec
cmpsb
stc
jns
xor
xchg
mov
mov
dec
or
movsl
sub
pop
adc
dec
daa
xor
mov
ja
popa
dec
rcrb
mov
cmp
addr16
xchg
jb
imul
dec
and
orl
pop
inc
rol
insb
fnstsw
dec
clc
push
push
stos
pop
fdivrs
sub
flds
in
push
adcb
fcompl
stos
cmp
lock
mov
cs
jnp
in
add
mov
mov
mov
inc
pop
daa
xchg
gs
mov
popa
sbb
mov
lret
push
std
bound
js
xchg
mov
add
sub
aad
iret
sub
bound
mov
xchg
popf
xchg
or
adc
adc
mov
jb
cltd
cmp
xor
test
and
add
jb
inc
rclb
mov
adc
sahf
mov
lcall
js
jl
push
rolb
fidivrl
or
rcrb
ror
xor
pushf
out
fs
popa
or
or
outsb
icebp
movsl
jbe
adc
bound
mov
and
cltd
mov
es
pop
mov
pushf
das
je
pop
mov
fs
repz
mov
fs
mov
popa
mov
cmpsb
jb
roll
and
ds
mov
imul
fbstp
int3
movsb
andb
test
movb
data16
sarb
hlt
stos
jo
fldt
xor
xor
mov
gs
mov
out
xor
mov
cmpb
jle
adc
adc
xchg
jae
jno
jo
es
fisubl
sbbb
pop
rcl
adc
das
iret
enter
imul
and
imul
push
loop
jbe
out
stos
sahf
rolb
dec
pop
xchg
ret
xchg
ret
and
insb
sbb
ret
pop
mov
jb
aaa
xchg
fs
fidivl
xor
mov
in
sbbb
inc
and
sahf
sub
rorb
out
ret
jnp
sar
sbb
sbb
fisubl
pop
xchg
dec
jbe
imul
xor
sbb
push
xlat
ljmp
cli
ds
or
sub
outsl
jno
and
ja
andl
daa
xchg
pop
adc
inc
pop
mov
dec
stos
mov
mov
cltd
outsb
mov
mov
cltd
ret
mov
jmp
add
shrl
loopne
movd
dec
and
pop
lods
lret
fcmovnu
sahf
jo
std
movsl
jp
mov
out
repnz
push
mov
or
push
dec
jns
xor
rcll
imul
sarl
stos
and
jae
add
fnstsw
pop
push
jne
aas
xor
inc
and
orl
dec
pop
lcall
scas
jns
add
sub
mov
into
jo
cmp
inc
lahf
sbb
push
xchg
lret
push
pop
or
lods
lret
pop
push
rcl
mov
xchg
loop
test
or
jo
sub
les
jp
loop
mov
adc
sbb
inc
pop
sbb
dec
arpl
sbbb
or
mov
lods
cmp
add
pusha
jp
stos
bound
jp
loope
lods
push
fmuls
subb
xchg
loopne
mov
jnp
orb
jg
add
lock
jnp,pt
adc
push
dec
or
sbb
adc
xor
movsb
mov
fsubl
or
add
loope
popf
dec
jno
fcmovnb
or
add
xor
pop
add
mov
loope
es
ret
or
xor
mov
xchg
or
dec
mov
xchg
lock
jg
dec
or
cmp
and
push
jle
pop
out
xlat
cli
outsb
mov
aas
push
andb
ja
rolb
stc
repnz
sbb
inc
scas
scas
pop
sbb
rcll
je
in
mov
aas
push
push
and
jbe
mov
jmp
ret
cmc
lahf
fcomp
xor
mov
cwtl
cmp
in
lds
inc
movsb
mov
or
fneni(8087
or
movsb
adc
mov
aaa
pop
inc
repnz
rorb
mov
sub
jge
add
adc
hlt
ffreep
xchg
mov
push
outsb
je
mov
fnstenv
sbb
shrb
jne
pop
or
jns
sahf
mov
xor
xchg
mov
shrb
inc
push
scas
test
sbb
push
xor
mov
in
push
cmp
fcoml
imul
adc
jnp
cmc
nop
mov
adc
js
mov
mov
sbb
cmpsl
sarl
jg
jg
jns
mov
imul
fnstcw
cmp
push
inc
cld
sbb
lahf
outsl
adc
test
cwtl
fcomp
cmp
out
fisubl
movsl
cmpsb
gs
mov
jecxz
pop
icebp
sub
mov
cmpsb
adc
dec
in
push
lret
add
sbb
sarl
in
lods
mov
jbe
leave
std
int3
in
mov
imul
stc
jb
pop
push
mov
pop
add
hlt
movsb
mov
mov
stos
adc
cs
pushf
repnz
mov
fwait
out
inc
xlat
mov
std
dec
orl
add
andb
sub
sarl
or
cmp
jo
out
jbe
cmpsb
cmp
imul
mov
add
out
xor
add
in
add
sub
ret
daa
fsts
sbbb
xchg
fs
scas
sbb
adc
and
ljmp
daa
pusha
inc
aaa
je
xorb
icebp
mov
pop
add
lds
inc
loop
add
fldcw
addr16
popf
sub
inc
and
xor
and
lret
and
popf
imul
mov
xchg
pop
pop
push
nop
nop
fisttpl
push
sub
push
cmp
in
out
push
test
mov
sahf
in
pop
inc
xchg
lret
and
push
sub
maskmovq
imull
or
dec
push
movsl
dec
jo
sbb
fldl
enter
push
or
cmp
lods
icebp
adc
fnstsw
pop
out
inc
push
andb
xorl
movsl
enter
sbb
sub
mov
out
stos
xchg
and
out
pop
jl
ret
mov
cmp
push
aas
in
xadd
push
pop
jae
or
ljmp
popa
dec
jecxz
hlt
dec
lahf
xor
inc
lea
sti
mov
mov
mov
insb
mov
cmp
dec
cmpsl
ret
jae
repz
insl
stos
lahf
std
mov
pop
cltd
push
push
sub
data16
sti
and
push
adc
jge
xor
jae
or
shll
lcall
jae
into
and
sub
adc
cmpsl
repnz
ja
iret
test
jno
cmp
push
xor
outsl
data16
int
xor
je
xchg
clc
push
aas
cmpsl
cmp
sub
mov
mov
pop
jae
aaa
fs
mov
cmp
dec
js
sbb
lret
xchg
rcll
daa
shlb
lods
jmp
and
lcall
out
push
xchg
faddl
lock
jle
xchg
es
adc
mov
adc
add
shrb
jb
jecxz
inc
push
push
push
inc
ljmp
out
dec
inc
mov
mov
pushf
push
adc
mov
aad
sbb
sbb
jno
pop
testl
adcb
test
popf
adcl
ljmp
cs
sub
adc
mov
call
inc
lock
xchg
mov
or
mov
mov
int3
add
enter
and
xchg
ja
inc
or
mov
cmpsl
jge
mov
adc
pop
xor
in
xlat
cs
incl
lea
and
iret
jne
ret
pop
imul
daa
xchg
xlat
pop
lods
nop
jg
mov
movsl
ret
stos
rol
fstps
outsb
in
orb
outsb
add
les
daa
fprem
test
push
sti
shrb
lock
fiadds
mov
push
xchg
stos
aad
or
cltd
clc
xorb
fcomps
jge
jo
fisttpl
shrl
shlb
inc
data16
jle
inc
je
inc
ss
jb
mov
adc
xchg
adc
cmp
addr16
xor
stos
pusha
fsubr
arpl
jnp
add
pop
and
lret
inc
and
cmp
out
in
and
pop
push
xor
xchg
push
add
scas
divb
jp
in
mov
xchg
sub
aaa
mov
into
push
mov
in
je
mov
xchg
cmpsl
xchg
sub
push
or
dec
cmc
scas
lret
scas
out
add
test
loopne
lret
push
stc
and
mov
faddp
mov
mov
clc
out
cwtl
call
push
mov
sub
sub
sarb
lods
loope
inc
lods
push
rclb
rorb
in
add
lds
aas
push
mov
addr16
adcb
mov
andb
mov
dec
fnstcw
sub
sti
cmpsb
mov
push
dec
shlb
jo
or
hlt
lods
insl
addr16
mov
scas
adc
cmpsb
xchg
movsb
jmp
in
iret
sub
xchg
adc
push
ret
jp
cwtl
stos
js
fdivp
sub
dec
sahf
mov
sub
push
add
movsb
inc
pop
xor
xlat
push
jbe
andl
xchg
stc
adc
mov
adc
lock
inc
scas
imul
xchg
ds
repnz
jb
cmp
xchg
xchg
cwtl
xchg
das
push
jns
jnp
arpl
xor
or
jne
sbb
and
lock
adc
imul
xor
add
popf
lods
cmpl
sub
push
loope
push
gs
pop
sub
or
sub
mov
in
sbb
add
inc
mov
jnp
mov
xchg
xchg
xor
es
xor
hlt
sahf
cmp
sub
xor
xor
add
nop
xchg
out
cmpsb
push
mov
test
mov
dec
loopne
or
jecxz
das
insl
adc
or
pop
jg
scas
jno
imul
mov
aaa
fimull
add
mov
fs
ret
adc
lret
or
push
imul
sub
out
jecxz
and
shlb
sbb
mov
or
push
aaa
jmp
push
outsl
aam
in
sti
gs
loopne
out
push
int
inc
cmp
rolb
nop
outsb
jb
or
jbe
xchg
inc
push
movsl
jbe
je
lock
push
ja
sbb
scas
pop
jne
push
add
aam
dec
mov
les
ret
cmpb
or
lret
dec
sahf
bound
inc
flds
xchg
cmpsl
push
out
add
addps
mov
mov
jo
pop
test
gs
movsl
mov
sbb
repnz
dec
adc
pop
pop
xor
gs
sbb
mov
fidivl
adc
fisttpll
inc
std
sub
inc
outsb
fcomps
int
cltd
push
shl
cmp
addr16
pop
test
jo
or
jmp
ficoml
sbb
popf
out
sbb
scas
add
jge
data16
inc
fsubr
mov
pusha
mov
or
lea
lahf
test
popa
xor
inc
stc
sub
or
push
jp
mov
insl
enter
inc
mov
and
cltd
fadds
popf
mov
dec
xchg
and
mov
push
lds
rcl
add
mov
in
lcall
add
xchg
iret
push
fwait
mov
mov
push
shll
js
clc
insl
stc
fcmovne
cmp
xor
loopne
fwait
or
sub
push
xchg
jmp
lahf
hlt
xchg
jg
jp
push
jns
jns
push
lret
inc
enter
pop
std
popa
sub
sahf
lcall
jno
insl
inc
clc
mov
hlt
fsubs
cwtl
push
adc
leave
test
jle
aas
lcall
cmp
loopne
sub
leave
add
rorb
lds
cmp
cmp
inc
and
pop
jmp
cmpsl
lods
xchg
xor
xor
lret
sbb
jle
mov
mov
into
flds
stos
sbb
movsl
in
jnp
dec
fists
add
jno
call
in
dec
pop
aas
adc
dec
dec
push
sbb
add
int3
out
std
mov
mov
cld
or
add
outsl
jb
clc
es
repz
sbb
sub
jne
mov
and
sahf
dec
xor
xlat
xor
in
sarl
push
nop
lret
inc
cmp
jmp
leave
mov
scas
sbb
fbld
into
mov
xor
sbb
inc
fwait
xchg
btr
clc
mov
lods
xchg
addr16
xchg
dec
shl
cmp
and
push
fidivs
push
jmp
insl
add
sbb
pop
hlt
pop
jns
mov
cld
loope
adcl
cli
push
sbb
movsb
mov
xchg
or
stos
sbb
gs
enter
mov
fldenv
fistpl
add
arpl
fimull
movsl
mov
mov
mov
int
xchg
shrl
push
mov
nop
scas
outsb
mov
add
sbb
dec
xor
adc
ret
sarl
mov
push
test
in
loope
test
lds
aad
stc
dec
pop
cmpsb
inc
dec
push
push
pop
mov
movsb
daa
sbb
ret
add
mov
push
jne
pop
jo
mov
neg
push
push
sbb
add
push
sar
xor
aad
pop
and
jle
imul
clc
push
mov
sub
xlat
push
push
and
lret
cmp
pop
dec
xor
pop
xor
hlt
mov
ja
xchg
enter
push
sbb
rorl
into
sub
sti
scas
cld
pminsw
jno
repnz
or
shlb
dec
add
nop
ss
mov
stos
jnp
mov
mov
add
call
sub
lcall
pop
cmc
popf
mov
fidivs
outsb
push
pop
std
outsl
mov
aas
loop
push
mov
pop
mov
jmp
subb
xchg
movsb
ss
in
sbb
mov
call
cmpsb
fimull
adc
sti
repnz
jge
push
movsb
aaa
shrb
inc
push
shll
repnz
cmp
push
cwtl
xchg
xlat
fisubl
insb
sub
push
iret
and
test
dec
mov
and
pop
mov
dec
pushf
lods
sbb
sti
movsb
mov
lock
xchg
xchg
mov
adc
jle
ret
arpl
jmp
inc
jp
pop
aas
gs
mov
inc
fwait
xor
sub
xlat
arpl
daa
mov
add
xlat
and
xor
cmp
mov
pop
aas
and
fnstenv
push
lea
cwtl
inc
add
cmp
mov
out
dec
orl
push
loope
aad
out
fiaddl
and
xorl
dec
adc
into
push
dec
push
imul
and
aas
push
mov
cmp
fbstp
cmpsl
mov
jbe
jp
inc
bound
and
push
in
sbb
fidivs
inc
xchg
inc
daa
add
stos
add
dec
mov
mov
sub
push
out
adc
pop
adc
sbb
inc
je
ss
cwtl
or
in
ror
aaa
call
xor
adc
sub
jo
dec
adc
mov
loop
aam
xor
std
scas
mov
mov
iret
jl
dec
mov
ret
mov
push
cmp
mov
or
lret
lea
test
sub
repnz
inc
std
outsb
ret
stos
xchg
popa
inc
mov
jg
repz
ror
inc
sub
shrl
xchg
xchg
pop
xlat
push
push
jl
popf
mov
sub
jno
lcall
insl
popa
sub
sti
and
stos
testl
cmpsb
dec
sbb
xchg
stos
mov
lock
test
test
insl
stos
int
pop
fwait
inc
xlat
ljmp
cmp
and
insb
cmp
jecxz
mov
mov
js
push
pusha
in
dec
mov
jg
sbb
jle
xchg
sub
test
and
inc
add
popa
sbb
fs
cmp
push
leave
sub
pop
xchg
jle
mov
fs
adc
in
fistpll
pusha
mov
ja
sbb
clc
jl
fs
int3
addr16
je
sbb
pushf
movsb
adc
sub
pop
add
or
sub
mov
and
mov
in
sbb
jns
xchg
out
sub
enter
sub
mov
push
lret
or
jmp
ret
mov
push
push
xor
sub
daa
adc
popf
cmp
xchg
dec
xchg
aas
sub
in
push
pushf
pushf
xlat
shl
cltd
xchg
gs
aaa
out
jns
sub
inc
add
pushf
pop
psadbw
aas
outsb
prefetcht2
mov
xor
inc
dec
inc
and
std
inc
das
in
test
push
xchg
xlat
fildll
shld
push
lods
cmp
pop
xor
jl
xchg
push
pop
lods
cmp
ret
inc
je
and
popa
roll
mov
inc
xor
mov
loopne
xchg
fnstenv
or
xorb
cli
lret
fsubp
jae
bound
imul
aad
pusha
push
or
leave
mov
in
mov
dec
pushf
fcos
xchg
add
repnz
pop
sub
rol
das
mov
dec
add
or
cmp
movsl
sbb
mov
and
push
sbb
push
xor
and
enter
push
add
jnp
mov
mov
imulb
pop
popf
mov
imul
inc
sub
sbb
mov
xor
outsl
lea
test
fcoms
les
push
out
jmp
loopne
iret
decb
hlt
pop
or
leave
jmp
mov
pop
repnz
sbb
and
adc
dec
dec
pop
push
arpl
lcall
iret
jl
std
in
mov
mov
or
test
or
xor
in
es
cltd
hlt
adc
nop
lea
adc
scas
mov
pushf
push
xchg
and
adc
or
jbe
xorb
or
sub
xchg
sbbl
jnp
ror
xor
outsb
mov
xor
add
or
gs
dec
popf
xor
andl
sbb
lret
fs
pop
add
std
sub
dec
nop
scas
inc
mov
or
dec
or
ds
mov
cwtl
daa
fwait
push
mov
and
pop
repnz
inc
xchg
aad
faddl
lds
lret
or
xchg
xor
pop
ljmp
xor
push
sub
ret
inc
imul
inc
int
cmc
sub
lcall
xchg
inc
loopne
push
mov
dec
daa
mov
cli
sub
pop
iret
adc
or
fiaddl
test
inc
cmp
add
jno
loope
aaa
pop
mov
stos
ja
xor
in
mov
ja
fldl
outsl
sbb
jp
push
fsubs
pop
dec
repnz
xor
fs
xor
mov
repz
push
fstpt
ss
xor
nop
dec
cmp
shlb
jl
push
jmp
addr16
and
fcmovnbe
cmpsl
les
or
sbb
enter
dec
cmp
mov
ss
mov
js
shll
push
cltd
sbbb
out
popa
xor
push
mov
mov
or
int
dec
dec
push
xlat
sbb
scas
adc
jo
ss
lods
add
jp
xorb
pinsrw
jg
inc
adc
adc
mov
mov
fsubl
push
adc
mov
loop
mov
jno
mov
and
pop
insl
adc
push
adc
ljmp
pop
gs
cmpsl
aam
sub
xchg
mov
mov
ljmp
push
daa
test
sub
pop
push
push
subl
sbb
imul
mov
adc
in
in
push
movsbl
into
loop
cltd
xor
rcll
dec
cmp
sti
xchg
and
sbb
mov
adc
iret
loop
dec
jb
cmp
stos
std
shlb
aaa
call
jge
sub
mov
or
arpl
ja
divl
call
jno
in
pop
pop
jge
insb
addl
jge
dec
jle
push
mov
mov
mov
push
push
aam
sbb
cmpl
jp
ds
imul
adc
add
mov
jg
add
mov
inc
test
cmp
inc
cmp
es
fwait
pop
sbb
mov
clc
xchg
pop
and
adc
rcl
push
push
mov
jns
inc
scas
movsl
int3
inc
fiaddl
ret
sbb
adc
mov
int3
imul
lods
or
insb
sub
data16
mov
dec
outsb
repz
sub
pop
fldt
aad
fldcw
and
mov
fildl
inc
pop
nop
cltd
test
mov
je
popf
dec
rclb
cmc
enter
out
pop
push
daa
dec
xchg
cmpsb
dec
mov
fsub
cld
sub
add
sbb
subl
cltd
fs
jbe
jbe
mov
adc
inc
mov
and
test
sbb
push
rolb
loop
jo
lods
in
fimull
add
fnstcw
cld
adc
stc
mov
adcb
ret
imul
or
jbe
outsl
cmp
mov
jge
lods
xor
repnz
or
in
cmp
jmp
push
in
mov
cmp
ljmp
jmp
pop
add
pop
dec
movsl
xor
mov
or
add
dec
fbld
out
dec
daa
sbb
movsbl
test
dec
ds
lcall
add
sub
lock
pushf
or
xchg
push
xchg
push
fdivs
sahf
and
add
or
hlt
iret
cmpsb
mov
or
inc
sbb
mov
je
sub
fists
insb
ja
adc
in
or
rcll
and
mov
daa
sarb
cmp
jne
imull
hlt
daa
fcmove
sub
push
lahf
scas
dec
cmpsb
popa
pop
sub
sub
push
xchg
outsl
sbb
push
les
mov
inc
push
inc
je
cmp
jae
cmp
xchg
jl
jl
jbe
lret
dec
inc
pop
add
mov
and
fs
push
fcoms
das
jp
sbb
adcb
fs
insb
jbe
mov
fucomi
outsl
mov
inc
fdivrl
repnz
inc
movzbl
jne
fstp
mov
insl
or
stos
inc
jo
repnz
mov
notl
jp
fwait
shll
fildl
in
stos
dec
push
pop
and
call
xchg
fsts
dec
xchg
push
mov
mov
xlat
and
jmp
mov
sbb
sti
scas
adc
mov
sub
imul
out
push
jecxz
fcoms
and
dec
shll
outsb
scas
ss
inc
lods
push
mov
iret
dec
inc
mov
pop
xor
adc
add
adc
xor
fsub
std
xchg
pushf
push
mov
mov
in
sarl
sub
xchg
add
das
mov
pop
stos
mov
pusha
sahf
divb
jno
add
cwtl
sbb
jmp
movsl
frstor
pushf
cmp
jl
xor
loope
sar
fldcw
dec
mov
sar
outsb
push
shrb
pop
push
mov
rcr
mov
dec
rcr
cmp
mov
or
fs
movsl
lret
mov
push
lea
jge
ss
out
and
aad
jmp
mov
xchg
insl
mov
out
iret
int
aam
fildl
xchg
push
dec
mov
mov
lret
shll
xchg
in
roll
cld
jae
sbb
sti
sub
int
fildll
push
fcomps
push
pop
daa
les
pusha
aam
adc
or
mov
push
fists
sub
cmc
jo
out
lcall
sti
mov
cwtl
sbbb
push
lahf
add
shr
mov
jmp
jg
and
fisttpl
seto
iret
shl
sbb
adc
pop
fyl2x
sbb
dec
gs
pop
ss
outsl
mov
cmpsl
push
mov
lds
fsub
cli
movsb
xor
imul
mov
clc
xchg
mov
dec
jg
stos
cmpsl
lahf
mov
xchg
add
mov
xchg
push
mov
jbe
pop
xor
mov
rorb
shrb
add
vmwrite
fs
gs
mov
sbb
ret
push
enter
cmp
mov
fistpll
push
fiadds
nop
adc
xchg
xor
arpl
jae
dec
and
add
cmp
aam
aas
lcall
lock
mov
aas
pop
inc
mov
lret
out
ja
ljmp
mov
cmp
push
aas
sub
adc
in
cmp
aaa
int
aam
daa
arpl
and
xor
or
pop
and
movsl
sbb
rcr
xchg
loopne
notb
lcall
popa
and
test
cmpsb
adc
push
addr16
xchg
sti
push
scas
cmpsl
adc
pop
iret
mov
or
dec
clc
jle
xor
add
dec
sti
shlb
std
pop
lea
or
outsl
xchg
jecxz
inc
push
pop
pop
push
adc
and
fistl
cld
sub
pop
dec
sub
bound
out
sti
sbb
fisttpll
mov
adc
jl
lods
mov
ficoms
or
jbe
movsb
xchg
clc
pop
pop
dec
ja
and
push
and
fildl
xlat
stc
cwtl
cwtl
pop
xlat
xchg
rcl
shl
leave
cmc
mov
ja
and
cwtl
pop
or
repz
dec
cmp
cwtl
push
int
mov
jge
insb
add
ds
rcr
sub
dec
fcomps
mov
mov
dec
or
ret
or
pop
jg
dec
divb
insl
lea
xchg
pop
xchg
and
mov
jae
jecxz
jmp
clc
cmp
scas
mov
repnz
add
fldcw
sub
inc
test
cwtl
cli
mov
adc
das
adc
or
repnz
out
cmp
push
dec
pushf
inc
inc
mov
push
pushf
push
or
ret
rol
decl
fimuls
mov
lahf
xor
adc
pop
sub
iret
jmp
pop
aaa
int3
insb
mov
push
incl
loop
std
loop
inc
sub
add
out
sub
push
dec
fldl
sbb
push
out
inc
nop
jo
scas
pusha
push
int3
loope
and
aas
xchg
jg
xor
add
mov
outsb
into
out
fadd
push
jae
in
sub
das
in
gs
addb
pop
dec
aad
mov
mov
pop
cltd
mov
addr16
push
cmpsb
gs
mov
jg
dec
or
push
and
inc
lods
aaa
lret
mov
lds
dec
pop
jbe
stos
into
jle
in
mov
aas
test
je
jne
fs
cmp
shld
mov
fwait
cmc
test
push
data16
pushf
bound
cwtl
and
jmp
aad
test
gs
xchg
or
jb
insb
cltd
sti
xchg
movsb
shl
fs
lea
dec
mov
or
test
movsb
push
lret
adc
xor
mov
sub
dec
push
add
rolb
sarl
or
fildl
addl
sbb
xor
mov
mov
mov
loopne
call
mov
mov
iret
adc
cmp
and
push
pop
mov
cli
bound
pop
dec
fiaddl
sbb
insb
daa
push
pop
mov
daa
xchg
dec
stc
shll
mov
fisttpll
call
je
stos
cli
mov
or
sbb
mov
push
leave
adc
mov
fwait
push
fiaddl
fisubrl
mov
out
loopw
js
mov
and
icebp
test
jp
mov
jg
sub
mov
inc
cmp
mov
pop
iret
and
or
push
add
lcall
popa
hlt
iret
popf
mov
mov
pop
pop
mov
dec
inc
shlb
dec
jp
cmp
push
sbb
sbb
popa
ret
je
cld
outsb
pusha
cmp
adc
pop
loopne
push
cmp
mov
das
pop
in
adc
mov
mov
jecxz
outsb
insl
cmp
test
int
aad
push
popf
out
pop
mov
inc
fidivrs
pop
repz
in
xorl
inc
mov
ficoms
mov
add
xchg
inc
idiv
int
push
movl
xchg
cmp
sub
xor
and
xchg
fs
sub
and
mov
dec
or
or
aaa
out
insb
in
inc
js
mov
addr16
xchg
rolb
addl
push
sbb
inc
sbb
push
scas
sbb
mov
bound
pop
mov
push
incb
sbb
push
rclb
push
int3
push
dec
orb
imul
rorl
mov
adc
push
jns
and
addr16
sub
setl
sahf
push
xchg
add
loopne
jge
cmp
and
ret
shl
fildll
xor
dec
lret
pop
dec
push
data16
sbb
xor
add
lds
dec
or
inc
addb
leave
lret
lret
out
pop
popw
push
cmp
daa
push
pop
lret
inc
repz
inc
in
jae
push
cmpsl
rclb
out
insb
loop
nop
dec
stc
stos
jle
pop
pop
fistps
push
out
xchg
lea
or
cltd
or
dec
dec
lds
ljmp
xchg
or
jae
int3
mov
out
adc
jle
pop
xor
imull
fst
hlt
mov
rorb
jnp
cmp
adc
mov
jne
pop
or
jbe
inc
test
and
testl
std
jne
aas
sbb
mov
cmc
cmpsl
sbb
divl
cmp
cmp
inc
inc
jecxz
mov
push
lds
dec
pushf
or
add
add
and
jl
jecxz
push
cmp
xchg
jbe
pop
aad
inc
push
nop
jecxz
pusha
mov
mov
xor
add
mov
insl
and
sbb
fcomps
insl
scas
hlt
mov
mov
inc
ss
push
movsl
add
add
cmpl
dec
sub
bound
scas
jbe
xlat
mov
jae
xchg
stc
movsl
hlt
pop
and
fdiv
in
out
jl
mov
xchg
ret
sub
mov
adc
xchg
cmpsb
aaa
lods
push
or
mov
lahf
cmp
call
aas
push
ret
xchg
push
shll
cmp
mov
cmp
adc
mov
mov
pop
outsb
adc
jmp
das
test
data16
cld
push
insl
je
movsl
sub
call
daa
push
jmp
sbb
cmp
adc
outsb
mov
cli
jge
pop
pop
sti
lret
mov
mov
fmull
dec
push
outsb
test
cltd
pop
cmc
sti
mov
jp
pop
sbb
add
mov
rcl
ficompl
and
push
mov
pop
xchg
clc
push
andl
je
sbbb
fs
or
push
int
adc
je
andl
push
push
add
ffreep
movsb
js
imul
xor
scas
adc
mov
imul
sbb
pop
add
cmpb
xlat
mov
cmp
shr
mov
repz
push
mov
pushf
mov
jp
jb
aam
cwtl
jb
mov
cs
and
add
cmpsb
rorl
scas
push
fadd
aas
adc
repnz
sub
xchg
xchg
jmp
adc
fxch
dec
daa
mov
mov
and
mov
enter
gs
mov
add
or
fcmovu
inc
push
lret
sarb
jg
imulb
adc
fisttpl
xchg
aaa
pop
xorl
pop
leave
addr16
jo
stos
lods
int3
dec
xor
pop
and
orb
into
iret
and
insl
inc
jo
push
aaa
incb
push
mov
jge
mov
and
sbb
inc
testb
dec
mov
and
jecxz
push
rolb
mov
inc
sbb
push
fwait
mov
cmpb
testb
mov
rolb
ficomps
shll
insb
mov
iret
jo
mov
mov
cmp
xor
and
insb
mov
jmp
add
and
fidivl
jmp
pushf
je
jp
in
push
push
icebp
in
jne
mov
mov
rorl
insb
shrl
loope
inc
fucom
js
jmp
fstpt
outsl
rorl
pop
lea
push
pop
xchg
cltd
leave
jl
out
out
inc
bound
fbld
pushf
gs
repz
in
dec
fiadds
cmp
imul
into
inc
and
push
dec
mov
in
xchg
mov
xchg
pop
arpl
mov
mov
test
sbb
aam
arpl
mov
xor
sbb
sbb
xor
mov
lcall
lea
push
repz
mov
inc
imul
insl
jb
call
popa
gs
push
add
mov
mov
test
adcb
shlb
mov
fisttpl
cmp
lahf
mov
cmp
mov
cwtl
xchg
pop
outsb
fldcw
ss
ret
test
or
or
ja
mov
pusha
mov
mov
xchg
scas
dec
dec
pop
xor
les
in
imul
dec
sbb
dec
out
or
fs
xchg
fnstsw
mov
cmp
inc
mov
cmp
push
cmp
popa
cwtl
jl
jo
pushf
xchg
adc
mov
mov
xchg
sbb
xor
and
movsl
in
ja
and
mov
fdiv
cltd
shrl
and
les
fstpt
gs
inc
enter
les
das
gs
xchg
imul
xorb
cmp
js
fbstp
rorl
rclb
pop
dec
xor
test
es
arpl
sahf
ss
fsubs
xchg
mov
stos
imul
sbb
bound
dec
dec
jae
dec
mov
pusha
data16
fistpll
jbe
cwtl
movsl
les
sar
push
pop
jge
cmp
loope
fwait
dec
fisttpl
or
mov
mov
andl
cmp
bound
dec
rcr
leave
dec
loop
push
cmpl
push
arpl
out
sub
mov
outsb
shrl
shl
push
xor
mov
push
and
push
lods
mov
popf
scas
daa
fsubs
jbe
cs
mov
pop
push
movsb
stos
fnstenv
iret
in
cwtl
imul
xchg
mov
mov
xor
or
imul
repnz
in
dec
push
or
shl
call
mov
fcmovnb
dec
xchg
movsl
imulb
xchg
cmpsl
fdivrs
dec
into
mov
out
or
sub
and
xchg
iret
mov
ljmp
pusha
add
cmp
scas
ss
ljmp
mov
mov
mov
into
mov
or
imul
dec
in
movsb
mov
sahf
mov
push
leave
xchg
aad
sub
xchg
adc
add
dec
mov
jg
dec
fidivl
mov
or
inc
push
jmp
push
int3
adc
lret
push
jne
mov
out
dec
mov
cmpsl
sub
or
xchg
mov
cmpsl
iret
hlt
sub
mov
pop
add
adc
repz
add
std
ds
xchg
movsl
mov
mov
test
push
adc
fcmovnb
lcall
fidivrs
out
mov
loopne
inc
xchg
adc
jbe
xlat
stc
inc
xlat
lcall
adc
pop
sbb
fs
stos
push
and
mov
addl
movsb
dec
sbb
ficoml
stos
push
dec
pop
bound
sti
mov
lea
mov
aam
push
out
jmp
ds
scas
inc
cmp
or
cld
cmp
rorb
mov
icebp
pop
pop
ret
loop
imul
leave
jecxz
mov
in
xor
push
sar
pop
dec
cld
push
jbe
mov
out
fcoms
std
push
mov
cmp
sbb
xor
xchg
inc
sbb
insl
mov
mov
pop
pop
push
loop
dec
dec
pop
mov
lret
addr16
ja
cli
pop
leave
push
jp
rcl
push
and
sbb
fdivrl
push
jo,pt
adc
aam
xchg
add
test
in
or
xchg
cs
movsb
sahf
shrb
mov
lret
fistpll
loope
stos
repnz
js
mov
int
sbb
cmp
jle
fwait
aaa
idivl
mov
int
sbb
mov
mov
pushf
jbe
sbb
mov
stc
jnp
test
jecxz
outsl
outsl
push
mov
rcll
cltd
icebp
and
sub
adc
notl
jmp
pop
fsubp
pop
outsl
add
loope
insl
aaa
jmp
cmp
jno
sarb
es
cwtl
adc
sub
xchg
leave
xchg
je
adc
js
mov
cmp
fs
loope
idivl
jns
and
mul
call
clc
lcall
arpl
sarl
mov
push
in
mov
sub
jo
les
enter
shlb
repnz
clc
stos
dec
imul
in
push
ss
inc
addr16
mov
mov
jl
and
xchg
dec
insb
xchg
daa
loope
ljmp
lods
pop
pop
adc
push
adc
push
test
mov
xor
cltd
push
popa
sti
mov
add
mov
jge
lahf
sbb
push
cmp
sahf
lds
pushf
inc
mov
cld
jg
adc
gs
push
dec
cmp
xchg
sbb
dec
and
add
push
lea
movb
push
xchg
or
jge
pop
jmp
cli
mov
mov
dec
mov
icebp
iret
xchg
add
jle
js
js
mov
repnz
push
or
mov
push
dec
pop
jne
outsl
or
inc
jo
adc
jne
push
dec
outsb
and
xor
ds
in
std
es
lods
ret
test
dec
lods
bnd
jecxz
inc
push
js
rcl
adc
xor
aas
orb
adc
mov
popf
icebp
dec
fxch
cs
jnp
hlt
rorl
and
ret
lods
add
bnd
mov
sbb
xchg
lock
imul
dec
mov
fldl
or
test
mov
mov
stc
jb
jbe
lods
and
sbb
inc
aaa
pop
sub
pop
mov
inc
xchg
pop
adc
push
das
push
add
aam
xchg
xlat
out
dec
dec
lahf
shl
leave
andl
rcrb
lods
jp
roll
aam
ja
mov
das
testb
inc
cwtl
rcr
mov
inc
ficoml
jp
cmp
fucom
inc
rcl
cld
roll
mov
and
in
and
jmp
push
push
sub
hlt
cmp
fisubrl
xlat
xor
out
fistl
mov
jbe
cmp
and
push
sub
xchg
add
and
daa
insl
dec
jmp
mov
mov
stos
in
sub
jle
xchg
xor
xchg
mov
leave
adc
ja
dec
pop
jge
add
cs
jmp
xor
loop
add
push
into
bnd
xor
add
inc
in
test
outsl
pushf
fldt
or
loopne
sbb
sbbb
xor
in
pop
push
rcl
xor
cmp
out
sbb
popf
push
dec
in
js
push
xchg
loopne
ljmp
and
mov
cmp
loop
loopne
jl
xchg
pop
stos
addr16
jp
dec
bound
cmc
loope
into
push
cld
jae
repz
mov
addb
fisubrs
sub
xor
mov
mov
sbb
mov
in
loop
pop
mov
mov
lcall
or
mov
pop
call
stc
push
call
lret
or
push
fwait
add
addr16
rcrl
and
clc
repz
nop
adc
xchg
adc
dec
adc
jg
add
xchg
xor
push
xchg
repnz
lock
cltd
cmp
leave
sbb
movb
inc
cmp
sbb
bnd
lcall
pop
loop
sahf
mov
loope
lcall
push
jns
imul
inc
mov
iret
and
outsl
mov
push
daa
dec
mov
in
repz
add
xchg
and
stc
inc
or
cltd
lret
dec
jns
adc
xchg
std
push
add
sarl
repz
in
mov
jle
adc
pop
es
loope
mov
pop
inc
and
mov
mov
bound
mov
iret
mov
sahf
es
xabort
or
inc
lret
orl
rorl
rorl
inc
scas
negb
xlat
jbe
dec
dec
cwtl
push
or
or
cli
xor
imul
fwait
cmc
cltd
push
inc
pop
fsub
or
mov
dec
fwait
inc
mov
sub
pop
sub
xchg
js
sub
and
pop
inc
fdivrs
insb
out
dec
fnstenv
fidivs
xor
aaa
insl
jo
and
fisttpll
sbb
add
sub
push
in
loope
xor
imul
repz
aam
mov
or
imul
lods
mov
mov
sbb
push
movsb
cwtl
inc
dec
add
repnz
outsl
xor
sub
sub
ds
sbb
xor
and
sub
xor
pop
sub
mov
mov
xlat
lahf
inc
mov
into
xor
xchg
fsub
pop
sub
lret
or
push
sbb
aam
mov
call
mov
sub
mov
cmpsl
popa
imul
cmc
pop
mov
fistpll
sub
aas
push
adc
ret
dec
dec
cmpsb
add
mov
das
movsb
xchg
sbb
cli
xchg
lods
pop
sub
cli
mov
push
mov
addr16
pop
movsb
jnp
lock
and
push
cmp
dec
imul
insb
addr16
xor
fcmovnb
fmull
das
xchg
lret
aas
aas
dec
mov
fadd
and
fldenv
icebp
addr16
pop
sub
inc
cmpxchg
xor
aas
pop
adc
lret
cmp
push
inc
imul
addr16
stos
stc
xchg
adc
fmulp
hlt
sub
jle
test
sub
mov
ror
jle
xchg
add
ret
notb
push
push
fs
push
pop
fdivl
aas
int
cmp
mov
andl
inc
and
push
push
sbb
repnz
xchg
pop
push
adc
enter
in
sub
std
imull
mov
nop
mov
int3
aas
or
mov
outsb
cmc
cmp
mov
and
xlat
mov
xor
adc
mov
sbb
shrl
xor
or
pop
mov
push
dec
jge
push
insl
sbb
out
loope
mov
lahf
or
mov
push
sub
out
hlt
mov
xor
or
rcrl
pusha
sub
dec
pop
inc
in
call
aam
pop
push
out
add
cmc
xor
outsl
mov
or
xor
int
sub
dec
je
cmp
stc
inc
fwait
ja
jge
cli
cmpl
inc
pop
incl
pop
scas
daa
jno
int
sub
lret
es
cli
xchg
and
and
pop
jbe
jmp
es
orl
and
mov
mov
sbb
ret
sti
mov
pop
stos
dec
jns
dec
ljmp
les
xor
cmpsb
push
jb
mov
call
cwtl
ljmp
and
imul
mov
shlb
imul
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
decl
lds
jmp
push
aas
mov
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
add
push
fbstp
orl
and
sub
jbe
pushf
adc
pop
sub
mov
dec
sahf
inc
sbb
loopnew
jb
mov
push
or
daa
int
push
movsl
inc
add
sti
popa
push
pop
jns
iret
inc
shrl
sub
hlt
lcall
add
jbe
mov
cltd
cli
pusha
and
push
push
push
popa
jnp
bound
icebp
push
test
dec
pop
shrl
sub
adc
jp
stos
icebp
sub
clc
add
cmp
pusha
pusha
dec
cmp
fstps
repz
pusha
mov
iret
add
sti
popa
push
pop
cmp
sarl
cmp
popa
imul
test
adc
add
inc
addr16
or
cmp
popa
push
sbb
inc
adc
sti
popa
push
or
mov
sub
popa
imul
scas
leave
add
jmp
imul
mov
cmp
popa
push
sbb
inc
adc
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
std
lds
or
and
cmp
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
xor
fwait
mov
push
or
inc
shrb
sti
popa
insb
push
nop
lret
pop
mov
mov
sti
popa
push
cld
scas
mov
push
sbb
cmc
lds
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
push
sbb
inc
add
sti
popa
pop
ret
mov
add
pop
mov
adc
cmp
push
sbb
call
cmpsl
inc
or
dec
shlb
sub
loopne
pop
lods
daa
cs
hlt
mov
dec
xor
iret
jmp
fcmovnb
addr16
mov
scas
xchg
lcall
insb
sbb
ficoml
lcall
mov
xlat
xchg
aam
push
movsb
fldl
scas
sub
cmp
iret
inc
out
outsb
sub
pop
insl
sar
fwait
test
xchg
out
fdivrs
push
mov
mov
push
je
insl
jl
jl
mov
bnd
test
je
repz
add
mov
xor
add
xlat
dec
cmp
dec
push
nop
or
in
cltd
mov
and
es
aaa
js
or
or
push
inc
cmpsb
int
arpl
mov
aaa
dec
bound
lea
insl
jo
nop
jmp
mov
dec
ret
adc
lods
js
aam
cs
xchg
sbb
dec
push
xorb
or
out
repz
adcl
stos
stc
pop
xchg
lret
mov
dec
dec
xor
dec
inc
std
ret
lds
negl
jp
fbstp
cmp
pop
dec
cs
aad
xlat
xchg
jns
icebp
stos
adc
adc
mov
popf
fsubrl
push
adc
push
shll
test
popl
aam
rclb
lds
lahf
fiaddl
pop
insb
shl
ret
stc
nop
insl
lods
aas
mov
hlt
rorb
mov
rcll
mov
outsb
addr16
jbe
movsb
mov
jmp
lods
sub
mov
arpl
pop
jae
loopne
repnz
inc
pushf
fs
scas
lock
lods
xor
and
inc
js
mov
cmpsb
mov
test
mov
sub
fsub
cmp
je
or
pop
sub
sbb
jmp
add
cmc
and
lret
jge
mov
div
ds
pop
mov
push
cmp
sbb
lock
xchg
xchg
push
sub
scas
and
shrb
loop
jge
test
jle
mov
das
xchg
push
mov
and
mov
jge
jmp
inc
dec
lods
mov
cmp
outsl
jae
loope
push
dec
sub
js
int
rcll
imul
fwait
or
in
loop
lcall
into
repz
scas
xchg
adcb
or
or
jns
stc
sub
push
enter
push
test
test
data16
jle
sbb
pusha
dec
cltd
ss
lods
or
mov
add
xchg
in
add
test
mov
in
mov
rsqrtps
scas
mov
fsubrs
sub
popa
outsb
pop
outsl
shrb
adc
push
cmpb
call
inc
mov
sub
ffree
ret
pop
imul
pop
dec
dec
mov
ds
cwtl
icebp
div
cmc
ljmp
push
nop
or
pop
inc
mov
mov
jg
add
pop
idiv
xor
aaa
ljmp
mov
pop
test
and
test
ljmp
jmp
bound
inc
jg
shld
sbb
aas
rclb
std
xor
inc
lret
nop
call
inc
sub
fnop
jns
mov
outsl
sub
push
sub
push
cmpsl
sbbl
js
xor
fdiv
dec
pop
jl
mov
jae
sbb
das
ljmp
or
std
adc
inc
add
repz
aad
int3
pop
jmp
icebp
inc
push
add
xor
push
xchg
div
pop
mov
xchg
inc
test
insl
out
dec
add
leave
cwtl
xchg
insl
xor
mov
sub
jb
es
jge
inc
pop
insb
sub
bound
in
jmp
imul
push
shr
inc
icebp
push
cmp
daa
push
cmp
js
pushf
addl
or
adc
mov
mov
out
push
imul
pop
dec
jl
lods
call
ljmp
scas
in
or
stc
pop
pop
cltd
and
ret
pop
out
repnz
mov
or
lds
cmp
lahf
jnp
cmp
jp
bound
mov
inc
loop
pusha
adc
add
pop
in
lods
daa
xchg
push
sarb
adc
bound
mov
enter
jne
cmp
sti
and
es
rcll
mov
or
fimull
ret
les
xorl
aad
call
push
push
xchg
outsl
and
fidivrl
jecxz
ja
mov
pop
fwait
loop
jae
icebp
repz
nop
outsb
pop
adc
cmpsb
mov
outsl
inc
pop
mov
mulb
adc
sbb
mov
sbb
jne
lea
add
xlat
dec
cwtl
fists
dec
mov
push
jmp
loop
mov
js
notb
inc
adc
jge
push
int
jle
cmp
ja
lret
insb
or
arpl
ja
sarl
outsl
pop
inc
push
imul
sarb
jb
call
xchg
mov
xchg
imull
jo
and
dec
jp
pop
xor
bnd
mov
push
aas
lds
int
inc
pusha
xchg
imul
scas
sbb
or
in
ljmp
aam
mov
pop
jmp
jns
or
inc
push
cmc
and
lret
mov
dec
xchg
sub
jecxz
fstps
mov
cld
outsl
and
movsb
push
pusha
jg
int3
pop
xchg
mov
clc
jg
xchg
xor
xchg
ja
xor
dec
in
call
xor
rorb
xchg
fidivrl
pop
pop
repz
stc
test
cmpsl
leave
les
cli
aad
xchg
jmp
fisttps
cmpsl
mov
ss
and
jns
xchg
cmp
cmpsb
lock
in
cs
and
iret
negl
in
sti
mov
and
inc
add
inc
mov
and
lret
stos
insb
rcll
sahf
into
cmpsb
adc
imul
neg
stos
dec
lcall
popf
cmp
jecxz
lods
push
adc
dec
cmp
inc
mov
sbb
jns
clc
lret
or
cmp
add
push
adc
push
fs
xor
sub
cmpsb
add
mov
mov
push
pop
xor
mov
sbb
inc
int3
dec
sbb
mov
lea
outsl
inc
test
dec
mov
js
jg
add
lahf
int
add
dec
jl
pushf
sete
popl
mov
mov
sub
incb
std
mov
mov
push
pop
cli
push
mov
mov
stos
inc
mov
repz
into
dec
sbb
subl
pushf
xchg
bound
test
mov
cli
btc
outsb
mov
icebp
jmp
jg
inc
lret
cwtl
hlt
insl
mov
sub
cltd
cmp
jmp
push
pop
dec
mov
divl
dec
push
lods
shll
andb
mov
jle
lret
xor
push
das
cmc
xchg
repz
loop
pushf
mov
sub
dec
cmp
lods
test
xchg
sbb
cmp
testl
movsb
lock
lret
fisttps
cmp
shll
xor
sub
or
sbb
pop
stos
das
lahf
sub
mov
lret
adc
test
mov
xor
jmp
adc
xor
cwtl
adc
jns
andl
out
imul
call
jne
in
mov
xorb
add
push
lret
dec
or
mov
pop
divb
mov
aad
lds
sub
jmp
out
push
jnp
add
inc
xchg
aad
jnp
or
xlat
shl
roll
leave
mov
mov
iret
imul
mov
pop
mov
adc
ret
inc
js
aad
jl
cmp
jl
sub
ret
pop
cs
inc
add
mov
push
push
push
xchg
test
add
aad
jl
ds
push
insl
push
icebp
ja
mov
into
pop
ljmp
lea
outsb
or
and
inc
lcall
in
pop
xchg
adc
jle
dec
in
test
mov
push
cmpsb
pop
jecxz
aaa
pop
stc
sub
leave
sahf
inc
jns
sbb
in
push
mov
shlb
or
sub
and
repz
mov
add
push
lahf
mov
mov
aaa
and
push
pop
aaa
sbb
fidivrl
or
fisttps
xor
addr16
push
pop
mov
icebp
outsl
testl
xchg
cmp
dec
ja
cmc
cmpsb
pop
sarl
les
call
jbe
test
inc
sub
stos
sbb
notb
xchg
xchg
mov
pusha
addb
push
mov
sbb
mov
movsb
mov
push
sub
push
ljmp
mov
add
fsubl
testb
mov
mov
dec
inc
aad
loope
cmp
das
sbb
xchg
cmpsl
jecxz
inc
fwait
mov
xor
lods
cmp
push
inc
sub
push
mov
loop
mov
inc
pop
dec
dec
push
fcmovu
dec
je
lret
push
cmpsl
lods
rclb
mov
jnp
dec
testb
cmp
test
jo
or
cmc
cmp
das
push
jmp
testb
rcrb
jae
es
test
outsb
lods
cmp
inc
stc
xor
ret
daa
mov
mov
lret
dec
jb
and
insl
rolb
fwait
add
cmp
mov
int
mov
and
pop
repz
aam
or
pop
sbb
lods
inc
pop
dec
js
cs
lods
test
cmc
mov
jo
push
dec
stos
jp
jns
movsl
xchg
mov
pop
je
jge
in
add
mov
dec
cmp
inc
pop
das
and
mov
lods
jnp
in
xor
test
inc
xchg
inc
and
test
push
xchg
adc
xchg
stc
mov
call
cmpsb
imul
movsl
mov
stos
pop
xchg
mov
in
mov
stos
push
lahf
outsl
mov
add
fsubrp
js
sbb
dec
xor
out
scas
data16
xchg
and
pop
pushf
movsl
inc
add
push
stos
ficoml
push
int3
daa
test
or
test
jp
sbb
mov
lods
jbe
jo
dec
sub
in
push
ja
lahf
mov
sub
adc
or
mov
xor
cmpsb
pop
and
dec
push
pop
sti
and
es
ja
and
jb
mov
push
mov
aam
pop
mov
pop
lods
addb
jmp
push
mov
into
addb
in
adcl
leave
sbb
cmp
dec
push
and
in
xacquire
push
cmc
cld
sahf
adc
adc
aad
mov
xor
mov
mov
imul
popf
sbb
adc
mov
test
mov
lock
mov
inc
and
ret
cmp
imul
mov
inc
movsb
mov
pop
andl
outsl
shl
rcrb
dec
xor
mov
and
or
cmp
daa
int3
fsubrs
jecxz
add
dec
xchg
jnp
cwtl
cmp
dec
cmpsl
std
inc
or
pushf
jbe
mov
adc
fisttpl
in
fisttpll
adc
rcrb
movsbl
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
