push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
testb
daa
cmc
in
add
cwtl
cmpsl
inc
sahf
mov
gs
sbb
inc
jp
mov
std
push
insl
arpl
in
test
lock
popf
adc
sub
out
push
push
xor
das
dec
jmp
dec
mov
jae
and
inc
gs
mov
adc
mov
movsl
pop
pop
sub
daa
xchg
mov
cwtl
repnz
push
adc
and
out
cmp
clc
aas
mov
cmpsl
pusha
in
test
adcl
popf
loope
out
leave
jno
xchg
jnp
test
icebp
into
adc
out
rcr
adc
mov
jl
into
xor
lcall
mov
rcll
jmp
imul
aad
xor
aaa
jo
je
dec
loopne
dec
push
pop
mov
sub
adc
addr16
rorb
cmp
mov
pop
orb
imul
arpl
repz
mov
xchg
dec
fistps
dec
out
sub
pop
or
nop
sub
jl
xchg
jl
xchg
and
ret
gs
sbb
test
and
lret
mov
add
mov
outsl
cmpsb
xor
mov
aad
popa
cmpsb
arpl
push
mov
dec
jl
sub
das
mov
add
pop
xor
addr16
sbbb
push
inc
jge
lret
dec
test
pop
loop
push
in
jae
lea
jp
sti
push
cmp
mov
std
and
jb
test
dec
mov
mov
jbe
out
emms
dec
xchg
fwait
enter
add
jnp
and
push
mov
ret
and
xchg
xchg
stc
push
dec
out
fsubs
jle
cld
dec
mov
jge
aad
loop
dec
je
pop
mov
sbb
rorl
imul
sbb
sub
lret
bound
xchg
pop
ja
and
jnp
push
inc
sti
xchg
mov
in
cmp
call
fnstcw
adc
test
stos
movsl
out
outsb
pusha
push
jns
into
shld
repnz
mov
cltd
xlat
dec
xor
mov
xchg
push
add
jg
inc
repnz
sub
neg
int
loope
ror
shl
mov
cmp
mov
xchg
out
cmp
xor
cli
in
cli
push
inc
gs
or
jecxz
adc
push
lea
inc
out
xor
jecxz
fdivr
bound
pop
sbb
fwait
jo
cwtl
mov
imul
shrb
out
popl
insl
jmp
or
pop
scas
in
mov
cwtl
cmpsl
xchg
loop
stc
imul
mov
lds
sbb
movsl
popa
and
mov
lea
insb
sbb
cld
sbb
jae
sbb
mov
fs
test
vpsrld
cmc
sbb
jge
and
out
sbb
mov
ss
aaa
int
mov
xchg
xor
rcrl
in
mov
mov
fdivl
xchg
outsb
pmulhuw
mov
sub
cmp
jb
mov
and
adc
jg
scas
mov
popf
cltd
mov
dec
loopne
mov
pop
negb
clc
inc
movsb
xchg
jno
xor
fstp
inc
movsb
jae
xchg
aad
call
dec
movsb
adc
inc
loop
pop
scas
cmp
mov
jge
mov
je
ret
or
mov
push
fcoms
cltd
divb
cmp
push
lods
mov
cmp
adc
cltd
xor
push
aas
pusha
xchg
mov
push
dec
dec
lods
test
adc
lea
cltd
mov
sub
pop
cmp
adc
or
pushf
aam
jbe
xor
lock
mov
jae
out
cmp
pushf
jns
add
push
mov
add
pop
add
mov
bound
xor
ss
jae
sub
sarl
lret
mov
ds
jp
aam
filds
push
mov
in
ror
fldenv
xchg
gs
mov
mov
mov
mov
cld
push
in
inc
mov
jnp
mov
xor
xchg
movsb
and
add
sbb
jp
leave
test
test
sar
push
ficoms
ret
movsl
pop
or
filds
clc
xchg
sbb
xchg
xor
cli
pop
call
add
or
sar
sub
sub
push
sub
jle
out
push
cli
cld
repnz
dec
add
cli
mov
ret
rol
cmp
mov
mov
jno
lret
scas
or
xchg
sub
dec
add
add
inc
rorl
cmpsb
rorl
jne
jle
lods
mov
xchg
je
test
mov
loope
mov
sub
out
int3
pop
sar
mov
cmpsb
jns
flds
xor
jnp
stos
aas
and
pop
jp
sbb
fiaddl
xor
mov
pop
out
jmp
jns
xor
andl
dec
and
adc
movsl
push
in
mov
sahf
rcrb
xlat
xchg
rclb
adc
sbb
stc
outsl
inc
aam
inc
push
jbe
mov
movq
hlt
das
pushf
mov
repz
test
mov
sub
in
xor
jg
rorb
cmp
mov
test
xor
pop
iret
dec
adc
insl
aad
sbb
imul
out
and
xchg
sub
push
mov
stc
dec
movl
inc
int3
test
dec
mov
dec
push
ja
mov
sbb
add
xor
mull
loope
testl
mov
cmp
push
pop
xor
add
or
jae
jge
lds
fisttps
mov
mov
mov
lods
ja
lahf
test
push
andb
add
xchg
dec
ror
push
fisttpll
xlat
lret
mov
xchg
enter
sbb
sbb
xchg
in
scas
push
scas
out
xor
inc
add
gs
inc
aad
into
in
stc
stos
jp
cld
mov
mov
inc
mulb
stos
mov
mov
adc
mov
dec
xchg
and
fcmovnu
fucomi
mov
fists
add
imull
sbb
jae
pop
xor
push
push
jle
fisttpll
pop
xchg
popf
jbe
pop
lods
lods
into
loop
push
es
xor
hlt
jb
int3
adc
fiaddl
add
inc
mov
sbbl
aam
je
sbb
insl
stc
inc
jp
sbb
pop
lcall
addr16
shlb
xor
or
scas
ficompl
in
inc
jp
insb
pop
pop
int
mov
hlt
and
ret
int3
fldt
decl
cmp
fmul
xor
movsl
aad
ficompl
call
push
dec
test
es
push
into
fsubr
outsb
sahf
out
popa
sub
inc
jbe
xor
pop
push
es
in
or
and
out
lahf
push
xor
outsb
cmp
fcompl
aas
loop
adc
aam
mov
add
xchg
lcall
cmpsb
push
pop
pop
jne
mov
ret
ret
cld
mov
jb
mov
jb
mov
dec
cli
push
pop
push
cmc
cmp
or
inc
pusha
mov
cmp
and
mov
add
adc
outsb
js
mov
pop
push
aam
lds
adc
mov
dec
lahf
mov
jmp
or
dec
cs
subl
xchg
fdivrl
lret
mov
out
cld
mov
inc
sbb
sub
push
sbb
jno
jge
sbb
out
adc
mov
popf
jb
ficompl
dec
dec
push
mov
xchg
adc
push
sub
iret
in
push
out
jle
fsts
add
dec
xchg
pop
cmpb
or
insb
pushf
sub
pop
out
ret
push
dec
adc
into
lret
cmp
or
mov
adc
divl
mov
sub
aad
loop
jns
push
ljmp
imul
add
aas
jne
cmpsb
and
xor
iret
inc
pop
inc
jecxz
inc
or
lret
jl
repnz
jbe
and
in
cmpb
mov
push
aaa
cmp
mov
xor
and
push
addr16
sub
push
or
ret
sbb
sub
out
adc
mov
les
test
test
fsubrs
cmp
lret
cmp
sub
cmpsb
clc
sti
push
orl
mov
in
std
ss
push
movsl
push
jns
loop
and
cs
das
enter
jne
xor
jns
xchg
xor
pushf
xor
ss
mov
outsl
push
cs
push
add
jmp
xchg
fdivrs
or
vmread
push
gs
out
pcmpgtd
ror
int3
int
jno
xor
adc
lods
dec
aam
dec
sarb
shlb
jle
daa
aad
movb
inc
inc
aaa
adc
orb
and
mov
stos
scas
rclb
insl
fstpt
jnp
inc
in
fistps
stos
mov
inc
pusha
push
mov
sub
lea
ja
xchg
jbe
jnp
ret
push
stc
pop
call
push
mov
mov
aas
pusha
sub
dec
jnp
movl
loopne
rcll
movsb
int
xchg
jbe
jg
push
in
jne
mov
daa
lods
cmpsl
mov
jns
fistps
mov
add
jo
jo
cld
fldcw
mov
or
cmpsb
jne
add
dec
nop
daa
jge
nop
mov
pop
push
mov
xchg
xchg
mov
jp
mov
xor
xchg
mov
or
push
filds
daa
mov
popa
and
aad
jecxz
mov
push
in
clc
push
shll
jmp
mov
jae
jg
jl,pt
mov
mov
ret
inc
inc
mov
and
imul
movsb
add
je
sbb
cmp
icebp
shlb
mov
or
daa
push
pushf
incl
and
pushf
and
sbbb
dec
cmp
sbbb
out
xchg
mov
push
les
add
jmp
rorb
adc
cli
inc
test
iret
lcall
dec
mov
mov
adc
xlat
jns
je
lahf
insb
pop
cld
and
dec
pushf
lods
sbb
xchg
or
or
repz
lret
inc
ret
pop
fs
outsl
pop
fsts
in
push
cmpb
jo
repz
jle
imul
std
lcall
mov
cld
ja
pop
dec
pop
pop
scas
rcrb
mov
jo
mov
mov
mov
lcall
push
test
push
cmc
mov
jne
fildll
xlat
adc
jae
xchg
inc
leave
andb
push
push
lock
test
mov
sub
ljmp
xor
dec
mov
jae
stos
push
mov
add
gs
push
cmp
pop
out
das
mov
int
or
cltd
mov
xchg
dec
fstl
mov
and
insb
lea
cmp
in
fisttps
outsb
es
adc
movsb
push
lock
shll
xchg
cld
adc
clc
sbb
test
icebp
sbb
inc
fcomi
int3
xor
jmp
call
dec
mov
pop
xor
sbb
lods
test
shlb
popa
roll
dec
adc
fistpll
pop
sbb
orl
aad
jg
dec
outsl
jae
ret
fcmovne
leave
aam
pop
jns
push
mov
jbe
repz
mov
dec
loop
adc
adc
fbstp
mov
cltd
sbb
repz
lcall
aad
loop
pushf
or
pop
jl
test
movsb
loop
fnstenv
and
dec
ret
adc
jg
sub
call
pop
gs
int
inc
adc
inc
xchg
pop
inc
data16
arpl
add
popa
add
lods
repnz
add
pop
and
mov
add
repz
jns
push
and
out
push
lret
jnp
xor
or
out
xlat
jne
mov
je
lret
int
xchg
in
xchg
pop
add
cmpl
push
push
or
mov
test
jns
cmpsl
push
ljmp
sbb
adc
pop
xor
out
mov
add
imul
adc
inc
leave
mov
mov
inc
mov
fdivs
dec
cmp
xlat
xor
mov
nop
push
loop
push
mov
hlt
xchg
mov
outsb
fstl
mov
popa
push
int
push
stos
fisubrs
test
fnstenv
mov
jle
jnp
test
iret
cmp
repnz
mov
out
and
mov
or
push
pop
shl
xchg
cmp
add
pop
cli
sbb
cmp
andb
inc
je
add
pop
mov
scas
les
adc
xor
sahf
out
mov
movsb
add
movsl
or
dec
sub
ss
push
aam
pushf
jp
daa
enter
lret
jo
push
inc
inc
pushf
cmp
out
inc
test
data16
sbb
mov
cmpb
pop
cmp
mov
pop
sbb
cld
sub
pusha
xor
jno
sub
scas
mov
loop
fdiv
jg
sbb
pop
and
ret
push
push
ds
jo
pushl
imul
int3
adc
ds
divb
mov
jb
fiaddl
sbb
fwait
dec
in
sti
lock
fsubl
test
aam
cmc
loopne
dec
imul
inc
cmp
fbld
ret
mov
mov
fldenv
fwait
pop
lcall
je
stos
mov
arpl
jg
cmpl
xchg
in
xor
pop
jecxz
lods
sti
push
mov
xchg
inc
pop
jno
stos
sub
push
popa
cmp
insl
xor
push
lahf
jns
jno
xchg
push
icebp
movsl
push
sti
pop
jnp
inc
das
mov
adc
lret
js
jbe
cmp
mov
data16
jg
xor
roll
imul
mov
sub
dec
ret
xchg
test
int
out
add
std
push
xchg
gs
mov
repnz
adc
lret
je
push
adc
cmpl
adc
test
xor
adc
xor
sbb
mov
xchg
xor
lods
jecxz
mov
adc
dec
push
adc
popa
sbbb
flds
push
nop
dec
sbb
mov
jno
or
fsts
push
scas
out
inc
insb
mov
gs
bound
les
sbb
adc
mov
mov
icebp
aam
sbb
test
ja
test
jl
sub
xchg
pop
xchg
mov
inc
test
jle
cmpsb
jne
insl
std
add
fstpl
mov
addl
jp
sarl
jg
popf
push
outsl
dec
hlt
rcr
jnp
push
stos
pushf
aas
test
jns
pop
jno
xchg
mov
cmp
inc
inc
cmpsl
pop
repz
xchg
fnsave
or
outsb
lock
add
inc
lea
sbb
lahf
add
and
mov
push
aad
mov
add
add
out
adc
outsb
push
clc
cmc
in
nop
xor
adc
push
mov
and
sub
mov
movl
jge
sbb
outsb
in
shrb
popf
pop
shlb
repnz
sub
bound
sub
aaa
dec
aad
jb
lock
add
sbb
xchg
sub
pop
and
sbb
ja
or
clc
push
ss
xor
dec
popa
lahf
movsb
subb
jmp
repnz
adc
push
jo
sub
pop
ret
enter
les
push
mov
out
mov
push
outsl
jnp
fsubs
ljmp
popf
jle
jo
fidivs
jmp
das
pop
roll
negb
or
pop
rcr
cmp
push
mov
mov
add
xor
scas
xchg
or
insb
mov
sub
sbb
shlb
aad
or
or
lret
inc
cmp
loopne
shrb
xchg
ret
adc
sub
dec
ss
dec
sub
sbb
int
push
push
jg,pn
cmpsl
jmp
inc
add
lahf
call
je
cmpsb
xchg
adc
lret
pop
sbb
gs
addr16
test
ja
dec
scas
je
in
sbb
rolb
icebp
mov
jmp
cwtl
dec
lea
aaa
into
shll
add
movsb
leave
lds
jp
fwait
mov
aas
movsl
addr16
mov
jl
jl
ss
mov
sbb
mov
jae
int
xor
fistpl
mov
dec
out
mov
test
mov
jno
xor
loop
add
out
stc
rcrb
inc
xor
or
inc
jp
adc
in
test
push
sbb
xor
sahf
mov
add
repz
or
mov
mov
xor
dec
xchg
or
out
mov
sbb
mov
icebp
mov
lahf
push
mov
cmp
inc
dec
cmp
pop
xchg
mov
cmp
adc
dec
xchg
mov
test
or
nop
repnz
mov
push
ret
xchg
dec
xor
clc
stc
cmp
movsb
lcall
repnz
jbe
cmp
lods
cmpsl
lock
daa
adc
mov
cli
sti
loopne
movb
xchg
aam
test
scas
in
es
repz
push
filds
scas
mov
repz
xlat
insl
aaa
push
inc
into
mov
test
xor
cbtw
or
jae
xor
leave
sbb
and
mov
add
add
cmp
sbb
aaa
bound
fwait
inc
hlt
or
and
lods
sti
mov
jg
test
add
mov
sti
pop
jmp
cld
xchg
cmp
cmp
fildll
rcrb
negb
enter
sub
aas
xchg
push
shlb
mov
out
sbb
loopne
sbb
hlt
ja
cmpsb
adc
call
ss
jl
dec
ficomps
push
mov
and
stc
jl
sub
popf
and
stos
dec
inc
clc
lcall
push
stos
mov
mov
fisttpll
jb
pop
push
imull
pop
aaa
jbe
mov
xorb
cmp
mov
rcll
jg
decb
into
push
pop
test
in
mov
scas
pop
xor
movsb
ss
dec
cmpl
pop
jp
mov
ja
mov
cmp
add
shufps
jge
mov
push
mov
arpl
push
jb
add
cmp
mov
clc
bound
pop
jns
xorl
test
lcall
xchg
pop
in
jecxz
pop
fs
das
loop
jg
pop
xor
je
jae
and
xchg
or
mov
xor
jp
sbb
ret
out
andb
pop
jnp
jne
cmp
popf
cld
lcall
cmp
test
mov
pop
aas
incb
enter
jg
mov
xor
xchg
jbe
mov
iret
mov
sbb
ds
xchg
outsl
xor
cs
lds
jb
aaa
xor
cmpsb
je
cmpb
les
mov
shlb
daa
push
clc
clc
pop
int3
mov
mov
jp
int
jne
mov
rorl
cmc
pop
push
pop
push
adc
xchg
cmp
jg
add
sub
push
mov
adc
cmp
outsl
and
dec
fldenv
mov
jns
lahf
aas
cmp
push
in
jbe
xchg
ret
xor
dec
nop
leave
dec
xchg
or
scas
inc
jbe
push
int3
out
lahf
jg
lcall
into
or
call
xchg
sub
gs
inc
sbb
inc
or
sub
imul
sti
repnz
pushf
mov
iret
out
and
sub
and
bound
sub
xchg
pop
dec
push
sbb
and
in
cmp
mov
scas
outsl
adc
aam
push
or
mov
std
xor
ja
sbb
adc
xchg
jb
add
push
dec
and
int
sti
mov
push
push
movsl
out
and
pop
cli
pop
into
push
fs
sub
push
mov
mov
push
clc
divl
clc
dec
pushf
out
cmp
mov
insb
fisubl
fsts
cmpl
mov
xchg
xor
lock
outsl
shlb
lock
jmp
dec
jl
and
jmp
cwtl
in
adc
mov
push
add
mov
mov
cmp
gs
ljmp
mov
rcrb
adc
jae
jg
jg
repz
lods
sub
sbb
std
arpl
cmp
mov
fsubr
xchg
or
mov
xlat
arpl
movsl
mov
sub
in
mov
mov
add
or
cmp
add
and
adc
out
in
cmpb
sub
xor
mov
mov
push
cld
addr16
and
xchg
out
dec
mov
shll
pop
jge
jb
shll
inc
shll
sti
cmp
mov
ficompl
adc
and
xchg
xchg
xor
fcomip
insb
push
dec
mov
mov
insl
xchg
out
pop
stos
lock
inc
push
lret
mov
into
outsl
fistpl
nop
movsb
jb
insl
jp
nop
inc
out
add
insb
arpl
pop
aas
test
in
out
jge
shlb
inc
or
mov
test
ja
inc
popa
stc
pusha
aaa
iret
sbb
into
push
repnz
pop
pop
lahf
pop
loop
mov
cmp
cld
adc
mov
cmp
pop
mov
repz
cmpsl
add
pop
mov
call
xchg
push
aas
sbb
loop
jecxz
pushf
dec
sti
xchg
shrl
aaa
jo
push
call
cmc
pop
loop
cwtl
popa
mov
mov
popl
pop
cmp
jb
sbb
mov
fdivrl
inc
repnz
xor
out
add
stc
fbld
xor
inc
xlat
mov
data16
loope
add
pushf
dec
dec
sub
xchg
aad
and
sub
push
adc
xorl
jbe
mov
jb
xchg
mov
pushf
pop
xor
jl
and
enter
lret
xlat
dec
mov
mov
in
jmp
adc
inc
stos
mov
jle,pn
fwait
xor
add
aaa
fimuls
xlat
dec
adc
out
mov
fisubrs
xor
push
adc
cmp
xlat
mov
push
je
and
mov
and
in
int
repz
mov
mov
or
es
pop
jmp
mov
shrb
push
movsl
xchg
xor
xchg
pop
nop
shrl
mov
insb
cs
fidivrl
ljmp
hlt
fidivl
push
xor
jo
mov
loope
push
in
mov
adc
rorl
iret
xor
iret
pop
cltd
jae
pop
sbb
lcall
int3
mov
iret
sbb
mov
cmc
sub
mov
frstor
lret
test
arpl
popa
fisttpll
lods
adc
xchg
out
pushf
add
movsb
mov
scas
xchg
xchg
xchg
mov
or
adc
neg
decl
cmp
test
lcall
ljmp
arpl
daa
adc
sahf
or
add
xchg
sbb
push
jb
sub
rorl
call
xlat
in
into
outsb
ss
or
mov
push
and
ds
fmull
fiaddl
xor
orb
cmp
loope
leave
or
pop
xor
mov
stc
cs
test
mov
jle
clc
and
popf
test
fsubrl
mov
inc
jno
inc
aaa
xchg
loop
clc
mov
ffree
jno
subb
inc
sub
cltd
ds
push
popf
movsl
rcll
rol
pop
stc
test
js
test
sbb
xchg
mov
push
out
ret
sti
push
push
in
adc
sub
repnz
push
loope
es
leave
lods
jb
enter
xor
scas
xchg
and
jne
aas
mov
xchg
shll
mov
mov
add
adc
or
xor
lds
cmc
xor
jbe
notl
sbb
aaa
mov
cmp
and
mov
repz
dec
jmp
and
xchg
cld
les
xor
sbb
imul
pop
pop
lds
adc
mov
mov
sub
inc
call
addb
fwait
stos
repz
xor
sbb
xrelease
xor
dec
notb
mov
dec
xchg
insl
cmp
sub
lahf
dec
pop
rorl
orb
sbb
or
pusha
ja
inc
mov
cwtl
shlb
mov
pop
mov
fidivrs
fisttpll
jg
or
in
pop
test
rclb
inc
popa
sti
xchg
rcrl
jbe
xor
xchg
sub
lret
mov
ret
iret
imul
jbe
stc
cltd
pushf
sbb
pop
scas
fildll
pmulhw
andl
push
out
add
add
or
cld
dec
inc
sti
andl
mov
or
jns
scas
sbb
cmp
es
xchg
pusha
cmpsb
sbb
inc
aas
loop
iret
mov
lret
in
test
sub
pop
pop
xchg
hlt
ljmp
loopne
int
aam
jmp
adc
ja
inc
xor
dec
lods
and
push
sub
addr16
cmpsl
mov
jmp
mov
mov
add
jg
cmpsb
add
test
jecxz
sub
push
bt
ret
stos
into
fsubrp
into
pop
int
cmp
jo
imul
cmpsb
pop
mov
lret
in
scas
inc
repz
out
insb
divb
sbb
jecxz
aad
lock
movsb
sbb
or
test
cmc
faddp
mov
lds
roll
repz
ds
test
aaa
movsb
mov
mov
mov
adc
shll
xor
jb
push
aad
xchg
jl
push
mov
adc
xchg
adc
fldt
stos
add
sub
mov
stc
pop
xchg
pop
fidivrl
lret
loope
aam
cs
sti
xor
sbb
jmp
daa
jl
jb
loopne
fimuls
push
xor
cmpl
aad
push
adc
movb
ss
add
cmp
and
outsl
insl
push
adc
push
out
mov
cmp
xchg
jp
lret
and
lahf
leave
pop
jnp
lahf
mov
out
jmp
cmp
xchg
inc
xchg
lret
out
cmp
mov
dec
push
shrb
push
sub
pop
jo
out
test
cmp
loop
cmc
shll
sub
sarl
insb
sarl
aaa
icebp
jge
imul
cltd
pusha
pop
sub
sub
je
movsb
mov
mov
ret
jnp
adc
icebp
xorb
pop
lods
and
push
int
sbb
fidivrl
popa
lahf
ds
enter
pop
aam
cmpsl
lret
rcrb
inc
pop
fnstenv
or
push
push
call
ja
xchg
idivl
mov
inc
jle
mov
sbbl
das
inc
sbb
xchg
sbbb
mov
enter
out
loop
movl
ret
ret
mov
pop
shrb
imul
cmp
pop
nop
dec
and
rcrb
mov
scas
mov
mov
jbe
ss
in
out
out
xor
mov
inc
stc
aam
movsb
fdivrp
xor
and
icebp
cs
sahf
lcall
inc
sub
test
bound
fs
pushf
xchg
scas
jnp
dec
cmp
scas
xchg
cltd
add
and
sar
ja
sbb
inc
inc
aad
testl
add
or
sub
fnstcw
sub
mov
dec
insb
ds
ss
scas
cmp
repz
xchg
cmp
gs
je
aas
jg
sub
push
fmull
mov
and
aad
loopne
popf
mov
movsl
ret
or
push
pusha
cmp
push
xchg
or
js
pushf
adc
and
jge
sbb
daa
fistps
xor
push
psubsb
pop
cmc
scas
pop
dec
sub
push
out
mov
outsl
cld
mov
pop
dec
scas
lods
cmp
mov
mov
inc
add
dec
stos
xor
sbb
shlb
pop
sbb
loope
fsubrl
jae
call
jp
es
aam
xchg
mov
cmp
xor
jecxz
mov
in
repz
jbe
repnz
xor
and
in
xchg
sbb
cmp
mov
bound
imulb
xchg
mov
out
hlt
pop
cmc
jnp
pop
xor
clc
div
adc
cmpsb
movsl
jl
jnp
xchg
fstps
in
mov
stos
aas
repnz
mov
testl
inc
dec
inc
bound
test
cmc
scas
jns
insl
mov
or
fmuls
xor
arpl
jmp
fldt
call
ja
mov
hlt
fwait
mov
cmpsl
mov
leave
mov
or
xchg
pop
xorl
xlat
fsubs
cli
cmpsl
test
into
cwtl
jno
fldcw
or
addl
cmp
mov
nop
clc
out
test
loope
sub
mov
daa
movsl
jg
cmp
mov
add
jge
and
jbe
and
ss
int3
sub
js
xchg
and
out
pop
pop
loopne
add
xchg
and
inc
pop
dec
xor
les
push
cmp
push
cmp
daa
hlt
inc
or
jns
mov
iret
adc
andb
adc
or
jge
or
imul
js
inc
adc
jmp
insl
push
pop
and
inc
jb
clc
sub
mov
adc
mov
mov
add
dec
mov
jo
mov
std
sbb
mov
inc
scas
xchg
stos
aas
jnp
or
jp
jo
bnd
cmp
adc
inc
inc
loop
mov
inc
mov
movsl
jnp
adc
xchg
int3
xchg
pop
leave
mov
inc
ds
adc
out
push
or
add
ja
clc
hlt
sbb
inc
test
pop
xchg
mov
sbb
out
pop
adc
out
cmp
repz
inc
loope
mov
cmpsl
aaa
inc
cli
movsl
sbb
out
inc
cmpsb
in
or
and
ret
insl
out
movsbl
fcmovne
sbb
cld
and
mov
xchg
inc
add
pop
pop
jle
sub
add
divb
enter
faddl
rcl
lahf
fs
mov
pop
mov
stc
sbb
and
mov
sub
or
xor
loopne
jns
repnz
push
jb
or
call
loopne
cmp
push
pop
data16
inc
add
in
hlt
cmp
sahf
xor
dec
add
add
mov
das
and
roll
out
scas
jmp
cmp
loope
iret
inc
xchg
adcl
push
scas
es
aam
cmp
mov
pop
sti
cld
dec
roll
pop
pop
insb
cmp
jne
iret
repnz
mov
pop
push
sbb
mov
and
jb
in
and
mov
or
psadbw
adc
push
ja
mov
subb
and
dec
mov
xorb
mov
inc
sub
xchg
sbb
bound
inc
mov
cmp
and
cmp
mov
test
stc
jbe
insb
je
pop
xchg
xor
xor
jnp
mov
cmp
lods
test
add
ljmp
push
movsb
lds
and
frstor
adc
xchg
sysexit
add
jmp
push
cmp
aam
mov
pop
fiadds
aaa
in
xor
test
movsl
lods
adc
jmp
scas
iret
jmp
mov
or
lock
pop
push
cmp
xlat
mov
and
jmp
inc
outsl
jle
scas
sarb
add
pushf
cmp
fidivrs
dec
cmp
pop
mov
and
outsb
aad
mov
addr16
push
int3
mov
je
mov
movsb
jecxz
pushf
arpl
btc
pop
push
dec
pop
leave
pop
mov
xor
dec
push
repnz
jle
ljmp
add
cmpl
mov
addr16
std
cli
dec
das
mov
cltd
aam
jae
aam
sub
xor
icebp
dec
xor
sub
mov
xor
xchg
inc
or
add
dec
push
aam
cltd
gs
fsts
inc
jle
out
testb
cltd
cmp
rcl
in
lds
adc
bound
addr16
fdivr
sub
aas
daa
dec
push
loop
push
cmp
iret
repnz
es
test
movsl
mov
lahf
mulb
jns
sub
test
test
sub
fistpll
xchg
dec
and
loop
cmp
in
popl
sub
pop
ret
mov
sbb
xor
and
loopne
dec
add
cmpsl
ss
fs
sub
lods
loop
int
xor
das
cmp
clc
fwait
lret
sti
jge
cmc
sub
cmp
lea
mov
movsl
clc
adc
sti
pop
add
scas
or
push
adc
jne
push
and
sbb
mov
jo
and
push
iret
repz
movsl
or
inc
fs
ja
data16
xor
addr16
sub
adc
sahf
jmp
jne
div
ret
dec
inc
push
fimuls
in
and
lods
xor
mulb
sbb
inc
jge
fnstsw
mov
jo
lods
and
aaa
xchg
popa
xchg
mov
adc
xchg
ret
jo
inc
mov
test
cmp
adc
movb
in
xor
into
xor
fdivp
jmp
add
lret
js
or
inc
inc
lds
mov
cwtl
inc
pop
iret
pusha
arpl
xchg
push
adc
stos
subl
push
xchg
jno
push
add
cld
popa
jp
jbe
or
sub
xor
add
inc
cmove
loope
fldenv
dec
xchg
repz
sub
std
push
or
popf
lods
clc
cmp
imul
out
mov
sbb
ret
sarb
mov
ss
daa
iret
mov
mov
movsb
xor
arpl
iret
lea
xchg
leave
push
call
orl
xchg
mov
dec
add
jae
push
ja
dec
pop
cltd
push
fstpt
pushf
arpl
lods
pop
add
jge
insb
mov
mull
icebp
inc
scas
mov
js
and
cmpsb
in
nop
push
sub
push
cmp
pop
xchg
shl
xor
xor
lods
in
jge
cmp
or
cmp
pop
pop
pop
cld
push
popa
and
dec
insb
sub
in
lods
jg
call
push
mov
add
adc
stos
xor
mov
pop
inc
loopne
add
test
jmp
mov
jne
hlt
sub
adc
xchg
pop
dec
cwtl
mov
lret
cmp
es
aaa
pop
adc
enter
mull
dec
aam
xchg
movb
push
xchg
aaa
xchg
jmp
jp
sbb
pop
outsb
dec
and
push
dec
pop
aam
mov
push
sbb
fildl
dec
in
lret
or
pop
div
shrl
adc
mov
and
push
aam
adc
xchg
bound
ftst
mov
ds
xchg
dec
sub
sub
fmulp
cmpsb
into
stos
cmp
int
lds
test
test
fldt
out
fwait
ret
scas
mov
jnp
push
inc
arpl
sar
jno
jns
daa
add
leave
in
push
stc
and
jle
jae
and
jg
fsubr
xor
enterw
and
xchg
bound
pop
data16
and
popa
sbbb
icebp
les
in
mov
pop
shrb
call
or
xor
add
mov
repnz
fistpl
loopne
jecxz
xor
pavgb
dec
scas
js
xor
dec
imul
fimull
fwait
xchg
shlb
dec
rolb
dec
insb
mov
cmp
push
imul
dec
sub
sub
pop
imul
popf
push
andb
enter
add
mov
inc
inc
call
xchg
or
pop
lods
aam
imul
scas
fadds
inc
icebp
dec
mov
fwait
outsb
inc
cmp
mov
cmp
jne
adc
add
shlb
ror
cmp
shll
and
pusha
sbb
roll
gs
lret
mov
int
cwtl
sub
shll
or
xor
js
jp
outsl
ja
push
rorl
cmpsb
rolb
je
push
test
xchg
push
cwtl
ss
pop
stc
clc
dec
inc
ljmp
pop
inc
inc
mov
xchg
cmp
inc
and
mov
sbb
jle
push
mov
lret
sbb
xor
outsb
rcl
pop
jle,pn
loopne
or
jae
xor
mov
mov
aas
std
cs
sbb
push
mov
pop
mov
fbld
fwait
adc
mov
sbb
insl
sbb
fwait
cwtl
imul
xchg
xor
or
mov
mov
fstps
pop
pop
dec
mov
adc
or
je
dec
imul
movsb
or
aas
xlat
inc
ljmp
xor
nop
test
or
ret
jg
mov
lods
stc
shl
pop
lcall
dec
testl
pop
xor
aas
mov
lcall
jmp
xor
sub
scas
outsl
pop
mov
add
repnz
lods
rcrb
fsubs
cld
mov
sbb
jg
push
mov
imull
pop
insb
adc
lds
addr16
int
push
shrb
loopne
pop
int3
jbe
jmp
xchg
mov
sub
add
aas
inc
add
push
pop
stc
push
test
sbb
sbb
push
idivb
lods
cmp
mov
fwait
xor
and
in
mov
pop
sbb
inc
movsl
ret
push
mov
inc
jae
xor
and
xadd
adc
push
in
jae
sub
push
push
push
outsl
mov
fwait
repz
xor
loop
pop
pop
pop
sub
insl
in
sbb
cmp
cltd
push
imul
es
xor
testl
into
movsl
rcrb
mov
test
xchg
xchg
repz
fadds
dec
and
mov
scas
cmc
adc
cmpsl
dec
lret
pop
jae
xlat
mov
push
cmp
add
push
xor
mov
cmp
jle
mov
lds
jb
cmc
test
xlat
dec
add
jl
inc
iret
cmp
dec
pop
xchg
or
test
push
vmwrite
insb
out
mov
dec
xor
pop
add
fidivrl
loop
aaa
loop
add
jb
xchg
stos
incb
rorl
cmp
pop
sub
unpckhps
mov
jmp
ljmp
out
inc
cs
stos
mov
test
push
inc
leave
ja
pop
inc
cmp
jg
mov
pop
clc
sub
lcall
addr16
and
xchg
dec
push
andl
lret
add
mov
or
mov
cmpsl
pop
sub
call
sub
push
fisttpll
inc
sub
push
cltd
sti
lods
data16
lock
movsl
lret
sub
not
fldl
inc
sub
out
cltd
add
mov
call
dec
sub
jb
push
push
push
mov
xor
adcb
icebp
lods
shlb
sbbb
push
push
inc
jg
div
adc
aas
mov
pusha
mov
je
int
mov
push
xlat
pop
xor
jbe
ret
mov
in
xchg
cmc
cmpsl
sub
les
jns
insl
daa
subb
mov
push
jo
iret
outsl
push
mov
and
mov
pushf
cmp
sbb
xchg
andl
xor
jl
repz
incb
movsl
sub
adc
insl
pop
fwait
xchg
xchg
push
hlt
fwait
sub
push
push
sub
les
inc
js
test
insl
jmp
cmc
jb
ret
or
testl
fstl
test
cmp
ret
mov
push
outsl
ja
jmp
mov
stos
int3
mov
push
stc
mov
mov
inc
lock
lds
add
mov
popa
and
inc
dec
mov
rorb
xchg
jns
lock
cwtl
inc
imulb
gs
pop
insb
xchg
testb
jnp
sbb
jle
cmp
or
insl
les
or
arpl
inc
daa
xorb
into
sbb
imul
scas
or
dec
fwait
scas
mov
loope
xor
cmpsb
movsb
call
dec
stos
mov
aam
addb
nop
aaa
add
mov
test
cwtl
pop
jmp
mov
add
fisubrl
add
cmpsb
jns
mov
xor
loopne
mov
mov
mov
adc
or
and
in
cmpsb
lea
and
pop
data16
js
jns
mov
push
xor
subl
dec
cwtl
jmp
out
nop
pop
das
inc
subl
sbb
jae
fcomps
nop
bnd
add
push
and
inc
jmp
das
sbbb
jno
sti
lods
pop
adc
test
mov
xor
mov
cmp
rolb
scas
pop
adc
xrelease
push
in
pop
hlt
sub
cmp
decb
cwtl
sbb
negl
jae
mov
xchg
sbb
push
nop
inc
xchg
xchg
es
ljmp
cld
les
dec
ds
xlat
leave
inc
loopne
scas
jne
mov
and
lret
pop
xchg
inc
pop
cmp
jmp
xchg
mov
movsb
mov
js
fnstenv
mov
sub
in
in
shl
orl
mov
stos
or
and
or
in
andl
shlb
mov
aas
cmp
or
mov
loop
push
mov
arpl
dec
outsb
jb
mov
xchg
mov
ja
addb
jg
addr16
js
cwtl
scas
dec
pop
lret
rorl
dec
inc
orl
xchg
mov
mov
adc
xor
test
add
mov
cltd
jg
sarl
xorl
mov
push
popa
push
out
in
test
sub
shlb
pusha
ret
icebp
call
test
sbb
lods
sbb
std
and
les
pop
ror
sarl
mov
cld
and
daa
or
clc
push
dec
roll
shr
pop
iret
and
aas
out
pop
test
mov
in
fs
mov
mov
xchg
pop
jne
sahf
xor
imul
int
adc
or
fnstsw
lds
xchg
insl
lods
mov
jnp
lock
mov
jl
ss
xor
sbb
arpl
stos
mov
inc
jge
mov
and
push
dec
push
div
sbbb
outsl
fdivp
xlat
xchg
fnstsw
addr16
or
mov
mov
pop
mov
lods
xor
xchg
mov
lods
loope
push
xchg
mov
adcl
mov
xor
push
pop
pushf
pop
add
pop
roll
push
aaa
dec
les
push
inc
jecxz
je
repz
mov
enter
data16
jo
loopne
push
setp
jb
dec
call
ds
xchg
cmpsb
les
cltd
push
and
aas
out
scas
pop
dec
sbb
mov
and
loopne
sbb
pop
test
xchg
push
dec
mov
fcmovne
dec
cs
fsts
xlat
jbe
je
lret
sub
and
arpl
out
ret
cmpsl
stos
loope
cmp
adcl
outsb
dec
push
push
in
in
ss
clc
inc
fiadds
jp
mov
adc
stos
cmp
pop
mov
push
xorl
push
ret
loope
out
jg
fbld
jl
push
pop
jl
das
or
popf
jne
icebp
cwtl
cmpsl
add
adc
inc
inc
arpl
repnz
imul
mov
pop
pop
cli
hlt
test
mov
ficoml
mov
push
lcall
xchg
push
dec
enter
jo
cld
mov
repnz
or
out
adc
ds
pop
mov
sub
mov
sahf
enter
mov
mov
movsl
into
out
cmpsl
cmp
mov
scas
ret
push
xchg
imul
jl
jnp
fwait
sbb
in
adc
mov
inc
sti
push
add
neg
and
shrb
mov
adc
and
test
mov
data16
xor
andb
mov
dec
das
imul
fimuls
pop
int3
or
scas
dec
js
push
add
outsl
in
stos
inc
ret
mov
mov
lahf
mov
je
add
sub
mov
mov
arpl
mov
mov
std
mov
repnz
mov
jg
je
fsts
pusha
fwait
test
jle
gs
inc
sub
add
mov
push
outsb
mov
fdiv
push
adc
sbb
out
pop
rcrl
xchg
pop
dec
loope
cltd
push
jle
cmp
sub
aad
mov
sub
push
cmp
loope
daa
lret
test
test
push
test
xor
xchg
out
xor
add
roll
dec
sub
adc
add
dec
gs
clc
mov
inc
adc
add
lahf
push
xor
stos
pop
fstpl
and
or
loopne
pop
in
mov
outsl
sbb
mov
xchg
mov
jle
jge
jmp
lahf
adc
outsb
xor
int3
jle
cld
adc
xor
jno
push
fldcw
sub
inc
mov
inc
cmpsl
cmp
gs
cmpsl
dec
xchg
add
dec
pop
ret
mov
out
pop
dec
inc
gs
fimull
mov
and
cwtl
cmpb
jmp
leave
cmp
sbb
notb
sub
lret
cmc
jo
push
mov
xor
movsb
push
cli
pusha
flds
xor
push
orl
je
das
repz
jg
cld
jno
jb
fistpll
jnp
repz
adc
or
xor
jmp
inc
and
daa
xchg
shr
daa
dec
sbb
imul
xchg
mov
sti
cmp
adc
shll
mov
ds
and
xor
and
das
ss
subb
lock
jnp
xchg
push
or
cwtl
mov
enter
cmp
dec
mov
push
and
cmp
mov
mov
pop
sbb
lods
push
cmp
les
jl
cmpsb
sub
and
pushf
mov
lahf
inc
xlat
nop
or
out
mov
mov
cmp
scas
mov
lret
ja
testb
pop
movb
mov
lock
call
push
adc
cli
mov
leave
dec
xor
jmp
cmp
loope
iret
fcmovne
fmull
mov
mov
xchg
in
test
jg
lods
pop
mov
aas
aam
push
mov
int3
add
sahf
mov
popa
sub
sahf
mov
pop
scas
shl
dec
xchg
push
adc
fists
mov
jg
or
fistpl
ds
add
sub
or
pushf
mov
pop
jle
or
push
inc
mov
mov
sbb
in
jle
sti
in
push
push
out
cmp
divw
repnz
subb
mov
in
sub
fdivl
out
sbb
addr16
mov
jle
pop
add
jg
ret
mov
repz
or
cmp
std
mov
push
push
add
add
imul
inc
pop
xchg
fstp
out
lods
adc
gs
mov
cmp
dec
sbb
jne
inc
mov
adc
ret
push
pop
cmp
adc
add
mov
adc
inc
notl
insb
push
repnz
mov
aas
xor
adc
jnp
flds
xchg
mov
adc
fdivs
jae
push
inc
xor
pushf
sbb
loopne
inc
or
add
dec
aad
jnp
subb
test
or
aaa
and
pop
xchg
sbb
int
pusha
mov
insb
push
jle
cwtl
or
sub
out
cli
or
mov
pop
sahf
addr16
sti
mov
push
push
cmp
ss
inc
pop
in
add
mov
sub
sbb
les
aas
mov
xlat
mov
sub
xchg
pop
xor
sub
outsl
iret
dec
pushf
call
adc
and
sbb
daa
inc
fwait
ret
mov
fisubrl
cli
int3
sub
and
xchg
mov
das
cltd
les
or
inc
mov
jmp
arpl
out
cmp
int3
cs
imul
popa
pop
frstor
adc
icebp
push
adc
lock
push
or
outsb
xor
in
jne
pop
addr16
fmull
sahf
andl
je
jl
ds
inc
jg
jmp
cmp
movsb
cmp
push
xor
sbb
mov
leave
mov
pop
mov
add
popa
aaa
xor
cmc
fadds
sub
js
rcl
fistpl
sub
mov
xor
mov
je
fdivr
and
pusha
rcrb
and
push
or
in
xor
or
aad
imul
stc
loopne
rolb
adc
outsl
dec
inc
sbb
ret
mov
jmp
dec
xlat
pop
int3
rcl
cmp
xchg
xor
dec
out
loop
sti
scas
lock
into
fwait
fs
jle
mov
int3
sbb
xchg
inc
mov
jmp
or
mov
icebp
jns
popf
cmp
sub
int3
pusha
inc
insb
mov
rcll
mov
jle
sbb
int
adc
cli
xchg
mov
pop
xchg
push
jb
dec
repnz
pop
in
out
mov
dec
movsl
jo
xchg
lods
pop
pop
xlat
dec
jns
dec
lods
or
xor
int
out
adc
aad
push
mov
xor
push
pop
in
add
in
sub
mov
fcmovnb
fidivrl
xor
jbe
sahf
movsb
arpl
aad
je
push
mov
insb
push
sbb
repz
fwait
jno
fcomip
jo
inc
shlb
dec
inc
and
sbb
cmp
clc
sub
xchg
jl
mov
mov
hlt
imul
push
xchg
add
inc
xlat
mov
cli
dec
insb
in
sub
or
pop
sbbb
pop
mov
div
nop
mov
stos
push
dec
addr16
aam
notl
mov
cwtl
pop
mov
fs
cmp
fisubrl
ds
in
mov
push
cld
or
test
jo
add
outsl
pop
add
adc
sbb
mov
xchg
pop
jecxz
insl
pop
imul
in
loopne
mov
clc
mov
mov
jmp
push
xchg
jge
cmp
cmpsb
imul
cmpsb
ljmp
sub
xchg
sub
inc
xadd
outsb
xor
and
fcoms
js
push
hlt
sub
fisttps
mov
fsubrs
in
and
bound
cmp
aam
mov
les
test
out
jmp
xor
mov
mov
dec
out
out
inc
push
sbb
lahf
test
lcall
add
mov
into
pop
adcb
add
ret
imul
jp
insb
inc
mov
dec
lret
push
scas
mov
or
mov
cltd
in
sub
mov
lds
or
nop
arpl
adc
xor
imul
mov
xor
xchg
fwait
lahf
int
movhps
dec
lret
sbb
mov
in
pop
jg
jle
inc
into
test
push
ret
out
mov
adc
mov
mov
test
in
add
ss
daa
repnz
leave
jl
cmp
and
push
aam
add
sub
cmp
jecxz
cmp
jg
inc
pusha
jmp
dec
pusha
mov
and
adc
lret
lret
mov
push
imul
mov
mov
pop
or
mov
lods
jne
je
sbb
or
fcmovnb
adc
xlat
data16
cmp
mov
movsb
push
add
aad
sbb
push
repz
pop
shl
icebp
and
fimull
scas
int3
lcall
add
add
into
gs
stos
les
pop
jo
inc
mov
inc
cmp
lock
icebp
imul
iret
lcall
push
add
popa
es
je
cmp
outsb
lret
adc
inc
sub
push
test
mov
rorl
dec
jge
jbe
pop
add
into
push
mov
aad
adc
inc
inc
xchg
int3
insb
pushf
mov
add
mov
repnz
ret
xor
andb
in
orl
mov
mov
lahf
add
stos
imul
cmpsb
das
add
pushf
jl
test
add
xchg
movsb
cwtd
xchg
mov
adc
jbe
lret
rorl
mov
inc
clc
lcall
inc
xlat
xchg
push
jl
push
loop
dec
push
xchg
lods
out
mov
test
add
adc
subb
dec
test
mov
jge
js
push
xchg
xchg
loop
jno
pop
fimull
loope
fisttpll
or
repnz
mov
fidivl
in
lret
mov
pop
jmp
incl
shl
in
jge
pop
or
es
mov
movsl
jae
jne
enter
int3
dec
cld
pusha
push
jns
cmp
jp
mov
es
push
jae
jl
and
stos
add
arpl
aaa
pop
jbe
mov
cmpsl
mov
mov
push
mov
xor
outsb
movb
ljmp
repnz
mov
fcoml
daa
pop
sarl
imul
fsts
cli
inc
jbe
stc
inc
sub
inc
outsl
loop
mov
leave
fisttpll
aad
lock
jmp
call
push
stos
int3
sub
lret
rclb
or
scas
loope
in
cmc
pop
jo
xor
cld
in
lock
mov
jnp
mov
and
push
pop
cmp
mov
das
ljmp
inc
or
xchg
sub
dec
daa
push
cmp
mov
cwtl
fs
mov
mov
jp
adc
ficoms
or
adc
addr16
pop
sub
push
cmp
and
scas
and
push
cwtl
lahf
test
jo
sub
in
jp
sub
adc
popf
push
sub
in
add
movsl
mov
or
scas
cltd
stos
jge
ja
dec
movsb
and
pop
int3
jg
sub
inc
sbb
iret
push
jo
lods
cwtl
xchg
cmpsl
push
jbe
fldt
lods
movsl
jbe
sub
sbb
cltd
cmp
jmp
xlat
test
inc
adc
sbb
push
sbb
push
aaa
fs
das
and
cmp
jge
push
rolb
out
mov
call
mov
scas
cli
stc
movsb
dec
mov
push
mov
sub
xchg
mov
mov
test
ret
test
xchg
sahf
mov
xchg
add
rolb
sbbl
dec
mov
sub
repz
adc
loop
sub
aam
fs
adcb
sbb
call
mov
aad
sbb
aad
inc
and
fists
inc
push
mov
imul
sbb
push
or
repz
imul
in
mov
rorb
ret
daa
jecxz
testl
sahf
lret
insb
pop
lods
pop
xchg
mov
sar
test
testl
jbe
dec
mov
lret
add
mov
aas
fmull
jnp
or
or
dec
mov
movsb
xor
add
xchg
adc
jbe
mov
rorb
mov
aaa
mov
std
popa
cmp
pop
sbb
dec
cmp
leave
das
repz
pop
dec
rcll
movsb
scas
andl
adc
int3
pusha
shl
jno
ret
and
sti
pop
stos
or
adcl
mov
mov
fmull
xor
pusha
mov
jl
aam
jno
call
add
mov
cmp
mov
dec
lahf
sbb
jp
jb
or
inc
test
xlat
mov
jo
sbb
sub
push
push
ljmp
ret
ljmp
and
add
stc
ret
jbe
add
mov
iret
xor
and
lea
jne
or
xchg
cmp
outsl
lods
add
lock
arpl
je
lds
arpl
scas
push
lcall
out
inc
xorb
push
aaa
scas
nop
in
pop
into
dec
inc
sti
and
out
arpl
sti
mov
pop
inc
iret
push
xchg
scas
fisubrl
push
inc
pop
adc
inc
mov
push
push
xlat
xchg
inc
and
pop
jo
push
xor
aad
movsb
inc
pop
rorb
mov
mov
test
sahf
mov
mov
lcall
adc
xchg
jo
mov
jae
mov
das
subl
iret
jne,pt
pop
and
push
or
sbb
jnp
lahf
daa
outsb
xlat
mov
lea
inc
out
out
mov
inc
jno
les
cltd
or
jmp
sub
mov
mov
jns
std
push
inc
xor
mov
sub
adc
lock
movsl
mov
std
lret
outsl
test
ljmp
aaa
aaa
xchg
mov
xchg
fistps
shl
push
lcall
out
inc
sti
in
jns
in
lret
ret
in
xchg
faddl
rcrl
shrl
les
sbb
add
loope
outsb
push
ss
call
xor
sbb
push
test
aas
mov
push
jp
and
loop
sbb
push
outsb
cwtl
jb
push
loope
and
mov
pop
mov
repz
cli
loopne
sub
xlat
ret
scas
es
mov
fwait
jle
dec
bnd
jecxz
cmp
cmpsl
mov
mov
lods
fimuls
sbb
mov
lods
je
dec
mov
shll
rcl
mov
mov
add
xor
inc
pop
mov
pop
add
dec
aaa
cmp
push
aas
adc
mov
mov
lret
aad
in
loop
pop
adc
jmp
push
dec
mov
ds
sti
or
in
xor
cmp
in
in
imull
add
movsb
push
vpmovm2d
mov
lods
call
fsubl
jle
sbb
cmc
xor
cmpsl
loop
fldenv
shrl
incb
cmpsb
mov
mov
mov
xchg
fwait
test
sbb
out
push
std
xor
push
inc
push
jecxz
mov
inc
lret
adcl
out
adc
adc
lock
and
pop
push
mov
cmp
adc
fwait
jmp
mov
lds
out
icebp
shl
inc
pusha
cmp
sub
dec
ret
movsb
xchg
int
mov
js
inc
push
insl
sub
test
out
xor
popa
mov
pop
enter
xchg
push
push
xlat
in
shrb
lahf
movsl
testl
fstps
subl
cltd
lds
getsec
mov
sbb
or
mov
mov
jo
mov
mov
shll
xchg
xor
lea
out
mov
roll
jo
add
adc
out
mov
xchg
cmpsb
inc
mov
movsl
cli
incl
jge
inc
int
shlb
addb
adc
pop
ds
fdivrp
mov
sbb
sahf
push
call
in
ret
out
bound
add
test
movsl
repnz
or
mov
xor
mov
add
xchg
mov
inc
or
mov
dec
adc
sub
and
fwait
xchg
iret
pop
addr16
lret
test
pushf
jle
enter
pop
mov
pop
mov
jns
nopl
test
das
xchg
push
testl
std
movsb
in
sahf
jp
fdivl
add
sub
and
jmp
add
sbb
jbe
cmpb
add
adc
sahf
jecxz
ret
outsb
cmp
lcall
xor
push
sub
in
add
jl
ja
cmp
cmpsb
sub
pop
test
sub
stc
jae
push
outsb
lods
or
cmc
cmp
pop
pop
fwait
call
inc
pop
scas
popf
orl
push
cmp
loope
js
icebp
rol
nop
cmpsl
cs
sub
mov
enter
out
push
cmp
insb
push
jo
idivb
xchg
nop
dec
mov
mov
xchg
inc
aam
test
sub
movsb
mov
fsubl
mov
pop
daa
inc
cmp
mov
cmp
xchg
mov
jbe
int
cmp
call
cmc
mov
pop
push
xchg
jmp
sti
data16
pop
dec
es
mov
adc
push
jmp
cmc
in
push
ret
pushf
xchg
xchg
adcb
cld
sbb
aaa
bnd
and
testl
push
js
divb
or
imul
loop
cmp
and
sbb
mov
shrb
repnz
movsb
sahf
push
shll
inc
xchg
movb
cs
mov
mov
push
or
arpl
push
push
dec
lds
xorb
ret
add
repnz
andb
movsl
leave
lcall
ljmp
test
pop
icebp
icebp
out
push
aad
inc
sub
lods
adc
mov
cltd
arpl
xor
push
out
fwait
pop
add
inc
mov
popl
pushf
dec
mov
xor
ffree
inc
or
movaps
mov
xlat
insl
mov
scas
inc
xchg
lock
ret
mov
push
pop
dec
mov
mov
dec
test
lods
xorl
mov
xchg
and
addb
aas
repz
aam
or
pop
cmp
jg
pop
or
xor
mov
push
loop
jp
and
xchg
inc
insl
subl
insb
or
faddl
sbb
repz
adc
mov
inc
mov
inc
jae
or
push
mov
push
je
pop
mov
add
mov
clc
out
inc
inc
notl
cli
insb
xchg
popa
lock
inc
ljmp
dec
fsubr
mov
into
jbe
cmp
les
xchg
sub
pop
mov
push
cld
neg
fldcw
jae
push
dec
jl
sbb
jmp
pop
ljmp
sub
jae
aad
pop
mov
mov
mov
sbb
insl
cmp
call
jg
idivb
outsl
pop
ss
test
or
in
lods
sub
ret
je
xor
imul
xchg
loope
int
cmp
cmc
xchg
adc
loop
fs
xchg
sub
shll
fcmovne
sbb
inc
cli
shlb
xor
mov
xor
mov
stos
rolb
dec
and
inc
imul
sbb
lods
imul
pop
jp
push
mov
int3
std
fistps
xor
mov
cmp
inc
dec
jecxz
push
jge
jns
andb
ficompl
cmp
popa
bound
push
cwtl
std
push
mov
out
sbb
sub
in
mov
test
fbld
xchg
cmp
cmp
lods
mov
mov
fmuls
or
test
decl
addr16
dec
fstps
mov
adc
pop
xor
xor
mov
or
out
mov
aam
xchg
out
es
push
mov
ret
sub
das
sbb
mov
cmovs
push
xor
pop
divl
lcall
xor
push
ss
push
pop
decl
xor
sub
mov
xchg
int3
add
jecxz
cld
repz
lret
stc
gs
outsl
out
in
jne
add
push
push
jmp
push
inc
adcb
fdiv
pop
mulb
sbb
mov
xchg
mov
push
adc
hlt
mov
fcoms
jbe
cmp
pop
out
mov
pop
loop
xchg
or
add
addr16
jb
cmpsl
jmp
inc
inc
bound
and
cmp
ljmp
divb
fcomip
cltd
or
mov
pop
sub
imul
dec
mov
or
dec
and
push
loopne
cmc
int
inc
xor
sbb
xor
sub
in
loop
jnp
and
fldl
xor
xchg
add
scas
js
mov
int
fidivl
je
fidivrl
daa
push
xor
rolb
sarb
cmpsb
fdivrl
push
fdivrl
push
jmp
gs
jb
dec
cmp
divl
or
jle
ror
fmull
xchg
xlat
test
push
bswap
xchg
jmp
cmp
cwtl
mov
cmpsb
pop
push
or
add
je
jg
pop
out
push
xchg
inc
adc
adc
xchg
cmpsb
addr16
xor
adc
dec
sub
mov
scas
lods
aam
inc
rcll
sahf
int3
lret
jmp
popa
loopne
test
imul
jne
add
mov
push
and
jae
inc
lock
lret
out
mov
dec
mov
test
adcb
es
xor
cmp
stos
loopne
and
xchg
xchg
in
push
mov
sbb
mov
push
sub
mov
sbb
stos
sbb
sub
cmp
call
inc
add
mov
out
lock
jecxz
sarb
roll
in
dec
jnp
int
jae
cltd
and
cmp
lods
add
in
xorl
out
in
xchg
dec
imul
inc
popa
cmp
popf
sbb
outsl
rorw
jb
ret
enter
test
mov
push
cmp
mov
sub
outsb
push
sub
xlat
xchg
and
int3
xchg
and
subl
nop
sbb
push
sbb
push
jp
mov
mov
in
mov
jnp
jno
dec
aaa
jbe
inc
mov
dec
fimuls
push
lock
int
inc
mov
xchg
pop
movsl
xchg
rorl
push
in
sub
cwtl
jae
xor
or
lahf
sarb
jne
lea
outsl
inc
repnz
jle
hlt
fcom
pop
shl
dec
add
mov
sbb
loope
dec
push
mov
out
bound
jmp
mov
sbb
adc
xchg
lret
sbb
fbstp
xchg
data16
xchg
jae
jge
ret
rcrb
sbb
in
mov
outsl
pop
psubusw
lcall
int3
add
sbb
adc
sub
stos
rcll
push
lret
pop
mov
and
dec
mov
sbb
mov
pop
imul
in
push
sbb
fs
mov
xor
inc
mov
shlb
jnp
mov
add
or
mov
push
insb
xlat
and
or
adc
in
repz
push
inc
faddl
dec
insb
inc
xchg
add
push
outsb
mov
or
mov
inc
push
nop
les
mov
sub
cmp
dec
push
faddl
dec
cmpsl
cli
shlb
push
dec
test
test
dec
in
fcomp
addl
jmp
jno
xchg
aaa
je
lods
std
add
pop
pushf
jge
nop
jne
adcl
cli
les
loope
ljmp
mov
frstor
add
push
xor
cwtl
and
cmc
loopne
add
jge
push
out
in
cmpb
les
jg
stc
int3
lea
dec
ja
pop
mov
loop
movsl
roll
xlat
test
es
test
jl
jp
cmp
repnz
shrb
int
flds
jb
scas
leave
loopne
rclb
dec
stos
inc
test
mov
cmp
leave
push
cwtl
dec
pop
add
adc
or
loop
leave
cltd
or
cwtl
iret
jl
aas
push
nop
cmp
outsl
add
jmp
push
stos
iret
sahf
sbb
adc
xchg
sbb
cmpsl
push
dec
and
jg
in
stc
inc
sbbb
jne
add
sbb
mov
ror
mov
and
jecxz
test
adc
clc
cmp
decl
xchg
and
inc
test
mov
adc
or
pop
imul
cltd
cmp
test
adc
pop
shlb
addb
dec
xchg
dec
xor
jb
xchg
mov
lea
out
or
jb
sub
les
gs
push
inc
push
inc
iret
inc
sets
cmpsb
cmp
aam
mov
imul
dec
fadd
loop
rcl
push
aaa
imul
aad
and
mov
cmp
data16
popf
aad
add
mov
je
mov
out
negl
pop
adc
or
mov
rclb
ficomps
dec
and
pop
icebp
lret
dec
int
sbb
shrb
pop
rcr
js
sarl
test
lea
mov
scas
xchg
cmp
fimuls
push
into
xchg
imul
cmp
mov
jmp
sbb
idivl
mov
fs
mov
push
push
ds
sbb
mov
rclb
in
jecxz
jno
in
in
stos
iret
lret
xlat
iret
out
jge
stos
cwtl
dec
repz
out
das
inc
ret
and
inc
or
mov
shlb
sbb
lcall
adc
test
jnp
inc
push
test
movsb
and
fwait
int
call
inc
aas
ffreep
jp
iret
dec
sbb
and
push
andl
aam
mov
jmp
jne
in
sahf
shll
dec
cmp
test
and
xlat
xor
or
xorb
xchg
mov
clc
mov
or
jecxz
loopne
shrb
inc
pop
pop
mov
push
xor
jb
dec
sub
dec
out
cs
xlat
setne
cmpsb
jp
jge
ja
sarl
mov
dec
dec
jne
xchg
jmp
push
inc
cmpsl
push
jmp
fucomi
addr16
in
cltd
or
adc
movsb
mov
pusha
loope
jge
pop
and
int
pop
sahf
jecxz
sub
pop
pop
and
and
add
lods
aad
add
icebp
sub
push
movntq
imul
jg
and
and
sbb
pop
jae
pushf
out
jecxz
sbb
mov
sub
sub
dec
adc
bound
lea
mov
icebp
das
sbb
rcll
mov
fstps
dec
cmp
clc
add
xor
or
pop
or
cmc
int3
ss
mov
sahf
and
cmp
dec
jo
dec
movsb
shl
roll
and
sbb
adc
ret
and
jecxz
in
add
push
jg
aad
cs
cmp
pop
sbb
xchg
add
shlb
mov
das
inc
aaa
orb
adc
or
inc
jns
mov
adc
xorl
ljmp
mov
pop
fwait
lea
cmp
mov
movsl
dec
inc
iret
xchg
push
cltd
mov
pop
insb
push
dec
std
cmp
out
xor
das
mov
xchg
jbe
shlb
icebp
mov
push
sub
mov
and
fmuls
mov
icebp
lahf
mov
fs
sub
nop
cmovb
lods
xchg
jns
repz
fisubrs
or
pop
add
mov
pop
xchg
sbb
jge
inc
and
mov
out
cmp
pop
popa
stos
aam
cwtl
lcall
cmp
lods
jp
inc
mov
enter
test
int
leave
js
sub
pop
lea
xchg
and
lds
fcompl
mov
mov
cmp
shrl
mov
dec
pop
cmp
dec
fcompl
push
or
fcmove
std
ja
fsub
ja
repnz
dec
jb
int
pop
xchg
lret
in
inc
je
lret
je
jbe
clc
ficomps
outsb
xchg
call
int
loope
mull
in
push
in
pop
push
test
out
and
mov
dec
jg
insl
or
jae
pop
lret
adc
xchg
in
mov
sub
jge
sub
add
call
addr16
push
cmc
mov
out
rorb
cmp
daa
cli
xchg
out
xor
jo
cmpsl
sub
movsb
imul
in
imul
aad
push
push
fwait
pop
add
mov
jne
ficompl
scas
sbb
xchg
xor
ljmp
pushf
jle
aas
imul
sbbl
popf
sub
ljmp
push
adc
push
in
jnp
or
cli
lcall
das
pop
xchg
notl
pusha
mov
paddusb
add
adc
dec
das
inc
aas
jmp
loopne
icebp
sbb
cmpsb
xchg
les
insb
xchg
jmp
lods
pop
or
add
pop
lods
mov
mov
iret
xor
inc
in
popa
mov
sti
pop
xchg
push
repz
adc
sub
xorl
push
test
pop
xor
mov
jg
test
test
pop
inc
sub
mov
fwait
rcrl
push
adc
lods
jmp
jp
loopne
jmp
jb
mov
in
xchg
or
or
call
sub
rcrl
dec
loopne
lret
jle
push
add
lods
jb
dec
inc
inc
pop
mov
sbb
jge
add
lcall
test
lahf
cmpsl
dec
int
adc
dec
adc
sbb
cli
into
sar
daa
insl
iret
xor
popf
out
lods
push
mov
repnz
and
xchg
in
sbb
jmp
push
inc
sti
lds
pop
ret
popf
jbe
add
or
and
cmp
add
xor
xorl
xchg
jg
imul
xchg
dec
sub
pop
out
or
inc
pushf
xor
add
sub
lea
cmp
or
cmp
mov
gs
sbb
cmp
mov
mov
xchg
fldenv
adc
sub
adc
movsl
adc
mov
mov
in
xchg
bound
dec
inc
mov
cld
jmp
ret
scas
out
leave
test
out
aas
inc
sub
lea
je
mov
xor
push
sub
insl
jmp
aas
cwtl
scas
and
dec
xchg
mov
inc
jle
pop
cmp
and
out
inc
push
fwait
dec
xchg
movsl
mov
push
push
lods
xor
jb
cwtl
pop
adc
xchg
dec
mov
mov
insb
push
scas
push
add
stc
insl
pop
inc
jge
stc
cld
mov
ja
inc
mov
mov
into
es
push
je
pop
sahf
fwait
ret
add
cmp
jno
test
xchg
rclb
mov
mov
cmc
dec
jl
insl
sbb
imul
dec
sbb
push
shlb
xor
push
lahf
pop
push
sub
aad
addl
movsl
and
inc
jae
inc
jbe
int3
das
lcall
mulb
xchg
enter
jp
lret
lods
mov
pusha
push
loopne
repnz
inc
cwtl
adc
sbb
popf
jo
movntq
out
lods
add
jmp
push
jne
adcb
cs
ja
sub
inc
scas
xchg
cmp
jecxz
dec
xor
push
xlat
fidivrs
outsb
daa
lea
and
je
fsts
int
jo
aas
cltd
xlat
add
inc
adc
xchg
sbb
dec
cmp
xchg
jb
add
jnp
cmp
shlb
sub
fsubs
mov
dec
lock
jp
ret
add
insb
sbb
mov
out
icebp
add
dec
aas
pusha
loopne
sbb
pop
movsb
sub
push
idivl
ja
in
xlat
add
or
into
and
push
movb
xor
fmuls
sbb
filds
cmp
dec
stos
jnp
xchg
lock
insb
mov
mov
mov
sar
or
push
pop
bound
testb
popl
cltd
inc
jb
xlat
aaa
adc
sti
fadds
jp
aas
mov
ficoms
scas
ror
arpl
leave
pop
sbb
movsl
cmpsb
xlat
hlt
imul
or
cmp
dec
xchg
test
and
iret
cmp
cld
mov
pushf
xchg
cmp
or
xchg
out
mov
mov
out
adc
icebp
jae
inc
lds
add
decb
lods
jae
data16
push
in
mov
xor
lea
jmp
stc
nop
pop
jns
or
or
cmpsl
pop
adcl
mov
and
int
mov
ret
xchg
xor
mov
lea
pop
adc
mov
sbb
iret
xor
test
shrb
out
test
mov
lods
and
repz
push
push
fsubrl
or
in
fiaddl
push
xorb
cmp
int
sub
imul
mov
test
xchg
push
int
inc
dec
jns
fimuls
repnz
shlb
pop
jae
jmp
fwait
je
sbb
xor
sbb
lret
mov
imul
inc
int3
xchg
dec
movsl
or
jp
outsb
or
xchg
imul
repz
mov
add
fcoms
adc
mov
scas
pop
and
lahf
mov
mov
mov
outsl
movsb
fisubrs
sub
incb
and
cmpsb
lea
adc
test
pusha
sti
cmp
mov
adc
jnp
and
cmpsb
shlb
adc
bound
stc
inc
leave
insb
sbb
out
sub
popf
hlt
pushf
mov
xor
cli
rorl
pop
mov
sbb
xor
ss
call
sbbl
repz
inc
scas
jp
sahf
test
mov
out
movsb
inc
push
mov
in
xor
outsl
inc
xor
stc
outsb
jmp
arpl
mov
notl
jmp
and
mov
push
mov
mov
push
idivl
out
pop
jg
imulb
ss
repz
cmp
aad
inc
or
adc
mov
nop
sti
or
mov
cmp
aaa
sub
jg
inc
js
int3
jecxz
and
ljmp
lds
mull
mov
negl
or
jp
add
add
fs
neg
xchg
lods
test
pushf
aaa
test
js
push
test
mov
sub
mov
loopne
mov
lock
insb
pop
cmp
lea
int3
lahf
or
mov
cmp
push
addr16
out
mov
jno
or
xlat
pusha
push
push
jp
scas
push
out
mov
je
dec
push
fsubl
cmp
js
add
jae
adc
mov
ss
les
mov
pop
push
add
sbb
xchg
nop
data16
jmp
aam
imul
cmc
int
dec
dec
inc
lahf
push
orl
cmp
pop
push
mov
lock
scas
aas
scas
adcb
push
push
push
sbbb
bound
shlb
xchg
sbb
sub
lret
andl
mov
push
push
test
jp
hlt
jg
push
mov
inc
fidivs
or
sbb
adcl
clc
loop
jmp
and
fsubrs
fs
cmpsb
pushf
das
repnz
xor
mov
lock
dec
nop
lret
out
and
imul
xlat
cmp
rolb
mov
mov
pop
inc
ja
sbb
andb
sbb
mov
xchg
pop
sub
ret
in
or
loope
mov
push
int3
jp
insb
lods
mov
sub
shlb
xchg
gs
mov
mov
aaa
sbb
mov
push
fwait
mov
ret
popf
xlat
mov
push
aaa
add
js
cmc
cmp
dec
push
adc
pushf
jl
stc
sub
hlt
test
pop
iret
or
daa
leave
shll
cmp
aad
xchg
cmp
jbe
out
repz
adc
mov
les
jg
stos
int
in
aas
clc
xor
dec
loopne
sub
mov
xchg
cld
inc
pop
cltd
push
mov
mov
jmp
fisubl
mov
hlt
jb
jg
cmc
push
mov
push
in
iret
in
adc
lds
jns
sahf
fldcw
loope
scas
and
rcl
xor
adc
fsubrs
mov
shll
cs
pop
rorb
mov
xlat
test
add
mov
mov
cmpsb
mov
push
cmp
push
mov
addr16
cmp
sbb
inc
in
dec
and
inc
sub
pop
add
xor
mov
sub
push
fdivrl
and
mov
jle
iret
sbb
cmp
mov
sahf
into
mov
pushf
sub
adc
sbb
jmp
dec
rcll
shrl
iret
add
xchg
inc
orl
insl
push
iret
iret
les
mov
jp
jge
jle
pop
fsts
inc
jb
rcrb
sti
mov
cmp
jne
mov
mov
test
int
je
shll
push
mov
mov
lods
push
push
fisubrs
inc
cli
mov
mov
aam
dec
jno
mov
outsb
bound
insl
xor
lahf
mov
xor
pop
cmpsb
out
jnp
dec
loope
mov
xor
sub
in
lcall
jmp
scas
clc
sbb
stc
clc
xor
inc
faddl
fcoms
mov
and
insb
pop
pop
lcall
or
or
mov
ljmp
mov
jmp
xchg
xchg
lret
add
idiv
add
push
mov
cwtl
repz
xor
push
mov
dec
filds
iret
sub
xchg
lea
jg
bound
in
xor
int3
bound
sbb
lods
mov
mov
movsl
jp
add
lret
shll
cmp
dec
xchg
jns
ds
imul
pop
cmpb
test
popf
and
pop
mov
jns
ror
pop
ror
test
fildll
cltd
sbbl
or
es
jmp
movsb
xor
inc
jno
sbb
scas
push
fwait
jecxz
cmp
xchg
add
rcrb
pop
dec
enter
inc
cmp
daa
cmpsb
inc
js
ja
rorb
mov
addr16
mov
cmp
in
out
mov
jmp
cmp
sahf
pop
mov
mov
jecxz
cli
aad
sub
mov
pop
or
xor
mov
mov
pop
ljmp
or
imul
mov
cli
pop
cwtl
or
dec
test
push
fiadds
push
clc
bound
jnp
cs
std
imul
iret
out
or
push
lods
cmp
pop
add
sbb
xlat
dec
cltd
shrb
ficompl
mov
in
je
add
jecxz
sbb
push
pusha
push
pop
sub
xchg
adc
and
lfs
idivl
mov
and
mov
es
loop
pop
xorl
or
adc
ret
push
fcompl
fbstp
xor
push
push
and
testb
sbb
xchg
ljmp
sub
enter
add
xchg
mov
xchg
movsb
mov
je
in
adc
es
fsubl
aaa
ljmp
into
sbb
dec
test
or
mov
scas
shlb
xor
and
js
mov
out
xor
arpl
sti
xor
ds
std
and
push
jb
mov
das
call
or
cmpsb
out
mov
xor
xchg
push
push
cmpsb
push
dec
jl
lods
cmp
cmp
mov
iret
mov
push
stos
mov
add
test
aad
mov
sbb
dec
mov
mov
repz
sub
sub
mov
imul
loop
pop
mov
cmp
and
mov
jle
sti
roll
xor
pop
cmp
das
sub
push
cmpsl
js
jl
xchg
and
ds
pop
fldcw
movsb
das
cld
lock
mov
pop
loope
xchg
and
dec
push
mov
outsb
scas
inc
out
pop
fwait
dec
test
pop
cmc
xor
jg
push
xchg
incb
out
lcall
push
scas
xor
outsl
xor
je
cmp
mov
mov
push
loop
or
aaa
mov
sub
push
or
sbb
jnp
mov
dec
sub
call
xchg
xor
sub
adcl
add
mov
cmp
mov
pop
sarb
enter
jno
fneni(8087
call
es
xor
fadds
cmpsb
in
mov
icebp
push
cmpsb
add
mull
inc
sbbb
shl
mov
roll
mov
dec
lret
add
sbb
add
sbb
push
inc
mov
test
pusha
fwait
dec
hlt
aaa
subb
in
jmp
cmp
lock
js
dec
xor
mov
scas
fdivl
imul
std
shll
ficoms
jp
pop
popf
mov
out
in
test
lahf
mov
mov
outsb
mov
inc
enter
adc
or
push
pop
ss
daa
aad
idivb
popf
stos
popf
adc
lods
pop
imul
or
push
popa
cli
jmp
dec
jo
sub
xchg
push
fildll
push
sbb
adc
adc
cltd
scas
jle
stos
cmp
js
int
xor
xlat
jae
lods
mov
jmp
das
pop
lods
imul
push
fs
or
stos
push
stc
clc
icebp
cmpsb
pushf
lods
and
or
jae
push
inc
int3
and
roll
jecxz
aam
cmp
into
dec
cmpsb
cmpsb
mov
fidivl
enter
loopne
jle
test
dec
movsl
add
push
adc
pushf
decb
sbb
inc
dec
lods
mov
or
fisttpl
js
or
or
mov
cmp
and
loopne
pop
fwait
jns
inc
int3
movsl
into
xchg
popa
aam
icebp
xlat
xor
xor
iret
sub
mov
fdivs
subl
pop
mov
cmp
pop
scas
sub
sahf
mov
inc
dec
mulb
mov
pop
lods
lcall
lret
aam
xchg
xchg
sbb
insb
loopne
jnp
pop
fwait
xchg
jo
adc
inc
xor
stos
push
adc
je
mov
sbb
pop
cmpsl
scas
push
jg,pt
cmc
jecxz
das
cs
sbb
mov
or
mov
bound
push
pop
push
cmp
fstpt
lahf
jne
mov
daa
add
adc
mov
int3
movsb
nop
jl
fisttps
mov
add
icebp
pop
mov
imul
cmp
cmc
into
in
dec
add
mov
je
mov
fs
pop
insb
cmp
enter
loop
aaa
insb
dec
pop
sahf
lcall
mov
pop
adc
movsb
loopne
shrl
mov
sbb
jnp
push
pop
nop
bound
rcrb
cmp
cli
adc
scas
shl
push
cwtl
xchg
call
popf
xor
enter
gs
clc
addl
xor
ret
rcll
inc
or
mov
xchg
jge
lret
mov
push
imul
push
xor
adc
ret
cwtl
inc
push
sbb
jb
mov
insl
bound
sub
dec
jp
aad
lret
repnz
shlb
or
xor
jnp
fmuls
push
out
inc
push
adc
jae
data16
cmp
ja
mov
adc
pop
push
rol
movsl
loop
ds
mov
sub
pop
in
arpl
int3
aam
and
dec
lcall
insl
inc
push
pop
push
inc
xchg
lret
lods
xchg
jg
add
es
rolb
cld
xlat
cmp
jecxz
pop
outsb
fwait
cmp
sarl
jecxz
jns
cli
enter
add
push
rcrl
add
adc
adc
dec
jne
enter
jbe
add
sbb
or
or
dec
sub
mov
int3
mov
call
sub
jge
add
int3
dec
add
pop
cmp
loopne
cmp
ret
xchg
fisttps
adc
or
insb
push
push
push
loop
aam
cli
sahf
ss
pusha
in
sbb
push
cmp
cltd
jne
cld
std
add
repnz
insl
in
fwait
pop
das
xchg
mov
into
gs
dec
out
imul
out
jo
pushf
bound
and
jne
lds
fidivrl
fs
pop
pop
mov
push
lret
inc
aas
push
xor
or
sbb
xchg
dec
push
lea
shrb
fs
sbb
cltd
scas
addb
jnp
xchg
sbb
ficoml
cmpsb
lds
movsl
inc
stc
hlt
fistpl
lahf
nop
ljmp
adc
sarb
pop
repz
mov
sub
mov
lcall
mov
or
jae
pushf
outsb
aad
adc
mov
aad
push
mov
out
call
pusha
inc
das
mov
push
mov
jo
js
ljmp
lret
je
sbb
or
das
in
mov
pop
xchg
stc
mov
ret
and
icebp
and
test
int
lock
mov
loopne
jae
mov
xchg
shlb
stos
mov
or
and
mov
out
lret
out
leave
lret
dec
pop
outsl
dec
das
sbb
adc
jnp
and
iret
push
aas
dec
lds
dec
nop
clc
pop
mov
sub
stos
mov
loopne
push
sbb
aaa
mov
cs
mov
push
and
in
sbb
xorl
lea
mov
xor
ret
sub
pop
ja
jl
aam
cmp
push
pop
dec
lods
loopne
sti
cmc
bound
fiaddl
pop
pusha
arpl
add
pusha
mov
sbb
aaa
dec
mov
lds
cmp
inc
cmp
dec
xchg
mov
jecxz
lds
add
or
adc
lea
fisubrl
jno
ja
loopne
mov
hlt
add
xor
push
js
adcl
sbb
pop
cmp
loope
insl
sbb
bound
jne
sbb
dec
sbb
dec
cmp
insb
out
leave
and
jo
cmp
xor
fstpt
cs
out
adc
fwait
scas
shll
mov
fdecstp
xor
xor
push
xor
hlt
add
push
ljmp
add
push
dec
fimuls
mov
ficoml
adc
xchg
cmpsl
insl
int
xor
inc
cmp
pop
icebp
push
test
jae
jle
imul
jge
or
cwtl
fisubs
adc
fsts
jno
punpcklbw
lds
mov
shrb
jmp
outsl
pop
js
ret
mul
inc
insl
mov
dec
movsb
inc
jae
in
xor
dec
mov
mov
dec
mov
xchg
gs
fsubr
dec
and
mov
sbb
fwait
sarl
mov
cmc
and
jl
xor
mov
lahf
dec
imul
ljmp
inc
mov
mov
mov
xor
jns
aad
pop
sti
mov
fsubl
sbb
in
and
fwait
dec
xlat
in
jno
mov
imull
lds
mov
ds
mov
pop
js
mov
fsubs
pop
loop
xchg
xor
jle
aas
fistps
jecxz
add
les
iret
lret
dec
adc
mov
xor
pop
mov
fwait
pop
fmuls
leave
aam
cmpsb
add
cmp
adcl
fcomps
jo
sub
fidivl
rclb
nop
int3
fisttpll
mov
inc
out
leave
xchg
push
xchg
mov
xor
sarl
dec
nop
mov
ficompl
stos
pop
adc
shlb
push
add
add
jmp
mov
adc
xchg
xor
sub
sub
cmp
daa
es
mov
roll
dec
stos
xchg
push
or
jo
dec
xchg
or
cmp
pushf
or
insl
test
push
mov
pop
lea
jno
in
xor
push
sbb
adc
push
push
addb
mov
push
sub
xor
int
xchg
inc
cmp
pop
daa
push
sbbb
fnstenv
xor
insl
imul
adcl
dec
shll
add
ret
ret
std
and
jl
imull
movsb
mov
push
fs
mov
roll
sub
cmpsb
dec
cmp
xlat
xchg
call
rol
or
or
in
pop
fmulp
pop
cmpl
lods
push
jne
sub
cmp
sahf
or
jns
scas
mov
cmc
movsl
add
adc
cld
adc
loopne
out
push
xor
ret
dec
shll
test
push
js
fstpt
out
ja
jno
mov
adc
jg
movb
push
add
fcmovnbe
jns
add
mov
mov
add
leave
out
into
iret
sti
xchg
xchg
in
or
sbbb
adc
push
inc
push
push
andb
dec
xor
adc
sbb
rorl
shlb
jle
sbb
mov
xor
in
data16
cmp
jmp
mov
adc
push
hlt
scas
rcrl
jecxz
movsb
fcmovnu
leave
push
and
mov
xchg
jb
jecxz
cmp
cmp
shrl
stos
or
dec
outsl
push
inc
sub
jae
mov
add
test
mov
pop
pushl
adc
lock
mov
icebp
pop
cmc
lret
pop
fldcw
int3
movsl
and
imul
fildll
cmpsb
popf
rcll
out
push
out
xchg
dec
outsb
movsb
clc
mov
jecxz
sbb
jl
pop
daa
adc
pushf
lahf
insb
mov
shl
mov
jns
shll
fdivrs
pop
xchg
out
popf
clc
mov
faddl
cmp
rcl
lock
cmp
push
pop
push
pop
xchg
test
loope
movsl
push
arpl
dec
fdivl
lret
ret
xor
test
mov
push
data16
mov
test
testb
push
sbb
push
add
mov
loop
ret
sub
cmp
and
dec
test
jnp
test
push
test
in
jge
xchg
mov
stos
cli
mov
cmp
adc
xchg
adc
sub
stos
repnz
adc
pop
pop
jl
les
arpl
data16
cltd
pop
sbb
lds
repnz
add
jnp
push
add
lods
mov
mov
out
sub
jle
repz
push
ds
hlt
adc
test
pop
cmpsb
and
and
cmpsl
jbe
mov
jmp
pop
movsl
lea
fstpl
aas
and
repz
lahf
push
aam
cli
stos
or
or
mov
movsl
fnsave
lret
inc
fistl
cmp
cmp
mov
rol
xor
xlat
testb
jg
lcall
and
cs
xor
fdivs
dec
cmp
enter
cmc
daa
push
and
in
jno
cwtl
lock
daa
xor
jle
fs
cmp
jle
pop
inc
das
xchg
movsl
inc
call
lret
loop
xlat
adc
jl
test
add
testl
mov
add
mov
xchg
popf
sahf
pusha
ficompl
out
add
sub
imul
call
pop
cwtl
fs
fldz
faddp
lcall
shlw
sbb
mov
fsubrl
mov
jo
stc
dec
inc
fsubs
push
icebp
cmp
lahf
movb
adc
dec
xorb
inc
mov
push
jle
adc
pop
push
popa
mov
add
push
xor
roll
cld
xor
pusha
add
loopne
dec
or
bound
insl
pop
enter
cmp
mov
popf
cmp
mov
fstp
int3
aaa
jnp
adc
repz
test
in
popa
out
jp
push
dec
fs
ljmp
daa
ljmp
mov
gs
outsl
addr16
cmp
cmp
cltd
mov
sbb
pop
mov
les
out
mov
mov
mov
mov
sbb
jmp
xor
fcomps
mov
ret
cmpl
add
cmpsb
fstl
fsubrs
in
in
adc
arpl
inc
das
fwait
addr16
jns
mov
leave
pop
inc
int3
cmp
cmc
push
pop
cmc
addr16
add
fmulp
sbb
xor
mov
mov
sub
dec
pusha
pushf
data16
aas
adc
mov
cmp
pushf
push
jmp
lds
xchg
in
sub
xor
xor
mov
and
in
inc
das
fildl
arpl
mov
dec
fs
data16
jg
xor
pop
ds
xor
cmp
inc
hlt
push
fld
xor
movsl
pop
lods
testl
inc
push
mov
inc
adc
popf
xchg
push
add
das
fistpl
jo
push
sub
ret
sub
jg
aam
push
mov
mov
sub
pop
inc
pop
xchg
pushf
orb
mov
out
and
scas
pushf
sub
sbb
pop
sarb
or
sub
jae
test
test
sub
jmp
cmp
add
stos
aas
xchg
jnp
rolb
mov
jp
lods
cmp
jp
pop
into
test
mov
dec
push
add
xchg
jmp
popf
in
pop
mov
jne
imul
push
adc
mov
les
out
sub
sbb
cwtl
rclb
dec
ljmp
out
in
icebp
cmpsl
xor
nop
or
ja
scas
pusha
jae
aam
add
movsl
imul
shlb
addr16
lock
inc
or
fs
xor
in
ja
sbb
push
daa
addl
in
sahf
mov
or
jno
fstps
dec
int3
inc
fmuls
xchg
lret
out
jmp
mov
ss
mov
les
testb
inc
sbb
push
ds
das
inc
push
push
daa
or
cmpsl
mov
jecxz
mov
inc
mov
insb
icebp
xchg
lods
sub
push
push
aad
add
and
cmp
cmp
pop
push
mov
pop
mov
cmp
sub
cmp
ss
vminps
add
ret
push
movsb
test
pusha
adc
js
ja
jmp
pop
mov
pop
into
cmp
pop
sub
xchg
cmp
add
out
test
cmpsl
cmp
inc
lret
push
jecxz
xchg
inc
xchg
imul
push
cmpsl
cmp
pushf
lds
xchg
je
scas
sbb
dec
gs
hlt
mov
mov
subb
mov
in
cmp
sbb
fisttpl
es
mov
pop
ljmp
sbb
js
rorb
adc
ljmp
shll
jge
testl
dec
mov
sub
cmp
out
xchg
les
test
sbb
cmp
jmp
mov
xor
add
scas
pop
test
loopne
mov
cmp
sub
push
negb
movsb
ds
dec
nop
push
pop
iret
movsl
pop
xor
jno
std
fwait
ret
sbb
jl
add
add
inc
mov
push
mov
popf
xor
mov
mov
xor
xchg
addb
in
ficoml
fistpll
and
mov
out
add
jae
test
mov
int3
mov
and
push
xchg
enter
lds
mov
gs
mov
push
scas
in
pop
loope
push
cs
push
inc
cld
add
pop
pusha
insb
test
int
mov
xor
add
mov
movsl
outsl
sub
leave
and
int3
mov
dec
fwait
lcall
ss
insl
cmp
stos
popf
mov
fs
sar
leave
inc
add
xchg
stc
xchg
mov
sbb
mov
xor
bound
xchg
xchg
mov
call
pop
arpl
out
int
adc
or
jb
hlt
sbb
fcompl
jmp
mov
fwait
jnp
jne
out
pop
aaa
adc
add
lock
xchg
stos
insb
or
cmp
rcll
dec
add
inc
pop
fcoms
jns
outsl
mov
dec
push
add
dec
pop
pop
cmpl
insb
dec
stos
or
and
test
iret
or
movb
pusha
pusha
pop
ljmp
fsubl
loopne
nop
inc
xor
pop
std
jns
lock
cmp
mov
rcr
cmp
mov
and
gs
jbe
repz
mov
push
test
loopne
pushf
sbb
dec
ja
rolb
dec
lds
stc
mov
mov
mov
lods
xlat
fisubs
bound
insb
enter
outsb
repz
mov
aad
mov
ret
cmpsb
leave
arpl
dec
mov
mov
int3
cmp
inc
jl
insl
jle
xor
test
sub
add
mov
add
movsb
fwait
out
jmp
fidivrl
stos
adc
mov
sub
sbb
cmp
arpl
sbb
mov
mov
mov
popa
and
out
cmc
jbe
sub
push
aam
adc
insb
jl
cmc
cwtl
repnz
or
push
das
or
lahf
jo
xchg
mov
pop
push
inc
push
cmp
xchg
jno
adc
fwait
cmp
mov
push
sub
xchg
fdivrs
inc
daa
inc
push
rolb
and
mov
inc
lods
mov
push
or
test
sarb
into
imul
jbe
cmp
push
mov
out
sti
adcl
or
cmp
cmc
aas
lahf
lds
scas
sahf
sbb
jp
adc
enter
cmp
jae
xor
jge
out
out
movsl
movsb
adc
jecxz
add
mov
hlt
repz
push
adc
add
jl
loopne
out
cmp
mov
mov
sub
pusha
jp
sbb
sbb
int
jge
inc
push
les
rcrb
adc
inc
sub
adc
sub
push
inc
ror
adc
inc
mov
adc
mov
imul
pop
adc
cmp
sub
push
cmpsb
je
aaa
mov
out
imul
push
or
test
pop
rolb
stos
lret
inc
or
inc
mov
fnstcw
pop
add
jecxz
adc
fxam
push
cmc
mov
shll
push
jae
es
xchg
int
xor
dec
sbb
enter
shr
xchg
sub
repz
pop
add
sub
icebp
mov
popf
xor
daa
mov
cltd
mov
push
mov
aad
loopne
inc
or
push
aad
xchg
subb
mov
mov
adc
inc
mov
data16
je
mov
ret
lret
into
neg
mov
mov
jne
out
in
sahf
repnz
popa
shrb
imul
pop
or
adc
cmpsb
sbb
in
sub
popf
xor
sub
xor
xor
xchg
cmp
mov
jno
jg
std
xchg
lahf
jo
adc
cmp
test
das
test
sahf
ja
test
dec
ret
cmc
jne
cmp
mov
lahf
jo
arpl
mov
test
outsb
and
out
inc
push
mov
mov
adc
xchg
xchg
jne
ja
sar
push
out
fidivrl
dec
jle
mov
pusha
mov
nop
enter
mov
inc
mov
out
xchg
mov
xchg
out
push
filds
mov
mov
incb
pop
sti
imul
hlt
les
ret
xchg
xchg
subl
iret
ror
pop
fsubrl
push
pop
cmpl
push
mov
rcrb
out
or
in
ret
insl
out
aas
mov
mov
test
cltd
repnz
or
pushf
mov
jge
or
push
push
xorl
mov
or
sub
stc
cs
cmpsl
or
xor
xlat
cmc
mov
ss
or
cmp
shrb
pop
add
lods
xchg
mov
xor
push
ljmp
inc
clc
cmc
push
jb
xor
test
mov
movsb
cmp
test
cmpsl
jno
xor
shrb
into
je
lea
loope
test
or
and
sub
push
add
sub
xchg
jae
inc
sbb
hlt
or
mov
notb
cmovae
mov
shlb
pop
loope
xchg
out
mov
ja
inc
call
unpcklps
inc
and
jecxz
lret
or
out
cmp
pusha
dec
cld
cwtl
jg
stos
std
push
cmp
add
push
and
rclb
pop
jp
loop
mov
inc
pop
stos
push
test
sub
jecxz
test
or
in
int3
mov
inc
imul
inc
adc
lahf
xorb
sub
scas
ret
jnp
lds
outsb
push
cmc
repnz
ret
mov
pop
rolb
adc
pop
or
or
cwtl
sub
xchg
xchg
add
pop
xor
pop
push
cmp
mov
push
icebp
pop
push
inc
fs
xor
ret
and
int
adc
mov
adc
add
xor
jns
jge
lods
out
data16
cmp
sbb
mov
and
sub
pop
pop
sub
mov
sbb
pop
stc
fstl
mov
adc
push
test
mov
mov
jne
out
and
lea
and
lea
xchg
movsl
andb
sub
unpckhps
lea
sbb
repnz
arpl
push
mov
inc
cs
pop
nop
cmp
adc
out
push
les
add
addl
cmp
fsubrl
or
mov
sti
adc
stos
rcrl
cmp
adc
mov
fisttpl
mov
mov
scas
and
mov
jl
lcall
sub
xlat
push
sub
dec
pop
mov
lret
imul
insb
mov
push
or
and
call
jle
pop
ret
pop
das
subl
hlt
bound
or
popf
loop
ret
shll
push
push
mov
fadd
jp
cli
loopne
sbb
andb
push
fwait
ss
add
xchg
shrb
popa
or
xchg
shrl
mov
jns
pushf
nop
xchg
mov
mov
push
xor
sub
lods
ja
mov
in
or
scas
push
push
rcr
xor
pop
xor
xor
adc
add
dec
dec
xor
or
add
jne
outsl
out
test
into
lret
adc
pusha
or
sarl
jp
and
push
scas
adc
fwait
mov
lods
rorb
pusha
aaa
pop
roll
int3
mov
cmp
or
test
std
xor
stc
cwtd
pop
aad
aad
aas
in
xchg
roll
pcmpgtd
aaa
pusha
int3
insb
sub
push
pop
xor
xchg
sub
aas
jge
sbb
and
pusha
ss
rcll
pop
push
ljmp
dec
sub
mov
sbb
repz
xor
and
insl
in
out
leave
add
push
add
jo
sub
inc
arpl
adc
sbb
and
aad
outsl
fidivrl
add
cld
xchg
mov
ja
cmp
mov
js
ljmp
inc
and
fwait
lret
in
mov
xor
subl
mov
dec
loope
ja
repz
cwtl
les
rcrb
or
dec
sti
adc
and
lahf
outsb
push
lea
xor
inc
bound
test
scas
add
imul
sub
push
scas
xor
xchg
push
in
shl
test
pop
shr
sub
int
les
fcmovb
iret
mov
adc
jbe
jae
in
bound
mov
sbb
hlt
mov
in
jno
pop
mov
test
mov
pop
add
pop
loopne
scas
push
aaa
mov
jo
sbb
dec
daa
out
add
clc
call
popa
xor
pop
pop
enter
imul
call
fldl
or
sbb
popf
and
insb
fbld
or
test
pop
cwtl
push
push
lret
mov
clc
js
cwtl
xor
stos
fisttps
fdivr
stc
test
mov
cs
ljmp
rclb
mov
fnstcw
pop
fldenv
into
mov
sub
mov
loope
fadd
add
stos
or
out
mov
loopne
arpl
stos
xchg
repz
fwait
sahf
sti
sbb
xor
adc
jo
pop
mov
pushf
jmp
mov
jg
imul
jecxz
jmp
mov
adc
inc
mov
outsb
fisttpl
test
cmp
xchg
mov
enter
into
leave
add
mov
ret
xor
dec
adc
sub
push
es
xchg
mov
adc
or
arpl
mov
dec
mov
and
fstl
es
aas
mov
ljmp
adc
pop
js
aas
sahf
jnp
stos
cwtl
push
and
fs
cmp
adcl
in
or
dec
fnstsw
xchg
fsts
in
xchg
and
or
adc
mov
pop
dec
lock
pop
rclb
test
add
push
or
add
aaa
loop
push
sbb
xor
jge
fistl
in
sbb
ds
jns
jo
mov
add
rol
push
adc
xchg
xor
mov
popf
loopne
and
clc
shll
add
or
xchg
fistps
jp
mov
pop
lods
lret
mov
divl
dec
cmp
les
cmc
dec
mov
mov
bound
aad
shrl
pop
sub
jp
stos
mov
push
mov
sbb
mov
popa
loop
aaa
out
mov
js
xchg
imul
jmp
push
stos
dec
loopne
pop
pop
into
jp
mov
sub
mov
jno
iret
ss
pop
add
cltd
xor
insl
dec
imul
ja
cmp
cltd
fmuls
sbb
xor
scas
and
fstpl
xchg
or
movsb
dec
out
xchg
call
sbb
bound
mov
mov
cmc
sub
push
mov
mov
ja
les
stos
push
lock
arpl
ss
mov
mov
pop
jo
adc
or
cmp
cld
jne
aas
lods
dec
xchg
xchg
adc
xor
jo
cmp
adc
jae
xchg
jle
xchg
pop
lds
pop
mov
mov
daa
sbb
dec
cmp
pop
sub
or
bound
int
stos
notl
xor
push
or
add
test
mov
cld
sbb
and
or
cmp
in
push
ret
ret
xor
sub
and
dec
pop
negl
cmc
lcall
mov
inc
lea
scas
push
dec
fisttpll
push
dec
mov
in
adc
mov
das
sbb
stc
mov
inc
inc
out
mov
fisubrs
jo
hlt
sar
sbb
mov
xchg
push
nop
test
lahf
in
xchg
fcom
aaa
dec
stos
dec
sbb
stc
data16
mov
push
lcall
pop
xchg
lret
sub
stos
pop
xor
in
in
fnstsw
mov
lods
mov
mov
sub
jg
stc
out
or
loope
jno
rcrb
pop
ljmp
popa
nop
ljmp
fidivrs
insl
sbb
mov
outsb
out
xchg
shlb
int3
mov
xchg
mov
mov
jl
jnp
sti
or
fistpll
xchg
or
adc
pop
mov
aas
daa
push
pusha
fwait
hlt
movsb
scas
pop
add
lods
or
loop
mov
adc
lock
push
inc
adc
mov
or
cli
adcl
xchg
jle
int3
cwtl
cmpsb
mov
mov
je
fnstcw
es
mov
es
mov
sbb
jb
and
ret
push
mov
xchg
daa
pusha
mov
xchg
test
xchg
ret
mov
jp
dec
sub
inc
pusha
cs
mov
mov
jle
jl
mov
pop
ror
sbb
in
mov
insl
jmp
insl
mov
sbb
cmp
test
sub
xchg
inc
mov
pop
and
cli
pop
clc
repz
rolb
hlt
aaa
int
mov
enter
hlt
aad
pop
sbb
pusha
lahf
nop
in
push
mov
sbb
or
roll
adc
mov
insl
sti
test
inc
out
adc
adc
add
aad
xchg
sub
subl
std
xchg
dec
bound
xchg
xor
pop
into
pop
push
fisubs
int3
push
jl
cmp
mov
pop
or
jle
push
fmul
add
test
loope
xor
inc
mov
or
xchg
pop
sub
aam
push
pop
xchg
adc
iret
cmp
jecxz
lock
mov
arpl
xchg
ljmp
in
xor
cmc
xor
adc
push
push
xchg
pop
add
into
mov
repz
cmp
xor
add
loope
adcl
fisubs
add
mov
stos
int3
inc
fistpl
pop
loopne
movsl
mov
das
or
mov
mov
mov
in
jecxz
mov
test
filds
nop
lahf
pop
push
xchg
jb
sbb
es
pushf
gs
add
push
mov
push
and
scas
ss
and
add
sub
bound
js
sahf
mov
mov
adc
insl
fwait
arpl
jmp
mov
fsincos
pop
xor
dec
pop
push
jmp
ret
and
jno
and
sub
mov
outsb
mov
pop
les
and
adc
mov
sbb
add
dec
mov
mov
inc
add
mov
pop
sbb
ret
xlat
maxps
sub
push
adc
subl
sub
adc
fsubs
pop
rorb
testb
test
jge
xchg
xchg
jl
mov
mov
and
hlt
inc
inc
fcmovbe
es
sub
xchg
stos
adc
leave
mov
add
xlat
loop
mov
imul
and
in
lret
out
fcoms
sub
adc
xlat
movups
mov
jmp
sbb
fs
xor
popa
stos
sbb
xor
lods
in
test
clc
add
mov
shr
jno
dec
xlat
jg,pn
hlt
stos
fiadds
js
cld
pushf
fwait
mov
lahf
imul
cmp
sub
stos
bnd
ljmp
jmp
into
fwait
lds
push
push
or
pusha
push
or
xor
dec
test
sub
add
pop
icebp
repnz
push
pop
or
cld
out
fwait
mov
pop
and
int3
aad
mov
pop
mov
pusha
imul
xor
push
inc
jno
outsl
adc
std
es
dec
mov
mov
ja
data16
imul
jno
jbe
mov
lods
das
mov
cmpsb
mov
mov
fidivs
jo
inc
scas
lret
pushf
sbb
xlat
aas
lahf
in
sti
xor
inc
mov
jnp
aaa
push
mov
imul
imul
jge
daa
dec
aam
test
xor
movsb
mov
and
fstp
push
sub
xor
jnp
jp
mov
mov
cmp
xchg
aam
idivb
push
add
pop
lret
insb
and
andb
cmpsl
ficompl
ds
gs
mov
mov
sahf
inc
loop
jae
push
ss
addr16
add
mov
mov
negb
push
xor
mov
lods
imul
xor
fdivs
sbb
imul
pcmpgtw
in
mov
data16
push
lock
inc
jecxz
and
icebp
jbe
xor
test
cmc
xchg
insb
mov
push
push
mov
cltd
lds
lods
sti
cmp
test
ja
test
xchg
and
hlt
imul
lods
push
decl
and
jl
shrl
mov
fdivl
insb
das
push
and
xor
add
ljmp
mov
enter
or
cmc
inc
call
mov
lahf
iret
jae
or
sub
adc
add
jae
in
std
xchg
jl
jl
add
sar
jge
lock
adc
into
sbb
push
sub
mov
push
pop
fs
xorb
iret
xor
mov
call
sbb
xchg
jno
arpl
je
dec
outsl
outsl
testl
jl
in
fwait
jg
lods
cs
sbb
mov
hlt
cmpsl
inc
add
adcl
in
pushf
sbb
xorb
arpl
jmp
aaa
mov
cld
aas
cmp
jno
add
sbb
mov
mov
lret
leave
out
mov
notb
adc
pop
sbb
in
in
xchg
gs
push
clc
test
loopne
fucomi
jmp
ljmp
inc
sti
cmc
shrl
jecxz
xor
add
xor
dec
fwait
loope
mov
cmpl
fnstenv
pop
lret
mov
outsl
xor
cs
arpl
inc
pop
out
sub
xchg
xor
fwait
mov
test
je
stos
jno
daa
inc
in
jae
cmpsl
mov
outsl
int
cmp
das
lods
sbb
lret
popa
add
mov
ret
xchg
shrl
insl
mov
fistpll
mov
mov
sub
shl
pop
xchg
add
add
lcall
and
scas
cmp
push
cmp
and
lret
scas
das
mov
inc
rorb
pop
scas
in
sub
sbb
push
mov
popf
movsb
sub
jecxz
adc
loope
jp
nop
cltd
lods
and
or
in
xor
hlt
popa
sarb
outsl
push
or
jbe
push
addr16
xchg
or
cltd
mov
scas
orl
inc
xchg
add
jae
xchg
xlat
adc
mov
adc
gs
dec
dec
inc
iret
jmp
xchg
lea
dec
test
dec
jp
daa
nop
mov
fdivl
pop
jl
push
mov
pushf
stc
push
cld
addr16
jbe
in
das
insb
xchg
cmp
bound
pop
push
push
or
cmpsb
movsl
mov
inc
shr
pop
or
ret
repnz
mov
int
sub
add
xchg
push
aad
in
pop
mov
imul
popf
add
mov
pop
jle,pt
leave
out
xchg
fcoml
xchg
adc
dec
pop
dec
jbe
mov
out
movsb
sub
mov
jecxz
mov
xchg
mov
pop
scas
pop
jle
into
xor
jp
or
add
mov
sbb
das
jl
sub
cmp
jae
ljmpw
jns
popa
and
sbb
ror
lds
les
cmp
mov
adc
jecxz
loop
fnstenv
and
push
and
xchg
pop
add
and
pop
iret
ret
ror
loope
hlt
pop
sti
leave
jbe
pop
jbe
adc
cmp
inc
popf
xchg
mov
shrb
pop
jne
bound
mov
jle
filds
shll
push
call
pop
jecxz
in
mov
sub
mov
adc
hlt
jle
push
mov
jg
ss
iret
mov
push
push
ss
and
iret
sub
lidtl
add
lret
in
fidivrl
jmp
sbb
cmp
mov
sub
orl
adc
stc
lods
push
fcomps
xor
add
stos
lret
dec
push
add
cmp
xor
mov
jnp
lods
sahf
sub
push
xchg
rorl
push
setl
pusha
or
call
inc
cli
xor
stos
lods
adc
xchg
sub
lds
leave
mov
std
leave
lcall
inc
ja
movsb
and
packsswb
stos
jmp
fdivrl
out
pop
movsl
fmuls
shr
clc
and
cmp
pop
mov
outsl
and
jne
adcl
and
cmpsb
sbb
xchg
addb
and
not
bound
pop
sbb
pop
push
sbb
xlat
inc
sbb
dec
adc
xor
jg
test
mov
sub
mov
sbb
hlt
add
mov
fs
sbb
jae
pop
cs
fildll
in
mov
cwtl
imul
mov
adc
inc
mov
pop
adc
jmp
popf
int
es
fimull
ljmp
gs
sti
cmp
adc
into
jecxz
stos
imul
out
fldt
adc
loop
test
push
call
push
mov
les
daa
jb
xor
mov
sub
in
push
sbb
pop
cltd
adc
sbb
jnp
rcrl
xchg
fdivs
fwait
inc
in
aaa
jb
in
sbb
cld
mov
or
or
adc
inc
rcrb
cli
cmp
into
mov
fwait
mov
movsb
sbb
jns
mov
cmpsb
cld
loop
in
es
push
sbb
fwait
mov
mov
dec
loope
add
lea
or
lds
push
loope
xchg
lret
lcall
imull
clc
or
sbb
and
or
lret
bound
jge
and
dec
xchg
mov
nop
stos
mov
adc
push
sub
cmp
mov
xchg
imul
inc
data16
mov
mov
enter
popa
pop
push
mov
test
in
fnstsw
lcall
in
dec
aam
fwait
adc
push
dec
mov
in
loop
jo
rorl
icebp
lret
mov
fs
or
pushf
repnz
push
pop
int3
sub
mov
push
xor
jnp
popl
jns
dec
fwait
xor
movsb
jbe
movsl
repz
arpl
adc
inc
adc
mov
mov
int
and
imul
or
enter
lock
imul
rcrl
fdivrs
cmc
leave
jno
and
inc
cmp
loopne
out
dec
push
addr16
and
inc
xchg
jl
insl
sti
mov
cmp
cmpsl
adc
in
inc
ds
xchg
pop
mov
push
ds
dec
pop
cmpsl
xchg
pop
fdivrp
dec
sbb
cmp
mov
sub
sub
xchg
imul
sbb
pop
xchg
xorl
jo
mov
mov
push
cmp
sahf
leave
pop
inc
jmp
nop
mov
xor
mov
iret
data16
lock
and
stc
mov
lds
aas
mov
aad
daa
popa
add
ja
stos
pop
xchg
jne
push
das
xchg
cwtl
pop
mov
shlb
xchg
adc
and
js
pop
jecxz
enter
push
jge
loopne,pt
inc
das
or
pusha
xchg
test
xchg
push
dec
dec
jmp
cmp
adc
jge
aaa
cmp
push
cli
leave
sti
cmp
out
jl
sbb
mov
ficompl
pop
or
xchg
into
repz
roll
dec
xor
mov
push
or
iret
pop
mov
mov
cmp
int
push
or
dec
test
mov
dec
adc
mov
push
push
mov
xchg
jle
dec
xor
imul
mov
enter
dec
jae
sahf
mov
lods
pop
mov
xor
mov
mov
pop
push
out
mov
cs
xor
jmp
test
loop
and
push
insb
in
mov
cli
outsl
ret
fisubs
sub
push
add
and
fisttpl
int
dec
hlt
cmp
popf
mov
push
xor
xchg
out
mov
imul
scas
mov
inc
aas
in
sbb
cmp
sub
aam
push
pop
in
int
test
adc
xchg
leave
pushf
and
push
les
push
out
sbb
jne
push
and
lock
and
neg
int3
sahf
jo
and
test
lcall
int
sti
imul
sbb
movsb
stos
popf
rorb
outsb
mov
out
fs
cmp
mov
orb
cwtl
mov
stos
jmp
insb
aaa
cs
mov
cmpsb
bnd
sub
push
pop
fdivrl
sub
inc
cmp
add
movsb
pop
jno
jle
cmpsb
mov
mov
adc
jp
xor
sbb
pop
mov
sub
stos
and
lcall
or
jg
mov
es
adc
add
push
sub
or
mov
mov
jb
lods
sub
adc
inc
dec
movsb
sub
ds
or
icebp
xor
add
int3
adc
sbb
cwtl
arpl
js
jne
pusha
sub
scas
mov
mov
cwtl
or
dec
pop
xchg
lods
dec
jmp
into
int
insb
push
ja
mov
idivl
or
xorb
ret
out
inc
sub
xchg
add
fiadds
mov
lods
data16
sub
mov
das
je
pop
imul
addb
int
mov
sub
xchg
adc
cmc
dec
push
jmp
and
mov
ja
push
mov
ficompl
add
insb
out
jecxz
dec
enter
test
test
push
push
mov
btc
push
jmp
inc
sub
mov
mov
cmp
imul
div
xchg
test
adc
es
ficoms
fcmovne
jl
lods
xchg
scas
sbb
push
dec
dec
fcomps
popf
data16
pop
mov
in
ret
xor
lods
or
xor
insb
push
les
mov
sbb
add
movsl
mov
pop
adc
mov
push
adcl
inc
mov
mov
ret
int
movsl
out
enter
not
rcrb
out
rcl
mov
ret
mov
and
or
xor
or
cwtl
in
xchg
hlt
rorb
inc
in
ljmp
fldl
cld
pop
adc
or
es
mov
cmp
imul
xchg
cld
dec
mov
shlb
pop
iret
xlat
or
cmp
fdivrl
inc
adc
enter
mov
clc
out
mov
xchg
cwtl
arpl
ja
adc
out
repz
mov
imul
aas
mov
lods
xor
dec
mov
add
test
inc
mov
dec
mov
outsl
xor
pop
push
ret
jns
mov
mov
pop
pop
scas
enter
repz
and
negl
mov
shl
xor
cmp
add
rcrl
cmp
pop
movsl
mov
lods
mov
and
pop
sub
gs
gs
scas
mov
lahf
jb,pn
addb
addl
sub
cwtl
mov
adc
xor
mov
sub
mov
arpl
mov
call
push
mov
xlat
bound
out
cmp
sub
push
cld
in
mov
test
mov
push
lds
sbb
sbbl
and
fmull
cmpsb
add
inc
sub
jb
rcrb
cltd
and
and
shll
mov
add
in
push
fsubrs
sub
ja
xor
outsl
sub
ficomps
mov
xor
in
mov
jmp
cmpsb
repnz
or
das
inc
push
add
push
xchg
sub
xchg
test
cmp
pop
adc
sub
setno
lods
pop
dec
jmp
rcl
xchg
imul
jnp
mov
ds
push
rclb
into
sub
gs
int
shr
int
push
int
and
add
into
sub
mov
movl
ret
dec
les
fbld
cmp
repnz
xchg
leave
cli
mov
push
out
sbb
lahf
or
icebp
cmp
lret
mov
pusha
and
cld
daa
in
jl
sub
sahf
bound
idivl
lahf
mov
stos
out
xchg
mov
cmp
insl
dec
pushf
mov
inc
mov
cs
xchg
mov
xor
mov
mov
addb
mov
cmc
xchg
popf
shll
lahf
test
and
xor
mov
pushf
dec
cltd
cwtl
ret
push
xchg
push
jno
stos
cmc
sub
mov
xchg
push
imul
repnz
jg
dec
sbb
fucom
in
testl
add
scas
add
add
enter
loopne
add
outsl
or
das
addr16
xchg
lds
sub
lods
mov
shrw
push
cmpsl
loope
insl
in
mov
fdivs
movsl
and
add
sub
cmpsb
cmpsl
leave
mov
inc
xor
dec
imul
mov
mov
and
inc
movq
xchg
inc
in
push
mov
pop
and
insl
push
sbb
pop
cli
shrl
dec
movsl
dec
dec
movsb
in
sti
js
daa
mov
sub
out
pop
clc
cmp
ds
test
push
dec
xor
push
iret
jmp
jae
cwtl
je
imul
dec
aad
mov
push
data16
repnz
mov
pop
rcrl
sub
test
ljmp
jecxz
sub
scas
mov
push
xchg
sbb
jb
inc
repnz
shll
popf
rcrb
jecxz
divl
movsb
xchg
mov
jbe
jg
stc
or
mov
mov
jno
dec
add
ret
mov
jge
test
push
dec
rorb
lcall
or
jae
sub
mov
das
lret
jnp
ret
cs
pop
adc
test
ret
cltd
fs
push
push
push
xor
pop
jmp
mov
jge
stos
jge
shlb
and
hlt
sub
sbb
pushf
call
aad
add
mov
mov
in
adc
adc
jne
clc
cmp
lods
mov
push
add
sbb
fsub
fs
bound
fs
sti
inc
mov
sub
ret
add
fdivs
mov
sbb
cltd
sub
jns
mov
les
pushf
and
dec
mov
push
mov
mov
icebp
mov
cmp
aam
popf
xor
in
out
shrb
cwtl
or
into
sbb
jae
fldz
push
push
bound
mov
xchg
mov
xor
push
ss
hlt
ja
das
rdtsc
cwtl
pop
leave
iret
dec
lods
je
cmp
pop
popa
iret
jg
stc
adc
test
add
daa
insb
lahf
mov
cmpsb
inc
sub
pop
shr
loop
inc
stos
insl
cmpsb
in
insb
pop
or
stos
cmc
xchg
inc
scas
jg
gs
mov
pop
pop
je
inc
icebp
push
add
fyl2xp1
call
push
jo
in
push
ror
add
fdivl
jo
data16
jae
adc
nop
cmpsl
cmp
in
and
in
mov
adc
or
cmpb
fs
fcmovu
call
outsl
and
test
ja
iret
dec
xchg
std
dec
sbb
push
jnp
addr16
push
mulb
test
dec
aas
cwtl
cmc
sti
bound
jo
jmp
adc
icebp
mov
ds
push
lret
lcall
mov
ret
push
adc
inc
push
mov
sbb
jmp
adc
dec
adc
loopne
or
ret
gs
push
xor
out
scas
sub
fstps
iret
insl
or
pop
xor
insl
jns
int
cwtl
mov
sbb
adc
dec
xchg
sti
xor
sub
leave
sub
aas
loope
and
mov
mov
adcb
test
push
cwtl
mov
push
orl
push
data16
scas
addr16
js
inc
out
outsb
adc
bound
mov
fiadds
sbb
aas
inc
jae
xchg
pushf
in
dec
add
or
movsl
pop
cmp
outsb
rorl
nop
add
sub
inc
xchg
dec
andb
arpl
outsb
out
mov
lods
xchg
push
push
bound
mov
or
mov
push
mov
xor
or
clc
mov
cmp
dec
outsl
addr16
sbb
cwtl
cmp
aaa
xor
into
nop
outsb
mov
leave
xchg
cld
sar
scas
addr16
test
xchg
popa
mov
lahf
sbb
stos
stos
out
add
or
aam
inc
or
cli
jp
lods
cld
lock
test
lahf
stos
cs
popa
mov
xchg
xor
mov
cltd
stc
aam
adc
popa
ss
aas
inc
pop
dec
imul
dec
int
movaps
or
sbb
sub
pop
sbb
rclb
movsb
js
jb
clc
mov
mov
addr16
fists
loopne
into
dec
cs
sbb
lret
ret
adc
or
lret
adcl
je
ret
std
xchg
lret
cs
cmp
ss
mov
sbb
ds
mov
fcomp
ss
outsl
cltd
jno
int
flds
int
jae
jae
xchg
iret
fistpl
gs
fs
mov
nop
fcmovnb
jge
pop
add
cld
xor
push
std
lahf
rclb
add
bound
add
pop
shll
cmpsl
add
mov
mov
andb
mov
ljmp
xchg
outsl
push
je
pop
insl
adc
insb
out
cmp
je
iret
xor
scas
push
std
push
sub
cmpsb
test
push
mov
aas
or
mov
push
pop
decl
ror
xor
popa
sub
adc
test
pop
fs
adc
data16
xor
sub
mov
mov
std
clc
lahf
insl
lret
cmp
int
mov
cmp
dec
loopne
pop
roll
push
add
dec
cmp
lock
lds
jne
out
add
int3
repnz
mov
out
cmp
cmp
call
lret
call
lea
jg
mov
sbb
gs
adc
aad
rolb
push
std
insl
je
movsb
dec
lods
iret
or
lock
ja
roll
fcmovnbe
add
xor
xor
pusha
dec
jmp
scas
xchg
lret
push
daa
insb
test
ja
and
cli
repz
cltd
dec
jle
cmp
int
sub
mov
sbb
xor
sti
inc
sub
rcrl
dec
dec
pop
test
and
mov
testb
in
out
mov
das
xor
ret
popf
dec
jp
fdivl
xchg
and
int
lods
loopne
push
sbbl
adc
cmc
cmc
lret
fnsave
insl
sahf
adc
icebp
dec
sub
insl
pushl
dec
imul
add
jo
lea
outsb
adc
test
call
pusha
pop
push
hlt
mov
and
mov
fnsave
and
sbb
fidivl
ret
ss
outsb
aad
arpl
pop
cmp
rorb
xor
clc
js
out
out
pop
scas
fldl
aam
clc
sub
sub
gs
jbe
dec
mov
lea
dec
sbb
inc
ss
shr
inc
xor
movsb
insl
fnstsw
mov
aam
or
pop
xchg
sub
sahf
out
rclb
outsb
arpl
sti
mov
test
dec
jecxz
push
push
je
mov
or
lcall
sub
lret
sub
out
or
ja
fldcw
cltd
daa
fists
rcrl
das
fidivrs
ja
cwtl
inc
test
xchg
int3
js
shrl
int3
xchg
jg
pop
sub
or
aad
pop
aad
test
das
push
fists
imul
xchg
cmp
xor
movsb
mov
add
cmpl
jne
add
mov
movsb
push
rsm
fisubs
andb
std
out
cmpsb
push
adc
push
leave
adc
stos
dec
xchg
into
push
adcb
insb
ds
sbb
mov
and
idivl
aas
mov
or
repnz
add
pop
push
pop
add
xchg
lods
cmp
jmp
stos
dec
fnsave
mov
sarb
mov
xchg
enter
addl
add
jno
sbb
add
xor
lcall
fwait
xlat
mov
enter
pushf
out
flds
inc
mov
jle
push
mov
xchg
mov
adc
mov
cmc
clc
sahf
mov
cmpsb
push
pop
add
sub
push
faddl
data16
out
movsl
jne
add
std
xorb
sbb
mov
push
imul
add
fldcw
mov
or
and
mov
nop
nop
sub
xor
xorl
loopne
movsb
test
mov
or
lret
xchg
iret
syscall
add
inc
sbb
xchg
add
and
xchg
inc
outsb
out
aam
xor
insb
xlat
cmp
add
call
mov
arpl
cli
pop
cltd
andb
in
lret
daa
push
push
sti
loopne
add
jge
imul
insl
into
push
mov
jmp
jns
mov
dec
imul
dec
enter
pop
mov
mulb
cmp
jmp
mov
pop
clc
mov
cld
les
ja
mov
xlat
and
iret
add
ficoml
std
xor
xchg
out
or
mov
in
stos
jp
ds
js
add
add
aaa
in
cmc
jmp
jae
pop
cwtl
xchg
mov
mov
mov
mov
inc
jns
sub
cmp
adc
push
inc
ds
bound
ds
lcall
pop
pop
push
xlat
leave
loop
aas
adc
cmp
jle
mov
xor
jl
pop
sbb
je
add
adc
adc
les
sbb
mov
sub
mov
mov
int3
mov
dec
ja
mov
cmp
mov
dec
mov
mov
mov
outsl
inc
sub
or
xor
xchg
data16
cmpsl
adc
mov
call
stc
stc
push
mov
dec
mov
lods
popl
push
cmc
push
or
lock
lods
lret
push
push
mov
lahf
mov
pop
jecxz
sub
leave
push
popw
mov
movsb
in
mov
sahf
je
xchg
dec
add
inc
dec
xor
pusha
enter
in
popa
je
pop
sub
test
mov
ja
out
push
lea
dec
ret
aaa
shll
repz
mov
sub
dec
subb
fneni(8087
dec
add
ds
mov
xlat
test
leave
sub
cmp
inc
lods
cmp
dec
je
xor
sti
xor
jnp
fisubrl
js
or
push
loope
int
sbb
or
and
aam
sub
enter
popf
insb
clc
mov
stos
pop
jo
fnstcw
sub
mov
mov
push
mulps
mov
cmpsb
push
sbb
mov
jp
popf
cmp
cmp
sub
jl
daa
dec
jbe
push
lea
test
add
jno
out
add
lds
bswap
pushf
dec
push
sbb
add
lods
in
pop
cmpsb
repnz
call
rclb
out
aaa
mov
add
sbbb
adc
jecxz
popa
or
xor
das
insl
mov
int3
push
mov
mov
loope
aaa
test
mov
adc
dec
dec
rclb
pop
aaa
idivl
jae
ret
dec
pop
fdivl
lcall
xor
clc
jb
clc
or
push
pop
shrb
add
sbb
inc
gs
popf
sarl
jne
mov
push
pushl
cld
inc
loopne
push
adc
jmp
cmpsb
cmp
push
in
xchg
lods
fsubrs
incb
dec
xchg
push
aad
push
jo
mov
test
add
or
mov
pop
cmp
enter
xchg
mov
xchg
fmull
jb
les
lods
adc
dec
popf
mov
das
pop
divl
sahf
outsb
add
aaa
mov
mov
dec
mov
call
inc
neg
imul
repz
cmc
divl
adc
das
mov
add
ds
ret
flds
cmp
cwtl
adc
mov
sub
inc
add
daa
xlat
cli
enter
pop
push
adc
xor
xlat
cmp
rcrl
mov
daa
mov
push
xchg
dec
aad
jo
insl
push
sti
out
cmp
ds
push
stos
mov
inc
xlat
leave
inc
ss
nop
mov
mov
dec
cltd
add
mov
lods
push
mov
inc
adc
dec
xor
dec
fildl
orb
pusha
add
scas
hlt
inc
xor
or
adc
lret
cmp
jo
cmp
test
xor
and
shlb
inc
int3
nop
sbb
dec
lods
cmp
aaa
mov
mov
xchg
cvtpi2ps
inc
mov
mov
ficoms
out
adc
outsb
outsl
inc
jns
or
pop
inc
sti
ja
daa
push
dec
mov
mov
lods
call
adc
pushf
and
in
dec
out
ja
rclb
cmp
stc
adc
or
or
pusha
or
fnstcw
xlat
or
out
idivl
fs
cmpsb
add
lahf
push
enter
in
mov
push
insb
sbb
xchg
test
out
insl
mov
aaa
pop
mov
cmp
jp
dec
jecxz
push
rcr
jg
arpl
sbb
or
testb
lret
aad
test
lcall
arpl
ja
imul
lahf
xchg
dec
mov
jb
movsl
jp
pop
nop
or
test
mov
mov
das
popf
arpl
fs
xchg
or
xchg
add
clc
aas
stc
sub
jecxz
les
iret
cmp
dec
scas
jle
mov
mov
stc
adc
or
inc
jno
pop
pop
lahf
cmp
pop
fisttpl
repz
jecxz
stc
fmuls
mov
roll
loop
fwait
add
xor
push
addl
test
cltd
shll
cmp
push
dec
outsl
add
jge
jmp
or
xchg
lea
mov
xor
mov
pop
mov
sbb
loope
jb
inc
jnp
xchg
xlat
cwtl
ret
lock
sarl
cltd
testb
popf
cmp
arpl
arpl
adc
mov
dec
push
iret
push
jae
lds
xchg
pusha
mov
jle
sbb
push
out
andl
add
out
repnz
jbe
sbbl
add
or
aas
scas
push
adc
mov
push
lret
cs
cmp
lock
or
fmull
repnz
popf
mov
movsb
xor
jne
xchg
sbb
push
mov
sbb
daa
push
push
mov
and
out
in
push
cmpsb
loop
data16
sbb
pusha
mov
test
or
inc
ret
in
mov
je
jno
push
out
lret
push
jecxz
loopne
out
ss
and
sbb
testb
xchg
jbe
cmp
pop
sbb
pop
push
adc
gs
leave
fcoms
cwtl
mov
sbb
or
into
sub
imul
addl
std
pop
adc
sahf
divl
call
mov
push
mov
jnp
mov
dec
testb
and
test
lahf
data16
jmp
int3
fisttps
pushf
adc
sbb
cwtl
mov
and
movsb
sub
pop
xchg
lcall
fucom
mov
call
pop
and
push
push
adc
sbb
cmp
out
push
dec
and
mov
int
sub
push
dec
fnstcw
filds
les
xor
sub
jle
jecxz
jp
mov
bound
xor
repnz
pop
mov
mov
push
xor
std
jbe
jbe
xor
cmp
or
fcoml
andb
lret
push
movb
addr16
jle
adc
add
ret
xor
ficoms
clc
jmp
je
xor
and
sbbl
or
test
mov
out
fstpl
ja
lds
imul
inc
fwait
pop
jecxz
inc
jo
ficomps
imul
inc
fdivs
xchg
xor
lcall
popf
enter
aaa
test
leave
mov
das
clc
sub
movsb
add
jle
add
movsl
sbb
ljmp
in
mov
ljmp
xchg
imul
push
mov
fbstp
lahf
call
sbb
bound
rol
cmp
pop
sarb
rclb
adc
inc
test
mov
stos
aaa
aam
jp
lods
in
push
mov
test
mov
in
pop
push
into
cmp
fst
int
xchg
jmp
inc
sub
pushf
pop
es
xor
xchg
add
xchg
stc
jno
add
fdivl
push
ljmp
jb
data16
pusha
dec
ljmp
fdivs
stos
pop
mov
jp
cmp
stos
sarb
fstpt
imulb
lcall
dec
mov
stc
arpl
mov
stos
pop
push
pop
lahf
clc
sti
lret
repz
inc
idivl
dec
xchg
adc
inc
decl
sub
pop
xor
pop
imul
push
sbb
aam
xchg
out
mov
cmp
inc
fisttps
andl
sub
repnz
out
sbb
mov
les
push
sbb
dec
jecxz
jl
xorb
mov
sub
pop
call
mov
cmp
sbb
mov
mov
outsb
jmp
adc
cmp
xor
sub
outsl
mov
pop
cld
xchg
adc
ret
or
lahf
jne
sbb
ja
dec
inc
mov
les
push
aas
pushf
sbb
sarb
cmp
icebp
les
cmp
daa
insl
and
pop
ja
sar
jbe
inc
dec
notl
and
in
sub
repz
push
push
jmp
or
add
xlat
dec
repnz
cld
xor
push
fdivrl
cli
jecxz
cmp
stos
cli
popf
add
fwait
pop
adc
ret
outsb
insb
int3
push
aad
sub
adc
outsb
std
adc
ds
push
data16
pop
dec
movsb
inc
pushw
cmpsl
into
and
add
and
aad
inc
fdiv
lret
jno
mov
xchg
inc
cmp
add
fcmovnbe
pop
addr16
sahf
pop
js
adc
fsubrs
out
lods
sbb
pusha
dec
aaa
test
inc
mov
adc
push
fdivrl
jae
xorl
sbbb
mov
push
and
test
stc
nop
jno
addb
xlat
ret
shll
jle
jmp
ret
dec
int3
ss
or
sbb
fimull
xchg
jle
imul
pop
cli
insl
add
sbb
push
lods
test
cltd
dec
add
jge
mov
sbb
sar
das
xchg
daa
divb
push
mov
and
jecxz
ret
jb
bound
xor
pop
and
adc
mov
aas
push
add
aad
adc
cmp
xor
xor
xchg
lock
inc
loope
repz
mov
mov
addr16
andb
dec
mov
push
cli
mov
bound
enter
les
fs
adcb
dec
or
inc
push
data16
clc
aaa
sahf
or
imulb
nop
jae
jecxz
jle
jecxz
xchg
dec
fidivrs
bound
inc
daa
out
and
insb
outsl
jg
lret
jle
xor
jle
mov
push
xor
push
aad
ret
sub
cmp
daa
xchg
dec
lret
mov
mov
xchg
jle
je
mov
movsb
cli
dec
sub
adc
and
test
pop
sub
mov
and
sbb
aas
cmc
mov
aad
push
mov
ret
mov
mov
and
fisubs
sbb
dec
push
fs
fildl
in
jbe
data16
je
xor
push
jmp
adc
or
push
add
pop
movsb
sub
inc
testl
call
sub
ja
mov
adc
push
mov
andl
mov
cli
rcll
test
out
ss
xchg
jle
add
dec
data16
into
cli
mov
loope
int
inc
mov
mov
xor
les
scas
pop
sub
dec
adc
lods
pop
aad
pop
jl
push
jbe
mov
xchg
call
cmpb
iret
fisttpl
xorl
jecxz
ret
mov
or
stos
dec
push
mov
test
pop
ljmp
add
repz
in
out
dec
or
push
mov
cmp
pop
cmc
dec
pop
mov
push
pop
scas
jne
out
mov
iret
sbb
shll
push
lds
fiaddl
sbb
or
sahf
clc
xor
in
pop
iret
insl
add
jle
xchg
jae
jne
mov
add
movsb
pushf
les
and
jo
fadds
mov
jl
mov
mov
jo
add
movsl
mov
sbb
lahf
adc
gs
pop
push
jg
sbb
adc
cltd
cs
pop
std
sub
push
pushf
inc
mov
sub
shrl
mov
mov
or
xchg
cmp
insl
scas
sub
lea
pop
xorb
aas
outsb
ljmp
outsb
pop
mov
aas
dec
ljmp
aas
adc
push
sub
or
push
inc
popa
inc
sub
mov
mov
adc
frstor
xchg
jmp
mov
and
out
sbb
addr16
or
sbb
rcr
pop
or
xor
adc
cmp
in
roll
add
popf
fisttpll
mov
mov
dec
or
or
pop
cli
mov
dec
aaa
cwtl
jb
nop
lea
ret
add
mov
or
scas
outsl
fimull
fidivrs
dec
push
loop
xor
in
and
jmp
sub
insl
ret
xor
jl
rorl
cli
cltd
movsb
pop
xor
imul
stc
push
lea
jp
int3
jne
fnstsw
jle
cmp
mov
std
cmp
mov
imul
mov
aas
xor
dec
inc
mov
inc
loopne
pop
lret
packuswb
aas
xchg
add
aam
decl
mov
and
jg
add
and
lcall
mov
popf
sub
mov
loop
xor
std
mov
jb
lcall
scas
sbbl
lock
int
je
mov
outsb
xor
rolb
push
and
out
js
mov
stc
xchg
xor
testb
mov
add
push
rolb
or
lcall
push
scas
jno
idivb
dec
aaa
scas
in
gs
sub
sbb
push
jg
int
cs
enter
fldt
mov
pusha
pop
adc
sbb
xor
flds
pusha
xor
aad
cs
mov
jl
add
lods
dec
mov
inc
sbbb
mov
std
aas
out
insl
pop
cmp
or
repz
push
dec
leave
pop
fimull
out
or
fs
adc
mov
push
fwait
icebp
pop
push
jne
ss
sbb
pop
push
dec
pop
scas
cs
repnz
punpcklbw
xchg
jg
clc
push
mov
jmp
cmp
fcompl
out
ret
mov
dec
dec
std
sbb
sub
or
sbbb
mov
sub
js
pop
scas
jp
out
cld
sub
jge
aas
xlat
jg
pop
lds
in
aam
leave
test
pop
mov
cmpb
mov
jmp
add
mov
or
push
sbb
lahf
and
jnp
pop
lods
stc
rcrb
fwait
jbe
or
xor
jae
add
arpl
ds
xchg
xchg
add
mov
add
lret
leave
fcmovb
mov
repz
dec
into
sub
call
ljmp
jp
pop
adc
add
xchg
arpl
cmp
fistpl
scas
dec
fldt
push
adcb
dec
fildll
aas
and
jnp
add
lock
stos
cmp
aam
push
sbb
sub
test
out
aaa
push
mulb
cmp
inc
mov
out
push
movsb
inc
add
adc
rol
sbb
clc
pop
jge
jge
mov
pop
pop
sub
cld
je
cmpsb
sbb
ja
mov
mov
arpl
pop
jno
mov
add
sbb
shrl
sbb
mov
jo
test
jo
clc
lock
adc
push
rcl
std
ja
paddb
fwait
stc
dec
add
cmpsb
test
or
push
inc
scas
sub
shrb
xor
cld
xchg
mov
push
or
inc
popa
lods
and
push
dec
mov
jge
mov
dec
sub
arpl
xchg
jmp
cmp
or
pop
lock
cli
popl
mov
jae
fwait
in
cltd
or
sub
and
mov
push
or
fists
xor
inc
xchg
mov
outsb
roll
cmp
scas
shlb
iret
sti
std
xor
lock
adcb
cmp
jae
test
cmp
insb
or
cmc
insl
std
addr16
xchg
xchg
clc
fldcw
xchg
dec
lods
stos
mov
out
push
test
pop
rolb
xchg
daa
pop
sub
test
cs
test
adc
push
aaa
xor
add
or
push
jo
and
les
jge
ss
stc
jecxz
pusha
aaa
sub
mov
aad
cmp
mov
xchg
xor
mov
sti
xor
cwtl
mov
out
test
mov
xchg
sar
inc
mov
pop
aaa
push
sbb
movsb
cmp
mov
in
mov
mov
mov
or
cmp
test
in
mov
xor
mov
shll
les
in
ljmp
mov
dec
sbb
push
and
mov
mov
aad
stc
and
xchg
and
pop
out
out
add
xor
ljmp
shl
push
pushf
cld
aaa
out
bound
mov
pop
fwait
sub
mov
fcomps
fwait
out
pop
pop
inc
or
adc
fmul
ljmp
pop
aas
add
adc
test
mov
push
xchg
pop
loope
subb
dec
divl
sti
sbb
mov
fwait
and
adc
push
scas
cs
shr
out
push
stos
and
int
ret
mov
mov
lods
cmp
mov
rorl
pop
mov
movsb
xchg
mov
arpl
enter
mov
jecxz
insl
jnp
pop
into
add
rcrl
fildl
and
jo
shl
sbb
mov
leave
dec
fstpl
test
iret
test
cmpsl
xchg
pop
imul
mov
add
dec
jle
pop
add
outsl
inc
fistps
pop
jo
or
in
pop
mov
jae
aad
mov
add
xor
cmc
cmpsb
or
mov
mov
mov
cmc
into
ret
sub
push
pusha
mov
std
rol
pop
stos
repnz
add
test
or
insb
mov
adc
pop
cmp
imul
mov
out
jecxz
jp
and
loope
rcrl
jo
rcrl
lds
and
cmc
cli
pusha
mov
and
or
pop
mov
cmpsl
or
and
push
stc
imul
dec
mov
and
enter
mov
movsl
mov
ja
imull
js
pop
jbe
mov
lret
in
je
lods
dec
jno
dec
xorb
adc
test
ljmp
jnp
hlt
ret
fisttpll
mov
fiadds
andnps
mov
test
js
in
push
jo
dec
sbbl
in
xchg
xchg
push
lods
aad
add
cmpsb
mov
dec
pop
or
pusha
leave
rol
mov
cmp
repnz
and
push
pusha
insl
adc
bound
fmuls
out
mov
repnz
adc
movsl
cwtl
fists
sub
mov
rolb
lcall
insl
dec
or
lret
jp
pop
jno
repz
sbb
dec
fdivr
lret
dec
ljmp
cs
shl
je
es
inc
ret
cld
dec
out
ja
sub
mov
addr16
jg
leave
pop
mov
daa
enter
repnz
cwtl
lea
inc
sub
and
int3
out
cld
outsl
aam
pop
cltd
mov
sub
in
lret
pop
filds
out
cmpsb
push
inc
rorb
outsb
sub
and
and
jns
out
pop
stos
pop
cwtl
mov
inc
aam
iret
or
stos
jmp
xchg
mov
jo
mov
gs
hlt
mov
add
pop
xor
cmp
lods
hlt
subb
adc
call
mov
xor
xor
pusha
and
btr
fimull
xchg
mov
cwtl
add
stos
jmp
mov
lret
call
lock
sti
fisubl
xor
mov
std
pop
push
int3
sub
adc
popa
cwtl
mov
mov
sbb
loope
jbe
dec
ret
notl
in
xchg
popa
das
mov
bound
sub
mov
fisttpll
xchg
repnz
cmp
mov
inc
jnp
xor
dec
int3
pop
testl
adc
mov
mov
cmp
cmc
mov
pop
inc
daa
pop
pop
mov
pop
fbld
inc
sbb
cmp
inc
inc
add
xor
push
fnstcw
xor
add
inc
add
mov
out
pop
mov
lea
aam
movsb
xchg
mov
pop
pop
stos
aas
or
arpl
call
pushf
ja
mov
ret
sbb
scas
hlt
dec
and
xchg
inc
inc
jge
adc
jle
mov
lcall
enter
adc
inc
or
mov
nop
dec
pop
push
mov
push
out
jecxz
adc
push
sti
pop
outsl
and
mov
pop
enter
enter
jge
cmp
push
pop
cmp
push
movsl
pop
lgs
xchg
inc
push
mov
jle
lret
stos
cmp
mov
push
cmpsb
xchg
dec
arpl
outsb
int3
daa
data16
add
push
add
loope
adc
sub
dec
shll
stos
jnp
jg
or
icebp
sbbl
popa
pushf
in
cmp
dec
out
push
xor
cbtw
ret
jb
mov
pop
dec
std
mov
dec
loope
ljmp
mov
stos
jg
mov
mov
jae
sub
fldl
ret
scas
pushf
dec
push
inc
scas
cmpsb
daa
cmp
mov
inc
xchg
or
mov
mov
inc
dec
icebp
outsb
pop
xchg
dec
jne
shrl
outsl
inc
stc
test
mov
addr16
stc
test
pop
neg
scas
cltd
or
test
ret
add
fwait
lcall
out
lret
mov
add
lods
push
jbe
stc
loop
je
jo
add
push
insb
std
xchg
pop
push
xor
mov
mov
add
cld
scas
out
stos
sub
ja
in
enter
ja
or
dec
fimuls
mov
daa
jno
ja
or
std
mov
sub
jp
sbb
inc
jnp
xchg
cmp
aam
mov
adc
cmpsb
add
rorb
sbb
jns
dec
fmul
dec
fidivrl
xchg
es
xor
inc
adc
inc
test
stos
mov
jnp
or
xchg
xchg
sbbl
jne
out
mov
rorl
cmpl
sti
out
mov
bound
cbtw
int3
jae
in
lret
push
jge
cmc
lret
mov
faddl
mov
inc
and
fildl
insl
pop
jle
dec
mov
and
mov
fcomi
lods
adc
jge
bnd
and
inc
inc
js
mov
sub
movsb
cmc
pop
push
sub
idiv
bnd
mov
in
fs
and
pusha
lds
sbb
xchg
inc
jecxz
cmpsb
cli
insl
sbb
cmc
xor
sub
orb
mov
rcr
cmp
ljmp
and
push
cmp
xchg
jg
lcall
and
cld
loop
cmp
add
xorb
mov
out
mov
xchg
out
loop
fisttps
mov
shl
aas
add
push
enter
les
sub
inc
test
test
iret
lahf
repnz
mov
mov
mov
add
cli
xorl
push
mov
or
jmp
sti
jmp
aad
sahf
mov
and
inc
sbbb
xchg
cmpsl
or
stc
mov
hlt
fwait
ret
stos
leave
add
jp
xor
mov
inc
mov
stc
das
stc
mov
xlat
adc
add
flds
mov
and
flds
sbb
sbb
dec
pusha
mov
sub
in
lea
jmp
adc
std
arpl
xor
js
shr
stos
jmp
repz
mov
dec
adc
xchg
test
stos
das
out
lret
push
fldt
inc
push
into
jbe
lahf
scas
or
andb
or
stos
daa
scas
int3
push
insb
sub
add
and
rcrl
inc
mov
inc
fimull
ds
pusha
pop
data16
or
push
imul
inc
or
cs
push
jno
cmp
mov
cmp
jbe
fcomi
jb
dec
shl
mov
adc
in
cmp
repz
pop
jbe
add
outsb
mov
je
pop
clc
and
xchg
dec
mov
jns
pop
cmp
cmp
leave
xor
sub
fnstenv
bound
cmp
xor
aam
or
push
mov
push
fldl
lods
and
pusha
mov
add
lcall
dec
outsb
jo
inc
outsb
movsl
push
pop
jg
mov
in
mov
nop
nop
ret
iret
sbb
dec
pop
add
bound
sbb
and
stos
mov
or
lods
push
andl
sub
cmp
cmp
xor
push
lds
fdivr
cmc
mov
aaa
push
mov
mov
in
adc
nopl
add
mov
out
into
mov
mov
jnp
shrb
sbb
pop
clc
add
mov
push
mov
pop
mov
scas
lea
mov
dec
fildl
and
lods
jmp
inc
push
outsb
nop
enter
xor
push
or
fdivl
push
imul
loope
mov
push
into
adc
pop
xorb
jno
sub
jl
xor
push
rol
out
imul
fstl
mov
push
xor
sbb
js
out
inc
hlt
mov
mov
or
sbb
into
out
sbb
jb
push
ljmp
test
jnp
movsb
and
aad
test
rcrl
mov
adc
sub
rcl
ss
jmp
and
push
mov
xchg
es
xor
push
inc
dec
repnz
lcall
outsb
cmp
sbb
test
into
das
push
push
cmp
loop
xchg
adc
pop
push
icebp
push
cmp
mov
and
inc
mov
rcrl
gs
jl
adc
mov
xchg
cs
subl
or
mov
inc
adc
cmc
fistl
testl
shrb
pop
push
cltd
into
dec
inc
rolb
lea
in
mov
lret
pusha
add
test
push
cmpsb
cmc
xchg
dec
add
mov
push
enter
lret
jae
sbb
sbb
movsb
lret
leave
popf
insb
jle
repz
cld
inc
out
scas
stc
cmpsl
hlt
je
popf
gs
js
test
or
mov
outsl
mov
imull
pop
lods
sahf
test
subb
xchg
sbb
dec
into
or
fsts
xchg
push
stos
pop
sahf
loopne
inc
or
cmp
stos
pop
add
jbe
sub
mov
js
loope
jle
movsb
test
and
int
jmp
ret
mov
adc
push
enter
ret
adc
insl
and
aad
sub
dec
pop
test
cwtl
aam
mov
js
adc
ljmp
fadds
loope
pop
dec
add
xchg
das
lret
popa
out
sub
rorb
lock
mov
fisubl
mov
pop
mov
pop
mov
shr
cmpsb
jg
cli
or
pop
pop
scas
sbb
repnz
xor
mov
mov
mov
imul
push
push
int
js
pop
hlt
xchg
inc
icebp
fnstenv
cwtl
cmp
loop
xor
repnz
out
cld
push
sub
in
inc
icebp
std
mov
mov
popa
repnz
sub
pushf
jns
stc
call
mov
dec
xchg
lea
push
push
mov
mov
inc
adc
mov
ss
jo
testl
inc
fs
frstor
xor
push
jnp
inc
mov
xlat
sbb
and
neg
lcall
cli
xlat
or
arpl
add
adc
cld
dec
clc
pushf
jecxz
cmpsl
fsts
ret
rclb
fdivr
mov
and
pop
clc
sbb
sbb
sub
bound
inc
xor
cli
mov
dec
cmp
xchg
dec
aaa
ficoml
arpl
adc
cs
lahf
loop
punpcklwd
lods
xlat
or
mov
cwtl
or
mov
pavgw
out
lcall
inc
cmpsl
outsl
call
stc
pop
rol
aas
int
dec
dec
daa
or
xchg
lods
mov
pop
inc
pop
je
jg
pop
mov
xchg
xor
rcll
xchg
dec
pop
test
xchg
pop
add
mov
jmp
fsts
and
add
sub
xchg
aas
or
or
icebp
inc
enter
bnd
xlat
lea
pop
pop
cmc
sub
jb
outsl
ret
sub
aas
adc
loopne
and
push
daa
mov
sbb
addr16
sarb
int
movsl
adc
jae
arpl
out
outsl
add
or
movsb
adc
mov
push
movsb
and
fcmovnbe
fwait
icebp
mov
leave
hlt
push
add
xor
addr16
in
ljmp
lea
adc
jb
add
scas
jne
mov
das
lods
fcmovbe
xchg
pop
xor
pop
and
ss
jge
vphaddbd
nop
and
lret
icebp
jmp
aaa
pop
pop
lcall
dec
mov
popf
stos
sahf
bound
inc
cmpsl
push
sbb
mov
repz
mov
xor
outsb
xor
addb
aad
adc
add
pop
cwtl
lock
mov
inc
das
pop
jo
xor
outsl
mov
insl
int3
lods
lret
pop
sbb
push
push
movsl
jl
push
jnp
test
lods
xor
mov
and
fdivr
mov
js
add
dec
inc
test
sbb
test
push
int3
mov
loopne
sbb
mov
push
adcb
cs
dec
pop
xchg
repz
or
mov
mov
lret
inc
cwtl
je
shll
mov
xchg
sbb
cmpsl
cltd
iret
pop
rcl
std
push
imul
sub
and
pushf
in
mov
cmp
out
test
loop
lahf
leave
and
popa
shlb
pop
mov
mov
push
dec
mov
mov
sub
gs
fnstcw
mov
mov
fisubrs
fcomps
rclb
dec
and
jne
mov
jg
lods
repz
aam
imul
xchg
loopne
mov
in
adcl
icebp
inc
mov
adc
mov
mov
xor
mov
out
test
and
mov
add
push
xor
mov
jae
js
adc
push
test
push
aas
into
test
and
or
xlat
stos
in
xchg
sub
or
pop
adc
outsb
scas
int3
mov
add
sbb
and
pop
lcall
mov
dec
add
xor
adc
mov
mov
mov
fisubrl
push
pop
mov
mov
movsb
ret
mov
shll
mov
popa
scas
sub
mov
xchg
adc
dec
mov
ds
hlt
xor
int
and
lahf
inc
mov
test
out
push
shrb
std
jle
jl
cmp
inc
icebp
daa
pushf
cmp
push
dec
and
int3
sbbb
mov
and
mov
jno
lahf
int3
xchg
pop
add
aam
push
mov
sti
pop
jge
inc
in
xchg
jmp
pop
sub
push
and
lret
sti
cmpsb
xor
lcall
and
mov
push
jmp
cmc
js
xchg
fdivrp
inc
rcr
push
fistps
repnz
das
jecxz
push
cmpsb
adc
sti
fmul
push
mov
push
push
loop
add
add
std
xor
jg
adc
iret
push
ds
bound
dec
insl
pop
xor
lret
pop
add
ljmp
sbb
xchg
cmp
dec
mov
push
or
mov
jo
movsl
mov
cmp
sub
std
iret
dec
mov
jmp
mov
jg
dec
push
daa
fistps
xlat
inc
cmpsl
test
test
scas
mov
insb
nop
adc
xchg
or
mov
mov
je
clc
cs
xchg
lds
dec
arpl
mov
loope
pop
push
mov
mov
loop
cmp
push
xchg
inc
int
aas
cmpxchg
cmpsb
sbb
repnz
add
out
adc
push
in
ss
add
clc
xchg
negb
popf
and
andb
sti
adc
lret
push
ljmp
jo
arpl
nop
enter
mov
push
shrl
fs
inc
sbb
jo
ja
test
inc
and
adc
fildll
sbb
adc
fcomi
inc
push
int3
jno
push
int3
shll
or
test
mov
mov
lods
ja
or
sahf
fs
adc
test
mov
push
lods
mov
mov
jge
imul
sub
test
xor
in
repnz
les
inc
cmpsl
sbb
add
inc
lcall
fildl
fnstsw
and
call
pop
shrb
cmp
push
aam
jg
lret
inc
test
aad
aaa
mov
sbb
aam
dec
imul
dec
cmp
mov
pop
lods
jnp
fcoms
mov
push
jg
popf
jg
fldt
xchg
jno
in
inc
mov
and
sub
adc
leave
call
adc
jl
mov
repz
dec
cmc
cmp
sbb
outsl
es
cld
push
push
divb
fbld
decl
xchg
gs
dec
xor
arpl
enter
xchg
lods
addr16
push
xchg
int
pop
adc
mov
sub
add
and
jbe
inc
dec
mov
test
pop
mov
sub
mov
icebp
jg
xor
jg
jp
cmc
pop
cli
mov
pop
dec
xor
std
push
xchg
mov
repnz
pop
aam
pop
mov
xchg
jo
mov
out
xchg
mov
gs
mov
cmp
sub
cmp
adc
push
jg
cmp
scas
sbb
test
fwait
inc
jno
push
jbe
mov
das
push
or
jmp
stc
cmpsb
mov
inc
mov
shll
int
adc
inc
add
test
int3
inc
hlt
nop
pop
xor
dec
mul
and
cs
aam
push
mov
outsb
push
xor
mov
cmpsb
sub
jp
sub
xor
cmp
imul
repz
pop
sub
or
jns
imul
mov
mov
cmp
dec
repnz
int3
and
lds
xchg
jae
not
fscale
cmp
lock
xchg
sub
xor
dec
inc
push
pop
ds
and
sahf
adc
or
jns
outsl
sbb
data16
jle
push
xchg
out
ret
sbb
mov
movsb
cmc
inc
jmp
xchg
push
inc
into
out
lock
mov
mov
mov
or
in
movsl
jle
mov
cmp
jmp
inc
shlb
jbe
subl
jne
push
add
test
and
into
jg
adc
inc
jbe
ret
fdiv
aas
sarl
sar
out
jmp
mov
insl
into
push
or
pop
cmpsb
push
test
lret
cltd
lods
sbb
mov
dec
cmc
nop
lods
and
icebp
xchg
xor
and
scas
into
enter
and
jno
or
inc
sbb
imull
mov
mov
mov
lret
cmp
arpl
sub
mov
sbb
stc
mov
lods
iret
mov
mov
add
outsl
xor
or
cmp
repz
loopne
mov
jae
lret
pop
icebp
pop
sub
insl
iret
push
out
jne
imull
push
push
push
jae
stos
lret
jp
jae
cmp
adc
mov
adc
iret
leave
in
push
dec
lcall
jno
push
ja
cli
data16
mov
mov
imul
cmpsl
mov
stos
jo
sub
and
xor
repz
jns
int3
fstl
sbb
cs
dec
test
pop
divb
cmp
jbe
sarl
lcall
mov
fwait
pop
imul
popa
pushf
in
xor
adc
xchg
push
in
incl
daa
clc
add
pop
in
add
lods
into
orb
sbb
outsb
in
ljmp
mov
push
inc
sarl
popa
jno
nop
jns
fnstsw
push
and
mov
mov
in
in
sub
cltd
jne
loope
enter
fimull
sub
shll
jmp
fistl
in
enter
and
in
mov
push
adc
jbe
je
xor
scas
pop
imulb
int
xor
sbbb
ss
mov
adc
cmpsb
test
mov
in
adc
ficomps
dec
or
lods
mov
popf
jg
add
movsl
inc
int
lods
push
aam
push
cmp
cli
test
inc
daa
mov
lds
mov
add
out
jge
arpl
pushf
fucom
rcl
loop
dec
push
idivl
movsb
rcl
cmp
sbb
push
daa
gs
mov
jecxz
lods
add
iret
push
adc
popa
test
or
xchg
imul
in
inc
lds
xchg
jnp
mov
push
mov
sbbl
push
mov
sbb
pop
and
push
mov
shll
adc
int3
ja
cmpsl
je
cwtl
jb
inc
divps
xchg
popa
mov
out
scas
shrb
cmp
jns
or
out
das
xchg
inc
cli
fsubr
push
pop
jo
add
xor
jne
movsl
dec
nop
inc
mov
ret
andb
ss
jp
enter
xchg
nop
loopne
pop
push
shr
jp
inc
pop
stc
jmp
cmpsb
cmp
xchg
shl
aad
push
mov
push
fldenv
push
rcll
lcall
mov
in
fwait
inc
push
mov
dec
mov
stos
int3
sub
scas
push
into
push
xchg
xchg
testl
loope
outsb
fsubrs
mov
push
sbb
jp
ja
loopne
push
lods
dec
cmp
mov
stos
jne
adc
push
adc
push
pop
or
mov
sarb
mov
dec
mov
xchg
or
cwtl
or
fwait
dec
mov
xchg
out
sub
inc
jne
and
mov
in
fnstenv
mov
shrl
push
ret
sbb
cmpsb
pusha
mov
push
xor
ljmp
jns
sbb
scas
jbe
out
add
cmp
jae
fimull
sbb
cmp
cli
inc
push
das
push
nop
mov
imul
dec
push
inc
cwtl
fstpl
mov
test
mov
push
out
add
inc
int
ljmp
setno
mov
sahf
and
cmpsb
rclb
scas
repnz
push
inc
ljmp
out
cmp
shr
inc
aaa
out
push
jnp
dec
pop
and
fdivrp
adc
add
inc
jb
push
adcl
mov
pop
outsl
ficompl
dec
repnz
or
js
sti
into
mov
movsb
lahf
dec
enter
add
fmuls
arpl
fisubrs
sub
addr16
cmp
pop
inc
data16
inc
sbbb
je
dec
jl
rcr
jecxz
int3
rcrl
xchg
cmpsb
ja
imul
out
xor
sti
sub
mov
sub
sub
xchg
pop
imul
xchg
movsl
out
inc
imul
out
mov
iret
mov
loope
xchg
dec
arpl
out
xchg
lods
jns
jecxz
ret
xor
mov
lods
int
xchg
xchg
bound
pop
xor
movsb
cmp
pop
flds
hlt
lret
and
jle
aam
mov
outsb
adc
mov
dec
jecxz
xlat
and
mov
or
rclb
sub
int3
vcvtdq2pd
or
jnp
mov
lret
mov
or
cmc
cld
pop
mov
sysret
fstpt
mov
rorl
mov
mov
xchg
dec
mov
adc
adc
ljmp
insb
std
lods
and
rorb
sarb
in
int3
cmpsb
mov
mov
movsl
xchg
jp
jae
sbb
inc
xor
sub
cmp
push
mov
sbb
jae
das
outsl
je
inc
xor
jg
cmpsb
sub
push
jge
imul
rcrb
add
das
cs
mov
out
jge
jns
or
mov
inc
mov
jbe
sbb
popf
imul
xchg
mov
jmp
adc
test
add
lods
cmp
xor
dec
xchg
inc
and
arpl
jbe
lea
mov
test
and
mov
push
shl
iret
lods
xchg
and
or
scas
adc
add
in
or
xchg
and
fdivr
or
xorl
out
lods
fs
jbe
and
lcall
push
add
imul
shl
mov
movsb
add
add
pop
jmp
sbb
adc
pop
negl
roll
adc
or
sub
or
mov
out
dec
xor
mov
scas
repz
les
mov
lahf
or
mov
pop
mov
stc
mov
sbb
and
test
repnz
mov
push
in
das
push
imul
cmc
data16
and
dec
mov
mov
push
or
mov
sub
repz
pop
pop
push
fsubrl
sub
or
lea
mov
inc
sbb
adc
pop
out
ja
shr
mov
dec
dec
pusha
stc
mov
pop
out
push
ficoms
scas
dec
icebp
sbbb
mov
pushf
aam
xor
add
dec
and
add
mov
shll
mov
mov
data16
adc
mov
cmp
fstpl
pushf
xor
xchg
addr16
aam
std
scas
sarb
ds
sub
jg
pushf
xor
cmpsl
movsl
lret
fistps
arpl
pusha
mov
movsl
movl
xlat
cld
lea
mov
push
popf
rorb
fdiv
push
pop
in
or
ljmp
les
jp
xchg
mov
outsl
jg
push
jae
mov
push
jge
mov
icebp
jle
dec
push
in
mov
mov
adc
sub
sub
jge
mov
mov
rcrl
sbb
jg
and
cltd
test
gs
mov
adc
xor
loop
das
mov
rclb
loopne
pop
xchg
bound
and
dec
push
pop
cltd
sbb
out
fists
cli
pop
rclb
push
shl
loop
lods
or
push
mov
popf
test
mov
push
iret
mov
repnz
dec
add
orb
ljmp
mov
test
bnd
cli
xchg
addb
das
push
mov
rolb
inc
add
and
sub
mov
cltd
insb
ja
cs
pusha
sub
das
testb
setb
mov
dec
aam
mov
insb
out
inc
sbb
jle
push
lcall
gs
shll
test
xor
iret
fsubs
idivl
popf
or
icebp
add
repz
lods
mov
and
pop
mov
outsb
pop
out
or
xchg
decb
iret
mov
pushf
sbb
loop
jge
into
stos
mov
orb
push
jno
mov
jg
add
ret
data16
insb
jp
pop
push
mov
lahf
cli
std
adc
popa
sahf
aaa
fldt
fstps
add
mov
jmp
push
and
cmp
clc
dec
out
lds
in
cli
dec
pop
cld
ret
adc
jae
sbb
mov
cltd
aam
mov
and
push
icebp
xor
xchg
mov
cmpsl
cwtl
scas
jnp
adc
cmp
popf
int3
sub
and
xchg
fcomip
pop
cli
testl
sub
add
add
in
add
out
sub
mov
or
jecxz
lods
xor
jmp
and
mov
mov
leave
jae
lods
inc
xchg
push
mov
mov
mov
mov
add
nop
xor
xor
and
sub
outsl
sbb
and
bound
xor
aad
outsb
aam
or
jge
out
ret
xchg
pop
xor
xor
and
jbe
fisubrs
aad
movsl
sti
arpl
mov
mov
push
ds
mov
pop
addl
push
dec
pusha
pop
dec
pop
scas
jnp
inc
push
bound
xor
out
imul
jecxz
shll
push
fadds
mov
mov
sbb
mov
cmp
dec
gs
dec
imul
cmpsl
icebp
mov
xor
adc
and
sti
add
fstl
cmp
mov
fs
sub
pop
and
push
aas
mov
idivl
nop
scas
add
fisttpll
dec
mov
lods
dec
nop
divl
andl
out
mov
sbb
jecxz
out
shrb
mov
xchg
pop
add
adc
int3
out
sub
orb
inc
jne
dec
mov
std
add
pop
cmp
mov
in
push
mov
adc
jbe
lcall
sub
loop
in
lret
sub
lahf
sub
dec
cli
jmp
icebp
out
sbb
sub
push
lcall
daa
lahf
inc
cmpb
sub
sub
rclb
pop
fwait
inc
and
repz
in
pop
test
mov
loop
dec
mov
in
cmp
xchg
adc
inc
out
cmpsb
vaddsubpd
cld
sahf
add
or
xchg
xlat
mov
push
push
hlt
sub
push
hlt
icebp
lock
lds
cs
call
sahf
test
push
clc
stos
add
adc
fisubl
fisttps
sbb
sub
das
test
add
lds
push
mov
hlt
pop
lcall
mov
int3
jmp
sub
dec
mov
inc
xchg
cmp
std
push
pop
stos
lea
mov
push
xchg
and
data16
pop
in
push
pop
icebp
int
out
pop
mov
sbb
xor
es
bnd
imul
pop
lods
adc
push
or
sahf
test
shrl
movsb
mov
add
xor
push
pop
sti
fwait
clc
loopne
xor
mov
sbb
repz
inc
sbb
push
add
push
pop
mov
adc
or
push
xor
out
lahf
call
sub
nop
cmp
rol
out
fcoms
jecxz
and
push
out
or
add
sub
repz
pusha
rcrb
aaa
ret
out
mov
popf
pop
ret
inc
mov
aaa
mov
shrl
mov
fcmovnbe
int3
mov
popa
test
aas
sub
enter
add
inc
addr16
ret
xor
jne
fyl2x
jmp
xor
popf
fs
pop
or
and
pop
nop
in
pop
add
or
and
lret
jmp
loope
inc
dec
ret
push
add
xchg
notb
adc
lahf
loope
sti
test
js
fimull
enter
push
xchg
or
mov
push
xor
test
popa
fldcw
mov
mov
iret
loope,pn
xor
in
add
xor
aam
int3
sub
and
outsb
repnz
in
pop
mov
fcmove
dec
sub
cmovno
scas
cwtl
ljmp
xchg
clc
push
rorl
or
repnz
push
pushf
pusha
addr16
pop
adc
stos
jbe
mov
adc
jg
add
push
es
dec
in
dec
and
add
mov
xor
loopne
testl
in
push
push
in
sbb
jb
enter
xchg
add
out
sahf
pop
ficompl
cmp
push
mov
lret
xor
fnsave
stc
andb
or
lahf
dec
push
mov
aad
loope
pop
imul
mov
cmpsb
push
outsl
lea
shll
cmp
cs
fldcw
popa
popa
mov
movsl
push
inc
clc
jne
lahf
rolb
mov
mov
push
pop
imul
dec
pusha
negb
sbb
js
xor
xchg
xor
mov
fimull
movsl
xchg
repnz
mov
inc
mov
inc
jmp
cli
sbb
push
popfw
and
lret
lods
lea
mov
pop
ljmp
stos
into
xchg
xchg
xor
push
dec
pop
xchg
je
ret
pop
inc
fisubrl
sub
xchg
inc
std
icebp
sbb
jnp
adc
inc
mov
and
stc
adc
add
mov
sbb
sub
lahf
xchg
mov
inc
fisttpll
push
outsl
jo
inc
jmp
xor
or
je
repnz
mov
xor
sbb
jno
dec
xchg
push
ds
pusha
sbb
dec
addr16
xor
or
mov
orb
cmp
scas
push
mov
inc
jle
stos
ja
fldt
int3
popa
inc
pusha
push
jbe
movsl
aam
mov
pop
mov
sahf
ljmp
xor
addr16
push
mov
and
and
xor
dec
imul
stos
test
cli
int
mov
xlat
mov
je
mov
jl
into
ret
add
adc
mov
sbb
mov
imul
pop
cmp
mov
jne
xchg
aas
ljmp
pop
mov
pusha
lret
sub
mov
ret
push
mov
xlat
lcall
mov
mov
loopne
sub
sbb
xor
pop
lds
xor
sub
or
pushf
add
or
imul
call
inc
cmp
xor
or
pushf
ficoms
xor
cmpl
dec
or
shll
adc
sub
addr16
or
sub
cmp
in
or
loop
adc
lret
out
push
pminsw
mov
mov
insb
sbb
mov
or
sbb
hlt
mov
sarb
scas
daa
xchg
push
add
lds
cbtw
jns
cmp
jo
xor
sbb
push
lahf
mov
xlat
jo
xor
icebp
cmp
add
and
repnz
xchg
mov
fdivrs
ret
sbb
jne
lods
jmp
mov
push
or
and
add
adc
lret
push
test
popl
and
and
mov
push
dec
mul
adc
mov
popl
pop
or
mov
pushl
mov
out
out
lock
dec
xchg
xchg
into
cmpsl
arpl
add
push
cmp
imul
sbb
cmp
lods
lcall
fiaddl
and
jmp
stc
or
sbb
push
jb
jnp
push
rcrb
sbb
push
repz
sbb
push
frstor
mov
add
loop
xor
int3
mov
add
dec
in
addl
bound
or
sbb
stc
imul
lds
xlat
xchg
mov
jne
fsubrs
imul
xchg
imul
inc
fnstcw
push
popa
daa
dec
sbb
and
cmp
std
pop
mov
lahf
or
es
xchg
sbb
scas
mov
loope
mov
xor
sub
push
cmp
es
dec
or
imul
mov
jmp
lods
stos
mov
cmp
leave
mov
and
push
imul
or
shlb
mov
testl
sarb
push
pop
inc
dec
cmpsl
mov
xchg
sub
je
pop
xor
adc
out
pop
notb
inc
shll
std
dec
pop
jl
neg
aam
add
mov
mov
notl
imul
mov
or
xchg
sbb
and
pop
mov
bound
aaa
in
fwait
jmp
imul
pushf
insb
inc
sub
push
xor
sub
popl
dec
push
mov
ret
mov
fbstp
pop
xchg
out
aaa
mov
push
gs
cltd
fwait
andl
sahf
pop
pusha
xor
stos
in
pop
lcall
mov
pop
xchg
pushf
adc
scas
push
daa
imul
insb
jo
js
scas
xchg
ljmp
popa
stos
fsts
mov
xor
hlt
test
push
lahf
lahf
sbb
repnz
pop
gs
ljmp
mov
data16
fisubs
or
mov
leave
adc
push
or
jae
movsl
mov
stos
sbb
js
aaa
push
mov
xchg
clc
mov
mov
cli
jp
xor
xor
jns
fcompl
stos
loope
sbb
add
jp
jbe
push
jg
es
lret
xchg
popa
sub
jle
mov
mov
ficompl
roll
pop
add
push
pop
xchg
inc
je
leave
orl
mov
cli
adc
insb
cmp
outsb
sahf
xchg
call
rcll
add
pop
repz
dec
inc
int
xor
movsb
or
adc
lea
push
inc
sub
out
test
out
roll
sti
pop
adc
stos
xchg
fidivrl
test
push
test
icebp
push
jo
popa
mov
or
jg
adc
mov
call
test
loopne
mov
jp
ljmp
push
sub
stos
ret
mov
push
shll
inc
push
cltd
or
mov
xor
jl
stos
dec
fsubr
repz
mov
fldcw
xchg
jle
std
mov
jecxz
ret
fdiv
cmp
mov
jns
push
in
mov
sub
test
dec
cmpsb
stc
cmpb
js
xchg
daa
push
inc
orb
cmp
dec
and
inc
jp
adc
test
xor
fstp
test
out
pop
insb
lcall
mov
daa
jg
clc
add
rorb
xor
inc
inc
into
rol
inc
inc
test
or
push
pop
iret
out
loop
xchg
dec
xchg
mov
adc
push
aam
jmp
aam
cmpsb
sbb
rolb
sbb
lret
cmpsl
inc
aas
hlt
insb
cli
scas
ficoms
repnz
bound
nop
cli
jne
push
inc
ret
cld
test
dec
sub
sahf
adc
fnstenv
xchg
or
xor
test
mov
mov
mov
pop
pop
imul
scas
loopne
mov
add
popf
push
sti
add
jns
jns
sbb
jbe
mov
add
adc
pusha
out
and
movsl
sub
inc
or
xchg
int3
repnz
outsl
cmp
push
lea
lret
pop
mov
sbb
scas
gs
xor
loope
bound
das
ficomps
push
int
inc
shl
xor
xor
imul
outsb
xor
push
and
out
mov
ljmp
scas
loope
adc
jecxz
push
add
nop
sub
lods
push
bound
xchg
pop
movb
enter
adc
fstl
fisubrl
call
pop
mov
adc
fsubrl
sti
inc
cmpsl
mov
sbb
icebp
dec
idivb
pop
test
mov
jl
bnd
nop
enter
gs
idiv
mov
insl
push
push
fcmovnb
sbb
sbb
in
inc
mov
cmp
xchg
lds
cmp
loop
sahf
jno
scas
mov
jb
cmp
mov
idiv
mov
push
add
inc
movl
cwtl
aad
enter
xchg
stc
cmpsl
sub
xorl
inc
xchg
es
mov
inc
loop
fwait
aas
jl
test
fists
movsl
jmp
in
je
out
pop
addb
stos
and
push
mov
xchg
orb
js
js
pop
pop
and
add
rorl
lock
xchg
flds
xchg
inc
or
inc
adc
stc
xor
mov
pop
sbb
sbb
mov
pop
fcompl
mov
jg
sbb
xor
jge
in
dec
dec
dec
ds
in
and
ret
lea
sub
sub
cwtl
inc
out
cld
inc
or
jns
nop
push
or
data16
bound
add
xchg
in
xor
test
int
or
sbb
enter
mulb
lods
mov
add
out
mov
or
and
adc
push
push
into
jle
stc
shr
dec
mull
push
or
bound
xchg
lret
imul
mov
jo
adc
pop
ficomps
xor
xor
xor
icebp
mov
mov
lock
es
xchg
or
rorl
xchg
movsb
dec
loopne
cli
repz
push
aaa
fadds
push
ja
sub
and
fidivl
out
mov
int
push
pop
adc
push
mov
icebp
mov
jne
xchg
xchg
add
add
sbb
loop
xchg
lcall
xor
jl
sbb
sub
xchg
xchg
jle
sbb
inc
fucomip
add
lahf
cmp
mov
lock
call
xor
cmp
add
pop
add
insb
mov
mov
and
test
jl
and
movb
dec
push
pop
jb
shll
ljmp
mov
sbb
stc
sub
fs
je
sbb
xor
aad
inc
psubsw
cltd
push
inc
dec
es
add
nop
orb
pop
mov
adc
pop
ficoms
adc
pop
pop
cmpsl
xchg
movb
mov
dec
js
outsb
or
cltd
xor
jae
stos
js
mov
jns
sub
cli
in
xchg
xor
cld
mov
insb
xor
daa
popa
xchg
imul
nop
xor
in
push
mov
dec
mov
and
sbb
ja
xor
lahf
push
loopne
es
inc
aas
sub
andl
push
mov
and
fld
rorb
cmpsl
nop
pushf
decb
ljmp
outsl
push
aaa
jg
sahf
out
lret
or
shl
outsl
out
mov
subb
sub
rorl
mov
or
scas
dec
xchg
mov
mov
aad
xor
jecxz
or
int3
dec
adc
fistps
jg
test
stos
and
ljmp
stos
imul
jg
shlb
cmpsl
cmp
into
mov
and
rol
roll
push
loopne
out
repz
push
add
mov
out
mov
push
sbb
add
arpl
and
subl
test
inc
mov
jns
adc
inc
sarl
xor
scas
inc
loopne
sbb
push
out
aaa
inc
push
mov
loopne
andb
movsb
in
and
or
scas
xchg
mov
cmpsb
andl
xorl
sub
push
sbb
cltd
or
mov
hlt
outsl
xorps
pop
push
lahf
out
mov
jle
cmp
push
mov
int3
dec
mov
rep
fldl
pusha
scas
daa
jnp
scas
mov
cmp
shr
push
fsubrp
mov
aam
pop
mov
nop
js
push
aad
js
into
add
adc
adc
pop
cmp
jl
js
ret
mov
push
push
test
pop
ss
daa
push
or
gs
aaa
sub
std
or
mov
adc
pop
xor
jb
lock
cwtl
sti
push
ret
pusha
mov
adc
cs
mov
lock
das
stc
test
dec
cwtl
lahf
sbb
sub
insb
mov
call
sbb
pop
xchg
push
inc
test
jmp
push
mov
sbbl
jmp
add
pop
pop
test
pop
and
sarl
outsb
insl
mov
inc
sub
sub
pop
aas
or
imul
aas
sbb
repnz
ss
cli
or
xchg
xchg
jg
idiv
lock
leave
ss
rcrl
iret
mov
icebp
inc
in
lods
dec
xor
mov
adc
imul
pop
sbbl
or
negl
push
push
sub
jg
pusha
cld
and
push
fucomi
test
jno
mov
dec
addr16
cmp
or
sub
push
push
mov
jnp
incb
pop
mov
fdivrs
adc
and
mov
xlat
ljmp
aam
adc
mov
nop
xor
mov
adc
test
pop
add
mov
bound
adc
js
mov
pop
fiadds
or
lea
and
shrb
imul
mov
subb
pop
cmp
ret
mov
insl
dec
cmp
stc
mov
push
jecxz
cwtl
add
fimull
jmp
and
pusha
mov
xchg
pop
inc
pop
mov
test
mov
pop
pop
aad
mulb
xchg
fsincos
and
adcl
push
sbb
fstl
out
std
mov
and
push
pop
mov
mov
cmpsl
and
outsb
fldl
aaa
jge
in
les
ret
mov
push
scas
inc
cld
mov
xlat
aaa
jne
lock
outsb
negb
rclb
fmul
xchg
clc
scas
nop
scas
cmpsb
adc
jmp
gs
clc
push
xchg
xor
mov
movsb
pop
mov
sbb
push
inc
jecxz
push
imul
lret
aam
inc
and
imul
lods
jb
xchg
shlb
in
add
rcr
subb
hlt
jbe
stc
sbb
mov
or
pop
std
mov
jnp
int3
outsl
add
or
add
push
push
adc
inc
fsub
xchg
pusha
and
jp
xor
test
and
test
inc
ret
xor
push
cs
outsb
sbb
adc
ja
cmpsb
fisttpll
icebp
push
lahf
outsl
mov
pop
ljmp
mov
movsl
call
rclb
jge
fsts
cwtl
fcoml
push
sub
mov
stos
in
xorb
cmp
or
jne
sub
sbb
scas
sti
xchg
scas
stc
std
sub
mov
cld
cwtl
mov
cmc
jo
sahf
shll
add
xlat
ss
insb
cmp
mov
dec
xor
add
ds
and
xor
xchg
pop
test
pop
cmp
xchg
hlt
sub
loop
fimuls
addr16
lcall
jmp
mov
jge
or
mov
or
std
pop
lcall
lret
jmp
cmc
push
push
std
stos
scas
xchg
icebp
inc
cmp
rclb
jo
and
xlat
outsl
loopne
mov
ret
sub
addr16
jbe
push
icebp
lds
scas
pusha
psrlw
mov
inc
outsl
sarb
popf
cmp
cmp
add
jmp
push
clc
lea
dec
sbb
arpl
push
lret
mov
jbe
insl
mov
jecxz
scas
sbb
imul
leave
add
ljmp
dec
mov
cmpsb
jecxz
scas
cmc
sbb
stos
or
xchg
lcall
inc
dec
fsubl
call
jae
loope
sti
loopne
mov
lods
movb
add
cmp
cmp
or
jbe
dec
scas
push
decl
pop
mov
mov
mov
xchg
das
idivb
mov
inc
pop
adc
shlb
jp
fldenv
add
push
jno
ss
jo
cmp
aad
out
xor
mov
and
and
cmp
mov
xchg
test
sub
popf
pusha
sti
rcrb
in
dec
and
loopne
xor
push
dec
stos
inc
lahf
loopne
lahf
movb
mov
xor
call
loop
test
sub
push
call
sub
mov
fiadds
ret
or
add
pop
js
in
daa
push
imulb
aas
cltd
mov
cs
dec
fnstenv
jo
mov
xor
insl
outsb
adc
add
mov
in
add
mov
jp
sub
movsb
xor
scas
or
xor
jno
fistpl
roll
cmp
mov
sub
cmc
add
test
movsb
sarb
mov
shl
jb
push
lret
iret
jl
adc
cmp
dec
mov
mov
mov
into
sbb
xchg
xor
and
inc
mov
mov
xor
lahf
mov
jg
fcmovnb
jp
hlt
inc
lcall
jl
out
lret
ljmp
jmp
mov
daa
xchg
aaa
inc
fsubs
fsin
mov
mov
std
ficoms
mov
fldcw
dec
add
mov
ret
into
dec
mov
stc
or
add
push
std
fisttpll
in
mov
pop
dec
leave
and
lea
shl
and
mov
shlb
inc
out
js
sarl
mov
cltd
xchg
xchg
call
stc
in
aad
dec
cld
adc
mov
decb
adc
daa
das
in
mov
hlt
sbb
dec
mov
sbb
repz
pop
mov
xor
inc
fcomip
lock
lds
push
iret
in
outsl
bound
sbb
shlb
out
xlat
daa
mov
inc
add
pushf
arpl
hlt
jle
les
sub
clc
jmp
jns
es
ret
xchg
int3
ja
mov
cmp
mov
in
xchg
xor
xor
imul
cmpsl
pushf
cwtl
jp
int
pop
ffree
mov
xor
sbb
mov
dec
push
adc
sub
outsb
xchg
scas
lock
gs
adc
std
inc
push
jne
mov
sub
sub
adc
push
xchg
sbb
pop
loop
cmpsb
fwait
sub
iret
sbb
mov
xor
adc
fsin
cli
pop
sub
mov
xor
jp
pop
sbb
mov
test
pop
sbb
xchg
addb
aad
xchg
test
pop
jl
dec
test
int
jb
sbb
jmp
aas
pop
adc
xor
mov
fwait
mul
jle
sahf
lods
xor
xchg
mov
outsb
or
sbb
adc
stc
repz
ljmp
mov
inc
lods
push
cmp
into
in
fidivrl
sub
stos
xlat
lock
push
fprem
popf
aas
push
fistl
push
enter
or
and
shrl
push
adc
or
js
sahf
idiv
mov
pop
notl
push
pusha
stos
push
push
fsubs
repz
mov
or
xchg
fsubs
jmp
xchg
stc
pop
lret
mov
sub
push
ret
push
inc
xchg
imul
sbb
lcall
divl
xchg
ror
push
cmpsb
ss
push
jmp
into
pop
pop
mov
aaa
cmp
mov
jae
push
push
push
jmp
jne
pop
push
xchg
adc
clc
shll
rorb
scas
inc
testb
repz
dec
mov
push
inc
jnp
sti
cmp
cmc
adc
cs
ss
jg
xor
inc
jp
push
push
cltd
cs
mov
mov
or
add
and
mov
dec
or
sti
pop
cmpl
mov
outsl
adc
mov
add
xor
dec
xor
fs
movsl
adc
cmp
mov
or
add
in
cmpsl
mov
inc
push
lret
aad
out
and
adc
loope
nop
pandn
ljmp
sbb
xor
insl
xlat
in
insl
sub
lods
add
or
inc
pop
mov
loope
loop
adc
mov
dec
rorl
scas
shlb
add
lea
mov
movsl
clc
clc
inc
adc
sarb
jb
cmp
xor
push
pop
test
fisubrs
imul
jbe
push
xor
addr16
lods
xorb
jl
add
aad
loope
jno
mov
and
pop
or
dec
inc
pop
arpl
xchg
or
mov
pop
xchg
push
inc
loope
push
je
pushf
int3
add
sub
fwait
push
mov
and
and
bound
add
mov
rcll
shlb
test
push
jae
add
js
fwait
xor
cmp
cmp
mov
push
or
sub
mov
jnp
rep
cmpsl
pop
cli
test
fisttpl
inc
mov
or
mov
sar
pop
minps
mov
sbb
xor
adc
jbe
aaa
lret
push
les
add
inc
mov
adc
std
cmp
nop
dec
inc
fdivrs
mov
shrl
xchg
pop
push
enter
add
hlt
push
push
enter
pop
jbe
stc
fs
fmulp
pop
xor
cmpsb
jle
push
sbb
scas
and
xchg
xor
xchg
dec
mov
ret
mov
sub
adc
jnp
lret
push
add
mov
sarl
std
movsb
je
or
add
sub
rcr
ja
jb
cmc
push
sbb
push
sbb
dec
and
or
outsl
mov
outsb
out
je
out
xor
mov
sbb
js
jae
and
ja
enter
add
rcr
or
xor
inc
addl
ret
sub
stos
out
fnstenv
pop
dec
in
and
xchg
sub
fistps
dec
lock
sahf
shlb
dec
push
enter
mov
push
sbb
jno
insb
lret
out
sahf
cli
fmuls
push
mov
roll
xlat
scas
sbb
movsb
pop
push
mov
jae
adc
out
out
pop
sub
cmp
xchg
lcall
out
xor
inc
xor
cli
jns
xor
pop
xor
leave
pop
xchg
lahf
leave
fcoml
out
movl
dec
scas
sub
xor
jmp
leave
mov
insb
sti
sbb
cmc
insb
xchg
int3
enter
insl
pop
arpl
insl
cltd
xor
pop
mov
xor
js
sbb
cmp
loope
shr
pop
outsb
into
pop
pop
mov
ljmp
hlt
cmpsl
mov
xchg
stos
es
jae
push
mov
movsb
lcall
scas
es
mov
cmpsb
mov
xlat
divb
push
std
mov
mov
loope
push
aaa
fisubrl
dec
lods
pop
adc
fwait
mov
pop
inc
and
pop
or
push
mov
cmpsb
repnz
std
pop
rorl
test
mov
sbb
mov
gs
and
in
xchg
loop
mov
sub
or
in
and
cmp
push
data16
jge
jbe
or
out
outsl
lds
mov
inc
dec
js
pop
push
mov
pop
pop
sub
xchg
push
aaa
pop
rol
jb
mov
pop
imul
out
rclb
aam
into
std
push
sub
pop
sti
or
inc
pop
into
aad
sbb
xor
dec
adc
rcll
pop
cmp
jg
mov
call
das
mov
push
dec
inc
in
dec
pop
cmpsl
push
jmp
add
lahf
xor
lds
jb
sub
mov
mov
loop
mov
mov
mov
push
pop
jb
cmp
aad
pop
into
pop
xchg
mov
imul
incl
pop
mov
jl
data16
add
insl
pop
sub
rclb
test
xchg
stos
mov
fisttpl
cmp
cmp
mov
lds
and
movsb
inc
and
xor
sti
push
jge
loopne
pmuludq
ficompl
fidivs
out
repnz
test
das
and
mov
pop
jns
insb
sub
adc
repz
lea
adc
fisttps
movsl
add
notb
cltd
mov
mov
jle
and
dec
fidivl
pop
addr16
imul
pop
lret
push
lcall
adc
jb
loop
enter
les
shlb
push
jne
test
mov
cmp
popf
jno
add
lock
mov
repnz
cltd
mov
xor
fadd
scas
sar
pop
adc
xchg
dec
sbb
and
cmpsb
lods
sbb
shrb
jne
fadd
push
lcall
lock
pop
lcall
cmp
sub
and
loop
inc
out
enter
add
sub
fs
adc
mov
fldcw
push
arpl
mov
sub
xchg
fcmovbe
mov
fisttps
inc
cmp
mov
push
push
test
inc
lret
push
mov
out
je
or
outsb
sbb
fistpl
jns,pn
lret
ja
insl
jno
mov
push
mov
xor
mov
call
popf
jno
or
xchg
push
cmp
fsts
jo
repz
in
sub
mov
ret
popf
dec
mov
mov
jmp
scas
or
jno
icebp
bound
push
sub
fwait
xor
dec
or
cmp
stos
xor
andl
addr16
mov
arpl
cmpsb
or
adc
fistpll
add
push
sub
fisttps
xchg
mov
sub
and
fcomps
cli
daa
fiaddl
jecxz
iret
out
and
aas
dec
imul
inc
push
add
test
or
jp
mov
jb
sti
inc
and
sub
je
hlt
aad
daa
gs
add
jb
adc
mov
lock
gs
sbb
sbb
xchg
mov
add
and
or
xchg
xor
shlb
lds
mov
jno
loop
inc
cmp
xchg
mov
push
neg
nop
call
pop
dec
mov
pop
sub
icebp
sbb
cmc
inc
pop
and
popf
mov
mov
aaa
sub
and
loop
ret
pop
cmp
fisubl
mov
enter
inc
stc
sbb
sbb
adc
mov
jp
pop
lds
shrb
adc
scas
enter
scas
mov
les
push
jno
aas
pop
lahf
test
push
add
daa
dec
movsl
les
inc
xchg
cs
out
inc
mov
lahf
push
int3
dec
xor
popa
ret
dec
bnd
sbb
ljmp
adc
std
sub
mov
mov
push
inc
bound
sbb
cvtdq2ps
iret
jle
cmp
in
xor
outsb
xor
cmp
mov
or
xchg
and
xor
jecxz
aam
fmuls
sbb
and
test
or
xchg
mov
fwait
cmp
pop
insl
gs
mov
std
cltd
aas
adc
sahf
ss
fcom
sahf
lods
test
mov
int
push
mov
cmp
stc
ror
push
je
test
and
pop
lcall
idivl
test
mov
std
cmp
int3
lret
lods
cmpsl
insl
jb
cmp
mov
ja
jne
test
sbb
scas
push
shll
mov
movsl
popa
outsb
pop
cld
in
enter
jp
ret
and
loop
repnz
paddsb
and
rorb
rorb
inc
push
test
pop
sbb
xor
idiv
cmovge
ja
mov
dec
pop
add
sbb
fidivs
pop
inc
scas
mov
or
inc
movsl
cmpsl
mov
mov
inc
push
inc
out
add
lock
es
addr16
shll
push
dec
popf
in
pop
out
inc
fdivrl
or
mov
popf
mov
popf
adc
cmp
push
js
xchg
ja
jo
fildl
aas
cld
loop
lret
outsl
xchg
mov
mov
add
adc
lods
sahf
xchg
push
ss
mov
scas
xor
and
insb
cld
out
or
lods
mov
into
xlat
sahf
jbe,pt
mov
inc
out
jle
inc
outsb
xchg
sbb
jbe
sub
xchg
ja
xor
adc
negb
cmp
shrl
repz
mov
mov
sub
mov
inc
enter
mov
es
mov
xchg
jo
cltd
sti
in
icebp
int
xor
adcb
dec
inc
dec
fcmovne
aad
push
mov
jp
add
rcll
roll
jle
cwtl
xadd
test
cmp
mov
cltd
lret
dec
push
popf
sbb
xchg
sbb
pop
mov
xlat
xor
jmp
fisttpll
or
ret
cmpsb
dec
mov
mov
mov
cmp
outsl
out
sti
pop
cs
mov
mov
jp
fsubr
sbb
popf
xchg
es
cmp
in
mov
dec
pushf
or
sbb
cmpb
cmp
fnstcw
xchg
fsubrs
dec
shr
jno
shlb
insl
adc
adc
jge
sbb
fwait
in
outsb
pmulhw
add
cltd
xor
int
push
popf
cltd
clc
add
adc
and
test
dec
xor
lock
lds
fistl
dec
sub
add
inc
pop
jl
ret
dec
mov
cmpsb
pop
lea
push
add
mov
fst
cwtl
lea
mov
sub
mov
loope
jae
push
cwtl
fwait
mov
ret
in
loop
push
mov
cmc
and
icebp
adc
sub
adc
adc
mov
sbb
inc
aas
jmp
wrmsr
ds
and
jns
mov
push
outsb
push
aad
fistl
mov
orl
adc
inc
stos
addr16
jmp
xchg
arpl
jns
aaa
fstl
or
jae
xor
fisttpl
mov
aas
pop
mov
call
or
fimuls
pop
jno
stc
sbb
loope
inc
or
jno
icebp
iret
cs
shll
push
jmp
fnclex
xchg
or
xor
inc
scas
shlb
xor
shll
jae
stc
push
rol
cs
out
int3
mov
int
es
add
neg
push
mov
add
pop
adc
xchg
out
pop
xor
push
inc
cwtl
cmp
sti
rcrl
popa
and
call
cmp
cmc
ret
icebp
xchg
mov
push
or
fucomp
push
out
std
stc
mov
mov
pop
js
jae
lret
pop
adc
push
sarl
mov
xchg
xlat
ret
jle
jo
push
mov
sub
addb
xor
push
adc
loope
leave
test
aam
popa
sbb
or
adc
jge
cli
std
pop
jge
mov
xchg
cmp
mov
lret
out
add
ret
movsl
es
loope
jp
imul
xor
adc
int3
or
subl
ljmp
cltd
xor
ds
inc
push
inc
pop
aam
adc
imul
sub
icebp
xchg
popa
not
scas
push
in
jge
cmp
mov
sbb
test
std
jmp
stc
mov
test
ret
push
mov
push
mov
sbb
dec
sbb
stos
xchg
mov
ja
ds
xchg
mov
mov
cs
out
add
ds
divb
mov
push
jle
call
push
mov
push
sub
out
xchg
and
shll
mov
int3
test
cmp
lea
iret
insl
pop
inc
je
mov
out
mov
lods
mov
xor
dec
into
xor
cmc
push
mov
aam
and
ret
ret
sysretw
xchg
sub
lret
divl
out
scas
jp
pop
fcmovnu
lods
push
inc
mov
xor
aad
or
and
pop
pushl
sbb
mov
lock
adc
lods
popa
fs
cmpl
mov
adcb
les
ret
movsl
push
dec
repz
mov
jns
mov
int3
in
add
inc
mov
push
push
pop
aad
and
lret
mov
inc
cmpsl
adc
in
insb
cmp
scas
sub
in
lods
movq
xor
pop
sti
ja
cmp
outsb
mov
push
repz
mov
xor
cmp
inc
add
fsts
jns
adc
frstor
icebp
sti
rcl
shl
pop
jnp
imul
in
imul
daa
mov
lret
pop
fcomi
mov
ljmp
dec
jne
lahf
mov
xchg
in
lock
nop
pop
cli
fisubrs
lcall
jmp
aam
stos
inc
loope
scas
add
iret
jb
and
xchg
repnz
stos
pop
shlb
mov
push
xchg
call
sbb
xlat
xor
xor
hlt
xchg
fdivp
mov
shrb
mov
lods
cmp
xchg
in
mov
negl
sbb
push
or
subl
xor
test
movntq
mov
mov
lods
or
ja
outsl
pop
jo
and
or
shlb
pop
xor
xor
out
ret
std
sbb
orb
xor
and
popa
inc
lret
sub
cmp
jmp
or
push
pushf
add
lea
xchg
xor
dec
lock
int3
sti
mov
negb
test
xchg
cmp
xchg
iret
push
cmpsb
pop
and
inc
scas
dec
inc
add
aam
sbb
aad
bound
mov
int
pop
mov
sub
cld
aas
jne
add
loopne
and
or
jne
iret
decb
nop
sbbl
gs
mov
cli
in
ja
sbb
int3
std
test
unpckhps
xor
in
jp
pop
lock
loopne
mov
cmpsl
adc
outsl
mov
cmp
adc
mov
dec
lcall
push
xor
cmpsb
movups
adc
outsb
bound
es
jp
cmp
cltd
in
enter
or
roll
and
mov
jo
imul
mov
push
sub
addr16
stc
jne
inc
adc
bound
jmp
push
inc
rol
xlat
mov
bound
punpckhwd
xchg
push
inc
insl
push
sbb
pop
sbb
gs
push
sub
mov
das
mov
push
je
and
out
or
inc
mov
clc
jns
mov
mov
sti
aam
jl
adc
imul
loope
sub
cmpsb
ljmp
sbb
sub
sbb
xchg
test
sub
imul
aas
jmp
mov
fsubr
pop
cmpsl
ljmp
gs
push
push
mov
call
je
cmp
clc
jae
fstl
sbb
and
dec
mov
lahf
rcrl
jmp
iret
pop
mov
xchg
push
jbe
or
dec
mov
test
movsb
push
movsl
cmp
std
or
push
lahf
addr16
cmpb
hlt
les
mov
cwtl
into
mov
mov
ret
xlat
dec
test
dec
stos
jmp
outsl
test
enter
xchg
xchg
xchg
inc
cmc
and
iret
pop
mov
add
pop
lret
and
inc
mov
xchg
sub
repnz
push
mov
cmpsb
adc
popa
jl
xor
xchg
stos
fldenv
sub
addr16
cmp
add
adc
mov
sbb
inc
lods
popl
fadds
arpl
cld
sub
xchg
clc
fisubrl
daa
and
jmp
pop
jmp
mov
dec
in
and
jns
pop
loope
jmp
dec
push
popf
mov
pop
mov
ret
mov
push
mov
loope
sbb
adc
pushf
outsb
xchg
add
xor
xor
mov
mov
mov
push
dec
aam
lret
xchg
je
add
test
or
cmc
mul
dec
pop
jmp
xchg
roll
inc
jno
mov
insb
hlt
orl
mov
mov
loopne
push
sbb
fsubrl
je
add
xchg
push
adc
cltd
or
mov
dec
dec
roll
imul
ds
sub
out
xlat
iret
popa
pop
repz
sar
gs
xor
mov
cltd
add
sub
push
add
loop
cltd
push
adc
mov
mov
imul
outsl
fcoml
in
shlb
mov
mov
jns
mov
adc
inc
outsb
stc
gs
mov
clc
in
orb
pop
aam
jb
stos
sub
out
jmp
loope
lea
xchg
inc
cmp
or
and
add
jge
dec
mul
aad
test
mov
cs
dec
cmp
lods
and
lods
orl
jg
repz
adc
sbb
xor
jecxz
scas
sub
in
movsl
dec
or
xor
sub
mov
adc
mov
inc
sti
cmp
in
dec
sbb
pop
shlb
pop
inc
push
fstps
inc
ds
xorl
sub
in
pushf
cmpl
jg
dec
adc
es
mov
popa
aad
sbb
shlb
and
jl
clc
scas
dec
adc
push
mov
push
xlat
adc
push
test
and
or
iret
xchg
fimuls
pop
pop
aam
push
notl
push
cmc
push
pop
add
mov
mull
js
movsl
in
jg
xor
adc
aaa
ret
push
add
fwait
movsl
push
xchg
lods
in
sub
jne
jbe
call
fs
cmp
adc
cmp
scas
push
out
jle
sbb
mov
call
movsl
mov
jle
add
push
pop
mov
into
cmp
cmp
call
out
gs
jo
lods
adc
sub
cmp
fs
rcrl
adc
jg
std
inc
pop
fisttpl
lds
jbe
push
test
call
and
sub
lea
insl
movsl
and
cmp
out
mov
pop
inc
add
test
loopne
popa
les
mov
jns
fmul
out
pusha
sbb
call
adc
pop
bound
dec
inc
call
jge
or
add
push
mov
xor
dec
push
jge
mov
movnti
jecxz
add
lcall
test
lcall
pop
or
inc
sbb
push
loope
lods
push
test
inc
fwait
negl
adc
outsl
push
rolb
mov
push
dec
jmp
mov
mov
add
mov
mov
sarb
hlt
jne
sbb
int
jmp
jmp
loopne
or
pop
mov
movsb
inc
into
cmpsl
call
sub
mov
out
aad
cwtl
je
packssdw
add
out
les
pusha
pushf
das
out
outsl
test
fcomps
or
xchg
or
inc
mov
sub
clc
sbb
mov
inc
push
scas
sbb
adc
out
aam
xor
mov
pop
mov
push
mov
ljmp
sar
daa
mov
pop
xor
int3
cmp
jle
movsb
ja
iret
mov
sbb
add
pop
inc
out
inc
dec
mov
popf
and
mov
sub
fs
shll
addr16
addr16
jmp
jo
and
xchg
loop
shll
mov
mov
pushf
icebp
repz
lods
pop
inc
lretw
mov
inc
xchg
cmp
outsb
mov
sub
mov
jecxz
enter
inc
dec
sbb
adc
mov
cmp
add
in
push
xlat
inc
push
in
add
mov
std
fdivs
xlat
xchg
dec
movsb
mov
daa
xchg
push
inc
out
dec
je
jecxz
addr16
nop
add
fbld
push
ficomps
cmpsl
js
pushf
std
gs
arpl
and
mov
ljmp
lods
das
push
inc
mov
les
lods
cltd
mov
push
je
repnz
add
push
ljmp
sbbb
int
addr16
loope
dec
xor
outsl
je
add
add
xor
jno
jl
push
push
je
pop
xchg
push
mov
xchg
mov
xchg
or
into
xchg
inc
xchg
vmovss
cmp
xor
mov
pop
sub
std
sub
mov
push
xchg
sbb
and
and
dec
clc
or
jp
xchg
pop
movsl
insb
movsb
into
push
inc
inc
int
mov
popf
pop
daa
add
and
xor
mov
mov
inc
call
imul
push
lret
cli
mov
inc
dec
stos
and
loope
cli
mov
sub
popf
mov
mov
cmp
faddl
inc
mov
add
cwtl
mov
jl
or
mov
mov
mov
inc
mov
popa
lret
xchg
dec
jno
testl
loopne
test
xchg
lcall
cmp
popa
daa
jle
test
cmpsl
and
outsb
sar
dec
adc
data16
out
lret
aas
daa
dec
xchg
imul
in
idiv
xchg
pop
jmp
sub
add
outsb
notl
mov
cmpsb
hlt
mov
pop
or
fs
or
push
shlb
fnstcw
inc
les
cmp
aad
xchg
ja
pusha
mov
xchg
orl
xor
push
jne
push
loop
or
adcb
sub
lds
xor
ficomps
clc
jp
jb
test
jmp
dec
fstps
pop
inc
scas
stos
cwtl
les
repz
nop
in
push
lock
cmp
push
cmp
cmc
sahf
add
fnsave
ja
dec
xorb
sub
iret
int3
xchg
mov
loope
xchg
push
add
xchg
test
sub
cltd
add
sub
insl
inc
add
push
mov
cmp
jno
mov
sti
loopne
lock
mov
cwtl
sti
fisttps
test
ja
xchg
mov
adc
mov
fistl
adc
jnp
mov
mov
cmp
jl
or
ret
cmp
movsl
test
fsubr
repnz
lahf
jno
add
into
mov
jmp
push
mov
pop
mov
out
cwtl
outsl
mov
mov
enter
add
pop
ja
mov
lcall
mov
cmp
sub
adc
in
jg
sub
bound
sbb
lahf
sbb
nop
stc
add
aam
xchg
push
sbb
sbb
xchg
mov
fcomps
fisttps
sub
aam
xchg
inc
cmp
popf
or
sti
mov
sbb
push
push
int
inc
mov
cmp
ds
jmp
les
xchg
xor
or
dec
lcall
cs
mov
xor
lcall
andb
add
xchg
aad
sub
gs
xchg
pop
lret
jp
cmp
sub
out
pop
mov
mov
adcl
mov
aaa
and
sbb
sub
xchg
lcall
pop
and
push
jg
test
test
arpl
dec
dec
push
push
or
fidivrl
shl
adc
dec
hlt
psubusw
into
xchg
ficomps
loop
sub
je
pop
outsl
cmp
fwait
imul
aad
cmp
or
jne
lds
sbb
lds
dec
mov
jno
mov
call
sarl
mov
add
jge
enter
jmp
fcomps
dec
mov
adc
mov
aad
cmc
xchg
xchg
adc
jnp
aas
popf
xor
sub
movsb
fstl
fldt
dec
sub
push
xchg
sbb
mov
push
repz
mov
mov
bound
loopne
lret
bound
scas
mov
stos
push
or
inc
out
xor
pushf
test
aaa
inc
sub
add
movsl
add
loope
cmc
mov
outsl
je
add
jo
mov
fistpl
fwait
mov
leave
fisttpl
into
xchg
in
ret
popf
xchg
jmp
jae
sbb
dec
pop
or
cmp
insb
mov
adc
stos
pop
cmpsl
and
push
cmp
daa
xchg
stos
dec
xor
es
or
jp
outsl
loope
sbb
and
and
cmp
mov
mov
dec
cmp
aaa
test
adc
arpl
nop
sbb
jno
sti
pop
xor
inc
mov
pop
inc
mov
mov
mov
and
dec
and
xchg
in
mov
xor
jo
jecxz
jb
es
into
loop
sbb
mov
pushl
sub
and
pop
mov
adcb
cmp
inc
cmpb
jle
or
xor
dec
push
std
xchg
xchg
loopne
mov
pusha
push
imul
insl
aas
mov
xchg
push
sti
push
mul
lahf
jae
xor
inc
scas
stos
clc
mov
les
bound
pop
clc
pop
pop
pop
xor
cwtl
push
dec
or
push
leave
cmpl
or
inc
jae
cmp
pop
pop
mov
cmpsb
aaa
xor
loop
and
pop
insb
pop
dec
outsl
cs
in
sbb
pushf
les
test
sbb
mov
dec
sbb
scas
outsb
mov
push
js
dec
pop
adc
cwtl
pop
addl
inc
cmc
pop
pusha
jmp
fildl
or
addr16
ret
jbe
lret
xchg
jns
nop
push
scas
repnz
shrb
mov
cmp
es
daa
pop
and
and
push
cmp
ds
push
or
in
ja
cmp
mov
arpl
mov
adc
fwait
pushf
imul
fstpt
ss
ss
out
hlt
clc
push
out
pop
adc
pop
jbe
push
mov
insl
sbbb
mov
pop
xor
scas
imul
in
imul
xlat
into
jp
mov
jo
jmp
stos
outsl
xor
das
sub
cmp
mov
lahf
adc
sbb
mov
movsb
faddp
imul
or
aaa
int
movsb
or
fisubrl
mov
imul
out
cmpsl
sbb
out
adc
sub
bound
jno
jno
pop
or
fsubs
or
jns
mov
cmpsb
mov
jnp
sbb
mov
mov
mov
or
mov
data16
adc
adcb
lods
sbb
mov
hlt
jae
jmp
push
lods
les
mov
add
pop
inc
xchg
aas
aam
pushf
mov
mov
scas
inc
inc
adc
cmp
loopne
push
lcall
adc
mov
mov
das
push
gs
ja
aad
les
stos
sub
cmp
push
fsubl
fwait
les
call
xor
out
add
cld
xchg
stos
adc
mov
enter
pop
daa
daa
into
inc
mov
sub
lock
dec
cmp
je
jecxz
icebp
mov
enter
mov
jmp
cltd
ljmp
mov
dec
loop
shr
notl
fadds
lods
aas
popf
lahf
sar
push
jmp
pop
lods
dec
sub
mov
dec
push
bound
sub
adc
mov
push
roll
imul
pusha
xor
cs
imul
je
test
mov
sub
pop
sub
jo
out
mov
lret
sub
mov
nop
insl
xchg
mov
imul
scas
stos
lods
push
cs
ds
outsb
sbb
sbb
ja
dec
mov
aas
shll
pop
aam
cmc
cmc
out
mov
movsb
mov
jnp
and
pop
mov
dec
pop
and
dec
cli
es
push
mov
test
jns
xchg
out
jno
dec
pop
push
dec
gs
iret
shlb
mov
test
mov
mov
outsb
mov
mov
xor
fisubs
add
out
jecxz
mov
and
outsw
fsubl
mov
push
dec
xchg
gs
dec
stos
lret
shrl
lahf
add
hlt
mov
icebp
sub
sbb
cmc
lret
outsb
test
adc
movsl
sbb
ss
out
xor
subl
out
xor
bound
dec
cmp
sub
cld
stos
xchg
mov
mov
fisttps
and
into
in
inc
call
sahf
sbb
aas
aaa
cltd
sbb
lock
loop
rcrl
movsl
rorl
mov
in
or
lahf
movsl
add
push
push
push
movsb
mov
xchg
subl
add
aas
dec
iret
pop
pop
pop
shlb
int3
and
out
test
inc
fdivr
int
mov
cmp
aas
inc
inc
adc
cli
dec
xchg
mov
lods
xchg
adc
push
jb
jb
nop
les
or
adc
lock
or
jecxz
or
loop
das
cmp
inc
and
pop
ds
dec
ret
cld
xchg
in
xor
pop
lret
pop
mov
xor
sarl
call
ret
mov
loop
popf
idivl
dec
push
cmp
int
pop
add
addr16
lock
stc
push
insb
stos
pushf
push
mov
ds
adc
rorb
mov
repnz
or
fptan
and
rclb
add
add
inc
xor
enter
hlt
push
cmp
mov
lods
cmpsl
adc
arpl
hlt
insl
jmp
inc
sahf
movsl
push
aam
adc
cs
enter
sub
sahf
orl
mov
daa
push
test
inc
stos
sti
ficoml
insl
insl
shll
sub
mov
dec
xchg
inc
or
movsl
sub
pop
sub
popf
out
scas
test
inc
in
rcll
xchg
pop
sbb
mov
repnz
out
pop
mov
sub
out
insl
ja
add
mov
aad
adc
inc
mov
cs
gs
orl
shl
jle
sti
adc
push
jmp
bound
add
xor
mov
mov
dec
mov
mov
movsb
add
leave
push
mov
lahf
rclb
mov
adc
idiv
movsl
test
add
cmc
insb
bound
push
pushl
xor
jo
das
sbb
push
imul
push
dec
mov
insb
sub
mov
stc
xlat
shr
sbb
sbb
dec
pop
imul
cmc
cli
in
and
push
stos
xchg
xor
in
mov
lahf
jle
dec
push
dec
std
or
jns
and
or
clc
mov
addr16
inc
lahf
mull
inc
xor
cli
adc
lds
xor
shl
push
loop
sub
push
leave
jmp
test
mov
lret
cmpsl
mov
insl
pop
mov
out
cmp
int
cs
test
loope
pop
stos
ficomps
outsl
sbb
popf
sub
mov
xor
outsl
das
je
push
mov
pop
pop
jg
enter
outsb
ds
jno
pusha
lret
cmp
aaa
adcl
orb
test
test
mov
aam
mov
lret
jbe
mov
shl
in
icebp
adc
mov
jle
mov
push
fdivl
add
pop
and
inc
out
fmulp
pusha
cmpsl
add
adc
lds
arpl
call
mov
iret
cmp
addr16
pop
xor
dec
cs
imul
jno
add
fistps
cmp
loop
push
ss
push
pushf
or
xchg
mov
out
inc
ja
xor
xchg
xchg
scas
or
imul
push
fcmove
imul
xorb
dec
lods
loopne
popf
popf
xchg
movsl
mov
jg
cld
pop
xor
xchg
xchg
lret
in
stc
jno
jno
xor
int3
xor
jge
in
push
xchg
mov
mov
jecxz
inc
lods
dec
push
push
pusha
xor
xchg
inc
add
aam
mov
adc
cmpsb
mov
sbb
imul
rcll
jb
imul
mov
xlat
leave
pop
lods
mov
cs
lock
dec
xor
int
add
or
sbb
les
out
int3
jo
sbb
fsubs
pop
dec
in
aad
daa
or
es
ror
jmp
dec
add
add
in
imul
jbe
fwait
stos
movsb
rclb
push
pmullw
test
idivl
fdivr
out
inc
cmpsb
aas
das
mov
jle
mov
xlat
dec
push
shlb
mov
inc
xor
lds
jne
repz
call
cmp
rorl
xlat
fisubl
sub
jo
aaa
pop
or
jae
sbb
sbb
xor
mov
push
inc
pushf
shrb
ljmp
icebp
adc
je
push
das
xor
xor
dec
ljmp
cmpsl
jl
mov
mov
or
mov
sbb
pop
loop
icebp
add
fldcw
daa
test
dec
loopne
daa
imul
addb
push
in
sub
xchg
push
mov
mov
or
mov
xor
push
push
add
out
int
imul
mov
xchg
cmpsb
hlt
xor
cltd
mov
in
jle
std
xchg
sub
xchg
test
xchg
jae
out
push
lds
xbegin
cmp
js
daa
and
shlb
movsb
fists
mov
data16
push
and
mov
jae
mov
mov
add
sub
sarl
dec
pop
sub
sub
ja
or
data16
arpl
inc
es
add
movsb
ja
inc
jl
ret
vmwrite
movsl
push
fidivrl
setnp
dec
je
popa
pushf
inc
bound
jmp
repz
push
mov
mov
cmpsl
mov
lock
scas
lods
test
inc
cmp
or
xor
pop
sti
fisubrs
imul
add
dec
xor
mov
flds
je
sbb
adc
pop
pop
sub
ljmp
scas
jo
lret
ret
inc
jecxz
push
mov
or
into
cmp
movsb
add
mov
cmp
roll
or
nop
dec
pop
cli
inc
mov
push
mov
and
sub
fisubs
repz
xchg
lcall
xchg
pop
les
mov
xor
lds
int
scas
les
add
jmp
pop
fbld
sub
stos
test
pushf
fadd
add
or
and
daa
mov
push
je
shlb
adc
cmpsl
jg
repz
in
mov
outsb
fadds
jbe
movsb
push
les
sub
ret
outsl
adc
mov
inc
mov
push
push
xor
out
fdivl
xchg
dec
xchg
jecxz
loopne
lret
mov
adc
or
lock
repnz
in
das
mov
jle
int3
ss
out
adc
add
idivb
dec
icebp
inc
push
push
xchg
mov
ror
sub
adc
imul
jno
dec
mov
dec
shll
sbb
fwait
mov
cmp
inc
or
jge
or
je
xchg
es
test
aam
mov
dec
pop
mov
nopl
out
sbb
outsb
std
fidivrs
aas
jmp
or
jg,pt
shll
pop
loopne
int
enter
jmp
negl
lods
fistpll
sbbb
testl
repz
xorb
jo
pop
mov
fldt
mov
cmp
xchg
push
add
fildl
or
rorl
add
pop
int
lds
xor
push
sbb
jg
and
cmp
in
sbb
push
aaa
scas
jge
movsl
imul
pop
push
dec
xchg
cmp
cmc
mov
outsb
mov
mov
inc
test
shlb
ret
lret
mov
arpl
xchg
repz
push
mov
cli
jae
jge
ja
pusha
daa
mov
std
ja,pt
ds
popa
jo
aas
stos
and
out
mov
jae
cmpsb
push
or
fsub
or
push
out
push
sub
jle
js
jo
loopne
adc
lods
cltd
sti
sub
sbb
xchg
push
xchg
pop
das
sub
sbb
cmp
or
loop
jnp
inc
int
stc
mov
inc
scas
int3
js
dec
or
repnz
xchg
cmp
adc
insb
in
cwtl
mov
andl
shlb
cmp
push
sub
fidivs
jae
outsb
jb
xorb
cli
movsl
out
out
xlat
push
and
ret
xor
cmpsl
rol
mov
inc
lahf
dec
ret
xor
popa
pushf
cld
out
hlt
or
mov
pop
lret
in
mov
dec
divl
mov
enter
jle
or
jmp
fwait
xchg
mov
inc
mov
mov
mov
lods
imul
lcall
or
push
add
push
ds
sahf
push
shlb
les
daa
bound
icebp
mov
mov
push
push
jne
movsb
xchg
adc
fmull
inc
jne
mov
xor
sahf
inc
shr
jno
cmp
insb
and
pop
mov
lods
mov
cmp
lahf
inc
test
inc
jae
pop
daa
push
not
lret
push
push
ja
inc
adc
inc
andb
mov
push
push
int3
rcr
ljmp
movsb
xor
or
icebp
mov
js
sbb
imul
sbb
and
ss
pop
mov
clc
sbb
pusha
stos
push
scas
mov
pop
daa
mov
aas
outsb
pop
jno
jno
or
pop
push
jno
test
movsl
adc
and
cmp
xor
or
mov
add
les
jmp
dec
mov
or
xlat
das
clc
sti
out
sub
arpl
add
rclb
sub
orb
pop
or
leave
in
in
scas
mov
mov
fs
xacquire
scas
rcrb
mov
sub
aam
mov
jp
js
sbb
cld
decl
mov
mov
outsb
mov
jae
cmp
dec
push
and
insl
adc
sub
inc
sbb
shll
push
fcoms
fs
xor
fisubrs
mov
push
inc
clc
out
push
ret
in
ljmp
daa
pop
pop
out
push
cmp
subl
cmp
lcall
dec
cmp
leave
stc
dec
pop
cmp
mov
repz
xor
pop
cmp
test
mov
stos
mov
sti
sbb
mov
call
fadds
jne
call
imul
addr16
push
sub
test
inc
in
and
or
out
push
or
or
cmp
popf
adc
or
ficomps
lods
cmp
mov
pop
jmp
frstor
imul
sub
sub
sub
es
xchg
push
pushf
fbstp
je
or
adc
cmp
adc
stc
cmp
mov
sahf
les
adc
popa
clc
mov
pop
popf
xor
ljmp
and
mov
scas
push
pop
ffreep
mov
xlat
rorb
stc
dec
icebp
xchg
enter
icebp
sbb
jbe
push
adc
es
les
lods
or
insl
out
scas
daa
jnp
adc
ret
test
push
or
leave
loopne
pop
mov
loopne
rcll
mov
mov
jl
mov
jb
addr16
xchg
arpl
inc
std
movsb
addr16
xchg
cwtl
roll
test
mov
jmp
out
and
jle
push
leave
clc
mov
addr16
and
push
pop
sbbl
cmpsb
insb
xchg
jbe
sbb
adc
incb
mov
pop
mov
rcr
andb
or
push
cmp
jmp
push
cwtl
loope
imul
not
and
addr16
pusha
or
jns
aas
xchg
cmp
lret
pop
dec
negb
dec
pop
mov
mov
or
adc
xor
jb
sahf
int
es
xor
push
aaa
rcll
test
pop
ret
lea
js
push
pusha
mov
idivl
in
lods
lcall
aaa
enter
cmp
lock
pop
mov
and
xchg
pop
lret
sbb
dec
cltd
in
icebp
push
xchg
pop
lret
ja
cmp
mov
insl
mov
in
in
lods
cmpb
jp
out
mov
sarl
outsb
mov
push
pop
pop
cwtl
add
out
rorl
movsl
cmp
mov
imul
mov
mov
jne
cmpsb
aad
sbb
into
jo
push
cmc
lcall
outsb
jb
rclb
enter
loope
sti
cli
mov
pop
sub
ds
stos
and
je
cmpsb
xor
stos
pop
ret
inc
cmp
add
mov
ja
cmp
scas
dec
imul
adc
test
and
add
add
sub
cs
xor
jg
arpl
icebp
addr16
popf
sub
aas
push
or
out
add
mov
mov
jmp
or
cld
xchg
sbb
jmp
into
mov
in
in
and
es
aam
outsb
jo
jb
or
mov
add
xchg
mov
pop
mov
dec
add
insb
dec
add
lods
pop
push
adc
and
pop
stc
int
push
inc
mov
out
pop
rcll
cmpsl
add
xchg
imul
ret
in
notl
cmpsl
leave
jnp
imul
jne
sub
enter
repnz
sbb
sar
pop
in
out
outsl
fs
mov
mov
cmp
faddl
push
outsb
xchg
bound
sbb
push
and
ret
mov
add
pusha
ds
frstor
xchg
cmp
mov
pop
into
or
ja
mov
mov
lret
shll
out
pop
cltd
std
cmp
pop
pop
mov
and
add
jge
scas
clc
xor
gs
cmp
and
insb
xchg
sub
shl
sbb
jo
std
xor
pop
test
cli
jne
adc
xchg
sub
push
movsl
insb
adc
mov
sub
clc
cmp
xchg
sbb
or
cmc
jmp
jno
jmp
icebp
test
inc
clc
sbb
dec
mov
sub
test
dec
mov
or
insl
clc
enter
and
dec
into
aas
sub
pop
repz
xchg
hlt
mov
lahf
stos
cmpsb
push
lahf
daa
loop
out
outsb
push
push
lea
fildll
fldenv
sub
xchg
push
mov
movsb
mov
jbe
bound
imul
stos
xor
inc
mov
or
xchg
cmp
out
adc
rolb
add
push
adc
sub
fcomip
xchg
test
scas
lret
xchg
cltd
mov
rclb
mov
and
inc
cmc
xor
inc
shrl
inc
sub
bound
mov
out
gs
add
lds
push
fcompl
fiadds
insl
pop
push
dec
jge
adc
xchg
push
popf
cmc
inc
movsb
leave
fadd
push
scas
sbb
daa
daa
shrl
iret
scas
pop
and
mov
popa
mov
jns
inc
mov
xchg
push
aam
dec
mov
iret
pop
enter
and
fdivs
je
repnz
push
pop
in
sbb
sub
and
mov
cld
push
cwtl
sbbb
enter
rorl
sub
setp
dec
mov
rorb
jae
pop
inc
in
in
mov
or
mov
cmp
fisubs
sub
adc
and
repnz
or
cmp
xchg
mov
loope
lret
mov
xor
or
popf
ficompl
iret
out
xchg
sub
adc
push
leave
xor
sbb
jne
lods
loopne
dec
jo
mov
shlb
andl
mov
xchg
outsb
mov
and
dec
mov
pop
sbb
test
movsb
sub
daa
ds
xor
pop
mov
xor
jg
xchg
ss
mov
xchg
movsl
pop
addr16
jmp
sti
xor
fildl
rcrb
roll
mov
leave
notb
pop
int
lods
aam
jo
lds
adc
cli
adc
or
cltd
ja
faddl
and
jbe
ss
cmpsl
mov
test
pop
push
sbb
dec
dec
pop
lret
add
lods
enter
pop
push
adc
and
xchg
pop
aad
add
aad
xor
fwait
mov
scas
adc
and
lcall
in
sub
in
add
arpl
cmp
xchg
dec
pushf
std
out
add
jnp
or
xchg
lea
movsl
inc
loop
mov
push
adc
sbb
loope
mov
xor
xor
into
loope
jmp
jle
aas
add
jg
add
adc
enter
repnz
js
cwtl
out
fcoml
push
jnp
jecxz
inc
shlb
sub
adc
out
cmp
pop
dec
add
or
fsts
aad
push
and
xchg
push
inc
push
add
xor
call
lcall
sbb
faddp
pop
enter
ficoml
xlat
jmp
adc
sbbb
sahf
scas
out
jne
insb
xor
fstps
fwait
aaa
lock
sar
addr16
jno
and
jno
push
cltd
pop
in
jp
cmc
mov
dec
lcall
lock
insl
out
or
lods
insb
fiadds
mov
movsl
mull
adc
cmp
and
sbb
inc
mov
cmc
lcall
cmp
mov
in
push
jb
add
adc
out
js
jp
aas
pop
push
xor
cmpsl
xor
fsubl
in
jne
push
fstpl
sub
je
notb
pop
inc
cmp
pop
ret
in
mov
icebp
addb
into
jnp
out
shrb
stos
orb
sub
xor
ja
les
mov
stos
sub
sbb
xchg
sbb
mov
and
repnz
outsb
xor
cld
xchg
cmp
imul
cmp
mov
cmpsb
iret
push
mov
loope
mov
in
mov
xchg
sbb
add
cwtl
dec
lea
rorb
outsl
push
dec
jno
cmp
cmc
xor
mov
jmp
dec
cmp
cld
das
js
out
inc
push
mov
inc
out
push
mov
leave
jmp
mov
add
and
jno
sub
popa
adc
mov
cmp
clc
fdivrs
jge
stc
out
popf
mov
sahf
mov
hlt
jno
cld
sbb
insl
mov
dec
adc
in
sbb
test
jp
jg
pop
mov
adc
fnsave
aaa
and
mov
daa
pop
movsb
jne
jo
lock
sub
movsb
out
es
addr16
adc
std
pop
js
cmc
cli
dec
lods
orb
aas
dec
int3
mov
insl
dec
pop
push
mov
xchg
addr16
jns
nopl
imul
xchg
xchg
mov
ja
mov
bnd
std
stos
mov
xor
aad
adc
push
cmc
sub
pop
ja
xor
jb
shr
add
adc
add
sub
loopne
mov
and
clc
mov
push
jo
shrb
scas
jne
rclb
cmc
adc
cld
not
push
sub
sbb
pop
in
inc
popa
outsl
cwtl
ds
jns
mov
push
lods
rcrl
cltd
pop
add
jns
aas
xchg
jne
popa
mov
int3
jo
fcomps
pop
stc
in
lods
cmp
add
pop
dec
iret
outsb
push
divl
stc
sbb
sbb
push
cmp
or
shrb
jo
es
adc
in
das
add
movsl
mov
jl
sbb
cmp
movsb
movsl
mov
jae
dec
xor
adc
or
mov
pusha
in
int
or
push
add
mov
push
xchg
cmc
xchg
aam
pop
jae
xorl
xor
or
rorl
cwtl
xor
mov
xor
test
or
jle
lret
pop
fsubs
std
gs
xor
push
dec
push
or
stos
xchg
lcall
mov
add
mov
cmc
popf
xchg
push
arpl
push
fdivl
ret
rclb
push
push
sub
cmp
sub
fldt
mov
push
leave
ljmp
adc
mov
mov
aas
adc
sti
jp
clc
rorb
movsl
out
test
inc
inc
ret
repnz
filds
imul
shll
popa
lret
fdivl
push
pop
testb
jne
xlat
test
rcrl
push
mov
fwait
mull
cs
and
aas
push
hlt
fdivrl
add
sbbl
cmpsl
fnstsw
xlat
or
adc
out
push
ss
insl
lahf
repnz
mov
jo
loope
jmp
jo
fxch
adc
in
fnstcw
jns
push
xrelease
cwtl
mov
mov
cmp
cmp
enter
and
repnz
pop
mov
fdivrs
fimull
das
mov
ja
loope
hlt
sub
sti
rol
mov
in
push
cltd
sarb
dec
push
push
out
inc
negl
out
jg
mov
mov
testb
pop
push
push
std
pop
test
or
jl
pop
repnz
jns
repnz
lods
mov
decl
ret
rclb
push
fwait
mov
push
or
dec
es
sarl
fistpl
stos
int3
mov
aam
xor
mov
lret
loope
mov
cmpsl
pcmpeqw
int3
je
cltd
or
mov
xlat
test
scas
pop
cld
lcall
shrl
pop
and
mov
ds
lret
lahf
lods
popf
jno
paddsb
push
stc
loop
arpl
push
pushf
sub
std
cld
jnp
fdivp
push
rclb
lods
out
orb
out
sbb
adc
leave
cmp
cmp
inc
xchg
sbb
idivb
jnp
out
mov
iret
xchg
jecxz
aam
data16
bound
add
lcall
adc
xor
xorb
cltd
pop
cmpl
dec
or
pop
lcall
or
aaa
mov
and
rsqrtps
cmp
cmpsb
lds
outsb
cmp
scas
jmp
sarl
cmpsl
mov
stos
fnstenv
pop
clc
push
pop
addr16
in
test
stc
jb
repz
adc
pushf
hlt
mov
outsl
xor
out
fdivr
xor
sbb
in
inc
lods
mov
sub
pop
imul
mov
cmp
jmp
inc
mov
daa
sub
aad
jge
push
adc
dec
mov
loope
cwtl
and
jle
inc
push
stos
jne
mov
testb
mov
popf
lret
xor
pop
jnp
push
imul
clc
rolb
in
mov
outsb
jo
enter
test
testl
mov
mov
sub
xor
fnsave
jg
mov
test
cmp
add
shl
enter
pop
xlat
repnz
sub
mov
hlt
dec
mov
jge
and
xor
add
ljmp
ret
arpl
out
enter
inc
mov
xor
mov
mull
das
adc
pop
xchg
sbb
jb
movsl
add
cld
int
lret
dec
inc
das
les
je
mov
daa
push
icebp
adc
insb
mov
std
mov
inc
mov
push
lock
sub
test
int
cwtl
jl
sbb
dec
aam
icebp
mov
daa
or
jns
inc
int
jle
dec
adc
es
push
pusha
icebp
cltd
fisubl
dec
bound
jge
add
xor
data16
xor
out
fidivl
jns
stos
pop
cmpsb
idivb
js
sbb
push
out
push
adc
aas
cmp
inc
ja
imul
rclb
stc
and
cmpb
insl
inc
das
dec
les
aas
cwtl
mov
pop
dec
mulps
lcall
xchg
sahf
les
sub
cmp
mov
lods
sub
in
lock
dec
pop
cmp
pop
sub
ds
ret
in
out
add
mov
push
fisubrl
in
cwtl
sub
mov
lret
cmp
jno
cmpsb
ret
stos
mov
add
push
mov
mov
cmpsb
fwait
mov
out
test
jecxz
xchg
fs
scas
mov
mov
addr16
mov
lret
jne
sbb
fisttps
jmp
iret
or
add
push
or
sub
mov
ds
enter
dec
adc
stos
add
clc
or
mov
or
sbb
mov
dec
hlt
xchg
xor
arpl
sub
mov
lods
jno
sbb
and
repz
jne
je
xchg
xor
push
test
add
hlt
add
inc
mov
cld
jmp
cmp
push
mov
lods
push
test
inc
inc
cmp
fidivrs
lcall
cmp
sub
push
js
out
int3
sub
outsb
mov
xchg
pop
shll
lcall
cmp
adc
jno
mov
hlt
add
push
jne
sub
shll
les
push
add
adc
das
int3
dec
pop
mov
mov
and
dec
push
scas
dec
jbe
adc
mov
pusha
rorb
stos
mov
sub
xor
push
faddl
push
mov
hlt
add
xor
loop
jo
movsl
outsl
jb
adc
xlat
pop
cmpsl
flds
mov
pop
xchg
out
xchg
lahf
push
adc
call
sti
in
lds
fcoml
xchg
dec
lock
cs
aad
sbb
xchg
cld
jnp
test
test
cmp
xchg
mov
mov
cmp
push
xor
lods
or
pusha
add
insb
mov
sarl
sub
and
insl
adc
jg
adc
popf
sbb
dec
fs
aam
nop
stos
aad
dec
or
pusha
xchg
lea
popf
jae
bound
leave
fldenv
emms
xchg
xor
xor
add
pop
or
fmuls
ss
icebp
jmp
dec
push
mov
mov
xor
pop
mov
inc
std
das
clc
movsb
aaa
outsl
push
cmp
in
cmp
icebp
push
xor
fs
push
sub
fchs
test
popf
adc
add
mov
mov
ja
mov
lea
xchg
sub
jbe
xchg
ss
jne
mov
int3
adc
sbb
fdivrs
mov
stos
cmpsl
jo
int3
cmpsl
add
mov
fs
outsl
inc
dec
outsb
push
lods
cmp
inc
mov
lea
hlt
dec
fcmovnb
sub
int3
call
vmovntps
ret
dec
jno
ficomps
or
xor
xor
lret
or
pop
jbe
dec
cli
arpl
xchg
jnp
fisttps
sbb
xor
mov
mov
pop
lods
shrl
jbe
popa
adc
dec
pop
dec
in
mov
aas
gs
mov
das
adc
jnp
cmpsb
inc
xor
jl
fiadds
pop
jbe
cld
outsb
jne
mov
cmp
in
test
daa
sub
rorl
jnp
xchg
mov
sub
ret
xchg
out
add
mov
mov
enter
xchg
push
mov
jmp
mov
add
jle
push
jge
push
addb
mov
adc
or
xor
cmpsl
lret
ret
cmp
sahf
adc
cltd
and
shrd
in
imul
cmpsl
insl
push
jg
mov
testl
pop
mov
xchg
shrb
mov
mov
lea
push
test
or
adc
aaa
or
nop
jo
mov
lret
inc
inc
sub
xchg
rcll
sahf
mov
sbb
ret
xor
pop
jmp
pop
inc
sbb
push
xor
nop
ljmp
sub
sbb
add
cmp
ror
out
add
in
fidivs
sbb
xchg
clc
push
pushf
xchg
sbb
or
mov
test
lods
out
cmp
flds
cmp
cmp
xchg
nop
xor
sub
insl
cmp
dec
push
jns
scas
jmp
jle
sub
out
sub
jmp
inc
mov
jno
shlb
cmpsl
and
xor
adc
notb
or
cmp
cmpb
cmc
add
movsl
hlt
fnstsw
aam
and
mov
repnz
dec
push
fstp
inc
aas
stos
fidivl
inc
sub
loope
into
mov
lods
ficompl
imul
fsts
cmp
ja
ljmp
fstps
mov
cld
scas
jmp
lods
notb
mov
loopne
cmp
and
fcompl
subl
mov
cmp
out
mov
sbb
xlat
out
insb
mov
fsts
sti
sbb
loopne
xchg
std
jbe
enter
ror
sub
arpl
repnz
insl
mov
stos
adc
mov
add
popf
push
sbb
push
jno
mov
cmp
faddl
inc
test
mov
out
fmull
jmp
call
dec
jbe
mov
xchg
fsubrl
jge
jne
adc
into
bnd
push
fistpl
mov
add
dec
fisubs
std
push
andl
push
or
lcall
push
scas
shll
les
sub
pop
cmp
cmp
cmp
iret
dec
cmpsb
loop
mov
scas
cli
jecxz
or
shlb
inc
inc
inc
mov
dec
mov
sbb
and
stos
aas
popa
adc
dec
cli
add
out
pushf
push
in
cmp
outsb
shrl
loop
cli
push
and
mov
aam
xor
or
cld
cld
pop
dec
inc
push
dec
or
ljmp
or
push
fs
push
inc
cltd
mov
xchg
xchg
sbb
mov
mov
push
addb
out
mov
jae
and
scas
jmp
cmp
cld
icebp
dec
mov
cmp
or
pop
jo
dec
sbb
mov
lcall
shll
xchg
les
mov
jbe
pushf
add
clc
or
fs
aas
pop
cmp
add
or
sarb
test
or
clc
adc
leave
jno
jmp
call
cmp
cltd
mov
inc
insl
mov
adc
leave
inc
xchg
scas
lahf
bound
test
idivl
movd
outsl
jne
jnp
cltd
mov
scas
fsts
fimull
xchg
cmc
sbb
add
push
mov
push
push
shr
jl
das
mov
adcb
mov
cmp
das
inc
cmp
loopne
call
lcall
push
out
push
jmp
mov
ret
jmp
sbb
mov
test
mov
test
add
and
xchg
pusha
cmpsl
test
xchg
std
mov
push
sbb
scas
in
fstpt
int3
xchg
cmpsb
mov
adc
xchg
inc
int
mov
dec
movsb
xor
push
insl
fcomps
push
dec
dec
insl
mov
orb
ret
stc
loopne
jmp
fcoms
xor
add
iret
sarb
xchg
aam
scas
idiv
xor
push
popa
in
jno
fwait
int3
cmc
add
add
add
subl
mov
ja
std
sbb
mov
adcl
mov
cs
stos
jmp
loop
and
mov
pop
and
fadds
pop
adc
cs
popf
inc
push
nop
dec
and
sub
jmp
in
mov
loopne
add
cmp
inc
and
loope
fistl
inc
xchg
leave
cmp
lock
mov
mov
xchg
mov
bnd
bound
sub
or
sbb
inc
adc
cmp
dec
and
and
imul
pop
mov
out
movsb
sub
push
mov
pop
inc
push
mov
add
cmp
rcrb
or
fnstenv
sbb
insl
cld
adc
pusha
inc
mov
data16
jecxz
mov
and
sub
xlat
ss
sbb
dec
in
ss
cmp
xchg
dec
mov
cs
movsb
jmp
loop
xor
mov
addr16
mov
adc
cld
in
xchg
test
insl
stos
and
sbbb
jo
xlat
jno
adc
fs
pop
mov
mov
jmp
sbb
lret
xchg
sub
mov
ja
orb
mov
sbb
pop
adc
dec
xor
inc
shl
or
out
xor
dec
xor
push
mov
scas
sbb
lods
cs
jmp
faddl
sub
push
leave
and
adc
mov
loopne
int
stos
stos
cmp
jne
scas
and
in
pushf
sub
imul
xchg
loopne
sbb
xchg
in
mov
adc
out
fcompl
mov
fdivrs
cmpb
lea
mov
jne
pushf
fmulp
and
cmp
inc
cmpsl
and
push
jo
aas
pusha
lods
bound
cmp
pop
jl
jae
cs
xchg
aad
and
sub
sbb
test
mov
popl
adc
add
jge
nop
popa
loope
jne
push
out
out
or
jne
aam
pop
mov
sub
dec
push
xchg
xor
xchg
jg
negl
add
xor
mov
mov
push
jo
nop
cltd
jl
adc
es
jl
imul
test
insl
adc
dec
sti
xorl
nop
mov
imul
inc
nop
add
push
mov
mull
xor
sbb
enter
hlt
bound
xchg
sarb
or
pusha
outsb
push
mov
mov
inc
adc
fdivl
js
inc
push
adc
out
loopne
scas
out
push
shrb
into
aas
arpl
sti
div
mov
aad
sbb
jne
jns
add
pusha
les
or
cmpsl
ret
insl
subl
xor
fwait
mov
ljmp
shrl
or
mov
jl
cmp
lret
test
adc
mov
popa
push
std
into
or
je
repz
or
sub
mov
popf
xor
sub
dec
xor
in
mov
ret
inc
sbb
mov
daa
js
shlb
mov
testb
mov
mov
test
aad
rol
ret
mov
and
cmp
and
jns
loop
sbb
pusha
movsl
and
xlat
stc
shlb
and
lea
lcall
sub
out
insl
in
ret
xor
iret
cmp
out
mov
mov
enter
nop
ud2
sahf
cmp
cmp
ss
push
imul
dec
push
scas
cli
mov
xor
maskmovq
inc
sbb
mov
adc
subb
and
mov
test
aaa
pop
mov
and
pop
push
add
sub
push
inc
push
xor
sub
pop
mov
lods
mov
test
mov
mov
sub
adc
add
pop
int
or
call
sub
addl
enter
stos
jns
add
mov
push
jecxz
stos
mov
stc
push
xchg
andb
push
xchg
shr
xor
fucomip
aaa
adcl
sahf
pop
shr
and
mov
out
xchg
and
push
fldl
pop
xor
add
pushf
cmpsl
xor
cmpsb
fisubs
enter
dec
aas
sbb
pop
mov
xchg
and
xor
cli
ss
jmp
fsts
ret
cmp
sub
vdivss
lods
or
mov
inc
cmp
xor
pop
insl
mov
mov
mov
daa
jns
xor
push
sub
xchg
cmp
cmp
mov
jge
into
xor
ljmp
call
scas
adcb
pop
xor
inc
xor
pop
add
and
out
addb
jno
sub
pop
jo
fcomp
icebp
adc
mov
pop
mov
enter
jp
loop
or
in
add
or
push
lcall
add
sub
scas
stc
hlt
sbb
pop
and
pop
clc
jp
mov
ja
add
mov
mov
ds
jecxz
or
jecxz
push
push
rcrb
push
fsubrs
icebp
lret
push
movsb
sbb
adc
dec
adc
push
js
aas
insb
out
ret
or
cmp
aam
cmp
lds
imul
outsl
scas
mov
pop
cwtl
jno
repnz
dec
scas
test
jae
testl
movsb
in
sub
add
lds
test
push
mov
cli
add
mov
pop
jb
adc
pop
icebp
bound
inc
push
imul
push
insl
cmpsl
add
mov
clc
rcr
mov
stos
clc
lret
ja
pop
lods
mov
ds
sbb
ds
in
sub
mov
push
adc
push
dec
loop
inc
sbb
push
push
push
cmp
add
push
rol
jno
in
inc
push
xor
in
inc
pop
lods
adcl
mov
lods
pop
adc
test
inc
lcall
lods
test
dec
mov
and
xchg
addr16
stos
aas
pop
sbb
je
lods
mov
pop
sbb
mov
rclb
mov
js
fldt
fnsave
xor
jg
sti
lret
xorb
push
pusha
push
add
add
pop
imul
and
clc
mov
jl
mov
sbb
insl
mov
adc
mov
cmpsb
cmpsl
mov
jno
clc
test
adc
pop
ficomps
in
aad
inc
mov
imul
shlb
int3
das
scas
std
jno
jl
sti
pop
fs
mov
adc
imul
pop
add
lods
and
fcompl
pusha
and
pop
mov
xchg
cmpsb
test
and
loope
xchg
or
or
pop
js
in
nop
or
movsb
sbb
inc
and
xchg
inc
pop
jle
add
sbb
adc
shlb
xchg
push
jno
clc
cmpsl
mov
cld
stc
add
inc
sbb
flds
mov
es
push
pop
lock
and
ds
lea
mov
cmpsb
fimuls
xchg
stos
nop
loop
ds
aaa
mov
or
push
les
imul
sub
mov
imul
mov
or
fsub
jge
inc
repnz
push
mov
js
enter
sahf
push
lret
add
jl
mov
adc
mov
mov
push
push
stos
lods
and
add
push
out
or
in
push
jp
test
insb
jo
ficoml
sub
dec
cmp
mov
xor
mov
or
push
cwtl
inc
fidivl
mov
or
mov
cli
sbbb
cmp
adc
fwait
dec
push
gs
lods
movl
cmpsl
add
add
ds
cwtl
push
clc
pop
int3
push
mov
repnz
mov
into
sbb
hlt
addr16
rcr
xor
imul
test
jne
popl
add
stos
pop
movsl
fwait
imul
lea
push
push
fsubs
mov
xchg
mov
dec
inc
sahf
lods
xorb
add
cmc
dec
adc
ja
sti
idivb
jg
jae
xchg
mov
push
inc
cmpsl
stc
stos
shll
mov
or
sarl
outsb
fildll
mov
xor
rcr
fisubl
inc
insb
js
sub
adc
pop
push
inc
jbe
aas
adc
fdivr
xchg
roll
sarl
add
leave
adc
xor
mov
js
movsl
adc
gs
pop
in
sbb
repnz
cmp
pop
out
xlat
sub
mov
push
cltd
xor
rcl
push
adcl
jbe
push
add
mov
jp
cmpsl
stos
inc
hlt
sub
add
mov
push
sub
inc
xor
or
fiaddl
rcrl
mov
and
adc
adc
rorl
push
outsl
inc
jns
and
or
clc
ss
les
or
dec
adc
test
in
pop
test
rcrb
and
sub
mov
push
pop
push
jo
push
mov
insb
mov
xchg
jne
inc
mov
jne
dec
repz
cmp
fucomp
push
sub
outsl
call
mov
lcall
inc
dec
mov
ja
add
cmpsb
divb
push
mov
and
pop
out
xor
xor
jo
pop
mov
jne
mov
inc
and
lods
mov
fidivl
rorb
mov
lcall
out
rcl
ficoml
xchg
xorb
out
or
ss
in
and
push
push
int
adc
pushf
data16
aas
in
cmp
mov
mov
sti
subb
jno
push
lcall
push
pop
divl
jnp
fisubrl
std
sbb
pop
xchg
testb
pop
add
or
inc
inc
add
add
outsb
xchg
fwait
fs
cmc
mov
sbb
movsb
jle
mov
ficoml
rcl
lahf
jo,pt
pop
imul
ds
adc
xor
mov
mov
pop
jmp
xchg
dec
and
or
inc
xchg
xor
stc
mov
insl
je
mov
sbb
scas
stc
and
arpl
inc
addl
or
xlat
push
push
xchg
sub
dec
addr16
icebp
loope
mov
jg
push
push
test
sub
test
sarl
je
jmp
sub
sahf
rcll
xor
je
call
jne
aam
mov
xor
dec
adcl
cltd
test
pop
pop
push
and
fadd
jb
movsl
scas
dec
pop
mov
add
ds
add
mov
sti
sub
jo
mov
in
in
cli
in
mov
or
movsb
or
adc
or
cli
icebp
or
or
nop
mov
aam
in
mov
mov
lods
jg
and
int3
add
or
mov
push
daa
ret
sbb
mov
adc
std
and
inc
pop
push
shlb
cmp
fldcw
cltd
mov
popf
mov
mov
jae
mov
adc
mov
cmp
clc
xor
pop
les
test
addl
mov
inc
mov
sarb
mov
xchg
pop
jno
gs
sbb
mov
xchg
nop
sbb
ja
cmp
aas
ficompl
lcall
out
jb
enter
xor
cmp
ja
pushf
pop
push
repnz
hlt
push
mov
daa
lock
mov
aad
dec
push
jb
stos
push
jp
inc
adc
and
bound
rorl
ret
std
clc
xlat
mov
sub
mov
cli
es
push
xor
push
cmp
sub
and
mov
and
push
popf
dec
or
mov
shlb
pop
mov
mov
fildl
notb
and
rorb
mov
mov
mov
sbb
mov
inc
fs
cmpsb
push
xor
subb
gs
and
jno
cmp
or
jge
jecxz
adc
xchg
addb
test
sub
out
fmull
adcb
xor
adc
jg
pop
mov
cli
inc
push
arpl
add
mov
call
clc
rolb
add
into
fs
push
or
and
inc
std
push
pop
aaa
adc
xor
lock
aad
pushf
call
js
lods
cmpsb
lahf
sbb
xchg
out
addr16
int
jl
push
lods
mov
cli
xor
mov
out
into
out
adc
data16
mov
pusha
testb
aas
daa
add
repnz
jne
outsl
stos
xchg
mov
daa
fistps
jbe
ficomps
ret
add
sub
and
mov
into
xchg
push
lods
xchg
pop
add
push
scas
mov
testl
gs
pop
push
add
or
out
xchg
adc
aad
test
pop
insl
xor
ljmp
movb
cmc
addr16
je
xor
outsl
jge
mov
or
ret
inc
mov
push
cmp
repnz
scas
int
loopne
jnp
dec
out
mov
sub
cltd
rep
mov
adc
xchg
ds
icebp
adc
adc
sbb
mov
mov
cmp
inc
jmp
or
fnsave
inc
lret
jg
adc
sbb
int
shll
cmpb
movl
mov
sub
push
pop
mov
xor
das
hlt
add
ficomps
jns
add
mov
popf
xchg
sahf
cs
in
sahf
nop
cmp
gs
stc
inc
rorl
shrl
std
cs
mov
dec
stc
push
loop
sbb
and
adc
aas
cmp
pop
inc
sub
fcomip
push
sti
imul
ss
mov
scas
xor
xor
dec
jl
bnd
jns
or
sub
in
pop
cmp
dec
rcrl
sub
lret
pop
and
sarl
dec
call
xchg
inc
mov
pop
jno
push
ret
ds
pop
sbb
icebp
sub
pop
mov
cmp
ror
jp
push
aaa
xchg
fwait
pushf
ds
lcall
jp
pop
orb
sbb
add
xlat
loope
xor
fcom
jge
shll
mov
bound
jno,pn
jl
jnp
icebp
jne
push
lret
fwait
cmpsb
dec
test
notb
cmp
mov
mov
add
dec
mov
shlb
push
rclb
fwait
sub
sahf
jbe
mov
and
das
sbb
xchg
mov
xchg
jecxz
jb
jbe
jmp
loop
mov
stos
sbb
test
pop
and
jbe
xchg
cwtl
ficompl
pop
data16
xchg
mov
dec
xchg
push
es
repnz
sub
and
cmpsb
add
ret
jns
les
pop
sbb
cmpsl
pop
mov
adc
mov
ds
pop
xor
ss
popa
fsubp
out
pop
dec
mov
pushf
jmp
mov
sbb
pop
inc
insb
inc
dec
add
cmpl
lret
lret
and
out
cmc
sub
xchg
aam
pop
mov
xchg
fwait
sub
mov
mov
push
sbb
pop
iret
push
xor
cmp
jbe
sbb
push
inc
mov
ret
int
jl
enter
stos
in
pop
loop
add
xor
mov
call
stc
dec
mov
xchg
sub
mov
mov
sbb
arpl
je
dec
sub
xlat
pop
push
sub
out
orl
adc
ljmp
subl
ret
cltd
push
sub
les
push
xchg
je
sub
and
sbb
pop
push
and
sti
es
jno
je
sbbb
nop
lods
lea
testl
pop
and
pop
sti
into
adc
aaa
sahf
pop
xor
nop
xor
out
repnz
scas
pop
fbstp
inc
cmpsl
inc
jp,pn
fmulp
fs
je
jne
cs
fistps
mov
or
cmp
iret
xchg
mov
sub
mov
dec
rcrl
pop
in
push
xor
mov
lahf
sbb
jo
jmp
scas
add
push
xchg
sahf
jo
out
mov
xlat
jo
lcall
xchg
iret
aad
inc
add
ds
xchg
mov
push
lret
shr
add
pop
and
mov
cwtl
push
pop
jg
jno
je
push
push
in
mov
pop
dec
jb
push
cmp
test
fstp
pop
bound
cwtl
int
jno
icebp
mov
adc
ja
pushf
xchg
lock
std
jno
adc
adc
stc
push
sbb
rcrb
mov
or
mov
scas
sbb
jb
push
cmp
jae
add
push
nop
nop
add
pusha
jno
xchg
mov
jno
jbe
dec
jp
fisubs
jns
jmp
sbb
sbb
adcw
xchg
fistps
jb
loopne
rorb
sbb
dec
and
pusha
cmc
sbbb
dec
sub
and
int
je
mov
cltd
shll
out
pop
add
adc
jg
std
bound
mov
mov
sti
aas
cmpsl
pop
sub
repz
gs
jl
xchg
ret
pop
stc
and
sbb
fildll
xchg
jp
mov
andb
scas
outsl
xchg
cli
pusha
cmc
or
mov
dec
push
dec
push
fcmovb
js
fwait
add
aam
pop
daa
repz
ljmp
lea
das
pushf
mov
fistpll
xchg
dec
mov
in
xor
cmpsb
repz
dec
inc
sub
cltd
gs
stos
pushf
mov
iret
mov
cld
iret
push
and
and
rolb
jp
out
jp
mov
ss
inc
cmp
fcmovnu
iret
loopne
cmp
add
hlt
mov
rcl
push
and
sbb
pop
ret
and
dec
and
loope
outsl
or
sarb
pop
sub
adc
jo
sbb
xor
stos
test
sbb
or
movsl
js
ret
pop
adc
arpl
cmpsl
popw
mov
push
subl
loop
clc
ljmp
aaa
inc
mov
adc
inc
shlb
sbbb
stos
negb
inc
outsl
inc
xlat
mov
fwait
mov
fwait
and
outsb
xchg
cmp
push
add
pusha
dec
leave
clc
sub
daa
in
dec
mov
pop
pop
xchg
inc
imul
mov
jge
dec
in
push
push
xchg
xor
inc
xor
or
add
outsl
sbb
add
subb
icebp
into
and
adc
push
jbe
sbb
jbe
inc
inc
in
call
inc
and
add
movsb
adc
mov
mov
xor
out
xor
insb
imul
inc
mov
cmp
mov
sub
popa
inc
sbb
notl
mov
sbb
push
aad
in
push
rcrb
rcrb
shll
cli
cmp
bound
loopne
sbb
jg
mov
gs
mov
cmpsl
inc
push
jmp
stos
sbb
aam
scas
enter
pop
add
mov
dec
cmpsl
pop
lret
dec
adc
push
jmp
mov
adc
fisttpll
loopne
in
loope
cmp
jnp
adc
jo
mov
inc
xor
and
xchg
sub
or
mov
jno
dec
and
sbb
iret
addr16
and
lahf
mov
mov
scas
mov
inc
js
ds
push
jge
dec
sbb
data16
imul
mov
push
dec
jg
sub
dec
inc
jl
xchg
mov
cmp
shll
jp
inc
hlt
testb
push
jg
sbb
rolb
fsubs
hlt
or
ret
repnz
dec
ljmp
push
pop
pop
insb
aam
mov
and
add
xchg
scas
jle
movsl
in
cmp
push
push
inc
jo
jae
mov
test
or
dec
mov
inc
pop
mov
aam
jno
orl
test
and
in
pop
aaa
inc
in
nop
xor
iret
jbe
sub
in
idivl
fadd
rolb
into
cmp
xchg
or
jle
mov
in
fucom
lret
cmp
mov
arpl
shl
mov
imul
xor
xor
loopne
incb
and
xchg
cmc
add
repz
dec
xor
clc
enter
push
iret
adc
ret
cltd
sub
enter
inc
lds
and
stos
dec
xchg
or
ss
test
push
ja
in
jge
ss
push
lds
add
movsl
adc
mov
sahf
ret
pop
test
add
and
xchg
icebp
pop
pop
mov
clc
xor
inc
jae
dec
inc
movsb
loope
push
in
pushf
shrl
mov
icebp
test
push
xor
add
ljmp
je
das
es
in
jae
cmpsb
test
dec
in
xor
sub
das
rclb
pop
mov
popf
ja
xor
pop
adc
in
addl
in
call
loope
and
or
pop
jle
bnd
fsub
cmp
icebp
addl
pop
fadds
or
cwtl
loop
sub
xor
jg
jge
push
mov
das
push
sbb
lret
pop
jle
inc
cmp
or
mov
pop
pop
jl
dec
xor
jns
mov
xor
decb
adc
push
xor
aaa
sub
cmovle
push
push
frstor
inc
mov
es
xchg
repnz
mov
fdivrl
icebp
dec
test
rolb
iret
je
lcall
push
pop
or
inc
xor
mov
xorb
jbe
icebp
sbb
cmp
mov
aam
cld
scas
inc
sahf
mov
outsl
sub
icebp
add
pusha
cwtl
daa
arpl
sbb
or
mov
insl
xchg
mov
mov
nop
mov
sarb
fsubl
in
jo
jg
into
pop
stos
cmpsb
popa
dec
or
aam
add
inc
in
js
movsl
es
push
out
sub
stos
sarl
xorl
clc
mov
sub
aas
pop
sbb
mov
daa
xor
xor
mov
into
lea
out
es
sub
or
mov
int3
sub
loopne
pop
ds
mov
jbe
xchg
adc
push
data16
push
stc
xchg
inc
mov
mov
mov
inc
push
leave
call
int3
sbb
out
push
das
and
fs
daa
push
or
jge
jo
hlt
jecxz
dec
mov
lea
cmp
cmp
cld
inc
xorb
cld
adc
mov
push
je
aam
mov
out
int
jbe
jge
jae
lcall
adc
movsb
lods
js
mov
outsb
sub
pop
or
mov
xor
or
pop
fwait
pusha
dec
lods
stos
pop
pop
lret
pusha
ds
cmc
repnz
fwait
inc
loopne
les
fcoms
aad
jp
leave
mov
orl
mov
adc
shlb
testb
in
popf
mov
mov
fs
xchg
pop
loope
pop
xchg
ficoml
cli
jnp
test
frstor
lret
xchg
dec
insl
mov
movsb
sub
imul
ljmp
lea
xchg
jno
fdivrs
into
inc
jp
idivb
mov
leave
mov
pop
sbb
lcall
inc
int
and
ret
sbb
rcll
test
push
mov
xor
push
shlb
sub
cmpsb
sarb
mov
adc
into
call
xchg
mov
imul
adc
insl
jl
movsl
pop
arpl
dec
jle
pop
out
aas
jbe
into
xor
pop
test
aas
cwtl
mov
in
pop
shll
sub
in
jle
adc
xchg
dec
mov
ffreep
push
lods
add
stos
js
adcb
cltd
add
cmc
sti
adc
or
inc
orl
stos
decb
punpckhbw
fdivrl
fstpl
fdivs
mov
stos
rorl
push
outsb
flds
jmp
ret
lret
cmp
jae
ret
stos
out
push
sub
fs
aaa
loop
cli
insb
fdivrl
pop
mov
lea
push
cmp
xlat
mov
adc
fstl
inc
mov
loope
jns
into
pusha
jecxz
lret
hlt
add
adc
pop
dec
cmp
xchg
aas
mov
xchg
dec
ret
stos
xchg
cltd
jae
and
pushl
sbb
push
mov
add
loop
mull
mov
cltd
xchg
xor
xchg
aaa
sti
jp
jns
dec
sub
stos
push
lock
pop
test
mov
cmp
adc
lods
push
add
dec
ljmp
lcall
outsb
sbb
sub
dec
pusha
mov
stos
cmp
lods
add
test
and
mov
cmp
jns
enter
sbb
ficomps
or
mov
ret
imul
ret
and
fbld
rclb
hlt
cmc
push
push
rcrb
or
pop
pop
fstl
push
push
lret
jno
fistpll
cs
mov
lods
movsb
cmp
push
sbb
fdivp
adc
add
xchg
cli
sbb
shlb
cmp
std
sub
xchg
mov
xlat
inc
sbb
xor
pusha
arpl
mov
dec
out
mov
aaa
hlt
enter
test
pop
mov
mov
push
push
leave
jb
xor
or
jp
loope
shlb
mov
fdivrs
mov
nop
ror
ret
sub
imulb
mov
cmp
mov
les
icebp
mov
or
mov
jg
lock
outsb
test
test
mov
loopne,pt
sti
push
xchg
ss
test
sub
stos
inc
xchg
jmp
xor
dec
jecxz
sub
adcb
xor
arpl
push
rcrb
or
add
push
movsl
test
push
mov
xor
arpl
shlb
rorl
test
repnz
push
cwtl
inc
aas
pop
pushf
sbb
rol
flds
adc
std
mov
pop
inc
fisubs
mov
fdivrl
jl
pop
dec
lret
fwait
xor
in
or
mov
jp
sbb
pop
push
cmpsl
mov
adc
test
adc
push
push
cmpsl
jl
and
jbe
push
mov
jl
icebp
mov
lea
push
push
dec
mov
mov
mov
mov
shl
xor
adc
filds
push
and
jbe
fidivl
and
inc
mov
xchg
scas
bound
jae
std
lret
mov
imul
inc
lret
mov
movl
mov
loop
mov
cmp
dec
lods
jg
testb
sub
dec
xchg
cs
aas
pop
rolb
and
lret
push
ljmp
xchg
inc
in
push
mov
or
rclb
sahf
cld
push
ss
dec
cmc
mov
repz
stos
mov
movsl
into
dec
aaa
lods
les
cld
jle
std
aaa
pop
test
push
jge
push
jo
test
test
and
xchg
mov
push
cltd
or
push
sahf
shl
lahf
inc
push
out
mov
lret
aaa
fwait
xchg
mov
insl
dec
push
cmp
sahf
lcall
test
and
inc
xchg
stos
xor
push
test
enter
mov
popa
cmp
dec
lcall
rclb
enter
out
add
ljmp
popl
clc
dec
shl
pop
rolb
mov
vpunpcklwd
fs
enter
mov
in
aam
lds
push
jl
xor
adc
push
or
ret
aam
mov
jecxz
or
pop
cmpsl
mov
sbb
xor
push
aad
fs
jo
jp
sti
dec
jnp
jge
adc
push
rcr
adc
sub
lret
jae
es
xlat
lods
ds
fwait
mov
mov
cwtl
dec
les
loope
insl
nop
sub
jnp
das
addr16
imul
push
jae
loop
or
mov
stos
push
js
ja
or
inc
daa
int
sbb
sub
dec
lods
out
pop
repnz
xchg
ret
jge
xor
cwtl
notb
add
ljmp
dec
mov
sbb
enter
mov
repnz
pusha
sti
jecxz
inc
xchg
or
dec
push
cmp
stc
adc
pop
shlb
enter
mov
add
bound
pop
loopne
mov
mov
negl
dec
enter
add
mulb
mov
int3
lea
lcall
addr16
fsts
mov
jbe
fisttpll
out
push
push
inc
aad
sbb
dec
mov
jp
dec
out
mov
push
arpl
or
jge
cmpb
push
mov
pop
fstpt
add
movsb
ss
dec
fdivl
pusha
hlt
mov
insl
daa
cmp
vpcmpgtd
mov
cmp
in
ret
popf
mov
mov
push
sti
dec
jno
lds
jg
add
loop
sub
addl
das
or
add
adcl
dec
jmp
inc
push
cmp
and
fists
mov
js
ret
pop
mov
push
cltd
pop
pushf
in
ficomps
inc
rcrb
cmpl
inc
push
repz
xchg
add
dec
mov
push
leave
in
fisttpl
aaa
shlb
mov
shll
lcall
sbb
popf
fiaddl
in
pop
push
pop
mov
into
push
fsts
bound
mov
sbb
cs
shrl
outsl
push
mov
fsubrl
mov
add
ret
pop
jl
mov
cmpsb
jo
mov
sbb
and
arpl
imul
repz
mov
rolb
iret
xchg
xchg
or
hlt
sbb
int
jb
incb
scas
and
dec
cmc
inc
jb
fists
cmpsl
dec
mov
insb
xchg
je,pn
test
shlb
loope
jmp
mov
push
add
add
scas
jmp
popa
adc
insl
lock
out
imul
dec
cmp
mov
pop
int3
shrl
into
into
xchg
jnp
cltd
jbe
movsb
sbb
adc
popa
out
clc
addr16
fidivl
lea
dec
adc
iret
das
sarb
iret
cmpsl
clc
inc
fdivrl
sti
cmpsl
clc
mov
into
jle
div
fs
cwtl
mov
jecxz
push
pop
imul
inc
popf
jnp
fistl
pushl
add
inc
mov
mov
dec
pop
mov
mov
xchg
fs
lahf
fsubs
aaa
xlat
aad
mov
movsl
cmp
xchg
ja
divl
mov
pop
mov
adc
addb
inc
aam
mov
aam
cmp
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
mov
pop
sbb
pop
scas
fldenv
mov
stc
pop
sub
mov
frstor
mov
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
aad
mov
or
xchg
ret
out
mov
ret
lods
inc
movsl
push
sahf
sub
mov
fwait
dec
mov
int
push
cld
test
inc
mov
mov
ljmp
outsb
out
pop
scas
frstor
mov
mov
xor
sti
mov
jle
or
hlt
xlat
add
mov
mov
dec
fisttpll
sub
and
adc
rclb
test
cmc
sti
iret
test
jg
movsl
sti
mov
jg
popa
arpl
sub
lds
push
and
les
inc
and
adc
push
adc
pop
push
mov
mov
xor
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
stos
pop
scas
xchg
daa
icebp
pusha
mov
sbbl
out
pop
scas
frstor
mov
push
cli
sub
sbb
dec
fldenv
mov
clc
sub
sbb
out
frstor
sahf
icebp
push
clc
sub
sbb
sbb
push
cli
sub
sbb
out
pop
scas
frstor
mov
push
stc
sub
sbb
pop
lahf
shll
mov
push
clc
and
sbb
pop
es
push
clc
cmp
sbb
dec
scas
fnsave
mov
push
clc
sub
or
pop
scas
frstor
mov
push
clc
sub
sbb
add
clc
jge
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
fldl
xor
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
cs
mov
push
clc
cwtl
sbb
pop
scas
fldl
icebp
push
cld
sub
dec
sub
mov
push
clc
sub
sbb
je
scas
push
in
icebp
push
clc
sub
frstor
fdiv
push
clc
inc
enter
pop
scas
frstor
mov
push
clc
sub
cmp
mov
sahf
gs
sub
sbb
pop
shll
mov
push
clc
sub
outsb
out
pop
scas
frstor
mov
push
clc
sub
sbb
out
pop
outsl
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
mov
push
clc
sub
sbb
pop
scas
frstor
and
int3
sbb
pop
test
cli
dec
dec
lret
cmp
and
out
cmp
fimull
mov
xchg
shr
lods
in
mov
pop
or
add
clc
mov
xor
push
sbb
shll
testl
loope
mov
mov
inc
and
sub
stos
popf
shrl
hlt
dec
fstps
es
ds
xchg
movsb
jb
out
mov
lds
aad
push
mov
mov
sbb
cmp
cwtl
jbe
cs
mov
aaa
inc
movsb
daa
xchg
pop
ja
bound
movsb
pop
or
push
mov
data16
cmp
dec
repnz
sbb
inc
xor
jbe
pusha
pop
xor
popf
arpl
jp
in
iret
dec
adc
arpl
push
jg
push
add
push
test
popa
addr16
adc
mov
mov
cmp
rep
call
pop
ret
cs
int3
shl
fbld
sbb
jecxz
mov
push
out
mov
cwtl
mov
mov
or
mov
mov
mov
pop
xchg
out
movsl
pop
mov
cltd
in
pop
jno
lret
test
add
stos
and
mov
push
test
cltd
dec
arpl
inc
push
xchg
pop
and
popa
adc
sahf
fs
notb
ds
adc
jbe,pn
sub
xor
and
gs
popa
setge
aas
rclb
stos
lods
nop
fsts
movsb
rorl
mov
dec
out
popl
inc
xchg
out
jo
ja
inc
ret
adc
daa
mov
call
mov
adc
call
jns
xor
lods
iret
cmp
push
adc
pop
push
jnp
out
and
xchg
lahf
pop
ds
sbb
stos
fcoms
xchg
orl
push
or
mov
inc
push
inc
jnp
ficoml
dec
xchg
pop
jnp
and
mov
dec
sahf
cltd
stos
sub
pop
das
cmp
popf
pop
mov
clc
xor
pop
add
jg
aad
jge
adc
add
rorl
test
mov
pop
in
push
out
imul
bound
push
push
cmp
aas
jmp
or
xchg
scas
in
sub
mov
dec
pop
pop
jge
pop
mov
pop
adc
test
sbb
inc
bound
lea
lcall
mov
je
pop
adc
jge
mov
sub
xor
mov
loope
pop
push
inc
mov
out
adc
sarb
daa
pop
mov
or
dec
push
sarl
adcb
inc
rcl
test
push
es
lock
or
cli
sbb
lods
movsl
cltd
leave
push
test
cltd
sub
xchg
ret
bound
sub
pop
sbb
dec
mov
mov
adc
dec
cmp
push
jecxz
sub
cwtl
xchg
adc
push
lods
cmp
lcall
rcr
dec
sub
clc
ljmp
popf
adc
pop
repnz
lods
inc
stos
icebp
pop
in
lret
pop
dec
adc
and
mov
into
mov
loope
movsl
lods
insl
aad
cli
icebp
jb
int3
fcomps
mov
push
enter
mov
dec
sbb
mov
cld
inc
sbb
lea
dec
cmp
mov
loopne
sub
fnstsw
test
leave
in
add
add
dec
test
push
inc
pushf
fistps
jl
das
jmp
and
fwait
dec
lea
test
or
imull
das
addr16
mov
sbb
adc
push
sbb
push
subb
cmpsb
outsl
rdtsc
and
les
or
cmpsb
xchg
mov
add
in
test
jnp
fisttps
lret
shlb
sbb
pushf
clc
js
rcl
in
and
cmp
loopne
aas
xor
or
je
mov
test
fwait
cltd
cmc
pop
mov
aam
xor
ret
push
js
push
and
data16
adc
js
jl
or
dec
cmp
add
repnz
mov
scas
fldl
jle
xor
cmp
out
pop
cs
fwait
test
xor
ljmp
mov
out
xchg
lods
test
test
sub
stos
sti
add
das
add
jno
mov
sbb
xchg
cli
pop
jo
inc
mov
mov
icebp
lock
clc
mov
mov
stos
lahf
int3
add
orl
push
sbb
mov
adc
imul
int3
xor
adc
enter
int
pop
push
mov
xor
lds
mov
pop
pop
add
push
fcomip
cmp
push
xchg
sub
jno
adcb
aaa
inc
call
add
and
xor
je
scas
jnp
in
addr16
jmp
mov
mov
incb
nop
xor
mov
sbb
mov
and
adc
xchg
std
in
add
mov
rol
clc
sub
test
xchg
ret
mov
xor
and
xlat
iret
sub
clc
stos
cmp
lods
lahf
into
push
xchg
arpl
pop
inc
fdivl
insl
aaa
iret
cmp
xchg
mov
call
movsb
shr
xchg
or
mov
flds
jo
test
test
movsl
lret
decl
mov
lods
pop
sahf
out
add
push
push
inc
popa
jo
push
push
aaa
mov
je
jns
mov
mov
or
pop
adc
xchg
fdivrl
fisttpl
movsb
mov
jl
xchg
repnz
test
pop
sbb
ljmp
int3
hlt
addr16
popa
xor
pop
or
test
push
xor
js
cmp
cld
loopne
mov
sahf
mov
sbb
xchg
int3
sbb
adc
fldcw
xor
cmp
mov
push
test
dec
outsb
mov
jb
pop
dec
mov
xchg
add
out
stc
lds
popa
loopne
mov
sub
xor
dec
and
mov
jp
repnz
adc
into
jl
mov
insb
out
push
pop
test
pushf
sbb
popf
lock
adc
mov
mov
add
jg
test
sub
ds
sbb
in
subl
cltd
xor
ljmp
jmp
jmp
jns
xchg
dec
push
sub
push
push
sbb
test
setge
cltd
popa
and
cmp
popf
xor
xchg
mov
adc
lods
mov
xor
inc
ss
scas
jle
mov
lock
inc
sbb
jno
and
mov
into
testl
cs
icebp
adc
pop
add
idivb
adc
out
ret
and
stos
nop
in
adc
inc
lret
jg
inc
add
fildll
jo
mov
mov
mov
sbb
sbb
sub
jl
xchg
xchg
push
push
xchg
pop
mov
les
mov
adc
mov
scas
mov
lret
add
cltd
adc
dec
lods
xorb
decb
inc
test
xchg
pop
ret
ret
into
pop
loopne
in
testl
loopne
pop
jl
out
lret
mov
mov
mov
test
fidivrs
sub
arpl
jo
and
jecxz
jnp
je
test
sub
add
mov
ret
pop
in
push
scas
inc
cli
push
fiadds
push
pop
mov
cmpsb
xchg
je
or
jbe
inc
sub
or
int3
pop
push
test
xchg
cwtl
aaa
aas
mov
or
out
out
inc
sahf
push
mov
in
cmp
jecxz
nop
pop
fcmovu
ss
adc
xor
sbb
mov
mov
pop
push
or
xlat
ds
xchg
pop
add
testb
mov
cs
out
ljmp
cli
adc
sti
arpl
stc
and
jg
shrl
ds
dec
sub
xor
push
call
enter
icebp
dec
ret
mov
sbb
popf
ja
in
lret
mov
int3
jae
shlb
xorl
bound
enter
ret
int3
adc
in
and
adcb
mov
iret
jge
ret
cmp
xor
test
jmp
aas
stos
sbb
les
fcom
push
mov
adc
scas
ds
das
hlt
sub
enter
pop
pop
mov
dec
jae
inc
lret
fildl
xorb
mov
fadd
stos
mov
mov
arpl
inc
sti
lock
jge
lods
aam
das
inc
movsb
lock
inc
jo
inc
dec
jae
mov
push
arpl
jmp
mov
sub
sub
jle
cmc
mov
mov
push
das
ds
xorb
sahf
pushf
addb
lcall
xchg
xchg
iret
sbb
enter
pop
add
inc
into
push
mov
in
dec
rclb
inc
mov
cmp
insb
out
xlat
mov
outsl
adc
xchg
dec
stos
sub
inc
test
mov
mov
sbb
gs
inc
dec
add
movsl
mov
xchg
repz
push
enter
lods
push
inc
scas
mov
sbb
adc
jle
jne
mov
inc
in
aaa
xor
mov
mov
mov
loope
adc
popa
adc
outsl
mov
mov
dec
pop
and
fnstcw
movsb
pop
mov
adc
stc
add
into
mov
inc
nop
loopne
fwait
mov
pop
popl
int
ja
shll
cmpsb
loopne
notb
pop
adc
lock
arpl
sbb
push
lods
sbb
cs
ss
jb
cld
cmp
xor
cmc
pop
jns
cld
outsb
int3
das
jl
jb
xchg
imul
imul
out
sub
gs
and
jp
sarb
enter
neg
jbe
pop
loope
xor
pop
ss
and
insl
call
mov
cs
add
jnp
jge
pop
xchg
ljmp
sub
imul
icebp
mov
pushf
cltd
jns
pop
out
fnstenv
push
cmp
cmpsl
int
out
popf
jnp
imul
es
lahf
sub
dec
cmp
into
mov
or
hlt
sub
lcall
fisttpl
ds
fs
mov
les
push
jo
adcl
std
push
mov
push
fdivr
lcall
cmpsb
test
adc
cli
aam
mov
xor
iret
or
cmp
lret
roll
cmp
in
popf
xchg
gs
and
ja
in
jns
xchg
in
test
std
js
mov
dec
mov
add
xchg
imul
cmpsl
or
pop
aaa
jne
loope
sbb
fistl
and
in
push
fidivs
icebp
and
add
lea
or
test
je
push
push
scas
lock
jmp
mov
sti
mov
jae
repnz
sbb
cmp
iret
into
mov
das
pop
shlb
shll
jns
stc
arpl
arpl
fists
mov
xchg
push
aad
mov
pop
out
push
lea
enter
push
cmp
data16
icebp
jl
dec
jle
rcrl
nop
repnz
inc
imul
mov
cli
pop
hlt
outsb
leave
inc
cmp
scas
dec
stos
fisttps
jbe
xor
adc
jae
push
inc
sbb
xchg
fstpl
fwait
mov
jo
rcrl
sbb
mov
sbb
insl
mov
into
call
mov
xor
stc
xchg
or
and
adc
test
lds
xchg
loop
out
sbb
push
mov
rorl
mov
add
mov
insb
mov
mov
jle
adc
adc
in
loopne
push
jae
lods
hlt
dec
gs
sbb
mov
dec
or
adc
xchg
test
xchg
insl
fwait
leave
mov
mov
inc
cmp
dec
movsl
pusha
add
xchg
aas
sub
mov
cmpsl
or
inc
imul
popf
je
jmp
arpl
mov
mov
pop
adc
push
addr16
scas
dec
jmp
test
neg
and
rcrb
adc
xor
dec
adcl
punpckhbw
cmp
hlt
andb
jge
cmpsl
mov
mov
xchg
xchg
jnp
and
xchg
mov
popf
popa
lret
pop
and
mov
gs
repnz
enter
push
mov
pusha
pop
jp
or
push
int3
adc
mov
fsubrs
pop
outsl
ss
push
pop
sub
inc
add
stos
test
aaa
ljmp
adc
dec
xchg
ret
pop
or
jge
aas
and
push
pop
push
jns
mov
dec
mov
dec
jno
pop
in
mov
mov
cmp
pop
scas
ficoml
je
mov
addr16
adc
push
into
adc
pop
mov
aad
lods
dec
mov
stos
add
jg
addr16
jo
mov
in
cmpsb
daa
push
incb
fistps
mov
xor
inc
mov
mov
add
inc
in
daa
sbb
loopne
and
repnz
jmp
pop
or
jg
sbb
imul
jbe
ds
jge
cmp
pop
inc
xchg
sarb
cmp
jmp
xor
jb
sub
loop
mov
jns
sti
mov
idivb
in
dec
sub
aaa
adc
or
dec
lock
icebp
les
or
stos
sbb
sub
jns
push
jbe
aas
ss
mov
mov
lds
cmc
and
adc
cmpsb
data16
mov
and
xchg
out
notb
mulb
ljmp
aaa
xchg
jmp
push
push
inc
mov
or
dec
xchg
iret
mov
push
and
and
sahf
outsl
jae
xor
inc
test
mov
cmp
in
pop
cmp
stos
add
das
shll
jo
dec
mov
movsb
push
insl
mov
lods
mov
pop
jbe
push
cs
jle
not
xor
addr16
cmp
xor
cmp
or
mov
roll
std
gs
mov
adcb
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
