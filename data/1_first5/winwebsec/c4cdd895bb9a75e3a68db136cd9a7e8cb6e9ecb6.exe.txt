push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
push
aaa
subb
inc
sub
push
leave
push
imul
cmp
xchg
sti
sbb
push
ret
adc
mov
std
mov
mov
rclb
test
orb
or
cmp
je
pop
xchg
sahf
test
mov
mov
fldenv
and
cmpsl
inc
jne
jb
ss
ror
in
fnstcw
sbb
pop
inc
shlb
and
fbstp
lahf
sbb
push
shl
dec
pop
sti
and
sub
iret
les
ret
cld
pop
test
clc
sbb
aam
pop
and
loopne
int3
cmp
arpl
fldt
mull
jp
test
enter
lods
les
fldenv
jbe
in
in
jne
repz
pop
mov
mov
scas
adc
push
jmp
mov
dec
mov
jg
enter
fidivl
cli
mov
dec
inc
jle
mov
pop
movsl
dec
jnp
stc
cmpsb
adc
sbb
xchg
in
in
sarb
loopne
and
js
scas
mov
int
nop
fnstsw
xchg
jmp
aam
mov
ret
push
or
subl
test
mov
test
sbb
dec
lds
in
mov
dec
mov
je
fstl
hlt
and
aad
xchg
sti
mov
cmp
in
xlat
push
mov
xchg
push
ret
addr16
jle
fisubs
int
rcl
addb
sahf
pop
inc
sub
out
stos
pop
xor
stos
jns
and
dec
enter
sub
popf
lret
cmpsb
cmp
push
inc
roll
sub
add
xor
or
sub
lret
je
fnstcw
or
scas
push
jp
outsb
xor
jle
jns
rdtsc
mov
movsb
or
push
mov
cmpsb
inc
cmc
xchg
sbb
lods
dec
adc
aam
loope
cld
subl
das
mov
jmp
mov
or
popa
xor
jns
mov
push
gs
lret
pop
stc
jp
hlt
out
inc
mov
and
sbb
lock
sbb
mov
out
mov
mov
sub
push
call
out
scas
inc
stos
test
stos
lret
ljmp
fwait
mov
cwtl
ja
pushf
inc
ss
fisubs
movq
adc
sarb
jae
cltd
fbld
test
fs
scas
jnp
je
cmp
inc
lret
int3
fmull
xchg
or
pop
add
pusha
or
test
scas
sbb
mov
xchg
mov
xchg
jg
pop
mov
fs
mov
add
inc
xor
jb
mov
mov
push
pop
out
pop
cmp
je
inc
pop
scas
aaa
test
data16
adc
int
adc
mov
pop
sub
jmp
sbb
or
mov
add
xchg
in
pop
addr16
outsb
and
scas
cltd
daa
jecxz
pusha
pop
sbb
adc
sbb
mov
add
jno
mov
lods
inc
frstor
add
les
stos
fdivrl
gs
sub
dec
pop
lods
cmp
inc
daa
and
sahf
mov
adc
test
jle
movsl
inc
push
pop
dec
xchg
inc
in
flds
scas
aas
fsubs
xchg
out
inc
cmp
int3
in
je
jp
jnp
inc
lcall
cld
je
out
fwait
insb
lods
mov
push
inc
adc
dec
fwait
imul
popf
cmp
mov
add
cmp
and
push
jge
push
push
out
xlat
aam
ret
inc
lret
push
aam
dec
data16
js
push
push
inc
ljmp
mov
pushf
bound
in
push
dec
sub
aam
xor
shl
daa
in
jns
mov
pop
faddp
sub
iret
xor
mov
pop
pop
inc
nop
adc
test
push
and
cmp
push
push
or
movsl
outsb
negb
ret
std
pop
sti
fs
cmpsl
sbb
in
cmp
nop
push
cmpl
push
lods
orb
cld
lods
ds
in
jns
rclb
fs
adc
je
gs
pop
jmp
and
mov
jp
sti
lock
mov
ret
or
out
clc
dec
cmpsb
and
ficompl
movaps
sbb
cmpsb
es
scas
repz
or
adc
mov
dec
mov
loop
cmp
mov
in
or
movsl
or
cmpsb
icebp
mov
mov
sahf
out
out
out
jge
mov
push
dec
and
pop
ret
push
lds
insb
cmc
xor
in
sub
dec
and
pop
lahf
push
stos
fcoms
mov
in
xor
hlt
punpckhdq
inc
es
jmp
out
std
js
mov
or
fimuls
fdiv
jecxz
addl
ror
jecxz
xor
inc
push
dec
je
mov
cli
cmp
mov
xor
out
and
imul
add
pop
push
adc
popf
mov
inc
fcmovnb
adc
xor
inc
push
cmp
xchg
add
push
mov
jbe
sbb
or
pop
mov
push
divl
subb
or
sub
test
inc
cld
jg
mov
inc
out
sbb
dec
mov
idivb
stos
cmpsl
into
repnz
outsb
push
push
sbb
xchg
sub
xchg
ja
cmp
fidivrs
adc
sbb
stos
gs
gs
or
and
add
sbb
pop
pop
mov
das
add
je
mov
pop
adc
stos
shlb
push
out
icebp
iret
adc
jne
pop
and
add
lcall
sub
inc
mov
mov
mov
scas
mov
fwait
lret
jnp
loopne
aam
pop
adc
sub
mov
cmp
jl
sbb
push
xchg
add
mov
in
shll
xor
jecxz
aad
or
pop
cmc
cmpsl
jge
and
jbe,pn
mov
xchg
ret
xchg
mov
xor
movsb
push
test
out
cmpsl
lea
out
aaa
or
jb
stc
fbld
or
dec
dec
outsb
out
jecxz
jne
bound
dec
inc
lods
jno
sbb
lahf
aas
adc
mov
stos
aaa
jo
mov
loop
cmpsl
jno
push
lret
test
ret
out
ds
sbb
jo
test
notb
shl
pop
pop
lods
rorl
outsl
mov
dec
addr16
lcall
into
movsb
stc
imul
mov
mov
mov
cmc
pop
aam
fistpll
adc
inc
cmp
lods
int3
mov
jl
and
cmpsl
pop
and
les
pushf
pop
xchg
add
push
das
lds
mov
push
in
cmp
inc
push
pop
push
jp
movsb
mov
mov
cmpsb
je
data16
or
inc
dec
rcr
mov
jbe
ja
or
pop
dec
aam
mov
sub
pusha
cs
hlt
aaa
pop
insl
add
xor
cmp
test
sub
pop
xchg
inc
test
adc
mov
outsl
jmp
aaa
je
xor
stc
pop
nop
and
shll
inc
mov
mov
loope
rclb
sar
aam
dec
pop
out
mov
sub
into
jno
lods
push
ljmp
scas
pushf
out
decl
jle
xchg
xchg
mov
adc
andb
cmc
faddl
cvtpi2ps
and
test
sbb
jno
loopne
cmp
push
pop
in
js
test
ret
icebp
inc
xor
addr16
jae
test
ret
cmpsl
lcall
movsb
fsts
cmp
or
xchg
adcl
pop
pop
xlat
dec
push
stos
fmull
xchg
in
or
das
daa
jl
lret
fisttpl
push
mov
xchg
pop
push
adc
lds
aas
mov
jp
aaa
mov
or
testb
mov
xchg
aaa
xor
jmp
cmp
ja
inc
mov
out
sub
push
lods
or
xchg
push
pop
xchg
lret
sysexit
aad
cmp
dec
mov
cmp
cmpsb
popf
push
pushf
test
popa
push
fistpll
mov
cmp
int
insl
mov
lods
xchg
mov
lahf
adc
pop
push
sbb
test
daa
fsts
sbb
test
not
fidivs
or
rorb
insl
jmp
or
inc
push
jl
inc
mov
inc
je
les
lahf
push
mov
in
out
sub
mov
cmp
test
push
push
inc
loopne
pop
xchg
push
arpl
or
stc
clc
insb
push
mov
fistps
mov
pop
push
leave
rorb
outsb
pop
dec
das
push
push
pop
into
xchg
jnp
push
jo
addr16
push
push
iret
cltd
adc
dec
mov
icebp
mov
fcmovne
lret
cmc
fnstenv
jg
dec
addr16
fisubrl
das
sbb
mov
pop
and
adcl
xchg
mov
pop
and
dec
xlat
ret
lea
sti
daa
arpl
mov
lahf
mov
dec
imul
dec
xchg
add
out
xchg
cmp
daa
lods
lahf
test
xchg
pusha
jl
and
stos
ja
fadds
movsb
add
ret
xor
jl
iret
pushf
add
cmp
orl
sub
mov
addb
iret
sub
rorl
imul
xchg
fiadds
jg
mov
loopne
mov
pushf
xchg
inc
pop
or
imul
mov
adc
and
imul
pop
outsl
test
std
pop
mov
jge
enter
add
push
imul
popa
push
nop
and
cmc
aam
leave
out
icebp
mov
out
adc
cld
sbb
inc
nop
mov
and
sub
sub
xor
dec
es
and
test
movsl
dec
test
fbld
stos
push
cmpsb
mov
jno
jmp
popa
mov
test
mov
test
pusha
cmpsb
aaa
inc
cmpsb
out
and
jb
dec
clc
xchg
in
lret
fldt
add
fdivl
or
cmc
lret
lcall
test
sub
fwait
lods
stc
fsubrl
lods
rcll
enter
testl
mov
add
movsb
mov
inc
inc
cli
jb
les
adc
lods
push
aas
xor
push
sbb
loope
mov
iret
dec
xor
push
sub
inc
ret
es
mov
cs
and
imul
and
daa
or
movsl
int
adc
hlt
jl
aaa
test
arpl
sub
mov
mov
jae
ljmp
aaa
cmp
jl
adc
int3
xchg
in
pop
xchg
and
push
jns
ja
jle
hlt
cwtl
push
loopne
mov
jmp
pop
out
xchg
das
push
popf
cs
dec
ret
inc
popa
fdivl
rcll
ud2
ja
cmp
dec
insb
fists
cltd
mov
lcall
mov
imul
loope
xor
adc
fiaddl
push
dec
int
and
sub
xor
repnz
mov
in
cmp
ja
lods
mov
fcos
fldl
mov
scas
ss
inc
sub
mov
pop
jmp
push
lea
xchg
cs
xor
xor
imul
adc
sbb
dec
test
adc
cwtl
jo
lret
lds
ja
les
sub
xchg
mov
out
rorb
mov
adc
clc
fdivl
cli
rol
into
aam
jl
mov
mov
xor
fstps
in
outsl
fimull
jecxz
jnp
cmc
xor
mov
cmp
jno
fldenv
movsb
mov
js
clc
push
mov
adc
insl
mov
lods
adcl
das
sub
jnp
adc
and
push
call
and
out
jge
sub
mov
into
rcrl
inc
lods
mov
imul
sub
push
into
push
sub
data16
dec
pop
flds
loopne
dec
dec
js
xor
push
pop
daa
ja
fsubr
imul
cli
and
lret
clc
dec
movsb
inc
rcrb
dec
push
mov
dec
cmp
aam
sahf
or
add
xlat
pop
and
dec
dec
in
out
mov
pop
aas
cmp
in
jns
test
mov
xchg
test
xor
mov
mov
xchg
mov
xchg
jbe
pop
mov
loopne
sbb
pop
xchg
dec
xchg
adc
ror
mov
inc
imul
and
js
jmp
in
or
cmpsb
sahf
inc
sub
pop
jecxz
pushf
dec
pop
ds
push
and
icebp
mov
sub
in
stc
jbe
mov
inc
lods
push
popf
mov
popa
gs
out
cmp
jo
or
nop
lcall
in
sti
loope
jne
adc
sub
shlb
shl
jnp
sahf
push
lahf
mov
cmp
dec
call
daa
mov
jge
mov
cmp
lea
pop
dec
cmp
adc
mov
mov
xchg
lods
jbe
cwtl
mov
pop
inc
int3
adc
xchg
cmp
xor
inc
clc
dec
sbb
jmp
inc
stc
fiadds
cld
ljmp
add
push
fidivl
sti
cmc
or
shr
dec
mov
cmp
sbb
or
mov
les
push
iret
add
lods
cmc
aaa
pop
xor
adc
test
int
mov
repnz
mov
dec
xor
xchg
inc
dec
gs
cmc
lahf
and
enter
and
push
xchg
mov
pushf
xor
stos
jb
mov
inc
subb
sbb
pusha
rcrl
jle
push
notb
mov
dec
jo
adc
lods
push
adc
ja
ret
loopne
adc
into
sub
fsubl
test
repz
dec
push
pop
loopne
jne
add
mov
dec
jg
mov
scas
mov
mov
sbb
xor
fists
je
xchg
sub
popf
adc
cmpsb
inc
dec
call
adc
iret
and
or
sbb
loopne
aas
xor
loope
mov
jge
adc
ret
dec
negl
fidivl
xor
jae
addr16
jne
popf
sub
outsb
lock
xchg
lods
jl
jb
jmp
mov
enter
mov
fmul
test
movsl
xchg
and
sbb
arpl
xor
sbb
lcall
pop
call
lock
xchg
mov
das
or
jb
add
test
cmp
pop
js
test
lods
and
jl
mov
bound
jbe
jb
cli
cltd
aas
mov
arpl
or
push
mov
cmp
insl
inc
or
loop
lea
cmp
fldl
jnp
sbb
jle
dec
insl
adc
loope
xchg
mov
test
sbb
fs
and
xor
xor
pop
and
bound
jno
mov
popa
xor
sbb
and
xchg
mov
mov
bound
mov
shlb
mov
xchg
fwait
sti
jbe
sub
mov
xor
fstl
int
adc
xor
or
push
popa
dec
lahf
arpl
stos
jne
xchg
jmp
jb
xor
pop
and
jl
dec
in
jnp
xchg
sub
dec
jp
dec
outsl
add
aad
cmp
xlat
out
add
add
add
mov
fsubrs
fsubs
xchg
mov
call
scas
xchg
paddw
add
inc
int
push
jle
ja
lock
add
or
cli
lcall
pop
outsb
adc
js,pt
add
xor
inc
ja
out
fdivrp
sahf
dec
jecxz
shll
enter
mov
das
jecxz
inc
push
movsb
lahf
lret
and
sub
dec
or
xchg
or
mov
aam
mov
ja
cmpsb
add
cmp
pop
add
loop
inc
callw
rcr
sub
cmpsl
test
mov
call
fsts
inc
icebp
mov
rcrl
lock
mov
mov
loope
int3
fnstcw
mov
inc
rclb
push
jno
inc
mov
mov
dec
nop
add
mov
sub
or
leave
dec
addr16
cmc
call
out
imul
fs
dec
push
push
dec
adc
mov
insl
adcb
stos
push
jbe
rcrb
mov
xor
fildl
lea
sub
aad
fdivl
mov
pop
push
xchg
cmc
xor
in
jae
lea
cmpsb
mov
xchg
sbb
mov
add
mov
mov
mov
sti
push
mov
adc
xchg
lods
mov
lea
sub
js
inc
mov
sub
sub
rcr
lahf
pop
jg
rorl
les
enter
lret
pop
cmp
outsl
cmp
mov
jno
aas
shr
sarb
test
notb
mov
lcall
psllq
jp
jmp
ljmp
rcrb
dec
ret
dec
push
pop
popf
out
ret
divl
sub
lods
aaa
dec
add
into
add
push
out
mov
mov
in
aam
mov
dec
movsl
fmul
pop
pop
pop
and
inc
xchg
xchg
outsb
pop
sbb
bound
xor
xchg
push
shlb
jnp
shl
pop
xchg
into
jecxz
push
mov
add
js,pn
cmpsl
and
leave
lcall
sbb
sahf
pushf
in
addl
xor
dec
inc
xchg
sbb
movsl
in
jl
loopne
push
bound
add
jnp
pop
es
rcl
jbe
clc
inc
xor
mov
test
mov
cmp
xchg
popl
add
das
mov
mov
xorb
inc
std
mov
fsts
mov
jae
mov
xchg
xchg
mov
jnp
or
stos
mov
lea
xor
movl
inc
cmpsb
mov
add
iret
cld
testb
lods
ret
dec
int
imul
movsl
cmp
add
fdivrp
push
add
mov
jecxz
aaa
loop
iret
push
jno
cwtl
mov
jle
popa
neg
cmp
adc
call
cmpsl
jnp
pop
scas
leave
push
jno
inc
adc
scas
adc
mov
add
sub
arpl
cwtl
jns
lds
jecxz
jo
stos
ds
arpl
test
rorb
stos
sub
fbstp
push
add
out
lock
leave
cmp
imul
inc
push
dec
pop
sarb
adc
pop
outsb
inc
push
inc
aam
sbb
fs
into
jmp
mov
cmpl
mov
push
mov
xor
xor
sub
xor
iret
push
cmp
lds
lock
fists
in
xchg
clc
cli
out
ss
jo
jge
inc
test
scas
hlt
sub
je
inc
fldl
test
daa
xor
ss
or
and
push
sub
jge
outsl
ret
xor
es
push
test
pusha
aam
push
sbb
shrl
mov
add
cli
cltd
mov
mov
jmp
ds
fs
add
push
ret
sbb
das
les
mov
andb
add
pop
orl
jo
mov
out
je
loope
loopne
pop
lds
mov
dec
cvttps2pi
push
xor
xchg
dec
loop
xlat
jno
ret
outsb
ror
sbb
push
mov
cli
mov
adc
pop
into
and
fisubl
je
cmpsb
pop
mov
loop
push
push
jno
adc
jge
mov
mov
hlt
pop
push
sbb
repnz
inc
inc
jg
xchg
outsb
ret
lea
jbe
xchg
fisubs
shll
inc
test
or
cld
rolb
dec
es
daa
dec
jbe
inc
and
jecxz
pusha
jae
push
xchg
sub
push
mov
mov
mov
sub
subb
jns
sbb
popa
sbb
jmp
xor
aas
mov
xchg
push
and
jp
push
inc
xchg
mov
pushl
ret
call
addl
and
popf
push
push
mov
or
loop
es
ljmp
jnp
outsl
sbb
and
dec
mov
cltd
leave
cmpb
cmpsl
dec
gs
orb
cli
imul
xchg
cmp
add
push
call
stos
dec
adc
movsl
dec
fucom
push
push
pop
pop
xchg
inc
divb
mov
add
cmp
cmpsb
mov
sbb
shlb
mov
std
mov
and
sti
mov
loop
push
dec
cmc
mov
out
shlb
pop
cld
out
sub
dec
pop
xor
and
inc
push
cmc
int
jp
push
fidivrl
int
mov
push
aaa
jmp
int
sbb
mov
add
inc
mov
xor
out
mov
ret
mov
stos
ret
sbb
les
adc
in
dec
fmul
in
out
fwait
out
mov
mov
mov
shlb
dec
adc
push
je
arpl
bound
jmp
insl
or
dec
dec
sbb
cmpsl
mov
pop
cltd
xchg
adcl
enter
pop
ret
dec
mov
adc
ljmp
daa
fiadds
sbb
or
int
dec
jae
rcll
mov
pop
mov
push
mov
repnz
shlb
xchg
rorl
sub
add
dec
mov
insl
loope
sub
cmp
or
mov
in
xor
jmp
int3
sbb
cmp
push
aam
and
outsb
cli
cli
in
add
mov
sub
cmp
stc
lcall
inc
daa
pop
xchg
arpl
or
push
pusha
stos
fstpt
push
insl
mov
xchg
popf
sti
je
push
dec
inc
pushf
inc
dec
sbb
mov
iret
add
mov
scas
in
mov
icebp
ret
sbb
stos
fsub
push
mov
mov
add
ss
aaa
mov
outsl
cmp
loopne
mov
ja
orb
push
adc
pusha
jle
cmp
and
sub
jecxz
rolb
sub
jns
lcall
mov
jle
jge
jl
lret
xchg
repnz
pop
xchg
outsl
fld
and
or
lcall
and
dec
ficoml
xor
xchg
adc
popl
push
jg
call
sub
sahf
sbb
pop
or
cmpsl
test
cmp
or
pushf
iret
mov
pop
cmp
out
cmp
dec
adc
and
xchg
repnz
cmp
idiv
ljmp
fistpll
and
aas
in
cmpsl
data16
adc
cmp
sbb
xor
cmpsb
sti
lret
movq
jne
mov
test
leave
fistl
mov
ficoml
clc
dec
ret
and
sub
sti
enter
xchg
mov
xor
test
lds
fdivrs
push
loop
fsubs
popa
push
mov
gs
jne
mov
mov
ds
sahf
cmp
scas
stos
sub
jns
dec
lret
adc
xorl
mov
mov
mov
pop
lcall
sub
hlt
sub
arpl
pop
inc
pop
sbb
inc
xchg
cmp
jl
inc
inc
xchg
pop
aam
das
movsb
or
lock
in
push
cmp
in
lock
cmp
mov
cmc
into
iret
cltd
scas
add
jns
and
mov
pop
test
inc
xchg
shll
inc
ficompl
rclb
inc
data16
mov
push
mov
mov
insl
fmuls
fists
xor
out
int
mov
cmp
inc
outsl
popa
push
mov
mov
cmp
or
jns
or
sub
testb
sti
or
inc
leave
dec
lds
aad
repnz
mov
into
flds
dec
fnstenv
push
adc
adc
jb
imul
cld
jmp
test
sbb
xor
mov
std
xchg
loopne
dec
mov
pop
add
je
mov
jp
inc
lret
jne
jno
sahf
inc
loop
hlt
lret
xor
scas
fstpt
adc
stos
push
mov
in
pop
ds
mov
mov
mov
call
sub
lret
fimuls
fildll
pop
dec
ds
jns
cmpsw
insl
cltd
or
cmpsl
adc
notb
mov
jl
lea
ljmp
jl
into
aaa
adc
push
sub
jl
sbb
jno
testb
jle
mov
add
es
in
and
fs
jl
aad
sub
stos
scas
js
outsl
lcall
pusha
lret
pusha
mov
inc
out
xor
cmp
lahf
scas
loopne,pn
mov
imul
sbbb
popf
xchg
add
insb
xor
adc
movsl
imul
addb
out
xchg
add
rclb
mov
dec
xor
pop
icebp
in
loope
add
mov
xchg
cmp
dec
jmp
cwtl
ret
push
pop
push
push
add
sarb
shlb
jg
xchg
sarb
push
push
mov
out
mov
lds
les
sahf
jmp
dec
loope
push
push
das
inc
sbb
pop
cmp
pop
pop
xchg
jmp
jle
xchg
les
popf
leave
cmc
ja
push
notb
dec
or
cmpsb
push
das
stc
add
lods
outsl
fstps
into
inc
and
jl
push
cmp
adc
ret
call
add
add
pushf
xlat
sbb
xchg
out
loop
pop
test
loopne
cmc
sbb
popf
mov
es
dec
xor
jmp
push
pop
imul
lret
bound
dec
cmp
sub
mov
in
mov
test
xchg
jmp
jp
cld
or
imul
inc
mov
pop
mov
outsb
sahf
inc
xor
shll
aam
sarl
adc
cld
sub
adc
mov
or
ss
rorb
rorb
jl
scas
mov
mov
mov
andl
xchg
xor
pop
mov
cmp
xor
mov
je
xchg
dec
adc
fildl
popf
rcrl
jnp
mov
sbb
or
fwait
adc
inc
or
cmp
mov
cmpl
dec
ret
inc
dec
dec
dec
and
xor
fisubl
mov
sti
stc
add
negb
adc
push
pop
int
mov
dec
in
sub
lcall
push
cmpl
sbb
mov
xor
mov
cwtl
sbb
lea
jle
or
enter
adc
movsl
inc
pop
push
cli
pop
pop
cmp
sbbl
shll
xchg
and
rcrb
loop
stc
mov
sub
loop
xchg
dec
fidivrs
push
pushf
insl
les
imul
aam
bound
mov
cmp
es
dec
lret
adc
cltd
jne
addr16
pop
pop
push
xlat
mov
push
movsb
hlt
sbb
subb
sahf
aam
lds
sub
dec
xorb
lods
out
mov
mov
dec
pop
pop
push
cmp
mov
mov
push
daa
cmp
add
into
aam
push
fistpll
mov
mov
jle
pop
out
mov
xor
ret
imul
iret
jl
sub
movsb
aas
inc
cli
arpl
sub
test
mov
stos
mov
xchg
fisttpl
addb
adc
cmp
xchg
ret
inc
cmp
dec
sub
pop
push
sbb
sahf
shlb
lods
xchg
mov
clc
test
cmpsl
sarl
shrl
inc
jp
loopne
add
fwait
rolb
fst
pushf
call
mov
mov
xor
fisubl
push
or
push
fmull
push
sahf
es
repnz
cmpsl
in
test
xchg
scas
pop
push
enter
mov
sahf
out
mov
adc
stc
daa
xorl
rclb
enter
int3
cltd
mov
inc
and
pop
mov
fstl
mov
fwait
sti
jmp
push
mov
add
push
ss
jae
dec
sub
nop
pop
movsb
inc
pop
pop
loopne
outsb
xor
leave
aas
xlat
jg
iret
icebp
call
push
xchg
fdivr
mov
std
xor
test
outsl
sarb
pop
xlat
push
jle
mov
clc
test
cmpsb
mov
mov
icebp
fadd
push
jne
call
test
pop
jmp
hlt
fiaddl
jge
sbb
je
mov
dec
ror
jge
arpl
test
and
xor
scas
cmp
xchg
or
das
arpl
psllq
ljmp
pop
dec
mov
outsl
cmpsl
aam
scas
mov
push
out
adc
bound
mov
xor
pop
test
inc
jbe
cmc
push
xor
mov
xchg
pop
rcr
gs
xchg
and
xor
add
loop
and
out
mov
rolb
xchg
lods
cltd
rolb
jl
jle
daa
xchg
sbb
pop
cld
sbb
shl
push
int3
add
push
lret
stc
cmc
pushl
and
dec
xchg
nop
sub
push
pusha
pusha
push
imul
aaa
jle
inc
inc
cld
push
lret
sarl
push
mov
int
xchg
js
test
je
mov
les
mov
cmp
rorl
cmpb
roll
rcl
lcall
stc
mov
inc
lahf
pop
into
cmp
enter
idivl
jo
push
daa
and
ljmp
push
mov
mov
sbb
cmp
pop
nop
out
xchg
mov
jo
je
dec
sti
cmp
pop
jne
or
add
push
shll
push
int
enter
daa
adc
mov
cmp
inc
stos
mov
xor
adc
xchg
mov
pop
stc
adc
mov
cmp
push
push
mov
out
int3
test
and
push
mov
pop
rcll
mov
icebp
mov
and
decl
in
dec
rcl
cmp
dec
mov
fimuls
sarl
movsb
rcr
int
add
add
mov
xchg
lret
mov
pop
ret
push
rcll
out
nop
jno
sub
sub
sbb
mov
inc
gs
sbb
aas
jle
mov
shrl
fimull
jae
fisttpl
in
push
xchg
pop
cmpb
repnz
mov
movsb
fldcw
mov
rcrb
into
mov
loopne
or
jmp
cmc
sar
pop
pop
mov
push
xchg
arpl
adc
and
push
insb
jne
inc
adc
pop
vrcpps
addr16
inc
fs
add
push
pop
cmp
fisubs
loopne
pop
pop
mov
xchg
insb
test
fs
cltd
loop
push
in
out
sub
loop,pn
or
stos
cmpsb
pop
pop
scas
roll
fdivl
loope
pop
jne
test
add
cmp
pop
xor
test
nop
jnp
xchg
mov
push
fildl
lret
push
cmp
xchg
inc
int
inc
into
mov
pop
adc
fs
lods
sarl
sub
and
or
stos
sbb
incl
xchg
or
movsb
xlat
mov
adc
icebp
fcmovu
push
sbb
scas
push
fwait
in
ss
js
mov
sarl
iret
lahf
popf
sbb
fisttps
push
jp
jns
and
imul
pop
ret
test
shlb
fists
xchg
pop
and
bound
xorb
push
imul
lds
jge
push
ficoms
jl
mov
and
ljmp
pop
and
testb
or
lods
imul
jb
lret
test
fcomps
fadds
fs
cmp
sub
lret
dec
loop
mov
or
jge
jecxz
in
sbb
xchg
mov
xchg
pusha
cmp
and
fidivl
inc
sarl
pusha
hlt
clc
fdiv
mov
mov
lahf
mov
dec
push
fildll
cmp
sbb
sbb
stos
cltd
das
sub
stc
xchg
mov
out
dec
or
pop
outsl
mov
sub
mov
in
pop
lea
fwait
or
dec
dec
cmp
xchg
mov
inc
mov
mov
push
sbb
scas
imul
sub
jmp
lods
fsubrs
cmp
push
adc
in
and
inc
jg
add
test
cwtl
pop
loopne
jnp
mov
aaa
adc
cwtl
sbb
aas
popf
popf
fs
or
pusha
ret
jns
jl
pop
dec
dec
lods
and
scas
sbb
add
das
xor
and
mov
xchg
rcll
pop
test
pop
push
bound
sbb
cmpsl
cwtl
test
mov
xorl
cmpb
scas
rcr
scas
adcb
xor
push
ror
dec
stos
aam
dec
sahf
icebp
add
push
inc
mov
jmp
movsl
or
es
pushf
and
mov
pop
mov
lods
call
test
fisubl
and
out
sbb
nop
aas
lods
jl
test
dec
repz
mov
mov
jecxz
add
add
call
mov
mov
mov
mov
adc
popa
sub
mov
and
mov
fsts
xor
or
jmp
pop
rcl
icebp
push
jb
rorb
ljmp
and
pop
jmp
lock
popf
jbe
mov
test
dec
in
add
fs
cmp
call
ficoms
adc
inc
mov
and
lods
enter
pop
stos
or
dec
sub
or
test
fwait
das
test
mov
push
cmp
sbb
adc
dec
xor
scas
sub
scas
lods
je
shr
inc
add
cmp
mov
mov
push
mov
fs
lods
adc
dec
xchg
rcll
faddl
ret
pop
ret
push
lret
jno
sti
int
cmp
push
pop
adc
mov
lcall
add
and
mov
rcrl
gs
mov
push
sub
subl
scas
cltd
adc
push
xchg
inc
cmpsb
gs
dec
jle
arpl
xchg
clc
pop
cli
mov
inc
jo
movsl
mov
hlt
jmp
lret
sahf
push
push
pop
mov
xor
call
int
fwait
out
inc
xlat
mov
xor
test
test
popa
sbb
mov
fsubl
mov
fstpt
sbb
mov
push
in
jne
add
xor
out
mov
je
jno
js
xchg
jno
aaa
ds
mov
xor
adc
out
or
pop
insl
bound
bound
inc
inc
sbb
mov
lahf
push
sarb
cmp
add
and
out
bound
pusha
pop
inc
mov
nop
loope
mov
push
push
loope
push
pinsrw
jl
adc
filds
hlt
insb
and
pop
mov
scas
ds
bnd
xchg
mov
push
push
pushf
and
loopne
bound
pop
adc
cltd
test
jns
test
pop
dec
mov
je
mov
rcrb
push
push
mov
stc
and
mov
and
push
add
fsubrs
scas
popa
sahf
jle
decb
cs
stc
movsl
sub
adc
add
inc
test
push
mov
lea
push
xor
xchg
sub
ljmp
fldl
jae
sahf
cmp
lcall
into
xchg
movsb
or
fisubs
outsb
xchg
push
rorb
popf
nop
aam
lret
enter
add
inc
fmul
aam
jbe
cmc
jp
idivb
clc
xlat
add
rorl
rolb
fdivrs
xchg
stc
lods
imulb
push
pop
xchg
sub
dec
lods
push
cli
xchg
fnstcw
jle
popf
sub
imul
loopne
adc
push
test
push
mov
mov
adc
cwtl
mov
sbb
or
fs
add
sbb
iret
push
std
jno
jo
cmpsb
dec
jo
cld
scas
sub
fwait
push
sbb
test
scas
push
aad
dec
jne
imul
xor
mov
lods
mov
xchg
dec
and
dec
jmp
push
xor
stos
shld
inc
push
jo
or
clc
gs
mov
sub
inc
add
jp
repz
pop
mov
cld
insb
mov
lods
scas
sahf
pop
push
or
js
popf
roll
push
ds
jle
mov
push
mov
ds
sbb
sarb
jne
inc
push
pop
pop
add
daa
jmp
andps
xchg
cld
jecxz
outsl
mov
sub
mov
xor
add
sub
push
sbb
test
test
dec
out
sub
pop
and
mov
push
jb
cld
call
push
hlt
scas
cld
or
cld
ljmp
leave
push
mov
add
orb
adc
hlt
jp
inc
mov
cld
bound
cld
int
insl
rcll
push
jno
movb
adcl
pop
xor
in
div
ljmp
fbstp
mov
das
cwtl
stos
sub
ret
sub
sahf
outsl
push
movsl
mov
test
icebp
clc
lea
mov
xchg
insb
loop
jno
imul
pop
push
inc
ret
dec
fisttpl
repnz
stos
jg
test
es
je
movsl
adc
push
bndldx
fs
loop
xor
xchg
jmp
lods
adc
xor
rcrl
add
push
jno
mov
pop
adc
mov
mov
sub
mov
or
les
cmp
and
cltd
repnz
roll
dec
ss
fsqrt
data16
dec
push
push
leave
adc
les
jb
gs
push
pop
div
jecxz
sub
pop
hlt
dec
out
xchg
cmp
mov
test
pop
outsl
or
shlb
sbb
mov
cmc
fs
dec
lahf
hlt
scas
mov
sbbb
repnz
xchg
dec
mov
pop
imul
inc
sub
enter
cmp
push
sahf
adc
or
leave
roll
fs
icebp
das
das
jo
loope
loope
lods
loopne
xlat
shlb
lahf
imul
jecxz
xchg
ffree
out
or
xchg
cmovo
clc
adc
iret
gs
pop
or
mov
ror
and
jno
pushf
xchg
push
cmp
imull
cs
mov
xor
xor
sub
and
push
movsb
mov
jno
mov
repnz
inc
pop
nop
dec
decb
fucomip
orl
inc
and
pop
push
mov
cmp
xchg
aas
jmp
inc
outsb
inc
mov
mov
mov
repz
fistps
enter
push
or
mov
neg
mov
sub
cmpsb
js
jae
in
outsl
scas
pop
and
cmpsb
pop
mov
or
lret
popf
xor
and
xor
mov
mov
gs
xorb
xchg
lods
and
xchg
fcomps
mov
data16
orl
hlt
mov
mov
mov
cmp
or
imul
jne
mov
push
xor
dec
pop
fmuls
cmp
cmp
or
out
in
inc
push
rcl
dec
out
add
nop
ss
mov
inc
repnz
jge
and
fimull
dec
sbb
testl
lret
fdivrs
dec
pusha
push
enter
or
adc
test
push
xchg
push
outsl
hlt
xlat
loopne
addr16
ret
mov
ljmp
fstpt
sbb
sbb
jns
jl
cmp
dec
pop
sbb
loop
dec
cltd
fmulp
dec
mov
lcall
pop
movl
lods
out
repnz
adc
popf
iret
lahf
ficompl
imul
mov
xchg
out
mov
test
pop
jbe
mov
outsb
sahf
dec
fcmovnb
cwtl
mov
cmp
jne
out
mov
and
ja
pop
movsl
cmp
mov
or
xor
dec
jmp
enter
xchg
push
std
adc
jl
rclb
std
testl
sahf
push
cmpsb
clc
mov
stos
sbb
mov
push
jge
or
inc
mov
jnp
fildll
ds
mov
mov
cmp
fimull
sub
add
lcall
sub
xor
add
in
sbb
stos
push
inc
std
jge
xor
les
push
adc
cmp
cwtl
aas
or
out
faddp
mov
adc
fcomp
pushf
cmpsb
testl
adc
and
stos
in
fnsave
jmp
xchg
in
mov
mov
cwtl
pop
pusha
addr16
movsl
test
ljmp
push
cmp
push
add
xchg
fisubrl
sbb
mov
adc
mov
arpl
or
push
je
hlt
popa
mov
subl
dec
sub
push
bound
mov
jnp
xchg
xor
mov
aas
negl
mov
jbe
push
data16
push
gs
inc
enter
sub
ret
add
adc
mov
sbb
out
scas
push
repnz
icebp
push
mov
pop
int
outsl
pop
lret
cmove
mov
add
and
xchg
mov
popa
inc
sbb
xchg
pusha
sub
data16
mov
cltd
push
or
clc
jge
jg
dec
cli
mov
hlt
insl
fnsave
pop
outsb
lcall
adc
insl
lcall
jecxz
call
dec
or
adc
xor
les
xor
movsl
and
xchg
and
fistps
clc
pop
or
push
movsb
test
mov
or
or
xchg
js
jl
outsl
add
sub
int
int3
jnp
inc
repnz
mov
call
cwtl
jp
dec
test
lcall
ds
jl
sbb
adc
fcoms
mov
jg
mov
out
fsubs
shll
add
push
les
leave
rol
push
dec
push
adc
cmp
in
outsl
adc
pushf
or
scas
inc
push
sub
xor
addb
lret
push
mov
stc
in
pop
sahf
adc
popf
in
leave
sub
addr16
cmp
sub
and
ficoml
shlb
filds
lock
push
mov
aaa
movl
fcmovnbe
xor
pop
add
outsb
into
outsb
cmp
add
fmul
fmuls
mov
push
sbb
or
inc
mov
enter
cmp
out
xchg
and
push
push
bound
pushf
push
xchg
das
mov
mov
push
fbstp
cmp
adc
out
bound
int
fcomp
insl
divb
aas
ja
and
and
mov
add
cmp
je
ret
or
push
sbb
repnz
jbe
xchg
loope
mov
cmp
call
clc
mov
stos
sti
cmpsb
or
mov
fs
and
outsl
adc
fisubs
adc
push
fsubl
push
fdivr
cltd
cmpsb
mov
fcompl
testb
shr
fdecstp
sub
pop
outsb
outsb
adc
js
outsl
sahf
and
xorl
adc
test
outsb
mov
or
cmp
cmp
adc
roll
dec
lcall
loop
cmc
aaa
adcl
xor
shll
iret
push
sbb
data16
push
out
icebp
setp
cmp
xlat
std
pushf
gs
cmp
push
ljmp
xor
dec
jge
cwtl
sbb
pop
in
xor
xchg
and
xor
jo
test
sar
lea
sbb
and
in
in
das
sti
cmp
outsb
popf
adc
sbb
sub
sub
lret
aam
mov
not
inc
push
sbb
leave
jne
jp
sbb
hlt
sub
mov
mov
mov
adc
mov
dec
enter
jmp
sub
roll
push
sbb
xor
or
aad
mov
pop
sbb
dec
cmp
adc
sub
or
loope
jnp
lods
lret
sub
or
dec
sub
sarl
fwait
push
and
inc
push
cmpsb
jno
stos
push
sub
out
xor
mov
ret
mov
int
in
dec
leave
sahf
push
lret
or
sbb
inc
dec
leave
mov
bound
fidivl
or
mov
and
cli
sub
sub
int
sub
sub
sub
mov
stos
ja
jbe
lock
or
test
jne
adc
sub
push
sbb
add
loop
lea
lahf
and
pop
lds
sbb
xchg
shlb
push
icebp
cltd
adc
add
inc
fists
push
ja
sbb
mov
test
push
scas
sbb
pop
rcrl
ds
in
orb
ja
xchg
fstp
enter
cld
cmp
sarl
or
in
push
out
roll
inc
mov
and
push
mov
das
fdivl
cld
ljmp
sub
dec
outsl
xor
xor
psadbw
xor
scas
shlb
add
mov
shl
fildll
sub
cmpsl
out
pop
in
std
push
pushf
sub
push
fs
les
sub
sahf
cmp
stc
and
and
dec
push
or
xchg
inc
xchg
ret
ja
cli
loop
adc
jle
in
and
out
mov
loop
dec
scas
sub
in
mov
shll
xchg
push
xor
sub
sbb
jae
loop
xchg
mov
cwtl
fisubl
mov
xchg
push
imul
push
dec
dec
jae
xchg
mov
popf
cltd
mov
sbb
jno
dec
stc
data16
xor
inc
xorl
push
push
es
sti
lcall
call
sbb
ja
int3
pop
adc
stc
push
fcoms
xchg
rorb
sbb
xor
ljmp
lahf
cmp
ljmp
lds
imul
xchg
sub
sbb
loop
faddl
cmp
nop
adc
sbb
outsb
dec
pop
lods
push
shrl
sbb
and
jb
mov
lret
clc
pop
xor
mov
push
adc
inc
mov
fstpl
fildl
or
stos
popa
cwtl
and
sub
sub
cmp
je
push
popa
pusha
lock
cmpsl
sub
mov
pop
arpl
sub
pop
add
xchg
icebp
lea
loopne
fwait
ss
mov
aaa
rclb
int3
mov
push
clc
fs
push
fdivs
or
dec
ljmp
loope
mov
cltd
mov
mov
clc
cs
jp
fisttpll
xlat
sbb
mov
cmc
and
pushf
pop
dec
loope
sbb
dec
xchg
sub
or
or
fwait
lds
popf
mov
lock
std
pop
xor
or
fisubrs
push
add
rorb
loop
cmc
ret
inc
addr16
daa
xor
or
popf
test
addr16
mov
xor
add
out
shl
dec
mov
push
fidivrl
pop
pop
fwait
mov
pop
mov
negl
mov
enter
mov
sbb
lock
cmp
mov
std
ds
dec
ret
pusha
lahf
mov
inc
mov
pushl
and
xor
clc
stc
je
xor
mov
lret
or
sub
sbb
mov
pop
mov
xorb
jecxz
lret
lret
aas
fstl
sbb
ret
rolb
dec
data16
out
test
pop
pop
adc
rolb
push
inc
aam
insb
js
sbb
mov
and
and
test
inc
pushf
mov
aad
or
mov
pop
mov
adc
fsubr
jp
xlat
sub
pop
jge
cmp
mov
pop
mov
pop
adc
inc
cmp
scas
xor
cltd
inc
inc
sti
repnz
add
cmc
mov
jge
push
push
sti
or
sbb
stos
fildll
pop
pop
push
cmp
push
sbb
enter
push
ret
stc
pop
and
test
scas
add
fdivl
jns
push
movsb
stos
push
mov
orb
mov
sub
dec
pop
xchg
add
cmp
std
fdivl
cmp
rorl
pop
les
mov
inc
cmp
call
mov
ljmp
adc
cli
out
sti
or
push
aaa
push
aaa
push
dec
fwait
inc
ds
and
out
nop
stos
jo
in
inc
pop
jnp
lods
sub
push
inc
jbe
and
pop
add
or
pusha
test
in
jno
xchg
retw
stc
inc
lret
dec
ja
ret
dec
inc
aas
add
add
enter
cmp
ja
clc
aad
repnz
jl
aas
pop
xchg
std
push
imul
mov
adc
ds
ds
add
add
jno
xorb
push
pop
pop
mov
jne
mov
push
pop
mov
cmpsb
jge
movsl
add
or
movsl
add
sti
mov
aam
dec
adc
xchg
dec
aas
dec
dec
push
lret
jno
jbe
push
loopne
js
scas
jno
loopne
mov
lret
dec
enter
sahf
add
fistl
mov
fisttpll
repz
idivb
test
xor
inc
cwtl
enter
leave
lahf
jle
pusha
jb
sbb
xlat
cs
loope
cmp
xor
stc
or
inc
jae
dec
mov
enter
inc
jns
sub
push
stos
xchg
mov
inc
mov
xor
cmpl
or
out
push
sub
imul
test
loope
repz
cld
sub
adc
enter
pop
aaa
stos
cmp
mov
aam
and
icebp
and
adc
jnp
xor
mov
push
scas
stc
cmp
pusha
or
imul
jbe
andb
jno
inc
lret
cltd
xchg
add
dec
jecxz
sub
test
xor
jl
cmp
mov
sub
jo
xchg
xor
sbb
adc
mov
add
fwait
in
cmp
rcl
inc
adc
mov
dec
fs
dec
jmp
aaa
lahf
rol
adc
jbe
or
stc
lods
xchg
mov
daa
inc
loope
push
xlat
pop
or
xchg
in
fisttpll
inc
mov
sbb
int3
add
push
sub
iret
scas
dec
mov
xchg
incl
pusha
imul
add
xlat
jl
gs
mov
xchg
outsl
es
mov
cltd
lock
and
popa
repz
dec
and
shl
ljmp
test
sbb
adc
int
fucomip
fs
loopne
and
dec
in
aad
pop
fisttpll
and
mov
cmpsb
aaa
lret
xchg
std
cmp
js
jge,pn
lds
pushf
add
jae
fidivrs
clc
dec
pop
dec
shrb
sub
outsb
pop
add
out
aad
in
rcr
addr16
mov
xor
out
loop
repz
jo
ss
dec
in
testb
sub
sti
into
xchg
mulb
cmp
mov
xlat
and
stc
adc
pop
jecxz
jp
bound
cmp
flds
xchg
mov
mov
xor
iret
jbe
add
cmp
pop
shlb
fmuls
in
icebp
es
je
cld
pop
push
mov
js
xor
inc
inc
push
push
iret
xchg
notl
or
sbb
inc
xor
mov
and
les
pop
popa
xlat
clc
inc
hlt
ja
mov
jb
dec
lret
insl
in
mov
repnz
inc
jb
push
mov
mov
xchg
inc
push
loop
cmp
hlt
movsl
xor
out
ja
and
in
scas
mov
push
ss
jge
add
and
mov
dec
ja
mov
subb
jae
cmp
mov
test
xor
aas
mov
mov
push
push
lods
mov
adc
add
cwtl
xor
push
jo
xlat
test
mov
mov
std
scas
ja
pop
or
loope
pop
aaa
push
pop
mov
scas
push
add
movsl
pop
xchg
sbb
outsl
sbb
or
fwait
xchg
fildll
adc
leave
dec
xchg
aam
das
in
xchg
sti
adc
xchg
mov
fimull
or
xchg
xchg
ljmp
mov
mov
fists
jmp
sub
rorb
aaa
add
cmp
lret
cld
sbb
arpl
xchg
jecxz
cmp
cmc
jno
fs
scas
pop
dec
les
ss
pushf
fdivl
mov
in
inc
pop
shll
add
fimuls
dec
mov
inc
cmp
add
jp
mov
repnz
xor
adc
shlb
push
pop
fsubl
mov
mov
cltd
mov
and
mov
dec
adc
pop
pop
es
pop
sahf
pusha
jo
xchg
sbb
and
rorl
insl
lock
mov
mov
ds
fwait
jno
xchg
shl
das
jbe
cld
imull
arpl
jg
mov
popa
imul
aam
ja
fdivl
xor
or
mov
add
arpl
testb
jae
push
push
lea
jne
fdivs
out
and
sahf
loopne
icebp
add
out
loope
and
dec
mov
jl
xchg
pop
and
add
cwtl
nop
mov
sbb
cmpb
fisubs
mov
and
imul
adc
sbb
lds
scas
adc
xor
sub
xchg
repz
xchg
es
ss
lds
jnp
pop
repz
outsb
call
cmpsb
sub
sub
add
ret
xchg
inc
jmp
fisttpl
xor
sbb
insl
sbb
js
xlat
inc
out
push
pop
das
lahf
mov
imul
fcoms
test
imul
mov
into
insl
mov
inc
add
jg
cmp
fnstenvs
pop
insb
lds
cmp
mov
add
fwait
adc
pop
in
push
fstps
inc
xchg
es
sahf
inc
fmuls
jns
addr16
rcr
xchg
call
mov
xor
js
icebp
shr
cmpb
mov
fsubr
repnz
mov
mov
enter
aad
in
xor
pop
add
push
sub
lods
pop
cmp
adc
sbb
cmp
hlt
mov
ss
test
das
ret
outsb
mov
cmpsb
and
dec
mov
mov
cmp
and
push
into
roll
lret
insb
out
fisttps
std
mov
inc
aas
mov
pushf
mov
icebp
cli
rorb
movsl
xchg
out
mov
jo
or
push
test
call
shll
clc
xchg
jge
dec
lret
loope
cmpsb
mov
hlt
dec
jno
incb
pusha
std
rorl
mov
fsts
ss
and
cmp
int
outsb
xchg
xor
xchg
test
mov
cmp
leave
inc
shll
fmuls
repz
nop
cmp
mov
xchg
xchg
out
and
jbe
in
mov
cmp
mov
mov
jl
roll
insl
cmp
mov
out
and
fcompl
pop
out
mov
repnz
psrlw
mov
dec
push
mov
cs
rorl
xorl
add
mov
int
addr16
daa
xor
jp
ret
inc
mov
loop
mov
cs
movsb
sub
cld
push
ljmp
in
adc
addb
outsl
cmc
push
jb
cmp
iret
aaa
js
mov
jmp
adc
mov
xchg
ljmp
out
fimull
stos
mov
push
arpl
add
push
popa
jbe
test
push
mov
add
xor
cs
ret
mov
sbb
jnp
mov
push
and
dec
mov
lods
out
push
pop
in
jge
scas
repz
out
aam
sbb
dec
jae
sahf
mov
inc
pop
and
addr16
dec
es
shlb
je
add
sub
mov
inc
add
bound
mov
xchg
pop
sbb
fsubr
dec
inc
mov
insl
clc
adc
cmc
ljmp
mov
and
std
lret
adc
je
les
icebp
mov
or
mov
push
dec
sub
lret
mov
insl
xor
ret
and
pushf
pop
mov
movsl
insb
mov
and
enter
imul
mov
pop
pop
xor
xchg
ret
adcl
out
mov
inc
mov
jge
inc
and
lods
call
imul
sub
stos
rcrb
jmp
ret
xchg
fildll
stos
jp
sahf
mov
stos
push
cmp
mov
lcall
pop
mov
jno
add
cmp
lret
inc
inc
popa
in
push
xchg
aam
add
jmp
mov
xor
or
addps
loop
popf
das
mov
sub
aad
leave
xchg
or
xchg
mov
mov
test
mov
shrb
aad
jecxz
push
shlb
cmpsb
push
lods
and
inc
out
cmpsl
inc
mov
jmp
daa
xor
inc
bound
mov
dec
mov
fdivp
jns
mov
pushl
push
sub
insl
add
cmp
andb
mov
push
push
sbb
gs
mov
pushl
aas
xor
insb
scas
mov
mov
jae
push
call
je
or
push
pop
mov
mov
cmp
pop
fs
sub
frstor
std
popa
xor
lea
es
cmpsl
jo
cs
pushf
lods
xchg
mov
and
jmp
mov
js
leave
fsubp
imul
fdivp
in
nop
mov
jnp
frstor
mov
cmp
sub
and
into
incb
lods
movsl
loopne
popa
push
lahf
mov
mov
mov
jle
fistpl
xchg
pop
cltd
sbb
movsl
mov
mov
and
lret
mov
pop
fldcw
jp
loopne
icebp
loopne
jae
jns
add
hlt
lret
push
sub
sbb
roll
push
aam
movsb
push
rolw
test
adc
cmp
pop
mov
mov
xchg
dec
add
dec
inc
cld
arpl
mov
mov
mov
lret
ss
fstpl
aaa
push
inc
jl
cwtl
repz
cmp
cmc
adc
mov
mov
and
pop
inc
mov
jg
mov
adc
jle
test
xchg
ss
sbb
inc
daa
mov
mov
nop
and
adc
in
leave
pop
fistl
bound
fisttpl
jb
addb
cmc
loop
loop
clc
sub
xchg
jbe
sub
pop
dec
cmpsl
scas
daa
mov
mov
lock
add
pop
in
jge
jge
ds
xor
sub
insl
in
xlat
cwtl
xchg
fxch
loop
scas
push
out
adc
imulb
push
and
jge
mov
mov
mov
mov
cmpsb
fldenv
mov
cli
mov
outsb
mov
rcll
mov
sub
mov
adc
sbb
pop
insb
jns
cmpsb
pop
or
lds
imul
in
lds
data16
sbb
pusha
lds
ror
sbb
or
adc
aas
dec
sub
mov
adc
sub
clc
repnz
or
test
out
outsb
test
mov
int
ja
stos
add
xor
dec
scas
inc
sub
jmp
popf
ss
xchg
das
scas
xor
add
sub
inc
jno
pop
fidivrs
fisttpl
mov
out
inc
adc
sbb
sub
cmp
inc
pop
mov
out
pop
stc
pop
pop
xor
mov
cld
sti
fldl
cmp
sub
test
jb
data16
movsb
jnp
test
jbe
sub
sbb
cltd
jmp
pop
cmpsb
mov
iret
dec
mov
and
xor
jo
icebp
scas
jge
mov
ss
subl
jo
xchg
fwait
mov
inc
sbb
inc
sub
xchg
lahf
xlat
out
xchg
mov
mov
stc
pop
xchg
xor
imul
dec
gs
or
idivb
je
test
pop
scas
repz
pop
inc
add
mov
and
mov
out
xchg
cmp
dec
cwtl
repz
push
inc
add
xor
imul
adcb
int3
outsl
inc
ficoml
jge
ret
xchg
imul
xchg
sbb
hlt
pop
xchg
out
and
js
mov
fildll
out
dec
push
stos
lret
cmp
fsts
mov
pop
pusha
sti
test
mov
or
sbb
mov
jmp
pop
addl
rcll
pop
fsubrs
dec
jg
pop
mov
outsl
sahf
add
sbb
jo
and
dec
xchg
std
add
mov
jle
add
test
out
ljmp
pop
pop
xor
lock
cli
stos
cmp
fidivrl
insl
push
and
leave
decl
or
fs
xor
cmp
outsl
sbb
cwtl
fistps
pop
iret
xchg
cwtd
dec
mov
enter
sbb
adc
andb
orb
ret
ljmp
test
inc
fisubrs
cmp
scas
fwait
sbb
mov
jbe
push
ficoms
hlt
xchg
idivl
cmp
movsb
in
daa
sub
in
dec
mov
sbb
rcll
in
jmp
lods
add
test
and
lods
movsb
push
stos
ljmp
push
es
push
scas
cmpl
loope
mov
js
and
outsl
cwtl
sahf
or
and
inc
or
in
mov
jecxz
push
mov
pop
mov
cs
lds
rcll
mov
loopne
into
sahf
adc
pop
mov
mov
xchg
mov
xchg
jne
sar
jge
cmc
movsl
cltd
adc
mov
push
out
mov
sbb
aam
cmp
nop
lock
add
xchg
shr
jmp
out
push
adc
xchg
mov
or
sarl
xor
inc
xor
mov
pop
ja
das
fsub
jno
and
push
mov
lock
sub
cmp
dec
aad
jge
and
pop
test
lea
and
outsb
popa
dec
divl
stos
and
inc
repz
inc
sub
movsl
adc
mov
aas
mov
and
jo
enter
rol
xchg
ror
std
into
fistpl
daa
cmc
cli
push
sbb
insb
xorb
push
jne
pop
dec
ret
cwtl
bound
std
call
xchg
adc
inc
jg
outsb
arpl
out
cmp
lret
cmp
adc
cli
push
sbb
push
jne
es
jge
pop
inc
or
lahf
aas
mov
aam
xor
pop
adc
push
adc
pop
enter
push
cmp
hlt
and
sbb
mov
pushf
jae
in
mov
lods
aas
or
hlt
pushl
pop
das
cmc
mov
inc
mov
mov
or
sub
fidivrs
push
sbb
loop
fstpl
jle
jae
fisttpll
nop
add
lcall
test
push
lea
aas
lods
cmpsb
pop
lods
or
and
shl
sbb
lds
mov
push
push
xchg
cmp
pop
cmp
adc
iret
cmp
and
push
jno
pop
sahf
xor
inc
lea
and
cli
mov
jge
sub
jg
jbe
std
sbb
jnp
daa
add
sahf
push
and
sti
mov
js
js
cmp
js
jae
out
test
scas
daa
push
mov
lock
inc
push
out
es
ds
fildll
cwtl
stos
in
push
pop
rorl
lahf
dec
xchg
push
daa
xor
sti
xchg
add
movb
mov
pop
inc
stos
ja
int3
jnp
lea
mov
push
jg
push
xchg
stos
stos
test
push
mov
jo
jecxz
hlt
rcll
imul
sbb
mov
repnz
dec
dec
jg
ljmp
add
add
inc
mov
outsb
pop
fcompl
inc
fldt
or
sub
push
cli
mov
pop
lahf
xchg
add
dec
ret
test
cld
outsl
das
test
pushf
das
sbb
dec
jb
jge
jbe
or
pop
fsubs
cld
mov
adcl
add
xchg
inc
pop
cmovl
and
lea
cmpsb
cmp
dec
adc
fldl
mov
or
scas
loop
std
mov
lret
imul
lods
cld
mov
and
xor
ret
lahf
lods
les
faddl
rcrb
repnz
push
cmp
std
jb
xchg
or
or
hlt
popa
fdivrs
rcr
lcall
sbb
imul
in
inc
addr16
sub
das
cmpb
into
adc
shll
nop
dec
loope
pop
fdivrs
out
sbb
inc
cmp
pop
mov
xchg
test
or
mov
mov
cmc
fstpt
push
gs
pop
ret
leave
sub
inc
inc
mov
xchg
push
mov
mov
into
cmp
xor
andl
cli
push
enter
jns
imul
or
push
sub
loopne
adc
xchg
pop
jecxz
mov
data16
scas
pushf
in
fucomip
dec
enter
xor
dec
dec
ret
fistps
stos
data16
adc
adc
dec
and
loope
cld
jmp
cmp
out
ja
inc
xchg
inc
les
sbb
lret
or
sti
scas
out
scas
pop
pop
jnp
dec
pop
sub
lea
dec
outsb
jp
cmp
repnz
mov
jge
clc
insl
fcomip
pop
or
mov
shll
inc
push
loop
mov
bound
in
jp
and
xchg
xchg
stc
jge
pop
adc
ss
lock
shlb
fildl
and
mov
adc
and
adc
xchg
or
inc
mov
insl
clc
xchg
clc
insb
xchg
loope
push
cmpl
xor
lods
add
es
repz
push
jmp
loope
pop
jg
pop
inc
fdivl
and
and
jmp
roll
fstps
addr16
jbe
adc
sbb
test
cmp
mov
sub
jmp
inc
js
inc
movsb
arpl
les
int3
push
fs
dec
cmpsl
ds
sbb
sahf
jb
int
aad
jecxz
xchg
xlat
jmp
mul
pop
mov
mov
adc
mul
jns
mov
push
pop
jns
enter
inc
mov
out
shl
xchg
je
mov
js
cmpsb
adc
cmp
in
adc
jmp
test
and
inc
and
inc
dec
mull
je
xchg
lods
aas
push
xor
pop
xchg
je
in
in
scas
sub
xor
mov
and
out
push
jge
xchg
ljmp
decb
inc
imul
xchg
pusha
mov
xor
rorb
lahf
scas
pop
add
notl
aaa
mov
call
mov
ror
xchg
lods
jbe
outsl
mov
adc
mov
dec
xlat
popa
jne
ss
mov
add
pushf
orl
xchg
aas
lcall
jnp
cmpsl
inc
pop
xorl
ret
and
dec
clc
xor
mov
jmp
out
scas
adc
add
insb
pop
clc
mov
pop
cli
ss
ds
repz
dec
and
test
push
popf
sbb
inc
or
mov
xlat
call
aaa
rcl
xchg
jo
cmpsl
movsb
cltd
inc
pop
sbb
sbb
push
adcb
push
sub
aas
stc
cmc
mov
adc
nop
jecxz
push
xchg
xor
in
push
push
inc
leave
pop
xor
fidivl
inc
lock
xchg
aas
cmc
cmp
xor
xchg
pop
ret
in
sbb
or
mov
aam
paddusw
jge
cmc
adc
call
or
inc
xor
sahf
push
cli
cltd
gs
pop
hlt
pusha
push
js
imul
cmp
jno
std
sub
cli
add
mov
inc
cmpsb
ds
mov
add
rolb
xchg
insb
fs
lcall
inc
cltd
pop
decb
pop
add
and
mov
and
fisubrl
add
pop
ljmp
xor
and
lods
push
mov
fwait
in
dec
xchg
fiadds
cltd
lods
xor
out
add
icebp
mov
test
push
mov
or
clc
shlb
gs
add
jmp
xchg
push
pushw
mov
fimull
in
cmpsl
es
pop
push
mov
mov
pop
movsb
cli
mov
sub
pop
adc
enter
xchg
fsub
mov
mov
fs
lret
aad
sub
pop
outsl
daa
jl
push
mov
add
or
push
rcrl
inc
adc
xor
aad
leave
dec
into
fs
lret
jle
sbb
dec
popf
inc
jns
sbb
xchg
or
loopne
mov
repnz
ja
or
push
pop
shlb
les
sub
mov
mov
lock
sbbb
jge
decl
ret
out
lret
xchg
das
dec
mov
mov
xchg
inc
cwtl
add
or
pop
mov
inc
mov
aas
fwait
xchg
push
add
sub
push
ds
adc
int3
cmpsb
mov
dec
fmuls
mov
xchg
fcoms
sub
in
add
sub
pop
cmp
sub
mov
mov
jne
sub
ja
sub
cmp
stos
dec
add
sti
push
sub
mov
xchg
cmpl
xlat
lret
sbb
mov
fiadds
mov
mov
ret
xchg
push
and
jnp
jmp
sub
xchg
aam
push
sbb
push
mov
dec
xchg
jl
xlat
loop
dec
je
cmp
ret
clc
pop
mov
out
out
negb
xor
add
mov
fstpl
jecxz
xchg
jp
stos
in
mov
adc
sub
pop
ds
les
dec
fimull
mov
push
test
pavgb
out
nop
daa
add
insl
jb
flds
add
stc
inc
push
mov
add
arpl
fucomi
cmp
cmpsl
add
push
pop
adc
sahf
fistpll
xchg
repz
mov
int3
test
dec
ljmp
mov
call
mov
insl
jo
in
add
bound
scas
fisubl
push
or
push
punpcklwd
xchg
xchg
rcl
xor
mov
jno
fdivrs
aam
mov
pusha
rcl
sahf
or
mov
ljmp
pushf
cltd
cmp
inc
pop
xor
sbb
adc
ljmp
test
fisubl
jecxz
or
adc
mov
and
adc
dec
mov
push
xor
daa
sub
dec
cmpsb
inc
cltd
pop
jmp
push
js
dec
insl
add
ffreep
jns
mov
enter
js
xchg
inc
pusha
push
xor
scas
mov
into
data16
cld
shll
pop
push
mov
out
bound
out
mov
imulb
jb
lahf
pop
roll
add
inc
daa
push
mov
movsl
sahf
fadds
ret
dec
pop
imul
pop
rcl
lock
inc
jmp
cmp
out
andb
lods
mov
push
and
or
xchg
adc
inc
jg
jo
fdivs
or
mov
mov
mov
filds
je
decl
cmp
outsb
push
mov
jmp
and
pop
or
imul
outsb
pop
jb
dec
xchg
and
pop
push
loope
push
push
xchg
aas
int
outsl
or
push
fdivrl
inc
outsb
inc
dec
fimull
xor
jle
pop
idivl
in
inc
ss
mov
scas
js
cli
push
and
addr16
clc
adc
insl
imul
stos
mov
inc
pop
sbb
dec
in
pusha
mov
movsb
dec
xchg
inc
push
lock
jbe
push
out
xchg
xchg
les
ret
ret
jl
mov
pusha
andl
jecxz
ret
icebp
xchg
pop
jg
dec
sbb
or
inc
fs
mov
push
mov
adcl
pop
shll
xchg
cli
scas
and
pop
sbb
les
call
dec
in
dec
sbb
les
jb
pop
loope
loopne
mov
insl
xor
loope
icebp
jmp
push
xor
out
cmp
mov
enter
pushf
shl
insl
mov
or
xlat
insb
jp
adcb
push
data16
shll
sub
dec
in
rcrl
cmp
enter
mov
push
xchg
je
jns
mov
mov
sub
ja
loop
pop
and
std
xchg
pop
in
shll
fldenv
mov
jmp
pop
icebp
jo
imul
mov
pop
movsb
mov
jg
mov
xchg
sbb
mov
sub
xor
outsl
xlat
jb
shll
jle
out
sub
cli
pop
or
sbb
and
xchg
mov
mov
aad
ljmp
add
inc
jno
xchg
rol
xchg
lcall
cli
cmp
dec
out
sbb
push
pop
mov
pop
fistl
xchg
and
lret
popa
in
dec
mov
out
into
ficoml
fstl
xor
add
std
add
and
xchg
xorl
rcl
jl
outsl
cltd
loop
dec
xor
fwait
mov
cld
fsubl
lock
add
cmp
ja
out
adc
xchg
sbb
sub
repz
xlat
mov
sbb
mov
pop
rcrb
lods
or
mov
pop
dec
subb
pop
les
fs
jb
daa
add
xchg
mov
sbb
aaa
out
outsb
sbb
mov
mov
icebp
fiaddl
or
repnz
notl
mov
sbb
mov
or
jg
inc
pop
jnp
cmp
jmp
ljmp
cmc
rcll
lahf
sbb
pop
xchg
push
andb
and
sub
xor
pushf
xor
sbb
dec
dec
add
mov
mov
xor
jl
mov
cmpsl
aam
xchg
sahf
adc
and
stos
xchg
pop
push
notl
and
jbe
xchg
sub
nop
loopne
cmc
outsl
fs
sub
stos
cltd
inc
push
fwait
dec
sub
push
ja
pop
lcall
jecxz
lods
jmp
bound
sub
xchg
cmp
ss
fdivl
xchg
xlat
stc
jmp
mov
and
fmuls
getsec
out
inc
lea
jmp
mov
mov
cmp
push
xchg
int
pop
push
ljmp
imul
js
xchg
jo
test
fcoms
sub
sbb
jae
out
add
scas
in
xchg
inc
stos
enter
dec
xchg
lret
addr16
add
out
push
cmp
popf
jg
ud1
imul
or
sti
loopne
imul
out
xchg
mov
in
cmp
hlt
mov
mov
imul
rcll
mov
leave
jno
sub
inc
xchg
jnp
cmp
lahf
lock
push
mov
jb
push
into
push
int
or
xor
vprotb
jle
push
in
lcall
fimuls
lcall
xchg
lods
jmp
aas
stc
push
pcmpgtw
cmp
icebp
cmp
fcmovnb
jno
inc
movsb
test
add
ret
or
jmp
in
popa
dec
out
sbb
sub
mov
inc
and
lock
jo
fstpt
adc
lea
sub
repz
cmpsl
loopne
sbb
sub
bound
pusha
lea
in
bound
mov
cmc
xchg
cmp
cltd
mov
fdivl
sbbb
sbb
jp
pop
int
sarb
ret
cmp
movsl
mov
je
cmp
and
insl
mov
add
popf
mov
stc
mov
cltd
add
cmp
movsl
inc
int3
sti
xor
or
jae
jno
lods
mov
je
stos
pop
ja
pop
ds
push
mov
xor
jecxz
or
mov
jne
sbb
jne
jle
notb
out
aas
testl
sub
jo
mov
mov
scas
and
inc
test
ja
push
lret
or
dec
adc
mov
add
cwtl
lock
xor
mov
cmc
fmull
sbb
dec
lock
jmp
inc
push
mov
fcompl
or
lcall
add
call
fldenv
inc
movl
out
pop
jae
shll
mov
cmpl
cld
test
push
cmpsb
mov
leave
pop
dec
jns
and
loopne
mov
and
outsl
ret
mov
lds
loopne
aaa
pop
ss
push
ds
inc
dec
insb
lods
cmc
fbld
lds
jns
in
rep
into
loop
jo
pop
cmp
cwtl
nop
mov
scas
loope
pop
lods
sbb
test
adc
adc
insl
int3
pop
pushf
rolb
pusha
jb
out
stos
fwait
pop
popf
faddl
out
aam
fwait
lock
xchg
pop
dec
push
test
popf
data16
push
mov
sbb
aam
lcall
cli
lea
dec
in
dec
inc
jo
push
sub
mov
outsb
mov
fstl
jmp
out
mov
inc
mov
mov
movsb
into
outsb
or
pop
pop
xchg
popf
js
mov
mov
les
sbb
clc
loopne
add
std
pusha
loop
xchg
pop
jnp
stos
push
addb
mov
add
lods
enter
add
pop
inc
add
ds
gs
stc
pop
orb
push
arpl
out
mov
push
nop
imul
mov
xor
jmp
cwtl
sbb
shll
xchg
xchg
insl
mov
enter
cmp
adc
mov
cmpb
inc
out
inc
sub
insl
fmul
insb
or
mov
adc
frstor
mov
sahf
mov
aam
push
pop
orb
fcomi
lahf
xchg
mov
mov
dec
mov
in
pop
or
inc
jo
sbb
ss
adc
divl
rep
lods
repz
or
ljmp
mov
lahf
mov
xlat
pop
ds
add
xor
adc
int3
rcrl
and
dec
cmp
mov
mov
negb
mov
aaa
or
jae
mov
pop
shr
sbb
and
mov
stos
jns
push
xlat
and
pushf
stc
testl
lods
and
cs
repz
cltd
hlt
pop
into
cmp
xor
outsl
or
pushf
adc
enter
cwtl
push
lods
cmp
xor
cmp
loope
scas
sbbl
add
sub
inc
or
xchg
inc
pop
jae
sbb
jmp
push
in
mov
push
inc
sti
xlat
and
mov
clc
xchg
out
neg
inc
xchg
daa
add
insl
nop
cmpsb
xchg
add
divb
test
fs
or
fsubs
pop
jg
lret
sbb
mov
aaa
jge
mov
insl
fwait
xchg
insl
ret
and
shll
aad
out
leave
xor
adc
pop
imul
and
into
lods
sbb
add
int3
pop
sbb
push
push
imul
fdivs
inc
nop
dec
jp
mov
sbb
push
jle
clc
mov
test
lods
pop
cmp
mov
out
cmp
rorl
gs
and
pop
jmp
dec
cmp
mov
cmpsb
cld
push
push
popa
pop
ds
or
jne
dec
clc
push
pushf
add
jb
cmp
insl
fld1
inc
jb
lods
mov
popf
shrl
addr16
jp
pop
xchg
cmp
into
jg
mov
mov
push
loopne
and
ret
mov
in
cmp
loop
int
in
setbe
repnz
mov
add
dec
push
pop
sub
aas
mov
aam
xchg
or
test
stos
xchg
pop
lea
fisttps
add
mov
push
pop
push
lock
hlt
jnp
lret
mov
sahf
mov
rolb
dec
iret
cld
fiadds
cmc
inc
int
dec
stos
push
xor
rclb
mov
jmp
in
movsl
aaa
rcrb
add
lods
bound
ret
push
pop
xchg
mov
ljmp
popa
inc
adc
loop
pop
xor
arpl
push
lahf
divb
aas
sbb
es
pop
sbb
adc
sbb
test
push
add
xor
addl
jb
mov
add
mov
rolb
jp
rcrl
push
xlat
sub
fisttpll
cmp
divb
rorb
insl
or
or
mov
sbb
push
daa
shll
jbe
je
jne
outsb
mov
xor
aas
loop
add
dec
push
fwait
sbb
cmc
scas
adcb
scas
and
ds
cmpsb
pop
gs
push
jp
stos
fstl
and
mov
adc
xchg
fiadds
test
cwtl
dec
popf
icebp
pop
jmp
and
out
fiadds
cmp
movsb
pop
adc
daa
mov
insb
movsb
push
or
adc
mov
ss
push
movb
in
push
cltd
cwtl
jnp
and
stc
pop
test
outsb
test
jnp
mov
insl
cs
sub
jbe
daa
dec
dec
aaa
shlb
mov
and
insb
icebp
pop
cwtl
cld
sub
xor
jp
into
clc
push
daa
loop
mov
push
lret
cld
jne
iret
shl
push
movsl
lret
cmp
outsl
setbe
cmp
shl
or
push
mov
add
sub
imul
pop
add
lds
mov
and
into
in
push
pop
jno
mov
orb
mov
popf
sub
add
pop
mov
in
and
es
and
sar
aad
cmpsb
ja
sbb
fnstcw
shr
nop
push
and
rorl
add
jmp
rol
adc
mov
push
outsl
out
fcom
jno
xchg
stc
or
sti
sbb
sahf
test
je
out
inc
stos
pop
sbb
lahf
and
push
jl
inc
dec
dec
frstor
dec
and
leave
jp
or
pop
fnstenv
jg
lret
inc
jno
mov
icebp
adc
and
cmp
push
sbb
ret
mov
rcl
cmpsl
or
cmp
pop
jmp
add
add
mov
mov
repz
dec
lret
imul
gs
leave
mov
cmp
jl
xchg
mov
or
sbb
mov
xchg
mov
icebp
icebp
stos
jno
arpl
push
enter
pop
adc
jp
lds
fbld
js
ret
sahf
rclb
pop
adc
sbb
or
sti
cmp
or
mov
push
lcall
stos
add
ljmp
or
lcall
mov
popa
das
hlt
cld
pop
iret
int
or
mov
bound
leave
push
movsb
mov
shl
pop
rorl
in
int3
fbstp
xor
cmpsl
cli
and
fcomp
shl
xchg
push
xchg
adc
notl
sar
pop
lock
gs
outsb
ret
pop
mov
push
dec
fistpl
add
push
lods
cwtl
lods
mov
mov
xchg
dec
dec
xchg
ja
stos
pop
xor
sti
int
out
cli
movsb
pop
push
mov
push
je
mov
sub
in
mov
jp
dec
test
rcrl
out
and
pop
stc
mov
je
pop
sub
cld
loop
xchg
inc
mov
jnp
out
orl
fldenv
lahf
std
dec
scas
popf
jmp
inc
or
mov
jnp
xor
xor
sar
inc
loopne
orb
jg
xor
inc
inc
pop
push
xor
cwtl
test
mov
dec
add
shll
pop
jae
loope
stos
psubsb
lods
addr16
outsb
pop
xchg
inc
negb
lea
daa
or
inc
fdiv
ficoms
loopne
mov
pop
cmp
inc
push
ret
sbb
mov
jo
mov
and
xor
cmpsb
mov
adc
adcl
enter
in
aad
adc
shll
fisubl
inc
lea
out
test
call
and
cmp
pop
arpl
and
pushf
jb
mov
aam
loop
xchg
cmp
fwait
push
cmp
push
adc
mov
cmc
pusha
xor
cwtl
dec
aam
mov
aad
movb
and
sub
or
sbb
xor
inc
jne
inc
push
sbb
adcl
or
and
std
std
cltd
jne
jg
test
mov
xor
jbe
mov
out
rorb
sbb
stos
cmpsl
lods
xor
jno
mov
jbe
mov
cli
fcomip
int
shll
sbb
jp
out
mov
test
lret
dec
xchg
imul
jno
rcr
cmpsb
xor
jl
mov
jge
mov
adc
xlat
les
bound
outsl
aam
jl
push
scas
add
stos
test
ret
jns
jge
addl
or
mov
adc
add
ffreep
add
rolb
imul
cmp
popf
pusha
mov
cli
scas
pop
adc
adc
iret
push
add
xor
mov
mov
daa
mov
dec
jns
shrb
in
add
lret
push
jno
xor
outsl
lret
sub
pop
sahf
mov
sub
push
pusha
les
iret
mov
imul
subl
add
xor
and
and
mov
and
shrb
aam
ret
dec
adc
and
comiss
adc
adc
outsb
mov
addr16
xor
roll
push
and
std
lahf
lds
mov
pop
pop
xor
rorl
dec
inc
outsl
fnstcw
out
idivb
shrl
mov
das
into
add
ljmp
ja
ljmp
cli
push
cmp
sbb
cmp
sub
stc
dec
enter
dec
mov
ja
mull
sub
xchg
testl
mov
sti
mov
aaa
mov
mov
cmp
mov
fwait
call
ds
popa
push
out
sbb
cmc
notb
mov
jb
scas
mov
bound
js
pushl
aas
mov
lcall
cwtl
dec
test
dec
int
sbb
fmull
nop
push
xchg
adc
shrl
out
jge
mov
mov
pushf
sub
xchg
jmp
cmp
sahf
cwtl
shrl
aad
pushf
shll
mov
push
rorb
cli
cltd
mov
jne
pop
xor
push
inc
loop
jp
pusha
imul
fstpl
shll
push
push
jns
pop
mov
aam
js
push
mov
mov
test
ja
test
mov
scas
scas
mov
inc
fldenv
addb
push
scas
fcompl
sbbb
pusha
in
les
push
scas
in
pop
popf
sub
std
stos
adc
les
cmp
add
and
mov
xor
pop
insb
dec
pop
cmp
mov
ret
stos
adc
je
das
pop
cmpsl
cmp
sub
or
xchg
mov
mov
enter
dec
jp
adc
and
jp
sub
std
dec
aam
mov
mov
and
popl
sbb
lahf
and
mov
cmpsl
push
inc
fs
pop
scas
repz
jg
das
fidivs
lods
in
and
adc
lock
cmp
jl
or
mov
mov
mov
adc
sbb
aaa
mov
push
mov
mov
insb
mov
jne
pop
xchg
popa
in
or
jle
add
push
and
cmp
xor
sub
inc
mov
cmc
rcl
cmp
dec
outsl
lcall
lret
iret
ja
mov
xchg
lea
shr
jge
push
push
cmpsb
inc
jnp
std
shufps
push
addr16
xor
test
mov
repnz
ret
cmc
pop
push
mov
add
cmp
pop
mov
sbb
sahf
test
cmp
inc
mov
inc
mov
push
add
sbb
dec
mov
push
lods
cmp
adc
sbb
mov
roll
fbld
lods
cmp
sahf
jbe
rorb
xor
js
insb
lods
xor
add
or
xchg
jbe
insl
inc
xchg
mov
pop
lret
jg
aaa
adc
orb
push
loope
ljmp
loopne
xchg
stc
xor
mov
imul
ss
push
mov
pop
mov
popa
sbb
mov
inc
sbb
cmp
pop
adcb
push
mov
mov
mov
and
and
insb
js
lret
sbb
and
mov
push
and
jp
int3
cmp
sbb
mov
inc
xchg
sarb
ror
pop
shll
pop
enter
stos
lahf
test
mov
push
mov
sbb
cmp
ficoml
cli
and
mov
das
test
jle
stos
adc
outsb
and
lods
lahf
jbe
jecxz
jbe
mov
fmull
and
dec
ret
jmp
jmp
pop
hlt
loopne
add
lea
mov
in
dec
pop
sub
test
adc
xchg
int
push
cmp
mov
pop
daa
mov
jmp
arpl
sbb
mov
fucomi
pushf
pop
stc
adc
pushf
sarl
loop
mov
shlb
cmpsl
push
rolb
imul
icebp
mov
dec
ja
mov
es
aaa
out
fnstenv
sub
inc
sub
bound
stc
pop
nop
jns
sar
stos
add
in
frstor
lret
mov
and
lods
gs
dec
test
xchg
adc
int
add
outsb
and
cmp
sbb
loop
stos
mov
sub
ret
es
jg
cmp
gs
pop
fidivl
push
mov
mov
lds
pop
int
or
dec
adc
lahf
sub
dec
push
js
imul
mov
cmp
xchg
cltd
or
pusha
sub
insl
jg
iret
push
push
sbb
inc
dec
jmp
or
sub
jno
imul
sbb
push
push
fs
mov
sarb
sub
in
sub
dec
push
movsb
xchg
out
sbb
movsl
sbb
push
jg
loopne
mov
nop
sub
jge
gs
hlt
mov
inc
pop
pop
jnp
pusha
stc
cwtl
jmp
lcall
push
jp
aam
xor
repnz
ficompl
pop
aaa
adc
cmc
loope
lret
movsb
lods
fs
pop
pop
outsl
sub
bnd
mov
out
inc
loopne
pop
dec
push
adc
push
lea
add
cltd
repz
pop
fucomi
scas
xor
pop
dec
jecxz
fsubl
sahf
das
fwait
xchg
push
mov
insb
addr16
int
jecxz
ret
cmp
and
fldenv
fisubl
inc
pop
clc
notb
dec
inc
stos
outsb
fwait
mov
mov
mov
dec
fnstcw
je
dec
inc
jg
in
jnp
push
addb
mov
xchg
int3
dec
mov
sbb
add
inc
sbb
rcrb
mov
add
and
mov
mov
decb
pop
repz
push
xchg
lret
int
dec
or
cmpsb
xchg
mov
cmpsb
inc
cld
cmp
loop
std
ror
mov
push
popf
sub
ja
mov
int
adc
jle
loop
mov
push
add
jne
es
test
or
dec
cmpsl
dec
push
cwtl
movsb
xlat
iret
sub
ds
lret
mov
arpl
sbb
push
push
pop
pop
or
daa
xchg
jae
jns
lret
stos
jle
movsb
pop
push
lea
cmp
scas
cmp
or
mov
add
sbb
roll
jbe
adcl
fsubs
pop
les
ret
imul
inc
mov
jp
xchg
sub
addb
rcl
repz
xchg
xor
test
ds
jbe
fadds
andl
xor
call
mov
ljmp
mov
sub
dec
ret
rcll
sbb
push
ja
ja
cltd
enter
dec
sub
inc
add
mov
ss
sbb
imul
test
and
inc
call
mov
insl
sub
push
lods
in
ds
add
aad
pop
sub
aas
imul
mov
in
jns
sub
xor
lea
daa
mov
dec
push
negb
jne
call
movsl
dec
aad
and
pusha
add
mov
dec
inc
push
fsub
mov
mov
sbb
jae
and
imul
xchg
jb
xor
jecxz
cmpl
xchg
sahf
ds
pop
loop
push
xchg
xcrypt-cbc
cmpsl
push
cmp
aaa
imul
add
nop
fidivl
int3
sbb
notl
popf
mov
mov
dec
cld
inc
jecxz
xor
or
jo
dec
pop
in
call
pop
cmp
xchg
pop
sbb
pop
inc
push
push
sbb
mov
mov
sbb
mov
mov
bound
mov
lea
pop
out
inc
mov
fnsave
jg
push
jbe
add
xchg
mov
pop
dec
in
dec
movsb
scas
push
jo
pushl
push
pop
xchg
sub
scas
mov
adc
xchg
les
lret
lahf
mov
jg
mov
dec
in
add
dec
lods
and
mov
ret
mov
add
lods
inc
mov
jge
leave
mov
adcl
and
pop
es
in
jo
insb
int
ficompl
jmp
push
pop
orb
repnz
outsl
ljmp
fnsave
fiadds
mov
sbb
scas
subl
aad
or
jl
add
xor
or
sbb
mov
fnstenv
pop
lahf
shlb
ror
in
xchg
mov
dec
outsl
sbbl
test
mov
dec
int
insb
and
pusha
add
aad
std
out
or
int3
ja
mov
inc
jb
mov
jae
cld
jbe
sub
int
in
nop
sarb
or
bound
pop
or
push
testb
adc
jl
pop
push
leave
mov
ss
notl
dec
add
movb
mov
repnz
dec
outsl
or
jae
mov
scas
rorl
test
or
imul
mov
stc
out
insb
sub
and
mov
test
mov
dec
sub
jecxz
lods
je
dec
mov
ljmp
lret
dec
push
mov
test
sbb
xchg
jmp
add
xor
in
sbb
cltd
cs
xchg
cmp
in
xchg
mov
arpl
sahf
stos
je
mov
dec
lret
xlat
and
pop
cltd
pushl
movnti
xor
mov
pushf
sahf
push
adc
divl
test
rorl
int3
movsl
test
in
mov
inc
jg
jb
cld
sub
jne
out
add
icebp
js
add
or
fs
std
inc
sbb
imul
cs
rorl
enter
and
cmpsb
adc
add
jp
xor
popa
sub
dec
jg
push
push
push
sbbl
bt
aas
js
repz
xor
mov
std
rcrl
add
daa
inc
pop
decl
xor
jbe
idivb
lock
gs
test
in
mov
push
fistps
pop
jbe
cmp
lahf
jno
leave
xchg
jge
mov
es
cmp
loopne
fidivrs
bound
push
daa
test
out
jle
adc
loope
or
sbb
cmpsb
pop
aas
xor
xchg
loop
xor
rcll
jno
aad
ror
mov
stc
dec
dec
insl
mov
mov
jno
mov
idivb
push
ret
hlt
sti
xchg
out
xchg
adc
xor
mov
stos
mov
add
dec
ret
insb
jnp
cmp
xor
lock
jge
mov
sbb
xchg
ret
xchg
mov
fcomp
repz
xchg
or
lret
and
scas
sbb
stos
push
in
mov
aam
mov
lret
pop
fcomps
xor
lret
rcr
lret
mov
sub
push
xchg
ret
fmull
test
mov
movsb
mov
xchg
inc
enter
in
and
test
mov
rclb
pop
out
rclb
inc
sbb
outsl
mov
das
adc
aad
test
inc
outsl
jg
in
xchg
sbb
sbb
xchg
stos
dec
dec
cmp
ret
and
mov
mov
rorl
aad
fnclex
xor
insb
inc
call
cmp
push
push
dec
rorl
movsb
fdivrl
push
insl
pop
scas
push
mov
ljmp
jp
fisubs
insl
out
shll
outsb
sbb
imul
aas
testl
pop
fwait
xor
dec
out
out
out
cmp
int3
outsl
xchg
mov
adc
add
inc
test
jnp
dec
xchg
mov
daa
mov
insl
imul
lret
lock
xlat
add
jne
inc
stos
aad
push
xchg
stc
jno
jle
int
fidivs
fdivl
int3
pop
popf
mov
test
xor
pop
xchg
les
inc
js
add
push
ljmp
xor
into
add
jmp
faddl
aas
icebp
lahf
xchg
xchg
mov
jb
mov
repnz
test
addl
in
pop
sbb
ljmp
movsl
adc
jno
and
push
test
and
xchg
flds
lcall
mov
sarb
add
mov
mov
jle
xorb
inc
and
mov
adc
mov
and
mov
in
jbe
mov
mov
ss
push
in
repz
dec
xchg
sbb
mov
push
or
push
icebp
dec
push
mov
push
xchg
xchg
insb
popf
jle
inc
pop
push
or
bound
nop
and
clc
faddl
nop
das
add
pop
pushf
adc
xchg
outsl
es
lret
fisubl
push
daa
movsl
pop
mov
lods
lods
aaa
in
in
push
adc
or
inc
jmp
icebp
bound
dec
popa
gs
aad
push
sub
mov
imul
aas
fldt
iret
cli
xor
js
jp
sti
nop
mov
ss
sti
scas
dec
loopne
xor
js
dec
push
popf
arpl
and
pop
lcall
mov
pushf
push
fldt
xchg
incl
aaa
and
lds
mov
dec
imul
jmp
sti
pop
cs
pop
pop
outsl
jecxz
jnp
jns
inc
add
or
xchg
push
dec
je
aam
mov
shlb
cmp
je
shlb
push
es
inc
mov
mov
dec
inc
sbb
ret
nop
pop
cmpl
stc
loope
in
fsts
pop
mov
sub
dec
sub
outsb
stos
cmp
and
xor
add
cs
dec
lahf
pushf
mov
clc
cli
adcl
jp
arpl
lea
jmp
lret
aas
cwtl
lods
inc
xorl
cli
mov
ss
jnp
mov
add
inc
jmp
fists
mov
and
cmpsb
or
or
cmpsl
dec
pop
adc
xchg
xchg
in
fwait
mov
jecxz
jb
xchg
cmp
push
insl
jle
loopne
fcmove
test
popf
pusha
int
add
mov
xchg
push
shlb
dec
inc
push
pop
dec
mov
jno
mov
sbb
add
xor
loopne
adcb
insb
xor
jg
out
sbb
adc
xchg
nop
fcmovbe
aad
mov
daa
std
mov
lea
hlt
mov
stos
sbb
imul
lret
xchg
imulb
aad
out
pushl
out
testl
les
inc
icebp
fildl
lods
adc
pop
movsl
loop
mov
dec
mov
sarl
sbbl
or
cmp
hlt
xchg
mov
call
xchg
pop
add
outsb
jmp
dec
fimull
cs
test
push
mov
nop
jecxz
inc
nop
adc
bound
scas
addr16
xchg
mov
adc
lret
jle
fcoml
xor
outsl
push
xor
pop
lret
out
mov
or
out
mov
xchg
cwtl
adc
mov
push
jns
lahf
call
adc
sbb
cs
jno
cmpsl
scas
scas
cmpl
cmp
shrl
negl
add
ja
fimull
out
mov
in
scas
addr16
scas
add
in
ret
mov
inc
sahf
add
sub
mov
ja
negb
or
xlat
inc
stc
popa
mov
test
inc
mov
ss
repz
aas
test
lret
xchg
cmpsb
xchg
inc
inc
xchg
and
and
pop
in
arpl
mov
adc
fwait
pop
ret
fnstcw
lock
jno
jge
ret
int
cwtl
cmc
jne
xchg
js
cmp
ss
outsl
xor
pop
jp
call
das
test
in
in
inc
pop
adc
rorl
lcall
mov
xchg
xchg
adc
iret
outsl
in
push
enter
push
pop
or
mov
xlat
cmp
stos
ret
xor
stos
mov
dec
jbe
iret
stc
xor
inc
fdivl
repnz
sbb
es
push
sbb
sub
fdivrl
in
mov
icebp
sub
inc
lods
clc
push
int3
pushf
add
test
pop
jecxz
int3
pop
lcall
sub
sub
jbe
andl
push
insl
outsl
pop
ret
insl
pusha
inc
in
mov
pop
jae
insb
inc
movsl
aam
mov
xchg
mov
add
lock
xor
push
mov
add
sbb
xchg
out
shll
sub
push
fisubl
fwait
add
xcrypt-ctr
cmpsl
pop
xor
push
mov
dec
leave
mov
jns
push
repnz
outsl
pusha
call
cmp
xor
mov
lret
mov
mov
jmp
movsb
stc
dec
insl
jne
lea
cltd
enter
imul
outsb
pusha
stos
pop
add
push
sub
push
out
icebp
lahf
mov
sub
test
shll
sarb
std
or
push
lret
mov
enter
shll
cli
or
lods
xchg
je
cwtl
addb
cltd
shl
or
xlat
loop
js
or
cmp
jge
fs
inc
jle
adc
fwait
cmp
cmp
into
jecxz
cmp
sbb
enter
stc
fidivl
inc
fstpl
xchg
and
or
scas
repz
pop
cmpsb
adc
sbb
push
std
int
push
jb
mov
std
js
dec
bound
inc
in
jb
popf
xorb
fcompl
gs
in
cmpsl
loopne
or
pop
rcl
cmp
rorl
icebp
out
mov
mov
inc
add
push
add
fmulp
lock
sti
mov
scas
inc
data16
nop
lret
xor
lock
push
sti
addr16
mov
je
cmp
pop
cmp
out
mov
iret
xchg
or
lret
call
aas
enter
fldl
lret
int3
jle
divl
aaa
xchg
pop
movsl
pop
repz
out
cmpsb
call
out
or
mov
add
pop
test
scas
adc
clc
out
leave
mov
shlb
cmp
js
mov
test
idivl
mov
or
mov
jbe
sub
mov
sub
and
sub
add
test
addr16
inc
dec
pop
add
loop
icebp
dec
clc
jmp
roll
add
pop
push
and
sarb
cmp
jne
aam
and
popf
push
xor
push
inc
icebp
add
leave
adc
dec
leave
push
imul
sbb
std
xor
sub
sbb
adc
pusha
clc
push
addb
fs
push
mov
das
push
adc
inc
jo
stc
rolb
jnp
jle
adc
jno
into
push
mov
cwtl
in
mov
cmc
je
sbb
dec
arpl
sub
sbb
cmp
xchg
push
xor
fidivrl
ret
int
ljmp
sti
mov
push
mov
cltd
jne
fdivl
shrl
mov
aas
movsb
pop
jmp
leave
adc
jecxz
das
repz
setno
jl
xchg
sub
lods
xor
dec
arpl
and
jns
cld
movsb
or
jnp
mov
pop
add
dec
mov
jne
inc
pop
loop
movsb
pop
add
mov
mov
cltd
push
inc
sub
xor
repz
gs
daa
rclb
rolb
push
mov
insb
push
adcb
xlat
push
shl
cwtl
adc
rol
repz
aaa
mov
negl
pop
mov
and
push
inc
cld
and
mov
and
jmp
lods
adc
hlt
mov
or
mov
add
out
mov
inc
nop
gs
inc
push
outsb
push
dec
mov
stc
clc
pop
std
loop
fisubrs
ja
mov
mov
test
push
lcall
popa
or
lock
ljmp
in
or
xorb
nop
test
xor
xor
out
pop
mov
pop
repz
into
jae
js
inc
adc
lahf
pop
jnp
or
mov
mov
xor
mov
xchg
rcr
rcrb
jg
dec
daa
cld
das
adc
mov
and
jb
push
pop
adc
jl
xlat
rclb
movsb
inc
fcmovnu
cmp
stos
xchg
repz
cld
cld
das
or
push
cwtl
mov
inc
clc
icebp
in
arpl
fwait
out
aam
add
ret
mov
mov
lods
lds
or
lahf
shlb
imul
sub
loopne
je
xor
xchg
cli
xchg
inc
pop
mov
mov
add
movsb
sub
mov
cmp
mov
rcrl
xchg
jbe
pop
or
mov
ficoms
jnp
or
test
fsubrp
or
push
mov
fcmovu
mov
jle
addr16
xlat
pop
mov
testl
push
lret
cmpsl
test
popf
xchg
out
sub
mov
inc
loope
movsl
adc
cmp
mov
lcall
lret
jno
pop
shlb
jl
nop
into
push
rol
or
mov
lds
and
pop
testl
mov
dec
subl
inc
mov
loope
push
pop
or
mov
inc
xor
cld
push
jns
inc
mov
frstor
fidivs
mov
add
dec
movswl
scas
int
mov
adcl
cmc
add
fsubl
movsl
pop
mull
xor
addr16
cmp
push
push
pop
adc
sbb
dec
ret
mov
aas
jmp
outsl
lret
lods
jae
aad
xchg
addr16
xor
xlat
sti
pop
aad
or
lea
imul
sbb
lcall
jns
repz
sub
lock
shrb
bound
lock
inc
and
arpl
imul
fs
and
arpl
push
dec
dec
aas
decl
fldenv
xchg
mov
lods
xor
push
cwtl
ror
push
cmpsl
push
dec
vandnps
mov
icebp
stc
add
call
sub
adc
in
sbb
int
mov
ljmp
dec
bound
shrl
repz
add
mov
rolb
popa
xchg
popa
pop
adc
popf
lea
imul
jl
nop
out
xor
inc
pusha
mov
test
xchg
mov
arpl
loope
subb
adc
lcall
inc
fnstcw
repnz
pop
sub
shld
ljmp
dec
popa
rclb
mov
pushf
ja
pop
fabs
push
and
sub
mov
pop
pop
adc
pusha
lahf
sbb
icebp
xor
aad
movsl
mov
lret
or
and
cmp
mov
inc
mov
daa
add
push
push
cmp
fistpl
mov
ret
lahf
daa
aam
cmp
sarb
popf
adc
es
in
mov
sarl
push
jbe
aaa
mov
jmp
or
imul
dec
rcll
inc
mov
jle
int3
lods
ja
sbb
adc
adc
mov
cld
mov
jp
xchg
cmc
xor
cwtl
icebp
orb
insl
shl
or
xor
pop
fbstp
jmp
enter
rcpps
fcom
inc
or
fsubs
icebp
pop
adc
ret
xor
jmp
add
cld
jmp
imul
cld
xor
scas
ljmp
xchg
ja
je
jle
int
mov
pminub
psllw
cmpb
adc
sbb
stos
xchg
cmpsl
cltd
push
lret
adc
push
mov
test
out
je
mov
sub
jne
and
jns
mov
pop
popf
mov
inc
dec
jmp
dec
shlb
shufps
in
popa
xor
mov
lahf
mov
jns
push
xor
ret
push
or
cltd
shll
adc
push
aas
push
and
jb
mov
sbb
aam
mov
xchg
clc
dec
inc
dec
mov
sub
xor
mov
lea
add
push
dec
rcrb
and
call
add
pop
cltd
imul
shll
out
int3
mov
loopne
popf
rcll
xchg
sbb
scas
stos
jbe
inc
aas
out
popa
mov
scas
addb
addr16
sub
hlt
imul
loope
outsl
scas
sbb
icebp
loopne
mov
cmp
add
call
fiaddl
out
popa
idiv
add
fstpt
sub
call
push
mov
add
xchg
loopne
mov
push
add
xlat
mov
outsb
push
dec
loope
lret
push
push
leave
insl
idiv
clc
add
das
jns
enter
push
ret
inc
shrl
js
rolb
and
jae
out
lods
push
stos
xchg
xchg
cmp
pop
ja
cmpsl
das
insl
stc
sub
int3
xchg
das
push
icebp
cmp
in
gs
sub
jl
xlat
aam
arpl
rcll
cld
leave
cmp
cmp
lret
xchg
adc
lahf
mov
outsb
xor
test
jle
mov
add
popf
pop
xchg
shrb
sub
ss
xor
xor
xor
outsl
inc
rcrl
mov
xor
fisttps
adc
add
push
jmp
mov
stc
cvtps2pi
lds
into
std
push
ljmp
sub
cmp
ja
mov
out
test
ljmp
filds
out
push
mov
stos
repz
and
mov
jae
sub
push
inc
enter
pusha
mov
ljmp
add
das
fldt
test
das
js
mov
adc
cmp
in
dec
ss
out
mull
push
cmpsb
loope
jae
push
mov
push
mov
mov
pop
sbb
sbb
mov
out
add
fmul
nop
inc
cmp
ret
es
inc
mov
fisttpl
sbb
cmpsb
movsb
add
push
into
cmpsl
shrb
call
inc
int
lods
mov
push
and
rcrl
push
fcmovnu
pop
lahf
test
or
mov
clc
test
add
jne
sub
dec
sbb
push
and
cmp
adc
flds
sub
fidivs
cwtl
jbe
fcompl
cmp
or
lcall
lcall
flds
enter
cmc
jp
inc
mov
mov
dec
pusha
das
xchg
mov
xchg
push
pusha
dec
pop
mov
mov
add
ret
jae
insl
cmpsb
mov
or
in
push
addb
loopne
xor
mov
insb
jmp
xor
ss
xchg
pushf
std
pop
xor
out
es
pop
jp
int3
xchg
sahf
push
inc
adcb
cltd
movsl
js
adc
int
xor
aam
mov
jecxz
out
push
xlat
shlb
scas
sub
and
mov
rorb
dec
xor
mov
int
stos
inc
add
mov
mov
cmp
sub
xchg
fildl
ficoml
and
pop
inc
sbbl
mov
jle
outsb
dec
add
jb
and
test
popw
cmc
add
mov
push
je
sbb
out
popf
fildl
xor
mov
js
mov
pop
psrlq
mov
fdivrs
fildll
dec
adc
test
or
aas
sarl
rcrl
setae
xchg
scas
cmp
int
pop
imull
adc
popa
xchg
sub
stos
push
pop
inc
xor
add
xchg
cmpl
add
stc
icebp
add
aam
bound
jno
or
or
mov
xor
cwtl
dec
jb
rol
sbb
mov
pusha
dec
int3
add
sub
xchg
xor
pop
insl
lods
jmp
enter
xchg
je
cs
push
je
lods
inc
push
mov
xor
dec
sbb
inc
in
pop
sub
aaa
lret
mov
aaa
mov
mov
mov
sub
cli
jo
pop
jnp
pop
test
jne
and
mov
jno
icebp
inc
add
and
push
shl
inc
fwait
adc
lods
aam
addl
pop
dec
ss
lods
push
adc
add
pop
xchg
scas
sbb
outsl
and
cld
pop
mov
shll
roll
pop
jnp
pop
out
js
and
mov
jbe
mov
outsb
inc
aad
mov
xchg
xchg
mov
inc
ficompl
mov
fstps
push
rcr
js
hlt
rclb
stos
sar
icebp
add
outsb
xchg
arpl
push
add
icebp
bound
scas
or
incl
mov
fstps
mov
test
pop
call
jbe
push
in
outsb
es
xchg
or
and
cmc
lea
adc
aam
lds
stos
les
scas
fimuls
push
sub
pushf
pusha
lret
inc
das
inc
frstor
les
jp
adcb
xchg
mov
mov
enter
and
incb
pop
orb
mov
cmp
lds
xor
mov
popf
cmp
xor
or
in
add
shlb
xchg
xchg
aas
aas
into
es
dec
and
cmp
call
xor
imul
xchg
pushf
pop
test
xor
jle
push
adc
fnstenv
push
mov
sbb
in
xor
push
test
push
lahf
int3
ret
test
jne
in
pop
in
aaa
mov
int3
test
add
test
mov
into
jnp
cmpl
jnp
jno
push
out
jb
das
test
insb
sbb
push
insl
mov
ud0
mov
inc
js
and
in
mov
xor
jo
and
xor
imul
mov
sbb
fldenv
or
lret
jne
or
push
cltd
push
in
inc
lret
mov
xchg
mov
or
add
fisttps
je
push
sahf
push
out
xchg
mov
scas
imul
mov
fmul
cmp
add
dec
push
fidivs
pop
shlb
cwtl
jl
rcll
xchg
and
jmp
in
repnz
into
hlt
and
aaa
nop
arpl
inc
xlat
addr16
mov
imulb
fimuls
inc
lahf
or
leave
pop
sub
fcmovne
pop
push
in
push
out
dec
mov
xchg
or
out
sbb
push
test
inc
jno
jne
popa
addr16
insb
and
add
push
lods
inc
shl
lds
ss
shrb
pop
aam
push
jge
add
pusha
mov
das
ret
xchg
pusha
out
sub
pop
stos
adc
outsw
clc
mov
rcr
hlt
repnz
push
push
fs
lods
into
inc
daa
insb
mov
pop
push
ret
test
into
ret
adc
je
xchg
inc
jg
lret
adc
mov
sarb
cmpsl
jnp
xchg
dec
mov
or
mov
into
negb
fdivs
add
mov
imul
pop
lds
push
cmp
cltd
xchg
dec
add
xor
mov
int3
inc
cmp
int
es
push
or
adc
jae
scas
cld
imul
ficoml
sub
jae
int
jg
add
fwait
jbe
jl
mov
push
jbe
imul
int
aaa
rcll
call
inc
pop
push
xor
das
test
shll
xchg
test
inc
scas
lds
jbe
dec
test
loope
mov
arpl
inc
fwait
rorl
mov
pop
js
xor
scas
mov
test
jbe
lods
inc
hlt
ja
out
int
xor
push
std
shrl
pop
js
jmp
mov
and
aas
int
xor
and
sbb
movlps
lcall
sbb
jge
mov
mov
jns
sbb
or
mov
imul
dec
adc
and
mov
xchg
jae
out
xchg
inc
mov
pop
inc
bound
jmp
fs
mov
cld
das
and
js
int
dec
push
jnp
dec
mov
dec
and
and
add
outsl
sub
xor
mov
and
sbb
push
or
cmp
dec
in
imul
cmp
cmp
insl
pop
cwtl
sub
ss
repz
xchg
pop
and
into
push
pop
add
add
test
jp
jecxz
je
fwait
ss
push
addr16
inc
ljmp
sub
popf
rcll
and
cmp
test
or
clc
jp
inc
cli
js
jbe
mov
movsl
add
push
xchg
outsb
jb
ror
or
lea
sub
pop
sbb
sahf
adc
daa
or
mov
lahf
jne
pop
and
aad
add
loop
test
fcomi
out
mov
mov
imul
or
or
test
loopne
push
xor
dec
xchg
movsb
ss
negl
mov
negl
inc
jb
mov
andb
xor
add
lcall
stos
sub
or
es
fimull
lea
inc
nop
sbb
xchg
push
mov
popf
cmpsb
fistpl
arpl
pop
xor
pop
push
pop
mov
aas
popf
js
stc
adc
test
pop
js
lods
jae
cmp
xchg
dec
and
ror
push
xlat
push
push
xlat
or
mov
inc
out
adc
xor
lret
cltd
mov
pop
les
cld
jno
les
out
movsb
dec
aaa
push
scas
sarb
jne
mov
into
test
fs
mov
cltd
daa
icebp
jecxz
push
nop
ds
dec
add
sub
sarb
bound
jl
push
and
cmc
cmp
mov
and
inc
lds
cmpb
push
jge
mov
mov
cmp
lock
dec
or
jnp
fmull
pop
or
xor
shr
and
addr16
mov
int3
cmpsl
fwait
inc
pop
sbbb
gs
ljmp
cli
jb
ror
and
jl
push
mov
inc
add
jae
mov
mov
sbb
fnsave
and
out
or
pop
mov
popf
fbld
imulb
push
add
inc
fldl
push
push
and
jmp
outsb
lods
out
movsb
fmuls
fwait
jns
xlat
push
sub
jo
xchg
push
or
xchg
cld
es
jecxz
jge
dec
xchg
movsb
jo
cmc
inc
insb
mov
pushl
fistl
stos
movsb
push
and
les
enter
insb
inc
out
pop
imul
add
faddl
dec
cmp
push
push
popf
idiv
les
mov
aas
fdivs
xor
stos
inc
in
push
mov
push
stc
mov
and
stos
cltd
mov
sub
inc
sbb
jne
loopne
or
add
fisttpl
fistl
in
sub
out
sbb
xor
and
jecxz
push
sub
and
sbb
add
xor
sbb
push
imul
cmpsl
cmp
and
mov
insb
int
jmp
movsl
xchg
rcll
jns
dec
repz
mov
jecxz
int3
stos
inc
xor
mov
mov
mov
and
scas
idivl
cmpsb
cmp
push
jb
decb
xchg
xchg
cli
in
das
std
movb
ds
cld
out
sbb
or
in
roll
dec
into
mov
clc
mov
mov
aaa
repnz
adc
mov
movsb
and
pop
jnp
clc
inc
shr
or
cmp
pop
das
dec
mov
sbb
push
and
jo
jae
pop
out
sub
push
fistpl
xor
push
fs
out
xchg
jle
sub
insb
outsl
xchg
stos
arpl
aas
ja
ret
loopne
xchg
orl
std
sbb
insl
sub
out
add
in
pushf
or
stos
add
dec
push
mov
sub
lock
repnz
mov
cs
mov
rol
pop
sub
fisttpl
and
or
dec
inc
and
in
incb
and
lods
ret
and
mov
jge
in
push
mov
scas
pop
sub
dec
subl
jl
in
xor
in
lea
push
sbb
out
idivb
sub
adc
mov
sbb
inc
test
ret
stos
mov
cmp
jns
mov
or
xchg
mov
outsb
or
push
jg
pop
mov
pop
cmp
inc
push
xchg
xor
cltd
dec
sub
lods
add
lods
mov
push
insb
ljmp
dec
pop
push
adc
cmp
mov
sub
pop
aad
adc
sub
addl
lods
fsubs
loopne,pn
pop
sbb
stc
mov
cmp
push
lods
xchg
lret
out
mov
mov
adc
and
pop
and
mov
jmp
pop
push
mov
cltd
adc
ret
or
popf
push
mov
js
cltd
xchg
push
sbb
cs
jg
dec
not
mov
fs
jmp
push
mov
in
pop
pushf
arpl
pop
nop
call
mov
shlb
orl
dec
repnz
push
adc
call
mov
xor
inc
movsb
push
pop
xor
mov
stc
adc
mov
mov
out
and
setl
out
mov
sbb
sub
jge
mov
xor
cld
mov
sub
inc
cmp
out
sbb
jge
ret
cmc
mov
jnp
loopw
inc
lahf
mov
mov
adc
filds
lcall
notb
movsl
gs
mov
pop
cs
mov
iret
pop
cmp
jecxz
sub
push
mov
mov
inc
sub
sbb
mov
cmp
xor
call
pop
je
loopne
xchg
push
sbb
mov
lahf
jg
and
dec
mov
call
mov
mov
mov
repz
imul
enter
or
adc
mov
and
int3
and
loopne
popf
xchg
hlt
movsl
add
pop
dec
dec
fisttpl
daa
mov
cmpsb
jmp
lock
ds
scas
push
xor
mov
cwtl
repnz
in
call
popa
pusha
cmp
push
push
out
into
inc
jge
mov
popa
shlb
popf
mov
rcl
test
stc
inc
push
fcompl
inc
sub
out
hlt
push
mov
pop
mov
cwtl
out
cmp
ja
stos
sahf
cmp
xor
or
adcb
jbe
lea
fistps
jp
mov
mov
iret
fdivl
sti
in
push
adc
jnp
scas
push
xchg
sub
shll
or
lea
mov
pop
mov
ja
cmp
aad
mov
add
les
or
xchg
or
and
cli
sub
add
push
mov
adc
outsl
xchg
mov
push
ret
sbb
je
cmp
jmp
bound
shr
xchg
sub
repz
sahf
dec
repnz
into
push
push
aaa
movsl
std
cmpsb
dec
xstore-rng
cmpsl
les
or
xchg
mov
and
mov
jae
dec
jb
sub
push
fimull
insl
push
mov
aad
or
hlt
add
imul
lcall
outsl
adc
iret
pop
cmp
insb
cmp
mov
mov
out
std
out
lea
adc
rclb
mov
mov
and
mov
bound
dec
lods
mov
mov
add
test
testb
pop
jbe
cmp
sti
push
mov
dec
bound
xor
jecxz
lret
adc
mov
or
adc
lcall
pop
enter
adc
stos
stos
test
daa
outsb
inc
in
pop
xor
push
mov
sbb
repnz
sub
cmp
out
xor
push
xor
shlb
and
fisttps
xchg
ljmp
call
sub
pop
out
inc
insb
and
repnz
mov
jge
lock
pop
xor
outsl
outsl
shl
push
cmp
fisubrs
je
push
in
hlt
ret
mov
pop
test
test
ljmp
jg
adc
mov
cwtl
pop
jecxz
dec
and
stos
daa
fistpl
dec
ss
jno
int
xor
add
es
mov
out
jne
fdivrl
xchg
sti
mov
imul
dec
add
test
sbb
loope
inc
testb
fstpt
pop
cs
xor
mov
popa
std
fisttps
sbb
and
cld
jecxz
jo
push
push
mov
mov
sub
mov
movsl
idiv
cmpsl
lods
test
cs
jmp
mov
and
pop
xchg
add
mov
push
fildl
clc
std
sub
in
mov
push
or
pop
insb
js
test
inc
out
cmpsl
loopne
xor
cwtl
pop
xchg
pop
xor
out
rorb
stos
es
hlt
mov
inc
test
outsb
xor
sti
dec
sbb
pushf
test
stc
fs
jno
push
inc
ret
sub
inc
sbb
fucomi
imul
ss
inc
mov
cmpsl
push
jae
dec
add
sub
jbe
xorl
arpl
loope
mov
mov
jb
push
inc
cmpsb
cmpsb
int3
xor
cli
nop
into
xchg
aaa
push
aas
xchg
jno
pop
mov
lock
lods
js
cmp
repnz
mov
rolb
or
jle
lcall
pop
push
jl
jle
dec
mov
sub
or
xor
xor
cmp
xchg
dec
push
out
mov
mov
jl
insl
add
jno
fcmovu
ret
iret
adc
jmp
out
fsubrp
shlb
jecxz
mov
xor
xchg
dec
sbb
push
out
imul
or
call
mov
pop
mov
sbb
sbb
mov
call
imul
fadd
and
add
fldpi
jbe
insl
lret
cs
or
add
faddp
mov
xchg
decb
mov
jno
das
cs
add
aaa
lea
dec
aad
pop
rclb
rcrb
mov
push
sbb
aam
lock
lock
aad
sub
out
or
mov
adc
lret
xchg
adc
inc
inc
add
in
dec
inc
sbb
add
sbb
and
adc
mov
mov
inc
bnd
cmp
dec
lea
add
aaa
jmp
cwtl
xchg
mov
je
jne
inc
sbb
insb
mov
das
push
test
adc
out
sub
lds
push
fldt
mov
xor
add
loop
sbb
cmp
and
fimull
int3
aad
popf
sbb
movb
jbe
xor
scas
jmp
int
in
sbb
ljmp
sti
movsl
imul
jge
inc
hlt
xor
inc
or
or
repnz
mov
add
cltd
or
and
mov
aas
cmpsb
fadds
adc
and
aas
out
clc
insb
xor
movsb
push
addr16
sti
cwtl
jge
aas
cld
xor
push
xorb
and
aad
test
cmp
enter
mov
loop
iret
sti
xor
mov
cli
sbb
jl
stos
mov
and
fdivrs
jno
je
adc
sti
sbb
lahf
test
stos
fcmovu
addr16
push
xchg
jp
outsl
cmc
lcall
jecxz
pcmpgtd
hlt
add
dec
lret
and
outsl
xchg
rolb
mov
xchg
inc
addr16
out
test
aad
mov
mov
pop
inc
jle
stos
pop
and
push
scas
std
pop
and
and
push
add
in
outsb
mov
jle
push
push
dec
jmp
jo
mov
das
aaa
shr
xlat
in
dec
cmp
adc
test
and
mov
and
ds
lret
stc
clc
add
fs
daa
jb
cltd
mov
sbbl
iret
inc
dec
cmp
mov
pop
xchg
mov
and
adc
xor
push
adc
testb
std
add
mov
mov
out
and
and
outsl
testb
stos
movl
add
bound
es
jge
push
cmpsb
push
mov
xchg
in
cmp
pop
lret
fiaddl
outsb
lods
xor
aas
xchg
fs
insb
mov
jae
fwait
mov
add
out
scas
fstpt
lds
push
jns
ljmp
loopne
sbb
and
cltd
aas
xchg
jns
icebp
fsubrl
cmp
cmp
xor
xlat
lds
jl
inc
mov
test
imull
sub
mov
rcrb
pop
pop
fcoml
test
ret
xor
inc
and
es
push
adc
das
and
in
xchg
out
jnp
sti
mov
mov
dec
out
sbb
jg
loope
jge
faddl
adc
insl
inc
ret
movsl
popa
es
pop
xchg
mov
jmp
pop
mov
ret
fmulp
jae
xchg
jns
and
push
push
dec
sub
lds
dec
pop
pop
xor
insl
dec
ret
sub
in
push
bound
adc
aam
xlat
dec
mov
jb
push
jl
mov
roll
movsl
push
mov
mov
push
fistpll
jg
rorb
sbb
mov
cmp
aaa
jle
addb
dec
fnstenv
out
push
jge
jnp
mov
insb
jnp
arpl
mov
jo
shlb
cli
fcmovnb
dec
mov
addr16
outsb
loopne
and
dec
mov
fucomp
es
fcoml
sub
mov
ficomps
out
xlat
mov
movsl
ljmp
out
pop
mov
jne
jle
or
mov
jb
stos
lock
dec
decl
ret
pushf
imul
jecxz
dec
sub
inc
popa
fwait
fwait
pop
push
loopne
mov
mov
mov
inc
sbb
or
in
mov
loope
lods
sub
adc
adc
adc
add
leave
and
rolb
xor
adc
sbb
sti
cltd
dec
fwait
xor
and
dec
repnz
pop
in
dec
lods
cmpsl
jge
mov
mov
in
inc
es
sub
dec
js
jbe
fdivrl
rolb
mov
stc
in
test
xchg
cmp
mov
or
jo
xchg
cmpsl
pop
jns
mov
xor
cld
jp
sarl
std
clc
jg
inc
xchg
aad
nop
in
or
xchg
add
push
cmc
mov
fs
sub
sahf
out
pop
mov
outsl
inc
mov
stos
sub
enter
mov
dec
push
mov
push
scas
and
aam
jle
mov
mov
les
out
lods
push
mov
sub
mov
sbb
or
call
mov
or
pop
jg
push
movsl
inc
std
mov
icebp
arpl
insl
dec
les
mov
dec
and
mov
out
mov
and
or
loopne
out
leave
xchg
outsl
push
lds
fnstcw
inc
xor
mov
and
xchg
add
adc
cli
mov
push
xchg
fnstsw
mov
mov
inc
or
push
xor
movl
popa
mov
adc
test
jns
imul
push
xor
inc
or
int3
mov
push
scas
xorb
xchg
lret
mov
insb
and
push
insl
or
xchg
pop
sub
shlb
loopne
adc
jne
int
and
scas
jp
xchg
and
inc
and
jo
jae
and
dec
gs
mov
mov
fxch
lret
mov
and
and
add
repnz
jno
or
jl
test
fiadds
cmpsl
in
shrl
sub
cltd
xor
jp
mov
or
jae
push
and
mov
sbb
sti
aas
jne
out
xchg
adc
daa
push
aas
mov
stc
xor
adc
jl
daa
and
mov
inc
mov
jne
mov
mov
dec
cmp
pop
xchg
cmc
test
aad
test
mov
mov
sbb
mov
mov
movsb
mov
dec
inc
adc
lock
xor
outsl
jne
sub
ffreep
lock
inc
aas
lods
fildll
lock
cld
xchg
jp
repnz
and
cwtl
lods
add
mov
mov
orl
push
inc
jno
dec
mov
dec
inc
dec
sbb
arpl
push
inc
bnd
sarl
test
xchg
lods
sbbb
leave
push
mov
inc
gs
xor
int
stos
ret
xlat
mov
add
aad
sub
sets
mov
fadds
jo
mov
xchg
fs
push
jae
adc
mov
enter
out
popa
dec
popa
xor
xor
xchg
mov
lret
cmpsl
jne
push
sbb
movsl
pushf
adc
js
push
repnz
cwtl
mov
or
xchg
mov
and
stos
cmpsl
in
mov
les
stos
cmc
mov
sahf
lea
xchg
mov
inc
movsb
mov
sbb
loope
fsubrl
sub
sbbb
loopne
hlt
xor
dec
and
sti
lock
lea
testb
inc
ljmp
ja
xchg
mov
imul
sbb
sbb
jge
and
jg
sub
jne
pop
popf
jae
arpl
xor
out
sub
sbb
pushf
fistl
sub
sbb
pop
popf
int3
mov
add
movsl
cmp
jmp
and
test
addr16
cmc
adc
cltd
sub
cmp
imul
xchg
fbstp
aam
xor
ss
pop
fiaddl
fistps
pop
clc
sbbl
out
movsb
pop
and
and
sub
xor
or
inc
subb
and
push
test
loop
andb
inc
ja
loop
sub
int3
mov
xor
inc
fstps
sahf
xchg
jg
and
lock
movsb
or
jne
repnz
fnstsw
fbld
lret
pop
test
aaa
loope
pop
in
test
inc
sub
in
addr16
push
loopne
test
fdivs
out
inc
pop
jmp
fs
jno
cltd
xchg
lods
inc
adc
ds
push
loop
aas
adc
stos
fadds
dec
cmp
rcr
into
cmp
rcr
aaa
ss
jge
setle
std
xchg
cmpsb
iret
loopne
dec
sub
lret
jl
pop
pop
inc
sbb
jo
aas
jno
adc
add
vsubss
mov
aaa
dec
stc
sti
ja
out
cmp
mov
movsl
loope
mov
sbb
idivl
xor
inc
and
and
lods
fmul
mov
daa
mov
cltd
and
adc
daa
das
add
push
enter
outsb
inc
cld
aaa
stos
sub
lahf
and
in
mov
inc
mov
lahf
in
xor
sbbb
lods
insb
adc
mov
int
or
es
mov
test
mov
ret
mov
ljmp
mov
and
out
data16
dec
popf
movsb
or
inc
adc
insb
int
adc
xchg
or
imul
stc
shlb
xor
cmp
sahf
cltd
cmp
pop
mov
sti
repz
int3
insb
xchg
sub
std
add
mov
rclb
ljmp
jp
mov
push
fisttps
sahf
lock
pop
int3
mov
cmp
mov
outsl
aam
insl
clc
add
testl
mov
add
adc
push
aad
and
xchg
arpl
insb
pop
pop
iret
aas
push
adc
in
and
xchg
fs
add
xor
imul
cmpsl
insb
sub
repz
je
sub
dec
mov
sbb
pop
dec
inc
xchg
int3
lods
out
out
or
ss
addr16
scas
imul
nop
mov
pop
sub
jae
mov
pop
inc
mov
jl
push
lret
mov
xchg
or
pop
and
inc
xchg
jo
je
aaa
in
pop
jge
loopne
repz
xor
in
sub
cmp
dec
cmp
adc
mov
add
push
insl
pushf
stc
lea
ret
call
mov
inc
push
sub
popf
jnp
add
cmpsl
inc
sbb
popf
pop
subps
pop
ljmp
les
mov
fwait
mov
lods
or
rcll
jge
mov
fs
mov
fsubrp
iret
dec
inc
adc
adc
ds
add
and
out
xchg
xchg
cmpsl
repnz
leave
or
add
mov
xor
mov
or
mov
insb
nop
dec
pushf
and
dec
outsl
out
cwtl
xor
push
jns
mov
aad
xchg
scas
adc
pop
push
or
push
inc
mov
in
lcall
in
jecxz
sti
cmpsl
lcall
mov
mov
mov
mov
mov
mov
and
sub
ljmp
pop
pop
xchg
mov
das
mov
test
sub
inc
sbb
sbb
pusha
or
sbb
lods
mov
arpl
add
cmp
adc
add
inc
sub
or
xchg
add
faddp
sbb
mov
dec
sub
sub
mov
test
pushf
lea
add
pop
push
xchg
mov
push
add
shll
push
sub
adc
sub
enter
push
sub
push
pop
cmpsl
mov
dec
inc
inc
pop
lds
or
xchg
mov
and
xchg
push
or
push
dec
in
xor
cmc
sub
or
dec
inc
jmp
adc
or
pop
stos
icebp
push
jbe
pop
mov
dec
mov
cmp
ljmp
ja
pop
shll
jb
push
sbb
in
mov
push
add
mov
push
mov
inc
cmpsl
ret
pop
das
mov
push
push
push
jno,pn
testl
lods
adc
xchg
sahf
and
jo
out
fsubrl
sub
xchg
sub
ljmp
jnp
testl
add
cld
repz
dec
sub
jno
pop
popa
jle
pushf
insl
enter
cld
mov
jl
cmp
gs
jo
orl
cmp
stos
clc
sahf
push
inc
test
or
jnp
nop
fisttps
mov
hlt
xchg
and
dec
push
mov
mov
cltd
xchg
aam
repz
sbb
adc
lea
xor
jb
lcall
or
das
cmp
arpl
pop
xor
insl
sbb
test
push
into
mov
call
inc
push
mov
cltd
enter
ljmp
mov
cmpsb
adc
jo
jne
cmp
bound
or
syscall
or
mov
fcoms
add
jb
lahf
adc
cmpsb
paddsb
mov
and
or
mov
xchg
cmp
mov
pushf
cmp
add
add
xor
mov
pop
in
and
adcb
push
outsl
mov
xchg
sti
out
xchg
sub
push
leave
js
sub
mov
push
rol
and
jo
stos
rcrl
push
and
test
stos
iret
gs
sbb
mov
lock
je
fwait
hlt
add
sub
test
pushf
or
shlb
pop
lret
pusha
cmp
xchg
repnz
out
push
fwait
pushf
test
shl
jne
mov
lods
shlb
fildl
push
sub
outsl
cmpsl
sub
jne
sbb
push
in
int
std
xlat
std
cwtl
movsl
cmc
mov
pop
mov
mov
lock
xor
xchg
je
inc
sbb
jmp
cmpsl
sbb
dec
out
fsubs
add
jns
push
push
imul
or
push
loop
pusha
sub
xchg
imul
aam
push
arpl
inc
jge
outsl
push
or
mov
or
test
xchg
and
lods
dec
adc
es
cli
push
adc
nopl
and
jp
or
sahf
sub
ret
rorb
mov
lds
mov
pop
inc
push
ret
ss
insl
shrl
adc
stos
sub
or
leave
popa
test
mov
dec
jmp
pop
imul
pushf
xchg
push
test
pop
jb
negb
dec
cld
mull
sub
lds
mov
mov
sbb
sub
inc
jmp
sub
dec
iret
mulb
inc
mov
dec
out
inc
cmpsb
neg
aas
out
add
xor
cwtl
mov
mov
lahf
adc
mov
dec
ret
pop
fcmove
add
jns
jbe
mov
mov
cmp
sbb
inc
shl
mov
test
or
stos
jno
push
cmpsb
mov
ds
sub
or
cmp
cmp
faddl
mov
pop
pop
mov
xor
loop
cwtl
fcomps
fists
lahf
xchg
pop
out
inc
out
xchg
push
sub
dec
loop
and
push
sbb
stos
jl
cs
imul
nop
sbb
xor
aaa
stos
adc
ret
lea
andl
cs
jmp
in
cmovns
sbb
aaa
popa
outsl
jl
push
andb
mov
jl
cld
outsl
xchg
imul
mov
mov
cmpsl
popf
cmc
adc
lret
or
imulb
xor
outsb
adc
stos
cmp
out
and
pop
push
xchg
loope
int3
jbe
imul
fdivrl
push
mov
es
jl
test
aam
loope
inc
mov
in
and
inc
inc
nop
mov
jle
mov
loop
popf
fsubrs
mov
pop
ret
dec
in
call
data16
lock
cmpsl
shr
pop
popf
test
mov
xor
xchg
test
fildll
cli
adc
cmp
repz
jae
hlt
and
inc
aad
hlt
stc
xchg
pop
xchg
and
mov
adc
cli
ficomps
hlt
cltd
iret
jne
mov
mov
int3
push
pop
gs
push
xor
push
dec
push
out
in
pop
insl
add
lock
sti
aam
mov
hlt
push
dec
inc
push
sub
mov
xchg
aad
movb
push
and
mov
lahf
loope
aad
loopne,pt
xor
sbb
mov
pop
loope
mov
out
push
jl
add
add
int
add
sbbl
lret
cmp
scas
mov
sub
movsl
lods
inc
inc
mov
mov
add
jo
sub
and
fstps
div
jno
lcall
sarl
fiaddl
cmp
sub
sbbl
cmp
mov
movsl
fucomp
inc
cmpsl
loope
rcrb
repnz
mov
dec
les
add
inc
sub
sbb
or
out
mov
dec
das
out
nop
and
jnp
jecxz
mov
sahf
cltd
ljmp
fdivrl
scas
sub
leave
mov
and
add
dec
lock
scas
push
clc
enter
and
adc
daa
mov
das
pushf
inc
outsb
pop
aam
scas
popa
rcl
adc
jae
mov
mov
incl
addr16
stos
in
add
dec
push
ss
sbb
aam
out
mov
andl
aam
sbb
das
leave
cmpsb
push
sahf
xor
and
lea
stos
sub
add
hlt
dec
fndisi(8087
jnp
insl
xchg
jo
cmp
icebp
and
fnstsw
and
xlat
xchg
xchg
insl
out
ret
mov
sub
push
sarl
or
or
xor
jg
jg
int
leave
mov
inc
adc
dec
mov
push
std
sub
dec
push
fnstenv
cmc
outsb
imul
xchg
ds
hlt
cmpsl
jmp
fadd
loope
cmp
dec
notl
adc
xor
icebp
shl
mov
in
and
mov
cmp
mov
cmpsl
int3
push
cmp
addl
cltd
lods
sub
shlb
pop
push
push
loopne
pusha
stos
and
pop
push
push
cmpsb
in
shl
cmp
pop
pop
ret
mov
mov
dec
jge
icebp
scas
fadd
clc
and
cmp
cmp
or
outsl
idiv
mov
inc
cmpsb
mov
fisubrl
icebp
aam
dec
addr16
pop
gs
and
cmc
mov
loope
adc
cmpsb
int3
pop
push
mov
rol
push
pushf
and
xor
push
pop
sub
and
cmp
mov
xor
test
ljmp
mov
rorb
mov
push
call
mov
adc
mov
add
lock
mov
test
in
mov
leave
nop
pop
jl
jle
xor
add
dec
call
out
aad
repnz
mov
stos
push
int3
js
es
xchg
xchg
lods
or
mov
cmp
cltd
sub
jge
cmp
sbb
mov
enter
push
aaa
popa
jle
inc
cltd
fldenv
fwait
outsl
inc
cltd
rclb
push
aam
dec
scas
mov
cmp
inc
adc
pop
aam
jbe
ret
cmpsl
mov
pop
fidivl
sbb
sti
cmpsl
inc
aam
pop
mov
add
lret
iret
shl
test
scas
jbe
pushf
insb
daa
sbb
lcall
mov
xchg
loop
icebp
jnp
xchg
mov
jb
mov
je
popf
lds
stc
mov
xchg
lods
xchg
imul
test
adc
sbb
jp
xchg
je
fcmovnbe
ret
mov
adc
xor
stc
inc
add
out
lahf
and
mov
jne
cli
ret
ss
lock
mov
mov
out
mov
push
subl
mov
xor
mov
scas
insb
das
xchg
testb
push
xchg
or
jmp
add
mov
lock
jmp
mov
ret
mov
shrb
notl
dec
inc
dec
ret
jnp
dec
fwait
inc
iret
lret
push
daa
bndldx
mov
rcll
mov
dec
cli
cmp
mov
fisubrl
lods
shll
pop
mov
fcoms
arpl
pmulhw
test
adc
jne
enter
loop
jae
aad
pusha
sub
mov
xor
dec
sub
jbe
fbld
inc
fcmovbe
and
or
mov
test
rol
ljmp
sub
testb
frstor
xchg
cltd
je
pop
jg
ja
inc
mov
mov
xchg
lods
loop
mov
mov
popa
leave
and
popa
jmp
das
ffree
inc
inc
out
repnz
pusha
cli
lahf
push
pop
mov
xchg
in
les
leave
pop
or
push
dec
mov
xor
push
rolb
out
push
jle
call
clc
xor
shrb
cld
pop
imul
fdivl
sub
fcoms
lret
pop
addr16
xor
je
cmp
cwtl
out
cli
inc
mov
ret
pop
out
or
add
jg
jmp
mov
cmp
cmp
mov
push
lret
nop
dec
cmpsb
mov
mov
mov
repnz
stc
add
clc
in
push
mov
cld
cs
push
out
dec
es
lds
sti
push
in
xor
cli
jno
push
or
scas
adc
adc
lods
fdivrl
mov
mov
scas
addr16
dec
pop
pop
sbb
mov
arpl
dec
inc
add
subb
cmpsb
arpl
push
push
push
jo
jne
pusha
mov
mov
imull
push
shlb
jne
cld
mov
jbe
into
pop
fucomp
icebp
xchg
push
clc
lahf
push
jns
add
mov
mov
in
cmc
mov
push
jg
and
fdiv
sub
je
gs
pop
mov
in
andb
xor
fsubrl
adc
sub
xor
test
outsl
mov
mov
lods
jmp
mov
fcoml
movsb
insb
mov
push
repnz
sbb
xlat
scas
fsubrs
or
insb
jo
dec
inc
inc
dec
pusha
mov
xor
push
xor
adc
xor
outsb
popf
pop
aam
xor
loopne
sbb
xchg
mov
lods
les
pop
xchg
xor
stos
insl
push
cld
mov
ret
push
in
lahf
insb
pop
push
and
mov
cld
lods
adc
addb
inc
mov
ret
mov
cld
mov
bound
je
pop
or
dec
mov
popf
xor
cmc
push
lea
xchg
aam
cmp
scas
push
sbb
jo
cmp
fsubl
sub
and
leave
les
mov
dec
fidivrs
mov
pop
movsl
shrb
sub
mov
cwtl
adc
pop
xchg
repz
xchg
or
add
ret
xor
fistl
into
push
jge
rorb
push
aas
lea
mov
sub
or
or
sub
add
xchg
orl
mov
pop
movsl
jae
push
imul
popa
xchg
cmp
imul
rorl
and
ror
adc
clc
or
sbb
mov
lea
xchg
cmpxchg
push
in
jmp
int
out
inc
jmp
pop
ret
adcb
jo
in
test
xchg
xchg
pop
lcall
cmovae
aad
mov
inc
xchg
popf
dec
push
push
sub
repnz
xchg
stos
inc
push
xor
sahf
cmpl
fnstenv
jmp
pop
pusha
mov
fs
xlat
cmc
mov
mov
in
pop
sbbb
out
fidivrs
mov
ds
sbb
movsl
mov
mov
repz
adc
adc
ret
or
sub
adc
mov
andl
out
repnz
pop
or
mov
mov
add
outsb
push
jo
fidivrs
pop
sbb
gs
sbb
jne
sbb
inc
push
push
xchg
cwtl
repnz
sub
sbb
andb
fwait
repz
jbe
mov
cmp
xor
and
ja
mov
jne
in
pusha
fwait
push
mov
mov
dec
ret
dec
leave
jg
fsubrl
shll
xchg
add
loop
aam
or
xchg
sti
fistps
jecxz
fildl
mov
xor
dec
mov
add
ret
xchg
or
js
inc
aaa
and
lret
adc
cltd
adc
and
lods
mov
in
fmul
cltd
mov
push
mov
lret
mov
sbb
and
dec
aaa
sbb
jae
inc
fldl
and
or
dec
push
xor
pop
and
movsl
xchg
pushf
xor
jmp
lahf
jl
xchg
and
fdivrl
popl
scas
test
lods
in
sub
sub
and
push
jge
adc
xor
mov
mov
int
and
adc
and
pop
shl
pop
pop
push
inc
and
xor
pusha
pop
add
and
and
sub
push
xor
jg
loope
xchg
cmpsl
sbb
mov
mov
rcll
jbe
fbstp
into
or
lods
jae
push
out
push
inc
mov
mull
leave
xchg
xchg
lock
or
out
cmp
mov
push
cmp
lock
sbb
js
jno
ret
mov
pop
inc
pop
or
mov
push
xchg
and
int3
dec
sub
rcl
jne
lret
mov
push
push
xorl
inc
xchg
addr16
mov
lcall
pop
stos
mov
cmp
inc
push
or
dec
fwait
push
jne
dec
test
popa
sbb
sub
loope
lock
idivl
cmp
mov
inc
push
push
pop
sbb
mov
mov
mov
xor
xchg
mov
push
mov
push
mov
jbe
fwait
addr16
push
outsl
sub
outsl
mov
pushf
lea
stos
dec
and
add
sbb
jno
add
in
fwait
scas
movsb
push
or
or
cs
mov
mov
sbb
bnd
cmp
xchg
fs
enter
mov
in
cltd
repz
insl
test
xchg
in
or
mov
mov
xor
ficoml
xchg
or
notb
pusha
out
adc
mov
in
shrl
mov
into
jmp
fcomp
ds
scas
fsubrl
roll
mov
inc
jl
push
or
cmpsb
sbb
or
jne
lea
sbb
mov
xchg
lret
call
inc
in
xor
jle
loop
into
xor
lcall
cmp
sbb
cmpl
push
mov
fwait
cs
pusha
sub
pop
push
inc
push
in
std
out
ss
lahf
xlat
adc
and
inc
sub
mov
and
inc
and
sub
cmpsl
sub
jnp
test
xchg
pop
fstpt
fucomi
push
dec
mov
rdpmc
ret
popa
mov
into
add
or
das
int3
dec
icebp
mov
pop
ljmp
bound
add
cmp
jp
movsb
scas
and
jno
push
push
loop
testb
aas
jmp
repz
fsubrl
loop
sbb
or
call
mov
stc
in
cmp
cld
mov
dec
sub
movsl
add
adc
in
rcll
adc
pop
mov
xchg
cwtl
dec
cmp
sbb
cmp
test
dec
cmp
and
mov
mov
out
sbb
and
and
sub
pop
pop
inc
int
lahf
int
push
xchg
cltd
into
xlat
sahf
and
pop
fstpl
or
in
mov
mov
push
into
inc
imul
cwtl
jle
adc
jno
adcb
je
inc
test
ret
notb
jns
xchg
outsl
jo
jge
push
call
mov
call
mov
or
aas
in
jae
cmpsl
inc
mov
or
jmp
mov
fsub
sti
pop
leave
sbb
jp
popa
cmpsl
mov
das
fbld
xor
jp
mov
sbb
mov
xor
mov
cmp
xchg
jb
xchg
sub
nop
loop
xchg
mov
stos
jl
sbb
adc
adc
pop
dec
xor
xchg
adc
or
mov
js
sub
pop
mov
insl
aad
sbb
jmp
movb
aas
xor
jnp
push
xor
mov
and
les
pop
add
cmpsl
mov
and
or
stc
jo
lret
mov
pop
cmp
fsts
ja
dec
fldt
insl
or
add
mov
and
inc
call
pop
sahf
mov
stos
dec
cvttps2pi
ljmp
testb
fldenv
popf
jae
ljmp
jmp
cmp
pusha
add
stos
mov
hlt
mov
xor
and
jbe
std
ja
xchg
add
scas
sbb
fsubrl
ss
adc
rcrl
adc
pop
addr16
sarl
push
jno
fnstsw
adc
pop
sub
adc
push
jmp
mov
sahf
outsb
mov
fidivrl
scas
jle
adc
jmp
jno
dec
movsb
and
sbb
inc
mov
pop
into
push
lret
sub
es
pop
jle
xchg
hlt
dec
mov
fsts
cmp
inc
cli
cld
aam
push
dec
out
leave
mov
rorb
outsw
and
xor
push
or
cmp
xchg
inc
mov
lahf
into
imull
pop
mov
fldt
mov
pop
clc
repz
pushf
lcall
xor
dec
call
hlt
adc
sub
clc
adc
orb
fiaddl
aam
inc
test
rcrb
call
adcl
mov
lahf
and
es
adc
pop
sbb
mov
and
mov
cmpsl
jge
sub
jge
xor
inc
jp
psubd
push
push
cld
fs
xor
or
ds
rolb
sub
sub
pushf
rclb
sbb
pop
inc
sbb
sbb
pop
xor
push
outsl
adcb
enter
stc
adc
shlb
cs
push
lret
into
cmc
inc
out
dec
fbld
or
cmp
popa
inc
dec
std
ret
sbb
stc
loopne
cmp
adc
push
rcrl
push
cli
ret
push
or
test
inc
in
jo
stos
rcl
psrlw
rep
pop
xchg
in
xor
arpl
gs
sub
xor
iret
mov
mov
addb
leave
lret
inc
test
pop
mov
arpl
in
iret
jecxz
pop
pop
lods
imull
xchg
mov
hlt
jmp
xchg
jp
mov
cmpsb
pop
outsb
mov
adc
jns
stos
fsubrl
dec
cmc
in
pop
sbbb
stos
mov
fcompl
fnsave
rorb
mov
xor
addl
sbb
inc
imul
aam
arpl
mov
mov
push
movsl
dec
xchg
movsl
jp
jae
ret
in
mov
lret
das
push
pop
lea
out
adc
cmp
ss
add
or
cmpsb
sub
sub
cmpsb
push
test
andl
mov
add
mov
mov
dec
sub
test
ret
fidivs
in
push
sbb
mov
pop
mov
es
test
mov
cwtl
dec
jmp
mov
nop
sub
lret
jo
push
loop
call
inc
loopne
sub
mov
or
daa
in
nop
lret
mov
shr
jmp
adc
xchg
leave
xchg
sub
outsb
jl
push
iret
jno
and
faddl
cld
lea
sbbb
ret
inc
mov
cld
aad
test
arpl
sarl
pop
cmc
xor
cli
addr16
xor
les
jns
pushf
and
lret
out
cs
rclb
cltd
inc
popf
inc
aas
sbb
pushl
cmc
in
arpl
add
xchg
pusha
fwait
pusha
or
mov
pop
sub
push
pop
dec
mov
push
movsl
insl
ficompl
fs
int3
mov
nop
fwait
mov
mov
hlt
cltd
jmp
dec
rcrl
adc
fstpt
repz
lods
scas
js
stos
es
sbb
popa
negl
clc
sub
mov
dec
int3
test
aad
inc
dec
cmp
xor
dec
dec
add
rolb
jmp
daa
pop
mov
arpl
jb
ret
or
pusha
cmp
fwait
jg
stc
push
mov
std
insb
flds
mov
insl
jl
andl
inc
gs
out
pop
push
scas
pushf
sahf
stos
jecxz
fsubrp
fdivrl
dec
js
cmp
loop
bound
and
in
in
sarb
xchg
das
sub
aas
xchg
mov
or
inc
xlat
aam
adc
sub
movsb
pop
lods
push
inc
repnz
and
adc
jg
cmpsb
mov
lcall
adc
ljmp
rcr
test
mov
mov
push
jns
iret
ds
jmp
sbb
xchg
fiaddl
jl
sbb
in
aaa
dec
scas
mov
pop
adc
arpl
push
shl
adc
enter
inc
push
daa
inc
adc
fidivrl
pop
out
mov
rorb
jo
das
mov
jns
and
xchg
setb
iret
jb
and
movsbl
in
xchg
jnp
icebp
adc
xor
sub
push
push
xchg
ljmp
mov
loop
jno
inc
push
push
into
mov
pop
jp
insb
add
mov
fsubrl
nop
fcmove
inc
in
loope
ret
shl
jecxz
sbb
cmp
xor
lock
icebp
les
push
fnstenv
and
sbb
clc
adcb
xor
sbbl
aas
cmp
jg
jmp
sbb
xchg
cmp
mov
sub
dec
lds
insl
repnz
rcll
mov
inc
insb
ljmp
repz
das
rep
sbb
xchg
lods
jbe
or
dec
lds
mov
jle
daa
pop
lods
test
pushf
jns
std
cltd
fbld
sub
and
sub
mov
mov
or
adc
jmp
and
fcmovnu
inc
in
adcb
pop
lods
mov
sub
xlat
repnz
ja
jbe
insb
mov
xchg
jns
punpckldq
std
mov
mov
jecxz
fabs
adc
enter
push
xor
je,pn
mov
inc
adc
push
fscale
daa
xchg
bound
jno
lahf
out
loopne
cmp
inc
mov
and
loop,pt
mov
pop
lock
add
adc
pop
inc
inc
mov
pusha
mov
in
xchg
loope
cmp
add
jg
mov
lret
imul
inc
fs
in
jle
shlb
insl
xchg
and
test
mov
xor
lret
pop
add
or
iret
sahf
pop
test
sti
fsub
cmpsb
mov
add
addr16
movsl
shll
xchg
mov
movsbl
add
push
cld
aam
jb
lret
mov
xchg
std
sti
xlat
lods
stos
fldl
jp
xor
sti
mulb
jne
arpl
jnp
push
xchg
push
jns
sbb
outsb
dec
and
mov
cmp
adc
push
mov
gs
aam
int
dec
jg
out
jecxz
cltd
xchg
out
xor
test
jmp
cmp
mov
fs
fisttps
push
inc
mov
hlt
stc
lea
sub
es
in
sub
pushf
dec
mov
and
lahf
jge
dec
int
pop
js
add
mov
aad
or
pusha
stc
jle
mov
das
mov
sbb
mov
mov
and
les
pop
mov
icebp
pushf
dec
push
rorl
xchg
inc
jb
adc
adc
jnp
pop
loop
jg
aam
sbb
lea
sahf
outsb
sbb
lea
in
sub
mov
bound
dec
lcall
movl
push
hlt
int
fcomi
cmp
outsl
mov
imul
and
mov
cwtl
cmp
cmp
push
ss
clc
mov
push
js
cmc
xchg
in
subl
mov
imul
dec
std
or
or
push
mov
mov
insb
push
repnz
rorb
or
in
jnp
test
pop
mov
dec
xor
push
pop
ljmp
and
inc
flds
xchg
push
pop
sbb
xchg
cld
andl
stos
stos
mov
dec
fistl
shlb
pushf
aas
movsb
fnstcw
xor
insl
movsl
nop
or
cld
dec
aam
jne
arpl
mov
pop
data16
or
jecxz
mov
lea
cmp
jmp
imul
sub
repnz
jecxz
out
in
sub
xchg
push
pop
rorl
sub
inc
xchg
sbb
scas
add
xor
mov
xchg
jle
cs
cltd
mov
fdivrs
cmp
xchg
push
shlb
or
loope
jle
sub
and
pushf
aaa
cltd
outsb
or
dec
shlb
push
outsl
jle
loope
test
int3
mov
jnp
xchg
lods
xchg
push
lods
lahf
mov
in
add
mov
fdivr
inc
cmp
rcl
add
testl
and
enter
aaa
loop
sub
aas
cld
cli
mov
mov
stos
or
icebp
pusha
dec
clc
add
xor
rcrl
adc
leave
pop
shll
fucomip
in
xchg
sahf
lods
and
out
inc
cmp
in
notb
dec
stos
in
or
fidivs
inc
mov
pop
sub
repnz
sub
dec
outsl
or
stos
sub
sbb
pop
imul
xchg
mov
pop
xor
in
pop
dec
mov
mov
or
aaa
loope
pushf
clc
or
stc
xchg
insl
add
and
mov
cmp
int
dec
add
fildll
push
sbb
push
cmp
and
push
into
sti
ja
sbb
dec
add
cmp
pusha
imul
hlt
mov
out
sahf
dec
xchg
imul
mov
lahf
scas
dec
movsb
ret
pop
adc
sbb
outsl
pushf
imul
popa
loope
xchg
ss
roll
xchg
or
xchg
fdivl
mov
and
push
jle
xchg
or
adc
cmpb
mov
push
mov
sti
xchg
out
adc
lret
mov
sub
inc
sub
fadd
pop
push
adcb
das
push
in
nop
mov
xor
jmp
mov
nop
orl
mov
mov
mov
iret
repz
mov
sub
outsb
add
in
jns
inc
pop
out
sbb
rorl
mul
dec
call
fsubp
dec
outsb
or
daa
dec
je
mov
mov
arpl
push
dec
push
pop
addr16
push
xchg
shll
pop
pop
mov
lods
cmp
cmp
gs
push
roll
ret
adcb
data16
push
test
rcl
pop
cmpl
arpl
mov
sti
pushf
xor
stc
ret
lret
lahf
cmpsl
inc
mov
jecxz
mov
dec
test
push
in
cmpsb
popf
cmpb
pop
mov
mov
cmp
cltd
fistl
loope,pt
les
insb
std
xor
pop
movsb
mov
inc
sub
lock
xchg
adc
je
sbbb
mov
or
fistl
clc
jg
pop
imull
sbb
add
inc
adc
fidivrl
nop
mov
push
scas
fiadds
loopne
push
ljmp
lahf
mov
push
scas
sbb
inc
aam
test
notl
scas
addr16
pushl
arpl
faddl
das
xor
push
inc
adc
jmp
mov
add
add
call
jmp
or
lock
xor
xlat
cmpb
cs
incb
in
loope
push
cmpsb
add
mov
ds
fwait
nop
setae
xor
xchg
into
push
mov
stos
fdivrs
jno
jecxz
fs
nop
cmovg
push
adc
pop
lahf
jmp
mov
sti
add
int3
popf
sbb
jmp
pusha
jno
mov
sbb
mul
mov
cmp
filds
sbb
mull
dec
stos
add
insb
int3
mov
push
out
fdivrs
mov
lret
xlat
adc
icebp
sbb
pop
mov
scas
into
mov
stos
fcmovb
pop
cmpsb
gs
cmp
insb
xor
sub
push
adc
neg
outsl
imul
daa
out
add
jle
inc
cwtl
xchg
daa
xchg
mov
lret
hlt
push
inc
rorb
test
adc
jg
lock
ds
stos
shll
fcomps
mov
repz
cwtl
push
mov
mov
sbb
clc
std
sub
fs
jne
aas
push
in
clc
imul
sahf
mov
lds
push
cmpsb
ja
imul
xor
std
xchg
clc
and
rep
imul
mov
or
cmpb
cld
pop
shlb
mov
fdivrp
movsl
in
jge
call
nop
addb
ret
dec
mov
std
jl
sub
mov
inc
jg
shlb
mov
cs
sub
sub
cmpsl
popa
xchg
hlt
mov
or
pop
stc
data16
push
insb
ret
mov
adc
imul
push
test
mov
pop
pop
xor
xlat
rcrb
jecxz
and
gs
mov
popf
data16
xchg
fcoml
shrb
add
repz
inc
push
push
xchg
mov
movsb
xchg
mov
addr16
push
add
dec
outsb
sbb
and
xchg
clc
lret
aad
loope
je
js
push
sub
inc
cmp
lock
mov
xchg
mov
sbb
mov
repz
fistl
aaa
les
jne
bound
xchg
jg
pusha
ds
lret
lods
jno
sbb
dec
xchg
iret
cmp
or
mov
push
mov
mov
ljmp
jno
cs
or
cwtl
cmp
fistpl
push
jne
cmpsb
xchg
pop
les
stos
push
mov
ss
cli
fisubs
or
ret
cmc
scas
stos
enter
das
imul
notb
xor
in
mov
mov
dec
cmp
xorl
or
jge
xor
jno
mov
add
dec
push
or
into
std
add
call
inc
lods
sub
add
loopne
lock
aas
pushf
inc
fbld
sti
sub
push
mov
mov
xchg
fcomi
sti
pop
add
insl
or
pop
inc
pop
je
aam
mov
hlt
jae
int3
cmpsb
leave
inc
or
lds
sub
xorl
sbb
adc
pop
cli
and
pop
movsb
lock
js
mul
inc
ucomiss
add
mov
push
push
adc
pop
jae
xchg
call
add
popa
gs
mov
mov
cmpsb
cld
push
ficoml
cld
xor
xor
push
neg
mov
enter
add
in
mov
jp
test
fsubp
push
and
lea
js
add
xchg
adc
iret
mov
gs
inc
dec
es
inc
sarb
xchg
sub
push
je
iret
pop
pop
jno
pusha
inc
fs
dec
imul
int3
arpl
imul
lahf
xor
sbb
in
mov
iret
adcb
repz
or
fwait
or
lds
testb
cli
pop
ljmp
and
fs
inc
jg
pop
lret
das
or
out
aaa
xchg
call
push
imul
loop
sbb
cmc
bound
in
adc
add
or
cli
cltd
flds
pop
daa
add
adc
xchg
adc
and
dec
jo
je
loop
es
test
lcall
push
jmp
mov
cwtl
push
pushf
mov
mov
mov
xor
mov
pop
loopne
sub
xor
cmp
dec
addl
je
mov
and
or
sahf
rcll
jp
push
insb
jp
fstpt
outsb
mov
mov
push
nop
push
sub
xlat
mov
jne
xlat
xor
lock
mov
mov
xor
and
and
rorl
mov
mov
sub
jns
out
mov
pop
adc
pop
loopne
push
clc
dec
or
stc
push
sahf
aaa
das
jbe
push
test
jno
xchg
das
incl
and
or
movsb
std
dec
jbe
fldt
pop
push
in
xor
ljmp
cld
fdivs
dec
add
sbb
add
xor
sbb
jne
mov
clc
insb
and
push
dec
dec
sub
push
sbb
out
in
and
fstl
lods
cli
and
push
push
enter
test
cld
je
push
popf
sti
aam
jae
or
push
xor
aam
pop
dec
xchg
out
dec
push
scas
xchg
xchg
ret
nop
in
inc
iret
jnp
std
mov
add
outsl
stos
lcall
jns
test
into
mov
pop
push
daa
sbb
roll
mov
cmp
push
shl
int3
call
testl
popf
adcb
repz
lret
jae
cmpsb
push
mov
mov
stos
insb
dec
push
dec
xor
pop
lret
lret
pop
test
test
ficompl
push
repz
add
push
add
add
ljmp
dec
jp
inc
jae
call
mov
cmpl
push
loop
jmp
add
xchg
les
test
in
pop
push
xchg
out
and
pop
cmpsb
mov
adc
xchg
hlt
test
bound
mov
lcall
shl
popl
ljmp
adc
and
clc
jne
cmpsl
cld
lock
les
and
push
test
lahf
push
add
stos
push
ret
push
mov
fsubrs
add
push
mov
inc
pushf
xchg
jns
andb
cmpsb
sbbb
adc
and
add
sar
adc
aaa
ret
dec
sub
inc
in
lret
mov
fimull
arpl
in
movsl
push
pushf
inc
push
imul
jnp
pop
mov
into
pop
adc
sub
in
test
push
mov
or
sub
fdivr
and
loop
lret
daa
into
jg
cmp
fs
push
loopne
mov
ss
push
cmpsl
mov
sbb
or
or
call
jnp
cld
xchg
call
jns
repnz
push
dec
andb
jmp
lea
outsb
in
jle
sbb
push
sub
jns
outsl
sbb
and
out
pop
or
dec
outsl
or
push
sub
sbb
lcall
bound
jmp
xor
lock
mov
in
call
sub
cwtl
pop
stos
cmp
fmuls
sub
mov
repnz
shlb
cmp
repnz
xchg
sub
add
test
je
vpshlq
push
sub
pusha
dec
mov
into
pop
arpl
icebp
icebp
and
push
inc
ficoml
in
mov
sti
dec
jb
fiadds
mov
cmpsb
js
ret
movsl
add
push
ja
xor
xchg
push
and
xchg
cmp
xchg
cwtl
loopne
mov
rcrl
mov
shll
enter
sub
jl
xor
mov
ret
fisubrs
into
loopne
inc
adcl
insb
inc
loopne,pt
mov
sub
nop
rcr
mov
or
dec
jb
movsl
out
fs
fidivl
int3
gs
mov
loop
adc
cld
push
pop
sub
lods
xor
dec
pop
lock
or
inc
and
das
sub
ret
sub
mov
xchg
arpl
cwtl
icebp
add
inc
xor
xor
adcb
stos
movsb
cmc
ljmp
insb
scas
leave
mov
xchg
daa
aaa
xorb
ret
test
cld
and
mov
fistps
mov
dec
je
cltd
cltd
and
xlat
mov
mov
pop
in
sub
int3
inc
adc
mov
data16
jbe
fistpll
sub
sub
inc
pop
dec
pushf
mov
out
stc
rclb
sub
push
push
popf
inc
push
out
fimuls
mov
test
sub
shr
cmc
pop
fnstcw
sub
pusha
add
out
ds
inc
icebp
ficompl
cmp
fs
adc
push
or
add
imul
rcrl
cmp
sub
xor
or
mov
or
adc
movsl
enter
and
lret
lcall
and
cmp
stos
ret
iret
xor
aam
or
dec
xor
cmp
pop
adc
mov
adc
scas
jge
aam
aad
xchg
lods
add
imul
imul
pop
sub
cmpl
lcall
loope
out
mov
scas
xorb
sbb
pop
add
pop
data16
mov
or
jp
sbb
imul
insb
jmp
fcoml
das
push
or
or
cmp
inc
ljmp
push
cwtl
fwait
jl
repnz
movsb
jnp
sti
adc
fdivrs
inc
jo
xor
jbe,pn
fimuls
dec
sub
outsl
cmp
xchg
or
fildl
or
sub
mov
mov
in
inc
mov
es
xchg
add
jne
sub
mov
sbb
push
aas
rcll
adc
ds
repnz
mov
and
jge
dec
das
movntps
fisttps
std
stos
fimull
es
cmpsl
adc
and
xchg
jp
dec
xor
adc
add
outsb
leave
int3
xlat
addb
jne
inc
cmp
cmp
xor
xor
lods
dec
movsb
mov
loope
test
aam
outsl
cld
mov
and
in
sarb
push
pop
push
test
xor
dec
mov
mov
push
jp
xor
inc
ss
das
mov
and
lahf
push
fidivrs
mov
loopne
cli
sarl
jnp
insl
dec
mov
or
mov
xchg
xlat
ljmp
pop
negb
sub
cmpsl
lar
inc
cmp
incl
jns
lret
dec
push
push
xchg
lock
and
icebp
ss
push
or
adc
sbb
aaa
and
adc
ret
call
sbb
nop
jb
loop
cli
pop
bound
jge
aas
loop
enter
inc
je
xchg
sub
int3
xchg
stos
sbb
sbb
fidivs
aaa
movsl
mov
out
xchg
rcll
xchg
lret
ret
sub
mov
jg
adc
shrl
out
jecxz
add
add
lahf
aas
or
fistl
and
in
rorl
dec
cmp
xchg
adc
jp
sbb
stc
and
mulb
outsl
xchg
ret
mov
fs
je
cwtl
lcall
mov
jnp
out
or
arpl
sub
dec
sbb
lcall
imul
ljmp
xor
mov
push
sbb
cmp
sbb
adc
lods
movsl
sbb
or
sahf
push
xchg
jnp
push
xor
mov
cmp
sub
mov
aas
mov
pop
in
cmc
call
push
sub
adc
sbb
jbe
insb
inc
dec
pop
xchg
clc
push
popa
stos
pop
mov
inc
push
cltd
mov
push
aam
popf
stos
jp
dec
inc
aam
jno
mov
pop
sub
inc
mov
and
jmp
cmp
sbb
sbb
lds
loop
sbb
pop
test
inc
xchg
repz
call
mov
cmp
sub
dec
xchg
sub
loopne
psubsw
mov
jbe
js
cwtl
dec
sbb
mov
adc
xchg
adc
popf
out
loop
xchg
adcb
test
pop
cmp
cmp
adc
sbb
aas
in
push
icebp
js
sti
push
lea
or
outsl
pushf
sub
cld
jle
xor
mov
sub
push
mov
pop
in
inc
sub
adc
lret
lea
sub
stos
xchg
imul
xor
jmp
pop
jo
xor
les
dec
pop
loope
mov
adc
and
sub
add
loopne
adc
sbbb
repz
cltd
dec
mov
push
pop
inc
pop
pop
and
loopne
sbb
hlt
fs
jg
pusha
mov
and
or
pop
inc
xchg
cmp
clc
jmp
sub
fs
pop
gs
movsl
mov
lcall
xchg
insb
iret
in
in
jno
mov
into
xor
mov
loopne
addr16
cmp
js
or
int3
insb
xor
imul
mov
add
lahf
mov
daa
and
mov
clc
cmp
mov
into
xchg
out
cld
ffree
add
dec
cmp
std
fsubrl
sbb
cltd
js
push
cmpsl
jne
fidivs
arpl
cltd
mov
stc
negb
pop
stos
lods
out
jne
or
inc
xor
cli
aas
pop
iret
push
arpl
push
mov
xchg
jb
jnp
ljmp
mov
jg
mov
dec
xor
and
test
xchg
xorl
sbb
hlt
dec
mov
jo
sub
leave
out
xchg
loope
nop
xor
jne
aad
xor
arpl
xlat
push
pop
in
mov
mov
fsubrs
lods
ret
mov
dec
aas
mov
xor
pop
push
aam
aad
lock
xor
cmpsb
xchg
cmp
lret
fisubs
xor
out
loopne
sub
pop
add
inc
push
test
mov
jno
xchg
sarb
out
xchg
mov
sub
loopne
pop
mov
sahf
in
adc
cld
add
or
inc
cmp
scas
jae
mov
nop
data16
xorl
stos
call
das
inc
loopne
jb
inc
outsb
idivl
mov
test
pop
jl
imul
jl
sub
dec
xor
test
stos
and
pop
dec
cmpsl
insb
ljmp
test
icebp
repnz
andb
xchg
inc
mov
xor
cs
mov
pop
in
inc
cmpsl
jl
enter
inc
mov
push
incb
int
pop
out
outsb
mov
cmp
out
in
bswap
jle
sub
push
xor
out
inc
mov
mov
cmc
aaa
gs
mov
mov
cmp
pushf
sub
pop
pop
into
inc
push
fadds
pop
sbbb
scas
sub
cmp
dec
imul
pop
push
jp
in
add
test
repnz
mov
les
cmp
shlb
sbb
lret
lcall
fbld
pop
mov
jmp
mov
xchg
mov
mov
daa
aaa
xchg
int3
ret
aam
push
enter
pop
shlb
sbb
cld
inc
inc
cltd
ret
push
adc
push
orl
cmp
mov
mov
rorb
ljmp
jmp
lock
mov
repnz
or
fiaddl
sub
mov
testl
in
mov
je
popf
movsb
push
enter
push
adc
fldl2e
test
pop
mov
xchg
xlat
jmp
xor
leave
xchg
fcmovnu
xlat
jb
add
out
sub
popa
adc
cltd
xchg
dec
fimull
xchg
cmpsb
cld
mov
in
sti
sbb
pop
pusha
test
jg
push
push
jb
test
xchg
hlt
sbb
push
pop
test
pop
sbbb
int
adc
dec
add
pop
adc
mov
xor
inc
pushf
loope
cmp
pop
hlt
adc
or
xchg
jmp
iret
cli
and
sub
shlb
outsb
sbb
enter
cmc
stos
pushf
or
mov
pop
shrb
repz
nop
push
test
add
nop
test
arpl
or
ljmp
dec
fmuls
daa
lock
dec
les
jb
dec
lcall
sar
out
lret
mov
push
mov
repz
cltd
pop
data16
pusha
std
push
std
xor
jb
inc
in
dec
pop
mov
lock
add
xlat
aad
inc
daa
add
bound
adc
shlb
sub
sbb
out
repnz
or
jbe
out
add
lds
cmp
sub
movb
orb
and
js
dec
fidivl
jb
sub
cmp
inc
xchg
pop
or
lcall
inc
hlt
inc
addr16
iret
std
and
jecxz
mov
or
insb
scas
pop
mov
out
jmp
dec
popa
add
mov
mov
push
pop
sub
fs
mov
pop
add
daa
pop
mov
add
fidivrs
out
loop
fildll
and
out
shll
mov
jnp
syscall
add
scas
nop
push
mov
jp
fcoms
out
jbe
cmp
sti
popa
popf
mov
fmull
mov
inc
shlb
orl
and
dec
movsl
xor
pop
sbb
in
mov
test
lock
mov
mov
in
bound
xchg
lds
clc
fiaddl
insb
lret
jno
pusha
mov
test
enter
bound
fwait
push
imul
mov
rcrl
or
fcoms
pusha
add
scas
xchg
mov
mov
movsb
scas
cmp
and
xchg
mov
xchg
repnz
daa
add
gs
jno
push
sub
cmpsl
enter
xchg
cld
pop
hlt
dec
adc
mov
xchg
fidivl
lea
das
decl
mov
push
push
icebp
int3
adc
xchg
jns
stos
pop
and
adc
cld
pushl
fxch
mov
mov
xchg
out
fwait
mov
leave
mov
pop
fstl
pop
lods
int3
out
clc
out
add
mov
xor
mov
or
xchg
sub
movsl
aam
sbb
adc
adc
rclb
lds
inc
jmp
aas
rcll
in
movsl
inc
pushf
add
adc
cmp
push
out
lods
ss
cmp
dec
cmp
jae
popa
pop
outsl
cmpsl
fnstenv
movsl
scas
mov
lret
mov
sbb
stc
xor
std
movsb
push
sub
fbstp
xor
push
lcall
jns
fwait
jo
push
sub
adc
in
and
add
push
sub
mov
outsb
loope
pop
sbb
mov
pop
cltd
jp
jae
xchg
pop
mov
shl
sub
lahf
loop
push
sub
push
push
inc
movsl
adc
fwait
iret
pop
jge
jmp
jle
sahf
or
cld
scas
add
lods
negl
dec
jno
adc
push
mov
sti
mov
aad
inc
ret
jmp
adc
lods
mov
in
xor
lahf
scas
lcall
lds
sub
aad
imul
mov
jecxz
pop
and
xchg
sbb
sbb
or
mov
pop
jge
ret
vxorpd
cmc
sbb
mov
cltd
jge
lret
out
out
repnz
fs
es
push
inc
inc
jl
push
cmc
inc
mov
subl
jp
fstp
icebp
pop
dec
inc
shrb
mov
repz
jbe
add
lods
sti
jae
pop
adc
sub
dec
outsb
outsl
xchg
outsb
mov
inc
lcall
xor
hlt
aad
pushf
negb
xchg
and
xor
sub
sahf
gs
lret
inc
cmp
pop
arpl
fdivr
mov
jno
xor
sarb
out
cs
fcomip
add
jle
ds
lcall
inc
sbb
xor
mov
popa
in
fistpl
in
and
stc
arpl
pop
sub
test
in
les
or
clc
fs
cmp
adc
adc
lods
push
lret
lret
adc
push
les
ret
ja
fdivl
push
cmp
and
jnp
ret
dec
jg
pop
out
or
mov
ficoms
push
nop
int
mov
push
andb
jno
mov
xorb
xchg
cld
jle
cltd
cmp
cmp
dec
sbb
les
pop
outsb
lock
cmp
jp
in
cmpsl
out
xchg
stos
pop
push
cmp
popf
or
mov
fwait
and
fidivrs
dec
sub
cmpsb
xor
mov
scas
pusha
pushf
mov
or
pushf
nop
dec
ret
push
fcoml
jg
daa
pop
fstps
mov
xchg
inc
test
lahf
incb
dec
mov
lods
divl
pusha
mov
push
sbb
dec
cmp
ret
mov
cmp
bound
inc
pushf
cmp
rorb
fcomi
add
mov
mov
lahf
push
add
xor
or
push
xor
test
dec
pop
push
xor
and
das
cmp
jg
movsl
outsb
fisubrl
jl
shlb
add
shl
jne
sbb
aas
mov
and
movsl
xchg
insl
repnz
pop
aam
cltd
jl
movsl
mov
loope
jno
data16
stc
sub
xor
daa
mov
jp
inc
and
lods
jge
rcl
mov
lret
stos
insb
xor
mov
out
divl
pop
inc
aaa
imul
fwait
gs
leave
jp
jmp
test
or
lds
mov
clc
mov
dec
roll
int
sub
xchg
adc
xor
icebp
mov
dec
and
pop
into
jno
stc
mov
xchg
popf
mov
jg
xchg
mov
clc
in
ss
sub
ret
shrl
xchg
push
mov
xor
data16
sti
mov
test
jnp
cwtl
xor
mov
push
fcompl
in
testb
frstor
xor
mov
and
jne
lret
ss
bound
lcall
cmpsb
sbb
push
cmpl
adc
mov
roll
enter
inc
fisttpll
mov
push
loop
scas
enter
or
out
xchg
pop
jle
push
jge
shlb
xlat
stc
jmp
cmp
jo
jg
repz
push
dec
sbb
and
adc
fnsave
pop
pusha
push
shl
add
outsl
push
add
cmp
faddl
push
mov
out
inc
adc
or
mov
cmp
lds
xchg
enter
jne
mov
or
pusha
aaa
xchg
cmp
es
cmovnp
lcall
ficoml
aaa
jecxz
cmp
xlat
adc
cmp
into
decb
in
cltd
icebp
in
inc
ret
lock
and
mov
sti
mov
loop
pop
hlt
out
nop
outsb
lea
push
mov
pop
test
mov
icebp
or
lds
jns
mov
xor
pop
mov
fwait
cltd
adc
lods
and
jg
stos
lret
fs
and
mov
jge
sbb
sahf
xchg
shl
adc
stc
xchg
pop
xchg
insl
add
mov
lods
jmp
roll
adc
cwtl
jo
hlt
sub
xor
add
jmp
xor
dec
ret
leave
imul
push
pop
lods
testb
je
mov
hlt
pop
and
sub
jns
sbb
and
push
out
icebp
cmp
sub
push
sahf
push
ja
es
mov
imul
leave
hlt
xchg
xor
leave
dec
cmc
inc
sub
mov
push
gs
jmp
test
stc
inc
fsubs
jle
push
cmp
xor
scas
out
inc
sbb
and
xor
dec
lahf
stos
push
cmp
push
push
popf
rcr
test
mov
mov
jae
pushf
rolb
mov
mov
xchg
rorb
sub
mov
movsl
adc
es
xchg
mov
loop
lcall
rcrb
stos
call
xchg
and
shll
test
push
daa
cmp
adc
lahf
outsb
test
and
pushf
cmc
imulb
push
jns
dec
dec
pop
mov
in
mov
cmp
pop
ja
into
sub
into
jno
adc
js
cmpb
stos
aam
push
lret
mov
pop
or
cmp
and
loope
loope
movsb
stc
xor
adc
push
aas
adc
sbb
mov
adc
popf
push
dec
pop
in
lret
pop
shrl
jle
push
mov
pop
and
popa
inc
fidivs
dec
cld
bnd
outsb
jecxz
mov
mov
inc
sub
push
mov
mov
subl
mov
add
push
dec
outsl
jmp
pop
mov
xchg
jge
xchg
cmp
not
and
loopne
mov
or
ja
jp
push
or
add
pusha
out
dec
lods
jnp
lret
aaa
mov
out
nopl
loopne
fst
stos
add
push
fsub
push
xchg
or
xchg
fistl
test
out
mov
je
jne
jmp
push
jl
jg
ds
fsubrl
insl
or
push
xchg
and
lcall
stos
aas
cmp
push
add
xchg
movsl
jae
sbb
xchg
mov
cmp
push
ss
faddl
jns
in
loope
jb
inc
dec
fwait
pop
xchg
stos
or
and
lea
imul
push
and
and
push
jl
mov
into
inc
inc
adc
jno
push
movsb
cmpsl
sub
cmp
push
fxch
stc
dec
pop
int3
hlt
jo
mov
stos
fldt
xchg
cwtl
jnp
and
mov
mov
out
es
pop
pop
filds
scas
rcl
and
fmul
pop
sbbb
sub
int
je
xchg
iret
pop
push
pop
int
push
out
dec
dec
mov
mov
pop
push
pusha
cltd
adc
fimuls
xchg
push
mov
fisubrs
daa
push
mov
pop
cmpsb
das
dec
imul
scas
cmp
lret
sub
cmpsl
mov
insb
and
jle
insl
sub
jno
dec
or
and
fnstenv
xchg
xlat
mov
xlat
adc
and
imul
std
add
mov
inc
pop
cmpsb
and
push
shll
push
push
stos
jge
lds
push
fldcw
es
int
xchg
pop
scas
jmp
mov
xlat
inc
addb
scas
and
jb
gs
mov
repz
inc
ret
shl
int3
adc
jmp
sti
add
sub
repz
push
fistps
dec
iret
aaa
adc
push
mov
test
into
and
dec
call
xor
fwait
pop
push
push
in
ja
mov
xor
and
xchg
cld
les
pop
imul
mov
sti
test
dec
sbb
cmpps
add
mov
xor
push
sub
jmp
mov
xchg
or
mov
in
je
subb
and
outsl
ret
idiv
leave
pop
out
mov
push
ds
inc
in
insl
mov
xor
and
in
std
adc
push
add
adc
pop
push
test
jl
sti
subl
push
xchg
pop
loop
cmp
iret
int
push
sub
mov
jae
out
daa
pushf
pop
push
inc
adc
das
test
xor
dec
and
repnz
dec
les
fwait
sub
push
lret
jb,pn
mov
js
jmp
push
add
lret
push
shll
adc
stc
mov
mov
cld
mov
test
dec
addr16
arpl
out
or
aad
mov
dec
jns
ljmp
sbb
xchg
shrb
repz
outsl
dec
pop
in
pop
sbb
or
or
out
dec
repz
out
test
lods
jl
movsl
cmp
adc
fimuls
or
xchg
fisttpll
xchg
mov
mov
sub
mov
mov
adc
in
lahf
pop
mov
xor
mov
fcmovnb
dec
pop
ljmp
xor
and
sbbl
addr16
mov
les
pushf
popa
sbb
ret
loope
mov
imul
into
fmulp
mov
jge
ss
and
mov
inc
and
dec
dec
movsl
sbb
add
sahf
jb
cmpsl
aaa
sub
mov
pop
in
cmc
movsl
pop
or
cwtl
inc
fcomi
outsl
dec
pusha
jl
dec
xchg
sbbl
xor
mov
add
mov
dec
jne
sbbb
ret
mov
dec
dec
cmc
fs
cpuid
add
xchg
test
dec
lret
xchg
andb
push
push
jne
lods
imul
sbb
aam
jo
ljmp
mov
cld
push
repnz
movsb
sub
les
pop
push
lahf
les
cmc
sarb
or
pop
stos
mov
les
sbb
cmp
cmp
in
mov
in
mov
insl
add
mov
loop
test
orl
adc
je
mov
enter
inc
hlt
xor
push
adc
cli
loopne
pusha
xchg
stos
mov
fdivrl
xor
iret
rorl
imul
test
push
lods
fwait
push
dec
lcall
fs
xlat
lods
push
push
test
or
subb
fs
or
cmp
imulb
insl
das
out
hlt
push
mov
mov
jecxz
jne
jbe
or
popf
lock
pop
imul
and
xchg
and
call
add
sub
xor
pop
shll
in
mov
sub
cld
or
std
or
fistps
jno
shlb
lds
xor
jnp
insl
jnp
jge
push
scas
mov
dec
in
mov
aaa
mov
jae
sbb
sbb
inc
sub
pop
ja
dec
sbb
lahf
inc
inc
mov
mov
sbbb
js
jnp
lahf
lahf
jg
adcl
icebp
pop
fadd
jl
pop
xchg
pop
xchg
lods
inc
adc
rcrl
dec
mov
jmp
movsb
jle
stos
repz
push
pop
fucomip
cs
or
xor
push
mov
ficoms
add
and
push
js
lds
add
cs
lret
and
add
das
orb
outsl
into
lret
lahf
fbstp
xor
mov
xlat
jmp
fdivrl
fwait
and
mov
aam
movsl
xor
dec
pop
xlat
sub
into
pop
cltd
push
cmp
out
jle
lods
fnstsw
jge
xchg
mov
out
or
lret
aas
mov
xchg
jae
dec
jle
test
sub
and
outsl
sub
jg
jne
repnz
mov
xchg
pop
data16
jmp
push
mov
cmpsl
mov
dec
pop
pop
into
mov
push
push
push
in
and
or
bound
pop
insb
pusha
mov
push
out
jne
in
push
pop
cmp
and
jno
adc
popf
jno
pusha
pop
xchg
fst
fisubrl
or
or
add
pop
mov
fs
popf
or
out
adc
loope
les
es
inc
mov
out
test
fldl
faddl
mov
cs
mov
repnz
loop
je
mov
dec
xor
sub
or
push
insl
iret
jmp
add
lods
jle
cwtl
cmp
fcompl
jle
cmpsb
jge
lods
insl
mov
mov
scas
mov
gs
mulb
cmp
cmp
jnp
dec
jae
movsb
mov
sub
inc
nop
sti
xchg
jle
pop
mov
in
pusha
mov
fisubl
jbe
mov
je
jg
arpl
bound
and
pop
xchg
pop
cs
jnp
in
inc
adc
adc
ds
aam
xor
ljmp
push
pop
add
or
loop
movsb
mov
out
and
outsl
inc
push
dec
mov
outsb
mov
sbb
jne
fxch
stc
push
xchg
ret
mov
aad
sti
sti
push
enter
fdivrs
push
sti
sbb
and
cwtl
testb
cmpsb
add
dec
pop
out
loop
inc
push
cmpsb
push
jno
ja
dec
mov
xor
loopne
or
notl
sub
dec
sbb
xor
mov
in
cltd
mov
pop
pushf
dec
sub
and
int3
mov
sbb
rcr
xchg
dec
mov
cmp
push
mov
xor
roll
ljmp
sbb
pusha
ds
pop
push
and
xor
mov
ja
lods
fs
out
cwtl
pop
cmp
or
cmpsb
mov
xchg
mov
or
push
xchg
mov
ja
pop
push
enter
adc
lea
paddb
mov
dec
inc
sbb
pushf
mov
sbb
xor
jge
adc
xor
das
mov
pop
lret
jnp
popf
decl
movsb
jp
cmp
jge
fisttpl
and
outsb
jb
stc
and
stc
ret
icebp
fbstp
test
pop
push
sub
push
call
ret
test
cld
pop
cmp
movl
and
ss
int3
xchg
mov
adc
les
insb
or
test
nop
mov
add
mov
bound
sub
fdiv
pop
push
cmp
and
adc
out
movsl
inc
sub
xor
and
pop
test
sbb
aam
in
inc
add
dec
aas
je
inc
mov
jp
cmp
or
test
mov
cmp
and
andl
xchg
mov
lods
cmp
inc
xor
movsl
pop
jns
cmp
push
popa
pushf
push
push
xchg
scas
dec
cmp
xchg
hlt
sub
cmc
mov
cld
or
xlat
inc
std
mov
mov
xchg
out
push
inc
aam
sbb
dec
xchg
inc
ret
pop
push
mov
pop
push
insb
pop
xchg
insl
inc
adc
add
push
mov
or
and
pop
hlt
in
loopne
jg
pop
ljmp
cmpb
cmp
cltd
pop
xor
push
bound
or
fsts
mov
xlat
rcrb
fdivs
inc
stos
rclb
icebp
xchg
add
repnz
js
add
xor
cmp
movsl
jno
cmp
dec
pop
sub
mov
ret
dec
test
sbb
mov
push
lcall
int3
mov
sbb
add
in
dec
and
jecxz
rcr
xchg
fadds
test
jg
sub
inc
mov
sbb
mov
xchg
dec
xlat
mov
ljmp
js
add
add
sbb
dec
inc
xchg
mulb
push
push
insl
mov
dec
xchg
out
fisttpl
jbe
lcall
fcompl
adc
or
push
out
and
add
ret
or
iret
call
das
cli
push
lea
clc
outsb
out
addr16
jnp
ljmp
inc
jae
leave
and
icebp
ss
xchg
mov
ror
ss
enter
push
add
or
test
push
fcompl
popf
lss
sbb
pop
lahf
fdivl
mov
pop
cmp
shrl
mov
lret
nop
sub
or
pop
rcrb
cltd
mov
sbb
adc
repnz
or
pop
into
push
xor
ret
fwait
mov
ds
mov
sti
in
or
jae
xor
jl
lods
adc
mov
movsl
adc
mov
add
sti
mov
sbb
cmp
cmp
xor
pop
xchg
mulb
popa
fsubrl
pop
adc
jmp
daa
loopne
mov
xor
cltd
mov
gs
stos
rorb
adc
mov
fwait
js
inc
data16
dec
rcrl
icebp
les
aad
cld
fwait
shlb
aam
xchg
loope
rcrb
rcrl
jne
je
sbb
mov
sarl
push
cwtl
jge
jp
or
out
xor
fprem
mov
divb
adc
push
push
fs
les
imul
xchg
inc
in
rcll
imulb
aaa
adcb
stos
insb
in
in
clc
negl
insb
popa
loopne
adc
repz
stc
dec
stc
testb
lods
icebp
iret
jp
push
sub
int3
pop
mov
xchg
mov
adc
push
dec
sbb
loope
sub
mov
ret
cltd
mov
jbe
sub
out
jmp
lret
inc
jne
and
jp
xor
scas
test
jl
fcom
nop
or
incl
mov
fs
stc
es
stc
fiadds
jle
jns
cmp
lcall
std
fcomp
das
clc
sub
loop
sahf
dec
decb
aaa
or
shl
lret
push
sub
sub
test
out
test
xchg
fnstsw
mov
ss
adc
jb
ja
das
mov
pop
adc
mov
enter
pop
stc
xchg
xor
out
data16
psubsb
mov
mov
dec
sub
fisubl
push
xchg
mov
push
lcall
jae
shrl
loope
mov
xchg
in
arpl
mov
popf
and
leave
shll
movsl
daa
ficompl
ss
dec
cld
mov
push
pop
cs
xlat
xchg
lret
or
pop
mov
inc
push
xor
repz
scas
mov
in
fwait
sti
loope
sbb
fs
and
or
lret
mov
insl
cmp
jg
xor
frstor
mov
jecxz
loopne
pop
mov
inc
pusha
dec
cld
outsl
inc
cmpl
popf
cmovs
scas
mov
loop
aas
jle
arpl
adc
push
jge
xchg
and
aad
mov
sbb
std
or
sbb
fstl
mov
popl
in
sarl
into
cmpb
mov
adc
cmp
jae
testb
sahf
into
pusha
pusha
mov
xorl
pop
xchg
call
data16
js
push
xor
repnz
fs
fadds
clc
mov
mov
push
adc
clc
outsl
pop
addr16
lock
int
movsl
sbb
jbe
jecxz
inc
insl
jo
pop
xchg
jns
adc
out
and
fs
fsubl
mov
jo
or
inc
sub
dec
sub
pop
aam
or
mov
sub
call
pop
cltd
fstpt
push
je
adc
dec
loop
cmp
nop
jecxz
inc
fsubs
or
sbb
mov
cmp
cmpb
bound
test
cmp
pusha
filds
jne
mov
adc
add
add
push
cld
ss
inc
add
xchg
adc
xchg
fmuls
inc
and
rcrb
es
dec
mov
sub
jl
repz
repnz
mov
and
scas
cmpsb
shr
mov
jbe
xchg
outsl
push
shrl
and
loop
push
dec
dec
jbe
mov
pop
lsl
std
push
repnz
ja
leave
ljmp
in
push
popa
arpl
pop
xor
jnp
mov
repz
out
or
mov
scas
enter
jecxz
out
sbb
xchg
push
mov
bts
lods
mov
ret
insl
and
or
es
dec
pusha
lea
sbb
xor
adc
loop
add
divb
fdivrp
cmp
push
int
aam
mov
nop
test
icebp
ljmp
xor
cmp
ret
push
xor
add
fwait
stos
loope
lea
repz
out
fxch
fs
iret
cld
jno
add
imull
sbb
scas
dec
adc
xchg
or
cmp
inc
inc
ret
mov
or
cmp
in
pop
cli
out
pop
jne
dec
pusha
fadds
adc
or
mov
jnp
idivl
add
inc
sub
jmp
mov
stc
or
mov
outsl
sbb
mov
imul
cli
mov
inc
das
sarb
pusha
pop
xchg
movsl
jae
repz
dec
dec
lods
hlt
push
xchg
xchg
mov
cmp
dec
xor
movsb
nop
ja
xlat
popf
ljmp
test
sbb
jno
jno
enter
lea
mov
ficompl
mov
sub
mov
sub
xchg
out
cmp
mov
and
std
cmp
cs
jae
in
leave
repnz
test
jge
push
cmpsl
xchg
outsl
clc
and
xchg
xchg
adc
fucomp
test
dec
loop
adc
bnd
test
xchg
mov
jmp
xchg
xchg
testb
push
fsubrs
sub
lcall
gs
aaa
ljmp
out
inc
jge
ljmp
add
sbb
call
es
fdivl
or
mov
cmp
das
andb
jmp
mov
xor
mov
ljmp
out
loope
cmp
arpl
addb
jae
push
jno
bound
cmpsl
push
xor
dec
push
test
push
dec
cltd
rorb
ret
push
lods
aaa
repnz
jecxz
fcomps
mov
push
sbb
add
or
add
jno
add
mov
xchg
push
sarl
mov
pop
and
shl
xchg
sub
pushf
ljmp
pop
xchg
or
enter
in
adc
inc
stos
mov
mov
mov
push
sub
mov
add
adc
jle
mov
push
imul
mov
ss
mov
jns
gs
jmp
jne
pop
cltd
inc
jo
out
in
jns
mov
mov
adc
int3
cmpsl
ret
in
divb
out
mov
loope
jg
lock
leave
push
into
popf
cmpsb
out
dec
fbld
in
ja
repnz
cs
adc
sahf
cld
jb
push
xchg
outsb
mov
mov
fistpll
ret
adc
int
test
adc
dec
adc
xor
es
mov
adc
dec
cmp
int3
push
ret
sbb
cld
mov
cmp
adc
fildl
shr
hlt
mov
addr16
or
mov
jmp
ja
loope
sarl
popf
adc
mov
pop
sbbb
les
les
addr16
push
iret
scas
add
inc
mov
inc
jecxz
aaa
or
les
and
loop
inc
int
in
cmp
es
inc
add
call
xchg
mov
mov
xchg
push
rcl
xchg
sbb
jbe
cli
dec
aaa
imul
dec
loopne
mov
fcomps
xchg
dec
xor
shr
pop
nop
dec
adc
pop
mov
ljmp
ret
jo
stos
out
loop
std
mov
pop
test
int
gs
jno
popf
mov
add
stos
scas
out
rorl
bound
mov
cmp
rorb
into
pmulhuw
fs
fildl
mov
imulb
fwait
adc
aad
mov
cmpsb
loopne
lret
int
mov
lock
mov
fsubrp
iret
xor
push
fiadds
call
jg
bound
lahf
popf
ficomps
addr16
aad
sbb
or
inc
bound
sub
stos
fiaddl
mov
mov
or
sbb
dec
push
addb
testb
pop
pop
iret
pop
pop
mov
mov
rol
ret
dec
andl
pop
lret
pop
out
mov
jbe
add
push
mov
cmp
jno
or
popa
cmp
jp
jns
mov
pop
aam
fimuls
sbb
jmp
sbb
mov
inc
ss
shrl
cs
dec
xchg
inc
repz
sub
fs
testb
mov
mov
adcb
push
dec
lds
cmp
jne
cmp
mov
popa
sub
bt
sbb
sbb
and
sbb
xor
inc
dec
sub
mov
xor
arpl
js,pn
add
push
out
xchg
ljmp
sbb
push
jns
outsb
fucom
decb
pushf
sahf
jmp
imul
orb
inc
or
cmp
imul
jbe
jp
cwtl
dec
inc
adcb
adc
lods
add
and
stos
inc
push
jl
fwait
stc
adc
inc
jnp
mov
adc
mov
int3
rorl
xchg
enter
pusha
fnstcw
pushf
ja
loopne
dec
jae
xor
movsl
scas
cmp
sarb
jnp
hlt
scas
fs
loop
sub
movsl
mov
push
mov
scas
add
shll
popl
mov
jecxz
fmuls
push
ds
dec
shrl
dec
xor
inc
mov
ja
jbe
lcall
imul
leave
mov
xchg
pop
aad
sub
sbb
sub
mov
ret
decb
je
xchg
add
jo
pop
cmp
sub
in
out
addl
dec
pop
mov
icebp
jo
or
stos
ljmp
push
dec
clc
ret
push
pop
in
mov
mov
mov
and
test
shll
xchg
in
in
stos
and
jne
mov
pop
or
sbb
pop
call
dec
in
lret
outsl
fstl
test
cmp
cmp
mov
sub
mov
dec
cmp
mov
lea
das
cmpsb
jecxz
aas
fcmovnu
sbb
cmpl
aas
test
xchg
push
lret
les
lea
pop
out
es
je
daa
pop
sbb
push
fldcw
fnsave
lods
bound
sbb
cmp
mov
push
xchg
cmp
mov
adc
push
mov
shlb
ss
cmp
loopne
or
xchg
icebp
or
push
mov
jbe
fwait
lahf
fcmovu
push
add
push
mov
inc
dec
mov
gs
in
mov
outsb
fmull
sub
rolb
push
cmp
sub
sub
mov
mov
add
data16
pop
stc
adc
inc
mov
icebp
inc
and
jbe
cmpl
hlt
mov
cmp
repnz
mov
pop
dec
push
divb
lds
dec
mov
repnz
inc
call
fistpll
xchg
out
movsl
scas
mov
push
movsl
test
imulb
andb
in
ljmp
sysenter
nop
addr16
fs
sub
lret
rolb
sub
decb
inc
xchg
aad
push
adcl
mov
aad
sbb
jnp
fistpl
loopne
sti
inc
call
mov
xor
mov
or
push
add
sti
dec
mov
insb
jo
jl
push
or
pop
lods
scas
jecxz
mov
and
and
push
daa
das
push
sub
sub
cmp
xor
into
pop
mov
arpl
jbe
sbb
das
ss
ficompl
aam
mov
repnz
hlt
mov
imul
clc
scas
inc
cmp
xor
pop
ja
bound
pusha
xchg
jg
cmp
pop
into
push
cmp
stos
subb
or
add
xchg
jmp
push
test
int
adc
push
cltd
adc
and
jg
add
xchg
dec
addr16
dec
inc
and
arpl
cmpsl
jo
cltd
in
jae
sbb
cs
into
cld
fildl
dec
jecxz
xor
es
shlb
mov
inc
rep
jecxz
shll
add
shlb
sbb
int
add
dec
dec
mov
sti
sub
xchg
iret
popa
jp
in
aam
mov
or
sbb
jo
sahf
pop
add
jne
jnp
seta
pop
icebp
lret
pop
pop
lea
iret
cmp
xor
pop
andb
aaa
iret
fwait
mov
out
push
push
jbe
or
xor
cmp
or
div
adc
xchg
push
inc
jge
cmpl
adc
adc
mov
or
into
ret
stos
mov
cmpsb
sbb
jnp
cld
cltd
mov
mov
add
in
sbb
xchg
mov
xchg
mov
rol
fiaddl
imul
inc
push
inc
ja
call
sbb
nop
loope
repnz
mov
or
arpl
ss
xchg
sub
sbb
and
xorl
imul
add
lds
pop
cmp
je
lds
shlb
stos
push
inc
out
cwtl
ja
faddl
js
cli
leave
cli
mov
fisubl
iret
stc
sub
or
lret
mov
pop
jl
and
mov
fstl
or
sbb
popf
cmovl
movsb
adc
sbb
xlat
hlt
arpl
ja
jb
cwtl
cltd
mov
in
loop
mov
xchg
pop
push
mov
je
mov
lods
out
xchg
push
jg
orb
test
lret
adcb
loop
out
adc
arpl
cmp
push
in
sbb
mov
shll
mov
xor
movsb
mov
dec
xchg
push
sub
sbb
filds
xor
push
cmc
dec
int
out
scas
movsb
sbb
in
lret
gs
subb
fsubl
pmaxub
adc
test
pop
sbb
push
add
sbb
std
popa
out
mov
xchg
sbb
subl
fisubrs
mov
addr16
movsb
outsb
xchg
xor
add
je
mov
adc
push
sub
inc
in
sbb
sbb
lret
icebp
cld
jb
xor
shl
lret
mov
push
mov
mov
ja
push
and
mov
sub
xchg
hlt
je
fstp
insb
in
dec
lods
ficoms
imul
aas
out
adc
in
mov
or
cwtl
outsl
jg
test
or
stos
inc
stc
dec
repnz
fstps
cmp
pop
inc
xchg
and
stos
sub
lret
add
iret
jnp
mov
jge
sub
rorb
pop
fsubrl
mov
pop
gs
mov
xchg
push
ljmp
cmc
jmp
xor
push
push
pop
mov
mov
fldenv
mov
xor
insl
pop
out
push
xchg
cli
mov
add
adc
pop
sub
xchg
rsm
xchg
fsubrs
sahf
mov
mov
daa
mov
inc
or
scas
mov
test
xor
dec
cli
je
stos
sbb
arpl
pop
push
fldt
insb
mov
fsubrl
xor
outsb
ss
repnz
xor
jg
sbb
mov
xchg
dec
mov
push
xchg
push
lock
xchg
inc
xor
pop
aam
aas
inc
lock
lock
mov
sub
push
push
pusha
sarb
repz
insb
ret
and
add
das
and
andl
or
sub
ret
mov
sbb
dec
pop
pop
jae
mov
cld
inc
pop
push
insb
aad
ret
roll
cmp
push
repnz
dec
pop
mov
xor
subl
sbb
inc
fnstcw
cmp
sub
or
xor
enter
lcall
jbe
xchg
dec
hlt
gs
popf
enter
xchg
outsl
mov
leave
imul
dec
and
std
test
stos
jp
adc
fcoml
pop
into
xchg
pushf
mov
add
jl
js
dec
pop
push
nop
mov
mov
adc
iret
jl
sbb
in
and
add
mov
push
push
je
sub
jg
inc
xchg
pop
out
shlb
cmpsb
aaa
leave
add
or
push
daa
sahf
outsl
sar
scas
insl
jle
fs
mov
jbe
iret
sarl
xchg
pop
jae
mov
jp
and
pop
jnp
ja
mov
lea
sub
shl
int3
test
sbb
or
xchg
push
shll
je
stos
shll
and
mov
jbe
xor
repnz
cmp
inc
jae
subb
pop
mov
in
sahf
in
jne
cmc
sub
xchg
mov
fdivl
repz
jbe
pop
or
add
fiadds
imul
mov
add
repz
dec
jns
mov
sti
mov
sbb
shrl
int
sahf
pop
daa
sub
xchg
movsb
cli
mov
pmaxsw
or
iret
inc
scas
sub
inc
dec
add
sbb
imul
cmp
daa
adc
std
in
and
lret
jge
fxch
loop
addr16
mov
inc
add
mov
push
push
arpl
mov
popa
pop
push
test
pop
jne
icebp
sbb
jecxz
or
enter
mov
push
dec
dec
aad
pop
test
pop
dec
ret
xchg
adc
adc
lcall
mov
aad
mov
jge
pop
mov
and
test
out
cli
and
movl
in
mov
jg
mov
add
mov
repnz
jno
xchg
insb
mov
rcrb
mov
cmp
in
dec
mov
or
adc
lcall
xlat
adc
div
mov
in
aas
cmp
sub
dec
imul
fisubs
sar
daa
add
iret
stos
dec
push
enter
and
sub
into
mov
inc
or
rorb
std
pminub
pop
sub
repnz
sub
jnp
les
add
ljmp
cmc
mov
lea
push
dec
jns
mov
fbstp
inc
nop
cltd
xlat
and
mov
push
pop
out
jnp
sub
adc
and
int3
inc
xor
add
fistl
adc
inc
mov
mov
out
mov
xor
lock
add
inc
out
addr16
or
popl
dec
int3
jg
and
fdivl
sbb
into
mov
xor
stc
fiadds
aad
mov
clc
inc
es
lods
leave
mov
or
sbb
pushl
push
and
fcoms
scas
in
xchg
inc
sub
shrl
cld
push
mov
outsb
xor
and
shll
test
sbb
jg
int
mov
mov
cmp
cltd
xchg
stos
push
xor
jmp
daa
test
jp
dec
cmp
xor
xor
cmp
push
adc
imul
scas
sub
addr16
std
sub
jns
stc
push
xchg
and
stc
adcl
ljmp
lock
jp
out
or
jp
xlat
adc
pop
outsl
or
add
inc
jo
out
cmp
inc
lds
inc
mov
inc
ss
adc
sbbb
and
or
sub
imul
sti
inc
js
in
sub
mov
cltd
shlb
in
repnz
add
loope
add
loope
xchg
push
add
lret
outsl
in
idivb
fwait
pop
out
sti
popa
and
add
pop
lods
ror
daa
movsl
popa
pusha
and
xor
outsl
cli
ljmp
mov
addr16
adc
mov
pop
sub
cmc
pop
rolb
and
bound
lret
mov
sub
ss
or
jcxz
jb
jecxz
es
mov
and
and
pop
xor
cmc
in
cmp
fimuls
inc
test
sbb
mov
repnz
cmp
fwait
inc
andb
fldenv
icebp
divl
xor
push
push
out
ja
pop
jnp
xchg
push
mov
or
test
mov
pop
pop
rcrb
cld
cmpsb
xor
into
repz
add
adc
imul
adc
mov
dec
lods
into
loopne
insl
xor
gs
lds
lret
and
gs
test
test
cs
in
jp
mov
sub
pop
sub
adc
bound
mov
leave
ret
clc
dec
rorb
pop
rclb
mov
xor
sbb
and
aam
xlat
ljmp
cs
pop
pop
push
xchg
inc
in
xor
mov
sbbb
push
and
sti
js
lea
int
aaa
jg
scas
sbb
shll
aam
mov
pop
pop
iret
push
lds
pop
mov
cli
aaa
sbbb
mov
add
cmc
ret
ficomps
xchg
lret
loope
nop
push
in
stos
cmpsl
jle
cltd
repnz
cmp
arpl
dec
out
adc
mov
adc
push
pop
sub
call
xor
sub
push
or
adc
inc
idivl
xchg
loop
iret
pusha
xor
je
lret
rcll
jecxz
mov
and
xchg
cmp
jmp
testb
push
fmulp
xchg
jns
xchg
mov
jns
loope
xchg
add
adcb
icebp
sub
pop
xchg
jl
mov
cli
jle
cmp
je
inc
shrl
xorb
adc
gs
dec
clc
lcall
push
xchg
push
inc
repz
mov
mov
rcl
fs
imul
lret
movsl
jmp
mov
sbb
fcoml
xchg
cld
inc
sub
or
call
xchg
stc
jnp
and
inc
add
outsb
pushf
jmp
rolb
pop
cmp
push
sbb
sbb
imul
addr16
xlat
js
test
cmp
jmp
lods
and
push
addr16
test
mov
sbb
roll
in
adc
movsb
sbb
enter
jge
gs
xor
cmc
cli
enter
inc
cmp
or
outsl
pop
test
shrl
pushf
fwait
cmp
test
popf
adc
sbb
mov
fst
sti
dec
adc
mov
cli
cli
fcoml
movsb
inc
cmp
in
push
fistps
pop
outsl
dec
sub
clc
pop
mov
fistpll
call
inc
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
call
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
mov
push
mov
push
call
movl
jmp
movb
movb
movb
pushl
pop
mov
mov
push
call
mov
push
call
movl
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
mov
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
push
push
push
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
push
mov
push
call
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
call
push
push
push
push
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
push
push
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
push
call
lea
push
call
call
cmpw
je
push
call
push
call
add
jmp
ljmp
incl
adc
bound
cmp
mov
movsl
cwtl
out
daa
bound
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
out
fsubs
mov
xchg
scas
movsb
aam
enter
hlt
sbb
pop
fidivl
stc
lret
leave
inc
add
jmp
jb
ljmp
jle
jg
jp
cld
ret
sub
mov
pop
movsl
cwtl
mov
jg
push
outsl
dec
test
cmp
mov
push
aam
sbb
in
std
lea
adc
lods
lds
lret
call
mov
and
dec
test
dec
xchg
adc
sbb
jg
push
lea
mov
nop
lods
stos
fcomip
fistps
es
aaa
xchg
hlt
addb
test
sub
pop
movsl
cwtl
cmpsb
jmp
cmp
jnp
cmpsb
daa
bound
cmp
mov
movsl
fwait
cmpsl
loop
push
sub
adc
bound
cmp
movsl
pop
movsl
cwtl
cmpsb
in
daa
bound
cmp
mov
movsl
lcall
cmp
mov
movsl
cltd
cmpsb
jmp
mov
movsl
cwtl
sbb
and
xchg
fldcw
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
insl
dec
imul
daa
scas
cwtl
imul
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
pop
and
pop
movsl
cwtl
xchg
daa
bound
cmp
mov
movsl
pushf
cmpsb
jmp
outsb
push
sub
pop
movsl
cwtl
cmpsb
leave
daa
bound
pop
movsl
cwtl
cmpsb
mov
xor
in
movsl
cwtl
cwtl
in
daa
bound
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
cwtl
cmpsb
jmp
cmp
mov
movsl
fisttps
daa
dec
outsl
xchg
pop
sub
mov
jmp
call
cmpsb
mov
jge
fidivs
sub
enter
mov
jns
pop
pop
enter
mov
add
repz
out
popf
aad
mov
add
jne
cmp
scas
and
pusha
iret
dec
ds
push
mov
rolb
mov
jo
gs
mov
xor
add
cmp
aas
insb
and
ss
mov
mov
gs
sub
mov
jbe
xchg
xchg
outsl
popa
cld
cmpsl
jo
and
xor
je
pop
enter
and
mov
imul
jge
inc
in
mov
mov
mov
xchg
adc
jno
add
std
mov
rcl
lret
hlt
pop
ss
mov
sbb
cmp
lret
in
sub
and
or
sbbl
mov
sub
sbb
xchg
xlat
add
mov
cltd
push
in
movl
imulb
mov
or
cmpsl
fs
je
mov
jbe
inc
xchg
pop
out
loopne
pop
rol
push
pop
pop
idiv
insl
push
sub
gs
aad
xor
mov
inc
enter
jno
ror
mov
es
rclb
fldl
popa
dec
shl
imul
jae
mov
test
stos
dec
aas
movsb
lods
mov
add
pop
fs
stos
ljmp
stos
aad
out
rclb
fidivrs
inc
xchg
fs
mov
xor
jl
jecxz
test
mov
sarb
ficompl
jl
sbb
hlt
testl
inc
repz
mov
adc
mov
xchg
xor
add
repnz
jb
inc
into
inc
mov
test
add
dec
or
pop
je
xchg
mov
and
icebp
add
mov
mov
repnz
add
xchg
fstl
mov
xorb
push
cli
xchg
outsl
jae
jae
jmp
xor
push
mov
leave
roll
inc
and
stos
lahf
add
repz
enter
inc
pushf
fidivrl
or
cltd
movsl
fs
mov
fnstenv
rclb
insb
jo
dec
jecxz
in
adc
pop
testl
pop
sub
dec
icebp
mov
xor
mov
cltd
shrl
sub
xchg
repnz
inc
jl
dec
clc
xchg
ds
adc
jecxz
je
and
fstpt
dec
fisttps
and
add
jbe
and
stos
or
dec
imul
pop
shrb
xchg
lock
xor
sub
mov
sub
xor
mov
sbb
aad
fwait
sti
and
pop
adc
outsl
jmp
push
fistps
adc
scas
into
mov
add
push
push
and
loopne
bound
cmpsb
mov
pushf
pop
mov
xor
mov
in
aaa
and
pop
sub
xor
jno
imul
sub
mov
push
imul
adc
dec
into
out
jno
into
sbb
jnp
mov
sub
sbb
ja
imul
push
daa
pop
pop
inc
cmp
mov
shlb
sub
lret
push
jne
nop
xchg
leave
ljmp
and
dec
arpl
rcrb
xchg
icebp
cmpsb
or
fimuls
push
lock
leave
leave
xchg
mov
pop
pop
in
xor
push
adc
pop
add
popf
adc
je
inc
lock
adc
jle
and
mov
leave
pusha
mov
into
test
aaa
clc
ja
pop
jmp
orl
incb
and
push
sbb
lahf
sti
rcr
inc
xchg
les
mov
jne
mov
jl
mov
or
movsl
sbb
cld
daa
push
gs
cmp
nop
push
faddl
push
imull
and
add
push
mulb
loop
ja
movsl
shlb
xor
fcoml
mov
test
xchg
fs
je
lcall
push
add
or
and
sub
les
mov
adc
and
push
sub
pusha
rorl
and
cltd
jbe
add
cwtl
push
mov
into
xchg
adc
cmp
xor
jae
out
add
mov
pop
scas
and
outsl
mov
push
test
mov
rclb
dec
adc
push
loope
fistpll
ror
repnz
clc
bound
call
subb
push
xchg
pushf
nop
out
loopne
out
mov
pop
ret
mov
cmp
xchg
icebp
add
jmp
xor
repnz
xchg
loope
xchg
xchg
mov
add
lods
mov
inc
pop
pop
test
sbb
xor
pushf
mov
pushf
xchg
jp
push
sub
xchg
push
jg
cmp
push
fstl
mov
push
jg
mov
pop
fidivrl
inc
movsb
cmpsl
in
sbb
test
mov
xchg
dec
cmpsl
mov
ror
mov
lret
cmp
add
xor
clc
stos
and
sub
xchg
test
movsl
fsubrl
inc
pop
inc
pop
push
call
inc
add
add
mov
es
lret
cltd
out
sti
scas
roll
jbe
sbb
pop
xor
inc
cli
mov
stos
xor
mov
or
fildl
ficompl
pop
adc
fsts
push
outsl
push
and
bound
inc
or
dec
jl
push
dec
and
xor
scas
dec
adcl
sbb
lods
lds
xchg
sbb
push
add
movsl
adc
imul
and
dec
cmp
dec
adc
push
aaa
pop
jge
loope
add
dec
popl
outsb
aad
cmp
inc
mov
test
xor
aad
nop
out
cmp
jae
es
adc
ja
sbb
test
jmp
sub
or
daa
cmp
cmc
movsl
xchg
cmp
hlt
js
mov
les
mov
in
gs
sti
clc
sahf
sub
pop
push
cmp
and
or
call
nop
fcmovb
decl
dec
mov
lret
cli
cwtl
incl
lods
push
push
jbe
divb
mov
xor
insl
and
lcall
pop
jae
adcl
shll
loop
mov
imul
or
outsb
cmpsb
sub
cld
xor
loope
inc
sub
pop
xchg
push
test
jg
fldl2e
adc
int
cli
sbb
dec
mov
fdivs
lods
test
mov
imul
jnp
xchg
in
movsb
mov
fiadds
sub
mov
dec
and
in
mov
mov
mov
inc
stos
dec
push
cmp
adc
in
pop
mov
adc
mov
cmp
aad
lahf
cmp
sub
adcb
xor
cmpsl
ja
xor
mov
pop
mov
and
call
out
or
ror
add
pop
jecxz
jo
push
fdivrs
jp
aad
out
push
or
out
jecxz
repz
in
insb
jnp
mov
mov
fcmovnu
ljmp
mov
pop
clc
nop
in
daa
popa
dec
mov
mov
and
nop
out
leave
inc
fbstp
in
add
inc
rcrl
mov
xchg
pop
fs
jns
xor
lret
sub
add
fldenv
jbe
mov
call
mov
fisubl
repz
in
loopne
iret
push
mov
les
mov
lret
jbe
das
mov
mov
jns
adc
test
pop
popa
mov
cmpsl
addr16
jge
sahf
jg
and
aad
pop
lahf
cwtl
jnp
cwtl
mov
add
pop
push
add
fwait
cmpsb
test
pop
jo
mov
pop
out
mov
and
mov
aaa
js
in
fiaddl
and
sub
push
jg
out
inc
pop
jg
pop
stc
lea
push
mov
jne
sbb
ret
aas
iret
pop
jecxz
shl
into
rcl
lret
mov
mov
aad
xchg
leave
movsb
inc
jecxz
mov
das
shlb
es
and
aas
aad
nop
aam
lods
movsb
xor
inc
cmpsl
vpcmpgtw
jb
mov
cmp
data16
adc
out
gs
sub
push
in
pop
pop
popa
sahf
or
sbb
mov
inc
mov
xor
lret
mov
fbstp
dec
test
incb
fisubrl
xor
je
fnstenv
iret
arpl
insl
mov
and
dec
dec
into
pop
rcll
aas
pushl
xor
call
jmp
ljmp
cmp
fnstsw
mov
out
pop
xchg
hlt
ss
mov
test
mov
add
or
out
sahf
outsl
call
jl
xor
jae
mov
repnz
sub
insl
ja
enter
insb
insl
pop
popa
bound
xor
lahf
dec
in
inc
jno
xchg
cmp
test
das
sbb
pusha
pop
pop
mov
jge
shll
pop
or
leave
imul
gs
outsb
in
mov
cwtl
mov
push
jp
out
jnp
mov
mov
cmp
adc
sbb
xchg
inc
xchg
ffreep
sub
cmovle
push
in
outsl
push
rclb
iret
fwait
sbb
dec
ror
sub
mov
test
pop
and
in
ljmp
lods
push
and
enter
mov
sub
je
cs
adc
bts
xor
fucomp
mov
cmpsl
mov
pop
scas
pusha
sahf
lret
insl
in
mov
inc
push
mov
rcl
dec
cmp
fsubrl
dec
add
xchg
call
or
cvtpi2ps
or
add
sub
pop
xor
pop
and
shrl
sbb
fldl
lret
and
insl
push
dec
test
cmp
sub
inc
add
mov
xor
imul
dec
ss
inc
or
roll
mov
and
mov
lahf
bound
popa
cmc
outsl
push
decb
movsl
lds
rcrb
xchg
stc
ds
sbb
out
inc
add
cmpsb
sbb
add
add
sbb
and
push
add
rcrl
xor
xchg
mov
jns
repnz
xchg
and
aaa
add
sahf
mov
test
punpckhbw
ret
push
or
popf
lret
adc
shlb
fsubrp
jb
jo
mov
sbb
fwait
jb
mov
aad
dec
mov
bound
add
sti
je
outsl
jle
fsubl
sbb
rcr
in
std
mov
loope
push
ss
cli
daa
outsl
jg
fsubr
xchg
das
mov
xchg
pushf
mov
std
ss
fidivs
lcall
icebp
jbe
xlat
pop
std
or
negb
sbb
ljmp
and
mov
mov
pop
xlat
sub
dec
ret
xchg
rclb
adcb
push
in
outsb
rolb
pop
pop
cmp
stc
mov
pop
rcl
ret
add
in
movsl
bound
pop
cs
mov
dec
or
push
fwait
cmpsl
mov
push
xor
stos
mov
or
in
std
cli
popf
aaa
or
in
stc
rol
add
fwait
imul
dec
arpl
popa
lahf
pop
outsl
sub
add
rcll
push
mov
sahf
in
in
cmp
lcall
cld
jno
dec
ja
aad
bound
fisubl
push
call
push
push
call
xor
add
ret
nop
nop
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
