in
test
xchg
cmp
mov
push
test
fidivrl
cmp
out
out
mov
test
leave
dec
sahf
fistpll
mov
mov
test
call
popa
or
dec
mov
test
push
jno
cmp
pop
call
jle
mov
jg
xchg
push
jb
sub
mov
test
jmp
lahf
lcall
mov
fsubr
jne
iret
or
jo
push
dec
or
pop
popa
insl
arpl
out
movsl
aam
out
and
pop
xorb
mov
or
mov
out
push
mov
incl
cmp
jmp
lcall
push
in
ljmp
and
stos
test
das
xor
mov
mov
adc
out
jns
out
xlat
cmp
fdivs
or
xor
xadd
pop
sbb
cmc
dec
jecxz
daa
ss
xor
mulb
scas
push
fsub
or
or
out
sub
dec
fisubrl
mov
adc
add
out
jbe
pop
cmpsb
or
xchg
and
popf
mov
mov
and
lea
dec
or
ja
sub
shl
movsb
push
mov
dec
and
pushf
xor
xor
out
adc
mulb
sbb
add
mov
lods
adc
add
loop
bound
pop
nop
adc
negb
mov
push
push
loop
mov
pop
and
fcoml
ret
xlat
adc
mov
pop
jge
test
pop
pushf
repz
test
sub
enter
loop
xchg
jo
jg
cmpsb
orl
pushf
sub
mov
sub
in
cmc
fldcw
ret
popf
pop
pop
mov
xor
cmp
xchg
scas
xchg
add
in
mov
dec
xchg
idivb
jno
cmp
push
lahf
test
dec
jg
and
push
fcoms
mov
cmp
out
push
add
stc
enter
cmp
jnp
xchg
gs
jns
mov
sbb
icebp
cmp
lret
enter
mov
sub
push
ret
lds
loope
mov
and
pushf
mov
sub
jecxz
cmc
mov
divb
rclb
fildll
rorb
or
xchg
jbe
js
jl
sbb
sti
loope
enter
sti
xchg
dec
mov
pop
jmp
fsubr
aas
insb
shl
sbb
lret
loope
ret
jl
rcll
push
adc
test
pop
sbb
pusha
push
repz
aam
outsl
jecxz
loope
ja
sbb
pop
pop
mov
outsl
test
mov
add
push
stc
pusha
repnz
ret
loop
add
sti
pop
cmc
cwtl
push
dec
mov
and
xchg
jo
mov
dec
inc
push
dec
decb
jb
subb
inc
xor
mov
dec
mov
in
or
inc
pop
xor
add
in
cltd
jno
push
fisttpl
popf
mov
push
test
xchg
andb
inc
shlb
mov
push
sbb
jnp
push
mov
adc
lods
push
mov
jns
sub
dec
stc
repz
int
frstor
jo
cmp
cmpsb
iret
or
ficomps
arpl
dec
mov
mov
stc
sbb
jmp
jae
mov
sar
mov
inc
mov
test
mov
insl
mov
mov
inc
or
cltd
inc
push
push
cmpsl
scas
mov
jle
or
mov
jmp
inc
lret
rol
pop
cmpsl
adc
enter
push
dec
scas
sbb
and
lea
jb
aaa
idivl
cmc
jno
mov
cmpsl
push
call
inc
test
push
cli
int3
ret
xor
aas
scas
mov
or
lds
inc
pop
pop
rolb
shlb
mov
insb
pop
or
outsl
pop
xor
pop
dec
or
dec
inc
and
sbb
cmp
inc
rolb
dec
jo
in
and
dec
mov
lahf
fmulp
mov
add
lahf
jne
std
test
add
shrl
and
pop
out
int3
mov
into
mov
mov
sub
cmp
in
push
stc
call
data16
rep
and
andl
outsb
mov
push
in
test
mov
sbbb
bound
test
or
or
lcall
mov
movsb
mov
add
dec
and
les
sub
inc
inc
cmc
jno
stc
and
pop
push
pop
mov
and
pop
or
xor
push
enter
movsl
cmp
dec
lcall
push
cmpb
xor
ret
stos
imul
aas
add
pop
push
sahf
push
jecxz
insl
xchg
sbb
mov
inc
arpl
add
pop
das
jle
inc
data16
add
into
lods
inc
jne
test
pushl
pop
mov
ja
lahf
outsb
inc
jecxz
popf
sbb
fsubrs
fwait
pusha
pop
adc
sbb
lock
mov
outsb
fmuls
adc
jb
cs
aam
popf
xlat
je
std
jge
add
push
adc
filds
andl
out
fidivl
das
cmp
jb
sbb
addl
sub
xor
or
clc
dec
xchg
xchg
mov
pusha
scas
ljmp
call
push
cltd
cmp
xchg
shll
testl
sarl
in
imul
arpl
mov
test
cmp
sbb
mov
push
mov
cmp
push
out
jns
add
pop
jae
loop
stc
xchg
jo
inc
loop
ficomps
or
fdivs
stc
mov
fwait
cmp
sbb
pop
jnp
rcrb
xchg
cmovnp
push
insb
push
jmp
pop
imul
fistps
jmp
inc
adc
mov
pop
cmpb
mov
add
and
repz
cltd
aas
or
mov
lods
std
pop
shrb
or
into
and
cmpsl
mov
cmp
ds
pushf
sbb
ror
jae
inc
inc
sub
into
out
push
pop
fnstcw
xor
cwtl
aam
gs
je
movsl
stc
outsl
notb
mov
scas
sub
outsl
insb
popf
sbb
push
cmp
adc
mov
inc
inc
enter
cmpl
dec
lret
sub
sahf
and
cli
or
out
dec
aaa
aam
inc
mov
into
jg
mov
cli
or
adcl
sub
mov
push
js
pop
dec
xchg
sbb
enter
inc
ret
lret
jmp
sbb
mov
addr16
sbb
lahf
ss
out
dec
cmpsb
cmp
int3
ret
out
mov
je
push
mov
lret
dec
cmpsb
add
mov
mov
aaa
xchg
pushf
pop
daa
les
xchg
rcrb
mov
mov
sahf
icebp
pop
xchg
lds
sbb
fxch
adc
stc
fbstp
fs
cmp
mov
mov
cmp
rcr
movsb
or
xor
or
pusha
int
aas
jge
shrl
ss
mov
scas
pop
fistpll
scas
inc
inc
mov
or
cmc
and
iret
out
add
jne
mov
push
mov
ret
xchg
hlt
popa
inc
sub
xor
sbb
xchg
jl
sbb
loopne
adc
out
ret
test
jg
dec
test
stos
xchg
call
mov
stos
addr16
xchg
push
sub
in
iret
enter
aas
jmp
test
mov
mov
fsubr
ret
inc
xor
pop
leave
and
push
xor
iret
mov
inc
mov
pop
dec
cs
jle
adc
fnstcw
mov
jb
sub
sarl
ljmp
add
movsl
xchg
pop
inc
fstps
add
push
ds
sbb
cmpsl
jbe
mov
rol
aaa
jns
pushf
cwtl
sti
jmp
bound
lods
pop
and
adc
xchg
ja
jp
dec
sub
cwtl
pop
sub
cmpsb
aad
les
fistps
jl
cmp
rol
dec
mov
sub
aas
cltd
jnp
sti
cli
mov
shlb
sbb
ret
xor
inc
inc
je
test
push
mov
or
leave
hlt
mov
cld
push
and
out
das
or
sbb
out
push
pop
aad
data16
inc
fldlg2
xor
clc
loopne
sub
into
jg
fcoms
mov
pop
js
mov
ret
sbb
dec
pop
xor
pop
mov
bound
into
sub
mov
cmpb
ror
add
stos
adc
xor
ss
dec
inc
lret
pop
cmpsb
in
insb
or
sbb
jo
sbb
arpl
iret
cltd
in
test
sbb
mov
jb
xchg
rcr
into
jno
pop
pop
ficompl
pop
mov
int3
inc
in
fcomp
or
into
loop
out
int3
je
fcoml
lea
filds
and
mov
popf
stos
mov
movsl
add
into
or
imul
insb
pop
xorl
sub
cmp
cmpsl
sub
leave
repz
fcmove
jecxz
jae
jno
pop
pushf
test
xchg
and
sub
in
xor
lea
jmp
pop
dec
es
test
inc
in
push
adc
adc
pop
mov
aas
jl
fucom
mov
lcall
or
dec
xchg
dec
push
setne
add
or
out
and
out
pop
out
shrb
xor
pop
jge
xor
adc
mov
adc
sub
xor
icebp
popf
and
sub
xor
sub
mov
dec
sahf
add
pop
mov
mov
inc
sbb
mov
xchg
and
in
cmp
cmpsb
jno
adc
mov
and
add
packsswb
lods
and
xchg
mov
dec
push
cltd
nop
int3
aam
sub
cs
xchg
or
pop
out
xor
jp
out
int
cmpsb
fnop
mov
cmc
and
xor
or
jecxz
mov
mov
mov
mov
inc
xor
iret
pop
add
data16
mov
subb
mov
js
adc
dec
push
out
jae
aam
mov
sti
push
nop
xor
mov
and
iret
mov
arpl
cmp
push
adc
jl
std
arpl
popa
cmp
jecxz
std
loopne
cmp
mov
jne
push
mov
add
add
sub
or
fiadds
in
clc
mov
cld
pop
leave
dec
push
and
mov
push
mov
int3
adc
int
xor
test
adc
sbb
sarb
test
cmp
outsl
inc
jbe
popa
in
push
hlt
btr
mov
sbb
inc
inc
add
subb
ret
xchg
lahf
aad
aam
or
or
xchg
jl
jge
mov
lahf
fs
push
test
pop
in
test
pop
ficoms
mov
xor
mov
cmp
jne
aaa
sub
pop
mov
lock
dec
fimuls
in
mov
testl
ja
mov
push
push
mov
iret
sbb
sub
and
sub
sarl
movsb
push
push
add
in
lcall
lds
js
inc
call
rolb
mov
test
xchg
mov
outsl
cmp
or
fstpt
inc
adc
adc
xor
imulb
push
xor
cs
or
cmp
xor
jle
xchg
xor
fsubp
pop
adc
outsb
lahf
xor
aaa
repz
popf
lods
xor
or
mov
stos
or
add
cmp
fs
mov
vandps
daa
mov
aas
cld
xchg
mov
es
inc
pushf
pop
and
cmc
inc
mov
das
sbb
popa
decb
push
cmpsb
pop
shll
ret
aam
inc
mov
test
mov
pop
dec
outsb
sti
das
pop
in
and
push
mov
pop
jb
and
pop
or
jge
push
mov
out
cmp
add
push
js
rcrb
adc
inc
mov
icebp
cmp
sbb
scas
cld
es
out
add
or
sarb
add
mov
call
outsb
fldcw
push
jo
lock
cs
stos
pusha
in
test
jnp
mov
sbb
test
idivl
clc
mov
adc
pop
pushf
adc
mov
and
insl
sbb
lods
lahf
imul
leave
or
fwait
xchg
push
jp
nop
and
loop
movsl
pop
xchg
and
cmp
adc
imul
lds
adc
jge
jbe
repz
in
mov
push
jno
push
push
out
pop
aam
test
xchg
or
call
sbb
outsb
cmp
inc
jne
sbb
cwtl
in
imul
mov
pop
cmc
push
pusha
ja
fsts
idivb
push
ds
xchg
js
sbb
jmp
pop
pop
movsb
adc
test
or
push
push
xor
xor
imul
loop
testb
inc
mov
mov
in
push
leave
xchg
lret
adcb
dec
out
pop
add
sahf
andl
push
outsl
aas
scas
test
ds
inc
inc
ror
dec
cld
iret
mov
pop
sbb
arpl
jb
ret
xor
sbb
je
and
dec
jmp
cmpsb
ret
cwtl
mov
shr
out
pusha
add
outsl
ljmp
sti
fcompl
mov
pop
mov
outsb
test
popa
push
rcll
push
pop
push
aaa
mov
sub
mov
repz
lods
mov
js
aaa
push
in
push
xchg
mov
clc
jno
popw
insb
or
adc
or
push
pop
movsb
xchg
int
dec
jbe
jb
outsb
mov
inc
lret
xchg
shrl
insl
out
incl
jle
fisttpll
xchg
push
xchg
xchg
es
or
mov
ret
inc
cltd
xchg
add
mov
mov
inc
jp
inc
mov
loop
pop
xchg
pop
out
or
and
mov
push
sbb
inc
call
mov
popf
sbb
cld
pushf
jge
cmp
dec
cmp
lahf
mov
mov
inc
add
mov
sub
pop
and
icebp
es
test
mov
add
push
mov
popf
mov
movsb
in
cld
mov
xor
or
lods
test
icebp
aam
dec
sub
fildll
stos
imul
pop
mov
dec
js
icebp
adc
push
cli
push
out
push
and
sub
mov
mov
shrl
mov
sub
mov
leave
or
xchg
outsl
hlt
jns
pop
shll
fdivrs
mov
aas
adc
sbb
xor
pop
push
jno
jnp
inc
shl
mul
jne
pop
in
arpl
add
sub
mov
cmc
pushf
cwtl
jmp
and
daa
inc
mov
add
pop
dec
push
xchg
jmp
lock
outsl
adc
andb
loope
xchg
cmpsb
sbb
clc
xorl
dec
movsb
aas
mov
inc
jmp
push
rclb
inc
push
jns
and
mov
rorl
scas
popa
pop
push
cmp
sti
sub
or
inc
in
push
add
int3
dec
dec
call
int3
mov
inc
in
mov
jle
jne
mov
lret
dec
pop
jge
insb
out
add
and
dec
inc
leave
cltd
aas
sbb
pop
pushf
movsl
pop
sbb
fcmovne
es
pop
sub
insl
lret
lock
leave
add
or
out
mov
cs
xor
jl
adc
jl
repnz
inc
js
and
push
lds
aaa
bound
pop
inc
mov
mov
gs
xor
xor
sbb
mov
jns
lahf
test
outsb
cwtl
faddl
mov
mov
pusha
pop
dec
inc
mov
loopne
jns
sahf
int3
cmpsb
xchg
jmp
push
jns
in
sub
js
mov
imul
mov
notb
aad
xor
lds
pop
sbb
cmp
cmovge
jns
rorl
xor
xchg
and
scas
lods
mov
in
push
leave
adc
cld
mov
pop
faddl
push
cmpb
ret
xor
mov
ja
pop
sbb
jmp
mov
loop,pt
mov
roll
inc
mov
loop
push
daa
cli
out
mov
cmpsl
bound
es
mov
iret
stos
adc
mov
mov
xchg
push
out
xchg
ror
mov
lock
cs
cmp
pop
jmp
clc
pop
dec
sub
testl
jl
fidivrs
cmp
push
daa
jmp
shl
aaa
or
lods
andb
roll
push
pop
test
and
push
jg
push
cmp
cs
mov
fsubrs
mov
subl
aad
dec
les
dec
jo
inc
out
jb
imulb
mov
loope
sbb
jge
jns
mov
push
or
mov
arpl
xchg
stos
cmpsb
dec
jb
pop
push
pop
subb
push
mov
mov
jb
jecxz
gs
or
sbb
jns
lcall
ja
and
jne
jb
add
sub
push
je
push
rcrb
pop
and
mov
mov
mov
mov
arpl
push
repnz
in
mov
pop
imul
mov
test
fcmovu
rclb
sbb
xor
fmull
icebp
js
out
add
nop
repnz
mov
jnp
jbe
push
push
not
imul
fdivrl
adc
sbb
lods
scas
in
or
ret
imul
lahf
ja
add
pop
fcom
mov
sbb
inc
jl
das
outsl
mov
push
sti
es
les
je
test
cmp
jo
ds
stc
loopne
shlb
insl
or
test
and
jo
mov
fcom
xor
dec
js
xchg
xchg
aaa
mov
jo
mov
ret
lcall
cmpsl
popa
outsb
imul
ror
clc
jno
mov
inc
pop
mov
and
out
jb
rclb
and
jno
adc
mov
pusha
jns
and
lea
insl
mov
sarl
mov
jecxz
int3
hlt
hlt
jmp
inc
dec
push
jbe
loop
out
push
mov
cmpsl
add
lcall
adc
dec
mov
call
sub
jne
xchg
repz
jne
or
aam
jb
xor
outsb
scas
nop
pop
pop
xchg
orl
push
cmp
jno
cmp
in
movsb
lock
mov
pop
fs
jl
stos
lahf
ret
xor
sbb
dec
stos
cmp
lcall
adc
out
inc
loopne
adc
pop
lods
lock
sbb
mov
and
jecxz
dec
ds
mov
jne
add
sarb
push
mov
adc
jb
sub
enter
mov
mov
or
push
xorl
rcrb
lds
loope
ficompl
mov
in
test
cmp
mov
dec
into
lcall
sarb
ret
mov
jnp
push
and
xlat
loopne
in
repz
xor
and
jbe
subb
cmp
lret
push
push
dec
mov
mov
inc
cwtl
cli
jnp
xchg
popa
mov
iret
ror
test
popf
stos
aam
popf
popf
xchg
cmp
test
add
shll
sbb
rcll
int3
iret
sub
and
dec
ljmp
xor
dec
negb
pop
inc
mov
xchg
out
gs
inc
cmpsb
jmp
or
pextrw
add
jbe
rorl
sub
and
mov
push
clc
stos
inc
cld
add
mov
sub
jae
insb
loopne
xchg
adc
mov
or
in
daa
testl
sbb
cmp
fwait
xchg
mov
or
add
cwtl
mov
push
pop
jne
jle
sarl
cmpsb
int
test
push
push
lret
out
inc
shrb
in
out
sub
nop
jae
pusha
fidivl
mov
and
push
aas
or
xchg
and
push
xor
in
clc
pop
push
out
cs
arpl
das
pop
scas
lret
leave
lock
imul
cwtl
dec
loop
stos
pop
rorl
or
rolb
out
or
test
push
into
add
mov
pop
adcl
jg
fsubrs
into
pop
sahf
mov
jns
fwait
or
adc
imul
in
add
push
xchg
cli
add
mov
adc
scas
mov
enter
mov
mov
mov
and
dec
in
je
fldenv
push
mov
insl
iret
aas
mov
fstpt
xchg
jnp
jns
inc
paddusw
or
imul
push
jb
jl
shll
mov
ret
cmp
scas
movsb
cmc
loope
imul
xor
fmulp
dec
push
mov
je
jnp
or
push
adc
inc
mov
fs
jge
lds
jl
sbb
or
inc
bound
push
cmpsl
lock
inc
dec
add
enter
cmp
outsl
add
mov
mov
push
adc
insl
and
cmp
mov
clc
leave
sahf
lods
add
scas
stos
jl
es
add
mov
sub
fldl
popa
stos
mov
ret
in
shlb
stc
inc
or
mov
mov
inc
cltd
mov
out
pop
imul
mov
int3
fistpll
jp
inc
adc
inc
mov
push
ljmp
sahf
pop
sahf
daa
dec
sbb
push
xchg
test
aaa
jb
or
mov
sub
outsl
fcoml
inc
cmpsl
mov
lock
pop
xchg
or
xor
loopne
and
push
movsl
je
out
pusha
sbb
js
shr
push
jp
dec
call
sub
push
add
aam
sub
in
nop
or
aaa
testb
shl
add
fwait
or
push
ljmp
xchg
push
add
das
push
aad
int3
xchg
inc
mov
sbb
out
aas
cltd
inc
call
movsb
outsl
std
xchg
scas
out
adc
rcll
push
pusha
mov
pop
push
or
inc
inc
jmp
sbb
lds
jne
rolb
jae
je
xor
mov
hlt
dec
dec
sub
jns
mov
shl
xorl
inc
mov
ss
pop
lods
sbb
add
call
lahf
or
in
sahf
lcall
ret
pop
pop
cmp
mov
sub
jo
and
fdivl
js
adc
jnp
nop
xorl
fldcw
pop
clc
adcl
sarl
dec
not
xor
xor
in
dec
aaa
aas
cmp
cs
dec
mull
into
sub
xor
insl
movsl
jge
mov
outsb
outsb
cmp
mov
sub
outsb
ficomps
mov
sbb
lret
ficoml
sub
mov
jge
cmp
cmp
pop
mov
sbb
inc
js
sahf
loope
jle
outsl
jns
ja
mov
out
mov
imul
sbb
add
popa
or
cmp
pop
xchg
adc
orb
repnz
cld
enter
mov
cmp
dec
inc
int
js
out
stos
dec
push
mov
in
scas
xchg
popa
icebp
pop
xchg
scas
mov
stos
sbb
sarb
add
jnp
test
sti
in
xchg
cmp
mov
mov
mov
cs
subl
sub
pop
jb
jmp
popa
sahf
push
sahf
dec
pop
mov
js
xchg
fwait
push
jmp
sbb
mov
add
or
test
cmpsl
xchg
xchg
leave
lods
push
push
jle
mov
je
jns
push
rcr
lock
jae
mov
movsb
push
sub
in
xchg
cmp
fisubrl
jp
push
push
add
jp,pt
inc
add
pop
add
pop
jnp
mov
xchg
mov
mov
cmpl
das
mov
or
cmp
adc
test
jne
and
xor
xor
out
sbb
repz
xor
ret
call
daa
dec
push
test
iret
das
mov
cltd
mov
std
gs
or
loopne
pop
dec
mov
sbb
cld
ud1
int
stc
sub
sub
mov
adc
xor
add
fdivs
cmp
loopne
push
inc
mov
push
cmp
iret
jno
jge
inc
pop
xchg
rcll
sbb
mov
rcr
or
cs
fidivl
or
fwait
inc
mov
inc
iret
cmpsl
rep
les
jge
dec
dec
cmp
test
xchg
not
arpl
mov
xlat
add
leave
dec
arpl
xor
inc
outsl
xor
test
repz
hlt
int3
into
sbb
inc
or
jns
push
jg
fs
pop
xchg
add
xor
add
inc
pandn
or
mov
mov
mov
lcall
fistl
notb
loope
into
sbb
mov
into
les
in
dec
test
inc
mov
lcall
pop
test
pop
jmp
cld
jb
in
lret
push
pop
cltd
notl
lods
inc
add
push
inc
sbbl
js
inc
mov
cmp
es
mov
jge
out
mov
ljmp
clc
insb
loope
mov
dec
call
gs
cmp
inc
inc
sti
mov
cs
test
daa
mov
ret
popf
dec
addb
adc
aad
push
insl
stc
pop
ficoms
stos
fisubrl
dec
out
xor
jns
leave
cltd
jne
xchg
test
xor
inc
rclb
ja
addr16
sbb
xchg
mov
jb
mov
lea
mov
pop
scas
adc
xchg
inc
jo
inc
lret
pop
leave
test
loope
adc
cmpsl
and
xchg
hlt
and
mov
cmp
mov
int3
add
xor
bound
shl
push
cli
pop
lods
jle
imul
fistpll
inc
test
jp
mov
stos
jo
add
mov
lea
mov
inc
les
mov
test
cmp
cs
inc
xorl
outsb
test
int3
idivb
aad
daa
mov
lcall
mov
adc
lods
pusha
adc
sbb
cmc
and
mov
lods
adc
inc
push
mov
jle
mov
cs
push
gs
xchg
outsl
movsl
push
out
and
pop
pushf
mov
and
sub
hlt
push
je
and
dec
test
pop
mov
icebp
test
mov
outsl
inc
es
sbb
xor
cmp
dec
test
xchg
cmp
pop
add
pop
dec
jne
pop
dec
out
dec
call
or
xlat
fimuls
outsl
dec
push
cli
in
adc
mov
xchg
cs
dec
bound
or
pop
cmc
cmc
fisubs
loope
push
xchg
dec
jl
jl
out
out
aad
clc
lds
lahf
jns
mov
cmpsl
sub
int
mov
aaa
mov
cmp
mov
xchg
dec
and
outsb
and
push
mov
add
and
push
dec
lcall
push
push
xchg
jl
in
mov
rcr
or
inc
mov
push
add
fwait
insl
sti
and
cmpsb
jmp
pop
or
addr16
gs
inc
push
sub
inc
push
outsb
and
scas
xchg
test
aaa
jecxz
dec
pop
enter
movl
inc
fcoms
js
mov
dec
repz
scas
ficoml
sub
inc
adcb
push
lock
faddp
sub
sub
pop
addb
cmpsl
addr16
push
cltd
xchg
das
push
push
adc
jmp
lcall
sub
ror
rorl
insl
arpl
mov
mov
insb
mov
lock
jp
mov
mov
jnp
pop
sbbb
push
mov
dec
negb
xor
nop
push
out
mov
cmc
test
jge
lcall
jl
stos
add
testl
mov
sti
int
cmp
push
dec
cmp
cs
inc
fs
inc
xchg
ss
and
xchg
insl
inc
jae
adc
mov
push
inc
movsl
cmpsb
push
shrl
mov
cmc
pop
insb
mov
jg
xor
sbb
add
pop
test
mov
es
dec
pop
xchg
ja
jnp
mov
sub
jno
idiv
shlb
sahf
xchg
pop
sahf
daa
mov
mov
jecxz
fsubs
push
lock
mov
mov
scas
push
jecxz
push
add
xor
inc
arpl
push
cmp
testl
leave
push
pop
sbb
or
pop
xlat
jmp
es
ds
sbb
lods
mov
aam
dec
mov
xchg
sahf
fldl
outsb
lods
ret
test
fstpl
fnstsw
aas
ret
push
adcl
inc
popa
out
add
scas
add
sub
icebp
lahf
xor
repnz
std
addr16
dec
push
sahf
shrb
xchg
stos
shlb
call
dec
ret
shl
shl
or
xchg
les
lret
jo
and
pop
mov
xchg
je
xchg
pop
in
pop
or
push
cmc
mov
sbb
cld
pop
adc
ljmp
out
dec
mov
inc
adcb
insl
adc
mov
and
fistpll
lret
xorb
or
cmpb
cwtl
shl
jb
xor
sub
mov
fisubs
xor
data16
iret
add
xor
ficompl
push
jns
sbb
fwait
lahf
ret
xorl
outsl
xor
popf
xor
push
push
jae
cltd
stc
pop
lock
int
cmc
inc
pop
push
imul
ret
dec
fwait
cmpsl
mov
xchg
mov
adc
ret
shll
ja
cld
sbb
shlb
cmc
imul
hlt
dec
sbb
and
xchg
stos
int
push
dec
bound
push
js
mull
cwtl
lret
mov
dec
shrl
xor
jge
enter
push
push
push
xor
cmc
repz
xchg
pop
mov
push
mov
inc
cmc
pop
mov
jno
pop
xchg
jae
mov
hlt
add
outsl
outsb
psubq
hlt
loopne
xor
shll
mov
push
int
clc
pop
dec
test
jecxz
sbbl
pop
xor
repz
push
gs
fbld
mov
shrb
pop
hlt
rorl
xchg
push
negb
lea
sub
aam
push
ds
pop
ret
xor
push
inc
mov
push
das
push
repz
xor
addr16
adc
adc
pop
xor
inc
or
inc
push
sub
mov
in
xchg
adc
fildll
fwait
sub
and
int
mov
adc
loop
aaa
divl
sub
add
clc
iret
lret
cmc
push
xchg
adc
push
sbb
rorl
daa
push
add
push
aaa
jle
vmovapd
rol
xor
aad
mov
loope
cmp
push
movsl
cmp
push
xchg
push
sub
xchg
das
dec
call
xor
add
sahf
mov
or
fstps
mov
dec
cmpxchg
ds
sub
pop
or
pusha
cmc
ds
push
add
jg
jmp
cmp
and
inc
cmc
inc
xor
shr
cwtl
mov
and
mov
call
sahf
xchg
jne
mov
cwtl
scas
sbb
frstor
aam
psubsb
ljmp
push
inc
icebp
jp
int
test
sub
pusha
dec
addr16
stos
cmc
add
xlat
cli
mov
lret
push
lds
sub
test
insl
sbb
or
mov
mov
js
pop
cmp
push
push
mov
or
lea
pop
inc
push
in
push
mov
xor
mov
xor
lds
popa
pop
inc
pop
add
rol
xchg
frstor
mov
mov
into
decl
mov
pop
sbb
pop
adc
inc
jp
mov
xchg
mov
or
cltd
setnp
cmp
loope
orb
testl
mov
pop
mov
ret
js
mov
jb
push
insb
pop
sbb
fbld
and
dec
and
sbb
mov
jle
xor
testb
lock
sbb
lods
lret
inc
cmp
cmp
xchg
fstpl
push
add
enter
lcall
pop
add
pop
arpl
sbb
ds
add
and
inc
imul
push
add
cmpsb
or
das
add
jb
cltd
xor
fcom
inc
mov
and
inc
testb
clc
or
mov
out
xchg
mov
mov
dec
and
aam
cltd
pop
or
jne
pop
sahf
nop
push
fildl
dec
ljmp
xchg
leave
popf
mov
ffreep
jns
cmp
lcall
jne
xchg
mov
push
mov
fcoml
add
add
fcoml
sub
stos
lock
mov
mov
cmpsl
int
test
sub
bound
mov
outsl
lahf
gs
gs
sub
sub
scas
cmp
repz
xor
mov
jne
incb
mov
mov
mov
lods
out
xchg
addb
inc
lret
push
xor
inc
ficoms
push
aad
xchg
adc
lds
and
mov
push
push
sub
out
ficoml
push
and
shll
adc
xchg
stc
and
stc
lcall
mov
cmp
xor
jmp
push
push
ds
pop
inc
in
icebp
addb
leave
jns
sahf
movsb
or
daa
add
mov
adcb
cmp
out
mov
mov
and
addb
popf
push
insl
mov
push
sub
mov
ja
or
pop
jle
push
inc
xor
hlt
ss
imulb
jae
ret
push
mov
mov
rcrb
or
test
enter
jns
popa
mov
xor
clc
pushf
adc
dec
mov
push
jb
adc
and
jo
xor
fdivrs
movl
js
imul
sub
mov
in
jb
call
mov
jns
xchg
insl
add
mov
es
inc
adc
mov
and
hlt
in
leave
dec
xchg
es
add
inc
sar
add
sarl
ja
leave
pop
jecxz
adc
cli
lods
mov
aad
add
and
jno
dec
jle
xor
enter
shl
jmp
mov
pop
stos
mov
js
das
inc
bound
lods
repnz
push
jb
fidivrl
into
sbb
imul
aaa
xchg
cmp
push
push
mov
repz
sbb
pop
aam
sbb
mov
std
ds
push
jge
mov
jl
shlb
cmp
xlat
push
mov
add
enter
push
js
xchg
mov
in
xchg
or
outsb
popa
fcoml
rcr
fdivp
aaa
xlat
cmpsl
imul
add
mov
lods
push
stc
movsb
sub
pop
add
loopne
icebp
dec
sub
push
sbb
mov
mov
lret
mov
mov
or
js
loopne
sbb
jp
mov
shrl
xor
out
inc
stos
test
decl
jo
xor
repz
clc
stos
jmp
sbb
lods
lahf
jae
xchg
sbb
daa
iret
jl
inc
cltd
fstps
dec
lcall
add
fistps
add
jge
sub
push
inc
das
jmp
mov
and
data16
aad
inc
mov
xchg
pop
iret
mov
repnz
enter
mov
aaa
cwtl
pop
sub
ret
jns
push
jp
cld
arpl
fisttps
test
push
mov
pop
insb
loope
cmpsl
adc
fucomi
std
pop
test
adc
pop
jle
in
mov
jbe
shl
adc
dec
push
inc
call
inc
xchg
mov
dec
cmpsl
or
pop
and
fidivrs
pop
jg
and
cld
es
mov
call
in
mov
filds
loop
and
sti
mov
daa
pop
jno
fstpl
out
or
xchg
xchg
pop
push
add
push
cmp
xlat
repz
daa
or
es
sbb
mov
shll
ljmp
cmc
add
push
or
xlat
test
sub
ljmp
loopne
loope
popf
ret
aam
std
or
mov
inc
into
lcall
xchg
cmp
cwtl
mov
hlt
sbb
or
out
mov
out
lahf
icebp
in
fisttpl
cltd
jb
jae
cwtl
pop
xor
enter
jmp
sub
or
nop
test
cmp
and
ljmp
popa
lds
shrl
and
cli
xor
arpl
nop
fcoml
xor
add
out
or
and
mov
subl
scas
std
mov
addr16
into
mov
bound
in
repz
fidivrl
mov
aam
arpl
repnz
gs
mov
and
xor
cmp
insl
addb
popf
pop
loope
mov
mov
clc
fadd
adc
roll
aaa
mov
jp
and
inc
jecxz
pushf
clc
cmp
fs
mov
inc
xor
or
movsl
adc
mov
add
cmp
sub
repnz
lock
mov
add
jp
or
pop
out
mov
insl
roll
loope
cwtl
les
xlat
popa
or
iret
faddl
jae
sbb
arpl
push
push
or
add
and
mov
ss
fwait
xchg
into
cmp
mov
dec
neg
push
adc
movsl
popa
lods
sahf
mov
xchg
push
or
push
jl
or
push
data16
and
jmp
insb
rclb
popa
or
push
push
jmp
and
lret
sti
and
je
and
and
dec
cmp
ds
std
jl
fisttps
out
daa
ljmp
ss
sub
pop
adc
and
fbstp
jge
lahf
cmp
lahf
testl
cltd
shll
sbbl
dec
push
loope
add
add
cmp
lret
in
and
arpl
ja
push
mov
ret
and
xor
cmp
icebp
mov
or
outsl
xchg
mov
imul
jb
lds
jno
test
mov
popa
jae
fcmovu
and
mov
jge
in
in
ror
insl
xor
inc
fimuls
sarl
and
mov
ret
in
fnstcw
sti
outsb
dec
sbb
jo
add
xchg
dec
scas
xchg
cmpsl
ficompl
fisttpll
adc
mov
cwtl
mov
pop
jne
sbbl
xor
xchg
das
dec
ror
mov
jb
repz
rorl
leave
or
int
sub
mov
in
mov
and
jnp
push
sbb
enter
out
stos
inc
imul
pusha
insl
mov
cmpsl
jecxz
mov
mov
fwait
sub
sub
ja
and
daa
aam
jp
pop
add
in
jb
dec
rorb
daa
or
and
mov
add
jmp
dec
or
push
push
daa
mov
imul
sub
mov
jns
lods
fnstsw
lret
or
into
testb
and
inc
add
xor
leave
jp
test
lods
jo
stos
jne
out
adc
mov
pusha
shrb
aas
ljmp
and
fcmovnb
mov
jno
xor
daa
mov
inc
sti
add
push
sbbl
cmp
xchg
ret
xchg
stc
mov
xor
movsb
leave
test
hlt
adc
test
push
mov
mov
movsb
jmp
cmpsl
push
xor
inc
inc
jle
in
arpl
cs
mov
sbb
jns
shll
fdivrs
sub
jp
in
bnd
add
xchg
fs
repz
das
test
ljmp
ljmp
out
sbb
inc
out
inc
xlat
outsl
in
dec
pusha
sti
add
test
xor
std
push
and
daa
mov
cmp
mov
inc
lret
inc
test
xor
inc
pop
jp
sub
cwtl
pop
daa
adc
inc
xchg
lret
dec
nop
out
pop
xor
mov
or
std
ficompl
or
jb
adc
mov
dec
pop
sub
ljmp
or
or
dec
add
leave
icebp
pop
into
and
test
jbe
sahf
xor
out
mov
add
lret
mov
lcall
jb
xchg
pushf
mov
cli
repz
sub
add
or
lods
lods
cmpsl
pop
jmp
repz
add
pop
push
and
lods
mov
xorb
push
stos
lods
push
hlt
div
and
sti
lret
dec
jbe
push
adc
out
pop
mov
dec
xchg
inc
or
jnp
push
mov
cmp
pop
popf
mov
data16
mov
insl
mov
pop
ja
in
insl
jle
lret
mov
push
adc
sbb
aaa
inc
xor
jmp
aad
test
fxch
std
movsb
mov
movsb
xchg
mov
in
imul
pop
ljmp
and
dec
add
imul
cwtl
sbbl
sub
sub
mov
push
jae
adc
popl
lret
sbb
sbb
sbb
mov
test
adc
xchg
pushf
ficomps
sub
in
mov
loope
add
fisttps
mov
ss
loopne
std
fldl
mov
loope
push
pop
jns
sbb
andb
fucomip
bnd
cmpsl
in
repz
es
adc
stc
les
or
sti
xchg
or
and
ljmp
cmpsb
mov
sub
nop
or
sahf
aaa
dec
push
xchg
nop
mov
test
cmp
jecxz
mov
jne
push
or
mov
ret
mov
dec
sbb
inc
jb
aam
push
jmp
mov
arpl
mov
xchg
push
idiv
cmpsb
sti
sar
in
mov
sub
mov
dec
sahf
cld
mov
cmp
inc
insb
mov
push
iret
mov
or
stos
daa
xchg
adc
test
lods
adc
inc
test
xlat
cltd
inc
rcrb
decb
jns
add
sub
jno
jne
push
sahf
push
loope
testb
pushl
inc
fsubs
pusha
leave
filds
pop
popa
call
cli
inc
pusha
rolb
mov
fisttpll
dec
sarb
jmp
dec
lcall
popf
adc
cli
fbstp
aas
xchg
pop
aas
dec
dec
loop
jl
imul
cmp
test
xchg
jbe
stos
jge
repnz
mov
bound
pop
mov
xor
mov
cltd
lahf
push
mov
loope
and
push
push
pop
mov
movsb
mov
test
add
adc
mov
mov
and
push
fsave
loopne
mov
push
pop
out
add
mov
and
adc
ja
pop
out
je
sub
xchg
xchg
mov
int3
inc
sti
add
push
scas
roll
and
pop
or
in
jp
cmpsl
mov
add
shrl
push
or
rorb
imul
push
nop
in
mov
pop
xchg
stc
inc
xchg
faddl
repz
movsb
shlb
inc
paddd
or
jp
fistps
enter
lcall
push
mov
idiv
movsb
dec
pop
test
xchg
lods
add
push
in
or
cmp
mov
pop
or
lahf
sbb
add
mov
xchg
add
cmp
mov
rolb
arpl
xchg
leave
mov
subb
sub
flds
outsl
pop
jp
mov
addr16
les
ljmp
mov
stos
shr
mov
lcall
idivb
inc
mov
pop
jnp
call
outsl
pop
jg
and
sub
push
mov
mov
mov
bound
fisttpll
pop
add
sub
aas
imul
and
lods
fimull
mov
push
insb
psrlq
pushf
inc
jae
adc
push
pop
push
adc
lret
lahf
inc
add
xor
and
or
cmp
pop
pop
cmpsl
cmp
mov
loope
push
stc
jp
outsl
lret
xor
pop
add
inc
pop
mov
ret
in
pop
fs
incl
push
mov
adc
lcall
xor
cltd
jae
or
add
pop
pusha
pusha
pop
call
aad
xchg
std
ljmp
cmp
lret
push
xlat
and
or
insb
or
dec
mov
js
add
push
std
imul
fisubs
push
dec
fyl2xp1
xor
mov
lods
add
orl
adc
xor
iret
out
out
std
inc
mov
sub
mov
cwtl
cld
sub
pushf
rorb
into
cmp
mov
xor
cwtl
add
inc
xor
insl
call
xchg
cs
and
dec
outsb
pop
dec
adc
mov
cmp
sub
ss
shll
flds
fdivrl
insl
pop
lock
into
iret
mov
push
cmpsl
in
cmp
ljmp
push
lds
outsb
mov
adc
adc
loop
imul
daa
mov
inc
mov
pop
cmp
xchg
insl
add
sbb
jp
cwtl
mov
mov
lret
push
test
data16
mov
aas
mov
fiaddl
xchg
ret
in
lock
rol
movsb
es
pop
mov
in
aam
add
mov
aam
push
mov
inc
pop
or
push
pop
leave
jp
sbb
mov
push
mov
sub
sub
inc
jle
imul
mov
jecxz
insb
ret
sarb
dec
cmp
fsubp
push
xor
insb
pusha
jae
jmp
sub
jnp
mov
jbe
sub
cmp
test
cmpsl
jae
jo
lods
out
rolb
mov
sub
or
xchg
aam
repz
test
xchg
ret
xor
lods
cmpsb
aam
push
or
ja
decb
int
pop
xor
pop
test
xor
mov
filds
mov
xchg
xor
inc
sbb
xor
cwtl
sahf
sub
pop
test
mov
and
xchg
xor
or
daa
mov
and
jno
out
loopne
jns
cltd
pop
push
sub
enter
xorb
sbb
mov
jbe
iret
xor
test
pop
std
pop
adc
pop
push
or
pop
mov
in
jne
mov
fsubs
pop
sahf
mov
cmpsb
movsl
jno
add
insl
pop
add
xor
xchg
fwait
leave
test
inc
push
mov
jae
mov
out
and
loope
push
add
push
cwtl
pop
in
out
test
insb
lcall
inc
inc
mov
lcall
sbb
pusha
pop
dec
bound
ret
mov
xchg
fmul
addl
add
adc
aas
cmpb
pop
dec
rcrb
dec
and
xlat
pop
pushw
xchg
daa
jnp
sahf
mov
stos
xor
fldcw
push
fmuls
cmp
dec
mov
or
jp
cmpsl
xor
sub
mov
jno
enter
loope
loop
push
loope
test
and
leave
push
aas
push
pop
push
loope
fnstenv
pop
rolb
test
inc
dec
test
in
sbb
jbe
mov
mov
int3
iret
orl
inc
push
leave
leave
inc
sbb
push
lcall
int
cs
cmp
and
adc
repz
jge
mov
sbb
iret
insl
jns
es
out
xchg
int
jl
xchg
loopne
or
pop
ljmp
xor
rcrl
sbb
and
les
mov
ja
adc
lea
push
xor
or
ss
mov
stos
ret
dec
push
mov
es
repz
lcall
mov
mov
int
aaa
inc
int3
or
push
jge
add
in
rclb
fcmovb
jb
xor
pop
and
fdivrp
add
sbb
stc
push
push
jle
and
roll
lods
push
sub
pop
xchg
cmpl
xchg
adc
iret
jbe
cld
aas
jecxz
and
daa
pop
xchg
les
sbb
fisubl
xor
lea
movsl
jno
loop
cmp
scas
cmp
xchg
shll
sbb
fucomip
and
outsb
xorl
xchg
push
cmp
pop
movsl
mov
dec
adc
push
in
mov
cmp
push
ficompl
shlb
dec
xchg
lret
repz
test
cmp
incb
lret
sbb
inc
jb
pop
pop
mov
into
outsl
idivl
push
sub
icebp
cmpsb
sbb
add
cmpsb
loop
sbb
and
lock
sarb
cmp
jge
jb
nop
cli
hlt
sub
out
in
loop,pn
mov
rcll
jmp
dec
into
shrl
push
lcall
jle
jne
lods
movsb
pop
call
aaa
cmpsb
clc
das
push
iret
push
ret
lahf
rcll
sub
test
popf
cmp
or
lods
repnz
movsl
xlat
jae
sbb
popf
imull
mov
rclb
pop
pop
lcall
or
and
outsb
popa
inc
pop
cmpsl
dec
mov
fnsave
adc
stos
pop
jg
xor
jae
pop
insb
mov
sarl
lahf
cmpsb
clc
sbb
outsb
mov
test
leave
dec
adc
jbe
cmpsb
mov
push
add
push
jg
jp
sahf
push
scas
lcall
adc
sub
mov
movsl
sbb
std
sbb
pop
movsb
call
outsb
leave
call
mov
scas
sub
jno
jge
push
scas
cmpb
inc
nop
hlt
inc
lods
loop
xor
mov
shlb
add
lret
out
inc
inc
bswap
mov
cld
loope
add
mov
add
rcl
jno
sub
jp
aad
cli
cmc
shrb
stos
sub
test
movsl
mov
icebp
out
xchg
pop
out
pop
test
inc
xor
add
aas
arpl
xchg
mov
or
mov
lret
mov
cli
pusha
jbe
insl
cwtl
movsl
mov
movsb
mov
mov
outsl
in
cmpsl
mov
ds
lahf
sbbl
mov
into
push
ret
movsb
aad
jmp
scas
or
mov
fldt
xor
sbbl
adc
or
lds
daa
pop
rcrl
and
jg
ja
popa
adc
adc
jo
dec
mov
shrb
jno
push
mov
and
pop
out
les
pushw
mov
mov
loopne
sti
push
or
mov
hlt
call
rolb
jae
mov
push
test
adc
cmp
stos
mov
inc
xchg
jge
ret
or
les
dec
sbb
sbb
xor
pop
jle
jl
push
push
push
pop
push
and
bnd
loope
stc
adc
in
or
jg
js
lds
jecxz
outsb
mov
in
mov
mov
and
pop
jecxz
or
hlt
mov
es
repz
jns
xor
cwtl
adc
jmp
mov
inc
call
das
and
cmp
stc
cld
or
int3
push
push
xchg
sbb
into
adc
fstps
adc
xchg
cmp
jae
aaa
dec
rcrb
fwait
addr16
ficomps
lock
add
loopne
dec
hlt
jecxz
ficoml
in
or
push
inc
out
aas
fmuls
mov
loop
mov
out
mov
mov
aas
loopne
fdivs
push
int3
mov
mov
jno
pop
pop
add
test
sub
cli
loope
lds
sub
loop
dec
repnz
jg
int3
fxch
arpl
pop
xchg
push
jge
pop
in
mov
adc
clc
rolb
jne
pushl
jge
int3
pop
dec
sub
mov
aad
test
cmp
xchg
jmp
pop
pop
es
nop
enter
push
jae
mov
ds
rol
cmpsb
add
fistpll
pmaxsw
pop
dec
lcall
scas
daa
outsb
mov
sbb
std
inc
pusha
pop
ds
dec
lcall
mov
jmp
mov
std
inc
dec
or
test
fidivl
push
adc
push
and
jns
into
mov
mulb
js
aaa
adc
pop
stc
fistpl
cmpsb
enter
lock
aam
fldenv
ja
and
push
xor
dec
jle
dec
cltd
outsb
out
rclb
jae
fdivl
or
sub
cltd
daa
lret
and
ret
mov
hlt
push
nop
out
xchg
loop
xchg
sbb
xchg
lods
push
fdivrs
cmp
sbb
xchg
sub
loopne
adc
arpl
scas
loop
nop
lea
icebp
mov
jns
inc
int
and
out
add
xchg
mov
dec
std
cwtl
sahf
sub
clc
cmpl
jmp
rorb
jno
pop
scas
xchg
jb
adc
es
cwtl
xchg
sub
fmull
jmp
dec
mov
mov
rolb
inc
push
inc
and
mov
mov
mov
loopne
and
fdivl
fstpt
cwtl
rcrb
icebp
xchg
jmp
pop
and
sbbb
xor
data16
loope
ret
test
or
sbb
iret
pushf
fistpll
mov
sahf
test
add
mov
les
lods
jg
mov
es
insb
jg
jb
sarb
repnz
sahf
out
dec
sahf
dec
xor
fdiv
and
xchg
cltd
xor
js
sub
in
push
insb
xchg
orb
cmpsl
and
lahf
in
stos
cmp
movsb
xchg
ret
dec
add
mov
jb
shll
orl
cmp
stc
inc
mov
dec
mov
stos
jecxz
add
mov
xor
push
dec
add
add
mov
mov
add
pop
mov
mov
out
jns
cli
pop
pop
cs
dec
inc
notb
leave
addr16
sbb
lods
mov
out
pusha
mov
or
inc
sub
in
mov
fcoms
adc
push
pop
int3
iret
out
addr16
xlat
icebp
ret
jmp
rcrb
lret
push
popa
outsb
mov
sub
push
popf
cmp
es
adc
ficompl
and
out
mov
outsl
insl
mov
loope
sarb
fiaddl
sbb
int
movl
push
fdivrl
imul
inc
mov
fcomps
pop
cmc
or
and
add
mov
push
mov
sbb
not
or
subl
add
push
shlb
pop
in
jb
sub
ja
es
mull
sbb
jl
out
mov
mov
push
mov
push
js
cmp
jns
enter
dec
and
data16
adc
xchg
push
jnp
lea
test
loop
pop
ret
xchg
cld
adc
sub
push
push
mov
xor
aas
in
mov
popf
daa
and
aam
cmpsb
inc
faddl
and
out
jecxz
lock
adc
mov
aad
dec
jbe
xor
cltd
test
mov
mov
inc
mov
lods
cltd
popa
push
mov
jne
imul
push
adc
shlb
mov
mov
aam
hlt
push
leave
jb
xchg
lea
ficompl
sub
pop
cmp
push
loop
or
out
pusha
je
js
sti
rorl
sti
ds
loopne
jae
inc
mov
fisttpl
and
and
int
dec
cld
xlat
movsb
mov
pop
mov
addr16
sub
popa
add
inc
sbb
dec
sbb
mov
and
out
inc
clc
sub
outsl
int3
decl
jl
idiv
icebp
addr16
stos
mov
ljmp
push
gs
dec
gs
jp
mov
div
subb
fistpl
sub
daa
pop
scas
mov
dec
out
daa
mov
cmp
stos
push
imulb
cmp
pop
hlt
jmp
inc
les
sub
pop
or
idivb
rdmsr
insl
lods
sti
mov
push
ljmp
bound
loop
adc
add
popa
jmp
out
sub
push
ds
push
fisttps
sbb
enter
jns
out
shr
imul
sbb
cmp
pop
gs
jp
aam
push
std
push
lea
inc
pavgb
mov
push
xor
jbe
pop
out
mov
sub
jp
idiv
lock
add
loopne
ds
hlt
es
sti
sbb
dec
std
mov
mov
mov
add
add
or
enter
push
cmp
push
clc
xor
in
xchg
push
enter
push
add
sbb
sub
cmp
xor
xor
mov
mov
aad
shll
jne
lret
insl
adcl
inc
in
sti
shl
mov
xchg
int3
sbb
notl
stos
lods
sub
test
call
pop
mov
push
bt
sbb
imul
dec
pop
and
inc
in
js
and
or
outsb
xchg
xor
cmp
out
sbb
mov
lock
scas
icebp
jl
pop
bnd
fsubl
jl
scas
fst
mov
mov
ja
or
add
dec
inc
out
xor
adc
inc
pop
icebp
cmp
ret
xchg
jne
push
fcomi
pop
loopne
mov
push
out
xor
stos
hlt
lock
or
scas
dec
sub
jmp
adc
je
shr
out
xchg
mull
xlat
je
add
nop
adc
in
or
mov
popa
cmp
ret
mov
xchg
add
fistpll
test
test
hlt
jne
test
sbb
or
loopne
pop
push
lods
pop
ret
cmpsl
das
jg
loopne
and
xchg
mov
xchg
or
fs
scas
fldt
lock
mov
adc
mov
dec
js
in
dec
sbb
adc
add
add
insl
addl
sub
out
gs
das
jge
cmp
fldl
insl
rcrb
cwtl
test
lods
rol
jge
mov
pop
pusha
mov
mov
push
push
mov
sbb
cs
xchg
jle
mov
and
mov
mov
pop
pop
stc
rolb
aad
adc
out
jns
mov
push
cmp
and
jbe
call
dec
cmpb
jo
rcll
jl
bound
adc
cmp
sbb
xor
in
mov
fwait
push
push
sti
loopne
pop
dec
dec
imull
scas
mov
arpl
inc
add
fs
into
test
fildll
mov
leave
mov
xor
imul
pop
pop
mov
daa
pusha
fsts
fwait
add
and
gs
iret
or
inc
pop
xchg
inc
xchg
or
clc
dec
movsb
lods
mov
lcall
outsb
mov
leave
add
sarl
mov
and
mov
repnz
push
inc
loop
mov
pop
testl
test
jae
lret
jecxz
mov
imul
sbb
out
mov
pushf
scas
ret
adc
lea
loopne
push
rorl
cwtl
repnz
mov
xchg
movsb
out
and
in
cli
test
cmp
hlt
mov
clc
call
fisubrl
mov
mov
mov
xlat
movsl
call
xchg
xor
add
mov
aas
popa
aad
mov
arpl
popf
or
loope
add
and
fwait
lock
adc
shlb
ud2
xchg
xchg
xchg
push
or
iret
add
out
scas
xchg
sbb
ss
cmp
pop
mov
xor
pop
lock
lds
stos
adc
shlb
call
xor
sahf
or
pop
das
push
dec
and
movsl
cmp
aam
mov
pop
mov
sub
test
mov
adc
sbbl
ss
pop
pop
ret
mov
icebp
mov
mov
stc
inc
mov
mov
loopne
or
or
test
inc
lea
pop
xchg
cmp
dec
xchg
push
add
cmpb
jl
or
in
loop
call
xchg
add
mov
inc
jp
out
clc
push
mov
jno
dec
cltd
fbstp
mov
lahf
or
pop
sbb
mov
adc
outsl
iret
cmp
movsl
cmp
fs
pop
stos
add
std
in
xchg
out
cmp
cmpsl
pop
mov
push
js
pop
lea
stos
push
sbb
push
jl
mov
inc
adc
xor
jne
fstps
pop
add
sbb
sbb
pop
jo
leave
add
ficoms
cltd
stos
js
rcrl
leave
aas
mov
push
fsub
aad
stos
lcall
pop
fdivrl
mov
fwait
aam
enter
movb
mov
add
mov
cmp
add
daa
js
add
adc
cmp
push
jo
add
xlat
push
xor
fdivl
xchg
jb
sbb
dec
and
inc
mov
xchg
xor
std
lock
lcall
cmc
jecxz
dec
fwait
jnp
cmp
ja
test
pop
out
jle
popa
sub
test
jb
xlat
rcll
lret
jmp
pop
push
arpl
mov
dec
jp
push
int3
mov
pop
testb
adcl
add
or
pop
mov
dec
or
push
sbb
cmpsl
xchg
dec
mov
push
iret
inc
lock
mov
mov
mov
movsl
aaa
fisubrs
xchg
call
dec
ljmp
adc
inc
inc
xor
pop
jae
xchg
loopne
xchg
out
mov
mov
and
mov
adc
dec
pushf
notl
outsl
stc
jmp
sub
pop
inc
xchg
imul
aam
dec
decb
mov
enter
not
ret
pop
loop
inc
cli
mov
jo
dec
mov
pop
sbb
push
orb
imul
aas
rolb
arpl
in
cmp
and
sub
sbb
add
daa
imul
out
shlb
mov
iret
cmp
test
xchg
mov
mov
jns
xchg
cs
xchg
jne
sar
jns
cmpb
xchg
sbb
in
sbb
lods
sahf
popa
mov
das
adc
cmp
sub
dec
call
mov
mov
xorb
cmp
loopne
andnps
sahf
js
cmpsl
movsl
loope
ret
mov
xor
popa
xchg
sbb
push
popf
adc
xchg
loope
or
mov
cmp
popf
jnp
in
inc
pop
pop
pop
stos
sahf
lret
add
pop
dec
loopne
dec
pushl
xor
mov
mov
mov
inc
sti
pop
fwait
jbe
or
mov
popw
adc
fmull
push
xor
daa
inc
xchg
xor
pop
adc
cld
cli
mov
je
dec
in
add
push
mov
out
add
jmp
mov
movsbl
mov
pop
push
aam
lea
mov
jle
mov
int3
stc
loop
loopne
hlt
sub
xor
loop
jecxz
adc
mov
adc
pop
fcoms
shlb
jp
fildll
stc
call
cmpsb
arpl
fs
pop
jns
scas
jo
and
sbb
pop
cmp
shrl
repz
dec
lock
ret
mov
mov
rorb
push
scas
mov
sub
scas
xchg
sbb
insl
xor
rorl
gs
in
sub
xchg
mov
pushf
dec
popa
push
or
push
fnstsw
xchg
cmc
sbb
dec
mov
jl
test
sub
jae
imul
sbb
les
mov
popf
sub
sbb
xor
cmp
lcall
inc
sub
aaa
cli
shrl
imulb
xor
ja
jge
adc
xchg
inc
xor
adc
outsb
outsl
sahf
lret
repz
add
loope
negb
frstor
xchg
add
lods
xchg
xor
lods
sbbb
out
sub
xor
aaa
and
xchg
xchg
xchg
fmull
in
dec
popa
std
loope
add
leave
repz
cmc
aad
cmp
cmp
test
xchg
lret
adc
add
jg
mov
sub
lcall
shrl
icebp
cmpsb
ja
sub
mov
roll
cmp
add
jo
into
out
fists
xchg
cltd
ret
push
js
mov
loope
rcr
inc
cmp
imul
xchg
cli
loopne
adc
scas
cmc
xor
xchg
sbb
lods
cmp
inc
mov
stos
sbb
fstpl
mov
test
and
clc
aam
inc
mov
pop
fiadds
mov
ds
gs
lock
out
or
arpl
daa
test
cwtl
pop
sub
or
mov
jl
scas
and
adc
loop
aas
hlt
fwait
xchg
outsl
cmp
scas
outsb
jb
cmp
inc
icebp
shrl
sbb
pop
push
enter
cmp
nop
out
out
and
leave
xchg
insl
adc
push
jl
out
lret
xor
adc
or
adc
hlt
loope
pop
xor
rcrl
push
int
jno
jo
out
or
dec
int3
loope
stos
xchg
in
pop
jns
xchg
add
mov
pusha
xor
mov
imul
cmp
xchg
xor
lea
mov
push
fistpl
jp
inc
bound
xchg
daa
xchg
jns
iret
sub
cmp
dec
push
in
mov
mov
nop
out
bound
dec
jb
loop
jg
or
imul
inc
sbb
inc
ret
xchg
int
ljmp
lds
xchg
xchg
jecxz
int
imul
in
scas
jg
ja
fdiv
inc
mov
test
jae
std
push
into
xchg
mov
faddl
inc
adc
lret
sub
aad
ss
push
fimull
and
ror
xchg
movsl
mov
sub
test
mov
aas
rorb
adc
mov
cmp
cmp
shr
xchg
push
jmp
sbb
mov
imul
imul
jmp
adc
push
mov
movsb
adc
push
out
dec
notl
hlt
lds
mov
or
lds
and
shlb
mov
scas
push
mov
inc
aaa
mov
sbb
inc
ret
ss
das
adc
lea
out
xor
mov
aaa
inc
mov
clc
hlt
std
pushf
add
outsb
mov
cmc
loop
lods
ret
adc
lahf
sub
fs
xchg
inc
std
dec
xor
mull
inc
sbb
pushf
js
rcll
adc
mov
pushf
add
or
ficoms
sub
lods
lcall
fs
cmpsl
push
mov
inc
push
adc
pop
aad
jmp
xlat
push
test
jl
pop
sub
pop
sarl
and
sbb
mov
fwait
xlat
push
mov
push
test
sub
dec
frstor
and
inc
mov
lds
les
or
les
adc
aas
mov
lea
push
out
dec
or
cltd
outsl
insb
sub
dec
mov
xchg
loopne
aas
lea
jo
mov
lock
call
inc
xor
and
inc
or
sub
lahf
fstpt
outsb
mov
jecxz
lea
inc
or
mov
push
inc
xlat
icebp
mov
inc
cs
and
xchg
push
push
into
shlb
sbb
scas
scas
clc
test
jno
inc
xchg
dec
pop
adc
aaa
test
cmpsb
imul
fwait
js
xor
mov
push
cmpsl
aaa
lock
mov
add
push
xlat
mov
jp
push
test
test
pop
shl
sub
xchg
leave
and
out
pop
lods
sub
das
push
hlt
mov
cmp
loope
jg
fs
fisttps
rcrl
jne
inc
stos
pop
push
pushf
subl
sbb
jo
sti
lea
jno
pop
lea
adc
cmc
and
mov
adc
adc
aas
mov
sub
dec
sbb
pop
jcxz
daa
cmpsb
push
add
sar
addr16
push
mov
cli
mov
filds
jg
ret
inc
jp
and
sti
jg
shrb
dec
test
mov
sbb
adc
imul
stos
pop
dec
mov
xchg
push
test
xor
jg
jl
cmp
mov
mov
fs
sbb
outsl
mov
icebp
sbb
inc
lock
ficomps
sub
push
jo
adc
pop
ror
loope
or
cmpsb
popf
jmp
dec
dec
in
hlt
aad
cmc
and
adc
js
cmp
in
aas
sbb
adc
jne
jp
adc
mov
sub
xchg
fiaddl
hlt
aas
icebp
jo
push
in
mov
aas
ljmp
movsl
rcll
iret
icebp
out
shrb
repz
arpl
mov
scas
add
sbb
enter
dec
lret
icebp
imul
cmp
bnd
cmp
dec
jb
mov
cmp
dec
add
adc
cmp
imul
adc
mov
pop
enter
aam
jmp
adc
fcompl
xchg
pop
sub
mov
gs
mov
fsubrs
out
lods
jnp
mov
sub
push
adc
loopne
in
jnp
mov
leave
mov
dec
mov
jno
sbb
in
adc
jl
fnstcw
test
lds
and
test
cmp
sbb
fistl
addr16
xchg
sti
imul
popa
and
ljmp
and
jne
push
cwtl
loop
mov
pop
mov
nop
inc
inc
pop
repnz
xchg
push
mov
sub
add
addr16
fisubl
cs
jnp
xchg
repnz
dec
push
add
adc
jb
mov
mov
dec
cmpl
js
jae
xchg
pop
pop
push
int3
sbb
or
dec
mov
lret
inc
or
pusha
dec
mov
test
in
mov
into
decl
outsl
jb
sarl
aad
dec
inc
fstl
adc
jl
mov
dec
push
in
out
cmp
insb
and
xchg
or
adc
inc
hlt
sub
std
add
loopne
mov
shlb
or
add
out
mov
mov
or
dec
mov
sti
lcall
test
movl
mov
sub
sahf
cmp
imul
mov
cmpsb
pushf
sub
jbe
stos
test
sbb
mov
inc
inc
cmp
jecxz
stos
jns
scas
and
dec
rorl
mov
out
call
sbb
mov
adc
jnp
xchg
jecxz
and
jp
add
sar
xchg
jp
mov
mov
stos
and
and
inc
aad
lcall
leave
scas
sbb
lahf
dec
scas
fwait
ret
loop
insb
sarl
pop
mov
fcompl
mov
lea
enter
pop
mov
stos
inc
push
jb
outsl
adc
and
in
dec
lret
pop
sbb
lods
pop
stos
add
jle
dec
push
xchg
aam
stos
outsb
les
dec
ret
jnp
add
or
jg
adc
lret
push
dec
int3
jle
mov
adc
cmpsl
repnz
sbb
cmp
sub
loopne
adc
mov
ficompl
les
sub
mov
pop
lret
fwait
jge
insb
pop
adc
adc
push
bound
xor
adc
mov
lock
arpl
negl
cld
or
and
repnz
insl
ret
xchg
movsl
icebp
xchg
outsb
pop
lret
pop
insl
mov
shrl
mov
sub
sti
sbb
jae
xor
or
add
mull
add
cmp
lods
or
adcl
aad
test
fmuls
lds
cwtl
mov
popf
mov
pop
mov
int3
ljmp
pop
int3
out
inc
fildl
sub
mov
xchg
cli
push
ds
and
mov
dec
mov
lods
pop
inc
push
outsl
sub
aaa
mov
lods
out
leave
dec
adc
clc
inc
or
clc
fwait
rolb
out
lods
cmp
cmp
test
repnz
xchg
ret
cmp
or
lock
inc
sbb
fwait
adc
push
dec
dec
push
repz
mov
mov
xchg
sub
or
inc
mov
int
aaa
and
and
fldenv
push
push
jg
in
aam
xchg
popf
stos
ds
sbbb
dec
and
sub
add
mov
dec
cmp
jmp
push
xlat
or
sbb
add
sub
data16
mov
les
loopne
mov
je
jl
mov
xchg
jl
dec
pop
add
pop
dec
and
sbb
bound
repnz
and
dec
xor
arpl
xor
popf
cmpsl
sar
or
add
and
repnz
cltd
or
lret
ja
out
add
push
ss
lret
mov
mov
lahf
insb
sub
inc
mov
ljmp
fucomp
adc
in
xchg
or
push
mov
mov
pop
dec
imul
daa
popf
psadbw
cmp
int
ljmp
or
jp
je
test
test
lret
data16
cmp
push
andb
pop
pushf
xchg
cs
fisubrl
and
xlat
out
or
mov
push
xchg
lea
repz
sub
pop
mov
aad
sub
out
sub
sbb
jns
pop
scas
jae
rcll
xchg
push
jno
inc
mov
cs
push
add
pop
mov
incl
dec
pandn
add
mov
push
mov
sarl
outsl
dec
sbb
scas
jno
ret
inc
dec
mov
sahf
ds
stos
add
out
clc
pop
xor
out
sub
sbb
add
repnz
divb
xchg
adc
out
nop
or
xor
ljmp
or
arpl
xor
or
xchg
lret
mov
push
add
aas
sub
pop
scas
in
add
mov
in
les
add
sbb
pushf
sub
xchg
xor
xor
ljmp
xor
mov
mov
imul
pop
dec
pop
and
xchg
test
roll
in
and
lahf
push
ljmp
push
add
iret
or
rorl
cli
fstpt
or
mov
stos
outsl
mov
out
je
sub
std
stc
mov
enter
pop
pushf
daa
ret
mov
adc
jns
and
pop
lods
jmp
into
push
clc
inc
in
pop
xor
or
insb
add
sbb
and
fidivrl
aad
lods
cmp
sub
out
adc
es
pop
fcompl
dec
adc
movb
mov
pop
push
popf
xor
dec
or
adc
ficoms
mov
ret
sbb
mov
repz
ror
xchg
mov
cltd
dec
push
and
push
push
xchg
je
mov
mov
mov
xchg
cltd
repz
das
jle
sbb
sub
lcall
mov
mov
xor
notl
jnp
sub
add
sarl
xor
pop
pop
outsl
push
mov
and
sarl
das
aam
leave
or
or
hlt
cmp
pop
pop
and
push
test
jo
popa
push
imul
lods
in
pop
mov
sbb
xorl
ret
xor
push
stos
outsl
stos
sub
mov
pop
mov
in
and
inc
xchg
mov
cmp
push
pop
into
push
pop
and
pop
sti
or
das
stc
xchg
pop
sbb
or
inc
mov
lahf
test
cwtl
fwait
xor
inc
xchg
push
test
cmp
adc
hlt
lcall
adcb
inc
jle
cmp
repnz
mov
push
add
ja
cmp
std
jp
push
sti
lea
test
jo
inc
popf
pop
rcr
cmpsl
mov
mov
jnp
repz
and
ljmp
fidivl
enter
aaa
jae
adc
in
mov
and
push
fcoml
test
repz
ret
int
idivb
not
jg
push
lods
movsl
cltd
das
xchg
cmp
cmc
mov
inc
in
fnop
xchg
into
inc
mov
ror
cmp
add
mov
arpl
repz
shr
cmp
inc
mov
nop
push
mov
xor
int3
push
or
and
mov
sbb
push
lret
ret
test
sub
adc
stos
dec
add
xor
sahf
inc
stos
bound
pop
lea
mov
push
pop
js
inc
cmpsl
push
inc
addr16
cli
push
inc
addb
rolb
xchg
pushl
and
pushf
scas
add
imul
ja
movsl
xor
addl
js
ja
inc
mov
sbb
sub
xchg
inc
or
push
idivb
mov
icebp
pop
fdiv
in
mov
adc
sbb
cmpsl
call
xchg
das
ret
out
sti
sbb
dec
jge
pop
xlat
fwait
sbb
ljmp
ret
xchg
jbe
pop
leave
add
scas
jge
das
lock
dec
cmc
xor
outsb
outsb
jne
repnz
in
adc
cli
imul
clc
sub
xor
and
mov
inc
jno
inc
ds
ret
in
mov
pusha
ret
push
push
dec
test
iret
mov
pop
pcmpgtb
sbb
jb
mov
mov
int3
rcll
jns
popf
jp
cmpsl
mov
leave
ja
jae
imul
mov
cmp
jge
add
scas
mov
push
inc
inc
inc
in
enter
mov
int3
push
out
sbb
mov
mov
jl
ja
xchg
arpl
iret
in
mov
pop
mov
cmp
cwtl
cmp
dec
stos
out
sub
pop
adc
clc
ljmp
xchg
les
aad
or
mov
outsl
in
jle
lret
lock
pop
push
test
mov
and
jp
roll
dec
mov
inc
mov
lods
cmc
jge
push
subl
dec
pop
popa
in
and
out
pop
in
push
out
inc
into
cmpl
gs
popf
xchg
stos
jge
popa
scas
xchg
shl
repz
sub
sub
push
push
pusha
std
xor
mov
dec
cmp
cmp
sar
fwait
out
xor
mov
in
rolb
sbb
dec
pushw
sub
or
or
jns
sbb
sbb
aad
xor
and
mov
pop
jns
adc
fcmovne
lret
scas
jge
push
sub
lods
or
push
inc
jo
stos
add
and
push
aaa
stos
adc
fidivs
mov
out
outsl
ret
shll
int3
pop
jg
stos
add
push
inc
mov
inc
cld
daa
jge
bound
xchg
xchg
pop
arpl
cmp
xchg
or
fmull
aad
or
stc
xor
hlt
lods
repz
push
imull
sub
xchg
lods
inc
mov
cmp
js
xchg
test
arpl
sbb
setbe
and
or
xlat
insb
jg
vaddps
xor
inc
stos
nop
in
cltd
or
fyl2x
sbb
jg
movsb
sub
lret
inc
ficompl
ss
jnp
fisubl
dec
jae
mov
std
int3
jb
xor
jno
inc
inc
stos
cld
pop
das
lock
pop
and
adc
jle
nop
fcmovu
das
das
insl
cmp
sub
sub
mov
and
push
leave
add
jmp
mov
jp
jno
cld
fidivl
cmp
daa
mov
je
xor
push
mov
roll
sahf
or
push
je
lahf
or
je
inc
stc
fisubrs
out
and
es
fnstsw
sub
jle
pop
inc
ja
out
lods
mov
mov
and
outsb
es
cwtl
cmc
fwait
pop
data16
push
fdivrl
mov
pop
enter
or
mov
negb
int
test
popf
pop
xor
ja
mov
pop
jmp
push
stos
inc
cmp
repz
das
add
xor
pop
loopne
pop
mov
push
inc
shlb
lahf
popf
mov
sbbb
and
add
stc
push
jno
test
mov
scas
fwait
setb
sub
je
cmp
pop
sbb
inc
pop
inc
and
andl
lea
mov
and
xor
xchg
dec
in
addb
daa
xchg
xchg
roll
jecxz
push
add
jae
mov
repnz
cmp
sbb
push
dec
mov
push
in
cltd
lock
dec
and
mov
dec
pop
lret
adc
mov
orb
lret
dec
shrb
sub
push
cltd
aaa
xor
push
sub
leave
call
add
out
cmpsl
negb
das
mov
ss
adc
mov
mov
ja
xlat
or
mov
mov
pop
cld
mov
roll
mov
and
mov
mov
xchg
idivl
lahf
sub
in
add
and
ret
jle
sub
pop
fcompl
mov
pop
movsb
xchg
in
enter
mov
push
std
mov
dec
mov
ret
int
mov
ss
fmull
into
cld
cltd
push
das
pop
jmp
out
std
add
fildll
add
insl
inc
pop
ficomps
les
loopne
subl
xchg
push
sub
jl
xchg
cmp
sti
xor
fs
push
jmp
or
cmp
push
imul
sbb
out
loopne
xor
push
pop
dec
jnp
inc
xchg
sarl
shrb
cmp
subl
in
ss
stos
mov
jbe
dec
nop
in
call
mov
xor
jae
mov
std
push
jmp
shll
cmp
xor
rcr
aas
imul
test
lret
mov
mov
dec
cmp
and
stos
push
movsl
xchg
sti
popf
pop
stos
cmp
rcl
sub
stc
sti
hlt
aad
pop
and
outsb
pop
cmp
push
rol
sbb
xchg
sbb
pop
scas
imul
fs
jne
jecxz
cmp
xor
cld
fwait
jl
in
pop
pushf
scas
jp
inc
mov
lds
invd
pop
shlb
mov
dec
mov
fstp
hlt
cmp
pop
fs
sbb
ret
divl
insl
call
jmp
out
xor
jnp
jle
lods
dec
or
movsb
jmp
in
dec
ficompl
popa
jg
pop
push
fidivrs
pop
fcomi
shll
xor
mov
sub
rorb
inc
insl
mov
test
mov
cltd
cmp
add
dec
mov
mov
in
loope
mov
adc
add
js
les
xor
outsb
sti
aaa
push
xor
xlat
jbe
cmpsl
jl
push
mov
mov
dec
adc
xor
jecxz
pop
and
mov
ja
jns
jp
dec
push
call
jp
pop
xor
mov
adc
mov
icebp
test
jno
addr16
sub
pusha
mov
sbbb
dec
insl
jle
ds
adc
test
push
pop
sbbb
dec
fnstenv
sbb
fsubr
into
dec
ja
cltd
mov
dec
jp
stc
je
adcb
mov
test
cmpsb
xchg
jbe
mov
pop
test
pop
and
nop
dec
sahf
xchg
pop
stos
cld
push
iret
aaa
sarl
xchg
icebp
sbb
filds
sub
aas
mov
sbb
loope
dec
daa
xor
xor
mov
cmc
fucomip
dec
imul
inc
fcmovbe
cmp
test
aas
imul
in
negb
xchg
aad
mov
xchg
testl
jne
pop
cld
mov
xchg
pop
push
pushf
inc
cmpsl
divl
es
lock
adc
stc
les
lds
or
xor
inc
or
push
stos
jb
inc
lea
popa
outsl
sbb
cmc
out
adc
adc
in
xchg
inc
push
pop
sarb
mov
sub
lods
data16
cltd
xchg
adcl
mov
enter
rcrl
push
sub
mov
lea
push
inc
sub
cwtl
lahf
xchg
sbb
add
aas
dec
pop
add
shrb
xor
lock
fdiv
cmp
pushf
test
sbb
inc
or
in
jecxz
and
testl
adc
int3
pop
aas
add
je
cmp
cmp
repnz
jne
xchg
add
inc
xchg
push
fcmovnbe
stos
adc
pop
decl
mov
xchg
jp
mov
mov
popf
cmp
add
jnp
sub
lea
push
ret
bound
lret
idivb
pop
shl
cmp
pop
push
and
jnp
adc
mov
fistpll
in
push
and
mov
jbe
lret
out
cli
and
lods
test
inc
rclb
sbb
sub
in
daa
sbb
insl
fists
je
das
dec
and
jl
mov
cmp
xchg
ljmp
hlt
into
push
dec
lods
scas
out
rclb
hlt
inc
in
sbb
xor
mov
das
push
out
imul
mov
incb
stos
loop
int3
mov
popl
loopne
iret
ret
daa
sbb
jb
inc
stos
sahf
mov
adc
loopne
inc
adc
cmpsb
mov
in
mov
add
and
in
push
sbb
pop
mov
xor
pop
adc
rclb
jecxz
data16
xor
jns
fistl
xchg
test
inc
add
mov
pop
mov
mov
in
jle
mov
outsl
and
flds
jp
jge
jge
scas
inc
push
dec
mov
roll
dec
sub
inc
push
xchg
cld
or
mov
fistps
int3
mov
inc
fistpl
daa
mov
adc
imul
add
cmp
mov
add
les
es
int
cli
adc
sub
dec
sub
dec
mul
xor
mov
sbb
scas
jae
out
or
dec
jg
push
and
and
ret
pusha
jl
push
cmc
pop
add
and
dec
adc
mov
sbb
inc
xchg
imul
push
test
xchg
adc
sbb
cmpb
pop
std
insl
and
icebp
aas
stos
in
pusha
inc
vpshlw
and
jae
sti
fdivrp
mov
and
push
add
jle
jo
imul
push
mov
push
fistpl
sub
mov
sbb
add
jecxz
cltd
stc
and
mov
dec
push
test
ss
mov
mov
out
and
push
adc
call
push
rep
jnp
push
lret
ds
push
cmpsb
sahf
add
push
mov
sbb
and
cltd
cli
stos
and
inc
dec
xor
lret
xchg
repz
push
xor
mov
hlt
sbb
jbe
pushf
into
scas
dec
push
mov
pop
jns
data16
repnz
add
into
pop
test
mov
repnz
adc
xor
dec
test
push
int3
and
iret
sbb
cmp
push
lock
ja
ret
stos
mov
mov
cmc
testl
xor
inc
cmp
inc
adc
les
lds
scas
arpl
cmp
mov
incb
adc
adc
push
inc
push
popa
jbe
pushf
and
xchg
test
add
xor
lcall
data16
imul
lcall
loop
pop
pop
xor
ljmp
lcall
movsl
mov
push
mov
scas
or
pop
bnd
xchg
loop
xchg
adc
loop
aam
mov
pop
ffreep
hlt
jnp
mov
pop
sbb
dec
dec
loop
jb
in
and
mov
mov
and
popf
sub
loopne
xlat
addr16
mov
sar
addr16
sbb
jb
sub
or
dec
mov
bound
popf
insb
xchg
xor
loope
dec
icebp
in
into
xor
and
rclb
fcmovb
fwait
add
pop
sbb
les
xor
jle
cmp
dec
int3
fs
fs
xchg
mov
xchg
push
add
sbb
push
rol
movsl
pop
test
out
add
packssdw
icebp
jno
call
jle
xchg
popf
add
data16
gs
jmp
iret
pushf
imul
lea
pop
test
xor
jp
inc
lods
out
loop
mov
inc
fstpl
jno
shl
stos
sahf
jo
cmp
and
mov
mov
xchg
xor
adc
sarb
sbb
lods
fsubp
jno
jno
cmpsb
mov
mov
push
fldenv
es
and
stos
shrb
mov
outsb
xchg
test
ret
sub
out
mov
sbb
add
es
data16
dec
mov
test
je
and
pop
int
push
or
inc
pop
jmp
jp
add
adc
dec
ficoms
mov
ret
rolb
inc
and
cmpsb
lret
mov
sarl
out
iret
mov
test
pop
add
lea
std
sbb
xchg
sbb
mov
push
pop
cli
cli
insl
push
int
inc
mov
and
hlt
nop
xor
out
sbb
pop
shll
sysenter
inc
mov
data16
jp
xchg
jecxz
cmpsb
dec
xchg
mov
ficomps
jmp
jns
mov
pop
sub
or
push
lock
pop
jno
insl
addl
mov
cld
push
xchg
mov
push
sarl
int
cmpsl
mov
dec
jmp
js
movsl
nop
push
ds
inc
jmp
scas
shll
mov
in
dec
out
or
icebp
jmp
mov
adc
cmp
scas
jl
push
and
imul
icebp
sub
dec
add
pop
aam
ss
push
jbe
and
mov
pop
pop
out
push
aam
out
mov
add
xchg
mov
aaa
push
pop
popa
rcll
mov
movsl
and
std
adc
js
push
cmp
fdivl
pusha
jp
negl
mov
pop
add
mov
or
jecxz
cmp
mov
pop
aaa
xchg
inc
jns
fstpt
jg
push
dec
xor
sahf
in
add
mov
fcoms
cld
test
jecxz
fistpl
sbb
pop
cmp
adc
jb
xchg
or
xchg
iret
adc
dec
push
dec
lds
loope
xchg
cli
pcmpeqb
jne
insb
inc
push
push
ss
jae
mov
sub
mov
movsl
sub
mov
add
fwait
aad
pop
jne
inc
mov
jge
xor
jo
add
dec
xor
cmp
pushf
cmpsb
popa
add
jle
shl
imul
cmp
lahf
enter
push
sbb
dec
mov
add
jge
mov
ret
add
xor
mov
lods
push
js
pusha
cmp
loope
add
lahf
pop
jecxz
cmpsl
push
pop
sti
mov
xor
ss
pusha
inc
xchg
popf
xchg
ret
mov
or
push
sti
dec
dec
cwtl
jge
push
cltd
ja
out
inc
jno
loop
fs
dec
lcall
test
and
sub
js
push
lret
xchg
outsb
xchg
test
lret
jb
jle
jl
mov
cmc
push
mov
sbb
jo
in
fists
jecxz
sahf
mov
cmp
inc
push
inc
jnp
xchg
bound
div
lods
sti
push
mov
pop
mov
popf
call
out
xor
xchg
arpl
orb
psubd
hlt
cwtl
dec
xchg
addr16
hlt
ja
dec
in
push
jecxz
adc
int3
in
std
mov
mov
pop
xchg
std
push
jg
cwtl
inc
sbb
pushf
add
fmull
xlat
fsubl
or
stc
jp
fcmovbe
adc
outsb
sub
jge
out
or
repz
adc
rorl
dec
adc
jge
inc
fldenv
fdivrs
dec
xchg
lock
mov
inc
inc
jns
or
std
leave
pop
add
lret
jl
lock
jl
fcmovbe
and
outsb
sarb
add
adc
push
test
mov
xchg
or
mov
and
mov
mov
pushf
xchg
out
subb
dec
pop
cmp
dec
pop
pop
dec
addr16
jecxz
lods
stc
insl
mov
testb
dec
mov
or
xchg
addr16
scas
aad
xchg
adc
incl
mov
fwait
adc
add
mov
mov
sarb
mov
into
lds
cmpsl
shll
sarl
and
mov
mov
pop
cmc
add
lods
popa
popf
icebp
test
xor
add
in
test
jmp
call
dec
inc
enter
daa
sub
xor
testb
aaa
lods
inc
loopne
aad
ret
enter
adc
mov
mov
push
lods
in
repnz
xrelease
mov
rcrl
lods
aaa
fcompl
es
jno
jo
sbb
xchg
cli
nop
xor
jo
pusha
push
xor
test
ljmp
pushf
mov
lcall
sub
ljmp
sbb
cmp
out
xchg
jae
xor
pop
xor
rcpps
lea
das
ljmp
es
push
mov
jns
dec
repz
rolb
xchg
es
xchg
test
jmp
mov
test
shlb
iret
aam
es
shlb
mov
ljmp
js
mov
mov
fidivs
fwait
arpl
mov
sub
les
add
mov
xor
test
add
mov
insl
fs
mov
adc
ret
lcall
xchg
sub
lahf
jle
sub
scas
add
sub
pop
xchg
pop
outsl
mov
clc
notb
inc
iret
mov
test
pop
fisttpl
scas
sti
inc
push
inc
aad
dec
xchg
fildll
lock
mov
pusha
pop
mov
cmc
lahf
imul
syscall
cmpsb
pop
push
shll
subl
lret
push
or
sbb
jnp
dec
pop
loope
sahf
mov
les
add
or
fxch
mov
cmp
mov
sbb
ss
jmp
jmp
lcall
pop
in
mov
negl
push
mov
sbb
lods
jnp
mov
xor
cmpsb
xor
lods
lea
ret
cmp
arpl
dec
lods
insb
sbb
mov
cmp
jbe
scas
test
add
jbe
adc
in
or
adc
mov
inc
stos
and
mov
lea
push
out
push
popl
add
add
cmpsb
mov
or
in
add
xchg
subl
push
or
inc
jl
jecxz
inc
fsubrl
cwtl
push
lock
pop
ljmp
jo
pushf
xchg
out
in
xchg
iret
fs
xchg
in
adc
inc
mov
shl
stos
mov
enter
fidivs
popa
xchg
icebp
or
lods
repz
imul
push
push
push
hlt
push
bound
pop
adc
js
lds
xchg
fcomps
pop
pop
rcrb
and
pop
pop
aas
lret
fs
dec
aas
fsubr
adc
lock
ss
ja
inc
popf
in
mov
mov
movsb
lock
repnz
pop
lds
and
pop
aam
xor
rcr
mov
aad
aad
jg
add
or
int
or
cltd
pop
mov
and
aas
xchg
mov
sbb
cmp
mov
and
or
rcr
inc
lock
cli
or
orl
daa
adc
jmp
add
xchg
test
xlat
adc
and
or
mov
inc
pop
dec
cmp
jo
sahf
push
cltd
mov
or
out
subl
cmp
insb
push
fcmove
xor
push
leave
movsl
sbb
jne
mov
jnp
inc
dec
mov
adc
pop
and
dec
frstor
out
leave
push
sbb
push
xor
mov
adc
xor
jmp
popf
mov
outsl
ds
push
ljmp
xor
jl
push
bound
pop
out
pop
cmpsb
or
xchg
test
push
movsl
out
xor
and
xor
aad
add
push
cwtl
out
cmp
out
dec
xor
test
pop
cld
jp
cmp
test
mov
dec
push
in
cwtl
lea
out
cmp
cmp
mov
ss
xchg
iret
push
cli
cli
test
push
out
jo
decb
jnp
xchg
test
jmp
lahf
js
ljmp
mov
pop
xor
push
int3
mov
loope
sbb
inc
sbb
adc
pop
ja
loop
scas
lock
hlt
icebp
mov
ljmp
lret
inc
in
vsubpd
mov
pop
jnp
loope
push
imul
adc
jge
ja
shrl
xor
das
cmp
xor
or
cwtl
sub
xor
gs
xchg
pop
push
mov
xchg
cmp
push
out
xor
rcll
push
shll
and
and
and
or
adc
and
call
jmp
cwtl
addl
popf
fs
mov
clc
mov
test
daa
pop
mov
dec
or
imul
fldt
adc
adc
mov
mov
and
call
push
into
pop
test
out
popa
into
fwait
xor
je
cmp
iret
adc
mov
and
push
push
dec
sbb
push
and
repz
cmpsb
outsl
push
jnp
sbb
scas
fcoml
cmp
cli
dec
sub
fsubrl
fdivrp
in
lret
mov
cmc
mov
popf
xchg
mov
lds
ror
inc
adc
or
xchg
movsl
cwtl
sub
push
mov
jg
xchg
mov
mov
js
add
notl
jge
push
fnstsw
cmc
pop
mov
inc
cltd
inc
sbb
out
mov
xchg
mov
adc
mov
xor
fdivs
clc
popl
add
or
fdivrl
mull
pop
mov
adc
out
jecxz
icebp
in
push
nop
shrb
imul
add
xor
cwtl
in
movsl
dec
in
pop
inc
xor
enter
push
call
pop
mov
fld
int3
shlb
fcompl
pop
jns
mov
dec
int3
push
pop
shll
scas
and
test
jp
push
movsb
cmp
imul
adc
lods
sub
mov
nop
pop
btr
stos
cmpsl
fdivr
shll
push
cmp
sub
call
loopne
push
xor
mov
and
adc
repnz
cld
inc
xchg
les
daa
fisttpll
enter
add
cs
std
js
ja
testb
call
out
push
cmpl
shl
and
stos
jno
cwtl
push
pusha
clc
dec
outsl
jl
mov
cmc
xor
mov
add
gs
mov
or
mov
cmp
outsb
aad
ds
rorl
xchg
pushf
dec
fs
repz
insb
and
dec
insl
mov
es
push
adc
lcall
or
idivl
test
pushf
lods
xchg
divb
and
xor
push
dec
cwtl
iret
mov
inc
xchg
pop
bound
data16
cld
xchg
cltd
ljmp
sbb
adc
mov
xchg
popf
js
je
shrl
jnp
mov
pop
xchg
jmp
scas
adc
push
or
xchg
cltd
xchg
cld
in
std
xorl
into
cmpsl
fcoml
sbb
repz
std
jecxz
cs
ret
pushf
pop
xor
ja
das
clc
orb
xlat
xchg
jge
add
dec
out
shlb
mov
mov
add
daa
loop
sahf
gs
fsubrs
pop
pop
xchg
mov
pop
out
clc
jae
fstpl
xchg
cld
and
mov
imul
mov
and
insl
in
clc
movsl
js
out
lret
jno
int
inc
cmp
repnz
cli
push
cmp
inc
inc
xchg
sub
jns
js
inc
adc
add
mov
cmp
inc
imul
popf
test
xchg
mov
and
out
inc
inc
es
lahf
jo
push
jge
fildl
cmp
dec
loop
movsb
xor
pushf
dec
or
insl
popl
imul
xor
jle
js
xchg
subl
push
push
rcrb
dec
stos
pop
test
aaa
fwait
jnp
jg
dec
push
test
mov
cwtl
pop
lret
jo
mov
out
fisttpll
loop
lcall
dec
jbe
lds
ret
push
pop
out
jmp
adc
lods
sbb
xor
mov
or
mov
fnsave
lock
sub
xchg
movb
lcall
rorl
fcoms
push
add
int
fdiv
push
pop
pop
jbe
xchg
sbb
inc
aad
add
xlat
dec
imul
mov
or
pop
xor
popf
in
es
mov
adc
or
mov
dec
jge
pusha
fs
lahf
in
lods
cmp
jl
mov
jbe
movd
inc
popl
jbe
inc
cmp
test
shlb
push
push
mov
jo
stc
jo
cltd
out
or
into
push
fadd
xchg
pop
insl
pop
sub
pusha
adc
jbe
fnstcw
jae
adc
sub
mov
fs
push
imul
insb
xor
push
inc
mov
ljmp
jnp
fldcw
imul
inc
add
or
and
icebp
pop
rcrb
push
fistpll
imul
mov
push
arpl
or
mov
mov
cmc
xor
int
pop
add
movsl
mov
andl
xor
stos
shl
dec
gs
or
dec
lds
cli
ret
jae
lcall
cmpsb
mov
fimull
and
mov
test
repnz
xchg
aad
scas
js
in
shrb
ljmp
ss
icebp
inc
test
repnz
xchg
xchg
cmp
loope
pushf
loopne
out
aad
das
insb
xor
jg
sbb
mov
jbe
pusha
push
push
push
and
pop
jno
in
adc
inc
addl
ds
push
cli
inc
dec
jp
mov
idivl
test
push
xor
pushaw
fnsave
and
negb
pop
sub
sahf
insb
sbb
sahf
inc
out
add
jno
xchg
cmp
pop
pop
cs
stos
ljmp
add
loopne
jo
in
mov
sbb
in
or
gs
fiaddl
inc
inc
mov
mov
or
adc
cmp
xor
andl
and
mov
push
mov
mov
inc
cmp
imul
jnp
sub
push
in
lcall
cmp
pop
pop
jo
in
roll
in
adc
xchg
lds
leave
call
jns
aad
push
andb
jne
popa
loope
addl
and
xor
cmovno
sarl
in
ret
sahf
cmp
stos
cld
pop
dec
sbb
jmp
loope
xor
xchg
xor
rolb
mov
cmp
and
popf
sbbb
icebp
add
or
stos
shrl
icebp
dec
lea
lahf
sbb
cmp
sub
jp
pop
test
jb
xor
imul
call
in
in
push
js
sahf
mov
das
and
xchg
popf
mov
popf
lds
stos
stos
or
mov
xlat
push
cmpsl
cmp
and
push
mov
push
or
jo
popa
pop
cs
mov
mov
cwtl
loopne
jne
lods
xor
inc
fimuls
cli
inc
jge
inc
pop
mov
outsl
xchg
or
es
hlt
pop
pop
insb
lret
pop
sbb
arpl
into
out
push
in
aas
repz
mov
stos
daa
jp
fidivl
dec
cmp
jl
xchg
xchg
or
sbb
aas
call
mov
mov
cmp
mov
inc
stc
movsl
enter
cs
ss
cmovae
insl
push
pop
jp
orl
sbb
in
inc
cmpsb
leave
dec
sarl
sub
mov
int3
fwait
and
ds
dec
inc
push
rorb
push
loope
ret
add
xorl
push
sbb
cmc
shrb
lret
jmp
les
mov
mov
mov
push
mov
fwait
shlb
aas
mov
pop
repnz
xchg
leave
push
pusha
xchg
lods
jb
nop
mov
pop
xor
jmp
mov
mov
adc
sbb
repnz
or
test
sbb
loopne
stos
inc
notb
push
mov
jmp
jae
push
mov
pop
daa
sahf
jge
cmc
into
aad
cmp
jge
movsb
mov
in
sbbl
test
jmp
sub
mov
push
or
ds
imul
xchg
add
movsl
pop
dec
hlt
sahf
test
xor
mov
pop
add
js
adc
flds
jecxz
adc
es
cmp
test
stos
inc
cltd
or
cmc
push
xchg
outsb
scas
and
and
mov
test
mov
xlat
leave
cmpsb
and
nop
loop
aam
out
xchg
lret
into
cld
xor
cmpsb
jl
stos
popf
movsb
pop
and
mov
popa
xchg
clc
inc
pop
repnz
je
ds
ror
inc
xor
roll
sbb
sbb
rolb
pusha
out
ss
jb
adc
clc
sti
sbb
xor
ret
mov
dec
jo
add
xor
jle
stc
cli
mov
das
fabs
and
adc
imul
aas
andb
cli
add
arpl
cltd
mov
dec
sub
jecxz
jo
mov
sbb
arpl
xchg
push
loope
sbbb
mov
inc
pop
inc
pop
push
mov
jl
adc
add
in
push
pop
jl
mov
mov
xchg
mov
nop
andb
adc
adc
rolb
sbb
enter
clc
insl
sub
mov
jge
fsub
and
mov
xor
lret
mov
shll
inc
rorl
stos
and
aad
push
add
imul
cld
mov
sub
in
mov
push
cmpsb
fadd
test
hlt
lret
cmp
mov
leave
lahf
imul
xor
xor
ds
fnstsw
pop
fwait
xchg
in
popf
lods
cmp
and
mov
push
ss
cs
mov
testb
iret
insb
in
pop
push
jle
inc
mov
and
add
xlat
and
out
ret
notl
push
sub
movsb
xor
movsb
lds
xchg
divb
or
icebp
imul
dec
and
pop
daa
in
dec
ret
mov
mov
mov
movsb
pop
test
or
mov
jmp
call
sub
pusha
gs
jmp
inc
lret
enter
lea
ljmp
iret
cmp
mov
mov
xor
xor
test
int3
loopne
inc
mov
xchg
adc
insl
mov
sti
dec
enter
fldcw
std
and
insl
lods
cmp
insl
push
les
ljmp
or
stos
or
out
decl
in
xor
icebp
and
dec
fcmove
adc
jae
add
cmpsl
jne
jnp
scas
bound
or
fnstsw
mov
adc
iret
mov
das
shrl
aaa
lods
mov
cli
dec
cwtl
xchg
lock
lret
add
xchg
ja
mov
dec
rolb
cld
lods
mov
shlb
sbb
pop
adc
mov
jno
stc
inc
fcomi
or
sub
jg
xchg
push
lahf
pushf
sub
inc
pop
mov
sub
pop
jecxz
stc
xlat
rclb
inc
and
ret
jae
mov
inc
int
mov
push
xor
ds
add
jle
into
fwait
adc
mov
jl
popa
and
ds
mov
lcall
jo
pusha
mov
dec
mov
cmp
das
in
sti
fdiv
cmp
adc
scas
cld
sbb
subb
or
dec
jae
mov
movsb
pop
ficompl
call
ret
pop
call
mov
sbb
adc
in
repz
mov
sbb
sbb
xchg
fcoms
dec
mov
adc
push
test
testl
push
fwait
push
bound
xlat
xchg
adc
imul
rcll
xor
pop
pushw
add
dec
adc
push
out
add
sub
test
lret
test
jae
inc
inc
cmp
mov
ljmp
ret
pcmpgtb
xor
loope
mul
ds
roll
fdivs
ret
cs
mov
cmp
dec
push
lret
pop
push
jl
cs
inc
stos
xchg
sub
adc
loop
xchg
push
negl
popa
add
and
call
mov
addb
jb
mov
test
sbb
sarl
mov
jmp
fnstenv
inc
pop
jl
cld
jl
insb
inc
popa
movsl
and
lcall
push
xor
and
cltd
mov
xor
inc
or
sub
mov
cli
ficomps
popa
pop
cmp
xlat
in
imul
mov
lods
sbb
inc
lret
test
xor
sbb
arpl
loopne
bound
insb
sbb
cld
mov
lds
je
add
sti
adc
cmp
bound
inc
fcomip
fsubrs
cmpsb
jl
fnsave
in
or
gs
out
or
in
ss
lea
cmove
jmp
popf
repnz
push
aaa
stos
sti
cmpsl
jo
jl
pop
xchg
outsb
mov
pushf
fstpl
sub
cmovnp
adc
lds
sbb
dec
pop
jnp
ds
outsb
jbe
jbe
push
mulb
out
or
or
mov
cmc
incb
xor
lahf
data16
push
xor
sub
jnp
pop
out
sbb
rsm
xor
rcr
in
je
out
mov
aad
stc
outsl
push
mov
cmpsl
cwtl
outsb
imulb
pop
inc
lods
mov
sub
shl
lea
sub
leave
insl
and
mov
push
sub
decl
cli
psraw
sub
in
dec
movsb
lahf
cmp
rorb
fildll
lret
out
xchg
fldenv
push
pop
xor
jmp
imul
das
ret
pop
mov
movsl
lods
mov
aas
in
mov
aaa
cmp
inc
aaa
dec
rclb
js
out
std
aam
les
cmp
iret
add
ret
mov
shrl
stos
in
sub
inc
cmp
mov
adc
inc
push
xchg
lods
bswap
mov
lea
xchg
jb
rorb
xchg
jns
insl
adc
mov
dec
push
dec
daa
xor
sar
lds
ret
or
cmp
mov
jge
sbb
test
fcoms
jno
sbb
fildll
in
les
cli
fnsave
std
xor
in
push
scas
sub
dec
rcrl
sbb
out
pop
leave
sbb
add
movsb
push
mov
mov
outsb
sub
lret
test
mov
xlat
enter
cmpsb
push
jbe
dec
data16
loop
stos
cwtl
mov
jle
xor
inc
insl
filds
mov
jge
rol
pop
xchg
mov
fbld
inc
and
vmread
xor
sti
xchg
push
sbbl
lds
mov
inc
cmp
push
hlt
das
leave
xchg
mov
icebp
lods
std
loop
scas
loopne
xchg
dec
test
scas
push
bound
cmpsl
jecxz
mov
xchg
loopne
and
mov
jne
mov
cwtl
movsb
outsl
jg
mov
push
and
loopne
shrl
adc
mov
xor
aaa
stos
ret
sub
shl
push
jbe
leave
stc
cld
xchg
add
mov
movsb
jecxz
sahf
xchg
push
sbb
fcoml
orl
xor
mov
or
popf
and
int
icebp
cs
ret
and
ljmp
std
addr16
data16
pop
mov
inc
cwtl
mov
enter
inc
sti
lods
data16
rcl
xor
fdivp
stc
jmp
lret
sti
xchg
popa
xchg
mov
jmp
nop
sub
call
mov
lret
pop
out
inc
loope
mov
les
mov
mov
insb
push
pushf
mov
mov
push
and
sub
sub
adc
ja
cmpsl
roll
mov
sub
or
jl
push
cmp
sbb
and
movsl
nop
or
jecxz
push
bound
out
jmp
mov
add
mov
pop
insb
jo
mov
data16
mov
jae
sbbb
and
pop
mov
push
repz
lock
outsl
jmp
sbb
nop
stos
sbb
out
sub
enter
pop
dec
fstps
sahf
out
imul
fstpt
fadds
mov
subb
shrb
mov
cld
cmp
pop
lock
mov
xchg
daa
dec
mov
adc
movsl
imulb
fistl
sbb
shlb
push
test
nop
test
ds
fsubl
test
xor
lods
leave
insl
and
jo
mov
or
mov
jecxz
dec
cwtl
pop
mov
jno
ss
push
push
cmp
out
jns
inc
iret
js
pop
dec
sahf
push
test
js
mov
in
add
test
lds
mov
stos
lret
xlat
or
dec
dec
pop
jg
ja
or
pop
dec
lret
cltd
push
scas
pop
dec
add
daa
imul
sub
jmp
aaa
or
fnstsw
cmpl
rcrl
xor
aas
jnp
mov
mov
lock
push
jp
fdivl
and
je
repz
fldcw
inc
and
in
mov
sti
in
adc
push
mov
mov
sub
mov
mov
testl
or
or
cmpsb
rep
and
xor
pop
sbb
clc
inc
and
stos
cs
fdivrs
or
je
jmp
ret
inc
cmp
and
xor
loopne
xchg
sbb
jne
or
pop
or
inc
imull
fwait
jns
dec
stos
les
and
cltd
push
add
into
imull
rorb
dec
std
mov
inc
pop
cmpsb
mov
xchg
int
es
dec
jmp
fcoml
popf
mov
xchg
xchg
out
push
cmc
lea
mov
push
dec
xchg
fsubr
lds
adc
test
in
adc
push
xor
ss
imul
out
mov
in
mov
xor
jg
mov
cmp
testl
call
mov
loopne
shl
notl
clc
lcall
adc
fistpl
cmpsl
in
mov
mov
lcall
cmp
push
cmc
lcall
fbld
inc
sahf
xchg
push
ret
arpl
mov
cmc
fiadds
xchg
dec
dec
mov
in
mov
outsb
jle
sub
stos
push
mov
and
inc
int
inc
cs
pushf
fwait
sub
loopne
mov
js
call
mov
shlb
mov
jle
and
out
xchg
xchg
dec
shll
je
inc
lods
push
js
mov
mov
xlat
loop
sbb
adc
xchg
push
cmp
or
subl
dec
nop
mov
dec
out
push
mov
xor
iret
sti
add
cmpxchg
aas
in
xlat
lahf
or
dec
nop
pop
sbb
std
data16
pop
pop
sub
rolb
cmpsl
test
in
inc
push
push
cwtl
rcrb
xchg
add
push
mov
fcoms
dec
mov
jb
xor
xor
push
loop
push
aaa
add
push
sub
ret
mov
cli
sbb
test
test
sbb
adc
loop
aas
push
rcll
mov
hlt
insb
test
add
push
int3
push
out
or
xor
add
inc
aad
dec
pop
lods
out
out
jo
test
lods
jne
aam
popa
sti
jmp
loope
clc
fsts
out
scas
cwtl
pusha
push
in
pop
mov
les
jb
jo
ret
aaa
icebp
roll
mov
lret
or
jl
ds
mov
aam
pop
popa
xchg
mov
pop
inc
adc
nop
add
xchg
xchg
sahf
pop
mov
pop
sbb
xchg
mov
adc
cli
inc
arpl
push
xchg
inc
mov
in
mov
ja
popf
xor
repz
pop
and
jl
push
and
jns
xchg
pop
cmp
pop
jns,pn
pop
pop
ljmp
sub
xchg
out
cmpsl
xchg
enter
jg
cli
pop
sbb
and
mov
stos
repz
ljmp
popa
or
jg
in
inc
cmpsb
cli
dec
push
lock
jecxz
js
das
xorb
enter
dec
adc
repz
xchg
pop
push
jo
sub
or
mov
mov
ficoms
pop
test
loop
adc
inc
sub
fisubs
adc
mov
cmp
popf
jmp
pop
dec
pop
push
repz
xchg
and
cmp
add
mov
and
mov
cmpsb
arpl
mov
mov
imul
dec
aad
add
iret
xchg
iret
nop
cmp
sub
rcrl
movsb
xor
jne
add
dec
cmp
add
cmc
sbb
push
nop
cltd
lahf
pop
mov
and
mov
into
insb
mov
popa
lcall
push
stos
cmp
lods
fcmove
or
mov
loope
pop
call
jmp
sub
lret
loope
mov
jge
outsb
xor
test
mov
push
mov
imul
xor
mov
jmp
hlt
daa
inc
push
pop
add
enter
sarl
loopne
cmpsb
lds
xor
out
inc
or
jno
sbb
sbb
xchg
jecxz
iret
xchg
mov
xor
pop
pushf
test
ss
sbb
stos
lret
sub
mov
adc
sti
dec
es
fdivrs
mov
pop
inc
mov
or
push
cld
cmp
and
pop
adc
jl
ret
jmp
fs
add
cmp
jg
dec
mov
mov
xor
xchg
mov
or
pop
adc
xor
clc
sti
and
dec
adc
jl
mov
neg
lods
or
jbe
mov
push
mov
sbb
mov
inc
or
and
aad
in
insb
and
ljmp
mov
ret
movsb
repz
pmulhuw
mov
mov
sbb
sub
ret
sub
mov
sub
mov
mov
mov
xchg
mov
pop
xor
data16
and
inc
xor
ret
int3
mov
subb
push
insl
test
inc
dec
sub
insl
and
cmpb
mov
addr16
xor
lea
fstl
xchg
jne
addb
cmc
hlt
idivl
xlat
push
enter
pushf
push
sub
ljmp
mov
adc
mov
enter
dec
cltd
in
cmpsl
pop
in
inc
push
push
mov
ljmp
ljmp
adc
xor
lcall
add
fs
or
call
in
jb
lds
inc
or
mov
in
arpl
in
cmpsl
je
jle
mov
adc
leave
stos
inc
jns
repnz
popa
inc
pop
mov
push
dec
aas
fs
jg
mov
push
add
add
sub
push
les
int
push
fcompl
in
cli
add
sub
sub
mov
or
xchg
fdivr
pop
aaa
jae
sub
inc
bound
fistpl
fwait
cmp
sahf
cmp
test
add
mov
pusha
mov
loopne
mov
push
sub
mov
out
sub
cmp
movsl
rclb
pop
push
fnstenv
xor
dec
and
adc
repz
arpl
ret
rclb
adc
out
xor
inc
and
push
dec
jns
leave
add
in
adc
andl
movsb
orl
sti
cmp
cmp
imul
add
daa
cltd
pop
pusha
pop
dec
loopne
dec
sahf
into
pusha
fmull
mov
xchg
pop
xchg
jb
int
push
or
jns
addr16
and
jbe
and
test
inc
hlt
nop
mov
cmp
push
lods
mov
daa
arpl
pop
inc
out
fs
iret
pushf
stc
mov
cwtl
sbb
sub
mov
lret
movsb
out
fisubrl
push
daa
add
out
inc
sti
out
sbb
pop
cwtl
sub
inc
sub
andl
into
mov
jecxz
pop
sbb
dec
movsl
adc
test
mov
pop
cmp
mov
clc
in
arpl
inc
jo
xchg
mov
push
aam
arpl
lcall
call
and
dec
add
jnp
mov
mov
mov
mov
jnp
mov
hlt
jae
jle
xor
mov
xor
jmp
loop
sub
bound
bound
std
mov
push
stos
loope
movsb
xchg
testl
adc
and
sub
or
mov
daa
add
lds
movsb
pusha
ret
in
sahf
rol
in
adc
es
leave
out
ljmp
push
add
cmp
or
mov
adcb
mov
sahf
dec
imul
imul
jmp
inc
xor
mov
popl
sti
mov
rcrl
or
mov
and
cmc
inc
test
fdivr
sti
xchg
push
into
xchg
scas
iret
add
data16
notb
mov
xchg
dec
jge
sbb
outsl
outsb
nop
push
shlb
jecxz
int
xchg
mov
jno
cmp
xchg
cmp
movsb
jl
and
lds
call
and
xorb
add
pop
push
fsubr
pop
mov
mov
and
adc
xorl
ficomps
mov
mov
test
clc
xchg
push
xchg
sbb
call
outsb
pushf
inc
out
xchg
mov
jl
jge
jge
cmpsl
dec
xchg
jge
shlb
xchg
test
scas
push
jb
push
mov
cmpsb
aad
or
jb
int3
das
add
addb
add
les
addr16
push
dec
cmp
xchg
fmul
ljmp
dec
movsb
mov
insb
aas
dec
mov
sub
jae
lahf
popf
je
shll
and
outsb
xor
push
push
mov
and
and
xchg
xchg
lahf
jns
shlb
rorl
xlat
or
mov
outsl
adc
jns
inc
dec
inc
xchg
adc
les
into
xchg
mov
xchg
arpl
jg
cwtl
ljmp
sbb
je
jle
aas
mov
mov
das
insb
movups
rcrb
lock
or
cmp
mov
xchg
and
mov
dec
jl
int
icebp
push
mov
sub
mov
cmp
jno
ficompl
jne
out
pop
xchg
xor
jbe
mov
lea
repz
sbb
iret
jae
xchg
xchg
sub
mov
outsl
and
inc
divl
or
xorb
test
adc
pop
push
fidivrs
sbb
fsubrs
pop
insl
mov
pusha
mov
push
scas
and
out
pop
mov
dec
dec
imul
sbb
lret
mov
mov
adc
cld
cmpsl
addr16
aam
inc
jne
mov
mov
mov
aas
test
cmc
movsl
mov
xlat
jl
stc
sbb
js
and
mov
add
xchg
and
adc
pop
sbb
push
cli
nop
and
pop
push
in
xlat
mov
imul
int
orl
inc
outsl
mov
imul
pop
sbb
sub
cli
cmp
sarb
mov
xor
adc
aam
dec
cs
xchg
jbe
xlat
mov
mov
pop
sbb
jbe
add
sti
sti
stos
jne
in
fistl
cmp
cwtl
test
lret
aas
cmpsb
hlt
mov
push
mov
loop
fldt
mov
mov
adc
jns
aad
subl
dec
xchg
mov
xor
insl
jg
jg
repnz
and
inc
pushf
pop
jnp
out
scas
fwait
aas
mov
pop
mov
push
sbb
daa
in
cmp
pop
push
mov
fcoms
sbb
fsubl
movsl
mov
jge
pop
inc
adc
das
adc
push
sub
lds
into
in
nop
movsb
in
pop
aad
cmp
pop
adc
ret
aad
faddl
psubsw
les
xor
xor
lods
inc
add
test
aaa
inc
inc
into
into
push
fcompl
inc
or
dec
xor
xchg
push
stos
mov
inc
adc
mov
sub
push
pushf
mov
jno
mov
add
pop
inc
aam
lds
mov
cmpl
cmp
sbb
inc
inc
jl
outsb
mov
jmp
test
add
les
xchg
ficompl
lret
movb
clc
sbb
xor
lea
cmp
in
cs
dec
test
push
adc
out
int3
in
popa
js
xchg
in
xchg
inc
scas
ret
adc
out
fbstp
cltd
cld
and
xor
lods
shr
cmpsl
adc
sbb
push
jl
out
dec
std
mov
sub
cmpsl
ja
test
pop
and
sbb
mov
enter
mov
std
popl
popf
dec
dec
lods
lret
popf
jp
push
cmp
sbb
fdivl
clc
add
sbb
sahf
xorl
ds
fsubrs
sbb
test
dec
inc
outsb
out
mov
lea
stc
or
repz
jns
add
sub
mov
sbb
pop
or
push
xor
fstpl
push
lods
sbb
fnsave
and
mov
mov
or
dec
out
daa
lret
decl
jp
in
bound
sti
adc
push
ds
jnp
sbb
jnp
jmp
xchg
ds
jmp
nop
adc
sti
adc
push
icebp
lahf
mov
push
stc
xor
outsb
mov
outsb
and
xor
xchg
cmp
hlt
mov
push
leave
js
mov
idivl
cld
sti
cmp
addr16
fsubrp
xchg
call
adc
mov
cmp
insb
lods
std
lods
add
andl
pop
mov
xchg
and
lcall
mov
ret
jno
int
mov
clc
xor
or
stc
dec
roll
xchg
adc
mov
in
movsl
test
dec
cltd
jp
mov
cmp
daa
fstl
xchg
outsl
push
pop
inc
sub
test
mov
inc
push
sbb
push
in
xor
pop
or
shlb
jmp
mov
inc
popf
lea
fistpll
das
mov
lods
push
aaa
push
sbb
int
push
jne
xchg
pop
subl
inc
adc
test
roll
push
inc
scas
sbb
adc
mov
dec
push
mov
xchg
pop
xchg
push
adcb
notl
mov
imulb
repz
lock
test
sbb
movsl
jno
mov
les
inc
out
push
ret
mov
cmp
bound
fmull
mov
repnz
gs
sub
jg
mull
inc
sub
lret
shl
ret
fbld
popa
mov
scas
insl
mov
rolb
int3
mov
mov
fists
sbb
mov
cltd
aam
out
insb
out
shr
int3
and
dec
lea
test
hlt
std
sbb
mov
enter
mov
inc
stos
scas
add
insb
mov
mov
mov
enter
cltd
mov
or
outsb
cmp
aad
cmp
and
inc
loope
dec
sub
add
stos
es
cmpsb
or
jnp
adc
in
mov
aad
ja
push
xchg
subl
shl
push
jbe
lcall
int
clc
addr16
adc
cmpsb
jmp
loope
lcall
pop
cld
xchg
imul
repnz
aaa
push
xchg
adc
xchg
hlt
movsb
mov
pop
dec
icebp
dec
subl
xlat
imul
clc
pop
push
out
loop
sbb
jb
xchg
gs
icebp
push
mov
pop
aaa
fs
rclb
mov
and
and
sub
test
std
jmp
cmp
mov
push
jnp
mov
adc
aas
out
popf
xchg
rol
xor
mov
stos
xor
ret
or
movsb
icebp
and
and
movsb
shl
sbb
add
ja
mov
jl
fidivl
push
orl
cs
rcr
flds
data16
clts
setl
fdivr
xlat
mov
jl
mov
lods
cld
sbb
push
xchg
insb
push
or
cli
sbb
mov
and
lock
lods
mov
hlt
mov
fadds
xchg
mulb
loop
cmpsb
or
mov
testl
add
adcl
popa
das
mov
push
adc
dec
cmp
scas
inc
filds
jp
pop
push
add
xchg
dec
mov
push
mov
sub
dec
xchg
jb
enter
int
add
das
mov
stos
cmc
test
in
cmpsb
stc
mov
mov
mov
ds
test
movsb
mov
mov
push
xor
leave
nop
aam
fsub
sbb
sahf
iret
rcll
loopne
mov
or
or
push
push
arpl
loopne
mov
mov
push
push
cs
movsb
stos
mov
cli
out
push
mov
es
cmpsb
dec
inc
cmpsl
in
out
inc
mov
mov
jmp
test
aas
jnp
xchg
gs
jge
push
popf
mov
sub
test
xor
pop
cli
loopne
mov
in
fadds
sub
mov
insl
mov
sub
push
dec
inc
aas
out
icebp
adc
sbb
hlt
sub
nop
xchg
movsl
or
test
ret
mov
mov
lret
shrl
das
push
imul
aad
sbb
push
stos
pop
rclb
mov
push
in
les
mull
and
cmovb
std
sti
call
pop
sahf
xor
mov
cmp
jno
jno
lock
cli
mov
adc
fsubr
pop
push
and
mov
xchg
cmpsb
movsb
aad
jnp
lods
hlt
cli
inc
movsb
aas
into
and
repz
fdivrl
movsb
sub
xor
cmp
xchg
mov
out
bnd
inc
es
pop
cwtl
mov
or
ja
xor
mov
aam
jecxz
jge
out
std
testb
mov
int
out
push
inc
std
xor
inc
and
outsl
rclb
cwtl
nop
test
shrl
push
jae
sbbb
rcll
stos
mov
lret
jns
dec
and
shrb
fisttps
cmp
push
cs
clc
or
add
inc
add
fwait
mov
dec
xchg
out
dec
enter
andl
pusha
pusha
add
insl
jno
sbb
scas
jo
das
dec
cld
mov
popa
rcrl
call
outsb
jl
int3
or
nop
xchg
or
sbb
outsl
xchg
jp
jno
or
cmp
or
inc
sub
iret
mov
jmp
sbb
pop
add
repnz
stos
or
sahf
cld
outsb
mov
xchg
loopne
sti
aam
fsubp
call
cmpsl
insb
sar
mov
mov
pusha
sub
or
and
addr16
stos
inc
xchg
sbb
dec
pop
lods
push
pop
xor
das
out
aam
pusha
int3
push
movsb
pop
repz
mov
std
aad
jb
mov
dec
ja
xchg
hlt
scas
cld
test
sti
mov
jbe
aad
xchg
rorb
testl
scas
test
pop
sub
shl
or
rcll
sub
xchg
inc
inc
repz
xchg
lds
push
divb
pop
xor
dec
sbb
add
sbb
int
and
mov
hlt
push
or
mov
adc
xor
std
xor
add
jg
cmp
out
inc
subl
push
pop
ficomps
xor
xchg
and
dec
push
stos
div
mov
cmp
and
lret
ljmp
aaa
push
mov
jecxz
lret
jo
pop
dec
dec
cmp
or
lods
negb
jle
dec
push
sbb
fidivs
mov
sub
jb
rorl
frstor
sub
sub
add
fwait
push
or
lods
cmp
es
mov
ret
mov
outsb
aaa
in
sub
hlt
icebp
ljmp
orl
cmp
call
out
and
insb
call
push
fnstcw
adc
adc
mov
xchg
inc
add
xor
lcall
imul
dec
push
mov
out
aaa
cmp
cmp
js
jb
mov
jbe
das
jae
and
cmp
pop
rcrb
in
das
jmp
pop
lea
aam
or
leave
sub
in
sbb
jno
gs
or
pop
fs
imul
cld
scas
xor
mov
sub
jl
aas
sub
neg
or
xchg
mov
cmc
mov
clc
lahf
rcrl
sub
dec
cwtl
push
insb
in
mov
inc
rclb
outsb
stos
imull
pop
cld
push
nop
cmc
shll
daa
adc
movsb
lcall
xor
andl
lods
xor
ss
ds
mov
sub
ds
fldt
xor
push
call
idivl
inc
stos
shll
jmp
imul
std
dec
xchg
and
loopne
push
loope
cltd
roll
rcrl
leave
test
daa
fisubl
in
xlat
js
or
pop
jns
ret
adc
sub
adc
stc
into
jecxz
mov
pop
mov
pop
sub
xchg
imul
popa
xor
push
cld
inc
push
cli
fs
push
add
dec
mov
xor
jno
movl
dec
cld
mov
adc
ja,pn
popf
and
mov
call
fs
imul
or
aaa
stos
push
std
sub
add
mov
inc
jmp
stc
ror
jp
sbb
enter
xorb
ja
jo
xchg
in
mov
jns,pt
push
or
imul
movsb
dec
insl
int3
add
fdivr
roll
cmp
inc
pop
loop
cmp
pop
xchg
daa
leave
pop
or
insl
xor
cwtl
pushf
cmp
xchg
jp
ret
adc
xchg
inc
or
cmp
popf
or
xlat
mov
scas
in
sub
mov
call
adc
js
push
lods
xchg
sub
test
addr16
pop
push
mov
cmp
rcrb
push
mov
cmp
sbb
dec
fs
and
sub
push
loopne
cmp
hlt
cs
mov
addb
imul
and
mov
push
mull
sub
cmp
imul
push
mov
insb
mov
xor
push
adc
leave
mov
xor
cmc
sbb
cmp
sub
inc
mov
dec
mov
fdivr
or
hlt
in
pop
inc
dec
pushl
notl
and
lods
int
mov
cmc
jge
popa
iret
cs
cmpsb
int
cmpsb
add
addr16
mov
cmp
ja
ret
cmp
sarb
sbb
cmp
imul
xor
adc
int
pop
lret
and
xchg
jg
jg
outsl
lods
adc
inc
stc
pop
mov
sbb
int3
pop
sbb
icebp
pop
dec
mov
xor
test
fcompl
or
in
mov
mov
enter
shrb
aaa
or
in
add
xor
inc
pop
shr
lret
lods
es
loopne
arpl
cmpsl
sbb
int3
adc
jg
jg
push
out
inc
popl
and
outsb
popa
ret
icebp
pop
lcall
adc
jae
mov
repz
or
jmp
jb
mov
imul
inc
add
inc
pop
call
cwtl
daa
jmp
xchg
cmpsb
mov
into
jo
and
jg
jae
in
or
loopne
push
inc
lret
xlat
push
es
sub
movb
jg
fisubl
cmc
add
mov
loop
push
inc
add
push
pop
push
sbb
push
inc
jbe
adc
mov
sub
cmp
enter
in
jne
sub
mov
daa
imul
stos
xchg
and
jmp
ss
sbb
test
data16
push
addr16
sub
add
jecxz
fistl
nop
lcall
add
rol
push
xor
pop
outsl
fldenv
jl
push
lahf
imul
lods
push
or
add
pop
ljmp
dec
mov
gs
push
or
adc
xchg
xchg
insl
lcall
fstl
mov
mov
xor
mov
js
sub
in
scas
rolb
mov
js
inc
add
jp
push
jg
scas
enter
dec
loope
addr16
pop
or
cmpsl
jns
jno
mov
sub
ficompl
push
mov
sti
shll
mov
xchg
add
add
mov
xor
gs
inc
int3
sbb
lret
or
fs
mov
mov
test
daa
or
dec
push
mov
outsb
scas
js
dec
pusha
mov
mov
push
pop
out
out
and
in
popl
sarb
rcrl
push
iret
cmp
jl
push
cmp
push
sub
mov
fcmovbe
inc
mov
daa
mov
lods
jb
sub
fisttpl
imul
xchg
sub
push
xchg
shlb
dec
stos
nop
gs
imulb
out
dec
stc
xchg
in
testb
jg
mov
insl
and
inc
popf
and
pop
mov
mov
lahf
push
cs
fs
dec
data16
pop
in
test
cld
cld
pop
pop
pop
add
ja
xor
sub
in
mov
ss
lret
mov
dec
nop
add
sahf
cmp
mov
add
stos
cmp
mov
pusha
jmp
call
hlt
sub
or
sub
clc
fldcw
loope
mov
add
xchg
imul
adc
loop
aam
loope
and
cmp
jmp
ja
out
fnsave
test
mov
mov
adc
sub
mov
cmp
push
xchg
lods
out
inc
sbb
lods
cmp
fsubl
xorl
lcall
push
pop
std
mov
and
popf
lahf
sti
in
jle
mov
dec
mov
xchg
dec
mov
fsubrs
xor
mov
jp
loopne
jle
fcmovne
clc
std
out
cmp
xchg
mov
sbb
adcb
or
xchg
jle
int
jnp
dec
ljmp
adc
cmp
or
popa
adc
sub
outsb
push
xchg
sub
ror
adc
dec
outsl
pushf
jle
mov
xor
mov
sub
incl
pop
into
out
cmp
mov
jb
xchg
fisttpll
inc
xchg
std
xchg
lcall
fbld
sbb
mov
jno
std
jp
or
lahf
fmull
es
mov
mov
and
mov
mov
leave
jae
jle
mov
lods
int
jbe
subl
pop
icebp
sub
inc
stc
loopne
nop
popa
jns
out
bound
pushf
fsubr
sub
and
rcl
popf
or
mov
mov
rcrb
fists
ja
lock
cs
dec
jne
push
pop
shll
test
mov
add
mov
mov
fisttps
daa
sahf
inc
jae
mov
add
clc
mov
or
mov
push
push
add
test
out
int3
push
bnd
subb
add
insl
sti
lods
test
outsl
ret
cmp
into
ljmp
pop
cmp
mov
insl
fidivl
xchg
inc
mov
ret
nop
jne
shr
xchg
push
sahf
sbb
mov
insl
test
stc
jmp
inc
sti
sti
xor
jmp
pop
cmp
or
xchg
das
or
outsb
inc
dec
sub
stos
sbb
pop
jl
mov
stos
dec
inc
imul
out
mov
shl
mov
in
fimull
jb
test
sti
jb
push
or
sbb
je
mov
ss
jnp
pop
scas
arpl
movl
iret
roll
aas
xchg
icebp
and
roll
or
test
aam
adc
call
mov
gs
or
scas
sbb
lret
sbb
mov
out
pop
or
adc
mov
adc
int3
sub
dec
xor
xchg
adc
jb
repnz
test
rorl
cld
jp
clc
in
mov
imul
mov
data16
push
mov
xchg
push
push
lcall
mov
insb
xor
aas
insb
in
sub
jae
aaa
call
shrb
and
imul
or
push
ds
mov
add
test
push
dec
push
pop
mov
out
lea
mov
mov
jae
mov
ret
push
ds
or
xor
rorl
push
icebp
fstpl
popa
sbb
scas
mov
xchg
xor
popf
lods
inc
int
adc
pop
pushf
mov
andl
mov
push
fidivrs
and
jl
jle
push
and
andl
push
test
inc
sbb
and
pop
sbb
xchg
sbb
aaa
xchg
adc
lcall
idivl
mulb
inc
mov
in
adc
add
mov
xor
iretw
fwait
xor
shll
pop
rcrl
push
sahf
fs
sahf
das
out
cmp
dec
xchg
pop
dec
and
cmpsb
out
in
sub
jae
iret
mov
out
mov
loope
jg
xor
adc
aaa
sbb
scas
xor
call
outsb
or
or
sub
pop
sahf
imul
test
icebp
jo
out
adc
movsl
test
outsb
loop
out
and
lds
jecxz
insl
push
cmp
lret
lahf
xor
insb
outsb
mov
cld
xor
lea
jecxz
iret
fisttps
test
jns
pop
jnp
mov
int
jno
xchg
je
pop
addr16
xor
dec
mov
xchg
xchg
sub
push
ret
call
insb
cwtl
pop
outsb
aaa
bound
in
lea
xchg
push
mov
inc
shlb
xchg
leave
int
outsl
jo
jmp
cmp
push
jecxz
jae
lcall
jbe
cltd
stc
andl
push
pop
roll
scas
shrl
sub
shrb
rol
pop
lret
lahf
imull
xor
xor
inc
fwait
leave
ljmp
in
mov
pop
mulb
mov
xchg
adc
dec
mov
cli
or
add
inc
or
mov
insb
xchg
inc
sarb
lcall
adc
xor
sbb
dec
inc
call
cwtl
add
mov
inc
inc
ljmp
aas
mov
inc
sti
js
sub
xchg
stos
xchg
jle
mov
or
lds
pop
sbb
shrd
xor
lock
cmpsb
xor
cs
jns
mov
sbb
cltd
or
mov
into
cs
lahf
inc
outsl
bound
mov
cmp
aaa
add
mov
scas
data16
fs
bound
push
mov
int
fmuls
cwtl
jle
or
cs
fsts
xlat
xchg
sbb
cmpsb
push
pop
xchg
lods
jb
cld
mov
mov
lods
sub
inc
adcl
loop,pt
and
insb
push
jge
or
mov
fwait
iret
lcall
xor
or
adc
cld
test
add
shl
xor
xchg
mov
lret
jp
daa
push
stos
ljmp
int3
ret
pusha
out
jbe
jb
fwait
enter
sbb
inc
sbb
arpl
mov
loop
into
sbb
cmp
push
push
je
mov
xor
aas
add
popa
xchg
sahf
jae
mov
sub
rcrl
xor
sbb
loope
test
jae
dec
dec
or
pop
pop
clc
imul
neg
xchg
cmp
cmpsb
xchg
push
adc
xor
inc
sbb
mov
fwait
stos
in
mov
push
mov
call
bnd
and
mov
pop
mov
aad
xchg
inc
jne
jo
mov
pop
mov
pop
outsl
call
or
sti
fldt
stc
bnd
xchg
cs
std
cld
or
mov
adc
jo
sbb
sub
lods
icebp
pop
cli
rorl
iret
ror
fwait
scas
sarl
adc
push
mov
insl
enter
sbb
inc
adc
outsb
add
movsb
iret
cmp
sub
xor
jg
outsb
arpl
mov
mov
mov
mov
ret
scas
mov
cmp
or
popf
fcom
aas
negl
inc
pop
jecxz
dec
ja
lea
jb
push
inc
inc
aaa
std
js
clc
lods
pop
les
mov
inc
mov
pop
test
aaa
into
out
cmp
inc
sub
sbb
adc
adc
scas
push
pusha
sub
dec
ljmp
jp,pn
mov
fistpll
ljmp
out
int
and
addr16
mov
push
mov
fs
test
insb
fwait
xor
mov
pop
xor
mov
das
push
imul
inc
mov
ss
dec
fcmovne
iret
jmp
sub
or
pushf
ret
lea
pop
out
mov
mov
push
sub
aad
sub
fiaddl
xorb
sbb
push
or
rclb
andb
test
xor
or
lods
cmp
lret
jp
jp
mov
das
jo
inc
sub
fisubs
lcall
mov
mov
fadd
pushf
cmp
add
jae
out
xor
dec
mov
cld
test
or
xchg
add
add
xchg
and
fdiv
in
cmpb
clc
mov
or
out
and
cld
es
pop
pop
mov
dec
add
adc
movsl
lds
hlt
cmp
jne
fs
pop
jns
adc
out
mov
cmp
fnsave
fisubl
cli
inc
add
mov
push
into
outsl
push
mov
mov
test
movsl
sub
sub
xchg
cmp
mov
inc
push
sbb
adc
jge
mov
test
mov
dec
xchg
fdivrl
mov
mov
in
out
pop
and
add
or
in
and
adc
cli
add
mov
xor
pop
in
push
bound
scas
js
dec
and
call
jl
or
or
inc
aas
mul
repz
pop
sub
cmp
sub
pop
aam
mov
jg
jmp
ja
rcrb
ja
xor
inc
or
cmpsb
xchg
pop
shr
aaa
push
sbb
and
sub
loope
out
or
leave
ret
inc
xor
push
test
outsl
es
mov
dec
sarl
xchg
rcr
jnp
out
xchg
xlat
cmp
jne
pushf
jle
enter
mov
mov
push
addb
js
imul
stos
or
push
scas
pop
sub
sub
out
mov
aam
add
inc
dec
jae
lret
imul
add
test
fldcw
jmp
fisttps
lahf
jbe
loop
mov
xchg
and
add
dec
fsubrs
push
jle,pt
lods
xor
mov
test
aad
stos
or
jle
inc
mov
add
cmp
add
out
daa
pop
loop
sbb
inc
mov
or
pop
or
lds
sub
cltd
das
jmp
dec
mov
push
add
test
repnz
inc
mov
in
rolb
or
shll
dec
mov
xchg
add
mov
xchg
repnz
testl
jne
stc
adc
out
mov
or
adc
cld
stos
addb
push
fstpl
fcoml
out
mov
cmc
jns
xor
sbb
add
adcl
pop
orb
and
in
adc
aam
imul
mov
popf
mov
pop
imul
lds
testb
inc
mov
fs
xchg
push
rorl
xor
sbbb
cmpsb
test
inc
icebp
sti
aad
jle
xor
and
xchg
pusha
decb
push
dec
push
mov
push
out
les
sbb
inc
test
les
andb
mov
mov
jns
fbstp
or
adc
xor
add
lret
cwtl
rolb
repnz
mov
sub
cli
pop
dec
cld
nop
bound
ficompl
push
pushf
and
xor
and
or
or
inc
mov
mov
stc
mov
push
jl
fiaddl
push
pop
xchg
mov
push
shlb
add
shr
ss
cwtl
sub
mov
decb
shlb
je
jb
mov
popa
cmp
in
adc
adc
cmp
dec
ret
ror
andb
pop
adc
rorb
jne
cmp
adc
test
pop
test
test
test
mov
xchg
dec
mov
ret
loop
fwait
not
xlat
leave
clc
idiv
mov
xor
sbb
ret
pop
mov
jmp
xorl
push
outsl
call
nop
xchg
stc
jb
in
rol
dec
test
insl
mov
insb
jns
pop
sahf
sub
dec
lods
and
xlat
jae
loope
cmpsl
call
add
xor
pusha
sub
call
in
lock
mov
aad
mov
push
sub
dec
mov
dec
push
imul
xchg
repz
adc
mov
sti
subb
js
fwait
std
lods
subl
inc
out
sbb
xor
cmp
shl
cwtl
dec
addr16
jg
dec
aaa
loope
and
pop
push
aaa
in
subb
test
or
js
dec
inc
pop
sub
lds
iret
or
outsb
dec
and
pop
cmpsb
loopne
dec
or
lods
push
or
aam
sub
fldcw
pop
fnstenv
sbb
mov
pop
ds
dec
and
sbb
mov
adc
enter
fnstcw
mov
shl
movsl
or
cmp
inc
fs
enter
mov
pop
pop
test
std
stos
ja
push
and
push
pop
repz
mov
mov
xchg
mov
ret
adc
cs
pop
jns
inc
test
repnz
xchg
jg
xchg
aam
xor
fwait
and
cwtl
mov
test
lahf
sahf
popa
cmovp
fucomp
add
sbb
icebp
add
scas
mov
push
pop
xchg
push
cmp
mov
jns
scas
in
imul
addb
hlt
mov
mov
sahf
mov
inc
mov
insl
stos
mov
inc
inc
cmp
sbb
stos
lea
cwtl
call
stc
mov
in
push
pop
mov
adc
dec
into
inc
jg,pn
add
rcll
push
bound
xor
lods
imul
fdivrl
xchg
addr16
rcrb
or
lock
sub
icebp
lock
inc
mov
mov
add
mov
cmc
mov
test
sub
push
leave
xor
insw
mov
fistps
cmpsb
out
call
enter
jmp
je
test
dec
sarb
mov
xor
mov
add
lods
popl
enter
lea
fwait
jnp
hlt
sub
xchg
mov
mov
xchg
addr16
sub
sarb
ja
fiaddl
cltd
icebp
icebp
pop
push
add
ljmp
mov
sbb
xor
cmp
mov
in
sbb
mov
fs
sub
daa
cwtl
nop
xchg
mov
repz
push
jl
incb
ret
xchg
ja
mov
mov
je
mov
data16
jbe
mov
pop
and
out
mov
xchg
adc
pusha
jle
mov
cmc
cmc
in
sahf
lods
inc
and
add
jnp
pop
pop
call
xchg
dec
sbb
je
loope
imul
das
popa
fdivrl
fistpll
leave
loope
dec
mov
pop
test
mov
icebp
in
and
jb
pop
cmp
mov
les
pop
clc
dec
shl
movsl
dec
mov
xchg
jge
sbb
leave
add
jmp
jmp
jmp
jmp
push
mov
out
sti
or
adcb
xorb
xchg
adc
adc
and
cmp
insb
xor
nop
and
add
rclb
push
mov
inc
ljmp
mov
test
sahf
dec
fmull
jae
jns
cmpb
bound
leave
lret
mov
shlb
andb
int3
push
mov
or
push
mov
in
xchg
add
cmpsb
call
jae
loop
data16
xor
push
add
sub
inc
es
xchg
je
jbe
push
inc
pop
js
scas
repnz
sbb
les
sub
fnstenv
ja
enter
fs
fdivl
iret
jae
sub
xor
rorb
int
mov
cwtl
fstpl
stos
cld
jl
pop
fcoms
stc
sub
pushf
dec
cmc
xor
dec
sub
inc
jns
scas
xor
pushf
push
mov
leave
mul
fdivs
arpl
jmp
jmp
aaa
push
daa
popf
loopne
enter
mov
mov
sub
inc
mov
inc
pushl
imul
insl
inc
push
stc
jo
lds
ljmp
addr16
imul
lret
leave
or
popf
fld
into
lock
dec
daa
fcmovu
clc
cld
out
jb
mov
jno
stc
mov
and
push
test
mov
inc
addr16
clc
xor
pop
call
add
mov
mov
mov
es
mov
idivl
cmp
clc
add
and
jl
adc
mov
dec
dec
loopne
and
popa
pop
rcr
mov
popf
sti
lret
inc
pop
xor
jecxz
xlat
std
xor
dec
sbb
inc
daa
inc
mov
inc
rolb
adc
jbe
shll
fisttpl
fcomps
nop
arpl
gs
cwtl
pusha
inc
pop
xchg
mov
add
dec
jns
jg
inc
rcll
ljmp
imul
xchg
jae
jp
mov
cwtl
test
add
inc
test
testl
mov
jae
xor
mov
add
lcall
iret
cmp
in
jle
mov
out
mov
pusha
imul
jl
adc
sub
adc
adc
icebp
stc
xlat
jo
xchg
in
in
mov
cs
sbb
xchg
push
xor
add
pop
loopne
pop
out
adcl
xchg
jl
aam
and
and
adc
xchg
mov
push
mov
mov
xor
test
adc
imul
sbb
add
outsb
sbb
mov
sbb
stos
cwtl
adc
adc
insb
add
dec
outsb
jne
adc
jae
inc
dec
insb
loop
dec
aad
jmp
adc
into
add
sbb
fsts
fsts
fimull
xor
jg
insl
and
add
adc
mov
orb
testl
mov
lock
jns
aam
xor
inc
rclb
ds
idivb
loop
sbb
jp
in
leave
pop
outsb
cltd
aad
ror
cmp
add
je
popa
add
sti
fs
and
mov
jae
mov
and
mov
cmp
sub
or
push
add
or
jg
jne
pop
adc
or
xchg
sbbb
inc
stc
mov
loopne
bound
jae
push
ss
leave
xchg
pop
cmp
adc
mov
jno
and
sbb
jns
movsb
inc
fs
imul
addr16
std
adcb
cmp
cli
mov
insb
shll
adc
mov
and
sub
test
test
mov
mov
jnp
dec
imul
inc
or
enter
repz
sbb
adc
int3
vcvtps2pd
ljmp
insb
sub
test
ret
movsl
stos
add
xor
rcrl
cld
jbe
adc
dec
imul
sub
jp
push
mov
xlat
movsl
pop
xor
pop
aaa
mov
lahf
mov
enter
pop
push
cmp
or
inc
cmp
add
sub
inc
jnp
or
sub
out
leave
loopne
pop
es
fnstcw
nop
ljmp
push
mov
sub
insl
sti
out
add
sbb
rol
mov
push
adc
xorb
into
std
mov
cli
mov
pop
in
bound
jmp
rorl
push
cwtl
dec
xchg
jle
icebp
sub
push
mov
push
iret
int
out
mov
fistps
jne
and
hlt
popf
mov
loopne
clc
sti
cmpb
cs
cmpsl
mov
ret
push
pop
xor
dec
rcl
jns
sbb
mov
scas
ret
mov
clc
jl
popl
push
rorl
in
fimuls
icebp
aaa
or
sbb
add
mulb
xchg
mov
rcll
or
std
mov
cmp
adc
inc
je
cmp
and
mov
dec
xor
mov
movl
fcmovnb
lods
cmpl
add
ljmp
mov
not
mov
addr16
mov
clc
fiadds
ret
push
in
pop
inc
jg
aam
jle
movsl
rol
sub
scas
mov
mov
and
or
mov
or
shlb
xchg
and
lds
xor
add
ss
push
and
jbe
clc
cmc
enter
cmpsb
dec
inc
arpl
cli
sub
cmpsl
gs
stos
add
jecxz
les
add
dec
xchg
dec
pusha
mov
xchg
je
mov
out
ss
ljmp
jle
and
xlat
cld
push
mov
jnp
lret
cmp
cmpsl
cmpsl
jp
dec
in
xlat
cld
int3
push
js
cmc
mov
in
mov
push
outsl
fisubl
push
push
fcomps
pop
pop
jae
arpl
rorl
and
fldlg2
xor
mov
push
dec
lds
sub
test
mov
movsb
sbb
fsubs
cmp
pop
test
pushf
xor
push
iret
movsb
dec
insl
arpl
shlb
popf
js
leave
xor
call
mov
xchg
arpl
jnp
outsl
ret
inc
andb
cmp
mov
mov
lcall
scas
mov
stc
jecxz
xchg
scas
outsb
jecxz
lret
inc
xchg
push
mov
stc
ret
iret
xchg
inc
imul
lcallw
rcl
cmp
push
movsl
add
push
insb
jnp
scas
icebp
add
stos
into
fldenv
or
push
fimuls
mov
add
out
rorl
sub
lret
pop
fisubs
adc
ja
sub
pop
xor
push
add
add
pop
jge
les
repnz
pop
insl
sbb
pop
push
pop
lods
mov
mov
mov
jmp
xor
outsl
icebp
sub
or
in
xorb
ja
xor
out
shll
loopne
add
lret
push
adcl
loop
dec
mov
cltd
push
fcmovb
loop
and
mov
and
orl
inc
rep
imul
lret
xor
dec
inc
push
out
mov
ret
cli
sahf
gs
or
dec
jae
addl
mov
mov
jge
enter
and
xchg
xor
cmp
jg
xchg
ret
scas
cli
sub
add
inc
push
pop
xor
cwtl
in
fdivrl
dec
aad
xchg
popf
test
sub
mov
mov
adc
repnz
fisubl
testb
lock
push
jbe
rorl
pop
xchg
scas
mov
loop
and
lret
pop
data16
aad
ja
jg
cli
stc
adc
mov
jb
cs
jmp
int3
mov
pop
dec
fcmovnb
mov
mov
pop
imul
popf
hlt
jno
cmp
mov
mul
dec
and
add
cwtl
idivl
and
sbb
push
clc
cs
adc
stos
xor
lock
inc
cs
mov
cmp
xor
and
push
lret
and
and
adc
mov
mov
leave
mov
stos
dec
daa
in
jge
hlt
mov
out
cwtl
jmp
jno
loopne
xor
stos
push
mov
jmp
jne
xor
cmpsl
popf
add
mov
jne
scas
sti
into
add
and
out
cmp
jnp
or
cmp
xlat
cmpsb
mov
cmp
jo
negb
add
adc
mov
dec
stos
sbb
cmp
lea
es
pop
cs
mov
cmc
push
add
xchg
cmp
pop
cmpsl
pop
mov
pop
xchg
jg
cmpsl
in
pop
or
insb
sbb
cmpsl
xchg
dec
test
mov
dec
lahf
pop
lods
cmpsl
in
mov
clc
cmp
popf
or
pushf
mov
in
dec
rcrl
clc
pop
shlb
mov
notl
mov
jle
jge
sbb
push
stc
test
push
xchg
fmull
mov
nop
test
mov
xchg
call
mov
and
clc
cmp
push
cwtl
pop
pop
dec
sub
lret
into
inc
movsl
jmp
cmp
pop
sbb
hlt
dec
dec
pushf
in
and
out
test
lahf
add
ds
sbb
mov
pop
gs
icebp
push
shll
addr16
pop
movsl
loope
mov
in
imul
xchg
jmp
shlb
mulb
insb
dec
inc
jo
data16
ja
out
lds
je
or
sbb
pop
je
sbb
push
mov
and
xor
adc
and
ja
aad
movsb
lds
add
cwtl
in
lahf
cmp
lahf
push
inc
mov
pushf
notl
inc
fwait
push
sub
enter
mov
push
mov
push
scas
jb
pushf
add
insl
dec
je
pop
pop
or
pop
std
in
insl
rorl
mov
rolb
mov
jae
movsb
adc
mov
xor
gs
mov
dec
fisubl
sub
sahf
xchg
mov
movsl
mov
in
cmp
testb
xchg
out
xor
loope
adc
loop
pusha
loop
cwtl
jae
pop
adc
out
add
outsl
fnstsw
fs
loop
call
jl
inc
xchg
jg
fnstenv
sarl
test
pop
pop
push
test
iret
cmpsw
and
arpl
stos
add
add
repz
fs
fsubrl
or
xor
pop
aas
aad
dec
lcall
or
mov
incb
insb
notl
push
mov
subb
int3
aam
nop
cmp
cmpsl
jg
scas
xor
stos
nop
dec
fsubr
repnz
jge
adc
xchg
out
mov
xorl
into
lock
xchg
jg
push
sub
dec
jb
icebp
andb
aam
stos
mov
int
into
sbb
scas
push
sub
stos
test
xlat
xchg
pop
mov
push
push
inc
cmpsl
fnstenv
loop
data16
popa
xchg
aam
sbb
cmpsb
dec
inc
test
shlb
incb
and
or
xchg
jns
fxch
cltd
and
pop
cmp
sub
sub
inc
or
fmul
add
or
pop
imul
mov
dec
call
xchg
mov
push
js
mov
rcrl
or
xor
sub
push
adc
ret
lret
arpl
cmc
jnp
call
xor
dec
sbb
sahf
mov
fildl
push
mov
sbb
fcom
inc
adc
imul
xchg
sub
fsts
add
pushf
ret
pop
push
lret
push
push
inc
scas
mov
dec
mov
xor
sbb
push
enter
cmpsl
xchg
inc
dec
insb
fwait
sti
insl
sub
or
mov
jg
adc
pop
fdivl
or
adc
jns
shrl
jp
aad
lret
iret
sti
test
sbb
xlat
cld
push
nop
or
cltd
daa
sbb
mov
pop
mov
scas
mov
push
cmpsl
repz
fisttps
loopne
int3
push
mov
adc
or
jns
movsb
lea
pop
cltd
insl
cmp
test
cli
daa
mov
bound
imul
mov
adc
mov
sti
ret
ret
jge
push
adc
pop
aas
adc
out
and
in
xor
xor
rcrl
push
pop
lods
outsl
mov
lock
dec
jbe
jecxz
test
adc
outsb
dec
push
mov
movnti
sbb
pop
dec
sbb
push
shrl
mov
data16
js
es
bound
es
outsl
jle
sahf
in
jle
xchg
inc
fldenv
mov
clc
movb
fdivr
fsts
rcrl
shlb
cmp
sbb
mov
cmpsl
rcrl
jbe
push
dec
cmc
inc
mov
rorl
adc
jle
sti
dec
cltd
add
push
jg
fs
mov
arpl
fidivrs
cmp
jge
pop
push
lcall
push
into
pop
mov
call
sub
jmp
jne
xchg
das
xlat
out
nop
addr16
aaa
sbb
imul
pop
mov
mov
push
mov
pop
jbe
jle
pop
hlt
addr16
repnz
or
ret
not
movsl
lret
xchg
lds
jbe
add
mov
adc
rcll
pop
shrl
iret
addb
pusha
aad
les
test
push
hlt
lret
xchg
mov
rcll
call
sbb
jne
push
sub
mov
pusha
daa
cli
cltd
jnp
sbb
je
xchg
cwtl
outsb
bnd
cwtl
add
ja
popa
push
repnz
sub
insl
aad
lea
mov
in
fcompl
dec
push
sbb
jge
cmc
divl
mov
out
adc
pushf
sbb
pop
aad
loopne
icebp
and
stos
cmp
inc
inc
ja
xor
insb
in
ljmp
push
cmpsl
xor
jecxz
mov
int
push
adc
sbb
nop
loopne
and
js
lds
xchg
ljmp
mov
add
dec
fidivrs
test
xlat
add
inc
stos
in
lock
je
dec
imul
stc
scas
icebp
loopne
sub
or
jecxz
add
orb
sti
mov
fwait
xor
leave
xor
sub
or
and
and
int3
cmpsl
mov
dec
insb
repnz
sbb
mov
sub
cmpsl
in
lcall
xor
lock
in
andl
data16
clc
je
popf
mov
test
sub
inc
xchg
sub
pop
into
out
xor
jmp
scas
mov
test
jo
xorw
mov
mov
xchg
cmpsb
adc
cmc
aaa
sbb
adc
shrl
push
ljmp
cmp
mov
std
dec
aad
pop
push
mov
ret
mov
pop
popa
push
cmp
dec
cltd
sub
les
ror
xchg
pop
xchg
cmp
mov
add
lret
push
outsb
dec
in
cmp
or
mov
mov
lea
xchg
stos
jns
scas
or
mov
pushf
ja
pop
aaa
rcrb
pop
daa
ret
pop
shll
dec
and
xchg
inc
lret
imul
pop
xor
icebp
in
push
out
xor
repnz
je
ret
pop
outsb
mov
sbb
bound
mov
or
andb
fcoms
iret
stos
movsl
push
leave
push
mov
pop
or
es
cmp
adc
adc
shll
sub
test
fnstenv
rclb
std
inc
add
add
mov
sbb
mov
add
cmp
stos
jo
dec
pop
popf
push
fadd
shll
rcrb
push
jno
sarl
inc
fldl
push
in
aam
mov
dec
sbb
cmp
imulb
popa
xchg
inc
jns
jnp
int
xchg
pop
mov
sub
in
das
adc
aad
pop
or
cmp
ds
mov
adc
pop
ljmp
inc
popa
sbb
push
mov
xchg
jle
mov
imul
xor
test
loop
jp
inc
mov
cmp
call
sub
or
push
loop
repz
add
dec
and
xchg
or
loopne
nopl
or
dec
dec
pause
pop
outsb
xchg
pop
and
dec
xchg
mov
jo
mov
hlt
cmp
stos
pop
lods
dec
test
jae
ja
add
xchg
outsl
cmp
xchg
repnz
cwtl
or
fdivrs
sub
bound
pop
into
push
add
xor
or
pop
inc
popa
cmp
fisubl
rcr
adc
sub
push
mov
in
orb
mov
dec
inc
mov
ja
xchg
lcall
arpl
or
xor
jmp
pusha
push
test
and
sbb
pop
lret
mov
int3
mov
fmul
nop
mov
les
dec
sbbb
xchg
setle
cmp
dec
xchg
mov
jb
xor
pop
push
push
sbb
adc
jle
fucomip
iret
mov
jp
mov
jo
cs
ret
loope
mov
or
and
scas
fstpt
mov
xor
xor
jbe
subb
outsl
xor
lea
mov
adc
pop
push
cmp
sbb
imul
push
das
jno
das
jle
dec
outsb
dec
jae
pop
sub
fs
aam
or
adc
xor
or
dec
push
mov
mov
movsb
pop
scas
pop
push
testl
inc
mov
jb
jb
lcall
sub
jae
pop
repz
repz
into
in
fiadds
dec
push
lods
in
adc
repnz
bound
cmp
jmp
ret
bound
outsl
xlat
shrb
scas
cmp
jl
and
adc
insl
int
sbb
fwait
aas
pop
add
mov
pop
loop
add
jp
int3
dec
xchg
and
sub
sbb
scas
cmp
popf
inc
addb
les
imul
pop
lahf
insb
js
out
pop
jns
shrb
out
cwtl
out
xlat
inc
fs
jmp
xor
xchg
movsb
stos
mov
mov
lods
out
es
fisttpll
test
adc
cmp
inc
jg
shr
sub
mov
imul
sbb
push
rorb
lock
popl
ss
jmp
inc
fcmovne
mov
jmp
cmc
jg
scas
cmp
pop
pushf
ror
and
cmp
bound
mov
push
cli
int
inc
aam
xor
pop
or
stos
fiadds
adc
mov
mov
shl
rcll
cmc
xor
cli
cmp
test
in
rorb
fnstsw
jbe
ja
or
cs
fcmovbe
scas
fisubl
lods
xor
sbbb
stos
and
adc
je
mov
add
adc
jno
lea
jl
sarb
inc
inc
xchg
inc
shll
sbb
dec
les
adc
lods
js
inc
adc
mov
lock
mov
test
mov
xor
add
push
addr16
pop
daa
push
les
xor
ret
jne
dec
sbb
enter
sub
nop
outsb
mov
arpl
fadds
subb
je
flds
aad
mov
gs
jne
jne
jg
subl
sti
dec
daa
cmp
sub
mov
pop
data16
fisubl
pop
cmp
je
jno
add
stos
sahf
jmp
jbe
lods
fistpll
fiaddl
fmuls
movsl
test
jl
sub
insb
call
push
mov
mulb
popa
cmpsb
incb
adc
add
and
lcall
fwait
cwtl
mov
stos
ffree
scas
std
sub
jae
jo
lods
xchg
inc
pop
outsl
adc
jmp
loop
lret
icebp
push
xor
add
xchg
mov
ret
add
andb
xorb
std
dec
cld
jb
in
mov
sub
pushf
push
mov
xchg
jge
jno
pop
sub
jl
and
in
xor
cmp
insl
sbb
data16
fcoms
data16
or
push
jne
adc
push
enter
adc
mov
pusha
fs
fs
dec
insl
jne
fmull
push
adc
bound
push
xchg
jns
add
xchg
ja
addr16
lods
negb
and
jnp
data16
pop
fucom
into
or
cmp
repnz
cli
shl
jne
adc
jo
enter
movsb
nop
addl
xchg
in
xor
xor
stos
aaa
push
mov
orb
jp
push
jl
cmp
sub
push
loop
and
pop
cmp
lock
inc
xchg
sbb
aas
sub
outsl
into
adc
mov
in
push
dec
aaa
pushf
lahf
push
inc
mov
mov
imul
and
jo
notl
cmp
dec
sub
iret
sub
in
inc
or
pop
in
fbstp
cmp
rol
mov
test
rcll
aam
sub
je
pop
cwtl
into
les
push
push
in
lcall
addl
sbb
out
sbbl
inc
dec
sbb
ljmp
cmc
jb
push
adcb
orl
jp
fwait
lods
out
xchg
rorb
pop
lods
push
jecxz
insl
and
xchg
sbb
std
clc
ds
inc
cwtl
cmpl
xchg
loop
xchg
mov
inc
or
jmp
int
xor
or
sbb
cld
mov
sbb
std
out
xchg
pop
lods
test
je
jle,pn
jnp
mov
test
xchg
mov
lahf
mov
ror
sub
test
addb
pop
inc
and
mov
sbb
std
cli
push
sarl
push
mov
pop
adc
dec
push
into
aam
jbe
jp
daa
xchg
inc
jl
dec
stc
mov
jne
inc
lret
rclb
xchg
cli
ds
out
stc
inc
ja
scas
inc
push
lret
cmpsl
in
xchg
div
jl
je
push
imul
sub
ja
pushf
scas
sub
sub
cmp
mov
sbb
xchg
ss
lods
popa
cmp
bound
mov
cmp
pop
pop
inc
xchg
pop
mov
add
negb
sahf
mov
aaa
or
mov
loopne
adc
jnp
outsb
sahf
sbb
cmpsb
dec
mov
ret
inc
adc
dec
jno
cwtl
sub
sti
mov
pop
xor
dec
dec
shrb
and
sub
xchg
dec
aam
sub
out
pop
xor
cmpsb
pop
lds
mov
cld
hlt
inc
insb
icebp
leave
inc
inc
xchg
adc
pop
xorb
inc
popl
aam
ret
push
je
ljmp
cli
test
stos
imul
or
pop
stos
mov
mov
shr
mov
int
mov
orb
push
fsts
out
stc
xchg
or
test
sbb
into
dec
repz
jns
mov
pop
inc
push
xor
pushf
pop
push
mov
or
xchg
sub
cmpsl
pop
call
mov
inc
push
inc
stos
lods
fisttpl
lea
xchg
adc
pop
ljmp
in
pop
dec
mov
mov
add
test
adc
rcrb
xor
sub
popf
movsl
stos
jnp
in
sbb
out
push
out
xchg
mov
stc
pop
mov
or
adc
ds
mov
add
push
push
mov
lds
subl
dec
push
ret
xor
pop
test
sub
test
cltd
dec
mov
push
repz
cmpb
aas
int
shll
push
outsl
jo
fcompl
add
daa
loope
dec
mov
shll
popf
test
test
mov
jp
ret
fdivs
jno
cmpsb
cltd
sbb
push
and
mov
scas
dec
jbe
mov
lods
lods
ror
pop
mov
mov
daa
adcl
and
xor
fdiv
pop
inc
xor
sbb
push
icebp
clc
add
pop
jbe
jns
sbbb
fs
cmp
ja
cli
mov
push
pop
xorl
push
xchg
push
div
sar
fcoml
inc
mov
lahf
clc
jge
pop
ljmp
mov
dec
adc
cmp
test
pop
stos
push
aaa
popf
push
movsl
inc
stc
sub
arpl
jo
or
mov
mov
fs
cmpsl
rorb
sub
leave
mov
mov
mov
add
loope
jnp
add
pop
sub
or
mov
fistpl
dec
lods
arpl
mov
clc
jns
xchg
pop
adc
mov
sub
mov
rclb
jne
mov
ds
cmp
into
or
cmp
mov
std
adc
mov
xchg
add
ljmp
jecxz
incl
fsubs
loop
mov
int3
cmpb
fldcw
mov
dec
inc
and
test
mov
or
cmp
adc
mov
clc
sbb
xor
jo
in
and
jns
jle
push
fwait
and
inc
push
sbb
jecxz
mov
test
fwait
sub
lock
mov
sub
push
jo
rcrl
add
inc
cmpsb
inc
icebp
out
shrb
xchg
in
inc
cmp
icebp
inc
or
pop
push
sbb
jb
xchg
jae
aam
test
push
cmp
adc
add
mov
leave
shll
outsb
xor
mov
out
xchg
leave
addr16
push
lods
movsl
mov
jp
iret
mov
cmp
movsl
jne
mov
fnsave
call
fbld
std
jge
scas
imul
xchg
mov
lea
hlt
mov
or
mov
jmp
imul
inc
insl
clc
mov
cmc
mov
xor
cmp
out
fcom
or
lea
cwtl
dec
xor
gs
jp
popa
or
jge
lret
stc
inc
cwtl
in
es
jmp
cltd
cmp
add
scas
aas
and
xchg
test
test
push
dec
sub
in
xchg
shll
mov
ss
or
jecxz
daa
sti
jmp
cwtl
xor
arpl
fwait
mov
mov
jecxz
or
xchg
mov
xchg
popf
jb
xor
je
aaa
lea
ret
push
addl
sub
jne
dec
fcmove
ret
lds
and
cmp
inc
pusha
xor
mov
ljmp
sti
xor
mov
in
aaa
int3
movsl
inc
icebp
icebp
fidivl
fidivrl
mov
bswap
ljmp
aaa
pop
mov
out
andl
jecxz
cltd
inc
pop
daa
push
in
rcrl
mov
cld
es
dec
xchg
fs
std
push
push
aas
and
xor
arpl
push
out
sub
xlat
insl
xchg
jmp
movsb
cmc
ret
xchg
arpl
dec
in
add
add
jmp
sub
mov
pop
aad
jnp
pop
stc
popa
pop
push
cmp
xor
aas
jne
shll
sbb
cwtl
jmp
xor
xor
loope
cmp
std
jns
mov
adc
xor
push
and
subb
arpl
stc
jb
mov
sub
jg
lock
inc
out
iret
aas
fildll
out
push
mov
cmp
in
xchg
ffreep
sub
les
in
pop
pop
mov
test
jge
sbb
or
cmc
or
daa
aas
mov
arpl
ljmp
loope
pusha
stos
push
xchg
jne
cmpsb
inc
xchg
pop
pop
dec
lock
test
jmp
pusha
mov
mov
and
or
and
xor
push
hlt
xor
dec
daa
in
dec
dec
jg
pop
fsubrl
iret
jbe
xchg
push
sbb
and
add
pop
lret
jecxz
pushf
fpatan
jo
jl
insl
daa
jno
mov
in
inc
insl
ret
popa
or
push
sbb
addr16
test
and
push
inc
mov
or
push
cli
or
lcall
iret
xchg
enter
cmp
stos
sarb
fwait
rcrl
out
cmp
scas
xlat
cs
int3
sbb
mov
cli
mov
cmp
adc
mov
inc
in
xor
es
or
xchg
pop
bound
clc
cmp
xor
push
push
inc
ljmp
pushf
scas
sub
sub
sub
test
cli
into
test
xor
mov
cltd
nop
lcall
xchg
mov
sbb
push
aas
cmp
xchg
pushf
pop
jnp
bound
or
loopne
sbbb
pop
insb
gs
jg
adc
and
cs
mov
xor
les
cmp
cld
mov
mov
jne
jge
jg
xchg
loope
arpl
and
cmp
outsl
fs
xchg
mov
rcrb
loopne
mov
and
out
mov
sbb
mov
push
sar
dec
test
mov
lds
push
mov
mov
ja
arpl
or
jp
lret
scas
fisubrs
xor
sti
lret
mov
pop
jbe
fmul
jecxz
adc
aas
cmp
out
mov
das
jle
sbb
xacquire
in
bound
lcall
cmpsb
lods
xchg
shlb
int
cld
jbe
call
lock
and
loopne
inc
pop
test
dec
in
cmpsb
pushf
push
mov
mov
xor
cwtl
in
inc
pop
icebp
daa
ljmp
lea
test
mov
ja
xchg
test
into
xor
fsubrp
mov
mov
add
sbbl
les
mov
mov
ljmp
addr16
shrb
ss
jge
lods
dec
push
xchg
outsl
ret
sub
andl
and
aaa
pop
jb
jle
aad
sbb
add
and
jnp
pop
test
jecxz
das
fists
or
xchg
and
mov
or
in
sar
push
dec
movsb
mov
addr16
cld
out
sarb
pop
mov
xchg
sti
hlt
push
scas
add
push
pop
pop
xlat
xchg
xchg
outsb
scas
fnstenv
dec
scas
out
push
xor
in
mov
xor
push
ficompl
push
jne
lods
mov
fwait
mov
mov
fwait
sbb
lahf
and
popf
add
xorb
pop
or
mov
mov
and
lea
ffreep
xchg
hlt
sarl
mov
dec
and
fldt
cs
and
aam
das
sarl
xchg
movsb
jg
jnp
repz
adc
sub
sub
shl
decl
jmp
xchg
dec
xorb
add
repnz
push
lret
pushf
mov
jo
shl
addr16
in
pop
mov
icebp
and
neg
fs
inc
scas
dec
xchg
ss
jmp
sbb
fdivr
inc
dec
xor
int
cs
push
fcoms
cmp
adc
ds
push
and
in
pop
jbe
ss
mov
inc
and
lret
and
lea
fdivp
cmpb
imul
fisubrl
rcrl
test
cli
mov
add
adc
pusha
test
pop
aas
sbb
xlat
sbb
push
and
orb
imull
out
and
loope
or
pop
faddp
jbe
test
sbb
aam
popf
vmwrite
imul
imul
leave
int3
add
sbb
xlat
xor
je
and
mov
fisubl
hlt
push
jp
push
cmp
lret
add
dec
xchg
shl
xor
sbb
mov
gs
mov
clc
inc
or
test
dec
not
add
aas
jecxz
out
pop
sub
fistps
jne
mov
pop
loop
fcompl
je
lcall
sub
into
jmp
dec
lds
sbb
test
mov
imul
add
mov
xchg
and
cwtl
test
push
cli
in
aas
jg
sub
xchg
rolb
aad
ret
stos
or
push
xlat
pusha
dec
mov
sti
mov
mov
out
dec
inc
push
dec
sbb
nop
seto
sbb
shrb
dec
xor
insl
rol
sahf
aad
push
mov
inc
mov
outsb
ds
mov
push
fmull
popf
dec
call
lds
pushf
cmp
and
mov
mov
fildll
hlt
dec
rolb
add
repnz
inc
enter
push
pop
xchg
dec
addb
mov
sub
xchg
mov
or
test
ret
aad
xor
loop
das
pop
out
aas
jbe
in
aas
xchg
ds
sub
jg
cmpsb
scas
mov
adc
mov
cmp
fiadds
xor
and
std
adc
pop
mov
jne
mov
mov
pushf
loope
xchg
push
dec
mov
test
inc
sub
arpl
test
lea
lock
or
aas
dec
pop
push
repz
stos
test
push
daa
push
jno
faddp
les
push
sub
xchg
cmpsl
lods
outsl
adc
and
jmp
mov
inc
mov
int3
jb
bound
pop
mov
movsb
in
aas
pop
ds
lcall
adcl
in
and
mov
mov
movsb
push
lret
fildll
loope
xchg
jg
dec
rcl
sub
pop
dec
popa
adc
test
setg
push
scas
xchg
lods
mov
mov
rcrl
std
pop
shlb
test
adc
in
test
aas
jb
jle
stos
repz
pushf
mov
sti
clc
sarb
push
xor
and
leave
cli
pop
fwait
mov
mov
mov
insl
out
repnz
fisttps
or
faddl
xor
mov
int3
dec
and
sub
adc
mov
insb
push
xchg
insl
cmp
sub
and
iret
addps
push
mov
xchg
cwtl
stc
pop
xor
push
sub
notb
shll
aad
jmp
clc
jae
jne
jo
aaa
xchg
mov
int3
cmc
or
outsl
adc
mov
jae
add
sbb
dec
mov
nop
mov
fbld
pop
cmp
cmpsb
mov
mov
mov
dec
xor
mov
loope
stos
fldcw
sbb
test
and
or
sub
lret
enter
jg
and
cmc
test
mov
adc
pop
popf
mov
lds
clc
mov
push
icebp
adc
push
outsl
iret
cld
xchg
lods
pop
icebp
lret
adc
adc
int
mov
adc
dec
add
fcmovne
cmp
in
iret
int3
adc
popa
andl
movsl
addr16
int
fwait
idivl
pop
lret
ret
cmc
dec
xchg
xchg
mov
dec
sbb
or
psrlw
rcll
and
xor
jns
dec
mov
mov
gs
pop
and
sbb
scas
sbb
and
or
push
and
je
mov
rorl
ret
xor
lret
pop
mov
sahf
icebp
test
sub
aaa
mov
push
pushf
mov
push
mov
push
jne
sbb
call
inc
adc
dec
fstl
xor
pop
sub
xchg
xchg
xor
xchg
mov
pusha
sbb
ret
mov
add
or
enter
xchg
pop
xchg
ret
push
dec
pushf
cmp
test
sahf
cmp
and
xchg
cld
inc
xchg
lock
cli
ss
test
out
mov
aaa
or
decb
cmp
fsub
sarl
lds
push
xchg
mov
ret
sbb
fucomp
dec
insb
fldt
or
push
mov
sbbb
mov
mov
cmpsb
lock
mov
fs
cs
iret
jns
pop
inc
or
nop
or
xor
ret
cmpsl
or
addr16
sbb
leave
aas
int3
repnz
push
mov
cmp
inc
in
mov
xor
push
loop
enter
sbb
sbb
movsl
mov
out
aaa
mov
cvtps2pd
loop
faddl
repz
out
add
call
pop
movsl
xchg
insl
arpl
repnz
lea
sub
or
push
xchg
addr16
sub
push
lds
cmp
push
test
push
cmpsl
cmpsb
xchg
inc
jo
outsb
inc
mov
jns
pop
mov
test
data16
sub
gs
mov
dec
sub
jne
xor
icebp
lods
add
js
movsb
aaa
outsb
jbe
ret
xchg
cli
and
cltd
imul
addr16
notl
mov
adc
mov
rclb
push
cmpsl
jmp
jecxz
nop
aas
or
xchg
fcoms
add
or
xorl
inc
push
pop
xor
xor
out
push
mov
out
cli
into
add
cmpsb
xchg
mov
push
push
shlb
inc
dec
mov
sub
ja
inc
andb
das
insb
rcrw
jp
popa
adc
pop
and
pop
ret
out
stos
mov
ret
jecxz
inc
jle
pop
clc
fcmovnbe
add
addr16
jge
pop
psrlw
out
sbb
push
dec
sbb
popf
and
jecxz
out
push
loopne
mov
pushf
push
cmpsl
call
mov
inc
sbb
sbb
cltd
rcll
imul
leave
idiv
inc
lahf
mov
aam
fmull
add
clc
enter
xor
rolb
aas
jmp
cmpsl
aam
repnz
and
xchg
cmp
sub
push
ljmp
mov
sub
push
mov
mov
push
aas
pop
jg
lods
int3
insl
out
or
in
fwait
xchg
insl
xchg
subb
addr16
daa
and
insl
lret
jbe
cmpl
repz
and
dec
mov
cmc
scas
inc
mov
pushf
sub
mov
and
mov
aas
ret
out
movsl
jmp
je
and
or
add
jp
cmpsl
mov
addr16
pop
xor
inc
scas
mov
icebp
sbb
xor
jnp
std
repnz
outsb
mov
or
xchg
cmc
cmpsl
mov
xchg
add
pop
mov
adc
lock
xor
xchg
jp
aas
push
cli
test
outsl
ds
jmp
mov
enter
insl
add
cmp
sub
inc
shr
inc
call
cwtl
xchg
dec
xchg
lret
out
inc
stos
inc
lods
leave
in
cmpsl
popf
mov
mul
pop
push
cltd
fimull
fnstenv
ret
xor
aad
dec
aaa
xor
inc
xor
insl
push
fists
int3
mov
shl
sbb
pop
aaa
fcmovnu
cs
iret
dec
mov
loopne
adc
xchg
pop
jl
arpl
pop
bound
inc
xlat
cmc
mov
outsb
sbb
mov
and
mov
sbb
lret
es
scas
aam
fidivrl
cmc
test
mov
mov
jns
inc
in
mov
push
xor
das
push
xor
scas
daa
mov
out
xchg
sahf
xchg
sbb
jmp
je,pn
test
lods
jl
loopne
xchg
xor
lret
je
les
xor
and
mov
adc
clc
or
cli
sub
inc
xchg
cli
xor
cmp
add
pop
in
lret
jno
mov
pop
cmpsb
popa
dec
popf
fadds
es
in
jmp
movsb
jne
addr16
fbstp
xchg
insb
xor
decl
popf
push
jns
xchg
jg
test
pop
mov
mov
mov
sub
cld
pop
mov
fwait
jo
xorb
ss
rcl
dec
mov
push
dec
pop
mov
fs
nop
cmp
cmp
fdivl
xor
and
aad
add
sti
sarb
lock
es
adc
push
xchg
sbb
popf
scas
stos
outsl
out
mov
into
ret
pushf
test
imul
rcll
add
sbb
inc
in
and
cmpb
jl
inc
in
test
arpl
sbbl
mov
mov
jge
inc
roll
add
daa
loop
mov
jae
cltd
fwait
imul
divl
nop
cmp
mov
int3
idivl
fidivl
add
notb
pop
mov
mov
mov
addr16
mov
lcall
bound
repnz
std
arpl
xchg
mov
mov
fdivrs
mov
addb
sub
out
mov
push
push
sub
jge
cld
in
cmp
lods
mov
adc
out
and
pop
rorl
aam
sbb
inc
jge
jecxz
push
cmp
lods
add
scas
adc
add
fcomi
bound
xchg
jns
sbb
cli
stos
popf
dec
xchg
outsb
inc
xchg
dec
les
adc
jg
cmc
jecxz
and
jmp
js
dec
je
fsts
dec
data16
jp
or
push
push
sarl
test
loope
test
pusha
adc
xchg
cmp
lock
test
jmp
push
xchg
pusha
pop
call
push
rcrl
loopne
negb
jbe
insb
mov
cwtl
mov
bnd
mov
pop
mov
dec
in
and
fisubrs
sbb
mov
mov
lcall
pop
mov
sub
and
mov
add
mov
jbe
sub
jno
dec
rcrl
imul
enter
cltd
sbb
mov
cmc
sub
iret
js
xor
sbbl
insl
xchg
test
mov
mov
out
sahf
jno
jo
out
xchg
imul
inc
inc
arpl
out
xor
push
push
out
jo
xchg
dec
adc
aaa
daa
je
cs
xchg
int
pop
in
fildll
fisubrl
aas
call
sub
mov
mov
out
outsb
and
xlat
fiadds
arpl
das
int3
aas
ja
xchg
pop
hlt
popa
dec
ja
mov
andl
jg
sub
cmpsl
aad
cmpsb
lods
dec
std
xorl
xor
mov
mov
jae
jl
movsb
notb
cmc
divb
mov
mov
push
outsl
jb
push
bound
adc
xlat
mov
dec
add
dec
das
jns
and
add
and
dec
aas
add
push
cmp
rcrb
or
push
pop
aas
cmp
xor
mov
push
xchg
pusha
repnz
adc
fs
imul
movsl
hlt
pop
cmp
cwtl
push
jp
adc
push
scas
dec
and
inc
mov
lret
fsubl
mov
pop
leave
xchg
int
jg
loope
or
outsl
sub
test
lret
sarb
sub
pop
gs
repnz
out
out
pop
and
push
xchg
mov
push
push
orb
aaa
push
jno
cs
push
gs
cmc
inc
jnp
push
xchg
dec
aas
mov
loopne
mov
je
scas
adc
sbb
push
or
pop
jge
sbb
into
inc
insl
or
push
insl
test
dec
cmp
adc
push
pop
out
adc
or
ret
stos
bound
movsl
mov
sbb
xor
dec
shrl
out
dec
lahf
cmc
fbstp
adc
cli
ds
mov
out
pop
std
push
push
lret
lds
sbb
enter
lods
pusha
pop
inc
andl
mov
sarl
and
cmpsb
sar
jne
and
mov
mov
repnz
cmpsb
dec
add
xchg
pop
ret
pop
add
ficoml
xor
insb
mov
cmp
inc
cmp
cli
mov
movsl
pusha
or
mov
or
and
mov
adcl
pop
sbb
jbe
pop
mov
jmp
scas
pop
lea
aaa
cld
add
lret
loope
inc
cwtl
xchg
mov
push
pop
mov
fadd
jnp
jg
mov
inc
lcall
cmpsl
bnd
ja
xchg
gs
jecxz
pop
insb
fdivrp
popa
out
jg
aam
mov
jp
sbb
jbe
cmp
mov
sarl
adcl
mov
dec
scas
sub
jmp
and
add
lret
add
ja
adc
mov
sahf
ficoml
add
cmpsb
lds
xor
pop
jge
aad
jmp
movsb
xchg
and
stos
ud0
or
aad
cs
aam
mov
aam
enter
out
xchg
dec
popa
out
jle
jl
lods
cli
int
jp
and
cmp
and
adc
inc
call
hlt
clc
idivl
mov
mov
and
mov
push
sub
inc
rorb
add
fistps
jbe
lods
into
das
ljmp
add
pop
push
jp
loopne
loopne
ljmp
mov
push
pop
les
out
mov
jo
jecxz
jno
ret
mov
lock
insb
or
and
imul
fsubs
sub
data16
in
into
fisubs
xchg
lock
aas
fs
hlt
pop
sub
pop
jnp
pop
mov
jl
out
lcall
pop
push
inc
push
in
fiaddl
xchg
popf
push
push
push
mov
xor
ja
pop
push
in
or
fidivs
mov
xchg
lock
adc
ss
lods
adc
rol
and
or
push
adc
mov
imul
mov
sbb
push
sbb
mov
popa
subb
jp
ds
jae
mov
idivl
cmp
or
mov
sub
and
addr16
pop
inc
sbb
inc
push
insl
cmpl
xchg
mov
outsb
jmp
lods
loope
fwait
ljmp
inc
mov
inc
add
adc
outsl
test
jp
sub
fadd
jbe
out
loop
clc
xor
xor
cmp
cmp
xor
sti
cmc
rcll
arpl
cmp
xchg
inc
pop
cmp
or
fdivrs
pop
fmul
insl
pushf
fldcw
imul
xchg
adc
inc
jo
aas
mov
nop
arpl
sub
test
sub
icebp
rcrl
adc
es
std
cld
ja
insb
jmp
test
cmp
popa
ret
adc
xor
xadd
dec
sub
dec
mov
mov
adc
cltd
mov
sti
mov
rcr
mov
jbe
bnd
inc
xlat
repz
clc
aam
add
dec
out
mov
push
mov
mov
dec
imul
in
push
idivb
fisttpll
fistl
cwtl
fdiv
addb
push
mov
xchg
repnz
loop
les
je
mov
sub
sbb
xor
sub
cmp
or
xchg
fmul
in
in
pushf
add
pusha
adc
pusha
push
rcrb
add
xchg
mov
fadd
push
mov
mov
push
sbb
mov
push
and
and
mov
xor
rcrl
sub
shlb
fsubrl
sahf
jne
movsl
ficompl
addb
mov
push
push
pop
clc
out
adc
ljmp
call
xor
jno
xor
test
jb
sub
daa
push
aam
xchg
das
in
aad
pop
aas
inc
out
mov
cli
inc
clc
ds
jmp
jmp
outsb
fs
icebp
xor
or
repnz
es
xchg
ds
mov
imul
mov
mov
mov
popf
ljmp
iret
daa
test
add
mov
mov
pop
or
aaa
fs
daa
movsb
add
loopne
rcll
dec
sub
vunpcklps
ret
loope
xor
es
loopne
push
mov
mov
jp
mov
inc
xchg
add
xchg
sub
push
mov
loope
mov
push
es
sub
movsbl
mov
jl
negl
pushf
in
jl
mov
jb
lea
out
rcr
subl
xchg
jp
mov
fimuls
testl
mov
add
enter
out
and
lds
push
xor
stc
xchg
jp
xchg
orb
adc
sbb
pop
mov
push
mov
pop
mov
and
sub
scas
jmp
rcll
xlat
leave
lcall
pop
and
pop
mov
mov
iret
daa
leave
pop
stc
adc
pushf
andl
stc
xor
dec
or
sub
movsl
push
lods
out
rol
adc
aam
mov
sbb
int
mov
add
aad
jg
sti
cmp
in
xor
popa
add
adc
pusha
push
dec
test
loope
fistps
pop
notl
mov
lcall
dec
movsb
jecxz
fisubl
repz
cmpsl
fs
pop
inc
outsb
push
retw
sub
in
aaa
jg
mov
jb
push
mov
xchg
fistpl
movsb
xchg
andb
jno
mov
inc
xchg
cmp
pop
cmc
imul
inc
sub
popf
scas
repz
rdtsc
jl
adc
arpl
sbb
loope
ror
int3
pop
jno
stc
and
push
mov
imul
mov
decb
adc
jecxz
jne
and
adc
insb
or
xor
mov
cmpsb
subl
or
cmpsb
dec
inc
push
popf
cmp
ljmp
sub
mov
jb
add
sbb
aad
mov
bound
or
jae
stc
add
add
xor
jae
punpckldq
insb
rolb
sub
push
and
dec
aaa
mov
mov
push
cmp
xchg
sub
test
test
out
popf
cmp
pop
inc
pop
xchg
fidivs
and
leave
loopne
enter
mov
addr16
xor
fstps
cmp
mov
jl
mov
push
inc
xchg
sahf
sbb
scas
xor
xchg
cld
or
xchg
int
mov
cltd
iret
xor
aaa
jbe
mov
cli
xlat
shrb
test
xor
push
lahf
lods
sarl
cld
mov
in
aam
sbb
push
loope
mov
add
cli
pop
mov
lar
icebp
adc
add
xchg
xlat
daa
push
shrl
mov
imul
pop
lea
pop
clc
out
sbb
repnz
mov
and
fs
call
iret
inc
or
mov
popf
sbbl
ja
cmpsl
xchg
xchg
adc
rcll
rorl
pop
mov
jnp
add
cmpsl
cmp
popa
addb
xchg
sub
mov
dec
cmp
lahf
fiadds
mov
pop
inc
push
in
shll
lea
push
fidivrs
sbb
mov
dec
xor
cmpsb
scas
sbb
jb
jecxz
fbstp
pop
sub
xor
lret
pop
dec
sarb
pop
push
lret
sahf
or
mov
adc
sbbl
scas
mov
ret
cltd
xchg
js
sbb
inc
je
sti
dec
sbb
push
mov
adc
and
sbb
mov
aam
out
std
push
mov
ss
pushf
mov
in
notl
push
jae
ljmp
mov
enter
repnz
int
aam
cmc
adc
xchg
test
jns
in
lret
loopne
scas
add
in
adc
xchg
mov
iret
xor
mov
cltd
cltd
cmpsb
mov
out
jnp
mov
rorb
bswap
stos
sahf
or
mov
aas
daa
stos
cli
in
push
and
push
and
add
out
and
rcll
imul
inc
and
insb
adcb
jecxz
add
sub
jno
adc
adc
jp
scas
jbe
mov
and
out
mov
push
test
int3
inc
mov
cltd
pop
or
mov
sahf
shll
cmp
push
jno
imul
add
test
cltd
sub
clc
je
jbe
shll
js
fimull
lods
mov
leave
xchg
nop
add
sbb
xchg
xchg
cltd
rcrl
or
repz
fs
pop
jbe
push
xor
adc
xor
leave
add
cli
sub
xchg
cmpsb
dec
fwait
xchg
mov
add
rcll
add
xchg
cli
addr16
pop
fnstenv
stos
xor
ljmp
xchg
jbe
and
cmc
mov
xchg
dec
add
mov
inc
mov
jno
jg
push
or
insl
dec
jle
sbb
lahf
rclb
jne
mov
or
inc
jmp
out
sti
push
mov
pop
clc
icebp
jmp
add
xchg
or
hlt
enter
addr16
pop
mov
cmp
stc
jle
loope
sbbb
mov
push
stc
mov
pop
inc
cli
fisubl
add
je
mov
mull
xchg
sbb
pushf
gs
mov
divl
shlb
xchg
lret
call
inc
mov
sub
into
adc
ret
add
and
fsubrp
jp
iret
inc
mov
and
add
hlt
stos
jo
mov
jp
push
dec
mov
in
lods
mov
aam
push
pusha
cli
fidivrs
push
aad
and
mov
xchg
inc
pop
ret
bound
fidivs
daa
lret
cmpsl
in
mov
mov
data16
pcmpgtd
push
pop
scas
jbe
add
mov
fs
jne
repnz
rclb
cmpsl
cmp
and
lret
shr
dec
icebp
mov
jecxz
cli
ja
jp
push
les
test
adc
cld
lods
xor
insb
adc
call
leave
inc
data16
adc
pop
mov
test
fdivs
mov
dec
lods
add
repnz
jne
arpl
cmp
dec
fisubrl
adc
or
mov
jecxz
stc
xchg
js
cmp
inc
dec
push
push
jmp
xor
mov
add
fsubl
jns
push
leave
inc
mov
pop
sbb
add
pusha
mov
sbb
xlat
fs
mov
negl
js
leave
adc
xor
fcompl
pop
dec
push
out
inc
dec
lods
and
test
push
adc
in
imul
lock
addl
orb
cmc
dec
push
dec
inc
orb
mov
sub
dec
or
cmp
mov
mov
clc
in
dec
add
cmpsb
sub
das
xor
sub
das
stos
cmp
mov
adc
test
xchg
imul
xor
aam
lret
stos
xor
in
and
inc
pop
sbb
leave
js
cli
dec
mov
sbb
orl
cmp
dec
test
aaa
insb
call
test
int3
fisttpll
add
pop
int3
push
enter
or
adc
xor
jno
jecxz
jb
push
scas
add
jp
lods
mov
andnps
jmp
cltd
push
sti
cmp
stc
test
mov
jbe
mov
mov
rcrl
repz
loopne
aam
cmp
or
mov
cmp
out
xchg
dec
enter
sbbl
add
cmpsb
mov
mov
in
andl
push
sub
mov
ret
jge
jge
cmpsl
into
imul
andl
jp
divl
stc
mov
pop
in
cmp
je
roll
pminsw
xchg
xor
mov
mov
out
lret
jmp
mov
xchg
test
cmpsl
inc
loope
js
stc
cmc
cmp
lcall
lea
in
outsb
xlat
daa
dec
mov
hlt
mov
xchg
xor
sar
cwtl
ficomps
fisubrs
push
jo
push
fstp
arpl
sub
out
sbb
pop
out
bound
lret
lods
arpl
rcr
xor
arpl
dec
lock
ret
push
testb
imul
pop
mov
subb
dec
sbbl
sbb
fstps
shrb
pop
fcom
xchg
jle
adc
or
cld
adc
xchg
enter
push
sbb
insl
mov
test
in
popa
lods
inc
rcl
inc
add
leave
cmp
xor
mov
fwait
pop
test
adc
enter
pop
pop
lret
sbb
lds
dec
lods
mov
es
outsl
ret
mov
push
xchg
add
and
lret
insl
push
sub
mov
mov
rcll
std
mov
sbb
sbb
xchg
in
pusha
xor
sub
mulb
lret
mov
mov
inc
ss
movsb
pop
dec
cs
or
push
inc
mov
fdivs
sub
dec
fwait
sub
or
enter
ret
sti
daa
xchg
jne
sbb
leave
popa
movsl
lods
into
jbe
sbb
jb
inc
lods
xor
fisttpll
xchg
test
jae
jmp
dec
cmc
dec
lret
xchg
mov
adc
xor
inc
sub
sub
cmp
sahf
repz
inc
lret
inc
sahf
sub
sarb
dec
push
insl
adc
pushf
push
jl
mov
test
or
adc
je
xor
in
scas
xchg
movsl
in
sub
rcll
push
fisubrl
cmp
inc
sub
pop
sub
pop
adc
jo
xchg
rolb
sub
scas
mov
out
sbb
add
push
loope
call
daa
and
fs
lock
adc
mov
test
sti
jg
enter
sub
cmp
out
pusha
in
jae
fdivl
test
pop
icebp
into
or
jb
insl
into
mov
xlat
into
mov
pop
jmp
mov
sbb
mov
test
pop
sbb
les
in
pop
loopne
cltd
insl
or
and
nop
adc
js
test
add
mov
push
jmp
cmp
lods
ror
arpl
in
in
jl
push
lahf
xor
jbe
xchg
notb
jmp
sbbb
push
cmp
test
xchg
xor
call
adc
sub
adc
pop
lea
xor
push
jno
mov
inc
mov
arpl
lahf
lds
sbb
leave
lds
int
stc
in
cld
add
jbe
mov
push
adc
data16
sub
addr16
test
jae
push
stos
mov
xor
mov
adc
outsb
push
mov
je
shlb
inc
mov
add
js
and
sahf
test
mov
dec
fldcw
inc
fadd
inc
bound
mov
fidivs
jbe
xchg
divl
mov
jmp
mov
clc
sub
mov
or
push
lret
lret
and
mov
adcl
xchg
adc
lcall
mov
leave
add
cli
rorb
mov
mov
xlat
jbe
mov
push
xor
jno
cmp
and
shl
aaa
xchg
inc
shl
mov
push
sub
lret
xor
and
jmp
mov
xchg
mov
aaa
cmp
push
cmp
adc
pop
xchg
jmp
call
or
mov
scas
sub
ss
outsl
cltd
ret
push
and
mov
xchg
rol
imul
or
cmp
insl
jle
lcall
subl
out
pop
add
pop
shl
stos
movsl
xor
jge
test
hlt
bound
iret
lock
push
sahf
dec
fiadds
cs
jp
xor
imul
sbb
fsubrl
ret
in
pop
mov
xor
add
cwtl
push
test
call
add
iret
dec
push
pop
xchg
jo
repz
movsb
jb
jmp
sbb
scas
lock
mov
insw
into
cmp
mov
or
inc
lahf
stos
mov
sbb
add
jl
xor
mov
call
pop
dec
scas
mov
push
cmp
add
testb
hlt
idivb
jnp
shlb
dec
sub
add
outsb
and
xchg
jnp
cmpsl
mov
idivb
scas
mov
mov
test
sbbl
mov
add
push
inc
inc
lcall
jle
pop
pushf
cmpsb
bound
pop
push
movsl
outsb
mov
ret
mov
cwtl
mov
push
xchg
mov
jns
sub
inc
cmp
xchg
movsl
pop
fs
jb
pop
or
push
dec
mov
sub
icebp
jecxz
addr16
lret
aaa
pop
sbb
jl
mov
lret
pop
mov
mov
loope
push
imul
pop
lods
lock
out
jmp
imul
ljmp
fdiv
ss
inc
xchg
pushf
fs
inc
xor
into
fwait
jb
fsubrs
leave
idivl
fcompl
add
outsb
or
xlat
push
dec
rol
subl
jecxz
xchg
ret
popa
js
cltd
mov
ljmp
ret
xchg
pop
je
mov
or
push
jle
push
lea
or
mov
addr16
or
icebp
testb
jl
mov
xlat
cmp
xchg
lret
push
push
and
in
or
xor
mov
cli
add
mov
mov
xchg
loop
dec
mov
and
daa
jmp
cli
addr16
fwait
pop
cmpsb
adc
and
imulb
andl
sbb
push
adc
inc
aaa
cmpl
push
mov
xchg
pushf
jnp
inc
fisubrs
fcos
mov
pop
lods
stos
pop
inc
repz
addb
pop
mov
in
js
or
loop
popa
sbb
jg
repz
xchg
push
mov
push
mov
cltd
or
cmpsb
pop
sbb
sti
int3
pop
cmp
jb
in
mov
jmp
cmc
jmp
jae
repz
sbb
loop
add
nop
adc
inc
imul
adc
pusha
xchg
xor
shll
icebp
mov
mov
nop
leave
cmp
and
fdivrs
adc
push
mov
mov
xchg
mov
lods
lock
div
mov
inc
ficoml
fs
push
mov
jns
sbb
xchg
testl
or
adcl
jb
lea
xchg
aam
pop
jns
test
or
enter
pop
mov
xchg
jmp
in
out
js
add
pop
lock
mov
out
lea
adc
sbb
rolb
ror
lods
mov
imull
add
or
ret
fcmovb
inc
jecxz
xor
divb
and
fmull
sub
xchg
sub
xchg
cmp
cs
mov
mov
popf
xchg
repz
xor
sub
cli
rcrl
sub
in
stos
sub
ljmp
lret
mov
push
leave
in
movb
cld
punpckhdq
insl
or
push
data16
popa
lock
imul
icebp
stos
xor
push
popf
int3
adc
xor
add
xchg
jge
test
rorb
dec
mov
or
sbb
pop
inc
xchg
test
or
and
pop
dec
and
int3
xchg
sub
cli
xchg
rcrb
les
out
sub
adc
mov
test
jle
mov
push
jl
mov
mov
inc
cmp
mov
aad
and
cmpsl
push
adc
fimuls
push
mov
movzbl
sbb
fnstenv
or
call
clc
insl
mov
cmp
mov
cltd
pop
push
push
add
add
cltd
ss
ljmp
sub
fisttpll
push
in
dec
mov
in
dec
inc
cmp
add
add
subl
mulb
ret
mov
xchg
idivb
sub
push
lea
sbb
loop
adc
in
xchg
mov
adc
jecxz
xchg
xchg
cmp
test
ret
ret
mov
or
loop
std
into
outsl
push
int
push
gs
lret
fwait
pop
shl
testb
imul
fadds
shll
pop
mov
out
loope
mov
jecxz
pop
adc
xlat
pminub
pop
std
repnz
adc
stc
enter
xor
std
mov
xchg
pop
xchg
xchg
insb
sbb
dec
loopne
sbb
scas
pop
fisubrl
int
mov
add
out
push
ret
cmp
testl
sub
dec
push
push
push
out
lcall
sub
pop
iret
xchg
dec
loopne
push
push
pop
xchg
jmp
xor
ds
repnz
mov
ja
mov
arpl
push
ret
icebp
mov
sub
xchg
sarb
imul
mov
mov
cld
in
adc
inc
rcl
jnp
and
enter
hlt
fsubp
adc
jmp
add
dec
sti
jl
fucomp
leave
lret
and
insl
add
cmpsl
adc
xchg
out
mov
out
dec
scas
pop
lcall
adc
mov
fildl
and
jns
xchg
push
jbe
jge
movsb
pop
ret
negb
pop
jp
jmp
test
inc
mov
gs
dec
pushf
pusha
dec
hlt
sub
or
unpcklps
mov
int
jnp
sub
cmp
xchg
repz
xor
mov
fwait
add
addr16
cmp
xchg
dec
adc
test
leave
push
stos
push
outsb
sbb
push
ja
cli
dec
push
shll
loop
sub
pop
mov
jge
je
and
testb
or
and
push
pop
bound
xorb
test
mov
inc
and
stc
stc
inc
xor
mov
imulb
cltd
mov
out
ret
scas
jge
inc
aad
pop
xchg
mov
pop
mov
pop
addr16
xor
das
imul
and
test
sub
std
subb
popa
popf
in
std
gs
test
lahf
mov
jb
adc
mov
insl
adc
arpl
fildl
out
inc
repnz
mov
adc
sub
xchg
mov
xor
and
ret
in
icebp
sahf
lahf
popa
sbbl
hlt
sbb
call
inc
adc
push
sbb
inc
outsb
pop
adcb
fldt
fidivl
sbb
add
lods
mov
or
stos
pop
mov
jno
ja
js
push
in
in
shll
mov
cwtl
test
mov
sbb
mov
cmp
jno
xor
mov
push
mov
jg
cwtl
movsb
add
or
pusha
cmp
sbb
scas
pop
outsl
cmc
adc
fs
cmpsl
dec
cmp
loopne
in
shlb
test
cmc
insl
pop
inc
stos
mov
sub
fs
and
dec
pop
pop
shl
lods
pop
leave
call
aam
sbb
mov
push
jno
into
xchg
ret
sub
dec
cmp
clc
in
lock
xchg
flds
ror
inc
test
lret
out
repnz
notb
stos
insl
ret
cmp
sub
sub
hlt
inc
jo
int3
dec
add
pusha
inc
inc
pushf
mull
jecxz
cwtl
dec
int
subl
fisttpl
jp
daa
daa
xchg
std
popf
pop
mov
or
push
scas
sbb
xor
scas
in
sahf
shrb
xor
push
push
cld
mov
loop
xorl
cmp
loope
mov
jno
ficoml
mov
aad
push
dec
pusha
test
push
jge
dec
xchg
or
sbb
fisttpl
gs
inc
inc
inc
or
insb
mov
lock
and
and
mov
js
mov
mov
mov
fisttpll
and
test
pop
cld
movb
out
movsl
dec
xchg
shlb
pop
dec
fsubrl
cltd
lret
addl
jg
enter
mov
mov
mov
stc
add
mov
pop
cmp
jmp
mov
jnp
das
insl
push
enter
shrb
push
cmpsb
jecxz
sbb
rclb
out
jge
xchg
fldcw
push
sub
pop
movsb
inc
movl
mov
mov
negb
das
scas
mov
jp
mov
ljmp
inc
scas
mov
push
fidivrl
rol
dec
cmpl
mov
rorl
lods
cmc
mov
fdivrl
ret
add
mov
insl
inc
in
pop
xchg
rcll
cmp
leave
cwtl
sbb
or
gs
sbb
hlt
add
lea
je
sbb
push
xor
mov
cld
sti
int3
xchg
leave
xchg
jmp
imul
lods
inc
mov
mov
sbb
cltd
je
lods
mov
adc
fwait
lock
sbb
pop
sbb
pusha
xchg
cmp
nop
dec
push
inc
sub
aas
or
or
mov
xlat
jno
lcall
gs
jbe
jle
test
pop
jae
and
scas
mov
stc
sub
sub
sbb
or
push
mov
and
inc
in
das
aad
sub
pop
pop
filds
jne
or
ds
test
pop
test
sub
test
test
daa
jne
mov
jno
push
add
cmp
shll
adc
test
aaa
arpl
test
bound
jns
mov
jno
jg
cmp
in
bound
popa
ljmp
sbb
cli
loopne
cmp
repnz
xlat
inc
xchg
jmp
fildll
push
pop
int
sub
pushf
push
sar
iret
xchg
jae
movsb
xchg
pop
into
repnz
je
pop
inc
jl
mov
cmpsl
out
push
neg
int3
cli
push
jecxz
pop
or
cltd
rcll
movsb
fnstsw
jecxz
daa
sbb
data16
imul
push
mov
jne
in
mov
test
repz
fistps
push
shr
ja
loope
xor
clc
fildll
popa
push
xchg
cmc
pop
pop
cmp
dec
push
xchg
lods
jb
imul
jl
outsl
lods
jnp
mov
xlat
gs
xor
icebp
sbb
or
in
fmulp
popa
xchg
adc
shlb
ds
orl
push
and
sbb
pop
adc
das
xor
add
inc
aad
add
int
outsb
xchg
test
or
and
enter
pop
cmp
jne
cmp
jp
xchg
or
cmp
test
int3
push
nop
jnp
inc
outsb
or
pop
push
mov
out
cmp
stc
hlt
lea
mov
imull
lcall
push
ret
test
test
les
ljmp
dec
popf
fldenv
and
into
call
sbb
nop
push
fstpt
div
cwtl
daa
mov
push
lcall
cmp
push
out
fsubl
cmp
addr16
inc
sti
es
mov
in
xchg
imul
negl
push
int3
mov
xchg
dec
jns
and
stc
cli
mov
jle
rcl
icebp
pop
arpl
xchg
push
test
xchg
movsb
outsl
fldlg2
fistpll
std
pop
movsb
leave
idiv
adc
or
ret
inc
jge
lea
xchg
ret
jns
shlb
push
rcrl
sbb
orl
mov
sbb
sbb
enter
outsl
xchg
xor
and
repz
pmaxsw
sbb
sub
xchg
test
aaa
sbb
nop
xlat
push
das
add
mov
cmp
inc
cwtl
ret
outsl
jno
es
xorl
xchg
cmp
jmp
mov
outsl
into
cmp
mov
ret
jmp
out
xchg
sub
add
cmp
jmp
hlt
or
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
lcall
fcmove
mov
bound
dec
jae
imul
mov
adc
imul
lock
scas
dec
lret
mov
bound
dec
lret
mov
bound
inc
lret
or
arpl
cmp
mov
cmpsb
adc
popf
ret
jbe
and
sbb
cld
test
std
es
xchg
int
mov
cmp
shll
jp
testb
sub
adc
int
jno
imull
mov
ret
jp
cmp
enter
fadd
loope
add
test
fwait
xchg
inc
lea
xor
sbb
arpl
push
push
xchg
push
jmp
mov
test
cli
mov
fsubl
stos
cmp
test
xor
arpl
call
jecxz
decl
lret
mov
ret
lods
adc
imul
icebp
call
push
insl
cmp
jge
mov
jecxz
scas
pop
jbe
imul
lock
scas
dec
mov
bound
lret
mov
bound
dec
lret
jmp
bound
dec
lret
mov
bound
dec
fstpt
bound
dec
lret
mov
bound
dec
mov
xor
mov
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
fs
shll
call
mov
bound
or
in
es
shll
ret
adc
sbb
shll
adcl
cmp
out
scas
dec
lret
mov
bound
dec
sub
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
bound
dec
lret
mov
pop
call
test
mov
xor
fwait
push
pop
sar
jne
call
sti
jl
add
bound
mov
jns
or
call
mov
push
js
fs
mov
mov
push
xor
arpl
mov
roll
call
dec
rep
bound
dec
jg
pop
push
or
xchg
out
jnp
mov
data16
inc
jo
inc
xchg
scas
push
scas
jmp
adc
inc
in
jnp
adc
xchg
arpl
push
sub
ret
xchg
fcmovne
jecxz
xor
test
sbb
fs
and
sub
pop
xor
das
cwtl
mov
icebp
ja
notl
sub
or
mov
mov
push
fs
outsl
xchg
mov
sti
dec
iret
xor
push
repnz
cli
daa
pushf
popa
mov
fimull
fcmove
mov
pop
inc
jbe
popa
push
or
inc
mov
mov
inc
push
push
mov
out
xchg
sub
mov
lahf
pop
lcall
push
xchg
sbb
outsw
imul
adcb
fidivrs
push
pop
sti
xor
js
in
jnp
sti
mov
sbb
popf
ja
lock
out
fstpt
shr
push
mov
or
mov
mov
jp
jnp
movsl
in
insb
arpl
jle
and
daa
pop
in
mov
in
fcmovu
in
pushf
xchg
adc
xor
xchg
pop
sar
pop
idivl
dec
mov
aaa
loope
fidivl
aad
test
dec
mov
out
test
sbb
aaa
in
pop
fdivs
out
outsl
outsb
imul
cmp
outsl
add
cwtl
test
adc
jg
jae
mov
hlt
lea
and
jecxz
jecxz
test
push
sti
pusha
cmc
in
daa
mov
neg
add
inc
xlat
inc
ja
inc
lcall
lretw
add
movsb
or
mov
push
or
mov
pushf
loope
pop
ljmp
mov
outsl
mov
dec
dec
push
jge
dec
add
dec
and
xchg
xchg
or
jle
cs
sti
shll
in
xor
mov
out
leave
into
xchg
int3
imul
sar
push
pop
rorb
ja
inc
xchg
xor
fiaddl
mov
sbb
xchg
imul
lods
pop
cmp
ret
ss
add
imul
jg
subl
pop
xchg
pop
cmpsb
mov
mov
mov
jbe
ret
dec
fucomi
mov
mov
cli
and
pop
clc
gs
pop
mov
cmpsl
mov
xlat
das
inc
ja
negl
push
mov
add
mov
pop
loopne
ljmp
fdivrs
gs
test
fidivrl
je
lea
mov
inc
std
inc
push
mov
mov
jecxz
sti
inc
lret
cmp
aad
and
mov
pop
xchg
test
mov
xchg
leave
jmp
xchg
in
mov
out
pop
in
sub
pop
jmp
cli
pop
jl
ss
out
jo
inc
pushf
lcall
lret
mov
inc
jno
add
addl
pavgb
movsb
test
mov
mov
divl
sub
fisttps
test
lcall
xor
lods
add
fsubl
mov
add
inc
shll
mov
push
and
add
mov
cmp
pop
jb
push
xor
ror
int3
lahf
jmp
fs
mov
mov
or
mov
mov
adcl
lods
cmp
rcll
lret
xchg
shll
scas
jl
jnp
scas
sub
mov
arpl
xor
mov
inc
ljmp
inc
cmp
std
in
adc
lcall
add
outsb
mov
cli
mov
les
mov
iret
cmpsb
rcr
jno
in
cltd
sbb
les
jne
mov
push
ss
stos
int3
cmp
inc
rclb
mov
lds
push
jno
pushf
int
bound
cwtl
lods
out
into
stos
jp
and
push
movsb
mov
inc
add
push
xchg
push
mov
aaa
gs
push
out
fucomip
mov
lock
mov
fisttpl
out
xlat
sahf
sub
sub
mov
push
lods
or
shll
add
ret
mov
jmp
lret
and
fucomp
aas
leave
xor
pop
pop
les
clc
push
and
int3
adc
inc
add
mov
subb
and
and
or
sub
arpl
jmp
mov
jbe
cmpsb
cmp
add
xchg
push
in
aad
or
mov
xor
xlat
add
push
in
aam
fdivl
das
cmp
mov
and
movsl
ret
add
xorb
xchg
mov
mov
push
push
pop
cmc
loop
jae
xchg
jmp
and
push
stos
inc
out
mov
jl
ret
imulb
mov
inc
mov
cltd
mov
xchg
jb
lods
fisubl
adc
mov
es
sbb
adc
lcall
dec
adc
and
mul
push
imul
rcrb
pop
pop
sub
lahf
adc
fs
in
sarl
and
lods
hlt
mov
lcall
sbbb
push
mov
mov
daa
fs
mov
in
lods
cld
inc
push
decb
or
insb
jp
mov
ds
lret
push
lods
out
add
dec
jae
mov
mov
mov
xor
movsb
xor
lcall
fnstsw
imul
sub
jnp
movsb
imul
insl
or
jecxz
cmp
xchg
aad
jnp
into
jp
xchg
fistpl
push
sbb
es
xchg
xchg
outsb
out
and
push
aam
add
add
loop
test
jp
lret
jecxz
subl
js
add
mov
pop
out
mov
inc
test
inc
lock
int3
adc
in
pop
stos
push
test
xlat
inc
lock
iret
div
jg
mov
mov
loope
jge
mov
jae
add
jae
adc
push
jns
inc
inc
popf
mov
dec
cmpsl
cmp
pop
pop
fwait
loopne
adc
inc
repz
dec
incb
jp
bound
fucomp
outsl
mov
dec
cmpsb
mov
outsb
adc
adc
insl
or
or
pop
jae
idivl
xor
rorl
shrb
fnstenv
cmpsb
push
movsb
enter
push
lcall
test
int
add
jnp
in
push
adc
fsubs
movl
inc
sbb
fstpt
ret
test
jo
xchg
ljmp
lods
sbb
nop
inc
push
pop
sbb
jmp
xchg
sahf
orb
subb
push
mov
sbb
mov
popa
mov
sarb
or
fistpll
xor
fcomps
test
lcall
bound
stos
jno
es
js
arpl
pop
mov
cmp
and
loop
cmp
icebp
adc
outsl
jl
in
adc
or
aam
inc
loopne
sahf
aas
scas
dec
cli
ss
rcll
add
mov
fiaddl
lea
xor
inc
movsb
xor
xchg
mov
mov
adc
imul
dec
inc
and
test
add
pop
aam
out
sub
adc
popl
jns
fcmovne
fistpll
jmp
xor
fwait
repz
dec
dec
mov
lods
les
and
js
push
xor
lret
mov
jmpw
and
cmpsb
jae
outsl
or
je
jne
sub
leave
icebp
mov
daa
das
std
or
dec
cmp
sbb
test
ljmp
out
testb
pop
xchg
push
dec
xchg
outsl
jbe
into
ficoml
leave
pop
inc
cmpl
aas
outsl
icebp
and
sub
pop
lds
or
mov
lahf
add
mov
push
js
pop
add
cmp
lahf
aam
mov
jge
sub
outsl
ret
and
inc
xchg
add
lock
xchg
push
fstpl
and
lret
sti
and
sahf
adc
push
add
mov
jg
pop
pop
rcl
mov
add
aas
dec
loop
les
mov
lds
cld
lods
hlt
out
out
negb
jp
andb
cmc
les
lea
xchg
arpl
int3
jle
fidivl
repz
mov
jl
clc
sahf
rcll
dec
xchg
jo
cmp
loopne
dec
jp
sub
lret
push
adc
xchg
fcomi
inc
jg
mov
int3
jge
sub
dec
mov
inc
adc
jne
adc
pop
testl
rcrb
lods
push
pop
xchg
jbe
inc
jmp
dec
jbe
push
frstor
addr16
test
nop
pop
pop
insb
jg
push
mov
rorl
pop
push
les
add
xchg
mov
dec
pusha
lret
into
mov
popf
jo
in
incb
std
negl
aaa
pop
sbb
adc
test
push
loopne
push
icebp
loop
cmpsb
cli
cmp
rorl
fsubl
jp
push
mov
lock
das
lods
enter
dec
outsb
cmp
jo
inc
mov
lea
xor
lds
adc
and
mov
lea
inc
in
cmp
stc
cmp
xor
enter
mov
dec
push
jmp
push
xchg
and
cmpsl
ss
lds
mov
adc
or
xchg
out
repnz
or
pop
repnz
div
mov
sbb
push
dec
xchg
dec
mov
cwtl
in
mov
sbb
in
add
push
xorl
inc
sbb
mov
pop
inc
mull
jno
sbb
jns
xor
sbbb
xchg
outsl
push
scas
add
and
imul
nop
jns
jecxz
jo
fcmove
dec
mov
insb
arpl
out
cmp
or
mov
push
ljmp
and
mov
mov
push
stos
push
push
add
sub
std
jge
jns
repz
loop
cmp
shrb
and
xchg
mov
pushf
push
push
xchg
out
int
xchg
lahf
or
push
sub
xlat
sti
push
out
push
pushf
inc
xchg
push
adc
enter
out
syscall
aad
xorb
loop
cmp
inc
mov
orl
test
mov
mov
adcb
dec
aam
fidivs
insb
inc
cs
out
fstpl
stc
add
or
icebp
sub
mov
test
cli
popf
popa
add
xchg
lea
xor
mov
sub
or
xchg
inc
cmp
or
cwtl
lret
add
sbb
ja
push
loop
loopne
mov
neg
mov
add
inc
add
int3
push
mov
dec
outsb
adc
mov
bound
sbb
and
sbb
and
outsb
sti
pusha
fdivl
sbb
fisubrl
inc
dec
ss
xor
push
out
mov
test
lret
cmp
xor
cld
pop
push
lret
repnz
mov
mov
inc
daa
test
hlt
sub
std
pop
mov
clc
sub
adc
dec
aad
lds
hlt
xchg
fmull
inc
mov
jmp
add
add
rsqrtps
scas
mov
les
jg
mov
mov
mov
mov
cmc
filds
ljmp
loopne
push
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
