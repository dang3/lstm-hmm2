sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
call
lea
push
push
call
test
je
push
push
push
call
mov
lea
push
lea
push
call
test
je
push
push
call
mov
add
mov
push
push
mov
push
call
push
push
mov
push
call
movb
call
mov
movb
movzwl
cmp
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
call
movb
mov
add
mov
mov
movl
mov
push
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
mov
push
call
push
dec
push
fsubs
sub
pusha
mov
push
or
les
xchg
jae
dec
and
lds
out
or
sarb
call
aas
lods
mov
sub
and
mov
inc
loopne
js
xor
sbb
sub
xchg
sbb
push
shr
push
iret
dec
out
lods
daa
divb
jbe
iret
dec
cmpsb
add
out
ja
xchg
stos
imul
imul
into
fs
cmp
incb
push
jmp
xor
jno
enter
arpl
mov
push
ljmp
pop
add
das
icebp
xchg
lods
jl
ja
adcl
cmp
ror
xchg
jnp
and
cld
out
loope
dec
push
sbb
loop
jg
xor
lret
jae
test
cmp
divl
repnz
inc
dec
inc
push
inc
cmpsl
push
push
cwtl
jp
scas
sub
pushw
mov
fcmove
movsb
test
nop
pop
mov
hlt
das
test
push
fnstsw
lret
push
lcall
or
pop
iret
enter
inc
mov
xchg
aas
xor
inc
out
movsl
jne
sub
es
js
add
adc
cmp
call
and
sub
xchg
mov
out
test
roll
pop
loopne
sbbb
into
push
icebp
mull
and
jg
mov
fisttpll
lock
mov
jno
push
cmp
sbb
sarl
insl
pop
push
lds
sbb
sbb
dec
xchg
cmp
ds
aas
xchg
add
mov
ret
jl
pop
pop
cld
mov
sbb
jmp
flds
inc
mov
leave
sub
popf
jge
mov
sub
jns
out
xchg
adc
xchg
xor
mov
aam
mov
adc
xchg
enter
ljmp
pop
repnz
inc
dec
or
fiaddl
xorl
popf
mov
je
mov
mov
test
notl
xchg
mov
or
out
mov
dec
test
dec
mov
into
mov
scas
stos
xor
sahf
mov
and
adc
sbb
stos
adc
jl
mov
js
mov
push
xor
push
xor
add
bound
push
ja
mov
mov
cmc
dec
sub
or
and
fldcw
or
mov
ret
dec
stos
leave
pop
jmp
sarl
inc
cltd
pop
loop
xor
cwtl
and
ss
inc
testl
fsts
mov
dec
pop
mov
mov
addr16
ja
lcall
fistl
adc
fdivl
and
movb
dec
cmpsb
andl
pop
cmp
push
mov
mov
ja
repz
sub
jl
cmpsb
sbb
inc
mov
sub
shrb
mov
in
mov
xor
lcall
iret
js
push
in
cmpsl
and
add
repnz
dec
lds
xchg
adc
pop
lock
les
push
ffreep
clc
xchg
lret
sub
xchg
mov
pop
sarb
dec
pop
mov
addl
add
mov
adc
shlb
scas
jbe
test
call
rorb
orl
sbb
imul
mov
mov
enter
icebp
mov
shrb
push
xchg
dec
xchg
jnp
sub
xlat
stc
push
es
in
jecxz
fimull
or
xchg
nop
mov
cmp
mov
xchg
out
dec
dec
clc
add
inc
and
mov
push
stos
mov
gs
mov
popa
shlb
jbe
mov
jmp
in
push
sarl
adc
fs
xchg
cmp
scas
in
std
test
push
jecxz
cmp
xlat
pusha
stos
test
out
dec
jb
notb
mov
mov
or
hlt
loopne
out
test
add
roll
mov
cmpsb
enter
call
rcrl
jns
int
jle
jo
xchg
xchg
shll
push
negb
adc
adc
xchg
sub
jnp
sbb
push
lods
call
sbb
enter
lods
xlat
fidivs
lods
push
inc
mov
mov
xchg
and
xor
jecxz
and
in
fsubr
mov
call
ret
rolb
arpl
mov
mov
mov
test
rep
adc
test
aam
mov
stos
xlat
xchg
out
int
stos
cmp
push
jo
xchg
jae
jecxz
mov
rcr
popl
stc
aad
ret
jl
jne
test
bound
or
dec
inc
aam
mov
xor
ljmp
dec
gs
std
fstpt
addr16
fnstsw
or
mov
in
jmp
or
mov
dec
jl,pt
xor
push
stos
divb
lods
and
jno
adc
xchg
jg
cmp
lock
xchg
das
int
add
mov
icebp
ss
mov
lds
push
adc
push
bound
in
pop
jo
fwait
jo
int
and
cmp
jp
out
or
xor
cmp
pop
gs
outsl
movsl
dec
in
ror
and
mov
imul
jp
dec
fbld
add
sbb
xor
movb
cwtl
mov
mov
repnz
call
jnp
enter
imull
iret
push
pop
imul
out
mov
push
ds
outsb
in
xor
push
hlt
sbb
inc
sbb
mov
add
insb
hlt
std
daa
pop
aam
fadd
test
outsl
in
loop
or
and
mov
jns
repz
inc
or
mov
pop
loopne
and
mov
data16
lock
ret
repnz
mov
adc
arpl
dec
rclb
xchg
jecxz
inc
in
mov
pop
movsl
cmp
cltd
jecxz
in
test
test
push
dec
js
pusha
inc
lret
jecxz
mov
jne
and
xchg
fidivl
into
jge
mov
fnsave
enter
sub
mov
rcrb
inc
mov
das
xor
add
jb
push
test
cmp
push
insb
cmp
cmp
test
jne
aam
lret
xchg
cltd
or
movsb
push
outsb
test
stc
pop
out
mov
shlb
fcomp
in
fdivrs
or
adc
sti
jo
ds
lock
xor
in
in
sbb
pop
inc
sbb
dec
mov
fldcw
mov
rcr
sub
mov
sahf
or
nop
xorl
xchg
fwait
lcall
sub
je
or
add
testb
sub
mov
daa
or
mov
cmp
out
mov
mov
int
sti
mov
popa
movsb
stos
rclb
in
leave
scas
stos
loopne
mov
cltd
jno,pn
sbb
adc
or
or
or
test
push
lods
mov
sbb
dec
lock
inc
jae
outsb
outsl
das
push
pop
sub
push
loopne
fidivrs
popa
cmp
leave
cmpsl
adc
ret
pop
adc
mov
cmp
pop
sbb
jns
popa
stc
and
int
pop
mov
negl
push
cld
cmc
mov
dec
add
orl
cmp
mov
lahf
push
mov
ja
adc
sbb
subl
idivl
cmp
mov
pop
xchg
rcl
or
sbb
xor
sub
sbb
mov
sub
clc
int3
imul
sbb
xor
pop
pop
mov
fnstenv
daa
dec
insl
mull
ja
add
inc
inc
pop
ss
imul
sub
xchg
xchg
lret
rorl
push
push
iret
sbb
fs
stos
popa
mov
inc
int3
outsb
in
scas
pop
in
lcall
outsl
out
lahf
sahf
ret
fidivrs
lfs
ret
xor
and
mov
jo
mov
cmp
mov
jnp
in
or
jle
sbb
push
nop
int3
movsb
xor
inc
icebp
inc
mov
lods
xchg
test
leave
addr16
leave
movsb
ljmp
pushf
xlat
push
push
mov
sbb
sbbl
scas
fsubrl
sub
les
sarl
out
dec
xchg
ja
mov
pop
push
jns
jb
mov
mov
dec
pop
out
cltd
loope
jns
fistps
push
sub
and
xchg
je
in
out
push
jmp
std
jo
jp
rcr
push
or
out
xchg
mov
stos
cld
fstps
sti
imul
fldcw
js
jge
sahf
mov
psubsb
and
xchg
or
mov
or
or
mov
pusha
test
test
push
lds
dec
outsl
and
mov
and
iret
hlt
lcall
out
or
mov
imul
push
push
push
pop
jno
xchg
test
test
sahf
test
jl
lahf
push
dec
sub
xor
and
aam
push
pop
int3
push
movsl
scas
sub
mov
inc
lods
stos
stc
popf
mov
out
idivl
int
ror
xor
xchg
stc
mov
leave
push
fistpl
call
test
jbe
push
adc
test
adc
mov
sti
pop
popa
test
pop
les
mov
xor
mov
xor
repnz
pop
mov
jge
and
rclb
mov
mov
sar
inc
popf
or
repnz
outsb
stos
fisubl
inc
pop
ljmp
icebp
enter
sbb
mov
mov
inc
ret
push
dec
pop
clc
add
lea
xchg
mov
lahf
xchg
and
xchg
mov
loop
cmp
mov
jl
push
icebp
xchg
lahf
xchg
jle
call
push
inc
clc
dec
inc
jo
mov
in
push
push
add
stos
push
lahf
inc
inc
inc
je
cmp
push
stos
jl
or
in
pop
adc
ja
cmp
cmp
cmp
mov
or
scas
cmpsb
out
ljmp
dec
jp
call
lods
lea
mov
pop
push
mov
cld
lds
cltd
add
loopne
imul
xchg
cmp
mov
fcoml
jb
out
arpl
xchg
out
and
dec
cmpsb
mov
dec
add
out
xor
mov
adc
mov
fdivl
test
pop
jb
mov
ja
data16
xchg
insl
fcmovb
pop
push
and
mov
sbb
loope
push
jae
popf
iret
cld
ret
push
jb
repz
test
adc
inc
mov
adc
xchg
sbb
xorb
mov
adc
and
or
les
cmp
ja
pop
loope
out
pusha
and
std
gs
and
out
push
int3
iret
sbb
inc
test
iret
xchg
outsl
lret
rolb
subl
xchg
xor
je
iret
test
in
jo
adc
add
push
lods
out
sub
xchg
and
adc
fldt
sub
and
sbb
sbbl
imul
mov
pop
lock
pop
push
pop
xchg
rcrb
iret
xchg
push
sbb
jae
inc
mov
fucomp
mov
cwtl
dec
adc
fldenv
bound
add
mov
loop
fld
nop
cmc
pusha
sub
icebp
and
push
les
out
xchg
rcll
scas
inc
popa
mov
cmp
jmp
sbb
insb
jecxz
add
dec
aam
mov
adc
adc
test
cmpsb
pop
mov
jg
adc
stos
adc
lock
mov
pop
cld
arpl
sti
out
out
cli
std
ret
insl
push
sub
lcall
pusha
cmpsl
add
aad
sbb
mov
in
icebp
jnp
sbb
inc
mov
loop
movsb
cs
fs
mov
aaa
add
lret
lods
aam
pop
mov
call
dec
in
xorl
xchg
jle
shl
aad
out
sbb
stos
add
mov
jo
in
push
mov
movl
lahf
mov
enter
ljmp
sub
cs
movsb
mov
enter
clc
push
fstps
gs
loopne
fcoms
sbb
insl
pop
push
mov
popf
xor
xlat
jg
sbb
dec
cld
shlb
andb
push
jmp
idivb
adcl
sarb
inc
lock
xor
inc
mov
lcall
lds
out
cmp
sbb
shld
dec
fwait
pop
ljmp
lret
ret
fwait
cmpsb
lods
jno
xchg
dec
dec
mov
xor
and
mov
aad
xchg
test
lahf
ljmp
out
mov
ja
in
mov
in
and
lcall
sti
or
jno
popa
jne
cmp
lods
or
adc
mov
dec
pop
pushf
adc
add
arpl
cmp
bound
scas
mov
hlt
jb
fisttpll
push
push
insb
pop
xchg
mov
sub
imul
scas
cmp
gs
jne
mov
mov
testl
call
fiaddl
mov
or
fistps
push
jmp
inc
adc
dec
jmp
sub
pop
loope
jle
rolb
cmp
pop
lret
mov
daa
aas
insb
pop
popa
mov
sbb
mov
jne
scas
and
mov
outsb
dec
jp
dec
dec
nop
xchg
dec
lock
shlb
xchg
mov
stos
xchg
in
fcmovb
idiv
jns
dec
pop
lret
cmpsl
mov
sub
in
jmp
cmpsb
add
adc
jmp
test
test
jl
mov
jnp
imul
loop
insl
inc
xchg
ds
popa
mov
xor
jmp
xor
pop
sbb
aam
shlb
bndldx
mov
scas
addr16
dec
std
out
xchg
mov
mov
mov
jae
adc
orl
lret
into
outsl
inc
imull
das
add
dec
popf
into
adc
mov
mov
shll
dec
push
andb
add
cmp
xor
mov
into
adc
aad
addr16
sub
add
das
cmc
mov
fwait
sbb
and
cs
pushf
aad
iret
adcl
mov
cmp
inc
pop
mov
adc
mov
int
aam
or
sub
jns
roll
aaa
out
in
sbb
inc
test
mov
call
scas
mov
dec
popa
mov
mov
mov
adc
repz
cmpsl
pop
or
and
stc
jmp
mov
mov
or
inc
bound
push
int3
sbb
int
mov
push
hlt
dec
cmc
rcrl
pop
push
pop
out
dec
pop
push
nop
iret
xor
lret
xor
ds
sbb
sub
rclb
sbb
arpl
shr
popa
notl
rclb
pop
mov
inc
fcomps
push
mov
mov
dec
jne
outsb
stos
out
imul
fwait
sbb
push
sub
cmp
outsl
and
jbe
int
stos
dec
and
mov
orl
xchg
std
push
out
pop
fucom
fstpt
jl
addr16
push
add
inc
out
movsl
outsb
movsl
mov
push
rcrb
push
neg
or
push
inc
data16
int3
daa
xchg
jae
jmp
ljmp
cmp
cs
sub
loope
xor
cli
sub
mov
jne
adc
xlat
push
mov
sbb
aas
fnop
jle
lret
add
fstps
outsl
lds
imul
bound
popf
push
faddl
out
rcrb
stos
inc
fcomps
test
insl
inc
in
add
jbe
and
push
xchg
mov
sbb
gs
mov
push
cmp
xor
cmpsb
dec
fstl
mov
aaa
aad
fistpll
cs
shr
ljmp
iret
popf
and
call
fldl
cld
inc
jle
loopne
adc
pop
insb
push
cmp
cmp
cli
decb
mov
stos
test
das
or
scas
mov
xor
xor
clc
sti
dec
pop
dec
sub
arpl
out
inc
imul
xchg
shll
jle
pop
push
inc
and
out
gs
sbb
ret
sahf
and
jo
adc
lea
or
in
adc
dec
inc
ljmp
push
mov
adcb
pop
adc
lds
cmp
pop
jmp
xor
lds
stos
scas
cli
repz
push
jb
pop
in
shrl
das
push
pop
aad
xchg
cmpsl
cmpsb
inc
push
int
push
mov
and
jne
push
out
ficomps
xor
out
loope
sbb
mov
xorb
push
sbb
xor
inc
pop
sub
adc
jp
test
push
shrl
addr16
inc
mov
movsb
cltd
mov
mov
gs
outsb
push
dec
lret
or
pop
push
mov
lods
cmpl
xchg
into
add
mov
pusha
fcoms
inc
out
mov
cmp
popf
push
popf
and
scas
jp
shr
xchg
or
testb
int3
imul
mov
sarl
push
aas
pusha
stos
insb
dec
mov
fcmovnu
loope
pop
push
pop
mov
pop
cwtl
lods
xor
nop
and
cli
xchg
cmp
scas
push
jl
jge
add
cmp
xor
adc
leave
cmp
lea
mov
mov
adc
dec
push
push
cmpsb
mulb
xchg
or
ja
jle
cmp
and
sbb
ficompl
jb
lds
cmpsb
cmp
or
lods
sti
in
mov
add
ja
mov
ret
jb
inc
and
hlt
xchg
sub
rcrb
sti
dec
movsb
in
mov
loope
fwait
pop
fucomi
arpl
mov
movsb
xchg
call
outsl
lea
es
ret
xor
inc
adc
inc
test
xor
fdivr
je
push
pop
and
push
mov
in
add
push
mov
add
push
insl
sub
add
inc
lret
jge
fs
sub
cltd
cs
sbb
jle
mov
lahf
test
sbb
aad
repnz
nop
fwait
cmp
aad
adc
mov
push
cmpsl
repz
push
push
adc
lea
xchg
stc
cmp
adc
cs
shll
popa
stos
xchg
cmpsb
xor
sub
adc
pop
clc
js
jmp
lahf
cmp
cmp
pushf
push
cmp
cmp
call
ret
repnz
add
pop
mov
mov
push
jbe
inc
outsb
cli
pop
out
outsb
repz
push
xchg
lcall
cmp
clc
jg
push
adc
dec
lahf
mov
sbb
and
pop
iret
and
pop
jae
int
xchg
jl
mov
add
sub
lcall
inc
mov
icebp
sbb
daa
adc
jl
xor
jno,pt
repz
into
icebp
pop
and
mov
in
ret
in
mov
mov
pushf
sbb
cmp
mov
adc
sbb
pop
add
sbb
pop
mov
aaa
lods
nop
or
cmp
shl
jne
xchg
xchg
mov
xchg
stc
mov
pop
hlt
rcrb
cld
mov
arpl
mov
pop
adc
mov
xchg
mov
es
sub
lods
mov
je
mov
je
shlb
shlb
mov
pop
adc
test
push
mov
mov
jle
scas
sbb
inc
jp
jns
add
xor
xor
repnz
push
cmp
sbb
mov
idiv
push
cmp
pop
rcl
xor
jno
mov
bnd
push
mov
sbb
ljmp
lds
mov
mov
movsl
add
cmp
andb
in
adc
cmp
ret
leave
shl
sbb
push
scas
sarl
cltd
addr16
shll
sbbb
ret
add
movsb
lret
cmp
pop
mov
mov
dec
inc
jmp
mov
popf
insb
std
pop
or
repnz
add
mov
jmp
xchg
xchg
fdiv
fdivr
mov
test
adcl
icebp
or
out
inc
lahf
xor
cmp
les
pop
pop
imul
and
test
jne
xor
xchg
lods
rcll
cli
stc
push
in
filds
popa
out
mov
jl
adc
ja
inc
mov
fdivrs
aaa
pop
pop
push
popf
jl
xchg
mov
xor
push
xor
into
insl
push
mov
sub
int
mov
lods
pop
das
fldl
dec
jns
in
loopne
jecxz
or
gs
in
lock
xor
xor
fs
pushw
rcrl
jns
lds
aaa
inc
daa
into
cmc
or
shlb
je
bound
xchg
xchg
fimuls
js
xchg
jae
jg
insb
outsl
stos
js
pushf
jne
inc
shlb
xor
xor
mov
ja
add
mov
mov
sub
jnp
jbe
add
xchg
mov
add
in
gs
int
xchg
adc
cmc
sbb
sub
sub
xor
call
popf
int
dec
mov
test
xchg
inc
cltd
xor
mov
xor
popf
out
scas
push
insb
fildll
icebp
add
push
push
jo
cltd
cmp
mov
or
std
push
add
scas
cli
push
gs
fcomip
insl
stos
loop
jmp
add
push
test
mov
xchg
out
mov
jmp
shrl
iret
jb
ret
and
cmc
push
mov
cmpsb
add
cmpsb
in
fsubr
in
mov
sbb
lods
jge
aam
cmp
and
adc
adc
dec
in
std
cwtl
jg
repnz
mov
movsl
add
jno
and
jne
jbe
pop
and
mov
mov
inc
inc
ja
outsb
inc
inc
cmp
std
or
jle
fldl
and
clc
and
pop
arpl
jmp
pop
in
xor
xor
jns
jno
sahf
xor
ja
test
jno
fcomp
icebp
and
popf
jecxz
test
jo
mov
cld
lods
data16
sub
mov
adc
insl
jmp
lahf
repz
lretw
lcall
or
xor
jbe
cmp
scas
aam
es
sbb
jns
sarl
jp
aad
shrl
mov
cmp
insb
subl
jmp
lods
fiadds
cld
stos
mov
addr16
mov
shll
xchg
adc
ss
andb
movsl
dec
gs
adc
hlt
xchg
daa
cmp
lock
out
icebp
dec
jae
mov
jns
cmp
lahf
push
sbb
sub
and
rcl
dec
xchg
add
jle
dec
cltd
rcrl
mov
call
pop
lock
sub
hlt
mov
jns
mov
and
mov
cwtl
or
push
insl
xor
or
int
insl
jno
stc
mov
cmp
push
mov
lret
mov
mulb
jl
gs
cmp
dec
pushl
sbb
mov
out
inc
rcll
cltd
mov
or
loopne
stos
push
lds
negl
jge
dec
dec
inc
xchg
data16
add
or
inc
xor
out
stos
arpl
lahf
lcall
ss
into
jnp
out
xchg
pop
or
stos
dec
aas
insb
mov
pop
ret
shlb
sti
movsl
insl
jmp
fisttpl
pop
scas
jl
sbb
cmp
or
jae
out
pop
jmp
push
popf
or
stc
ja
jns
jp
sub
fisubs
std
jge
mov
jns
adc
stos
lock
repz
push
in
xor
xchg
shl
fidivrl
cwtl
adc
aad
in
lret
mov
mov
movsb
push
cmpsl
cltd
aaa
subb
sahf
out
pop
dec
ret
mov
xor
sarl
or
dec
pop
lds
fnstsw
clc
adcb
mov
xor
adc
lods
out
sbb
cld
inc
rolb
bound
stos
jmp
and
enter
cltd
mov
adc
or
mov
cwtl
add
jmp
test
pop
lss
pop
xchg
pusha
fwait
mov
push
aad
pop
mov
jns
mov
lahf
shrl
movl
cmpsl
push
popa
ljmp
jo
shll
mov
adc
and
insb
pop
loope
outsl
jp
out
sub
xor
out
xchg
cmpsb
mov
bound
mov
pop
mulb
adc
addr16
ret
leave
push
sti
in
outsl
mov
in
inc
sub
js
mov
lea
dec
aad
outsb
ljmp
xor
mov
mov
sti
popf
shr
fwait
mov
adc
push
push
lret
xchg
sbb
cwtl
jge
or
adc
adc
andb
cmpsl
into
lods
cli
call
mov
cli
dec
aas
xorb
add
bound
dec
jns
cwtl
cmp
shll
adc
icebp
imul
enter
xor
xor
repz
and
daa
add
xchg
mov
dec
cld
push
sti
andb
sar
in
es
or
inc
dec
ds
movsb
hlt
mov
cmp
lahf
xor
mov
jl
pop
mov
xchg
pop
stc
pop
add
fwait
imul
sarb
aaa
sub
std
or
repnz
nop
in
pop
imul
gs
enter
jmp
lret
iret
repnz
add
out
or
sti
enter
outsb
mov
push
pop
repnz
fstp
inc
and
push
mov
and
cwtl
pop
xchg
insl
dec
test
cmp
mov
mov
ja
and
cltd
push
inc
cld
sbb
jns
push
es
sbb
int3
sbb
in
in
mov
icebp
mov
xor
mov
mov
xchg
dec
jns
cmp
cmpsl
les
pop
mov
sahf
xor
daa
iret
xchg
push
jns
cmc
adc
xor
lods
and
mov
dec
ja
gs
jmp
xchg
fsubrp
mov
mov
mov
das
lea
cmpsb
imul
fldcw
inc
adc
jb
mov
or
add
call
in
mov
pop
cmp
loop
lods
test
test
insl
fcoml
nop
pushl
aaa
jno
mov
mov
sbbl
mov
insb
sarb
push
add
mov
negb
sbb
inc
jg
mov
in
repnz
movsl
fcos
cltd
popa
aam
roll
shl
dec
sbb
popa
dec
sub
mov
hlt
rorl
mov
inc
shll
insb
jle
mov
movsb
inc
mov
xchg
add
lods
sahf
sti
ss
cmpsb
pop
rol
dec
popa
outsb
out
pop
cmpb
dec
sbb
pop
sub
add
imul
mov
je
adc
jmp
or
out
pop
je
xchg
jns
xchg
xchg
inc
ret
repnz
shlb
lret
push
or
sub
sti
cmpb
push
lahf
mov
cmp
jo
mov
cli
xor
lock
cmp
lea
dec
sbb
scas
add
pop
cld
mov
xorl
nop
add
aas
fstpl
cmp
cmp
and
cmp
je
cmp
fimull
push
scas
pop
into
test
inc
int
cltd
dec
push
fisubs
pushf
xchg
pop
push
inc
or
mov
mov
addl
imul
sub
xor
push
dec
add
mov
fcmovu
fnstcw
push
aam
xchg
scas
dec
aaa
das
notl
mov
aaa
jo
or
xchg
dec
inc
pop
xlat
cmpsl
jae
fnsave
cmp
push
and
sub
out
push
inc
dec
popf
movsl
fnsave
mov
add
cli
lock
mov
mov
loop
test
fld
xor
sbb
push
out
sbb
fs
jnp
jns
cmp
sub
mulb
js
mov
jle
lods
lock
xchg
adc
lahf
lret
cld
inc
or
sbb
and
mov
push
arpl
test
adc
mov
push
xor
dec
dec
imul
cmp
lret
or
int3
xchg
in
int
leave
fdivs
out
rorb
out
dec
mov
jns
sti
inc
ret
addr16
ss
dec
pop
lea
mov
push
push
sbb
jne
xor
loope
jle
clc
je
dec
test
and
add
arpl
jmp
imul
sub
outsl
mov
les
cmp
xchg
adc
push
push
or
dec
dec
pop
fs
dec
cmp
xchg
jg
jae
fs
addb
arpl
mov
test
xchg
fnstenv
or
loope
loopne
pushl
test
dec
xchg
xchg
test
pop
pushf
cli
or
sbb
lret
icebp
push
cmc
lods
xchg
add
sub
xchg
adc
mov
sahf
xchg
push
xchg
inc
rcrl
mov
lods
int
xor
lcall
lods
pop
std
dec
mov
push
push
cli
int
mov
or
repz
repz
add
jmp
cs
inc
xchg
cmpsb
stos
testl
out
rorb
mov
cmc
shrl
fstpt
xchg
mov
adc
xchg
mov
lret
mov
push
xchg
lahf
push
xchg
in
mov
sub
or
cmp
jne
movsl
sub
cmp
ror
push
pushf
lods
mov
jp
ljmp
pop
imul
jge
dec
mov
addl
mov
push
xchg
icebp
movsl
jp
ljmp
in
pop
std
or
mov
repz
dec
jo
add
out
cwtl
mov
or
mov
jp
loop
and
jecxz
add
repnz
add
jo
jge
mov
and
xchg
jmp
xchg
jno
cmp
mov
movsb
mov
xchg
push
clc
test
jp
lds
icebp
inc
out
out
push
push
xor
fs
das
icebp
dec
mov
sbb
jecxz
mov
push
lods
xlat
vunpckhps
cs
mov
insb
sub
cmp
mov
out
lcall
int
xor
pop
loopne
sub
mov
aas
pop
std
inc
sub
addl
cli
into
pop
ret
jb
cmp
and
fcomip
jo
add
loop
clc
inc
test
mov
je
mov
clc
mov
into
add
out
or
add
sbb
adc
lret
xor
sub
into
inc
nop
das
ja
mov
inc
lcall
mov
dec
mov
out
fcmove
xchg
jbe
test
mov
lods
mov
add
mov
xor
ja
jne
into
mov
push
fwait
inc
out
fsts
call
imul
cltd
imul
stos
sub
fcoml
repz
cmp
jo
mov
aas
push
xchg
mov
aam
mov
jmp
mov
aam
push
adc
repnz
ljmp
mov
inc
mov
test
fs
add
dec
and
sub
cmpb
int
add
rcl
fsubl
je
sub
mov
out
sbb
mov
shrl
adc
pop
adc
pop
pusha
mov
mulb
jae
fidivs
addr16
jne
pop
sbb
ja
cmp
mov
adc
pop
aam
push
jle
xchg
mov
pushf
mov
insl
cltd
jg
lret
adc
xlat
cmp
mov
stc
leave
adc
inc
stos
and
outsl
rcrb
xchg
jp
xor
xchg
xchg
and
fs
lret
mov
jns
inc
mov
std
test
sub
daa
mov
mov
outsl
mov
lods
call
lods
mov
popa
xor
aas
fsubrp
lea
cltd
gs
rcrb
xchg
inc
mov
fadd
cli
jecxz
mov
movsb
shrb
pop
js
mov
out
sbb
push
data16
movsb
xor
cmpsl
pushf
xchg
cwtl
jecxz
sub
out
into
lahf
push
call
mov
inc
and
xchg
xor
mov
test
jl
and
stc
insb
stos
outsb
adc
mov
cltd
inc
xorb
or
pop
adc
mov
xchg
imul
call
mov
cmpsl
pop
movsb
mov
dec
or
andl
adcl
in
lret
int
aad
mov
and
adc
jae
aaa
push
jae
pop
add
mov
cld
out
or
jecxz
arpl
add
loope
fcompl
fistpll
sub
add
and
pop
ret
call
sub
jnp
sbb
insb
out
leave
add
pusha
jbe
pop
sub
adc
xchg
dec
idivb
and
mov
sbb
jmp
mov
pushf
jbe
fdiv
push
daa
movb
cmp
enter
dec
or
stc
pop
pop
jp
push
imul
es
adc
mov
fmuls
decl
popf
jmp
inc
inc
mov
sub
aam
jecxz
xchg
les
lret
std
xchg
dec
ljmp
in
in
enter
inc
sbb
xchg
negl
fsubrl
or
roll
push
stos
and
xchg
mov
xor
pop
ffreep
dec
stos
mov
sbb
push
cmp
dec
je
cmp
dec
addr16
mov
add
cmp
jl
ljmp
push
cmp
sbb
in
bnd
in
jle
mov
adc
jae
neg
shrb
or
mov
out
cltd
jge
mov
and
mov
fstps
mov
ss
movsl
sbb
cmpsl
in
insb
xor
pushf
and
data16
mov
push
jno
loope
mov
push
scas
dec
or
shlb
rcl
xor
jle
and
jge
lds
lret
mov
mov
je
sti
cmp
jns
addr16
insl
xchg
dec
sub
in
das
xor
cmp
leave
lods
xchg
cs
mov
test
loop
lret
into
add
sub
les
loopne
xchg
pop
mov
xchg
outsl
aaa
push
jno
pop
pop
cli
sbb
icebp
pop
fldcw
or
clc
outsl
mov
dec
xlat
loope
dec
es
fsubs
loop
aam
cmp
mov
testl
test
stc
cld
xchg
les
fisttps
cli
xor
jo
rcrb
rorl
xor
push
adc
insb
mov
ljmp
dec
pop
sub
sbb
data16
cmc
mov
shrl
mov
clc
add
sbb
nop
adc
or
mov
cld
jbe
and
dec
dec
stos
xchg
out
pop
pop
dec
xor
in
xchg
stc
in
or
ficomps
test
roll
jae
or
test
sbb
mov
dec
mov
test
incb
sbb
xlat
in
xor
or
sub
fidivrl
sbb
xlat
andl
and
pop
sub
and
mulb
ficomps
ficompl
adc
cmp
sahf
loopne
loopne
or
dec
shll
cmp
mov
mov
lahf
push
add
das
lcall
xchg
popa
pop
repnz
mov
dec
push
pop
stos
lds
leave
dec
xor
jg
jns
cmpsl
sub
jns
in
jle
dec
cs
jle
mov
adc
sbb
cmc
out
pop
jno
sahf
fstl
subl
and
sub
cmp
sbb
push
testb
xchg
das
daa
ds
loope
loope
pop
inc
xor
mov
or
xchg
clc
adcl
jae
sub
pop
lds
inc
add
mov
imul
jg
jl
mov
cmpsb
fsubr
test
xchg
cmp
sbb
or
outsb
xor
fwait
inc
push
call
inc
out
loope
push
dec
popf
mov
mov
stos
jl
inc
jno
aam
int3
or
repz
adc
mov
pop
lret
insb
mov
xchg
je
mov
imul
xor
push
nop
or
or
movsl
cmp
dec
ljmp
sar
xor
pop
dec
xor
loopne
jnp
xor
sbb
jl
sub
and
xlat
pop
pop
jae
imul
add
pop
mov
pop
xor
lods
dec
imul
addr16
xor
loope
cmp
es
add
les
xchg
ret
stos
inc
or
scas
add
insl
push
cld
negb
adc
mov
mov
sub
mov
enter
add
fisttpl
cmpsb
int3
scas
push
aas
add
inc
mov
das
lods
sbbl
dec
push
rclb
mov
and
ja
sti
mov
jo
dec
fs
idiv
fildl
adc
lret
pop
orb
sbb
xor
or
repz
mov
mov
or
arpl
clc
push
das
or
loopne
add
mov
hlt
or
test
mov
inc
add
lock
fisttpll
outsl
mov
movsl
or
inc
daa
lea
movsl
movsb
movsb
subb
repnz
pop
cmp
nop
cli
mov
push
lods
jmp
loopne
sbb
adc
push
ljmp
xchg
repz
cmp
out
cmp
jb
adc
sbb
mov
cld
sbb
nop
jae
rcll
pop
mov
jmp
mov
or
push
lea
loop
repz
pop
mov
test
insb
push
rorb
cmp
adc
xor
je
sbb
repnz
mov
add
mov
push
mov
pop
or
push
push
insb
fwait
loopne
es
cwtl
push
jo
mov
loopne
inc
call
push
xchg
hlt
fs
scas
and
into
xor
dec
mov
add
imul
insl
rorl
stc
movd
fistpll
mov
cli
cmpsb
loop
inc
fnstcw
aas
aam
cmp
pop
repnz
fs
mov
mov
hlt
inc
mov
rep
add
test
outsl
xorl
inc
loope
xchg
xchg
les
dec
push
jno
add
inc
punpckhwd
mov
push
insl
or
mov
je
pushf
dec
jns
or
int3
sub
xorb
dec
dec
addl
enter
sub
dec
mull
adc
adc
mov
sbb
push
pop
sbb
fistpll
jecxz
adc
hlt
or
xchg
add
xor
xchg
in
fstpt
pop
mov
lds
sahf
popa
push
jp
aas
inc
jo
jl
push
adc
dec
pop
loop
pop
xor
dec
mov
or
sbb
mov
mov
in
into
call
adc
adc
inc
sbb
clc
arpl
and
mov
popf
inc
leave
sub
mov
lahf
mov
pop
lods
pop
sub
test
dec
aaa
sbb
insb
testb
mov
add
in
pop
roll
cmp
cltd
in
jo
mov
in
mov
pop
negl
fisttpl
mov
out
aaa
lods
cmpb
add
dec
fadds
push
out
cmp
aaa
push
scas
mov
fs
sbb
dec
mov
imul
orb
jb
lret
dec
inc
add
sub
cmp
xlat
mov
sahf
cmp
fbld
pop
xchg
stos
or
fnstcw
mov
fdivl
fmulp
mov
mov
mov
inc
adc
mov
mov
and
push
push
mov
jmp
inc
push
mov
sub
lds
jecxz
outsb
push
aad
adc
jb
xchg
or
and
jecxz
sbb
sar
inc
mov
roll
pop
push
test
and
filds
idiv
add
dec
cwtl
pop
or
inc
jo
movsl
cmp
mov
pop
mov
and
xor
enter
inc
xor
jae
subb
add
adc
add
jge
xor
sub
jo
rclb
aad
jp
int3
cmpl
test
xor
data16
inc
mov
out
jg
or
cmpsb
stos
mov
daa
push
mul
cmp
shrl
mov
shr
pop
gs
rorl
inc
inc
test
out
out
dec
insl
daa
jno
arpl
ss
push
test
insb
inc
lahf
scas
pop
sbb
inc
adc
pop
stc
aas
enter
jl
out
mov
jl
bound
dec
insl
loope
sub
popf
jae
shll
and
js
xchg
rolb
imul
ret
popa
jnp
cmpsl
popa
clc
and
mov
adc
mov
das
fists
add
lcall
in
inc
sti
scas
or
dec
pop
sub
mov
sti
mov
lret
int
aas
push
int
xchg
fistps
mov
push
jg
lret
rorl
mov
sbbb
mov
std
neg
out
adc
xlat
mov
cmp
aad
adc
int3
adc
push
faddl
add
aas
cli
pusha
movsb
jecxz
mov
sbb
push
add
outsb
xor
and
dec
mov
enter
xor
inc
push
mov
mov
ret
sub
jo
cs
popa
arpl
in
or
or
rorl
and
pop
cmpsl
cmpsb
pop
out
xor
cltd
fnsave
or
push
ja
pop
fdivl
ror
lcall
jmp
aam
andb
in
daa
xchg
lds
xchg
sub
and
imul
jmp
dec
aad
repnz
cmp
aas
xor
jle
mov
test
rcr
adc
cmp
dec
hlt
dec
lcall
js
mov
inc
rorb
stos
test
or
sbbl
add
ret
add
fists
and
push
jge
xchg
xchg
gs
jp
xchg
imul
pop
mov
ror
add
loope
pop
mov
or
cmpb
lods
sbb
mov
cwtl
or
ja
int3
mov
imul
ss
xchg
inc
cwtl
jne
imul
xor
cmp
mov
ja
pop
xchg
mov
or
inc
sub
adc
icebp
add
repnz
int
dec
inc
mov
fwait
insl
add
addr16
or
sbb
ss
not
jp
data16
lods
fcoml
inc
mov
jecxz
inc
sbb
xor
or
movsb
pop
mov
hlt
sbb
data16
loope
push
and
rolb
insb
loope
mov
xor
enter
or
test
cwtl
movsb
dec
pop
mov
cltd
inc
xchg
push
push
jmp
in
ds
int
mov
xlat
ret
cmp
arpl
shll
jp
jmp
les
jns
push
enter
je
fs
fwait
jge
decb
leave
sub
test
int
cmp
pop
xchg
stos
or
jecxz
cwtl
jle
push
int3
mov
sar
adc
mov
ror
nop
or
inc
jmp
bound
push
mov
f2xm1
fwait
mov
pushf
test
inc
xor
pop
mov
out
imul
dec
inc
mov
and
in
and
jns
pop
pop
cmp
sub
dec
rcrl
add
in
stos
inc
and
xchg
js
or
xor
sub
out
xor
add
jl
inc
pop
pop
xchg
in
mov
mov
ret
fsubl
pop
pop
dec
js
clc
fwait
inc
aad
testb
dec
mov
jne
movsl
inc
jecxz
ss
je
inc
pop
in
mov
cmp
add
xchg
xchg
repz
sbb
int
pusha
faddl
jo
cmpsb
dec
jbe
sahf
pusha
add
movl
push
test
fcoml
loope
sbb
fcomps
into
arpl
mov
ss
test
in
in
lods
sub
push
icebp
push
or
scas
jb
push
mov
ds
iret
mov
arpl
mov
mov
leave
xlat
pop
sbb
or
and
movsl
sub
mov
xor
test
jae
sbb
mov
in
and
vprotq
mov
mov
jge
bound
scas
mov
add
and
adc
pop
rcrb
fidivrs
sub
cmp
out
push
lret
or
pop
inc
pusha
xor
std
mov
mov
loope
rcll
cmp
sbb
xchg
rclb
and
pop
dec
rcrb
mov
je
pop
jecxz
and
sub
mov
rcrl
xlat
mov
cmp
sbbl
outsl
in
fcompl
and
std
js
xor
cmp
mov
jle
mov
imul
jp
push
daa
ljmp
addl
addr16
out
mov
and
mov
repz
jl
push
fucomip
mov
mov
divl
mov
dec
jo
xor
outsb
test
sbb
push
in
mov
cs
mov
adc
stos
sub
icebp
push
xlat
xchg
mov
pop
hlt
inc
cmpsb
or
pop
ljmp
push
cmpsl
push
mov
std
pop
xor
push
mov
stos
mull
jnp
adc
lods
jb
mulb
je
popa
andl
fnstsw
aam
ljmp
fimuls
scas
xlat
xchg
aaa
sbb
jl
out
mov
xor
filds
pop
push
or
sub
inc
dec
lea
sbb
push
mov
inc
ljmp
push
cmpsl
scas
ss
pop
xor
outsb
cld
xor
xchg
xor
or
cwtl
rcl
pusha
jne
int
mov
sub
push
dec
dec
mov
daa
jno
cltd
add
mov
sbb
lahf
orl
inc
or
in
adc
pop
add
pusha
fsub
push
pusha
into
std
push
filds
adc
push
xchg
lds
test
outsb
into
lods
pop
mov
mov
cmpsb
jmp
lds
cmp
mov
and
jecxz
shl
insl
test
lds
cmp
rcr
jne
icebp
dec
jge
notb
dec
pop
sbb
and
das
loopne
roll
mov
lds
adcl
mov
popf
shr
xor
inc
and
test
gs
popa
push
and
divl
adc
dec
repnz
in
xor
mov
aad
mov
jo
push
loop
pushf
in
adc
sti
shll
dec
pop
or
mov
dec
xlat
add
or
gs
push
lcall
fsub
cs
dec
add
cmpsb
rcrb
mov
pop
mov
dec
adc
cmpsl
fistps
jb
ds
inc
mov
sti
inc
xchg
mov
call
and
adc
add
cs
push
jg
call
push
xchg
jmp
sub
aad
scas
push
mov
mov
xor
push
rclb
mov
adc
nop
cmp
out
jbe
mov
lret
ja
lret
inc
clc
push
mov
call
mov
pop
mov
fisubrl
sbb
aas
outsl
push
pop
pop
dec
dec
aaa
sbb
dec
out
or
sar
push
mov
aad
xor
mov
adc
lcall
aam
into
or
das
cmp
and
add
jo
bound
mov
insb
shlb
scas
je
arpl
dec
lret
andl
fsubrs
leave
popf
xchg
add
xchg
mov
push
sahf
jnp
pop
cli
ss
cmpsl
ljmp
jns
ljmp
daa
pop
je
das
lock
sbb
shll
pop
dec
pop
shrb
stos
pop
xchg
pop
sbb
in
xlat
mov
jno
stos
rorl
rclb
pop
mov
mov
dec
xchg
out
mov
dec
int3
adc
cmp
mov
sub
push
mov
push
out
rclb
sbb
xor
sub
cmp
fisttps
stc
sub
lret
pop
mov
xor
sbb
psrlw
jno
adc
push
enter
in
mov
jne
mov
pop
adc
sub
cmpsb
mov
cmovge
sbb
jno
jmp
xchg
rcll
fdivrp
adc
mov
xchg
add
xchg
fcoml
add
mov
inc
orl
add
sub
icebp
fs
popa
mov
add
in
and
ret
js
es
pop
mov
cmp
sbb
pop
aad
ss
insl
imul
gs
imul
sub
mov
gs
xchg
sub
cmp
or
xor
dec
sbb
test
aas
add
lock
fldt
jmp
mov
shrl
ds
insl
jnp
data16
into
mov
xor
sarb
jo
xchg
int3
cmpsl
ds
push
cmp
mov
xchg
inc
mov
push
dec
cmp
push
cmpsb
cmp
add
add
fistl
inc
icebp
inc
cld
mov
mov
pop
pushf
pop
push
clc
in
mov
sbb
xchg
xor
ja
adc
lcall
imul
dec
sub
rcr
jo
fwait
bound
int
lds
mov
cmpsl
sub
lea
imul
mov
ljmp
push
dec
aad
pop
sbb
out
int3
sub
jp
pop
inc
pushl
popf
stos
sahf
or
add
filds
pop
inc
int
fwait
cld
lods
push
mov
iret
loopne
sbb
outsb
iret
loopne
loop
addr16
je
outsb
jne
jnp
movsl
and
js
in
or
mov
in
imul
nop
data16
in
push
jae
insl
outsl
or
mov
ficoml
shll
cmp
push
jne
ja
arpl
daa
or
roll
lea
cmp
sub
pop
popa
adc
or
call
sbb
pop
cwtl
into
out
dec
jg
fisttpl
add
xchg
push
lds
mov
insl
jmp
repz
add
bound
add
fisttpl
mov
or
lret
inc
pop
rcrb
sbb
aas
mov
push
xchg
mov
mov
jb
fmuls
mov
test
scas
ds
push
aas
jl
call
bound
in
mov
enter
jp
mov
cmp
sarb
ljmp
addr16
lock
pop
or
jmp
cs
rcrl
out
int3
add
mov
or
imul
adc
roll
xor
fcmovnbe
mov
into
sahf
lods
ja
sub
out
push
push
fildll
lods
hlt
ret
cmp
inc
sub
mov
and
leave
pop
fsub
fmull
icebp
pop
sub
pop
pusha
push
nop
cmp
jno
shlb
scas
mov
mov
push
scas
je
repnz
cmovl
xor
call
nop
jge
into
and
test
cmpsl
loop
mov
cwtl
lea
mov
push
dec
loope
repz
out
dec
ljmp
push
fsubl
or
mov
jmp
arpl
mov
inc
xlat
dec
pop
mov
jecxz
cs
aas
adc
insl
imul
lea
sub
xchg
outsb
inc
push
pop
jae
mov
arpl
inc
pop
ret
test
lods
mov
lahf
mov
in
adc
xchg
xchg
cmc
ja
mov
fs
inc
es
imulb
push
icebp
jnp
xor
push
int3
stos
xor
pop
es
aad
int
cmc
xchg
ja
cs
loope
jg
inc
inc
sub
je
cmpb
jb
cmpsb
lret
divl
ljmp
pop
and
lcall
xor
jg
cmp
mov
and
cmpsl
dec
cmc
test
jl
pushf
or
in
arpl
cwtl
mov
leave
inc
mov
loopne
push
xchg
jp
rolb
dec
ds
pop
cli
ja
decl
mov
fadds
and
lret
ret
xchg
xor
inc
push
inc
outsl
and
mov
enter
push
jl
jbe
shll
pushf
pop
pop
out
mov
add
scas
mov
cld
cmp
idivl
mov
push
int
and
mov
mov
fwait
ret
icebp
and
shll
sub
sub
push
jmp
fsubrs
test
out
leave
lahf
and
xchg
mov
push
aas
sub
shlb
xchg
and
and
nop
cltd
and
mov
cli
pop
sti
adc
scas
mov
mov
fildl
imul
xchg
fldl
or
bnd
inc
int3
mov
dec
push
roll
xchg
mov
js
dec
or
enter
dec
push
adc
and
imul
inc
lods
or
xchg
xchg
dec
stos
insl
scas
or
clc
js
sbb
sahf
sbb
dec
subl
push
mov
mov
and
push
outsl
leave
adc
cmp
push
mov
test
hlt
sbb
or
or
fistl
xchg
sbb
mov
jl
popl
add
mov
mov
mov
mov
lret
pop
clc
push
rorb
xor
fstpl
sbb
cmc
stos
mov
stos
mov
addl
mov
out
mov
daa
shl
xor
stos
xor
popf
cmpsl
push
adc
ss
pop
or
rolb
stc
mov
and
sub
or
inc
stos
xor
sbb
sbb
push
lea
int3
int
cmpsl
rorl
ret
stos
in
or
cmpsl
sub
ds
xchg
adc
gs
repz
mov
dec
add
xchg
inc
xchg
sbb
lock
sub
sub
shrb
ret
mov
pop
xchg
inc
fcmovnb
ret
inc
inc
or
xchg
pusha
lock
adc
pop
fcoms
and
xor
fsubl
clc
cmp
adc
arpl
dec
adc
adc
add
jl
test
cmpsl
mov
mov
xchg
ja
mov
push
push
sub
and
adc
rorw
jle
mov
push
lds
xchg
xor
mov
inc
xor
sbbl
testb
lods
xor
and
push
clc
jmp
sbb
mov
fisubl
aaa
mov
insb
add
sbb
fcompl
sbb
inc
push
add
xchg
dec
ss
fidivrl
aas
jg
mov
fidivl
fidivs
adc
cmp
fcomps
cmpsb
js
loop
in
punpckhbw
push
jns
pop
outsb
not
out
subl
mov
les
cmp
cmp
loop
add
ficoml
outsl
mov
lahf
movhlps
cli
scas
lahf
mov
cmpsl
adc
adc
mov
subb
pop
cmpsb
iret
and
jb
imul
negb
mov
jle
scas
andl
and
shrb
xor
dec
push
fwait
insl
dec
out
arpl
dec
jno
push
lahf
pusha
cs
fiadds
push
ret
or
loope
icebp
push
xor
adc
fsubrs
mov
push
pop
add
and
jbe
sbb
and
icebp
xor
jg
adc
nop
mov
movsl
mov
mov
out
in
fxch
movsb
scas
cmpsl
add
arpl
repz
je
inc
enter
adc
dec
sub
sub
andb
fcomip
or
cmpb
enter
ret
testl
adcb
jbe
scas
mov
and
loop
in
mov
stos
xchg
mov
lock
jmp
lods
jo
lcall
movsb
cwtl
mov
sti
fstpt
cvtdq2ps
mov
jno
sbb
mov
mov
lock
in
pop
push
and
mov
outsl
stos
pusha
pop
sti
or
inc
sbb
jmp
mov
mov
shlb
cmpsb
js
shlb
ss
icebp
or
ja
sub
cwtl
add
mov
in
mov
lds
mov
and
xor
push
cmpsb
pop
xlat
ds
inc
into
gs
imul
sub
cmpsb
fidivrl
adc
lds
cvtdq2ps
or
add
jmp
jecxz
std
lahf
sar
and
negl
pop
sbb
and
push
adc
cli
add
js
mov
arpl
push
xor
loop
ret
pop
push
cmpb
xchg
cmp
and
rorl
bound
push
fidivs
sub
add
xor
push
ss
fsubrs
cwtl
xor
pushf
or
pop
icebp
int3
fcoms
bound
sub
fidivrl
imul
jnp
gs
fcoms
push
mov
enter
and
cmpsl
push
movsb
mov
inc
dec
ret
xor
rcrl
cltd
pop
lods
push
addr16
negl
dec
int3
aad
cmpsl
daa
das
ficompl
mov
xchg
add
shll
enter
rcr
mov
arpl
add
pop
leave
sub
and
fsubr
sub
cmp
ja
jno
mov
test
test
push
mov
scas
outsb
test
dec
xor
in
arpl
lods
addr16
loopne
mov
shll
mov
sbb
movsb
inc
inc
and
or
mov
adc
xchg
sahf
fildl
mov
icebp
stc
sti
arpl
nop
push
add
sahf
jne
inc
xlat
incl
cltd
mov
xor
push
es
push
xchg
ret
jae
lret
mov
dec
bound
cli
aaa
gs
test
xor
inc
fstpt
add
arpl
add
inc
cmp
ret
push
push
jp
mov
ds
fldt
lahf
inc
jl
inc
add
sbbb
push
cmp
adc
mov
sbb
loopne
iret
mov
nop
aam
pop
pop
xchg
test
les
cltd
sub
aam
adc
repnz
cwtl
and
lret
iret
insb
mov
subb
hlt
xchg
adc
in
lea
aam
cmpsb
test
nop
scas
and
mov
filds
ljmp
inc
push
dec
cmp
jmp
sub
fnstcw
in
lods
or
into
and
hlt
loope
pop
dec
lds
pop
imul
test
cmpsl
rcl
dec
xchg
es
jge
jecxz
test
sbb
dec
jno
cmp
stos
add
pop
addr16
dec
das
test
loope
pop
aam
sahf
mov
adc
mov
repnz
pop
jp
mov
xchg
mov
fcompl
mov
pop
nop
inc
sbb
lds
ds
jo
add
fcmovne
imul
shl
pop
jns
adc
repz
sarb
mov
xor
fnsave
in
mov
clc
imul
test
sbb
push
das
or
sbb
aaa
dec
jle
cmpsl
dec
xor
mov
imul
dec
push
lcall
jecxz
dec
aaa
mov
ror
inc
and
test
scas
lods
nop
mov
inc
cmpsl
test
mov
dec
push
xor
adc
ret
pop
lahf
xchg
stos
sbb
push
sub
adc
das
pop
xor
jp
enter
mov
jne
xor
insb
xchg
mov
lods
imul
pop
in
dec
into
in
test
cmp
rorl
test
dec
icebp
pop
lcall
imul
fs
mov
repnz
daa
hlt
negl
lea
stos
mov
xor
jl
int
scas
push
and
in
out
leave
and
mov
ret
pop
in
rcll
pop
or
rclb
nop
js
xor
mov
push
pop
outsl
push
mull
or
clc
pop
pop
in
mov
push
push
lcall
xchg
adc
add
int3
daa
stos
adc
mov
imul
popf
cmp
insl
test
or
and
call
mov
cmp
cmc
sbb
sbb
iret
in
mov
js
pop
adc
stc
mov
cmpsb
mov
xchg
xor
testl
ss
loope
pop
mov
adc
in
out
pop
rcr
mov
ljmp
push
ss
in
popf
mov
ret
mov
pop
jmp
cmpsl
test
or
ss
mov
cmpsb
pop
sbb
push
inc
push
add
jb
out
mov
sbbl
jae
xchg
sub
adc
jmp
aad
out
rcrl
popl
out
lea
sbb
jbe
lock
push
jne
addr16
mov
jae
cmc
xchg
sub
gs
xchg
fnstcw
leave
pop
into
fwait
jl,pn
scas
mov
cmpsb
fcoml
cltd
loop
sub
mov
gs
and
mov
cmp
jb
fnstsw
xchg
xchg
fnstenv
push
adc
dec
pop
lcall
pop
sbb
mov
int3
sub
xchg
jecxz
add
and
xor
fwait
mov
hlt
loope
pop
or
cld
mov
push
push
mov
je
push
orb
inc
or
push
add
cmpsb
mov
nop
add
adcb
sti
jmp
lods
popf
movsb
jmp
sbb
cmp
fisubs
mov
dec
ja
test
mov
movsl
jle
push
pop
mov
outsb
or
sub
pop
test
movsl
fcom
mov
adc
mov
loope
jecxz
ret
scas
lahf
pop
arpl
movsl
xchg
mov
inc
mov
xchg
loopne
and
and
cmp
and
dec
mov
mov
or
bswap
test
rcrb
push
inc
test
lcall
popa
fwait
dec
add
stos
sbb
sub
jg
std
iret
mov
cltd
pop
call
mov
psadbw
dec
fnstsw
fnclex
xchg
jb
mov
pop
insb
or
data16
notl
xor
cmp
fsts
daa
ds
xor
push
rcr
lret
push
xor
aas
sub
daa
out
cmpl
mov
jnp
in
int3
or
and
not
xchg
icebp
and
test
xlat
in
push
insl
pop
mov
mov
pop
lock
cmp
cwtl
jge
xchg
xchg
sub
pop
xlat
clc
test
lods
clc
iret
mov
add
pop
mov
movsl
sub
and
cltd
mov
pop
rclb
pop
out
movsl
mov
xor
rcll
xchg
cmp
scas
mov
arpl
xchg
mov
and
fmull
adc
dec
jge
or
jo
sub
std
sbb
cmc
cs
data16
mov
stos
ljmp
push
jnp
push
aad
mov
outsb
xor
sub
fadds
sarb
pop
ljmp
jecxz
pop
mov
mov
xchg
or
aaa
out
jae
mov
pusha
movsb
sub
fildl
mov
mov
imul
out
xchg
cltd
clc
push
xor
fistpll
and
arpl
fdivs
mov
pop
cmp
scas
icebp
insl
and
sahf
cltd
repnz
cmc
mov
xor
mov
push
or
cmovs
insl
data16
add
push
adc
mov
lds
dec
dec
mov
push
pop
jnp
adc
fistpl
je
incb
dec
or
mov
xchg
sub
and
add
push
add
or
xor
aad
fistpll
out
xor
rcll
ss
dec
push
or
or
cs
sub
sahf
cltd
cs
jne
mov
mov
lock
mov
ret
test
mov
push
cmpsl
lret
sub
inc
push
push
stc
test
scas
adc
dec
jmp
jp
cmp
mov
test
xor
mov
punpckhwd
push
inc
add
push
mov
icebp
lea
push
jp
cli
fstl
add
aaa
cli
es
and
mov
cmp
aad
fisubs
mov
inc
adc
mov
xchg
into
stc
mov
sbb
repz
stos
pop
mov
sub
sahf
inc
addr16
xor
decl
cwtl
mov
mov
or
dec
inc
mov
cmpsb
dec
cmp
lods
ljmp
push
lea
pop
dec
icebp
xchg
pop
and
scas
and
pop
leave
xlat
lods
mov
mov
cmp
cld
jge
inc
movl
push
movsl
shr
emms
icebp
inc
insl
cwtl
xor
xchg
add
loope
sub
aad
lock
mov
flds
aaa
out
xchg
sbb
inc
jge
dec
pop
iret
nop
cmp
jb
dec
lcall
out
cmpsb
push
repz
sub
clc
sbb
dec
sub
jbe
js
iret
test
mov
cltd
jne
xchg
adc
push
lods
add
cmp
js
ljmp
jge
push
pop
push
push
or
inc
mov
xor
loopne
jb
in
pop
outsb
inc
pushf
push
mov
scas
fnstsw
mov
test
rcr
xor
inc
gs
push
xchg
pop
or
xchg
pop
cld
inc
fldcw
mov
jp
push
pop
pop
test
push
mov
in
lea
insl
lahf
lahf
mov
imul
fcomi
dec
ljmp
imul
cld
mov
jb
ss
les
loop
jp
push
sti
fidivs
fisttpl
mov
test
dec
stos
xchg
addr16
lret
pusha
outsb
seta
call
cmp
pop
es
push
xor
cmp
cli
stc
inc
loop
stos
mov
jge
mov
inc
daa
imul
dec
dec
lea
inc
leave
and
cs
and
outsl
rcrb
push
adc
jg
pop
test
movl
mov
jecxz
call
call
sub
lock
ret
push
cmp
aad
lea
sbb
inc
imul
das
mov
mov
or
jmp
mov
sbb
or
dec
cmp
rolb
imul
addb
pop
jno
adc
ss
mov
les
sahf
addr16
sbb
mov
clc
out
nop
mov
cwtl
ljmp
ljmp
mov
sbb
insl
inc
pop
hlt
or
movntps
enter
dec
fwait
insb
push
jns
cmp
sub
ja
aad
out
and
mov
pushf
int3
push
xor
dec
mov
sub
pop
jg
jo
sbb
xor
pop
sarb
mov
xor
mov
js
lock
cld
mov
mov
or
xchg
cmp
jmp
cs
or
dec
pop
sub
dec
lods
jno
rcll
push
mov
jg
bound
jl
push
aas
add
push
and
neg
test
sbb
popf
insl
mov
mov
mov
inc
aaa
push
add
mov
cmpsb
fmul
xchg
arpl
mov
imul
xchg
cmp
loope
cmp
cmp
mov
add
mov
xor
lods
pop
adcb
xchg
pop
xchg
xor
call
add
jb
loopne
push
or
pop
pop
ret
loope
test
les
mov
ret
fdivrs
in
ficompl
xor
and
sarb
gs
mov
xor
mov
jp
enter
movsb
sti
lahf
mov
pop
mull
mov
rclb
dec
lods
decb
xchg
adc
dec
in
mov
xchg
aad
movb
sub
mov
lahf
cmc
jg
xor
and
cmp
pop
xchg
and
jnp
ret
and
test
xor
test
mov
jae
push
rcrb
std
add
jno
push
ja
xor
movsl
inc
mov
sbb
mov
mov
aas
popf
mov
sbb
adc
movsl
jb
jo
nop
insb
xor
xchg
mov
imul
cmp
cmpsb
gs
cmp
mov
push
clc
out
imul
sub
int
xchg
jo
xchg
xchg
lcall
in
js
pushl
cmpsl
idiv
lahf
cmp
das
dec
enter
xor
addr16
aas
cmp
sbb
sbb
adc
repnz
jge
xchg
mov
xchg
fildll
mov
sbb
scas
mov
inc
fmuls
icebp
out
lcall
mulb
lahf
jge
mov
fwait
das
popa
imul
out
fstpt
pop
inc
std
adc
push
mov
mov
les
punpckhdq
and
jg
jne
je
test
adc
cmp
or
imul
lcall
jnp
push
sbb
mov
shll
adc
les
das
add
rcr
adc
rorl
unpcklps
sub
mov
cwtl
jb
leave
icebp
sub
mov
jge
xor
push
jg
mov
ja
popa
sbb
movsb
test
ljmp
xchg
dec
push
inc
cmpsl
movsb
sub
mov
mov
movsl
clc
jg
or
daa
nop
int3
pop
data16
xor
xorl
cmpsb
mov
sub
movsl
sub
mov
cmp
pop
jae
sub
or
mov
aaa
lock
dec
sbb
add
push
jge
dec
ds
iret
jp
mov
call
lds
movsb
pusha
push
cmp
cld
jmp
jmp
cmp
or
div
mov
push
xor
mov
dec
xor
int
mov
pop
xchg
aaa
and
inc
xor
hlt
or
cmp
fbstp
xchg
jmp
stos
pop
call
in
inc
cmc
xchg
push
and
xchg
movsl
push
stc
outsl
ficoml
adc
loopne
pop
fcmovnb
andl
jae
test
pop
dec
jle
mov
dec
fldenv
imulb
insb
jo
cld
pop
jge
ja
push
xlat
push
mov
add
adc
or
xor
jno
inc
add
je
adc
lret
sarl
adc
inc
jmp
repz
mov
xchg
addl
gs
inc
cmp
jmp
or
es
nop
filds
xor
lods
sbb
cmp
out
sbb
cmp
pop
scas
xor
cmp
sarl
iret
xchg
cmp
icebp
cmp
sub
enter
or
push
lods
cli
jecxz
pop
inc
pop
xchg
fistl
stos
lods
pop
mov
call
push
and
enter
jae
dec
mov
icebp
sahf
push
insl
mov
shll
andb
pop
mov
bound
or
push
mov
sub
pop
xchg
lcall
cmpsl
vpshufhw
jmp
aaa
fmul
jp
daa
mov
inc
ret
adc
cmpsb
aad
and
in
fcoml
out
jg
cmc
cmpsl
sbb
and
adc
aaa
sub
pushf
test
repz
into
add
bound
xlat
mov
pop
jmp
movsb
outsb
fistpll
lret
mov
das
dec
sub
dec
repz
mov
jecxz
jmp
xor
add
je
cmp
inc
subb
inc
jmp
nop
mov
and
fsubrs
arpl
lods
pop
sbb
jecxz
shrl
and
mov
test
jnp
cmp
mov
ds
outsl
mov
pusha
out
in
clc
jo
pop
shlb
mov
sbb
loop
xor
int3
sarl
mov
xor
or
or
fnstcw
fisttps
es
fisubrl
mov
jp
fsts
push
push
outsl
dec
pushf
shrb
sub
lahf
sbb
adc
jb
cmp
pop
out
xrelease
cli
jmp
xor
cld
push
pop
leave
mov
and
push
xor
adc
aad
imul
xor
lea
ds
rol
lds
jno
push
cmpsb
inc
mov
pop
stos
fdivrl
jp
sub
fbstp
aam
inc
ret
sahf
aas
xchg
repz
sbbb
jg
cmpsl
inc
mov
fistps
mov
inc
add
push
mov
insb
inc
out
lea
test
ss
push
cltd
repnz
xor
and
mov
adc
movsb
divb
mov
lahf
pushf
repnz
lret
fucomip
insb
ret
nop
or
lock
in
inc
rcr
and
sub
aas
mov
pop
dec
dec
inc
cmp
or
int3
mov
push
xchg
fcmovu
mov
jg
shl
movsl
cmpsl
xlat
jge
push
add
push
in
or
mov
jno
pop
cmpsl
jne
and
popf
dec
or
or
aad
rclb
jmp
repz
xchg
mov
jno
xor
ljmp
mov
hlt
cltd
xchg
addl
sbb
add
out
push
std
push
sbb
push
and
jg
mov
jo
inc
hlt
inc
mov
jg
fisubrl
mov
in
jns
in
lret
xchg
jp
add
aam
icebp
nop
and
push
gs
test
dec
pusha
xchg
dec
shll
shl
cmp
test
loopne
fs
cmc
aad
shll
pop
push
insb
test
push
or
cmp
ja
outsb
dec
addl
fnstenv
push
mov
add
jmp
stos
out
jg
and
outsb
lret
adc
popa
sarl
sahf
inc
outsb
mov
sub
mov
out
push
loope
lods
or
ret
pop
daa
mov
sarb
jge
jle
pusha
or
push
dec
pop
jmp
lcall
or
adc
in
in
pop
inc
cmp
mov
and
add
scas
pop
dec
lea
adc
jb
cltd
fs
adc
fs
aad
data16
or
cmp
jl
test
rolb
jae
mov
pushf
adc
xor
mov
xchg
outsb
add
dec
shll
push
lea
dec
imul
inc
dec
pusha
and
mov
mov
xchg
jecxz
mov
ja
inc
cmp
imul
dec
bound
push
out
sahf
test
fs
inc
arpl
dec
sub
xchg
filds
sbb
push
xchg
jb
push
cmp
sub
fidivrs
int3
mov
jg
loop
dec
test
pop
mov
pop
and
jo
sbb
test
out
mov
fstl
add
into
push
ds
pushf
jbe
jne
sbb
mov
mov
push
gs
mov
or
inc
repz
mov
jb,pt
sbb
loopne
jle
cmp
cmc
stos
rcll
lods
cmp
pop
jb
and
pop
inc
aaa
mov
hlt
mov
mov
sub
add
loope
in
mov
cmp
repnz
push
push
arpl
push
cmp
insl
cmpsb
push
inc
lea
inc
lods
ja
mov
rclb
loope
outsl
pop
stos
nop
mov
lds
scas
std
and
pop
jbe
adc
pushf
xchg
mov
jl
add
fsubs
aad
dec
and
into
xchg
lea
jmp
pushf
cs
scas
push
es
cmp
sbb
pop
fadd
popf
je
lret
repnz
sti
in
and
dec
lahf
cmpsl
jle
or
es
dec
sbb
sbb
mov
sbb
mov
or
and
add
fs
ret
pop
dec
movsb
fcoml
decl
std
add
mov
popl
jle
pop
and
mov
sub
adc
pushf
sbb
cmp
ds
rcll
cmp
out
and
lahf
rclb
mov
mov
fldt
shrb
xor
fildll
xchg
cmp
in
scas
or
outsb
ret
mov
loop
xchg
pop
adc
push
dec
cmp
aaa
add
das
sub
sub
sbb
push
mov
aam
xchg
mov
push
jl
fimuls
mov
and
nop
xlat
cld
jnp
lods
mov
cmp
pop
push
cli
inc
dec
xchg
jp
std
add
sarl
inc
test
test
aas
pushf
scas
cmc
in
ret
fiaddl
dec
roll
test
aas
jae
iret
xchg
xchg
or
pop
xchg
xor
xor
jo
adc
cwtl
rclb
cli
enter
lds
xchg
stos
mov
or
mov
shlb
add
std
jae
clc
push
imull
xor
sub
inc
jns
and
ja
lock
loop
or
sub
fs
mov
fistpll
mov
jmp
dec
sub
mov
iret
orl
push
push
pop
ds
or
xchg
les
cmp
leave
inc
insl
out
push
enter
stos
mov
or
push
rcr
pop
ljmp
fildl
aas
xchg
inc
adc
pop
push
sbb
stc
test
cltd
outsb
xchg
mov
sub
jp
mov
add
mov
ja
cld
jmp
cmp
imul
jae
ja
cmc
sar
sbbl
inc
mov
js
addr16
aaa
pop
mov
ficompl
or
cmpsb
addr16
mov
cli
sub
push
dec
lock
lret
sbb
lret
sub
cmp
repz
inc
aad
sbb
nop
push
ret
test
inc
bound
adc
rcrb
and
add
test
sbb
popf
xor
cli
push
sbb
movsl
fs
xorb
mov
scas
shr
les
xorl
cmp
xchg
lret
xlat
push
lock
adcl
je
xor
filds
out
xchg
repnz
das
inc
jne
push
in
mov
push
push
cmc
mov
inc
mov
jns
movsl
dec
mov
pop
shlb
pop
xor
pop
mov
push
andb
adc
aam
push
repz
js
push
add
xlat
out
orl
push
push
mov
jle
mov
pusha
jo
test
out
sub
or
mov
jnp
jl
xor
and
sbbl
movl
adc
add
dec
insb
mov
cmpb
fs
mov
dec
imul
mov
mull
stos
push
sbb
lods
pop
insb
and
subb
xchg
cld
adc
scas
inc
xchg
out
decl
frstor
and
int
mov
sbbl
jg
pop
arpl
loope
sub
push
stc
push
adc
cli
pop
outsb
push
pop
clc
sbb
mov
dec
das
int3
leave
jmp
add
mov
dec
sbb
stc
rcrb
sub
inc
outsl
lea
insl
mov
outsl
lahf
cmp
mov
lods
jmp
jnp
add
push
dec
mov
dec
cmp
xor
adc
jnp
cmp
cmp
add
and
xor
mov
pop
std
xor
jecxz
push
pop
jb
movsl
xchg
jp
loop
mov
jp
addl
and
sahf
mov
lock
adc
cmp
insl
stc
sub
fwait
shrl
div
jecxz
mov
push
dec
cmc
pop
inc
xor
mov
adc
mov
pop
orb
add
popf
fisubs
daa
pop
and
scas
repnz
mov
inc
mov
fs
push
aam
test
sahf
test
pushl
or
mov
in
sbb
mov
ret
cwtl
es
dec
and
test
popf
call
mov
sub
inc
incb
mov
xor
shlb
fistps
imul
push
jbe
test
jmp
shrl
jle
movsb
xlat
xor
scas
add
mov
push
xchg
cmpb
xor
mov
xor
jg
sub
xchg
inc
pop
div
dec
adc
jno
out
sbb
loopne
repnz
addr16
xchg
push
movsb
sbb
sub
sahf
ror
sub
stos
jb
inc
lock
adc
cmp
cmp
push
iret
not
mov
lret
movsl
mov
mov
mov
sbb
out
packsswb
mov
and
push
sbb
cwtl
or
fldl
jb
jbe
repnz
fstl
xchg
lret
shl
pop
mov
push
mov
push
mov
outsl
ljmp
jo
push
les
push
pop
stos
ret
mov
addl
adc
mov
test
test
hlt
xchg
rcll
sub
in
mov
fistps
movsl
dec
sbb
pop
sub
hlt
outsb
sbb
insl
sbb
arpl
scas
stos
repz
jmp
dec
mov
notl
pop
xchg
cld
pushf
clc
dec
rorl
sub
mov
xchg
lret
fnsave
shrb
inc
xchg
jecxz
outsb
jmp
cld
and
test
sbb
cwtl
pop
in
inc
jo
sub
mov
imul
imul
jnp
pop
sub
jmp
scas
enter
cmp
mov
jp
mov
sbb
ljmp
mov
aas
outsb
outsb
gs
dec
xor
or
pusha
cmp
mov
sarb
jle
stos
call
xchg
xchg
dec
adc
paddw
pop
jle
mov
outsb
stos
sahf
and
fdivl
cmp
add
ret
cmp
sbb
imul
cmpsb
or
adc
test
pop
cmp
jno
sub
cmpsb
add
inc
sbb
fmull
int
pop
jb
sbb
add
or
jnp
cmp
xor
and
rolb
dec
adc
sub
cmp
in
sub
lock
gs
ljmp
mov
mov
mov
dec
arpl
jl
pop
sub
popf
dec
in
cmp
fmuls
ficoms
cmp
xchg
cmp
mov
mov
or
cmp
mov
pop
int3
dec
sahf
or
mov
out
shll
push
sahf
jmp
shl
jno
pop
sub
jo
bound
test
xchg
adc
xchg
mov
mov
xor
jp
inc
ss
mov
sub
ret
jns
lret
sub
inc
jmp
std
jae
xchg
loopne
inc
mov
leave
adc
outsl
out
bound
cltd
push
cld
sub
jl
xchg
and
lret
cld
repz
jns
daa
int
inc
lcall
imul
sbb
pop
fwait
lock
xor
out
or
cmp
fimuls
and
xchg
and
xor
fisubl
pop
mov
cli
sbb
pop
movsl
inc
out
or
shrl
mov
jb
rcl
dec
mov
mov
sub
ds
jbe
and
and
fbld
xchg
adc
popa
add
mov
mov
cmp
or
jns
jns
data16
cmc
jg
das
push
mov
fdivr
clc
stc
and
and
xor
cmp
lock
cmp
xor
ja
daa
aam
enter
xchg
insb
mov
push
ja
adc
lock
repz
mov
insl
mov
pop
mov
ret
and
lcall
cli
mov
inc
test
insb
shl
xor
push
cmp
mov
outsl
lods
inc
dec
cltd
sub
haddpd
jmp
shl
inc
and
push
cmp
mov
dec
jno
add
mov
fidivl
aam
mov
xor
int
jo
cwtl
mov
cmp
and
scas
test
rolb
lret
inc
movsl
mov
into
mov
je
lds
mov
xor
call
cld
shrl
js
sub
fnsave
mov
out
scas
dec
xor
xchg
push
and
addb
pushf
jns
in
cmpsb
sarl
xor
ja
mov
repz
mov
gs
mov
pop
push
jle
jb
out
call
jmp
fwait
inc
gs
or
mov
addb
and
int3
pop
xchg
ret
filds
mov
ss
arpl
cmp
mov
cmp
aas
xor
ja
mov
dec
inc
outsl
fbld
bnd
inc
pop
push
dec
mov
mov
mov
xor
sub
inc
jo
sbb
stos
aaa
cld
inc
ret
mov
hlt
mov
outsl
sbb
mov
or
jg
imul
mov
lods
mov
mov
aaa
outsb
fbstp
mov
xchg
in
adc
jge
mov
fsubs
jge
mull
out
sbbl
xchg
ret
pop
outsb
add
sub
jle
xchg
pop
das
outsb
test
lods
xor
cli
icebp
sub
push
mov
pop
pushf
out
stos
mov
lods
mov
mov
movsl
sbb
test
mov
in
loope
adc
scas
in
adc
es
daa
shll
or
push
lea
je
jecxz
sbb
xchg
add
fs
mov
dec
pop
js
in
add
daa
mov
nop
cmp
cs
and
iret
pushf
jns
sub
mov
or
cmpsl
mov
adc
stos
lret
push
mov
xchg
or
cmp
jmp
dec
sbb
xchg
mov
add
pop
add
xor
add
adc
insl
or
inc
mov
adc
fnstcw
xchg
and
ret
daa
inc
add
jge
sbb
mov
rcl
popa
jg
and
push
jbe
jg
ds
xchg
or
xlat
sub
loop
out
scas
xchg
js
test
or
scas
pop
scas
mov
lds
mov
out
inc
adc
inc
aad
lret
lahf
pop
mov
hlt
aaa
or
xchg
sti
mov
movsb
add
mov
and
pusha
lock
cmp
push
ja
sahf
decb
adc
jge
inc
cwtl
push
mov
add
push
xor
ret
sub
pushl
mov
imul
lds
test
cwtl
push
lods
or
lds
xchg
mov
pop
enter
inc
sbb
sub
jp
repz
mov
xor
jno
cwtl
addr16
mov
dec
inc
jl
rcrb
jne
push
push
in
mov
fwait
jl
js
pop
rcr
cmp
jns
mov
mov
xor
out
mov
cmp
imul
pop
adc
mov
int3
daa
mov
sbb
jg
in
push
sbb
mov
mov
dec
dec
cmc
out
call
test
inc
mov
fcmovbe
jne
fbstp
sbb
sub
push
adc
je
push
xor
addr16
lahf
push
inc
dec
or
sub
mov
add
in
in
xor
jp
dec
mov
push
cmc
ss
and
mov
es
outsb
mov
sarl
lods
ds
mov
aam
fldcw
mov
mov
in
cmp
add
hlt
pop
push
add
fsubs
out
lea
loop
jp
je
lret
test
xchg
sbb
loope
mov
es
push
cmpsb
and
adc
fisubs
lahf
xchg
mov
into
je
push
test
push
stos
imull
mov
lods
or
sub
lret
sarb
add
adc
aam
ret
pop
cmp
xchg
incb
mov
mov
stc
sbb
fwait
push
or
push
dec
dec
in
mov
mov
mov
mov
mov
jb
cli
js
sti
mov
test
add
sbb
mov
cmc
jnp
mov
jae
insl
lret
shl
push
jmp
xchg
aaa
imul
push
inc
or
pop
xchg
sub
mov
cld
aam
insl
shufps
into
movsb
std
les
psubd
sub
das
cltd
xor
call
push
adc
sbbl
cmp
sbb
sub
cmp
push
sti
pusha
push
push
mov
pop
sahf
pop
xor
bound
ret
sbb
pop
mov
inc
mov
mov
rol
mov
jecxz
pushf
mov
imul
add
sbb
inc
pusha
sub
push
inc
fwait
xchg
lock
push
push
mov
cmpb
sub
dec
jae
xchg
insb
mov
in
mov
dec
add
inc
ja
iret
add
shl
mov
sti
dec
pop
out
mov
lretw
sub
rcr
sbb
inc
ret
pop
iret
pop
mov
lods
aam
mov
aam
test
ja
jle
mov
add
lcall
fcmovne
enter
std
mov
cltd
leave
loop
lret
stc
mov
inc
data16
lret
cmpsl
jge
repnz
movsl
mov
pushf
mul
push
jo
mov
insl
push
xor
push
pop
push
dec
push
pop
mov
insl
movsl
mov
sbb
mov
negl
mov
jge
outsl
xchg
mov
shrl
jmp
mov
inc
mov
imul
ja
or
loope
idivl
sbb
mov
cmpsb
push
xlat
addr16
lahf
add
ret
movsb
cmpsl
outsl
int
or
enter
fildll
das
push
mov
push
aam
cmp
arpl
adc
add
out
out
nop
std
pushf
push
cmp
shrl
jb
fstps
sbb
lods
es
xchg
je
mov
rcll
sbb
cmp
cmp
ljmp
mov
scas
outsl
xor
cmpsl
jmp
movsl
mov
data16
sbb
xchg
daa
ss
jmp
into
es
mov
mov
sbb
xor
push
insb
sbbb
pushf
cmc
loop
int
or
xchg
mov
int
cmpsb
cmp
push
xchg
out
inc
push
pop
je
mov
leave
decl
adc
stc
fwait
es
dec
and
imul
dec
cmp
cmp
or
cmc
ds
mov
sbbb
ss
js
insb
leave
cmp
sbb
ficompl
pop
cmp
mov
lds
lcall
sub
or
mov
or
psllq
pop
mov
les
stc
mov
pop
les
pop
shrb
fnstsw
cmc
cmp
sahf
loop
push
loopne
xor
popf
add
mov
loop
jno
sub
dec
dec
inc
pop
ljmp
stc
popf
inc
js
or
push
cli
mov
ds
sbb
cmpsl
xchg
cmp
dec
jae
mov
jmp
test
push
dec
cli
cwtl
enter
xor
push
bnd
mov
scas
and
popa
sbb
ja
push
daa
pop
cmp
das
scas
cmp
push
in
xchg
cwtl
mov
movsb
cmp
dec
cmp
xor
js
lret
xor
inc
fildl
js
cwtl
fistl
in
xor
jmp
out
or
stos
fsubs
or
pushf
mov
adc
push
jg
xchg
jle
test
mov
cli
push
jmp
decl
xor
pop
popa
cli
push
movsl
lret
fstpt
mov
nop
mov
fs
fists
mov
pop
mov
lret
xchg
ror
ja
out
and
outsl
jmp
ret
pop
movsl
repz
fmuls
and
lods
clc
arpl
sahf
adc
aad
pop
das
and
leave
sbb
cmp
shll
or
lods
mov
pop
popa
or
add
jbe
jns
out
pop
pop
es
mov
pop
adc
mov
pop
mov
loopne
xchg
int3
hlt
and
or
sbb
pop
pushf
clc
out
xchg
mov
repnz
pop
out
or
inc
xlat
cmp
rorb
ret
sub
out
pop
add
mov
imul
push
xchg
adc
jo
shl
dec
shrl
xor
leave
jnp
ss
mov
xorl
xorl
cld
insb
loop
rorl
or
mov
shl
sub
sbb
sbb
scas
cmpsl
push
fstpt
jg
icebp
and
pusha
ss
xchg
push
das
stc
fstl
iret
enter
push
mov
push
mov
push
mov
xor
mov
out
les
jo
lods
add
ret
add
mov
divl
addr16
jb
leave
sub
lock
or
mov
mov
xor
mov
mov
inc
andb
ret
sbb
rcrl
mov
dec
loope
adc
lcall
and
mov
adc
adcb
pop
mov
addr16
or
jle
cmp
push
es
div
ja
fistpll
in
mov
xor
sub
jns
cmp
or
sbbb
aam
or
push
test
jge
pop
sub
dec
xor
test
fucomp
insl
pop
add
xor
xchg
or
dec
xchg
fwait
jne
cwtl
adc
adc
fidivrl
out
jo
ss
jl
dec
cmp
imul
insb
push
out
pop
cld
arpl
pop
mov
and
jmp
push
push
or
mov
popf
xchg
push
fisttpl
inc
pop
jl
inc
xor
mov
cli
mov
jl
add
subl
jno
daa
out
idivl
insl
out
sub
sub
das
jno
xchg
push
daa
mov
push
dec
inc
add
pop
call
call
mov
push
or
and
cmp
dec
mov
push
sub
cmp
xor
pusha
test
mov
lds
add
xor
cmp
inc
jno
xlat
or
loope
mov
add
lret
cwtl
movb
psubw
cltd
repz
cmp
icebp
cli
mov
test
stc
adc
push
into
push
mov
je
shll
daa
push
fs
cmp
cmp
jecxz
or
js
jbe
mov
dec
xchg
xchg
and
mov
cmp
into
test
imul
jmp
jmp
psubw
add
push
repnz
and
mov
shl
inc
mov
iret
push
sbb
and
mov
jp
mov
arpl
repz
push
or
out
ss
adc
jg
inc
popf
int3
and
or
test
or
mov
je
aas
mov
loopne
stos
jg
pop
imul
mov
out
push
pop
pop
sbb
lds
andl
lcall
cmp
mov
add
rolb
mull
cmc
popa
popa
ret
push
leave
fisubs
daa
xchg
adc
loop
push
jp
mov
mov
lds
sub
jbe
adc
jge
in
mov
test
dec
xchg
mov
jnp
mov
mov
in
movsb
vmovshdup
cmp
loop
std
and
push
ja
hlt
inc
dec
aam
sbb
pop
jle
and
fnstsw
decb
mov
jg
push
mov
addl
dec
add
and
pop
outsl
movl
sbb
jne
push
fwait
xchg
sbb
pushf
mov
nop
cmpsl
sub
mov
inc
mov
jns
mov
imul
cmpsl
adc
fs
lock
daa
and
sub
mov
inc
aas
into
and
mov
jle
sub
and
cmp
mov
inc
rorb
and
out
and
and
les
sti
add
movsl
aas
dec
fwait
ljmp
adc
negb
aad
xchg
movnti
mov
mov
sti
inc
pop
les
cmp
jbe
mov
inc
mov
jnp
xor
pushf
cmpb
aas
push
fimuls
mov
dec
xchg
dec
pop
ds
xor
xor
push
cmpsl
shlb
cmp
fucomp
mov
xchg
or
lods
push
sti
push
xchg
sbb
int
loopne
mov
xor
filds
les
dec
test
test
cmp
mov
imull
or
sbb
cmc
sbb
xlat
push
loopne
ss
into
ja
adc
pop
xchg
cmp
sub
push
mov
sbb
jo
push
jmp
pop
cmp
outsl
cmovo
add
push
ds
shlb
cmp
scas
in
loope
mov
fldcw
rorl
and
je
movsl
dec
pop
sub
jno
push
push
inc
lret
ret
fs
mov
aaa
xchg
fmuls
stos
adcb
xor
push
pop
dec
in
loopne
mov
inc
sbb
inc
xchg
sbb
enter
or
push
ficomps
inc
jecxz
not
mov
mov
iret
cmp
fcoms
into
pop
jne
xchg
sbb
pop
pop
mov
inc
ljmp
imul
xor
xor
inc
mov
add
pop
dec
push
cs
push
lret
repz
scas
in
cmp
js
push
dec
or
xor
sub
rcll
jle
fstl
scas
mov
or
movsb
lea
dec
fisubs
add
inc
push
gs
xchg
mov
xchg
ret
ljmp
mov
mov
cmp
loop
add
fs
outsb
lcall
inc
movsb
pop
mov
test
sbb
cmpb
adc
psubw
jmp
pop
lret
or
pop
jns
stos
aas
push
lahf
jmp
jp
or
popa
sbb
xor
pop
xorb
push
divl
inc
movsb
xlat
xor
fisubs
int
test
dec
test
outsb
mov
mov
dec
jbe
cmp
fbstp
das
xchg
out
push
inc
inc
pop
push
lahf
aas
xchg
pop
inc
in
in
cmp
out
dec
xor
gs
ljmp
push
xchg
jns
xor
push
mov
ja
xchg
test
cltd
fistl
mov
imul
xor
pop
pop
pop
aaa
inc
dec
dec
mov
fildll
insl
and
jmp
add
adc
int3
fwait
mov
test
loopne
dec
roll
loopne
mov
nop
or
dec
pop
xor
lods
push
and
je
scas
daa
inc
fstps
pop
mov
mov
jnp
insl
repnz
ficompl
lock
xchg
pop
popf
and
popf
fisttps
or
sti
inc
sub
sbb
bound
bswap
sarl
cmp
and
arpl
incl
insl
fistps
fwait
push
xchg
and
pushf
ret
mov
mov
xor
aaa
int
inc
cs
xchg
dec
xor
add
push
pop
mov
out
cli
lcall
mov
push
push
test
movsl
jg
loop
mov
sbb
loope
add
je
clc
sub
cli
add
dec
ds
push
inc
dec
add
js
lods
mov
gs
nop
sahf
sub
mov
push
xchg
jp
nop
repnz
sbb
clc
cli
cmp
mov
pop
mov
dec
pop
mov
mov
fs
add
xlat
cwtl
fmull
das
stc
xor
stos
xchg
mov
push
int3
mov
sub
into
cwtl
sub
mov
test
xor
cs
cmp
pop
fbstp
test
xorl
orl
inc
inc
pop
inc
cmp
inc
imul
adc
lret
mov
repz
aaa
in
cmpsl
fldenv
outsb
js
shlb
pop
dec
stos
push
dec
fsubrl
mov
repnz
xchg
aam
pop
mov
xor
lods
or
pop
mov
jp
shlb
adc
in
mov
push
mov
notb
cli
pop
mov
repz
ljmp
and
test
cli
dec
pop
mov
xor
cli
int3
and
xchg
push
xchg
xchg
mov
imul
addr16
pop
mov
mov
pop
das
mov
in
xchg
and
xor
push
pop
inc
adc
or
pusha
sub
push
sub
add
ds
dec
lods
sbb
fs
and
insb
pop
lret
xor
push
inc
add
jne
lods
insl
iret
jae
add
jnp
js,pn
das
lds
push
xlat
cmp
or
ljmp
shrb
xor
mov
push
ss
or
out
adc
sbb
inc
fwait
dec
dec
xor
sahf
cmc
adc
outsl
jge
incl
shrb
inc
popf
dec
cmp
or
xor
sti
decl
lea
inc
adc
dec
dec
out
lds
pop
mov
in
movsb
fistl
fbstp
movsl
es
out
and
sub
data16
jl
rorl
mov
add
xlat
fwait
or
pop
jno
pop
mov
lock
inc
and
mov
sbb
mov
fisubrs
das
inc
and
aas
pop
mov
cmp
sbb
push
push
shlb
in
idivb
test
sub
std
mov
xor
scas
jg
dec
sbb
sbb
inc
inc
dec
xchg
dec
daa
scas
mov
mov
adc
pop
sti
mov
sub
dec
aaa
inc
jp
xlat
rcll
xchg
xchg
sbb
into
adc
test
imul
aam
inc
xchg
or
out
inc
test
lahf
pop
push
shrb
lahf
mov
daa
and
adc
incl
xchg
test
daa
nop
pop
xchg
pushf
into
push
in
add
nop
lods
adc
test
aam
or
jge
test
std
mov
out
rcl
mov
cmp
jbe
aaa
pop
pop
mov
je
mov
hlt
int3
pop
push
popf
cmc
data16
dec
lock
xlat
insl
or
mov
ljmp
jae
jle
imulb
and
sub
jp
psrld
rcrl
loopne
nop
dec
xchg
aad
movsl
xor
ja
mov
dec
pop
mov
stos
in
cli
inc
cmp
xchg
lahf
cmp
inc
orl
and
push
clc
pushf
hlt
mov
cmp
push
xchg
push
xor
cmpsl
cli
lret
adc
fadds
jmp
rorb
mov
in
push
leave
sub
inc
jl
js
xlat
ret
adc
bound
dec
jle
scas
divl
sub
push
int
xlat
hlt
rorb
add
mov
jae
clc
rcrb
sbb
mov
xorb
mov
cld
fucomip
pop
loope
xlat
cmp
or
adc
fnstsw
stc
inc
sbb
lcall
add
mov
add
add
xchg
dec
fsubrs
cltd
rol
inc
sub
add
pop
jae
loope
mov
shrl
xor
mov
mov
sbb
cmp
or
xor
jb
pusha
arpl
iret
inc
xchg
out
sub
enter
in
jo
push
jo
test
stos
dec
imul
cmpsb
pop
sbb
add
jecxz
and
jnp
inc
dec
lret
popf
ret
and
psubb
mov
in
cli
mov
push
insb
jle
mov
fnstenv
jo
out
mov
dec
xchg
push
fcmovne
fsubrl
mov
cmp
mov
in
xor
sbb
or
stos
dec
or
mov
or
xor
and
fildll
je
scas
push
icebp
push
stos
pop
adc
xor
mov
dec
mov
mov
repz
clc
in
push
jno
and
mov
enter
jge
mov
xchg
dec
xchg
jge
add
mov
scas
les
or
icebp
xchg
mov
lods
sbbl
inc
in
imul
in
cmpsb
sub
sub
test
mov
sahf
int
cmp
into
and
mov
jns
xorb
or
jl
jb
mov
mov
or
scas
and
add
mov
js
icebp
sub
lcall
xchg
xor
ljmp
sub
mov
xchg
sub
cwtl
lahf
add
repnz
adc
rcrb
pop
sub
jmp
lds
push
cs
pop
inc
inc
adc
popa
sub
jmp
data16
pop
cmpsb
xchg
inc
fisttps
adcb
add
addr16
inc
ret
adc
and
std
std
adc
lret
sub
int3
mov
xchg
pop
mov
and
xor
or
lods
bound
cmp
mov
popa
pop
jle
cmp
inc
inc
inc
pop
fidivs
inc
xor
mov
pop
jmp
mov
mov
shll
lea
mul
push
inc
dec
and
in
popa
pop
or
inc
cmp
adc
sbb
lds
test
sub
and
lds
mov
flds
aam
out
or
dec
mov
jmp
or
pusha
push
lret
and
inc
outsl
scas
jp
scas
arpl
mov
xor
cmp
jge
test
inc
scas
into
jbe
imul
dec
mov
push
adcl
test
push
les
scas
cmp
cmpsb
ret
jecxz
adc
sbb
js
push
out
pop
lds
mov
xchg
sbb
fsub
popf
sbb
mov
test
mov
jo
or
rcl
and
pop
lahf
pop
push
lcall
das
push
cmp
xchg
int3
movsb
sub
push
cld
mov
outsl
imul
jmp
or
jge
cld
dec
sub
in
test
mov
gs
aad
dec
jae
cwtl
mov
js
mov
pushf
sbb
rcll
lock
mov
mov
add
movsl
pop
push
add
pop
stos
pop
adc
xchg
dec
mov
es
jge
mov
mov
xchg
push
fcompl
mov
ljmp
cmc
negb
fnstenv
insb
fldenv
decl
mov
popf
fisttpl
hlt
aas
rclb
jb
dec
mov
inc
push
pop
aas
lods
scas
and
sub
pusha
mov
jecxz
xorl
mov
lahf
enter
adc
jp
lret
push
imul
or
mov
xlat
push
aaa
cmp
pop
mov
cmpb
shll
inc
or
in
cmpsb
test
adc
stos
pop
push
out
cld
or
or
fstpt
ficoms
mov
xchg
inc
rol
outsb
dec
clc
jge
push
xor
jbe
cmp
push
or
mov
mov
popf
mov
inc
jmp
mov
addl
sbb
daa
fidivrs
fistl
les
jbe
pushl
pop
lahf
lcall
push
mov
and
xor
or
xchg
mov
jnp
and
jg
dec
xlat
adc
je
int3
jmp
jmp
pop
inc
lock
push
lcall
or
in
iret
insb
inc
cmp
push
xchg
test
pop
cmp
out
movsl
in
sti
jnp
jne
in
sti
mov
cmp
adc
cmpsl
inc
mov
mov
imul
bound
testb
mov
xor
pop
mov
xchg
ljmp
js
fcomps
imul
push
cmp
or
repz
inc
xor
mov
jle
pop
push
popa
into
jnp
mov
mov
push
inc
aaa
xor
shlb
jg
sbb
dec
push
movsl
inc
jae
sbb
push
add
dec
xchg
add
push
shl
xchg
jmp
sub
ljmp
jne
lcall
je
cmpsb
adc
sbb
adc
push
pushl
lcall
test
mov
aad
jp
icebp
mov
fs
gs
push
vmwrite
sbb
in
dec
jnp
movb
stos
std
rclb
jne
cwtl
popa
enter
lret
test
lahf
add
jle
add
lods
mov
cmp
pop
les
cld
xchg
add
xor
sti
dec
ret
xlat
mov
enter
sti
sbb
cld
inc
shll
int
pop
popf
inc
pop
into
fadd
pop
or
sub
lods
xchg
cwtl
fcompl
mov
lret
mov
pop
jmp
mov
js
notb
pop
addr16
push
adc
int3
mov
jge
vprotd
or
mov
mov
xchg
mov
adc
xchg
sbbl
sub
push
popf
push
jbe
sub
jae
xor
fcomi
loope
jmp
xor
pop
pop
je
or
adc
lret
cld
pop
sar
ret
in
xchg
cmp
scas
dec
std
cmp
push
pusha
xchg
pop
nop
lret
cmp
rcrl
rorl
jne
mov
fdivr
sbb
mov
test
fisttps
dec
inc
sub
push
cmpb
lock
bound
push
pop
push
xor
push
sub
daa
cmp
push
jp
mov
aaa
gs
jo
pop
adc
inc
js
lea
jl
movsl
jbe
xchg
or
js
frstor
cmp
outsl
cmpsl
cmp
push
push
jnp
mov
mov
dec
xchg
pop
mov
mov
ror
gs
jg
push
dec
sbb
inc
adc
and
cs
jne
sub
pop
push
mov
rcrl
adc
test
ss
imul
outsb
lds
fwait
mov
lds
cli
lret
and
push
or
push
and
ret
lea
hlt
and
inc
fiadds
mov
shlb
fmulp
xor
push
lods
push
lahf
out
divb
test
lds
add
pop
sub
adc
jno
mov
xor
sub
sub
mov
adc
int
mov
call
clc
cmp
mov
jae
jp
or
pop
daa
push
push
clc
cld
shl
lea
sarb
inc
mov
mov
pop
mov
pop
inc
imul
dec
or
adc
call
shl
dec
hlt
ds
ret
pop
aam
insl
outsl
outsb
ror
dec
in
mov
mov
mov
imul
and
push
xchg
stc
push
std
scas
aam
decb
or
xor
rcrb
out
dec
shlb
or
cmpsl
outsl
lods
insb
shrb
push
adc
test
movsl
rorb
jge
in
cmpb
xorl
cld
icebp
es
push
daa
push
test
mov
lock
mov
mov
cmpsl
and
fisttpll
add
hlt
insl
shrb
imul
aad
in
out
sarb
fs
adc
jmp
mov
mov
mov
push
test
out
adc
enter
inc
les
cmp
xor
sub
sbb
int3
cmpsb
adc
sbb
ss
mov
clc
fcmovne
push
pushf
add
faddp
xchg
test
cwtl
and
pop
jno
sub
dec
insl
loopne
sub
imul
cmpsb
inc
inc
iret
das
insb
xchg
mov
dec
pop
add
sub
scas
mov
mov
pop
mov
mov
gs
jo
out
pop
push
outsl
and
rcr
icebp
daa
sbb
mov
dec
mov
daa
inc
pushf
shl
popa
xchg
movsl
pop
out
push
pop
jnp
mov
stos
adc
mull
dec
mov
fcoml
fwait
stos
loope
js
fxch
and
repz
scas
mov
loope
xchg
std
popf
mov
sub
mul
cld
dec
fwait
stos
xchg
sub
add
mov
mov
es
pop
ret
mov
cmp
or
scas
pop
cwtl
push
mov
sub
xor
fdivrs
sub
scas
inc
pop
jmp
mov
and
aam
pop
adc
cmp
jo
pop
mov
mov
jg
mov
popf
shrb
jg
mov
and
dec
out
dec
mov
cmp
mov
testl
cmpsl
dec
mov
call
add
std
cli
outsl
fisubrl
adcb
jae
and
repz
hlt
xchg
pushl
test
pushw
rcrb
repnz
fildl
push
sub
pop
or
pop
dec
add
test
pop
aad
repz
icebp
in
dec
jns
clc
cmp
aad
add
mov
sub
xchg
add
leave
dec
push
dec
movsb
mov
aaa
nop
repnz
push
mov
push
push
xchg
popf
push
out
clc
dec
sub
das
mov
dec
out
sbb
add
repnz
inc
mov
inc
mov
sahf
std
pop
xor
inc
lret
cmc
sbb
xor
repnz
jecxz
or
mov
dec
push
insb
out
push
sbb
nop
adc
movsl
xchg
sub
mov
test
add
xor
daa
inc
mov
inc
xor
push
clc
sbb
push
cwtl
mov
mov
push
sbb
mov
add
sub
mov
pop
sbb
jb
outsl
xchg
inc
inc
lock
and
pop
jnp
aas
xlat
mov
stos
cmp
rorl
fwait
jle
mov
adc
cmp
dec
inc
push
jp
out
aaa
xchg
or
dec
pop
xor
icebp
repz
dec
shrl
jecxz
xlat
pop
mov
push
dec
inc
sub
xchg
lret
nop
and
push
pop
xchg
sub
push
scas
aas
mov
adc
lahf
ret
loopne
and
fisttpll
jne
cmp
and
cld
and
cmp
push
sbb
xchg
push
push
ucomiss
out
mov
xchg
mov
sub
adc
aaa
out
and
loopne
jmp
fildl
sbb
fadd
mov
mov
add
inc
inc
popf
fsubrs
sub
cmc
test
xchg
fcmovne
xchg
enter
sub
dec
mov
push
loop
pusha
mov
push
jb
mov
mov
out
inc
rcll
and
ss
mov
clc
insl
pop
pop
loop
idiv
dec
xor
cmp
movsl
or
xchg
xchg
pop
and
adc
push
mov
jae
mov
mov
ret
into
fs
lock
mov
dec
jns
ss
push
pop
push
pushf
fsubl
sub
lods
sbb
mov
xchg
cs
dec
std
xchg
fwait
into
adc
stos
int3
lcall
pop
fs
cld
jmp
loope
movsl
or
and
or
push
and
roll
add
dec
pop
push
fbld
sub
push
adc
das
loop
repnz
loopne
mov
mov
adc
xor
lds
mov
imul
outsl
les
icebp
imul
cltd
hlt
jns
js
xor
fisttps
fsubl
in
and
xor
daa
popf
lds
mov
cwtl
dec
mov
pushf
fwait
mov
xchg
test
mov
into
mov
inc
jmp
dec
sbb
out
dec
lahf
stc
xchg
iret
jne
mov
push
ret
outsl
inc
dec
jb
sub
int3
stos
add
rcll
cmp
xor
push
test
dec
sbb
cltd
cmp
xor
or
xlat
mov
rclb
adc
adc
mov
lret
dec
push
and
out
ljmp
cmp
clc
cmc
jl
mov
mov
jno
xchg
cmp
lods
fstpl
out
out
jp
or
cwtl
orl
jnp
jmp
pop
pusha
aad
mov
jne
and
lahf
mov
leave
mov
adc
out
xchg
mov
cmpsl
mov
and
cmp
call
mov
inc
sahf
dec
imul
inc
hlt
int3
jl
mov
sarb
xchg
or
inc
cmp
mov
sub
or
aaa
test
dec
inc
leave
sub
xadd
pusha
ret
xor
fwait
negl
mov
and
inc
add
mov
cmp
or
testb
jns
push
insb
repz
xchg
cmp
push
jb
pop
rolb
hlt
enter
icebp
repz
cmp
out
mov
in
shll
pop
push
out
sbb
movsl
push
xchg
rcrb
jae
fcompl
loope
xchg
inc
stc
jnp
fmuls
test
stc
mov
xor
out
mov
xchg
pop
push
sahf
call
lea
cmp
into
xchg
sbb
mov
cmp
enter
sub
xchg
cmpl
inc
lods
inc
jge
movsl
dec
movsl
push
push
dec
xorl
mov
and
cmpsl
xorb
inc
sub
std
loopne
pop
les
jb
aaa
adc
dec
pop
cmp
pushf
sbb
or
add
les
into
sub
daa
pextrw
adc
lods
inc
repnz
fnsave
out
cmc
add
clc
cmp
lock
dec
cmpsl
outsl
rclb
mov
or
in
add
es
mov
dec
fdivrl
loopne
push
mov
out
loopne
inc
adc
mov
sub
mov
or
xchg
and
mov
jmp
stos
and
pop
lock
movb
jge
push
jp
sbb
or
je
sub
cmc
into
mov
cmpsb
cmc
or
mov
push
or
pop
mov
add
cmp
push
xchg
mov
aad
dec
mov
cmp
sbb
pushf
cld
sub
adc
push
bound
fcoml
in
addr16
and
inc
aad
xor
add
out
cmp
hlt
add
outsl
in
ret
inc
mov
xchg
xor
inc
pop
inc
jecxz
popa
lods
jno
out
pop
mov
mov
adc
and
or
pop
imul
fnsave
and
cwtl
dec
jnp
jmp
xor
mov
sbb
test
jle
lcall
loope
cli
sub
in
mov
sbb
sub
cmp
loop
int
fnstcw
outsl
jae
std
shrd
loopne
popa
sar
fidivl
cmp
pop
or
rcr
xchg
jns
fildl
shlb
xor
fidivl
shrl
ret
dec
fldenv
or
test
jne
stc
jecxz
inc
in
addr16
loope
pop
test
adc
loope
push
dec
sub
stc
fstp
hlt
scas
fstps
pushf
cmp
dec
call
push
fldcw
jne
and
push
imull
lret
scas
insl
mov
push
neg
aad
add
inc
dec
mov
das
outsb
and
scas
sub
add
push
outsb
popf
jge
xlat
add
fwait
cmpsl
cli
sub
push
into
and
push
and
ja
push
inc
adc
fidivrs
jno
mov
pop
lods
sti
roll
repnz
push
inc
lods
hlt
lahf
adcl
fbstp
std
jle
pop
stc
push
or
add
daa
mov
pop
lret
repz
into
movsb
outsl
sbb
jecxz
insl
lods
das
stos
jle
test
call
loopne
or
dec
in
or
dec
popa
xchg
inc
add
mov
pop
aaa
imul
jnp
pop
xor
xchg
ret
iret
in
andb
add
insb
fnstcw
jno
decb
jbe
in
in
xchg
test
mov
mov
mov
scas
sub
sub
lret
sbb
call
pushf
inc
add
lea
push
pop
pushf
mov
scas
jecxz
cltd
int
ja
imul
lret
push
dec
xchg
pushf
sbb
jnp
jle
and
dec
dec
cmp
insb
xchg
jle
lds
mov
add
repnz
xchg
hlt
pop
cmpb
hlt
or
dec
xchg
or
xor
lret
fcoml
push
or
fdivrl
in
lahf
pop
lret
out
lret
mov
fisubs
dec
adc
cmc
add
inc
rorl
or
fdivs
sbb
aas
mov
sbb
xor
adc
add
mov
mov
inc
lods
mov
mov
inc
cmp
addb
push
or
das
jo
add
outsl
lds
es
jbe
push
dec
cmp
stos
ljmp
int3
lcall
and
pop
and
jle
pop
xlat
sarb
lock
leave
mov
push
pop
aam
push
loop
sub
in
jg
outsb
sbb
mov
jge
pop
sbb
xchg
fldt
pop
icebp
sub
div
sar
iret
clc
mov
sbb
xchg
mov
scas
push
aad
cmp
repnz
mov
aaa
pop
cmp
sti
out
std
loopne
xchg
cld
or
lret
push
adc
mov
div
subl
inc
stos
xchg
les
or
mov
dec
cltd
inc
repz
pop
ret
data16
lods
pop
xchg
jno
mov
dec
popf
ficoms
jno
mov
test
or
push
mov
mov
adc
dec
into
loopne
stos
push
xor
adc
push
subl
add
pop
sub
pushl
pop
ja
jae
add
and
testl
popa
js
and
cmp
sti
sub
jmp
pushf
aaa
jb
sahf
test
push
xchg
arpl
scas
pushf
pop
xchg
enter
adc
daa
sbb
cmp
pushf
aaa
inc
push
jmp
addr16
jecxz
divl
pushf
test
pop
and
into
lea
fs
push
push
fmull
mov
scas
incb
in
in
leave
add
orl
jns
sub
mov
call
in
xchg
cli
ss
mov
jmp
add
sarb
push
jbe
lret
fldenv
xlat
push
fsubr
jecxz
fsubl
imul
xor
cmp
cmp
into
push
push
icebp
mov
and
mov
je
cmp
hlt
jmp
loopne
dec
dec
negl
cld
mov
mov
jno
adc
scas
fxch
cmp
dec
mul
std
leave
adc
call
and
das
push
xchg
shlb
pop
cs
sub
inc
jb
sub
sub
mov
pusha
cmp
cmp
and
stc
mov
lods
ds
jno
adc
subl
dec
mov
pop
sbb
jae
xor
and
scas
xchg
imul
push
add
ret
inc
jae
repnz
mov
sub
fildll
pushf
clc
cmp
fs
mov
xor
lds
fmuls
jbe
lea
jbe
jno
mov
lock
sub
adc
mov
push
int
mov
in
in
mov
xchg
and
rorb
or
xor
inc
outsb
push
mov
cwtl
bnd
bound
jge
inc
cs
stos
or
xor
int3
add
mov
jmp
sarb
mov
ljmp
or
data16
ret
and
cmp
dec
cmp
sub
aaa
jno
sub
into
push
xor
jl
arpl
pop
ljmp
jmp
test
inc
cmp
or
sbb
mov
pop
or
lock
jmp
xor
rcll
nop
sub
lea
cmp
into
mov
add
pop
dec
out
addr16
fwait
and
or
shll
and
in
xchg
aas
jbe
dec
adc
pop
out
pushf
cmp
mov
add
and
popa
and
lret
sub
in
loopne
xchg
dec
fisttpl
mov
pop
add
mov
lea
or
mov
ret
pusha
mov
outsl
fildl
mov
xchg
add
faddp
outsb
test
jbe
cmc
jb
pop
mov
outsb
shr
loop
sbb
mov
into
imull
stos
mov
push
pop
jp
mov
push
cmp
fidivs
outsb
jo
test
clc
add
imul
outsl
das
cmp
jno
mov
nop
lahf
leave
push
pop
push
sub
mov
add
cwtl
push
push
shr
fstl
and
lods
mov
jae
push
rcrl
fstl
movsl
scas
pop
or
adc
add
jo
out
jb
push
imul
jo
aam
cld
xchg
add
shrb
lock
or
repnz
mov
sbb
inc
test
xchg
ljmp
jne
and
scas
lahf
repz
pop
and
xchg
jb
sbb
mov
pop
lahf
sbb
sub
insl
das
ja
xchg
cmp
lret
add
aas
rolb
aad
xchg
pushf
sub
dec
aad
xchg
xchg
xor
not
xchg
add
or
std
sub
hlt
jecxz
mov
movb
js
movsl
sbb
mov
pop
mov
popf
testl
nop
cmp
outsl
adc
jg
cmp
pop
into
icebp
enter
pop
out
xchg
xor
jo
sbb
push
arpl
cmp
adc
jmp
imul
cs
xor
add
sahf
fsts
cmp
mov
mov
sahf
push
or
outsl
jp
jp
mov
pop
or
jns
in
inc
adc
pop
mov
jle
add
sbb
cmpsb
rol
inc
leave
movsl
cli
pop
orb
pop
loop
pop
add
or
jp
iret
fs
cs
stc
mov
mov
in
into
and
inc
jno
push
dec
dec
push
adc
bnd
xchg
cmp
nop
pop
test
cmp
sbb
les
cmpsl
call
lea
cwtl
insb
inc
repnz
out
addl
jns
add
and
negb
pusha
mov
call
adc
mov
fs
cs
pop
shrl
mov
xchg
subl
inc
lahf
push
fidivs
out
or
rcrl
iret
or
mov
les
out
xor
mov
fwait
movl
mov
loopne
xchg
sub
mov
add
fsubp
pop
push
sub
jne
fsubs
decb
jae
js
dec
leave
mov
xchg
in
mov
mov
mov
in
mov
pop
push
into
test
arpl
push
movsb
mov
sub
cmpsl
mov
add
je
fidivrl
int3
adc
dec
aad
mov
mov
dec
xchg
lods
mov
and
addr16
stos
das
test
mov
shlb
lds
cs
sahf
lea
cmp
lods
sub
test
mov
ss
jmp
push
push
xor
or
out
inc
lret
in
inc
pop
xchg
loop
repz
sbbl
or
pop
push
xchg
pop
sbb
sahf
xchg
loope
ss
fwait
ss
mov
xor
mov
or
dec
icebp
sbb
xchg
out
sbb
cmpsb
and
enter
push
fs
mov
dec
xchg
sub
add
cmpsb
add
pop
arpl
test
imul
loop
sub
and
negl
cmp
push
add
pusha
fsubrs
fdivrp
jecxz
jl
xlat
mov
aaa
pop
adc
out
jge
jecxz
pop
rep
cli
int3
cmp
xor
pop
scas
rcr
lods
fs
sbb
into
ds
mov
jmp
push
subb
fwait
jg
in
jecxz
cmp
call
fstl
xchg
into
enter
fldenv
mov
repz
add
les
or
pop
push
cwtl
xlat
aaa
push
movsl
push
test
dec
cmc
scas
push
dec
das
icebp
and
pop
js
lcall
mov
stos
aam
iret
xchg
mov
lods
mov
adc
mul
es
pop
pop
mov
mov
jg
in
fs
imul
sub
fists
xor
pusha
aas
fsts
ljmp
push
mov
movsl
in
lret
xchg
addr16
inc
jnp
mov
jmp
cli
cmp
movsb
test
cmp
out
jmp
xchg
in
add
cmova
data16
and
add
mov
sub
mov
xchg
inc
nop
out
sub
cwtl
ljmp
aaa
xchg
inc
and
sbb
pop
repnz
imul
dec
add
adc
rcr
dec
jns
scas
test
push
mov
cmp
andb
adc
jg
aad
dec
cmp
aam
and
cs
inc
adc
movsb
sbb
lds
icebp
dec
add
pop
enter
fs
outsb
mov
mov
fcmovnu
add
int
inc
lahf
daa
movsl
push
cmp
inc
jg
orl
jno
dec
sbb
popf
rcrl
stos
insl
stos
mov
inc
movsl
mov
pop
xchg
sar
lret
sbb
xchg
cmp
or
imul
loopne
cmpsb
in
add
and
subl
or
adcl
inc
push
arpl
or
mov
scas
pop
push
icebp
hlt
cmpsb
fsubrl
jnp
push
movsb
xor
cld
test
mov
test
ret
pop
sub
pop
mov
and
mov
mov
push
mov
pop
jo
push
add
imul
repnz
lds
jle
hlt
sbbb
sti
les
sbb
add
jnp
fiaddl
enter
negl
es
pop
adc
mov
lock
pop
mov
out
adc
lods
in
pusha
mov
test
dec
sbbl
mov
testl
int
stos
lods
or
push
sbb
roll
sti
icebp
arpl
mov
lods
bound
andb
add
dec
sub
int
xchg
js
add
ds
outsl
mov
pop
mov
jg
outsb
xor
sahf
pop
jnp
mov
push
cwtl
pop
lret
xor
dec
mov
insl
or
cmpsl
insb
xchg
iret
mov
jmp
xchg
inc
mov
aas
into
pusha
adcl
and
jae
stos
int3
pop
ljmp
mov
rcll
shlb
inc
jmp
enter
pop
fdivs
push
das
jecxz
decl
outsl
lcall
adc
pop
or
or
cld
push
inc
loopne
pop
imul
xchg
mov
push
imul
push
cmp
rorl
add
sahf
bound
sbb
enter
dec
sub
lret
mov
or
divb
call
inc
or
lds
mov
pop
cmp
bound
mov
aas
jmp
insb
xor
data16
lds
push
lods
or
cmpsl
test
mov
fs
mov
pop
hlt
in
xchg
fcom
sbb
mov
pandn
sbb
bound
push
xor
leave
shl
mov
inc
inc
mov
add
inc
jae
mov
scas
popf
and
rorl
add
dec
lahf
mov
mov
ret
sbb
xor
pop
pop
mov
shll
mov
dec
int3
mov
mov
das
add
mov
leave
out
xchg
jae
out
xchg
push
cmp
xchg
jbe
xor
adc
mov
mov
push
adc
into
fs
push
push
pushf
mov
pop
jp
pop
adc
jb
leave
add
idivb
stc
dec
pop
adc
movsl
jmp
mov
mov
xor
mov
jecxz
popf
int3
push
ljmp
mov
mov
mov
adc
sbb
int3
jno,pn
adc
mov
sbb
fmull
jp
and
jge
ficoms
mov
mov
mov
out
fisttps
out
into
fwait
insl
fimuls
out
addr16
cmp
adc
xchg
fisubrs
sub
into
push
out
mov
add
into
sbb
cmc
scas
jle
pusha
sbb
adc
adc
xlat
xor
lret
lock
mov
data16
imulb
or
loope
cmp
mov
lcall
dec
in
adc
and
lea
lret
lcall
mov
popf
and
sbb
aad
sbb
lcall
fldpi
mov
inc
pop
lods
sbb
inc
pop
popa
xchg
enter
stos
xchg
in
adc
or
pop
mov
or
mov
fstps
pop
pop
jge
and
stos
pop
mov
loopne
jle
aaa
lock
jp
decb
dec
repz
daa
mov
mov
mov
iret
movzwl
add
push
inc
push
mov
adc
xchg
sbb
cmpsl
test
adc
test
fcoms
pop
pop
xchg
or
fcomp
loopne
xor
mov
add
push
repz
push
push
out
arpl
stos
sbb
cmp
xlat
cmc
xor
jbe
sub
mov
xor
ret
inc
cli
sbbl
push
xchg
pop
adc
fwait
pusha
adc
xchg
mov
sub
imul
xor
mov
sub
cmp
push
and
pop
movsl
sub
stc
fdivrl
sbb
push
sbb
repz
ret
or
pop
dec
out
sub
lds
mov
loopne
or
jg
dec
xchg
lahf
inc
xchg
xchg
cmp
sbb
sbb
mov
inc
movsb
scas
out
dec
test
aas
mov
imul
jbe
pop
add
jge
mov
or
jge
inc
cmc
xchg
and
jbe
push
insl
loop
push
push
aas
sbb
and
mov
dec
fiaddl
outsl
jns
repz
sub
daa
js
push
sbbb
insb
jl
pop
jno
sbb
enter
jne
lea
dec
add
ret
leave
lds
jg
ds
adc
leave
fstpt
pop
jb
ja
pop
aad
and
mov
subb
clc
dec
jo
pop
jae
shrl
xor
ret
sub
repz
adc
push
mov
jge
gs
jo
and
jb
sbb
int
inc
mov
aaa
test
or
push
call
mov
and
lods
mov
hlt
or
fcoms
cmp
cs
inc
jp
pop
mov
test
cmc
cmp
push
out
mov
sub
nop
inc
adc
inc
lahf
ds
cwtl
adc
repnz
outsl
push
pop
addr16
mov
hlt
insb
jbe
xor
popa
inc
jecxz
mov
sbb
imul
sbbl
add
mov
int
jp
pop
sbb
mov
sbb
arpl
out
inc
xor
push
jo
ficomps
xor
pop
sti
or
lock
push
cltd
sbb
repz
mov
adc
bound
and
inc
iret
rcll
in
ds
xchg
mov
add
cmp
xchg
ret
push
mov
dec
inc
and
testl
cmp
inc
add
test
test
shrb
jmp
jg
pop
test
push
lods
mov
fnop
xorl
das
insl
das
ficomps
push
mov
scas
iret
mov
jp
or
xor
ret
xchg
push
frstor
xor
mov
out
dec
or
mov
pop
lock
push
int
push
test
and
shll
dec
push
or
test
in
gs
fidivrl
es
in
leave
test
test
push
sbb
sti
cmpsl
rclb
push
aad
mov
add
cmpl
bound
and
push
stos
jecxz
in
movsl
jmp
mov
sub
dec
inc
incl
cmpsl
incb
test
sub
repz
jbe
cmp
fsubrs
push
mov
cli
lret
xor
jns
or
mov
mov
aaa
pop
fucomip
scas
das
inc
enter
dec
insb
jns
sbb
and
or
xchg
dec
add
inc
in
ja
add
jb
in
sbb
adc
xchg
lret
cmp
loop
push
xor
divb
popf
mov
out
mov
cmp
sub
in
sbb
stos
jbe
cmp
mov
pop
mov
mov
rol
stos
dec
repz
jns
lods
pop
fcompl
imul
std
sub
arpl
push
mov
xchg
inc
enter
dec
sub
fidivs
push
ljmp
outsl
mov
movsl
dec
inc
adcl
push
out
and
xchg
push
stc
push
xchg
rclb
mov
or
mov
cltd
lock
inc
aad
dec
add
sbb
pop
push
xchg
clc
or
xor
jg
ss
mov
push
sbb
jle
orb
dec
stos
imul
lds
jl
fxch
or
dec
pop
loope
orl
mov
sbb
or
adc
push
jns
les
in
scas
xchg
test
sub
jp
stc
int3
loope
fsubp
mov
lcall
dec
testb
and
popf
js
in
popf
pop
inc
cmpsb
push
sbb
push
in
pop
repz
movsl
outsb
in
loope
outsb
imul
mov
rolb
xchg
or
pusha
clc
and
jns
pop
jmp
aad
push
cs
jb
fisubl
les
jg
or
push
fs
rclb
dec
addr16
rcl
pop
cmpsl
xor
jb
push
add
xor
filds
hlt
mov
inc
xchg
pop
fsts
and
sub
mov
adc
lcall
loop
dec
push
sub
push
push
or
cmp
adc
and
sbb
xchg
xorb
les
imul
sti
xchg
in
movsl
mov
fisubs
fbstp
push
cltd
push
outsb
std
jecxz
pop
test
mov
clc
out
add
and
int
jle
jmp
jmp
sub
in
jno
dec
rorl
clc
inc
int3
sbb
inc
dec
or
mov
fbstp
out
mov
pop
mov
mov
xor
sub
ds
fs
pop
rcl
mov
adc
imul
cmc
shll
les
sub
int
lods
jge
dec
xchg
or
fwait
call
xor
or
es
xchg
and
mov
inc
lods
or
out
cmp
in
and
insb
out
sar
xor
bndstx
add
je
in
pusha
jg
pushf
repz
dec
in
sahf
xor
enter
fistl
mov
insb
pop
shlb
push
pop
pop
adc
out
rclb
push
fwait
jb
mov
xchg
jne
xor
inc
in
sets
mov
gs
test
test
aad
push
addr16
xchg
arpl
mov
and
mov
icebp
mov
mov
mov
push
xchg
xor
mov
pusha
orl
in
and
test
fld
movsb
push
jo
mov
cltd
adc
add
sbb
mov
mov
mov
pop
add
daa
push
loop
pop
mov
orb
jg
out
inc
sbb
outsb
mov
mov
jns
aad
adc
push
add
xchg
sub
popa
iret
mov
scas
lods
stos
sti
les
xlat
mov
xor
addr16
rcrl
lret
xchg
pop
add
daa
xor
push
pop
cmp
out
inc
jl
ljmp
sti
inc
pop
sub
scas
xor
or
xchg
cs
inc
nop
push
jbe
adc
mov
loop
push
arpl
mov
or
call
in
mov
push
xor
inc
lcall
sti
push
shr
les
mov
loopne
adc
pushf
sbb
cli
pop
movsl
xor
adc
push
dec
add
add
gs
pop
loop
shrl
xchg
nop
test
mov
xchg
or
jo
pop
push
mov
lods
loope
push
test
lods
jns
loope
pusha
push
rorl
mov
cmpsl
inc
push
leave
jno
xchg
xor
push
mov
mov
pop
sbb
cmpsb
clc
pop
pop
push
test
sti
int3
insl
add
sub
inc
std
lea
fs
mov
test
mov
fldenv
jnp
cli
cmp
push
xchg
mov
jmp
push
movsl
fs
pop
jl
mov
pop
mov
dec
out
scas
mov
gs
push
bswap
dec
lcall
pop
mov
and
pop
pop
push
repnz
lcall
nop
mov
inc
lods
xchg
bswap
jo
pop
bound
push
lods
fcmove
sbb
xor
inc
mov
mov
lock
mov
xor
testb
dec
push
das
xchg
adc
aam
pop
adc
aaa
popf
cmp
jp
cmp
idivb
pop
je
cs
add
test
mov
pop
mov
scas
ja
std
inc
aaa
xor
cli
call
mov
xchg
aam
inc
sub
imul
mov
push
ret
cmc
jne
mov
test
lods
std
scas
pop
inc
icebp
push
lea
jo
dec
lahf
mov
push
movsl
jmp
aaa
push
jge
lock
sahf
bound
add
fdivrs
mov
outsl
push
test
adc
mov
and
in
dec
mov
adc
ds
iret
sbb
fdivs
mov
adc
ja
hlt
out
jg
fldt
idiv
rcrb
cmp
lcall
mov
test
sub
mov
jns
in
jmp
jp
mov
mov
lods
or
or
cs
enter
pop
cmpsb
jp
call
push
or
fisubrl
sub
iret
cmp
mull
mov
enter
testl
mov
pop
jae
inc
daa
cmpsl
test
adc
cmp
shrb
addl
jmp
in
in
test
jne
test
popf
mov
cmp
push
jmp
sub
lods
leave
lds
xlat
mov
hlt
inc
imul
shlb
outsb
loope
or
push
mov
adc
cmp
ja
decb
jge
lods
fisubl
xor
push
gs
in
add
iret
scas
xchg
scas
mov
mov
dec
out
pop
pop
std
mul
inc
adc
dec
xchg
imul
inc
xchg
call
inc
xor
inc
mov
scas
std
dec
test
nop
cmpl
mov
push
insl
mov
jg
fimull
xchg
sub
push
into
insb
fcmovbe
pop
test
inc
sub
into
and
cmp
hlt
push
sti
adc
jnp
mov
in
ret
inc
dec
nop
xchg
and
shlb
iret
jmp
cli
xchg
and
mov
jnp
add
gs
insl
loopne
inc
or
aam
pop
and
fbld
data16
mov
pop
jmp
mov
fsubs
mov
dec
pop
movsl
add
aam
inc
mov
in
xchg
mov
inc
adc
fistpll
std
lea
iret
negl
xchg
mov
loopne
push
test
leave
rclb
inc
cmp
sbb
daa
jnp
sbb
cmpsl
lret
mov
adc
mov
and
subb
fcoml
roll
in
popa
xchg
test
or
mov
and
xorb
pop
stc
movsl
mov
fwait
out
xor
cwtl
es
aaa
sti
int
into
rcr
cmpsb
sub
push
jecxz
fwait
incl
andb
leave
jne
cmp
shlb
and
or
or
ss
xor
dec
or
cmp
fsubrs
out
je
out
lods
xchg
inc
push
push
pop
xorl
and
mov
les
lcall
loopne
mull
pop
pop
inc
mov
insl
aad
add
lahf
sbb
mov
aaa
mov
mov
into
das
push
lahf
out
adc
xchg
add
dec
and
outsl
ds
imul
push
mov
jns
pushf
daa
xchg
lock
jge
cmpsb
jo
jmp
mov
setg
sahf
lock
out
and
pop
push
jmp
mov
pop
lcall
insb
and
sub
xchg
shll
fisubl
cmp
sahf
xor
daa
testl
aad
subl
inc
subl
je
adc
or
cltd
sub
push
and
test
xchg
cmpsl
pop
push
fpatan
push
aaa
xchg
mov
xor
sbb
lods
dec
mov
loop
pop
push
repz
inc
out
inc
ja
ss
clc
mov
cmp
test
push
jb
dec
dec
fstl
inc
lret
gs
loope
push
push
aas
jmp
cmp
rolb
pusha
das
pop
xchg
mov
stc
ds
pop
mov
sbb
cmp
mov
insb
aad
cmpsl
in
cmp
fnstenv
imul
and
add
insl
ret
lahf
xor
popf
out
shll
jns
decl
ficompl
xor
xchg
mov
lcall
adc
mov
push
out
stos
jae
insb
popa
cmp
bound
clc
idivb
lds
les
enter
mov
cld
fwait
clc
fwait
clc
sub
idiv
cltd
int
jge
loop
ret
fwait
pop
ljmp
call
das
and
mov
idivl
stc
icebp
pusha
sub
popl
out
sub
push
mov
pop
icebp
mov
cmp
pusha
mov
push
outsb
push
inc
push
shrl
add
adc
xchg
cmp
mov
inc
mov
mov
loope
rcl
imulb
sbb
push
mov
xor
adc
push
pop
imul
in
cli
popa
push
mov
push
mov
pop
shlb
repnz
xchg
mov
jns
fchs
push
lods
aad
int3
call
rcl
add
push
stos
jge
leave
xor
mov
sbb
in
mov
pop
dec
mov
sbb
das
inc
mov
mov
out
pushf
out
cmc
lret
add
pop
mov
lods
mov
into
mov
cmpsl
push
or
jns
and
mov
loopne
sbb
inc
addr16
mov
mov
adc
in
faddp
sbb
push
lds
xchg
fistpl
pop
xor
int
out
pop
imulb
xlat
sbb
push
dec
pop
lea
dec
cmpb
mov
sub
sub
mov
shll
sbb
dec
lods
fiadds
rolb
inc
xor
aad
andps
or
dec
or
sub
push
sub
adc
data16
mov
mov
dec
push
enter
add
loope
add
out
lds
jp
add
sbb
lret
sbb
xchg
outsl
lea
sbb
cmp
add
mov
xchg
pop
dec
es
fisttpl
jb
xor
stos
push
fiaddl
sub
mov
orl
ds
sbb
clc
faddp
arpl
pop
mov
sub
xor
insl
push
lahf
ret
test
imul
cmpsb
and
xchg
sub
mov
mov
inc
push
dec
xchg
aad
xchg
mov
in
sub
iret
mov
or
cld
xlat
mov
inc
insb
fimull
sub
jecxz
lock
fmuls
fldl
clc
or
test
jg
dec
xchg
ror
das
scas
nop
xchg
sub
xchg
pop
outsb
mov
adc
mov
aaa
jns
inc
int
mov
js
scas
jle
mov
or
movsl
mov
xor
push
lcall
shrl
mov
fstl
mov
pop
lret
sbb
jae
pop
pop
xor
mov
int3
cs
push
pushl
sbb
mov
or
add
movsl
or
xchg
dec
js
cmp
inc
jl
enter
sbb
into
add
dec
cmp
xor
mov
mov
push
es
es
pop
ret
fidivs
loope
stos
into
scas
sub
or
jnp
jbe
mov
dec
dec
or
sub
paddd
cs
ja
sahf
dec
gs
aas
xor
test
mov
pop
gs
or
sbb
or
cmp
imul
pop
mov
rorb
popf
jp
cmp
sub
add
jo
out
push
mov
fdivrl
addr16
xchg
fcomi
iret
inc
scas
es
lds
mov
sbb
fisubs
pop
push
dec
out
cwtl
in
mov
notl
mov
andl
popf
gs
add
jg
mov
iret
imul
iret
aaa
pminub
shll
int
xor
lods
lea
fistpl
xchg
lds
xchg
mov
nop
call
aam
call
jle
fldenv
inc
in
test
int3
and
cmp
out
push
fsts
jp
sbb
enter
and
stos
and
loop
lods
inc
inc
jmp
push
jle
ret
setae
cmp
loope
mov
jge
insl
or
cmc
mov
inc
imul
ljmp
fildl
jae
int
xor
cmpb
jge
sti
inc
loop
push
xchg
test
loop
aaa
xchg
dec
ja
in
pop
or
pop
sarb
ficompl
or
add
add
popa
and
push
push
loopne
out
jbe
bound
jno
hlt
sbb
lcall
push
xor
mov
push
mov
pop
cld
push
in
pop
inc
int
push
push
mov
repz
jae
xor
outsl
mov
orl
mov
sti
fs
clc
repnz
aaa
mov
xchg
mov
stos
in
xchg
sub
adc
fistps
in
mov
mov
lcall
jmp
jbe
mov
ret
lods
jle
enter
shll
rcrb
adc
mov
test
data16
ret
arpl
sub
mov
dec
cld
rcrb
sub
pop
popa
xchg
dec
mov
pop
xor
jmp
call
jno
pop
xchg
adcl
mov
or
pop
mov
dec
gs
inc
lret
adc
sbb
jae
or
adc
lret
adc
adc
dec
lea
mov
add
int
iret
fldcw
add
stc
mov
sbb
sahf
sub
dec
orl
dec
int3
push
das
ja
scas
xchg
pop
xor
cmovle
jecxz
inc
addr16
or
dec
movsl
xchg
lods
outsb
hlt
xor
adc
fstpl
mov
into
mov
xor
xlat
mov
lahf
int3
jle
sub
dec
cmpsb
push
cmp
mov
dec
pop
lock
pop
pop
jmp
add
insb
lcall
pusha
fcom
add
addb
data16
inc
pop
fstl
nop
inc
loope
or
xchg
jl
add
xchg
mov
jge
mov
mov
cmp
lea
or
sub
je
sahf
into
out
lods
mov
push
outsb
xchg
mov
push
pop
xor
ret
jmp
bnd
push
fs
cltd
push
stos
cmp
js
adc
add
cmp
loop
jl
push
fbstp
fs
loop
adc
lret
mov
sbb
jge
int3
or
dec
adc
inc
and
popf
cli
add
jle
shl
jno
cli
fiadds
popa
xchg
sbb
mov
adc
xchg
nop
add
xor
sahf
adc
jae
push
das
xor
inc
pop
std
lret
push
dec
push
xor
xor
cmp
push
xchg
nop
push
es
cmp
sbb
xchg
jg
sbb
test
mov
fs
pop
inc
xchg
push
dec
pushl
flds
adc
loopne
sbb
mov
aaa
lods
and
dec
nop
sub
int3
sar
push
mov
sub
inc
xor
call
or
sti
dec
jne
mov
xchg
pop
subl
int3
fucomip
sbb
pop
adc
pop
pop
stos
cmc
xorb
frndint
push
out
push
mov
add
ljmp
lret
leave
mov
sub
add
pusha
shlb
clc
push
adc
sub
fwait
out
sbb
cltd
fmuls
mov
mov
pop
repnz
xlat
out
xlat
in
xor
dec
rcrl
ret
cmpsb
cmp
cmpsb
add
popf
xchg
cltd
mov
or
xlat
data16
mov
sbb
pop
test
scas
sbb
stos
sub
stos
fnstsw
fcomi
or
jp
sub
cmp
imul
ljmp
fistpl
mov
push
pop
in
dec
les
imul
fidivrl
adc
out
mov
sub
inc
pop
xlat
call
xchg
add
arpl
sub
pop
gs
mov
dec
dec
cwtl
data16
fisubl
dec
pop
mov
out
mov
ss
pop
in
push
jb
cmp
aam
jo
pop
iret
mov
cli
pop
adc
in
mov
adc
je
inc
xlat
ljmp
sbb
test
jns
clc
xlat
movsb
addb
jnp
jp
cltd
inc
dec
fldt
and
xor
mov
mov
scas
lahf
insb
add
mov
jle
test
pop
nop
xor
and
lods
jb
in
scas
je
or
fimull
mov
int
loopne
es
repz
dec
mov
loope
jp
push
rcll
add
xchg
insb
pop
adc
clc
cli
push
mov
mov
or
pushl
adc
dec
push
sbb
adc
ds
or
inc
mov
mov
mov
and
ja
aaa
adc
repnz
out
mov
xchg
aaa
stos
int3
pop
js
pop
icebp
push
jno
mov
insl
jbe
xor
ret
daa
add
stos
pop
cmp
clc
pushf
loop
inc
imul
loop
or
or
rol
aaa
push
jae,pn
leave
jae
jmp
int3
inc
jnp
mov
jge
sbb
icebp
pop
stc
out
ror
ljmp
fists
repnz
das
lahf
mov
pop
daa
mov
out
ja
les
gs
inc
lds
insl
dec
xor
push
pusha
or
lods
out
mov
and
jb
cmp
adc
xchg
movsb
test
jo
aad
lret
pop
loop
ds
js
movsl
int
cmpsl
cli
adc
or
loop
inc
pop
addr16
pop
add
shl
dec
divb
dec
aas
pop
ficompl
push
insb
mov
aad
imul
cwtl
outsl
outsb
dec
and
xchg
stos
in
andb
jno
xchg
dec
jno
adc
shr
sbb
call
mov
shl
sub
aam
test
add
sbb
jo
or
mov
mov
lret
negb
ret
inc
repnz
clc
xchg
and
xor
cmpsl
sbb
jne
xor
mov
sub
mov
inc
test
outsb
mov
test
out
adc
adc
add
xchg
sub
in
outsb
mov
sbb
test
xchg
and
sbb
push
inc
push
cli
mov
push
loope
popf
and
das
leave
jl
pop
loop
mov
jno
enter
les
mov
lret
mov
dec
cltd
sub
mov
cmpsl
imul
daa
les
xchg
lcall
xchg
add
scas
pushf
xor
lahf
jmp
imul
xchg
mov
jne
mov
xchg
cwtl
or
sub
popa
lds
lret
push
and
loop
cwtl
sahf
adc
adc
dec
add
mov
repz
push
jno
mov
push
push
pop
mov
movsl
pop
pop
les
pop
mov
sbb
mov
aad
mov
jne
push
ja
xchg
mov
in
ljmp
scas
and
into
xor
cmp
mov
dec
mov
mov
xchg
pop
sahf
dec
ss
add
dec
jmp
push
dec
in
in
jns
repnz
mov
or
repnz
stos
pusha
xorb
pop
dec
lcall
jne
cmp
imulb
clc
cli
lahf
pop
pop
add
ret
hlt
aad
sti
mov
jo
pop
mov
sbb
adc
shll
mov
icebp
cmpsb
push
mov
jns
pusha
mov
mov
dec
mov
sub
fbstp
adc
mov
out
adc
sbb
daa
and
in
and
fldt
jle
jne
test
pusha
sub
loop
mov
inc
sbb
mov
rol
sbb
mov
add
test
lahf
je
into
cwtl
sub
adc
std
pop
inc
pop
xor
aas
pusha
inc
test
xor
and
add
jmp
mov
mov
adc
add
gs
mov
out
pop
fisttpl
xchg
sbb
movb
sahf
jno
mov
jp
cmp
mov
adc
xchg
xchg
leave
cmpl
pop
notb
mov
xchg
iret
negl
mov
fs
orl
movsb
pop
pop
sti
repz
xchg
sub
xchg
xor
mov
fwait
pop
mov
stos
andb
out
jo
mov
aad
or
testb
rolb
scas
in
and
adc
push
test
in
out
cs
stc
popf
roll
js
and
jmp
gs
xor
inc
cmp
push
add
addr16
mov
cmpl
or
cltd
sbb
jecxz
cmpsl
mov
pusha
dec
rcll
mov
xor
loopne
das
adc
cmp
mov
xor
sub
fwait
int3
dec
popf
lds
mull
inc
mov
mov
push
sbb
or
fsub
imul
sub
jle
mov
aam
pop
addl
mov
mov
mov
outsl
sbb
movsl
lahf
cmpsb
fildl
pop
test
dec
rclb
inc
cli
push
jp
mov
mov
in
and
movb
sub
mov
jne
mov
push
ficomps
cmp
test
ja
bound
xlat
sbb
pop
sbb
cmp
dec
inc
movsl
sbb
sub
imul
int3
dec
inc
pop
jns
or
idivl
mov
insb
pop
adc
inc
divb
xor
rolb
jmp
sti
mov
ror
adc
dec
push
sub
and
cmp
fimuls
push
insb
push
mov
and
movsl
lea
scas
lods
ja
mov
dec
dec
jg
aaa
push
pop
push
xchg
rorl
or
movsb
cwtl
mov
xchg
mov
jno
mov
rol
mov
xor
cld
mov
hlt
fxtract
pop
push
jbe
lods
cmp
pop
mov
ljmp
mov
adc
sbb
out
stos
inc
rorb
adc
fcmovnbe
inc
lahf
lea
adcl
or
jno
inc
mov
pop
mov
inc
test
pop
shr
xor
sahf
inc
int
inc
sub
mov
pop
push
sbb
test
mov
loopne
jecxz
fadds
jb
inc
test
mov
std
or
repz
push
roll
cltd
scas
in
les
imul
enter
ja
or
push
add
cmp
mov
out
pop
stos
cmp
popf
push
inc
cmp
fdivr
or
adc
jg
mov
ret
jo
xor
inc
sbb
jl
pop
rcr
inc
mov
mov
popa
sbb
orl
shll
icebp
aam
push
inc
xor
cmp
dec
lcall
cmp
cmp
gs
loop
lock
sbb
fs
xchg
xchg
and
cld
lea
sbb
repz
jo
sub
jno
or
push
or
lahf
pop
xchg
sub
or
int3
jmp
push
inc
test
pop
jmp
loopne
adcb
ret
mov
mov
inc
lds
imull
shll
cmp
jl
faddl
cwtl
push
sbbb
and
movsl
aaa
jmp
int3
xchg
ret
ds
push
add
jne
in
fcoms
or
iret
fisubs
loopne
dec
jo
add
pusha
mov
cvtdq2ps
and
inc
addl
push
mov
scas
divps
test
out
outsl
in
aaa
lret
mov
aad
jns
jo
pusha
pop
jne
fldcw
or
jp
stc
sbb
adc
rorb
xchg
sbb
bound
imul
imulb
daa
mov
sarb
sub
ror
jnp
ficoms
sbb
out
and
xor
push
es
adc
mov
stos
push
xlat
sub
cmp
add
movsb
mul
inc
scas
imul
sbb
sub
xchg
cmp
mov
jnp
outsl
pushf
or
lret
inc
call
cmp
ficompl
jb
dec
outsl
outsb
mov
jl
adc
test
mov
sub
mov
push
cmc
inc
xchg
add
sar
dec
movb
mov
scas
clc
pop
adc
inc
cs
cmpsb
jl
mov
push
scas
divb
jle
mov
push
cltd
addr16
out
pop
cwtl
aas
sbb
sbb
insl
jle
cmp
aas
and
imul
pop
adc
das
dec
loopne
xlat
movsl
mov
pop
lods
sbb
xchg
push
les
sub
sbb
fwait
test
aas
test
adc
push
loop
aaa
sar
hlt
enter
addr16
fistpll
push
lock
cli
mov
in
fwait
inc
inc
inc
xchg
add
int3
stos
pusha
xchg
icebp
push
mov
mov
cld
repz
inc
pop
das
mov
mov
adc
jmp
sarl
stc
into
notb
push
or
in
shrl
cs
xchg
mov
jbe
add
mov
pop
mov
push
testl
lock
dec
add
mov
jno
pop
dec
jne
sbb
mov
inc
loope
loope
push
mov
mov
outsb
mov
movl
aas
enter
inc
mov
lods
cmpsl
sub
mov
lods
sub
out
and
dec
enter
nop
xor
shl
cmp
or
pxor
push
les
mov
andl
clc
mov
adc
xchg
icebp
movsb
call
add
cmp
pop
test
mov
xchg
lods
mov
std
out
sub
sarb
negl
incb
sub
pop
add
mov
nop
inc
lods
jne
adc
notl
loopne
mov
cmp
lods
mov
loope
jne
mov
adc
cmpsb
cmpb
shrl
outsl
or
fwait
pop
push
adc
movsl
pop
sub
dec
push
loope
cmpsb
arpl
stos
pusha
jp
imul
push
jns
mov
xchg
ja
mov
mov
xor
imul
or
xor
jmp
push
mov
xor
nop
out
jbe
ret
cltd
pop
inc
push
fidivl
or
mov
add
xchg
add
sub
lock
and
jg
pop
add
test
add
fisubrs
jns
daa
iret
in
insb
leave
addr16
loope
das
adc
loop
cmpsl
loop
lods
mov
ficoms
jne
movsb
fwait
or
stos
mov
adc
pop
insb
lock
pop
scas
add
rorl
addr16
cmp
xor
adc
xchg
nop
push
ret
inc
add
add
mov
filds
cmc
mov
jbe
mov
mov
insb
inc
in
jnp
push
xchg
fcmovb
shrl
mov
mov
fistl
cmp
mov
sbb
dec
sti
xchg
push
xchg
push
iret
pop
jmp
push
cmp
mov
cmpsl
inc
pop
mov
xchg
jae
lods
mov
stos
pop
jae
sub
dec
jg
adc
add
gs
fists
repz
lret
xorb
shl
sbb
je
sub
add
sbbl
pop
cmp
sub
sbb
shlb
jmp
std
cmp
iret
ret
jl
mov
lahf
cmp
add
mov
inc
xchg
xorb
loope
mov
and
jno
test
fsub
xchg
mov
mov
rcrb
inc
lea
stos
movsb
lahf
ds
fwait
into
and
jbe
inc
ljmp
and
aam
push
push
popa
cli
xchg
insl
adc
pop
jbe
mov
adc
ss
scas
jge
and
adc
jmp
sbb
ror
sub
or
in
fsubrs
rcrl
fisttpll
addr16
jg
ret
ret
cmpsb
mov
retw
pop
jb
fiadds
lds
std
mov
jne
popa
pop
jmp
push
cmpsb
push
cli
loop
jmp
mov
push
dec
pop
subl
xchg
xchg
orl
fldenv
ret
scas
mov
xchg
pop
ja
aaa
jl
mov
sbb
scas
sbb
dec
stos
jo
in
insb
daa
insl
sub
xor
xchg
or
sub
daa
xchg
or
jbe
pop
nop
cmp
roll
lods
ja
or
and
adc
mov
cmpsb
pop
fldl
fdiv
hlt
jae
pop
dec
adcb
dec
and
es
lahf
or
xchg
test
push
sti
xor
mov
and
shrb
sarb
sbb
int3
popf
popf
or
in
mov
cmpsl
or
jbe
imul
inc
xlat
cmp
pop
push
xchg
call
out
pop
add
clc
nop
dec
bound
int
inc
jbe
fmull
ret
ficompl
inc
pop
repnz
xchg
cmpb
xchg
leave
aas
imul
nop
dec
jns
or
sub
mov
ret
lahf
lods
ljmp
pusha
adc
sbb
xor
push
cmp
cmp
jle
push
loopne
in
add
mov
adc
inc
cmpsl
pop
fld
mov
mov
loope
pop
jecxz
sub
jle
jmp
pushf
lods
dec
or
fnstsw
pop
shl
cmp
mov
stos
data16
inc
mov
ror
movl
arpl
out
addr16
pop
cwtl
cmp
stos
xchg
cmp
hlt
addr16
scas
push
sbb
or
dec
push
inc
daa
and
leave
jle
add
js
mov
pusha
fcompl
xor
lods
loop
fidivrs
xor
imul
jb
and
shll
sbb
scas
or
dec
sub
shrb
sbb
jge
ret
lcall
iret
movsb
sarl
out
adc
jge
mov
dec
jmp
adc
in
push
sarl
push
sbb
xchg
icebp
iret
in
test
roll
fnstenv
or
ret
sub
xor
push
insl
adc
hlt
lret
adc
mov
les
xchg
jne
pop
jge
mov
inc
xchg
addb
mov
cwtl
dec
mov
dec
sahf
dec
aas
test
subl
rcrl
mov
mov
fsub
adc
xchg
or
dec
icebp
add
iret
gs
jl
dec
xchg
mov
xchg
pop
movsl
repz
xor
push
arpl
je
xchg
jno
shrl
dec
popf
mov
scas
sub
mov
cwtl
out
push
lods
shl
inc
or
pop
inc
insl
fistl
mov
test
push
pop
fmul
shll
jp
lds
sub
ss
push
js
lock
arpl
cmpsb
cmc
jbe
dec
ja
xor
int3
pop
dec
shlb
stos
cmc
sub
jmp
xlat
int3
popa
fsubrp
and
mov
sub
cmp
pop
std
in
push
mov
xor
fadds
std
outsb
dec
push
sbb
aaa
popa
mov
dec
mov
pop
xorb
mov
popa
aam
sbb
aad
adc
inc
ljmp
jge
xor
pop
mov
jb
stc
push
imul
xchg
push
lcall
mov
and
push
lcall
xchg
push
pop
mov
fsub
adc
xchg
int3
imul
in
pop
repnz
sub
cs
mov
ss
into
cwtl
pop
leave
dec
daa
dec
push
adc
jp
adc
scas
cmp
cmc
aad
mov
out
sahf
vpmacsdqh
cld
loope
shrl
sub
cwtl
aam
icebp
mov
xchg
xor
push
and
fyl2xp1
push
mov
sbb
sbb
das
inc
sarl
lds
rolb
cmc
das
xchg
sarl
ret
mov
push
call
xor
fimuls
in
shrl
in
lcall
sti
mov
cmpsb
movsb
xchg
lcall
es
movsb
jl
push
pop
ud2
push
cmp
in
mov
push
mov
dec
fildll
dec
adc
pop
and
ja
cmpsl
jmp
inc
addr16
rcll
and
fdivs
xlat
scas
sub
loop
orb
dec
and
inc
jl
dec
js
cs
into
add
xchg
nop
push
or
dec
jecxz
pop
sti
fs
push
mov
push
movsl
adc
inc
mov
out
jge
mov
xor
jno
stos
add
push
stos
adc
movsl
ret
xchg
roll
inc
ret
push
inc
mov
mov
gs
lods
imul
pop
icebp
pop
adc
gs
pop
sbb
add
lods
xor
sbb
and
dec
fiadds
pop
sub
pop
aad
js
push
adc
cmp
addr16
push
add
adc
dec
xchg
mov
sbb
push
imul
xchg
lock
mov
dec
push
pop
xchg
xor
cmpsb
imul
push
cltd
mov
sahf
adc
addr16
lret
sub
sub
lahf
mov
xchg
jmp
jnp
stc
mov
and
dec
xchg
jp
mov
pop
arpl
fcoms
stos
xor
rorl
jbe
push
sbb
es
test
ljmp
test
or
add
sub
test
jae
mov
mov
aas
inc
ficoml
int3
or
aaa
xor
adcl
add
lcall
cmc
xor
inc
scas
cmp
aas
pop
jbe
es
mov
orl
mov
push
bound
push
lret
jae
lea
addb
push
rol
xchg
cmp
sbb
ljmp
jmp
pusha
das
shrb
mov
xchg
push
pop
out
incl
push
cltd
ja
cltd
arpl
sub
push
jg
dec
pop
cmp
lcall
mov
pop
jle
xor
neg
aam
push
push
sbb
push
jne
jnp
lods
lods
xor
push
pop
cld
mov
inc
or
lods
pop
inc
xchg
flds
push
add
into
decb
xchg
leave
movsb
bound
push
jle
out
inc
pushf
das
or
sahf
adc
or
push
rclb
daa
pop
sub
outsl
movl
or
in
loop
xchg
jge
pop
aad
mov
cs
shrl
adc
aam
mov
xor
pop
mov
out
xor
fadd
mov
push
pop
sti
and
popf
mov
mov
inc
push
mov
lret
js
movsl
pop
add
inc
xchg
ljmp
dec
stc
sbb
sub
ret
out
push
lds
add
fisttpll
jnp
push
cmpsb
dec
sub
xor
jmp
mov
jmp
push
xchg
mov
loop
mov
mov
lods
aad
pusha
add
fsubl
mov
aas
icebp
mov
pop
sbb
sbb
sub
ja
ds
fidivs
cld
xor
adc
icebp
cmp
fs
mov
divl
cmp
fcomip
imul
pop
jp
cltd
lcall
dec
rol
lea
aaa
mov
mov
fisubl
xor
cmp
inc
add
jg
pop
jo
aaa
inc
ljmp
test
dec
das
cmc
stos
mov
bound
jmp
dec
sub
push
or
sub
fimull
addr16
nop
jg
lahf
xor
call
nop
cmpsl
inc
jecxz
repz
outsb
das
dec
jbe
or
jmp
sub
cwtl
xchg
sub
and
out
jne
xchg
or
jecxz
cmpsb
lods
sarb
push
fsub
mov
push
scas
adc
push
mov
int
or
in
lahf
and
pop
or
mov
std
pop
into
jmp
and
out
decl
ljmp
hlt
mov
out
js
mov
decb
into
mov
add
lock
mov
in
jl
loopne
hlt
rcr
xchg
cmp
inc
ss
sbb
xor
push
sarl
lahf
rorb
mov
int
xchg
push
push
into
aad
int
enter
cs
lea
andl
xchg
fcmovnu
arpl
add
fmulp
mov
imul
fidivl
pop
pop
mov
inc
in
jg
mov
dec
sar
and
cmp
sti
sti
ds
inc
lods
movsl
add
aas
push
test
gs
and
js
xchg
push
aad
aad
and
lea
jbe
data16
dec
nop
push
jne
add
fs
jne
shll
mov
dec
sarb
ljmp
push
jo
inc
mov
mov
add
lock
pop
push
push
mov
push
dec
test
and
mov
popa
xchg
sub
shl
push
popa
push
mov
push
loope
xor
inc
psubw
std
outsl
dec
dec
or
stc
cltd
stc
xorb
jno
cli
sbb
lret
dec
test
or
aam
dec
orb
adc
or
int3
xor
jb
fimuls
call
iret
hlt
jmp
pop
cmp
push
mov
imul
sub
jo
lret
sub
inc
sub
es
out
int
and
iret
sbb
jnp
out
mov
sub
out
cmc
fisttpl
scas
aaa
rolb
lcall
lret
sbb
mov
or
cmp
cmpsl
xchg
xor
hlt
mov
sbb
stc
push
cld
test
and
pusha
cwtl
cmp
cwtl
jns
mov
sub
aas
sarb
in
or
pushf
mov
lahf
pop
mov
add
mov
shlb
push
push
jle
sbb
shl
pusha
outsl
iret
in
in
xchg
arpl
cmp
bound
mov
jg
mov
pop
outsl
or
cmp
fimuls
mov
sub
ss
test
adc
lret
imul
push
push
ret
xchg
dec
cld
mov
mov
cmp
fnsave
mov
add
int3
sti
inc
es
ljmp
cmp
jmp
outsb
xor
outsl
popl
sahf
xchg
aaa
insl
enter
xchg
dec
ficoml
sti
jecxz
xor
outsl
gs
xor
mov
pop
cmp
mov
jmp
aam
loope
pop
insl
xchg
adc
inc
jno
inc
rcll
jns
mov
inc
dec
lcall
cmp
mov
inc
jecxz
adc
mov
arpl
mov
xor
popf
pop
xor
shlb
mov
or
addb
test
xor
mov
testl
jle
cmp
das
int3
sahf
lahf
dec
dec
or
sub
mov
adc
movsl
mov
pfsubr
dec
add
push
ja
inc
loope
roll
mov
xchg
sbb
and
xchg
lahf
pusha
and
jns
adcl
test
sbb
xchg
ret
jns
xor
ret
pop
lock
nop
sub
popf
push
push
dec
insb
xchg
lea
jmp
leave
repnz
add
dec
pop
pushl
jecxz
ja
in
xlat
es
jns
xchg
push
pop
add
mov
add
mov
bound
test
test
xrelease
out
mov
popf
add
popf
pop
push
rclb
jb
lret
imul
pop
cld
repz
fstpt
add
adc
stc
iret
jae
mov
jnp
shll
sub
stc
cmc
or
ja
jo
xchg
clc
push
push
or
cwtl
out
loope
xchg
cs
outsb
adc
dec
lock
jle
mov
popa
mov
xor
inc
sbb
or
sbb
in
mov
inc
xlat
push
fwait
inc
in
adc
mov
xlat
inc
in
cld
pop
in
dec
std
xchg
mov
sub
ret
mov
mov
mov
int
fiaddl
addr16
out
mov
fsubr
cs
sti
cmc
out
inc
xor
stos
aas
or
dec
cld
out
mov
sub
jmp
mov
in
cli
cmp
sbb
scas
xor
push
xor
mov
iret
push
dec
aam
xchg
and
aam
mov
xchg
or
jae
inc
adc
movsb
ja
loope
add
test
jecxz
sub
movsl
xchg
jmp
in
dec
loope
mov
xor
jnp
into
or
hlt
int
xchg
ds
pop
or
and
xor
lret
push
aad
push
psubsw
and
jp
jge
stos
jge
mov
jmp
leave
and
mov
jno
sbb
jb
and
out
in
mov
push
sub
or
aad
inc
sub
enter
adc
movsl
push
add
add
sub
call
dec
mov
sti
pop
loop
push
inc
inc
sti
xchg
mov
aad
dec
cmpsb
pop
cwtl
sarl
lahf
sar
mov
test
mov
adc
mov
mov
mov
mov
int
lods
and
push
add
ret
xlat
sub
adc
aad
sbb
add
sbb
push
popf
inc
into
jle
jmp
push
mov
inc
stos
dec
mov
or
into
shl
nop
int3
nopl
pop
bound
fs
dec
sti
insl
aad
jbe
push
mov
andb
ret
pop
lret
or
and
mov
or
xor
test
cmp
fsubl
nop
add
imul
jno
push
insb
aad
es
sbb
xchg
and
leave
jmp
cmp
fidivrs
mov
xor
movsl
shll
negb
lret
push
mov
in
es
fisttpll
pushf
mov
movsl
dec
dec
addb
je
ds
icebp
mov
mov
rep
mov
mov
pop
xchg
ret
cld
fldt
sbb
addr16
mov
push
leave
inc
inc
inc
push
sbb
push
jmp
call
pop
add
push
xchg
mov
jl
dec
stc
addr16
sub
xlat
lock
out
int
cmc
dec
push
lret
and
sbb
push
inc
xlat
ds
aam
jle
mov
pop
mov
mov
add
popa
inc
faddl
push
dec
daa
sub
xchg
icebp
gs
jecxz
jne
jo,pt
mov
sbb
das
or
testb
loop
dec
mov
pusha
cmp
mov
xchg
ss
std
inc
adc
cmp
sub
mov
inc
das
lock
fdiv
add
inc
or
leave
in
dec
mov
jp
jno
addr16
aad
idivl
ss
fsubl
adcl
xor
pop
outsb
mov
push
nop
jl
lds
or
lods
sti
repz
xchg
bound
sti
cmpsl
push
daa
or
ds
jne
je
sahf
mov
push
out
ljmp
and
and
mov
fwait
push
outsl
dec
pop
int3
mov
xlat
sbb
mov
ret
repz
or
push
adc
es
lcall
lds
sarb
add
sbb
cmp
les
mov
pop
mov
outsl
jg
rcr
call
cmc
xchg
je
les
sti
stos
ja
mov
add
inc
and
and
pop
es
test
test
xchg
call
rcrb
std
mov
jnp
in
ret
mov
jbe
cmp
xchg
cmp
dec
dec
in
fstpl
add
outsl
dec
or
pop
mov
mov
lcall
ffreep
mov
gs
je
insl
add
mov
ljmp
cmp
int3
mov
leave
jmp
add
sub
jecxz
mov
pop
xor
outsb
mov
cli
inc
pop
gs
sub
jns
push
mov
add
push
les
popf
mov
insl
pop
pop
in
sahf
clc
xchg
cmp
fcmovb
fimull
mov
fsts
loope
inc
adc
xchg
cmp
xor
and
cmc
cmp
mov
gs
jbe
stos
aad
enter
push
outsb
adc
or
psrlw
ret
sub
sbb
xchg
and
sti
fwait
cli
in
sub
push
aam
loop
bound
outsb
sti
sbb
in
xchg
scas
and
movsl
js
fwait
hlt
cmc
lds
xchg
cmc
mov
ss
or
daa
sahf
pop
icebp
sbb
scas
cmpsb
jmp
addl
and
push
and
pop
fistpll
es
cmp
cmp
mov
xchg
add
insl
pushf
sub
xchg
or
adc
jge
xor
mov
pop
outsl
ret
dec
and
gs
jno
shll
mov
out
mov
mov
repnz
pop
scas
pop
call
xor
stos
push
mov
fisubl
and
lcall
xchg
inc
or
jp
loop
lret
icebp
cld
in
pop
fiaddl
mov
lret
adc
dec
adc
inc
xor
orb
xor
in
cmp
cmpsb
jnp
incb
xor
mov
or
fisubs
mov
lret
popa
mov
mov
int
repz
mov
movups
in
sub
inc
inc
mov
adc
mov
stos
pop
pushf
dec
ja
out
mov
in
jp
sbb
inc
fwait
push
adc
inc
popa
jg
stos
and
push
sub
ss
fsubp
into
cli
or
jne
jecxz
subb
push
imul
pop
cmp
adc
loope
mull
pop
scas
scas
ss
cmpsb
fidivrl
das
xor
pop
jne
mov
cmp
ljmp
mov
mov
dec
jns
cmpsb
sahf
mov
or
test
push
dec
out
adc
pop
dec
fwait
xchg
insb
sarb
xor
or
iret
push
jmp
shl
xchg
in
out
movl
fwait
adc
sarb
xchg
inc
seto
inc
sbb
stos
and
xchg
loop
orl
test
das
loopne
dec
movsl
sub
pop
pop
jb
lret
pop
mov
fnstcw
mov
jge
popf
add
pop
sub
movsl
mov
lea
adc
jecxz
sahf
xorl
imul
sarb
pop
mov
sbb
xlat
adc
or
fstpl
loopne
lcall
or
out
lahf
sbb
in
gs
outsb
in
insb
and
and
scas
mov
mov
stos
cmpsb
add
xchg
ret
inc
pop
inc
and
out
ljmp
sbb
movb
into
mov
stc
jl
cmp
adc
fldcw
jae
aaa
divpd
cld
icebp
adc
mov
data16
lret
repnz
or
fmuls
jmp
ret
push
adc
jbe
mov
mov
and
repz
pop
mov
notb
xchg
pop
nop
loope
and
mov
and
dec
cmpsl
inc
cmp
aaa
cmpb
sahf
cltd
cmp
push
cmpsb
adc
or
fisubrs
mov
jecxz
mov
repz
push
lds
sub
arpl
scas
idivl
jo
sub
dec
stc
insb
add
addr16
xor
lods
mov
or
add
test
jnp
xlat
sar
or
inc
nop
mov
loopne
popa
adc
icebp
dec
iret
pop
inc
cmpsb
xchg
cmpl
addr16
dec
or
pusha
stos
and
test
test
fwait
sub
push
cltd
notl
adcb
push
mov
sbb
mov
lret
cld
fimull
pop
add
cmp
lcall
in
out
push
add
aas
mov
pop
mov
add
dec
rolb
jnp
or
dec
test
aas
out
rol
and
ret
lds
push
or
inc
fsubp
in
cld
push
sbb
insb
je
xchg
jg
int3
clc
in
shlb
aad
cwtl
idiv
dec
add
xlat
mov
jge
orb
fnsave
shll
call
sub
scas
std
enter
dec
dec
cmp
testl
cmp
jbe
loopne
mov
adc
loope
fisubl
cwtl
and
enter
or
dec
mov
inc
bound
repnz
adc
in
dec
and
xchg
xchg
sarb
pop
mov
mov
mov
sbb
addr16
frstor
jge
out
stos
mov
push
mov
push
mov
stc
or
popf
aam
lea
and
inc
idivl
pop
loope
cmp
cld
mov
xor
je
jl
iret
pop
lret
mov
je
in
decl
jle
aas
cmpb
mov
ror
lock
cltd
fdivr
fisubrs
lahf
int
jg
mov
ja
xchg
sub
test
sbb
rolb
mov
and
push
je
pusha
loopne
jge
pop
sbb
xor
aam
popf
lret
xor
dec
cmp
adc
push
mov
cmpsb
ljmp
jbe
roll
es
fbld
rolb
mov
inc
mov
cli
lods
rcl
daa
movsb
outsl
mov
push
adc
into
rol
enter
les
cs
popf
mov
xor
call
add
pusha
xchg
scas
mov
xchg
xchg
and
sbb
push
dec
adc
cmp
cmpsl
pop
mov
rcrb
psrad
cmp
or
lea
sub
mov
jns
mov
dec
sbb
fcmovbe
sub
push
pop
lds
pop
jecxz
cmp
mov
dec
nop
mov
adc
iret
adc
cli
sub
out
adc
out
mov
inc
into
leave
jge
and
addr16
lods
scas
push
push
xor
cs
push
imul
lds
xchg
or
sbb
das
mov
or
ret
inc
shlb
add
sub
int3
sbb
lods
sub
mov
cmp
sub
jno
pop
adc
adc
jge
mov
inc
push
mov
and
scas
testb
pop
mov
fwait
pop
mov
daa
jb
push
xchg
jae
cmp
cmp
scas
adc
out
dec
movb
rcrb
and
sbb
mov
in
cli
fwait
shlb
cmp
aas
or
loope
xchg
jmp
out
pop
popa
outsl
into
mov
outsb
add
push
xchg
call
fstpl
push
clc
in
mov
outsb
cmpsb
push
jg
and
mov
arpl
mov
cmp
lahf
xchg
push
and
movsb
dec
popf
or
fisttpll
fisubrl
jecxz
imul
iret
cli
imull
jb
jmp
jns
roll
addr16
in
in
fbstp
adcb
mov
lret
imul
lock
int
bound
aaa
fdiv
orb
scas
add
faddl
mov
out
daa
popa
pop
mov
inc
jmp
pop
adc
jo
ret
xor
cmp
jo
lock
ds
ret
clc
push
xchg
test
mov
mov
sahf
xchg
push
xchg
fdivl
lds
jle
mov
ljmp
int3
adc
inc
sub
inc
sbb
sarb
mov
or
rolb
dec
rclb
or
fisttps
and
mov
mov
cmpsb
sbb
js
mov
cs
pop
dec
popl
std
xor
hlt
lahf
cld
fistl
mov
sub
jecxz
adc
jp
call
aaa
sbb
dec
mov
cmp
mov
sbb
fmuls
inc
orb
pop
cmp
js
push
stc
pop
jp
loope
adc
ljmp
rcll
stos
iretw
mov
jo
cmovp
cld
mov
add
or
mov
inc
arpl
dec
leave
xchg
xchg
mov
stos
pop
stos
insl
mov
sarb
aas
and
data16
xor
stos
ljmp
and
aam
push
pop
insb
data16
xor
add
and
cmpsb
inc
sub
aad
dec
aam
lods
inc
mov
adc
test
imul
dec
movsb
dec
and
mull
scas
pop
pop
xor
push
mul
lods
iret
push
negl
jae
push
out
loop
mov
iret
data16
ret
andb
lock
je
stc
loope
pop
test
bound
icebp
leave
sti
mov
ret
test
dec
mov
gs
popf
inc
aas
mov
adc
inc
jnp
dec
fnstcw
adc
ja
pop
pop
movsl
loopne
test
sbb
repnz
lret
popa
push
sub
or
adc
int3
movb
in
outsb
mov
movsb
popf
push
xchg
push
mov
out
sbb
je
scas
or
cmp
sbb
loopne
fldenv
jg
arpl
repz
and
in
scas
stc
sub
in
xor
lea
jp
dec
sub
xchg
xchg
jbe
repz
or
adcb
pop
cmpl
xlat
dec
fadds
or
push
xchg
je
daa
cmpsb
lods
clc
sbb
fisubrl
iret
dec
int
sub
call
bound
and
fcompl
or
pusha
jne
dec
cs
fdivrs
and
jle
fistpll
lds
es
inc
stc
mov
mov
jnp
pop
inc
cwtl
jo
rcrl
cmp
enter
push
mov
sar
sbb
jns
cmp
xchg
decb
fimuls
or
test
jnp
and
ret
jbe
int
push
push
mov
or
pop
sbbb
jne
mull
or
push
pusha
and
daa
push
test
push
jne
imul
xchg
into
fstpl
out
nop
lods
adc
imul
into
dec
xchg
add
mov
inc
in
jns
into
lahf
in
adc
cwtl
mov
bound
inc
push
addr16
jnp
lock
vpunpckhdq
cmp
jp
add
fisubl
divl
into
test
scas
das
lods
ljmp
ret
in
dec
out
test
adc
sub
cltd
mov
pop
pop
std
pushf
cmpsb
jg
push
repz
daa
in
cmp
testb
sbb
fs
xchg
push
fldl
dec
cltd
loopne
dec
xor
jl
pop
pop
xchg
xor
mov
mulb
js
cmc
stc
xchg
jne
xchg
lcall
lds
push
add
sahf
jle
jp
inc
adc
xlat
pop
sahf
out
test
jp
iret
xchg
test
adc
jb
loop
push
cmpsb
ds
flds
push
or
fidivs
stc
cld
xor
sub
jg
push
xor
push
inc
int3
jne
inc
mov
outsb
add
setns
add
and
pop
scas
aam
push
js
mov
and
cmpl
adc
stos
mov
or
lret
and
in
cltd
pop
ret
stc
inc
pop
popa
dec
mov
scas
mov
rolb
test
out
jb
and
pusha
out
mov
pop
jb
testb
mov
jo
fisttpl
mov
mov
aaa
push
xchg
out
inc
add
mov
test
mov
pop
aad
mov
into
pop
fldl
aad
sar
sbb
pop
dec
hlt
jns
in
mov
fbstp
xchg
add
shll
ja
mov
lods
or
push
bswap
ret
and
in
push
pop
cmpsb
sti
dec
adc
or
jecxz
pop
mov
fists
nop
xchg
gs
les
lret
dec
dec
xchg
xor
test
mov
insl
or
loope
shlb
pushf
mov
sbb
push
lock
aas
lret
les
dec
xchg
mov
mov
fldt
push
xor
inc
cmp
adc
mov
xor
setae
cmp
scas
shrb
pop
mov
or
xor
adcl
cld
les
xor
je
mov
dec
inc
xor
into
xlat
ret
push
repnz
adc
xchg
std
xchg
int3
mov
push
inc
lods
in
jl
pop
mov
cmp
dec
cmp
xlat
lods
mov
es
xchg
pop
and
sbb
jno
pop
xchg
fs
in
push
push
inc
xor
inc
mov
add
lods
insl
lcall
sub
lea
daa
xchg
add
mov
sti
in
lret
dec
stos
dec
jl
adc
out
movsl
jl
out
xchg
inc
pop
mov
pop
jns
jl
negb
ret
fistps
aas
push
pop
stc
insb
arpl
ret
cmpsl
lea
inc
push
cmpsl
fwait
mov
nop
pop
jb
paddq
out
dec
es
mov
dec
cwtl
adc
orl
inc
dec
pop
adc
mov
xor
push
mov
rcl
inc
les
mov
ds
xorl
pop
loope
fstps
dec
cmp
sbb
inc
sarb
repz
mov
add
rcrl
shrb
cltd
js
imul
sub
hlt
cmpsl
xor
and
imul
dec
cmpsb
push
jno
shll
xchg
icebp
jo
rcr
mov
add
mov
data16
mov
rclb
movsl
xor
data16
mov
dec
mov
jle
cmp
and
rol
push
pop
mov
repnz
inc
mov
cwtl
jmp
cmp
adc
pop
jns
or
push
andb
mov
ret
cmp
adc
pusha
jge
jecxz
and
jmp
cmp
popa
pop
popf
dec
dec
pop
inc
cmp
std
xchg
aam
sub
cmp
mov
shl
lret
cmp
movsl
cmpsl
or
mov
pop
mov
icebp
mov
pop
imul
test
or
fdiv
mov
jge
add
lock
std
xchg
or
test
lret
add
and
xchg
rclb
lock
mov
outsl
gs
ss
test
xlat
mov
movsb
faddp
xchg
nop
flds
notl
sbb
jae
mov
sub
xchg
mov
sub
clc
cmp
stos
add
ss
out
mov
repz
es
mov
lods
idivl
mov
inc
inc
test
sahf
jp
cmp
xchg
or
sbb
xchg
dec
or
and
clc
sub
sbb
cmp
das
jg
test
add
jge
sahf
xor
out
push
out
shr
jge
mov
sbb
popf
cmp
divb
les
shll
cs
adc
clc
aad
push
cmp
cmp
pop
dec
xor
sbb
push
lret
scas
adc
sbb
stos
int3
dec
fiaddl
fcmove
dec
ds
lea
imul
ljmp
jg
das
sub
int3
cmp
inc
insl
mov
xor
dec
and
xchg
push
insb
loope
and
push
aas
icebp
lods
pushf
iret
into
pop
call
xor
ss
scas
add
scas
jg
fdivrl
std
or
fstpl
sub
mov
or
dec
xchg
and
pushf
lods
sbb
push
hlt
cmpsl
dec
push
mov
push
les
pop
and
fwait
lods
xchg
pop
cmpsb
lods
das
inc
fistl
jecxz
jae
xchg
fs
jge
adc
repz
or
gs
decb
mov
dec
xor
mov
sbb
data16
cmp
test
lods
ds
mov
jae
xchg
lock
adc
mov
fstpt
sbb
xor
jl
dec
push
xchg
sub
mov
dec
sub
int
jne
mov
lods
les
es
xor
outsb
orb
jne
lcall
ja
xlat
mov
lret
mov
push
ret
sbb
popf
int3
addr16
xchg
fistps
mov
add
cmp
cmp
in
repnz
test
inc
lea
pop
push
mov
shlb
dec
push
sbb
add
xor
and
fsubrs
ja
pop
scas
dec
imul
daa
js
test
push
vpmaxsw
pop
adc
in
loop
add
daa
cld
xchg
pushf
in
cmp
orl
fnstcw
pop
ss
push
test
leave
push
sub
jecxz
xor
xchg
or
jle
push
sbb
push
lea
mov
pusha
add
adc
inc
push
cmc
les
js
decl
clc
xchg
aas
add
push
push
sub
dec
daa
push
xor
stos
ja
cmc
jb
jge
and
outsb
mov
pop
mov
and
lret
fnsave
mov
lret
outsl
sbb
pop
lret
les
mov
int3
cmpsl
aas
orb
xor
ljmp
stos
loop
fwait
shrl
jmp
cld
addl
xchg
aam
mov
cli
rol
inc
sub
mov
movsl
or
xor
push
jecxz
std
sub
jg
or
vandpd
insl
fdiv
bound
fsts
and
imul
test
cld
fldl
cs
xchg
rcrb
mov
pop
push
jle
inc
xchg
mov
add
in
in
out
mov
pop
pop
bound
xor
mov
stc
adc
jl
inc
stos
or
lea
into
test
xor
cmp
xchg
in
mov
lret
dec
ret
mov
fidivrs
mov
lea
shl
mov
aam
pushf
fwait
fwait
std
lods
andb
sti
dec
arpl
cli
xchg
arpl
pop
sbb
jl
je
in
dec
push
mov
outsb
jno
sub
add
and
or
lods
dec
mov
lahf
xor
and
ss
out
out
xchg
push
push
mov
xchg
repz
adc
add
mov
sub
add
leave
fsubrs
mov
add
fisubs
ds
push
and
mov
std
mov
sub
xchg
pop
cmpl
out
lea
lret
mov
xchg
je
jns
ja
and
dec
xchg
mov
add
test
cmpb
cmpsb
jbe
in
addl
xchg
mov
lods
sub
stc
push
xchg
mov
mov
es
nop
adc
pop
shll
jno
push
sbb
rol
in
cmp
icebp
sub
fidivrs
pop
xor
imul
xchg
cmp
xchg
sub
lods
dec
add
sbb
sbb
mov
outsb
pop
dec
add
scas
sub
mov
fcom
in
loope
or
pusha
nop/reserved
push
sahf
xor
sti
xchg
xorl
sbb
pop
xchg
jb
mov
lods
ficoml
movsl
scas
adc
cmpsl
aad
stc
xor
pop
xlat
pop
adc
jecxz
movsb
inc
aad
out
pop
mov
cli
cld
add
cmp
fdivrl
push
lods
mov
push
mov
lds
pop
or
int
inc
sub
in
adc
jle
or
and
sub
push
out
and
jns
test
mov
int
lea
out
out
ret
mov
xchg
add
out
popa
sub
xchg
fidivl
xchg
sbb
jge
and
push
pop
imul
je
jne
xor
jle
sbb
push
xchg
icebp
jge
push
sbb
push
fbstp
out
sub
jo
or
out
lods
test
inc
jecxz
add
mov
cli
pop
lcall
lret
imul
lods
push
lret
test
out
dec
popf
push
adc
lock
scas
xchg
mov
xor
add
mov
aam
pop
fdivl
push
jmp
sbb
push
dec
mov
movsb
aad
lods
mov
mov
stos
cld
in
and
or
addr16
lret
cli
mov
outsl
es
or
xchg
sub
jb
repnz
and
stos
mov
dec
mov
add
scas
mov
out
jle
imul
clc
stos
repnz
dec
add
lret
mov
dec
cmp
loope
xor
jno
xchg
xchg
gs
mov
les
push
ds
push
sub
or
sbb
bnd
dec
sub
mov
rorb
sub
cs
xchg
in
inc
jae
pop
pop
pop
stos
dec
leave
das
outsl
adc
or
cltd
movsb
test
and
jge
ss
pop
push
cmpsl
test
jnp
test
sbb
test
adc
imul
imul
xchg
cmpsl
lock
jb
repnz
adc
inc
pusha
dec
adc
add
cmp
xor
shlb
xchg
mov
dec
mov
xchg
lods
pop
inc
mov
and
cwtl
jns
jl
pop
cltd
or
jns
jns
jbe
test
xchg
jmp
movl
pop
insl
inc
mov
cmpsl
scas
pop
data16
out
push
cwtl
mov
xor
jmp
cs
repz
pop
outsl
rcl
fnsave
pop
out
pop
mov
nop
andb
cld
or
aam
push
lcall
push
test
addl
fdivrs
push
add
sbb
sub
push
or
push
and
rol
das
push
inc
inc
push
mov
imull
imul
and
jns
mov
jb
nop
loop
mov
jl
cmc
faddp
call
push
push
filds
mov
iret
adc
and
mov
iret
and
pop
stos
pop
les
fdivs
jle
arpl
loope
rorl
cwtl
jg
lds
movsl
inc
jo
inc
movsb
movsb
xchg
cmp
ja
inc
gs
andl
fnstsw
push
pop
stos
xchg
xchg
lods
cmp
test
xor
hlt
adc
cli
add
ret
xchg
sub
inc
bound
ds
mov
mov
in
inc
icebp
movl
dec
and
mov
stos
loope
or
sbb
out
scas
iret
test
mov
mov
sbb
inc
dec
push
and
repz
fmuls
cmpsl
jg
stos
repz
popf
repnz
subb
mov
add
lock
negl
dec
sub
enter
lahf
cmp
or
gs
mov
jae
jp
mov
stc
jecxz
lock
mov
rcll
fisttpll
pop
pushf
call
and
mov
repnz
in
in
rorb
inc
and
inc
xor
bnd
cmc
rolb
into
xor
enter
fnstsw
cmp
rcr
push
xor
test
shll
mov
push
in
mov
repnz
das
fstps
add
test
in
jns
push
insl
mov
test
iret
adc
nop
test
sahf
call
sti
cmpsb
cmp
xchg
adc
flds
fdivs
je
dec
mov
pop
sarl
mov
cmp
cmp
mov
jb
sbb
in
adc
mov
cmp
push
negl
cld
push
cmc
or
repz
imul
sub
sbb
xor
leave
mov
pop
sahf
jns
lock
pop
fadd
out
es
sub
fadds
cmpsb
lcall
and
lahf
push
scas
rcrb
mov
jge
lds
arpl
mov
fs
aam
dec
shlb
nop
loopne
or
ret
mov
aad
pop
in
loopne
in
xorl
popa
andb
outsb
jge
sbb
lods
push
dec
frstor
enter
or
adc
adc
push
or
test
jecxz
cmpsl
loope
jae
shrb
loope
test
dec
sub
xor
cmp
icebp
sub
or
roll
std
das
fwait
add
mov
paddusb
jg
xchg
xor
or
aad
and
or
xlat
mov
sahf
add
repnz
or
push
jae
aad
sbb
xor
jp
push
outsl
cmp
sub
xchg
fs
or
dec
push
aaa
mov
stos
int
mov
daa
repnz
dec
in
imul
dec
jns
cwtl
mov
and
cltd
cmpsl
lret
movsb
push
es
cwtl
lock
pop
daa
ss
inc
fxch
mov
das
jle
icebp
rorl
dec
dec
pop
pop
jne
in
not
sbb
sub
jp
bound
lods
fcmovnbe
adc
push
sbb
mov
sbb
sti
mov
stos
mov
pop
sub
dec
inc
cmp
fcomip
pop
push
mov
push
js
loop
mov
flds
fs
mov
out
nop
mov
ljmp
sub
popf
stos
sub
sti
xor
push
lcall
jmp
bound
dec
pop
mov
cmp
add
sub
mov
orb
pop
das
mov
cmp
adc
xchg
stc
pop
lds
xchg
jp
dec
jnp
cmp
xchg
mov
push
push
sbbl
movsl
cld
push
or
xor
sarl
sahf
nop
enter
sbb
outsl
movb
cli
outsb
int
in
mov
sub
pop
inc
jp
jnp
jno
sub
mov
inc
xchg
adc
rcrb
testl
push
ljmp
fs
mov
lods
je
mov
into
cli
push
mov
xlat
cmpsb
aas
sub
lret
pop
adc
cmp
inc
add
push
and
xchg
jbe
es
sbb
out
cld
inc
or
push
sbb
inc
push
imul
xor
adc
shrd
dec
pop
jnp
sarb
jo
mov
xchg
mov
sbb
cmp
lods
or
mov
fadds
pop
cmp
clc
fnstsw
cmpsl
dec
pop
lcall
ss
mov
pop
push
shrb
outsb
out
xor
insb
fdiv
out
cld
bnd
fdivrs
subl
sub
std
push
pop
push
pushf
xor
mov
out
jo
ljmp
shrb
dec
aam
add
aas
out
js
and
test
dec
pushf
mov
stos
fs
jmp
adc
mov
les
adc
push
pop
add
xchg
mov
and
pushf
lds
enter
adc
imul
icebp
mov
pop
enter
in
fstpl
and
roll
enter
adc
xchg
pop
inc
mov
push
add
xchg
test
iret
aaa
idivl
loopne
lods
lret
sbb
adc
ljmp
rcrb
adc
adc
out
jmp
imul
and
add
mov
insl
jnp
push
sub
jne
jmp
sbb
add
ss
add
jge
repz
call
mov
aaa
xor
sub
lock
test
mov
xor
jmp
adcb
add
cmpsl
inc
adc
and
mov
clc
xlat
and
push
inc
xchg
cs
int3
sbb
mov
je
inc
cmpsl
or
repz
adc
subb
sbb
lret
cmp
pop
enter
dec
out
lret
jo
ljmp
cli
pcmpeqw
push
pop
adc
cmp
add
outsl
add
es
xchg
push
xor
xchg
mov
sbb
mov
add
rcrb
sub
movl
aad
repz
push
cwtl
popf
lret
stos
push
shlb
adc
mov
inc
add
pop
call
js
cwtl
pop
or
xchg
xlat
cmpsl
pushl
enter
dec
xchg
out
mov
xor
shl
or
fadds
push
fcmove
xor
sub
push
out
jne
inc
xor
and
push
popf
jmp
data16
ds
stos
stos
and
lock
in
push
je
sti
nop
repz
cli
and
mov
roll
stos
addr16
ds
ss
sbb
jg
cwtl
push
dec
shrb
andb
mov
cmp
xor
insl
sbb
aaa
mov
inc
adc
jmp
jge
push
lods
std
loopne
shlb
mov
xchg
pop
or
sbb
xchg
sbb
sub
es
test
pop
orb
loop
repnz
js
into
lods
mov
pop
push
cltd
sub
xchg
cwtl
push
add
cli
mov
test
fwait
xchg
dec
cmpsb
add
dec
push
fdivrl
das
fs
push
add
stos
mov
loope
pop
cmpsl
ret
lcall
mov
int3
sbb
jne
push
fsubrl
mov
push
cltd
pop
mov
pop
pusha
pusha
jne
lea
loop
aam
xorl
aam
cld
inc
sub
pop
je
dec
idiv
hlt
fsubrp
adc
sti
sbb
xchg
insl
push
add
jo
jnp
sbb
push
push
int3
fs
icebp
fsubrl
pop
push
cmp
cwtl
jl
les
add
push
dec
mov
cmp
dec
pop
or
or
jecxz
dec
jae
xor
push
test
shll
add
dec
sub
sbb
in
jl
push
scas
adc
insl
into
push
fcmovu
mov
cmp
cmp
sub
pop
xchg
xor
dec
sub
push
in
lahf
adc
inc
sub
xchg
rcrb
push
cmp
inc
sbb
clc
and
push
sub
pop
imul
cmpsl
xchg
ss
adc
ja
sbbl
sub
jmp
ret
sub
xchg
or
push
fdivp
mov
in
fcmove
ret
add
mov
push
add
insb
bnd
mov
mov
xchg
fsubr
in
lds
dec
test
xlat
jbe
fsubs
int3
call
sub
adc
mov
dec
cmp
and
pop
adc
addr16
mov
fwait
and
mov
imul
or
pop
push
outsb
mov
dec
test
popa
xchg
sti
repz
hlt
sub
aas
jmp
addr16
push
repz
push
ret
nop
cmp
mov
pop
mov
test
fwait
nop
loop
jns
push
push
and
movsb
inc
lret
aaa
aaa
fstpl
inc
ds
xchg
push
pop
jnp
incb
mov
xor
frstor
les
mov
mov
push
test
or
and
loop
or
mov
mov
out
lock
push
hlt
shr
mov
xor
fs
xchg
lret
mov
or
pop
cmpsl
cmp
push
or
in
or
xchg
mov
jp
push
xchg
pusha
cmp
sbb
push
idiv
sbb
adc
out
or
ret
push
cmp
pop
test
fimuls
int
mov
imul
xchg
push
je
adc
mov
and
aam
mov
mov
mov
aas
cli
sti
pop
int
push
mov
pop
sbb
push
cmp
fistl
and
adcb
adc
cmp
adc
pop
mov
cvtpi2ps
movsb
dec
mov
adc
loope
arpl
push
cmp
and
mov
push
out
mov
push
xchg
pusha
int3
add
aam
xchg
pop
cmp
lahf
cmpsl
stos
add
scas
insl
aad
lret
out
and
daa
adc
clc
popf
repnz
lret
mov
push
fst
mov
loope
xchg
popa
idivb
mov
push
xchg
movsl
mov
addr16
dec
sti
xchg
xchg
insl
stos
add
rol
mov
push
pop
test
shl
mov
pop
mov
aad
sarb
iret
jae
lock
out
cmp
push
inc
push
xor
sbb
and
and
push
outsl
inc
push
pop
pop
mov
pop
xor
mov
ljmp
add
iret
imul
add
push
cmp
cs
lods
es
es
test
push
sub
mov
rcll
mov
and
sub
mov
lods
or
push
inc
test
mov
jo
in
outsb
mov
mov
lds
mov
rcrl
popf
xchg
jo
cmp
jno
fnsave
scas
or
aad
dec
cs
into
pop
mov
lret
jl
out
das
cmpsb
or
ror
je
cmp
push
push
jae
lods
inc
xchg
mov
inc
mov
gs
sbb
dec
or
je
cmpsb
mov
jne
pop
fstpt
outsb
loopne
mov
jp
shl
mov
mov
ret
xchg
and
pop
dec
bound
dec
sahf
sbb
sub
lret
cli
inc
adc
stos
adc
adc
shl
push
push
xchg
mov
testb
int3
jg
js
cmp
dec
xlat
gs
jbe
xor
out
outsl
mov
loope
push
adc
mov
mov
push
inc
mov
adc
cmp
lea
pop
in
movsl
sub
mov
cmp
sahf
and
sarb
xor
cwtl
sbb
mov
cmp
repz
out
xchg
sub
mov
iret
repz
enter
movsb
enter
lret
loop
push
jp
or
cmpl
mov
sbb
add
pop
aas
fwait
in
lahf
xchg
aas
out
adc
lret
dec
sahf
xchg
das
jno
jle
test
rolb
scas
sbb
js
lahf
xchg
cld
fsubs
out
or
shrb
fs
out
mov
jns
push
pop
shlb
fistps
mov
cli
test
sbb
cwtl
mov
sub
or
jg
and
mov
sbb
sti
cmp
and
cmpl
mov
shrb
adc
sbbl
test
xchg
popa
xchg
adc
or
adc
int
iret
ds
mov
and
mov
shlb
arpl
cmp
outsl
push
inc
call
push
outsb
cwtl
fs
mov
adc
aas
out
jecxz
adc
out
fcompl
daa
cs
iret
pop
pop
shl
into
sub
xor
or
adcb
dec
cmc
and
test
mov
push
pop
push
xchg
cmp
jno
loope
aam
mov
xor
xchg
aad
pop
mov
sbb
sbb
sbb
dec
sub
arpl
xlat
dec
inc
pop
or
insb
pushf
loope
scas
mov
sbb
fldt
cmc
scas
mov
and
mov
mov
hlt
push
aaa
pop
mov
pushf
mov
test
dec
pop
std
aas
or
sub
into
outsl
or
jns
adc
mov
lds
popw
cmp
popa
adc
es
pop
sub
ror
jno
jnp
and
loopne
les
fdiv
jmp
js
mov
dec
push
sbb
xor
xchg
aaa
frstor
mov
popf
ljmp
or
cld
and
cli
je
lret
push
inc
add
test
inc
arpl
add
inc
out
and
pop
movsl
pop
xchg
outsb
inc
bound
mov
ljmp
push
imull
fnstsw
out
pop
movsb
cmp
stc
scas
loop
leave
cmp
fwait
enter
push
adc
popa
popf
cmp
mov
dec
cwtl
mov
xor
out
mov
xchg
or
and
in
inc
daa
xor
test
xchg
jnp
imulb
pop
sbbb
xor
inc
lret
lea
xor
cmpl
mov
fmull
pop
inc
push
dec
rolb
mov
jge
fnsave
and
stos
inc
jl
lret
xchg
jns
xor
xchg
cmpsb
push
inc
sub
push
mov
pop
mov
inc
shll
fidivl
ljmp
call
aaa
out
dec
stos
inc
repnz
or
repnz
adc
cwtl
dec
repz
adc
lret
shl
loop
xchg
mov
rclb
outsl
pop
je
add
sub
mov
clc
dec
nop
inc
int3
dec
xlat
pop
pmaxsw
push
sti
inc
mov
js
jb
icebp
inc
enter
cmp
ror
lds
and
jnp
test
adc
xor
cmp
cli
pusha
add
arpl
in
mov
xchg
les
pushf
dec
mov
jbe
pop
mov
das
adc
push
mov
xchg
adc
jnp
insl
add
mov
xor
sbb
inc
jmp
das
test
clc
fnstenv
adc
out
xchg
fidivrl
and
mov
xor
jg
mov
in
jno
pop
leave
push
out
or
push
dec
jo
pusha
aad
dec
adc
jge
sarb
mov
ljmp
insb
loopne
sbb
lea
jns
xchg
idivb
sbb
or
loopne
or
ucomiss
mov
push
inc
push
jbe
fchs
adc
mov
mov
mov
and
push
mov
test
test
pop
dec
scas
loope
and
into
rorl
mov
out
pop
adc
pusha
lret
push
sub
mov
or
popf
addr16
mov
aaa
sbb
icebp
sbb
inc
addr16
xchg
mov
orl
aad
dec
xchg
lcall
mov
js
sbb
aas
arpl
repnz
dec
shll
lods
fs
cs
sbb
cmp
js
insb
fisubrl
jne
mov
xchg
mov
mov
sub
pop
lcall
mov
insl
shll
data16
loop
mov
dec
les
jno
aas
popa
cmpsl
mov
fildll
outsb
pop
test
enter
aam
xchg
jno
pop
pop
add
jp
inc
scas
jns
loop
xor
sbb
lret
mov
xchg
xchg
cli
push
je
push
je
mov
mov
fistps
and
aad
add
push
mov
fidivrs
test
std
stos
and
scas
cmp
ret
or
out
mov
mov
stc
jge
popf
dec
in
push
add
into
shl
pushf
pop
jo
std
inc
sahf
mov
in
push
push
mov
stc
mov
test
ljmp
pop
inc
add
invd
int
inc
cmp
push
fsub
jmp
pop
mov
adc
mov
jo
mov
sub
push
outsb
pop
sti
add
push
outsb
popa
scas
adc
inc
push
push
and
adc
jecxz
leave
cmp
cltd
jae
faddl
addr16
jne
mov
inc
addr16
jnp
fidivrl
shrb
inc
and
xor
sub
fstps
stos
dec
js
icebp
xchg
cmpsb
xchg
dec
adc
cmpsb
cmp
imulb
push
fidivs
mov
dec
rol
into
insb
or
loop
jl
mov
stc
cmp
insb
push
xor
movsb
inc
or
loop
cld
cmp
adc
mov
cmp
dec
es
ljmp
cwtl
sub
les
std
icebp
outsl
inc
call
push
lret
outsl
adc
mov
jg
xor
ret
std
and
pop
ficomps
scas
in
add
xchg
xor
pop
cmpsl
xchg
mov
pop
pusha
jge
std
aaa
mov
and
lods
test
das
xchg
icebp
gs
sub
popa
popa
inc
or
xchg
or
ret
add
dec
sahf
sub
mov
mov
pop
test
and
sub
sub
adcl
and
mov
cltd
xchg
xor
mov
inc
out
fwait
dec
xchg
xchg
loopne
xor
pop
and
jle
iret
mov
stc
arpl
lret
adc
mov
notb
int
lcall
out
fldl
cmp
mov
mov
and
inc
aas
xor
push
cltd
xchg
in
mov
out
xchg
dec
addr16
inc
pop
sbb
add
incl
cs
mov
adc
mov
xchg
gs
pop
pop
push
sub
rcr
pop
push
adc
jbe
mov
loop
mov
icebp
sub
int3
sarl
xor
or
push
inc
cwtl
add
iret
rorl
push
push
icebp
or
xor
jo
push
lfs
and
ret
mov
in
hlt
add
insb
sub
cmp
xchg
push
add
loopne
or
xchg
and
mov
in
addr16
std
jnp
dec
add
lods
add
fs
cli
pop
jae
daa
mov
aas
or
pslld
daa
inc
xor
std
inc
xor
inc
xchg
push
gs
cmp
push
xchg
cltd
and
testb
jo
adc
cmp
sbb
cmp
in
lea
mov
jg
xor
out
add
adc
or
mov
adc
mov
fsubr
lcall
adc
jecxz
or
add
cli
out
xor
mov
sbb
addr16
push
push
push
in
dec
icebp
fsubs
das
sbb
mov
cmp
mov
repnz
pop
faddp
fbld
dec
fwait
nop
push
aaa
aad
out
daa
fwait
vcvtps2dq
or
sub
ror
fsubp
xchg
xchg
sbb
sbb
mov
jno
sbbb
ss
push
repz
adcb
mov
push
ljmp
mov
push
add
bound
stos
inc
lret
sub
jne
inc
lds
xchg
jecxz
pop
shl
push
and
sahf
or
jnp
repnz
or
movsl
sub
xor
xchg
xor
or
fidivrs
aam
push
outsb
jns
fs
adc
cmp
pop
call
lcall
shl
aam
sbb
xor
pop
arpl
or
and
mov
mov
mov
jecxz
sbb
inc
scas
pop
inc
xlat
out
loope
inc
in
nop
mov
adc
mov
outsl
insb
les
rolb
xor
lods
mov
pop
mov
mov
sbb
pusha
push
cld
dec
mov
mov
pop
pusha
push
nop
stos
cmp
stc
faddl
xchg
or
fnstcw
fstps
lret
xor
sbb
cmp
add
mov
dec
stos
lds
jg,pn
fimuls
sub
push
add
test
sub
pushf
shll
push
insb
leave
test
jb
push
pop
int3
push
mov
int3
imul
in
nop
xor
rolb
outsb
daa
dec
cmp
mov
pop
stos
orb
or
mov
cltd
push
and
movsl
and
mov
adc
xchg
cld
inc
cmp
mov
mov
cli
sbb
xor
clc
pop
fadds
addl
nop
or
test
xlat
mov
outsl
jns
arpl
rclb
movsb
hlt
out
xchg
inc
je
mov
inc
cltd
mov
test
lods
mov
ficompl
or
xchg
lea
loop
push
push
daa
jb
fidivrs
cmp
bound
xchg
fiadds
data16
pop
inc
push
push
adc
inc
adc
or
xchg
movsl
cmp
fmulp
jle
addr16
in
cltd
andl
movsl
mov
cmp
or
pop
fldenv
adc
sub
pop
pop
outsb
leave
andb
test
inc
subl
testl
leave
jecxz
neg
push
daa
inc
out
push
lea
or
sub
pop
sbb
test
mov
outsb
jns
push
push
movsl
and
rcll
flds
lret
mov
mov
push
aam
bound
nop
shll
outsl
mov
mov
hlt
ret
dec
mov
xchg
cmp
jne
push
add
cmpsl
or
mov
sbb
out
inc
or
test
mov
sti
xchg
xchg
mov
jp
adc
cmp
xchg
jecxz
pop
xchg
in
jmp
adc
iret
sahf
cmp
mov
jp
test
lcall
cmpsb
insb
aam
test
mov
in
xchg
sbb
ds
clc
stos
adc
adc
dec
popf
add
addr16
push
ds
in
int3
ja
adc
into
fwait
adc
ss
addr16
lret
aaa
icebp
ja
push
int
jle
jno
je
pop
imul
dec
or
or
push
pushf
in
ds
jae
mov
ljmp
or
adc
in
mov
jne
sub
loope
ficoml
mov
mov
addl
jge
test
jae
lret
jge
jnp
dec
in
jl
in
and
pop
cmp
sub
in
scas
inc
mov
mov
mov
sahf
mov
mov
insb
inc
adc
movsb
movsl
leave
mov
dec
bound
out
faddp
add
jecxz
sub
fildll
fnstenv
inc
pushl
mov
out
and
gs
pop
mov
xor
ss
inc
jg
mov
addr16
pop
aad
ss
cmpb
mov
call
sti
lods
scas
icebp
test
xor
jmp
into
jae
or
out
push
aad
out
mov
and
xchg
dec
jecxz
in
jmp
aas
cltd
pop
xor
mov
movsl
out
lret
dec
or
sarb
mov
pop
lahf
shlb
sahf
cmp
mov
pushf
pop
pop
orl
sub
jge
in
add
addb
push
in
stos
inc
sub
pop
push
cmp
pop
fdivs
or
icebp
or
push
aam
roll
mov
leave
adc
out
mov
push
fwait
jecxz
or
ljmp
shrb
sub
adc
cli
loop
sbb
or
dec
cld
es
dec
pop
jg
jnp
cmc
pop
push
int
aaa
lret
inc
dec
enter
lods
insl
sub
stos
loope
jne
fiadds
stc
jno
sbb
fistpll
int
jge
stc
fldl
xlat
jbe
cmc
push
pushf
aad
das
mov
inc
sbb
cli
iret
pop
sbb
iret
movsl
cmp
xor
lret
and
jo
mov
std
daa
std
inc
insb
dec
jne
lahf
rclb
test
add
jne
outsl
les
call
popa
ret
cmp
push
jge
sbb
mov
mov
adc
sbb
nop
leave
pop
jo
add
xchg
psubusw
inc
daa
popa
shrb
add
pop
hlt
shlb
inc
sbb
and
icebp
lea
insb
clc
pop
sbb
fidivs
inc
lods
jb
xchg
xchg
push
cli
sarl
xor
sbb
stc
add
sahf
sbb
sbb
clc
jns
dec
ja
add
inc
ret
es
mov
mov
sbb
mov
xchg
fisubrs
cld
cli
clc
dec
fisttps
mov
std
sub
push
and
jns
xchg
cmp
aaa
mov
fwait
and
mov
lahf
dec
sbb
or
into
cmp
aas
fwait
mov
cmp
repnz
add
inc
testb
addr16
sbb
push
loopne
sahf
popa
repnz
enter
or
ss
addr16
fs
ljmp
push
mov
mov
dec
jns
loope
icebp
repnz
push
fidivrl
mov
sub
jb
pop
lea
insl
ljmp
ret
repnz
fs
jge
mov
out
push
daa
dec
lcall
jmp
push
cmp
orl
add
mov
ja
int3
xor
sahf
das
fstl
jnp
xchg
xor
aaa
outsb
fstpt
mov
sub
jns
mov
dec
pop
mov
sub
mov
cli
popa
inc
cwtl
outsb
popa
nop
pop
stos
inc
mov
fistl
mov
in
push
fimull
into
push
stos
cmpb
js
cs
xchg
fwait
push
fs
mov
add
add
mov
test
sahf
mov
rcr
jo
mov
xchg
sbbl
sub
sub
or
cmp
cmpb
mov
inc
pusha
jnp
scas
mov
jnp
adc
xor
lods
repz
in
pop
ljmp
gs
shl
or
call
cmp
and
inc
mov
aas
dec
lret
push
mov
adc
addr16
push
loop
shlb
push
add
lods
mov
mov
out
into
jbe
shrl
mov
sbb
xchg
xlat
bound
popa
clc
pushf
nop
fs
in
push
fistl
test
arpl
mov
cmc
mov
sub
outsl
nop
aas
adc
aas
cmpb
dec
lods
test
adc
jle
push
xor
mov
add
cmp
xor
mov
jnp
jo
and
xchg
mov
add
pop
fnsave
fdivl
stc
cmp
lods
lahf
xor
jp
xchg
lock
mov
jne
andl
mov
ja
jno
shlb
ss
adc
lea
sbb
mov
jb
inc
mov
ja
dec
mov
in
sub
adc
xor
scas
or
fwait
or
into
sbb
sub
cmpsl
push
daa
jo
adc
sbb
loop
fistpll
fdivs
fincstp
pop
jle
movsl
lds
pop
xchg
pop
cmc
jne
dec
loope
sub
and
adc
mov
cli
lods
sahf
shrl
xchg
in
jmp
add
push
sub
pushf
aad
sub
mov
add
ret
shr
out
or
ja
lret
or
xchg
fnsave
add
push
imul
add
sub
ds
loope
repnz
fs
mov
aaa
cld
stos
push
push
adc
cld
and
push
inc
sub
aaa
aaa
push
loope
push
push
das
insb
out
dec
imul
xor
adc
rcrb
cmp
xchg
xchg
mov
shll
mov
out
mov
filds
dec
std
mov
and
cltd
mov
outsb
mov
pop
dec
nop
lahf
stos
jg,pt
sbb
xor
stos
mov
or
fmuls
loope
jne
mov
insl
cmp
push
push
in
xlat
jae
push
cmp
xchg
nop
pop
xchg
out
mov
cli
adc
imul
dec
pop
subb
cs
test
jp
shrl
or
add
outsb
es
aam
mov
popf
dec
in
add
pop
movsb
andb
out
iret
orb
xor
mov
and
test
pushf
sbb
dec
int
push
jbe
in
int3
pushf
and
pop
cmp
xchg
ret
jl
mov
xlat
lods
testl
sbb
filds
orb
xor
imul
imul
hlt
insl
out
push
sarb
subb
in
cmp
ljmp
mov
ja
movsb
mov
scas
mov
fsubp
inc
or
js
add
mov
or
mov
or
test
test
and
sub
xchg
es
hlt
popa
mov
sub
stos
arpl
mov
ret
je
mov
inc
pop
jmp
movsl
popf
adc
jnp
test
cmp
or
adc
inc
icebp
loopne
cmp
gs
mov
xor
pop
js
sbb
cmp
mov
mov
fisttps
push
out
je
pop
nop
hlt
gs
pop
fcoml
xor
dec
xor
xor
adc
mov
shlb
insl
xchg
fiaddl
pushf
adcb
sub
lods
pusha
jp
mov
pop
pop
lock
aas
sahf
and
dec
fcomip
in
mov
push
sti
and
adc
in
add
dec
ss
lret
or
aaa
sti
pop
and
mov
pop
ret
lock
fldl
pop
dec
mov
mov
xor
push
adc
adc
ds
sti
lock
out
and
js
xchg
stos
les
scas
popa
cwtl
fdivr
pop
add
sbb
mov
jb
jmp
xlat
dec
into
gs
adc
test
jl
xor
dec
fcoms
imul
les
rorb
push
mov
inc
je
iret
mov
add
lcall
inc
xlat
fisttpll
pop
and
enter
ja
data16
xchg
les
and
xchg
dec
push
ror
cmc
jb
fbld
push
add
and
inc
dec
pop
lahf
insl
aas
adc
cmp
ja
pop
mov
pop
mov
jp
cmp
das
mov
add
jmp
stc
sets
sbb
xchg
jecxz
inc
sbb
pop
lret
repnz
das
out
xchg
add
fs
inc
inc
mov
test
mov
out
jmp
push
out
ljmp
call
ret
push
pop
insb
xchg
push
or
cmp
mov
add
loopne
pop
jb
in
out
stc
xor
fst
push
in
pop
or
pop
push
xchg
inc
and
in
test
outsb
outsl
or
or
aaa
popa
pushf
in
jmp
add
cmp
lods
or
or
and
inc
sbb
or
or
xor
ljmp
xchg
daa
dec
cli
mov
test
xchg
pop
push
xchg
add
mov
addb
inc
ror
sub
sub
push
scas
xlat
push
jne
cld
subb
outsl
and
rolb
add
sbb
inc
pusha
cmp
es
jmp
mov
jne
cmc
sar
mov
lods
int3
xor
pusha
scas
xchg
add
loopne
in
dec
test
mov
xor
outsb
jg
arpl
add
int
sti
adc
out
push
mov
jle
jg
inc
scas
and
scas
lods
xchg
imul
fisttps
push
add
ds
push
test
cs
loop
sub
lea
out
popf
ss
pop
ss
cmc
mov
and
lret
sub
int
pop
stos
in
push
push
fistpll
add
mov
aaa
out
test
or
ficomps
or
xor
test
mov
enter
push
or
decl
scas
test
lret
test
push
notl
es
mov
into
call
push
je
stc
dec
pusha
mov
cmp
addr16
cmp
xor
lret
jbe
shr
pop
aaa
rcll
mov
or
loopne
xlat
adc
cmc
sub
sub
sub
loopne
lret
out
jg
mov
aas
cli
incl
std
xchg
sahf
popa
pop
rolb
sbb
loopne
mov
jne
push
dec
add
sub
mov
push
push
stc
sbb
out
mov
mov
mov
dec
dec
mov
mov
repnz
divb
mov
sbb
cli
ja
and
push
hlt
aas
xor
fadds
mov
loopne
xchg
inc
cmpsb
push
xor
shll
fs
xor
jb
test
loope
sub
movsl
push
add
add
sub
mov
adc
xor
xchg
test
dec
mov
lods
jo
movsl
pop
bound
mov
mov
int3
dec
dec
shrb
jae
xor
cmpsl
std
or
pop
cwtl
inc
into
pop
fisubs
xchg
fidivs
bound
imul
cmp
sub
or
aaa
xchg
std
mov
shrl
outsb
addr16
add
or
or
js
push
test
shrb
rolb
ret
popa
movsb
cmp
sub
inc
push
mov
fdivrl
out
xor
dec
lods
add
out
outsl
pushf
daa
xlat
in
jp
shlb
mov
adc
inc
xchg
cmp
daa
lods
mov
jg
js
rolb
ss
cmp
icebp
movsb
xchg
jnp
fs
cltd
jnp
in
cs
dec
jmpw
xchg
out
lods
fcompl
imul
faddp
outsb
sbb
enter
mov
mov
dec
jns
jo
push
test
repnz
push
int3
imul
and
jp
pop
adc
or
cmpsb
adc
sarb
push
cld
cmpb
out
lods
fs
pop
int
jg
test
and
icebp
jecxz
xchg
lds
mov
xor
shlb
mov
adc
jmp
ds
add
inc
or
push
subl
xor
and
mov
xchg
icebp
dec
jno
out
js
and
stos
adc
mov
stc
mov
mov
mov
xchg
add
sub
call
push
dec
xor
cmpsl
cmp
xchg
push
js
and
sbb
dec
aas
out
dec
xorl
mov
test
inc
ficoms
fwait
orb
rorb
into
in
nop
push
mulps
and
adc
and
jae
mov
fstl
xchg
psadbw
movsb
ror
lret
subb
xor
fxch
push
pop
adc
inc
dec
unpckhps
comiss
xchg
in
jl
fs
mov
xchg
mov
iret
cmp
jb
popf
inc
movsl
mov
jge
mov
inc
sbb
mov
mov
mov
aaa
mov
mov
mov
sub
sbb
call
mov
push
fwait
cmpb
mov
mov
out
push
aas
inc
jecxz
fnstcw
sub
fs
mov
out
push
pop
add
scas
punpcklwd
dec
repnz
insb
inc
sbb
and
dec
and
inc
cmp
loop
out
mov
dec
imul
ret
aaa
push
jnp
lock
movlps
fldt
scas
add
imul
aaa
xchg
jb
rolb
inc
cltd
or
jl
sbb
aas
aaa
out
xor
lcall
mov
jl
jne
sub
xchg
shrd
mov
or
xor
add
dec
out
daa
pop
and
mov
scas
decb
ja
inc
repnz
xor
les
sub
fiaddl
iret
out
sbb
mov
mov
sub
dec
push
mull
jnp
push
add
test
adc
cmp
ljmp
std
stos
or
push
cmc
cmpsl
xchg
sbb
mov
push
add
push
popa
and
inc
jmp
in
jmp
xchg
inc
mov
fbstp
add
mov
xor
push
fistl
jge
in
pusha
add
add
mov
add
pushl
lods
lahf
add
xor
mov
ja
andb
js
or
fsqrt
xchg
push
xor
test
or
cwtl
adc
mov
cmp
mov
loop
xlat
cmc
addb
jecxz
cmc
push
pusha
icebp
or
loope
sahf
add
cmp
nop
mov
clc
mov
push
dec
mov
fmul
out
testl
xor
ret
pop
leave
outsl
lcall
dec
xor
fs
loopne
aas
or
lgs
mov
daa
mov
or
mov
lods
xlat
xchg
mov
xor
js
jl
jge
xlat
xchg
test
mov
punpckhdq
js
dec
std
and
cmp
pop
mov
jmp
mov
leave
cmp
jno
lahf
xchg
add
sub
adc
mov
push
inc
leave
dec
idivb
andb
addr16
jmp
xlat
jmp
es
mov
enter
enter
dec
mov
addl
jns
shrb
fsubr
inc
je
lret
jmp
cmc
push
pop
clc
jl
loopne
jp
mov
pop
or
push
in
jecxz
xchg
inc
and
xchg
pop
sbb
sahf
movsl
and
and
inc
inc
pop
jge
cmpsb
inc
fmul
sbb
mov
push
mov
xchg
xchg
adc
jge
lret
fdivs
push
iret
les
sbb
inc
adc
add
in
sub
adc
stos
lods
outsl
ret
push
cmp
add
ja
pop
xchg
imul
ljmp
nop
jno
in
pop
add
sahf
inc
jl
out
cmp
mov
shl
mov
loopne
mov
xchg
mov
pop
test
mov
sub
shlb
test
pushf
xchg
and
lock
in
pop
inc
mov
sarl
jne
jmp
push
xchg
loope
ds
jle
sbb
cmp
sbbl
pop
popa
mov
jnp
add
pop
inc
dec
inc
lret
xor
popf
adc
negb
xor
mov
pop
inc
jecxz
mov
push
ftst
sbb
fucomip
lock
into
ret
sub
inc
mov
or
cmp
or
sbb
jecxz
pop
mov
in
cld
pop
cs
dec
subl
mov
push
cmc
pop
popf
test
dec
and
sub
push
clc
in
xor
mov
sub
das
nop
and
scas
adc
daa
sbb
jns
adc
and
mov
and
xchg
imul
jmp
mov
mov
lods
xor
and
loop
xchg
movsb
inc
mov
xor
ret
mov
int3
cmpsl
xchg
rep
bound
cmp
push
gs
add
les
push
jg
das
fidivrs
adc
scas
add
sbb
jne
sbb
shl
scas
pop
mov
pop
in
mov
mov
loopne
aam
xor
inc
xor
jmp
mov
mov
push
sbb
mov
sbb
mov
lahf
inc
imul
push
xchg
or
test
mov
jmp
add
push
loopne
mov
add
sbb
sbb
imul
jns
sbb
mov
test
xor
adc
inc
ljmp
sub
aas
and
lahf
mov
fildll
mov
mov
push
rorb
mov
add
adc
mov
push
add
mov
mov
inc
movsb
or
mov
mov
inc
mov
jmp
outsl
iret
call
in
push
sbb
mov
jo
mov
jle
lds
xor
leave
cltd
xorl
pop
sti
cmp
into
mov
repz
outsb
adc
jbe
cmp
sti
fstps
fisttpll
jmp
nop
mov
push
mov
sbb
es
jl
in
ss
xor
push
mov
cmp
mov
pop
in
lock
add
mov
scas
push
mov
data16
sbb
mov
jnp
pop
nop
lcall
std
jge
pop
nop
pop
inc
xor
mov
push
pop
xchg
test
jo
inc
sbbl
or
sahf
xor
stc
mov
push
mov
mov
jmp
shl
inc
sub
sbb
mov
push
imul
jecxz
lret
jecxz
out
movl
clc
xchg
repz
je
sub
cmp
and
pop
in
ret
jnp
adc
and
daa
in
inc
ret
push
or
mov
mov
cmp
outsl
data16
inc
pop
lock
adc
shll
les
out
filds
pop
sub
sub
out
cmp
repnz
shrb
gs
mov
setne
inc
je
fildll
stos
decl
aaa
insl
icebp
hlt
ficompl
add
mov
push
cld
adc
mov
xchg
xchg
std
jmp
or
rcrb
pop
jp
clc
dec
sbb
xchg
dec
scas
iret
mov
lcall
ret
mov
in
cltd
sub
jmp
push
arpl
out
sti
fxch
jl
sub
loope
cmp
jb
not
push
xchg
dec
jns
stc
push
push
adc
imul
in
add
mov
xor
idivl
cmp
jno
dec
loop
mov
js
cmp
pop
adc
mov
sbb
sub
xor
or
enter
push
xchg
out
int3
cli
sub
movsb
xchg
mov
add
mov
pop
sbb
sub
and
subl
out
sbb
inc
push
std
stc
popf
jl
fimuls
sub
lods
mov
in
inc
fidivrs
stos
lret
jge
sbb
scas
aam
xchg
xor
hlt
lods
xor
sbb
dec
outsl
popa
cmp
stc
jmp
xor
mov
cld
jmp
fadd
inc
sub
xchg
js
xor
inc
ja
dec
mov
adc
cli
xor
flds
push
mov
insl
dec
inc
adc
ljmp
jge
scas
mov
popa
dec
cmp
inc
repnz
pop
leave
mov
jo
add
fwait
and
xor
faddl
add
out
aam
adc
mov
dec
ficompl
out
xlat
pop
xor
iret
add
sbb
adc
mov
fiaddl
or
stos
pop
and
or
pop
and
or
jae
push
jp
sub
arpl
negl
xchg
mov
dec
imulb
ret
in
sbbl
sub
push
mov
cmc
jno
add
shlb
out
pop
adc
imul
jb
mov
rolb
loop
push
add
popa
xchg
or
mov
es
sub
aas
mov
outsb
sub
and
add
sahf
notl
jmp
dec
and
mov
ret
cmp
add
shl
dec
leave
popa
mov
mov
jo
add
mov
fs
pop
das
lods
mov
pop
fisubs
mov
imul
into
mov
jne
cmp
mov
shlb
adc
mov
or
leave
adc
mov
add
mov
ret
aad
mov
push
nop
mov
out
inc
push
cmpsl
push
mov
jg
dec
jae
jbe
cmpsb
into
and
xlat
int
xor
sbb
adc
shll
loop
bound
mov
sbb
jo
mov
test
outsl
stc
repz
cmc
das
je
mov
mov
int
jl
dec
push
push
mov
xor
sbb
in
sahf
outsl
mov
add
mov
mov
flds
inc
pushf
insl
pop
movsb
mov
pop
xor
lods
sbbb
xor
stos
sbb
or
inc
nop
out
mov
mov
add
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
push
call
push
push
push
call
push
push
push
push
push
call
test
je
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
call
push
push
call
push
push
push
call
lea
push
call
call
cmpw
pop
push
je
push
push
call
push
call
add
call
jmp
push
push
call
pushl
dec
testb
add
fsubp
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
mov
vminps
cmp
imul
repnz
mov
mov
dec
ja
repz
push
mov
xchg
add
imul
jb
jns
dec
testb
add
popf
movsl
inc
inc
mov
lret
cs
daa
mov
fsts
pusha
out
xchg
mov
cs
inc
xor
inc
aam
sub
cld
add
jns
pushf
gs
mov
bound
push
jb
daa
iret
fdiv
cs
push
and
sbb
push
fidivl
or
aam
mov
cld
or
sbb
popf
movsl
inc
inc
testb
add
fwait
pop
rolb
testl
js
ficomps
dec
testb
push
xlat
xchg
jns
ficomps
dec
testb
add
fnstsw
rorb
pop
pop
push
jg
sbb
dec
out
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
push
inc
testb
add
fcompl
lret
testb
add
fimuls
dec
out
pop
push
jg
pop
rorb
dec
pop
push
je
xor
dec
testb
add
ficomps
dec
testb
add
ficomps
dec
testb
add
ficomps
dec
testb
add
ficomps
dec
testb
add
ficomps
dec
testb
add
ficomps
dec
testb
add
ficomps
dec
testb
add
ficomps
dec
testb
add
lock
push
jg
pop
rorb
dec
pop
push
cmp
dec
pop
push
jg
jae
cmp
int
jg
insl
sbb
add
ficomps
dec
testb
add
fidivrs
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
jg
pop
rorb
dec
pop
push
push
ficomps
dec
mulb
mov
mov
push
loope
or
in
std
arpl
ljmp
sub
arpl
jg
lea
pusha
maxps
dec
xor
jb
fidivs
or
xor
xchg
fmull
xor
sbb
rorb
sub
mov
mov
xor
mov
addb
jbe
loope
mov
jne
aad
clc
and
loopne
push
xchg
or
mov
std
int
mov
out
in
jbe
mov
negb
and
repz
mov
or
lock
dec
imul
push
pop
test
mov
add
sub
pop
adc
addb
or
inc
data16
incl
cltd
jbe
fdivs
stc
stos
shlb
push
imul
enter
cmc
negb
cs
jno
out
jns
faddl
inc
das
xchg
inc
loope
dec
inc
movsl
in
cwtl
push
and
sbb
cmp
mov
dec
cmpsb
mov
popf
jne
jno
jnp
mov
pop
scas
js
and
inc
push
push
adc
mov
cltd
mov
mov
jge
mov
inc
mov
stc
test
inc
add
cltd
das
pushf
repnz
cmp
push
sahf
je
mov
test
fistps
cmovbe
das
sub
mov
bound
aaa
lock
xorb
insl
enter
sbb
jecxz
adc
popf
lea
add
fimuls
rolb
xchg
mov
mov
aaa
addl
sub
ret
pop
inc
dec
scas
in
gs
ret
push
stos
fcompl
ret
icebp
lock
push
push
push
lds
pop
outsl
inc
lds
push
sbb
popa
repz
stc
xchg
dec
subb
jmp
jl
stos
aam
xor
mov
push
aaa
or
pop
jle
mov
leave
add
int3
int
cmp
outsl
adc
xchg
xchg
xchg
fcoms
hlt
xorb
gs
mov
sub
push
push
cmp
cltd
mov
add
icebp
das
out
repz
cmovge
jne
jle
nop
loopne
mov
xchg
or
push
sub
in
dec
mov
std
push
ret
cmp
pop
scas
or
jae
ret
test
ret
cwtl
mov
xchg
je
aad
mov
gs
jecxz
cmp
add
jg
mov
jne
leave
jmp
sbb
adcb
test
pop
and
push
inc
stos
xchg
jae
sbb
push
add
fldenv
jl
or
xor
add
pop
cmp
mov
cli
add
or
sub
addr16
imul
push
inc
add
lock
inc
loope
mov
popf
es
push
stos
mov
pop
imul
pop
push
jae
out
push
adcl
xchg
inc
inc
push
cmp
pop
in
std
inc
ljmp
xchg
loop
mov
imul
cmp
mov
sbb
cld
adc
lea
cmp
cmpl
lock
xchg
cs
mov
addr16
jle
adc
das
ds
xchg
ds
sub
testl
fisttps
mov
fstpl
outsb
ficoml
lea
dec
sbb
orb
fwait
test
adc
jns
inc
lea
inc
or
cmpsl
dec
lock
test
andb
adc
mov
stc
dec
call
xor
inc
mov
shrl
fdivl
lahf
loope
inc
mov
sub
xor
sub
bound
ss
lods
push
ljmp
push
ret
cmp
mov
rcl
ljmp
push
sbb
sti
dec
scas
xchg
mov
sub
cli
pusha
cmc
daa
popf
add
mov
push
sub
lock
pop
push
fidivs
std
xor
mov
loopne
dec
pop
jns
notl
adc
imul
out
fwait
jne
mov
aam
adc
pop
push
sub
lods
xchg
fsubr
add
cltd
fadd
push
sbb
xor
insl
sar
mov
mov
inc
sahf
pop
ficoml
xlat
fwait
adc
pop
out
xor
mov
pop
adc
lret
mov
rol
adc
arpl
test
add
cmp
clc
pop
and
stos
dec
xor
dec
popa
ds
in
outsl
sub
adc
fbld
repnz
rol
lahf
fidivs
inc
dec
fildll
int
imul
mov
lods
out
popf
jno
add
mov
lock
out
outsb
clc
jge
inc
jns
pop
adc
rcrl
ja
lock
dec
stos
fildll
sub
ret
insl
or
cmpsl
outsb
imul
scas
sarb
add
inc
pop
mov
xor
xor
adc
dec
mov
mov
scas
loop
in
add
jle
mov
xlat
cltd
in
mov
rorl
pop
rcl
mov
xchg
xor
rclb
mov
fs
mov
ss
xchg
leave
into
ds
imul
hlt
imul
xchg
pop
add
neg
in
adc
jbe
je
push
jns
jnp
sbb
push
fisubs
mov
xchg
inc
scas
js
movsl
movsl
cmp
insb
sbb
imul
push
adc
xor
ret
sub
dec
xor
mov
cmp
mov
add
fstpt
mov
shrb
pop
xchg
imul
push
repnz
push
daa
fwait
insb
cld
pop
sbb
cld
lock
or
pushf
in
jle
repz
sar
xchg
in
out
addl
push
sub
pop
xchg
dec
pop
xchg
aas
rcrb
mov
and
lret
xor
jnp
inc
sub
ljmp
iret
xrelease
rorl
mov
int
addb
dec
and
mov
outsb
pop
xor
loope
jg
cwtl
call
adc
aaa
mov
rcrl
test
js
adc
out
dec
and
or
rcl
ret
data16
ret
jne
or
and
cs
xchg
mov
cmpl
and
ficoml
fucomi
addl
and
mov
add
outsl
dec
test
mov
js
jecxz,pn
or
and
and
jl
loopne
rcl
mov
push
icebp
push
push
xor
add
insl
int
in
xchg
daa
lea
sbb
pop
outsb
pop
xchg
mov
scas
dec
daa
mov
out
loopne
xchg
adc
shll
pop
push
xchg
into
lcall
cmp
xchg
xor
notl
sbb
xchg
mov
sbb
inc
cmpsb
jp
jmp
cmp
ja
and
mov
pop
push
insb
inc
movsb
clc
push
out
jns
xchg
movsl
shl
ret
cli
sbb
mov
xor
jle
mov
or
dec
jae
popa
gs
add
cwtl
nop
mov
xchg
cmc
out
mov
in
xor
jo
inc
or
test
jno
outsl
lret
aaa
scas
insl
add
clc
jnp
orb
shlb
std
jno
adcl
mov
adc
scas
adc
fildll
xchg
mov
stc
sahf
pop
pop
popa
pop
call
and
and
xlat
add
xchg
lcall
mov
push
or
lea
dec
xor
or
xchg
enter
push
dec
test
pop
or
pushf
cmc
bound
adc
pop
es
pop
xlat
pop
mov
lret
jns
mov
adc
mov
popa
push
insl
sub
mov
into
ds
enter
mov
cmp
mov
incl
out
aam
xor
push
test
out
stos
lcall
xchg
and
outsb
aaa
in
pop
jne
es
sti
loopne
xchg
int
push
adc
cltd
popa
jne
jno
push
mov
xchg
dec
sbb
into
outsl
jmp
jecxz
xor
inc
push
imul
rorb
mov
popa
aas
rorb
rcr
push
add
jle
lods
cli
sub
lea
loope
push
pop
and
and
bswap
jecxz
lods
fistps
loop
fistps
jle
push
lret
mov
sbb
cld
xchg
mov
ret
mov
divl
and
stc
test
lret
and
ja
cltd
bound
jne
outsb
movsb
jae
pop
xlat
cld
dec
fwait
xlat
nop
jle
loop
daa
push
xor
push
xchg
and
and
inc
fcomps
cmp
push
inc
pop
nop
jle
pop
test
mov
clc
xchg
es
or
cmp
sub
mulb
test
mov
fdivl
je
mov
mov
arpl
push
fwait
mov
push
jb
mov
idiv
imul
loope
in
sti
add
xchg
mov
adc
adc
sti
cmp
filds
repz
sub
pop
rcrb
ret
add
pop
xchg
xchg
fcmovnb
movb
inc
lret
jno
ja
ss
inc
loop
lods
ret
outsb
pusha
pop
or
sub
stos
dec
and
inc
test
int3
mov
and
in
inc
out
into
push
add
js
je
jg
idivb
mov
out
cmp
sbb
pop
pop
orb
mov
and
shrb
shr
ljmp
je
pop
aad
fistps
stc
xchg
popa
mov
loop
shr
and
or
xor
ret
lahf
lds
push
cmp
out
mov
ss
in
mov
ret
iret
xor
and
jne
mov
fmul
mov
dec
push
mov
xchg
sub
test
push
mov
sbb
sub
push
xchg
mov
lcall
fbstp
xor
ljmp
scas
repz
mov
mov
xor
xchg
sbb
xor
inc
repz
dec
jmp
test
fisubrl
mov
mov
int
sub
pop
jg
mov
cmp
out
lock
dec
aad
jmp
push
out
push
or
fs
cmp
loope
and
mov
int
sbb
lea
fcomip
loope
mov
subb
push
mov
push
pop
jmp
testb
cmp
insb
fisubrl
fildll
aas
ret
mov
adc
inc
and
and
inc
movsb
xor
insb
xchg
and
inc
les
jns
aam
pop
lcall
int
rclb
addr16
sbb
pushf
adc
pushf
adc
xchg
pop
cmp
inc
in
outsb
mov
mov
pop
dec
cmpsl
out
outsl
sarl
mov
imul
insl
cmp
sbb
lods
inc
cwtl
xchg
pusha
jns
imul
call
adc
andb
aaa
das
aas
popa
push
shrb
lcall
inc
adc
adc
dec
mov
inc
aaa
nop
popf
mov
dec
push
loopne
sbb
aaa
seta
ja
js
or
jo
shrb
sub
clc
add
mov
je
jmp
in
mov
call
inc
push
jo
mov
sub
sub
int3
mov
out
cmp
ficompl
xlat
cs
sbbb
sbb
addb
into
sar
aas
xor
shlb
inc
xchg
mov
gs
sub
scas
int
scas
ds
in
push
dec
or
pop
push
dec
js
subl
fldt
aas
aas
jl
dec
rcrl
nop
xor
pop
push
inc
adc
nop
cmp
jb
xchg
fidivrl
xchg
mov
cmpl
scas
mov
jge
call
mov
call
mov
or
fdivl
daa
jb
adc
rolb
mov
mov
roll
in
jecxz
adc
and
jmp
rol
mov
int
and
fsubl
stos
sbb
int
push
sub
fwait
shlb
xor
push
pop
and
std
adc
jp
mov
lods
push
mov
lods
inc
jmp
pop
in
push
and
push
test
jns
lods
cmpsb
push
repz
mov
pop
pop
jns
cs
inc
nopl
enter
mov
pop
iret
xchg
pop
incb
mov
dec
mov
pop
outsb
ds
mov
and
or
inc
clc
mov
inc
or
rolb
movsb
and
and
pop
ror
fistpll
outsl
mov
jmp
and
cltd
imul
push
pop
inc
es
jge
xorb
push
sub
mov
lcall
mov
lret
test
dec
in
dec
fcomps
fbstp
aas
scas
xchg
in
es
in
jge
test
lock
setge
dec
ss
xor
or
enter
movsb
aad
rcr
fcomps
mov
scas
pop
sbb
xchg
out
add
cli
adc
pop
aad
sub
in
mov
inc
pop
or
cmpsl
fisubl
mov
aas
sahf
add
xchg
adcb
dec
push
inc
ds
mov
aad
add
out
xor
pop
addr16
xchg
cmpsb
test
mov
or
dec
sbb
lods
les
push
das
jg
xlat
std
jb
and
adc
or
mov
mov
jo
pop
inc
or
add
lock
jo
test
jl
in
cld
mov
cmp
jecxz
or
cli
mov
push
mov
mov
fsub
pop
jnp
xchg
mov
push
sub
lret
aad
sarl
sbb
cmp
fstps
pop
popf
jno
clc
mov
add
aam
sub
jns
inc
scas
pop
and
into
lret
cld
mov
add
xlat
push
addr16
lcall
cmp
sarb
mov
jae
subb
jb
aas
adc
dec
jp
add
push
add
push
scas
push
cltd
pop
and
and
add
push
adc
outsb
shrb
push
call
push
push
push
call
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
bound
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
bound
nop
bound
mov
add
bound
jo
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
bound
aam
inc
add
bound
hlt
bound
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
arpl
nop
arpl
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
fs
add
fs
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
test
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
test
nop
test
mov
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
test
aam
inc
add
test
hlt
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
test
nop
test
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
xchg
addb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
