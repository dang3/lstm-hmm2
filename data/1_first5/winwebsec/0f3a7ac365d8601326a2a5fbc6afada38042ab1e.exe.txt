adc
sbb
add
add
or
addb
inc
add
push
xor
pop
shlb
inc
inc
or
jo
add
add
adc
adc
nop
push
stos
xchg
and
push
sbb
test
inc
push
add
add
and
add
and
and
arpl
pusha
and
add
or
add
andb
cli
fadds
and
andl
add
and
dec
xor
and
je
add
add
or
mov
and
or
ror
sub
shl
and
push
xor
arpl
add
pushf
dec
add
pusha
lds
add
xchg
and
mov
add
add
adc
xorb
jb
adc
sub
or
add
mov
add
test
and
stos
nop
sub
rorb
mov
or
xchg
data16
cmp
daa
mov
push
enter
pusha
xchg
push
or
add
ret
or
andb
cmpsb
inc
sub
and
add
sbb
test
add
pusha
sbb
adc
xor
adc
sbb
or
inc
orb
dec
mov
add
push
or
fs
mov
lock
add
xor
add
dec
or
add
add
add
xchg
sub
add
add
or
inc
add
add
inc
add
xchg
add
mov
add
inc
bound
and
inc
add
inc
or
push
adc
cpuid
clc
dec
addb
add
adc
lock
or
dec
add
dec
orl
add
movsb
adc
sub
add
sbb
or
or
addb
rolb
adc
imul
nop
add
add
adc
add
adc
add
mov
rcll
rolb
xchg
add
xor
and
fcompl
mov
inc
or
or
orb
add
cmpsl
push
adc
sbb
mov
inc
inc
sbb
adc
adc
or
inc
mov
shll
or
add
xor
mov
add
add
inc
add
or
mov
mov
mov
add
add
mov
add
and
add
inc
nop
dec
add
add
addb
arpl
test
push
dec
movsb
inc
inc
and
add
add
adc
xor
or
loope
pushf
addb
or
xchg
xor
add
xor
sbb
add
sub
gs
add
and
inc
mov
enter
add
xor
pusha
rorl
mov
bound
inc
mov
add
xor
push
and
adc
inc
adc
add
or
pop
addl
add
add
and
adc
add
add
add
and
and
sub
mov
addb
xorb
add
add
inc
or
or
stos
and
or
adc
mov
add
adcb
pop
and
sbb
add
inc
add
xor
movsb
add
subl
add
rclb
adc
or
orb
adc
pop
and
and
inc
inc
nop
add
mov
adc
or
add
and
inc
loop
sub
and
addb
xchg
sbbb
test
addb
mov
jo
nop
add
jl
add
xorl
xorb
add
js
add
push
inc
add
andb
add
inc
add
and
mov
inc
and
add
addl
rorb
mov
add
add
or
add
inc
mov
xor
add
mov
adc
dec
add
adcb
cmp
or
and
inc
lea
rorb
shlb
orb
xor
add
mov
mov
rcrl
inc
add
push
mov
and
xor
inc
adc
cmp
add
inc
adc
and
sbb
add
inc
and
add
sbb
add
add
mov
popa
add
daa
adc
xor
add
adc
lcall
add
add
add
xor
add
dec
push
adc
and
add
add
subb
push
add
add
add
addb
add
cwtl
sbb
push
and
test
inc
adcl
mov
xchg
sbb
add
push
addb
dec
rcrb
add
mov
xor
xchg
and
mov
add
xor
or
adc
push
and
xchg
sub
add
adcb
pop
add
adc
or
mov
movsl
inc
pusha
push
xor
mov
sbb
inc
addb
ret
loopne
xchg
add
xchg
dec
rolb
jo
sub
adcb
dec
and
push
inc
adc
xor
cwtl
add
add
add
and
sub
dec
adc
and
or
fwait
enter
add
add
add
adc
add
sbb
xor
andb
movsb
test
rclb
push
add
add
mov
and
or
movsb
popa
add
add
cmc
add
add
orb
or
push
adc
jb
dec
movsl
and
sub
and
add
add
or
add
mov
or
inc
mov
shrb
add
inc
mov
inc
xor
sbbb
ret
and
add
add
add
and
mov
xor
inc
add
inc
add
sub
adc
orb
mov
popa
inc
adc
add
or
adc
add
mov
sub
test
enter
mov
add
adc
and
xor
popa
push
push
add
sbb
inc
add
or
add
push
xor
sbb
add
add
and
loopne
and
dec
push
push
nop
inc
add
add
pop
andl
or
inc
dec
or
rorb
add
inc
adc
cmp
test
add
inc
test
inc
ret
dec
add
and
xor
adc
push
cmp
push
push
mov
xor
add
fs
xor
aad
add
add
bound
adc
shll
add
nop
daa
movsb
sub
mov
and
add
mov
add
leave
sub
add
xchg
nop
adc
adc
push
pusha
xchg
pushf
or
jae
or
add
jb
add
pop
add
add
add
les
and
addb
add
sbb
or
xor
mov
mov
pop
mov
inc
call
add
add
mov
inc
or
addb
push
sbb
add
rolb
add
or
add
or
orb
add
jmp
xor
dec
andb
inc
and
sbb
add
and
push
adc
xchg
add
add
test
and
les
and
adc
sbb
add
sub
add
call
mov
xchg
test
dec
add
dec
mov
addb
dec
push
or
bound
add
mov
and
inc
inc
or
add
and
add
push
add
sub
add
push
add
mov
adc
andb
add
add
add
and
inc
push
mov
test
pop
add
adc
adc
rorb
sub
mov
push
inc
inc
adc
adc
sub
add
add
addl
add
xor
add
and
pop
add
rorb
add
adc
and
add
inc
add
mov
cmp
add
loope
add
mov
xchg
test
sbb
add
add
xchg
and
add
inc
add
add
or
and
inc
adc
rolb
nop
mov
inc
rol
xor
add
adc
add
aaa
add
jo
mov
cmpb
adc
adc
dec
adc
dec
pop
push
sbb
push
sbb
add
or
ret
adc
add
sub
mov
inc
add
addb
inc
and
popf
xchg
lret
xchg
fadds
and
andb
adc
inc
adc
add
mov
andb
rclb
add
nop
adc
add
add
adc
and
nop
add
or
or
mov
cmpsl
dec
insb
and
mov
xchg
or
xchg
add
xor
nop
adcb
mov
inc
addb
sub
add
mov
stos
xorb
add
inc
pop
mov
mov
or
add
and
test
and
and
rorl
add
add
or
push
call
push
nop
lret
inc
inc
rolb
add
add
pop
add
xor
push
add
ret
add
fadds
mov
adc
mov
inc
addb
stos
add
add
add
sbb
adc
add
add
pop
inc
add
inc
xorb
loope
or
add
adcl
adc
test
adc
adc
xor
add
adc
and
mov
or
and
arpl
add
es
rorb
pop
xchg
adc
push
and
or
add
adc
inc
addb
add
jae
add
and
add
or
sub
mov
push
sub
pop
add
add
adc
pop
inc
addb
inc
mov
adc
push
adc
add
and
lcall
orb
add
add
inc
rolb
sbb
stos
and
add
add
or
or
adc
add
and
jo
or
add
and
add
add
xor
or
mov
or
inc
add
push
xchg
mov
adc
inc
mov
xor
andb
add
faddl
adc
add
nop
adc
pushf
mov
xor
push
add
adc
xor
adc
add
orb
add
add
or
pusha
add
es
add
xchg
jo
adc
inc
dec
movsl
adc
cmp
push
and
add
mov
xchg
mov
add
add
inc
and
adcb
adc
fmull
add
inc
mov
pusha
add
inc
xchg
sbb
xor
loopne
add
add
inc
adc
xchg
add
xor
add
dec
xchg
mov
or
adc
js
rolb
xchg
orb
push
add
add
and
popa
sbb
call
xor
add
cwtl
add
mov
add
daa
orb
pop
inc
add
adc
xorb
add
or
add
mov
inc
and
add
loope
xchg
add
and
or
mov
add
mov
push
xor
adc
and
add
add
and
mov
add
sbb
adc
addb
add
mov
mov
add
adcb
add
lret
add
mov
add
sbb
add
add
add
add
adc
adc
add
add
and
mov
fildl
sub
and
mov
sub
adc
insl
and
xchg
sub
and
and
jae
test
dec
add
sub
add
pop
inc
or
sbb
add
and
add
and
test
add
and
push
add
fistpl
orb
and
sbb
xchg
lods
adc
adc
test
popa
add
enter
sbb
add
xorb
add
push
add
add
adc
or
add
adc
and
inc
imul
add
and
and
inc
add
mov
and
inc
and
and
inc
test
or
pusha
dec
and
inc
sbb
inc
inc
add
or
or
and
xchg
push
add
add
addl
adc
add
adc
push
adcb
add
sbb
mov
addl
add
add
nop
adc
and
test
inc
adc
add
inc
and
mov
add
or
or
inc
pusha
sub
and
dec
inc
add
adc
add
sub
inc
xor
add
rcrl
addb
test
add
or
arpl
and
xor
mov
adc
flds
mov
push
inc
mov
add
addl
or
xchg
dec
inc
xchg
add
mov
inc
inc
addl
or
add
add
dec
add
add
rolb
push
add
add
add
jo
xor
add
add
jae
loopne
mov
push
andl
add
adc
add
mov
add
inc
push
and
inc
add
add
add
mov
adc
add
add
push
or
loopne
add
addb
add
addl
and
or
mov
add
mov
cmp
add
pusha
imul
or
lret
push
or
inc
adc
addb
adc
xor
in
call
xor
test
xor
or
add
add
add
or
or
adc
and
sub
add
or
nop
add
add
adc
inc
inc
adc
and
add
adc
add
sbb
add
adc
inc
jae
xor
cwtl
inc
add
inc
adc
add
test
pusha
inc
add
rclb
push
or
or
lods
pop
pop
inc
addl
or
inc
leave
add
sub
lar
inc
add
add
xor
popf
inc
add
adcb
add
addb
adc
add
inc
add
or
adc
inc
mov
and
push
sbbb
pop
shlb
add
adcb
adc
add
and
add
add
add
or
dec
sbb
mov
or
add
inc
adc
rcll
ror
push
inc
jo
les
or
sbb
sbb
mov
add
outsb
or
rolb
and
add
inc
add
addb
inc
and
mov
sbbb
mov
inc
nop
adc
add
adc
nop
adc
or
sub
add
add
or
add
add
add
dec
mov
addb
add
add
sbb
push
or
add
lods
add
dec
repnz
and
and
inc
inc
add
add
add
add
push
dec
adc
or
add
add
inc
dec
add
add
adc
and
inc
adc
sub
dec
add
add
push
add
inc
add
push
inc
adc
push
add
test
or
adc
and
or
or
add
add
add
xor
xor
and
sub
add
add
push
pusha
sbb
and
and
and
inc
cmpsb
cwtl
dec
push
push
mov
rolb
dec
and
and
inc
adc
pop
rorb
adc
or
and
add
add
add
rolb
and
adc
mov
add
add
xor
push
add
sbb
or
adcb
or
add
adc
addb
adc
add
push
rolb
inc
pushf
add
addb
xor
or
inc
addb
push
add
push
nop
mov
and
or
add
or
nop
push
add
inc
inc
or
mov
or
push
add
adc
and
rcll
pop
sbb
add
add
inc
repz
addb
add
add
mov
adc
shlb
add
or
loopne
add
add
sbb
or
ret
add
mov
and
mov
add
dec
add
mov
sub
ja
xor
sbb
adc
pusha
inc
inc
and
and
xchg
add
roll
and
adc
xchg
pop
add
nop
sbb
and
andb
pop
adc
xchg
sub
adc
and
addl
and
adc
fadds
add
addb
or
cmpsb
mov
lcall
mov
add
adc
aaa
adc
or
adc
xor
add
rolb
and
pusha
shll
add
cltd
or
cwtl
insb
adc
and
adcb
and
ficoml
mov
nop
adc
push
adc
popa
adc
bound
add
add
add
add
add
or
addb
xchg
xor
and
adc
mov
movb
add
add
pop
inc
ret
adcb
add
add
nop
dec
inc
dec
push
add
mov
adc
adc
mov
xor
mov
add
adc
and
dec
add
mov
add
or
inc
add
pusha
and
call
inc
lds
or
adc
add
mov
xor
add
mov
push
add
or
add
pop
and
adc
add
sub
or
inc
pop
sbb
inc
lds
inc
adc
add
orb
mov
pop
or
cmp
adc
mov
dec
mov
adc
add
or
xor
and
pusha
inc
adc
sbb
dec
adc
and
or
add
adc
rol
addb
addb
cwtl
or
add
or
cmp
pop
and
add
inc
add
add
xor
add
nop
ljmp
and
lea
mov
adc
inc
xorb
pusha
and
add
and
and
push
or
add
and
nop
and
add
and
xor
add
add
rolb
sbb
mov
andb
and
enter
add
dec
or
add
or
adc
shlb
inc
nop
add
dec
inc
cmp
cmp
add
mov
add
or
sbb
fs
or
adc
cmp
rolb
test
adc
or
inc
add
and
loope
inc
add
push
add
shll
test
bound
test
sub
popa
addl
adc
cwtl
add
and
out
or
sbb
enter
and
lret
sub
dec
add
addb
orb
nop
rclb
add
cmpsb
or
adc
pusha
or
adc
or
add
lods
or
adc
add
or
add
cmp
test
and
addb
sub
sub
test
xchg
add
movups
rclb
add
or
sub
dec
sbb
add
add
add
pop
and
stos
mov
mov
pusha
mov
add
es
lret
nop
sub
push
pusha
add
pop
adc
add
addb
sub
or
inc
add
inc
or
add
call
add
addl
es
pop
bound
and
and
add
and
add
test
sub
mov
and
mov
or
add
dec
sbb
push
dec
and
adc
nop
add
cmpb
add
xor
movsb
test
add
dec
dec
or
dec
addb
add
push
or
push
popa
nop
inc
rolb
rclb
adc
dec
adc
cmp
adc
sub
xor
dec
and
push
adc
adc
nop
and
dec
rclb
lods
andl
add
xor
mov
pop
popa
adc
add
and
cmpsb
add
dec
push
add
add
and
and
adc
add
cmp
sbbb
add
push
inc
push
and
ret
cltd
add
and
add
inc
test
add
add
or
adc
movsb
mov
dec
adc
and
add
or
or
inc
add
adc
mov
pop
pop
push
add
mov
orb
addb
inc
and
add
add
mov
add
inc
dec
and
push
lret
add
add
and
add
inc
adc
nop
adc
mov
repnz
add
add
adc
adc
rclb
add
mov
mov
sbb
adc
add
add
orl
adc
mov
add
mov
sbb
add
add
add
xor
mov
inc
ret
add
or
and
nop
or
adc
add
inc
test
adc
cmp
add
or
or
inc
add
and
add
sub
xchg
sbb
push
add
addb
shlb
add
dec
sub
xor
add
add
add
add
add
add
or
or
pop
rol
or
inc
add
arpl
adc
xchg
add
add
inc
jns
addb
daa
inc
adc
inc
sub
adcl
push
sbb
adc
loope
dec
add
inc
and
add
lds
and
mov
sub
inc
or
cmp
adc
add
dec
pop
adcb
sbb
and
or
adc
add
or
push
add
add
sbb
test
add
rolb
adc
xchg
jae
and
add
add
test
mov
adcb
add
or
add
or
add
inc
adc
add
mov
dec
or
nop
sbb
bound
inc
inc
sub
adc
loope
and
movsb
mov
adc
xor
add
add
adc
add
add
or
inc
sub
orl
add
sbb
push
add
inc
sub
dec
push
add
inc
rolb
add
adc
andb
push
add
addb
orb
sub
and
add
add
add
sbb
add
and
push
add
inc
xor
mov
add
inc
sbbb
or
inc
inc
add
mov
popa
add
and
test
add
add
add
and
add
add
int3
mov
mov
sbb
add
orb
adc
add
sub
push
inc
add
inc
and
inc
sub
adc
or
inc
push
xorl
add
adc
push
pop
add
lcall
add
push
sub
orb
and
and
adc
adc
addb
and
dec
xor
adc
adcb
or
and
andl
sub
mov
xor
mov
add
and
mov
addb
push
add
adc
addl
add
or
add
sub
and
add
pusha
mov
dec
xchg
sbb
add
add
push
and
sub
sbb
add
add
test
or
dec
mov
add
adc
test
rorb
adc
lret
adc
push
inc
sbb
lock
or
add
or
inc
inc
dec
cmp
cmp
or
add
adcb
inc
xor
adc
add
lea
adc
add
push
pop
add
add
inc
pusha
add
xchg
and
mov
inc
adc
pusha
or
xor
add
lea
adc
add
or
and
rclb
or
and
add
inc
loopne
push
inc
addb
inc
dec
adc
add
dec
add
add
xor
and
pushf
or
and
sahf
add
adc
add
test
add
dec
mov
or
and
or
test
inc
sbb
inc
or
push
sbb
add
andb
out
inc
and
lcall
add
sarb
sbb
adc
cwtl
or
inc
or
add
or
or
addl
and
mov
insb
inc
add
inc
xchg
push
rolb
sbbb
adc
pop
add
add
adc
inc
adc
addb
push
dec
ret
and
add
inc
add
xor
mov
push
add
pusha
inc
xor
inc
add
add
ret
nop
and
or
rorb
and
movsb
mov
adc
inc
sbb
push
add
adc
add
or
add
nop
adc
add
test
sub
pusha
or
add
or
adc
push
mov
add
push
and
and
add
add
and
add
sbb
inc
add
add
adc
or
and
add
inc
inc
inc
or
or
add
jo
adc
and
inc
add
adc
add
and
addb
adc
and
sub
mov
nop
add
add
push
inc
adc
ret
inc
pop
add
add
add
add
push
mov
sbb
add
add
sbb
bound
sbb
push
xor
pusha
add
mov
test
mov
adc
or
test
test
or
adc
mov
adc
push
add
xor
add
sbbl
inc
and
add
test
loopne
inc
and
repnz
sub
add
and
xor
or
pusha
and
sub
dec
mov
addb
imul
add
inc
add
inc
add
pop
add
movsb
xor
mov
inc
xor
sbbb
add
movb
xchg
inc
dec
add
add
xor
addb
add
add
daa
in
or
xor
adcb
dec
adc
add
add
inc
mov
loopne
add
inc
or
push
add
add
adc
add
adc
pushf
add
jo
add
pusha
rolb
adc
adc
or
push
adc
sbb
dec
sub
add
or
add
or
add
addb
add
inc
add
push
sub
push
mov
push
push
xorb
push
and
sub
nop
nop
ret
inc
push
add
subb
adc
mov
dec
jne
add
cmp
inc
inc
add
add
mov
add
rclb
orl
add
add
inc
dec
adc
mov
add
jo
add
dec
add
inc
cli
add
inc
or
or
inc
xchg
add
pusha
xchg
adcb
add
add
add
pusha
inc
sbb
or
or
and
xor
inc
nop
sub
adc
addb
adc
xchg
or
lcall
pusha
andl
add
and
add
add
inc
add
test
sub
sbb
add
inc
xor
push
adc
adcb
inc
or
pusha
js
inc
sub
xor
popa
mov
add
rolb
adc
add
add
dec
xchg
adc
push
push
addl
inc
mov
inc
adcb
add
sub
fwait
add
push
inc
and
add
add
push
add
add
adc
xorb
rolb
shlb
movsb
or
or
test
pop
inc
push
shrb
add
daa
add
sub
and
mov
adcb
inc
add
add
push
xor
stos
mov
add
les
test
cmp
adc
add
sub
aad
mov
mov
add
adc
add
pushf
or
add
mov
add
fmuls
add
or
add
add
adc
add
add
sbb
xchg
add
add
mov
push
add
adc
xchg
movsb
add
cmp
dec
inc
xchg
or
or
adc
add
add
inc
or
or
andb
adc
nop
and
rorl
sbb
lcall
add
sub
adc
add
movsb
addb
nop
add
addl
rolb
addb
add
or
add
inc
and
or
add
mov
andb
mov
pusha
xor
add
push
adc
or
or
add
inc
lcall
pushf
mov
mov
or
adc
push
inc
sbb
push
add
and
jp
pusha
lcall
add
add
inc
adc
add
add
sbb
mov
adc
xor
add
or
and
sbb
xor
add
test
orl
add
add
adc
adcb
and
sbb
add
adc
movsl
bound
enter
push
add
push
and
imul
add
xor
adc
add
xchg
or
add
push
adc
inc
and
add
and
dec
adc
or
xchg
add
addl
inc
adc
inc
inc
adc
xchg
and
add
pop
adc
push
or
add
dec
dec
mov
push
xor
mov
add
add
inc
add
sarb
inc
xor
loopne
add
dec
inc
inc
les
inc
adc
and
add
test
test
mov
or
mov
and
sbb
add
add
adc
jo
addb
inc
ret
add
bound
imul
pop
add
or
test
andl
push
mov
cmp
mov
adc
xchg
xor
add
push
or
or
push
or
sub
add
adc
and
push
dec
adc
add
adc
das
adc
add
adc
lods
and
add
adc
cmp
inc
xor
push
add
dec
push
add
adc
add
inc
jo
test
add
mov
inc
pop
xchg
add
nop
add
rcll
add
xor
or
inc
add
and
pusha
add
sbb
xor
push
xchg
pusha
or
adc
push
xor
adc
mov
and
pop
daa
adc
test
adc
sub
and
adc
addb
add
add
add
cmp
push
inc
add
add
push
add
sub
sbb
and
or
and
or
add
add
and
add
mov
or
loopne
or
add
nop
or
add
add
and
add
adc
sbb
addb
mov
addl
sbb
add
ret
adc
sbb
xorb
sbb
pusha
mov
subb
les
or
test
addl
addb
orb
inc
orl
mov
mov
add
lcall
add
call
pop
add
and
add
inc
add
inc
inc
inc
mov
add
add
push
add
adc
add
sub
add
adc
add
and
adc
add
xchg
add
or
push
and
stos
add
or
addb
inc
sub
and
and
sbb
add
sub
sbb
mov
and
add
push
add
add
add
rcrb
test
xlat
push
or
inc
add
add
adc
mov
xchg
cmp
pop
push
and
hlt
adc
and
roll
and
lock
addb
sbb
inc
mov
or
and
inc
pusha
add
push
add
add
add
stos
ss
shlb
add
in
test
add
addb
or
add
or
add
and
mov
les
or
push
add
add
push
and
add
adc
or
or
push
adc
add
mov
les
add
or
and
adc
dec
or
or
orl
add
lds
pusha
add
xchg
add
rorb
sbb
add
jb
push
sub
xor
loopne
adcb
xchg
add
add
xor
adc
sbb
inc
add
add
push
inc
nop
adc
mov
inc
add
or
add
addb
and
xchg
add
xchg
loope
add
add
adc
addb
inc
jo
and
or
add
shlb
dec
add
push
or
or
add
dec
or
nop
or
add
add
inc
adc
add
dec
mov
es
or
or
and
add
xor
add
and
andl
addl
orl
add
inc
addl
addb
push
test
add
cmpsb
or
xchg
xor
rcll
add
inc
add
add
lcall
or
add
mov
adc
pusha
jo
addb
adc
and
addb
andb
add
or
adcb
orl
adc
or
add
and
adc
and
roll
push
andb
push
add
orb
and
shlb
inc
dec
add
adc
and
inc
andl
popa
fisubl
subb
pusha
addb
add
or
inc
add
sub
or
pop
nop
imul
mov
mov
add
dec
adc
jb
or
mov
and
test
sub
and
push
push
call
jl
sub
or
or
rolb
push
roll
push
jle
rorb
push
mov
add
sub
add
or
inc
and
add
test
ret
sbb
addb
inc
sub
add
adc
sub
add
imul
sub
add
add
and
orl
addb
insb
push
or
add
lods
int3
dec
inc
add
or
sub
push
or
sbbb
add
add
and
mov
pop
add
add
add
add
dec
mov
or
lea
dec
inc
mov
xor
dec
add
or
sub
add
fs
mov
add
adc
dec
or
add
roll
movsb
enter
add
adc
push
sbb
and
subl
inc
movsb
mov
or
dec
add
adc
add
dec
add
and
arpl
mov
sbb
xchg
pop
add
and
test
or
icebp
add
add
adc
add
xadd
iret
pop
nop
adc
nop
lcall
and
sub
add
and
add
add
or
sbb
cmp
dec
add
or
inc
add
inc
add
pop
xchg
inc
and
adc
dec
xchg
and
or
push
addb
push
xlat
flds
sub
and
adc
dec
inc
add
sub
roll
adc
and
push
and
add
inc
adcb
cmpsl
cwtl
xchg
add
and
cwtl
add
push
inc
addb
add
cmp
or
adc
aad
inc
and
add
pop
shll
and
nop
adc
add
add
adc
adc
ret
test
add
inc
add
add
jne
adc
dec
and
xor
inc
inc
add
mov
les
rolb
and
inc
arpl
ret
and
and
adcl
add
adc
and
push
arpl
rolb
push
mov
adcb
int3
adc
nop
and
and
add
ret
and
push
sbb
or
inc
adc
loop
add
or
andl
xorl
adc
inc
and
dec
and
or
or
nop
sub
sub
adc
xchg
stos
in
xor
sbb
inc
mov
add
or
sub
rorl
data16
cwtl
add
orb
xchg
sub
mov
push
pusha
adc
nop
xchg
sub
or
and
and
inc
rolb
or
add
mov
xor
sbb
and
add
sub
nop
shlb
or
ret
sbb
add
add
inc
and
add
dec
test
dec
sbb
jb
orb
inc
push
xor
and
inc
add
add
sbb
push
adc
add
push
and
subl
and
adc
dec
or
sbb
add
adc
lods
adcb
push
nop
add
inc
inc
add
add
test
add
adcl
sub
and
inc
add
mov
or
add
addl
cwtl
mov
and
xor
or
inc
inc
sbb
popa
add
push
inc
or
sub
add
mov
add
ja
add
push
mov
addl
andb
inc
nop
addl
js
or
sbb
and
add
and
dec
and
add
add
inc
xor
test
or
add
ret
adc
add
mov
test
add
addb
dec
inc
test
rolb
test
push
or
add
add
add
add
inc
and
add
inc
sub
add
and
or
and
sub
add
xchg
movsl
orb
add
and
inc
dec
and
add
adc
les
cmp
add
push
and
push
adc
add
adc
jo
adc
mov
push
inc
addl
rcll
add
or
add
mov
xor
movsb
xchg
mov
add
inc
xor
adc
adc
xor
push
or
xorb
and
or
lret
or
add
add
push
cmp
insb
and
mov
add
nop
jnp
add
addb
sub
inc
inc
or
in
sub
add
xor
ja
rolb
xor
add
shlb
popa
add
popa
push
add
or
add
addl
add
arpl
add
rolb
add
add
stos
pop
add
or
lar
dec
add
inc
mov
dec
add
test
jo
mov
addb
adc
add
inc
xor
xor
inc
add
or
xorb
lret
add
test
sbb
and
add
add
sub
add
push
inc
add
add
pop
mov
or
add
sbb
ret
sub
or
add
or
andl
push
add
add
push
inc
add
addl
inc
add
or
inc
and
and
rolb
add
or
adc
pop
adc
push
inc
inc
inc
push
push
pop
roll
or
or
add
inc
add
add
inc
jo
add
add
add
push
xchg
add
or
push
or
mov
add
adc
and
pusha
addb
rolb
add
and
dec
adc
nop
add
popa
inc
push
mov
add
and
call
or
sub
add
and
pop
add
enter
xor
pop
pusha
add
inc
pop
test
add
add
dec
sbb
mov
mov
rolb
push
add
test
add
add
pusha
roll
xor
dec
add
add
or
xor
and
or
adc
add
push
mov
addb
sbb
bound
xor
push
dec
or
xchg
or
dec
add
bound
rolb
or
orb
add
sbb
add
test
sbb
sbb
xor
xor
inc
jbe
inc
and
dec
inc
add
addl
add
add
addb
pop
or
adc
dec
adc
inc
mov
dec
nop
push
inc
stos
add
addb
adc
sbb
mov
add
add
and
sub
pop
rcl
sub
and
add
add
add
adc
and
add
adc
add
or
add
sub
and
adc
mov
addb
test
rolb
addb
inc
push
or
inc
test
test
inc
or
adc
inc
sbb
sub
add
inc
mov
add
add
or
nop
and
and
jno
adcb
add
push
pusha
dec
and
or
add
add
test
add
lds
and
sub
and
pop
or
xchg
andl
add
add
adc
add
xchg
add
push
inc
sub
and
add
inc
sub
add
add
loop
adcb
and
adcb
andb
add
inc
push
add
push
sub
add
pop
add
mov
rcll
addb
nop
mov
or
add
bound
add
add
add
outsl
fildl
add
add
add
and
dec
sbb
orb
arpl
and
add
dec
add
add
xchg
mov
inc
and
addb
add
or
sbb
add
add
mov
add
adc
outsb
add
inc
adc
cmp
and
and
rorb
push
addb
adc
add
and
push
add
add
inc
test
dec
add
and
fs
inc
push
inc
jmp
add
and
adc
add
sub
push
or
pusha
rolb
adc
add
addb
adc
and
push
clc
adc
mov
sbb
add
add
dec
js
adc
and
add
or
inc
dec
rorl
cwtl
les
inc
addb
or
lds
sbb
and
or
rolb
addb
adc
sbb
add
adc
add
mov
sbb
or
adc
xchg
and
sbb
add
or
addb
sub
andl
add
xor
dec
pop
and
pusha
add
dec
adc
bound
add
or
dec
dec
add
add
subb
add
pop
inc
add
sub
mov
adc
or
add
sub
adc
add
inc
dec
add
dec
xchg
and
adc
or
daa
adcb
addb
and
xor
lcall
addl
adc
inc
push
adc
add
sbb
mov
or
inc
mov
test
inc
add
push
add
mov
push
and
movsl
sbb
pusha
adc
add
add
or
add
xchg
test
add
xor
addb
orl
subl
adcl
or
push
insb
mov
inc
and
pop
mov
add
adc
add
add
add
add
and
or
adc
push
and
inc
inc
add
insb
add
and
and
andb
adc
and
inc
adc
add
adc
and
inc
add
xor
sub
sbb
add
adc
inc
inc
adc
adc
cltd
and
adc
sub
pop
add
orl
add
push
les
inc
nop
adc
sbbb
and
add
or
add
add
and
adc
push
test
adc
and
adc
add
sub
sbb
add
adc
add
and
xchg
or
sub
push
add
add
add
sub
adc
or
xor
add
add
rolb
add
add
sbb
adc
cmp
bound
adc
andb
push
or
adc
mov
inc
flds
orb
sub
or
add
dec
push
add
sub
addb
or
adc
push
or
add
add
or
in
add
push
and
xor
add
add
add
adc
adc
and
add
push
sbb
add
add
adc
insb
enter
dec
and
pusha
add
add
cmp
add
adc
xchg
cwtl
test
add
mov
rolb
inc
add
add
add
and
add
lods
add
pusha
add
rclb
and
rclb
pusha
inc
add
nop
xor
adc
add
dec
mov
inc
rorb
push
inc
add
adc
add
pusha
or
inc
add
rclb
inc
and
and
add
sub
add
xchg
and
sub
shll
and
add
sub
add
push
add
add
sub
and
dec
pop
lods
adc
add
add
addl
and
addl
inc
arpl
or
add
xor
add
push
and
pop
dec
popa
and
in
inc
add
add
cmp
add
sbb
and
enter
mov
or
adc
adcb
and
add
xchg
or
rclb
mov
add
add
mov
rolb
or
xor
enter
add
add
dec
sub
and
sub
add
add
adc
enter
addl
mov
add
adc
add
orb
and
add
mov
inc
inc
and
add
add
and
push
dec
and
add
or
dec
fiaddl
add
add
inc
and
xor
sub
adcl
add
add
movsb
mov
adc
adc
add
or
or
test
adc
mov
sbb
add
xchg
ret
push
sbb
enter
add
add
add
add
add
sbbb
add
or
adc
test
and
inc
add
sbb
add
and
push
addl
push
addl
add
adc
adc
add
adc
rclb
add
adc
mov
push
xor
adc
stos
adc
add
cmp
add
adc
xor
add
shlb
adc
or
adcb
push
inc
inc
inc
inc
orb
add
mov
xchg
loop
adc
mov
and
adc
and
xor
add
adc
or
add
add
add
mov
nop
mov
daa
push
cmp
add
add
add
push
mov
push
add
add
mov
mov
sbb
and
xor
inc
and
or
addb
mov
rorl
adc
add
inc
fs
addr16
adc
adcb
inc
call
mov
or
add
add
arpl
or
push
or
inc
add
adc
and
addb
add
sub
mov
xor
shrb
adc
sub
xchg
nop
add
dec
add
push
add
adc
add
push
add
inc
adc
sbb
and
sub
pusha
sbb
mov
sbb
and
add
in
push
add
ret
pop
add
mov
or
pusha
or
adcb
push
adc
push
add
inc
push
adc
pushf
enter
rorb
add
add
and
add
jo
dec
add
add
adc
lods
or
mov
add
inc
or
adc
add
or
add
or
sub
adcb
add
or
inc
adc
aaa
and
and
add
add
adc
test
call
or
adc
add
sbb
add
mov
add
imul
add
add
adc
add
adc
xor
sub
add
push
fildl
shlb
xor
jg
andb
and
add
inc
nop
and
and
xchg
or
add
push
adc
and
add
add
add
and
add
add
flds
add
and
adc
sbbl
pop
add
bound
mov
repnz
and
mov
add
add
cwtl
add
add
jo
add
add
inc
inc
add
inc
xor
loopne
inc
add
nop
push
sbb
pusha
add
add
sbb
les
pop
orb
or
add
movsb
inc
mov
scas
addb
cmpb
add
loopne
cltd
xor
add
xor
and
addb
adc
add
mov
add
dec
push
ret
push
lds
adc
inc
orb
add
or
bound
inc
pop
mov
adc
and
and
popf
add
mov
xor
add
jp
dec
adc
xchg
dec
dec
sub
sbb
adc
movsb
add
dec
mov
pop
sbb
add
and
add
mov
adc
or
add
push
xchg
push
and
add
andb
or
or
or
sub
loope
or
inc
addb
inc
xor
addb
and
xor
add
xor
add
sub
movsl
xor
and
xor
xorb
and
add
and
addb
add
push
inc
add
sbb
and
add
sub
or
push
add
or
inc
mov
add
add
add
sahf
adcl
add
or
xchg
adc
nop
inc
dec
xchg
andb
or
add
add
movl
add
add
cmpsb
add
push
pusha
add
inc
mov
sbb
mov
xchg
inc
or
sbb
xor
sbb
pusha
pop
orb
pop
inc
loop
add
test
rorb
addb
add
or
inc
add
test
add
adc
add
add
add
or
add
add
lods
aam
push
sbb
jecxz
or
add
xor
push
sbb
add
inc
jo
xor
insb
or
and
xor
xchg
movsb
add
or
mov
addb
add
inc
pop
and
sbbl
sbb
sbb
xor
add
xorb
dec
adc
xchg
add
adc
shrb
addl
add
add
adc
inc
add
loopne
sub
loopne
ret
inc
adc
jo
add
adc
push
addb
add
and
add
adc
inc
or
test
or
inc
add
add
or
les
inc
add
adc
and
or
xor
sbb
inc
push
add
nop
dec
xchg
adc
add
push
or
pusha
add
xor
or
cmp
add
add
sub
mov
add
and
rolb
adc
add
add
adc
jmp
add
adc
add
add
or
add
adc
add
or
add
mov
or
and
add
add
add
add
add
inc
inc
push
adc
test
rclb
orb
sub
rorb
adc
popa
or
add
add
add
mov
rolb
adc
dec
add
or
add
adc
mov
inc
pop
popa
inc
adc
mov
add
inc
xchg
addb
sbb
mov
loopne
add
cwtl
push
mov
inc
rolb
adc
inc
and
add
shlb
mov
fs
add
add
or
push
mov
add
add
add
adc
add
inc
and
or
inc
add
add
add
add
rcrl
add
sub
inc
add
add
sub
or
adc
sub
xchg
add
test
inc
push
xchg
dec
and
pop
or
add
add
in
add
adcb
add
inc
xor
or
add
inc
ret
or
shrl
orl
roll
push
or
inc
adc
mov
add
sbb
or
add
xchg
dec
and
mov
add
add
cwtl
sbb
xor
sub
add
and
add
pusha
inc
add
inc
and
add
add
lret
add
nop
or
add
and
add
inc
xchg
or
add
or
add
ss
add
andb
sbb
test
inc
andl
xor
sub
addl
inc
mov
adc
cmp
and
ret
or
inc
add
xor
add
inc
add
or
inc
add
add
inc
add
add
and
bound
or
add
add
mov
mov
and
rclb
addb
dec
and
sub
dec
add
mov
and
popa
add
pusha
mov
add
adc
add
mov
inc
mov
inc
push
xchg
add
xor
and
and
sub
xchg
mov
push
mov
mov
mov
sub
rol
sbb
and
ret
add
je
or
add
adc
push
pusha
hlt
push
add
mov
test
mov
popl
push
xchg
inc
inc
inc
shlb
add
add
rolb
or
and
or
add
and
xor
and
or
mov
add
daa
dec
addb
adc
dec
add
inc
xor
sub
and
pusha
add
mov
sbb
or
loopne
push
or
add
sbb
xor
or
adc
sbb
add
add
and
and
inc
sub
nop
add
call
adc
add
test
or
add
bound
cltd
test
or
xchg
or
push
inc
push
add
lea
add
and
mov
add
adc
add
add
inc
add
push
add
add
add
push
sub
andb
inc
mov
add
add
cwtl
adc
xor
add
add
adc
or
or
add
push
and
rolb
add
add
and
xor
sbb
arpl
addb
adc
add
test
inc
or
in
sub
dec
test
push
or
enter
and
and
and
add
dec
add
add
mov
add
sbb
pusha
add
add
add
and
inc
dec
adcl
add
dec
xor
mov
and
fs
nop
sbbl
inc
xchg
add
sub
add
inc
mov
add
adc
and
sub
inc
and
and
add
push
inc
add
or
adcl
sbb
and
adc
and
cwtl
pop
add
dec
add
push
mov
push
dec
jbe
xor
add
adc
adc
add
add
xor
add
andl
pusha
adc
adcb
sbbl
inc
add
add
adc
adc
push
inc
push
and
scas
add
add
add
xchg
inc
push
pop
add
add
add
push
addb
andb
add
inc
inc
call
call
jns
pop
sbb
add
add
xchg
adc
insb
add
addb
add
and
and
add
subl
and
lock
dec
push
add
lds
jle
add
adc
and
and
xchg
adc
or
add
inc
add
addb
push
mov
add
shlb
add
adc
or
inc
sub
or
mov
xchg
add
pop
add
add
add
inc
inc
or
xor
or
add
sbb
popa
mov
inc
inc
or
or
add
and
adc
add
adc
add
cmp
add
xchg
subb
inc
add
add
les
add
add
inc
and
push
xlat
add
jae
in
xor
add
andb
push
add
add
mov
xchg
or
add
add
movsb
and
inc
mov
mov
add
and
les
inc
mov
adc
push
add
push
orb
add
add
andb
inc
dec
add
xchg
add
push
or
sub
push
and
xor
xor
add
add
addl
sbb
add
addb
or
add
add
add
mov
adcb
adc
and
add
push
xor
mov
adc
push
adc
inc
sbb
sbb
inc
subb
nop
and
add
cmp
pusha
and
popa
or
add
and
rcll
and
cmp
dec
xchg
dec
inc
lret
adc
xchg
dec
or
and
mov
rclb
mov
adc
adc
dec
and
jne
or
add
add
dec
add
adc
mov
andb
and
add
xchg
add
cwtl
xchg
inc
push
or
add
add
xor
or
lods
adc
and
nop
mov
adc
inc
mov
cmp
xor
add
and
mov
add
and
stos
and
inc
add
and
pop
movsl
lods
test
add
adc
add
push
and
inc
inc
fistl
or
pusha
add
ror
sbb
dec
adc
inc
adc
or
adc
adc
sub
inc
or
fs
add
inc
xor
nop
sbb
sub
add
or
repz
nop
push
lret
add
or
adc
sbb
inc
adc
add
addl
or
adc
inc
and
xor
dec
and
xorb
add
addl
nop
add
test
add
add
and
add
adc
adc
addb
add
or
adc
jmp
test
add
or
bound
loopne
bound
and
addb
or
xor
sbb
mov
pop
push
add
adc
jb
cmp
addb
sub
add
add
inc
and
add
dec
add
adc
mov
fcoml
dec
rolb
add
add
pusha
mov
sbb
adcb
inc
add
rorb
add
in
add
add
test
sub
and
push
sub
test
inc
push
mov
pop
inc
add
out
adc
add
xor
xchg
or
add
cmp
or
push
add
rorb
mov
nop
sbb
addb
and
orb
orb
mov
add
adcl
adc
test
or
adc
add
add
dec
sbb
cmp
pop
add
test
add
inc
add
adc
add
xor
sbb
mov
and
je
and
movsb
add
or
add
and
sbb
sub
mov
add
cmp
adc
add
testl
push
push
adc
orl
adc
xor
add
pop
pop
add
add
add
nop
and
cmp
inc
call
sbb
addb
xchg
arpl
mov
adc
adc
mov
enter
push
sbb
and
add
adc
xchg
add
subb
add
sbb
adc
orb
add
or
or
sbb
sub
add
xchg
sbb
add
enter
adc
and
sub
pop
and
dec
add
inc
add
add
pop
and
lret
test
add
or
add
addb
stos
addb
and
pusha
push
xchg
add
sub
add
and
or
sbb
mov
add
adc
add
sbb
add
mov
sbbb
adc
sbbb
add
add
and
or
jo
shlb
add
inc
test
or
addb
and
add
sbb
inc
xchg
lea
adcb
sbb
add
or
add
pusha
add
add
and
push
sub
test
inc
dec
add
or
adc
popa
and
lock
nop
and
mov
dec
push
inc
adc
addb
adc
add
add
adc
add
shll
and
add
and
and
pusha
adc
add
or
add
add
andl
nop
call
adc
add
add
rolb
adc
pop
inc
add
adcb
xchg
ret
add
or
adc
or
mov
shlb
inc
add
add
or
xchg
adc
add
push
add
mov
or
add
add
insl
add
and
and
rol
inc
pusha
push
add
inc
add
test
and
push
xor
test
nop
inc
nop
add
inc
add
add
or
or
loopne
add
addb
and
test
or
inc
add
nop
add
pusha
xor
and
xchg
sbb
pop
push
add
mov
mov
or
cmp
add
sahf
and
or
adc
add
xor
push
in
push
daa
inc
add
add
les
inc
cmpb
add
add
add
inc
inc
lcall
add
mov
and
add
nop
and
mov
or
add
adcb
xchg
sub
add
adc
test
add
inc
mov
and
add
mov
add
add
rolb
nop
and
pusha
add
mov
nop
cmp
push
xchg
mov
push
add
and
pop
add
adc
rcrb
or
sbb
test
dec
inc
or
sub
add
push
pusha
xchg
adc
or
addl
sbb
imul
pushf
add
add
add
and
and
mov
adcb
jo
add
inc
add
inc
and
add
add
xor
rolb
mov
sbb
adc
addb
inc
sbb
loopne
sbb
or
add
adc
add
sbb
add
inc
add
addb
add
mov
inc
xorb
mov
add
add
xor
add
and
add
adc
and
inc
and
add
add
mov
addb
add
adc
add
add
add
sbb
and
and
and
adc
dec
add
mov
or
inc
loopne
insb
xor
or
inc
inc
push
movsb
xor
stos
inc
add
add
and
add
adc
or
sub
and
inc
test
add
or
push
adc
push
add
xchg
xor
rolb
adc
or
inc
add
adc
or
ret
and
adcb
add
dec
add
push
dec
or
sbb
sub
or
or
sbb
sub
sub
inc
sub
or
nop
add
addl
test
and
inc
or
add
add
mov
add
adc
rclb
dec
push
pusha
add
sub
xchg
inc
add
and
add
push
mov
inc
inc
push
sub
add
loope
adc
push
adc
orb
adc
xchg
add
inc
jo
push
push
mov
add
add
inc
repz
and
test
inc
add
adc
jbe
adc
inc
pop
inc
pop
fs
and
and
shlb
add
and
push
or
movsb
inc
push
add
addb
adc
mov
test
xor
add
clc
inc
pop
movups
add
inc
ss
addb
or
fnstenv
enter
adc
and
pop
adc
add
sbb
sub
mov
add
inc
dec
jo
or
add
add
and
test
movsb
and
add
mov
xor
inc
adc
adcb
and
add
cmp
inc
movsl
mov
pop
push
add
add
xorb
inc
and
inc
mov
add
mov
inc
inc
and
or
mov
rclb
add
loope
mov
les
orb
and
cmovs
xor
ret
add
daa
add
test
mov
or
inc
add
inc
add
in
dec
and
or
adc
add
add
and
inc
push
sbb
or
nop
and
push
mov
xorb
adc
inc
adc
int3
xor
mov
push
xchg
add
and
add
add
add
adc
addb
add
adcb
push
and
mov
add
subl
adc
cmp
pop
adc
adc
push
inc
inc
inc
adc
add
loopne
addb
adcb
sub
or
cltd
or
mov
add
addl
inc
and
or
add
add
push
sub
add
add
or
and
or
movsb
or
add
xor
inc
and
test
and
add
or
sbb
or
add
addb
or
push
inc
add
add
dec
push
nop
add
add
and
add
and
clc
xor
or
addb
adc
adc
add
adc
add
nop
adc
and
xor
adc
mov
arpl
jo
or
add
and
add
and
ret
add
test
and
and
addb
inc
test
add
andb
ficoml
push
inc
andb
inc
add
xor
add
xor
add
addl
and
push
sbb
add
andl
add
or
add
cwtl
and
push
sbb
mov
pop
adc
inc
add
or
addb
add
addl
sub
inc
movsb
push
ret
add
or
xorb
andl
add
sub
adcb
dec
push
add
inc
push
bound
inc
inc
xchg
pop
add
add
inc
or
es
add
adcb
inc
and
and
mov
dec
sbb
adc
and
or
add
add
xor
sbb
push
adcb
add
fisubl
adc
sbb
push
and
clc
bound
sbb
or
pusha
or
push
xchg
and
test
lds
inc
add
orb
inc
xchg
add
mov
push
add
adc
or
add
rorl
addl
add
and
and
add
mov
test
inc
or
and
or
xor
inc
adc
lods
orl
pop
add
add
pop
jne
add
add
push
add
add
adc
loopne
adc
inc
andb
push
sbb
sub
es
mov
adc
adc
and
addb
or
and
or
push
adc
mov
add
adc
add
or
dec
and
add
pop
or
sub
adc
aam
add
add
add
inc
and
dec
add
addl
and
adc
and
js
dec
add
sbb
add
subb
add
add
mov
or
ret
push
sbb
add
push
sbb
adc
add
mov
in
inc
inc
ret
inc
add
add
sbb
add
adcb
leave
inc
add
enter
inc
add
and
inc
andb
pop
add
rolb
rolb
add
and
add
add
add
xor
sbb
and
adc
push
add
add
mov
addb
bound
add
dec
add
or
add
add
addb
add
inc
addb
add
xor
inc
sub
push
lret
sbb
add
add
add
inc
inc
and
add
xor
add
addb
inc
faddl
add
add
andb
orb
add
add
add
and
add
add
and
and
add
add
adc
add
add
inc
add
add
adc
adc
and
add
addb
and
add
mov
add
adc
mov
add
add
add
inc
add
and
addl
or
adc
adc
adc
or
lock
and
or
inc
inc
push
add
and
pusha
add
and
mov
movsb
nop
add
add
rcrb
andb
add
addb
inc
adc
movsb
shrb
and
or
add
add
adcb
add
adc
pusha
insl
add
add
addb
add
pusha
add
xchg
or
popa
add
adc
add
add
and
pop
and
add
add
add
xchg
add
addb
addb
pop
add
add
xor
xor
add
pusha
adc
inc
mov
mov
nop
fcmovne
mov
or
adc
mov
add
movsb
add
orb
sbb
add
adc
sub
add
add
add
or
add
and
inc
xchg
add
or
add
push
lds
nop
mov
addb
dec
enter
and
inc
inc
or
or
ret
inc
addb
push
movsb
dec
or
inc
push
or
cmpsb
xor
inc
xor
add
xchg
and
push
and
inc
push
inc
add
inc
pusha
mov
adc
pusha
pusha
add
add
inc
add
pusha
push
xchg
dec
add
add
adc
push
add
inc
mov
add
test
mov
add
add
add
xchg
add
add
cmp
adc
and
add
add
and
push
pop
inc
push
add
push
add
sbb
inc
add
and
add
addb
add
pusha
add
add
nop
adc
or
add
test
rcrb
mov
pop
add
inc
add
add
add
shlb
inc
rolb
add
lock
add
add
dec
jo
mov
mov
add
mov
inc
or
stos
add
or
add
add
and
adc
add
adc
add
add
add
add
inc
mov
dec
xor
or
cmp
mov
add
mov
pop
dec
adcl
add
adc
add
mov
add
inc
adc
or
mov
popl
and
inc
mov
or
cmp
add
ret
add
fsubs
adc
ss
inc
sbb
add
imul
bound
add
mov
nop
inc
add
or
and
dec
add
dec
andb
mov
test
rclb
xor
and
inc
add
adc
add
mov
add
bound
add
adc
and
mov
sub
inc
add
add
push
add
add
or
addb
inc
push
xor
inc
add
add
inc
adc
add
add
add
and
movsb
push
add
add
adc
adc
add
add
and
add
push
sbb
adc
or
rolb
outsb
inc
add
inc
add
dec
inc
add
add
dec
andl
and
add
add
or
or
rolb
add
add
add
add
add
inc
orl
add
add
add
dec
add
add
add
add
addl
addl
xor
add
add
ret
add
push
and
and
add
dec
add
push
push
sub
add
add
add
add
and
nop
add
or
add
pusha
add
add
mov
add
addb
and
and
add
add
add
mov
ret
and
add
nop
add
adc
add
or
mov
or
loopne
add
adc
add
add
inc
and
add
add
imul
sbb
pop
rclb
inc
xchg
adc
add
adc
add
sbbb
add
addb
add
add
inc
lret
test
add
add
mov
push
or
adc
sub
add
add
and
test
inc
shlb
and
orb
or
or
add
inc
or
or
inc
add
dec
dec
add
and
dec
mov
addb
push
add
sbb
add
add
xor
add
dec
add
xor
addl
adc
inc
add
add
add
mov
adc
adc
and
add
or
inc
push
or
adc
add
inc
add
add
add
cltd
adc
inc
test
and
addl
add
mov
inc
xor
rolb
xchg
add
add
mov
add
add
sbb
and
nop
mov
add
adc
pop
and
add
add
data16
inc
inc
add
add
or
addb
inc
inc
addb
andl
dec
add
adcb
dec
adc
add
adc
rclb
add
movsb
push
add
inc
add
call
add
jne
adc
add
andb
adcl
or
add
orl
add
insl
add
sbb
push
adc
add
xchg
add
ljmp
and
or
and
add
loope
rclb
andb
pusha
and
inc
js
sbb
adc
push
adc
enter
dec
mov
add
mov
and
add
andb
add
inc
add
sub
mov
adc
cwtl
inc
add
test
and
inc
inc
inc
add
and
addl
or
pop
add
add
and
add
push
mov
add
add
add
add
sub
adc
dec
push
add
or
add
add
xchg
add
inc
xchg
add
adc
orb
addl
mov
add
and
add
add
add
fadds
and
addb
inc
add
nop
int3
add
or
rolb
adc
add
add
sub
and
sub
or
xor
or
addb
or
pusha
pshufw
cld
jo
sbb
subb
mov
inc
or
add
add
sub
add
inc
add
add
add
add
pop
add
add
popf
inc
roll
add
xorb
andb
add
xor
and
mov
addb
adc
andb
adc
xor
add
dec
inc
adc
inc
and
pop
add
add
and
push
and
enter
and
adc
add
add
and
sub
adc
adc
mov
add
test
adc
inc
adc
adc
add
or
or
add
mov
inc
add
sbb
sub
add
inc
es
inc
add
rolb
add
add
or
pusha
inc
and
and
adc
movb
cwtl
adcb
or
sbb
add
add
adcb
add
add
add
or
mov
adcb
mov
adc
add
add
inc
inc
jne
adc
or
test
inc
or
add
ret
add
adc
nop
xchg
je
addl
add
or
mov
xor
or
les
mov
test
add
nop
rclb
or
push
inc
adcb
cmp
cmp
and
adcb
add
and
add
and
add
adcb
imul
add
mov
and
mov
add
or
or
daa
add
and
and
push
add
pusha
or
add
add
and
xor
dec
or
fs
push
add
dec
adc
add
adc
or
add
add
add
and
add
inc
addb
pop
push
inc
mov
add
pusha
add
add
add
adc
addb
add
add
int3
add
add
lcall
addb
inc
add
add
test
and
adc
add
pop
inc
and
inc
xor
add
add
add
add
sub
or
and
nop
jb
and
inc
adc
add
and
adc
adc
add
nop
adc
scas
inc
mov
inc
add
adc
cmpb
addb
adcl
add
inc
add
inc
pusha
add
in
inc
mov
add
add
add
pusha
adc
add
add
inc
inc
add
adc
and
inc
adc
xor
movsb
or
adc
adc
sub
add
nop
adc
nop
or
and
add
add
or
ret
or
add
nop
add
ret
addb
xchg
cwtl
add
inc
add
or
adc
add
add
inc
add
mov
mov
add
push
adc
add
inc
sub
add
add
addb
add
add
addb
addb
add
inc
stos
sbb
add
add
add
adc
nop
shlb
inc
sub
adcb
inc
add
add
add
add
sub
add
add
push
add
add
add
addb
add
and
add
inc
adc
and
or
add
add
add
add
addb
add
add
shll
add
adc
test
add
inc
jne
add
and
add
add
roll
pop
dec
add
adc
xchg
add
add
inc
add
lcall
adc
andb
sub
rcrb
add
and
inc
movsb
adc
inc
inc
adc
add
dec
inc
inc
and
add
push
adc
add
add
adc
and
inc
inc
inc
add
add
add
inc
inc
add
and
add
ret
and
xchg
add
adc
add
inc
rclb
add
inc
add
add
inc
mov
or
add
sub
or
or
add
or
sbb
and
or
and
xchg
and
adc
and
add
rorl
add
and
push
inc
add
add
adc
inc
les
and
and
addb
add
or
adcb
orb
add
add
and
add
cmpb
add
inc
and
orl
les
add
add
inc
add
add
sub
or
add
or
adc
xchg
add
add
add
pusha
add
inc
push
add
cltd
add
add
add
add
or
jo
add
adc
add
add
adc
add
inc
add
or
add
inc
add
dec
inc
and
add
inc
inc
xor
bound
inc
or
add
adc
and
push
adc
or
sbb
add
push
jbe
and
subb
add
adc
addb
add
add
add
fdivrs
nop
cwtl
cmp
jb
add
addl
add
adc
and
add
add
adc
add
imul
and
add
inc
push
add
mov
and
adc
push
popa
or
or
rclb
add
add
adc
add
bound
and
add
inc
adcb
add
shll
add
add
inc
add
add
cmp
and
or
add
add
and
add
inc
inc
rcll
inc
pusha
adc
xchg
add
rolb
test
sub
addb
and
rorb
add
add
add
add
add
add
add
inc
adc
enter
loopne
and
inc
inc
mov
add
add
adc
add
or
or
add
sbb
add
push
add
push
adc
jp
add
or
mov
add
and
addb
add
test
add
andb
add
add
add
and
add
add
or
add
inc
add
inc
movsl
adcb
xchg
add
inc
dec
sub
add
add
dec
inc
or
inc
add
add
addb
add
add
adc
andl
add
test
orb
nop
add
sbb
inc
adc
inc
or
nop
inc
push
nop
xor
add
leave
add
test
and
add
shll
addb
and
inc
and
add
mov
adc
or
add
and
add
orb
inc
add
add
add
and
sbb
and
add
inc
or
and
add
add
adc
add
add
and
push
add
sub
sbb
add
xor
and
add
outsb
or
and
adc
or
and
movsl
adc
sub
adcb
add
movsb
or
add
adc
inc
xchg
sbb
add
loope
add
adc
pusha
jecxz
test
sbb
shlb
add
add
add
add
add
inc
add
inc
mov
add
arpl
jecxz
adc
inc
xchg
add
xor
sbb
orb
add
adc
sub
add
add
sbb
adc
shll
or
adc
addb
or
add
add
sbb
add
addl
dec
add
add
aad
sbb
pop
je
lahf
aaa
in
push
ds
sbb
shlb
mov
add
div
mov
test
fwait
sub
es
test
out
sbb
sub
mov
loopne
cmp
dec
out
push
dec
sub
pop
cs
jl
xchg
scas
or
repnz
mov
mov
stos
or
sarl
arpl
loope
ss
mov
sbb
fsubs
int
lahf
hlt
subl
ror
das
out
add
in
xchg
ret
sbb
jne
in
movsl
inc
rcrl
jns
out
test
out
jg
out
mov
or
test
dec
sahf
rcll
mov
or
mov
cmc
dec
add
loop
lcall
xchg
lahf
shll
sub
mov
jmp
in
movsl
jnp
sbb
xchg
ds
pop
test
inc
pushf
mov
inc
xchg
sbb
std
insl
and
mov
jp
out
test
push
pop
xchg
fs
mov
lahf
fsubs
mov
fwait
shrl
repz
rcrb
test
loopne
rcl
insl
movsl
xchg
sbb
sbb
jnp
cmc
dec
add
sbb
sub
movsl
inc
rcrl
jns
out
add
xor
dec
insl
fiaddl
icebp
dec
insb
cmp
xchg
mov
and
cmp
dec
loop
test
mov
testl
test
sbb
jns
movaps
call
inc
clc
inc
xchg
notl
cmpb
inc
ljmp
bound
mov
dec
xchg
lods
bound
xchg
icebp
dec
test
incl
outsl
rcrl
jnp
scas
enter
push
or
cmp
pop
out
out
inc
ds
test
rolb
mov
fildl
fcompl
shl
jnp
dec
sarl
mov
jl
hlt
movsl
jnp
jae
je
sbb
out
jl
jl
hlt
movsl
jnp
insb
shrb
mov
ljmp
dec
and
sahf
mov
das
sub
pop
rorb
mov
fsubrl
ljmp
into
or
push
jg
xor
dec
pop
test
in
adc
cs
shll
push
inc
ds
ljmp
jle
xchg
js
es
mov
pop
push
sub
dec
in
push
pop
das
movsb
adc
jnp
fiadds
pop
into
inc
inc
mov
and
sbb
xor
lea
out
rolb
ds
fimuls
sub
pushf
pop
out
jl
cmpb
fmuls
pop
test
cs
add
mov
out
test
mov
in
out
test
or
push
mov
movsl
out
push
push
bound
test
jne
push
sbb
mov
ds
fnstsw
sbb
pop
test
sbb
mov
xorb
or
fldcw
out
xor
ljmp
inc
ja
lods
fs
rcrl
pop
lods
movsl
mov
mov
cmc
mov
int3
das
out
add
loopne
xchg
push
shll
out
xchg
shrl
jnp
push
pop
cmc
sub
mov
add
cmp
dec
dec
mov
pop
and
push
fsubrp
pop
pop
test
aaa
dec
out
test
pop
fnstsw
push
jo
ffree
inc
sbbl
mov
out
mov
jl
test
out
in
aaa
clc
push
mov
movsl
outsl
rcrl
jg
cld
dec
nopl
add
into
loopne
pop
addb
sarl
adc
pop
ss
lahf
sbb
sbb
pop
pop
sub
nop
mov
inc
xor
pop
lcall
cmp
mov
sbb
insb
fidivs
movsl
outsl
rcrl
jg
lock
loopne
fwait
ds
pop
test
sbb
andb
fildl
lret
rcll
push
xor
pop
lcall
mov
inc
out
testl
pusha
aad
adc
cmp
movsb
cld
sub
dec
sub
jbe
movsl
emms
xchg
inc
xor
addr16
sub
sbb
xchg
push
sbb
rcll
cs
dec
jg
jp
insb
inc
icebp
pop
sbb
scas
leave
sub
loope
aas
and
int
and
mov
mov
loope
jg
jp
pushf
mov
or
subb
mov
ret
jp
push
loope
imul
push
dec
bound
or
sbb
rorb
mov
mov
jnp
out
test
rcrb
test
icebp
pop
sub
mov
xor
adc
sub
lock
jnp
dec
fisubrl
mov
sbb
xchg
lahf
lock
movsb
aad
dec
push
testl
dec
push
gs
rclb
jne
mov
rcrl
jl
pop
out
rclb
xor
xchg
mull
loope,pn
aas
push
sub
insb
stc
lret
inc
lock
loope
pusha
aas
out
int
cltd
pop
test
loope
outsl
aas
out
lds
pop
xchg
sub
xchg
in
notb
stc
test
push
repz
xchg
je
mov
ds
test
cmp
loope,pn
out
lds
scas
pop
cmpb
pop
test
out
or
out
push
mov
shrl
jnp
out
in
lcall
es
dec
add
sahf
xlat
dec
imulb
out
xchg
push
or
mov
cmp
aam
fisttps
imul
repnz
cmpsl
fsubrl
ds
test
out
test
push
test
mov
sbb
pop
cmp
jp
sub
pop
mov
movsl
xchg
in
add
flds
cmp
das
jge
xchg
dec
push
ds
in
add
push
push
add
mov
sti
sbbl
inc
xchg
mov
mov
hlt
mov
inc
mov
and
pop
jne
pop
push
into
jp
xchg
sub
mov
mov
add
ss
jmp
shrl
cmc
lods
mov
inc
movsb
pop
xchg
sub
movsb
dec
clc
cmc
fs
push
ljmp
and
repz
jns
sbb
es
cmp
pop
negb
and
nop
ss
push
jb
adc
mov
ja
inc
mov
inc
cs
cmpsb
cmp
movsb
clc
mov
hlt
fwait
ss
inc
add
movsl
icebp
cli
mov
cmpsl
push
icebp
hlt
add
insb
sbb
sub
inc
cld
mov
jp
mulb
jp
stc
movsl
mov
inc
sbb
fsubs
mov
cmp
pop
iret
pushf
mov
lahf
xor
loop
xor
cmp
push
scas
scas
jnp
shll
ret
int
push
fwait
rolb
test
cmp
aas
lea
pop
lods
push
jle
pop
lcall
mov
jns
jno
dec
jne
in
fiaddl
lods
pushf
repz
xchg
les
sub
mov
ret
fwait
bound
xlat
aam
imul
loopne
mov
pop
cmp
jl
leave
xchg
or
out
jae
fisubrl
xchg
and
push
pop
cs
mull
dec
js
dec
int
adc
mov
mov
das
mov
enter
scas
push
cltd
pop
jbe
mov
jge
or
fsubs
push
push
jb
out
pop
out
nopl
outsl
fnstcw
and
out
sub
and
shr
pop
pop
pop
pop
imul
aaa
dec
leave
and
and
cmp
mov
out
jle
xchg
add
pop
fdiv
mov
mov
pushf
push
test
mov
iret
xchg
cmp
out
pop
push
mov
jl
jne
pop
add
out
dec
cmpsb
push
iret
rcl
jne
test
fwait
cmp
int3
out
xchg
das
mov
mov
pop
xor
and
fcomps
test
add
aas
dec
mov
push
push
out
imul
lcall
and
add
pusha
std
out
ds
ljmp
test
mov
mov
cltd
ss
sub
dec
jecxz
push
push
mov
shlb
xchg
andb
mov
in
aas
int
repz
aas
loope
cmc
ret
inc
fists
aaa
cli
enter
aad
xchg
sbb
cmp
movsb
loopne
loop
jns
loop
les
out
mov
aas
pop
mov
pop
scas
ds
out
cld
xchg
cmp
loopne
fidivl
push
sti
testb
mov
xchg
out
sbb
scas
sbb
jmp
xor
addr16
pop
push
jo
sbb
movl
jp
xor
jo
and
xchg
xchg
pop
fwait
jp
fsubs
mov
and
jg
xchg
das
in
push
inc
jno
lea
add
mulb
lcall
jns
cwtl
data16
push
fidivrl
jge
mov
inc
sub
pop
int
adc
dec
fcompl
movsl
cmp
fadds
sub
aas
das
push
mov
push
jge
adc
cbtw
mov
cmpsb
ja
pusha
xor
arpl
xchg
sub
sbb
xor
out
jle
push
leave
loope
pop
pop
or
xor
mov
jge
push
pop
inc
jo
sub
xchg
cltd
pop
xor
xlat
movsb
push
push
leave
addl
pop
rolb
ds
mov
add
cli
rcl
cmp
or
push
in
cmp
adc
or
fs
ljmp
cwtl
or
xor
std
icebp
pop
mov
jp
jl
test
and
outsl
in
sub
gs
stc
out
xchg
cmp
add
mov
mov
insl
arpl
mov
out
sbb
dec
sub
push
pop
lea
jae
mov
clc
mov
xchg
icebp
mov
icebp
push
inc
sahf
ss
outsb
fimuls
sub
cli
test
xchg
mov
int
jo
stc
mov
pop
dec
pop
fisubrl
out
pop
push
xchg
cltd
push
imul
jb
stc
cmp
lock
out
lcall
out
roll
xlat
cmc
mov
dec
pop
sbb
scas
std
test
or
nop
jb
mov
sub
push
mov
aas
and
mov
es
jl
sti
scas
gs
add
jge
pushf
gs
ljmp
cli
mov
mov
lea
jle
add
mov
adc
inc
insl
out
xchg
pop
mov
popa
cmp
sbb
cs
std
int
mov
addb
pushf
cltd
mov
aas
mov
fs
push
fs
and
mov
in
sbb
pop
les
insb
push
ret
test
pop
inc
cmp
xor
push
add
mov
mov
jmp
sub
out
mov
jnp
adc
adc
sbb
add
jno
and
cmp
clc
inc
in
cmp
inc
movsb
or
mov
and
subl
out
inc
mov
jb
sub
inc
push
adc
push
gs
stc
les
push
xchg
mov
pop
jae
xchg
jb
outsl
lret
pop
pop
push
fmulp
aad
test
dec
mov
es
data16
dec
outsb
adc
dec
pop
mulb
addl
mov
aas
das
or
dec
es
ljmp
rorl
push
add
cld
adc
leave
out
loope
shll
jbe
pop
cmpsl
stos
jmp
dec
xor
dec
fucomp
rcll
movsl
mov
jne
arpl
dec
pop
aaa
fwait
aas
and
and
add
ds
sub
mov
and
mov
lret
js
cwtl
sti
pcmpeqb
cs
adc
inc
mov
xor
out
pop
xor
xchg
pop
fdivrl
popf
mov
adc
adc
lahf
sbb
xlat
aas
push
shlb
fcomps
fstpt
push
cli
sub
out
ret
ret
les
mulb
push
push
dec
sbb
jb
movsb
int
mov
mov
and
mov
icebp
js
out
cs
xchg
dec
adc
fcompl
mov
call
mov
ss
das
iret
jnp,pt
test
mov
jmp
aad
push
inc
ds
mov
push
out
lahf
sti
inc
jb
mov
sbb
repz
cmpsl
mov
mov
push
sarl
xchg
cmp
in
add
adc
stos
cmp
xchg
mov
pop
lds
out
lret
int
fnsave
sub
pushf
push
test
add
test
lock
aas
in
pop
lret
adc
or
or
and
shrl
cmp
mov
sub
loop
comiss
mov
or
popa
add
mov
xchg
insb
pop
pop
xorb
jg
pop
cmp
test
dec
sarl
aas
mov
xlat
imul
xor
sbb
cli
dec
jo
mov
cmp
mov
sub
ret
outsb
out
lahf
xor
jge
inc
stc
scas
std
push
pop
xor
fsubrs
xchg
mov
adc
popa
sbb
inc
cmp
pop
mov
xchg
sti
into
mov
sub
sub
dec
fadds
sbb
test
xchg
mov
add
mov
les
out
nop
icebp
loop
push
mul
xchg
inc
dec
std
pop
add
aam
pop
test
mov
mov
lds
sub
sbb
cmpb
mov
ljmp
mov
stos
or
mov
in
stc
mov
repnz
lahf
loope
pop
movsb
mov
adc
sub
icebp
ret
lret
mov
lret
insb
adc
inc
mov
loopne
jnp
fs
cmpsl
stos
movsb
mov
into
jnp
test
xor
inc
inc
aam
hlt
xchg
or
or
aaa
add
jne
add
data16
lcall
sarb
or
scas
xor
jp
jmp
les
sbb
or
jge
pop
pop
and
mov
cmpb
test
aas
and
pop
jne
fs
mov
out
movsl
add
call
sbb
xor
xor
and
rolb
ficoml
xchg
popa
les
out
dec
push
push
cmp
outsb
sbb
pop
out
xchg
pop
lahf
cmp
mov
xchg
popa
mov
je
pop
cmp
imul
inc
push
test
cwtl
xchg
lret
sbb
in
inc
jbe
push
pop
out
sub
dec
jg
lock
std
jge
subl
out
nop
mov
inc
rcr
mov
pop
pop
sub
fcmovu
outsb
jno
fwait
mov
ret
xor
mov
fwait
ljmp
adc
sti
cmpsl
and
mov
push
push
dec
ljmp
jne
mov
call
mov
aas
pop
test
aad
es
push
mov
mov
cmp
cli
add
out
lea
pop
pop
test
pushf
cld
idivl
adc
xlat
std
cmp
scas
loopne
mov
test
jge
dec
push
push
inc
gs
aad
gs
dec
pop
mov
adc
les
pop
lods
adc
aas
sub
mov
pop
mov
sbb
rorl
lret
fcoml
addb
stos
in
cmpsb
dec
mov
test
lods
cmp
imul
mulb
pop
sbb
es
mov
adc
not
cmp
adcl
cmpsb
mov
add
jmp
call
andb
das
sar
pop
xchg
cmc
or
out
mov
mov
mov
stos
lock
fsubs
mov
mov
out
mov
cmp
xor
add
outsl
test
inc
ljmp
jnp
mov
into
orl
sbb
pop
fs
mov
fdiv
or
mov
test
add
test
out
mov
stos
mov
dec
xor
xor
xchg
in
out
jb
xor
xor
jmp
pop
mov
scas
mov
lret
and
fldln2
xchg
lock
stos
or
or
pop
sub
rolb
call
pop
or
push
rolb
rcrb
dec
sbbb
fsubp
mov
or
std
push
repz
mov
ljmp
jge
mov
test
das
cltd
cmp
pop
imul
rcll
sub
jns
rol
pop
dec
pop
test
push
cmp
test
mov
add
and
rorl
push
sub
loopne
jecxz
adc
cmpsl
xor
out
fdivrl
jns
jmp
cmp
pop
fistps
in
popf
repz
les
xchg
push
pusha
xor
out
mov
jmp
ret
in
adc
mov
test
xlat
out
sarb
adc
push
pop
cmp
test
ljmp
pop
xchg
std
hlt
out
adc
imul
nop
xor
jbe
in
aas
push
sti
out
insl
mov
shr
test
or
lods
pushf
negb
jbe
mov
test
stc
adc
stos
and
rcrb
xchg
or
push
jno
pop
ds
test
cltd
push
push
pop
les
stos
cmp
jge
imul
dec
adc
or
mov
fdivs
pop
adc
mov
cmpb
in
mov
push
pop
jo
jne
fwait
out
push
int3
sub
and
pop
mov
xor
mov
fwait
pop
jmp
pusha
pop
push
movsb
cmp
in
or
mov
out
out
es
pop
xchg
cmpsl
imul
mov
jg
arpl
aaa
pop
fwait
jle
cmp
das
rcll
pop
in
test
pop
adc
ljmp
pusha
and
xchg
fcoml
push
lcall
out
movsb
or
mov
lret
movsl
xchg
push
pushf
mov
cmp
and
push
mov
cmc
leave
popf
fistps
idiv
mov
mov
mov
add
aam
push
nop
cmp
out
mov
bound
add
stc
mov
jge
jnp
ret
jo
and
xchg
ds
mov
clc
lcall
xchg
jmp
enter
inc
ficomps
test
mov
ret
push
js
ja
jge
pop
or
push
push
jno
out
jl
iret
sub
add
or
je
mov
dec
roll
xor
in
push
outsl
pop
add
pop
inc
or
insl
adc
fcomps
push
dec
xchg
pop
iret
jg
add
popa
ja
jo
inc
mov
test
int
mov
lea
mov
lock
mov
add
xor
jbe
dec
xlat
add
adcl
jecxz
cli
push
push
pop
or
push
scas
arpl
inc
lahf
fsub
mov
in
test
int3
xor
jb
mov
mov
ds
out
sub
cli
cmp
pop
ljmp
jno
mov
inc
and
leave
sqrtps
int3
gs
xor
and
inc
mov
jle
clc
movsl
mov
mov
push
xor
adc
pop
xor
xor
test
mov
lret
ljmp
cmpsl
mov
or
ds
leave
std
movsb
lahf
jo
out
iret
cmc
push
stc
sbbb
push
xor
fnsave
out
adcb
sub
test
int3
xor
xor
jge
fildll
sub
pop
or
or
popf
test
jo
ds
jbe
out
dec
mov
shll
imulb
fistps
mov
pop
inc
xchg
jg
fdivrs
lds
pop
jl
cmpsb
int
aam
mov
lcall
cli
inc
outsb
je
jle
pop
push
fwait
xchg
dec
int3
dec
cwtl
push
mov
addl
aas
sbbb
xchg
and
lret
test
nop
add
lea
cli
pop
addl
das
ds
mov
hlt
out
xchg
push
xchg
sbb
mov
insl
pop
jb
xor
nop
out
popf
mov
or
jb
aas
inc
or
push
out
dec
clc
leave
fmul
dec
popa
in
out
out
pop
aam
inc
jo
add
je
fisubrs
xor
pop
outsb
and
pop
test
xor
push
fadds
mov
lock
out
lcall
aaa
fidivrs
mov
ret
inc
xchg
pop
sbb
xchg
repnz
out
lea
lock
cmp
jnp,pn
pop
lea
fiadds
outsb
xchg
or
pop
pop
mov
lods
imul
es
pop
xor
fdivrp
mov
pop
out
xchg
scas
push
test
mov
lahf
pop
push
jbe
lds
out
mov
adc
sahf
movsb
xor
jo,pn
cld
fadd
dec
test
sub
xor
lahf
test
adc
out
or
xchg
popl
iret
pop
scas
mov
jbe
sbb
in
mov
jle
mov
cmp
mov
sub
mov
push
dec
shll
cmpl
scas
daa
mov
out
dec
sub
cmp
sbbb
jo
cmpsl
mov
filds
inc
pop
movsl
or
je
cwtl
data16
std
and
cmpsl
push
and
lea
fdivrp
push
insb
push
mov
popa
aas
xchg
and
ja
mov
dec
jne
loope
push
push
cld
addr16
leave
rcrb
mov
push
loopne
aas
cmp
fstpt
mov
or
xor
lret
mov
negb
push
pushf
jg
xchg
inc
stc
add
scas
xor
xlat
cmp
ds
mov
test
out
stos
push
pop
int
or
pop
cli
add
aam
ret
xorb
mov
xchg
and
imull
aad
jo
movsb
dec
test
jns
mov
popa
cmp
ja
test
push
push
int
push
mov
lret
int
lods
sub
mov
adc
es
in
div
in
out
js
jle
mov
mov
out
pop
int
xor
cmp
add
cmp
cli
pop
lods
icebp
addr16
out
aaa
xchg
stos
mov
stos
xor
imul
pushf
sbb
mov
mov
xor
lock
insb
in
cli
pop
cmp
inc
push
lock
les
leave
cmc
movsb
cmp
jne
cmpsl
jo
add
mov
push
xor
mov
mov
mov
shlb
push
pushf
stos
push
cmp
cmc
mov
insb
arpl
fistl
cmp
addl
sub
ljmp
dec
pop
add
mov
pop
test
rorl
aam
bound
lret
xchg
aam
push
or
test
fimull
rorl
popf
add
push
cmp
mov
cwtl
daa
aas
arpl
lods
adc
inc
push
cmc
movsb
sub
test
pop
jle
cmpsb
push
call
pusha
mov
xorb
addr16
pushf
inc
jbe
push
sti
inc
mov
packssdw
gs
outsl
divl
mov
and
in
ljmp
push
jp
loopne
fdivrs
aad
cmp
jg
scas
xchg
sub
inc
mov
pop
imul
enter
insl
adc
outsl
ja
mov
cltd
movsl
sub
gs
or
jo
mov
aas
int
stc
lods
xor
inc
push
aad
dec
adc
es
fiadds
adc
aas
out
mov
cmp
mov
adc
inc
pop
jbe
adc
lods
fsub
sub
push
lret
sbb
out
sbb
jns
add
pop
pop
xchg
adc
inc
ss
test
movsl
rorb
aad
xlat
cmp
fs
cli
inc
sub
mov
adc
insl
sahf
ds
faddp
pop
dec
push
jl
lahf
mov
adc
adc
ss
in
addr16
push
mov
aad
sti
je
in
mov
imul
aas
sbb
lea
scas
adc
sahf
xor
js
dec
repnz
lcall
cmpsb
mov
call
mov
jo
inc
push
xor
push
mov
push
test
stos
imul
aaa
adc
loop
imulb
cli
mov
test
shrb
es
dec
ficomps
iret
mov
test
mov
cmc
xchg
movsb
adc
mov
push
test
jmp
and
push
loope
inc
inc
pop
xchg
sub
aas
jge
mov
ds
sub
and
xchg
pop
loop
or
pop
bound
mov
xor
cli
jl
jecxz
xchg
sub
push
adc
pop
mov
mov
dec
xor
xchg
outsb
pop
cld
in
push
mov
cmpsb
fidivs
test
add
ds
sub
xchg
fstpl
subb
insl
cmp
and
sahf
clc
shlb
push
push
insb
aas
sub
lret
jmp
out
frstor
mov
loope
je
jecxz
pop
inc
or
lcall
dec
iret
or
es
sub
jbe
test
push
stc
mov
movsl
ds
popl
mov
rorl
mov
popf
lods
ret
inc
in
cmc
loopne
adc
enter
fistpl
cmp
popa
dec
pop
mov
adc
incb
aas
jno
insb
das
outsl
pop
scas
inc
out
pop
xor
sar
sbb
inc
fxch
xchg
jecxz
nop
call
call
pop
pop
bound
cmp
cltd
aas
sbb
mov
out
dec
mov
out
decl
repnz
push
adc
fbstp
cmpsl
dec
cmpsl
cmp
dec
sbb
js
inc
jle
jp
cwtl
mov
adc
cmp
hlt
gs
jg
push
arpl
mov
hlt
aaa
jle
cld
push
sti
fldt
xor
lock
pop
push
cmp
and
rcrl
rcrl
dec
and
xchg
test
adc
aas
sub
mov
clc
sub
out
ja
lret
mov
ret
pop
pop
and
bound
mov
out
inc
adc
call
pop
test
mov
or
imul
cmp
sahf
fdivrs
and
std
loopne
cmp
stc
mov
jo
xchg
push
rol
push
pop
xor
flds
add
mov
pop
push
push
in
popf
nop
add
jecxz
sbb
mov
mov
pop
stos
xchg
imulb
aas
shll
sbb
and
movsb
outsl
icebp
pop
aam
out
movsl
adc
repz
pop
add
movsb
fidivrl
jecxz
int3
jp
and
loope
push
add
ljmp
jmp
in
lret
mov
movsb
mov
cld
add
out
mov
test
jae
adc
mulb
dec
call
mov
scas
repnz
cwtl
xor
imul
mov
dec
fwait
push
mov
push
push
cwtl
shl
out
addr16
shlb
cmp
pop
call
push
xchg
addb
rcrb
sbb
bound
push
add
aad
xchg
mov
in
sub
test
jle
movsb
cmpl
mov
aam
jo
movaps
push
push
arpl
test
sbbb
push
xor
decl
je
out
testb
add
ja
xchg
add
ja
fisttpl
test
jle
movsb
aas
inc
cmpsb
inc
cmp
pop
rcll
xor
cmp
sbb
adc
in
cld
add
jecxz
push
adc
or
inc
cmp
movsl
shlb
out
out
gs
sbb
xchg
push
mov
xchg
dec
popa
cmp
dec
push
test
mov
ret
mov
test
inc
addl
out
xor
pop
shrl
ja
push
lahf
ja,pt
xchg
xchg
test
shlb
das
mov
xchg
in
push
out
pop
arpl
std
mov
mov
jno
or
cmp
sbb
inc
es
dec
jg
out
test
js
pop
adc
frstor
mov
cmp
in
cltd
shll
xor
das
inc
notb
pop
ss
xorl
sbb
pushf
pop
into
inc
ret
pop
vmovntdq
jecxz
jp
cmp
inc
mulb
mov
dec
out
inc
stc
add
mov
or
in
pop
add
inc
push
mov
sbb
xor
out
nop
jecxz
arpl
int
jo
call
cmp
test
inc
sub
xchg
test
push
jg
fnsave
testl
cld
into
pop
push
dec
out
loope
adc
imul
fwait
sub
out
sub
jge
orl
pop
lods
sub
in
or
push
test
aaa
sbb
inc
clc
lea
jb
out
dec
cld
xchg
pop
xor
xorb
jmp
pop
bnd
mov
hlt
jae
stc
xor
sbb
sub
adc
cmp
adc
mov
xchg
mov
aas
jae
cli
js
ret
mov
imul
sub
aad
ss
mov
sbb
mov
mov
pop
dec
aas
leave
pop
mov
push
xchg
or
mov
jecxz
xor
mov
sbb
fsubl
and
push
imull
mov
or
cmpsl
add
bnd
mov
mov
mov
imul
lock
adc
jno
mov
push
mov
jmp
rcrb
jb
sub
mov
insb
jl
inc
pop
mov
mov
push
sbb
pop
aam
je
mov
pushf
push
aas
adc
rolb
movsl
movsb
lcall
test
mov
daa
push
out
or
and
inc
jl
sbb
adc
insb
sub
in
fcoms
adc
ljmp
dec
mov
mov
test
push
fwait
test
jg
jb
mov
stos
push
fdivrl
sbb
dec
out
inc
cmp
jg
cltd
mov
lods
mov
pusha
jmp
rorl
pop
aam
ret
movsb
int3
mov
add
dec
stos
jl
inc
cmp
shll
cwtl
xor
iret
insb
push
jmp
and
mov
dec
out
lcall
pop
add
xchg
lret
aad
imul
pop
fdivs
stos
out
pop
inc
adc
pop
test
dec
call
imul
sbb
clc
pop
push
fcomp
movsl
je
popa
loop
in
pop
xor
scas
xor
ss
mov
sahf
sbb
mov
sbb
lds
lcall
rolb
insb
test
out
mov
xor
popf
xor
rcrb
fdiv
aas
jg
outsb
push
mov
jge
and
xor
ja
and
mov
outsb
lock
stc
inc
mov
and
pop
cmp
pusha
pop
out
cmp
int
test
push
lock
push
sub
popa
pop
jle
sbb
inc
mov
xchg
xchg
and
add
jmp
stos
jns
popa
xor
daa
mov
cmp
std
mov
pop
in
jne
fwait
shrl
pop
mov
mov
push
shr
ds
lods
int
sub
stc
shlb
pop
and
xchg
and
and
xlat
cmp
enter
sub
inc
stc
pop
ret
aas
inc
call
lods
hlt
out
add
addr16
fcmovu
or
push
xchg
into
loope
mov
xor
pop
mulb
aad
add
stos
addr16
scas
add
enter
iret
jp
jg
rcrb
je
scas
fsub
test
cmp
xor
sbb
mov
push
jnp
pop
add
mov
loope
mov
adc
pop
pop
mov
sub
mov
fs
cmpsl
lea
adc
pop
into
sub
dec
loope
inc
test
lock
dec
addr16
iret
and
pop
xor
test
fs
bound
jp
mov
fcomps
aam
push
lea
xchg
aaa
lret
fucomip
loope
sbb
inc
pop
xchg
loope
mov
add
mov
cmp
out
aad
pop
ja,pt
daa
sub
cmp
ficoml
in
fidivrs
push
addr16
xor
mov
cli
pop
stc
inc
dec
pop
mov
mov
xchg
sahf
pop
push
ret
ds
mov
pop
ror
mov
mov
pop
xchg
fwait
mov
xchg
cmpsb
mov
or
mov
nop
jbe
pop
sub
xor
mov
cli
jne
aad
lcall
pusha
pop
mov
lret
pop
nop
sahf
int
outsl
xchg
xchg
jmp
pop
popa
sub
fcompl
enter
out
daa
cmp
jmp
sub
clc
xchg
or
jg
int
inc
test
inc
pop
inc
mov
jmp
aas
add
in
shll
inc
add
jecxz
call
xchg
lock
cmp
mov
xchg
sub
movsl
adc
xchg
dec
sahf
xor
or
mov
pop
hlt
in
and
xchg
fsts
test
mov
aas
popf
push
negb
les
mov
jno
outsl
in
dec
leave
lret
add
mov
dec
inc
push
xchg
test
adc
movsl
jo
adcb
mov
out
mov
xchg
dec
adc
jae
imul
adc
xor
jp
adc
addr16
rclb
add
scas
push
out
pop
ljmp
and
or
cltd
scas
in
stos
das
and
fidivs
jge
ficompl
cmpsb
inc
adc
insl
test
push
cmp
icebp
or
sbb
stos
xor
fbstp
iret
push
push
lahf
out
or
fwait
push
sbb
add
push
mov
or
mov
lods
push
add
pop
xchg
pop
sbb
nop
fwait
xor
testb
lret
pop
fnsave
jp
cmp
mov
addr16
adc
aas
daa
xchg
aam
mov
loop,pn
sub
jge
movsl
loope
ds
pushf
out
out
andb
fildl
pop
sub
inc
pop
test
mov
cmpsl
add
xchg
test
mov
pop
push
mov
pop
dec
lds
jb
mov
add
and
inc
xchg
clc
out
rolb
jnp
jno
xlat
into
cwtl
jle
lcall
pop
xor
mov
out
mov
outsl
out
sub
pop
pop
xor
jns
pop
push
xchg
loope
inc
and
out
loop
dec
xlat
adc
push
cmp
mov
mov
loope
push
fbstp
cmc
and
mov
and
adc
in
lea
int3
test
ljmp
lock
in
hlt
fcmovbe
mov
icebp
wbinvd
pop
sub
cmp
in
mov
out
ss
pusha
xchg
pop
mov
outsb
loop
test
cltd
cwtl
out
push
mov
mov
mov
out
ret
movsl
pop
fbld
cmp
inc
fldt
xor
inc
cmp
dec
das
iret
fwait
sti
data16
dec
outsb
sbb
push
stos
aas
imul
sbb
add
xor
xor
sub
std
pop
fcomi
out
cmpsl
test
and
mov
adc
mov
dec
xchg
dec
xchg
out
cld
dec
test
js
lds
std
and
sub
lar
lret
aaa
jns
into
fistl
in
rcl
in
sub
loope
dec
imul
roll
mov
inc
ds
roll
or
jnp
mov
or
jle
xchg
ror
test
dec
loop
inc
mov
sbb
pop
xchg
rcr
imul
cli
movsl
cmpsb
or
xchg
ftst
adc
sahf
mov
mov
movsl
cmpsl
pop
mov
push
dec
imul
into
aas
and
mov
fisubrs
inc
cmp
insb
scas
dec
mov
stos
into
push
add
xchg
popa
cmp
pop
dec
js
add
int3
daa
jg
ret
iret
pop
data16
fistpll
and
xchg
scas
xchg
daa
jno
push
dec
pop
into
es
mov
movsl
mov
sub
sti
adc
out
sub
xchg
out
dec
or
jnp
inc
pop
insb
xchg
ss
mov
fcompl
cmp
inc
lods
dec
pop
out
inc
addr16
mov
fbstp
lock
pop
cld
add
outsw
out
push
cmp
mov
mov
mov
sub
mov
adc
in
xchg
add
sub
xchg
and
push
or
cmp
inc
aas
dec
dec
lods
mov
pushf
nop
push
addr16
push
cmp
push
push
and
jns
or
mul
ja
xchg
outsl
ds
pop
mov
mov
out
lret
loopne
jmp
cmp
inc
xchg
xor
cs
mov
dec
jl
out
popf
pop
mov
or
xchg
arpl
test
pusha
scas
mov
dec
jp
negl
mov
shrb
out
jle
jbe
cmpsb
cmp
lret
out
ret
popf
out
cltd
dec
in
ja
xchg
mov
pop
push
cmp
lock
push
out
ds
aad
pop
cmc
xor
push
ret
fdivs
add
out
add
fisttpl
loopne
ds
xor
xor
add
pop
sub
mov
icebp
push
cmp
and
imul
mov
pop
sbb
add
js
mov
mov
repz
dec
jp
pop
fidivs
hlt
push
adc
sahf
pop
cmc
dec
xlat
out
push
rol
sbb
sbb
stos
lods
inc
push
xchg
test
xchg
es
das
xchg
loopne
jecxz
jno
repnz
mov
popf
jnp
movsb
lods
mul
sub
hlt
orw
fistpl
pop
iret
iret
int3
leave
aas
mov
dec
push
xor
lock
dec
sbb
outsb
mov
cli
mov
int3
lods
repnz
flds
aas
cmp
xor
in
js
mov
mov
fmuls
daa
lods
pop
jnp
xchg
sar
outsb
enter
add
dec
mov
aas
fcmovnb
add
out
jno,pt
dec
leave
add
xor
out
mov
repnz
test
push
mov
daa
out
fs
call
es
fmull
sbb
js
push
lea
aaa
mov
mov
and
cmpsb
push
jbe
mov
dec
out
mov
pop
mov
mov
int3
sbb
xor
add
mov
xchg
xor
outsb
or
mov
pop
and
dec
and
mov
aas
mov
mov
gs
icebp
adc
shlb
pop
ror
jae
dec
jmp
test
push
into
mull
cmp
sbb
cmp
push
or
sbb
ret
pop
jp
xor
iret
adc
test
sbb
jle
jns
js
mov
negb
mov
rcl
cmpsb
das
inc
out
mov
mov
ficompl
push
cmp
add
jl
inc
mov
arpl
fsubr
pop
xchg
cltd
jb
std
sub
inc
stos
and
stos
dec
in
mov
outsb
orl
scas
dec
int3
add
ret
push
inc
push
adc
xor
mov
xchg
sbb
pop
or
push
sub
inc
out
push
cltd
ds
cld
inc
lcall
or
xorb
gs
pop
pop
push
jg
lret
jmp
push
or
cmp
into
lea
out
ret
test
jp
mov
mov
ljmp
sub
lret
add
jmp
fsubrl
movsl
scas
js
jnp
mov
dec
xor
mov
sub
aaa
les
xchg
test
or
add
loope
push
test
adc
es
mov
into
cmpsb
popl
xor
repnz
push
pop
ficomps
sub
mov
sub
sub
loope
push
ret
adc
out
jne
add
mov
xchg
fists
dec
movsl
push
call
pop
clc
xor
pop
xor
in
fs
stc
xchg
sub
cmpsb
inc
inc
xor
mov
pop
and
add
cmp
sbb
movsl
adc
pop
inc
push
push
inc
imul
rcrb
dec
cld
outsb
pop
fldenv
shll
mov
adc
cmp
inc
mov
cs
xchg
sub
mov
jbe
ret
scas
fldenv
cmpb
add
sub
xor
xchg
in
movsl
icebp
xchg
std
adc
sti
ljmp
aas
jno
loopne
mov
ret
rcrl
in
lds
cmp
or
pop
dec
xlat
cmp
test
test
shll
lock
and
cmpsl
shll
sub
xchg
aas
pop
in
xor
mov
sub
in
fstl
adcb
movsl
sbb
js
pop
mov
shl
out
aas
cmc
fisubrl
outsb
movl
cmpl
pop
test
dec
or
sub
std
mov
add
inc
xchg
jb
push
jmp
insb
mov
imul
cmp
cltd
js
lods
fiadds
sub
or
jns
scas
jl
mov
lods
sbb
into
pop
jns
nop
in
push
test
std
test
pop
cmp
mov
pop
nop
or
mov
xor
mov
ds
fldcw
jmp
test
lea
fldt
inc
or
insb
das
sub
mov
pop
fidivl
cmp
add
mov
xchg
arpl
fcoms
es
scas
xchg
jne
pop
rcrb
nop
mov
aaa
adc
add
pop
lcall
loop
insb
shrl
outsl
push
push
shll
inc
mov
inc
adc
add
pop
out
jno
insl
mov
xor
stc
sub
iret
pop
mov
scas
fsubs
js
xchg
subb
addr16
jp
mov
add
mov
pop
stos
imul
xor
nop
inc
test
adc
lock
fildl
sbb
test
mov
aas
call
jl
sbb
cmc
movlps
cmp
xor
sbb
mov
mov
xchg
ds
sub
pop
push
jb
cs
xchg
out
sub
push
repnz
mov
arpl
and
or
cmp
mov
lock
jae
inc
bnd
popa
in
stc
lock
int3
xchg
dec
xorl
push
jl
adc
pop
test
lahf
mov
out
cmc
push
popa
lock
rclb
arpl
loope
mov
loope
hlt
outsl
aaa
add
paddb
xor
dec
sub
popa
mov
and
xchg
das
dec
in
fcomps
ret
adc
dec
mov
sarl
cmpsl
dec
std
mov
mov
sbb
je
inc
mov
in
pop
test
adc
and
or
int3
pop
jle
mov
jbe
lret
add
push
or
iret
dec
inc
negb
sbb
loopne
add
push
add
cld
ds
cmp
dec
jmp
fistpl
mov
and
stos
jno
pop
ljmp
add
loop
fiaddl
mov
repz
push
in
pop
push
and
roll
rol
mov
mov
and
add
insb
sti
mov
test
push
mov
outsl
fdivrs
imul
mov
and
xor
adc
jge
dec
data16
xchg
push
inc
sbb
in
fstpl
sub
cmp
sub
xchg
cs
sbb
push
nop
stos
dec
xchg
in
mov
xchg
cmpsb
lret
jge
notb
stos
jbe
mov
dec
jp
pop
adc
cmp
and
add
jb
mov
shl
cmpb
negl
push
aas
pop
mov
jmp
out
jb
movsb
pop
sahf
add
and
sub
into
outsb
aam
fbstp
aaa
aas
lret
mov
insb
and
sub
and
sbb
sbb
jmp
xchg
xchg
dec
fidivl
lods
das
mov
mov
ja
cmp
add
test
inc
fldcw
fcomps
push
iret
sub
aas
scas
and
add
inc
and
cmp
loope
xchg
stos
sar
loop
xchg
ss
xor
cmp
scas
inc
inc
cmp
jmp
or
stos
mov
mov
aas
mov
cmpsb
ds
mov
cmc
in
lahf
daa
pop
test
cmp
test
pop
xor
cmpsb
and
das
pop
prefetcht2
push
test
fdivs
jmp
fmul
add
dec
cli
test
testl
adc
cld
adc
push
push
les
clc
and
lea
adc
in
dec
loope
bound
dec
and
icebp
mov
test
push
std
jbe
popa
mov
jmp
fbstp
das
add
imul
repz
fadds
shll
pop
mov
adc
cmc
test
sahf
js
pop
xor
arpl
dec
aas
lea
sub
sbb
lret
push
loop
jl
sbb
das
daa
jb
pop
outsl
cmpsb
pushf
mov
sub
out
mov
sbb
inc
mov
bound
inc
xchg
fidivrl
fs
sub
iret
testl
pop
mov
pop
add
sub
mov
outsl
push
push
ds
es
les
adc
push
fmull
test
sbb
sbb
jl
push
mov
test
les
into
popf
xchg
subl
cmpsb
test
and
aas
jg
push
aaa
push
push
and
test
xor
mov
roll
test
rcrl
mov
negl
clc
jmp
pop
sti
std
cmp
mov
jmp
loopne
lods
pop
leave
add
push
sbb
add
lcall
in
fdiv
repz
mov
inc
ds
stos
call
xchg
out
sbb
jnp
pop
jo
stc
shrb
cmp
cmpsl
dec
inc
orb
add
movsb
pop
cmp
int
pop
dec
leave
sub
mov
js
sbb
mov
mov
cmp
jl
test
xchg
loopne
add
loope
pop
jle
aad
xor
mov
lret
and
xor
push
push
cmpsb
mov
pop
push
iret
inc
out
sub
test
mov
pop
push
dec
bound
add
xor
mov
mov
outsl
test
fists
pop
scas
xchg
jbe
push
out
pushf
jb
aas
loope
inc
addb
sarl
cmp
sub
xlat
lods
push
push
lea
and
popf
push
cmp
jae
and
sbbb
jl
icebp
xchg
pop
addr16
movsl
adc
xor
popa
scas
mov
inc
out
ss
out
xchg
xor
cmp
and
mov
cltd
jecxz
stos
pushf
mov
mov
xor
pushf
jbe
test
ja
in
bound
mov
push
mov
and
lahf
jl
leave
mov
sar
scas
ret
inc
nop
mov
call
jb
in
mov
add
cmp
and
clc
pop
xchg
mov
sub
insb
mov
inc
mov
outsb
push
out
pop
jae,pn
pop
outsb
loope
add
test
jmp
mov
adc
adc
push
inc
incl
loop
icebp
sarl
jg
in
ret
cmp
mov
push
fcmovnu
fxch
sbb
aas
ja
mov
call
inc
in
movsl
push
lcall
arpl
xor
jmp
repz
pop
or
dec
cld
out
adc
jecxz
pop
ret
movsl
in
rcll
pop
in
adc
sets
sub
mov
roll
lods
adc
sub
rolb
push
int
aas
mov
jno
out
or
and
pop
adc
jp
or
rcll
stos
jne
addr16
stc
inc
and
mov
ja
movsb
les
scas
test
lds
mov
cltd
jno
or
jp
in
faddl
out
mov
mov
popf
je
out
lds
test
je
out
pop
and
sbb
mov
jbe
pop
movb
bound
jns
scas
aam
sti
addr16
xor
jge
inc
mov
test
loopne
dec
dec
pop
les
out
fisubs
add
in
fcoms
lret
pop
sbb
imul
cmpsb
orl
rep
add
inc
mov
sti
js
mul
cmp
mov
pop
sbb
cld
insl
stos
or
pop
mov
push
ja
or
mov
das
add
and
cwtl
or
out
pop
xchg
test
daa
fnstenv
or
xchg
cmp
adc
inc
pop
mov
xor
js
jle
xchg
xor
std
call
iret
and
adc
fcoml
gs
and
jnp
and
addr16
jmp
mov
dec
negb
cli
xchg
dec
mov
in
pop
test
mov
or
ja
dec
les
clc
sbb
sub
xor
adcb
xchg
int3
js
mov
ljmp
push
out
scas
mov
je
repnz
mov
push
mov
sub
faddl
inc
aad
int
cltd
out
xlat
scas
pop
insb
out
jbe
push
test
addr16
sub
adc
push
add
jecxz
aas
inc
test
rcrl
add
clc
enter
pop
xchg
in
testl
repz
adc
cmp
ds
xchg
mov
fs
dec
pop
das
stos
cmp
mov
pop
jns
into
push
test
ja
mov
pusha
jle
jp
push
sti
in
jae
sub
xchg
jg
xacquire
outsl
in
daa
mov
fnstsw
lods
push
mov
loope
stos
js
pushf
dec
mov
imul
out
push
xchg
mov
mov
sub
add
test
daa
cld
adc
mov
mov
cs
jae
ret
jp
mov
add
jbe
xchg
add
scas
jl
addl
inc
push
or
jecxz
jg
sub
pop
sarl
test
sub
stc
push
dec
jno
mov
push
in
in
lea
orl
push
cmc
enter
in
in
mov
cmp
jp
adc
mov
ja
test
xchg
sub
jae,pt
stc
xchg
or
pop
fnstcw
fwait
je
ds
out
xor
inc
ja
imul
shrl
ljmp
xor
pushf
and
popa
into
sub
dec
and
pop
sub
dec
pop
jno
push
dec
add
or
pop
pop
jp
fs
cli
aas
adc
pop
frstor
mov
out
out
orb
xchg
jns
xor
andl
test
fwait
lock
mov
aam
pop
xor
adc
and
xor
scas
mov
push
fstps
push
movsb
inc
jae
sub
mov
nop
gs
in
into
mov
push
jmp
movsl
out
jge
fadd
mov
xchg
fsts
je
cmp
jmp
mov
aad
out
call
mov
inc
cmp
sbbl
shrl
daa
ficompl
lcall
cmp
push
dec
in
jns
in
sahf
stos
loop
cmp
xchg
aas
or
mov
cmp
sub
jle
nop
and
sub
jnp
sub
loop
mov
int
std
inc
cld
rol
xchg
push
stos
add
in
daa
add
jecxz
adc
std
pop
dec
adc
jb
jl
pop
jp
hlt
mov
sbb
cwtl
pusha
sar
xor
inc
mov
loop
call
daa
addr16
inc
cltd
add
inc
inc
adc
push
cmp
repnz
movsb
sbb
cmpl
add
xchg
inc
mov
mov
inc
add
pop
pop
imul
cs
jge
xor
sbb
dec
test
icebp
lods
in
imul
push
pop
ja
mov
out
jb
stos
xor
icebp
xlat
aas
xchg
sahf
sbb
and
mov
xchg
ja
or
data16
cwtl
mov
cmpsl
mov
mov
ds
cmpsl
fidivrl
dec
fisubrl
dec
mov
xor
fadds
push
or
loop
dec
push
sub
jae
rcl
xor
inc
imul
xchg
ret
add
or
add
out
cmp
cwtl
arpl
cwtl
adc
leave
outsb
adc
leave
dec
or
mov
out
or
jle
test
pop
jo
fs
clc
jle
cmp
aad
fwait
mov
mov
mov
mov
xlat
cltd
pop
lds
testb
js
xor
clc
icebp
dec
test
mov
in
aas
add
push
rclb
in
cltd
jecxz
xchg
cmpsl
dec
enter
test
pop
outsl
adc
out
xorb
out
sbbb
loop
adc
inc
test
lahf
inc
lret
repnz
ljmp
mov
pop
adc
mov
jl
aas
arpl
cmpb
das
sahf
ficoms
pop
or
adc
jne
scas
pushf
test
adc
insl
insb
xchg
lret
mov
jge
fwait
cld
push
ss
inc
aam
daa
mov
adc
ret
jbe
lock
stos
ret
mov
push
cli
jbe
call
ffree
cmp
add
inc
jle
mov
mov
fs
roll
mov
arpl
out
or
ds
mov
jle
je
mov
mov
sub
pop
aas
test
xor
inc
inc
ret
mov
out
mov
data16
stos
pop
fbld
pop
ljmp
push
push
lea
aaa
mov
mov
push
out
pop
jne
out
in
repz
je
or
jno
pop
fdivs
inc
or
mov
das
test
popf
xor
fldt
fs
rcll
mov
xchg
jmp
dec
cmpsb
pop
jle
and
add
out
dec
gs
mov
pop
mov
sarl
jge
push
aas
int
and
cli
fdivrp
loope
aad
pop
daa
aad
into
rclb
adc
push
dec
xchg
mov
mov
push
cltd
push
cmpsl
orl
mov
sub
add
xchg
lahf
jb
add
push
or
into
add
stos
sahf
outsb
or
xor
test
jecxz
dec
sbb
push
mov
dec
and
pop
out
pusha
data16
iret
inc
dec
je
insl
push
negl
mov
dec
cs
test
mov
push
popa
and
negl
fisubs
je
push
xor
xchg
mov
jmp
or
in
stos
xlat
adc
mov
ret
mov
pop
out
mov
xlat
test
pop
cmpb
xchg
rcrb
pop
cmp
mov
imul
cmp
dec
data16
pusha
lods
ret
fwait
leave
xorl
sub
fs
jne
orb
lods
sub
cli
sbb
imul
add
fs
xor
cltd
ffree
pop
cmp
push
rolb
jge
pop
cmp
xor
or
adc
mov
dec
jo
fnstcw
jge
enter
sbb
out
dec
pop
int
in
aam
repnz
push
xchg
mov
or
hlt
sbb
out
inc
rcrb
dec
loope
mulb
cmc
movsl
mov
adc
xor
gs
jle
sbb
nop
pop
pop
sbb
je
pop
sbb
outsb
in
or
rol
pop
push
push
jnp
filds
lret
out
pusha
push
jo
xor
sbb
push
and
int
sub
test
shlb
sub
jmp
das
inc
cld
add
sbb
and
imulb
test
mov
or
push
cltd
pop
cmp
in
out
scas
in
insl
test
call
pop
adc
imul
ror
sub
push
mov
pop
out
pushf
fs
push
aad
repz
ds
test
in
or
shrb
shld
repz
jno
xor
mov
jo
pop
mov
andb
rol
and
xchg
sub
cmc
inc
movsb
push
push
cld
stc
test
adc
add
scas
mov
adc
test
enter
xchg
fs
add
inc
rcrl
leave
ss
mov
adc
sbb
leave
xchg
ss
jae
push
test
xchg
das
jae
mov
pop
or
stos
call
and
add
fs
jecxz
sar
mov
dec
mov
adc
jl
mov
outsb
ficompl
inc
jecxz
xchg
in
xlat
or
ja
mov
and
inc
mov
xchg
cmp
mov
dec
faddl
movl
mov
mov
repnz
and
orb
adc
test
mov
push
mov
scas
imul
inc
mov
lea
shlb
xchg
mov
push
fildll
pop
lret
fmulp
shlb
pop
lods
push
push
or
mov
adc
cmp
call
xchg
loopw
and
pop
loop
jne
inc
mov
jl
int
push
dec
ds
adc
mov
into
and
push
es
mov
dec
inc
out
pop
push
fs
pop
xlat
dec
scas
cld
loope
cld
sbb
pop
insb
aad
mov
dec
sbb
and
mov
loopne
fs
mov
mov
sbb
aaa
mov
push
es
js
stos
cld
mov
shrl
jo
ds
pushl
pushf
testb
test
fsubl
adcl
pop
aad
add
jmp
ja
dec
cmp
add
sub
pusha
sbb
sti
js
mov
dec
mov
aas
push
fldl
pop
out
stc
pusha
inc
pop
cwtl
cmpsb
pushw
or
out
sahf
call
out
inc
outsb
xlat
and
adc
inc
scas
or
mov
jmp
rol
test
mov
jle
add
mov
ss
nop
push
rcl
call
fisttps
sbb
push
fincstp
lret
lcall
js
cs
pop
adc
je
imul
mov
mov
sbb
jl
mov
jecxz
jmp
add
stos
mov
out
pop
and
pop
inc
test
movsl
push
and
test
nop
sarb
jle
xorl
test
mov
negl
mov
jmp
inc
cmp
xchg
cmp
pusha
inc
sti
mov
scas
or
push
pop
add
mov
adc
xor
cmpsl
and
mov
mov
push
fcoms
push
jnp
repz
in
add
cmc
xor
cltd
test
std
pop
jbe
xchg
push
xor
movsb
test
dec
or
mov
in
lret
push
aas
popf
dec
rcrl
inc
inc
in
out
cli
fbld
mov
sub
and
movsw
lods
fisttpl
xchg
cmp
decl
dec
out
rcll
std
mov
lock
pop
int3
js
pop
pop
test
test
popa
test
ds
jp
outsb
pop
mov
push
adc
sbb
data16
daa
push
mov
arpl
and
addr16
lds
jno
mov
rol
push
mov
int
test
mov
cmpsl
aas
daa
rolb
dec
mov
inc
push
ret
inc
and
fs
xchg
loopne
cltd
pushf
out
outsl
jns
les
push
lret
dec
cmp
out
add
push
xor
data16
std
jnp
stos
movsb
xlat
xor
xchg
inc
sahf
cmpsb
cmovae
ds
sub
pusha
out
push
repz
xor
cmp
mov
pop
or
pop
lret
es
jp
mov
stos
adc
dec
ret
out
fisubrl
mov
jne
add
inc
add
jno,pn
imul
cmp
add
push
adc
daa
aas
mov
push
inc
das
inc
ficoms
pop
dec
cmp
stos
jle
xchg
pushaw
aas
pushf
inc
xor
loop
jmp
mov
cmp
jns
test
fidivrs
test
pop
aam
pop
in
outsb
das
inc
call
fisubl
pop
ret
inc
sbb
popa
pop
negb
adc
ret
test
or
sbb
ret
mov
adc
jg
mov
jbe
xlat
pop
xchg
dec
xor
insl
pop
movsb
popa
aas
rcrl
push
or
xchg
mov
lret
add
test
test
and
pop
out
or
sar
dec
or
ds
movsl
adc
mov
or
fcmovnbe
pop
bound
mov
addr16
pop
sbb
mov
pop
aad
fsub
in
and
shll
mov
inc
sbb
and
xchg
pop
inc
jmp
mov
cld
sub
pop
cld
pop
mov
es
test
test
fidivrs
xlat
out
in
cli
xchg
push
dec
fsubrl
pop
ret
inc
mov
xchg
shlb
ds
mov
js
push
inc
or
mov
je
mov
sbb
xchg
cmp
xchg
inc
xchg
pop
enter
jecxz,pt
mov
and
xchg
rolb
add
xchg
repz
repz
mull
dec
jb
mov
fwait
call
adc
add
stos
sbb
xor
test
repz
dec
out
push
dec
fidivl
dec
lds
mov
xor
imul
add
jge
rep
cmp
inc
into
add
lcall
or
cmc
mov
hlt
sub
rep
push
arpl
fisubrl
jg
dec
ss
or
push
dec
int3
stc
call
jno
sbb
cmc
shl
lock
sub
push
sti
pop
xor
out
imul
lahf
sub
push
push
sub
ljmp
sub
out
jns
pop
pop
mov
add
int3
pop
xor
cli
mov
mov
sti
outsl
xchg
pop
ds
cltd
fimull
in
repz
mov
mov
cmp
jl
inc
or
clc
fs
test
xor
cmpsb
or
aad
mov
mov
notl
stos
dec
stc
and
cmc
mov
scas
add
out
dec
test
and
cmpsl
pushf
and
xchg
adc
popa
bound
lds
mov
test
sbb
test
icebp
mov
fistpll
cmp
xchg
dec
mov
pop
ljmp
mov
ds
cmp
sub
ja
pop
movsb
scas
or
scas
sub
ret
test
cmp
cltd
inc
or
mov
lea
call
mov
and
pop
fiadds
cli
jns
out
ret
into
and
fildll
jmp
cli
out
outsl
stc
lret
mov
sbb
enter
cmpl
sahf
out
repnz
fstpl
xor
insl
cmp
add
insb
mov
dec
cmp
pop
shrl
mov
adc
ficoms
cs
jge
or
lret
js
loopne
test
in
ja
add
push
sar
and
notb
in
pusha
pop
fs
fdiv
sub
enter
outsb
or
mov
xchg
mov
scas
dec
xchg
jne
xchg
in
movsl
aad
sbb
pop
sbb
jmp
imull
in
cmpsb
add
jmp
insl
inc
jnp
mov
shrl
mov
sbb
adc
add
arpl
repz
lods
xchg
es
xchg
cmp
cmp
pop
pcmpgtb
sub
sub
into
bound
int3
shl
mov
pop
mov
cli
lret
out
out
jl
sbb
or
inc
pop
dec
test
std
adc
or
xor
stc
add
inc
scas
out
and
ss
mov
loop
pop
cmpsb
hlt
pop
pop
rolb
or
lods
in
xchg
adc
aad
adc
jnp
gs
xlat
movsb
pop
cwtl
inc
push
enter
add
xor
sti
cwtl
add
or
mov
cltd
cmp
popf
mov
xor
xchg
push
add
sub
mov
ret
sbb
pop
dec
add
repnz
inc
jg
mov
sbb
sub
or
imul
insl
neg
fdivs
mov
mov
cmp
pop
mov
xchg
stc
out
std
jb
dec
sahf
stos
cmpl
pushl
call
sub
pop
popf
jo
rcr
sbb
mov
sub
inc
aam
add
imul
cmpsb
repnz
out
xor
fnsave
out
dec
push
aam
mov
out
and
repz
or
scas
jo
cwtl
leave
leave
xchg
test
std
xchg
jae
xor
fstps
and
xchg
add
jmp
test
ret
addr16
fs
out
fnsave
inc
jno
jecxz
adc
xchg
mov
sahf
sub
sbb
ret
jb
mul
je
cmpsl
push
test
mov
fiaddl
pop
out
mov
add
cmpsb
aad
push
faddp
outsb
pop
cmpb
push
cmpsb
out
xlat
test
push
push
sbb
dec
shrb
insl
mov
repz
push
jns
test
outsb
cmpsb
mov
out
add
stc
mov
jge
inc
pop
call
clc
xchg
std
mov
xor
pop
rorb
dec
stos
jb
xlat
test
rcll
out
mov
dec
int
lock
xchg
cmc
les
test
pop
add
push
lcall
push
sti
push
lods
adc
sbb
xchg
cwtl
incl
fisubl
movsb
inc
mov
pushf
sub
adc
clc
dec
repnz
pop
sub
dec
jecxz
ja
fstl
aas
mov
aaa
add
and
push
sub
fcos
pop
sbb
ficoml
bound
adc
std
shlb
lcall
sub
inc
imul
xchg
push
pusha
push
out
mov
adc
scas
je
bound
cld
fisttpl
hlt
mov
mov
mov
in
les
leave
and
ss
fs
inc
mov
movsb
pop
pusha
or
stos
orb
adc
pop
es
mov
jno
fbstp
rcr
sub
movsl
je
or
les
mov
push
pop
jo
jno
dec
push
jg
xchg
xor
inc
mov
aas
scas
mov
fsubrp
or
arpl
bnd
sub
mov
xchg
out
pop
jp
jg
fidivs
xor
stos
jecxz
out
or
fisubs
icebp
push
nop
pop
nop
xlat
loopne
cmpsb
push
mov
mov
or
xchg
pop
cmpsb
add
insl
repz
iret
mov
ds
mov
or
adc
aas
lods
iret
xchg
lods
mov
sahf
pop
push
xchg
lea
jp
jmp
lock
les
f2xm1
inc
jge
dec
dec
shl
ja
rclb
mov
jbe
cmp
out
out
addl
xchg
pop
push
push
dec
cmp
jb
pop
jae
out
add
dec
shld
sub
pop
cld
xchg
mov
sbb
mov
sbb
jae
xor
mov
mov
mov
cmp
mov
cltd
mov
fldenv
xchg
pop
adc
push
fnstsw
imul
iretw
call
pop
in
in
std
insb
ss
lahf
test
or
popa
fbld
sub
mov
daa
test
fstps
out
cs
out
cwtl
aad
inc
dec
es
push
out
loopne
jle
mov
test
iret
sarl
ljmp
dec
hlt
inc
jns
out
adc
jnp
sbb
mov
mov
mov
pop
jmp
cli
loope
push
pop
aas
push
mov
je
rclb
test
nop
sub
pop
xchg
test
cwtl
out
nop
notrack
fisttpl
icebp
stos
mov
mov
add
mov
in
adcl
iret
mov
ljmp
in
shrl
or
mov
push
ljmp
sub
inc
loop
mov
sbb
test
inc
inc
aad
cwtl
dec
cmpsl
cmp
rcrb
xlat
orb
sbb
push
add
icebp
call
call
fbstp
dec
push
stos
adc
les
ret
shl
xor
or
fistps
cmp
ljmp
xchg
and
fs
pop
in
sbb
imul
enter
inc
push
shlb
mov
lret
stos
test
fwait
aaa
testb
add
aas
xchg
popa
fcos
addb
out
push
loopne
xor
sub
out
jecxz
or
test
and
push
inc
loopne
les
inc
sub
gs
ds
lahf
add
jne
dec
or
out
lods
mov
pop
mov
insl
fldenv
mov
pop
adc
test
gs
pop
insb
sub
sbb
pop
out
ja
pop
lods
xchg
cmp
xchg
jg
repz
movsb
and
fnstsw
push
inc
and
test
xchg
xchg
jge
in
js
adc
fcomps
js
mov
and
pop
mov
repnz
xchg
push
xchg
aad
out
movsbl
pop
hlt
test
sti
pop
or
cmp
stos
loop
add
mov
cmc
push
sub
test
scas
jg
out
dec
lcall
in
leave
xchg
pop
pushf
add
jo
lock
test
lods
jmp
cmp
mov
lcall
or
jb
inc
add
call
loop
adc
mov
mov
ret
aad
mov
pop
pop
adc
aas
cmp
push
mov
out
aaa
dec
in
add
mov
add
out
cmp
cmp
cmp
pop
hlt
mov
ficomps
mov
insl
das
push
push
inc
jmp
enter
xchg
pop
push
outsl
rcr
pop
jge
mov
pop
push
fstl
inc
sbb
rcr
fidivrl
mov
imul
idivb
sahf
lods
fcompl
lock
aam
dec
push
xor
cmp
sub
ficompl
icebp
shl
aam
pop
jo
imul
mov
jns
data16
pop
fucomp
addr16
je
nop
stc
mov
sub
or
pop
mov
push
or
and
jae
xor
js
aas
xchg
lret
jno
repz
cmp
loopne
aaa
mov
adc
das
push
bound
out
inc
add
or
lret
sahf
cmp
push
mov
and
sbb
test
sahf
clc
cmp
ljmp
iret
sbb
dec
adc
cmpsl
sbb
scas
push
inc
in
mov
jbe
sbb
pop
aam
sti
sbb
and
mov
cmp
clc
sub
orl
cmp
gs
mov
test
cld
mov
test
dec
cmp
pop
mov
rcl
cs
fdiv
add
push
adc
mul
insb
sub
ljmp
hlt
addr16
leave
or
sbb
loopne
lock
call
push
and
rolb
es
mov
jne
mov
addr16
fisttpll
sbb
pushf
jl
pop
jge
xchg
lock
and
xchg
pop
lret
add
lds
push
lcall
mov
imul
xor
testl
push
ljmp
inc
pop
ljmp
aad
nop
jbe
mov
movl
popa
pop
mov
sub
in
ja
into
mov
inc
loopne
fs
and
mov
push
fiadds
cmc
test
imul
pop
mov
lods
xchg
push
out
call
sbb
jge
rcll
and
lock
pop
in
fnsetpm(287
xchg
arpl
ds
es
mov
push
shl
push
sub
cld
fs
sbbb
sbb
negb
mov
ja
out
int3
fcmovnbe
repnz
mov
mov
and
mov
outsb
or
push
mov
mulb
out
in
sub
jne
sbb
pop
mov
mov
cmp
in
hlt
jmp
mov
enter
jl,pn
lret
aas
cltd
xchg
lds
imul
out
pop
test
xor
cmovl
fadds
nop
cld
ljmp
pushl
push
addl
and
int
mov
push
push
jg
in
bound
xlat
xchg
jno
fdiv
adcl
add
adc
out
jnp
dec
xchg
mov
cmpsl
stos
and
add
out
cmp
iret
scas
mov
sub
mov
push
push
mov
test
mov
icebp
add
add
gs
inc
movb
sbb
cmpsl
in
out
push
jbe
inc
fnstenv
push
iret
and
scas
mov
jns
in
xor
dec
sub
mov
jno
jmp
xchg
inc
push
and
pop
pop
jno
aas
pop
loopne
fildl
test
sbb
movsb
and
or
pusha
in
pusha
dec
cmc
out
insl
lea
cmp
push
out
mov
nop
in
dec
adc
inc
xchg
push
pop
xchg
loope
add
and
and
add
pop
or
outsb
dec
clc
ss
test
jecxz
scas
dec
mov
cmpsb
icebp
iret
add
roll
stos
jno
xlat
xlat
test
fcom
and
adc
inc
clc
mov
int3
xlat
or
pop
xchg
mov
pop
mov
jo
addl
test
addr16
xchg
inc
and
cmp
shl
mov
rolb
push
mov
add
aas
xchg
outsl
add
out
inc
add
insb
ljmp
mov
stos
adc
mov
mov
and
jle
insb
add
push
aas
dec
shll
out
and
outsb
cmp
add
out
push
iret
imul
inc
xor
shlb
fmul
xchg
outsl
mov
xchg
fs
leave
jae
pop
add
test
pushf
stos
arpl
jnp
pop
fadds
insb
pop
sub
in
lahf
jbe
out
inc
enter
je
sub
fisubs
test
ret
leave
aaa
pop
hlt
or
stos
adc
addr16
lahf
stc
sti
push
movsl
aas
xor
add
lock
fildll
decb
lcall
in
sbb
rcl
out
lcall
xor
pop
nop
inc
dec
jp
mov
cmp
test
pop
jp
sti
fadd
adc
test
in
xchg
ret
inc
add
pop
scas
test
xor
inc
mov
or
cli
cmp
test
inc
cmc
aas
das
jns
scas
dec
fwait
mov
push
ds
mov
std
push
subl
add
add
inc
mov
int3
sbb
add
test
xorb
aas
mov
cmpsl
xor
rolb
mov
add
fwait
mov
in
int3
rorl
cmpsl
xlat
popl
mov
and
jg
xchg
insb
ret
xchg
sbb
cmp
lcall
add
popa
aas
loope
dec
mov
xchg
filds
loope
sbbl
or
test
xchg
sbb
lcall
inc
aaa
pop
sti
xor
jbe
stos
mov
xchg
inc
enter
add
pop
mov
hlt
or
icebp
pop
mov
lods
call
xchg
jns
cmp
pop
int3
iret
das
or
mov
xchg
add
lret
pop
ljmp
mov
aas
sbb
pop
aad
pop
aad
dec
sub
mov
fadd
dec
and
sar
dec
roll
setl
xchg
cmpl
dec
push
test
lahf
out
pop
loope
push
pop
xchg
jb
test
dec
push
ret
push
inc
lret
mov
ds
push
out
push
iret
inc
mov
scas
nop
push
in
into
out
test
pop
sahf
aas
lcall
out
subb
dec
push
sahf
scas
pop
rorb
call
test
test
pop
lret
ret
jmp
pop
pop
jp
mov
test
dec
ret
lds
repz
and
push
pop
xor
out
into
clc
inc
jecxz
adc
orl
aam
gs
cwtl
stos
lods
cmc
out
lahf
out
push
test
enter
loopne
xor
xlat
or
push
jmp
pop
xchg
aas
mov
out
test
sub
imul
dec
aas
xchg
mov
or
out
sbb
test
jno
je
out
mov
cld
jnp
or
pop
jp
mov
jg
popa
bound
data16
imul
add
fadds
cmp
and
xchg
ljmp
jne
push
xor
xchg
ds
sub
mov
mov
inc
cmpsl
fcoms
mov
pop
jp
push
mov
popf
xor
sbb
or
jl
jo
pusha
mov
mov
test
dec
push
xchg
bnd
into
std
out
mov
mov
pusha
jp
jmp
scas
loope
dec
mov
cmc
ret
test
lret
inc
push
inc
mov
sbb
xchg
out
inc
rorb
ja
pop
js
and
lcall
and
addr16
mov
bound
int3
icebp
mov
lret
hlt
stos
xchg
ds
adc
and
addr16
popf
rcrl
mov
mov
xor
lock
add
outsl
int3
or
shlb
in
jae
mov
dec
daa
fiaddl
pop
add
cmp
test
fmul
dec
pop
sub
test
rolb
test
pop
mov
ds
leave
push
adc
pop
pushf
jae
push
pop
mov
jb
fmul
lahf
inc
push
out
sub
test
jecxz
stc
sub
jp
aam
popf
ss
xor
nop
cmpsl
pop
sahf
mov
pop
mov
test
ljmp
adc
pop
sbb
sub
cmp
xchg
mov
jge
cmp
repz
cmp
jle
xorb
dec
test
fbld
push
fldt
out
les
in
pop
sub
ss
sahf
sbb
xchg
pop
into
icebp
inc
test
arpl
ds
cmp
fbld
push
arpl
jae
stc
push
push
mov
addr16
cmp
xor
add
mov
cmp
add
mov
dec
in
mov
fsubrl
jge
cltd
xor
jge
mov
out
jge
iret
leave
push
jnp
shl
test
fimuls
sub
fldcw
lret
mov
ficoms
or
es
stc
aas
ss
xchg
jp
jp
rcll
xor
gs
mov
push
sbb
jnp
nop
jge
shlb
xor
sbb
mov
push
hlt
pop
cmp
cld
dec
movsb
cmp
sub
mov
or
mov
or
test
fs
xchg
test
xlat
jb
sbb
inc
and
test
pop
arpl
arpl
pop
pop
mulb
scas
stos
adc
push
push
push
xchg
test
xor
bswap
cmpl
into
hlt
pop
jle
test
idivb
xlat
jmp
ret
cmp
stos
mov
mov
dec
stc
mov
sbb
imul
sub
les
mov
aas
cwtl
inc
dec
scas
sub
pop
add
mov
jge
pop
ficompl
stc
inc
pop
loop
cltd
jg
aas
push
mov
cmp
xchg
pop
or
sbbl
les
aam
mov
and
sbb
repz
ds
stc
and
test
je
frstor
cmpsl
ss
or
movsb
sub
xor
das
stc
pop
mov
inc
lds
es
push
bound
into
or
mov
call
xlat
les
or
js
mov
ds
push
clc
pop
cli
jae
or
push
add
jns
sub
xchg
rcrb
and
pop
and
mov
insl
rclb
aad
mov
adc
shr
clc
call
iret
mov
adc
shlb
mov
ja
test
bound
aas
imul
stos
out
mov
in
iret
sbb
inc
pop
pop
mov
xlat
push
cmpsb
inc
xor
xchg
jp,pt
mov
in
pop
sahf
mov
test
ja
movsl
adc
das
dec
loope
adc
sub
push
mov
xor
dec
lds
dec
or
dec
ss
rolb
pop
mov
pop
imul
aas
mov
dec
cld
adc
mov
or
dec
in
pusha
mov
fimull
mov
cmc
into
pop
push
repnz
sub
lods
test
data16
mov
scas
xchg
test
mov
mov
sub
and
jo
out
mov
out
shrb
arpl
in
out
mov
movd
mov
in
test
sub
sbb
jne
lods
imul
pop
jge
pop
ds
mov
xchg
mov
clc
test
imul
xchg
xchg
jge
push
out
sub
je
cmp
sahf
mov
cmp
lock
hlt
fnsave
jmp
int3
add
push
pop
in
lds
loop
or
cwtl
push
out
jo
lods
insb
scas
cli
jo
fcos
jnp
jns
push
inc
ljmp
loop
fcmovb
jns
pushf
imul
pop
mov
cmc
test
out
pop
jp
dec
out
mov
test
in
loope
adc
imul
call
pop
sbb
mov
arpl
mov
out
lds
xlat
popa
fcomps
std
fucom
sbb
dec
iret
test
cmp
push
cli
cmp
mov
popa
fidivrl
ja
mov
pop
lock
out
lcall
movsb
mov
pop
push
add
adc
andl
test
stos
and
std
je
jl
mov
jnp
aam
dec
push
scas
testb
mov
xchg
jl
xor
xor
loope
xchg
add
push
dec
mov
out
shr
jp
clc
fsubrs
pop
out
cmp
sub
adc
jecxz
andb
aas
cmp
mov
lcall
or
jae
inc
pop
jl
punpcklwd
in
clc
test
or
fcmovb
rolb
test
mov
mov
push
dec
xchg
jne
mov
xchg
inc
push
sub
fwait
jb
ds
int
out
pop
pop
push
xchg
push
test
sbb
cmp
cmp
out
cli
jns
add
ds
mov
xchg
pop
xchg
hlt
sahf
aas
mov
aas
dec
mov
jb
ror
in
test
push
xor
push
push
inc
pop
aam
or
cli
inc
iret
test
test
testb
jecxz
mov
pop
test
out
scas
int
cltd
in
out
clc
cmp
lcall
mov
popa
mov
add
cmp
pop
dec
jg
repz
jmp
lcall
mov
add
js
orb
in
test
daa
inc
add
inc
out
lret
lahf
jl
in
cwtl
daa
enter
pop
cmc
inc
dec
mov
mov
mov
out
sub
jnp
sti
aas
cmp
sub
mov
test
es
sbb
out
push
push
das
pop
cmp
push
cmp
xor
add
daa
dec
nop
jl
or
pop
mov
in
pop
xlat
xor
add
sub
ds
dec
imul
fldt
mov
test
jne
int
and
cltd
fisubrl
xchg
jecxz
sbb
add
pop
pop
faddl
xchg
xchg
push
dec
stc
test
das
or
ds
lret
pop
mov
pop
pop
fs
cltd
test
jp
aad
and
stos
in
push
aaa
divl
sbbb
lods
and
fdivrs
daa
repnz
dec
mov
hlt
mov
pop
inc
shl
mov
stos
or
adc
pop
fsubr
std
sbb
shlb
sub
aas
sbb
mov
xchg
dec
or
inc
push
ds
cmpsb
dec
or
out
ja
add
mov
stos
pusha
push
dec
movsl
push
xor
mov
das
arpl
subw
fisubs
sbb
xchg
pop
push
xor
ret
aam
add
idivb
push
cmp
adcb
xchg
cld
xchg
das
dec
test
cltd
xor
add
add
pop
pop
out
or
cmp
sahf
cmpsl
fisubl
adc
test
adc
aas
jae
xor
sbb
shrb
xchg
push
int
mov
or
mov
cmp
aam
hlt
out
jne
adc
mov
lock
push
xchg
inc
or
cmp
mov
cmp
pusha
jne
or
mov
xchg
int
adc
mov
je
sub
lcall
movsb
dec
pop
imul
pop
add
cs
push
push
jae
sarl
sarl
jnp
fbstp
lock
jnp
out
fucomip
fldl
sub
sub
xor
and
addb
sbb
shrb
gs
stos
aas
imul
scas
out
arpl
ficomps
push
aas
out
out
push
in
aas
sbb
push
inc
aaa
adc
ds
push
jg
xchg
xor
out
lahf
int
stc
mov
add
ds
test
in
inc
mov
cmp
cmp
jg
sbb
mov
js
mov
das
sbb
test
lods
dec
test
jnp
pop
ljmp
jp
popf
iret
stc
xchg
and
mov
test
dec
xor
jae
cltd
xchg
mov
les
out
int3
dec
jmp
cmp
imul
adc
test
mov
add
outsl
mov
sar
loopne
xor
sub
aas
adc
sbb
inc
out
push
repz
xchg
lods
push
jbe
cltd
popf
push
fs
ds
pop
sub
lahf
fsubrl
popa
shl
inc
cmp
or
pop
sub
movsb
cmpl
filds
pop
fimull
loop
ss
jns
mov
mov
sbb
xchg
out
nop
mov
lcall
inc
les
je
fimull
lahf
out
xchg
jae
stos
in
scas
or
inc
add
rolb
or
lret
test
pop
ds
aas
xorl
out
mov
push
lea
push
pop
out
mov
xchg
sarb
orl
cli
pop
sbb
aas
mov
pop
das
hlt
push
cmp
xchg
negb
ds
pop
mov
add
mov
mov
cmpsb
sub
and
popa
mov
mov
std
test
rclb
clc
sahf
lods
push
cltd
push
or
xchg
sbb
and
cwtl
mov
push
pop
xchg
pop
insl
into
push
outsb
jp
pushf
lahf
pop
add
sbb
rcrb
pop
cmp
fldenv
jge
sahf
xchg
scas
cmp
xor
sub
popf
add
pop
mov
inc
cs
sbb
and
add
and
aad
fdivs
leave
pop
lcall
jae
js
add
lret
xchg
cmp
cld
nop
or
mov
sub
clc
push
sbb
repnz
push
jle
jb
rcrb
loopne
loop
test
rclb
pop
or
jg
xchg
pop
imul
test
push
push
sbb
aad
or
inc
nop
jo
xchg
stos
jb
fs
ss
add
and
int3
fdivp
push
jle
je
pop
fcomps
test
cmpl
add
xchg
cmpsl
adc
aas
cmp
test
ds
mov
negl
out
enter
cwtl
inc
cmpsl
fsubp
loop
push
out
fists
ds
xchg
jno
sbb
jecxz
jmp
popa
jae
dec
fildl
and
rorl
nop
imul
stos
xor
pusha
loope
popf
cmpsl
dec
les
xchg
mov
int
mov
loop
inc
out
or
fisubrl
cmpsb
enter
fwait
jge
adc
test
sbb
les
fs
mov
daa
test
add
data16
mov
aam
mov
lds
xchg
jle
movsb
mov
scas
hlt
enter
aad
pop
shrb
ds
cmp
cmp
adc
or
ja
and
lcall
pop
mov
sub
bound
push
add
jno
out
pop
lcall
dec
jge
dec
add
outsb
adc
push
outsb
jb
in
test
fwait
imul
movsl
jno
or
ljmp
jo
xor
mov
jmp
xor
iret
stos
add
in
test
shr
or
fmulp
and
test
pushf
adc
jae
push
aas
sbbl
test
dec
xor
xor
rorl
mov
and
daa
cmp
pop
loope
pop
icebp
mov
push
lea
mov
and
and
arpl
jbe
pop
mov
out
inc
jno
jp
xor
jmp
jge
xchg
jg
pop
xchg
iret
aam
test
push
out
cmp
pop
jno
pushf
or
mov
je
test
nop
movsl
das
ds
jecxz
sub
jbe
outsb
movl
rorb
sub
movsb
lods
cmp
negb
fiadds
cmp
fisubrs
movsb
andl
test
into
jge
push
add
xchg
arpl
fcmovnu
mov
ret
mov
push
test
imul
pushf
shr
sbb
push
movsl
xchg
cmpsl
call
jge
jne
call
lret
xor
add
in
inc
push
imul
inc
mov
mov
shrl
adc
pop
mov
jmp
inc
pop
sahf
out
mulb
cmpsb
call
jns
pop
hlt
icebp
enter
out
adc
cmp
push
inc
cli
dec
inc
dec
dec
xor
mov
dec
aas
cltd
stos
jb
adc
int3
addb
and
andl
stos
pop
pop
pop
fiadds
pop
pop
sbb
pop
arpl
jmp
bnd
fwait
ret
int
xchg
sahf
loopne
test
out
inc
fsts
sub
fstpl
inc
fs
aaa
sbb
mov
in
pop
scas
in
or
test
cli
movsl
iret
pop
fldcw
mov
and
pop
lret
in
in
iret
aas
enter
push
mov
add
mov
or
scas
pop
fcomp
test
mov
inc
cs
jbe
out
or
pop
in
out
in
test
cld
cmp
mov
inc
sub
in
sbb
and
add
fldt
xchg
out
mov
fstps
sbb
sub
sub
push
outsb
adc
repnz
scas
decl
int
jg
pop
or
loope
push
loop
xchg
mov
or
stos
push
lahf
icebp
pop
dec
dec
idivb
add
jns
xchg
jne
mov
sbb
imul
out
fnsave
pop
inc
xor
pop
out
movsb
mov
cmp
mov
lret
cwtl
push
lods
outsl
loop
push
sarl
adc
inc
xor
mov
outsb
jmp
repnz
mov
mov
in
adc
sahf
dec
cmp
stos
push
or
pop
adcb
mov
xor
int3
adc
sub
adc
enter
and
out
xchg
inc
fists
adc
pop
lock
jbe
fs
cld
jg
pop
xchg
imul
pop
cmp
pop
stos
pop
mov
pop
test
fisttps
and
lods
fs
ds
sarl
wbinvd
push
jo
rcrl
and
add
pusha
out
cmp
xor
adc
pop
fisubl
negl
jecxz
add
in
pusha
jecxz
pop
sahf
jno
in
fsubr
in
lcall
mov
mov
in
sbb
ljmp
call
repz
xor
sbb
add
aas
jae
jno
out
adc
aam
inc
mov
sbb
adc
cmp
out
call
add
pop
cli
xor
cld
and
dec
mov
pop
push
mov
sahf
faddl
cmp
cmp
cwtl
je
xchg
out
sbb
xor
test
ds
pop
adc
lock
test
push
pop
inc
es
je
lock
imul
mov
cmpsb
pop
push
jge
mov
add
sbb
insl
cmpsl
push
pause
push
fs
xlat
sub
mov
adc
stos
push
add
dec
fdivrl
sbb
mov
ds
mov
xor
bound
stos
push
bound
cmpsb
xchg
cmpsl
cwtl
jnp
pop
sar
lret
ds
sub
mov
add
aas
sub
pusha
imul
rcrl
ds
push
push
push
sbb
add
movsb
js
push
into
cltd
mov
mov
leave
test
shll
fnstsw
test
loopne
pusha
into
rcll
mov
test
cmpsl
xor
mov
push
aaa
xlat
lahf
mov
gs
sub
pushf
push
inc
mov
fwait
notl
push
out
arpl
lsl
int
jg
cmc
das
std
and
addr16
dec
pop
add
adc
adc
scas
or
pop
hlt
mov
or
loop
ss
es
fs
out
pop
mov
cmp
xor
mov
lea
repnz
icebp
inc
loop
pop
and
cmpsb
test
sub
and
outsb
inc
pop
pop
icebp
push
jmp
lods
pop
js
daa
xorl
pushf
sbb
imul
insb
add
pusha
jge
int3
dec
xchg
addl
xchg
sub
ds
test
dec
and
or
or
push
out
xor
call
or
fdiv
mov
aas
arpl
or
out
jo
jne
es
pusha
test
lds
sbb
pop
lret
lahf
sbb
sar
push
ja
push
pop
xchg
in
mov
and
lret
jl
gs
hlt
push
cmpsl
pop
test
rorb
cli
cmp
ja
fimull
xor
jg
or
test
dec
cmp
jnp
push
shll
mov
mov
inc
test
cld
ficoml
movsl
cmp
aas
fwait
mov
mov
in
lods
cmc
out
push
std
sbb
lcall
out
pop
out
lods
dec
pop
cltd
mov
loopne
es
int3
nop
jns
test
test
dec
test
sbb
mov
xor
dec
sbbb
out
into
and
and
das
sbbb
mov
jmp
sub
mov
and
movsl
and
setno
jne
mov
flds
xor
cmp
int3
daa
mov
fcmovnb
pop
sbb
xchg
cmp
fs
fists
dec
cmp
shrb
jge
insl
gs
rcll
daa
xchg
jnp
dec
lahf
in
push
pop
ljmp
mov
push
je
jp
xorb
cmpsb
in
dec
xchg
and
test
cmp
lret
lret
sbb
cmpsb
dec
sti
jns
leave
mov
dec
lahf
test
sbb
mov
mov
jae
cmp
lds
dec
mov
popf
pop
dec
pop
stos
or
xchg
xchg
test
xor
andl
mov
adc
xor
or
pop
inc
and
out
in
push
push
ret
out
shl
ljmp
xor
push
or
loop
push
pop
xor
add
repz
dec
fstl
or
push
xor
sbbb
sbbb
pop
sub
push
insb
roll
sub
dec
cmp
pop
jge
out
mov
push
repz
inc
mov
mov
lods
and
pushf
ds
inc
std
rorl
mov
cltd
movb
jae
gs
pop
mov
xor
mov
inc
loopne
cmpsl
dec
sub
out
sbb
in
jo
hlt
ljmp
push
pop
push
aas
jge
add
ja
and
dec
arpl
pop
daa
je
mov
shlb
sub
mov
test
les
jmp
pop
fdivrp
mov
dec
sahf
ljmp
mov
cwtl
mov
dec
mov
jo
es
dec
dec
pop
loop
pusha
mov
push
fwait
or
adc
pop
sub
loopne
inc
mov
cmp
test
inc
les
inc
addb
cmp
imul
pop
mov
fs
pop
outsb
test
repnz
mov
fs
jns
add
repz
pop
pop
dec
cmpl
jb
out
cmp
add
and
add
ss
fs
sahf
push
test
ss
stc
mov
add
mov
in
sbb
icebp
data16
mov
shl
push
adc
mov
inc
fiaddl
and
js
test
insl
sbbl
test
cli
push
mov
push
fs
in
in
lods
mov
sarl
jmp
add
cmpb
lret
add
mov
ss
dec
in
jl
pop
push
cltd
leave
cld
outsl
xor
or
ret
inc
mov
pop
inc
xchg
andb
xchg
fdiv
repz
insb
xor
mov
xchg
add
aas
repnz
out
cli
pop
inc
aas
xchg
jmp
pop
add
push
inc
sbb
pop
lock
push
jbe
push
rep
inc
gs
dec
test
mov
xor
mov
pmullw
ss
inc
js
pop
mov
lock
inc
or
jl
cmp
lods
neg
pusha
xor
jne
repnz
out
push
inc
mov
leave
repz
in
pop
pop
ret
test
sbb
dec
pop
mov
mov
sbb
jecxz
fiadds
gs
cli
cwtl
push
or
adc
lods
and
sarb
push
or
pop
out
add
rolb
push
je
xorl
pop
cmp
add
outsb
call
enter
mov
scas
orl
cmp
pop
mov
out
inc
or
test
xchg
xchg
adc
mov
fwait
mov
sbb
push
data16
ja
jecxz
aaa
cwtl
xchg
fldl
cwtl
movsl
jmp
mov
fisttps
daa
xor
mov
pop
push
cmc
movb
cld
cmp
lret
sub
jo
cmc
push
data16
stos
mov
scas
repz
or
and
fsubs
or
rolb
pop
cmp
jp
inc
test
leave
cmp
sub
stc
mov
fsubrs
lret
fwait
push
aas
imul
push
or
dec
icebp
flds
imul
xchg
and
les
inc
xor
dec
lods
aaa
test
jae
dec
pop
push
xor
mov
sbb
add
jge
jne
add
xchg
outsl
cmp
bound
in
out
loopne
pop
and
pop
add
test
inc
pop
aas
test
pminub
jecxz
insb
popf
jecxz
call
dec
iret
push
arpl
mov
mov
js
aas
xorl
ja
cmpsb
adcb
paddusb
dec
push
pop
lods
cwtl
push
or
hlt
pop
sti
cmpsl
pop
out
shll
out
push
push
jg
cmpsb
dec
out
push
mov
xorb
sbb
jae
pop
test
jl
mov
add
add
sub
mov
push
ljmp
push
mov
cmp
xor
out
fs
rolb
mov
xchg
fnstsw
aas
scas
mov
or
rclb
push
fidivrs
xchg
sbb
aaa
cmp
mov
sbb
aam
dec
mov
pop
ja
xchg
hlt
xor
pop
aas
ret
sahf
mov
aas
mov
lcall
sbb
cmpsl
outsl
sti
push
shr
adc
pop
into
sbb
cmp
into
inc
mov
cmpsl
adc
pop
inc
aas
cmp
das
aaa
adcl
in
mov
cltd
dec
or
andb
enter
call
dec
cmp
or
mov
fdivrs
push
mov
mov
pop
mov
pop
add
bound
test
pop
popa
cmpl
shl
insl
das
xchg
jnp
mov
mov
iret
fidivrl
adcl
movsb
lcall
mov
dec
add
aaa
bound
insb
jnp
pop
icebp
jns
sti
lods
or
mov
adc
out
push
test
cmc
mov
jae
out
sarl
je
push
adc
cltd
cmpsl
inc
loopne
out
pop
out
mov
pop
adc
pop
test
jmp
fstps
inc
stos
int3
ds
movsb
sub
loop
scas
cli
and
rolb
aaa
and
push
jae
repnz
test
dec
pop
mov
sbbb
in
or
jns
ret
cmp
xchg
add
mov
mov
outsl
shl
adc
imull
rcrb
mov
rcrb
loop
test
test
pop
dec
sbb
push
daa
fwait
pop
add
aas
xor
bound
mov
pop
sub
add
das
out
mov
xor
into
xchg
mov
jg
leave
loop
lods
and
ljmp
into
push
es
pop
inc
pop
dec
les
mov
inc
inc
ror
ds
rclb
adc
or
mov
cwtl
rolb
dec
ljmp
and
add
cs
xor
pop
cmp
mov
jp
ficompl
push
xlat
mov
out
inc
lahf
mov
mov
out
psrad
jns
push
mov
sbb
xor
test
sbb
fdivrs
adc
outsb
stos
lds
fisttpl
mov
test
mov
dec
ret
idivb
adc
mov
cwtl
aas
push
cmp
icebp
fdivrs
sub
fbstp
je
popf
mov
fwait
out
mov
or
mov
popa
jl
cmpsl
movl
pop
add
inc
and
arpl
out
inc
sub
pop
xchg
sbb
shll
fldenv
lahf
xor
xor
cmpsl
lock
test
mov
cmpsb
add
pop
enter
int3
adc
test
arpl
fcoml
call
fcoms
rcrl
test
cli
test
mov
push
scas
ljmp
pop
imul
loop
jge
mov
add
and
aam
push
xchg
loopne
sub
inc
stc
das
insl
js
or
or
jl
adc
imul
xchg
arpl
jo
xchg
sahf
or
sub
lea
or
jmp
loopne
sbb
clc
jp
push
inc
mov
cmp
xor
or
push
out
fnstenv
jbe
dec
mov
cs
push
fstpl
out
ljmp
cmp
and
or
fidivrl
repnz
jle
rorl
sti
pop
cltd
mov
add
jecxz
leave
sub
scas
repnz
jecxz
cmp
sbb
negl
popa
pop
rcrb
lret
xor
mov
cld
jg
pop
pop
or
mov
mov
test
ljmp
jmp
add
nop
cltd
xlat
out
dec
insl
xchg
add
xchg
pop
add
mov
cmpsb
lret
and
xchg
iret
mov
mov
pop
sub
dec
inc
push
xor
daa
mov
xchg
pop
sub
adc
xor
das
arpl
iret
cmp
or
and
popf
iret
fisttpl
mov
popf
clc
cmp
scas
sbb
dec
inc
sahf
inc
inc
pop
sbb
ss
out
inc
dec
add
sbb
lea
mov
out
testb
and
xchg
test
jp
jb
inc
arpl
pop
test
jl
inc
clc
mov
pop
push
subl
sub
test
pop
mov
test
adc
arpl
jno
xchg
pusha
out
mov
sbb
or
int3
add
xchg
mov
push
pop
cmpsl
push
loope
add
popa
push
push
movsl
iret
fstpt
shl
dec
shlb
jnp
add
pusha
aad
push
sub
inc
pop
mov
cwtl
jle
mov
add
and
mov
adc
pop
xor
test
int3
xchg
add
or
sub
iret
outsb
daa
bound
stos
cmp
test
ljmp
shl
jne
pop
mov
lret
adc
lea
into
mov
mov
fs
sub
jae
loope
enter
test
cmp
mov
sub
in
or
ds
or
inc
int3
add
add
mov
out
adc
test
ds
in
std
pop
sbb
cmp
sub
cmp
shll
mov
mov
sub
mov
roll
ftst
jbe
jmp
into
xchg
xchg
in
xor
jmp
and
push
test
or
xor
inc
and
xor
mov
andl
les
xchg
inc
orb
out
inc
inc
cmp
or
ret
xchg
notb
jg
pushf
cmp
push
hlt
adc
jne
das
movsl
cmpsb
subb
out
cld
add
pop
in
jle
push
xor
dec
add
jo
xor
and
out
in
push
mov
dec
mov
jnp
aam
and
je
cmc
lock
mov
mov
ds
mov
xchg
movb
push
pop
jno
pop
push
movsb
cmp
mov
fcmovu
js
and
add
sbb
mov
mov
cs
test
cli
test
repz
push
aas
cmp
inc
loopne
ret
add
out
xorl
out
je
loop
pop
jle
out
ret
movhps
dec
pop
hlt
movsl
ret
adc
lods
fcoms
test
adc
inc
pop
movsb
pusha
rolb
dec
popa
cli
mov
int3
push
test
mov
ret
cmp
mov
xor
xchg
xchg
outsl
xor
or
xchg
add
mov
sub
stos
mov
xchg
xchg
mov
daa
popa
mov
xchg
mov
lcall
js
popa
test
add
data16
xchg
push
cli
push
mov
add
jae,pt
xlat
int3
add
sub
mov
andb
and
push
jae
mov
mov
mov
testb
adc
mull
in
rorl
test
les
lods
xchg
in
sbb
xchg
xchg
loopne
mov
jbe
popf
adc
repnz
push
lcall
pop
out
stos
call
pop
test
jge
mov
inc
bound
shll
aas
mov
jb
mov
jb
xchg
popa
fldt
pop
test
pop
pusha
outsb
in
dec
add
jmp
pop
bound
fs
sub
mov
lcall
dec
pusha
add
ss
fmuls
jmp
in
movsb
push
adc
cld
test
movups
bound
test
mov
xor
mov
lds
pop
xor
sub
push
adc
dec
mov
pop
int
fldpi
mov
and
fstps
jnp
cmp
enter
sub
out
xchg
and
xchg
je
shl
pop
sub
push
faddl
ds
mov
mov
ficompl
out
pusha
dec
push
pop
aas
xchg
cmp
aas
inc
cmpsl
pop
push
pop
add
sti
icebp
push
pop
push
xchg
out
jne
stc
ss
outsb
sti
cmp
test
out
jne
add
pop
fisubrl
pop
out
xchg
pop
jmp
std
inc
aas
dec
inc
leave
data16
shrb
andb
inc
out
pop
out
jecxz
ret
imul
inc
sub
test
adc
inc
adc
call
cmpsb
pop
adc
adc
js
mov
xchg
fsubl
jmp
rclb
xchg
push
cld
pop
shl
out
out
mov
inc
dec
and
aas
adc
subb
movsb
push
mov
aad
mul
push
sub
out
lcall
jl
fmul
mov
pop
pop
and
jmp
pop
cmp
or
or
dec
dec
arpl
add
jmp
call
loope
lret
lea
pop
outsl
pop
push
ds
pop
xchg
je
jmp
pop
adc
lock
lret
dec
test
jns
into
mov
mov
out
mov
std
sub
test
adc
sub
imul
into
inc
into
mov
or
test
jne
push
loope
mov
bnd
sbb
and
sbb
dec
adc
call
sti
mov
aad
gs
lcall
or
mov
negb
je
aas
or
stos
xorl
push
dec
insl
jle
pop
xor
inc
pop
rolb
jl
test
add
cmpsb
cmp
add
cmp
call
pop
xchg
dec
ret
imulb
movsl
jmp
shrl
xor
into
and
movlps
fs
fnstcw
xchg
test
scas
pop
ds
lods
pushf
push
repnz
loop
jne
stc
pop
mov
leave
out
into
inc
jae
aaa
jmp
gs
dec
jo
pop
ret
popa
stc
ss
add
cmp
mov
mov
test
push
repnz
scas
fdivr
test
mov
adc
mov
push
imul
pop
je
cmp
loope
fisubl
mov
pop
sub
in
push
pop
push
push
push
shrl
call
jne
stc
and
mov
push
in
and
dec
daa
jne
ds
mov
push
out
mov
loope
inc
insb
rolb
wrmsr
sbb
ja
push
mov
mov
addr16
inc
fmuls
add
es
rol
paddusw
pop
sub
scas
addl
cmc
xor
sub
cli
push
stos
jmp
xchg
notl
fs
dec
inc
cmc
popf
es
scas
mov
cwtl
imul
dec
mov
hlt
out
cmp
gs
dec
push
add
out
daa
in
outsb
or
mov
adcb
jbe
cmp
or
push
xlat
add
pop
xchg
ds
xchg
jle
mov
pop
js
or
lods
pop
mov
mov
cmpb
mov
int
test
lds
adc
inc
cmp
pop
arpl
mov
pop
jecxz
and
push
adc
lcall
and
movl
sub
jmp
fscale
xchg
loope
dec
sbb
inc
mov
pusha
test
orb
xchg
test
sarl
dec
add
mov
pop
xlat
and
jno
xor
xor
lcall
cmp
or
mov
sbb
test
mov
divb
sub
out
cltd
call
pop
jne
lcall
test
push
push
and
add
adc
inc
push
push
pop
cmp
mov
out
xor
or
outsb
add
pop
loopne
pop
jmp
xchg
lods
ds
and
arpl
fnstcw
jnp
std
xchg
xchg
inc
out
sub
imul
sub
aam
mov
lahf
push
sub
inc
data16
mov
cwtl
push
ljmpw
hlt
xor
cli
sti
push
out
sbb
lods
loopne
inc
sbb
in
test
inc
out
or
cs
adc
adc
ret
xchg
out
fdivp
mov
das
adc
sub
lcall
in
mov
out
movsl
fadds
cmpsl
loopne
into
imul
jl
ficomps
cmp
das
sub
ljmp
and
in
test
stc
jmp
pop
js
or
xor
out
mov
xchg
pop
bound
cli
test
push
loopne
out
push
bound
mov
mov
add
adc
add
int
idivb
mov
lock
pop
pop
es
dec
add
fistpll
cs
addl
addr16
enter
dec
dec
pop
add
add
test
dec
mov
sub
sti
cmp
es
push
imul
dec
xchg
xchg
nop
in
xchg
lret
add
ja
push
add
int
mov
out
mov
notl
sub
cmpsb
leave
clc
and
mov
aas
xchg
push
xor
mov
mov
inc
ss
sbbl
sarl
adc
sub
mov
pop
sub
mov
adc
add
ficompl
jmp
rclb
sub
jecxz
out
dec
repz
stos
sbb
cmc
pop
das
out
and
dec
test
out
jle
or
gs
orb
test
pop
mov
ds
pushf
imul
mov
flds
aaa
or
sbb
mov
inc
lret
sub
push
hlt
and
ret
inc
lcall
sub
ja
scas
daa
adcb
fisubl
lahf
adc
jnp
pop
enter
push
test
and
call
mov
sub
dec
push
lcall
push
and
inc
mov
push
stc
inc
ss
mov
adc
fcoml
mov
dec
int3
push
and
or
sub
test
push
jb
pop
hlt
cwtl
jns
inc
dec
bound
jle
gs
aas
mov
add
sbb
jb
aas
inc
push
and
fwait
or
and
popf
mov
enter
sti
scas
xor
xor
fs
adc
ss
mov
lods
shlb
jle
in
mov
out
sub
ja
mov
xchg
push
jne
loop
fcmovnbe
pop
hlt
in
out
mov
inc
ja
sub
pop
push
and
pop
shl
cmp
outsl
inc
iret
pop
cli
cld
adc
push
nop
ss
mov
faddl
push
fcmovnb
mov
and
shrl
in
or
mov
xor
inc
xlat
lea
xchg
push
sbb
in
or
fwait
in
ds
cmp
aaa
incb
out
push
add
or
xchg
int
lahf
push
sbbb
shll
xor
and
xchg
test
mov
fdivrs
lea
shl
adc
mov
jno
mov
pop
ljmp
loope
inc
movsb
jne
sar
jmp
mov
pop
out
jle
daa
sti
test
xlat
pop
and
mov
pop
into
fsubrl
ss
fimull
movsl
outsb
scas
lret
into
aas
repz
or
cli
push
mov
jb
inc
movsb
or
in
pop
sub
push
mov
andb
rcrl
xor
hlt
shld
in
test
and
into
aas
repz
loope
dec
and
jo
push
cli
cmp
scas
or
bound
inc
mov
dec
xor
xchg
xchg
scas
lods
mov
or
out
mov
inc
fcoms
mov
and
pop
shlb
mov
int3
test
adc
dec
out
gs
fldcw
xor
rorb
sarb
xchg
daa
jge
sti
push
mov
std
dec
jo
ljmp
jne
sbb
movsl
pop
jb
sub
push
pusha
and
cmp
xor
mov
dec
pusha
fistps
pop
dec
and
mov
sbb
and
pop
fs
xlat
cmc
push
inc
lods
movsl
push
js
cmpsb
xchg
lea
xor
stos
jge
sub
jbe
push
cli
andb
js
int3
idivl
addr16
mov
push
jne
jmp
xor
mov
in
lea
rorl
aam
pop
jg
test
jl
aas
loopne
in
or
adc
sub
repnz
or
fidivs
pop
cmp
nop
cmp
test
inc
jne
ds
xor
push
cmp
in
mov
test
xchg
out
dec
push
js
aas
mov
push
sub
mov
arpl
mov
pop
xor
xor
test
adc
adc
pushl
mov
fadds
mov
adc
les
fwait
lods
shrl
jmp
jne
pop
and
data16
addl
addl
sahf
xchg
pop
pusha
push
sti
arpl
sbb
loope
leave
aam
cmp
or
rorb
movsl
cs
jne
out
fwait
jmp
and
push
mov
push
jae
sub
pop
in
jbe
cld
stos
in
addl
pop
push
pop
sbb
mov
aaa
xor
mov
pop
adc
push
xchg
inc
mov
xchg
or
pushf
push
sbb
pushl
push
mov
scas
mov
ds
push
je
aam
inc
popa
out
dec
fiadds
call
push
pop
pop
sub
or
add
xchg
test
sbb
popa
pop
push
sub
inc
mov
cmc
in
push
iret
mov
popf
xchg
push
ds
or
push
out
push
xchg
bound
bound
daa
ret
stos
xchg
stc
into
xchg
outsl
cmp
pop
xor
fstp
fdivrs
mov
mov
imul
cmp
cmc
in
outsl
stos
stos
in
sub
and
loope,pt
stos
fimuls
pop
ja
cs
or
xchg
cli
cmpsl
push
xchg
push
or
fisubs
repz
data16
out
pushf
adc
insl
cmp
mov
test
mov
inc
cld
mov
push
cmpsb
icebp
mov
pop
icebp
inc
mov
jbe
fcomps
xchg
ja
add
cmpsl
test
xchg
outsb
test
dec
lods
xchg
insl
jne
add
sarl
test
test
dec
aas
notl
xor
cmp
mov
adc
sbb
mov
test
fsub
fcomp
addr16
xor
xchg
pop
nop
sbb
ds
ja
sbb
loopne
adc
sbb
andl
jo
mov
jbe
xchg
in
lods
lock
sahf
fwait
int
xchg
out
xor
cmp
push
cmp
mov
mov
mov
cli
jae
test
push
cli
cmpsb
xor
push
xchg
push
jno
cmpsb
xchg
out
push
mov
outsl
cmp
iret
inc
movl
fs
sbb
and
test
out
jp
data16
nop
dec
cwtl
xchg
jmp
adc
cmp
sub
sub
or
test
pop
pop
in
aas
ret
jae
sahf
sub
fs
lahf
aam
ljmp
sub
add
and
xor
xchg
test
push
dec
xor
mov
add
sbb
bound
mov
cmp
cmc
loope
lods
xchg
lret
add
loopne
inc
in
shll
lods
scas
out
decl
xchg
aaa
sub
ljmp
pop
sbb
mov
imul
jp
outsb
test
sti
jo
push
ds
mov
out
test
in
mov
jmp
jecxz
cmpsb
pop
and
add
adc
shrb
fxch
add
fiaddl
std
jle
or
imul
stos
sbb
rol
adcb
lock
pop
lret
test
xchg
fcoms
ds
cltd
jmp
adc
push
ret
rcrl
pop
dec
and
cmp
mov
fmuls
dec
cltd
inc
pushf
fisubs
and
outsb
enter
cmp
sub
lahf
mov
aas
pop
pop
xor
cmpsl
mov
shll
add
in
adcl
jns
repnz
cmc
sub
sti
sbb
js
or
out
xlat
lods
xchg
out
pop
mov
ret
xchg
mov
or
out
jbe
inc
jge
mov
cmpb
sbb
fbstp
cltd
cmpsb
pop
dec
mov
int
out
negb
adc
fstpl
cmc
inc
mov
sbb
cmpsb
mov
mov
xchg
cmpsl
jp
jno,pt
dec
xchg
iret
rolb
jle
push
add
sahf
insb
add
aas
loope
pop
mov
out
mov
test
insb
xor
pop
mov
stos
add
push
loopne
insl
popa
daa
cltd
xlat
aas
dec
mov
inc
out
mov
jg
adc
or
mov
mov
push
cmpsb
mov
in
jae
jle
rol
lock
mov
inc
cmpsl
push
mov
dec
cmc
ds
jp
cmpsb
clc
dec
xchg
cmpsl
xchg
call
test
out
jb
clc
cmp
and
or
push
and
out
xchg
imul
jl
sbb
and
mov
xor
mov
push
mov
mov
jmp
pop
mov
xchg
and
fsub
push
enter
test
adcl
jno
and
adc
fimull
cli
push
iret
lret
jge
push
jecxz
sub
scas
pop
push
in
divb
mov
pop
test
mov
add
pop
in
push
cmp
xor
cmpsb
js
push
leave
mov
pop
push
cmpsb
adc
inc
int
push
mov
loop,pt
jb
test
xchg
pop
push
xor
std
aas
dec
jo
test
mov
xor
in
jno
pop
or
add
push
dec
and
mov
adc
mov
ret
ds
es
jecxz
popa
sti
ret
lock
ds
push
sti
cmc
xchg
ss
lret
data16
out
data16
sti
jmp
mov
stc
mov
testl
mov
inc
ss
jns
mov
xchg
push
jg
add
fsubs
movsl
pop
mov
or
mull
out
sub
fwait
dec
xor
test
rolb
jnp
add
aas
jns
test
mov
mov
add
out
push
pop
and
inc
stc
pop
cmpsb
push
insl
push
pusha
mov
cwtl
out
xchg
push
jmp
test
mov
mov
loop
xor
in
dec
push
je
aas
out
mov
or
mov
mov
das
cwtl
add
pop
mov
mov
adc
push
jl
sub
rol
pop
les
pop
das
gs
sarb
adc
cmp
push
imul
aam
sub
sub
xlat
mov
fidivrl
jl
push
hlt
pop
dec
icebp
out
sbb
lods
add
les
mov
lods
jle
jb
sub
push
aas
add
cmp
xor
je
jne
aas
inc
cmp
jbe
inc
jg
test
cmc
cmc
test
xor
hlt
cmpsl
mov
cmp
inc
lods
push
lock
test
in
adc
enter
scas
clc
ficompl
xchg
mov
test
and
mov
mov
xlat
inc
in
push
xlat
jo
cli
jmp
sti
pop
push
insb
imul
mov
sub
js
push
popa
pop
mov
add
cmp
mov
mov
icebp
jmp
cmpsl
xchg
push
dec
pop
lret
cmp
rcr
test
jnp
dec
mov
iret
test
mov
in
dec
rolb
jp
sub
or
pop
addb
into
xchg
xor
les
and
pop
jno
les
insl
fwait
pop
test
imul
pop
movsb
mulb
rorl
add
adc
popf
fistpl
cltd
adc
in
sub
inc
mov
mov
xchg
aad
in
cmp
xor
out
inc
xchg
cmp
ret
add
adc
mov
loopne
mov
pop
dec
jbe
loope
sbb
pop
andb
sub
sub
xor
std
sub
data16
mov
or
jge
fcompl
mov
lcall
fiaddl
xor
hlt
pop
orb
inc
gs
mov
sbb
pop
outsb
shll
ja
loopne
mov
jo
push
mov
pop
ljmp
push
jne
mov
dec
or
rcrb
mov
js
mov
jle
push
pop
push
lea
test
jge,pt
stos
push
and
mov
cmp
push
aad
aas
movsb
lcall
inc
push
add
scas
mov
lret
lods
sarb
sub
loope
fdiv
arpl
push
xor
addr16
outsb
lahf
lea
out
in
push
stos
stos
mov
add
jge
sbb
add
fwait
test
repz
lods
and
jmp
jge
cltd
and
and
out
out
call
or
mov
out
in
cmpsb
lods
daa
inc
fstl
push
mov
sub
test
out
xchg
insb
and
aas
cmpsl
mov
stos
aam
sub
addr16
cwtl
aas
pushf
push
dec
push
xor
mov
and
and
xlat
mov
aas
imul
repnz
jmp
adc
lods
sub
mov
repnz
loope
xor
jo
loop
daa
dec
push
inc
jge
test
mov
xchg
sub
and
mov
push
push
push
mov
dec
or
xchg
notb
pop
cmp
jl
inc
push
cmpsb
dec
ja,pt
aas
pop
and
pop
out
add
jnp
and
stos
push
xchg
in
pop
and
lds
sahf
adc
test
jnp
or
cmpsl
or
or
fidivl
insb
sub
pusha
jp
inc
es
lock
es
rolb
rorb
inc
sbb
cltd
in
sbb
insl
int
pop
inc
ds
or
scas
lret
xor
fistpll
add
push
jle
lcall
sbb
inc
dec
push
pop
and
mov
test
outsl
arpl
lds
xor
jae
test
push
push
sub
cmp
fwait
inc
out
inc
inc
inc
popa
jge
jle
fdivl
pop
movsb
je
sub
stos
sub
pushf
fstps
out
mov
ret
and
dec
and
inc
push
and
jae
fisttps
add
sub
jb
sbb
lea
scas
adc
fadds
jae
lcall
mov
ss
mov
add
sub
daa
inc
mov
ljmp
insb
push
mov
ss
adc
mov
test
in
int
out
aam
lret
fcmovne
sub
and
mov
out
cmc
lods
aam
lret
out
mov
cmp
sbb
inc
xchg
cmpsl
roll
pop
pusha
adcb
xchg
sbb
test
xchg
fwait
adc
jb
out
adc
mov
cltd
sti
and
bound
push
into
fildl
out
ljmp
out
jle
xor
or
enter
insl
cmpsb
shlb
repz
outsl
or
pusha
ds
daa
dec
mov
aad
ds
dec
xchg
ret
in
lcall
adc
ljmp
rol
out
ret
mov
test
popa
jbe
aas
inc
fwait
and
cmp
popa
push
sub
add
iret
shl
rolb
sarb
mov
mov
or
popa
jbe
lds
xchg
pop
shll
push
inc
sub
pop
inc
mov
mov
arpl
lahf
lock
push
ss
into
cmp
test
andl
in
inc
fs
push
test
sbb
adc
les
inc
adc
lods
enter
pop
push
fsubrs
pop
sbb
sbb
mov
pop
sbbb
stos
cmc
pop
popl
jmp
sti
jbe
push
arpl
xchg
ds
lret
stos
push
insl
xchg
out
arpl
inc
jne
mov
mov
fldenv
xchg
pop
fimull
out
xor
or
rol
out
pusha
mov
scas
pop
in
fdivrl
mov
pop
daa
sub
out
sahf
xchg
enter
add
push
fistpl
icebp
ret
outsl
push
and
push
mov
adc
into
push
mov
stos
jg
loope
movsb
out
mov
in
scas
jp
rol
adc
andl
push
push
inc
in
jns
fwait
mov
sbbl
data16
test
add
test
pop
test
fists
jl
and
xor
xchg
xchg
or
dec
test
xchg
adc
pop
fisubrl
pop
mov
xchg
das
rorl
xchg
out
ss
movsb
mov
sbb
mov
sete
rolb
and
mov
imul
enter
ljmp
xchg
ds
loope
mov
cltd
out
lcall
dec
loopne
daa
pop
push
or
shrb
jle
mov
test
mov
scas
movb
roll
cmpsb
mov
aas
test
aad
sbb
jnp
aas
fwait
js
iret
mov
add
mov
push
sbb
fs
jmp
test
push
jg
lahf
in
ljmp
xchg
stos
cs
lahf
cmp
add
movsl
sbb
ljmp
cmc
test
in
shrb
mov
aas
call
adc
xchg
xchg
jne
xchg
sub
xlat
push
inc
sub
mov
cld
mov
push
inc
int3
out
jo
rcrb
out
push
es
pop
or
sbb
and
push
cmp
push
das
out
pushf
dec
mov
test
mov
add
dec
in
push
test
xor
data16
hlt
sbb
cmp
xchg
subl
jle
mov
ds
pop
xchg
rorl
jle
inc
cmp
mov
movsb
js
lods
add
ljmp
mov
scas
les
fwait
push
fwait
shl
aaa
inc
sub
inc
pop
clc
mov
add
test
insl
pop
aas
sbb
xchg
ficompl
loopne
out
dec
mov
cmp
or
hlt
push
ja
shrb
mov
push
arpl
iret
push
ret
mov
push
iret
cmp
push
xchg
js
rcrl
sub
cmp
sub
pop
jae
cs
shr
jp
sbb
add
fidivrs
add
sub
push
add
arpl
jb
mov
inc
pop
loopne
adc
xchg
cmovno
bound
ds
in
test
fptan
cmp
jae
mov
adc
out
in
xchg
call
pusha
js
arpl
int
pushf
andb
mov
clc
or
cmp
test
lods
scas
das
in
int
test
aas
adc
push
ret
jnp
ljmp
mov
testl
icebp
add
mov
out
or
push
sti
pop
add
cmp
and
popf
lock
in
movsb
in
sbb
cmp
dec
clflush
xchg
jns
lock
in
add
cwtl
cmp
test
in
mov
outsl
xor
add
pop
push
out
pop
and
mov
jmp
aad
pop
and
js
dec
test
push
popf
fwait
outsl
cmpsl
test
cld
out
inc
movsl
inc
out
push
call
xchg
push
add
out
aaa
mov
push
cmp
or
xor
jae
push
add
std
int
aad
stc
push
cmpb
xor
mov
mov
cwtl
fisubl
mov
addl
lcall
mov
sbb
add
push
insl
mov
pop
cmp
and
ror
je
popa
pop
call
pop
push
mov
int
pop
stc
outsl
sbbb
cmp
pop
jp
lcall
pop
mov
rol
xor
and
mov
test
gs
push
push
popa
push
pop
je
jne
add
in
sarb
cmp
fs
fcomip
fisubl
mov
sbb
and
hlt
mov
and
aad
mov
loopne
and
jg
in
adc
pushf
fistpl
xchg
mov
test
jns
ds
into
leave
test
out
inc
jge
xchg
dec
mov
pop
push
push
nop
mov
subl
aas
inc
add
faddl
sbb
addr16
lahf
outsl
pop
and
cmp
lret
or
pop
push
aaa
stc
ja
repnz
ds
pop
pop
xchg
cli
pusha
cmp
cmp
aam
fistpll
fwait
scas
out
mov
test
sub
shl
test
in
faddl
mov
xchg
pop
xchg
sbb
mov
lods
and
in
shl
xor
sbb
insb
test
or
sti
loope
insb
xchg
adc
iret
out
rcrb
jp
imul
dec
add
push
push
fisubrs
cmp
mov
or
out
cmp
or
cmp
ficompl
adc
pusha
test
or
aas
rcrl
or
xchg
and
fidivs
addr16
pop
mov
loopne
aas
pop
outsl
lahf
and
jae,pt
push
jge
sti
out
push
aaa
gs
test
lret
cvtpi2ps
stc
cmp
sub
imul
iret
ds
inc
push
jo
stc
mov
sbb
pop
shrb
pop
jnp
dec
mov
xchg
subl
aad
fsub
mov
sub
sbb
sub
mov
dec
jnp
fdivs
sbb
cmc
xchg
mov
pop
mov
psubq
aas
mov
fs
adc
sbb
std
and
push
pop
in
scas
iret
push
ja
loopne
arpl
ljmp
aas
movsl
into
sbb
dec
test
adc
push
pop
inc
pusha
push
sti
stos
jmp
je
pop
scas
mov
rolb
mov
xadd
out
sbb
inc
pop
lock
out
fiaddl
sub
mov
inc
cmp
jp
jl
cmp
jo
push
pop
dec
shll
xchg
sub
ds
movsb
test
out
mov
mov
cmp
inc
stos
fs
pop
fadds
cltd
hlt
cmp
test
in
repz
push
sbb
popa
out
movsb
in
sub
mov
push
push
ds
mov
out
xchg
out
cld
mov
sub
jge
incb
xchg
repz
jge
pop
movsb
pop
int3
or
sbb
mov
ss
pop
nop
test
jp
and
div
jge
cli
xor
mov
cli
jns
adc
out
push
in
inc
aad
pop
sarb
adc
in
pop
jo
xchg
jmp
add
dec
adc
sbb
mov
sti
fimull
inc
mov
test
pop
dec
dec
in
cli
adc
or
and
divl
lcall
outsb
stc
popa
lock
mov
jmp
sub
jle
adc
lock
insl
sbb
xor
and
mov
sbb
pop
dec
jg
and
cmpsb
sbb
into
dec
repnz
lods
pop
in
movsl
jmp
mov
jne
lret
ret
jmp
aas
mov
in
dec
popf
fwait
and
aad
add
das
popf
lcall
pop
cmp
std
sahf
popl
popf
inc
aam
cmpsl
lcall
lcall
rorb
sbb
push
ja
mov
cwtl
pop
xchg
in
bound
adc
out
mov
test
pop
dec
dec
testb
in
rorb
pop
es
adc
test
lods
ds
jecxz
jecxz
add
in
out
imull
daa
out
pop
movsl
xor
jg
add
push
sarb
pop
inc
lds
in
cld
jb
shlb
lods
pop
insl
cmp
mov
out
mov
mov
mov
shrl
int3
enter
or
call
pop
mov
in
enter
pop
lcall
sar
jnp
mov
mov
test
mov
data16
jo
pushf
pop
sub
cltd
ja
insb
sub
cmpsl
prefetchnta
mov
out
pop
xchg
jecxz
sub
cmpsl
sbb
nop
lock
fldl
lahf
scas
mov
sub
shr
mov
adc
jae
mov
lods
test
aas
cmp
push
inc
jmp
iret
pop
aam
mov
pop
pop
ds
xchg
add
pop
fidivl
push
ds
test
adc
rorb
mov
cmpb
aad
dec
mov
rcll
movsb
aas
out
ret
pushf
cltd
mov
xchg
cmp
imul
mov
sub
sbb
push
out
fs
xchg
in
pop
inc
jb
xchg
nop
and
sahf
pop
jbe
ss
popa
mov
xlat
push
stc
cmp
scas
addr16
rcrb
jle
xchg
data16
lock
pop
fsubrs
in
jp
pusha
rolb
scas
test
outsl
xchg
in
and
and
mov
push
inc
outsb
out
push
loop
push
stos
insb
mov
mov
xor
adcb
loopne
lahf
ds
xchg
pusha
mov
cmp
pop
ret
mov
daa
lret
cli
je
fs
xchg
pop
test
in
pop
jno
cli
dec
mov
xchg
gs
add
mov
and
dec
repz
and
push
aas
mov
lcall
mov
stos
xchg
or
push
pop
js
xor
test
inc
push
repz
data16
pop
push
inc
int
pusha
enter
pop
lds
add
or
out
xor
aas
inc
adc
cmp
ja
cmp
and
push
enter
cld
cld
push
test
push
inc
pop
inc
push
arpl
outsl
stos
push
adcb
inc
mov
adc
scas
mov
scas
jbe
out
test
sti
xchg
inc
fstps
je
sbb
mov
call
xor
ljmp
cs
xor
out
xor
sbb
or
test
lods
lret
mov
sbb
add
fs
test
fimull
jno,pt
and
sti
mov
out
xchg
lock
test
das
in
incl
dec
adc
out
sbb
pop
test
xchg
xor
je
sbb
add
mov
push
or
in
shll
pop
jle
fdivs
cmc
xchg
dec
ds
aad
lahf
loop
pop
push
out
test
pop
fistpl
push
arpl
xchg
cmc
sbb
inc
mov
test
in
out
aas
fwait
push
mov
in
out
in
iret
sbb
mov
pop
push
loop
jno
enter
adc
jo
mov
mov
add
insb
push
mov
cwtl
pop
test
xorl
dec
push
fld
test
into
cmpl
fsubrs
mov
idivb
dec
adc
mov
test
pop
xchg
test
or
mov
test
cmp
int
dec
fisubs
push
pop
scas
aas
xchg
mov
sub
repz
cmpsl
mov
sbb
xor
imul
movsb
push
shll
hlt
or
pop
cmp
aas
inc
jecxz
lret
inc
mov
movsb
add
cwtl
iret
pop
sub
jecxz
cmp
mov
aas
and
cwtl
or
fdivrp
jnp
lahf
jns
xlat
sbbl
fwait
jo
or
and
dec
and
les
iret
pop
aad
les
negl
push
stos
or
das
add
push
adcb
fs
xchg
mov
mov
out
push
mov
push
push
xchg
inc
push
ljmp
orl
lods
and
iret
sbb
ss
sbb
jno
sub
inc
lret
dec
movsl
and
mov
mov
adc
mov
or
mov
xor
loop
aaa
or
lock
fdivl
daa
std
fistpll
adc
mov
pop
push
mov
daa
cmpsl
mov
mov
xor
shll
scas
pop
add
jge
cmpsb
rcll
mov
out
lock
inc
popa
cmpsb
xor
mov
sbb
dec
xchg
out
cmc
loope
dec
xor
jns
add
mov
mov
mov
cmp
dec
push
adc
stos
push
sbb
aam
das
xor
lods
fstpt
xchg
test
xor
shll
pop
stos
aas
lods
cwtl
jb
lret
adc
test
jge
pop
xor
rcrb
fiaddl
mov
test
lahf
idivb
lea
inc
sbb
test
fld
jecxz,pt
mov
mov
or
imul
imul
xor
or
insb
int
pop
in
test
or
add
push
pop
lock
xchg
out
jl
cli
jg
jb
push
imul
cmpsb
daa
jge
in
dec
out
imul
mov
nop
out
mov
mov
push
shll
xor
out
repnz
into
shl
mov
outsb
pop
xor
jae
xlat
cmpsb
and
test
mov
dec
div
pop
and
dec
cmp
in
jbe
pop
cld
sub
enter
pop
xor
aam
sar
add
ds
jmp
js
mov
out
aad
mov
out
idivb
fists
out
sti
jns
in
add
cmp
call
pop
sarl
xor
mov
adc
out
cli
sbbb
aad
pop
cltd
ja
dec
xchg
add
test
pop
inc
icebp
cmp
cli
cltd
jbe
xor
scas
dec
or
and
decb
pop
mov
mov
aad
cmpsl
add
push
test
movsl
adc
clc
rcll
ror
push
popw
push
sar
and
dec
push
cmp
and
pop
push
loopne
push
push
adc
pop
add
lock
out
clc
lock
test
test
push
mov
mov
out
pushf
push
popl
mov
dec
pushf
js
ror
xchg
lcall
and
push
jle
movsb
popa
out
ret
pusha
scas
sub
jnp
or
cwtl
clc
jge
out
cmc
cs
rorl
pop
jle
push
push
test
sbb
test
shr
cmpsl
lock
cltd
add
pop
bnd
push
ds
dec
icebp
mov
fnstcw
pop
out
mov
lea
ret
sbb
mov
pop
cli
stos
push
mov
mov
lahf
inc
mov
in
push
movsb
clc
pop
mov
mov
cli
mov
nop
int3
pop
xchg
adc
cmp
aaa
push
iret
cmp
jb
rol
jl
fsubrs
test
dec
fwait
movsl
xchg
mov
push
mov
pop
test
sub
loopne
pop
push
ja
std
sub
ret
int3
test
push
jge
aam
ds
cmpsb
adc
not
xor
jns
mov
inc
pop
mov
test
sbb
test
es
adc
mov
pop
pop
pop
sub
out
xrelease
mov
cltd
dec
mov
pop
push
dec
dec
mov
or
fs
or
iret
shll
lret
addr16
aas
mov
adc
jecxz
push
pop
outsl
jo
xor
ds
jle
inc
rclb
xchg
dec
and
or
stos
push
call
out
push
or
gs
inc
lea
in
addr16
scas
ja
add
dec
xchg
dec
ds
adc
sub
jl
movsl
scas
ss
gs
dec
sub
jb
test
out
jnp
cmp
inc
mov
cmp
inc
jbe
stc
pop
add
xchg
push
add
pop
aad
testb
andl
int3
push
cs
sub
mov
mov
mov
pop
adc
rcll
pop
mov
mov
and
add
cmpsb
inc
sub
inc
test
lret
aas
sbb
pop
push
rorb
adc
in
test
fildll
je
rcr
test
sti
out
sbb
loope
mov
mov
xor
mov
pop
pop
repnz
adc
mov
jp
test
sbb
add
mov
xor
push
cmp
aas
orl
sub
out
mov
negl
mov
sahf
or
xor
and
xchg
push
aas
sbb
imul
out
mov
add
jae
dec
cmp
push
aam
mov
cmp
push
sbb
push
xor
xlat
jp
clc
div
loopne
pop
cwtl
scas
ja
push
jnp,pt
jle
dec
push
cmp
jne
push
sbb
insl
mov
xor
out
jp
mov
xor
mov
fcoml
dec
pop
dec
out
aas
dec
xchg
jmp
stc
aas
jns
push
mov
es
jge
push
fidivl
bnd
loopne
ss
adcb
xchg
push
rcr
popl
fsub
xchg
push
jp
enter
out
mov
outsb
mov
mov
cmovo
outsl
insb
out
mov
int
data16
pop
sub
and
inc
outsb
mul
std
out
or
and
and
xchg
mov
ret
mul
jb
mov
filds
cmpl
pop
int3
push
insb
test
push
fstpl
push
push
addr16
jl
push
xchg
jp
fmul
sbb
jnp
hlt
mov
jne
push
push
dec
adc
adc
and
and
sbbb
adc
movsb
fildl
aas
xor
nop
sbb
add
cltd
jle
arpl
daa
es
push
aad
mov
lock
loope
push
int
test
scas
xchg
mov
jnp
ret
dec
or
popa
call
pop
xor
adcl
cmpb
or
pop
xor
lahf
fcmovbe
sub
iret
sbb
xchg
leave
lods
mov
jmp
pop
addr16
mov
pop
adcb
loopne
inc
js
testl
sti
or
pop
in
xchg
dec
aam
das
call
inc
cmp
push
call
hlt
lea
scas
cmp
out
mov
imul
fs
or
je
cli
and
lret
cs
push
call
mov
and
add
mov
xchg
sbb
mov
lods
cmp
mov
mov
dec
adc
mov
push
nop
fstpt
popf
test
stc
in
mov
dec
cmpl
lods
lock
mull
and
pop
fmull
and
add
cmp
js
xchg
or
insl
data16
call
xchg
mov
fisubrl
popf
add
int3
push
repnz
adc
pushf
in
jecxz
subl
mov
lods
stos
aas
sub
adc
out
sbb
dec
cmp
mov
cmp
push
push
scas
mov
sbb
mov
sub
inc
js
push
pop
mov
shlb
orb
push
aam
jmp
imul
mov
out
std
cmpsb
inc
arpl
sbb
add
daa
pop
pusha
mov
out
in
inc
arpl
test
rorl
dec
cli
ret
pop
lahf
test
mov
pop
ficoms
adc
mov
sbb
jbe
sub
out
sub
jecxz
xor
mov
inc
and
pop
mov
test
xchg
sub
push
xchg
or
mov
mov
inc
daa
ljmp
repnz
sbb
out
jns
cli
or
xchg
outsb
icebp
cmp
fnstcw
pop
jb
push
inc
arpl
dec
fcompl
es
out
dec
dec
ret
stos
pop
ja
xchg
out
lret
pop
cmpsb
dec
mov
lcall
pop
push
jecxz
lar
pop
fstpt
out
jmp
jns
or
fs
jmp
push
or
mov
jmp
ss
aaa
stc
xor
lods
aam
ds
fdivrs
cmpsl
dec
setnp
int3
in
ja
cs
test
cmp
mov
ljmp
ds
int3
in
out
mov
test
inc
mov
pop
xor
je
and
cmpsl
xchg
pop
out
test
shll
sub
sbb
jle
pop
add
and
dec
sbb
pop
push
orb
mov
or
pop
shrl
and
test
sub
cmp
insb
pop
mov
add
scas
mov
xchg
fsts
cwtl
pop
pop
mov
jl
xchg
cmp
movsb
mov
pop
inc
into
out
fisttpl
inc
cmp
sbb
mov
cmp
xchg
jg
data16
sbb
xor
loopne
sub
and
and
push
cmc
out
ds
shr
lock
push
cltd
jg
push
mov
cmp
arpl
pop
rolb
xchg
cmp
jnp
aaa
scas
insb
and
aaa
js
mov
pop
mov
icebp
mov
test
jb
mov
test
mov
dec
aaa
jnp
jb
inc
adc
js
push
rorl
fisubrl
fs
jl
gs
add
out
adc
nop
gs
roll
mov
adc
push
out
loope
sbb
and
pop
jl
int
ds
scas
cmp
cltd
mov
pop
mov
je
insb
and
pop
jns
fiaddl
add
test
loope
inc
gs
xchg
movb
xchg
lods
fiadds
push
test
dec
cmpsl
ds
int
jno
add
mov
lret
push
adc
inc
test
pop
scas
cwtl
mov
test
push
ds
cmp
or
js
out
push
fcomi
push
sti
ds
lock
fs
loopne
mov
out
pop
pop
cld
aas
sbb
xchg
sub
push
insb
out
scas
ror
mov
dec
xchg
ljmp
cld
lret
dec
fsubrp
out
dec
lret
negl
mulb
div
jmp
push
adc
cltd
jle
xlat
inc
xchg
jg
cmp
dec
jb
mov
pop
mov
out
and
leave
and
or
dec
mov
cmpsb
push
xchg
and
fwait
jb
and
cmp
mov
jge
out
nop
mov
rcll
dec
xchg
or
fcmovbe
imull
andl
pop
movsb
ja
or
push
fwait
ret
lds
cs
movsl
and
push
ficompl
sarl
popf
and
mov
push
incl
frstor
push
jae
adc
sbb
shlb
out
pop
test
xchg
mov
sub
inc
test
inc
mov
test
jbe
aas
adc
mov
dec
cmp
xchg
or
out
pop
adc
addr16
or
or
push
pop
jl
hlt
or
mov
add
push
push
je
dec
leave
out
sub
inc
fsts
sbb
test
ds
in
incb
out
ss
roll
sbb
lea
push
subb
sbb
and
pop
push
das
out
push
sti
je
mov
dec
js
out
pop
push
adc
iret
adc
mov
notb
pop
fidivrl
xchg
jl
ljmp
mov
pop
sbb
stos
adc
test
mov
repnz
mov
inc
out
sarl
mov
les
int3
icebp
adc
add
lock
stc
xor
pop
cmp
push
jo,pt
push
mov
cmp
pusha
mov
out
js
push
pop
and
or
push
ss
out
jecxz
test
addr16
jns
dec
popa
repz
pushf
inc
xor
test
push
cmc
icebp
shll
dec
insb
adc
or
ja
xchg
add
out
mov
es
push
pop
jecxz
and
inc
pop
clc
das
lds
stc
adc
pop
rol
xor
mov
xor
inc
imul
sbb
or
dec
cmp
mov
add
dec
mov
scas
cld
out
xchg
out
test
inc
stos
sub
mov
fwait
test
sahf
push
xchg
jmp
and
adc
iret
das
add
cld
pop
dec
movsb
add
mov
lea
enter
test
and
loop
cmp
frstor
pop
dec
lock
stos
sub
fidivrl
stos
cld
aad
clc
imul
dec
add
pop
or
insb
xchg
mov
dec
dec
cmpsb
repnz
xor
ja
into
cmp
mov
js
cmpsb
in
sbbl
iret
push
fildll
mov
add
mov
cltd
ds
cwtl
jbe
pop
adc
mov
test
jmp
ror
out
mov
repz
int3
push
jmp
push
dec
jb
sbb
test
addr16
aas
out
in
cmp
out
jge
jb
jecxz
lock
inc
pusha
rolb
loopne
scas
nop
sbbl
xor
or
out
out
cld
add
ja
adc
loope
leave
pop
js
mov
sbb
inc
pop
es
cmpsb
jl
mov
mov
mov
push
add
and
xlat
outsb
pop
sub
add
out
popa
mov
and
nop
pop
mov
mov
sub
dec
cmp
sti
test
jg
fadd
fimuls
add
ret
gs
daa
imul
inc
sub
sub
adc
mov
and
sub
sub
ds
pushf
pop
jne
xor
jg
lret
add
sbb
adc
shrb
pop
mov
cmc
test
std
dec
mov
test
pop
inc
in
jbe
test
mov
aas
add
repz
ja
mov
lods
test
inc
insl
ds
pop
les
cmc
cwtl
gs
mov
test
into
adc
jle
mov
push
movsb
in
jmp
and
repz
pop
cmp
inc
pop
xchg
jle
nop
fst
mov
test
roll
jne
jecxz
out
xchg
stc
out
roll
int
mov
addr16
cs
mov
jne
ja
inc
xlat
or
outsl
shlb
mov
mov
stos
pop
pop
push
jecxz
ss
adc
xor
sbb
inc
xlat
lcall
fmull
pop
or
packuswb
pop
inc
inc
cs
mov
inc
and
jbe
out
add
push
jb
arpl
rcll
pop
lock
and
adc
lock
jge
lock
inc
sbb
add
add
cmpsl
cmpsb
or
test
and
inc
add
sbbb
cmp
add
fxch
dec
lahf
mov
inc
and
fdivs
mov
pop
ds
imul
pushf
icebp
jns
or
adc
cmp
inc
xchg
jno
ret
adc
cmpsb
xchg
mov
jnp
test
stc
out
scas
sub
push
out
sbb
xchg
jp
inc
jae
sub
rolb
out
pop
cltd
movmskps
loope
xchg
jb
pop
inc
mov
incb
xor
clc
cmp
ret
pop
out
inc
gs
cltd
xor
mov
js
xor
out
jo
mov
jae
fiadds
inc
xchg
lea
pusha
pop
mov
mov
dec
out
nop
jb
sub
in
cmpsb
testl
and
jle
pop
xor
and
loop
pop
mov
adc
sarl
mov
mul
lds
out
jmp
sbb
adc
out
push
mov
adc
mov
dec
test
stc
push
mov
shl
and
dec
dec
mov
mov
cmp
das
mov
cmp
inc
arpl
mov
inc
mov
fistpl
push
lea
shrb
mov
add
imul
popf
cmp
cmp
mov
aas
and
add
mul
sub
cmp
insl
daa
out
inc
stc
cmp
int
lret
inc
push
pop
fimuls
cmp
stos
sbb
sahf
sbb
int
mov
loopne
js
out
ja
lods
mov
adc
add
xor
out
scas
inc
mov
pusha
or
jl
dec
sbb
lcall
mov
lcall
mov
shrb
gs
je
push
stos
cmp
out
add
popf
cmp
fldl
inc
push
xlat
mov
popf
mov
dec
nop
jno
aaa
mov
sub
loop
ljmp
into
dec
icebp
inc
jnp
xorl
push
inc
aam
dec
adc
out
test
cmp
fsts
cmpl
or
jbe
in
aas
jns
es
jns
pusha
fsubp
cli
mov
and
pop
or
cmp
test
idiv
das
pop
pop
std
push
mov
inc
lods
bound
out
lahf
xchg
lea
sub
decb
sbb
pop
pop
pop
es
out
movsb
out
push
insb
cmc
stos
shlb
cmp
inc
pop
xchg
pop
cltd
test
inc
mov
ds
mov
add
lock
ja
fisttpl
or
out
enter
sbb
dec
xchg
jne
movsl
jb
enter
adc
lahf
enterw
inc
and
flds
inc
mov
cmp
filds
cmp
jb
pop
out
mov
loop
fmul
rclb
inc
sbbb
iret
push
ficoms
dec
sbb
rcl
adc
mov
push
xchg
stos
cmp
add
pop
in
mov
jbe
test
push
mov
jecxz
nop
pop
mov
jae
cmc
orb
add
test
cmpsl
xchg
jne
or
addr16
sar
imul
cmp
nop
es
pop
sbb
pop
pop
xchg
jge
inc
sub
andb
pop
ss
xchg
cld
jbe
push
aad
and
jno
sarb
aas
rcl
rcrb
aad
mov
dec
or
notl
pop
mov
and
pop
xlat
test
js
daa
aas
mov
sbb
dec
mov
mov
push
add
mov
orl
pop
inc
jmp
push
ljmp
jns
lea
fadd
push
jecxz
fnstcw
lret
mov
or
and
mov
loopne
test
lea
ds
or
lock
std
push
xor
test
pop
insb
mov
movsl
cmpsb
inc
dec
invd
mov
and
mov
xor
lods
in
out
jge
cmp
hlt
and
inc
inc
data16
push
ficompl
scas
fs
inc
xrelease
fsts
or
mov
outsl
loop
fidivrl
jns
movsl
lods
ja
std
xchg
mov
stc
std
roll
pushf
lods
lcall
add
adc
loope
cmpsl
adc
dec
cli
inc
pop
jmp
aad
ret
loop
std
stos
fisubrl
and
xchg
shll
dec
fbld
or
or
pop
pop
push
cmp
xor
insl
aad
push
pop
loop
ss
repnz
ret
call
lds
out
and
and
into
pusha
jp
jl
xor
js
push
pop
sbb
repnz
fstpl
inc
aas
lahf
shrb
lods
daa
aaa
lods
cmc
shlb
insl
mov
rorl
push
mov
out
ret
jo
leave
nop
mov
and
and
mov
add
dec
lods
sub
mov
sub
test
ret
lahf
stos
loopne
aas
dec
jg
out
in
inc
out
fwait
movups
lods
fwait
mov
lods
pop
rol
dec
repnz
movsb
cwtl
out
xchg
push
in
add
ss
mov
add
shl
push
call
mov
ret
subb
xchg
xchg
imul
aad
xor
test
test
push
out
push
test
pop
enter
mov
fistps
add
sub
push
add
mov
xor
stos
sub
dec
cmp
inc
mov
and
and
pusha
or
jb
out
idivl
xchg
mov
inc
jmp
imul
jo
mov
cli
cli
push
ds
inc
push
out
cli
inc
add
dec
mov
add
sbbb
mov
sbb
xor
xchg
bnd
jno
pop
jl
enter
aas
repz
mov
test
push
loop
mov
cld
test
mov
flds
out
adc
jb
mov
sbb
in
hlt
shlb
ds
lret
inc
cmp
jne
cmp
mov
inc
xchg
ret
das
mov
mov
pop
sub
ss
inc
inc
in
and
data16
cmp
cmp
ja
out
xchg
call
pusha
push
xlat
stc
pop
push
mov
push
and
jns
xchg
sub
loopne
gs
rcrb
test
in
jg
mov
imul
fnstcw
rolb
aad
xrelease
ret
add
leave
push
scas
and
jo
xrelease
xchg
jne
sub
lock
decb
pop
fadds
jns
sub
out
sub
mov
mov
nop
and
out
das
pop
add
in
xchg
pop
mov
cmp
repnz
leave
adc
divl
movsb
mov
nopl
pop
sahf
jb
test
cli
mov
push
pop
and
pop
movsb
ds
lock
jecxz
ds
gs
or
jle
loope
lods
add
in
mov
aas
sub
dec
cld
add
pop
sub
xor
int3
decl
cmpsb
and
pop
into
call
xor
pop
loopne
test
mov
dec
pop
int3
push
jmp
int
out
pop
mov
adc
sbb
xor
imul
movsb
movsb
pop
test
fbstp
inc
sahf
push
cwtl
subb
sub
inc
push
inc
test
mov
mov
dec
cmp
push
dec
lods
xchg
mov
and
hlt
inc
ds
cmp
out
jge
add
cld
fucomp
mov
ljmp
fs
movb
mov
jbe
in
jle
clc
out
xor
jmp
xchg
push
push
inc
stos
pop
adcl
test
repnz
subb
rorb
es
jae
pop
lods
dec
jl
xchg
or
filds
cs
dec
adc
mov
rcll
test
mov
aad
test
arpl
repz
inc
test
addb
fs
ret
jb
mov
aad
nop
dec
xchg
out
jns
and
aam
mov
lods
push
data16
fwait
inc
jl
fimuls
sub
add
arpl
rcll
add
sti
push
xlat
stos
pop
outsl
dec
repnz
out
fcoml
xor
cmp
push
in
sub
leave
jmp
xor
mov
xchg
leave
or
ds
scas
xchg
cwtl
hlt
gs
pop
mov
push
pop
mov
pop
shlb
jle
test
mov
aad
fsub
mov
xchg
shl
xlat
lret
push
inc
loopne
hlt
push
inc
jle
mov
fdivrs
adc
add
decb
lahf
test
jns
sub
dec
lret
enter
sub
mov
adc
sbb
xor
mov
mov
out
int3
dec
shll
rol
mov
dec
fidivrl
cld
adc
pop
xor
push
pop
push
icebp
aaa
iret
mov
pop
popf
outsl
cli
fdivs
mov
aas
sti
and
push
xchg
mov
loopne
bound
add
aas
into
movsl
mov
jb
aas
jnp
cwtl
pop
imul
fcmovb
pop
xchg
adc
pop
stos
or
call
mov
mov
inc
jnp,pt
jno
gs
repz
outsb
loopne
mov
lcall
daa
sbb
push
or
imul
sbb
or
arpl
cmpsb
pop
mov
imul
fisttps
mov
mov
fsqrt
call
repz
cmpsb
aam
xchg
add
adc
cli
pushf
fwait
mov
fdiv
pop
pop
and
sub
xor
aas
dec
xchg
cli
xor
out
inc
adc
cmp
mov
pop
inc
xchg
pop
or
inc
sub
cmp
mov
jb
xor
cld
in
lods
and
inc
xchg
das
push
jcxz
inc
sbb
and
push
mov
shrb
in
push
aaa
mov
and
and
sbb
jmp
fs
cmp
sbb
xchg
add
lock
bound
cmpsb
sbb
push
aas
leave
mov
mov
popf
jl
xor
or
in
xchg
sbb
test
frstor
jo
repz
inc
ds
pop
mov
xchg
cs
les
mov
jbe
out
mov
jo
sbb
jae
aas
jnp
jne
movb
mov
add
cmp
lods
xchg
adc
cmpsl
cmc
xor
dec
fisttpl
imul
out
bound
mov
lods
fists
or
out
or
fs
clc
imul
stos
mov
dec
add
sub
fidivrl
pusha
pop
test
cmp
test
aam
cmpl
adc
loope
mov
mov
pop
cs
addb
or
movsb
pop
ret
pop
pop
inc
sbb
pop
insl
pop
cmpsb
enter
pop
sbb
sub
xor
xchg
dec
mov
or
fsubrl
push
jle
jmp
jae
jl
lahf
pusha
movsb
push
push
movsb
xor
pop
xchg
ja
pop
cmp
mov
push
out
mov
enter
xchg
loopne
out
adc
mov
jno
flds
jae
test
arpl
adc
outsl
xchg
daa
cmp
fcompl
pop
movl
out
stos
mov
cmpsb
stos
mov
loop
mov
int3
in
scas
js
vmovups
inc
cmc
pop
push
jmp
pop
mov
daa
lods
xor
in
roll
sub
mov
cmp
or
sbb
xchg
inc
mov
mov
clc
dec
ret
fsubr
aam
stos
cli
outsl
mov
and
aas
shll
pop
out
inc
and
lret
pop
outsl
fxch
sti
ja
sbb
rcl
mov
sub
sub
fwait
jle
mov
loopne
movsb
or
inc
movsb
pop
ds
dec
insl
mov
add
push
test
inc
rcrl
ret
mov
push
pop
mov
dec
inc
inc
cld
or
dec
repnz
je
and
push
imul
push
pop
mov
mov
jb
inc
mov
mov
dec
cmc
fwait
or
inc
pop
sbb
mov
mov
ds
xchg
in
jb
cmpsb
add
mov
aas
inc
xor
loopne
pop
movsb
sub
mov
popf
mov
aam
movsb
mov
dec
repz
xchg
inc
je
bound
adc
gs
into
in
mov
out
cmpb
inc
xchg
insb
mov
xchg
jle
inc
fwait
cmpsb
popa
mov
out
push
push
in
pop
pop
and
add
cmpsb
popa
daa
test
and
iret
lcall
scas
push
out
sbb
cmp
sahf
fs
loopne
mov
mov
jb
shlb
call
in
movsl
test
jbe
sarl
push
std
adc
ss
jge
jge
fildll
dec
push
pop
in
mov
cwtl
enter
test
imull
sbb
ret
and
int3
inc
sbb
jp
push
inc
loope
pop
dec
fldenv
popl
aad
imul
and
sub
test
sub
ds
ds
or
push
and
fcmove
inc
outsl
cmc
push
js
arpl
xchg
adcl
mov
stc
sbb
mull
mov
and
sbbb
push
inc
push
xor
sub
jbe
ret
es
enter
in
movsb
inc
xchg
jb
cmp
lahf
cwtl
std
insb
mov
push
pop
lea
push
pop
add
sbb
call
push
pop
test
push
inc
cmc
scas
push
insl
adc
jnp
out
mov
pop
bound
mov
stos
test
daa
jns
xor
pusha
jne
xchg
shrb
jle
jg
hlt
cld
imul
lret
sbb
jmp
xor
cltd
loopne
jo
outsl
inc
xor
call
pop
out
into
loopne
sarb
xor
daa
and
sbb
movsb
sub
stos
out
fs
pop
stc
inc
je
push
lds
pop
sahf
aaa
cmp
and
fdivrl
dec
les
xchg
mov
scas
and
dec
mov
pop
pop
jne
mov
pop
inc
dec
adc
insb
test
ds
sub
out
xor
pop
fsubl
out
mov
cmc
imul
jae
sarl
inc
cli
lcall
imul
mov
and
push
inc
cld
addl
mov
cs
repnz
pop
sbb
sub
sbb
gs
sub
pop
les
add
pop
sub
xor
dec
pop
mov
or
or
insb
leave
test
xchg
pop
adc
testl
xchg
call
addb
push
sbb
jle
pop
outsl
in
fs
cltd
movsb
imul
or
jp
sub
faddl
jp
push
test
dec
push
lods
dec
jns
fidivs
fldcw
shld
jle
test
adc
aas
sub
jmp
dec
cmpsl
leave
out
add
scas
ds
mov
adc
push
push
inc
jb
sub
cmc
loopne
lcall
sub
add
lcall
fwait
ds
icebp
inc
test
sahf
cwtl
mov
cmp
shlb
or
stos
imul
insb
inc
out
jo
ja
push
lods
mov
add
dec
mov
enter
test
xchg
mov
mov
mov
add
push
mov
xor
pusha
push
cs
jge
or
sbb
fmuls
push
sbb
and
setb
imul
push
fstps
xchg
addr16
inc
pop
out
push
sbb
fldenv
fimuls
pop
faddl
push
outsb
mov
mov
adc
fdivr
pop
int
xchg
cmpsb
fcmove
notl
fldenv
imul
test
and
aas
inc
dec
popf
or
fwait
inc
cmpsb
cltd
clc
mov
mov
jno
js
test
sahf
imul
in
pop
int
dec
adc
test
adc
or
nop
out
xchg
inc
sbb
pusha
pushf
push
lcall
es
jae
stos
cltd
or
daa
xchg
iret
sahf
dec
sarl
test
bound
mov
repz
iret
andl
and
sub
lock
xchg
sub
push
jmp
or
test
xchg
mov
decl
mov
xchg
test
fdivrs
std
pop
inc
xlat
adc
je
jge
test
inc
test
aas
dec
dec
or
cmp
adc
out
fadd
and
call
aas
leave
xchg
mov
out
mov
cmp
mov
aas
imul
das
out
pop
imul
adcb
xchg
push
pop
jb
sbb
sub
mov
test
mov
cli
or
dec
pop
outsl
add
cs
pop
pop
cmc
lds
pushl
in
sub
inc
adc
mov
mov
int3
out
jae
arpl
and
mov
sub
xchg
leave
out
out
mov
adc
sub
xor
lret
sub
in
orl
aam
fsts
fnstsw
fldt
dec
pop
and
call
imul
addr16
push
out
push
test
or
ds
inc
mov
mov
rorb
dec
dec
cwtl
es
test
enter
bound
mov
pop
sbb
fstpt
insl
xchg
or
and
dec
push
clc
mov
push
shrl
addr16
sub
jbe
pop
bound
push
sbb
ror
sbb
test
das
mov
xor
sub
or
sub
xchg
fisubl
notl
xlat
lahf
lods
sbb
test
out
pop
stos
push
ret
out
inc
pop
cwtl
add
scas
mov
mov
fwait
mov
fistl
mov
mov
push
mov
mov
lods
sub
push
pop
movsb
push
jbe
jmp
push
inc
dec
jecxz
mov
aam
scas
pop
mov
mov
fdivl
sar
into
in
pop
fsubrl
aaa
or
test
lret
mov
add
out
cmpsb
shll
lods
add
arpl
fs
out
loop
shrb
fdivs
nop
mov
inc
xor
push
hlt
add
and
cld
test
add
faddl
cmp
clc
pop
dec
and
xchg
test
addr16
jno
push
pop
test
gs
test
inc
xchg
cmp
test
xlat
add
jb
test
dec
repnz
add
enter
mov
xchg
add
push
lods
icebp
sub
and
ret
fwait
add
arpl
xor
mov
fwait
jno
insl
pop
imul
test
adc
jne
cmp
lahf
push
mov
pop
jae
pop
repz
jo
fsts
adc
mov
test
leave
cmpsl
inc
jns
imul
popf
pop
mov
test
adc
push
jge
sbb
shl
lods
xor
push
loope
ds
idiv
aaa
loope
xchg
je
mov
ds
dec
jle
or
sbb
repz
mov
or
cli
add
icebp
pushf
test
xlat
jg
shl
data16
jecxz
xchg
mov
dec
pop
lock
fistpl
out
xor
cmpsb
push
in
pusha
pop
addb
mov
mov
dec
jle
adc
sti
adc
rorb
jne
adc
das
inc
pop
std
mov
and
loopne
dec
pop
push
popf
icebp
lret
xor
out
dec
negb
int
aas
fildll
or
mov
test
ja
inc
push
or
sbb
hlt
and
popl
les
leave
fistpl
dec
lahf
std
pusha
inc
push
or
and
dec
hlt
insb
pop
push
add
loopne
sub
out
cmp
xchg
push
inc
stos
mov
jecxz
push
jns
lret
imul
pop
push
push
or
popf
pop
sub
movsb
cmpsl
pop
jnp
ljmp
call
xor
mov
mov
sbbb
inc
add
test
mov
mov
shl
push
xchg
push
lds
shl
push
jmp
add
idiv
and
dec
jle
rorb
jle
add
adc
cmp
sbb
ficoml
jae
xor
pop
fistpll
pop
call
sbb
out
into
add
divb
sub
fsubl
lahf
scas
or
mov
push
int
pop
push
pop
pusha
jo
daa
fidivs
nop
rcll
movsb
sarl
daa
mov
jo
add
and
xor
shll
inc
lds
pop
mov
cwtl
pop
jmp
pop
daa
addr16
dec
adc
insb
mov
shrl
aas
mov
inc
scas
cltd
loopne
push
inc
dec
cs
iret
ret
and
jg
test
or
fidivrs
popa
ds
sti
flds
mulb
iret
cmc
mov
test
lahf
adc
sahf
cmpsb
cs
xchg
inc
mov
fwait
sbb
loope
adc
lcall
push
pop
pop
aas
xchg
ret
aad
mov
sbb
sub
fimuls
mov
mov
mov
inc
xchg
out
rolb
test
hlt
jo
in
jo
cmp
dec
push
dec
dec
mov
fnstsw
xchg
fildll
aas
pop
mov
mov
repnz
jns
mov
cltd
out
pop
pushf
and
push
push
ss
mov
das
xchg
or
inc
jge
sub
mov
pop
cmpb
insb
test
or
pusha
out
ljmp
push
pop
data16
loopne
cwtl
pushf
cs
test
inc
call
xchg
out
mov
jg
pop
pusha
inc
cmp
out
mov
daa
adc
pusha
sti
fs
push
out
xchg
jo
and
movsb
test
xor
pop
popf
lret
xchg
sub
lahf
shlb
call
xor
fcmove
int3
frstor
jae
fcmovbe
mov
movsl
xor
cmpsb
pop
lock
pop
mov
outsb
lods
xchg
andb
test
fiaddl
adc
mov
push
xchg
jmp
jb,pn
addr16
xchg
addl
jle
notb
daa
hlt
std
test
or
clc
test
out
iret
mov
rcr
loopne
dec
out
cmpsl
popf
test
out
mov
jbe
rcrl
pop
or
fsubr
dec
jbe
orw
imul
cltd
pop
cmpsb
add
stc
fstpt
and
fldl
pop
rclb
aas
or
jnp
movsl
out
in
cs
xchg
imul
out
mov
xor
push
call
fiadds
loope
out
mov
jmp
cs
lods
test
cmpsb
das
cmp
ds
outsb
pop
out
pop
sbbl
addl
add
loope
jge
ret
cwtl
jo
cmpsb
lret
stc
pop
data16
gs
pusha
cmpsl
inc
pop
push
gs
and
or
js
insl
loope
pop
cmp
xchg
pop
negl
pop
mov
pop
add
out
or
es
jno
scas
fldcw
xchg
or
out
out
cmpsl
xchg
fs
push
xchg
sub
int3
xchg
cmp
ja
xor
xchg
in
jge
out
cwtl
sub
pop
ss
xchg
push
rol
outsb
ds
pop
and
mov
pushf
xchg
hlt
xchg
add
mov
out
cmc
mov
mov
mov
insb
sbbb
push
cld
jmp
les
jbe
add
shrl
test
sub
ds
cmp
roll
out
jl
cmpsl
daa
ss
push
adc
add
pop
test
test
sub
jecxz
mov
dec
add
xchg
mov
stos
fwait
inc
cmp
jns
mov
and
jmp
jmp
ret
mov
sbb
cmp
mov
adc
push
fnstenv
std
clc
adc
jg
push
pop
mov
push
and
inc
divb
dec
mov
ss
xor
lds
ja
test
cmp
rorl
shl
add
fsub
sub
out
pusha
sub
dec
sbb
pop
lock
mov
adc
adc
add
iret
fadd
ljmp
add
mov
mov
fdivrl
mov
mov
jmp
mov
ror
daa
jb
cmpsl
orl
jmp
iret
and
push
in
pop
jecxz
xor
shlb
sub
add
out
imul
xchg
and
out
movsb
add
jb
jb
xchg
lock
lcall
push
negb
inc
pop
testl
out
jo
push
movsl
xchg
test
pop
pop
mov
jl
cld
pop
mov
es
lcall
fsubl
mov
out
push
out
adc
fdivl
pop
add
mov
push
ja
test
jmp
movsb
jmp
sub
pushf
out
mov
pop
aas
adc
jae
sahf
or
mov
leave
pop
sub
jns
ss
jle
sti
inc
mov
push
loopne
adc
aam
stos
fiaddl
das
add
decl
pop
or
movb
add
inc
mov
jae
leave
and
jg
mov
cmp
insb
mov
cmc
movsb
sbb
or
ds
inc
scas
idivb
xchg
test
ret
enter
shll
nop
aas
add
xchg
out
ljmp
popf
loope
cmp
in
stos
jl
sub
les
inc
cltd
hlt
filds
ds
push
aam
mov
mov
rcll
xchg
mov
pop
stc
pop
pusha
ja
dec
enter
inc
test
sub
ret
test
add
les
out
nop
movsb
outsb
clc
xor
popf
bnd
pop
movsb
jp
test
addb
fisttpl
call
push
xor
aas
xchg
add
jmp
adc
insb
mov
xor
jb
pop
inc
or
sbb
addl
rcrb
fildl
pop
mov
sarb
mov
out
dec
xchg
and
pop
inc
add
cs
fadds
std
inc
out
cmp
fcoml
xor
and
das
mov
adc
sub
push
orl
cmc
mov
push
pop
lods
jnp
jp
rorb
xor
sbb
fyl2xp1
addr16
pop
pusha
hlt
loopne
shrl
xchg
test
fisttps
pop
inc
add
inc
out
sbb
jno
sbb
push
pop
xchg
pop
add
sbb
cmpl
jp
cmpsl
scas
jle
sbb
sbb
or
pop
loop
test
sub
test
dec
je
mov
push
jle
hlt
loop
movsb
pusha
ljmp
aaa
out
or
bswap
cmovle
mov
lret
push
mov
mov
test
pop
pop
stos
ret
test
clc
inc
dec
jg
inc
leave
adc
test
in
add
fwait
test
pop
push
data16
std
shrd
cmp
xchg
movq
mov
adc
adc
mov
addr16
test
out
jae
cmp
cmp
jle
mov
pop
movsb
cmp
and
pop
push
sub
sub
cmp
repnz
jno
call
fnstenv
hlt
in
mov
adc
pushf
cmc
pop
out
mov
mov
pop
lcall
out
jnp
aam
mov
mov
pop
push
xchg
xchg
ret
std
cld
popf
add
and
lcall
ljmp
movsb
cmp
fidivl
pop
scas
jnp
jl
repnz
xchg
lea
mov
mov
jb
ljmp
sti
push
iret
xor
mov
lcall
out
add
mov
mov
cld
cld
in
inc
fdivrl
mov
test
sahf
xchg
enter
cmpsl
inc
sbb
cltd
adc
add
pop
ret
dec
sub
addr16
pop
and
xlat
pop
gs
or
out
cmp
pop
jo
jns
mov
test
test
in
mov
mov
dec
xchg
jge
lock
das
ret
mov
cld
pop
push
in
cmp
xchg
cli
sbb
push
xchg
inc
add
adcl
adc
pop
outsb
xchg
inc
and
stos
fdivrs
and
xchg
into
out
cld
push
push
jle
pusha
inc
sbb
inc
fidivrs
push
push
es
sbb
push
push
popf
fisubrs
adc
cmp
or
xor
das
push
sti
adc
ljmp
sbb
movsb
sub
in
jo
fcmovnu
jne
xchg
imul
or
pusha
xor
or
test
and
mov
jecxz
adc
stos
mov
dec
cmp
daa
ljmp
cmp
repz
mov
pop
lods
scas
sti
cmpb
push
test
dec
les
pop
filds
das
mov
scas
lahf
out
cmc
sbb
pop
outsl
test
and
xor
xchg
jg
ret
inc
push
jns
cmp
cltd
jbe
ds
jmp
xchg
jnp
mov
int
mov
mov
test
aas
mov
lea
push
js
mov
lahf
or
je
cli
pop
cmpsl
jmp
iret
out
adc
addl
and
stos
movsl
pop
inc
std
pop
xor
arpl
xchg
nop
push
and
sbb
aaa
psubw
jl
add
pop
mov
xchg
pop
fdivrl
out
leave
cmc
xor
or
aas
push
out
pop
rclb
mov
test
pop
pop
jns
push
dec
es
push
test
xchg
sub
icebp
adc
xor
loope
mov
into
stos
mov
mov
or
addr16
das
add
mov
cmp
mov
xchg
ds
cli
lret
jmp
outsb
cwtl
xor
cmpsl
gs
in
test
lahf
out
aad
xor
dec
rcrb
fdivl
test
push
iret
pop
aas
mov
in
inc
fsubr
adc
and
fadds
int
pop
adc
mov
xchg
push
dec
pop
test
popf
int3
cmpsl
ds
or
call
jbe
xchg
jecxz
mov
aas
jg
fdivrl
ret
imul
lret
test
clc
fisttpl
fisubs
lcall
lea
push
push
out
fistpll
dec
dec
and
jle
aas
lret
iret
sti
fucomip
and
jmp
inc
cmp
pusha
xchg
movsl
ds
pushf
aas
mov
in
aaa
lahf
lcall
loop
ljmp
sbb
pop
out
aam
jns
sti
mov
push
cltd
sub
add
lret
sbb
test
pop
push
jne
and
lcall
pop
mov
xor
dec
mov
mov
xor
pop
push
and
test
mov
std
jl
pop
xorb
push
data16
stc
mov
jbe
pop
fs
dec
pop
cltd
lock
xor
adc
xchg
pop
xchg
pop
pusha
mov
test
or
sub
jbe
mov
insb
add
mov
dec
das
fidivrl
sub
fstpt
pop
sahf
push
addr16
push
or
jns
mov
xlat
xor
pop
repnz
add
push
cmc
nop
in
and
and
bound
je
adc
jmp
pusha
jns
add
arpl
test
rorl
fs
pop
xor
xlat
iret
orb
test
sub
pushf
sub
test
push
icebp
test
loope
push
pop
push
cltd
dec
call
stos
cmp
push
sti
sub
lods
subb
lods
mov
aas
or
mov
xchg
nop
cmpl
in
loope
aas
das
mov
nop
jae
mov
aas
or
movsl
rcl
mov
pop
cld
push
mov
out
jns
divl
test
xor
or
dec
and
gs
sub
fs
fwait
ds
mov
push
ss
incb
daa
push
dec
adc
out
cmpb
mov
out
std
aas
add
dec
and
lahf
xchg
lods
push
and
mov
sub
arpl
mov
test
pop
in
inc
push
sbb
jne
inc
pop
icebp
fsubr
mov
enter
test
mov
xchg
push
cld
ret
test
mov
mov
xor
ljmp
sub
push
lret
aas
das
jle
pop
cmc
jne
stos
in
out
add
mov
inc
stos
mov
sti
stc
xchg
cmpl
push
sahf
out
out
lret
pop
in
push
insb
loop
mov
jnp
jmp
push
mov
mov
stos
and
dec
leave
dec
adc
mov
sbbb
push
add
xor
cmpsb
js
pop
aas
mov
fwait
xor
out
out
rclb
xor
rcll
cmp
out
mov
jne
pop
les
ja
mov
cmp
das
mov
nop
add
je
jecxz
pop
adc
add
test
ret
pop
aas
ja
fnstcw
scas
cmp
loop
mov
pusha
dec
movsl
call
pop
sub
out
add
test
fbstp
xchg
mov
fisubrl
mov
lock
mov
inc
mulb
cmp
es
cwtl
mov
iret
pusha
mov
push
push
orb
fidivrl
cmp
call
sahf
daa
ja
loope
mov
outsb
je
and
sbb
negl
cmp
cwtl
cmp
cmp
test
jno
je
test
ret
loope
mov
out
fisubrs
stc
fucom
scas
jne
repnz
mull
rolb
dec
movsb
outsb
push
pop
mov
repz
pushl
push
lret
popa
cld
xor
test
jg
dec
popa
xchg
sub
in
xchg
lds
sub
test
push
sarl
aad
push
cmp
mov
loope
sub
dec
jge
les
mov
nop
lret
out
inc
ljmp
imul
sbb
nop
adc
mov
or
push
add
hlt
cmp
sub
mov
xchg
ret
insb
xchg
aas
imull
test
pop
fldcw
out
jae
inc
test
sub
mov
in
jle
mov
aas
mov
fstp
ss
aad
sub
xor
cmp
pop
mov
adc
jno
aas
xchg
mov
add
stc
scas
lds
fsubrl
adc
mov
mov
xor
xor
pop
push
push
dec
push
aas
adc
adcl
jb
xchg
push
fucomp
fidivl
out
out
and
xchg
stos
dec
stos
out
and
frstor
into
lods
push
arpl
rcr
and
repnz
xchg
int
sti
dec
push
pop
and
jl
aas
sub
sub
push
xor
pop
insb
hlt
add
pop
pop
pop
xchg
enter
es
das
out
ret
out
cmp
stc
mov
push
out
pop
xchg
pop
je
icebp
lret
inc
imul
pop
out
xor
fstpl
xlat
faddl
icebp
mov
xchg
mov
fcompl
out
add
out
adc
int
pop
stos
cmpsb
or
in
inc
mov
test
lds
and
mov
lret
or
test
int3
bound
lcall
test
pop
into
inc
inc
das
aas
mov
ljmp
into
aaa
and
cltd
sub
nop
sub
pusha
pop
jg
into
cli
ss
xchg
aas
dec
loopne
rcl
mov
mov
scas
pop
xchg
cltd
pusha
fistl
je
pop
pop
mov
sahf
mov
fists
and
sub
cmp
fildl
lahf
inc
or
add
dec
test
cwtl
pop
ds
cmp
aad
aas
ljmp
cmc
xchg
repz
jb
inc
add
ss
test
rclb
loopne
add
sbb
jns
aaa
xor
fdivrl
andl
and
jnp
cmc
jle
xchg
mov
add
and
push
in
ja
mov
call
jno
xor
mov
mov
pop
dec
call
xor
scas
xchg
subb
pop
dec
add
int
push
mov
les
roll
xchg
sbb
xchg
sbb
les
sbb
lret
sarl
loop
dec
addl
fisubl
ficoms
mov
ficomps
gs
ds
nop
inc
inc
fisubrl
adc
lock
sub
pop
pop
in
aas
or
sbb
sbb
fdivrl
sub
mov
inc
xor
stc
pop
and
adc
out
push
addr16
loop
lcall
ljmp
mov
sub
fstpl
dec
subb
jge
cwtl
jmp
stc
cwtl
and
push
je
mov
inc
insl
lods
mov
jecxz
test
inc
shrl
in
mov
adc
pop
xchg
outsb
cmp
push
sahf
jge
loopne
popf
jl
dec
pop
jo
arpl
movsb
xchg
xor
repnz
xor
test
add
lcall
test
xchg
xor
mov
insl
jns
lods
out
dec
adc
inc
add
inc
aas
mov
adc
orl
xchg
pop
cld
std
cmp
bound
push
icebp
push
adc
hlt
test
lahf
call
sub
rcr
cmc
jl
sub
mov
xchg
pusha
icebp
mov
push
xor
lds
xchg
or
or
dec
loope
cltd
aad
push
in
ja,pn
ja
outsb
push
mov
and
mov
push
jns
cmp
push
mov
fadds
sbb
mov
popa
insb
ret
outsb
test
mov
rcrl
xchg
sub
rolb
loopne
and
or
xor
test
adc
jl
and
into
sbb
sahf
push
insl
test
fbld
fwait
out
and
jno
std
mov
cmp
rorl
aas
pop
cld
imul
push
inc
lahf
shrb
cmp
test
jae
call
sub
lcall
mov
aas
cmc
add
sub
lods
inc
int3
and
xchg
mov
fcmovnu
push
xor
xlat
and
add
pushf
xchg
call
mov
sub
je
pop
inc
adc
jb
add
dec
pop
xor
es
fidivrl
call
add
and
test
dec
lds
inc
xchg
mov
mulb
loop
call
inc
fistl
mov
dec
mov
add
repnz
and
std
adc
mov
xchg
xor
cmpsl
popa
jae
push
pop
jo
ss
mov
mov
push
movsb
aam
loope
ret
add
add
lods
xchg
add
sub
add
xchg
add
ficoms
add
add
add
hlt
xchg
add
rclb
add
jle
add
mov
add
xchg
xchg
add
jo
add
stos
xchg
add
les
add
push
add
or
add
xchg
add
pushf
xchg
add
pushf
xchg
add
notb
add
xchg
add
bound
add
add
mov
add
ret
add
add
ficoml
add
add
cmp
add
push
xchg
add
add
add
sbb
add
xchg
xchg
add
ficoml
add
mov
cltd
add
jbe
add
push
add
cmp
add
cwtd
add
push
xchg
add
cmp
add
pop
cwtl
add
push
cwtl
add
scas
xchg
add
mov
xchg
add
stos
cltd
add
ss
add
ficoml
add
xchg
cltd
add
push
xchg
add
xchg
add
xor
add
aam
add
xchg
lcall
push
cltd
add
loopne
add
into
cltd
add
jl
add
adc
add
je
add
xchg
add
cli
cwtl
add
xchg
cwtl
add
lock
add
sbb
add
add
add
ficompl
add
popf
add
adc
add
rcrb
add
lock
xor
add
pusha
fwait
add
movsb
pushf
add
fwait
add
adc
add
insb
pushf
add
pusha
pushf
add
lods
pushf
add
in
add
ret
add
add
movsb
fwait
add
sbbb
add
pushf
add
mov
add
push
pushf
add
push
fwait
add
ficomps
add
jo
add
call
mov
add
xor
add
ss
add
inc
sahf
add
enter
cwtl
lahf
add
adc
add
inc
lahf
add
movsb
sahf
add
push
sahf
add
repnz
add
mov
add
mov
add
mov
sahf
add
cmp
add
ficompl
add
ficomps
add
mov
add
cmp
add
fs
add
mov
add
es
add
js
add
in
add
sahf
add
test
add
adc
add
xchg
popf
add
hlt
sahf
add
sbb
add
push
add
xor
add
movsb
mov
add
fsubl
add
scas
mov
add
jl
add
andb
add
add
xchg
mov
add
insb
mov
add
int3
mov
add
mov
mov
add
dec
mov
add
cwtl
mov
add
mov
add
mov
add
ljmp
add
mov
add
push
mov
add
mov
add
add
add
mov
add
push
mov
add
call
mov
add
lods
movsl
add
stos
movsb
add
sub
add
add
and
add
cld
mov
add
mov
add
out
mov
add
mov
add
movsl
add
pop
mov
add
int3
movsl
add
stos
mov
add
inc
mov
add
fsubl
add
movsb
add
ret
add
mov
add
movsb
add
ret
add
movsb
add
adc
add
movsb
add
add
add
pusha
cmpsl
add
dec
cmpsl
add
loop
add
dec
test
add
test
add
cmpsl
add
pop
test
add
cmpsl
add
jp
add
push
test
add
add
cmpsb
add
push
cmpsb
add
lret
add
add
cmpsb
add
test
add
xchg
test
add
test
add
add
xchg
cmpsl
add
jb
add
insb
test
add
add
cmpsb
cmpsb
add
mov
cmpsl
add
int3
test
add
cmpsb
add
fsubs
add
mov
add
sbb
add
repnz
add
test
add
add
add
test
add
push
mov
sub
push
push
call
add
push
call
add
push
push
call
add
push
push
push
push
push
push
call
add
push
push
call
add
push
mov
push
push
push
push
call
add
push
push
call
add
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
xor
xor
push
call
add
call
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
sub
push
call
add
push
push
push
call
add
sub
add
push
push
push
push
call
add
push
push
push
call
add
call
push
push
push
push
push
call
add
add
push
push
push
call
add
call
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
call
push
push
push
push
call
add
call
push
call
add
push
push
call
add
push
call
add
push
call
add
cmp
je
mov
push
push
push
push
push
call
add
push
call
add
mov
push
push
call
add
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
call
add
push
call
add
xor
add
push
call
add
mov
push
push
call
add
push
push
push
push
call
add
sub
push
push
push
call
add
mov
test
je
sub
mov
cmp
jne
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
sub
push
push
push
push
call
add
sub
call
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
call
push
push
push
push
push
call
add
push
push
push
push
push
call
add
sub
call
push
push
push
push
push
call
add
cmp
je
push
push
push
push
call
add
or
push
push
push
call
add
add
sub
push
push
call
add
add
mov
call
push
push
push
call
add
call
push
push
call
add
or
push
push
push
push
call
add
push
call
add
mov
push
push
push
push
call
add
push
push
push
push
push
call
add
and
mov
push
push
push
push
call
add
sub
push
push
push
push
push
call
add
call
call
mov
mov
cmp
je
push
push
call
add
mov
push
call
add
add
cmp
jne
xor
mov
and
add
push
push
push
push
call
add
push
call
add
sub
test
jne
push
push
push
call
add
call
cmp
je
mov
mov
add
mov
sub
add
mov
push
push
push
call
add
push
push
call
add
call
mov
sub
and
test
je
mov
cmp
je
mov
cmp
je
mov
sub
sub
xor
cmp
je
mov
add
mov
cmp
je
mov
cmp
je
add
sub
cmp
jne
or
cmp
je
xor
mov
add
add
sub
cmp
je
mov
cmp
je
add
mov
add
add
add
and
mov
and
and
cmp
jne
mov
mov
test
jne
mov
and
sub
mov
sub
sub
sub
sub
and
and
or
sub
cmp
jne
cmp
je
cmp
je
mov
mov
sub
and
add
add
add
add
mov
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
call
test
jne
xor
mov
add
add
add
sub
sub
add
cmp
je
push
push
push
push
call
add
mov
push
push
call
add
mov
sub
add
and
mov
call
push
push
push
push
call
add
push
push
push
push
push
call
add
and
add
add
mov
mov
call
push
call
add
push
push
push
push
push
call
add
sub
push
push
push
push
call
add
sub
push
push
push
push
push
call
add
xor
mov
mov
and
cmp
jne
xor
sub
mov
cmp
jne
and
and
sub
cmp
je
mov
sub
cmp
jne
mov
mov
sub
mov
sub
sub
sub
sub
mov
mov
add
cmp
jne
sub
mov
cmp
jne
mov
sub
mov
and
mov
add
cmp
je
or
sub
add
mov
add
or
cmp
je
and
xor
mov
sub
mov
or
add
xor
add
add
sub
cmp
je
mov
and
add
xor
cmp
jne
mov
mov
sub
sub
sub
mov
xor
or
xor
or
add
push
push
push
push
call
add
push
push
call
add
push
call
add
push
push
push
call
add
mov
push
call
add
push
push
push
push
push
call
add
push
call
add
and
mov
push
push
push
push
push
call
add
and
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
push
push
push
push
call
add
and
push
call
add
call
add
and
call
mov
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
push
push
push
push
call
add
push
call
add
or
sub
add
push
call
add
xor
push
push
call
add
mov
push
push
push
push
push
call
add
xor
sub
push
push
call
add
push
call
add
push
push
call
add
sub
push
call
add
mov
push
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
add
call
cmp
jne
add
cmp
jne
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
add
push
push
push
push
call
add
cmp
jne
push
push
call
add
mov
push
push
push
push
call
add
push
push
push
push
call
add
sub
cmp
je
mov
push
call
add
push
call
add
push
push
push
call
add
push
push
push
push
call
add
call
mov
sub
mov
mov
sub
push
call
add
sub
cmp
je
push
push
push
push
call
add
and
cmp
je
add
cmp
je
cmp
jne
push
push
call
add
cmp
je
push
call
add
push
push
push
push
push
call
add
mov
and
add
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
mov
push
push
push
push
push
call
add
push
push
push
push
call
add
cmp
je
mov
xor
push
push
call
add
sub
or
push
push
call
add
push
call
add
mov
push
push
push
push
push
call
add
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
call
push
push
call
add
cmp
je
add
add
push
call
add
push
call
add
push
push
push
call
add
add
push
push
push
push
call
add
lea
xor
add
add
mov
cmp
je
sub
cmp
je
mov
mov
cmp
je
mov
and
cmp
jne
mov
and
add
add
cmp
je
cmp
je
mov
mov
sub
add
add
xor
cmp
je
cmp
je
cmp
jne
add
add
mov
mov
sub
sub
sub
sub
push
call
push
push
push
push
push
push
call
add
push
call
add
call
call
cmp
je
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
or
shr
push
push
push
call
add
push
push
call
add
cmp
jne
and
xor
push
push
push
push
call
add
push
call
add
mov
mov
cmp
je
mov
mov
cmp
jne
add
sub
test
je
mov
mov
test
jne
mov
xor
sub
mov
add
test
jne
add
sub
sub
and
sub
mov
sub
cmp
je
and
call
cmp
jne
mov
sub
add
test
je
cmp
jne
sub
mov
mov
sub
sub
sub
or
sub
sub
and
mov
push
push
push
call
add
mov
sub
mov
or
mov
call
push
call
add
push
push
push
call
add
push
push
call
add
add
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
sub
push
push
push
push
push
call
add
pushl
push
pushl
call
call
addl
mov
push
push
push
push
call
add
mov
or
mov
sub
mov
cmp
je
sub
xor
mov
or
add
sub
add
cmp
je
add
sub
mov
mov
add
add
or
and
add
or
or
sub
test
je
mov
mov
sub
add
mov
call
push
push
push
push
call
add
cmp
je
mov
call
push
push
call
add
push
push
push
push
call
add
push
call
add
push
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
pop
and
pop
or
pop
sub
push
call
add
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
mov
mov
push
push
push
call
add
mov
sub
movl
push
push
push
push
push
call
add
call
sub
mov
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
push
push
push
call
add
call
push
push
push
push
push
call
add
push
call
add
sub
push
push
push
call
add
call
add
cmp
jne
mov
add
mov
add
add
cmp
jne
mov
xor
mov
push
call
add
call
mov
mov
cmp
jne
mov
mov
cmp
jne
test
je
mov
sub
mov
add
add
cmp
jne
cmp
je
mov
mov
add
test
jne
add
mov
cmp
jne
add
and
and
mov
or
add
mov
mov
add
sub
test
je
or
add
mov
add
sub
cmp
je
add
add
mov
push
call
add
mov
push
call
add
push
push
call
add
sub
mov
cmp
je
sub
add
push
push
call
add
xor
add
cmp
je
cmp
jne
push
call
add
push
push
push
call
add
mov
cmp
jne
mov
cmp
je
cmp
je
mov
sub
xor
add
sub
add
and
add
cmp
jne
sub
mov
mov
sub
test
jne
sub
mov
sub
xor
sub
sub
add
or
and
sub
and
sub
sub
add
xor
mov
mov
mov
cmp
je
mov
and
sub
mov
cmp
je
xor
or
mov
test
jne
mov
mov
cmp
jne
mov
cmp
jne
xor
and
mov
mov
cmp
je
sub
mov
add
add
mov
mov
or
or
mov
add
cmp
jne
cmp
jne
sub
cmp
je
mov
mov
cmp
je
or
sub
mov
xor
and
add
test
jne
mov
mov
sub
and
and
and
sub
sub
cmp
je
call
push
push
call
add
push
call
add
mov
mov
test
jne
mov
add
mov
mov
cmp
jne
add
cmp
jne
or
add
or
je
and
add
addl
mov
sub
lea
mov
push
push
push
push
call
add
call
inc
push
push
push
push
call
add
call
mov
mov
cmp
je
mov
mov
cmp
je
add
mov
mov
add
sub
or
cmp
je
add
cmp
je
mov
sub
mov
mov
add
or
sub
add
or
cmp
jne
and
mov
test
jne
mov
mov
test
je
cmp
jne
add
mov
sub
add
xor
sub
cmp
jne
cmp
je
mov
add
mov
sub
sub
add
and
cmp
je
sub
cmp
jne
xor
sub
push
push
call
add
mov
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
add
push
push
push
call
add
push
push
push
call
add
cmp
jne
or
push
call
add
push
call
add
push
push
call
add
cmp
jne
add
call
sub
and
sub
add
mov
add
sub
add
mov
mov
and
cmp
je
mov
mov
cmp
je
mov
add
test
jne
push
call
add
push
call
add
mov
mov
push
call
add
call
cmp
je
and
push
push
push
push
push
call
add
push
call
add
mov
mov
add
cmp
je
sub
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
push
call
add
push
push
call
add
mov
add
push
call
add
call
push
push
call
add
cmp
jne
push
push
push
push
push
call
add
call
push
push
push
push
call
add
mov
add
push
push
push
call
add
add
push
push
push
push
push
call
add
call
and
mov
push
push
call
add
add
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
add
sub
push
push
push
call
add
sub
call
push
call
add
push
call
add
add
mov
cmp
jne
mov
add
add
cmp
je
mov
or
mov
add
sub
add
cmp
je
mov
add
mov
sub
cmp
je
add
or
sub
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
je
sub
cmp
je
add
mov
mov
add
and
cmp
jne
add
add
xor
cmp
jne
add
add
mov
push
push
push
call
add
push
push
push
call
add
pop
cmp
je
push
push
call
add
pop
push
push
push
call
add
pop
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
push
call
add
push
mov
push
push
push
push
call
add
mov
push
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
mov
push
push
call
add
sub
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
cmp
je
mov
push
push
push
push
call
add
add
push
call
add
call
rdtsc
mov
mov
sub
test
je
mov
mov
add
add
sub
sub
add
add
sub
add
or
test
je
add
and
add
sub
mov
add
pop
cmp
jne
mov
mov
test
jne
mov
mov
add
cmp
je
sub
mov
cmp
jne
sub
cmp
jne
add
add
cmp
jne
and
test
jne
add
mov
and
mov
sub
test
je
xor
or
mov
add
sub
sub
mov
cmp
je
mov
sub
sub
xor
sub
sub
add
pop
mov
mov
cmp
je
or
mov
cmp
jne
sub
add
cmp
jne
xor
add
sub
xor
mov
and
test
je
mov
sub
or
or
add
pop
and
mov
or
sub
and
sub
cmp
je
sub
mov
add
sub
sub
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
push
call
add
push
call
push
push
call
add
push
xor
push
call
add
call
push
call
add
or
add
sub
mov
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
call
or
mov
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
xor
call
call
mov
add
cmp
jne
mov
mov
or
cmp
jne
mov
sub
sub
sub
mov
add
or
sub
or
sub
mov
mov
mov
sub
add
sub
sub
sub
sub
cmp
je
xor
sub
mov
cmp
jne
mov
cmp
je
cmp
jne
and
add
cmp
jne
test
je
sub
test
je
and
add
mov
mov
sub
and
sub
mov
sub
decl
mov
add
sub
mov
and
cmp
jne
or
and
xor
mov
cmp
je
mov
and
add
sub
roll
mov
xor
add
sub
add
sub
or
add
add
cmp
jne
cmp
jne
mov
mov
add
test
je
and
and
add
or
jmp
push
push
push
push
push
call
add
push
push
call
add
mov
push
push
call
add
push
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
pop
push
push
push
call
add
pop
sub
test
je
push
push
push
call
add
call
pop
push
call
add
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
call
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
push
call
add
mov
mov
mov
mov
sub
mov
mov
sub
mov
cmp
je
mov
and
push
mov
push
push
push
push
call
add
mov
push
push
push
call
add
cmp
jne
push
push
push
call
add
push
push
push
push
push
call
add
sub
mov
add
add
add
or
add
mov
mov
sub
test
jne
or
cmp
jne
sub
add
push
xor
xor
call
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
add
call
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
sub
push
push
call
add
push
call
push
test
jne
add
mov
push
push
push
push
call
add
call
sub
call
push
push
push
call
add
call
add
mov
or
and
mov
xor
push
push
call
add
push
push
push
push
push
call
add
call
push
push
push
push
push
call
add
or
call
add
push
push
call
add
add
mov
xor
or
add
mov
cmp
jne
mov
mov
add
sub
and
or
and
add
add
and
sub
add
cmp
jne
xor
mov
add
and
sub
mov
mov
or
mov
push
push
call
add
push
push
push
push
push
call
add
push
call
add
call
mov
mov
test
jne
mov
add
sub
mov
and
add
sub
mov
mov
add
mov
sub
cmp
je
mov
mov
cmp
jne
cmp
je
add
cmp
jne
cmp
jne
add
sub
cmp
jne
or
or
and
mov
mov
add
or
je
sub
sub
test
je
cmp
jne
mov
mov
cmp
jne
test
jne
add
sub
mov
sub
and
and
add
test
jne
mov
mov
add
add
add
xor
mov
mov
repnz
xor
push
call
add
or
mov
add
cmp
jne
push
push
push
push
call
add
addl
push
push
push
push
call
add
push
push
call
add
jmp
push
push
push
push
push
call
add
mov
mov
push
call
add
push
push
call
add
or
mov
and
mov
sub
add
sub
add
mov
sub
cmp
jne
add
sub
add
pop
cmp
je
sub
cmp
je
xor
pop
and
sub
cmp
je
cmp
jne
or
mov
test
je
sub
mov
pop
sub
mov
add
sub
add
cmp
jne
add
mov
and
cmp
je
xor
sub
sub
cmp
jne
mov
sub
add
add
cmp
jne
sub
mov
or
sub
sub
cmp
je
mov
add
add
sub
mov
add
add
cmp
je
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
mov
sub
mov
push
add
mov
mov
and
cmp
jne
mov
and
add
mov
test
je
mov
add
sub
mov
add
cmp
je
cmp
jne
mov
mov
test
je
mov
cmp
je
cmp
je
and
mov
mov
add
add
xor
cmp
je
sub
xor
xor
mov
add
add
push
mov
and
add
push
xor
mov
or
sub
add
and
sub
sub
add
sub
cmp
je
add
mov
xor
add
add
cmp
je
cmp
je
mov
add
add
mov
sub
sub
add
cmp
je
sub
mov
sub
sub
sub
mov
sub
sub
add
sub
sub
sub
add
cmp
je
mov
sub
add
mov
mov
cmp
jne
mov
mov
add
sub
sub
sub
mov
and
add
sub
sub
mov
or
mov
add
add
sub
cmp
je
and
pop
mov
mov
and
or
add
sub
sub
sub
sub
add
pop
cmp
je
test
jne
sub
pop
cmp
je
xor
mov
cmp
je
mov
mov
cmp
je
sub
mov
sub
and
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
add
mov
push
mov
mov
cmp
je
mov
sub
add
push
xor
push
mov
mov
sub
sub
or
cmp
je
cmp
jne
xor
add
xor
and
cmp
je
mov
or
mov
add
cmp
jne
add
mov
mov
add
xor
add
sub
sub
cmp
jne
mov
sub
mov
add
mov
add
and
cmp
je
cmp
je
cmp
je
cmp
jne
xor
xor
sub
sub
and
cmp
je
mov
add
xor
or
cmp
jne
add
mov
mov
test
jne
or
xor
mov
or
sub
cmp
je
mov
mov
test
jne
add
cmp
je
sub
mov
cmp
je
mov
and
and
add
sub
xor
mov
and
cmp
jne
mov
add
add
cmp
je
sub
sub
mov
mov
or
add
and
add
cmp
jne
mov
mov
cmp
jne
cmp
jne
mov
add
sub
test
jne
add
sub
add
add
sub
mov
mov
add
sub
sub
test
je
mov
mov
mov
add
sub
add
add
sub
cmp
je
mov
mov
cmp
jne
cmp
jne
mov
sub
add
xor
add
cmp
je
cmp
je
cmp
jne
sub
mov
and
mov
sub
add
add
and
sub
pop
mov
mov
sub
sub
mov
and
sub
or
add
sub
and
pop
test
jne
cmp
jne
cmp
jne
add
pop
mov
sub
add
mov
and
and
sub
and
or
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
or
mov
push
sub
push
add
sub
push
mov
sub
sub
mov
add
add
add
sub
add
sub
add
and
sub
add
mov
mov
cmp
jne
mov
mov
add
add
cmp
jne
mov
mov
mov
add
cmp
je
sub
mov
and
sub
mov
sub
test
je
xor
or
mov
and
sub
sub
add
or
or
mov
sub
add
mov
add
mov
sub
mov
xor
test
jne
and
sub
add
add
mov
mov
mov
add
and
add
sub
sub
pop
or
xor
mov
xor
test
jne
test
jne
add
sub
sub
mov
cmp
jne
mov
mov
test
jne
mov
sub
sub
and
and
or
cmp
jne
mov
mov
test
jne
and
xor
mov
cmp
jne
add
mov
cmp
je
cmp
je
mov
add
xor
or
add
cmp
jne
sub
mov
add
add
add
xor
add
sub
sub
cmp
jne
or
and
sub
pop
mov
add
pop
mov
mov
sub
and
sub
add
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
mov
push
add
push
xor
add
sub
mov
sub
sub
push
xor
mov
add
or
cmp
je
xor
mov
xor
cmp
jne
mov
or
xor
sub
mov
mov
and
sub
sub
sub
add
sub
sub
add
mov
mov
add
sub
sub
xor
sub
mov
sub
add
mov
mov
cmp
je
or
sub
mov
add
xor
test
jne
mov
mov
cmp
jne
mov
and
or
mov
xor
add
sub
add
sub
sub
sub
mov
pop
mov
cmp
jne
sub
mov
mov
add
sub
mov
add
add
add
or
cmp
jne
mov
add
sub
pop
or
and
cmp
je
add
pop
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
mov
add
mov
cmp
jne
add
add
push
mov
add
or
and
add
push
and
sub
mov
mov
add
sub
sub
mov
or
add
sub
sub
and
sub
mov
mov
add
add
test
jne
cmp
je
mov
mov
and
sub
add
cmp
jne
cmp
je
mov
xor
add
add
sub
cmp
je
sub
sub
add
sub
sub
mov
mov
or
add
add
and
sub
and
add
cmp
jne
or
sub
cmp
je
mov
mov
sub
add
test
je
xor
pop
sub
pop
mov
or
mov
or
sub
sub
sub
sub
pop
sub
mov
sub
mov
add
cmp
jne
sub
sub
and
add
and
mov
cmp
je
cmp
je
cmp
je
sub
add
sub
sub
sub
xor
leave
ret
