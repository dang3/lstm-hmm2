sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
push
push
call
mov
mov
add
mov
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
in
xchg
outsb
outsl
idivl
mov
mov
addr16
cmpsb
pop
in
cmp
sbb
or
pop
mov
sti
daa
gs
leave
imulb
outsb
xchg
mov
pop
adc
xor
negl
dec
dec
stc
hlt
xchg
iret
test
notb
push
mov
in
cmp
push
je
clc
pop
in
cmpsl
sbb
and
push
sbb
adc
out
rolb
bound
fcmovb
pop
in
ret
aas
cmp
mov
dec
jne
stos
gs
in
pushf
adc
pop
js
jno
lds
in
js
lds
push
sub
adc
push
xchg
add
callw
mov
push
out
add
jns
pop
pushf
out
mov
add
and
push
adc
mov
and
cs
xor
outsb
lret
sub
in
sbb
xchg
dec
cmp
jl
dec
icebp
shrl
leave
pop
adc
adcl
nop
mov
dec
outsb
lock
sbb
aad
and
cltd
in
jl
lods
xchg
and
scas
cmpsl
lock
push
mov
les
mov
int3
in
sarl
stos
adc
xchg
sub
je
mov
gs
jge
or
jne
lahf
int
and
push
jo
sbb
sub
insb
jl
out
mov
adc
sbbb
push
pop
repnz
push
sub
ret
inc
iret
cmp
std
pop
push
sbb
xchg
scas
repnz
and
into
lock
pop
mov
imul
and
mov
daa
and
lock
imul
mov
mov
mov
ljmp
jbe
or
adc
shr
call
mov
dec
test
mov
push
xor
add
and
fistpll
xor
jmp
xchg
pusha
subb
add
pop
scas
aam
mov
inc
add
adc
clc
sub
out
test
push
mov
aad
push
xchg
mov
lret
lcall
mov
mov
pusha
mov
xchg
fdivrs
push
ljmp
inc
lahf
and
xor
arpl
cli
inc
pop
push
xor
sbb
scas
ficomps
neg
pop
sub
loop
and
xchg
jg
lret
xchg
ss
and
mov
stos
clc
loopne
jae
lods
jne
bound
mov
je
xchg
jbe
push
inc
add
sbb
pop
imul
push
rorl
sti
fildll
bound
lds
xchg
cmp
push
or
or
jno
mov
into
cmpsl
imul
mul
fistps
lods
jmp
cwtl
pushf
mov
mov
inc
enter
repz
out
leave
cmpl
cltd
pop
or
iret
daa
sub
lock
je
xchg
push
mov
mov
mov
pusha
aas
imul
mov
outsl
inc
jl
test
out
js
out
je
mov
mov
lea
into
fwait
sub
repnz
or
test
imul
xchg
sbb
cs
sub
and
stc
std
dec
pushf
push
lahf
add
push
adc
jp
push
xchg
std
sub
pop
xchg
arpl
popa
popf
xlat
or
or
adc
out
add
dec
gs
cs
jns
cmp
push
mov
xchg
fsts
xchg
mov
pusha
dec
cli
addr16
cli
es
fucom
int3
push
dec
mov
outsb
xor
cmc
inc
mov
sub
icebp
mov
fiadds
push
lcall
lods
mov
dec
xchg
xchg
decl
dec
test
jle
cmpsb
sahf
movsl
das
ljmp
aas
in
mov
jo
mov
jg
or
pop
mov
mov
les
scas
nop
push
add
lods
cmp
adc
pusha
cld
fs
sahf
mov
loope
jb
inc
xor
es
cmp
ror
gs
pop
pop
xchg
cwtl
cltd
xor
sti
jmp
push
inc
frstor
sbb
cwtl
xchg
sbb
cmc
les
daa
sub
or
jp
and
movsl
sub
addr16
inc
insb
les
flds
lea
jecxz
add
inc
ret
xchg
and
cwtl
and
add
inc
fwait
and
icebp
nop
jg
sbb
add
cmpsl
orb
inc
fidivs
jb
sbb
pop
mov
imul
sub
out
sub
outsl
cmp
and
xor
xchg
sub
in
jne
cmp
xchg
mov
sbb
icebp
xorb
loopne
or
test
out
jae
sahf
inc
add
or
pop
and
jo
daa
mov
sbb
add
sub
xlat
test
aaa
dec
adc
jne
inc
clc
pop
cmp
mov
xor
loopne
std
jg
jne
sbb
aam
xorl
push
or
sub
mov
dec
or
dec
dec
mov
aas
mov
arpl
xchg
pusha
mov
lock
sbb
dec
push
sbb
and
daa
lods
push
inc
outsb
adcl
loop
jne
jmp
push
imul
add
mov
jbe,pt
icebp
fstpl
aaa
mov
dec
fwait
in
add
cmp
dec
scas
jmp
adc
or
cmp
sahf
push
pop
and
loop
cli
lods
add
cmp
lods
pop
xchg
loop
sub
lahf
popa
movsb
movsb
mov
sub
dec
rorl
movl
and
and
scas
sbbl
xchg
shll
jnp
cmp
aad
test
addr16
push
mov
xchg
imul
jb
ljmp
jg
mov
sbb
ss
and
stc
push
xchg
ret
sbb
mov
bnd
adc
mov
adc
lods
dec
push
mov
into
filds
mov
aas
repnz
and
int3
xchg
xor
jb
sub
pop
int3
cs
lcall
lods
lret
fidivs
mov
cmpsb
test
stos
fiadds
push
vmovups
imul
and
lods
cwtl
imul
data16
sbb
or
mov
scas
std
jnp
ljmp
test
out
jnp
jle
je
stc
sbb
inc
jb
lock
push
in
push
cli
sub
xor
xor
jb
sbb
xchg
push
ja
adc
xchg
and
jmp
iret
adc
and
push
repnz
xor
in
jns
jo
push
sbb
xchg
xor
xorl
ficompl
ret
inc
addb
hlt
jnp
xchg
lret
jnp
pop
out
push
dec
das
andb
dec
jno
aaa
add
mov
push
inc
xlat
call
sub
aam
lods
mov
cmp
adc
jbe
fsubrp
je
sarb
inc
daa
push
fmull
pushf
scas
adc
ljmp
adc
hlt
pop
test
sti
lcall
push
and
xlat
jo
or
loopne
push
sbb
xchg
ss
inc
cmp
mov
pop
outsl
jns
mov
fisubl
jl
sub
jge
inc
push
and
jae
cld
into
movb
dec
adc
mov
pop
arpl
add
cltd
or
out
add
sbb
push
sub
in
fnstcw
jns
or
js
notl
mov
outsl
sbbl
dec
sub
iret
dec
cmp
jle
mov
sbb
scas
dec
push
sbb
imul
in
arpl
mov
idiv
or
push
or
jno
sub
lret
pop
fists
mov
cmpb
xchg
sbb
dec
jle
dec
mov
cmp
pusha
mov
outsb
sahf
xchg
dec
sbb
pop
or
lock
or
xchg
and
repz
jge
jg
in
and
fcomps
ss
xchg
push
repnz
lea
push
mov
ss
inc
mov
hlt
aaa
push
jno
jns
dec
sub
pop
mov
pop
add
jmp
pop
fcmovu
sbb
ret
sbb
mov
mov
shlb
or
js
or
das
push
xor
test
out
xchg
in
in
jnp
dec
call
xor
sub
inc
dec
mov
mov
iret
cli
adc
clc
or
push
push
push
je
inc
cld
fwait
sahf
fidivs
ret
dec
das
out
mov
mov
jne
aam
or
cmp
jnp
mov
shr
or
in
pop
adc
or
icebp
mov
enter
jp
and
xor
xor
popa
in
mov
xchg
and
scas
fists
xor
xchg
fld
testb
repz
sub
add
mov
inc
sub
adc
adc
xor
btr
arpl
pop
push
ja
pop
jmp
jne
mov
mov
mov
jg
xchg
sbb
pushw
or
inc
jns
lret
xor
and
lea
dec
xchg
mov
mov
mov
out
pop
imul
sub
xor
jbe
or
xor
sbb
repz
mov
inc
adc
andl
add
call
mov
outsl
enter
jle
outsl
gs
mov
mov
and
mov
loope
insl
push
and
movsb
mov
leave
andl
mov
cmpb
lds
les
shr
mov
sbb
fisttpll
mov
sbb
xor
cmp
lcall
arpl
pminsw
cs
adc
in
jp
cwtl
mov
push
aam
mov
xchg
inc
rep
or
add
movsb
test
into
bound
nop
mov
jae
push
jo
sub
mov
jno
jne
loope
push
mov
push
inc
ret
pop
out
aad
sbb
lea
sub
hlt
cmp
pop
cmpsl
dec
mov
sub
cmp
cmp
mov
push
push
out
addl
lret
xchg
push
mov
rcl
jge
inc
js
push
pop
insl
pop
icebp
mov
movsl
lea
mov
sbb
fcoml
cmp
test
data16
mov
aas
jecxz
in
loopne
pop
bound
int3
addb
jl
outsl
ficomps
in
andl
xor
mov
push
scas
xor
pop
push
push
in
fidivrs
cvtdq2ps
loope
sbb
cmp
push
mov
add
mov
mov
push
or
add
xor
test
lcall
fdivrs
xchg
in
pop
adc
xchg
fcomps
lds
mov
mov
aas
popf
fsubl
shrl
ret
cmp
call
repnz
sub
jns
es
out
pop
xor
jmp
jb
sub
lds
jno
faddl
adc
stc
imul
lret
mov
pop
mov
rclb
pop
xchg
adc
ret
js
lahf
loop
pop
ret
adc
sub
jp
dec
push
cmpsb
loope
push
shll
sub
push
arpl
sbb
or
out
xor
or
sub
push
test
mov
mov
sbb
lea
out
ret
std
dec
jle
inc
std
rcrl
or
cmp
mov
cltd
loopne
rcrl
addr16
jmp
dec
or
int3
enter
xchg
fldenv
mov
ljmp
out
adc
xor
pop
ret
and
cmp
xchg
mov
sub
loope
xchg
cli
mov
xchg
outsl
and
fldcw
rcrb
mov
and
or
and
cli
dec
mov
or
fidivs
outsl
iret
and
push
mov
pop
inc
sbbl
push
mov
adc
lcall
dec
xchg
mov
adc
repnz
call
mov
div
and
lcall
ret
or
dec
cmc
rcll
push
push
push
inc
add
int3
mov
stc
mov
push
movsl
add
push
cmc
push
xchg
in
inc
lock
inc
cmp
call
js
push
fiaddl
lods
jg
scas
cwtl
mov
inc
subb
sbb
pop
imul
loopne
lahf
cli
and
pop
aam
lea
aad
in
cmpb
inc
pop
int3
jecxz
sbb
push
mov
cmp
push
sbb
jbe
pop
ffree
dec
jns
dec
xchg
lahf
pop
pop
into
fimull
ja
repnz
stos
out
clc
in
xor
mov
sub
fbstp
aam
mov
flds
mov
lret
fstl
je
stos
cltd
in
mov
jmp
or
and
add
mov
pop
cmc
xlat
sarl
stos
iret
out
jns
adc
inc
or
dec
pop
movsl
in
push
fs
sub
shl
lcall
inc
sbb
cmpsl
fdivs
sarb
pop
sub
lret
cwtl
addr16
or
cld
jno
add
xor
lret
xor
fadds
pop
ret
sub
scas
mov
sub
cli
call
leave
push
xchg
jl
ss
lods
fildl
pop
aaa
and
fimuls
sbb
shr
push
cli
inc
push
dec
outsl
cmp
push
pop
mov
pop
sbbl
into
movsb
aam
and
fidivrs
push
jb
jnp
adc
inc
and
pop
sbb
mov
icebp
jne
ja
imul
xlat
int
aas
lea
cwtl
jl
ljmp
test
jge
push
or
lock
add
jnp
cmpsb
sub
imul
push
pop
jbe
mov
add
and
scas
mov
mov
mov
xorb
shrb
fwait
xchg
cmc
mov
stc
pop
rep
in
xchg
cltd
call
dec
gs
stos
sub
loope
je
push
imul
repnz
stos
push
xchg
mov
mov
jmp
xchg
add
in
mov
jecxz
stc
sub
xor
mov
push
and
pusha
pop
dec
pop
mov
fstps
mov
jae
sahf
lret
ja
fisttpl
and
insb
insb
jmp
movsl
addr16
xor
outsl
jb
mov
mov
pop
push
scas
push
loopne
popa
mov
movsl
loop
push
jmp
sub
shl
call
ror
pop
out
sbb
aad
jbe
hlt
cmp
xchg
std
or
xlat
int3
cmp
inc
cltd
xlat
add
fisubrl
pop
sub
jb
adc
ja
push
ret
sarl
xchg
inc
out
out
sbb
jbe
and
mov
xchg
stos
outsl
push
and
mov
out
movsb
andl
and
das
outsl
add
out
sbb
inc
or
fisubl
dec
mov
push
enter
lret
jbe
pop
xchg
enter
mov
and
or
sbb
cmpsl
popa
add
mov
push
out
jne
aam
lock
fsubrs
add
jb
sti
sub
mov
daa
jge
cmp
xchg
sbb
repz
mov
in
shr
push
shlb
mov
jecxz
popf
iret
cmp
jle
inc
fstpt
lds
ja
nop
mov
cmp
or
xchg
mulb
sub
cmp
cwtl
dec
aaa
movsb
dec
call
cmp
inc
insl
add
push
push
add
fwait
leave
sti
xchg
lea
daa
cmp
int3
add
push
push
hlt
or
div
lds
ret
xor
sub
push
outsl
lock
dec
mov
rorl
jp
icebp
pop
outsl
insl
aam
jp
adc
xor
inc
dec
in
mov
jne
cwtl
push
jno
mov
fdivs
mov
push
inc
dec
jno
out
loop
xchg
imul
stos
and
cmp
pop
mov
mov
dec
in
test
testl
jmp
popf
in
sbb
and
sar
add
popa
mulb
mov
lahf
xchg
push
fwait
mov
mov
scas
loopne
mov
icebp
dec
jp
add
scas
icebp
xchg
adc
cmp
loopne
ret
mov
or
outsb
push
fbstp
cmpsl
or
faddp
or
lds
loope
les
lret
xchg
dec
mov
mov
data16
lcall
popf
sbb
cld
insl
or
nop
cmp
les
mov
mov
mov
pop
xchg
lret
test
aaa
xchg
mov
sbb
fwait
imul
in
ret
cmp
fucom
inc
xchg
fwait
lahf
lods
cmp
mov
std
aaa
adcl
add
mov
add
fstl
sub
in
add
or
aad
inc
mov
lods
cli
mov
iret
repnz
popa
add
add
ds
insb
icebp
rol
and
in
pushf
das
xor
cld
icebp
xchg
repz
inc
scas
das
cli
inc
pop
push
xchg
pop
in
pop
movsb
mov
jne
fsubrs
dec
adc
mov
adc
shll
push
mov
inc
cli
pop
push
arpl
xlat
mov
mov
pop
out
gs
jmp
cmp
push
xchg
mov
shr
dec
or
loop
xchg
adc
std
dec
lret
fmuls
fists
fwait
lcall
fsts
cwtl
and
add
push
arpl
ljmp
sbb
je
mov
test
push
icebp
sub
js
cmpsb
jecxz
push
fs
nop
or
push
cmc
out
je
fwait
jp
mull
adc
xor
ljmp
dec
daa
mov
mov
outsb
iret
push
popa
mov
int3
jmp
mov
pushf
push
fstpt
cmp
out
and
inc
loop
lcall
insl
ret
xor
sub
mov
or
mov
xchg
cs
movsb
lahf
cmp
into
push
stos
insb
imul
adc
dec
adc
jae
lret
jne
into
mov
out
dec
xchg
iret
adc
inc
adc
aaa
fwait
mov
imul
sbb
jmp
sbb
pop
adc
xchg
outsl
rorl
sbb
and
repz
scas
int3
sbb
hlt
cwtl
add
or
cmp
jns
jp
mov
jmp
out
adc
sti
les
adc
sti
pop
je
mov
mov
inc
jo
dec
dec
addr16
adc
outsb
push
mov
fsubrl
outsb
inc
pop
cmp
jp
int
jnp
rcrl
cmp
pop
add
fld
testb
insl
add
push
dec
lret
and
testl
adc
arpl
xchg
adc
pop
into
clc
jbe
ljmp
ja
pop
sbb
lret
mov
adc
das
mov
test
adc
sub
aad
nop
outsb
or
call
lds
hlt
push
cmpsl
dec
push
dec
mov
mov
cld
test
adc
and
pop
add
in
inc
xchg
pop
push
xchg
sbb
pop
lds
cmp
rcl
mov
adc
fstpt
add
jl
xor
int
in
test
sub
popa
cmpl
dec
enter
sub
in
cmpsl
call
mov
pop
push
cmp
sqrtps
jae
es
arpl
inc
loop
jmp
sbb
jns
mov
inc
loop
xor
add
cmp
sub
sahf
aam
mov
cmc
ror
popa
dec
mov
das
mov
dec
sub
jno
adc
test
pushf
test
sarb
sbb
lds
mov
jl
lcall
push
mov
sub
js
loop
xor
loopne
nop
test
outsl
and
nop
jb
lds
icebp
les
outsb
iret
addr16
daa
dec
fsubrs
iret
pop
mov
pop
ss
pop
or
outsl
iret
icebp
add
mov
int
test
cwtl
or
pop
xor
xchg
popl
add
icebp
pop
cwtl
cmc
in
pusha
sbb
pop
lret
jb
adc
cmp
push
xchg
dec
in
adc
lret
add
jb
les
jns
mov
adc
insl
sbb
jne
adc
inc
jno
and
cltd
in
jbe
sub
mov
shr
mov
sub
daa
push
les
lods
mov
movlps
pop
cli
mov
insb
in
cmp
std
dec
add
shl
das
inc
fiaddl
mov
popa
jae
lods
daa
mov
ljmp
bound
mov
push
or
mov
or
inc
dec
mov
or
call
loop
sarb
jecxz
fxtract
js
xor
fiaddl
xor
push
popf
pop
cmp
rclb
add
loopne
mov
sbb
insb
or
jl
inc
sub
incb
popa
or
stc
sbb
mov
daa
xor
pop
pop
popf
in
mov
mov
sub
mov
adc
mov
xchg
test
dec
mov
add
ss
into
aad
in
test
and
lods
mov
mov
stc
xor
pop
pushl
sub
jbe
std
inc
rolb
push
movsb
add
je
jnp
test
xchg
popa
mov
repz
pop
cs
adc
call
xchg
hlt
in
adc
lea
fwait
dec
sub
fiaddl
decb
rclb
adc
filds
movsb
cmp
cltd
icebp
outsb
repnz
mov
insb
xchg
mov
sbb
mov
xchg
cmp
out
int3
cmc
or
sbb
shr
outsb
add
lret
inc
es
into
scas
inc
aaa
das
push
xchg
enter
cmp
and
jge
lret
jle
sub
jle
mov
dec
jmp
mov
pop
add
or
loopne
int3
stos
pop
iret
cmc
into
mov
mov
add
iret
dec
lods
pop
jg
aam
jge
sub
mov
mov
jo
cmpsb
and
lods
ror
cmp
cmpl
out
mov
xchg
push
sbb
rclb
in
aam
out
lcall
lret
pop
in
xchg
sub
adc
nop
pushf
testb
lea
aaa
pushl
into
adc
icebp
mov
xchg
cmp
adc
xor
jge
xchg
sbb
push
mov
xchg
and
push
pop
sub
add
cltd
ja
dec
or
movsl
stc
imul
jp
daa
adc
popf
jecxz
adc
out
sub
out
cltd
les
out
fwait
popf
das
pop
cs
and
outsb
cwtl
and
arpl
int3
in
aas
dec
or
fildll
icebp
rclb
mov
pop
pop
rorl
sti
cmpb
and
mov
push
push
arpl
mov
movsb
sub
into
insl
xchg
push
iret
xchg
ret
push
div
add
add
mov
out
and
int3
out
add
cli
xchg
push
movsl
add
sbb
dec
scas
lret
pop
int
push
call
push
in
push
adc
add
dec
aas
push
stos
and
in
jmp
cwtl
fmul
xchg
adc
aas
xchg
in
pop
fidivl
addl
cmp
imul
fisttpll
test
mov
sti
pop
dec
mov
mov
es
pop
jno
call
add
sbb
add
mov
sbb
fprem
jp
jg
test
add
push
adc
dec
dec
jg
xchg
stos
cmpsb
xchg
cmp
fstp
xor
rcll
mov
jecxz
or
xchg
mov
or
test
cwtl
movsl
sahf
lods
xchg
and
jo
pop
add
test
fld
fiaddl
mov
sbb
sub
jp
xchg
inc
xchg
lcall
sbb
add
incb
ljmp
jbe
daa
or
and
and
jg
cli
sub
ss
leave
cli
or
sbb
leave
cwtl
fstpt
leave
sub
cld
cs
sub
pop
push
push
mov
cmpsb
dec
push
out
lock
sub
sbb
inc
pop
ret
cwtl
xor
icebp
and
mov
pop
mov
loopne
mov
imul
es
inc
dec
add
jne
xchg
jnp
in
jge
sub
addr16
mov
mov
lds
add
push
push
gs
xchg
sub
lea
pop
sub
nop
out
sahf
fildl
push
ja
jl
mov
xchg
das
fldl
push
add
fwait
push
shlb
cmpl
or
mov
andl
and
test
sbb
out
mov
and
cmp
fs
xor
movsl
mov
mov
sahf
jns
push
adc
imul
cwtl
jo
roll
sub
outsb
cli
repnz
push
sbb
mov
in
pop
dec
jns
and
idivb
dec
test
pop
push
mov
jecxz
or
cmp
pushf
pop
ljmp
jge
and
xor
ja
imul
lds
aas
fs
sbb
outsb
or
sub
imul
pop
inc
loope
inc
lcall
push
shrl
xchg
jae
push
test
andb
xchg
std
rclb
lcall
ret
js
mov
movsl
push
adc
cmpsb
cmp
and
or
insl
imul
insb
pop
dec
mov
sub
adc
add
out
mov
fisubl
out
inc
cmc
cmp
movsl
aam
push
sub
int
xchg
int3
cmp
movsl
adc
lahf
jo
popf
lret
jns
mov
mov
divl
xorb
mov
insl
jle
jmp
loope
in
lret
lret
push
inc
movsb
jnp
mov
sub
jge
mov
lods
adc
cs
insl
mov
out
mov
mov
mov
insb
inc
xchg
xor
adc
ds
push
mov
mov
pop
cmp
fsubrl
leave
pusha
inc
lods
adc
mov
nop
dec
mov
and
sbb
cltd
lret
icebp
out
les
push
jae
outsl
cli
test
test
cmc
fists
pop
adc
lret
jle
je
adc
lret
xchg
cmovns
xchg
loopne
and
nop
mov
ja
adc
jmp
pop
add
or
call
pop
xor
inc
fstps
sub
sbb
xor
dec
sbbl
retw
rcll
push
roll
cwtl
pop
icebp
or
js
rolb
cmc
ret
push
dec
jg
mov
movsl
ror
xor
lcall
gs
push
mov
pop
push
cwtl
std
loopne
pop
cwtl
repz
arpl
repnz
dec
gs
js
aas
addr16
or
sbb
mov
adc
pop
and
mov
or
aaa
cmpsb
ret
cmp
pop
push
push
pusha
cmc
and
roll
jl
subb
testl
or
sbb
cwtl
outsl
sub
dec
adc
adc
and
mov
fidivrs
jp
js
roll
fisubl
mov
movsb
loopne
add
xchg
cmp
push
pop
shlb
adc
dec
jle
and
fcmove
push
mov
xchg
divb
xor
insl
imul
call
dec
mov
out
mov
cmc
and
jno
cmpsb
adc
lcall
insl
xchg
dec
js
lock
in
shr
pop
dec
decl
mov
out
fistpll
push
out
rcll
cmp
or
clc
jnp
pop
ljmp
cmpsb
shll
mov
in
cli
or
xchg
jecxz
dec
int
or
iret
mov
adc
jb
push
cmp
lret
push
sbb
sub
adc
or
and
cli
aad
jle
ja
inc
pushf
fdiv
lret
push
leave
push
in
loop
xchg
loop
push
push
sbb
cmp
cwtl
sub
inc
xor
sti
gs
lea
xchg
ds
dec
int3
jno
xchg
add
sub
gs
repnz
rorl
fisubl
sti
jno
or
mov
js
repnz
jmp
xor
out
mov
push
repz
mov
sbb
cwtl
aaa
stos
cmpsl
inc
lahf
dec
loopne
push
icebp
push
js
dec
push
clc
or
aas
jge
ret
mov
and
pop
leave
add
pushf
fstl
inc
out
inc
pop
push
lret
cmp
in
jg
testl
dec
mov
aam
ds
scas
mov
test
pop
nop
sub
mov
cmp
fidivrl
push
jno
sbb
add
adc
sbb
sbb
or
leave
jns
push
movsl
jne
push
movsb
mov
xchg
adc
call
sbbl
push
outsb
incb
lahf
imul
fisubrl
test
test
nop
rcr
into
sub
push
aam
fwait
xchg
loope
arpl
or
or
ret
dec
aad
cwtl
pop
inc
js
dec
and
adc
mov
ret
mov
cltd
add
das
inc
sub
faddp
lds
cli
es
in
sbb
cmp
mov
fsubl
dec
call
push
fdivl
test
mov
rol
in
andb
sbb
push
sub
dec
sbb
out
lds
shrb
jle
xchg
ucomiss
mov
popa
ret
cs
popf
mov
adc
pop
cli
lods
pop
mov
hlt
loopne
pop
dec
xor
cmp
js
out
shrb
frstor
inc
ljmp
pop
aas
adcb
sbb
shll
adc
or
mov
pushf
cmp
inc
mov
or
xchg
test
lahf
pop
cmp
roll
inc
sbb
jecxz
repnz
lods
popa
adc
jp
pop
movl
push
inc
cmpsb
sti
dec
dec
adc
mov
ret
pop
pop
or
js
mov
ljmp
cmpsl
jp
mov
dec
push
sbb
jmp
mov
adc
jae
mov
std
and
sahf
jg
jnp
repz
loop
adcl
ficoms
pop
test
jo
dec
dec
and
xor
xor
in
jle
mov
xchg
xorl
out
aas
inc
enter
mov
stc
sahf
adc
ret
repz
imul
je
sbb
cmpsl
dec
outsb
in
jg
adc
mov
and
lods
test
inc
or
cmp
loope
mov
xor
push
rorb
lret
test
jnp
scas
add
cmp
and
mov
xor
adc
ja
filds
loope
pop
popl
andnps
push
mov
cld
je
hlt
push
clc
and
sbb
xor
jnp
popa
sbb
lcall
out
jl
nop
mov
and
push
int3
arpl
ja
push
xchg
pop
dec
push
sbb
bound
fcmovb
sub
mov
jle
mov
adc
xor
mov
and
dec
cmp
xchg
test
test
adc
repz
fwait
dec
dec
mov
clc
int3
addr16
fdivr
jmp
js
frstor
or
pop
shr
sub
sbbb
lret
cmp
cmp
sbb
pop
dec
lret
je
sbb
lret
lahf
repz
scas
adc
repnz
xor
sub
jno
mov
lret
cs
inc
shll
jbe
pop
mov
ja
or
pop
jge
bound
cmp
fistpll
pop
aas
das
sbb
cltd
lret
inc
jae
fldenv
sub
in
add
inc
push
test
aad
repnz
cmp
shlb
cs
jg
imul
loope
mov
test
int3
imul
inc
cmp
jns
or
orl
xchg
mov
jge
cld
cmpb
jp
xchg
cmp
add
mov
xorl
push
out
xchg
xor
xchg
sbb
dec
mov
sarb
xchg
ret
push
sub
xchg
pusha
clc
aaa
sbb
ss
test
dec
movb
jge
in
in
fstpl
sbb
cmp
mov
cmp
mov
mov
push
and
jge
push
mov
mov
pop
dec
popa
insl
imulb
idivb
lcall
push
fsubr
out
cmp
arpl
lret
inc
fs
daa
lahf
mov
mov
das
cmp
mov
fdivr
sub
out
mov
shrb
jbe
push
mov
xor
xchg
daa
pusha
sbb
icebp
out
mov
andl
jecxz
mov
jl
jmp
cmpsl
xor
mov
adc
fldt
add
mov
cmpsb
jp
jge
mov
pop
repz
mov
pop
mov
icebp
push
ljmp
mov
aam
xchg
je
push
test
add
sbb
scas
dec
dec
rcrb
js
popa
mov
and
add
xchg
insl
test
or
fstpl
xor
xor
adcl
daa
adc
mov
xor
rorl
mov
sbb
jne,pn
sti
lods
mov
jae
out
int
jmp
pop
mov
cmp
push
jecxz
jns
sahf
xchg
pop
sub
cmp
mov
into
in
sub
pop
xchg
push
push
dec
jne
les
mov
cmp
into
and
sar
insb
inc
and
or
icebp
push
mov
shl
cmc
dec
mov
mov
adc
jnp
dec
adc
insb
jo
jno
movsl
mov
dec
xchg
lds
push
dec
fdivr
rorl
inc
test
cmp
dec
ficomps
push
pushf
jl
mov
aas
and
pop
aad
ret
in
pushf
xor
sbb
pop
mov
ret
leave
jne
pop
pop
push
imull
frstor
jo
sbb
cwtl
sbb
je
jno
mov
loope
sahf
shlb
dec
scas
lcall
not
mov
in
rcrl
add
ss
jge
cmpsb
loop
mov
adc
lock
cmp
addr16
lds
add
scas
jne
xchg
loope
push
int3
cltd
test
sarl
ror
jge
mov
push
ss
jg
pop
push
mov
js
and
push
nop
pop
lds
into
addr16
outsl
and
xchg
push
mov
iret
push
sbb
sub
cmp
fnclex
mov
arpl
fwait
pop
pop
jge
add
inc
movsb
std
sbb
cwtl
ret
mov
les
adc
or
and
push
loop
jp
mov
hlt
stos
jl
xchg
test
adc
mov
inc
sub
xchg
jp
lea
adc
ret
es
clc
insl
aas
fistpl
negb
cmpb
sub
in
ret
adc
sub
pop
push
inc
lea
pop
out
in
out
sub
cwtl
cmp
inc
xchg
fmulp
bound
daa
dec
xchg
or
jecxz
or
in
xchg
cli
mov
inc
jecxz
cmpsb
xchg
cmp
icebp
les
ficompl
xor
pop
sbb
mov
mov
data16
push
lcall
mov
sub
gs
mov
sub
rcr
ret
push
popa
filds
push
xchg
into
xor
cmpsl
jmp
loop
adc
sti
mov
mov
mov
xchg
ret
scas
repnz
iret
push
push
or
xchg
xor
pop
inc
xlat
aas
mov
pop
pop
fs
add
or
leave
rolb
cmp
add
vorps
push
jb
mov
clc
xor
push
mov
mov
add
imul
mov
push
inc
pop
das
es
outsb
stos
cs
xchg
roll
lret
cmpsl
sbb
add
push
dec
jge
xchg
and
lcall
in
shll
ficoml
scas
pop
dec
push
xor
ss
int3
jnp
sbb
les
pop
push
inc
adc
pusha
xchg
adc
bound
sbb
fs
dec
outsb
cmp
popf
addl
push
jno
je
mov
int
jge
mov
daa
outsl
or
cli
pop
ja
stc
es
push
test
jnp
imul
mov
add
pop
push
dec
pop
push
arpl
xchg
mov
cmp
inc
popa
pop
push
push
sarb
repz
cwtl
mov
div
sarb
add
mov
hlt
pop
cmc
je
pop
mov
ret
mov
mov
frstor
push
mov
add
stos
mulb
shlb
ret
repz
ljmp
nop
jns
sub
inc
popf
inc
sub
insl
xor
sti
jle
daa
cmp
jmp
les
lea
jp
push
call
outsl
das
dec
imul
decl
faddl
xchg
int3
lea
add
sbb
gs
in
mov
je
and
ret
adc
in
and
jecxz
ds
repnz
call
out
sbb
push
cmc
xor
dec
jge
fsubs
test
push
jae
scas
sbb
pop
push
gs
insb
bound
sub
int
ss
xor
std
lods
out
into
cmp
jmp
fdivl
adc
nop
in
push
out
sti
jae
mov
std
outsl
adc
jge
and
loopne
aad
xchg
dec
cmp
cmpsb
dec
sbb
std
aam
aam
addr16
sbb
pushf
sbb
mov
jnp
pop
ljmp
les
nop
and
add
pop
bound
out
outsl
or
lea
pop
es
cld
push
and
data16
lcall
push
xor
out
sub
mov
pop
push
cld
lds
je
add
pop
pushf
adc
ja
dec
and
and
sub
xchg
mov
pop
inc
cmp
pop
icebp
jle
jp
cmp
cwtl
ljmp
arpl
mov
shll
sub
fisttpll
sbb
inc
cwtl
xchg
sbb
imul
loope
int3
and
inc
pop
mov
loopne
pop
mov
nop
add
inc
mov
js
inc
pushf
xor
mov
repnz
sarb
mov
push
sub
xor
rol
sti
push
decb
push
xchg
in
xchg
xchg
xor
shlb
ja
addl
jl
mov
jg
xchg
popf
lock
xlat
cmp
jle
or
add
jo
mov
fistl
mov
mov
push
movb
xchg
in
repnz
mov
mov
push
mov
fldl
leave
inc
jmp
decl
xchg
xchg
push
fiaddl
sbb
push
stos
je
adc
and
push
lea
dec
std
mov
cld
ret
sbb
lock
jae
sub
add
push
outsb
push
loopne
xor
pusha
dec
test
repz
sbb
mov
fstpt
imul
movb
hlt
rcrb
shl
jg
add
dec
inc
xchg
stos
lcall
and
pusha
push
inc
push
jl
xchg
xor
daa
outsl
aaa
xchg
repnz
sub
imul
dec
push
in
movsl
rcll
stos
stc
cmc
sub
stos
lds
outsb
sub
aaa
mov
fs
pop
fdivrs
mov
push
cmpsl
push
fnstcw
popa
ficomps
dec
ja
push
das
pusha
imul
mov
loop
push
rcl
cmp
cmp
loopne
jne
jl
cmp
pop
dec
test
insl
lcall
push
mov
mov
xlat
aad
stc
and
loope
jne
and
cmpsl
iret
test
ret
loop
rorb
push
enter
in
imul
adc
or
xchg
adc
int
adc
je
mov
cmp
push
cmp
dec
xchg
sub
repnz
and
insl
cmp
mov
pop
cli
inc
test
jecxz
cmp
xchg
adc
mov
call
fwait
popa
push
xor
int3
xor
lret
or
sub
and
pusha
std
cmp
jae
push
mov
and
lret
insb
movsl
mull
fbstp
cmp
imul
dec
pop
mov
xchg
mov
xchg
add
xchg
cs
ja
cmp
in
out
pop
mov
lret
gs
aam
push
xchg
cmp
mov
repnz
out
mov
scas
xchg
pop
outsl
xor
mov
push
push
mov
adc
xchg
les
adc
popf
xchg
dec
inc
dec
or
pop
pop
pop
jge
mov
xor
xor
aas
adc
pop
push
fcmovnbe
mov
push
aas
xchg
xchg
mov
rolb
add
cli
jbe
or
pop
mov
movsb
jle
scas
inc
push
pop
leave
fwait
adc
mov
add
add
mov
hlt
cld
pushf
sub
hlt
loop
movsb
ljmp
push
shl
sub
out
out
mov
fidivrl
mov
ljmp
cmp
roll
lret
pop
push
push
shll
daa
adc
xlat
push
adc
scas
inc
inc
xchg
imulb
sub
pop
aad
xchg
add
xlat
nop
call
jp
sbb
jmp
pop
adc
xchg
gs
loope
and
outsl
sbbb
cwtl
sub
inc
pop
sbb
enter
dec
insb
mov
pop
cmc
fisttpll
add
xorb
and
sub
jo
pop
jp
xchg
dec
sbb
xor
dec
outsb
loopne
mov
dec
pushf
and
cmc
mov
call
ja
jo
sbb
add
and
cmp
clc
or
jg
lods
inc
fdivr
in
xchg
mov
outsb
in
sub
cwtl
iret
loop
inc
out
push
mov
inc
xchg
mov
andb
lahf
pop
pushf
jno
inc
sbb
xchg
ss
cli
adc
fwait
das
imul
lods
pop
xchg
inc
test
and
jb
pop
mov
insb
jl
jl
xchg
inc
inc
test
inc
jle
sub
xor
jne
seta
std
cmp
pop
add
pop
adc
fcomi
pop
add
cmp
lods
sub
test
adc
shll
mov
sub
jecxz
and
xor
and
mov
rol
dec
les
mov
out
pop
xchg
push
dec
ret
cmp
pop
into
fdivrp
mov
out
add
sub
addps
faddp
xlat
popf
stos
cmpb
dec
fwait
test
in
inc
push
negl
cs
test
aam
mov
pop
sub
and
cmp
icebp
jp
cmp
sbb
test
sbb
add
test
mov
dec
mov
mov
pop
aad
pop
push
push
movsb
adc
lcall
mov
adc
popf
movsl
movsl
shlb
jne
ljmp
lahf
push
pop
xchg
mov
sub
push
adc
ret
cmpsl
xor
dec
xchg
das
adc
loope
inc
or
jecxz
repz
orb
orl
sbb
sti
dec
jnp
rcl
rcrb
dec
inc
idivl
sbb
inc
mov
adc
insb
pop
and
cmpsb
dec
pop
insb
mov
push
jg
cltd
jne
push
hlt
inc
jne
pushf
aas
push
aam
sbb
cmp
in
adc
imul
cwtl
jbe
mov
insb
mov
xor
jge
stc
lret
or
pop
dec
loope
cld
mov
pop
movsl
adc
test
mov
rcrb
cmpsb
mov
pop
repz
xor
xor
rcr
shrl
pusha
fmull
imul
dec
aad
mov
jecxz
fs
lea
lret
adc
into
xchg
push
adc
pop
jb
and
inc
jne
mov
push
push
pop
enter
cltd
test
outsl
fwait
mov
push
bound
call
movsl
xchg
mov
ds
int
insb
imul
sub
lcall
xchg
insb
dec
roll
nop
adc
xor
push
sbb
movsb
mov
pushf
mov
shlb
mov
push
loop
mov
dec
in
in
out
add
sub
jmp
aaa
sbb
stos
stc
mov
out
xchg
aaa
pop
xchg
test
push
idivb
lds
xchg
test
dec
int3
roll
cmpsb
xchg
inc
pop
sbb
jp
cwtl
pop
les
std
xchg
jp
pushl
out
push
xor
outsb
in
sbb
bound
fisubs
test
lods
arpl
test
push
lahf
push
and
sahf
iret
mov
pop
ljmp
aaa
loope
fimull
mov
pop
or
rcrl
in
push
ja
cmp
aad
scas
cmp
int3
aam
movsl
cmpsb
adc
jl
push
jns
loope
lods
push
fs
fisubrl
mov
pop
jge
adc
pop
cs
inc
popl
sbb
out
cmp
xchg
in
mov
int
adc
repnz
mov
ret
xor
fs
dec
cmp
iret
mov
fwait
sti
or
ret
dec
scas
addl
mov
pop
roll
cmp
int3
mov
sbb
fisubl
push
inc
and
in
mov
outsb
pop
or
sbb
in
xchg
lcall
std
lds
jmp
xchg
lcall
pop
inc
mov
es
add
stos
mov
ja
and
mov
xor
lret
shll
insl
mov
push
inc
push
fstpl
mov
dec
xor
std
outsb
std
sbb
add
inc
aas
mov
test
and
adc
test
fistps
lock
cwtl
rorl
inc
pop
jae
sbb
gs
dec
cmpsb
mov
int
leave
xchg
je
cmp
and
fcomi
not
ret
in
jl
and
jns
xor
mov
xchg
or
popf
xchg
repz
sub
mov
popa
push
cmpxchg
addl
loopne
popf
or
inc
pop
sbbl
jb
rolb
jnp
cwtl
in
stos
cmp
xchg
jne
inc
outsl
inc
push
cmp
mov
xchg
mov
lock
movsl
mov
sub
push
lods
pop
das
scas
or
push
shrl
sub
dec
inc
in
sbb
pop
aaa
cmpsb
cwtl
push
hlt
andl
cmp
negl
icebp
jno
add
loopne
fisubs
xchg
lea
ja
cmp
mov
or
mov
push
xchg
push
inc
add
dec
stos
ja
sbb
fwait
xchg
out
rclb
ficoms
push
pmulhw
mov
xlat
or
push
xchg
je
ljmp
aaa
adc
xchg
push
inc
shlb
sarb
push
lahf
sti
enter
mov
dec
fimuls
je
xchg
mov
clc
and
jb
sarl
loop
inc
or
push
jo
inc
stos
mov
add
mov
inc
inc
pushf
es
xchg
cltd
mov
jns
sub
mov
xlat
push
inc
testl
outsb
dec
inc
xchg
cmpsl
mov
mov
mov
mov
dec
loop
shll
rclb
roll
cs
inc
sub
mov
fs
jb
aam
aaa
repnz
xor
jle
mov
sub
mov
cmp
lock
outsb
pop
lahf
scas
fwait
cmpb
fwait
out
xlat
je
jae
and
mov
outsl
lock
inc
mov
inc
mov
adc
inc
andb
loop
inc
test
push
xor
sub
xchg
bound
jb
stos
mov
hlt
adc
mov
and
jo
jne
add
jnp
mov
xor
mov
dec
add
lret
sub
push
inc
test
ss
dec
xor
add
dec
popa
test
scas
pushf
hlt
repz
fnstenv
add
push
pop
xchg
lock
fs
repz
jns
js
cmp
cmp
out
dec
jmp
out
gs
out
pop
adc
loopne
or
jns
data16
mov
fs
ret
adc
jae
sub
iret
push
out
mov
mov
mov
mov
cmp
inc
pop
mov
mov
insl
mov
movntps
sbb
pop
movsl
xchg
orl
fisubl
xor
fists
pop
xor
aas
iret
xor
test
outsb
test
cmp
dec
pop
aad
and
shll
sub
inc
mov
pop
cmp
cmp
inc
push
sbb
es
mov
cmp
rorb
mov
sar
ss
adc
and
dec
in
lea
inc
jns
enter
jmp
add
and
scas
fidivl
je
stc
sbb
mov
mov
xchg
pop
pop
add
jmp
shll
pop
mov
fwait
gs
push
mov
xchg
es
call
add
aas
pop
jp
lods
es
pop
sub
cmp
nop
pop
lea
popa
inc
gs
add
mov
push
fsubp
loope
dec
data16
jo
and
dec
jo
mov
or
mov
sarw
jb
call
mov
out
push
movsl
sub
xchg
sahf
pop
sub
inc
sbb
cmp
xlat
inc
inc
insb
add
jnp
jecxz
ror
adc
lods
ljmp
sbb
push
mov
ljmp
mov
or
mov
cwtl
adc
jp
cwtl
inc
adc
pusha
and
xor
test
push
aam
loop
mov
add
stc
pop
popa
int3
and
jle
sub
ret
repz
incl
dec
sub
or
es
call
faddl
xor
test
xor
dec
pop
jbe
inc
orb
pop
mov
out
das
sbb
daa
mov
sbb
and
cmpsb
sbb
mov
fimuls
mov
xchg
pop
adc
or
mov
inc
jecxz
adc
cmp
dec
xchg
sub
incb
subl
int3
sbb
sti
and
leave
roll
jp
inc
outsl
mov
das
mov
push
dec
and
pop
hlt
pop
cmc
push
adc
arpl
andl
out
icebp
inc
jns
aaa
fimull
je
hlt
shrb
cmc
pop
pop
xor
xchg
mov
inc
sahf
add
lods
mov
inc
and
xchg
jbe
shrl
sub
xchg
sbb
xchg
pop
and
loopne
mov
xchg
int3
adc
push
sbb
mov
sub
rcll
scas
xor
ret
jecxz
lret
in
jae
nop
adc
xor
ret
xor
adc
out
repz
out
aas
mov
mov
rcrb
adc
aas
aam
xchg
call
xchg
push
lods
idiv
es
je
cmp
popa
in
or
shl
rcrl
andl
jne
dec
sbb
lea
cmpsb
mov
outsl
sub
mov
mov
mov
mov
mov
test
push
adc
idivl
ret
lods
test
xchg
cmp
dec
and
jb
pop
mov
ja
test
scas
dec
push
test
add
pop
pushf
sub
loopne
les
call
sbb
lret
enter
int
int
lret
sub
jae
in
inc
inc
inc
mov
es
adc
mov
adc
adc
jp
cmc
pop
fwait
xor
mov
fs
push
add
push
sbb
xchg
mov
cli
pmaddwd
pop
push
fs
lcall
loop
ss
stc
cli
add
enter
mov
sbb
pop
fwait
adc
cmp
lret
mov
mov
xor
loope
xchg
mov
cltd
xchg
xchg
or
stc
sarl
mov
mov
inc
insb
popf
add
dec
push
lahf
int
sub
outsl
inc
sbb
dec
push
addl
test
mov
jns
jno
push
ret
mov
into
sub
ret
adc
xchg
mov
add
addl
into
outsb
mov
cli
and
iret
daa
cmpsl
shrl
out
jae
into
xchg
mov
pop
daa
sub
test
data16
out
add
cs
imul
push
adc
aad
ret
out
push
pop
mov
call
push
xchg
dec
fnstsw
adc
or
adc
es
divl
scas
je,pt
xor
xor
mov
loop
or
lds
in
into
inc
pushf
jle
pop
stos
xchg
out
jp
xchg
mov
lods
cli
and
outsl
sbb
ja
hlt
cmp
add
imul
sti
jmp
call
jno
gs
xchg
insl
cmp
jl
mov
jno
mov
cltd
je
les
lock
mov
pop
pcmpeqb
add
insb
or
add
xchg
icebp
sbb
mov
mov
jle
pop
jmp
mov
dec
pop
imul
in
ja
pop
inc
fildll
in
lds
das
mov
incl
xchg
inc
fucomp
push
mov
sub
dec
insl
fisttps
push
daa
lahf
ljmp
push
mov
and
bound
mul
sbb
les
repnz
jbe
insl
mov
pop
mov
ja
and
cmp
xchg
mov
pop
push
inc
adc
js
out
test
adc
pop
push
inc
cmp
cmp
push
add
inc
push
mov
rol
mov
scas
das
and
js
mov
orb
lret
insl
nop
ja
out
sub
fists
pop
jae
fwait
jecxz
push
into
mov
loope
pop
loope
mov
and
pop
cs
sub
mov
sarl
push
xchg
int3
push
in
jo
stmxcsr
repz
fsubrl
gs
xor
lret
mov
out
punpckhwd
mov
loop
cmp
in
pop
mov
mov
rol
repz
fbld
testl
add
in
ficompl
nop
pop
lock
or
jge
pop
xor
mov
mov
mov
into
mov
dec
and
push
lock
jg
aad
je
sbbb
std
in
nop
pop
lahf
es
jbe
aam
ss
enter
das
ljmp
jp
sbb
mov
mov
pop
add
mov
inc
mov
subb
jo
add
into
add
mov
and
sbb
dec
mov
out
aad
push
xor
enter
stos
cmp
andl
cmp
dec
aaa
xor
pop
dec
push
add
mov
pop
pop
add
test
lret
pop
popf
ja
xchg
fincstp
pop
jne
dec
cmp
pop
mov
out
pop
push
inc
daa
pop
mov
jl
mov
cwtl
enter
divb
pop
arpl
cmp
pop
mov
xlat
aaa
lods
xor
push
mov
push
dec
cmpsl
xor
movl
in
leave
pop
addr16
cmc
adc
mov
sbb
jns
pop
mov
testl
push
xchg
in
mov
dec
je
out
xor
mov
sbb
repnz
sub
mov
iret
and
ss
cmp
clc
push
out
cmc
push
mov
testb
das
add
arpl
and
jecxz
mov
ret
jge
aad
lds
enter
lcall
jo
push
out
int
rcr
sub
sti
mov
enter
fs
daa
push
sarl
popf
or
mov
xor
dec
dec
mov
add
mov
imul
faddp
call
sbb
out
shrb
mov
or
sub
jmp
jbe
push
mov
sub
ret
int
adc
xor
xchg
lcall
rcll
xchg
mov
inc
jl
popf
cmp
mov
sbb
lods
jp
lea
sub
ret
idivl
jbe
in
mov
inc
and
out
fisttpll
and
mov
pop
add
fisubrl
push
insl
insl
pop
mov
or
add
inc
stos
js
sub
gs
js
jae
movsb
mov
outsb
aam
dec
setge
popa
sti
movsb
dec
lret
xor
out
mov
fistl
pop
lock
daa
lret
pop
mov
or
dec
es
add
pop
push
rcrb
pop
test
fwait
dec
sub
mov
ss
mov
mov
cli
mov
scas
mov
ret
jbe
ljmp
dec
loop
xor
cld
fs
push
aam
jnp
aad
xchg
fmul
vpaddd
inc
cmp
loop
adc
pushf
inc
add
seta
sub
stos
loopne
push
mov
mov
fistps
mov
scas
dec
sub
subb
sbb
cmpsl
or
leave
or
sbb
sub
inc
push
pop
imul
cmp
jge
or
sub
push
fs
add
call
sub
stc
cld
sti
clc
lahf
adc
pop
dec
or
cmp
je
addr16
sbb
pop
sub
rolb
inc
into
in
es
add
or
xor
pop
sbb
pop
xor
jae
mov
incl
cmpsb
repz
jl
push
movsl
sub
sub
adc
sbbb
fnstsw
mov
lock
daa
push
mov
je
imulb
push
repnz
cmpsb
and
jae
cld
cmp
dec
sub
mov
xor
or
push
sbb
pop
jb
sub
inc
adc
aas
and
xor
movsb
push
adcb
push
inc
in
push
loop
loope
adc
jmp
test
movsb
repz
push
mov
mov
dec
dec
in
or
sub
cmovl
outsb
push
psllw
cmp
in
clc
cmpsl
jo
in
out
adc
mov
jle
mov
movsb
sbb
mov
jmp
mov
mov
sbb
out
inc
stc
xchg
or
nop
inc
jmp
pop
mov
pop
les
add
notl
jl
cmc
xlat
fstps
adc
addl
sbb
stos
xor
add
out
pop
andb
test
into
or
pavgw
mov
xchg
stos
mov
mov
and
addr16
dec
pop
andl
pop
lods
xor
pop
mov
push
dec
mov
mov
inc
adcb
negl
js
ficoms
inc
xlat
mov
fimuls
andl
test
fisttpll
xchg
xor
insl
cld
lahf
cs
cmp
movsb
and
add
adc
arpl
push
or
repz
in
xor
pusha
jl
fdivrp
add
outsl
lar
cli
outsb
adc
dec
data16
mov
inc
aam
repnz
jns
cmc
mov
addb
inc
test
inc
and
leave
mov
into
sti
aaa
dec
sti
cltd
inc
aaa
lcall
sti
mov
push
push
adc
bound
cmpsl
movsl
mov
lahf
test
roll
movsl
sub
jge
push
mov
fdivrl
in
outsl
xchg
mov
xor
pop
mov
ss
in
clc
out
and
pop
arpl
jmp
aad
cmc
sbb
jno
flds
mov
lcall
insl
jns
rcr
jns
pop
cmp
lcall
jns
rolb
mov
aaa
jne
out
dec
mov
scas
insl
orl
aam
or
xchg
dec
and
xchg
cmp
mov
pop
add
xor
pop
push
xchg
repz
in
jae
xor
sarl
jo
es
in
out
or
aas
icebp
sarl
push
int3
pop
not
rolb
pop
and
pop
mov
out
inc
cmp
pop
fisubrs
cmpsb
xor
push
dec
xor
xlat
xchg
push
cmp
or
arpl
les
rcr
cli
mov
or
add
and
scas
xor
sub
testb
dec
pop
call
pop
dec
xor
xchg
pop
adcb
sbb
xor
int3
add
fcmovnu
incl
in
lods
or
and
call
mov
and
pop
push
inc
in
dec
mov
pop
and
test
add
xchg
add
faddl
mov
push
cmp
test
add
mov
sub
pushf
iret
jmp
dec
push
decl
push
out
popa
rcrb
cmp
shr
fnstsw
add
sbbl
xchg
sub
inc
sti
push
mov
sbb
cld
xchg
cmc
stc
ja
or
daa
insb
rcrl
stos
sbb
ljmp
les
xchg
lret
sbb
mov
int
mov
jp
jae
push
pop
cmpsb
dec
and
push
dec
jae
and
and
xchg
idiv
dec
repnz
cmpl
and
mov
std
push
add
mov
les
xor
fnstcw
jmp
clc
cmp
mov
clc
loopne
sub
dec
imul
mov
add
fcmovu
dec
push
or
dec
pop
sub
adc
gs
fcoml
xchg
push
push
pop
ja
inc
mov
sahf
xchg
push
imul
pop
sub
jge
jnp
pop
inc
out
mov
enter
fcmovnb
dec
cld
imul
cltd
inc
out
fwait
cmp
dec
xor
pop
xchg
insb
sub
or
mov
dec
stc
push
push
shll
icebp
outsb
xor
pop
stc
mov
test
rcr
add
add
in
test
sub
xor
xor
sbb
das
mov
push
jl
lret
xor
xlat
jge
inc
cli
scas
mov
test
aas
loop
mov
imul
push
daa
inc
popf
mov
and
imul
xchg
xchg
adc
fnstenv
dec
mov
or
jo
popa
pusha
mov
mov
xchg
int
pop
cmp
gs
test
xchg
rorb
add
jbe
test
mov
cmpsl
and
clc
popf
ds
fstpt
and
cs
int
sbb
in
call
mov
repz
lret
imul
popf
movsb
pop
jge
iret
ss
mov
out
mov
test
mov
jne
xor
cmpsl
lea
test
push
xchg
repz
dec
xchg
std
mov
mov
and
aas
daa
arpl
sub
jns,pn
sbb
stos
sbb
mov
dec
sti
pop
sti
push
stc
mov
xor
sbb
ds
xchg
sahf
jmp
mov
jno
in
mov
sub
pop
lfs
inc
push
stos
nop
xchg
pop
or
fmuls
gs
cmp
fwait
push
push
jns
bound
push
fimull
push
push
out
xor
fbstp
dec
test
add
jl
pop
xchg
arpl
std
dec
into
aas
fldt
push
jne
lods
mov
push
shlb
pop
cmp
xor
lods
jle
xchg
and
pop
pop
push
call
push
dec
xor
push
stos
xchg
jmp
loope
push
lcall
mov
xor
ficoms
lods
inc
loope
or
cmp
out
xchg
mov
bnd
push
sub
jae
movsl
and
push
in
mov
popf
test
mov
cmpxchg
ffreep
sbb
scas
mov
imul
add
lcall
fcomps
nop
mov
inc
cmp
xor
sub
insl
or
flds
mov
bound
push
xchg
push
xor
jp
jmp
fwait
sbb
xor
xlat
mov
lahf
jbe
mov
addr16
jg
push
jmp
sbb
scas
mov
jecxz
add
pop
mov
fdiv
sahf
lcall
cmpsb
movsb
mov
push
stos
shl
mov
fs
pop
in
sub
roll
data16
inc
jle
inc
jo
fildl
sbbb
ss
inc
xor
loop
xchg
inc
xorl
inc
dec
call
test
hlt
mov
test
fidivs
stc
inc
push
cltd
and
sub
and
mov
pop
dec
repz
xchg
push
push
test
pop
call
stc
inc
ss
mov
aam
push
call
nop
push
mov
xor
addr16
shll
loope
pushf
xorl
sbb
data16
bound
push
and
inc
xchg
ror
popa
fdivp
mov
jmp
call
cmpsl
rorl
add
dec
add
sub
inc
call
divb
sbb
adc
mov
loop
push
mov
es
sbbl
lods
xor
dec
add
sbb
sti
iret
inc
xor
jle
inc
push
sbb
js
adc
ds
fwait
rcrb
xchg
frndint
pop
dec
mov
cld
arpl
mov
adc
inc
out
xchg
stos
data16
xchg
pop
ss
jl
jmp
sarl
inc
xchg
add
or
xchg
jnp
hlt
imull
cmp
sub
pop
addr16
xor
push
pusha
jno
stos
sbb
or
ret
mov
sub
jle
push
sub
ret
aad
add
leave
push
popf
push
lods
aam
stos
lcall
cmp
popf
cmp
jge
dec
dec
sub
cwtl
test
xchg
test
mov
psllw
popl
fwait
pop
mov
pushl
nopl
sti
mov
pop
push
clc
ljmp
outsb
cmp
mov
jecxz
push
pop
xchg
out
call
cmpsb
jno
mov
es
pslld
or
dec
insb
lea
push
pop
inc
jo
push
mov
jp
inc
push
insl
aaa
test
cmp
nopl
mov
adc
movsb
and
pop
out
shr
mov
cmp
cltd
pop
bound
cmpl
xchg
mov
add
dec
int3
mov
int
lret
jnp
mov
push
loope
jecxz
lcall
addb
cmp
mov
xchg
pop
popf
fwait
shr
sub
cmp
fidivs
pop
jle
mov
add
inc
sub
lcall
mov
das
push
dec
leave
sahf
fs
loopne
xchg
sub
xor
dec
mov
mov
push
jle
ret
jmp
sahf
cmp
rol
adc
xchg
jae
xchg
add
pushf
push
ja
jmp
mov
xor
test
pop
xchg
movsl
loop
push
fisubs
jecxz
inc
repnz
push
jg
push
sub
into
and
adc
scas
mov
xor
addr16
and
lods
and
std
daa
mov
mov
pop
fsts
rorb
js
lcall
cmp
loope
test
insl
sbb
mov
pop
lahf
pop
int
mov
stos
xchg
aam
lret
sub
mov
into
push
xchg
insb
or
sbb
test
inc
ror
imul
and
xor
xor
jbe
lods
imulb
ljmp
jns
xchg
xchg
and
js
js
into
sub
inc
lret
sahf
ret
in
push
or
addb
decb
popf
jmp
push
jle
xchg
data16
jne
test
inc
loop
and
in
jns
mov
pop
push
fwait
dec
pop
ss
out
mov
stos
inc
ljmp
jbe
pushf
push
ret
push
xor
inc
pop
ror
cmp
fwait
lahf
fadds
sbb
mov
sub
dec
je
int
push
jmp
jge
pop
push
inc
ds
xor
lock
pop
leave
mov
sbb
mov
repz
and
jb
dec
insb
rolb
popf
push
jle
aaa
mov
scas
rorl
cltd
cmp
ljmp
mov
cli
lret
iret
lret
pop
in
or
scas
mov
subb
lock
mov
mov
add
inc
mov
test
xor
mov
out
jb
js
mov
out
dec
call
xor
pop
in
cltd
jl
fdivrs
fistpl
mov
or
cmp
xor
add
inc
mov
cmp
cwtl
push
and
leave
dec
mov
loop
and
inc
jle
testl
cvttps2pi
sub
or
push
inc
data16
and
push
dec
paddsw
dec
push
pop
push
cmp
mov
fwait
stos
pop
stos
sub
inc
pop
pop
jge
nop
mov
loopne
mov
add
orb
loope
sub
cmp
fildl
jno
cmp
jo
lahf
and
data16
int
xchg
dec
cmp
lahf
stos
push
inc
push
sub
repnz
jecxz
hlt
adc
lret
sti
inc
mov
aad
aad
lods
test
scas
jo
sahf
rcrb
adc
aam
loope
pusha
mov
rol
jae
xor
mov
js
cmpsl
mov
and
das
adc
mov
xchg
and
fwait
jge
dec
cltd
fcomi
add
jmp
fcoms
mov
sub
dec
int3
imul
adc
jae
insb
call
inc
iret
inc
lock
cmpsl
pop
xchg
mov
or
mov
jl
repnz
lods
cmp
ficompl
loope
sahf
outsb
hlt
jnp
popf
push
jo
ret
add
repz
pop
std
push
inc
mov
xchg
push
arpl
test
shrb
test
cltd
aad
repnz
imul
cltd
xchg
and
sti
mov
add
add
add
mov
jmp
inc
cwtl
fnstcw
pop
fstl
add
stos
dec
xor
lret
mov
xchg
in
jecxz
mov
sbb
stc
mov
mov
pop
aaa
popf
rcll
pop
jp
cmp
inc
mov
xchg
shlb
mov
xor
jmp
jae
test
es
nop
das
inc
mov
lahf
in
xor
push
mov
fwait
out
jg
ficoms
stos
jmp
push
inc
mov
insb
repnz
lea
pusha
pop
sahf
sbb
sub
push
push
lret
lock
jle
aad
in
push
iret
cmp
fwait
jmp
inc
xor
or
adc
inc
insl
scas
xor
cwtl
cmp
and
testl
push
push
popa
push
inc
or
lret
mov
push
mov
sub
push
jbe
sub
pop
lds
mov
mov
sub
jp
aad
mov
add
cmp
and
lcall
dec
mov
js
or
pop
mov
xor
pop
std
cmp
dec
cmpsl
push
lods
inc
fldcw
sub
adc
sbb
cltd
imul
jb
or
mov
ss
inc
xlat
lcall
inc
jns
out
inc
cmp
add
aad
out
int
mov
movsl
sub
sbb
cs
adc
rol
hlt
lahf
cmpsl
sti
imul
xor
dec
mov
iret
in
pop
inc
pop
pusha
subb
sbb
sbb
shlb
je
mov
inc
insl
aam
nop
enter
push
loope
push
out
out
sub
std
in
xchg
add
lret
fwait
add
mov
inc
jns
cmp
into
arpl
mov
out
jge
cmp
mov
cmp
ret
incl
adc
popf
sahf
test
rclb
or
mov
movsl
cltd
mov
push
movsl
scas
fidivrl
cmp
test
mov
adc
lods
pop
pop
push
jne
mov
daa
pop
sbb
sub
jp
pop
add
mov
hlt
imulb
ja
popa
inc
sbb
dec
sbb
inc
sub
dec
sub
out
jae
inc
cmp
shrb
xor
push
ja
in
testb
imul
shl
mulb
addl
repz
les
aad
push
sahf
out
sbb
adc
out
enter
add
addr16
test
adc
arpl
xor
popf
bswap
and
out
push
rcrb
sbb
scas
pop
cmpsl
repnz
jb
push
call
mov
push
mov
clc
inc
test
add
xchg
and
sti
and
mov
cmp
push
fisubl
pusha
stos
aaa
in
sbb
sahf
and
and
mov
dec
xor
pop
mov
jnp
std
lret
cltd
dec
outsl
daa
pop
or
mov
es
in
sti
test
push
and
sub
jb
or
inc
and
cmp
sbb
mov
pop
xor
and
imulb
dec
ja
imul
and
ds
std
shlb
dec
cmpsl
arpl
sub
stc
push
ret
movsb
out
xor
icebp
pop
dec
add
fcoml
dec
mov
xchg
mov
jge
lret
sub
sub
sbb
push
adcl
not
push
jge,pt
push
adc
ss
push
mov
mov
sub
les
dec
xchg
dec
out
xchg
fidivrs
xchg
nop
por
arpl
jb
mov
and
lods
aad
and
mov
xchg
cld
inc
fbld
or
mov
push
sub
jno
idivb
inc
xor
or
stos
jp
cmc
sarl
out
aam
pop
arpl
es
cltd
push
and
iret
sbb
rcr
sbb
ljmp
mov
rcrl
push
xchg
rcrl
ss
push
pop
mov
adc
mov
int3
jp
xor
push
hlt
push
stos
mov
hlt
icebp
iret
hlt
and
jp
jo
mov
mov
movups
jno
dec
rcr
dec
rcrb
pop
or
pop
jecxz
aas
test
add
xor
add
dec
sub
xor
cmc
xor
fists
dec
movsb
cmp
push
xchg
movsb
fiaddl
xlat
in
cld
push
fbld
jns
sbb
push
adc
mov
adc
mov
hlt
xlat
dec
jle
fyl2xp1
int3
rolb
sub
test
jg
shlb
mov
xchg
lret
out
sbb
adc
fcmovnu
pop
xor
sub
mov
fcmovnbe
xchg
xchg
mov
xchg
movsb
hlt
lock
call
jp
cmc
rcrl
dec
and
mov
push
adc
push
jecxz
mov
stos
pop
sahf
in
lcall
fimull
jg
xor
dec
movsb
push
dec
xchg
mov
loopne
inc
or
push
sub
adcl
adc
jmp
shll
iret
xor
mov
push
adc
push
xchg
int3
popf
inc
dec
push
imul
jnp
xchg
fldenv
ret
add
lret
mov
stc
jo
and
mov
jge
push
dec
sti
mov
inc
and
or
mov
cmp
subl
jecxz
cltd
inc
les
fisttpll
inc
aaa
sub
cs
out
pop
js
movsl
push
js,pn
mov
iret
sar
mov
jmp
push
std
test
int3
pop
xor
push
xchg
stc
f2xm1
clc
mov
and
push
jb
shrl
inc
mov
aaa
adc
das
dec
xchg
push
jbe
lahf
push
testb
xchg
gs
mov
testb
pop
push
loopne
aam
cwtl
int
mov
inc
ss
cbtw
ss
ret
adc
sub
sbb
xchg
test
push
dec
jl
stos
jle
lret
aaa
int
jp
out
mov
push
icebp
lcall
jbe
dec
pusha
cmp
repz
je
dec
add
dec
mov
lock
dec
push
add
push
sbb
sub
test
dec
cld
mov
roll
jne
mov
or
xchg
and
gs
jnp
push
push
sbb
lahf
popf
lds
adc
xlat
fcomp
adcb
mov
mov
mov
or
mov
pop
pop
inc
jg
cld
iret
xor
push
loopne
sbb
leave
sub
mov
inc
xor
adc
enter
scas
adc
ret
movsb
or
stc
repnz
fnstenv
or
dec
in
cmp
or
push
cmc
fdiv
loop
out
inc
scas
sbb
mov
insl
cmpb
ljmp
dec
sbb
fistpll
add
cli
subl
cmc
jnp
jns
xchg
mov
xchg
fwait
adcb
adc
in
jbe
ret
rolb
loop
mov
stos
inc
and
addr16
mov
pop
cs
mov
cwtl
mov
mov
add
js
or
aas
stc
sbb
sbb
ficomps
mulb
push
pop
xor
cld
push
and
inc
xchg
outsb
je
mov
les
inc
cld
mov
or
xchg
repz
mov
xorb
pushf
lds
push
push
roll
iret
push
xchg
xor
test
and
and
rorl
je
aad
hlt
cmpxchg
arpl
jns
sub
jo
push
jno
cmp
cmp
mulb
xchg
icebp
cmp
jbe
or
adc
adc
movsl
ds
cmc
mov
stos
sub
shrl
pop
fwait
jo
aad
clc
scas
push
jle
dec
push
imul
push
or
ja
mov
cmpsb
rcll
pop
xchg
in
pop
mov
add
push
push
insl
lret
xor
push
sbb
cmovae
pop
and
cmpl
and
int
jp
add
dec
add
js,pt
out
js
loopne
xchg
loope
stos
mov
lret
jp
out
sbb
mov
ljmp
mov
in
and
outsl
cmpsb
call
pop
add
movl
push
push
fwait
popf
shl
hlt
addr16
idivl
daa
sbb
mul
shlb
cli
rcr
cmc
loope
lahf
cli
or
call
cmp
iret
add
stos
mov
or
popfw
jecxz
nop
pop
notb
ficoml
mov
adc
aam
jecxz
sub
in
lods
xlat
mov
cmp
mov
cmpsl
sub
xchg
aam
clc
add
push
mov
pop
inc
mov
pusha
mov
sti
imul
jnp
pop
mov
cli
sbb
int3
adc
cmp
arpl
adc
mov
std
daa
mov
in
jo
out
loop
mov
std
sbb
fbld
std
sub
and
cwtl
mov
das
push
imul
push
fildll
or
lahf
sub
js
lret
jne
aas
sbb
mov
orb
xor
cmp
or
lret
mov
mull
dec
ss
and
sbb
push
out
or
enter
out
and
sbb
inc
mov
xchg
test
adc
pushf
push
push
mov
mov
xorb
sbb
mov
hlt
cmp
in
cmp
push
das
int3
push
sahf
dec
scas
jl
mov
mov
repz
add
cmp
ds
xor
lea
mov
cmp
gs
cmp
inc
xchg
insb
fisttps
repz
push
fbstp
inc
imul
ljmp
xchg
inc
pusha
push
add
cli
fsts
leave
mov
lret
fsubl
sbb
into
jge
or
popf
wbinvd
push
sbb
mov
dec
or
pop
mov
cmp
push
movsl
jmp
das
jg
dec
pop
out
xorl
push
cmp
cmp
and
dec
cmp
call
fsubrl
test
mov
push
out
mov
fsubrs
or
repz
xchg
lock
cwtl
into
push
insb
leave
or
xchg
mov
mov
cwtl
ret
cltd
scas
mov
pop
cld
pusha
imul
popf
and
popf
enter
popf
repz
repnz
mov
cwtl
jns
aad
and
mov
cmpsl
pop
loopne
data16
jne
fmull
push
inc
imul
insl
ret
shrb
or
leave
xor
mov
lcall
lcall
jg
push
ds
loop
jns
xor
repz
mov
cmpsl
xchg
xchg
sbb
sbb
aam
mov
lcall
xchg
xchg
loope
pusha
xlat
in
test
aam
call
sbb
cmp
insl
cmc
fwait
call
call
mov
test
in
fisttpl
mov
sub
es
lds
lcall
xor
cs
daa
lods
push
sbb
lcall
push
stc
out
push
mov
dec
rol
xchg
xor
mov
dec
xor
and
push
leave
fisttpll
aaa
es
mov
and
and
add
add
dec
adc
mov
mov
out
jle
ss
mov
repz
jl
rcrl
shrl
scas
dec
inc
inc
stos
sbb
cmp
shlb
dec
stc
scas
mov
and
shrl
cmp
xor
inc
adc
std
push
pusha
scas
fldl2e
xor
push
xor
int
andb
fwait
mov
in
dec
testl
lea
dec
pop
cmp
dec
jbe
dec
loopne
nop
insl
mov
adc
es
or
mov
es
stos
pop
inc
jge
decb
lea
push
test
aam
dec
lods
fnstcw
pop
rorl
sbb
loope
lds
rcll
lcall
mov
mov
std
loope
mov
mov
loop
in
jae
mov
add
cmc
int
imul
cwtl
sti
mov
fildll
dec
inc
jne
push
ret
jecxz
sub
or
lcall
pop
adc
dec
ljmp
mov
push
nop
dec
adc
adc
push
ss
adc
fidivl
push
push
jg
ret
scas
cmp
sbb
dec
push
lods
mul
clc
scas
inc
cwtl
imul
aaa
mov
inc
cmp
call
xor
xlat
out
xor
push
pushf
xor
mov
outsl
sub
cmpsb
ret
pop
test
cmp
mov
cmpsb
sbb
fstps
inc
push
mov
cli
dec
addr16
scas
ficoml
add
into
and
les
sbb
fbstp
xlat
outsl
fsub
push
mov
dec
mov
xchg
lahf
sbb
in
test
jmp
jl
mov
js
mov
ljmp
andb
js
or
cmpsl
mov
stos
jmp
sbb
xlat
jge
nop
rcl
into
push
cmp
pop
xchg
ss
push
cmp
repz
pop
xchg
js
push
push
lock
jmp
cmpsl
in
sbb
inc
testl
bnd
push
push
sbb
sbb
test
call
out
rcll
hlt
test
icebp
mov
sbb
lds
js
pop
push
dec
jo
fimuls
mov
scas
jb
fsin
pushf
ja
and
shlb
fistpll
out
test
pop
cmp
and
jp
hlt
frstor
cmp
dec
push
ljmp
add
in
lods
sub
push
rorb
xchg
lock
outsl
or
hlt
fwait
sbbb
in
int
jmp
mov
hlt
sbb
test
xchg
and
lahf
jl
addr16
cs
lods
xorb
or
loop
cmc
loop
add
lret
seto
pusha
out
shl
mov
outsb
mov
xchg
add
inc
lods
jg
lock
push
pop
enter
addr16
mov
cmp
adc
push
or
in
int
lcall
pop
push
leave
adc
lret
add
push
imul
ja
sbbb
mov
pop
mov
mov
jmp
fistps
mov
xchg
cmp
sbb
aad
std
xchg
lock
mov
push
sbb
lret
cmp
sti
aam
movsb
or
stos
cmp
pop
jmp
pop
lcall
ret
fiaddl
dec
mov
out
add
inc
iret
mov
sbb
dec
aaa
inc
fucomp
insl
pop
xchg
fs
sub
sahf
dec
lds
ficompl
or
pop
test
outsb
or
ss
leave
lahf
sbb
adc
in
add
cli
dec
jl
inc
testl
mov
dec
sar
ja
sub
mov
out
mov
mov
adc
ljmp
inc
lods
cmpsb
sti
sub
scas
pop
out
mov
push
mov
fimuls
jecxz
pop
les
shrb
movsl
insb
addr16
nop
cwtl
jnp
jge
jp
lcall
imull
cwtl
mov
mov
sub
out
jp
jno
call
jno
int3
pop
roll
cmpl
cmp
dec
cmp
popf
sub
mov
int
sbb
lahf
cmp
inc
add
rorl
sub
and
enter
int
jo
movsl
pusha
rcrb
sub
push
enter
fs
rclb
adc
enter
lcall
jnp
repz
stos
xor
sahf
sub
pop
fs
and
popl
mov
mov
pop
arpl
lret
push
call
pop
mov
push
add
jne
xor
ficompl
xchg
outsw
sti
imul
push
stc
jbe
xchg
into
push
mov
mov
out
cld
jg
enter
push
std
pop
sbb
or
xchg
push
mov
adcl
push
sub
andl
xor
mov
popf
nop
out
jns
jmp
cli
adc
outsb
add
push
inc
inc
out
mov
add
scas
jb
mov
lods
lahf
sbb
seto
push
bound
test
push
jne
mov
in
call
cmpsb
test
inc
mov
jnp
sub
cmc
repnz
cltd
cmp
loope
incb
jmp
adc
dec
lds
ret
pop
and
mov
cmp
lods
or
arpl
pop
imul
jge
sub
add
cmp
je
mov
test
cli
dec
fcom
cmpsb
and
in
cmp
jae
dec
sahf
or
sub
mov
or
xchg
pop
sub
mov
mov
adc
shrb
jae
repz
testb
cmp
mov
push
loope
je
ss
or
rcrl
mov
fistl
push
std
stos
int3
stos
ja
cld
jmp
cmc
mov
lock
rcrb
sbb
dec
loope
mov
inc
imul
mov
add
insb
outsl
lods
jmp
lret
adc
jmp
mov
fstps
in
inc
decl
sub
loopne
cltd
test
dec
leave
dec
mov
cld
jnp
xor
push
lea
fldl
pop
inc
test
pop
dec
mov
insb
test
andb
adcb
xchg
xchg
jle
shl
inc
mov
fldt
insl
addr16
pop
divl
and
and
fcoml
es
jno
xor
jecxz
mov
popa
loopne
xchg
insb
lcall
sbb
xchg
bound
xchg
cld
ret
lahf
pop
aad
mov
movsb
clc
lock
dec
mov
shll
mov
fisttpll
push
and
inc
iret
sbb
cmp
cli
fs
out
jmp
jp
ss
clc
inc
push
repnz
jl
icebp
cmp
jns
arpl
aaa
adc
repnz
xor
int3
or
neg
and
jp
mul
aas
mov
fdivrl
mov
das
pop
cmpsl
out
jmp
movsl
add
xchg
ss
imul
xor
cmpsb
lock
push
xchg
pop
mov
jmp
ss
jb
loop
cmp
jo
daa
js
enter
enter
xor
xlat
rclb
dec
or
stos
lahf
jo
mov
dec
fs
lahf
pusha
loop
sub
mov
sbb
sbb
rcrl
call
scas
movsl
push
mov
cmp
dec
stos
push
enter
sub
cmp
push
dec
insl
js
shl
fcomip
push
in
loopne
std
pusha
mov
je
push
pop
cmp
insl
xchg
sub
xor
xchg
sahf
out
mov
mov
add
pop
dec
push
sub
inc
mov
iret
xchg
outsb
dec
mov
jb
sub
cltd
clc
sub
fwait
sub
stos
and
sbb
sti
outsb
jnp
or
loope
das
sub
sub
mov
pop
jno
sbb
mov
cmpl
lods
daa
pushf
lods
pop
icebp
popf
stos
sbb
cs
into
jmp
push
push
mov
sub
mov
lods
mov
dec
shld
sub
mov
mov
push
and
test
cmp
popa
push
iret
cs
xor
inc
leave
mov
aam
xchg
adc
pop
mov
and
pop
mov
inc
cwtl
mov
sbbl
mov
out
repz
add
xchg
subw
cs
fs
mov
fists
test
pop
cmp
aad
mov
cli
sbb
sub
add
popf
or
mov
jl
dec
sbb
or
daa
mov
sbb
inc
out
fisubrl
insl
scas
enter
icebp
mov
pop
xchg
cld
std
ss
inc
gs
jns
cli
jge
xor
xchg
clc
int
imul
jns
sbbb
push
mov
cmp
dec
cmp
jle
outsl
jle
cmpsl
mov
ljmp
mov
and
jge
daa
repnz
aaa
xor
out
inc
sbb
enter
test
rol
add
xchg
mov
sbb
cwtl
outsl
mov
test
cld
int3
mov
imul
sub
or
cmpsl
dec
repnz
int
pusha
mov
mov
lcall
and
test
add
push
jbe
mov
or
hlt
push
mov
cwtl
out
fldl
lahf
pop
add
cs
dec
push
out
jae
daa
jbe
push
in
arpl
ljmp
ret
sub
push
add
add
pop
sbb
mov
cmpl
dec
pop
mov
out
mov
pop
cmpsb
push
test
or
sar
subb
add
outsl
push
dec
or
cmc
cmp
clc
cmp
test
dec
push
divb
or
mov
cmp
ret
adc
or
mov
and
pop
jmp
adc
call
jmp
cmp
jns
cmp
out
pop
pop
int
lods
pop
lods
add
outsb
inc
mov
es
rcrl
lret
sub
push
mov
in
fildll
pop
jae,pt
out
ja
or
scas
add
dec
push
mov
rcrb
push
insb
adc
jno
iret
dec
xor
sbb
adcb
jecxz
cld
loopne
or
mov
push
mov
mov
movsl
inc
sub
notb
xchg
xchg
stc
pop
sbb
inc
movsb
and
sbb
stos
int
ja
shrl
xchg
sub
mov
add
adc
and
xorb
lea
mov
test
cmpsl
stos
shrl
aam
jmp
jns
xorl
xor
adc
dec
call
mov
cmpsb
testl
xlat
jno
inc
icebp
mov
aas
stc
or
fstl
vandpd
in
cmp
xchg
mov
ficoml
pop
adc
jecxz
add
inc
imul
rclb
push
scas
aam
and
lds
in
xlat
pusha
iret
out
mov
mov
dec
test
into
fildll
decb
jo
loop
push
push
scas
xchg
mov
mov
mov
sahf
arpl
add
nop
push
mov
mov
mov
inc
add
push
mov
inc
in
mov
es
fs
and
add
sub
in
out
add
ds
and
fcmovnb
lods
fcomp
aaa
jo
pop
push
jge
cmp
xorb
jbe
jmp
cmp
sarl
inc
jl
das
push
mov
pop
inc
mov
addr16
ret
sbb
faddl
repnz
fsubl
xchg
fmuls
leave
push
fistpl
outsb
aas
sbb
push
ficompl
inc
in
into
adc
fidivl
lret
mov
lahf
mov
scas
movsb
outsb
fstpl
fwait
xor
fs
test
push
in
shl
mov
shrl
adc
stos
push
mov
cmp
and
mov
mov
inc
nop
or
dec
out
add
loope
mov
pop
sub
icebp
lods
mov
or
das
js
mov
test
popa
mov
mov
das
repnz
fidivs
je
pop
pop
pusha
mov
stos
pop
iret
into
cmp
adc
mov
mov
dec
pop
stc
stos
mov
xlat
xchg
cld
mov
subl
or
mov
hlt
pop
push
shlb
insb
cmp
punpcklbw
push
mov
fwait
mov
nop
xchg
test
out
mov
xchg
sbb
ja
jmp
cmpsb
fbstp
mov
test
xor
outsb
mov
jnp
inc
sub
mov
xorl
push
fcompl
jg
xor
das
data16
pop
rcll
push
inc
lss
push
and
xor
out
xor
sahf
fidivrs
lcall
xor
xlat
les
jno
mov
push
inc
insb
mov
or
xor
movsw
aas
in
ja
jmp
or
andl
lea
imul
stos
xchg
xchg
mov
xchg
pop
sub
push
push
mov
movsb
xlat
add
stc
fcompl
rorl
and
sub
loopne
sub
cmp
imulb
pop
push
sub
push
faddl
insl
andl
and
lcall
rcl
or
das
push
cmpsl
rorb
push
push
movsl
in
xor
lods
xlat
sarb
mov
popf
inc
dec
mov
cwtl
out
and
ret
popf
jg
push
dec
loopne
dec
aam
imul
jl
fcomps
lcall
inc
imul
pop
popa
pop
arpl
mov
and
pop
mov
adc
pop
adc
incb
out
cmc
outsl
cmp
ret
les
and
xchg
sub
jge
test
out
es
mov
jbe
imulb
sbb
test
mov
ss
push
adc
xor
xor
mov
sbb
scas
xor
lahf
sub
insb
adc
sub
or
mov
mov
and
or
mov
out
cmp
mov
dec
call
xchg
icebp
push
adc
ss
mov
enter
add
xchg
mov
stos
into
or
outsb
add
or
loope
xor
mov
fs
or
inc
test
pop
cmc
test
sbb
xlat
clc
push
repz
adcl
xchg
pop
inc
mov
ja
lahf
int
or
jmp
out
es
cmp
arpl
in
mov
cli
cmc
xlat
jae
mov
sahf
mov
mov
repnz
lcall
cli
adcb
jge
push
rorl
jb
xlat
xlat
push
add
jg
loope
lock
test
popa
imul
imul
or
mov
push
and
and
add
cltd
lcall
push
mov
neg
adc
and
mov
jbe
jo
sbb
pusha
ds
mov
dec
xor
adc
rcrl
lods
int3
mov
lods
lret
sbb
popf
cmpsb
out
lods
add
in
in
pop
mov
hlt
repz
sarl
mov
loop
rol
out
je
mov
popa
pop
dec
pop
mov
insb
data16
aas
or
cmp
mov
test
sbbb
sub
out
pop
std
sbb
sahf
sbb
mov
pusha
ja
xchg
push
mov
ja
mov
lock
sub
insl
sub
xchg
dec
push
inc
nop
inc
pop
xor
xor
or
mov
daa
sbb
les
add
dec
jmp
xchg
sbbl
js
lds
add
mov
inc
push
sti
outsl
pop
inc
cmp
jbe
jno
dec
scas
dec
jne
shlb
pop
xchg
and
dec
mov
xchg
ret
lods
mov
xchg
jbe
mov
fst
sub
cmp
or
mov
in
gs
push
mov
loopne
call
in
cmp
inc
pop
cmp
loope
test
mov
xor
mov
subb
mov
arpl
push
arpl
repz
or
lret
and
incb
sub
stc
dec
test
fsts
icebp
imul
and
rcll
mov
das
ljmp
and
addr16
mov
fadd
cmp
mov
jmp
jno
daa
jae
repnz
pop
pop
cli
out
in
mov
or
mov
xchg
sti
loopne
cli
popa
movsb
inc
cmc
dec
pop
ljmp
jmp
mov
dec
xchg
xchg
sbb
xchg
mov
and
cmp
mov
fcomps
dec
xchg
push
bnd
cld
mov
pop
popa
cltd
cltd
test
dec
fbstp
add
cmp
addr16
ficoml
mov
inc
aam
or
aad
push
hlt
mov
out
xor
aad
push
mov
repz
in
sbbl
inc
jp
xor
cmpl
or
push
push
pop
sub
fsub
cmp
inc
scas
repz
and
pushf
icebp
xor
call
xchg
or
in
stos
push
pushf
fcmovne
sub
xchg
or
pushf
lcall
mov
fs
add
repz
ret
xchg
pop
lcall
jl
aaa
ljmp
jnp
xchg
mov
adc
xchg
lahf
test
incl
add
fistpl
daa
dec
dec
in
jge
fstp
out
mov
xchg
out
mov
mov
aad
inc
mov
add
mov
pop
pop
or
test
std
pop
push
pushf
push
mov
and
jmp
mov
movsl
mov
dec
mov
adc
sub
push
fiadds
sub
sbb
inc
mov
xchg
getsec
and
pop
add
pop
sbb
xchg
xlat
xchg
mov
and
push
insb
popa
repz
iret
popa
divl
enter
iret
fldln2
fcoml
shlb
dec
sbb
lds
in
adc
sub
lock
fsts
scas
clc
adc
jno
sbb
dec
and
mov
pop
int
lret
xor
dec
repz
icebp
add
and
sub
fwait
clc
fisttpl
mov
lods
lcall
scas
mov
pop
mov
lods
outsl
dec
mov
push
push
lcall
or
cmpsb
imul
push
dec
test
mov
ds
fiaddl
fwait
sahf
cmp
mov
and
adc
push
jo
inc
pop
or
sbb
mov
into
leave
pop
jmp
aam
mov
sbb
pop
mov
xor
add
inc
sub
mov
hlt
push
pop
push
inc
and
in
repz
lods
cltd
gs
pop
xor
test
jnp
sbb
mov
sub
loopne
cmpsl
shl
jnp
inc
and
mov
pop
cld
xchg
xchg
movsl
data16
xchg
cmp
pushw
loope
movsb
decb
ljmp
mov
clc
inc
daa
jbe
push
int3
mov
add
and
inc
adc
sub
xchg
cmp
pop
and
and
pop
daa
sbb
push
xor
cmp
std
inc
jno
in
jb
cmp
fcoms
outsb
fldt
adc
sbb
inc
negb
cld
fdivl
sub
arpl
pushf
mov
push
stos
insb
xor
out
mov
sbb
or
les
sub
call
pop
jmp
xlat
xchg
jmp
loopne
adc
jne
jp
push
pop
inc
les
cmp
push
mov
dec
jp
xor
cmp
inc
mov
pop
and
sub
cli
cs
sbb
push
and
cmovnp
cwtl
arpl
push
inc
lret
stc
xor
fistl
sbb
jl
mov
mov
cmp
addr16
inc
jne
sti
loopne
mov
cmpsl
jno
cmp
jbe
rolb
cmp
and
jmp
adc
das
enter
mov
xor
add
arpl
adc
int
xor
leave
inc
push
lds
jns
aas
cli
bound
xlat
dec
shr
scas
sub
add
rcr
sbb
sbb
loopne
sub
movsb
dec
nop
cmp
mov
aas
iret
aam
add
add
insb
dec
inc
push
clc
in
inc
movsl
popa
adc
test
in
outsb
pop
ret
aam
push
push
insb
outsb
pop
pushf
test
push
jmp
je
daa
cmpsl
daa
dec
lock
dec
daa
add
xor
push
fistpl
adc
repnz
and
push
sbb
in
nop
inc
push
add
stos
lods
pusha
mov
jne
fisubs
inc
jl
add
jg
adc
daa
and
insl
lret
js
mov
sbb
scas
pop
jae
mov
and
lods
or
sbb
sbb
sarl
mov
les
mull
sub
orb
push
mov
cs
push
inc
fsubrs
sbb
xor
hlt
fsts
sarb
popf
mov
jg
add
sbb
and
in
popf
xor
mov
jbe
ja
xchg
jmp
add
add
fistpl
push
aaa
jg
mov
loop
pop
mov
xchg
adc
add
ds
pop
mov
bnd
mov
or
and
and
mov
cld
adc
adc
jecxz
testb
hlt
mov
loope
repz
data16
pop
dec
neg
aas
in
or
jge
decb
lods
and
jns
sti
ss
xor
incl
adc
int3
pushf
xchg
test
push
fsubs
push
mov
gs
adc
mov
das
cmp
aaa
out
add
dec
aam
cmpsl
bswap
push
push
mov
mov
add
or
jb
add
add
aam
push
and
insb
mov
aas
mov
mov
fisttpll
jge
xor
pop
mov
mov
clc
add
push
cmp
jle
adc
pop
data16
in
pop
pop
lahf
mov
jns
addb
xorl
jbe
mov
mov
jne
pop
outsl
sbb
dec
or
sub
sahf
cmp
inc
xchg
push
into
or
jne
repnz
icebp
shll
or
adc
int3
xor
in
js
mov
push
sub
push
in
cmpsb
shr
in
xchg
push
pop
jbe
lea
sub
negb
dec
outsl
das
loope
fsub
out
push
mov
xor
aaa
lods
mov
sub
xor
scas
xchg
push
sbb
dec
outsb
push
xchg
xchg
jb
inc
pusha
je
dec
xor
add
pushf
outsb
cmc
jb
insb
out
sbb
test
gs
or
gs
jg
jecxz
mov
mov
pop
pop
repnz
dec
cmc
fdivp
sub
scas
xor
out
mov
stos
mov
lret
push
jbe
fcompl
push
cmpsl
mov
les
imul
xor
fcoms
in
pop
push
xor
push
xchg
sbb
jb
negb
leave
xorb
or
mov
dec
push
cwtl
ds
shrb
adc
cmp
inc
push
inc
inc
sbbl
mull
adc
inc
mov
loop
lods
push
es
outsb
cmp
jbe
ljmp
or
gs
inc
or
xchg
dec
shll
dec
jmp
iret
daa
push
dec
scas
or
push
sbb
sti
jne
jne
mov
mov
inc
addr16
sbb
ds
mov
or
scas
data16
sbb
mov
jns
and
lret
pop
push
es
in
cmp
fs
sbb
jb
hlt
data16
adc
mov
mov
cmc
xchg
mov
jns
mov
jecxz
dec
pusha
push
jae
xor
pushf
and
scas
sbb
or
dec
cmp
test
mov
stos
cld
shrb
loope
xchg
and
mov
or
or
cmpl
scas
inc
enter
push
clc
mov
or
xchg
enter
ljmp
in
insb
add
mov
inc
mov
cwtl
arpl
adc
and
aaa
fists
aad
mov
test
xchg
pop
cmp
push
call
push
cmpsb
sbbb
cmp
adc
sbb
mov
jle
push
stc
lock
iret
fisubl
outsb
xchg
jae
pop
mov
adc
sbb
xchg
mov
data16
jecxz
add
addb
dec
sub
lds
pop
repz
adc
ss
fldl
xchg
push
push
es
jns
ss
adc
cwtl
mov
lds
pop
xchg
jmp
int3
jns
loope
aaa
mov
nop
jmp
movsl
mov
sub
mov
jl
fwait
ret
into
and
ret
sar
movsb
mov
jmp
sbb
jnp
gs
mov
in
jne
cmp
jb
jge
mov
rcll
push
bound
lock
std
cs
push
imul
mov
fcompl
out
aas
clc
push
or
cmp
les
add
add
mov
popf
mov
inc
pop
dec
scas
inc
adcl
xor
leave
lret
std
or
cmp
sub
cmpsl
jo
ffree
ja
dec
push
push
stos
icebp
inc
jmp
stos
stos
ss
push
or
nop
fnstcw
push
xchg
push
outsl
out
addb
cli
add
outsl
dec
fsqrt
out
or
mov
data16
adc
or
lea
andl
cmp
xchg
xchg
les
adc
inc
scas
pop
sub
jbe
fstpt
out
inc
xlat
push
int3
test
cmp
push
jnp
rcll
mov
push
cmp
repnz
jmp
lds
cmp
cmc
mov
push
pop
adc
ja
insl
adcb
inc
hlt
dec
jno
rcr
jnp
aas
fdivs
inc
or
pop
push
jmp
adc
dec
jmp
sbb
sbbl
lods
jmp
dec
xchg
jecxz
out
pushf
sbb
sbb
lods
sub
inc
ja
aaa
jle
arpl
aaa
xchg
outsb
cmpsl
cmp
call
insb
jae
xor
lods
hlt
out
push
cmp
mov
out
cmp
push
push
push
ret
ficoml
les
jo
js
mov
out
in
loope
icebp
pop
int3
fmul
dec
data16
insl
sbb
dec
pop
adc
pop
add
adc
clc
push
jl
push
test
addl
adc
mov
daa
lds
jne
out
sbb
xchg
rolb
gs
jo
inc
mov
xor
sahf
jnp
jne
xchg
and
arpl
cmp
or
mov
andl
in
xchg
cwtl
aas
repnz
sarb
dec
jbe
xor
cmpsb
mov
mov
movsl
enter
add
stc
dec
fdivrl
jno
jbe
cmp
or
into
inc
mov
pop
pop
inc
out
roll
pop
xchg
roll
or
dec
test
js
push
jle
dec
inc
movsb
dec
mov
xor
push
mov
push
sub
test
lea
pop
jae
cmc
ljmp
aad
push
fstps
and
pop
shll
mov
push
xchg
jb
nop
inc
lcall
stc
adc
cmp
int3
jmp
test
push
iret
pusha
es
imul
fsubs
imul
call
addr16
cmpsl
cltd
outsl
andl
add
sub
xchg
inc
stos
pop
decb
mov
repnz
scas
inc
into
cmpsb
pop
jnp
stos
mov
pop
stc
and
lret
lods
push
popf
es
das
sbb
loopne
pop
add
ja
popa
push
addr16
cmp
xor
movsb
pusha
cmpsl
movsb
leave
sbb
hlt
lods
xchg
push
mov
inc
pusha
lods
pop
and
movsl
inc
pop
push
pop
mov
and
adc
iret
dec
inc
cli
pop
sub
jmp
in
lret
jbe
or
pop
push
xchg
shr
out
stos
bound
push
loope
xor
leave
pop
lret
outsl
bnd
sub
pop
lcall
xor
adcb
in
pop
cmp
mov
cmpsl
outsb
jmp
andb
lret
leave
pop
xor
leave
fdivl
sub
popf
mov
rcll
adc
xchg
not
pusha
leave
xchg
out
sahf
inc
decl
outsb
push
int3
dec
loope
int
leave
lahf
mov
mov
ret
call
enter
mov
cmp
mulps
add
mov
testb
mov
push
adc
push
fisttpl
lcall
jnp
xor
ja
lock
ret
lcall
into
jmp
adc
in
addr16
iret
nop
cmpsb
js
cs
lea
xchg
push
lods
sarl
jle
fists
ss
or
ret
loope
enter
dec
enter
shrb
out
icebp
xchg
inc
imul
mov
fldl2t
stc
lahf
jne
jl
cli
jnp
clc
push
adc
and
pop
fldcw
lock
inc
nop
daa
jp
filds
es
add
ja
or
xchg
sub
pop
popf
test
sbb
adc
jne
dec
adc
frstor
pusha
aaa
jl
int3
fldln2
and
daa
iret
aad
inc
test
pop
sub
data16
add
add
jb
sti
fwait
jecxz
sub
mov
shll
movsb
mov
sbb
push
stc
popl
ficomps
loope
into
inc
mov
out
hlt
push
adc
fists
aas
xchg
adc
movsb
rcrb
add
jb
lcall
popa
mov
cmc
sbb
cmp
inc
addl
inc
xor
pop
push
push
ja
add
dec
in
and
ret
lods
mov
mov
lock
adc
in
test
loop
adc
je
xlat
or
cltd
lods
pusha
push
dec
xor
pop
mov
sahf
jge
lahf
mov
pop
push
mov
push
xor
mov
adc
mov
mov
int3
fisttpl
fstps
aaa
lods
pusha
mov
aam
fdiv
insb
add
add
xor
in
in
outsb
jp
mov
shll
inc
inc
dec
xor
sub
hlt
xor
lcall
and
test
mov
xor
push
xchg
xchg
ds
aaa
push
cli
test
mov
cmp
xor
test
sub
mov
fwait
int3
fcmovnbe
jne
pop
dec
enter
dec
cmpsl
or
add
push
jmp
or
mov
pop
test
dec
cmp
mov
lods
shll
xor
mov
jmp
push
mov
jns
and
jb
cwtl
mov
iret
jecxz
ds
movsb
add
xlat
sahf
loope
clc
mov
jg
mov
sbb
lret
jnp
and
jecxz
shl
jmp
and
pop
arpl
insl
pusha
jle
aaa
xchg
gs
addr16
sarl
ds
cmpsl
loopne
xor
lea
dec
pusha
arpl
jno
int3
pushw
jo
setb
adc
int3
divl
ss
popa
leave
sbb
push
adc
sub
push
or
jcxz
jg
mov
push
rorb
data16
add
insb
aam
or
inc
mov
or
cmp
cmpsb
xlat
cli
movsb
js
scas
ss
xor
gs
jp
out
mov
insl
aad
push
inc
sbbb
cmp
jmp
pop
stos
lret
xchg
dec
fyl2x
and
fstpl
xchg
sub
sbb
ljmp
mov
and
mov
addl
cmp
cmpsb
adc
mov
dec
loop
mov
and
gs
jle
das
mov
aam
ret
mov
jnp
subb
jg
faddl
cwtl
not
imul
add
popf
adc
mov
adc
lret
adc
pusha
or
sbb
sbb
xchg
or
ss
and
or
jne
iret
adc
cmpl
jns
cmc
mov
mov
mov
mov
xchg
aas
imul
clc
inc
outsl
jo
mov
cmc
adc
nop
push
into
xor
hlt
xchg
daa
xchg
insl
adc
mov
in
dec
std
xchg
xor
sbb
icebp
jle
pop
leave
push
icebp
mov
add
mov
inc
cmp
and
ss
ret
hlt
icebp
jae
cmp
lds
cld
dec
mov
or
or
test
mov
pop
push
orb
cmp
xchg
leave
mov
pushf
xchg
test
or
xor
cmpsb
mov
cwtl
stos
shll
or
testl
movsb
orl
daa
test
xor
cmp
and
push
cmp
or
in
inc
and
dec
fs
and
sub
inc
in
jecxz
mov
stos
sbb
xor
repz
shr
notb
cmp
fwait
xor
jle
jg
push
or
cwtl
or
subl
sub
es
lahf
in
stos
sbb
xorb
aam
push
cld
or
es
sbb
sbb
pop
add
in
mov
popa
outsl
iret
jecxz
jns
pop
mov
dec
mov
ficomps
sbb
mov
leave
aam
cli
adc
pop
xor
cmpsl
push
pop
push
jns
ret
data16
xchg
popa
adc
in
ja
push
cmp
and
rcrl
imul
aaa
push
scas
mov
rep
lods
mov
pop
cmp
mov
aad
movsb
lcall
outsl
jns
sbb
push
mov
jg
imul
insl
inc
out
add
lods
inc
ret
sahf
xchg
testl
cmp
jbe
push
add
gs
test
jecxz
enter
sbb
push
cmc
scas
aad
jnp
scas
and
shll
ljmp
pop
mov
daa
jnp
data16
in
sbb
jge
gs
popf
sub
cmc
fcomps
mov
inc
out
incb
pop
nop
imul
inc
xchg
roll
popl
fnstenv
imul
jmp
jno
fdivl
pop
ds
in
insl
mov
push
add
lock
fs
xor
fistps
loop
mov
or
popa
popf
adc
adc
mov
cmpsb
cmc
daa
leave
loop
imull
sbb
mov
xor
mov
adc
imul
push
cltd
out
mov
inc
xchg
add
xor
pop
cwtl
fadds
inc
cmc
pop
jbe
pop
pop
cmp
or
bound
notl
aad
push
sub
sbbb
jo
cmp
js
push
rep
arpl
mov
pusha
icebp
dec
jno
cmpsb
dec
cmp
xchg
into
or
cld
add
repz
mov
int3
aam
fs
jnp
or
xlat
in
cmpsb
sbbl
jnp
pop
mov
sbb
fidivrs
into
add
fnstenv
call
aad
push
int
loope
call
dec
cmp
out
outsb
nop
pop
sbb
xor
scas
fstpl
jmp
xchg
pusha
repz
push
jmp
loopne
outsb
fsubl
lret
or
fs
sti
rcl
in
sbb
loop
in
aas
or
out
out
push
adc
dec
sub
jns
add
bound
xor
adc
mov
mov
lea
stos
mov
sbb
div
push
subb
int
pop
test
sbb
into
xchg
fisttpl
pop
jno
xchg
mov
mov
adc
ficoml
iret
mov
aaa
dec
data16
test
out
lods
xor
aad
loopne
ficoms
into
or
movb
scas
mov
add
in
out
and
test
nop
pop
pop
cmp
push
sbb
push
add
jle
add
outsl
cmc
xor
cmpb
add
add
xor
inc
mov
mov
test
mov
xchg
mov
inc
mul
or
std
fcompl
lds
das
cld
and
push
js
pop
mov
aaa
jp
sub
cwtl
mov
cmp
scas
fstps
aad
and
and
and
xchg
test
xlat
dec
jo
in
xor
push
mov
shll
aas
js
jg
stos
test
pusha
sbb
stos
out
xor
mov
addb
jo
data16
adc
pop
or
inc
cmp
adc
insb
mov
push
sarl
jg
push
inc
jo
sbb
dec
cs
sub
sbb
cmpsl
cmp
xchg
imul
cwtl
enter
xor
xchg
xchg
dec
or
push
mov
dec
pop
icebp
fucom
jecxz
adc
mov
repnz
shl
xor
and
out
ror
addr16
test
cmp
insb
sbbl
xchg
mov
or
pop
pop
pop
lock
ja
movsb
fldenv
dec
cwtl
into
iret
rorl
xchg
inc
dec
sbb
adc
stos
out
jmp
bound
rcrb
mov
xor
aad
out
rol
clc
aad
aaa
repz
out
out
inc
in
mov
sti
adc
sub
adc
xchg
mov
jecxz
ss
mov
imulb
rclb
jns
test
add
into
mov
adc
scas
lds
push
test
test
inc
push
lea
dec
sbb
cld
pop
lret
int
or
in
jmp
fcompl
in
jl
cwtl
lods
stos
stos
scas
cmp
sahf
jns
test
mov
or
lea
roll
inc
push
lea
jnp
scas
call
inc
lahf
out
pop
adc
sub
dec
sub
cmc
sbbb
or
cmp
lret
imul
cwtl
in
cmpsb
push
aad
fsubr
ret
mov
aam
das
inc
cmp
pop
push
xor
push
cmp
cs
sbb
push
in
insl
hlt
test
xlat
sbb
lods
adc
push
jle
xchg
push
inc
dec
arpl
or
push
xor
mov
std
repz
inc
inc
aas
fadds
inc
hlt
xchg
mov
adcb
pop
add
cmp
fcoms
xchg
pop
jb
bound
insl
mov
rorb
sbb
mov
add
xchg
in
lcall
push
pop
mov
fldcw
hlt
nop
enter
xchg
or
aas
pop
pop
cmp
loopne
insb
sub
cwtl
rcrl
sbb
dec
lds
adc
in
cs
mov
dec
scas
aam
sub
add
mov
mov
mov
mov
add
mov
pop
mov
ja
ret
sub
lahf
dec
add
mov
mov
popf
repnz
int3
add
call
icebp
fdivrl
jb
jge
test
and
pop
lea
insb
fistl
pop
and
imul
in
and
mov
aaa
cmpsl
call
mov
or
xchg
das
or
pop
stc
cmpsl
stos
pop
push
lods
push
cmpsb
out
jns
test
aas
mov
mov
xor
cld
pop
cmp
incl
pushf
sub
loop
clc
xchg
inc
add
loope
or
mov
and
sub
jo
ljmp
fwait
ljmp
int
popf
jb
mov
iret
loop
cli
fs
xor
cmp
ret
scas
ret
adc
jg
int
pop
push
lret
jle
test
std
fbld
pop
push
push
jecxz
xchg
ret
push
mov
test
mov
stos
lret
add
adc
inc
xor
sub
mov
bound
and
jne
in
jp
add
fldl
mov
loop
ljmp
mov
mov
inc
pop
fsub
jns
dec
xchg
or
loop
and
push
ret
jns
flds
inc
das
dec
std
inc
stos
lcall
jb
into
das
inc
sbb
push
mov
add
les
bound
sub
dec
int3
shr
rorl
jg
inc
fsubp
outsb
cmpsl
cmpsl
xor
ficompl
cmp
ficoms
mov
xchg
dec
push
je
rolb
push
add
and
push
mov
lahf
sub
pop
test
scas
popa
je
ffreep
add
and
sbb
mov
dec
inc
arpl
dec
or
enter
aad
repnz
cmp
hlt
sbb
out
push
xor
movsb
lret
lock
jne
sbb
mov
lea
fnstsw
sbb
mov
push
cmp
aam
push
enter
jmp
jmp
lock
popf
mov
clc
sbb
in
jp
mov
xor
mov
xchg
das
sub
xchg
dec
mov
adc
cmp
aaa
xor
lret
jnp
lahf
ja,pn
jnp
or
pop
outsb
shlb
mov
ljmp
dec
add
mov
mov
dec
inc
jmp
pop
imul
pop
notb
cmpsb
scas
cwtl
sbb
sarb
and
cwtl
cltd
hlt
imul
rcr
pop
inc
lods
mov
mov
push
mov
sub
outsl
aam
pop
pop
add
cld
mov
xchg
in
add
dec
outsb
mov
mov
lret
popf
mov
push
movsb
pinsrw
cmpsl
fcomp
fucomi
sub
jae
sbb
enter
ds
pop
sbb
push
je
fstpt
inc
mov
sbb
mov
pop
adc
and
pop
adc
mov
adc
js
lret
xchg
mov
and
mov
bound
fcos
enter
lods
test
pushf
and
sub
int3
jmp
popf
lahf
test
mov
outsl
pop
and
cmpb
bound
jbe
mov
add
decl
out
test
insl
jle
rorb
stos
bound
imul
sbb
pop
mov
les
jne
cmp
out
jnp
adc
imul
adc
add
fmull
in
cmpsl
inc
push
add
fistpll
out
xchg
sbb
pusha
adc
ret
sbb
mov
adc
mov
sbb
jp
fildll
dec
push
dec
push
sbb
and
or
inc
cmp
jg
jmp
loop
leavew
add
jecxz
aad
pop
push
pop
inc
jmp
mov
sti
push
or
mov
pop
push
rdpmc
jl
dec
cmc
addr16
movsl
mov
push
xor
dec
pushf
scas
mov
jecxz
mov
repnz
call
pop
stos
or
and
jnp
popf
js
push
sahf
mov
test
xlat
loop
or
jne
outsb
std
adc
mov
sub
and
pop
out
rcrl
mov
jno
out
test
push
jae
lods
cmp
mov
dec
add
xor
test
dec
fdivrp
leave
repnz
cmp
xchg
jns,pn
push
xchg
adc
scas
pop
mov
movsl
cltd
jle
mov
and
pop
addb
pusha
adc
int
lods
push
inc
ja
adc
cmp
push
dec
sbb
and
outsb
xor
repnz
push
add
loopne
sarl
stc
repz
fcomp
fsubrs
pushf
shrb
jne
cld
xor
negl
pop
mov
shl
stos
or
pop
pusha
sbb
mov
cld
cmpb
aas
cmp
pop
mov
cmp
add
cmc
mov
scas
inc
mov
mov
sub
ret
fnstsw
or
bound
arpl
fdivp
lret
sub
jo
mov
xchg
popa
repz
arpl
data16
xchg
ds
je
imul
push
add
in
inc
lcall
or
push
outsl
dec
and
das
push
cmc
push
pop
jl
divl
data16
jge
pop
and
int
push
pop
lret
lea
xchg
inc
push
lds
sub
mov
leave
xchg
cmp
mov
add
jno
andl
test
mov
push
das
xor
popf
mov
int
fbld
pop
arpl
lret
test
cmp
out
cmp
adc
mov
cs
popa
pop
mov
addr16
xchg
jns
adc
aas
push
fs
aad
sbb
aas
roll
mov
mov
loopne
sbb
sub
lgdtl
jecxz
xchg
call
mov
cmc
pop
xchg
sarb
or
sbb
cwtl
fs
addl
mov
push
cmc
imul
lods
pop
addr16
adc
jl
out
loopne
adc
xchg
sbb
fstpl
stc
sub
rcr
mov
daa
inc
andl
scas
cwtl
lret
cli
sub
rol
ds
pop
dec
vandps
loope
mov
ret
scas
inc
push
sbb
cs
push
jmp
pop
push
jmp
ret
leave
sub
sub
out
xchg
loopne
inc
ret
xor
fisubrs
mov
push
push
fidivs
test
mov
push
fdivrl
shl
jo
pop
outsb
and
sub
cmp
imull
mov
dec
mov
push
pop
addr16
loopne
or
mov
pop
lods
jg
jl
add
cmpsb
cld
push
mov
mov
jg
lods
inc
jae
icebp
repz
lods
call
lea
arpl
arpl
outsb
js
mov
mov
enter
pop
cmp
adc
bound
dec
fdivrs
jbe
aas
inc
jp
dec
pushw
xor
push
adc
cmp
mov
addb
add
iret
js
inc
pop
sub
mov
xchg
sahf
das
lahf
movsb
xchg
mov
or
dec
sbb
adc
rorb
jge
sbb
int3
sub
jae
insb
call
ffree
pop
inc
or
inc
out
stos
pop
inc
jle
sub
out
jne
xor
xchg
mov
fidivs
mov
scas
sub
rcrl
mov
fs
pop
mov
jae
xor
mov
in
lahf
and
pop
stos
out
push
lcall
sbb
out
ljmp
sub
add
je
idiv
in
or
js
mov
jge
pop
test
mov
push
mov
inc
and
iret
out
mov
cli
mov
mov
pushf
inc
lahf
mov
std
inc
sbb
jl
fcomps
shrb
fsubr
int3
int3
dec
imul
nop
loopne
popf
nop
mov
push
fcompl
jl
outsl
or
cld
push
and
addr16
sahf
loop
jb
jb
test
addr16
popf
cli
sbb
mov
lods
push
push
or
and
xchg
and
loope
jp
addr16
stos
icebp
jo
scas
nop
dec
cmpsb
hlt
xchg
pop
shlb
popa
dec
lret
faddp
lcall
dec
sarb
scas
pusha
mov
mov
push
testb
stos
sbbb
jae,pt
repz
stc
xor
nop
daa
gs
sub
repz
jne
dec
push
daa
loop
sbb
inc
push
xchg
rolb
and
push
subb
or
or
cs
repnz
xchg
jnp
imul
out
cmpsl
pop
pop
shrb
enter
xor
fstl
sbb
add
mov
sbb
sub
and
test
cltd
push
push
push
leave
idiv
ret
push
movsb
ss
sarb
int
in
jle
aas
and
cmp
inc
psllw
iret
inc
mov
ljmp
and
inc
pop
sbb
sub
mov
or
out
es
jnp
or
sbb
scas
push
jnp
test
lcall
loopne
cmc
xchg
pop
xor
mov
jo
sbb
in
push
je
iret
or
pavgb
xor
sbb
xor
mov
rcl
mov
cli
pop
fistpl
and
subl
fwait
out
in
sahf
mov
jnp
jl
and
hlt
and
lret
mov
int3
add
sbb
cmp
jae
dec
xor
pop
pop
rclb
mov
cmp
sbb
loope
mov
push
jae
jg
push
xor
sub
addb
pop
xchg
adc
not
push
adc
jnp
cs
inc
loopne
sub
xor
imul
pop
jb
fs
mov
mov
mov
arpl
xor
and
push
pushf
mov
or
in
mov
and
fmuls
cltd
shl
bound
xchg
iret
out
fs
repnz
dec
mov
outsb
icebp
and
mov
loope
imull
pop
sbb
pusha
lock
cld
data16
stos
or
aam
xchg
pop
mov
mov
bnd
mov
jmp
movsb
mov
das
adc
lret
xor
inc
popa
ds
test
xor
mov
cmpsl
fcomp
int3
testb
xor
ror
in
fdivr
sub
xchg
lods
dec
xchg
std
imul
lcall
pop
dec
cld
cmpsl
mov
mov
sti
nop
add
jmp
xchg
cmp
or
es
dec
push
mov
sahf
push
cmp
sub
inc
mov
mov
jo
sub
pop
hlt
add
je
outsb
push
movsb
inc
aad
aam
push
xchg
and
push
or
test
rorb
inc
pop
lret
cmpsl
cli
adc
dec
push
pop
inc
ss
test
or
cltd
xchg
loopne
jno,pn
test
or
in
jge
mov
xor
add
mov
loopne
mov
jae
add
xor
sub
adc
jge
popl
dec
mov
clc
imul
stos
sub
inc
mov
mov
pop
dec
sub
cmp
shll
inc
or
out
add
adc
jo
mov
lcall
jne
xor
push
loope
aas
mov
aad
test
popf
or
push
sbb
imul
jno
inc
sub
sub
pop
pop
mov
es
sti
loope
int
aad
fldt
xor
xor
dec
andl
rol
lret
and
inc
iret
cmp
pop
cmp
inc
sbb
add
adc
test
dec
lahf
es
lods
in
les
pop
inc
mov
rcrb
arpl
insl
xchg
arpl
dec
xor
sbb
std
pop
dec
mov
inc
inc
xor
ss
inc
mov
dec
daa
leave
adc
mov
push
jg
lds
sub
add
or
rcll
lods
movsl
sbb
arpl
mov
sti
mov
adc
push
xchg
mov
mov
lcall
outsb
adc
jg
dec
xchg
or
push
sub
jae
gs
cmp
pop
fidivs
test
daa
ret
and
pop
xchg
test
ds
jbe
push
fwait
rclb
sbb
xchg
andb
lcall
fcomps
rcll
divb
cmpl
rcrb
mov
lods
cmp
add
scas
xor
jg
imul
add
into
sbb
lods
mov
mov
fwait
bound
inc
pop
sub
sub
sub
jbe
movb
nop
jb
push
ficomps
pop
xchg
push
mov
mov
hlt
andl
jle
rcrl
insb
test
mov
cmc
adc
es
movsb
xor
xchg
in
adc
sub
popa
shrb
xor
pop
inc
dec
lret
jns
js
jp
ss
sbb
movsb
decl
xchg
out
cmp
out
pop
or
ds
outsl
std
pop
repnz
nop
add
adc
insb
lret
dec
jmp
and
or
lcall
jg
mov
in
add
lock
sub
arpl
sbb
fidivl
in
mov
aad
call
add
jle
flds
sub
cwtl
aas
jge
movsl
or
aas
rclb
rcl
mov
fbld
mov
pushf
aas
dec
out
inc
and
cwtl
fists
mov
int3
loopne
repnz
add
xchg
inc
push
add
inc
xchg
push
mov
shlb
fisubrl
pop
iret
fs
jmp
mov
leave
cltd
jl
test
mov
sub
push
outsb
jnp
popf
das
and
arpl
xchg
jle
insb
stos
jg
sbb
xchg
push
cmc
jle
or
pop
movsb
imul
xchg
push
and
lock
jl
xchg
cmpsb
add
ljmp
jecxz
int
dec
ljmp
in
and
fwait
gs
push
outsb
jbe
sbb
in
pop
pop
xchg
aaa
mov
jb
int3
mov
clc
mov
push
jecxz
and
pop
jno
fcoms
push
js
lds
xchg
in
outsl
sbb
ds
fmull
xchg
out
pop
nop
and
jg
incl
fisttpl
sub
outsl
daa
jb
shl
sbb
inc
imul
hlt
sub
push
jo
sahf
push
cmc
inc
pop
dec
cmp
sbb
cmpsb
xor
inc
sbb
lcall
xor
push
lods
lds
lods
sbb
into
cmpsb
push
nop
inc
dec
lods
jns
and
jb
cli
loopne
cmp
dec
push
addr16
lods
lods
adc
mov
stos
inc
test
das
out
xchg
scas
mov
sahf
loopne
inc
mov
pushf
cmp
push
lcall
xchg
bound
sbb
mulb
xchg
imul
sub
jmp
cs
xor
push
sub
pop
out
or
int3
aad
jge
sbb
int3
mov
push
sbb
sub
int
add
xor
int3
bound
daa
jecxz
push
in
push
and
and
add
adc
mov
mov
decb
cmp
das
loope
jp
popa
pop
aaa
aad
out
inc
stos
xor
xchg
mov
jns
hlt
scas
xor
pop
out
xchg
push
jl
je
fadds
mov
call
or
push
mov
in
ds
and
cmp
sti
or
push
fsubr
adc
cmp
mov
jnp
xchg
int
inc
test
pop
jecxz
push
add
add
or
pop
out
loop
mov
shll
loope
mov
movsb
xlat
test
stos
sub
and
cmpsl
loop
jbe
aam
aam
repz
dec
andb
in
lahf
inc
sbb
jecxz
fxam
mov
jmp
sbb
xchg
cmp
jl
jmp
scas
out
pop
jnp
loope
std
loop
insb
shrb
mov
cmpsb
ljmp
cltd
dec
cmp
shlb
and
cli
inc
je
xchg
inc
xor
ss
pop
push
rcll
sahf
add
lock
inc
adc
mov
ret
xchg
rcrb
call
shrb
sbb
hlt
lea
ret
xlat
icebp
push
in
sbb
cmp
scas
les
out
xchg
arpl
push
js
sahf
cmc
inc
xor
cmp
sti
dec
add
xchg
out
push
mov
lods
mov
lea
fcmovne
dec
out
sbb
mov
sbb
lret
inc
mov
cli
sub
shll
shll
jns
negb
and
fwait
mov
jbe
sub
movsl
hlt
pop
cmpsl
jl
or
pop
stos
fists
in
cmp
dec
or
mov
adc
imul
testb
mov
push
repnz
cltd
and
out
pushf
cld
rcrl
in
cmc
cltd
shll
xchg
push
sbb
inc
mov
push
sarb
stc
out
xchg
movsb
shll
mov
push
or
cmpsl
jae
test
pushf
xchg
mov
xor
ror
stos
xchg
xchg
ds
mov
add
andb
push
push
nop
push
ret
pop
outsb
fwait
mov
push
mov
inc
in
int
mov
and
mov
xchg
jb
or
inc
jae
and
sbb
aaa
jecxz
xchg
dec
nop
int3
sub
dec
ret
int3
lret
mov
je
dec
xchg
test
inc
data16
push
imul
sub
faddl
xchg
out
sbb
push
lea
mov
fcmovne
inc
sbb
mov
dec
rorl
push
mov
ds
ficompl
imul
lea
push
cmp
mov
clc
cwtl
mov
xlat
call
leave
call
jg
mov
adc
pop
pusha
adc
scas
test
mov
icebp
dec
push
add
mov
cmp
mov
shl
mov
sub
imul
jg
or
add
cwtl
sub
int
dec
mov
addr16
adc
popa
ret
mov
jno
aas
ficompl
int
adc
jno
sub
test
sub
sbb
loop
push
sbb
dec
imul
lcall
mov
or
xchg
cmp
nop
mov
jbe
cmp
add
fdiv
xchg
movsb
popf
repz
arpl
adc
pop
add
sbb
xor
and
ja
aas
dec
fs
testb
mov
jl
sbb
xchg
pop
ja
and
repz
out
fldt
jp
xchg
addr16
and
sbb
push
xor
mov
mov
mov
cmp
shlb
mov
xchg
gs
lock
rcrb
stos
mov
sbb
ja
dec
lahf
out
scas
pusha
dec
sbb
imul
jnp,pt
and
xchg
imul
jo
xchg
push
loope
or
jo
ja
push
sub
mov
int
ffree
mov
arpl
pop
mov
imul
insl
loop
aad
fsubrp
jl
xchg
cld
mov
in
jae
rclb
out
lods
aam
sub
pop
jne
stos
test
int
hlt
sti
das
push
jmp
pop
cmp
mov
push
fwait
or
jmp
sub
xlat
nop
int
lock
imul
lahf
dec
ds
aaa
sbb
rorb
mov
push
cld
int3
arpl
jecxz
or
or
arpl
mov
movsb
xor
aas
imul
mov
mov
push
inc
cmp
ret
push
pop
cmpsl
xchg
xchg
insb
add
xor
xchg
adc
int3
sub
fs
sti
iret
mov
jbe
sbb
inc
ljmp
sbb
cmp
aad
push
in
pop
inc
out
popa
repnz
addr16
ret
fsubrl
shll
in
cmp
pop
mov
push
xor
pop
xchg
arpl
stos
pop
fisubs
jle
movsl
in
inc
and
mov
gs
and
cmpsb
cltd
or
mov
mov
inc
lcall
xchg
sbb
imulb
stc
test
in
pop
insb
sub
fxtract
or
mov
mov
add
push
and
dec
mov
mov
lret
insb
outsb
aam
in
shrl
dec
shl
sbb
rolb
je
fistps
add
fbld
dec
cmp
xchg
ljmp
aad
xchg
mov
pop
sub
and
mov
bound
je
cmpsl
xchg
cmp
sub
imul
cli
cld
sub
mov
popf
push
sub
addr16
cli
xor
into
call
enter
cmp
in
fwait
and
in
mov
sbb
into
mov
stos
mov
sbb
stos
push
mov
push
in
and
push
lea
jns
sbb
cli
jle
andl
jb
int
aad
dec
fmull
cmpsl
mov
and
sub
sub
popf
imul
stos
loopne
dec
mov
adc
js
sbb
inc
pop
push
les
adc
out
pop
loopne
cli
pushf
movsb
in
rolb
icebp
jno
aad
dec
out
and
enter
lahf
in
or
js
lahf
int3
loop
fisttps
popf
je
mov
adc
ja
fdivrl
jl
adc
mov
movsb
sbb
aaa
jle
cmp
cmpsl
les
jnp
mov
shrb
xor
xchg
popf
in
or
push
jp
ja
xchg
sbb
dec
mov
addb
daa
mov
lds
iret
icebp
test
sbb
les
in
stos
imul
pop
popf
jle
or
jge
cld
adc
lock
lods
ja,pn
andb
xor
orl
pop
ljmp
addr16
cs
and
fildll
xchg
leave
cmp
cmpsb
div
into
outsl
ret
idiv
fisubl
jp
mov
std
xchg
cmp
xchg
mov
mov
in
push
iret
les
and
fnstenv
jg
dec
cmp
xor
div
scas
nop
adc
out
clc
inc
mov
adc
adc
std
test
ret
pop
out
adc
cmp
pop
xchg
or
es
pop
pop
fmull
pop
push
cmovl
icebp
or
fidivl
sbb
jnp
inc
jle
sub
or
xchg
cltd
iret
xchg
aam
push
add
fs
addr16
pusha
cmc
inc
xchg
cs
xchg
jb
lea
lea
and
pop
xchg
jns
std
cltd
or
dec
push
outsl
je
pop
add
xchg
or
adc
xlat
jb
pop
dec
mov
dec
add
xchg
push
mov
stos
cli
adc
loop
loope
cld
bound
aaa
in
sbb
cmp
cmp
xchg
fisubrl
xor
rorl
mov
inc
leave
std
cmp
aad
xor
inc
enter
inc
sbb
mov
repz
fldl
push
sub
adc
and
in
push
iret
int3
clc
push
outsl
lds
add
sub
addr16
ljmp
aad
mov
add
mov
lret
sti
out
fcomps
cwtl
lods
into
sbb
mov
call
repnz
in
mov
andl
xchg
mov
xchg
xchg
or
and
dec
jo
int3
lods
dec
cmc
and
mov
lds
imul
push
lods
or
mull
and
lock
loopne
mov
jo
int
and
jns
sub
rcll
imul
sbb
adc
pop
lcall
out
or
leave
repnz
push
sahf
mov
lret
hlt
xchg
popf
shl
xor
mov
ljmp
jle
ja
mov
jno
ss
mov
mov
jns
xchg
mov
mov
movsb
mov
test
mov
imul
int3
xchg
inc
adc
xchg
movsb
inc
lea
imul
mov
sbb
mov
mov
jl
iret
push
lds
fidivrs
pusha
jge
je
lds
cli
sbb
pop
sahf
inc
cld
outsb
xchg
cmpsb
ja
stos
add
and
adc
outsl
xchg
xchg
inc
adc
out
ds
xlat
and
cs
xor
fs
cli
and
cmp
inc
push
icebp
outsl
cmp
insl
push
xor
pop
cmp
push
sbb
scas
je
or
mov
lds
js
pop
sbb
sti
cmp
inc
movsb
fisubs
or
xor
mov
and
rolb
pusha
fwait
push
sbb
inc
nop
les
jmp
cmp
sub
fnsave
lds
roll
outsb
xor
inc
popa
mov
test
ljmp
jb
inc
and
dec
sbb
in
add
add
out
sbb
jge
or
mov
arpl
jecxz
pop
add
adc
inc
stc
fstps
mov
sbb
nop
addr16
xchg
xchg
and
and
pop
test
fstp
mov
add
jecxz
inc
shll
cwtl
sub
test
flds
in
fidivrs
and
and
imul
sub
xchg
into
je
adc
inc
movsb
xor
out
xor
jo
adc
push
fstl
rcrl
lcall
loopne
push
sbb
sub
jo
adc
js
scas
rcrb
ret
cmp
sti
lcall
and
lods
clc
pop
xlat
xchg
jne
testw
mov
xlat
call
notb
es
out
jnp
xchg
xchg
xchg
xchg
pusha
arpl
jp
add
jecxz
stos
out
cmp
xor
inc
adc
imul
cmp
aam
pushf
adc
outsb
hlt
mov
mov
push
rclb
subb
xor
pop
pop
into
pop
hlt
nop
repnz
mov
pop
mov
addr16
sub
aad
or
loope
mov
mov
test
sbb
imul
mov
insl
jl
or
xor
mov
inc
sahf
adc
adc
adc
fisttps
imul
repnz
pop
push
xor
inc
pop
sub
lock
shl
xchg
enter
sbb
xor
in
mov
pop
loopne
sbbb
inc
push
xchg
fmul
xchg
dec
xchg
scas
sbbl
mov
inc
xchg
repnz
cmp
cld
mov
add
stos
das
mov
out
push
push
out
sbb
cmp
jmp
imul
stos
adcb
call
in
stos
mov
outsl
mov
in
add
stc
outsb
cld
inc
dec
test
jno
popa
adc
enter
sub
sub
clc
xchg
xlat
cmp
es
outsl
insb
mov
adc
cmpl
std
add
xor
xchg
das
ljmp
cmp
mov
or
sbb
dec
fxch
or
popf
das
fildll
test
cmc
adc
inc
or
repz
lock
jns
in
adc
or
shll
pop
outsb
cs
add
xchg
push
sar
dec
add
mov
push
psubusb
fucom
and
push
mov
sahf
mov
push
test
pop
cmp
sub
ret
ret
outsl
in
into
jne
lock
sbbl
movsb
loop
repz
mov
data16
jg
jge,pt
jb
je
je
inc
es
xor
add
mov
add
xchg
jg
fimuls
outsl
push
repnz
push
lods
inc
jns
push
cmp
fiaddl
out
xlat
xor
push
or
fildl
lahf
inc
mov
pusha
aam
xchg
pop
mov
stc
inc
add
jns
shl
in
jmp
xchg
test
push
jnp
mov
outsb
lods
mov
and
push
xchg
inc
jg
test
or
ljmp
xor
add
call
xchg
pop
dec
jae
sub
cmpsb
adc
loop
jmp
out
aad
add
jl
adc
push
or
pushf
jmp
pop
int3
and
cmp
pop
cld
les
pusha
mov
loop
mov
or
pop
or
xchg
cmp
mov
pop
dec
mov
mov
ret
sbb
adc
stos
pushf
sti
push
mov
rol
cmp
ss
ljmp
lock
mov
mov
mov
pop
jno
cmp
dec
insl
push
gs
sbb
int3
and
mov
pop
cmp
mov
cs
jmp
adc
and
movsl
movsb
xor
lds
mov
sub
out
mov
out
sbb
ljmp
xlat
lret
or
icebp
jge
mov
ret
or
movsl
adc
sub
incb
dec
and
and
xchg
xlat
jmp
pop
mov
pop
sar
cltd
and
mov
push
stos
repnz
popf
outsb
into
cmp
jns
jnp
in
adc
insl
sbb
jl
test
test
rol
ret
aas
mov
mov
nop
es
mov
add
push
popa
jecxz
push
push
fld
mov
cmpsl
fisubs
cmp
xor
or
or
fldl
addr16
lret
sub
cld
cmp
stc
cld
out
xchg
jge
xor
xchg
mov
fimuls
xor
xor
or
popf
mov
or
push
add
fimull
sub
cs
jno
je
popa
arpl
lcall
jae
pmaxsw
xchg
int3
jecxz
ljmp
lcall
cmc
cmp
pop
mov
push
lea
icebp
scas
ds
push
add
addr16
jl
dec
ss
out
stc
les
testl
cmp
sub
jg
loopne
ja
xor
fsubl
mov
push
es
jns
sub
mov
and
sbb
jge
dec
or
inc
cmp
sbb
sub
adc
mov
push
sub
es
inc
cltd
ficompl
or
and
hlt
push
enter
flds
jl
ss
cwtl
push
push
rcl
mov
xchg
pop
test
mov
data16
mov
xor
xor
in
inc
xor
jbe
inc
add
out
iret
dec
aad
popa
cs
sub
call
rcrl
rep
sub
inc
lods
sbb
pushf
or
ljmp
and
ljmp
and
sub
inc
ds
mov
xor
push
lret
mov
scas
cli
in
stos
sbb
sbb
pusha
jb
cli
dec
arpl
xor
fistpll
xor
popl
insb
mov
test
fcomi
cs
mov
jae
inc
inc
js
repz
sahf
sbb
stc
cmp
mov
or
push
adc
rcl
add
daa
adc
add
test
mov
or
jnp
add
xor
mov
cltd
arpl
cmp
push
stc
pop
cmp
shlb
rorl
push
pop
call
xchg
outsl
adcb
jae
jmp
outsb
std
mov
js
and
pop
and
pop
inc
fwait
dec
push
jmp
scas
cmp
jbe
leave
mov
cmp
pop
ret
jmp
aaa
icebp
addb
xlat
mov
dec
mov
aam
loopne
jg
sub
cmp
lcall
pop
in
xor
pop
adc
jno
xor
daa
fldt
xchg
cmp
aam
stc
fisubl
adc
aam
inc
out
push
push
sbbb
mov
or
push
fxch
outsl
sbb
mov
clc
push
sbb
insl
icebp
les
arpl
or
mov
loop
rcr
push
sbb
orb
or
dec
pop
mov
in
sarl
fbld
imulb
xchg
nop
inc
xchg
jnp
pop
jle
cmp
xor
or
test
xchg
jecxz
jge
adc
add
aas
or
mov
add
ret
sbb
sti
popf
inc
jg
inc
movb
xchg
es
popa
add
loopne
xor
insl
imul
dec
pop
mov
adcl
enter
or
sub
fisubrl
mov
inc
cs
cmp
or
loopne
ds
sbb
insl
inc
mov
mov
push
or
aas
cmp
push
out
nop
dec
jns
aas
inc
jb
jp
add
jnp
mov
adc
das
bound
iret
and
popa
mov
and
popf
pop
fld
nop
jecxz
cmpsl
sbb
dec
xor
pop
stos
dec
std
js
les
mov
mov
jno
outsb
jl
aad
xor
push
stos
adc
test
and
mov
rep
dec
dec
in
call
insb
pop
jg
sbbl
lret
inc
test
inc
in
fildll
sub
push
push
mov
lods
inc
pop
mov
cld
cs
iret
jg
stos
cmp
lods
jl
faddl
xor
or
jge
xchg
mov
jae
aaa
push
mov
test
mov
mov
xlat
popa
pop
enter
testl
pop
push
pop
cmp
movsl
jo
mov
jg
mov
and
adc
cmp
sbb
jae
mov
mov
fs
xor
add
push
adc
sar
lods
arpl
stos
rcll
call
lods
enter
push
sub
je
or
out
add
jmp
fildl
stos
or
xor
jnp
cmc
lods
push
nop
xchg
mov
sbb
inc
jmp
sti
cmpsl
cmpl
add
push
jle
fs
fwait
xor
imul
jne
mov
inc
out
dec
ss
mov
or
jne
add
lods
mov
popa
pop
popf
lret
push
loopne
xchg
lods
dec
filds
mov
sbb
shll
cmp
std
test
mov
jnp
movzwl
jge
in
mov
fs
mov
ret
outsb
lcall
push
scas
ret
test
mov
inc
bound
push
sahf
jp
sub
sub
pop
mov
dec
or
jl
cmovg
out
ss
xor
mov
stc
cwtl
int
xchg
icebp
movsb
adc
ficompl
xchg
dec
and
add
sub
mov
iret
push
inc
add
xorl
lret
push
mov
gs
int3
dec
mov
fnstsw
scas
xchg
xchg
inc
lds
imul
js
ja
adc
mov
add
push
dec
push
mov
cmp
xchg
int
dec
cmp
sub
repnz
xor
jne
sub
cwtl
aam
out
iret
pop
sbb
xchg
mov
cmp
mov
rcrb
sbb
out
dec
xchg
sbb
cmpsb
insb
lcall
jno
xchg
cmp
mov
mov
pop
stos
push
mov
imul
jb
mov
es
aam
mov
arpl
xchg
mov
mov
inc
pop
test
call
xor
dec
ror
xchg
push
ss
pop
and
repz
push
mov
pop
mov
bound
dec
es
lret
je
cs
jecxz
xor
lods
xor
mov
inc
dec
mov
xchg
outsb
ss
aam
ret
and
in
outsb
fwait
imul
mov
pushf
add
dec
into
sub
mov
inc
imul
mov
fistl
cmp
mov
ret
sbb
inc
inc
dec
jno
mov
lret
ljmp
insl
lds
add
arpl
mov
pop
xchg
into
push
in
in
sub
push
xor
xor
fdivr
int3
inc
ret
mov
sbb
mov
ds
jns
push
fwait
out
imulb
adc
int3
mov
ljmp
orl
jno
mov
lds
push
stc
inc
sbb
inc
push
icebp
movsl
movsl
pop
adc
cmp
jb
sarb
pushf
cmpsb
cmp
orl
pop
cmp
pop
arpl
push
cltd
hlt
fs
cmp
cmp
dec
mov
push
in
or
andb
fnstsw
mov
into
daa
lods
jge
pop
bnd
pop
cmp
add
mov
pop
sub
mov
in
popf
nop
jo
lds
mov
sub
add
and
inc
movb
mov
cmpsl
iret
or
or
push
xchg
mov
sarl
push
and
aam
ja
xchg
outsb
js
enter
and
cwtl
xchg
sub
rolb
push
stc
inc
lods
fadd
fbstp
jecxz
pop
sbb
dec
insl
adc
jne
xchg
xor
outsb
negl
inc
add
mov
xchg
int
shll
xchg
into
dec
sahf
sbb
popf
aam
sbb
fidivl
adc
or
push
leave
loopne
dec
or
loope
pop
cmp
enter
test
adc
mov
out
call
or
jmp
cli
mov
and
js
enter
cmc
cld
add
sti
dec
scas
adc
pop
xchg
add
repz
xor
shr
pop
daa
sub
mov
std
sbb
sarb
inc
sub
inc
mov
pushf
cmpsb
test
fadds
xor
sbb
jmp
xlat
stc
push
or
jbe
mov
push
sub
adc
pop
cld
adc
sbb
push
test
sub
aam
add
push
inc
pop
pop
mov
dec
sub
shlb
sahf
pop
stc
add
rcl
fisttpl
outsb
pop
int3
loopne
addl
pop
in
les
add
sbb
or
cltd
pop
push
push
push
add
push
je
shrb
insb
xchg
mov
pop
ret
lds
xor
sbb
lods
jge
mov
pop
aad
xchg
jb
lds
ret
fs
pop
adc
rorl
gs
mov
jg
ficoms
lret
lds
icebp
adc
sub
mov
push
adc
mov
push
fs
pop
inc
cmp
xor
pop
mov
mov
pusha
xchg
sahf
adc
es
pop
jb
jge
jo
cmp
out
jl
jns
sbb
mov
or
mov
gs
cmpb
xor
mov
pop
jge
add
mov
xchg
mov
rorb
int3
dec
push
cmc
ja
push
mov
inc
cmp
cmp
xor
add
adc
jns
add
mov
pop
jae
jno
mov
jle
aad
shlb
xchg
jl
sub
jmp
push
cs
adc
fadds
loop
and
pop
and
ret
sti
out
sti
mov
sbbb
xchg
lcall
mov
imul
pop
jb
push
xchg
gs
pop
ss
xchg
jne
subl
or
inc
cmp
lret
and
cld
aaa
jge
jae
jno
inc
sub
lret
inc
inc
inc
jecxz
sub
lds
movsb
ret
sub
popf
ret
nop
int3
mov
xchg
sub
mov
push
test
jne
aas
push
das
sbbl
in
out
imul
fsubs
jle
pop
enter
sbb
inc
push
cmc
sbb
in
dec
cmpsb
push
pusha
dec
cli
scas
in
mov
negl
aaa
shll
fwait
xor
cmp
or
outsb
xor
inc
push
lcall
lods
inc
add
xchg
insb
push
cmp
pushf
aam
mov
aad
cmp
xor
pop
shrl
jmp
cmp
push
ror
pop
in
mov
push
imulb
dec
mov
addr16
push
pop
in
and
enter
jl
ds
dec
loope
lea
jbe
leave
in
add
in
jno
lea
or
loope
adc
lcall
ss
add
stos
xchg
shrl
ret
sub
xor
gs
and
inc
add
int
mov
mov
push
fldenv
add
shrl
jnp
js
dec
mov
cmc
popf
dec
dec
push
inc
loope
adc
cld
cmp
add
jge
movl
pop
mov
dec
or
rolb
add
jle
test
cmpsb
adc
aam
and
fcmovbe
mov
lods
test
fcomi
fimuls
in
push
cmp
fidivl
xchg
outsb
fcomip
xor
insb
aaa
jecxz
je
dec
test
jge
aam
sub
inc
js
sub
cltd
aam
aam
and
and
repz
mov
xor
push
jae
addr16
pop
jo
cmp
pop
lods
aaa
adc
sbb
inc
sub
cmpl
pop
out
push
insb
data16
mov
popf
fwait
jns
js
jge
adc
and
enter
lods
fdiv
xlat
inc
sbb
je
in
inc
popf
adcb
std
jo
mov
sbb
xchg
ret
dec
sbbl
and
mov
xchg
mov
pusha
fistpll
push
mov
fsubs
jecxz,pn
ret
das
or
xchg
add
outsb
popa
inc
pop
xlat
loop
std
out
nop
add
inc
stc
daa
stc
and
adc
or
loop
push
and
sbb
loopne
data16
mov
xor
ljmp
cli
dec
out
rorb
fnstenv
jns
mov
int
in
ret
mov
lret
jmp
lahf
repnz
jnp
and
adc
cmp
mov
inc
movsl
inc
xchg
push
lcall
cmp
cmp
insb
clc
inc
cmp
out
std
sbb
mov
add
or
out
adc
aad
adc
inc
out
mov
fcompl
adc
testb
sbb
sub
sub
or
out
add
push
call
jne
sbb
cltd
push
rorl
aam
sbb
aam
inc
lahf
push
pop
xor
cli
mov
jg
push
fnsave
mov
adc
jbe
std
fwait
pop
add
pop
scas
cmpsl
loope
insb
jl
push
aaa
loopne
and
out
pop
cltd
xor
xor
and
push
mov
ret
xchg
cmp
jns
mov
sub
mov
mov
jl
mov
roll
mov
clc
fiadds
adc
add
adc
sbb
inc
xchg
fildl
pop
cmc
rcll
stc
sbb
pusha
dec
insb
sub
int3
outsl
clc
sar
pop
xor
in
push
addr16
xor
sub
imulb
xchg
push
std
jnp
xor
clc
pop
cmp
pop
pusha
mov
cmp
xor
lcall
mov
movsl
inc
cmpsl
stc
out
pop
inc
out
push
div
inc
xor
pop
mov
hlt
and
mov
jne
out
in
jle
jg
jl
fisubl
imul
int3
mov
out
lods
add
cmp
jb
fcomp
js
jbe
xchg
or
jae
mov
and
js
jne
cmp
push
jle
ret
sbb
lret
loopne
stc
cmp
fcompl
jne
pop
ljmp
jbe
roll
lret
into
adc
mov
jecxz
popa
fwait
jbe
cmp
nop
sbb
lss
repnz
fprem
adc
and
mov
mov
adc
data16
inc
inc
jno
pop
arpl
and
jo
push
push
insl
add
imul
orb
xchg
inc
mov
mov
in
jp
mov
sbb
or
dec
mov
shrl
call
outsb
popf
adcl
clc
mov
mov
data16
lock
lock
push
xor
fnstcw
test
lods
cmp
aas
dec
xchg
jg
stos
cli
inc
addr16
jecxz
or
inc
loop
pop
mov
mov
cwtl
push
cs
adc
fldcw
cld
rorl
cmc
imul
mov
mov
out
sahf
lret
add
ss
dec
das
push
and
and
insl
mov
outsl
sti
cli
popf
push
mov
pushf
mov
add
add
xchg
and
imul
mov
hlt
leave
xchg
pshufw
xchg
dec
adc
cmpb
ret
push
sahf
adc
jp
rcrl
push
add
rolb
sub
stos
sti
add
push
mov
daa
jns
pushf
clc
loopne
pop
ja
pop
inc
inc
add
lret
cld
adc
xor
in
stc
pop
jae
mov
clc
lods
out
ja
out
adc
jecxz
mov
cli
and
imul
mov
xlat
or
mov
push
fwait
mov
cmp
es
ja
xor
data16
imul
jb
mov
push
insl
cwtl
mov
mov
lcall
inc
add
xchg
sub
in
jl
or
enter
vmread
fstp
int3
lret
ja
pop
or
dec
cmpsb
cmp
out
and
or
movsl
out
popf
data16
fldenv
popf
aam
std
das
insl
xchg
pushf
mov
bound
jbe
stos
pop
stc
jecxz
xchg
lcall
mov
xchg
cmpsl
mov
add
nop
lock
xor
pusha
cmp
cmp
add
stos
lahf
adc
popa
xchg
push
cmpsl
mov
lea
in
dec
in
mov
test
mov
test
pop
mov
cmp
fs
std
inc
sbb
test
add
test
lods
sti
push
inc
jge
mov
pop
test
dec
adc
and
xchg
repz
mov
xchg
sub
jae
out
fistpl
pop
xor
add
push
jle
xchg
push
sub
aad
addr16
lret
int3
pop
mov
out
jb
fistpll
popf
cmc
fs
mov
repz
dec
mov
call
jno
scas
cwtl
inc
ss
cs
push
lahf
fistl
sub
xchg
mov
push
cltd
enter
mov
mov
push
push
jp
push
push
leave
lret
or
std
and
mov
mov
jle
xchg
dec
test
jo
jnp
dec
push
and
dec
imul
mov
mov
adc
push
jno
mov
insl
push
lret
pop
das
jnp
pop
movsl
sub
addr16
and
adc
pop
insb
sbb
pop
daa
sti
inc
test
lret
sub
sbb
mov
or
cmp
sub
lea
dec
inc
cmp
int3
call
jnp
jb
mov
ja
out
dec
leave
jp
sub
leave
lret
mov
int3
xchg
dec
xchg
xor
jbe
add
popa
idivb
popf
jecxz
dec
pop
je
aaa
pusha
ss
add
divl
frstor
and
addr16
ja
mov
ljmp
xor
jg
and
lahf
cmc
add
push
divl
jge
mov
mov
cmpsb
cld
dec
rcrl
insl
push
hlt
outsl
movsb
and
and
lock
add
pop
or
xor
mov
push
xchg
cmp
lods
aam
fists
data16
repz
outsb
sbb
das
inc
jae
mov
out
mov
mov
mov
mov
xchg
aaa
mov
out
mov
jae
loope
loope
or
mov
pushf
add
mov
paddq
sbb
and
std
movsl
xchg
inc
pop
cmp
jnp
ss
and
mov
iret
push
xchg
jl
pop
adc
xstore-rng
cmpsl
test
enter
mov
mov
push
or
xchg
aam
call
cwtl
andl
mov
dec
jge
test
in
arpl
push
xchg
sbb
jnp
xchg
jge
dec
dec
push
push
movsb
xor
test
lret
movsl
pop
dec
setne
repz
ficompl
jb
and
cmp
daa
xchg
and
inc
lcall
sub
cmc
mull
push
mov
divl
push
xchg
sahf
das
jp
scas
movsb
sub
inc
sbb
jbe
push
sahf
ja
and
jmp
push
mov
cmpsl
test
pop
adc
pop
test
push
scas
loope
popl
fildll
insb
or
lea
adc
push
movsb
or
adc
adc
cwtl
sub
pop
repnz
out
cmp
pop
addb
mov
fs
hlt
and
outsb
jp
xor
inc
adc
push
fdivl
cs
jno
push
fisubs
rcrl
imul
in
jecxz
mov
icebp
shl
lods
dec
sbb
adc
mov
int3
hlt
push
insl
sbb
mov
add
sub
xchg
pop
and
daa
pusha
jnp
jno
popf
push
leave
push
and
xor
int
enter
jno
lcall
aaa
ljmp
sub
cmpl
mov
sahf
xchg
sbb
cld
call
jp
sbb
pop
test
or
lcall
push
mov
fidivl
xor
xchg
pop
sub
imul
push
pop
push
arpl
pop
add
je
cld
mov
mov
add
jo
adc
mulb
fsubrs
cld
xor
daa
dec
lahf
nop
sub
imul
xchg
sub
jne
add
hlt
inc
popf
jnp
adc
imul
mov
sbb
pop
cmp
or
lret
mov
push
xor
mov
and
adc
jge
bound
xchg
insb
int
stc
cmc
cltd
mov
dec
addr16
sbb
jnp
xor
inc
jle
ret
inc
pop
fcompl
cmp
add
inc
leave
int
and
sbb
jg
and
insb
test
jnp
mov
std
mov
jge
cmpsl
lret
or
pop
lahf
sti
add
xchg
mov
cltd
leave
test
inc
pop
data16
loop
jnp
aaa
or
mov
rolb
or
lahf
xchg
outsl
xchg
pop
push
fisubl
adc
lret
outsl
stos
cld
jo
xor
es
adc
or
insb
lcall
fsubrl
xchg
leave
cmc
mov
inc
mov
push
jge
add
jp
jno
in
xor
jns
or
adc
inc
jmp
jecxz
mov
lds
cmpsl
add
jmp
lea
outsb
in
aad
jecxz
fstps
mov
ds
cmpsl
sub
stc
pop
loopne
hlt
mov
daa
inc
inc
lods
jle
ret
xor
or
rorl
cmpsb
mov
rcl
sahf
jecxz
jge
xchg
sti
cmc
mov
push
and
jb
ds
stc
mov
daa
cld
xor
pop
push
lea
inc
add
into
inc
icebp
lds
rcll
ffreep
push
push
lahf
inc
repnz
aaa
aaa
sar
outsl
out
test
insb
test
les
mov
cltd
pop
lahf
jecxz
xchg
outsl
or
xor
aas
loope
jecxz
out
inc
lret
in
jno
or
mov
test
push
add
sbb
sbb
insb
movsb
pop
pop
xchg
push
ja
ret
push
mov
scas
adc
xor
fbld
into
sub
lock
xchg
dec
pusha
aam
popf
sbb
cwtl
inc
insl
xlat
into
or
xchg
adc
sbb
les
int
inc
and
adc
pop
and
sub
lods
xorl
clc
int3
and
call
insl
dec
loopne
jecxz
ret
std
pop
pop
fstl
cmpsb
push
test
xor
dec
rorb
sbb
xchg
cltd
mov
cmc
mov
push
stos
fsubp
mov
dec
and
lret
andl
cmc
fstpl
cld
push
clc
mov
mov
mov
jge
aas
repnz
sub
sub
adc
inc
and
adc
arpl
les
lods
xlat
shl
push
xchg
aaa
jecxz
pushf
mov
mov
mov
mov
jb
mov
jne
ret
mov
mov
lea
out
int
je
mov
shlb
jnp
mov
movsb
in
stos
stos
mov
js
mov
and
push
adc
mov
or
cmp
mov
shl
out
xchg
in
popf
adc
xor
xchg
insl
mov
dec
sbb
sbb
mov
mov
in
jae
jp
push
xor
sub
into
sbb
add
test
or
insl
aas
and
int3
ret
arpl
stos
mov
mulb
mov
add
xlat
in
adc
cli
mov
test
dec
pop
and
xchg
and
jge
into
mov
dec
decb
movsb
inc
in
cld
pop
loop
les
add
test
mov
popf
xor
loope
jmp
daa
orb
repz
sub
es
nop
popa
xchg
pop
call
pop
push
ret
mov
and
dec
shlb
jne
loopne
pop
jmp
mov
fwait
or
jmp
jne
xchg
pop
nop
adc
test
sub
dec
mov
xchg
pop
imul
iret
add
push
cmc
adc
stos
inc
dec
fisubs
lods
pop
pop
mov
sbb
inc
dec
xchg
or
into
mov
ja
push
jns
arpl
fmull
dec
xchg
mov
jecxz
cmpsb
sub
lcall
mov
lret
lods
cld
xchg
cltd
int
stos
gs
jp
mov
xchg
leave
subb
inc
lret
xchg
inc
js
sbb
adcl
mov
dec
adc
out
push
add
cmpsb
stos
out
dec
fnstsw
mov
mov
loop
sarl
mov
popf
popa
or
inc
or
movsb
xchg
xlat
fisubs
scas
test
dec
in
aad
add
pop
cmpsl
outsl
adc
lods
mov
pop
fucomp
jmp
dec
pop
les
adc
mov
mov
adc
mov
movsb
shr
into
inc
dec
sti
mov
out
cmp
cmpsb
sub
loope
sti
movsl
in
xor
jns
fistl
bound
inc
xor
pop
es
sti
mov
mov
fsubr
mov
orl
jmp
fisttps
mov
rclb
jnp
fcomps
dec
hlt
add
outsl
mov
hlt
orb
mov
outsb
cwtl
push
dec
mov
dec
mov
jne
jp
dec
imul
jmp
rcrl
jo
and
push
inc
clc
jo
push
add
movl
cmc
xor
outsl
lret
dec
bound
mov
xor
push
aaa
ds
movsl
add
orl
dec
sti
cmp
int
fbstp
cmp
sahf
loop
fsubs
movsb
or
and
nop
jae
aas
arpl
stos
mov
or
movsl
inc
adc
jge
ljmp
mov
rclb
ficompl
icebp
push
cwtl
fistps
and
add
enter
inc
int
xchg
orb
cmp
mov
movsl
dec
sbb
push
jle
out
ss
incl
bound
xor
ljmp
push
ja
jae
out
sahf
and
pop
pop
js
aas
subl
jno
addl
sar
loopne
add
cmp
loop
stos
mov
loop
pop
or
adc
cmc
pop
insb
push
inc
call
std
test
mov
pop
hlt
mov
rorb
adc
aad
xchg
xchg
or
push
mov
push
mov
mov
adc
repnz
and
mov
dec
cs
cli
jg
js
loope
mov
aam
jmp
xchg
fcoms
icebp
push
lahf
test
xchg
add
inc
lds
cmc
test
dec
jo
xchg
jo
shl
cmc
outsb
jmp
fisubrs
jmp
daa
and
cmp
arpl
mov
hlt
cli
into
dec
mov
roll
je
mov
loop
pop
imul
cmpsl
addr16
jmp
fwait
dec
and
push
sub
xchg
mov
add
jle
pop
and
mov
mov
mov
imul
lock
push
adc
lahf
sub
je
inc
mov
fcompl
in
sub
jns
mov
pop
in
xor
push
loope
jns
mov
cmp
das
stos
jg
push
test
loop
push
call
pusha
xchg
xchg
lret
dec
cs
cmp
js
test
mov
lahf
mov
jle
dec
or
cld
outsb
inc
sub
repnz
jne
or
mov
loope
push
andl
rcl
iret
outsl
xchg
mov
push
dec
mov
mov
pop
push
or
aad
in
mov
jbe
cmp
pop
jecxz
fmuls
adc
mov
pop
and
ljmp
daa
lods
aam
sbb
jbe
push
push
bound
pop
mov
mov
jae
pop
cmpsl
dec
lahf
rcll
je
dec
out
imul
and
xchg
sub
push
or
dec
movsl
ror
adc
cmp
fiaddl
icebp
mov
fisubrs
mov
push
jnp
sub
inc
leave
jae
or
push
jge
mov
jno
aad
mov
test
jecxz
fwait
and
or
gs
xor
js
addl
xchg
push
cmp
or
pop
push
shl
test
pop
daa
and
pusha
movsl
in
mov
dec
add
sti
mov
test
xor
dec
mov
lods
fwait
push
lret
sub
dec
mov
push
addb
in
adc
fcmove
hlt
jns
pop
arpl
ljmp
ja
jnp
test
pop
xor
dec
lret
add
jbe
lret
arpl
xor
xchg
cmp
and
jno
or
insl
shll
pop
sti
xor
in
or
into
and
popa
or
ret
xchg
mov
and
shlb
ds
push
lret
jp
jo
out
sbb
xchg
inc
jg
or
and
pop
imul
jb
xor
push
subl
jb
loope
inc
rclb
lods
rcll
lock
push
xlat
mov
in
sub
es
inc
movsl
inc
sub
dec
dec
adc
mov
in
or
sahf
push
xor
fidivrs
mov
nop
lods
sub
and
cmp
or
push
push
or
jmp
inc
cmp
mov
cmp
enter
sahf
push
stos
xchg
scas
mov
shr
xor
xor
popa
inc
clc
leave
mov
rcrl
call
and
ja
or
adc
xchg
and
or
pop
adc
cwtl
push
jg
sub
mov
imull
adc
ret
je
loopne
sbb
ljmp
cli
faddl
mov
xor
pop
adc
adc
ficompl
xchg
mov
loop
or
jp
lret
inc
or
jae
fs
xchg
push
fisubrs
insb
andb
or
cli
pop
push
sbb
push
arpl
cmp
scas
jne
adc
or
push
mov
xchg
add
cs
cmpsb
stc
sbb
ds
sbb
or
cld
addb
sahf
sub
mov
jae
mov
jb
adc
stos
inc
inc
push
and
sub
xchg
xchg
mov
insl
xchg
lods
test
xchg
mov
xchg
cmpsb
movsl
aas
pushf
jecxz
ss
jle
inc
in
jnp
dec
dec
roll
testl
pop
jo
mov
cmp
bound
jg
in
cmp
ljmp
mov
repnz
inc
pushf
xor
insb
arpl
decl
out
adc
cmp
dec
cmpsb
mov
push
dec
fwait
int3
inc
dec
int3
xchg
pop
adc
jmp
pop
dec
jne
push
push
stos
and
xor
add
repz
rcl
push
ds
add
mov
lcall
lcall
scas
clc
sbb
cmpsb
sub
sbb
andl
and
fidivrs
mov
add
mov
int
or
jmp
cmp
sub
push
adc
and
lods
adc
fisubrs
in
cmpsl
mov
inc
mov
adc
or
loop
mov
es
mov
orl
adc
pop
test
cmp
pop
and
test
xor
scas
popf
fadd
dec
cs
popa
jecxz
xchg
and
pop
cmc
adc
jge
cmp
cmp
jnp
outsl
stc
in
dec
sub
mov
lods
jb
out
jmp
data16
icebp
xchg
hlt
insb
adc
stos
xchg
testl
inc
push
xor
lea
test
and
adc
pop
sbb
jle
out
sbb
mov
pop
jp
dec
les
std
or
cmc
iret
push
in
repnz
pop
push
jg
fisubrs
mov
cmp
insb
cmp
jne
add
lods
sbb
pop
lds
sbbb
cmc
pop
insl
cltd
mov
and
xchg
pop
adc
jns
fidivs
clc
dec
jmp
jnp
mov
ja
sbb
sub
xchg
fcmovnb
mov
sbb
enter
ljmp
pop
cld
mov
outsl
mov
pop
stos
cs
and
xor
sbb
push
shl
in
jno
sub
int3
jno
mov
ja
sbb
aad
or
ds
cmp
bound
gs
rcrl
rcll
cmc
push
int3
mov
and
xchg
idivl
popa
in
sub
adc
decb
jl
fdivp
movsb
jecxz
jle
inc
iret
lds
shrl
test
jecxz
and
inc
mov
aad
in
outsl
aad
pop
mov
add
cmp
push
scas
push
pop
ss
cmp
shlb
jl
int
fs
pop
and
mov
mov
loop
mov
add
push
xchg
lret
mull
cltd
test
xchg
xor
xchg
enter
cwtl
and
push
add
jbe
mov
mov
and
gs
inc
jmp
push
push
cmp
xchg
cmpsb
ds
push
int3
test
mov
xchg
jbe
push
xchg
adc
enter
adc
fwait
mov
int3
aad
sbb
mov
repnz
jns
jge
push
fisubrl
mov
fldcw
inc
push
push
lds
fsubs
insl
fs
push
adc
xor
mov
add
lcall
in
pop
rcrb
lahf
cmpsb
xor
sahf
and
xor
icebp
ds
xor
data16
sti
enter
and
das
sub
inc
cwtl
push
pusha
outsl
mov
stos
jnp
call
pop
idivb
arpl
das
inc
mov
imul
sub
jb
repz
mov
mov
inc
xor
push
adc
mov
aaa
xor
mov
inc
xorb
cli
and
fcoml
fdivr
fadd
pop
ret
frstor
int
addr16
lret
pop
push
iret
jne
add
inc
loop
sarl
movsb
data16
cmpsl
mov
xor
adc
je
aas
aaa
int
push
rolb
add
and
sub
add
sub
outsl
sub
sub
xor
jmp
sub
cltd
cwtl
dec
lods
jae
jle
fisttpl
and
jnp
jbe
mov
cmp
dec
cld
sbb
enter
add
and
aas
cmp
sub
into
bound
cmp
unpckhps
aam
sbb
loopne
fadd
std
rcll
mov
jne
adc
pop
ljmp
inc
es
stos
addr16
rcll
jl
loopne
and
scas
push
inc
push
fucomip
or
cmp
adc
int3
dec
out
pop
or
mov
xchg
mov
cwtl
or
jmp
pop
jge
pop
pop
push
ljmp
push
in
jns
imul
push
fidivs
jle
mov
insl
adc
lret
aad
adc
ret
dec
out
imull
sti
dec
popl
mov
cmpsb
mov
aam
movsl
shlb
iret
pop
lret
in
es
inc
mov
shld
in
lods
fldcw
lret
addr16
js
fmuls
lret
mov
and
cmp
jne
xchg
dec
inc
sub
mov
adc
pop
adc
sbb
pushl
push
jle
push
xchg
cmp
xchg
adc
les
jecxz
mov
xchg
cli
bound
out
bswap
sub
inc
xchg
sbb
insl
sub
inc
or
mov
inc
sub
loopne
int
sahf
sbb
add
call
mov
mov
mov
or
add
sub
jbe
in
popf
add
xor
adc
dec
rorl
dec
repnz
dec
sbb
in
inc
adc
cmp
shlb
mov
stos
xchg
add
inc
into
and
es
imul
jb
leave
push
out
jp
and
xor
popa
negl
arpl
push
stos
es
rcrb
dec
rcl
jne
daa
xor
jno
mov
ror
add
cltd
cmp
push
or
call
out
jnp
jbe
push
lods
sub
int
ss
ds
adc
in
shll
xor
sbb
pop
jmp
inc
adc
cmpl
cmp
fsubs
ja
mov
lods
push
jb
mov
in
cmpsb
aad
xor
jg
mov
and
enter
or
lret
cmp
xchg
adc
xchg
cli
in
mov
js
sbb
roll
or
xor
sarb
inc
orl
je
es
cld
adc
lcall
push
mov
movsl
cmp
inc
js
adcl
mov
adc
jge
mov
in
sub
mov
enter
fdiv
cli
pop
jle
std
rcll
aaa
loope
rolb
mov
inc
jmp
dec
fs
fisubl
stc
lods
into
push
dec
loop
fldt
jae
inc
pop
pop
or
fwait
adc
xor
push
sub
ret
inc
sub
test
cmpsl
movsl
test
scas
out
push
push
or
and
in
cmc
fsub
mov
add
sti
adc
xlat
xchg
jbe
push
stc
push
popf
xchg
fldl
insb
mov
push
inc
pop
movl
loop
mul
pop
sahf
aaa
sti
mov
cmc
lahf
jns
mov
fwait
fwait
dec
and
fs
aas
mov
cld
pop
push
mov
mov
cmpsb
sbb
pop
add
and
pop
fdivrl
shl
divb
mov
sub
xchg
in
leave
mov
fisttpl
sti
int3
push
enter
mov
js
mov
out
sti
fisubrl
or
decl
dec
xor
and
push
adc
pop
or
push
jno
inc
aam
repz
jno
or
orb
inc
ret
ret
jl
imul
rclb
pop
jmp
push
push
push
xchg
mov
mov
cmp
lds
gs
mov
fsubl
mov
mov
inc
icebp
inc
ja
in
cli
xchg
pop
mov
add
shl
fistpll
iret
adc
mov
ucomiss
pop
add
cmp
fs
and
test
mov
dec
sarb
fs
sub
mov
push
sub
sahf
pop
jecxz
aaa
mov
lds
push
push
rolb
rorb
mov
add
lds
xchg
call
rclb
popf
test
push
rcrl
jmp
pop
xlat
adc
js
je
lret
inc
int3
fnsave
sub
inc
inc
fsubl
mov
jp
xchg
idivb
add
cwtl
imul
inc
xlat
gs
fcmovnb
jecxz
enter
xor
mov
fnsave
and
jo
cmp
mov
sbb
aas
push
xorl
mov
imul
push
push
idivl
mov
push
push
je
mov
cmp
add
dec
lcall
fnstenv
divb
fidivs
jmp
fisttpll
adc
or
cltd
xchg
mov
cmp
add
or
data16
jns
and
inc
in
inc
fmul
inc
cmpsb
xchg
lds
pop
jle
push
push
movsb
xorb
xorl
push
lds
leave
pop
push
or
std
int3
lods
cmp
subb
sub
mov
adc
ja
je
sub
sub
jge
movsb
pop
xlat
cwtl
push
dec
roll
mov
add
in
mov
rep
sub
dec
xchg
dec
mov
push
test
cmp
fistps
bswap
outsb
mov
xchg
lods
mov
loope
jne
mov
xchg
test
lret
pusha
or
int
xor
mov
and
into
enter
dec
xorl
xor
mov
je
out
xor
rcr
stos
sarb
xlat
jo
fadds
jbe
push
aas
mov
arpl
xchg
movsb
jne
aaa
dec
into
adc
stc
repnz
xor
jge
mov
and
push
jbe
iret
scas
mov
les
std
mov
push
inc
adc
lea
movsl
push
pop
dec
xchg
shlb
in
xor
shr
pop
push
not
fidivl
out
xchg
aaa
mov
and
addr16
jo
and
sbb
xchg
aas
std
int
addr16
in
jmp
pushf
sti
push
xlat
test
add
pop
mov
incl
or
sbb
repz
test
pop
ds
jne
hlt
lods
add
xchg
xchg
pop
out
sti
imul
cli
hlt
xchg
cmp
xchg
xchg
cltd
mov
fstpt
and
add
adc
jmp
xchg
scas
jmp
cwtl
lcall
jnp
neg
pop
and
pusha
enter
dec
stc
pop
jbe,pt
js
xor
sti
sarl
dec
push
hlt
ret
icebp
jp
popf
dec
int3
cmp
fdivl
jae
mov
enter
xchg
aam
ret
out
pop
xor
out
add
in
pop
cmp
sarl
mov
dec
cmp
jo
fldcw
sbb
adc
dec
dec
push
pop
mov
fsubrs
into
je
cwtl
xor
xor
ss
dec
data16
int3
lock
jns
push
dec
add
push
and
loop
testl
in
fsubl
cmp
roll
scas
test
repz
push
inc
sbb
neg
push
stos
ds
out
jbe
sub
loop
fidivrs
movhps
enter
les
test
test
jl
jecxz
mov
mov
xlat
das
or
addr16
addb
stos
push
orb
jmp
out
mov
fidivl
xor
push
inc
mov
arpl
jle
or
addr16
nop
fdivrp
cltd
movsl
test
mov
rcll
fstps
aam
cld
sbb
jo
pop
ret
inc
arpl
fdiv
je
jecxz
pop
push
mov
mov
xchg
push
lret
sub
es
cli
lea
push
leave
jae
mov
and
cmc
mov
leave
dec
add
xor
das
mov
xchg
jno
push
mov
sbb
fdivrl
xchg
sbb
mov
jmp
push
add
sbb
and
jmp
cmpsb
adc
xchg
lock
jns
mov
mov
jge
dec
pop
in
aad
add
jp
mov
in
dec
pop
lcall
aad
sub
enter
repz
adc
sti
xor
add
subb
rclb
scas
and
out
add
xor
add
cmp
shll
jle
inc
mov
mov
hlt
dec
sub
scas
add
dec
or
mov
fs
into
dec
mov
dec
iret
movsb
fwait
out
les
jno
into
jne
stos
add
repz
fnsave
sbb
lods
cmc
mov
xor
push
pop
or
adc
movsl
sub
ljmp
out
lods
pop
adc
pop
mov
mov
pop
test
cmp
pop
inc
adc
jae
lcall
test
jg
andl
lea
cmc
out
dec
sub
fdivrs
fildl
and
subl
pop
mov
aas
xlat
cmp
lret
xchg
sti
in
push
mov
inc
push
pop
add
enter
and
sbb
or
inc
inc
push
repnz
fistl
in
push
add
xchg
jl
or
sbb
xchg
scas
xor
stos
xlat
das
movsb
jp
hlt
pop
test
pop
adcl
aaa
pop
inc
inc
jne
xchg
adc
mov
enter
jmp
sub
enter
mov
pop
test
mov
sbb
xor
scas
lock
cltd
add
mov
pushl
inc
xor
repz
aaa
push
mov
fdivrs
and
ficoms
stos
or
imul
mov
xchg
pop
push
mov
xchg
inc
or
test
sub
dec
int3
out
std
sub
lret
in
imul
add
cmp
bound
jp
les
sbb
inc
or
pop
add
ret
xor
fs
xchg
arpl
movsb
roll
cli
dec
cmpsl
mov
push
or
imul
outsb
call
mov
ljmp
leave
sbb
xchg
jnp
stos
mov
test
hlt
imul
scas
jp
cmpsl
cli
scas
sahf
loopne
xor
jmp
stc
rclb
out
jno
int
xor
dec
cwtl
je
adc
mov
popa
aad
xlat
sbb
js
dec
mov
mov
xor
inc
cltd
in
jae
pop
ds
fdivs
xchg
xchg
mov
mov
jo
cltd
or
test
xor
fcmovnbe
pushf
loopne
xchg
xchg
xor
imul
xor
sub
add
in
adc
ljmp
and
iret
sti
push
jnp
cltd
shll
and
mov
dec
lret
sbbb
jns
rolb
cmp
mov
xor
bound
sbb
or
cmp
jb
lret
push
into
xor
adc
adc
xor
push
jno
mov
pop
dec
or
scas
pop
push
ret
adc
and
jnp
test
pmaxsw
mov
in
cmovbe
sbb
fcompl
shlb
push
data16
push
jno
inc
icebp
add
jp
sbb
rorl
cli
pop
push
fcoml
fisubs
jmp
mov
cld
outsb
xchg
pop
std
inc
mov
gs
xchg
popl
fwait
dec
stc
add
outsb
jns
xor
stc
arpl
clc
ret
rcrb
mov
mov
sbb
imul
sbb
cmpsl
mov
and
ds
push
rolb
push
sbb
add
aas
push
ror
aas
cmp
cmc
sbb
adc
gs
cmp
cmp
gs
push
sub
mov
in
shll
shll
xchg
ja
daa
add
in
jb
pop
int3
push
mov
and
pop
aaa
int
aas
pop
jmp
pop
push
adc
and
mov
repnz
fidivrs
idivb
inc
sub
xor
insb
inc
dec
in
out
std
enter
jo
and
sbb
adc
inc
inc
cmp
ja
mov
aam
xchg
fldl
push
add
push
sbb
adc
adc
fsts
test
and
add
push
mov
push
sbbl
jp
mov
fdivs
out
into
decl
push
inc
dec
cwtl
pop
inc
add
lret
fsubs
fimull
xchg
inc
jmp
hlt
iret
jns
dec
ret
and
dec
jo
or
adcl
jo
fs
lods
inc
xchg
push
insb
data16
inc
push
pop
fisubl
subl
orb
aam
shll
pop
sub
inc
jae
inc
scas
adc
ja
adc
mov
adc
iret
xorl
inc
in
mov
or
das
dec
sahf
xchg
jp
dec
je
stos
push
add
xchg
ds
rolb
or
mov
add
sub
mov
popa
jne
in
cmp
adc
sbb
adc
mov
fdivrl
xchg
jge
adc
aad
and
insb
push
push
mov
jmp
cs
ret
sub
or
cmp
pop
icebp
mov
dec
popa
push
ds
cs
nop
cli
in
or
ja
cmovbe
lds
sbbb
mov
pushf
or
inc
dec
cmc
push
add
or
into
stc
xchg
xor
or
sub
scas
aad
jns
cmpsl
and
fistl
or
mov
mov
pop
and
dec
push
cwtl
mov
push
imul
outsb
fcoml
dec
xlat
daa
ret
and
xchg
inc
in
lods
mov
mulb
or
mov
jmp
cmp
xchg
stc
lahf
pop
setno
sahf
stc
xchg
push
sbb
or
jbe
ljmp
mov
mov
je
mov
dec
cmpb
mov
cmpsl
and
test
movsb
or
mov
dec
loop
in
int3
mov
add
xchg
into
call
addr16
xchg
mov
mov
xchg
jns
popf
test
mov
dec
cltd
std
mov
inc
xchg
test
xor
dec
bndldx
sub
sbb
jmp
orl
and
in
insl
inc
adc
cmp
cmp
and
xor
rcl
iret
in
test
mov
push
and
jo
mulb
test
and
imul
cmc
hlt
es
ss
mov
shr
les
add
jge
fs
inc
and
jmp
mov
fsubl
add
das
pop
add
pop
arpl
mov
pop
pop
jnp
sbb
mov
scas
leave
mov
or
out
xor
repnz
add
leave
jb
test
push
mov
fwait
push
gs
arpl
sbb
das
dec
daa
sbb
stc
add
jb
add
lea
lahf
mov
shrb
mov
pop
test
mov
lret
mov
pop
mov
rcr
mov
jmp
leave
test
shl
or
out
sbb
int3
xlat
scas
mov
enter
cmp
cmp
jl
lods
mov
xor
pop
xlat
test
cld
inc
push
icebp
sarb
inc
sbb
lret
push
insl
daa
loopne
mov
mov
push
or
sub
rcrb
test
cs
test
pop
xor
xor
cld
jbe
adc
jmp
and
or
adc
fists
stos
mov
mov
fstps
repz
subl
fs
sub
mov
data16
add
popf
addr16
jo
xchg
jbe
and
jns
mov
and
sbb
lods
pop
cmpsl
adc
imul
pop
rcrb
pop
dec
inc
lret
cmp
mov
xchg
into
fsubl
call
je
pop
shrb
xchg
orl
inc
out
or
icebp
clc
cmp
aas
gs
repz
push
sbb
mov
sbb
insl
addl
icebp
sbb
jmp
ja
clc
xor
mov
adc
pop
icebp
push
cmpb
aas
popf
mov
sbb
mov
mov
call
lods
or
dec
lret
or
add
out
mov
cmp
dec
jns
sub
mov
dec
rcr
inc
lcall
mov
sub
lret
xchg
adc
in
dec
pop
jle
mov
shll
sub
sub
and
push
inc
rcr
mov
jmp
fwait
jmp
loop
and
mov
jmp
repnz
push
xor
dec
lret
inc
cli
jg
aas
scas
mov
lods
pusha
or
and
cmp
dec
fsubs
inc
xor
out
iret
sbb
or
pop
sahf
ja
push
cmpsb
addb
dec
add
sub
int3
jae
push
ficompl
jbe
ds
das
pop
aam
out
test
mov
cmp
sbb
cs
mov
mov
bound
inc
rcll
or
lret
push
inc
mov
fisubl
addl
inc
mov
add
cmp
and
push
xchg
das
mov
mov
movsl
arpl
gs
lds
in
sbb
popl
fs
sub
sbb
fcmove
fildl
xor
jmp
test
shlb
mov
les
in
rclb
popa
jb
pop
fstl
dec
adc
les
mov
add
sbb
cmp
xchg
sbb
clc
cmc
cs
xchg
pop
xchg
adc
aas
mov
fwait
jbe
stc
bound
inc
push
sbbb
fsubr
mov
jle
jnp
xor
sub
pop
cltd
push
pop
mov
cmp
dec
int
jl
lock
dec
jnp
sub
aas
ret
hlt
out
cmc
dec
in
std
push
pop
lea
das
pop
adc
ret
mov
jne
sub
cmp
pusha
roll
scas
pusha
in
mov
loop
sarb
pop
rorl
fldl
mov
jb
inc
xchg
xor
in
push
loope
cltd
sbb
rorb
insb
push
pop
xlat
push
sahf
xor
push
mov
scas
pop
lods
les
mov
adcl
repz
xor
pop
jl
out
shll
xor
xchg
jne
enter
movsb
repz
jmp
pop
xor
xchg
call
jmp
adc
pop
lods
jno
push
jecxz
movsb
push
dec
icebp
movsl
cmp
mov
mov
and
rclb
enter
inc
sub
stos
jb
or
sub
out
cmp
stos
push
fildll
sbb
push
bound
mov
adc
lods
out
arpl
lahf
lock
pop
cwtl
lds
inc
pop
cmp
and
mov
stos
mov
dec
adc
pop
dec
jecxz
js
jbe
cwtl
cs
pop
fistpll
inc
sub
icebp
and
push
mov
xchg
sub
add
sub
es
test
in
sub
push
pop
in
imul
movsb
fiadds
rorl
jp
cmpsl
js
xchg
sbbl
fsts
push
nop
and
pop
cmp
iret
stc
jo
add
xchg
stos
jnp
xchg
lods
orb
cmp
fmull
mov
cmp
stos
xor
push
jno
in
xchg
enter
adc
aad
xor
xchg
push
jmp
data16
in
pop
lret
jp
in
rorb
fmuls
loop
das
inc
je
cmp
jmp
in
xor
stos
iret
mov
cmp
das
mov
xchg
mov
lcall
xor
aad
and
xchg
dec
jae
mov
inc
mov
add
add
data16
iret
push
jg
mov
sub
loope
and
aas
push
sub
aam
sub
jle
sub
rorb
or
mov
ficomps
lods
sbb
mov
xor
sbb
lods
mov
lods
into
popa
xchg
xor
rcl
mov
adcl
scas
inc
inc
sbb
mov
sarl
cmp
rcrl
andl
ret
pushf
test
inc
imul
push
pushw
sub
subb
pop
inc
jg
xchg
adc
vpshuflw
scas
cs
add
cs
ret
add
or
sahf
xchg
xchg
fbstp
or
dec
sub
pop
inc
xchg
ljmp
push
jae
popf
mov
fldcw
loope
sub
into
ret
or
inc
push
mov
xchg
inc
fwait
outsl
nop
jne
cmp
pop
mov
outsl
call
std
sub
dec
pop
mov
cli
or
jle
shlb
lea
sbb
ljmp
aad
mov
mov
xor
lea
sbb
and
es
mov
sub
in
sub
cmp
fsubs
lcall
mov
pop
insb
adc
stc
int3
pop
mov
mov
sar
xchg
adc
pop
gs
sbb
and
xor
and
stos
fwait
iret
and
imul
mov
jne
jl
fildll
or
sti
xchg
popa
call
mov
dec
dec
popa
xor
lcall
lret
clc
push
cmpsl
jmp
lahf
mov
jo
pop
cmp
jmp
sbb
test
mov
sahf
add
mov
call
pop
je
aas
sbb
dec
shlb
pop
sub
push
jp
sbb
inc
and
add
adc
jae
or
add
ss
repnz
cld
lret
mov
or
mov
int
mov
sub
insl
nop
push
mov
sar
cmp
fucomi
bound
jo
movsb
jmp
cmp
add
in
adc
ret
jl
leave
pop
cmp
outsl
test
ss
inc
pop
fsts
mov
mov
jb
cmpsb
js
fsubr
mov
cli
out
insb
jne
subb
sub
xchg
sub
rorb
sbb
sbb
push
or
cmpsl
imul
mov
sbb
imul
lahf
push
pop
cwtl
pop
dec
mov
repnz
adcb
lods
add
js
pop
push
pushf
mov
jno
pop
bound
sub
and
and
lods
fidivs
testb
ss
inc
or
enter
push
push
dec
mov
cltd
js
push
les
fucom
inc
xor
rcrl
flds
es
dec
lods
push
xor
stos
and
faddl
sub
dec
mov
mov
cmp
aas
dec
rorl
mov
test
or
and
sub
nop
adc
int3
aaa
pop
test
mov
cmpl
pop
rcrl
insl
addr16
add
lahf
or
pop
fisubrl
adc
pop
out
arpl
cmp
jecxz
mov
insb
cmpsl
lods
add
icebp
mov
out
fistpll
out
mov
or
lock
pop
mov
repz
cld
adc
fisubs
xchg
xor
xor
nop
icebp
lcall
push
out
or
inc
aam
inc
adc
mov
pop
pop
push
addb
popl
call
mov
pop
and
clc
mov
ret
stos
sub
ret
add
bswap
add
out
xchg
jmp
hlt
repz
push
adc
fsubl
daa
xchg
inc
pop
add
test
sbb
xlat
cltd
mov
sbb
pop
xor
jle
push
adc
adc
ja
jg
mull
scas
pop
jo
hlt
mov
xchg
std
js
rcll
adc
sub
aas
aaa
into
push
or
cmp
push
or
nop
lahf
sbb
pop
inc
aad
push
stos
ss
and
sub
xor
mov
cwtl
push
cmp
mov
or
xchg
mov
pop
mov
xor
or
add
jnp
stc
push
mov
lods
fwait
imull
jae
mov
sti
xor
ret
das
add
mov
test
insb
dec
jle
sbbl
cmp
dec
add
stos
xchg
je
inc
clc
dec
imul
and
jmp
loopne
adc
mov
mov
mov
cmp
mov
add
jge
data16
cmovbe
sbb
je
dec
cwtl
sbb
test
insl
test
jmp
add
pop
lcall
sub
movsb
lahf
cmp
inc
cmp
and
pop
cmpsl
ret
mov
les
xchg
xchg
sbb
insb
cmp
sbb
shlb
pop
nop
xchg
fsubr
inc
repz
icebp
mov
adc
and
sbb
mov
outsb
fldenv
sarb
pop
stos
push
mov
inc
fisttpll
mov
hlt
aas
insl
loop
clc
jns
ficompl
inc
lds
or
dec
sarl
xchg
xlat
pop
or
xchg
push
xchg
jmp
lahf
je
mov
xor
sbb
cmp
cmpsl
leave
xor
mov
scas
inc
mov
xor
inc
mov
adcl
dec
sub
xor
dec
push
inc
cmpsl
xchg
fucomi
mov
repz
adc
lock
sbb
jbe
es
jns
pop
fsubrl
inc
adc
testl
leave
sub
jge
or
cmp
lds
sub
aas
push
push
andb
lock
movsb
inc
cmp
ret
jecxz
repnz
xor
imul
xchg
leave
or
scas
inc
int3
sub
pusha
in
mov
adc
adc
lcall
xchg
push
push
sbb
movsl
jl
sub
fldt
add
movsb
sbb
das
xchg
les
push
lods
ljmp
jae
push
sbb
or
add
pop
jle
adc
add
rclb
add
push
shll
xchg
inc
pushf
cmp
pop
mov
cmp
cltd
inc
stc
jbe
xchg
das
mov
mov
mov
mov
dec
mov
fwait
adc
pop
push
xchg
lret
fs
scas
pop
out
repnz
xor
fcmovbe
lret
xor
popf
adc
movsl
add
cmp
lahf
adc
imul
int3
rcrl
stc
mov
dec
addl
subb
mov
insl
dec
push
ret
pushf
mov
mov
push
jl
push
fdivrl
or
repz
sbbl
mov
inc
notl
mov
mov
push
mov
add
jmpw
sbb
pop
inc
out
mov
fildl
leave
jnp
xchg
or
push
cmpb
orl
jmp
ljmp
test
push
orl
aam
xor
dec
in
pop
adc
pop
aad
pop
cmp
in
or
lock
pop
cmp
add
push
mov
cmp
xchg
push
pop
or
movsl
out
pop
pop
pop
sbb
dec
repnz
fcomps
scas
mov
fiaddl
xchg
sbb
dec
loop
xchg
shlb
outsb
mov
jo
mov
subb
sub
cmp
dec
push
stos
push
or
xchg
cld
pop
aaa
ds
mov
in
add
push
sub
push
pop
adc
shl
pop
and
xchg
adcb
inc
jmp
stos
cmp
mov
push
scas
movsl
es
xor
loop
cmp
stos
shll
out
jnp
and
call
lock
push
lret
into
sub
out
mov
jp
fstp
xlat
push
scas
or
mov
outsl
sub
jmp
pop
xor
mov
and
and
out
pop
loope
out
cmpsb
jb
xchg
mov
std
scas
ja
jmp
lret
popf
dec
into
lods
cs
ds
inc
gs
push
push
les
in
icebp
call
mov
jo
fucomip
push
cltd
and
jne
jno
sbb
bnd
aad
nop
aad
sbb
dec
or
lret
int3
sub
inc
mov
lods
dec
nop
fwait
rclb
sbb
mov
add
fcompl
push
push
xor
cmp
loopne
decl
mov
out
mov
or
dec
iret
mov
dec
mov
movsl
ret
data16
sub
mov
jne
ret
jp
mov
cmp
xor
xchg
popf
or
cli
loop
scas
movsb
xchg
add
cmc
div
je
sbb
leave
or
loop
adc
sub
xchg
push
subb
sbb
insb
test
shll
fistpl
imul
pop
insb
ss
pop
cwtl
aam
mov
mov
in
mov
inc
jge
dec
lret
xlat
hlt
xor
daa
pop
int3
mov
sti
inc
xchg
andb
push
pop
pusha
dec
mov
rcr
add
xchg
mov
cmp
inc
mov
add
add
in
pop
in
xchg
jecxz
pop
out
aam
cld
in
fildl
idivl
jmp
mov
inc
jnp
dec
inc
ja
jbe
aad
popf
sbb
lea
ss
pop
or
mov
dec
daa
xchg
xchg
int
pop
fnsave
icebp
lock
xchg
or
mov
ret
mov
cld
ss
add
mov
adc
adc
mov
dec
call
sbb
and
cli
inc
push
or
jle
and
enter
push
fisttpl
sub
clc
inc
fdivrl
aaa
xor
pop
push
cmp
rorb
pop
fs
cmp
add
ret
dec
inc
outsl
fiaddl
in
and
in
cmp
and
and
add
pop
repnz
ljmp
jge
jne
jbe
mov
adc
leave
pop
pop
fwait
adc
lcall
jae
test
fldl
push
lret
in
test
stos
fcmovne
pop
mov
sbb
ja
xchg
std
hlt
lea
jp
sbb
or
pop
or
mov
cli
dec
fistpll
sub
push
mov
push
movsb
xchg
mov
pop
push
jne
pop
loope
pusha
xor
mov
fwait
iret
xlat
cli
in
sub
loope
jae
xor
test
push
dec
std
scas
ljmp
or
push
cmpsl
add
inc
movsl
xorw
out
in
sub
dec
notb
xchg
jne
cli
xchg
scas
bound
inc
lret
xor
pop
mov
push
jecxz
lods
adc
das
mov
push
jo
and
jbe
push
ds
cli
cs
dec
rol
andl
xchg
push
mov
mov
mov
cmpsb
jmp
inc
insw
movsl
jns
xchg
outsl
lods
mov
movsb
loop
push
xchg
xchg
jecxz
inc
lock
and
pop
sarl
pop
xor
adc
adc
nop
xor
in
sbb
cmc
adc
rcrb
push
cmp
jecxz
mov
aam
rorl
inc
bound
sub
dec
sbb
pop
inc
stos
lret
leave
cmpsb
imul
stos
push
mov
lock
push
movsl
mov
lret
mulb
test
inc
scas
mul
inc
inc
test
out
jne
dec
add
mov
orb
push
adc
sarb
mov
add
push
fcomps
test
scas
int
lock
test
cmpsb
inc
cmc
dec
mov
dec
loop
inc
enter
jle
stos
cld
mov
adc
aaa
aam
js
or
inc
xchg
mov
mov
int
jle
mov
clc
mov
ret
mov
stc
sub
sub
jle
xchg
jns
pop
push
mov
and
in
add
or
mov
movsl
nop
imul
jnp
sbb
vpmulhuw
pop
aas
dec
and
or
ja
xchg
mov
inc
shll
imul
nop
lods
push
cmp
lcall
inc
dec
in
pop
imul
cmpsb
fstpt
and
sub
xchg
push
or
insl
mov
stc
lods
dec
loope
std
sbb
pop
add
and
cwtl
addr16
push
leave
sbb
mov
jnp
and
scas
in
jbe
stos
add
cmp
inc
pop
fcoml
enter
jbe
mov
cmp
jbe
push
mov
cmp
xor
lea
mov
mov
mov
xor
cmp
pop
xchg
clc
repz
dec
dec
mov
adc
jmp
cmp
cmp
xchg
jmp
test
mov
jae,pn
daa
pusha
or
ss
fimuls
inc
mov
lock
push
dec
add
cmp
push
lea
negb
mov
shrb
sbb
sbb
aad
pop
test
int3
adc
stos
outsb
sarl
fisubrl
or
mov
mov
or
push
or
xchg
shll
inc
inc
lods
pop
shrl
mov
or
outsb
xchg
dec
and
xchg
mov
jbe
and
or
rcl
cli
pop
int3
fsubrs
lea
imul
aaa
add
mov
or
xchg
mov
outsb
in
jg
dec
inc
mov
icebp
and
out
mov
imul
sbb
xor
lret
ja
inc
mov
test
push
or
jmp
xchg
fistl
lret
push
cmp
iret
pop
cmp
jmp
lock
pop
inc
fwait
inc
loope
int
es
int3
jl
sub
int3
inc
push
pop
mov
cld
scas
mov
xor
adc
outsl
mov
mov
and
icebp
or
mov
std
aaa
sub
xchg
or
stos
nop
mov
lret
popf
lret
xchg
mov
pop
mov
lret
les
and
test
sub
fs
dec
out
ja
shrl
shl
in
fsubrs
cmpsb
dec
js
addr16
push
mov
mov
inc
jge
rdtsc
mov
stc
nop
xchg
loopne
jno
popf
or
in
xchg
nop
sarl
sbb
das
mov
daa
mov
int
nop
in
or
aas
mov
inc
pop
aas
dec
mov
xchg
int
add
xchg
xchg
int
pop
mov
scas
sbb
out
cmp
push
pop
and
rorl
imul
hlt
mov
pop
inc
xchg
xor
push
cld
add
dec
sub
stos
jecxz
movsb
xor
arpl
adc
sahf
push
repnz
mov
and
jae
or
xlat
scas
psrld
shll
push
push
std
lret
out
in
icebp
imulb
lcall
loop
stc
xchg
jle
cli
sub
push
push
nop
xor
inc
sbb
leave
cmp
dec
and
add
cmp
push
cmp
jae
mov
jno
lock
in
repz
movsl
cli
test
xchg
in
sbb
bound
adc
test
leave
cs
xor
in
es
inc
std
cmp
shrb
subb
rclb
mov
or
loop
icebp
push
fbstp
cli
jae
jbe
cmp
gs
push
cmp
icebp
inc
cmc
mov
xor
dec
push
lds
pop
mov
sbbb
push
cmp
push
push
lahf
ja
jae
push
pop
or
and
outsb
push
insb
mov
pop
cld
push
and
lds
cli
lea
cmp
mov
jns
lods
test
scas
add
or
push
sub
sbb
test
mov
loope
int
shl
inc
sub
in
add
push
bnd
sub
pop
xchg
int3
lret
jecxz
outsl
xchg
sahf
dec
cmpsb
push
call
add
adcb
mov
into
repz
cld
pop
adc
or
inc
inc
jecxz
mov
mov
fs
test
mov
ret
sub
sbb
cmp
lea
lret
xchg
xchg
mov
fmul
xor
lahf
out
std
jne
pop
inc
movsb
mov
cmp
pop
test
stos
jmp
fucom
adc
and
fadd
and
test
in
into
inc
mov
mov
in
mov
aam
sub
cmp
jp
mov
mov
iret
xor
inc
adc
lret
repnz
xchg
and
sbb
scas
pop
or
pop
mov
test
insl
test
xor
or
subl
dec
es
stos
mov
push
out
mov
movsb
icebp
sub
aas
mov
cwtl
daa
shlb
lds
xlat
mov
cs
dec
lcall
mov
sub
mov
dec
cltd
xor
xchg
nop
fidivs
xor
xchg
je
out
in
pop
ja
aas
dec
shrb
pop
adc
mov
fwait
cmp
pushf
jle
cld
ja
sbb
inc
decb
jne
jp
push
mov
adc
pop
and
movsl
inc
fildl
aad
jle
jo
popa
add
orl
xchg
dec
sbb
in
lea
xchg
lods
adc
stos
mov
dec
push
int
or
lods
mulb
adc
add
loopne
inc
or
jmp
lock
jmp
int
outsb
push
xchg
leave
or
popf
rcrb
or
push
js
movsl
sbb
fidivrl
mov
aam
sub
pop
movsl
pop
roll
je
test
inc
or
xchg
aam
pop
push
dec
sahf
lret
cwtl
add
loopne
jmp
cmp
add
iret
xor
mov
inc
jo
mov
imul
and
es
or
pop
jmp
or
mov
enter
lods
or
insb
fidivs
movsb
xchg
fisubrs
jmp
and
dec
pop
and
in
and
pop
cmp
in
jp
or
lock
dec
ret
sub
int3
sbb
pop
popl
arpl
in
test
sub
jge
jp
xor
pop
lret
lret
sti
js
xchg
xor
aas
aaa
shlb
push
inc
shlb
sbb
lea
inc
add
insb
and
arpl
push
lds
or
mov
fidivl
into
jmp
xor
test
arpl
mov
in
or
pop
dec
cmp
and
pop
movsb
cmpsb
xlat
pop
les
jecxz
out
push
daa
cmc
das
inc
iret
pop
stc
cli
xchg
mov
xor
into
xchg
xor
jge
shrb
sub
jns
dec
xor
mov
sbb
xorl
inc
popa
sbb
repnz
mov
sub
icebp
cwtl
scas
int3
enter
mov
inc
lods
mov
jae
adc
mov
shl
or
nop
mov
jns
imul
lret
jmp
jl
jge
inc
insb
pop
test
es
inc
jp
or
pushf
rcl
mov
pop
aad
loop
sub
xchg
fs
das
lahf
arpl
sahf
adc
add
mov
loope
mov
adc
dec
loop
dec
icebp
ffreep
xchg
inc
push
xchg
mov
mov
pop
xchg
addl
fstpl
or
sub
xor
shrl
jae
out
xor
sahf
movsb
loopne
sbb
pusha
xchg
add
mov
push
xchg
adc
fsubp
stos
leave
repz
jne
mov
xchg
pop
mov
xchg
setl
push
mov
mov
pop
test
insb
movl
outsl
xchg
mov
lods
sahf
and
xorb
cmpsb
bound
xor
or
fnstcw
cmpsl
andl
andb
imul
jno
mov
into
out
jecxz
and
aam
pusha
mov
scas
dec
and
lods
inc
stos
jge
mov
pop
mov
cld
or
fs
daa
out
cld
ljmp
rcl
addb
cltd
dec
add
pop
sbb
stc
jecxz
jns
inc
or
mov
outsb
ds
pop
int3
popf
xlat
and
xchg
jb
repnz
push
faddp
fs
out
add
push
shll
je
inc
jb
testb
out
out
nop
rorl
xchg
dec
pusha
inc
out
jne
and
scas
neg
repnz
or
push
push
add
sbb
pop
push
rcrl
dec
push
fadds
cmp
mov
cltd
add
mov
and
push
push
and
hlt
addr16
testb
sahf
and
xor
mov
xchg
add
mov
inc
loop
jns
mov
mov
lcall
add
fsubrs
adc
scas
movsl
sub
pop
pushf
mov
icebp
ret
icebp
loop
and
sbb
fs
les
pop
pusha
pop
add
cwtl
mov
cmp
cmp
inc
outsb
xchg
or
std
push
je
and
push
push
cmp
adc
fxtract
add
xlat
test
adc
mov
push
stc
mov
adc
sahf
ljmp
fwait
dec
xor
fiadds
sbb
in
dec
popa
xchg
in
enter
jmp
push
leave
add
mov
pop
xor
enter
in
fnstcw
adc
jnp
clc
xchg
sbb
or
fistps
mov
rorl
push
outsl
faddp
xchg
mov
das
imul
subb
jb
push
cmp
xchg
int3
aad
mov
mov
sar
push
push
mov
and
jne
xor
cmp
push
dec
aam
aad
mov
je
ja
adc
das
cmp
jne
sub
in
cmp
filds
and
outsb
push
setle
fsubl
and
int3
xorl
movsb
lahf
mov
in
stos
test
sbb
out
inc
cmp
dec
xchg
cmp
cmp
jne
jl
inc
pop
cmp
xor
dec
add
aad
arpl
test
mov
data16
int
dec
push
stos
push
pop
jl
xor
inc
nop
sbb
xchg
shlb
ror
sar
das
sbbl
fimull
push
pop
or
in
mov
cwtl
cmp
in
mov
bts
mov
xchg
stos
mov
xor
in
imul
stc
xchg
mov
lret
testb
jo
sub
xor
leave
ret
stos
pop
mov
cltd
popa
and
outsb
pop
call
pop
arpl
or
adc
sub
xor
ds
sbb
mov
xor
inc
push
cmp
out
or
or
xor
mov
repz
mov
cmp
and
mov
rcrb
or
call
mov
mov
cs
aas
inc
repz
mov
lret
xchg
aad
mov
lcall
fnsave
jo
pusha
push
mov
loop
adc
scas
js
mov
push
sti
outsl
and
adc
inc
dec
pop
jmp
enter
xchg
mov
ret
xchg
out
stos
xor
hlt
pop
in
shrb
pop
sub
testl
xor
mov
and
sub
jb
or
adc
push
scas
enter
xor
xchg
pop
loopne
out
jae
adc
sub
ficompl
ss
andb
data16
subl
fwait
or
dec
int3
push
cwtl
inc
pop
cmpsl
cmp
out
xchg
out
out
test
jmp
lock
pushf
push
mov
mov
lock
cmp
test
mov
cmp
or
push
jmp
push
xchg
xchg
push
gs
insl
call
icebp
mull
add
push
jl
es
aam
mov
sbb
jp
mov
sbb
jae
mov
daa
xchg
repz
xlat
test
ss
sbb
in
push
or
inc
imul
mov
dec
arpl
pop
loopne
adc
pop
dec
fsubrs
pop
movsb
mov
mov
aam
mov
out
insb
sub
stos
inc
and
inc
orb
dec
or
ficompl
out
int
push
rcrl
jg
das
adc
xor
inc
inc
test
stc
mov
adc
in
xchg
dec
jbe
loopne
xchg
test
inc
push
pop
ret
in
sti
xor
jecxz
pop
popa
adc
sbb
xchg
in
jg
gs
push
clc
addr16
ret
xchg
repz
fstps
xor
pusha
pop
fldlg2
imul
inc
and
and
movsl
pop
or
lods
adc
test
es
cmp
adc
bound
into
dec
sbbl
and
shll
movsl
aaa
xorb
into
cld
dec
dec
cmp
lret
sarl
sub
pop
mov
mov
scas
dec
std
add
pop
scas
aas
es
les
add
xchg
fidivrl
dec
andb
roll
cmp
loopne
in
mov
repz
push
lret
sbb
sbb
push
ljmp
sub
pop
pop
ret
clc
idivb
adc
in
pop
adc
mov
mov
mov
cmpsl
cmc
shrb
adcl
es
jo
pop
sub
xchg
dec
lcall
cmpsl
jnp
mov
fwait
in
or
lds
jo
sub
or
mov
pop
xlat
leave
scas
ljmp
xchg
dec
inc
sub
rol
out
xor
loope
and
xlat
or
xor
mov
add
fdivr
add
xor
in
iret
and
cmc
addr16
inc
fs
cmpsb
popa
mov
xor
test
mov
dec
inc
fcomps
out
sub
dec
jp
xor
adc
add
test
insl
ljmp
inc
or
push
sub
dec
bts
xchg
mov
or
in
push
shlb
adc
jo
pusha
add
rcll
dec
jmp
sarl
adc
sarl
aaa
mov
jno
mov
xor
cwtl
test
sub
std
xlat
xor
lods
fdivs
cmp
or
xlat
mov
aaa
sarb
pushf
cmp
jmp
add
pop
xor
pavgw
xor
std
cmp
std
fidivrs
mov
lret
lods
data16
jg
add
adc
std
pushf
daa
mov
jae
jnp
cmp
ret
and
jmp
pushf
xchg
xor
lcall
popf
enter
cmpsl
aas
leave
aad
jb
mov
mov
imul
inc
mov
sub
sub
nop
and
sub
cmp
cmpsl
ss
repz
gs
jle
cmc
push
sbb
add
mov
cmp
fdivrs
jnp
mov
sbb
jns
cmpb
adc
xor
cld
mov
cltd
lahf
out
xor
es
jo
test
lds
sub
addr16
nop
cmpsb
cmp
ret
aad
enter
and
mov
ljmp
dec
xor
jle
in
ss
mov
mov
pusha
and
cmpsb
cwtl
subb
divb
jge
dec
int3
sti
xchg
pop
mov
mov
xchg
xchg
push
ds
dec
jbe
movsb
or
fisttpll
fadd
xchg
lcall
sahf
jnp
inc
in
push
xor
pop
pop
inc
loop
mov
mov
lcall
mov
out
dec
roll
add
xchg
adcl
jnp
test
xchg
inc
test
mov
and
addr16
outsl
and
push
and
std
add
xchg
in
and
lods
jg
divb
mov
popa
fiaddl
xor
jns
sahf
push
outsb
iret
ja
sarb
and
adc
xchg
daa
inc
sbb
push
lcall
mov
repnz
lds
cmp
sbb
jae
mov
push
imul
movb
and
or
sub
add
and
insl
lret
cld
pop
cmp
ja
cmpl
push
and
lods
scas
push
xchg
dec
cld
xchg
pop
out
push
jecxz
mov
jns
sub
aam
push
pop
xchg
aaa
xor
cs
fs
aad
sbb
sti
fdivr
int
fmull
dec
or
adc
jecxz
push
loop
rcrb
jae
pop
imul
mov
pop
int
xchg
std
in
jns
mov
add
lret
test
outsb
jecxz
cs
aas
sbb
mov
je
das
lcall
jl
stos
jns
mov
fs
bound
int3
mov
fldenv
or
pop
xchg
sbb
fstpt
sbb
lods
dec
ja
push
dec
add
mov
ljmp
or
mov
stc
jp
mov
cs
shll
pop
aam
inc
pop
xchg
ds
mov
xlat
mov
jecxz
stos
pop
mov
aas
mov
jl
lret
mov
das
sub
iret
lds
dec
pop
pop
nop
shl
fcoml
mov
pop
push
popf
sbb
arpl
sbb
push
sbb
cld
in
loopne
data16
ss
cmpsl
ret
in
mov
dec
jge
lahf
xchg
pop
jle
stc
jo
and
inc
leave
out
jae
sub
sub
add
push
into
sbb
jae
add
cltd
fnstenv
jnp
cmp
and
lahf
fnstcw
jae
aas
xor
popf
orl
out
jnp
push
clc
cmp
call
xchg
cli
shl
cmp
xlat
or
adc
adc
imul
mov
jae
rorl
nop
fmuls
xchg
ljmp
sbb
and
pop
lods
dec
cs
mov
out
fs
add
or
clc
push
or
mov
and
mov
jae
ffree
sahf
lock
adc
mov
xchg
repz
adc
lds
pop
xchg
dec
sub
loop
inc
mov
enter
outsb
inc
inc
xchg
sbb
mov
xor
lret
addb
adcb
outsb
and
es
out
jns,pn
enter
arpl
mov
xchg
push
push
mov
aaa
ja
fidivrl
dec
sbb
test
and
inc
jae
sub
pop
xor
sbb
in
push
mov
test
add
push
inc
dec
sbb
in
add
jbe
sbb
js
lahf
push
push
stos
fldl
imul
incb
sbb
stc
jae
das
push
lea
stos
jo
xchg
lahf
out
sub
shlb
cmpsb
stc
push
xchg
mov
ja
into
add
mov
filds
xor
fldcw
mov
mov
cmpsl
fdivl
aam
ret
push
dec
pop
fildll
and
add
and
js
insb
out
xchg
cmc
mov
inc
inc
jmp
ret
nop
lahf
mov
pushf
inc
out
xor
inc
insl
mov
test
mov
mov
add
or
cltd
push
sub
imul
cmp
dec
push
mov
add
jg
sti
mov
inc
mov
add
jbe
lods
int3
or
fcmovbe
jne
mov
leave
inc
cmp
mov
and
inc
jl
movsl
cld
mov
ja,pt
jge
or
push
mov
cmpsl
cwtl
xor
icebp
test
aaa
or
push
popa
cmpsb
push
movsl
enter
lret
flds
inc
rcll
inc
xchg
pop
fists
xorl
or
mov
dec
aas
lcall
dec
mov
pop
add
adc
cmp
xchg
cwtl
push
hlt
push
adc
popf
jg
cwtl
inc
test
sbb
mov
pop
cs
push
inc
loope
aam
imul
inc
loopne
lods
iret
aam
jmp
cmpsb
stos
adc
in
or
mov
jne
mov
ds
xchg
fs
jge
fsubl
push
push
jbe
mov
dec
cmp
add
adcb
cmp
and
sbb
push
pop
dec
out
je
jnp
outsl
mov
es
or
xchg
mov
shl
jb
leave
lret
push
jecxz
repnz
jb
stos
jge
clc
fstl
mov
jmp
insl
mov
jmp
cmc
int3
insl
cmp
adc
cmpsl
push
jg
cmp
fnstsw
in
ret
out
cwtl
push
ret
lret
jae
and
ljmp
loop
sbb
imul
and
das
or
fistpl
gs
addr16
and
mov
and
mov
frstor
push
fcoms
mov
mov
test
int
sbb
mov
cld
jne
inc
lock
or
jb
cmp
ret
wbinvd
test
out
add
data16
adc
push
lods
cmp
add
fwait
and
push
xor
sub
xchg
jecxz
sub
cmpsl
hlt
xor
xor
insl
add
pop
or
jg
out
xor
dec
lcall
repnz
gs
sbb
jg
shlb
jne
or
shrb
adc
mov
ja
jns
es
xchg
sub
and
iret
gs
or
cltd
push
jno
orl
daa
sub
inc
inc
outsb
xlat
stos
je
push
test
test
nop
push
dec
jmp
push
mov
stc
push
ss
mov
mov
stos
mov
mov
or
adc
ja
daa
jae
aad
repnz
insl
mov
mov
insl
pop
mov
and
xchg
dec
pop
gs
fldl
pushf
add
aad
cmp
cmp
cmp
inc
loop
ja
pop
cmc
push
mov
pop
sub
cli
movsl
add
into
cmp
repnz
mov
sbb
adc
faddp
insb
jp
psllw
mov
mov
push
sub
inc
mov
sub
cmp
lds
adc
push
ret
enter
mov
fdivrs
cmp
or
pop
xchg
push
pop
jmp
flds
sbb
incl
mov
mov
push
stc
xchg
inc
loopne
fimull
aam
lcall
sub
sbb
test
js
pop
pop
cmp
pop
data16
inc
pop
cmpsl
adc
cli
jmp
adc
aam
loop
xchg
lds
int
out
stos
pop
pop
pushf
daa
pushf
xor
dec
imul
inc
sbb
sbb
negl
rcl
sbb
jno
inc
adc
icebp
xor
xlat
int3
inc
sar
mov
out
sub
adc
pop
jl
sbb
hlt
xchg
pop
stos
aas
xor
lret
outsb
mov
xor
adc
or
push
out
mov
or
in
sbb
xchg
repz
into
pop
adc
push
push
adcb
sti
xor
xor
leave
fs
xorl
repnz
arpl
xchg
mov
push
outsb
je
push
lds
cltd
dec
out
icebp
jnp
mov
ljmp
mov
fmul
jecxz
ljmp
lds
ljmp
loopew
clc
ljmp
inc
dec
push
add
popa
popa
outsb
dec
data16
mov
sahf
dec
push
imul
jg
outsl
mov
pusha
lds
hlt
aad
sub
test
sbb
je
in
movsb
jns
jae
leave
xor
jmp
jge
mov
sub
xchg
mov
orb
cltd
mov
sub
adc
inc
push
sub
inc
fs
ja
xor
imul
adc
scas
or
out
inc
icebp
ss
mov
or
int
mov
mov
mov
mov
cmp
test
push
fiadds
in
or
pop
ljmp
out
mov
cmpsb
mov
pusha
cmp
push
rcl
rcl
aam
adc
loope
jne
add
out
mov
cs
pop
out
adc
xchg
hlt
lods
cmp
or
sub
stos
pusha
jp
rol
imul
stos
mov
popa
or
stos
loope
jecxz
ss
std
mov
shl
push
fldcw
sub
dec
shll
push
out
sub
mov
and
sahf
dec
xlat
fstpl
cmpb
adc
orb
cmpsl
aam
sbb
xchg
popa
lods
hlt
xor
int3
repnz
xor
test
pop
aad
clc
lret
cbtw
adc
outsb
clc
iret
cmc
adc
lds
mov
inc
and
clc
add
lret
dec
xlat
and
cli
adc
stos
addb
mov
cli
add
clc
inc
sbb
mov
xor
int3
jb
jg
fimuls
pop
fwait
xchg
pop
sbbb
push
dec
pop
add
out
cs
xlat
cmp
or
imul
out
insl
mov
adc
jmp
dec
add
sahf
popa
sbb
stos
xchg
push
daa
mov
arpl
addr16
ss
push
xchg
pop
repz
adc
pop
lret
bound
sti
jecxz
shr
cmp
test
cmp
addr16
pop
push
inc
xchg
scas
test
mov
lods
mov
push
in
xchg
popa
test
enter
popa
and
sbb
filds
lea
mov
xchg
and
popa
push
cmpb
mov
lret
pop
xchg
test
pop
stos
ds
popa
add
das
jmp
shlb
push
cmp
xor
scas
and
out
addr16
ret
sahf
push
hlt
test
int3
push
mov
insl
pop
mov
test
mov
dec
or
cmp
sub
push
cwtl
mov
mov
push
popf
xchg
xor
mov
or
ret
push
lods
imul
dec
pop
pop
xchg
das
je
fisttpll
aaa
xchg
imul
sbb
fs
inc
jmp
lret
cmp
shll
in
cmp
or
iret
lcall
stos
es
push
dec
dec
jp
sub
pop
sbb
sub
test
sysexit
sub
ss
arpl
fsubrs
roll
pop
das
pop
lahf
push
inc
lahf
lret
pop
inc
pop
ja
fadd
sbb
mov
or
adc
imul
das
or
xchg
jb
imul
aas
add
push
insl
clc
cmp
xorb
shl
pop
ljmp
inc
pushf
jp
sti
aas
loop
xchg
pop
repz
sub
popf
shlb
xchg
dec
mov
inc
dec
xchg
dec
pop
rorl
andb
dec
dec
into
pop
dec
js
ret
xchg
jae
hlt
orb
or
xchg
clc
xor
pop
cs
stos
push
jmp
cltd
push
js
fwait
insl
out
pop
mov
arpl
push
rolb
aas
add
mov
in
push
xlat
jp
clc
fisubrs
xlat
push
les
jp
push
push
gs
mov
push
pop
mov
mov
xor
dec
cld
xchg
dec
popa
stos
ds
fstps
aam
jno
adc
cmp
and
jge
clc
sbb
mov
lods
ljmp
inc
add
pop
mov
std
pop
testl
cs
popa
mov
mov
or
pop
sbb
addl
dec
into
hlt
push
add
sub
negb
pushf
rol
mov
negl
fwait
cltd
decb
add
mov
pop
mov
mov
jecxz
pop
push
xchg
ds
mov
out
out
xchg
inc
cmp
cli
cli
pop
repz
lea
jbe
inc
xor
out
push
rcrl
inc
in
xor
mov
and
rcll
jbe
mov
mov
fldenv
mov
mov
dec
ljmp
call
imul
lods
mov
sbb
mov
jmp
sub
push
loope
mov
push
rcll
jb
mov
push
pop
cmp
shr
mov
jl
sbb
cli
sbb
stos
sahf
sbb
add
push
popf
xor
stos
mov
sbb
and
inc
mov
sbb
sti
jecxz
lock
sbb
push
je
xor
sub
inc
xlat
in
mov
and
out
lahf
movsb
fldenv
in
push
pop
in
test
sub
cmp
lods
and
and
rcll
xorb
xor
sbb
loopne
pop
mov
shrb
jp
adc
and
enter
jnp
push
inc
popa
pop
mov
lods
cmp
push
jg
sub
and
call
repnz
outsl
sub
push
jl
xchg
mov
ret
imul
arpl
or
loop
daa
repz
or
xchg
enter
cmpsb
mov
mov
mov
jle
push
lock
jbe
push
hlt
leave
push
mov
xor
inc
cmc
ret
xor
aad
cmpsl
call
sbb
inc
adcb
cmp
mov
mov
jb
inc
push
gs
sbb
ja
push
mov
rorb
ds
jno
faddl
lcall
xor
xorb
xorl
aam
mov
xor
push
out
fsubrl
pushf
mov
repz
xor
and
pop
mov
ret
pop
mov
or
out
sub
int
sub
popa
lahf
or
mov
pop
dec
mov
adc
ret
sbb
xor
jne
dec
mov
adc
xchg
cmp
jb
int3
jmp
push
imul
inc
push
sub
repnz
xor
nop
out
or
icebp
popa
jb
aaa
in
cmp
xor
adc
shlb
in
movsb
jl
or
xchg
aaa
and
orb
out
rol
inc
cmp
test
bound
and
mov
cvtps2pi
mov
pop
xor
mov
pushf
dec
adc
inc
in
jne
nop
push
popa
test
outsl
fucompp
fs
inc
adc
jge
mov
sub
xor
sti
lock
or
jo
movsl
pop
cmovs
and
jmp
stos
add
sub
xor
dec
f2xm1
cmp
mov
aas
xchg
movsb
adc
pop
xor
mov
pop
mov
mov
rol
ret
or
fwait
dec
add
dec
cmp
push
idivb
mov
push
jl
push
imul
pop
jb
popf
and
mov
adcb
loope
pop
inc
jle
scas
push
dec
and
js
mov
mov
mov
mov
pop
push
lcall
xlat
gs
mov
dec
repz
scas
in
das
inc
je
dec
mov
mov
call
cmp
inc
mov
dec
adc
push
xlat
xor
push
scas
lods
mov
xchg
mov
push
jns
jns
cmpsl
jg
push
lret
push
in
sbb
or
jns
divb
xor
lea
dec
loope
movsb
inc
sub
jne
movsb
inc
jns
xchg
lcall
dec
xor
icebp
pop
mov
hlt
out
jl
paddsw
mov
daa
cli
mov
jbe
pop
lods
test
xchg
dec
das
pop
rcl
cmpsb
je
loopne
sub
ljmp
xor
in
vunpcklpd
and
icebp
into
pop
popa
rol
test
rol
pop
or
mov
ret
fwait
stos
cmpsb
popf
jnp
addr16
or
and
add
iret
cli
xchg
stos
or
hlt
pop
xor
bound
and
xor
sub
or
xchg
dec
imul
ljmp
sarb
sbb
mov
clc
dec
push
iret
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
fdivp
movsl
xchg
mov
push
lahf
mov
test
ds
mov
push
fisttps
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
inc
mov
cmp
nop
add
pop
cmc
iret
iret
stos
jl
jb
repnz
or
jno
and
ljmp
lock
inc
outsl
xor
aas
mov
sub
push
cwtl
shrl
jbe
jge
lcall
cltd
lock
mov
loopne
andl
push
push
cmpsl
mov
clc
ret
xchg
fs
sub
pop
aad
add
sub
fistpl
add
xchg
and
or
mov
inc
dec
sbb
pop
xchg
or
aas
fimuls
xchg
pop
int
lock
mov
adc
add
dec
xchg
clc
jo
out
repz
sub
mov
pop
xchg
test
xchg
mov
push
sahf
inc
xchg
mov
fsts
sub
push
lahf
dec
xchg
test
cmp
mov
push
lahf
dec
xchg
test
out
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
fsts
sub
push
and
test
xchg
aas
fsts
cmp
push
xor
adc
add
dec
subl
adc
add
int3
std
mov
fsts
sbb
push
push
jne
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
repnz
lods
adc
add
inc
xchg
test
xchg
mov
push
lahf
dec
ret
in
jbe
mov
add
push
popf
int3
stos
jo
add
sbb
mov
push
mov
xchg
mov
push
lahf
dec
mov
xor
adc
add
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
lahf
dec
xchg
test
xchg
mov
push
jno
xchg
xchg
cmp
mov
mov
add
mov
cmp
std
fsubrs
sti
adc
cmpsl
fxch
sbb
add
mov
cmp
mov
push
xchg
push
sahf
jl
addr16
test
stos
xchg
dec
jmp
mov
cs
xor
shll
fistl
mov
jmp
xchg
lcall
push
outsl
xchg
nop
lock
fwait
mov
cmp
cli
adc
roll
or
insb
jae
mov
push
clc
sbb
int3
ret
out
sbb
or
dec
ss
shl
mov
sbb
jmp
push
push
scas
cwtl
imul
lcall
mov
aam
cmp
jo
mov
cwtl
outsl
inc
jge
call
xchg
dec
sub
aad
fwait
xor
sub
mov
hlt
nop
repz
aad
mov
xor
sub
dec
inc
push
cmp
scas
ret
pop
cmp
repz
ficoml
call
idivl
ja
cmpsb
pusha
roll
addr16
mov
lods
stc
leave
pop
movsb
imul
and
inc
jl
mov
insl
mov
out
push
adc
sbb
and
sar
scas
push
or
mov
les
shr
jbe
insl
xchg
sub
subb
xchg
in
xor
je
leave
mov
inc
push
sub
js
xchg
es
out
ss
data16
in
lds
jae
cmp
adc
filds
mov
push
sbb
mov
and
jmp
imul
mov
mov
xchg
sub
insb
dec
aaa
mov
pop
pop
mov
loop
ljmp
xchg
cs
inc
push
pop
xchg
cmp
mov
mov
jns
pop
lock
mov
cmp
imul
or
xor
xor
push
rcrb
push
rclb
rcll
xchg
je
cwtl
test
xlat
sti
test
add
mov
sbb
push
pop
aam
nop
clc
outsb
adc
outsb
jbe
push
jae
add
and
pop
loope
jne
in
sub
sub
adc
jnp
es
cmpsb
insl
or
in
add
or
pop
pop
mov
cmp
cltd
popa
pop
lret
add
cmp
jmp
xchg
lcall
mov
aaa
push
mov
ljmp
ror
dec
jl
jle
push
push
pop
dec
sub
xor
lods
and
jb
lar
fcmovb
shrb
hlt
sbb
dec
data16
lds
pop
jecxz
fisttps
scas
jge
test
in
addl
sub
xor
inc
push
scas
xchg
cmpsl
pop
fdivp
jno
sub
test
test
or
adc
sbb
add
sub
mov
mov
sub
mov
jecxz
cmp
dec
cmp
repz
add
add
cs
jge
mov
hlt
aad
mov
or
sti
test
js
js
push
xchg
mov
add
nop
pop
xchg
int3
int
mov
out
mov
cmp
cmc
mov
add
iret
xor
and
and
push
fistps
bound
mov
adc
sar
sub
hlt
shll
sub
data16
ljmp
adc
loope
fstps
mov
mov
and
clc
lret
loopne
inc
and
stos
imul
nop
test
and
stc
cmpsl
loope
cltd
leave
pop
stos
pop
fs
sub
dec
cwtl
ss
cmp
cltd
out
jge
push
dec
js
xchg
jnp
gs
and
je
mov
add
mov
sub
mov
pop
ret
cld
add
stos
dec
scas
cwtl
mov
mov
ret
and
push
ret
mov
lds
bnd
fnsave
mov
mov
pcmpgtw
jecxz
movsb
fs
pop
add
lds
jmp
push
adc
lret
shrl
add
pop
into
test
pushf
ffree
sahf
sub
sbb
sbb
and
pop
sbb
fdivs
xchg
and
cmp
push
pop
push
or
jl
pop
adc
jp
shl
data16
mov
sbb
mov
or
ljmp
test
inc
outsl
and
mov
jbe
into
stc
repz
fwait
inc
sar
sub
mov
or
mov
push
pushf
test
pop
bound
jno
sub
cmpsb
xor
mov
xor
mov
jae
cmp
xchg
orb
push
cs
xor
cmp
push
ss
sub
dec
lcall
nop
mov
and
push
push
add
mov
push
pop
add
std
sbb
xchg
iret
push
inc
xor
dec
aam
popf
fs
xor
lcall
outsl
adc
fldenv
imul
lods
adc
jnp
inc
pop
fcomps
push
add
mov
dec
jne
daa
aaa
test
out
divl
adc
pop
and
or
rol
or
lret
mov
pop
adc
jecxz
lock
mov
in
sbb
shl
push
mov
xchg
push
nop
mov
jg
pop
nop
jbe
jmp
pusha
adc
out
sti
xor
dec
jb
sbb
pop
xchg
sbb
bound
clc
in
sbb
xchg
gs
movsl
loop
xchg
inc
fistpl
push
pop
and
popf
out
sahf
icebp
xchg
push
pushf
ret
ljmp
mov
hlt
dec
push
je
inc
aaa
out
and
push
mov
iret
and
movsb
roll
jnp
in
cmp
or
in
pop
fwait
sbb
daa
paddusw
cmp
mov
fwait
jae
cltd
lahf
jns
nop
loopne
lock
cli
sbb
data16
bound
stc
sbb
push
mov
mov
add
popa
test
das
clc
mov
and
addl
jae
incl
inc
aam
mov
push
idivl
sub
mov
les
mov
cltd
mov
out
jl
and
and
sbb
xchg
std
add
sbb
or
mov
enter
sti
xor
or
mov
or
mov
into
sub
fsts
insl
insl
add
ret
in
push
mov
dec
clc
jb
sub
fidivs
loop
pusha
std
shr
dec
jne
push
cmp
push
enter
sbb
out
adcb
push
xchg
int
popa
mov
xor
sbb
testb
hlt
cmpl
adcb
loope
inc
fcmovnu
lret
or
xchg
mov
jmp
mov
mov
pop
lods
jno
mov
ljmp
lret
addl
add
cmp
jno
mov
mov
mov
icebp
sbb
xlat
stos
sbb
test
cmp
mov
fs
or
popf
mov
je
and
rcr
sbb
push
push
mov
sub
fdivrl
fimull
or
scas
repnz
aad
adc
xor
sub
inc
push
add
pcmpgtw
out
lea
inc
ret
xor
fdivrs
jne
mov
sub
pop
test
lods
push
xor
add
mov
jne
lret
jb
insl
out
jno
sbb
subl
and
xchg
ja
sub
inc
and
xchg
popa
rorl
cs
inc
and
int
dec
xchg
stos
pushf
push
mov
clc
mov
ja
mov
adc
scas
and
pop
cmp
jl
js
cltd
push
cmp
xchg
mov
jle
frstor
imul
ret
mov
add
lret
inc
sub
jno
pop
lock
jmp
ret
ret
add
or
insl
jns
add
sbb
xchg
or
dec
lcall
popf
notl
js
pop
xor
pop
imul
fidivrl
cmpsb
push
push
mov
sbb
insl
mov
jo
and
in
fildl
push
jecxz
xchg
jge
mov
mov
fst
mov
mov
inc
xor
nop
xchg
add
xchg
int3
or
ret
push
xlat
add
cmp
mov
pop
fistl
out
mov
adc
push
in
adc
xchg
push
mov
mov
shrl
mov
pop
xchg
jmp
jmp
stos
or
xchg
cmp
or
pop
adc
xor
and
dec
add
or
cmpb
in
sub
push
popf
adc
mov
repz
sahf
dec
jl
add
xchg
fmul
dec
push
mov
pop
and
jmp
mov
mov
fsubrl
mov
sbb
sbbb
ret
ds
mov
xor
push
hlt
pop
sub
mov
js
pop
scas
out
inc
lods
pop
enter
adc
jp
mov
xchg
xchg
cmp
push
or
sbb
pop
aam
or
mov
lcall
jnp
add
jnp
fidivrl
pop
test
lods
lods
dec
inc
add
inc
popf
mov
mov
fwait
inc
add
shll
jl
pushf
push
inc
popf
sub
lock
sahf
sub
ljmp
enter
or
pusha
cmp
push
fwait
int
dec
push
icebp
or
stos
add
lds
jmp
icebp
add
push
sub
xchg
inc
daa
ror
adc
gs
dec
cmpsl
xchg
jl
daa
pusha
pop
je
dec
inc
cmp
xor
std
sub
add
nop
pop
pop
mov
cmp
add
imul
cmp
dec
scas
mov
aas
test
repz
in
jmp
sarb
pop
nop
es
sub
scas
dec
jns
mov
shr
lea
test
mov
js
inc
mov
cmp
sbb
push
aaa
test
and
leave
nop
les
popa
je
xlat
in
xchg
loop
sbb
inc
cld
xor
and
dec
hlt
loopne
push
fidivrs
pop
fwait
ds
mov
pusha
adc
lcall
add
mov
cmp
les
dec
hlt
mov
xor
jmp
or
mov
lock
rcr
cmp
imul
or
aad
aas
movsb
cmp
dec
test
or
or
js
adc
aaa
sbb
cmp
sbb
mov
aaa
pushf
push
cmc
or
decl
jno
and
or
outsb
je
xchg
das
mov
in
ljmp
es
loop
pop
dec
mov
test
sbb
push
and
mov
xor
ret
lds
adc
aaa
mov
xor
jnp
cmp
loop
mov
push
repnz
fidivrl
inc
pop
sbbl
cli
xor
sbb
add
int
mov
cmp
call
outsb
cmpsb
dec
pusha
into
out
fildl
out
lea
and
jbe
sbb
in
in
arpl
ret
fnstsw
ret
mov
shrl
pop
cwtl
sbb
jecxz
scas
das
jmp
pushf
jmp
daa
adc
mov
xor
dec
jg
aaa
data16
pop
sub
push
cmp
pop
or
std
movsb
fnstsw
out
xchg
pop
cmp
push
mov
int
stc
push
jbe
jns
cmp
mov
sub
cmpsl
in
fdivrp
cmp
in
fistpl
sub
xchg
jecxz
popf
cltd
les
add
mov
lea
pop
jg
mov
fcompl
add
mov
enter
repnz
mov
push
fistps
cmc
clc
outsb
jecxz
and
cmc
and
insb
shr
pop
mov
pop
xor
idiv
mov
insl
stos
lahf
and
aad
sub
in
in
pusha
cld
sub
add
sbb
or
jns
scas
popa
push
mov
ljmp
imul
push
adc
add
fcomi
data16
lret
shll
add
sahf
cmp
cmp
jge
les
inc
ret
add
loop
and
push
cmc
lcall
and
popf
or
pop
into
imul
mov
cmp
std
scas
insl
push
orl
inc
jge
jns
xchg
add
pushf
add
imul
lea
cmc
jbe
add
pop
bound
pop
inc
enter
stos
jecxz
ret
mov
inc
std
mov
or
rolb
pop
flds
lods
dec
and
fsubrl
mov
and
insb
xor
jns
dec
icebp
mov
push
xor
pop
fwait
cltd
ret
imul
sbb
sub
mov
lods
jns
scas
jmp
cmp
jno
test
in
mov
jp,pt
jo
pusha
sub
pop
ret
gs
and
dec
adc
loop
push
outsl
sub
cld
cmpsb
sub
ret
ljmp
mov
jl
ss
addb
mov
adc
pusha
inc
andb
fbstp
push
cwtl
dec
add
adc
stc
jnp
lea
icebp
movsb
imul
and
jge
xor
pop
sarl
sbb
clc
mov
loopne
push
cli
jl
call
scas
mov
cltd
daa
mov
fucomi
inc
clc
mov
in
shl
mov
icebp
and
mov
sbb
inc
clc
movsl
add
jne
cld
fidivrl
pop
mov
fwait
jno
pushf
ss
insb
adc
cmpsl
cwtl
jb
in
aas
or
mov
sub
shlb
aas
loopne
stc
xor
inc
sub
jle
outsb
aad
mov
and
adc
shlb
push
cmp
dec
loop
sbb
dec
jbe
pop
nop
in
nop
mov
jbe
push
or
ja
in
dec
cmp
cmp
jbe
and
or
out
iret
lds
lahf
dec
in
push
out
cmc
mov
scas
push
cmpsb
xlat
ret
jcxz
iret
ljmp
cmc
out
out
insl
push
inc
scas
xor
xchg
ret
and
imul
rcrl
orl
pop
repnz
jle
loope
xchg
add
push
pop
sbb
pop
push
push
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shll
add
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
popa
inc
add
popa
inc
add
bound
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
arpl
mov
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
inc
add
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
addl
addl
test
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
