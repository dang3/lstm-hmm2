push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
daa
gs
mov
jg
xorl
rcll
aas
and
frstor
andb
int3
xchg
xchg
lods
adcb
and
cmp
inc
mov
push
or
cmpsl
je
in
mov
cld
lods
cmpb
les
std
sbbb
jg
and
dec
daa
inc
cli
mov
cmpsl
cld
je
mov
xchg
lcall
iret
addr16
inc
mov
jbe
mov
add
xchg
lock
ret
lds
test
gs
jg
and
lret
jne
stos
data16
pop
mull
out
insb
cmp
movsb
mov
roll
pop
or
adc
sub
pusha
ficompl
mov
pop
repz
cli
fwait
ss
push
mov
ljmp
pop
add
xchg
push
movsb
fs
push
jge
in
mov
int3
push
mov
loopne
ret
fsubrp
into
adc
inc
xchg
mov
outsb
inc
mov
cld
mov
stos
push
les
adc
dec
jnp
xor
lock
imul
pop
pop
mov
out
rdmsr
lods
mov
fisubrs
cmp
push
mov
add
sub
lods
pop
cmpsb
jae
mov
fwait
push
loopne
mov
sbb
loope
add
jge
pop
popf
outsl
xchg
in
imul
popf
loop
dec
fisubl
mov
adc
jns
adc
jle
sbbb
jae
mov
cld
and
pushf
shrb
movsl
in
clc
repz
add
xchg
fs
in
cli
jl
ret
mov
dec
xor
out
sbbb
movsw
negl
dec
sbb
test
jns
ja
jns
loope
xchg
aad
outsb
add
mov
or
mov
mov
sbb
add
mov
cmp
mov
clc
add
or
aad
mov
sub
clc
cli
sbbb
sub
mov
jne
inc
pop
mov
push
xchg
arpl
rcll
inc
fcos
movsl
ret
andnps
or
jge
push
xchg
inc
xor
sahf
xchg
push
xor
mov
pop
test
mov
or
out
shll
test
nop
loope
push
add
sub
inc
inc
mov
in
out
jecxz
out
jecxz
adc
stc
push
out
cmp
repz
dec
push
mov
jl
add
daa
xlat
idivb
add
mov
mov
mov
bnd
int
or
test
xchg
xchg
lods
pop
jl
lods
lock
sub
sbb
insb
sub
mov
repz
dec
jnp
push
dec
outsl
insl
lods
mov
xor
fcom
mov
cmp
dec
hlt
mov
mov
pop
push
pop
dec
cli
mov
or
addb
out
sub
int
int
test
mov
mov
enter
or
test
push
sahf
icebp
icebp
mov
mov
or
push
xchg
lods
sbbb
add
push
jno
shl
push
dec
dec
xlat
adc
pop
inc
xchg
adc
jae
iret
inc
test
add
jg
add
test
in
sbb
and
sahf
out
pop
xor
xlat
ja
out
mov
jg
lods
scas
outsl
cmp
sbb
sar
mov
bound
adc
sar
shl
fs
cmp
aas
sbb
pop
cs
sti
jae
push
stos
cltd
lret
add
mov
rcl
jmp
out
push
or
fcomps
or
lahf
cmpl
js
ret
outsl
out
pop
push
mov
fistl
ud0
repz
sahf
sbbb
daa
or
xlat
cmp
jmp
arpl
xchg
mov
mov
dec
pop
fs
out
std
push
pop
mov
mov
add
xchg
test
mov
add
and
cmp
lcall
rcrb
jecxz
fs
lds
fnstcw
adc
int
mov
pop
addr16
lret
std
out
ds
push
outsl
loope
call
std
aaa
jae
int3
repnz
xchg
xlat
push
pushf
push
fisubs
push
and
push
mov
negb
gs
faddp
dec
out
loop
bound
add
push
xor
repnz
ret
mov
sti
rorl
sbb
adcb
lods
cld
loop
xchg
push
cmc
outsb
insl
nop
mov
adcl
push
or
pusha
test
xchg
pushf
sbb
push
push
jno
gs
add
gs
ret
mov
jo
push
and
icebp
stos
push
sti
jl
hlt
inc
sub
test
subl
xchg
sub
shll
std
or
inc
sub
test
icebp
and
sub
je
xchg
rcl
in
je
sbb
dec
pop
inc
xchg
fs
jbe
xchg
jle
out
lret
js
in
jne
scas
pusha
cld
mov
add
mov
and
out
sbb
lods
rcrl
jns
push
xor
cmp
insb
adc
out
adc
jnp
cs
mov
jne
sub
das
xchg
repnz
stc
adc
jge
stc
adc
xor
pop
es
jecxz
inc
push
cmc
lcall
sbb
test
ja
insb
inc
or
ja
jno
test
icebp
in
push
stc
pop
fistps
and
sbb
inc
mov
mov
enter
pop
cmp
push
leave
mov
push
or
mov
dec
jge
sub
inc
out
push
xchg
cmpsl
add
push
mov
vpunpckldq
ret
cmpsl
push
jb
mov
mov
mov
imul
inc
and
fwait
add
sti
fstl
rol
insl
jl
popf
insl
jno
std
scas
mov
das
scas
mov
popf
fwait
sbb
andb
push
push
lahf
mov
sbb
in
aad
sbb
jno
jns
aad
push
push
inc
push
cmp
nop
and
jge,pn
xchg
jns
mov
xchg
mov
into
out
int3
jae
xlat
mov
arpl
shl
mov
fs
testl
iret
sub
lods
ds
pop
dec
sbb
and
or
popa
lea
push
loope
int
sbb
mov
and
sbb
push
dec
sub
xchg
pop
and
stos
xchg
push
adc
sarl
xchg
ljmp
jns
hlt
push
pushf
xor
push
cmp
loope
rcll
addr16
cwtl
lods
and
cmpl
sub
or
hlt
sbb
or
mov
mov
inc
int3
mov
pop
loope
xchg
movsl
mov
pop
out
xchg
lea
cmp
mov
test
loopne
hlt
xchg
inc
es
in
ljmp
test
lcall
je
xlat
push
sbbb
pop
and
push
xchg
mov
jb
int
clc
mov
and
je
or
fidivrs
cltd
cmpsb
negl
imul
or
fbld
cli
stos
sbb
cmp
jb
jne
add
and
enter
gs
cmp
add
movsl
sbb
inc
inc
mov
mov
ljmp
cmp
idiv
in
mov
cmp
lahf
test
cmp
push
call
push
pop
cmp
aam
ret
pushf
popf
add
fiaddl
int3
lock
sbb
or
dec
mov
mov
movsb
cmpsl
pop
sarb
jle
sarl
dec
enter
aad
sbb
test
fsubl
adc
call
insl
fdivp
pop
call
cmp
jb
sbbl
testl
adc
xchg
jl
mov
xlat
sub
xchg
and
jecxz,pn
sbb
inc
sub
mov
jge
mov
fiadds
rcll
mov
dec
push
push
and
iret
add
sahf
int3
or
in
jb
les
mov
call
fs
adc
jne
loopne
mov
xchg
inc
cmp
add
mov
stos
shl
loope,pt
inc
jmp
out
sub
fucom
dec
cmp
shlb
arpl
and
xor
pop
push
push
cmp
cmpsl
sub
add
lahf
cmp
and
ret
and
lahf
stc
push
cmp
insl
mov
inc
cmc
mov
dec
xchg
fdiv
mov
xor
les
popf
out
pushf
out
jbe
mov
add
and
adc
dec
pop
fadds
je
loope
cmp
inc
mov
sahf
push
hlt
js
in
popa
out
jmp
call
inc
mov
adc
sub
cmp
pop
ret
sahf
mov
clc
lods
xor
jmp
pop
xchg
das
les
inc
push
or
xchg
lock
ret
xchg
and
lea
mov
lcall
ret
dec
or
iret
adc
mov
jmp
addb
sbb
mov
js
divb
sub
sti
mov
addr16
xlat
sub
lcall
adc
sub
clc
test
adc
aad
add
mov
add
or
test
push
push
push
pavgw
out
out
js
aam
mov
fnstsw
adc
xchg
lret
nop
sahf
mov
call
cmp
loopne
in
lahf
mov
rcl
fldcw
cmp
popa
xchg
pop
addl
inc
mov
fstl
xchg
add
mov
xor
mov
movsl
xor
adc
mov
movsb
sub
in
ss
outsl
inc
loopew
push
sub
adc
loop
in
aas
cmc
fsubr
jne
bound
inc
inc
ss
jnp
mov
cmpsb
clc
fstl
mul
jae
pop
add
in
jmp
or
fwait
push
lcall
sub
pop
lcall
or
jmp
repz
cmp
sar
pop
addr16
cmp
lods
dec
jb
mov
es
cmpsb
cmpsl
lods
rcll
or
pop
adc
rorb
pushf
and
mov
das
ret
out
int
mov
mov
lods
jecxz
sub
push
std
aaa
sub
dec
or
jp
cltd
ror
cwtl
adc
mov
push
xchg
out
in
decl
xchg
outsl
mov
in
cmc
pop
jl
subl
mov
jno
lods
mov
sbbl
iret
push
jge
lcall
lods
js
mov
mov
pop
cmp
xchg
adc
xchg
sbb
mov
adc
pop
sub
aas
jmp
in
pop
xchg
stos
mov
and
in
adc
mov
or
sbb
jmp
shll
in
fs
mov
aam
sub
push
jnp
push
and
cmp
jno
sbbb
cmpb
test
sbb
adc
fwait
in
sti
sahf
and
dec
mov
and
into
lahf
jp
inc
jno
imul
mul
popf
sbb
ds
pop
and
loopne
xor
add
mov
add
setb
lcall
out
enter
sbb
mov
and
call
jnp
cmp
fstpt
fisubs
ret
addr16
scas
dec
stos
inc
outsb
push
jae
es
inc
cmpsl
xchg
jge
dec
std
hlt
and
mov
xor
pop
mov
sub
jb
xchg
test
lods
into
lds
sub
shlb
sbb
pop
out
or
lret
ss
rcrb
cmpsb
loop
popa
adc
and
pop
and
jno
out
xor
or
fwait
shrb
pop
fists
adc
push
int3
sbb
cmpsb
dec
cmc
aaa
jns
jg
push
dec
add
scas
stos
ss
fldcw
mov
pop
sti
sbb
iret
and
pop
cs
fistpll
xchg
xchg
push
adc
ljmp
push
cmp
sub
mov
jbe
mov
lods
aad
and
mov
enter
movsl
cmc
fstpl
mov
xchg
ror
hlt
jmp
mov
pop
stos
hlt
enter
cld
fwait
mov
mov
xchg
test
dec
imul
and
cmp
dec
and
dec
pop
cmp
pop
ret
push
lock
lret
cmpsb
iret
ss
push
lds
or
icebp
or
movsl
adc
cmc
adc
fsubl
xor
mov
sbb
fisttpl
ffree
pop
scas
xchg
adcb
xchg
fsubrs
ret
hlt
and
jno
or
sbb
mov
mov
repnz
fdiv
mov
push
aam
pop
add
push
mov
idivb
ret
dec
inc
mov
mov
jb
cmp
jmp
cmp
fs
scas
pop
mov
push
test
mov
mov
mulb
fs
mov
sub
or
insl
fcomps
lds
movsl
rorb
stc
cmpsb
stos
lcall
push
mov
movsb
mov
pop
xchg
mov
push
shl
pop
or
cmp
popa
out
das
jl
loopne
stos
dec
scas
repz
dec
mov
mov
add
mov
add
sub
mov
and
pop
sbb
mov
jecxz
int3
outsl
jmp
mov
imul
mov
pop
inc
popf
in
push
cmp
cmc
in
pop
enter
out
add
jnp
xchg
mov
mov
pop
enter
std
ret
xchg
mov
iret
pushf
or
xchg
imul
sahf
dec
aad
fsubrp
add
ljmp
xchg
in
lods
mov
pop
add
icebp
cmp
out
xlat
rcrl
push
dec
lock
xchg
sub
sbb
mov
inc
pusha
icebp
fsubs
or
push
insl
mov
pop
loop
and
out
pop
mov
inc
popf
outsl
movsb
roll
mov
sub
mov
pop
push
or
adc
sbb
int3
push
lret
cwtl
mov
mov
ror
mov
jmp
dec
xor
cmp
js
pop
nop
std
jns
add
cli
dec
mov
add
mov
pop
inc
das
sbb
add
jmp
test
movsl
repz
xchg
push
movsb
or
sub
aaa
inc
outsb
pop
testb
loopne
test
xchg
shlb
dec
shl
and
or
jge
ret
rclb
and
fadds
sub
dec
push
fldcw
mov
aam
mov
leave
scas
dec
and
add
mov
lods
adc
int3
les
pop
jmp
icebp
cli
pushf
movsb
mov
mov
mov
add
xchg
xchg
stc
cmp
into
lods
and
pushl
insb
or
lods
repz
jns
push
fwait
add
loope
stc
out
out
or
aas
ss
aas
jo
xchg
cltd
cmp
push
test
aaa
push
repz
adc
pop
jmp
inc
sbb
adc
ror
mov
inc
lock
inc
gs
idiv
dec
dec
std
out
mov
fucomip
repz
pop
repz
add
fs
sti
lahf
stos
dec
andb
inc
xor
out
sbb
cmp
js
cmp
aam
frstor
jae
lret
std
iret
and
ds
add
and
mov
pop
fisubrs
inc
out
in
hlt
pop
ds
inc
pop
mov
mov
cld
movsl
cltd
add
jns
cmpsl
dec
clc
push
jmp
mov
sub
mov
pop
dec
sahf
sub
scas
jnp
mov
dec
and
sbb
or
xor
mov
out
mov
jns
push
mov
imul
push
imul
mov
testl
mov
ljmp
cs
lds
jl
nop
incb
mov
add
mov
fdivs
outsb
in
sbb
popf
ret
in
mov
daa
int
jp
push
mov
es
mov
decb
loop
arpl
inc
dec
pop
pop
pop
lcall
fbstp
inc
loope
lock
test
mov
and
mov
adc
lahf
sti
push
and
add
lahf
cmp
sub
or
jmp
lock
inc
fwait
imul
cmp
cmp
jmp
aaa
pushf
pusha
jb
das
add
nop
pop
and
jecxz
jl
and
add
jae
and
adc
push
popa
push
jle
pop
and
and
inc
mov
in
push
push
push
ret
pusha
dec
jecxz
sub
sub
fwait
sub
mov
push
ret
into
mov
js
cmpsb
aas
in
jne
and
xor
dec
or
notb
mov
inc
insb
in
fsts
jp
pop
mov
fmuls
mov
adcb
adc
or
ret
mov
cmc
adc
lret
repz
imul
dec
inc
ret
leave
stos
mov
scas
movsl
loopne
sub
movsl
inc
nop
xlat
loopne
mov
sub
xor
test
mov
inc
mov
and
dec
add
sbb
scas
push
incb
mov
or
jnp
out
add
mov
pop
jno
arpl
xchg
lahf
ffree
sub
cmpsb
cmp
ror
rclb
hlt
mov
sbb
and
sub
add
and
push
int3
shlb
lcall
cwtl
fldcw
mov
ss
jl
push
add
push
aas
jno
into
mov
jl
movsb
or
push
int
jmp
cmc
sub
mov
pop
lods
dec
ret
clc
loop
jo
push
inc
sub
icebp
int
jne
inc
sub
into
or
push
xor
mov
mov
stc
scas
stos
and
sarl
push
push
xchg
mov
loop
aad
inc
call
and
pop
mov
xchg
mov
inc
shlb
mov
dec
inc
jb
pop
push
push
xchg
and
mov
cmp
sbb
sub
fildl
jno
lret
push
inc
ss
lods
cld
scas
lods
adc
cmc
test
sahf
jg
jns
js
dec
lcall
mov
out
jp
jmp
std
adc
je
loop
out
pop
pop
mov
push
pop
in
mov
push
mov
dec
stos
out
add
jae
lea
mov
orb
xchg
adc
insb
rolb
insl
aam
inc
or
sarb
cmc
orb
push
xor
sbb
in
sbb
mov
mov
call
leave
aad
jno
out
jmp
sub
sahf
icebp
xchg
sbb
mov
push
mov
stos
pop
xchg
and
or
out
adc
inc
push
sub
sbb
cltd
int3
jbe
lret
inc
adc
pushf
aad
in
sbb
adc
push
mov
pop
adc
sarl
mov
clc
test
adc
xor
les
and
inc
fildl
les
push
inc
out
inc
mov
test
in
cmpsb
mov
iret
hlt
sub
or
push
pushl
xchg
mov
mov
mov
movl
mov
loope
push
jnp
imul
repz
xor
insl
sub
adc
fdivrs
or
cmp
mov
sbb
mov
sub
xorb
popf
or
outsb
nop
jb
push
jge
imul
pusha
popa
mov
and
mov
pusha
mov
jne
xor
mov
mov
pop
das
cld
fsubrs
jnp
rcrl
stc
setg
jae
push
mov
and
test
add
adc
sbb
addl
inc
sarb
psraw
ret
or
outsl
adc
ret
mov
inc
and
xchg
aaa
outsb
orl
and
mov
pop
mov
cmp
add
adc
sbb
mov
cmpl
jne
mov
push
test
movsl
int3
fsubp
xor
call
adcl
sbb
mov
je
fstps
outsl
jno
xor
push
lret
mov
xor
std
jmp
addr16
mov
adc
cmp
mov
jb
sahf
and
test
cld
inc
cmp
sub
jne
cmp
test
es
pushf
mov
or
int
paddb
in
leave
sub
xor
test
mov
mov
mov
fwait
sbb
jl
ret
jo
and
out
lods
into
dec
push
add
push
xchg
jmp
add
jo
ljmp
insl
daa
es
loop
mov
xchg
adc
fsubl
xchg
mov
pop
push
nop
pop
sbb
daa
and
xchg
push
push
push
pop
arpl
mov
fdivrs
inc
sub
out
push
mov
in
adc
mov
scas
cmp
sahf
scas
mov
dec
push
dec
xchg
loop
out
jmp
xor
lods
sbb
sbb
repnz
lods
mov
scas
pop
sbb
jg
mov
gs
les
mov
push
adc
add
xor
movb
pop
dec
or
or
jge
cmc
pop
jmp
push
scas
pop
mov
cmp
cmp
imul
sub
nop
and
nop
jle
jmp
push
pop
icebp
jno
and
jbe
jle
in
dec
xor
push
jno
call
cmp
sub
pop
fwait
mov
push
jbe
adc
int
cltd
lret
sahf
mov
jnp
dec
repnz
xchg
sbb
lret
insl
xchg
fwait
mov
fs
jge
inc
add
push
ljmp
pop
jecxz
push
repnz
mov
jae
push
std
sbb
movsb
into
mov
addr16
xchg
out
stos
rorl
mov
aaa
testb
jle
mov
inc
mov
enter
jg
and
and
arpl
scas
xor
out
jb
jns
xor
lock
mov
fld1
adc
and
cmp
xchg
xor
and
imul
fsubr
fdivs
or
mov
aam
cltd
fldt
aas
orl
push
stc
popf
lcall
loopne
shrb
jp
mov
rorl
mov
call
stos
cmpsl
cmpsl
push
cmp
out
fwait
dec
inc
gs
dec
daa
push
icebp
scas
test
stc
mov
in
adc
pop
or
sub
xor
movsl
imul
fstps
ja
or
dec
xor
fiaddl
push
sub
jno
cmp
xchg
jne
test
mov
pop
test
insb
test
out
imul
sbb
add
pusha
jp
jno
xchg
mov
jmp
sti
push
lea
mov
push
sbb
cmp
sub
xchg
add
lock
mulb
push
xchg
ja
push
scas
je
jno
sbb
cmp
sub
push
jmp
jno
js
pop
add
repnz
jns
lahf
sbb
sub
add
popf
jl
jnp
mov
cld
jl
mov
inc
dec
jmp
lret
mov
ja
inc
add
push
inc
fs
cmp
pop
outsl
je
into
jbe
sbb
mov
and
pop
pop
imul
fwait
rorl
mov
inc
jl
test
dec
cltd
adc
loopne
sbb
ss
fsubs
hlt
jl
test
add
dec
cltd
jnp
sbbl
push
sahf
fildl
fsts
jg
inc
adc
xchg
lods
sbb
in
dec
inc
sti
pop
cs
jg
xor
cwtl
mov
xor
ds
mov
sub
pop
test
push
lds
out
mov
divb
std
ret
add
push
lods
pop
stos
cld
push
and
test
jmp
inc
xchg
inc
call
cltd
sub
push
mov
mov
dec
or
jmp
pushf
push
and
push
push
std
ja
insl
cli
mov
dec
arpl
adc
push
in
cmp
sub
push
js
shll
jae
adc
stc
mov
cli
ret
dec
sbb
mov
jp
cli
xchg
jb
push
insl
xor
fldt
lods
and
int
mov
fisubs
push
je
test
cld
lds
or
inc
int3
out
out
fcompl
out
or
push
cmp
push
push
inc
imul
push
mov
arpl
add
jnp
dec
xchg
hlt
cmpsb
adc
insb
jle
outsb
push
sti
fidivrl
mov
sahf
rorl
lcall
pop
xchg
inc
inc
mov
add
loope
ljmp
sbb
mov
orb
add
xchg
sub
xor
je
push
icebp
jmp
dec
xor
repz
mov
sub
xchg
mov
pop
aad
into
and
pop
jae
jae
and
jg
ficomps
jg
dec
mov
add
shlb
fsubl
sub
xor
sbb
adc
adc
mov
aas
div
fs
and
rclb
jbe
out
pop
pop
adc
jg
inc
gs
imul
cwtl
jge
add
mov
sub
stc
and
hlt
pop
xor
mov
mov
fdivrs
add
jbe
jg
xor
pop
inc
out
and
ljmp
xlat
sarl
out
mov
push
pop
xor
lods
xor
mov
jl
cmpsb
xor
inc
push
dec
hlt
push
aad
jb,pt
cmp
pop
sub
and
icebp
adc
sub
mov
mov
test
push
lahf
ds
and
or
pop
jmp
sub
cs
sbb
daa
pusha
fsubrl
outsl
inc
pop
je
jle
mov
pop
mov
div
mov
in
out
inc
pop
dec
jge
and
lcall
fildl
pop
mov
mov
push
add
std
and
xchg
stos
pop
cmpl
cmc
insl
adc
cwtl
mov
icebp
out
and
jne,pn
jp
pop
adc
fwait
ret
inc
daa
pop
fistl
subl
inc
test
jb
jge
push
adc
lret
inc
or
mov
and
daa
push
cs
cmpsb
out
imul
sub
je
add
sbb
es
into
pop
dec
sub
inc
push
mov
xchg
add
pop
aaa
jo
lcall
pop
lods
aad
sbb
das
into
mov
call
adc
lods
mov
ror
gs
sbbb
pop
pop
xor
addr16
fwait
out
mov
and
add
std
repz
mov
aad
ret
cs
ljmp
enter
inc
leave
inc
scas
clc
sar
xor
in
imul
insl
sub
or
loope
int3
mov
cmovg
je
add
push
arpl
jbe
xchg
aaa
aam
cmpsb
xchg
or
aas
jae
popf
fdivl
sub
add
or
js
pop
or
sub
outsb
nop
sbb
aad
pop
inc
xchg
push
seto
push
cmp
fidivs
dec
dec
jb
scas
mov
repz
xchg
jp
mov
pop
xor
clc
adc
xchg
sub
mov
push
cld
jmp
imul
outsb
xor
adc
xchg
loope
cmpsb
fldcw
xchg
popf
mov
outsb
imul
jmp
sub
or
jb
decl
xchg
fsubl
jae
loop
sub
imul
xor
insb
mov
pushf
sbb
dec
inc
sti
out
ret
dec
test
adc
push
xchg
repnz
int
jp
cmpsb
sub
int3
leave
addb
xor
xchg
lret
lods
test
lods
daa
mov
mov
in
pop
push
decb
shll
mov
lret
inc
add
cmpsl
js
add
or
stc
push
xchg
xchg
or
mov
popa
add
xor
push
fst
mov
or
cmpsl
jecxz
lret
or
pop
cwtl
pop
js
xchg
jne
into
sub
addr16
pop
in
jb
daa
adc
jge
dec
ja
mov
adc
enter
push
pop
inc
add
inc
rcr
cmp
or
lock
adc
cmp
xchg
adc
fstpl
or
add
out
int3
jg
adc
or
mov
push
xchg
shrl
sbb
lcall
shlb
add
cmpl
sub
jmp
ret
jge
dec
xchg
or
aam
inc
push
mov
mov
daa
stos
sbb
mov
dec
aaa
imul
aaa
sahf
or
inc
jbe
rcll
jnp
push
xchg
lret
mov
bound
fidivs
push
jmp
and
adc
in
cmp
mov
stos
sbb
lahf
inc
and
das
cmp
repz
mov
jbe
lea
mov
js
push
insb
fcoml
sub
pop
orps
mov
push
scas
xchg
leave
xchg
push
ljmp
push
cmp
aaa
xlat
xchg
in
push
fsubrl
setno
rolb
int
push
out
mov
jo
mov
insb
in
pop
int3
test
rep
cld
dec
mov
inc
mov
dec
testb
popa
daa
andb
lret
inc
into
xchg
dec
sbb
dec
inc
mov
es
nop
mov
dec
int3
outsl
inc
mov
cmpsb
aas
shl
mov
dec
aas
jno
adc
lods
cld
sbb
or
jne
movsl
into
rol
mov
ds
insb
cmc
mov
lea
lcall
jl
mov
dec
mov
clc
mov
push
cmp
add
cs
cs
filds
jg
ljmp
mov
jnp
clc
or
add
pop
jns
push
jge
cmpsl
xchg
sbbl
push
sub
xor
cli
leave
in
and
andl
sbb
or
mov
sbb
imul
adc
cltd
xchg
xchg
pop
repnz
adc
xchg
nop
push
xchg
icebp
sub
adc
add
imul
inc
cmp
movb
into
mov
and
sahf
lcall
mov
pop
xor
pushf
pushf
mov
dec
dec
mov
subb
call
adc
mov
ja
stc
sub
mov
call
test
daa
out
inc
leave
das
cmp
add
push
divb
sbb
es
mov
sbb
xor
jle
out
int
mull
out
mov
das
test
push
inc
out
in
repz
shufps
pushf
and
cwtl
cmp
std
mov
idivb
scas
or
sahf
ds
fcmovb
fidivs
sbb
stc
mov
xor
cmp
int3
add
aas
mov
mov
sub
and
pop
xchg
das
push
cld
ljmp
xchg
xchg
lea
mov
insb
ret
mov
sti
mov
std
insl
jg
dec
jbe
enter
pop
dec
add
add
fnsave
arpl
jg
sub
cmp
cmc
lods
stos
xchg
gs
push
jo
out
push
fdivs
je
or
jae
stos
mov
aam
pop
aaa
iret
bound
cs
adc
subl
test
jmp
adc
push
mov
inc
mov
xor
lock
lds
xchg
ror
out
xchg
mov
cltd
mov
sub
mov
in
stc
cmp
inc
mov
mov
adc
mov
jecxz
inc
cmpsl
sub
xor
popf
lds
test
int3
movsb
sti
and
pop
push
jp
loope
rorb
cld
ljmp
inc
pop
cmpsb
sub
sbb
push
xor
scas
cs
pop
mov
wbinvd
jno
daa
shrl
xchg
sub
xor
adc
mov
idivl
mov
fs
pusha
or
lahf
loopne
mov
sahf
mov
cmp
push
rcll
push
fildl
idivl
mov
cs
andb
clc
test
dec
pop
jbe
push
jae
pop
mov
inc
dec
sahf
fcmovbe
jmp
inc
fistl
mov
jge
mov
sub
jo
cli
and
gs
inc
hlt
mov
adc
pop
js
popa
ljmp
into
insl
mov
pop
push
imul
leave
rolb
clc
add
aaa
mov
push
jb
aaa
xchg
mov
test
nop
inc
inc
adc
movups
inc
dec
daa
cmp
pop
mov
dec
pop
sub
cmp
je
imul
adc
test
loop
outsl
in
dec
lods
push
jle
jne
xor
mov
xchg
sbb
aam
push
out
mov
pop
xor
mov
fiaddl
mov
mov
pushf
xor
loope
add
in
addr16
in
das
sbb
jnp
add
test
fisttpl
out
xor
nop
sub
mov
inc
fadd
cs
dec
cs
icebp
addb
xchg
rep
dec
aas
sbb
imul
out
loopne
js
dec
fxch
jp
pop
into
cmpsl
jae
addr16
and
xchg
or
js
insb
xchg
es
das
sbb
sbb
sub
jecxz
push
or
cmp
aad
cmovns
into
popf
adc
das
push
repz
dec
cmp
push
push
mov
stos
addr16
push
lds
push
sbb
cwtl
push
pop
adcb
xlat
push
and
sub
xor
enter
test
lock
aad
cmc
nop
or
push
fisttpl
enter
add
popf
fsubrs
test
test
dec
aad
aad
push
jle
or
movsl
push
mov
nop
lock
sbb
and
or
negb
mov
rcl
imul
sub
pop
cmp
sbb
adc
fisubrl
hlt
pushf
dec
jno
push
inc
inc
cmpsl
movsb
or
mov
insb
outsb
loop
shll
pop
sub
cmp
jmp
enter
xlat
ffreep
mov
les
jae
sbb
aam
mov
daa
mov
or
push
fistpl
xchg
mov
xor
or
push
jmp
rorb
test
out
xchg
fbstp
out
jl
nop
mov
mov
in
call
ficoml
sbb
xchg
push
add
cmp
dec
arpl
lock
push
std
sti
fisttpl
test
data16
loopne
jle
sbb
cltd
xchg
shll
xor
in
cmp
out
sbb
cmp
out
inc
out
xchg
cld
inc
pop
sbb
shl
fs
add
movsl
or
bnd
add
xlat
inc
ficoms
cli
xchg
push
or
nop
loop
std
cmpsb
cltd
into
jnp
jmp
jo
stc
int3
je
jb
cmpsb
dec
cmp
cmc
mov
loopne
jecxz
mov
sahf
xor
sahf
clc
scas
add
in
push
mov
aad
insl
repnz
popf
adc
sub
outsb
lods
enter
imul
scas
ret
cmp
testl
sbb
jmp
cmp
mov
cmp
test
loopne
int3
cmc
sbb
pop
ljmp
mov
out
mov
push
movsl
sahf
pop
push
loop
pop
add
and
or
sub
sahf
test
popfw
fwait
mov
pop
shl
das
hlt
pslld
das
lcall
xchg
sub
mov
xchg
xchg
add
call
push
pop
test
repz
push
psrlw
jmp
gs
xor
add
sarb
aad
mov
je
mov
hlt
add
addr16
aaa
aaa
cld
fcoml
std
add
xchg
dec
jno
push
jne
pop
push
pop
stos
movsb
test
pop
and
test
sbb
out
cmp
shl
lcall
mov
es
xor
sbb
adc
mov
stos
mov
jo
add
rclb
lods
xchg
cs
cli
clc
sti
sub
lret
pushf
mov
push
shrl
lcall
ja
and
mov
add
lods
test
inc
repnz
test
mov
test
inc
and
or
cmp
inc
inc
jmp
pop
xor
jmp
sbb
mov
sub
fdivs
out
ret
mov
fdivr
sub
cltd
xchg
mov
test
frstor
jmp
xor
std
inc
fisubrs
in
scas
xchg
cmc
xor
cmp
push
vexpandps
add
pop
pop
sbb
mov
xchg
ja
addr16
push
cmp
icebp
aaa
inc
sbb
addr16
fists
scas
xchg
push
clc
xchg
xchg
rcrb
pop
inc
jno
or
or
cmc
fwait
inc
icebp
jp
cmp
jecxz
and
cmc
mov
cmpsb
in
jbe
jo
mov
pop
mov
imul
mov
iret
jne
push
dec
jo
push
jae
repz
mov
mov
push
in
xorl
clc
mov
adc
xor
in
daa
xor
lret
cmp
adc
sub
sbb
inc
aad
xor
cmp
out
pop
cld
jne
adc
aas
mov
in
jecxz
add
fcompl
clc
lock
out
lds
outsb
pop
lock
sbb
cli
cmp
inc
dec
adc
pop
icebp
xchg
add
icebp
das
or
fdivrp
inc
fcmovnu
jge
imulb
mov
or
call
lret
sub
jo
xor
test
lods
iret
popl
sub
xchg
lea
cmc
push
cmp
aaa
adc
and
nop
sbb
arpl
ja
xchg
loop
adc
jae
push
repz
cs
lock
xchg
add
xchg
imul
pop
mov
mov
add
and
arpl
and
andb
rcrl
sub
inc
insb
dec
xchg
sbb
lea
cld
test
rolb
into
cmpsl
in
in
ss
pushf
and
loop
repz
scas
arpl
je
or
xchg
dec
dec
or
jae
mov
cmp
dec
pusha
sub
push
jo
or
or
and
xchg
push
xchg
adc
sarl
je
push
and
mov
add
cwtl
sub
movsl
mov
aas
aad
sbb
xchg
cli
push
es
dec
lret
xor
xchg
add
mov
sbb
sub
xchg
push
cld
pop
jo
notl
mov
lds
lret
rorl
sbb
addr16
add
jp
out
movl
sub
lcall
roll
push
sti
mov
jae
jb
and
mov
xorb
jmp
push
add
push
adc
into
rcll
xchg
push
iret
movsb
xor
pop
inc
mov
dec
popf
pop
in
push
sub
stc
ljmp
aas
mov
mov
pop
mov
out
and
sbb
iret
ja
enter
outsb
lcall
mov
repz
mov
jnp
mov
or
jns
sbb
sbb
inc
jl
out
sbb
outsl
xchg
mov
adc
fs
push
push
push
mov
out
push
xor
insl
mov
mov
outsb
iret
push
push
in
sarb
int
mov
cmc
dec
cmp
sar
out
leave
roll
stc
jo
pushf
push
stos
cmp
jge
xor
xchg
fistpll
or
jbe
inc
jb
insl
sbbb
inc
adc
out
roll
xor
mov
mov
mov
orl
jecxz
adc
in
sti
arpl
iret
test
push
sahf
add
cltd
ja
repnz
inc
jp
jmp
fildll
mov
stc
int3
lods
pop
pushf
mov
das
xchg
je
ret
aad
add
dec
call
cld
movsl
mov
cmp
cli
jg
jp
or
xlat
push
sub
std
addr16
lahf
pop
dec
dec
in
mov
sbb
mov
rcl
mov
push
xor
insl
dec
sub
fs
sbb
pop
cmpsl
scas
lret
mov
push
ss
test
push
imul
or
push
imul
ja
rcl
popa
mov
call
idivl
cs
xchg
mov
popf
push
clc
lret
xor
mov
push
push
cmp
andl
pop
frstor
or
and
movsb
outsb
inc
loopne
setge
mov
stc
jecxz
rolb
adc
cli
imul
inc
and
cmp
xchg
int
out
cmp
push
mov
inc
shll
das
lret
js
and
aad
ret
loopne
dec
adc
stos
adc
out
and
mov
packuswb
sbb
out
fcmovbe
addr16
fistl
stos
shll
movsl
lock
dec
push
sub
jmp
fimuls
aam
and
xchg
loopne
xchg
pop
jo
and
mul
aam
shl
call
mov
pop
ret
fbld
push
and
cmp
and
cmp
movsl
int
or
int
dec
jge
scas
add
add
pop
ljmp
mov
addb
gs
scas
mov
pop
inc
xchg
sahf
pop
mov
cmp
and
into
push
jle
mov
or
xchg
xchg
mov
lret
cmp
mov
mov
push
cmp
test
jmp
sbb
icebp
push
int3
inc
or
stc
mov
mov
sub
jecxz
addb
dec
in
mov
fisubs
movsl
or
mov
mov
aad
clc
inc
mov
cmc
shlb
cmpsb
je
push
rcrb
sub
fmull
mov
adc
mov
sbb
clc
aam
mov
xchg
push
mov
rcr
sbb
pop
lock
add
std
insl
mov
xor
adc
sbb
xor
dec
sub
xchg
mov
and
out
mov
jle
or
cmpb
cmc
mov
mov
jge
movsl
inc
jnp
js
pop
push
aad
pusha
dec
stc
mov
mov
loopne
dec
push
out
jnp
into
ficompl
clc
imul
loopne
and
movsl
cmp
push
out
jp
mov
out
push
pop
repnz
or
ret
pop
call
scas
loop,pt
shlb
sbb
xchg
popa
cmpsb
mov
inc
sub
or
out
stos
stos
cli
repnz
sbbl
daa
fxch
jecxz,pn
jmp
pop
and
int3
das
inc
lcall
mov
push
adc
mov
sbb
aaa
sarb
or
jns
inc
sbb
dec
and
add
icebp
xor
adc
stc
mov
movsl
mov
stos
jns
mov
cmp
outsl
js
mov
scas
mov
adc
js
dec
cmp
and
sbb
adc
out
add
jb
or
push
dec
enter
xor
dec
xchg
xlat
cmpsb
jecxz
mov
js
jno
push
je
jp
sbb
mov
xchg
inc
test
mov
call
or
sub
dec
scas
into
mov
cmp
hlt
pop
cmp
fistl
outsl
ljmp
push
sub
xlat
lcall
js
mov
and
xchg
insl
dec
sub
mov
ss
movsl
pop
add
lods
ret
loop
adc
loope
ds
push
roll
ja
sub
rcrl
xchg
cwtl
inc
push
enter
cld
sub
jge
sub
insb
xchg
test
cld
cmp
jno
pop
ja
ss
mov
ja
cwtl
dec
mov
jnp
loopne
add
outsl
sub
aaa
divl
xchg
dec
xchg
lea
inc
fistpll
mov
push
lds
les
push
stc
mov
mov
cmp
pusha
push
cltd
mov
pusha
popa
lock
test
scas
into
fdivrs
xor
cwtl
repz
inc
ret
loopne
pop
fwait
push
xchg
lea
add
and
ret
dec
in
sti
lret
xor
dec
cmp
shlb
lods
fnstcw
or
hlt
dec
mov
and
idivl
adc
pushf
sbb
lret
push
inc
pop
scas
sub
fisubrs
jmp
sbb
mov
aaa
pop
scas
or
lret
data16
xor
xchg
pop
push
pop
sbb
loop
pmaxsw
or
pop
adc
push
cmc
test
fdivs
js
lods
adc
dec
ss
daa
sbb
mov
xchg
clc
sahf
xlat
mov
cmp
xor
cwtl
mov
out
pop
mov
inc
xor
push
push
fldl
ljmp
mov
mov
xor
cli
imul
mov
push
pop
popf
sub
inc
add
les
sub
jmp
mov
mov
mov
out
or
sub
adc
pop
repz
sbb
and
jo
mov
fidivl
add
push
xchg
inc
mov
daa
stc
mov
int
sti
lret
lods
inc
in
cltd
aas
pop
aam
outsl
ficomps
push
push
out
into
bound
lods
imul
sti
bound
iret
arpl
out
cli
sarb
pop
dec
rcll
orb
insb
push
cmp
mov
dec
ds
mov
loop
shl
das
xor
mov
adc
xchg
mulb
lret
push
iret
mov
jmp
add
mov
jle
jle
add
jp
jae
into
push
adc
xchg
lret
lds
and
inc
mov
cmpsl
cmp
lret
jno
mov
add
pushf
icebp
mov
push
push
adc
leave
in
lds
inc
add
jmp
leave
repz
mov
push
dec
aad
mov
xorb
in
inc
xchg
aas
xchg
jno
mov
or
outsb
in
mov
jmp
cmpsl
sbb
lock
xchg
mov
mov
int
xchg
jo
or
inc
add
lret
movsb
movsl
ja
push
cmp
clc
jnp
scas
jb
pop
push
cmp
mov
fsubs
cli
ret
lret
fstpt
pop
and
nop
xor
sbb
outsb
inc
cmp
sbb
pop
rorb
in
jge
cmp
sub
cs
mov
push
subl
insl
cli
lods
lret
mov
pop
push
daa
mull
subl
popa
push
repnz
shl
pop
sub
mov
rorb
pop
add
mov
lahf
insl
sub
inc
adc
xchg
xchg
mull
dec
cld
movsl
test
cwtl
sbb
mov
js
cld
dec
mov
mov
je
mov
push
leave
mov
lcall
movsl
xor
mov
sahf
xchg
cltd
insb
stc
and
jo
or
jne
lock
mov
iret
mov
or
in
testl
add
stos
jnp
xlat
jo
lods
push
aad
fisttpll
cli
inc
and
sbb
jae
adc
mov
dec
pushf
movsb
or
aad
addr16
and
fildl
cli
cmp
xorl
cli
and
sub
lods
bound
xchg
lods
cli
pop
or
jns
xchg
add
jb
mov
inc
mov
jo
shll
pop
sub
push
or
mov
int3
push
into
mov
testl
das
or
jle
or
sbb
mov
aad
sub
loopne
xorb
cmp
ja
mov
push
dec
dec
ja
inc
mov
inc
and
mov
mov
sar
cld
mov
stc
or
addr16
cmp
adc
mov
test
sarb
sbb
dec
popf
add
test
adc
push
repz
mov
xor
push
test
sub
jl
add
push
sub
dec
leave
sbb
pop
loope
mov
test
dec
dec
pop
jbe
add
or
std
popf
and
bound
push
lock
mov
loope
shlb
popa
pop
lahf
mov
lock
test
jns
fsubp
rcll
and
sbb
lods
xchg
xlat
add
lods
dec
dec
icebp
or
mov
out
int3
lret
gs
push
or
dec
jg
mov
mov
idivl
clc
cli
fstl
xor
dec
hlt
fnstcw
mov
aas
ret
add
xchg
mov
mov
jp
scas
imul
ljmp
dec
aad
loopne
call
pop
pop
or
movsl
pop
jno
push
jp
mov
push
sbbl
sbb
push
sahf
push
mov
fs
popf
mov
in
outsl
adc
je
pop
out
pop
or
cwtl
xlat
cmp
add
hlt
inc
js
mov
xchg
sub
icebp
mov
fstl
push
mov
ret
fsubrs
pop
jge
lods
bound
into
addb
pusha
pop
sub
ror
repnz
mov
inc
inc
insl
cmpsb
push
lea
dec
dec
jg
cmpsl
and
cmp
push
lahf
mov
fldcw
dec
hlt
addr16
add
push
mov
test
in
pop
popf
sub
fidivl
hlt
mov
jmp
push
mov
popa
ret
add
push
sub
cwtl
repz
push
outsl
pushf
repz
sub
push
popa
push
add
sbb
insb
jne
mov
shrl
sbb
in
jb
pop
jmp
sahf
or
push
mov
jo
mov
stc
je
mov
jns
sti
insb
adc
cmp
mov
leave
mov
mov
into
pusha
in
fsubs
inc
int
scas
push
outsb
out
sbb
xlat
scas
notl
ds
scas
aaa
jge
lods
mov
sub
mov
pop
test
pop
loop
dec
sbb
cmpsl
das
push
add
scas
mov
fildl
xchg
xor
cmpsl
pop
and
fidivrl
popa
int
sbb
mov
cmp
rorb
lock
inc
fcoms
sahf
dec
dec
dec
add
stos
bound
aam
push
add
adc
sti
pusha
sbb
sbb
out
add
ss
lds
adc
cmp
mov
rclb
loopne
out
into
rep
fisubrl
jae
scas
xor
dec
push
jns
mov
adc
and
and
sbb
mov
fsubs
sub
pushf
cs
jp
dec
cmp
lods
imul
shrb
rclb
in
xchg
dec
pop
sub
movsb
pop
arpl
fdivrp
int
jecxz
dec
je
pop
lcall
mov
out
inc
or
stos
mov
das
into
outsl
inc
mov
xchg
popa
ret
jo
les
cmp
pop
loope
cld
pop
fsubrs
jno
out
sbb
push
shlb
sbb
test
rolb
mov
inc
mov
insl
rcll
mov
lds
stc
mov
xchg
out
into
xchg
movsb
imul
jbe
into
add
xchg
sbb
lret
cmp
xchg
and
adc
mov
popf
xchg
insb
mulb
mov
or
jmp
jnp
repnz
mov
push
push
int3
pandn
je
mov
dec
add
ficompl
cli
outsl
sub
push
mov
js
iret
filds
inc
jmp
xchg
jnp
into
adc
mov
jb
js
mov
insb
cltd
adc
mov
cmpsl
sub
sbb
pop
xchg
push
inc
pop
cmova
clc
cmp
and
cmp
test
roll
push
subl
xchg
jp
jne
lret
stc
test
in
popf
sahf
jnp
inc
test
aas
hlt
lods
loop
rcr
cltd
stos
add
sbb
cld
cmpsb
test
insl
lock
sub
mov
xor
mov
sbbb
in
scas
xchg
mov
fwait
add
mov
add
out
pop
push
lods
xlat
adc
cmp
inc
mov
sub
push
adc
sbb
mov
pushf
mov
pusha
adc
imul
push
cmp
fildll
inc
rcrl
aas
jle
imul
push
and
fwait
out
push
out
fs
jg
out
jbe
pop
cltd
in
mov
jno
out
icebp
jb
inc
xlat
push
and
and
pop
xchg
loopne
jl
loopne
jae
pop
out
mov
dec
in
cmc
pushf
cmc
jmp
nop
mov
xchg
in
pop
lock
jno
xor
jecxz
xchg
insl
addr16
stos
pop
mov
pushf
mov
pop
aam
stos
int
xchg
inc
ljmp
imul
sbb
add
cmp
nop
push
pop
outsb
lea
mov
dec
out
std
negl
sbb
dec
pusha
imul
cli
mov
scas
leave
jge
mulb
jmp
subb
out
xor
out
cmp
test
das
ret
cld
pop
nop
cltd
arpl
imul
mov
push
gs
jl
pushf
push
popa
jg
outsb
push
xchg
lock
fidivs
fdivrs
mov
adc
fwait
cmpb
xor
sahf
sti
jbe
pop
in
pop
mov
dec
jmp
imul
out
push
movsb
push
pushf
leave
pop
std
pop
mov
lock
cs
lahf
loope
repz
push
andb
jp
ret
push
pusha
mov
popf
jb
aam
loop
push
add
pop
cmpsl
jge
push
xchg
mov
inc
mov
daa
popa
outsl
mov
rorb
and
pusha
mov
pop
ret
inc
in
fnstenv
pop
mov
stos
mov
cmpsl
cmp
insb
pop
ljmp
add
sbbb
test
dec
dec
pop
xchg
aam
jno
cmp
jne
pop
add
mov
shll
fistpl
sbb
push
aam
sub
cmp
xor
mov
mov
addr16
add
pop
mov
inc
adc
arpl
push
cmc
je
dec
in
push
adc
xchg
add
jle
fadds
xchg
xchg
les
dec
jge
push
sbb
into
or
std
xorb
fidivl
jmp
leave
test
cwtl
testl
mov
fsts
push
jb
stc
sbb
sub
add
test
mov
in
xor
mov
ret
xor
mov
mov
dec
dec
sahf
sbb
popa
data16
push
or
ja
sbb
into
add
les
fcoml
dec
pop
hlt
test
pop
jmp
jmp
mov
int
adc
jmp
push
ss
mov
aas
lcall
ljmp
fiadds
dec
lods
xchg
test
clc
xor
sbb
rcr
xchg
loopne
sbb
mov
sub
fisubrl
push
subb
push
mov
icebp
test
adc
jnp
aaa
sbb
mov
cld
cmp
dec
cmp
aad
jge
pop
test
mov
inc
mov
aad
push
jb
push
add
stc
pop
arpl
scas
in
jle
jmp
jns
cmpsl
xor
sbb
mov
daa
mov
dec
adc
fmuls
sub
int
adc
mov
fs
out
xchg
sub
xchg
xchg
xor
jnp
mov
scas
imul
push
pop
jns
arpl
cmp
jg
mov
mov
stc
push
in
divl
xor
mov
adc
sbb
lahf
into
dec
sbb
xchg
shll
adc
add
sbb
sub
inc
pushf
inc
into
xchg
stc
mov
xor
cltd
test
les
insl
and
xchg
inc
or
stc
fimull
ja
mov
pushf
push
jo
sahf
dec
clc
sbb
xchg
pop
in
scas
xchg
pop
scas
jb
aam
or
imul
push
mov
inc
clc
cs
pop
stc
and
sub
or
pop
xchg
outsl
lods
lcall
cmp
cmpsl
pop
stos
xchg
jbe
sub
iret
imul
scas
cmp
fldl
xor
and
les
xor
into
pop
lahf
mov
pushf
inc
pop
pop
mov
adc
mov
xor
inc
pop
test
and
jns
mov
push
aam
scas
call
sbb
adc
pop
xchg
cs
cmp
int3
or
in
or
mov
in
fwait
xor
nop
adc
xchg
pop
push
bound
sub
pop
sub
mulb
mov
jne
movsb
repz
in
jns
icebp
pop
jnp
divl
aas
xchg
gs
pusha
or
loope
mov
fldt
jle
cli
scas
inc
shll
push
ljmp
inc
imul
add
aam
addr16
cltd
sub
rcll
pop
pop
sub
ss
aaa
popf
push
mov
jecxz
pop
test
sub
imul
mov
pop
dec
push
inc
jmp
mov
push
stos
push
xor
mov
xor
mov
mov
subl
pop
sub
sti
or
cmp
sti
sub
xlat
sub
aam
fwait
lret
addb
dec
fldcw
insl
pushf
mov
xor
xor
int3
push
add
push
cli
cmpsb
fcmovbe
push
loope
ss
sti
rorl
jns
daa
pop
sub
adc
pxor
mov
mov
xor
xchg
sub
repz
mov
repz
dec
pop
adcb
stc
pusha
inc
mov
lock
es
xchg
stos
xor
in
jecxz
push
dec
push
insb
xor
cwtl
xchg
sub
xor
and
fcomip
rcrl
sub
or
leave
out
jp
aas
es
push
and
movsl
mov
mov
adcb
cs
data16
mov
or
lea
inc
lods
test
cmp
or
sub
inc
fdivrl
cltd
push
mov
xchg
movsl
pop
jnp
jl,pn
rcll
adc
sbb
lahf
test
js
add
mov
idivl
mov
pusha
jmp
fsubp
lret
cmp
repnz
xor
adc
cmp
enter
sbb
dec
mov
nop
pusha
jg
aam
lret
cli
pop
iret
push
js
das
pop
mov
repnz
xlat
rcrl
cmpb
clc
mov
int3
out
ret
mov
sub
sub
sub
ror
mov
inc
dec
add
pop
adc
lock
pop
adc
fisttpll
xchg
fcomip
push
dec
inc
mov
push
cmc
pop
imul
dec
test
imul
jnp
ja
rcll
daa
dec
loop
mov
aad
dec
das
psrad
xchg
stc
xchg
inc
outsl
xor
add
inc
jle
cli
out
add
sub
imul
mov
in
inc
sub
jb
jne
dec
xor
push
and
cmpsb
inc
popf
test
outsl
dec
add
pop
pop
fimuls
test
popa
and
push
mov
cmp
fst
dec
shrl
xor
popl
push
loope
inc
jae
adc
loopne
cmp
xchg
pop
stos
in
into
lret
lods
push
push
inc
push
in
pop
add
jae
lcall
call
sub
xchg
cmp
and
lcall
mov
adc
adc
pop
adc
stos
stc
out
and
dec
test
cmp
rcrb
out
clc
and
mov
pop
sahf
movsb
out
and
dec
fldl
roll
inc
or
fcom
add
cld
or
mov
jns
test
faddl
mov
cwtl
inc
dec
or
cmp
sbb
movb
enter
adc
pop
insb
loop
clc
mov
out
cmp
cmp
call
mov
pushf
mov
movzwl
xchg
xchg
adc
loopne
and
sub
push
hlt
add
jns
nop
push
mov
test
jae
jmp
xchg
xchg
push
lcall
repz
decl
cmpsl
sbb
cltd
jmp
ja
adc
es
push
inc
adc
outsb
jnp
insb
mov
and
lahf
sub
test
cmp
adc
icebp
sti
stc
nop
fcoms
adc
cli
mov
add
sbb
and
hlt
pushf
add
je
scas
sub
inc
cmp
cmc
inc
movsb
fimull
add
in
movsb
jmp
daa
sub
adc
or
push
cs
mov
xchg
into
dec
negl
jne
js
test
cmpsb
or
inc
lahf
push
out
rclb
fisttpl
test
inc
xor
es
daa
inc
gs
mov
sbb
adc
inc
xor
pop
jnp
jb
xchg
testl
cmpsl
inc
sahf
jo
pop
fld
in
ljmp
jne
rcrl
cmp
test
add
leave
xorb
jle
rorb
scas
lods
add
std
lret
es
out
test
enter
sub
add
jge
jnp
jbe
mov
leave
fistpl
fdivs
test
cmp
add
mov
pop
pushf
or
cmp
shrl
hlt
mov
clc
pop
push
mov
in
mov
stc
ss
adc
sahf
mov
jne
xchg
xor
fsubrp
jp
subb
fmuls
addr16
jne
add
in
cmp
cmp
dec
pop
je
and
xchg
cmpsb
sahf
sub
fimuls
push
daa
adc
icebp
xchg
push
mov
sbb
mov
es
rclb
cmpsl
or
insb
mov
sub
xor
inc
adc
and
adc
inc
mov
and
mov
dec
jb
in
mov
scas
cmpsb
jne
add
mov
lock
xor
mov
inc
out
mov
and
vpunpcklqdq
gs
test
sub
push
loope
push
rolb
movl
incl
pop
mov
push
jl
and
incl
lahf
aaa
sub
fidivs
push
stc
leave
mull
pop
push
add
sbb
xor
xor
pop
ds
inc
mov
insb
cwtl
sbb
jbe
popf
addr16
test
jmp
stos
stc
fisttpl
cmc
cmpsl
out
lret
dec
sub
movsl
mov
sbb
shll
inc
jg
jl
test
dec
addb
push
sub
shl
les
xchg
adc
sbb
sbbb
cmp
sbb
rcrb
out
xchg
dec
scas
fisttpll
loope
dec
sub
loope
loopne
test
mov
pushf
add
int
and
imul
jbe
jmp
repz
test
add
sbb
dec
int3
add
push
push
mov
xchg
mov
xchg
shll
push
pushf
cmc
or
push
cmpsb
repz
int3
sbb
and
jp
in
lcall
out
es
xor
pop
test
dec
xchg
jecxz
arpl
adc
imull
sbb
cmpsl
inc
mov
and
xlat
jno
scas
das
sub
sbb
pop
jno
cmpsb
and
addr16
les
mov
adc
out
lds
test
pop
cmp
lock
pop
sbb
loop
bound
cmc
loop
decl
clc
mov
cmpsl
aam
push
cs
xchg
lcall
mov
inc
out
mov
adc
in
icebp
mov
mov
out
fdivrs
stos
xor
loope
and
cwtl
imul
xchg
ljmp
sti
cmpsb
ljmp
pop
in
adc
adc
ss
sub
add
ret
cwtl
cwtl
addr16
xor
pop
mov
xor
add
lods
jecxz
sbbl
int3
dec
pop
mov
aaa
in
mov
out
xor
fimull
fwait
pop
push
mov
xchg
scas
pusha
outsl
arpl
adc
fs
and
nop
gs
cltd
pop
bound
lock
mov
or
push
sbb
int3
lods
add
scas
pop
jg
dec
in
popf
sub
cmp
or
mov
dec
dec
mov
pminsw
popa
div
iret
jp
cs
mov
mov
push
sbb
push
insl
push
jl
pop
pop
push
add
test
dec
jmp
and
fs
push
jp
stos
les
mov
sub
xchg
int3
or
cmp
je
jecxz
pop
adc
repz
cmpsl
xchg
add
inc
adc
cmp
inc
or
call
mov
fcomps
sbb
imul
sti
ja
lahf
sti
sub
js
and
shrl
jmp
hlt
inc
mov
pop
xor
mov
jnp
and
mov
mov
xrelease
mov
push
test
or
out
mov
jae
push
lret
and
jno
sbb
xchg
movsl
ja
mov
lods
inc
add
jae
sub
ret
push
adc
icebp
jp
movsb
xchg
sahf
test
lock
int3
or
mov
fimull
leave
push
bound
inc
xor
xor
js
enter
cmp
test
fwait
jne
lods
inc
inc
mov
xchg
pop
adc
outsb
push
lret
and
subl
insb
shl
dec
shr
dec
sbb
in
xchg
push
mov
cmp
add
xor
jb
mov
push
and
inc
mov
in
leave
insb
popf
sub
sbb
and
lds
test
movsl
inc
outsb
cmp
icebp
fisubl
jns
sbb
mov
les
fnstcw
loopne
adc
jo
jge
jae
repnz
xchg
ljmp
pop
fcmovnu
pop
dec
lcall
jecxz
mov
add
pop
lret
mov
and
pop
jmp
mov
cmp
nop
fiaddl
mov
xchg
das
fbld
pop
ds
inc
push
push
push
mov
cmp
in
in
inc
add
pop
or
shrb
xchg
scas
jl
dec
xor
pop
das
rorb
aam
push
mov
xchg
popf
pusha
mov
mov
jo
cs
or
xchg
fcmovnu
std
or
imul
add
stos
mov
pusha
scas
adc
rolb
arpl
xor
cmp
jno
pushl
inc
adc
cltd
mov
outsb
push
or
idivb
or
lea
movsl
std
or
mov
in
sahf
gs
mov
mov
inc
or
mov
push
push
in
inc
enter
sub
dec
adc
idivl
mov
pop
adc
rorb
nop
jle
lret
mov
lretw
lcall
movsl
xchg
xchg
imul
aas
cmp
shrb
mov
xor
add
and
mov
adc
inc
xchg
xor
or
roll
sbb
aam
or
xchg
cli
and
jl
jmp
xchg
or
outsb
mov
mov
fbstp
inc
jecxz
add
ret
jo
into
push
mov
push
sbb
les
sbb
pop
sahf
addr16
xor
aam
mov
push
fcmovnu
fcompl
push
insb
mov
ljmp
mov
or
pop
test
mov
jns
mov
lods
xor
inc
cld
sub
mov
dec
rcl
scas
ret
ret
into
sti
popa
mov
fcoml
stos
lret
push
sti
inc
sbb
outsl
in
mov
pop
mull
mov
cli
xchg
inc
mov
dec
jne
in
mov
push
or
fnstenv
out
dec
out
or
outsb
sub
daa
pop
mov
push
jns
nop
lahf
adc
jns
xor
pop
push
xor
lsl
xchg
lea
movsb
bt
pop
fldl
iret
dec
adc
stos
movsl
push
stos
std
sub
push
in
outsb
ficompl
addr16
push
popf
sbb
pop
sbb
dec
mov
ljmp
sbb
or
lret
pop
sbb
sti
pushf
test
repnz
mov
sub
sbb
aad
lret
aas
pushw
lahf
push
test
sti
pop
push
sbb
lcall
lods
mov
lds
shlb
adc
push
mov
out
jns
mov
push
jmp
les
cmp
fld
jmp
int3
imul
mov
and
and
push
in
je,pt
gs
push
xor
pusha
rcr
or
subb
mov
and
sub
pushf
das
jmp
mov
lcall
stos
cmpsl
dec
or
dec
adc
push
dec
mov
fbstp
test
push
imul
and
lock
jns
cmp
or
pop
mov
or
es
xchg
pop
int3
mov
jmp
faddl
push
cmc
sbb
adc
cwtl
das
and
mov
dec
jg
sub
enter
prefetch
or
add
cmpsb
fmul
cwtl
aas
lcall
outsl
ja
rorl
cmp
jmp
jp
jle
xor
sub
out
hlt
daa
dec
adc
loope
and
loope
mov
loopne
adcb
loop
cmpsl
mov
aaa
xchg
inc
adc
fcompl
xchg
mov
or
inc
add
pop
xor
stos
xor
sbb
repz
ss
outsl
inc
lret
into
ret
rcll
push
imul
sbb
cmp
sub
cmp
jnp
push
ljmp
sbb
pop
arpl
or
aaa
xchg
les
fwait
mov
jbe
cld
pop
in
out
sbb
mov
push
or
push
test
fnstcw
adc
pop
pop
ljmp
push
or
push
leave
ret
or
ficomps
or
sti
test
push
push
bound
cmc
inc
dec
out
leave
lds
dec
inc
xor
hlt
out
mov
loop
cld
insl
cli
pop
ret
pop
sub
jl
jb
cltd
es
push
lcall
push
sbb
addr16
inc
cmp
enter
fnstsw
mov
mov
cli
dec
add
or
jl
sahf
sub
aaa
outsb
cmp
jb
xor
loope
cmc
fs
in
sub
adc
mov
and
ds
cmp
pop
adc
imul
movsb
adc
inc
mov
jnp
pop
mov
lods
mov
test
cmp
push
xor
jg
ret
mov
ss
xchg
rorb
repz
imul
scas
mov
mov
mov
cmpsl
sbb
and
cmp
insl
xchg
cld
out
scas
inc
fwait
pop
and
mov
ljmp
loop
xor
loopne
sub
rcrb
push
dec
jge
adc
scas
pop
stc
and
ds
push
or
adc
adc
sbb
mov
pop
arpl
mov
fldl2t
movb
scas
push
xor
lods
sar
xchg
mov
insb
std
xbegin
call
add
dec
rcrl
cmp
jle
xchg
ficompl
fwait
push
mov
mov
pushl
std
jo
fwait
std
xchg
aad
pop
adc
adc
cmpl
sbb
push
ret
fimuls
push
adc
push
test
xchg
loopne
into
push
cmp
pop
gs
in
jl
mov
mov
stc
inc
pop
cmp
pop
lods
shl
cmp
xlat
or
aaa
sbb
mov
je
cwtl
popa
scas
sub
xchg
ss
mov
hlt
lods
fstp
test
jl
dec
imul
push
cmc
jge
jno
int
in
loope
pop
inc
dec
jne
dec
fdivl
xchg
fistpll
jno
add
dec
pusha
negl
insb
mov
movsl
mov
sbb
mov
daa
ret
sbb
xor
out
push
sti
dec
das
cli
xchg
cmp
xor
dec
cmp
xchg
push
movb
inc
pop
nop
pusha
imul
mov
sbb
xchg
mov
test
insb
xchg
cmp
push
fwait
jo
jb
or
ret
cld
fidivl
mov
pop
call
mov
cmpsb
xchg
mov
enter
sbb
jge
fnstcw
cmp
cvtdq2ps
andb
pop
ret
outsb
sbb
pop
rorb
outsl
in
push
jns
lods
push
mov
stos
pop
add
adc
inc
pop
inc
pop
dec
sub
fwait
int
mov
hlt
sbb
pop
stos
enter
add
adc
xor
aaa
mov
inc
fldcw
jbe
cmp
mov
dec
movsb
xchg
sbb
mov
das
mov
stos
add
mov
mov
repnz
jnp
lods
and
out
sbb
cmp
popa
fiadds
ficompl
mov
push
out
es
add
push
loop
in
jle
rorl
pop
je
out
jne
divb
lock
in
dec
test
pop
mov
mov
std
dec
cmp
push
jmp
and
test
sbb
xchg
cld
and
push
cmpsl
pusha
jno
bound
xchg
push
enter
mov
push
loopne
arpl
and
iret
mov
sub
inc
jge
pop
out
arpl
sub
lret
sub
mov
cli
jne
mov
inc
xor
xor
dec
out
and
dec
fistl
je
mov
mov
adc
mov
fsubrs
lock
dec
ljmp
inc
sbb
leave
das
cli
mov
mov
test
and
cmp
inc
push
sarb
or
daa
and
adc
lret
mov
cmpb
insl
pop
pmaxsw
mov
inc
cmp
add
mov
adc
aaa
outsl
xchg
sub
pop
lods
ds
mov
shrb
arpl
je
loope
int
popa
jle
xorl
bound
lahf
push
cmpsb
mov
dec
ja
shll
sbb
rclb
enter
mov
scas
sub
repz
jl
andb
dec
and
cwtl
jo
mov
enter
push
push
iret
jmp
jecxz
lahf
outsb
xchg
int
cmp
adc
cmp
test
out
jp
sub
mov
adc
cld
fcoml
fisubrl
push
dec
sbb
xchg
pop
jnp
xor
outsl
int3
fidivs
pop
outsl
or
cltd
mov
mov
fs
inc
cld
xchg
cmc
fistl
lcall
sbb
mov
inc
dec
jmp
mov
cmp
test
xlat
mov
shr
fiaddl
mov
adcl
or
push
xchg
sti
idivl
leave
cmpsl
inc
pop
je
jno
sub
jl
call
es
mov
fs
testb
fucomp
negb
ds
fildll
push
dec
rcll
lods
jb
mov
enter
shr
sbbl
mov
loope
iret
cmp
mov
psrad
sarb
mov
imul
test
cmpsl
dec
dec
push
and
out
pusha
push
stc
ret
xor
mov
mov
xorb
add
lcall
pop
mov
dec
xor
sub
lock
push
xor
inc
or
repz
xor
in
shlb
xchg
inc
jl
add
inc
cmp
sub
add
scas
pop
ret
mov
mov
adc
icebp
mov
adc
xchg
pop
pusha
bound
in
inc
sbbb
xchg
cmp
cltd
lods
test
mov
aaa
lahf
rorb
sbb
pop
fucomip
sub
mov
outsl
lret
dec
out
daa
add
adc
int3
mov
les
pop
lahf
pop
dec
add
jne
pop
je
in
cs
loope
jo
test
arpl
ret
jmp
ss
in
rcl
sbb
inc
or
jecxz
mov
inc
stos
adc
rcll
les
pusha
imull
xor
sbb
cmp
and
adc
inc
xchg
sahf
mov
ret
push
outsb
mov
les
rorb
jns,pn
lret
popf
add
jns
xor
and
mov
and
mov
popa
dec
adc
adc
mov
jno
dec
mov
cmpb
les
repz
hlt
jecxz
xor
push
cld
inc
sub
add
enter
stc
sarl
dec
inc
and
int
add
cli
callw
sub
push
stc
out
xor
ret
lea
push
test
add
mov
or
lods
xchg
push
cmp
fcmovbe
cli
test
testl
pop
int
fdivl
inc
mov
lcall
sarl
mov
sub
sub
mov
lock
sub
pop
ret
xchg
test
and
add
inc
aas
sub
outsb
rol
in
test
add
jb
jae
mov
lahf
add
cs
out
xchg
jne
add
das
adc
inc
in
cmp
dec
fcmovnb
lret
test
loopne
test
cs
mov
das
mov
add
rcll
mov
cld
pushf
inc
repnz
clc
lea
sub
sub
scas
inc
pop
mov
xlat
daa
imul
pop
mov
inc
aas
test
cwtl
mov
mov
outsl
mov
popf
inc
sbb
xor
mov
jo
outsl
mov
adc
ficompl
adcb
lret
repz
inc
cmc
in
ret
xchg
out
mov
mov
push
lds
inc
jle
pop
ret
popf
add
lcall
addr16
adc
ret
sub
sti
xlat
rorb
xor
push
and
ja
arpl
jno
add
ret
cs
pop
out
dec
jbe
or
pop
add
xor
testb
xchg
mov
test
xchg
sub
mov
data16
jae
gs
cwtl
xchg
inc
push
mov
bound
or
lret
jb
xchg
and
jae
mov
mov
popf
xorl
xchg
and
insl
adc
xor
sbb
mov
and
lods
mov
fists
jge,pn
add
inc
xchg
arpl
insb
inc
dec
add
mov
sbb
mov
ss
push
notb
movsb
pusha
xor
test
add
gs
das
cmpsb
pop
add
adc
add
rorb
sbb
fsubs
shlb
adc
mov
add
jnp
jle
mov
jg
add
mov
lcall
out
jnp
enter
mov
mov
cli
insb
mov
lds
ret
mov
lock
adc
push
dec
lea
jl
pop
pop
pop
lods
shlb
das
sub
fs
inc
outsb
adc
xlat
ds
lods
outsb
and
rolb
gs
push
ljmp
and
pop
test
sub
fists
cli
mov
js
daa
ljmp
pop
test
sbb
aam
cli
add
sub
sti
out
dec
movsl
fdivs
pop
subb
push
sub
push
cld
push
xchg
mov
mov
mov
cld
clc
pop
scas
in
call
mov
test
jno
nop
loop
clc
cmpsb
jae
enter
out
mov
push
pop
insl
icebp
push
xchg
or
xor
scas
xchg
js
adc
jl
mov
lahf
pop
mov
lods
icebp
adc
pop
push
push
dec
clc
mov
jecxz
ret
jmp
push
mov
sbb
xor
or
mov
cltd
daa
pop
int
mov
pop
test
test
cmpsl
dec
adc
inc
mov
mov
pop
mov
mov
mov
pop
mov
ds
cmp
cmpsb
xor
in
mov
xor
stos
push
cmp
sbb
jbe
pop
adc
sub
jecxz
mov
xor
pop
call
das
mov
popf
out
frstor
mov
clc
xchg
cmp
xchg
jg
inc
adc
inc
and
cmp
pop
push
shl
jmp
add
movsb
jle
and
daa
dec
popf
sar
inc
inc
add
push
add
dec
int3
mov
adc
add
cmp
adc
push
mov
je
mov
jnp
repnz
in
and
mov
fwait
pop
sub
mov
jge
out
mov
int3
push
js
and
dec
insl
xor
push
cld
push
popa
lds
lock
mov
popf
je
ljmp
das
cmpsl
push
dec
loop
xchg
xchg
pop
push
jecxz
call
sbb
hlt
sub
mov
iret
xor
push
mulb
jge
in
xlat
add
inc
xor
jl
cld
dec
out
add
loop
pop
nop
fmul
mov
sbb
push
in
pop
mov
pop
fcomp
daa
repz
jmp
stos
xchg
js
ds
aad
lods
add
xlat
jno
cmp
xchg
repz
fnsave
or
ficomps
shll
pop
sub
loop
aaa
adc
imul
cltd
mov
push
ja
mov
sub
mov
adc
jge
xor
cwtl
lods
lcall
jge
imul
sub
daa
loop
xor
pop
cmpsl
mov
addr16
or
or
ret
mov
cmp
sub
cwtl
out
movsl
test
mov
cmpsb
shrb
cmpsl
jo
sub
mov
pop
pop
in
push
aad
cli
mov
mov
mov
jbe
imul
and
mov
adc
mov
jg
add
inc
in
test
xchg
pop
mov
jmp
rcl
das
sub
sbb
or
aad
and
sbb
loopne
mov
adc
mov
add
push
jae
das
movb
and
popf
xchg
cwtl
bound
dec
in
out
addr16
pop
scas
adc
push
mov
ljmp
mov
or
sbb
sbb
mov
gs
mov
and
insl
cmpsb
adc
or
pop
inc
frstor
pop
stos
into
loop
jl
sbb
mov
adc
or
adc
ret
dec
cmp
jnp
xchg
cmp
nop
ret
mov
xchg
cmp
mov
dec
stos
nop
mov
movl
dec
hlt
shlb
fiadds
in
sbb
std
lock
sbb
ficomps
sub
jg
sub
mov
imul
mov
bound
fimull
popf
mov
inc
arpl
sbb
ja
xchg
inc
push
cmc
mov
and
add
lock
xchg
daa
fbstp
mov
jno
push
inc
scas
jle
xchg
xchg
ret
adc
pop
stc
je
inc
adc
mov
xchg
mov
int
cld
imul
sub
xor
lahf
popa
scas
add
imull
xor
pop
insl
and
push
xchg
and
popf
leave
push
cmpsl
insl
adc
lock
jp
jo
push
test
addr16
inc
repz
popl
mov
sub
mov
mov
dec
lcall
rcl
inc
ds
cmpsb
pop
addb
sbb
sahf
lock
cli
enter
das
cmpsl
sar
fsub
push
cmp
xchg
int
rcll
push
es
dec
cmp
insl
xchg
pop
in
lock
test
sub
inc
xchg
pop
add
aam
out
mov
add
ja
jb
daa
insb
dec
mov
push
pop
imul
push
pop
cmp
rcl
add
or
in
lea
cltd
push
mov
cmp
icebp
loope
in
cltd
mov
fbld
out
ret
mov
xor
sub
pop
dec
btl
mov
js
fs
clc
xchg
out
ret
xchg
and
ss
mov
xchg
adc
lods
push
imul
mov
lcall
ret
jbe
xor
mov
std
mov
lahf
outsl
dec
cmp
daa
in
pop
clc
out
incl
insl
pop
daa
stos
int
into
dec
imul
and
xor
jnp
stos
call
rclb
pop
pop
cmp
int3
push
add
cmp
push
mov
jp
adcl
clc
das
jle
sub
mov
xor
push
out
shl
cmp
sti
push
mov
cwtl
int
shrl
fsts
mov
out
add
lods
jno
jle
js
jns
mov
lea
inc
xchg
inc
dec
sub
pop
inc
push
test
pop
cmp
mov
jmp
and
mov
add
jp
lcall
or
pop
mov
enter
and
jae
push
or
icebp
mov
jb
js
jecxz
xchg
push
xchg
push
mov
pop
shrl
jno
dec
fisubrl
jb
push
lods
xchg
int3
pop
push
dec
in
out
and
jmp
je
add
imul
pop
mov
in
in
jbe
add
or
lods
jns
icebp
stos
or
xchg
sub
cltd
mov
xchg
fcomp
xor
push
gs
push
or
push
sbb
fists
jl
cmp
mov
xor
fcmovbe
addr16
cwtl
jbe
repnz
loope
sub
test
andl
xor
shrl
jg
pop
mov
xchg
jecxz
mov
hlt
and
mov
loope
and
add
jo
lret
out
mov
repz
lds
fisubl
hlt
data16
jmp
and
sbb
xchg
and
sbb
mov
jp
enter
xorl
inc
inc
inc
test
jo
lock
fiadds
mov
repnz
scas
sbb
cmp
arpl
mov
jecxz
stc
movsb
in
shl
sbb
sub
xchg
mov
sbb
add
cld
into
inc
out
test
push
push
ljmp
inc
sbb
repz
mov
mov
inc
inc
addb
sahf
inc
push
in
push
mov
mov
outsb
jg
sbb
popf
jle
mov
inc
sbb
jns
in
adcb
add
mov
pop
jae
cmp
dec
lock
dec
dec
inc
push
push
push
or
add
in
jne
sbb
push
cs
lcall
jns
inc
jmp
cwtl
cmp
pop
arpl
aas
lret
fcoml
leave
adc
push
mov
test
daa
daa
jnp
lds
add
adc
xchg
sbb
mov
push
jecxz
adc
adc
fsubs
sbb
jmp
push
fsubrl
inc
rclb
faddp
cwtl
shll
pusha
xchg
push
in
xor
fbstp
insl
std
xchg
lea
pop
xchg
or
inc
testl
add
jns
test
loop
repz
int
adc
inc
mov
in
xlat
sahf
mov
adc
out
scas
pop
mov
jb
out
and
sarl
inc
add
mov
or
out
xrelease
xor
mov
add
fsubl
sub
popa
mov
lcall
ljmp
in
adc
movsl
stc
testl
mov
fldcw
in
cmc
xchg
adc
imul
add
dec
dec
inc
testb
xchg
xorl
fsubrl
stos
xchg
jecxz
xchg
mov
mov
adc
daa
call
lods
mov
pop
xor
xchg
lahf
sahf
mov
pop
loop
aaa
dec
notb
push
scas
pop
xchg
daa
and
xchg
push
pop
cmpsb
out
sub
sub
sub
nop
ljmp
sbb
std
jb
mov
in
out
repz
dec
or
rcrl
jbe
fiaddl
stos
jns
lods
loop
jbe
cltd
sub
ljmp
push
lahf
sub
popf
mov
pop
adc
js
cwtl
dec
mov
rcrl
inc
fbstp
icebp
lcall
fisubrl
add
add
add
mov
insb
clc
ror
xchg
jp
xchg
int3
push
stc
cmp
pop
notb
lds
jbe
or
insl
dec
xor
mov
sub
jp
xor
push
cmpb
clc
jge
inc
pop
xchg
or
dec
jno
in
leave
aas
pop
lods
cld
test
or
push
cmpsb
add
mov
jmp
jb
mov
into
sti
data16
jl
mov
sub
lods
mov
cmp
inc
xchg
mov
sbb
jecxz
daa
insl
xor
sbbb
gs
dec
gs
dec
addr16
lods
xchg
in
xchg
jg
dec
sbb
pop
sbbl
pop
mov
out
mov
xchg
adc
cli
pop
cmovns
and
imul
push
fmull
test
dec
out
sbb
movl
sub
popf
scas
clc
mov
or
xor
into
into
adc
call
aaa
and
lret
iret
les
xor
mov
or
repnz
lret
push
mov
xor
xor
mov
push
add
xorl
enter
ja
into
mov
loopne
mov
mov
pushf
adc
fldt
adc
stos
jae
fcomip
pusha
out
mov
mov
mov
aas
clc
push
xor
lock
movsl
test
fwait
adc
bound
lret
mov
xchg
push
decb
cwtl
mov
pop
bound
mov
pusha
scas
mov
nop
mov
adc
imul
xchg
dec
jl
add
cmpsl
cmp
mov
cwtl
jmp
andl
dec
arpl
jmp
dec
lcall
xchg
or
xor
out
mov
mov
int3
and
cs
mov
pop
and
call
inc
stos
and
lods
and
in
in
js
stc
mov
cmp
pop
mov
mov
dec
and
xor
pop
out
daa
sahf
and
std
es
fcompl
jl
out
adc
jae
out
sbbl
xchg
push
inc
inc
call
add
ss
mov
mov
jns
sahf
adc
cmc
loope
das
mov
mov
adc
es
enter
stc
outsl
iret
xlat
push
pushf
leave
push
mov
je
fs
sbb
push
lret
mov
jle
outsb
mov
pop
push
pop
adc
scas
dec
cli
sahf
jecxz
cmpb
cs
call
test
sub
xor
push
xchg
pop
inc
hlt
sub
inc
mov
jle
int3
ja
inc
popf
inc
adc
cmp
inc
arpl
js
repz
mov
fs
xor
jnp
test
outsb
xlat
inc
aaa
dec
lahf
and
icebp
fistpll
mov
push
push
sbb
xchg
jbe
insl
mov
into
nop
mov
rcl
dec
scas
mov
xchg
jmp
cwtl
idivb
sub
push
lret
cmpb
ljmp
dec
arpl
cld
faddp
stos
add
jg
ret
xor
jecxz
repz
dec
adc
ficompl
or
or
es
add
hlt
mov
rorl
pop
adc
daa
adc
into
sbb
jp
add
sti
xor
pop
ficomps
call
outsl
push
repz
pushf
push
in
sahf
pop
push
inc
shll
sub
popf
stos
mov
aaa
sub
nop
add
add
inc
adc
fnstsw
and
mov
xchg
and
adc
push
lds
pop
mov
dec
cmp
xchg
xchg
adc
subl
dec
iret
call
xor
xor
jmp
cmp
jb
bound
adc
sbb
xchg
cltd
lods
pop
in
mov
xlat
mull
adc
imul
push
insl
mov
xchg
leave
xor
in
push
andl
lahf
mov
xchg
sbb
in
pop
mov
lcall
jae
xchg
cmpsb
popf
sahf
mov
orb
xor
aad
decb
sub
pop
push
cmp
push
push
int3
stos
and
or
xchg
mov
outsl
js
push
pusha
sbb
repnz
leave
out
fidivs
dec
add
gs
or
dec
pushf
out
pop
dec
popf
dec
pop
add
sbb
push
mov
push
aad
cltd
mov
sub
push
and
movsl
and
cmp
jbe
lods
xorl
imul
xchg
stc
je
push
pop
icebp
mov
inc
push
xchg
push
addr16
insl
sbb
ret
push
jp
fmuls
imul
mov
jno
stos
int3
leave
popa
ja
arpl
mov
sbb
test
mov
int3
adc
stc
sub
fnstenv
sbb
aad
div
and
lahf
je
clc
fbstp
int
lds
mov
mov
xchg
cmp
cmpsl
push
jg
dec
mov
cwtl
add
adc
jne
icebp
jp
out
inc
sub
ljmp
sbb
mov
test
inc
mov
mov
jge
or
cmp
ja
adc
mov
fcmovnu
xchg
cld
push
or
jnp
gs
ret
outsb
cmp
insl
shl
js
mov
inc
test
pop
test
push
lret
inc
shrl
mov
mov
jmp
mov
jecxz
orl
jge
stc
out
rcrl
dec
fidivl
scas
aas
push
pop
aad
pop
jo
repnz
mov
popf
call
cli
add
int3
push
inc
in
std
in
push
lods
int
fsubrl
mov
mov
arpl
cmp
orl
xor
sbb
xorb
mov
cmpsl
pop
lcall
pop
cmp
daa
ds
xlat
pop
es
cmp
push
pop
mov
jl
testb
push
pop
jecxz
repnz
fwait
and
pop
xorl
cli
push
sti
xorb
jecxz
das
bound
insb
rolb
cli
fbstp
adc
xchg
xchg
cmc
adc
loope
repnz
or
xchg
sub
sbb
add
xchg
jns
inc
fyl2x
outsl
sbb
cmc
div
sbb
or
addr16
or
inc
push
or
clc
test
mov
and
dec
ljmp
mov
rcrb
adc
mov
push
push
andb
jl
jg
ret
xchg
ss
cmp
insl
bnd
sar
xor
add
test
dec
lcall
push
rep
in
fisubs
mov
xchg
lret
adc
enter
xchg
aaa
leave
sbb
in
sbb
fstpl
xor
push
and
adc
iret
push
or
add
movb
or
mov
repz
test
add
frstor
dec
lret
cmpsl
push
inc
mov
lahf
jg
push
xchg
and
cli
mov
lcall
pop
mov
cmc
inc
sub
out
push
daa
jl
add
mov
push
push
mov
push
insl
adc
mov
inc
and
push
dec
xchg
xchg
mov
xchg
or
adc
jl
or
ja
f2xm1
xor
bound
mov
fisubrl
mov
outsl
loop
aam
mov
xor
and
int3
push
and
mov
push
xchg
ljmp
and
push
cmpsl
in
push
in
fs
cmp
jge
push
fildl
sti
cmpsb
test
cld
scas
pop
outsb
test
pop
movsl
sbb
push
mov
pop
ret
cs
test
rclb
scas
xchg
and
xor
xchg
rcr
add
fisubl
jno
shl
lds
loope
jecxz
cli
rorb
sbb
and
or
xchg
adc
and
mov
mov
jno
mov
test
xor
sub
sub
daa
insb
jecxz
loopne
repz
addl
dec
sub
sar
mov
pop
jecxz
xchg
inc
or
sub
fcmovne
adc
hlt
in
aam
in
jl
sti
push
push
jge
xchg
mov
mov
sahf
dec
std
push
mov
enter
fmuls
lods
xchg
sbb
xor
aas
aas
mov
mov
cs
lea
xchg
int3
iret
inc
ds
inc
mov
jo
dec
xor
mov
cmp
nop
fstpt
mov
push
in
orb
iret
jl
cmpsl
popa
ss
push
dec
pop
xchg
je
xchg
and
test
push
and
std
loopne
inc
push
and
inc
ss
pop
xor
xchg
in
lahf
push
dec
pop
lcall
inc
idivb
out
arpl
hlt
out
push
mov
arpl
jne
sub
arpl
out
ret
cmpsb
and
ljmp
push
iret
ss
sub
int3
add
bound
xchg
adc
pop
lcall
cmc
xchg
push
loopne
aam
mov
inc
test
lods
xchg
outsb
fs
ljmp
fwait
aaa
int
add
mov
into
or
in
push
stc
loop
aaa
jle
add
cld
push
sarb
push
imul
ljmp
xor
mov
in
mov
lods
inc
or
add
test
sub
push
mov
add
test
xchg
jecxz
scas
push
aad
fisubrs
cmp
movsb
mov
mov
sti
loope
pop
aas
mov
movsb
clc
std
push
ret
push
xlat
outsb
push
xor
sbb
pop
dec
pop
mov
aad
imul
sbb
add
adc
imul
jecxz
inc
inc
neg
push
adc
lret
jmp
popf
jmp
mov
jno
fists
mov
mov
and
int
lret
fisubs
int
scas
cmp
adcl
in
sti
cwtl
inc
cmp
adc
lea
cmp
and
inc
pop
cmp
dec
dec
dec
mov
cwtl
in
aas
insb
sbbl
xor
xchg
xor
repnz
pusha
jl
dec
mov
lret
push
dec
jl
dec
xchg
daa
cmp
push
movsb
sbb
popf
mov
outsb
sub
mov
add
jne
add
mov
fs
mov
out
dec
ja
lods
jp
mov
scas
insb
lock
adc
cmpsl
sbb
dec
pop
hlt
stc
mov
insb
cld
int
mov
lcall
pop
inc
mov
loope
mov
mov
or
call
movsb
mov
pop
iret
cmpsb
fwait
adc
gs
int
rcrb
in
fdivrl
cmpl
cmp
jmp
pop
add
enter
mov
and
in
data16
js
sbb
jae
movsb
pop
cs
jmp
pop
js
fdivp
xchg
add
mov
sub
push
scas
outsb
sub
sub
mov
inc
jge
shl
iret
clc
jb
movsl
stc
adc
es
cmp
push
inc
stos
aam
mov
jb
cmp
push
xchg
mov
out
sbb
jne
adc
fnstsw
out
mov
js
cmp
nop
xchg
dec
dec
rcrb
cmc
adc
xchg
test
push
std
cmpsb
and
sub
loope
mov
gs
call
mov
leave
and
sub
lods
lret
adc
dec
cmpxchg
xchg
xchg
jp,pn
aam
adc
out
mov
xor
jno
sbb
mov
loopne
pop
jbe
fidivs
arpl
push
mov
pop
cmp
je
scas
ret
fucom
inc
cmpsb
imul
mov
or
mul
pop
sahf
push
sub
aaa
pushf
and
cmp
test
or
dec
push
aam
fcmovu
in
shl
xchg
movsb
cmpsb
jo
fldl
add
in
jo
add
cli
and
push
xor
lock
ja
dec
mov
movsl
lods
mov
push
dec
lods
loope
jmp
pop
lcall
aam
sub
mov
pop
int
jecxz
test
xchg
test
mov
mov
and
xchg
pushf
enter
inc
jne
notb
imul
pop
mov
ljmp
dec
jae
xchg
paddw
cwtl
jno
mov
fsubs
inc
adc
loope
iret
mov
pop
ror
shlb
ror
dec
hlt
xor
or
fcompl
xchg
stos
dec
out
cmp
inc
cmpsb
mov
out
add
data16
dec
stc
outsb
dec
jl
fcmovbe
js
repnz
mov
gs
fstl
jae
inc
xor
jns
aam
fwait
and
ljmp
test
divl
lods
js
out
and
sbb
icebp
bound
push
shll
xchg
add
loopne
xchg
jno
lock
mov
sbb
cli
inc
roll
pop
sbb
lahf
add
cli
sub
cs
ds
add
push
sbb
sbb
xchg
sahf
push
jmp
adc
popf
inc
cmp
and
jns
dec
je
subb
loopne
push
and
adc
lods
cmp
mov
in
decl
mov
or
cmpl
sbb
sti
lahf
inc
push
pop
ljmp
dec
dec
addr16
adc
cs
mov
sub
cltd
insw
sub
inc
or
jns
jbe
repnz
or
js
xchg
sarl
lret
mov
add
frstor
or
mov
and
pop
mov
lock
mov
push
dec
icebp
adc
dec
scas
and
or
decb
mov
daa
cmp
lea
push
or
test
mov
adc
inc
sub
mov
inc
inc
sub
loop
jg
dec
jns
stos
mov
xchg
mov
and
mov
push
pop
int3
stc
jns
xchg
stc
jl
fnstcw
std
scas
cmp
lock
cli
in
sahf
test
and
push
xchg
hlt
int3
pop
sbb
fsubs
mov
shlb
jl
sbb
adc
mov
lret
mov
xor
imul
fiadds
adc
fistpll
arpl
push
ret
test
aas
ljmp
mov
mov
or
mov
ljmp
movsl
mov
xchg
mov
add
pop
in
js
aad
leave
pusha
cmpsl
in
cmp
push
leave
push
lds
jmp
sbb
fwait
stos
sub
xor
pop
lcall
mov
rorl
lods
mov
out
arpl
outsb
loope
add
mov
shlb
jge
add
pop
sbb
jp
sub
push
sub
mov
mov
test
lcall
dec
mulb
push
loopne
sarl
cwtl
cs
out
xchg
ljmp
int
xor
adc
cmc
or
scas
arpl
repz
jb
mov
push
or
sbb
inc
pop
stos
sbb
es
jns
dec
inc
pop
or
sbb
orps
and
adc
lret
and
loope
xor
outsl
aaa
test
data16
decb
or
daa
push
jmp
in
das
out
sub
fwait
ja
mov
mov
pop
pop
xchg
loop
inc
stos
xor
pop
ja
mov
jae
pop
or
notl
or
jmp
cltd
cmp
test
imul
push
add
sub
addb
mov
jno
dec
inc
addr16
fs
data16
pop
mov
enter
es
aad
mov
adcl
xor
aam
add
out
sti
jo
pop
jbe
inc
test
test
mov
jg
fdivs
xlat
mov
push
sarl
pusha
jmp
stos
inc
and
cmp
popf
dec
add
out
stos
pop
insl
push
jp
not
je
enter
arpl
sub
push
mov
mov
mov
jbe
test
jnp
jb
inc
shll
dec
xchg
inc
jecxz
push
std
pop
inc
movsl
pop
sarb
and
xchg
arpl
push
outsl
test
mov
add
sti
in
inc
fbld
cmp
mov
clc
insl
enter
lret
nop
inc
cwtl
dec
sbb
xchg
insb
mov
xchg
rorb
sub
xchg
insl
lods
ds
add
or
iret
pop
mov
xchg
outsb
add
iret
jnp
adc
lcall
adc
mov
dec
lods
sub
inc
bound
testl
mull
jge
push
mul
push
out
mov
ds
js
pop
sub
jb
dec
test
add
ret
scas
push
ljmp
lcall
push
ret
lea
mov
and
push
push
mov
fimuls
fnsave
dec
xchg
rorl
jg
fnsave
movsl
dec
stos
mov
testl
xlat
sbb
jecxz
push
addl
cmp
lock
pop
jne
push
hlt
int3
stos
jp
mov
dec
icebp
and
cltd
push
fwait
push
rorl
xchg
or
mov
jno
clc
mov
adc
pop
fistpl
lods
adc
out
ja
pop
inc
int3
dec
lods
dec
outsb
mov
mov
pop
jbe
add
mov
lds
mov
sbbb
mov
movsb
iret
sbb
jge
add
jp
adc
cmc
cmp
and
aas
loop
pop
dec
mov
in
xchg
mov
in
fnstsw
data16
mov
inc
push
push
mov
pop
dec
hlt
call
mov
push
pop
test
ret
xor
popa
out
cmp
xor
cltd
jbe
sub
push
xor
push
in
lret
pop
ret
insb
shl
push
and
outsl
std
fstpt
add
in
inc
int
and
test
mov
pop
jns
lods
jns
pusha
xor
dec
aas
jle
inc
clc
adc
push
xor
mov
jle
cmp
nop
les
popf
fadd
jo
xchg
insb
xchg
cld
xor
ds
mov
test
pop
in
xchg
xor
dec
pop
sbb
sub
lcall
and
bound
add
jl
out
push
adcl
nop
inc
xor
jle
xchg
fidivl
imulb
je
mov
add
pop
test
out
scas
cli
cmp
je
jg
and
mov
bound
cmp
add
mov
dec
adc
xchg
mov
pop
iret
push
mov
out
mov
in
stc
push
loopne
shrb
pop
pop
mov
pushf
pop
inc
into
stc
fst
out
loope
sbb
cmp
mov
and
push
xchg
push
jg
imul
sub
std
mov
sub
test
in
push
orb
outsb
push
xor
adc
mov
xor
xor
mov
cmp
sbb
clc
cltd
jl
jle
add
xor
imul
and
sub
mov
and
jmp
fdivs
jmp
ds
adc
test
imul
and
out
jecxz
aas
dec
or
jnp
test
xchg
imul
fwait
test
int
jae
add
sbb
loop
iret
push
pop
out
inc
lock
popf
movsb
loopne
fs
push
jle
jp
add
xchg
add
sub
jnp
add
popa
push
lret
mov
sti
ds
in
pop
push
push
jo
iret
mov
fnstcw
inc
adc
and
mov
adc
jns
ret
sbb
outsb
fistl
jmp
dec
or
stc
repnz
fs
xchg
and
add
pusha
sub
pop
movups
les
inc
mov
cmp
fwait
aad
pop
into
push
dec
sbbb
xchg
mov
pop
mov
pop
aam
push
aas
fisubs
dec
or
xchg
mov
or
adc
rorl
gs
add
movsb
pushf
sbb
pusha
inc
or
lret
sub
rol
add
subb
out
es
xor
ret
push
mov
mov
mov
mov
push
sub
incb
xchg
or
push
mov
adc
mov
mov
xor
dec
insb
loop
mov
dec
hlt
popa
mov
add
push
mov
or
mov
les
shll
sub
sarb
lds
jae
push
shl
rcll
mov
mov
data16
sub
push
jmp
or
loop
jge
in
adc
das
aam
add
mov
push
add
cmpsb
mov
daa
stc
mov
jle
jmp
adc
pop
mov
add
shlb
fsubrs
mov
sub
jge
or
es
push
mov
inc
neg
fsubl
xchg
xor
add
mov
jne
ljmp
push
push
les
aad
jo
mov
movsb
cmp
repz
into
fists
mov
xchg
push
and
or
adc
icebp
test
mov
mov
dec
dec
push
push
andl
repz
lea
mov
and
sub
add
clc
push
shl
mov
xchg
mov
cltd
mov
xchg
or
leave
push
push
aas
pop
mov
xchg
push
pop
aad
inc
mov
test
push
repz
lahf
mov
orb
push
add
mov
lcall
mov
xchg
jb
push
cmpsl
jb
and
in
std
aam
sbb
rcrb
and
test
pop
addr16
and
test
cli
outsb
xchg
dec
stos
scas
les
arpl
lds
pop
ss
pop
hlt
daa
jo
fldt
xchg
test
andl
and
js
rol
outsb
mov
ret
mov
inc
out
addr16
push
jb
jle
or
rcrb
or
insb
mov
mov
mov
mov
ret
xchg
jmp
in
mov
lret
pop
fisttpll
pop
sub
cli
mov
push
jo
jge
mov
rep
out
adc
xchg
mov
adc
insb
popa
xor
ret
cld
clc
dec
les
add
das
jecxz
sbb
mov
ja
cs
nop
insb
lods
jmp
in
xchg
inc
hlt
test
or
ljmp
mov
adc
test
jecxz
push
or
js
mov
xor
clc
or
xchg
adc
jbe
test
mov
dec
push
insb
jo
sbb
and
fsubrs
out
mov
mov
cmpsl
or
aas
push
data16
and
shl
in
icebp
int
pop
xchg
sub
imul
fsubl
iret
vrcp28ps
push
int3
test
ja
jbe
fwait
andl
scas
fdivl
fidivs
pop
cmpsl
inc
xor
dec
loop
add
rol
dec
xchg
push
adc
repz
mov
jno
rolb
inc
jae
mov
and
dec
cmp
xchg
ret
fs
push
add
push
lods
adc
mov
fwait
push
sub
clc
lret
dec
add
test
sbb
out
inc
fmull
and
mov
sub
jmp
dec
mov
lock
mov
daa
ficomps
mov
jns
mov
sar
add
mov
jo
scas
add
lret
cmp
aaa
pushf
repz
cmp
ficoms
mov
mov
test
push
mov
enter
xchg
mov
pushf
cmp
mov
mov
pop
fimuls
and
fstpl
jns
fwait
cmp
or
cmpsl
sbb
sub
or
mov
pop
in
mov
adcb
loopne
das
out
cmpsl
loopne
pop
movsb
jns
js
test
scas
xlat
loopne
mov
gs
movsb
cld
sbb
cmp
xor
cmc
popf
jmp
mov
cli
xchg
mov
pop
inc
mov
fdivl
fldcw
arpl
repz
and
adc
in
int3
bound
and
dec
adc
mov
lock
inc
dec
jp
sbb
jbe
and
push
cmp
out
dec
daa
xchg
cmp
adc
push
clc
and
cwtl
xor
cmpsl
js
movsb
jo
mov
xchg
sti
cmpsb
xor
mov
xor
mov
jmp
pop
mov
push
sti
jno
push
movsl
adc
sbb
les
jno
sub
loopne
jmp
aas
fistpl
pushl
int3
sahf
xchg
orb
hlt
jns
sbb
jecxz
and
aam
mov
clc
push
pop
imul
pop
fdivrs
repnz
push
lret
enter
xchg
jle
mov
int
shrb
sar
in
hlt
bound
incb
dec
gs
sarl
mov
inc
jbe
push
mov
jp
ds
sub
out
add
or
mov
jns
dec
popf
je
scas
push
sbb
into
stc
lret
sbb
xchg
cmp
pop
mov
movsb
int3
es
scas
xor
mov
notb
enter
in
xchg
xor
push
sbb
mov
xchg
mov
add
movhlps
arpl
fwait
and
fwait
orl
adc
cwtl
cmp
add
mov
push
cwtl
lret
adc
mov
push
jo
out
cli
sub
les
ja
sub
rorl
mov
ja
das
test
ror
cmpsl
js
add
mov
inc
ss
sti
cltd
inc
and
pop
scas
ret
adc
aas
xorl
sub
xor
sub
mov
aas
mov
or
cmp
pop
cltd
sti
add
mov
mov
bound
mov
ret
jmp
push
dec
and
es
out
push
cwtl
decl
pop
aam
in
inc
into
add
dec
loopne
mov
jne
jmp
mov
pop
aaa
dec
or
sbb
fcmovnbe
mov
sub
loopne
mov
and
cli
xchg
mov
mul
shll
shl
andl
xchg
movsb
js
inc
addb
mov
inc
fdivrl
add
mov
mov
cmp
mov
cltd
add
push
aaa
clc
in
mov
cli
subb
xchg
roll
aaa
jne
jle
mov
cli
lods
pop
fucomp
sahf
or
adc
out
insl
mov
mov
jmp
sbb
dec
aas
add
xchg
outsl
jge
and
mov
add
fdivs
sub
lret
xchg
adc
arpl
mov
adc
xor
dec
push
sarb
iret
mov
rcrl
outsb
mov
jno
test
and
sbb
push
mov
jp
mov
mov
mov
mov
mov
repnz
shr
mov
stos
fwait
jmp
lahf
sbb
push
pop
fwait
jbe
xchg
in
jbe
pop
xchg
jne
mov
subl
mov
mov
add
mov
lea
pop
shr
mov
es
mov
ljmp
pop
add
or
lock
dec
sti
inc
xlat
stos
mov
sub
mov
fisttpl
xor
lock
pop
mov
in
push
stos
imul
adc
inc
jp
inc
jnp,pt
cmp
sbb
jnp
fnstcw
popf
jno
sahf
push
xchg
rcll
or
mov
lods
out
push
cmpb
popf
inc
mov
test
jnp
xor
movsb
mov
dec
push
push
sub
ficoms
lcall
inc
bound
xchg
mov
mov
pop
mov
cmp
or
cs
pop
push
popf
cwtl
sbb
push
and
out
insb
out
pushf
aam
ffree
outsl
xor
push
loope
vpxor
or
rcl
jnp
movsb
pop
test
lret
shll
dec
movsl
test
inc
cmpl
pop
ljmp
mov
mov
cmpsb
xlat
fdivl
inc
and
mov
testb
cmp
std
js
out
inc
cltd
mov
cs
and
cltd
add
test
mov
pop
es
cmp
mov
pop
inc
call
in
jb
and
and
sbb
add
xchg
out
psllq
jo
add
rorl
push
xchg
push
sub
adc
ds
push
adc
cs
outsl
and
int3
mov
andl
jno
mov
and
movsl
leave
jnp
push
jp
and
jmp
mov
out
mov
push
mov
jle
inc
lret
mov
mov
inc
pop
testl
pop
push
clc
loop
xchg
insb
aas
lret
jmp
mov
loopne
cs
push
dec
icebp
cmp
adc
sub
push
sub
pusha
cmp
jno
xchg
sbb
bound
bnd
stc
push
inc
inc
inc
push
pop
dec
ss
pop
cs
outsl
push
ret
jp
xchg
sbb
cmp
push
sub
push
ljmp
shrd
inc
lret
aas
icebp
shll
jbe
adc
imul
out
xchg
arpl
sbb
inc
mov
in
xor
or
pop
xor
mov
ret
push
jg
lods
popa
movsb
pop
iret
xor
js
push
out
or
xor
add
add
jne
mov
and
enter
mov
jecxz
fidivrl
jecxz
mov
pop
enter
jl
jno
lock
jmp
add
dec
repnz
cmpsl
loope
nop
imul
mov
and
add
xor
xor
orl
stc
outsl
fnstcw
je
xor
push
roll
scas
stos
add
xchg
push
push
dec
mov
or
mov
sub
mov
ror
or
push
fucom
adc
out
popa
js
pop
lret
mov
lret
push
jl
jae
mov
xor
mov
jp
adc
xchg
jmp
or
push
add
loope
in
add
jns
pop
call
js
mull
push
nop
adc
jo
pop
and
pop
cs
out
enter
pop
shll
mov
pop
jbe
loopne
fiaddl
call
adc
mov
xor
mulb
pop
mov
pop
sub
in
cmpsl
sub
pop
and
in
jo
push
cltd
test
gs
mov
push
push
cs
mov
inc
xor
push
dec
xchg
fidivrs
scas
adc
mov
mov
push
pop
fst
jmp
jmp
lret
cmpsb
or
push
out
adc
adc
loop
lods
jl
adc
stos
mov
mov
sub
push
sub
sub
insb
es
call
in
repnz
pushf
xchg
push
cmpb
out
or
fldcw
dec
mov
aaa
mov
push
test
mov
push
add
lods
popf
cmc
sahf
jp
mov
mov
add
cltd
mov
sahf
cli
push
dec
cld
mov
std
mov
roll
mov
jbe
mull
dec
add
mov
sahf
ss
dec
or
push
mov
popa
into
mov
pushf
xchg
mov
push
inc
cmp
jns
pop
mov
stos
repz
fdivr
push
push
call
inc
jne
sub
adc
add
lods
add
aas
mov
push
movl
es
test
mov
addr16
jns
nop
xchg
sbb
or
mov
sti
add
daa
mov
xchg
inc
inc
and
out
adc
lahf
leave
mov
pop
leave
add
cmp
cli
addb
lock
mov
xchg
cli
mov
dec
or
mov
stos
sbb
icebp
movsb
insb
cld
repz
push
push
or
into
xchg
and
dec
xor
scas
xchg
sub
ret
fmul
xor
ja
je
test
pop
lea
lods
addr16
jnp
bound
loop
pop
in
or
mov
push
adc
and
jmp
fwait
adc
push
lcall
add
sub
lcall
cmp
push
pop
xchg
cmp
xchg
push
jg
movsb
fistpl
iret
sbb
sub
or
mov
xor
adc
ret
in
xor
mov
outsb
std
mov
xor
insl
lock
pusha
in
lds
push
cmp
push
xchg
mov
data16
cmp
loope
std
test
sub
xor
mov
fcoml
xchg
sub
cwtl
mov
ss
cmp
or
data16
js
mov
lds
aaa
notb
sbb
and
fwait
mov
les
rcr
into
mov
int3
sbb
sarb
jns
lods
in
fildl
fstps
jg
insb
sbb
lret
adc
mov
jmp
dec
es
scas
pop
shlb
push
sbb
adc
loop
or
fadds
mov
inc
test
or
sti
jnp
dec
and
push
scas
jb
xlat
dec
shll
pusha
ss
xlat
add
xchg
sub
cs
mov
pop
or
and
pop
sahf
mov
add
lods
fisubl
xchg
lret
fiaddl
lcall
nop
fists
orl
stos
repnz
sbb
repz
loop
cli
outsb
mov
add
pop
fnstsw
add
and
jns
insl
andl
inc
or
int
jl
mov
pop
and
fs
test
out
jecxz
mov
outsb
cmpxchg
adc
or
pop
stos
jb
or
adc
shrb
jg
jae
cli
pop
xchg
adc
in
loope
inc
shll
cmp
je
xorb
adc
loopne
and
xchg
imul
aam
fs
cwtl
mov
lock
push
jno
jns
jnp
jp
lret
loop
nop
sub
test
xchg
xor
cmp
in
jg
pop
das
insl
jle
nop
push
mov
mov
xchg
or
jge
rclb
loop
mov
xor
xchg
mov
mov
inc
imull
shlb
hlt
outsl
lret
pop
cmpsl
mov
mov
or
jle
fucom
lods
push
mov
das
les
jo
jge
inc
ja
mov
out
cmp
jge
dec
mov
adc
sbb
xor
add
xlat
ja
mov
xor
lods
aaa
test
xor
cld
or
mov
repnz
cld
movsb
and
add
push
inc
mov
sbbl
pop
sub
mov
imul
es
inc
push
add
mov
sbb
ss
push
mov
xchg
js
shr
lea
add
popf
push
push
cli
incl
int
and
sbb
xor
pop
fistpl
mov
pusha
repz
xchg
mov
aad
gs
out
jmp
fcoms
mov
mov
push
clc
dec
mov
cmp
ljmp
and
push
out
adc
mov
in
cli
push
xchg
or
lcall
mull
hlt
outsb
test
mov
mov
das
push
mov
xchg
cmp
neg
fwait
mov
sub
loope
sub
mov
mov
pop
mov
add
lcall
out
or
pushf
xchg
jle
or
and
imul
mov
int3
sti
nop
dec
inc
in
outsb
mov
pusha
mov
dec
fisttpll
roll
mov
aas
add
fyl2x
call
dec
jnp
pop
stc
push
sbb
fmul
xor
ja
jg
les
jecxz
scas
and
ja
ret
adc
imul
dec
mov
popf
gs
jne
push
out
dec
nop
les
xor
cmpsb
cmp
movsb
xlat
pop
jne
adc
testl
mov
add
aad
sub
adc
sub
nop
repz
cld
xor
mov
add
je
and
xor
mov
test
push
mov
shrb
pop
daa
add
inc
inc
sahf
add
cmp
xchg
and
mov
add
jno
clc
adc
xor
test
ret
jo
out
cmp
xchg
push
dec
adc
test
call
inc
ret
mov
fistps
repz
shlb
test
cmp
xor
lret
lcall
aaa
xor
jecxz
mov
pop
and
popa
inc
mov
mul
icebp
imul
cmpsb
out
lods
mov
stos
pushf
push
mov
lret
lret
daa
sub
int
jne
pop
add
jg
mov
jo
dec
enter
enter
or
jmp
cmp
rolb
push
push
dec
es
mov
enter
jns
sbb
pusha
adc
push
inc
dec
xchg
pushf
in
cwtl
aad
sub
adc
mov
pop
inc
dec
out
mov
into
stos
add
rclb
les
stos
sahf
pop
jecxz
jnp
jg
jno
dec
lahf
dec
jno
pop
call
adc
cmpsl
xchg
incl
mov
lcall
cmpsl
mov
lea
test
std
mov
inc
and
movsb
add
data16
dec
popf
push
loope
adc
adc
push
ss
insl
std
and
xor
add
outsb
mov
orb
ret
or
arpl
mov
movsb
stos
aad
lds
in
lahf
mov
ret
ljmp
sbb
add
sti
cmp
pop
aas
push
inc
fildll
addr16
lahf
and
in
cmp
adc
daa
jns
jns
test
mov
push
add
xchg
add
pop
aam
and
call
int
fcomps
fdivr
fisttpll
mov
mov
xlat
cmp
inc
adc
inc
leave
push
ljmp
sbb
fdivs
sub
js
push
ret
push
leave
cwtl
cli
daa
scas
leave
lret
into
int3
jno
loopne
mov
mov
nop
xchg
and
mov
es
rcr
or
inc
aaa
into
cmp
lock
inc
fidivrs
fldt
mov
adc
sarb
push
dec
idivb
jne
add
daa
sbb
jle
cld
cli
fs
sub
xchg
nop
cmp
add
sbb
or
cmpsb
sub
push
ss
outsl
sbb
in
popf
in
sete
jg
in
stos
sub
loop,pn
sbb
jecxz
push
cltd
or
mov
rcrb
xor
out
jae
cs
outsl
xorl
mov
scas
lahf
icebp
adc
push
shr
insb
aad
sahf
ret
cwtl
movsl
imul
xor
mul
int
test
fisubrs
push
ljmp
jl
int
xor
and
out
addb
cmp
leave
push
faddl
xor
jge
push
mov
in
pusha
or
inc
iret
das
test
into
test
fbstp
sahf
push
les
adc
sub
cltd
push
aad
push
hlt
dec
call
xchg
sub
jecxz
iret
ds
js
mov
dec
mov
scas
cmpsl
pop
and
jae
jge
test
pop
lods
pop
jecxz
je
gs
sub
push
dec
in
mov
out
lods
pop
ficoml
mov
mov
lahf
imul
sub
jns
imul
imul
xchg
adc
ss
jo
xchg
ficompl
jae
pop
adc
sbb
cmp
shr
movsl
pop
mov
jae
iret
pop
cmp
mull
and
cli
cmc
sbb
iret
arpl
pop
lcall
add
sbb
in
or
lods
je
or
add
jb
push
into
outsl
es
out
imul
imul
mov
dec
xor
jge
mov
and
fwait
and
repnz
adcb
int3
ss
lahf
mov
mov
les
mov
in
test
xchg
pop
pop
pop
mov
inc
mov
add
pop
lret
dec
popa
int
fxch
lret
mov
jmp
call
mov
or
sbb
push
pusha
adc
sbb
pop
ljmp
jg
icebp
lods
and
test
les
sbb
sbb
xor
sub
bound
jg
mov
sbbl
mov
mov
das
pop
jg
ja
xor
cmp
inc
pop
popa
pop
inc
addr16
inc
mov
pop
in
dec
into
mov
loop
sbb
and
out
or
inc
sub
lahf
rcpps
pop
mov
ljmp
sub
adc
add
mov
and
push
xchg
orb
xor
pop
int3
dec
mov
ss
dec
jae
movsb
rcrl
lds
mov
mov
insl
dec
xchg
jl
into
lods
jl
pop
mov
pop
xlat
sub
xchg
pop
dec
arpl
popa
push
ret
mov
imul
dec
sbb
sbb
or
hlt
test
outsb
pop
cmp
push
sbb
call
sbb
scas
dec
lret
pop
push
mov
incb
dec
mov
cmp
push
adc
dec
ljmp
adc
imul
sbb
xchg
xor
inc
mov
lods
inc
insl
loopne
pushl
xor
push
loop
inc
xorl
adc
and
push
lret
fldcw
aad
insb
pop
lret
xor
ja
in
mov
mov
mov
rol
test
sbb
leave
mov
fucomip
mov
test
cmp
frstor
stos
enter
insb
xchg
std
push
scas
scas
adc
push
jae
mov
xor
cmp
sar
pop
sbb
clc
addr16
test
mov
rcrl
lods
addps
mov
sbb
cmp
test
lahf
data16
pushf
pop
test
fwait
lret
rclb
fists
addr16
fisubl
lret
xor
mov
sbb
or
cmpl
lods
fadds
dec
enter
jecxz
dec
and
mov
xor
or
int
iret
leave
xlat
jg
xor
data16
jno
sub
lods
sarb
push
pop
and
push
sti
jmp
in
orb
clc
dec
mov
cmpsb
test
jmp
xchg
add
sub
mov
cli
test
jnp
dec
aaa
lock
xchg
pushf
add
cli
test
cwtl
jp
mov
add
mov
fsub
mov
jl
or
inc
and
fildll
inc
jbe
jecxz
in
int3
jns
cmpb
jle
imull
mov
in
addl
test
mov
pop
divb
movsl
leave
push
inc
xlat
mov
jecxz
push
pop
xor
fidivs
pop
rcr
nop
mov
stos
dec
adcl
sbb
fcomps
mov
daa
mov
mov
shrl
mov
subb
leave
icebp
icebp
xchg
gs
call
lret
inc
fisttpll
push
sbb
or
and
push
pop
cmp
pop
popf
or
and
xchg
jecxz
into
cmp
cli
mov
scas
dec
aaa
mov
mov
mov
jae
jmp
shl
enter
pushf
or
sti
ret
pop
icebp
xor
es
xchg
push
push
push
sti
test
out
cmp
cmp
inc
mov
or
out
push
jne
nop
mov
adc
or
lods
in
xchg
or
in
mov
pop
xchg
leave
mov
xor
push
mov
andb
dec
sti
inc
mov
add
stos
mov
call
fwait
push
pop
hlt
mov
nop
jge
mov
notb
cmp
xlat
jp
mov
mov
ja
xchg
sub
bnd
sub
and
ljmp
sbb
inc
les
mov
or
pop
std
aad
inc
imul
cwtl
fisubs
imul
lahf
enter
aam
sbb
push
shlb
pop
sbb
dec
push
pop
lods
pop
notl
xchg
popa
jg
inc
clc
ljmp
inc
xor
inc
pop
scas
enter
jle
pop
pop
xor
pushf
bound
mov
je
adc
sub
xchg
sbb
lock
cmp
xchg
leave
ret
arpl
dec
or
bnd
sbb
int
sub
test
loope
enter
mov
das
lock
loop
adc
or
sbb
mov
dec
sarb
adc
fsubl
dec
stc
nop
in
fmuls
ret
and
hlt
pop
lock
cld
and
mov
dec
fistpl
aas
sub
fs
pop
repz
jecxz
mov
xlat
leave
mov
out
in
fnstsw
mov
movsl
pop
push
jg
ret
pop
pushf
push
inc
mov
add
popf
movsb
xchg
jno
inc
mov
xchg
in
ret
inc
jle
dec
in
out
or
sub
lret
leave
push
fstpl
cld
xor
test
stc
pop
mov
add
xor
adc
and
add
xor
imul
in
mov
sub
fnstsw
cld
mov
adc
cmp
mov
lret
push
jle
fwait
push
ja
jo
andb
dec
ds
ret
mov
scas
cmc
and
loop
out
push
divb
mov
sbb
bnd
sbb
inc
in
mov
or
lcall
std
dec
mov
adc
pop
lds
enter
jnp
sbb
and
adc
xchg
adc
mov
dec
cmpsl
int3
scas
sub
rcl
or
adc
sahf
sbb
pop
and
pop
call
jge
mov
gs
pop
push
pop
outsb
push
cmp
cld
mov
adc
and
xchg
dec
aaa
mov
aam
rclb
stos
fsubrs
push
mov
notb
shrl
mov
scas
loop
push
pop
cmp
fdivrl
in
adc
mov
push
scas
pop
mov
sahf
pushf
shrb
mov
jp
ret
jmp
insl
cld
mov
ffree
mov
mov
and
push
cmc
stc
out
jp
sbb
outsb
mov
lock
fidivs
aad
sub
xchg
mov
sub
mov
or
into
scas
sub
or
or
test
andb
jecxz
addr16
push
jne
mov
addb
aad
mov
orl
mulb
mov
mov
fwait
movsb
jecxz
pushf
jp
push
gs
ljmp
xchg
fs
ret
and
xchg
subl
mov
test
sbb
fimull
js
pop
push
jge
movsl
pop
mov
out
cmp
movups
gs
loopnew
shrb
shr
orl
push
into
jne
xchg
mov
sahf
enter
sbb
sub
ja
push
mov
xor
sub
xor
jl
xchg
jae
sbb
in
push
std
sbb
mov
sbb
lahf
xlat
stos
cmc
add
out
out
mov
jbe
mov
fdivrl
das
inc
push
daa
pop
sbb
fiaddl
or
pop
mov
inc
fcoml
enter
inc
sub
rclb
out
ss
addl
scas
or
jl
jne
jl
xor
push
jnp
pop
fstpl
inc
sbb
dec
sbb
mov
sbb
cwtl
inc
test
ss
scas
fimull
out
into
inc
mov
js
cmp
mov
and
ret
clc
xchg
sbb
add
mov
and
jno
imul
daa
mov
cltd
imul
inc
push
aad
bound
mov
in
pop
cmc
push
mov
cltd
jmp
mov
mov
aam
mov
mov
aas
daa
push
or
xchg
stc
lahf
mov
lret
ficompl
and
imul
out
gs
out
cli
mov
add
pusha
lock
rcl
in
xor
mov
fldcw
or
push
cmp
pop
jno
mov
popl
lods
push
mov
xchg
and
sub
cltd
pop
add
jno
and
hlt
and
lods
push
add
xchg
dec
loope
push
mov
jl
out
fcomps
add
adc
mov
jg
je
push
ljmp
cmp
jecxz
cmp
stos
dec
mov
sub
xor
insb
cmp
xchg
daa
adc
and
jg
je
inc
mov
bound
stc
mov
popa
lea
or
sbb
push
lahf
int
adc
adc
push
mov
insb
cwtl
shrl
mov
xchg
faddl
xor
loop
push
inc
cltd
fcompl
mov
push
mov
stos
inc
sbb
bswap
rcrl
xchg
push
inc
leave
negl
imul
les
pop
shll
mov
push
std
and
inc
shll
iret
xor
mov
mov
mov
movsl
sbb
and
ds
jg
stos
leave
xor
dec
int3
pusha
push
loope
lret
imul
js
jecxz
push
pop
add
jno
xchg
add
ficoms
cwtl
add
xchg
jmp
and
arpl
pusha
test
push
jb
inc
xor
subb
or
aam
push
or
scas
aam
mov
call
dec
xchg
cmp
xorl
mov
lcall
sbb
push
push
cmp
xchg
sub
add
xor
xor
divb
mov
adc
mov
push
jmp
dec
mov
aaa
xchg
dec
xchg
cs
adc
cltd
mov
inc
pop
mov
repnz
push
cltd
sub
and
test
xorb
jg
pop
fadd
jmp
push
push
xchg
jne
data16
mov
repnz
aas
xchg
pop
repnz
lahf
cmp
out
js
stos
cmp
punpckhwd
std
xchg
ljmp
xor
mov
leave
xor
inc
outsl
pusha
xchg
out
jns
mov
daa
mov
cmp
inc
jb
push
lcall
cs
call
dec
pop
xchg
aam
mov
jb
jecxz
xchg
jno
mov
inc
sti
movsl
nop
insl
pop
inc
sub
cmp
icebp
dec
jle
cli
sbbb
adc
insl
mov
cs
mov
inc
filds
mov
in
adc
test
adc
mov
in
fsubl
lret
outsb
aas
leave
pop
pop
cmp
scas
in
mov
cmp
and
xchg
mov
sub
sbb
jecxz
out
sti
stos
orb
mov
xchg
in
cmp
mov
jmp
jb
aam
bound
push
test
xchg
mov
jne
sbb
fimuls
ret
jnp
out
es
cwtl
push
in
out
nop
jle
ja
subl
mov
sub
sbb
and
cmp
xchg
xchg
in
les
jg
adcb
jbe
outsl
addr16
add
outsl
cmpsb
out
xchg
sbb
and
rcll
push
dec
inc
or
fsubrl
in
jecxz
add
cwtl
in
stc
or
rcll
iret
lea
mov
add
rcll
js
repnz
outsb
jmp
jo
mov
jne
xor
or
cld
mov
fcom
aad
sub
sub
test
dec
shlb
popa
pop
outsl
mov
or
aad
mov
dec
mov
aaa
aas
dec
cld
mov
rcll
adc
jg
outsl
sub
outsl
hlt
lret
in
inc
xchg
fstl
jp
fadds
aaa
das
loope
pop
push
fs
test
psrld
mov
xchg
sti
inc
ja
dec
lcall
pop
cs
push
out
pop
push
pop
jb
mov
nop
xchg
divb
mov
sub
aad
cmp
inc
and
cmp
ds
ret
lods
xchg
xor
ljmp
pop
add
sbb
sub
jmp
cmp
xchg
les
hlt
rolb
mov
jbe
xor
cld
bound
or
sbbb
les
inc
hlt
pusha
adcl
imul
cli
scas
test
roll
sub
jo
xchg
je
sub
xor
leave
mov
es
pusha
ss
inc
cmpsl
push
scas
push
jb
mov
jmp
pop
pop
scas
jl
jnp
addl
sub
push
xlat
mov
sub
sbb
xor
imul
daa
fwait
addl
or
mov
push
sub
xchg
xchg
lret
mov
cli
pop
cmp
jmp
dec
cmpb
or
pop
imul
and
xor
call
xor
push
sbb
std
das
lahf
pop
cmc
sub
push
mov
inc
pop
cld
adc
jg
add
and
call
or
loop
add
sbb
xor
mov
add
cmpsb
adc
aam
lcall
push
hlt
or
inc
xchg
loopne
push
inc
icebp
scas
loopne
orl
jae
daa
aas
movsl
or
das
roll
xor
out
lcall
lret
test
outsl
stos
repz
push
lahf
sub
sbb
lret
push
std
aad
xchg
sbb
or
inc
inc
shl
icebp
sbb
lahf
cmc
push
pop
mov
cmpsl
pop
xchg
mov
jle
pop
xor
popa
push
adc
sbb
add
push
arpl
add
into
xlat
fdivrp
mov
inc
sbbb
mov
dec
xorl
cmp
and
mov
jnp
cmpl
lret
add
xchg
bound
inc
rorb
imul
xor
out
mov
mov
leave
subl
loop
mov
sub
cltd
pop
mov
int
in
push
push
xor
add
jmp
ja
out
inc
mov
inc
insb
dec
js
movsl
jne
cmpsb
in
xor
cmp
sub
push
pusha
adc
and
push
iret
jle
xlat
fldt
fnclex
shll
insb
add
shr
push
daa
mov
ss
call
out
mov
push
push
outsl
enter
push
bound
sub
add
push
mov
int
sub
aas
lea
xor
sete
sub
push
cmp
subl
mov
push
cmpsb
cmpsb
bound
and
jle
outsl
fists
push
pop
je
xchg
or
imul
push
and
lcall
jle
faddl
das
xchg
ja
xor
pop
jno
repnz
les
inc
push
cmpsb
xchg
fistl
dec
sbb
in
jne
xor
jle
inc
dec
jle
cmp
dec
inc
in
adc
jmp
fmul
push
imul
jo
int3
xchg
or
shrl
cmp
mov
leave
xchg
sbb
adcb
neg
setl
stos
jp
mov
adc
cmp
in
push
cmpl
les
jecxz
lahf
push
sub
jge
adcl
mov
sub
xchg
jae
ficomps
push
push
je
test
cmp
in
xchg
mov
cld
mov
nop
inc
sahf
dec
mov
inc
repnz
or
inc
add
clc
fdivs
in
dec
push
inc
bound
shrl
inc
pop
das
call
ljmp
test
repz
lcall
ss
icebp
xor
out
inc
bound
mov
mov
dec
and
cltd
jmp
inc
pop
and
sbb
call
push
dec
loopne
mov
hlt
inc
cmpl
sti
fsubrs
movsb
pop
faddp
jo
rorl
out
sbb
adc
cmp
add
xchg
sbb
stc
lods
sarl
mov
mov
lret
add
dec
mov
mov
fsubs
stos
or
je
popa
lock
popf
mov
lds
lds
sub
cmp
aad
and
leave
push
and
movsb
int3
cmp
push
imul
jb
dec
shrl
dec
add
jne
testl
shr
mov
lds
aaa
dec
mov
mov
jl
ficomps
std
mov
insl
push
pop
push
and
mov
mov
fwait
and
es
jmp
inc
pushf
dec
push
push
andl
sbbl
inc
je
adc
add
in
jo
push
xchg
cmp
xchg
mov
lds
fldt
je
sub
pop
outsb
shll
mov
cmp
sti
cmpsb
es
scas
pop
fdivrs
sub
inc
in
mov
adc
dec
lods
repnz
in
sub
rcrb
jmp
gs
sbb
dec
jae
or
in
xchg
xchg
mov
aad
xchg
aas
das
xor
inc
jge
dec
mov
dec
popa
mov
push
jp
rcrb
push
mov
icebp
in
insb
mov
hlt
or
ds
or
pop
out
aad
or
dec
push
sub
shlb
inc
stos
xor
xchg
mov
mov
pop
inc
sbb
repnz
pop
lea
aaa
push
cmpsl
jno
insl
test
lods
addl
shlb
xor
jle
xchg
push
es
gs
adc
add
mov
push
in
xor
movsl
xchg
sbb
das
cmp
call
mov
jmp
sti
dec
mov
xor
movsl
mov
mov
cli
loope
not
lods
test
adc
xchg
repz
dec
cli
cmp
jge
push
dec
mov
dec
sub
inc
adc
adc
icebp
bound
inc
stos
and
dec
das
xchg
dec
popa
mov
xor
mov
mov
pop
addr16
aam
movb
aaa
pop
rorl
pcmpgtw
xor
inc
movsb
clc
in
xchg
cwtl
sub
shrb
add
push
data16
inc
cwtl
jne
fcmovbe
inc
mov
les
mov
adc
mov
lcall
out
mov
das
aaa
fsubrs
popf
test
xchg
xchg
retw
rcl
sub
scas
pop
sbb
cwtl
mov
dec
add
sub
fistl
inc
and
push
push
add
pusha
adc
icebp
mov
js
sub
add
in
cmp
cmp
push
lods
sbb
in
lods
cmp
fsubrs
ja
xor
cmp
mov
lcall
sti
clc
aam
dec
mov
sub
push
pop
push
test
mov
pop
push
mov
jo
rcrl
push
in
dec
mov
cwtl
add
sbb
mov
push
adc
and
xchg
lcall
fidivl
cltd
add
out
pushf
mov
xchg
xchg
mov
test
mov
push
cld
imul
addr16
loopne
sbb
sbb
push
dec
xchg
roll
xchg
mov
jb
pushf
jae
lret
mov
mov
inc
les
pusha
jns
add
in
and
std
stc
push
lea
fisttpll
cwtl
xor
popa
addr16
xor
add
add
xchg
scas
outsl
faddp
popa
inc
mov
pusha
mov
mov
xorl
pusha
dec
rcll
and
adc
call
mov
std
data16
aam
aad
xchg
aas
sub
cs
push
and
mov
icebp
js
outsb
mov
xchg
scas
mov
xor
mov
adc
out
test
sar
loope
push
out
ret
iret
daa
jecxz
adc
test
inc
in
test
dec
mov
mov
add
xor
xor
cmc
les
mov
int
test
imul
pop
jle
and
mov
into
xchg
adc
and
jp
test
negl
test
clc
dec
cmc
addr16
jp
pusha
subb
adc
out
shll
fwait
push
xchg
mov
cs
mov
mov
fcomp
test
push
lcall
cltd
push
lea
popf
push
mov
pop
aas
inc
shlb
jae
sub
inc
sbb
push
and
dec
adc
dec
lods
in
repz
jp
jg
lahf
mov
push
idiv
pop
popf
inc
test
mov
test
push
nop
jecxz
push
and
out
out
sub
sub
sub
adc
mov
dec
ret
jp
out
cmp
mov
or
cwtl
sbb
lret
fmul
xor
cmp
jmp
xor
cmpsl
shl
mov
cmpb
ret
inc
cmp
int3
jle
jbe
inc
popf
inc
outsl
add
cmp
mov
movsb
std
push
or
mov
sbb
pop
lret
repz
lods
cmp
mov
pusha
or
jecxz
dec
cmpb
pop
jp
sub
ljmp
sbb
je
int
bound
inc
mov
jecxz
adc
leave
inc
ds
inc
mov
sarb
movsb
mov
leave
mov
cwtl
jne
cwtl
sbb
and
jecxz
and
sub
imul
test
mov
sbb
imul
inc
fimull
xchg
gs
stc
clc
adc
fwait
repnz
jg
hlt
loopne
stos
out
subb
push
dec
xlat
lea
and
repz
mov
es
in
cmp
data16
lods
inc
pop
ds
les
dec
pop
xor
jge
imul
and
stos
popf
xor
sbb
mov
mov
hlt
int3
pushl
loope
cltd
imul
mov
lods
add
insb
mov
jns
popf
adc
movsb
jno
jge
add
imul
stos
daa
or
xchg
scas
push
ltr
jae
in
ds
inc
sub
dec
xor
out
xor
cltd
jl
mov
cmp
test
cmp
and
jno
ficoml
jne
pusha
test
fwait
pop
adc
adc
insl
jo
hlt
mov
in
rcrl
inc
adc
mov
dec
inc
or
jo
mov
jno
lods
add
out
push
in
aas
push
push
or
sub
movsl
outsl
push
jo
clc
push
movsb
loopne
push
lret
adc
mov
mov
pop
gs
sbb
movl
lods
sbb
push
sbb
lret
rcl
pusha
out
andl
mov
dec
js
push
fsts
xor
sub
sbbl
inc
dec
gs
pop
xlat
xchg
inc
jp
dec
xor
jb
or
push
xor
aad
int3
cmp
cmp
xlat
mov
arpl
jo
sub
sub
push
sarb
push
push
ljmp
pop
mov
ss
add
out
andb
lahf
cld
test
adc
pop
out
mov
bnd
or
in
pop
adc
sti
sub
in
shl
and
leave
sti
stos
push
push
adc
jne
rcll
les
shlb
out
or
pusha
inc
jge
arpl
repnz
popf
mov
xchg
sahf
int3
inc
push
nop
mov
mov
inc
jp
mov
mov
lahf
cmp
cmp
fstpt
imul
mov
dec
mov
lahf
xchg
or
xchg
xchg
xchg
push
popa
add
nop
dec
jae
rcrb
imul
dec
movsb
dec
jg
loopne
repz
adc
pusha
std
xchg
decb
jmp
jnp
ljmp
dec
xchg
and
xorb
enter
sub
test
pushf
adc
pop
pop
push
push
mov
fdivl
dec
call
aam
or
lea
das
inc
and
sbb
push
out
cmp
leave
inc
or
leave
shl
scas
or
out
xor
mov
lds
or
fisubs
out
mov
mov
neg
adc
scas
loope
cmpsb
cwtl
test
push
sub
mov
leave
inc
add
in
mov
inc
and
cld
and
imul
jecxz
adc
popa
out
sahf
sub
jno
dec
repz
xlat
mov
push
int
sbb
in
or
lcall
gs
jge
push
aas
dec
mov
pop
sbb
xchg
add
pushf
jae
inc
mov
mov
xor
cmp
sub
loop
pop
mov
mov
sub
stos
jb
and
or
ret
pushf
dec
subl
cmp
and
jmp
add
push
cmp
mov
scas
js
fwait
push
jp
imul
addb
pusha
push
test
adc
pop
push
fcoml
cmp
and
sbb
fwait
test
call
jb
out
inc
add
mov
or
call
or
dec
xchg
jne
fisubrl
dec
sub
ja
dec
testl
inc
xchg
dec
cld
pop
fdivrp
xchg
outsb
insb
insl
xlat
movsl
dec
cmp
dec
cmpsb
mov
inc
bound
movsl
dec
jno
insl
pop
adc
adc
or
iret
xor
in
roll
out
inc
mov
jl
lret
add
in
or
push
cs
fcomps
jg
mov
and
clc
dec
subb
xchg
scas
adc
push
in
ja
addr16
cmp
dec
fistl
sub
xchg
add
movsb
int
add
adc
push
mov
loop
movb
add
hlt
adc
jae
aam
repnz
mov
in
and
push
dec
pop
enter
mov
lret
mov
sbb
aam
loop
iret
pop
jecxz
mov
add
fs
push
iret
push
iret
inc
mov
out
pop
jg
sti
std
add
cmpsl
sbb
xor
or
xchg
xchg
ds
sbb
inc
in
mov
cmp
lahf
adc
test
jns
hlt
nop
lds
mov
adc
lret
mov
lahf
andl
fldl
jbe
xchg
outsb
mov
fiaddl
adc
or
or
mov
xchg
sbb
dec
and
loopne
lock
xor
cmp
es
and
jo
cmp
jp
and
xor
sub
fmull
dec
jb
xor
cli
add
mov
pop
flds
ss
adc
or
xchg
sub
inc
in
test
xchg
fsub
cmp
aad
fsubrl
stos
shlb
bound
push
cmp
js
push
scas
fnsave
jo
repz
clc
lahf
stos
daa
mov
xor
jae
xlat
ret
cmpsb
lds
aaa
adc
test
jbe
mov
fisttpll
mov
fs
add
in
fidivl
adc
push
pop
adc
ds
les
jp
mov
test
test
filds
jmp
cmp
outsb
js
jge
das
outsl
ljmp
lods
jb
icebp
lea
adc
jp
mov
and
inc
repz
fisttpl
scas
scas
xchg
jmp
dec
cmp
add
pop
aas
in
cmp
xadd
out
mov
add
xchg
jnp
sbb
inc
mov
pop
mov
cmp
pop
in
aad
fisttpll
push
mul
pop
cli
jle,pn
xor
jnp
jl
int3
dec
jg
orb
int
sub
sbb
repnz
jp
mov
xchg
pop
mov
imul
loopne
push
mov
cmp
sbb
push
push
ret
dec
pop
lret
inc
shl
rcrl
fisttpl
mov
leave
rcll
sbb
ja
push
mov
push
pop
xchg
jecxz
push
mov
push
xchg
push
mov
xor
fmulp
pusha
xchg
ficoms
inc
fidivl
or
dec
ror
fs
sub
xchg
mov
sub
out
mov
mov
and
pop
sbb
les
pop
das
and
and
scas
aad
sahf
dec
out
ss
mov
shl
pop
lcall
dec
negb
insb
push
inc
repnz
push
xor
mov
stc
push
push
sbb
into
daa
out
fidivrl
pop
or
pop
adc
jp
rcll
pop
jnp
jecxz
test
mov
dec
xor
jne
out
pop
and
movl
incb
adc
mov
sbb
sahf
insl
mov
arpl
sbb
mov
lahf
fisttpll
int
sbb
mov
lock
push
mov
lret
orb
daa
pop
cmpl
mov
jnp
aaa
fmull
inc
popa
sbb
cmp
jne
mov
mov
pop
adc
cmp
rcrl
cwtl
pop
xchg
jns
repz
cmc
push
fs
rorl
pop
and
insl
dec
jl
icebp
call
or
fiadds
and
pop
test
add
js
adc
ret
jp
xchg
cmp
sub
loop
cmpb
fimuls
add
xchg
ficomps
sub
or
mov
test
popa
xchg
lea
popa
inc
fwait
mov
aas
sbb
pop
je
aam
adc
mov
inc
mov
enter
nop
xchg
movsb
cmp
outsl
stos
in
push
push
add
mov
push
call
loope
add
mov
add
cs
in
push
xchg
pop
sbbb
jg
rorb
jle
jge
sarl
jmp
xor
xchg
das
adc
jbe
scas
call
test
inc
scas
imul
jb
lret
addl
or
ret
push
xor
add
sub
add
rorl
pushf
pusha
push
dec
xchg
pop
rclb
mov
cmp
in
sbb
dec
mov
aas
stos
movsb
loopne
sbb
adc
jecxz
daa
roll
test
lods
andb
icebp
test
add
push
aaa
sub
dec
jp
imul
adc
jae
cmpl
das
data16
cmp
sub
out
pusha
adcb
popf
js
adc
test
test
xchg
push
mov
sbb
cmc
mov
and
gs
jb
pop
repz
aas
in
sub
xchg
in
fisttpll
loopne
sub
mov
pop
mov
mov
jle
test
call
imul
push
fwait
xor
es
mov
push
enter
sbb
sbb
sub
dec
out
arpl
outsl
add
sbb
xchg
arpl
in
lea
mov
and
cli
pop
jae
jns
inc
sub
fiaddl
xchg
lahf
dec
mov
lods
pop
loop
cli
cmp
clc
rcl
lods
movsb
pop
les
int
inc
clc
push
push
add
lock
adc
lea
jecxz
mov
sub
adc
mov
sbb
lock
sub
mov
sub
fcompl
out
inc
ja
repnz
stc
fldt
into
lds
adc
mov
popf
pop
dec
dec
sub
xchg
lcall
in
adc
adc
repnz
push
dec
mov
in
jg
and
mov
out
test
testb
mov
cmc
mov
sub
call
jmpw
add
sbbb
les
jbe
add
mov
mov
mov
mov
dec
pop
inc
dec
and
paddsb
cmp
sub
stos
in
jmp
dec
and
xor
xor
insl
xorb
mov
rol
sbb
mov
xor
es
mov
cmp
dec
mov
push
mov
push
jg
cmpsl
dec
inc
les
fidivl
or
xchg
sub
mov
insl
loopne
or
xor
out
shll
sub
jae
pop
push
push
sbb
loop
in
arpl
insl
and
mov
cmp
mov
mov
jmp
push
ret
mov
mov
dec
ret
pop
enter
jno
out
dec
shrb
leave
jnp
repz
outsl
orl
and
adc
in
clc
daa
outsb
add
aas
pop
out
mov
lods
push
jnp
out
and
ja
test
lret
int
in
test
inc
dec
push
pushf
lods
mov
js
scas
pop
out
pop
jb
adc
lds
and
in
add
sahf
sub
mov
mov
movsb
fs
fidivrs
push
inc
jge
push
cmp
cmp
adc
xor
add
bound
lds
inc
ds
cmp
mov
mov
icebp
push
sub
stos
push
dec
xchg
flds
sahf
sbb
push
xchg
call
adcb
punpckldq
cmc
adc
mov
ds
mov
insl
xor
pop
push
xor
xor
js
adc
enter
add
jno
dec
ja
out
push
shlb
mov
sahf
leave
dec
aam
cmp
mov
sbbl
push
fimuls
sbb
popf
jae
nopl
data16
icebp
aaa
mov
lds
cmpsb
sub
or
shrl
out
sbb
sbb
repnz
push
push
jp
lahf
subb
push
sub
mov
test
xchg
and
in
cmp
sti
mov
xchg
jmp
inc
xor
fstpl
mov
sbb
daa
lods
lock
push
mov
push
jb
cli
in
ljmp
push
fcmovbe
pushf
outsb
inc
xchg
pop
mov
out
movsb
sarl
daa
jne
icebp
and
adc
lods
inc
mov
mov
shl
fwait
outsl
dec
into
sbb
loop
pop
sub
cmp
add
fsubrs
lcall
inc
xor
xor
in
xchg
pand
mov
mov
repz
shlb
fdivl
jae
int3
sbb
mov
cmp
test
dec
pop
mov
call
leave
test
dec
loop
into
pop
out
and
int
jo
jg
movsb
divl
data16
sub
iret
push
fs
ss
mov
ret
cwtl
in
inc
arpl
fnstsw
jo
jg
bound
push
adc
sub
jmp
in
nop
inc
mov
add
sub
pop
pop
test
push
push
stos
mov
inc
sti
sahf
int
adc
lods
xchg
insb
add
sub
fbstp
mov
lock
push
and
adc
movsb
ffreep
sbb
or
inc
inc
sarb
mov
xchg
bound
xlat
cld
dec
push
call
dec
out
push
je
sbb
mov
fsubs
sbb
sbb
fwait
push
js
add
sbb
pop
int3
outsl
shll
scas
pusha
jge
mov
cwtl
jle
aas
cmp
xor
mov
lock
ret
jmp
or
mov
rolb
dec
std
xor
call
add
js
sbbb
sahf
das
insb
adc
orl
sub
pop
cmpb
les
sbb
div
ss
add
outsb
frndint
shll
adc
lret
ss
jmp
pop
out
and
mov
cmc
push
inc
idiv
add
cli
jl
xor
xorl
lods
cmpsl
dec
pop
xor
std
lock
dec
in
add
add
mov
fldenv
lahf
jo
movsl
clc
adc
stc
adc
std
adc
dec
or
push
adc
pop
test
or
sbb
popf
push
push
in
leave
push
popf
push
sbb
arpl
iret
fcomp
sbb
jbe
in
cmp
es
dec
inc
ja
xlat
cmc
cmp
lods
pusha
outsl
pop
sbb
in
push
cld
jno
je
addr16
jnp
loop
xchg
mov
test
adc
xor
xor
adc
imul
pop
push
repnz
mov
aas
js
ja
std
push
jo
xor
fcoms
out
ljmp
sub
ljmp
gs
pop
je
add
stc
sub
sub
sti
push
or
xchg
int
mov
cmp
xchg
aad
aad
sbb
daa
sub
cmp
xchg
bound
jbe
scas
pop
cmp
and
jl
mov
or
std
xor
cmp
and
in
sbb
push
mov
movsb
cmp
sbb
loopne
push
rolb
lock
cmp
ljmp
mov
mov
jmp
dec
jge
dec
sbb
dec
cmp
mov
jns
lods
loop
pop
xchg
dec
jbe
mov
test
les
mov
insb
pop
iret
xor
sarb
cmp
xor
push
enter
lcall
mov
arpl
inc
sbb
fdiv
lds
divb
repz
ljmp
ror
lods
mov
aas
adc
xchg
loopne
mov
adc
aas
mov
imul
xor
push
iret
or
adc
fiaddl
mov
sbb
push
clc
and
popf
adc
cs
push
dec
xchg
sub
cmp
or
stos
xor
dec
sub
loopne
lahf
dec
fwait
mov
inc
or
hlt
jl
je
pop
es
stos
sub
add
mov
sbb
push
add
ror
cmp
xchg
dec
mov
std
mov
scas
cmp
jb
pop
cmpb
aas
es
or
test
fwait
mov
insb
fstps
lret
addr16
inc
aaa
lock
dec
mov
int3
arpl
daa
scas
jo
xchg
jnp
xorb
popf
repnz
hlt
das
movsb
xchg
xor
into
cld
cltd
out
cli
push
call
sbb
ja
xchg
fwait
sbb
adc
push
pop
mov
fsubrs
push
adc
mov
sub
xchg
ret
jecxz
pop
fwait
pop
mov
jno
imul
mov
pop
inc
dec
adc
mov
mov
push
repnz
jne
movsb
pushf
xchg
shll
pusha
adc
es
lret
movsb
cmc
xchg
jnp
jg
ret
cmp
pop
ficoml
iret
roll
dec
or
test
lea
aad
repnz
neg
adc
mov
sub
mov
loop
sub
and
test
xor
xchg
adc
jnp
cld
push
test
dec
fmull
add
jnp
loop
dec
jno
inc
mov
or
fimull
imul
ja
loopne
dec
jl
inc
hlt
es
bnd
xlat
or
pop
outsl
adcl
insl
inc
sub
fists
mov
test
mov
sbb
mov
mov
leave
lret
cmpb
mov
mov
jae
insl
addr16
mov
aad
es
push
push
mov
sahf
or
pop
sub
mov
cli
jecxz
push
fs
xchg
mov
cmp
aad
push
shlb
xchg
ss
mov
sub
push
mov
arpl
or
xchg
js
mov
imul
mov
data16
stc
lcall
jecxz
imulb
outsb
ljmp
iret
sti
push
mov
xchg
icebp
notb
cmp
fsub
jo
lock
lret
imul
test
cmpl
sub
pop
pusha
jne
divl
sbb
push
mov
shlb
shll
lret
loopne
mov
or
mov
push
loop
iret
mov
js
pop
shlb
sahf
movsl
lahf
fists
jecxz
jp
mov
or
jno
lock
outsb
fimull
ret
jnp
in
mov
mov
je
push
sar
ljmp
jle
inc
sub
fistps
jne
inc
outsb
jbe
jmp
mov
inc
loopne
test
out
js
pop
push
decl
cmpsb
cwtl
dec
pop
and
fsubl
ds
inc
inc
inc
fcmovnbe
jle
dec
mov
and
fdiv
mov
ss
mov
shll
cmp
adc
cmpsl
pop
sub
adc
mov
push
imul
sub
and
das
and
push
jns
cmp
inc
insl
xchg
jno
inc
cltd
push
std
pop
sbb
icebp
insl
sub
int3
lret
add
test
jecxz
pop
lods
jb
mov
cmp
sbb
enter
out
pop
loope
imul
loopne
in
sub
out
int
mov
iret
sbbb
inc
jle
jecxz
jmp
out
pop
nop
pusha
jo
push
cmc
xchg
mov
test
shlb
sbb
dec
lcall
inc
aas
jne
xchg
jo
xor
pop
sbb
push
je
nop
fsubr
pop
mov
pushf
mov
bound
jg
adc
mov
mov
xchg
sbb
js
imul
sub
adc
sbb
repnz
jle
mov
mov
adc
inc
jo
cs
call
arpl
or
jae
jb
xor
fs
cs
or
sbb
dec
mov
lea
dec
add
daa
sbb
adc
sub
clc
xor
xchg
fwait
nop
jo
gs
cmp
mov
mov
jb
cmp
push
mov
pop
out
shr
fs
mov
faddp
jmp
jmp
cs
roll
jno
mov
mov
cltd
jbe
mov
mov
mov
shrb
mov
adc
and
mov
lock
mov
in
outsl
rclb
push
jge
mov
jne
fwait
mov
mov
dec
not
or
adc
leave
ds
bound
or
or
jno
dec
int
mov
movsl
enter
clc
inc
lcall
rorl
xchg
js
lahf
jne
cmpl
lahf
adc
pop
inc
mov
imul
int
jl
mov
sbb
dec
loop
ds
inc
pop
pop
dec
sbb
fdivrl
out
cmp
jl
out
dec
test
jnp
fwait
dec
and
add
sub
or
rcl
push
add
int3
xchg
les
add
scas
cli
daa
mov
mov
les
mov
ja
cmpl
push
mov
popf
sub
or
loope
xchg
jno
repnz
test
imul
das
arpl
xchg
movsl
mov
xchg
cltd
pop
pop
xchg
mov
call
mov
mov
leave
jno
hlt
dec
rclb
mov
lret
cmpb
call
loop
adc
xor
testb
mov
out
jb
gs
clc
ljmp
mov
mov
into
pop
nop
pop
popf
add
jge
les
imul
push
inc
fs
sub
push
js
neg
inc
jge
pop
ret
add
inc
repz
repz
push
mov
dec
cs
call
gs
pop
lea
jno
out
pushf
fistpl
inc
cmpsl
testl
pusha
jmp
jbe
push
jae
xor
test
loop
ficomps
fcmovnb
or
out
dec
xchg
ret
inc
insb
or
jno
std
rcll
rorl
or
aas
outsl
inc
or
dec
dec
data16
mov
pushf
out
aad
sti
xchg
lds
mov
ja
inc
cmc
rorl
outsl
dec
je
push
cwtl
jae
mov
jge
mov
test
mov
rorl
xlat
dec
sbb
or
packssdw
pop
lods
out
pop
std
je
dec
xchg
push
fcmovnb
repnz
dec
fs
rol
js
xor
cmpsb
inc
data16
cmc
pop
pop
pusha
push
outsb
xchg
sub
shl
out
push
dec
fisttps
cmp
push
icebp
in
sub
inc
xlat
inc
fdivr
fwait
xor
nop
subl
inc
sbbl
fnsave
jl
jl
loopne
and
testb
outsb
mov
pop
nop
inc
mov
sarl
xchg
xorl
sbb
je
cmpsl
popa
xchg
dec
sub
in
movsb
sbb
sbb
std
push
in
mov
cmp
add
aam
popa
lds
xchg
inc
icebp
xchg
xchg
int
inc
push
pop
int
lahf
je
leave
xchg
mov
xchg
mov
test
rcll
int3
test
adc
fcom
adc
imul
xor
cmpsb
jge
sub
add
pop
push
enter
mov
das
inc
xchg
sub
fs
nop
fbld
mov
lret
mov
in
pop
lcall
jmp
lea
sbb
lods
xor
mov
push
mov
pop
sahf
push
or
sbb
xor
test
jb
mov
xor
incb
push
es
pushf
cli
adc
mov
inc
in
ljmp
and
cmp
dec
repz
shll
cmovno
js
xchg
stos
adcb
scas
push
push
mov
push
lock
inc
negl
dec
lret
lea
incl
jle
notb
pop
adc
lcall
jns
cmpsl
push
push
adc
xor
sti
xor
rclb
xchg
mov
les
jle
mov
xchg
ret
aas
mov
cmp
aam
lds
adc
in
xchg
mov
xchg
jae
inc
daa
and
jge
lret
loope
enter
and
iret
ret
mov
ljmp
loopne
incb
dec
sbb
inc
mov
or
je
jge
mov
xchg
cltd
loope
in
pop
pop
mov
inc
loopne
fildll
mov
cmpb
xchg
jo
adc
push
cmp
fidivs
push
push
xor
fnstcw
and
mov
xchg
stos
inc
cmp
push
mov
mov
setl
loope
ds
or
cwtl
push
cmpsl
jns
into
imul
adcl
mov
enter
jp
dec
mov
ret
cmp
jecxz
dec
push
idiv
add
cmp
push
into
lahf
aad
cmpsb
popa
mov
out
rol
lods
jl
adc
push
movsb
dec
add
nop
add
lret
jge
push
mov
sub
loopne
jmp
mov
shl
inc
les
xchg
cmp
push
and
jbe
mov
es
mov
lahf
sbbl
adc
jbe
mov
inc
mov
mov
les
je
aad
sbb
aam
cmpsl
xor
call
cmp
ljmp
jno
fwait
and
pop
mov
scas
mov
xor
jbe
sub
mov
jne
inc
push
cmpsb
lock
fnstsw
in
sbb
sbb
loopne
in
sbb
cs
mov
into
popa
mov
out
outsl
lret
cs
outsl
or
mov
stos
das
icebp
jmp
inc
cwtl
xchg
shrl
mov
xor
nop
jecxz
jecxz
and
pop
dec
in
pusha
jle
enter
or
push
jmp
not
lods
cwtl
out
int3
mov
ret
mov
and
ss
mov
fisubs
mov
push
clc
adcl
or
cmp
jne
pop
and
push
repz
inc
jb
mov
push
cld
lcall
rcrb
addb
dec
int
lahf
jb
rcrl
cld
xchg
jmp
mov
loope
dec
andb
test
dec
dec
fmuls
into
std
push
xchg
jg
mov
jbe
leave
mov
jle
std
lret
sub
mov
lret
sti
adc
add
pop
cli
fnstsw
fbstp
pop
cmp
mov
aas
addr16
ret
stos
pop
adc
and
bound
fwait
add
aas
sbb
mov
push
fwait
push
movsl
leave
dec
xchg
int3
mov
mov
sbb
xchg
mov
xchg
jb
insl
mov
enter
imul
lret
and
loop
sahf
aas
push
dec
mov
into
cmp
popf
inc
and
add
testl
and
in
cli
inc
cmpsl
xchg
and
fsubrs
push
movsb
pop
mov
add
out
sub
cmpsl
popf
jns
jno
fmull
hlt
pop
outsb
mov
dec
or
pop
pop
xor
fisubrl
mov
inc
repnz
psubb
jae
adc
je
stos
insl
fs
sbb
or
out
rclb
push
lock
in
mov
cmpsl
adc
mov
outsl
ds
sbb
paddb
dec
mov
cmp
xlat
addr16
arpl
pop
push
mov
mov
ret
aas
lock
fs
movsb
jle,pn
imul
inc
dec
mov
cwtl
movsl
add
adc
xchg
push
mov
call
jb
inc
loop
mov
push
sbb
int3
pop
repnz
adc
add
sub
call
fisttps
push
add
sysexit
add
pop
inc
filds
enter
jne
aas
in
lock
mov
ret
fistpl
adc
pop
and
mov
cmp
xchg
aam
xchg
aam
jae
ret
xor
fld
mov
inc
sub
je
dec
jmp
xlat
sti
add
adc
outsl
xor
dec
adc
jbe
data16
xchg
orb
pop
imul
scas
xor
in
xchg
fadd
lahf
imul
add
pushf
imull
aas
test
pop
sub
mov
in
int3
je
dec
add
fimull
jl
mov
rolb
mov
in
pop
enter
pop
loopne
mov
pop
sbb
ror
call
bound
ljmp
cli
testl
mov
das
lds
push
mov
popf
mov
fs
jns
or
sub
movsb
clc
rcll
sarl
inc
mov
das
ret
fiadds
mov
roll
or
pop
push
lcall
pop
adc
cmp
pop
cmc
add
decb
sbb
shl
pop
data16
push
stos
test
aam
movsl
adc
mov
dec
fistps
jmp
daa
adc
xor
jnp
add
xchg
sbb
xor
lods
push
xchg
and
fiaddl
dec
div
mov
mov
inc
mov
pop
gs
pushf
mov
dec
out
fisttpll
hlt
push
stc
jbe
aad
fstpl
int3
lock
jns
mov
adc
std
xlat
dec
jo
xchg
xchg
inc
sar
mov
popa
dec
shrl
shrl
mov
pushf
aas
stos
es
loopne
lods
push
xchg
jg
flds
jge
sub
clc
out
sbb
pop
jg
iret
or
fdivr
insb
push
test
push
dec
sti
mov
cmp
and
add
cmp
outsb
mov
xor
add
pop
mov
xchg
imul
repz
inc
enter
insl
aas
outsl
sub
fwait
stc
shlb
sti
out
jg
mov
repnz
push
cld
sarl
rcll
addb
add
out
inc
cwtl
mov
sti
inc
test
pop
xchg
lret
insl
xor
jns
pop
lods
sub
jbe
xor
out
push
jnp
add
xor
sbb
mov
shll
mov
sub
mov
lock
push
push
es
mov
dec
nop
sbb
mov
outsb
push
inc
pop
movsb
inc
or
jb
xchg
inc
mov
repnz
jns
xchg
dec
xor
stos
xor
add
adc
jbe
shrb
fs
in
push
pop
adc
xor
inc
in
insb
add
ret
mov
sub
mov
emms
cmp
test
push
sbb
ds
cmp
sub
rorl
push
jmp
xchg
arpl
repnz
ss
adc
sub
sub
popa
cmp
and
ret
mov
dec
adc
mov
pop
rcrl
dec
lods
jnp
scas
in
subb
add
cmp
outsb
or
aam
push
popf
push
stos
es
cmova
bound
or
out
cwtl
push
imul
in
xchg
imul
call
xor
jno
cmp
lock
push
nop
cld
popf
or
sub
inc
inc
fcoml
push
or
jp
xchg
push
pop
jp
sub
adc
jne
aaa
loopne
adc
xchg
adcb
jae
pop
fadds
jb
and
in
int
or
or
in
dec
ficompl
push
shll
xor
les
out
es
rorl
inc
xchg
repz
pop
mov
and
negl
sub
sarb
pop
xchg
xchg
pop
std
aad
je
or
into
or
and
sarl
dec
and
rcrb
cmc
and
ja
xor
pop
mov
jecxz
push
test
push
mov
xchg
jo
dec
scas
or
xchg
je
rcrl
fcmovnbe
sbb
sub
imul
push
pop
sub
push
sahf
test
repz
test
mov
xchg
dec
sarl
mov
mov
bound
movsl
dec
lret
add
cmp
dec
stos
ds
sub
cld
adc
inc
or
dec
ja
insb
adc
push
in
mov
jecxz
mov
pusha
int3
inc
mov
fdivrs
dec
mov
pop
mov
push
popl
movsl
mov
xchg
xchg
in
push
push
jge
push
xor
xor
cmp
jb
or
pop
sbb
dec
cwtl
or
sub
or
jnp
test
dec
adc
or
movb
or
cmpl
push
int3
mov
popl
mov
pushf
jno
pop
inc
jp
pop
cmpsb
imul
or
push
push
adc
sbb
sbb
jnp
push
push
pop
bound
out
adc
aad
subb
js
cmp
adc
jle
xchg
mov
cltd
mov
sub
xchg
mov
and
test
sbb
aas
out
negb
push
pop
mov
leave
dec
call
aaa
xlat
mov
lret
movsb
xchg
outsl
mov
and
lret
add
and
pop
xchg
hlt
cld
xor
test
mov
fmull
call
shrl
mov
arpl
dec
repz
aas
mov
insb
dec
lods
cli
sbb
xor
scas
repnz
mov
push
cs
in
inc
leave
es
movsl
push
and
add
add
push
out
sti
sahf
call
adc
push
imul
xchg
arpl
and
mov
sbb
outsb
mov
or
xor
xor
pop
jns
lea
ret
adc
out
push
xchg
mov
xor
out
imul
adcl
xchg
notb
mov
pushf
fidivl
cli
mov
stos
fs
push
loopne
outsl
testb
inc
fwait
out
mov
pop
enter
or
movsb
into
sub
fstps
xor
fldt
aaa
xlat
inc
xor
leave
xchg
imul
clc
jne
fldt
pop
lret
push
hlt
mov
mov
cmp
imul
in
mov
push
xchg
and
fnsave
adc
adc
fstps
lea
sub
mov
rorl
push
bswap
stos
scas
sub
adc
push
jp
std
lea
arpl
dec
movsb
xchg
add
or
and
adc
adc
test
adc
pop
xor
jg
jb
push
clc
xchg
push
adc
lcall
and
lods
test
leave
sub
and
ja
lea
repnz
and
push
leave
xchg
xchg
adc
ds
mov
mov
mov
and
rcll
sti
pop
sub
jns
push
shll
xchg
pop
mov
lds
inc
divl
ss
push
xor
imul
xor
call
mov
and
loope
inc
xchg
loope
or
push
pop
inc
dec
sub
cs
sbb
sbb
dec
xlat
mov
inc
jns
xchg
mov
stc
dec
pop
pusha
push
int3
aad
adc
mov
push
jmp
sbb
scas
inc
stos
dec
xchg
aad
add
sarb
push
push
pop
adc
loop
stos
mov
mov
cmpsl
inc
cmp
mov
pusha
mov
add
mov
pop
aam
add
stos
lods
into
cmp
jg
pop
push
and
cli
data16
sarb
mov
mov
sub
add
in
add
or
lahf
cmpsb
mov
ss
xor
jle
test
xchg
jb
test
cmp
fwait
pop
fsubrl
fadd
es
cli
fwait
sbb
ror
push
pop
pop
push
or
mov
cmp
push
sbb
mov
push
inc
dec
jns
adc
inc
cs
add
or
cmpsb
pop
fisubs
sbb
inc
jnp
sub
enter
inc
adc
daa
test
jne
sub
clc
mov
push
sbb
jp
or
mov
sub
fimuls
pop
fisubrl
add
sbb
mov
dec
or
mov
in
or
ds
sti
fcmovnu
xor
shl
popf
and
and
pop
popa
xorl
test
ret
inc
ret
mov
xchg
test
sbb
daa
add
incl
cmp
xor
lcall
shll
popa
xchg
into
cmpsb
sbb
stos
sarl
xor
mov
arpl
pusha
shl
push
repz
fists
pop
adc
loop
dec
notl
repz
les
sahf
xchg
jge
fisubrs
mov
stos
call
mov
adc
xor
nop
jecxz
jae
cmp
push
jl
adc
sahf
lods
xchg
insl
mov
mov
mov
and
xchg
sti
cmp
insl
dec
fldenv
push
push
in
shll
pop
cmp
or
stos
cwtl
in
cmpsb
inc
pop
mov
jae
adc
inc
cmp
in
xchg
scas
movsb
cmp
imul
int3
loop
mov
pop
xchg
je
dec
out
scas
call
mov
inc
or
push
jp
or
inc
addr16
imul
js
je
ret
fdivrl
aad
cmpl
sbbb
inc
dec
inc
lcall
mov
add
jecxz
mov
repnz
mov
lcall
push
clc
mov
jb
sub
and
lods
loopne
les
jl
dec
inc
cmp
sub
addr16
fld
sub
sbb
xor
fs
add
stos
negl
or
push
lock
stos
ret
test
pop
out
cwtl
fwait
jg
fwait
sub
and
loope
jg
daa
lcall
pop
leave
or
fucomp
mov
inc
pushf
inc
lds
adc
sub
jno
cli
push
int3
repz
enter
leave
xchg
std
ret
mov
push
jecxz
cmpl
scas
hlt
shrb
adc
mov
int
inc
mov
lcall
out
push
out
add
xor
lods
push
loop
lcall
push
or
and
out
cmp
inc
jp
mov
mov
cmpsb
pusha
addr16
dec
push
mov
pushf
cmp
dec
xchg
repnz
scas
xor
xor
jg
push
mov
mov
cs
ret
lds
bound
je
jecxz
cmp
xor
mov
mov
fs
lret
sarl
cmp
lock
insb
dec
jb
test
and
xchg
fs
push
dec
cmpsl
jge
inc
cmp
mov
and
jnp
xor
js
add
cmp
jp
popa
in
inc
out
adc
add
insb
shll
rcrl
outsb
adc
test
cmpsb
mov
cs
mov
fcomps
inc
push
shll
arpl
xchg
xchg
mov
test
cld
scas
dec
pop
es
clc
dec
sub
and
aaa
ss
adc
sti
mov
dec
push
or
push
sbb
xchg
sbb
push
cmp
push
jmp
mov
push
cmp
and
popa
aam
negl
int3
int3
push
lret
ret
xor
push
cmpsb
mov
divb
jae
push
cmp
add
and
adc
leave
fdivrl
dec
and
loop
add
mov
jge
pop
inc
push
sbb
mov
imul
adc
popf
xchg
xchg
mov
cmp
or
inc
pop
lds
jecxz
push
xor
test
or
or
fs
insl
fadd
decl
pop
xor
mov
loop
ror
xor
test
sbb
push
xchg
mov
cmpsl
fildl
je
push
jp
enter
and
xchg
repz
icebp
sbb
and
movsb
das
sbbb
inc
or
sub
sbb
and
mov
sbb
mov
fcmovbe
xchg
scas
dec
or
decl
adc
int3
arpl
jne
rclb
bound
arpl
lea
loop
add
aaa
push
ss
movsl
xchg
push
jmp
stc
dec
addl
and
mov
es
int3
cld
push
aaa
fsubrl
sahf
mov
dec
adc
in
int3
out
stos
inc
push
imul
pop
daa
sub
in
xor
das
jno
jno
sub
les
push
cld
call
ret
loopne
jecxz
add
xchg
mov
fisttps
cmp
push
imul
jb
shlb
dec
data16
ror
cwtl
inc
mov
mov
jg
sbb
xchg
dec
inc
dec
push
xlat
sbb
or
adc
cs
inc
clc
push
and
into
and
xchg
mov
dec
rcrl
cmpl
into
hlt
sub
sub
cmp
push
mov
faddp
ret
mov
repz
fildl
jbe
push
xchg
cmp
movsl
loop
lock
mov
push
lock
sbb
cmp
hlt
add
scas
ret
sub
cmp
jle
or
jae
daa
xchg
mov
push
inc
push
loope
iret
jnp
jo
mov
icebp
aam
jle
int
sub
inc
iret
pop
jb
in
inc
in
xchg
xor
imul
mov
outsb
inc
cmc
repz
fsub
outsb
es
insl
jne
push
stos
dec
iret
dec
sub
inc
adc
jns
jnp
ljmp
pop
syscall
pop
xlat
aam
mov
mov
fwait
testl
mov
out
ret
shll
and
call
mov
push
sbb
sub
lods
test
pop
mov
scas
mull
push
pop
rorb
cmp
sbb
inc
scas
scas
sub
cmpsl
andb
jl
pop
mov
cmp
lcall
and
jge
xchg
repz
in
js
push
shl
xchg
inc
mov
iret
dec
leave
push
aad
and
loopne
or
movb
pusha
fsubl
es
das
loopne
dec
jo
mov
push
jae
jnp
sub
mov
andb
shlb
ljmp
in
xor
aaa
test
in
mov
std
aam
pop
pop
push
jg
rorl
xchg
push
pop
and
pop
loope
or
dec
add
sti
movsl
sbb
mov
xor
scas
mov
mov
sarl
cs
loope
pop
adc
das
xorl
ret
dec
push
push
aam
clc
and
shll
fwait
popf
inc
push
bound
adc
cmpl
xor
imul
add
jge
into
les
movsl
dec
shl
inc
stos
sbb
mov
cmp
dec
movsb
lock
pop
pop
fcomp
jb
xchg
sub
dec
in
sbb
pop
dec
inc
cmp
movsb
sub
movsl
cs
mov
ja
lahf
xor
lcall
jge
mov
adc
scas
addl
push
jb
push
out
adc
add
dec
jg
ficoms
das
call
adc
push
aaa
loopne
xor
lahf
mov
lock
mov
sahf
push
dec
mov
and
shll
sahf
jno
cltd
pop
push
inc
test
in
push
fwait
data16
mov
push
xchg
test
gs
jge
sbb
mov
sub
xchg
leave
jb
xor
rcrl
sbb
hlt
xor
cltd
inc
mov
outsb
jge
repnz
push
inc
or
das
shrb
pop
add
or
jge
dec
punpcklwd
jle
adc
rcll
out
movsb
mov
bound
popf
cltd
test
pop
mov
jb
sbb
daa
clc
andb
sub
ret
jecxz
mov
inc
push
stos
or
scas
mov
ret
push
fcomps
mov
aam
add
mov
pop
mov
mov
rcl
mov
pop
popa
test
or
rclb
jmp
dec
push
mov
inc
ja
push
fdivrs
out
pusha
clc
movsb
cmpsl
sbbb
push
pmaddwd
stc
ljmp
or
push
push
mov
js
fimull
mov
loop
push
in
int3
mov
push
inc
adc
movsl
mov
ret
jl
lahf
ds
mov
add
cmp
loope
fdivrs
push
mov
cwtl
gs
iret
imul
or
pop
mov
pop
xchg
push
mov
std
repnz
mov
xchg
pop
adc
adc
push
mov
pop
sbb
rclb
call
push
addb
divb
sbb
stos
push
xchg
inc
fcmovbe
push
movsb
int3
pop
ficompl
loope
jg
ljmp
and
push
stos
roll
dec
stos
sbb
int
hlt
push
sbb
das
lods
filds
sub
sbb
sub
mov
sbb
outsb
jne
sar
std
inc
out
aaa
in
jp
sbb
pop
out
push
cs
or
mov
dec
imul
test
jmp
cld
xor
outsb
cmpsl
xor
xor
fistpl
negb
insb
add
xor
mov
dec
inc
xchg
sbb
pop
dec
xchg
and
or
mov
inc
std
int3
aam
jne
sub
popf
dec
push
adc
sarl
push
rorb
int3
pop
pusha
in
xor
sub
mov
jl
outsb
stc
pop
in
push
jg
push
xor
in
lock
jg
or
iret
dec
pop
in
push
insl
push
xor
pop
jbe
adcl
outsb
or
incb
sbb
dec
xchg
xchg
mov
stos
rcr
mov
or
or
xchg
push
xor
add
xor
mov
adc
or
nop
and
decb
scas
xor
push
sbb
fsubrl
loopne
inc
insl
inc
or
jno
bound
xor
or
mov
pop
mov
adc
jb
push
ja
add
aas
sbb
in
fwait
lods
or
mov
push
sub
pop
movsl
dec
push
mov
mov
sbb
jle
mov
adcl
stc
fisttpll
xor
out
pushf
adc
fwait
mov
push
add
dec
and
dec
xchg
push
inc
mov
cmpsl
adc
fldt
mov
xchg
dec
mov
inc
fucom
mov
out
xor
mov
push
into
aam
and
das
insb
xchg
stos
mov
inc
daa
jnp
adc
test
inc
lock
js
xor
or
push
mov
hlt
pop
sbb
es
mov
xchg
fwait
sbb
mov
and
sub
in
mov
out
jno
test
enter
sahf
popa
jb
xchg
inc
jg
mov
nop
lea
xchg
jmp
pushf
jge
cld
aaa
jecxz
mov
loope
jno
mov
sub
or
sub
sub
hlt
xchg
mov
sbb
fcmovnb
loopne
out
jno
in
jnp
dec
lret
add
inc
rclb
xor
mov
push
mov
lea
mov
pop
scas
subb
shlb
and
mov
add
cltd
pusha
mov
push
jp
jne
pop
fstpl
es
xchg
jnp
fldenv
push
idivl
imul
icebp
mov
sub
std
cmp
lret
mov
sar
cmpsb
js
jno
xor
lahf
pop
es
es
std
lcall
push
mov
in
adc
pop
ss
lods
out
mov
pusha
shlb
lret
lret
xor
sbb
out
adc
push
inc
dec
mov
cmp
outsb
pop
pop
xchg
int
nop
nop
xchg
push
adc
sbb
les
idivb
loop
xchg
mov
shll
sbb
jmp
push
mov
and
jecxz
or
out
aad
adc
mov
pop
or
mul
ret
or
sti
push
fbstp
sub
jmp
mov
dec
enter
dec
test
adc
mov
inc
loope
pop
fs
aad
cmpb
rcrl
mov
add
mov
dec
mov
insb
xor
fiaddl
out
pop
xor
push
pushl
push
lret
dec
clc
mov
scas
cltd
pop
xchg
xchg
aas
fwait
inc
adc
les
push
adc
insb
cmp
iret
pop
jne
imul
jb
jmp
mov
push
mov
shll
fisttpll
xor
test
dec
scas
mov
xor
adc
into
mov
dec
and
lret
aas
lock
add
mov
mov
cmc
pop
cs
insl
pop
mov
pop
or
push
cltd
add
inc
inc
pop
movsb
pop
es
dec
repz
cmp
mov
push
jmp
stos
pop
push
out
shll
xchg
sbb
or
enter
pushf
scas
sub
adc
jns
sar
fs
jmp
arpl
lret
sub
pop
imul
adc
pushf
push
or
je
mov
mov
pop
pop
xchg
push
pop
aas
jl
sti
imul
sub
push
mov
xor
sub
jo
mov
sbb
jge
jl
pop
jp
add
dec
fs
inc
cmpsb
in
jb
sbb
cmp
ret
sub
jmp
test
mov
xor
ja
push
cmp
sub
pop
test
call
ss
push
in
lea
out
lcall
adc
or
push
pop
jbe
add
mov
xchg
in
xchg
adc
cmp
xor
jmp
dec
iret
out
out
lock
dec
mov
inc
out
cmpsl
xor
into
and
xchg
ficomps
fmull
test
and
dec
adc
dec
in
lret
jp
pop
test
or
xor
pop
add
fcomps
inc
xor
mov
or
xchg
mov
push
inc
jp
repz
push
push
ret
fs
test
not
mov
popf
push
imul
pusha
stc
fldl
mov
cmp
scas
mov
movsb
jns
std
add
test
cld
sbb
lcall
add
jae
jecxz
jnp
inc
or
sub
inc
push
push
inc
ror
scas
or
out
xchg
sbb
sub
aad
sub
mov
dec
mov
and
push
aas
pusha
fadd
inc
test
inc
mov
ja
mov
dec
sub
pop
sar
mov
lcall
ret
outsb
cltd
mov
jb
repz
mov
mov
sub
daa
and
outsl
cmp
sub
cmpsl
jecxz
dec
or
loopne
data16
test
adc
imul
push
lods
int3
cmp
adc
popf
dec
xchg
mov
and
jg
and
and
scas
in
mov
and
jecxz
movb
mov
add
sbb
outsb
jnp
aas
xlat
rolb
ss
out
add
icebp
aas
mov
pop
clc
or
sbb
paddsb
mov
xlat
mov
or
daa
mov
mov
jge
scas
lcall
mov
push
scas
cmp
icebp
mov
sahf
mov
push
push
inc
out
xchg
lcall
or
jp
insb
mov
push
iret
cmp
repz
ror
sbb
adc
pop
je
orl
pop
adc
popa
imul
xchg
dec
inc
fsubrs
js
in
mov
mov
cmp
test
add
je
iret
jmp
and
inc
aam
stos
lea
xchg
lea
fisubrl
flds
xor
adc
mov
sbb
sbb
sub
scas
scas
cs
mov
call
pop
sti
pop
push
mov
or
fdecstp
ret
adcl
mov
repnz
or
icebp
xor
dec
in
push
and
lods
or
popl
xor
jb
out
xchg
fcomi
jno
mov
ss
jge
aas
and
sbb
jbe
jae
sbb
push
push
cs
int3
xchg
jp
add
add
adc
fcoml
subl
pop
movsb
sbb
sub
stos
pop
xchg
pop
lcall
test
movsb
sub
inc
int
jle
out
jo
xorb
lret
adc
out
clc
add
xor
and
mov
xor
insb
lds
jp
aas
jg
jl
stos
out
iret
pop
pusha
aad
das
or
dec
cmp
lret
arpl
xor
in
std
mov
out
data16
shlb
jg
rcrb
int3
cmc
mov
fsts
pmulhuw
movsl
mov
jbe
fnsave
popf
pop
repnz
push
fstps
cmc
lret
pop
add
xor
aam
adc
mov
sub
das
cmpsl
lcall
ljmp
testb
sbb
mov
push
inc
adc
stos
rcrl
inc
lret
xchg
dec
dec
xor
lds
stc
sti
dec
mov
pop
jnp
rorl
aas
pop
cwtl
outsb
add
cmp
insb
xchg
xor
aaa
xor
pop
lea
lds
dec
pop
inc
dec
push
repnz
in
xchg
sub
mov
insl
mov
out
dec
sarb
add
ja
std
mov
inc
js
push
fucomi
fnsave
inc
adc
loope
or
pop
cmp
jecxz
test
push
into
adc
imul
ret
mov
dec
inc
jo
mov
sbb
movsb
adc
xbegin
xchg
lret
aad
sahf
out
xor
add
out
dec
jmp
jae
push
pushf
mov
pop
fiaddl
push
jmp
push
jae
sub
subl
scas
or
or
pop
mov
out
flds
sub
ret
jl
add
dec
push
jae
mov
cmp
and
cmp
pushf
test
mov
fwait
mov
inc
sbb
insb
js
mov
sar
inc
xchg
xchg
ljmp
cmpsl
mov
push
andl
outsl
insl
arpl
mov
stos
scas
mov
lods
sbb
mov
mov
rorl
loop
aas
andl
daa
stos
mov
outsb
pop
xchg
cmc
push
repz
cmc
dec
pop
push
lahf
fs
aaa
popf
mov
imul
das
or
pop
in
rcr
pop
jne
sub
orb
xchg
outsl
fisttps
add
in
xor
pop
enter
aad
pminsw
pop
insl
fs
stc
cmpsl
push
in
arpl
mov
jmp
ss
cld
sbb
imul
mov
pop
repz
jle
cmp
in
lahf
aaa
push
pop
outsb
add
adc
inc
out
sbb
jp
xchg
xor
xchg
or
pop
push
inc
outsb
mov
jnp
js
movsl
gs
pop
daa
mov
inc
mov
cmpsl
sub
mov
sub
imull
adc
xchg
flds
rcll
add
scas
in
das
call
adc
test
ja
cli
mov
sbb
jno
dec
faddl
xchg
jp
dec
cltd
mov
in
lock
out
fmuls
outsb
and
pop
xchg
stc
loope
xchg
or
dec
test
int
test
push
fcmovnu
and
add
cmp
push
int
sbb
ret
fcmovbe
xor
aam
imul
rcll
jg
dec
dec
jns
lret
pop
mov
aas
ret
je
loopne
pop
cltd
push
mov
into
pop
arpl
loop
mov
mov
inc
rolb
cld
addr16
mov
sarb
mov
stc
pop
fwait
cld
rcrb
xor
mov
mov
inc
and
mov
mov
in
test
ficoms
jns
lods
lock
jb
push
sub
xchg
shl
mov
divb
aad
jb
imul
mov
in
iret
pop
lock
sbb
into
jl
incb
or
test
loop
xor
pushf
jmp
or
out
push
ss
mov
push
or
pop
imulb
jo
pop
mov
cmc
hlt
int
xchg
pop
adc
iret
pushf
fdivs
jge
into
stos
cmp
repnz
mov
adc
enter
inc
lcall
js
jecxz
or
sahf
mov
lcall
adc
popa
push
out
fbstp
daa
jle
xchg
sbb
test
ljmp
lahf
repz
andb
xor
pop
jl
jle
push
push
mov
je
hlt
jle
cwtl
sbb
and
aas
int3
ds
push
cmpsl
push
mov
sub
pop
xchg
loopne
xchg
and
dec
sbb
out
les
pop
push
jae
mov
mov
jp
pop
ds
jae
jb
pop
push
test
push
xchg
ja
movsl
incl
mov
dec
js
pop
xchg
pop
ds
in
popa
mov
sbb
pusha
or
pop
cmp
dec
and
addr16
mov
adc
scas
jbe
xchg
and
int3
cmp
mov
jb
xor
xchg
sahf
pop
lods
inc
lock
push
lea
nop
dec
or
dec
jge
and
fstpt
adcl
iret
ss
cmpsb
and
dec
xchg
fdiv
lret
pusha
imulb
xor
jg
ds
daa
aaa
test
das
test
push
lret
push
imul
daa
fmuls
mov
push
cmpsl
pop
in
sub
lahf
dec
add
mov
into
sbb
sbb
inc
scas
es
das
mov
and
add
mov
dec
ljmp
in
jno
cli
dec
adc
fmuls
popf
sar
adc
bts
cs
ss
popa
lods
mov
imul
inc
jo
mov
xor
int
in
jl
mov
lret
cmpsl
call
ret
into
cmp
xchg
leave
pop
jb
xor
xor
pop
mov
pop
xor
xchg
or
test
inc
mov
in
shr
outsb
leave
sub
fistl
push
xchg
scas
setb
rclb
movsb
sub
add
xchg
out
xor
jge
mov
sti
fcoms
bound
imul
mov
test
sub
xlat
gs
mov
jnp
push
pushf
xor
loope
jns
scas
mov
cmp
xchg
dec
cs
decb
add
jno
sub
ret
mov
pop
jl
cwtl
jbe
aam
xor
dec
shlb
cli
sub
push
xchg
mov
xchg
arpl
mov
sahf
sub
or
fsubrl
call
push
mov
sub
mov
je
add
dec
jne
psubw
mov
jmp
xchg
in
pop
jl
sub
movsl
cmp
bound
cmp
loopne
mov
ficoms
and
pop
dec
dec
or
mov
jg
xchg
push
lods
negl
in
or
push
outsb
pop
xor
in
fnsave
sahf
push
jne
mov
ficoml
popf
addr16
pushf
xor
sub
mov
or
insl
mov
mov
cmpsl
ficoml
stc
xchg
fisubl
pop
jnp
or
lret
pop
cmpsl
cmp
out
mov
jl
sub
lods
rolb
out
shl
cmpl
add
push
sub
orl
ljmp
mov
in
mov
data16
xor
adc
add
jnp
ret
sti
or
cld
dec
mov
sub
dec
arpl
std
rolb
in
adc
cli
shlb
add
jmp
lods
lods
ficompl
int
push
mov
push
sbb
je
adc
sbb
sbbb
jns
stc
jnp
mov
into
fimull
and
push
push
mov
xor
jb
add
addr16
mov
push
jle
cmp
and
mov
pop
decl
je
sub
insl
mov
or
rorb
lea
pop
cmpsl
mov
sbb
pushf
pusha
inc
sarl
pop
pop
jmp
adc
sub
lret
mov
cltd
mov
xchg
push
sub
bound
cs
sbb
dec
icebp
dec
mov
inc
sub
rcrb
sbb
pop
inc
mov
fldenv
sti
push
sbb
jne
inc
inc
cmpsb
dec
pop
xor
stos
lahf
int3
repnz
int3
in
mov
jecxz
aas
inc
push
push
lahf
adc
push
mov
sbb
pshufw
jbe
cltd
mov
mov
adc
lret
pop
outsl
push
sub
inc
repz
scas
popf
int3
mov
mov
ss
js
push
mov
data16
jnp
pop
sub
mov
add
stc
jge
leave
dec
test
fadd
leave
adc
aam
aaa
scas
leave
push
inc
pop
aaa
das
inc
ss
int3
aam
cmpsb
roll
mov
jnp
outsl
clc
sbb
add
jl
lods
dec
loop
mov
adcl
jno
lods
mov
jns
test
push
out
push
jo
sahf
sub
in
stc
stos
mov
jo
jne
cli
mov
lock
xchg
divl
mov
ror
and
push
xor
jbe
sub
jmp
sub
jp
cld
popf
outsb
fstpl
loopne
sti
aam
scas
dec
pop
dec
adc
call
enter
mov
scas
mov
dec
mov
fisubs
sub
sahf
cli
sarl
daa
pop
pop
mov
jp
sub
push
popf
inc
xor
daa
adc
mov
cmp
jp
popa
push
test
sbb
pop
sbb
js
and
mov
loopne
mov
pop
scas
mov
pusha
out
loopne
icebp
mov
addl
and
xor
loop
lock
inc
movsl
icebp
into
and
mov
adc
add
add
dec
or
mov
jb
mov
cwtl
xor
xor
adc
je
sbb
out
adc
inc
aas
in
xchg
push
xchg
add
loopne
jmp
test
add
lahf
nop
fisttpl
out
and
push
sub
pop
mov
jo
jbe
rcrl
xchg
add
push
push
adc
inc
mov
dec
push
or
mov
aam
aaa
or
std
mov
jne
jg
call
dec
dec
and
sub
push
mov
out
lods
sub
jmp
add
jecxz
aaa
xchg
mov
xlat
jmp
iret
ss
out
add
sti
js
and
cltd
pop
adc
fmul
pop
mov
nop
sub
int3
leave
in
je
dec
testl
dec
add
pop
jge
into
das
daa
insb
push
jmp
cltd
pop
lret
pop
jmp
addr16
xchg
mov
mov
mov
or
xchg
and
test
sub
fidivrl
xchg
jae
inc
dec
xor
ja
lods
mov
fsts
in
rclb
mov
enter
pop
jb
iret
or
pop
sti
repz
ficomps
or
aas
pop
lods
add
fisttpll
clc
ret
xchg
pushf
mov
inc
xor
dec
cmp
je
sub
pop
adc
ret
dec
pusha
jo
adc
cmpsb
xor
int3
out
jno
add
mov
xor
mov
jp
inc
jno
rcrb
sub
xchg
push
mov
push
adc
pop
add
ljmp
loope
or
dec
mov
mov
push
sbb
sbb
sub
into
cli
or
rcll
pop
push
ret
imul
add
test
aam
push
pushf
and
jle
or
stc
inc
xchg
je
stos
mov
cmp
and
xchg
inc
outsl
jae
fcom
sub
popa
xor
sbb
movsl
mov
pop
cltd
addr16
inc
xor
mov
xchg
xor
ret
cwtl
out
hlt
loop
out
rcrl
sti
mov
mov
in
loop
xor
inc
jae
fnstsw
shlb
clc
shrb
jg
adc
outsb
mov
cmc
aam
inc
fs
xchg
inc
mov
scas
xor
inc
xor
cmpsl
icebp
test
jae
dec
jae
xchg
jns
outsl
mov
ss
sbb
push
mov
clc
imul
pushf
cmp
adc
pop
lea
movsl
mov
clc
jg
in
or
imul
shll
les
xlat
mov
fiadds
gs
and
push
mov
lahf
xchg
mov
lahf
xchg
xor
pop
stos
fs
aam
push
dec
and
out
insl
clc
push
lds
sub
push
popf
pop
rolb
lods
dec
imul
cld
add
lds
insl
stos
mov
mov
push
dec
outsb
dec
xor
repz
mov
xchg
rol
cltd
cmc
mov
icebp
mov
adc
xchg
into
push
adc
test
movsl
cld
aas
inc
jmp
or
aam
push
repnz
lcall
pop
lods
cmpsl
or
jo
pushl
mull
dec
or
ret
mov
inc
push
mov
or
cli
sbb
in
jecxz
mov
outsl
mov
add
xor
inc
inc
and
push
mov
insb
xchg
mov
pop
or
insb
xchg
adc
dec
stos
scas
pop
popf
sub
dec
xchg
fwait
mov
cmp
jp
test
xchg
in
mov
mov
jl
dec
dec
and
mov
int
nop
mov
in
data16
je
repz
mov
into
xor
xorb
fs
or
fnstsw
cmp
fdiv
cs
mov
adc
fdivrp
mov
lds
jnp
or
or
mov
enter
mov
sub
pop
repnz
orl
in
lock
push
push
jecxz
ret
xchg
mov
ljmp
xor
jnp
push
lret
in
in
clc
mov
adcl
cwtl
ficoml
jecxz
out
mov
inc
aaa
mov
ja
popa
mov
jo
mov
pop
push
in
sbb
pop
icebp
aad
fmul
outsl
in
inc
mov
cmp
aas
xor
xchg
out
mov
jl
mov
test
mov
cltd
fisubl
fstpl
jecxz
and
or
inc
dec
popa
xor
pop
ds
ret
or
pop
call
pop
subb
loop
mov
adc
fwait
add
sarb
push
mov
out
xchg
push
xor
sti
popl
hlt
icebp
sbb
cmpb
roll
or
lcall
icebp
cmp
lods
ljmp
test
xchg
jne
mov
call
sbb
inc
out
mov
pop
je
insl
pop
in
inc
inc
push
dec
mov
xor
pop
push
sbb
jp
dec
add
sarb
insl
cmpsl
cmc
and
imul
mov
xchg
enter
loop
and
pop
dec
mov
cmc
push
inc
mov
cmpsl
sbb
loopne
fcmovb
cltd
lcall
lods
lds
dec
and
push
lock
in
push
or
xor
cmova
fsts
mov
stc
data16
push
cltd
adc
sbb
xor
xchg
str
rolb
pop
or
xor
mov
pop
movsb
scas
xchg
dec
fwait
ja
outsb
lret
or
sub
xchg
cmp
mov
stc
mov
leave
scas
adc
fcomps
mov
jge
jnp
xlat
shll
test
shrl
sbb
cmc
daa
mov
addl
loop
in
les
add
cmpl
adc
movsl
lods
imul
or
sbb
mov
adc
mov
add
xchg
jg
mov
ljmp
stos
mov
std
jg
in
and
loop
popf
add
fs
mov
mov
pop
jb
pusha
cmc
push
pop
mov
stos
data16
out
mov
or
fldl2e
xchg
xchg
imul
ret
xchg
jbe
leave
movb
add
fwait
pop
dec
shlb
outsb
jae
xchg
inc
lret
pop
sub
xor
adc
pop
mov
xchg
hlt
and
cmpsl
jne
out
cmp
rcr
lods
cmpsb
xchg
pop
popf
lret
addl
insl
imull
and
fcoml
ja
pop
add
cmp
mov
ja
jbe
sarl
cmp
shl
test
inc
push
mov
push
inc
cmp
popl
lods
mov
xor
neg
pushf
jecxz
arpl
push
mov
push
jmp
pop
sbb
mov
dec
imul
push
jne
cmp
mov
cmp
xlat
and
and
mov
out
insb
loopne
sti
leave
push
insb
sub
testb
add
xchg
xchg
add
cld
test
inc
cltd
push
jecxz
cs
notl
jle
push
movsl
cmp
pop
xor
cmp
fstps
mov
xchg
adc
pop
rcrb
push
inc
pop
cmp
lahf
cwtl
popa
mov
iret
insb
fisttps
pop
sar
xchg
shll
or
push
sete
jbe
cwtl
mov
fsubs
sarb
lcall
add
ficompl
jle
cmp
jbe
adc
test
pop
mov
lret
test
sbb
aad
push
lds
data16
mov
test
pop
jle
adc
popa
mov
ffree
aad
aad
mov
testb
xlat
inc
aaa
add
jns
mov
add
pusha
rcrb
push
xlat
sub
mov
jmp
jnp
jmp
cmpsl
inc
dec
aam
inc
in
int3
ret
shrl
cmp
mov
ret
adc
sub
orl
and
mov
fwait
cltd
cld
sub
mov
and
mov
push
xorl
and
movsb
jb
loop
cli
loopne
add
jnp
pop
mov
jle
mov
push
iret
inc
and
or
jle
sbb
adc
adc
jmp
clc
lahf
test
push
inc
and
mov
fistpl
hlt
mov
push
movsl
shl
mov
mov
mov
scas
mov
nop
stc
mov
cmpsb
xor
aas
sub
xor
hlt
push
inc
arpl
cwtl
icebp
scas
xchg
pop
xchg
pop
pop
push
xor
adc
int
cmc
push
xor
cmpsb
nop
pop
jl
icebp
out
std
mov
add
aaa
fidivrs
sarl
xchg
jns
stos
mov
aad
lock
aas
add
xchg
imul
jae
imul
jmp
xchg
in
ds
aas
push
pop
imul
out
pop
push
jp
sub
roll
mov
subb
adc
lods
scas
and
cmp
pushf
sub
push
jge
je
jae
arpl
or
pushf
cmp
cwtl
loope
hlt
sub
sbb
lcall
cli
jg
inc
fsub
es
fists
sbb
nop
stc
pop
adc
mov
mov
push
cwtl
enter
inc
and
mov
adc
lret
sbb
xchg
bound
mov
cmp
inc
out
stc
imul
gs
jmp
popa
push
clc
jno
je
adc
insl
cmp
cmpsb
les
push
mov
sbbl
xor
push
data16
int3
adc
loope
xchg
pop
and
ret
shrl
movsl
cmpsl
jo
arpl
lret
mov
push
test
loopne
push
fbld
call
lret
mov
test
or
decb
addr16
jo
pop
fs
stos
mov
cli
cmp
push
jl
mov
push
cmp
add
andl
or
outsb
push
push
out
inc
jnp
or
jbe
jg
sbb
jne
test
sub
jae
lcall
lahf
or
xchg
jl
mov
sbbl
ucomiss
jle
lcall
scas
or
dec
and
iret
imul
lcall
dec
mov
sbb
lret
imulb
shl
stos
ja
cmpsb
mov
lret
adc
ds
push
push
in
roll
loop
cmp
push
sbb
jle
dec
xor
arpl
push
cli
or
cmp
push
cmp
fs
xchg
pop
push
and
cwtl
or
clc
mov
outsb
and
addr16
lret
mov
cmc
xor
in
mov
push
loopne
lock
cmpsl
orl
icebp
imul
testl
test
dec
je
roll
mov
dec
adc
mov
add
das
rcl
bswap
cmp
cmpb
test
scas
push
sbb
sbb
stos
jecxz
int3
fistpl
inc
jns
pop
jo
mov
lods
shlb
xor
xchg
jns
push
movl
dec
mov
xor
test
and
imul
xchg
stos
cld
and
adc
jae
loopne
movsl
inc
mov
cwtl
lahf
pop
daa
je
xlat
pop
mov
xchg
adc
stos
push
ror
rcrb
adc
dec
xchg
adc
das
outsb
icebp
mov
lahf
jno
mov
xor
adc
out
sub
mov
mov
and
inc
int3
xchg
adc
aas
lea
jl
divb
push
lds
aad
enter
inc
sub
aas
xchg
ret
mov
lock
push
test
push
sbb
in
add
dec
in
leave
sbb
ffree
mov
clc
cmp
stos
in
hlt
ja
fsubs
jne
jb
jmp
mov
mov
mov
in
psubb
mov
outsl
or
mov
mov
rsqrtps
xor
lods
lods
sub
movsb
mov
popa
stos
xlat
adc
cwtl
js
aam
das
push
out
push
cmp
adc
xor
jp
cmpsb
je
insl
pop
xor
sub
or
cmc
cli
and
in
sub
sub
push
jbe
push
pop
daa
into
dec
arpl
jmp
ret
sbb
sahf
pop
popa
insb
cmp
dec
xchg
shl
cmp
pusha
inc
mov
insb
das
adc
xor
jl
or
int
iret
and
mov
fst
outsl
xor
gs
cli
decb
fwait
je
in
je
add
and
insb
mov
dec
fwait
xor
ror
adc
sbb
jl
fidivrs
cmpb
nop
xchg
js
insb
iret
leave
imul
sbb
rcrb
mov
scas
rorb
adc
jg
mov
fmull
adc
jbe
mov
and
pop
and
gs
adc
mov
inc
sarl
add
cwtl
add
loop
xchg
and
mov
pop
imul
jo
arpl
jae
add
out
jge
fninit
fadds
ret
cmpsb
test
clc
xchg
jp,pn
inc
into
pop
or
lcall
cmp
inc
movsl
jge
je
cwtl
sub
jg
xchg
loopne
xor
pusha
jmp
mov
dec
daa
xchg
pop
cmp
test
adc
sarb
or
fistpll
mov
imul
xchg
adc
popa
loopne
inc
out
cmp
pop
inc
lahf
pop
ds
repnz
in
push
sub
fdivl
in
in
fadd
push
dec
push
stc
add
add
push
repz
sub
mov
inc
jle
or
jp
jp
and
out
call
xor
cwtl
mov
repnz
pop
lds
hlt
push
loope
imul
ficoml
adc
bnd
and
int
pop
cmpsb
push
push
xchg
dec
jb
movsb
mull
dec
cmc
pushf
and
loop
movsl
loopne
pop
cli
loopne
out
cmp
mov
insl
insl
cmc
gs
pop
ds
jmp
jp
pop
test
out
xchg
test
data16
dec
mov
mov
jb
pop
or
mov
add
cmp
mov
mov
or
fs
jb
or
xchg
lret
pop
sbbb
movsl
movsb
cmpsl
xchg
fdiv
insl
aad
or
stos
jbe
ljmp
imul
jo
shr
js
mov
cmp
jge
pusha
bound
cmp
mov
int3
popf
lods
adc
imul
outsl
leave
xor
iret
sar
iret
dec
or
mov
dec
pop
add
in
jg
and
or
push
mov
inc
out
adc
or
lcall
shlb
xchg
rol
sbb
push
fmul
movsl
mov
out
popf
cmpsl
add
xchg
iret
and
inc
stc
out
push
stos
ja
les
add
jno
rolb
inc
xor
cmp
adc
fldlg2
xchg
out
lret
out
mov
xchg
aam
dec
jb
add
jb
and
mov
rolb
jae
inc
push
test
mov
arpl
fiadds
mov
mov
lods
xor
push
es
push
outsl
lahf
cltd
inc
movb
cmp
je
sbb
out
dec
xor
mov
ljmp
mov
sahf
aam
dec
xor
pop
or
lret
setp
mov
mov
push
ljmp
xchg
xor
sub
shl
repz
push
sub
xchg
ret
push
cld
out
push
pop
sbb
mov
lret
dec
mov
ja
pop
loope
xor
jmp
repz
pop
xchg
inc
or
sub
shrb
pop
inc
mov
adc
xor
rolb
mov
dec
inc
les
and
pop
dec
sub
dec
scas
in
mov
addr16
mov
ljmp
jb
or
xor
int
cmpsb
aas
or
rcr
inc
jl
cld
push
and
xor
shll
and
pop
sti
dec
push
adc
xor
xchg
jnp
dec
dec
mov
xchg
mov
out
aas
mov
pushf
add
orl
rorb
add
repnz
jmp
jo
jge
jnp
lret
dec
sub
mov
add
pop
iret
xchg
les
push
mov
dec
imul
add
or
jae
stc
jo
daa
ret
inc
lret
test
cmp
xchg
mov
sub
sti
pop
and
pop
push
daa
divl
jns
inc
pop
cwtl
pusha
jns
cmpl
adc
int
cmp
call
push
pop
orl
sbb
add
shll
xchg
addl
push
aaa
negb
pusha
dec
mov
nop
xchg
push
mov
adc
pop
pop
in
jmp
insl
and
mov
shr
mov
jne
lahf
mov
sbb
fnstenv
dec
xor
lods
stos
cmp
cmp
cmp
cmpsl
aaa
das
mov
pop
pop
xor
rcrb
cmp
cmp
outsl
repnz
push
lock
test
fildl
fsts
push
repz
mov
cmp
fdivrs
out
outsl
push
inc
pop
or
test
mov
cmp
xchg
je
dec
push
pop
push
jo
ss
jp
jle
dec
cmpsb
inc
dec
ljmp
stos
jp
inc
shl
jns
jmp
pushf
pop
mov
lea
ret
bound
xchg
mov
inc
lods
ret
call
and
fstpl
mov
ljmp
mov
and
mov
push
fsubrs
in
mov
outsb
lahf
push
test
xchg
test
jp
out
fisubl
dec
adc
aam
push
sbb
int3
cmc
cmp
xor
adc
xor
sbb
push
mov
ds
jno
lahf
jge
mov
mov
mov
cmp
and
xor
inc
sub
pusha
pop
mov
add
add
and
ds
cmpsb
pusha
lcall
mov
test
jle
and
jbe
rclb
cld
loope
insl
adc
mov
pop
xchg
pop
out
fwait
pop
daa
cld
inc
xor
int
sti
mov
lahf
push
ret
js
xchg
scas
cmp
in
fwait
ds
mov
fildl
js
push
xor
insb
loop
inc
sbb
pushf
lea
mov
std
loop
and
jns
pop
pushf
lcall
sub
popa
ror
scas
in
ja
pop
shll
scas
inc
sbb
mov
ret
and
xchg
les
pop
mov
xor
ds
outsl
adcl
lahf
aas
repnz
aam
jb
repz
bound
dec
jge
push
rcrb
pop
scas
push
sub
dec
pushf
mov
cmp
sbb
inc
pop
or
sub
clc
filds
push
add
fwait
subb
jle
jbe
jns
pop
add
stos
mov
aad
mov
mov
mov
push
fsubrl
push
stc
and
xchg
cmp
ljmp
nop
out
cli
fsubrl
jo
inc
jge
mov
xchg
ds
mov
xor
pop
cmpsb
push
les
std
sub
daa
sbb
imulb
dec
dec
jecxz
insl
pop
clc
and
lret
sub
xchg
adc
movsb
sbb
hlt
xorl
adc
cmp
mov
roll
popa
pop
out
inc
cmp
or
fwait
scas
jne
leave
js
cmp
or
xor
dec
dec
cwtl
push
mov
idiv
pop
inc
stos
repnz
jp
jno
ss
push
jl
popl
dec
mov
cmp
or
dec
shrb
xchg
fdivs
xchg
xchg
and
pop
add
test
rcr
ds
and
push
and
hlt
jg
fcoml
adc
xchg
fneni(8087
cmp
repz
xchg
fildll
sub
jmp
xchg
jno
sub
jge
mov
mov
pop
popf
gs
out
sub
mov
jecxz
cmp
cwtl
stos
xor
mov
add
inc
add
add
mov
pop
jecxz
push
and
out
pop
dec
xchg
out
je
xor
inc
add
xchg
imul
xor
into
sub
sbb
insb
out
scas
scas
mov
in
push
mov
xchg
sbb
pop
inc
mov
fs
push
push
cmpsl
add
ret
add
sti
icebp
int3
xchg
movsl
push
xor
dec
outsb
enter
shr
lahf
outsb
xchg
jecxz
lds
push
and
push
adc
cmpsl
jge
mov
imul
ret
imul
xlat
mov
ret
xchg
lcall
outsb
mov
imul
push
mov
loopne
xor
mov
mov
stos
adc
jmp
nop
in
mov
pop
cmp
aad
bnd
sarl
pop
inc
int
popa
hlt
in
push
sub
lods
jb
call
mov
je
mov
and
mov
mov
clc
xor
jbe
in
les
insl
pop
dec
pop
pop
enter
movsb
adc
cmpsb
scas
cli
cmpl
into
cmc
inc
push
fcomps
xchg
sbb
dec
mov
lret
lcall
dec
mov
pop
lcall
xor
mov
out
mov
mov
adc
mov
mov
out
fcmovu
adc
mov
lahf
xchg
loopne
mov
xchg
pop
nop
mov
adc
mov
inc
push
mov
inc
lods
lcall
lock
fists
mov
sbb
dec
sbb
sbb
add
mov
sub
dec
loope
ja
cltd
sub
out
adc
mov
jmp
sbb
lods
jecxz
out
sbb
sub
lahf
jb
sahf
sbb
push
jl
mov
les
pop
push
and
or
stos
or
or
lahf
pop
aaa
into
fbld
out
ja
xchg
jg
into
and
sbbl
jp
inc
push
sub
cmpsl
test
mov
mov
into
push
inc
hlt
stos
ja
daa
flds
inc
icebp
cmp
pop
outsb
jns
es
add
scas
ljmp
cmc
call
or
or
imul
call
add
cmp
rcrb
loopne
or
jle
inc
sub
mov
clc
lret
cmpsl
sarl
rorl
insb
and
nop
push
push
insl
sbbl
ret
rorb
bound
adc
and
pushf
or
sbb
jns
fistpl
movsb
sti
lcall
in
and
out
lret
mov
push
and
jnp
icebp
pop
mov
imul
pop
push
push
inc
cmp
fwait
enter
mov
clc
out
cld
mov
jmp
mov
jge
mov
out
sbb
and
fcoms
adc
mov
sbb
popf
iret
rcll
sahf
mov
addr16
imul
cmpsb
inc
jecxz
lcall
popf
jae
hlt
push
aad
xor
jo
ret
jo
push
sti
notb
xchg
adc
pop
cmc
out
mov
pop
pop
dec
mov
xchg
incl
pop
les
sub
lretw
jl
xchg
repnz
sub
push
push
int
arpl
sub
pusha
jge
icebp
subb
mov
stos
cmp
ds
dec
js
adc
stos
inc
inc
in
clc
jle
movsl
popl
clc
jle
stos
pop
mov
std
mov
mov
loopne
in
or
dec
scas
stos
lock
mov
test
out
inc
mov
pop
movl
data16
nop
pop
xchg
clc
arpl
mov
jl
cmp
and
int
icebp
sbb
imul
aaa
in
xlat
sahf
pop
aaa
test
adc
jb
aam
lods
pop
cld
aaa
xor
ds
test
add
push
mov
inc
in
and
jb
cs
fwait
push
in
or
sbb
test
inc
imul
andb
jns
scas
lahf
pushf
add
pop
fadd
gs
or
sbb
dec
imul
shll
cltd
insl
sbb
aas
mov
sub
fstl
inc
fnstcw
mov
dec
add
in
push
jno
or
pop
mov
jbe
popa
pop
lcall
scas
cld
push
cltd
and
dec
stc
in
lds
or
or
lret
lahf
sub
pop
lea
scas
out
stos
sar
scas
cmp
jbe
pop
in
aaa
pop
inc
je
push
jl
outsl
jne
push
jge
adc
fisubl
jge
cmp
ss
scas
sbb
orl
in
or
cmp
sub
cmp
ljmp
mov
dec
cmpsl
movsb
ror
adcl
ret
cmpsl
push
out
fdivs
and
arpl
divps
xchg
out
movsb
add
push
push
shl
repz
add
jl
mov
sub
movsb
lock
jno
add
pop
cwtl
repz
xor
sbb
jno
cs
sbb
inc
or
scas
push
dec
inc
push
icebp
mov
movsb
rcrl
xchg
lods
adc
mov
xchg
aam
lahf
test
jb
je
rcrl
fs
hlt
rol
mov
and
push
bound
mov
add
dec
or
pop
lahf
xor
fsubs
dec
mov
adc
outsl
jp
fsub
sbb
aaa
iret
leave
cmp
int
pusha
popf
call
cmp
jae
sub
cmp
sbb
lret
dec
std
test
xlat
jbe
or
mov
jne
into
pop
imul
mov
dec
jno
insl
sub
cmp
out
cltd
cld
andl
mov
jge
push
cmpsl
stos
push
rcll
lds
in
cwtl
sub
inc
mov
outsl
lea
mov
and
enter
icebp
mov
ja
mov
push
cmp
pop
mov
or
and
cmpsb
outsb
lock
loopne
movsb
fidivrl
dec
aaa
aas
inc
push
push
and
ror
add
mov
sti
lret
cwtl
into
and
mov
cmp
pop
xor
cmc
loopne
jge
int
xor
rclb
in
inc
jb
inc
sbb
enter
mov
adc
inc
cmc
pushf
mov
pop
adc
fisttpl
or
cs
pop
jmp
in
cs
les
stc
jnp
jnp
sbb
dec
pop
xchg
inc
ret
pop
stc
dec
shrl
lods
or
jns
dec
daa
cmp
imul
cli
pop
and
int3
vcmpps
es
sbb
cmp
adc
adc
cwtl
rcll
xchg
ror
roll
rclb
loop
lahf
into
or
aam
push
push
mov
cmp
add
arpl
mov
int3
repnz
ds
cmp
lahf
add
xchg
xchg
push
xchg
mov
movsl
testb
add
inc
jno
in
cltd
lea
rolb
adc
pop
dec
test
aaa
lds
mov
adc
ror
shll
jno
lods
enter
jb
jmp
xor
cltd
movsb
aam
mov
movsl
insb
lahf
shrl
and
in
jp
dec
test
insl
mov
dec
xor
mov
mov
out
es
cmp
add
lods
mov
testl
nop
pop
ljmp
add
scas
mov
cmc
mov
cltd
pop
push
movsb
mov
xor
fdivrs
pop
push
fwait
mov
mov
add
cmpsl
out
loope
in
rcrl
jbe
pop
aas
mov
cwtl
pop
xor
push
pop
fidivs
inc
pop
and
xlat
arpl
mov
sarl
scas
mov
jns
dec
lret
inc
xor
inc
dec
push
loopne
call
testl
xor
push
jl
mov
in
rcrb
iret
movsb
mov
stos
mov
jno
pop
test
sub
es
cli
sbb
adc
adc
and
mov
fisttpll
add
mov
rorb
adc
dec
aad
sar
sar
not
xchg
or
sub
in
jne
popa
leave
repnz
push
cld
orb
lock
mov
flds
or
call
xchg
fcomip
cmp
lret
lahf
sub
arpl
aam
jne
sbb
cmpb
repz
in
leave
push
xlat
test
lock
imul
pop
or
cmp
ds
push
xchg
sarl
imul
pop
es
cmpsl
dec
adc
inc
into
lret
cwtl
mov
arpl
inc
fwait
lret
inc
inc
ret
roll
or
scas
insl
sbb
push
adc
mov
inc
pusha
dec
sbb
fwait
std
int
mov
inc
sbb
shlb
push
rclb
mov
xorb
clc
mov
mov
pushf
pop
or
ret
aaa
jmp
mov
pop
mov
ljmp
dec
loope
or
enter
stos
jae
pop
je
add
mov
cld
pop
inc
and
xchg
inc
nop
aad
xlat
repz
pop
pop
sub
cmp
or
cmc
fldl
xchg
cwtl
inc
xor
pusha
sahf
mov
call
pop
mov
icebp
into
xor
jge
xchg
ja
and
cmpsl
clc
bound
and
out
lea
ljmp
les
mov
popa
xlat
cmpsl
aad
lods
and
or
call
pop
addr16
cmp
adc
push
in
in
dec
mov
jbe
cmc
or
mov
nop
xchg
leave
mull
inc
ja
out
out
xchg
int
pcmpeqw
fwait
in
stos
mov
adc
addr16
sbb
dec
xchg
adc
test
inc
jns
add
pop
mov
out
les
idivb
jno
or
in
cwtl
inc
cmp
mov
xchg
test
or
sahf
fwait
enter
aas
inc
scas
aad
sbb
mov
out
outsl
cmp
xchg
sbb
mov
xlat
push
mov
pop
xchg
ret
call
xlat
mov
mov
push
pushf
ljmp
adc
and
pop
lret
es
cld
jns
gs
pop
push
fs
in
jnp
cmp
bnd
sub
sub
nop
fistpl
inc
insb
add
jae
sbb
pop
rcrl
faddl
cld
mov
outsb
push
mov
or
cmp
cmpb
pop
push
subb
add
add
out
and
mov
push
sub
mov
push
jl
or
mov
bound
mov
or
sub
xor
mov
jecxz
pusha
scas
sbb
mov
xor
or
notl
movsb
fildl
push
jle
cwtl
add
xchg
adc
inc
ljmp
mov
adc
aas
xchg
je
xor
lret
jne
int
cmp
into
test
mov
arpl
ret
push
jmp
adc
mulb
push
and
scas
loope
cmp
imul
jg
sub
shl
adc
jae
sahf
in
xchg
movl
stos
pop
jns
insl
sti
mov
mov
inc
ds
test
mov
fstpt
enter
inc
mov
icebp
leave
mov
cmp
cmp
aad
adcl
repnz
and
sbb
test
jle
out
and
lea
xchg
cmc
inc
int
fs
jmp
jle
lret
sub
js
notl
movsl
pop
adc
mov
push
xchg
lods
addr16
xor
xchg
push
bound
xchg
xor
lcall
iret
sub
outsb
cli
lcall
and
orl
pusha
out
mov
dec
imul
movsb
loop
lds
sub
das
fs
insb
dec
imulb
push
sub
das
adc
stc
lret
xor
adc
test
adc
jnp
adc
fs
outsb
mov
mov
aas
data16
divb
push
cwtl
xchg
mov
sub
mov
push
lahf
enter
das
ljmp
jne
cmpsl
inc
lcall
and
dec
cmp
fsubrp
xchg
loopne
lret
dec
cli
cs
or
pop
cwtl
shr
ret
jge
pushf
pop
adc
mov
cmpb
mov
mov
repnz
mov
mov
int3
in
push
pushf
btsl
push
out
rcrb
and
pop
dec
scas
mov
cmp
repnz
sti
int
push
mov
mov
push
fadds
mov
mov
out
xchg
cmc
cli
or
movsl
mov
add
inc
insl
rorb
mov
mov
ret
push
aam
pop
cmp
insb
push
loopne
lret
cmpsl
add
loop
push
popf
and
inc
dec
in
nop
dec
sbb
or
xchg
out
xor
or
mov
in
dec
jbe
fcomps
or
push
test
jge
jl
fdiv
xor
stos
clc
xchg
lods
or
leave
add
add
push
scas
jge
xor
mov
pop
mov
outsl
or
rolb
outsb
scas
in
fnsave
xchg
mov
imul
out
js
mov
pop
into
xor
jmp
jmp
dec
pop
jge
push
sbb
cli
ret
add
pop
pop
xor
aad
sbb
mov
shrl
in
jmp
aas
add
icebp
hlt
dec
movsl
adc
xchg
push
enter
push
test
addr16
push
xor
xchg
xchg
inc
adc
push
inc
dec
lahf
xlat
repz
mov
pop
xor
push
cmp
dec
pop
inc
mov
inc
inc
inc
movsb
repz
popa
mov
jns
in
daa
in
out
xchg
and
lea
xchg
idivb
cli
push
adc
out
je
adc
and
cmp
sbb
iret
xchg
iret
mov
das
xor
ret
in
ljmp
pop
jecxz
mov
push
xchg
sbb
sbb
repz
insb
xor
es
pop
test
call
test
aaa
in
dec
loop
sub
movsb
repz
sub
add
jp
sbbb
sub
sbb
mov
int3
cltd
js
or
or
add
loope
xor
in
das
movsl
out
adc
shll
addr16
and
mov
pop
ror
movsl
repnz
sarl
sbb
fwait
stc
inc
mov
lea
cmp
ja
repnz
mov
push
pop
rol
inc
xchg
mov
in
test
je
imul
outsb
push
jge
adcb
inc
cld
leave
jmp
xor
push
jecxz
ret
dec
mov
movsl
stos
into
xchg
aas
adc
aas
hlt
rolb
pop
cmp
push
sbb
dec
sbb
push
cltd
dec
push
ja
cmp
and
mov
xchg
enter
out
gs
push
movb
mov
incb
cltd
and
mov
adc
mov
xlat
fiadds
mov
dec
cwtl
test
pusha
dec
sbb
xor
pop
ret
pop
repz
adc
add
jmp
rclb
pop
cmp
sub
inc
adc
xchg
push
stos
xlat
test
sbb
out
scas
das
rcrb
jg
hlt
cmpsl
lea
data16
enter
movsb
imul
lea
jae
pushf
mov
clc
pop
xor
push
out
jmp
mov
inc
stos
sbb
pop
push
mov
in
cmpsl
pop
jecxz
loope
adc
inc
adc
loop
mov
sbb
leave
adc
in
xor
add
clc
xchg
push
loope
mov
mov
push
daa
out
fiaddl
push
scas
icebp
inc
add
movsl
fsts
xchg
iret
pop
cmpsb
mov
mov
sbb
jns
dec
sarl
dec
jp
add
data16
inc
dec
mov
pushf
movsb
jae
xor
xchg
mov
cwtl
jge
fisubl
fwait
popa
imul
add
popf
es
pop
pop
repz
mov
in
shll
stos
mov
push
push
and
mov
test
cmpsl
bound
aad
and
add
loopne
cltd
mov
dec
lcall
cli
int3
or
mov
bound
lcall
out
lods
adc
sbb
xlat
pop
push
or
xchg
xchg
sbb
xchg
in
push
dec
mov
mov
fdivr
fisttps
xchg
adc
jmp
add
mov
adc
jle
loopne
xchg
movsl
add
adcb
mov
cmc
aam
mov
ljmp
repz
xor
popf
cwtl
cltd
ficoml
and
inc
mov
mov
fld
in
rcrl
inc
lahf
vmread
adc
loop
add
dec
pop
lods
gs
imul
push
hlt
mov
iret
rolb
jae
cmp
inc
or
lds
shll
mov
scas
out
xchg
and
stc
outsb
cmp
es
ret
push
ds
aam
outsl
push
xor
mov
test
sub
cmp
jmp
mov
ljmp
ja
int3
in
repnz
aas
xchg
pop
mov
jo
dec
adc
inc
dec
adc
shlb
leave
mov
movsl
push
aaa
and
mov
fwait
push
bts
sub
fstpt
cli
jbe
jmp
mov
lret
int3
push
xchg
add
out
les
inc
sti
lea
aaa
icebp
jo
pop
idivl
stc
sub
leave
fimuls
pop
out
inc
sub
bound
jl
movsl
cmp
jb
xchg
in
into
ljmp
mov
inc
bswap
fiadds
insb
ret
or
adc
xchg
dec
pop
xor
cltd
fdiv
lret
popa
xchg
mov
shlb
or
sahf
inc
or
xchg
xor
sbb
mov
enter
push
cli
jbe
iret
ss
mov
pop
cltd
mov
fwait
out
jo
push
dec
inc
push
cmp
std
cs
fs
xor
decl
xor
testb
rcl
jae
aad
jae
cs
push
je
pusha
pusha
leave
mov
iret
cmp
es
xchg
inc
or
test
dec
adc
dec
aad
nop
pop
and
icebp
jecxz
test
push
sbb
pop
pop
lahf
cwtl
movsb
arpl
outsl
jnp
jo
lret
loop
mov
pop
shrl
ret
and
adc
jb
js
loopne
xchg
push
inc
int
dec
sti
mov
cmpsl
or
std
xor
cmp
push
pushw
and
ljmp
int3
add
add
jg
pop
xchg
mov
lea
xchg
sbb
push
push
stos
cmpsl
jp
xor
inc
sbb
test
loop
repnz
add
inc
jl
jae
push
sub
cmpsb
pop
ds
cli
sub
out
loope
jl
fsub
mov
lods
rcrl
sbb
jo
out
mov
adc
add
dec
lock
xchg
jg
in
xchg
data16
or
cmp
cmpsb
fbstp
jns
pop
mov
cltd
inc
stos
dec
arpl
decb
movsl
pop
jnp
arpl
pop
dec
decl
pop
sub
in
mov
add
mov
fcmovb
sti
mov
adc
mov
mov
pop
insb
cwtl
lcall
add
xchg
aas
roll
jns
cmp
in
insl
sub
je
aam
stos
cs
shlb
push
imul
cmp
xor
stos
hlt
pop
pop
dec
mov
js
loope
mov
ds
in
adc
inc
jle
sti
leave
fsubs
insl
aas
dec
rclb
pop
fildll
pop
xor
clc
rclb
inc
inc
push
call
pop
bnd
lock
in
jns
int
aaa
mov
bound
cwtl
iret
repz
xor
dec
sub
sbb
fxch
mov
add
out
into
xchg
push
fsubp
adc
aaa
push
xor
lret
pop
pop
jge
leave
jg
roll
sbb
ss
ret
in
mov
mov
dec
repz
rcl
enter
aaa
mov
bound
ja
push
sbb
jne
lcall
les
mov
xlat
je
or
xor
push
out
fs
jne
cmp
sbb
jge
cmpsl
cltd
sub
dec
in
loop
jecxz
xchg
sbb
mov
dec
adc
cmp
fistpll
cmp
jmp
xchg
sti
daa
ja
jmp
and
pop
dec
push
addr16
push
jmp
jbe
pop
dec
icebp
sub
shrb
xchg
ret
jb
and
jge
daa
cmp
cmpsb
sub
fdivrs
out
adcl
sub
fwait
loopne
out
sarl
test
sbb
push
shlb
leave
movsb
pop
sti
and
bound
sbb
and
adc
mov
push
jb
lret
inc
fisubl
test
pop
insl
pop
mov
loop
mov
pop
lds
sbb
mov
sub
pop
out
bound
lret
aas
adc
jecxz
sub
xchg
scas
jbe
dec
xchg
dec
ja
pop
test
mov
lret
push
idiv
cld
jne
mov
pusha
jne
iret
mov
mov
sbb
mov
popf
pop
and
ds
sbb
aas
fucomp
mov
jmp
xlat
xor
lds
xor
stos
fdivs
or
cmp
imul
roll
xor
inc
xlat
sahf
popa
xchg
lahf
and
aam
sbb
nop
mov
cmp
push
cld
out
in
cmpb
cmp
pop
dec
sub
sbb
and
addr16
pop
sub
dec
into
pusha
dec
jo
std
sub
sub
push
xor
jo
cli
test
scas
adc
dec
mov
lahf
addr16
in
pop
je
out
incl
aaa
cmp
decb
push
test
mov
scas
outsl
nop
jae
decb
adc
shr
rcrl
and
popa
lock
insl
aam
mov
inc
dec
dec
add
sbb
mov
mov
andl
lock
pandn
push
js
fstps
sbb
pop
insb
out
sbb
mov
lahf
and
frstor
jge
in
mov
mov
pop
pop
dec
jg
xlat
inc
cmp
clc
mov
pushl
leave
into
fbstp
sub
loopne
adcl
cmpsb
test
les
mov
icebp
lret
pop
stos
mov
dec
push
mov
sub
sub
stos
popa
subb
cmp
aad
mov
rcll
mov
inc
adc
pop
mov
gs
paddusw
and
mov
adc
dec
flds
cmpl
pop
sub
lahf
mov
push
xor
repnz
pop
iret
inc
jle
mov
push
cmp
mov
call
jmp
sbb
clc
loope
mov
mov
in
jno
adc
lods
into
stc
add
call
mov
repz
pushf
xlat
jg
outsb
xchg
mov
repz
dec
or
sbb
mov
frstor
or
popa
mov
add
mov
mov
sub
or
pop
test
repnz
xor
inc
sub
lret
jbe
popa
loope
repnz
loopne
cli
into
jg
cmp
inc
xlat
ja
outsl
cmp
pop
mov
adc
xchg
repz
repnz
gs
mov
aam
add
xchg
jle
sbb
aad
outsl
arpl
push
popf
mov
cld
das
inc
scas
inc
and
push
stos
divb
add
xchg
push
pop
scas
filds
cld
imull
pusha
push
or
cmp
mov
data16
popf
jge
sub
push
xor
sub
and
rclb
in
inc
push
xchg
push
adc
adc
int
cwtl
fstpt
jmp
adc
aad
lret
xchg
decl
lock
dec
push
stos
xor
mov
sbb
mov
and
add
or
and
lret
xchg
shl
push
mov
jae
mov
fstpt
sub
jecxz
fidivs
out
xor
or
pop
push
xor
shl
int
lods
or
mov
loope
aas
sub
pop
jg
iret
pop
jnp
jl
mov
popf
mov
cmp
in
cmp
lret
in
mov
test
outsl
or
jno
add
sub
mov
scas
sub
movsl
fst
pop
inc
jle
lahf
pop
xor
pop
in
mov
out
sti
repz
out
and
in
shll
cs
xchg
xchg
sbb
or
mov
jnp
cmpsb
xchg
xorb
or
dec
negb
test
cwtl
add
dec
gs
outsl
inc
stos
cmp
mov
or
fcomps
push
push
push
add
in
es
popa
ret
orl
dec
adc
movsl
out
and
mov
dec
xor
cmp
jg
les
jae
xor
adc
inc
sub
pop
out
lods
test
cmp
mov
lret
jbe
pop
add
arpl
dec
lods
push
push
les
mov
xchg
lcall
pop
push
sbb
call
or
daa
pusha
xchg
lret
stos
jg
mov
sub
insb
push
push
or
jg
adc
scas
idiv
jnp
push
mov
push
ror
lcall
mov
test
xor
test
add
aad
mov
jmp
jb
icebp
mov
mov
xchg
das
ds
mov
not
out
fstp
pop
xor
and
fwait
int
inc
fists
sahf
and
call
cmp
pushf
sub
cmp
cmpb
adc
dec
sub
xor
inc
jmp
mov
fisubrl
scas
xchg
arpl
rorl
mov
mov
jmp
cwtl
push
cmp
mov
xlat
push
daa
fwait
cmp
mov
ja
sub
dec
fistpl
or
stos
xor
insl
lock
gs
imul
mov
sarl
cmc
mov
jno
call
repz
in
ljmp
sub
hlt
repnz
adc
cli
sub
push
out
xor
fsubr
add
ja
ja
rclb
pmuludq
dec
mov
add
mov
push
pop
jne
shrb
addr16
xchg
or
aad
inc
pop
fsin
out
inc
sbb
test
jge
pop
daa
popf
outsl
cltd
nop
mov
sbb
orb
jno
sbb
loopne
pop
adc
mov
adc
dec
icebp
sarb
aad
mov
out
sbb
mov
fidivl
push
jge
dec
dec
pop
jbe
mov
aam
mov
sbb
gs
popf
dec
mov
fcompl
cmp
inc
lahf
cld
stc
lret
mov
dec
fsts
outsb
repz
fs
mov
pop
cli
xor
cmp
or
arpl
push
cmpb
rol
mov
fs
addr16
mov
movsl
outsb
pusha
ret
mov
ret
jns
jmp
mov
js
adc
in
jmp
xchg
lcall
js
and
popf
pop
lods
add
mov
push
pop
outsl
hlt
rcr
mov
sbb
jo
rcl
jns
push
or
mov
cmc
cwtl
and
fst
push
mov
jnp
adc
mov
dec
dec
loopne
mov
es
sub
pop
out
jb
rcll
in
shlb
nop
mov
out
adc
loope
lret
adc
push
clc
mov
shll
pushf
jo
ljmp
push
cmpb
fbstp
and
sub
xchg
dec
xchg
jnp
test
dec
cmp
mov
xlat
pop
fwait
or
inc
push
jl
clc
cld
jo
data16
push
push
xchg
xor
je
cmp
cmp
out
fcoms
je
add
mov
data16
jns
or
xchg
cltd
fcmovnbe
lods
cld
inc
test
add
push
jle
pop
enter
popf
mov
or
inc
jo
push
push
jb
inc
push
jb
in
rorb
mov
push
xchg
xchg
aad
movsb
out
aas
inc
nop
jne
fidivl
aaa
adc
mov
fidivrl
hlt
adc
popa
cmp
xrstor
adc
mov
ret
popa
inc
test
jae
orl
bound
mov
dec
xchg
sub
xor
mov
dec
movsb
or
lea
mov
lcall
cmp
xchg
ret
xor
cmp
arpl
or
insb
push
rorb
xlat
int3
loopne
enter
push
aaa
sbb
insb
bndldx
push
mov
push
add
cltd
jle
jns
jge
add
hlt
out
push
rorb
mov
push
fadds
loopne
neg
addl
fists
and
into
mov
fwait
das
in
jge
insl
fadd
leave
lea
adc
cmp
push
sar
lret
aam
outsb
adc
stc
jns
jle
imulb
fmuls
cmp
jnp
push
mov
mov
push
push
dec
and
hlt
adcb
scas
pop
lahf
pusha
jmp
mov
ds
jle
call
outsl
in
movsl
cmp
or
jns,pt
dec
mov
inc
dec
mov
inc
xchg
ss
scas
sbb
push
stos
push
inc
xchg
mov
push
sbb
mov
fidivrs
inc
flds
inc
mov
loop
cs
jnp
daa
jnp
mov
mov
popf
sub
or
lahf
xchg
lcall
pop
xchg
push
mov
add
dec
pusha
outsl
in
fcmovne
cmc
stos
jg
mov
xchg
es
std
or
jb
xor
dec
pop
mov
sub
adc
negl
lods
push
addb
lret
ret
pop
std
addr16
idivb
loopne
out
pop
clc
lea
mov
and
mov
add
push
shlb
and
push
sbb
inc
add
xor
imul
pop
mov
pop
xchg
into
mov
cwtl
pop
jmp
mov
push
mov
mov
clc
sbb
lahf
das
push
arpl
in
mov
sbb
bound
mov
pusha
loope
iret
pusha
push
add
out
sbb
jbe
int3
repnz
aas
jmp
xor
jl
outsb
push
sti
sahf
mov
mov
out
inc
bound
sti
faddl
xchg
leave
out
fldenv
in
fisttpl
or
mov
fnstenv
into
outsl
push
xchg
xchg
jo
jg
sbb
push
jne
push
jle
fsubrl
dec
les
test
mov
mov
sbb
sti
cs
nop
repz
aam
or
shll
pushf
adc
scas
lods
cmp
or
xor
or
cmp
cld
sbb
adc
sahf
xor
mov
and
xor
scas
xchg
movsb
cmp
popf
lock
outsb
in
cmpl
inc
push
cmp
inc
xchg
lret
xor
and
dec
es
unpckhps
test
push
pop
adc
or
xchg
shll
xchg
outsb
jle
cmp
or
add
pop
int3
inc
pop
lret
stos
ret
call
mov
enter
mov
in
mov
shll
mov
sub
loop
aad
adc
cld
mov
or
faddl
orb
xor
mov
shll
movsl
cmpsb
divl
call
xor
lock
shl
and
push
adc
sarb
repnz
mov
in
mov
negb
sbb
outsl
call
xchg
fdivl
jb
or
shlb
dec
fs
mov
loop
xor
add
push
cmp
lods
outsb
xor
ret
aaa
sbb
pop
cld
lcall
int
cmpsl
cmp
cwtl
mov
sub
cmp
repnz
xchg
fcoml
jge
or
adc
add
arpl
lock
mov
inc
cli
mov
pop
test
mov
add
insl
xchg
fnstsw
sar
lret
push
flds
jo
ss
push
test
xlat
aaa
and
loopne
sub
cmpsb
or
xor
and
xor
push
xor
sub
sahf
cmpsb
outsl
stc
lods
sti
xor
dec
jg
lret
lods
out
dec
lret
bound
loope
fadds
sbb
pop
lods
push
push
inc
repz
sub
jmp
jae
inc
adc
inc
push
loope
decb
xchg
sbb
scas
push
les
add
bound
dec
jno
mov
adcl
jo
mov
lret
cmp
xor
pop
push
add
popa
inc
xchg
shr
or
sbb
xor
push
popf
fimuls
jae
xchg
out
fmul
jmp
addr16
aam
test
andl
int3
mov
xchg
mov
out
daa
popa
lods
xchg
out
lea
cmp
and
pop
gs
sarl
sub
mov
sub
or
ss
cmp
inc
fists
jns
or
ljmp
add
dec
leave
sub
ljmp
sub
jge
xchg
mov
pop
or
in
add
nop
push
ret
add
xchg
adc
out
pop
or
xor
push
movsl
add
dec
mov
out
push
fldenv
mov
hlt
mov
inc
xor
outsl
xor
xchg
xchg
test
scas
outsb
shlb
dec
ret
ss
scas
push
pop
push
pop
mov
imul
aad
jp
jae
cmpsb
jae
ret
enter
scas
cmpsb
xchg
loope
stos
jbe
mov
mov
inc
or
xchg
jmp
push
cld
scas
mov
mov
cmc
mov
push
add
or
ret
in
enter
ljmp
test
cmp
out
mov
mov
mov
aad
fwait
mov
divb
and
lea
sub
scas
sub
aas
pop
dec
mov
lods
push
dec
lods
out
cmp
cmpsb
shr
dec
call
fmul
call
pushf
adc
in
idiv
out
imul
add
cmp
enter
test
test
mov
mov
aas
aas
push
popa
stos
sbb
lea
gs
adc
shll
mov
jle
aaa
xor
sbb
lcall
xor
dec
shrl
sub
es
pop
push
cmpl
call
or
ret
mov
xor
sub
loop
xchg
or
into
inc
mov
push
or
fsts
push
cwtl
mov
ljmp
lahf
test
out
jnp
repnz
cwtl
sbb
aas
fcomps
lcall
cltd
adc
sub
shrl
push
addr16
inc
imul
and
mov
addr16
aam
xchg
xlat
call
fwait
rcll
sub
scas
push
adc
add
cmc
dec
sbb
daa
shrb
std
ss
mov
mov
les
outsb
inc
out
mov
int3
push
idivl
xchg
adc
xchg
xchg
rcr
sti
data16
loopne
xchg
cs
shlb
push
ret
lock
mov
rolb
inc
cmpsl
subb
inc
lret
cs
movsl
mov
mov
dec
lea
push
push
xlat
lock
sub
mov
sub
test
int
mov
shrb
adc
pop
push
sub
cwtl
jecxz
int3
imul
dec
fcomi
mulb
ret
je
lock
cltd
push
sub
or
rorb
lret
adc
sbb
aam
loop
test
out
mov
cmpsb
imul
incl
xchg
sbb
cmpl
or
aad
mov
mov
jno
pop
in
arpl
adc
movsb
fsubs
loope
mov
test
aad
outsl
mul
sbbl
inc
mov
std
outsb
pop
in
mov
mov
insl
roll
call
scas
dec
xor
jae
pop
neg
stc
inc
jb
push
stc
fwait
lds
jb
mov
fiadds
mov
pushf
sahf
cmpsb
daa
lret
mov
push
cli
push
ret
rclb
mov
xor
mov
dec
or
es
pop
add
mov
adc
mov
mov
call
mov
popa
xchg
in
cmp
mov
mov
cli
pop
pop
ret
add
outsb
and
lret
inc
cmp
mov
rcll
sbb
data16
rcr
dec
sub
mov
or
bnd
jmp
ss
or
fcoml
fs
or
inc
stos
mov
jl
sti
mov
mov
sub
icebp
sahf
repnz
repz
push
lret
inc
inc
ss
jl
push
mov
or
stos
cmp
pop
in
mov
lds
rcll
aaa
xchg
push
lcall
dec
jp
insb
inc
mov
sub
in
pop
aas
dec
orb
ja
je
dec
jmp
ret
jl
ja
jl
outsl
mov
xchg
jnp
cmp
mov
adc
xlat
pop
sbbb
xchg
pushf
dec
test
pop
sub
or
or
rcll
push
pop
fdivrs
dec
and
addr16
and
sahf
lcall
das
inc
sub
imul
loope
mov
repz
cmpl
xor
pop
push
aaa
xor
mov
mov
imul
jb
sub
sub
push
cmp
sarb
scas
push
sbb
fisubrs
addl
push
inc
jp
lds
mov
or
push
lret
pop
push
fistps
cwtl
lock
xor
xlat
aam
xchg
sub
ret
mov
xor
out
dec
daa
popa
or
pop
xor
cmpsl
ss
mov
jo
outsb
mov
sub
rcll
cs
mov
dec
es
push
in
cmc
inc
pop
mov
leave
inc
fimull
xor
mov
mov
jo
adc
push
outsl
push
insl
cld
stc
insl
lahf
ret
mov
push
adc
out
xor
push
fistpll
adc
adc
sbb
loope
movsl
insb
cmp
xchg
rcl
test
xchg
xor
push
clc
out
mulb
popf
fmull
aaa
pop
push
sbb
loopne
push
imulb
pop
shlb
popa
pop
mov
adc
jne
loopne
sbb
mov
mov
repnz
inc
movsl
and
in
mov
mov
xor
sahf
scas
cmpsl
add
lods
push
into
test
xor
icebp
divb
mull
mov
inc
xlat
and
out
lock
or
or
cli
push
test
in
add
iret
daa
mov
adc
dec
push
cmp
pusha
movsl
outsl
xchg
fisubrs
mov
sub
pop
clc
and
inc
in
orb
sbb
lcall
and
pop
mov
or
jno
imul
js
jp
and
in
push
push
cwtl
arpl
pop
mov
inc
jnp
or
mulb
adc
test
mov
cmp
pop
cmpsl
jo
cmp
aas
ret
inc
dec
mov
sub
enter
lahf
test
aaa
shll
push
jle
add
data16
je
push
repz
fwait
imul
lods
mov
adc
gs
repz
out
mov
cmp
stos
loop
jns
movsl
pop
cltd
pop
mov
mov
or
and
fdivr
je
out
inc
inc
xchg
sub
adc
aad
dec
or
mov
cld
cmp
jb
add
push
repnz
cmp
dec
mov
in
cmp
in
mov
cmp
ljmp
shrb
mov
push
lea
adc
das
cmp
jno
inc
nop
stos
sarl
cld
iret
cld
pusha
and
add
stos
movsl
push
push
jnp
adc
je
pop
test
icebp
xchg
repnz
iret
sbb
rcll
scas
sub
xor
and
jo
mov
pop
incb
and
sti
lcall
mov
ljmp
inc
add
lods
push
mov
xchg
pop
mov
cmp
fwait
cmp
in
in
mov
mov
xor
sti
loop
rcrb
xorb
dec
pop
int3
adc
jb
sub
push
mov
jp
insl
pop
cwtl
mov
rolb
sub
sub
addr16
ljmp
jecxz
rolb
fsts
push
pavgw
arpl
jnp
sub
jbe
insl
cltd
jecxz
ss
jecxz
and
test
pop
int3
icebp
hlt
mov
or
xor
add
cmp
dec
lcall
and
dec
stc
inc
in
bound
bound
icebp
in
mov
jmp
mov
ficompl
dec
mov
rcll
dec
bnd
mov
and
jg
jmp
inc
and
and
cwtl
cmc
push
adc
dec
sti
xchg
inc
sbb
and
xor
sub
scas
mov
and
enter
cmp
ja,pn
jnp
pop
sti
pop
test
xor
mov
mov
cmp
jp
add
mov
adc
push
or
pop
in
daa
pop
int3
shl
mov
mov
inc
cmp
and
mov
int3
insb
mov
pop
push
je
push
inc
or
in
pop
aam
ret
add
jne
outsb
push
sub
lahf
xchg
scas
mov
movsb
pop
jmp
rcl
shl
add
popf
imul
xchg
cmp
xor
aam
int3
outsb
shll
jnp
xchg
aas
add
jecxz
out
test
jo
ss
push
aaa
insb
daa
cwtl
in
dec
popa
inc
frstor
push
pop
daa
out
popf
xor
insl
std
fs
ds
repz
push
push
insl
pop
cmc
jbe
out
xlat
or
xor
pop
push
shl
gs
dec
push
dec
jnp
mov
das
cmpsl
mov
mov
xchg
xor
cli
cmpsb
mov
fsubs
and
jnp
ret
xchg
mov
mov
ds
sub
jge
push
mov
repz
inc
sbb
dec
mov
mov
icebp
outsl
outsl
jnp
iret
dec
scas
lea
mov
push
or
cmp
or
adc
arpl
and
sahf
data16
dec
scas
mov
jl
mov
addb
iret
clc
lcall
popf
jg
xchg
mov
push
xchg
lahf
in
ret
repz
mov
adc
inc
inc
add
push
cmp
loope
sub
xchg
pop
lcall
ss
xchg
movsl
xchg
sbb
jno
decl
repz
movsl
popa
and
aaa
push
jne
jne
jge
lahf
push
es
ljmp
jbe
jo
test
daa
rolb
popf
push
mov
inc
sub
push
or
inc
sub
cmp
sub
adc
sbb
jge
insb
inc
movsl
scas
sub
pop
aam
fsubrl
or
xchg
dec
lcall
lock
mov
mov
idivb
xor
dec
shll
add
pop
sub
adc
jns
push
push
jo
push
cmpsl
or
test
pop
xchg
cmp
cs
test
into
pop
ficoml
mov
mov
pop
sub
mov
dec
jecxz,pn
pop
cs
test
repnz
shrb
mov
add
out
testb
sub
or
jmp
lock
jge
test
lahf
mov
xchg
xor
mov
lods
enter
lods
rclb
jp
out
xchg
test
fs
xor
cli
mov
int
sbb
int3
testb
inc
sub
adc
icebp
mov
data16
stos
out
push
add
cld
fwait
sbb
xor
mov
cli
repz
ss
inc
sub
shlb
pop
nop
ss
das
xor
or
pop
mov
sahf
mov
xchg
adc
andb
popf
repnz
mov
fs
adc
cld
icebp
leave
std
ficompl
mov
add
jle
int
push
leave
scas
and
aam
test
outsl
ja
cmp
iret
js
sub
xlat
jns
push
cmp
inc
push
ds
sbb
pop
sub
ja
or
mov
and
pop
push
pop
inc
cmp
test
iret
adc
push
or
lcall
fs
pop
es
das
fiaddl
and
mov
fistpl
dec
mov
jl
jnp
push
bswap
add
icebp
adc
stos
lods
dec
mov
scas
aaa
pop
cld
nop
jns
cld
mov
fwait
mov
addr16
les
sub
cmp
pop
repnz
xor
pusha
call
xor
rcrl
mov
ret
pusha
fs
adc
orb
cmpsb
jno
jns
pop
and
mov
rolb
fcmovu
arpl
popa
cmpsl
out
std
mov
inc
dec
sbb
stc
mov
dec
mov
sub
pop
add
std
mov
cld
xchg
xchg
pop
incb
cld
cwtl
push
mov
rclb
dec
push
pop
sub
jbe
leave
sub
mov
lock
in
pushf
cmpsb
cwtl
fidivl
das
sub
jns
loop
push
xor
jae
out
std
or
sbbl
sbb
mov
mov
pushf
lods
xor
cmp
int
cli
pop
popf
mov
sbbl
scas
fldt
add
cwtl
pop
outsl
in
fwait
dec
lods
push
je
adc
mov
jno
adc
xchg
inc
aad
lcall
pop
mov
nop
cmpsl
test
and
aad
mov
inc
dec
iret
cmc
mov
pop
or
sub
push
dec
aam
xchg
xchg
mov
inc
std
jns
je
mov
xchg
jbe
sbb
es
out
decl
movsl
jmp
xchg
xor
sub
or
lahf
fisttpl
pop
pusha
jnp
jp
adc
adc
lock
loope
pop
mov
sbb
mov
jns
and
xchg
imul
shl
or
xchg
out
outsl
lret
shr
pop
pop
into
or
lods
stc
xor
aaa
xor
mov
leave
push
pop
pusha
jg
dec
pusha
push
ja
lods
sbb
and
cltd
sti
mov
xabort
fdiv
out
sbbl
pop
fdivrp
mov
dec
test
outsb
cmp
add
fsubp
stos
mov
mov
pop
xorl
ja
sahf
popa
cmp
cld
out
fistps
mov
cmp
ljmp
in
repnz
sbb
mov
repz
mov
test
push
shrb
add
mov
stos
dec
lret
ud0
pop
js
add
and
mov
test
dec
cmovnp
cmpsb
lret
xor
pop
ret
or
call
cmp
iret
ja
insl
jno
sub
aad
frstor
int
icebp
int3
pop
cmpb
or
cmc
gs
test
aam
jns,pt
pop
and
xchg
ror
mov
movsb
out
mov
notb
stos
cmpsl
cmc
and
jecxz
fst
jno
mov
mov
stos
xchg
cltd
dec
decb
xor
cs
aas
divb
out
sbb
push
in
dec
or
imul
dec
xor
mov
push
sti
aas
jp
adcb
lahf
mov
add
jbe
popa
xor
mov
not
test
mov
sub
sbb
add
sbb
or
adc
push
pop
mov
mov
ds
dec
and
mov
cld
aad
jmp
push
stos
sub
call
mov
xchg
jno
shlb
ret
push
cs
into
lret
push
mov
inc
xchg
push
jo
mov
sbb
mov
add
lcall
mov
pop
mov
loopne
fwait
nop
cmp
push
add
cwtl
cmp
ss
fs
into
lods
dec
and
sbb
aad
ret
pop
xor
aas
ds
orb
cltd
subl
mov
out
in
push
xor
push
add
or
jne
mov
scas
leave
arpl
dec
add
leave
push
dec
fimull
outsb
inc
cmp
dec
shll
sahf
pop
out
aas
push
sbb
bound
cld
mov
or
std
stc
inc
cltd
repz
std
or
mov
mov
js
push
push
mov
stc
xchg
adc
or
dec
mov
gs
or
mov
outsl
or
cmp
xor
sbb
in
faddl
ret
repnz
sub
add
scas
mov
add
mov
cmp
into
mov
and
out
loopne
xchg
push
rclb
pop
jle
cld
mov
fisubrl
orl
adc
sbb
dec
add
fwait
xchg
cli
and
outsl
inc
movsb
pop
push
and
into
loop
jno
inc
push
scas
xchg
stos
clc
sub
mov
mov
movsl
sbb
jbe
test
and
push
xor
std
mov
pop
add
xlat
test
or
inc
cmp
out
sub
push
add
cltd
jb
fwait
lahf
cmp
lret
jno
lock
das
in
mov
jnp
fisttpll
sbb
cltd
scas
push
push
mov
leave
outsb
sub
insl
movsl
sbb
jbe
lahf
ljmp
fwait
cmp
xchg
mov
mov
cmp
push
lods
mov
pop
push
sbb
addr16
adc
repz
mov
pop
add
adc
fstl
out
xchg
cs
andps
mov
pushf
in
iret
dec
iret
sbb
push
add
xor
into
sub
push
push
dec
shr
leave
stos
lret
dec
test
mov
stos
movsb
stc
movsb
cmp
mov
or
mov
int3
xchg
jmp
xchg
ror
test
xchg
and
adc
or
pop
lcall
xchg
imul
mov
insb
sub
pop
push
in
clc
outsl
jge
mov
mov
xchg
push
out
mov
mov
inc
mov
cltd
mov
lods
pop
enter
dec
mov
and
xchg
out
adc
push
test
sbb
movsl
inc
add
loope
call
dec
dec
sub
mov
adc
inc
ljmp
insl
stos
mov
push
inc
jbe
sti
jb
aad
mov
pop
pop
es
jae
mov
mov
pop
inc
loope
and
push
in
or
lods
mov
sub
sub
dec
push
and
and
jns
xor
cld
and
int
xchg
mov
mov
mov
push
sbb
sbb
pop
int3
shlb
jb
lods
cmp
ret
bound
movsl
cmpl
jno
jg
lahf
sbb
mov
pop
insb
sub
add
cmp
out
xchg
adc
leave
lock
mov
mov
push
xchg
xchg
loopne
lret
out
jbe
ds
fmull
ds
add
loopne
adc
test
aaa
mov
dec
stc
mov
cmpsl
data16
and
notb
mov
dec
lds
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
jns
mov
push
xchg
out
jge
sub
jp
stc
daa
sub
out
jns
sub
xor
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jno
sub
mov
inc
sub
shll
movsb
pusha
xchg
dec
jecxz
loope
xchg
push
adc
movsl
push
cwtl
dec
cmp
lcall
nop
dec
mov
fidivs
stos
cmp
sub
clc
jns
sub
and
ds
mov
fcoml
mov
sbb
pop
mov
dec
jo
xor
insb
int
ret
sub
stos
sti
jmp
cmc
sub
dec
and
inc
mov
mov
mov
call
movsb
push
xchg
adc
lock
sub
lahf
and
mov
data16
xlat
sbb
dec
in
push
xchg
sbb
sub
arpl
pop
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
add
bound
pop
jecxz
mov
nop
push
xchg
out
jns
sub
test
clc
sub
pop
xchg
out
jge
sub
nop
push
rcrb
jns
cmp
test
and
jns
sub
test
stc
daa
xchg
push
nop
out
jns
sub
test
xchg
out
jne
sub
test
fsts
arpl
jne
push
xchg
idiv
jns
sub
test
daa
adcb
clc
jns
sub
test
and
jns
sub
mov
sbb
jns
sub
test
daa
nop
push
xchg
out
jns
and
popf
xor
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
mov
sub
test
sub
push
and
pop
test
stc
daa
rclb
aad
arpl
pop
test
pop
nop
push
jno
mov
adc
test
inc
nop
push
xchg
daa
repz
jp
test
and
jns
sub
test
daa
mov
xchg
pop
or
inc
jo
xor
daa
xchg
push
xchg
out
jne
sub
xchg
push
xchg
out
jns
sub
test
daa
nop
adc
arpl
pop
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
sub
test
daa
nop
push
xchg
out
jns
adcl
daa
nop
inc
xchg
out
fstpt
jmp
stos
push
sub
pop
xchg
pusha
stos
mov
mov
repz
cld
add
test
imul
mov
fidivl
xor
jnp
xchg
mov
xor
bound
xlat
cmp
bound
movsb
mov
ret
sar
cmp
test
fwait
test
daa
mov
or
cmp
movsb
push
aad
daa
test
pop
or
int
mov
out
jmp
mov
xor
lahf
pop
sub
shrl
out
push
xlat
rclb
gs
mov
xor
mov
ds
mov
xchg
mov
cli
adc
test
lcall
aad
test
sbb
push
les
dec
rcl
clc
mov
xchg
stc
lock
ljmp
mov
push
xor
cmp
mov
inc
xor
mov
popf
std
xlat
mov
pop
ret
adc
mov
sar
push
sub
mov
sbb
enter
xlat
hlt
in
push
push
in
popa
mov
mov
in
emms
int3
scas
sub
inc
cmp
mov
in
push
jg
mov
test
insb
xchg
xor
popa
call
lret
or
pusha
push
sti
in
in
xchg
add
jg
jp
jnp
push
or
push
xchg
loope
loope
ss
jg
jne
xor
cs
add
andb
inc
scas
bound
leave
imul
subl
pop
sbb
jbe
inc
das
add
call
cmp
mov
outsl
out
and
lcall
std
sbb
mov
test
in
sti
xchg
sub
dec
mov
jnp
sbb
fmull
out
rclb
daa
mov
sahf
add
out
cli
inc
and
rcrb
xchg
or
or
outsl
mov
nop
in
not
adc
pop
andl
push
jmp
in
aam
insl
test
mov
mov
mov
int3
out
fisubrs
xor
cmpb
jle
dec
in
push
dec
loopne
paddb
not
push
inc
mov
push
fdiv
xchg
push
sub
xor
test
push
xchg
mov
rorl
shl
call
sub
sub
ljmp
and
mov
js
push
insb
pop
rcl
mov
pushf
dec
sub
sbb
nopl
mulb
aad
lcall
lahf
jb
stos
jno
dec
imul
xchg
sarl
ja
movsb
rorb
mov
push
negl
sub
mov
or
lods
and
mov
xchg
das
sub
test
jp
stc
or
fistps
jp
stos
cmp
cmp
mov
jmp
push
pushf
jno
fstpl
movl
cs
sarl
aaa
es
data16
gs
mov
mov
sub
fincstp
dec
xchg
movsb
pop
dec
das
mov
mov
mov
cmp
mov
mov
mov
inc
and
mov
adc
jecxz
mov
dec
fisubrl
sub
push
stos
mov
or
int3
mov
stc
pop
mov
sub
mov
repnz
push
fcom
sbbl
add
cmp
incb
jl
popa
es
dec
and
fisubs
adc
sbb
ljmp
leave
cmp
dec
mov
shll
pop
jns
mov
mov
pop
ja
lcall
rcr
clc
scas
push
lods
jb
lds
cmpsb
or
movsl
shll
pop
and
addr16
jg
loope
push
or
jae
and
imull
and
mov
xchg
cmp
inc
je
push
adc
sar
hlt
jns
fildll
adc
jno
cmp
in
test
inc
mov
dec
outsb
jl
mov
add
arpl
lcall
in
jae
cmc
xlat
xchg
xchg
cmp
adc
cmp
push
push
and
or
sti
push
dec
shrl
ret
sub
push
adc
cs
rcl
lahf
fdivs
hlt
xor
call
mov
jp
fs
bound
pop
mov
cld
cmp
cmp
lods
hlt
int
dec
and
mov
push
cmp
fwait
xchg
jle
stos
pop
add
xorl
loop
loope
xor
inc
or
flds
dec
imul
pop
or
aas
push
and
jns
mov
lods
push
push
test
xor
lods
dec
sub
or
push
mov
ss
lds
icebp
pop
mov
in
sarb
and
xchg
lahf
test
cmp
imul
and
and
adc
pop
inc
sub
in
movsl
or
push
mov
cmp
pop
adc
mov
cmp
pop
push
add
pusha
std
mov
and
dec
and
insb
clc
add
out
sti
push
rcll
les
push
adc
cmp
and
loop
mov
inc
outsb
in
rcrb
icebp
insl
ja
stc
js
out
in
cmp
andb
jbe
cwtl
ja
dec
mov
jne
and
dec
pop
repnz
sahf
sbbb
mov
dec
xchg
sub
or
sarb
mov
ja
inc
repz
mov
mov
jns
out
cmp
shrl
test
inc
mov
pop
xchg
lods
jecxz
cmp
pusha
mov
and
or
add
insb
xchg
xor
push
inc
mov
cmc
or
sbb
mov
pop
sub
out
dec
xchg
andl
cmp
jns
mov
inc
fs
out
or
es
insl
aas
sbb
or
leave
jb
inc
addl
imul
mov
cmpsb
jbe
mov
inc
aas
mov
and
cmp
into
push
jp
in
or
jecxz
adc
fcomps
pop
leave
lcall
inc
push
rcll
imulb
aaa
mov
out
mov
cld
push
test
inc
iret
add
gs
stos
loop
xchg
xor
repz
int
cmpsl
xor
dec
lea
scas
xor
cmc
xchg
stos
and
mov
aaa
mov
jb
sbb
cmp
fwait
int3
inc
leave
jbe
inc
hlt
sub
sbb
jmp
xchg
inc
add
xor
fcmovu
adc
cmc
insb
mov
dec
into
fimuls
cmp
out
mov
mov
repz
pop
out
clc
dec
pop
clc
dec
sbb
push
aas
testl
dec
cmp
cltd
ds
pop
cmp
add
push
jnp
fisubs
lret
xchg
xchg
out
push
inc
jg
insl
xchg
mov
pop
shll
add
dec
ljmp
sarb
cmp
sub
aaa
mov
loopne
iret
ret
add
pop
add
test
aaa
stos
cs
or
neg
lret
add
inc
sbb
jo
add
push
daa
ja
jge
pop
fiaddl
and
aam
dec
ss
mov
sub
pand
jne
pop
into
loopne
or
push
icebp
scas
fldl2e
xor
mov
pop
mov
sbb
push
mov
and
lcall
mov
inc
inc
adc
popf
cmpsb
inc
cwtl
fnstsw
or
push
lds
add
shl
rcl
adc
repnz
fildll
imul
ds
jb
int3
jb
add
and
shrl
js
lods
or
out
push
loop
mov
inc
inc
push
orl
cwtl
xor
adc
call
mov
or
pop
push
push
cld
mov
dec
in
inc
jle
std
inc
sbb
push
js
inc
push
inc
jns
orb
es
push
pushf
cmp
es
mov
cli
push
xchg
imul
cmp
loop
jp
lret
mov
aad
fisubl
or
out
sub
mov
loop
mov
push
xor
mov
mov
ja
mov
fs
and
adc
mov
mov
les
aad
jno
movsl
stos
lds
lcall
jle
pop
dec
pop
push
mov
jecxz
hlt
sub
repz
stc
sbb
repz
xchg
inc
jmp
mov
test
loopne
sbb
xchg
js
and
cs
mov
push
popf
das
jecxz
cltd
bound
add
jmp
mov
xchg
imul
repz
nop
cmpsl
cli
repnz
jnp
adc
loopne
cmp
out
ss
out
xchg
pop
into
shrl
push
mov
shr
sahf
aad
je
lea
xor
ret
or
adc
push
fsubl
mov
test
sbbb
movsb
mov
out
pop
stc
aad
mov
mov
xchg
ficoml
push
addb
les
and
sub
movd
push
and
sub
jge
xchg
test
jl
lret
bound
jg
jp
insb
jmp
out
aad
lock
nop
loop
and
cmp
frstor
inc
jnp
daa
ds
stc
xor
sbb
in
cld
aas
cmp
loop
push
mov
push
mov
pop
xchg
andb
in
outsl
jl
sub
mov
mov
insb
cmpsb
ret
push
sub
sbb
faddl
jle
lock
pop
repnz
xchg
imul
ljmp
stc
and
xchg
mov
test
cs
loop
xor
pop
fistps
add
pop
sub
jp
xchg
pop
push
fdiv
add
adc
addr16
int3
cltd
data16
mov
and
and
push
xor
dec
mov
inc
or
bound
xchg
clc
lahf
arpl
jge
push
in
shlb
stc
sahf
repnz
shrb
add
or
scas
mov
movsb
rcrb
daa
push
int
and
push
fdivrl
cmp
adc
pushf
push
push
lock
add
mov
orb
sub
lea
mov
scas
dec
mov
pop
push
mov
dec
sbb
or
push
add
data16
repnz
mov
lea
add
stc
pop
cld
sub
repz
je
iret
gs
imul
ja
bound
mov
lods
pop
popa
push
pushl
mov
inc
fstp
or
ret
dec
les
shll
mov
lock
push
adc
sbb
mov
popa
xchg
cltd
mov
test
sbb
xlat
jns
fsubl
mov
nop
int
test
lock
adc
mov
pop
mov
jge
jo
sub
mov
push
cld
shlb
cltd
in
cmpsl
mov
inc
dec
in
push
cmc
orl
sbb
popf
arpl
mov
cmc
push
mov
xchg
pop
adc
jnp
cmp
dec
cmpsl
jl
movsb
dec
add
cmpsb
scas
arpl
mov
xor
pop
popa
or
jmp
sbb
cmp
outsb
js
xor
jmp
xlat
lock
lea
mov
add
cmp
push
xor
inc
lahf
int3
out
dec
inc
aam
loopne
enter
dec
mov
sbb
xchg
roll
call
or
mov
jae
push
dec
testb
dec
mov
or
rcrb
cltd
leave
mov
adc
adc
push
nop
aad
xchg
cmp
mov
pop
push
mov
shll
enter
mov
xchg
pop
xchg
mov
pop
ds
ja
pop
decl
into
or
and
icebp
add
aaa
nop
jns
or
push
jns
mov
gs
fwait
movsl
jmp
and
xchg
push
decl
sub
mov
lock
ret
fcomps
pop
xchg
pop
cli
xchg
fstps
sub
and
adc
cmp
stos
lods
mov
das
sbb
repnz
in
ret
aam
mov
ljmp
lret
push
in
loop
xor
cli
es
dec
lahf
xor
das
test
sbb
push
adc
push
in
sbb
pop
stc
movsl
stos
sbbl
xchg
out
enter
pop
jecxz
jbe
jp
sbb
push
pusha
repnz
mov
out
xchg
in
outsl
adc
into
adc
pusha
shr
cmp
popl
xchg
pop
adc
pop
stos
xchg
test
push
jnp
adc
cmp
stos
enter
sub
push
ds
mov
xchg
rol
adc
adc
imul
adc
mov
mov
mov
and
push
xchg
add
jmp
push
mov
insb
lock
in
shlb
xchg
fcmovne
sub
roll
adc
and
xchg
adcb
xor
adc
into
mov
or
out
cmp
aad
xchg
jle
fisubrs
or
out
and
sti
in
pop
inc
mov
out
push
out
pop
into
shl
jmp
sub
xchg
dec
negb
inc
daa
or
add
push
sbb
popf
xchg
in
push
adc
pop
cmpsl
or
xor
xchg
jb
push
mov
push
or
loope
movsb
aad
subb
sub
ret
sbb
iret
add
call
mov
test
xlat
rorb
cwtl
hlt
push
mov
xchg
popf
sbb
jns
jne
push
and
je
jle
pop
std
push
imul
or
mov
out
sub
aaa
inc
adc
les
rol
xor
sbb
sub
and
stos
ffree
test
cmc
xchg
out
fstp
cwtl
cmpsb
pop
stc
stc
push
aaa
fwait
loopne
pop
cli
inc
out
mov
sub
sbb
test
mov
stc
mov
mov
mov
mov
scas
jne
mov
nop
dec
js
inc
or
mov
pop
mov
pusha
push
aam
aas
into
test
sub
das
pop
lds
fistps
leave
lret
ss
int
xchg
outsl
adc
sbb
pop
adc
mov
dec
xchg
jle
js
jne
js
jl
dec
ficoms
xor
or
mov
imul
loopne
push
mov
mov
and
fs
xchg
divl
into
ja
push
xor
add
stos
ja
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
